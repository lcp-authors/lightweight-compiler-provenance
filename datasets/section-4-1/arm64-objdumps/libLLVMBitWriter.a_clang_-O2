In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMBitWriter.a_clang_-O2:

BitWriter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMWriteBitcodeToFile>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x20, x19, [sp, #112]
   c:	add	x29, sp, #0x60
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	stur	wzr, [x29, #-16]
  1c:	bl	0 <_ZNSt3_V215system_categoryEv>
  20:	stur	x0, [x29, #-8]
  24:	cbz	x20, 38 <LLVMWriteBitcodeToFile+0x38>
  28:	mov	x0, x20
  2c:	bl	0 <strlen>
  30:	mov	x2, x0
  34:	b	3c <LLVMWriteBitcodeToFile+0x3c>
  38:	mov	x2, xzr
  3c:	add	x0, sp, #0x8
  40:	sub	x3, x29, #0x10
  44:	mov	x1, x20
  48:	mov	w4, wzr
  4c:	bl	0 <_ZN4llvm14raw_fd_ostreamC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
  50:	ldur	w8, [x29, #-16]
  54:	cbz	w8, 60 <LLVMWriteBitcodeToFile+0x60>
  58:	mov	w19, #0xffffffff            	// #-1
  5c:	b	80 <LLVMWriteBitcodeToFile+0x80>
  60:	add	x1, sp, #0x8
  64:	mov	x0, x19
  68:	mov	w2, wzr
  6c:	mov	x3, xzr
  70:	mov	w4, wzr
  74:	mov	x5, xzr
  78:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
  7c:	mov	w19, wzr
  80:	add	x0, sp, #0x8
  84:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
  88:	mov	w0, w19
  8c:	ldp	x20, x19, [sp, #112]
  90:	ldp	x29, x30, [sp, #96]
  94:	add	sp, sp, #0x80
  98:	ret

000000000000009c <LLVMWriteBitcodeToFD>:
  9c:	sub	sp, sp, #0x70
  a0:	stp	x29, x30, [sp, #80]
  a4:	str	x19, [sp, #96]
  a8:	add	x29, sp, #0x50
  ac:	cmp	w2, #0x0
  b0:	cset	w2, ne  // ne = any
  b4:	cmp	w3, #0x0
  b8:	mov	x19, x0
  bc:	cset	w3, ne  // ne = any
  c0:	add	x0, sp, #0x8
  c4:	bl	0 <_ZN4llvm14raw_fd_ostreamC1Eibb>
  c8:	add	x1, sp, #0x8
  cc:	mov	x0, x19
  d0:	mov	w2, wzr
  d4:	mov	x3, xzr
  d8:	mov	w4, wzr
  dc:	mov	x5, xzr
  e0:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
  e4:	add	x0, sp, #0x8
  e8:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
  ec:	ldr	x19, [sp, #96]
  f0:	ldp	x29, x30, [sp, #80]
  f4:	mov	w0, wzr
  f8:	add	sp, sp, #0x70
  fc:	ret

0000000000000100 <LLVMWriteBitcodeToFileHandle>:
 100:	sub	sp, sp, #0x70
 104:	stp	x29, x30, [sp, #80]
 108:	str	x19, [sp, #96]
 10c:	add	x29, sp, #0x50
 110:	mov	x19, x0
 114:	add	x0, sp, #0x8
 118:	mov	w2, #0x1                   	// #1
 11c:	mov	w3, wzr
 120:	bl	0 <_ZN4llvm14raw_fd_ostreamC1Eibb>
 124:	add	x1, sp, #0x8
 128:	mov	x0, x19
 12c:	mov	w2, wzr
 130:	mov	x3, xzr
 134:	mov	w4, wzr
 138:	mov	x5, xzr
 13c:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
 140:	add	x0, sp, #0x8
 144:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
 148:	ldr	x19, [sp, #96]
 14c:	ldp	x29, x30, [sp, #80]
 150:	mov	w0, wzr
 154:	add	sp, sp, #0x70
 158:	ret

000000000000015c <LLVMWriteBitcodeToMemoryBuffer>:
 15c:	sub	sp, sp, #0x90
 160:	stp	x29, x30, [sp, #112]
 164:	stp	x20, x19, [sp, #128]
 168:	add	x29, sp, #0x70
 16c:	sturb	wzr, [x29, #-16]
 170:	stp	xzr, xzr, [sp, #48]
 174:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
 178:	ldr	x10, [x10]
 17c:	sub	x8, x29, #0x20
 180:	mov	w9, #0x1                   	// #1
 184:	add	x20, x8, #0x10
 188:	str	w9, [sp, #64]
 18c:	add	x9, x10, #0x10
 190:	add	x1, sp, #0x20
 194:	mov	w2, wzr
 198:	mov	x3, xzr
 19c:	mov	w4, wzr
 1a0:	mov	x5, xzr
 1a4:	stp	x20, xzr, [x29, #-32]
 1a8:	stp	x9, xzr, [sp, #32]
 1ac:	str	x8, [sp, #72]
 1b0:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
 1b4:	ldr	x8, [sp, #56]
 1b8:	ldr	x9, [sp, #40]
 1bc:	cmp	x8, x9
 1c0:	b.eq	1cc <LLVMWriteBitcodeToMemoryBuffer+0x70>  // b.none
 1c4:	add	x0, sp, #0x20
 1c8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 1cc:	ldr	x8, [sp, #72]
 1d0:	mov	x2, sp
 1d4:	ldp	x0, x1, [x8]
 1d8:	mov	w8, #0x101                 	// #257
 1dc:	strh	w8, [sp, #16]
 1e0:	add	x8, sp, #0x18
 1e4:	stp	xzr, xzr, [sp]
 1e8:	bl	0 <_ZN4llvm12MemoryBuffer16getMemBufferCopyENS_9StringRefERKNS_5TwineE>
 1ec:	ldr	x19, [sp, #24]
 1f0:	add	x0, sp, #0x20
 1f4:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 1f8:	ldur	x0, [x29, #-32]
 1fc:	cmp	x0, x20
 200:	b.eq	208 <LLVMWriteBitcodeToMemoryBuffer+0xac>  // b.none
 204:	bl	0 <_ZdlPv>
 208:	mov	x0, x19
 20c:	ldp	x20, x19, [sp, #128]
 210:	ldp	x29, x30, [sp, #112]
 214:	add	sp, sp, #0x90
 218:	ret

BitcodeWriter.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	str	x21, [sp, #16]
       8:	stp	x20, x19, [sp, #32]
       c:	mov	x29, sp
      10:	mov	x20, x0
      14:	str	x1, [x0]
      18:	mov	w0, #0x60                  	// #96
      1c:	mov	x19, x1
      20:	bl	0 <_Znwm>
      24:	mov	w8, #0x2                   	// #2
      28:	movi	v0.2d, #0x0
      2c:	stp	x19, xzr, [x0]
      30:	str	xzr, [x0, #88]
      34:	str	w8, [x0, #16]
      38:	stur	q0, [x0, #24]
      3c:	stur	q0, [x0, #40]
      40:	stur	q0, [x0, #56]
      44:	stur	q0, [x0, #72]
      48:	str	x0, [x20, #8]
      4c:	add	x0, x20, #0x10
      50:	mov	w1, #0x3                   	// #3
      54:	mov	w2, #0x1                   	// #1
      58:	mov	w19, #0x1                   	// #1
      5c:	bl	0 <_ZN4llvm18StringTableBuilderC1ENS0_4KindEj>
      60:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
      64:	ldr	d0, [x9]
      68:	mov	x8, x20
      6c:	str	xzr, [x8, #152]!
      70:	sub	x9, x8, #0x30
      74:	stp	xzr, xzr, [x8, #-80]
      78:	stp	x8, xzr, [x8, #-16]
      7c:	str	x19, [x8, #8]
      80:	strh	wzr, [x8, #24]
      84:	stp	xzr, xzr, [x8, #40]
      88:	str	xzr, [x8, #32]
      8c:	stur	x9, [x8, #-64]
      90:	stur	d0, [x8, #-56]
      94:	ldr	x20, [x20, #8]
      98:	mov	w10, #0x42                  	// #66
      9c:	ldp	w8, w9, [x20, #8]
      a0:	lsl	w10, w10, w8
      a4:	add	w8, w8, #0x8
      a8:	orr	w21, w9, w10
      ac:	cmp	w8, #0x20
      b0:	str	w21, [x20, #12]
      b4:	b.cc	124 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x124>  // b.lo, b.ul, b.last
      b8:	ldr	x19, [x20]
      bc:	ldp	w8, w9, [x19, #8]
      c0:	sub	x9, x9, x8
      c4:	cmp	x9, #0x3
      c8:	b.hi	e4 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0xe4>  // b.pmore
      cc:	add	x2, x8, #0x4
      d0:	add	x1, x19, #0x10
      d4:	mov	w3, #0x1                   	// #1
      d8:	mov	x0, x19
      dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
      e0:	ldr	w8, [x19, #8]
      e4:	ldr	x9, [x19]
      e8:	str	w21, [x9, x8]
      ec:	ldp	w8, w9, [x19, #8]
      f0:	add	x8, x8, #0x4
      f4:	cmp	x8, x9
      f8:	b.hi	3d8 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3d8>  // b.pmore
      fc:	str	w8, [x19, #8]
     100:	ldr	w8, [x20, #8]
     104:	mov	w9, #0x42                  	// #66
     108:	neg	w10, w8
     10c:	cmp	w8, #0x0
     110:	add	w8, w8, #0x8
     114:	lsr	w9, w9, w10
     118:	csel	w21, wzr, w9, eq  // eq = none
     11c:	and	w8, w8, #0x1f
     120:	str	w21, [x20, #12]
     124:	mov	w9, #0x43                  	// #67
     128:	lsl	w9, w9, w8
     12c:	cmp	w8, #0x18
     130:	orr	w21, w9, w21
     134:	stp	w8, w21, [x20, #8]
     138:	b.cs	144 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x144>  // b.hs, b.nlast
     13c:	add	w8, w8, #0x8
     140:	b	1b0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x1b0>
     144:	ldr	x19, [x20]
     148:	ldp	w8, w9, [x19, #8]
     14c:	sub	x9, x9, x8
     150:	cmp	x9, #0x3
     154:	b.hi	170 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x170>  // b.pmore
     158:	add	x2, x8, #0x4
     15c:	add	x1, x19, #0x10
     160:	mov	w3, #0x1                   	// #1
     164:	mov	x0, x19
     168:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     16c:	ldr	w8, [x19, #8]
     170:	ldr	x9, [x19]
     174:	str	w21, [x9, x8]
     178:	ldp	w8, w9, [x19, #8]
     17c:	add	x8, x8, #0x4
     180:	cmp	x8, x9
     184:	b.hi	3d8 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3d8>  // b.pmore
     188:	str	w8, [x19, #8]
     18c:	ldr	w8, [x20, #8]
     190:	mov	w9, #0x43                  	// #67
     194:	neg	w10, w8
     198:	cmp	w8, #0x0
     19c:	add	w8, w8, #0x8
     1a0:	lsr	w9, w9, w10
     1a4:	csel	w21, wzr, w9, eq  // eq = none
     1a8:	and	w8, w8, #0x1f
     1ac:	str	w21, [x20, #12]
     1b0:	cmp	w8, #0x1c
     1b4:	str	w8, [x20, #8]
     1b8:	b.cs	1c4 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x1c4>  // b.hs, b.nlast
     1bc:	add	w8, w8, #0x4
     1c0:	b	220 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x220>
     1c4:	ldr	x19, [x20]
     1c8:	ldp	w8, w9, [x19, #8]
     1cc:	sub	x9, x9, x8
     1d0:	cmp	x9, #0x3
     1d4:	b.hi	1f0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x1f0>  // b.pmore
     1d8:	add	x2, x8, #0x4
     1dc:	add	x1, x19, #0x10
     1e0:	mov	w3, #0x1                   	// #1
     1e4:	mov	x0, x19
     1e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     1ec:	ldr	w8, [x19, #8]
     1f0:	ldr	x9, [x19]
     1f4:	str	w21, [x9, x8]
     1f8:	ldp	w8, w9, [x19, #8]
     1fc:	add	x8, x8, #0x4
     200:	cmp	x8, x9
     204:	b.hi	3d8 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3d8>  // b.pmore
     208:	str	w8, [x19, #8]
     20c:	ldr	w8, [x20, #8]
     210:	mov	w21, wzr
     214:	str	wzr, [x20, #12]
     218:	add	w8, w8, #0x4
     21c:	and	w8, w8, #0x1f
     220:	mov	w9, #0xc                   	// #12
     224:	lsl	w9, w9, w8
     228:	cmp	w8, #0x1c
     22c:	orr	w21, w9, w21
     230:	stp	w8, w21, [x20, #8]
     234:	b.cs	240 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x240>  // b.hs, b.nlast
     238:	add	w8, w8, #0x4
     23c:	b	2ac <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x2ac>
     240:	ldr	x19, [x20]
     244:	ldp	w8, w9, [x19, #8]
     248:	sub	x9, x9, x8
     24c:	cmp	x9, #0x3
     250:	b.hi	26c <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x26c>  // b.pmore
     254:	add	x2, x8, #0x4
     258:	add	x1, x19, #0x10
     25c:	mov	w3, #0x1                   	// #1
     260:	mov	x0, x19
     264:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     268:	ldr	w8, [x19, #8]
     26c:	ldr	x9, [x19]
     270:	str	w21, [x9, x8]
     274:	ldp	w8, w9, [x19, #8]
     278:	add	x8, x8, #0x4
     27c:	cmp	x8, x9
     280:	b.hi	3d8 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3d8>  // b.pmore
     284:	str	w8, [x19, #8]
     288:	ldr	w8, [x20, #8]
     28c:	mov	w9, #0xc                   	// #12
     290:	neg	w10, w8
     294:	cmp	w8, #0x0
     298:	add	w8, w8, #0x4
     29c:	lsr	w9, w9, w10
     2a0:	csel	w21, wzr, w9, eq  // eq = none
     2a4:	and	w8, w8, #0x1f
     2a8:	str	w21, [x20, #12]
     2ac:	mov	w9, #0xe                   	// #14
     2b0:	lsl	w9, w9, w8
     2b4:	cmp	w8, #0x1c
     2b8:	orr	w21, w9, w21
     2bc:	stp	w8, w21, [x20, #8]
     2c0:	b.cs	2cc <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x2cc>  // b.hs, b.nlast
     2c4:	add	w8, w8, #0x4
     2c8:	b	338 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x338>
     2cc:	ldr	x19, [x20]
     2d0:	ldp	w8, w9, [x19, #8]
     2d4:	sub	x9, x9, x8
     2d8:	cmp	x9, #0x3
     2dc:	b.hi	2f8 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x2f8>  // b.pmore
     2e0:	add	x2, x8, #0x4
     2e4:	add	x1, x19, #0x10
     2e8:	mov	w3, #0x1                   	// #1
     2ec:	mov	x0, x19
     2f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     2f4:	ldr	w8, [x19, #8]
     2f8:	ldr	x9, [x19]
     2fc:	str	w21, [x9, x8]
     300:	ldp	w8, w9, [x19, #8]
     304:	add	x8, x8, #0x4
     308:	cmp	x8, x9
     30c:	b.hi	3d8 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3d8>  // b.pmore
     310:	str	w8, [x19, #8]
     314:	ldr	w8, [x20, #8]
     318:	mov	w9, #0xe                   	// #14
     31c:	neg	w10, w8
     320:	cmp	w8, #0x0
     324:	add	w8, w8, #0x4
     328:	lsr	w9, w9, w10
     32c:	csel	w21, wzr, w9, eq  // eq = none
     330:	and	w8, w8, #0x1f
     334:	str	w21, [x20, #12]
     338:	mov	w9, #0xd                   	// #13
     33c:	lsl	w9, w9, w8
     340:	cmp	w8, #0x1c
     344:	orr	w21, w9, w21
     348:	stp	w8, w21, [x20, #8]
     34c:	b.cs	358 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x358>  // b.hs, b.nlast
     350:	add	w8, w8, #0x4
     354:	b	3c4 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3c4>
     358:	ldr	x19, [x20]
     35c:	ldp	w8, w9, [x19, #8]
     360:	sub	x9, x9, x8
     364:	cmp	x9, #0x3
     368:	b.hi	384 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x384>  // b.pmore
     36c:	add	x2, x8, #0x4
     370:	add	x1, x19, #0x10
     374:	mov	w3, #0x1                   	// #1
     378:	mov	x0, x19
     37c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     380:	ldr	w8, [x19, #8]
     384:	ldr	x9, [x19]
     388:	str	w21, [x9, x8]
     38c:	ldp	w8, w9, [x19, #8]
     390:	add	x8, x8, #0x4
     394:	cmp	x8, x9
     398:	b.hi	3d8 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE+0x3d8>  // b.pmore
     39c:	str	w8, [x19, #8]
     3a0:	ldr	w8, [x20, #8]
     3a4:	mov	w9, #0xd                   	// #13
     3a8:	neg	w10, w8
     3ac:	cmp	w8, #0x0
     3b0:	add	w8, w8, #0x4
     3b4:	lsr	w9, w9, w10
     3b8:	csel	w9, wzr, w9, eq  // eq = none
     3bc:	and	w8, w8, #0x1f
     3c0:	str	w9, [x20, #12]
     3c4:	str	w8, [x20, #8]
     3c8:	ldp	x20, x19, [sp, #32]
     3cc:	ldr	x21, [sp, #16]
     3d0:	ldp	x29, x30, [sp], #48
     3d4:	ret
     3d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     3dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     3e0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     3e4:	add	x0, x0, #0x0
     3e8:	add	x1, x1, #0x0
     3ec:	add	x3, x3, #0x0
     3f0:	mov	w2, #0x43                  	// #67
     3f4:	bl	0 <__assert_fail>

00000000000003f8 <_ZN4llvm13BitcodeWriterD1Ev>:
     3f8:	stp	x29, x30, [sp, #-48]!
     3fc:	stp	x22, x21, [sp, #16]
     400:	stp	x20, x19, [sp, #32]
     404:	mov	x29, sp
     408:	ldrb	w8, [x0, #176]
     40c:	cbz	w8, 4c0 <_ZN4llvm13BitcodeWriterD1Ev+0xc8>
     410:	mov	x19, x0
     414:	ldr	x0, [x0, #184]
     418:	cbz	x0, 420 <_ZN4llvm13BitcodeWriterD1Ev+0x28>
     41c:	bl	0 <_ZdlPv>
     420:	mov	x21, x19
     424:	ldr	x20, [x21, #88]!
     428:	ldr	w8, [x21, #8]
     42c:	cbz	w8, 444 <_ZN4llvm13BitcodeWriterD1Ev+0x4c>
     430:	lsl	x22, x8, #3
     434:	ldr	x0, [x20], #8
     438:	bl	0 <free>
     43c:	subs	x22, x22, #0x8
     440:	b.ne	434 <_ZN4llvm13BitcodeWriterD1Ev+0x3c>  // b.any
     444:	ldr	w8, [x19, #144]
     448:	ldr	x20, [x19, #136]
     44c:	cbz	w8, 468 <_ZN4llvm13BitcodeWriterD1Ev+0x70>
     450:	lsl	x22, x8, #4
     454:	ldr	x0, [x20], #16
     458:	bl	0 <free>
     45c:	subs	x22, x22, #0x10
     460:	b.ne	454 <_ZN4llvm13BitcodeWriterD1Ev+0x5c>  // b.any
     464:	ldr	x20, [x19, #136]
     468:	add	x8, x19, #0x98
     46c:	cmp	x20, x8
     470:	b.eq	47c <_ZN4llvm13BitcodeWriterD1Ev+0x84>  // b.none
     474:	mov	x0, x20
     478:	bl	0 <free>
     47c:	ldr	x0, [x21], #16
     480:	cmp	x0, x21
     484:	b.eq	48c <_ZN4llvm13BitcodeWriterD1Ev+0x94>  // b.none
     488:	bl	0 <free>
     48c:	add	x0, x19, #0x10
     490:	bl	0 <_ZN4llvm18StringTableBuilderD1Ev>
     494:	ldr	x20, [x19, #8]
     498:	cbz	x20, 4ac <_ZN4llvm13BitcodeWriterD1Ev+0xb4>
     49c:	mov	x0, x20
     4a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     4a4:	mov	x0, x20
     4a8:	bl	0 <_ZdlPv>
     4ac:	str	xzr, [x19, #8]
     4b0:	ldp	x20, x19, [sp, #32]
     4b4:	ldp	x22, x21, [sp, #16]
     4b8:	ldp	x29, x30, [sp], #48
     4bc:	ret
     4c0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     4c4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     4c8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     4cc:	add	x0, x0, #0x0
     4d0:	add	x1, x1, #0x0
     4d4:	add	x3, x3, #0x0
     4d8:	mov	w2, #0x1112                	// #4370
     4dc:	bl	0 <__assert_fail>

00000000000004e0 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>:
     4e0:	sub	sp, sp, #0x70
     4e4:	stp	x29, x30, [sp, #32]
     4e8:	stp	x26, x25, [sp, #48]
     4ec:	stp	x24, x23, [sp, #64]
     4f0:	stp	x22, x21, [sp, #80]
     4f4:	stp	x20, x19, [sp, #96]
     4f8:	add	x29, sp, #0x20
     4fc:	mov	x19, x0
     500:	ldr	x0, [x0, #8]
     504:	mov	w23, w2
     508:	mov	w2, #0x3                   	// #3
     50c:	mov	x20, x4
     510:	mov	x21, x3
     514:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     518:	mov	w0, #0x220                 	// #544
     51c:	bl	0 <_Znwm>
     520:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     524:	ldr	x8, [x8]
     528:	movi	v0.2s, #0x1
     52c:	str	d0, [x0, #8]
     530:	movi	v0.2d, #0x0
     534:	mov	x9, x0
     538:	ldur	w12, [sp, #11]
     53c:	add	x8, x8, #0x10
     540:	mov	x22, x0
     544:	mov	w10, #0x20                  	// #32
     548:	mov	w25, w23
     54c:	str	x8, [x0]
     550:	mov	w8, #0x1                   	// #1
     554:	stp	q0, q0, [x0, #48]
     558:	stp	q0, q0, [x0, #80]
     55c:	stp	q0, q0, [x0, #112]
     560:	stp	q0, q0, [x0, #144]
     564:	stp	q0, q0, [x0, #176]
     568:	stp	q0, q0, [x0, #208]
     56c:	stp	q0, q0, [x0, #240]
     570:	stp	q0, q0, [x0, #272]
     574:	stp	q0, q0, [x0, #304]
     578:	stp	q0, q0, [x0, #336]
     57c:	stp	q0, q0, [x0, #368]
     580:	stp	q0, q0, [x0, #400]
     584:	stp	q0, q0, [x0, #432]
     588:	stp	q0, q0, [x0, #464]
     58c:	stp	q0, q0, [x0, #496]
     590:	str	q0, [x9, #32]!
     594:	mov	w11, #0xff                  	// #255
     598:	str	q0, [x0, #528]
     59c:	str	x9, [x22, #16]!
     5a0:	stp	w8, w10, [x0, #24]
     5a4:	str	x25, [x9]
     5a8:	mov	w10, #0xa                   	// #10
     5ac:	strb	w11, [x0, #40]
     5b0:	ldr	w11, [x0, #28]
     5b4:	ldur	w9, [sp, #11]
     5b8:	strb	w10, [x0, #56]
     5bc:	str	w12, [x0, #44]
     5c0:	ldr	w10, [sp, #8]
     5c4:	ldr	w12, [sp, #8]
     5c8:	mov	w8, w8
     5cc:	cmp	w8, w11
     5d0:	stur	w10, [x0, #41]
     5d4:	str	w9, [x0, #60]
     5d8:	str	xzr, [x0, #48]
     5dc:	stur	w12, [x0, #57]
     5e0:	b.cs	734 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x254>  // b.hs, b.nlast
     5e4:	add	w8, w8, #0x1
     5e8:	str	w8, [x0, #24]
     5ec:	ldr	x24, [x19, #8]
     5f0:	stp	x22, x0, [sp, #16]
     5f4:	mov	x1, x22
     5f8:	mov	x0, x24
     5fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     600:	ldp	x1, x8, [x24, #32]
     604:	add	x23, x24, #0x18
     608:	cmp	x1, x8
     60c:	b.eq	62c <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x14c>  // b.none
     610:	stp	x22, xzr, [x1]
     614:	ldr	x9, [sp, #24]
     618:	add	x8, x1, #0x10
     61c:	stp	xzr, xzr, [sp, #16]
     620:	str	x9, [x1, #8]
     624:	str	x8, [x24, #32]
     628:	b	63c <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x15c>
     62c:	add	x2, sp, #0x10
     630:	mov	x0, x23
     634:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     638:	ldr	x8, [x24, #32]
     63c:	ldr	x9, [x23]
     640:	ldr	x23, [sp, #24]
     644:	sub	x8, x8, x9
     648:	lsr	x8, x8, #4
     64c:	add	w22, w8, #0x3
     650:	cbz	x23, 6d4 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1f4>
     654:	adrp	x24, 0 <__pthread_key_create>
     658:	ldr	x24, [x24]
     65c:	add	x8, x23, #0x8
     660:	cbz	x24, 680 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1a0>
     664:	ldaxr	w9, [x8]
     668:	sub	w10, w9, #0x1
     66c:	stlxr	w11, w10, [x8]
     670:	cbnz	w11, 664 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x184>
     674:	cmp	w9, #0x1
     678:	b.eq	694 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1b4>  // b.none
     67c:	b	6d4 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1f4>
     680:	ldr	w9, [x8]
     684:	sub	w10, w9, #0x1
     688:	str	w10, [x8]
     68c:	cmp	w9, #0x1
     690:	b.ne	6d4 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1f4>  // b.any
     694:	mov	x26, x23
     698:	ldr	x8, [x26], #12
     69c:	mov	x0, x23
     6a0:	ldr	x8, [x8, #16]
     6a4:	blr	x8
     6a8:	cbz	x24, 71c <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x23c>
     6ac:	ldaxr	w8, [x26]
     6b0:	sub	w9, w8, #0x1
     6b4:	stlxr	w10, w9, [x26]
     6b8:	cbnz	w10, 6ac <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1cc>
     6bc:	cmp	w8, #0x1
     6c0:	b.ne	6d4 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1f4>  // b.any
     6c4:	ldr	x8, [x23]
     6c8:	mov	x0, x23
     6cc:	ldr	x8, [x8, #24]
     6d0:	blr	x8
     6d4:	ldr	x0, [x19, #8]
     6d8:	add	x2, sp, #0x8
     6dc:	mov	w3, #0x1                   	// #1
     6e0:	mov	w1, w22
     6e4:	mov	x4, x21
     6e8:	mov	x5, x20
     6ec:	mov	x6, xzr
     6f0:	str	x25, [sp, #8]
     6f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     6f8:	ldr	x0, [x19, #8]
     6fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     700:	ldp	x20, x19, [sp, #96]
     704:	ldp	x22, x21, [sp, #80]
     708:	ldp	x24, x23, [sp, #64]
     70c:	ldp	x26, x25, [sp, #48]
     710:	ldp	x29, x30, [sp, #32]
     714:	add	sp, sp, #0x70
     718:	ret
     71c:	ldr	w8, [x26]
     720:	sub	w9, w8, #0x1
     724:	str	w9, [x26]
     728:	cmp	w8, #0x1
     72c:	b.eq	6c4 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1e4>  // b.none
     730:	b	6d4 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE+0x1f4>
     734:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     738:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     73c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     740:	add	x0, x0, #0x0
     744:	add	x1, x1, #0x0
     748:	add	x3, x3, #0x0
     74c:	mov	w2, #0x43                  	// #67
     750:	bl	0 <__assert_fail>

0000000000000754 <_ZN4llvm13BitcodeWriter11writeSymtabEv>:
     754:	sub	sp, sp, #0xc0
     758:	stp	x29, x30, [sp, #112]
     75c:	str	x25, [sp, #128]
     760:	stp	x24, x23, [sp, #144]
     764:	stp	x22, x21, [sp, #160]
     768:	stp	x20, x19, [sp, #176]
     76c:	add	x29, sp, #0x70
     770:	ldrb	w8, [x0, #176]
     774:	cbnz	w8, 8f8 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1a4>
     778:	ldrb	w8, [x0, #177]
     77c:	mov	x19, x0
     780:	cbnz	w8, 8f8 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1a4>
     784:	ldp	x20, x21, [x19, #184]
     788:	cmp	x20, x21
     78c:	b.eq	830 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xdc>  // b.none
     790:	sub	x8, x29, #0x20
     794:	add	x9, sp, #0x18
     798:	add	x22, x8, #0x10
     79c:	add	x23, x9, #0x10
     7a0:	mov	w24, #0x104                 	// #260
     7a4:	b	7b8 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x64>
     7a8:	cbnz	w25, 8dc <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x188>
     7ac:	add	x20, x20, #0x8
     7b0:	cmp	x21, x20
     7b4:	b.eq	82c <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xd8>  // b.none
     7b8:	ldr	x8, [x20]
     7bc:	ldr	x9, [x8, #96]
     7c0:	cbz	x9, 7ac <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x58>
     7c4:	add	x8, x8, #0xf0
     7c8:	add	x0, sp, #0x18
     7cc:	mov	x1, sp
     7d0:	stp	x22, xzr, [x29, #-32]
     7d4:	sturb	wzr, [x29, #-16]
     7d8:	strh	w24, [sp, #16]
     7dc:	stp	x8, xzr, [sp]
     7e0:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     7e4:	add	x0, sp, #0x18
     7e8:	sub	x1, x29, #0x20
     7ec:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
     7f0:	cbz	x0, 804 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xb0>
     7f4:	ldr	x8, [x0, #104]
     7f8:	cmp	x8, #0x0
     7fc:	cset	w25, eq  // eq = none
     800:	b	808 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xb4>
     804:	mov	w25, #0x1                   	// #1
     808:	ldr	x0, [sp, #24]
     80c:	cmp	x0, x23
     810:	b.eq	818 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0xc4>  // b.none
     814:	bl	0 <_ZdlPv>
     818:	ldur	x0, [x29, #-32]
     81c:	cmp	x0, x22
     820:	b.eq	7a8 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x54>  // b.none
     824:	bl	0 <_ZdlPv>
     828:	b	7a8 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x54>
     82c:	ldp	x20, x21, [x19, #184]
     830:	mov	w8, #0x1                   	// #1
     834:	add	x9, sp, #0x18
     838:	sub	x10, x21, x20
     83c:	strb	w8, [x19, #177]
     840:	add	x8, x9, #0x10
     844:	add	x3, x19, #0x10
     848:	stp	x8, xzr, [sp, #24]
     84c:	asr	x1, x10, #3
     850:	add	x4, x19, #0x48
     854:	sub	x8, x29, #0x20
     858:	add	x2, sp, #0x18
     85c:	mov	x0, x20
     860:	bl	0 <_ZN4llvm8irsymtab5buildENS_8ArrayRefIPNS_6ModuleEEERNS_11SmallVectorIcLj0EEERNS_18StringTableBuilderERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEE>
     864:	ldur	x8, [x29, #-32]
     868:	tst	x8, #0xfffffffffffffffe
     86c:	and	x10, x8, #0xfffffffffffffffe
     870:	cset	w9, ne  // ne = any
     874:	orr	x9, x10, x9
     878:	stur	x9, [x29, #-32]
     87c:	cbz	x10, 8a8 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x154>
     880:	orr	x8, x8, #0x1
     884:	add	x0, x29, #0x18
     888:	str	x8, [x29, #24]
     88c:	stur	xzr, [x29, #-32]
     890:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     894:	ldr	x8, [x29, #24]
     898:	cbnz	x8, 920 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1cc>
     89c:	ldur	x8, [x29, #-32]
     8a0:	cbz	x8, 8c4 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x170>
     8a4:	b	918 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1c4>
     8a8:	cbnz	x9, 918 <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x1c4>
     8ac:	ldr	x3, [sp, #24]
     8b0:	ldr	w4, [sp, #32]
     8b4:	mov	w1, #0x19                  	// #25
     8b8:	mov	w2, #0x1                   	// #1
     8bc:	mov	x0, x19
     8c0:	bl	4e0 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>
     8c4:	ldr	x0, [sp, #24]
     8c8:	add	x8, sp, #0x18
     8cc:	add	x8, x8, #0x10
     8d0:	cmp	x0, x8
     8d4:	b.eq	8dc <_ZN4llvm13BitcodeWriter11writeSymtabEv+0x188>  // b.none
     8d8:	bl	0 <free>
     8dc:	ldp	x20, x19, [sp, #176]
     8e0:	ldp	x22, x21, [sp, #160]
     8e4:	ldp	x24, x23, [sp, #144]
     8e8:	ldr	x25, [sp, #128]
     8ec:	ldp	x29, x30, [sp, #112]
     8f0:	add	sp, sp, #0xc0
     8f4:	ret
     8f8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     8fc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     900:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     904:	add	x0, x0, #0x0
     908:	add	x1, x1, #0x0
     90c:	add	x3, x3, #0x0
     910:	mov	w2, #0x1122                	// #4386
     914:	bl	0 <__assert_fail>
     918:	sub	x0, x29, #0x20
     91c:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     920:	add	x0, x29, #0x18
     924:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000000928 <_ZN4llvm13BitcodeWriter11writeStrtabEv>:
     928:	stp	x29, x30, [sp, #-48]!
     92c:	stp	x22, x21, [sp, #16]
     930:	stp	x20, x19, [sp, #32]
     934:	mov	x29, sp
     938:	ldrb	w8, [x0, #176]
     93c:	cbnz	w8, 9d4 <_ZN4llvm13BitcodeWriter11writeStrtabEv+0xac>
     940:	add	x20, x0, #0x10
     944:	mov	x19, x0
     948:	mov	x0, x20
     94c:	bl	0 <_ZN4llvm18StringTableBuilder15finalizeInOrderEv>
     950:	ldr	x22, [x19, #48]
     954:	cbz	x22, 97c <_ZN4llvm13BitcodeWriter11writeStrtabEv+0x54>
     958:	tbnz	x22, #63, 9f4 <_ZN4llvm13BitcodeWriter11writeStrtabEv+0xcc>
     95c:	mov	x0, x22
     960:	bl	0 <_Znwm>
     964:	mov	w1, wzr
     968:	mov	x2, x22
     96c:	mov	x21, x0
     970:	bl	0 <memset>
     974:	add	x22, x21, x22
     978:	b	980 <_ZN4llvm13BitcodeWriter11writeStrtabEv+0x58>
     97c:	mov	x21, xzr
     980:	mov	x0, x20
     984:	mov	x1, x21
     988:	bl	0 <_ZNK4llvm18StringTableBuilder5writeEPh>
     98c:	sub	x4, x22, x21
     990:	mov	w1, #0x17                  	// #23
     994:	mov	w2, #0x1                   	// #1
     998:	mov	x0, x19
     99c:	mov	x3, x21
     9a0:	mov	w20, #0x1                   	// #1
     9a4:	bl	4e0 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>
     9a8:	strb	w20, [x19, #176]
     9ac:	cbz	x21, 9c4 <_ZN4llvm13BitcodeWriter11writeStrtabEv+0x9c>
     9b0:	mov	x0, x21
     9b4:	ldp	x20, x19, [sp, #32]
     9b8:	ldp	x22, x21, [sp, #16]
     9bc:	ldp	x29, x30, [sp], #48
     9c0:	b	0 <_ZdlPv>
     9c4:	ldp	x20, x19, [sp, #32]
     9c8:	ldp	x22, x21, [sp, #16]
     9cc:	ldp	x29, x30, [sp], #48
     9d0:	ret
     9d4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     9d8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     9dc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     9e0:	add	x0, x0, #0x0
     9e4:	add	x1, x1, #0x0
     9e8:	add	x3, x3, #0x0
     9ec:	mov	w2, #0x1142                	// #4418
     9f0:	bl	0 <__assert_fail>
     9f4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     9f8:	add	x0, x0, #0x0
     9fc:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000a00 <_ZN4llvm13BitcodeWriter10copyStrtabENS_9StringRefE>:
     a00:	stp	x29, x30, [sp, #-32]!
     a04:	stp	x20, x19, [sp, #16]
     a08:	mov	x29, sp
     a0c:	mov	x4, x2
     a10:	mov	x3, x1
     a14:	mov	w1, #0x17                  	// #23
     a18:	mov	w2, #0x1                   	// #1
     a1c:	mov	x19, x0
     a20:	mov	w20, #0x1                   	// #1
     a24:	bl	4e0 <_ZN4llvm13BitcodeWriter9writeBlobEjjNS_9StringRefE>
     a28:	strb	w20, [x19, #176]
     a2c:	ldp	x20, x19, [sp, #16]
     a30:	ldp	x29, x30, [sp], #32
     a34:	ret

0000000000000a38 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>:
     a38:	stp	x29, x30, [sp, #-96]!
     a3c:	stp	x28, x27, [sp, #16]
     a40:	stp	x26, x25, [sp, #32]
     a44:	stp	x24, x23, [sp, #48]
     a48:	stp	x22, x21, [sp, #64]
     a4c:	stp	x20, x19, [sp, #80]
     a50:	mov	x29, sp
     a54:	sub	sp, sp, #0x340
     a58:	ldrb	w8, [x0, #176]
     a5c:	cbnz	w8, bd8 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x1a0>
     a60:	ldr	x8, [x1, #168]
     a64:	mov	x23, x1
     a68:	cbnz	x8, bf8 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x1c0>
     a6c:	mov	x28, x0
     a70:	ldr	x10, [x28, #200]!
     a74:	mov	x27, x5
     a78:	mov	w22, w4
     a7c:	mov	x5, x3
     a80:	mov	x8, x28
     a84:	ldr	x9, [x8, #-8]!
     a88:	mov	w21, w2
     a8c:	mov	x24, x0
     a90:	cmp	x9, x10
     a94:	b.eq	aa8 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x70>  // b.none
     a98:	str	x23, [x9]
     a9c:	ldr	x9, [x8]
     aa0:	add	x9, x9, #0x8
     aa4:	b	b4c <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x114>
     aa8:	ldr	x25, [x24, #184]
     aac:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
     ab0:	str	x5, [sp, #8]
     ab4:	sub	x26, x9, x25
     ab8:	cmp	x26, x8
     abc:	b.eq	c18 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x1e0>  // b.none
     ac0:	asr	x20, x26, #3
     ac4:	cmp	x26, #0x0
     ac8:	csinc	x8, x20, xzr, ne  // ne = any
     acc:	adds	x8, x8, x20
     ad0:	lsr	x10, x8, #60
     ad4:	cset	w9, cs  // cs = hs, nlast
     ad8:	cmp	x10, #0x0
     adc:	cset	w10, ne  // ne = any
     ae0:	orr	w9, w9, w10
     ae4:	cmp	w9, #0x0
     ae8:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
     aec:	csel	x19, x9, x8, ne  // ne = any
     af0:	str	x27, [sp, #16]
     af4:	cbz	x19, b08 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xd0>
     af8:	lsl	x0, x19, #3
     afc:	bl	0 <_Znwm>
     b00:	mov	x27, x0
     b04:	b	b0c <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xd4>
     b08:	mov	x27, xzr
     b0c:	add	x20, x27, x20, lsl #3
     b10:	cmp	x26, #0x1
     b14:	str	x23, [x20]
     b18:	b.lt	b2c <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xf4>  // b.tstop
     b1c:	mov	x0, x27
     b20:	mov	x1, x25
     b24:	mov	x2, x26
     b28:	bl	0 <memmove>
     b2c:	add	x20, x20, #0x8
     b30:	cbz	x25, b3c <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x104>
     b34:	mov	x0, x25
     b38:	bl	0 <_ZdlPv>
     b3c:	stp	x27, x20, [x24, #184]
     b40:	add	x9, x27, x19, lsl #3
     b44:	ldp	x5, x27, [sp, #8]
     b48:	mov	x8, x28
     b4c:	str	x9, [x8]
     b50:	ldp	x19, x25, [x24]
     b54:	add	x2, x24, #0x10
     b58:	and	w4, w21, #0x1
     b5c:	add	x0, sp, #0x18
     b60:	mov	x1, x23
     b64:	mov	x3, x25
     b68:	and	w20, w22, #0x1
     b6c:	add	x21, sp, #0x18
     b70:	bl	7990 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE>
     b74:	add	x0, x21, #0x2a8
     b78:	str	x19, [sp, #680]
     b7c:	strb	w20, [sp, #688]
     b80:	str	x27, [sp, #696]
     b84:	bl	0 <_ZN4llvm4SHA14initEv>
     b88:	ldr	x8, [x25]
     b8c:	ldr	w9, [x25, #8]
     b90:	add	x0, sp, #0x18
     b94:	ldr	w8, [x8, #8]
     b98:	add	x8, x9, x8, lsl #3
     b9c:	str	x8, [sp, #816]
     ba0:	bl	c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv>
     ba4:	ldr	x1, [sp, #632]
     ba8:	add	x0, x21, #0x250
     bac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     bb0:	add	x0, x21, #0x18
     bb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     bb8:	add	sp, sp, #0x340
     bbc:	ldp	x20, x19, [sp, #80]
     bc0:	ldp	x22, x21, [sp, #64]
     bc4:	ldp	x24, x23, [sp, #48]
     bc8:	ldp	x26, x25, [sp, #32]
     bcc:	ldp	x28, x27, [sp, #16]
     bd0:	ldp	x29, x30, [sp], #96
     bd4:	ret
     bd8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     bdc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     be0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     be4:	add	x0, x0, #0x0
     be8:	add	x1, x1, #0x0
     bec:	add	x3, x3, #0x0
     bf0:	mov	w2, #0x1158                	// #4440
     bf4:	bl	0 <__assert_fail>
     bf8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     bfc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c00:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c04:	add	x0, x0, #0x0
     c08:	add	x1, x1, #0x0
     c0c:	add	x3, x3, #0x0
     c10:	mov	w2, #0x115e                	// #4446
     c14:	bl	0 <__assert_fail>
     c18:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c1c:	add	x0, x0, #0x0
     c20:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv>:
     c24:	stp	d11, d10, [sp, #-128]!
     c28:	stp	d9, d8, [sp, #16]
     c2c:	stp	x29, x30, [sp, #32]
     c30:	stp	x28, x27, [sp, #48]
     c34:	stp	x26, x25, [sp, #64]
     c38:	stp	x24, x23, [sp, #80]
     c3c:	stp	x22, x21, [sp, #96]
     c40:	stp	x20, x19, [sp, #112]
     c44:	mov	x29, sp
     c48:	sub	sp, sp, #0x410
     c4c:	ldr	x20, [x0]
     c50:	mov	x19, x0
     c54:	mov	w1, #0xd                   	// #13
     c58:	mov	w2, #0x5                   	// #5
     c5c:	mov	x0, x20
     c60:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c64:	mov	w0, #0x220                 	// #544
     c68:	bl	0 <_Znwm>
     c6c:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     c70:	ldr	x9, [x9]
     c74:	movi	v0.2s, #0x1
     c78:	str	d0, [x0, #8]
     c7c:	movi	v0.2d, #0x0
     c80:	mov	x8, x0
     c84:	add	x9, x9, #0x10
     c88:	mov	x22, x0
     c8c:	str	x9, [x0]
     c90:	mov	w9, #0x20                  	// #32
     c94:	stp	q0, q0, [x0, #48]
     c98:	stp	q0, q0, [x0, #80]
     c9c:	stp	q0, q0, [x0, #112]
     ca0:	stp	q0, q0, [x0, #144]
     ca4:	stp	q0, q0, [x0, #176]
     ca8:	stp	q0, q0, [x0, #208]
     cac:	stp	q0, q0, [x0, #240]
     cb0:	stp	q0, q0, [x0, #272]
     cb4:	stp	q0, q0, [x0, #304]
     cb8:	stp	q0, q0, [x0, #336]
     cbc:	stp	q0, q0, [x0, #368]
     cc0:	stp	q0, q0, [x0, #400]
     cc4:	stp	q0, q0, [x0, #432]
     cc8:	stp	q0, q0, [x0, #464]
     ccc:	stp	q0, q0, [x0, #496]
     cd0:	str	q0, [x8, #32]!
     cd4:	str	q0, [x0, #528]
     cd8:	str	x8, [x22, #16]!
     cdc:	str	w9, [x0, #28]
     ce0:	mov	w9, #0x1                   	// #1
     ce4:	str	x9, [x8]
     ce8:	mov	w8, #0xff                  	// #255
     cec:	mov	w9, #0x6                   	// #6
     cf0:	strb	w8, [x0, #40]
     cf4:	mov	w8, #0x8                   	// #8
     cf8:	strb	w9, [x0, #56]
     cfc:	mov	w9, #0x3                   	// #3
     d00:	str	xzr, [x0, #48]
     d04:	str	xzr, [x0, #64]
     d08:	strb	w8, [x0, #72]
     d0c:	str	w9, [x0, #24]
     d10:	stp	x22, x0, [sp, #144]
     d14:	mov	x0, x20
     d18:	mov	x1, x22
     d1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     d20:	ldp	x1, x8, [x20, #32]
     d24:	add	x21, x20, #0x18
     d28:	cmp	x1, x8
     d2c:	b.eq	d4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x128>  // b.none
     d30:	stp	x22, xzr, [x1]
     d34:	ldr	x9, [sp, #152]
     d38:	add	x8, x1, #0x10
     d3c:	stp	xzr, xzr, [sp, #144]
     d40:	str	x9, [x1, #8]
     d44:	str	x8, [x20, #32]
     d48:	b	d5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x138>
     d4c:	add	x2, sp, #0x90
     d50:	mov	x0, x21
     d54:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     d58:	ldr	x8, [x20, #32]
     d5c:	ldr	x9, [x21]
     d60:	ldr	x23, [sp, #152]
     d64:	sub	x8, x8, x9
     d68:	lsr	x8, x8, #4
     d6c:	add	w22, w8, #0x3
     d70:	cbz	x23, dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d8>
     d74:	adrp	x9, 0 <__pthread_key_create>
     d78:	ldr	x9, [x9]
     d7c:	add	x8, x23, #0x8
     d80:	cbz	x9, da0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x17c>
     d84:	ldaxr	w9, [x8]
     d88:	sub	w10, w9, #0x1
     d8c:	stlxr	w11, w10, [x8]
     d90:	cbnz	w11, d84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x160>
     d94:	cmp	w9, #0x1
     d98:	b.eq	db4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x190>  // b.none
     d9c:	b	dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d8>
     da0:	ldr	w9, [x8]
     da4:	sub	w10, w9, #0x1
     da8:	str	w10, [x8]
     dac:	cmp	w9, #0x1
     db0:	b.ne	dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d8>  // b.any
     db4:	mov	x24, x23
     db8:	ldr	x8, [x24], #12
     dbc:	mov	x0, x23
     dc0:	ldr	x8, [x8, #16]
     dc4:	blr	x8
     dc8:	adrp	x8, 0 <__pthread_key_create>
     dcc:	ldr	x8, [x8]
     dd0:	cbz	x8, 3628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2a04>
     dd4:	ldaxr	w8, [x24]
     dd8:	sub	w9, w8, #0x1
     ddc:	stlxr	w10, w9, [x24]
     de0:	cbnz	w10, dd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b0>
     de4:	cmp	w8, #0x1
     de8:	b.ne	dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d8>  // b.any
     dec:	ldr	x8, [x23]
     df0:	mov	x0, x23
     df4:	ldr	x8, [x8, #24]
     df8:	blr	x8
     dfc:	adrp	x2, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     e00:	add	x2, x2, #0x0
     e04:	mov	w1, #0x1                   	// #1
     e08:	mov	w3, #0xa                   	// #10
     e0c:	mov	x0, x20
     e10:	mov	w4, w22
     e14:	bl	10c44 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
     e18:	mov	w0, #0x220                 	// #544
     e1c:	bl	0 <_Znwm>
     e20:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     e24:	ldr	x8, [x8]
     e28:	movi	v0.2s, #0x1
     e2c:	str	d0, [x0, #8]
     e30:	movi	v0.2d, #0x0
     e34:	add	x8, x8, #0x10
     e38:	mov	x9, x0
     e3c:	mov	x22, x0
     e40:	str	x8, [x0]
     e44:	mov	w8, #0x2                   	// #2
     e48:	stp	q0, q0, [x0, #48]
     e4c:	stp	q0, q0, [x0, #80]
     e50:	stp	q0, q0, [x0, #112]
     e54:	stp	q0, q0, [x0, #144]
     e58:	stp	q0, q0, [x0, #176]
     e5c:	stp	q0, q0, [x0, #208]
     e60:	stp	q0, q0, [x0, #240]
     e64:	stp	q0, q0, [x0, #272]
     e68:	stp	q0, q0, [x0, #304]
     e6c:	stp	q0, q0, [x0, #336]
     e70:	stp	q0, q0, [x0, #368]
     e74:	stp	q0, q0, [x0, #400]
     e78:	stp	q0, q0, [x0, #432]
     e7c:	stp	q0, q0, [x0, #464]
     e80:	stp	q0, q0, [x0, #496]
     e84:	str	q0, [x9, #32]!
     e88:	str	q0, [x0, #528]
     e8c:	str	x9, [x22, #16]!
     e90:	str	x8, [x9]
     e94:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     e98:	ldr	d8, [x9]
     e9c:	mov	w8, #0xff                  	// #255
     ea0:	mov	w9, #0x6                   	// #6
     ea4:	strb	w8, [x0, #40]
     ea8:	mov	w8, #0x4                   	// #4
     eac:	str	x9, [x0, #48]
     eb0:	strb	w8, [x0, #56]
     eb4:	str	d8, [x0, #24]
     eb8:	stp	x22, x0, [sp, #416]
     ebc:	mov	x0, x20
     ec0:	mov	x1, x22
     ec4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     ec8:	ldp	x1, x8, [x20, #32]
     ecc:	cmp	x1, x8
     ed0:	b.eq	ef0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2cc>  // b.none
     ed4:	stp	x22, xzr, [x1]
     ed8:	ldr	x9, [sp, #424]
     edc:	add	x8, x1, #0x10
     ee0:	stp	xzr, xzr, [sp, #416]
     ee4:	str	x9, [x1, #8]
     ee8:	str	x8, [x20, #32]
     eec:	b	f00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2dc>
     ef0:	add	x2, sp, #0x1a0
     ef4:	mov	x0, x21
     ef8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     efc:	ldr	x8, [x20, #32]
     f00:	ldr	x9, [x21]
     f04:	ldr	x22, [sp, #424]
     f08:	sub	x8, x8, x9
     f0c:	lsr	x8, x8, #4
     f10:	add	w21, w8, #0x3
     f14:	cbz	x22, fa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37c>
     f18:	adrp	x9, 0 <__pthread_key_create>
     f1c:	ldr	x9, [x9]
     f20:	add	x8, x22, #0x8
     f24:	cbz	x9, f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x320>
     f28:	ldaxr	w9, [x8]
     f2c:	sub	w10, w9, #0x1
     f30:	stlxr	w11, w10, [x8]
     f34:	cbnz	w11, f28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x304>
     f38:	cmp	w9, #0x1
     f3c:	b.eq	f58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x334>  // b.none
     f40:	b	fa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37c>
     f44:	ldr	w9, [x8]
     f48:	sub	w10, w9, #0x1
     f4c:	str	w10, [x8]
     f50:	cmp	w9, #0x1
     f54:	b.ne	fa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37c>  // b.any
     f58:	mov	x23, x22
     f5c:	ldr	x8, [x23], #12
     f60:	mov	x0, x22
     f64:	ldr	x8, [x8, #16]
     f68:	blr	x8
     f6c:	adrp	x8, 0 <__pthread_key_create>
     f70:	ldr	x8, [x8]
     f74:	cbz	x8, 3640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2a1c>
     f78:	ldaxr	w8, [x23]
     f7c:	sub	w9, w8, #0x1
     f80:	stlxr	w10, w9, [x23]
     f84:	cbnz	w10, f78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x354>
     f88:	cmp	w8, #0x1
     f8c:	b.ne	fa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37c>  // b.any
     f90:	ldr	x8, [x22]
     f94:	mov	x0, x22
     f98:	ldr	x8, [x8, #24]
     f9c:	blr	x8
     fa0:	add	x8, sp, #0x1f8
     fa4:	movi	v10.2s, #0x1
     fa8:	add	x22, x8, #0x10
     fac:	add	x2, sp, #0x1f8
     fb0:	mov	w1, #0x2                   	// #2
     fb4:	mov	x0, x20
     fb8:	mov	w3, w21
     fbc:	str	wzr, [sp, #520]
     fc0:	str	x22, [sp, #504]
     fc4:	str	d10, [sp, #512]
     fc8:	mov	w23, #0x2                   	// #2
     fcc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     fd0:	mov	x0, x20
     fd4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
     fd8:	ldr	x0, [sp, #504]
     fdc:	cmp	x0, x22
     fe0:	b.eq	fe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c4>  // b.none
     fe4:	bl	0 <free>
     fe8:	ldr	x0, [x19]
     fec:	mov	w1, #0x8                   	// #8
     ff0:	mov	w2, #0x3                   	// #3
     ff4:	mov	w21, #0x8                   	// #8
     ff8:	mov	w24, #0x3                   	// #3
     ffc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1000:	ldr	x8, [x19, #656]
    1004:	ldr	x0, [x19]
    1008:	mov	w9, #0x1                   	// #1
    100c:	add	x2, sp, #0x1f8
    1010:	ldr	w25, [x8, #8]
    1014:	add	x8, sp, #0x90
    1018:	mov	w1, #0x1                   	// #1
    101c:	mov	w3, wzr
    1020:	str	x23, [sp, #144]
    1024:	stp	x8, x9, [sp, #504]
    1028:	add	x22, sp, #0x1f8
    102c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1030:	mov	x0, x19
    1034:	bl	7aec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv>
    1038:	ldr	x0, [x19]
    103c:	mov	w1, #0x11                  	// #17
    1040:	mov	w2, #0x4                   	// #4
    1044:	add	x20, x19, #0x18
    1048:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    104c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1050:	ldr	d9, [x8]
    1054:	add	x8, x22, #0x10
    1058:	mov	x0, x20
    105c:	str	x8, [sp, #8]
    1060:	str	x8, [sp, #504]
    1064:	str	d9, [sp, #512]
    1068:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    106c:	mov	x22, x0
    1070:	mov	w0, #0x220                 	// #544
    1074:	bl	0 <_Znwm>
    1078:	str	d10, [x0, #8]
    107c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1080:	ldr	x8, [x8]
    1084:	movi	v0.2d, #0x0
    1088:	mov	x9, x0
    108c:	mov	x1, x0
    1090:	add	x8, x8, #0x10
    1094:	str	x8, [x0]
    1098:	mov	w8, #0x20                  	// #32
    109c:	stp	q0, q0, [x0, #48]
    10a0:	stp	q0, q0, [x0, #80]
    10a4:	stp	q0, q0, [x0, #112]
    10a8:	stp	q0, q0, [x0, #144]
    10ac:	stp	q0, q0, [x0, #176]
    10b0:	stp	q0, q0, [x0, #208]
    10b4:	stp	q0, q0, [x0, #240]
    10b8:	stp	q0, q0, [x0, #272]
    10bc:	stp	q0, q0, [x0, #304]
    10c0:	stp	q0, q0, [x0, #336]
    10c4:	stp	q0, q0, [x0, #368]
    10c8:	stp	q0, q0, [x0, #400]
    10cc:	stp	q0, q0, [x0, #432]
    10d0:	stp	q0, q0, [x0, #464]
    10d4:	stp	q0, q0, [x0, #496]
    10d8:	str	q0, [x9, #32]!
    10dc:	str	q0, [x0, #528]
    10e0:	str	x9, [x1, #16]!
    10e4:	stp	w24, w8, [x0, #24]
    10e8:	mov	w8, #0xff                  	// #255
    10ec:	str	x21, [x9]
    10f0:	strb	w8, [x0, #40]
    10f4:	str	x22, [x0, #48]
    10f8:	strb	w23, [x0, #56]
    10fc:	str	xzr, [x0, #64]
    1100:	strb	w8, [x0, #72]
    1104:	ldr	x23, [x19]
    1108:	stp	x1, x0, [sp, #144]
    110c:	mov	x0, x23
    1110:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1114:	ldp	x1, x8, [x23, #32]
    1118:	add	x24, x23, #0x18
    111c:	cmp	x1, x8
    1120:	b.eq	1144 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x520>  // b.none
    1124:	str	xzr, [x1, #8]
    1128:	ldr	q0, [sp, #144]
    112c:	add	x27, x1, #0x10
    1130:	str	xzr, [sp, #152]
    1134:	str	q0, [x1]
    1138:	str	xzr, [sp, #144]
    113c:	str	x27, [x23, #32]
    1140:	b	1154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x530>
    1144:	add	x2, sp, #0x90
    1148:	mov	x0, x24
    114c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1150:	ldr	x27, [x23, #32]
    1154:	ldr	x23, [sp, #152]
    1158:	ldr	x26, [x24]
    115c:	cbz	x23, 11e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5c4>
    1160:	adrp	x9, 0 <__pthread_key_create>
    1164:	ldr	x9, [x9]
    1168:	add	x8, x23, #0x8
    116c:	cbz	x9, 118c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x568>
    1170:	ldaxr	w9, [x8]
    1174:	sub	w10, w9, #0x1
    1178:	stlxr	w11, w10, [x8]
    117c:	cbnz	w11, 1170 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x54c>
    1180:	cmp	w9, #0x1
    1184:	b.eq	11a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x57c>  // b.none
    1188:	b	11e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5c4>
    118c:	ldr	w9, [x8]
    1190:	sub	w10, w9, #0x1
    1194:	str	w10, [x8]
    1198:	cmp	w9, #0x1
    119c:	b.ne	11e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5c4>  // b.any
    11a0:	mov	x21, x23
    11a4:	ldr	x8, [x21], #12
    11a8:	mov	x0, x23
    11ac:	ldr	x8, [x8, #16]
    11b0:	blr	x8
    11b4:	adrp	x8, 0 <__pthread_key_create>
    11b8:	ldr	x8, [x8]
    11bc:	cbz	x8, 3658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2a34>
    11c0:	ldaxr	w8, [x21]
    11c4:	sub	w9, w8, #0x1
    11c8:	stlxr	w10, w9, [x21]
    11cc:	cbnz	w10, 11c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x59c>
    11d0:	cmp	w8, #0x1
    11d4:	b.ne	11e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5c4>  // b.any
    11d8:	ldr	x8, [x23]
    11dc:	mov	x0, x23
    11e0:	ldr	x8, [x8, #24]
    11e4:	blr	x8
    11e8:	mov	w0, #0x220                 	// #544
    11ec:	bl	0 <_Znwm>
    11f0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    11f4:	ldr	x8, [x8]
    11f8:	movi	v0.2s, #0x1
    11fc:	str	d0, [x0, #8]
    1200:	movi	v0.2d, #0x0
    1204:	add	x8, x8, #0x10
    1208:	mov	x1, x0
    120c:	mov	x24, x0
    1210:	mov	w9, #0x15                  	// #21
    1214:	str	x8, [x0]
    1218:	stp	q0, q0, [x0, #48]
    121c:	stp	q0, q0, [x0, #80]
    1220:	stp	q0, q0, [x0, #112]
    1224:	stp	q0, q0, [x0, #144]
    1228:	stp	q0, q0, [x0, #176]
    122c:	stp	q0, q0, [x0, #208]
    1230:	stp	q0, q0, [x0, #240]
    1234:	stp	q0, q0, [x0, #272]
    1238:	stp	q0, q0, [x0, #304]
    123c:	stp	q0, q0, [x0, #336]
    1240:	stp	q0, q0, [x0, #368]
    1244:	stp	q0, q0, [x0, #400]
    1248:	stp	q0, q0, [x0, #432]
    124c:	stp	q0, q0, [x0, #464]
    1250:	stp	q0, q0, [x0, #496]
    1254:	str	q0, [x1, #32]!
    1258:	str	q0, [x0, #528]
    125c:	str	x1, [x24, #16]!
    1260:	str	x9, [x1]
    1264:	str	d8, [x0, #24]
    1268:	mov	w10, #0xff                  	// #255
    126c:	ldp	w8, w9, [x0, #24]
    1270:	ldr	w14, [sp, #64]
    1274:	strb	w10, [x0, #40]
    1278:	ldur	w10, [sp, #67]
    127c:	mov	w11, #0x1                   	// #1
    1280:	mov	w12, #0x2                   	// #2
    1284:	mov	w13, #0x6                   	// #6
    1288:	cmp	w8, w9
    128c:	str	x11, [x0, #48]
    1290:	strb	w12, [x0, #56]
    1294:	strb	w13, [x0, #72]
    1298:	str	w10, [x0, #76]
    129c:	stur	w14, [x0, #73]
    12a0:	str	xzr, [x0, #64]
    12a4:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    12a8:	add	w8, w8, #0x1
    12ac:	mov	x23, x0
    12b0:	cmp	w8, w9
    12b4:	str	w8, [x0, #24]
    12b8:	b.cs	4d40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x411c>  // b.hs, b.nlast
    12bc:	ldr	x9, [x23, #16]
    12c0:	mov	w10, #0x2                   	// #2
    12c4:	str	x25, [sp]
    12c8:	add	x8, x9, w8, uxtw #4
    12cc:	str	x22, [x8]
    12d0:	strb	w10, [x8, #8]
    12d4:	add	x9, sp, #0xa4
    12d8:	ldur	w9, [x9, #255]
    12dc:	ldr	w10, [sp, #416]
    12e0:	str	w9, [x8, #12]
    12e4:	stur	w10, [x8, #9]
    12e8:	ldp	w8, w9, [x23, #24]
    12ec:	cmp	w8, w9
    12f0:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    12f4:	add	w8, w8, #0x1
    12f8:	str	w8, [x23, #24]
    12fc:	ldr	x25, [x19]
    1300:	mov	x1, x24
    1304:	stp	x24, x23, [sp, #416]
    1308:	mov	x0, x25
    130c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1310:	ldp	x1, x8, [x25, #32]
    1314:	add	x24, x25, #0x18
    1318:	cmp	x1, x8
    131c:	b.eq	1344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x720>  // b.none
    1320:	str	xzr, [x1, #8]
    1324:	ldr	q0, [sp, #416]
    1328:	add	x8, x1, #0x10
    132c:	str	xzr, [sp, #424]
    1330:	str	x8, [sp, #48]
    1334:	str	q0, [x1]
    1338:	str	xzr, [sp, #416]
    133c:	str	x8, [x25, #32]
    1340:	b	1358 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x734>
    1344:	add	x2, sp, #0x1a0
    1348:	mov	x0, x24
    134c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1350:	ldr	x8, [x25, #32]
    1354:	str	x8, [sp, #48]
    1358:	ldr	x23, [sp, #424]
    135c:	ldr	x25, [x24]
    1360:	cbz	x23, 13ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7c8>
    1364:	adrp	x9, 0 <__pthread_key_create>
    1368:	ldr	x9, [x9]
    136c:	add	x8, x23, #0x8
    1370:	cbz	x9, 1390 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x76c>
    1374:	ldaxr	w9, [x8]
    1378:	sub	w10, w9, #0x1
    137c:	stlxr	w11, w10, [x8]
    1380:	cbnz	w11, 1374 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x750>
    1384:	cmp	w9, #0x1
    1388:	b.eq	13a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x780>  // b.none
    138c:	b	13ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7c8>
    1390:	ldr	w9, [x8]
    1394:	sub	w10, w9, #0x1
    1398:	str	w10, [x8]
    139c:	cmp	w9, #0x1
    13a0:	b.ne	13ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7c8>  // b.any
    13a4:	mov	x21, x23
    13a8:	ldr	x8, [x21], #12
    13ac:	mov	x0, x23
    13b0:	ldr	x8, [x8, #16]
    13b4:	blr	x8
    13b8:	adrp	x8, 0 <__pthread_key_create>
    13bc:	ldr	x8, [x8]
    13c0:	cbz	x8, 3670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2a4c>
    13c4:	ldaxr	w8, [x21]
    13c8:	sub	w9, w8, #0x1
    13cc:	stlxr	w10, w9, [x21]
    13d0:	cbnz	w10, 13c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7a0>
    13d4:	cmp	w8, #0x1
    13d8:	b.ne	13ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7c8>  // b.any
    13dc:	ldr	x8, [x23]
    13e0:	mov	x0, x23
    13e4:	ldr	x8, [x8, #24]
    13e8:	blr	x8
    13ec:	mov	w0, #0x220                 	// #544
    13f0:	bl	0 <_Znwm>
    13f4:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    13f8:	ldr	x8, [x8]
    13fc:	movi	v0.2s, #0x1
    1400:	str	d0, [x0, #8]
    1404:	movi	v0.2d, #0x0
    1408:	add	x8, x8, #0x10
    140c:	mov	x1, x0
    1410:	mov	x24, x0
    1414:	mov	w9, #0x12                  	// #18
    1418:	str	x8, [x0]
    141c:	stp	q0, q0, [x0, #48]
    1420:	stp	q0, q0, [x0, #80]
    1424:	stp	q0, q0, [x0, #112]
    1428:	stp	q0, q0, [x0, #144]
    142c:	stp	q0, q0, [x0, #176]
    1430:	stp	q0, q0, [x0, #208]
    1434:	stp	q0, q0, [x0, #240]
    1438:	stp	q0, q0, [x0, #272]
    143c:	stp	q0, q0, [x0, #304]
    1440:	stp	q0, q0, [x0, #336]
    1444:	stp	q0, q0, [x0, #368]
    1448:	stp	q0, q0, [x0, #400]
    144c:	stp	q0, q0, [x0, #432]
    1450:	stp	q0, q0, [x0, #464]
    1454:	stp	q0, q0, [x0, #496]
    1458:	str	q0, [x1, #32]!
    145c:	str	q0, [x0, #528]
    1460:	str	x1, [x24, #16]!
    1464:	str	x9, [x1]
    1468:	str	d8, [x0, #24]
    146c:	mov	w10, #0xff                  	// #255
    1470:	ldp	w8, w9, [x0, #24]
    1474:	ldr	w14, [sp, #64]
    1478:	strb	w10, [x0, #40]
    147c:	ldur	w10, [sp, #67]
    1480:	mov	w11, #0x1                   	// #1
    1484:	mov	w12, #0x2                   	// #2
    1488:	mov	w13, #0x6                   	// #6
    148c:	cmp	w8, w9
    1490:	str	x11, [x0, #48]
    1494:	strb	w12, [x0, #56]
    1498:	strb	w13, [x0, #72]
    149c:	str	w10, [x0, #76]
    14a0:	stur	w14, [x0, #73]
    14a4:	str	xzr, [x0, #64]
    14a8:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    14ac:	add	w8, w8, #0x1
    14b0:	mov	x23, x0
    14b4:	cmp	w8, w9
    14b8:	str	w8, [x0, #24]
    14bc:	b.cs	4d58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4134>  // b.hs, b.nlast
    14c0:	ldr	x9, [x23, #16]
    14c4:	mov	w10, #0x2                   	// #2
    14c8:	str	x25, [sp, #40]
    14cc:	add	x8, x9, w8, uxtw #4
    14d0:	str	x22, [x8]
    14d4:	strb	w10, [x8, #8]
    14d8:	ldur	w9, [sp, #67]
    14dc:	ldr	w10, [sp, #64]
    14e0:	str	w9, [x8, #12]
    14e4:	stur	w10, [x8, #9]
    14e8:	ldp	w8, w9, [x23, #24]
    14ec:	cmp	w8, w9
    14f0:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    14f4:	add	w8, w8, #0x1
    14f8:	str	w8, [x23, #24]
    14fc:	ldr	x25, [x19]
    1500:	mov	x1, x24
    1504:	stp	x24, x23, [sp, #64]
    1508:	mov	x0, x25
    150c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1510:	ldp	x1, x8, [x25, #32]
    1514:	add	x24, x25, #0x18
    1518:	cmp	x1, x8
    151c:	b.eq	1540 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x91c>  // b.none
    1520:	str	xzr, [x1, #8]
    1524:	ldr	q0, [sp, #64]
    1528:	add	x21, x1, #0x10
    152c:	str	xzr, [sp, #72]
    1530:	str	q0, [x1]
    1534:	str	xzr, [sp, #64]
    1538:	str	x21, [x25, #32]
    153c:	b	1550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x92c>
    1540:	add	x2, sp, #0x40
    1544:	mov	x0, x24
    1548:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    154c:	ldr	x21, [x25, #32]
    1550:	ldr	x23, [sp, #72]
    1554:	ldr	x25, [x24]
    1558:	cbz	x23, 15e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9c0>
    155c:	adrp	x9, 0 <__pthread_key_create>
    1560:	ldr	x9, [x9]
    1564:	add	x8, x23, #0x8
    1568:	cbz	x9, 1588 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x964>
    156c:	ldaxr	w9, [x8]
    1570:	sub	w10, w9, #0x1
    1574:	stlxr	w11, w10, [x8]
    1578:	cbnz	w11, 156c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x948>
    157c:	cmp	w9, #0x1
    1580:	b.eq	159c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x978>  // b.none
    1584:	b	15e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9c0>
    1588:	ldr	w9, [x8]
    158c:	sub	w10, w9, #0x1
    1590:	str	w10, [x8]
    1594:	cmp	w9, #0x1
    1598:	b.ne	15e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9c0>  // b.any
    159c:	mov	x24, x23
    15a0:	ldr	x8, [x24], #12
    15a4:	mov	x0, x23
    15a8:	ldr	x8, [x8, #16]
    15ac:	blr	x8
    15b0:	adrp	x8, 0 <__pthread_key_create>
    15b4:	ldr	x8, [x8]
    15b8:	cbz	x8, 3688 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2a64>
    15bc:	ldaxr	w8, [x24]
    15c0:	sub	w9, w8, #0x1
    15c4:	stlxr	w10, w9, [x24]
    15c8:	cbnz	w10, 15bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x998>
    15cc:	cmp	w8, #0x1
    15d0:	b.ne	15e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9c0>  // b.any
    15d4:	ldr	x8, [x23]
    15d8:	mov	x0, x23
    15dc:	ldr	x8, [x8, #24]
    15e0:	blr	x8
    15e4:	mov	w0, #0x220                 	// #544
    15e8:	bl	0 <_Znwm>
    15ec:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    15f0:	ldr	x8, [x8]
    15f4:	movi	v0.2s, #0x1
    15f8:	str	d0, [x0, #8]
    15fc:	movi	v0.2d, #0x0
    1600:	add	x8, x8, #0x10
    1604:	mov	x9, x0
    1608:	mov	x1, x0
    160c:	mov	w10, #0x13                  	// #19
    1610:	str	x8, [x0]
    1614:	stp	q0, q0, [x0, #48]
    1618:	stp	q0, q0, [x0, #80]
    161c:	stp	q0, q0, [x0, #112]
    1620:	stp	q0, q0, [x0, #144]
    1624:	stp	q0, q0, [x0, #176]
    1628:	stp	q0, q0, [x0, #208]
    162c:	stp	q0, q0, [x0, #240]
    1630:	stp	q0, q0, [x0, #272]
    1634:	stp	q0, q0, [x0, #304]
    1638:	stp	q0, q0, [x0, #336]
    163c:	stp	q0, q0, [x0, #368]
    1640:	stp	q0, q0, [x0, #400]
    1644:	stp	q0, q0, [x0, #432]
    1648:	stp	q0, q0, [x0, #464]
    164c:	stp	q0, q0, [x0, #496]
    1650:	str	q0, [x9, #32]!
    1654:	mov	w11, #0xff                  	// #255
    1658:	mov	w8, #0x6                   	// #6
    165c:	str	q0, [x0, #528]
    1660:	str	x9, [x1, #16]!
    1664:	str	x10, [x9]
    1668:	str	d8, [x0, #24]
    166c:	mov	w9, #0x8                   	// #8
    1670:	strb	w11, [x0, #40]
    1674:	strb	w8, [x0, #56]
    1678:	ldp	w8, w11, [x0, #24]
    167c:	ldur	w10, [sp, #131]
    1680:	strb	w9, [x0, #72]
    1684:	ldr	w9, [sp, #128]
    1688:	cmp	w8, w11
    168c:	str	w10, [x0, #76]
    1690:	str	xzr, [x0, #48]
    1694:	str	xzr, [x0, #64]
    1698:	stur	w9, [x0, #73]
    169c:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    16a0:	add	w8, w8, #0x1
    16a4:	str	w8, [x0, #24]
    16a8:	ldr	x23, [x19]
    16ac:	stp	x1, x0, [sp, #128]
    16b0:	str	x26, [sp, #56]
    16b4:	mov	x0, x23
    16b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    16bc:	ldp	x1, x8, [x23, #32]
    16c0:	add	x24, x23, #0x18
    16c4:	cmp	x1, x8
    16c8:	b.eq	16ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xac8>  // b.none
    16cc:	str	xzr, [x1, #8]
    16d0:	ldr	q0, [sp, #128]
    16d4:	add	x26, x1, #0x10
    16d8:	str	xzr, [sp, #136]
    16dc:	str	q0, [x1]
    16e0:	str	xzr, [sp, #128]
    16e4:	str	x26, [x23, #32]
    16e8:	b	16fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xad8>
    16ec:	add	x2, sp, #0x80
    16f0:	mov	x0, x24
    16f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    16f8:	ldr	x26, [x23, #32]
    16fc:	ldr	x23, [sp, #136]
    1700:	ldr	x8, [x24]
    1704:	str	x8, [sp, #16]
    1708:	cbz	x23, 1794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb70>
    170c:	adrp	x9, 0 <__pthread_key_create>
    1710:	ldr	x9, [x9]
    1714:	add	x8, x23, #0x8
    1718:	cbz	x9, 1738 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb14>
    171c:	ldaxr	w9, [x8]
    1720:	sub	w10, w9, #0x1
    1724:	stlxr	w11, w10, [x8]
    1728:	cbnz	w11, 171c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xaf8>
    172c:	cmp	w9, #0x1
    1730:	b.eq	174c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb28>  // b.none
    1734:	b	1794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb70>
    1738:	ldr	w9, [x8]
    173c:	sub	w10, w9, #0x1
    1740:	str	w10, [x8]
    1744:	cmp	w9, #0x1
    1748:	b.ne	1794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb70>  // b.any
    174c:	mov	x24, x23
    1750:	ldr	x8, [x24], #12
    1754:	mov	x0, x23
    1758:	ldr	x8, [x8, #16]
    175c:	blr	x8
    1760:	adrp	x8, 0 <__pthread_key_create>
    1764:	ldr	x8, [x8]
    1768:	cbz	x8, 36a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2a7c>
    176c:	ldaxr	w8, [x24]
    1770:	sub	w9, w8, #0x1
    1774:	stlxr	w10, w9, [x24]
    1778:	cbnz	w10, 176c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb48>
    177c:	cmp	w8, #0x1
    1780:	b.ne	1794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb70>  // b.any
    1784:	ldr	x8, [x23]
    1788:	mov	x0, x23
    178c:	ldr	x8, [x8, #24]
    1790:	blr	x8
    1794:	mov	w0, #0x220                 	// #544
    1798:	bl	0 <_Znwm>
    179c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    17a0:	ldr	x8, [x8]
    17a4:	movi	v0.2s, #0x1
    17a8:	str	d0, [x0, #8]
    17ac:	movi	v0.2d, #0x0
    17b0:	add	x8, x8, #0x10
    17b4:	mov	x1, x0
    17b8:	mov	x24, x0
    17bc:	mov	w9, #0x14                  	// #20
    17c0:	str	x8, [x0]
    17c4:	stp	q0, q0, [x0, #48]
    17c8:	stp	q0, q0, [x0, #80]
    17cc:	stp	q0, q0, [x0, #112]
    17d0:	stp	q0, q0, [x0, #144]
    17d4:	stp	q0, q0, [x0, #176]
    17d8:	stp	q0, q0, [x0, #208]
    17dc:	stp	q0, q0, [x0, #240]
    17e0:	stp	q0, q0, [x0, #272]
    17e4:	stp	q0, q0, [x0, #304]
    17e8:	stp	q0, q0, [x0, #336]
    17ec:	stp	q0, q0, [x0, #368]
    17f0:	stp	q0, q0, [x0, #400]
    17f4:	stp	q0, q0, [x0, #432]
    17f8:	stp	q0, q0, [x0, #464]
    17fc:	stp	q0, q0, [x0, #496]
    1800:	str	q0, [x1, #32]!
    1804:	str	q0, [x0, #528]
    1808:	str	x1, [x24, #16]!
    180c:	str	x9, [x1]
    1810:	str	d8, [x0, #24]
    1814:	mov	w10, #0xff                  	// #255
    1818:	ldp	w8, w9, [x0, #24]
    181c:	ldr	w14, [sp, #112]
    1820:	strb	w10, [x0, #40]
    1824:	ldur	w10, [sp, #115]
    1828:	mov	w11, #0x1                   	// #1
    182c:	mov	w12, #0x2                   	// #2
    1830:	mov	w13, #0x6                   	// #6
    1834:	cmp	w8, w9
    1838:	str	x11, [x0, #48]
    183c:	strb	w12, [x0, #56]
    1840:	strb	w13, [x0, #72]
    1844:	str	w10, [x0, #76]
    1848:	stur	w14, [x0, #73]
    184c:	str	xzr, [x0, #64]
    1850:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    1854:	add	w8, w8, #0x1
    1858:	mov	x23, x0
    185c:	cmp	w8, w9
    1860:	str	x26, [sp, #24]
    1864:	str	w8, [x0, #24]
    1868:	b.cs	4d70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x414c>  // b.hs, b.nlast
    186c:	ldr	x9, [x23, #16]
    1870:	mov	w10, #0x2                   	// #2
    1874:	str	x25, [sp, #32]
    1878:	add	x8, x9, w8, uxtw #4
    187c:	str	x22, [x8]
    1880:	strb	w10, [x8, #8]
    1884:	ldur	w9, [sp, #115]
    1888:	ldr	w10, [sp, #112]
    188c:	str	w9, [x8, #12]
    1890:	stur	w10, [x8, #9]
    1894:	ldp	w8, w9, [x23, #24]
    1898:	cmp	w8, w9
    189c:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    18a0:	add	w8, w8, #0x1
    18a4:	str	w8, [x23, #24]
    18a8:	ldr	x25, [x19]
    18ac:	mov	x1, x24
    18b0:	mov	x26, x21
    18b4:	mov	x21, x27
    18b8:	mov	x0, x25
    18bc:	stp	x24, x23, [sp, #112]
    18c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    18c4:	ldp	x1, x8, [x25, #32]
    18c8:	add	x24, x25, #0x18
    18cc:	cmp	x1, x8
    18d0:	b.eq	18f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xcd0>  // b.none
    18d4:	str	xzr, [x1, #8]
    18d8:	ldr	q0, [sp, #112]
    18dc:	add	x27, x1, #0x10
    18e0:	str	xzr, [sp, #120]
    18e4:	str	q0, [x1]
    18e8:	str	xzr, [sp, #112]
    18ec:	str	x27, [x25, #32]
    18f0:	b	1904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xce0>
    18f4:	add	x2, sp, #0x70
    18f8:	mov	x0, x24
    18fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1900:	ldr	x27, [x25, #32]
    1904:	ldr	x23, [sp, #120]
    1908:	ldr	x24, [x24]
    190c:	cbz	x23, 1998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd74>
    1910:	adrp	x9, 0 <__pthread_key_create>
    1914:	ldr	x9, [x9]
    1918:	add	x8, x23, #0x8
    191c:	cbz	x9, 193c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd18>
    1920:	ldaxr	w9, [x8]
    1924:	sub	w10, w9, #0x1
    1928:	stlxr	w11, w10, [x8]
    192c:	cbnz	w11, 1920 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xcfc>
    1930:	cmp	w9, #0x1
    1934:	b.eq	1950 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd2c>  // b.none
    1938:	b	1998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd74>
    193c:	ldr	w9, [x8]
    1940:	sub	w10, w9, #0x1
    1944:	str	w10, [x8]
    1948:	cmp	w9, #0x1
    194c:	b.ne	1998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd74>  // b.any
    1950:	mov	x25, x23
    1954:	ldr	x8, [x25], #12
    1958:	mov	x0, x23
    195c:	ldr	x8, [x8, #16]
    1960:	blr	x8
    1964:	adrp	x8, 0 <__pthread_key_create>
    1968:	ldr	x8, [x8]
    196c:	cbz	x8, 36b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2a94>
    1970:	ldaxr	w8, [x25]
    1974:	sub	w9, w8, #0x1
    1978:	stlxr	w10, w9, [x25]
    197c:	cbnz	w10, 1970 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd4c>
    1980:	cmp	w8, #0x1
    1984:	b.ne	1998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd74>  // b.any
    1988:	ldr	x8, [x23]
    198c:	mov	x0, x23
    1990:	ldr	x8, [x8, #24]
    1994:	blr	x8
    1998:	mov	w0, #0x220                 	// #544
    199c:	bl	0 <_Znwm>
    19a0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    19a4:	ldr	x8, [x8]
    19a8:	movi	v0.2s, #0x1
    19ac:	str	d0, [x0, #8]
    19b0:	movi	v0.2d, #0x0
    19b4:	add	x8, x8, #0x10
    19b8:	mov	x9, x0
    19bc:	mov	x1, x0
    19c0:	mov	w10, #0xb                   	// #11
    19c4:	str	x8, [x0]
    19c8:	stp	q0, q0, [x0, #48]
    19cc:	stp	q0, q0, [x0, #80]
    19d0:	stp	q0, q0, [x0, #112]
    19d4:	stp	q0, q0, [x0, #144]
    19d8:	stp	q0, q0, [x0, #176]
    19dc:	stp	q0, q0, [x0, #208]
    19e0:	stp	q0, q0, [x0, #240]
    19e4:	stp	q0, q0, [x0, #272]
    19e8:	stp	q0, q0, [x0, #304]
    19ec:	stp	q0, q0, [x0, #336]
    19f0:	stp	q0, q0, [x0, #368]
    19f4:	stp	q0, q0, [x0, #400]
    19f8:	stp	q0, q0, [x0, #432]
    19fc:	stp	q0, q0, [x0, #464]
    1a00:	stp	q0, q0, [x0, #496]
    1a04:	str	q0, [x9, #32]!
    1a08:	mov	w8, #0x8                   	// #8
    1a0c:	str	q0, [x0, #528]
    1a10:	str	x9, [x1, #16]!
    1a14:	str	x10, [x9]
    1a18:	mov	w9, #0x4                   	// #4
    1a1c:	str	d8, [x0, #24]
    1a20:	mov	w11, #0xff                  	// #255
    1a24:	str	x8, [x0, #48]
    1a28:	strb	w9, [x0, #56]
    1a2c:	ldp	w8, w9, [x0, #24]
    1a30:	strb	w11, [x0, #40]
    1a34:	ldur	w11, [sp, #99]
    1a38:	ldr	w12, [sp, #96]
    1a3c:	mov	w10, #0x2                   	// #2
    1a40:	cmp	w8, w9
    1a44:	str	x22, [x0, #64]
    1a48:	strb	w10, [x0, #72]
    1a4c:	str	w11, [x0, #76]
    1a50:	stur	w12, [x0, #73]
    1a54:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    1a58:	add	w8, w8, #0x1
    1a5c:	str	w8, [x0, #24]
    1a60:	ldr	x22, [x19]
    1a64:	stp	x1, x0, [sp, #96]
    1a68:	mov	x0, x22
    1a6c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1a70:	ldp	x1, x8, [x22, #32]
    1a74:	add	x23, x22, #0x18
    1a78:	cmp	x1, x8
    1a7c:	b.eq	1aa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xe7c>  // b.none
    1a80:	str	xzr, [x1, #8]
    1a84:	ldr	q0, [sp, #96]
    1a88:	add	x25, x1, #0x10
    1a8c:	str	xzr, [sp, #104]
    1a90:	str	q0, [x1]
    1a94:	str	xzr, [sp, #96]
    1a98:	str	x25, [x22, #32]
    1a9c:	b	1ab0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xe8c>
    1aa0:	add	x2, sp, #0x60
    1aa4:	mov	x0, x23
    1aa8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1aac:	ldr	x25, [x22, #32]
    1ab0:	ldr	x22, [sp, #104]
    1ab4:	ldr	x23, [x23]
    1ab8:	cbz	x22, 1b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf20>
    1abc:	adrp	x9, 0 <__pthread_key_create>
    1ac0:	ldr	x9, [x9]
    1ac4:	add	x8, x22, #0x8
    1ac8:	cbz	x9, 1ae8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xec4>
    1acc:	ldaxr	w9, [x8]
    1ad0:	sub	w10, w9, #0x1
    1ad4:	stlxr	w11, w10, [x8]
    1ad8:	cbnz	w11, 1acc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xea8>
    1adc:	cmp	w9, #0x1
    1ae0:	b.eq	1afc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xed8>  // b.none
    1ae4:	b	1b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf20>
    1ae8:	ldr	w9, [x8]
    1aec:	sub	w10, w9, #0x1
    1af0:	str	w10, [x8]
    1af4:	cmp	w9, #0x1
    1af8:	b.ne	1b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf20>  // b.any
    1afc:	mov	x28, x22
    1b00:	ldr	x8, [x28], #12
    1b04:	mov	x0, x22
    1b08:	ldr	x8, [x8, #16]
    1b0c:	blr	x8
    1b10:	adrp	x8, 0 <__pthread_key_create>
    1b14:	ldr	x8, [x8]
    1b18:	cbz	x8, 36d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2aac>
    1b1c:	ldaxr	w8, [x28]
    1b20:	sub	w9, w8, #0x1
    1b24:	stlxr	w10, w9, [x28]
    1b28:	cbnz	w10, 1b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xef8>
    1b2c:	cmp	w8, #0x1
    1b30:	b.ne	1b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf20>  // b.any
    1b34:	ldr	x8, [x22]
    1b38:	mov	x0, x22
    1b3c:	ldr	x8, [x8, #24]
    1b40:	blr	x8
    1b44:	ldp	x10, x9, [x19, #80]
    1b48:	ldr	w8, [sp, #512]
    1b4c:	ldr	w11, [sp, #516]
    1b50:	sub	x9, x9, x10
    1b54:	asr	x22, x9, #3
    1b58:	cmp	w8, w11
    1b5c:	b.cs	4d88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4164>  // b.hs, b.nlast
    1b60:	ldr	x9, [sp, #504]
    1b64:	str	x22, [x9, w8, uxtw #3]
    1b68:	ldr	w8, [sp, #512]
    1b6c:	ldr	w9, [sp, #516]
    1b70:	cmp	w8, w9
    1b74:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    1b78:	add	w8, w8, #0x1
    1b7c:	str	w8, [sp, #512]
    1b80:	ldr	x0, [x19]
    1b84:	add	x2, sp, #0x1f8
    1b88:	mov	w1, #0x1                   	// #1
    1b8c:	mov	w3, wzr
    1b90:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1b94:	str	wzr, [sp, #512]
    1b98:	ldp	x8, x9, [x19, #80]
    1b9c:	sub	x9, x9, x8
    1ba0:	lsr	x10, x9, #3
    1ba4:	cbz	w10, 24d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x18ac>
    1ba8:	ldp	x11, x10, [sp, #40]
    1bac:	ldr	x13, [sp, #16]
    1bb0:	ldr	x14, [sp, #56]
    1bb4:	sub	x15, x27, x24
    1bb8:	sub	x10, x10, x11
    1bbc:	ldp	x12, x11, [sp, #24]
    1bc0:	ubfx	x27, x9, #3, #32
    1bc4:	lsr	x9, x10, #4
    1bc8:	add	w9, w9, #0x3
    1bcc:	sub	x11, x26, x11
    1bd0:	sub	x12, x12, x13
    1bd4:	lsr	x10, x11, #4
    1bd8:	sub	x13, x25, x23
    1bdc:	sub	x14, x21, x14
    1be0:	lsr	x11, x12, #4
    1be4:	str	w9, [sp, #48]
    1be8:	add	w9, w10, #0x3
    1bec:	lsr	x12, x13, #4
    1bf0:	lsr	x13, x14, #4
    1bf4:	str	w9, [sp, #40]
    1bf8:	add	w9, w11, #0x3
    1bfc:	adrp	x21, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    1c00:	lsr	x14, x15, #4
    1c04:	str	w9, [sp, #24]
    1c08:	add	w9, w13, #0x3
    1c0c:	mov	x28, xzr
    1c10:	add	x21, x21, #0x0
    1c14:	add	w22, w12, #0x3
    1c18:	str	w9, [sp, #56]
    1c1c:	add	w9, w14, #0x3
    1c20:	str	w9, [sp, #32]
    1c24:	ldr	x23, [x8, x28, lsl #3]
    1c28:	ldr	w8, [x23, #8]
    1c2c:	and	w9, w8, #0xff
    1c30:	cmp	w9, #0x10
    1c34:	b.hi	1f28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1304>  // b.pmore
    1c38:	and	x9, x8, #0xff
    1c3c:	adr	x10, 1c4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1028>
    1c40:	ldrh	w11, [x21, x9, lsl #1]
    1c44:	add	x10, x10, x11, lsl #2
    1c48:	br	x10
    1c4c:	mov	w24, wzr
    1c50:	mov	w25, #0x2                   	// #2
    1c54:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    1c58:	cbz	x23, 505c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4438>
    1c5c:	ldr	w8, [sp, #516]
    1c60:	ldr	x24, [x23, #32]
    1c64:	cbz	w8, 239c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1778>
    1c68:	mov	w8, wzr
    1c6c:	ldr	x9, [sp, #504]
    1c70:	str	x24, [x9, w8, uxtw #3]
    1c74:	ldr	w8, [sp, #512]
    1c78:	ldr	w9, [sp, #516]
    1c7c:	cmp	w8, w9
    1c80:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    1c84:	add	w8, w8, #0x1
    1c88:	str	w8, [sp, #512]
    1c8c:	ldr	w10, [x19, #72]
    1c90:	ldr	x11, [x19, #56]
    1c94:	cbz	w10, 20e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x14bc>
    1c98:	ldr	x12, [x23, #24]
    1c9c:	orr	x13, x12, #0x8
    1ca0:	cmn	x13, #0x8
    1ca4:	b.eq	4ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42c0>  // b.none
    1ca8:	ubfx	x13, x12, #4, #28
    1cac:	eor	w14, w13, w12, lsr #9
    1cb0:	sub	w13, w10, #0x1
    1cb4:	and	w14, w14, w13
    1cb8:	add	x15, x11, w14, uxtw #4
    1cbc:	ldr	x16, [x15]
    1cc0:	cmp	x16, x12
    1cc4:	b.eq	20e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x14c0>  // b.none
    1cc8:	mov	w17, #0x1                   	// #1
    1ccc:	cmn	x16, #0x8
    1cd0:	b.eq	20e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x14bc>  // b.none
    1cd4:	add	w14, w14, w17
    1cd8:	and	w14, w14, w13
    1cdc:	add	x15, x11, w14, uxtw #4
    1ce0:	ldr	x16, [x15]
    1ce4:	add	w17, w17, #0x1
    1ce8:	cmp	x16, x12
    1cec:	b.eq	20e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x14c0>  // b.none
    1cf0:	b	1ccc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x10a8>
    1cf4:	cbz	x23, 507c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4458>
    1cf8:	ldr	w8, [sp, #516]
    1cfc:	ldr	x24, [x23, #32]
    1d00:	cbz	w8, 23b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1794>
    1d04:	mov	w8, wzr
    1d08:	ldr	x9, [sp, #504]
    1d0c:	str	x24, [x9, w8, uxtw #3]
    1d10:	ldr	w8, [sp, #512]
    1d14:	ldr	w9, [sp, #516]
    1d18:	cmp	w8, w9
    1d1c:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    1d20:	add	w8, w8, #0x1
    1d24:	str	w8, [sp, #512]
    1d28:	ldr	w10, [x19, #72]
    1d2c:	ldr	x11, [x19, #56]
    1d30:	cbz	w10, 215c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1538>
    1d34:	ldr	x12, [x23, #24]
    1d38:	orr	x13, x12, #0x8
    1d3c:	cmn	x13, #0x8
    1d40:	b.eq	4ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42c0>  // b.none
    1d44:	ubfx	x13, x12, #4, #28
    1d48:	eor	w14, w13, w12, lsr #9
    1d4c:	sub	w13, w10, #0x1
    1d50:	and	w14, w14, w13
    1d54:	add	x15, x11, w14, uxtw #4
    1d58:	ldr	x16, [x15]
    1d5c:	cmp	x16, x12
    1d60:	b.eq	2160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x153c>  // b.none
    1d64:	mov	w17, #0x1                   	// #1
    1d68:	cmn	x16, #0x8
    1d6c:	b.eq	215c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1538>  // b.none
    1d70:	add	w14, w14, w17
    1d74:	and	w14, w14, w13
    1d78:	add	x15, x11, w14, uxtw #4
    1d7c:	ldr	x16, [x15]
    1d80:	add	w17, w17, #0x1
    1d84:	cmp	x16, x12
    1d88:	b.eq	2160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x153c>  // b.none
    1d8c:	b	1d68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1144>
    1d90:	cbz	x23, 509c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4478>
    1d94:	ldr	w9, [sp, #516]
    1d98:	lsr	x23, x8, #8
    1d9c:	cbz	w9, 23d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x17b0>
    1da0:	mov	w8, wzr
    1da4:	ldr	x9, [sp, #504]
    1da8:	str	x23, [x9, w8, uxtw #3]
    1dac:	ldr	w8, [sp, #512]
    1db0:	ldr	w9, [sp, #516]
    1db4:	cmp	w8, w9
    1db8:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    1dbc:	add	w8, w8, #0x1
    1dc0:	mov	w24, wzr
    1dc4:	str	w8, [sp, #512]
    1dc8:	mov	w25, #0x7                   	// #7
    1dcc:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    1dd0:	mov	w24, wzr
    1dd4:	mov	w25, #0xd                   	// #13
    1dd8:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    1ddc:	cbz	x23, 50bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4498>
    1de0:	ldr	w9, [sp, #516]
    1de4:	cmp	w8, #0xff
    1de8:	cset	w24, hi  // hi = pmore
    1dec:	cbz	w9, 23f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x17cc>
    1df0:	mov	w8, wzr
    1df4:	ldr	x9, [sp, #504]
    1df8:	str	x24, [x9, w8, uxtw #3]
    1dfc:	ldr	w8, [sp, #512]
    1e00:	ldr	w9, [sp, #516]
    1e04:	cmp	w8, w9
    1e08:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    1e0c:	add	w8, w8, #0x1
    1e10:	str	w8, [sp, #512]
    1e14:	ldr	w10, [x19, #72]
    1e18:	ldr	x11, [x19, #56]
    1e1c:	cbz	w10, 21a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1584>
    1e20:	ldr	x12, [x23, #16]
    1e24:	ldr	x12, [x12]
    1e28:	orr	x13, x12, #0x8
    1e2c:	cmn	x13, #0x8
    1e30:	b.eq	4ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42c0>  // b.none
    1e34:	ubfx	x13, x12, #4, #28
    1e38:	eor	w14, w13, w12, lsr #9
    1e3c:	sub	w13, w10, #0x1
    1e40:	and	w14, w14, w13
    1e44:	add	x15, x11, w14, uxtw #4
    1e48:	ldr	x16, [x15]
    1e4c:	cmp	x16, x12
    1e50:	b.eq	21ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1588>  // b.none
    1e54:	mov	w17, #0x1                   	// #1
    1e58:	cmn	x16, #0x8
    1e5c:	b.eq	21a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1584>  // b.none
    1e60:	add	w14, w14, w17
    1e64:	and	w14, w14, w13
    1e68:	add	x15, x11, w14, uxtw #4
    1e6c:	ldr	x16, [x15]
    1e70:	add	w17, w17, #0x1
    1e74:	cmp	x16, x12
    1e78:	b.eq	21ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1588>  // b.none
    1e7c:	b	1e58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1234>
    1e80:	mov	w24, wzr
    1e84:	mov	w25, #0x11                  	// #17
    1e88:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    1e8c:	mov	w24, wzr
    1e90:	mov	w25, #0x3                   	// #3
    1e94:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    1e98:	cbz	x23, 50dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x44b8>
    1e9c:	ldr	w8, [x19, #72]
    1ea0:	ldr	x9, [x19, #56]
    1ea4:	cbz	w8, 22e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16bc>
    1ea8:	ldr	x10, [x23, #24]
    1eac:	orr	x11, x10, #0x8
    1eb0:	cmn	x11, #0x8
    1eb4:	b.eq	4ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42c0>  // b.none
    1eb8:	ubfx	x11, x10, #4, #28
    1ebc:	eor	w12, w11, w10, lsr #9
    1ec0:	sub	w11, w8, #0x1
    1ec4:	and	w12, w12, w11
    1ec8:	add	x13, x9, w12, uxtw #4
    1ecc:	ldr	x14, [x13]
    1ed0:	cmp	x14, x10
    1ed4:	b.eq	22e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16c0>  // b.none
    1ed8:	mov	w15, #0x1                   	// #1
    1edc:	cmn	x14, #0x8
    1ee0:	b.eq	22e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16bc>  // b.none
    1ee4:	add	w12, w12, w15
    1ee8:	and	w12, w12, w11
    1eec:	add	x13, x9, w12, uxtw #4
    1ef0:	ldr	x14, [x13]
    1ef4:	add	w15, w15, #0x1
    1ef8:	cmp	x14, x10
    1efc:	b.eq	22e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16c0>  // b.none
    1f00:	b	1edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x12b8>
    1f04:	mov	w24, wzr
    1f08:	mov	w25, #0x4                   	// #4
    1f0c:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    1f10:	mov	w24, wzr
    1f14:	mov	w25, #0x5                   	// #5
    1f18:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    1f1c:	mov	w24, wzr
    1f20:	mov	w25, #0xa                   	// #10
    1f24:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    1f28:	mov	w25, wzr
    1f2c:	mov	w24, wzr
    1f30:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    1f34:	mov	w24, wzr
    1f38:	mov	w25, #0xe                   	// #14
    1f3c:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    1f40:	cbz	x23, 50fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x44d8>
    1f44:	ldr	w9, [sp, #516]
    1f48:	ubfx	x24, x8, #9, #1
    1f4c:	cbz	w9, 240c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x17e8>
    1f50:	mov	w8, wzr
    1f54:	ldr	x9, [sp, #504]
    1f58:	str	x24, [x9, w8, uxtw #3]
    1f5c:	ldr	w9, [sp, #512]
    1f60:	ldr	w8, [sp, #516]
    1f64:	cmp	w9, w8
    1f68:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    1f6c:	add	w9, w9, #0x1
    1f70:	str	w9, [sp, #512]
    1f74:	ldr	w10, [x23, #12]
    1f78:	cbz	w10, 207c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1458>
    1f7c:	ldr	x24, [x23, #16]
    1f80:	add	x25, x24, x10, lsl #3
    1f84:	ldr	w10, [x19, #72]
    1f88:	ldr	x11, [x19, #56]
    1f8c:	cbz	w10, 1fec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x13c8>
    1f90:	ldr	x12, [x24]
    1f94:	orr	x13, x12, #0x8
    1f98:	cmn	x13, #0x8
    1f9c:	b.eq	4ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42c0>  // b.none
    1fa0:	ubfx	x13, x12, #4, #28
    1fa4:	eor	w14, w13, w12, lsr #9
    1fa8:	sub	w13, w10, #0x1
    1fac:	and	w14, w14, w13
    1fb0:	add	x15, x11, w14, uxtw #4
    1fb4:	ldr	x16, [x15]
    1fb8:	cmp	x16, x12
    1fbc:	b.eq	1ff0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x13cc>  // b.none
    1fc0:	mov	w17, #0x1                   	// #1
    1fc4:	cmn	x16, #0x8
    1fc8:	b.eq	1fec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x13c8>  // b.none
    1fcc:	add	w14, w14, w17
    1fd0:	and	w14, w14, w13
    1fd4:	add	x15, x11, w14, uxtw #4
    1fd8:	ldr	x16, [x15]
    1fdc:	add	w17, w17, #0x1
    1fe0:	cmp	x16, x12
    1fe4:	b.eq	1ff0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x13cc>  // b.none
    1fe8:	b	1fc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x13a0>
    1fec:	add	x15, x11, x10, lsl #4
    1ff0:	add	x10, x11, x10, lsl #4
    1ff4:	cmp	x15, x10
    1ff8:	b.eq	4f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4320>  // b.none
    1ffc:	ldr	w10, [x15, #8]
    2000:	cmp	w9, w8
    2004:	sub	w26, w10, #0x1
    2008:	b.cs	203c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1418>  // b.hs, b.nlast
    200c:	ldr	x8, [sp, #504]
    2010:	str	x26, [x8, w9, uxtw #3]
    2014:	ldr	w9, [sp, #512]
    2018:	ldr	w8, [sp, #516]
    201c:	cmp	w9, w8
    2020:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2024:	add	x24, x24, #0x8
    2028:	add	w9, w9, #0x1
    202c:	cmp	x24, x25
    2030:	str	w9, [sp, #512]
    2034:	b.ne	1f84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1360>  // b.any
    2038:	b	207c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1458>
    203c:	ldr	x1, [sp, #8]
    2040:	add	x0, sp, #0x1f8
    2044:	mov	w3, #0x8                   	// #8
    2048:	mov	x2, xzr
    204c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2050:	ldr	w9, [sp, #512]
    2054:	b	200c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x13e8>
    2058:	mov	w24, wzr
    205c:	mov	w25, #0xf                   	// #15
    2060:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    2064:	mov	w24, wzr
    2068:	mov	w25, #0x10                  	// #16
    206c:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    2070:	mov	w24, wzr
    2074:	mov	w25, #0x16                  	// #22
    2078:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    207c:	ldr	w8, [x23, #8]
    2080:	tbnz	w8, #10, 20d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x14b0>
    2084:	lsl	w9, w8, #23
    2088:	tst	w8, #0x100
    208c:	mov	w8, #0x14                  	// #20
    2090:	mov	w10, #0x6                   	// #6
    2094:	csel	w25, w10, w8, eq  // eq = none
    2098:	ldr	w8, [sp, #32]
    209c:	mov	x0, x23
    20a0:	and	w24, w8, w9, asr #31
    20a4:	bl	0 <_ZNK4llvm10StructType7getNameEv>
    20a8:	cbz	x1, 2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    20ac:	ldr	x26, [x19]
    20b0:	mov	x0, x23
    20b4:	bl	0 <_ZNK4llvm10StructType7getNameEv>
    20b8:	ldr	w4, [sp, #24]
    20bc:	mov	x2, x0
    20c0:	mov	x3, x1
    20c4:	mov	w1, #0x13                  	// #19
    20c8:	mov	x0, x26
    20cc:	bl	10c44 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    20d0:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    20d4:	ldr	w24, [sp, #40]
    20d8:	mov	w25, #0x12                  	// #18
    20dc:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    20e0:	add	x15, x11, x10, lsl #4
    20e4:	add	x10, x11, x10, lsl #4
    20e8:	cmp	x15, x10
    20ec:	b.eq	4f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4320>  // b.none
    20f0:	ldr	w10, [x15, #8]
    20f4:	cmp	w8, w9
    20f8:	sub	w24, w10, #0x1
    20fc:	b.cs	2428 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1804>  // b.hs, b.nlast
    2100:	ldr	x9, [sp, #504]
    2104:	str	x24, [x9, w8, uxtw #3]
    2108:	ldr	w8, [sp, #512]
    210c:	ldr	w9, [sp, #516]
    2110:	cmp	w8, w9
    2114:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2118:	add	w8, w8, #0x1
    211c:	str	w8, [sp, #512]
    2120:	ldrb	w10, [x23, #40]
    2124:	cbz	w10, 2368 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1744>
    2128:	cmp	w8, w9
    212c:	b.cs	24b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1890>  // b.hs, b.nlast
    2130:	ldr	x9, [sp, #504]
    2134:	mov	w10, #0x1                   	// #1
    2138:	str	x10, [x9, w8, uxtw #3]
    213c:	ldr	w8, [sp, #512]
    2140:	ldr	w9, [sp, #516]
    2144:	cmp	w8, w9
    2148:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    214c:	mov	w24, wzr
    2150:	add	w8, w8, #0x1
    2154:	str	w8, [sp, #512]
    2158:	b	236c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1748>
    215c:	add	x15, x11, x10, lsl #4
    2160:	add	x10, x11, x10, lsl #4
    2164:	cmp	x15, x10
    2168:	b.eq	4f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4320>  // b.none
    216c:	ldr	w10, [x15, #8]
    2170:	cmp	w8, w9
    2174:	sub	w23, w10, #0x1
    2178:	b.cs	2444 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1820>  // b.hs, b.nlast
    217c:	ldr	x9, [sp, #504]
    2180:	str	x23, [x9, w8, uxtw #3]
    2184:	ldr	w8, [sp, #512]
    2188:	ldr	w9, [sp, #516]
    218c:	cmp	w8, w9
    2190:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2194:	add	w8, w8, #0x1
    2198:	str	w8, [sp, #512]
    219c:	mov	w25, #0xb                   	// #11
    21a0:	mov	w24, w22
    21a4:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    21a8:	add	x15, x11, x10, lsl #4
    21ac:	add	x10, x11, x10, lsl #4
    21b0:	cmp	x15, x10
    21b4:	b.eq	4f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4320>  // b.none
    21b8:	ldr	w10, [x15, #8]
    21bc:	cmp	w8, w9
    21c0:	sub	w24, w10, #0x1
    21c4:	b.cs	2460 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x183c>  // b.hs, b.nlast
    21c8:	ldr	x9, [sp, #504]
    21cc:	str	x24, [x9, w8, uxtw #3]
    21d0:	ldr	w9, [sp, #512]
    21d4:	ldr	w8, [sp, #516]
    21d8:	cmp	w9, w8
    21dc:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    21e0:	add	w9, w9, #0x1
    21e4:	str	w9, [sp, #512]
    21e8:	ldr	w10, [x23, #12]
    21ec:	subs	w10, w10, #0x1
    21f0:	b.eq	22d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16b0>  // b.none
    21f4:	mov	x24, xzr
    21f8:	mov	w25, w10
    21fc:	ldr	w10, [x19, #72]
    2200:	ldr	x11, [x19, #56]
    2204:	add	x24, x24, #0x1
    2208:	cbz	w10, 226c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1648>
    220c:	ldr	x12, [x23, #16]
    2210:	ldr	x12, [x12, x24, lsl #3]
    2214:	orr	x13, x12, #0x8
    2218:	cmn	x13, #0x8
    221c:	b.eq	4ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42c0>  // b.none
    2220:	ubfx	x13, x12, #4, #28
    2224:	eor	w14, w13, w12, lsr #9
    2228:	sub	w13, w10, #0x1
    222c:	and	w14, w14, w13
    2230:	add	x15, x11, w14, uxtw #4
    2234:	ldr	x16, [x15]
    2238:	cmp	x16, x12
    223c:	b.eq	2270 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x164c>  // b.none
    2240:	mov	w17, #0x1                   	// #1
    2244:	cmn	x16, #0x8
    2248:	b.eq	226c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1648>  // b.none
    224c:	add	w14, w14, w17
    2250:	and	w14, w14, w13
    2254:	add	x15, x11, w14, uxtw #4
    2258:	ldr	x16, [x15]
    225c:	add	w17, w17, #0x1
    2260:	cmp	x16, x12
    2264:	b.eq	2270 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x164c>  // b.none
    2268:	b	2244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1620>
    226c:	add	x15, x11, x10, lsl #4
    2270:	add	x10, x11, x10, lsl #4
    2274:	cmp	x15, x10
    2278:	b.eq	4f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4320>  // b.none
    227c:	ldr	w10, [x15, #8]
    2280:	cmp	w9, w8
    2284:	sub	w26, w10, #0x1
    2288:	b.cs	22b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1694>  // b.hs, b.nlast
    228c:	ldr	x8, [sp, #504]
    2290:	str	x26, [x8, w9, uxtw #3]
    2294:	ldr	w9, [sp, #512]
    2298:	ldr	w8, [sp, #516]
    229c:	cmp	w9, w8
    22a0:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    22a4:	add	w9, w9, #0x1
    22a8:	cmp	x24, x25
    22ac:	str	w9, [sp, #512]
    22b0:	b.ne	21fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x15d8>  // b.any
    22b4:	b	22d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16b0>
    22b8:	ldr	x1, [sp, #8]
    22bc:	add	x0, sp, #0x1f8
    22c0:	mov	w3, #0x8                   	// #8
    22c4:	mov	x2, xzr
    22c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    22cc:	ldr	w9, [sp, #512]
    22d0:	b	228c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1668>
    22d4:	ldr	w24, [sp, #48]
    22d8:	mov	w25, #0x15                  	// #21
    22dc:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    22e0:	add	x13, x9, x8, lsl #4
    22e4:	add	x8, x9, x8, lsl #4
    22e8:	cmp	x13, x8
    22ec:	b.eq	4f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4320>  // b.none
    22f0:	ldr	w8, [x13, #8]
    22f4:	ldr	w9, [sp, #516]
    22f8:	sub	w24, w8, #0x1
    22fc:	cbz	w9, 247c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1858>
    2300:	mov	w8, wzr
    2304:	ldr	x9, [sp, #504]
    2308:	str	x24, [x9, w8, uxtw #3]
    230c:	ldr	w8, [sp, #512]
    2310:	ldr	w9, [sp, #516]
    2314:	cmp	w8, w9
    2318:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    231c:	add	w8, w8, #0x1
    2320:	str	w8, [sp, #512]
    2324:	ldr	w10, [x23, #8]
    2328:	cmp	w8, w9
    232c:	lsr	x23, x10, #8
    2330:	b.cs	2498 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1874>  // b.hs, b.nlast
    2334:	ldr	x9, [sp, #504]
    2338:	str	x23, [x9, w8, uxtw #3]
    233c:	ldr	w8, [sp, #512]
    2340:	ldr	w9, [sp, #516]
    2344:	cmp	w8, w9
    2348:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    234c:	add	w8, w8, #0x1
    2350:	str	w8, [sp, #512]
    2354:	ldr	w8, [sp, #56]
    2358:	cmp	w23, #0x0
    235c:	mov	w25, #0x8                   	// #8
    2360:	csel	w24, w8, wzr, eq  // eq = none
    2364:	b	2370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x174c>
    2368:	mov	w24, wzr
    236c:	mov	w25, #0xc                   	// #12
    2370:	ldr	x0, [x19]
    2374:	add	x2, sp, #0x1f8
    2378:	mov	w1, w25
    237c:	mov	w3, w24
    2380:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2384:	add	x28, x28, #0x1
    2388:	cmp	x28, x27
    238c:	str	wzr, [sp, #512]
    2390:	b.eq	24d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x18ac>  // b.none
    2394:	ldr	x8, [x19, #80]
    2398:	b	1c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1000>
    239c:	ldr	x1, [sp, #8]
    23a0:	add	x0, sp, #0x1f8
    23a4:	mov	w3, #0x8                   	// #8
    23a8:	mov	x2, xzr
    23ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    23b0:	ldr	w8, [sp, #512]
    23b4:	b	1c6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1048>
    23b8:	ldr	x1, [sp, #8]
    23bc:	add	x0, sp, #0x1f8
    23c0:	mov	w3, #0x8                   	// #8
    23c4:	mov	x2, xzr
    23c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    23cc:	ldr	w8, [sp, #512]
    23d0:	b	1d08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x10e4>
    23d4:	ldr	x1, [sp, #8]
    23d8:	add	x0, sp, #0x1f8
    23dc:	mov	w3, #0x8                   	// #8
    23e0:	mov	x2, xzr
    23e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    23e8:	ldr	w8, [sp, #512]
    23ec:	b	1da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1180>
    23f0:	ldr	x1, [sp, #8]
    23f4:	add	x0, sp, #0x1f8
    23f8:	mov	w3, #0x8                   	// #8
    23fc:	mov	x2, xzr
    2400:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2404:	ldr	w8, [sp, #512]
    2408:	b	1df4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x11d0>
    240c:	ldr	x1, [sp, #8]
    2410:	add	x0, sp, #0x1f8
    2414:	mov	w3, #0x8                   	// #8
    2418:	mov	x2, xzr
    241c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2420:	ldr	w8, [sp, #512]
    2424:	b	1f54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1330>
    2428:	ldr	x1, [sp, #8]
    242c:	add	x0, sp, #0x1f8
    2430:	mov	w3, #0x8                   	// #8
    2434:	mov	x2, xzr
    2438:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    243c:	ldr	w8, [sp, #512]
    2440:	b	2100 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x14dc>
    2444:	ldr	x1, [sp, #8]
    2448:	add	x0, sp, #0x1f8
    244c:	mov	w3, #0x8                   	// #8
    2450:	mov	x2, xzr
    2454:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2458:	ldr	w8, [sp, #512]
    245c:	b	217c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1558>
    2460:	ldr	x1, [sp, #8]
    2464:	add	x0, sp, #0x1f8
    2468:	mov	w3, #0x8                   	// #8
    246c:	mov	x2, xzr
    2470:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2474:	ldr	w8, [sp, #512]
    2478:	b	21c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x15a4>
    247c:	ldr	x1, [sp, #8]
    2480:	add	x0, sp, #0x1f8
    2484:	mov	w3, #0x8                   	// #8
    2488:	mov	x2, xzr
    248c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2490:	ldr	w8, [sp, #512]
    2494:	b	2304 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x16e0>
    2498:	ldr	x1, [sp, #8]
    249c:	add	x0, sp, #0x1f8
    24a0:	mov	w3, #0x8                   	// #8
    24a4:	mov	x2, xzr
    24a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    24ac:	ldr	w8, [sp, #512]
    24b0:	b	2334 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1710>
    24b4:	ldr	x1, [sp, #8]
    24b8:	add	x0, sp, #0x1f8
    24bc:	mov	w3, #0x8                   	// #8
    24c0:	mov	x2, xzr
    24c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    24c8:	ldr	w8, [sp, #512]
    24cc:	b	2130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x150c>
    24d0:	ldr	x0, [x19]
    24d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    24d8:	ldr	x0, [sp, #504]
    24dc:	add	x8, sp, #0x1f8
    24e0:	add	x8, x8, #0x10
    24e4:	cmp	x0, x8
    24e8:	b.eq	24f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x18cc>  // b.none
    24ec:	bl	0 <free>
    24f0:	ldp	x8, x9, [x19, #384]
    24f4:	cmp	x8, x9
    24f8:	b.eq	2b5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f38>  // b.none
    24fc:	ldr	x0, [x19]
    2500:	mov	w1, #0xa                   	// #10
    2504:	mov	w2, #0x3                   	// #3
    2508:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    250c:	add	x8, sp, #0x1f8
    2510:	add	x8, x8, #0x10
    2514:	str	d9, [sp, #512]
    2518:	str	x8, [sp, #56]
    251c:	str	x8, [sp, #504]
    2520:	ldp	x22, x8, [x19, #384]
    2524:	cmp	x22, x8
    2528:	str	x8, [sp, #48]
    252c:	b.eq	2b40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f1c>  // b.none
    2530:	add	x21, x19, #0x160
    2534:	mov	w27, #0x1                   	// #1
    2538:	mov	w24, #0x18                  	// #24
    253c:	str	x21, [sp, #40]
    2540:	b	2570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x194c>
    2544:	ldr	x0, [x19]
    2548:	add	x2, sp, #0x1f8
    254c:	mov	w1, #0x3                   	// #3
    2550:	mov	w3, wzr
    2554:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2558:	ldp	x21, x8, [sp, #40]
    255c:	add	x22, x22, #0x10
    2560:	mov	w24, #0x18                  	// #24
    2564:	str	wzr, [sp, #512]
    2568:	cmp	x22, x8
    256c:	b.eq	2b40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f1c>  // b.none
    2570:	ldp	x23, x8, [x22]
    2574:	str	x8, [sp, #64]
    2578:	stp	x23, x8, [sp, #144]
    257c:	cbz	x8, 25a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1980>
    2580:	add	x1, sp, #0x90
    2584:	add	x2, sp, #0x1a0
    2588:	mov	x0, x21
    258c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2590:	tbz	w0, #0, 25ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1988>
    2594:	ldr	x8, [sp, #416]
    2598:	ldr	x9, [x21, #8]
    259c:	ldr	w10, [x21, #24]
    25a0:	b	25b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1994>
    25a4:	mov	w9, wzr
    25a8:	b	25cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x19a8>
    25ac:	ldr	x9, [x21, #8]
    25b0:	ldr	w10, [x21, #24]
    25b4:	madd	x8, x10, x24, x9
    25b8:	madd	x9, x10, x24, x9
    25bc:	cmp	x8, x9
    25c0:	b.eq	4ec4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42a0>  // b.none
    25c4:	ldr	w9, [x8, #16]
    25c8:	ldr	w8, [sp, #512]
    25cc:	ldr	w10, [sp, #516]
    25d0:	mov	w24, w9
    25d4:	cmp	w8, w10
    25d8:	b.cs	2b08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1ee4>  // b.hs, b.nlast
    25dc:	ldr	x9, [sp, #504]
    25e0:	str	x24, [x9, w8, uxtw #3]
    25e4:	ldr	w8, [sp, #512]
    25e8:	ldr	w9, [sp, #516]
    25ec:	cmp	w8, w9
    25f0:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    25f4:	add	w8, w8, #0x1
    25f8:	and	x23, x23, #0xffffffff
    25fc:	cmp	w8, w9
    2600:	str	w8, [sp, #512]
    2604:	b.cs	2b24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f00>  // b.hs, b.nlast
    2608:	ldr	x9, [sp, #504]
    260c:	str	x23, [x9, w8, uxtw #3]
    2610:	ldr	w8, [sp, #512]
    2614:	ldr	w9, [sp, #516]
    2618:	cmp	w8, w9
    261c:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2620:	add	w8, w8, #0x1
    2624:	add	x0, sp, #0x40
    2628:	str	w8, [sp, #512]
    262c:	bl	0 <_ZNK4llvm12AttributeSet5beginEv>
    2630:	mov	x23, x0
    2634:	add	x0, sp, #0x40
    2638:	bl	0 <_ZNK4llvm12AttributeSet3endEv>
    263c:	mov	x24, x0
    2640:	cmp	x23, x0
    2644:	b.eq	2544 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1920>  // b.none
    2648:	ldr	x8, [x23]
    264c:	add	x0, sp, #0x90
    2650:	str	x8, [sp, #144]
    2654:	bl	0 <_ZNK4llvm9Attribute15isEnumAttributeEv>
    2658:	tbz	w0, #0, 269c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1a78>
    265c:	ldr	w8, [sp, #512]
    2660:	ldr	w9, [sp, #516]
    2664:	cmp	w8, w9
    2668:	b.cs	2a28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e04>  // b.hs, b.nlast
    266c:	ldr	x9, [sp, #504]
    2670:	str	xzr, [x9, w8, uxtw #3]
    2674:	ldr	w8, [sp, #512]
    2678:	ldr	w9, [sp, #516]
    267c:	cmp	w8, w9
    2680:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2684:	add	w8, w8, #0x1
    2688:	add	x0, sp, #0x90
    268c:	str	w8, [sp, #512]
    2690:	bl	0 <_ZNK4llvm9Attribute13getKindAsEnumEv>
    2694:	bl	10dc4 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>
    2698:	b	2720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1afc>
    269c:	add	x0, sp, #0x90
    26a0:	bl	0 <_ZNK4llvm9Attribute14isIntAttributeEv>
    26a4:	tbz	w0, #0, 2764 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b40>
    26a8:	ldr	w8, [sp, #512]
    26ac:	ldr	w9, [sp, #516]
    26b0:	cmp	w8, w9
    26b4:	b.cs	2a44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e20>  // b.hs, b.nlast
    26b8:	ldr	x9, [sp, #504]
    26bc:	str	x27, [x9, w8, uxtw #3]
    26c0:	ldr	w8, [sp, #512]
    26c4:	ldr	w9, [sp, #516]
    26c8:	cmp	w8, w9
    26cc:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    26d0:	add	w8, w8, #0x1
    26d4:	add	x0, sp, #0x90
    26d8:	str	w8, [sp, #512]
    26dc:	bl	0 <_ZNK4llvm9Attribute13getKindAsEnumEv>
    26e0:	bl	10dc4 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>
    26e4:	ldr	w8, [sp, #512]
    26e8:	ldr	w9, [sp, #516]
    26ec:	mov	x25, x0
    26f0:	cmp	w8, w9
    26f4:	b.cs	2a60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e3c>  // b.hs, b.nlast
    26f8:	ldr	x9, [sp, #504]
    26fc:	str	x25, [x9, w8, uxtw #3]
    2700:	ldr	w8, [sp, #512]
    2704:	ldr	w9, [sp, #516]
    2708:	cmp	w8, w9
    270c:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2710:	add	w8, w8, #0x1
    2714:	add	x0, sp, #0x90
    2718:	str	w8, [sp, #512]
    271c:	bl	0 <_ZNK4llvm9Attribute13getValueAsIntEv>
    2720:	ldr	w8, [sp, #512]
    2724:	ldr	w9, [sp, #516]
    2728:	mov	x25, x0
    272c:	cmp	w8, w9
    2730:	b.cs	2a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1de8>  // b.hs, b.nlast
    2734:	ldr	x9, [sp, #504]
    2738:	str	x25, [x9, w8, uxtw #3]
    273c:	ldr	w8, [sp, #512]
    2740:	ldr	w9, [sp, #516]
    2744:	cmp	w8, w9
    2748:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    274c:	add	w8, w8, #0x1
    2750:	str	w8, [sp, #512]
    2754:	add	x23, x23, #0x8
    2758:	cmp	x23, x24
    275c:	b.ne	2648 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1a24>  // b.any
    2760:	b	2544 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1920>
    2764:	add	x0, sp, #0x90
    2768:	bl	0 <_ZNK4llvm9Attribute17isStringAttributeEv>
    276c:	tbz	w0, #0, 28e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1cbc>
    2770:	add	x0, sp, #0x90
    2774:	bl	0 <_ZNK4llvm9Attribute15getKindAsStringEv>
    2778:	mov	x28, x0
    277c:	add	x0, sp, #0x90
    2780:	mov	x27, x1
    2784:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
    2788:	ldr	w8, [sp, #512]
    278c:	ldr	w9, [sp, #516]
    2790:	cmp	x1, #0x0
    2794:	mov	w10, #0x3                   	// #3
    2798:	mov	x25, x1
    279c:	cinc	x21, x10, ne  // ne = any
    27a0:	cmp	w8, w9
    27a4:	mov	x26, x0
    27a8:	b.cs	2a7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e58>  // b.hs, b.nlast
    27ac:	ldr	x9, [sp, #504]
    27b0:	str	x21, [x9, w8, uxtw #3]
    27b4:	ldr	w8, [sp, #512]
    27b8:	ldr	w9, [sp, #516]
    27bc:	cmp	w8, w9
    27c0:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    27c4:	add	x8, x8, #0x1
    27c8:	sub	x9, x9, x8
    27cc:	cmp	x27, x9
    27d0:	str	w8, [sp, #512]
    27d4:	b.ls	27f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1bcc>  // b.plast
    27d8:	ldr	x1, [sp, #56]
    27dc:	add	x2, x27, x8
    27e0:	add	x0, sp, #0x1f8
    27e4:	mov	w3, #0x8                   	// #8
    27e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    27ec:	ldr	w8, [sp, #512]
    27f0:	cmp	x27, #0x1
    27f4:	b.lt	2820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1bfc>  // b.tstop
    27f8:	ldr	x9, [sp, #504]
    27fc:	add	x10, x28, x27
    2800:	sub	x10, x10, x28
    2804:	add	x10, x10, #0x1
    2808:	add	x9, x9, x8, lsl #3
    280c:	ldrb	w11, [x28], #1
    2810:	sub	x10, x10, #0x1
    2814:	cmp	x10, #0x1
    2818:	str	x11, [x9], #8
    281c:	b.gt	280c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1be8>
    2820:	ldr	w9, [sp, #516]
    2824:	add	x8, x8, x27
    2828:	cmp	x8, x9
    282c:	b.hi	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.pmore
    2830:	cmp	w9, w8
    2834:	mov	w27, #0x1                   	// #1
    2838:	str	w8, [sp, #512]
    283c:	b.ls	2a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e74>  // b.plast
    2840:	ldr	x9, [sp, #504]
    2844:	str	xzr, [x9, w8, uxtw #3]
    2848:	ldr	w8, [sp, #512]
    284c:	ldr	w9, [sp, #516]
    2850:	cmp	w8, w9
    2854:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2858:	add	x8, x8, #0x1
    285c:	str	w8, [sp, #512]
    2860:	cbz	x25, 2754 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b30>
    2864:	sub	x9, x9, x8
    2868:	cmp	x25, x9
    286c:	b.ls	2888 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c64>  // b.plast
    2870:	ldr	x1, [sp, #56]
    2874:	add	x2, x25, x8
    2878:	add	x0, sp, #0x1f8
    287c:	mov	w3, #0x8                   	// #8
    2880:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2884:	ldr	w8, [sp, #512]
    2888:	cmp	x25, #0x1
    288c:	b.lt	28b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c94>  // b.tstop
    2890:	ldr	x9, [sp, #504]
    2894:	add	x10, x26, x25
    2898:	sub	x10, x10, x26
    289c:	add	x10, x10, #0x1
    28a0:	add	x9, x9, x8, lsl #3
    28a4:	ldrb	w11, [x26], #1
    28a8:	sub	x10, x10, #0x1
    28ac:	cmp	x10, #0x1
    28b0:	str	x11, [x9], #8
    28b4:	b.gt	28a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c80>
    28b8:	ldr	w9, [sp, #516]
    28bc:	add	x8, x8, x25
    28c0:	cmp	x8, x9
    28c4:	b.hi	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.pmore
    28c8:	cmp	w9, w8
    28cc:	str	w8, [sp, #512]
    28d0:	b.ls	2aec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1ec8>  // b.plast
    28d4:	ldr	x9, [sp, #504]
    28d8:	str	xzr, [x9, w8, uxtw #3]
    28dc:	b	273c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b18>
    28e0:	add	x0, sp, #0x90
    28e4:	bl	0 <_ZNK4llvm9Attribute15isTypeAttributeEv>
    28e8:	tbz	w0, #0, 4f64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4340>
    28ec:	add	x0, sp, #0x90
    28f0:	bl	0 <_ZNK4llvm9Attribute14getValueAsTypeEv>
    28f4:	ldr	w8, [sp, #512]
    28f8:	ldr	w9, [sp, #516]
    28fc:	cmp	x0, #0x0
    2900:	mov	w10, #0x5                   	// #5
    2904:	mov	x25, x0
    2908:	cinc	x26, x10, ne  // ne = any
    290c:	cmp	w8, w9
    2910:	b.cs	2ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1e90>  // b.hs, b.nlast
    2914:	ldr	x9, [sp, #504]
    2918:	str	x26, [x9, w8, uxtw #3]
    291c:	ldr	w8, [sp, #512]
    2920:	ldr	w9, [sp, #516]
    2924:	cmp	w8, w9
    2928:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    292c:	add	w8, w8, #0x1
    2930:	add	x0, sp, #0x90
    2934:	str	w8, [sp, #512]
    2938:	bl	0 <_ZNK4llvm9Attribute13getKindAsEnumEv>
    293c:	bl	10dc4 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>
    2940:	ldr	w8, [sp, #512]
    2944:	ldr	w9, [sp, #516]
    2948:	mov	x26, x0
    294c:	cmp	w8, w9
    2950:	b.cs	2ad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1eac>  // b.hs, b.nlast
    2954:	ldr	x9, [sp, #504]
    2958:	str	x26, [x9, w8, uxtw #3]
    295c:	ldr	w8, [sp, #512]
    2960:	ldr	w9, [sp, #516]
    2964:	cmp	w8, w9
    2968:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    296c:	add	w8, w8, #0x1
    2970:	str	w8, [sp, #512]
    2974:	cbz	x25, 2754 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b30>
    2978:	add	x0, sp, #0x90
    297c:	bl	0 <_ZNK4llvm9Attribute14getValueAsTypeEv>
    2980:	ldr	w8, [x19, #72]
    2984:	ldr	x9, [x19, #56]
    2988:	cbz	w8, 29e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1dc0>
    298c:	orr	x10, x0, #0x8
    2990:	cmn	x10, #0x8
    2994:	b.eq	4ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42c0>  // b.none
    2998:	ubfx	x10, x0, #4, #28
    299c:	eor	w11, w10, w0, lsr #9
    29a0:	sub	w10, w8, #0x1
    29a4:	and	w11, w11, w10
    29a8:	add	x12, x9, w11, uxtw #4
    29ac:	ldr	x13, [x12]
    29b0:	cmp	x13, x0
    29b4:	b.eq	29e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1dc4>  // b.none
    29b8:	mov	w14, #0x1                   	// #1
    29bc:	cmn	x13, #0x8
    29c0:	b.eq	29e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1dc0>  // b.none
    29c4:	add	w11, w11, w14
    29c8:	and	w11, w11, w10
    29cc:	add	x12, x9, w11, uxtw #4
    29d0:	ldr	x13, [x12]
    29d4:	add	w14, w14, #0x1
    29d8:	cmp	x13, x0
    29dc:	b.eq	29e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1dc4>  // b.none
    29e0:	b	29bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d98>
    29e4:	add	x12, x9, x8, lsl #4
    29e8:	add	x8, x9, x8, lsl #4
    29ec:	cmp	x12, x8
    29f0:	b.eq	4f44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4320>  // b.none
    29f4:	ldr	w8, [sp, #512]
    29f8:	ldr	w9, [sp, #516]
    29fc:	ldr	w10, [x12, #8]
    2a00:	cmp	w8, w9
    2a04:	sub	w25, w10, #0x1
    2a08:	b.cc	2734 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b10>  // b.lo, b.ul, b.last
    2a0c:	ldr	x1, [sp, #56]
    2a10:	add	x0, sp, #0x1f8
    2a14:	mov	w3, #0x8                   	// #8
    2a18:	mov	x2, xzr
    2a1c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a20:	ldr	w8, [sp, #512]
    2a24:	b	2734 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b10>
    2a28:	ldr	x1, [sp, #56]
    2a2c:	add	x0, sp, #0x1f8
    2a30:	mov	w3, #0x8                   	// #8
    2a34:	mov	x2, xzr
    2a38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a3c:	ldr	w8, [sp, #512]
    2a40:	b	266c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1a48>
    2a44:	ldr	x1, [sp, #56]
    2a48:	add	x0, sp, #0x1f8
    2a4c:	mov	w3, #0x8                   	// #8
    2a50:	mov	x2, xzr
    2a54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a58:	ldr	w8, [sp, #512]
    2a5c:	b	26b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1a94>
    2a60:	ldr	x1, [sp, #56]
    2a64:	add	x0, sp, #0x1f8
    2a68:	mov	w3, #0x8                   	// #8
    2a6c:	mov	x2, xzr
    2a70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a74:	ldr	w8, [sp, #512]
    2a78:	b	26f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1ad4>
    2a7c:	ldr	x1, [sp, #56]
    2a80:	add	x0, sp, #0x1f8
    2a84:	mov	w3, #0x8                   	// #8
    2a88:	mov	x2, xzr
    2a8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2a90:	ldr	w8, [sp, #512]
    2a94:	b	27ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1b88>
    2a98:	ldr	x1, [sp, #56]
    2a9c:	add	x0, sp, #0x1f8
    2aa0:	mov	w3, #0x8                   	// #8
    2aa4:	mov	x2, xzr
    2aa8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2aac:	ldr	w8, [sp, #512]
    2ab0:	b	2840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c1c>
    2ab4:	ldr	x1, [sp, #56]
    2ab8:	add	x0, sp, #0x1f8
    2abc:	mov	w3, #0x8                   	// #8
    2ac0:	mov	x2, xzr
    2ac4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ac8:	ldr	w8, [sp, #512]
    2acc:	b	2914 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1cf0>
    2ad0:	ldr	x1, [sp, #56]
    2ad4:	add	x0, sp, #0x1f8
    2ad8:	mov	w3, #0x8                   	// #8
    2adc:	mov	x2, xzr
    2ae0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2ae4:	ldr	w8, [sp, #512]
    2ae8:	b	2954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d30>
    2aec:	ldr	x1, [sp, #56]
    2af0:	add	x0, sp, #0x1f8
    2af4:	mov	w3, #0x8                   	// #8
    2af8:	mov	x2, xzr
    2afc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b00:	ldr	w8, [sp, #512]
    2b04:	b	28d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1cb0>
    2b08:	ldr	x1, [sp, #56]
    2b0c:	add	x0, sp, #0x1f8
    2b10:	mov	w3, #0x8                   	// #8
    2b14:	mov	x2, xzr
    2b18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b1c:	ldr	w8, [sp, #512]
    2b20:	b	25dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x19b8>
    2b24:	ldr	x1, [sp, #56]
    2b28:	add	x0, sp, #0x1f8
    2b2c:	mov	w3, #0x8                   	// #8
    2b30:	mov	x2, xzr
    2b34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2b38:	ldr	w8, [sp, #512]
    2b3c:	b	2608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x19e4>
    2b40:	ldr	x0, [x19]
    2b44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2b48:	ldr	x0, [sp, #504]
    2b4c:	ldr	x8, [sp, #56]
    2b50:	cmp	x0, x8
    2b54:	b.eq	2b5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f38>  // b.none
    2b58:	bl	0 <free>
    2b5c:	ldp	x8, x9, [x19, #440]
    2b60:	cmp	x8, x9
    2b64:	b.eq	2cc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x209c>  // b.none
    2b68:	ldr	x0, [x19]
    2b6c:	mov	w1, #0x9                   	// #9
    2b70:	mov	w2, #0x3                   	// #3
    2b74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2b78:	add	x8, sp, #0x1f8
    2b7c:	add	x21, x8, #0x10
    2b80:	str	d9, [sp, #512]
    2b84:	str	x21, [sp, #504]
    2b88:	ldp	x8, x9, [x19, #440]
    2b8c:	sub	x9, x9, x8
    2b90:	lsr	x10, x9, #3
    2b94:	cbz	w10, 2ca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2084>
    2b98:	mov	x25, xzr
    2b9c:	add	x22, x19, #0x160
    2ba0:	ubfx	x26, x9, #3, #32
    2ba4:	mov	w27, #0x18                  	// #24
    2ba8:	ldr	x8, [x8, x25, lsl #3]
    2bac:	add	x0, sp, #0x40
    2bb0:	str	x8, [sp, #64]
    2bb4:	bl	0 <_ZNK4llvm13AttributeList14getNumAttrSetsEv>
    2bb8:	cbz	w0, 2c7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2058>
    2bbc:	mov	w23, w0
    2bc0:	mov	w28, wzr
    2bc4:	b	2bf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1fd0>
    2bc8:	ldr	x8, [sp, #504]
    2bcc:	str	x24, [x8, w9, uxtw #3]
    2bd0:	ldr	w8, [sp, #512]
    2bd4:	ldr	w9, [sp, #516]
    2bd8:	cmp	w8, w9
    2bdc:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2be0:	add	w8, w8, #0x1
    2be4:	str	w8, [sp, #512]
    2be8:	add	w28, w28, #0x1
    2bec:	cmp	w23, w28
    2bf0:	b.eq	2c7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2058>  // b.none
    2bf4:	sub	w24, w28, #0x1
    2bf8:	add	x0, sp, #0x40
    2bfc:	mov	w1, w24
    2c00:	bl	0 <_ZNK4llvm13AttributeList13getAttributesEj>
    2c04:	cbz	x0, 2be8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1fc4>
    2c08:	mov	w8, w24
    2c0c:	stp	x8, x0, [sp, #144]
    2c10:	add	x1, sp, #0x90
    2c14:	add	x2, sp, #0x1a0
    2c18:	mov	x0, x22
    2c1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2c20:	tbz	w0, #0, 2c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2010>
    2c24:	ldr	x8, [sp, #416]
    2c28:	ldr	x9, [x22, #8]
    2c2c:	ldr	w10, [x22, #24]
    2c30:	b	2c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x201c>
    2c34:	ldr	x9, [x22, #8]
    2c38:	ldr	w10, [x22, #24]
    2c3c:	madd	x8, x10, x27, x9
    2c40:	madd	x9, x10, x27, x9
    2c44:	cmp	x8, x9
    2c48:	b.eq	4ec4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42a0>  // b.none
    2c4c:	ldr	w9, [sp, #512]
    2c50:	ldr	w10, [sp, #516]
    2c54:	ldr	w24, [x8, #16]
    2c58:	cmp	w9, w10
    2c5c:	b.cc	2bc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1fa4>  // b.lo, b.ul, b.last
    2c60:	add	x0, sp, #0x1f8
    2c64:	mov	w3, #0x8                   	// #8
    2c68:	mov	x1, x21
    2c6c:	mov	x2, xzr
    2c70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2c74:	ldr	w9, [sp, #512]
    2c78:	b	2bc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1fa4>
    2c7c:	ldr	x0, [x19]
    2c80:	add	x2, sp, #0x1f8
    2c84:	mov	w1, #0x2                   	// #2
    2c88:	mov	w3, wzr
    2c8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2c90:	add	x25, x25, #0x1
    2c94:	cmp	x25, x26
    2c98:	str	wzr, [sp, #512]
    2c9c:	b.eq	2ca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2084>  // b.none
    2ca0:	ldr	x8, [x19, #440]
    2ca4:	b	2ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1f84>
    2ca8:	ldr	x0, [x19]
    2cac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2cb0:	ldr	x0, [sp, #504]
    2cb4:	cmp	x0, x21
    2cb8:	b.eq	2cc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x209c>  // b.none
    2cbc:	bl	0 <free>
    2cc0:	add	x8, sp, #0x1f8
    2cc4:	add	x21, x8, #0x10
    2cc8:	str	d9, [sp, #512]
    2ccc:	str	x21, [sp, #504]
    2cd0:	ldp	x26, x27, [x19, #208]
    2cd4:	cmp	x26, x27
    2cd8:	b.eq	2e58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2234>  // b.none
    2cdc:	add	x22, x19, #0x2a8
    2ce0:	ldr	x23, [x26]
    2ce4:	mov	x0, x23
    2ce8:	bl	0 <_ZNK4llvm6Comdat7getNameEv>
    2cec:	ldrb	w8, [x19, #664]
    2cf0:	mov	x24, x0
    2cf4:	mov	x25, x1
    2cf8:	cbz	w8, 2d0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x20e8>
    2cfc:	mov	x0, x22
    2d00:	mov	x1, x24
    2d04:	mov	x2, x25
    2d08:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    2d0c:	ldr	x0, [x19, #8]
    2d10:	mov	x1, x24
    2d14:	mov	x2, x25
    2d18:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2d1c:	ldr	w8, [sp, #512]
    2d20:	ldr	w9, [sp, #516]
    2d24:	mov	x24, x0
    2d28:	cmp	w8, w9
    2d2c:	b.cs	2dec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x21c8>  // b.hs, b.nlast
    2d30:	ldr	x9, [sp, #504]
    2d34:	str	w24, [x9, w8, uxtw #2]
    2d38:	ldr	w8, [sp, #512]
    2d3c:	ldr	w9, [sp, #516]
    2d40:	cmp	w8, w9
    2d44:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2d48:	add	w8, w8, #0x1
    2d4c:	mov	x0, x23
    2d50:	str	w8, [sp, #512]
    2d54:	bl	0 <_ZNK4llvm6Comdat7getNameEv>
    2d58:	ldr	w8, [sp, #512]
    2d5c:	ldr	w9, [sp, #516]
    2d60:	mov	x24, x1
    2d64:	cmp	w8, w9
    2d68:	b.cs	2e08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x21e4>  // b.hs, b.nlast
    2d6c:	ldr	x9, [sp, #504]
    2d70:	str	w24, [x9, w8, uxtw #2]
    2d74:	ldr	w8, [sp, #512]
    2d78:	ldr	w9, [sp, #516]
    2d7c:	cmp	w8, w9
    2d80:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2d84:	add	w8, w8, #0x1
    2d88:	str	w8, [sp, #512]
    2d8c:	ldr	w10, [x23, #8]
    2d90:	cmp	w10, #0x5
    2d94:	b.cs	4f84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4360>  // b.hs, b.nlast
    2d98:	cmp	w8, w9
    2d9c:	add	w23, w10, #0x1
    2da0:	b.cs	2e24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2200>  // b.hs, b.nlast
    2da4:	ldr	x9, [sp, #504]
    2da8:	str	w23, [x9, w8, uxtw #2]
    2dac:	ldr	w8, [sp, #512]
    2db0:	ldr	w9, [sp, #516]
    2db4:	cmp	w8, w9
    2db8:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2dbc:	add	w8, w8, #0x1
    2dc0:	str	w8, [sp, #512]
    2dc4:	ldr	x0, [x19]
    2dc8:	add	x2, sp, #0x1f8
    2dcc:	mov	w1, #0xc                   	// #12
    2dd0:	mov	w3, wzr
    2dd4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2dd8:	add	x26, x26, #0x8
    2ddc:	cmp	x27, x26
    2de0:	str	wzr, [sp, #512]
    2de4:	b.ne	2ce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x20bc>  // b.any
    2de8:	b	2e40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x221c>
    2dec:	add	x0, sp, #0x1f8
    2df0:	mov	w3, #0x4                   	// #4
    2df4:	mov	x1, x21
    2df8:	mov	x2, xzr
    2dfc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2e00:	ldr	w8, [sp, #512]
    2e04:	b	2d30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x210c>
    2e08:	add	x0, sp, #0x1f8
    2e0c:	mov	w3, #0x4                   	// #4
    2e10:	mov	x1, x21
    2e14:	mov	x2, xzr
    2e18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2e1c:	ldr	w8, [sp, #512]
    2e20:	b	2d6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2148>
    2e24:	add	x0, sp, #0x1f8
    2e28:	mov	w3, #0x4                   	// #4
    2e2c:	mov	x1, x21
    2e30:	mov	x2, xzr
    2e34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2e38:	ldr	w8, [sp, #512]
    2e3c:	b	2da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2180>
    2e40:	ldr	x0, [sp, #504]
    2e44:	add	x8, sp, #0x1f8
    2e48:	add	x8, x8, #0x10
    2e4c:	cmp	x0, x8
    2e50:	b.eq	2e58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2234>  // b.none
    2e54:	bl	0 <free>
    2e58:	mov	x0, x19
    2e5c:	bl	b1d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv>
    2e60:	ldp	x8, x9, [x19, #136]
    2e64:	sub	x9, x9, x8
    2e68:	lsr	x2, x9, #4
    2e6c:	cbz	w2, 2ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2298>
    2e70:	mov	w1, wzr
    2e74:	b	2e84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2260>
    2e78:	add	w1, w1, #0x1
    2e7c:	cmp	w2, w1
    2e80:	b.eq	2ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2298>  // b.none
    2e84:	mov	w9, w1
    2e88:	lsl	x9, x9, #4
    2e8c:	ldr	x9, [x8, x9]
    2e90:	cbz	x9, 4fbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4398>
    2e94:	ldrb	w9, [x9, #16]
    2e98:	cbz	w9, 2e78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2254>
    2e9c:	cmp	w9, #0x3
    2ea0:	b.eq	2e78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2254>  // b.none
    2ea4:	sub	w9, w9, #0x1
    2ea8:	cmp	w9, #0x2
    2eac:	b.cc	2e78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2254>  // b.lo, b.ul, b.last
    2eb0:	mov	w3, #0x1                   	// #1
    2eb4:	mov	x0, x19
    2eb8:	bl	11130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb>
    2ebc:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2ec0:	ldr	d10, [x9]
    2ec4:	add	x8, sp, #0x1f8
    2ec8:	add	x21, x8, #0x10
    2ecc:	add	x8, sp, #0x90
    2ed0:	add	x22, x8, #0x10
    2ed4:	str	d9, [sp, #512]
    2ed8:	str	x21, [sp, #504]
    2edc:	str	x22, [sp, #144]
    2ee0:	str	d10, [sp, #152]
    2ee4:	ldr	x0, [x19, #16]
    2ee8:	add	x1, sp, #0x90
    2eec:	bl	0 <_ZNK4llvm6Module14getMDKindNamesERNS_15SmallVectorImplINS_9StringRefEEE>
    2ef0:	ldr	w8, [sp, #152]
    2ef4:	cbz	w8, 3010 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x23ec>
    2ef8:	ldr	x0, [x19]
    2efc:	mov	w1, #0x16                  	// #22
    2f00:	mov	w2, #0x3                   	// #3
    2f04:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2f08:	ldr	w23, [sp, #152]
    2f0c:	cbz	w23, 3008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x23e4>
    2f10:	ldr	w8, [sp, #512]
    2f14:	mov	w9, wzr
    2f18:	ldr	w10, [sp, #516]
    2f1c:	mov	w24, w9
    2f20:	cmp	w8, w10
    2f24:	b.cs	2fec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x23c8>  // b.hs, b.nlast
    2f28:	ldr	x9, [sp, #504]
    2f2c:	str	x24, [x9, w8, uxtw #3]
    2f30:	ldr	w8, [sp, #512]
    2f34:	ldr	w9, [sp, #516]
    2f38:	cmp	w8, w9
    2f3c:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    2f40:	ldr	w10, [sp, #152]
    2f44:	add	x8, x8, #0x1
    2f48:	str	w8, [sp, #512]
    2f4c:	cmp	w10, w24
    2f50:	b.ls	4fdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43b8>  // b.plast
    2f54:	ldr	x10, [sp, #144]
    2f58:	sub	x9, x9, x8
    2f5c:	add	x10, x10, x24, lsl #4
    2f60:	ldp	x26, x25, [x10]
    2f64:	cmp	x25, x9
    2f68:	b.ls	2f84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2360>  // b.plast
    2f6c:	add	x2, x25, x8
    2f70:	add	x0, sp, #0x1f8
    2f74:	mov	w3, #0x8                   	// #8
    2f78:	mov	x1, x21
    2f7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2f80:	ldr	w8, [sp, #512]
    2f84:	cmp	x25, #0x1
    2f88:	b.lt	2fac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2388>  // b.tstop
    2f8c:	ldr	x9, [sp, #504]
    2f90:	add	x10, x25, #0x1
    2f94:	add	x9, x9, x8, lsl #3
    2f98:	ldrb	w11, [x26], #1
    2f9c:	sub	x10, x10, #0x1
    2fa0:	cmp	x10, #0x1
    2fa4:	str	x11, [x9], #8
    2fa8:	b.gt	2f98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2374>
    2fac:	ldr	w9, [sp, #516]
    2fb0:	add	x8, x8, x25
    2fb4:	cmp	x8, x9
    2fb8:	b.hi	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.pmore
    2fbc:	str	w8, [sp, #512]
    2fc0:	ldr	x0, [x19]
    2fc4:	add	x2, sp, #0x1f8
    2fc8:	mov	w1, #0x6                   	// #6
    2fcc:	mov	w3, wzr
    2fd0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    2fd4:	add	w9, w24, #0x1
    2fd8:	mov	w8, wzr
    2fdc:	cmp	w9, w23
    2fe0:	str	wzr, [sp, #512]
    2fe4:	b.ne	2f18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x22f4>  // b.any
    2fe8:	b	3008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x23e4>
    2fec:	add	x0, sp, #0x1f8
    2ff0:	mov	w3, #0x8                   	// #8
    2ff4:	mov	x1, x21
    2ff8:	mov	x2, xzr
    2ffc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3000:	ldr	w8, [sp, #512]
    3004:	b	2f28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2304>
    3008:	ldr	x0, [x19]
    300c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3010:	ldr	x0, [sp, #144]
    3014:	cmp	x0, x22
    3018:	b.eq	3020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x23fc>  // b.none
    301c:	bl	0 <free>
    3020:	ldr	x0, [sp, #504]
    3024:	add	x8, sp, #0x1f8
    3028:	add	x8, x8, #0x10
    302c:	cmp	x0, x8
    3030:	b.eq	3038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2414>  // b.none
    3034:	bl	0 <free>
    3038:	ldp	x9, x8, [x19, #232]
    303c:	ldr	w10, [x19, #564]
    3040:	adrp	x28, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3044:	sub	x8, x8, x9
    3048:	cmp	x10, x8, asr #3
    304c:	b.cc	3064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2440>  // b.lo, b.ul, b.last
    3050:	ldr	x8, [x19, #16]
    3054:	ldr	x9, [x8, #72]!
    3058:	and	x9, x9, #0xfffffffffffffff8
    305c:	cmp	x8, x9
    3060:	b.eq	3cc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x30a4>  // b.none
    3064:	ldr	x0, [x19]
    3068:	mov	w1, #0xf                   	// #15
    306c:	mov	w2, #0x4                   	// #4
    3070:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3074:	add	x8, sp, #0x1f8
    3078:	add	x21, x8, #0x10
    307c:	mov	w0, #0x70                  	// #112
    3080:	str	d9, [sp, #512]
    3084:	stp	xzr, xzr, [sp, #416]
    3088:	str	x21, [sp, #504]
    308c:	str	xzr, [sp, #432]
    3090:	bl	0 <_Znwm>
    3094:	ldp	x23, x8, [sp, #416]
    3098:	mov	x22, x0
    309c:	movi	v0.2d, #0x0
    30a0:	stp	q0, q0, [x0, #80]
    30a4:	sub	x2, x8, x23
    30a8:	cmp	x2, #0x1
    30ac:	stp	q0, q0, [x0, #48]
    30b0:	stp	q0, q0, [x0, #16]
    30b4:	str	q0, [x0]
    30b8:	b.lt	30c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x24a4>  // b.tstop
    30bc:	mov	x0, x22
    30c0:	mov	x1, x23
    30c4:	bl	0 <memmove>
    30c8:	cbz	x23, 30d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x24b0>
    30cc:	mov	x0, x23
    30d0:	bl	0 <_ZdlPv>
    30d4:	add	x8, x22, #0x70
    30d8:	mov	x0, x19
    30dc:	stp	x22, x8, [sp, #416]
    30e0:	str	x8, [sp, #432]
    30e4:	bl	13f90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv>
    30e8:	ldr	x8, [sp, #416]
    30ec:	str	w0, [x8, #4]
    30f0:	mov	x0, x19
    30f4:	bl	14398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv>
    30f8:	ldr	x8, [sp, #416]
    30fc:	str	w0, [x8, #16]
    3100:	mov	w0, #0x220                 	// #544
    3104:	bl	0 <_Znwm>
    3108:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    310c:	ldr	x8, [x8]
    3110:	movi	v0.2s, #0x1
    3114:	str	d0, [x0, #8]
    3118:	movi	v0.2d, #0x0
    311c:	add	x8, x8, #0x10
    3120:	mov	x9, x0
    3124:	mov	x1, x0
    3128:	mov	w10, #0x26                  	// #38
    312c:	str	x8, [x0]
    3130:	stp	q0, q0, [x0, #48]
    3134:	stp	q0, q0, [x0, #80]
    3138:	stp	q0, q0, [x0, #112]
    313c:	stp	q0, q0, [x0, #144]
    3140:	stp	q0, q0, [x0, #176]
    3144:	stp	q0, q0, [x0, #208]
    3148:	stp	q0, q0, [x0, #240]
    314c:	stp	q0, q0, [x0, #272]
    3150:	stp	q0, q0, [x0, #304]
    3154:	stp	q0, q0, [x0, #336]
    3158:	stp	q0, q0, [x0, #368]
    315c:	stp	q0, q0, [x0, #400]
    3160:	stp	q0, q0, [x0, #432]
    3164:	stp	q0, q0, [x0, #464]
    3168:	stp	q0, q0, [x0, #496]
    316c:	str	q0, [x9, #32]!
    3170:	str	q0, [x0, #528]
    3174:	str	x9, [x1, #16]!
    3178:	str	x10, [x9]
    317c:	str	d8, [x0, #24]
    3180:	mov	w11, #0xff                  	// #255
    3184:	ldp	w8, w10, [x0, #24]
    3188:	ldur	w9, [sp, #147]
    318c:	strb	w11, [x0, #40]
    3190:	ldr	w11, [sp, #144]
    3194:	mov	w12, #0x20                  	// #32
    3198:	mov	w13, #0x2                   	// #2
    319c:	cmp	w8, w10
    31a0:	str	x12, [x0, #48]
    31a4:	strb	w13, [x0, #56]
    31a8:	str	x12, [x0, #64]
    31ac:	strb	w13, [x0, #72]
    31b0:	str	w9, [x0, #76]
    31b4:	stur	w11, [x0, #73]
    31b8:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    31bc:	add	w8, w8, #0x1
    31c0:	str	w8, [x0, #24]
    31c4:	ldr	x22, [x19]
    31c8:	stp	x1, x0, [sp, #128]
    31cc:	mov	x0, x22
    31d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    31d4:	ldp	x1, x8, [x22, #32]
    31d8:	add	x23, x22, #0x18
    31dc:	cmp	x1, x8
    31e0:	b.eq	3204 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x25e0>  // b.none
    31e4:	str	xzr, [x1, #8]
    31e8:	ldr	q0, [sp, #128]
    31ec:	add	x24, x1, #0x10
    31f0:	str	xzr, [sp, #136]
    31f4:	str	q0, [x1]
    31f8:	str	xzr, [sp, #128]
    31fc:	str	x24, [x22, #32]
    3200:	b	3214 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x25f0>
    3204:	add	x2, sp, #0x80
    3208:	mov	x0, x23
    320c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3210:	ldr	x24, [x22, #32]
    3214:	ldr	x22, [sp, #136]
    3218:	ldr	x25, [x23]
    321c:	cbz	x22, 32a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2684>
    3220:	adrp	x9, 0 <__pthread_key_create>
    3224:	ldr	x9, [x9]
    3228:	add	x8, x22, #0x8
    322c:	cbz	x9, 324c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2628>
    3230:	ldaxr	w9, [x8]
    3234:	sub	w10, w9, #0x1
    3238:	stlxr	w11, w10, [x8]
    323c:	cbnz	w11, 3230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x260c>
    3240:	cmp	w9, #0x1
    3244:	b.eq	3260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x263c>  // b.none
    3248:	b	32a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2684>
    324c:	ldr	w9, [x8]
    3250:	sub	w10, w9, #0x1
    3254:	str	w10, [x8]
    3258:	cmp	w9, #0x1
    325c:	b.ne	32a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2684>  // b.any
    3260:	mov	x23, x22
    3264:	ldr	x8, [x23], #12
    3268:	mov	x0, x22
    326c:	ldr	x8, [x8, #16]
    3270:	blr	x8
    3274:	adrp	x8, 0 <__pthread_key_create>
    3278:	ldr	x8, [x8]
    327c:	cbz	x8, 36e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ac4>
    3280:	ldaxr	w8, [x23]
    3284:	sub	w9, w8, #0x1
    3288:	stlxr	w10, w9, [x23]
    328c:	cbnz	w10, 3280 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x265c>
    3290:	cmp	w8, #0x1
    3294:	b.ne	32a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2684>  // b.any
    3298:	ldr	x8, [x22]
    329c:	mov	x0, x22
    32a0:	ldr	x8, [x8, #24]
    32a4:	blr	x8
    32a8:	mov	w0, #0x220                 	// #544
    32ac:	bl	0 <_Znwm>
    32b0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    32b4:	ldr	x8, [x8]
    32b8:	movi	v0.2s, #0x1
    32bc:	str	d0, [x0, #8]
    32c0:	movi	v0.2d, #0x0
    32c4:	add	x8, x8, #0x10
    32c8:	mov	x9, x0
    32cc:	mov	x1, x0
    32d0:	mov	w10, #0x27                  	// #39
    32d4:	str	x8, [x0]
    32d8:	stp	q0, q0, [x0, #48]
    32dc:	stp	q0, q0, [x0, #80]
    32e0:	stp	q0, q0, [x0, #112]
    32e4:	stp	q0, q0, [x0, #144]
    32e8:	stp	q0, q0, [x0, #176]
    32ec:	stp	q0, q0, [x0, #208]
    32f0:	stp	q0, q0, [x0, #240]
    32f4:	stp	q0, q0, [x0, #272]
    32f8:	stp	q0, q0, [x0, #304]
    32fc:	stp	q0, q0, [x0, #336]
    3300:	stp	q0, q0, [x0, #368]
    3304:	stp	q0, q0, [x0, #400]
    3308:	stp	q0, q0, [x0, #432]
    330c:	stp	q0, q0, [x0, #464]
    3310:	stp	q0, q0, [x0, #496]
    3314:	str	q0, [x9, #32]!
    3318:	mov	w11, #0xff                  	// #255
    331c:	mov	w8, #0x6                   	// #6
    3320:	str	q0, [x0, #528]
    3324:	str	x9, [x1, #16]!
    3328:	str	x10, [x9]
    332c:	str	d8, [x0, #24]
    3330:	mov	w9, #0x4                   	// #4
    3334:	strb	w11, [x0, #40]
    3338:	strb	w8, [x0, #56]
    333c:	str	x8, [x0, #64]
    3340:	ldp	w8, w11, [x0, #24]
    3344:	ldur	w10, [sp, #67]
    3348:	strb	w9, [x0, #72]
    334c:	ldr	w9, [sp, #64]
    3350:	cmp	w8, w11
    3354:	str	w10, [x0, #76]
    3358:	str	xzr, [x0, #48]
    335c:	stur	w9, [x0, #73]
    3360:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    3364:	add	w8, w8, #0x1
    3368:	str	w8, [x0, #24]
    336c:	ldr	x22, [x19]
    3370:	stp	x1, x0, [sp, #112]
    3374:	mov	x0, x22
    3378:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    337c:	ldp	x1, x8, [x22, #32]
    3380:	add	x23, x22, #0x18
    3384:	cmp	x1, x8
    3388:	b.eq	33ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2788>  // b.none
    338c:	str	xzr, [x1, #8]
    3390:	ldr	q0, [sp, #112]
    3394:	add	x27, x1, #0x10
    3398:	str	xzr, [sp, #120]
    339c:	str	q0, [x1]
    33a0:	str	xzr, [sp, #112]
    33a4:	str	x27, [x22, #32]
    33a8:	b	33bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2798>
    33ac:	add	x2, sp, #0x70
    33b0:	mov	x0, x23
    33b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    33b8:	ldr	x27, [x22, #32]
    33bc:	ldr	x22, [sp, #120]
    33c0:	ldr	x8, [x23]
    33c4:	str	x8, [sp, #56]
    33c8:	cbz	x22, 3454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2830>
    33cc:	adrp	x9, 0 <__pthread_key_create>
    33d0:	ldr	x9, [x9]
    33d4:	add	x8, x22, #0x8
    33d8:	cbz	x9, 33f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x27d4>
    33dc:	ldaxr	w9, [x8]
    33e0:	sub	w10, w9, #0x1
    33e4:	stlxr	w11, w10, [x8]
    33e8:	cbnz	w11, 33dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x27b8>
    33ec:	cmp	w9, #0x1
    33f0:	b.eq	340c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x27e8>  // b.none
    33f4:	b	3454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2830>
    33f8:	ldr	w9, [x8]
    33fc:	sub	w10, w9, #0x1
    3400:	str	w10, [x8]
    3404:	cmp	w9, #0x1
    3408:	b.ne	3454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2830>  // b.any
    340c:	mov	x23, x22
    3410:	ldr	x8, [x23], #12
    3414:	mov	x0, x22
    3418:	ldr	x8, [x8, #16]
    341c:	blr	x8
    3420:	adrp	x8, 0 <__pthread_key_create>
    3424:	ldr	x8, [x8]
    3428:	cbz	x8, 3700 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2adc>
    342c:	ldaxr	w8, [x23]
    3430:	sub	w9, w8, #0x1
    3434:	stlxr	w10, w9, [x23]
    3438:	cbnz	w10, 342c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2808>
    343c:	cmp	w8, #0x1
    3440:	b.ne	3454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2830>  // b.any
    3444:	ldr	x8, [x22]
    3448:	mov	x0, x22
    344c:	ldr	x8, [x8, #24]
    3450:	blr	x8
    3454:	ldp	x8, x10, [x19, #232]
    3458:	ldr	w9, [x19, #564]
    345c:	ldr	w2, [x19, #568]
    3460:	sub	x10, x10, x8
    3464:	add	x11, x2, x9
    3468:	cmp	x11, x10, asr #3
    346c:	b.hi	503c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4418>  // b.pmore
    3470:	add	x1, x8, x9, lsl #3
    3474:	add	x3, sp, #0x1f8
    3478:	mov	x0, x19
    347c:	bl	1479c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE>
    3480:	ldp	x8, x11, [x19, #232]
    3484:	ldr	w9, [x19, #564]
    3488:	ldr	w10, [x19, #568]
    348c:	adrp	x26, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3490:	sub	x11, x11, x8
    3494:	ldr	w12, [x26]
    3498:	asr	x11, x11, #3
    349c:	sub	x11, x11, x9
    34a0:	sub	x28, x11, x10
    34a4:	cmp	x28, x12
    34a8:	b.ls	34e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x28c4>  // b.plast
    34ac:	stp	xzr, xzr, [sp, #144]
    34b0:	ldr	x0, [x19]
    34b4:	sub	x8, x24, x25
    34b8:	lsr	x8, x8, #4
    34bc:	add	w3, w8, #0x3
    34c0:	add	x2, sp, #0x90
    34c4:	mov	w1, #0x26                  	// #38
    34c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    34cc:	ldp	x8, x11, [x19, #232]
    34d0:	ldr	w9, [x19, #564]
    34d4:	ldr	w10, [x19, #568]
    34d8:	sub	x11, x11, x8
    34dc:	asr	x11, x11, #3
    34e0:	sub	x11, x11, x9
    34e4:	sub	x28, x11, x10
    34e8:	ldr	x11, [x19]
    34ec:	ldr	x12, [x11]
    34f0:	ldr	w24, [x11, #8]
    34f4:	lsr	x11, x28, #60
    34f8:	ldr	w25, [x12, #8]
    34fc:	stp	xzr, xzr, [sp, #64]
    3500:	str	xzr, [sp, #80]
    3504:	cbnz	x11, 513c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4518>
    3508:	cbz	x28, 356c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2948>
    350c:	lsl	x0, x28, #3
    3510:	bl	0 <_Znwm>
    3514:	ldp	x23, x8, [sp, #64]
    3518:	mov	x22, x0
    351c:	sub	x2, x8, x23
    3520:	cmp	x2, #0x1
    3524:	b.lt	3534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2910>  // b.tstop
    3528:	mov	x0, x22
    352c:	mov	x1, x23
    3530:	bl	0 <memmove>
    3534:	cbz	x23, 3540 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x291c>
    3538:	mov	x0, x23
    353c:	bl	0 <_ZdlPv>
    3540:	add	x8, x22, x28, lsl #3
    3544:	stp	x22, x22, [sp, #64]
    3548:	str	x8, [sp, #80]
    354c:	ldp	x8, x11, [x19, #232]
    3550:	ldr	w9, [x19, #564]
    3554:	ldr	w10, [x19, #568]
    3558:	sub	x11, x11, x8
    355c:	asr	x11, x11, #3
    3560:	sub	x11, x11, x9
    3564:	sub	x2, x11, x10
    3568:	b	3570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x294c>
    356c:	mov	x2, xzr
    3570:	add	x8, x8, x9, lsl #3
    3574:	add	x1, x8, x10, lsl #3
    3578:	add	x3, sp, #0x1f8
    357c:	add	x4, sp, #0x1a0
    3580:	add	x5, sp, #0x40
    3584:	mov	x0, x19
    3588:	bl	14cc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE>
    358c:	ldp	x8, x9, [x19, #232]
    3590:	ldr	w10, [x19, #564]
    3594:	ldr	w11, [x19, #568]
    3598:	adrp	x28, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    359c:	sub	x8, x9, x8
    35a0:	ldr	w9, [x26]
    35a4:	asr	x8, x8, #3
    35a8:	sub	x8, x8, x10
    35ac:	sub	x8, x8, x11
    35b0:	cmp	x8, x9
    35b4:	b.ls	37a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b80>  // b.plast
    35b8:	ldr	x23, [x19]
    35bc:	ldr	x8, [sp, #56]
    35c0:	add	x25, x24, x25, lsl #3
    35c4:	sub	x1, x25, #0x40
    35c8:	ldr	x9, [x23]
    35cc:	sub	x8, x27, x8
    35d0:	lsr	x8, x8, #4
    35d4:	add	w22, w8, #0x3
    35d8:	ldr	w8, [x23, #8]
    35dc:	ldr	w9, [x9, #8]
    35e0:	mov	x0, x23
    35e4:	sub	x8, x8, x25
    35e8:	add	x24, x8, x9, lsl #3
    35ec:	mov	w2, w24
    35f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    35f4:	sub	x1, x25, #0x20
    35f8:	lsr	x2, x24, #32
    35fc:	mov	x0, x23
    3600:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3604:	ldp	x12, x8, [sp, #64]
    3608:	cmp	x12, x8
    360c:	b.eq	3780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b5c>  // b.none
    3610:	sub	x9, x8, x12
    3614:	sub	x9, x9, #0x8
    3618:	cmp	x9, #0x17
    361c:	b.hi	3718 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2af4>  // b.pmore
    3620:	mov	x9, x12
    3624:	b	3768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b44>
    3628:	ldr	w8, [x24]
    362c:	sub	w9, w8, #0x1
    3630:	str	w9, [x24]
    3634:	cmp	w8, #0x1
    3638:	b.eq	dec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1c8>  // b.none
    363c:	b	dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x1d8>
    3640:	ldr	w8, [x23]
    3644:	sub	w9, w8, #0x1
    3648:	str	w9, [x23]
    364c:	cmp	w8, #0x1
    3650:	b.eq	f90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36c>  // b.none
    3654:	b	fa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37c>
    3658:	ldr	w8, [x21]
    365c:	sub	w9, w8, #0x1
    3660:	str	w9, [x21]
    3664:	cmp	w8, #0x1
    3668:	b.eq	11d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5b4>  // b.none
    366c:	b	11e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x5c4>
    3670:	ldr	w8, [x21]
    3674:	sub	w9, w8, #0x1
    3678:	str	w9, [x21]
    367c:	cmp	w8, #0x1
    3680:	b.eq	13dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7b8>  // b.none
    3684:	b	13ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x7c8>
    3688:	ldr	w8, [x24]
    368c:	sub	w9, w8, #0x1
    3690:	str	w9, [x24]
    3694:	cmp	w8, #0x1
    3698:	b.eq	15d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9b0>  // b.none
    369c:	b	15e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x9c0>
    36a0:	ldr	w8, [x24]
    36a4:	sub	w9, w8, #0x1
    36a8:	str	w9, [x24]
    36ac:	cmp	w8, #0x1
    36b0:	b.eq	1784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb60>  // b.none
    36b4:	b	1794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xb70>
    36b8:	ldr	w8, [x25]
    36bc:	sub	w9, w8, #0x1
    36c0:	str	w9, [x25]
    36c4:	cmp	w8, #0x1
    36c8:	b.eq	1988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd64>  // b.none
    36cc:	b	1998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xd74>
    36d0:	ldr	w8, [x28]
    36d4:	sub	w9, w8, #0x1
    36d8:	str	w9, [x28]
    36dc:	cmp	w8, #0x1
    36e0:	b.eq	1b34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf10>  // b.none
    36e4:	b	1b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf20>
    36e8:	ldr	w8, [x23]
    36ec:	sub	w9, w8, #0x1
    36f0:	str	w9, [x23]
    36f4:	cmp	w8, #0x1
    36f8:	b.eq	3298 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2674>  // b.none
    36fc:	b	32a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2684>
    3700:	ldr	w8, [x23]
    3704:	sub	w9, w8, #0x1
    3708:	str	w9, [x23]
    370c:	cmp	w8, #0x1
    3710:	b.eq	3444 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2820>  // b.none
    3714:	b	3454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2830>
    3718:	lsr	x9, x9, #3
    371c:	add	x10, x9, #0x1
    3720:	and	x11, x10, #0x3ffffffffffffffc
    3724:	dup	v0.2d, x25
    3728:	add	x9, x12, x11, lsl #3
    372c:	add	x12, x12, #0x10
    3730:	mov	x13, x11
    3734:	ldur	q1, [x12, #-16]
    3738:	subs	x13, x13, #0x4
    373c:	ext	v2.16b, v0.16b, v1.16b, #8
    3740:	ldr	q0, [x12]
    3744:	sub	v2.2d, v1.2d, v2.2d
    3748:	ext	v1.16b, v1.16b, v0.16b, #8
    374c:	sub	v1.2d, v0.2d, v1.2d
    3750:	stp	q2, q1, [x12, #-16]
    3754:	add	x12, x12, #0x20
    3758:	b.ne	3734 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b10>  // b.any
    375c:	cmp	x10, x11
    3760:	b.eq	3780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b5c>  // b.none
    3764:	mov	x25, v0.d[1]
    3768:	ldr	x10, [x9]
    376c:	sub	x11, x10, x25
    3770:	str	x11, [x9], #8
    3774:	cmp	x8, x9
    3778:	mov	x25, x10
    377c:	b.ne	3768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b44>  // b.any
    3780:	ldr	x0, [x19]
    3784:	add	x2, sp, #0x40
    3788:	mov	w1, #0x27                  	// #39
    378c:	mov	w3, w22
    3790:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3794:	ldp	x8, x9, [sp, #64]
    3798:	cmp	x9, x8
    379c:	b.eq	37a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2b80>  // b.none
    37a0:	str	x8, [sp, #72]
    37a4:	ldr	x8, [x19, #16]
    37a8:	mov	x9, x8
    37ac:	ldr	x10, [x9, #72]!
    37b0:	and	x10, x10, #0xfffffffffffffff8
    37b4:	cmp	x9, x10
    37b8:	b.eq	3ac8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ea4>  // b.none
    37bc:	mov	w0, #0x220                 	// #544
    37c0:	bl	0 <_Znwm>
    37c4:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    37c8:	ldr	x8, [x8]
    37cc:	movi	v0.2s, #0x1
    37d0:	str	d0, [x0, #8]
    37d4:	movi	v0.2d, #0x0
    37d8:	add	x8, x8, #0x10
    37dc:	mov	x9, x0
    37e0:	mov	x22, x0
    37e4:	str	x8, [x0]
    37e8:	mov	w8, #0x4                   	// #4
    37ec:	stp	q0, q0, [x0, #48]
    37f0:	stp	q0, q0, [x0, #80]
    37f4:	stp	q0, q0, [x0, #112]
    37f8:	stp	q0, q0, [x0, #144]
    37fc:	stp	q0, q0, [x0, #176]
    3800:	stp	q0, q0, [x0, #208]
    3804:	stp	q0, q0, [x0, #240]
    3808:	stp	q0, q0, [x0, #272]
    380c:	stp	q0, q0, [x0, #304]
    3810:	stp	q0, q0, [x0, #336]
    3814:	stp	q0, q0, [x0, #368]
    3818:	stp	q0, q0, [x0, #400]
    381c:	stp	q0, q0, [x0, #432]
    3820:	stp	q0, q0, [x0, #464]
    3824:	stp	q0, q0, [x0, #496]
    3828:	str	q0, [x9, #32]!
    382c:	str	q0, [x0, #528]
    3830:	str	x9, [x22, #16]!
    3834:	str	x8, [x9]
    3838:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    383c:	ldr	d0, [x9]
    3840:	mov	w8, #0xff                  	// #255
    3844:	strb	w8, [x0, #40]
    3848:	mov	w8, #0x8                   	// #8
    384c:	mov	w9, #0x6                   	// #6
    3850:	str	x8, [x0, #64]
    3854:	mov	w8, #0x2                   	// #2
    3858:	str	xzr, [x0, #48]
    385c:	strb	w9, [x0, #56]
    3860:	strb	w8, [x0, #72]
    3864:	str	d0, [x0, #24]
    3868:	ldr	x24, [x19]
    386c:	stp	x22, x0, [sp, #144]
    3870:	mov	x1, x22
    3874:	mov	x0, x24
    3878:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    387c:	ldp	x1, x8, [x24, #32]
    3880:	add	x23, x24, #0x18
    3884:	cmp	x1, x8
    3888:	b.eq	38a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2c84>  // b.none
    388c:	stp	x22, xzr, [x1]
    3890:	ldr	x8, [sp, #152]
    3894:	add	x25, x1, #0x10
    3898:	stp	xzr, xzr, [sp, #144]
    389c:	str	x8, [x1, #8]
    38a0:	str	x25, [x24, #32]
    38a4:	b	38b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2c94>
    38a8:	add	x2, sp, #0x90
    38ac:	mov	x0, x23
    38b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    38b4:	ldr	x25, [x24, #32]
    38b8:	ldr	x22, [sp, #152]
    38bc:	ldr	x23, [x23]
    38c0:	cbz	x22, 394c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d28>
    38c4:	adrp	x9, 0 <__pthread_key_create>
    38c8:	ldr	x9, [x9]
    38cc:	add	x8, x22, #0x8
    38d0:	cbz	x9, 38f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ccc>
    38d4:	ldaxr	w9, [x8]
    38d8:	sub	w10, w9, #0x1
    38dc:	stlxr	w11, w10, [x8]
    38e0:	cbnz	w11, 38d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2cb0>
    38e4:	cmp	w9, #0x1
    38e8:	b.eq	3904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ce0>  // b.none
    38ec:	b	394c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d28>
    38f0:	ldr	w9, [x8]
    38f4:	sub	w10, w9, #0x1
    38f8:	str	w10, [x8]
    38fc:	cmp	w9, #0x1
    3900:	b.ne	394c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d28>  // b.any
    3904:	mov	x24, x22
    3908:	ldr	x8, [x24], #12
    390c:	mov	x0, x22
    3910:	ldr	x8, [x8, #16]
    3914:	blr	x8
    3918:	adrp	x8, 0 <__pthread_key_create>
    391c:	ldr	x8, [x8]
    3920:	cbz	x8, 4d28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4104>
    3924:	ldaxr	w8, [x24]
    3928:	sub	w9, w8, #0x1
    392c:	stlxr	w10, w9, [x24]
    3930:	cbnz	w10, 3924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d00>
    3934:	cmp	w8, #0x1
    3938:	b.ne	394c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d28>  // b.any
    393c:	ldr	x8, [x22]
    3940:	mov	x0, x22
    3944:	ldr	x8, [x8, #24]
    3948:	blr	x8
    394c:	ldr	x8, [x19, #16]
    3950:	ldr	x22, [x8, #80]
    3954:	add	x27, x8, #0x48
    3958:	cmp	x27, x22
    395c:	b.eq	3ac8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ea4>  // b.none
    3960:	sub	x8, x25, x23
    3964:	lsr	x8, x8, #4
    3968:	add	w23, w8, #0x3
    396c:	b	3994 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d70>
    3970:	ldr	x0, [x19]
    3974:	add	x2, sp, #0x1f8
    3978:	mov	w1, #0xa                   	// #10
    397c:	mov	w3, wzr
    3980:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3984:	str	wzr, [sp, #512]
    3988:	ldr	x22, [x22, #8]
    398c:	cmp	x27, x22
    3990:	b.eq	3ac4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ea0>  // b.none
    3994:	ldrb	w8, [x22]
    3998:	tbnz	w8, #2, 4ffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43d8>
    399c:	mov	x0, x22
    39a0:	bl	0 <_ZNK4llvm11NamedMDNode7getNameEv>
    39a4:	ldr	w9, [sp, #516]
    39a8:	ldr	w8, [sp, #512]
    39ac:	mov	x24, x1
    39b0:	mov	x25, x0
    39b4:	sub	x9, x9, x8
    39b8:	cmp	x1, x9
    39bc:	b.ls	39d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2db4>  // b.plast
    39c0:	add	x2, x24, x8
    39c4:	add	x0, sp, #0x1f8
    39c8:	mov	w3, #0x8                   	// #8
    39cc:	mov	x1, x21
    39d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    39d4:	ldr	w8, [sp, #512]
    39d8:	cmp	x24, #0x1
    39dc:	b.lt	3a08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2de4>  // b.tstop
    39e0:	ldr	x9, [sp, #504]
    39e4:	add	x10, x25, x24
    39e8:	sub	x10, x10, x25
    39ec:	add	x10, x10, #0x1
    39f0:	add	x9, x9, x8, lsl #3
    39f4:	ldrb	w11, [x25], #1
    39f8:	sub	x10, x10, #0x1
    39fc:	cmp	x10, #0x1
    3a00:	str	x11, [x9], #8
    3a04:	b.gt	39f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2dd0>
    3a08:	ldr	w9, [sp, #516]
    3a0c:	add	x8, x8, x24
    3a10:	cmp	x8, x9
    3a14:	b.hi	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.pmore
    3a18:	str	w8, [sp, #512]
    3a1c:	ldr	x0, [x19]
    3a20:	add	x2, sp, #0x1f8
    3a24:	mov	w1, #0x4                   	// #4
    3a28:	mov	w3, w23
    3a2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3a30:	mov	x0, x22
    3a34:	str	wzr, [sp, #512]
    3a38:	bl	0 <_ZNK4llvm11NamedMDNode14getNumOperandsEv>
    3a3c:	cbz	w0, 3970 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d4c>
    3a40:	mov	w24, w0
    3a44:	mov	w1, wzr
    3a48:	mov	x25, xzr
    3a4c:	mov	x0, x22
    3a50:	bl	0 <_ZNK4llvm11NamedMDNode10getOperandEj>
    3a54:	mov	x1, x0
    3a58:	mov	x0, x20
    3a5c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3a60:	ldr	w8, [sp, #512]
    3a64:	ldr	w9, [sp, #516]
    3a68:	mov	w26, w0
    3a6c:	cmp	w8, w9
    3a70:	b.cs	3aa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2e84>  // b.hs, b.nlast
    3a74:	ldr	x9, [sp, #504]
    3a78:	str	x26, [x9, w8, uxtw #3]
    3a7c:	ldr	w8, [sp, #512]
    3a80:	ldr	w9, [sp, #516]
    3a84:	cmp	w8, w9
    3a88:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    3a8c:	add	x1, x25, #0x1
    3a90:	add	w8, w8, #0x1
    3a94:	cmp	w24, w1
    3a98:	and	x25, x1, #0xffffffff
    3a9c:	str	w8, [sp, #512]
    3aa0:	b.ne	3a4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2e28>  // b.any
    3aa4:	b	3970 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d4c>
    3aa8:	add	x0, sp, #0x1f8
    3aac:	mov	w3, #0x8                   	// #8
    3ab0:	mov	x1, x21
    3ab4:	mov	x2, xzr
    3ab8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3abc:	ldr	w8, [sp, #512]
    3ac0:	b	3a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2e50>
    3ac4:	ldr	x8, [x19, #16]
    3ac8:	ldr	x23, [x8, #32]
    3acc:	add	x24, x8, #0x18
    3ad0:	cmp	x24, x23
    3ad4:	b.eq	3bb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f90>  // b.none
    3ad8:	ldr	d11, [x28]
    3adc:	add	x8, sp, #0x90
    3ae0:	add	x21, x8, #0x10
    3ae4:	b	3af4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ed0>
    3ae8:	ldr	x23, [x23, #8]
    3aec:	cmp	x24, x23
    3af0:	b.eq	3bb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f8c>  // b.none
    3af4:	ldrb	w8, [x23]
    3af8:	tbnz	w8, #2, 4f24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4300>
    3afc:	sub	x8, x23, #0x38
    3b00:	cmp	x23, #0x0
    3b04:	csel	x22, xzr, x8, eq  // eq = none
    3b08:	mov	x0, x22
    3b0c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    3b10:	tbz	w0, #0, 3ae8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ec4>
    3b14:	ldrb	w8, [x22, #34]
    3b18:	tbz	w8, #5, 3ae8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ec4>
    3b1c:	mov	x0, x20
    3b20:	mov	x1, x22
    3b24:	str	x21, [sp, #144]
    3b28:	str	d11, [sp, #152]
    3b2c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    3b30:	ldp	w8, w9, [sp, #152]
    3b34:	mov	w25, w0
    3b38:	cmp	w8, w9
    3b3c:	b.cs	3b94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f70>  // b.hs, b.nlast
    3b40:	ldr	x9, [sp, #144]
    3b44:	str	x25, [x9, w8, uxtw #3]
    3b48:	ldp	w8, w9, [sp, #152]
    3b4c:	cmp	w8, w9
    3b50:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    3b54:	add	w8, w8, #0x1
    3b58:	add	x1, sp, #0x90
    3b5c:	mov	x0, x19
    3b60:	mov	x2, x22
    3b64:	str	w8, [sp, #152]
    3b68:	bl	1e2d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>
    3b6c:	ldr	x0, [x19]
    3b70:	add	x2, sp, #0x90
    3b74:	mov	w1, #0x24                  	// #36
    3b78:	mov	w3, wzr
    3b7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3b80:	ldr	x0, [sp, #144]
    3b84:	cmp	x0, x21
    3b88:	b.eq	3ae8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ec4>  // b.none
    3b8c:	bl	0 <free>
    3b90:	b	3ae8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ec4>
    3b94:	add	x0, sp, #0x90
    3b98:	mov	w3, #0x8                   	// #8
    3b9c:	mov	x1, x21
    3ba0:	mov	x2, xzr
    3ba4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3ba8:	ldr	w8, [sp, #152]
    3bac:	b	3b40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2f1c>
    3bb0:	ldr	x8, [x19, #16]
    3bb4:	ldr	x23, [x8, #16]
    3bb8:	add	x24, x8, #0x8
    3bbc:	cmp	x24, x23
    3bc0:	b.eq	3c90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x306c>  // b.none
    3bc4:	ldr	d11, [x28]
    3bc8:	add	x8, sp, #0x90
    3bcc:	add	x21, x8, #0x10
    3bd0:	b	3be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fbc>
    3bd4:	ldr	x23, [x23, #8]
    3bd8:	cmp	x24, x23
    3bdc:	b.eq	3c90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x306c>  // b.none
    3be0:	ldrb	w8, [x23]
    3be4:	tbnz	w8, #2, 4f9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4378>
    3be8:	sub	x8, x23, #0x38
    3bec:	cmp	x23, #0x0
    3bf0:	csel	x22, xzr, x8, eq  // eq = none
    3bf4:	ldrb	w8, [x22, #34]
    3bf8:	tbz	w8, #5, 3bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fb0>
    3bfc:	mov	x0, x20
    3c00:	mov	x1, x22
    3c04:	str	x21, [sp, #144]
    3c08:	str	d11, [sp, #152]
    3c0c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    3c10:	ldp	w8, w9, [sp, #152]
    3c14:	mov	w25, w0
    3c18:	cmp	w8, w9
    3c1c:	b.cs	3c74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3050>  // b.hs, b.nlast
    3c20:	ldr	x9, [sp, #144]
    3c24:	str	x25, [x9, w8, uxtw #3]
    3c28:	ldp	w8, w9, [sp, #152]
    3c2c:	cmp	w8, w9
    3c30:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    3c34:	add	w8, w8, #0x1
    3c38:	add	x1, sp, #0x90
    3c3c:	mov	x0, x19
    3c40:	mov	x2, x22
    3c44:	str	w8, [sp, #152]
    3c48:	bl	1e2d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>
    3c4c:	ldr	x0, [x19]
    3c50:	add	x2, sp, #0x90
    3c54:	mov	w1, #0x24                  	// #36
    3c58:	mov	w3, wzr
    3c5c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3c60:	ldr	x0, [sp, #144]
    3c64:	cmp	x0, x21
    3c68:	b.eq	3bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fb0>  // b.none
    3c6c:	bl	0 <free>
    3c70:	b	3bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2fb0>
    3c74:	add	x0, sp, #0x90
    3c78:	mov	w3, #0x8                   	// #8
    3c7c:	mov	x1, x21
    3c80:	mov	x2, xzr
    3c84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3c88:	ldr	w8, [sp, #152]
    3c8c:	b	3c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2ffc>
    3c90:	ldr	x0, [x19]
    3c94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3c98:	ldr	x0, [sp, #64]
    3c9c:	cbz	x0, 3ca4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3080>
    3ca0:	bl	0 <_ZdlPv>
    3ca4:	ldr	x0, [sp, #416]
    3ca8:	cbz	x0, 3cb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x308c>
    3cac:	bl	0 <_ZdlPv>
    3cb0:	ldr	x0, [sp, #504]
    3cb4:	add	x8, sp, #0x1f8
    3cb8:	add	x8, x8, #0x10
    3cbc:	cmp	x0, x8
    3cc0:	b.eq	3cc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x30a4>  // b.none
    3cc4:	bl	0 <free>
    3cc8:	ldrb	w8, [x19, #344]
    3ccc:	cbz	w8, 3cdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x30b8>
    3cd0:	mov	x0, x19
    3cd4:	mov	x1, xzr
    3cd8:	bl	e090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE>
    3cdc:	add	x8, sp, #0x90
    3ce0:	add	x23, x8, #0x10
    3ce4:	str	x23, [sp, #144]
    3ce8:	str	d10, [sp, #152]
    3cec:	ldr	x0, [x19, #16]
    3cf0:	add	x1, sp, #0x90
    3cf4:	bl	0 <_ZNK4llvm6Module20getOperandBundleTagsERNS_15SmallVectorImplINS_9StringRefEEE>
    3cf8:	ldr	w8, [sp, #152]
    3cfc:	cbz	w8, 3de8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x31c4>
    3d00:	ldr	x0, [x19]
    3d04:	mov	w1, #0x15                  	// #21
    3d08:	mov	w2, #0x3                   	// #3
    3d0c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3d10:	ldr	w8, [sp, #152]
    3d14:	add	x9, sp, #0x1f8
    3d18:	add	x21, x9, #0x10
    3d1c:	str	x21, [sp, #504]
    3d20:	str	d9, [sp, #512]
    3d24:	cbz	w8, 3dd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x31ac>
    3d28:	ldr	x24, [sp, #144]
    3d2c:	add	x25, x24, x8, lsl #4
    3d30:	mov	w8, #0x40                  	// #64
    3d34:	ldp	x26, x22, [x24]
    3d38:	cmp	x22, w8, uxtw
    3d3c:	b.ls	3d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3140>  // b.plast
    3d40:	add	x0, sp, #0x1f8
    3d44:	mov	w3, #0x8                   	// #8
    3d48:	mov	x1, x21
    3d4c:	mov	x2, x22
    3d50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3d54:	ldr	w8, [sp, #512]
    3d58:	cmp	x22, #0x1
    3d5c:	b.ge	3d70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x314c>  // b.tcont
    3d60:	b	3d90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x316c>
    3d64:	mov	x8, xzr
    3d68:	cmp	x22, #0x1
    3d6c:	b.lt	3d90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x316c>  // b.tstop
    3d70:	ldr	x9, [sp, #504]
    3d74:	add	x10, x22, #0x1
    3d78:	add	x9, x9, x8, lsl #3
    3d7c:	ldrb	w11, [x26], #1
    3d80:	sub	x10, x10, #0x1
    3d84:	cmp	x10, #0x1
    3d88:	str	x11, [x9], #8
    3d8c:	b.gt	3d7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3158>
    3d90:	ldr	w9, [sp, #516]
    3d94:	add	x8, x8, x22
    3d98:	cmp	x8, x9
    3d9c:	b.hi	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.pmore
    3da0:	str	w8, [sp, #512]
    3da4:	ldr	x0, [x19]
    3da8:	add	x2, sp, #0x1f8
    3dac:	mov	w1, #0x1                   	// #1
    3db0:	mov	w3, wzr
    3db4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3db8:	add	x24, x24, #0x10
    3dbc:	cmp	x24, x25
    3dc0:	str	wzr, [sp, #512]
    3dc4:	b.eq	3dd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x31ac>  // b.none
    3dc8:	ldr	w8, [sp, #516]
    3dcc:	b	3d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3110>
    3dd0:	ldr	x0, [x19]
    3dd4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3dd8:	ldr	x0, [sp, #504]
    3ddc:	cmp	x0, x21
    3de0:	b.eq	3de8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x31c4>  // b.none
    3de4:	bl	0 <free>
    3de8:	ldr	x0, [sp, #144]
    3dec:	cmp	x0, x23
    3df0:	b.eq	3df8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x31d4>  // b.none
    3df4:	bl	0 <free>
    3df8:	add	x8, sp, #0x90
    3dfc:	add	x23, x8, #0x10
    3e00:	str	x23, [sp, #144]
    3e04:	str	d10, [sp, #152]
    3e08:	ldr	x8, [x19, #16]
    3e0c:	add	x1, sp, #0x90
    3e10:	ldr	x0, [x8]
    3e14:	bl	0 <_ZNK4llvm11LLVMContext17getSyncScopeNamesERNS_15SmallVectorImplINS_9StringRefEEE>
    3e18:	ldr	w8, [sp, #152]
    3e1c:	cbz	w8, 3f08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x32e4>
    3e20:	ldr	x0, [x19]
    3e24:	mov	w1, #0x1a                  	// #26
    3e28:	mov	w2, #0x2                   	// #2
    3e2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3e30:	ldr	w8, [sp, #152]
    3e34:	add	x9, sp, #0x1f8
    3e38:	add	x21, x9, #0x10
    3e3c:	str	x21, [sp, #504]
    3e40:	str	d9, [sp, #512]
    3e44:	cbz	w8, 3ef0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x32cc>
    3e48:	ldr	x24, [sp, #144]
    3e4c:	add	x25, x24, x8, lsl #4
    3e50:	mov	w8, #0x40                  	// #64
    3e54:	ldp	x26, x22, [x24]
    3e58:	cmp	x22, w8, uxtw
    3e5c:	b.ls	3e84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3260>  // b.plast
    3e60:	add	x0, sp, #0x1f8
    3e64:	mov	w3, #0x8                   	// #8
    3e68:	mov	x1, x21
    3e6c:	mov	x2, x22
    3e70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3e74:	ldr	w8, [sp, #512]
    3e78:	cmp	x22, #0x1
    3e7c:	b.ge	3e90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x326c>  // b.tcont
    3e80:	b	3eb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x328c>
    3e84:	mov	x8, xzr
    3e88:	cmp	x22, #0x1
    3e8c:	b.lt	3eb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x328c>  // b.tstop
    3e90:	ldr	x9, [sp, #504]
    3e94:	add	x10, x22, #0x1
    3e98:	add	x9, x9, x8, lsl #3
    3e9c:	ldrb	w11, [x26], #1
    3ea0:	sub	x10, x10, #0x1
    3ea4:	cmp	x10, #0x1
    3ea8:	str	x11, [x9], #8
    3eac:	b.gt	3e9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3278>
    3eb0:	ldr	w9, [sp, #516]
    3eb4:	add	x8, x8, x22
    3eb8:	cmp	x8, x9
    3ebc:	b.hi	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.pmore
    3ec0:	str	w8, [sp, #512]
    3ec4:	ldr	x0, [x19]
    3ec8:	add	x2, sp, #0x1f8
    3ecc:	mov	w1, #0x1                   	// #1
    3ed0:	mov	w3, wzr
    3ed4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3ed8:	add	x24, x24, #0x10
    3edc:	cmp	x24, x25
    3ee0:	str	wzr, [sp, #512]
    3ee4:	b.eq	3ef0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x32cc>  // b.none
    3ee8:	ldr	w8, [sp, #516]
    3eec:	b	3e54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3230>
    3ef0:	ldr	x0, [x19]
    3ef4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3ef8:	ldr	x0, [sp, #504]
    3efc:	cmp	x0, x21
    3f00:	b.eq	3f08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x32e4>  // b.none
    3f04:	bl	0 <free>
    3f08:	ldr	x0, [sp, #144]
    3f0c:	cmp	x0, x23
    3f10:	b.eq	3f18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x32f4>  // b.none
    3f14:	bl	0 <free>
    3f18:	stp	xzr, xzr, [sp, #64]
    3f1c:	str	wzr, [sp, #88]
    3f20:	str	xzr, [sp, #80]
    3f24:	ldr	x8, [x19, #16]
    3f28:	ldr	x21, [x8, #32]
    3f2c:	add	x8, x8, #0x18
    3f30:	str	x8, [sp, #24]
    3f34:	cmp	x8, x21
    3f38:	b.eq	4980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d5c>  // b.none
    3f3c:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3f40:	ldr	d10, [x11]
    3f44:	ldr	d11, [x28]
    3f48:	add	x8, sp, #0x90
    3f4c:	add	x9, sp, #0x1f8
    3f50:	add	x10, sp, #0x1a0
    3f54:	add	x8, x8, #0x10
    3f58:	str	x8, [sp, #32]
    3f5c:	add	x23, x9, #0x10
    3f60:	add	x8, x10, #0x10
    3f64:	str	x8, [sp, #8]
    3f68:	str	x23, [sp, #40]
    3f6c:	b	3f80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x335c>
    3f70:	ldr	x21, [x21, #8]
    3f74:	ldr	x8, [sp, #24]
    3f78:	cmp	x8, x21
    3f7c:	b.eq	4980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d5c>  // b.none
    3f80:	ldrb	w8, [x21]
    3f84:	tbnz	w8, #2, 4f24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4300>
    3f88:	sub	x8, x21, #0x38
    3f8c:	cmp	x21, #0x0
    3f90:	csel	x22, xzr, x8, eq  // eq = none
    3f94:	mov	x0, x22
    3f98:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    3f9c:	tbnz	w0, #0, 3f70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x334c>
    3fa0:	ldrb	w8, [x21]
    3fa4:	str	x21, [sp, #16]
    3fa8:	tbnz	w8, #2, 4f24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4300>
    3fac:	ldr	x8, [x19]
    3fb0:	add	x0, sp, #0x40
    3fb4:	add	x1, sp, #0x1f8
    3fb8:	ldr	x9, [x8]
    3fbc:	ldr	w8, [x8, #8]
    3fc0:	ldr	w9, [x9, #8]
    3fc4:	str	x22, [sp, #504]
    3fc8:	add	x21, x8, x9, lsl #3
    3fcc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3fd0:	str	x21, [x0]
    3fd4:	ldr	x0, [x19]
    3fd8:	mov	w1, #0xc                   	// #12
    3fdc:	mov	w2, #0x4                   	// #4
    3fe0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    3fe4:	mov	x0, x20
    3fe8:	mov	x1, x22
    3fec:	bl	0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE>
    3ff0:	ldr	x8, [sp, #32]
    3ff4:	add	x2, sp, #0x90
    3ff8:	mov	w1, #0x1                   	// #1
    3ffc:	mov	w3, wzr
    4000:	str	x8, [sp, #144]
    4004:	ldr	x8, [x19, #544]
    4008:	ldr	x9, [x19, #536]
    400c:	str	d10, [sp, #152]
    4010:	sub	x8, x8, x9
    4014:	lsr	x8, x8, #3
    4018:	str	w8, [sp, #160]
    401c:	ldr	x0, [x19]
    4020:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4024:	str	wzr, [sp, #152]
    4028:	ldr	w24, [x19, #576]
    402c:	ldr	w1, [x19, #572]
    4030:	mov	x0, x19
    4034:	mov	w3, wzr
    4038:	mov	w2, w24
    403c:	bl	11130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb>
    4040:	ldp	x9, x8, [x19, #232]
    4044:	ldr	w10, [x19, #564]
    4048:	sub	x8, x8, x9
    404c:	cmp	x10, x8, asr #3
    4050:	b.cs	40e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x34c4>  // b.hs, b.nlast
    4054:	ldr	x0, [x19]
    4058:	mov	w1, #0xf                   	// #15
    405c:	mov	w2, #0x3                   	// #3
    4060:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4064:	str	x23, [sp, #504]
    4068:	str	d9, [sp, #512]
    406c:	ldp	x8, x10, [x19, #232]
    4070:	ldr	w9, [x19, #564]
    4074:	ldr	w2, [x19, #568]
    4078:	sub	x10, x10, x8
    407c:	add	x11, x2, x9
    4080:	cmp	x11, x10, asr #3
    4084:	b.hi	503c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4418>  // b.pmore
    4088:	add	x1, x8, x9, lsl #3
    408c:	add	x3, sp, #0x1f8
    4090:	mov	x0, x19
    4094:	bl	1479c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE>
    4098:	ldp	x8, x9, [x19, #232]
    409c:	ldr	w10, [x19, #564]
    40a0:	ldr	w11, [x19, #568]
    40a4:	add	x3, sp, #0x1f8
    40a8:	sub	x9, x9, x8
    40ac:	asr	x9, x9, #3
    40b0:	add	x8, x8, x10, lsl #3
    40b4:	sub	x9, x9, x10
    40b8:	sub	x2, x9, x11
    40bc:	add	x1, x8, x11, lsl #3
    40c0:	mov	x0, x19
    40c4:	mov	x4, xzr
    40c8:	mov	x5, xzr
    40cc:	bl	14cc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE>
    40d0:	ldr	x0, [x19]
    40d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    40d8:	ldr	x0, [sp, #504]
    40dc:	cmp	x0, x23
    40e0:	b.eq	40e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x34c4>  // b.none
    40e4:	bl	0 <free>
    40e8:	ldr	x26, [x22, #80]
    40ec:	ldrb	w8, [x22, #34]
    40f0:	add	x9, x22, #0x48
    40f4:	stp	x22, x9, [sp, #48]
    40f8:	cmp	x9, x26
    40fc:	ubfx	w21, w8, #5, #1
    4100:	b.eq	448c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3868>  // b.none
    4104:	mov	x28, xzr
    4108:	b	411c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x34f8>
    410c:	ldr	x26, [x26, #8]
    4110:	ldr	x8, [sp, #56]
    4114:	cmp	x8, x26
    4118:	b.eq	448c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3868>  // b.none
    411c:	ldrb	w8, [x26]
    4120:	tbnz	w8, #2, 4ea4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4280>
    4124:	sub	x8, x26, #0x18
    4128:	cmp	x26, #0x0
    412c:	csel	x8, xzr, x8, eq  // eq = none
    4130:	ldr	x22, [x8, #48]
    4134:	add	x23, x8, #0x28
    4138:	cmp	x23, x22
    413c:	b.ne	4168 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3544>  // b.any
    4140:	b	410c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x34e8>
    4144:	ldr	x0, [x19]
    4148:	add	x2, sp, #0x90
    414c:	mov	w1, #0x21                  	// #33
    4150:	mov	w3, wzr
    4154:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4158:	ldr	x22, [x22, #8]
    415c:	orr	w21, w21, w27
    4160:	cmp	x23, x22
    4164:	b.eq	410c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x34e8>  // b.none
    4168:	ldrb	w8, [x22]
    416c:	tbnz	w8, #2, 4de4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x41c0>
    4170:	sub	x8, x22, #0x18
    4174:	cmp	x22, #0x0
    4178:	csel	x25, xzr, x8, eq  // eq = none
    417c:	add	x3, sp, #0x90
    4180:	mov	x0, x19
    4184:	mov	x1, x25
    4188:	mov	w2, w24
    418c:	bl	1e42c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE>
    4190:	ldrb	w8, [x22]
    4194:	tbnz	w8, #2, 4de4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x41c0>
    4198:	ldr	x8, [x25]
    419c:	ldrsh	w9, [x25, #18]
    41a0:	add	x0, x25, #0x30
    41a4:	ldrb	w8, [x8, #8]
    41a8:	cmp	w8, #0x0
    41ac:	cinc	w24, w24, ne  // ne = any
    41b0:	cmp	w9, #0x0
    41b4:	cset	w27, lt  // lt = tstop
    41b8:	bl	0 <_ZNK4llvm8DebugLoc3getEv>
    41bc:	cbz	x0, 4158 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3534>
    41c0:	mov	x25, x0
    41c4:	cmp	x0, x28
    41c8:	b.eq	4144 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3520>  // b.none
    41cc:	ldp	w8, w9, [sp, #152]
    41d0:	ldr	w28, [x25, #4]
    41d4:	cmp	w8, w9
    41d8:	b.cs	4388 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3764>  // b.hs, b.nlast
    41dc:	ldr	x9, [sp, #144]
    41e0:	str	w28, [x9, w8, uxtw #2]
    41e4:	ldp	w8, w9, [sp, #152]
    41e8:	cmp	w8, w9
    41ec:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    41f0:	add	w8, w8, #0x1
    41f4:	str	w8, [sp, #152]
    41f8:	ldrh	w28, [x25, #2]
    41fc:	cmp	w8, w9
    4200:	b.cs	43a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3780>  // b.hs, b.nlast
    4204:	ldr	x9, [sp, #144]
    4208:	str	w28, [x9, w8, uxtw #2]
    420c:	ldp	w8, w9, [sp, #152]
    4210:	cmp	w8, w9
    4214:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    4218:	add	w8, w8, #0x1
    421c:	str	w8, [sp, #152]
    4220:	ldr	w10, [x25, #8]
    4224:	cbz	w10, 4e24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4200>
    4228:	sub	x10, x25, x10, lsl #3
    422c:	ldr	x10, [x10]
    4230:	cbz	x10, 4e44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4220>
    4234:	ldrb	w11, [x10]
    4238:	sub	w11, w11, #0x11
    423c:	cmp	w11, #0x3
    4240:	b.cs	4e64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4240>  // b.hs, b.nlast
    4244:	ldr	w12, [x19, #304]
    4248:	cbz	w12, 440c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37e8>
    424c:	orr	x11, x10, #0x4
    4250:	cmn	x11, #0x4
    4254:	b.eq	4e04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x41e0>  // b.none
    4258:	ldr	x11, [x19, #288]
    425c:	ubfx	x13, x10, #4, #28
    4260:	eor	w14, w13, w10, lsr #9
    4264:	sub	w13, w12, #0x1
    4268:	and	w12, w13, w14
    426c:	lsl	x14, x12, #4
    4270:	ldr	x14, [x11, x14]
    4274:	cmp	x14, x10
    4278:	b.ne	43dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37b8>  // b.any
    427c:	add	x10, x11, x12, lsl #4
    4280:	ldr	w28, [x10, #12]
    4284:	cmp	w8, w9
    4288:	b.cs	4418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37f4>  // b.hs, b.nlast
    428c:	ldr	x9, [sp, #144]
    4290:	str	w28, [x9, w8, uxtw #2]
    4294:	ldp	w8, w9, [sp, #152]
    4298:	cmp	w8, w9
    429c:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    42a0:	add	w8, w8, #0x1
    42a4:	str	w8, [sp, #152]
    42a8:	ldr	w10, [x25, #8]
    42ac:	cmp	w10, #0x2
    42b0:	b.ne	42d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36b0>  // b.any
    42b4:	ldur	x10, [x25, #-8]
    42b8:	cbz	x10, 42c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36a4>
    42bc:	ldrb	w11, [x10]
    42c0:	cmp	w11, #0x5
    42c4:	b.ne	4e84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4260>  // b.any
    42c8:	ldr	w12, [x19, #304]
    42cc:	cbnz	w12, 42e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36bc>
    42d0:	b	4464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3840>
    42d4:	mov	x10, xzr
    42d8:	ldr	w12, [x19, #304]
    42dc:	cbz	w12, 4464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3840>
    42e0:	orr	x11, x10, #0x4
    42e4:	cmn	x11, #0x4
    42e8:	b.eq	4e04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x41e0>  // b.none
    42ec:	ldr	x11, [x19, #288]
    42f0:	ubfx	x13, x10, #4, #28
    42f4:	eor	w14, w13, w10, lsr #9
    42f8:	sub	w13, w12, #0x1
    42fc:	and	w12, w14, w13
    4300:	lsl	x14, x12, #4
    4304:	ldr	x14, [x11, x14]
    4308:	cmp	x14, x10
    430c:	b.ne	4434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3810>  // b.any
    4310:	add	x10, x11, x12, lsl #4
    4314:	ldr	w28, [x10, #12]
    4318:	cmp	w8, w9
    431c:	b.cs	4470 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x384c>  // b.hs, b.nlast
    4320:	ldr	x9, [sp, #144]
    4324:	str	w28, [x9, w8, uxtw #2]
    4328:	ldp	w8, w9, [sp, #152]
    432c:	cmp	w8, w9
    4330:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    4334:	add	w8, w8, #0x1
    4338:	str	w8, [sp, #152]
    433c:	ldrb	w10, [x25, #1]
    4340:	cmp	w8, w9
    4344:	lsr	w28, w10, #7
    4348:	b.cs	43c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x379c>  // b.hs, b.nlast
    434c:	ldr	x9, [sp, #144]
    4350:	str	w28, [x9, w8, uxtw #2]
    4354:	ldp	w8, w9, [sp, #152]
    4358:	cmp	w8, w9
    435c:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    4360:	add	w8, w8, #0x1
    4364:	str	w8, [sp, #152]
    4368:	ldr	x0, [x19]
    436c:	add	x2, sp, #0x90
    4370:	mov	w1, #0x23                  	// #35
    4374:	mov	w3, wzr
    4378:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    437c:	mov	x28, x25
    4380:	str	wzr, [sp, #152]
    4384:	b	4158 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3534>
    4388:	ldr	x1, [sp, #32]
    438c:	add	x0, sp, #0x90
    4390:	mov	w3, #0x4                   	// #4
    4394:	mov	x2, xzr
    4398:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    439c:	ldr	w8, [sp, #152]
    43a0:	b	41dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x35b8>
    43a4:	ldr	x1, [sp, #32]
    43a8:	add	x0, sp, #0x90
    43ac:	mov	w3, #0x4                   	// #4
    43b0:	mov	x2, xzr
    43b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    43b8:	ldr	w8, [sp, #152]
    43bc:	b	4204 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x35e0>
    43c0:	ldr	x1, [sp, #32]
    43c4:	add	x0, sp, #0x90
    43c8:	mov	w3, #0x4                   	// #4
    43cc:	mov	x2, xzr
    43d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    43d4:	ldr	w8, [sp, #152]
    43d8:	b	434c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3728>
    43dc:	mov	w15, #0x1                   	// #1
    43e0:	cmn	x14, #0x4
    43e4:	b.eq	440c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37e8>  // b.none
    43e8:	add	w12, w12, w15
    43ec:	and	w12, w12, w13
    43f0:	lsl	x14, x12, #4
    43f4:	ldr	x14, [x11, x14]
    43f8:	add	w15, w15, #0x1
    43fc:	cmp	x14, x10
    4400:	b.ne	43e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x37bc>  // b.any
    4404:	mov	w12, w12
    4408:	b	427c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3658>
    440c:	mov	w28, wzr
    4410:	cmp	w8, w9
    4414:	b.cc	428c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3668>  // b.lo, b.ul, b.last
    4418:	ldr	x1, [sp, #32]
    441c:	add	x0, sp, #0x90
    4420:	mov	w3, #0x4                   	// #4
    4424:	mov	x2, xzr
    4428:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    442c:	ldr	w8, [sp, #152]
    4430:	b	428c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3668>
    4434:	mov	w15, #0x1                   	// #1
    4438:	cmn	x14, #0x4
    443c:	b.eq	4464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3840>  // b.none
    4440:	add	w12, w12, w15
    4444:	and	w12, w12, w13
    4448:	lsl	x14, x12, #4
    444c:	ldr	x14, [x11, x14]
    4450:	add	w15, w15, #0x1
    4454:	cmp	x14, x10
    4458:	b.ne	4438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3814>  // b.any
    445c:	mov	w12, w12
    4460:	b	4310 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36ec>
    4464:	mov	w28, wzr
    4468:	cmp	w8, w9
    446c:	b.cc	4320 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36fc>  // b.lo, b.ul, b.last
    4470:	ldr	x1, [sp, #32]
    4474:	add	x0, sp, #0x90
    4478:	mov	w3, #0x4                   	// #4
    447c:	mov	x2, xzr
    4480:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4484:	ldr	w8, [sp, #152]
    4488:	b	4320 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x36fc>
    448c:	ldp	x23, x8, [sp, #40]
    4490:	ldr	x22, [x8, #104]
    4494:	cbz	x22, 46d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ab4>
    4498:	ldr	w8, [x22, #12]
    449c:	cbz	w8, 46d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ab4>
    44a0:	ldr	x0, [x19]
    44a4:	mov	w1, #0xe                   	// #14
    44a8:	mov	w2, #0x4                   	// #4
    44ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    44b0:	str	x23, [sp, #504]
    44b4:	str	d9, [sp, #512]
    44b8:	ldr	w8, [x22, #8]
    44bc:	ldr	x9, [x22]
    44c0:	cbz	w8, 44ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38c8>
    44c4:	add	x10, x9, #0x8
    44c8:	mov	x22, x9
    44cc:	b	44d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38b4>
    44d0:	mov	x22, x10
    44d4:	add	x10, x10, #0x8
    44d8:	ldur	x11, [x10, #-8]
    44dc:	cbz	x11, 44d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38ac>
    44e0:	cmn	x11, #0x8
    44e4:	b.eq	44d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38ac>  // b.none
    44e8:	b	44f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38cc>
    44ec:	mov	x22, x9
    44f0:	add	x23, x9, x8, lsl #3
    44f4:	cmp	x23, x22
    44f8:	b.eq	46bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a98>  // b.none
    44fc:	ldr	x27, [x22]
    4500:	mov	x26, x27
    4504:	ldr	x8, [x26], #16
    4508:	cbz	x8, 4574 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3950>
    450c:	mov	w10, #0x1                   	// #1
    4510:	mov	x9, x26
    4514:	b	4530 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x390c>
    4518:	mov	w10, wzr
    451c:	sxtb	w11, w11
    4520:	tbnz	w11, #31, 4580 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x395c>
    4524:	subs	x8, x8, #0x1
    4528:	add	x9, x9, #0x1
    452c:	b.eq	4578 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3954>  // b.none
    4530:	ldrb	w11, [x9]
    4534:	tbz	w10, #0, 4518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38f4>
    4538:	sub	w10, w11, #0x30
    453c:	cmp	w10, #0xa
    4540:	mov	w10, #0x1                   	// #1
    4544:	b.cc	451c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38f8>  // b.lo, b.ul, b.last
    4548:	and	w12, w11, #0xffffffdf
    454c:	sub	w12, w12, #0x41
    4550:	and	w12, w12, #0xff
    4554:	cmp	w12, #0x1a
    4558:	b.cc	451c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38f8>  // b.lo, b.ul, b.last
    455c:	cmp	w11, #0x2e
    4560:	mov	w10, #0x1                   	// #1
    4564:	b.eq	4524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3900>  // b.none
    4568:	cmp	w11, #0x5f
    456c:	b.eq	4524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3900>  // b.none
    4570:	b	4518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38f4>
    4574:	mov	w10, #0x1                   	// #1
    4578:	eor	w24, w10, #0x1
    457c:	b	4584 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3960>
    4580:	mov	w24, #0x2                   	// #2
    4584:	ldr	x1, [x27, #8]
    4588:	mov	x0, x20
    458c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    4590:	ldr	w8, [sp, #512]
    4594:	ldr	w9, [sp, #516]
    4598:	mov	w25, w0
    459c:	cmp	w8, w9
    45a0:	b.cs	46a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a7c>  // b.hs, b.nlast
    45a4:	ldr	x9, [sp, #504]
    45a8:	str	x25, [x9, w8, uxtw #3]
    45ac:	ldr	w9, [sp, #512]
    45b0:	ldr	w8, [sp, #516]
    45b4:	cmp	w9, w8
    45b8:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    45bc:	add	w9, w9, #0x1
    45c0:	str	w9, [sp, #512]
    45c4:	ldr	x10, [x27, #8]
    45c8:	cbz	x10, 4f04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x42e0>
    45cc:	ldrb	w10, [x10, #16]
    45d0:	cmp	w10, #0x12
    45d4:	b.ne	45f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x39d4>  // b.any
    45d8:	cmp	w24, #0x0
    45dc:	mov	w10, #0x4                   	// #4
    45e0:	mov	w11, #0x7                   	// #7
    45e4:	csel	w24, w11, w10, eq  // eq = none
    45e8:	mov	w25, #0x2                   	// #2
    45ec:	ldr	x27, [x27]
    45f0:	cbnz	x27, 463c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a18>
    45f4:	b	4674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a50>
    45f8:	cbz	w24, 460c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x39e8>
    45fc:	cmp	w24, #0x1
    4600:	mov	w10, #0x4                   	// #4
    4604:	cinc	w24, w10, eq  // eq = none
    4608:	b	4610 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x39ec>
    460c:	mov	w24, #0x6                   	// #6
    4610:	mov	w25, #0x1                   	// #1
    4614:	ldr	x27, [x27]
    4618:	cbnz	x27, 463c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a18>
    461c:	b	4674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a50>
    4620:	ldr	x1, [sp, #40]
    4624:	add	x0, sp, #0x1f8
    4628:	mov	w3, #0x8                   	// #8
    462c:	mov	x2, xzr
    4630:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4634:	ldr	w9, [sp, #512]
    4638:	b	4648 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a24>
    463c:	ldrb	w28, [x26]
    4640:	cmp	w9, w8
    4644:	b.cs	4620 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x39fc>  // b.hs, b.nlast
    4648:	ldr	x8, [sp, #504]
    464c:	str	x28, [x8, w9, uxtw #3]
    4650:	ldr	w9, [sp, #512]
    4654:	ldr	w8, [sp, #516]
    4658:	cmp	w9, w8
    465c:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    4660:	add	w9, w9, #0x1
    4664:	subs	x27, x27, #0x1
    4668:	add	x26, x26, #0x1
    466c:	str	w9, [sp, #512]
    4670:	b.ne	463c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a18>  // b.any
    4674:	ldr	x0, [x19]
    4678:	add	x2, sp, #0x1f8
    467c:	mov	w1, w25
    4680:	mov	w3, w24
    4684:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4688:	str	wzr, [sp, #512]
    468c:	ldr	x8, [x22, #8]!
    4690:	cbz	x8, 468c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a68>
    4694:	cmn	x8, #0x8
    4698:	b.eq	468c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3a68>  // b.none
    469c:	b	44f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x38d0>
    46a0:	ldr	x1, [sp, #40]
    46a4:	add	x0, sp, #0x1f8
    46a8:	mov	w3, #0x8                   	// #8
    46ac:	mov	x2, xzr
    46b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    46b4:	ldr	w8, [sp, #512]
    46b8:	b	45a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3980>
    46bc:	ldr	x0, [x19]
    46c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    46c4:	ldr	x0, [sp, #504]
    46c8:	ldr	x23, [sp, #40]
    46cc:	cmp	x0, x23
    46d0:	b.eq	46d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ab4>  // b.none
    46d4:	bl	0 <free>
    46d8:	ldr	x22, [sp, #48]
    46dc:	tbz	w21, #0, 4940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d1c>
    46e0:	ldr	x0, [x19]
    46e4:	mov	w1, #0x10                  	// #16
    46e8:	mov	w2, #0x3                   	// #3
    46ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    46f0:	str	x23, [sp, #504]
    46f4:	str	d9, [sp, #512]
    46f8:	ldrb	w8, [x22, #34]
    46fc:	tbz	w8, #5, 4728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b04>
    4700:	add	x1, sp, #0x1f8
    4704:	mov	x0, x19
    4708:	mov	x2, x22
    470c:	bl	1e2d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>
    4710:	ldr	x0, [x19]
    4714:	add	x2, sp, #0x1f8
    4718:	mov	w1, #0xb                   	// #11
    471c:	mov	w3, wzr
    4720:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4724:	str	wzr, [sp, #512]
    4728:	ldr	x8, [sp, #8]
    472c:	str	d11, [sp, #424]
    4730:	str	x8, [sp, #416]
    4734:	ldr	x21, [x22, #80]
    4738:	b	4740 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b1c>
    473c:	ldr	x21, [x21, #8]
    4740:	ldr	x8, [sp, #56]
    4744:	cmp	x8, x21
    4748:	b.eq	4910 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3cec>  // b.none
    474c:	ldrb	w8, [x21]
    4750:	tbnz	w8, #2, 4ea4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4280>
    4754:	sub	x8, x21, #0x18
    4758:	cmp	x21, #0x0
    475c:	csel	x8, xzr, x8, eq  // eq = none
    4760:	ldr	x22, [x8, #48]
    4764:	add	x23, x8, #0x28
    4768:	b	4788 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b64>
    476c:	ldr	x0, [x19]
    4770:	add	x2, sp, #0x1f8
    4774:	mov	w1, #0xb                   	// #11
    4778:	mov	w3, wzr
    477c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4780:	str	wzr, [sp, #512]
    4784:	ldr	x22, [x22, #8]
    4788:	cmp	x23, x22
    478c:	b.eq	473c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b18>  // b.none
    4790:	ldrb	w8, [x22]
    4794:	tbnz	w8, #2, 4de4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x41c0>
    4798:	sub	x8, x22, #0x18
    479c:	cmp	x22, #0x0
    47a0:	csel	x24, xzr, x8, eq  // eq = none
    47a4:	str	wzr, [sp, #424]
    47a8:	ldrsh	w8, [x24, #18]
    47ac:	tbz	w8, #31, 4784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b60>
    47b0:	add	x1, sp, #0x1a0
    47b4:	mov	x0, x24
    47b8:	bl	0 <_ZNK4llvm11Instruction35getAllMetadataOtherThanDebugLocImplERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
    47bc:	ldr	w8, [sp, #424]
    47c0:	cbz	w8, 4784 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b60>
    47c4:	mov	x0, x20
    47c8:	mov	x1, x24
    47cc:	bl	0 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE>
    47d0:	ldr	w8, [sp, #512]
    47d4:	ldr	w9, [sp, #516]
    47d8:	mov	w24, w0
    47dc:	cmp	w8, w9
    47e0:	b.cs	48f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3cd0>  // b.hs, b.nlast
    47e4:	ldr	x9, [sp, #504]
    47e8:	str	x24, [x9, w8, uxtw #3]
    47ec:	ldr	w9, [sp, #512]
    47f0:	ldr	w8, [sp, #516]
    47f4:	cmp	w9, w8
    47f8:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    47fc:	ldr	w10, [sp, #424]
    4800:	add	w9, w9, #0x1
    4804:	str	w9, [sp, #512]
    4808:	cbz	w10, 476c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b48>
    480c:	mov	x24, xzr
    4810:	mov	x25, xzr
    4814:	sub	x26, x10, #0x1
    4818:	ldr	x10, [sp, #416]
    481c:	cmp	w9, w8
    4820:	ldr	w27, [x10, x24]
    4824:	b.cs	48bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c98>  // b.hs, b.nlast
    4828:	ldr	x8, [sp, #504]
    482c:	str	x27, [x8, w9, uxtw #3]
    4830:	ldr	w8, [sp, #512]
    4834:	ldr	w9, [sp, #516]
    4838:	cmp	w8, w9
    483c:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    4840:	ldr	w9, [sp, #424]
    4844:	add	w8, w8, #0x1
    4848:	str	w8, [sp, #512]
    484c:	cmp	x25, x9
    4850:	b.cs	4dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x41a0>  // b.hs, b.nlast
    4854:	ldr	x8, [sp, #416]
    4858:	mov	x0, x20
    485c:	add	x8, x8, x24
    4860:	ldr	x1, [x8, #8]
    4864:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4868:	ldr	w8, [sp, #512]
    486c:	ldr	w9, [sp, #516]
    4870:	mov	w27, w0
    4874:	cmp	w8, w9
    4878:	b.cs	48d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3cb4>  // b.hs, b.nlast
    487c:	ldr	x9, [sp, #504]
    4880:	str	x27, [x9, w8, uxtw #3]
    4884:	ldr	w9, [sp, #512]
    4888:	ldr	w8, [sp, #516]
    488c:	cmp	w9, w8
    4890:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    4894:	add	w9, w9, #0x1
    4898:	cmp	x26, x25
    489c:	str	w9, [sp, #512]
    48a0:	b.eq	476c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3b48>  // b.none
    48a4:	ldr	w10, [sp, #424]
    48a8:	add	x25, x25, #0x1
    48ac:	add	x24, x24, #0x10
    48b0:	cmp	x25, x10
    48b4:	b.cc	4818 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3bf4>  // b.lo, b.ul, b.last
    48b8:	b	4dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x41a0>
    48bc:	ldr	x1, [sp, #40]
    48c0:	add	x0, sp, #0x1f8
    48c4:	mov	w3, #0x8                   	// #8
    48c8:	mov	x2, xzr
    48cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    48d0:	ldr	w9, [sp, #512]
    48d4:	b	4828 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c04>
    48d8:	ldr	x1, [sp, #40]
    48dc:	add	x0, sp, #0x1f8
    48e0:	mov	w3, #0x8                   	// #8
    48e4:	mov	x2, xzr
    48e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    48ec:	ldr	w8, [sp, #512]
    48f0:	b	487c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3c58>
    48f4:	ldr	x1, [sp, #40]
    48f8:	add	x0, sp, #0x1f8
    48fc:	mov	w3, #0x8                   	// #8
    4900:	mov	x2, xzr
    4904:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4908:	ldr	w8, [sp, #512]
    490c:	b	47e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3bc0>
    4910:	ldr	x0, [x19]
    4914:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4918:	ldr	x0, [sp, #416]
    491c:	ldr	x8, [sp, #8]
    4920:	cmp	x0, x8
    4924:	b.eq	492c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d08>  // b.none
    4928:	bl	0 <free>
    492c:	ldr	x0, [sp, #504]
    4930:	ldp	x23, x22, [sp, #40]
    4934:	cmp	x0, x23
    4938:	b.eq	4940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d1c>  // b.none
    493c:	bl	0 <free>
    4940:	ldrb	w8, [x19, #344]
    4944:	cbz	w8, 4954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d30>
    4948:	mov	x0, x19
    494c:	mov	x1, x22
    4950:	bl	e090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE>
    4954:	mov	x0, x20
    4958:	bl	0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv>
    495c:	ldr	x0, [x19]
    4960:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4964:	ldr	x0, [sp, #144]
    4968:	ldr	x8, [sp, #32]
    496c:	ldr	x21, [sp, #16]
    4970:	cmp	x0, x8
    4974:	b.eq	3f70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x334c>  // b.none
    4978:	bl	0 <free>
    497c:	b	3f70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x334c>
    4980:	ldr	x8, [x19, #584]
    4984:	cbz	x8, 4990 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3d6c>
    4988:	mov	x0, x19
    498c:	bl	e36c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv>
    4990:	ldr	x0, [x19]
    4994:	ldr	x10, [x19, #792]
    4998:	ldr	x8, [x0]
    499c:	ldr	w9, [x0, #8]
    49a0:	ldr	w8, [x8, #8]
    49a4:	add	x8, x9, x8, lsl #3
    49a8:	sub	x8, x8, x10
    49ac:	tst	x8, #0x1f
    49b0:	b.ne	511c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x44f8>  // b.any
    49b4:	ldr	x1, [x19, #648]
    49b8:	lsr	x8, x8, #5
    49bc:	add	w2, w8, #0x1
    49c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    49c4:	ldr	x0, [x19]
    49c8:	mov	w1, #0xe                   	// #14
    49cc:	mov	w2, #0x4                   	// #4
    49d0:	mov	w22, #0x4                   	// #4
    49d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    49d8:	mov	w0, #0x220                 	// #544
    49dc:	bl	0 <_Znwm>
    49e0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    49e4:	ldr	x8, [x8]
    49e8:	movi	v0.2s, #0x1
    49ec:	str	d0, [x0, #8]
    49f0:	movi	v0.2d, #0x0
    49f4:	add	x8, x8, #0x10
    49f8:	mov	x9, x0
    49fc:	mov	x21, x0
    4a00:	mov	w10, #0x3                   	// #3
    4a04:	str	x8, [x0]
    4a08:	stp	q0, q0, [x0, #48]
    4a0c:	stp	q0, q0, [x0, #80]
    4a10:	stp	q0, q0, [x0, #112]
    4a14:	stp	q0, q0, [x0, #144]
    4a18:	stp	q0, q0, [x0, #176]
    4a1c:	stp	q0, q0, [x0, #208]
    4a20:	stp	q0, q0, [x0, #240]
    4a24:	stp	q0, q0, [x0, #272]
    4a28:	stp	q0, q0, [x0, #304]
    4a2c:	stp	q0, q0, [x0, #336]
    4a30:	stp	q0, q0, [x0, #368]
    4a34:	stp	q0, q0, [x0, #400]
    4a38:	stp	q0, q0, [x0, #432]
    4a3c:	stp	q0, q0, [x0, #464]
    4a40:	stp	q0, q0, [x0, #496]
    4a44:	str	q0, [x9, #32]!
    4a48:	mov	w8, #0x8                   	// #8
    4a4c:	str	q0, [x0, #528]
    4a50:	str	x9, [x21, #16]!
    4a54:	str	x10, [x9]
    4a58:	str	d8, [x0, #24]
    4a5c:	mov	w11, #0xff                  	// #255
    4a60:	str	x8, [x0, #48]
    4a64:	str	x8, [x0, #64]
    4a68:	ldp	w8, w10, [x0, #24]
    4a6c:	ldur	w9, [sp, #147]
    4a70:	strb	w11, [x0, #40]
    4a74:	ldr	w11, [sp, #144]
    4a78:	cmp	w8, w10
    4a7c:	strb	w22, [x0, #56]
    4a80:	strb	w22, [x0, #72]
    4a84:	str	w9, [x0, #76]
    4a88:	stur	w11, [x0, #73]
    4a8c:	b.cs	4da4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4180>  // b.hs, b.nlast
    4a90:	add	w8, w8, #0x1
    4a94:	str	w8, [x0, #24]
    4a98:	ldr	x23, [x19]
    4a9c:	stp	x21, x0, [sp, #504]
    4aa0:	mov	x1, x21
    4aa4:	mov	x0, x23
    4aa8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4aac:	ldp	x1, x8, [x23, #32]
    4ab0:	add	x22, x23, #0x18
    4ab4:	cmp	x1, x8
    4ab8:	b.eq	4ad8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3eb4>  // b.none
    4abc:	stp	x21, xzr, [x1]
    4ac0:	ldr	x8, [sp, #512]
    4ac4:	add	x24, x1, #0x10
    4ac8:	stp	xzr, xzr, [sp, #504]
    4acc:	str	x8, [x1, #8]
    4ad0:	str	x24, [x23, #32]
    4ad4:	b	4ae8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ec4>
    4ad8:	add	x2, sp, #0x1f8
    4adc:	mov	x0, x22
    4ae0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4ae4:	ldr	x24, [x23, #32]
    4ae8:	ldr	x21, [sp, #512]
    4aec:	ldr	x22, [x22]
    4af0:	cbz	x21, 4b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f58>
    4af4:	adrp	x9, 0 <__pthread_key_create>
    4af8:	ldr	x9, [x9]
    4afc:	add	x8, x21, #0x8
    4b00:	cbz	x9, 4b20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3efc>
    4b04:	ldaxr	w9, [x8]
    4b08:	sub	w10, w9, #0x1
    4b0c:	stlxr	w11, w10, [x8]
    4b10:	cbnz	w11, 4b04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3ee0>
    4b14:	cmp	w9, #0x1
    4b18:	b.eq	4b34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f10>  // b.none
    4b1c:	b	4b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f58>
    4b20:	ldr	w9, [x8]
    4b24:	sub	w10, w9, #0x1
    4b28:	str	w10, [x8]
    4b2c:	cmp	w9, #0x1
    4b30:	b.ne	4b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f58>  // b.any
    4b34:	mov	x23, x21
    4b38:	ldr	x8, [x23], #12
    4b3c:	mov	x0, x21
    4b40:	ldr	x8, [x8, #16]
    4b44:	blr	x8
    4b48:	adrp	x8, 0 <__pthread_key_create>
    4b4c:	ldr	x8, [x8]
    4b50:	cbz	x8, 4d10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x40ec>
    4b54:	ldaxr	w8, [x23]
    4b58:	sub	w9, w8, #0x1
    4b5c:	stlxr	w10, w9, [x23]
    4b60:	cbnz	w10, 4b54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f30>
    4b64:	cmp	w8, #0x1
    4b68:	b.ne	4b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f58>  // b.any
    4b6c:	ldr	x8, [x21]
    4b70:	mov	x0, x21
    4b74:	ldr	x8, [x8, #24]
    4b78:	blr	x8
    4b7c:	ldr	x8, [x19, #16]
    4b80:	ldr	x23, [x8, #32]
    4b84:	add	x25, x8, #0x18
    4b88:	cmp	x25, x23
    4b8c:	b.eq	4c28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4004>  // b.none
    4b90:	sub	x8, x24, x22
    4b94:	lsr	x8, x8, #4
    4b98:	add	w21, w8, #0x3
    4b9c:	b	4bac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f88>
    4ba0:	ldr	x23, [x23, #8]
    4ba4:	cmp	x25, x23
    4ba8:	b.eq	4c28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4004>  // b.none
    4bac:	ldrb	w8, [x23]
    4bb0:	tbnz	w8, #2, 4f24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4300>
    4bb4:	sub	x8, x23, #0x38
    4bb8:	cmp	x23, #0x0
    4bbc:	csel	x22, xzr, x8, eq  // eq = none
    4bc0:	mov	x0, x22
    4bc4:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    4bc8:	tbnz	w0, #0, 4ba0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f7c>
    4bcc:	mov	x0, x20
    4bd0:	mov	x1, x22
    4bd4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    4bd8:	mov	w8, w0
    4bdc:	add	x0, sp, #0x40
    4be0:	add	x1, sp, #0x1a0
    4be4:	str	x8, [sp, #144]
    4be8:	str	x22, [sp, #416]
    4bec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4bf0:	ldr	x8, [x0]
    4bf4:	ldr	x9, [x19, #792]
    4bf8:	sub	x8, x8, x9
    4bfc:	tst	x8, #0x1f
    4c00:	b.ne	501c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x43f8>  // b.any
    4c04:	lsr	x8, x8, #5
    4c08:	add	x8, x8, #0x1
    4c0c:	str	x8, [sp, #152]
    4c10:	ldr	x0, [x19]
    4c14:	add	x2, sp, #0x90
    4c18:	mov	w1, #0x3                   	// #3
    4c1c:	mov	w3, w21
    4c20:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4c24:	b	4ba0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f7c>
    4c28:	ldr	x0, [x19]
    4c2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4c30:	ldrb	w8, [x19, #664]
    4c34:	cbz	w8, 4cd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x40b4>
    4c38:	ldr	x9, [x19, #656]
    4c3c:	ldr	x10, [sp]
    4c40:	ldr	w8, [x9, #8]
    4c44:	cmp	w8, w10
    4c48:	b.ls	5148 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x4524>  // b.plast
    4c4c:	ldr	x9, [x9]
    4c50:	add	x20, x19, #0x2a8
    4c54:	sub	x2, x8, x10
    4c58:	mov	x0, x20
    4c5c:	add	x1, x9, x10
    4c60:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    4c64:	mov	x0, x20
    4c68:	bl	0 <_ZN4llvm4SHA16resultEv>
    4c6c:	ldr	w8, [x0]
    4c70:	add	x2, sp, #0x1f8
    4c74:	mov	w1, #0x11                  	// #17
    4c78:	mov	w3, wzr
    4c7c:	rev	w8, w8
    4c80:	str	w8, [sp, #504]
    4c84:	ldr	w8, [x0, #4]
    4c88:	rev	w8, w8
    4c8c:	str	w8, [sp, #508]
    4c90:	ldr	w8, [x0, #8]
    4c94:	rev	w8, w8
    4c98:	str	w8, [sp, #512]
    4c9c:	ldr	w8, [x0, #12]
    4ca0:	rev	w8, w8
    4ca4:	str	w8, [sp, #516]
    4ca8:	ldr	w8, [x0, #16]
    4cac:	rev	w8, w8
    4cb0:	str	w8, [sp, #520]
    4cb4:	ldr	x0, [x19]
    4cb8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4cbc:	ldr	x8, [x19, #672]
    4cc0:	cbz	x8, 4cd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x40b4>
    4cc4:	add	x10, sp, #0xf9
    4cc8:	ldr	w9, [sp, #520]
    4ccc:	ldur	q0, [x10, #255]
    4cd0:	str	w9, [x8, #16]
    4cd4:	str	q0, [x8]
    4cd8:	ldr	x0, [x19]
    4cdc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4ce0:	ldr	x0, [sp, #72]
    4ce4:	bl	0 <_ZdlPv>
    4ce8:	add	sp, sp, #0x410
    4cec:	ldp	x20, x19, [sp, #112]
    4cf0:	ldp	x22, x21, [sp, #96]
    4cf4:	ldp	x24, x23, [sp, #80]
    4cf8:	ldp	x26, x25, [sp, #64]
    4cfc:	ldp	x28, x27, [sp, #48]
    4d00:	ldp	x29, x30, [sp, #32]
    4d04:	ldp	d9, d8, [sp, #16]
    4d08:	ldp	d11, d10, [sp], #128
    4d0c:	ret
    4d10:	ldr	w8, [x23]
    4d14:	sub	w9, w8, #0x1
    4d18:	str	w9, [x23]
    4d1c:	cmp	w8, #0x1
    4d20:	b.eq	4b6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f48>  // b.none
    4d24:	b	4b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x3f58>
    4d28:	ldr	w8, [x24]
    4d2c:	sub	w9, w8, #0x1
    4d30:	str	w9, [x24]
    4d34:	cmp	w8, #0x1
    4d38:	b.eq	393c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d18>  // b.none
    4d3c:	b	394c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x2d28>
    4d40:	mov	w3, #0x10                  	// #16
    4d44:	mov	x0, x24
    4d48:	mov	x2, xzr
    4d4c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4d50:	ldr	w8, [x23, #24]
    4d54:	b	12bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x698>
    4d58:	mov	w3, #0x10                  	// #16
    4d5c:	mov	x0, x24
    4d60:	mov	x2, xzr
    4d64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4d68:	ldr	w8, [x23, #24]
    4d6c:	b	14c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0x89c>
    4d70:	mov	w3, #0x10                  	// #16
    4d74:	mov	x0, x24
    4d78:	mov	x2, xzr
    4d7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4d80:	ldr	w8, [x23, #24]
    4d84:	b	186c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xc48>
    4d88:	ldr	x1, [sp, #8]
    4d8c:	add	x0, sp, #0x1f8
    4d90:	mov	w3, #0x8                   	// #8
    4d94:	mov	x2, xzr
    4d98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4d9c:	ldr	w8, [sp, #512]
    4da0:	b	1b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter5writeEv+0xf3c>
    4da4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4da8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4dac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4db0:	add	x0, x0, #0x0
    4db4:	add	x1, x1, #0x0
    4db8:	add	x3, x3, #0x0
    4dbc:	mov	w2, #0x43                  	// #67
    4dc0:	bl	0 <__assert_fail>
    4dc4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4dc8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4dcc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4dd0:	add	x0, x0, #0x0
    4dd4:	add	x1, x1, #0x0
    4dd8:	add	x3, x3, #0x0
    4ddc:	mov	w2, #0x95                  	// #149
    4de0:	bl	0 <__assert_fail>
    4de4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4de8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4dec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4df0:	add	x0, x0, #0x0
    4df4:	add	x1, x1, #0x0
    4df8:	add	x3, x3, #0x0
    4dfc:	mov	w2, #0x8b                  	// #139
    4e00:	bl	0 <__assert_fail>
    4e04:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e08:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e0c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e10:	add	x0, x0, #0x0
    4e14:	add	x1, x1, #0x0
    4e18:	add	x3, x3, #0x0
    4e1c:	mov	w2, #0x252                 	// #594
    4e20:	bl	0 <__assert_fail>
    4e24:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e28:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e2c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e30:	add	x0, x0, #0x0
    4e34:	add	x1, x1, #0x0
    4e38:	add	x3, x3, #0x0
    4e3c:	mov	w2, #0x436                 	// #1078
    4e40:	bl	0 <__assert_fail>
    4e44:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e48:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e4c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e50:	add	x0, x0, #0x0
    4e54:	add	x1, x1, #0x0
    4e58:	add	x3, x3, #0x0
    4e5c:	mov	w2, #0x69                  	// #105
    4e60:	bl	0 <__assert_fail>
    4e64:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e68:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e6c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e70:	add	x0, x0, #0x0
    4e74:	add	x1, x1, #0x0
    4e78:	add	x3, x3, #0x0
    4e7c:	mov	w2, #0x108                 	// #264
    4e80:	bl	0 <__assert_fail>
    4e84:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e88:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e8c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4e90:	add	x0, x0, #0x0
    4e94:	add	x1, x1, #0x0
    4e98:	add	x3, x3, #0x0
    4e9c:	mov	w2, #0x134                 	// #308
    4ea0:	bl	0 <__assert_fail>
    4ea4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4ea8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4eac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4eb0:	add	x0, x0, #0x0
    4eb4:	add	x1, x1, #0x0
    4eb8:	add	x3, x3, #0x0
    4ebc:	mov	w2, #0x8b                  	// #139
    4ec0:	bl	0 <__assert_fail>
    4ec4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4ec8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4ecc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4ed0:	add	x0, x0, #0x0
    4ed4:	add	x1, x1, #0x0
    4ed8:	add	x3, x3, #0x0
    4edc:	mov	w2, #0xbb                  	// #187
    4ee0:	bl	0 <__assert_fail>
    4ee4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4ee8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4eec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4ef0:	add	x0, x0, #0x0
    4ef4:	add	x1, x1, #0x0
    4ef8:	add	x3, x3, #0x0
    4efc:	mov	w2, #0x252                 	// #594
    4f00:	bl	0 <__assert_fail>
    4f04:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f08:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f0c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f10:	add	x0, x0, #0x0
    4f14:	add	x1, x1, #0x0
    4f18:	add	x3, x3, #0x0
    4f1c:	mov	w2, #0x69                  	// #105
    4f20:	bl	0 <__assert_fail>
    4f24:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f28:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f2c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f30:	add	x0, x0, #0x0
    4f34:	add	x1, x1, #0x0
    4f38:	add	x3, x3, #0x0
    4f3c:	mov	w2, #0x8b                  	// #139
    4f40:	bl	0 <__assert_fail>
    4f44:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f48:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f4c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f50:	add	x0, x0, #0x0
    4f54:	add	x1, x1, #0x0
    4f58:	add	x3, x3, #0x0
    4f5c:	mov	w2, #0xa9                  	// #169
    4f60:	bl	0 <__assert_fail>
    4f64:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f68:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f6c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f70:	add	x0, x0, #0x0
    4f74:	add	x1, x1, #0x0
    4f78:	add	x3, x3, #0x0
    4f7c:	mov	w2, #0x304                 	// #772
    4f80:	bl	0 <__assert_fail>
    4f84:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f88:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4f8c:	add	x0, x0, #0x0
    4f90:	add	x1, x1, #0x0
    4f94:	mov	w2, #0x435                 	// #1077
    4f98:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    4f9c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fa0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fa4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fa8:	add	x0, x0, #0x0
    4fac:	add	x1, x1, #0x0
    4fb0:	add	x3, x3, #0x0
    4fb4:	mov	w2, #0x8b                  	// #139
    4fb8:	bl	0 <__assert_fail>
    4fbc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fc0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fc4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fc8:	add	x0, x0, #0x0
    4fcc:	add	x1, x1, #0x0
    4fd0:	add	x3, x3, #0x0
    4fd4:	mov	w2, #0x69                  	// #105
    4fd8:	bl	0 <__assert_fail>
    4fdc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fe0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fe4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    4fe8:	add	x0, x0, #0x0
    4fec:	add	x1, x1, #0x0
    4ff0:	add	x3, x3, #0x0
    4ff4:	mov	w2, #0x95                  	// #149
    4ff8:	bl	0 <__assert_fail>
    4ffc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5000:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5004:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5008:	add	x0, x0, #0x0
    500c:	add	x1, x1, #0x0
    5010:	add	x3, x3, #0x0
    5014:	mov	w2, #0x8b                  	// #139
    5018:	bl	0 <__assert_fail>
    501c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5020:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5024:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5028:	add	x0, x0, #0x0
    502c:	add	x1, x1, #0x0
    5030:	add	x3, x3, #0x0
    5034:	mov	w2, #0xc0a                 	// #3082
    5038:	bl	0 <__assert_fail>
    503c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5040:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5044:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5048:	add	x0, x0, #0x0
    504c:	add	x1, x1, #0x0
    5050:	add	x3, x3, #0x0
    5054:	mov	w2, #0xbd                  	// #189
    5058:	bl	0 <__assert_fail>
    505c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5060:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5064:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5068:	add	x0, x0, #0x0
    506c:	add	x1, x1, #0x0
    5070:	add	x3, x3, #0x0
    5074:	mov	w2, #0x69                  	// #105
    5078:	bl	0 <__assert_fail>
    507c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5080:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5084:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5088:	add	x0, x0, #0x0
    508c:	add	x1, x1, #0x0
    5090:	add	x3, x3, #0x0
    5094:	mov	w2, #0x69                  	// #105
    5098:	bl	0 <__assert_fail>
    509c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50a0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50a4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50a8:	add	x0, x0, #0x0
    50ac:	add	x1, x1, #0x0
    50b0:	add	x3, x3, #0x0
    50b4:	mov	w2, #0x69                  	// #105
    50b8:	bl	0 <__assert_fail>
    50bc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50c0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50c4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50c8:	add	x0, x0, #0x0
    50cc:	add	x1, x1, #0x0
    50d0:	add	x3, x3, #0x0
    50d4:	mov	w2, #0x69                  	// #105
    50d8:	bl	0 <__assert_fail>
    50dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    50e8:	add	x0, x0, #0x0
    50ec:	add	x1, x1, #0x0
    50f0:	add	x3, x3, #0x0
    50f4:	mov	w2, #0x69                  	// #105
    50f8:	bl	0 <__assert_fail>
    50fc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5100:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5104:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5108:	add	x0, x0, #0x0
    510c:	add	x1, x1, #0x0
    5110:	add	x3, x3, #0x0
    5114:	mov	w2, #0x69                  	// #105
    5118:	bl	0 <__assert_fail>
    511c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5120:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5124:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5128:	add	x0, x0, #0x0
    512c:	add	x1, x1, #0x0
    5130:	add	x3, x3, #0x0
    5134:	mov	w2, #0xbf1                 	// #3057
    5138:	bl	0 <__assert_fail>
    513c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5140:	add	x0, x0, #0x0
    5144:	bl	0 <_ZSt20__throw_length_errorPKc>
    5148:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    514c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5150:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5154:	add	x0, x0, #0x0
    5158:	add	x1, x1, #0x0
    515c:	add	x3, x3, #0x0
    5160:	mov	w2, #0x99                  	// #153
    5164:	bl	0 <__assert_fail>

0000000000005168 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE>:
    5168:	str	d8, [sp, #-96]!
    516c:	stp	x29, x30, [sp, #16]
    5170:	stp	x28, x25, [sp, #32]
    5174:	stp	x24, x23, [sp, #48]
    5178:	stp	x22, x21, [sp, #64]
    517c:	stp	x20, x19, [sp, #80]
    5180:	mov	x29, sp
    5184:	sub	sp, sp, #0x210
    5188:	ldr	x8, [x0, #8]
    518c:	add	x10, sp, #0x8
    5190:	add	x9, x0, #0x10
    5194:	add	x19, x10, #0x20
    5198:	add	x10, x10, #0x28
    519c:	stp	x1, x2, [sp, #24]
    51a0:	str	wzr, [sp, #48]
    51a4:	stp	xzr, x10, [sp, #56]
    51a8:	stp	x10, xzr, [sp, #72]
    51ac:	stp	x8, x9, [sp, #8]
    51b0:	str	wzr, [sp, #88]
    51b4:	cbz	x2, 52dc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x174>
    51b8:	ldr	x20, [x2, #24]
    51bc:	add	x21, x2, #0x8
    51c0:	cmp	x20, x21
    51c4:	b.ne	51e0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x78>  // b.any
    51c8:	b	52ec <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x184>
    51cc:	mov	x0, x20
    51d0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    51d4:	mov	x20, x0
    51d8:	cmp	x0, x21
    51dc:	b.eq	52ec <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x184>  // b.none
    51e0:	ldr	w8, [x20, #80]
    51e4:	cbz	w8, 51cc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>
    51e8:	ldr	w8, [x20, #88]
    51ec:	ldp	x23, x22, [x20, #64]
    51f0:	add	x24, x22, x8, lsl #4
    51f4:	cbz	w8, 521c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb4>
    51f8:	lsl	x9, x8, #4
    51fc:	add	x8, x9, x22
    5200:	ldr	x10, [x22]
    5204:	cmn	x10, #0x2
    5208:	b.cc	521c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb4>  // b.lo, b.ul, b.last
    520c:	subs	x9, x9, #0x10
    5210:	add	x22, x22, #0x10
    5214:	b.ne	5200 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x98>  // b.any
    5218:	mov	x22, x8
    521c:	cmp	x22, x24
    5220:	b.eq	51cc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>  // b.none
    5224:	ldr	x8, [x22]
    5228:	ldr	w10, [sp, #88]
    522c:	ldr	x9, [x22, #8]
    5230:	add	x1, sp, #0x90
    5234:	mov	x0, x19
    5238:	add	w25, w10, #0x1
    523c:	stp	x8, x9, [sp, #144]
    5240:	str	w25, [sp, #88]
    5244:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5248:	str	w25, [x0]
    524c:	ldr	x8, [x22, #8]
    5250:	cbz	x8, 5c60 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xaf8>
    5254:	ldr	w9, [x8, #8]
    5258:	cbnz	w9, 5298 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x130>
    525c:	ldr	x9, [x8, #64]
    5260:	cmp	x9, #0x7
    5264:	b.ls	5c80 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb18>  // b.plast
    5268:	ldr	x8, [x8, #72]
    526c:	cbz	x8, 5ca0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb38>
    5270:	and	x9, x9, #0xfffffffffffffff8
    5274:	ldr	w10, [sp, #88]
    5278:	ldr	x9, [x9]
    527c:	add	x1, sp, #0x90
    5280:	mov	x0, x19
    5284:	add	w25, w10, #0x1
    5288:	stp	x9, x8, [sp, #144]
    528c:	str	w25, [sp, #88]
    5290:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5294:	str	w25, [x0]
    5298:	ldr	x8, [x20, #64]
    529c:	cmp	x8, x23
    52a0:	b.ne	5cc0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb58>  // b.any
    52a4:	add	x22, x22, #0x10
    52a8:	cmp	x22, x24
    52ac:	b.hi	5ce0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb78>  // b.pmore
    52b0:	b.eq	51cc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>  // b.none
    52b4:	ldr	x8, [x22]
    52b8:	cmn	x8, #0x2
    52bc:	b.cc	52d0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x168>  // b.lo, b.ul, b.last
    52c0:	add	x22, x22, #0x10
    52c4:	cmp	x24, x22
    52c8:	b.ne	52b4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x14c>  // b.any
    52cc:	b	51cc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>
    52d0:	cmp	x24, x22
    52d4:	b.ne	5228 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xc0>  // b.any
    52d8:	b	51cc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x64>
    52dc:	ldr	x20, [x1, #24]
    52e0:	add	x21, x1, #0x8
    52e4:	cmp	x20, x21
    52e8:	b.ne	5438 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x2d0>  // b.any
    52ec:	ldr	x0, [sp, #8]
    52f0:	mov	w1, #0x8                   	// #8
    52f4:	mov	w2, #0x3                   	// #3
    52f8:	mov	w22, #0x8                   	// #8
    52fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5300:	ldr	x0, [sp, #8]
    5304:	mov	w23, #0x2                   	// #2
    5308:	add	x8, sp, #0x60
    530c:	mov	w21, #0x1                   	// #1
    5310:	add	x2, sp, #0x90
    5314:	mov	w1, #0x1                   	// #1
    5318:	mov	w3, wzr
    531c:	str	x23, [sp, #96]
    5320:	stp	x8, x21, [sp, #144]
    5324:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5328:	ldr	x0, [sp, #8]
    532c:	mov	w1, #0x13                  	// #19
    5330:	mov	w2, #0x3                   	// #3
    5334:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5338:	mov	w0, #0x220                 	// #544
    533c:	bl	0 <_Znwm>
    5340:	adrp	x24, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5344:	ldr	x24, [x24]
    5348:	movi	v0.2s, #0x1
    534c:	str	d0, [x0, #8]
    5350:	movi	v0.2d, #0x0
    5354:	mov	x8, x0
    5358:	add	x9, x24, #0x10
    535c:	str	x9, [x0]
    5360:	mov	x20, x0
    5364:	stp	q0, q0, [x0, #48]
    5368:	stp	q0, q0, [x0, #80]
    536c:	stp	q0, q0, [x0, #112]
    5370:	stp	q0, q0, [x0, #144]
    5374:	stp	q0, q0, [x0, #176]
    5378:	stp	q0, q0, [x0, #208]
    537c:	stp	q0, q0, [x0, #240]
    5380:	stp	q0, q0, [x0, #272]
    5384:	stp	q0, q0, [x0, #304]
    5388:	stp	q0, q0, [x0, #336]
    538c:	stp	q0, q0, [x0, #368]
    5390:	stp	q0, q0, [x0, #400]
    5394:	stp	q0, q0, [x0, #432]
    5398:	stp	q0, q0, [x0, #464]
    539c:	stp	q0, q0, [x0, #496]
    53a0:	str	q0, [x8, #32]!
    53a4:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53a8:	str	q0, [x0, #528]
    53ac:	str	x8, [x20, #16]!
    53b0:	str	x21, [x8]
    53b4:	ldr	d8, [x9]
    53b8:	ldr	x21, [sp, #8]
    53bc:	mov	w8, #0xff                  	// #255
    53c0:	mov	w9, #0x4                   	// #4
    53c4:	strb	w8, [x0, #40]
    53c8:	mov	w8, #0x6                   	// #6
    53cc:	strb	w9, [x0, #56]
    53d0:	str	x22, [x0, #48]
    53d4:	str	xzr, [x0, #64]
    53d8:	strb	w8, [x0, #72]
    53dc:	str	x22, [x0, #80]
    53e0:	strb	w23, [x0, #88]
    53e4:	str	d8, [x0, #24]
    53e8:	stp	x20, x0, [x29, #-24]
    53ec:	mov	x0, x21
    53f0:	mov	x1, x20
    53f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    53f8:	ldp	x1, x8, [x21, #32]
    53fc:	add	x22, x21, #0x18
    5400:	cmp	x1, x8
    5404:	b.eq	5478 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x310>  // b.none
    5408:	stp	x20, xzr, [x1]
    540c:	ldur	x9, [x29, #-16]
    5410:	add	x8, x1, #0x10
    5414:	stp	xzr, xzr, [x29, #-24]
    5418:	str	x9, [x1, #8]
    541c:	str	x8, [x21, #32]
    5420:	b	5488 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x320>
    5424:	mov	x0, x20
    5428:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    542c:	mov	x20, x0
    5430:	cmp	x0, x21
    5434:	b.eq	52ec <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x184>  // b.none
    5438:	ldp	x22, x23, [x20, #56]
    543c:	cmp	x22, x23
    5440:	b.eq	5424 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x2bc>  // b.none
    5444:	ldr	x8, [x22], #8
    5448:	ldr	w10, [sp, #88]
    544c:	ldr	x9, [x20, #32]
    5450:	add	x1, sp, #0x90
    5454:	mov	x0, x19
    5458:	add	w24, w10, #0x1
    545c:	stp	x9, x8, [sp, #144]
    5460:	str	w24, [sp, #88]
    5464:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5468:	cmp	x23, x22
    546c:	str	w24, [x0]
    5470:	b.ne	5444 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x2dc>  // b.any
    5474:	b	5424 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x2bc>
    5478:	sub	x2, x29, #0x18
    547c:	mov	x0, x22
    5480:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5484:	ldr	x8, [x21, #32]
    5488:	ldr	x9, [x22]
    548c:	adrp	x23, 0 <__pthread_key_create>
    5490:	ldur	x20, [x29, #-16]
    5494:	ldr	x23, [x23]
    5498:	sub	x8, x8, x9
    549c:	lsr	x8, x8, #4
    54a0:	add	w21, w8, #0x3
    54a4:	cbz	x20, 5520 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x3b8>
    54a8:	add	x8, x20, #0x8
    54ac:	cbz	x23, 54cc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x364>
    54b0:	ldaxr	w9, [x8]
    54b4:	sub	w10, w9, #0x1
    54b8:	stlxr	w11, w10, [x8]
    54bc:	cbnz	w11, 54b0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x348>
    54c0:	cmp	w9, #0x1
    54c4:	b.eq	54e0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x378>  // b.none
    54c8:	b	5520 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x3b8>
    54cc:	ldr	w9, [x8]
    54d0:	sub	w10, w9, #0x1
    54d4:	str	w10, [x8]
    54d8:	cmp	w9, #0x1
    54dc:	b.ne	5520 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x3b8>  // b.any
    54e0:	mov	x22, x20
    54e4:	ldr	x8, [x22], #12
    54e8:	mov	x0, x20
    54ec:	ldr	x8, [x8, #16]
    54f0:	blr	x8
    54f4:	cbz	x23, 5bb0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa48>
    54f8:	ldaxr	w8, [x22]
    54fc:	sub	w9, w8, #0x1
    5500:	stlxr	w10, w9, [x22]
    5504:	cbnz	w10, 54f8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x390>
    5508:	cmp	w8, #0x1
    550c:	b.ne	5520 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x3b8>  // b.any
    5510:	ldr	x8, [x20]
    5514:	mov	x0, x20
    5518:	ldr	x8, [x8, #24]
    551c:	blr	x8
    5520:	mov	w0, #0x220                 	// #544
    5524:	add	x25, sp, #0x90
    5528:	stur	w21, [x29, #-4]
    552c:	bl	0 <_Znwm>
    5530:	movi	v0.2s, #0x1
    5534:	add	x8, x24, #0x10
    5538:	str	d0, [x0, #8]
    553c:	movi	v0.2d, #0x0
    5540:	mov	x9, x0
    5544:	mov	x1, x0
    5548:	str	x8, [x0]
    554c:	mov	w8, #0x1                   	// #1
    5550:	stp	q0, q0, [x0, #48]
    5554:	stp	q0, q0, [x0, #80]
    5558:	stp	q0, q0, [x0, #112]
    555c:	stp	q0, q0, [x0, #144]
    5560:	stp	q0, q0, [x0, #176]
    5564:	stp	q0, q0, [x0, #208]
    5568:	stp	q0, q0, [x0, #240]
    556c:	stp	q0, q0, [x0, #272]
    5570:	stp	q0, q0, [x0, #304]
    5574:	stp	q0, q0, [x0, #336]
    5578:	stp	q0, q0, [x0, #368]
    557c:	stp	q0, q0, [x0, #400]
    5580:	stp	q0, q0, [x0, #432]
    5584:	stp	q0, q0, [x0, #464]
    5588:	stp	q0, q0, [x0, #496]
    558c:	str	q0, [x9, #32]!
    5590:	ldr	x20, [sp, #8]
    5594:	str	q0, [x0, #528]
    5598:	str	x9, [x1, #16]!
    559c:	str	x8, [x9]
    55a0:	mov	w8, #0xff                  	// #255
    55a4:	mov	w9, #0x8                   	// #8
    55a8:	strb	w8, [x0, #40]
    55ac:	mov	w8, #0x4                   	// #4
    55b0:	str	x9, [x0, #48]
    55b4:	mov	w9, #0x6                   	// #6
    55b8:	strb	w8, [x0, #56]
    55bc:	mov	w8, #0x7                   	// #7
    55c0:	strb	w9, [x0, #72]
    55c4:	mov	w9, #0x2                   	// #2
    55c8:	str	x8, [x0, #80]
    55cc:	str	xzr, [x0, #64]
    55d0:	strb	w9, [x0, #88]
    55d4:	str	d8, [x0, #24]
    55d8:	stp	x1, x0, [x29, #-48]
    55dc:	mov	x0, x20
    55e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    55e4:	ldp	x1, x8, [x20, #32]
    55e8:	add	x21, x20, #0x18
    55ec:	cmp	x1, x8
    55f0:	b.eq	5614 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x4ac>  // b.none
    55f4:	str	xzr, [x1, #8]
    55f8:	ldr	q0, [x25, #336]
    55fc:	add	x8, x1, #0x10
    5600:	stur	xzr, [x29, #-40]
    5604:	str	q0, [x1]
    5608:	stur	xzr, [x29, #-48]
    560c:	str	x8, [x20, #32]
    5610:	b	5624 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x4bc>
    5614:	sub	x2, x29, #0x30
    5618:	mov	x0, x21
    561c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5620:	ldr	x8, [x20, #32]
    5624:	ldr	x9, [x21]
    5628:	ldur	x20, [x29, #-40]
    562c:	sub	x8, x8, x9
    5630:	lsr	x8, x8, #4
    5634:	add	w21, w8, #0x3
    5638:	cbz	x20, 56b4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x54c>
    563c:	add	x8, x20, #0x8
    5640:	cbz	x23, 5660 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x4f8>
    5644:	ldaxr	w9, [x8]
    5648:	sub	w10, w9, #0x1
    564c:	stlxr	w11, w10, [x8]
    5650:	cbnz	w11, 5644 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x4dc>
    5654:	cmp	w9, #0x1
    5658:	b.eq	5674 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x50c>  // b.none
    565c:	b	56b4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x54c>
    5660:	ldr	w9, [x8]
    5664:	sub	w10, w9, #0x1
    5668:	str	w10, [x8]
    566c:	cmp	w9, #0x1
    5670:	b.ne	56b4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x54c>  // b.any
    5674:	mov	x22, x20
    5678:	ldr	x8, [x22], #12
    567c:	mov	x0, x20
    5680:	ldr	x8, [x8, #16]
    5684:	blr	x8
    5688:	cbz	x23, 5bc8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa60>
    568c:	ldaxr	w8, [x22]
    5690:	sub	w9, w8, #0x1
    5694:	stlxr	w10, w9, [x22]
    5698:	cbnz	w10, 568c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x524>
    569c:	cmp	w8, #0x1
    56a0:	b.ne	56b4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x54c>  // b.any
    56a4:	ldr	x8, [x20]
    56a8:	mov	x0, x20
    56ac:	ldr	x8, [x8, #24]
    56b0:	blr	x8
    56b4:	mov	w0, #0x220                 	// #544
    56b8:	stur	w21, [x29, #-28]
    56bc:	bl	0 <_Znwm>
    56c0:	movi	v0.2s, #0x1
    56c4:	add	x8, x24, #0x10
    56c8:	str	d0, [x0, #8]
    56cc:	movi	v0.2d, #0x0
    56d0:	mov	x9, x0
    56d4:	mov	x1, x0
    56d8:	str	x8, [x0]
    56dc:	mov	w8, #0x1                   	// #1
    56e0:	stp	q0, q0, [x0, #48]
    56e4:	stp	q0, q0, [x0, #80]
    56e8:	stp	q0, q0, [x0, #112]
    56ec:	stp	q0, q0, [x0, #144]
    56f0:	stp	q0, q0, [x0, #176]
    56f4:	stp	q0, q0, [x0, #208]
    56f8:	stp	q0, q0, [x0, #240]
    56fc:	stp	q0, q0, [x0, #272]
    5700:	stp	q0, q0, [x0, #304]
    5704:	stp	q0, q0, [x0, #336]
    5708:	stp	q0, q0, [x0, #368]
    570c:	stp	q0, q0, [x0, #400]
    5710:	stp	q0, q0, [x0, #432]
    5714:	stp	q0, q0, [x0, #464]
    5718:	stp	q0, q0, [x0, #496]
    571c:	str	q0, [x9, #32]!
    5720:	ldr	x20, [sp, #8]
    5724:	str	q0, [x0, #528]
    5728:	str	x9, [x1, #16]!
    572c:	str	x8, [x9]
    5730:	mov	w8, #0xff                  	// #255
    5734:	strb	w8, [x0, #40]
    5738:	mov	w8, #0x4                   	// #4
    573c:	mov	w9, #0x8                   	// #8
    5740:	strb	w8, [x0, #56]
    5744:	mov	w8, #0x6                   	// #6
    5748:	strb	w8, [x0, #72]
    574c:	str	x9, [x0, #48]
    5750:	str	xzr, [x0, #64]
    5754:	str	xzr, [x0, #80]
    5758:	strb	w9, [x0, #88]
    575c:	str	d8, [x0, #24]
    5760:	stp	x1, x0, [x29, #-80]
    5764:	mov	x0, x20
    5768:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    576c:	ldp	x1, x8, [x20, #32]
    5770:	add	x21, x20, #0x18
    5774:	cmp	x1, x8
    5778:	b.eq	579c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x634>  // b.none
    577c:	str	xzr, [x1, #8]
    5780:	ldr	q0, [x25, #304]
    5784:	add	x8, x1, #0x10
    5788:	stur	xzr, [x29, #-72]
    578c:	str	q0, [x1]
    5790:	stur	xzr, [x29, #-80]
    5794:	str	x8, [x20, #32]
    5798:	b	57ac <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x644>
    579c:	sub	x2, x29, #0x50
    57a0:	mov	x0, x21
    57a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    57a8:	ldr	x8, [x20, #32]
    57ac:	ldr	x9, [x21]
    57b0:	ldur	x20, [x29, #-72]
    57b4:	sub	x8, x8, x9
    57b8:	lsr	x8, x8, #4
    57bc:	add	w21, w8, #0x3
    57c0:	cbz	x20, 583c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x6d4>
    57c4:	add	x8, x20, #0x8
    57c8:	cbz	x23, 57e8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x680>
    57cc:	ldaxr	w9, [x8]
    57d0:	sub	w10, w9, #0x1
    57d4:	stlxr	w11, w10, [x8]
    57d8:	cbnz	w11, 57cc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x664>
    57dc:	cmp	w9, #0x1
    57e0:	b.eq	57fc <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x694>  // b.none
    57e4:	b	583c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x6d4>
    57e8:	ldr	w9, [x8]
    57ec:	sub	w10, w9, #0x1
    57f0:	str	w10, [x8]
    57f4:	cmp	w9, #0x1
    57f8:	b.ne	583c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x6d4>  // b.any
    57fc:	mov	x22, x20
    5800:	ldr	x8, [x22], #12
    5804:	mov	x0, x20
    5808:	ldr	x8, [x8, #16]
    580c:	blr	x8
    5810:	cbz	x23, 5be0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa78>
    5814:	ldaxr	w8, [x22]
    5818:	sub	w9, w8, #0x1
    581c:	stlxr	w10, w9, [x22]
    5820:	cbnz	w10, 5814 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x6ac>
    5824:	cmp	w8, #0x1
    5828:	b.ne	583c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x6d4>  // b.any
    582c:	ldr	x8, [x20]
    5830:	mov	x0, x20
    5834:	ldr	x8, [x8, #24]
    5838:	blr	x8
    583c:	mov	w0, #0x220                 	// #544
    5840:	stur	w21, [x29, #-52]
    5844:	bl	0 <_Znwm>
    5848:	movi	v0.2s, #0x1
    584c:	add	x8, x24, #0x10
    5850:	str	d0, [x0, #8]
    5854:	movi	v0.2d, #0x0
    5858:	mov	x1, x0
    585c:	mov	x21, x0
    5860:	mov	w10, #0x2                   	// #2
    5864:	str	x8, [x0]
    5868:	stp	q0, q0, [x0, #48]
    586c:	stp	q0, q0, [x0, #80]
    5870:	stp	q0, q0, [x0, #112]
    5874:	stp	q0, q0, [x0, #144]
    5878:	stp	q0, q0, [x0, #176]
    587c:	stp	q0, q0, [x0, #208]
    5880:	stp	q0, q0, [x0, #240]
    5884:	stp	q0, q0, [x0, #272]
    5888:	stp	q0, q0, [x0, #304]
    588c:	stp	q0, q0, [x0, #336]
    5890:	stp	q0, q0, [x0, #368]
    5894:	stp	q0, q0, [x0, #400]
    5898:	stp	q0, q0, [x0, #432]
    589c:	stp	q0, q0, [x0, #464]
    58a0:	stp	q0, q0, [x0, #496]
    58a4:	str	q0, [x1, #32]!
    58a8:	mov	w9, #0xff                  	// #255
    58ac:	str	q0, [x0, #528]
    58b0:	str	x1, [x21, #16]!
    58b4:	str	x10, [x1]
    58b8:	str	d8, [x0, #24]
    58bc:	mov	w11, #0x20                  	// #32
    58c0:	strb	w9, [x0, #40]
    58c4:	ldp	w8, w9, [x0, #24]
    58c8:	ldur	w12, [x25, #3]
    58cc:	str	x11, [x0, #48]
    58d0:	str	x11, [x0, #64]
    58d4:	str	x11, [x0, #80]
    58d8:	str	x11, [x0, #96]
    58dc:	ldr	w11, [sp, #144]
    58e0:	cmp	w8, w9
    58e4:	strb	w10, [x0, #56]
    58e8:	strb	w10, [x0, #72]
    58ec:	strb	w10, [x0, #88]
    58f0:	strb	w10, [x0, #104]
    58f4:	str	w12, [x0, #108]
    58f8:	stur	w11, [x0, #105]
    58fc:	b.cs	5d00 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb98>  // b.hs, b.nlast
    5900:	add	w8, w8, #0x1
    5904:	mov	x20, x0
    5908:	cmp	w8, w9
    590c:	str	w8, [x0, #24]
    5910:	b.cs	5c48 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xae0>  // b.hs, b.nlast
    5914:	ldr	x9, [x20, #16]
    5918:	mov	w10, #0x20                  	// #32
    591c:	mov	w11, #0x2                   	// #2
    5920:	add	x8, x9, w8, uxtw #4
    5924:	str	x10, [x8]
    5928:	strb	w11, [x8, #8]
    592c:	ldur	w9, [x25, #3]
    5930:	ldr	w10, [sp, #144]
    5934:	str	w9, [x8, #12]
    5938:	stur	w10, [x8, #9]
    593c:	ldp	w8, w9, [x20, #24]
    5940:	cmp	w8, w9
    5944:	b.cs	5d00 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xb98>  // b.hs, b.nlast
    5948:	ldr	x22, [sp, #8]
    594c:	add	w8, w8, #0x1
    5950:	mov	x1, x21
    5954:	str	w8, [x20, #24]
    5958:	mov	x0, x22
    595c:	stp	x21, x20, [x29, #-112]
    5960:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5964:	ldp	x1, x8, [x22, #32]
    5968:	add	x20, x22, #0x18
    596c:	cmp	x1, x8
    5970:	b.eq	5994 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x82c>  // b.none
    5974:	str	xzr, [x1, #8]
    5978:	ldr	q0, [x25, #272]
    597c:	add	x8, x1, #0x10
    5980:	stur	xzr, [x29, #-104]
    5984:	str	q0, [x1]
    5988:	stur	xzr, [x29, #-112]
    598c:	str	x8, [x22, #32]
    5990:	b	59a4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x83c>
    5994:	sub	x2, x29, #0x70
    5998:	mov	x0, x20
    599c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    59a0:	ldr	x8, [x22, #32]
    59a4:	ldr	x9, [x20]
    59a8:	ldur	x20, [x29, #-104]
    59ac:	sub	x8, x8, x9
    59b0:	lsr	x8, x8, #4
    59b4:	add	w21, w8, #0x3
    59b8:	cbz	x20, 5a34 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x8cc>
    59bc:	add	x8, x20, #0x8
    59c0:	cbz	x23, 59e0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x878>
    59c4:	ldaxr	w9, [x8]
    59c8:	sub	w10, w9, #0x1
    59cc:	stlxr	w11, w10, [x8]
    59d0:	cbnz	w11, 59c4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x85c>
    59d4:	cmp	w9, #0x1
    59d8:	b.eq	59f4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x88c>  // b.none
    59dc:	b	5a34 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x8cc>
    59e0:	ldr	w9, [x8]
    59e4:	sub	w10, w9, #0x1
    59e8:	str	w10, [x8]
    59ec:	cmp	w9, #0x1
    59f0:	b.ne	5a34 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x8cc>  // b.any
    59f4:	mov	x22, x20
    59f8:	ldr	x8, [x22], #12
    59fc:	mov	x0, x20
    5a00:	ldr	x8, [x8, #16]
    5a04:	blr	x8
    5a08:	cbz	x23, 5bf8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa90>
    5a0c:	ldaxr	w8, [x22]
    5a10:	sub	w9, w8, #0x1
    5a14:	stlxr	w10, w9, [x22]
    5a18:	cbnz	w10, 5a0c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x8a4>
    5a1c:	cmp	w8, #0x1
    5a20:	b.ne	5a34 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x8cc>  // b.any
    5a24:	ldr	x8, [x20]
    5a28:	mov	x0, x20
    5a2c:	ldr	x8, [x8, #24]
    5a30:	blr	x8
    5a34:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5a38:	ldr	d0, [x8]
    5a3c:	ldr	x8, [sp, #32]
    5a40:	add	x9, sp, #0x90
    5a44:	sub	x12, x29, #0x1c
    5a48:	stp	x12, x9, [sp, #112]
    5a4c:	add	x9, x9, #0x10
    5a50:	sub	x10, x29, #0x4
    5a54:	sub	x11, x29, #0x34
    5a58:	add	x13, sp, #0x8
    5a5c:	str	x9, [sp, #144]
    5a60:	sub	x9, x29, #0x54
    5a64:	stur	w21, [x29, #-84]
    5a68:	stp	x10, x11, [sp, #96]
    5a6c:	str	d0, [sp, #152]
    5a70:	stp	x13, x9, [sp, #128]
    5a74:	cbz	x8, 5b78 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa10>
    5a78:	ldr	x20, [x8, #24]
    5a7c:	add	x21, x8, #0x8
    5a80:	cmp	x20, x21
    5a84:	b.ne	5b04 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x99c>  // b.any
    5a88:	ldr	x0, [sp, #8]
    5a8c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5a90:	ldr	x0, [sp, #144]
    5a94:	add	x8, sp, #0x90
    5a98:	add	x8, x8, #0x10
    5a9c:	cmp	x0, x8
    5aa0:	b.eq	5aa8 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x940>  // b.none
    5aa4:	bl	0 <free>
    5aa8:	add	x0, sp, #0x8
    5aac:	bl	25310 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv>
    5ab0:	ldr	x0, [sp, #8]
    5ab4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ab8:	ldr	x1, [sp, #56]
    5abc:	mov	x0, x19
    5ac0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ac4:	add	sp, sp, #0x210
    5ac8:	ldp	x20, x19, [sp, #80]
    5acc:	ldp	x22, x21, [sp, #64]
    5ad0:	ldp	x24, x23, [sp, #48]
    5ad4:	ldp	x28, x25, [sp, #32]
    5ad8:	ldp	x29, x30, [sp, #16]
    5adc:	ldr	d8, [sp], #96
    5ae0:	ret
    5ae4:	ldr	x1, [x8]
    5ae8:	add	x0, sp, #0x60
    5aec:	bl	27590 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE>
    5af0:	mov	x0, x20
    5af4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    5af8:	mov	x20, x0
    5afc:	cmp	x0, x21
    5b00:	b.eq	5a88 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x920>  // b.none
    5b04:	ldr	x22, [sp, #24]
    5b08:	ldp	x1, x2, [x20, #32]
    5b0c:	add	x0, x22, #0x30
    5b10:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    5b14:	ldr	x8, [x22, #48]
    5b18:	cmn	w0, #0x1
    5b1c:	b.eq	5b28 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x9c0>  // b.none
    5b20:	sxtw	x9, w0
    5b24:	b	5b2c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x9c4>
    5b28:	ldr	w9, [x22, #56]
    5b2c:	ldr	x10, [sp, #24]
    5b30:	add	x8, x8, x9, lsl #3
    5b34:	ldr	x11, [x10, #48]
    5b38:	ldr	w10, [x10, #56]
    5b3c:	add	x9, x11, x10, lsl #3
    5b40:	cmp	x8, x9
    5b44:	b.ne	5ae4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x97c>  // b.any
    5b48:	ldr	x8, [sp, #32]
    5b4c:	ldr	x8, [x8, #40]
    5b50:	cmp	x8, #0x1
    5b54:	b.eq	5af0 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x988>  // b.none
    5b58:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5b5c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5b60:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5b64:	add	x0, x0, #0x0
    5b68:	add	x1, x1, #0x0
    5b6c:	add	x3, x3, #0x0
    5b70:	mov	w2, #0x1d8                 	// #472
    5b74:	bl	0 <__assert_fail>
    5b78:	ldr	x9, [sp, #24]
    5b7c:	ldr	w8, [x9, #56]
    5b80:	ldr	x9, [x9, #48]
    5b84:	cbz	w8, 5c10 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xaa8>
    5b88:	add	x10, x9, #0x8
    5b8c:	mov	x20, x9
    5b90:	b	5b9c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa34>
    5b94:	mov	x20, x10
    5b98:	add	x10, x10, #0x8
    5b9c:	ldur	x11, [x10, #-8]
    5ba0:	cbz	x11, 5b94 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa2c>
    5ba4:	cmn	x11, #0x8
    5ba8:	b.eq	5b94 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xa2c>  // b.none
    5bac:	b	5c14 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xaac>
    5bb0:	ldr	w8, [x22]
    5bb4:	sub	w9, w8, #0x1
    5bb8:	str	w9, [x22]
    5bbc:	cmp	w8, #0x1
    5bc0:	b.eq	5510 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x3a8>  // b.none
    5bc4:	b	5520 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x3b8>
    5bc8:	ldr	w8, [x22]
    5bcc:	sub	w9, w8, #0x1
    5bd0:	str	w9, [x22]
    5bd4:	cmp	w8, #0x1
    5bd8:	b.eq	56a4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x53c>  // b.none
    5bdc:	b	56b4 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x54c>
    5be0:	ldr	w8, [x22]
    5be4:	sub	w9, w8, #0x1
    5be8:	str	w9, [x22]
    5bec:	cmp	w8, #0x1
    5bf0:	b.eq	582c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x6c4>  // b.none
    5bf4:	b	583c <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x6d4>
    5bf8:	ldr	w8, [x22]
    5bfc:	sub	w9, w8, #0x1
    5c00:	str	w9, [x22]
    5c04:	cmp	w8, #0x1
    5c08:	b.eq	5a24 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x8bc>  // b.none
    5c0c:	b	5a34 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x8cc>
    5c10:	mov	x20, x9
    5c14:	add	x21, x9, x8, lsl #3
    5c18:	cmp	x21, x20
    5c1c:	b.eq	5a88 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x920>  // b.none
    5c20:	ldr	x1, [x20], #8
    5c24:	add	x0, sp, #0x60
    5c28:	bl	27590 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE>
    5c2c:	b	5c34 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xacc>
    5c30:	add	x20, x20, #0x8
    5c34:	ldr	x8, [x20]
    5c38:	cbz	x8, 5c30 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xac8>
    5c3c:	cmn	x8, #0x8
    5c40:	b.eq	5c30 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xac8>  // b.none
    5c44:	b	5c18 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0xab0>
    5c48:	mov	w3, #0x10                  	// #16
    5c4c:	mov	x0, x21
    5c50:	mov	x2, xzr
    5c54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5c58:	ldr	w8, [x20, #24]
    5c5c:	b	5914 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE+0x7ac>
    5c60:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5c64:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5c68:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5c6c:	add	x0, x0, #0x0
    5c70:	add	x1, x1, #0x0
    5c74:	add	x3, x3, #0x0
    5c78:	mov	w2, #0x69                  	// #105
    5c7c:	bl	0 <__assert_fail>
    5c80:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5c84:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5c88:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5c8c:	add	x0, x0, #0x0
    5c90:	add	x1, x1, #0x0
    5c94:	add	x3, x3, #0x0
    5c98:	mov	w2, #0x1d8                 	// #472
    5c9c:	bl	0 <__assert_fail>
    5ca0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ca4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ca8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5cac:	add	x0, x0, #0x0
    5cb0:	add	x1, x1, #0x0
    5cb4:	add	x3, x3, #0x0
    5cb8:	mov	w2, #0x1cb                 	// #459
    5cbc:	bl	0 <__assert_fail>
    5cc0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5cc4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5cc8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ccc:	add	x0, x0, #0x0
    5cd0:	add	x1, x1, #0x0
    5cd4:	add	x3, x3, #0x0
    5cd8:	mov	w2, #0x4cf                 	// #1231
    5cdc:	bl	0 <__assert_fail>
    5ce0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ce4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5ce8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5cec:	add	x0, x0, #0x0
    5cf0:	add	x1, x1, #0x0
    5cf4:	add	x3, x3, #0x0
    5cf8:	mov	w2, #0x4e0                 	// #1248
    5cfc:	bl	0 <__assert_fail>
    5d00:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5d04:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5d08:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5d0c:	add	x0, x0, #0x0
    5d10:	add	x1, x1, #0x0
    5d14:	add	x3, x3, #0x0
    5d18:	mov	w2, #0x43                  	// #67
    5d1c:	bl	0 <__assert_fail>

0000000000005d20 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>:
    5d20:	sub	sp, sp, #0x170
    5d24:	stp	x29, x30, [sp, #288]
    5d28:	stp	x28, x25, [sp, #304]
    5d2c:	stp	x24, x23, [sp, #320]
    5d30:	stp	x22, x21, [sp, #336]
    5d34:	stp	x20, x19, [sp, #352]
    5d38:	add	x29, sp, #0x120
    5d3c:	sub	x8, x29, #0x10
    5d40:	add	x20, x8, #0x10
    5d44:	mov	x22, x3
    5d48:	mov	w25, w2
    5d4c:	mov	x19, x1
    5d50:	mov	x24, x0
    5d54:	sub	x0, x29, #0x10
    5d58:	mov	w2, #0x40000               	// #262144
    5d5c:	mov	w3, #0x1                   	// #1
    5d60:	mov	x1, x20
    5d64:	mov	x21, x5
    5d68:	mov	w23, w4
    5d6c:	stp	x20, xzr, [x29, #-16]
    5d70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5d74:	add	x8, x24, #0xf0
    5d78:	mov	w9, #0x104                 	// #260
    5d7c:	sub	x0, x29, #0x48
    5d80:	add	x1, sp, #0x8
    5d84:	strh	w9, [sp, #24]
    5d88:	stp	x8, xzr, [sp, #8]
    5d8c:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
    5d90:	ldur	w8, [x29, #-28]
    5d94:	orr	w9, w8, #0x8
    5d98:	cmp	w9, #0xb
    5d9c:	b.eq	5dc0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xa0>  // b.none
    5da0:	cmp	w8, #0x1c
    5da4:	b.hi	5f54 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x234>  // b.pmore
    5da8:	mov	w9, #0x1                   	// #1
    5dac:	lsl	w8, w9, w8
    5db0:	mov	w9, #0x80                  	// #128
    5db4:	movk	w9, #0x1800, lsl #16
    5db8:	tst	w8, w9
    5dbc:	b.eq	5f54 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x234>  // b.none
    5dc0:	ldur	x1, [x29, #-16]
    5dc4:	sub	x0, x29, #0x10
    5dc8:	add	x3, sp, #0x8
    5dcc:	mov	w2, #0x14                  	// #20
    5dd0:	strb	wzr, [sp, #8]
    5dd4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5dd8:	add	x0, sp, #0x8
    5ddc:	sub	x1, x29, #0x10
    5de0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5de4:	and	w2, w25, #0x1
    5de8:	and	w4, w23, #0x1
    5dec:	add	x0, sp, #0x8
    5df0:	mov	x1, x24
    5df4:	mov	x3, x22
    5df8:	mov	x5, x21
    5dfc:	bl	a38 <_ZN4llvm13BitcodeWriter11writeModuleERKNS_6ModuleEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
    5e00:	add	x0, sp, #0x8
    5e04:	bl	754 <_ZN4llvm13BitcodeWriter11writeSymtabEv>
    5e08:	add	x0, sp, #0x8
    5e0c:	bl	928 <_ZN4llvm13BitcodeWriter11writeStrtabEv>
    5e10:	ldur	w8, [x29, #-28]
    5e14:	orr	w9, w8, #0x8
    5e18:	cmp	w9, #0xb
    5e1c:	b.eq	5e40 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x120>  // b.none
    5e20:	cmp	w8, #0x1c
    5e24:	b.hi	5f64 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x244>  // b.pmore
    5e28:	mov	w9, #0x1                   	// #1
    5e2c:	lsl	w8, w9, w8
    5e30:	mov	w9, #0x80                  	// #128
    5e34:	movk	w9, #0x1800, lsl #16
    5e38:	tst	w8, w9
    5e3c:	b.eq	5f64 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x244>  // b.none
    5e40:	ldur	w8, [x29, #-40]
    5e44:	sub	w8, w8, #0x1
    5e48:	cmp	w8, #0x1f
    5e4c:	b.hi	5e80 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x160>  // b.pmore
    5e50:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5e54:	add	x9, x9, #0x0
    5e58:	adr	x10, 5e70 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x150>
    5e5c:	ldrb	w11, [x9, x8]
    5e60:	add	x10, x10, x11, lsl #2
    5e64:	mov	w8, #0x7                   	// #7
    5e68:	movk	w8, #0x100, lsl #16
    5e6c:	br	x10
    5e70:	mov	w8, #0xc                   	// #12
    5e74:	b	5e94 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x174>
    5e78:	mov	w8, #0x7                   	// #7
    5e7c:	b	5e94 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x174>
    5e80:	mov	w8, #0xffffffff            	// #-1
    5e84:	b	5e94 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x174>
    5e88:	mov	w8, #0x12                  	// #18
    5e8c:	b	5e94 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x174>
    5e90:	add	w8, w8, #0xb
    5e94:	ldur	w10, [x29, #-8]
    5e98:	cmp	w10, #0x13
    5e9c:	b.ls	601c <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2fc>  // b.plast
    5ea0:	ldur	x9, [x29, #-16]
    5ea4:	mov	w11, #0xc0de                	// #49374
    5ea8:	movk	w11, #0xb17, lsl #16
    5eac:	str	w11, [x9]
    5eb0:	ldur	w9, [x29, #-8]
    5eb4:	cmp	w9, #0x4
    5eb8:	b.ls	5ffc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2dc>  // b.plast
    5ebc:	ldur	x9, [x29, #-16]
    5ec0:	str	wzr, [x9, #4]
    5ec4:	ldur	w9, [x29, #-8]
    5ec8:	cmp	w9, #0x8
    5ecc:	b.ls	5ffc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2dc>  // b.plast
    5ed0:	ldur	x11, [x29, #-16]
    5ed4:	mov	w9, #0x14                  	// #20
    5ed8:	str	w9, [x11, #8]
    5edc:	ldur	w9, [x29, #-8]
    5ee0:	cmp	w9, #0xc
    5ee4:	b.ls	5ffc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2dc>  // b.plast
    5ee8:	sub	w10, w10, #0x14
    5eec:	cmp	w9, #0x10
    5ef0:	str	w10, [x11, #12]
    5ef4:	b.ls	5ffc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2dc>  // b.plast
    5ef8:	tst	w9, #0xf
    5efc:	str	w8, [x11, #16]
    5f00:	b.eq	5f78 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x258>  // b.none
    5f04:	ldur	w8, [x29, #-4]
    5f08:	cmp	w9, w8
    5f0c:	b.cs	5f38 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x218>  // b.hs, b.nlast
    5f10:	ldur	x8, [x29, #-16]
    5f14:	strb	wzr, [x8, w9, uxtw]
    5f18:	ldp	w9, w8, [x29, #-8]
    5f1c:	cmp	w9, w8
    5f20:	b.cs	5fdc <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2bc>  // b.hs, b.nlast
    5f24:	add	w9, w9, #0x1
    5f28:	tst	w9, #0xf
    5f2c:	stur	w9, [x29, #-8]
    5f30:	b.ne	5f08 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x1e8>  // b.any
    5f34:	b	5f78 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x258>
    5f38:	sub	x0, x29, #0x10
    5f3c:	mov	w3, #0x1                   	// #1
    5f40:	mov	x1, x20
    5f44:	mov	x2, xzr
    5f48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5f4c:	ldur	w9, [x29, #-8]
    5f50:	b	5f10 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x1f0>
    5f54:	ldur	w8, [x29, #-20]
    5f58:	cmp	w8, #0x3
    5f5c:	b.eq	5dc0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xa0>  // b.none
    5f60:	b	5dd8 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0xb8>
    5f64:	ldur	w8, [x29, #-20]
    5f68:	cmp	w8, #0x3
    5f6c:	b.eq	5e40 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x120>  // b.none
    5f70:	ldur	w9, [x29, #-8]
    5f74:	cbz	w9, 603c <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x31c>
    5f78:	ldur	x1, [x29, #-16]
    5f7c:	mov	w2, w9
    5f80:	mov	x0, x19
    5f84:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    5f88:	add	x0, sp, #0x8
    5f8c:	bl	3f8 <_ZN4llvm13BitcodeWriterD1Ev>
    5f90:	ldur	x0, [x29, #-72]
    5f94:	sub	x8, x29, #0x48
    5f98:	add	x8, x8, #0x10
    5f9c:	cmp	x0, x8
    5fa0:	b.eq	5fa8 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x288>  // b.none
    5fa4:	bl	0 <_ZdlPv>
    5fa8:	ldur	x0, [x29, #-16]
    5fac:	sub	x8, x29, #0x10
    5fb0:	add	x8, x8, #0x10
    5fb4:	cmp	x0, x8
    5fb8:	b.eq	5fc0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE+0x2a0>  // b.none
    5fbc:	bl	0 <free>
    5fc0:	ldp	x20, x19, [sp, #352]
    5fc4:	ldp	x22, x21, [sp, #336]
    5fc8:	ldp	x24, x23, [sp, #320]
    5fcc:	ldp	x28, x25, [sp, #304]
    5fd0:	ldp	x29, x30, [sp, #288]
    5fd4:	add	sp, sp, #0x170
    5fd8:	ret
    5fdc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5fe0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5fe4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    5fe8:	add	x0, x0, #0x0
    5fec:	add	x1, x1, #0x0
    5ff0:	add	x3, x3, #0x0
    5ff4:	mov	w2, #0x43                  	// #67
    5ff8:	bl	0 <__assert_fail>
    5ffc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6000:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6004:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6008:	add	x0, x0, #0x0
    600c:	add	x1, x1, #0x0
    6010:	add	x3, x3, #0x0
    6014:	mov	w2, #0x95                  	// #149
    6018:	bl	0 <__assert_fail>
    601c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6020:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6024:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6028:	add	x0, x0, #0x0
    602c:	add	x1, x1, #0x0
    6030:	add	x3, x3, #0x0
    6034:	mov	w2, #0x10f1                	// #4337
    6038:	bl	0 <__assert_fail>
    603c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6040:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6044:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6048:	add	x0, x0, #0x0
    604c:	add	x1, x1, #0x0
    6050:	add	x3, x3, #0x0
    6054:	mov	w2, #0x9e                  	// #158
    6058:	bl	0 <__assert_fail>

000000000000605c <_ZN4llvm16WriteIndexToFileERKNS_18ModuleSummaryIndexERNS_11raw_ostreamEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSE_EEEESt4lessISB_ESaISt4pairIKSB_SK_EEE>:
    605c:	sub	sp, sp, #0x120
    6060:	stp	x29, x30, [sp, #224]
    6064:	str	x28, [sp, #240]
    6068:	stp	x22, x21, [sp, #256]
    606c:	stp	x20, x19, [sp, #272]
    6070:	add	x29, sp, #0xe0
    6074:	sub	x8, x29, #0x10
    6078:	add	x19, x8, #0x10
    607c:	mov	x21, x2
    6080:	mov	x20, x1
    6084:	mov	x22, x0
    6088:	sub	x0, x29, #0x10
    608c:	mov	w2, #0x40000               	// #262144
    6090:	mov	w3, #0x1                   	// #1
    6094:	mov	x1, x19
    6098:	stp	x19, xzr, [x29, #-16]
    609c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    60a0:	mov	x0, sp
    60a4:	sub	x1, x29, #0x10
    60a8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    60ac:	mov	x0, sp
    60b0:	mov	x1, x22
    60b4:	mov	x2, x21
    60b8:	bl	5168 <_ZN4llvm13BitcodeWriter10writeIndexEPKNS_18ModuleSummaryIndexEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSD_EEEESt4lessISA_ESaISt4pairIKSA_SJ_EEE>
    60bc:	mov	x0, sp
    60c0:	bl	928 <_ZN4llvm13BitcodeWriter11writeStrtabEv>
    60c4:	ldur	w2, [x29, #-8]
    60c8:	cbz	w2, 6108 <_ZN4llvm16WriteIndexToFileERKNS_18ModuleSummaryIndexERNS_11raw_ostreamEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSE_EEEESt4lessISB_ESaISt4pairIKSB_SK_EEE+0xac>
    60cc:	ldur	x1, [x29, #-16]
    60d0:	mov	x0, x20
    60d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    60d8:	mov	x0, sp
    60dc:	bl	3f8 <_ZN4llvm13BitcodeWriterD1Ev>
    60e0:	ldur	x0, [x29, #-16]
    60e4:	cmp	x0, x19
    60e8:	b.eq	60f0 <_ZN4llvm16WriteIndexToFileERKNS_18ModuleSummaryIndexERNS_11raw_ostreamEPKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_8DenseMapImPNS_18GlobalValueSummaryENS_12DenseMapInfoImEENS_6detail12DenseMapPairImSE_EEEESt4lessISB_ESaISt4pairIKSB_SK_EEE+0x94>  // b.none
    60ec:	bl	0 <free>
    60f0:	ldp	x20, x19, [sp, #272]
    60f4:	ldp	x22, x21, [sp, #256]
    60f8:	ldr	x28, [sp, #240]
    60fc:	ldp	x29, x30, [sp, #224]
    6100:	add	sp, sp, #0x120
    6104:	ret
    6108:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    610c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6110:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6114:	add	x0, x0, #0x0
    6118:	add	x1, x1, #0x0
    611c:	add	x3, x3, #0x0
    6120:	mov	w2, #0x9e                  	// #158
    6124:	bl	0 <__assert_fail>

0000000000006128 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE>:
    6128:	stp	x29, x30, [sp, #-96]!
    612c:	stp	x28, x27, [sp, #16]
    6130:	stp	x26, x25, [sp, #32]
    6134:	stp	x24, x23, [sp, #48]
    6138:	stp	x22, x21, [sp, #64]
    613c:	stp	x20, x19, [sp, #80]
    6140:	mov	x29, sp
    6144:	sub	sp, sp, #0x3d0
    6148:	ldrb	w8, [x0, #176]
    614c:	cbnz	w8, 6fd0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xea8>
    6150:	ldr	x8, [x1, #168]
    6154:	mov	x21, x1
    6158:	cbnz	x8, 6ff0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xec8>
    615c:	mov	x26, x0
    6160:	ldr	x10, [x26, #200]!
    6164:	mov	x19, x3
    6168:	mov	x20, x2
    616c:	mov	x22, x0
    6170:	mov	x8, x26
    6174:	ldr	x9, [x8, #-8]!
    6178:	cmp	x9, x10
    617c:	b.eq	6190 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x68>  // b.none
    6180:	str	x21, [x9]
    6184:	ldr	x9, [x8]
    6188:	add	x9, x9, #0x8
    618c:	b	6228 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x100>
    6190:	ldr	x23, [x22, #184]
    6194:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    6198:	sub	x24, x9, x23
    619c:	cmp	x24, x8
    61a0:	b.eq	7010 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xee8>  // b.none
    61a4:	asr	x28, x24, #3
    61a8:	cmp	x24, #0x0
    61ac:	csinc	x8, x28, xzr, ne  // ne = any
    61b0:	adds	x8, x8, x28
    61b4:	lsr	x10, x8, #60
    61b8:	cset	w9, cs  // cs = hs, nlast
    61bc:	cmp	x10, #0x0
    61c0:	cset	w10, ne  // ne = any
    61c4:	orr	w9, w9, w10
    61c8:	cmp	w9, #0x0
    61cc:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    61d0:	csel	x27, x9, x8, ne  // ne = any
    61d4:	cbz	x27, 61e8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xc0>
    61d8:	lsl	x0, x27, #3
    61dc:	bl	0 <_Znwm>
    61e0:	mov	x25, x0
    61e4:	b	61ec <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xc4>
    61e8:	mov	x25, xzr
    61ec:	add	x28, x25, x28, lsl #3
    61f0:	cmp	x24, #0x1
    61f4:	str	x21, [x28]
    61f8:	b.lt	620c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe4>  // b.tstop
    61fc:	mov	x0, x25
    6200:	mov	x1, x23
    6204:	mov	x2, x24
    6208:	bl	0 <memmove>
    620c:	add	x24, x28, #0x8
    6210:	cbz	x23, 621c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xf4>
    6214:	mov	x0, x23
    6218:	bl	0 <_ZdlPv>
    621c:	add	x9, x25, x27, lsl #3
    6220:	mov	x8, x26
    6224:	stp	x25, x24, [x22, #184]
    6228:	str	x9, [x8]
    622c:	ldr	x3, [x22, #8]
    6230:	add	x2, x22, #0x10
    6234:	add	x0, sp, #0x8
    6238:	mov	x1, x21
    623c:	mov	w4, wzr
    6240:	mov	x5, x20
    6244:	bl	7990 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE>
    6248:	ldr	x0, [sp, #8]
    624c:	mov	w1, #0x8                   	// #8
    6250:	mov	w2, #0x3                   	// #3
    6254:	str	x19, [sp, #664]
    6258:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    625c:	ldr	x0, [sp, #8]
    6260:	mov	w8, #0x2                   	// #2
    6264:	add	x9, sp, #0x2a0
    6268:	str	x8, [sp, #672]
    626c:	mov	w8, #0x1                   	// #1
    6270:	add	x2, sp, #0x2b8
    6274:	mov	w1, #0x1                   	// #1
    6278:	mov	w3, wzr
    627c:	str	x9, [sp, #696]
    6280:	str	x8, [sp, #704]
    6284:	add	x19, sp, #0x2b8
    6288:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    628c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6290:	ldr	d0, [x8]
    6294:	ldr	x9, [sp, #24]
    6298:	add	x19, x19, #0x10
    629c:	str	x19, [sp, #696]
    62a0:	str	d0, [sp, #704]
    62a4:	ldr	x8, [x9, #216]
    62a8:	cbz	x8, 6314 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x1ec>
    62ac:	ldr	x9, [x9, #208]
    62b0:	mov	w10, #0x1                   	// #1
    62b4:	b	62d0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x1a8>
    62b8:	mov	w10, wzr
    62bc:	sxtb	w11, w11
    62c0:	tbnz	w11, #31, 6330 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x208>
    62c4:	subs	x8, x8, #0x1
    62c8:	add	x9, x9, #0x1
    62cc:	b.eq	631c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x1f4>  // b.none
    62d0:	ldrb	w11, [x9]
    62d4:	tbz	w10, #0, 62b8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x190>
    62d8:	sub	w10, w11, #0x30
    62dc:	cmp	w10, #0xa
    62e0:	mov	w10, #0x1                   	// #1
    62e4:	b.cc	62bc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x194>  // b.lo, b.ul, b.last
    62e8:	and	w12, w11, #0xffffffdf
    62ec:	sub	w12, w12, #0x41
    62f0:	and	w12, w12, #0xff
    62f4:	cmp	w12, #0x1a
    62f8:	b.cc	62bc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x194>  // b.lo, b.ul, b.last
    62fc:	cmp	w11, #0x2e
    6300:	mov	w10, #0x1                   	// #1
    6304:	b.eq	62c4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x19c>  // b.none
    6308:	cmp	w11, #0x5f
    630c:	b.eq	62c4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x19c>  // b.none
    6310:	b	62b8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x190>
    6314:	add	x20, sp, #0x2b0
    6318:	b	6324 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x1fc>
    631c:	add	x20, sp, #0x2b0
    6320:	cbz	w10, 6340 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x218>
    6324:	mov	x22, xzr
    6328:	mov	w21, #0x8                   	// #8
    632c:	b	6348 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x220>
    6330:	add	x20, sp, #0x2b0
    6334:	mov	w21, #0x2                   	// #2
    6338:	mov	w22, #0x8                   	// #8
    633c:	b	6348 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x220>
    6340:	mov	w21, #0x2                   	// #2
    6344:	mov	w22, #0x7                   	// #7
    6348:	mov	w0, #0x220                 	// #544
    634c:	bl	0 <_Znwm>
    6350:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6354:	ldr	x8, [x8]
    6358:	movi	v0.2s, #0x1
    635c:	str	d0, [x0, #8]
    6360:	movi	v0.2d, #0x0
    6364:	mov	x9, x0
    6368:	add	x8, x8, #0x10
    636c:	mov	x1, x0
    6370:	str	x8, [x0]
    6374:	mov	w8, #0x10                  	// #16
    6378:	stp	q0, q0, [x0, #48]
    637c:	stp	q0, q0, [x0, #80]
    6380:	stp	q0, q0, [x0, #112]
    6384:	stp	q0, q0, [x0, #144]
    6388:	stp	q0, q0, [x0, #176]
    638c:	stp	q0, q0, [x0, #208]
    6390:	stp	q0, q0, [x0, #240]
    6394:	stp	q0, q0, [x0, #272]
    6398:	stp	q0, q0, [x0, #304]
    639c:	stp	q0, q0, [x0, #336]
    63a0:	stp	q0, q0, [x0, #368]
    63a4:	stp	q0, q0, [x0, #400]
    63a8:	stp	q0, q0, [x0, #432]
    63ac:	stp	q0, q0, [x0, #464]
    63b0:	stp	q0, q0, [x0, #496]
    63b4:	str	q0, [x9, #32]!
    63b8:	str	q0, [x0, #528]
    63bc:	str	x9, [x1, #16]!
    63c0:	str	x8, [x9]
    63c4:	mov	w8, #0xff                  	// #255
    63c8:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    63cc:	ldr	d0, [x9]
    63d0:	strb	w8, [x0, #40]
    63d4:	ldr	w8, [x20]
    63d8:	ldur	w10, [x20, #3]
    63dc:	ldr	x20, [sp, #8]
    63e0:	mov	w9, #0x6                   	// #6
    63e4:	strb	w9, [x0, #56]
    63e8:	mov	w9, #0x3                   	// #3
    63ec:	str	x22, [x0, #64]
    63f0:	str	xzr, [x0, #48]
    63f4:	strb	w21, [x0, #72]
    63f8:	str	w10, [x0, #76]
    63fc:	stur	w8, [x0, #73]
    6400:	str	d0, [x0, #24]
    6404:	str	w9, [x0, #24]
    6408:	str	x0, [sp, #680]
    640c:	mov	x0, x20
    6410:	str	x1, [sp, #672]
    6414:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6418:	ldp	x1, x8, [x20, #32]
    641c:	add	x21, x20, #0x18
    6420:	cmp	x1, x8
    6424:	b.eq	6448 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x320>  // b.none
    6428:	str	xzr, [x1, #8]
    642c:	ldr	q0, [sp, #672]
    6430:	add	x22, x1, #0x10
    6434:	str	xzr, [sp, #680]
    6438:	str	q0, [x1]
    643c:	str	xzr, [sp, #672]
    6440:	str	x22, [x20, #32]
    6444:	b	6458 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x330>
    6448:	add	x2, sp, #0x2a0
    644c:	mov	x0, x21
    6450:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6454:	ldr	x22, [x20, #32]
    6458:	ldr	x20, [sp, #680]
    645c:	ldr	x21, [x21]
    6460:	cbz	x20, 64e4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3bc>
    6464:	adrp	x23, 0 <__pthread_key_create>
    6468:	ldr	x23, [x23]
    646c:	add	x8, x20, #0x8
    6470:	cbz	x23, 6490 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x368>
    6474:	ldaxr	w9, [x8]
    6478:	sub	w10, w9, #0x1
    647c:	stlxr	w11, w10, [x8]
    6480:	cbnz	w11, 6474 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x34c>
    6484:	cmp	w9, #0x1
    6488:	b.eq	64a4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x37c>  // b.none
    648c:	b	64e4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3bc>
    6490:	ldr	w9, [x8]
    6494:	sub	w10, w9, #0x1
    6498:	str	w10, [x8]
    649c:	cmp	w9, #0x1
    64a0:	b.ne	64e4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3bc>  // b.any
    64a4:	mov	x24, x20
    64a8:	ldr	x8, [x24], #12
    64ac:	mov	x0, x20
    64b0:	ldr	x8, [x8, #16]
    64b4:	blr	x8
    64b8:	cbz	x23, 6f00 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdd8>
    64bc:	ldaxr	w8, [x24]
    64c0:	sub	w9, w8, #0x1
    64c4:	stlxr	w10, w9, [x24]
    64c8:	cbnz	w10, 64bc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x394>
    64cc:	cmp	w8, #0x1
    64d0:	b.ne	64e4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3bc>  // b.any
    64d4:	ldr	x8, [x20]
    64d8:	mov	x0, x20
    64dc:	ldr	x8, [x8, #24]
    64e0:	blr	x8
    64e4:	ldr	x8, [sp, #24]
    64e8:	ldr	x20, [x8, #216]
    64ec:	cbz	x20, 6554 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x42c>
    64f0:	ldr	x23, [x8, #208]
    64f4:	ldr	w8, [sp, #704]
    64f8:	ldr	w9, [sp, #708]
    64fc:	ldrb	w24, [x23]
    6500:	cmp	w8, w9
    6504:	b.cs	6538 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x410>  // b.hs, b.nlast
    6508:	ldr	x9, [sp, #696]
    650c:	str	w24, [x9, w8, uxtw #2]
    6510:	ldr	w8, [sp, #704]
    6514:	ldr	w9, [sp, #708]
    6518:	cmp	w8, w9
    651c:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6520:	add	w8, w8, #0x1
    6524:	subs	x20, x20, #0x1
    6528:	add	x23, x23, #0x1
    652c:	str	w8, [sp, #704]
    6530:	b.ne	64fc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3d4>  // b.any
    6534:	b	6554 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x42c>
    6538:	add	x0, sp, #0x2b8
    653c:	mov	w3, #0x4                   	// #4
    6540:	mov	x1, x19
    6544:	mov	x2, xzr
    6548:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    654c:	ldr	w8, [sp, #704]
    6550:	b	6508 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3e0>
    6554:	ldr	x0, [sp, #8]
    6558:	sub	x8, x22, x21
    655c:	lsr	x8, x8, #4
    6560:	add	w3, w8, #0x3
    6564:	add	x2, sp, #0x2b8
    6568:	mov	w1, #0x10                  	// #16
    656c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6570:	ldr	x8, [sp, #24]
    6574:	str	wzr, [sp, #704]
    6578:	adrp	x22, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    657c:	add	x22, x22, #0x0
    6580:	ldr	x23, [x8, #16]
    6584:	add	x24, x8, #0x8
    6588:	cmp	x24, x23
    658c:	b.eq	67c0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x698>  // b.none
    6590:	ldrb	w8, [x23]
    6594:	tbnz	w8, #2, 6f50 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe28>
    6598:	ldr	x21, [sp, #16]
    659c:	sub	x8, x23, #0x38
    65a0:	cmp	x23, #0x0
    65a4:	csel	x20, xzr, x8, eq  // eq = none
    65a8:	mov	x0, x20
    65ac:	bl	0 <_ZNK4llvm5Value7getNameEv>
    65b0:	mov	x2, x0
    65b4:	mov	x3, x1
    65b8:	mov	x0, x21
    65bc:	mov	x1, x2
    65c0:	mov	x2, x3
    65c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    65c8:	ldr	w8, [sp, #704]
    65cc:	ldr	w9, [sp, #708]
    65d0:	mov	x21, x0
    65d4:	cmp	w8, w9
    65d8:	b.cs	6714 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x5ec>  // b.hs, b.nlast
    65dc:	ldr	x9, [sp, #696]
    65e0:	str	w21, [x9, w8, uxtw #2]
    65e4:	ldr	w8, [sp, #704]
    65e8:	ldr	w9, [sp, #708]
    65ec:	cmp	w8, w9
    65f0:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    65f4:	add	w8, w8, #0x1
    65f8:	mov	x0, x20
    65fc:	str	w8, [sp, #704]
    6600:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6604:	ldr	w8, [sp, #704]
    6608:	ldr	w9, [sp, #708]
    660c:	mov	x21, x1
    6610:	cmp	w8, w9
    6614:	b.cs	6730 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x608>  // b.hs, b.nlast
    6618:	ldr	x9, [sp, #696]
    661c:	str	w21, [x9, w8, uxtw #2]
    6620:	ldr	w8, [sp, #704]
    6624:	ldr	w9, [sp, #708]
    6628:	cmp	w8, w9
    662c:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6630:	add	w8, w8, #0x1
    6634:	cmp	w8, w9
    6638:	str	w8, [sp, #704]
    663c:	b.cs	674c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x624>  // b.hs, b.nlast
    6640:	ldr	x9, [sp, #696]
    6644:	str	wzr, [x9, w8, uxtw #2]
    6648:	ldr	w8, [sp, #704]
    664c:	ldr	w9, [sp, #708]
    6650:	cmp	w8, w9
    6654:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6658:	add	w8, w8, #0x1
    665c:	cmp	w8, w9
    6660:	str	w8, [sp, #704]
    6664:	b.cs	6768 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x640>  // b.hs, b.nlast
    6668:	ldr	x9, [sp, #696]
    666c:	str	wzr, [x9, w8, uxtw #2]
    6670:	ldr	w8, [sp, #704]
    6674:	ldr	w9, [sp, #708]
    6678:	cmp	w8, w9
    667c:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6680:	add	w8, w8, #0x1
    6684:	cmp	w8, w9
    6688:	str	w8, [sp, #704]
    668c:	b.cs	6784 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x65c>  // b.hs, b.nlast
    6690:	ldr	x9, [sp, #696]
    6694:	str	wzr, [x9, w8, uxtw #2]
    6698:	ldr	w8, [sp, #704]
    669c:	ldr	w9, [sp, #708]
    66a0:	cmp	w8, w9
    66a4:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    66a8:	add	w8, w8, #0x1
    66ac:	str	w8, [sp, #704]
    66b0:	ldr	w10, [x20, #32]
    66b4:	and	x10, x10, #0xf
    66b8:	cmp	w10, #0xb
    66bc:	b.cs	6f38 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe10>  // b.hs, b.nlast
    66c0:	ldr	w20, [x22, x10, lsl #2]
    66c4:	cmp	w8, w9
    66c8:	b.cs	67a0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x678>  // b.hs, b.nlast
    66cc:	ldr	x9, [sp, #696]
    66d0:	str	w20, [x9, w8, uxtw #2]
    66d4:	ldr	w8, [sp, #704]
    66d8:	ldr	w9, [sp, #708]
    66dc:	cmp	w8, w9
    66e0:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    66e4:	ldr	x0, [sp, #8]
    66e8:	add	w8, w8, #0x1
    66ec:	add	x2, sp, #0x2b8
    66f0:	mov	w1, #0x7                   	// #7
    66f4:	mov	w3, wzr
    66f8:	str	w8, [sp, #704]
    66fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6700:	str	wzr, [sp, #704]
    6704:	ldr	x23, [x23, #8]
    6708:	cmp	x24, x23
    670c:	b.ne	6590 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x468>  // b.any
    6710:	b	67bc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x694>
    6714:	add	x0, sp, #0x2b8
    6718:	mov	w3, #0x4                   	// #4
    671c:	mov	x1, x19
    6720:	mov	x2, xzr
    6724:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6728:	ldr	w8, [sp, #704]
    672c:	b	65dc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x4b4>
    6730:	add	x0, sp, #0x2b8
    6734:	mov	w3, #0x4                   	// #4
    6738:	mov	x1, x19
    673c:	mov	x2, xzr
    6740:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6744:	ldr	w8, [sp, #704]
    6748:	b	6618 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x4f0>
    674c:	add	x0, sp, #0x2b8
    6750:	mov	w3, #0x4                   	// #4
    6754:	mov	x1, x19
    6758:	mov	x2, xzr
    675c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6760:	ldr	w8, [sp, #704]
    6764:	b	6640 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x518>
    6768:	add	x0, sp, #0x2b8
    676c:	mov	w3, #0x4                   	// #4
    6770:	mov	x1, x19
    6774:	mov	x2, xzr
    6778:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    677c:	ldr	w8, [sp, #704]
    6780:	b	6668 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x540>
    6784:	add	x0, sp, #0x2b8
    6788:	mov	w3, #0x4                   	// #4
    678c:	mov	x1, x19
    6790:	mov	x2, xzr
    6794:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6798:	ldr	w8, [sp, #704]
    679c:	b	6690 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x568>
    67a0:	add	x0, sp, #0x2b8
    67a4:	mov	w3, #0x4                   	// #4
    67a8:	mov	x1, x19
    67ac:	mov	x2, xzr
    67b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    67b4:	ldr	w8, [sp, #704]
    67b8:	b	66cc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x5a4>
    67bc:	ldr	x8, [sp, #24]
    67c0:	ldr	x23, [x8, #32]
    67c4:	add	x24, x8, #0x18
    67c8:	cmp	x24, x23
    67cc:	b.eq	6a00 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x8d8>  // b.none
    67d0:	ldrb	w8, [x23]
    67d4:	tbnz	w8, #2, 6f70 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe48>
    67d8:	ldr	x21, [sp, #16]
    67dc:	sub	x8, x23, #0x38
    67e0:	cmp	x23, #0x0
    67e4:	csel	x20, xzr, x8, eq  // eq = none
    67e8:	mov	x0, x20
    67ec:	bl	0 <_ZNK4llvm5Value7getNameEv>
    67f0:	mov	x2, x0
    67f4:	mov	x3, x1
    67f8:	mov	x0, x21
    67fc:	mov	x1, x2
    6800:	mov	x2, x3
    6804:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6808:	ldr	w8, [sp, #704]
    680c:	ldr	w9, [sp, #708]
    6810:	mov	x21, x0
    6814:	cmp	w8, w9
    6818:	b.cs	6954 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x82c>  // b.hs, b.nlast
    681c:	ldr	x9, [sp, #696]
    6820:	str	w21, [x9, w8, uxtw #2]
    6824:	ldr	w8, [sp, #704]
    6828:	ldr	w9, [sp, #708]
    682c:	cmp	w8, w9
    6830:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6834:	add	w8, w8, #0x1
    6838:	mov	x0, x20
    683c:	str	w8, [sp, #704]
    6840:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6844:	ldr	w8, [sp, #704]
    6848:	ldr	w9, [sp, #708]
    684c:	mov	x21, x1
    6850:	cmp	w8, w9
    6854:	b.cs	6970 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x848>  // b.hs, b.nlast
    6858:	ldr	x9, [sp, #696]
    685c:	str	w21, [x9, w8, uxtw #2]
    6860:	ldr	w8, [sp, #704]
    6864:	ldr	w9, [sp, #708]
    6868:	cmp	w8, w9
    686c:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6870:	add	w8, w8, #0x1
    6874:	cmp	w8, w9
    6878:	str	w8, [sp, #704]
    687c:	b.cs	698c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x864>  // b.hs, b.nlast
    6880:	ldr	x9, [sp, #696]
    6884:	str	wzr, [x9, w8, uxtw #2]
    6888:	ldr	w8, [sp, #704]
    688c:	ldr	w9, [sp, #708]
    6890:	cmp	w8, w9
    6894:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6898:	add	w8, w8, #0x1
    689c:	cmp	w8, w9
    68a0:	str	w8, [sp, #704]
    68a4:	b.cs	69a8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x880>  // b.hs, b.nlast
    68a8:	ldr	x9, [sp, #696]
    68ac:	str	wzr, [x9, w8, uxtw #2]
    68b0:	ldr	w8, [sp, #704]
    68b4:	ldr	w9, [sp, #708]
    68b8:	cmp	w8, w9
    68bc:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    68c0:	add	w8, w8, #0x1
    68c4:	cmp	w8, w9
    68c8:	str	w8, [sp, #704]
    68cc:	b.cs	69c4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x89c>  // b.hs, b.nlast
    68d0:	ldr	x9, [sp, #696]
    68d4:	str	wzr, [x9, w8, uxtw #2]
    68d8:	ldr	w8, [sp, #704]
    68dc:	ldr	w9, [sp, #708]
    68e0:	cmp	w8, w9
    68e4:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    68e8:	add	w8, w8, #0x1
    68ec:	str	w8, [sp, #704]
    68f0:	ldr	w10, [x20, #32]
    68f4:	and	x10, x10, #0xf
    68f8:	cmp	w10, #0xb
    68fc:	b.cs	6f38 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe10>  // b.hs, b.nlast
    6900:	ldr	w20, [x22, x10, lsl #2]
    6904:	cmp	w8, w9
    6908:	b.cs	69e0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x8b8>  // b.hs, b.nlast
    690c:	ldr	x9, [sp, #696]
    6910:	str	w20, [x9, w8, uxtw #2]
    6914:	ldr	w8, [sp, #704]
    6918:	ldr	w9, [sp, #708]
    691c:	cmp	w8, w9
    6920:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6924:	ldr	x0, [sp, #8]
    6928:	add	w8, w8, #0x1
    692c:	add	x2, sp, #0x2b8
    6930:	mov	w1, #0x8                   	// #8
    6934:	mov	w3, wzr
    6938:	str	w8, [sp, #704]
    693c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6940:	str	wzr, [sp, #704]
    6944:	ldr	x23, [x23, #8]
    6948:	cmp	x24, x23
    694c:	b.ne	67d0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x6a8>  // b.any
    6950:	b	69fc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x8d4>
    6954:	add	x0, sp, #0x2b8
    6958:	mov	w3, #0x4                   	// #4
    695c:	mov	x1, x19
    6960:	mov	x2, xzr
    6964:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6968:	ldr	w8, [sp, #704]
    696c:	b	681c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x6f4>
    6970:	add	x0, sp, #0x2b8
    6974:	mov	w3, #0x4                   	// #4
    6978:	mov	x1, x19
    697c:	mov	x2, xzr
    6980:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6984:	ldr	w8, [sp, #704]
    6988:	b	6858 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x730>
    698c:	add	x0, sp, #0x2b8
    6990:	mov	w3, #0x4                   	// #4
    6994:	mov	x1, x19
    6998:	mov	x2, xzr
    699c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    69a0:	ldr	w8, [sp, #704]
    69a4:	b	6880 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x758>
    69a8:	add	x0, sp, #0x2b8
    69ac:	mov	w3, #0x4                   	// #4
    69b0:	mov	x1, x19
    69b4:	mov	x2, xzr
    69b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    69bc:	ldr	w8, [sp, #704]
    69c0:	b	68a8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x780>
    69c4:	add	x0, sp, #0x2b8
    69c8:	mov	w3, #0x4                   	// #4
    69cc:	mov	x1, x19
    69d0:	mov	x2, xzr
    69d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    69d8:	ldr	w8, [sp, #704]
    69dc:	b	68d0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x7a8>
    69e0:	add	x0, sp, #0x2b8
    69e4:	mov	w3, #0x4                   	// #4
    69e8:	mov	x1, x19
    69ec:	mov	x2, xzr
    69f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    69f4:	ldr	w8, [sp, #704]
    69f8:	b	690c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x7e4>
    69fc:	ldr	x8, [sp, #24]
    6a00:	ldr	x23, [x8, #48]
    6a04:	add	x24, x8, #0x28
    6a08:	cmp	x24, x23
    6a0c:	b.eq	6c40 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xb18>  // b.none
    6a10:	ldrb	w8, [x23]
    6a14:	tbnz	w8, #2, 6f90 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe68>
    6a18:	ldr	x21, [sp, #16]
    6a1c:	sub	x8, x23, #0x30
    6a20:	cmp	x23, #0x0
    6a24:	csel	x20, xzr, x8, eq  // eq = none
    6a28:	mov	x0, x20
    6a2c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6a30:	mov	x2, x0
    6a34:	mov	x3, x1
    6a38:	mov	x0, x21
    6a3c:	mov	x1, x2
    6a40:	mov	x2, x3
    6a44:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6a48:	ldr	w8, [sp, #704]
    6a4c:	ldr	w9, [sp, #708]
    6a50:	mov	x21, x0
    6a54:	cmp	w8, w9
    6a58:	b.cs	6b94 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xa6c>  // b.hs, b.nlast
    6a5c:	ldr	x9, [sp, #696]
    6a60:	str	w21, [x9, w8, uxtw #2]
    6a64:	ldr	w8, [sp, #704]
    6a68:	ldr	w9, [sp, #708]
    6a6c:	cmp	w8, w9
    6a70:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6a74:	add	w8, w8, #0x1
    6a78:	mov	x0, x20
    6a7c:	str	w8, [sp, #704]
    6a80:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6a84:	ldr	w8, [sp, #704]
    6a88:	ldr	w9, [sp, #708]
    6a8c:	mov	x21, x1
    6a90:	cmp	w8, w9
    6a94:	b.cs	6bb0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xa88>  // b.hs, b.nlast
    6a98:	ldr	x9, [sp, #696]
    6a9c:	str	w21, [x9, w8, uxtw #2]
    6aa0:	ldr	w8, [sp, #704]
    6aa4:	ldr	w9, [sp, #708]
    6aa8:	cmp	w8, w9
    6aac:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6ab0:	add	w8, w8, #0x1
    6ab4:	cmp	w8, w9
    6ab8:	str	w8, [sp, #704]
    6abc:	b.cs	6bcc <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xaa4>  // b.hs, b.nlast
    6ac0:	ldr	x9, [sp, #696]
    6ac4:	str	wzr, [x9, w8, uxtw #2]
    6ac8:	ldr	w8, [sp, #704]
    6acc:	ldr	w9, [sp, #708]
    6ad0:	cmp	w8, w9
    6ad4:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6ad8:	add	w8, w8, #0x1
    6adc:	cmp	w8, w9
    6ae0:	str	w8, [sp, #704]
    6ae4:	b.cs	6be8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xac0>  // b.hs, b.nlast
    6ae8:	ldr	x9, [sp, #696]
    6aec:	str	wzr, [x9, w8, uxtw #2]
    6af0:	ldr	w8, [sp, #704]
    6af4:	ldr	w9, [sp, #708]
    6af8:	cmp	w8, w9
    6afc:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6b00:	add	w8, w8, #0x1
    6b04:	cmp	w8, w9
    6b08:	str	w8, [sp, #704]
    6b0c:	b.cs	6c04 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xadc>  // b.hs, b.nlast
    6b10:	ldr	x9, [sp, #696]
    6b14:	str	wzr, [x9, w8, uxtw #2]
    6b18:	ldr	w8, [sp, #704]
    6b1c:	ldr	w9, [sp, #708]
    6b20:	cmp	w8, w9
    6b24:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6b28:	add	w8, w8, #0x1
    6b2c:	str	w8, [sp, #704]
    6b30:	ldr	w10, [x20, #32]
    6b34:	and	x10, x10, #0xf
    6b38:	cmp	w10, #0xb
    6b3c:	b.cs	6f38 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe10>  // b.hs, b.nlast
    6b40:	ldr	w20, [x22, x10, lsl #2]
    6b44:	cmp	w8, w9
    6b48:	b.cs	6c20 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xaf8>  // b.hs, b.nlast
    6b4c:	ldr	x9, [sp, #696]
    6b50:	str	w20, [x9, w8, uxtw #2]
    6b54:	ldr	w8, [sp, #704]
    6b58:	ldr	w9, [sp, #708]
    6b5c:	cmp	w8, w9
    6b60:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6b64:	ldr	x0, [sp, #8]
    6b68:	add	w8, w8, #0x1
    6b6c:	add	x2, sp, #0x2b8
    6b70:	mov	w1, #0xe                   	// #14
    6b74:	mov	w3, wzr
    6b78:	str	w8, [sp, #704]
    6b7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6b80:	str	wzr, [sp, #704]
    6b84:	ldr	x23, [x23, #8]
    6b88:	cmp	x24, x23
    6b8c:	b.ne	6a10 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x8e8>  // b.any
    6b90:	b	6c3c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xb14>
    6b94:	add	x0, sp, #0x2b8
    6b98:	mov	w3, #0x4                   	// #4
    6b9c:	mov	x1, x19
    6ba0:	mov	x2, xzr
    6ba4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6ba8:	ldr	w8, [sp, #704]
    6bac:	b	6a5c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x934>
    6bb0:	add	x0, sp, #0x2b8
    6bb4:	mov	w3, #0x4                   	// #4
    6bb8:	mov	x1, x19
    6bbc:	mov	x2, xzr
    6bc0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6bc4:	ldr	w8, [sp, #704]
    6bc8:	b	6a98 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x970>
    6bcc:	add	x0, sp, #0x2b8
    6bd0:	mov	w3, #0x4                   	// #4
    6bd4:	mov	x1, x19
    6bd8:	mov	x2, xzr
    6bdc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6be0:	ldr	w8, [sp, #704]
    6be4:	b	6ac0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x998>
    6be8:	add	x0, sp, #0x2b8
    6bec:	mov	w3, #0x4                   	// #4
    6bf0:	mov	x1, x19
    6bf4:	mov	x2, xzr
    6bf8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6bfc:	ldr	w8, [sp, #704]
    6c00:	b	6ae8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x9c0>
    6c04:	add	x0, sp, #0x2b8
    6c08:	mov	w3, #0x4                   	// #4
    6c0c:	mov	x1, x19
    6c10:	mov	x2, xzr
    6c14:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6c18:	ldr	w8, [sp, #704]
    6c1c:	b	6b10 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x9e8>
    6c20:	add	x0, sp, #0x2b8
    6c24:	mov	w3, #0x4                   	// #4
    6c28:	mov	x1, x19
    6c2c:	mov	x2, xzr
    6c30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6c34:	ldr	w8, [sp, #704]
    6c38:	b	6b4c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xa24>
    6c3c:	ldr	x8, [sp, #24]
    6c40:	ldr	x23, [x8, #64]
    6c44:	add	x24, x8, #0x38
    6c48:	cmp	x24, x23
    6c4c:	b.eq	6e7c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xd54>  // b.none
    6c50:	ldrb	w8, [x23]
    6c54:	tbnz	w8, #2, 6fb0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe88>
    6c58:	ldr	x21, [sp, #16]
    6c5c:	sub	x8, x23, #0x30
    6c60:	cmp	x23, #0x0
    6c64:	csel	x20, xzr, x8, eq  // eq = none
    6c68:	mov	x0, x20
    6c6c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6c70:	mov	x2, x0
    6c74:	mov	x3, x1
    6c78:	mov	x0, x21
    6c7c:	mov	x1, x2
    6c80:	mov	x2, x3
    6c84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6c88:	ldr	w8, [sp, #704]
    6c8c:	ldr	w9, [sp, #708]
    6c90:	mov	x21, x0
    6c94:	cmp	w8, w9
    6c98:	b.cs	6dd4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xcac>  // b.hs, b.nlast
    6c9c:	ldr	x9, [sp, #696]
    6ca0:	str	w21, [x9, w8, uxtw #2]
    6ca4:	ldr	w8, [sp, #704]
    6ca8:	ldr	w9, [sp, #708]
    6cac:	cmp	w8, w9
    6cb0:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6cb4:	add	w8, w8, #0x1
    6cb8:	mov	x0, x20
    6cbc:	str	w8, [sp, #704]
    6cc0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    6cc4:	ldr	w8, [sp, #704]
    6cc8:	ldr	w9, [sp, #708]
    6ccc:	mov	x21, x1
    6cd0:	cmp	w8, w9
    6cd4:	b.cs	6df0 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xcc8>  // b.hs, b.nlast
    6cd8:	ldr	x9, [sp, #696]
    6cdc:	str	w21, [x9, w8, uxtw #2]
    6ce0:	ldr	w8, [sp, #704]
    6ce4:	ldr	w9, [sp, #708]
    6ce8:	cmp	w8, w9
    6cec:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6cf0:	add	w8, w8, #0x1
    6cf4:	cmp	w8, w9
    6cf8:	str	w8, [sp, #704]
    6cfc:	b.cs	6e0c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xce4>  // b.hs, b.nlast
    6d00:	ldr	x9, [sp, #696]
    6d04:	str	wzr, [x9, w8, uxtw #2]
    6d08:	ldr	w8, [sp, #704]
    6d0c:	ldr	w9, [sp, #708]
    6d10:	cmp	w8, w9
    6d14:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6d18:	add	w8, w8, #0x1
    6d1c:	cmp	w8, w9
    6d20:	str	w8, [sp, #704]
    6d24:	b.cs	6e28 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xd00>  // b.hs, b.nlast
    6d28:	ldr	x9, [sp, #696]
    6d2c:	str	wzr, [x9, w8, uxtw #2]
    6d30:	ldr	w8, [sp, #704]
    6d34:	ldr	w9, [sp, #708]
    6d38:	cmp	w8, w9
    6d3c:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6d40:	add	w8, w8, #0x1
    6d44:	cmp	w8, w9
    6d48:	str	w8, [sp, #704]
    6d4c:	b.cs	6e44 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xd1c>  // b.hs, b.nlast
    6d50:	ldr	x9, [sp, #696]
    6d54:	str	wzr, [x9, w8, uxtw #2]
    6d58:	ldr	w8, [sp, #704]
    6d5c:	ldr	w9, [sp, #708]
    6d60:	cmp	w8, w9
    6d64:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6d68:	add	w8, w8, #0x1
    6d6c:	str	w8, [sp, #704]
    6d70:	ldr	w10, [x20, #32]
    6d74:	and	x10, x10, #0xf
    6d78:	cmp	w10, #0xb
    6d7c:	b.cs	6f38 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xe10>  // b.hs, b.nlast
    6d80:	ldr	w20, [x22, x10, lsl #2]
    6d84:	cmp	w8, w9
    6d88:	b.cs	6e60 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xd38>  // b.hs, b.nlast
    6d8c:	ldr	x9, [sp, #696]
    6d90:	str	w20, [x9, w8, uxtw #2]
    6d94:	ldr	w8, [sp, #704]
    6d98:	ldr	w9, [sp, #708]
    6d9c:	cmp	w8, w9
    6da0:	b.cs	6f18 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xdf0>  // b.hs, b.nlast
    6da4:	ldr	x0, [sp, #8]
    6da8:	add	w8, w8, #0x1
    6dac:	add	x2, sp, #0x2b8
    6db0:	mov	w1, #0x12                  	// #18
    6db4:	mov	w3, wzr
    6db8:	str	w8, [sp, #704]
    6dbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6dc0:	str	wzr, [sp, #704]
    6dc4:	ldr	x23, [x23, #8]
    6dc8:	cmp	x24, x23
    6dcc:	b.ne	6c50 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xb28>  // b.any
    6dd0:	b	6e7c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xd54>
    6dd4:	add	x0, sp, #0x2b8
    6dd8:	mov	w3, #0x4                   	// #4
    6ddc:	mov	x1, x19
    6de0:	mov	x2, xzr
    6de4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6de8:	ldr	w8, [sp, #704]
    6dec:	b	6c9c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xb74>
    6df0:	add	x0, sp, #0x2b8
    6df4:	mov	w3, #0x4                   	// #4
    6df8:	mov	x1, x19
    6dfc:	mov	x2, xzr
    6e00:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6e04:	ldr	w8, [sp, #704]
    6e08:	b	6cd8 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xbb0>
    6e0c:	add	x0, sp, #0x2b8
    6e10:	mov	w3, #0x4                   	// #4
    6e14:	mov	x1, x19
    6e18:	mov	x2, xzr
    6e1c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6e20:	ldr	w8, [sp, #704]
    6e24:	b	6d00 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xbd8>
    6e28:	add	x0, sp, #0x2b8
    6e2c:	mov	w3, #0x4                   	// #4
    6e30:	mov	x1, x19
    6e34:	mov	x2, xzr
    6e38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6e3c:	ldr	w8, [sp, #704]
    6e40:	b	6d28 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xc00>
    6e44:	add	x0, sp, #0x2b8
    6e48:	mov	w3, #0x4                   	// #4
    6e4c:	mov	x1, x19
    6e50:	mov	x2, xzr
    6e54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6e58:	ldr	w8, [sp, #704]
    6e5c:	b	6d50 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xc28>
    6e60:	add	x0, sp, #0x2b8
    6e64:	mov	w3, #0x4                   	// #4
    6e68:	mov	x1, x19
    6e6c:	mov	x2, xzr
    6e70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    6e74:	ldr	w8, [sp, #704]
    6e78:	b	6d8c <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xc64>
    6e7c:	ldr	x0, [sp, #696]
    6e80:	add	x8, sp, #0x2b8
    6e84:	add	x8, x8, #0x10
    6e88:	cmp	x0, x8
    6e8c:	b.eq	6e94 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xd6c>  // b.none
    6e90:	bl	0 <free>
    6e94:	add	x0, sp, #0x8
    6e98:	add	x19, sp, #0x8
    6e9c:	bl	e36c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv>
    6ea0:	ldr	x8, [sp, #664]
    6ea4:	ldr	x0, [sp, #8]
    6ea8:	mov	w9, #0x5                   	// #5
    6eac:	add	x2, sp, #0x2b8
    6eb0:	mov	w1, #0x11                  	// #17
    6eb4:	mov	w3, wzr
    6eb8:	str	x8, [sp, #696]
    6ebc:	str	x9, [sp, #704]
    6ec0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ec4:	ldr	x0, [sp, #8]
    6ec8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ecc:	ldr	x1, [sp, #616]
    6ed0:	add	x0, x19, #0x250
    6ed4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ed8:	add	x0, x19, #0x18
    6edc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ee0:	add	sp, sp, #0x3d0
    6ee4:	ldp	x20, x19, [sp, #80]
    6ee8:	ldp	x22, x21, [sp, #64]
    6eec:	ldp	x24, x23, [sp, #48]
    6ef0:	ldp	x26, x25, [sp, #32]
    6ef4:	ldp	x28, x27, [sp, #16]
    6ef8:	ldp	x29, x30, [sp], #96
    6efc:	ret
    6f00:	ldr	w8, [x24]
    6f04:	sub	w9, w8, #0x1
    6f08:	str	w9, [x24]
    6f0c:	cmp	w8, #0x1
    6f10:	b.eq	64d4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3ac>  // b.none
    6f14:	b	64e4 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0x3bc>
    6f18:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f1c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f20:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f24:	add	x0, x0, #0x0
    6f28:	add	x1, x1, #0x0
    6f2c:	add	x3, x3, #0x0
    6f30:	mov	w2, #0x43                  	// #67
    6f34:	bl	0 <__assert_fail>
    6f38:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f3c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f40:	add	x0, x0, #0x0
    6f44:	add	x1, x1, #0x0
    6f48:	mov	w2, #0x3e3                 	// #995
    6f4c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    6f50:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f54:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f58:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f5c:	add	x0, x0, #0x0
    6f60:	add	x1, x1, #0x0
    6f64:	add	x3, x3, #0x0
    6f68:	mov	w2, #0x8b                  	// #139
    6f6c:	bl	0 <__assert_fail>
    6f70:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f74:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f78:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f7c:	add	x0, x0, #0x0
    6f80:	add	x1, x1, #0x0
    6f84:	add	x3, x3, #0x0
    6f88:	mov	w2, #0x8b                  	// #139
    6f8c:	bl	0 <__assert_fail>
    6f90:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f94:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f98:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6f9c:	add	x0, x0, #0x0
    6fa0:	add	x1, x1, #0x0
    6fa4:	add	x3, x3, #0x0
    6fa8:	mov	w2, #0x8b                  	// #139
    6fac:	bl	0 <__assert_fail>
    6fb0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6fb4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6fb8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6fbc:	add	x0, x0, #0x0
    6fc0:	add	x1, x1, #0x0
    6fc4:	add	x3, x3, #0x0
    6fc8:	mov	w2, #0x8b                  	// #139
    6fcc:	bl	0 <__assert_fail>
    6fd0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6fd4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6fd8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6fdc:	add	x0, x0, #0x0
    6fe0:	add	x1, x1, #0x0
    6fe4:	add	x3, x3, #0x0
    6fe8:	mov	w2, #0x122b                	// #4651
    6fec:	bl	0 <__assert_fail>
    6ff0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ff4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ff8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    6ffc:	add	x0, x0, #0x0
    7000:	add	x1, x1, #0x0
    7004:	add	x3, x3, #0x0
    7008:	mov	w2, #0x1231                	// #4657
    700c:	bl	0 <__assert_fail>
    7010:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7014:	add	x0, x0, #0x0
    7018:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000701c <_ZN4llvm26WriteThinLinkBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE>:
    701c:	sub	sp, sp, #0x120
    7020:	stp	x29, x30, [sp, #224]
    7024:	stp	x28, x23, [sp, #240]
    7028:	stp	x22, x21, [sp, #256]
    702c:	stp	x20, x19, [sp, #272]
    7030:	add	x29, sp, #0xe0
    7034:	sub	x8, x29, #0x10
    7038:	add	x19, x8, #0x10
    703c:	mov	x21, x3
    7040:	mov	x22, x2
    7044:	mov	x20, x1
    7048:	mov	x23, x0
    704c:	sub	x0, x29, #0x10
    7050:	mov	w2, #0x40000               	// #262144
    7054:	mov	w3, #0x1                   	// #1
    7058:	mov	x1, x19
    705c:	stp	x19, xzr, [x29, #-16]
    7060:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7064:	mov	x0, sp
    7068:	sub	x1, x29, #0x10
    706c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7070:	mov	x0, sp
    7074:	mov	x1, x23
    7078:	mov	x2, x22
    707c:	mov	x3, x21
    7080:	bl	6128 <_ZN4llvm13BitcodeWriter20writeThinLinkBitcodeERKNS_6ModuleERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE>
    7084:	mov	x0, sp
    7088:	bl	754 <_ZN4llvm13BitcodeWriter11writeSymtabEv>
    708c:	mov	x0, sp
    7090:	bl	928 <_ZN4llvm13BitcodeWriter11writeStrtabEv>
    7094:	ldur	w2, [x29, #-8]
    7098:	cbz	w2, 70d8 <_ZN4llvm26WriteThinLinkBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xbc>
    709c:	ldur	x1, [x29, #-16]
    70a0:	mov	x0, x20
    70a4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    70a8:	mov	x0, sp
    70ac:	bl	3f8 <_ZN4llvm13BitcodeWriterD1Ev>
    70b0:	ldur	x0, [x29, #-16]
    70b4:	cmp	x0, x19
    70b8:	b.eq	70c0 <_ZN4llvm26WriteThinLinkBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamERKNS_18ModuleSummaryIndexERKSt5arrayIjLm5EE+0xa4>  // b.none
    70bc:	bl	0 <free>
    70c0:	ldp	x20, x19, [sp, #272]
    70c4:	ldp	x22, x21, [sp, #256]
    70c8:	ldp	x28, x23, [sp, #240]
    70cc:	ldp	x29, x30, [sp, #224]
    70d0:	add	sp, sp, #0x120
    70d4:	ret
    70d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    70dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    70e0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    70e4:	add	x0, x0, #0x0
    70e8:	add	x1, x1, #0x0
    70ec:	add	x3, x3, #0x0
    70f0:	mov	w2, #0x9e                  	// #158
    70f4:	bl	0 <__assert_fail>

00000000000070f8 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE>:
    70f8:	sub	sp, sp, #0x190
    70fc:	stp	x29, x30, [sp, #304]
    7100:	stp	x28, x27, [sp, #320]
    7104:	stp	x26, x25, [sp, #336]
    7108:	stp	x24, x23, [sp, #352]
    710c:	stp	x22, x21, [sp, #368]
    7110:	stp	x20, x19, [sp, #384]
    7114:	add	x29, sp, #0x130
    7118:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    711c:	ldr	d0, [x9]
    7120:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7124:	sub	x8, x29, #0x28
    7128:	sub	x10, x29, #0x70
    712c:	stur	d0, [x29, #-32]
    7130:	ldr	d0, [x9]
    7134:	add	x11, x8, #0x10
    7138:	add	x8, x10, #0x28
    713c:	stur	x11, [x29, #-40]
    7140:	stp	xzr, x8, [x29, #-112]
    7144:	stur	x8, [x29, #-96]
    7148:	stur	d0, [x29, #-88]
    714c:	stur	wzr, [x29, #-80]
    7150:	mov	x19, x0
    7154:	ldr	x0, [x0]
    7158:	str	x4, [sp, #40]
    715c:	str	w3, [sp, #52]
    7160:	mov	w25, w2
    7164:	mov	x24, x1
    7168:	str	x11, [sp, #32]
    716c:	add	x21, x10, #0x18
    7170:	add	x22, x10, #0x1c
    7174:	bl	0 <_ZN4llvm4Type9getInt8TyERNS_11LLVMContextE>
    7178:	mov	w1, wzr
    717c:	bl	0 <_ZNK4llvm4Type12getPointerToEj>
    7180:	mov	x20, x0
    7184:	sub	x1, x29, #0x70
    7188:	mov	w2, #0x1                   	// #1
    718c:	mov	x0, x19
    7190:	bl	0 <_ZN4llvm26collectUsedGlobalVariablesERKNS_6ModuleERNS_15SmallPtrSetImplIPNS_11GlobalValueEEEb>
    7194:	ldp	x8, x28, [x29, #-104]
    7198:	mov	x26, x0
    719c:	cmp	x28, x8
    71a0:	csel	x8, x22, x21, eq  // eq = none
    71a4:	ldr	w8, [x8]
    71a8:	add	x21, x28, x8, lsl #3
    71ac:	cbz	w8, 71d4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0xdc>
    71b0:	lsl	x9, x8, #3
    71b4:	add	x8, x9, x28
    71b8:	ldr	x10, [x28]
    71bc:	cmn	x10, #0x2
    71c0:	b.cc	71d4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0xdc>  // b.lo, b.ul, b.last
    71c4:	subs	x9, x9, #0x8
    71c8:	add	x28, x28, #0x8
    71cc:	b.ne	71b8 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0xc0>  // b.any
    71d0:	mov	x28, x8
    71d4:	cmp	x28, x21
    71d8:	b.eq	731c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x224>  // b.none
    71dc:	ldur	x22, [x29, #-112]
    71e0:	mov	w23, #0x7564                	// #30052
    71e4:	movk	w23, #0x656c, lsl #16
    71e8:	cmp	x28, x21
    71ec:	b.cs	7890 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x798>  // b.hs, b.nlast
    71f0:	ldr	x27, [x28]
    71f4:	mov	x0, x27
    71f8:	bl	0 <_ZNK4llvm5Value7getNameEv>
    71fc:	cmp	x1, #0x14
    7200:	b.ne	7244 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x14c>  // b.any
    7204:	ldp	x8, x9, [x0]
    7208:	mov	x11, #0x6c6c                	// #27756
    720c:	movk	x11, #0x6d76, lsl #16
    7210:	movk	x11, #0x652e, lsl #32
    7214:	movk	x11, #0x626d, lsl #48
    7218:	eor	x8, x8, x11
    721c:	mov	x11, #0x6465                	// #25701
    7220:	ldr	w10, [x0, #16]
    7224:	movk	x11, #0x6564, lsl #16
    7228:	movk	x11, #0x2e64, lsl #32
    722c:	movk	x11, #0x6f6d, lsl #48
    7230:	eor	x9, x9, x11
    7234:	eor	x10, x10, x23
    7238:	orr	x8, x8, x9
    723c:	orr	x8, x8, x10
    7240:	cbz	x8, 72bc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1c4>
    7244:	mov	x0, x27
    7248:	bl	0 <_ZNK4llvm5Value7getNameEv>
    724c:	cmp	x1, #0xc
    7250:	b.ne	7284 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x18c>  // b.any
    7254:	ldr	x8, [x0]
    7258:	mov	x10, #0x6c6c                	// #27756
    725c:	movk	x10, #0x6d76, lsl #16
    7260:	ldr	w9, [x0, #8]
    7264:	movk	x10, #0x632e, lsl #32
    7268:	movk	x10, #0x646d, lsl #48
    726c:	eor	x8, x8, x10
    7270:	mov	w10, #0x696c                	// #26988
    7274:	movk	w10, #0x656e, lsl #16
    7278:	eor	x9, x9, x10
    727c:	orr	x8, x8, x9
    7280:	cbz	x8, 72bc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1c4>
    7284:	mov	x0, x27
    7288:	mov	x1, x20
    728c:	bl	0 <_ZN4llvm12ConstantExpr32getPointerBitCastOrAddrSpaceCastEPNS_8ConstantEPNS_4TypeE>
    7290:	ldp	w8, w9, [x29, #-32]
    7294:	mov	x27, x0
    7298:	cmp	w8, w9
    729c:	b.cs	7300 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x208>  // b.hs, b.nlast
    72a0:	ldur	x9, [x29, #-40]
    72a4:	str	x27, [x9, w8, uxtw #3]
    72a8:	ldp	w8, w9, [x29, #-32]
    72ac:	cmp	w8, w9
    72b0:	b.cs	7870 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x778>  // b.hs, b.nlast
    72b4:	add	w8, w8, #0x1
    72b8:	stur	w8, [x29, #-32]
    72bc:	ldur	x8, [x29, #-112]
    72c0:	cmp	x8, x22
    72c4:	b.ne	78b0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x7b8>  // b.any
    72c8:	add	x28, x28, #0x8
    72cc:	cmp	x28, x21
    72d0:	b.hi	78d0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x7d8>  // b.pmore
    72d4:	b.eq	731c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x224>  // b.none
    72d8:	ldr	x8, [x28]
    72dc:	cmn	x8, #0x2
    72e0:	b.cc	72f4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1fc>  // b.lo, b.ul, b.last
    72e4:	add	x28, x28, #0x8
    72e8:	cmp	x21, x28
    72ec:	b.ne	72d8 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1e0>  // b.any
    72f0:	b	731c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x224>
    72f4:	cmp	x21, x28
    72f8:	b.ne	71e8 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0xf0>  // b.any
    72fc:	b	731c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x224>
    7300:	ldr	x1, [sp, #32]
    7304:	sub	x0, x29, #0x28
    7308:	mov	w3, #0x8                   	// #8
    730c:	mov	x2, xzr
    7310:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7314:	ldur	w8, [x29, #-32]
    7318:	b	72a0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x1a8>
    731c:	cbz	x26, 7328 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x230>
    7320:	mov	x0, x26
    7324:	bl	0 <_ZN4llvm14GlobalVariable15eraseFromParentEv>
    7328:	sub	x8, x29, #0x90
    732c:	add	x9, x19, #0xf0
    7330:	mov	w10, #0x104                 	// #260
    7334:	add	x28, x8, #0x10
    7338:	add	x0, sp, #0x68
    733c:	add	x1, sp, #0x38
    7340:	sturb	wzr, [x29, #-128]
    7344:	strh	w10, [sp, #72]
    7348:	stp	x28, xzr, [x29, #-144]
    734c:	stp	x9, xzr, [sp, #56]
    7350:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
    7354:	mov	x27, xzr
    7358:	mov	x26, xzr
    735c:	tbz	w25, #0, 7460 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x368>
    7360:	ldr	x27, [x24, #8]
    7364:	cbz	x27, 73cc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d4>
    7368:	ldr	x26, [x24]
    736c:	ldrb	w8, [x26]
    7370:	cmp	w8, #0x42
    7374:	b.eq	73a8 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2b0>  // b.none
    7378:	cmp	w8, #0xde
    737c:	b.ne	73cc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d4>  // b.any
    7380:	ldrb	w8, [x26, #1]
    7384:	cmp	w8, #0xc0
    7388:	b.ne	73cc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d4>  // b.any
    738c:	ldrb	w8, [x26, #2]
    7390:	cmp	w8, #0x17
    7394:	b.ne	73cc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d4>  // b.any
    7398:	ldrb	w8, [x26, #3]
    739c:	cmp	w8, #0xb
    73a0:	b.ne	73cc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d4>  // b.any
    73a4:	b	7460 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x368>
    73a8:	ldrb	w8, [x26, #1]
    73ac:	cmp	w8, #0x43
    73b0:	b.ne	73cc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d4>  // b.any
    73b4:	ldrb	w8, [x26, #2]
    73b8:	cmp	w8, #0xc0
    73bc:	b.ne	73cc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x2d4>  // b.any
    73c0:	ldrb	w8, [x26, #3]
    73c4:	cmp	w8, #0xde
    73c8:	b.eq	7460 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x368>  // b.none
    73cc:	stp	xzr, xzr, [sp, #72]
    73d0:	adrp	x9, 0 <_ZTVN4llvm18raw_string_ostreamE>
    73d4:	ldr	x9, [x9]
    73d8:	mov	w8, #0x1                   	// #1
    73dc:	sub	x10, x29, #0x90
    73e0:	str	w8, [sp, #88]
    73e4:	add	x8, x9, #0x10
    73e8:	add	x1, sp, #0x38
    73ec:	mov	w2, #0x1                   	// #1
    73f0:	mov	x0, x19
    73f4:	mov	x3, xzr
    73f8:	mov	w4, wzr
    73fc:	mov	x5, xzr
    7400:	stp	x8, xzr, [sp, #56]
    7404:	str	x10, [sp, #96]
    7408:	bl	5d20 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
    740c:	ldr	x8, [sp, #80]
    7410:	ldr	x9, [sp, #64]
    7414:	cmp	x8, x9
    7418:	b.eq	744c <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x354>  // b.none
    741c:	add	x0, sp, #0x38
    7420:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    7424:	ldr	x8, [sp, #96]
    7428:	ldr	x9, [sp, #80]
    742c:	ldr	x10, [sp, #64]
    7430:	ldr	x26, [x8]
    7434:	cmp	x9, x10
    7438:	b.eq	7454 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x35c>  // b.none
    743c:	add	x0, sp, #0x38
    7440:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    7444:	ldr	x8, [sp, #96]
    7448:	b	7454 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x35c>
    744c:	ldr	x8, [sp, #96]
    7450:	ldr	x26, [x8]
    7454:	ldr	x27, [x8, #8]
    7458:	add	x0, sp, #0x38
    745c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    7460:	ldr	x0, [x19]
    7464:	mov	w1, #0x8                   	// #8
    7468:	bl	0 <_ZN4llvm4Type9getIntNTyERNS_11LLVMContextEj>
    746c:	mov	x1, x27
    7470:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    7474:	mov	x2, x0
    7478:	mov	x0, x26
    747c:	mov	x1, x27
    7480:	bl	0 <_ZN4llvm22ConstantDataSequential7getImplENS_9StringRefEPNS_4TypeE>
    7484:	mov	x25, x0
    7488:	mov	w0, #0x58                  	// #88
    748c:	mov	w1, #0x1                   	// #1
    7490:	bl	0 <_ZN4llvm4UsernwEmj>
    7494:	ldr	x2, [x25]
    7498:	mov	w8, #0x101                 	// #257
    749c:	add	x6, sp, #0x38
    74a0:	mov	w3, #0x1                   	// #1
    74a4:	mov	w4, #0x8                   	// #8
    74a8:	mov	x1, x19
    74ac:	mov	x5, x25
    74b0:	mov	x7, xzr
    74b4:	mov	x24, x0
    74b8:	stp	xzr, xzr, [sp, #56]
    74bc:	strh	w8, [sp, #72]
    74c0:	strb	wzr, [sp, #16]
    74c4:	str	wzr, [sp, #8]
    74c8:	str	wzr, [sp]
    74cc:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    74d0:	ldr	w8, [sp, #156]
    74d4:	cmp	w8, #0x5
    74d8:	b.hi	7910 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x818>  // b.pmore
    74dc:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    74e0:	add	x9, x9, #0x0
    74e4:	adr	x10, 74fc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x404>
    74e8:	ldrh	w11, [x9, x8, lsl #1]
    74ec:	add	x10, x10, x11, lsl #2
    74f0:	adrp	x25, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    74f4:	add	x25, x25, #0x0
    74f8:	br	x10
    74fc:	adrp	x25, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7500:	add	x25, x25, #0x0
    7504:	mov	x0, x25
    7508:	bl	0 <strlen>
    750c:	mov	x2, x0
    7510:	mov	x0, x24
    7514:	mov	x1, x25
    7518:	bl	0 <_ZN4llvm12GlobalObject10setSectionENS_9StringRefE>
    751c:	mov	x0, x24
    7520:	mov	x1, x20
    7524:	bl	0 <_ZN4llvm12ConstantExpr32getPointerBitCastOrAddrSpaceCastEPNS_8ConstantEPNS_4TypeE>
    7528:	ldp	w8, w9, [x29, #-32]
    752c:	mov	x25, x0
    7530:	cmp	w8, w9
    7534:	b.cs	7838 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x740>  // b.hs, b.nlast
    7538:	ldur	x9, [x29, #-40]
    753c:	str	x25, [x9, w8, uxtw #3]
    7540:	ldp	w8, w9, [x29, #-32]
    7544:	cmp	w8, w9
    7548:	b.cs	7870 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x778>  // b.hs, b.nlast
    754c:	adrp	x26, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7550:	add	x26, x26, #0x0
    7554:	add	w8, w8, #0x1
    7558:	mov	w2, #0x14                  	// #20
    755c:	mov	w3, #0x1                   	// #1
    7560:	mov	x0, x19
    7564:	mov	x1, x26
    7568:	stur	w8, [x29, #-32]
    756c:	bl	0 <_ZNK4llvm6Module17getGlobalVariableENS_9StringRefEb>
    7570:	cbz	x0, 75ac <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x4b4>
    7574:	mov	x25, x0
    7578:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    757c:	ldr	x8, [x25, #8]
    7580:	cbz	x8, 78f0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x7f8>
    7584:	ldr	x8, [x8, #8]
    7588:	cbnz	x8, 78f0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x7f8>
    758c:	mov	x0, x24
    7590:	mov	x1, x25
    7594:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    7598:	mov	x0, x25
    759c:	bl	0 <_ZN4llvm14GlobalVariable15eraseFromParentEv>
    75a0:	ldr	w8, [sp, #52]
    75a4:	tbnz	w8, #0, 75cc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x4d4>
    75a8:	b	7718 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x620>
    75ac:	mov	w8, #0x103                 	// #259
    75b0:	add	x1, sp, #0x38
    75b4:	mov	x0, x24
    75b8:	stp	x26, xzr, [sp, #56]
    75bc:	strh	w8, [sp, #72]
    75c0:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    75c4:	ldr	w8, [sp, #52]
    75c8:	tbz	w8, #0, 7718 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x620>
    75cc:	ldr	x8, [sp, #40]
    75d0:	ldr	x0, [x19]
    75d4:	mov	w1, #0x8                   	// #8
    75d8:	ldp	x23, x8, [x8]
    75dc:	sub	x22, x8, x23
    75e0:	bl	0 <_ZN4llvm4Type9getIntNTyERNS_11LLVMContextEj>
    75e4:	mov	x1, x22
    75e8:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    75ec:	mov	x2, x0
    75f0:	mov	x0, x23
    75f4:	mov	x1, x22
    75f8:	bl	0 <_ZN4llvm22ConstantDataSequential7getImplENS_9StringRefEPNS_4TypeE>
    75fc:	mov	x23, x0
    7600:	mov	w0, #0x58                  	// #88
    7604:	mov	w1, #0x1                   	// #1
    7608:	bl	0 <_ZN4llvm4UsernwEmj>
    760c:	ldr	x2, [x23]
    7610:	mov	w8, #0x101                 	// #257
    7614:	add	x6, sp, #0x38
    7618:	mov	w3, #0x1                   	// #1
    761c:	mov	w4, #0x8                   	// #8
    7620:	mov	x1, x19
    7624:	mov	x5, x23
    7628:	mov	x7, xzr
    762c:	mov	x22, x0
    7630:	stp	xzr, xzr, [sp, #56]
    7634:	strh	w8, [sp, #72]
    7638:	strb	wzr, [sp, #16]
    763c:	str	wzr, [sp, #8]
    7640:	str	wzr, [sp]
    7644:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    7648:	ldr	w8, [sp, #156]
    764c:	cmp	w8, #0x5
    7650:	b.hi	7960 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x868>  // b.pmore
    7654:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7658:	add	x9, x9, #0x0
    765c:	adr	x10, 7674 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x57c>
    7660:	ldrb	w11, [x9, x8]
    7664:	add	x10, x10, x11, lsl #2
    7668:	adrp	x23, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    766c:	add	x23, x23, #0x0
    7670:	br	x10
    7674:	adrp	x23, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7678:	add	x23, x23, #0x0
    767c:	mov	x0, x23
    7680:	bl	0 <strlen>
    7684:	mov	x2, x0
    7688:	mov	x0, x22
    768c:	mov	x1, x23
    7690:	bl	0 <_ZN4llvm12GlobalObject10setSectionENS_9StringRefE>
    7694:	mov	x0, x22
    7698:	mov	x1, x20
    769c:	bl	0 <_ZN4llvm12ConstantExpr32getPointerBitCastOrAddrSpaceCastEPNS_8ConstantEPNS_4TypeE>
    76a0:	ldp	w8, w9, [x29, #-32]
    76a4:	mov	x23, x0
    76a8:	cmp	w8, w9
    76ac:	b.cs	7854 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x75c>  // b.hs, b.nlast
    76b0:	ldur	x9, [x29, #-40]
    76b4:	str	x23, [x9, w8, uxtw #3]
    76b8:	ldp	w8, w9, [x29, #-32]
    76bc:	cmp	w8, w9
    76c0:	b.cs	7870 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x778>  // b.hs, b.nlast
    76c4:	adrp	x23, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    76c8:	add	x23, x23, #0x0
    76cc:	add	w8, w8, #0x1
    76d0:	mov	w2, #0xc                   	// #12
    76d4:	mov	w3, #0x1                   	// #1
    76d8:	mov	x0, x19
    76dc:	mov	x1, x23
    76e0:	stur	w8, [x29, #-32]
    76e4:	bl	0 <_ZNK4llvm6Module17getGlobalVariableENS_9StringRefEb>
    76e8:	cbz	x0, 7814 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x71c>
    76ec:	mov	x21, x0
    76f0:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    76f4:	ldr	x8, [x21, #8]
    76f8:	cbz	x8, 7940 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x848>
    76fc:	ldr	x8, [x8, #8]
    7700:	cbnz	x8, 7940 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x848>
    7704:	mov	x0, x22
    7708:	mov	x1, x21
    770c:	bl	0 <_ZN4llvm5Value8takeNameEPS0_>
    7710:	mov	x0, x21
    7714:	bl	0 <_ZN4llvm14GlobalVariable15eraseFromParentEv>
    7718:	ldur	w1, [x29, #-32]
    771c:	cbz	w1, 77a4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6ac>
    7720:	mov	x0, x20
    7724:	bl	0 <_ZN4llvm9ArrayType3getEPNS_4TypeEm>
    7728:	mov	x20, x0
    772c:	mov	w0, #0x58                  	// #88
    7730:	mov	w1, #0x1                   	// #1
    7734:	bl	0 <_ZN4llvm4UsernwEmj>
    7738:	ldur	x1, [x29, #-40]
    773c:	ldur	w2, [x29, #-32]
    7740:	mov	x21, x0
    7744:	mov	x0, x20
    7748:	bl	0 <_ZN4llvm13ConstantArray3getEPNS_9ArrayTypeENS_8ArrayRefIPNS_8ConstantEEE>
    774c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7750:	mov	x5, x0
    7754:	add	x8, x8, #0x0
    7758:	mov	w9, #0x103                 	// #259
    775c:	add	x6, sp, #0x38
    7760:	mov	w4, #0x6                   	// #6
    7764:	mov	x0, x21
    7768:	mov	x1, x19
    776c:	mov	x2, x20
    7770:	mov	w3, wzr
    7774:	mov	x7, xzr
    7778:	stp	x8, xzr, [sp, #56]
    777c:	strh	w9, [sp, #72]
    7780:	strb	wzr, [sp, #16]
    7784:	str	wzr, [sp, #8]
    7788:	str	wzr, [sp]
    778c:	bl	0 <_ZN4llvm14GlobalVariableC1ERNS_6ModuleEPNS_4TypeEbNS_11GlobalValue12LinkageTypesEPNS_8ConstantERKNS_5TwineEPS0_NS5_15ThreadLocalModeEjb>
    7790:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7794:	add	x1, x1, #0x0
    7798:	mov	w2, #0xd                   	// #13
    779c:	mov	x0, x21
    77a0:	bl	0 <_ZN4llvm12GlobalObject10setSectionENS_9StringRefE>
    77a4:	ldr	x0, [sp, #104]
    77a8:	add	x8, sp, #0x68
    77ac:	add	x8, x8, #0x10
    77b0:	cmp	x0, x8
    77b4:	b.eq	77bc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6c4>  // b.none
    77b8:	bl	0 <_ZdlPv>
    77bc:	ldur	x0, [x29, #-144]
    77c0:	cmp	x0, x28
    77c4:	b.eq	77cc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6d4>  // b.none
    77c8:	bl	0 <_ZdlPv>
    77cc:	ldp	x8, x0, [x29, #-104]
    77d0:	cmp	x0, x8
    77d4:	b.eq	77dc <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6e4>  // b.none
    77d8:	bl	0 <free>
    77dc:	ldur	x0, [x29, #-40]
    77e0:	sub	x8, x29, #0x28
    77e4:	add	x8, x8, #0x10
    77e8:	cmp	x0, x8
    77ec:	b.eq	77f4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6fc>  // b.none
    77f0:	bl	0 <free>
    77f4:	ldp	x20, x19, [sp, #384]
    77f8:	ldp	x22, x21, [sp, #368]
    77fc:	ldp	x24, x23, [sp, #352]
    7800:	ldp	x26, x25, [sp, #336]
    7804:	ldp	x28, x27, [sp, #320]
    7808:	ldp	x29, x30, [sp, #304]
    780c:	add	sp, sp, #0x190
    7810:	ret
    7814:	mov	w8, #0x103                 	// #259
    7818:	add	x1, sp, #0x38
    781c:	mov	x0, x22
    7820:	stp	x23, xzr, [sp, #56]
    7824:	strh	w8, [sp, #72]
    7828:	bl	0 <_ZN4llvm5Value7setNameERKNS_5TwineE>
    782c:	ldur	w1, [x29, #-32]
    7830:	cbnz	w1, 7720 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x628>
    7834:	b	77a4 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x6ac>
    7838:	ldr	x1, [sp, #32]
    783c:	sub	x0, x29, #0x28
    7840:	mov	w3, #0x8                   	// #8
    7844:	mov	x2, xzr
    7848:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    784c:	ldur	w8, [x29, #-32]
    7850:	b	7538 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x440>
    7854:	ldr	x1, [sp, #32]
    7858:	sub	x0, x29, #0x28
    785c:	mov	w3, #0x8                   	// #8
    7860:	mov	x2, xzr
    7864:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7868:	ldur	w8, [x29, #-32]
    786c:	b	76b0 <_ZN4llvm20EmbedBitcodeInModuleERNS_6ModuleENS_15MemoryBufferRefEbbPKSt6vectorIhSaIhEE+0x5b8>
    7870:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7874:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7878:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    787c:	add	x0, x0, #0x0
    7880:	add	x1, x1, #0x0
    7884:	add	x3, x3, #0x0
    7888:	mov	w2, #0x43                  	// #67
    788c:	bl	0 <__assert_fail>
    7890:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7894:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7898:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    789c:	add	x0, x0, #0x0
    78a0:	add	x1, x1, #0x0
    78a4:	add	x3, x3, #0x0
    78a8:	mov	w2, #0x121                 	// #289
    78ac:	bl	0 <__assert_fail>
    78b0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    78b4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    78b8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    78bc:	add	x0, x0, #0x0
    78c0:	add	x1, x1, #0x0
    78c4:	add	x3, x3, #0x0
    78c8:	mov	w2, #0x126                 	// #294
    78cc:	bl	0 <__assert_fail>
    78d0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    78d4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    78d8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    78dc:	add	x0, x0, #0x0
    78e0:	add	x1, x1, #0x0
    78e4:	add	x3, x3, #0x0
    78e8:	mov	w2, #0xf8                  	// #248
    78ec:	bl	0 <__assert_fail>
    78f0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    78f4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    78f8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    78fc:	add	x0, x0, #0x0
    7900:	add	x1, x1, #0x0
    7904:	add	x3, x3, #0x0
    7908:	mov	w2, #0x129b                	// #4763
    790c:	bl	0 <__assert_fail>
    7910:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7914:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7918:	add	x0, x0, #0x0
    791c:	add	x1, x1, #0x0
    7920:	mov	w2, #0x1257                	// #4695
    7924:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7928:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    792c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7930:	add	x0, x0, #0x0
    7934:	add	x1, x1, #0x0
    7938:	mov	w2, #0x1254                	// #4692
    793c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7940:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7944:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7948:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    794c:	add	x0, x0, #0x0
    7950:	add	x1, x1, #0x0
    7954:	add	x3, x3, #0x0
    7958:	mov	w2, #0x12b1                	// #4785
    795c:	bl	0 <__assert_fail>
    7960:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7964:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7968:	add	x0, x0, #0x0
    796c:	add	x1, x1, #0x0
    7970:	mov	w2, #0x1267                	// #4711
    7974:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    7978:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    797c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7980:	add	x0, x0, #0x0
    7984:	add	x1, x1, #0x0
    7988:	mov	w2, #0x1264                	// #4708
    798c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000007990 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE>:
    7990:	stp	x29, x30, [sp, #-96]!
    7994:	str	x27, [sp, #16]
    7998:	stp	x26, x25, [sp, #32]
    799c:	stp	x24, x23, [sp, #48]
    79a0:	stp	x22, x21, [sp, #64]
    79a4:	stp	x20, x19, [sp, #80]
    79a8:	mov	x29, sp
    79ac:	mov	x19, x0
    79b0:	stp	x3, x2, [x0]
    79b4:	str	x1, [x0, #16]
    79b8:	add	x0, x0, #0x18
    79bc:	and	w2, w4, #0x1
    79c0:	mov	x21, x5
    79c4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    79c8:	ldp	x10, x9, [x19, #136]
    79cc:	add	x8, x19, #0x258
    79d0:	str	x8, [x19, #616]
    79d4:	str	x8, [x19, #624]
    79d8:	sub	x8, x9, x10
    79dc:	lsr	x8, x8, #4
    79e0:	str	x21, [x19, #584]
    79e4:	str	wzr, [x19, #600]
    79e8:	str	xzr, [x19, #608]
    79ec:	str	xzr, [x19, #632]
    79f0:	str	xzr, [x19, #648]
    79f4:	str	w8, [x19, #640]
    79f8:	cbz	x21, 7ab0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x120>
    79fc:	ldr	x20, [x21, #24]
    7a00:	add	x22, x21, #0x8
    7a04:	cmp	x20, x22
    7a08:	b.eq	7ab0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x120>  // b.none
    7a0c:	add	x21, x19, #0x250
    7a10:	b	7a28 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x98>
    7a14:	mov	x0, x20
    7a18:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    7a1c:	mov	x20, x0
    7a20:	cmp	x0, x22
    7a24:	b.eq	7ab0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x120>  // b.none
    7a28:	ldp	x23, x24, [x20, #56]
    7a2c:	b	7a34 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xa4>
    7a30:	add	x23, x23, #0x8
    7a34:	cmp	x23, x24
    7a38:	b.eq	7a14 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x84>  // b.none
    7a3c:	ldr	x8, [x23]
    7a40:	cbz	x8, 7acc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x13c>
    7a44:	ldr	w9, [x8, #8]
    7a48:	cmp	w9, #0x1
    7a4c:	b.ne	7a30 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xa0>  // b.any
    7a50:	ldp	x25, x8, [x8, #80]
    7a54:	subs	x8, x8, x25
    7a58:	b.eq	7a30 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xa0>  // b.none
    7a5c:	asr	x8, x8, #4
    7a60:	lsl	x26, x8, #4
    7a64:	b	7a98 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0x108>
    7a68:	ldr	x8, [x8]
    7a6c:	add	x1, x29, #0x18
    7a70:	mov	x0, x21
    7a74:	str	x8, [x29, #24]
    7a78:	ldr	w8, [x19, #640]
    7a7c:	add	w27, w8, #0x1
    7a80:	str	w27, [x19, #640]
    7a84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7a88:	str	w27, [x0]
    7a8c:	subs	x26, x26, #0x10
    7a90:	add	x25, x25, #0x10
    7a94:	b.eq	7a30 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xa0>  // b.none
    7a98:	ldr	x9, [x25]
    7a9c:	and	x8, x9, #0xfffffffffffffff8
    7aa0:	tbz	w9, #0, 7a68 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xd8>
    7aa4:	ldr	x9, [x8, #8]
    7aa8:	cbnz	x9, 7a8c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xfc>
    7aac:	b	7a68 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBaseC2ERKN4llvm6ModuleERNS1_18StringTableBuilderERNS1_15BitstreamWriterEbPKNS1_18ModuleSummaryIndexE+0xd8>
    7ab0:	ldp	x20, x19, [sp, #80]
    7ab4:	ldp	x22, x21, [sp, #64]
    7ab8:	ldp	x24, x23, [sp, #48]
    7abc:	ldp	x26, x25, [sp, #32]
    7ac0:	ldr	x27, [sp, #16]
    7ac4:	ldp	x29, x30, [sp], #96
    7ac8:	ret
    7acc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ad0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ad4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7ad8:	add	x0, x0, #0x0
    7adc:	add	x1, x1, #0x0
    7ae0:	add	x3, x3, #0x0
    7ae4:	mov	w2, #0x69                  	// #105
    7ae8:	bl	0 <__assert_fail>

0000000000007aec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv>:
    7aec:	sub	sp, sp, #0x1a0
    7af0:	str	d8, [sp, #304]
    7af4:	stp	x29, x30, [sp, #320]
    7af8:	stp	x28, x27, [sp, #336]
    7afc:	stp	x26, x25, [sp, #352]
    7b00:	stp	x24, x23, [sp, #368]
    7b04:	stp	x22, x21, [sp, #384]
    7b08:	stp	x20, x19, [sp, #400]
    7b0c:	add	x29, sp, #0x130
    7b10:	mov	x19, x0
    7b14:	ldr	x0, [x0]
    7b18:	sub	x25, x29, #0x10
    7b1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7b20:	mov	w0, #0x220                 	// #544
    7b24:	bl	0 <_Znwm>
    7b28:	adrp	x27, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7b2c:	ldr	x27, [x27]
    7b30:	movi	v0.2s, #0x1
    7b34:	mov	x23, x0
    7b38:	str	d0, [x23, #8]!
    7b3c:	movi	v0.2d, #0x0
    7b40:	mov	x22, x0
    7b44:	add	x12, x27, #0x10
    7b48:	mov	x21, x0
    7b4c:	mov	w8, #0x20                  	// #32
    7b50:	mov	w9, #0x3                   	// #3
    7b54:	str	x12, [x0]
    7b58:	mov	w12, #0x1                   	// #1
    7b5c:	stp	q0, q0, [x0, #48]
    7b60:	stp	q0, q0, [x0, #80]
    7b64:	stp	q0, q0, [x0, #112]
    7b68:	stp	q0, q0, [x0, #144]
    7b6c:	stp	q0, q0, [x0, #176]
    7b70:	stp	q0, q0, [x0, #208]
    7b74:	stp	q0, q0, [x0, #240]
    7b78:	stp	q0, q0, [x0, #272]
    7b7c:	stp	q0, q0, [x0, #304]
    7b80:	stp	q0, q0, [x0, #336]
    7b84:	stp	q0, q0, [x0, #368]
    7b88:	stp	q0, q0, [x0, #400]
    7b8c:	stp	q0, q0, [x0, #432]
    7b90:	stp	q0, q0, [x0, #464]
    7b94:	stp	q0, q0, [x0, #496]
    7b98:	str	q0, [x22, #32]!
    7b9c:	ldur	w11, [x25, #3]
    7ba0:	str	q0, [x0, #528]
    7ba4:	str	x22, [x21, #16]!
    7ba8:	stp	w12, w8, [x0, #24]
    7bac:	str	x9, [x22]
    7bb0:	ldur	w9, [x29, #-16]
    7bb4:	mov	w8, #0x8                   	// #8
    7bb8:	mov	w10, #0x2                   	// #2
    7bbc:	str	x8, [x0, #48]
    7bc0:	str	w11, [x0, #44]
    7bc4:	stur	w9, [x0, #41]
    7bc8:	ldp	w8, w9, [x0, #24]
    7bcc:	strb	w10, [x0, #40]
    7bd0:	ldur	w10, [x29, #-16]
    7bd4:	ldur	w12, [x25, #3]
    7bd8:	mov	w11, #0x4                   	// #4
    7bdc:	cmp	w8, w9
    7be0:	strb	w11, [x0, #56]
    7be4:	str	w12, [x0, #60]
    7be8:	stur	w10, [x0, #57]
    7bec:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    7bf0:	add	w8, w8, #0x1
    7bf4:	mov	x20, x0
    7bf8:	cmp	w8, w9
    7bfc:	str	w8, [x0, #24]
    7c00:	b.cs	abb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x30c4>  // b.hs, b.nlast
    7c04:	ldr	x9, [x20, #16]
    7c08:	mov	w10, #0x6                   	// #6
    7c0c:	add	x8, x9, w8, uxtw #4
    7c10:	str	xzr, [x8]
    7c14:	strb	w10, [x8, #8]
    7c18:	ldur	w9, [x25, #3]
    7c1c:	ldur	w10, [x29, #-16]
    7c20:	str	w9, [x8, #12]
    7c24:	stur	w10, [x8, #9]
    7c28:	ldp	w8, w9, [x20, #24]
    7c2c:	cmp	w8, w9
    7c30:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    7c34:	add	w8, w8, #0x1
    7c38:	cmp	w8, w9
    7c3c:	str	w8, [x20, #24]
    7c40:	b.cs	abcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x30e0>  // b.hs, b.nlast
    7c44:	ldr	x9, [x20, #16]
    7c48:	mov	w10, #0x8                   	// #8
    7c4c:	mov	w11, #0x2                   	// #2
    7c50:	add	x8, x9, w8, uxtw #4
    7c54:	str	x10, [x8]
    7c58:	strb	w11, [x8, #8]
    7c5c:	ldur	w9, [x25, #3]
    7c60:	ldur	w10, [x29, #-16]
    7c64:	str	w9, [x8, #12]
    7c68:	stur	w10, [x8, #9]
    7c6c:	ldp	w8, w9, [x20, #24]
    7c70:	cmp	w8, w9
    7c74:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    7c78:	add	w8, w8, #0x1
    7c7c:	str	w8, [x20, #24]
    7c80:	adrp	x26, 0 <__pthread_key_create>
    7c84:	ldr	x0, [x19]
    7c88:	ldr	x26, [x26]
    7c8c:	stp	x21, x20, [x29, #-32]
    7c90:	cbz	x26, 7ca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bc>
    7c94:	ldaxr	w8, [x23]
    7c98:	add	w8, w8, #0x1
    7c9c:	stlxr	w9, w8, [x23]
    7ca0:	cbnz	w9, 7c94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1a8>
    7ca4:	b	7cb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1c8>
    7ca8:	ldr	w8, [x23]
    7cac:	add	w8, w8, #0x1
    7cb0:	str	w8, [x23]
    7cb4:	sub	x2, x29, #0x20
    7cb8:	mov	w1, #0xe                   	// #14
    7cbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7cc0:	ldur	x22, [x29, #-24]
    7cc4:	mov	w21, w0
    7cc8:	cbz	x22, 7d44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x258>
    7ccc:	add	x8, x22, #0x8
    7cd0:	cbz	x26, 7cf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x204>
    7cd4:	ldaxr	w9, [x8]
    7cd8:	sub	w10, w9, #0x1
    7cdc:	stlxr	w11, w10, [x8]
    7ce0:	cbnz	w11, 7cd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e8>
    7ce4:	cmp	w9, #0x1
    7ce8:	b.eq	7d04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x218>  // b.none
    7cec:	b	7d44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x258>
    7cf0:	ldr	w9, [x8]
    7cf4:	sub	w10, w9, #0x1
    7cf8:	str	w10, [x8]
    7cfc:	cmp	w9, #0x1
    7d00:	b.ne	7d44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x258>  // b.any
    7d04:	mov	x24, x22
    7d08:	ldr	x8, [x24], #12
    7d0c:	mov	x0, x22
    7d10:	ldr	x8, [x8, #16]
    7d14:	blr	x8
    7d18:	cbz	x26, aa00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f14>
    7d1c:	ldaxr	w8, [x24]
    7d20:	sub	w9, w8, #0x1
    7d24:	stlxr	w10, w9, [x24]
    7d28:	cbnz	w10, 7d1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x230>
    7d2c:	cmp	w8, #0x1
    7d30:	b.ne	7d44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x258>  // b.any
    7d34:	ldr	x8, [x22]
    7d38:	mov	x0, x22
    7d3c:	ldr	x8, [x8, #24]
    7d40:	blr	x8
    7d44:	cmp	w21, #0x4
    7d48:	b.ne	b028 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x353c>  // b.any
    7d4c:	cbz	x26, 7d6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x280>
    7d50:	ldaxr	w8, [x23]
    7d54:	sub	w9, w8, #0x1
    7d58:	stlxr	w10, w9, [x23]
    7d5c:	cbnz	w10, 7d50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x264>
    7d60:	cmp	w8, #0x1
    7d64:	b.eq	7d80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x294>  // b.none
    7d68:	b	7dc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d4>
    7d6c:	ldr	w8, [x23]
    7d70:	sub	w9, w8, #0x1
    7d74:	str	w9, [x23]
    7d78:	cmp	w8, #0x1
    7d7c:	b.ne	7dc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d4>  // b.any
    7d80:	ldr	x8, [x20]
    7d84:	mov	x0, x20
    7d88:	add	x21, x20, #0xc
    7d8c:	ldr	x8, [x8, #16]
    7d90:	blr	x8
    7d94:	cbz	x26, a850 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d64>
    7d98:	ldaxr	w8, [x21]
    7d9c:	sub	w9, w8, #0x1
    7da0:	stlxr	w10, w9, [x21]
    7da4:	cbnz	w10, 7d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ac>
    7da8:	cmp	w8, #0x1
    7dac:	b.ne	7dc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d4>  // b.any
    7db0:	ldr	x8, [x20]
    7db4:	mov	x0, x20
    7db8:	ldr	x8, [x8, #24]
    7dbc:	blr	x8
    7dc0:	mov	w0, #0x220                 	// #544
    7dc4:	bl	0 <_Znwm>
    7dc8:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7dcc:	ldr	d8, [x9]
    7dd0:	movi	v0.2s, #0x1
    7dd4:	mov	x23, x0
    7dd8:	add	x8, x27, #0x10
    7ddc:	str	d0, [x23, #8]!
    7de0:	movi	v0.2d, #0x0
    7de4:	mov	x22, x0
    7de8:	mov	x21, x0
    7dec:	mov	w10, #0x1                   	// #1
    7df0:	str	x8, [x0]
    7df4:	stp	q0, q0, [x0, #48]
    7df8:	stp	q0, q0, [x0, #80]
    7dfc:	stp	q0, q0, [x0, #112]
    7e00:	stp	q0, q0, [x0, #144]
    7e04:	stp	q0, q0, [x0, #176]
    7e08:	stp	q0, q0, [x0, #208]
    7e0c:	stp	q0, q0, [x0, #240]
    7e10:	stp	q0, q0, [x0, #272]
    7e14:	stp	q0, q0, [x0, #304]
    7e18:	stp	q0, q0, [x0, #336]
    7e1c:	stp	q0, q0, [x0, #368]
    7e20:	stp	q0, q0, [x0, #400]
    7e24:	stp	q0, q0, [x0, #432]
    7e28:	stp	q0, q0, [x0, #464]
    7e2c:	stp	q0, q0, [x0, #496]
    7e30:	str	q0, [x22, #32]!
    7e34:	str	q0, [x0, #528]
    7e38:	str	x22, [x21, #16]!
    7e3c:	str	d8, [x0, #24]
    7e40:	str	x10, [x22]
    7e44:	ldp	w8, w9, [x0, #24]
    7e48:	ldur	w12, [x25, #3]
    7e4c:	ldur	w10, [x29, #-16]
    7e50:	mov	w11, #0xff                  	// #255
    7e54:	cmp	w8, w9
    7e58:	strb	w11, [x0, #40]
    7e5c:	str	w12, [x0, #44]
    7e60:	stur	w10, [x0, #41]
    7e64:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    7e68:	add	w8, w8, #0x1
    7e6c:	mov	x20, x0
    7e70:	cmp	w8, w9
    7e74:	str	w8, [x0, #24]
    7e78:	b.cs	abe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x30fc>  // b.hs, b.nlast
    7e7c:	ldr	x9, [x20, #16]
    7e80:	mov	w10, #0x8                   	// #8
    7e84:	mov	w11, #0x4                   	// #4
    7e88:	add	x8, x9, w8, uxtw #4
    7e8c:	str	x10, [x8]
    7e90:	strb	w11, [x8, #8]
    7e94:	ldur	w9, [x25, #3]
    7e98:	ldur	w10, [x29, #-16]
    7e9c:	str	w9, [x8, #12]
    7ea0:	stur	w10, [x8, #9]
    7ea4:	ldp	w8, w9, [x20, #24]
    7ea8:	cmp	w8, w9
    7eac:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    7eb0:	add	w8, w8, #0x1
    7eb4:	cmp	w8, w9
    7eb8:	str	w8, [x20, #24]
    7ebc:	b.cs	ac04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3118>  // b.hs, b.nlast
    7ec0:	ldr	x9, [x20, #16]
    7ec4:	mov	w10, #0x6                   	// #6
    7ec8:	add	x8, x9, w8, uxtw #4
    7ecc:	str	xzr, [x8]
    7ed0:	strb	w10, [x8, #8]
    7ed4:	ldur	w9, [x25, #3]
    7ed8:	ldur	w10, [x29, #-16]
    7edc:	str	w9, [x8, #12]
    7ee0:	stur	w10, [x8, #9]
    7ee4:	ldp	w8, w9, [x20, #24]
    7ee8:	cmp	w8, w9
    7eec:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    7ef0:	add	w8, w8, #0x1
    7ef4:	cmp	w8, w9
    7ef8:	str	w8, [x20, #24]
    7efc:	b.cs	ac20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3134>  // b.hs, b.nlast
    7f00:	ldr	x9, [x20, #16]
    7f04:	mov	w10, #0x7                   	// #7
    7f08:	mov	w11, #0x2                   	// #2
    7f0c:	add	x8, x9, w8, uxtw #4
    7f10:	str	x10, [x8]
    7f14:	strb	w11, [x8, #8]
    7f18:	ldur	w9, [x25, #3]
    7f1c:	ldur	w10, [x29, #-16]
    7f20:	str	w9, [x8, #12]
    7f24:	stur	w10, [x8, #9]
    7f28:	ldp	w8, w9, [x20, #24]
    7f2c:	cmp	w8, w9
    7f30:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    7f34:	add	w8, w8, #0x1
    7f38:	str	w8, [x20, #24]
    7f3c:	ldr	x0, [x19]
    7f40:	stp	x21, x20, [x29, #-48]
    7f44:	cbz	x26, 7f5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x470>
    7f48:	ldaxr	w8, [x23]
    7f4c:	add	w8, w8, #0x1
    7f50:	stlxr	w9, w8, [x23]
    7f54:	cbnz	w9, 7f48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x45c>
    7f58:	b	7f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x47c>
    7f5c:	ldr	w8, [x23]
    7f60:	add	w8, w8, #0x1
    7f64:	str	w8, [x23]
    7f68:	sub	x2, x29, #0x30
    7f6c:	mov	w1, #0xe                   	// #14
    7f70:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    7f74:	ldur	x22, [x29, #-40]
    7f78:	mov	w21, w0
    7f7c:	cbz	x22, 7ff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x50c>
    7f80:	add	x8, x22, #0x8
    7f84:	cbz	x26, 7fa4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x4b8>
    7f88:	ldaxr	w9, [x8]
    7f8c:	sub	w10, w9, #0x1
    7f90:	stlxr	w11, w10, [x8]
    7f94:	cbnz	w11, 7f88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x49c>
    7f98:	cmp	w9, #0x1
    7f9c:	b.eq	7fb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x4cc>  // b.none
    7fa0:	b	7ff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x50c>
    7fa4:	ldr	w9, [x8]
    7fa8:	sub	w10, w9, #0x1
    7fac:	str	w10, [x8]
    7fb0:	cmp	w9, #0x1
    7fb4:	b.ne	7ff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x50c>  // b.any
    7fb8:	mov	x24, x22
    7fbc:	ldr	x8, [x24], #12
    7fc0:	mov	x0, x22
    7fc4:	ldr	x8, [x8, #16]
    7fc8:	blr	x8
    7fcc:	cbz	x26, aa18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f2c>
    7fd0:	ldaxr	w8, [x24]
    7fd4:	sub	w9, w8, #0x1
    7fd8:	stlxr	w10, w9, [x24]
    7fdc:	cbnz	w10, 7fd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x4e4>
    7fe0:	cmp	w8, #0x1
    7fe4:	b.ne	7ff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x50c>  // b.any
    7fe8:	ldr	x8, [x22]
    7fec:	mov	x0, x22
    7ff0:	ldr	x8, [x8, #24]
    7ff4:	blr	x8
    7ff8:	cmp	w21, #0x5
    7ffc:	b.ne	b040 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3554>  // b.any
    8000:	cbz	x26, 8020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x534>
    8004:	ldaxr	w8, [x23]
    8008:	sub	w9, w8, #0x1
    800c:	stlxr	w10, w9, [x23]
    8010:	cbnz	w10, 8004 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x518>
    8014:	cmp	w8, #0x1
    8018:	b.eq	8034 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x548>  // b.none
    801c:	b	8074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x588>
    8020:	ldr	w8, [x23]
    8024:	sub	w9, w8, #0x1
    8028:	str	w9, [x23]
    802c:	cmp	w8, #0x1
    8030:	b.ne	8074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x588>  // b.any
    8034:	ldr	x8, [x20]
    8038:	mov	x0, x20
    803c:	add	x21, x20, #0xc
    8040:	ldr	x8, [x8, #16]
    8044:	blr	x8
    8048:	cbz	x26, a868 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d7c>
    804c:	ldaxr	w8, [x21]
    8050:	sub	w9, w8, #0x1
    8054:	stlxr	w10, w9, [x21]
    8058:	cbnz	w10, 804c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x560>
    805c:	cmp	w8, #0x1
    8060:	b.ne	8074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x588>  // b.any
    8064:	ldr	x8, [x20]
    8068:	mov	x0, x20
    806c:	ldr	x8, [x8, #24]
    8070:	blr	x8
    8074:	mov	w0, #0x220                 	// #544
    8078:	bl	0 <_Znwm>
    807c:	movi	v0.2s, #0x1
    8080:	mov	x23, x0
    8084:	add	x8, x27, #0x10
    8088:	str	d0, [x23, #8]!
    808c:	movi	v0.2d, #0x0
    8090:	mov	x22, x0
    8094:	mov	x21, x0
    8098:	mov	w9, #0x1                   	// #1
    809c:	str	x8, [x0]
    80a0:	stp	q0, q0, [x0, #48]
    80a4:	stp	q0, q0, [x0, #80]
    80a8:	stp	q0, q0, [x0, #112]
    80ac:	stp	q0, q0, [x0, #144]
    80b0:	stp	q0, q0, [x0, #176]
    80b4:	stp	q0, q0, [x0, #208]
    80b8:	stp	q0, q0, [x0, #240]
    80bc:	stp	q0, q0, [x0, #272]
    80c0:	stp	q0, q0, [x0, #304]
    80c4:	stp	q0, q0, [x0, #336]
    80c8:	stp	q0, q0, [x0, #368]
    80cc:	stp	q0, q0, [x0, #400]
    80d0:	stp	q0, q0, [x0, #432]
    80d4:	stp	q0, q0, [x0, #464]
    80d8:	stp	q0, q0, [x0, #496]
    80dc:	str	q0, [x22, #32]!
    80e0:	str	q0, [x0, #528]
    80e4:	str	x22, [x21, #16]!
    80e8:	str	d8, [x0, #24]
    80ec:	str	x9, [x22]
    80f0:	ldp	w8, w9, [x0, #24]
    80f4:	ldur	w11, [x25, #3]
    80f8:	ldur	w12, [x29, #-16]
    80fc:	mov	w10, #0xff                  	// #255
    8100:	cmp	w8, w9
    8104:	strb	w10, [x0, #40]
    8108:	str	w11, [x0, #44]
    810c:	stur	w12, [x0, #41]
    8110:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8114:	add	w8, w8, #0x1
    8118:	mov	x20, x0
    811c:	cmp	w8, w9
    8120:	str	w8, [x0, #24]
    8124:	b.cs	ac3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3150>  // b.hs, b.nlast
    8128:	ldr	x9, [x20, #16]
    812c:	mov	w10, #0x8                   	// #8
    8130:	mov	w11, #0x4                   	// #4
    8134:	add	x8, x9, w8, uxtw #4
    8138:	str	x10, [x8]
    813c:	strb	w11, [x8, #8]
    8140:	ldur	w9, [x25, #3]
    8144:	ldur	w10, [x29, #-16]
    8148:	str	w9, [x8, #12]
    814c:	stur	w10, [x8, #9]
    8150:	ldp	w8, w9, [x20, #24]
    8154:	cmp	w8, w9
    8158:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    815c:	add	w8, w8, #0x1
    8160:	cmp	w8, w9
    8164:	str	w8, [x20, #24]
    8168:	b.cs	ac58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x316c>  // b.hs, b.nlast
    816c:	ldr	x9, [x20, #16]
    8170:	mov	w10, #0x6                   	// #6
    8174:	add	x8, x9, w8, uxtw #4
    8178:	str	xzr, [x8]
    817c:	strb	w10, [x8, #8]
    8180:	ldur	w9, [x25, #3]
    8184:	ldur	w10, [x29, #-16]
    8188:	str	w9, [x8, #12]
    818c:	stur	w10, [x8, #9]
    8190:	ldp	w8, w9, [x20, #24]
    8194:	cmp	w8, w9
    8198:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    819c:	add	w8, w8, #0x1
    81a0:	cmp	w8, w9
    81a4:	str	w8, [x20, #24]
    81a8:	b.cs	ac74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3188>  // b.hs, b.nlast
    81ac:	ldr	x9, [x20, #16]
    81b0:	mov	w10, #0x8                   	// #8
    81b4:	add	x8, x9, w8, uxtw #4
    81b8:	str	xzr, [x8]
    81bc:	strb	w10, [x8, #8]
    81c0:	ldur	w9, [x25, #3]
    81c4:	ldur	w10, [x29, #-16]
    81c8:	str	w9, [x8, #12]
    81cc:	stur	w10, [x8, #9]
    81d0:	ldp	w8, w9, [x20, #24]
    81d4:	cmp	w8, w9
    81d8:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    81dc:	add	w8, w8, #0x1
    81e0:	str	w8, [x20, #24]
    81e4:	ldr	x0, [x19]
    81e8:	stp	x21, x20, [x29, #-64]
    81ec:	cbz	x26, 8204 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x718>
    81f0:	ldaxr	w8, [x23]
    81f4:	add	w8, w8, #0x1
    81f8:	stlxr	w9, w8, [x23]
    81fc:	cbnz	w9, 81f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x704>
    8200:	b	8210 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x724>
    8204:	ldr	w8, [x23]
    8208:	add	w8, w8, #0x1
    820c:	str	w8, [x23]
    8210:	sub	x2, x29, #0x40
    8214:	mov	w1, #0xe                   	// #14
    8218:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    821c:	ldur	x22, [x29, #-56]
    8220:	mov	w21, w0
    8224:	cbz	x22, 82a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7b4>
    8228:	add	x8, x22, #0x8
    822c:	cbz	x26, 824c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x760>
    8230:	ldaxr	w9, [x8]
    8234:	sub	w10, w9, #0x1
    8238:	stlxr	w11, w10, [x8]
    823c:	cbnz	w11, 8230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x744>
    8240:	cmp	w9, #0x1
    8244:	b.eq	8260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x774>  // b.none
    8248:	b	82a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7b4>
    824c:	ldr	w9, [x8]
    8250:	sub	w10, w9, #0x1
    8254:	str	w10, [x8]
    8258:	cmp	w9, #0x1
    825c:	b.ne	82a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7b4>  // b.any
    8260:	mov	x24, x22
    8264:	ldr	x8, [x24], #12
    8268:	mov	x0, x22
    826c:	ldr	x8, [x8, #16]
    8270:	blr	x8
    8274:	cbz	x26, aa30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f44>
    8278:	ldaxr	w8, [x24]
    827c:	sub	w9, w8, #0x1
    8280:	stlxr	w10, w9, [x24]
    8284:	cbnz	w10, 8278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x78c>
    8288:	cmp	w8, #0x1
    828c:	b.ne	82a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7b4>  // b.any
    8290:	ldr	x8, [x22]
    8294:	mov	x0, x22
    8298:	ldr	x8, [x8, #24]
    829c:	blr	x8
    82a0:	cmp	w21, #0x6
    82a4:	b.ne	b058 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x356c>  // b.any
    82a8:	cbz	x26, 82c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7dc>
    82ac:	ldaxr	w8, [x23]
    82b0:	sub	w9, w8, #0x1
    82b4:	stlxr	w10, w9, [x23]
    82b8:	cbnz	w10, 82ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7c0>
    82bc:	cmp	w8, #0x1
    82c0:	b.eq	82dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7f0>  // b.none
    82c4:	b	831c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x830>
    82c8:	ldr	w8, [x23]
    82cc:	sub	w9, w8, #0x1
    82d0:	str	w9, [x23]
    82d4:	cmp	w8, #0x1
    82d8:	b.ne	831c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x830>  // b.any
    82dc:	ldr	x8, [x20]
    82e0:	mov	x0, x20
    82e4:	add	x21, x20, #0xc
    82e8:	ldr	x8, [x8, #16]
    82ec:	blr	x8
    82f0:	cbz	x26, a880 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d94>
    82f4:	ldaxr	w8, [x21]
    82f8:	sub	w9, w8, #0x1
    82fc:	stlxr	w10, w9, [x21]
    8300:	cbnz	w10, 82f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x808>
    8304:	cmp	w8, #0x1
    8308:	b.ne	831c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x830>  // b.any
    830c:	ldr	x8, [x20]
    8310:	mov	x0, x20
    8314:	ldr	x8, [x8, #24]
    8318:	blr	x8
    831c:	mov	w0, #0x220                 	// #544
    8320:	bl	0 <_Znwm>
    8324:	movi	v0.2s, #0x1
    8328:	mov	x23, x0
    832c:	add	x8, x27, #0x10
    8330:	str	d0, [x23, #8]!
    8334:	movi	v0.2d, #0x0
    8338:	mov	x22, x0
    833c:	mov	x21, x0
    8340:	mov	w9, #0x2                   	// #2
    8344:	str	x8, [x0]
    8348:	stp	q0, q0, [x0, #48]
    834c:	stp	q0, q0, [x0, #80]
    8350:	stp	q0, q0, [x0, #112]
    8354:	stp	q0, q0, [x0, #144]
    8358:	stp	q0, q0, [x0, #176]
    835c:	stp	q0, q0, [x0, #208]
    8360:	stp	q0, q0, [x0, #240]
    8364:	stp	q0, q0, [x0, #272]
    8368:	stp	q0, q0, [x0, #304]
    836c:	stp	q0, q0, [x0, #336]
    8370:	stp	q0, q0, [x0, #368]
    8374:	stp	q0, q0, [x0, #400]
    8378:	stp	q0, q0, [x0, #432]
    837c:	stp	q0, q0, [x0, #464]
    8380:	stp	q0, q0, [x0, #496]
    8384:	str	q0, [x22, #32]!
    8388:	str	q0, [x0, #528]
    838c:	str	x22, [x21, #16]!
    8390:	str	d8, [x0, #24]
    8394:	str	x9, [x22]
    8398:	ldp	w8, w9, [x0, #24]
    839c:	ldur	w11, [x25, #3]
    83a0:	ldur	w12, [x29, #-16]
    83a4:	mov	w10, #0xff                  	// #255
    83a8:	cmp	w8, w9
    83ac:	strb	w10, [x0, #40]
    83b0:	str	w11, [x0, #44]
    83b4:	stur	w12, [x0, #41]
    83b8:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    83bc:	add	w8, w8, #0x1
    83c0:	mov	x20, x0
    83c4:	cmp	w8, w9
    83c8:	str	w8, [x0, #24]
    83cc:	b.cs	ac90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x31a4>  // b.hs, b.nlast
    83d0:	ldr	x9, [x20, #16]
    83d4:	mov	w10, #0x8                   	// #8
    83d8:	mov	w11, #0x4                   	// #4
    83dc:	add	x8, x9, w8, uxtw #4
    83e0:	str	x10, [x8]
    83e4:	strb	w11, [x8, #8]
    83e8:	ldur	w9, [x25, #3]
    83ec:	ldur	w10, [x29, #-16]
    83f0:	str	w9, [x8, #12]
    83f4:	stur	w10, [x8, #9]
    83f8:	ldp	w8, w9, [x20, #24]
    83fc:	cmp	w8, w9
    8400:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8404:	add	w8, w8, #0x1
    8408:	cmp	w8, w9
    840c:	str	w8, [x20, #24]
    8410:	b.cs	acac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x31c0>  // b.hs, b.nlast
    8414:	ldr	x9, [x20, #16]
    8418:	mov	w10, #0x6                   	// #6
    841c:	add	x8, x9, w8, uxtw #4
    8420:	str	xzr, [x8]
    8424:	strb	w10, [x8, #8]
    8428:	ldur	w9, [x25, #3]
    842c:	ldur	w10, [x29, #-16]
    8430:	str	w9, [x8, #12]
    8434:	stur	w10, [x8, #9]
    8438:	ldp	w8, w9, [x20, #24]
    843c:	cmp	w8, w9
    8440:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8444:	add	w8, w8, #0x1
    8448:	cmp	w8, w9
    844c:	str	w8, [x20, #24]
    8450:	b.cs	acc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x31dc>  // b.hs, b.nlast
    8454:	ldr	x9, [x20, #16]
    8458:	mov	w10, #0x8                   	// #8
    845c:	add	x8, x9, w8, uxtw #4
    8460:	str	xzr, [x8]
    8464:	strb	w10, [x8, #8]
    8468:	ldur	w9, [x25, #3]
    846c:	ldur	w10, [x29, #-16]
    8470:	str	w9, [x8, #12]
    8474:	stur	w10, [x8, #9]
    8478:	ldp	w8, w9, [x20, #24]
    847c:	cmp	w8, w9
    8480:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8484:	add	w8, w8, #0x1
    8488:	str	w8, [x20, #24]
    848c:	ldr	x0, [x19]
    8490:	stp	x21, x20, [x29, #-80]
    8494:	cbz	x26, 84ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x9c0>
    8498:	ldaxr	w8, [x23]
    849c:	add	w8, w8, #0x1
    84a0:	stlxr	w9, w8, [x23]
    84a4:	cbnz	w9, 8498 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x9ac>
    84a8:	b	84b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x9cc>
    84ac:	ldr	w8, [x23]
    84b0:	add	w8, w8, #0x1
    84b4:	str	w8, [x23]
    84b8:	sub	x2, x29, #0x50
    84bc:	mov	w1, #0xe                   	// #14
    84c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    84c4:	ldur	x22, [x29, #-72]
    84c8:	mov	w21, w0
    84cc:	cbz	x22, 8548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa5c>
    84d0:	add	x8, x22, #0x8
    84d4:	cbz	x26, 84f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa08>
    84d8:	ldaxr	w9, [x8]
    84dc:	sub	w10, w9, #0x1
    84e0:	stlxr	w11, w10, [x8]
    84e4:	cbnz	w11, 84d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x9ec>
    84e8:	cmp	w9, #0x1
    84ec:	b.eq	8508 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa1c>  // b.none
    84f0:	b	8548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa5c>
    84f4:	ldr	w9, [x8]
    84f8:	sub	w10, w9, #0x1
    84fc:	str	w10, [x8]
    8500:	cmp	w9, #0x1
    8504:	b.ne	8548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa5c>  // b.any
    8508:	mov	x24, x22
    850c:	ldr	x8, [x24], #12
    8510:	mov	x0, x22
    8514:	ldr	x8, [x8, #16]
    8518:	blr	x8
    851c:	cbz	x26, aa48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f5c>
    8520:	ldaxr	w8, [x24]
    8524:	sub	w9, w8, #0x1
    8528:	stlxr	w10, w9, [x24]
    852c:	cbnz	w10, 8520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa34>
    8530:	cmp	w8, #0x1
    8534:	b.ne	8548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa5c>  // b.any
    8538:	ldr	x8, [x22]
    853c:	mov	x0, x22
    8540:	ldr	x8, [x8, #24]
    8544:	blr	x8
    8548:	cmp	w21, #0x7
    854c:	b.ne	b070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3584>  // b.any
    8550:	cbz	x26, 8570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa84>
    8554:	ldaxr	w8, [x23]
    8558:	sub	w9, w8, #0x1
    855c:	stlxr	w10, w9, [x23]
    8560:	cbnz	w10, 8554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa68>
    8564:	cmp	w8, #0x1
    8568:	b.eq	8584 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa98>  // b.none
    856c:	b	85c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xad8>
    8570:	ldr	w8, [x23]
    8574:	sub	w9, w8, #0x1
    8578:	str	w9, [x23]
    857c:	cmp	w8, #0x1
    8580:	b.ne	85c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xad8>  // b.any
    8584:	ldr	x8, [x20]
    8588:	mov	x0, x20
    858c:	add	x21, x20, #0xc
    8590:	ldr	x8, [x8, #16]
    8594:	blr	x8
    8598:	cbz	x26, a898 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2dac>
    859c:	ldaxr	w8, [x21]
    85a0:	sub	w9, w8, #0x1
    85a4:	stlxr	w10, w9, [x21]
    85a8:	cbnz	w10, 859c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xab0>
    85ac:	cmp	w8, #0x1
    85b0:	b.ne	85c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xad8>  // b.any
    85b4:	ldr	x8, [x20]
    85b8:	mov	x0, x20
    85bc:	ldr	x8, [x8, #24]
    85c0:	blr	x8
    85c4:	mov	w0, #0x220                 	// #544
    85c8:	bl	0 <_Znwm>
    85cc:	movi	v0.2s, #0x1
    85d0:	mov	x28, x0
    85d4:	add	x8, x27, #0x10
    85d8:	str	d0, [x28, #8]!
    85dc:	movi	v0.2d, #0x0
    85e0:	mov	x23, x0
    85e4:	mov	x22, x0
    85e8:	mov	w9, #0x1                   	// #1
    85ec:	str	x8, [x0]
    85f0:	stp	q0, q0, [x0, #48]
    85f4:	stp	q0, q0, [x0, #80]
    85f8:	stp	q0, q0, [x0, #112]
    85fc:	stp	q0, q0, [x0, #144]
    8600:	stp	q0, q0, [x0, #176]
    8604:	stp	q0, q0, [x0, #208]
    8608:	stp	q0, q0, [x0, #240]
    860c:	stp	q0, q0, [x0, #272]
    8610:	stp	q0, q0, [x0, #304]
    8614:	stp	q0, q0, [x0, #336]
    8618:	stp	q0, q0, [x0, #368]
    861c:	stp	q0, q0, [x0, #400]
    8620:	stp	q0, q0, [x0, #432]
    8624:	stp	q0, q0, [x0, #464]
    8628:	stp	q0, q0, [x0, #496]
    862c:	str	q0, [x23, #32]!
    8630:	str	q0, [x0, #528]
    8634:	str	x23, [x22, #16]!
    8638:	str	d8, [x0, #24]
    863c:	str	x9, [x23]
    8640:	ldp	w8, w9, [x0, #24]
    8644:	ldur	w11, [x25, #3]
    8648:	ldur	w12, [x29, #-16]
    864c:	mov	w10, #0xff                  	// #255
    8650:	cmp	w8, w9
    8654:	strb	w10, [x0, #40]
    8658:	str	w11, [x0, #44]
    865c:	stur	w12, [x0, #41]
    8660:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8664:	add	w8, w8, #0x1
    8668:	add	x20, x19, #0x18
    866c:	mov	x21, x0
    8670:	str	w8, [x0, #24]
    8674:	mov	x0, x20
    8678:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    867c:	ldp	w8, w9, [x21, #24]
    8680:	mov	x24, x0
    8684:	cmp	w8, w9
    8688:	b.cs	ace4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x31f8>  // b.hs, b.nlast
    868c:	ldr	x9, [x21, #16]
    8690:	mov	w10, #0x2                   	// #2
    8694:	add	x8, x9, w8, uxtw #4
    8698:	str	x24, [x8]
    869c:	strb	w10, [x8, #8]
    86a0:	ldur	w9, [x25, #3]
    86a4:	ldur	w10, [x29, #-16]
    86a8:	str	w9, [x8, #12]
    86ac:	stur	w10, [x8, #9]
    86b0:	ldp	w8, w9, [x21, #24]
    86b4:	cmp	w8, w9
    86b8:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    86bc:	add	w8, w8, #0x1
    86c0:	str	w8, [x21, #24]
    86c4:	ldr	x0, [x19]
    86c8:	stp	x22, x21, [x29, #-96]
    86cc:	cbz	x26, 86e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xbf8>
    86d0:	ldaxr	w8, [x28]
    86d4:	add	w8, w8, #0x1
    86d8:	stlxr	w9, w8, [x28]
    86dc:	cbnz	w9, 86d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xbe4>
    86e0:	b	86f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc04>
    86e4:	ldr	w8, [x28]
    86e8:	add	w8, w8, #0x1
    86ec:	str	w8, [x28]
    86f0:	sub	x2, x29, #0x60
    86f4:	mov	w1, #0xb                   	// #11
    86f8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    86fc:	ldur	x23, [x29, #-88]
    8700:	mov	w22, w0
    8704:	cbz	x23, 8780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc94>
    8708:	add	x8, x23, #0x8
    870c:	cbz	x26, 872c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc40>
    8710:	ldaxr	w9, [x8]
    8714:	sub	w10, w9, #0x1
    8718:	stlxr	w11, w10, [x8]
    871c:	cbnz	w11, 8710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc24>
    8720:	cmp	w9, #0x1
    8724:	b.eq	8740 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc54>  // b.none
    8728:	b	8780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc94>
    872c:	ldr	w9, [x8]
    8730:	sub	w10, w9, #0x1
    8734:	str	w10, [x8]
    8738:	cmp	w9, #0x1
    873c:	b.ne	8780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc94>  // b.any
    8740:	mov	x24, x23
    8744:	ldr	x8, [x24], #12
    8748:	mov	x0, x23
    874c:	ldr	x8, [x8, #16]
    8750:	blr	x8
    8754:	cbz	x26, aa60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f74>
    8758:	ldaxr	w8, [x24]
    875c:	sub	w9, w8, #0x1
    8760:	stlxr	w10, w9, [x24]
    8764:	cbnz	w10, 8758 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc6c>
    8768:	cmp	w8, #0x1
    876c:	b.ne	8780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc94>  // b.any
    8770:	ldr	x8, [x23]
    8774:	mov	x0, x23
    8778:	ldr	x8, [x8, #24]
    877c:	blr	x8
    8780:	cmp	w22, #0x4
    8784:	b.ne	b088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x359c>  // b.any
    8788:	cbz	x26, 87a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xcbc>
    878c:	ldaxr	w8, [x28]
    8790:	sub	w9, w8, #0x1
    8794:	stlxr	w10, w9, [x28]
    8798:	cbnz	w10, 878c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xca0>
    879c:	cmp	w8, #0x1
    87a0:	b.eq	87bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xcd0>  // b.none
    87a4:	b	87fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xd10>
    87a8:	ldr	w8, [x28]
    87ac:	sub	w9, w8, #0x1
    87b0:	str	w9, [x28]
    87b4:	cmp	w8, #0x1
    87b8:	b.ne	87fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xd10>  // b.any
    87bc:	ldr	x8, [x21]
    87c0:	mov	x0, x21
    87c4:	add	x22, x21, #0xc
    87c8:	ldr	x8, [x8, #16]
    87cc:	blr	x8
    87d0:	cbz	x26, a8b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2dc4>
    87d4:	ldaxr	w8, [x22]
    87d8:	sub	w9, w8, #0x1
    87dc:	stlxr	w10, w9, [x22]
    87e0:	cbnz	w10, 87d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xce8>
    87e4:	cmp	w8, #0x1
    87e8:	b.ne	87fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xd10>  // b.any
    87ec:	ldr	x8, [x21]
    87f0:	mov	x0, x21
    87f4:	ldr	x8, [x8, #24]
    87f8:	blr	x8
    87fc:	mov	w0, #0x220                 	// #544
    8800:	bl	0 <_Znwm>
    8804:	movi	v0.2s, #0x1
    8808:	mov	x24, x0
    880c:	add	x8, x27, #0x10
    8810:	str	d0, [x24, #8]!
    8814:	movi	v0.2d, #0x0
    8818:	mov	x1, x0
    881c:	mov	x22, x0
    8820:	mov	w9, #0x4                   	// #4
    8824:	str	x8, [x0]
    8828:	stp	q0, q0, [x0, #48]
    882c:	stp	q0, q0, [x0, #80]
    8830:	stp	q0, q0, [x0, #112]
    8834:	stp	q0, q0, [x0, #144]
    8838:	stp	q0, q0, [x0, #176]
    883c:	stp	q0, q0, [x0, #208]
    8840:	stp	q0, q0, [x0, #240]
    8844:	stp	q0, q0, [x0, #272]
    8848:	stp	q0, q0, [x0, #304]
    884c:	stp	q0, q0, [x0, #336]
    8850:	stp	q0, q0, [x0, #368]
    8854:	stp	q0, q0, [x0, #400]
    8858:	stp	q0, q0, [x0, #432]
    885c:	stp	q0, q0, [x0, #464]
    8860:	stp	q0, q0, [x0, #496]
    8864:	str	q0, [x1, #32]!
    8868:	str	q0, [x0, #528]
    886c:	str	x1, [x22, #16]!
    8870:	str	d8, [x0, #24]
    8874:	str	x9, [x1]
    8878:	ldp	w8, w9, [x0, #24]
    887c:	ldur	w11, [x25, #3]
    8880:	ldur	w12, [x29, #-16]
    8884:	mov	w10, #0xff                  	// #255
    8888:	cmp	w8, w9
    888c:	strb	w10, [x0, #40]
    8890:	str	w11, [x0, #44]
    8894:	stur	w12, [x0, #41]
    8898:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    889c:	add	w8, w8, #0x1
    88a0:	mov	x21, x0
    88a4:	cmp	w8, w9
    88a8:	str	w8, [x0, #24]
    88ac:	b.cs	ad00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3214>  // b.hs, b.nlast
    88b0:	ldr	x9, [x21, #16]
    88b4:	mov	w10, #0x8                   	// #8
    88b8:	mov	w11, #0x4                   	// #4
    88bc:	add	x8, x9, w8, uxtw #4
    88c0:	str	x10, [x8]
    88c4:	strb	w11, [x8, #8]
    88c8:	ldur	w9, [x25, #3]
    88cc:	ldur	w10, [x29, #-16]
    88d0:	str	w9, [x8, #12]
    88d4:	stur	w10, [x8, #9]
    88d8:	ldp	w8, w9, [x21, #24]
    88dc:	cmp	w8, w9
    88e0:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    88e4:	add	w8, w8, #0x1
    88e8:	str	w8, [x21, #24]
    88ec:	ldr	x0, [x19]
    88f0:	stp	x22, x21, [x29, #-112]
    88f4:	cbz	x26, 890c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe20>
    88f8:	ldaxr	w8, [x24]
    88fc:	add	w8, w8, #0x1
    8900:	stlxr	w9, w8, [x24]
    8904:	cbnz	w9, 88f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe0c>
    8908:	b	8918 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe2c>
    890c:	ldr	w8, [x24]
    8910:	add	w8, w8, #0x1
    8914:	str	w8, [x24]
    8918:	sub	x2, x29, #0x70
    891c:	mov	w1, #0xb                   	// #11
    8920:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8924:	ldur	x23, [x29, #-104]
    8928:	mov	w22, w0
    892c:	cbz	x23, 89a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xebc>
    8930:	add	x8, x23, #0x8
    8934:	cbz	x26, 8954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe68>
    8938:	ldaxr	w9, [x8]
    893c:	sub	w10, w9, #0x1
    8940:	stlxr	w11, w10, [x8]
    8944:	cbnz	w11, 8938 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe4c>
    8948:	cmp	w9, #0x1
    894c:	b.eq	8968 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe7c>  // b.none
    8950:	b	89a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xebc>
    8954:	ldr	w9, [x8]
    8958:	sub	w10, w9, #0x1
    895c:	str	w10, [x8]
    8960:	cmp	w9, #0x1
    8964:	b.ne	89a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xebc>  // b.any
    8968:	mov	x28, x23
    896c:	ldr	x8, [x28], #12
    8970:	mov	x0, x23
    8974:	ldr	x8, [x8, #16]
    8978:	blr	x8
    897c:	cbz	x26, aa78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2f8c>
    8980:	ldaxr	w8, [x28]
    8984:	sub	w9, w8, #0x1
    8988:	stlxr	w10, w9, [x28]
    898c:	cbnz	w10, 8980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xe94>
    8990:	cmp	w8, #0x1
    8994:	b.ne	89a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xebc>  // b.any
    8998:	ldr	x8, [x23]
    899c:	mov	x0, x23
    89a0:	ldr	x8, [x8, #24]
    89a4:	blr	x8
    89a8:	cmp	w22, #0x5
    89ac:	b.ne	b0a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x35b4>  // b.any
    89b0:	cbz	x26, 89d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xee4>
    89b4:	ldaxr	w8, [x24]
    89b8:	sub	w9, w8, #0x1
    89bc:	stlxr	w10, w9, [x24]
    89c0:	cbnz	w10, 89b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xec8>
    89c4:	cmp	w8, #0x1
    89c8:	b.eq	89e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xef8>  // b.none
    89cc:	b	8a24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf38>
    89d0:	ldr	w8, [x24]
    89d4:	sub	w9, w8, #0x1
    89d8:	str	w9, [x24]
    89dc:	cmp	w8, #0x1
    89e0:	b.ne	8a24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf38>  // b.any
    89e4:	ldr	x8, [x21]
    89e8:	mov	x0, x21
    89ec:	add	x22, x21, #0xc
    89f0:	ldr	x8, [x8, #16]
    89f4:	blr	x8
    89f8:	cbz	x26, a8c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ddc>
    89fc:	ldaxr	w8, [x22]
    8a00:	sub	w9, w8, #0x1
    8a04:	stlxr	w10, w9, [x22]
    8a08:	cbnz	w10, 89fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf10>
    8a0c:	cmp	w8, #0x1
    8a10:	b.ne	8a24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf38>  // b.any
    8a14:	ldr	x8, [x21]
    8a18:	mov	x0, x21
    8a1c:	ldr	x8, [x8, #24]
    8a20:	blr	x8
    8a24:	mov	w0, #0x220                 	// #544
    8a28:	bl	0 <_Znwm>
    8a2c:	movi	v0.2s, #0x1
    8a30:	mov	x28, x0
    8a34:	add	x8, x27, #0x10
    8a38:	str	d0, [x28, #8]!
    8a3c:	movi	v0.2d, #0x0
    8a40:	mov	x23, x0
    8a44:	mov	x22, x0
    8a48:	mov	w9, #0xb                   	// #11
    8a4c:	str	x8, [x0]
    8a50:	stp	q0, q0, [x0, #48]
    8a54:	stp	q0, q0, [x0, #80]
    8a58:	stp	q0, q0, [x0, #112]
    8a5c:	stp	q0, q0, [x0, #144]
    8a60:	stp	q0, q0, [x0, #176]
    8a64:	stp	q0, q0, [x0, #208]
    8a68:	stp	q0, q0, [x0, #240]
    8a6c:	stp	q0, q0, [x0, #272]
    8a70:	stp	q0, q0, [x0, #304]
    8a74:	stp	q0, q0, [x0, #336]
    8a78:	stp	q0, q0, [x0, #368]
    8a7c:	stp	q0, q0, [x0, #400]
    8a80:	stp	q0, q0, [x0, #432]
    8a84:	stp	q0, q0, [x0, #464]
    8a88:	stp	q0, q0, [x0, #496]
    8a8c:	str	q0, [x23, #32]!
    8a90:	str	q0, [x0, #528]
    8a94:	str	x23, [x22, #16]!
    8a98:	str	d8, [x0, #24]
    8a9c:	str	x9, [x23]
    8aa0:	ldp	w8, w9, [x0, #24]
    8aa4:	ldur	w11, [x25, #3]
    8aa8:	ldur	w12, [x29, #-16]
    8aac:	mov	w10, #0xff                  	// #255
    8ab0:	cmp	w8, w9
    8ab4:	strb	w10, [x0, #40]
    8ab8:	str	w11, [x0, #44]
    8abc:	stur	w12, [x0, #41]
    8ac0:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8ac4:	add	w8, w8, #0x1
    8ac8:	mov	x21, x0
    8acc:	cmp	w8, w9
    8ad0:	str	w8, [x0, #24]
    8ad4:	b.cs	ad18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x322c>  // b.hs, b.nlast
    8ad8:	ldr	x9, [x21, #16]
    8adc:	mov	w10, #0x4                   	// #4
    8ae0:	mov	w11, #0x2                   	// #2
    8ae4:	add	x8, x9, w8, uxtw #4
    8ae8:	str	x10, [x8]
    8aec:	strb	w11, [x8, #8]
    8af0:	ldur	w9, [x25, #3]
    8af4:	ldur	w10, [x29, #-16]
    8af8:	str	w9, [x8, #12]
    8afc:	stur	w10, [x8, #9]
    8b00:	ldp	w8, w9, [x21, #24]
    8b04:	cmp	w8, w9
    8b08:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8b0c:	add	w8, w8, #0x1
    8b10:	mov	x0, x20
    8b14:	str	w8, [x21, #24]
    8b18:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    8b1c:	ldp	w8, w9, [x21, #24]
    8b20:	mov	x24, x0
    8b24:	cmp	w8, w9
    8b28:	b.cs	ad34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3248>  // b.hs, b.nlast
    8b2c:	ldr	x9, [x21, #16]
    8b30:	mov	w10, #0x2                   	// #2
    8b34:	add	x8, x9, w8, uxtw #4
    8b38:	str	x24, [x8]
    8b3c:	strb	w10, [x8, #8]
    8b40:	ldur	w9, [x25, #3]
    8b44:	ldur	w10, [x29, #-16]
    8b48:	str	w9, [x8, #12]
    8b4c:	stur	w10, [x8, #9]
    8b50:	ldp	w8, w9, [x21, #24]
    8b54:	cmp	w8, w9
    8b58:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8b5c:	add	w8, w8, #0x1
    8b60:	cmp	w8, w9
    8b64:	str	w8, [x21, #24]
    8b68:	b.cs	ad50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3264>  // b.hs, b.nlast
    8b6c:	ldr	x9, [x21, #16]
    8b70:	mov	w10, #0x8                   	// #8
    8b74:	mov	w11, #0x4                   	// #4
    8b78:	add	x8, x9, w8, uxtw #4
    8b7c:	str	x10, [x8]
    8b80:	strb	w11, [x8, #8]
    8b84:	ldur	w9, [x25, #3]
    8b88:	ldur	w10, [x29, #-16]
    8b8c:	str	w9, [x8, #12]
    8b90:	stur	w10, [x8, #9]
    8b94:	ldp	w8, w9, [x21, #24]
    8b98:	cmp	w8, w9
    8b9c:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8ba0:	add	w8, w8, #0x1
    8ba4:	str	w8, [x21, #24]
    8ba8:	ldr	x0, [x19]
    8bac:	stp	x22, x21, [x29, #-128]
    8bb0:	cbz	x26, 8bc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x10dc>
    8bb4:	ldaxr	w8, [x28]
    8bb8:	add	w8, w8, #0x1
    8bbc:	stlxr	w9, w8, [x28]
    8bc0:	cbnz	w9, 8bb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x10c8>
    8bc4:	b	8bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x10e8>
    8bc8:	ldr	w8, [x28]
    8bcc:	add	w8, w8, #0x1
    8bd0:	str	w8, [x28]
    8bd4:	sub	x2, x29, #0x80
    8bd8:	mov	w1, #0xb                   	// #11
    8bdc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8be0:	ldur	x23, [x29, #-120]
    8be4:	mov	w22, w0
    8be8:	cbz	x23, 8c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1178>
    8bec:	add	x8, x23, #0x8
    8bf0:	cbz	x26, 8c10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1124>
    8bf4:	ldaxr	w9, [x8]
    8bf8:	sub	w10, w9, #0x1
    8bfc:	stlxr	w11, w10, [x8]
    8c00:	cbnz	w11, 8bf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1108>
    8c04:	cmp	w9, #0x1
    8c08:	b.eq	8c24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1138>  // b.none
    8c0c:	b	8c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1178>
    8c10:	ldr	w9, [x8]
    8c14:	sub	w10, w9, #0x1
    8c18:	str	w10, [x8]
    8c1c:	cmp	w9, #0x1
    8c20:	b.ne	8c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1178>  // b.any
    8c24:	mov	x24, x23
    8c28:	ldr	x8, [x24], #12
    8c2c:	mov	x0, x23
    8c30:	ldr	x8, [x8, #16]
    8c34:	blr	x8
    8c38:	cbz	x26, aa90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2fa4>
    8c3c:	ldaxr	w8, [x24]
    8c40:	sub	w9, w8, #0x1
    8c44:	stlxr	w10, w9, [x24]
    8c48:	cbnz	w10, 8c3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1150>
    8c4c:	cmp	w8, #0x1
    8c50:	b.ne	8c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1178>  // b.any
    8c54:	ldr	x8, [x23]
    8c58:	mov	x0, x23
    8c5c:	ldr	x8, [x8, #24]
    8c60:	blr	x8
    8c64:	cmp	w22, #0x6
    8c68:	b.ne	b0b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x35cc>  // b.any
    8c6c:	cbz	x26, 8c8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11a0>
    8c70:	ldaxr	w8, [x28]
    8c74:	sub	w9, w8, #0x1
    8c78:	stlxr	w10, w9, [x28]
    8c7c:	cbnz	w10, 8c70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1184>
    8c80:	cmp	w8, #0x1
    8c84:	b.eq	8ca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11b4>  // b.none
    8c88:	b	8ce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11f4>
    8c8c:	ldr	w8, [x28]
    8c90:	sub	w9, w8, #0x1
    8c94:	str	w9, [x28]
    8c98:	cmp	w8, #0x1
    8c9c:	b.ne	8ce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11f4>  // b.any
    8ca0:	ldr	x8, [x21]
    8ca4:	mov	x0, x21
    8ca8:	add	x22, x21, #0xc
    8cac:	ldr	x8, [x8, #16]
    8cb0:	blr	x8
    8cb4:	cbz	x26, a8e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2df4>
    8cb8:	ldaxr	w8, [x22]
    8cbc:	sub	w9, w8, #0x1
    8cc0:	stlxr	w10, w9, [x22]
    8cc4:	cbnz	w10, 8cb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11cc>
    8cc8:	cmp	w8, #0x1
    8ccc:	b.ne	8ce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11f4>  // b.any
    8cd0:	ldr	x8, [x21]
    8cd4:	mov	x0, x21
    8cd8:	ldr	x8, [x8, #24]
    8cdc:	blr	x8
    8ce0:	mov	w0, #0x220                 	// #544
    8ce4:	bl	0 <_Znwm>
    8ce8:	movi	v0.2s, #0x1
    8cec:	mov	x24, x0
    8cf0:	add	x9, x27, #0x10
    8cf4:	str	d0, [x24, #8]!
    8cf8:	movi	v0.2d, #0x0
    8cfc:	mov	x10, x0
    8d00:	mov	x8, x0
    8d04:	mov	w11, #0x2                   	// #2
    8d08:	str	x9, [x0]
    8d0c:	stp	q0, q0, [x0, #48]
    8d10:	stp	q0, q0, [x0, #80]
    8d14:	stp	q0, q0, [x0, #112]
    8d18:	stp	q0, q0, [x0, #144]
    8d1c:	stp	q0, q0, [x0, #176]
    8d20:	stp	q0, q0, [x0, #208]
    8d24:	stp	q0, q0, [x0, #240]
    8d28:	stp	q0, q0, [x0, #272]
    8d2c:	stp	q0, q0, [x0, #304]
    8d30:	stp	q0, q0, [x0, #336]
    8d34:	stp	q0, q0, [x0, #368]
    8d38:	stp	q0, q0, [x0, #400]
    8d3c:	stp	q0, q0, [x0, #432]
    8d40:	stp	q0, q0, [x0, #464]
    8d44:	stp	q0, q0, [x0, #496]
    8d48:	str	q0, [x10, #32]!
    8d4c:	str	q0, [x0, #528]
    8d50:	str	x10, [x8, #16]!
    8d54:	str	d8, [x0, #24]
    8d58:	str	x11, [x10]
    8d5c:	ldp	w9, w10, [x0, #24]
    8d60:	ldur	w13, [x25, #3]
    8d64:	ldur	w11, [x29, #-16]
    8d68:	mov	w12, #0xff                  	// #255
    8d6c:	cmp	w9, w10
    8d70:	strb	w12, [x0, #40]
    8d74:	str	w13, [x0, #44]
    8d78:	stur	w11, [x0, #41]
    8d7c:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8d80:	add	w9, w9, #0x1
    8d84:	str	w9, [x0, #24]
    8d88:	mov	x21, x0
    8d8c:	ldr	x0, [x19]
    8d90:	stp	x8, x21, [x29, #-144]
    8d94:	cbz	x26, 8dac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x12c0>
    8d98:	ldaxr	w8, [x24]
    8d9c:	add	w8, w8, #0x1
    8da0:	stlxr	w9, w8, [x24]
    8da4:	cbnz	w9, 8d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x12ac>
    8da8:	b	8db4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x12c8>
    8dac:	mov	w8, #0x2                   	// #2
    8db0:	str	w8, [x24]
    8db4:	sub	x2, x29, #0x90
    8db8:	mov	w1, #0xb                   	// #11
    8dbc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    8dc0:	ldur	x23, [x29, #-136]
    8dc4:	mov	w22, w0
    8dc8:	cbz	x23, 8e44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1358>
    8dcc:	add	x8, x23, #0x8
    8dd0:	cbz	x26, 8df0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1304>
    8dd4:	ldaxr	w9, [x8]
    8dd8:	sub	w10, w9, #0x1
    8ddc:	stlxr	w11, w10, [x8]
    8de0:	cbnz	w11, 8dd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x12e8>
    8de4:	cmp	w9, #0x1
    8de8:	b.eq	8e04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1318>  // b.none
    8dec:	b	8e44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1358>
    8df0:	ldr	w9, [x8]
    8df4:	sub	w10, w9, #0x1
    8df8:	str	w10, [x8]
    8dfc:	cmp	w9, #0x1
    8e00:	b.ne	8e44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1358>  // b.any
    8e04:	mov	x28, x23
    8e08:	ldr	x8, [x28], #12
    8e0c:	mov	x0, x23
    8e10:	ldr	x8, [x8, #16]
    8e14:	blr	x8
    8e18:	cbz	x26, aaa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2fbc>
    8e1c:	ldaxr	w8, [x28]
    8e20:	sub	w9, w8, #0x1
    8e24:	stlxr	w10, w9, [x28]
    8e28:	cbnz	w10, 8e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1330>
    8e2c:	cmp	w8, #0x1
    8e30:	b.ne	8e44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1358>  // b.any
    8e34:	ldr	x8, [x23]
    8e38:	mov	x0, x23
    8e3c:	ldr	x8, [x8, #24]
    8e40:	blr	x8
    8e44:	cmp	w22, #0x7
    8e48:	b.ne	b0d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x35e4>  // b.any
    8e4c:	cbz	x26, 8e6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1380>
    8e50:	ldaxr	w8, [x24]
    8e54:	sub	w9, w8, #0x1
    8e58:	stlxr	w10, w9, [x24]
    8e5c:	cbnz	w10, 8e50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1364>
    8e60:	cmp	w8, #0x1
    8e64:	b.eq	8e80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1394>  // b.none
    8e68:	b	8ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13d4>
    8e6c:	ldr	w8, [x24]
    8e70:	sub	w9, w8, #0x1
    8e74:	str	w9, [x24]
    8e78:	cmp	w8, #0x1
    8e7c:	b.ne	8ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13d4>  // b.any
    8e80:	ldr	x8, [x21]
    8e84:	mov	x0, x21
    8e88:	add	x22, x21, #0xc
    8e8c:	ldr	x8, [x8, #16]
    8e90:	blr	x8
    8e94:	cbz	x26, a8f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e0c>
    8e98:	ldaxr	w8, [x22]
    8e9c:	sub	w9, w8, #0x1
    8ea0:	stlxr	w10, w9, [x22]
    8ea4:	cbnz	w10, 8e98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13ac>
    8ea8:	cmp	w8, #0x1
    8eac:	b.ne	8ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13d4>  // b.any
    8eb0:	ldr	x8, [x21]
    8eb4:	mov	x0, x21
    8eb8:	ldr	x8, [x8, #24]
    8ebc:	blr	x8
    8ec0:	mov	w0, #0x220                 	// #544
    8ec4:	bl	0 <_Znwm>
    8ec8:	movi	v0.2s, #0x1
    8ecc:	mov	x28, x0
    8ed0:	add	x8, x27, #0x10
    8ed4:	str	d0, [x28, #8]!
    8ed8:	movi	v0.2d, #0x0
    8edc:	mov	x23, x0
    8ee0:	mov	x22, x0
    8ee4:	mov	w9, #0x14                  	// #20
    8ee8:	str	x8, [x0]
    8eec:	stp	q0, q0, [x0, #48]
    8ef0:	stp	q0, q0, [x0, #80]
    8ef4:	stp	q0, q0, [x0, #112]
    8ef8:	stp	q0, q0, [x0, #144]
    8efc:	stp	q0, q0, [x0, #176]
    8f00:	stp	q0, q0, [x0, #208]
    8f04:	stp	q0, q0, [x0, #240]
    8f08:	stp	q0, q0, [x0, #272]
    8f0c:	stp	q0, q0, [x0, #304]
    8f10:	stp	q0, q0, [x0, #336]
    8f14:	stp	q0, q0, [x0, #368]
    8f18:	stp	q0, q0, [x0, #400]
    8f1c:	stp	q0, q0, [x0, #432]
    8f20:	stp	q0, q0, [x0, #464]
    8f24:	stp	q0, q0, [x0, #496]
    8f28:	str	q0, [x23, #32]!
    8f2c:	str	q0, [x0, #528]
    8f30:	str	x23, [x22, #16]!
    8f34:	str	d8, [x0, #24]
    8f38:	str	x9, [x23]
    8f3c:	ldp	w8, w9, [x0, #24]
    8f40:	ldur	w11, [x25, #3]
    8f44:	ldur	w12, [x29, #-16]
    8f48:	mov	w10, #0xff                  	// #255
    8f4c:	cmp	w8, w9
    8f50:	strb	w10, [x0, #40]
    8f54:	str	w11, [x0, #44]
    8f58:	stur	w12, [x0, #41]
    8f5c:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8f60:	add	w8, w8, #0x1
    8f64:	mov	x21, x0
    8f68:	cmp	w8, w9
    8f6c:	str	w8, [x0, #24]
    8f70:	b.cs	ad6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3280>  // b.hs, b.nlast
    8f74:	ldr	x9, [x21, #16]
    8f78:	mov	w10, #0x6                   	// #6
    8f7c:	mov	w11, #0x4                   	// #4
    8f80:	add	x8, x9, w8, uxtw #4
    8f84:	str	x10, [x8]
    8f88:	strb	w11, [x8, #8]
    8f8c:	ldur	w9, [x25, #3]
    8f90:	ldur	w10, [x29, #-16]
    8f94:	str	w9, [x8, #12]
    8f98:	stur	w10, [x8, #9]
    8f9c:	ldp	w8, w9, [x21, #24]
    8fa0:	cmp	w8, w9
    8fa4:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8fa8:	add	w8, w8, #0x1
    8fac:	mov	x0, x20
    8fb0:	str	w8, [x21, #24]
    8fb4:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    8fb8:	ldp	w8, w9, [x21, #24]
    8fbc:	mov	x24, x0
    8fc0:	cmp	w8, w9
    8fc4:	b.cs	ad88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x329c>  // b.hs, b.nlast
    8fc8:	ldr	x9, [x21, #16]
    8fcc:	mov	w10, #0x2                   	// #2
    8fd0:	add	x8, x9, w8, uxtw #4
    8fd4:	str	x24, [x8]
    8fd8:	strb	w10, [x8, #8]
    8fdc:	ldur	w9, [x25, #3]
    8fe0:	ldur	w10, [x29, #-16]
    8fe4:	str	w9, [x8, #12]
    8fe8:	stur	w10, [x8, #9]
    8fec:	ldp	w8, w9, [x21, #24]
    8ff0:	cmp	w8, w9
    8ff4:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    8ff8:	add	w8, w8, #0x1
    8ffc:	cmp	w8, w9
    9000:	str	w8, [x21, #24]
    9004:	b.cs	ada4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x32b8>  // b.hs, b.nlast
    9008:	ldr	x9, [x21, #16]
    900c:	mov	w10, #0x4                   	// #4
    9010:	add	x8, x9, w8, uxtw #4
    9014:	str	x10, [x8]
    9018:	strb	w10, [x8, #8]
    901c:	ldur	w9, [x25, #3]
    9020:	ldur	w10, [x29, #-16]
    9024:	str	w9, [x8, #12]
    9028:	stur	w10, [x8, #9]
    902c:	ldp	w8, w9, [x21, #24]
    9030:	cmp	w8, w9
    9034:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9038:	add	w8, w8, #0x1
    903c:	cmp	w8, w9
    9040:	str	w8, [x21, #24]
    9044:	b.cs	adc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x32d4>  // b.hs, b.nlast
    9048:	ldr	x9, [x21, #16]
    904c:	mov	w10, #0x1                   	// #1
    9050:	mov	w11, #0x2                   	// #2
    9054:	add	x8, x9, w8, uxtw #4
    9058:	str	x10, [x8]
    905c:	strb	w11, [x8, #8]
    9060:	ldur	w9, [x25, #3]
    9064:	ldur	w10, [x29, #-16]
    9068:	str	w9, [x8, #12]
    906c:	stur	w10, [x8, #9]
    9070:	ldp	w8, w9, [x21, #24]
    9074:	cmp	w8, w9
    9078:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    907c:	add	w8, w8, #0x1
    9080:	str	w8, [x21, #24]
    9084:	ldr	x0, [x19]
    9088:	stp	x22, x21, [sp, #144]
    908c:	cbz	x26, 90a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x15b8>
    9090:	ldaxr	w8, [x28]
    9094:	add	w8, w8, #0x1
    9098:	stlxr	w9, w8, [x28]
    909c:	cbnz	w9, 9090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x15a4>
    90a0:	b	90b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x15c4>
    90a4:	ldr	w8, [x28]
    90a8:	add	w8, w8, #0x1
    90ac:	str	w8, [x28]
    90b0:	add	x2, sp, #0x90
    90b4:	mov	w1, #0xc                   	// #12
    90b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    90bc:	ldr	x23, [sp, #152]
    90c0:	mov	w22, w0
    90c4:	cbz	x23, 9140 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1654>
    90c8:	add	x8, x23, #0x8
    90cc:	cbz	x26, 90ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1600>
    90d0:	ldaxr	w9, [x8]
    90d4:	sub	w10, w9, #0x1
    90d8:	stlxr	w11, w10, [x8]
    90dc:	cbnz	w11, 90d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x15e4>
    90e0:	cmp	w9, #0x1
    90e4:	b.eq	9100 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1614>  // b.none
    90e8:	b	9140 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1654>
    90ec:	ldr	w9, [x8]
    90f0:	sub	w10, w9, #0x1
    90f4:	str	w10, [x8]
    90f8:	cmp	w9, #0x1
    90fc:	b.ne	9140 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1654>  // b.any
    9100:	mov	x24, x23
    9104:	ldr	x8, [x24], #12
    9108:	mov	x0, x23
    910c:	ldr	x8, [x8, #16]
    9110:	blr	x8
    9114:	cbz	x26, aac0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2fd4>
    9118:	ldaxr	w8, [x24]
    911c:	sub	w9, w8, #0x1
    9120:	stlxr	w10, w9, [x24]
    9124:	cbnz	w10, 9118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x162c>
    9128:	cmp	w8, #0x1
    912c:	b.ne	9140 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1654>  // b.any
    9130:	ldr	x8, [x23]
    9134:	mov	x0, x23
    9138:	ldr	x8, [x8, #24]
    913c:	blr	x8
    9140:	cmp	w22, #0x4
    9144:	b.ne	b0e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x35fc>  // b.any
    9148:	cbz	x26, 9168 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x167c>
    914c:	ldaxr	w8, [x28]
    9150:	sub	w9, w8, #0x1
    9154:	stlxr	w10, w9, [x28]
    9158:	cbnz	w10, 914c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1660>
    915c:	cmp	w8, #0x1
    9160:	b.eq	917c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1690>  // b.none
    9164:	b	91bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16d0>
    9168:	ldr	w8, [x28]
    916c:	sub	w9, w8, #0x1
    9170:	str	w9, [x28]
    9174:	cmp	w8, #0x1
    9178:	b.ne	91bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16d0>  // b.any
    917c:	ldr	x8, [x21]
    9180:	mov	x0, x21
    9184:	add	x22, x21, #0xc
    9188:	ldr	x8, [x8, #16]
    918c:	blr	x8
    9190:	cbz	x26, a910 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e24>
    9194:	ldaxr	w8, [x22]
    9198:	sub	w9, w8, #0x1
    919c:	stlxr	w10, w9, [x22]
    91a0:	cbnz	w10, 9194 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16a8>
    91a4:	cmp	w8, #0x1
    91a8:	b.ne	91bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16d0>  // b.any
    91ac:	ldr	x8, [x21]
    91b0:	mov	x0, x21
    91b4:	ldr	x8, [x8, #24]
    91b8:	blr	x8
    91bc:	mov	w0, #0x220                 	// #544
    91c0:	bl	0 <_Znwm>
    91c4:	movi	v0.2s, #0x1
    91c8:	mov	x24, x0
    91cc:	add	x8, x27, #0x10
    91d0:	str	d0, [x24, #8]!
    91d4:	movi	v0.2d, #0x0
    91d8:	mov	x23, x0
    91dc:	mov	x22, x0
    91e0:	mov	w9, #0x38                  	// #56
    91e4:	str	x8, [x0]
    91e8:	stp	q0, q0, [x0, #48]
    91ec:	stp	q0, q0, [x0, #80]
    91f0:	stp	q0, q0, [x0, #112]
    91f4:	stp	q0, q0, [x0, #144]
    91f8:	stp	q0, q0, [x0, #176]
    91fc:	stp	q0, q0, [x0, #208]
    9200:	stp	q0, q0, [x0, #240]
    9204:	stp	q0, q0, [x0, #272]
    9208:	stp	q0, q0, [x0, #304]
    920c:	stp	q0, q0, [x0, #336]
    9210:	stp	q0, q0, [x0, #368]
    9214:	stp	q0, q0, [x0, #400]
    9218:	stp	q0, q0, [x0, #432]
    921c:	stp	q0, q0, [x0, #464]
    9220:	stp	q0, q0, [x0, #496]
    9224:	str	q0, [x23, #32]!
    9228:	str	q0, [x0, #528]
    922c:	str	x23, [x22, #16]!
    9230:	str	d8, [x0, #24]
    9234:	str	x9, [x23]
    9238:	ldp	w8, w9, [x0, #24]
    923c:	ldur	w11, [x25, #3]
    9240:	ldur	w12, [x29, #-16]
    9244:	mov	w10, #0xff                  	// #255
    9248:	cmp	w8, w9
    924c:	strb	w10, [x0, #40]
    9250:	str	w11, [x0, #44]
    9254:	stur	w12, [x0, #41]
    9258:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    925c:	add	w8, w8, #0x1
    9260:	mov	x21, x0
    9264:	cmp	w8, w9
    9268:	str	w8, [x0, #24]
    926c:	b.cs	addc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x32f0>  // b.hs, b.nlast
    9270:	ldr	x9, [x21, #16]
    9274:	mov	w10, #0x6                   	// #6
    9278:	mov	w11, #0x4                   	// #4
    927c:	add	x8, x9, w8, uxtw #4
    9280:	str	x10, [x8]
    9284:	strb	w11, [x8, #8]
    9288:	ldur	w9, [x25, #3]
    928c:	ldur	w10, [x29, #-16]
    9290:	str	w9, [x8, #12]
    9294:	stur	w10, [x8, #9]
    9298:	ldp	w8, w9, [x21, #24]
    929c:	cmp	w8, w9
    92a0:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    92a4:	add	w8, w8, #0x1
    92a8:	cmp	w8, w9
    92ac:	str	w8, [x21, #24]
    92b0:	b.cs	adf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x330c>  // b.hs, b.nlast
    92b4:	ldr	x9, [x21, #16]
    92b8:	mov	w10, #0x4                   	// #4
    92bc:	mov	w11, #0x2                   	// #2
    92c0:	add	x8, x9, w8, uxtw #4
    92c4:	str	x10, [x8]
    92c8:	strb	w11, [x8, #8]
    92cc:	ldur	w9, [x25, #3]
    92d0:	ldur	w10, [x29, #-16]
    92d4:	str	w9, [x8, #12]
    92d8:	stur	w10, [x8, #9]
    92dc:	ldp	w8, w9, [x21, #24]
    92e0:	cmp	w8, w9
    92e4:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    92e8:	add	w8, w8, #0x1
    92ec:	str	w8, [x21, #24]
    92f0:	ldr	x0, [x19]
    92f4:	stp	x22, x21, [sp, #128]
    92f8:	cbz	x26, 9310 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1824>
    92fc:	ldaxr	w8, [x24]
    9300:	add	w8, w8, #0x1
    9304:	stlxr	w9, w8, [x24]
    9308:	cbnz	w9, 92fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1810>
    930c:	b	931c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1830>
    9310:	ldr	w8, [x24]
    9314:	add	w8, w8, #0x1
    9318:	str	w8, [x24]
    931c:	add	x2, sp, #0x80
    9320:	mov	w1, #0xc                   	// #12
    9324:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9328:	ldr	x23, [sp, #136]
    932c:	mov	w22, w0
    9330:	cbz	x23, 93ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18c0>
    9334:	add	x8, x23, #0x8
    9338:	cbz	x26, 9358 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x186c>
    933c:	ldaxr	w9, [x8]
    9340:	sub	w10, w9, #0x1
    9344:	stlxr	w11, w10, [x8]
    9348:	cbnz	w11, 933c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1850>
    934c:	cmp	w9, #0x1
    9350:	b.eq	936c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1880>  // b.none
    9354:	b	93ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18c0>
    9358:	ldr	w9, [x8]
    935c:	sub	w10, w9, #0x1
    9360:	str	w10, [x8]
    9364:	cmp	w9, #0x1
    9368:	b.ne	93ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18c0>  // b.any
    936c:	mov	x28, x23
    9370:	ldr	x8, [x28], #12
    9374:	mov	x0, x23
    9378:	ldr	x8, [x8, #16]
    937c:	blr	x8
    9380:	cbz	x26, aad8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2fec>
    9384:	ldaxr	w8, [x28]
    9388:	sub	w9, w8, #0x1
    938c:	stlxr	w10, w9, [x28]
    9390:	cbnz	w10, 9384 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1898>
    9394:	cmp	w8, #0x1
    9398:	b.ne	93ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18c0>  // b.any
    939c:	ldr	x8, [x23]
    93a0:	mov	x0, x23
    93a4:	ldr	x8, [x8, #24]
    93a8:	blr	x8
    93ac:	cmp	w22, #0x5
    93b0:	b.ne	b100 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3614>  // b.any
    93b4:	cbz	x26, 93d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18e8>
    93b8:	ldaxr	w8, [x24]
    93bc:	sub	w9, w8, #0x1
    93c0:	stlxr	w10, w9, [x24]
    93c4:	cbnz	w10, 93b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18cc>
    93c8:	cmp	w8, #0x1
    93cc:	b.eq	93e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18fc>  // b.none
    93d0:	b	9428 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x193c>
    93d4:	ldr	w8, [x24]
    93d8:	sub	w9, w8, #0x1
    93dc:	str	w9, [x24]
    93e0:	cmp	w8, #0x1
    93e4:	b.ne	9428 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x193c>  // b.any
    93e8:	ldr	x8, [x21]
    93ec:	mov	x0, x21
    93f0:	add	x22, x21, #0xc
    93f4:	ldr	x8, [x8, #16]
    93f8:	blr	x8
    93fc:	cbz	x26, a928 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e3c>
    9400:	ldaxr	w8, [x22]
    9404:	sub	w9, w8, #0x1
    9408:	stlxr	w10, w9, [x22]
    940c:	cbnz	w10, 9400 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1914>
    9410:	cmp	w8, #0x1
    9414:	b.ne	9428 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x193c>  // b.any
    9418:	ldr	x8, [x21]
    941c:	mov	x0, x21
    9420:	ldr	x8, [x8, #24]
    9424:	blr	x8
    9428:	mov	w0, #0x220                 	// #544
    942c:	bl	0 <_Znwm>
    9430:	movi	v0.2s, #0x1
    9434:	mov	x24, x0
    9438:	add	x8, x27, #0x10
    943c:	str	d0, [x24, #8]!
    9440:	movi	v0.2d, #0x0
    9444:	mov	x23, x0
    9448:	mov	x22, x0
    944c:	mov	w9, #0x38                  	// #56
    9450:	str	x8, [x0]
    9454:	stp	q0, q0, [x0, #48]
    9458:	stp	q0, q0, [x0, #80]
    945c:	stp	q0, q0, [x0, #112]
    9460:	stp	q0, q0, [x0, #144]
    9464:	stp	q0, q0, [x0, #176]
    9468:	stp	q0, q0, [x0, #208]
    946c:	stp	q0, q0, [x0, #240]
    9470:	stp	q0, q0, [x0, #272]
    9474:	stp	q0, q0, [x0, #304]
    9478:	stp	q0, q0, [x0, #336]
    947c:	stp	q0, q0, [x0, #368]
    9480:	stp	q0, q0, [x0, #400]
    9484:	stp	q0, q0, [x0, #432]
    9488:	stp	q0, q0, [x0, #464]
    948c:	stp	q0, q0, [x0, #496]
    9490:	str	q0, [x23, #32]!
    9494:	str	q0, [x0, #528]
    9498:	str	x23, [x22, #16]!
    949c:	str	d8, [x0, #24]
    94a0:	str	x9, [x23]
    94a4:	ldp	w8, w9, [x0, #24]
    94a8:	ldur	w11, [x25, #3]
    94ac:	ldur	w12, [x29, #-16]
    94b0:	mov	w10, #0xff                  	// #255
    94b4:	cmp	w8, w9
    94b8:	strb	w10, [x0, #40]
    94bc:	str	w11, [x0, #44]
    94c0:	stur	w12, [x0, #41]
    94c4:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    94c8:	add	w8, w8, #0x1
    94cc:	mov	x21, x0
    94d0:	cmp	w8, w9
    94d4:	str	w8, [x0, #24]
    94d8:	b.cs	ae14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3328>  // b.hs, b.nlast
    94dc:	ldr	x9, [x21, #16]
    94e0:	mov	w10, #0x6                   	// #6
    94e4:	mov	w11, #0x4                   	// #4
    94e8:	add	x8, x9, w8, uxtw #4
    94ec:	str	x10, [x8]
    94f0:	strb	w11, [x8, #8]
    94f4:	ldur	w9, [x25, #3]
    94f8:	ldur	w10, [x29, #-16]
    94fc:	str	w9, [x8, #12]
    9500:	stur	w10, [x8, #9]
    9504:	ldp	w8, w9, [x21, #24]
    9508:	cmp	w8, w9
    950c:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9510:	add	w8, w8, #0x1
    9514:	cmp	w8, w9
    9518:	str	w8, [x21, #24]
    951c:	b.cs	ae30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3344>  // b.hs, b.nlast
    9520:	ldr	x9, [x21, #16]
    9524:	mov	w10, #0x4                   	// #4
    9528:	mov	w11, #0x2                   	// #2
    952c:	add	x8, x9, w8, uxtw #4
    9530:	str	x10, [x8]
    9534:	strb	w11, [x8, #8]
    9538:	ldur	w9, [x25, #3]
    953c:	ldur	w10, [x29, #-16]
    9540:	str	w9, [x8, #12]
    9544:	stur	w10, [x8, #9]
    9548:	ldp	w8, w9, [x21, #24]
    954c:	cmp	w8, w9
    9550:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9554:	add	w8, w8, #0x1
    9558:	cmp	w8, w9
    955c:	str	w8, [x21, #24]
    9560:	b.cs	ae4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3360>  // b.hs, b.nlast
    9564:	ldr	x9, [x21, #16]
    9568:	mov	w10, #0x8                   	// #8
    956c:	mov	w11, #0x2                   	// #2
    9570:	add	x8, x9, w8, uxtw #4
    9574:	str	x10, [x8]
    9578:	strb	w11, [x8, #8]
    957c:	ldur	w9, [x25, #3]
    9580:	ldur	w10, [x29, #-16]
    9584:	str	w9, [x8, #12]
    9588:	stur	w10, [x8, #9]
    958c:	ldp	w8, w9, [x21, #24]
    9590:	cmp	w8, w9
    9594:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9598:	add	w8, w8, #0x1
    959c:	str	w8, [x21, #24]
    95a0:	ldr	x0, [x19]
    95a4:	stp	x22, x21, [sp, #112]
    95a8:	cbz	x26, 95c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1ad4>
    95ac:	ldaxr	w8, [x24]
    95b0:	add	w8, w8, #0x1
    95b4:	stlxr	w9, w8, [x24]
    95b8:	cbnz	w9, 95ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1ac0>
    95bc:	b	95cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1ae0>
    95c0:	ldr	w8, [x24]
    95c4:	add	w8, w8, #0x1
    95c8:	str	w8, [x24]
    95cc:	add	x2, sp, #0x70
    95d0:	mov	w1, #0xc                   	// #12
    95d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    95d8:	ldr	x23, [sp, #120]
    95dc:	mov	w22, w0
    95e0:	cbz	x23, 965c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b70>
    95e4:	add	x8, x23, #0x8
    95e8:	cbz	x26, 9608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b1c>
    95ec:	ldaxr	w9, [x8]
    95f0:	sub	w10, w9, #0x1
    95f4:	stlxr	w11, w10, [x8]
    95f8:	cbnz	w11, 95ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b00>
    95fc:	cmp	w9, #0x1
    9600:	b.eq	961c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b30>  // b.none
    9604:	b	965c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b70>
    9608:	ldr	w9, [x8]
    960c:	sub	w10, w9, #0x1
    9610:	str	w10, [x8]
    9614:	cmp	w9, #0x1
    9618:	b.ne	965c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b70>  // b.any
    961c:	mov	x28, x23
    9620:	ldr	x8, [x28], #12
    9624:	mov	x0, x23
    9628:	ldr	x8, [x8, #16]
    962c:	blr	x8
    9630:	cbz	x26, aaf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3004>
    9634:	ldaxr	w8, [x28]
    9638:	sub	w9, w8, #0x1
    963c:	stlxr	w10, w9, [x28]
    9640:	cbnz	w10, 9634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b48>
    9644:	cmp	w8, #0x1
    9648:	b.ne	965c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b70>  // b.any
    964c:	ldr	x8, [x23]
    9650:	mov	x0, x23
    9654:	ldr	x8, [x8, #24]
    9658:	blr	x8
    965c:	cmp	w22, #0x6
    9660:	b.ne	b118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x362c>  // b.any
    9664:	cbz	x26, 9684 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b98>
    9668:	ldaxr	w8, [x24]
    966c:	sub	w9, w8, #0x1
    9670:	stlxr	w10, w9, [x24]
    9674:	cbnz	w10, 9668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b7c>
    9678:	cmp	w8, #0x1
    967c:	b.eq	9698 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bac>  // b.none
    9680:	b	96d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bec>
    9684:	ldr	w8, [x24]
    9688:	sub	w9, w8, #0x1
    968c:	str	w9, [x24]
    9690:	cmp	w8, #0x1
    9694:	b.ne	96d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bec>  // b.any
    9698:	ldr	x8, [x21]
    969c:	mov	x0, x21
    96a0:	add	x22, x21, #0xc
    96a4:	ldr	x8, [x8, #16]
    96a8:	blr	x8
    96ac:	cbz	x26, a940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e54>
    96b0:	ldaxr	w8, [x22]
    96b4:	sub	w9, w8, #0x1
    96b8:	stlxr	w10, w9, [x22]
    96bc:	cbnz	w10, 96b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bc4>
    96c0:	cmp	w8, #0x1
    96c4:	b.ne	96d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bec>  // b.any
    96c8:	ldr	x8, [x21]
    96cc:	mov	x0, x21
    96d0:	ldr	x8, [x8, #24]
    96d4:	blr	x8
    96d8:	mov	w0, #0x220                 	// #544
    96dc:	bl	0 <_Znwm>
    96e0:	movi	v0.2s, #0x1
    96e4:	mov	x24, x0
    96e8:	add	x8, x27, #0x10
    96ec:	str	d0, [x24, #8]!
    96f0:	movi	v0.2d, #0x0
    96f4:	mov	x23, x0
    96f8:	mov	x22, x0
    96fc:	mov	w9, #0x2                   	// #2
    9700:	str	x8, [x0]
    9704:	stp	q0, q0, [x0, #48]
    9708:	stp	q0, q0, [x0, #80]
    970c:	stp	q0, q0, [x0, #112]
    9710:	stp	q0, q0, [x0, #144]
    9714:	stp	q0, q0, [x0, #176]
    9718:	stp	q0, q0, [x0, #208]
    971c:	stp	q0, q0, [x0, #240]
    9720:	stp	q0, q0, [x0, #272]
    9724:	stp	q0, q0, [x0, #304]
    9728:	stp	q0, q0, [x0, #336]
    972c:	stp	q0, q0, [x0, #368]
    9730:	stp	q0, q0, [x0, #400]
    9734:	stp	q0, q0, [x0, #432]
    9738:	stp	q0, q0, [x0, #464]
    973c:	stp	q0, q0, [x0, #496]
    9740:	str	q0, [x23, #32]!
    9744:	str	q0, [x0, #528]
    9748:	str	x23, [x22, #16]!
    974c:	str	d8, [x0, #24]
    9750:	str	x9, [x23]
    9754:	ldp	w8, w9, [x0, #24]
    9758:	ldur	w11, [x25, #3]
    975c:	ldur	w12, [x29, #-16]
    9760:	mov	w10, #0xff                  	// #255
    9764:	cmp	w8, w9
    9768:	strb	w10, [x0, #40]
    976c:	str	w11, [x0, #44]
    9770:	stur	w12, [x0, #41]
    9774:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9778:	add	w8, w8, #0x1
    977c:	mov	x21, x0
    9780:	cmp	w8, w9
    9784:	str	w8, [x0, #24]
    9788:	b.cs	ae68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x337c>  // b.hs, b.nlast
    978c:	ldr	x9, [x21, #16]
    9790:	mov	w10, #0x6                   	// #6
    9794:	mov	w11, #0x4                   	// #4
    9798:	add	x8, x9, w8, uxtw #4
    979c:	str	x10, [x8]
    97a0:	strb	w11, [x8, #8]
    97a4:	ldur	w9, [x25, #3]
    97a8:	ldur	w10, [x29, #-16]
    97ac:	str	w9, [x8, #12]
    97b0:	stur	w10, [x8, #9]
    97b4:	ldp	w8, w9, [x21, #24]
    97b8:	cmp	w8, w9
    97bc:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    97c0:	add	w8, w8, #0x1
    97c4:	cmp	w8, w9
    97c8:	str	w8, [x21, #24]
    97cc:	b.cs	ae84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3398>  // b.hs, b.nlast
    97d0:	ldr	x9, [x21, #16]
    97d4:	mov	w10, #0x6                   	// #6
    97d8:	mov	w11, #0x4                   	// #4
    97dc:	add	x8, x9, w8, uxtw #4
    97e0:	str	x10, [x8]
    97e4:	strb	w11, [x8, #8]
    97e8:	ldur	w9, [x25, #3]
    97ec:	ldur	w10, [x29, #-16]
    97f0:	str	w9, [x8, #12]
    97f4:	stur	w10, [x8, #9]
    97f8:	ldp	w8, w9, [x21, #24]
    97fc:	cmp	w8, w9
    9800:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9804:	add	w8, w8, #0x1
    9808:	cmp	w8, w9
    980c:	str	w8, [x21, #24]
    9810:	b.cs	aea0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x33b4>  // b.hs, b.nlast
    9814:	ldr	x9, [x21, #16]
    9818:	mov	w10, #0x4                   	// #4
    981c:	mov	w11, #0x2                   	// #2
    9820:	add	x8, x9, w8, uxtw #4
    9824:	str	x10, [x8]
    9828:	strb	w11, [x8, #8]
    982c:	ldur	w9, [x25, #3]
    9830:	ldur	w10, [x29, #-16]
    9834:	str	w9, [x8, #12]
    9838:	stur	w10, [x8, #9]
    983c:	ldp	w8, w9, [x21, #24]
    9840:	cmp	w8, w9
    9844:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9848:	add	w8, w8, #0x1
    984c:	str	w8, [x21, #24]
    9850:	ldr	x0, [x19]
    9854:	stp	x22, x21, [sp, #96]
    9858:	cbz	x26, 9870 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1d84>
    985c:	ldaxr	w8, [x24]
    9860:	add	w8, w8, #0x1
    9864:	stlxr	w9, w8, [x24]
    9868:	cbnz	w9, 985c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1d70>
    986c:	b	987c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1d90>
    9870:	ldr	w8, [x24]
    9874:	add	w8, w8, #0x1
    9878:	str	w8, [x24]
    987c:	add	x2, sp, #0x60
    9880:	mov	w1, #0xc                   	// #12
    9884:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9888:	ldr	x23, [sp, #104]
    988c:	mov	w22, w0
    9890:	cbz	x23, 990c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e20>
    9894:	add	x8, x23, #0x8
    9898:	cbz	x26, 98b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1dcc>
    989c:	ldaxr	w9, [x8]
    98a0:	sub	w10, w9, #0x1
    98a4:	stlxr	w11, w10, [x8]
    98a8:	cbnz	w11, 989c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1db0>
    98ac:	cmp	w9, #0x1
    98b0:	b.eq	98cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1de0>  // b.none
    98b4:	b	990c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e20>
    98b8:	ldr	w9, [x8]
    98bc:	sub	w10, w9, #0x1
    98c0:	str	w10, [x8]
    98c4:	cmp	w9, #0x1
    98c8:	b.ne	990c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e20>  // b.any
    98cc:	mov	x28, x23
    98d0:	ldr	x8, [x28], #12
    98d4:	mov	x0, x23
    98d8:	ldr	x8, [x8, #16]
    98dc:	blr	x8
    98e0:	cbz	x26, ab08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x301c>
    98e4:	ldaxr	w8, [x28]
    98e8:	sub	w9, w8, #0x1
    98ec:	stlxr	w10, w9, [x28]
    98f0:	cbnz	w10, 98e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1df8>
    98f4:	cmp	w8, #0x1
    98f8:	b.ne	990c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e20>  // b.any
    98fc:	ldr	x8, [x23]
    9900:	mov	x0, x23
    9904:	ldr	x8, [x8, #24]
    9908:	blr	x8
    990c:	cmp	w22, #0x7
    9910:	b.ne	b130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3644>  // b.any
    9914:	cbz	x26, 9934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e48>
    9918:	ldaxr	w8, [x24]
    991c:	sub	w9, w8, #0x1
    9920:	stlxr	w10, w9, [x24]
    9924:	cbnz	w10, 9918 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e2c>
    9928:	cmp	w8, #0x1
    992c:	b.eq	9948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e5c>  // b.none
    9930:	b	9988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e9c>
    9934:	ldr	w8, [x24]
    9938:	sub	w9, w8, #0x1
    993c:	str	w9, [x24]
    9940:	cmp	w8, #0x1
    9944:	b.ne	9988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e9c>  // b.any
    9948:	ldr	x8, [x21]
    994c:	mov	x0, x21
    9950:	add	x22, x21, #0xc
    9954:	ldr	x8, [x8, #16]
    9958:	blr	x8
    995c:	cbz	x26, a958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e6c>
    9960:	ldaxr	w8, [x22]
    9964:	sub	w9, w8, #0x1
    9968:	stlxr	w10, w9, [x22]
    996c:	cbnz	w10, 9960 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e74>
    9970:	cmp	w8, #0x1
    9974:	b.ne	9988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e9c>  // b.any
    9978:	ldr	x8, [x21]
    997c:	mov	x0, x21
    9980:	ldr	x8, [x8, #24]
    9984:	blr	x8
    9988:	mov	w0, #0x220                 	// #544
    998c:	bl	0 <_Znwm>
    9990:	movi	v0.2s, #0x1
    9994:	mov	x24, x0
    9998:	add	x8, x27, #0x10
    999c:	str	d0, [x24, #8]!
    99a0:	movi	v0.2d, #0x0
    99a4:	mov	x23, x0
    99a8:	mov	x22, x0
    99ac:	mov	w9, #0x2                   	// #2
    99b0:	str	x8, [x0]
    99b4:	stp	q0, q0, [x0, #48]
    99b8:	stp	q0, q0, [x0, #80]
    99bc:	stp	q0, q0, [x0, #112]
    99c0:	stp	q0, q0, [x0, #144]
    99c4:	stp	q0, q0, [x0, #176]
    99c8:	stp	q0, q0, [x0, #208]
    99cc:	stp	q0, q0, [x0, #240]
    99d0:	stp	q0, q0, [x0, #272]
    99d4:	stp	q0, q0, [x0, #304]
    99d8:	stp	q0, q0, [x0, #336]
    99dc:	stp	q0, q0, [x0, #368]
    99e0:	stp	q0, q0, [x0, #400]
    99e4:	stp	q0, q0, [x0, #432]
    99e8:	stp	q0, q0, [x0, #464]
    99ec:	stp	q0, q0, [x0, #496]
    99f0:	str	q0, [x23, #32]!
    99f4:	str	q0, [x0, #528]
    99f8:	str	x23, [x22, #16]!
    99fc:	str	d8, [x0, #24]
    9a00:	str	x9, [x23]
    9a04:	ldp	w8, w9, [x0, #24]
    9a08:	ldur	w11, [x25, #3]
    9a0c:	ldur	w12, [x29, #-16]
    9a10:	mov	w10, #0xff                  	// #255
    9a14:	cmp	w8, w9
    9a18:	strb	w10, [x0, #40]
    9a1c:	str	w11, [x0, #44]
    9a20:	stur	w12, [x0, #41]
    9a24:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9a28:	add	w8, w8, #0x1
    9a2c:	mov	x21, x0
    9a30:	cmp	w8, w9
    9a34:	str	w8, [x0, #24]
    9a38:	b.cs	aebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x33d0>  // b.hs, b.nlast
    9a3c:	ldr	x9, [x21, #16]
    9a40:	mov	w10, #0x6                   	// #6
    9a44:	mov	w11, #0x4                   	// #4
    9a48:	add	x8, x9, w8, uxtw #4
    9a4c:	str	x10, [x8]
    9a50:	strb	w11, [x8, #8]
    9a54:	ldur	w9, [x25, #3]
    9a58:	ldur	w10, [x29, #-16]
    9a5c:	str	w9, [x8, #12]
    9a60:	stur	w10, [x8, #9]
    9a64:	ldp	w8, w9, [x21, #24]
    9a68:	cmp	w8, w9
    9a6c:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9a70:	add	w8, w8, #0x1
    9a74:	cmp	w8, w9
    9a78:	str	w8, [x21, #24]
    9a7c:	b.cs	aed8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x33ec>  // b.hs, b.nlast
    9a80:	ldr	x9, [x21, #16]
    9a84:	mov	w10, #0x6                   	// #6
    9a88:	mov	w11, #0x4                   	// #4
    9a8c:	add	x8, x9, w8, uxtw #4
    9a90:	str	x10, [x8]
    9a94:	strb	w11, [x8, #8]
    9a98:	ldur	w9, [x25, #3]
    9a9c:	ldur	w10, [x29, #-16]
    9aa0:	str	w9, [x8, #12]
    9aa4:	stur	w10, [x8, #9]
    9aa8:	ldp	w8, w9, [x21, #24]
    9aac:	cmp	w8, w9
    9ab0:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9ab4:	add	w8, w8, #0x1
    9ab8:	cmp	w8, w9
    9abc:	str	w8, [x21, #24]
    9ac0:	b.cs	aef4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3408>  // b.hs, b.nlast
    9ac4:	ldr	x9, [x21, #16]
    9ac8:	mov	w10, #0x4                   	// #4
    9acc:	mov	w11, #0x2                   	// #2
    9ad0:	add	x8, x9, w8, uxtw #4
    9ad4:	str	x10, [x8]
    9ad8:	strb	w11, [x8, #8]
    9adc:	ldur	w9, [x25, #3]
    9ae0:	ldur	w10, [x29, #-16]
    9ae4:	str	w9, [x8, #12]
    9ae8:	stur	w10, [x8, #9]
    9aec:	ldp	w8, w9, [x21, #24]
    9af0:	cmp	w8, w9
    9af4:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9af8:	add	w8, w8, #0x1
    9afc:	cmp	w8, w9
    9b00:	str	w8, [x21, #24]
    9b04:	b.cs	af10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3424>  // b.hs, b.nlast
    9b08:	ldr	x9, [x21, #16]
    9b0c:	mov	w10, #0x8                   	// #8
    9b10:	mov	w11, #0x2                   	// #2
    9b14:	add	x8, x9, w8, uxtw #4
    9b18:	str	x10, [x8]
    9b1c:	strb	w11, [x8, #8]
    9b20:	ldur	w9, [x25, #3]
    9b24:	ldur	w10, [x29, #-16]
    9b28:	str	w9, [x8, #12]
    9b2c:	stur	w10, [x8, #9]
    9b30:	ldp	w8, w9, [x21, #24]
    9b34:	cmp	w8, w9
    9b38:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9b3c:	add	w8, w8, #0x1
    9b40:	str	w8, [x21, #24]
    9b44:	ldr	x0, [x19]
    9b48:	stp	x22, x21, [sp, #80]
    9b4c:	cbz	x26, 9b64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2078>
    9b50:	ldaxr	w8, [x24]
    9b54:	add	w8, w8, #0x1
    9b58:	stlxr	w9, w8, [x24]
    9b5c:	cbnz	w9, 9b50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2064>
    9b60:	b	9b70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2084>
    9b64:	ldr	w8, [x24]
    9b68:	add	w8, w8, #0x1
    9b6c:	str	w8, [x24]
    9b70:	add	x2, sp, #0x50
    9b74:	mov	w1, #0xc                   	// #12
    9b78:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9b7c:	ldr	x23, [sp, #88]
    9b80:	mov	w22, w0
    9b84:	cbz	x23, 9c00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2114>
    9b88:	add	x8, x23, #0x8
    9b8c:	cbz	x26, 9bac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x20c0>
    9b90:	ldaxr	w9, [x8]
    9b94:	sub	w10, w9, #0x1
    9b98:	stlxr	w11, w10, [x8]
    9b9c:	cbnz	w11, 9b90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x20a4>
    9ba0:	cmp	w9, #0x1
    9ba4:	b.eq	9bc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x20d4>  // b.none
    9ba8:	b	9c00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2114>
    9bac:	ldr	w9, [x8]
    9bb0:	sub	w10, w9, #0x1
    9bb4:	str	w10, [x8]
    9bb8:	cmp	w9, #0x1
    9bbc:	b.ne	9c00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2114>  // b.any
    9bc0:	mov	x28, x23
    9bc4:	ldr	x8, [x28], #12
    9bc8:	mov	x0, x23
    9bcc:	ldr	x8, [x8, #16]
    9bd0:	blr	x8
    9bd4:	cbz	x26, ab20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3034>
    9bd8:	ldaxr	w8, [x28]
    9bdc:	sub	w9, w8, #0x1
    9be0:	stlxr	w10, w9, [x28]
    9be4:	cbnz	w10, 9bd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x20ec>
    9be8:	cmp	w8, #0x1
    9bec:	b.ne	9c00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2114>  // b.any
    9bf0:	ldr	x8, [x23]
    9bf4:	mov	x0, x23
    9bf8:	ldr	x8, [x8, #24]
    9bfc:	blr	x8
    9c00:	cmp	w22, #0x8
    9c04:	b.ne	b148 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x365c>  // b.any
    9c08:	cbz	x26, 9c28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x213c>
    9c0c:	ldaxr	w8, [x24]
    9c10:	sub	w9, w8, #0x1
    9c14:	stlxr	w10, w9, [x24]
    9c18:	cbnz	w10, 9c0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2120>
    9c1c:	cmp	w8, #0x1
    9c20:	b.eq	9c3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2150>  // b.none
    9c24:	b	9c7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2190>
    9c28:	ldr	w8, [x24]
    9c2c:	sub	w9, w8, #0x1
    9c30:	str	w9, [x24]
    9c34:	cmp	w8, #0x1
    9c38:	b.ne	9c7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2190>  // b.any
    9c3c:	ldr	x8, [x21]
    9c40:	mov	x0, x21
    9c44:	add	x22, x21, #0xc
    9c48:	ldr	x8, [x8, #16]
    9c4c:	blr	x8
    9c50:	cbz	x26, a970 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e84>
    9c54:	ldaxr	w8, [x22]
    9c58:	sub	w9, w8, #0x1
    9c5c:	stlxr	w10, w9, [x22]
    9c60:	cbnz	w10, 9c54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2168>
    9c64:	cmp	w8, #0x1
    9c68:	b.ne	9c7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2190>  // b.any
    9c6c:	ldr	x8, [x21]
    9c70:	mov	x0, x21
    9c74:	ldr	x8, [x8, #24]
    9c78:	blr	x8
    9c7c:	mov	w0, #0x220                 	// #544
    9c80:	bl	0 <_Znwm>
    9c84:	movi	v0.2s, #0x1
    9c88:	mov	x24, x0
    9c8c:	add	x8, x27, #0x10
    9c90:	str	d0, [x24, #8]!
    9c94:	movi	v0.2d, #0x0
    9c98:	mov	x23, x0
    9c9c:	mov	x22, x0
    9ca0:	mov	w9, #0x3                   	// #3
    9ca4:	str	x8, [x0]
    9ca8:	stp	q0, q0, [x0, #48]
    9cac:	stp	q0, q0, [x0, #80]
    9cb0:	stp	q0, q0, [x0, #112]
    9cb4:	stp	q0, q0, [x0, #144]
    9cb8:	stp	q0, q0, [x0, #176]
    9cbc:	stp	q0, q0, [x0, #208]
    9cc0:	stp	q0, q0, [x0, #240]
    9cc4:	stp	q0, q0, [x0, #272]
    9cc8:	stp	q0, q0, [x0, #304]
    9ccc:	stp	q0, q0, [x0, #336]
    9cd0:	stp	q0, q0, [x0, #368]
    9cd4:	stp	q0, q0, [x0, #400]
    9cd8:	stp	q0, q0, [x0, #432]
    9cdc:	stp	q0, q0, [x0, #464]
    9ce0:	stp	q0, q0, [x0, #496]
    9ce4:	str	q0, [x23, #32]!
    9ce8:	str	q0, [x0, #528]
    9cec:	str	x23, [x22, #16]!
    9cf0:	str	d8, [x0, #24]
    9cf4:	str	x9, [x23]
    9cf8:	ldp	w8, w9, [x0, #24]
    9cfc:	ldur	w11, [x25, #3]
    9d00:	ldur	w12, [x29, #-16]
    9d04:	mov	w10, #0xff                  	// #255
    9d08:	cmp	w8, w9
    9d0c:	strb	w10, [x0, #40]
    9d10:	str	w11, [x0, #44]
    9d14:	stur	w12, [x0, #41]
    9d18:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9d1c:	add	w8, w8, #0x1
    9d20:	mov	x21, x0
    9d24:	cmp	w8, w9
    9d28:	str	w8, [x0, #24]
    9d2c:	b.cs	af2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3440>  // b.hs, b.nlast
    9d30:	ldr	x9, [x21, #16]
    9d34:	mov	w10, #0x6                   	// #6
    9d38:	mov	w11, #0x4                   	// #4
    9d3c:	add	x8, x9, w8, uxtw #4
    9d40:	str	x10, [x8]
    9d44:	strb	w11, [x8, #8]
    9d48:	ldur	w9, [x25, #3]
    9d4c:	ldur	w10, [x29, #-16]
    9d50:	str	w9, [x8, #12]
    9d54:	stur	w10, [x8, #9]
    9d58:	ldp	w8, w9, [x21, #24]
    9d5c:	cmp	w8, w9
    9d60:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9d64:	add	w8, w8, #0x1
    9d68:	mov	x0, x20
    9d6c:	str	w8, [x21, #24]
    9d70:	bl	0 <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>
    9d74:	ldp	w8, w9, [x21, #24]
    9d78:	mov	x20, x0
    9d7c:	cmp	w8, w9
    9d80:	b.cs	af48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x345c>  // b.hs, b.nlast
    9d84:	ldr	x9, [x21, #16]
    9d88:	mov	w10, #0x2                   	// #2
    9d8c:	add	x8, x9, w8, uxtw #4
    9d90:	str	x20, [x8]
    9d94:	strb	w10, [x8, #8]
    9d98:	ldur	w9, [x25, #3]
    9d9c:	ldur	w10, [x29, #-16]
    9da0:	str	w9, [x8, #12]
    9da4:	stur	w10, [x8, #9]
    9da8:	ldp	w8, w9, [x21, #24]
    9dac:	cmp	w8, w9
    9db0:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9db4:	add	w8, w8, #0x1
    9db8:	cmp	w8, w9
    9dbc:	str	w8, [x21, #24]
    9dc0:	b.cs	af64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3478>  // b.hs, b.nlast
    9dc4:	ldr	x9, [x21, #16]
    9dc8:	mov	w10, #0x4                   	// #4
    9dcc:	mov	w11, #0x2                   	// #2
    9dd0:	add	x8, x9, w8, uxtw #4
    9dd4:	str	x10, [x8]
    9dd8:	strb	w11, [x8, #8]
    9ddc:	ldur	w9, [x25, #3]
    9de0:	ldur	w10, [x29, #-16]
    9de4:	str	w9, [x8, #12]
    9de8:	stur	w10, [x8, #9]
    9dec:	ldp	w8, w9, [x21, #24]
    9df0:	cmp	w8, w9
    9df4:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9df8:	add	w8, w8, #0x1
    9dfc:	str	w8, [x21, #24]
    9e00:	ldr	x0, [x19]
    9e04:	stp	x22, x21, [sp, #64]
    9e08:	cbz	x26, 9e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2334>
    9e0c:	ldaxr	w8, [x24]
    9e10:	add	w8, w8, #0x1
    9e14:	stlxr	w9, w8, [x24]
    9e18:	cbnz	w9, 9e0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2320>
    9e1c:	b	9e2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2340>
    9e20:	ldr	w8, [x24]
    9e24:	add	w8, w8, #0x1
    9e28:	str	w8, [x24]
    9e2c:	add	x2, sp, #0x40
    9e30:	mov	w1, #0xc                   	// #12
    9e34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    9e38:	ldr	x22, [sp, #72]
    9e3c:	mov	w20, w0
    9e40:	cbz	x22, 9ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23d0>
    9e44:	add	x8, x22, #0x8
    9e48:	cbz	x26, 9e68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x237c>
    9e4c:	ldaxr	w9, [x8]
    9e50:	sub	w10, w9, #0x1
    9e54:	stlxr	w11, w10, [x8]
    9e58:	cbnz	w11, 9e4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2360>
    9e5c:	cmp	w9, #0x1
    9e60:	b.eq	9e7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2390>  // b.none
    9e64:	b	9ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23d0>
    9e68:	ldr	w9, [x8]
    9e6c:	sub	w10, w9, #0x1
    9e70:	str	w10, [x8]
    9e74:	cmp	w9, #0x1
    9e78:	b.ne	9ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23d0>  // b.any
    9e7c:	mov	x23, x22
    9e80:	ldr	x8, [x23], #12
    9e84:	mov	x0, x22
    9e88:	ldr	x8, [x8, #16]
    9e8c:	blr	x8
    9e90:	cbz	x26, ab38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x304c>
    9e94:	ldaxr	w8, [x23]
    9e98:	sub	w9, w8, #0x1
    9e9c:	stlxr	w10, w9, [x23]
    9ea0:	cbnz	w10, 9e94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23a8>
    9ea4:	cmp	w8, #0x1
    9ea8:	b.ne	9ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23d0>  // b.any
    9eac:	ldr	x8, [x22]
    9eb0:	mov	x0, x22
    9eb4:	ldr	x8, [x8, #24]
    9eb8:	blr	x8
    9ebc:	cmp	w20, #0x9
    9ec0:	b.ne	b160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3674>  // b.any
    9ec4:	cbz	x26, 9ee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23f8>
    9ec8:	ldaxr	w8, [x24]
    9ecc:	sub	w9, w8, #0x1
    9ed0:	stlxr	w10, w9, [x24]
    9ed4:	cbnz	w10, 9ec8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23dc>
    9ed8:	cmp	w8, #0x1
    9edc:	b.eq	9ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x240c>  // b.none
    9ee0:	b	9f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x244c>
    9ee4:	ldr	w8, [x24]
    9ee8:	sub	w9, w8, #0x1
    9eec:	str	w9, [x24]
    9ef0:	cmp	w8, #0x1
    9ef4:	b.ne	9f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x244c>  // b.any
    9ef8:	ldr	x8, [x21]
    9efc:	mov	x0, x21
    9f00:	add	x20, x21, #0xc
    9f04:	ldr	x8, [x8, #16]
    9f08:	blr	x8
    9f0c:	cbz	x26, a988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2e9c>
    9f10:	ldaxr	w8, [x20]
    9f14:	sub	w9, w8, #0x1
    9f18:	stlxr	w10, w9, [x20]
    9f1c:	cbnz	w10, 9f10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2424>
    9f20:	cmp	w8, #0x1
    9f24:	b.ne	9f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x244c>  // b.any
    9f28:	ldr	x8, [x21]
    9f2c:	mov	x0, x21
    9f30:	ldr	x8, [x8, #24]
    9f34:	blr	x8
    9f38:	mov	w0, #0x220                 	// #544
    9f3c:	bl	0 <_Znwm>
    9f40:	movi	v0.2s, #0x1
    9f44:	mov	x23, x0
    9f48:	add	x9, x27, #0x10
    9f4c:	str	d0, [x23, #8]!
    9f50:	movi	v0.2d, #0x0
    9f54:	mov	x10, x0
    9f58:	mov	x8, x0
    9f5c:	mov	w11, #0xa                   	// #10
    9f60:	str	x9, [x0]
    9f64:	stp	q0, q0, [x0, #48]
    9f68:	stp	q0, q0, [x0, #80]
    9f6c:	stp	q0, q0, [x0, #112]
    9f70:	stp	q0, q0, [x0, #144]
    9f74:	stp	q0, q0, [x0, #176]
    9f78:	stp	q0, q0, [x0, #208]
    9f7c:	stp	q0, q0, [x0, #240]
    9f80:	stp	q0, q0, [x0, #272]
    9f84:	stp	q0, q0, [x0, #304]
    9f88:	stp	q0, q0, [x0, #336]
    9f8c:	stp	q0, q0, [x0, #368]
    9f90:	stp	q0, q0, [x0, #400]
    9f94:	stp	q0, q0, [x0, #432]
    9f98:	stp	q0, q0, [x0, #464]
    9f9c:	stp	q0, q0, [x0, #496]
    9fa0:	str	q0, [x10, #32]!
    9fa4:	str	q0, [x0, #528]
    9fa8:	str	x10, [x8, #16]!
    9fac:	str	d8, [x0, #24]
    9fb0:	str	x11, [x10]
    9fb4:	ldp	w9, w10, [x0, #24]
    9fb8:	ldur	w13, [x25, #3]
    9fbc:	ldur	w11, [x29, #-16]
    9fc0:	mov	w12, #0xff                  	// #255
    9fc4:	cmp	w9, w10
    9fc8:	strb	w12, [x0, #40]
    9fcc:	str	w13, [x0, #44]
    9fd0:	stur	w11, [x0, #41]
    9fd4:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    9fd8:	add	w9, w9, #0x1
    9fdc:	str	w9, [x0, #24]
    9fe0:	mov	x20, x0
    9fe4:	ldr	x0, [x19]
    9fe8:	stp	x8, x20, [sp, #48]
    9fec:	cbz	x26, a004 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2518>
    9ff0:	ldaxr	w8, [x23]
    9ff4:	add	w8, w8, #0x1
    9ff8:	stlxr	w9, w8, [x23]
    9ffc:	cbnz	w9, 9ff0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2504>
    a000:	b	a00c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2520>
    a004:	mov	w8, #0x2                   	// #2
    a008:	str	w8, [x23]
    a00c:	add	x2, sp, #0x30
    a010:	mov	w1, #0xc                   	// #12
    a014:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a018:	ldr	x22, [sp, #56]
    a01c:	mov	w21, w0
    a020:	cbz	x22, a09c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25b0>
    a024:	add	x8, x22, #0x8
    a028:	cbz	x26, a048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x255c>
    a02c:	ldaxr	w9, [x8]
    a030:	sub	w10, w9, #0x1
    a034:	stlxr	w11, w10, [x8]
    a038:	cbnz	w11, a02c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2540>
    a03c:	cmp	w9, #0x1
    a040:	b.eq	a05c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2570>  // b.none
    a044:	b	a09c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25b0>
    a048:	ldr	w9, [x8]
    a04c:	sub	w10, w9, #0x1
    a050:	str	w10, [x8]
    a054:	cmp	w9, #0x1
    a058:	b.ne	a09c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25b0>  // b.any
    a05c:	mov	x24, x22
    a060:	ldr	x8, [x24], #12
    a064:	mov	x0, x22
    a068:	ldr	x8, [x8, #16]
    a06c:	blr	x8
    a070:	cbz	x26, ab50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3064>
    a074:	ldaxr	w8, [x24]
    a078:	sub	w9, w8, #0x1
    a07c:	stlxr	w10, w9, [x24]
    a080:	cbnz	w10, a074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2588>
    a084:	cmp	w8, #0x1
    a088:	b.ne	a09c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25b0>  // b.any
    a08c:	ldr	x8, [x22]
    a090:	mov	x0, x22
    a094:	ldr	x8, [x8, #24]
    a098:	blr	x8
    a09c:	cmp	w21, #0xa
    a0a0:	b.ne	b178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x368c>  // b.any
    a0a4:	cbz	x26, a0c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25d8>
    a0a8:	ldaxr	w8, [x23]
    a0ac:	sub	w9, w8, #0x1
    a0b0:	stlxr	w10, w9, [x23]
    a0b4:	cbnz	w10, a0a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25bc>
    a0b8:	cmp	w8, #0x1
    a0bc:	b.eq	a0d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25ec>  // b.none
    a0c0:	b	a118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x262c>
    a0c4:	ldr	w8, [x23]
    a0c8:	sub	w9, w8, #0x1
    a0cc:	str	w9, [x23]
    a0d0:	cmp	w8, #0x1
    a0d4:	b.ne	a118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x262c>  // b.any
    a0d8:	ldr	x8, [x20]
    a0dc:	mov	x0, x20
    a0e0:	add	x21, x20, #0xc
    a0e4:	ldr	x8, [x8, #16]
    a0e8:	blr	x8
    a0ec:	cbz	x26, a9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2eb4>
    a0f0:	ldaxr	w8, [x21]
    a0f4:	sub	w9, w8, #0x1
    a0f8:	stlxr	w10, w9, [x21]
    a0fc:	cbnz	w10, a0f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2604>
    a100:	cmp	w8, #0x1
    a104:	b.ne	a118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x262c>  // b.any
    a108:	ldr	x8, [x20]
    a10c:	mov	x0, x20
    a110:	ldr	x8, [x8, #24]
    a114:	blr	x8
    a118:	mov	w0, #0x220                 	// #544
    a11c:	bl	0 <_Znwm>
    a120:	movi	v0.2s, #0x1
    a124:	mov	x23, x0
    a128:	add	x8, x27, #0x10
    a12c:	str	d0, [x23, #8]!
    a130:	movi	v0.2d, #0x0
    a134:	mov	x1, x0
    a138:	mov	x21, x0
    a13c:	mov	w9, #0xa                   	// #10
    a140:	str	x8, [x0]
    a144:	stp	q0, q0, [x0, #48]
    a148:	stp	q0, q0, [x0, #80]
    a14c:	stp	q0, q0, [x0, #112]
    a150:	stp	q0, q0, [x0, #144]
    a154:	stp	q0, q0, [x0, #176]
    a158:	stp	q0, q0, [x0, #208]
    a15c:	stp	q0, q0, [x0, #240]
    a160:	stp	q0, q0, [x0, #272]
    a164:	stp	q0, q0, [x0, #304]
    a168:	stp	q0, q0, [x0, #336]
    a16c:	stp	q0, q0, [x0, #368]
    a170:	stp	q0, q0, [x0, #400]
    a174:	stp	q0, q0, [x0, #432]
    a178:	stp	q0, q0, [x0, #464]
    a17c:	stp	q0, q0, [x0, #496]
    a180:	str	q0, [x1, #32]!
    a184:	str	q0, [x0, #528]
    a188:	str	x1, [x21, #16]!
    a18c:	str	d8, [x0, #24]
    a190:	str	x9, [x1]
    a194:	ldp	w8, w9, [x0, #24]
    a198:	ldur	w11, [x25, #3]
    a19c:	ldur	w12, [x29, #-16]
    a1a0:	mov	w10, #0xff                  	// #255
    a1a4:	cmp	w8, w9
    a1a8:	strb	w10, [x0, #40]
    a1ac:	str	w11, [x0, #44]
    a1b0:	stur	w12, [x0, #41]
    a1b4:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a1b8:	add	w8, w8, #0x1
    a1bc:	mov	x20, x0
    a1c0:	cmp	w8, w9
    a1c4:	str	w8, [x0, #24]
    a1c8:	b.cs	af80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3494>  // b.hs, b.nlast
    a1cc:	ldr	x9, [x20, #16]
    a1d0:	mov	w10, #0x6                   	// #6
    a1d4:	mov	w11, #0x4                   	// #4
    a1d8:	add	x8, x9, w8, uxtw #4
    a1dc:	str	x10, [x8]
    a1e0:	strb	w11, [x8, #8]
    a1e4:	ldur	w9, [x25, #3]
    a1e8:	ldur	w10, [x29, #-16]
    a1ec:	str	w9, [x8, #12]
    a1f0:	stur	w10, [x8, #9]
    a1f4:	ldp	w8, w9, [x20, #24]
    a1f8:	cmp	w8, w9
    a1fc:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a200:	add	w8, w8, #0x1
    a204:	str	w8, [x20, #24]
    a208:	ldr	x0, [x19]
    a20c:	stp	x21, x20, [sp, #32]
    a210:	cbz	x26, a228 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x273c>
    a214:	ldaxr	w8, [x23]
    a218:	add	w8, w8, #0x1
    a21c:	stlxr	w9, w8, [x23]
    a220:	cbnz	w9, a214 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2728>
    a224:	b	a234 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2748>
    a228:	ldr	w8, [x23]
    a22c:	add	w8, w8, #0x1
    a230:	str	w8, [x23]
    a234:	add	x2, sp, #0x20
    a238:	mov	w1, #0xc                   	// #12
    a23c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a240:	ldr	x22, [sp, #40]
    a244:	mov	w21, w0
    a248:	cbz	x22, a2c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27d8>
    a24c:	add	x8, x22, #0x8
    a250:	cbz	x26, a270 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2784>
    a254:	ldaxr	w9, [x8]
    a258:	sub	w10, w9, #0x1
    a25c:	stlxr	w11, w10, [x8]
    a260:	cbnz	w11, a254 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2768>
    a264:	cmp	w9, #0x1
    a268:	b.eq	a284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2798>  // b.none
    a26c:	b	a2c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27d8>
    a270:	ldr	w9, [x8]
    a274:	sub	w10, w9, #0x1
    a278:	str	w10, [x8]
    a27c:	cmp	w9, #0x1
    a280:	b.ne	a2c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27d8>  // b.any
    a284:	mov	x24, x22
    a288:	ldr	x8, [x24], #12
    a28c:	mov	x0, x22
    a290:	ldr	x8, [x8, #16]
    a294:	blr	x8
    a298:	cbz	x26, ab68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x307c>
    a29c:	ldaxr	w8, [x24]
    a2a0:	sub	w9, w8, #0x1
    a2a4:	stlxr	w10, w9, [x24]
    a2a8:	cbnz	w10, a29c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27b0>
    a2ac:	cmp	w8, #0x1
    a2b0:	b.ne	a2c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27d8>  // b.any
    a2b4:	ldr	x8, [x22]
    a2b8:	mov	x0, x22
    a2bc:	ldr	x8, [x8, #24]
    a2c0:	blr	x8
    a2c4:	cmp	w21, #0xb
    a2c8:	b.ne	b190 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x36a4>  // b.any
    a2cc:	cbz	x26, a2ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2800>
    a2d0:	ldaxr	w8, [x23]
    a2d4:	sub	w9, w8, #0x1
    a2d8:	stlxr	w10, w9, [x23]
    a2dc:	cbnz	w10, a2d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27e4>
    a2e0:	cmp	w8, #0x1
    a2e4:	b.eq	a300 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2814>  // b.none
    a2e8:	b	a340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2854>
    a2ec:	ldr	w8, [x23]
    a2f0:	sub	w9, w8, #0x1
    a2f4:	str	w9, [x23]
    a2f8:	cmp	w8, #0x1
    a2fc:	b.ne	a340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2854>  // b.any
    a300:	ldr	x8, [x20]
    a304:	mov	x0, x20
    a308:	add	x21, x20, #0xc
    a30c:	ldr	x8, [x8, #16]
    a310:	blr	x8
    a314:	cbz	x26, a9b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ecc>
    a318:	ldaxr	w8, [x21]
    a31c:	sub	w9, w8, #0x1
    a320:	stlxr	w10, w9, [x21]
    a324:	cbnz	w10, a318 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x282c>
    a328:	cmp	w8, #0x1
    a32c:	b.ne	a340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2854>  // b.any
    a330:	ldr	x8, [x20]
    a334:	mov	x0, x20
    a338:	ldr	x8, [x8, #24]
    a33c:	blr	x8
    a340:	mov	w0, #0x220                 	// #544
    a344:	bl	0 <_Znwm>
    a348:	movi	v0.2s, #0x1
    a34c:	mov	x23, x0
    a350:	add	x9, x27, #0x10
    a354:	str	d0, [x23, #8]!
    a358:	movi	v0.2d, #0x0
    a35c:	mov	x10, x0
    a360:	mov	x8, x0
    a364:	mov	w11, #0xf                   	// #15
    a368:	str	x9, [x0]
    a36c:	stp	q0, q0, [x0, #48]
    a370:	stp	q0, q0, [x0, #80]
    a374:	stp	q0, q0, [x0, #112]
    a378:	stp	q0, q0, [x0, #144]
    a37c:	stp	q0, q0, [x0, #176]
    a380:	stp	q0, q0, [x0, #208]
    a384:	stp	q0, q0, [x0, #240]
    a388:	stp	q0, q0, [x0, #272]
    a38c:	stp	q0, q0, [x0, #304]
    a390:	stp	q0, q0, [x0, #336]
    a394:	stp	q0, q0, [x0, #368]
    a398:	stp	q0, q0, [x0, #400]
    a39c:	stp	q0, q0, [x0, #432]
    a3a0:	stp	q0, q0, [x0, #464]
    a3a4:	stp	q0, q0, [x0, #496]
    a3a8:	str	q0, [x10, #32]!
    a3ac:	str	q0, [x0, #528]
    a3b0:	str	x10, [x8, #16]!
    a3b4:	str	d8, [x0, #24]
    a3b8:	str	x11, [x10]
    a3bc:	ldp	w9, w10, [x0, #24]
    a3c0:	ldur	w13, [x25, #3]
    a3c4:	ldur	w11, [x29, #-16]
    a3c8:	mov	w12, #0xff                  	// #255
    a3cc:	cmp	w9, w10
    a3d0:	strb	w12, [x0, #40]
    a3d4:	str	w13, [x0, #44]
    a3d8:	stur	w11, [x0, #41]
    a3dc:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a3e0:	add	w9, w9, #0x1
    a3e4:	str	w9, [x0, #24]
    a3e8:	mov	x20, x0
    a3ec:	ldr	x0, [x19]
    a3f0:	stp	x8, x20, [sp, #16]
    a3f4:	cbz	x26, a40c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2920>
    a3f8:	ldaxr	w8, [x23]
    a3fc:	add	w8, w8, #0x1
    a400:	stlxr	w9, w8, [x23]
    a404:	cbnz	w9, a3f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x290c>
    a408:	b	a414 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2928>
    a40c:	mov	w8, #0x2                   	// #2
    a410:	str	w8, [x23]
    a414:	add	x2, sp, #0x10
    a418:	mov	w1, #0xc                   	// #12
    a41c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a420:	ldr	x22, [sp, #24]
    a424:	mov	w21, w0
    a428:	cbz	x22, a4a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29b8>
    a42c:	add	x8, x22, #0x8
    a430:	cbz	x26, a450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2964>
    a434:	ldaxr	w9, [x8]
    a438:	sub	w10, w9, #0x1
    a43c:	stlxr	w11, w10, [x8]
    a440:	cbnz	w11, a434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2948>
    a444:	cmp	w9, #0x1
    a448:	b.eq	a464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2978>  // b.none
    a44c:	b	a4a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29b8>
    a450:	ldr	w9, [x8]
    a454:	sub	w10, w9, #0x1
    a458:	str	w10, [x8]
    a45c:	cmp	w9, #0x1
    a460:	b.ne	a4a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29b8>  // b.any
    a464:	mov	x24, x22
    a468:	ldr	x8, [x24], #12
    a46c:	mov	x0, x22
    a470:	ldr	x8, [x8, #16]
    a474:	blr	x8
    a478:	cbz	x26, ab80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3094>
    a47c:	ldaxr	w8, [x24]
    a480:	sub	w9, w8, #0x1
    a484:	stlxr	w10, w9, [x24]
    a488:	cbnz	w10, a47c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2990>
    a48c:	cmp	w8, #0x1
    a490:	b.ne	a4a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29b8>  // b.any
    a494:	ldr	x8, [x22]
    a498:	mov	x0, x22
    a49c:	ldr	x8, [x8, #24]
    a4a0:	blr	x8
    a4a4:	cmp	w21, #0xc
    a4a8:	b.ne	b1a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x36bc>  // b.any
    a4ac:	cbz	x26, a4cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29e0>
    a4b0:	ldaxr	w8, [x23]
    a4b4:	sub	w9, w8, #0x1
    a4b8:	stlxr	w10, w9, [x23]
    a4bc:	cbnz	w10, a4b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29c4>
    a4c0:	cmp	w8, #0x1
    a4c4:	b.eq	a4e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29f4>  // b.none
    a4c8:	b	a520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a34>
    a4cc:	ldr	w8, [x23]
    a4d0:	sub	w9, w8, #0x1
    a4d4:	str	w9, [x23]
    a4d8:	cmp	w8, #0x1
    a4dc:	b.ne	a520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a34>  // b.any
    a4e0:	ldr	x8, [x20]
    a4e4:	mov	x0, x20
    a4e8:	add	x21, x20, #0xc
    a4ec:	ldr	x8, [x8, #16]
    a4f0:	blr	x8
    a4f4:	cbz	x26, a9d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ee4>
    a4f8:	ldaxr	w8, [x21]
    a4fc:	sub	w9, w8, #0x1
    a500:	stlxr	w10, w9, [x21]
    a504:	cbnz	w10, a4f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a0c>
    a508:	cmp	w8, #0x1
    a50c:	b.ne	a520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a34>  // b.any
    a510:	ldr	x8, [x20]
    a514:	mov	x0, x20
    a518:	ldr	x8, [x8, #24]
    a51c:	blr	x8
    a520:	mov	w0, #0x220                 	// #544
    a524:	bl	0 <_Znwm>
    a528:	movi	v0.2s, #0x1
    a52c:	mov	x23, x0
    a530:	add	x8, x27, #0x10
    a534:	str	d0, [x23, #8]!
    a538:	movi	v0.2d, #0x0
    a53c:	mov	x22, x0
    a540:	mov	x21, x0
    a544:	mov	w9, #0x2b                  	// #43
    a548:	str	x8, [x0]
    a54c:	stp	q0, q0, [x0, #48]
    a550:	stp	q0, q0, [x0, #80]
    a554:	stp	q0, q0, [x0, #112]
    a558:	stp	q0, q0, [x0, #144]
    a55c:	stp	q0, q0, [x0, #176]
    a560:	stp	q0, q0, [x0, #208]
    a564:	stp	q0, q0, [x0, #240]
    a568:	stp	q0, q0, [x0, #272]
    a56c:	stp	q0, q0, [x0, #304]
    a570:	stp	q0, q0, [x0, #336]
    a574:	stp	q0, q0, [x0, #368]
    a578:	stp	q0, q0, [x0, #400]
    a57c:	stp	q0, q0, [x0, #432]
    a580:	stp	q0, q0, [x0, #464]
    a584:	stp	q0, q0, [x0, #496]
    a588:	str	q0, [x22, #32]!
    a58c:	str	q0, [x0, #528]
    a590:	str	x22, [x21, #16]!
    a594:	str	d8, [x0, #24]
    a598:	str	x9, [x22]
    a59c:	ldp	w8, w9, [x0, #24]
    a5a0:	ldur	w11, [x25, #3]
    a5a4:	ldur	w12, [x29, #-16]
    a5a8:	mov	w10, #0xff                  	// #255
    a5ac:	cmp	w8, w9
    a5b0:	strb	w10, [x0, #40]
    a5b4:	str	w11, [x0, #44]
    a5b8:	stur	w12, [x0, #41]
    a5bc:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a5c0:	add	w8, w8, #0x1
    a5c4:	mov	x20, x0
    a5c8:	cmp	w8, w9
    a5cc:	str	w8, [x0, #24]
    a5d0:	b.cs	af98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x34ac>  // b.hs, b.nlast
    a5d4:	ldr	x9, [x20, #16]
    a5d8:	mov	w10, #0x1                   	// #1
    a5dc:	mov	w11, #0x2                   	// #2
    a5e0:	add	x8, x9, w8, uxtw #4
    a5e4:	str	x10, [x8]
    a5e8:	strb	w11, [x8, #8]
    a5ec:	ldur	w9, [x25, #3]
    a5f0:	ldur	w10, [x29, #-16]
    a5f4:	str	w9, [x8, #12]
    a5f8:	stur	w10, [x8, #9]
    a5fc:	ldp	w8, w9, [x20, #24]
    a600:	cmp	w8, w9
    a604:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a608:	add	w8, w8, #0x1
    a60c:	str	w8, [x20, #24]
    a610:	ldp	x11, x10, [x19, #80]
    a614:	mov	w12, #0x20                  	// #32
    a618:	cmp	w8, w9
    a61c:	sub	x10, x10, x11
    a620:	lsr	x10, x10, #3
    a624:	clz	w10, w10
    a628:	sub	w24, w12, w10
    a62c:	b.cs	afb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x34c8>  // b.hs, b.nlast
    a630:	ldr	x9, [x20, #16]
    a634:	mov	w10, #0x2                   	// #2
    a638:	add	x8, x9, w8, uxtw #4
    a63c:	str	x24, [x8]
    a640:	strb	w10, [x8, #8]
    a644:	ldur	w9, [x25, #3]
    a648:	ldur	w10, [x29, #-16]
    a64c:	str	w9, [x8, #12]
    a650:	stur	w10, [x8, #9]
    a654:	ldp	w8, w9, [x20, #24]
    a658:	cmp	w8, w9
    a65c:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a660:	add	w8, w8, #0x1
    a664:	cmp	w8, w9
    a668:	str	w8, [x20, #24]
    a66c:	b.cs	afd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x34e4>  // b.hs, b.nlast
    a670:	ldr	x9, [x20, #16]
    a674:	mov	w10, #0x6                   	// #6
    a678:	add	x8, x9, w8, uxtw #4
    a67c:	str	xzr, [x8]
    a680:	strb	w10, [x8, #8]
    a684:	ldur	w9, [x25, #3]
    a688:	ldur	w10, [x29, #-16]
    a68c:	str	w9, [x8, #12]
    a690:	stur	w10, [x8, #9]
    a694:	ldp	w8, w9, [x20, #24]
    a698:	cmp	w8, w9
    a69c:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a6a0:	add	w8, w8, #0x1
    a6a4:	cmp	w8, w9
    a6a8:	str	w8, [x20, #24]
    a6ac:	b.cs	afec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3500>  // b.hs, b.nlast
    a6b0:	ldr	x9, [x20, #16]
    a6b4:	mov	w10, #0x6                   	// #6
    a6b8:	mov	w11, #0x4                   	// #4
    a6bc:	add	x8, x9, w8, uxtw #4
    a6c0:	str	x10, [x8]
    a6c4:	strb	w11, [x8, #8]
    a6c8:	ldur	w9, [x25, #3]
    a6cc:	ldur	w10, [x29, #-16]
    a6d0:	str	w9, [x8, #12]
    a6d4:	stur	w10, [x8, #9]
    a6d8:	ldp	w8, w9, [x20, #24]
    a6dc:	cmp	w8, w9
    a6e0:	b.cs	b008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x351c>  // b.hs, b.nlast
    a6e4:	add	w8, w8, #0x1
    a6e8:	str	w8, [x20, #24]
    a6ec:	ldr	x0, [x19]
    a6f0:	stp	x21, x20, [sp]
    a6f4:	cbz	x26, a70c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c20>
    a6f8:	ldaxr	w8, [x23]
    a6fc:	add	w8, w8, #0x1
    a700:	stlxr	w9, w8, [x23]
    a704:	cbnz	w9, a6f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c0c>
    a708:	b	a718 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c2c>
    a70c:	ldr	w8, [x23]
    a710:	add	w8, w8, #0x1
    a714:	str	w8, [x23]
    a718:	mov	x2, sp
    a71c:	mov	w1, #0xc                   	// #12
    a720:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a724:	ldr	x22, [sp, #8]
    a728:	mov	w21, w0
    a72c:	cbz	x22, a7a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cbc>
    a730:	add	x8, x22, #0x8
    a734:	cbz	x26, a754 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c68>
    a738:	ldaxr	w9, [x8]
    a73c:	sub	w10, w9, #0x1
    a740:	stlxr	w11, w10, [x8]
    a744:	cbnz	w11, a738 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c4c>
    a748:	cmp	w9, #0x1
    a74c:	b.eq	a768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c7c>  // b.none
    a750:	b	a7a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cbc>
    a754:	ldr	w9, [x8]
    a758:	sub	w10, w9, #0x1
    a75c:	str	w10, [x8]
    a760:	cmp	w9, #0x1
    a764:	b.ne	a7a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cbc>  // b.any
    a768:	mov	x24, x22
    a76c:	ldr	x8, [x24], #12
    a770:	mov	x0, x22
    a774:	ldr	x8, [x8, #16]
    a778:	blr	x8
    a77c:	cbz	x26, ab98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x30ac>
    a780:	ldaxr	w8, [x24]
    a784:	sub	w9, w8, #0x1
    a788:	stlxr	w10, w9, [x24]
    a78c:	cbnz	w10, a780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c94>
    a790:	cmp	w8, #0x1
    a794:	b.ne	a7a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cbc>  // b.any
    a798:	ldr	x8, [x22]
    a79c:	mov	x0, x22
    a7a0:	ldr	x8, [x8, #24]
    a7a4:	blr	x8
    a7a8:	cmp	w21, #0xd
    a7ac:	b.ne	b1c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x36d4>  // b.any
    a7b0:	cbz	x26, a7d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ce4>
    a7b4:	ldaxr	w8, [x23]
    a7b8:	sub	w9, w8, #0x1
    a7bc:	stlxr	w10, w9, [x23]
    a7c0:	cbnz	w10, a7b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cc8>
    a7c4:	cmp	w8, #0x1
    a7c8:	b.eq	a7e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cf8>  // b.none
    a7cc:	b	a824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d38>
    a7d0:	ldr	w8, [x23]
    a7d4:	sub	w9, w8, #0x1
    a7d8:	str	w9, [x23]
    a7dc:	cmp	w8, #0x1
    a7e0:	b.ne	a824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d38>  // b.any
    a7e4:	ldr	x8, [x20]
    a7e8:	mov	x0, x20
    a7ec:	add	x21, x20, #0xc
    a7f0:	ldr	x8, [x8, #16]
    a7f4:	blr	x8
    a7f8:	cbz	x26, a9e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2efc>
    a7fc:	ldaxr	w8, [x21]
    a800:	sub	w9, w8, #0x1
    a804:	stlxr	w10, w9, [x21]
    a808:	cbnz	w10, a7fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d10>
    a80c:	cmp	w8, #0x1
    a810:	b.ne	a824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d38>  // b.any
    a814:	ldr	x8, [x20]
    a818:	mov	x0, x20
    a81c:	ldr	x8, [x8, #24]
    a820:	blr	x8
    a824:	ldr	x0, [x19]
    a828:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    a82c:	ldp	x20, x19, [sp, #400]
    a830:	ldp	x22, x21, [sp, #384]
    a834:	ldp	x24, x23, [sp, #368]
    a838:	ldp	x26, x25, [sp, #352]
    a83c:	ldp	x28, x27, [sp, #336]
    a840:	ldp	x29, x30, [sp, #320]
    a844:	ldr	d8, [sp, #304]
    a848:	add	sp, sp, #0x1a0
    a84c:	ret
    a850:	ldr	w8, [x21]
    a854:	sub	w9, w8, #0x1
    a858:	str	w9, [x21]
    a85c:	cmp	w8, #0x1
    a860:	b.eq	7db0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2c4>  // b.none
    a864:	b	7dc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d4>
    a868:	ldr	w8, [x21]
    a86c:	sub	w9, w8, #0x1
    a870:	str	w9, [x21]
    a874:	cmp	w8, #0x1
    a878:	b.eq	8064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x578>  // b.none
    a87c:	b	8074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x588>
    a880:	ldr	w8, [x21]
    a884:	sub	w9, w8, #0x1
    a888:	str	w9, [x21]
    a88c:	cmp	w8, #0x1
    a890:	b.eq	830c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x820>  // b.none
    a894:	b	831c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x830>
    a898:	ldr	w8, [x21]
    a89c:	sub	w9, w8, #0x1
    a8a0:	str	w9, [x21]
    a8a4:	cmp	w8, #0x1
    a8a8:	b.eq	85b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xac8>  // b.none
    a8ac:	b	85c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xad8>
    a8b0:	ldr	w8, [x22]
    a8b4:	sub	w9, w8, #0x1
    a8b8:	str	w9, [x22]
    a8bc:	cmp	w8, #0x1
    a8c0:	b.eq	87ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xd00>  // b.none
    a8c4:	b	87fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xd10>
    a8c8:	ldr	w8, [x22]
    a8cc:	sub	w9, w8, #0x1
    a8d0:	str	w9, [x22]
    a8d4:	cmp	w8, #0x1
    a8d8:	b.eq	8a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf28>  // b.none
    a8dc:	b	8a24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xf38>
    a8e0:	ldr	w8, [x22]
    a8e4:	sub	w9, w8, #0x1
    a8e8:	str	w9, [x22]
    a8ec:	cmp	w8, #0x1
    a8f0:	b.eq	8cd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11e4>  // b.none
    a8f4:	b	8ce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x11f4>
    a8f8:	ldr	w8, [x22]
    a8fc:	sub	w9, w8, #0x1
    a900:	str	w9, [x22]
    a904:	cmp	w8, #0x1
    a908:	b.eq	8eb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13c4>  // b.none
    a90c:	b	8ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x13d4>
    a910:	ldr	w8, [x22]
    a914:	sub	w9, w8, #0x1
    a918:	str	w9, [x22]
    a91c:	cmp	w8, #0x1
    a920:	b.eq	91ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16c0>  // b.none
    a924:	b	91bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x16d0>
    a928:	ldr	w8, [x22]
    a92c:	sub	w9, w8, #0x1
    a930:	str	w9, [x22]
    a934:	cmp	w8, #0x1
    a938:	b.eq	9418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x192c>  // b.none
    a93c:	b	9428 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x193c>
    a940:	ldr	w8, [x22]
    a944:	sub	w9, w8, #0x1
    a948:	str	w9, [x22]
    a94c:	cmp	w8, #0x1
    a950:	b.eq	96c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bdc>  // b.none
    a954:	b	96d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1bec>
    a958:	ldr	w8, [x22]
    a95c:	sub	w9, w8, #0x1
    a960:	str	w9, [x22]
    a964:	cmp	w8, #0x1
    a968:	b.eq	9978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e8c>  // b.none
    a96c:	b	9988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e9c>
    a970:	ldr	w8, [x22]
    a974:	sub	w9, w8, #0x1
    a978:	str	w9, [x22]
    a97c:	cmp	w8, #0x1
    a980:	b.eq	9c6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2180>  // b.none
    a984:	b	9c7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2190>
    a988:	ldr	w8, [x20]
    a98c:	sub	w9, w8, #0x1
    a990:	str	w9, [x20]
    a994:	cmp	w8, #0x1
    a998:	b.eq	9f28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x243c>  // b.none
    a99c:	b	9f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x244c>
    a9a0:	ldr	w8, [x21]
    a9a4:	sub	w9, w8, #0x1
    a9a8:	str	w9, [x21]
    a9ac:	cmp	w8, #0x1
    a9b0:	b.eq	a108 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x261c>  // b.none
    a9b4:	b	a118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x262c>
    a9b8:	ldr	w8, [x21]
    a9bc:	sub	w9, w8, #0x1
    a9c0:	str	w9, [x21]
    a9c4:	cmp	w8, #0x1
    a9c8:	b.eq	a330 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2844>  // b.none
    a9cc:	b	a340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2854>
    a9d0:	ldr	w8, [x21]
    a9d4:	sub	w9, w8, #0x1
    a9d8:	str	w9, [x21]
    a9dc:	cmp	w8, #0x1
    a9e0:	b.eq	a510 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a24>  // b.none
    a9e4:	b	a520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2a34>
    a9e8:	ldr	w8, [x21]
    a9ec:	sub	w9, w8, #0x1
    a9f0:	str	w9, [x21]
    a9f4:	cmp	w8, #0x1
    a9f8:	b.eq	a814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d28>  // b.none
    a9fc:	b	a824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2d38>
    aa00:	ldr	w8, [x24]
    aa04:	sub	w9, w8, #0x1
    aa08:	str	w9, [x24]
    aa0c:	cmp	w8, #0x1
    aa10:	b.eq	7d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x248>  // b.none
    aa14:	b	7d44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x258>
    aa18:	ldr	w8, [x24]
    aa1c:	sub	w9, w8, #0x1
    aa20:	str	w9, [x24]
    aa24:	cmp	w8, #0x1
    aa28:	b.eq	7fe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x4fc>  // b.none
    aa2c:	b	7ff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x50c>
    aa30:	ldr	w8, [x24]
    aa34:	sub	w9, w8, #0x1
    aa38:	str	w9, [x24]
    aa3c:	cmp	w8, #0x1
    aa40:	b.eq	8290 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7a4>  // b.none
    aa44:	b	82a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x7b4>
    aa48:	ldr	w8, [x24]
    aa4c:	sub	w9, w8, #0x1
    aa50:	str	w9, [x24]
    aa54:	cmp	w8, #0x1
    aa58:	b.eq	8538 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa4c>  // b.none
    aa5c:	b	8548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xa5c>
    aa60:	ldr	w8, [x24]
    aa64:	sub	w9, w8, #0x1
    aa68:	str	w9, [x24]
    aa6c:	cmp	w8, #0x1
    aa70:	b.eq	8770 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc84>  // b.none
    aa74:	b	8780 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xc94>
    aa78:	ldr	w8, [x28]
    aa7c:	sub	w9, w8, #0x1
    aa80:	str	w9, [x28]
    aa84:	cmp	w8, #0x1
    aa88:	b.eq	8998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xeac>  // b.none
    aa8c:	b	89a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xebc>
    aa90:	ldr	w8, [x24]
    aa94:	sub	w9, w8, #0x1
    aa98:	str	w9, [x24]
    aa9c:	cmp	w8, #0x1
    aaa0:	b.eq	8c54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1168>  // b.none
    aaa4:	b	8c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1178>
    aaa8:	ldr	w8, [x28]
    aaac:	sub	w9, w8, #0x1
    aab0:	str	w9, [x28]
    aab4:	cmp	w8, #0x1
    aab8:	b.eq	8e34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1348>  // b.none
    aabc:	b	8e44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1358>
    aac0:	ldr	w8, [x24]
    aac4:	sub	w9, w8, #0x1
    aac8:	str	w9, [x24]
    aacc:	cmp	w8, #0x1
    aad0:	b.eq	9130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1644>  // b.none
    aad4:	b	9140 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1654>
    aad8:	ldr	w8, [x28]
    aadc:	sub	w9, w8, #0x1
    aae0:	str	w9, [x28]
    aae4:	cmp	w8, #0x1
    aae8:	b.eq	939c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18b0>  // b.none
    aaec:	b	93ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x18c0>
    aaf0:	ldr	w8, [x28]
    aaf4:	sub	w9, w8, #0x1
    aaf8:	str	w9, [x28]
    aafc:	cmp	w8, #0x1
    ab00:	b.eq	964c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b60>  // b.none
    ab04:	b	965c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1b70>
    ab08:	ldr	w8, [x28]
    ab0c:	sub	w9, w8, #0x1
    ab10:	str	w9, [x28]
    ab14:	cmp	w8, #0x1
    ab18:	b.eq	98fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e10>  // b.none
    ab1c:	b	990c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1e20>
    ab20:	ldr	w8, [x28]
    ab24:	sub	w9, w8, #0x1
    ab28:	str	w9, [x28]
    ab2c:	cmp	w8, #0x1
    ab30:	b.eq	9bf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2104>  // b.none
    ab34:	b	9c00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2114>
    ab38:	ldr	w8, [x23]
    ab3c:	sub	w9, w8, #0x1
    ab40:	str	w9, [x23]
    ab44:	cmp	w8, #0x1
    ab48:	b.eq	9eac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23c0>  // b.none
    ab4c:	b	9ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x23d0>
    ab50:	ldr	w8, [x24]
    ab54:	sub	w9, w8, #0x1
    ab58:	str	w9, [x24]
    ab5c:	cmp	w8, #0x1
    ab60:	b.eq	a08c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25a0>  // b.none
    ab64:	b	a09c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x25b0>
    ab68:	ldr	w8, [x24]
    ab6c:	sub	w9, w8, #0x1
    ab70:	str	w9, [x24]
    ab74:	cmp	w8, #0x1
    ab78:	b.eq	a2b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27c8>  // b.none
    ab7c:	b	a2c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x27d8>
    ab80:	ldr	w8, [x24]
    ab84:	sub	w9, w8, #0x1
    ab88:	str	w9, [x24]
    ab8c:	cmp	w8, #0x1
    ab90:	b.eq	a494 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29a8>  // b.none
    ab94:	b	a4a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x29b8>
    ab98:	ldr	w8, [x24]
    ab9c:	sub	w9, w8, #0x1
    aba0:	str	w9, [x24]
    aba4:	cmp	w8, #0x1
    aba8:	b.eq	a798 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cac>  // b.none
    abac:	b	a7a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2cbc>
    abb0:	mov	w3, #0x10                  	// #16
    abb4:	mov	x0, x21
    abb8:	mov	x1, x22
    abbc:	mov	x2, xzr
    abc0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    abc4:	ldr	w8, [x20, #24]
    abc8:	b	7c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x118>
    abcc:	mov	w3, #0x10                  	// #16
    abd0:	mov	x0, x21
    abd4:	mov	x1, x22
    abd8:	mov	x2, xzr
    abdc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    abe0:	ldr	w8, [x20, #24]
    abe4:	b	7c44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x158>
    abe8:	mov	w3, #0x10                  	// #16
    abec:	mov	x0, x21
    abf0:	mov	x1, x22
    abf4:	mov	x2, xzr
    abf8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    abfc:	ldr	w8, [x20, #24]
    ac00:	b	7e7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x390>
    ac04:	mov	w3, #0x10                  	// #16
    ac08:	mov	x0, x21
    ac0c:	mov	x1, x22
    ac10:	mov	x2, xzr
    ac14:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ac18:	ldr	w8, [x20, #24]
    ac1c:	b	7ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x3d4>
    ac20:	mov	w3, #0x10                  	// #16
    ac24:	mov	x0, x21
    ac28:	mov	x1, x22
    ac2c:	mov	x2, xzr
    ac30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ac34:	ldr	w8, [x20, #24]
    ac38:	b	7f00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x414>
    ac3c:	mov	w3, #0x10                  	// #16
    ac40:	mov	x0, x21
    ac44:	mov	x1, x22
    ac48:	mov	x2, xzr
    ac4c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ac50:	ldr	w8, [x20, #24]
    ac54:	b	8128 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x63c>
    ac58:	mov	w3, #0x10                  	// #16
    ac5c:	mov	x0, x21
    ac60:	mov	x1, x22
    ac64:	mov	x2, xzr
    ac68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ac6c:	ldr	w8, [x20, #24]
    ac70:	b	816c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x680>
    ac74:	mov	w3, #0x10                  	// #16
    ac78:	mov	x0, x21
    ac7c:	mov	x1, x22
    ac80:	mov	x2, xzr
    ac84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ac88:	ldr	w8, [x20, #24]
    ac8c:	b	81ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x6c0>
    ac90:	mov	w3, #0x10                  	// #16
    ac94:	mov	x0, x21
    ac98:	mov	x1, x22
    ac9c:	mov	x2, xzr
    aca0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    aca4:	ldr	w8, [x20, #24]
    aca8:	b	83d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x8e4>
    acac:	mov	w3, #0x10                  	// #16
    acb0:	mov	x0, x21
    acb4:	mov	x1, x22
    acb8:	mov	x2, xzr
    acbc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    acc0:	ldr	w8, [x20, #24]
    acc4:	b	8414 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x928>
    acc8:	mov	w3, #0x10                  	// #16
    accc:	mov	x0, x21
    acd0:	mov	x1, x22
    acd4:	mov	x2, xzr
    acd8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    acdc:	ldr	w8, [x20, #24]
    ace0:	b	8454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x968>
    ace4:	mov	w3, #0x10                  	// #16
    ace8:	mov	x0, x22
    acec:	mov	x1, x23
    acf0:	mov	x2, xzr
    acf4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    acf8:	ldr	w8, [x21, #24]
    acfc:	b	868c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xba0>
    ad00:	mov	w3, #0x10                  	// #16
    ad04:	mov	x0, x22
    ad08:	mov	x2, xzr
    ad0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ad10:	ldr	w8, [x21, #24]
    ad14:	b	88b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xdc4>
    ad18:	mov	w3, #0x10                  	// #16
    ad1c:	mov	x0, x22
    ad20:	mov	x1, x23
    ad24:	mov	x2, xzr
    ad28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ad2c:	ldr	w8, [x21, #24]
    ad30:	b	8ad8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0xfec>
    ad34:	mov	w3, #0x10                  	// #16
    ad38:	mov	x0, x22
    ad3c:	mov	x1, x23
    ad40:	mov	x2, xzr
    ad44:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ad48:	ldr	w8, [x21, #24]
    ad4c:	b	8b2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1040>
    ad50:	mov	w3, #0x10                  	// #16
    ad54:	mov	x0, x22
    ad58:	mov	x1, x23
    ad5c:	mov	x2, xzr
    ad60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ad64:	ldr	w8, [x21, #24]
    ad68:	b	8b6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1080>
    ad6c:	mov	w3, #0x10                  	// #16
    ad70:	mov	x0, x22
    ad74:	mov	x1, x23
    ad78:	mov	x2, xzr
    ad7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ad80:	ldr	w8, [x21, #24]
    ad84:	b	8f74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1488>
    ad88:	mov	w3, #0x10                  	// #16
    ad8c:	mov	x0, x22
    ad90:	mov	x1, x23
    ad94:	mov	x2, xzr
    ad98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ad9c:	ldr	w8, [x21, #24]
    ada0:	b	8fc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x14dc>
    ada4:	mov	w3, #0x10                  	// #16
    ada8:	mov	x0, x22
    adac:	mov	x1, x23
    adb0:	mov	x2, xzr
    adb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    adb8:	ldr	w8, [x21, #24]
    adbc:	b	9008 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x151c>
    adc0:	mov	w3, #0x10                  	// #16
    adc4:	mov	x0, x22
    adc8:	mov	x1, x23
    adcc:	mov	x2, xzr
    add0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    add4:	ldr	w8, [x21, #24]
    add8:	b	9048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x155c>
    addc:	mov	w3, #0x10                  	// #16
    ade0:	mov	x0, x22
    ade4:	mov	x1, x23
    ade8:	mov	x2, xzr
    adec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    adf0:	ldr	w8, [x21, #24]
    adf4:	b	9270 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1784>
    adf8:	mov	w3, #0x10                  	// #16
    adfc:	mov	x0, x22
    ae00:	mov	x1, x23
    ae04:	mov	x2, xzr
    ae08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ae0c:	ldr	w8, [x21, #24]
    ae10:	b	92b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x17c8>
    ae14:	mov	w3, #0x10                  	// #16
    ae18:	mov	x0, x22
    ae1c:	mov	x1, x23
    ae20:	mov	x2, xzr
    ae24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ae28:	ldr	w8, [x21, #24]
    ae2c:	b	94dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x19f0>
    ae30:	mov	w3, #0x10                  	// #16
    ae34:	mov	x0, x22
    ae38:	mov	x1, x23
    ae3c:	mov	x2, xzr
    ae40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ae44:	ldr	w8, [x21, #24]
    ae48:	b	9520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1a34>
    ae4c:	mov	w3, #0x10                  	// #16
    ae50:	mov	x0, x22
    ae54:	mov	x1, x23
    ae58:	mov	x2, xzr
    ae5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ae60:	ldr	w8, [x21, #24]
    ae64:	b	9564 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1a78>
    ae68:	mov	w3, #0x10                  	// #16
    ae6c:	mov	x0, x22
    ae70:	mov	x1, x23
    ae74:	mov	x2, xzr
    ae78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ae7c:	ldr	w8, [x21, #24]
    ae80:	b	978c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1ca0>
    ae84:	mov	w3, #0x10                  	// #16
    ae88:	mov	x0, x22
    ae8c:	mov	x1, x23
    ae90:	mov	x2, xzr
    ae94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ae98:	ldr	w8, [x21, #24]
    ae9c:	b	97d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1ce4>
    aea0:	mov	w3, #0x10                  	// #16
    aea4:	mov	x0, x22
    aea8:	mov	x1, x23
    aeac:	mov	x2, xzr
    aeb0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    aeb4:	ldr	w8, [x21, #24]
    aeb8:	b	9814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1d28>
    aebc:	mov	w3, #0x10                  	// #16
    aec0:	mov	x0, x22
    aec4:	mov	x1, x23
    aec8:	mov	x2, xzr
    aecc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    aed0:	ldr	w8, [x21, #24]
    aed4:	b	9a3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1f50>
    aed8:	mov	w3, #0x10                  	// #16
    aedc:	mov	x0, x22
    aee0:	mov	x1, x23
    aee4:	mov	x2, xzr
    aee8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    aeec:	ldr	w8, [x21, #24]
    aef0:	b	9a80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1f94>
    aef4:	mov	w3, #0x10                  	// #16
    aef8:	mov	x0, x22
    aefc:	mov	x1, x23
    af00:	mov	x2, xzr
    af04:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    af08:	ldr	w8, [x21, #24]
    af0c:	b	9ac4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x1fd8>
    af10:	mov	w3, #0x10                  	// #16
    af14:	mov	x0, x22
    af18:	mov	x1, x23
    af1c:	mov	x2, xzr
    af20:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    af24:	ldr	w8, [x21, #24]
    af28:	b	9b08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x201c>
    af2c:	mov	w3, #0x10                  	// #16
    af30:	mov	x0, x22
    af34:	mov	x1, x23
    af38:	mov	x2, xzr
    af3c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    af40:	ldr	w8, [x21, #24]
    af44:	b	9d30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2244>
    af48:	mov	w3, #0x10                  	// #16
    af4c:	mov	x0, x22
    af50:	mov	x1, x23
    af54:	mov	x2, xzr
    af58:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    af5c:	ldr	w8, [x21, #24]
    af60:	b	9d84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2298>
    af64:	mov	w3, #0x10                  	// #16
    af68:	mov	x0, x22
    af6c:	mov	x1, x23
    af70:	mov	x2, xzr
    af74:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    af78:	ldr	w8, [x21, #24]
    af7c:	b	9dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x22d8>
    af80:	mov	w3, #0x10                  	// #16
    af84:	mov	x0, x21
    af88:	mov	x2, xzr
    af8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    af90:	ldr	w8, [x20, #24]
    af94:	b	a1cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x26e0>
    af98:	mov	w3, #0x10                  	// #16
    af9c:	mov	x0, x21
    afa0:	mov	x1, x22
    afa4:	mov	x2, xzr
    afa8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    afac:	ldr	w8, [x20, #24]
    afb0:	b	a5d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2ae8>
    afb4:	mov	w3, #0x10                  	// #16
    afb8:	mov	x0, x21
    afbc:	mov	x1, x22
    afc0:	mov	x2, xzr
    afc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    afc8:	ldr	w8, [x20, #24]
    afcc:	b	a630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2b44>
    afd0:	mov	w3, #0x10                  	// #16
    afd4:	mov	x0, x21
    afd8:	mov	x1, x22
    afdc:	mov	x2, xzr
    afe0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    afe4:	ldr	w8, [x20, #24]
    afe8:	b	a670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2b84>
    afec:	mov	w3, #0x10                  	// #16
    aff0:	mov	x0, x21
    aff4:	mov	x1, x22
    aff8:	mov	x2, xzr
    affc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b000:	ldr	w8, [x20, #24]
    b004:	b	a6b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeBlockInfoEv+0x2bc4>
    b008:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b00c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b010:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b014:	add	x0, x0, #0x0
    b018:	add	x1, x1, #0x0
    b01c:	add	x3, x3, #0x0
    b020:	mov	w2, #0x43                  	// #67
    b024:	bl	0 <__assert_fail>
    b028:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b02c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b030:	add	x0, x0, #0x0
    b034:	add	x1, x1, #0x0
    b038:	mov	w2, #0xcc1                 	// #3265
    b03c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b040:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b044:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b048:	add	x0, x0, #0x0
    b04c:	add	x1, x1, #0x0
    b050:	mov	w2, #0xccc                 	// #3276
    b054:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b058:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b05c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b060:	add	x0, x0, #0x0
    b064:	add	x1, x1, #0x0
    b068:	mov	w2, #0xcd6                 	// #3286
    b06c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b070:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b074:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b078:	add	x0, x0, #0x0
    b07c:	add	x1, x1, #0x0
    b080:	mov	w2, #0xce0                 	// #3296
    b084:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b088:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b08c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b090:	add	x0, x0, #0x0
    b094:	add	x1, x1, #0x0
    b098:	mov	w2, #0xcea                 	// #3306
    b09c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b0a0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b0a4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b0a8:	add	x0, x0, #0x0
    b0ac:	add	x1, x1, #0x0
    b0b0:	mov	w2, #0xcf3                 	// #3315
    b0b4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b0b8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b0bc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b0c0:	add	x0, x0, #0x0
    b0c4:	add	x1, x1, #0x0
    b0c8:	mov	w2, #0xd00                 	// #3328
    b0cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b0d0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b0d4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b0d8:	add	x0, x0, #0x0
    b0dc:	add	x1, x1, #0x0
    b0e0:	mov	w2, #0xd07                 	// #3335
    b0e4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b0e8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b0ec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b0f0:	add	x0, x0, #0x0
    b0f4:	add	x1, x1, #0x0
    b0f8:	mov	w2, #0xd16                 	// #3350
    b0fc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b100:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b104:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b108:	add	x0, x0, #0x0
    b10c:	add	x1, x1, #0x0
    b110:	mov	w2, #0xd1f                 	// #3359
    b114:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b118:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b11c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b120:	add	x0, x0, #0x0
    b124:	add	x1, x1, #0x0
    b128:	mov	w2, #0xd29                 	// #3369
    b12c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b130:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b134:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b138:	add	x0, x0, #0x0
    b13c:	add	x1, x1, #0x0
    b140:	mov	w2, #0xd33                 	// #3379
    b144:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b148:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b14c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b150:	add	x0, x0, #0x0
    b154:	add	x1, x1, #0x0
    b158:	mov	w2, #0xd3e                 	// #3390
    b15c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b160:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b164:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b168:	add	x0, x0, #0x0
    b16c:	add	x1, x1, #0x0
    b170:	mov	w2, #0xd49                 	// #3401
    b174:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b178:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b17c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b180:	add	x0, x0, #0x0
    b184:	add	x1, x1, #0x0
    b188:	mov	w2, #0xd51                 	// #3409
    b18c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b190:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b194:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b198:	add	x0, x0, #0x0
    b19c:	add	x1, x1, #0x0
    b1a0:	mov	w2, #0xd59                 	// #3417
    b1a4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b1a8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b1ac:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b1b0:	add	x0, x0, #0x0
    b1b4:	add	x1, x1, #0x0
    b1b8:	mov	w2, #0xd60                 	// #3424
    b1bc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    b1c0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b1c4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b1c8:	add	x0, x0, #0x0
    b1cc:	add	x1, x1, #0x0
    b1d0:	mov	w2, #0xd6c                 	// #3436
    b1d4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000b1d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv>:
    b1d8:	stp	x29, x30, [sp, #-96]!
    b1dc:	stp	x28, x27, [sp, #16]
    b1e0:	stp	x26, x25, [sp, #32]
    b1e4:	stp	x24, x23, [sp, #48]
    b1e8:	stp	x22, x21, [sp, #64]
    b1ec:	stp	x20, x19, [sp, #80]
    b1f0:	mov	x29, sp
    b1f4:	sub	sp, sp, #0x1e0
    b1f8:	ldr	x8, [x0, #16]
    b1fc:	mov	x19, x0
    b200:	ldr	x3, [x8, #248]
    b204:	cbz	x3, b220 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x48>
    b208:	ldr	x0, [x19]
    b20c:	ldr	x2, [x8, #240]
    b210:	mov	w1, #0x2                   	// #2
    b214:	mov	w4, wzr
    b218:	bl	10c44 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    b21c:	ldr	x8, [x19, #16]
    b220:	ldr	x3, [x8, #488]
    b224:	cbz	x3, b240 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x68>
    b228:	ldr	x0, [x19]
    b22c:	ldr	x2, [x8, #480]
    b230:	mov	w1, #0x3                   	// #3
    b234:	mov	w4, wzr
    b238:	bl	10c44 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    b23c:	ldr	x8, [x19, #16]
    b240:	ldr	x3, [x8, #96]
    b244:	cbz	x3, b260 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x88>
    b248:	ldr	x0, [x19]
    b24c:	ldr	x2, [x8, #88]
    b250:	mov	w1, #0x4                   	// #4
    b254:	mov	w4, wzr
    b258:	bl	10c44 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    b25c:	ldr	x8, [x19, #16]
    b260:	sub	x9, x29, #0x50
    b264:	sub	x10, x29, #0x80
    b268:	add	x9, x9, #0x8
    b26c:	add	x10, x10, #0x8
    b270:	stur	wzr, [x29, #-72]
    b274:	stur	wzr, [x29, #-120]
    b278:	stp	xzr, x9, [x29, #-64]
    b27c:	stp	x9, xzr, [x29, #-48]
    b280:	stp	xzr, x10, [x29, #-112]
    b284:	stp	x10, xzr, [x29, #-96]
    b288:	ldr	x24, [x8, #16]
    b28c:	add	x26, x8, #0x8
    b290:	cmp	x26, x24
    b294:	b.eq	b458 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x280>  // b.none
    b298:	add	x8, sp, #0x40
    b29c:	mov	w23, wzr
    b2a0:	mov	w25, wzr
    b2a4:	add	x27, x8, #0x10
    b2a8:	b	b2b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xe0>
    b2ac:	ldr	x24, [x24, #8]
    b2b0:	cmp	x26, x24
    b2b4:	b.eq	b450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x278>  // b.none
    b2b8:	ldrb	w8, [x24]
    b2bc:	tbnz	w8, #2, df38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d60>
    b2c0:	sub	x8, x24, #0x38
    b2c4:	cmp	x24, #0x0
    b2c8:	csel	x20, xzr, x8, eq  // eq = none
    b2cc:	mov	x0, x20
    b2d0:	bl	0 <_ZNK4llvm11GlobalValue12getAlignmentEv>
    b2d4:	ldr	w8, [x19, #72]
    b2d8:	ldr	x9, [x19, #56]
    b2dc:	cmp	w23, w0
    b2e0:	csel	w23, w0, w23, cc  // cc = lo, ul, last
    b2e4:	cbz	w8, b344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x16c>
    b2e8:	ldr	x10, [x20, #24]
    b2ec:	orr	x11, x10, #0x8
    b2f0:	cmn	x11, #0x8
    b2f4:	b.eq	de58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c80>  // b.none
    b2f8:	ubfx	x11, x10, #4, #28
    b2fc:	eor	w12, w11, w10, lsr #9
    b300:	sub	w11, w8, #0x1
    b304:	and	w12, w12, w11
    b308:	add	x13, x9, w12, uxtw #4
    b30c:	ldr	x14, [x13]
    b310:	cmp	x14, x10
    b314:	b.eq	b348 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x170>  // b.none
    b318:	mov	w15, #0x1                   	// #1
    b31c:	cmn	x14, #0x8
    b320:	b.eq	b344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x16c>  // b.none
    b324:	add	w12, w12, w15
    b328:	and	w12, w12, w11
    b32c:	add	x13, x9, w12, uxtw #4
    b330:	ldr	x14, [x13]
    b334:	add	w15, w15, #0x1
    b338:	cmp	x14, x10
    b33c:	b.eq	b348 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x170>  // b.none
    b340:	b	b31c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x144>
    b344:	add	x13, x9, x8, lsl #4
    b348:	add	x8, x9, x8, lsl #4
    b34c:	cmp	x13, x8
    b350:	b.eq	de78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ca0>  // b.none
    b354:	ldr	w8, [x13, #8]
    b358:	mov	x0, x20
    b35c:	sub	w8, w8, #0x1
    b360:	cmp	w25, w8
    b364:	csel	w25, w8, w25, cc  // cc = lo, ul, last
    b368:	bl	0 <_ZNK4llvm11GlobalValue10getSectionEv>
    b36c:	cbz	x1, b2ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd4>
    b370:	mov	x0, x20
    b374:	bl	0 <_ZNK4llvm11GlobalValue10getSectionEv>
    b378:	str	x27, [sp, #64]
    b37c:	cbz	x0, b3cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1f4>
    b380:	mov	x21, x0
    b384:	mov	x22, x1
    b388:	cmp	x1, #0x10
    b38c:	mov	x0, x27
    b390:	str	x1, [sp, #16]
    b394:	b.cc	b3b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1dc>  // b.lo, b.ul, b.last
    b398:	add	x0, sp, #0x40
    b39c:	add	x1, sp, #0x10
    b3a0:	mov	x2, xzr
    b3a4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    b3a8:	ldr	x8, [sp, #16]
    b3ac:	str	x0, [sp, #64]
    b3b0:	str	x8, [sp, #80]
    b3b4:	cbz	x22, b3e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x20c>
    b3b8:	cmp	x22, #0x1
    b3bc:	b.ne	b3d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x200>  // b.any
    b3c0:	ldrb	w8, [x21]
    b3c4:	strb	w8, [x0]
    b3c8:	b	b3e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x20c>
    b3cc:	str	xzr, [sp, #72]
    b3d0:	strb	wzr, [sp, #80]
    b3d4:	b	b3f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x21c>
    b3d8:	mov	x1, x21
    b3dc:	mov	x2, x22
    b3e0:	bl	0 <memcpy>
    b3e4:	ldr	x8, [sp, #16]
    b3e8:	ldr	x9, [sp, #64]
    b3ec:	str	x8, [sp, #72]
    b3f0:	strb	wzr, [x9, x8]
    b3f4:	sub	x0, x29, #0x50
    b3f8:	add	x1, sp, #0x40
    b3fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b400:	ldr	x8, [sp, #64]
    b404:	mov	x21, x0
    b408:	cmp	x8, x27
    b40c:	b.eq	b418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x240>  // b.none
    b410:	mov	x0, x8
    b414:	bl	0 <_ZdlPv>
    b418:	ldr	w8, [x21]
    b41c:	cbnz	w8, b2ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd4>
    b420:	ldr	x22, [x19]
    b424:	mov	x0, x20
    b428:	bl	0 <_ZNK4llvm11GlobalValue10getSectionEv>
    b42c:	mov	x2, x0
    b430:	mov	x3, x1
    b434:	mov	w1, #0x5                   	// #5
    b438:	mov	x0, x22
    b43c:	mov	w4, wzr
    b440:	bl	10c44 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    b444:	ldur	x8, [x29, #-40]
    b448:	str	w8, [x21]
    b44c:	b	b2ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd4>
    b450:	ldr	x8, [x19, #16]
    b454:	b	b460 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x288>
    b458:	mov	w25, wzr
    b45c:	mov	w23, wzr
    b460:	ldr	x24, [x8, #32]
    b464:	add	x26, x8, #0x18
    b468:	cmp	x26, x24
    b46c:	b.eq	b628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x450>  // b.none
    b470:	add	x8, sp, #0x40
    b474:	add	x28, x8, #0x10
    b478:	mov	w27, #0x1                   	// #1
    b47c:	b	b48c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b4>
    b480:	ldr	x24, [x24, #8]
    b484:	cmp	x26, x24
    b488:	b.eq	b624 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x44c>  // b.none
    b48c:	ldrb	w8, [x24]
    b490:	tbnz	w8, #2, df58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d80>
    b494:	sub	x8, x24, #0x38
    b498:	cmp	x24, #0x0
    b49c:	csel	x20, xzr, x8, eq  // eq = none
    b4a0:	ldr	w8, [x20, #32]
    b4a4:	mov	w10, #0x1f                  	// #31
    b4a8:	ubfx	w9, w8, #16, #5
    b4ac:	add	w9, w9, #0xff
    b4b0:	tst	w10, w8, lsr #16
    b4b4:	orr	w9, w9, #0x100
    b4b8:	csel	w9, wzr, w9, eq  // eq = none
    b4bc:	lsl	w10, w9, #23
    b4c0:	lsl	x9, x27, x9
    b4c4:	and	w9, w9, w10, asr #31
    b4c8:	cmp	w23, w9
    b4cc:	csel	w23, w9, w23, cc  // cc = lo, ul, last
    b4d0:	tbz	w8, #22, b584 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x3ac>
    b4d4:	mov	x0, x20
    b4d8:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    b4dc:	str	x28, [sp, #64]
    b4e0:	cbz	x0, b530 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x358>
    b4e4:	mov	x21, x0
    b4e8:	mov	x22, x1
    b4ec:	cmp	x1, #0x10
    b4f0:	mov	x0, x28
    b4f4:	str	x1, [sp, #16]
    b4f8:	b.cc	b518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x340>  // b.lo, b.ul, b.last
    b4fc:	add	x0, sp, #0x40
    b500:	add	x1, sp, #0x10
    b504:	mov	x2, xzr
    b508:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    b50c:	ldr	x8, [sp, #16]
    b510:	str	x0, [sp, #64]
    b514:	str	x8, [sp, #80]
    b518:	cbz	x22, b548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x370>
    b51c:	cmp	x22, #0x1
    b520:	b.ne	b53c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x364>  // b.any
    b524:	ldrb	w8, [x21]
    b528:	strb	w8, [x0]
    b52c:	b	b548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x370>
    b530:	str	xzr, [sp, #72]
    b534:	strb	wzr, [sp, #80]
    b538:	b	b558 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x380>
    b53c:	mov	x1, x21
    b540:	mov	x2, x22
    b544:	bl	0 <memcpy>
    b548:	ldr	x8, [sp, #16]
    b54c:	ldr	x9, [sp, #64]
    b550:	str	x8, [sp, #72]
    b554:	strb	wzr, [x9, x8]
    b558:	sub	x0, x29, #0x50
    b55c:	add	x1, sp, #0x40
    b560:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b564:	ldr	x8, [sp, #64]
    b568:	mov	x21, x0
    b56c:	cmp	x8, x28
    b570:	b.eq	b57c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x3a4>  // b.none
    b574:	mov	x0, x8
    b578:	bl	0 <_ZdlPv>
    b57c:	ldr	w8, [x21]
    b580:	cbz	w8, b5d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x400>
    b584:	ldrb	w8, [x20, #19]
    b588:	tbz	w8, #6, b480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a8>
    b58c:	mov	x0, x20
    b590:	bl	0 <_ZNK4llvm8Function5getGCB5cxx11Ev>
    b594:	mov	x1, x0
    b598:	sub	x0, x29, #0x80
    b59c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b5a0:	ldr	w8, [x0]
    b5a4:	cbnz	w8, b480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a8>
    b5a8:	ldr	x22, [x19]
    b5ac:	mov	x21, x0
    b5b0:	mov	x0, x20
    b5b4:	bl	0 <_ZNK4llvm8Function5getGCB5cxx11Ev>
    b5b8:	ldp	x2, x3, [x0]
    b5bc:	mov	w1, #0xb                   	// #11
    b5c0:	mov	x0, x22
    b5c4:	mov	w4, wzr
    b5c8:	bl	10c44 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    b5cc:	ldur	x8, [x29, #-88]
    b5d0:	str	w8, [x21]
    b5d4:	b	b480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a8>
    b5d8:	ldrb	w8, [x20, #34]
    b5dc:	ldr	x22, [x19]
    b5e0:	tbnz	w8, #6, b5f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x418>
    b5e4:	mov	x2, xzr
    b5e8:	mov	x3, xzr
    b5ec:	b	b600 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x428>
    b5f0:	mov	x0, x20
    b5f4:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    b5f8:	mov	x2, x0
    b5fc:	mov	x3, x1
    b600:	mov	w1, #0x5                   	// #5
    b604:	mov	x0, x22
    b608:	mov	w4, wzr
    b60c:	bl	10c44 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>
    b610:	ldur	x8, [x29, #-40]
    b614:	str	w8, [x21]
    b618:	ldrb	w8, [x20, #19]
    b61c:	tbz	w8, #6, b480 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a8>
    b620:	b	b58c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x3b4>
    b624:	ldr	x8, [x19, #16]
    b628:	ldr	x9, [x8, #8]!
    b62c:	adrp	x22, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b630:	adrp	x28, 0 <__pthread_key_create>
    b634:	ldr	x22, [x22]
    b638:	ldr	x28, [x28]
    b63c:	and	x9, x9, #0xfffffffffffffff8
    b640:	cmp	x8, x9
    b644:	adrp	x24, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b648:	b.eq	b8d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x700>  // b.none
    b64c:	mov	w0, #0x220                 	// #544
    b650:	bl	0 <_Znwm>
    b654:	movi	v0.2s, #0x1
    b658:	mov	x27, x22
    b65c:	add	x8, x22, #0x10
    b660:	str	d0, [x0, #8]
    b664:	movi	v0.2d, #0x0
    b668:	mov	x22, x0
    b66c:	str	x8, [x0]
    b670:	stp	q0, q0, [x0, #48]
    b674:	stp	q0, q0, [x0, #80]
    b678:	stp	q0, q0, [x0, #112]
    b67c:	stp	q0, q0, [x0, #144]
    b680:	stp	q0, q0, [x0, #176]
    b684:	stp	q0, q0, [x0, #208]
    b688:	stp	q0, q0, [x0, #240]
    b68c:	stp	q0, q0, [x0, #272]
    b690:	stp	q0, q0, [x0, #304]
    b694:	stp	q0, q0, [x0, #336]
    b698:	stp	q0, q0, [x0, #368]
    b69c:	stp	q0, q0, [x0, #400]
    b6a0:	stp	q0, q0, [x0, #432]
    b6a4:	stp	q0, q0, [x0, #464]
    b6a8:	stp	q0, q0, [x0, #496]
    b6ac:	str	q0, [x0, #528]
    b6b0:	str	q0, [x22, #32]!
    b6b4:	ldr	d0, [x24]
    b6b8:	ldr	w9, [sp, #64]
    b6bc:	ldur	w10, [sp, #67]
    b6c0:	mov	x21, x0
    b6c4:	mov	x26, x0
    b6c8:	mov	w8, #0x7                   	// #7
    b6cc:	str	x22, [x21, #16]!
    b6d0:	str	d0, [x26, #24]!
    b6d4:	str	x8, [x22]
    b6d8:	mov	w8, #0xff                  	// #255
    b6dc:	strb	w8, [x0, #40]
    b6e0:	str	w10, [x0, #44]
    b6e4:	stur	w9, [x0, #41]
    b6e8:	ldr	w8, [x26]
    b6ec:	ldr	w9, [x0, #28]
    b6f0:	cmp	w8, w9
    b6f4:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    b6f8:	add	w8, w8, #0x1
    b6fc:	mov	x20, x0
    b700:	cmp	w8, w9
    b704:	str	w8, [x26]
    b708:	b.cs	dd20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b48>  // b.hs, b.nlast
    b70c:	ldr	x9, [x20, #16]
    b710:	mov	w10, #0x8                   	// #8
    b714:	mov	w11, #0x4                   	// #4
    b718:	add	x8, x9, w8, uxtw #4
    b71c:	str	x10, [x8]
    b720:	strb	w11, [x8, #8]
    b724:	ldur	w9, [sp, #67]
    b728:	ldr	w10, [sp, #64]
    b72c:	str	w9, [x8, #12]
    b730:	stur	w10, [x8, #9]
    b734:	ldp	w8, w9, [x20, #24]
    b738:	cmp	w8, w9
    b73c:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    b740:	add	w8, w8, #0x1
    b744:	cmp	w8, w9
    b748:	str	w8, [x26]
    b74c:	b.cs	dd3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b64>  // b.hs, b.nlast
    b750:	ldr	x9, [x20, #16]
    b754:	mov	w10, #0x8                   	// #8
    b758:	mov	w11, #0x4                   	// #4
    b75c:	add	x8, x9, w8, uxtw #4
    b760:	str	x10, [x8]
    b764:	strb	w11, [x8, #8]
    b768:	ldur	w9, [sp, #67]
    b76c:	ldr	w10, [sp, #64]
    b770:	str	w9, [x8, #12]
    b774:	stur	w10, [x8, #9]
    b778:	ldp	w8, w9, [x20, #24]
    b77c:	cmp	w8, w9
    b780:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    b784:	add	w8, w8, #0x1
    b788:	clz	w10, w25
    b78c:	mov	w11, #0x20                  	// #32
    b790:	cmp	w8, w9
    b794:	sub	w25, w11, w10
    b798:	str	w8, [x26]
    b79c:	b.cs	dd58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b80>  // b.hs, b.nlast
    b7a0:	ldr	x9, [x20, #16]
    b7a4:	mov	w10, #0x2                   	// #2
    b7a8:	add	x8, x9, w8, uxtw #4
    b7ac:	str	x25, [x8]
    b7b0:	strb	w10, [x8, #8]
    b7b4:	ldur	w9, [sp, #67]
    b7b8:	ldr	w10, [sp, #64]
    b7bc:	str	w9, [x8, #12]
    b7c0:	stur	w10, [x8, #9]
    b7c4:	ldp	w8, w9, [x20, #24]
    b7c8:	cmp	w8, w9
    b7cc:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    b7d0:	add	w8, w8, #0x1
    b7d4:	cmp	w8, w9
    b7d8:	str	w8, [x26]
    b7dc:	b.cs	dd74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b9c>  // b.hs, b.nlast
    b7e0:	ldr	x9, [x20, #16]
    b7e4:	mov	w10, #0x6                   	// #6
    b7e8:	mov	w11, #0x4                   	// #4
    b7ec:	add	x8, x9, w8, uxtw #4
    b7f0:	str	x10, [x8]
    b7f4:	strb	w11, [x8, #8]
    b7f8:	ldur	w9, [sp, #67]
    b7fc:	ldr	w10, [sp, #64]
    b800:	str	w9, [x8, #12]
    b804:	stur	w10, [x8, #9]
    b808:	ldp	w8, w9, [x20, #24]
    b80c:	cmp	w8, w9
    b810:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    b814:	add	w8, w8, #0x1
    b818:	cmp	w8, w9
    b81c:	str	w8, [x26]
    b820:	b.cs	dd90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2bb8>  // b.hs, b.nlast
    b824:	ldr	x9, [x20, #16]
    b828:	mov	w10, #0x6                   	// #6
    b82c:	mov	w11, #0x4                   	// #4
    b830:	add	x8, x9, w8, uxtw #4
    b834:	str	x10, [x8]
    b838:	strb	w11, [x8, #8]
    b83c:	ldur	w9, [sp, #67]
    b840:	ldr	w10, [sp, #64]
    b844:	str	w9, [x8, #12]
    b848:	stur	w10, [x8, #9]
    b84c:	ldp	w8, w9, [x20, #24]
    b850:	cmp	w8, w9
    b854:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    b858:	add	w8, w8, #0x1
    b85c:	cmp	w8, w9
    b860:	str	w8, [x26]
    b864:	b.cs	ddac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2bd4>  // b.hs, b.nlast
    b868:	ldr	x9, [x20, #16]
    b86c:	mov	w10, #0x5                   	// #5
    b870:	mov	w11, #0x2                   	// #2
    b874:	add	x8, x9, w8, uxtw #4
    b878:	str	x10, [x8]
    b87c:	strb	w11, [x8, #8]
    b880:	ldur	w9, [sp, #67]
    b884:	ldr	w10, [sp, #64]
    b888:	str	w9, [x8, #12]
    b88c:	stur	w10, [x8, #9]
    b890:	ldp	w8, w9, [x20, #24]
    b894:	cmp	w8, w9
    b898:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    b89c:	add	w8, w8, #0x1
    b8a0:	str	w8, [x26]
    b8a4:	cbz	w23, b8e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x708>
    b8a8:	clz	w10, w23
    b8ac:	mov	w11, #0x20                  	// #32
    b8b0:	sub	w10, w11, w10
    b8b4:	clz	w10, w10
    b8b8:	cmp	w8, w9
    b8bc:	sub	w23, w11, w10
    b8c0:	b.cs	ddc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2bf0>  // b.hs, b.nlast
    b8c4:	ldr	x9, [x20, #16]
    b8c8:	mov	w10, #0x2                   	// #2
    b8cc:	add	x8, x9, w8, uxtw #4
    b8d0:	str	x23, [x8]
    b8d4:	b	b8f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x720>
    b8d8:	str	wzr, [sp, #12]
    b8dc:	b	ba7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8a4>
    b8e0:	cmp	w8, w9
    b8e4:	b.cs	de00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c28>  // b.hs, b.nlast
    b8e8:	ldr	x9, [x20, #16]
    b8ec:	mov	w10, #0xff                  	// #255
    b8f0:	add	x8, x9, w8, uxtw #4
    b8f4:	str	xzr, [x8]
    b8f8:	strb	w10, [x8, #8]
    b8fc:	ldur	w9, [sp, #67]
    b900:	ldr	w10, [sp, #64]
    b904:	str	w9, [x8, #12]
    b908:	stur	w10, [x8, #9]
    b90c:	ldp	w8, w9, [x20, #24]
    b910:	cmp	w8, w9
    b914:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    b918:	ldur	x10, [x29, #-40]
    b91c:	add	w8, w8, #0x1
    b920:	str	w8, [x26]
    b924:	cbz	x10, b950 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x778>
    b928:	clz	w10, w10
    b92c:	mov	w11, #0x20                  	// #32
    b930:	cmp	w8, w9
    b934:	sub	w23, w11, w10
    b938:	b.cs	dde4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c0c>  // b.hs, b.nlast
    b93c:	ldr	x9, [x20, #16]
    b940:	mov	w10, #0x2                   	// #2
    b944:	add	x8, x9, w8, uxtw #4
    b948:	str	x23, [x8]
    b94c:	b	b968 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x790>
    b950:	cmp	w8, w9
    b954:	b.cs	de1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c44>  // b.hs, b.nlast
    b958:	ldr	x9, [x20, #16]
    b95c:	mov	w10, #0xff                  	// #255
    b960:	add	x8, x9, w8, uxtw #4
    b964:	str	xzr, [x8]
    b968:	strb	w10, [x8, #8]
    b96c:	ldur	w9, [sp, #67]
    b970:	ldr	w10, [sp, #64]
    b974:	str	w9, [x8, #12]
    b978:	stur	w10, [x8, #9]
    b97c:	ldp	w8, w9, [x20, #24]
    b980:	cmp	w8, w9
    b984:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    b988:	add	w8, w8, #0x1
    b98c:	str	w8, [x26]
    b990:	ldr	x22, [x19]
    b994:	mov	x1, x21
    b998:	stp	x21, x20, [x29, #-144]
    b99c:	mov	x0, x22
    b9a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b9a4:	ldp	x1, x8, [x22, #32]
    b9a8:	add	x20, x22, #0x18
    b9ac:	cmp	x1, x8
    b9b0:	b.eq	b9d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x7fc>  // b.none
    b9b4:	str	xzr, [x1, #8]
    b9b8:	ldur	q0, [x29, #-144]
    b9bc:	add	x8, x1, #0x10
    b9c0:	stur	xzr, [x29, #-136]
    b9c4:	str	q0, [x1]
    b9c8:	stur	xzr, [x29, #-144]
    b9cc:	str	x8, [x22, #32]
    b9d0:	b	b9e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x80c>
    b9d4:	sub	x2, x29, #0x90
    b9d8:	mov	x0, x20
    b9dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    b9e0:	ldr	x8, [x22, #32]
    b9e4:	ldr	x9, [x20]
    b9e8:	ldur	x20, [x29, #-136]
    b9ec:	mov	x22, x27
    b9f0:	sub	x8, x8, x9
    b9f4:	lsr	x8, x8, #4
    b9f8:	add	w8, w8, #0x3
    b9fc:	str	w8, [sp, #12]
    ba00:	cbz	x20, ba7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8a4>
    ba04:	add	x8, x20, #0x8
    ba08:	cbz	x28, ba28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x850>
    ba0c:	ldaxr	w9, [x8]
    ba10:	sub	w10, w9, #0x1
    ba14:	stlxr	w11, w10, [x8]
    ba18:	cbnz	w11, ba0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x834>
    ba1c:	cmp	w9, #0x1
    ba20:	b.eq	ba3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x864>  // b.none
    ba24:	b	ba7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8a4>
    ba28:	ldr	w9, [x8]
    ba2c:	sub	w10, w9, #0x1
    ba30:	str	w10, [x8]
    ba34:	cmp	w9, #0x1
    ba38:	b.ne	ba7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8a4>  // b.any
    ba3c:	mov	x21, x20
    ba40:	ldr	x8, [x21], #12
    ba44:	mov	x0, x20
    ba48:	ldr	x8, [x8, #16]
    ba4c:	blr	x8
    ba50:	cbz	x28, dcd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2af8>
    ba54:	ldaxr	w8, [x21]
    ba58:	sub	w9, w8, #0x1
    ba5c:	stlxr	w10, w9, [x21]
    ba60:	cbnz	w10, ba54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x87c>
    ba64:	cmp	w8, #0x1
    ba68:	b.ne	ba7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8a4>  // b.any
    ba6c:	ldr	x8, [x20]
    ba70:	mov	x0, x20
    ba74:	ldr	x8, [x8, #24]
    ba78:	blr	x8
    ba7c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ba80:	ldr	d0, [x8]
    ba84:	add	x8, sp, #0x40
    ba88:	add	x8, x8, #0x10
    ba8c:	str	x8, [sp, #64]
    ba90:	str	d0, [sp, #72]
    ba94:	ldr	x9, [x19, #16]
    ba98:	str	x8, [sp]
    ba9c:	sub	x20, x29, #0x20
    baa0:	ldr	x8, [x9, #216]
    baa4:	cbz	x8, bb10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x938>
    baa8:	ldr	x9, [x9, #208]
    baac:	mov	w10, #0x1                   	// #1
    bab0:	b	bacc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8f4>
    bab4:	mov	w10, wzr
    bab8:	sxtb	w11, w11
    babc:	tbnz	w11, #31, bb2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x954>
    bac0:	subs	x8, x8, #0x1
    bac4:	add	x9, x9, #0x1
    bac8:	b.eq	bb18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x940>  // b.none
    bacc:	ldrb	w11, [x9]
    bad0:	tbz	w10, #0, bab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8dc>
    bad4:	sub	w10, w11, #0x30
    bad8:	cmp	w10, #0xa
    badc:	mov	w10, #0x1                   	// #1
    bae0:	b.cc	bab8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8e0>  // b.lo, b.ul, b.last
    bae4:	and	w12, w11, #0xffffffdf
    bae8:	sub	w12, w12, #0x41
    baec:	and	w12, w12, #0xff
    baf0:	cmp	w12, #0x1a
    baf4:	b.cc	bab8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8e0>  // b.lo, b.ul, b.last
    baf8:	cmp	w11, #0x2e
    bafc:	mov	w10, #0x1                   	// #1
    bb00:	b.eq	bac0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8e8>  // b.none
    bb04:	cmp	w11, #0x5f
    bb08:	b.eq	bac0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8e8>  // b.none
    bb0c:	b	bab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8dc>
    bb10:	add	x25, sp, #0x10
    bb14:	b	bb20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x948>
    bb18:	add	x25, sp, #0x10
    bb1c:	cbz	w10, bb3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x964>
    bb20:	mov	x27, xzr
    bb24:	mov	w26, #0x8                   	// #8
    bb28:	b	bb44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x96c>
    bb2c:	add	x25, sp, #0x10
    bb30:	mov	w26, #0x2                   	// #2
    bb34:	mov	w27, #0x8                   	// #8
    bb38:	b	bb44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x96c>
    bb3c:	mov	w26, #0x2                   	// #2
    bb40:	mov	w27, #0x7                   	// #7
    bb44:	mov	w0, #0x220                 	// #544
    bb48:	bl	0 <_Znwm>
    bb4c:	movi	v0.2s, #0x1
    bb50:	add	x8, x22, #0x10
    bb54:	str	d0, [x0, #8]
    bb58:	movi	v0.2d, #0x0
    bb5c:	mov	x23, x0
    bb60:	str	x8, [x0]
    bb64:	stp	q0, q0, [x0, #48]
    bb68:	stp	q0, q0, [x0, #80]
    bb6c:	stp	q0, q0, [x0, #112]
    bb70:	stp	q0, q0, [x0, #144]
    bb74:	stp	q0, q0, [x0, #176]
    bb78:	stp	q0, q0, [x0, #208]
    bb7c:	stp	q0, q0, [x0, #240]
    bb80:	stp	q0, q0, [x0, #272]
    bb84:	stp	q0, q0, [x0, #304]
    bb88:	stp	q0, q0, [x0, #336]
    bb8c:	stp	q0, q0, [x0, #368]
    bb90:	stp	q0, q0, [x0, #400]
    bb94:	stp	q0, q0, [x0, #432]
    bb98:	stp	q0, q0, [x0, #464]
    bb9c:	stp	q0, q0, [x0, #496]
    bba0:	str	q0, [x0, #528]
    bba4:	str	q0, [x23, #32]!
    bba8:	ldr	d0, [x24]
    bbac:	mov	x22, x0
    bbb0:	mov	w8, #0x10                  	// #16
    bbb4:	str	x23, [x22, #16]!
    bbb8:	str	d0, [x0, #24]
    bbbc:	str	x8, [x23]
    bbc0:	ldp	w8, w9, [x0, #24]
    bbc4:	ldur	w11, [x20, #3]
    bbc8:	ldur	w12, [x29, #-32]
    bbcc:	mov	w10, #0xff                  	// #255
    bbd0:	cmp	w8, w9
    bbd4:	strb	w10, [x0, #40]
    bbd8:	str	w11, [x0, #44]
    bbdc:	stur	w12, [x0, #41]
    bbe0:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    bbe4:	add	w8, w8, #0x1
    bbe8:	mov	x21, x0
    bbec:	cmp	w8, w9
    bbf0:	str	w8, [x0, #24]
    bbf4:	b.cs	dce8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b10>  // b.hs, b.nlast
    bbf8:	ldr	x9, [x21, #16]
    bbfc:	mov	w10, #0x6                   	// #6
    bc00:	add	x8, x9, w8, uxtw #4
    bc04:	str	xzr, [x8]
    bc08:	strb	w10, [x8, #8]
    bc0c:	ldur	w9, [x20, #3]
    bc10:	ldur	w10, [x29, #-32]
    bc14:	str	w9, [x8, #12]
    bc18:	stur	w10, [x8, #9]
    bc1c:	ldp	w8, w9, [x21, #24]
    bc20:	cmp	w8, w9
    bc24:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    bc28:	add	w8, w8, #0x1
    bc2c:	cmp	w8, w9
    bc30:	str	w8, [x21, #24]
    bc34:	b.cs	dd04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2b2c>  // b.hs, b.nlast
    bc38:	ldr	x9, [x21, #16]
    bc3c:	add	x8, x9, w8, uxtw #4
    bc40:	str	x27, [x8]
    bc44:	strb	w26, [x8, #8]
    bc48:	ldur	w9, [x25, #3]
    bc4c:	ldr	w10, [x25]
    bc50:	str	w9, [x8, #12]
    bc54:	stur	w10, [x8, #9]
    bc58:	ldp	w8, w9, [x21, #24]
    bc5c:	cmp	w8, w9
    bc60:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    bc64:	add	w8, w8, #0x1
    bc68:	str	w8, [x21, #24]
    bc6c:	ldr	x23, [x19]
    bc70:	mov	x1, x22
    bc74:	stp	x22, x21, [sp, #48]
    bc78:	mov	x0, x23
    bc7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bc80:	ldp	x1, x8, [x23, #32]
    bc84:	add	x22, x23, #0x18
    bc88:	cmp	x1, x8
    bc8c:	b.eq	bcb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xad8>  // b.none
    bc90:	str	xzr, [x1, #8]
    bc94:	ldr	q0, [sp, #48]
    bc98:	add	x20, x1, #0x10
    bc9c:	str	xzr, [sp, #56]
    bca0:	str	q0, [x1]
    bca4:	str	xzr, [sp, #48]
    bca8:	str	x20, [x23, #32]
    bcac:	b	bcc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xae8>
    bcb0:	add	x2, sp, #0x30
    bcb4:	mov	x0, x22
    bcb8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bcbc:	ldr	x20, [x23, #32]
    bcc0:	ldr	x21, [sp, #56]
    bcc4:	ldr	x22, [x22]
    bcc8:	cbz	x21, bd44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb6c>
    bccc:	add	x8, x21, #0x8
    bcd0:	cbz	x28, bcf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb18>
    bcd4:	ldaxr	w9, [x8]
    bcd8:	sub	w10, w9, #0x1
    bcdc:	stlxr	w11, w10, [x8]
    bce0:	cbnz	w11, bcd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xafc>
    bce4:	cmp	w9, #0x1
    bce8:	b.eq	bd04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb2c>  // b.none
    bcec:	b	bd44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb6c>
    bcf0:	ldr	w9, [x8]
    bcf4:	sub	w10, w9, #0x1
    bcf8:	str	w10, [x8]
    bcfc:	cmp	w9, #0x1
    bd00:	b.ne	bd44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb6c>  // b.any
    bd04:	mov	x23, x21
    bd08:	ldr	x8, [x23], #12
    bd0c:	mov	x0, x21
    bd10:	ldr	x8, [x8, #16]
    bd14:	blr	x8
    bd18:	cbz	x28, dca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ac8>
    bd1c:	ldaxr	w8, [x23]
    bd20:	sub	w9, w8, #0x1
    bd24:	stlxr	w10, w9, [x23]
    bd28:	cbnz	w10, bd1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb44>
    bd2c:	cmp	w8, #0x1
    bd30:	b.ne	bd44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb6c>  // b.any
    bd34:	ldr	x8, [x21]
    bd38:	mov	x0, x21
    bd3c:	ldr	x8, [x8, #24]
    bd40:	blr	x8
    bd44:	ldr	x8, [x19, #16]
    bd48:	ldr	x21, [x8, #216]
    bd4c:	cbz	x21, bdac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xbd4>
    bd50:	ldr	x23, [x8, #208]
    bd54:	ldp	w8, w9, [sp, #72]
    bd58:	ldrb	w24, [x23]
    bd5c:	cmp	w8, w9
    bd60:	b.cs	bd90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xbb8>  // b.hs, b.nlast
    bd64:	ldr	x9, [sp, #64]
    bd68:	str	w24, [x9, w8, uxtw #2]
    bd6c:	ldp	w8, w9, [sp, #72]
    bd70:	cmp	w8, w9
    bd74:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    bd78:	add	w8, w8, #0x1
    bd7c:	subs	x21, x21, #0x1
    bd80:	add	x23, x23, #0x1
    bd84:	str	w8, [sp, #72]
    bd88:	b.ne	bd58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb80>  // b.any
    bd8c:	b	bdac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xbd4>
    bd90:	ldr	x1, [sp]
    bd94:	add	x0, sp, #0x40
    bd98:	mov	w3, #0x4                   	// #4
    bd9c:	mov	x2, xzr
    bda0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    bda4:	ldr	w8, [sp, #72]
    bda8:	b	bd64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb8c>
    bdac:	ldr	x0, [x19]
    bdb0:	sub	x8, x20, x22
    bdb4:	lsr	x8, x8, #4
    bdb8:	add	w3, w8, #0x3
    bdbc:	add	x2, sp, #0x40
    bdc0:	mov	w1, #0x10                  	// #16
    bdc4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bdc8:	str	wzr, [sp, #72]
    bdcc:	ldr	x8, [x19, #16]
    bdd0:	adrp	x28, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    bdd4:	add	x28, x28, #0x0
    bdd8:	ldr	x20, [x8, #16]
    bddc:	add	x26, x8, #0x8
    bde0:	cmp	x26, x20
    bde4:	b.eq	c6e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x150c>  // b.none
    bde8:	add	x8, sp, #0x10
    bdec:	add	x21, x19, #0x2a8
    bdf0:	add	x22, x19, #0x18
    bdf4:	add	x27, x8, #0x10
    bdf8:	ldrb	w8, [x20]
    bdfc:	tbnz	w8, #2, df38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d60>
    be00:	sub	x8, x20, #0x38
    be04:	cmp	x20, #0x0
    be08:	csel	x23, xzr, x8, eq  // eq = none
    be0c:	mov	x0, x23
    be10:	bl	0 <_ZNK4llvm5Value7getNameEv>
    be14:	ldrb	w8, [x19, #664]
    be18:	mov	x24, x0
    be1c:	mov	x25, x1
    be20:	cbz	w8, be34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xc5c>
    be24:	mov	x0, x21
    be28:	mov	x1, x24
    be2c:	mov	x2, x25
    be30:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    be34:	ldr	x0, [x19, #8]
    be38:	mov	x1, x24
    be3c:	mov	x2, x25
    be40:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    be44:	ldp	w8, w9, [sp, #72]
    be48:	mov	x24, x0
    be4c:	cmp	w8, w9
    be50:	b.cs	c4e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1310>  // b.hs, b.nlast
    be54:	ldr	x9, [sp, #64]
    be58:	str	w24, [x9, w8, uxtw #2]
    be5c:	ldp	w8, w9, [sp, #72]
    be60:	cmp	w8, w9
    be64:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    be68:	add	w8, w8, #0x1
    be6c:	mov	x0, x23
    be70:	str	w8, [sp, #72]
    be74:	bl	0 <_ZNK4llvm5Value7getNameEv>
    be78:	ldp	w8, w9, [sp, #72]
    be7c:	mov	x24, x1
    be80:	cmp	w8, w9
    be84:	b.cs	c504 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x132c>  // b.hs, b.nlast
    be88:	ldr	x9, [sp, #64]
    be8c:	str	w24, [x9, w8, uxtw #2]
    be90:	ldp	w8, w9, [sp, #72]
    be94:	cmp	w8, w9
    be98:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    be9c:	add	w8, w8, #0x1
    bea0:	str	w8, [sp, #72]
    bea4:	ldr	w10, [x19, #72]
    bea8:	ldr	x11, [x19, #56]
    beac:	cbz	w10, bf0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd34>
    beb0:	ldr	x12, [x23, #24]
    beb4:	orr	x13, x12, #0x8
    beb8:	cmn	x13, #0x8
    bebc:	b.eq	de58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c80>  // b.none
    bec0:	ubfx	x13, x12, #4, #28
    bec4:	eor	w14, w13, w12, lsr #9
    bec8:	sub	w13, w10, #0x1
    becc:	and	w14, w14, w13
    bed0:	add	x15, x11, w14, uxtw #4
    bed4:	ldr	x16, [x15]
    bed8:	cmp	x16, x12
    bedc:	b.eq	bf10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd38>  // b.none
    bee0:	mov	w17, #0x1                   	// #1
    bee4:	cmn	x16, #0x8
    bee8:	b.eq	bf0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd34>  // b.none
    beec:	add	w14, w14, w17
    bef0:	and	w14, w14, w13
    bef4:	add	x15, x11, w14, uxtw #4
    bef8:	ldr	x16, [x15]
    befc:	add	w17, w17, #0x1
    bf00:	cmp	x16, x12
    bf04:	b.eq	bf10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd38>  // b.none
    bf08:	b	bee4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd0c>
    bf0c:	add	x15, x11, x10, lsl #4
    bf10:	add	x10, x11, x10, lsl #4
    bf14:	cmp	x15, x10
    bf18:	b.eq	de78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ca0>  // b.none
    bf1c:	ldr	w10, [x15, #8]
    bf20:	cmp	w8, w9
    bf24:	sub	w24, w10, #0x1
    bf28:	b.cs	c520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1348>  // b.hs, b.nlast
    bf2c:	ldr	x9, [sp, #64]
    bf30:	str	w24, [x9, w8, uxtw #2]
    bf34:	ldp	w8, w9, [sp, #72]
    bf38:	cmp	w8, w9
    bf3c:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    bf40:	add	w8, w8, #0x1
    bf44:	str	w8, [sp, #72]
    bf48:	ldr	x10, [x23]
    bf4c:	cbz	x10, dec8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cf0>
    bf50:	ldr	w10, [x10, #8]
    bf54:	and	w11, w10, #0xff
    bf58:	cmp	w11, #0xf
    bf5c:	b.ne	dee8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d10>  // b.any
    bf60:	ldrb	w11, [x23, #80]
    bf64:	lsr	w10, w10, #6
    bf68:	and	w10, w10, #0x3fffffc
    bf6c:	cmp	w8, w9
    bf70:	bfxil	w10, w11, #0, #1
    bf74:	orr	w24, w10, #0x2
    bf78:	b.cs	c53c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1364>  // b.hs, b.nlast
    bf7c:	ldr	x9, [sp, #64]
    bf80:	str	w24, [x9, w8, uxtw #2]
    bf84:	ldp	w8, w9, [sp, #72]
    bf88:	cmp	w8, w9
    bf8c:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    bf90:	add	w8, w8, #0x1
    bf94:	mov	x0, x23
    bf98:	str	w8, [sp, #72]
    bf9c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    bfa0:	tbz	w0, #0, bfac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xdd4>
    bfa4:	mov	w24, wzr
    bfa8:	b	bfc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xdf0>
    bfac:	mov	x0, x23
    bfb0:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    bfb4:	tbnz	w0, #0, e070 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e98>
    bfb8:	ldur	x1, [x23, #-24]
    bfbc:	mov	x0, x22
    bfc0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    bfc4:	add	w24, w0, #0x1
    bfc8:	ldp	w8, w9, [sp, #72]
    bfcc:	cmp	w8, w9
    bfd0:	b.cs	c558 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1380>  // b.hs, b.nlast
    bfd4:	ldr	x9, [sp, #64]
    bfd8:	str	w24, [x9, w8, uxtw #2]
    bfdc:	ldp	w8, w9, [sp, #72]
    bfe0:	cmp	w8, w9
    bfe4:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    bfe8:	add	w8, w8, #0x1
    bfec:	str	w8, [sp, #72]
    bff0:	ldr	w10, [x23, #32]
    bff4:	and	x10, x10, #0xf
    bff8:	cmp	w10, #0xb
    bffc:	b.cs	de98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cc0>  // b.hs, b.nlast
    c000:	ldr	w24, [x28, x10, lsl #2]
    c004:	cmp	w8, w9
    c008:	b.cs	c574 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x139c>  // b.hs, b.nlast
    c00c:	ldr	x9, [sp, #64]
    c010:	str	w24, [x9, w8, uxtw #2]
    c014:	ldp	w8, w9, [sp, #72]
    c018:	cmp	w8, w9
    c01c:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c020:	add	w8, w8, #0x1
    c024:	str	w8, [sp, #72]
    c028:	ldrh	w10, [x23, #34]
    c02c:	mov	w12, #0x1                   	// #1
    c030:	and	w11, w10, #0x1f
    c034:	tst	w10, #0x1f
    c038:	add	w10, w11, #0xff
    c03c:	orr	w10, w10, #0x100
    c040:	csel	w10, wzr, w10, eq  // eq = none
    c044:	lsl	w11, w10, #23
    c048:	lsl	x10, x12, x10
    c04c:	and	w10, w10, w11, asr #31
    c050:	clz	w10, w10
    c054:	cmp	w8, w9
    c058:	mov	w9, #0x20                  	// #32
    c05c:	sub	w24, w9, w10
    c060:	b.cs	c590 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x13b8>  // b.hs, b.nlast
    c064:	ldr	x9, [sp, #64]
    c068:	str	w24, [x9, w8, uxtw #2]
    c06c:	ldp	w8, w9, [sp, #72]
    c070:	cmp	w8, w9
    c074:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c078:	add	w8, w8, #0x1
    c07c:	str	w8, [sp, #72]
    c080:	ldrb	w10, [x23, #34]
    c084:	tbnz	w10, #6, c0b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xed8>
    c088:	cmp	w8, w9
    c08c:	b.cs	c6a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x14d0>  // b.hs, b.nlast
    c090:	ldr	x9, [sp, #64]
    c094:	str	wzr, [x9, w8, uxtw #2]
    c098:	ldp	w8, w9, [sp, #72]
    c09c:	cmp	w8, w9
    c0a0:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c0a4:	add	w8, w8, #0x1
    c0a8:	str	w8, [sp, #72]
    c0ac:	b	c17c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfa4>
    c0b0:	mov	x0, x23
    c0b4:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    c0b8:	str	x27, [sp, #16]
    c0bc:	cbz	x0, c10c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf34>
    c0c0:	mov	x24, x0
    c0c4:	mov	x25, x1
    c0c8:	cmp	x1, #0x10
    c0cc:	mov	x0, x27
    c0d0:	stur	x1, [x29, #-32]
    c0d4:	b.cc	c0f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf1c>  // b.lo, b.ul, b.last
    c0d8:	add	x0, sp, #0x10
    c0dc:	sub	x1, x29, #0x20
    c0e0:	mov	x2, xzr
    c0e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    c0e8:	ldur	x8, [x29, #-32]
    c0ec:	str	x0, [sp, #16]
    c0f0:	str	x8, [sp, #32]
    c0f4:	cbz	x25, c124 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf4c>
    c0f8:	cmp	x25, #0x1
    c0fc:	b.ne	c118 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf40>  // b.any
    c100:	ldrb	w8, [x24]
    c104:	strb	w8, [x0]
    c108:	b	c124 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf4c>
    c10c:	str	xzr, [sp, #24]
    c110:	strb	wzr, [sp, #32]
    c114:	b	c134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf5c>
    c118:	mov	x1, x24
    c11c:	mov	x2, x25
    c120:	bl	0 <memcpy>
    c124:	ldur	x8, [x29, #-32]
    c128:	ldr	x9, [sp, #16]
    c12c:	str	x8, [sp, #24]
    c130:	strb	wzr, [x9, x8]
    c134:	sub	x0, x29, #0x50
    c138:	add	x1, sp, #0x10
    c13c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c140:	ldp	w8, w9, [sp, #72]
    c144:	ldr	w24, [x0]
    c148:	cmp	w8, w9
    c14c:	b.cs	c6c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x14ec>  // b.hs, b.nlast
    c150:	ldr	x9, [sp, #64]
    c154:	str	w24, [x9, w8, uxtw #2]
    c158:	ldp	w8, w9, [sp, #72]
    c15c:	cmp	w8, w9
    c160:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c164:	ldr	x0, [sp, #16]
    c168:	add	w8, w8, #0x1
    c16c:	str	w8, [sp, #72]
    c170:	cmp	x0, x27
    c174:	b.eq	c17c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfa4>  // b.none
    c178:	bl	0 <_ZdlPv>
    c17c:	ldr	w8, [x23, #32]
    c180:	mov	w9, #0x1cf0                	// #7408
    c184:	tst	w8, w9
    c188:	b.eq	c368 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1190>  // b.none
    c18c:	ubfx	w24, w8, #4, #2
    c190:	cmp	w24, #0x3
    c194:	b.eq	deb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cd8>  // b.none
    c198:	ldp	w8, w9, [sp, #72]
    c19c:	cmp	w8, w9
    c1a0:	b.cs	c5ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x13d4>  // b.hs, b.nlast
    c1a4:	ldr	x9, [sp, #64]
    c1a8:	str	w24, [x9, w8, uxtw #2]
    c1ac:	ldp	w8, w9, [sp, #72]
    c1b0:	cmp	w8, w9
    c1b4:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c1b8:	add	w8, w8, #0x1
    c1bc:	str	w8, [sp, #72]
    c1c0:	ldr	w10, [x23, #32]
    c1c4:	ubfx	w24, w10, #10, #3
    c1c8:	cmp	w24, #0x5
    c1cc:	b.cs	df78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2da0>  // b.hs, b.nlast
    c1d0:	cmp	w8, w9
    c1d4:	b.cs	c5c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x13f0>  // b.hs, b.nlast
    c1d8:	ldr	x9, [sp, #64]
    c1dc:	str	w24, [x9, w8, uxtw #2]
    c1e0:	ldp	w8, w9, [sp, #72]
    c1e4:	cmp	w8, w9
    c1e8:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c1ec:	add	w8, w8, #0x1
    c1f0:	str	w8, [sp, #72]
    c1f4:	ldr	w10, [x23, #32]
    c1f8:	ubfx	x10, x10, #6, #2
    c1fc:	cmp	w10, #0x3
    c200:	b.eq	df20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d48>  // b.none
    c204:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c208:	add	x11, x11, #0x0
    c20c:	ldr	w24, [x11, x10, lsl #2]
    c210:	cmp	w8, w9
    c214:	b.cs	c5e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x140c>  // b.hs, b.nlast
    c218:	ldr	x9, [sp, #64]
    c21c:	str	w24, [x9, w8, uxtw #2]
    c220:	ldp	w8, w9, [sp, #72]
    c224:	cmp	w8, w9
    c228:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c22c:	add	w8, w8, #0x1
    c230:	str	w8, [sp, #72]
    c234:	ldrb	w10, [x23, #80]
    c238:	cmp	w8, w9
    c23c:	ubfx	w24, w10, #1, #1
    c240:	b.cs	c600 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1428>  // b.hs, b.nlast
    c244:	ldr	x9, [sp, #64]
    c248:	str	w24, [x9, w8, uxtw #2]
    c24c:	ldp	w8, w9, [sp, #72]
    c250:	cmp	w8, w9
    c254:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c258:	add	w8, w8, #0x1
    c25c:	str	w8, [sp, #72]
    c260:	ldr	w10, [x23, #32]
    c264:	ubfx	w24, w10, #8, #2
    c268:	cmp	w24, #0x3
    c26c:	b.eq	df08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d30>  // b.none
    c270:	cmp	w8, w9
    c274:	b.cs	c61c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1444>  // b.hs, b.nlast
    c278:	ldr	x9, [sp, #64]
    c27c:	str	w24, [x9, w8, uxtw #2]
    c280:	ldp	w8, w9, [sp, #72]
    c284:	cmp	w8, w9
    c288:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c28c:	add	w8, w8, #0x1
    c290:	str	w8, [sp, #72]
    c294:	ldr	x1, [x23, #48]
    c298:	cbz	x1, c398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11c0>
    c29c:	mov	x0, x22
    c2a0:	bl	0 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE>
    c2a4:	ldp	w8, w9, [sp, #72]
    c2a8:	mov	w24, w0
    c2ac:	cmp	w8, w9
    c2b0:	b.cs	c3a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11cc>  // b.hs, b.nlast
    c2b4:	ldr	x9, [sp, #64]
    c2b8:	str	w24, [x9, w8, uxtw #2]
    c2bc:	ldp	w8, w9, [sp, #72]
    c2c0:	cmp	w8, w9
    c2c4:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c2c8:	add	w8, w8, #0x1
    c2cc:	str	w8, [sp, #72]
    c2d0:	ldr	x8, [x23, #72]
    c2d4:	cbz	x8, c360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1188>
    c2d8:	mov	w9, #0xffffffff            	// #-1
    c2dc:	mov	x0, x23
    c2e0:	str	w9, [sp, #16]
    c2e4:	str	x8, [sp, #24]
    c2e8:	bl	0 <_ZNK4llvm5Value10getContextEv>
    c2ec:	add	x1, sp, #0x10
    c2f0:	mov	w2, #0x1                   	// #1
    c2f4:	bl	0 <_ZN4llvm13AttributeList3getERNS_11LLVMContextENS_8ArrayRefISt4pairIjNS_12AttributeSetEEEE>
    c2f8:	cbz	x0, c360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1188>
    c2fc:	ldr	w8, [x19, #432]
    c300:	ldr	x9, [x19, #416]
    c304:	cbz	w8, c3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11e8>
    c308:	orr	x10, x0, #0x4
    c30c:	cmn	x10, #0x4
    c310:	b.eq	df90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2db8>  // b.none
    c314:	ubfx	x10, x0, #4, #28
    c318:	eor	w11, w10, w0, lsr #9
    c31c:	sub	w10, w8, #0x1
    c320:	and	w11, w10, w11
    c324:	add	x12, x9, w11, uxtw #4
    c328:	ldr	x13, [x12]
    c32c:	cmp	x13, x0
    c330:	b.eq	c3c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11ec>  // b.none
    c334:	mov	w14, #0x1                   	// #1
    c338:	cmn	x13, #0x4
    c33c:	b.eq	c3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11e8>  // b.none
    c340:	add	w11, w11, w14
    c344:	and	w11, w11, w10
    c348:	add	x12, x9, w11, uxtw #4
    c34c:	ldr	x13, [x12]
    c350:	add	w14, w14, #0x1
    c354:	cmp	x13, x0
    c358:	b.eq	c3c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11ec>  // b.none
    c35c:	b	c338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1160>
    c360:	mov	w24, wzr
    c364:	b	c3d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x11fc>
    c368:	tst	w8, #0x300
    c36c:	b.ne	c18c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfb4>  // b.any
    c370:	ldrb	w9, [x23, #80]
    c374:	tbnz	w9, #1, c18c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfb4>
    c378:	ldr	x9, [x23, #48]
    c37c:	cbnz	x9, c18c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfb4>
    c380:	tst	w8, #0xc000
    c384:	b.ne	c18c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfb4>  // b.any
    c388:	ldr	x9, [x23, #72]
    c38c:	ldr	w3, [sp, #12]
    c390:	cbz	x9, c4c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x12ec>
    c394:	b	c18c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfb4>
    c398:	mov	w24, wzr
    c39c:	cmp	w8, w9
    c3a0:	b.cc	c2b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x10dc>  // b.lo, b.ul, b.last
    c3a4:	ldr	x1, [sp]
    c3a8:	add	x0, sp, #0x40
    c3ac:	mov	w3, #0x4                   	// #4
    c3b0:	mov	x2, xzr
    c3b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c3b8:	ldr	w8, [sp, #72]
    c3bc:	b	c2b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x10dc>
    c3c0:	add	x12, x9, x8, lsl #4
    c3c4:	add	x8, x9, x8, lsl #4
    c3c8:	cmp	x12, x8
    c3cc:	b.eq	e010 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e38>  // b.none
    c3d0:	ldr	w24, [x12, #8]
    c3d4:	ldp	w8, w9, [sp, #72]
    c3d8:	cmp	w8, w9
    c3dc:	b.cs	c638 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1460>  // b.hs, b.nlast
    c3e0:	ldr	x9, [sp, #64]
    c3e4:	str	w24, [x9, w8, uxtw #2]
    c3e8:	ldp	w8, w9, [sp, #72]
    c3ec:	cmp	w8, w9
    c3f0:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c3f4:	add	w8, w8, #0x1
    c3f8:	str	w8, [sp, #72]
    c3fc:	ldr	w10, [x23, #32]
    c400:	cmp	w8, w9
    c404:	ubfx	w24, w10, #14, #1
    c408:	b.cs	c654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x147c>  // b.hs, b.nlast
    c40c:	ldr	x9, [sp, #64]
    c410:	str	w24, [x9, w8, uxtw #2]
    c414:	ldp	w8, w9, [sp, #72]
    c418:	cmp	w8, w9
    c41c:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c420:	add	w8, w8, #0x1
    c424:	mov	x0, x23
    c428:	str	w8, [sp, #72]
    c42c:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    c430:	ldrb	w8, [x19, #664]
    c434:	mov	x24, x0
    c438:	mov	x25, x1
    c43c:	cbz	w8, c450 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1278>
    c440:	mov	x0, x21
    c444:	mov	x1, x24
    c448:	mov	x2, x25
    c44c:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    c450:	ldr	x0, [x19, #8]
    c454:	mov	x1, x24
    c458:	mov	x2, x25
    c45c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c460:	ldp	w8, w9, [sp, #72]
    c464:	mov	x24, x0
    c468:	cmp	w8, w9
    c46c:	b.cs	c670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1498>  // b.hs, b.nlast
    c470:	ldr	x9, [sp, #64]
    c474:	str	w24, [x9, w8, uxtw #2]
    c478:	ldp	w8, w9, [sp, #72]
    c47c:	cmp	w8, w9
    c480:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c484:	add	w8, w8, #0x1
    c488:	mov	x0, x23
    c48c:	str	w8, [sp, #72]
    c490:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    c494:	ldp	w8, w9, [sp, #72]
    c498:	mov	x23, x1
    c49c:	cmp	w8, w9
    c4a0:	b.cs	c68c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x14b4>  // b.hs, b.nlast
    c4a4:	ldr	x9, [sp, #64]
    c4a8:	str	w23, [x9, w8, uxtw #2]
    c4ac:	ldp	w8, w9, [sp, #72]
    c4b0:	cmp	w8, w9
    c4b4:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c4b8:	mov	w3, wzr
    c4bc:	add	w8, w8, #0x1
    c4c0:	str	w8, [sp, #72]
    c4c4:	ldr	x0, [x19]
    c4c8:	add	x2, sp, #0x40
    c4cc:	mov	w1, #0x7                   	// #7
    c4d0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c4d4:	str	wzr, [sp, #72]
    c4d8:	ldr	x20, [x20, #8]
    c4dc:	cmp	x26, x20
    c4e0:	b.ne	bdf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xc20>  // b.any
    c4e4:	b	c6e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1508>
    c4e8:	ldr	x1, [sp]
    c4ec:	add	x0, sp, #0x40
    c4f0:	mov	w3, #0x4                   	// #4
    c4f4:	mov	x2, xzr
    c4f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c4fc:	ldr	w8, [sp, #72]
    c500:	b	be54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xc7c>
    c504:	ldr	x1, [sp]
    c508:	add	x0, sp, #0x40
    c50c:	mov	w3, #0x4                   	// #4
    c510:	mov	x2, xzr
    c514:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c518:	ldr	w8, [sp, #72]
    c51c:	b	be88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xcb0>
    c520:	ldr	x1, [sp]
    c524:	add	x0, sp, #0x40
    c528:	mov	w3, #0x4                   	// #4
    c52c:	mov	x2, xzr
    c530:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c534:	ldr	w8, [sp, #72]
    c538:	b	bf2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xd54>
    c53c:	ldr	x1, [sp]
    c540:	add	x0, sp, #0x40
    c544:	mov	w3, #0x4                   	// #4
    c548:	mov	x2, xzr
    c54c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c550:	ldr	w8, [sp, #72]
    c554:	b	bf7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xda4>
    c558:	ldr	x1, [sp]
    c55c:	add	x0, sp, #0x40
    c560:	mov	w3, #0x4                   	// #4
    c564:	mov	x2, xzr
    c568:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c56c:	ldr	w8, [sp, #72]
    c570:	b	bfd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xdfc>
    c574:	ldr	x1, [sp]
    c578:	add	x0, sp, #0x40
    c57c:	mov	w3, #0x4                   	// #4
    c580:	mov	x2, xzr
    c584:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c588:	ldr	w8, [sp, #72]
    c58c:	b	c00c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xe34>
    c590:	ldr	x1, [sp]
    c594:	add	x0, sp, #0x40
    c598:	mov	w3, #0x4                   	// #4
    c59c:	mov	x2, xzr
    c5a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c5a4:	ldr	w8, [sp, #72]
    c5a8:	b	c064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xe8c>
    c5ac:	ldr	x1, [sp]
    c5b0:	add	x0, sp, #0x40
    c5b4:	mov	w3, #0x4                   	// #4
    c5b8:	mov	x2, xzr
    c5bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c5c0:	ldr	w8, [sp, #72]
    c5c4:	b	c1a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xfcc>
    c5c8:	ldr	x1, [sp]
    c5cc:	add	x0, sp, #0x40
    c5d0:	mov	w3, #0x4                   	// #4
    c5d4:	mov	x2, xzr
    c5d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c5dc:	ldr	w8, [sp, #72]
    c5e0:	b	c1d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1000>
    c5e4:	ldr	x1, [sp]
    c5e8:	add	x0, sp, #0x40
    c5ec:	mov	w3, #0x4                   	// #4
    c5f0:	mov	x2, xzr
    c5f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c5f8:	ldr	w8, [sp, #72]
    c5fc:	b	c218 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1040>
    c600:	ldr	x1, [sp]
    c604:	add	x0, sp, #0x40
    c608:	mov	w3, #0x4                   	// #4
    c60c:	mov	x2, xzr
    c610:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c614:	ldr	w8, [sp, #72]
    c618:	b	c244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x106c>
    c61c:	ldr	x1, [sp]
    c620:	add	x0, sp, #0x40
    c624:	mov	w3, #0x4                   	// #4
    c628:	mov	x2, xzr
    c62c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c630:	ldr	w8, [sp, #72]
    c634:	b	c278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x10a0>
    c638:	ldr	x1, [sp]
    c63c:	add	x0, sp, #0x40
    c640:	mov	w3, #0x4                   	// #4
    c644:	mov	x2, xzr
    c648:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c64c:	ldr	w8, [sp, #72]
    c650:	b	c3e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1208>
    c654:	ldr	x1, [sp]
    c658:	add	x0, sp, #0x40
    c65c:	mov	w3, #0x4                   	// #4
    c660:	mov	x2, xzr
    c664:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c668:	ldr	w8, [sp, #72]
    c66c:	b	c40c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1234>
    c670:	ldr	x1, [sp]
    c674:	add	x0, sp, #0x40
    c678:	mov	w3, #0x4                   	// #4
    c67c:	mov	x2, xzr
    c680:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c684:	ldr	w8, [sp, #72]
    c688:	b	c470 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1298>
    c68c:	ldr	x1, [sp]
    c690:	add	x0, sp, #0x40
    c694:	mov	w3, #0x4                   	// #4
    c698:	mov	x2, xzr
    c69c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c6a0:	ldr	w8, [sp, #72]
    c6a4:	b	c4a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x12cc>
    c6a8:	ldr	x1, [sp]
    c6ac:	add	x0, sp, #0x40
    c6b0:	mov	w3, #0x4                   	// #4
    c6b4:	mov	x2, xzr
    c6b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c6bc:	ldr	w8, [sp, #72]
    c6c0:	b	c090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xeb8>
    c6c4:	ldr	x1, [sp]
    c6c8:	add	x0, sp, #0x40
    c6cc:	mov	w3, #0x4                   	// #4
    c6d0:	mov	x2, xzr
    c6d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c6d8:	ldr	w8, [sp, #72]
    c6dc:	b	c150 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xf78>
    c6e0:	ldr	x8, [x19, #16]
    c6e4:	ldr	x27, [x8, #32]
    c6e8:	add	x20, x8, #0x18
    c6ec:	cmp	x20, x27
    c6f0:	b.eq	d0bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1ee4>  // b.none
    c6f4:	add	x8, sp, #0x10
    c6f8:	add	x21, x19, #0x2a8
    c6fc:	add	x22, x19, #0x18
    c700:	add	x26, x8, #0x10
    c704:	ldrb	w8, [x27]
    c708:	tbnz	w8, #2, df58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d80>
    c70c:	sub	x8, x27, #0x38
    c710:	cmp	x27, #0x0
    c714:	csel	x23, xzr, x8, eq  // eq = none
    c718:	mov	x0, x23
    c71c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    c720:	ldrb	w8, [x19, #664]
    c724:	mov	x24, x0
    c728:	mov	x25, x1
    c72c:	cbz	w8, c740 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1568>
    c730:	mov	x0, x21
    c734:	mov	x1, x24
    c738:	mov	x2, x25
    c73c:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    c740:	ldr	x0, [x19, #8]
    c744:	mov	x1, x24
    c748:	mov	x2, x25
    c74c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    c750:	ldp	w8, w9, [sp, #72]
    c754:	mov	x24, x0
    c758:	cmp	w8, w9
    c75c:	b.cs	ce6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1c94>  // b.hs, b.nlast
    c760:	ldr	x9, [sp, #64]
    c764:	str	w24, [x9, w8, uxtw #2]
    c768:	ldp	w8, w9, [sp, #72]
    c76c:	cmp	w8, w9
    c770:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c774:	add	w8, w8, #0x1
    c778:	mov	x0, x23
    c77c:	str	w8, [sp, #72]
    c780:	bl	0 <_ZNK4llvm5Value7getNameEv>
    c784:	ldp	w8, w9, [sp, #72]
    c788:	mov	x24, x1
    c78c:	cmp	w8, w9
    c790:	b.cs	ce88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1cb0>  // b.hs, b.nlast
    c794:	ldr	x9, [sp, #64]
    c798:	str	w24, [x9, w8, uxtw #2]
    c79c:	ldp	w8, w9, [sp, #72]
    c7a0:	cmp	w8, w9
    c7a4:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c7a8:	add	w8, w8, #0x1
    c7ac:	str	w8, [sp, #72]
    c7b0:	ldr	x10, [x23, #24]
    c7b4:	cbz	x10, dfd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2df8>
    c7b8:	ldrb	w11, [x10, #8]
    c7bc:	cmp	w11, #0xc
    c7c0:	b.ne	dff0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e18>  // b.any
    c7c4:	ldr	w11, [x19, #72]
    c7c8:	ldr	x12, [x19, #56]
    c7cc:	cbz	w11, c828 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1650>
    c7d0:	orr	x13, x10, #0x8
    c7d4:	cmn	x13, #0x8
    c7d8:	b.eq	de58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c80>  // b.none
    c7dc:	ubfx	x13, x10, #4, #28
    c7e0:	eor	w14, w13, w10, lsr #9
    c7e4:	sub	w13, w11, #0x1
    c7e8:	and	w14, w13, w14
    c7ec:	add	x15, x12, w14, uxtw #4
    c7f0:	ldr	x16, [x15]
    c7f4:	cmp	x16, x10
    c7f8:	b.eq	c82c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1654>  // b.none
    c7fc:	mov	w17, #0x1                   	// #1
    c800:	cmn	x16, #0x8
    c804:	b.eq	c828 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1650>  // b.none
    c808:	add	w14, w14, w17
    c80c:	and	w14, w14, w13
    c810:	add	x15, x12, w14, uxtw #4
    c814:	ldr	x16, [x15]
    c818:	add	w17, w17, #0x1
    c81c:	cmp	x16, x10
    c820:	b.eq	c82c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1654>  // b.none
    c824:	b	c800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1628>
    c828:	add	x15, x12, x11, lsl #4
    c82c:	add	x10, x12, x11, lsl #4
    c830:	cmp	x15, x10
    c834:	b.eq	de78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ca0>  // b.none
    c838:	ldr	w10, [x15, #8]
    c83c:	cmp	w8, w9
    c840:	sub	w24, w10, #0x1
    c844:	b.cs	cea4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1ccc>  // b.hs, b.nlast
    c848:	ldr	x9, [sp, #64]
    c84c:	str	w24, [x9, w8, uxtw #2]
    c850:	ldp	w8, w9, [sp, #72]
    c854:	cmp	w8, w9
    c858:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c85c:	add	w8, w8, #0x1
    c860:	str	w8, [sp, #72]
    c864:	ldrh	w10, [x23, #18]
    c868:	cmp	w8, w9
    c86c:	ubfx	w24, w10, #4, #10
    c870:	b.cs	cec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1ce8>  // b.hs, b.nlast
    c874:	ldr	x9, [sp, #64]
    c878:	str	w24, [x9, w8, uxtw #2]
    c87c:	ldp	w8, w9, [sp, #72]
    c880:	cmp	w8, w9
    c884:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c888:	add	w8, w8, #0x1
    c88c:	mov	x0, x23
    c890:	str	w8, [sp, #72]
    c894:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    c898:	ldp	w8, w9, [sp, #72]
    c89c:	and	w24, w0, #0x1
    c8a0:	cmp	w8, w9
    c8a4:	b.cs	cedc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1d04>  // b.hs, b.nlast
    c8a8:	ldr	x9, [sp, #64]
    c8ac:	str	w24, [x9, w8, uxtw #2]
    c8b0:	ldp	w8, w9, [sp, #72]
    c8b4:	cmp	w8, w9
    c8b8:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c8bc:	add	w8, w8, #0x1
    c8c0:	str	w8, [sp, #72]
    c8c4:	ldr	w10, [x23, #32]
    c8c8:	and	x10, x10, #0xf
    c8cc:	cmp	w10, #0xb
    c8d0:	b.cs	de98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cc0>  // b.hs, b.nlast
    c8d4:	ldr	w24, [x28, x10, lsl #2]
    c8d8:	cmp	w8, w9
    c8dc:	b.cs	cef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1d20>  // b.hs, b.nlast
    c8e0:	ldr	x9, [sp, #64]
    c8e4:	str	w24, [x9, w8, uxtw #2]
    c8e8:	ldp	w8, w9, [sp, #72]
    c8ec:	cmp	w8, w9
    c8f0:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c8f4:	add	w8, w8, #0x1
    c8f8:	str	w8, [sp, #72]
    c8fc:	ldr	x12, [x23, #112]
    c900:	cbz	x12, c968 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1790>
    c904:	ldr	w10, [x19, #432]
    c908:	ldr	x11, [x19, #416]
    c90c:	cbz	w10, c970 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1798>
    c910:	orr	x13, x12, #0x4
    c914:	cmn	x13, #0x4
    c918:	b.eq	df90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2db8>  // b.none
    c91c:	ubfx	x13, x12, #4, #28
    c920:	eor	w14, w13, w12, lsr #9
    c924:	sub	w13, w10, #0x1
    c928:	and	w14, w13, w14
    c92c:	add	x15, x11, w14, uxtw #4
    c930:	ldr	x16, [x15]
    c934:	cmp	x16, x12
    c938:	b.eq	c974 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x179c>  // b.none
    c93c:	mov	w17, #0x1                   	// #1
    c940:	cmn	x16, #0x4
    c944:	b.eq	c970 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1798>  // b.none
    c948:	add	w14, w14, w17
    c94c:	and	w14, w14, w13
    c950:	add	x15, x11, w14, uxtw #4
    c954:	ldr	x16, [x15]
    c958:	add	w17, w17, #0x1
    c95c:	cmp	x16, x12
    c960:	b.eq	c974 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x179c>  // b.none
    c964:	b	c940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1768>
    c968:	mov	w24, wzr
    c96c:	b	c984 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x17ac>
    c970:	add	x15, x11, x10, lsl #4
    c974:	add	x10, x11, x10, lsl #4
    c978:	cmp	x15, x10
    c97c:	b.eq	e010 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e38>  // b.none
    c980:	ldr	w24, [x15, #8]
    c984:	cmp	w8, w9
    c988:	b.cs	cf14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1d3c>  // b.hs, b.nlast
    c98c:	ldr	x9, [sp, #64]
    c990:	str	w24, [x9, w8, uxtw #2]
    c994:	ldp	w8, w9, [sp, #72]
    c998:	cmp	w8, w9
    c99c:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c9a0:	add	w8, w8, #0x1
    c9a4:	str	w8, [sp, #72]
    c9a8:	ldrh	w10, [x23, #34]
    c9ac:	mov	w12, #0x1                   	// #1
    c9b0:	and	w11, w10, #0x1f
    c9b4:	tst	w10, #0x1f
    c9b8:	add	w10, w11, #0xff
    c9bc:	orr	w10, w10, #0x100
    c9c0:	csel	w10, wzr, w10, eq  // eq = none
    c9c4:	lsl	w11, w10, #23
    c9c8:	lsl	x10, x12, x10
    c9cc:	and	w10, w10, w11, asr #31
    c9d0:	clz	w10, w10
    c9d4:	cmp	w8, w9
    c9d8:	mov	w9, #0x20                  	// #32
    c9dc:	sub	w24, w9, w10
    c9e0:	b.cs	cf30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1d58>  // b.hs, b.nlast
    c9e4:	ldr	x9, [sp, #64]
    c9e8:	str	w24, [x9, w8, uxtw #2]
    c9ec:	ldp	w8, w9, [sp, #72]
    c9f0:	cmp	w8, w9
    c9f4:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    c9f8:	add	w8, w8, #0x1
    c9fc:	str	w8, [sp, #72]
    ca00:	ldrb	w10, [x23, #34]
    ca04:	tbnz	w10, #6, ca30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1858>
    ca08:	cmp	w8, w9
    ca0c:	b.cs	d080 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1ea8>  // b.hs, b.nlast
    ca10:	ldr	x9, [sp, #64]
    ca14:	str	wzr, [x9, w8, uxtw #2]
    ca18:	ldp	w8, w9, [sp, #72]
    ca1c:	cmp	w8, w9
    ca20:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    ca24:	add	w8, w8, #0x1
    ca28:	str	w8, [sp, #72]
    ca2c:	b	cafc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1924>
    ca30:	mov	x0, x23
    ca34:	bl	0 <_ZNK4llvm12GlobalObject14getSectionImplEv>
    ca38:	str	x26, [sp, #16]
    ca3c:	cbz	x0, ca8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x18b4>
    ca40:	mov	x24, x0
    ca44:	mov	x25, x1
    ca48:	cmp	x1, #0x10
    ca4c:	mov	x0, x26
    ca50:	stur	x1, [x29, #-32]
    ca54:	b.cc	ca74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x189c>  // b.lo, b.ul, b.last
    ca58:	add	x0, sp, #0x10
    ca5c:	sub	x1, x29, #0x20
    ca60:	mov	x2, xzr
    ca64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    ca68:	ldur	x8, [x29, #-32]
    ca6c:	str	x0, [sp, #16]
    ca70:	str	x8, [sp, #32]
    ca74:	cbz	x25, caa4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x18cc>
    ca78:	cmp	x25, #0x1
    ca7c:	b.ne	ca98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x18c0>  // b.any
    ca80:	ldrb	w8, [x24]
    ca84:	strb	w8, [x0]
    ca88:	b	caa4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x18cc>
    ca8c:	str	xzr, [sp, #24]
    ca90:	strb	wzr, [sp, #32]
    ca94:	b	cab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x18dc>
    ca98:	mov	x1, x24
    ca9c:	mov	x2, x25
    caa0:	bl	0 <memcpy>
    caa4:	ldur	x8, [x29, #-32]
    caa8:	ldr	x9, [sp, #16]
    caac:	str	x8, [sp, #24]
    cab0:	strb	wzr, [x9, x8]
    cab4:	sub	x0, x29, #0x50
    cab8:	add	x1, sp, #0x10
    cabc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cac0:	ldp	w8, w9, [sp, #72]
    cac4:	ldr	w24, [x0]
    cac8:	cmp	w8, w9
    cacc:	b.cs	d09c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1ec4>  // b.hs, b.nlast
    cad0:	ldr	x9, [sp, #64]
    cad4:	str	w24, [x9, w8, uxtw #2]
    cad8:	ldp	w8, w9, [sp, #72]
    cadc:	cmp	w8, w9
    cae0:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cae4:	ldr	x0, [sp, #16]
    cae8:	add	w8, w8, #0x1
    caec:	str	w8, [sp, #72]
    caf0:	cmp	x0, x26
    caf4:	b.eq	cafc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1924>  // b.none
    caf8:	bl	0 <_ZdlPv>
    cafc:	ldr	w8, [x23, #32]
    cb00:	ubfx	w24, w8, #4, #2
    cb04:	cmp	w24, #0x3
    cb08:	b.eq	deb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cd8>  // b.none
    cb0c:	ldp	w8, w9, [sp, #72]
    cb10:	cmp	w8, w9
    cb14:	b.cs	cf4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1d74>  // b.hs, b.nlast
    cb18:	ldr	x9, [sp, #64]
    cb1c:	str	w24, [x9, w8, uxtw #2]
    cb20:	ldp	w8, w9, [sp, #72]
    cb24:	cmp	w8, w9
    cb28:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cb2c:	add	w8, w8, #0x1
    cb30:	str	w8, [sp, #72]
    cb34:	ldrb	w10, [x23, #19]
    cb38:	tbnz	w10, #6, cb44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x196c>
    cb3c:	mov	w24, wzr
    cb40:	b	cb60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1988>
    cb44:	mov	x0, x23
    cb48:	bl	0 <_ZNK4llvm8Function5getGCB5cxx11Ev>
    cb4c:	mov	x1, x0
    cb50:	sub	x0, x29, #0x80
    cb54:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb58:	ldr	w24, [x0]
    cb5c:	ldp	w8, w9, [sp, #72]
    cb60:	cmp	w8, w9
    cb64:	b.cs	cf68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1d90>  // b.hs, b.nlast
    cb68:	ldr	x9, [sp, #64]
    cb6c:	str	w24, [x9, w8, uxtw #2]
    cb70:	ldp	w8, w9, [sp, #72]
    cb74:	cmp	w8, w9
    cb78:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cb7c:	add	w8, w8, #0x1
    cb80:	str	w8, [sp, #72]
    cb84:	ldr	w10, [x23, #32]
    cb88:	ubfx	x10, x10, #6, #2
    cb8c:	cmp	w10, #0x3
    cb90:	b.eq	df20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d48>  // b.none
    cb94:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cb98:	add	x11, x11, #0x0
    cb9c:	ldr	w24, [x11, x10, lsl #2]
    cba0:	cmp	w8, w9
    cba4:	b.cs	cf84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1dac>  // b.hs, b.nlast
    cba8:	ldr	x9, [sp, #64]
    cbac:	str	w24, [x9, w8, uxtw #2]
    cbb0:	ldp	w8, w9, [sp, #72]
    cbb4:	cmp	w8, w9
    cbb8:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cbbc:	add	w8, w8, #0x1
    cbc0:	str	w8, [sp, #72]
    cbc4:	ldrb	w10, [x23, #18]
    cbc8:	tbnz	w10, #2, cbd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x19fc>
    cbcc:	mov	w24, wzr
    cbd0:	b	cbf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1a18>
    cbd4:	mov	x0, x23
    cbd8:	bl	0 <_ZNK4llvm8Function15getPrologueDataEv>
    cbdc:	mov	x1, x0
    cbe0:	mov	x0, x22
    cbe4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    cbe8:	ldp	w8, w9, [sp, #72]
    cbec:	add	w24, w0, #0x1
    cbf0:	cmp	w8, w9
    cbf4:	b.cs	cfa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1dc8>  // b.hs, b.nlast
    cbf8:	ldr	x9, [sp, #64]
    cbfc:	str	w24, [x9, w8, uxtw #2]
    cc00:	ldp	w8, w9, [sp, #72]
    cc04:	cmp	w8, w9
    cc08:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cc0c:	add	w8, w8, #0x1
    cc10:	str	w8, [sp, #72]
    cc14:	ldr	w10, [x23, #32]
    cc18:	ubfx	w24, w10, #8, #2
    cc1c:	cmp	w24, #0x3
    cc20:	b.eq	df08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d30>  // b.none
    cc24:	cmp	w8, w9
    cc28:	b.cs	cfbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1de4>  // b.hs, b.nlast
    cc2c:	ldr	x9, [sp, #64]
    cc30:	str	w24, [x9, w8, uxtw #2]
    cc34:	ldp	w8, w9, [sp, #72]
    cc38:	cmp	w8, w9
    cc3c:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cc40:	add	w8, w8, #0x1
    cc44:	str	w8, [sp, #72]
    cc48:	ldr	x1, [x23, #48]
    cc4c:	cbz	x1, ce44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1c6c>
    cc50:	mov	x0, x22
    cc54:	bl	0 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE>
    cc58:	ldp	w8, w9, [sp, #72]
    cc5c:	mov	w24, w0
    cc60:	cmp	w8, w9
    cc64:	b.cs	ce50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1c78>  // b.hs, b.nlast
    cc68:	ldr	x9, [sp, #64]
    cc6c:	str	w24, [x9, w8, uxtw #2]
    cc70:	ldp	w8, w9, [sp, #72]
    cc74:	cmp	w8, w9
    cc78:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cc7c:	add	w8, w8, #0x1
    cc80:	str	w8, [sp, #72]
    cc84:	ldrb	w10, [x23, #18]
    cc88:	tbnz	w10, #1, cc94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1abc>
    cc8c:	mov	w24, wzr
    cc90:	b	ccb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1ad8>
    cc94:	mov	x0, x23
    cc98:	bl	0 <_ZNK4llvm8Function13getPrefixDataEv>
    cc9c:	mov	x1, x0
    cca0:	mov	x0, x22
    cca4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    cca8:	ldp	w8, w9, [sp, #72]
    ccac:	add	w24, w0, #0x1
    ccb0:	cmp	w8, w9
    ccb4:	b.cs	cfd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e00>  // b.hs, b.nlast
    ccb8:	ldr	x9, [sp, #64]
    ccbc:	str	w24, [x9, w8, uxtw #2]
    ccc0:	ldp	w8, w9, [sp, #72]
    ccc4:	cmp	w8, w9
    ccc8:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cccc:	add	w8, w8, #0x1
    ccd0:	str	w8, [sp, #72]
    ccd4:	ldrb	w10, [x23, #18]
    ccd8:	tbnz	w10, #3, cce4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1b0c>
    ccdc:	mov	w24, wzr
    cce0:	b	cd00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1b28>
    cce4:	mov	x0, x23
    cce8:	bl	0 <_ZNK4llvm8Function16getPersonalityFnEv>
    ccec:	mov	x1, x0
    ccf0:	mov	x0, x22
    ccf4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ccf8:	ldp	w8, w9, [sp, #72]
    ccfc:	add	w24, w0, #0x1
    cd00:	cmp	w8, w9
    cd04:	b.cs	cff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e1c>  // b.hs, b.nlast
    cd08:	ldr	x9, [sp, #64]
    cd0c:	str	w24, [x9, w8, uxtw #2]
    cd10:	ldp	w8, w9, [sp, #72]
    cd14:	cmp	w8, w9
    cd18:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cd1c:	add	w8, w8, #0x1
    cd20:	str	w8, [sp, #72]
    cd24:	ldr	w10, [x23, #32]
    cd28:	cmp	w8, w9
    cd2c:	ubfx	w24, w10, #14, #1
    cd30:	b.cs	d010 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e38>  // b.hs, b.nlast
    cd34:	ldr	x9, [sp, #64]
    cd38:	str	w24, [x9, w8, uxtw #2]
    cd3c:	ldp	w8, w9, [sp, #72]
    cd40:	cmp	w8, w9
    cd44:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cd48:	add	w8, w8, #0x1
    cd4c:	mov	x0, x23
    cd50:	str	w8, [sp, #72]
    cd54:	bl	0 <_ZNK4llvm11GlobalValue15getAddressSpaceEv>
    cd58:	ldp	w8, w9, [sp, #72]
    cd5c:	mov	w24, w0
    cd60:	cmp	w8, w9
    cd64:	b.cs	d02c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e54>  // b.hs, b.nlast
    cd68:	ldr	x9, [sp, #64]
    cd6c:	str	w24, [x9, w8, uxtw #2]
    cd70:	ldp	w8, w9, [sp, #72]
    cd74:	cmp	w8, w9
    cd78:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cd7c:	add	w8, w8, #0x1
    cd80:	mov	x0, x23
    cd84:	str	w8, [sp, #72]
    cd88:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    cd8c:	ldrb	w8, [x19, #664]
    cd90:	mov	x24, x0
    cd94:	mov	x25, x1
    cd98:	cbz	w8, cdac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1bd4>
    cd9c:	mov	x0, x21
    cda0:	mov	x1, x24
    cda4:	mov	x2, x25
    cda8:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    cdac:	ldr	x0, [x19, #8]
    cdb0:	mov	x1, x24
    cdb4:	mov	x2, x25
    cdb8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    cdbc:	ldp	w8, w9, [sp, #72]
    cdc0:	mov	x24, x0
    cdc4:	cmp	w8, w9
    cdc8:	b.cs	d048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e70>  // b.hs, b.nlast
    cdcc:	ldr	x9, [sp, #64]
    cdd0:	str	w24, [x9, w8, uxtw #2]
    cdd4:	ldp	w8, w9, [sp, #72]
    cdd8:	cmp	w8, w9
    cddc:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    cde0:	add	w8, w8, #0x1
    cde4:	mov	x0, x23
    cde8:	str	w8, [sp, #72]
    cdec:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    cdf0:	ldp	w8, w9, [sp, #72]
    cdf4:	mov	x23, x1
    cdf8:	cmp	w8, w9
    cdfc:	b.cs	d064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1e8c>  // b.hs, b.nlast
    ce00:	ldr	x9, [sp, #64]
    ce04:	str	w23, [x9, w8, uxtw #2]
    ce08:	ldp	w8, w9, [sp, #72]
    ce0c:	cmp	w8, w9
    ce10:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    ce14:	add	w8, w8, #0x1
    ce18:	str	w8, [sp, #72]
    ce1c:	ldr	x0, [x19]
    ce20:	add	x2, sp, #0x40
    ce24:	mov	w1, #0x8                   	// #8
    ce28:	mov	w3, wzr
    ce2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ce30:	str	wzr, [sp, #72]
    ce34:	ldr	x27, [x27, #8]
    ce38:	cmp	x20, x27
    ce3c:	b.ne	c704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x152c>  // b.any
    ce40:	b	d0b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1ee0>
    ce44:	mov	w24, wzr
    ce48:	cmp	w8, w9
    ce4c:	b.cc	cc68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1a90>  // b.lo, b.ul, b.last
    ce50:	ldr	x1, [sp]
    ce54:	add	x0, sp, #0x40
    ce58:	mov	w3, #0x4                   	// #4
    ce5c:	mov	x2, xzr
    ce60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ce64:	ldr	w8, [sp, #72]
    ce68:	b	cc68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1a90>
    ce6c:	ldr	x1, [sp]
    ce70:	add	x0, sp, #0x40
    ce74:	mov	w3, #0x4                   	// #4
    ce78:	mov	x2, xzr
    ce7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ce80:	ldr	w8, [sp, #72]
    ce84:	b	c760 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1588>
    ce88:	ldr	x1, [sp]
    ce8c:	add	x0, sp, #0x40
    ce90:	mov	w3, #0x4                   	// #4
    ce94:	mov	x2, xzr
    ce98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ce9c:	ldr	w8, [sp, #72]
    cea0:	b	c794 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x15bc>
    cea4:	ldr	x1, [sp]
    cea8:	add	x0, sp, #0x40
    ceac:	mov	w3, #0x4                   	// #4
    ceb0:	mov	x2, xzr
    ceb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ceb8:	ldr	w8, [sp, #72]
    cebc:	b	c848 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1670>
    cec0:	ldr	x1, [sp]
    cec4:	add	x0, sp, #0x40
    cec8:	mov	w3, #0x4                   	// #4
    cecc:	mov	x2, xzr
    ced0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ced4:	ldr	w8, [sp, #72]
    ced8:	b	c874 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x169c>
    cedc:	ldr	x1, [sp]
    cee0:	add	x0, sp, #0x40
    cee4:	mov	w3, #0x4                   	// #4
    cee8:	mov	x2, xzr
    ceec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cef0:	ldr	w8, [sp, #72]
    cef4:	b	c8a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x16d0>
    cef8:	ldr	x1, [sp]
    cefc:	add	x0, sp, #0x40
    cf00:	mov	w3, #0x4                   	// #4
    cf04:	mov	x2, xzr
    cf08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cf0c:	ldr	w8, [sp, #72]
    cf10:	b	c8e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1708>
    cf14:	ldr	x1, [sp]
    cf18:	add	x0, sp, #0x40
    cf1c:	mov	w3, #0x4                   	// #4
    cf20:	mov	x2, xzr
    cf24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cf28:	ldr	w8, [sp, #72]
    cf2c:	b	c98c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x17b4>
    cf30:	ldr	x1, [sp]
    cf34:	add	x0, sp, #0x40
    cf38:	mov	w3, #0x4                   	// #4
    cf3c:	mov	x2, xzr
    cf40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cf44:	ldr	w8, [sp, #72]
    cf48:	b	c9e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x180c>
    cf4c:	ldr	x1, [sp]
    cf50:	add	x0, sp, #0x40
    cf54:	mov	w3, #0x4                   	// #4
    cf58:	mov	x2, xzr
    cf5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cf60:	ldr	w8, [sp, #72]
    cf64:	b	cb18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1940>
    cf68:	ldr	x1, [sp]
    cf6c:	add	x0, sp, #0x40
    cf70:	mov	w3, #0x4                   	// #4
    cf74:	mov	x2, xzr
    cf78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cf7c:	ldr	w8, [sp, #72]
    cf80:	b	cb68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1990>
    cf84:	ldr	x1, [sp]
    cf88:	add	x0, sp, #0x40
    cf8c:	mov	w3, #0x4                   	// #4
    cf90:	mov	x2, xzr
    cf94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cf98:	ldr	w8, [sp, #72]
    cf9c:	b	cba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x19d0>
    cfa0:	ldr	x1, [sp]
    cfa4:	add	x0, sp, #0x40
    cfa8:	mov	w3, #0x4                   	// #4
    cfac:	mov	x2, xzr
    cfb0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cfb4:	ldr	w8, [sp, #72]
    cfb8:	b	cbf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1a20>
    cfbc:	ldr	x1, [sp]
    cfc0:	add	x0, sp, #0x40
    cfc4:	mov	w3, #0x4                   	// #4
    cfc8:	mov	x2, xzr
    cfcc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cfd0:	ldr	w8, [sp, #72]
    cfd4:	b	cc2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1a54>
    cfd8:	ldr	x1, [sp]
    cfdc:	add	x0, sp, #0x40
    cfe0:	mov	w3, #0x4                   	// #4
    cfe4:	mov	x2, xzr
    cfe8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cfec:	ldr	w8, [sp, #72]
    cff0:	b	ccb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1ae0>
    cff4:	ldr	x1, [sp]
    cff8:	add	x0, sp, #0x40
    cffc:	mov	w3, #0x4                   	// #4
    d000:	mov	x2, xzr
    d004:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d008:	ldr	w8, [sp, #72]
    d00c:	b	cd08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1b30>
    d010:	ldr	x1, [sp]
    d014:	add	x0, sp, #0x40
    d018:	mov	w3, #0x4                   	// #4
    d01c:	mov	x2, xzr
    d020:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d024:	ldr	w8, [sp, #72]
    d028:	b	cd34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1b5c>
    d02c:	ldr	x1, [sp]
    d030:	add	x0, sp, #0x40
    d034:	mov	w3, #0x4                   	// #4
    d038:	mov	x2, xzr
    d03c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d040:	ldr	w8, [sp, #72]
    d044:	b	cd68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1b90>
    d048:	ldr	x1, [sp]
    d04c:	add	x0, sp, #0x40
    d050:	mov	w3, #0x4                   	// #4
    d054:	mov	x2, xzr
    d058:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d05c:	ldr	w8, [sp, #72]
    d060:	b	cdcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1bf4>
    d064:	ldr	x1, [sp]
    d068:	add	x0, sp, #0x40
    d06c:	mov	w3, #0x4                   	// #4
    d070:	mov	x2, xzr
    d074:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d078:	ldr	w8, [sp, #72]
    d07c:	b	ce00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1c28>
    d080:	ldr	x1, [sp]
    d084:	add	x0, sp, #0x40
    d088:	mov	w3, #0x4                   	// #4
    d08c:	mov	x2, xzr
    d090:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d094:	ldr	w8, [sp, #72]
    d098:	b	ca10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1838>
    d09c:	ldr	x1, [sp]
    d0a0:	add	x0, sp, #0x40
    d0a4:	mov	w3, #0x4                   	// #4
    d0a8:	mov	x2, xzr
    d0ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d0b0:	ldr	w8, [sp, #72]
    d0b4:	b	cad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x18f8>
    d0b8:	ldr	x8, [x19, #16]
    d0bc:	ldr	x20, [x8, #48]
    d0c0:	add	x26, x8, #0x28
    d0c4:	cmp	x26, x20
    d0c8:	b.eq	d61c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2444>  // b.none
    d0cc:	add	x21, x19, #0x2a8
    d0d0:	add	x22, x19, #0x18
    d0d4:	ldrb	w8, [x20]
    d0d8:	tbnz	w8, #2, e030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e58>
    d0dc:	sub	x8, x20, #0x30
    d0e0:	cmp	x20, #0x0
    d0e4:	csel	x23, xzr, x8, eq  // eq = none
    d0e8:	mov	x0, x23
    d0ec:	bl	0 <_ZNK4llvm5Value7getNameEv>
    d0f0:	ldrb	w8, [x19, #664]
    d0f4:	mov	x24, x0
    d0f8:	mov	x25, x1
    d0fc:	cbz	w8, d110 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1f38>
    d100:	mov	x0, x21
    d104:	mov	x1, x24
    d108:	mov	x2, x25
    d10c:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    d110:	ldr	x0, [x19, #8]
    d114:	mov	x1, x24
    d118:	mov	x2, x25
    d11c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d120:	ldp	w8, w9, [sp, #72]
    d124:	mov	x24, x0
    d128:	cmp	w8, w9
    d12c:	b.cs	d4ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x22d4>  // b.hs, b.nlast
    d130:	ldr	x9, [sp, #64]
    d134:	str	w24, [x9, w8, uxtw #2]
    d138:	ldp	w8, w9, [sp, #72]
    d13c:	cmp	w8, w9
    d140:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d144:	add	w8, w8, #0x1
    d148:	mov	x0, x23
    d14c:	str	w8, [sp, #72]
    d150:	bl	0 <_ZNK4llvm5Value7getNameEv>
    d154:	ldp	w8, w9, [sp, #72]
    d158:	mov	x24, x1
    d15c:	cmp	w8, w9
    d160:	b.cs	d4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x22f0>  // b.hs, b.nlast
    d164:	ldr	x9, [sp, #64]
    d168:	str	w24, [x9, w8, uxtw #2]
    d16c:	ldp	w8, w9, [sp, #72]
    d170:	cmp	w8, w9
    d174:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d178:	add	w8, w8, #0x1
    d17c:	str	w8, [sp, #72]
    d180:	ldr	w10, [x19, #72]
    d184:	ldr	x11, [x19, #56]
    d188:	cbz	w10, d1e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2010>
    d18c:	ldr	x12, [x23, #24]
    d190:	orr	x13, x12, #0x8
    d194:	cmn	x13, #0x8
    d198:	b.eq	de58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c80>  // b.none
    d19c:	ubfx	x13, x12, #4, #28
    d1a0:	eor	w14, w13, w12, lsr #9
    d1a4:	sub	w13, w10, #0x1
    d1a8:	and	w14, w14, w13
    d1ac:	add	x15, x11, w14, uxtw #4
    d1b0:	ldr	x16, [x15]
    d1b4:	cmp	x16, x12
    d1b8:	b.eq	d1ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2014>  // b.none
    d1bc:	mov	w17, #0x1                   	// #1
    d1c0:	cmn	x16, #0x8
    d1c4:	b.eq	d1e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2010>  // b.none
    d1c8:	add	w14, w14, w17
    d1cc:	and	w14, w14, w13
    d1d0:	add	x15, x11, w14, uxtw #4
    d1d4:	ldr	x16, [x15]
    d1d8:	add	w17, w17, #0x1
    d1dc:	cmp	x16, x12
    d1e0:	b.eq	d1ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2014>  // b.none
    d1e4:	b	d1c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1fe8>
    d1e8:	add	x15, x11, x10, lsl #4
    d1ec:	add	x10, x11, x10, lsl #4
    d1f0:	cmp	x15, x10
    d1f4:	b.eq	de78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ca0>  // b.none
    d1f8:	ldr	w10, [x15, #8]
    d1fc:	cmp	w8, w9
    d200:	sub	w24, w10, #0x1
    d204:	b.cs	d4e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x230c>  // b.hs, b.nlast
    d208:	ldr	x9, [sp, #64]
    d20c:	str	w24, [x9, w8, uxtw #2]
    d210:	ldp	w8, w9, [sp, #72]
    d214:	cmp	w8, w9
    d218:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d21c:	add	w8, w8, #0x1
    d220:	str	w8, [sp, #72]
    d224:	ldr	x10, [x23]
    d228:	cbz	x10, dec8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cf0>
    d22c:	ldr	w10, [x10, #8]
    d230:	and	w11, w10, #0xff
    d234:	cmp	w11, #0xf
    d238:	b.ne	dee8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d10>  // b.any
    d23c:	cmp	w8, w9
    d240:	lsr	w24, w10, #8
    d244:	b.cs	d500 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2328>  // b.hs, b.nlast
    d248:	ldr	x9, [sp, #64]
    d24c:	str	w24, [x9, w8, uxtw #2]
    d250:	ldp	w8, w9, [sp, #72]
    d254:	cmp	w8, w9
    d258:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d25c:	add	w8, w8, #0x1
    d260:	str	w8, [sp, #72]
    d264:	ldur	x1, [x23, #-24]
    d268:	cbz	x1, d278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x20a0>
    d26c:	ldrb	w8, [x1, #16]
    d270:	cmp	w8, #0x11
    d274:	b.cs	dfb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2dd8>  // b.hs, b.nlast
    d278:	mov	x0, x22
    d27c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    d280:	ldp	w8, w9, [sp, #72]
    d284:	mov	w24, w0
    d288:	cmp	w8, w9
    d28c:	b.cs	d51c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2344>  // b.hs, b.nlast
    d290:	ldr	x9, [sp, #64]
    d294:	str	w24, [x9, w8, uxtw #2]
    d298:	ldp	w8, w9, [sp, #72]
    d29c:	cmp	w8, w9
    d2a0:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d2a4:	add	w8, w8, #0x1
    d2a8:	str	w8, [sp, #72]
    d2ac:	ldr	w10, [x23, #32]
    d2b0:	and	x10, x10, #0xf
    d2b4:	cmp	w10, #0xb
    d2b8:	b.cs	de98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cc0>  // b.hs, b.nlast
    d2bc:	ldr	w24, [x28, x10, lsl #2]
    d2c0:	cmp	w8, w9
    d2c4:	b.cs	d538 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2360>  // b.hs, b.nlast
    d2c8:	ldr	x9, [sp, #64]
    d2cc:	str	w24, [x9, w8, uxtw #2]
    d2d0:	ldp	w8, w9, [sp, #72]
    d2d4:	cmp	w8, w9
    d2d8:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d2dc:	add	w8, w8, #0x1
    d2e0:	str	w8, [sp, #72]
    d2e4:	ldr	w10, [x23, #32]
    d2e8:	ubfx	w24, w10, #4, #2
    d2ec:	cmp	w24, #0x3
    d2f0:	b.eq	deb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cd8>  // b.none
    d2f4:	cmp	w8, w9
    d2f8:	b.cs	d554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x237c>  // b.hs, b.nlast
    d2fc:	ldr	x9, [sp, #64]
    d300:	str	w24, [x9, w8, uxtw #2]
    d304:	ldp	w8, w9, [sp, #72]
    d308:	cmp	w8, w9
    d30c:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d310:	add	w8, w8, #0x1
    d314:	str	w8, [sp, #72]
    d318:	ldr	w10, [x23, #32]
    d31c:	ubfx	w24, w10, #8, #2
    d320:	cmp	w24, #0x3
    d324:	b.eq	df08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d30>  // b.none
    d328:	cmp	w8, w9
    d32c:	b.cs	d570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2398>  // b.hs, b.nlast
    d330:	ldr	x9, [sp, #64]
    d334:	str	w24, [x9, w8, uxtw #2]
    d338:	ldp	w8, w9, [sp, #72]
    d33c:	cmp	w8, w9
    d340:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d344:	add	w8, w8, #0x1
    d348:	str	w8, [sp, #72]
    d34c:	ldr	w10, [x23, #32]
    d350:	ubfx	w24, w10, #10, #3
    d354:	cmp	w24, #0x5
    d358:	b.cs	df78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2da0>  // b.hs, b.nlast
    d35c:	cmp	w8, w9
    d360:	b.cs	d58c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x23b4>  // b.hs, b.nlast
    d364:	ldr	x9, [sp, #64]
    d368:	str	w24, [x9, w8, uxtw #2]
    d36c:	ldp	w8, w9, [sp, #72]
    d370:	cmp	w8, w9
    d374:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d378:	add	w8, w8, #0x1
    d37c:	str	w8, [sp, #72]
    d380:	ldr	w10, [x23, #32]
    d384:	ubfx	x10, x10, #6, #2
    d388:	cmp	w10, #0x3
    d38c:	b.eq	df20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d48>  // b.none
    d390:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d394:	add	x11, x11, #0x0
    d398:	ldr	w24, [x11, x10, lsl #2]
    d39c:	cmp	w8, w9
    d3a0:	b.cs	d5a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x23d0>  // b.hs, b.nlast
    d3a4:	ldr	x9, [sp, #64]
    d3a8:	str	w24, [x9, w8, uxtw #2]
    d3ac:	ldp	w8, w9, [sp, #72]
    d3b0:	cmp	w8, w9
    d3b4:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d3b8:	add	w8, w8, #0x1
    d3bc:	str	w8, [sp, #72]
    d3c0:	ldr	w10, [x23, #32]
    d3c4:	cmp	w8, w9
    d3c8:	ubfx	w24, w10, #14, #1
    d3cc:	b.cs	d5c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x23ec>  // b.hs, b.nlast
    d3d0:	ldr	x9, [sp, #64]
    d3d4:	str	w24, [x9, w8, uxtw #2]
    d3d8:	ldp	w8, w9, [sp, #72]
    d3dc:	cmp	w8, w9
    d3e0:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d3e4:	add	w8, w8, #0x1
    d3e8:	mov	x0, x23
    d3ec:	str	w8, [sp, #72]
    d3f0:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    d3f4:	ldrb	w8, [x19, #664]
    d3f8:	mov	x24, x0
    d3fc:	mov	x25, x1
    d400:	cbz	w8, d414 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x223c>
    d404:	mov	x0, x21
    d408:	mov	x1, x24
    d40c:	mov	x2, x25
    d410:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    d414:	ldr	x0, [x19, #8]
    d418:	mov	x1, x24
    d41c:	mov	x2, x25
    d420:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d424:	ldp	w8, w9, [sp, #72]
    d428:	mov	x24, x0
    d42c:	cmp	w8, w9
    d430:	b.cs	d5e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2408>  // b.hs, b.nlast
    d434:	ldr	x9, [sp, #64]
    d438:	str	w24, [x9, w8, uxtw #2]
    d43c:	ldp	w8, w9, [sp, #72]
    d440:	cmp	w8, w9
    d444:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d448:	add	w8, w8, #0x1
    d44c:	mov	x0, x23
    d450:	str	w8, [sp, #72]
    d454:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    d458:	ldp	w8, w9, [sp, #72]
    d45c:	mov	x23, x1
    d460:	cmp	w8, w9
    d464:	b.cs	d5fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2424>  // b.hs, b.nlast
    d468:	ldr	x9, [sp, #64]
    d46c:	str	w23, [x9, w8, uxtw #2]
    d470:	ldp	w8, w9, [sp, #72]
    d474:	cmp	w8, w9
    d478:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d47c:	add	w8, w8, #0x1
    d480:	str	w8, [sp, #72]
    d484:	ldr	x0, [x19]
    d488:	add	x2, sp, #0x40
    d48c:	mov	w1, #0xe                   	// #14
    d490:	mov	w3, wzr
    d494:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d498:	str	wzr, [sp, #72]
    d49c:	ldr	x20, [x20, #8]
    d4a0:	cmp	x26, x20
    d4a4:	b.ne	d0d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1efc>  // b.any
    d4a8:	b	d618 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2440>
    d4ac:	ldr	x1, [sp]
    d4b0:	add	x0, sp, #0x40
    d4b4:	mov	w3, #0x4                   	// #4
    d4b8:	mov	x2, xzr
    d4bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d4c0:	ldr	w8, [sp, #72]
    d4c4:	b	d130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1f58>
    d4c8:	ldr	x1, [sp]
    d4cc:	add	x0, sp, #0x40
    d4d0:	mov	w3, #0x4                   	// #4
    d4d4:	mov	x2, xzr
    d4d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d4dc:	ldr	w8, [sp, #72]
    d4e0:	b	d164 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x1f8c>
    d4e4:	ldr	x1, [sp]
    d4e8:	add	x0, sp, #0x40
    d4ec:	mov	w3, #0x4                   	// #4
    d4f0:	mov	x2, xzr
    d4f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d4f8:	ldr	w8, [sp, #72]
    d4fc:	b	d208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2030>
    d500:	ldr	x1, [sp]
    d504:	add	x0, sp, #0x40
    d508:	mov	w3, #0x4                   	// #4
    d50c:	mov	x2, xzr
    d510:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d514:	ldr	w8, [sp, #72]
    d518:	b	d248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2070>
    d51c:	ldr	x1, [sp]
    d520:	add	x0, sp, #0x40
    d524:	mov	w3, #0x4                   	// #4
    d528:	mov	x2, xzr
    d52c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d530:	ldr	w8, [sp, #72]
    d534:	b	d290 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x20b8>
    d538:	ldr	x1, [sp]
    d53c:	add	x0, sp, #0x40
    d540:	mov	w3, #0x4                   	// #4
    d544:	mov	x2, xzr
    d548:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d54c:	ldr	w8, [sp, #72]
    d550:	b	d2c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x20f0>
    d554:	ldr	x1, [sp]
    d558:	add	x0, sp, #0x40
    d55c:	mov	w3, #0x4                   	// #4
    d560:	mov	x2, xzr
    d564:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d568:	ldr	w8, [sp, #72]
    d56c:	b	d2fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2124>
    d570:	ldr	x1, [sp]
    d574:	add	x0, sp, #0x40
    d578:	mov	w3, #0x4                   	// #4
    d57c:	mov	x2, xzr
    d580:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d584:	ldr	w8, [sp, #72]
    d588:	b	d330 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2158>
    d58c:	ldr	x1, [sp]
    d590:	add	x0, sp, #0x40
    d594:	mov	w3, #0x4                   	// #4
    d598:	mov	x2, xzr
    d59c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d5a0:	ldr	w8, [sp, #72]
    d5a4:	b	d364 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x218c>
    d5a8:	ldr	x1, [sp]
    d5ac:	add	x0, sp, #0x40
    d5b0:	mov	w3, #0x4                   	// #4
    d5b4:	mov	x2, xzr
    d5b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d5bc:	ldr	w8, [sp, #72]
    d5c0:	b	d3a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x21cc>
    d5c4:	ldr	x1, [sp]
    d5c8:	add	x0, sp, #0x40
    d5cc:	mov	w3, #0x4                   	// #4
    d5d0:	mov	x2, xzr
    d5d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d5d8:	ldr	w8, [sp, #72]
    d5dc:	b	d3d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x21f8>
    d5e0:	ldr	x1, [sp]
    d5e4:	add	x0, sp, #0x40
    d5e8:	mov	w3, #0x4                   	// #4
    d5ec:	mov	x2, xzr
    d5f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d5f4:	ldr	w8, [sp, #72]
    d5f8:	b	d434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x225c>
    d5fc:	ldr	x1, [sp]
    d600:	add	x0, sp, #0x40
    d604:	mov	w3, #0x4                   	// #4
    d608:	mov	x2, xzr
    d60c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d610:	ldr	w8, [sp, #72]
    d614:	b	d468 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2290>
    d618:	ldr	x8, [x19, #16]
    d61c:	ldr	x20, [x8, #64]
    d620:	add	x26, x8, #0x38
    d624:	cmp	x26, x20
    d628:	b.eq	da7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x28a4>  // b.none
    d62c:	add	x21, x19, #0x2a8
    d630:	add	x22, x19, #0x18
    d634:	ldrb	w8, [x20]
    d638:	tbnz	w8, #2, e050 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2e78>
    d63c:	sub	x8, x20, #0x30
    d640:	cmp	x20, #0x0
    d644:	csel	x23, xzr, x8, eq  // eq = none
    d648:	mov	x0, x23
    d64c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    d650:	ldrb	w8, [x19, #664]
    d654:	mov	x24, x0
    d658:	mov	x25, x1
    d65c:	cbz	w8, d670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2498>
    d660:	mov	x0, x21
    d664:	mov	x1, x24
    d668:	mov	x2, x25
    d66c:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    d670:	ldr	x0, [x19, #8]
    d674:	mov	x1, x24
    d678:	mov	x2, x25
    d67c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d680:	ldp	w8, w9, [sp, #72]
    d684:	mov	x24, x0
    d688:	cmp	w8, w9
    d68c:	b.cs	d964 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x278c>  // b.hs, b.nlast
    d690:	ldr	x9, [sp, #64]
    d694:	str	w24, [x9, w8, uxtw #2]
    d698:	ldp	w8, w9, [sp, #72]
    d69c:	cmp	w8, w9
    d6a0:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d6a4:	add	w8, w8, #0x1
    d6a8:	mov	x0, x23
    d6ac:	str	w8, [sp, #72]
    d6b0:	bl	0 <_ZNK4llvm5Value7getNameEv>
    d6b4:	ldp	w8, w9, [sp, #72]
    d6b8:	mov	x24, x1
    d6bc:	cmp	w8, w9
    d6c0:	b.cs	d980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x27a8>  // b.hs, b.nlast
    d6c4:	ldr	x9, [sp, #64]
    d6c8:	str	w24, [x9, w8, uxtw #2]
    d6cc:	ldp	w8, w9, [sp, #72]
    d6d0:	cmp	w8, w9
    d6d4:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d6d8:	add	w8, w8, #0x1
    d6dc:	str	w8, [sp, #72]
    d6e0:	ldr	w10, [x19, #72]
    d6e4:	ldr	x11, [x19, #56]
    d6e8:	cbz	w10, d748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2570>
    d6ec:	ldr	x12, [x23, #24]
    d6f0:	orr	x13, x12, #0x8
    d6f4:	cmn	x13, #0x8
    d6f8:	b.eq	de58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c80>  // b.none
    d6fc:	ubfx	x13, x12, #4, #28
    d700:	eor	w14, w13, w12, lsr #9
    d704:	sub	w13, w10, #0x1
    d708:	and	w14, w14, w13
    d70c:	add	x15, x11, w14, uxtw #4
    d710:	ldr	x16, [x15]
    d714:	cmp	x16, x12
    d718:	b.eq	d74c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2574>  // b.none
    d71c:	mov	w17, #0x1                   	// #1
    d720:	cmn	x16, #0x8
    d724:	b.eq	d748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2570>  // b.none
    d728:	add	w14, w14, w17
    d72c:	and	w14, w14, w13
    d730:	add	x15, x11, w14, uxtw #4
    d734:	ldr	x16, [x15]
    d738:	add	w17, w17, #0x1
    d73c:	cmp	x16, x12
    d740:	b.eq	d74c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2574>  // b.none
    d744:	b	d720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2548>
    d748:	add	x15, x11, x10, lsl #4
    d74c:	add	x10, x11, x10, lsl #4
    d750:	cmp	x15, x10
    d754:	b.eq	de78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ca0>  // b.none
    d758:	ldr	w10, [x15, #8]
    d75c:	cmp	w8, w9
    d760:	sub	w24, w10, #0x1
    d764:	b.cs	d99c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x27c4>  // b.hs, b.nlast
    d768:	ldr	x9, [sp, #64]
    d76c:	str	w24, [x9, w8, uxtw #2]
    d770:	ldp	w8, w9, [sp, #72]
    d774:	cmp	w8, w9
    d778:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d77c:	add	w8, w8, #0x1
    d780:	str	w8, [sp, #72]
    d784:	ldr	x10, [x23]
    d788:	cbz	x10, dec8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cf0>
    d78c:	ldr	w10, [x10, #8]
    d790:	and	w11, w10, #0xff
    d794:	cmp	w11, #0xf
    d798:	b.ne	dee8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2d10>  // b.any
    d79c:	cmp	w8, w9
    d7a0:	lsr	w24, w10, #8
    d7a4:	b.cs	d9b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x27e0>  // b.hs, b.nlast
    d7a8:	ldr	x9, [sp, #64]
    d7ac:	str	w24, [x9, w8, uxtw #2]
    d7b0:	ldp	w8, w9, [sp, #72]
    d7b4:	cmp	w8, w9
    d7b8:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d7bc:	add	w8, w8, #0x1
    d7c0:	str	w8, [sp, #72]
    d7c4:	ldur	x1, [x23, #-24]
    d7c8:	cbz	x1, d7d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2600>
    d7cc:	ldrb	w8, [x1, #16]
    d7d0:	cmp	w8, #0x11
    d7d4:	b.cs	dfb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2dd8>  // b.hs, b.nlast
    d7d8:	mov	x0, x22
    d7dc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    d7e0:	ldp	w8, w9, [sp, #72]
    d7e4:	mov	w24, w0
    d7e8:	cmp	w8, w9
    d7ec:	b.cs	d9d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x27fc>  // b.hs, b.nlast
    d7f0:	ldr	x9, [sp, #64]
    d7f4:	str	w24, [x9, w8, uxtw #2]
    d7f8:	ldp	w8, w9, [sp, #72]
    d7fc:	cmp	w8, w9
    d800:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d804:	add	w8, w8, #0x1
    d808:	str	w8, [sp, #72]
    d80c:	ldr	w10, [x23, #32]
    d810:	and	x10, x10, #0xf
    d814:	cmp	w10, #0xb
    d818:	b.cs	de98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cc0>  // b.hs, b.nlast
    d81c:	ldr	w24, [x28, x10, lsl #2]
    d820:	cmp	w8, w9
    d824:	b.cs	d9f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2818>  // b.hs, b.nlast
    d828:	ldr	x9, [sp, #64]
    d82c:	str	w24, [x9, w8, uxtw #2]
    d830:	ldp	w8, w9, [sp, #72]
    d834:	cmp	w8, w9
    d838:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d83c:	add	w8, w8, #0x1
    d840:	str	w8, [sp, #72]
    d844:	ldr	w10, [x23, #32]
    d848:	ubfx	w24, w10, #4, #2
    d84c:	cmp	w24, #0x3
    d850:	b.eq	deb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2cd8>  // b.none
    d854:	cmp	w8, w9
    d858:	b.cs	da0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2834>  // b.hs, b.nlast
    d85c:	ldr	x9, [sp, #64]
    d860:	str	w24, [x9, w8, uxtw #2]
    d864:	ldp	w8, w9, [sp, #72]
    d868:	cmp	w8, w9
    d86c:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d870:	add	w8, w8, #0x1
    d874:	str	w8, [sp, #72]
    d878:	ldr	w10, [x23, #32]
    d87c:	cmp	w8, w9
    d880:	ubfx	w24, w10, #14, #1
    d884:	b.cs	da28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2850>  // b.hs, b.nlast
    d888:	ldr	x9, [sp, #64]
    d88c:	str	w24, [x9, w8, uxtw #2]
    d890:	ldp	w8, w9, [sp, #72]
    d894:	cmp	w8, w9
    d898:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d89c:	add	w8, w8, #0x1
    d8a0:	mov	x0, x23
    d8a4:	str	w8, [sp, #72]
    d8a8:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    d8ac:	ldrb	w8, [x19, #664]
    d8b0:	mov	x24, x0
    d8b4:	mov	x25, x1
    d8b8:	cbz	w8, d8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x26f4>
    d8bc:	mov	x0, x21
    d8c0:	mov	x1, x24
    d8c4:	mov	x2, x25
    d8c8:	bl	0 <_ZN4llvm4SHA16updateENS_8ArrayRefIhEE>
    d8cc:	ldr	x0, [x19, #8]
    d8d0:	mov	x1, x24
    d8d4:	mov	x2, x25
    d8d8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d8dc:	ldp	w8, w9, [sp, #72]
    d8e0:	mov	x24, x0
    d8e4:	cmp	w8, w9
    d8e8:	b.cs	da44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x286c>  // b.hs, b.nlast
    d8ec:	ldr	x9, [sp, #64]
    d8f0:	str	w24, [x9, w8, uxtw #2]
    d8f4:	ldp	w8, w9, [sp, #72]
    d8f8:	cmp	w8, w9
    d8fc:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d900:	add	w8, w8, #0x1
    d904:	mov	x0, x23
    d908:	str	w8, [sp, #72]
    d90c:	bl	0 <_ZNK4llvm11GlobalValue12getPartitionEv>
    d910:	ldp	w8, w9, [sp, #72]
    d914:	mov	x23, x1
    d918:	cmp	w8, w9
    d91c:	b.cs	da60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2888>  // b.hs, b.nlast
    d920:	ldr	x9, [sp, #64]
    d924:	str	w23, [x9, w8, uxtw #2]
    d928:	ldp	w8, w9, [sp, #72]
    d92c:	cmp	w8, w9
    d930:	b.cs	de38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2c60>  // b.hs, b.nlast
    d934:	add	w8, w8, #0x1
    d938:	str	w8, [sp, #72]
    d93c:	ldr	x0, [x19]
    d940:	add	x2, sp, #0x40
    d944:	mov	w1, #0x12                  	// #18
    d948:	mov	w3, wzr
    d94c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    d950:	str	wzr, [sp, #72]
    d954:	ldr	x20, [x20, #8]
    d958:	cmp	x26, x20
    d95c:	b.ne	d634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x245c>  // b.any
    d960:	b	da7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x28a4>
    d964:	ldr	x1, [sp]
    d968:	add	x0, sp, #0x40
    d96c:	mov	w3, #0x4                   	// #4
    d970:	mov	x2, xzr
    d974:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d978:	ldr	w8, [sp, #72]
    d97c:	b	d690 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x24b8>
    d980:	ldr	x1, [sp]
    d984:	add	x0, sp, #0x40
    d988:	mov	w3, #0x4                   	// #4
    d98c:	mov	x2, xzr
    d990:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d994:	ldr	w8, [sp, #72]
    d998:	b	d6c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x24ec>
    d99c:	ldr	x1, [sp]
    d9a0:	add	x0, sp, #0x40
    d9a4:	mov	w3, #0x4                   	// #4
    d9a8:	mov	x2, xzr
    d9ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d9b0:	ldr	w8, [sp, #72]
    d9b4:	b	d768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2590>
    d9b8:	ldr	x1, [sp]
    d9bc:	add	x0, sp, #0x40
    d9c0:	mov	w3, #0x4                   	// #4
    d9c4:	mov	x2, xzr
    d9c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d9cc:	ldr	w8, [sp, #72]
    d9d0:	b	d7a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x25d0>
    d9d4:	ldr	x1, [sp]
    d9d8:	add	x0, sp, #0x40
    d9dc:	mov	w3, #0x4                   	// #4
    d9e0:	mov	x2, xzr
    d9e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    d9e8:	ldr	w8, [sp, #72]
    d9ec:	b	d7f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2618>
    d9f0:	ldr	x1, [sp]
    d9f4:	add	x0, sp, #0x40
    d9f8:	mov	w3, #0x4                   	// #4
    d9fc:	mov	x2, xzr
    da00:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    da04:	ldr	w8, [sp, #72]
    da08:	b	d828 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2650>
    da0c:	ldr	x1, [sp]
    da10:	add	x0, sp, #0x40
    da14:	mov	w3, #0x4                   	// #4
    da18:	mov	x2, xzr
    da1c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    da20:	ldr	w8, [sp, #72]
    da24:	b	d85c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2684>
    da28:	ldr	x1, [sp]
    da2c:	add	x0, sp, #0x40
    da30:	mov	w3, #0x4                   	// #4
    da34:	mov	x2, xzr
    da38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    da3c:	ldr	w8, [sp, #72]
    da40:	b	d888 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x26b0>
    da44:	ldr	x1, [sp]
    da48:	add	x0, sp, #0x40
    da4c:	mov	w3, #0x4                   	// #4
    da50:	mov	x2, xzr
    da54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    da58:	ldr	w8, [sp, #72]
    da5c:	b	d8ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2714>
    da60:	ldr	x1, [sp]
    da64:	add	x0, sp, #0x40
    da68:	mov	w3, #0x4                   	// #4
    da6c:	mov	x2, xzr
    da70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    da74:	ldr	w8, [sp, #72]
    da78:	b	d920 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2748>
    da7c:	mov	w0, #0x220                 	// #544
    da80:	bl	0 <_Znwm>
    da84:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    da88:	ldr	x8, [x8]
    da8c:	movi	v0.2s, #0x1
    da90:	str	d0, [x0, #8]
    da94:	movi	v0.2d, #0x0
    da98:	add	x8, x8, #0x10
    da9c:	mov	x9, x0
    daa0:	mov	x20, x0
    daa4:	str	x8, [x0]
    daa8:	mov	w8, #0xd                   	// #13
    daac:	stp	q0, q0, [x0, #48]
    dab0:	stp	q0, q0, [x0, #80]
    dab4:	stp	q0, q0, [x0, #112]
    dab8:	stp	q0, q0, [x0, #144]
    dabc:	stp	q0, q0, [x0, #176]
    dac0:	stp	q0, q0, [x0, #208]
    dac4:	stp	q0, q0, [x0, #240]
    dac8:	stp	q0, q0, [x0, #272]
    dacc:	stp	q0, q0, [x0, #304]
    dad0:	stp	q0, q0, [x0, #336]
    dad4:	stp	q0, q0, [x0, #368]
    dad8:	stp	q0, q0, [x0, #400]
    dadc:	stp	q0, q0, [x0, #432]
    dae0:	stp	q0, q0, [x0, #464]
    dae4:	stp	q0, q0, [x0, #496]
    dae8:	str	q0, [x9, #32]!
    daec:	str	q0, [x0, #528]
    daf0:	str	x9, [x20, #16]!
    daf4:	str	x8, [x9]
    daf8:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dafc:	ldr	d0, [x9]
    db00:	mov	w8, #0xff                  	// #255
    db04:	mov	w9, #0x20                  	// #32
    db08:	strb	w8, [x0, #40]
    db0c:	mov	w8, #0x2                   	// #2
    db10:	str	x9, [x0, #48]
    db14:	strb	w8, [x0, #56]
    db18:	str	d0, [x0, #24]
    db1c:	ldr	x22, [x19]
    db20:	stp	x20, x0, [sp, #16]
    db24:	mov	x1, x20
    db28:	mov	x0, x22
    db2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    db30:	ldp	x1, x8, [x22, #32]
    db34:	add	x21, x22, #0x18
    db38:	cmp	x1, x8
    db3c:	b.eq	db5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2984>  // b.none
    db40:	stp	x20, xzr, [x1]
    db44:	ldr	x9, [sp, #24]
    db48:	add	x8, x1, #0x10
    db4c:	stp	xzr, xzr, [sp, #16]
    db50:	str	x9, [x1, #8]
    db54:	str	x8, [x22, #32]
    db58:	b	db6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2994>
    db5c:	add	x2, sp, #0x10
    db60:	mov	x0, x21
    db64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    db68:	ldr	x8, [x22, #32]
    db6c:	adrp	x23, 0 <__pthread_key_create>
    db70:	ldr	x23, [x23]
    db74:	ldr	x9, [x21]
    db78:	ldr	x21, [sp, #24]
    db7c:	sub	x8, x8, x9
    db80:	lsr	x8, x8, #4
    db84:	add	w20, w8, #0x3
    db88:	cbz	x21, dc04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a2c>
    db8c:	add	x8, x21, #0x8
    db90:	cbz	x23, dbb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x29d8>
    db94:	ldaxr	w9, [x8]
    db98:	sub	w10, w9, #0x1
    db9c:	stlxr	w11, w10, [x8]
    dba0:	cbnz	w11, db94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x29bc>
    dba4:	cmp	w9, #0x1
    dba8:	b.eq	dbc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x29ec>  // b.none
    dbac:	b	dc04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a2c>
    dbb0:	ldr	w9, [x8]
    dbb4:	sub	w10, w9, #0x1
    dbb8:	str	w10, [x8]
    dbbc:	cmp	w9, #0x1
    dbc0:	b.ne	dc04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a2c>  // b.any
    dbc4:	mov	x22, x21
    dbc8:	ldr	x8, [x22], #12
    dbcc:	mov	x0, x21
    dbd0:	ldr	x8, [x8, #16]
    dbd4:	blr	x8
    dbd8:	cbz	x23, dcb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2ae0>
    dbdc:	ldaxr	w8, [x22]
    dbe0:	sub	w9, w8, #0x1
    dbe4:	stlxr	w10, w9, [x22]
    dbe8:	cbnz	w10, dbdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a04>
    dbec:	cmp	w8, #0x1
    dbf0:	b.ne	dc04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a2c>  // b.any
    dbf4:	ldr	x8, [x21]
    dbf8:	mov	x0, x21
    dbfc:	ldr	x8, [x8, #24]
    dc00:	blr	x8
    dc04:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc08:	add	x8, x8, #0x0
    dc0c:	ldr	q0, [x8]
    dc10:	sub	x2, x29, #0x20
    dc14:	mov	w3, #0x2                   	// #2
    dc18:	mov	w1, w20
    dc1c:	stur	q0, [x29, #-32]
    dc20:	ldr	x0, [x19]
    dc24:	mov	x4, xzr
    dc28:	mov	x5, xzr
    dc2c:	mov	x6, xzr
    dc30:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc34:	ldr	x8, [x19]
    dc38:	ldr	x9, [x8]
    dc3c:	ldr	w8, [x8, #8]
    dc40:	ldr	w9, [x9, #8]
    dc44:	add	x8, x8, x9, lsl #3
    dc48:	sub	x8, x8, #0x20
    dc4c:	str	x8, [x19, #648]
    dc50:	ldr	x0, [sp, #64]
    dc54:	add	x8, sp, #0x40
    dc58:	add	x8, x8, #0x10
    dc5c:	cmp	x0, x8
    dc60:	b.eq	dc68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a90>  // b.none
    dc64:	bl	0 <free>
    dc68:	ldur	x1, [x29, #-112]
    dc6c:	sub	x0, x29, #0x80
    dc70:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc74:	ldur	x1, [x29, #-64]
    dc78:	sub	x0, x29, #0x50
    dc7c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dc80:	add	sp, sp, #0x1e0
    dc84:	ldp	x20, x19, [sp, #80]
    dc88:	ldp	x22, x21, [sp, #64]
    dc8c:	ldp	x24, x23, [sp, #48]
    dc90:	ldp	x26, x25, [sp, #32]
    dc94:	ldp	x28, x27, [sp, #16]
    dc98:	ldp	x29, x30, [sp], #96
    dc9c:	ret
    dca0:	ldr	w8, [x23]
    dca4:	sub	w9, w8, #0x1
    dca8:	str	w9, [x23]
    dcac:	cmp	w8, #0x1
    dcb0:	b.eq	bd34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb5c>  // b.none
    dcb4:	b	bd44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xb6c>
    dcb8:	ldr	w8, [x22]
    dcbc:	sub	w9, w8, #0x1
    dcc0:	str	w9, [x22]
    dcc4:	cmp	w8, #0x1
    dcc8:	b.eq	dbf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a1c>  // b.none
    dccc:	b	dc04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x2a2c>
    dcd0:	ldr	w8, [x21]
    dcd4:	sub	w9, w8, #0x1
    dcd8:	str	w9, [x21]
    dcdc:	cmp	w8, #0x1
    dce0:	b.eq	ba6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x894>  // b.none
    dce4:	b	ba7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x8a4>
    dce8:	mov	w3, #0x10                  	// #16
    dcec:	mov	x0, x22
    dcf0:	mov	x1, x23
    dcf4:	mov	x2, xzr
    dcf8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dcfc:	ldr	w8, [x21, #24]
    dd00:	b	bbf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xa20>
    dd04:	mov	w3, #0x10                  	// #16
    dd08:	mov	x0, x22
    dd0c:	mov	x1, x23
    dd10:	mov	x2, xzr
    dd14:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dd18:	ldr	w8, [x21, #24]
    dd1c:	b	bc38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0xa60>
    dd20:	mov	w3, #0x10                  	// #16
    dd24:	mov	x0, x21
    dd28:	mov	x1, x22
    dd2c:	mov	x2, xzr
    dd30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dd34:	ldr	w8, [x26]
    dd38:	b	b70c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x534>
    dd3c:	mov	w3, #0x10                  	// #16
    dd40:	mov	x0, x21
    dd44:	mov	x1, x22
    dd48:	mov	x2, xzr
    dd4c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dd50:	ldr	w8, [x26]
    dd54:	b	b750 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x578>
    dd58:	mov	w3, #0x10                  	// #16
    dd5c:	mov	x0, x21
    dd60:	mov	x1, x22
    dd64:	mov	x2, xzr
    dd68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dd6c:	ldr	w8, [x26]
    dd70:	b	b7a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x5c8>
    dd74:	mov	w3, #0x10                  	// #16
    dd78:	mov	x0, x21
    dd7c:	mov	x1, x22
    dd80:	mov	x2, xzr
    dd84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dd88:	ldr	w8, [x26]
    dd8c:	b	b7e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x608>
    dd90:	mov	w3, #0x10                  	// #16
    dd94:	mov	x0, x21
    dd98:	mov	x1, x22
    dd9c:	mov	x2, xzr
    dda0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dda4:	ldr	w8, [x26]
    dda8:	b	b824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x64c>
    ddac:	mov	w3, #0x10                  	// #16
    ddb0:	mov	x0, x21
    ddb4:	mov	x1, x22
    ddb8:	mov	x2, xzr
    ddbc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ddc0:	ldr	w8, [x26]
    ddc4:	b	b868 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x690>
    ddc8:	mov	w3, #0x10                  	// #16
    ddcc:	mov	x0, x21
    ddd0:	mov	x1, x22
    ddd4:	mov	x2, xzr
    ddd8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    dddc:	ldr	w8, [x26]
    dde0:	b	b8c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x6ec>
    dde4:	mov	w3, #0x10                  	// #16
    dde8:	mov	x0, x21
    ddec:	mov	x1, x22
    ddf0:	mov	x2, xzr
    ddf4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ddf8:	ldr	w8, [x26]
    ddfc:	b	b93c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x764>
    de00:	mov	w3, #0x10                  	// #16
    de04:	mov	x0, x21
    de08:	mov	x1, x22
    de0c:	mov	x2, xzr
    de10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    de14:	ldr	w8, [x26]
    de18:	b	b8e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x710>
    de1c:	mov	w3, #0x10                  	// #16
    de20:	mov	x0, x21
    de24:	mov	x1, x22
    de28:	mov	x2, xzr
    de2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    de30:	ldr	w8, [x26]
    de34:	b	b958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeModuleInfoEv+0x780>
    de38:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de3c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de40:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de44:	add	x0, x0, #0x0
    de48:	add	x1, x1, #0x0
    de4c:	add	x3, x3, #0x0
    de50:	mov	w2, #0x43                  	// #67
    de54:	bl	0 <__assert_fail>
    de58:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de5c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de60:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de64:	add	x0, x0, #0x0
    de68:	add	x1, x1, #0x0
    de6c:	add	x3, x3, #0x0
    de70:	mov	w2, #0x252                 	// #594
    de74:	bl	0 <__assert_fail>
    de78:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de7c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de80:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de84:	add	x0, x0, #0x0
    de88:	add	x1, x1, #0x0
    de8c:	add	x3, x3, #0x0
    de90:	mov	w2, #0xa9                  	// #169
    de94:	bl	0 <__assert_fail>
    de98:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    de9c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dea0:	add	x0, x0, #0x0
    dea4:	add	x1, x1, #0x0
    dea8:	mov	w2, #0x3e3                 	// #995
    deac:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    deb0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    deb4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    deb8:	add	x0, x0, #0x0
    debc:	add	x1, x1, #0x0
    dec0:	mov	w2, #0x411                 	// #1041
    dec4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    dec8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    decc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ded0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ded4:	add	x0, x0, #0x0
    ded8:	add	x1, x1, #0x0
    dedc:	add	x3, x3, #0x0
    dee0:	mov	w2, #0x69                  	// #105
    dee4:	bl	0 <__assert_fail>
    dee8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    deec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    def0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    def4:	add	x0, x0, #0x0
    def8:	add	x1, x1, #0x0
    defc:	add	x3, x3, #0x0
    df00:	mov	w2, #0x108                 	// #264
    df04:	bl	0 <__assert_fail>
    df08:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df0c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df10:	add	x0, x0, #0x0
    df14:	add	x1, x1, #0x0
    df18:	mov	w2, #0x41a                 	// #1050
    df1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    df20:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df24:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df28:	add	x0, x0, #0x0
    df2c:	add	x1, x1, #0x0
    df30:	mov	w2, #0x43e                 	// #1086
    df34:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    df38:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df3c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df40:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df44:	add	x0, x0, #0x0
    df48:	add	x1, x1, #0x0
    df4c:	add	x3, x3, #0x0
    df50:	mov	w2, #0x8b                  	// #139
    df54:	bl	0 <__assert_fail>
    df58:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df5c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df60:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df64:	add	x0, x0, #0x0
    df68:	add	x1, x1, #0x0
    df6c:	add	x3, x3, #0x0
    df70:	mov	w2, #0x8b                  	// #139
    df74:	bl	0 <__assert_fail>
    df78:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df7c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df80:	add	x0, x0, #0x0
    df84:	add	x1, x1, #0x0
    df88:	mov	w2, #0x425                 	// #1061
    df8c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    df90:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df94:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df98:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    df9c:	add	x0, x0, #0x0
    dfa0:	add	x1, x1, #0x0
    dfa4:	add	x3, x3, #0x0
    dfa8:	mov	w2, #0x252                 	// #594
    dfac:	bl	0 <__assert_fail>
    dfb0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dfb4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dfb8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dfbc:	add	x0, x0, #0x0
    dfc0:	add	x1, x1, #0x0
    dfc4:	add	x3, x3, #0x0
    dfc8:	mov	w2, #0x134                 	// #308
    dfcc:	bl	0 <__assert_fail>
    dfd0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dfd4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dfd8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dfdc:	add	x0, x0, #0x0
    dfe0:	add	x1, x1, #0x0
    dfe4:	add	x3, x3, #0x0
    dfe8:	mov	w2, #0x69                  	// #105
    dfec:	bl	0 <__assert_fail>
    dff0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dff4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dff8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    dffc:	add	x0, x0, #0x0
    e000:	add	x1, x1, #0x0
    e004:	add	x3, x3, #0x0
    e008:	mov	w2, #0x108                 	// #264
    e00c:	bl	0 <__assert_fail>
    e010:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e014:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e018:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e01c:	add	x0, x0, #0x0
    e020:	add	x1, x1, #0x0
    e024:	add	x3, x3, #0x0
    e028:	mov	w2, #0xb3                  	// #179
    e02c:	bl	0 <__assert_fail>
    e030:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e034:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e038:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e03c:	add	x0, x0, #0x0
    e040:	add	x1, x1, #0x0
    e044:	add	x3, x3, #0x0
    e048:	mov	w2, #0x8b                  	// #139
    e04c:	bl	0 <__assert_fail>
    e050:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e054:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e058:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e05c:	add	x0, x0, #0x0
    e060:	add	x1, x1, #0x0
    e064:	add	x3, x3, #0x0
    e068:	mov	w2, #0x8b                  	// #139
    e06c:	bl	0 <__assert_fail>
    e070:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e074:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e078:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e07c:	add	x0, x0, #0x0
    e080:	add	x1, x1, #0x0
    e084:	add	x3, x3, #0x0
    e088:	mov	w2, #0x89                  	// #137
    e08c:	bl	0 <__assert_fail>

000000000000e090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE>:
    e090:	str	d8, [sp, #-112]!
    e094:	stp	x29, x30, [sp, #16]
    e098:	stp	x28, x27, [sp, #32]
    e09c:	stp	x26, x25, [sp, #48]
    e0a0:	stp	x24, x23, [sp, #64]
    e0a4:	stp	x22, x21, [sp, #80]
    e0a8:	stp	x20, x19, [sp, #96]
    e0ac:	mov	x29, sp
    e0b0:	sub	sp, sp, #0x220
    e0b4:	ldrb	w8, [x0, #344]
    e0b8:	cbz	w8, e34c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x2bc>
    e0bc:	ldp	x9, x8, [x0, #24]
    e0c0:	mov	x19, x0
    e0c4:	cmp	x9, x8
    e0c8:	b.eq	e2c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x238>  // b.none
    e0cc:	ldur	x8, [x8, #-32]
    e0d0:	mov	x20, x1
    e0d4:	cmp	x8, x1
    e0d8:	b.ne	e2c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x238>  // b.any
    e0dc:	ldr	x0, [x19]
    e0e0:	mov	w1, #0x12                  	// #18
    e0e4:	mov	w2, #0x3                   	// #3
    e0e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e0ec:	ldp	x8, x26, [x19, #24]
    e0f0:	cmp	x8, x26
    e0f4:	b.eq	e2c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x230>  // b.none
    e0f8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e0fc:	ldr	d8, [x8]
    e100:	add	x8, sp, #0x8
    e104:	add	x21, x19, #0x18
    e108:	add	x22, x8, #0x10
    e10c:	mov	w25, #0x1                   	// #1
    e110:	b	e120 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x90>
    e114:	ldr	x8, [x19, #24]
    e118:	cmp	x8, x26
    e11c:	b.eq	e2c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x230>  // b.none
    e120:	ldur	x8, [x26, #-32]
    e124:	cmp	x8, x20
    e128:	b.ne	e2c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x230>  // b.any
    e12c:	ldp	x27, x8, [x26, #-24]
    e130:	sub	x28, x8, x27
    e134:	asr	x24, x28, #2
    e138:	cmp	x24, #0x1
    e13c:	b.ls	e30c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x27c>  // b.plast
    e140:	ldur	x8, [x26, #-40]
    e144:	cbz	x8, e32c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x29c>
    e148:	ldrb	w8, [x8, #16]
    e14c:	str	x22, [sp, #8]
    e150:	str	d8, [sp, #16]
    e154:	cmp	w8, #0x12
    e158:	cinc	w23, w25, eq  // eq = none
    e15c:	cmp	x24, #0x41
    e160:	b.cc	e178 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0xe8>  // b.lo, b.ul, b.last
    e164:	add	x0, sp, #0x8
    e168:	mov	w3, #0x8                   	// #8
    e16c:	mov	x1, x22
    e170:	mov	x2, x24
    e174:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e178:	cmp	x28, #0x0
    e17c:	b.le	e1b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x120>
    e180:	lsr	x9, x28, #2
    e184:	ldr	x10, [sp, #8]
    e188:	ldr	w8, [sp, #16]
    e18c:	cmp	x9, #0x0
    e190:	cset	w11, ne  // ne = any
    e194:	sub	x11, x9, x11
    e198:	add	x11, x11, #0x1
    e19c:	cmp	x11, #0x4
    e1a0:	add	x14, x10, x8, lsl #3
    e1a4:	b.cs	e1b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x128>  // b.hs, b.nlast
    e1a8:	mov	x10, x14
    e1ac:	b	e1fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x16c>
    e1b0:	ldr	w8, [sp, #16]
    e1b4:	b	e214 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x184>
    e1b8:	and	x12, x11, #0xfffffffffffffffc
    e1bc:	add	x13, x27, #0x8
    e1c0:	sub	x9, x9, x12
    e1c4:	add	x10, x14, x12, lsl #3
    e1c8:	add	x27, x27, x12, lsl #2
    e1cc:	add	x14, x14, #0x10
    e1d0:	mov	x15, x12
    e1d4:	ldp	d0, d1, [x13, #-8]
    e1d8:	add	x13, x13, #0x10
    e1dc:	subs	x15, x15, #0x4
    e1e0:	uxtl	v0.2d, v0.2s
    e1e4:	uxtl	v1.2d, v1.2s
    e1e8:	stp	q0, q1, [x14, #-16]
    e1ec:	add	x14, x14, #0x20
    e1f0:	b.ne	e1d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x144>  // b.any
    e1f4:	cmp	x11, x12
    e1f8:	b.eq	e214 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x184>  // b.none
    e1fc:	add	x9, x9, #0x1
    e200:	ldr	w11, [x27], #4
    e204:	sub	x9, x9, #0x1
    e208:	cmp	x9, #0x1
    e20c:	str	x11, [x10], #8
    e210:	b.gt	e200 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x170>
    e214:	ldr	w9, [sp, #20]
    e218:	add	x8, x8, x24
    e21c:	cmp	x8, x9
    e220:	b.hi	e2ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x25c>  // b.pmore
    e224:	str	w8, [sp, #16]
    e228:	ldur	x1, [x26, #-40]
    e22c:	mov	x0, x21
    e230:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    e234:	ldp	w8, w9, [sp, #16]
    e238:	mov	w24, w0
    e23c:	cmp	w8, w9
    e240:	b.cs	e2a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x214>  // b.hs, b.nlast
    e244:	ldr	x9, [sp, #8]
    e248:	str	x24, [x9, w8, uxtw #3]
    e24c:	ldp	w8, w9, [sp, #16]
    e250:	cmp	w8, w9
    e254:	b.cs	e2ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x25c>  // b.hs, b.nlast
    e258:	add	w8, w8, #0x1
    e25c:	str	w8, [sp, #16]
    e260:	ldr	x0, [x19]
    e264:	add	x2, sp, #0x8
    e268:	mov	w1, w23
    e26c:	mov	w3, wzr
    e270:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e274:	ldr	x0, [sp, #8]
    e278:	cmp	x0, x22
    e27c:	b.eq	e284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x1f4>  // b.none
    e280:	bl	0 <free>
    e284:	ldr	x8, [x19, #32]
    e288:	sub	x26, x8, #0x28
    e28c:	str	x26, [x19, #32]
    e290:	ldur	x0, [x8, #-24]
    e294:	cbz	x0, e114 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x84>
    e298:	bl	0 <_ZdlPv>
    e29c:	ldr	x26, [x19, #32]
    e2a0:	b	e114 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x84>
    e2a4:	add	x0, sp, #0x8
    e2a8:	mov	w3, #0x8                   	// #8
    e2ac:	mov	x1, x22
    e2b0:	mov	x2, xzr
    e2b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    e2b8:	ldr	w8, [sp, #16]
    e2bc:	b	e244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeUseListBlockEPKN4llvm8FunctionE+0x1b4>
    e2c0:	ldr	x0, [x19]
    e2c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e2c8:	add	sp, sp, #0x220
    e2cc:	ldp	x20, x19, [sp, #96]
    e2d0:	ldp	x22, x21, [sp, #80]
    e2d4:	ldp	x24, x23, [sp, #64]
    e2d8:	ldp	x26, x25, [sp, #48]
    e2dc:	ldp	x28, x27, [sp, #32]
    e2e0:	ldp	x29, x30, [sp, #16]
    e2e4:	ldr	d8, [sp], #112
    e2e8:	ret
    e2ec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e2f0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e2f4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e2f8:	add	x0, x0, #0x0
    e2fc:	add	x1, x1, #0x0
    e300:	add	x3, x3, #0x0
    e304:	mov	w2, #0x43                  	// #67
    e308:	bl	0 <__assert_fail>
    e30c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e310:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e314:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e318:	add	x0, x0, #0x0
    e31c:	add	x1, x1, #0x0
    e320:	add	x3, x3, #0x0
    e324:	mov	w2, #0xc44                 	// #3140
    e328:	bl	0 <__assert_fail>
    e32c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e330:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e334:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e338:	add	x0, x0, #0x0
    e33c:	add	x1, x1, #0x0
    e340:	add	x3, x3, #0x0
    e344:	mov	w2, #0x69                  	// #105
    e348:	bl	0 <__assert_fail>
    e34c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e350:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e354:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e358:	add	x0, x0, #0x0
    e35c:	add	x1, x1, #0x0
    e360:	add	x3, x3, #0x0
    e364:	mov	w2, #0xc52                 	// #3154
    e368:	bl	0 <__assert_fail>

000000000000e36c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv>:
    e36c:	str	d8, [sp, #-112]!
    e370:	stp	x29, x30, [sp, #16]
    e374:	stp	x28, x27, [sp, #32]
    e378:	stp	x26, x25, [sp, #48]
    e37c:	stp	x24, x23, [sp, #64]
    e380:	stp	x22, x21, [sp, #80]
    e384:	stp	x20, x19, [sp, #96]
    e388:	mov	x29, sp
    e38c:	sub	sp, sp, #0x3b0
    e390:	mov	x26, x0
    e394:	ldr	x0, [x0, #16]
    e398:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e39c:	add	x1, x1, #0x0
    e3a0:	mov	w2, #0x7                   	// #7
    e3a4:	bl	0 <_ZNK4llvm6Module13getModuleFlagENS_9StringRefE>
    e3a8:	cbz	x0, e414 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xa8>
    e3ac:	ldrb	w8, [x0]
    e3b0:	cmp	w8, #0x1
    e3b4:	b.ne	10ba4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2838>  // b.any
    e3b8:	ldr	x8, [x0, #136]
    e3bc:	cbz	x8, 10bc4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2858>
    e3c0:	ldrb	w9, [x8, #16]
    e3c4:	cmp	w9, #0x11
    e3c8:	b.cs	10be4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2878>  // b.hs, b.nlast
    e3cc:	cmp	w9, #0xd
    e3d0:	b.ne	10c04 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2898>  // b.any
    e3d4:	ldr	w19, [x8, #32]
    e3d8:	add	x20, x8, #0x18
    e3dc:	cmp	w19, #0x40
    e3e0:	b.ls	e3fc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x90>  // b.plast
    e3e4:	mov	x0, x20
    e3e8:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    e3ec:	sub	w8, w19, w0
    e3f0:	cmp	w8, #0x41
    e3f4:	b.cs	10c24 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x28b8>  // b.hs, b.nlast
    e3f8:	ldr	x20, [x20]
    e3fc:	ldr	x8, [x20]
    e400:	mov	w9, #0x14                  	// #20
    e404:	cmp	x8, #0x0
    e408:	mov	w8, #0x18                  	// #24
    e40c:	csel	w1, w8, w9, eq  // eq = none
    e410:	b	e418 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xac>
    e414:	mov	w1, #0x14                  	// #20
    e418:	ldr	x0, [x26]
    e41c:	mov	w2, #0x4                   	// #4
    e420:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e424:	ldr	x0, [x26]
    e428:	mov	w8, #0x8                   	// #8
    e42c:	sub	x19, x29, #0xa0
    e430:	mov	w20, #0x1                   	// #1
    e434:	add	x2, sp, #0x70
    e438:	mov	w1, #0xa                   	// #10
    e43c:	mov	w3, wzr
    e440:	stur	x8, [x29, #-160]
    e444:	stp	x19, x20, [sp, #112]
    e448:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e44c:	ldr	x8, [x26, #584]
    e450:	ldr	x0, [x26]
    e454:	add	x2, sp, #0x70
    e458:	mov	w1, #0x14                  	// #20
    e45c:	ldrb	w8, [x8, #229]
    e460:	mov	w3, wzr
    e464:	stp	x19, x20, [sp, #112]
    e468:	lsl	x8, x8, #3
    e46c:	stur	x8, [x29, #-160]
    e470:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e474:	ldr	x8, [x26, #584]
    e478:	ldr	x9, [x8, #24]
    e47c:	add	x8, x8, #0x8
    e480:	cmp	x9, x8
    e484:	b.eq	e830 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x4c4>  // b.none
    e488:	ldr	x20, [x26, #616]
    e48c:	add	x25, x26, #0x258
    e490:	cmp	x20, x25
    e494:	b.eq	e4dc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x170>  // b.none
    e498:	sub	x21, x29, #0xa0
    e49c:	mov	w22, #0x2                   	// #2
    e4a0:	ldr	w8, [x20, #40]
    e4a4:	ldr	x0, [x26]
    e4a8:	add	x2, sp, #0x70
    e4ac:	mov	w1, #0x10                  	// #16
    e4b0:	stur	x8, [x29, #-160]
    e4b4:	ldr	x8, [x20, #32]
    e4b8:	mov	w3, wzr
    e4bc:	stp	x21, x22, [sp, #112]
    e4c0:	stur	x8, [x29, #-152]
    e4c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e4c8:	mov	x0, x20
    e4cc:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    e4d0:	mov	x20, x0
    e4d4:	cmp	x0, x25
    e4d8:	b.ne	e4a0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x134>  // b.any
    e4dc:	mov	w0, #0x220                 	// #544
    e4e0:	bl	0 <_Znwm>
    e4e4:	adrp	x23, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e4e8:	ldr	x23, [x23]
    e4ec:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e4f0:	ldr	d8, [x8]
    e4f4:	movi	v0.2s, #0x1
    e4f8:	add	x10, x23, #0x10
    e4fc:	str	x10, [x0]
    e500:	ldr	w8, [sp, #112]
    e504:	ldur	w10, [sp, #115]
    e508:	str	d0, [x0, #8]
    e50c:	movi	v0.2d, #0x0
    e510:	mov	x22, x0
    e514:	mov	x21, x0
    e518:	mov	x24, x0
    e51c:	mov	w9, #0x2                   	// #2
    e520:	stp	q0, q0, [x0, #48]
    e524:	stp	q0, q0, [x0, #80]
    e528:	stp	q0, q0, [x0, #112]
    e52c:	stp	q0, q0, [x0, #144]
    e530:	stp	q0, q0, [x0, #176]
    e534:	stp	q0, q0, [x0, #208]
    e538:	stp	q0, q0, [x0, #240]
    e53c:	stp	q0, q0, [x0, #272]
    e540:	stp	q0, q0, [x0, #304]
    e544:	stp	q0, q0, [x0, #336]
    e548:	stp	q0, q0, [x0, #368]
    e54c:	stp	q0, q0, [x0, #400]
    e550:	stp	q0, q0, [x0, #432]
    e554:	stp	q0, q0, [x0, #464]
    e558:	stp	q0, q0, [x0, #496]
    e55c:	str	q0, [x22, #32]!
    e560:	str	q0, [x0, #528]
    e564:	str	x22, [x21, #16]!
    e568:	str	d8, [x24, #24]!
    e56c:	str	x9, [x22]
    e570:	mov	w9, #0xff                  	// #255
    e574:	strb	w9, [x0, #40]
    e578:	str	w10, [x0, #44]
    e57c:	stur	w8, [x0, #41]
    e580:	ldr	w8, [x24]
    e584:	ldr	w9, [x0, #28]
    e588:	cmp	w8, w9
    e58c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e590:	add	w8, w8, #0x1
    e594:	mov	x20, x0
    e598:	cmp	w8, w9
    e59c:	str	w8, [x24]
    e5a0:	b.cs	105dc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2270>  // b.hs, b.nlast
    e5a4:	ldr	x9, [x20, #16]
    e5a8:	mov	w10, #0x8                   	// #8
    e5ac:	mov	w11, #0x4                   	// #4
    e5b0:	add	x8, x9, w8, uxtw #4
    e5b4:	str	x10, [x8]
    e5b8:	strb	w11, [x8, #8]
    e5bc:	ldur	w9, [sp, #115]
    e5c0:	ldr	w10, [sp, #112]
    e5c4:	str	w9, [x8, #12]
    e5c8:	stur	w10, [x8, #9]
    e5cc:	ldp	w8, w9, [x20, #24]
    e5d0:	cmp	w8, w9
    e5d4:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e5d8:	add	w8, w8, #0x1
    e5dc:	cmp	w8, w9
    e5e0:	str	w8, [x24]
    e5e4:	b.cs	105f8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x228c>  // b.hs, b.nlast
    e5e8:	ldr	x9, [x20, #16]
    e5ec:	mov	w10, #0x6                   	// #6
    e5f0:	mov	w11, #0x4                   	// #4
    e5f4:	add	x8, x9, w8, uxtw #4
    e5f8:	str	x10, [x8]
    e5fc:	strb	w11, [x8, #8]
    e600:	ldur	w9, [sp, #115]
    e604:	ldr	w10, [sp, #112]
    e608:	str	w9, [x8, #12]
    e60c:	stur	w10, [x8, #9]
    e610:	ldp	w8, w9, [x20, #24]
    e614:	cmp	w8, w9
    e618:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e61c:	add	w8, w8, #0x1
    e620:	cmp	w8, w9
    e624:	str	w8, [x24]
    e628:	b.cs	10614 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x22a8>  // b.hs, b.nlast
    e62c:	ldr	x9, [x20, #16]
    e630:	mov	w10, #0x8                   	// #8
    e634:	mov	w11, #0x4                   	// #4
    e638:	add	x8, x9, w8, uxtw #4
    e63c:	str	x10, [x8]
    e640:	strb	w11, [x8, #8]
    e644:	ldur	w9, [sp, #115]
    e648:	ldr	w10, [sp, #112]
    e64c:	str	w9, [x8, #12]
    e650:	stur	w10, [x8, #9]
    e654:	ldp	w8, w9, [x20, #24]
    e658:	cmp	w8, w9
    e65c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e660:	add	w8, w8, #0x1
    e664:	cmp	w8, w9
    e668:	str	w8, [x24]
    e66c:	b.cs	10630 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x22c4>  // b.hs, b.nlast
    e670:	ldr	x9, [x20, #16]
    e674:	mov	w10, #0x4                   	// #4
    e678:	add	x8, x9, w8, uxtw #4
    e67c:	str	x10, [x8]
    e680:	strb	w10, [x8, #8]
    e684:	ldur	w9, [sp, #115]
    e688:	ldr	w10, [sp, #112]
    e68c:	str	w9, [x8, #12]
    e690:	stur	w10, [x8, #9]
    e694:	ldp	w8, w9, [x20, #24]
    e698:	cmp	w8, w9
    e69c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e6a0:	add	w8, w8, #0x1
    e6a4:	cmp	w8, w9
    e6a8:	str	w8, [x24]
    e6ac:	b.cs	1064c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x22e0>  // b.hs, b.nlast
    e6b0:	ldr	x9, [x20, #16]
    e6b4:	mov	w10, #0x4                   	// #4
    e6b8:	add	x8, x9, w8, uxtw #4
    e6bc:	str	x10, [x8]
    e6c0:	strb	w10, [x8, #8]
    e6c4:	ldur	w9, [sp, #115]
    e6c8:	ldr	w10, [sp, #112]
    e6cc:	str	w9, [x8, #12]
    e6d0:	stur	w10, [x8, #9]
    e6d4:	ldp	w8, w9, [x20, #24]
    e6d8:	cmp	w8, w9
    e6dc:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e6e0:	add	w8, w8, #0x1
    e6e4:	cmp	w8, w9
    e6e8:	str	w8, [x24]
    e6ec:	b.cs	10668 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x22fc>  // b.hs, b.nlast
    e6f0:	ldr	x9, [x20, #16]
    e6f4:	mov	w10, #0x4                   	// #4
    e6f8:	add	x8, x9, w8, uxtw #4
    e6fc:	str	x10, [x8]
    e700:	strb	w10, [x8, #8]
    e704:	ldur	w9, [sp, #115]
    e708:	ldr	w10, [sp, #112]
    e70c:	str	w9, [x8, #12]
    e710:	stur	w10, [x8, #9]
    e714:	ldp	w8, w9, [x20, #24]
    e718:	cmp	w8, w9
    e71c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e720:	add	w8, w8, #0x1
    e724:	cmp	w8, w9
    e728:	str	w8, [x24]
    e72c:	b.cs	10684 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2318>  // b.hs, b.nlast
    e730:	ldr	x9, [x20, #16]
    e734:	mov	w10, #0x4                   	// #4
    e738:	add	x8, x9, w8, uxtw #4
    e73c:	str	x10, [x8]
    e740:	strb	w10, [x8, #8]
    e744:	ldur	w9, [sp, #115]
    e748:	ldr	w10, [sp, #112]
    e74c:	str	w9, [x8, #12]
    e750:	stur	w10, [x8, #9]
    e754:	ldp	w8, w9, [x20, #24]
    e758:	cmp	w8, w9
    e75c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e760:	add	w8, w8, #0x1
    e764:	cmp	w8, w9
    e768:	str	w8, [x24]
    e76c:	b.cs	106a0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2334>  // b.hs, b.nlast
    e770:	ldr	x9, [x20, #16]
    e774:	mov	w10, #0x6                   	// #6
    e778:	add	x8, x9, w8, uxtw #4
    e77c:	str	xzr, [x8]
    e780:	strb	w10, [x8, #8]
    e784:	ldur	w9, [sp, #115]
    e788:	ldr	w10, [sp, #112]
    e78c:	str	w9, [x8, #12]
    e790:	stur	w10, [x8, #9]
    e794:	ldp	w8, w9, [x20, #24]
    e798:	cmp	w8, w9
    e79c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e7a0:	add	w8, w8, #0x1
    e7a4:	cmp	w8, w9
    e7a8:	str	w8, [x24]
    e7ac:	b.cs	106bc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2350>  // b.hs, b.nlast
    e7b0:	ldr	x9, [x20, #16]
    e7b4:	mov	w10, #0x8                   	// #8
    e7b8:	mov	w11, #0x4                   	// #4
    e7bc:	add	x8, x9, w8, uxtw #4
    e7c0:	str	x10, [x8]
    e7c4:	strb	w11, [x8, #8]
    e7c8:	ldur	w9, [sp, #115]
    e7cc:	ldr	w10, [sp, #112]
    e7d0:	str	w9, [x8, #12]
    e7d4:	stur	w10, [x8, #9]
    e7d8:	ldp	w8, w9, [x20, #24]
    e7dc:	cmp	w8, w9
    e7e0:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e7e4:	add	w8, w8, #0x1
    e7e8:	str	w8, [x20, #24]
    e7ec:	ldr	x22, [x26]
    e7f0:	mov	x1, x21
    e7f4:	stp	x21, x20, [x29, #-224]
    e7f8:	mov	x0, x22
    e7fc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e800:	ldp	x1, x8, [x22, #32]
    e804:	add	x21, x22, #0x18
    e808:	cmp	x1, x8
    e80c:	b.eq	e83c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x4d0>  // b.none
    e810:	str	xzr, [x1, #8]
    e814:	ldur	q0, [x29, #-224]
    e818:	add	x19, x1, #0x10
    e81c:	stur	xzr, [x29, #-216]
    e820:	str	q0, [x1]
    e824:	stur	xzr, [x29, #-224]
    e828:	str	x19, [x22, #32]
    e82c:	b	e84c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x4e0>
    e830:	ldr	x0, [x26]
    e834:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e838:	b	10528 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x21bc>
    e83c:	sub	x2, x29, #0xe0
    e840:	mov	x0, x21
    e844:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e848:	ldr	x19, [x22, #32]
    e84c:	adrp	x28, 0 <__pthread_key_create>
    e850:	ldur	x20, [x29, #-216]
    e854:	ldr	x27, [x21]
    e858:	ldr	x28, [x28]
    e85c:	cbz	x20, e8d8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x56c>
    e860:	add	x8, x20, #0x8
    e864:	cbz	x28, e884 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x518>
    e868:	ldaxr	w9, [x8]
    e86c:	sub	w10, w9, #0x1
    e870:	stlxr	w11, w10, [x8]
    e874:	cbnz	w11, e868 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x4fc>
    e878:	cmp	w9, #0x1
    e87c:	b.eq	e898 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x52c>  // b.none
    e880:	b	e8d8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x56c>
    e884:	ldr	w9, [x8]
    e888:	sub	w10, w9, #0x1
    e88c:	str	w10, [x8]
    e890:	cmp	w9, #0x1
    e894:	b.ne	e8d8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x56c>  // b.any
    e898:	mov	x21, x20
    e89c:	ldr	x8, [x21], #12
    e8a0:	mov	x0, x20
    e8a4:	ldr	x8, [x8, #16]
    e8a8:	blr	x8
    e8ac:	cbz	x28, 1054c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x21e0>
    e8b0:	ldaxr	w8, [x21]
    e8b4:	sub	w9, w8, #0x1
    e8b8:	stlxr	w10, w9, [x21]
    e8bc:	cbnz	w10, e8b0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x544>
    e8c0:	cmp	w8, #0x1
    e8c4:	b.ne	e8d8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x56c>  // b.any
    e8c8:	ldr	x8, [x20]
    e8cc:	mov	x0, x20
    e8d0:	ldr	x8, [x8, #24]
    e8d4:	blr	x8
    e8d8:	mov	w0, #0x220                 	// #544
    e8dc:	bl	0 <_Znwm>
    e8e0:	add	x8, x23, #0x10
    e8e4:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    e8e8:	movi	v0.2s, #0x1
    e8ec:	str	x8, [x0]
    e8f0:	ldrb	w8, [x9]
    e8f4:	str	d0, [x0, #8]
    e8f8:	movi	v0.2d, #0x0
    e8fc:	mov	x22, x0
    e900:	stp	q0, q0, [x0, #48]
    e904:	stp	q0, q0, [x0, #80]
    e908:	stp	q0, q0, [x0, #112]
    e90c:	stp	q0, q0, [x0, #144]
    e910:	stp	q0, q0, [x0, #176]
    e914:	stp	q0, q0, [x0, #208]
    e918:	stp	q0, q0, [x0, #240]
    e91c:	stp	q0, q0, [x0, #272]
    e920:	stp	q0, q0, [x0, #304]
    e924:	stp	q0, q0, [x0, #336]
    e928:	stp	q0, q0, [x0, #368]
    e92c:	stp	q0, q0, [x0, #400]
    e930:	stp	q0, q0, [x0, #432]
    e934:	stp	q0, q0, [x0, #464]
    e938:	stp	q0, q0, [x0, #496]
    e93c:	str	q0, [x22, #32]!
    e940:	mov	x21, x0
    e944:	mov	x24, x0
    e948:	mov	x20, x0
    e94c:	str	q0, [x0, #528]
    e950:	str	x22, [x21, #16]!
    e954:	str	d8, [x24, #24]!
    e958:	cbz	w8, e964 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x5f8>
    e95c:	mov	w10, #0x13                  	// #19
    e960:	b	e968 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x5fc>
    e964:	mov	w10, #0x1                   	// #1
    e968:	ldp	w8, w9, [x20, #24]
    e96c:	ldr	w12, [sp, #112]
    e970:	ldur	w13, [sp, #115]
    e974:	mov	w11, #0xff                  	// #255
    e978:	cmp	w8, w9
    e97c:	str	x10, [x20, #32]
    e980:	strb	w11, [x20, #40]
    e984:	str	w13, [x20, #44]
    e988:	stur	w12, [x20, #41]
    e98c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e990:	add	w8, w8, #0x1
    e994:	cmp	w8, w9
    e998:	str	w8, [x24]
    e99c:	b.cs	106d8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x236c>  // b.hs, b.nlast
    e9a0:	ldr	x9, [x20, #16]
    e9a4:	mov	w10, #0x8                   	// #8
    e9a8:	mov	w11, #0x4                   	// #4
    e9ac:	add	x8, x9, w8, uxtw #4
    e9b0:	str	x10, [x8]
    e9b4:	strb	w11, [x8, #8]
    e9b8:	ldur	w9, [sp, #115]
    e9bc:	ldr	w10, [sp, #112]
    e9c0:	str	w9, [x8, #12]
    e9c4:	stur	w10, [x8, #9]
    e9c8:	ldp	w8, w9, [x20, #24]
    e9cc:	cmp	w8, w9
    e9d0:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    e9d4:	add	w8, w8, #0x1
    e9d8:	cmp	w8, w9
    e9dc:	str	w8, [x24]
    e9e0:	b.cs	106f4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2388>  // b.hs, b.nlast
    e9e4:	ldr	x9, [x20, #16]
    e9e8:	mov	w10, #0x6                   	// #6
    e9ec:	mov	w11, #0x4                   	// #4
    e9f0:	add	x8, x9, w8, uxtw #4
    e9f4:	str	x10, [x8]
    e9f8:	strb	w11, [x8, #8]
    e9fc:	ldur	w9, [sp, #115]
    ea00:	ldr	w10, [sp, #112]
    ea04:	str	w9, [x8, #12]
    ea08:	stur	w10, [x8, #9]
    ea0c:	ldp	w8, w9, [x20, #24]
    ea10:	cmp	w8, w9
    ea14:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    ea18:	add	w8, w8, #0x1
    ea1c:	cmp	w8, w9
    ea20:	str	w8, [x24]
    ea24:	b.cs	10710 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x23a4>  // b.hs, b.nlast
    ea28:	ldr	x9, [x20, #16]
    ea2c:	mov	w10, #0x8                   	// #8
    ea30:	mov	w11, #0x4                   	// #4
    ea34:	add	x8, x9, w8, uxtw #4
    ea38:	str	x10, [x8]
    ea3c:	strb	w11, [x8, #8]
    ea40:	ldur	w9, [sp, #115]
    ea44:	ldr	w10, [sp, #112]
    ea48:	str	w9, [x8, #12]
    ea4c:	stur	w10, [x8, #9]
    ea50:	ldp	w8, w9, [x20, #24]
    ea54:	cmp	w8, w9
    ea58:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    ea5c:	add	w8, w8, #0x1
    ea60:	cmp	w8, w9
    ea64:	str	w8, [x24]
    ea68:	b.cs	1072c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x23c0>  // b.hs, b.nlast
    ea6c:	ldr	x9, [x20, #16]
    ea70:	mov	w10, #0x4                   	// #4
    ea74:	add	x8, x9, w8, uxtw #4
    ea78:	str	x10, [x8]
    ea7c:	strb	w10, [x8, #8]
    ea80:	ldur	w9, [sp, #115]
    ea84:	ldr	w10, [sp, #112]
    ea88:	str	w9, [x8, #12]
    ea8c:	stur	w10, [x8, #9]
    ea90:	ldp	w8, w9, [x20, #24]
    ea94:	cmp	w8, w9
    ea98:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    ea9c:	add	w8, w8, #0x1
    eaa0:	cmp	w8, w9
    eaa4:	str	w8, [x24]
    eaa8:	b.cs	10748 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x23dc>  // b.hs, b.nlast
    eaac:	ldr	x9, [x20, #16]
    eab0:	mov	w10, #0x4                   	// #4
    eab4:	add	x8, x9, w8, uxtw #4
    eab8:	str	x10, [x8]
    eabc:	strb	w10, [x8, #8]
    eac0:	ldur	w9, [sp, #115]
    eac4:	ldr	w10, [sp, #112]
    eac8:	str	w9, [x8, #12]
    eacc:	stur	w10, [x8, #9]
    ead0:	ldp	w8, w9, [x20, #24]
    ead4:	cmp	w8, w9
    ead8:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    eadc:	add	w8, w8, #0x1
    eae0:	cmp	w8, w9
    eae4:	str	w8, [x24]
    eae8:	b.cs	10764 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x23f8>  // b.hs, b.nlast
    eaec:	ldr	x9, [x20, #16]
    eaf0:	mov	w10, #0x4                   	// #4
    eaf4:	add	x8, x9, w8, uxtw #4
    eaf8:	str	x10, [x8]
    eafc:	strb	w10, [x8, #8]
    eb00:	ldur	w9, [sp, #115]
    eb04:	ldr	w10, [sp, #112]
    eb08:	str	w9, [x8, #12]
    eb0c:	stur	w10, [x8, #9]
    eb10:	ldp	w8, w9, [x20, #24]
    eb14:	cmp	w8, w9
    eb18:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    eb1c:	add	w8, w8, #0x1
    eb20:	cmp	w8, w9
    eb24:	str	w8, [x24]
    eb28:	b.cs	10780 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2414>  // b.hs, b.nlast
    eb2c:	ldr	x9, [x20, #16]
    eb30:	mov	w10, #0x4                   	// #4
    eb34:	add	x8, x9, w8, uxtw #4
    eb38:	str	x10, [x8]
    eb3c:	strb	w10, [x8, #8]
    eb40:	ldur	w9, [sp, #115]
    eb44:	ldr	w10, [sp, #112]
    eb48:	str	w9, [x8, #12]
    eb4c:	stur	w10, [x8, #9]
    eb50:	ldp	w8, w9, [x20, #24]
    eb54:	cmp	w8, w9
    eb58:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    eb5c:	add	w8, w8, #0x1
    eb60:	cmp	w8, w9
    eb64:	str	w8, [x24]
    eb68:	b.cs	1079c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2430>  // b.hs, b.nlast
    eb6c:	ldr	x9, [x20, #16]
    eb70:	mov	w10, #0x6                   	// #6
    eb74:	add	x8, x9, w8, uxtw #4
    eb78:	str	xzr, [x8]
    eb7c:	strb	w10, [x8, #8]
    eb80:	ldur	w9, [sp, #115]
    eb84:	ldr	w10, [sp, #112]
    eb88:	str	w9, [x8, #12]
    eb8c:	stur	w10, [x8, #9]
    eb90:	ldp	w8, w9, [x20, #24]
    eb94:	cmp	w8, w9
    eb98:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    eb9c:	add	w8, w8, #0x1
    eba0:	cmp	w8, w9
    eba4:	str	w8, [x24]
    eba8:	b.cs	107b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x244c>  // b.hs, b.nlast
    ebac:	ldr	x9, [x20, #16]
    ebb0:	mov	w10, #0x8                   	// #8
    ebb4:	mov	w11, #0x4                   	// #4
    ebb8:	add	x8, x9, w8, uxtw #4
    ebbc:	str	x10, [x8]
    ebc0:	strb	w11, [x8, #8]
    ebc4:	ldur	w9, [sp, #115]
    ebc8:	ldr	w10, [sp, #112]
    ebcc:	str	w9, [x8, #12]
    ebd0:	stur	w10, [x8, #9]
    ebd4:	ldp	w8, w9, [x20, #24]
    ebd8:	cmp	w8, w9
    ebdc:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    ebe0:	add	w8, w8, #0x1
    ebe4:	str	w8, [x20, #24]
    ebe8:	ldr	x22, [x26]
    ebec:	mov	x1, x21
    ebf0:	stp	x21, x20, [x29, #-240]
    ebf4:	mov	x0, x22
    ebf8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ebfc:	ldp	x1, x8, [x22, #32]
    ec00:	add	x21, x22, #0x18
    ec04:	cmp	x1, x8
    ec08:	b.eq	ec2c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x8c0>  // b.none
    ec0c:	str	xzr, [x1, #8]
    ec10:	ldur	q0, [x29, #-240]
    ec14:	add	x24, x1, #0x10
    ec18:	stur	xzr, [x29, #-232]
    ec1c:	str	q0, [x1]
    ec20:	stur	xzr, [x29, #-240]
    ec24:	str	x24, [x22, #32]
    ec28:	b	ec3c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x8d0>
    ec2c:	sub	x2, x29, #0xf0
    ec30:	mov	x0, x21
    ec34:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ec38:	ldr	x24, [x22, #32]
    ec3c:	ldur	x20, [x29, #-232]
    ec40:	ldr	x8, [x21]
    ec44:	str	x8, [sp, #96]
    ec48:	cbz	x20, ecc4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x958>
    ec4c:	add	x8, x20, #0x8
    ec50:	cbz	x28, ec70 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x904>
    ec54:	ldaxr	w9, [x8]
    ec58:	sub	w10, w9, #0x1
    ec5c:	stlxr	w11, w10, [x8]
    ec60:	cbnz	w11, ec54 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x8e8>
    ec64:	cmp	w9, #0x1
    ec68:	b.eq	ec84 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x918>  // b.none
    ec6c:	b	ecc4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x958>
    ec70:	ldr	w9, [x8]
    ec74:	sub	w10, w9, #0x1
    ec78:	str	w10, [x8]
    ec7c:	cmp	w9, #0x1
    ec80:	b.ne	ecc4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x958>  // b.any
    ec84:	mov	x21, x20
    ec88:	ldr	x8, [x21], #12
    ec8c:	mov	x0, x20
    ec90:	ldr	x8, [x8, #16]
    ec94:	blr	x8
    ec98:	cbz	x28, 10564 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x21f8>
    ec9c:	ldaxr	w8, [x21]
    eca0:	sub	w9, w8, #0x1
    eca4:	stlxr	w10, w9, [x21]
    eca8:	cbnz	w10, ec9c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x930>
    ecac:	cmp	w8, #0x1
    ecb0:	b.ne	ecc4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x958>  // b.any
    ecb4:	ldr	x8, [x20]
    ecb8:	mov	x0, x20
    ecbc:	ldr	x8, [x8, #24]
    ecc0:	blr	x8
    ecc4:	mov	w0, #0x220                 	// #544
    ecc8:	bl	0 <_Znwm>
    eccc:	movi	v0.2s, #0x1
    ecd0:	add	x8, x23, #0x10
    ecd4:	str	d0, [x0, #8]
    ecd8:	movi	v0.2d, #0x0
    ecdc:	mov	x22, x0
    ece0:	mov	x21, x0
    ece4:	mov	w9, #0x3                   	// #3
    ece8:	str	x8, [x0]
    ecec:	stp	q0, q0, [x0, #48]
    ecf0:	stp	q0, q0, [x0, #80]
    ecf4:	stp	q0, q0, [x0, #112]
    ecf8:	stp	q0, q0, [x0, #144]
    ecfc:	stp	q0, q0, [x0, #176]
    ed00:	stp	q0, q0, [x0, #208]
    ed04:	stp	q0, q0, [x0, #240]
    ed08:	stp	q0, q0, [x0, #272]
    ed0c:	stp	q0, q0, [x0, #304]
    ed10:	stp	q0, q0, [x0, #336]
    ed14:	stp	q0, q0, [x0, #368]
    ed18:	stp	q0, q0, [x0, #400]
    ed1c:	stp	q0, q0, [x0, #432]
    ed20:	stp	q0, q0, [x0, #464]
    ed24:	stp	q0, q0, [x0, #496]
    ed28:	str	q0, [x22, #32]!
    ed2c:	str	q0, [x0, #528]
    ed30:	str	x22, [x21, #16]!
    ed34:	str	d8, [x0, #24]
    ed38:	str	x9, [x22]
    ed3c:	ldp	w8, w9, [x0, #24]
    ed40:	ldur	w11, [sp, #115]
    ed44:	ldr	w12, [sp, #112]
    ed48:	mov	w10, #0xff                  	// #255
    ed4c:	cmp	w8, w9
    ed50:	strb	w10, [x0, #40]
    ed54:	str	w11, [x0, #44]
    ed58:	stur	w12, [x0, #41]
    ed5c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    ed60:	add	w8, w8, #0x1
    ed64:	mov	x20, x0
    ed68:	cmp	w8, w9
    ed6c:	str	w8, [x0, #24]
    ed70:	b.cs	107d4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2468>  // b.hs, b.nlast
    ed74:	ldr	x9, [x20, #16]
    ed78:	mov	w10, #0x8                   	// #8
    ed7c:	mov	w11, #0x4                   	// #4
    ed80:	add	x8, x9, w8, uxtw #4
    ed84:	str	x10, [x8]
    ed88:	strb	w11, [x8, #8]
    ed8c:	ldur	w9, [sp, #115]
    ed90:	ldr	w10, [sp, #112]
    ed94:	str	w9, [x8, #12]
    ed98:	stur	w10, [x8, #9]
    ed9c:	ldp	w8, w9, [x20, #24]
    eda0:	cmp	w8, w9
    eda4:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    eda8:	add	w8, w8, #0x1
    edac:	cmp	w8, w9
    edb0:	str	w8, [x20, #24]
    edb4:	b.cs	107f0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2484>  // b.hs, b.nlast
    edb8:	ldr	x9, [x20, #16]
    edbc:	mov	w10, #0x6                   	// #6
    edc0:	mov	w11, #0x4                   	// #4
    edc4:	add	x8, x9, w8, uxtw #4
    edc8:	str	x10, [x8]
    edcc:	strb	w11, [x8, #8]
    edd0:	ldur	w9, [sp, #115]
    edd4:	ldr	w10, [sp, #112]
    edd8:	str	w9, [x8, #12]
    eddc:	stur	w10, [x8, #9]
    ede0:	ldp	w8, w9, [x20, #24]
    ede4:	cmp	w8, w9
    ede8:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    edec:	add	w8, w8, #0x1
    edf0:	cmp	w8, w9
    edf4:	str	w8, [x20, #24]
    edf8:	b.cs	1080c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x24a0>  // b.hs, b.nlast
    edfc:	ldr	x9, [x20, #16]
    ee00:	mov	w10, #0x6                   	// #6
    ee04:	add	x8, x9, w8, uxtw #4
    ee08:	str	xzr, [x8]
    ee0c:	strb	w10, [x8, #8]
    ee10:	ldur	w9, [sp, #115]
    ee14:	ldr	w10, [sp, #112]
    ee18:	str	w9, [x8, #12]
    ee1c:	stur	w10, [x8, #9]
    ee20:	ldp	w8, w9, [x20, #24]
    ee24:	cmp	w8, w9
    ee28:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    ee2c:	add	w8, w8, #0x1
    ee30:	cmp	w8, w9
    ee34:	str	w8, [x20, #24]
    ee38:	b.cs	10828 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x24bc>  // b.hs, b.nlast
    ee3c:	ldr	x9, [x20, #16]
    ee40:	mov	w10, #0x8                   	// #8
    ee44:	mov	w11, #0x4                   	// #4
    ee48:	add	x8, x9, w8, uxtw #4
    ee4c:	str	x10, [x8]
    ee50:	strb	w11, [x8, #8]
    ee54:	ldur	w9, [sp, #115]
    ee58:	ldr	w10, [sp, #112]
    ee5c:	str	w9, [x8, #12]
    ee60:	stur	w10, [x8, #9]
    ee64:	ldp	w8, w9, [x20, #24]
    ee68:	cmp	w8, w9
    ee6c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    ee70:	add	w8, w8, #0x1
    ee74:	str	w8, [x20, #24]
    ee78:	ldr	x22, [x26]
    ee7c:	mov	x1, x21
    ee80:	stp	x21, x20, [x29, #-256]
    ee84:	mov	x0, x22
    ee88:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    ee8c:	ldp	x1, x8, [x22, #32]
    ee90:	add	x21, x22, #0x18
    ee94:	cmp	x1, x8
    ee98:	b.eq	eec0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xb54>  // b.none
    ee9c:	str	xzr, [x1, #8]
    eea0:	ldur	q0, [x29, #-256]
    eea4:	add	x8, x1, #0x10
    eea8:	stur	xzr, [x29, #-248]
    eeac:	str	x8, [sp, #72]
    eeb0:	str	q0, [x1]
    eeb4:	stur	xzr, [x29, #-256]
    eeb8:	str	x8, [x22, #32]
    eebc:	b	eed4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xb68>
    eec0:	sub	x2, x29, #0x100
    eec4:	mov	x0, x21
    eec8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    eecc:	ldr	x8, [x22, #32]
    eed0:	str	x8, [sp, #72]
    eed4:	ldur	x20, [x29, #-248]
    eed8:	ldr	x8, [x21]
    eedc:	str	x8, [sp, #64]
    eee0:	cbz	x20, ef5c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbf0>
    eee4:	add	x8, x20, #0x8
    eee8:	cbz	x28, ef08 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xb9c>
    eeec:	ldaxr	w9, [x8]
    eef0:	sub	w10, w9, #0x1
    eef4:	stlxr	w11, w10, [x8]
    eef8:	cbnz	w11, eeec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xb80>
    eefc:	cmp	w9, #0x1
    ef00:	b.eq	ef1c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbb0>  // b.none
    ef04:	b	ef5c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbf0>
    ef08:	ldr	w9, [x8]
    ef0c:	sub	w10, w9, #0x1
    ef10:	str	w10, [x8]
    ef14:	cmp	w9, #0x1
    ef18:	b.ne	ef5c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbf0>  // b.any
    ef1c:	mov	x21, x20
    ef20:	ldr	x8, [x21], #12
    ef24:	mov	x0, x20
    ef28:	ldr	x8, [x8, #16]
    ef2c:	blr	x8
    ef30:	cbz	x28, 1057c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2210>
    ef34:	ldaxr	w8, [x21]
    ef38:	sub	w9, w8, #0x1
    ef3c:	stlxr	w10, w9, [x21]
    ef40:	cbnz	w10, ef34 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbc8>
    ef44:	cmp	w8, #0x1
    ef48:	b.ne	ef5c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbf0>  // b.any
    ef4c:	ldr	x8, [x20]
    ef50:	mov	x0, x20
    ef54:	ldr	x8, [x8, #24]
    ef58:	blr	x8
    ef5c:	mov	w0, #0x220                 	// #544
    ef60:	bl	0 <_Znwm>
    ef64:	movi	v0.2s, #0x1
    ef68:	add	x8, x23, #0x10
    ef6c:	str	d0, [x0, #8]
    ef70:	movi	v0.2d, #0x0
    ef74:	mov	x22, x0
    ef78:	mov	x21, x0
    ef7c:	mov	w9, #0x17                  	// #23
    ef80:	str	x8, [x0]
    ef84:	stp	q0, q0, [x0, #48]
    ef88:	stp	q0, q0, [x0, #80]
    ef8c:	stp	q0, q0, [x0, #112]
    ef90:	stp	q0, q0, [x0, #144]
    ef94:	stp	q0, q0, [x0, #176]
    ef98:	stp	q0, q0, [x0, #208]
    ef9c:	stp	q0, q0, [x0, #240]
    efa0:	stp	q0, q0, [x0, #272]
    efa4:	stp	q0, q0, [x0, #304]
    efa8:	stp	q0, q0, [x0, #336]
    efac:	stp	q0, q0, [x0, #368]
    efb0:	stp	q0, q0, [x0, #400]
    efb4:	stp	q0, q0, [x0, #432]
    efb8:	stp	q0, q0, [x0, #464]
    efbc:	stp	q0, q0, [x0, #496]
    efc0:	str	q0, [x22, #32]!
    efc4:	str	q0, [x0, #528]
    efc8:	str	x22, [x21, #16]!
    efcc:	str	d8, [x0, #24]
    efd0:	str	x9, [x22]
    efd4:	ldp	w8, w9, [x0, #24]
    efd8:	ldur	w11, [sp, #115]
    efdc:	ldr	w12, [sp, #112]
    efe0:	mov	w10, #0xff                  	// #255
    efe4:	cmp	w8, w9
    efe8:	strb	w10, [x0, #40]
    efec:	str	w11, [x0, #44]
    eff0:	stur	w12, [x0, #41]
    eff4:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    eff8:	add	w8, w8, #0x1
    effc:	mov	x20, x0
    f000:	cmp	w8, w9
    f004:	str	w8, [x0, #24]
    f008:	b.cs	10844 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x24d8>  // b.hs, b.nlast
    f00c:	ldr	x9, [x20, #16]
    f010:	mov	w10, #0x8                   	// #8
    f014:	mov	w11, #0x4                   	// #4
    f018:	add	x8, x9, w8, uxtw #4
    f01c:	str	x10, [x8]
    f020:	strb	w11, [x8, #8]
    f024:	ldur	w9, [sp, #115]
    f028:	ldr	w10, [sp, #112]
    f02c:	str	w9, [x8, #12]
    f030:	stur	w10, [x8, #9]
    f034:	ldp	w8, w9, [x20, #24]
    f038:	cmp	w8, w9
    f03c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f040:	add	w8, w8, #0x1
    f044:	cmp	w8, w9
    f048:	str	w8, [x20, #24]
    f04c:	b.cs	10860 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x24f4>  // b.hs, b.nlast
    f050:	ldr	x9, [x20, #16]
    f054:	mov	w10, #0x6                   	// #6
    f058:	mov	w11, #0x4                   	// #4
    f05c:	add	x8, x9, w8, uxtw #4
    f060:	str	x10, [x8]
    f064:	strb	w11, [x8, #8]
    f068:	ldur	w9, [sp, #115]
    f06c:	ldr	w10, [sp, #112]
    f070:	str	w9, [x8, #12]
    f074:	stur	w10, [x8, #9]
    f078:	ldp	w8, w9, [x20, #24]
    f07c:	cmp	w8, w9
    f080:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f084:	add	w8, w8, #0x1
    f088:	cmp	w8, w9
    f08c:	str	w8, [x20, #24]
    f090:	b.cs	1087c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2510>  // b.hs, b.nlast
    f094:	ldr	x9, [x20, #16]
    f098:	mov	w10, #0x4                   	// #4
    f09c:	add	x8, x9, w8, uxtw #4
    f0a0:	str	x10, [x8]
    f0a4:	strb	w10, [x8, #8]
    f0a8:	ldur	w9, [sp, #115]
    f0ac:	ldr	w10, [sp, #112]
    f0b0:	str	w9, [x8, #12]
    f0b4:	stur	w10, [x8, #9]
    f0b8:	ldp	w8, w9, [x20, #24]
    f0bc:	cmp	w8, w9
    f0c0:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f0c4:	add	w8, w8, #0x1
    f0c8:	cmp	w8, w9
    f0cc:	str	w8, [x20, #24]
    f0d0:	b.cs	10898 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x252c>  // b.hs, b.nlast
    f0d4:	ldr	x9, [x20, #16]
    f0d8:	mov	w10, #0x6                   	// #6
    f0dc:	add	x8, x9, w8, uxtw #4
    f0e0:	str	xzr, [x8]
    f0e4:	strb	w10, [x8, #8]
    f0e8:	ldur	w9, [sp, #115]
    f0ec:	ldr	w10, [sp, #112]
    f0f0:	str	w9, [x8, #12]
    f0f4:	stur	w10, [x8, #9]
    f0f8:	ldp	w8, w9, [x20, #24]
    f0fc:	cmp	w8, w9
    f100:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f104:	add	w8, w8, #0x1
    f108:	cmp	w8, w9
    f10c:	str	w8, [x20, #24]
    f110:	b.cs	108b4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2548>  // b.hs, b.nlast
    f114:	ldr	x9, [x20, #16]
    f118:	mov	w10, #0x8                   	// #8
    f11c:	mov	w11, #0x4                   	// #4
    f120:	add	x8, x9, w8, uxtw #4
    f124:	str	x10, [x8]
    f128:	strb	w11, [x8, #8]
    f12c:	ldur	w9, [sp, #115]
    f130:	ldr	w10, [sp, #112]
    f134:	str	w9, [x8, #12]
    f138:	stur	w10, [x8, #9]
    f13c:	ldp	w8, w9, [x20, #24]
    f140:	cmp	w8, w9
    f144:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f148:	add	w8, w8, #0x1
    f14c:	str	w8, [x20, #24]
    f150:	ldr	x22, [x26]
    f154:	mov	x1, x21
    f158:	str	x21, [sp, #672]
    f15c:	str	x20, [sp, #680]
    f160:	mov	x0, x22
    f164:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f168:	ldp	x1, x8, [x22, #32]
    f16c:	add	x21, x22, #0x18
    f170:	cmp	x1, x8
    f174:	b.eq	f19c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe30>  // b.none
    f178:	str	xzr, [x1, #8]
    f17c:	ldr	q0, [sp, #672]
    f180:	add	x8, x1, #0x10
    f184:	str	xzr, [sp, #680]
    f188:	str	x8, [sp, #40]
    f18c:	str	q0, [x1]
    f190:	str	xzr, [sp, #672]
    f194:	str	x8, [x22, #32]
    f198:	b	f1b0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe44>
    f19c:	add	x2, sp, #0x2a0
    f1a0:	mov	x0, x21
    f1a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f1a8:	ldr	x8, [x22, #32]
    f1ac:	str	x8, [sp, #40]
    f1b0:	ldr	x20, [sp, #680]
    f1b4:	ldr	x8, [x21]
    f1b8:	str	x8, [sp, #32]
    f1bc:	cbz	x20, f238 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xecc>
    f1c0:	add	x8, x20, #0x8
    f1c4:	cbz	x28, f1e4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe78>
    f1c8:	ldaxr	w9, [x8]
    f1cc:	sub	w10, w9, #0x1
    f1d0:	stlxr	w11, w10, [x8]
    f1d4:	cbnz	w11, f1c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe5c>
    f1d8:	cmp	w9, #0x1
    f1dc:	b.eq	f1f8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xe8c>  // b.none
    f1e0:	b	f238 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xecc>
    f1e4:	ldr	w9, [x8]
    f1e8:	sub	w10, w9, #0x1
    f1ec:	str	w10, [x8]
    f1f0:	cmp	w9, #0x1
    f1f4:	b.ne	f238 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xecc>  // b.any
    f1f8:	mov	x21, x20
    f1fc:	ldr	x8, [x21], #12
    f200:	mov	x0, x20
    f204:	ldr	x8, [x8, #16]
    f208:	blr	x8
    f20c:	cbz	x28, 10594 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2228>
    f210:	ldaxr	w8, [x21]
    f214:	sub	w9, w8, #0x1
    f218:	stlxr	w10, w9, [x21]
    f21c:	cbnz	w10, f210 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xea4>
    f220:	cmp	w8, #0x1
    f224:	b.ne	f238 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xecc>  // b.any
    f228:	ldr	x8, [x20]
    f22c:	mov	x0, x20
    f230:	ldr	x8, [x8, #24]
    f234:	blr	x8
    f238:	mov	w0, #0x220                 	// #544
    f23c:	bl	0 <_Znwm>
    f240:	movi	v0.2s, #0x1
    f244:	add	x8, x23, #0x10
    f248:	str	d0, [x0, #8]
    f24c:	movi	v0.2d, #0x0
    f250:	mov	x22, x0
    f254:	mov	x21, x0
    f258:	mov	w9, #0x7                   	// #7
    f25c:	str	x8, [x0]
    f260:	stp	q0, q0, [x0, #48]
    f264:	stp	q0, q0, [x0, #80]
    f268:	stp	q0, q0, [x0, #112]
    f26c:	stp	q0, q0, [x0, #144]
    f270:	stp	q0, q0, [x0, #176]
    f274:	stp	q0, q0, [x0, #208]
    f278:	stp	q0, q0, [x0, #240]
    f27c:	stp	q0, q0, [x0, #272]
    f280:	stp	q0, q0, [x0, #304]
    f284:	stp	q0, q0, [x0, #336]
    f288:	stp	q0, q0, [x0, #368]
    f28c:	stp	q0, q0, [x0, #400]
    f290:	stp	q0, q0, [x0, #432]
    f294:	stp	q0, q0, [x0, #464]
    f298:	stp	q0, q0, [x0, #496]
    f29c:	str	q0, [x22, #32]!
    f2a0:	str	q0, [x0, #528]
    f2a4:	str	x22, [x21, #16]!
    f2a8:	str	d8, [x0, #24]
    f2ac:	str	x9, [x22]
    f2b0:	ldp	w8, w9, [x0, #24]
    f2b4:	ldur	w11, [sp, #115]
    f2b8:	ldr	w12, [sp, #112]
    f2bc:	mov	w10, #0xff                  	// #255
    f2c0:	cmp	w8, w9
    f2c4:	strb	w10, [x0, #40]
    f2c8:	str	w11, [x0, #44]
    f2cc:	stur	w12, [x0, #41]
    f2d0:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f2d4:	add	w8, w8, #0x1
    f2d8:	mov	x20, x0
    f2dc:	cmp	w8, w9
    f2e0:	str	w8, [x0, #24]
    f2e4:	b.cs	108d0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2564>  // b.hs, b.nlast
    f2e8:	ldr	x9, [x20, #16]
    f2ec:	mov	w10, #0x8                   	// #8
    f2f0:	mov	w11, #0x4                   	// #4
    f2f4:	add	x8, x9, w8, uxtw #4
    f2f8:	str	x10, [x8]
    f2fc:	strb	w11, [x8, #8]
    f300:	ldur	w9, [sp, #115]
    f304:	ldr	w10, [sp, #112]
    f308:	str	w9, [x8, #12]
    f30c:	stur	w10, [x8, #9]
    f310:	ldp	w8, w9, [x20, #24]
    f314:	cmp	w8, w9
    f318:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f31c:	add	w8, w8, #0x1
    f320:	cmp	w8, w9
    f324:	str	w8, [x20, #24]
    f328:	b.cs	108ec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2580>  // b.hs, b.nlast
    f32c:	ldr	x9, [x20, #16]
    f330:	mov	w10, #0x6                   	// #6
    f334:	mov	w11, #0x4                   	// #4
    f338:	add	x8, x9, w8, uxtw #4
    f33c:	str	x10, [x8]
    f340:	strb	w11, [x8, #8]
    f344:	ldur	w9, [sp, #115]
    f348:	ldr	w10, [sp, #112]
    f34c:	str	w9, [x8, #12]
    f350:	stur	w10, [x8, #9]
    f354:	ldp	w8, w9, [x20, #24]
    f358:	cmp	w8, w9
    f35c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f360:	add	w8, w8, #0x1
    f364:	cmp	w8, w9
    f368:	str	w8, [x20, #24]
    f36c:	b.cs	10908 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x259c>  // b.hs, b.nlast
    f370:	ldr	x9, [x20, #16]
    f374:	mov	w10, #0x8                   	// #8
    f378:	mov	w11, #0x4                   	// #4
    f37c:	add	x8, x9, w8, uxtw #4
    f380:	str	x10, [x8]
    f384:	strb	w11, [x8, #8]
    f388:	ldur	w9, [sp, #115]
    f38c:	ldr	w10, [sp, #112]
    f390:	str	w9, [x8, #12]
    f394:	stur	w10, [x8, #9]
    f398:	ldp	w8, w9, [x20, #24]
    f39c:	cmp	w8, w9
    f3a0:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f3a4:	add	w8, w8, #0x1
    f3a8:	str	w8, [x20, #24]
    f3ac:	ldr	x22, [x26]
    f3b0:	mov	x1, x21
    f3b4:	str	x21, [sp, #656]
    f3b8:	str	x20, [sp, #664]
    f3bc:	mov	x0, x22
    f3c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f3c4:	ldp	x1, x8, [x22, #32]
    f3c8:	add	x21, x22, #0x18
    f3cc:	cmp	x1, x8
    f3d0:	b.eq	f3f8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x108c>  // b.none
    f3d4:	str	xzr, [x1, #8]
    f3d8:	ldr	q0, [sp, #656]
    f3dc:	add	x8, x1, #0x10
    f3e0:	str	xzr, [sp, #664]
    f3e4:	str	x8, [sp, #24]
    f3e8:	str	q0, [x1]
    f3ec:	str	xzr, [sp, #656]
    f3f0:	str	x8, [x22, #32]
    f3f4:	b	f40c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10a0>
    f3f8:	add	x2, sp, #0x290
    f3fc:	mov	x0, x21
    f400:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f404:	ldr	x8, [x22, #32]
    f408:	str	x8, [sp, #24]
    f40c:	ldr	x20, [sp, #664]
    f410:	ldr	x8, [x21]
    f414:	str	x8, [sp, #56]
    f418:	cbz	x20, f494 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1128>
    f41c:	add	x8, x20, #0x8
    f420:	cbz	x28, f440 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10d4>
    f424:	ldaxr	w9, [x8]
    f428:	sub	w10, w9, #0x1
    f42c:	stlxr	w11, w10, [x8]
    f430:	cbnz	w11, f424 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10b8>
    f434:	cmp	w9, #0x1
    f438:	b.eq	f454 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x10e8>  // b.none
    f43c:	b	f494 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1128>
    f440:	ldr	w9, [x8]
    f444:	sub	w10, w9, #0x1
    f448:	str	w10, [x8]
    f44c:	cmp	w9, #0x1
    f450:	b.ne	f494 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1128>  // b.any
    f454:	mov	x21, x20
    f458:	ldr	x8, [x21], #12
    f45c:	mov	x0, x20
    f460:	ldr	x8, [x8, #16]
    f464:	blr	x8
    f468:	cbz	x28, 105ac <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2240>
    f46c:	ldaxr	w8, [x21]
    f470:	sub	w9, w8, #0x1
    f474:	stlxr	w10, w9, [x21]
    f478:	cbnz	w10, f46c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1100>
    f47c:	cmp	w8, #0x1
    f480:	b.ne	f494 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1128>  // b.any
    f484:	ldr	x8, [x20]
    f488:	mov	x0, x20
    f48c:	ldr	x8, [x8, #24]
    f490:	blr	x8
    f494:	mov	w0, #0x220                 	// #544
    f498:	bl	0 <_Znwm>
    f49c:	movi	v0.2s, #0x1
    f4a0:	add	x8, x23, #0x10
    f4a4:	str	d0, [x0, #8]
    f4a8:	movi	v0.2d, #0x0
    f4ac:	mov	x22, x0
    f4b0:	mov	x21, x0
    f4b4:	mov	w9, #0x16                  	// #22
    f4b8:	str	x8, [x0]
    f4bc:	stp	q0, q0, [x0, #48]
    f4c0:	stp	q0, q0, [x0, #80]
    f4c4:	stp	q0, q0, [x0, #112]
    f4c8:	stp	q0, q0, [x0, #144]
    f4cc:	stp	q0, q0, [x0, #176]
    f4d0:	stp	q0, q0, [x0, #208]
    f4d4:	stp	q0, q0, [x0, #240]
    f4d8:	stp	q0, q0, [x0, #272]
    f4dc:	stp	q0, q0, [x0, #304]
    f4e0:	stp	q0, q0, [x0, #336]
    f4e4:	stp	q0, q0, [x0, #368]
    f4e8:	stp	q0, q0, [x0, #400]
    f4ec:	stp	q0, q0, [x0, #432]
    f4f0:	stp	q0, q0, [x0, #464]
    f4f4:	stp	q0, q0, [x0, #496]
    f4f8:	str	q0, [x22, #32]!
    f4fc:	str	q0, [x0, #528]
    f500:	str	x22, [x21, #16]!
    f504:	str	d8, [x0, #24]
    f508:	str	x9, [x22]
    f50c:	ldp	w8, w9, [x0, #24]
    f510:	ldur	w11, [sp, #115]
    f514:	ldr	w12, [sp, #112]
    f518:	mov	w10, #0xff                  	// #255
    f51c:	cmp	w8, w9
    f520:	strb	w10, [x0, #40]
    f524:	str	w11, [x0, #44]
    f528:	stur	w12, [x0, #41]
    f52c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f530:	add	w8, w8, #0x1
    f534:	mov	x20, x0
    f538:	cmp	w8, w9
    f53c:	str	w8, [x0, #24]
    f540:	b.cs	10924 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x25b8>  // b.hs, b.nlast
    f544:	ldr	x9, [x20, #16]
    f548:	mov	w10, #0x8                   	// #8
    f54c:	mov	w11, #0x4                   	// #4
    f550:	add	x8, x9, w8, uxtw #4
    f554:	str	x10, [x8]
    f558:	strb	w11, [x8, #8]
    f55c:	ldur	w9, [sp, #115]
    f560:	ldr	w10, [sp, #112]
    f564:	str	w9, [x8, #12]
    f568:	stur	w10, [x8, #9]
    f56c:	ldp	w8, w9, [x20, #24]
    f570:	cmp	w8, w9
    f574:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f578:	add	w8, w8, #0x1
    f57c:	cmp	w8, w9
    f580:	str	w8, [x20, #24]
    f584:	b.cs	10940 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x25d4>  // b.hs, b.nlast
    f588:	ldr	x9, [x20, #16]
    f58c:	mov	w10, #0x8                   	// #8
    f590:	mov	w11, #0x4                   	// #4
    f594:	add	x8, x9, w8, uxtw #4
    f598:	str	x10, [x8]
    f59c:	strb	w11, [x8, #8]
    f5a0:	ldur	w9, [sp, #115]
    f5a4:	ldr	w10, [sp, #112]
    f5a8:	str	w9, [x8, #12]
    f5ac:	stur	w10, [x8, #9]
    f5b0:	ldp	w8, w9, [x20, #24]
    f5b4:	cmp	w8, w9
    f5b8:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f5bc:	add	w8, w8, #0x1
    f5c0:	cmp	w8, w9
    f5c4:	str	w8, [x20, #24]
    f5c8:	b.cs	1095c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x25f0>  // b.hs, b.nlast
    f5cc:	ldr	x9, [x20, #16]
    f5d0:	mov	w10, #0x6                   	// #6
    f5d4:	add	x8, x9, w8, uxtw #4
    f5d8:	str	xzr, [x8]
    f5dc:	strb	w10, [x8, #8]
    f5e0:	ldur	w9, [sp, #115]
    f5e4:	ldr	w10, [sp, #112]
    f5e8:	str	w9, [x8, #12]
    f5ec:	stur	w10, [x8, #9]
    f5f0:	ldp	w8, w9, [x20, #24]
    f5f4:	cmp	w8, w9
    f5f8:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f5fc:	add	w8, w8, #0x1
    f600:	cmp	w8, w9
    f604:	str	w8, [x20, #24]
    f608:	b.cs	10978 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x260c>  // b.hs, b.nlast
    f60c:	ldr	x9, [x20, #16]
    f610:	mov	w10, #0x8                   	// #8
    f614:	mov	w11, #0x4                   	// #4
    f618:	add	x8, x9, w8, uxtw #4
    f61c:	str	x10, [x8]
    f620:	strb	w11, [x8, #8]
    f624:	ldur	w9, [sp, #115]
    f628:	ldr	w10, [sp, #112]
    f62c:	str	w9, [x8, #12]
    f630:	stur	w10, [x8, #9]
    f634:	ldp	w8, w9, [x20, #24]
    f638:	cmp	w8, w9
    f63c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f640:	add	w8, w8, #0x1
    f644:	str	w8, [x20, #24]
    f648:	ldr	x22, [x26]
    f64c:	mov	x1, x21
    f650:	str	x21, [sp, #640]
    f654:	str	x20, [sp, #648]
    f658:	mov	x0, x22
    f65c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f660:	ldp	x1, x8, [x22, #32]
    f664:	add	x21, x22, #0x18
    f668:	cmp	x1, x8
    f66c:	b.eq	f694 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1328>  // b.none
    f670:	str	xzr, [x1, #8]
    f674:	ldr	q0, [sp, #640]
    f678:	add	x8, x1, #0x10
    f67c:	str	xzr, [sp, #648]
    f680:	str	x8, [sp, #16]
    f684:	str	q0, [x1]
    f688:	str	xzr, [sp, #640]
    f68c:	str	x8, [x22, #32]
    f690:	b	f6a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x133c>
    f694:	add	x2, sp, #0x280
    f698:	mov	x0, x21
    f69c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f6a0:	ldr	x8, [x22, #32]
    f6a4:	str	x8, [sp, #16]
    f6a8:	ldr	x20, [sp, #648]
    f6ac:	ldr	x8, [x21]
    f6b0:	str	x8, [sp, #48]
    f6b4:	cbz	x20, f730 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x13c4>
    f6b8:	add	x8, x20, #0x8
    f6bc:	cbz	x28, f6dc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1370>
    f6c0:	ldaxr	w9, [x8]
    f6c4:	sub	w10, w9, #0x1
    f6c8:	stlxr	w11, w10, [x8]
    f6cc:	cbnz	w11, f6c0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1354>
    f6d0:	cmp	w9, #0x1
    f6d4:	b.eq	f6f0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1384>  // b.none
    f6d8:	b	f730 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x13c4>
    f6dc:	ldr	w9, [x8]
    f6e0:	sub	w10, w9, #0x1
    f6e4:	str	w10, [x8]
    f6e8:	cmp	w9, #0x1
    f6ec:	b.ne	f730 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x13c4>  // b.any
    f6f0:	mov	x21, x20
    f6f4:	ldr	x8, [x21], #12
    f6f8:	mov	x0, x20
    f6fc:	ldr	x8, [x8, #16]
    f700:	blr	x8
    f704:	cbz	x28, 105c4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2258>
    f708:	ldaxr	w8, [x21]
    f70c:	sub	w9, w8, #0x1
    f710:	stlxr	w10, w9, [x21]
    f714:	cbnz	w10, f708 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x139c>
    f718:	cmp	w8, #0x1
    f71c:	b.ne	f730 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x13c4>  // b.any
    f720:	ldr	x8, [x20]
    f724:	mov	x0, x20
    f728:	ldr	x8, [x8, #24]
    f72c:	blr	x8
    f730:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    f734:	ldr	d0, [x8]
    f738:	add	x8, sp, #0x70
    f73c:	add	x8, x8, #0x10
    f740:	str	x8, [sp, #112]
    f744:	str	d0, [sp, #120]
    f748:	str	x8, [sp, #8]
    f74c:	ldr	x8, [x26, #16]
    f750:	str	x26, [x29, #8]
    f754:	ldr	x28, [x8, #32]
    f758:	add	x9, x8, #0x18
    f75c:	str	x9, [sp, #104]
    f760:	cmp	x9, x28
    f764:	b.eq	fce4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1978>  // b.none
    f768:	mov	x8, x27
    f76c:	sub	x8, x19, x8
    f770:	str	x8, [sp, #88]
    f774:	ldr	x8, [sp, #96]
    f778:	add	x27, x26, #0x250
    f77c:	add	x21, x26, #0x18
    f780:	sub	x8, x24, x8
    f784:	str	x8, [sp, #80]
    f788:	sub	x8, x29, #0xd0
    f78c:	add	x8, x8, #0x10
    f790:	str	x8, [sp, #96]
    f794:	b	f7b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x144c>
    f798:	mov	x0, x22
    f79c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    f7a0:	ldr	x26, [x29, #8]
    f7a4:	tbz	w0, #0, 10a64 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x26f8>
    f7a8:	ldr	x28, [x28, #8]
    f7ac:	ldr	x8, [sp, #104]
    f7b0:	cmp	x8, x28
    f7b4:	b.eq	fce0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1974>  // b.none
    f7b8:	ldrb	w8, [x28]
    f7bc:	tbnz	w8, #2, 109f4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2688>
    f7c0:	sub	x8, x28, #0x38
    f7c4:	cmp	x28, #0x0
    f7c8:	csel	x22, xzr, x8, eq  // eq = none
    f7cc:	ldrb	w8, [x22, #23]
    f7d0:	tbz	w8, #5, 10a14 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x26a8>
    f7d4:	ldr	x26, [x26, #584]
    f7d8:	sub	x8, x29, #0xd0
    f7dc:	mov	x0, x22
    f7e0:	bl	0 <_ZNK4llvm11GlobalValue19getGlobalIdentifierB5cxx11Ev>
    f7e4:	ldp	x23, x24, [x29, #-208]
    f7e8:	sub	x0, x29, #0xa0
    f7ec:	bl	0 <_ZN4llvm3MD5C1Ev>
    f7f0:	sub	x0, x29, #0xa0
    f7f4:	mov	x1, x23
    f7f8:	mov	x2, x24
    f7fc:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
    f800:	sub	x0, x29, #0xa0
    f804:	sub	x1, x29, #0xb0
    f808:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
    f80c:	ldur	x0, [x29, #-208]
    f810:	ldr	x8, [sp, #96]
    f814:	ldur	x23, [x29, #-176]
    f818:	cmp	x0, x8
    f81c:	b.eq	f824 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x14b8>  // b.none
    f820:	bl	0 <_ZdlPv>
    f824:	ldr	x10, [x26, #16]
    f828:	cbz	x10, f798 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x142c>
    f82c:	add	x8, x26, #0x8
    f830:	mov	x9, x8
    f834:	ldr	x11, [x10, #32]
    f838:	add	x12, x10, #0x18
    f83c:	add	x13, x10, #0x10
    f840:	cmp	x11, x23
    f844:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    f848:	csel	x10, x12, x13, cc  // cc = lo, ul, last
    f84c:	ldr	x10, [x10]
    f850:	cbnz	x10, f834 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x14c8>
    f854:	cmp	x9, x8
    f858:	b.eq	f798 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x142c>  // b.none
    f85c:	ldr	x10, [x9, #32]
    f860:	cmp	x10, x23
    f864:	csel	x9, x8, x9, hi  // hi = pmore
    f868:	add	x10, x9, #0x20
    f86c:	cmp	x9, x8
    f870:	csel	x8, xzr, x10, eq  // eq = none
    f874:	tst	x8, #0x7
    f878:	b.ne	10aa4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2738>  // b.any
    f87c:	cmp	x8, #0x8
    f880:	b.cc	f798 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x142c>  // b.lo, b.ul, b.last
    f884:	and	x9, x8, #0xfffffffffffffff8
    f888:	ldp	x8, x9, [x9, #24]
    f88c:	cmp	x9, x8
    f890:	b.eq	f798 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x142c>  // b.none
    f894:	ldr	x23, [x8]
    f898:	mov	x0, x21
    f89c:	mov	x1, x22
    f8a0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    f8a4:	ldp	w8, w9, [sp, #120]
    f8a8:	mov	w24, w0
    f8ac:	cmp	w8, w9
    f8b0:	b.cs	fc1c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x18b0>  // b.hs, b.nlast
    f8b4:	ldr	x9, [sp, #112]
    f8b8:	str	x24, [x9, w8, uxtw #3]
    f8bc:	ldp	w8, w9, [sp, #120]
    f8c0:	cmp	w8, w9
    f8c4:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f8c8:	ldr	x9, [x29, #8]
    f8cc:	add	w8, w8, #0x1
    f8d0:	str	w8, [sp, #120]
    f8d4:	cbz	x23, 10b24 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27b8>
    f8d8:	ldr	w8, [x23, #8]
    f8dc:	cmp	w8, #0x1
    f8e0:	b.ne	10b44 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27d8>  // b.any
    f8e4:	ldr	x0, [x9]
    f8e8:	mov	x1, x23
    f8ec:	bl	24f08 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE>
    f8f0:	mov	x0, x23
    f8f4:	bl	0 <_ZNK4llvm15FunctionSummary16specialRefCountsEv>
    f8f8:	ldp	w8, w9, [sp, #120]
    f8fc:	ldrb	w26, [x23, #12]
    f900:	mov	x24, x0
    f904:	cmp	w8, w9
    f908:	b.cs	fc38 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x18cc>  // b.hs, b.nlast
    f90c:	ldr	x9, [sp, #112]
    f910:	str	x26, [x9, w8, uxtw #3]
    f914:	ldp	w8, w9, [sp, #120]
    f918:	cmp	w8, w9
    f91c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f920:	add	w8, w8, #0x1
    f924:	str	w8, [sp, #120]
    f928:	ldr	w26, [x23, #64]
    f92c:	cmp	w8, w9
    f930:	b.cs	fc54 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x18e8>  // b.hs, b.nlast
    f934:	ldr	x9, [sp, #112]
    f938:	str	x26, [x9, w8, uxtw #3]
    f93c:	ldp	w8, w9, [sp, #120]
    f940:	cmp	w8, w9
    f944:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f948:	add	w8, w8, #0x1
    f94c:	str	w8, [sp, #120]
    f950:	ldr	w10, [x23, #68]
    f954:	cmp	w8, w9
    f958:	and	x26, x10, #0x3f
    f95c:	b.cs	fc70 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1904>  // b.hs, b.nlast
    f960:	ldr	x9, [sp, #112]
    f964:	str	x26, [x9, w8, uxtw #3]
    f968:	ldp	w8, w9, [sp, #120]
    f96c:	cmp	w8, w9
    f970:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f974:	add	w8, w8, #0x1
    f978:	str	w8, [sp, #120]
    f97c:	ldp	x10, x11, [x23, #40]
    f980:	cmp	w8, w9
    f984:	sub	x10, x11, x10
    f988:	asr	x19, x10, #3
    f98c:	b.cs	fc8c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1920>  // b.hs, b.nlast
    f990:	ldr	x9, [sp, #112]
    f994:	str	x19, [x9, w8, uxtw #3]
    f998:	ldp	w8, w9, [sp, #120]
    f99c:	cmp	w8, w9
    f9a0:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f9a4:	add	w8, w8, #0x1
    f9a8:	cmp	w8, w9
    f9ac:	and	x26, x24, #0xffffffff
    f9b0:	str	w8, [sp, #120]
    f9b4:	b.cs	fca8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x193c>  // b.hs, b.nlast
    f9b8:	ldr	x9, [sp, #112]
    f9bc:	str	x26, [x9, w8, uxtw #3]
    f9c0:	ldp	w8, w9, [sp, #120]
    f9c4:	cmp	w8, w9
    f9c8:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f9cc:	add	w8, w8, #0x1
    f9d0:	lsr	x24, x24, #32
    f9d4:	cmp	w8, w9
    f9d8:	str	w8, [sp, #120]
    f9dc:	b.cs	fcc4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1958>  // b.hs, b.nlast
    f9e0:	ldr	x9, [sp, #112]
    f9e4:	str	x24, [x9, w8, uxtw #3]
    f9e8:	ldp	w8, w9, [sp, #120]
    f9ec:	cmp	w8, w9
    f9f0:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    f9f4:	add	w8, w8, #0x1
    f9f8:	str	w8, [sp, #120]
    f9fc:	ldp	x24, x8, [x23, #40]
    fa00:	subs	x8, x8, x24
    fa04:	b.eq	fa80 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1714>  // b.none
    fa08:	asr	x8, x8, #3
    fa0c:	lsl	x26, x8, #3
    fa10:	ldr	x8, [x24]
    fa14:	tbz	w8, #0, 109b4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2648>
    fa18:	and	x8, x8, #0xfffffffffffffff8
    fa1c:	ldr	x1, [x8, #8]
    fa20:	mov	x0, x21
    fa24:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    fa28:	ldp	w8, w9, [sp, #120]
    fa2c:	mov	w20, w0
    fa30:	cmp	w8, w9
    fa34:	b.cs	fa64 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x16f8>  // b.hs, b.nlast
    fa38:	ldr	x9, [sp, #112]
    fa3c:	str	x20, [x9, w8, uxtw #3]
    fa40:	ldp	w8, w9, [sp, #120]
    fa44:	cmp	w8, w9
    fa48:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    fa4c:	add	w8, w8, #0x1
    fa50:	subs	x26, x26, #0x8
    fa54:	add	x24, x24, #0x8
    fa58:	str	w8, [sp, #120]
    fa5c:	b.ne	fa10 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x16a4>  // b.any
    fa60:	b	fa80 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1714>
    fa64:	ldr	x1, [sp, #8]
    fa68:	add	x0, sp, #0x70
    fa6c:	mov	w3, #0x8                   	// #8
    fa70:	mov	x2, xzr
    fa74:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    fa78:	ldr	w8, [sp, #120]
    fa7c:	b	fa38 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x16cc>
    fa80:	mov	x0, x22
    fa84:	mov	w1, wzr
    fa88:	bl	0 <_ZNK4llvm8Function13getEntryCountEb>
    fa8c:	adrp	x8, 0 <ForceSummaryEdgesCold>
    fa90:	ldp	x24, x23, [x23, #80]
    fa94:	ldr	x8, [x8]
    fa98:	ldr	x26, [x29, #8]
    fa9c:	cmp	x23, x24
    faa0:	ldr	w8, [x8]
    faa4:	orr	w22, w8, w1
    faa8:	b.ne	fb28 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x17bc>  // b.any
    faac:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fab0:	ldrb	w8, [x8]
    fab4:	ldp	x10, x9, [sp, #80]
    fab8:	ldr	x0, [x26]
    fabc:	add	x2, sp, #0x70
    fac0:	cmp	w8, #0x0
    fac4:	mov	w8, #0x13                  	// #19
    fac8:	csinc	w8, w8, wzr, ne  // ne = any
    facc:	cmp	w22, #0x0
    fad0:	csel	x9, x9, x10, ne  // ne = any
    fad4:	lsr	x9, x9, #4
    fad8:	add	w3, w9, #0x3
    fadc:	mov	w9, #0x2                   	// #2
    fae0:	csel	w1, w9, w8, ne  // ne = any
    fae4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fae8:	str	wzr, [sp, #120]
    faec:	b	f7a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x143c>
    faf0:	ldr	w10, [x24, #8]
    faf4:	cmp	w8, w9
    faf8:	and	x19, x10, #0x7
    fafc:	b.cs	fbe4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1878>  // b.hs, b.nlast
    fb00:	ldr	x9, [sp, #112]
    fb04:	str	x19, [x9, w8, uxtw #3]
    fb08:	ldp	w8, w9, [sp, #120]
    fb0c:	cmp	w8, w9
    fb10:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    fb14:	add	w8, w8, #0x1
    fb18:	str	w8, [sp, #120]
    fb1c:	add	x24, x24, #0x10
    fb20:	cmp	x24, x23
    fb24:	b.eq	faac <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1740>  // b.none
    fb28:	ldr	x9, [x24]
    fb2c:	and	x8, x9, #0xfffffffffffffff8
    fb30:	tbz	w9, #0, fb48 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x17dc>
    fb34:	ldr	x1, [x8, #8]
    fb38:	cbz	x1, fb48 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x17dc>
    fb3c:	mov	x0, x21
    fb40:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    fb44:	b	fb98 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x182c>
    fb48:	ldr	x10, [x27, #16]
    fb4c:	cbz	x10, 109d4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2668>
    fb50:	ldr	x8, [x8]
    fb54:	mov	x9, x25
    fb58:	ldr	x11, [x10, #32]
    fb5c:	add	x12, x10, #0x18
    fb60:	add	x13, x10, #0x10
    fb64:	cmp	x11, x8
    fb68:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    fb6c:	csel	x10, x12, x13, cc  // cc = lo, ul, last
    fb70:	ldr	x10, [x10]
    fb74:	cbnz	x10, fb58 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x17ec>
    fb78:	cmp	x9, x25
    fb7c:	b.eq	109d4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2668>  // b.none
    fb80:	ldr	x10, [x9, #32]
    fb84:	cmp	x10, x8
    fb88:	csel	x8, x25, x9, hi  // hi = pmore
    fb8c:	cmp	x8, x25
    fb90:	b.eq	109d4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2668>  // b.none
    fb94:	ldr	w0, [x8, #40]
    fb98:	ldp	w8, w9, [sp, #120]
    fb9c:	mov	w20, w0
    fba0:	cmp	w8, w9
    fba4:	b.cs	fc00 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1894>  // b.hs, b.nlast
    fba8:	ldr	x9, [sp, #112]
    fbac:	str	x20, [x9, w8, uxtw #3]
    fbb0:	ldp	w8, w9, [sp, #120]
    fbb4:	cmp	w8, w9
    fbb8:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    fbbc:	add	w8, w8, #0x1
    fbc0:	str	w8, [sp, #120]
    fbc4:	cbnz	w22, faf0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1784>
    fbc8:	adrp	x10, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fbcc:	ldrb	w10, [x10]
    fbd0:	cbz	w10, fb1c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x17b0>
    fbd4:	ldr	w10, [x24, #8]
    fbd8:	cmp	w8, w9
    fbdc:	lsr	x19, x10, #3
    fbe0:	b.cc	fb00 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1794>  // b.lo, b.ul, b.last
    fbe4:	ldr	x1, [sp, #8]
    fbe8:	add	x0, sp, #0x70
    fbec:	mov	w3, #0x8                   	// #8
    fbf0:	mov	x2, xzr
    fbf4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    fbf8:	ldr	w8, [sp, #120]
    fbfc:	b	fb00 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1794>
    fc00:	ldr	x1, [sp, #8]
    fc04:	add	x0, sp, #0x70
    fc08:	mov	w3, #0x8                   	// #8
    fc0c:	mov	x2, xzr
    fc10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    fc14:	ldr	w8, [sp, #120]
    fc18:	b	fba8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x183c>
    fc1c:	ldr	x1, [sp, #8]
    fc20:	add	x0, sp, #0x70
    fc24:	mov	w3, #0x8                   	// #8
    fc28:	mov	x2, xzr
    fc2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    fc30:	ldr	w8, [sp, #120]
    fc34:	b	f8b4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1548>
    fc38:	ldr	x1, [sp, #8]
    fc3c:	add	x0, sp, #0x70
    fc40:	mov	w3, #0x8                   	// #8
    fc44:	mov	x2, xzr
    fc48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    fc4c:	ldr	w8, [sp, #120]
    fc50:	b	f90c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x15a0>
    fc54:	ldr	x1, [sp, #8]
    fc58:	add	x0, sp, #0x70
    fc5c:	mov	w3, #0x8                   	// #8
    fc60:	mov	x2, xzr
    fc64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    fc68:	ldr	w8, [sp, #120]
    fc6c:	b	f934 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x15c8>
    fc70:	ldr	x1, [sp, #8]
    fc74:	add	x0, sp, #0x70
    fc78:	mov	w3, #0x8                   	// #8
    fc7c:	mov	x2, xzr
    fc80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    fc84:	ldr	w8, [sp, #120]
    fc88:	b	f960 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x15f4>
    fc8c:	ldr	x1, [sp, #8]
    fc90:	add	x0, sp, #0x70
    fc94:	mov	w3, #0x8                   	// #8
    fc98:	mov	x2, xzr
    fc9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    fca0:	ldr	w8, [sp, #120]
    fca4:	b	f990 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1624>
    fca8:	ldr	x1, [sp, #8]
    fcac:	add	x0, sp, #0x70
    fcb0:	mov	w3, #0x8                   	// #8
    fcb4:	mov	x2, xzr
    fcb8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    fcbc:	ldr	w8, [sp, #120]
    fcc0:	b	f9b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x164c>
    fcc4:	ldr	x1, [sp, #8]
    fcc8:	add	x0, sp, #0x70
    fccc:	mov	w3, #0x8                   	// #8
    fcd0:	mov	x2, xzr
    fcd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    fcd8:	ldr	w8, [sp, #120]
    fcdc:	b	f9e0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1674>
    fce0:	ldr	x8, [x26, #16]
    fce4:	ldr	x20, [x8, #16]
    fce8:	add	x27, x8, #0x8
    fcec:	cmp	x27, x20
    fcf0:	b.eq	10168 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1dfc>  // b.none
    fcf4:	ldp	x9, x8, [sp, #64]
    fcf8:	add	x21, x26, #0x18
    fcfc:	sub	x8, x8, x9
    fd00:	ldp	x10, x9, [sp, #32]
    fd04:	lsr	x8, x8, #4
    fd08:	add	w8, w8, #0x3
    fd0c:	str	w8, [sp, #88]
    fd10:	sub	x9, x9, x10
    fd14:	sub	x10, x29, #0xd0
    fd18:	lsr	x9, x9, #4
    fd1c:	add	x28, x10, #0x10
    fd20:	add	w8, w9, #0x3
    fd24:	str	w8, [sp, #80]
    fd28:	b	fd44 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x19d8>
    fd2c:	mov	x0, x24
    fd30:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    fd34:	tbz	w0, #0, 10a84 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2718>
    fd38:	ldr	x20, [x20, #8]
    fd3c:	cmp	x27, x20
    fd40:	b.eq	10164 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1df8>  // b.none
    fd44:	ldrb	w8, [x20]
    fd48:	tbnz	w8, #2, 10a24 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x26b8>
    fd4c:	ldr	x23, [x26, #584]
    fd50:	sub	x8, x20, #0x38
    fd54:	cmp	x20, #0x0
    fd58:	csel	x24, xzr, x8, eq  // eq = none
    fd5c:	sub	x8, x29, #0xd0
    fd60:	mov	x0, x24
    fd64:	bl	0 <_ZNK4llvm11GlobalValue19getGlobalIdentifierB5cxx11Ev>
    fd68:	ldp	x25, x26, [x29, #-208]
    fd6c:	sub	x0, x29, #0xa0
    fd70:	bl	0 <_ZN4llvm3MD5C1Ev>
    fd74:	sub	x0, x29, #0xa0
    fd78:	mov	x1, x25
    fd7c:	mov	x2, x26
    fd80:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
    fd84:	sub	x0, x29, #0xa0
    fd88:	sub	x1, x29, #0xb0
    fd8c:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
    fd90:	ldur	x0, [x29, #-208]
    fd94:	ldur	x22, [x29, #-176]
    fd98:	cmp	x0, x28
    fd9c:	b.eq	fda4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1a38>  // b.none
    fda0:	bl	0 <_ZdlPv>
    fda4:	ldr	x10, [x23, #16]
    fda8:	ldr	x26, [x29, #8]
    fdac:	cbz	x10, fd2c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x19c0>
    fdb0:	add	x8, x23, #0x8
    fdb4:	mov	x9, x8
    fdb8:	ldr	x11, [x10, #32]
    fdbc:	add	x12, x10, #0x18
    fdc0:	add	x13, x10, #0x10
    fdc4:	cmp	x11, x22
    fdc8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    fdcc:	csel	x10, x12, x13, cc  // cc = lo, ul, last
    fdd0:	ldr	x10, [x10]
    fdd4:	cbnz	x10, fdb8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1a4c>
    fdd8:	cmp	x9, x8
    fddc:	b.eq	fd2c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x19c0>  // b.none
    fde0:	ldr	x10, [x9, #32]
    fde4:	cmp	x10, x22
    fde8:	csel	x9, x8, x9, hi  // hi = pmore
    fdec:	add	x10, x9, #0x20
    fdf0:	cmp	x9, x8
    fdf4:	csel	x8, xzr, x10, eq  // eq = none
    fdf8:	tst	x8, #0x7
    fdfc:	b.ne	10aa4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2738>  // b.any
    fe00:	cmp	x8, #0x8
    fe04:	b.cc	fd2c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x19c0>  // b.lo, b.ul, b.last
    fe08:	and	x9, x8, #0xfffffffffffffff8
    fe0c:	ldp	x8, x9, [x9, #24]
    fe10:	cmp	x9, x8
    fe14:	b.eq	fd2c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x19c0>  // b.none
    fe18:	ldr	x25, [x8]
    fe1c:	mov	x0, x21
    fe20:	mov	x1, x24
    fe24:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    fe28:	ldp	w8, w9, [sp, #120]
    fe2c:	mov	w22, w0
    fe30:	cmp	w8, w9
    fe34:	b.cs	100f4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d88>  // b.hs, b.nlast
    fe38:	ldr	x9, [sp, #112]
    fe3c:	str	x22, [x9, w8, uxtw #3]
    fe40:	ldp	w8, w9, [sp, #120]
    fe44:	cmp	w8, w9
    fe48:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    fe4c:	add	w8, w8, #0x1
    fe50:	str	w8, [sp, #120]
    fe54:	cbz	x25, 10b64 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27f8>
    fe58:	ldr	w10, [x25, #8]
    fe5c:	cmp	w10, #0x2
    fe60:	b.ne	10b84 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2818>  // b.any
    fe64:	ldrb	w22, [x25, #12]
    fe68:	cmp	w8, w9
    fe6c:	b.cs	10110 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1da4>  // b.hs, b.nlast
    fe70:	ldr	x9, [sp, #112]
    fe74:	str	x22, [x9, w8, uxtw #3]
    fe78:	ldp	w8, w9, [sp, #120]
    fe7c:	cmp	w8, w9
    fe80:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    fe84:	add	w8, w8, #0x1
    fe88:	str	w8, [sp, #120]
    fe8c:	ldr	w10, [x25, #72]
    fe90:	cmp	w8, w9
    fe94:	and	x22, x10, #0x3
    fe98:	b.cs	1012c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1dc0>  // b.hs, b.nlast
    fe9c:	ldr	x9, [sp, #112]
    fea0:	str	x22, [x9, w8, uxtw #3]
    fea4:	ldp	w9, w8, [sp, #120]
    fea8:	cmp	w9, w8
    feac:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    feb0:	add	w24, w9, #0x1
    feb4:	str	w24, [sp, #120]
    feb8:	ldr	x9, [x25, #64]
    febc:	cbz	x9, ff08 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1b9c>
    fec0:	ldp	x26, x9, [x9]
    fec4:	subs	x22, x9, x26
    fec8:	b.eq	ff14 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1ba8>  // b.none
    fecc:	ldp	x9, x10, [x25, #40]
    fed0:	cmp	w24, w8
    fed4:	sub	x9, x10, x9
    fed8:	asr	x19, x9, #3
    fedc:	b.cs	10148 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1ddc>  // b.hs, b.nlast
    fee0:	ldr	x8, [sp, #112]
    fee4:	str	x19, [x8, w24, uxtw #3]
    fee8:	ldp	w8, w9, [sp, #120]
    feec:	cmp	w8, w9
    fef0:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    fef4:	mov	w23, wzr
    fef8:	asr	x19, x22, #4
    fefc:	add	w24, w8, #0x1
    ff00:	str	w24, [sp, #120]
    ff04:	b	ff1c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1bb0>
    ff08:	mov	x19, xzr
    ff0c:	mov	x26, xzr
    ff10:	b	ff18 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1bac>
    ff14:	mov	x19, xzr
    ff18:	mov	w23, #0x1                   	// #1
    ff1c:	ldp	x22, x8, [x25, #40]
    ff20:	mov	w25, w24
    ff24:	mov	x9, x25
    ff28:	subs	x10, x8, x22
    ff2c:	mov	w8, w24
    ff30:	b.eq	ffc0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1c54>  // b.none
    ff34:	asr	x8, x10, #3
    ff38:	str	w23, [sp, #96]
    ff3c:	lsl	x23, x8, #3
    ff40:	str	x19, [sp, #104]
    ff44:	ldr	x8, [x22]
    ff48:	tbz	w8, #0, 109b4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2648>
    ff4c:	and	x8, x8, #0xfffffffffffffff8
    ff50:	ldr	x1, [x8, #8]
    ff54:	mov	x0, x21
    ff58:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    ff5c:	ldp	w8, w9, [sp, #120]
    ff60:	mov	w19, w0
    ff64:	cmp	w8, w9
    ff68:	b.cs	ff98 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1c2c>  // b.hs, b.nlast
    ff6c:	ldr	x9, [sp, #112]
    ff70:	str	x19, [x9, w8, uxtw #3]
    ff74:	ldp	w8, w9, [sp, #120]
    ff78:	cmp	w8, w9
    ff7c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
    ff80:	add	x8, x8, #0x1
    ff84:	subs	x23, x23, #0x8
    ff88:	add	x22, x22, #0x8
    ff8c:	str	w8, [sp, #120]
    ff90:	b.ne	ff44 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1bd8>  // b.any
    ff94:	b	ffb4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1c48>
    ff98:	ldr	x1, [sp, #8]
    ff9c:	add	x0, sp, #0x70
    ffa0:	mov	w3, #0x8                   	// #8
    ffa4:	mov	x2, xzr
    ffa8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    ffac:	ldr	w8, [sp, #120]
    ffb0:	b	ff6c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1c00>
    ffb4:	ldr	x19, [sp, #104]
    ffb8:	ldr	w23, [sp, #96]
    ffbc:	mov	x9, x8
    ffc0:	cmp	w24, w8
    ffc4:	b.eq	10000 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1c94>  // b.none
    ffc8:	ldr	x8, [sp, #112]
    ffcc:	add	x24, x8, x25, lsl #3
    ffd0:	add	x25, x8, x9, lsl #3
    ffd4:	sub	x8, x25, x24
    ffd8:	asr	x8, x8, #3
    ffdc:	clz	x8, x8
    ffe0:	mov	w9, #0x7e                  	// #126
    ffe4:	sub	x2, x9, x8, lsl #1
    ffe8:	mov	x0, x24
    ffec:	mov	x1, x25
    fff0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
    fff4:	mov	x0, x24
    fff8:	mov	x1, x25
    fffc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10000:	tbz	w23, #0, 10018 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1cac>
   10004:	ldr	x26, [x29, #8]
   10008:	ldr	w3, [sp, #88]
   1000c:	add	x2, sp, #0x70
   10010:	mov	w1, #0x3                   	// #3
   10014:	b	100e4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d78>
   10018:	cbz	x19, 100d4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d68>
   1001c:	add	x22, x26, x19, lsl #4
   10020:	ldr	x8, [x26]
   10024:	tbz	w8, #0, 109b4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2648>
   10028:	and	x8, x8, #0xfffffffffffffff8
   1002c:	ldr	x1, [x8, #8]
   10030:	mov	x0, x21
   10034:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   10038:	ldp	w8, w9, [sp, #120]
   1003c:	mov	w19, w0
   10040:	cmp	w8, w9
   10044:	b.cs	1009c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d30>  // b.hs, b.nlast
   10048:	ldr	x9, [sp, #112]
   1004c:	str	x19, [x9, w8, uxtw #3]
   10050:	ldp	w8, w9, [sp, #120]
   10054:	cmp	w8, w9
   10058:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
   1005c:	add	w8, w8, #0x1
   10060:	cmp	w8, w9
   10064:	str	w8, [sp, #120]
   10068:	b.cs	100b8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d4c>  // b.hs, b.nlast
   1006c:	ldr	x9, [sp, #112]
   10070:	ldr	x10, [x26, #8]
   10074:	str	x10, [x9, w8, uxtw #3]
   10078:	ldp	w8, w9, [sp, #120]
   1007c:	cmp	w8, w9
   10080:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
   10084:	add	x26, x26, #0x10
   10088:	add	w8, w8, #0x1
   1008c:	cmp	x26, x22
   10090:	str	w8, [sp, #120]
   10094:	b.ne	10020 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1cb4>  // b.any
   10098:	b	100d4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d68>
   1009c:	ldr	x1, [sp, #8]
   100a0:	add	x0, sp, #0x70
   100a4:	mov	w3, #0x8                   	// #8
   100a8:	mov	x2, xzr
   100ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   100b0:	ldr	w8, [sp, #120]
   100b4:	b	10048 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1cdc>
   100b8:	ldr	x1, [sp, #8]
   100bc:	add	x0, sp, #0x70
   100c0:	mov	w3, #0x8                   	// #8
   100c4:	mov	x2, xzr
   100c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   100cc:	ldr	w8, [sp, #120]
   100d0:	b	1006c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1d00>
   100d4:	ldr	x26, [x29, #8]
   100d8:	ldr	w3, [sp, #80]
   100dc:	add	x2, sp, #0x70
   100e0:	mov	w1, #0x17                  	// #23
   100e4:	ldr	x0, [x26]
   100e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   100ec:	str	wzr, [sp, #120]
   100f0:	b	fd38 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x19cc>
   100f4:	ldr	x1, [sp, #8]
   100f8:	add	x0, sp, #0x70
   100fc:	mov	w3, #0x8                   	// #8
   10100:	mov	x2, xzr
   10104:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10108:	ldr	w8, [sp, #120]
   1010c:	b	fe38 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1acc>
   10110:	ldr	x1, [sp, #8]
   10114:	add	x0, sp, #0x70
   10118:	mov	w3, #0x8                   	// #8
   1011c:	mov	x2, xzr
   10120:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10124:	ldr	w8, [sp, #120]
   10128:	b	fe70 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1b04>
   1012c:	ldr	x1, [sp, #8]
   10130:	add	x0, sp, #0x70
   10134:	mov	w3, #0x8                   	// #8
   10138:	mov	x2, xzr
   1013c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10140:	ldr	w8, [sp, #120]
   10144:	b	fe9c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1b30>
   10148:	ldr	x1, [sp, #8]
   1014c:	add	x0, sp, #0x70
   10150:	mov	w3, #0x8                   	// #8
   10154:	mov	x2, xzr
   10158:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1015c:	ldr	w24, [sp, #120]
   10160:	b	fee0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1b74>
   10164:	ldr	x8, [x26, #16]
   10168:	ldr	x20, [x8, #48]
   1016c:	add	x27, x8, #0x28
   10170:	cmp	x27, x20
   10174:	b.eq	10354 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1fe8>  // b.none
   10178:	ldr	x8, [sp, #24]
   1017c:	ldr	x9, [sp, #56]
   10180:	add	x21, x26, #0x18
   10184:	sub	x8, x8, x9
   10188:	sub	x9, x29, #0xd0
   1018c:	lsr	x8, x8, #4
   10190:	add	w22, w8, #0x3
   10194:	add	x28, x9, #0x10
   10198:	b	101a8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1e3c>
   1019c:	ldr	x20, [x20, #8]
   101a0:	cmp	x27, x20
   101a4:	b.eq	10354 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1fe8>  // b.none
   101a8:	ldrb	w8, [x20]
   101ac:	tbnz	w8, #2, 10a44 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x26d8>
   101b0:	sub	x8, x20, #0x30
   101b4:	cmp	x20, #0x0
   101b8:	csel	x24, xzr, x8, eq  // eq = none
   101bc:	mov	x0, x24
   101c0:	bl	0 <_ZNK4llvm20GlobalIndirectSymbol13getBaseObjectEv>
   101c4:	ldrb	w8, [x0, #23]
   101c8:	tbz	w8, #5, 1019c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1e30>
   101cc:	mov	x23, x0
   101d0:	mov	x0, x21
   101d4:	mov	x1, x24
   101d8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   101dc:	mov	w25, w0
   101e0:	mov	x0, x21
   101e4:	mov	x1, x23
   101e8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   101ec:	ldp	w8, w9, [sp, #120]
   101f0:	mov	w23, w0
   101f4:	mov	w19, w25
   101f8:	cmp	w8, w9
   101fc:	b.cs	10300 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1f94>  // b.hs, b.nlast
   10200:	ldr	x9, [sp, #112]
   10204:	str	x19, [x9, w8, uxtw #3]
   10208:	ldp	w8, w9, [sp, #120]
   1020c:	cmp	w8, w9
   10210:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
   10214:	add	w8, w8, #0x1
   10218:	str	w8, [sp, #120]
   1021c:	ldrb	w8, [x24, #23]
   10220:	tbz	w8, #5, 10ac4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2758>
   10224:	ldr	x25, [x26, #584]
   10228:	sub	x8, x29, #0xd0
   1022c:	mov	x0, x24
   10230:	bl	0 <_ZNK4llvm11GlobalValue19getGlobalIdentifierB5cxx11Ev>
   10234:	ldp	x24, x26, [x29, #-208]
   10238:	sub	x0, x29, #0xa0
   1023c:	bl	0 <_ZN4llvm3MD5C1Ev>
   10240:	sub	x0, x29, #0xa0
   10244:	mov	x1, x24
   10248:	mov	x2, x26
   1024c:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
   10250:	sub	x0, x29, #0xa0
   10254:	sub	x1, x29, #0xb0
   10258:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
   1025c:	ldur	x0, [x29, #-208]
   10260:	ldur	x24, [x29, #-176]
   10264:	cmp	x0, x28
   10268:	b.eq	10270 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1f04>  // b.none
   1026c:	bl	0 <_ZdlPv>
   10270:	mov	w2, #0x1                   	// #1
   10274:	mov	x0, x25
   10278:	mov	x1, x24
   1027c:	bl	0 <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryEmb>
   10280:	cbz	x0, 10ae4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2778>
   10284:	ldr	w8, [x0, #8]
   10288:	ldr	x26, [x29, #8]
   1028c:	cbnz	w8, 10b04 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2798>
   10290:	ldp	w8, w9, [sp, #120]
   10294:	ldrb	w24, [x0, #12]
   10298:	cmp	w8, w9
   1029c:	b.cs	1031c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1fb0>  // b.hs, b.nlast
   102a0:	ldr	x9, [sp, #112]
   102a4:	str	x24, [x9, w8, uxtw #3]
   102a8:	ldp	w8, w9, [sp, #120]
   102ac:	cmp	w8, w9
   102b0:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
   102b4:	add	w8, w8, #0x1
   102b8:	cmp	w8, w9
   102bc:	mov	w19, w23
   102c0:	str	w8, [sp, #120]
   102c4:	b.cs	10338 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1fcc>  // b.hs, b.nlast
   102c8:	ldr	x9, [sp, #112]
   102cc:	str	x19, [x9, w8, uxtw #3]
   102d0:	ldp	w8, w9, [sp, #120]
   102d4:	cmp	w8, w9
   102d8:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
   102dc:	add	w8, w8, #0x1
   102e0:	str	w8, [sp, #120]
   102e4:	ldr	x0, [x26]
   102e8:	add	x2, sp, #0x70
   102ec:	mov	w1, #0x7                   	// #7
   102f0:	mov	w3, w22
   102f4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   102f8:	str	wzr, [sp, #120]
   102fc:	b	1019c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1e30>
   10300:	ldr	x1, [sp, #8]
   10304:	add	x0, sp, #0x70
   10308:	mov	w3, #0x8                   	// #8
   1030c:	mov	x2, xzr
   10310:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10314:	ldr	w8, [sp, #120]
   10318:	b	10200 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1e94>
   1031c:	ldr	x1, [sp, #8]
   10320:	add	x0, sp, #0x70
   10324:	mov	w3, #0x8                   	// #8
   10328:	mov	x2, xzr
   1032c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10330:	ldr	w8, [sp, #120]
   10334:	b	102a0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1f34>
   10338:	ldr	x1, [sp, #8]
   1033c:	add	x0, sp, #0x70
   10340:	mov	w3, #0x8                   	// #8
   10344:	mov	x2, xzr
   10348:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1034c:	ldr	w8, [sp, #120]
   10350:	b	102c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1f5c>
   10354:	ldr	x8, [x26, #584]
   10358:	ldr	x21, [x8, #152]
   1035c:	add	x20, x8, #0x88
   10360:	cmp	x21, x20
   10364:	b.eq	10508 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x219c>  // b.none
   10368:	ldr	x8, [sp, #16]
   1036c:	ldr	x9, [sp, #48]
   10370:	add	x23, x26, #0x18
   10374:	sub	x8, x8, x9
   10378:	lsr	x8, x8, #4
   1037c:	add	w22, w8, #0x3
   10380:	b	103b0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2044>
   10384:	ldr	x0, [x26]
   10388:	add	x2, sp, #0x70
   1038c:	mov	w1, #0x16                  	// #22
   10390:	mov	w3, w22
   10394:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10398:	mov	x0, x21
   1039c:	str	wzr, [sp, #120]
   103a0:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   103a4:	mov	x21, x0
   103a8:	cmp	x0, x20
   103ac:	b.eq	10508 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x219c>  // b.none
   103b0:	ldr	x0, [x26, #8]
   103b4:	ldp	x1, x2, [x21, #32]
   103b8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   103bc:	ldp	w8, w9, [sp, #120]
   103c0:	mov	x24, x0
   103c4:	cmp	w8, w9
   103c8:	b.cs	104d0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2164>  // b.hs, b.nlast
   103cc:	ldr	x9, [sp, #112]
   103d0:	str	x24, [x9, w8, uxtw #3]
   103d4:	ldp	w8, w9, [sp, #120]
   103d8:	cmp	w8, w9
   103dc:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
   103e0:	add	w8, w8, #0x1
   103e4:	str	w8, [sp, #120]
   103e8:	ldr	x24, [x21, #40]
   103ec:	cmp	w8, w9
   103f0:	b.cs	104ec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   103f4:	ldr	x9, [sp, #112]
   103f8:	str	x24, [x9, w8, uxtw #3]
   103fc:	ldp	w9, w8, [sp, #120]
   10400:	cmp	w9, w8
   10404:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
   10408:	add	w9, w9, #0x1
   1040c:	str	w9, [sp, #120]
   10410:	ldp	x24, x25, [x21, #64]
   10414:	cmp	x24, x25
   10418:	b.eq	10384 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2018>  // b.none
   1041c:	cmp	w9, w8
   10420:	b.cs	10498 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x212c>  // b.hs, b.nlast
   10424:	ldr	x8, [sp, #112]
   10428:	ldr	x10, [x24]
   1042c:	str	x10, [x8, w9, uxtw #3]
   10430:	ldp	w8, w9, [sp, #120]
   10434:	cmp	w8, w9
   10438:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
   1043c:	add	w8, w8, #0x1
   10440:	str	w8, [sp, #120]
   10444:	ldr	x8, [x24, #8]
   10448:	tbz	w8, #0, 109b4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2648>
   1044c:	and	x8, x8, #0xfffffffffffffff8
   10450:	ldr	x1, [x8, #8]
   10454:	mov	x0, x23
   10458:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1045c:	ldp	w8, w9, [sp, #120]
   10460:	mov	w19, w0
   10464:	cmp	w8, w9
   10468:	b.cs	104b4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2148>  // b.hs, b.nlast
   1046c:	ldr	x9, [sp, #112]
   10470:	str	x19, [x9, w8, uxtw #3]
   10474:	ldp	w9, w8, [sp, #120]
   10478:	cmp	w9, w8
   1047c:	b.cs	10994 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2628>  // b.hs, b.nlast
   10480:	add	x24, x24, #0x10
   10484:	add	w9, w9, #0x1
   10488:	cmp	x24, x25
   1048c:	str	w9, [sp, #120]
   10490:	b.ne	1041c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x20b0>  // b.any
   10494:	b	10384 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2018>
   10498:	ldr	x1, [sp, #8]
   1049c:	add	x0, sp, #0x70
   104a0:	mov	w3, #0x8                   	// #8
   104a4:	mov	x2, xzr
   104a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   104ac:	ldr	w9, [sp, #120]
   104b0:	b	10424 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x20b8>
   104b4:	ldr	x1, [sp, #8]
   104b8:	add	x0, sp, #0x70
   104bc:	mov	w3, #0x8                   	// #8
   104c0:	mov	x2, xzr
   104c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   104c8:	ldr	w8, [sp, #120]
   104cc:	b	1046c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2100>
   104d0:	ldr	x1, [sp, #8]
   104d4:	add	x0, sp, #0x70
   104d8:	mov	w3, #0x8                   	// #8
   104dc:	mov	x2, xzr
   104e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   104e4:	ldr	w8, [sp, #120]
   104e8:	b	103cc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2060>
   104ec:	ldr	x1, [sp, #8]
   104f0:	add	x0, sp, #0x70
   104f4:	mov	w3, #0x8                   	// #8
   104f8:	mov	x2, xzr
   104fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10500:	ldr	w8, [sp, #120]
   10504:	b	103f4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2088>
   10508:	ldr	x0, [x26]
   1050c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10510:	ldr	x0, [sp, #112]
   10514:	add	x8, sp, #0x70
   10518:	add	x8, x8, #0x10
   1051c:	cmp	x0, x8
   10520:	b.eq	10528 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x21bc>  // b.none
   10524:	bl	0 <free>
   10528:	add	sp, sp, #0x3b0
   1052c:	ldp	x20, x19, [sp, #96]
   10530:	ldp	x22, x21, [sp, #80]
   10534:	ldp	x24, x23, [sp, #64]
   10538:	ldp	x26, x25, [sp, #48]
   1053c:	ldp	x28, x27, [sp, #32]
   10540:	ldp	x29, x30, [sp, #16]
   10544:	ldr	d8, [sp], #112
   10548:	ret
   1054c:	ldr	w8, [x21]
   10550:	sub	w9, w8, #0x1
   10554:	str	w9, [x21]
   10558:	cmp	w8, #0x1
   1055c:	b.eq	e8c8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x55c>  // b.none
   10560:	b	e8d8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x56c>
   10564:	ldr	w8, [x21]
   10568:	sub	w9, w8, #0x1
   1056c:	str	w9, [x21]
   10570:	cmp	w8, #0x1
   10574:	b.eq	ecb4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x948>  // b.none
   10578:	b	ecc4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x958>
   1057c:	ldr	w8, [x21]
   10580:	sub	w9, w8, #0x1
   10584:	str	w9, [x21]
   10588:	cmp	w8, #0x1
   1058c:	b.eq	ef4c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbe0>  // b.none
   10590:	b	ef5c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xbf0>
   10594:	ldr	w8, [x21]
   10598:	sub	w9, w8, #0x1
   1059c:	str	w9, [x21]
   105a0:	cmp	w8, #0x1
   105a4:	b.eq	f228 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xebc>  // b.none
   105a8:	b	f238 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xecc>
   105ac:	ldr	w8, [x21]
   105b0:	sub	w9, w8, #0x1
   105b4:	str	w9, [x21]
   105b8:	cmp	w8, #0x1
   105bc:	b.eq	f484 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1118>  // b.none
   105c0:	b	f494 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1128>
   105c4:	ldr	w8, [x21]
   105c8:	sub	w9, w8, #0x1
   105cc:	str	w9, [x21]
   105d0:	cmp	w8, #0x1
   105d4:	b.eq	f720 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x13b4>  // b.none
   105d8:	b	f730 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x13c4>
   105dc:	mov	w3, #0x10                  	// #16
   105e0:	mov	x0, x21
   105e4:	mov	x1, x22
   105e8:	mov	x2, xzr
   105ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   105f0:	ldr	w8, [x24]
   105f4:	b	e5a4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x238>
   105f8:	mov	w3, #0x10                  	// #16
   105fc:	mov	x0, x21
   10600:	mov	x1, x22
   10604:	mov	x2, xzr
   10608:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1060c:	ldr	w8, [x24]
   10610:	b	e5e8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x27c>
   10614:	mov	w3, #0x10                  	// #16
   10618:	mov	x0, x21
   1061c:	mov	x1, x22
   10620:	mov	x2, xzr
   10624:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10628:	ldr	w8, [x24]
   1062c:	b	e62c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x2c0>
   10630:	mov	w3, #0x10                  	// #16
   10634:	mov	x0, x21
   10638:	mov	x1, x22
   1063c:	mov	x2, xzr
   10640:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10644:	ldr	w8, [x24]
   10648:	b	e670 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x304>
   1064c:	mov	w3, #0x10                  	// #16
   10650:	mov	x0, x21
   10654:	mov	x1, x22
   10658:	mov	x2, xzr
   1065c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10660:	ldr	w8, [x24]
   10664:	b	e6b0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x344>
   10668:	mov	w3, #0x10                  	// #16
   1066c:	mov	x0, x21
   10670:	mov	x1, x22
   10674:	mov	x2, xzr
   10678:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1067c:	ldr	w8, [x24]
   10680:	b	e6f0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x384>
   10684:	mov	w3, #0x10                  	// #16
   10688:	mov	x0, x21
   1068c:	mov	x1, x22
   10690:	mov	x2, xzr
   10694:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10698:	ldr	w8, [x24]
   1069c:	b	e730 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x3c4>
   106a0:	mov	w3, #0x10                  	// #16
   106a4:	mov	x0, x21
   106a8:	mov	x1, x22
   106ac:	mov	x2, xzr
   106b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   106b4:	ldr	w8, [x24]
   106b8:	b	e770 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x404>
   106bc:	mov	w3, #0x10                  	// #16
   106c0:	mov	x0, x21
   106c4:	mov	x1, x22
   106c8:	mov	x2, xzr
   106cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   106d0:	ldr	w8, [x24]
   106d4:	b	e7b0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x444>
   106d8:	mov	w3, #0x10                  	// #16
   106dc:	mov	x0, x21
   106e0:	mov	x1, x22
   106e4:	mov	x2, xzr
   106e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   106ec:	ldr	w8, [x24]
   106f0:	b	e9a0 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x634>
   106f4:	mov	w3, #0x10                  	// #16
   106f8:	mov	x0, x21
   106fc:	mov	x1, x22
   10700:	mov	x2, xzr
   10704:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10708:	ldr	w8, [x24]
   1070c:	b	e9e4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x678>
   10710:	mov	w3, #0x10                  	// #16
   10714:	mov	x0, x21
   10718:	mov	x1, x22
   1071c:	mov	x2, xzr
   10720:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10724:	ldr	w8, [x24]
   10728:	b	ea28 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x6bc>
   1072c:	mov	w3, #0x10                  	// #16
   10730:	mov	x0, x21
   10734:	mov	x1, x22
   10738:	mov	x2, xzr
   1073c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10740:	ldr	w8, [x24]
   10744:	b	ea6c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x700>
   10748:	mov	w3, #0x10                  	// #16
   1074c:	mov	x0, x21
   10750:	mov	x1, x22
   10754:	mov	x2, xzr
   10758:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1075c:	ldr	w8, [x24]
   10760:	b	eaac <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x740>
   10764:	mov	w3, #0x10                  	// #16
   10768:	mov	x0, x21
   1076c:	mov	x1, x22
   10770:	mov	x2, xzr
   10774:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10778:	ldr	w8, [x24]
   1077c:	b	eaec <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x780>
   10780:	mov	w3, #0x10                  	// #16
   10784:	mov	x0, x21
   10788:	mov	x1, x22
   1078c:	mov	x2, xzr
   10790:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10794:	ldr	w8, [x24]
   10798:	b	eb2c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x7c0>
   1079c:	mov	w3, #0x10                  	// #16
   107a0:	mov	x0, x21
   107a4:	mov	x1, x22
   107a8:	mov	x2, xzr
   107ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   107b0:	ldr	w8, [x24]
   107b4:	b	eb6c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x800>
   107b8:	mov	w3, #0x10                  	// #16
   107bc:	mov	x0, x21
   107c0:	mov	x1, x22
   107c4:	mov	x2, xzr
   107c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   107cc:	ldr	w8, [x24]
   107d0:	b	ebac <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x840>
   107d4:	mov	w3, #0x10                  	// #16
   107d8:	mov	x0, x21
   107dc:	mov	x1, x22
   107e0:	mov	x2, xzr
   107e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   107e8:	ldr	w8, [x20, #24]
   107ec:	b	ed74 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xa08>
   107f0:	mov	w3, #0x10                  	// #16
   107f4:	mov	x0, x21
   107f8:	mov	x1, x22
   107fc:	mov	x2, xzr
   10800:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10804:	ldr	w8, [x20, #24]
   10808:	b	edb8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xa4c>
   1080c:	mov	w3, #0x10                  	// #16
   10810:	mov	x0, x21
   10814:	mov	x1, x22
   10818:	mov	x2, xzr
   1081c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10820:	ldr	w8, [x20, #24]
   10824:	b	edfc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xa90>
   10828:	mov	w3, #0x10                  	// #16
   1082c:	mov	x0, x21
   10830:	mov	x1, x22
   10834:	mov	x2, xzr
   10838:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1083c:	ldr	w8, [x20, #24]
   10840:	b	ee3c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xad0>
   10844:	mov	w3, #0x10                  	// #16
   10848:	mov	x0, x21
   1084c:	mov	x1, x22
   10850:	mov	x2, xzr
   10854:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10858:	ldr	w8, [x20, #24]
   1085c:	b	f00c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xca0>
   10860:	mov	w3, #0x10                  	// #16
   10864:	mov	x0, x21
   10868:	mov	x1, x22
   1086c:	mov	x2, xzr
   10870:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10874:	ldr	w8, [x20, #24]
   10878:	b	f050 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xce4>
   1087c:	mov	w3, #0x10                  	// #16
   10880:	mov	x0, x21
   10884:	mov	x1, x22
   10888:	mov	x2, xzr
   1088c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10890:	ldr	w8, [x20, #24]
   10894:	b	f094 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xd28>
   10898:	mov	w3, #0x10                  	// #16
   1089c:	mov	x0, x21
   108a0:	mov	x1, x22
   108a4:	mov	x2, xzr
   108a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   108ac:	ldr	w8, [x20, #24]
   108b0:	b	f0d4 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xd68>
   108b4:	mov	w3, #0x10                  	// #16
   108b8:	mov	x0, x21
   108bc:	mov	x1, x22
   108c0:	mov	x2, xzr
   108c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   108c8:	ldr	w8, [x20, #24]
   108cc:	b	f114 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xda8>
   108d0:	mov	w3, #0x10                  	// #16
   108d4:	mov	x0, x21
   108d8:	mov	x1, x22
   108dc:	mov	x2, xzr
   108e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   108e4:	ldr	w8, [x20, #24]
   108e8:	b	f2e8 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xf7c>
   108ec:	mov	w3, #0x10                  	// #16
   108f0:	mov	x0, x21
   108f4:	mov	x1, x22
   108f8:	mov	x2, xzr
   108fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10900:	ldr	w8, [x20, #24]
   10904:	b	f32c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0xfc0>
   10908:	mov	w3, #0x10                  	// #16
   1090c:	mov	x0, x21
   10910:	mov	x1, x22
   10914:	mov	x2, xzr
   10918:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1091c:	ldr	w8, [x20, #24]
   10920:	b	f370 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1004>
   10924:	mov	w3, #0x10                  	// #16
   10928:	mov	x0, x21
   1092c:	mov	x1, x22
   10930:	mov	x2, xzr
   10934:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10938:	ldr	w8, [x20, #24]
   1093c:	b	f544 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x11d8>
   10940:	mov	w3, #0x10                  	// #16
   10944:	mov	x0, x21
   10948:	mov	x1, x22
   1094c:	mov	x2, xzr
   10950:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10954:	ldr	w8, [x20, #24]
   10958:	b	f588 <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x121c>
   1095c:	mov	w3, #0x10                  	// #16
   10960:	mov	x0, x21
   10964:	mov	x1, x22
   10968:	mov	x2, xzr
   1096c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10970:	ldr	w8, [x20, #24]
   10974:	b	f5cc <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x1260>
   10978:	mov	w3, #0x10                  	// #16
   1097c:	mov	x0, x21
   10980:	mov	x1, x22
   10984:	mov	x2, xzr
   10988:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1098c:	ldr	w8, [x20, #24]
   10990:	b	f60c <_ZN12_GLOBAL__N_123ModuleBitcodeWriterBase32writePerModuleGlobalValueSummaryEv+0x12a0>
   10994:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10998:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1099c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   109a0:	add	x0, x0, #0x0
   109a4:	add	x1, x1, #0x0
   109a8:	add	x3, x3, #0x0
   109ac:	mov	w2, #0x43                  	// #67
   109b0:	bl	0 <__assert_fail>
   109b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   109b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   109bc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   109c0:	add	x0, x0, #0x0
   109c4:	add	x1, x1, #0x0
   109c8:	add	x3, x3, #0x0
   109cc:	mov	w2, #0xb4                  	// #180
   109d0:	bl	0 <__assert_fail>
   109d4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   109d8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   109dc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   109e0:	add	x0, x0, #0x0
   109e4:	add	x1, x1, #0x0
   109e8:	add	x3, x3, #0x0
   109ec:	mov	w2, #0xe6                  	// #230
   109f0:	bl	0 <__assert_fail>
   109f4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   109f8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   109fc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a00:	add	x0, x0, #0x0
   10a04:	add	x1, x1, #0x0
   10a08:	add	x3, x3, #0x0
   10a0c:	mov	w2, #0x8b                  	// #139
   10a10:	bl	0 <__assert_fail>
   10a14:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a18:	add	x0, x0, #0x0
   10a1c:	mov	w1, #0x1                   	// #1
   10a20:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
   10a24:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a28:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a2c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a30:	add	x0, x0, #0x0
   10a34:	add	x1, x1, #0x0
   10a38:	add	x3, x3, #0x0
   10a3c:	mov	w2, #0x8b                  	// #139
   10a40:	bl	0 <__assert_fail>
   10a44:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a48:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a4c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a50:	add	x0, x0, #0x0
   10a54:	add	x1, x1, #0x0
   10a58:	add	x3, x3, #0x0
   10a5c:	mov	w2, #0x8b                  	// #139
   10a60:	bl	0 <__assert_fail>
   10a64:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a68:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a6c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a70:	add	x0, x0, #0x0
   10a74:	add	x1, x1, #0x0
   10a78:	add	x3, x3, #0x0
   10a7c:	mov	w2, #0xf07                 	// #3847
   10a80:	bl	0 <__assert_fail>
   10a84:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a88:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a8c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10a90:	add	x0, x0, #0x0
   10a94:	add	x1, x1, #0x0
   10a98:	add	x3, x3, #0x0
   10a9c:	mov	w2, #0xe6d                 	// #3693
   10aa0:	bl	0 <__assert_fail>
   10aa4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10aa8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10aac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10ab0:	add	x0, x0, #0x0
   10ab4:	add	x1, x1, #0x0
   10ab8:	add	x3, x3, #0x0
   10abc:	mov	w2, #0xb3                  	// #179
   10ac0:	bl	0 <__assert_fail>
   10ac4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10ac8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10acc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10ad0:	add	x0, x0, #0x0
   10ad4:	add	x1, x1, #0x0
   10ad8:	add	x3, x3, #0x0
   10adc:	mov	w2, #0x4cc                 	// #1228
   10ae0:	bl	0 <__assert_fail>
   10ae4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10ae8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10aec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10af0:	add	x0, x0, #0x0
   10af4:	add	x1, x1, #0x0
   10af8:	add	x3, x3, #0x0
   10afc:	mov	w2, #0x69                  	// #105
   10b00:	bl	0 <__assert_fail>
   10b04:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b08:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b0c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b10:	add	x0, x0, #0x0
   10b14:	add	x1, x1, #0x0
   10b18:	add	x3, x3, #0x0
   10b1c:	mov	w2, #0x108                 	// #264
   10b20:	bl	0 <__assert_fail>
   10b24:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b28:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b2c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b30:	add	x0, x0, #0x0
   10b34:	add	x1, x1, #0x0
   10b38:	add	x3, x3, #0x0
   10b3c:	mov	w2, #0x69                  	// #105
   10b40:	bl	0 <__assert_fail>
   10b44:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b48:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b4c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b50:	add	x0, x0, #0x0
   10b54:	add	x1, x1, #0x0
   10b58:	add	x3, x3, #0x0
   10b5c:	mov	w2, #0x108                 	// #264
   10b60:	bl	0 <__assert_fail>
   10b64:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b68:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b6c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b70:	add	x0, x0, #0x0
   10b74:	add	x1, x1, #0x0
   10b78:	add	x3, x3, #0x0
   10b7c:	mov	w2, #0x69                  	// #105
   10b80:	bl	0 <__assert_fail>
   10b84:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b88:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b8c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10b90:	add	x0, x0, #0x0
   10b94:	add	x1, x1, #0x0
   10b98:	add	x3, x3, #0x0
   10b9c:	mov	w2, #0x108                 	// #264
   10ba0:	bl	0 <__assert_fail>
   10ba4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10ba8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10bac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10bb0:	add	x0, x0, #0x0
   10bb4:	add	x1, x1, #0x0
   10bb8:	add	x3, x3, #0x0
   10bbc:	mov	w2, #0x134                 	// #308
   10bc0:	bl	0 <__assert_fail>
   10bc4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10bc8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10bcc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10bd0:	add	x0, x0, #0x0
   10bd4:	add	x1, x1, #0x0
   10bd8:	add	x3, x3, #0x0
   10bdc:	mov	w2, #0x69                  	// #105
   10be0:	bl	0 <__assert_fail>
   10be4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10be8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10bec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10bf0:	add	x0, x0, #0x0
   10bf4:	add	x1, x1, #0x0
   10bf8:	add	x3, x3, #0x0
   10bfc:	mov	w2, #0x108                 	// #264
   10c00:	bl	0 <__assert_fail>
   10c04:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10c08:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10c0c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10c10:	add	x0, x0, #0x0
   10c14:	add	x1, x1, #0x0
   10c18:	add	x3, x3, #0x0
   10c1c:	mov	w2, #0x108                 	// #264
   10c20:	bl	0 <__assert_fail>
   10c24:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10c28:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10c2c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10c30:	add	x0, x0, #0x0
   10c34:	add	x1, x1, #0x0
   10c38:	add	x3, x3, #0x0
   10c3c:	mov	w2, #0x657                 	// #1623
   10c40:	bl	0 <__assert_fail>

0000000000010c44 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj>:
   10c44:	sub	sp, sp, #0x170
   10c48:	stp	x29, x30, [sp, #272]
   10c4c:	str	x28, [sp, #288]
   10c50:	stp	x26, x25, [sp, #304]
   10c54:	stp	x24, x23, [sp, #320]
   10c58:	stp	x22, x21, [sp, #336]
   10c5c:	stp	x20, x19, [sp, #352]
   10c60:	add	x29, sp, #0x110
   10c64:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10c68:	ldr	d0, [x8]
   10c6c:	mov	x8, sp
   10c70:	mov	w22, w4
   10c74:	mov	x23, x3
   10c78:	mov	w19, w1
   10c7c:	mov	x20, x0
   10c80:	add	x21, x8, #0x10
   10c84:	str	x21, [sp]
   10c88:	str	d0, [sp, #8]
   10c8c:	cbz	w23, 10d40 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xfc>
   10c90:	mov	x24, x2
   10c94:	mov	x25, xzr
   10c98:	mov	w8, wzr
   10c9c:	mov	w9, #0x40                  	// #64
   10ca0:	cbz	w22, 10ce4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xa0>
   10ca4:	cmp	x23, x25
   10ca8:	b.ls	10d84 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x140>  // b.plast
   10cac:	ldrb	w10, [x24, x25]
   10cb0:	sub	w11, w10, #0x30
   10cb4:	cmp	w11, #0xa
   10cb8:	b.cc	10ce4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xa0>  // b.lo, b.ul, b.last
   10cbc:	and	w11, w10, #0xffffffdf
   10cc0:	sub	w11, w11, #0x41
   10cc4:	and	w11, w11, #0xff
   10cc8:	cmp	w11, #0x1a
   10ccc:	b.cc	10ce4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xa0>  // b.lo, b.ul, b.last
   10cd0:	cmp	w10, #0x5f
   10cd4:	b.eq	10ce4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xa0>  // b.none
   10cd8:	cmp	w10, #0x2e
   10cdc:	b.eq	10ce4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xa0>  // b.none
   10ce0:	mov	w22, wzr
   10ce4:	cmp	x23, x25
   10ce8:	b.ls	10d84 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x140>  // b.plast
   10cec:	ldrb	w26, [x24, x25]
   10cf0:	cmp	w8, w9
   10cf4:	b.cs	10d24 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xe0>  // b.hs, b.nlast
   10cf8:	ldr	x9, [sp]
   10cfc:	str	w26, [x9, w8, uxtw #2]
   10d00:	ldp	w8, w9, [sp, #8]
   10d04:	cmp	w8, w9
   10d08:	b.cs	10da4 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x160>  // b.hs, b.nlast
   10d0c:	add	x25, x25, #0x1
   10d10:	add	w8, w8, #0x1
   10d14:	cmp	w23, w25
   10d18:	str	w8, [sp, #8]
   10d1c:	b.ne	10ca0 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x5c>  // b.any
   10d20:	b	10d40 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xfc>
   10d24:	mov	x0, sp
   10d28:	mov	w3, #0x4                   	// #4
   10d2c:	mov	x1, x21
   10d30:	mov	x2, xzr
   10d34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   10d38:	ldr	w8, [sp, #8]
   10d3c:	b	10cf8 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0xb4>
   10d40:	mov	x2, sp
   10d44:	mov	x0, x20
   10d48:	mov	w1, w19
   10d4c:	mov	w3, w22
   10d50:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10d54:	ldr	x0, [sp]
   10d58:	cmp	x0, x21
   10d5c:	b.eq	10d64 <_ZL17writeStringRecordRN4llvm15BitstreamWriterEjNS_9StringRefEj+0x120>  // b.none
   10d60:	bl	0 <free>
   10d64:	ldp	x20, x19, [sp, #352]
   10d68:	ldp	x22, x21, [sp, #336]
   10d6c:	ldp	x24, x23, [sp, #320]
   10d70:	ldp	x26, x25, [sp, #304]
   10d74:	ldr	x28, [sp, #288]
   10d78:	ldp	x29, x30, [sp, #272]
   10d7c:	add	sp, sp, #0x170
   10d80:	ret
   10d84:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10d88:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10d8c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10d90:	add	x0, x0, #0x0
   10d94:	add	x1, x1, #0x0
   10d98:	add	x3, x3, #0x0
   10d9c:	mov	w2, #0xfa                  	// #250
   10da0:	bl	0 <__assert_fail>
   10da4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10da8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10dac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10db0:	add	x0, x0, #0x0
   10db4:	add	x1, x1, #0x0
   10db8:	add	x3, x3, #0x0
   10dbc:	mov	w2, #0x43                  	// #67
   10dc0:	bl	0 <__assert_fail>

0000000000010dc4 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE>:
   10dc4:	stp	x29, x30, [sp, #-16]!
   10dc8:	mov	x29, sp
   10dcc:	cmp	w0, #0x41
   10dd0:	b.hi	110e8 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x324>  // b.pmore
   10dd4:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   10dd8:	mov	w8, w0
   10ddc:	add	x9, x9, #0x0
   10de0:	adr	x10, 10df4 <_ZL19getAttrKindEncodingN4llvm9Attribute8AttrKindE+0x30>
   10de4:	ldrb	w11, [x9, x8]
   10de8:	add	x10, x10, x11, lsl #2
   10dec:	mov	w0, #0x1                   	// #1
   10df0:	br	x10
   10df4:	mov	w0, #0x33                  	// #51
   10df8:	ldp	x29, x30, [sp], #16
   10dfc:	ret
   10e00:	mov	w0, #0x25                  	// #37
   10e04:	ldp	x29, x30, [sp], #16
   10e08:	ret
   10e0c:	mov	w0, #0x2c                  	// #44
   10e10:	ldp	x29, x30, [sp], #16
   10e14:	ret
   10e18:	mov	w0, #0x20                  	// #32
   10e1c:	ldp	x29, x30, [sp], #16
   10e20:	ret
   10e24:	mov	w0, #0x27                  	// #39
   10e28:	ldp	x29, x30, [sp], #16
   10e2c:	ret
   10e30:	mov	w0, #0x39                  	// #57
   10e34:	ldp	x29, x30, [sp], #16
   10e38:	ret
   10e3c:	mov	w0, #0x13                  	// #19
   10e40:	ldp	x29, x30, [sp], #16
   10e44:	ret
   10e48:	mov	w0, #0x1a                  	// #26
   10e4c:	ldp	x29, x30, [sp], #16
   10e50:	ret
   10e54:	mov	w0, #0x36                  	// #54
   10e58:	ldp	x29, x30, [sp], #16
   10e5c:	ret
   10e60:	mov	w0, #0x2                   	// #2
   10e64:	ldp	x29, x30, [sp], #16
   10e68:	ret
   10e6c:	mov	w0, #0x3                   	// #3
   10e70:	ldp	x29, x30, [sp], #16
   10e74:	ret
   10e78:	mov	w0, #0x3c                  	// #60
   10e7c:	ldp	x29, x30, [sp], #16
   10e80:	ret
   10e84:	mov	w0, #0x31                  	// #49
   10e88:	ldp	x29, x30, [sp], #16
   10e8c:	ret
   10e90:	mov	w0, #0x4                   	// #4
   10e94:	ldp	x29, x30, [sp], #16
   10e98:	ret
   10e9c:	mov	w0, #0xc                   	// #12
   10ea0:	ldp	x29, x30, [sp], #16
   10ea4:	ret
   10ea8:	mov	w0, #0x3e                  	// #62
   10eac:	ldp	x29, x30, [sp], #16
   10eb0:	ret
   10eb4:	mov	w0, #0xf                   	// #15
   10eb8:	ldp	x29, x30, [sp], #16
   10ebc:	ret
   10ec0:	mov	w0, #0x16                  	// #22
   10ec4:	ldp	x29, x30, [sp], #16
   10ec8:	ret
   10ecc:	mov	w0, #0x1e                  	// #30
   10ed0:	ldp	x29, x30, [sp], #16
   10ed4:	ret
   10ed8:	mov	w0, #0x1f                  	// #31
   10edc:	ldp	x29, x30, [sp], #16
   10ee0:	ret
   10ee4:	mov	w0, #0x3a                  	// #58
   10ee8:	ldp	x29, x30, [sp], #16
   10eec:	ret
   10ef0:	mov	w0, #0x2f                  	// #47
   10ef4:	ldp	x29, x30, [sp], #16
   10ef8:	ret
   10efc:	mov	w0, #0x21                  	// #33
   10f00:	ldp	x29, x30, [sp], #16
   10f04:	ret
   10f08:	mov	w0, #0x2d                  	// #45
   10f0c:	ldp	x29, x30, [sp], #16
   10f10:	ret
   10f14:	mov	w0, #0x23                  	// #35
   10f18:	ldp	x29, x30, [sp], #16
   10f1c:	ret
   10f20:	mov	w0, #0x24                  	// #36
   10f24:	ldp	x29, x30, [sp], #16
   10f28:	ret
   10f2c:	mov	w0, #0x2b                  	// #43
   10f30:	ldp	x29, x30, [sp], #16
   10f34:	ret
   10f38:	mov	w0, #0x29                  	// #41
   10f3c:	ldp	x29, x30, [sp], #16
   10f40:	ret
   10f44:	mov	w0, #0x2a                  	// #42
   10f48:	ldp	x29, x30, [sp], #16
   10f4c:	ret
   10f50:	mov	w0, #0x26                  	// #38
   10f54:	ldp	x29, x30, [sp], #16
   10f58:	ret
   10f5c:	mov	w0, #0x5                   	// #5
   10f60:	ldp	x29, x30, [sp], #16
   10f64:	ret
   10f68:	mov	w0, #0x32                  	// #50
   10f6c:	ldp	x29, x30, [sp], #16
   10f70:	ret
   10f74:	mov	w0, #0x28                  	// #40
   10f78:	ldp	x29, x30, [sp], #16
   10f7c:	ret
   10f80:	mov	w0, #0x6                   	// #6
   10f84:	ldp	x29, x30, [sp], #16
   10f88:	ret
   10f8c:	mov	w0, #0x7                   	// #7
   10f90:	ldp	x29, x30, [sp], #16
   10f94:	ret
   10f98:	mov	w0, #0x8                   	// #8
   10f9c:	ldp	x29, x30, [sp], #16
   10fa0:	ret
   10fa4:	mov	w0, #0x9                   	// #9
   10fa8:	ldp	x29, x30, [sp], #16
   10fac:	ret
   10fb0:	mov	w0, #0xa                   	// #10
   10fb4:	ldp	x29, x30, [sp], #16
   10fb8:	ret
   10fbc:	mov	w0, #0xb                   	// #11
   10fc0:	ldp	x29, x30, [sp], #16
   10fc4:	ret
   10fc8:	mov	w0, #0x38                  	// #56
   10fcc:	ldp	x29, x30, [sp], #16
   10fd0:	ret
   10fd4:	mov	w0, #0x11                  	// #17
   10fd8:	ldp	x29, x30, [sp], #16
   10fdc:	ret
   10fe0:	mov	w0, #0x3f                  	// #63
   10fe4:	ldp	x29, x30, [sp], #16
   10fe8:	ret
   10fec:	mov	w0, #0x12                  	// #18
   10ff0:	ldp	x29, x30, [sp], #16
   10ff4:	ret
   10ff8:	mov	w0, #0x15                  	// #21
   10ffc:	ldp	x29, x30, [sp], #16
   11000:	ret
   11004:	mov	w0, #0x17                  	// #23
   11008:	ldp	x29, x30, [sp], #16
   1100c:	ret
   11010:	mov	w0, #0x18                  	// #24
   11014:	ldp	x29, x30, [sp], #16
   11018:	ret
   1101c:	mov	w0, #0x37                  	// #55
   11020:	ldp	x29, x30, [sp], #16
   11024:	ret
   11028:	mov	w0, #0x3d                  	// #61
   1102c:	ldp	x29, x30, [sp], #16
   11030:	ret
   11034:	mov	w0, #0x34                  	// #52
   11038:	ldp	x29, x30, [sp], #16
   1103c:	ret
   11040:	mov	w0, #0x22                  	// #34
   11044:	ldp	x29, x30, [sp], #16
   11048:	ret
   1104c:	mov	w0, #0xd                   	// #13
   11050:	ldp	x29, x30, [sp], #16
   11054:	ret
   11058:	mov	w0, #0x30                  	// #48
   1105c:	ldp	x29, x30, [sp], #16
   11060:	ret
   11064:	mov	w0, #0x10                  	// #16
   11068:	ldp	x29, x30, [sp], #16
   1106c:	ret
   11070:	mov	w0, #0x14                  	// #20
   11074:	ldp	x29, x30, [sp], #16
   11078:	ret
   1107c:	mov	w0, #0x1b                  	// #27
   11080:	ldp	x29, x30, [sp], #16
   11084:	ret
   11088:	mov	w0, #0x1d                  	// #29
   1108c:	ldp	x29, x30, [sp], #16
   11090:	ret
   11094:	mov	w0, #0x2e                  	// #46
   11098:	ldp	x29, x30, [sp], #16
   1109c:	ret
   110a0:	mov	w0, #0xe                   	// #14
   110a4:	ldp	x29, x30, [sp], #16
   110a8:	ret
   110ac:	mov	w0, #0x40                  	// #64
   110b0:	ldp	x29, x30, [sp], #16
   110b4:	ret
   110b8:	mov	w0, #0x19                  	// #25
   110bc:	ldp	x29, x30, [sp], #16
   110c0:	ret
   110c4:	mov	w0, #0x1c                  	// #28
   110c8:	ldp	x29, x30, [sp], #16
   110cc:	ret
   110d0:	mov	w0, #0x35                  	// #53
   110d4:	ldp	x29, x30, [sp], #16
   110d8:	ret
   110dc:	mov	w0, #0x3b                  	// #59
   110e0:	ldp	x29, x30, [sp], #16
   110e4:	ret
   110e8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   110ec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   110f0:	add	x0, x0, #0x0
   110f4:	add	x1, x1, #0x0
   110f8:	mov	w2, #0x2df                 	// #735
   110fc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   11100:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11104:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11108:	add	x0, x0, #0x0
   1110c:	add	x1, x1, #0x0
   11110:	mov	w2, #0x2dc                 	// #732
   11114:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   11118:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1111c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11120:	add	x0, x0, #0x0
   11124:	add	x1, x1, #0x0
   11128:	mov	w2, #0x2da                 	// #730
   1112c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000011130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb>:
   11130:	str	d8, [sp, #-112]!
   11134:	stp	x29, x30, [sp, #16]
   11138:	stp	x28, x27, [sp, #32]
   1113c:	stp	x26, x25, [sp, #48]
   11140:	stp	x24, x23, [sp, #64]
   11144:	stp	x22, x21, [sp, #80]
   11148:	stp	x20, x19, [sp, #96]
   1114c:	mov	x29, sp
   11150:	sub	sp, sp, #0x2d0
   11154:	cmp	w1, w2
   11158:	str	w2, [sp, #44]
   1115c:	b.eq	13adc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x29ac>  // b.none
   11160:	mov	x27, x0
   11164:	ldr	x0, [x0]
   11168:	mov	w20, w1
   1116c:	mov	w1, #0xb                   	// #11
   11170:	mov	w2, #0x4                   	// #4
   11174:	mov	w22, w3
   11178:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1117c:	str	x27, [x29, #8]
   11180:	tbz	w22, #0, 1130c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1dc>
   11184:	mov	w0, #0x220                 	// #544
   11188:	bl	0 <_Znwm>
   1118c:	adrp	x26, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11190:	ldr	x26, [x26]
   11194:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11198:	ldr	d8, [x8]
   1119c:	movi	v0.2s, #0x1
   111a0:	str	d0, [x0, #8]
   111a4:	movi	v0.2d, #0x0
   111a8:	mov	x24, x0
   111ac:	add	x10, x26, #0x10
   111b0:	mov	x23, x0
   111b4:	mov	w9, #0x7                   	// #7
   111b8:	stp	q0, q0, [x0, #48]
   111bc:	stp	q0, q0, [x0, #80]
   111c0:	stp	q0, q0, [x0, #112]
   111c4:	stp	q0, q0, [x0, #144]
   111c8:	stp	q0, q0, [x0, #176]
   111cc:	stp	q0, q0, [x0, #208]
   111d0:	stp	q0, q0, [x0, #240]
   111d4:	stp	q0, q0, [x0, #272]
   111d8:	stp	q0, q0, [x0, #304]
   111dc:	stp	q0, q0, [x0, #336]
   111e0:	stp	q0, q0, [x0, #368]
   111e4:	stp	q0, q0, [x0, #400]
   111e8:	stp	q0, q0, [x0, #432]
   111ec:	stp	q0, q0, [x0, #464]
   111f0:	stp	q0, q0, [x0, #496]
   111f4:	str	x10, [x0]
   111f8:	str	q0, [x24, #32]!
   111fc:	str	q0, [x0, #528]
   11200:	str	x24, [x23, #16]!
   11204:	str	d8, [x0, #24]
   11208:	str	x9, [x24]
   1120c:	ldp	w8, w9, [x0, #24]
   11210:	ldur	w11, [sp, #115]
   11214:	ldr	w12, [sp, #112]
   11218:	mov	w10, #0xff                  	// #255
   1121c:	cmp	w8, w9
   11220:	strb	w10, [x0, #40]
   11224:	str	w11, [x0, #44]
   11228:	stur	w12, [x0, #41]
   1122c:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11230:	add	w8, w8, #0x1
   11234:	mov	x22, x0
   11238:	cmp	w8, w9
   1123c:	str	w8, [x0, #24]
   11240:	b.cs	13b00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x29d0>  // b.hs, b.nlast
   11244:	ldr	x9, [x22, #16]
   11248:	mov	w10, #0x6                   	// #6
   1124c:	add	x8, x9, w8, uxtw #4
   11250:	str	xzr, [x8]
   11254:	strb	w10, [x8, #8]
   11258:	ldur	w9, [sp, #115]
   1125c:	ldr	w10, [sp, #112]
   11260:	str	w9, [x8, #12]
   11264:	stur	w10, [x8, #9]
   11268:	ldp	w8, w9, [x22, #24]
   1126c:	cmp	w8, w9
   11270:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11274:	ldr	w10, [sp, #44]
   11278:	add	w8, w8, #0x1
   1127c:	mov	w11, #0x20                  	// #32
   11280:	cmp	w8, w9
   11284:	clz	w10, w10
   11288:	sub	w19, w11, w10
   1128c:	str	w8, [x22, #24]
   11290:	b.cs	13b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x29ec>  // b.hs, b.nlast
   11294:	ldr	x9, [x22, #16]
   11298:	mov	w10, #0x2                   	// #2
   1129c:	add	x8, x9, w8, uxtw #4
   112a0:	str	x19, [x8]
   112a4:	strb	w10, [x8, #8]
   112a8:	ldur	w9, [sp, #115]
   112ac:	ldr	w10, [sp, #112]
   112b0:	str	w9, [x8, #12]
   112b4:	stur	w10, [x8, #9]
   112b8:	ldp	w8, w9, [x22, #24]
   112bc:	cmp	w8, w9
   112c0:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   112c4:	add	w8, w8, #0x1
   112c8:	str	w8, [x22, #24]
   112cc:	ldr	x24, [x27]
   112d0:	mov	x1, x23
   112d4:	stp	x23, x22, [x29, #-24]
   112d8:	mov	x0, x24
   112dc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   112e0:	ldp	x1, x8, [x24, #32]
   112e4:	add	x25, x24, #0x18
   112e8:	cmp	x1, x8
   112ec:	b.eq	11314 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e4>  // b.none
   112f0:	stp	x23, xzr, [x1]
   112f4:	ldur	x8, [x29, #-16]
   112f8:	add	x19, x1, #0x10
   112fc:	stp	xzr, xzr, [x29, #-24]
   11300:	str	x8, [x1, #8]
   11304:	str	x19, [x24, #32]
   11308:	b	11324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1f4>
   1130c:	stp	xzr, xzr, [sp, #16]
   11310:	b	11a6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x93c>
   11314:	sub	x2, x29, #0x18
   11318:	mov	x0, x25
   1131c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11320:	ldr	x19, [x24, #32]
   11324:	adrp	x21, 0 <__pthread_key_create>
   11328:	ldur	x22, [x29, #-16]
   1132c:	ldr	x25, [x25]
   11330:	ldr	x21, [x21]
   11334:	cbz	x22, 113c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x298>
   11338:	add	x8, x22, #0x8
   1133c:	cbz	x21, 1135c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x22c>
   11340:	ldaxr	w9, [x8]
   11344:	sub	w10, w9, #0x1
   11348:	stlxr	w11, w10, [x8]
   1134c:	cbnz	w11, 11340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x210>
   11350:	cmp	w9, #0x1
   11354:	b.eq	11370 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x240>  // b.none
   11358:	b	113c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x298>
   1135c:	ldr	w9, [x8]
   11360:	sub	w10, w9, #0x1
   11364:	str	w10, [x8]
   11368:	cmp	w9, #0x1
   1136c:	b.ne	113c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x298>  // b.any
   11370:	mov	x23, x19
   11374:	mov	x19, x22
   11378:	ldr	x8, [x19], #12
   1137c:	mov	x0, x22
   11380:	ldr	x8, [x8, #16]
   11384:	blr	x8
   11388:	cbz	x21, 113a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x270>
   1138c:	ldaxr	w8, [x19]
   11390:	sub	w9, w8, #0x1
   11394:	stlxr	w10, w9, [x19]
   11398:	cbnz	w10, 1138c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x25c>
   1139c:	b	113ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x27c>
   113a0:	ldr	w8, [x19]
   113a4:	sub	w9, w8, #0x1
   113a8:	str	w9, [x19]
   113ac:	cmp	w8, #0x1
   113b0:	mov	x19, x23
   113b4:	b.ne	113c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x298>  // b.any
   113b8:	ldr	x8, [x22]
   113bc:	mov	x0, x22
   113c0:	ldr	x8, [x8, #24]
   113c4:	blr	x8
   113c8:	mov	w0, #0x220                 	// #544
   113cc:	bl	0 <_Znwm>
   113d0:	movi	v0.2s, #0x1
   113d4:	add	x8, x26, #0x10
   113d8:	str	d0, [x0, #8]
   113dc:	movi	v0.2d, #0x0
   113e0:	mov	x24, x0
   113e4:	mov	x23, x0
   113e8:	mov	w9, #0x8                   	// #8
   113ec:	str	x8, [x0]
   113f0:	stp	q0, q0, [x0, #48]
   113f4:	stp	q0, q0, [x0, #80]
   113f8:	stp	q0, q0, [x0, #112]
   113fc:	stp	q0, q0, [x0, #144]
   11400:	stp	q0, q0, [x0, #176]
   11404:	stp	q0, q0, [x0, #208]
   11408:	stp	q0, q0, [x0, #240]
   1140c:	stp	q0, q0, [x0, #272]
   11410:	stp	q0, q0, [x0, #304]
   11414:	stp	q0, q0, [x0, #336]
   11418:	stp	q0, q0, [x0, #368]
   1141c:	stp	q0, q0, [x0, #400]
   11420:	stp	q0, q0, [x0, #432]
   11424:	stp	q0, q0, [x0, #464]
   11428:	stp	q0, q0, [x0, #496]
   1142c:	str	q0, [x24, #32]!
   11430:	str	q0, [x0, #528]
   11434:	str	x24, [x23, #16]!
   11438:	str	d8, [x0, #24]
   1143c:	str	x9, [x24]
   11440:	ldp	w8, w9, [x0, #24]
   11444:	ldur	w11, [sp, #115]
   11448:	ldr	w12, [sp, #112]
   1144c:	mov	w10, #0xff                  	// #255
   11450:	cmp	w8, w9
   11454:	strb	w10, [x0, #40]
   11458:	str	w11, [x0, #44]
   1145c:	stur	w12, [x0, #41]
   11460:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11464:	add	w8, w8, #0x1
   11468:	mov	x22, x0
   1146c:	cmp	w8, w9
   11470:	str	w8, [x0, #24]
   11474:	b.cs	13b38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a08>  // b.hs, b.nlast
   11478:	ldr	x9, [x22, #16]
   1147c:	mov	w10, #0x6                   	// #6
   11480:	add	x8, x9, w8, uxtw #4
   11484:	str	xzr, [x8]
   11488:	strb	w10, [x8, #8]
   1148c:	ldur	w9, [sp, #115]
   11490:	ldr	w10, [sp, #112]
   11494:	str	w9, [x8, #12]
   11498:	stur	w10, [x8, #9]
   1149c:	ldp	w8, w9, [x22, #24]
   114a0:	cmp	w8, w9
   114a4:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   114a8:	add	w8, w8, #0x1
   114ac:	cmp	w8, w9
   114b0:	str	w8, [x22, #24]
   114b4:	b.cs	13b54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a24>  // b.hs, b.nlast
   114b8:	ldr	x9, [x22, #16]
   114bc:	mov	w10, #0x8                   	// #8
   114c0:	mov	w11, #0x2                   	// #2
   114c4:	add	x8, x9, w8, uxtw #4
   114c8:	str	x10, [x8]
   114cc:	strb	w11, [x8, #8]
   114d0:	ldur	w9, [sp, #115]
   114d4:	ldr	w10, [sp, #112]
   114d8:	str	w9, [x8, #12]
   114dc:	stur	w10, [x8, #9]
   114e0:	ldp	w8, w9, [x22, #24]
   114e4:	cmp	w8, w9
   114e8:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   114ec:	add	w8, w8, #0x1
   114f0:	str	w8, [x22, #24]
   114f4:	ldr	x24, [x27]
   114f8:	mov	x1, x23
   114fc:	stp	x23, x22, [x29, #-48]
   11500:	mov	x0, x24
   11504:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11508:	ldp	x1, x8, [x24, #32]
   1150c:	add	x23, x24, #0x18
   11510:	cmp	x1, x8
   11514:	b.eq	11538 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x408>  // b.none
   11518:	str	xzr, [x1, #8]
   1151c:	ldur	q0, [x29, #-48]
   11520:	add	x28, x1, #0x10
   11524:	stur	xzr, [x29, #-40]
   11528:	str	q0, [x1]
   1152c:	stur	xzr, [x29, #-48]
   11530:	str	x28, [x24, #32]
   11534:	b	11548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x418>
   11538:	sub	x2, x29, #0x30
   1153c:	mov	x0, x23
   11540:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11544:	ldr	x28, [x24, #32]
   11548:	ldur	x22, [x29, #-40]
   1154c:	ldr	x8, [x23]
   11550:	str	x8, [sp, #48]
   11554:	cbz	x22, 115e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4b8>
   11558:	add	x8, x22, #0x8
   1155c:	cbz	x21, 1157c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x44c>
   11560:	ldaxr	w9, [x8]
   11564:	sub	w10, w9, #0x1
   11568:	stlxr	w11, w10, [x8]
   1156c:	cbnz	w11, 11560 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x430>
   11570:	cmp	w9, #0x1
   11574:	b.eq	11590 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x460>  // b.none
   11578:	b	115e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4b8>
   1157c:	ldr	w9, [x8]
   11580:	sub	w10, w9, #0x1
   11584:	str	w10, [x8]
   11588:	cmp	w9, #0x1
   1158c:	b.ne	115e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4b8>  // b.any
   11590:	mov	x23, x19
   11594:	mov	x19, x22
   11598:	ldr	x8, [x19], #12
   1159c:	mov	x0, x22
   115a0:	ldr	x8, [x8, #16]
   115a4:	blr	x8
   115a8:	cbz	x21, 115c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x490>
   115ac:	ldaxr	w8, [x19]
   115b0:	sub	w9, w8, #0x1
   115b4:	stlxr	w10, w9, [x19]
   115b8:	cbnz	w10, 115ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x47c>
   115bc:	b	115cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x49c>
   115c0:	ldr	w8, [x19]
   115c4:	sub	w9, w8, #0x1
   115c8:	str	w9, [x19]
   115cc:	cmp	w8, #0x1
   115d0:	mov	x19, x23
   115d4:	b.ne	115e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x4b8>  // b.any
   115d8:	ldr	x8, [x22]
   115dc:	mov	x0, x22
   115e0:	ldr	x8, [x8, #24]
   115e4:	blr	x8
   115e8:	mov	w0, #0x220                 	// #544
   115ec:	bl	0 <_Znwm>
   115f0:	movi	v0.2s, #0x1
   115f4:	add	x8, x26, #0x10
   115f8:	str	d0, [x0, #8]
   115fc:	movi	v0.2d, #0x0
   11600:	mov	x24, x0
   11604:	mov	x23, x0
   11608:	mov	w9, #0x9                   	// #9
   1160c:	str	x8, [x0]
   11610:	stp	q0, q0, [x0, #48]
   11614:	stp	q0, q0, [x0, #80]
   11618:	stp	q0, q0, [x0, #112]
   1161c:	stp	q0, q0, [x0, #144]
   11620:	stp	q0, q0, [x0, #176]
   11624:	stp	q0, q0, [x0, #208]
   11628:	stp	q0, q0, [x0, #240]
   1162c:	stp	q0, q0, [x0, #272]
   11630:	stp	q0, q0, [x0, #304]
   11634:	stp	q0, q0, [x0, #336]
   11638:	stp	q0, q0, [x0, #368]
   1163c:	stp	q0, q0, [x0, #400]
   11640:	stp	q0, q0, [x0, #432]
   11644:	stp	q0, q0, [x0, #464]
   11648:	stp	q0, q0, [x0, #496]
   1164c:	str	q0, [x24, #32]!
   11650:	str	q0, [x0, #528]
   11654:	str	x24, [x23, #16]!
   11658:	str	d8, [x0, #24]
   1165c:	str	x9, [x24]
   11660:	ldp	w8, w9, [x0, #24]
   11664:	ldur	w11, [sp, #115]
   11668:	ldr	w12, [sp, #112]
   1166c:	mov	w10, #0xff                  	// #255
   11670:	cmp	w8, w9
   11674:	strb	w10, [x0, #40]
   11678:	str	w11, [x0, #44]
   1167c:	stur	w12, [x0, #41]
   11680:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11684:	add	w8, w8, #0x1
   11688:	mov	x22, x0
   1168c:	cmp	w8, w9
   11690:	str	w8, [x0, #24]
   11694:	b.cs	13b70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a40>  // b.hs, b.nlast
   11698:	ldr	x9, [x22, #16]
   1169c:	mov	w10, #0x6                   	// #6
   116a0:	str	x28, [sp, #56]
   116a4:	add	x8, x9, w8, uxtw #4
   116a8:	str	xzr, [x8]
   116ac:	strb	w10, [x8, #8]
   116b0:	ldur	w9, [sp, #115]
   116b4:	ldr	w10, [sp, #112]
   116b8:	str	w9, [x8, #12]
   116bc:	stur	w10, [x8, #9]
   116c0:	ldp	w8, w9, [x22, #24]
   116c4:	cmp	w8, w9
   116c8:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   116cc:	add	w8, w8, #0x1
   116d0:	mov	x28, x25
   116d4:	cmp	w8, w9
   116d8:	str	w8, [x22, #24]
   116dc:	b.cs	13b8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a5c>  // b.hs, b.nlast
   116e0:	ldr	x9, [x22, #16]
   116e4:	mov	w10, #0x7                   	// #7
   116e8:	mov	w11, #0x2                   	// #2
   116ec:	add	x8, x9, w8, uxtw #4
   116f0:	str	x10, [x8]
   116f4:	strb	w11, [x8, #8]
   116f8:	ldur	w9, [sp, #115]
   116fc:	ldr	w10, [sp, #112]
   11700:	str	w9, [x8, #12]
   11704:	stur	w10, [x8, #9]
   11708:	ldp	w8, w9, [x22, #24]
   1170c:	cmp	w8, w9
   11710:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11714:	add	w8, w8, #0x1
   11718:	str	w8, [x22, #24]
   1171c:	ldr	x24, [x27]
   11720:	mov	x1, x23
   11724:	mov	x25, x21
   11728:	mov	x21, x26
   1172c:	mov	x0, x24
   11730:	stp	x23, x22, [x29, #-64]
   11734:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11738:	ldp	x1, x8, [x24, #32]
   1173c:	add	x23, x24, #0x18
   11740:	cmp	x1, x8
   11744:	b.eq	11768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x638>  // b.none
   11748:	str	xzr, [x1, #8]
   1174c:	ldur	q0, [x29, #-64]
   11750:	add	x26, x1, #0x10
   11754:	stur	xzr, [x29, #-56]
   11758:	str	q0, [x1]
   1175c:	stur	xzr, [x29, #-64]
   11760:	str	x26, [x24, #32]
   11764:	b	11778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x648>
   11768:	sub	x2, x29, #0x40
   1176c:	mov	x0, x23
   11770:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11774:	ldr	x26, [x24, #32]
   11778:	ldur	x22, [x29, #-56]
   1177c:	ldr	x27, [x23]
   11780:	cbz	x22, 11814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6e4>
   11784:	add	x8, x22, #0x8
   11788:	cbz	x25, 117a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x678>
   1178c:	ldaxr	w9, [x8]
   11790:	sub	w10, w9, #0x1
   11794:	stlxr	w11, w10, [x8]
   11798:	cbnz	w11, 1178c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x65c>
   1179c:	cmp	w9, #0x1
   117a0:	b.eq	117bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x68c>  // b.none
   117a4:	b	11814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6e4>
   117a8:	ldr	w9, [x8]
   117ac:	sub	w10, w9, #0x1
   117b0:	str	w10, [x8]
   117b4:	cmp	w9, #0x1
   117b8:	b.ne	11814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6e4>  // b.any
   117bc:	mov	x23, x19
   117c0:	mov	x19, x22
   117c4:	ldr	x8, [x19], #12
   117c8:	mov	x0, x22
   117cc:	ldr	x8, [x8, #16]
   117d0:	blr	x8
   117d4:	cbz	x25, 117ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6bc>
   117d8:	ldaxr	w8, [x19]
   117dc:	sub	w9, w8, #0x1
   117e0:	stlxr	w10, w9, [x19]
   117e4:	cbnz	w10, 117d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6a8>
   117e8:	b	117f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6c8>
   117ec:	ldr	w8, [x19]
   117f0:	sub	w9, w8, #0x1
   117f4:	str	w9, [x19]
   117f8:	cmp	w8, #0x1
   117fc:	mov	x19, x23
   11800:	b.ne	11814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x6e4>  // b.any
   11804:	ldr	x8, [x22]
   11808:	mov	x0, x22
   1180c:	ldr	x8, [x8, #24]
   11810:	blr	x8
   11814:	mov	w0, #0x220                 	// #544
   11818:	bl	0 <_Znwm>
   1181c:	movi	v0.2s, #0x1
   11820:	add	x8, x21, #0x10
   11824:	str	d0, [x0, #8]
   11828:	movi	v0.2d, #0x0
   1182c:	mov	x24, x0
   11830:	mov	x23, x0
   11834:	mov	w9, #0x9                   	// #9
   11838:	str	x8, [x0]
   1183c:	stp	q0, q0, [x0, #48]
   11840:	stp	q0, q0, [x0, #80]
   11844:	stp	q0, q0, [x0, #112]
   11848:	stp	q0, q0, [x0, #144]
   1184c:	stp	q0, q0, [x0, #176]
   11850:	stp	q0, q0, [x0, #208]
   11854:	stp	q0, q0, [x0, #240]
   11858:	stp	q0, q0, [x0, #272]
   1185c:	stp	q0, q0, [x0, #304]
   11860:	stp	q0, q0, [x0, #336]
   11864:	stp	q0, q0, [x0, #368]
   11868:	stp	q0, q0, [x0, #400]
   1186c:	stp	q0, q0, [x0, #432]
   11870:	stp	q0, q0, [x0, #464]
   11874:	stp	q0, q0, [x0, #496]
   11878:	str	q0, [x24, #32]!
   1187c:	str	q0, [x0, #528]
   11880:	str	x24, [x23, #16]!
   11884:	str	d8, [x0, #24]
   11888:	str	x9, [x24]
   1188c:	ldp	w8, w9, [x0, #24]
   11890:	ldur	w11, [sp, #115]
   11894:	ldr	w12, [sp, #112]
   11898:	mov	w10, #0xff                  	// #255
   1189c:	cmp	w8, w9
   118a0:	strb	w10, [x0, #40]
   118a4:	str	w11, [x0, #44]
   118a8:	stur	w12, [x0, #41]
   118ac:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   118b0:	add	w8, w8, #0x1
   118b4:	mov	x22, x0
   118b8:	cmp	w8, w9
   118bc:	str	w8, [x0, #24]
   118c0:	b.cs	13ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a78>  // b.hs, b.nlast
   118c4:	ldr	x9, [x22, #16]
   118c8:	mov	w10, #0x6                   	// #6
   118cc:	add	x8, x9, w8, uxtw #4
   118d0:	str	xzr, [x8]
   118d4:	strb	w10, [x8, #8]
   118d8:	ldur	w9, [sp, #115]
   118dc:	ldr	w10, [sp, #112]
   118e0:	str	w9, [x8, #12]
   118e4:	stur	w10, [x8, #9]
   118e8:	ldp	w8, w9, [x22, #24]
   118ec:	cmp	w8, w9
   118f0:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   118f4:	add	w8, w8, #0x1
   118f8:	cmp	w8, w9
   118fc:	str	w8, [x22, #24]
   11900:	b.cs	13bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2a94>  // b.hs, b.nlast
   11904:	ldr	x9, [x22, #16]
   11908:	mov	w10, #0x8                   	// #8
   1190c:	add	x8, x9, w8, uxtw #4
   11910:	str	xzr, [x8]
   11914:	strb	w10, [x8, #8]
   11918:	ldur	w9, [sp, #115]
   1191c:	ldr	w10, [sp, #112]
   11920:	str	w9, [x8, #12]
   11924:	stur	w10, [x8, #9]
   11928:	ldp	w8, w9, [x22, #24]
   1192c:	cmp	w8, w9
   11930:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11934:	ldp	x11, x10, [sp, #48]
   11938:	add	w8, w8, #0x1
   1193c:	str	w8, [x22, #24]
   11940:	sub	x9, x19, x28
   11944:	sub	x10, x10, x11
   11948:	sub	x11, x26, x27
   1194c:	ldr	x27, [x29, #8]
   11950:	lsr	x9, x9, #4
   11954:	lsr	x10, x10, #4
   11958:	add	w8, w9, #0x3
   1195c:	ldr	x24, [x27]
   11960:	lsr	x11, x11, #4
   11964:	str	w8, [sp, #28]
   11968:	add	w8, w10, #0x3
   1196c:	str	w8, [sp, #20]
   11970:	add	w8, w11, #0x3
   11974:	mov	x0, x24
   11978:	mov	x1, x23
   1197c:	str	w8, [sp, #24]
   11980:	stp	x23, x22, [x29, #-80]
   11984:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11988:	ldp	x1, x8, [x24, #32]
   1198c:	add	x22, x24, #0x18
   11990:	cmp	x1, x8
   11994:	b.eq	119b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x888>  // b.none
   11998:	str	xzr, [x1, #8]
   1199c:	ldur	q0, [x29, #-80]
   119a0:	add	x8, x1, #0x10
   119a4:	stur	xzr, [x29, #-72]
   119a8:	str	q0, [x1]
   119ac:	stur	xzr, [x29, #-80]
   119b0:	str	x8, [x24, #32]
   119b4:	b	119c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x898>
   119b8:	sub	x2, x29, #0x50
   119bc:	mov	x0, x22
   119c0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   119c4:	ldr	x8, [x24, #32]
   119c8:	ldr	x9, [x22]
   119cc:	ldur	x22, [x29, #-72]
   119d0:	sub	x8, x8, x9
   119d4:	lsr	x8, x8, #4
   119d8:	add	w8, w8, #0x3
   119dc:	str	w8, [sp, #16]
   119e0:	cbz	x22, 11a6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x93c>
   119e4:	add	x8, x22, #0x8
   119e8:	cbz	x25, 11a08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x8d8>
   119ec:	ldaxr	w9, [x8]
   119f0:	sub	w10, w9, #0x1
   119f4:	stlxr	w11, w10, [x8]
   119f8:	cbnz	w11, 119ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x8bc>
   119fc:	cmp	w9, #0x1
   11a00:	b.eq	11a1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x8ec>  // b.none
   11a04:	b	11a6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x93c>
   11a08:	ldr	w9, [x8]
   11a0c:	sub	w10, w9, #0x1
   11a10:	str	w10, [x8]
   11a14:	cmp	w9, #0x1
   11a18:	b.ne	11a6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x93c>  // b.any
   11a1c:	mov	x19, x22
   11a20:	ldr	x8, [x19], #12
   11a24:	mov	x0, x22
   11a28:	ldr	x8, [x8, #16]
   11a2c:	blr	x8
   11a30:	cbz	x25, 11a48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x918>
   11a34:	ldaxr	w8, [x19]
   11a38:	sub	w9, w8, #0x1
   11a3c:	stlxr	w10, w9, [x19]
   11a40:	cbnz	w10, 11a34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x904>
   11a44:	b	11a54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x924>
   11a48:	ldr	w8, [x19]
   11a4c:	sub	w9, w8, #0x1
   11a50:	str	w9, [x19]
   11a54:	cmp	w8, #0x1
   11a58:	b.ne	11a6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x93c>  // b.any
   11a5c:	ldr	x8, [x22]
   11a60:	mov	x0, x22
   11a64:	ldr	x8, [x8, #24]
   11a68:	blr	x8
   11a6c:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11a70:	ldr	d0, [x9]
   11a74:	ldr	w22, [sp, #44]
   11a78:	add	x10, x27, #0x18
   11a7c:	add	x8, sp, #0x70
   11a80:	str	x10, [sp, #48]
   11a84:	add	x10, sp, #0x40
   11a88:	mov	x26, xzr
   11a8c:	add	x8, x8, #0x10
   11a90:	add	x9, x10, #0x8
   11a94:	str	x9, [sp, #32]
   11a98:	str	x8, [sp, #56]
   11a9c:	str	x8, [sp, #112]
   11aa0:	str	d0, [sp, #120]
   11aa4:	b	11adc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x9ac>
   11aa8:	mov	x21, x26
   11aac:	mov	w3, wzr
   11ab0:	mov	w26, #0x2                   	// #2
   11ab4:	ldr	x27, [x29, #8]
   11ab8:	add	x2, sp, #0x70
   11abc:	mov	w1, w26
   11ac0:	ldr	x0, [x27]
   11ac4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11ac8:	mov	x26, x21
   11acc:	add	w20, w20, #0x1
   11ad0:	cmp	w20, w22
   11ad4:	str	wzr, [sp, #120]
   11ad8:	b.eq	13abc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x298c>  // b.none
   11adc:	ldr	x8, [x27, #136]
   11ae0:	mov	w9, w20
   11ae4:	lsl	x9, x9, #4
   11ae8:	ldr	x25, [x8, x9]
   11aec:	ldr	x24, [x25]
   11af0:	cmp	x24, x26
   11af4:	b.eq	11bc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa90>  // b.none
   11af8:	ldr	w8, [x27, #72]
   11afc:	ldr	x9, [x27, #56]
   11b00:	cbz	w8, 11b5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa2c>
   11b04:	orr	x10, x24, #0x8
   11b08:	cmn	x10, #0x8
   11b0c:	b.eq	13c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2af0>  // b.none
   11b10:	ubfx	x10, x24, #4, #28
   11b14:	eor	w11, w10, w24, lsr #9
   11b18:	sub	w10, w8, #0x1
   11b1c:	and	w11, w10, w11
   11b20:	add	x12, x9, w11, uxtw #4
   11b24:	ldr	x13, [x12]
   11b28:	cmp	x13, x24
   11b2c:	b.eq	11b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa30>  // b.none
   11b30:	mov	w14, #0x1                   	// #1
   11b34:	cmn	x13, #0x8
   11b38:	b.eq	11b5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa2c>  // b.none
   11b3c:	add	w11, w11, w14
   11b40:	and	w11, w11, w10
   11b44:	add	x12, x9, w11, uxtw #4
   11b48:	ldr	x13, [x12]
   11b4c:	add	w14, w14, #0x1
   11b50:	cmp	x13, x24
   11b54:	b.eq	11b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa30>  // b.none
   11b58:	b	11b34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa04>
   11b5c:	add	x12, x9, x8, lsl #4
   11b60:	add	x8, x9, x8, lsl #4
   11b64:	cmp	x12, x8
   11b68:	b.eq	13c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b10>  // b.none
   11b6c:	ldr	w8, [x12, #8]
   11b70:	ldr	w9, [sp, #124]
   11b74:	sub	w19, w8, #0x1
   11b78:	cbz	w9, 132c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2198>
   11b7c:	mov	w8, wzr
   11b80:	ldr	x9, [sp, #112]
   11b84:	str	x19, [x9, w8, uxtw #3]
   11b88:	ldp	w8, w9, [sp, #120]
   11b8c:	cmp	w8, w9
   11b90:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11b94:	add	x3, x8, #0x1
   11b98:	str	w3, [sp, #120]
   11b9c:	ldr	x0, [x27]
   11ba0:	ldr	x2, [sp, #112]
   11ba4:	mov	w1, #0x4                   	// #4
   11ba8:	mov	x6, #0x100000001           	// #4294967297
   11bac:	mov	x4, xzr
   11bb0:	mov	x5, xzr
   11bb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11bb8:	mov	x26, x24
   11bbc:	str	wzr, [sp, #120]
   11bc0:	cbz	x25, 13c00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ad0>
   11bc4:	ldrb	w8, [x25, #16]
   11bc8:	cmp	w8, #0x14
   11bcc:	b.ne	11c98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xb68>  // b.any
   11bd0:	ldrb	w8, [x25, #96]
   11bd4:	ldrb	w9, [x25, #97]
   11bd8:	ldr	w10, [x25, #100]
   11bdc:	ldr	w11, [sp, #124]
   11be0:	orr	x8, x8, x9, lsl #1
   11be4:	lsl	w9, w10, #2
   11be8:	and	x9, x9, #0x4
   11bec:	orr	x19, x8, x9
   11bf0:	cbz	w11, 135a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2474>
   11bf4:	mov	w8, wzr
   11bf8:	ldr	x9, [sp, #112]
   11bfc:	str	x19, [x9, w8, uxtw #3]
   11c00:	ldp	w8, w9, [sp, #120]
   11c04:	cmp	w8, w9
   11c08:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11c0c:	add	w8, w8, #0x1
   11c10:	str	w8, [sp, #120]
   11c14:	ldr	x19, [x25, #32]
   11c18:	cmp	w8, w9
   11c1c:	b.cs	135c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2490>  // b.hs, b.nlast
   11c20:	ldr	x9, [sp, #112]
   11c24:	str	x19, [x9, w8, uxtw #3]
   11c28:	ldp	w9, w8, [sp, #120]
   11c2c:	cmp	w9, w8
   11c30:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11c34:	add	x9, x9, #0x1
   11c38:	str	w9, [sp, #120]
   11c3c:	ldp	x23, x19, [x25, #24]
   11c40:	sub	x8, x8, x9
   11c44:	cmp	x19, x8
   11c48:	b.ls	11c60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xb30>  // b.plast
   11c4c:	ldr	x1, [sp, #56]
   11c50:	add	x2, x19, x9
   11c54:	add	x0, sp, #0x70
   11c58:	mov	w3, #0x8                   	// #8
   11c5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11c60:	cmp	x19, #0x0
   11c64:	b.le	11d2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xbfc>
   11c68:	ldr	x9, [sp, #112]
   11c6c:	ldr	w8, [sp, #120]
   11c70:	add	x10, x23, x19
   11c74:	sub	x10, x10, x23
   11c78:	add	x10, x10, #0x1
   11c7c:	add	x9, x9, x8, lsl #3
   11c80:	ldrb	w11, [x23], #1
   11c84:	sub	x10, x10, #0x1
   11c88:	cmp	x10, #0x1
   11c8c:	str	x11, [x9], #8
   11c90:	b.gt	11c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xb50>
   11c94:	b	11d30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xc00>
   11c98:	cmp	w8, #0x11
   11c9c:	b.cs	13c60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b30>  // b.hs, b.nlast
   11ca0:	mov	x0, x25
   11ca4:	bl	0 <_ZNK4llvm8Constant11isNullValueEv>
   11ca8:	tbnz	w0, #0, 11aa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x978>
   11cac:	ldrb	w8, [x25, #16]
   11cb0:	cmp	w8, #0x9
   11cb4:	b.eq	11e38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xd08>  // b.none
   11cb8:	cmp	w8, #0xe
   11cbc:	b.eq	11df8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xcc8>  // b.none
   11cc0:	cmp	w8, #0xd
   11cc4:	b.ne	11e48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xd18>  // b.any
   11cc8:	ldr	w19, [x25, #32]
   11ccc:	add	x24, x25, #0x18
   11cd0:	cmp	w19, #0x40
   11cd4:	b.hi	11f84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xe54>  // b.pmore
   11cd8:	cbz	w19, 13c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b50>
   11cdc:	ldr	x8, [x24]
   11ce0:	neg	x9, x19
   11ce4:	lsl	x8, x8, x9
   11ce8:	asr	x8, x8, x9
   11cec:	lsl	x19, x8, #1
   11cf0:	tbnz	x8, #63, 121a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1074>
   11cf4:	ldp	w8, w9, [sp, #120]
   11cf8:	cmp	w8, w9
   11cfc:	b.cs	121b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1088>  // b.hs, b.nlast
   11d00:	ldr	x9, [sp, #112]
   11d04:	str	x19, [x9, w8, uxtw #3]
   11d08:	ldp	w8, w9, [sp, #120]
   11d0c:	cmp	w8, w9
   11d10:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11d14:	add	w8, w8, #0x1
   11d18:	mov	x21, x26
   11d1c:	mov	w26, #0x4                   	// #4
   11d20:	str	w8, [sp, #120]
   11d24:	mov	w3, #0x5                   	// #5
   11d28:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   11d2c:	ldr	w8, [sp, #120]
   11d30:	ldr	w9, [sp, #124]
   11d34:	add	x8, x8, x19
   11d38:	cmp	x8, x9
   11d3c:	b.hi	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.pmore
   11d40:	str	w8, [sp, #120]
   11d44:	ldr	x19, [x25, #64]
   11d48:	cmp	w9, w8
   11d4c:	b.ls	135dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x24ac>  // b.plast
   11d50:	ldr	x9, [sp, #112]
   11d54:	str	x19, [x9, w8, uxtw #3]
   11d58:	ldp	w9, w8, [sp, #120]
   11d5c:	cmp	w9, w8
   11d60:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11d64:	add	x9, x9, #0x1
   11d68:	str	w9, [sp, #120]
   11d6c:	ldp	x23, x19, [x25, #56]
   11d70:	sub	x8, x8, x9
   11d74:	cmp	x19, x8
   11d78:	b.ls	11d90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xc60>  // b.plast
   11d7c:	ldr	x1, [sp, #56]
   11d80:	add	x2, x19, x9
   11d84:	add	x0, sp, #0x70
   11d88:	mov	w3, #0x8                   	// #8
   11d8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11d90:	cmp	x19, #0x0
   11d94:	b.le	11dc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xc98>
   11d98:	ldr	x9, [sp, #112]
   11d9c:	ldr	w8, [sp, #120]
   11da0:	add	x10, x23, x19
   11da4:	sub	x10, x10, x23
   11da8:	add	x10, x10, #0x1
   11dac:	add	x9, x9, x8, lsl #3
   11db0:	ldrb	w11, [x23], #1
   11db4:	sub	x10, x10, #0x1
   11db8:	cmp	x10, #0x1
   11dbc:	str	x11, [x9], #8
   11dc0:	b.gt	11db0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xc80>
   11dc4:	b	11dcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xc9c>
   11dc8:	ldr	w8, [sp, #120]
   11dcc:	ldr	w9, [sp, #124]
   11dd0:	add	x8, x8, x19
   11dd4:	cmp	x8, x9
   11dd8:	b.hi	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.pmore
   11ddc:	str	w8, [sp, #120]
   11de0:	ldr	x0, [x27]
   11de4:	add	x2, sp, #0x70
   11de8:	mov	w1, #0x17                  	// #23
   11dec:	mov	w3, wzr
   11df0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   11df4:	b	11acc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x99c>
   11df8:	ldr	x8, [x25]
   11dfc:	ldrb	w8, [x8, #8]
   11e00:	sub	w9, w8, #0x1
   11e04:	cmp	w9, #0x3
   11e08:	b.cc	12018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xee8>  // b.lo, b.ul, b.last
   11e0c:	sub	w9, w8, #0x5
   11e10:	cmp	w9, #0x2
   11e14:	b.cs	121d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10a4>  // b.hs, b.nlast
   11e18:	ldr	x19, [x25, #32]!
   11e1c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   11e20:	add	x8, sp, #0x40
   11e24:	cmp	x0, x19
   11e28:	b.eq	12294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1164>  // b.none
   11e2c:	mov	x0, x25
   11e30:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   11e34:	b	1229c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x116c>
   11e38:	mov	x21, x26
   11e3c:	mov	w3, wzr
   11e40:	mov	w26, #0x3                   	// #3
   11e44:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   11e48:	ldr	x21, [x29, #8]
   11e4c:	sub	w9, w8, #0xb
   11e50:	cmp	w9, #0x1
   11e54:	b.hi	12054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf24>  // b.pmore
   11e58:	mov	w1, #0x8                   	// #8
   11e5c:	mov	x0, x25
   11e60:	bl	0 <_ZNK4llvm22ConstantDataSequential8isStringEj>
   11e64:	ldrb	w8, [x25, #16]
   11e68:	sub	w9, w8, #0xb
   11e6c:	tbz	w0, #0, 12048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf18>
   11e70:	and	w8, w9, #0xff
   11e74:	cmp	w8, #0x2
   11e78:	b.cs	13ca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b70>  // b.hs, b.nlast
   11e7c:	mov	x0, x25
   11e80:	mov	x21, x26
   11e84:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
   11e88:	mov	w24, w0
   11e8c:	mov	x0, x25
   11e90:	bl	0 <_ZNK4llvm22ConstantDataSequential9isCStringEv>
   11e94:	and	w8, w0, #0x1
   11e98:	sub	w19, w24, w8
   11e9c:	ldr	w8, [sp, #20]
   11ea0:	tst	w0, #0x1
   11ea4:	mov	w27, w0
   11ea8:	csel	w8, wzr, w8, ne  // ne = any
   11eac:	str	w8, [sp, #12]
   11eb0:	mov	w8, #0x8                   	// #8
   11eb4:	cinc	w26, w8, ne  // ne = any
   11eb8:	cbz	w19, 123e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x12b0>
   11ebc:	mov	w28, wzr
   11ec0:	mov	w23, w27
   11ec4:	b	11ed8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xda8>
   11ec8:	mov	w27, wzr
   11ecc:	add	w28, w28, #0x1
   11ed0:	cmp	w19, w28
   11ed4:	b.eq	123e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x12b4>  // b.none
   11ed8:	mov	x0, x25
   11edc:	mov	w1, w28
   11ee0:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
   11ee4:	ldp	w8, w9, [sp, #120]
   11ee8:	mov	x24, x0
   11eec:	and	x22, x0, #0xff
   11ef0:	cmp	w8, w9
   11ef4:	b.cs	11f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xe38>  // b.hs, b.nlast
   11ef8:	ldr	x9, [sp, #112]
   11efc:	str	x22, [x9, w8, uxtw #3]
   11f00:	ldp	w8, w9, [sp, #120]
   11f04:	cmp	w8, w9
   11f08:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11f0c:	ldr	w22, [sp, #44]
   11f10:	bic	w9, w23, w24, lsr #7
   11f14:	add	w8, w8, #0x1
   11f18:	and	w23, w9, #0x1
   11f1c:	str	w8, [sp, #120]
   11f20:	tbz	w27, #0, 11ec8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xd98>
   11f24:	sub	w8, w24, #0x30
   11f28:	and	w8, w8, #0xff
   11f2c:	cmp	w8, #0xa
   11f30:	mov	w27, #0x1                   	// #1
   11f34:	b.cc	11ecc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xd9c>  // b.lo, b.ul, b.last
   11f38:	and	w8, w24, #0xffffffdf
   11f3c:	sub	w8, w8, #0x41
   11f40:	and	w8, w8, #0xff
   11f44:	cmp	w8, #0x1a
   11f48:	b.cc	11ecc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xd9c>  // b.lo, b.ul, b.last
   11f4c:	and	w8, w24, #0xff
   11f50:	cmp	w8, #0x2e
   11f54:	mov	w27, #0x1                   	// #1
   11f58:	b.eq	11ecc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xd9c>  // b.none
   11f5c:	cmp	w8, #0x5f
   11f60:	b.eq	11ecc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xd9c>  // b.none
   11f64:	b	11ec8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xd98>
   11f68:	ldr	x1, [sp, #56]
   11f6c:	add	x0, sp, #0x70
   11f70:	mov	w3, #0x8                   	// #8
   11f74:	mov	x2, xzr
   11f78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11f7c:	ldr	w8, [sp, #120]
   11f80:	b	11ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xdc8>
   11f84:	mov	x0, x24
   11f88:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   11f8c:	subs	w8, w19, w0
   11f90:	ldr	x19, [x24]
   11f94:	sub	w8, w8, #0x1
   11f98:	lsr	w8, w8, #6
   11f9c:	mov	w9, #0x1                   	// #1
   11fa0:	csinc	w23, w9, w8, eq  // eq = none
   11fa4:	ldr	x8, [x19]
   11fa8:	lsl	x24, x8, #1
   11fac:	tbnz	x8, #63, 11fe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xeb8>
   11fb0:	ldp	w8, w9, [sp, #120]
   11fb4:	cmp	w8, w9
   11fb8:	b.cs	11ffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xecc>  // b.hs, b.nlast
   11fbc:	ldr	x9, [sp, #112]
   11fc0:	str	x24, [x9, w8, uxtw #3]
   11fc4:	ldp	w8, w9, [sp, #120]
   11fc8:	cmp	w8, w9
   11fcc:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   11fd0:	add	w8, w8, #0x1
   11fd4:	subs	w23, w23, #0x1
   11fd8:	add	x19, x19, #0x8
   11fdc:	str	w8, [sp, #120]
   11fe0:	b.ne	11fa4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xe74>  // b.any
   11fe4:	b	12038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf08>
   11fe8:	ldp	w8, w9, [sp, #120]
   11fec:	neg	x10, x24
   11ff0:	orr	x24, x10, #0x1
   11ff4:	cmp	w8, w9
   11ff8:	b.cc	11fbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xe8c>  // b.lo, b.ul, b.last
   11ffc:	ldr	x1, [sp, #56]
   12000:	add	x0, sp, #0x70
   12004:	mov	w3, #0x8                   	// #8
   12008:	mov	x2, xzr
   1200c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   12010:	ldr	w8, [sp, #120]
   12014:	b	11fbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xe8c>
   12018:	ldr	x19, [x25, #32]!
   1201c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   12020:	add	x8, sp, #0x40
   12024:	cmp	x0, x19
   12028:	b.eq	12154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1024>  // b.none
   1202c:	mov	x0, x25
   12030:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   12034:	b	1215c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x102c>
   12038:	mov	x21, x26
   1203c:	mov	w3, wzr
   12040:	mov	w26, #0x5                   	// #5
   12044:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   12048:	and	w9, w9, #0xff
   1204c:	cmp	w9, #0x1
   12050:	b.ls	1232c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x11fc>  // b.plast
   12054:	sub	w9, w8, #0x6
   12058:	cmp	w9, #0x2
   1205c:	b.hi	120f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xfc0>  // b.pmore
   12060:	ldr	w8, [x25, #20]
   12064:	tbnz	w8, #30, 121fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10cc>
   12068:	and	w8, w8, #0xfffffff
   1206c:	mov	w9, #0x18                  	// #24
   12070:	mneg	x9, x8, x9
   12074:	add	x19, x25, x9
   12078:	mov	x21, x26
   1207c:	cbz	x8, 1220c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10dc>
   12080:	add	x8, x8, x8, lsl #1
   12084:	lsl	x23, x8, #3
   12088:	ldr	x1, [x19]
   1208c:	ldr	x0, [sp, #48]
   12090:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   12094:	ldp	w8, w9, [sp, #120]
   12098:	mov	w22, w0
   1209c:	cmp	w8, w9
   120a0:	b.cs	120d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xfa4>  // b.hs, b.nlast
   120a4:	ldr	x9, [sp, #112]
   120a8:	str	x22, [x9, w8, uxtw #3]
   120ac:	ldp	w8, w9, [sp, #120]
   120b0:	cmp	w8, w9
   120b4:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   120b8:	add	w8, w8, #0x1
   120bc:	add	x19, x19, #0x18
   120c0:	subs	x23, x23, #0x18
   120c4:	mov	w26, #0x7                   	// #7
   120c8:	str	w8, [sp, #120]
   120cc:	b.ne	12088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf58>  // b.any
   120d0:	b	12148 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1018>
   120d4:	ldr	x1, [sp, #56]
   120d8:	add	x0, sp, #0x70
   120dc:	mov	w3, #0x8                   	// #8
   120e0:	mov	x2, xzr
   120e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   120e8:	ldr	w8, [sp, #120]
   120ec:	b	120a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf74>
   120f0:	cmp	w8, #0x4
   120f4:	b.eq	12218 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x10e8>  // b.none
   120f8:	cmp	w8, #0x5
   120fc:	b.ne	13cc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b90>  // b.any
   12100:	ldrh	w8, [x25, #18]
   12104:	sub	w9, w8, #0xc
   12108:	cmp	w9, #0x33
   1210c:	b.hi	12698 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1568>  // b.pmore
   12110:	adrp	x12, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   12114:	add	x12, x12, #0x0
   12118:	adr	x10, 12128 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xff8>
   1211c:	ldrh	w11, [x12, x9, lsl #1]
   12120:	add	x10, x10, x11, lsl #2
   12124:	br	x10
   12128:	ldr	w9, [x25, #20]
   1212c:	and	x8, x9, #0xfffffff
   12130:	cbz	w8, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   12134:	tbnz	w9, #30, 127e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x16b8>
   12138:	mov	w9, #0x18                  	// #24
   1213c:	mneg	x8, x8, x9
   12140:	add	x10, x25, x8
   12144:	b	127ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x16bc>
   12148:	ldr	w3, [sp, #28]
   1214c:	ldr	w22, [sp, #44]
   12150:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   12154:	mov	x0, x25
   12158:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   1215c:	ldr	w19, [sp, #72]
   12160:	cmp	w19, #0x41
   12164:	b.cs	12170 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1040>  // b.hs, b.nlast
   12168:	add	x9, sp, #0x40
   1216c:	b	12188 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1058>
   12170:	add	x0, sp, #0x40
   12174:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   12178:	sub	w8, w19, w0
   1217c:	cmp	w8, #0x41
   12180:	b.cs	13ce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2bb0>  // b.hs, b.nlast
   12184:	ldr	x9, [sp, #64]
   12188:	ldp	w8, w10, [sp, #120]
   1218c:	ldr	x19, [x9]
   12190:	cmp	w8, w10
   12194:	b.cs	12460 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1330>  // b.hs, b.nlast
   12198:	ldr	x9, [sp, #112]
   1219c:	str	x19, [x9, w8, uxtw #3]
   121a0:	b	122f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x11c0>
   121a4:	ldp	w8, w9, [sp, #120]
   121a8:	neg	x10, x19
   121ac:	orr	x19, x10, #0x1
   121b0:	cmp	w8, w9
   121b4:	b.cc	11d00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xbd0>  // b.lo, b.ul, b.last
   121b8:	ldr	x1, [sp, #56]
   121bc:	add	x0, sp, #0x70
   121c0:	mov	w3, #0x8                   	// #8
   121c4:	mov	x2, xzr
   121c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   121cc:	ldr	w8, [sp, #120]
   121d0:	b	11d00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xbd0>
   121d4:	cmp	w8, #0x4
   121d8:	b.ne	13d00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2bd0>  // b.any
   121dc:	ldr	x19, [x25, #32]!
   121e0:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   121e4:	add	x8, sp, #0x40
   121e8:	cmp	x0, x19
   121ec:	b.eq	12404 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x12d4>  // b.none
   121f0:	mov	x0, x25
   121f4:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   121f8:	b	1240c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x12dc>
   121fc:	ldur	x19, [x25, #-8]
   12200:	and	x8, x8, #0xfffffff
   12204:	mov	x21, x26
   12208:	cbnz	x8, 12080 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xf50>
   1220c:	ldr	w3, [sp, #28]
   12210:	mov	w26, #0x7                   	// #7
   12214:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   12218:	ldur	x8, [x25, #-48]
   1221c:	ldr	x8, [x8]
   12220:	cbz	x8, 13d20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2bf0>
   12224:	ldrb	w9, [x8, #8]
   12228:	cmp	w9, #0xf
   1222c:	b.ne	13d40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2c10>  // b.any
   12230:	ldr	w9, [x21, #72]
   12234:	ldr	x10, [x21, #56]
   12238:	cbz	w9, 12574 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1444>
   1223c:	orr	x11, x8, #0x8
   12240:	cmn	x11, #0x8
   12244:	b.eq	13c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2af0>  // b.none
   12248:	ubfx	x11, x8, #4, #28
   1224c:	eor	w12, w11, w8, lsr #9
   12250:	sub	w11, w9, #0x1
   12254:	and	w12, w11, w12
   12258:	add	x13, x10, w12, uxtw #4
   1225c:	ldr	x14, [x13]
   12260:	cmp	x14, x8
   12264:	b.eq	12578 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1448>  // b.none
   12268:	mov	w15, #0x1                   	// #1
   1226c:	cmn	x14, #0x8
   12270:	b.eq	12574 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1444>  // b.none
   12274:	add	w12, w12, w15
   12278:	and	w12, w12, w11
   1227c:	add	x13, x10, w12, uxtw #4
   12280:	ldr	x14, [x13]
   12284:	add	w15, w15, #0x1
   12288:	cmp	x14, x8
   1228c:	b.eq	12578 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1448>  // b.none
   12290:	b	1226c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x113c>
   12294:	mov	x0, x25
   12298:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   1229c:	ldr	w9, [sp, #72]
   122a0:	ldr	x10, [sp, #64]
   122a4:	ldp	w8, w11, [sp, #120]
   122a8:	cmp	w9, #0x41
   122ac:	add	x9, sp, #0x40
   122b0:	csel	x19, x9, x10, cc  // cc = lo, ul, last
   122b4:	cmp	w8, w11
   122b8:	b.cs	136b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2580>  // b.hs, b.nlast
   122bc:	ldr	x9, [sp, #112]
   122c0:	ldr	x10, [x19]
   122c4:	str	x10, [x9, w8, uxtw #3]
   122c8:	ldp	w8, w9, [sp, #120]
   122cc:	cmp	w8, w9
   122d0:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   122d4:	add	w8, w8, #0x1
   122d8:	cmp	w8, w9
   122dc:	str	w8, [sp, #120]
   122e0:	b.cs	136cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x259c>  // b.hs, b.nlast
   122e4:	ldr	x9, [sp, #112]
   122e8:	ldr	x10, [x19, #8]
   122ec:	str	x10, [x9, w8, uxtw #3]
   122f0:	ldp	w8, w9, [sp, #120]
   122f4:	cmp	w8, w9
   122f8:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   122fc:	ldr	w9, [sp, #72]
   12300:	mov	x21, x26
   12304:	add	w8, w8, #0x1
   12308:	str	w8, [sp, #120]
   1230c:	cmp	w9, #0x41
   12310:	b.cc	12320 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x11f0>  // b.lo, b.ul, b.last
   12314:	ldr	x0, [sp, #64]
   12318:	cbz	x0, 12320 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x11f0>
   1231c:	bl	0 <_ZdaPv>
   12320:	mov	w3, wzr
   12324:	mov	w26, #0x6                   	// #6
   12328:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   1232c:	ldr	x8, [x25]
   12330:	cbz	x8, 13d60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2c30>
   12334:	ldrb	w9, [x8, #8]
   12338:	cmp	w9, #0xe
   1233c:	b.eq	12348 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1218>  // b.none
   12340:	cmp	w9, #0x10
   12344:	b.ne	13d80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2c50>  // b.any
   12348:	ldr	x8, [x8, #24]
   1234c:	cbz	x8, 13da0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2c70>
   12350:	ldrb	w19, [x8, #8]
   12354:	mov	x0, x25
   12358:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
   1235c:	cmp	w19, #0xb
   12360:	mov	w27, w0
   12364:	mov	x21, x26
   12368:	b.ne	1247c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x134c>  // b.any
   1236c:	cbz	w27, 12634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1504>
   12370:	mov	w24, wzr
   12374:	mov	x0, x25
   12378:	mov	w1, w24
   1237c:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
   12380:	ldp	w8, w9, [sp, #120]
   12384:	mov	x26, x0
   12388:	cmp	w8, w9
   1238c:	b.cs	123c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1294>  // b.hs, b.nlast
   12390:	ldr	x9, [sp, #112]
   12394:	str	x26, [x9, w8, uxtw #3]
   12398:	ldp	w8, w9, [sp, #120]
   1239c:	cmp	w8, w9
   123a0:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   123a4:	add	w24, w24, #0x1
   123a8:	mov	w3, wzr
   123ac:	add	w8, w8, #0x1
   123b0:	cmp	w27, w24
   123b4:	mov	w26, #0x16                  	// #22
   123b8:	str	w8, [sp, #120]
   123bc:	b.ne	12374 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1244>  // b.any
   123c0:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   123c4:	ldr	x1, [sp, #56]
   123c8:	add	x0, sp, #0x70
   123cc:	mov	w3, #0x8                   	// #8
   123d0:	mov	x2, xzr
   123d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   123d8:	ldr	w8, [sp, #120]
   123dc:	b	12390 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1260>
   123e0:	mov	w23, w27
   123e4:	ldr	w8, [sp, #24]
   123e8:	ldr	w9, [sp, #12]
   123ec:	tst	w23, #0x1
   123f0:	csel	w8, w8, w9, ne  // ne = any
   123f4:	ldr	w9, [sp, #16]
   123f8:	tst	w27, #0x1
   123fc:	csel	w3, w9, w8, ne  // ne = any
   12400:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   12404:	mov	x0, x25
   12408:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   1240c:	ldr	w9, [sp, #72]
   12410:	ldr	x10, [sp, #64]
   12414:	ldp	w8, w11, [sp, #120]
   12418:	cmp	w9, #0x41
   1241c:	add	x9, sp, #0x40
   12420:	csel	x19, x9, x10, cc  // cc = lo, ul, last
   12424:	ldp	x10, x9, [x19]
   12428:	cmp	w8, w11
   1242c:	extr	x22, x9, x10, #16
   12430:	b.cs	136e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x25b8>  // b.hs, b.nlast
   12434:	ldr	x9, [sp, #112]
   12438:	str	x22, [x9, w8, uxtw #3]
   1243c:	ldp	w8, w9, [sp, #120]
   12440:	cmp	w8, w9
   12444:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12448:	add	w8, w8, #0x1
   1244c:	str	w8, [sp, #120]
   12450:	ldrh	w19, [x19]
   12454:	ldr	w22, [sp, #44]
   12458:	cmp	w8, w9
   1245c:	b.cc	12198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1068>  // b.lo, b.ul, b.last
   12460:	ldr	x1, [sp, #56]
   12464:	add	x0, sp, #0x70
   12468:	mov	w3, #0x8                   	// #8
   1246c:	mov	x2, xzr
   12470:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   12474:	ldr	w8, [sp, #120]
   12478:	b	12198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1068>
   1247c:	cbz	w27, 12634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1504>
   12480:	mov	w28, wzr
   12484:	b	124a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1374>
   12488:	add	x0, sp, #0x40
   1248c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   12490:	add	w28, w28, #0x1
   12494:	mov	w3, wzr
   12498:	cmp	w27, w28
   1249c:	mov	w26, #0x16                  	// #22
   124a0:	b.eq	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>  // b.none
   124a4:	add	x8, sp, #0x40
   124a8:	mov	x0, x25
   124ac:	mov	w1, w28
   124b0:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsAPFloatEj>
   124b4:	ldr	x19, [sp, #72]
   124b8:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   124bc:	add	x8, sp, #0x60
   124c0:	cmp	x0, x19
   124c4:	b.eq	124d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13a4>  // b.none
   124c8:	ldr	x0, [sp, #32]
   124cc:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   124d0:	b	124dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13ac>
   124d4:	ldr	x0, [sp, #32]
   124d8:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   124dc:	ldr	w19, [sp, #104]
   124e0:	cmp	w19, #0x41
   124e4:	b.cs	124f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13c0>  // b.hs, b.nlast
   124e8:	add	x8, sp, #0x60
   124ec:	b	12510 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13e0>
   124f0:	add	x0, sp, #0x60
   124f4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   124f8:	sub	w8, w19, w0
   124fc:	cmp	w8, #0x40
   12500:	b.ls	1250c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13dc>  // b.plast
   12504:	mov	x19, #0xffffffffffffffff    	// #-1
   12508:	b	12514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13e4>
   1250c:	ldr	x8, [sp, #96]
   12510:	ldr	x19, [x8]
   12514:	ldp	w8, w9, [sp, #120]
   12518:	cmp	w8, w9
   1251c:	b.cs	12558 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1428>  // b.hs, b.nlast
   12520:	ldr	x9, [sp, #112]
   12524:	str	x19, [x9, w8, uxtw #3]
   12528:	ldp	w8, w9, [sp, #120]
   1252c:	cmp	w8, w9
   12530:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12534:	ldr	w9, [sp, #104]
   12538:	add	w8, w8, #0x1
   1253c:	str	w8, [sp, #120]
   12540:	cmp	w9, #0x41
   12544:	b.cc	12488 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1358>  // b.lo, b.ul, b.last
   12548:	ldr	x0, [sp, #96]
   1254c:	cbz	x0, 12488 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1358>
   12550:	bl	0 <_ZdaPv>
   12554:	b	12488 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1358>
   12558:	ldr	x1, [sp, #56]
   1255c:	add	x0, sp, #0x70
   12560:	mov	w3, #0x8                   	// #8
   12564:	mov	x2, xzr
   12568:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1256c:	ldr	w8, [sp, #120]
   12570:	b	12520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x13f0>
   12574:	add	x13, x10, x9, lsl #4
   12578:	add	x8, x10, x9, lsl #4
   1257c:	cmp	x13, x8
   12580:	b.eq	13c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b10>  // b.none
   12584:	ldp	w8, w9, [sp, #120]
   12588:	ldr	w10, [x13, #8]
   1258c:	cmp	w8, w9
   12590:	sub	w19, w10, #0x1
   12594:	b.cs	13704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x25d4>  // b.hs, b.nlast
   12598:	ldr	x9, [sp, #112]
   1259c:	str	x19, [x9, w8, uxtw #3]
   125a0:	ldp	w8, w9, [sp, #120]
   125a4:	cmp	w8, w9
   125a8:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   125ac:	add	w8, w8, #0x1
   125b0:	str	w8, [sp, #120]
   125b4:	ldur	x1, [x25, #-48]
   125b8:	ldr	x0, [sp, #48]
   125bc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   125c0:	ldp	w8, w9, [sp, #120]
   125c4:	mov	w19, w0
   125c8:	cmp	w8, w9
   125cc:	b.cs	13720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x25f0>  // b.hs, b.nlast
   125d0:	ldr	x9, [sp, #112]
   125d4:	str	x19, [x9, w8, uxtw #3]
   125d8:	ldp	w8, w9, [sp, #120]
   125dc:	cmp	w8, w9
   125e0:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   125e4:	add	w8, w8, #0x1
   125e8:	str	w8, [sp, #120]
   125ec:	ldur	x1, [x25, #-24]
   125f0:	ldr	x0, [sp, #48]
   125f4:	bl	0 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE>
   125f8:	ldp	w8, w9, [sp, #120]
   125fc:	mov	w19, w0
   12600:	cmp	w8, w9
   12604:	b.cs	1373c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x260c>  // b.hs, b.nlast
   12608:	ldr	x9, [sp, #112]
   1260c:	str	x19, [x9, w8, uxtw #3]
   12610:	ldp	w8, w9, [sp, #120]
   12614:	cmp	w8, w9
   12618:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   1261c:	mov	x21, x26
   12620:	mov	w3, wzr
   12624:	add	w8, w8, #0x1
   12628:	mov	w26, #0x15                  	// #21
   1262c:	str	w8, [sp, #120]
   12630:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   12634:	mov	w3, wzr
   12638:	mov	w26, #0x16                  	// #22
   1263c:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   12640:	ldr	w8, [x25, #20]
   12644:	and	w8, w8, #0xfffffff
   12648:	cmp	w8, #0x1
   1264c:	b.ne	13dc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2c90>  // b.any
   12650:	ldp	w8, w9, [sp, #120]
   12654:	cmp	w8, w9
   12658:	b.cs	137c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2698>  // b.hs, b.nlast
   1265c:	ldr	x9, [sp, #112]
   12660:	str	xzr, [x9, w8, uxtw #3]
   12664:	ldp	w8, w9, [sp, #120]
   12668:	cmp	w8, w9
   1266c:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12670:	add	w8, w8, #0x1
   12674:	str	w8, [sp, #120]
   12678:	ldr	w9, [x25, #20]
   1267c:	and	x8, x9, #0xfffffff
   12680:	cbz	w8, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   12684:	tbnz	w9, #30, 12998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1868>
   12688:	mov	w9, #0x18                  	// #24
   1268c:	mneg	x8, x8, x9
   12690:	add	x8, x25, x8
   12694:	b	1299c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x186c>
   12698:	sub	w9, w8, #0x26
   1269c:	cmp	w9, #0xc
   126a0:	b.hi	12a1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x18ec>  // b.pmore
   126a4:	cmp	w9, #0xd
   126a8:	b.cs	13de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2cb0>  // b.hs, b.nlast
   126ac:	ldp	w8, w10, [sp, #120]
   126b0:	and	x19, x9, #0xffff
   126b4:	cmp	w8, w10
   126b8:	b.cs	139dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x28ac>  // b.hs, b.nlast
   126bc:	ldr	x9, [sp, #112]
   126c0:	str	x19, [x9, w8, uxtw #3]
   126c4:	ldp	w8, w9, [sp, #120]
   126c8:	cmp	w8, w9
   126cc:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   126d0:	add	w8, w8, #0x1
   126d4:	str	w8, [sp, #120]
   126d8:	ldr	w11, [x25, #20]
   126dc:	and	x10, x11, #0xfffffff
   126e0:	cbz	w10, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   126e4:	tbnz	w11, #30, 132e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x21b4>
   126e8:	mov	w11, #0x18                  	// #24
   126ec:	mneg	x10, x10, x11
   126f0:	add	x12, x25, x10
   126f4:	b	132e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x21b8>
   126f8:	mov	x0, x25
   126fc:	bl	0 <_ZNK4llvm11GEPOperator20getSourceElementTypeEv>
   12700:	ldr	w8, [x21, #72]
   12704:	ldr	x9, [x21, #56]
   12708:	cbz	w8, 12d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c34>
   1270c:	orr	x10, x0, #0x8
   12710:	cmn	x10, #0x8
   12714:	b.eq	13c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2af0>  // b.none
   12718:	ubfx	x10, x0, #4, #28
   1271c:	eor	w11, w10, w0, lsr #9
   12720:	sub	w10, w8, #0x1
   12724:	and	w11, w11, w10
   12728:	add	x12, x9, w11, uxtw #4
   1272c:	ldr	x13, [x12]
   12730:	cmp	x13, x0
   12734:	b.eq	12d68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c38>  // b.none
   12738:	mov	w14, #0x1                   	// #1
   1273c:	cmn	x13, #0x8
   12740:	b.eq	12d64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c34>  // b.none
   12744:	add	w11, w11, w14
   12748:	and	w11, w11, w10
   1274c:	add	x12, x9, w11, uxtw #4
   12750:	ldr	x13, [x12]
   12754:	add	w14, w14, #0x1
   12758:	cmp	x13, x0
   1275c:	b.eq	12d68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c38>  // b.none
   12760:	b	1273c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x160c>
   12764:	ldr	w9, [x25, #20]
   12768:	and	x8, x9, #0xfffffff
   1276c:	cbz	w8, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   12770:	tbnz	w9, #30, 12a90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1960>
   12774:	mov	w9, #0x18                  	// #24
   12778:	mneg	x8, x8, x9
   1277c:	add	x8, x25, x8
   12780:	b	12a94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1964>
   12784:	ldr	w9, [x25, #20]
   12788:	and	x8, x9, #0xfffffff
   1278c:	cbz	w8, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   12790:	tbnz	w9, #30, 12af0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x19c0>
   12794:	mov	w9, #0x18                  	// #24
   12798:	mneg	x8, x8, x9
   1279c:	add	x10, x25, x8
   127a0:	b	12af4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x19c4>
   127a4:	ldr	w9, [x25, #20]
   127a8:	and	x8, x9, #0xfffffff
   127ac:	cbz	w8, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   127b0:	tbnz	w9, #30, 12b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a30>
   127b4:	mov	w9, #0x18                  	// #24
   127b8:	mneg	x8, x8, x9
   127bc:	add	x8, x25, x8
   127c0:	b	12b64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a34>
   127c4:	ldr	w8, [x25, #20]
   127c8:	and	x9, x8, #0xfffffff
   127cc:	cbz	w9, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   127d0:	ldr	x10, [x25]
   127d4:	tbnz	w8, #30, 12bc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a90>
   127d8:	mov	w11, #0x18                  	// #24
   127dc:	mneg	x11, x9, x11
   127e0:	add	x11, x25, x11
   127e4:	b	12bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a94>
   127e8:	ldur	x10, [x25, #-8]
   127ec:	ldr	w8, [x21, #72]
   127f0:	ldr	x9, [x21, #56]
   127f4:	cbz	w8, 12858 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1728>
   127f8:	ldr	x10, [x10]
   127fc:	ldr	x10, [x10]
   12800:	orr	x11, x10, #0x8
   12804:	cmn	x11, #0x8
   12808:	b.eq	13c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2af0>  // b.none
   1280c:	ubfx	x11, x10, #4, #28
   12810:	eor	w12, w11, w10, lsr #9
   12814:	sub	w11, w8, #0x1
   12818:	and	w12, w12, w11
   1281c:	add	x13, x9, w12, uxtw #4
   12820:	ldr	x14, [x13]
   12824:	cmp	x14, x10
   12828:	b.eq	1285c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x172c>  // b.none
   1282c:	mov	w15, #0x1                   	// #1
   12830:	cmn	x14, #0x8
   12834:	b.eq	12858 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1728>  // b.none
   12838:	add	w12, w12, w15
   1283c:	and	w12, w12, w11
   12840:	add	x13, x9, w12, uxtw #4
   12844:	ldr	x14, [x13]
   12848:	add	w15, w15, #0x1
   1284c:	cmp	x14, x10
   12850:	b.eq	1285c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x172c>  // b.none
   12854:	b	12830 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1700>
   12858:	add	x13, x9, x8, lsl #4
   1285c:	add	x8, x9, x8, lsl #4
   12860:	cmp	x13, x8
   12864:	b.eq	13c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b10>  // b.none
   12868:	ldp	w8, w9, [sp, #120]
   1286c:	ldr	w10, [x13, #8]
   12870:	cmp	w8, w9
   12874:	sub	w19, w10, #0x1
   12878:	b.cs	13758 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2628>  // b.hs, b.nlast
   1287c:	ldr	x9, [sp, #112]
   12880:	str	x19, [x9, w8, uxtw #3]
   12884:	ldp	w8, w9, [sp, #120]
   12888:	cmp	w8, w9
   1288c:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12890:	add	w8, w8, #0x1
   12894:	str	w8, [sp, #120]
   12898:	ldr	w9, [x25, #20]
   1289c:	and	x8, x9, #0xfffffff
   128a0:	cbz	w8, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   128a4:	tbnz	w9, #30, 128b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1788>
   128a8:	mov	w9, #0x18                  	// #24
   128ac:	mneg	x8, x8, x9
   128b0:	add	x8, x25, x8
   128b4:	b	128bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x178c>
   128b8:	ldur	x8, [x25, #-8]
   128bc:	ldr	x1, [x8]
   128c0:	ldr	x0, [sp, #48]
   128c4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   128c8:	ldp	w8, w9, [sp, #120]
   128cc:	mov	w19, w0
   128d0:	cmp	w8, w9
   128d4:	b.cs	13774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2644>  // b.hs, b.nlast
   128d8:	ldr	x9, [sp, #112]
   128dc:	str	x19, [x9, w8, uxtw #3]
   128e0:	ldp	w8, w9, [sp, #120]
   128e4:	cmp	w8, w9
   128e8:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   128ec:	add	w8, w8, #0x1
   128f0:	str	w8, [sp, #120]
   128f4:	ldr	w9, [x25, #20]
   128f8:	and	x8, x9, #0xfffffff
   128fc:	cmp	w8, #0x1
   12900:	b.ls	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.plast
   12904:	tbnz	w9, #30, 12918 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x17e8>
   12908:	mov	w9, #0x18                  	// #24
   1290c:	mneg	x8, x8, x9
   12910:	add	x8, x25, x8
   12914:	b	1291c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x17ec>
   12918:	ldur	x8, [x25, #-8]
   1291c:	ldr	x1, [x8, #24]
   12920:	ldr	x0, [sp, #48]
   12924:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   12928:	ldp	w8, w9, [sp, #120]
   1292c:	mov	w19, w0
   12930:	cmp	w8, w9
   12934:	b.cs	13790 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2660>  // b.hs, b.nlast
   12938:	ldr	x9, [sp, #112]
   1293c:	str	x19, [x9, w8, uxtw #3]
   12940:	ldp	w8, w9, [sp, #120]
   12944:	cmp	w8, w9
   12948:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   1294c:	add	w8, w8, #0x1
   12950:	mov	x0, x25
   12954:	str	w8, [sp, #120]
   12958:	bl	0 <_ZNK4llvm12ConstantExpr12getPredicateEv>
   1295c:	ldp	w8, w9, [sp, #120]
   12960:	mov	w19, w0
   12964:	cmp	w8, w9
   12968:	b.cs	137ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x267c>  // b.hs, b.nlast
   1296c:	ldr	x9, [sp, #112]
   12970:	str	x19, [x9, w8, uxtw #3]
   12974:	ldp	w8, w9, [sp, #120]
   12978:	cmp	w8, w9
   1297c:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12980:	add	w8, w8, #0x1
   12984:	mov	x21, x26
   12988:	mov	w3, wzr
   1298c:	str	w8, [sp, #120]
   12990:	mov	w26, #0x11                  	// #17
   12994:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   12998:	ldur	x8, [x25, #-8]
   1299c:	ldr	x1, [x8]
   129a0:	ldr	x0, [sp, #48]
   129a4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   129a8:	ldp	w8, w9, [sp, #120]
   129ac:	mov	w19, w0
   129b0:	cmp	w8, w9
   129b4:	b.cs	137e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x26b4>  // b.hs, b.nlast
   129b8:	ldr	x9, [sp, #112]
   129bc:	str	x19, [x9, w8, uxtw #3]
   129c0:	ldp	w8, w9, [sp, #120]
   129c4:	cmp	w8, w9
   129c8:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   129cc:	add	w8, w8, #0x1
   129d0:	mov	x0, x25
   129d4:	str	w8, [sp, #120]
   129d8:	bl	13e50 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   129dc:	cbz	x0, 1323c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x210c>
   129e0:	ldp	w8, w9, [sp, #120]
   129e4:	mov	x24, x0
   129e8:	cmp	w8, w9
   129ec:	b.cs	139a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2874>  // b.hs, b.nlast
   129f0:	ldr	x9, [sp, #112]
   129f4:	str	x24, [x9, w8, uxtw #3]
   129f8:	ldp	w8, w9, [sp, #120]
   129fc:	cmp	w8, w9
   12a00:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12a04:	add	w8, w8, #0x1
   12a08:	mov	x21, x26
   12a0c:	mov	w3, wzr
   12a10:	str	w8, [sp, #120]
   12a14:	mov	w26, #0x19                  	// #25
   12a18:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   12a1c:	ldr	w9, [x25, #20]
   12a20:	and	w9, w9, #0xfffffff
   12a24:	cmp	w9, #0x2
   12a28:	b.ne	13df8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2cc8>  // b.any
   12a2c:	sub	w9, w8, #0xd
   12a30:	cmp	w9, #0x12
   12a34:	b.cs	13e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ce8>  // b.hs, b.nlast
   12a38:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   12a3c:	ldp	w8, w10, [sp, #120]
   12a40:	sxth	x9, w9
   12a44:	add	x11, x11, #0x0
   12a48:	ldr	x19, [x11, x9, lsl #3]
   12a4c:	cmp	w8, w10
   12a50:	b.cs	139f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x28c8>  // b.hs, b.nlast
   12a54:	ldr	x9, [sp, #112]
   12a58:	str	x19, [x9, w8, uxtw #3]
   12a5c:	ldp	w8, w9, [sp, #120]
   12a60:	cmp	w8, w9
   12a64:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12a68:	add	w8, w8, #0x1
   12a6c:	str	w8, [sp, #120]
   12a70:	ldr	w9, [x25, #20]
   12a74:	and	x8, x9, #0xfffffff
   12a78:	cbz	w8, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   12a7c:	tbnz	w9, #30, 13354 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2224>
   12a80:	mov	w9, #0x18                  	// #24
   12a84:	mneg	x8, x8, x9
   12a88:	add	x8, x25, x8
   12a8c:	b	13358 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2228>
   12a90:	ldur	x8, [x25, #-8]
   12a94:	ldr	x1, [x8]
   12a98:	ldr	x0, [sp, #48]
   12a9c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   12aa0:	ldp	w8, w9, [sp, #120]
   12aa4:	mov	w19, w0
   12aa8:	cmp	w8, w9
   12aac:	b.cs	13800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x26d0>  // b.hs, b.nlast
   12ab0:	ldr	x9, [sp, #112]
   12ab4:	str	x19, [x9, w8, uxtw #3]
   12ab8:	ldp	w8, w9, [sp, #120]
   12abc:	cmp	w8, w9
   12ac0:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12ac4:	add	w8, w8, #0x1
   12ac8:	str	w8, [sp, #120]
   12acc:	ldr	w9, [x25, #20]
   12ad0:	and	x8, x9, #0xfffffff
   12ad4:	cmp	w8, #0x1
   12ad8:	b.ls	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.plast
   12adc:	tbnz	w9, #30, 12be8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1ab8>
   12ae0:	mov	w9, #0x18                  	// #24
   12ae4:	mneg	x8, x8, x9
   12ae8:	add	x8, x25, x8
   12aec:	b	12bec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1abc>
   12af0:	ldur	x10, [x25, #-8]
   12af4:	ldr	w8, [x21, #72]
   12af8:	ldr	x9, [x21, #56]
   12afc:	cbz	w8, 12fb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e84>
   12b00:	ldr	x10, [x10]
   12b04:	ldr	x10, [x10]
   12b08:	orr	x11, x10, #0x8
   12b0c:	cmn	x11, #0x8
   12b10:	b.eq	13c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2af0>  // b.none
   12b14:	ubfx	x11, x10, #4, #28
   12b18:	eor	w12, w11, w10, lsr #9
   12b1c:	sub	w11, w8, #0x1
   12b20:	and	w12, w12, w11
   12b24:	add	x13, x9, w12, uxtw #4
   12b28:	ldr	x14, [x13]
   12b2c:	cmp	x14, x10
   12b30:	b.eq	12fb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e88>  // b.none
   12b34:	mov	w15, #0x1                   	// #1
   12b38:	cmn	x14, #0x8
   12b3c:	b.eq	12fb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e84>  // b.none
   12b40:	add	w12, w12, w15
   12b44:	and	w12, w12, w11
   12b48:	add	x13, x9, w12, uxtw #4
   12b4c:	ldr	x14, [x13]
   12b50:	add	w15, w15, #0x1
   12b54:	cmp	x14, x10
   12b58:	b.eq	12fb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e88>  // b.none
   12b5c:	b	12b38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a08>
   12b60:	ldur	x8, [x25, #-8]
   12b64:	ldr	x1, [x8]
   12b68:	ldr	x0, [sp, #48]
   12b6c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   12b70:	ldp	w8, w9, [sp, #120]
   12b74:	mov	w19, w0
   12b78:	cmp	w8, w9
   12b7c:	b.cs	1381c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x26ec>  // b.hs, b.nlast
   12b80:	ldr	x9, [sp, #112]
   12b84:	str	x19, [x9, w8, uxtw #3]
   12b88:	ldp	w8, w9, [sp, #120]
   12b8c:	cmp	w8, w9
   12b90:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12b94:	add	w8, w8, #0x1
   12b98:	str	w8, [sp, #120]
   12b9c:	ldr	w9, [x25, #20]
   12ba0:	and	x8, x9, #0xfffffff
   12ba4:	cmp	w8, #0x1
   12ba8:	b.ls	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.plast
   12bac:	tbnz	w9, #30, 12c48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b18>
   12bb0:	mov	w9, #0x18                  	// #24
   12bb4:	mneg	x8, x8, x9
   12bb8:	add	x8, x25, x8
   12bbc:	b	12c4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b1c>
   12bc0:	ldur	x11, [x25, #-8]
   12bc4:	ldr	x11, [x11]
   12bc8:	ldr	x11, [x11]
   12bcc:	cmp	x10, x11
   12bd0:	b.eq	1324c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x211c>  // b.none
   12bd4:	tbnz	w8, #30, 13258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2128>
   12bd8:	mov	w8, #0x18                  	// #24
   12bdc:	mneg	x8, x9, x8
   12be0:	add	x10, x25, x8
   12be4:	b	1325c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x212c>
   12be8:	ldur	x8, [x25, #-8]
   12bec:	ldr	x1, [x8, #24]
   12bf0:	ldr	x0, [sp, #48]
   12bf4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   12bf8:	ldp	w8, w9, [sp, #120]
   12bfc:	mov	w19, w0
   12c00:	cmp	w8, w9
   12c04:	b.cs	13838 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2708>  // b.hs, b.nlast
   12c08:	ldr	x9, [sp, #112]
   12c0c:	str	x19, [x9, w8, uxtw #3]
   12c10:	ldp	w8, w9, [sp, #120]
   12c14:	cmp	w8, w9
   12c18:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12c1c:	add	w8, w8, #0x1
   12c20:	str	w8, [sp, #120]
   12c24:	ldr	w9, [x25, #20]
   12c28:	and	x8, x9, #0xfffffff
   12c2c:	cmp	w8, #0x2
   12c30:	b.ls	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.plast
   12c34:	tbnz	w9, #30, 12ca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b78>
   12c38:	mov	w9, #0x18                  	// #24
   12c3c:	mneg	x8, x8, x9
   12c40:	add	x8, x25, x8
   12c44:	b	12cac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b7c>
   12c48:	ldur	x8, [x25, #-8]
   12c4c:	ldr	x1, [x8, #24]
   12c50:	ldr	x0, [sp, #48]
   12c54:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   12c58:	ldp	w8, w9, [sp, #120]
   12c5c:	mov	w19, w0
   12c60:	cmp	w8, w9
   12c64:	b.cs	13854 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2724>  // b.hs, b.nlast
   12c68:	ldr	x9, [sp, #112]
   12c6c:	str	x19, [x9, w8, uxtw #3]
   12c70:	ldp	w8, w9, [sp, #120]
   12c74:	cmp	w8, w9
   12c78:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12c7c:	add	w8, w8, #0x1
   12c80:	str	w8, [sp, #120]
   12c84:	ldr	w11, [x25, #20]
   12c88:	and	x10, x11, #0xfffffff
   12c8c:	cmp	w10, #0x2
   12c90:	b.ls	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.plast
   12c94:	tbnz	w11, #30, 12cf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1bc4>
   12c98:	mov	w11, #0x18                  	// #24
   12c9c:	mneg	x10, x10, x11
   12ca0:	add	x12, x25, x10
   12ca4:	b	12cf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1bc8>
   12ca8:	ldur	x8, [x25, #-8]
   12cac:	ldr	x1, [x8, #48]
   12cb0:	ldr	x0, [sp, #48]
   12cb4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   12cb8:	ldp	w8, w9, [sp, #120]
   12cbc:	mov	w19, w0
   12cc0:	cmp	w8, w9
   12cc4:	b.cs	13870 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2740>  // b.hs, b.nlast
   12cc8:	ldr	x9, [sp, #112]
   12ccc:	str	x19, [x9, w8, uxtw #3]
   12cd0:	ldp	w8, w9, [sp, #120]
   12cd4:	cmp	w8, w9
   12cd8:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12cdc:	add	w8, w8, #0x1
   12ce0:	mov	x21, x26
   12ce4:	mov	w3, wzr
   12ce8:	str	w8, [sp, #120]
   12cec:	mov	w26, #0xd                   	// #13
   12cf0:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   12cf4:	ldur	x12, [x25, #-8]
   12cf8:	ldr	w10, [x21, #72]
   12cfc:	ldr	x11, [x21, #56]
   12d00:	cbz	w10, 130e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1fb4>
   12d04:	ldr	x12, [x12, #48]
   12d08:	ldr	x12, [x12]
   12d0c:	orr	x13, x12, #0x8
   12d10:	cmn	x13, #0x8
   12d14:	b.eq	13c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2af0>  // b.none
   12d18:	ubfx	x13, x12, #4, #28
   12d1c:	eor	w14, w13, w12, lsr #9
   12d20:	sub	w13, w10, #0x1
   12d24:	and	w14, w14, w13
   12d28:	add	x15, x11, w14, uxtw #4
   12d2c:	ldr	x16, [x15]
   12d30:	cmp	x16, x12
   12d34:	b.eq	130e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1fb8>  // b.none
   12d38:	mov	w17, #0x1                   	// #1
   12d3c:	cmn	x16, #0x8
   12d40:	b.eq	130e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1fb4>  // b.none
   12d44:	add	w14, w14, w17
   12d48:	and	w14, w14, w13
   12d4c:	add	x15, x11, w14, uxtw #4
   12d50:	ldr	x16, [x15]
   12d54:	add	w17, w17, #0x1
   12d58:	cmp	x16, x12
   12d5c:	b.eq	130e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1fb8>  // b.none
   12d60:	b	12d3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c0c>
   12d64:	add	x12, x9, x8, lsl #4
   12d68:	add	x8, x9, x8, lsl #4
   12d6c:	cmp	x12, x8
   12d70:	b.eq	13c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b10>  // b.none
   12d74:	ldp	w8, w9, [sp, #120]
   12d78:	ldr	w10, [x12, #8]
   12d7c:	cmp	w8, w9
   12d80:	sub	w19, w10, #0x1
   12d84:	b.cs	1388c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x275c>  // b.hs, b.nlast
   12d88:	ldr	x9, [sp, #112]
   12d8c:	str	x19, [x9, w8, uxtw #3]
   12d90:	ldp	w8, w9, [sp, #120]
   12d94:	cmp	w8, w9
   12d98:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12d9c:	add	w8, w8, #0x1
   12da0:	str	w8, [sp, #120]
   12da4:	ldrb	w10, [x25, #17]
   12da8:	cmp	x10, #0x4
   12dac:	b.cs	12dc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c98>  // b.hs, b.nlast
   12db0:	tst	w10, #0x2
   12db4:	mov	w10, #0x14                  	// #20
   12db8:	mov	w11, #0xc                   	// #12
   12dbc:	mov	x21, x26
   12dc0:	csel	w26, w11, w10, eq  // eq = none
   12dc4:	b	12e08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1cd8>
   12dc8:	ubfx	x11, x10, #2, #30
   12dcc:	ubfx	x19, x10, #1, #1
   12dd0:	sub	w10, w11, #0x1
   12dd4:	and	x10, x10, #0xff
   12dd8:	cmp	w8, w9
   12ddc:	bfi	x19, x10, #1, #8
   12de0:	b.cs	13a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x28e4>  // b.hs, b.nlast
   12de4:	ldr	x9, [sp, #112]
   12de8:	str	x19, [x9, w8, uxtw #3]
   12dec:	ldp	w8, w9, [sp, #120]
   12df0:	cmp	w8, w9
   12df4:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12df8:	add	w8, w8, #0x1
   12dfc:	mov	x21, x26
   12e00:	str	w8, [sp, #120]
   12e04:	mov	w26, #0x18                  	// #24
   12e08:	ldr	w10, [x25, #20]
   12e0c:	and	x24, x10, #0xfffffff
   12e10:	cbz	w24, 12fac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e7c>
   12e14:	cbz	w24, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   12e18:	mov	x27, xzr
   12e1c:	mov	x11, x24
   12e20:	tbnz	w10, #30, 12e34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d04>
   12e24:	mov	w10, #0x18                  	// #24
   12e28:	mneg	x10, x11, x10
   12e2c:	add	x12, x25, x10
   12e30:	b	12e38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d08>
   12e34:	ldur	x12, [x25, #-8]
   12e38:	ldr	x11, [x29, #8]
   12e3c:	ldr	w10, [x11, #72]
   12e40:	ldr	x11, [x11, #56]
   12e44:	cbz	w10, 12eb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d80>
   12e48:	mov	w13, #0x18                  	// #24
   12e4c:	mul	x13, x27, x13
   12e50:	ldr	x12, [x12, x13]
   12e54:	ldr	x12, [x12]
   12e58:	orr	x13, x12, #0x8
   12e5c:	cmn	x13, #0x8
   12e60:	b.eq	13c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2af0>  // b.none
   12e64:	ubfx	x13, x12, #4, #28
   12e68:	eor	w14, w13, w12, lsr #9
   12e6c:	sub	w13, w10, #0x1
   12e70:	and	w14, w14, w13
   12e74:	add	x15, x11, w14, uxtw #4
   12e78:	ldr	x16, [x15]
   12e7c:	cmp	x16, x12
   12e80:	b.eq	12eb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d84>  // b.none
   12e84:	mov	w17, #0x1                   	// #1
   12e88:	cmn	x16, #0x8
   12e8c:	b.eq	12eb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d80>  // b.none
   12e90:	add	w14, w14, w17
   12e94:	and	w14, w14, w13
   12e98:	add	x15, x11, w14, uxtw #4
   12e9c:	ldr	x16, [x15]
   12ea0:	add	w17, w17, #0x1
   12ea4:	cmp	x16, x12
   12ea8:	b.eq	12eb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d84>  // b.none
   12eac:	b	12e88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1d58>
   12eb0:	add	x15, x11, x10, lsl #4
   12eb4:	add	x10, x11, x10, lsl #4
   12eb8:	cmp	x15, x10
   12ebc:	b.eq	13c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b10>  // b.none
   12ec0:	ldr	w10, [x15, #8]
   12ec4:	cmp	w8, w9
   12ec8:	sub	w19, w10, #0x1
   12ecc:	b.cs	12f74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e44>  // b.hs, b.nlast
   12ed0:	ldr	x9, [sp, #112]
   12ed4:	str	x19, [x9, w8, uxtw #3]
   12ed8:	ldp	w8, w9, [sp, #120]
   12edc:	cmp	w8, w9
   12ee0:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12ee4:	add	w8, w8, #0x1
   12ee8:	str	w8, [sp, #120]
   12eec:	ldr	w9, [x25, #20]
   12ef0:	and	x8, x9, #0xfffffff
   12ef4:	cmp	x27, x8
   12ef8:	b.cs	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.hs, b.nlast
   12efc:	tbnz	w9, #30, 12f10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1de0>
   12f00:	mov	w9, #0x18                  	// #24
   12f04:	mneg	x8, x8, x9
   12f08:	add	x8, x25, x8
   12f0c:	b	12f14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1de4>
   12f10:	ldur	x8, [x25, #-8]
   12f14:	mov	w9, #0x18                  	// #24
   12f18:	mul	x9, x27, x9
   12f1c:	ldr	x1, [x8, x9]
   12f20:	ldr	x0, [sp, #48]
   12f24:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   12f28:	ldp	w8, w9, [sp, #120]
   12f2c:	mov	w19, w0
   12f30:	cmp	w8, w9
   12f34:	b.cs	12f90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e60>  // b.hs, b.nlast
   12f38:	ldr	x9, [sp, #112]
   12f3c:	str	x19, [x9, w8, uxtw #3]
   12f40:	ldp	w8, w9, [sp, #120]
   12f44:	cmp	w8, w9
   12f48:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12f4c:	add	x27, x27, #0x1
   12f50:	add	w8, w8, #0x1
   12f54:	cmp	x27, x24
   12f58:	str	w8, [sp, #120]
   12f5c:	b.eq	12fac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e7c>  // b.none
   12f60:	ldr	w10, [x25, #20]
   12f64:	and	x11, x10, #0xfffffff
   12f68:	cmp	x27, x11
   12f6c:	b.cc	12e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1cf0>  // b.lo, b.ul, b.last
   12f70:	b	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   12f74:	ldr	x1, [sp, #56]
   12f78:	add	x0, sp, #0x70
   12f7c:	mov	w3, #0x8                   	// #8
   12f80:	mov	x2, xzr
   12f84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   12f88:	ldr	w8, [sp, #120]
   12f8c:	b	12ed0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1da0>
   12f90:	ldr	x1, [sp, #56]
   12f94:	add	x0, sp, #0x70
   12f98:	mov	w3, #0x8                   	// #8
   12f9c:	mov	x2, xzr
   12fa0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   12fa4:	ldr	w8, [sp, #120]
   12fa8:	b	12f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1e08>
   12fac:	mov	w3, wzr
   12fb0:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   12fb4:	add	x13, x9, x8, lsl #4
   12fb8:	add	x8, x9, x8, lsl #4
   12fbc:	cmp	x13, x8
   12fc0:	b.eq	13c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b10>  // b.none
   12fc4:	ldp	w8, w9, [sp, #120]
   12fc8:	ldr	w10, [x13, #8]
   12fcc:	cmp	w8, w9
   12fd0:	sub	w19, w10, #0x1
   12fd4:	b.cs	138a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2778>  // b.hs, b.nlast
   12fd8:	ldr	x9, [sp, #112]
   12fdc:	str	x19, [x9, w8, uxtw #3]
   12fe0:	ldp	w8, w9, [sp, #120]
   12fe4:	cmp	w8, w9
   12fe8:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   12fec:	add	w8, w8, #0x1
   12ff0:	str	w8, [sp, #120]
   12ff4:	ldr	w9, [x25, #20]
   12ff8:	and	x8, x9, #0xfffffff
   12ffc:	cbz	w8, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   13000:	tbnz	w9, #30, 13014 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1ee4>
   13004:	mov	w9, #0x18                  	// #24
   13008:	mneg	x8, x8, x9
   1300c:	add	x8, x25, x8
   13010:	b	13018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1ee8>
   13014:	ldur	x8, [x25, #-8]
   13018:	ldr	x1, [x8]
   1301c:	ldr	x0, [sp, #48]
   13020:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13024:	ldp	w8, w9, [sp, #120]
   13028:	mov	w19, w0
   1302c:	cmp	w8, w9
   13030:	b.cs	138c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2794>  // b.hs, b.nlast
   13034:	ldr	x9, [sp, #112]
   13038:	str	x19, [x9, w8, uxtw #3]
   1303c:	ldp	w8, w9, [sp, #120]
   13040:	cmp	w8, w9
   13044:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   13048:	add	w8, w8, #0x1
   1304c:	str	w8, [sp, #120]
   13050:	ldr	w11, [x25, #20]
   13054:	and	x10, x11, #0xfffffff
   13058:	cmp	w10, #0x1
   1305c:	b.ls	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.plast
   13060:	tbnz	w11, #30, 13074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1f44>
   13064:	mov	w11, #0x18                  	// #24
   13068:	mneg	x10, x10, x11
   1306c:	add	x12, x25, x10
   13070:	b	13078 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1f48>
   13074:	ldur	x12, [x25, #-8]
   13078:	ldr	w10, [x21, #72]
   1307c:	ldr	x11, [x21, #56]
   13080:	cbz	w10, 13190 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2060>
   13084:	ldr	x12, [x12, #24]
   13088:	ldr	x12, [x12]
   1308c:	orr	x13, x12, #0x8
   13090:	cmn	x13, #0x8
   13094:	b.eq	13c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2af0>  // b.none
   13098:	ubfx	x13, x12, #4, #28
   1309c:	eor	w14, w13, w12, lsr #9
   130a0:	sub	w13, w10, #0x1
   130a4:	and	w14, w14, w13
   130a8:	add	x15, x11, w14, uxtw #4
   130ac:	ldr	x16, [x15]
   130b0:	cmp	x16, x12
   130b4:	b.eq	13194 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2064>  // b.none
   130b8:	mov	w17, #0x1                   	// #1
   130bc:	cmn	x16, #0x8
   130c0:	b.eq	13190 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2060>  // b.none
   130c4:	add	w14, w14, w17
   130c8:	and	w14, w14, w13
   130cc:	add	x15, x11, w14, uxtw #4
   130d0:	ldr	x16, [x15]
   130d4:	add	w17, w17, #0x1
   130d8:	cmp	x16, x12
   130dc:	b.eq	13194 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2064>  // b.none
   130e0:	b	130bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1f8c>
   130e4:	add	x15, x11, x10, lsl #4
   130e8:	add	x10, x11, x10, lsl #4
   130ec:	cmp	x15, x10
   130f0:	b.eq	13c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b10>  // b.none
   130f4:	ldr	w10, [x15, #8]
   130f8:	cmp	w8, w9
   130fc:	sub	w19, w10, #0x1
   13100:	b.cs	138e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x27b0>  // b.hs, b.nlast
   13104:	ldr	x9, [sp, #112]
   13108:	str	x19, [x9, w8, uxtw #3]
   1310c:	ldp	w8, w9, [sp, #120]
   13110:	cmp	w8, w9
   13114:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   13118:	add	w8, w8, #0x1
   1311c:	str	w8, [sp, #120]
   13120:	ldr	w9, [x25, #20]
   13124:	and	x8, x9, #0xfffffff
   13128:	cmp	w8, #0x2
   1312c:	b.ls	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.plast
   13130:	tbnz	w9, #30, 13144 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2014>
   13134:	mov	w9, #0x18                  	// #24
   13138:	mneg	x8, x8, x9
   1313c:	add	x8, x25, x8
   13140:	b	13148 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2018>
   13144:	ldur	x8, [x25, #-8]
   13148:	ldr	x1, [x8, #48]
   1314c:	ldr	x0, [sp, #48]
   13150:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13154:	ldp	w8, w9, [sp, #120]
   13158:	mov	w19, w0
   1315c:	cmp	w8, w9
   13160:	b.cs	138fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x27cc>  // b.hs, b.nlast
   13164:	ldr	x9, [sp, #112]
   13168:	str	x19, [x9, w8, uxtw #3]
   1316c:	ldp	w8, w9, [sp, #120]
   13170:	cmp	w8, w9
   13174:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   13178:	add	w8, w8, #0x1
   1317c:	mov	x21, x26
   13180:	mov	w3, wzr
   13184:	str	w8, [sp, #120]
   13188:	mov	w26, #0xf                   	// #15
   1318c:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   13190:	add	x15, x11, x10, lsl #4
   13194:	add	x10, x11, x10, lsl #4
   13198:	cmp	x15, x10
   1319c:	b.eq	13c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b10>  // b.none
   131a0:	ldr	w10, [x15, #8]
   131a4:	cmp	w8, w9
   131a8:	sub	w19, w10, #0x1
   131ac:	b.cs	13918 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x27e8>  // b.hs, b.nlast
   131b0:	ldr	x9, [sp, #112]
   131b4:	str	x19, [x9, w8, uxtw #3]
   131b8:	ldp	w8, w9, [sp, #120]
   131bc:	cmp	w8, w9
   131c0:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   131c4:	add	w8, w8, #0x1
   131c8:	str	w8, [sp, #120]
   131cc:	ldr	w9, [x25, #20]
   131d0:	and	x8, x9, #0xfffffff
   131d4:	cmp	w8, #0x1
   131d8:	b.ls	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.plast
   131dc:	tbnz	w9, #30, 131f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x20c0>
   131e0:	mov	w9, #0x18                  	// #24
   131e4:	mneg	x8, x8, x9
   131e8:	add	x8, x25, x8
   131ec:	b	131f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x20c4>
   131f0:	ldur	x8, [x25, #-8]
   131f4:	ldr	x1, [x8, #24]
   131f8:	ldr	x0, [sp, #48]
   131fc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13200:	ldp	w8, w9, [sp, #120]
   13204:	mov	w19, w0
   13208:	cmp	w8, w9
   1320c:	b.cs	13934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2804>  // b.hs, b.nlast
   13210:	ldr	x9, [sp, #112]
   13214:	str	x19, [x9, w8, uxtw #3]
   13218:	ldp	w8, w9, [sp, #120]
   1321c:	cmp	w8, w9
   13220:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   13224:	add	w8, w8, #0x1
   13228:	mov	x21, x26
   1322c:	mov	w3, wzr
   13230:	str	w8, [sp, #120]
   13234:	mov	w26, #0xe                   	// #14
   13238:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   1323c:	mov	x21, x26
   13240:	mov	w3, wzr
   13244:	mov	w26, #0x19                  	// #25
   13248:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   1324c:	mov	x21, x26
   13250:	mov	w26, #0x10                  	// #16
   13254:	b	13484 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2354>
   13258:	ldur	x10, [x25, #-8]
   1325c:	ldr	w8, [x21, #72]
   13260:	ldr	x9, [x21, #56]
   13264:	cbz	w8, 13438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2308>
   13268:	ldr	x10, [x10]
   1326c:	ldr	x10, [x10]
   13270:	orr	x11, x10, #0x8
   13274:	cmn	x11, #0x8
   13278:	b.eq	13c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2af0>  // b.none
   1327c:	ubfx	x11, x10, #4, #28
   13280:	eor	w12, w11, w10, lsr #9
   13284:	sub	w11, w8, #0x1
   13288:	and	w12, w12, w11
   1328c:	add	x13, x9, w12, uxtw #4
   13290:	ldr	x14, [x13]
   13294:	cmp	x14, x10
   13298:	b.eq	1343c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x230c>  // b.none
   1329c:	mov	w15, #0x1                   	// #1
   132a0:	cmn	x14, #0x8
   132a4:	b.eq	13438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2308>  // b.none
   132a8:	add	w12, w12, w15
   132ac:	and	w12, w12, w11
   132b0:	add	x13, x9, w12, uxtw #4
   132b4:	ldr	x14, [x13]
   132b8:	add	w15, w15, #0x1
   132bc:	cmp	x14, x10
   132c0:	b.eq	1343c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x230c>  // b.none
   132c4:	b	132a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2170>
   132c8:	ldr	x1, [sp, #56]
   132cc:	add	x0, sp, #0x70
   132d0:	mov	w3, #0x8                   	// #8
   132d4:	mov	x2, xzr
   132d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   132dc:	ldr	w8, [sp, #120]
   132e0:	b	11b80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xa50>
   132e4:	ldur	x12, [x25, #-8]
   132e8:	ldr	w10, [x21, #72]
   132ec:	ldr	x11, [x21, #56]
   132f0:	cbz	w10, 135f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x24c8>
   132f4:	ldr	x12, [x12]
   132f8:	ldr	x12, [x12]
   132fc:	orr	x13, x12, #0x8
   13300:	cmn	x13, #0x8
   13304:	b.eq	13c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2af0>  // b.none
   13308:	ubfx	x13, x12, #4, #28
   1330c:	eor	w14, w13, w12, lsr #9
   13310:	sub	w13, w10, #0x1
   13314:	and	w14, w14, w13
   13318:	add	x15, x11, w14, uxtw #4
   1331c:	ldr	x16, [x15]
   13320:	cmp	x16, x12
   13324:	b.eq	135fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x24cc>  // b.none
   13328:	mov	w17, #0x1                   	// #1
   1332c:	cmn	x16, #0x8
   13330:	b.eq	135f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x24c8>  // b.none
   13334:	add	w14, w14, w17
   13338:	and	w14, w14, w13
   1333c:	add	x15, x11, w14, uxtw #4
   13340:	ldr	x16, [x15]
   13344:	add	w17, w17, #0x1
   13348:	cmp	x16, x12
   1334c:	b.eq	135fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x24cc>  // b.none
   13350:	b	1332c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x21fc>
   13354:	ldur	x8, [x25, #-8]
   13358:	ldr	x1, [x8]
   1335c:	ldr	x0, [sp, #48]
   13360:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13364:	ldp	w8, w9, [sp, #120]
   13368:	mov	w19, w0
   1336c:	cmp	w8, w9
   13370:	b.cs	13a30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2900>  // b.hs, b.nlast
   13374:	ldr	x9, [sp, #112]
   13378:	str	x19, [x9, w8, uxtw #3]
   1337c:	ldp	w8, w9, [sp, #120]
   13380:	cmp	w8, w9
   13384:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   13388:	add	w8, w8, #0x1
   1338c:	str	w8, [sp, #120]
   13390:	ldr	w9, [x25, #20]
   13394:	and	x8, x9, #0xfffffff
   13398:	cmp	w8, #0x1
   1339c:	b.ls	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.plast
   133a0:	tbnz	w9, #30, 133b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2284>
   133a4:	mov	w9, #0x18                  	// #24
   133a8:	mneg	x8, x8, x9
   133ac:	add	x8, x25, x8
   133b0:	b	133b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2288>
   133b4:	ldur	x8, [x25, #-8]
   133b8:	ldr	x1, [x8, #24]
   133bc:	ldr	x0, [sp, #48]
   133c0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   133c4:	ldp	w8, w9, [sp, #120]
   133c8:	mov	w19, w0
   133cc:	cmp	w8, w9
   133d0:	b.cs	13a4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x291c>  // b.hs, b.nlast
   133d4:	ldr	x9, [sp, #112]
   133d8:	str	x19, [x9, w8, uxtw #3]
   133dc:	ldp	w8, w9, [sp, #120]
   133e0:	cmp	w8, w9
   133e4:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   133e8:	add	w8, w8, #0x1
   133ec:	mov	x0, x25
   133f0:	str	w8, [sp, #120]
   133f4:	bl	13e50 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   133f8:	cbz	x0, 136a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2570>
   133fc:	ldp	w8, w9, [sp, #120]
   13400:	mov	x24, x0
   13404:	cmp	w8, w9
   13408:	b.cs	13aa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2970>  // b.hs, b.nlast
   1340c:	ldr	x9, [sp, #112]
   13410:	str	x24, [x9, w8, uxtw #3]
   13414:	ldp	w8, w9, [sp, #120]
   13418:	cmp	w8, w9
   1341c:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   13420:	add	w8, w8, #0x1
   13424:	mov	x21, x26
   13428:	mov	w3, wzr
   1342c:	str	w8, [sp, #120]
   13430:	mov	w26, #0xa                   	// #10
   13434:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   13438:	add	x13, x9, x8, lsl #4
   1343c:	add	x8, x9, x8, lsl #4
   13440:	cmp	x13, x8
   13444:	b.eq	13c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b10>  // b.none
   13448:	ldp	w8, w9, [sp, #120]
   1344c:	ldr	w10, [x13, #8]
   13450:	cmp	w8, w9
   13454:	sub	w19, w10, #0x1
   13458:	b.cs	139c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2890>  // b.hs, b.nlast
   1345c:	ldr	x9, [sp, #112]
   13460:	str	x19, [x9, w8, uxtw #3]
   13464:	ldp	w8, w9, [sp, #120]
   13468:	cmp	w8, w9
   1346c:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   13470:	add	w8, w8, #0x1
   13474:	str	w8, [sp, #120]
   13478:	ldr	w8, [x25, #20]
   1347c:	mov	x21, x26
   13480:	mov	w26, #0x13                  	// #19
   13484:	ands	w9, w8, #0xfffffff
   13488:	b.eq	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.none
   1348c:	tbnz	w8, #30, 134a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2370>
   13490:	mov	w8, #0x18                  	// #24
   13494:	mneg	x8, x9, x8
   13498:	add	x8, x25, x8
   1349c:	b	134a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2374>
   134a0:	ldur	x8, [x25, #-8]
   134a4:	ldr	x1, [x8]
   134a8:	ldr	x0, [sp, #48]
   134ac:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   134b0:	ldp	w8, w9, [sp, #120]
   134b4:	mov	w19, w0
   134b8:	cmp	w8, w9
   134bc:	b.cs	13950 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2820>  // b.hs, b.nlast
   134c0:	ldr	x9, [sp, #112]
   134c4:	str	x19, [x9, w8, uxtw #3]
   134c8:	ldp	w8, w9, [sp, #120]
   134cc:	cmp	w8, w9
   134d0:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   134d4:	add	w8, w8, #0x1
   134d8:	str	w8, [sp, #120]
   134dc:	ldr	w9, [x25, #20]
   134e0:	and	x8, x9, #0xfffffff
   134e4:	cmp	w8, #0x1
   134e8:	b.ls	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.plast
   134ec:	tbnz	w9, #30, 13500 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x23d0>
   134f0:	mov	w9, #0x18                  	// #24
   134f4:	mneg	x8, x8, x9
   134f8:	add	x8, x25, x8
   134fc:	b	13504 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x23d4>
   13500:	ldur	x8, [x25, #-8]
   13504:	ldr	x1, [x8, #24]
   13508:	ldr	x0, [sp, #48]
   1350c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13510:	ldp	w8, w9, [sp, #120]
   13514:	mov	w19, w0
   13518:	cmp	w8, w9
   1351c:	b.cs	1396c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x283c>  // b.hs, b.nlast
   13520:	ldr	x9, [sp, #112]
   13524:	str	x19, [x9, w8, uxtw #3]
   13528:	ldp	w8, w9, [sp, #120]
   1352c:	cmp	w8, w9
   13530:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   13534:	add	w8, w8, #0x1
   13538:	str	w8, [sp, #120]
   1353c:	ldr	w9, [x25, #20]
   13540:	and	x8, x9, #0xfffffff
   13544:	cmp	w8, #0x2
   13548:	b.ls	13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>  // b.plast
   1354c:	tbnz	w9, #30, 13560 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2430>
   13550:	mov	w9, #0x18                  	// #24
   13554:	mneg	x8, x8, x9
   13558:	add	x8, x25, x8
   1355c:	b	13564 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2434>
   13560:	ldur	x8, [x25, #-8]
   13564:	ldr	x1, [x8, #48]
   13568:	ldr	x0, [sp, #48]
   1356c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13570:	ldp	w8, w9, [sp, #120]
   13574:	mov	w19, w0
   13578:	cmp	w8, w9
   1357c:	b.cs	13988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2858>  // b.hs, b.nlast
   13580:	ldr	x9, [sp, #112]
   13584:	str	x19, [x9, w8, uxtw #3]
   13588:	ldp	w8, w9, [sp, #120]
   1358c:	cmp	w8, w9
   13590:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   13594:	add	w8, w8, #0x1
   13598:	mov	w3, wzr
   1359c:	str	w8, [sp, #120]
   135a0:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   135a4:	ldr	x1, [sp, #56]
   135a8:	add	x0, sp, #0x70
   135ac:	mov	w3, #0x8                   	// #8
   135b0:	mov	x2, xzr
   135b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   135b8:	ldr	w8, [sp, #120]
   135bc:	b	11bf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xac8>
   135c0:	ldr	x1, [sp, #56]
   135c4:	add	x0, sp, #0x70
   135c8:	mov	w3, #0x8                   	// #8
   135cc:	mov	x2, xzr
   135d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   135d4:	ldr	w8, [sp, #120]
   135d8:	b	11c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xaf0>
   135dc:	ldr	x1, [sp, #56]
   135e0:	add	x0, sp, #0x70
   135e4:	mov	w3, #0x8                   	// #8
   135e8:	mov	x2, xzr
   135ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   135f0:	ldr	w8, [sp, #120]
   135f4:	b	11d50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0xc20>
   135f8:	add	x15, x11, x10, lsl #4
   135fc:	add	x10, x11, x10, lsl #4
   13600:	cmp	x15, x10
   13604:	b.eq	13c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2b10>  // b.none
   13608:	ldr	w10, [x15, #8]
   1360c:	cmp	w8, w9
   13610:	sub	w19, w10, #0x1
   13614:	b.cs	13a68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2938>  // b.hs, b.nlast
   13618:	ldr	x9, [sp, #112]
   1361c:	str	x19, [x9, w8, uxtw #3]
   13620:	ldp	w8, w9, [sp, #120]
   13624:	cmp	w8, w9
   13628:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   1362c:	add	w8, w8, #0x1
   13630:	str	w8, [sp, #120]
   13634:	ldr	w9, [x25, #20]
   13638:	and	x8, x9, #0xfffffff
   1363c:	cbz	w8, 13e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2d00>
   13640:	tbnz	w9, #30, 13654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2524>
   13644:	mov	w9, #0x18                  	// #24
   13648:	mneg	x8, x8, x9
   1364c:	add	x8, x25, x8
   13650:	b	13658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2528>
   13654:	ldur	x8, [x25, #-8]
   13658:	ldr	x1, [x8]
   1365c:	ldr	x0, [sp, #48]
   13660:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   13664:	ldp	w8, w9, [sp, #120]
   13668:	mov	w19, w0
   1366c:	cmp	w8, w9
   13670:	b.cs	13a84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2954>  // b.hs, b.nlast
   13674:	ldr	x9, [sp, #112]
   13678:	str	x19, [x9, w8, uxtw #3]
   1367c:	ldp	w8, w9, [sp, #120]
   13680:	cmp	w8, w9
   13684:	b.cs	13be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2ab0>  // b.hs, b.nlast
   13688:	add	w8, w8, #0x1
   1368c:	mov	x21, x26
   13690:	mov	w26, #0xb                   	// #11
   13694:	str	w8, [sp, #120]
   13698:	mov	w3, #0x6                   	// #6
   1369c:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   136a0:	mov	x21, x26
   136a4:	mov	w3, wzr
   136a8:	mov	w26, #0xa                   	// #10
   136ac:	b	11ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x984>
   136b0:	ldr	x1, [sp, #56]
   136b4:	add	x0, sp, #0x70
   136b8:	mov	w3, #0x8                   	// #8
   136bc:	mov	x2, xzr
   136c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   136c4:	ldr	w8, [sp, #120]
   136c8:	b	122bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x118c>
   136cc:	ldr	x1, [sp, #56]
   136d0:	add	x0, sp, #0x70
   136d4:	mov	w3, #0x8                   	// #8
   136d8:	mov	x2, xzr
   136dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   136e0:	ldr	w8, [sp, #120]
   136e4:	b	122e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x11b4>
   136e8:	ldr	x1, [sp, #56]
   136ec:	add	x0, sp, #0x70
   136f0:	mov	w3, #0x8                   	// #8
   136f4:	mov	x2, xzr
   136f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   136fc:	ldr	w8, [sp, #120]
   13700:	b	12434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1304>
   13704:	ldr	x1, [sp, #56]
   13708:	add	x0, sp, #0x70
   1370c:	mov	w3, #0x8                   	// #8
   13710:	mov	x2, xzr
   13714:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13718:	ldr	w8, [sp, #120]
   1371c:	b	12598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1468>
   13720:	ldr	x1, [sp, #56]
   13724:	add	x0, sp, #0x70
   13728:	mov	w3, #0x8                   	// #8
   1372c:	mov	x2, xzr
   13730:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13734:	ldr	w8, [sp, #120]
   13738:	b	125d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x14a0>
   1373c:	ldr	x1, [sp, #56]
   13740:	add	x0, sp, #0x70
   13744:	mov	w3, #0x8                   	// #8
   13748:	mov	x2, xzr
   1374c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13750:	ldr	w8, [sp, #120]
   13754:	b	12608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x14d8>
   13758:	ldr	x1, [sp, #56]
   1375c:	add	x0, sp, #0x70
   13760:	mov	w3, #0x8                   	// #8
   13764:	mov	x2, xzr
   13768:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1376c:	ldr	w8, [sp, #120]
   13770:	b	1287c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x174c>
   13774:	ldr	x1, [sp, #56]
   13778:	add	x0, sp, #0x70
   1377c:	mov	w3, #0x8                   	// #8
   13780:	mov	x2, xzr
   13784:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13788:	ldr	w8, [sp, #120]
   1378c:	b	128d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x17a8>
   13790:	ldr	x1, [sp, #56]
   13794:	add	x0, sp, #0x70
   13798:	mov	w3, #0x8                   	// #8
   1379c:	mov	x2, xzr
   137a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   137a4:	ldr	w8, [sp, #120]
   137a8:	b	12938 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1808>
   137ac:	ldr	x1, [sp, #56]
   137b0:	add	x0, sp, #0x70
   137b4:	mov	w3, #0x8                   	// #8
   137b8:	mov	x2, xzr
   137bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   137c0:	ldr	w8, [sp, #120]
   137c4:	b	1296c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x183c>
   137c8:	ldr	x1, [sp, #56]
   137cc:	add	x0, sp, #0x70
   137d0:	mov	w3, #0x8                   	// #8
   137d4:	mov	x2, xzr
   137d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   137dc:	ldr	w8, [sp, #120]
   137e0:	b	1265c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x152c>
   137e4:	ldr	x1, [sp, #56]
   137e8:	add	x0, sp, #0x70
   137ec:	mov	w3, #0x8                   	// #8
   137f0:	mov	x2, xzr
   137f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   137f8:	ldr	w8, [sp, #120]
   137fc:	b	129b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1888>
   13800:	ldr	x1, [sp, #56]
   13804:	add	x0, sp, #0x70
   13808:	mov	w3, #0x8                   	// #8
   1380c:	mov	x2, xzr
   13810:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13814:	ldr	w8, [sp, #120]
   13818:	b	12ab0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1980>
   1381c:	ldr	x1, [sp, #56]
   13820:	add	x0, sp, #0x70
   13824:	mov	w3, #0x8                   	// #8
   13828:	mov	x2, xzr
   1382c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13830:	ldr	w8, [sp, #120]
   13834:	b	12b80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1a50>
   13838:	ldr	x1, [sp, #56]
   1383c:	add	x0, sp, #0x70
   13840:	mov	w3, #0x8                   	// #8
   13844:	mov	x2, xzr
   13848:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1384c:	ldr	w8, [sp, #120]
   13850:	b	12c08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1ad8>
   13854:	ldr	x1, [sp, #56]
   13858:	add	x0, sp, #0x70
   1385c:	mov	w3, #0x8                   	// #8
   13860:	mov	x2, xzr
   13864:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13868:	ldr	w8, [sp, #120]
   1386c:	b	12c68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b38>
   13870:	ldr	x1, [sp, #56]
   13874:	add	x0, sp, #0x70
   13878:	mov	w3, #0x8                   	// #8
   1387c:	mov	x2, xzr
   13880:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13884:	ldr	w8, [sp, #120]
   13888:	b	12cc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1b98>
   1388c:	ldr	x1, [sp, #56]
   13890:	add	x0, sp, #0x70
   13894:	mov	w3, #0x8                   	// #8
   13898:	mov	x2, xzr
   1389c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   138a0:	ldr	w8, [sp, #120]
   138a4:	b	12d88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1c58>
   138a8:	ldr	x1, [sp, #56]
   138ac:	add	x0, sp, #0x70
   138b0:	mov	w3, #0x8                   	// #8
   138b4:	mov	x2, xzr
   138b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   138bc:	ldr	w8, [sp, #120]
   138c0:	b	12fd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1ea8>
   138c4:	ldr	x1, [sp, #56]
   138c8:	add	x0, sp, #0x70
   138cc:	mov	w3, #0x8                   	// #8
   138d0:	mov	x2, xzr
   138d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   138d8:	ldr	w8, [sp, #120]
   138dc:	b	13034 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1f04>
   138e0:	ldr	x1, [sp, #56]
   138e4:	add	x0, sp, #0x70
   138e8:	mov	w3, #0x8                   	// #8
   138ec:	mov	x2, xzr
   138f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   138f4:	ldr	w8, [sp, #120]
   138f8:	b	13104 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1fd4>
   138fc:	ldr	x1, [sp, #56]
   13900:	add	x0, sp, #0x70
   13904:	mov	w3, #0x8                   	// #8
   13908:	mov	x2, xzr
   1390c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13910:	ldr	w8, [sp, #120]
   13914:	b	13164 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2034>
   13918:	ldr	x1, [sp, #56]
   1391c:	add	x0, sp, #0x70
   13920:	mov	w3, #0x8                   	// #8
   13924:	mov	x2, xzr
   13928:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1392c:	ldr	w8, [sp, #120]
   13930:	b	131b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2080>
   13934:	ldr	x1, [sp, #56]
   13938:	add	x0, sp, #0x70
   1393c:	mov	w3, #0x8                   	// #8
   13940:	mov	x2, xzr
   13944:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13948:	ldr	w8, [sp, #120]
   1394c:	b	13210 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x20e0>
   13950:	ldr	x1, [sp, #56]
   13954:	add	x0, sp, #0x70
   13958:	mov	w3, #0x8                   	// #8
   1395c:	mov	x2, xzr
   13960:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13964:	ldr	w8, [sp, #120]
   13968:	b	134c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2390>
   1396c:	ldr	x1, [sp, #56]
   13970:	add	x0, sp, #0x70
   13974:	mov	w3, #0x8                   	// #8
   13978:	mov	x2, xzr
   1397c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13980:	ldr	w8, [sp, #120]
   13984:	b	13520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x23f0>
   13988:	ldr	x1, [sp, #56]
   1398c:	add	x0, sp, #0x70
   13990:	mov	w3, #0x8                   	// #8
   13994:	mov	x2, xzr
   13998:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1399c:	ldr	w8, [sp, #120]
   139a0:	b	13580 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2450>
   139a4:	ldr	x1, [sp, #56]
   139a8:	add	x0, sp, #0x70
   139ac:	mov	w3, #0x8                   	// #8
   139b0:	mov	x2, xzr
   139b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   139b8:	ldr	w8, [sp, #120]
   139bc:	b	129f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x18c0>
   139c0:	ldr	x1, [sp, #56]
   139c4:	add	x0, sp, #0x70
   139c8:	mov	w3, #0x8                   	// #8
   139cc:	mov	x2, xzr
   139d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   139d4:	ldr	w8, [sp, #120]
   139d8:	b	1345c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x232c>
   139dc:	ldr	x1, [sp, #56]
   139e0:	add	x0, sp, #0x70
   139e4:	mov	w3, #0x8                   	// #8
   139e8:	mov	x2, xzr
   139ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   139f0:	ldr	w8, [sp, #120]
   139f4:	b	126bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x158c>
   139f8:	ldr	x1, [sp, #56]
   139fc:	add	x0, sp, #0x70
   13a00:	mov	w3, #0x8                   	// #8
   13a04:	mov	x2, xzr
   13a08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13a0c:	ldr	w8, [sp, #120]
   13a10:	b	12a54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1924>
   13a14:	ldr	x1, [sp, #56]
   13a18:	add	x0, sp, #0x70
   13a1c:	mov	w3, #0x8                   	// #8
   13a20:	mov	x2, xzr
   13a24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13a28:	ldr	w8, [sp, #120]
   13a2c:	b	12de4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x1cb4>
   13a30:	ldr	x1, [sp, #56]
   13a34:	add	x0, sp, #0x70
   13a38:	mov	w3, #0x8                   	// #8
   13a3c:	mov	x2, xzr
   13a40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13a44:	ldr	w8, [sp, #120]
   13a48:	b	13374 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2244>
   13a4c:	ldr	x1, [sp, #56]
   13a50:	add	x0, sp, #0x70
   13a54:	mov	w3, #0x8                   	// #8
   13a58:	mov	x2, xzr
   13a5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13a60:	ldr	w8, [sp, #120]
   13a64:	b	133d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x22a4>
   13a68:	ldr	x1, [sp, #56]
   13a6c:	add	x0, sp, #0x70
   13a70:	mov	w3, #0x8                   	// #8
   13a74:	mov	x2, xzr
   13a78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13a7c:	ldr	w8, [sp, #120]
   13a80:	b	13618 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x24e8>
   13a84:	ldr	x1, [sp, #56]
   13a88:	add	x0, sp, #0x70
   13a8c:	mov	w3, #0x8                   	// #8
   13a90:	mov	x2, xzr
   13a94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13a98:	ldr	w8, [sp, #120]
   13a9c:	b	13674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x2544>
   13aa0:	ldr	x1, [sp, #56]
   13aa4:	add	x0, sp, #0x70
   13aa8:	mov	w3, #0x8                   	// #8
   13aac:	mov	x2, xzr
   13ab0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13ab4:	ldr	w8, [sp, #120]
   13ab8:	b	1340c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x22dc>
   13abc:	ldr	x0, [x27]
   13ac0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13ac4:	ldr	x0, [sp, #112]
   13ac8:	add	x8, sp, #0x70
   13acc:	add	x8, x8, #0x10
   13ad0:	cmp	x0, x8
   13ad4:	b.eq	13adc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x29ac>  // b.none
   13ad8:	bl	0 <free>
   13adc:	add	sp, sp, #0x2d0
   13ae0:	ldp	x20, x19, [sp, #96]
   13ae4:	ldp	x22, x21, [sp, #80]
   13ae8:	ldp	x24, x23, [sp, #64]
   13aec:	ldp	x26, x25, [sp, #48]
   13af0:	ldp	x28, x27, [sp, #32]
   13af4:	ldp	x29, x30, [sp, #16]
   13af8:	ldr	d8, [sp], #112
   13afc:	ret
   13b00:	mov	w3, #0x10                  	// #16
   13b04:	mov	x0, x23
   13b08:	mov	x1, x24
   13b0c:	mov	x2, xzr
   13b10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13b14:	ldr	w8, [x22, #24]
   13b18:	b	11244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x114>
   13b1c:	mov	w3, #0x10                  	// #16
   13b20:	mov	x0, x23
   13b24:	mov	x1, x24
   13b28:	mov	x2, xzr
   13b2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13b30:	ldr	w8, [x22, #24]
   13b34:	b	11294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x164>
   13b38:	mov	w3, #0x10                  	// #16
   13b3c:	mov	x0, x23
   13b40:	mov	x1, x24
   13b44:	mov	x2, xzr
   13b48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13b4c:	ldr	w8, [x22, #24]
   13b50:	b	11478 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x348>
   13b54:	mov	w3, #0x10                  	// #16
   13b58:	mov	x0, x23
   13b5c:	mov	x1, x24
   13b60:	mov	x2, xzr
   13b64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13b68:	ldr	w8, [x22, #24]
   13b6c:	b	114b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x388>
   13b70:	mov	w3, #0x10                  	// #16
   13b74:	mov	x0, x23
   13b78:	mov	x1, x24
   13b7c:	mov	x2, xzr
   13b80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13b84:	ldr	w8, [x22, #24]
   13b88:	b	11698 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x568>
   13b8c:	mov	w3, #0x10                  	// #16
   13b90:	mov	x0, x23
   13b94:	mov	x1, x24
   13b98:	mov	x2, xzr
   13b9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13ba0:	ldr	w8, [x22, #24]
   13ba4:	b	116e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x5b0>
   13ba8:	mov	w3, #0x10                  	// #16
   13bac:	mov	x0, x23
   13bb0:	mov	x1, x24
   13bb4:	mov	x2, xzr
   13bb8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13bbc:	ldr	w8, [x22, #24]
   13bc0:	b	118c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x794>
   13bc4:	mov	w3, #0x10                  	// #16
   13bc8:	mov	x0, x23
   13bcc:	mov	x1, x24
   13bd0:	mov	x2, xzr
   13bd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   13bd8:	ldr	w8, [x22, #24]
   13bdc:	b	11904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter14writeConstantsEjjb+0x7d4>
   13be0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13be4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13be8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13bec:	add	x0, x0, #0x0
   13bf0:	add	x1, x1, #0x0
   13bf4:	add	x3, x3, #0x0
   13bf8:	mov	w2, #0x43                  	// #67
   13bfc:	bl	0 <__assert_fail>
   13c00:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c04:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c08:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c0c:	add	x0, x0, #0x0
   13c10:	add	x1, x1, #0x0
   13c14:	add	x3, x3, #0x0
   13c18:	mov	w2, #0x69                  	// #105
   13c1c:	bl	0 <__assert_fail>
   13c20:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c24:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c28:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c2c:	add	x0, x0, #0x0
   13c30:	add	x1, x1, #0x0
   13c34:	add	x3, x3, #0x0
   13c38:	mov	w2, #0x252                 	// #594
   13c3c:	bl	0 <__assert_fail>
   13c40:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c44:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c48:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c4c:	add	x0, x0, #0x0
   13c50:	add	x1, x1, #0x0
   13c54:	add	x3, x3, #0x0
   13c58:	mov	w2, #0xa9                  	// #169
   13c5c:	bl	0 <__assert_fail>
   13c60:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c64:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c68:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c6c:	add	x0, x0, #0x0
   13c70:	add	x1, x1, #0x0
   13c74:	add	x3, x3, #0x0
   13c78:	mov	w2, #0x108                 	// #264
   13c7c:	bl	0 <__assert_fail>
   13c80:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c84:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c88:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13c8c:	add	x0, x0, #0x0
   13c90:	add	x1, x1, #0x0
   13c94:	add	x3, x3, #0x0
   13c98:	mov	w2, #0x307                 	// #775
   13c9c:	bl	0 <__assert_fail>
   13ca0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13ca4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13ca8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13cac:	add	x0, x0, #0x0
   13cb0:	add	x1, x1, #0x0
   13cb4:	add	x3, x3, #0x0
   13cb8:	mov	w2, #0x108                 	// #264
   13cbc:	bl	0 <__assert_fail>
   13cc0:	mov	x0, x25
   13cc4:	bl	0 <_ZNK4llvm5Value4dumpEv>
   13cc8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13ccc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13cd0:	add	x0, x0, #0x0
   13cd4:	add	x1, x1, #0x0
   13cd8:	mov	w2, #0x9df                 	// #2527
   13cdc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   13ce0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13ce4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13ce8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13cec:	add	x0, x0, #0x0
   13cf0:	add	x1, x1, #0x0
   13cf4:	add	x3, x3, #0x0
   13cf8:	mov	w2, #0x657                 	// #1623
   13cfc:	bl	0 <__assert_fail>
   13d00:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d04:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d08:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d0c:	add	x0, x0, #0x0
   13d10:	add	x1, x1, #0x0
   13d14:	add	x3, x3, #0x0
   13d18:	mov	w2, #0x94f                 	// #2383
   13d1c:	bl	0 <__assert_fail>
   13d20:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d24:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d28:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d2c:	add	x0, x0, #0x0
   13d30:	add	x1, x1, #0x0
   13d34:	add	x3, x3, #0x0
   13d38:	mov	w2, #0x69                  	// #105
   13d3c:	bl	0 <__assert_fail>
   13d40:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d44:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d48:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d4c:	add	x0, x0, #0x0
   13d50:	add	x1, x1, #0x0
   13d54:	add	x3, x3, #0x0
   13d58:	mov	w2, #0x108                 	// #264
   13d5c:	bl	0 <__assert_fail>
   13d60:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d64:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d68:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d6c:	add	x0, x0, #0x0
   13d70:	add	x1, x1, #0x0
   13d74:	add	x3, x3, #0x0
   13d78:	mov	w2, #0x69                  	// #105
   13d7c:	bl	0 <__assert_fail>
   13d80:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d84:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d88:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13d8c:	add	x0, x0, #0x0
   13d90:	add	x1, x1, #0x0
   13d94:	add	x3, x3, #0x0
   13d98:	mov	w2, #0x108                 	// #264
   13d9c:	bl	0 <__assert_fail>
   13da0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13da4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13da8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13dac:	add	x0, x0, #0x0
   13db0:	add	x1, x1, #0x0
   13db4:	add	x3, x3, #0x0
   13db8:	mov	w2, #0x69                  	// #105
   13dbc:	bl	0 <__assert_fail>
   13dc0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13dc4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13dc8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13dcc:	add	x0, x0, #0x0
   13dd0:	add	x1, x1, #0x0
   13dd4:	add	x3, x3, #0x0
   13dd8:	mov	w2, #0x992                 	// #2450
   13ddc:	bl	0 <__assert_fail>
   13de0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13de4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13de8:	add	x0, x0, #0x0
   13dec:	add	x1, x1, #0x0
   13df0:	mov	w2, #0x1f8                 	// #504
   13df4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   13df8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13dfc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13e00:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13e04:	add	x0, x0, #0x0
   13e08:	add	x1, x1, #0x0
   13e0c:	add	x3, x3, #0x0
   13e10:	mov	w2, #0x987                 	// #2439
   13e14:	bl	0 <__assert_fail>
   13e18:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13e1c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13e20:	add	x0, x0, #0x0
   13e24:	add	x1, x1, #0x0
   13e28:	mov	w2, #0x212                 	// #530
   13e2c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   13e30:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13e34:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13e38:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13e3c:	add	x0, x0, #0x0
   13e40:	add	x1, x1, #0x0
   13e44:	add	x3, x3, #0x0
   13e48:	mov	w2, #0xaa                  	// #170
   13e4c:	bl	0 <__assert_fail>

0000000000013e50 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>:
   13e50:	stp	x29, x30, [sp, #-16]!
   13e54:	mov	x29, sp
   13e58:	cbz	x0, 13f70 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x120>
   13e5c:	ldrb	w8, [x0, #16]
   13e60:	cmp	w8, #0x18
   13e64:	b.cc	13eb0 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x60>  // b.lo, b.ul, b.last
   13e68:	sub	w9, w8, #0x25
   13e6c:	ror	w9, w9, #1
   13e70:	cmp	w9, #0x6
   13e74:	b.hi	13e8c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x3c>  // b.pmore
   13e78:	mov	w10, #0x1                   	// #1
   13e7c:	lsl	w9, w10, w9
   13e80:	mov	w10, #0x47                  	// #71
   13e84:	tst	w9, w10
   13e88:	b.ne	13ee0 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0x90>  // b.any
   13e8c:	cmp	w8, #0x33
   13e90:	b.hi	13f1c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xcc>  // b.pmore
   13e94:	mov	w9, #0x1                   	// #1
   13e98:	lsl	x8, x9, x8
   13e9c:	mov	x9, #0x180000000000        	// #26388279066624
   13ea0:	movk	x9, #0xc, lsl #48
   13ea4:	tst	x8, x9
   13ea8:	b.ne	13f0c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xbc>  // b.any
   13eac:	b	13f1c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xcc>
   13eb0:	cmp	w8, #0x5
   13eb4:	b.ne	13f1c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xcc>  // b.any
   13eb8:	ldrh	w8, [x0, #18]
   13ebc:	sub	w9, w8, #0xd
   13ec0:	ror	w9, w9, #1
   13ec4:	cmp	w9, #0x6
   13ec8:	b.hi	13ef0 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xa0>  // b.pmore
   13ecc:	mov	w10, #0x1                   	// #1
   13ed0:	lsl	w9, w10, w9
   13ed4:	mov	w10, #0x47                  	// #71
   13ed8:	tst	w9, w10
   13edc:	b.eq	13ef0 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xa0>  // b.none
   13ee0:	ldrb	w8, [x0, #17]
   13ee4:	ubfx	x0, x8, #1, #2
   13ee8:	ldp	x29, x30, [sp], #16
   13eec:	ret
   13ef0:	cmp	w8, #0x1b
   13ef4:	b.hi	13f1c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xcc>  // b.pmore
   13ef8:	mov	w9, #0x1                   	// #1
   13efc:	lsl	w8, w9, w8
   13f00:	mov	w9, #0xc180000             	// #202899456
   13f04:	tst	w8, w9
   13f08:	b.eq	13f1c <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xcc>  // b.none
   13f0c:	ldrb	w8, [x0, #17]
   13f10:	ubfx	x0, x8, #1, #1
   13f14:	ldp	x29, x30, [sp], #16
   13f18:	ret
   13f1c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13f20:	cbz	x0, 13f14 <_ZL20getOptimizationFlagsPKN4llvm5ValueE+0xc4>
   13f24:	ldrsb	w8, [x0, #17]
   13f28:	mov	w9, #0xffffff82            	// #-126
   13f2c:	ubfx	w10, w8, #1, #7
   13f30:	orr	w11, w10, w8, lsl #6
   13f34:	and	w9, w11, w9
   13f38:	and	w11, w10, #0x4
   13f3c:	orr	w9, w9, w11
   13f40:	and	w11, w10, #0x8
   13f44:	orr	w9, w9, w11
   13f48:	and	w11, w10, #0x10
   13f4c:	and	w10, w10, #0x20
   13f50:	orr	w9, w9, w11
   13f54:	orr	w9, w9, w10
   13f58:	and	x9, x9, #0xfe
   13f5c:	orr	x10, x9, #0x40
   13f60:	cmp	w8, #0x0
   13f64:	csel	x0, x10, x9, lt  // lt = tstop
   13f68:	ldp	x29, x30, [sp], #16
   13f6c:	ret
   13f70:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13f74:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13f78:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13f7c:	add	x0, x0, #0x0
   13f80:	add	x1, x1, #0x0
   13f84:	add	x3, x3, #0x0
   13f88:	mov	w2, #0x69                  	// #105
   13f8c:	bl	0 <__assert_fail>

0000000000013f90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv>:
   13f90:	sub	sp, sp, #0x50
   13f94:	stp	x29, x30, [sp, #32]
   13f98:	stp	x22, x21, [sp, #48]
   13f9c:	stp	x20, x19, [sp, #64]
   13fa0:	add	x29, sp, #0x20
   13fa4:	mov	x19, x0
   13fa8:	mov	w0, #0x220                 	// #544
   13fac:	bl	0 <_Znwm>
   13fb0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   13fb4:	ldr	x8, [x8]
   13fb8:	movi	v0.2s, #0x1
   13fbc:	str	d0, [x0, #8]
   13fc0:	movi	v0.2d, #0x0
   13fc4:	mov	x22, x0
   13fc8:	add	x8, x8, #0x10
   13fcc:	mov	x21, x0
   13fd0:	mov	w9, #0x20                  	// #32
   13fd4:	str	x8, [x0]
   13fd8:	mov	w8, #0x1                   	// #1
   13fdc:	stp	q0, q0, [x0, #48]
   13fe0:	stp	q0, q0, [x0, #80]
   13fe4:	stp	q0, q0, [x0, #112]
   13fe8:	stp	q0, q0, [x0, #144]
   13fec:	stp	q0, q0, [x0, #176]
   13ff0:	stp	q0, q0, [x0, #208]
   13ff4:	stp	q0, q0, [x0, #240]
   13ff8:	stp	q0, q0, [x0, #272]
   13ffc:	stp	q0, q0, [x0, #304]
   14000:	stp	q0, q0, [x0, #336]
   14004:	stp	q0, q0, [x0, #368]
   14008:	stp	q0, q0, [x0, #400]
   1400c:	stp	q0, q0, [x0, #432]
   14010:	stp	q0, q0, [x0, #464]
   14014:	stp	q0, q0, [x0, #496]
   14018:	str	q0, [x22, #32]!
   1401c:	ldur	w12, [x29, #-5]
   14020:	str	q0, [x0, #528]
   14024:	str	x22, [x21, #16]!
   14028:	stp	w8, w9, [x0, #24]
   1402c:	ldur	w9, [x29, #-8]
   14030:	mov	w10, #0x7                   	// #7
   14034:	str	x10, [x22]
   14038:	mov	w11, #0xff                  	// #255
   1403c:	str	w12, [x0, #44]
   14040:	stur	w9, [x0, #41]
   14044:	ldr	w9, [x0, #28]
   14048:	ldur	w10, [x29, #-8]
   1404c:	strb	w11, [x0, #40]
   14050:	ldur	w11, [x29, #-5]
   14054:	str	x8, [x0, #48]
   14058:	mov	w8, w8
   1405c:	mov	w12, #0x2                   	// #2
   14060:	cmp	w8, w9
   14064:	strb	w12, [x0, #56]
   14068:	str	w11, [x0, #60]
   1406c:	stur	w10, [x0, #57]
   14070:	b.cs	14378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   14074:	add	w8, w8, #0x1
   14078:	mov	x20, x0
   1407c:	cmp	w8, w9
   14080:	str	w8, [x0, #24]
   14084:	b.cs	142ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x35c>  // b.hs, b.nlast
   14088:	ldr	x9, [x20, #16]
   1408c:	mov	w10, #0x6                   	// #6
   14090:	mov	w11, #0x4                   	// #4
   14094:	add	x8, x9, w8, uxtw #4
   14098:	str	x10, [x8]
   1409c:	strb	w11, [x8, #8]
   140a0:	ldur	w9, [x29, #-5]
   140a4:	ldur	w10, [x29, #-8]
   140a8:	str	w9, [x8, #12]
   140ac:	stur	w10, [x8, #9]
   140b0:	ldp	w8, w9, [x20, #24]
   140b4:	cmp	w8, w9
   140b8:	b.cs	14378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   140bc:	add	w8, w8, #0x1
   140c0:	cmp	w8, w9
   140c4:	str	w8, [x20, #24]
   140c8:	b.cs	14308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x378>  // b.hs, b.nlast
   140cc:	ldr	x9, [x20, #16]
   140d0:	mov	w10, #0x8                   	// #8
   140d4:	mov	w11, #0x4                   	// #4
   140d8:	add	x8, x9, w8, uxtw #4
   140dc:	str	x10, [x8]
   140e0:	strb	w11, [x8, #8]
   140e4:	ldur	w9, [x29, #-5]
   140e8:	ldur	w10, [x29, #-8]
   140ec:	str	w9, [x8, #12]
   140f0:	stur	w10, [x8, #9]
   140f4:	ldp	w8, w9, [x20, #24]
   140f8:	cmp	w8, w9
   140fc:	b.cs	14378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   14100:	add	w8, w8, #0x1
   14104:	cmp	w8, w9
   14108:	str	w8, [x20, #24]
   1410c:	b.cs	14324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x394>  // b.hs, b.nlast
   14110:	ldr	x9, [x20, #16]
   14114:	mov	w10, #0x6                   	// #6
   14118:	mov	w11, #0x4                   	// #4
   1411c:	add	x8, x9, w8, uxtw #4
   14120:	str	x10, [x8]
   14124:	strb	w11, [x8, #8]
   14128:	ldur	w9, [x29, #-5]
   1412c:	ldur	w10, [x29, #-8]
   14130:	str	w9, [x8, #12]
   14134:	stur	w10, [x8, #9]
   14138:	ldp	w8, w9, [x20, #24]
   1413c:	cmp	w8, w9
   14140:	b.cs	14378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   14144:	add	w8, w8, #0x1
   14148:	cmp	w8, w9
   1414c:	str	w8, [x20, #24]
   14150:	b.cs	14340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3b0>  // b.hs, b.nlast
   14154:	ldr	x9, [x20, #16]
   14158:	mov	w10, #0x6                   	// #6
   1415c:	mov	w11, #0x4                   	// #4
   14160:	add	x8, x9, w8, uxtw #4
   14164:	str	x10, [x8]
   14168:	strb	w11, [x8, #8]
   1416c:	ldur	w9, [x29, #-5]
   14170:	ldur	w10, [x29, #-8]
   14174:	str	w9, [x8, #12]
   14178:	stur	w10, [x8, #9]
   1417c:	ldp	w8, w9, [x20, #24]
   14180:	cmp	w8, w9
   14184:	b.cs	14378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   14188:	add	w8, w8, #0x1
   1418c:	cmp	w8, w9
   14190:	str	w8, [x20, #24]
   14194:	b.cs	1435c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3cc>  // b.hs, b.nlast
   14198:	ldr	x9, [x20, #16]
   1419c:	mov	w10, #0x1                   	// #1
   141a0:	mov	w11, #0x2                   	// #2
   141a4:	add	x8, x9, w8, uxtw #4
   141a8:	str	x10, [x8]
   141ac:	strb	w11, [x8, #8]
   141b0:	ldur	w9, [x29, #-5]
   141b4:	ldur	w10, [x29, #-8]
   141b8:	str	w9, [x8, #12]
   141bc:	stur	w10, [x8, #9]
   141c0:	ldp	w8, w9, [x20, #24]
   141c4:	cmp	w8, w9
   141c8:	b.cs	14378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x3e8>  // b.hs, b.nlast
   141cc:	add	w8, w8, #0x1
   141d0:	str	w8, [x20, #24]
   141d4:	ldr	x19, [x19]
   141d8:	mov	x1, x21
   141dc:	stp	x21, x20, [sp, #8]
   141e0:	mov	x0, x19
   141e4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   141e8:	ldp	x1, x8, [x19, #32]
   141ec:	add	x20, x19, #0x18
   141f0:	cmp	x1, x8
   141f4:	b.eq	14214 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x284>  // b.none
   141f8:	stp	x21, xzr, [x1]
   141fc:	ldr	x9, [sp, #16]
   14200:	add	x8, x1, #0x10
   14204:	stp	xzr, xzr, [sp, #8]
   14208:	str	x9, [x1, #8]
   1420c:	str	x8, [x19, #32]
   14210:	b	14224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x294>
   14214:	add	x2, sp, #0x8
   14218:	mov	x0, x20
   1421c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14220:	ldr	x8, [x19, #32]
   14224:	ldr	x9, [x20]
   14228:	ldr	x20, [sp, #16]
   1422c:	sub	x8, x8, x9
   14230:	lsr	x8, x8, #4
   14234:	add	w19, w8, #0x3
   14238:	cbz	x20, 142bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x32c>
   1423c:	adrp	x21, 0 <__pthread_key_create>
   14240:	ldr	x21, [x21]
   14244:	add	x8, x20, #0x8
   14248:	cbz	x21, 14268 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x2d8>
   1424c:	ldaxr	w9, [x8]
   14250:	sub	w10, w9, #0x1
   14254:	stlxr	w11, w10, [x8]
   14258:	cbnz	w11, 1424c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x2bc>
   1425c:	cmp	w9, #0x1
   14260:	b.eq	1427c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x2ec>  // b.none
   14264:	b	142bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x32c>
   14268:	ldr	w9, [x8]
   1426c:	sub	w10, w9, #0x1
   14270:	str	w10, [x8]
   14274:	cmp	w9, #0x1
   14278:	b.ne	142bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x32c>  // b.any
   1427c:	mov	x22, x20
   14280:	ldr	x8, [x22], #12
   14284:	mov	x0, x20
   14288:	ldr	x8, [x8, #16]
   1428c:	blr	x8
   14290:	cbz	x21, 142d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x344>
   14294:	ldaxr	w8, [x22]
   14298:	sub	w9, w8, #0x1
   1429c:	stlxr	w10, w9, [x22]
   142a0:	cbnz	w10, 14294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x304>
   142a4:	cmp	w8, #0x1
   142a8:	b.ne	142bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x32c>  // b.any
   142ac:	ldr	x8, [x20]
   142b0:	mov	x0, x20
   142b4:	ldr	x8, [x8, #24]
   142b8:	blr	x8
   142bc:	mov	w0, w19
   142c0:	ldp	x20, x19, [sp, #64]
   142c4:	ldp	x22, x21, [sp, #48]
   142c8:	ldp	x29, x30, [sp, #32]
   142cc:	add	sp, sp, #0x50
   142d0:	ret
   142d4:	ldr	w8, [x22]
   142d8:	sub	w9, w8, #0x1
   142dc:	str	w9, [x22]
   142e0:	cmp	w8, #0x1
   142e4:	b.eq	142ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x31c>  // b.none
   142e8:	b	142bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x32c>
   142ec:	mov	w3, #0x10                  	// #16
   142f0:	mov	x0, x21
   142f4:	mov	x1, x22
   142f8:	mov	x2, xzr
   142fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14300:	ldr	w8, [x20, #24]
   14304:	b	14088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0xf8>
   14308:	mov	w3, #0x10                  	// #16
   1430c:	mov	x0, x21
   14310:	mov	x1, x22
   14314:	mov	x2, xzr
   14318:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1431c:	ldr	w8, [x20, #24]
   14320:	b	140cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x13c>
   14324:	mov	w3, #0x10                  	// #16
   14328:	mov	x0, x21
   1432c:	mov	x1, x22
   14330:	mov	x2, xzr
   14334:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14338:	ldr	w8, [x20, #24]
   1433c:	b	14110 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x180>
   14340:	mov	w3, #0x10                  	// #16
   14344:	mov	x0, x21
   14348:	mov	x1, x22
   1434c:	mov	x2, xzr
   14350:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14354:	ldr	w8, [x20, #24]
   14358:	b	14154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x1c4>
   1435c:	mov	w3, #0x10                  	// #16
   14360:	mov	x0, x21
   14364:	mov	x1, x22
   14368:	mov	x2, xzr
   1436c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14370:	ldr	w8, [x20, #24]
   14374:	b	14198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv+0x208>
   14378:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1437c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14380:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14384:	add	x0, x0, #0x0
   14388:	add	x1, x1, #0x0
   1438c:	add	x3, x3, #0x0
   14390:	mov	w2, #0x43                  	// #67
   14394:	bl	0 <__assert_fail>

0000000000014398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv>:
   14398:	sub	sp, sp, #0x50
   1439c:	stp	x29, x30, [sp, #32]
   143a0:	stp	x22, x21, [sp, #48]
   143a4:	stp	x20, x19, [sp, #64]
   143a8:	add	x29, sp, #0x20
   143ac:	mov	x19, x0
   143b0:	mov	w0, #0x220                 	// #544
   143b4:	bl	0 <_Znwm>
   143b8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   143bc:	ldr	x8, [x8]
   143c0:	movi	v0.2s, #0x1
   143c4:	str	d0, [x0, #8]
   143c8:	movi	v0.2d, #0x0
   143cc:	mov	x22, x0
   143d0:	add	x8, x8, #0x10
   143d4:	mov	x21, x0
   143d8:	mov	w9, #0x20                  	// #32
   143dc:	str	x8, [x0]
   143e0:	mov	w8, #0x1                   	// #1
   143e4:	stp	q0, q0, [x0, #48]
   143e8:	stp	q0, q0, [x0, #80]
   143ec:	stp	q0, q0, [x0, #112]
   143f0:	stp	q0, q0, [x0, #144]
   143f4:	stp	q0, q0, [x0, #176]
   143f8:	stp	q0, q0, [x0, #208]
   143fc:	stp	q0, q0, [x0, #240]
   14400:	stp	q0, q0, [x0, #272]
   14404:	stp	q0, q0, [x0, #304]
   14408:	stp	q0, q0, [x0, #336]
   1440c:	stp	q0, q0, [x0, #368]
   14410:	stp	q0, q0, [x0, #400]
   14414:	stp	q0, q0, [x0, #432]
   14418:	stp	q0, q0, [x0, #464]
   1441c:	stp	q0, q0, [x0, #496]
   14420:	str	q0, [x22, #32]!
   14424:	ldur	w12, [x29, #-5]
   14428:	str	q0, [x0, #528]
   1442c:	str	x22, [x21, #16]!
   14430:	stp	w8, w9, [x0, #24]
   14434:	ldur	w9, [x29, #-8]
   14438:	mov	w10, #0xc                   	// #12
   1443c:	str	x10, [x22]
   14440:	mov	w11, #0xff                  	// #255
   14444:	str	w12, [x0, #44]
   14448:	stur	w9, [x0, #41]
   1444c:	ldr	w9, [x0, #28]
   14450:	ldur	w10, [x29, #-8]
   14454:	strb	w11, [x0, #40]
   14458:	ldur	w11, [x29, #-5]
   1445c:	str	x8, [x0, #48]
   14460:	mov	w8, w8
   14464:	mov	w12, #0x2                   	// #2
   14468:	cmp	w8, w9
   1446c:	strb	w12, [x0, #56]
   14470:	str	w11, [x0, #60]
   14474:	stur	w10, [x0, #57]
   14478:	b.cs	1477c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   1447c:	add	w8, w8, #0x1
   14480:	mov	x20, x0
   14484:	cmp	w8, w9
   14488:	str	w8, [x0, #24]
   1448c:	b.cs	146f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x358>  // b.hs, b.nlast
   14490:	ldr	x9, [x20, #16]
   14494:	mov	w10, #0x6                   	// #6
   14498:	mov	w11, #0x4                   	// #4
   1449c:	add	x8, x9, w8, uxtw #4
   144a0:	str	x10, [x8]
   144a4:	strb	w11, [x8, #8]
   144a8:	ldur	w9, [x29, #-5]
   144ac:	ldur	w10, [x29, #-8]
   144b0:	str	w9, [x8, #12]
   144b4:	stur	w10, [x8, #9]
   144b8:	ldp	w8, w9, [x20, #24]
   144bc:	cmp	w8, w9
   144c0:	b.cs	1477c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   144c4:	add	w8, w8, #0x1
   144c8:	cmp	w8, w9
   144cc:	str	w8, [x20, #24]
   144d0:	b.cs	1470c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x374>  // b.hs, b.nlast
   144d4:	ldr	x9, [x20, #16]
   144d8:	mov	w10, #0x1                   	// #1
   144dc:	mov	w11, #0x2                   	// #2
   144e0:	add	x8, x9, w8, uxtw #4
   144e4:	str	x10, [x8]
   144e8:	strb	w11, [x8, #8]
   144ec:	ldur	w9, [x29, #-5]
   144f0:	ldur	w10, [x29, #-8]
   144f4:	str	w9, [x8, #12]
   144f8:	stur	w10, [x8, #9]
   144fc:	ldp	w8, w9, [x20, #24]
   14500:	cmp	w8, w9
   14504:	b.cs	1477c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   14508:	add	w8, w8, #0x1
   1450c:	cmp	w8, w9
   14510:	str	w8, [x20, #24]
   14514:	b.cs	14728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x390>  // b.hs, b.nlast
   14518:	ldr	x9, [x20, #16]
   1451c:	mov	w10, #0x6                   	// #6
   14520:	mov	w11, #0x4                   	// #4
   14524:	add	x8, x9, w8, uxtw #4
   14528:	str	x10, [x8]
   1452c:	strb	w11, [x8, #8]
   14530:	ldur	w9, [x29, #-5]
   14534:	ldur	w10, [x29, #-8]
   14538:	str	w9, [x8, #12]
   1453c:	stur	w10, [x8, #9]
   14540:	ldp	w8, w9, [x20, #24]
   14544:	cmp	w8, w9
   14548:	b.cs	1477c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   1454c:	add	w8, w8, #0x1
   14550:	cmp	w8, w9
   14554:	str	w8, [x20, #24]
   14558:	b.cs	14744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3ac>  // b.hs, b.nlast
   1455c:	ldr	x9, [x20, #16]
   14560:	mov	w10, #0x6                   	// #6
   14564:	add	x8, x9, w8, uxtw #4
   14568:	str	xzr, [x8]
   1456c:	strb	w10, [x8, #8]
   14570:	ldur	w9, [x29, #-5]
   14574:	ldur	w10, [x29, #-8]
   14578:	str	w9, [x8, #12]
   1457c:	stur	w10, [x8, #9]
   14580:	ldp	w8, w9, [x20, #24]
   14584:	cmp	w8, w9
   14588:	b.cs	1477c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   1458c:	add	w8, w8, #0x1
   14590:	cmp	w8, w9
   14594:	str	w8, [x20, #24]
   14598:	b.cs	14760 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3c8>  // b.hs, b.nlast
   1459c:	ldr	x9, [x20, #16]
   145a0:	mov	w10, #0x6                   	// #6
   145a4:	mov	w11, #0x4                   	// #4
   145a8:	add	x8, x9, w8, uxtw #4
   145ac:	str	x10, [x8]
   145b0:	strb	w11, [x8, #8]
   145b4:	ldur	w9, [x29, #-5]
   145b8:	ldur	w10, [x29, #-8]
   145bc:	str	w9, [x8, #12]
   145c0:	stur	w10, [x8, #9]
   145c4:	ldp	w8, w9, [x20, #24]
   145c8:	cmp	w8, w9
   145cc:	b.cs	1477c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x3e4>  // b.hs, b.nlast
   145d0:	add	w8, w8, #0x1
   145d4:	str	w8, [x20, #24]
   145d8:	ldr	x19, [x19]
   145dc:	mov	x1, x21
   145e0:	stp	x21, x20, [sp, #8]
   145e4:	mov	x0, x19
   145e8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   145ec:	ldp	x1, x8, [x19, #32]
   145f0:	add	x20, x19, #0x18
   145f4:	cmp	x1, x8
   145f8:	b.eq	14618 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x280>  // b.none
   145fc:	stp	x21, xzr, [x1]
   14600:	ldr	x9, [sp, #16]
   14604:	add	x8, x1, #0x10
   14608:	stp	xzr, xzr, [sp, #8]
   1460c:	str	x9, [x1, #8]
   14610:	str	x8, [x19, #32]
   14614:	b	14628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x290>
   14618:	add	x2, sp, #0x8
   1461c:	mov	x0, x20
   14620:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14624:	ldr	x8, [x19, #32]
   14628:	ldr	x9, [x20]
   1462c:	ldr	x20, [sp, #16]
   14630:	sub	x8, x8, x9
   14634:	lsr	x8, x8, #4
   14638:	add	w19, w8, #0x3
   1463c:	cbz	x20, 146c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x328>
   14640:	adrp	x21, 0 <__pthread_key_create>
   14644:	ldr	x21, [x21]
   14648:	add	x8, x20, #0x8
   1464c:	cbz	x21, 1466c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x2d4>
   14650:	ldaxr	w9, [x8]
   14654:	sub	w10, w9, #0x1
   14658:	stlxr	w11, w10, [x8]
   1465c:	cbnz	w11, 14650 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x2b8>
   14660:	cmp	w9, #0x1
   14664:	b.eq	14680 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x2e8>  // b.none
   14668:	b	146c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x328>
   1466c:	ldr	w9, [x8]
   14670:	sub	w10, w9, #0x1
   14674:	str	w10, [x8]
   14678:	cmp	w9, #0x1
   1467c:	b.ne	146c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x328>  // b.any
   14680:	mov	x22, x20
   14684:	ldr	x8, [x22], #12
   14688:	mov	x0, x20
   1468c:	ldr	x8, [x8, #16]
   14690:	blr	x8
   14694:	cbz	x21, 146d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x340>
   14698:	ldaxr	w8, [x22]
   1469c:	sub	w9, w8, #0x1
   146a0:	stlxr	w10, w9, [x22]
   146a4:	cbnz	w10, 14698 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x300>
   146a8:	cmp	w8, #0x1
   146ac:	b.ne	146c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x328>  // b.any
   146b0:	ldr	x8, [x20]
   146b4:	mov	x0, x20
   146b8:	ldr	x8, [x8, #24]
   146bc:	blr	x8
   146c0:	mov	w0, w19
   146c4:	ldp	x20, x19, [sp, #64]
   146c8:	ldp	x22, x21, [sp, #48]
   146cc:	ldp	x29, x30, [sp, #32]
   146d0:	add	sp, sp, #0x50
   146d4:	ret
   146d8:	ldr	w8, [x22]
   146dc:	sub	w9, w8, #0x1
   146e0:	str	w9, [x22]
   146e4:	cmp	w8, #0x1
   146e8:	b.eq	146b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x318>  // b.none
   146ec:	b	146c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x328>
   146f0:	mov	w3, #0x10                  	// #16
   146f4:	mov	x0, x21
   146f8:	mov	x1, x22
   146fc:	mov	x2, xzr
   14700:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14704:	ldr	w8, [x20, #24]
   14708:	b	14490 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0xf8>
   1470c:	mov	w3, #0x10                  	// #16
   14710:	mov	x0, x21
   14714:	mov	x1, x22
   14718:	mov	x2, xzr
   1471c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14720:	ldr	w8, [x20, #24]
   14724:	b	144d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x13c>
   14728:	mov	w3, #0x10                  	// #16
   1472c:	mov	x0, x21
   14730:	mov	x1, x22
   14734:	mov	x2, xzr
   14738:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1473c:	ldr	w8, [x20, #24]
   14740:	b	14518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x180>
   14744:	mov	w3, #0x10                  	// #16
   14748:	mov	x0, x21
   1474c:	mov	x1, x22
   14750:	mov	x2, xzr
   14754:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14758:	ldr	w8, [x20, #24]
   1475c:	b	1455c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x1c4>
   14760:	mov	w3, #0x10                  	// #16
   14764:	mov	x0, x21
   14768:	mov	x1, x22
   1476c:	mov	x2, xzr
   14770:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14774:	ldr	w8, [x20, #24]
   14778:	b	1459c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv+0x204>
   1477c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14780:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14784:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14788:	add	x0, x0, #0x0
   1478c:	add	x1, x1, #0x0
   14790:	add	x3, x3, #0x0
   14794:	mov	w2, #0x43                  	// #67
   14798:	bl	0 <__assert_fail>

000000000001479c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE>:
   1479c:	sub	sp, sp, #0x1d0
   147a0:	stp	x29, x30, [sp, #368]
   147a4:	str	x28, [sp, #384]
   147a8:	stp	x26, x25, [sp, #400]
   147ac:	stp	x24, x23, [sp, #416]
   147b0:	stp	x22, x21, [sp, #432]
   147b4:	stp	x20, x19, [sp, #448]
   147b8:	add	x29, sp, #0x170
   147bc:	cbz	x2, 14bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x438>
   147c0:	ldp	w8, w9, [x3, #8]
   147c4:	mov	x19, x3
   147c8:	mov	x22, x2
   147cc:	mov	x21, x1
   147d0:	mov	x20, x0
   147d4:	cmp	w8, w9
   147d8:	b.cs	14c0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x470>  // b.hs, b.nlast
   147dc:	ldr	x9, [x19]
   147e0:	mov	w10, #0x23                  	// #35
   147e4:	str	x10, [x9, w8, uxtw #3]
   147e8:	ldp	w8, w9, [x19, #8]
   147ec:	cmp	w8, w9
   147f0:	b.cs	14ca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.hs, b.nlast
   147f4:	add	w8, w8, #0x1
   147f8:	cmp	w8, w9
   147fc:	str	w8, [x19, #8]
   14800:	b.cs	14c28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x48c>  // b.hs, b.nlast
   14804:	ldr	x9, [x19]
   14808:	str	x22, [x9, w8, uxtw #3]
   1480c:	ldp	w8, w9, [x19, #8]
   14810:	cmp	w8, w9
   14814:	b.cs	14ca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.hs, b.nlast
   14818:	add	w8, w8, #0x1
   1481c:	adrp	x10, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14820:	movi	v0.2d, #0x0
   14824:	str	w8, [x19, #8]
   14828:	stur	q0, [sp, #24]
   1482c:	stur	q0, [sp, #40]
   14830:	stur	q0, [sp, #56]
   14834:	stur	q0, [sp, #72]
   14838:	ldr	d0, [x10]
   1483c:	add	x9, sp, #0x60
   14840:	mov	w8, #0x2                   	// #2
   14844:	add	x23, x9, #0x10
   14848:	add	x25, x21, x22, lsl #3
   1484c:	mov	x26, x21
   14850:	stp	x9, xzr, [sp]
   14854:	str	w8, [sp, #16]
   14858:	stp	xzr, x23, [sp, #88]
   1485c:	str	d0, [sp, #104]
   14860:	b	14880 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0xe4>
   14864:	mov	w1, w24
   14868:	mov	x0, sp
   1486c:	mov	w2, #0x6                   	// #6
   14870:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14874:	add	x26, x26, #0x8
   14878:	cmp	x26, x25
   1487c:	b.eq	148c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x12c>  // b.none
   14880:	ldr	x0, [x26]
   14884:	cbz	x0, 14c60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x4c4>
   14888:	ldrb	w8, [x0]
   1488c:	cbnz	w8, 14c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x4e4>
   14890:	bl	0 <_ZNK4llvm8MDString9getStringEv>
   14894:	mov	x24, x1
   14898:	cmp	w24, #0x20
   1489c:	b.cc	14864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0xc8>  // b.lo, b.ul, b.last
   148a0:	mov	w1, #0x20                  	// #32
   148a4:	bfxil	w1, w24, #0, #5
   148a8:	mov	x0, sp
   148ac:	mov	w2, #0x6                   	// #6
   148b0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   148b4:	lsr	w1, w24, #5
   148b8:	cmp	w24, #0x3ff
   148bc:	mov	w24, w1
   148c0:	b.hi	148a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x104>  // b.pmore
   148c4:	b	14868 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0xcc>
   148c8:	ldr	w8, [sp, #8]
   148cc:	cbz	w8, 14920 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x184>
   148d0:	ldr	x24, [sp]
   148d4:	ldr	w25, [sp, #12]
   148d8:	ldp	w8, w9, [x24, #8]
   148dc:	sub	x9, x9, x8
   148e0:	cmp	x9, #0x3
   148e4:	b.hi	14900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x164>  // b.pmore
   148e8:	add	x2, x8, #0x4
   148ec:	add	x1, x24, #0x10
   148f0:	mov	w3, #0x1                   	// #1
   148f4:	mov	x0, x24
   148f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   148fc:	ldr	w8, [x24, #8]
   14900:	ldr	x9, [x24]
   14904:	str	w25, [x9, x8]
   14908:	ldp	w8, w9, [x24, #8]
   1490c:	add	x8, x8, #0x4
   14910:	cmp	x8, x9
   14914:	b.hi	14ca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.pmore
   14918:	str	w8, [x24, #8]
   1491c:	str	xzr, [sp, #8]
   14920:	mov	x0, sp
   14924:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14928:	ldp	w8, w9, [x19, #8]
   1492c:	ldr	w24, [sp, #104]
   14930:	cmp	w8, w9
   14934:	b.cs	14c44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x4a8>  // b.hs, b.nlast
   14938:	ldr	x9, [x19]
   1493c:	str	x24, [x9, w8, uxtw #3]
   14940:	ldp	w8, w9, [x19, #8]
   14944:	cmp	w8, w9
   14948:	b.cs	14ca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.hs, b.nlast
   1494c:	add	w8, w8, #0x1
   14950:	lsl	x25, x22, #3
   14954:	str	w8, [x19, #8]
   14958:	ldr	x0, [x21]
   1495c:	cbz	x0, 14c60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x4c4>
   14960:	ldrb	w8, [x0]
   14964:	cbnz	w8, 14c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x4e4>
   14968:	bl	0 <_ZNK4llvm8MDString9getStringEv>
   1496c:	ldp	w8, w9, [sp, #104]
   14970:	mov	x22, x1
   14974:	mov	x24, x0
   14978:	sub	x9, x9, x8
   1497c:	cmp	x1, x9
   14980:	b.ls	14998 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x1fc>  // b.plast
   14984:	add	x2, x22, x8
   14988:	add	x0, sp, #0x60
   1498c:	mov	w3, #0x1                   	// #1
   14990:	mov	x1, x23
   14994:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14998:	cbz	x22, 149b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x218>
   1499c:	ldr	x8, [sp, #96]
   149a0:	ldr	w9, [sp, #104]
   149a4:	mov	x1, x24
   149a8:	mov	x2, x22
   149ac:	add	x0, x8, x9
   149b0:	bl	0 <memcpy>
   149b4:	ldp	w8, w9, [sp, #104]
   149b8:	add	x8, x22, x8
   149bc:	cmp	x8, x9
   149c0:	b.hi	14ca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.pmore
   149c4:	subs	x25, x25, #0x8
   149c8:	add	x21, x21, #0x8
   149cc:	str	w8, [sp, #104]
   149d0:	b.ne	14958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x1bc>  // b.any
   149d4:	ldr	x21, [x20]
   149d8:	mov	w0, #0x220                 	// #544
   149dc:	bl	0 <_Znwm>
   149e0:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   149e4:	ldr	x8, [x8]
   149e8:	movi	v0.2s, #0x1
   149ec:	str	d0, [x0, #8]
   149f0:	movi	v0.2d, #0x0
   149f4:	mov	x9, x0
   149f8:	add	x8, x8, #0x10
   149fc:	mov	x22, x0
   14a00:	mov	w10, #0x23                  	// #35
   14a04:	str	x8, [x0]
   14a08:	stp	q0, q0, [x0, #48]
   14a0c:	stp	q0, q0, [x0, #80]
   14a10:	stp	q0, q0, [x0, #112]
   14a14:	stp	q0, q0, [x0, #144]
   14a18:	stp	q0, q0, [x0, #176]
   14a1c:	stp	q0, q0, [x0, #208]
   14a20:	stp	q0, q0, [x0, #240]
   14a24:	stp	q0, q0, [x0, #272]
   14a28:	stp	q0, q0, [x0, #304]
   14a2c:	stp	q0, q0, [x0, #336]
   14a30:	stp	q0, q0, [x0, #368]
   14a34:	stp	q0, q0, [x0, #400]
   14a38:	stp	q0, q0, [x0, #432]
   14a3c:	stp	q0, q0, [x0, #464]
   14a40:	stp	q0, q0, [x0, #496]
   14a44:	str	q0, [x9, #32]!
   14a48:	str	q0, [x0, #528]
   14a4c:	str	x9, [x22, #16]!
   14a50:	str	x10, [x9]
   14a54:	adrp	x10, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14a58:	ldr	d0, [x10]
   14a5c:	mov	w8, #0x6                   	// #6
   14a60:	mov	w9, #0x4                   	// #4
   14a64:	mov	w11, #0xff                  	// #255
   14a68:	str	d0, [x0, #24]
   14a6c:	mov	w10, #0xa                   	// #10
   14a70:	str	x8, [x0, #48]
   14a74:	strb	w9, [x0, #56]
   14a78:	str	x8, [x0, #64]
   14a7c:	strb	w9, [x0, #72]
   14a80:	ldp	w8, w9, [x0, #24]
   14a84:	strb	w11, [x0, #40]
   14a88:	ldur	w11, [sp, #3]
   14a8c:	strb	w10, [x0, #88]
   14a90:	ldr	w10, [sp]
   14a94:	cmp	w8, w9
   14a98:	str	w11, [x0, #92]
   14a9c:	str	xzr, [x0, #80]
   14aa0:	stur	w10, [x0, #89]
   14aa4:	b.cs	14ca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x504>  // b.hs, b.nlast
   14aa8:	add	w8, w8, #0x1
   14aac:	str	w8, [x0, #24]
   14ab0:	ldr	x20, [x20]
   14ab4:	stp	x22, x0, [sp]
   14ab8:	mov	x1, x22
   14abc:	mov	x0, x20
   14ac0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14ac4:	ldp	x1, x8, [x20, #32]
   14ac8:	add	x23, x20, #0x18
   14acc:	cmp	x1, x8
   14ad0:	b.eq	14af0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x354>  // b.none
   14ad4:	stp	x22, xzr, [x1]
   14ad8:	ldr	x9, [sp, #8]
   14adc:	add	x8, x1, #0x10
   14ae0:	stp	xzr, xzr, [sp]
   14ae4:	str	x9, [x1, #8]
   14ae8:	str	x8, [x20, #32]
   14aec:	b	14b00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x364>
   14af0:	mov	x2, sp
   14af4:	mov	x0, x23
   14af8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14afc:	ldr	x8, [x20, #32]
   14b00:	ldr	x9, [x23]
   14b04:	ldr	x22, [sp, #8]
   14b08:	sub	x8, x8, x9
   14b0c:	lsr	x8, x8, #4
   14b10:	add	w20, w8, #0x3
   14b14:	cbz	x22, 14b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3fc>
   14b18:	adrp	x23, 0 <__pthread_key_create>
   14b1c:	ldr	x23, [x23]
   14b20:	add	x8, x22, #0x8
   14b24:	cbz	x23, 14b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3a8>
   14b28:	ldaxr	w9, [x8]
   14b2c:	sub	w10, w9, #0x1
   14b30:	stlxr	w11, w10, [x8]
   14b34:	cbnz	w11, 14b28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x38c>
   14b38:	cmp	w9, #0x1
   14b3c:	b.eq	14b58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3bc>  // b.none
   14b40:	b	14b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3fc>
   14b44:	ldr	w9, [x8]
   14b48:	sub	w10, w9, #0x1
   14b4c:	str	w10, [x8]
   14b50:	cmp	w9, #0x1
   14b54:	b.ne	14b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3fc>  // b.any
   14b58:	mov	x24, x22
   14b5c:	ldr	x8, [x24], #12
   14b60:	mov	x0, x22
   14b64:	ldr	x8, [x8, #16]
   14b68:	blr	x8
   14b6c:	cbz	x23, 14bf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x458>
   14b70:	ldaxr	w8, [x24]
   14b74:	sub	w9, w8, #0x1
   14b78:	stlxr	w10, w9, [x24]
   14b7c:	cbnz	w10, 14b70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3d4>
   14b80:	cmp	w8, #0x1
   14b84:	b.ne	14b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3fc>  // b.any
   14b88:	ldr	x8, [x22]
   14b8c:	mov	x0, x22
   14b90:	ldr	x8, [x8, #24]
   14b94:	blr	x8
   14b98:	ldr	x4, [sp, #96]
   14b9c:	ldr	w5, [sp, #104]
   14ba0:	ldr	x2, [x19]
   14ba4:	ldr	w3, [x19, #8]
   14ba8:	mov	x0, x21
   14bac:	mov	w1, w20
   14bb0:	mov	x6, xzr
   14bb4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14bb8:	str	wzr, [x19, #8]
   14bbc:	ldr	x0, [sp, #96]
   14bc0:	add	x8, sp, #0x60
   14bc4:	add	x8, x8, #0x10
   14bc8:	cmp	x0, x8
   14bcc:	b.eq	14bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x438>  // b.none
   14bd0:	bl	0 <free>
   14bd4:	ldp	x20, x19, [sp, #448]
   14bd8:	ldp	x22, x21, [sp, #432]
   14bdc:	ldp	x24, x23, [sp, #416]
   14be0:	ldp	x26, x25, [sp, #400]
   14be4:	ldr	x28, [sp, #384]
   14be8:	ldp	x29, x30, [sp, #368]
   14bec:	add	sp, sp, #0x1d0
   14bf0:	ret
   14bf4:	ldr	w8, [x24]
   14bf8:	sub	w9, w8, #0x1
   14bfc:	str	w9, [x24]
   14c00:	cmp	w8, #0x1
   14c04:	b.eq	14b88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3ec>  // b.none
   14c08:	b	14b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x3fc>
   14c0c:	add	x1, x19, #0x10
   14c10:	mov	w3, #0x8                   	// #8
   14c14:	mov	x0, x19
   14c18:	mov	x2, xzr
   14c1c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14c20:	ldr	w8, [x19, #8]
   14c24:	b	147dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x40>
   14c28:	add	x1, x19, #0x10
   14c2c:	mov	w3, #0x8                   	// #8
   14c30:	mov	x0, x19
   14c34:	mov	x2, xzr
   14c38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14c3c:	ldr	w8, [x19, #8]
   14c40:	b	14804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x68>
   14c44:	add	x1, x19, #0x10
   14c48:	mov	w3, #0x8                   	// #8
   14c4c:	mov	x0, x19
   14c50:	mov	x2, xzr
   14c54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   14c58:	ldr	w8, [x19, #8]
   14c5c:	b	14938 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataStringsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEE+0x19c>
   14c60:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14c64:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14c68:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14c6c:	add	x0, x0, #0x0
   14c70:	add	x1, x1, #0x0
   14c74:	add	x3, x3, #0x0
   14c78:	mov	w2, #0x69                  	// #105
   14c7c:	bl	0 <__assert_fail>
   14c80:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14c84:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14c88:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14c8c:	add	x0, x0, #0x0
   14c90:	add	x1, x1, #0x0
   14c94:	add	x3, x3, #0x0
   14c98:	mov	w2, #0x108                 	// #264
   14c9c:	bl	0 <__assert_fail>
   14ca0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14ca4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14ca8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14cac:	add	x0, x0, #0x0
   14cb0:	add	x1, x1, #0x0
   14cb4:	add	x3, x3, #0x0
   14cb8:	mov	w2, #0x43                  	// #67
   14cbc:	bl	0 <__assert_fail>

0000000000014cc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE>:
   14cc0:	sub	sp, sp, #0xa0
   14cc4:	stp	x29, x30, [sp, #64]
   14cc8:	stp	x28, x27, [sp, #80]
   14ccc:	stp	x26, x25, [sp, #96]
   14cd0:	stp	x24, x23, [sp, #112]
   14cd4:	stp	x22, x21, [sp, #128]
   14cd8:	stp	x20, x19, [sp, #144]
   14cdc:	add	x29, sp, #0x40
   14ce0:	cbz	x2, 15d78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10b8>
   14ce4:	add	x8, x5, #0x10
   14ce8:	stp	x8, xzr, [x29, #-16]
   14cec:	add	x8, x3, #0x10
   14cf0:	mov	x28, x5
   14cf4:	mov	x23, x4
   14cf8:	mov	x21, x3
   14cfc:	mov	x22, x1
   14d00:	mov	x25, x0
   14d04:	add	x27, x1, x2, lsl #3
   14d08:	add	x24, x5, #0x8
   14d0c:	str	x8, [sp]
   14d10:	add	x8, x0, #0x18
   14d14:	stur	x8, [x29, #-24]
   14d18:	stp	x0, x24, [sp, #16]
   14d1c:	str	x27, [sp, #8]
   14d20:	b	14d40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x80>
   14d24:	mov	x2, x21
   14d28:	mov	w3, wzr
   14d2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14d30:	str	wzr, [x21, #8]
   14d34:	add	x22, x22, #0x8
   14d38:	cmp	x22, x27
   14d3c:	b.eq	15d78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10b8>  // b.none
   14d40:	ldr	x1, [x22]
   14d44:	cbz	x28, 14e44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x184>
   14d48:	ldr	x9, [x25]
   14d4c:	ldur	x11, [x29, #-16]
   14d50:	ldr	x8, [x24]
   14d54:	ldr	x10, [x9]
   14d58:	ldr	x11, [x11]
   14d5c:	ldr	w9, [x9, #8]
   14d60:	ldr	w10, [x10, #8]
   14d64:	cmp	x8, x11
   14d68:	add	x20, x9, x10, lsl #3
   14d6c:	b.eq	14d7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xbc>  // b.none
   14d70:	str	x20, [x8], #8
   14d74:	mov	x9, x24
   14d78:	b	14e40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x180>
   14d7c:	ldr	x27, [x28]
   14d80:	mov	x26, x21
   14d84:	mov	x21, x22
   14d88:	mov	x22, x23
   14d8c:	mov	x23, x28
   14d90:	sub	x28, x8, x27
   14d94:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
   14d98:	cmp	x28, x8
   14d9c:	str	x1, [sp, #32]
   14da0:	b.eq	15e70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11b0>  // b.none
   14da4:	asr	x19, x28, #3
   14da8:	cmp	x28, #0x0
   14dac:	csinc	x8, x19, xzr, ne  // ne = any
   14db0:	adds	x8, x8, x19
   14db4:	lsr	x10, x8, #60
   14db8:	cset	w9, cs  // cs = hs, nlast
   14dbc:	cmp	x10, #0x0
   14dc0:	cset	w10, ne  // ne = any
   14dc4:	orr	w9, w9, w10
   14dc8:	cmp	w9, #0x0
   14dcc:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
   14dd0:	csel	x25, x9, x8, ne  // ne = any
   14dd4:	cbz	x25, 14de8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x128>
   14dd8:	lsl	x0, x25, #3
   14ddc:	bl	0 <_Znwm>
   14de0:	mov	x24, x0
   14de4:	b	14dec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x12c>
   14de8:	mov	x24, xzr
   14dec:	add	x19, x24, x19, lsl #3
   14df0:	cmp	x28, #0x1
   14df4:	str	x20, [x19]
   14df8:	b.lt	14e0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x14c>  // b.tstop
   14dfc:	mov	x0, x24
   14e00:	mov	x1, x27
   14e04:	mov	x2, x28
   14e08:	bl	0 <memmove>
   14e0c:	add	x19, x19, #0x8
   14e10:	cbz	x27, 14e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x15c>
   14e14:	mov	x0, x27
   14e18:	bl	0 <_ZdlPv>
   14e1c:	stp	x24, x19, [x23]
   14e20:	add	x8, x24, x25, lsl #3
   14e24:	ldur	x9, [x29, #-16]
   14e28:	ldp	x27, x25, [sp, #8]
   14e2c:	ldp	x24, x1, [sp, #24]
   14e30:	mov	x28, x23
   14e34:	mov	x23, x22
   14e38:	mov	x22, x21
   14e3c:	mov	x21, x26
   14e40:	str	x8, [x9]
   14e44:	cbz	x1, 15db8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10f8>
   14e48:	ldrb	w8, [x1]
   14e4c:	sub	w9, w8, #0x4
   14e50:	cmp	w9, #0x1b
   14e54:	b.ls	14ed0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x210>  // b.plast
   14e58:	sub	w8, w8, #0x1
   14e5c:	cmp	w8, #0x2
   14e60:	b.cs	15e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1158>  // b.hs, b.nlast
   14e64:	ldr	x26, [x1, #136]
   14e68:	ldr	w8, [x25, #72]
   14e6c:	ldr	x9, [x25, #56]
   14e70:	cbz	w8, 14f24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x264>
   14e74:	ldr	x10, [x26]
   14e78:	orr	x11, x10, #0x8
   14e7c:	cmn	x11, #0x8
   14e80:	b.eq	15df8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1138>  // b.none
   14e84:	ubfx	x11, x10, #4, #28
   14e88:	eor	w12, w11, w10, lsr #9
   14e8c:	sub	w11, w8, #0x1
   14e90:	and	w12, w12, w11
   14e94:	add	x13, x9, w12, uxtw #4
   14e98:	ldr	x14, [x13]
   14e9c:	cmp	x14, x10
   14ea0:	b.eq	14f28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x268>  // b.none
   14ea4:	mov	w15, #0x1                   	// #1
   14ea8:	cmn	x14, #0x8
   14eac:	b.eq	14f24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x264>  // b.none
   14eb0:	add	w12, w12, w15
   14eb4:	and	w12, w12, w11
   14eb8:	add	x13, x9, w12, uxtw #4
   14ebc:	ldr	x14, [x13]
   14ec0:	add	w15, w15, #0x1
   14ec4:	cmp	x14, x10
   14ec8:	b.eq	14f28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x268>  // b.none
   14ecc:	b	14ea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1e8>
   14ed0:	ldrb	w8, [x1, #1]
   14ed4:	and	w8, w8, #0x7f
   14ed8:	cmp	w8, #0x2
   14edc:	b.eq	15dd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1118>  // b.none
   14ee0:	ldr	w10, [x1, #12]
   14ee4:	cbnz	w10, 15dd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1118>
   14ee8:	cmp	w9, #0x1b
   14eec:	b.hi	15e38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1178>  // b.pmore
   14ef0:	adrp	x12, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   14ef4:	add	x12, x12, #0x0
   14ef8:	adr	x10, 14f08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x248>
   14efc:	ldrh	w11, [x12, x9, lsl #1]
   14f00:	add	x10, x10, x11, lsl #2
   14f04:	br	x10
   14f08:	cbz	x23, 156dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa1c>
   14f0c:	ldr	x8, [x23]
   14f10:	mov	x0, x25
   14f14:	mov	x2, x21
   14f18:	ldr	w3, [x8]
   14f1c:	bl	15f5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj>
   14f20:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   14f24:	add	x13, x9, x8, lsl #4
   14f28:	add	x8, x9, x8, lsl #4
   14f2c:	cmp	x13, x8
   14f30:	b.eq	15e50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1190>  // b.none
   14f34:	ldp	w8, w9, [x21, #8]
   14f38:	ldr	w10, [x13, #8]
   14f3c:	cmp	w8, w9
   14f40:	sub	w19, w10, #0x1
   14f44:	b.cs	159f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd30>  // b.hs, b.nlast
   14f48:	ldr	x9, [x21]
   14f4c:	str	x19, [x9, w8, uxtw #3]
   14f50:	ldp	w8, w9, [x21, #8]
   14f54:	cmp	w8, w9
   14f58:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   14f5c:	ldur	x0, [x29, #-24]
   14f60:	add	w8, w8, #0x1
   14f64:	mov	x1, x26
   14f68:	str	w8, [x21, #8]
   14f6c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   14f70:	ldp	w8, w9, [x21, #8]
   14f74:	mov	w19, w0
   14f78:	cmp	w8, w9
   14f7c:	b.cs	15a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd4c>  // b.hs, b.nlast
   14f80:	ldr	x9, [x21]
   14f84:	str	x19, [x9, w8, uxtw #3]
   14f88:	ldp	w8, w9, [x21, #8]
   14f8c:	cmp	w8, w9
   14f90:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   14f94:	add	w8, w8, #0x1
   14f98:	str	w8, [x21, #8]
   14f9c:	ldr	x0, [x25]
   14fa0:	mov	w1, #0x2                   	// #2
   14fa4:	b	14d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x64>
   14fa8:	cbz	x23, 154b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x7f0>
   14fac:	ldr	x8, [x23]
   14fb0:	mov	x0, x25
   14fb4:	mov	x2, x21
   14fb8:	ldr	w3, [x8, #108]
   14fbc:	bl	1dd54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj>
   14fc0:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   14fc4:	cbz	x23, 154c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x804>
   14fc8:	ldr	x8, [x23]
   14fcc:	mov	x0, x25
   14fd0:	mov	x2, x21
   14fd4:	ldr	w3, [x8, #64]
   14fd8:	bl	1ade0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj>
   14fdc:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   14fe0:	cbz	x23, 154d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x818>
   14fe4:	ldr	x8, [x23]
   14fe8:	mov	x0, x25
   14fec:	mov	x2, x21
   14ff0:	ldr	w3, [x8, #56]
   14ff4:	bl	1a654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj>
   14ff8:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   14ffc:	cbz	x23, 154ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x82c>
   15000:	ldr	x8, [x23]
   15004:	mov	x0, x25
   15008:	mov	x2, x21
   1500c:	ldr	w3, [x8, #44]
   15010:	bl	18768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj>
   15014:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15018:	cbz	x23, 15500 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x840>
   1501c:	ldr	x8, [x23]
   15020:	add	x3, x8, #0x10
   15024:	b	15504 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x844>
   15028:	cbz	x23, 15514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x854>
   1502c:	ldr	x8, [x23]
   15030:	mov	x0, x25
   15034:	mov	x2, x21
   15038:	ldr	w3, [x8, #48]
   1503c:	bl	18cd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj>
   15040:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15044:	cbz	x23, 15528 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x868>
   15048:	ldr	x8, [x23]
   1504c:	mov	x0, x25
   15050:	mov	x2, x21
   15054:	ldr	w3, [x8, #36]
   15058:	bl	178e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj>
   1505c:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15060:	cbz	x23, 1553c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x87c>
   15064:	ldr	x8, [x23]
   15068:	mov	x0, x25
   1506c:	mov	x2, x21
   15070:	ldr	w3, [x8, #100]
   15074:	bl	1d66c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj>
   15078:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   1507c:	cbz	x23, 15550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x890>
   15080:	ldr	x8, [x23]
   15084:	mov	x0, x25
   15088:	mov	x2, x21
   1508c:	ldr	w3, [x8, #96]
   15090:	bl	1d0a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj>
   15094:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15098:	cbz	x23, 15564 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8a4>
   1509c:	ldr	x8, [x23]
   150a0:	mov	x0, x25
   150a4:	mov	x2, x21
   150a8:	ldr	w3, [x8, #8]
   150ac:	bl	164f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj>
   150b0:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   150b4:	cbz	x23, 15578 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8b8>
   150b8:	ldr	x8, [x23]
   150bc:	mov	x0, x25
   150c0:	mov	x2, x21
   150c4:	ldr	w3, [x8, #60]
   150c8:	bl	1aa3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj>
   150cc:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   150d0:	mov	x20, x1
   150d4:	cbz	x23, 1558c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8cc>
   150d8:	ldr	x10, [x23]
   150dc:	ldp	w9, w11, [x21, #8]
   150e0:	mov	x26, x27
   150e4:	cmp	w8, #0x1
   150e8:	ldr	w27, [x10, #12]
   150ec:	cset	w19, eq  // eq = none
   150f0:	cmp	w9, w11
   150f4:	b.cs	15a28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd68>  // b.hs, b.nlast
   150f8:	ldr	x8, [x21]
   150fc:	str	x19, [x8, w9, uxtw #3]
   15100:	ldp	w8, w9, [x21, #8]
   15104:	cmp	w8, w9
   15108:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   1510c:	add	w8, w8, #0x1
   15110:	str	w8, [x21, #8]
   15114:	mov	x24, x20
   15118:	ldr	w10, [x24, #8]!
   1511c:	cbz	w10, 15efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x123c>
   15120:	sub	x10, x20, x10, lsl #3
   15124:	ldr	x10, [x10]
   15128:	cbz	x10, 15138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x478>
   1512c:	ldrb	w11, [x10]
   15130:	cmp	w11, #0x18
   15134:	b.ne	15e7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11bc>  // b.any
   15138:	ldr	w12, [x25, #304]
   1513c:	cbz	w12, 15a90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xdd0>
   15140:	orr	x11, x10, #0x4
   15144:	cmn	x11, #0x4
   15148:	b.eq	15f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x127c>  // b.none
   1514c:	ldr	x11, [x25, #288]
   15150:	ubfx	x13, x10, #4, #28
   15154:	eor	w14, w13, w10, lsr #9
   15158:	sub	w13, w12, #0x1
   1515c:	and	w12, w14, w13
   15160:	lsl	x14, x12, #4
   15164:	ldr	x14, [x11, x14]
   15168:	cmp	x14, x10
   1516c:	b.ne	15a60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xda0>  // b.any
   15170:	add	x10, x11, x12, lsl #4
   15174:	ldr	w20, [x10, #12]
   15178:	cmp	w8, w9
   1517c:	b.cs	15a9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xddc>  // b.hs, b.nlast
   15180:	ldr	x9, [x21]
   15184:	str	x20, [x9, w8, uxtw #3]
   15188:	ldp	w8, w9, [x21, #8]
   1518c:	cmp	w8, w9
   15190:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   15194:	add	w8, w8, #0x1
   15198:	str	w8, [x21, #8]
   1519c:	ldr	w10, [x24]
   151a0:	cmp	w10, #0x1
   151a4:	b.ls	15efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x123c>  // b.plast
   151a8:	sub	x10, x24, x10, lsl #3
   151ac:	ldr	x10, [x10]
   151b0:	cbz	x10, 15e9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11dc>
   151b4:	ldrb	w11, [x10]
   151b8:	ldr	x24, [sp, #24]
   151bc:	cmp	w11, #0x6
   151c0:	b.ne	15ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11fc>  // b.any
   151c4:	ldr	w12, [x25, #304]
   151c8:	cbz	w12, 15b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xebc>
   151cc:	orr	x11, x10, #0x4
   151d0:	cmn	x11, #0x4
   151d4:	b.eq	15f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x127c>  // b.none
   151d8:	ldr	x11, [x25, #288]
   151dc:	ubfx	x13, x10, #4, #28
   151e0:	eor	w14, w13, w10, lsr #9
   151e4:	sub	w13, w12, #0x1
   151e8:	and	w12, w13, w14
   151ec:	lsl	x14, x12, #4
   151f0:	ldr	x14, [x11, x14]
   151f4:	cmp	x14, x10
   151f8:	b.ne	15ab8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xdf8>  // b.any
   151fc:	add	x10, x11, x12, lsl #4
   15200:	ldr	w20, [x10, #12]
   15204:	cmp	w8, w9
   15208:	b.cs	15b88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xec8>  // b.hs, b.nlast
   1520c:	ldr	x9, [x21]
   15210:	str	x20, [x9, w8, uxtw #3]
   15214:	ldp	w8, w9, [x21, #8]
   15218:	cmp	w8, w9
   1521c:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   15220:	add	w8, w8, #0x1
   15224:	str	w8, [x21, #8]
   15228:	ldr	x0, [x25]
   1522c:	mov	w1, #0x25                  	// #37
   15230:	b	15964 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xca4>
   15234:	cbz	x23, 156f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa30>
   15238:	ldr	x8, [x23]
   1523c:	add	x3, x8, #0x4
   15240:	b	156f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa34>
   15244:	cbz	x23, 15704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa44>
   15248:	ldr	x8, [x23]
   1524c:	mov	x0, x25
   15250:	mov	x2, x21
   15254:	ldr	w3, [x8, #28]
   15258:	bl	16d2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj>
   1525c:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15260:	cbz	x23, 15718 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa58>
   15264:	ldr	x8, [x23]
   15268:	mov	x0, x25
   1526c:	mov	x2, x21
   15270:	ldr	w3, [x8, #68]
   15274:	bl	1b12c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj>
   15278:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   1527c:	cbz	x23, 1572c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa6c>
   15280:	ldr	x8, [x23]
   15284:	mov	x0, x25
   15288:	mov	x2, x21
   1528c:	ldr	w3, [x8, #20]
   15290:	bl	168b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj>
   15294:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15298:	cbz	x23, 15740 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa80>
   1529c:	ldr	x8, [x23]
   152a0:	mov	x0, x25
   152a4:	mov	x2, x21
   152a8:	ldr	w3, [x8, #80]
   152ac:	bl	1b714 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj>
   152b0:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   152b4:	cbz	x23, 15754 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xa94>
   152b8:	ldr	x8, [x23]
   152bc:	mov	x0, x25
   152c0:	mov	x2, x21
   152c4:	ldr	w3, [x8, #24]
   152c8:	bl	16ad4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj>
   152cc:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   152d0:	cbz	x23, 15768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xaa8>
   152d4:	ldr	x8, [x23]
   152d8:	mov	x0, x25
   152dc:	mov	x2, x21
   152e0:	ldr	w3, [x8, #52]
   152e4:	bl	198a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj>
   152e8:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   152ec:	mov	x20, x1
   152f0:	cbz	x23, 1577c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xabc>
   152f4:	ldr	x10, [x23]
   152f8:	ldp	w9, w11, [x21, #8]
   152fc:	mov	x26, x27
   15300:	cmp	w8, #0x1
   15304:	ldr	w27, [x10, #72]
   15308:	cset	w19, eq  // eq = none
   1530c:	cmp	w9, w11
   15310:	b.cs	15a44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd84>  // b.hs, b.nlast
   15314:	ldr	x8, [x21]
   15318:	str	x19, [x8, w9, uxtw #3]
   1531c:	ldp	w8, w9, [x21, #8]
   15320:	cmp	w8, w9
   15324:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   15328:	add	w8, w8, #0x1
   1532c:	str	w8, [x21, #8]
   15330:	mov	x24, x20
   15334:	ldr	w10, [x24, #8]!
   15338:	cbz	w10, 15efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x123c>
   1533c:	sub	x10, x20, x10, lsl #3
   15340:	ldr	x10, [x10]
   15344:	cbz	x10, 15350 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x690>
   15348:	ldrb	w11, [x10]
   1534c:	cbnz	w11, 15edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x121c>
   15350:	ldr	w12, [x25, #304]
   15354:	cbz	w12, 15b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xe5c>
   15358:	orr	x11, x10, #0x4
   1535c:	cmn	x11, #0x4
   15360:	b.eq	15f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x127c>  // b.none
   15364:	ldr	x11, [x25, #288]
   15368:	ubfx	x13, x10, #4, #28
   1536c:	eor	w14, w13, w10, lsr #9
   15370:	sub	w13, w12, #0x1
   15374:	and	w12, w14, w13
   15378:	lsl	x14, x12, #4
   1537c:	ldr	x14, [x11, x14]
   15380:	cmp	x14, x10
   15384:	b.ne	15aec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xe2c>  // b.any
   15388:	add	x10, x11, x12, lsl #4
   1538c:	ldr	w20, [x10, #12]
   15390:	cmp	w8, w9
   15394:	b.cs	15b28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xe68>  // b.hs, b.nlast
   15398:	ldr	x9, [x21]
   1539c:	str	x20, [x9, w8, uxtw #3]
   153a0:	ldp	w8, w9, [x21, #8]
   153a4:	cmp	w8, w9
   153a8:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   153ac:	add	w8, w8, #0x1
   153b0:	str	w8, [x21, #8]
   153b4:	ldr	w10, [x24]
   153b8:	cmp	w10, #0x1
   153bc:	b.ls	15efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x123c>  // b.plast
   153c0:	sub	x10, x24, x10, lsl #3
   153c4:	ldr	x10, [x10]
   153c8:	cbz	x10, 158f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc34>
   153cc:	ldrb	w11, [x10]
   153d0:	ldr	x24, [sp, #24]
   153d4:	sub	w11, w11, #0xb
   153d8:	cmp	w11, #0x4
   153dc:	b.cs	15f1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x125c>  // b.hs, b.nlast
   153e0:	ldr	w12, [x25, #304]
   153e4:	cbnz	w12, 15900 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc40>
   153e8:	b	15ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xee8>
   153ec:	cbz	x23, 15868 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xba8>
   153f0:	ldr	x8, [x23]
   153f4:	mov	x0, x25
   153f8:	mov	x2, x21
   153fc:	ldr	w3, [x8, #84]
   15400:	bl	1c040 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj>
   15404:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15408:	cbz	x23, 1587c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xbbc>
   1540c:	ldr	x8, [x23]
   15410:	mov	x0, x25
   15414:	mov	x2, x21
   15418:	ldr	w3, [x8, #32]
   1541c:	bl	17080 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj>
   15420:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15424:	cbz	x23, 15890 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xbd0>
   15428:	ldr	x8, [x23]
   1542c:	mov	x0, x25
   15430:	mov	x2, x21
   15434:	ldr	w3, [x8, #40]
   15438:	bl	184d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj>
   1543c:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15440:	cbz	x23, 158a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xbe4>
   15444:	ldr	x8, [x23]
   15448:	mov	x0, x25
   1544c:	mov	x2, x21
   15450:	ldr	w3, [x8, #88]
   15454:	bl	1c61c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj>
   15458:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   1545c:	cbz	x23, 158b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xbf8>
   15460:	ldr	x8, [x23]
   15464:	mov	x0, x25
   15468:	mov	x2, x21
   1546c:	ldr	w3, [x8, #76]
   15470:	bl	1b300 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj>
   15474:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15478:	cbz	x23, 158cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc0c>
   1547c:	ldr	x8, [x23]
   15480:	mov	x0, x25
   15484:	mov	x2, x21
   15488:	ldr	w3, [x8, #92]
   1548c:	bl	1ca60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj>
   15490:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15494:	cbz	x23, 158e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc20>
   15498:	ldr	x8, [x23]
   1549c:	mov	x0, x25
   154a0:	mov	x2, x21
   154a4:	ldr	w3, [x8, #104]
   154a8:	bl	1d9cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj>
   154ac:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   154b0:	mov	x0, x25
   154b4:	mov	x2, x21
   154b8:	mov	w3, wzr
   154bc:	bl	1dd54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj>
   154c0:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   154c4:	mov	x0, x25
   154c8:	mov	x2, x21
   154cc:	mov	w3, wzr
   154d0:	bl	1ade0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj>
   154d4:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   154d8:	mov	x0, x25
   154dc:	mov	x2, x21
   154e0:	mov	w3, wzr
   154e4:	bl	1a654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj>
   154e8:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   154ec:	mov	x0, x25
   154f0:	mov	x2, x21
   154f4:	mov	w3, wzr
   154f8:	bl	18768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj>
   154fc:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15500:	sub	x3, x29, #0x8
   15504:	mov	x0, x25
   15508:	mov	x2, x21
   1550c:	bl	16648 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj>
   15510:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15514:	mov	x0, x25
   15518:	mov	x2, x21
   1551c:	mov	w3, wzr
   15520:	bl	18cd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj>
   15524:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15528:	mov	x0, x25
   1552c:	mov	x2, x21
   15530:	mov	w3, wzr
   15534:	bl	178e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj>
   15538:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   1553c:	mov	x0, x25
   15540:	mov	x2, x21
   15544:	mov	w3, wzr
   15548:	bl	1d66c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj>
   1554c:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15550:	mov	x0, x25
   15554:	mov	x2, x21
   15558:	mov	w3, wzr
   1555c:	bl	1d0a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj>
   15560:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15564:	mov	x0, x25
   15568:	mov	x2, x21
   1556c:	mov	w3, wzr
   15570:	bl	164f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj>
   15574:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15578:	mov	x0, x25
   1557c:	mov	x2, x21
   15580:	mov	w3, wzr
   15584:	bl	1aa3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj>
   15588:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   1558c:	ldp	w9, w10, [x21, #8]
   15590:	cmp	w8, #0x1
   15594:	cset	w19, eq  // eq = none
   15598:	cmp	w9, w10
   1559c:	b.cs	15bd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf10>  // b.hs, b.nlast
   155a0:	ldr	x8, [x21]
   155a4:	str	x19, [x8, w9, uxtw #3]
   155a8:	ldp	w8, w9, [x21, #8]
   155ac:	cmp	w8, w9
   155b0:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   155b4:	add	w8, w8, #0x1
   155b8:	str	w8, [x21, #8]
   155bc:	mov	x24, x20
   155c0:	ldr	w10, [x24, #8]!
   155c4:	cbz	w10, 15efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x123c>
   155c8:	sub	x10, x20, x10, lsl #3
   155cc:	ldr	x10, [x10]
   155d0:	cbz	x10, 155e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x920>
   155d4:	ldrb	w11, [x10]
   155d8:	cmp	w11, #0x18
   155dc:	b.ne	15e7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11bc>  // b.any
   155e0:	ldr	w12, [x25, #304]
   155e4:	cbz	w12, 15c38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf78>
   155e8:	orr	x11, x10, #0x4
   155ec:	cmn	x11, #0x4
   155f0:	b.eq	15f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x127c>  // b.none
   155f4:	ldr	x11, [x25, #288]
   155f8:	ubfx	x13, x10, #4, #28
   155fc:	eor	w14, w13, w10, lsr #9
   15600:	sub	w13, w12, #0x1
   15604:	and	w12, w14, w13
   15608:	lsl	x14, x12, #4
   1560c:	ldr	x14, [x11, x14]
   15610:	cmp	x14, x10
   15614:	b.ne	15c08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf48>  // b.any
   15618:	add	x10, x11, x12, lsl #4
   1561c:	ldr	w20, [x10, #12]
   15620:	cmp	w8, w9
   15624:	b.cs	15c44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf84>  // b.hs, b.nlast
   15628:	ldr	x9, [x21]
   1562c:	str	x20, [x9, w8, uxtw #3]
   15630:	ldp	w8, w9, [x21, #8]
   15634:	cmp	w8, w9
   15638:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   1563c:	add	w8, w8, #0x1
   15640:	str	w8, [x21, #8]
   15644:	ldr	w10, [x24]
   15648:	cmp	w10, #0x1
   1564c:	b.ls	15efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x123c>  // b.plast
   15650:	sub	x10, x24, x10, lsl #3
   15654:	ldr	x10, [x10]
   15658:	cbz	x10, 15e9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11dc>
   1565c:	ldrb	w11, [x10]
   15660:	ldr	x24, [sp, #24]
   15664:	cmp	w11, #0x6
   15668:	b.ne	15ebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x11fc>  // b.any
   1566c:	ldr	w12, [x25, #304]
   15670:	cbz	w12, 15d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1064>
   15674:	orr	x11, x10, #0x4
   15678:	cmn	x11, #0x4
   1567c:	b.eq	15f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x127c>  // b.none
   15680:	ldr	x11, [x25, #288]
   15684:	ubfx	x13, x10, #4, #28
   15688:	eor	w14, w13, w10, lsr #9
   1568c:	sub	w13, w12, #0x1
   15690:	and	w12, w13, w14
   15694:	lsl	x14, x12, #4
   15698:	ldr	x14, [x11, x14]
   1569c:	cmp	x14, x10
   156a0:	b.ne	15c60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xfa0>  // b.any
   156a4:	add	x10, x11, x12, lsl #4
   156a8:	ldr	w20, [x10, #12]
   156ac:	cmp	w8, w9
   156b0:	b.cs	15d30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1070>  // b.hs, b.nlast
   156b4:	ldr	x9, [x21]
   156b8:	str	x20, [x9, w8, uxtw #3]
   156bc:	ldp	w8, w9, [x21, #8]
   156c0:	cmp	w8, w9
   156c4:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   156c8:	add	w8, w8, #0x1
   156cc:	str	w8, [x21, #8]
   156d0:	ldr	x0, [x25]
   156d4:	mov	w1, #0x25                  	// #37
   156d8:	b	14d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x64>
   156dc:	mov	x0, x25
   156e0:	mov	x2, x21
   156e4:	mov	w3, wzr
   156e8:	bl	15f5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj>
   156ec:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   156f0:	sub	x3, x29, #0x4
   156f4:	mov	x0, x25
   156f8:	mov	x2, x21
   156fc:	bl	1614c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj>
   15700:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15704:	mov	x0, x25
   15708:	mov	x2, x21
   1570c:	mov	w3, wzr
   15710:	bl	16d2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj>
   15714:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15718:	mov	x0, x25
   1571c:	mov	x2, x21
   15720:	mov	w3, wzr
   15724:	bl	1b12c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj>
   15728:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   1572c:	mov	x0, x25
   15730:	mov	x2, x21
   15734:	mov	w3, wzr
   15738:	bl	168b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj>
   1573c:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15740:	mov	x0, x25
   15744:	mov	x2, x21
   15748:	mov	w3, wzr
   1574c:	bl	1b714 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj>
   15750:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15754:	mov	x0, x25
   15758:	mov	x2, x21
   1575c:	mov	w3, wzr
   15760:	bl	16ad4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj>
   15764:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15768:	mov	x0, x25
   1576c:	mov	x2, x21
   15770:	mov	w3, wzr
   15774:	bl	198a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj>
   15778:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   1577c:	ldp	w9, w10, [x21, #8]
   15780:	cmp	w8, #0x1
   15784:	cset	w19, eq  // eq = none
   15788:	cmp	w9, w10
   1578c:	b.cs	15bec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf2c>  // b.hs, b.nlast
   15790:	ldr	x8, [x21]
   15794:	str	x19, [x8, w9, uxtw #3]
   15798:	ldp	w8, w9, [x21, #8]
   1579c:	cmp	w8, w9
   157a0:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   157a4:	add	w8, w8, #0x1
   157a8:	str	w8, [x21, #8]
   157ac:	mov	x24, x20
   157b0:	ldr	w10, [x24, #8]!
   157b4:	cbz	w10, 15efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x123c>
   157b8:	sub	x10, x20, x10, lsl #3
   157bc:	ldr	x10, [x10]
   157c0:	cbz	x10, 157cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xb0c>
   157c4:	ldrb	w11, [x10]
   157c8:	cbnz	w11, 15edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x121c>
   157cc:	ldr	w12, [x25, #304]
   157d0:	cbz	w12, 15cc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1004>
   157d4:	orr	x11, x10, #0x4
   157d8:	cmn	x11, #0x4
   157dc:	b.eq	15f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x127c>  // b.none
   157e0:	ldr	x11, [x25, #288]
   157e4:	ubfx	x13, x10, #4, #28
   157e8:	eor	w14, w13, w10, lsr #9
   157ec:	sub	w13, w12, #0x1
   157f0:	and	w12, w14, w13
   157f4:	lsl	x14, x12, #4
   157f8:	ldr	x14, [x11, x14]
   157fc:	cmp	x14, x10
   15800:	b.ne	15c94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xfd4>  // b.any
   15804:	add	x10, x11, x12, lsl #4
   15808:	ldr	w20, [x10, #12]
   1580c:	cmp	w8, w9
   15810:	b.cs	15cd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1010>  // b.hs, b.nlast
   15814:	ldr	x9, [x21]
   15818:	str	x20, [x9, w8, uxtw #3]
   1581c:	ldp	w8, w9, [x21, #8]
   15820:	cmp	w8, w9
   15824:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   15828:	add	w8, w8, #0x1
   1582c:	str	w8, [x21, #8]
   15830:	ldr	w10, [x24]
   15834:	cmp	w10, #0x1
   15838:	b.ls	15efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x123c>  // b.plast
   1583c:	sub	x10, x24, x10, lsl #3
   15840:	ldr	x10, [x10]
   15844:	cbz	x10, 1597c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xcbc>
   15848:	ldrb	w11, [x10]
   1584c:	ldr	x24, [sp, #24]
   15850:	sub	w11, w11, #0xb
   15854:	cmp	w11, #0x4
   15858:	b.cs	15f1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x125c>  // b.hs, b.nlast
   1585c:	ldr	w12, [x25, #304]
   15860:	cbnz	w12, 15988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xcc8>
   15864:	b	15d50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1090>
   15868:	mov	x0, x25
   1586c:	mov	x2, x21
   15870:	mov	w3, wzr
   15874:	bl	1c040 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj>
   15878:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   1587c:	mov	x0, x25
   15880:	mov	x2, x21
   15884:	mov	w3, wzr
   15888:	bl	17080 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj>
   1588c:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   15890:	mov	x0, x25
   15894:	mov	x2, x21
   15898:	mov	w3, wzr
   1589c:	bl	184d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj>
   158a0:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   158a4:	mov	x0, x25
   158a8:	mov	x2, x21
   158ac:	mov	w3, wzr
   158b0:	bl	1c61c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj>
   158b4:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   158b8:	mov	x0, x25
   158bc:	mov	x2, x21
   158c0:	mov	w3, wzr
   158c4:	bl	1b300 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj>
   158c8:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   158cc:	mov	x0, x25
   158d0:	mov	x2, x21
   158d4:	mov	w3, wzr
   158d8:	bl	1ca60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj>
   158dc:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   158e0:	mov	x0, x25
   158e4:	mov	x2, x21
   158e8:	mov	w3, wzr
   158ec:	bl	1d9cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj>
   158f0:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   158f4:	ldr	x24, [sp, #24]
   158f8:	ldr	w12, [x25, #304]
   158fc:	cbz	w12, 15ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xee8>
   15900:	orr	x11, x10, #0x4
   15904:	cmn	x11, #0x4
   15908:	b.eq	15f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x127c>  // b.none
   1590c:	ldr	x11, [x25, #288]
   15910:	ubfx	x13, x10, #4, #28
   15914:	eor	w14, w13, w10, lsr #9
   15918:	sub	w13, w12, #0x1
   1591c:	and	w12, w14, w13
   15920:	lsl	x14, x12, #4
   15924:	ldr	x14, [x11, x14]
   15928:	cmp	x14, x10
   1592c:	b.ne	15b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xe84>  // b.any
   15930:	add	x10, x11, x12, lsl #4
   15934:	ldr	w20, [x10, #12]
   15938:	cmp	w8, w9
   1593c:	b.cs	15bb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xef4>  // b.hs, b.nlast
   15940:	ldr	x9, [x21]
   15944:	str	x20, [x9, w8, uxtw #3]
   15948:	ldp	w8, w9, [x21, #8]
   1594c:	cmp	w8, w9
   15950:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   15954:	add	w8, w8, #0x1
   15958:	str	w8, [x21, #8]
   1595c:	ldr	x0, [x25]
   15960:	mov	w1, #0x19                  	// #25
   15964:	mov	x2, x21
   15968:	mov	w3, w27
   1596c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15970:	str	wzr, [x21, #8]
   15974:	mov	x27, x26
   15978:	b	14d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x74>
   1597c:	ldr	x24, [sp, #24]
   15980:	ldr	w12, [x25, #304]
   15984:	cbz	w12, 15d50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1090>
   15988:	orr	x11, x10, #0x4
   1598c:	cmn	x11, #0x4
   15990:	b.eq	15f3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x127c>  // b.none
   15994:	ldr	x11, [x25, #288]
   15998:	ubfx	x13, x10, #4, #28
   1599c:	eor	w14, w13, w10, lsr #9
   159a0:	sub	w13, w12, #0x1
   159a4:	and	w12, w14, w13
   159a8:	lsl	x14, x12, #4
   159ac:	ldr	x14, [x11, x14]
   159b0:	cmp	x14, x10
   159b4:	b.ne	15cec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x102c>  // b.any
   159b8:	add	x10, x11, x12, lsl #4
   159bc:	ldr	w20, [x10, #12]
   159c0:	cmp	w8, w9
   159c4:	b.cs	15d5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x109c>  // b.hs, b.nlast
   159c8:	ldr	x9, [x21]
   159cc:	str	x20, [x9, w8, uxtw #3]
   159d0:	ldp	w8, w9, [x21, #8]
   159d4:	cmp	w8, w9
   159d8:	b.cs	15d98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x10d8>  // b.hs, b.nlast
   159dc:	add	w8, w8, #0x1
   159e0:	str	w8, [x21, #8]
   159e4:	ldr	x0, [x25]
   159e8:	mov	w1, #0x19                  	// #25
   159ec:	b	14d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x64>
   159f0:	ldr	x1, [sp]
   159f4:	mov	w3, #0x8                   	// #8
   159f8:	mov	x0, x21
   159fc:	mov	x2, xzr
   15a00:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15a04:	ldr	w8, [x21, #8]
   15a08:	b	14f48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x288>
   15a0c:	ldr	x1, [sp]
   15a10:	mov	w3, #0x8                   	// #8
   15a14:	mov	x0, x21
   15a18:	mov	x2, xzr
   15a1c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15a20:	ldr	w8, [x21, #8]
   15a24:	b	14f80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x2c0>
   15a28:	ldr	x1, [sp]
   15a2c:	mov	w3, #0x8                   	// #8
   15a30:	mov	x0, x21
   15a34:	mov	x2, xzr
   15a38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15a3c:	ldr	w9, [x21, #8]
   15a40:	b	150f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x438>
   15a44:	ldr	x1, [sp]
   15a48:	mov	w3, #0x8                   	// #8
   15a4c:	mov	x0, x21
   15a50:	mov	x2, xzr
   15a54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15a58:	ldr	w9, [x21, #8]
   15a5c:	b	15314 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x654>
   15a60:	mov	w15, #0x1                   	// #1
   15a64:	cmn	x14, #0x4
   15a68:	b.eq	15a90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xdd0>  // b.none
   15a6c:	add	w12, w12, w15
   15a70:	and	w12, w12, w13
   15a74:	lsl	x14, x12, #4
   15a78:	ldr	x14, [x11, x14]
   15a7c:	add	w15, w15, #0x1
   15a80:	cmp	x14, x10
   15a84:	b.ne	15a64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xda4>  // b.any
   15a88:	mov	w12, w12
   15a8c:	b	15170 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4b0>
   15a90:	mov	x20, xzr
   15a94:	cmp	w8, w9
   15a98:	b.cc	15180 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4c0>  // b.lo, b.ul, b.last
   15a9c:	ldr	x1, [sp]
   15aa0:	mov	w3, #0x8                   	// #8
   15aa4:	mov	x0, x21
   15aa8:	mov	x2, xzr
   15aac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15ab0:	ldr	w8, [x21, #8]
   15ab4:	b	15180 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x4c0>
   15ab8:	mov	w15, #0x1                   	// #1
   15abc:	cmn	x14, #0x4
   15ac0:	b.eq	15b78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xeb8>  // b.none
   15ac4:	add	w12, w12, w15
   15ac8:	and	w12, w12, w13
   15acc:	lsl	x14, x12, #4
   15ad0:	ldr	x14, [x11, x14]
   15ad4:	add	w15, w15, #0x1
   15ad8:	cmp	x14, x10
   15adc:	b.ne	15abc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xdfc>  // b.any
   15ae0:	ldr	x24, [sp, #24]
   15ae4:	mov	w12, w12
   15ae8:	b	151fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x53c>
   15aec:	mov	w15, #0x1                   	// #1
   15af0:	cmn	x14, #0x4
   15af4:	b.eq	15b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xe5c>  // b.none
   15af8:	add	w12, w12, w15
   15afc:	and	w12, w12, w13
   15b00:	lsl	x14, x12, #4
   15b04:	ldr	x14, [x11, x14]
   15b08:	add	w15, w15, #0x1
   15b0c:	cmp	x14, x10
   15b10:	b.ne	15af0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xe30>  // b.any
   15b14:	mov	w12, w12
   15b18:	b	15388 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6c8>
   15b1c:	mov	x20, xzr
   15b20:	cmp	w8, w9
   15b24:	b.cc	15398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6d8>  // b.lo, b.ul, b.last
   15b28:	ldr	x1, [sp]
   15b2c:	mov	w3, #0x8                   	// #8
   15b30:	mov	x0, x21
   15b34:	mov	x2, xzr
   15b38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15b3c:	ldr	w8, [x21, #8]
   15b40:	b	15398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x6d8>
   15b44:	mov	w15, #0x1                   	// #1
   15b48:	cmn	x14, #0x4
   15b4c:	b.eq	15ba4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xee4>  // b.none
   15b50:	add	w12, w12, w15
   15b54:	and	w12, w12, w13
   15b58:	lsl	x14, x12, #4
   15b5c:	ldr	x14, [x11, x14]
   15b60:	add	w15, w15, #0x1
   15b64:	cmp	x14, x10
   15b68:	b.ne	15b48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xe88>  // b.any
   15b6c:	ldr	x24, [sp, #24]
   15b70:	mov	w12, w12
   15b74:	b	15930 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc70>
   15b78:	ldr	x24, [sp, #24]
   15b7c:	mov	x20, xzr
   15b80:	cmp	w8, w9
   15b84:	b.cc	1520c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x54c>  // b.lo, b.ul, b.last
   15b88:	ldr	x1, [sp]
   15b8c:	mov	w3, #0x8                   	// #8
   15b90:	mov	x0, x21
   15b94:	mov	x2, xzr
   15b98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15b9c:	ldr	w8, [x21, #8]
   15ba0:	b	1520c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x54c>
   15ba4:	ldr	x24, [sp, #24]
   15ba8:	mov	x20, xzr
   15bac:	cmp	w8, w9
   15bb0:	b.cc	15940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc80>  // b.lo, b.ul, b.last
   15bb4:	ldr	x1, [sp]
   15bb8:	mov	w3, #0x8                   	// #8
   15bbc:	mov	x0, x21
   15bc0:	mov	x2, xzr
   15bc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15bc8:	ldr	w8, [x21, #8]
   15bcc:	b	15940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xc80>
   15bd0:	ldr	x1, [sp]
   15bd4:	mov	w3, #0x8                   	// #8
   15bd8:	mov	x0, x21
   15bdc:	mov	x2, xzr
   15be0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15be4:	ldr	w9, [x21, #8]
   15be8:	b	155a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x8e0>
   15bec:	ldr	x1, [sp]
   15bf0:	mov	w3, #0x8                   	// #8
   15bf4:	mov	x0, x21
   15bf8:	mov	x2, xzr
   15bfc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15c00:	ldr	w9, [x21, #8]
   15c04:	b	15790 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xad0>
   15c08:	mov	w15, #0x1                   	// #1
   15c0c:	cmn	x14, #0x4
   15c10:	b.eq	15c38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf78>  // b.none
   15c14:	add	w12, w12, w15
   15c18:	and	w12, w12, w13
   15c1c:	lsl	x14, x12, #4
   15c20:	ldr	x14, [x11, x14]
   15c24:	add	w15, w15, #0x1
   15c28:	cmp	x14, x10
   15c2c:	b.ne	15c0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xf4c>  // b.any
   15c30:	mov	w12, w12
   15c34:	b	15618 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x958>
   15c38:	mov	x20, xzr
   15c3c:	cmp	w8, w9
   15c40:	b.cc	15628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x968>  // b.lo, b.ul, b.last
   15c44:	ldr	x1, [sp]
   15c48:	mov	w3, #0x8                   	// #8
   15c4c:	mov	x0, x21
   15c50:	mov	x2, xzr
   15c54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15c58:	ldr	w8, [x21, #8]
   15c5c:	b	15628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x968>
   15c60:	mov	w15, #0x1                   	// #1
   15c64:	cmn	x14, #0x4
   15c68:	b.eq	15d20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1060>  // b.none
   15c6c:	add	w12, w12, w15
   15c70:	and	w12, w12, w13
   15c74:	lsl	x14, x12, #4
   15c78:	ldr	x14, [x11, x14]
   15c7c:	add	w15, w15, #0x1
   15c80:	cmp	x14, x10
   15c84:	b.ne	15c64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xfa4>  // b.any
   15c88:	ldr	x24, [sp, #24]
   15c8c:	mov	w12, w12
   15c90:	b	156a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x9e4>
   15c94:	mov	w15, #0x1                   	// #1
   15c98:	cmn	x14, #0x4
   15c9c:	b.eq	15cc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1004>  // b.none
   15ca0:	add	w12, w12, w15
   15ca4:	and	w12, w12, w13
   15ca8:	lsl	x14, x12, #4
   15cac:	ldr	x14, [x11, x14]
   15cb0:	add	w15, w15, #0x1
   15cb4:	cmp	x14, x10
   15cb8:	b.ne	15c98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xfd8>  // b.any
   15cbc:	mov	w12, w12
   15cc0:	b	15804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xb44>
   15cc4:	mov	x20, xzr
   15cc8:	cmp	w8, w9
   15ccc:	b.cc	15814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xb54>  // b.lo, b.ul, b.last
   15cd0:	ldr	x1, [sp]
   15cd4:	mov	w3, #0x8                   	// #8
   15cd8:	mov	x0, x21
   15cdc:	mov	x2, xzr
   15ce0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15ce4:	ldr	w8, [x21, #8]
   15ce8:	b	15814 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xb54>
   15cec:	mov	w15, #0x1                   	// #1
   15cf0:	cmn	x14, #0x4
   15cf4:	b.eq	15d4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x108c>  // b.none
   15cf8:	add	w12, w12, w15
   15cfc:	and	w12, w12, w13
   15d00:	lsl	x14, x12, #4
   15d04:	ldr	x14, [x11, x14]
   15d08:	add	w15, w15, #0x1
   15d0c:	cmp	x14, x10
   15d10:	b.ne	15cf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x1030>  // b.any
   15d14:	ldr	x24, [sp, #24]
   15d18:	mov	w12, w12
   15d1c:	b	159b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xcf8>
   15d20:	ldr	x24, [sp, #24]
   15d24:	mov	x20, xzr
   15d28:	cmp	w8, w9
   15d2c:	b.cc	156b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x9f4>  // b.lo, b.ul, b.last
   15d30:	ldr	x1, [sp]
   15d34:	mov	w3, #0x8                   	// #8
   15d38:	mov	x0, x21
   15d3c:	mov	x2, xzr
   15d40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15d44:	ldr	w8, [x21, #8]
   15d48:	b	156b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0x9f4>
   15d4c:	ldr	x24, [sp, #24]
   15d50:	mov	x20, xzr
   15d54:	cmp	w8, w9
   15d58:	b.cc	159c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd08>  // b.lo, b.ul, b.last
   15d5c:	ldr	x1, [sp]
   15d60:	mov	w3, #0x8                   	// #8
   15d64:	mov	x0, x21
   15d68:	mov	x2, xzr
   15d6c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   15d70:	ldr	w8, [x21, #8]
   15d74:	b	159c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeMetadataRecordsEN4llvm8ArrayRefIPKNS1_8MetadataEEERNS1_15SmallVectorImplImEEPSt6vectorIjSaIjEEPSA_ImSaImEE+0xd08>
   15d78:	ldp	x20, x19, [sp, #144]
   15d7c:	ldp	x22, x21, [sp, #128]
   15d80:	ldp	x24, x23, [sp, #112]
   15d84:	ldp	x26, x25, [sp, #96]
   15d88:	ldp	x28, x27, [sp, #80]
   15d8c:	ldp	x29, x30, [sp, #64]
   15d90:	add	sp, sp, #0xa0
   15d94:	ret
   15d98:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15d9c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15da0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15da4:	add	x0, x0, #0x0
   15da8:	add	x1, x1, #0x0
   15dac:	add	x3, x3, #0x0
   15db0:	mov	w2, #0x43                  	// #67
   15db4:	bl	0 <__assert_fail>
   15db8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15dbc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15dc0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15dc4:	add	x0, x0, #0x0
   15dc8:	add	x1, x1, #0x0
   15dcc:	add	x3, x3, #0x0
   15dd0:	mov	w2, #0x69                  	// #105
   15dd4:	bl	0 <__assert_fail>
   15dd8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15ddc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15de0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15de4:	add	x0, x0, #0x0
   15de8:	add	x1, x1, #0x0
   15dec:	add	x3, x3, #0x0
   15df0:	mov	w2, #0x7e4                 	// #2020
   15df4:	bl	0 <__assert_fail>
   15df8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15dfc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e00:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e04:	add	x0, x0, #0x0
   15e08:	add	x1, x1, #0x0
   15e0c:	add	x3, x3, #0x0
   15e10:	mov	w2, #0x252                 	// #594
   15e14:	bl	0 <__assert_fail>
   15e18:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e1c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e20:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e24:	add	x0, x0, #0x0
   15e28:	add	x1, x1, #0x0
   15e2c:	add	x3, x3, #0x0
   15e30:	mov	w2, #0x108                 	// #264
   15e34:	bl	0 <__assert_fail>
   15e38:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e3c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e40:	add	x0, x0, #0x0
   15e44:	add	x1, x1, #0x0
   15e48:	mov	w2, #0x7e8                 	// #2024
   15e4c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   15e50:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e54:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e58:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e5c:	add	x0, x0, #0x0
   15e60:	add	x1, x1, #0x0
   15e64:	add	x3, x3, #0x0
   15e68:	mov	w2, #0xa9                  	// #169
   15e6c:	bl	0 <__assert_fail>
   15e70:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e74:	add	x0, x0, #0x0
   15e78:	bl	0 <_ZSt20__throw_length_errorPKc>
   15e7c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e80:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e84:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15e88:	add	x0, x0, #0x0
   15e8c:	add	x1, x1, #0x0
   15e90:	add	x3, x3, #0x0
   15e94:	mov	w2, #0x134                 	// #308
   15e98:	bl	0 <__assert_fail>
   15e9c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15ea0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15ea4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15ea8:	add	x0, x0, #0x0
   15eac:	add	x1, x1, #0x0
   15eb0:	add	x3, x3, #0x0
   15eb4:	mov	w2, #0x69                  	// #105
   15eb8:	bl	0 <__assert_fail>
   15ebc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15ec0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15ec4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15ec8:	add	x0, x0, #0x0
   15ecc:	add	x1, x1, #0x0
   15ed0:	add	x3, x3, #0x0
   15ed4:	mov	w2, #0x108                 	// #264
   15ed8:	bl	0 <__assert_fail>
   15edc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15ee0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15ee4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15ee8:	add	x0, x0, #0x0
   15eec:	add	x1, x1, #0x0
   15ef0:	add	x3, x3, #0x0
   15ef4:	mov	w2, #0x121                 	// #289
   15ef8:	bl	0 <__assert_fail>
   15efc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15f00:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15f04:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15f08:	add	x0, x0, #0x0
   15f0c:	add	x1, x1, #0x0
   15f10:	add	x3, x3, #0x0
   15f14:	mov	w2, #0x436                 	// #1078
   15f18:	bl	0 <__assert_fail>
   15f1c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15f20:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15f24:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15f28:	add	x0, x0, #0x0
   15f2c:	add	x1, x1, #0x0
   15f30:	add	x3, x3, #0x0
   15f34:	mov	w2, #0x134                 	// #308
   15f38:	bl	0 <__assert_fail>
   15f3c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15f40:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15f44:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   15f48:	add	x0, x0, #0x0
   15f4c:	add	x1, x1, #0x0
   15f50:	add	x3, x3, #0x0
   15f54:	mov	w2, #0x252                 	// #594
   15f58:	bl	0 <__assert_fail>

0000000000015f5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj>:
   15f5c:	stp	x29, x30, [sp, #-80]!
   15f60:	stp	x26, x25, [sp, #16]
   15f64:	stp	x24, x23, [sp, #32]
   15f68:	stp	x22, x21, [sp, #48]
   15f6c:	stp	x20, x19, [sp, #64]
   15f70:	mov	x29, sp
   15f74:	ldr	w24, [x1, #8]
   15f78:	mov	w20, w3
   15f7c:	mov	x19, x2
   15f80:	mov	x21, x1
   15f84:	mov	x22, x0
   15f88:	cbz	w24, 16088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x12c>
   15f8c:	mov	x25, xzr
   15f90:	add	x23, x19, #0x10
   15f94:	mov	x8, x24
   15f98:	sub	x8, x21, x8, lsl #3
   15f9c:	ldr	x8, [x8, x25, lsl #3]
   15fa0:	cbz	x8, 15fb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x54>
   15fa4:	ldrb	w9, [x8]
   15fa8:	cmp	w9, #0x2
   15fac:	b.eq	1612c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x1d0>  // b.none
   15fb0:	ldr	w10, [x22, #304]
   15fb4:	cbz	w10, 16024 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0xc8>
   15fb8:	orr	x9, x8, #0x4
   15fbc:	cmn	x9, #0x4
   15fc0:	b.eq	160cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x170>  // b.none
   15fc4:	ldr	x9, [x22, #288]
   15fc8:	ubfx	x11, x8, #4, #28
   15fcc:	eor	w12, w11, w8, lsr #9
   15fd0:	sub	w11, w10, #0x1
   15fd4:	and	w10, w11, w12
   15fd8:	lsl	x12, x10, #4
   15fdc:	ldr	x12, [x9, x12]
   15fe0:	cmp	x12, x8
   15fe4:	b.ne	15ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x98>  // b.any
   15fe8:	add	x8, x9, x10, lsl #4
   15fec:	ldr	w26, [x8, #12]
   15ff0:	b	16028 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0xcc>
   15ff4:	mov	w13, #0x1                   	// #1
   15ff8:	cmn	x12, #0x4
   15ffc:	b.eq	16024 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0xc8>  // b.none
   16000:	add	w10, w10, w13
   16004:	and	w10, w10, w11
   16008:	lsl	x12, x10, #4
   1600c:	ldr	x12, [x9, x12]
   16010:	add	w13, w13, #0x1
   16014:	cmp	x12, x8
   16018:	b.ne	15ff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x9c>  // b.any
   1601c:	mov	w10, w10
   16020:	b	15fe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x8c>
   16024:	mov	x26, xzr
   16028:	ldp	w8, w9, [x19, #8]
   1602c:	cmp	w8, w9
   16030:	b.cs	1606c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x110>  // b.hs, b.nlast
   16034:	ldr	x9, [x19]
   16038:	str	x26, [x9, w8, uxtw #3]
   1603c:	ldp	w8, w9, [x19, #8]
   16040:	cmp	w8, w9
   16044:	b.cs	160ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x190>  // b.hs, b.nlast
   16048:	add	x25, x25, #0x1
   1604c:	add	w8, w8, #0x1
   16050:	cmp	x25, x24
   16054:	str	w8, [x19, #8]
   16058:	b.eq	16088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x12c>  // b.none
   1605c:	ldr	w8, [x21, #8]
   16060:	cmp	x25, x8
   16064:	b.cc	15f98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x3c>  // b.lo, b.ul, b.last
   16068:	b	1610c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0x1b0>
   1606c:	mov	w3, #0x8                   	// #8
   16070:	mov	x0, x19
   16074:	mov	x1, x23
   16078:	mov	x2, xzr
   1607c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16080:	ldr	w8, [x19, #8]
   16084:	b	16034 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeMDTupleEPKN4llvm7MDTupleERNS1_15SmallVectorImplImEEj+0xd8>
   16088:	ldrb	w8, [x21, #1]
   1608c:	ldr	x0, [x22]
   16090:	mov	w9, #0x3                   	// #3
   16094:	mov	x2, x19
   16098:	and	w8, w8, #0x7f
   1609c:	cmp	w8, #0x1
   160a0:	mov	w8, #0x5                   	// #5
   160a4:	csel	w1, w8, w9, eq  // eq = none
   160a8:	mov	w3, w20
   160ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   160b0:	str	wzr, [x19, #8]
   160b4:	ldp	x20, x19, [sp, #64]
   160b8:	ldp	x22, x21, [sp, #48]
   160bc:	ldp	x24, x23, [sp, #32]
   160c0:	ldp	x26, x25, [sp, #16]
   160c4:	ldp	x29, x30, [sp], #80
   160c8:	ret
   160cc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   160d0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   160d4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   160d8:	add	x0, x0, #0x0
   160dc:	add	x1, x1, #0x0
   160e0:	add	x3, x3, #0x0
   160e4:	mov	w2, #0x252                 	// #594
   160e8:	bl	0 <__assert_fail>
   160ec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   160f0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   160f4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   160f8:	add	x0, x0, #0x0
   160fc:	add	x1, x1, #0x0
   16100:	add	x3, x3, #0x0
   16104:	mov	w2, #0x43                  	// #67
   16108:	bl	0 <__assert_fail>
   1610c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16110:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16114:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16118:	add	x0, x0, #0x0
   1611c:	add	x1, x1, #0x0
   16120:	add	x3, x3, #0x0
   16124:	mov	w2, #0x436                 	// #1078
   16128:	bl	0 <__assert_fail>
   1612c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16130:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16134:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16138:	add	x0, x0, #0x0
   1613c:	add	x1, x1, #0x0
   16140:	add	x3, x3, #0x0
   16144:	mov	w2, #0x59e                 	// #1438
   16148:	bl	0 <__assert_fail>

000000000001614c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj>:
   1614c:	stp	x29, x30, [sp, #-64]!
   16150:	str	x23, [sp, #16]
   16154:	stp	x22, x21, [sp, #32]
   16158:	stp	x20, x19, [sp, #48]
   1615c:	mov	x29, sp
   16160:	ldr	w8, [x3]
   16164:	mov	x20, x3
   16168:	mov	x19, x2
   1616c:	mov	x22, x1
   16170:	mov	x21, x0
   16174:	cbnz	w8, 16184 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x38>
   16178:	mov	x0, x21
   1617c:	bl	13f90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter22createDILocationAbbrevEv>
   16180:	str	w0, [x20]
   16184:	ldrb	w9, [x22, #1]
   16188:	ldp	w8, w10, [x19, #8]
   1618c:	and	w9, w9, #0x7f
   16190:	cmp	w9, #0x1
   16194:	cset	w23, eq  // eq = none
   16198:	cmp	w8, w10
   1619c:	b.cs	16350 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x204>  // b.hs, b.nlast
   161a0:	ldr	x9, [x19]
   161a4:	str	x23, [x9, w8, uxtw #3]
   161a8:	ldp	w8, w9, [x19, #8]
   161ac:	cmp	w8, w9
   161b0:	b.cs	16434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2e8>  // b.hs, b.nlast
   161b4:	add	w8, w8, #0x1
   161b8:	str	w8, [x19, #8]
   161bc:	ldr	w23, [x22, #4]
   161c0:	cmp	w8, w9
   161c4:	b.cs	1636c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x220>  // b.hs, b.nlast
   161c8:	ldr	x9, [x19]
   161cc:	str	x23, [x9, w8, uxtw #3]
   161d0:	ldp	w8, w9, [x19, #8]
   161d4:	cmp	w8, w9
   161d8:	b.cs	16434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2e8>  // b.hs, b.nlast
   161dc:	add	w8, w8, #0x1
   161e0:	str	w8, [x19, #8]
   161e4:	ldrh	w23, [x22, #2]
   161e8:	cmp	w8, w9
   161ec:	b.cs	16388 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x23c>  // b.hs, b.nlast
   161f0:	ldr	x9, [x19]
   161f4:	str	x23, [x9, w8, uxtw #3]
   161f8:	ldp	w8, w9, [x19, #8]
   161fc:	cmp	w8, w9
   16200:	b.cs	16434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2e8>  // b.hs, b.nlast
   16204:	add	w8, w8, #0x1
   16208:	str	w8, [x19, #8]
   1620c:	ldr	w8, [x22, #8]
   16210:	cbz	w8, 16474 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x328>
   16214:	sub	x8, x22, x8, lsl #3
   16218:	ldr	x1, [x8]
   1621c:	cbz	x1, 16494 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x348>
   16220:	ldrb	w8, [x1]
   16224:	sub	w8, w8, #0x11
   16228:	cmp	w8, #0x3
   1622c:	b.cs	164b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x368>  // b.hs, b.nlast
   16230:	add	x0, x21, #0x18
   16234:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16238:	ldp	w8, w9, [x19, #8]
   1623c:	mov	w23, w0
   16240:	cmp	w8, w9
   16244:	b.cs	163a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x258>  // b.hs, b.nlast
   16248:	ldr	x9, [x19]
   1624c:	str	x23, [x9, w8, uxtw #3]
   16250:	ldp	w8, w9, [x19, #8]
   16254:	cmp	w8, w9
   16258:	b.cs	16434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2e8>  // b.hs, b.nlast
   1625c:	add	w8, w8, #0x1
   16260:	str	w8, [x19, #8]
   16264:	ldr	w10, [x22, #8]
   16268:	cmp	w10, #0x2
   1626c:	b.ne	16290 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x144>  // b.any
   16270:	ldur	x10, [x22, #-8]
   16274:	cbz	x10, 16284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x138>
   16278:	ldrb	w11, [x10]
   1627c:	cmp	w11, #0x5
   16280:	b.ne	164d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x388>  // b.any
   16284:	ldr	w12, [x21, #304]
   16288:	cbnz	w12, 1629c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x150>
   1628c:	b	1640c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2c0>
   16290:	mov	x10, xzr
   16294:	ldr	w12, [x21, #304]
   16298:	cbz	w12, 1640c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2c0>
   1629c:	orr	x11, x10, #0x4
   162a0:	cmn	x11, #0x4
   162a4:	b.eq	16454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x308>  // b.none
   162a8:	ldr	x11, [x21, #288]
   162ac:	ubfx	x13, x10, #4, #28
   162b0:	eor	w14, w13, w10, lsr #9
   162b4:	sub	w13, w12, #0x1
   162b8:	and	w12, w14, w13
   162bc:	lsl	x14, x12, #4
   162c0:	ldr	x14, [x11, x14]
   162c4:	cmp	x14, x10
   162c8:	b.ne	163dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x290>  // b.any
   162cc:	add	x10, x11, x12, lsl #4
   162d0:	ldr	w23, [x10, #12]
   162d4:	cmp	w8, w9
   162d8:	b.cs	16418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2cc>  // b.hs, b.nlast
   162dc:	ldr	x9, [x19]
   162e0:	str	x23, [x9, w8, uxtw #3]
   162e4:	ldp	w8, w9, [x19, #8]
   162e8:	cmp	w8, w9
   162ec:	b.cs	16434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2e8>  // b.hs, b.nlast
   162f0:	add	w8, w8, #0x1
   162f4:	str	w8, [x19, #8]
   162f8:	ldrb	w10, [x22, #1]
   162fc:	cmp	w8, w9
   16300:	lsr	x22, x10, #7
   16304:	b.cs	163c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x274>  // b.hs, b.nlast
   16308:	ldr	x9, [x19]
   1630c:	str	x22, [x9, w8, uxtw #3]
   16310:	ldp	w8, w9, [x19, #8]
   16314:	cmp	w8, w9
   16318:	b.cs	16434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2e8>  // b.hs, b.nlast
   1631c:	add	w8, w8, #0x1
   16320:	str	w8, [x19, #8]
   16324:	ldr	x0, [x21]
   16328:	ldr	w3, [x20]
   1632c:	mov	w1, #0x7                   	// #7
   16330:	mov	x2, x19
   16334:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16338:	str	wzr, [x19, #8]
   1633c:	ldp	x20, x19, [sp, #48]
   16340:	ldp	x22, x21, [sp, #32]
   16344:	ldr	x23, [sp, #16]
   16348:	ldp	x29, x30, [sp], #64
   1634c:	ret
   16350:	add	x1, x19, #0x10
   16354:	mov	w3, #0x8                   	// #8
   16358:	mov	x0, x19
   1635c:	mov	x2, xzr
   16360:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16364:	ldr	w8, [x19, #8]
   16368:	b	161a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x54>
   1636c:	add	x1, x19, #0x10
   16370:	mov	w3, #0x8                   	// #8
   16374:	mov	x0, x19
   16378:	mov	x2, xzr
   1637c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16380:	ldr	w8, [x19, #8]
   16384:	b	161c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x7c>
   16388:	add	x1, x19, #0x10
   1638c:	mov	w3, #0x8                   	// #8
   16390:	mov	x0, x19
   16394:	mov	x2, xzr
   16398:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1639c:	ldr	w8, [x19, #8]
   163a0:	b	161f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0xa4>
   163a4:	add	x1, x19, #0x10
   163a8:	mov	w3, #0x8                   	// #8
   163ac:	mov	x0, x19
   163b0:	mov	x2, xzr
   163b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   163b8:	ldr	w8, [x19, #8]
   163bc:	b	16248 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0xfc>
   163c0:	add	x1, x19, #0x10
   163c4:	mov	w3, #0x8                   	// #8
   163c8:	mov	x0, x19
   163cc:	mov	x2, xzr
   163d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   163d4:	ldr	w8, [x19, #8]
   163d8:	b	16308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x1bc>
   163dc:	mov	w15, #0x1                   	// #1
   163e0:	cmn	x14, #0x4
   163e4:	b.eq	1640c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x2c0>  // b.none
   163e8:	add	w12, w12, w15
   163ec:	and	w12, w12, w13
   163f0:	lsl	x14, x12, #4
   163f4:	ldr	x14, [x11, x14]
   163f8:	add	w15, w15, #0x1
   163fc:	cmp	x14, x10
   16400:	b.ne	163e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x294>  // b.any
   16404:	mov	w12, w12
   16408:	b	162cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x180>
   1640c:	mov	x23, xzr
   16410:	cmp	w8, w9
   16414:	b.cc	162dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x190>  // b.lo, b.ul, b.last
   16418:	add	x1, x19, #0x10
   1641c:	mov	w3, #0x8                   	// #8
   16420:	mov	x0, x19
   16424:	mov	x2, xzr
   16428:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1642c:	ldr	w8, [x19, #8]
   16430:	b	162dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDILocationEPKN4llvm10DILocationERNS1_15SmallVectorImplImEERj+0x190>
   16434:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16438:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1643c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16440:	add	x0, x0, #0x0
   16444:	add	x1, x1, #0x0
   16448:	add	x3, x3, #0x0
   1644c:	mov	w2, #0x43                  	// #67
   16450:	bl	0 <__assert_fail>
   16454:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16458:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1645c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16460:	add	x0, x0, #0x0
   16464:	add	x1, x1, #0x0
   16468:	add	x3, x3, #0x0
   1646c:	mov	w2, #0x252                 	// #594
   16470:	bl	0 <__assert_fail>
   16474:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16478:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1647c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16480:	add	x0, x0, #0x0
   16484:	add	x1, x1, #0x0
   16488:	add	x3, x3, #0x0
   1648c:	mov	w2, #0x436                 	// #1078
   16490:	bl	0 <__assert_fail>
   16494:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16498:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1649c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   164a0:	add	x0, x0, #0x0
   164a4:	add	x1, x1, #0x0
   164a8:	add	x3, x3, #0x0
   164ac:	mov	w2, #0x69                  	// #105
   164b0:	bl	0 <__assert_fail>
   164b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   164b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   164bc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   164c0:	add	x0, x0, #0x0
   164c4:	add	x1, x1, #0x0
   164c8:	add	x3, x3, #0x0
   164cc:	mov	w2, #0x108                 	// #264
   164d0:	bl	0 <__assert_fail>
   164d4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   164d8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   164dc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   164e0:	add	x0, x0, #0x0
   164e4:	add	x1, x1, #0x0
   164e8:	add	x3, x3, #0x0
   164ec:	mov	w2, #0x134                 	// #308
   164f0:	bl	0 <__assert_fail>

00000000000164f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj>:
   164f4:	stp	x29, x30, [sp, #-64]!
   164f8:	stp	x24, x23, [sp, #16]
   164fc:	stp	x22, x21, [sp, #32]
   16500:	stp	x20, x19, [sp, #48]
   16504:	mov	x29, sp
   16508:	ldp	x9, x10, [x1, #24]
   1650c:	ldr	w8, [x2, #12]
   16510:	mov	x20, x2
   16514:	mov	w19, w3
   16518:	sub	x9, x10, x9
   1651c:	asr	x9, x9, #3
   16520:	add	x2, x9, #0x1
   16524:	mov	x22, x1
   16528:	cmp	x2, x8
   1652c:	mov	x21, x0
   16530:	b.ls	16548 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0x54>  // b.plast
   16534:	add	x1, x20, #0x10
   16538:	mov	w3, #0x8                   	// #8
   1653c:	mov	x0, x20
   16540:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16544:	ldr	w8, [x20, #12]
   16548:	ldrb	w10, [x22, #1]
   1654c:	ldr	w9, [x20, #8]
   16550:	and	w10, w10, #0x7f
   16554:	cmp	w10, #0x1
   16558:	cset	w10, eq  // eq = none
   1655c:	cmp	w9, w8
   16560:	orr	x23, x10, #0x6
   16564:	b.cs	1660c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0x118>  // b.hs, b.nlast
   16568:	ldr	x8, [x20]
   1656c:	str	x23, [x8, w9, uxtw #3]
   16570:	ldp	w9, w8, [x20, #8]
   16574:	cmp	w9, w8
   16578:	b.cs	16628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0x134>  // b.hs, b.nlast
   1657c:	add	x9, x9, #0x1
   16580:	str	w9, [x20, #8]
   16584:	ldp	x23, x10, [x22, #24]
   16588:	sub	x8, x8, x9
   1658c:	sub	x22, x10, x23
   16590:	asr	x24, x22, #3
   16594:	cmp	x24, x8
   16598:	b.ls	165b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0xbc>  // b.plast
   1659c:	add	x2, x24, x9
   165a0:	add	x1, x20, #0x10
   165a4:	mov	w3, #0x8                   	// #8
   165a8:	mov	x0, x20
   165ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   165b0:	cbz	x22, 165cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0xd8>
   165b4:	ldr	x8, [x20]
   165b8:	ldr	w9, [x20, #8]
   165bc:	mov	x1, x23
   165c0:	mov	x2, x22
   165c4:	add	x0, x8, x9, lsl #3
   165c8:	bl	0 <memcpy>
   165cc:	ldp	w8, w9, [x20, #8]
   165d0:	add	x8, x24, x8
   165d4:	cmp	x8, x9
   165d8:	b.hi	16628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0x134>  // b.pmore
   165dc:	str	w8, [x20, #8]
   165e0:	ldr	x0, [x21]
   165e4:	mov	w1, #0x1d                  	// #29
   165e8:	mov	x2, x20
   165ec:	mov	w3, w19
   165f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   165f4:	str	wzr, [x20, #8]
   165f8:	ldp	x20, x19, [sp, #48]
   165fc:	ldp	x22, x21, [sp, #32]
   16600:	ldp	x24, x23, [sp, #16]
   16604:	ldp	x29, x30, [sp], #64
   16608:	ret
   1660c:	add	x1, x20, #0x10
   16610:	mov	w3, #0x8                   	// #8
   16614:	mov	x0, x20
   16618:	mov	x2, xzr
   1661c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16620:	ldr	w9, [x20, #8]
   16624:	b	16568 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIExpressionEPKN4llvm12DIExpressionERNS1_15SmallVectorImplImEEj+0x74>
   16628:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1662c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16630:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16634:	add	x0, x0, #0x0
   16638:	add	x1, x1, #0x0
   1663c:	add	x3, x3, #0x0
   16640:	mov	w2, #0x43                  	// #67
   16644:	bl	0 <__assert_fail>

0000000000016648 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj>:
   16648:	stp	x29, x30, [sp, #-80]!
   1664c:	str	x25, [sp, #16]
   16650:	stp	x24, x23, [sp, #32]
   16654:	stp	x22, x21, [sp, #48]
   16658:	stp	x20, x19, [sp, #64]
   1665c:	mov	x29, sp
   16660:	ldr	w8, [x3]
   16664:	mov	x20, x3
   16668:	mov	x19, x2
   1666c:	mov	x21, x1
   16670:	mov	x22, x0
   16674:	cbnz	w8, 16684 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x3c>
   16678:	mov	x0, x22
   1667c:	bl	14398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter25createGenericDINodeAbbrevEv>
   16680:	str	w0, [x20]
   16684:	ldrb	w9, [x21, #1]
   16688:	ldp	w8, w10, [x19, #8]
   1668c:	and	w9, w9, #0x7f
   16690:	cmp	w9, #0x1
   16694:	cset	w23, eq  // eq = none
   16698:	cmp	w8, w10
   1669c:	b.cs	16820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x1d8>  // b.hs, b.nlast
   166a0:	ldr	x9, [x19]
   166a4:	str	x23, [x9, w8, uxtw #3]
   166a8:	ldp	w8, w9, [x19, #8]
   166ac:	cmp	w8, w9
   166b0:	b.cs	16894 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x24c>  // b.hs, b.nlast
   166b4:	add	w8, w8, #0x1
   166b8:	str	w8, [x19, #8]
   166bc:	ldrh	w23, [x21, #2]
   166c0:	cmp	w8, w9
   166c4:	b.cs	1683c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x1f4>  // b.hs, b.nlast
   166c8:	ldr	x9, [x19]
   166cc:	str	x23, [x9, w8, uxtw #3]
   166d0:	ldp	w8, w9, [x19, #8]
   166d4:	cmp	w8, w9
   166d8:	b.cs	16894 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x24c>  // b.hs, b.nlast
   166dc:	add	w8, w8, #0x1
   166e0:	cmp	w8, w9
   166e4:	str	w8, [x19, #8]
   166e8:	b.cs	16858 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x210>  // b.hs, b.nlast
   166ec:	ldr	x9, [x19]
   166f0:	str	xzr, [x9, w8, uxtw #3]
   166f4:	ldp	w9, w8, [x19, #8]
   166f8:	cmp	w9, w8
   166fc:	b.cs	16894 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x24c>  // b.hs, b.nlast
   16700:	add	w9, w9, #0x1
   16704:	str	w9, [x19, #8]
   16708:	ldr	w10, [x21, #8]
   1670c:	neg	x11, x10
   16710:	lsl	x11, x11, #3
   16714:	cbz	x11, 167f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x1a8>
   16718:	sub	x24, x21, x10, lsl #3
   1671c:	add	x23, x19, #0x10
   16720:	ldr	w12, [x22, #304]
   16724:	cbz	w12, 167c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x180>
   16728:	ldr	x10, [x24]
   1672c:	orr	x11, x10, #0x4
   16730:	cmn	x11, #0x4
   16734:	b.eq	16874 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x22c>  // b.none
   16738:	ldr	x11, [x22, #288]
   1673c:	ubfx	x13, x10, #4, #28
   16740:	eor	w14, w13, w10, lsr #9
   16744:	sub	w13, w12, #0x1
   16748:	and	w12, w14, w13
   1674c:	lsl	x14, x12, #4
   16750:	ldr	x14, [x11, x14]
   16754:	cmp	x14, x10
   16758:	b.ne	16798 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x150>  // b.any
   1675c:	add	x10, x11, x12, lsl #4
   16760:	ldr	w25, [x10, #12]
   16764:	cmp	w9, w8
   16768:	b.cs	167d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x18c>  // b.hs, b.nlast
   1676c:	ldr	x8, [x19]
   16770:	str	x25, [x8, w9, uxtw #3]
   16774:	ldp	w9, w8, [x19, #8]
   16778:	cmp	w9, w8
   1677c:	b.cs	16894 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x24c>  // b.hs, b.nlast
   16780:	add	x24, x24, #0x8
   16784:	add	w9, w9, #0x1
   16788:	cmp	x24, x21
   1678c:	str	w9, [x19, #8]
   16790:	b.ne	16720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0xd8>  // b.any
   16794:	b	167f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x1a8>
   16798:	mov	w15, #0x1                   	// #1
   1679c:	cmn	x14, #0x4
   167a0:	b.eq	167c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x180>  // b.none
   167a4:	add	w12, w12, w15
   167a8:	and	w12, w12, w13
   167ac:	lsl	x14, x12, #4
   167b0:	ldr	x14, [x11, x14]
   167b4:	add	w15, w15, #0x1
   167b8:	cmp	x14, x10
   167bc:	b.ne	1679c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x154>  // b.any
   167c0:	mov	w12, w12
   167c4:	b	1675c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x114>
   167c8:	mov	x25, xzr
   167cc:	cmp	w9, w8
   167d0:	b.cc	1676c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x124>  // b.lo, b.ul, b.last
   167d4:	mov	w3, #0x8                   	// #8
   167d8:	mov	x0, x19
   167dc:	mov	x1, x23
   167e0:	mov	x2, xzr
   167e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   167e8:	ldr	w9, [x19, #8]
   167ec:	b	1676c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x124>
   167f0:	ldr	x0, [x22]
   167f4:	ldr	w3, [x20]
   167f8:	mov	w1, #0xc                   	// #12
   167fc:	mov	x2, x19
   16800:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16804:	str	wzr, [x19, #8]
   16808:	ldp	x20, x19, [sp, #64]
   1680c:	ldp	x22, x21, [sp, #48]
   16810:	ldp	x24, x23, [sp, #32]
   16814:	ldr	x25, [sp, #16]
   16818:	ldp	x29, x30, [sp], #80
   1681c:	ret
   16820:	add	x1, x19, #0x10
   16824:	mov	w3, #0x8                   	// #8
   16828:	mov	x0, x19
   1682c:	mov	x2, xzr
   16830:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16834:	ldr	w8, [x19, #8]
   16838:	b	166a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x58>
   1683c:	add	x1, x19, #0x10
   16840:	mov	w3, #0x8                   	// #8
   16844:	mov	x0, x19
   16848:	mov	x2, xzr
   1684c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16850:	ldr	w8, [x19, #8]
   16854:	b	166c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0x80>
   16858:	add	x1, x19, #0x10
   1685c:	mov	w3, #0x8                   	// #8
   16860:	mov	x0, x19
   16864:	mov	x2, xzr
   16868:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1686c:	ldr	w8, [x19, #8]
   16870:	b	166ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeGenericDINodeEPKN4llvm13GenericDINodeERNS1_15SmallVectorImplImEERj+0xa4>
   16874:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16878:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1687c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16880:	add	x0, x0, #0x0
   16884:	add	x1, x1, #0x0
   16888:	add	x3, x3, #0x0
   1688c:	mov	w2, #0x252                 	// #594
   16890:	bl	0 <__assert_fail>
   16894:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16898:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1689c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   168a0:	add	x0, x0, #0x0
   168a4:	add	x1, x1, #0x0
   168a8:	add	x3, x3, #0x0
   168ac:	mov	w2, #0x43                  	// #67
   168b0:	bl	0 <__assert_fail>

00000000000168b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj>:
   168b4:	stp	x29, x30, [sp, #-64]!
   168b8:	str	x23, [sp, #16]
   168bc:	stp	x22, x21, [sp, #32]
   168c0:	stp	x20, x19, [sp, #48]
   168c4:	mov	x29, sp
   168c8:	ldrb	w9, [x1, #1]
   168cc:	ldp	w8, w10, [x2, #8]
   168d0:	mov	w20, w3
   168d4:	mov	x19, x2
   168d8:	and	w9, w9, #0x7f
   168dc:	cmp	w9, #0x1
   168e0:	cset	w9, eq  // eq = none
   168e4:	mov	x22, x1
   168e8:	mov	x21, x0
   168ec:	cmp	w8, w10
   168f0:	orr	x23, x9, #0x2
   168f4:	b.cs	169e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x130>  // b.hs, b.nlast
   168f8:	ldr	x9, [x19]
   168fc:	str	x23, [x9, w8, uxtw #3]
   16900:	ldp	w8, w9, [x19, #8]
   16904:	cmp	w8, w9
   16908:	b.cs	16a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1c0>  // b.hs, b.nlast
   1690c:	add	w8, w8, #0x1
   16910:	str	w8, [x19, #8]
   16914:	ldr	w10, [x22, #8]
   16918:	cbz	w10, 16ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x200>
   1691c:	ldr	w12, [x21, #304]
   16920:	cbz	w12, 16a4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x198>
   16924:	sub	x10, x22, x10, lsl #3
   16928:	ldr	x10, [x10]
   1692c:	orr	x11, x10, #0x4
   16930:	cmn	x11, #0x4
   16934:	b.eq	16a94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1e0>  // b.none
   16938:	ldr	x11, [x21, #288]
   1693c:	ubfx	x13, x10, #4, #28
   16940:	eor	w14, w13, w10, lsr #9
   16944:	sub	w13, w12, #0x1
   16948:	and	w12, w14, w13
   1694c:	lsl	x14, x12, #4
   16950:	ldr	x14, [x11, x14]
   16954:	cmp	x14, x10
   16958:	b.ne	16a1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x168>  // b.any
   1695c:	add	x10, x11, x12, lsl #4
   16960:	ldr	w23, [x10, #12]
   16964:	cmp	w8, w9
   16968:	b.cs	16a58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1a4>  // b.hs, b.nlast
   1696c:	ldr	x9, [x19]
   16970:	str	x23, [x9, w8, uxtw #3]
   16974:	ldp	w8, w9, [x19, #8]
   16978:	cmp	w8, w9
   1697c:	b.cs	16a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1c0>  // b.hs, b.nlast
   16980:	add	w8, w8, #0x1
   16984:	str	w8, [x19, #8]
   16988:	ldr	x10, [x22, #24]
   1698c:	cmp	w8, w9
   16990:	lsl	x11, x10, #1
   16994:	eor	x22, x11, x10, asr #63
   16998:	b.cs	16a00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x14c>  // b.hs, b.nlast
   1699c:	ldr	x9, [x19]
   169a0:	str	x22, [x9, w8, uxtw #3]
   169a4:	ldp	w8, w9, [x19, #8]
   169a8:	cmp	w8, w9
   169ac:	b.cs	16a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x1c0>  // b.hs, b.nlast
   169b0:	add	w8, w8, #0x1
   169b4:	str	w8, [x19, #8]
   169b8:	ldr	x0, [x21]
   169bc:	mov	w1, #0xd                   	// #13
   169c0:	mov	x2, x19
   169c4:	mov	w3, w20
   169c8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   169cc:	str	wzr, [x19, #8]
   169d0:	ldp	x20, x19, [sp, #48]
   169d4:	ldp	x22, x21, [sp, #32]
   169d8:	ldr	x23, [sp, #16]
   169dc:	ldp	x29, x30, [sp], #64
   169e0:	ret
   169e4:	add	x1, x19, #0x10
   169e8:	mov	w3, #0x8                   	// #8
   169ec:	mov	x0, x19
   169f0:	mov	x2, xzr
   169f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   169f8:	ldr	w8, [x19, #8]
   169fc:	b	168f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x44>
   16a00:	add	x1, x19, #0x10
   16a04:	mov	w3, #0x8                   	// #8
   16a08:	mov	x0, x19
   16a0c:	mov	x2, xzr
   16a10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16a14:	ldr	w8, [x19, #8]
   16a18:	b	1699c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0xe8>
   16a1c:	mov	w15, #0x1                   	// #1
   16a20:	cmn	x14, #0x4
   16a24:	b.eq	16a4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x198>  // b.none
   16a28:	add	w12, w12, w15
   16a2c:	and	w12, w12, w13
   16a30:	lsl	x14, x12, #4
   16a34:	ldr	x14, [x11, x14]
   16a38:	add	w15, w15, #0x1
   16a3c:	cmp	x14, x10
   16a40:	b.ne	16a20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0x16c>  // b.any
   16a44:	mov	w12, w12
   16a48:	b	1695c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0xa8>
   16a4c:	mov	x23, xzr
   16a50:	cmp	w8, w9
   16a54:	b.cc	1696c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0xb8>  // b.lo, b.ul, b.last
   16a58:	add	x1, x19, #0x10
   16a5c:	mov	w3, #0x8                   	// #8
   16a60:	mov	x0, x19
   16a64:	mov	x2, xzr
   16a68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16a6c:	ldr	w8, [x19, #8]
   16a70:	b	1696c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter15writeDISubrangeEPKN4llvm10DISubrangeERNS1_15SmallVectorImplImEEj+0xb8>
   16a74:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16a78:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16a7c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16a80:	add	x0, x0, #0x0
   16a84:	add	x1, x1, #0x0
   16a88:	add	x3, x3, #0x0
   16a8c:	mov	w2, #0x43                  	// #67
   16a90:	bl	0 <__assert_fail>
   16a94:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16a98:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16a9c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16aa0:	add	x0, x0, #0x0
   16aa4:	add	x1, x1, #0x0
   16aa8:	add	x3, x3, #0x0
   16aac:	mov	w2, #0x252                 	// #594
   16ab0:	bl	0 <__assert_fail>
   16ab4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16ab8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16abc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16ac0:	add	x0, x0, #0x0
   16ac4:	add	x1, x1, #0x0
   16ac8:	add	x3, x3, #0x0
   16acc:	mov	w2, #0x436                 	// #1078
   16ad0:	bl	0 <__assert_fail>

0000000000016ad4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj>:
   16ad4:	stp	x29, x30, [sp, #-64]!
   16ad8:	str	x23, [sp, #16]
   16adc:	stp	x22, x21, [sp, #32]
   16ae0:	stp	x20, x19, [sp, #48]
   16ae4:	mov	x29, sp
   16ae8:	ldr	w9, [x1, #4]
   16aec:	ldrb	w10, [x1, #1]
   16af0:	ldp	w8, w11, [x2, #8]
   16af4:	mov	w20, w3
   16af8:	cmp	w9, #0x0
   16afc:	and	w9, w10, #0x7f
   16b00:	cset	w10, ne  // ne = any
   16b04:	cmp	w9, #0x1
   16b08:	cset	w23, eq  // eq = none
   16b0c:	mov	x19, x2
   16b10:	mov	x22, x1
   16b14:	mov	x21, x0
   16b18:	cmp	w8, w11
   16b1c:	bfi	x23, x10, #1, #1
   16b20:	b.cs	16c1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x148>  // b.hs, b.nlast
   16b24:	ldr	x9, [x19]
   16b28:	str	x23, [x9, w8, uxtw #3]
   16b2c:	ldp	w8, w9, [x19, #8]
   16b30:	cmp	w8, w9
   16b34:	b.cs	16cac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x1d8>  // b.hs, b.nlast
   16b38:	add	w8, w8, #0x1
   16b3c:	str	w8, [x19, #8]
   16b40:	ldr	x10, [x22, #24]
   16b44:	cmp	w8, w9
   16b48:	lsl	x11, x10, #1
   16b4c:	eor	x23, x11, x10, asr #63
   16b50:	b.cs	16c38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x164>  // b.hs, b.nlast
   16b54:	ldr	x9, [x19]
   16b58:	str	x23, [x9, w8, uxtw #3]
   16b5c:	ldp	w8, w9, [x19, #8]
   16b60:	cmp	w8, w9
   16b64:	b.cs	16cac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x1d8>  // b.hs, b.nlast
   16b68:	add	w8, w8, #0x1
   16b6c:	str	w8, [x19, #8]
   16b70:	ldr	w10, [x22, #8]
   16b74:	cbz	w10, 16cec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x218>
   16b78:	sub	x10, x22, x10, lsl #3
   16b7c:	ldr	x10, [x10]
   16b80:	cbz	x10, 16b8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0xb8>
   16b84:	ldrb	w11, [x10]
   16b88:	cbnz	w11, 16d0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x238>
   16b8c:	ldr	w12, [x21, #304]
   16b90:	cbz	w12, 16c84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x1b0>
   16b94:	orr	x11, x10, #0x4
   16b98:	cmn	x11, #0x4
   16b9c:	b.eq	16ccc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x1f8>  // b.none
   16ba0:	ldr	x11, [x21, #288]
   16ba4:	ubfx	x13, x10, #4, #28
   16ba8:	eor	w14, w13, w10, lsr #9
   16bac:	sub	w13, w12, #0x1
   16bb0:	and	w12, w14, w13
   16bb4:	lsl	x14, x12, #4
   16bb8:	ldr	x14, [x11, x14]
   16bbc:	cmp	x14, x10
   16bc0:	b.ne	16c54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x180>  // b.any
   16bc4:	add	x10, x11, x12, lsl #4
   16bc8:	ldr	w22, [x10, #12]
   16bcc:	cmp	w8, w9
   16bd0:	b.cs	16c90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x1bc>  // b.hs, b.nlast
   16bd4:	ldr	x9, [x19]
   16bd8:	str	x22, [x9, w8, uxtw #3]
   16bdc:	ldp	w8, w9, [x19, #8]
   16be0:	cmp	w8, w9
   16be4:	b.cs	16cac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x1d8>  // b.hs, b.nlast
   16be8:	add	w8, w8, #0x1
   16bec:	str	w8, [x19, #8]
   16bf0:	ldr	x0, [x21]
   16bf4:	mov	w1, #0xe                   	// #14
   16bf8:	mov	x2, x19
   16bfc:	mov	w3, w20
   16c00:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16c04:	str	wzr, [x19, #8]
   16c08:	ldp	x20, x19, [sp, #48]
   16c0c:	ldp	x22, x21, [sp, #32]
   16c10:	ldr	x23, [sp, #16]
   16c14:	ldp	x29, x30, [sp], #64
   16c18:	ret
   16c1c:	add	x1, x19, #0x10
   16c20:	mov	w3, #0x8                   	// #8
   16c24:	mov	x0, x19
   16c28:	mov	x2, xzr
   16c2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16c30:	ldr	w8, [x19, #8]
   16c34:	b	16b24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x50>
   16c38:	add	x1, x19, #0x10
   16c3c:	mov	w3, #0x8                   	// #8
   16c40:	mov	x0, x19
   16c44:	mov	x2, xzr
   16c48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16c4c:	ldr	w8, [x19, #8]
   16c50:	b	16b54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x80>
   16c54:	mov	w15, #0x1                   	// #1
   16c58:	cmn	x14, #0x4
   16c5c:	b.eq	16c84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x1b0>  // b.none
   16c60:	add	w12, w12, w15
   16c64:	and	w12, w12, w13
   16c68:	lsl	x14, x12, #4
   16c6c:	ldr	x14, [x11, x14]
   16c70:	add	w15, w15, #0x1
   16c74:	cmp	x14, x10
   16c78:	b.ne	16c58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x184>  // b.any
   16c7c:	mov	w12, w12
   16c80:	b	16bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0xf0>
   16c84:	mov	x22, xzr
   16c88:	cmp	w8, w9
   16c8c:	b.cc	16bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x100>  // b.lo, b.ul, b.last
   16c90:	add	x1, x19, #0x10
   16c94:	mov	w3, #0x8                   	// #8
   16c98:	mov	x0, x19
   16c9c:	mov	x2, xzr
   16ca0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16ca4:	ldr	w8, [x19, #8]
   16ca8:	b	16bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDIEnumeratorEPKN4llvm12DIEnumeratorERNS1_15SmallVectorImplImEEj+0x100>
   16cac:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16cb0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16cb4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16cb8:	add	x0, x0, #0x0
   16cbc:	add	x1, x1, #0x0
   16cc0:	add	x3, x3, #0x0
   16cc4:	mov	w2, #0x43                  	// #67
   16cc8:	bl	0 <__assert_fail>
   16ccc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16cd0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16cd4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16cd8:	add	x0, x0, #0x0
   16cdc:	add	x1, x1, #0x0
   16ce0:	add	x3, x3, #0x0
   16ce4:	mov	w2, #0x252                 	// #594
   16ce8:	bl	0 <__assert_fail>
   16cec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16cf0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16cf4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16cf8:	add	x0, x0, #0x0
   16cfc:	add	x1, x1, #0x0
   16d00:	add	x3, x3, #0x0
   16d04:	mov	w2, #0x436                 	// #1078
   16d08:	bl	0 <__assert_fail>
   16d0c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16d10:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16d14:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16d18:	add	x0, x0, #0x0
   16d1c:	add	x1, x1, #0x0
   16d20:	add	x3, x3, #0x0
   16d24:	mov	w2, #0x121                 	// #289
   16d28:	bl	0 <__assert_fail>

0000000000016d2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj>:
   16d2c:	stp	x29, x30, [sp, #-64]!
   16d30:	str	x23, [sp, #16]
   16d34:	stp	x22, x21, [sp, #32]
   16d38:	stp	x20, x19, [sp, #48]
   16d3c:	mov	x29, sp
   16d40:	ldrb	w9, [x1, #1]
   16d44:	ldp	w8, w10, [x2, #8]
   16d48:	mov	w20, w3
   16d4c:	mov	x19, x2
   16d50:	and	w9, w9, #0x7f
   16d54:	cmp	w9, #0x1
   16d58:	mov	x22, x1
   16d5c:	cset	w23, eq  // eq = none
   16d60:	cmp	w8, w10
   16d64:	mov	x21, x0
   16d68:	b.cs	16f00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x1d4>  // b.hs, b.nlast
   16d6c:	ldr	x9, [x19]
   16d70:	str	x23, [x9, w8, uxtw #3]
   16d74:	ldp	w8, w9, [x19, #8]
   16d78:	cmp	w8, w9
   16d7c:	b.cs	17000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2d4>  // b.hs, b.nlast
   16d80:	add	w8, w8, #0x1
   16d84:	str	w8, [x19, #8]
   16d88:	ldrh	w23, [x22, #2]
   16d8c:	cmp	w8, w9
   16d90:	b.cs	16f1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x1f0>  // b.hs, b.nlast
   16d94:	ldr	x9, [x19]
   16d98:	str	x23, [x9, w8, uxtw #3]
   16d9c:	ldp	w8, w9, [x19, #8]
   16da0:	cmp	w8, w9
   16da4:	b.cs	17000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2d4>  // b.hs, b.nlast
   16da8:	add	w8, w8, #0x1
   16dac:	str	w8, [x19, #8]
   16db0:	ldr	w10, [x22, #8]
   16db4:	cmp	w10, #0x2
   16db8:	b.ls	17040 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x314>  // b.plast
   16dbc:	sub	x10, x22, x10, lsl #3
   16dc0:	ldr	x10, [x10, #16]
   16dc4:	cbz	x10, 16dd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0xa4>
   16dc8:	ldrb	w11, [x10]
   16dcc:	cbnz	w11, 17060 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x334>
   16dd0:	ldr	w12, [x21, #304]
   16dd4:	cbz	w12, 16fd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2ac>
   16dd8:	orr	x11, x10, #0x4
   16ddc:	cmn	x11, #0x4
   16de0:	b.eq	17020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2f4>  // b.none
   16de4:	ldr	x11, [x21, #288]
   16de8:	ubfx	x13, x10, #4, #28
   16dec:	eor	w14, w13, w10, lsr #9
   16df0:	sub	w13, w12, #0x1
   16df4:	and	w12, w14, w13
   16df8:	lsl	x14, x12, #4
   16dfc:	ldr	x14, [x11, x14]
   16e00:	cmp	x14, x10
   16e04:	b.ne	16fa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x27c>  // b.any
   16e08:	add	x10, x11, x12, lsl #4
   16e0c:	ldr	w23, [x10, #12]
   16e10:	cmp	w8, w9
   16e14:	b.cs	16fe4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2b8>  // b.hs, b.nlast
   16e18:	ldr	x9, [x19]
   16e1c:	str	x23, [x9, w8, uxtw #3]
   16e20:	ldp	w8, w9, [x19, #8]
   16e24:	cmp	w8, w9
   16e28:	b.cs	17000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2d4>  // b.hs, b.nlast
   16e2c:	add	w8, w8, #0x1
   16e30:	str	w8, [x19, #8]
   16e34:	ldr	x23, [x22, #32]
   16e38:	cmp	w8, w9
   16e3c:	b.cs	16f38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x20c>  // b.hs, b.nlast
   16e40:	ldr	x9, [x19]
   16e44:	str	x23, [x9, w8, uxtw #3]
   16e48:	ldp	w8, w9, [x19, #8]
   16e4c:	cmp	w8, w9
   16e50:	b.cs	17000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2d4>  // b.hs, b.nlast
   16e54:	add	w8, w8, #0x1
   16e58:	str	w8, [x19, #8]
   16e5c:	ldr	w23, [x22, #48]
   16e60:	cmp	w8, w9
   16e64:	b.cs	16f54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x228>  // b.hs, b.nlast
   16e68:	ldr	x9, [x19]
   16e6c:	str	x23, [x9, w8, uxtw #3]
   16e70:	ldp	w8, w9, [x19, #8]
   16e74:	cmp	w8, w9
   16e78:	b.cs	17000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2d4>  // b.hs, b.nlast
   16e7c:	add	w8, w8, #0x1
   16e80:	str	w8, [x19, #8]
   16e84:	ldr	w23, [x22, #52]
   16e88:	cmp	w8, w9
   16e8c:	b.cs	16f70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x244>  // b.hs, b.nlast
   16e90:	ldr	x9, [x19]
   16e94:	str	x23, [x9, w8, uxtw #3]
   16e98:	ldp	w8, w9, [x19, #8]
   16e9c:	cmp	w8, w9
   16ea0:	b.cs	17000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2d4>  // b.hs, b.nlast
   16ea4:	add	w8, w8, #0x1
   16ea8:	str	w8, [x19, #8]
   16eac:	ldr	w22, [x22, #28]
   16eb0:	cmp	w8, w9
   16eb4:	b.cs	16f8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x260>  // b.hs, b.nlast
   16eb8:	ldr	x9, [x19]
   16ebc:	str	x22, [x9, w8, uxtw #3]
   16ec0:	ldp	w8, w9, [x19, #8]
   16ec4:	cmp	w8, w9
   16ec8:	b.cs	17000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2d4>  // b.hs, b.nlast
   16ecc:	add	w8, w8, #0x1
   16ed0:	str	w8, [x19, #8]
   16ed4:	ldr	x0, [x21]
   16ed8:	mov	w1, #0xf                   	// #15
   16edc:	mov	x2, x19
   16ee0:	mov	w3, w20
   16ee4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   16ee8:	str	wzr, [x19, #8]
   16eec:	ldp	x20, x19, [sp, #48]
   16ef0:	ldp	x22, x21, [sp, #32]
   16ef4:	ldr	x23, [sp, #16]
   16ef8:	ldp	x29, x30, [sp], #64
   16efc:	ret
   16f00:	add	x1, x19, #0x10
   16f04:	mov	w3, #0x8                   	// #8
   16f08:	mov	x0, x19
   16f0c:	mov	x2, xzr
   16f10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16f14:	ldr	w8, [x19, #8]
   16f18:	b	16d6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x40>
   16f1c:	add	x1, x19, #0x10
   16f20:	mov	w3, #0x8                   	// #8
   16f24:	mov	x0, x19
   16f28:	mov	x2, xzr
   16f2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16f30:	ldr	w8, [x19, #8]
   16f34:	b	16d94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x68>
   16f38:	add	x1, x19, #0x10
   16f3c:	mov	w3, #0x8                   	// #8
   16f40:	mov	x0, x19
   16f44:	mov	x2, xzr
   16f48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16f4c:	ldr	w8, [x19, #8]
   16f50:	b	16e40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x114>
   16f54:	add	x1, x19, #0x10
   16f58:	mov	w3, #0x8                   	// #8
   16f5c:	mov	x0, x19
   16f60:	mov	x2, xzr
   16f64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16f68:	ldr	w8, [x19, #8]
   16f6c:	b	16e68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x13c>
   16f70:	add	x1, x19, #0x10
   16f74:	mov	w3, #0x8                   	// #8
   16f78:	mov	x0, x19
   16f7c:	mov	x2, xzr
   16f80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16f84:	ldr	w8, [x19, #8]
   16f88:	b	16e90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x164>
   16f8c:	add	x1, x19, #0x10
   16f90:	mov	w3, #0x8                   	// #8
   16f94:	mov	x0, x19
   16f98:	mov	x2, xzr
   16f9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16fa0:	ldr	w8, [x19, #8]
   16fa4:	b	16eb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x18c>
   16fa8:	mov	w15, #0x1                   	// #1
   16fac:	cmn	x14, #0x4
   16fb0:	b.eq	16fd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x2ac>  // b.none
   16fb4:	add	w12, w12, w15
   16fb8:	and	w12, w12, w13
   16fbc:	lsl	x14, x12, #4
   16fc0:	ldr	x14, [x11, x14]
   16fc4:	add	w15, w15, #0x1
   16fc8:	cmp	x14, x10
   16fcc:	b.ne	16fac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0x280>  // b.any
   16fd0:	mov	w12, w12
   16fd4:	b	16e08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0xdc>
   16fd8:	mov	x23, xzr
   16fdc:	cmp	w8, w9
   16fe0:	b.cc	16e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0xec>  // b.lo, b.ul, b.last
   16fe4:	add	x1, x19, #0x10
   16fe8:	mov	w3, #0x8                   	// #8
   16fec:	mov	x0, x19
   16ff0:	mov	x2, xzr
   16ff4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   16ff8:	ldr	w8, [x19, #8]
   16ffc:	b	16e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIBasicTypeEPKN4llvm11DIBasicTypeERNS1_15SmallVectorImplImEEj+0xec>
   17000:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17004:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17008:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1700c:	add	x0, x0, #0x0
   17010:	add	x1, x1, #0x0
   17014:	add	x3, x3, #0x0
   17018:	mov	w2, #0x43                  	// #67
   1701c:	bl	0 <__assert_fail>
   17020:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17024:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17028:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1702c:	add	x0, x0, #0x0
   17030:	add	x1, x1, #0x0
   17034:	add	x3, x3, #0x0
   17038:	mov	w2, #0x252                 	// #594
   1703c:	bl	0 <__assert_fail>
   17040:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17044:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17048:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1704c:	add	x0, x0, #0x0
   17050:	add	x1, x1, #0x0
   17054:	add	x3, x3, #0x0
   17058:	mov	w2, #0x436                 	// #1078
   1705c:	bl	0 <__assert_fail>
   17060:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17064:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17068:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1706c:	add	x0, x0, #0x0
   17070:	add	x1, x1, #0x0
   17074:	add	x3, x3, #0x0
   17078:	mov	w2, #0x121                 	// #289
   1707c:	bl	0 <__assert_fail>

0000000000017080 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj>:
   17080:	stp	x29, x30, [sp, #-64]!
   17084:	str	x23, [sp, #16]
   17088:	stp	x22, x21, [sp, #32]
   1708c:	stp	x20, x19, [sp, #48]
   17090:	mov	x29, sp
   17094:	ldrb	w9, [x1, #1]
   17098:	ldp	w8, w10, [x2, #8]
   1709c:	mov	w20, w3
   170a0:	mov	x19, x2
   170a4:	and	w9, w9, #0x7f
   170a8:	cmp	w9, #0x1
   170ac:	mov	x22, x1
   170b0:	cset	w23, eq  // eq = none
   170b4:	cmp	w8, w10
   170b8:	mov	x21, x0
   170bc:	b.cs	1754c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x4cc>  // b.hs, b.nlast
   170c0:	ldr	x9, [x19]
   170c4:	str	x23, [x9, w8, uxtw #3]
   170c8:	ldp	w8, w9, [x19, #8]
   170cc:	cmp	w8, w9
   170d0:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   170d4:	add	w8, w8, #0x1
   170d8:	str	w8, [x19, #8]
   170dc:	ldrh	w23, [x22, #2]
   170e0:	cmp	w8, w9
   170e4:	b.cs	17568 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x4e8>  // b.hs, b.nlast
   170e8:	ldr	x9, [x19]
   170ec:	str	x23, [x9, w8, uxtw #3]
   170f0:	ldp	w8, w9, [x19, #8]
   170f4:	cmp	w8, w9
   170f8:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   170fc:	add	w8, w8, #0x1
   17100:	str	w8, [x19, #8]
   17104:	ldr	w10, [x22, #8]
   17108:	cmp	w10, #0x2
   1710c:	b.ls	17840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7c0>  // b.plast
   17110:	sub	x10, x22, x10, lsl #3
   17114:	ldr	x10, [x10, #16]
   17118:	cbz	x10, 17124 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0xa4>
   1711c:	ldrb	w11, [x10]
   17120:	cbnz	w11, 17880 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x800>
   17124:	ldr	w12, [x21, #304]
   17128:	cbz	w12, 17640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x5c0>
   1712c:	orr	x11, x10, #0x4
   17130:	cmn	x11, #0x4
   17134:	b.eq	17820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7a0>  // b.none
   17138:	ldr	x11, [x21, #288]
   1713c:	ubfx	x13, x10, #4, #28
   17140:	eor	w14, w13, w10, lsr #9
   17144:	sub	w13, w12, #0x1
   17148:	and	w12, w14, w13
   1714c:	lsl	x14, x12, #4
   17150:	ldr	x14, [x11, x14]
   17154:	cmp	x14, x10
   17158:	b.ne	17610 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x590>  // b.any
   1715c:	add	x10, x11, x12, lsl #4
   17160:	ldr	w23, [x10, #12]
   17164:	cmp	w8, w9
   17168:	b.cs	1764c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x5cc>  // b.hs, b.nlast
   1716c:	ldr	x9, [x19]
   17170:	str	x23, [x9, w8, uxtw #3]
   17174:	ldp	w8, w9, [x19, #8]
   17178:	cmp	w8, w9
   1717c:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   17180:	add	w8, w8, #0x1
   17184:	str	w8, [x19, #8]
   17188:	cbz	x22, 17860 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7e0>
   1718c:	ldrb	w10, [x22]
   17190:	cmp	w10, #0xf
   17194:	b.ne	171a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x124>  // b.any
   17198:	mov	x10, x22
   1719c:	cbnz	x10, 171b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x138>
   171a0:	b	171c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x144>
   171a4:	ldr	w10, [x22, #8]
   171a8:	cbz	w10, 17840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7c0>
   171ac:	sub	x10, x22, x10, lsl #3
   171b0:	ldr	x10, [x10]
   171b4:	cbz	x10, 171c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x144>
   171b8:	ldrb	w11, [x10]
   171bc:	cmp	w11, #0xf
   171c0:	b.ne	178a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x820>  // b.any
   171c4:	ldr	w12, [x21, #304]
   171c8:	cbz	w12, 17698 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x618>
   171cc:	orr	x11, x10, #0x4
   171d0:	cmn	x11, #0x4
   171d4:	b.eq	17820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7a0>  // b.none
   171d8:	ldr	x11, [x21, #288]
   171dc:	ubfx	x13, x10, #4, #28
   171e0:	eor	w14, w13, w10, lsr #9
   171e4:	sub	w13, w12, #0x1
   171e8:	and	w12, w14, w13
   171ec:	lsl	x14, x12, #4
   171f0:	ldr	x14, [x11, x14]
   171f4:	cmp	x14, x10
   171f8:	b.ne	17668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x5e8>  // b.any
   171fc:	add	x10, x11, x12, lsl #4
   17200:	ldr	w23, [x10, #12]
   17204:	cmp	w8, w9
   17208:	b.cs	176a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x624>  // b.hs, b.nlast
   1720c:	ldr	x9, [x19]
   17210:	str	x23, [x9, w8, uxtw #3]
   17214:	ldp	w8, w9, [x19, #8]
   17218:	cmp	w8, w9
   1721c:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   17220:	add	w8, w8, #0x1
   17224:	str	w8, [x19, #8]
   17228:	ldr	w23, [x22, #24]
   1722c:	cmp	w8, w9
   17230:	b.cs	17584 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x504>  // b.hs, b.nlast
   17234:	ldr	x9, [x19]
   17238:	str	x23, [x9, w8, uxtw #3]
   1723c:	ldp	w8, w9, [x19, #8]
   17240:	cmp	w8, w9
   17244:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   17248:	add	w8, w8, #0x1
   1724c:	str	w8, [x19, #8]
   17250:	ldr	w10, [x22, #8]
   17254:	cmp	w10, #0x1
   17258:	b.ls	17840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7c0>  // b.plast
   1725c:	sub	x10, x22, x10, lsl #3
   17260:	ldr	x10, [x10, #8]
   17264:	cbz	x10, 17280 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x200>
   17268:	ldrb	w11, [x10]
   1726c:	sub	w12, w11, #0xb
   17270:	cmp	w12, #0xb
   17274:	b.cs	174fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x47c>  // b.hs, b.nlast
   17278:	cmp	w12, #0xb
   1727c:	b.cs	17524 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x4a4>  // b.hs, b.nlast
   17280:	ldr	w12, [x21, #304]
   17284:	cbz	w12, 176f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x670>
   17288:	orr	x11, x10, #0x4
   1728c:	cmn	x11, #0x4
   17290:	b.eq	17820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7a0>  // b.none
   17294:	ldr	x11, [x21, #288]
   17298:	ubfx	x13, x10, #4, #28
   1729c:	eor	w14, w13, w10, lsr #9
   172a0:	sub	w13, w12, #0x1
   172a4:	and	w12, w14, w13
   172a8:	lsl	x14, x12, #4
   172ac:	ldr	x14, [x11, x14]
   172b0:	cmp	x14, x10
   172b4:	b.ne	176c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x640>  // b.any
   172b8:	add	x10, x11, x12, lsl #4
   172bc:	ldr	w23, [x10, #12]
   172c0:	cmp	w8, w9
   172c4:	b.cs	176fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x67c>  // b.hs, b.nlast
   172c8:	ldr	x9, [x19]
   172cc:	str	x23, [x9, w8, uxtw #3]
   172d0:	ldp	w8, w9, [x19, #8]
   172d4:	cmp	w8, w9
   172d8:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   172dc:	add	w8, w8, #0x1
   172e0:	str	w8, [x19, #8]
   172e4:	ldr	w10, [x22, #8]
   172e8:	cmp	w10, #0x3
   172ec:	b.ls	17840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7c0>  // b.plast
   172f0:	sub	x10, x22, x10, lsl #3
   172f4:	ldr	x10, [x10, #24]
   172f8:	cbz	x10, 1730c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x28c>
   172fc:	ldrb	w11, [x10]
   17300:	sub	w11, w11, #0xb
   17304:	cmp	w11, #0x4
   17308:	b.cs	178c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x840>  // b.hs, b.nlast
   1730c:	ldr	w12, [x21, #304]
   17310:	cbz	w12, 17748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x6c8>
   17314:	orr	x11, x10, #0x4
   17318:	cmn	x11, #0x4
   1731c:	b.eq	17820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7a0>  // b.none
   17320:	ldr	x11, [x21, #288]
   17324:	ubfx	x13, x10, #4, #28
   17328:	eor	w14, w13, w10, lsr #9
   1732c:	sub	w13, w12, #0x1
   17330:	and	w12, w14, w13
   17334:	lsl	x14, x12, #4
   17338:	ldr	x14, [x11, x14]
   1733c:	cmp	x14, x10
   17340:	b.ne	17718 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x698>  // b.any
   17344:	add	x10, x11, x12, lsl #4
   17348:	ldr	w23, [x10, #12]
   1734c:	cmp	w8, w9
   17350:	b.cs	17754 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x6d4>  // b.hs, b.nlast
   17354:	ldr	x9, [x19]
   17358:	str	x23, [x9, w8, uxtw #3]
   1735c:	ldp	w8, w9, [x19, #8]
   17360:	cmp	w8, w9
   17364:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   17368:	add	w8, w8, #0x1
   1736c:	str	w8, [x19, #8]
   17370:	ldr	x23, [x22, #32]
   17374:	cmp	w8, w9
   17378:	b.cs	175a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x520>  // b.hs, b.nlast
   1737c:	ldr	x9, [x19]
   17380:	str	x23, [x9, w8, uxtw #3]
   17384:	ldp	w8, w9, [x19, #8]
   17388:	cmp	w8, w9
   1738c:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   17390:	add	w8, w8, #0x1
   17394:	str	w8, [x19, #8]
   17398:	ldr	w23, [x22, #48]
   1739c:	cmp	w8, w9
   173a0:	b.cs	175bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x53c>  // b.hs, b.nlast
   173a4:	ldr	x9, [x19]
   173a8:	str	x23, [x9, w8, uxtw #3]
   173ac:	ldp	w8, w9, [x19, #8]
   173b0:	cmp	w8, w9
   173b4:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   173b8:	add	w8, w8, #0x1
   173bc:	str	w8, [x19, #8]
   173c0:	ldr	x23, [x22, #40]
   173c4:	cmp	w8, w9
   173c8:	b.cs	175d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x558>  // b.hs, b.nlast
   173cc:	ldr	x9, [x19]
   173d0:	str	x23, [x9, w8, uxtw #3]
   173d4:	ldp	w8, w9, [x19, #8]
   173d8:	cmp	w8, w9
   173dc:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   173e0:	add	w8, w8, #0x1
   173e4:	str	w8, [x19, #8]
   173e8:	ldr	w23, [x22, #28]
   173ec:	cmp	w8, w9
   173f0:	b.cs	175f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x574>  // b.hs, b.nlast
   173f4:	ldr	x9, [x19]
   173f8:	str	x23, [x9, w8, uxtw #3]
   173fc:	ldp	w8, w9, [x19, #8]
   17400:	cmp	w8, w9
   17404:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   17408:	add	w8, w8, #0x1
   1740c:	str	w8, [x19, #8]
   17410:	ldr	w10, [x22, #8]
   17414:	cmp	w10, #0x4
   17418:	b.ls	17840 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7c0>  // b.plast
   1741c:	ldr	w12, [x21, #304]
   17420:	cbz	w12, 177a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x720>
   17424:	sub	x10, x22, x10, lsl #3
   17428:	ldr	x10, [x10, #32]
   1742c:	orr	x11, x10, #0x4
   17430:	cmn	x11, #0x4
   17434:	b.eq	17820 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x7a0>  // b.none
   17438:	ldr	x11, [x21, #288]
   1743c:	ubfx	x13, x10, #4, #28
   17440:	eor	w14, w13, w10, lsr #9
   17444:	sub	w13, w12, #0x1
   17448:	and	w12, w14, w13
   1744c:	lsl	x14, x12, #4
   17450:	ldr	x14, [x11, x14]
   17454:	cmp	x14, x10
   17458:	b.ne	17770 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x6f0>  // b.any
   1745c:	add	x10, x11, x12, lsl #4
   17460:	ldr	w23, [x10, #12]
   17464:	cmp	w8, w9
   17468:	b.cs	177ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x72c>  // b.hs, b.nlast
   1746c:	ldr	x9, [x19]
   17470:	str	x23, [x9, w8, uxtw #3]
   17474:	ldp	w8, w9, [x19, #8]
   17478:	cmp	w8, w9
   1747c:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   17480:	add	w8, w8, #0x1
   17484:	str	w8, [x19, #8]
   17488:	ldur	x10, [x22, #52]
   1748c:	tst	x10, #0xff00000000
   17490:	b.eq	174ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x42c>  // b.none
   17494:	cmp	w8, w9
   17498:	add	w22, w10, #0x1
   1749c:	b.cs	177c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x748>  // b.hs, b.nlast
   174a0:	ldr	x9, [x19]
   174a4:	str	x22, [x9, w8, uxtw #3]
   174a8:	b	174bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x43c>
   174ac:	cmp	w8, w9
   174b0:	b.cs	177e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x764>  // b.hs, b.nlast
   174b4:	ldr	x9, [x19]
   174b8:	str	xzr, [x9, w8, uxtw #3]
   174bc:	ldp	w8, w9, [x19, #8]
   174c0:	cmp	w8, w9
   174c4:	b.cs	17800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x780>  // b.hs, b.nlast
   174c8:	add	w8, w8, #0x1
   174cc:	str	w8, [x19, #8]
   174d0:	ldr	x0, [x21]
   174d4:	mov	w1, #0x11                  	// #17
   174d8:	mov	x2, x19
   174dc:	mov	w3, w20
   174e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   174e4:	str	wzr, [x19, #8]
   174e8:	ldp	x20, x19, [sp, #48]
   174ec:	ldp	x22, x21, [sp, #32]
   174f0:	ldr	x23, [sp, #16]
   174f4:	ldp	x29, x30, [sp], #64
   174f8:	ret
   174fc:	cmp	w11, #0x1f
   17500:	b.eq	17278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x1f8>  // b.none
   17504:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17508:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1750c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17510:	add	x0, x0, #0x0
   17514:	add	x1, x1, #0x0
   17518:	add	x3, x3, #0x0
   1751c:	mov	w2, #0x134                 	// #308
   17520:	bl	0 <__assert_fail>
   17524:	cmp	w11, #0x1f
   17528:	b.eq	17280 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x200>  // b.none
   1752c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17530:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17534:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17538:	add	x0, x0, #0x0
   1753c:	add	x1, x1, #0x0
   17540:	add	x3, x3, #0x0
   17544:	mov	w2, #0x108                 	// #264
   17548:	bl	0 <__assert_fail>
   1754c:	add	x1, x19, #0x10
   17550:	mov	w3, #0x8                   	// #8
   17554:	mov	x0, x19
   17558:	mov	x2, xzr
   1755c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17560:	ldr	w8, [x19, #8]
   17564:	b	170c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x40>
   17568:	add	x1, x19, #0x10
   1756c:	mov	w3, #0x8                   	// #8
   17570:	mov	x0, x19
   17574:	mov	x2, xzr
   17578:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1757c:	ldr	w8, [x19, #8]
   17580:	b	170e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x68>
   17584:	add	x1, x19, #0x10
   17588:	mov	w3, #0x8                   	// #8
   1758c:	mov	x0, x19
   17590:	mov	x2, xzr
   17594:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17598:	ldr	w8, [x19, #8]
   1759c:	b	17234 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x1b4>
   175a0:	add	x1, x19, #0x10
   175a4:	mov	w3, #0x8                   	// #8
   175a8:	mov	x0, x19
   175ac:	mov	x2, xzr
   175b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   175b4:	ldr	w8, [x19, #8]
   175b8:	b	1737c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x2fc>
   175bc:	add	x1, x19, #0x10
   175c0:	mov	w3, #0x8                   	// #8
   175c4:	mov	x0, x19
   175c8:	mov	x2, xzr
   175cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   175d0:	ldr	w8, [x19, #8]
   175d4:	b	173a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x324>
   175d8:	add	x1, x19, #0x10
   175dc:	mov	w3, #0x8                   	// #8
   175e0:	mov	x0, x19
   175e4:	mov	x2, xzr
   175e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   175ec:	ldr	w8, [x19, #8]
   175f0:	b	173cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x34c>
   175f4:	add	x1, x19, #0x10
   175f8:	mov	w3, #0x8                   	// #8
   175fc:	mov	x0, x19
   17600:	mov	x2, xzr
   17604:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17608:	ldr	w8, [x19, #8]
   1760c:	b	173f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x374>
   17610:	mov	w15, #0x1                   	// #1
   17614:	cmn	x14, #0x4
   17618:	b.eq	17640 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x5c0>  // b.none
   1761c:	add	w12, w12, w15
   17620:	and	w12, w12, w13
   17624:	lsl	x14, x12, #4
   17628:	ldr	x14, [x11, x14]
   1762c:	add	w15, w15, #0x1
   17630:	cmp	x14, x10
   17634:	b.ne	17614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x594>  // b.any
   17638:	mov	w12, w12
   1763c:	b	1715c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0xdc>
   17640:	mov	x23, xzr
   17644:	cmp	w8, w9
   17648:	b.cc	1716c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0xec>  // b.lo, b.ul, b.last
   1764c:	add	x1, x19, #0x10
   17650:	mov	w3, #0x8                   	// #8
   17654:	mov	x0, x19
   17658:	mov	x2, xzr
   1765c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17660:	ldr	w8, [x19, #8]
   17664:	b	1716c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0xec>
   17668:	mov	w15, #0x1                   	// #1
   1766c:	cmn	x14, #0x4
   17670:	b.eq	17698 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x618>  // b.none
   17674:	add	w12, w12, w15
   17678:	and	w12, w12, w13
   1767c:	lsl	x14, x12, #4
   17680:	ldr	x14, [x11, x14]
   17684:	add	w15, w15, #0x1
   17688:	cmp	x14, x10
   1768c:	b.ne	1766c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x5ec>  // b.any
   17690:	mov	w12, w12
   17694:	b	171fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x17c>
   17698:	mov	x23, xzr
   1769c:	cmp	w8, w9
   176a0:	b.cc	1720c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x18c>  // b.lo, b.ul, b.last
   176a4:	add	x1, x19, #0x10
   176a8:	mov	w3, #0x8                   	// #8
   176ac:	mov	x0, x19
   176b0:	mov	x2, xzr
   176b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   176b8:	ldr	w8, [x19, #8]
   176bc:	b	1720c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x18c>
   176c0:	mov	w15, #0x1                   	// #1
   176c4:	cmn	x14, #0x4
   176c8:	b.eq	176f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x670>  // b.none
   176cc:	add	w12, w12, w15
   176d0:	and	w12, w12, w13
   176d4:	lsl	x14, x12, #4
   176d8:	ldr	x14, [x11, x14]
   176dc:	add	w15, w15, #0x1
   176e0:	cmp	x14, x10
   176e4:	b.ne	176c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x644>  // b.any
   176e8:	mov	w12, w12
   176ec:	b	172b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x238>
   176f0:	mov	x23, xzr
   176f4:	cmp	w8, w9
   176f8:	b.cc	172c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x248>  // b.lo, b.ul, b.last
   176fc:	add	x1, x19, #0x10
   17700:	mov	w3, #0x8                   	// #8
   17704:	mov	x0, x19
   17708:	mov	x2, xzr
   1770c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17710:	ldr	w8, [x19, #8]
   17714:	b	172c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x248>
   17718:	mov	w15, #0x1                   	// #1
   1771c:	cmn	x14, #0x4
   17720:	b.eq	17748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x6c8>  // b.none
   17724:	add	w12, w12, w15
   17728:	and	w12, w12, w13
   1772c:	lsl	x14, x12, #4
   17730:	ldr	x14, [x11, x14]
   17734:	add	w15, w15, #0x1
   17738:	cmp	x14, x10
   1773c:	b.ne	1771c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x69c>  // b.any
   17740:	mov	w12, w12
   17744:	b	17344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x2c4>
   17748:	mov	x23, xzr
   1774c:	cmp	w8, w9
   17750:	b.cc	17354 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x2d4>  // b.lo, b.ul, b.last
   17754:	add	x1, x19, #0x10
   17758:	mov	w3, #0x8                   	// #8
   1775c:	mov	x0, x19
   17760:	mov	x2, xzr
   17764:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17768:	ldr	w8, [x19, #8]
   1776c:	b	17354 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x2d4>
   17770:	mov	w15, #0x1                   	// #1
   17774:	cmn	x14, #0x4
   17778:	b.eq	177a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x720>  // b.none
   1777c:	add	w12, w12, w15
   17780:	and	w12, w12, w13
   17784:	lsl	x14, x12, #4
   17788:	ldr	x14, [x11, x14]
   1778c:	add	w15, w15, #0x1
   17790:	cmp	x14, x10
   17794:	b.ne	17774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x6f4>  // b.any
   17798:	mov	w12, w12
   1779c:	b	1745c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x3dc>
   177a0:	mov	x23, xzr
   177a4:	cmp	w8, w9
   177a8:	b.cc	1746c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x3ec>  // b.lo, b.ul, b.last
   177ac:	add	x1, x19, #0x10
   177b0:	mov	w3, #0x8                   	// #8
   177b4:	mov	x0, x19
   177b8:	mov	x2, xzr
   177bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   177c0:	ldr	w8, [x19, #8]
   177c4:	b	1746c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x3ec>
   177c8:	add	x1, x19, #0x10
   177cc:	mov	w3, #0x8                   	// #8
   177d0:	mov	x0, x19
   177d4:	mov	x2, xzr
   177d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   177dc:	ldr	w8, [x19, #8]
   177e0:	b	174a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x420>
   177e4:	add	x1, x19, #0x10
   177e8:	mov	w3, #0x8                   	// #8
   177ec:	mov	x0, x19
   177f0:	mov	x2, xzr
   177f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   177f8:	ldr	w8, [x19, #8]
   177fc:	b	174b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDIDerivedTypeEPKN4llvm13DIDerivedTypeERNS1_15SmallVectorImplImEEj+0x434>
   17800:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17804:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17808:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1780c:	add	x0, x0, #0x0
   17810:	add	x1, x1, #0x0
   17814:	add	x3, x3, #0x0
   17818:	mov	w2, #0x43                  	// #67
   1781c:	bl	0 <__assert_fail>
   17820:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17824:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17828:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1782c:	add	x0, x0, #0x0
   17830:	add	x1, x1, #0x0
   17834:	add	x3, x3, #0x0
   17838:	mov	w2, #0x252                 	// #594
   1783c:	bl	0 <__assert_fail>
   17840:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17844:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17848:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1784c:	add	x0, x0, #0x0
   17850:	add	x1, x1, #0x0
   17854:	add	x3, x3, #0x0
   17858:	mov	w2, #0x436                 	// #1078
   1785c:	bl	0 <__assert_fail>
   17860:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17864:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17868:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1786c:	add	x0, x0, #0x0
   17870:	add	x1, x1, #0x0
   17874:	add	x3, x3, #0x0
   17878:	mov	w2, #0x69                  	// #105
   1787c:	bl	0 <__assert_fail>
   17880:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17884:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17888:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1788c:	add	x0, x0, #0x0
   17890:	add	x1, x1, #0x0
   17894:	add	x3, x3, #0x0
   17898:	mov	w2, #0x121                 	// #289
   1789c:	bl	0 <__assert_fail>
   178a0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   178a4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   178a8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   178ac:	add	x0, x0, #0x0
   178b0:	add	x1, x1, #0x0
   178b4:	add	x3, x3, #0x0
   178b8:	mov	w2, #0x134                 	// #308
   178bc:	bl	0 <__assert_fail>
   178c0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   178c4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   178c8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   178cc:	add	x0, x0, #0x0
   178d0:	add	x1, x1, #0x0
   178d4:	add	x3, x3, #0x0
   178d8:	mov	w2, #0x134                 	// #308
   178dc:	bl	0 <__assert_fail>

00000000000178e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj>:
   178e0:	stp	x29, x30, [sp, #-64]!
   178e4:	str	x23, [sp, #16]
   178e8:	stp	x22, x21, [sp, #32]
   178ec:	stp	x20, x19, [sp, #48]
   178f0:	mov	x29, sp
   178f4:	ldrb	w9, [x1, #1]
   178f8:	ldp	w8, w10, [x2, #8]
   178fc:	mov	w20, w3
   17900:	mov	x19, x2
   17904:	and	w9, w9, #0x7f
   17908:	cmp	w9, #0x1
   1790c:	cset	w9, eq  // eq = none
   17910:	mov	x22, x1
   17914:	mov	x21, x0
   17918:	cmp	w8, w10
   1791c:	orr	x23, x9, #0x2
   17920:	b.cs	17fc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x6e0>  // b.hs, b.nlast
   17924:	ldr	x9, [x19]
   17928:	str	x23, [x9, w8, uxtw #3]
   1792c:	ldp	w8, w9, [x19, #8]
   17930:	cmp	w8, w9
   17934:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17938:	add	w8, w8, #0x1
   1793c:	str	w8, [x19, #8]
   17940:	ldrh	w23, [x22, #2]
   17944:	cmp	w8, w9
   17948:	b.cs	17fdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x6fc>  // b.hs, b.nlast
   1794c:	ldr	x9, [x19]
   17950:	str	x23, [x9, w8, uxtw #3]
   17954:	ldp	w8, w9, [x19, #8]
   17958:	cmp	w8, w9
   1795c:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17960:	add	w8, w8, #0x1
   17964:	str	w8, [x19, #8]
   17968:	ldr	w10, [x22, #8]
   1796c:	cmp	w10, #0x2
   17970:	b.ls	183f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb18>  // b.plast
   17974:	sub	x10, x22, x10, lsl #3
   17978:	ldr	x10, [x10, #16]
   1797c:	cbz	x10, 17988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa8>
   17980:	ldrb	w11, [x10]
   17984:	cbnz	w11, 18458 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb78>
   17988:	ldr	w12, [x21, #304]
   1798c:	cbz	w12, 180d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x7f0>
   17990:	orr	x11, x10, #0x4
   17994:	cmn	x11, #0x4
   17998:	b.eq	183d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xaf8>  // b.none
   1799c:	ldr	x11, [x21, #288]
   179a0:	ubfx	x13, x10, #4, #28
   179a4:	eor	w14, w13, w10, lsr #9
   179a8:	sub	w13, w12, #0x1
   179ac:	and	w12, w14, w13
   179b0:	lsl	x14, x12, #4
   179b4:	ldr	x14, [x11, x14]
   179b8:	cmp	x14, x10
   179bc:	b.ne	180a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x7c0>  // b.any
   179c0:	add	x10, x11, x12, lsl #4
   179c4:	ldr	w23, [x10, #12]
   179c8:	cmp	w8, w9
   179cc:	b.cs	180dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x7fc>  // b.hs, b.nlast
   179d0:	ldr	x9, [x19]
   179d4:	str	x23, [x9, w8, uxtw #3]
   179d8:	ldp	w8, w9, [x19, #8]
   179dc:	cmp	w8, w9
   179e0:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   179e4:	add	w8, w8, #0x1
   179e8:	str	w8, [x19, #8]
   179ec:	cbz	x22, 18478 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb98>
   179f0:	ldrb	w10, [x22]
   179f4:	cmp	w10, #0xf
   179f8:	b.ne	17a08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x128>  // b.any
   179fc:	mov	x10, x22
   17a00:	cbnz	x10, 17a1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x13c>
   17a04:	b	17a28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x148>
   17a08:	ldr	w10, [x22, #8]
   17a0c:	cbz	w10, 183f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb18>
   17a10:	sub	x10, x22, x10, lsl #3
   17a14:	ldr	x10, [x10]
   17a18:	cbz	x10, 17a28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x148>
   17a1c:	ldrb	w11, [x10]
   17a20:	cmp	w11, #0xf
   17a24:	b.ne	18498 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xbb8>  // b.any
   17a28:	ldr	w12, [x21, #304]
   17a2c:	cbz	w12, 18128 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x848>
   17a30:	orr	x11, x10, #0x4
   17a34:	cmn	x11, #0x4
   17a38:	b.eq	183d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xaf8>  // b.none
   17a3c:	ldr	x11, [x21, #288]
   17a40:	ubfx	x13, x10, #4, #28
   17a44:	eor	w14, w13, w10, lsr #9
   17a48:	sub	w13, w12, #0x1
   17a4c:	and	w12, w14, w13
   17a50:	lsl	x14, x12, #4
   17a54:	ldr	x14, [x11, x14]
   17a58:	cmp	x14, x10
   17a5c:	b.ne	180f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x818>  // b.any
   17a60:	add	x10, x11, x12, lsl #4
   17a64:	ldr	w23, [x10, #12]
   17a68:	cmp	w8, w9
   17a6c:	b.cs	18134 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x854>  // b.hs, b.nlast
   17a70:	ldr	x9, [x19]
   17a74:	str	x23, [x9, w8, uxtw #3]
   17a78:	ldp	w8, w9, [x19, #8]
   17a7c:	cmp	w8, w9
   17a80:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17a84:	add	w8, w8, #0x1
   17a88:	str	w8, [x19, #8]
   17a8c:	ldr	w23, [x22, #24]
   17a90:	cmp	w8, w9
   17a94:	b.cs	17ff8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x718>  // b.hs, b.nlast
   17a98:	ldr	x9, [x19]
   17a9c:	str	x23, [x9, w8, uxtw #3]
   17aa0:	ldp	w8, w9, [x19, #8]
   17aa4:	cmp	w8, w9
   17aa8:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17aac:	add	w8, w8, #0x1
   17ab0:	str	w8, [x19, #8]
   17ab4:	ldr	w10, [x22, #8]
   17ab8:	cmp	w10, #0x1
   17abc:	b.ls	183f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb18>  // b.plast
   17ac0:	sub	x10, x22, x10, lsl #3
   17ac4:	ldr	x10, [x10, #8]
   17ac8:	cbz	x10, 17ae4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x204>
   17acc:	ldrb	w11, [x10]
   17ad0:	sub	w12, w11, #0xb
   17ad4:	cmp	w12, #0xb
   17ad8:	b.cs	17f70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x690>  // b.hs, b.nlast
   17adc:	cmp	w12, #0xb
   17ae0:	b.cs	17f98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x6b8>  // b.hs, b.nlast
   17ae4:	ldr	w12, [x21, #304]
   17ae8:	cbz	w12, 18180 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8a0>
   17aec:	orr	x11, x10, #0x4
   17af0:	cmn	x11, #0x4
   17af4:	b.eq	183d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xaf8>  // b.none
   17af8:	ldr	x11, [x21, #288]
   17afc:	ubfx	x13, x10, #4, #28
   17b00:	eor	w14, w13, w10, lsr #9
   17b04:	sub	w13, w12, #0x1
   17b08:	and	w12, w14, w13
   17b0c:	lsl	x14, x12, #4
   17b10:	ldr	x14, [x11, x14]
   17b14:	cmp	x14, x10
   17b18:	b.ne	18150 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x870>  // b.any
   17b1c:	add	x10, x11, x12, lsl #4
   17b20:	ldr	w23, [x10, #12]
   17b24:	cmp	w8, w9
   17b28:	b.cs	1818c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8ac>  // b.hs, b.nlast
   17b2c:	ldr	x9, [x19]
   17b30:	str	x23, [x9, w8, uxtw #3]
   17b34:	ldp	w8, w9, [x19, #8]
   17b38:	cmp	w8, w9
   17b3c:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17b40:	add	w8, w8, #0x1
   17b44:	str	w8, [x19, #8]
   17b48:	ldr	w10, [x22, #8]
   17b4c:	cmp	w10, #0x3
   17b50:	b.ls	183f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb18>  // b.plast
   17b54:	sub	x10, x22, x10, lsl #3
   17b58:	ldr	x10, [x10, #24]
   17b5c:	cbz	x10, 17b70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x290>
   17b60:	ldrb	w11, [x10]
   17b64:	sub	w11, w11, #0xb
   17b68:	cmp	w11, #0x4
   17b6c:	b.cs	18418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb38>  // b.hs, b.nlast
   17b70:	ldr	w12, [x21, #304]
   17b74:	cbz	w12, 181d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8f8>
   17b78:	orr	x11, x10, #0x4
   17b7c:	cmn	x11, #0x4
   17b80:	b.eq	183d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xaf8>  // b.none
   17b84:	ldr	x11, [x21, #288]
   17b88:	ubfx	x13, x10, #4, #28
   17b8c:	eor	w14, w13, w10, lsr #9
   17b90:	sub	w13, w12, #0x1
   17b94:	and	w12, w14, w13
   17b98:	lsl	x14, x12, #4
   17b9c:	ldr	x14, [x11, x14]
   17ba0:	cmp	x14, x10
   17ba4:	b.ne	181a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8c8>  // b.any
   17ba8:	add	x10, x11, x12, lsl #4
   17bac:	ldr	w23, [x10, #12]
   17bb0:	cmp	w8, w9
   17bb4:	b.cs	181e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x904>  // b.hs, b.nlast
   17bb8:	ldr	x9, [x19]
   17bbc:	str	x23, [x9, w8, uxtw #3]
   17bc0:	ldp	w8, w9, [x19, #8]
   17bc4:	cmp	w8, w9
   17bc8:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17bcc:	add	w8, w8, #0x1
   17bd0:	str	w8, [x19, #8]
   17bd4:	ldr	x23, [x22, #32]
   17bd8:	cmp	w8, w9
   17bdc:	b.cs	18014 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x734>  // b.hs, b.nlast
   17be0:	ldr	x9, [x19]
   17be4:	str	x23, [x9, w8, uxtw #3]
   17be8:	ldp	w8, w9, [x19, #8]
   17bec:	cmp	w8, w9
   17bf0:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17bf4:	add	w8, w8, #0x1
   17bf8:	str	w8, [x19, #8]
   17bfc:	ldr	w23, [x22, #48]
   17c00:	cmp	w8, w9
   17c04:	b.cs	18030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x750>  // b.hs, b.nlast
   17c08:	ldr	x9, [x19]
   17c0c:	str	x23, [x9, w8, uxtw #3]
   17c10:	ldp	w8, w9, [x19, #8]
   17c14:	cmp	w8, w9
   17c18:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17c1c:	add	w8, w8, #0x1
   17c20:	str	w8, [x19, #8]
   17c24:	ldr	x23, [x22, #40]
   17c28:	cmp	w8, w9
   17c2c:	b.cs	1804c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x76c>  // b.hs, b.nlast
   17c30:	ldr	x9, [x19]
   17c34:	str	x23, [x9, w8, uxtw #3]
   17c38:	ldp	w8, w9, [x19, #8]
   17c3c:	cmp	w8, w9
   17c40:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17c44:	add	w8, w8, #0x1
   17c48:	str	w8, [x19, #8]
   17c4c:	ldr	w23, [x22, #28]
   17c50:	cmp	w8, w9
   17c54:	b.cs	18068 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x788>  // b.hs, b.nlast
   17c58:	ldr	x9, [x19]
   17c5c:	str	x23, [x9, w8, uxtw #3]
   17c60:	ldp	w8, w9, [x19, #8]
   17c64:	cmp	w8, w9
   17c68:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17c6c:	add	w8, w8, #0x1
   17c70:	str	w8, [x19, #8]
   17c74:	ldr	w10, [x22, #8]
   17c78:	cmp	w10, #0x4
   17c7c:	b.ls	183f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb18>  // b.plast
   17c80:	sub	x10, x22, x10, lsl #3
   17c84:	ldr	x10, [x10, #32]
   17c88:	cbz	x10, 17c98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x3b8>
   17c8c:	ldrb	w11, [x10]
   17c90:	cmp	w11, #0x4
   17c94:	b.ne	18438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb58>  // b.any
   17c98:	ldr	w12, [x21, #304]
   17c9c:	cbz	w12, 18230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x950>
   17ca0:	orr	x11, x10, #0x4
   17ca4:	cmn	x11, #0x4
   17ca8:	b.eq	183d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xaf8>  // b.none
   17cac:	ldr	x11, [x21, #288]
   17cb0:	ubfx	x13, x10, #4, #28
   17cb4:	eor	w14, w13, w10, lsr #9
   17cb8:	sub	w13, w12, #0x1
   17cbc:	and	w12, w13, w14
   17cc0:	lsl	x14, x12, #4
   17cc4:	ldr	x14, [x11, x14]
   17cc8:	cmp	x14, x10
   17ccc:	b.ne	18200 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x920>  // b.any
   17cd0:	add	x10, x11, x12, lsl #4
   17cd4:	ldr	w23, [x10, #12]
   17cd8:	cmp	w8, w9
   17cdc:	b.cs	1823c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x95c>  // b.hs, b.nlast
   17ce0:	ldr	x9, [x19]
   17ce4:	str	x23, [x9, w8, uxtw #3]
   17ce8:	ldp	w8, w9, [x19, #8]
   17cec:	cmp	w8, w9
   17cf0:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17cf4:	add	w8, w8, #0x1
   17cf8:	str	w8, [x19, #8]
   17cfc:	ldr	w23, [x22, #52]
   17d00:	cmp	w8, w9
   17d04:	b.cs	18084 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x7a4>  // b.hs, b.nlast
   17d08:	ldr	x9, [x19]
   17d0c:	str	x23, [x9, w8, uxtw #3]
   17d10:	ldp	w8, w9, [x19, #8]
   17d14:	cmp	w8, w9
   17d18:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17d1c:	add	w8, w8, #0x1
   17d20:	str	w8, [x19, #8]
   17d24:	ldr	w10, [x22, #8]
   17d28:	cmp	w10, #0x5
   17d2c:	b.ls	183f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb18>  // b.plast
   17d30:	sub	x10, x22, x10, lsl #3
   17d34:	ldr	x10, [x10, #40]
   17d38:	cbz	x10, 17d4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x46c>
   17d3c:	ldrb	w11, [x10]
   17d40:	sub	w11, w11, #0xb
   17d44:	cmp	w11, #0x4
   17d48:	b.cs	18418 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb38>  // b.hs, b.nlast
   17d4c:	ldr	w12, [x21, #304]
   17d50:	cbz	w12, 18288 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x9a8>
   17d54:	orr	x11, x10, #0x4
   17d58:	cmn	x11, #0x4
   17d5c:	b.eq	183d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xaf8>  // b.none
   17d60:	ldr	x11, [x21, #288]
   17d64:	ubfx	x13, x10, #4, #28
   17d68:	eor	w14, w13, w10, lsr #9
   17d6c:	sub	w13, w12, #0x1
   17d70:	and	w12, w14, w13
   17d74:	lsl	x14, x12, #4
   17d78:	ldr	x14, [x11, x14]
   17d7c:	cmp	x14, x10
   17d80:	b.ne	18258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x978>  // b.any
   17d84:	add	x10, x11, x12, lsl #4
   17d88:	ldr	w23, [x10, #12]
   17d8c:	cmp	w8, w9
   17d90:	b.cs	18294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x9b4>  // b.hs, b.nlast
   17d94:	ldr	x9, [x19]
   17d98:	str	x23, [x9, w8, uxtw #3]
   17d9c:	ldp	w8, w9, [x19, #8]
   17da0:	cmp	w8, w9
   17da4:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17da8:	add	w8, w8, #0x1
   17dac:	str	w8, [x19, #8]
   17db0:	ldr	w10, [x22, #8]
   17db4:	cmp	w10, #0x6
   17db8:	b.ls	183f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb18>  // b.plast
   17dbc:	sub	x10, x22, x10, lsl #3
   17dc0:	ldr	x10, [x10, #48]
   17dc4:	cbz	x10, 17dd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x4f4>
   17dc8:	ldrb	w11, [x10]
   17dcc:	cmp	w11, #0x4
   17dd0:	b.ne	18438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb58>  // b.any
   17dd4:	ldr	w12, [x21, #304]
   17dd8:	cbz	w12, 182e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa00>
   17ddc:	orr	x11, x10, #0x4
   17de0:	cmn	x11, #0x4
   17de4:	b.eq	183d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xaf8>  // b.none
   17de8:	ldr	x11, [x21, #288]
   17dec:	ubfx	x13, x10, #4, #28
   17df0:	eor	w14, w13, w10, lsr #9
   17df4:	sub	w13, w12, #0x1
   17df8:	and	w12, w13, w14
   17dfc:	lsl	x14, x12, #4
   17e00:	ldr	x14, [x11, x14]
   17e04:	cmp	x14, x10
   17e08:	b.ne	182b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x9d0>  // b.any
   17e0c:	add	x10, x11, x12, lsl #4
   17e10:	ldr	w23, [x10, #12]
   17e14:	cmp	w8, w9
   17e18:	b.cs	182ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa0c>  // b.hs, b.nlast
   17e1c:	ldr	x9, [x19]
   17e20:	str	x23, [x9, w8, uxtw #3]
   17e24:	ldp	w8, w9, [x19, #8]
   17e28:	cmp	w8, w9
   17e2c:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17e30:	add	w8, w8, #0x1
   17e34:	str	w8, [x19, #8]
   17e38:	ldr	w10, [x22, #8]
   17e3c:	cmp	w10, #0x7
   17e40:	b.ls	183f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb18>  // b.plast
   17e44:	sub	x10, x22, x10, lsl #3
   17e48:	ldr	x10, [x10, #56]
   17e4c:	cbz	x10, 17e58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x578>
   17e50:	ldrb	w11, [x10]
   17e54:	cbnz	w11, 18458 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb78>
   17e58:	ldr	w12, [x21, #304]
   17e5c:	cbz	w12, 18338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa58>
   17e60:	orr	x11, x10, #0x4
   17e64:	cmn	x11, #0x4
   17e68:	b.eq	183d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xaf8>  // b.none
   17e6c:	ldr	x11, [x21, #288]
   17e70:	ubfx	x13, x10, #4, #28
   17e74:	eor	w14, w13, w10, lsr #9
   17e78:	sub	w13, w12, #0x1
   17e7c:	and	w12, w14, w13
   17e80:	lsl	x14, x12, #4
   17e84:	ldr	x14, [x11, x14]
   17e88:	cmp	x14, x10
   17e8c:	b.ne	18308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa28>  // b.any
   17e90:	add	x10, x11, x12, lsl #4
   17e94:	ldr	w23, [x10, #12]
   17e98:	cmp	w8, w9
   17e9c:	b.cs	18344 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa64>  // b.hs, b.nlast
   17ea0:	ldr	x9, [x19]
   17ea4:	str	x23, [x9, w8, uxtw #3]
   17ea8:	ldp	w8, w9, [x19, #8]
   17eac:	cmp	w8, w9
   17eb0:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17eb4:	add	w8, w8, #0x1
   17eb8:	str	w8, [x19, #8]
   17ebc:	ldr	w10, [x22, #8]
   17ec0:	cmp	w10, #0x8
   17ec4:	b.ls	183f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xb18>  // b.plast
   17ec8:	sub	x10, x22, x10, lsl #3
   17ecc:	ldr	x10, [x10, #64]
   17ed0:	cbz	x10, 17ee0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x600>
   17ed4:	ldrb	w11, [x10]
   17ed8:	cmp	w11, #0xc
   17edc:	b.ne	184b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xbd8>  // b.any
   17ee0:	ldr	w12, [x21, #304]
   17ee4:	cbz	w12, 18390 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xab0>
   17ee8:	orr	x11, x10, #0x4
   17eec:	cmn	x11, #0x4
   17ef0:	b.eq	183d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xaf8>  // b.none
   17ef4:	ldr	x11, [x21, #288]
   17ef8:	ubfx	x13, x10, #4, #28
   17efc:	eor	w14, w13, w10, lsr #9
   17f00:	sub	w13, w12, #0x1
   17f04:	and	w12, w14, w13
   17f08:	lsl	x14, x12, #4
   17f0c:	ldr	x14, [x11, x14]
   17f10:	cmp	x14, x10
   17f14:	b.ne	18360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa80>  // b.any
   17f18:	add	x10, x11, x12, lsl #4
   17f1c:	ldr	w22, [x10, #12]
   17f20:	cmp	w8, w9
   17f24:	b.cs	1839c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xabc>  // b.hs, b.nlast
   17f28:	ldr	x9, [x19]
   17f2c:	str	x22, [x9, w8, uxtw #3]
   17f30:	ldp	w8, w9, [x19, #8]
   17f34:	cmp	w8, w9
   17f38:	b.cs	183b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xad8>  // b.hs, b.nlast
   17f3c:	add	w8, w8, #0x1
   17f40:	str	w8, [x19, #8]
   17f44:	ldr	x0, [x21]
   17f48:	mov	w1, #0x12                  	// #18
   17f4c:	mov	x2, x19
   17f50:	mov	w3, w20
   17f54:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17f58:	str	wzr, [x19, #8]
   17f5c:	ldp	x20, x19, [sp, #48]
   17f60:	ldp	x22, x21, [sp, #32]
   17f64:	ldr	x23, [sp, #16]
   17f68:	ldp	x29, x30, [sp], #64
   17f6c:	ret
   17f70:	cmp	w11, #0x1f
   17f74:	b.eq	17adc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x1fc>  // b.none
   17f78:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17f7c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17f80:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17f84:	add	x0, x0, #0x0
   17f88:	add	x1, x1, #0x0
   17f8c:	add	x3, x3, #0x0
   17f90:	mov	w2, #0x134                 	// #308
   17f94:	bl	0 <__assert_fail>
   17f98:	cmp	w11, #0x1f
   17f9c:	b.eq	17ae4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x204>  // b.none
   17fa0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17fa4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17fa8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   17fac:	add	x0, x0, #0x0
   17fb0:	add	x1, x1, #0x0
   17fb4:	add	x3, x3, #0x0
   17fb8:	mov	w2, #0x108                 	// #264
   17fbc:	bl	0 <__assert_fail>
   17fc0:	add	x1, x19, #0x10
   17fc4:	mov	w3, #0x8                   	// #8
   17fc8:	mov	x0, x19
   17fcc:	mov	x2, xzr
   17fd0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17fd4:	ldr	w8, [x19, #8]
   17fd8:	b	17924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x44>
   17fdc:	add	x1, x19, #0x10
   17fe0:	mov	w3, #0x8                   	// #8
   17fe4:	mov	x0, x19
   17fe8:	mov	x2, xzr
   17fec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   17ff0:	ldr	w8, [x19, #8]
   17ff4:	b	1794c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x6c>
   17ff8:	add	x1, x19, #0x10
   17ffc:	mov	w3, #0x8                   	// #8
   18000:	mov	x0, x19
   18004:	mov	x2, xzr
   18008:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1800c:	ldr	w8, [x19, #8]
   18010:	b	17a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x1b8>
   18014:	add	x1, x19, #0x10
   18018:	mov	w3, #0x8                   	// #8
   1801c:	mov	x0, x19
   18020:	mov	x2, xzr
   18024:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18028:	ldr	w8, [x19, #8]
   1802c:	b	17be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x300>
   18030:	add	x1, x19, #0x10
   18034:	mov	w3, #0x8                   	// #8
   18038:	mov	x0, x19
   1803c:	mov	x2, xzr
   18040:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18044:	ldr	w8, [x19, #8]
   18048:	b	17c08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x328>
   1804c:	add	x1, x19, #0x10
   18050:	mov	w3, #0x8                   	// #8
   18054:	mov	x0, x19
   18058:	mov	x2, xzr
   1805c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18060:	ldr	w8, [x19, #8]
   18064:	b	17c30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x350>
   18068:	add	x1, x19, #0x10
   1806c:	mov	w3, #0x8                   	// #8
   18070:	mov	x0, x19
   18074:	mov	x2, xzr
   18078:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1807c:	ldr	w8, [x19, #8]
   18080:	b	17c58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x378>
   18084:	add	x1, x19, #0x10
   18088:	mov	w3, #0x8                   	// #8
   1808c:	mov	x0, x19
   18090:	mov	x2, xzr
   18094:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18098:	ldr	w8, [x19, #8]
   1809c:	b	17d08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x428>
   180a0:	mov	w15, #0x1                   	// #1
   180a4:	cmn	x14, #0x4
   180a8:	b.eq	180d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x7f0>  // b.none
   180ac:	add	w12, w12, w15
   180b0:	and	w12, w12, w13
   180b4:	lsl	x14, x12, #4
   180b8:	ldr	x14, [x11, x14]
   180bc:	add	w15, w15, #0x1
   180c0:	cmp	x14, x10
   180c4:	b.ne	180a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x7c4>  // b.any
   180c8:	mov	w12, w12
   180cc:	b	179c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xe0>
   180d0:	mov	x23, xzr
   180d4:	cmp	w8, w9
   180d8:	b.cc	179d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xf0>  // b.lo, b.ul, b.last
   180dc:	add	x1, x19, #0x10
   180e0:	mov	w3, #0x8                   	// #8
   180e4:	mov	x0, x19
   180e8:	mov	x2, xzr
   180ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   180f0:	ldr	w8, [x19, #8]
   180f4:	b	179d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xf0>
   180f8:	mov	w15, #0x1                   	// #1
   180fc:	cmn	x14, #0x4
   18100:	b.eq	18128 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x848>  // b.none
   18104:	add	w12, w12, w15
   18108:	and	w12, w12, w13
   1810c:	lsl	x14, x12, #4
   18110:	ldr	x14, [x11, x14]
   18114:	add	w15, w15, #0x1
   18118:	cmp	x14, x10
   1811c:	b.ne	180fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x81c>  // b.any
   18120:	mov	w12, w12
   18124:	b	17a60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x180>
   18128:	mov	x23, xzr
   1812c:	cmp	w8, w9
   18130:	b.cc	17a70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x190>  // b.lo, b.ul, b.last
   18134:	add	x1, x19, #0x10
   18138:	mov	w3, #0x8                   	// #8
   1813c:	mov	x0, x19
   18140:	mov	x2, xzr
   18144:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18148:	ldr	w8, [x19, #8]
   1814c:	b	17a70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x190>
   18150:	mov	w15, #0x1                   	// #1
   18154:	cmn	x14, #0x4
   18158:	b.eq	18180 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8a0>  // b.none
   1815c:	add	w12, w12, w15
   18160:	and	w12, w12, w13
   18164:	lsl	x14, x12, #4
   18168:	ldr	x14, [x11, x14]
   1816c:	add	w15, w15, #0x1
   18170:	cmp	x14, x10
   18174:	b.ne	18154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x874>  // b.any
   18178:	mov	w12, w12
   1817c:	b	17b1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x23c>
   18180:	mov	x23, xzr
   18184:	cmp	w8, w9
   18188:	b.cc	17b2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x24c>  // b.lo, b.ul, b.last
   1818c:	add	x1, x19, #0x10
   18190:	mov	w3, #0x8                   	// #8
   18194:	mov	x0, x19
   18198:	mov	x2, xzr
   1819c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   181a0:	ldr	w8, [x19, #8]
   181a4:	b	17b2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x24c>
   181a8:	mov	w15, #0x1                   	// #1
   181ac:	cmn	x14, #0x4
   181b0:	b.eq	181d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8f8>  // b.none
   181b4:	add	w12, w12, w15
   181b8:	and	w12, w12, w13
   181bc:	lsl	x14, x12, #4
   181c0:	ldr	x14, [x11, x14]
   181c4:	add	w15, w15, #0x1
   181c8:	cmp	x14, x10
   181cc:	b.ne	181ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x8cc>  // b.any
   181d0:	mov	w12, w12
   181d4:	b	17ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x2c8>
   181d8:	mov	x23, xzr
   181dc:	cmp	w8, w9
   181e0:	b.cc	17bb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x2d8>  // b.lo, b.ul, b.last
   181e4:	add	x1, x19, #0x10
   181e8:	mov	w3, #0x8                   	// #8
   181ec:	mov	x0, x19
   181f0:	mov	x2, xzr
   181f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   181f8:	ldr	w8, [x19, #8]
   181fc:	b	17bb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x2d8>
   18200:	mov	w15, #0x1                   	// #1
   18204:	cmn	x14, #0x4
   18208:	b.eq	18230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x950>  // b.none
   1820c:	add	w12, w12, w15
   18210:	and	w12, w12, w13
   18214:	lsl	x14, x12, #4
   18218:	ldr	x14, [x11, x14]
   1821c:	add	w15, w15, #0x1
   18220:	cmp	x14, x10
   18224:	b.ne	18204 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x924>  // b.any
   18228:	mov	w12, w12
   1822c:	b	17cd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x3f0>
   18230:	mov	x23, xzr
   18234:	cmp	w8, w9
   18238:	b.cc	17ce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x400>  // b.lo, b.ul, b.last
   1823c:	add	x1, x19, #0x10
   18240:	mov	w3, #0x8                   	// #8
   18244:	mov	x0, x19
   18248:	mov	x2, xzr
   1824c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18250:	ldr	w8, [x19, #8]
   18254:	b	17ce0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x400>
   18258:	mov	w15, #0x1                   	// #1
   1825c:	cmn	x14, #0x4
   18260:	b.eq	18288 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x9a8>  // b.none
   18264:	add	w12, w12, w15
   18268:	and	w12, w12, w13
   1826c:	lsl	x14, x12, #4
   18270:	ldr	x14, [x11, x14]
   18274:	add	w15, w15, #0x1
   18278:	cmp	x14, x10
   1827c:	b.ne	1825c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x97c>  // b.any
   18280:	mov	w12, w12
   18284:	b	17d84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x4a4>
   18288:	mov	x23, xzr
   1828c:	cmp	w8, w9
   18290:	b.cc	17d94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x4b4>  // b.lo, b.ul, b.last
   18294:	add	x1, x19, #0x10
   18298:	mov	w3, #0x8                   	// #8
   1829c:	mov	x0, x19
   182a0:	mov	x2, xzr
   182a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   182a8:	ldr	w8, [x19, #8]
   182ac:	b	17d94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x4b4>
   182b0:	mov	w15, #0x1                   	// #1
   182b4:	cmn	x14, #0x4
   182b8:	b.eq	182e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa00>  // b.none
   182bc:	add	w12, w12, w15
   182c0:	and	w12, w12, w13
   182c4:	lsl	x14, x12, #4
   182c8:	ldr	x14, [x11, x14]
   182cc:	add	w15, w15, #0x1
   182d0:	cmp	x14, x10
   182d4:	b.ne	182b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x9d4>  // b.any
   182d8:	mov	w12, w12
   182dc:	b	17e0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x52c>
   182e0:	mov	x23, xzr
   182e4:	cmp	w8, w9
   182e8:	b.cc	17e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x53c>  // b.lo, b.ul, b.last
   182ec:	add	x1, x19, #0x10
   182f0:	mov	w3, #0x8                   	// #8
   182f4:	mov	x0, x19
   182f8:	mov	x2, xzr
   182fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18300:	ldr	w8, [x19, #8]
   18304:	b	17e1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x53c>
   18308:	mov	w15, #0x1                   	// #1
   1830c:	cmn	x14, #0x4
   18310:	b.eq	18338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa58>  // b.none
   18314:	add	w12, w12, w15
   18318:	and	w12, w12, w13
   1831c:	lsl	x14, x12, #4
   18320:	ldr	x14, [x11, x14]
   18324:	add	w15, w15, #0x1
   18328:	cmp	x14, x10
   1832c:	b.ne	1830c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa2c>  // b.any
   18330:	mov	w12, w12
   18334:	b	17e90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x5b0>
   18338:	mov	x23, xzr
   1833c:	cmp	w8, w9
   18340:	b.cc	17ea0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x5c0>  // b.lo, b.ul, b.last
   18344:	add	x1, x19, #0x10
   18348:	mov	w3, #0x8                   	// #8
   1834c:	mov	x0, x19
   18350:	mov	x2, xzr
   18354:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18358:	ldr	w8, [x19, #8]
   1835c:	b	17ea0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x5c0>
   18360:	mov	w15, #0x1                   	// #1
   18364:	cmn	x14, #0x4
   18368:	b.eq	18390 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xab0>  // b.none
   1836c:	add	w12, w12, w15
   18370:	and	w12, w12, w13
   18374:	lsl	x14, x12, #4
   18378:	ldr	x14, [x11, x14]
   1837c:	add	w15, w15, #0x1
   18380:	cmp	x14, x10
   18384:	b.ne	18364 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0xa84>  // b.any
   18388:	mov	w12, w12
   1838c:	b	17f18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x638>
   18390:	mov	x22, xzr
   18394:	cmp	w8, w9
   18398:	b.cc	17f28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x648>  // b.lo, b.ul, b.last
   1839c:	add	x1, x19, #0x10
   183a0:	mov	w3, #0x8                   	// #8
   183a4:	mov	x0, x19
   183a8:	mov	x2, xzr
   183ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   183b0:	ldr	w8, [x19, #8]
   183b4:	b	17f28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDICompositeTypeEPKN4llvm15DICompositeTypeERNS1_15SmallVectorImplImEEj+0x648>
   183b8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   183bc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   183c0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   183c4:	add	x0, x0, #0x0
   183c8:	add	x1, x1, #0x0
   183cc:	add	x3, x3, #0x0
   183d0:	mov	w2, #0x43                  	// #67
   183d4:	bl	0 <__assert_fail>
   183d8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   183dc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   183e0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   183e4:	add	x0, x0, #0x0
   183e8:	add	x1, x1, #0x0
   183ec:	add	x3, x3, #0x0
   183f0:	mov	w2, #0x252                 	// #594
   183f4:	bl	0 <__assert_fail>
   183f8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   183fc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18400:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18404:	add	x0, x0, #0x0
   18408:	add	x1, x1, #0x0
   1840c:	add	x3, x3, #0x0
   18410:	mov	w2, #0x436                 	// #1078
   18414:	bl	0 <__assert_fail>
   18418:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1841c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18420:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18424:	add	x0, x0, #0x0
   18428:	add	x1, x1, #0x0
   1842c:	add	x3, x3, #0x0
   18430:	mov	w2, #0x134                 	// #308
   18434:	bl	0 <__assert_fail>
   18438:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1843c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18440:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18444:	add	x0, x0, #0x0
   18448:	add	x1, x1, #0x0
   1844c:	add	x3, x3, #0x0
   18450:	mov	w2, #0x134                 	// #308
   18454:	bl	0 <__assert_fail>
   18458:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1845c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18460:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18464:	add	x0, x0, #0x0
   18468:	add	x1, x1, #0x0
   1846c:	add	x3, x3, #0x0
   18470:	mov	w2, #0x121                 	// #289
   18474:	bl	0 <__assert_fail>
   18478:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1847c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18480:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18484:	add	x0, x0, #0x0
   18488:	add	x1, x1, #0x0
   1848c:	add	x3, x3, #0x0
   18490:	mov	w2, #0x69                  	// #105
   18494:	bl	0 <__assert_fail>
   18498:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1849c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   184a0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   184a4:	add	x0, x0, #0x0
   184a8:	add	x1, x1, #0x0
   184ac:	add	x3, x3, #0x0
   184b0:	mov	w2, #0x134                 	// #308
   184b4:	bl	0 <__assert_fail>
   184b8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   184bc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   184c0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   184c4:	add	x0, x0, #0x0
   184c8:	add	x1, x1, #0x0
   184cc:	add	x3, x3, #0x0
   184d0:	mov	w2, #0x121                 	// #289
   184d4:	bl	0 <__assert_fail>

00000000000184d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj>:
   184d8:	stp	x29, x30, [sp, #-64]!
   184dc:	str	x23, [sp, #16]
   184e0:	stp	x22, x21, [sp, #32]
   184e4:	stp	x20, x19, [sp, #48]
   184e8:	mov	x29, sp
   184ec:	ldrb	w9, [x1, #1]
   184f0:	ldp	w8, w10, [x2, #8]
   184f4:	mov	w20, w3
   184f8:	mov	x19, x2
   184fc:	and	w9, w9, #0x7f
   18500:	cmp	w9, #0x1
   18504:	cset	w9, eq  // eq = none
   18508:	mov	x22, x1
   1850c:	mov	x21, x0
   18510:	cmp	w8, w10
   18514:	orr	x23, x9, #0x2
   18518:	b.cs	1863c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x164>  // b.hs, b.nlast
   1851c:	ldr	x9, [x19]
   18520:	str	x23, [x9, w8, uxtw #3]
   18524:	ldp	w8, w9, [x19, #8]
   18528:	cmp	w8, w9
   1852c:	b.cs	186e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x210>  // b.hs, b.nlast
   18530:	add	w8, w8, #0x1
   18534:	str	w8, [x19, #8]
   18538:	ldr	w23, [x22, #28]
   1853c:	cmp	w8, w9
   18540:	b.cs	18658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x180>  // b.hs, b.nlast
   18544:	ldr	x9, [x19]
   18548:	str	x23, [x9, w8, uxtw #3]
   1854c:	ldp	w8, w9, [x19, #8]
   18550:	cmp	w8, w9
   18554:	b.cs	186e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x210>  // b.hs, b.nlast
   18558:	add	w8, w8, #0x1
   1855c:	str	w8, [x19, #8]
   18560:	ldr	w10, [x22, #8]
   18564:	cmp	w10, #0x3
   18568:	b.ls	18728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x250>  // b.plast
   1856c:	sub	x10, x22, x10, lsl #3
   18570:	ldr	x10, [x10, #24]
   18574:	cbz	x10, 18584 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0xac>
   18578:	ldrb	w11, [x10]
   1857c:	cmp	w11, #0x4
   18580:	b.ne	18748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x270>  // b.any
   18584:	ldr	w12, [x21, #304]
   18588:	cbz	w12, 186c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x1e8>
   1858c:	orr	x11, x10, #0x4
   18590:	cmn	x11, #0x4
   18594:	b.eq	18708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x230>  // b.none
   18598:	ldr	x11, [x21, #288]
   1859c:	ubfx	x13, x10, #4, #28
   185a0:	eor	w14, w13, w10, lsr #9
   185a4:	sub	w13, w12, #0x1
   185a8:	and	w12, w14, w13
   185ac:	lsl	x14, x12, #4
   185b0:	ldr	x14, [x11, x14]
   185b4:	cmp	x14, x10
   185b8:	b.ne	18690 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x1b8>  // b.any
   185bc:	add	x10, x11, x12, lsl #4
   185c0:	ldr	w23, [x10, #12]
   185c4:	cmp	w8, w9
   185c8:	b.cs	186cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x1f4>  // b.hs, b.nlast
   185cc:	ldr	x9, [x19]
   185d0:	str	x23, [x9, w8, uxtw #3]
   185d4:	ldp	w8, w9, [x19, #8]
   185d8:	cmp	w8, w9
   185dc:	b.cs	186e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x210>  // b.hs, b.nlast
   185e0:	add	w8, w8, #0x1
   185e4:	str	w8, [x19, #8]
   185e8:	ldrb	w22, [x22, #52]
   185ec:	cmp	w8, w9
   185f0:	b.cs	18674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x19c>  // b.hs, b.nlast
   185f4:	ldr	x9, [x19]
   185f8:	str	x22, [x9, w8, uxtw #3]
   185fc:	ldp	w8, w9, [x19, #8]
   18600:	cmp	w8, w9
   18604:	b.cs	186e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x210>  // b.hs, b.nlast
   18608:	add	w8, w8, #0x1
   1860c:	str	w8, [x19, #8]
   18610:	ldr	x0, [x21]
   18614:	mov	w1, #0x13                  	// #19
   18618:	mov	x2, x19
   1861c:	mov	w3, w20
   18620:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18624:	str	wzr, [x19, #8]
   18628:	ldp	x20, x19, [sp, #48]
   1862c:	ldp	x22, x21, [sp, #32]
   18630:	ldr	x23, [sp, #16]
   18634:	ldp	x29, x30, [sp], #64
   18638:	ret
   1863c:	add	x1, x19, #0x10
   18640:	mov	w3, #0x8                   	// #8
   18644:	mov	x0, x19
   18648:	mov	x2, xzr
   1864c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18650:	ldr	w8, [x19, #8]
   18654:	b	1851c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x44>
   18658:	add	x1, x19, #0x10
   1865c:	mov	w3, #0x8                   	// #8
   18660:	mov	x0, x19
   18664:	mov	x2, xzr
   18668:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1866c:	ldr	w8, [x19, #8]
   18670:	b	18544 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x6c>
   18674:	add	x1, x19, #0x10
   18678:	mov	w3, #0x8                   	// #8
   1867c:	mov	x0, x19
   18680:	mov	x2, xzr
   18684:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18688:	ldr	w8, [x19, #8]
   1868c:	b	185f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x11c>
   18690:	mov	w15, #0x1                   	// #1
   18694:	cmn	x14, #0x4
   18698:	b.eq	186c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x1e8>  // b.none
   1869c:	add	w12, w12, w15
   186a0:	and	w12, w12, w13
   186a4:	lsl	x14, x12, #4
   186a8:	ldr	x14, [x11, x14]
   186ac:	add	w15, w15, #0x1
   186b0:	cmp	x14, x10
   186b4:	b.ne	18694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0x1bc>  // b.any
   186b8:	mov	w12, w12
   186bc:	b	185bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0xe4>
   186c0:	mov	x23, xzr
   186c4:	cmp	w8, w9
   186c8:	b.cc	185cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0xf4>  // b.lo, b.ul, b.last
   186cc:	add	x1, x19, #0x10
   186d0:	mov	w3, #0x8                   	// #8
   186d4:	mov	x0, x19
   186d8:	mov	x2, xzr
   186dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   186e0:	ldr	w8, [x19, #8]
   186e4:	b	185cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDISubroutineTypeEPKN4llvm16DISubroutineTypeERNS1_15SmallVectorImplImEEj+0xf4>
   186e8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   186ec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   186f0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   186f4:	add	x0, x0, #0x0
   186f8:	add	x1, x1, #0x0
   186fc:	add	x3, x3, #0x0
   18700:	mov	w2, #0x43                  	// #67
   18704:	bl	0 <__assert_fail>
   18708:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1870c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18710:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18714:	add	x0, x0, #0x0
   18718:	add	x1, x1, #0x0
   1871c:	add	x3, x3, #0x0
   18720:	mov	w2, #0x252                 	// #594
   18724:	bl	0 <__assert_fail>
   18728:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1872c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18730:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18734:	add	x0, x0, #0x0
   18738:	add	x1, x1, #0x0
   1873c:	add	x3, x3, #0x0
   18740:	mov	w2, #0x436                 	// #1078
   18744:	bl	0 <__assert_fail>
   18748:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1874c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18750:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18754:	add	x0, x0, #0x0
   18758:	add	x1, x1, #0x0
   1875c:	add	x3, x3, #0x0
   18760:	mov	w2, #0x134                 	// #308
   18764:	bl	0 <__assert_fail>

0000000000018768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj>:
   18768:	stp	x29, x30, [sp, #-64]!
   1876c:	str	x23, [sp, #16]
   18770:	stp	x22, x21, [sp, #32]
   18774:	stp	x20, x19, [sp, #48]
   18778:	mov	x29, sp
   1877c:	ldrb	w9, [x1, #1]
   18780:	ldp	w8, w10, [x2, #8]
   18784:	mov	w20, w3
   18788:	mov	x19, x2
   1878c:	and	w9, w9, #0x7f
   18790:	cmp	w9, #0x1
   18794:	mov	x22, x1
   18798:	cset	w23, eq  // eq = none
   1879c:	cmp	w8, w10
   187a0:	mov	x21, x0
   187a4:	b.cs	18a48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x2e0>  // b.hs, b.nlast
   187a8:	ldr	x9, [x19]
   187ac:	str	x23, [x9, w8, uxtw #3]
   187b0:	ldp	w8, w9, [x19, #8]
   187b4:	cmp	w8, w9
   187b8:	b.cs	18c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4cc>  // b.hs, b.nlast
   187bc:	add	w8, w8, #0x1
   187c0:	str	w8, [x19, #8]
   187c4:	ldr	w10, [x22, #8]
   187c8:	cbz	w10, 18c74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x50c>
   187cc:	sub	x10, x22, x10, lsl #3
   187d0:	ldr	x10, [x10]
   187d4:	cbz	x10, 187e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x78>
   187d8:	ldrb	w11, [x10]
   187dc:	cbnz	w11, 18c94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x52c>
   187e0:	ldr	w12, [x21, #304]
   187e4:	cbz	w12, 18a94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x32c>
   187e8:	orr	x11, x10, #0x4
   187ec:	cmn	x11, #0x4
   187f0:	b.eq	18c54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4ec>  // b.none
   187f4:	ldr	x11, [x21, #288]
   187f8:	ubfx	x13, x10, #4, #28
   187fc:	eor	w14, w13, w10, lsr #9
   18800:	sub	w13, w12, #0x1
   18804:	and	w12, w14, w13
   18808:	lsl	x14, x12, #4
   1880c:	ldr	x14, [x11, x14]
   18810:	cmp	x14, x10
   18814:	b.ne	18a64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x2fc>  // b.any
   18818:	add	x10, x11, x12, lsl #4
   1881c:	ldr	w23, [x10, #12]
   18820:	cmp	w8, w9
   18824:	b.cs	18aa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x338>  // b.hs, b.nlast
   18828:	ldr	x9, [x19]
   1882c:	str	x23, [x9, w8, uxtw #3]
   18830:	ldp	w8, w9, [x19, #8]
   18834:	cmp	w8, w9
   18838:	b.cs	18c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4cc>  // b.hs, b.nlast
   1883c:	add	w8, w8, #0x1
   18840:	str	w8, [x19, #8]
   18844:	ldr	w10, [x22, #8]
   18848:	cmp	w10, #0x1
   1884c:	b.ls	18c74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x50c>  // b.plast
   18850:	sub	x10, x22, x10, lsl #3
   18854:	ldr	x10, [x10, #8]
   18858:	cbz	x10, 18864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0xfc>
   1885c:	ldrb	w11, [x10]
   18860:	cbnz	w11, 18c94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x52c>
   18864:	ldr	w12, [x21, #304]
   18868:	cbz	w12, 18aec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x384>
   1886c:	orr	x11, x10, #0x4
   18870:	cmn	x11, #0x4
   18874:	b.eq	18c54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4ec>  // b.none
   18878:	ldr	x11, [x21, #288]
   1887c:	ubfx	x13, x10, #4, #28
   18880:	eor	w14, w13, w10, lsr #9
   18884:	sub	w13, w12, #0x1
   18888:	and	w12, w14, w13
   1888c:	lsl	x14, x12, #4
   18890:	ldr	x14, [x11, x14]
   18894:	cmp	x14, x10
   18898:	b.ne	18abc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x354>  // b.any
   1889c:	add	x10, x11, x12, lsl #4
   188a0:	ldr	w23, [x10, #12]
   188a4:	cmp	w8, w9
   188a8:	b.cs	18af8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x390>  // b.hs, b.nlast
   188ac:	ldr	x9, [x19]
   188b0:	str	x23, [x9, w8, uxtw #3]
   188b4:	ldp	w8, w9, [x19, #8]
   188b8:	cmp	w8, w9
   188bc:	b.cs	18c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4cc>  // b.hs, b.nlast
   188c0:	add	w8, w8, #0x1
   188c4:	str	w8, [x19, #8]
   188c8:	ldrb	w10, [x22, #40]
   188cc:	cbz	w10, 18944 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x1dc>
   188d0:	ldr	w23, [x22, #24]
   188d4:	cmp	w8, w9
   188d8:	b.cs	18b14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3ac>  // b.hs, b.nlast
   188dc:	ldr	x9, [x19]
   188e0:	str	x23, [x9, w8, uxtw #3]
   188e4:	ldp	w8, w9, [x19, #8]
   188e8:	cmp	w8, w9
   188ec:	b.cs	18c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4cc>  // b.hs, b.nlast
   188f0:	add	w8, w8, #0x1
   188f4:	str	w8, [x19, #8]
   188f8:	ldrb	w10, [x22, #40]
   188fc:	cbz	w10, 18cb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x54c>
   18900:	ldr	w12, [x21, #304]
   18904:	cbz	w12, 18c0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4a4>
   18908:	ldr	x10, [x22, #32]
   1890c:	orr	x11, x10, #0x4
   18910:	cmn	x11, #0x4
   18914:	b.eq	18c54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4ec>  // b.none
   18918:	ldr	x11, [x21, #288]
   1891c:	ubfx	x13, x10, #4, #28
   18920:	eor	w14, w13, w10, lsr #9
   18924:	sub	w13, w12, #0x1
   18928:	and	w12, w13, w14
   1892c:	lsl	x14, x12, #4
   18930:	ldr	x14, [x11, x14]
   18934:	cmp	x14, x10
   18938:	b.ne	18b30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3c8>  // b.any
   1893c:	add	x10, x11, x12, lsl #4
   18940:	b	18984 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x21c>
   18944:	cmp	w8, w9
   18948:	b.cs	18bb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x450>  // b.hs, b.nlast
   1894c:	ldr	x9, [x19]
   18950:	str	xzr, [x9, w8, uxtw #3]
   18954:	ldp	w8, w9, [x19, #8]
   18958:	cmp	w8, w9
   1895c:	b.cs	18c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4cc>  // b.hs, b.nlast
   18960:	add	w8, w8, #0x1
   18964:	str	w8, [x19, #8]
   18968:	ldr	w12, [x21, #304]
   1896c:	cbz	w12, 18c0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4a4>
   18970:	ldr	x10, [x21, #288]
   18974:	ldr	x14, [x10]
   18978:	cbnz	x14, 18bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x46c>
   1897c:	mov	x11, xzr
   18980:	add	x10, x10, xzr, lsl #4
   18984:	ldr	w23, [x10, #12]
   18988:	cmp	w8, w9
   1898c:	b.cs	18c18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4b0>  // b.hs, b.nlast
   18990:	ldr	x9, [x19]
   18994:	str	x23, [x9, w8, uxtw #3]
   18998:	ldp	w9, w8, [x19, #8]
   1899c:	cmp	w9, w8
   189a0:	b.cs	18c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4cc>  // b.hs, b.nlast
   189a4:	add	w9, w9, #0x1
   189a8:	str	w9, [x19, #8]
   189ac:	ldrb	w10, [x22, #56]
   189b0:	cbz	w10, 18a1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x2b4>
   189b4:	ldr	w12, [x21, #304]
   189b8:	cbz	w12, 18b90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x428>
   189bc:	ldr	x10, [x22, #48]
   189c0:	orr	x11, x10, #0x4
   189c4:	cmn	x11, #0x4
   189c8:	b.eq	18c54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4ec>  // b.none
   189cc:	ldr	x11, [x21, #288]
   189d0:	ubfx	x13, x10, #4, #28
   189d4:	eor	w14, w13, w10, lsr #9
   189d8:	sub	w13, w12, #0x1
   189dc:	and	w12, w13, w14
   189e0:	lsl	x14, x12, #4
   189e4:	ldr	x14, [x11, x14]
   189e8:	cmp	x14, x10
   189ec:	b.ne	18b60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3f8>  // b.any
   189f0:	add	x10, x11, x12, lsl #4
   189f4:	ldr	w22, [x10, #12]
   189f8:	cmp	w9, w8
   189fc:	b.cs	18b9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x434>  // b.hs, b.nlast
   18a00:	ldr	x8, [x19]
   18a04:	str	x22, [x8, w9, uxtw #3]
   18a08:	ldp	w8, w9, [x19, #8]
   18a0c:	cmp	w8, w9
   18a10:	b.cs	18c34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4cc>  // b.hs, b.nlast
   18a14:	add	w8, w8, #0x1
   18a18:	str	w8, [x19, #8]
   18a1c:	ldr	x0, [x21]
   18a20:	mov	w1, #0x10                  	// #16
   18a24:	mov	x2, x19
   18a28:	mov	w3, w20
   18a2c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18a30:	str	wzr, [x19, #8]
   18a34:	ldp	x20, x19, [sp, #48]
   18a38:	ldp	x22, x21, [sp, #32]
   18a3c:	ldr	x23, [sp, #16]
   18a40:	ldp	x29, x30, [sp], #64
   18a44:	ret
   18a48:	add	x1, x19, #0x10
   18a4c:	mov	w3, #0x8                   	// #8
   18a50:	mov	x0, x19
   18a54:	mov	x2, xzr
   18a58:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18a5c:	ldr	w8, [x19, #8]
   18a60:	b	187a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x40>
   18a64:	mov	w15, #0x1                   	// #1
   18a68:	cmn	x14, #0x4
   18a6c:	b.eq	18a94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x32c>  // b.none
   18a70:	add	w12, w12, w15
   18a74:	and	w12, w12, w13
   18a78:	lsl	x14, x12, #4
   18a7c:	ldr	x14, [x11, x14]
   18a80:	add	w15, w15, #0x1
   18a84:	cmp	x14, x10
   18a88:	b.ne	18a68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x300>  // b.any
   18a8c:	mov	w12, w12
   18a90:	b	18818 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0xb0>
   18a94:	mov	x23, xzr
   18a98:	cmp	w8, w9
   18a9c:	b.cc	18828 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0xc0>  // b.lo, b.ul, b.last
   18aa0:	add	x1, x19, #0x10
   18aa4:	mov	w3, #0x8                   	// #8
   18aa8:	mov	x0, x19
   18aac:	mov	x2, xzr
   18ab0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18ab4:	ldr	w8, [x19, #8]
   18ab8:	b	18828 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0xc0>
   18abc:	mov	w15, #0x1                   	// #1
   18ac0:	cmn	x14, #0x4
   18ac4:	b.eq	18aec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x384>  // b.none
   18ac8:	add	w12, w12, w15
   18acc:	and	w12, w12, w13
   18ad0:	lsl	x14, x12, #4
   18ad4:	ldr	x14, [x11, x14]
   18ad8:	add	w15, w15, #0x1
   18adc:	cmp	x14, x10
   18ae0:	b.ne	18ac0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x358>  // b.any
   18ae4:	mov	w12, w12
   18ae8:	b	1889c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x134>
   18aec:	mov	x23, xzr
   18af0:	cmp	w8, w9
   18af4:	b.cc	188ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x144>  // b.lo, b.ul, b.last
   18af8:	add	x1, x19, #0x10
   18afc:	mov	w3, #0x8                   	// #8
   18b00:	mov	x0, x19
   18b04:	mov	x2, xzr
   18b08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18b0c:	ldr	w8, [x19, #8]
   18b10:	b	188ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x144>
   18b14:	add	x1, x19, #0x10
   18b18:	mov	w3, #0x8                   	// #8
   18b1c:	mov	x0, x19
   18b20:	mov	x2, xzr
   18b24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18b28:	ldr	w8, [x19, #8]
   18b2c:	b	188dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x174>
   18b30:	mov	w15, #0x1                   	// #1
   18b34:	cmn	x14, #0x4
   18b38:	b.eq	18c0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4a4>  // b.none
   18b3c:	add	w12, w12, w15
   18b40:	and	w12, w12, w13
   18b44:	lsl	x14, x12, #4
   18b48:	ldr	x14, [x11, x14]
   18b4c:	add	w15, w15, #0x1
   18b50:	cmp	x14, x10
   18b54:	b.ne	18b34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3cc>  // b.any
   18b58:	mov	w12, w12
   18b5c:	b	1893c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x1d4>
   18b60:	mov	w15, #0x1                   	// #1
   18b64:	cmn	x14, #0x4
   18b68:	b.eq	18b90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x428>  // b.none
   18b6c:	add	w12, w12, w15
   18b70:	and	w12, w12, w13
   18b74:	lsl	x14, x12, #4
   18b78:	ldr	x14, [x11, x14]
   18b7c:	add	w15, w15, #0x1
   18b80:	cmp	x14, x10
   18b84:	b.ne	18b64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x3fc>  // b.any
   18b88:	mov	w12, w12
   18b8c:	b	189f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x288>
   18b90:	mov	x22, xzr
   18b94:	cmp	w9, w8
   18b98:	b.cc	18a00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x298>  // b.lo, b.ul, b.last
   18b9c:	add	x1, x19, #0x10
   18ba0:	mov	w3, #0x8                   	// #8
   18ba4:	mov	x0, x19
   18ba8:	mov	x2, xzr
   18bac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18bb0:	ldr	w9, [x19, #8]
   18bb4:	b	18a00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x298>
   18bb8:	add	x1, x19, #0x10
   18bbc:	mov	w3, #0x8                   	// #8
   18bc0:	mov	x0, x19
   18bc4:	mov	x2, xzr
   18bc8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18bcc:	ldr	w8, [x19, #8]
   18bd0:	b	1894c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x1e4>
   18bd4:	mov	w11, wzr
   18bd8:	sub	w12, w12, #0x1
   18bdc:	mov	w13, #0x1                   	// #1
   18be0:	cmn	x14, #0x4
   18be4:	b.eq	18c0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x4a4>  // b.none
   18be8:	add	w11, w11, w13
   18bec:	and	w11, w11, w12
   18bf0:	lsl	x14, x11, #4
   18bf4:	ldr	x14, [x10, x14]
   18bf8:	add	w13, w13, #0x1
   18bfc:	cbnz	x14, 18be0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x478>
   18c00:	mov	w11, w11
   18c04:	add	x10, x10, x11, lsl #4
   18c08:	b	18984 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x21c>
   18c0c:	mov	x23, xzr
   18c10:	cmp	w8, w9
   18c14:	b.cc	18990 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x228>  // b.lo, b.ul, b.last
   18c18:	add	x1, x19, #0x10
   18c1c:	mov	w3, #0x8                   	// #8
   18c20:	mov	x0, x19
   18c24:	mov	x2, xzr
   18c28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   18c2c:	ldr	w8, [x19, #8]
   18c30:	b	18990 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter11writeDIFileEPKN4llvm6DIFileERNS1_15SmallVectorImplImEEj+0x228>
   18c34:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18c38:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18c3c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18c40:	add	x0, x0, #0x0
   18c44:	add	x1, x1, #0x0
   18c48:	add	x3, x3, #0x0
   18c4c:	mov	w2, #0x43                  	// #67
   18c50:	bl	0 <__assert_fail>
   18c54:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18c58:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18c5c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18c60:	add	x0, x0, #0x0
   18c64:	add	x1, x1, #0x0
   18c68:	add	x3, x3, #0x0
   18c6c:	mov	w2, #0x252                 	// #594
   18c70:	bl	0 <__assert_fail>
   18c74:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18c78:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18c7c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18c80:	add	x0, x0, #0x0
   18c84:	add	x1, x1, #0x0
   18c88:	add	x3, x3, #0x0
   18c8c:	mov	w2, #0x436                 	// #1078
   18c90:	bl	0 <__assert_fail>
   18c94:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18c98:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18c9c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18ca0:	add	x0, x0, #0x0
   18ca4:	add	x1, x1, #0x0
   18ca8:	add	x3, x3, #0x0
   18cac:	mov	w2, #0x121                 	// #289
   18cb0:	bl	0 <__assert_fail>
   18cb4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18cb8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18cbc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   18cc0:	add	x0, x0, #0x0
   18cc4:	add	x1, x1, #0x0
   18cc8:	add	x3, x3, #0x0
   18ccc:	mov	w2, #0xad                  	// #173
   18cd0:	bl	0 <__assert_fail>

0000000000018cd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj>:
   18cd4:	stp	x29, x30, [sp, #-64]!
   18cd8:	str	x23, [sp, #16]
   18cdc:	stp	x22, x21, [sp, #32]
   18ce0:	stp	x20, x19, [sp, #48]
   18ce4:	mov	x29, sp
   18ce8:	ldrb	w8, [x1, #1]
   18cec:	and	w8, w8, #0x7f
   18cf0:	cmp	w8, #0x1
   18cf4:	b.ne	19864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb90>  // b.any
   18cf8:	ldp	w8, w9, [x2, #8]
   18cfc:	mov	w20, w3
   18d00:	mov	x19, x2
   18d04:	mov	x22, x1
   18d08:	mov	x21, x0
   18d0c:	cmp	w8, w9
   18d10:	b.cs	19394 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x6c0>  // b.hs, b.nlast
   18d14:	ldr	x9, [x19]
   18d18:	mov	w10, #0x1                   	// #1
   18d1c:	str	x10, [x9, w8, uxtw #3]
   18d20:	ldp	w8, w9, [x19, #8]
   18d24:	cmp	w8, w9
   18d28:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   18d2c:	add	w8, w8, #0x1
   18d30:	str	w8, [x19, #8]
   18d34:	ldr	w23, [x22, #24]
   18d38:	cmp	w8, w9
   18d3c:	b.cs	193b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x6dc>  // b.hs, b.nlast
   18d40:	ldr	x9, [x19]
   18d44:	str	x23, [x9, w8, uxtw #3]
   18d48:	ldp	w8, w9, [x19, #8]
   18d4c:	cmp	w8, w9
   18d50:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   18d54:	add	w8, w8, #0x1
   18d58:	str	w8, [x19, #8]
   18d5c:	ldrb	w10, [x22]
   18d60:	cmp	w10, #0xf
   18d64:	b.ne	18d74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa0>  // b.any
   18d68:	mov	x10, x22
   18d6c:	cbnz	x10, 18d88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb4>
   18d70:	b	18d94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xc0>
   18d74:	ldr	w10, [x22, #8]
   18d78:	cbz	w10, 19804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb30>
   18d7c:	sub	x10, x22, x10, lsl #3
   18d80:	ldr	x10, [x10]
   18d84:	cbz	x10, 18d94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xc0>
   18d88:	ldrb	w11, [x10]
   18d8c:	cmp	w11, #0xf
   18d90:	b.ne	19884 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xbb0>  // b.any
   18d94:	ldr	w12, [x21, #304]
   18d98:	cbz	w12, 194dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x808>
   18d9c:	orr	x11, x10, #0x4
   18da0:	cmn	x11, #0x4
   18da4:	b.eq	197e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb10>  // b.none
   18da8:	ldr	x11, [x21, #288]
   18dac:	ubfx	x13, x10, #4, #28
   18db0:	eor	w14, w13, w10, lsr #9
   18db4:	sub	w13, w12, #0x1
   18db8:	and	w12, w14, w13
   18dbc:	lsl	x14, x12, #4
   18dc0:	ldr	x14, [x11, x14]
   18dc4:	cmp	x14, x10
   18dc8:	b.ne	194ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x7d8>  // b.any
   18dcc:	add	x10, x11, x12, lsl #4
   18dd0:	ldr	w23, [x10, #12]
   18dd4:	cmp	w8, w9
   18dd8:	b.cs	194e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x814>  // b.hs, b.nlast
   18ddc:	ldr	x9, [x19]
   18de0:	str	x23, [x9, w8, uxtw #3]
   18de4:	ldp	w8, w9, [x19, #8]
   18de8:	cmp	w8, w9
   18dec:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   18df0:	add	w8, w8, #0x1
   18df4:	str	w8, [x19, #8]
   18df8:	ldr	w10, [x22, #8]
   18dfc:	cmp	w10, #0x1
   18e00:	b.ls	19804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb30>  // b.plast
   18e04:	sub	x10, x22, x10, lsl #3
   18e08:	ldr	x10, [x10, #8]
   18e0c:	cbz	x10, 18e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x144>
   18e10:	ldrb	w11, [x10]
   18e14:	cbnz	w11, 19844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb70>
   18e18:	ldr	w12, [x21, #304]
   18e1c:	cbz	w12, 19534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x860>
   18e20:	orr	x11, x10, #0x4
   18e24:	cmn	x11, #0x4
   18e28:	b.eq	197e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb10>  // b.none
   18e2c:	ldr	x11, [x21, #288]
   18e30:	ubfx	x13, x10, #4, #28
   18e34:	eor	w14, w13, w10, lsr #9
   18e38:	sub	w13, w12, #0x1
   18e3c:	and	w12, w14, w13
   18e40:	lsl	x14, x12, #4
   18e44:	ldr	x14, [x11, x14]
   18e48:	cmp	x14, x10
   18e4c:	b.ne	19504 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x830>  // b.any
   18e50:	add	x10, x11, x12, lsl #4
   18e54:	ldr	w23, [x10, #12]
   18e58:	cmp	w8, w9
   18e5c:	b.cs	19540 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x86c>  // b.hs, b.nlast
   18e60:	ldr	x9, [x19]
   18e64:	str	x23, [x9, w8, uxtw #3]
   18e68:	ldp	w8, w9, [x19, #8]
   18e6c:	cmp	w8, w9
   18e70:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   18e74:	add	w8, w8, #0x1
   18e78:	str	w8, [x19, #8]
   18e7c:	ldrb	w23, [x22, #28]
   18e80:	cmp	w8, w9
   18e84:	b.cs	193cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x6f8>  // b.hs, b.nlast
   18e88:	ldr	x9, [x19]
   18e8c:	str	x23, [x9, w8, uxtw #3]
   18e90:	ldp	w8, w9, [x19, #8]
   18e94:	cmp	w8, w9
   18e98:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   18e9c:	add	w8, w8, #0x1
   18ea0:	str	w8, [x19, #8]
   18ea4:	ldr	w10, [x22, #8]
   18ea8:	cmp	w10, #0x2
   18eac:	b.ls	19804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb30>  // b.plast
   18eb0:	sub	x10, x22, x10, lsl #3
   18eb4:	ldr	x10, [x10, #16]
   18eb8:	cbz	x10, 18ec4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x1f0>
   18ebc:	ldrb	w11, [x10]
   18ec0:	cbnz	w11, 19844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb70>
   18ec4:	ldr	w12, [x21, #304]
   18ec8:	cbz	w12, 1958c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x8b8>
   18ecc:	orr	x11, x10, #0x4
   18ed0:	cmn	x11, #0x4
   18ed4:	b.eq	197e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb10>  // b.none
   18ed8:	ldr	x11, [x21, #288]
   18edc:	ubfx	x13, x10, #4, #28
   18ee0:	eor	w14, w13, w10, lsr #9
   18ee4:	sub	w13, w12, #0x1
   18ee8:	and	w12, w14, w13
   18eec:	lsl	x14, x12, #4
   18ef0:	ldr	x14, [x11, x14]
   18ef4:	cmp	x14, x10
   18ef8:	b.ne	1955c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x888>  // b.any
   18efc:	add	x10, x11, x12, lsl #4
   18f00:	ldr	w23, [x10, #12]
   18f04:	cmp	w8, w9
   18f08:	b.cs	19598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x8c4>  // b.hs, b.nlast
   18f0c:	ldr	x9, [x19]
   18f10:	str	x23, [x9, w8, uxtw #3]
   18f14:	ldp	w8, w9, [x19, #8]
   18f18:	cmp	w8, w9
   18f1c:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   18f20:	add	w8, w8, #0x1
   18f24:	str	w8, [x19, #8]
   18f28:	ldr	w23, [x22, #32]
   18f2c:	cmp	w8, w9
   18f30:	b.cs	193e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x714>  // b.hs, b.nlast
   18f34:	ldr	x9, [x19]
   18f38:	str	x23, [x9, w8, uxtw #3]
   18f3c:	ldp	w8, w9, [x19, #8]
   18f40:	cmp	w8, w9
   18f44:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   18f48:	add	w8, w8, #0x1
   18f4c:	str	w8, [x19, #8]
   18f50:	ldr	w10, [x22, #8]
   18f54:	cmp	w10, #0x3
   18f58:	b.ls	19804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb30>  // b.plast
   18f5c:	sub	x10, x22, x10, lsl #3
   18f60:	ldr	x10, [x10, #24]
   18f64:	cbz	x10, 18f70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x29c>
   18f68:	ldrb	w11, [x10]
   18f6c:	cbnz	w11, 19844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb70>
   18f70:	ldr	w12, [x21, #304]
   18f74:	cbz	w12, 195e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x910>
   18f78:	orr	x11, x10, #0x4
   18f7c:	cmn	x11, #0x4
   18f80:	b.eq	197e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb10>  // b.none
   18f84:	ldr	x11, [x21, #288]
   18f88:	ubfx	x13, x10, #4, #28
   18f8c:	eor	w14, w13, w10, lsr #9
   18f90:	sub	w13, w12, #0x1
   18f94:	and	w12, w14, w13
   18f98:	lsl	x14, x12, #4
   18f9c:	ldr	x14, [x11, x14]
   18fa0:	cmp	x14, x10
   18fa4:	b.ne	195b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x8e0>  // b.any
   18fa8:	add	x10, x11, x12, lsl #4
   18fac:	ldr	w23, [x10, #12]
   18fb0:	cmp	w8, w9
   18fb4:	b.cs	195f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x91c>  // b.hs, b.nlast
   18fb8:	ldr	x9, [x19]
   18fbc:	str	x23, [x9, w8, uxtw #3]
   18fc0:	ldp	w8, w9, [x19, #8]
   18fc4:	cmp	w8, w9
   18fc8:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   18fcc:	add	w8, w8, #0x1
   18fd0:	str	w8, [x19, #8]
   18fd4:	ldr	w23, [x22, #36]
   18fd8:	cmp	w8, w9
   18fdc:	b.cs	19404 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x730>  // b.hs, b.nlast
   18fe0:	ldr	x9, [x19]
   18fe4:	str	x23, [x9, w8, uxtw #3]
   18fe8:	ldp	w8, w9, [x19, #8]
   18fec:	cmp	w8, w9
   18ff0:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   18ff4:	add	w8, w8, #0x1
   18ff8:	str	w8, [x19, #8]
   18ffc:	ldr	w10, [x22, #8]
   19000:	cmp	w10, #0x4
   19004:	b.ls	19804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb30>  // b.plast
   19008:	sub	x10, x22, x10, lsl #3
   1900c:	ldr	x10, [x10, #32]
   19010:	cbz	x10, 19020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x34c>
   19014:	ldrb	w11, [x10]
   19018:	cmp	w11, #0x4
   1901c:	b.ne	19824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb50>  // b.any
   19020:	ldr	w12, [x21, #304]
   19024:	cbz	w12, 1963c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x968>
   19028:	orr	x11, x10, #0x4
   1902c:	cmn	x11, #0x4
   19030:	b.eq	197e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb10>  // b.none
   19034:	ldr	x11, [x21, #288]
   19038:	ubfx	x13, x10, #4, #28
   1903c:	eor	w14, w13, w10, lsr #9
   19040:	sub	w13, w12, #0x1
   19044:	and	w12, w13, w14
   19048:	lsl	x14, x12, #4
   1904c:	ldr	x14, [x11, x14]
   19050:	cmp	x14, x10
   19054:	b.ne	1960c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x938>  // b.any
   19058:	add	x10, x11, x12, lsl #4
   1905c:	ldr	w23, [x10, #12]
   19060:	cmp	w8, w9
   19064:	b.cs	19648 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x974>  // b.hs, b.nlast
   19068:	ldr	x9, [x19]
   1906c:	str	x23, [x9, w8, uxtw #3]
   19070:	ldp	w8, w9, [x19, #8]
   19074:	cmp	w8, w9
   19078:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   1907c:	add	w8, w8, #0x1
   19080:	str	w8, [x19, #8]
   19084:	ldr	w10, [x22, #8]
   19088:	cmp	w10, #0x5
   1908c:	b.ls	19804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb30>  // b.plast
   19090:	sub	x10, x22, x10, lsl #3
   19094:	ldr	x10, [x10, #40]
   19098:	cbz	x10, 190a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x3d4>
   1909c:	ldrb	w11, [x10]
   190a0:	cmp	w11, #0x4
   190a4:	b.ne	19824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb50>  // b.any
   190a8:	ldr	w12, [x21, #304]
   190ac:	cbz	w12, 19694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x9c0>
   190b0:	orr	x11, x10, #0x4
   190b4:	cmn	x11, #0x4
   190b8:	b.eq	197e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb10>  // b.none
   190bc:	ldr	x11, [x21, #288]
   190c0:	ubfx	x13, x10, #4, #28
   190c4:	eor	w14, w13, w10, lsr #9
   190c8:	sub	w13, w12, #0x1
   190cc:	and	w12, w13, w14
   190d0:	lsl	x14, x12, #4
   190d4:	ldr	x14, [x11, x14]
   190d8:	cmp	x14, x10
   190dc:	b.ne	19664 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x990>  // b.any
   190e0:	add	x10, x11, x12, lsl #4
   190e4:	ldr	w23, [x10, #12]
   190e8:	cmp	w8, w9
   190ec:	b.cs	196a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x9cc>  // b.hs, b.nlast
   190f0:	ldr	x9, [x19]
   190f4:	str	x23, [x9, w8, uxtw #3]
   190f8:	ldp	w8, w9, [x19, #8]
   190fc:	cmp	w8, w9
   19100:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   19104:	add	w8, w8, #0x1
   19108:	cmp	w8, w9
   1910c:	str	w8, [x19, #8]
   19110:	b.cs	19420 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x74c>  // b.hs, b.nlast
   19114:	ldr	x9, [x19]
   19118:	str	xzr, [x9, w8, uxtw #3]
   1911c:	ldp	w8, w9, [x19, #8]
   19120:	cmp	w8, w9
   19124:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   19128:	add	w8, w8, #0x1
   1912c:	str	w8, [x19, #8]
   19130:	ldr	w10, [x22, #8]
   19134:	cmp	w10, #0x6
   19138:	b.ls	19804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb30>  // b.plast
   1913c:	sub	x10, x22, x10, lsl #3
   19140:	ldr	x10, [x10, #48]
   19144:	cbz	x10, 19154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x480>
   19148:	ldrb	w11, [x10]
   1914c:	cmp	w11, #0x4
   19150:	b.ne	19824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb50>  // b.any
   19154:	ldr	w12, [x21, #304]
   19158:	cbz	w12, 196ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa18>
   1915c:	orr	x11, x10, #0x4
   19160:	cmn	x11, #0x4
   19164:	b.eq	197e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb10>  // b.none
   19168:	ldr	x11, [x21, #288]
   1916c:	ubfx	x13, x10, #4, #28
   19170:	eor	w14, w13, w10, lsr #9
   19174:	sub	w13, w12, #0x1
   19178:	and	w12, w13, w14
   1917c:	lsl	x14, x12, #4
   19180:	ldr	x14, [x11, x14]
   19184:	cmp	x14, x10
   19188:	b.ne	196bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x9e8>  // b.any
   1918c:	add	x10, x11, x12, lsl #4
   19190:	ldr	w23, [x10, #12]
   19194:	cmp	w8, w9
   19198:	b.cs	196f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa24>  // b.hs, b.nlast
   1919c:	ldr	x9, [x19]
   191a0:	str	x23, [x9, w8, uxtw #3]
   191a4:	ldp	w8, w9, [x19, #8]
   191a8:	cmp	w8, w9
   191ac:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   191b0:	add	w8, w8, #0x1
   191b4:	str	w8, [x19, #8]
   191b8:	ldr	w10, [x22, #8]
   191bc:	cmp	w10, #0x7
   191c0:	b.ls	19804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb30>  // b.plast
   191c4:	sub	x10, x22, x10, lsl #3
   191c8:	ldr	x10, [x10, #56]
   191cc:	cbz	x10, 191dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x508>
   191d0:	ldrb	w11, [x10]
   191d4:	cmp	w11, #0x4
   191d8:	b.ne	19824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb50>  // b.any
   191dc:	ldr	w12, [x21, #304]
   191e0:	cbz	w12, 19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa70>
   191e4:	orr	x11, x10, #0x4
   191e8:	cmn	x11, #0x4
   191ec:	b.eq	197e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb10>  // b.none
   191f0:	ldr	x11, [x21, #288]
   191f4:	ubfx	x13, x10, #4, #28
   191f8:	eor	w14, w13, w10, lsr #9
   191fc:	sub	w13, w12, #0x1
   19200:	and	w12, w13, w14
   19204:	lsl	x14, x12, #4
   19208:	ldr	x14, [x11, x14]
   1920c:	cmp	x14, x10
   19210:	b.ne	19714 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa40>  // b.any
   19214:	add	x10, x11, x12, lsl #4
   19218:	ldr	w23, [x10, #12]
   1921c:	cmp	w8, w9
   19220:	b.cs	19750 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa7c>  // b.hs, b.nlast
   19224:	ldr	x9, [x19]
   19228:	str	x23, [x9, w8, uxtw #3]
   1922c:	ldp	w8, w9, [x19, #8]
   19230:	cmp	w8, w9
   19234:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   19238:	add	w8, w8, #0x1
   1923c:	str	w8, [x19, #8]
   19240:	ldr	x23, [x22, #40]
   19244:	cmp	w8, w9
   19248:	b.cs	1943c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x768>  // b.hs, b.nlast
   1924c:	ldr	x9, [x19]
   19250:	str	x23, [x9, w8, uxtw #3]
   19254:	ldp	w8, w9, [x19, #8]
   19258:	cmp	w8, w9
   1925c:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   19260:	add	w8, w8, #0x1
   19264:	str	w8, [x19, #8]
   19268:	ldr	w10, [x22, #8]
   1926c:	cmp	w10, #0x8
   19270:	b.ls	19804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb30>  // b.plast
   19274:	sub	x10, x22, x10, lsl #3
   19278:	ldr	x10, [x10, #64]
   1927c:	cbz	x10, 1928c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x5b8>
   19280:	ldrb	w11, [x10]
   19284:	cmp	w11, #0x4
   19288:	b.ne	19824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb50>  // b.any
   1928c:	ldr	w12, [x21, #304]
   19290:	cbz	w12, 1979c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xac8>
   19294:	orr	x11, x10, #0x4
   19298:	cmn	x11, #0x4
   1929c:	b.eq	197e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xb10>  // b.none
   192a0:	ldr	x11, [x21, #288]
   192a4:	ubfx	x13, x10, #4, #28
   192a8:	eor	w14, w13, w10, lsr #9
   192ac:	sub	w13, w12, #0x1
   192b0:	and	w12, w14, w13
   192b4:	lsl	x14, x12, #4
   192b8:	ldr	x14, [x11, x14]
   192bc:	cmp	x14, x10
   192c0:	b.ne	1976c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa98>  // b.any
   192c4:	add	x10, x11, x12, lsl #4
   192c8:	ldr	w23, [x10, #12]
   192cc:	cmp	w8, w9
   192d0:	b.cs	197a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xad4>  // b.hs, b.nlast
   192d4:	ldr	x9, [x19]
   192d8:	str	x23, [x9, w8, uxtw #3]
   192dc:	ldp	w8, w9, [x19, #8]
   192e0:	cmp	w8, w9
   192e4:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   192e8:	add	w8, w8, #0x1
   192ec:	str	w8, [x19, #8]
   192f0:	ldrb	w23, [x22, #48]
   192f4:	cmp	w8, w9
   192f8:	b.cs	19458 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x784>  // b.hs, b.nlast
   192fc:	ldr	x9, [x19]
   19300:	str	x23, [x9, w8, uxtw #3]
   19304:	ldp	w8, w9, [x19, #8]
   19308:	cmp	w8, w9
   1930c:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   19310:	add	w8, w8, #0x1
   19314:	str	w8, [x19, #8]
   19318:	ldrb	w23, [x22, #49]
   1931c:	cmp	w8, w9
   19320:	b.cs	19474 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x7a0>  // b.hs, b.nlast
   19324:	ldr	x9, [x19]
   19328:	str	x23, [x9, w8, uxtw #3]
   1932c:	ldp	w8, w9, [x19, #8]
   19330:	cmp	w8, w9
   19334:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   19338:	add	w8, w8, #0x1
   1933c:	str	w8, [x19, #8]
   19340:	ldr	w22, [x22, #52]
   19344:	cmp	w8, w9
   19348:	b.cs	19490 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x7bc>  // b.hs, b.nlast
   1934c:	ldr	x9, [x19]
   19350:	str	x22, [x9, w8, uxtw #3]
   19354:	ldp	w8, w9, [x19, #8]
   19358:	cmp	w8, w9
   1935c:	b.cs	197c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xaf0>  // b.hs, b.nlast
   19360:	add	w8, w8, #0x1
   19364:	str	w8, [x19, #8]
   19368:	ldr	x0, [x21]
   1936c:	mov	w1, #0x14                  	// #20
   19370:	mov	x2, x19
   19374:	mov	w3, w20
   19378:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1937c:	str	wzr, [x19, #8]
   19380:	ldp	x20, x19, [sp, #48]
   19384:	ldp	x22, x21, [sp, #32]
   19388:	ldr	x23, [sp, #16]
   1938c:	ldp	x29, x30, [sp], #64
   19390:	ret
   19394:	add	x1, x19, #0x10
   19398:	mov	w3, #0x8                   	// #8
   1939c:	mov	x0, x19
   193a0:	mov	x2, xzr
   193a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   193a8:	ldr	w8, [x19, #8]
   193ac:	b	18d14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x40>
   193b0:	add	x1, x19, #0x10
   193b4:	mov	w3, #0x8                   	// #8
   193b8:	mov	x0, x19
   193bc:	mov	x2, xzr
   193c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   193c4:	ldr	w8, [x19, #8]
   193c8:	b	18d40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x6c>
   193cc:	add	x1, x19, #0x10
   193d0:	mov	w3, #0x8                   	// #8
   193d4:	mov	x0, x19
   193d8:	mov	x2, xzr
   193dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   193e0:	ldr	w8, [x19, #8]
   193e4:	b	18e88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x1b4>
   193e8:	add	x1, x19, #0x10
   193ec:	mov	w3, #0x8                   	// #8
   193f0:	mov	x0, x19
   193f4:	mov	x2, xzr
   193f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   193fc:	ldr	w8, [x19, #8]
   19400:	b	18f34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x260>
   19404:	add	x1, x19, #0x10
   19408:	mov	w3, #0x8                   	// #8
   1940c:	mov	x0, x19
   19410:	mov	x2, xzr
   19414:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19418:	ldr	w8, [x19, #8]
   1941c:	b	18fe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x30c>
   19420:	add	x1, x19, #0x10
   19424:	mov	w3, #0x8                   	// #8
   19428:	mov	x0, x19
   1942c:	mov	x2, xzr
   19430:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19434:	ldr	w8, [x19, #8]
   19438:	b	19114 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x440>
   1943c:	add	x1, x19, #0x10
   19440:	mov	w3, #0x8                   	// #8
   19444:	mov	x0, x19
   19448:	mov	x2, xzr
   1944c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19450:	ldr	w8, [x19, #8]
   19454:	b	1924c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x578>
   19458:	add	x1, x19, #0x10
   1945c:	mov	w3, #0x8                   	// #8
   19460:	mov	x0, x19
   19464:	mov	x2, xzr
   19468:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1946c:	ldr	w8, [x19, #8]
   19470:	b	192fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x628>
   19474:	add	x1, x19, #0x10
   19478:	mov	w3, #0x8                   	// #8
   1947c:	mov	x0, x19
   19480:	mov	x2, xzr
   19484:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19488:	ldr	w8, [x19, #8]
   1948c:	b	19324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x650>
   19490:	add	x1, x19, #0x10
   19494:	mov	w3, #0x8                   	// #8
   19498:	mov	x0, x19
   1949c:	mov	x2, xzr
   194a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   194a4:	ldr	w8, [x19, #8]
   194a8:	b	1934c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x678>
   194ac:	mov	w15, #0x1                   	// #1
   194b0:	cmn	x14, #0x4
   194b4:	b.eq	194dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x808>  // b.none
   194b8:	add	w12, w12, w15
   194bc:	and	w12, w12, w13
   194c0:	lsl	x14, x12, #4
   194c4:	ldr	x14, [x11, x14]
   194c8:	add	w15, w15, #0x1
   194cc:	cmp	x14, x10
   194d0:	b.ne	194b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x7dc>  // b.any
   194d4:	mov	w12, w12
   194d8:	b	18dcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xf8>
   194dc:	mov	x23, xzr
   194e0:	cmp	w8, w9
   194e4:	b.cc	18ddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x108>  // b.lo, b.ul, b.last
   194e8:	add	x1, x19, #0x10
   194ec:	mov	w3, #0x8                   	// #8
   194f0:	mov	x0, x19
   194f4:	mov	x2, xzr
   194f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   194fc:	ldr	w8, [x19, #8]
   19500:	b	18ddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x108>
   19504:	mov	w15, #0x1                   	// #1
   19508:	cmn	x14, #0x4
   1950c:	b.eq	19534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x860>  // b.none
   19510:	add	w12, w12, w15
   19514:	and	w12, w12, w13
   19518:	lsl	x14, x12, #4
   1951c:	ldr	x14, [x11, x14]
   19520:	add	w15, w15, #0x1
   19524:	cmp	x14, x10
   19528:	b.ne	19508 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x834>  // b.any
   1952c:	mov	w12, w12
   19530:	b	18e50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x17c>
   19534:	mov	x23, xzr
   19538:	cmp	w8, w9
   1953c:	b.cc	18e60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x18c>  // b.lo, b.ul, b.last
   19540:	add	x1, x19, #0x10
   19544:	mov	w3, #0x8                   	// #8
   19548:	mov	x0, x19
   1954c:	mov	x2, xzr
   19550:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19554:	ldr	w8, [x19, #8]
   19558:	b	18e60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x18c>
   1955c:	mov	w15, #0x1                   	// #1
   19560:	cmn	x14, #0x4
   19564:	b.eq	1958c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x8b8>  // b.none
   19568:	add	w12, w12, w15
   1956c:	and	w12, w12, w13
   19570:	lsl	x14, x12, #4
   19574:	ldr	x14, [x11, x14]
   19578:	add	w15, w15, #0x1
   1957c:	cmp	x14, x10
   19580:	b.ne	19560 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x88c>  // b.any
   19584:	mov	w12, w12
   19588:	b	18efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x228>
   1958c:	mov	x23, xzr
   19590:	cmp	w8, w9
   19594:	b.cc	18f0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x238>  // b.lo, b.ul, b.last
   19598:	add	x1, x19, #0x10
   1959c:	mov	w3, #0x8                   	// #8
   195a0:	mov	x0, x19
   195a4:	mov	x2, xzr
   195a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   195ac:	ldr	w8, [x19, #8]
   195b0:	b	18f0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x238>
   195b4:	mov	w15, #0x1                   	// #1
   195b8:	cmn	x14, #0x4
   195bc:	b.eq	195e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x910>  // b.none
   195c0:	add	w12, w12, w15
   195c4:	and	w12, w12, w13
   195c8:	lsl	x14, x12, #4
   195cc:	ldr	x14, [x11, x14]
   195d0:	add	w15, w15, #0x1
   195d4:	cmp	x14, x10
   195d8:	b.ne	195b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x8e4>  // b.any
   195dc:	mov	w12, w12
   195e0:	b	18fa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x2d4>
   195e4:	mov	x23, xzr
   195e8:	cmp	w8, w9
   195ec:	b.cc	18fb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x2e4>  // b.lo, b.ul, b.last
   195f0:	add	x1, x19, #0x10
   195f4:	mov	w3, #0x8                   	// #8
   195f8:	mov	x0, x19
   195fc:	mov	x2, xzr
   19600:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19604:	ldr	w8, [x19, #8]
   19608:	b	18fb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x2e4>
   1960c:	mov	w15, #0x1                   	// #1
   19610:	cmn	x14, #0x4
   19614:	b.eq	1963c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x968>  // b.none
   19618:	add	w12, w12, w15
   1961c:	and	w12, w12, w13
   19620:	lsl	x14, x12, #4
   19624:	ldr	x14, [x11, x14]
   19628:	add	w15, w15, #0x1
   1962c:	cmp	x14, x10
   19630:	b.ne	19610 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x93c>  // b.any
   19634:	mov	w12, w12
   19638:	b	19058 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x384>
   1963c:	mov	x23, xzr
   19640:	cmp	w8, w9
   19644:	b.cc	19068 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x394>  // b.lo, b.ul, b.last
   19648:	add	x1, x19, #0x10
   1964c:	mov	w3, #0x8                   	// #8
   19650:	mov	x0, x19
   19654:	mov	x2, xzr
   19658:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1965c:	ldr	w8, [x19, #8]
   19660:	b	19068 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x394>
   19664:	mov	w15, #0x1                   	// #1
   19668:	cmn	x14, #0x4
   1966c:	b.eq	19694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x9c0>  // b.none
   19670:	add	w12, w12, w15
   19674:	and	w12, w12, w13
   19678:	lsl	x14, x12, #4
   1967c:	ldr	x14, [x11, x14]
   19680:	add	w15, w15, #0x1
   19684:	cmp	x14, x10
   19688:	b.ne	19668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x994>  // b.any
   1968c:	mov	w12, w12
   19690:	b	190e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x40c>
   19694:	mov	x23, xzr
   19698:	cmp	w8, w9
   1969c:	b.cc	190f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x41c>  // b.lo, b.ul, b.last
   196a0:	add	x1, x19, #0x10
   196a4:	mov	w3, #0x8                   	// #8
   196a8:	mov	x0, x19
   196ac:	mov	x2, xzr
   196b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   196b4:	ldr	w8, [x19, #8]
   196b8:	b	190f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x41c>
   196bc:	mov	w15, #0x1                   	// #1
   196c0:	cmn	x14, #0x4
   196c4:	b.eq	196ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa18>  // b.none
   196c8:	add	w12, w12, w15
   196cc:	and	w12, w12, w13
   196d0:	lsl	x14, x12, #4
   196d4:	ldr	x14, [x11, x14]
   196d8:	add	w15, w15, #0x1
   196dc:	cmp	x14, x10
   196e0:	b.ne	196c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x9ec>  // b.any
   196e4:	mov	w12, w12
   196e8:	b	1918c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x4b8>
   196ec:	mov	x23, xzr
   196f0:	cmp	w8, w9
   196f4:	b.cc	1919c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x4c8>  // b.lo, b.ul, b.last
   196f8:	add	x1, x19, #0x10
   196fc:	mov	w3, #0x8                   	// #8
   19700:	mov	x0, x19
   19704:	mov	x2, xzr
   19708:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1970c:	ldr	w8, [x19, #8]
   19710:	b	1919c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x4c8>
   19714:	mov	w15, #0x1                   	// #1
   19718:	cmn	x14, #0x4
   1971c:	b.eq	19744 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa70>  // b.none
   19720:	add	w12, w12, w15
   19724:	and	w12, w12, w13
   19728:	lsl	x14, x12, #4
   1972c:	ldr	x14, [x11, x14]
   19730:	add	w15, w15, #0x1
   19734:	cmp	x14, x10
   19738:	b.ne	19718 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa44>  // b.any
   1973c:	mov	w12, w12
   19740:	b	19214 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x540>
   19744:	mov	x23, xzr
   19748:	cmp	w8, w9
   1974c:	b.cc	19224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x550>  // b.lo, b.ul, b.last
   19750:	add	x1, x19, #0x10
   19754:	mov	w3, #0x8                   	// #8
   19758:	mov	x0, x19
   1975c:	mov	x2, xzr
   19760:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   19764:	ldr	w8, [x19, #8]
   19768:	b	19224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x550>
   1976c:	mov	w15, #0x1                   	// #1
   19770:	cmn	x14, #0x4
   19774:	b.eq	1979c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xac8>  // b.none
   19778:	add	w12, w12, w15
   1977c:	and	w12, w12, w13
   19780:	lsl	x14, x12, #4
   19784:	ldr	x14, [x11, x14]
   19788:	add	w15, w15, #0x1
   1978c:	cmp	x14, x10
   19790:	b.ne	19770 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0xa9c>  // b.any
   19794:	mov	w12, w12
   19798:	b	192c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x5f0>
   1979c:	mov	x23, xzr
   197a0:	cmp	w8, w9
   197a4:	b.cc	192d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x600>  // b.lo, b.ul, b.last
   197a8:	add	x1, x19, #0x10
   197ac:	mov	w3, #0x8                   	// #8
   197b0:	mov	x0, x19
   197b4:	mov	x2, xzr
   197b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   197bc:	ldr	w8, [x19, #8]
   197c0:	b	192d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICompileUnitEPKN4llvm13DICompileUnitERNS1_15SmallVectorImplImEEj+0x600>
   197c4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197c8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197cc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197d0:	add	x0, x0, #0x0
   197d4:	add	x1, x1, #0x0
   197d8:	add	x3, x3, #0x0
   197dc:	mov	w2, #0x43                  	// #67
   197e0:	bl	0 <__assert_fail>
   197e4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197e8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197ec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   197f0:	add	x0, x0, #0x0
   197f4:	add	x1, x1, #0x0
   197f8:	add	x3, x3, #0x0
   197fc:	mov	w2, #0x252                 	// #594
   19800:	bl	0 <__assert_fail>
   19804:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19808:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1980c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19810:	add	x0, x0, #0x0
   19814:	add	x1, x1, #0x0
   19818:	add	x3, x3, #0x0
   1981c:	mov	w2, #0x436                 	// #1078
   19820:	bl	0 <__assert_fail>
   19824:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19828:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1982c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19830:	add	x0, x0, #0x0
   19834:	add	x1, x1, #0x0
   19838:	add	x3, x3, #0x0
   1983c:	mov	w2, #0x134                 	// #308
   19840:	bl	0 <__assert_fail>
   19844:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19848:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1984c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19850:	add	x0, x0, #0x0
   19854:	add	x1, x1, #0x0
   19858:	add	x3, x3, #0x0
   1985c:	mov	w2, #0x121                 	// #289
   19860:	bl	0 <__assert_fail>
   19864:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19868:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1986c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19870:	add	x0, x0, #0x0
   19874:	add	x1, x1, #0x0
   19878:	add	x3, x3, #0x0
   1987c:	mov	w2, #0x66c                 	// #1644
   19880:	bl	0 <__assert_fail>
   19884:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19888:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1988c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   19890:	add	x0, x0, #0x0
   19894:	add	x1, x1, #0x0
   19898:	add	x3, x3, #0x0
   1989c:	mov	w2, #0x134                 	// #308
   198a0:	bl	0 <__assert_fail>

00000000000198a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj>:
   198a4:	stp	x29, x30, [sp, #-64]!
   198a8:	str	x23, [sp, #16]
   198ac:	stp	x22, x21, [sp, #32]
   198b0:	stp	x20, x19, [sp, #48]
   198b4:	mov	x29, sp
   198b8:	ldrb	w9, [x1, #1]
   198bc:	ldp	w8, w10, [x2, #8]
   198c0:	mov	w20, w3
   198c4:	mov	x19, x2
   198c8:	and	w9, w9, #0x7f
   198cc:	cmp	w9, #0x1
   198d0:	cset	w9, eq  // eq = none
   198d4:	mov	x22, x1
   198d8:	mov	x21, x0
   198dc:	cmp	w8, w10
   198e0:	orr	x23, x9, #0x6
   198e4:	b.cs	1a088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x7e4>  // b.hs, b.nlast
   198e8:	ldr	x9, [x19]
   198ec:	str	x23, [x9, w8, uxtw #3]
   198f0:	ldp	w8, w9, [x19, #8]
   198f4:	cmp	w8, w9
   198f8:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   198fc:	add	w8, w8, #0x1
   19900:	str	w8, [x19, #8]
   19904:	ldr	w10, [x22, #8]
   19908:	cmp	w10, #0x1
   1990c:	b.ls	1a554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcb0>  // b.plast
   19910:	sub	x10, x22, x10, lsl #3
   19914:	ldr	x10, [x10, #8]
   19918:	cbz	x10, 19934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x90>
   1991c:	ldrb	w11, [x10]
   19920:	sub	w12, w11, #0xb
   19924:	cmp	w12, #0xb
   19928:	b.cs	1a038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x794>  // b.hs, b.nlast
   1992c:	cmp	w12, #0xb
   19930:	b.cs	1a060 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x7bc>  // b.hs, b.nlast
   19934:	ldr	w12, [x21, #304]
   19938:	cbz	w12, 1a17c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x8d8>
   1993c:	orr	x11, x10, #0x4
   19940:	cmn	x11, #0x4
   19944:	b.eq	1a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   19948:	ldr	x11, [x21, #288]
   1994c:	ubfx	x13, x10, #4, #28
   19950:	eor	w14, w13, w10, lsr #9
   19954:	sub	w13, w12, #0x1
   19958:	and	w12, w14, w13
   1995c:	lsl	x14, x12, #4
   19960:	ldr	x14, [x11, x14]
   19964:	cmp	x14, x10
   19968:	b.ne	1a14c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x8a8>  // b.any
   1996c:	add	x10, x11, x12, lsl #4
   19970:	ldr	w23, [x10, #12]
   19974:	cmp	w8, w9
   19978:	b.cs	1a188 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x8e4>  // b.hs, b.nlast
   1997c:	ldr	x9, [x19]
   19980:	str	x23, [x9, w8, uxtw #3]
   19984:	ldp	w8, w9, [x19, #8]
   19988:	cmp	w8, w9
   1998c:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19990:	add	w8, w8, #0x1
   19994:	str	w8, [x19, #8]
   19998:	ldr	w10, [x22, #8]
   1999c:	cmp	w10, #0x2
   199a0:	b.ls	1a554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcb0>  // b.plast
   199a4:	sub	x10, x22, x10, lsl #3
   199a8:	ldr	x10, [x10, #16]
   199ac:	cbz	x10, 199b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x114>
   199b0:	ldrb	w11, [x10]
   199b4:	cbnz	w11, 1a574 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcd0>
   199b8:	ldr	w12, [x21, #304]
   199bc:	cbz	w12, 1a1d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x930>
   199c0:	orr	x11, x10, #0x4
   199c4:	cmn	x11, #0x4
   199c8:	b.eq	1a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   199cc:	ldr	x11, [x21, #288]
   199d0:	ubfx	x13, x10, #4, #28
   199d4:	eor	w14, w13, w10, lsr #9
   199d8:	sub	w13, w12, #0x1
   199dc:	and	w12, w14, w13
   199e0:	lsl	x14, x12, #4
   199e4:	ldr	x14, [x11, x14]
   199e8:	cmp	x14, x10
   199ec:	b.ne	1a1a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x900>  // b.any
   199f0:	add	x10, x11, x12, lsl #4
   199f4:	ldr	w23, [x10, #12]
   199f8:	cmp	w8, w9
   199fc:	b.cs	1a1e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x93c>  // b.hs, b.nlast
   19a00:	ldr	x9, [x19]
   19a04:	str	x23, [x9, w8, uxtw #3]
   19a08:	ldp	w8, w9, [x19, #8]
   19a0c:	cmp	w8, w9
   19a10:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19a14:	add	w8, w8, #0x1
   19a18:	str	w8, [x19, #8]
   19a1c:	ldr	w10, [x22, #8]
   19a20:	cmp	w10, #0x3
   19a24:	b.ls	1a554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcb0>  // b.plast
   19a28:	sub	x10, x22, x10, lsl #3
   19a2c:	ldr	x10, [x10, #24]
   19a30:	cbz	x10, 19a3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x198>
   19a34:	ldrb	w11, [x10]
   19a38:	cbnz	w11, 1a574 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcd0>
   19a3c:	ldr	w12, [x21, #304]
   19a40:	cbz	w12, 1a22c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x988>
   19a44:	orr	x11, x10, #0x4
   19a48:	cmn	x11, #0x4
   19a4c:	b.eq	1a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   19a50:	ldr	x11, [x21, #288]
   19a54:	ubfx	x13, x10, #4, #28
   19a58:	eor	w14, w13, w10, lsr #9
   19a5c:	sub	w13, w12, #0x1
   19a60:	and	w12, w14, w13
   19a64:	lsl	x14, x12, #4
   19a68:	ldr	x14, [x11, x14]
   19a6c:	cmp	x14, x10
   19a70:	b.ne	1a1fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x958>  // b.any
   19a74:	add	x10, x11, x12, lsl #4
   19a78:	ldr	w23, [x10, #12]
   19a7c:	cmp	w8, w9
   19a80:	b.cs	1a238 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x994>  // b.hs, b.nlast
   19a84:	ldr	x9, [x19]
   19a88:	str	x23, [x9, w8, uxtw #3]
   19a8c:	ldp	w8, w9, [x19, #8]
   19a90:	cmp	w8, w9
   19a94:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19a98:	add	w8, w8, #0x1
   19a9c:	str	w8, [x19, #8]
   19aa0:	cbz	x22, 1a5b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd10>
   19aa4:	ldrb	w10, [x22]
   19aa8:	cmp	w10, #0xf
   19aac:	b.ne	19abc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x218>  // b.any
   19ab0:	mov	x10, x22
   19ab4:	cbnz	x10, 19ad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x22c>
   19ab8:	b	19adc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x238>
   19abc:	ldr	w10, [x22, #8]
   19ac0:	cbz	w10, 1a554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcb0>
   19ac4:	sub	x10, x22, x10, lsl #3
   19ac8:	ldr	x10, [x10]
   19acc:	cbz	x10, 19adc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x238>
   19ad0:	ldrb	w11, [x10]
   19ad4:	cmp	w11, #0xf
   19ad8:	b.ne	1a5d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd30>  // b.any
   19adc:	ldr	w12, [x21, #304]
   19ae0:	cbz	w12, 1a284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x9e0>
   19ae4:	orr	x11, x10, #0x4
   19ae8:	cmn	x11, #0x4
   19aec:	b.eq	1a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   19af0:	ldr	x11, [x21, #288]
   19af4:	ubfx	x13, x10, #4, #28
   19af8:	eor	w14, w13, w10, lsr #9
   19afc:	sub	w13, w12, #0x1
   19b00:	and	w12, w14, w13
   19b04:	lsl	x14, x12, #4
   19b08:	ldr	x14, [x11, x14]
   19b0c:	cmp	x14, x10
   19b10:	b.ne	1a254 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x9b0>  // b.any
   19b14:	add	x10, x11, x12, lsl #4
   19b18:	ldr	w23, [x10, #12]
   19b1c:	cmp	w8, w9
   19b20:	b.cs	1a290 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x9ec>  // b.hs, b.nlast
   19b24:	ldr	x9, [x19]
   19b28:	str	x23, [x9, w8, uxtw #3]
   19b2c:	ldp	w8, w9, [x19, #8]
   19b30:	cmp	w8, w9
   19b34:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19b38:	add	w8, w8, #0x1
   19b3c:	str	w8, [x19, #8]
   19b40:	ldr	w23, [x22, #24]
   19b44:	cmp	w8, w9
   19b48:	b.cs	1a0a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x800>  // b.hs, b.nlast
   19b4c:	ldr	x9, [x19]
   19b50:	str	x23, [x9, w8, uxtw #3]
   19b54:	ldp	w8, w9, [x19, #8]
   19b58:	cmp	w8, w9
   19b5c:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19b60:	add	w8, w8, #0x1
   19b64:	str	w8, [x19, #8]
   19b68:	ldr	w10, [x22, #8]
   19b6c:	cmp	w10, #0x4
   19b70:	b.ls	1a554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcb0>  // b.plast
   19b74:	sub	x10, x22, x10, lsl #3
   19b78:	ldr	x10, [x10, #32]
   19b7c:	cbz	x10, 19b8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x2e8>
   19b80:	ldrb	w11, [x10]
   19b84:	cmp	w11, #0xe
   19b88:	b.ne	1a5f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd50>  // b.any
   19b8c:	ldr	w12, [x21, #304]
   19b90:	cbz	w12, 1a2dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa38>
   19b94:	orr	x11, x10, #0x4
   19b98:	cmn	x11, #0x4
   19b9c:	b.eq	1a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   19ba0:	ldr	x11, [x21, #288]
   19ba4:	ubfx	x13, x10, #4, #28
   19ba8:	eor	w14, w13, w10, lsr #9
   19bac:	sub	w13, w12, #0x1
   19bb0:	and	w12, w14, w13
   19bb4:	lsl	x14, x12, #4
   19bb8:	ldr	x14, [x11, x14]
   19bbc:	cmp	x14, x10
   19bc0:	b.ne	1a2ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa08>  // b.any
   19bc4:	add	x10, x11, x12, lsl #4
   19bc8:	ldr	w23, [x10, #12]
   19bcc:	cmp	w8, w9
   19bd0:	b.cs	1a2e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa44>  // b.hs, b.nlast
   19bd4:	ldr	x9, [x19]
   19bd8:	str	x23, [x9, w8, uxtw #3]
   19bdc:	ldp	w8, w9, [x19, #8]
   19be0:	cmp	w8, w9
   19be4:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19be8:	add	w8, w8, #0x1
   19bec:	str	w8, [x19, #8]
   19bf0:	ldr	w23, [x22, #28]
   19bf4:	cmp	w8, w9
   19bf8:	b.cs	1a0c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x81c>  // b.hs, b.nlast
   19bfc:	ldr	x9, [x19]
   19c00:	str	x23, [x9, w8, uxtw #3]
   19c04:	ldp	w8, w9, [x19, #8]
   19c08:	cmp	w8, w9
   19c0c:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19c10:	add	w8, w8, #0x1
   19c14:	str	w8, [x19, #8]
   19c18:	ldr	w10, [x22, #8]
   19c1c:	cmp	w10, #0x9
   19c20:	b.cc	19c4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x3a8>  // b.lo, b.ul, b.last
   19c24:	sub	x10, x22, x10, lsl #3
   19c28:	ldr	x10, [x10, #64]
   19c2c:	cbz	x10, 19c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x39c>
   19c30:	ldrb	w11, [x10]
   19c34:	sub	w11, w11, #0xb
   19c38:	cmp	w11, #0x4
   19c3c:	b.cs	1a634 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd90>  // b.hs, b.nlast
   19c40:	ldr	w12, [x21, #304]
   19c44:	cbnz	w12, 19c58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x3b4>
   19c48:	b	1a334 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa90>
   19c4c:	mov	x10, xzr
   19c50:	ldr	w12, [x21, #304]
   19c54:	cbz	w12, 1a334 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa90>
   19c58:	orr	x11, x10, #0x4
   19c5c:	cmn	x11, #0x4
   19c60:	b.eq	1a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   19c64:	ldr	x11, [x21, #288]
   19c68:	ubfx	x13, x10, #4, #28
   19c6c:	eor	w14, w13, w10, lsr #9
   19c70:	sub	w13, w12, #0x1
   19c74:	and	w12, w14, w13
   19c78:	lsl	x14, x12, #4
   19c7c:	ldr	x14, [x11, x14]
   19c80:	cmp	x14, x10
   19c84:	b.ne	1a304 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa60>  // b.any
   19c88:	add	x10, x11, x12, lsl #4
   19c8c:	ldr	w23, [x10, #12]
   19c90:	cmp	w8, w9
   19c94:	b.cs	1a340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa9c>  // b.hs, b.nlast
   19c98:	ldr	x9, [x19]
   19c9c:	str	x23, [x9, w8, uxtw #3]
   19ca0:	ldp	w8, w9, [x19, #8]
   19ca4:	cmp	w8, w9
   19ca8:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19cac:	add	w8, w8, #0x1
   19cb0:	str	w8, [x19, #8]
   19cb4:	ldr	w23, [x22, #44]
   19cb8:	cmp	w8, w9
   19cbc:	b.cs	1a0dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x838>  // b.hs, b.nlast
   19cc0:	ldr	x9, [x19]
   19cc4:	str	x23, [x9, w8, uxtw #3]
   19cc8:	ldp	w8, w9, [x19, #8]
   19ccc:	cmp	w8, w9
   19cd0:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19cd4:	add	w8, w8, #0x1
   19cd8:	str	w8, [x19, #8]
   19cdc:	ldr	w23, [x22, #32]
   19ce0:	cmp	w8, w9
   19ce4:	b.cs	1a0f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x854>  // b.hs, b.nlast
   19ce8:	ldr	x9, [x19]
   19cec:	str	x23, [x9, w8, uxtw #3]
   19cf0:	ldp	w8, w9, [x19, #8]
   19cf4:	cmp	w8, w9
   19cf8:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19cfc:	add	w8, w8, #0x1
   19d00:	str	w8, [x19, #8]
   19d04:	ldr	w23, [x22, #40]
   19d08:	cmp	w8, w9
   19d0c:	b.cs	1a114 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x870>  // b.hs, b.nlast
   19d10:	ldr	x9, [x19]
   19d14:	str	x23, [x9, w8, uxtw #3]
   19d18:	ldp	w8, w9, [x19, #8]
   19d1c:	cmp	w8, w9
   19d20:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19d24:	add	w8, w8, #0x1
   19d28:	str	w8, [x19, #8]
   19d2c:	ldr	w10, [x22, #8]
   19d30:	cmp	w10, #0x5
   19d34:	b.ls	1a554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcb0>  // b.plast
   19d38:	ldr	w12, [x21, #304]
   19d3c:	cbz	w12, 1a38c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xae8>
   19d40:	sub	x10, x22, x10, lsl #3
   19d44:	ldr	x10, [x10, #40]
   19d48:	orr	x11, x10, #0x4
   19d4c:	cmn	x11, #0x4
   19d50:	b.eq	1a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   19d54:	ldr	x11, [x21, #288]
   19d58:	ubfx	x13, x10, #4, #28
   19d5c:	eor	w14, w13, w10, lsr #9
   19d60:	sub	w13, w12, #0x1
   19d64:	and	w12, w14, w13
   19d68:	lsl	x14, x12, #4
   19d6c:	ldr	x14, [x11, x14]
   19d70:	cmp	x14, x10
   19d74:	b.ne	1a35c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xab8>  // b.any
   19d78:	add	x10, x11, x12, lsl #4
   19d7c:	ldr	w23, [x10, #12]
   19d80:	cmp	w8, w9
   19d84:	b.cs	1a398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xaf4>  // b.hs, b.nlast
   19d88:	ldr	x9, [x19]
   19d8c:	str	x23, [x9, w8, uxtw #3]
   19d90:	ldp	w8, w9, [x19, #8]
   19d94:	cmp	w8, w9
   19d98:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19d9c:	add	w8, w8, #0x1
   19da0:	str	w8, [x19, #8]
   19da4:	ldr	w10, [x22, #8]
   19da8:	cmp	w10, #0xa
   19dac:	b.cc	19dd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x530>  // b.lo, b.ul, b.last
   19db0:	sub	x10, x22, x10, lsl #3
   19db4:	ldr	x10, [x10, #72]
   19db8:	cbz	x10, 19dc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x524>
   19dbc:	ldrb	w11, [x10]
   19dc0:	cmp	w11, #0x4
   19dc4:	b.ne	1a594 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcf0>  // b.any
   19dc8:	ldr	w12, [x21, #304]
   19dcc:	cbnz	w12, 19de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x53c>
   19dd0:	b	1a3e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb40>
   19dd4:	mov	x10, xzr
   19dd8:	ldr	w12, [x21, #304]
   19ddc:	cbz	w12, 1a3e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb40>
   19de0:	orr	x11, x10, #0x4
   19de4:	cmn	x11, #0x4
   19de8:	b.eq	1a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   19dec:	ldr	x11, [x21, #288]
   19df0:	ubfx	x13, x10, #4, #28
   19df4:	eor	w14, w13, w10, lsr #9
   19df8:	sub	w13, w12, #0x1
   19dfc:	and	w12, w13, w14
   19e00:	lsl	x14, x12, #4
   19e04:	ldr	x14, [x11, x14]
   19e08:	cmp	x14, x10
   19e0c:	b.ne	1a3b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb10>  // b.any
   19e10:	add	x10, x11, x12, lsl #4
   19e14:	ldr	w23, [x10, #12]
   19e18:	cmp	w8, w9
   19e1c:	b.cs	1a3f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb4c>  // b.hs, b.nlast
   19e20:	ldr	x9, [x19]
   19e24:	str	x23, [x9, w8, uxtw #3]
   19e28:	ldp	w8, w9, [x19, #8]
   19e2c:	cmp	w8, w9
   19e30:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19e34:	add	w8, w8, #0x1
   19e38:	str	w8, [x19, #8]
   19e3c:	ldr	w10, [x22, #8]
   19e40:	cmp	w10, #0x6
   19e44:	b.ls	1a554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcb0>  // b.plast
   19e48:	sub	x10, x22, x10, lsl #3
   19e4c:	ldr	x10, [x10, #48]
   19e50:	cbz	x10, 19e60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x5bc>
   19e54:	ldrb	w11, [x10]
   19e58:	cmp	w11, #0x11
   19e5c:	b.ne	1a614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd70>  // b.any
   19e60:	ldr	w12, [x21, #304]
   19e64:	cbz	w12, 1a43c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb98>
   19e68:	orr	x11, x10, #0x4
   19e6c:	cmn	x11, #0x4
   19e70:	b.eq	1a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   19e74:	ldr	x11, [x21, #288]
   19e78:	ubfx	x13, x10, #4, #28
   19e7c:	eor	w14, w13, w10, lsr #9
   19e80:	sub	w13, w12, #0x1
   19e84:	and	w12, w14, w13
   19e88:	lsl	x14, x12, #4
   19e8c:	ldr	x14, [x11, x14]
   19e90:	cmp	x14, x10
   19e94:	b.ne	1a40c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb68>  // b.any
   19e98:	add	x10, x11, x12, lsl #4
   19e9c:	ldr	w23, [x10, #12]
   19ea0:	cmp	w8, w9
   19ea4:	b.cs	1a448 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xba4>  // b.hs, b.nlast
   19ea8:	ldr	x9, [x19]
   19eac:	str	x23, [x9, w8, uxtw #3]
   19eb0:	ldp	w8, w9, [x19, #8]
   19eb4:	cmp	w8, w9
   19eb8:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19ebc:	add	w8, w8, #0x1
   19ec0:	str	w8, [x19, #8]
   19ec4:	ldr	w10, [x22, #8]
   19ec8:	cmp	w10, #0x7
   19ecc:	b.ls	1a554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcb0>  // b.plast
   19ed0:	sub	x10, x22, x10, lsl #3
   19ed4:	ldr	x10, [x10, #56]
   19ed8:	cbz	x10, 19ee8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x644>
   19edc:	ldrb	w11, [x10]
   19ee0:	cmp	w11, #0x4
   19ee4:	b.ne	1a594 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcf0>  // b.any
   19ee8:	ldr	w12, [x21, #304]
   19eec:	cbz	w12, 1a494 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbf0>
   19ef0:	orr	x11, x10, #0x4
   19ef4:	cmn	x11, #0x4
   19ef8:	b.eq	1a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   19efc:	ldr	x11, [x21, #288]
   19f00:	ubfx	x13, x10, #4, #28
   19f04:	eor	w14, w13, w10, lsr #9
   19f08:	sub	w13, w12, #0x1
   19f0c:	and	w12, w14, w13
   19f10:	lsl	x14, x12, #4
   19f14:	ldr	x14, [x11, x14]
   19f18:	cmp	x14, x10
   19f1c:	b.ne	1a464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbc0>  // b.any
   19f20:	add	x10, x11, x12, lsl #4
   19f24:	ldr	w23, [x10, #12]
   19f28:	cmp	w8, w9
   19f2c:	b.cs	1a4a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbfc>  // b.hs, b.nlast
   19f30:	ldr	x9, [x19]
   19f34:	str	x23, [x9, w8, uxtw #3]
   19f38:	ldp	w8, w9, [x19, #8]
   19f3c:	cmp	w8, w9
   19f40:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19f44:	add	w8, w8, #0x1
   19f48:	str	w8, [x19, #8]
   19f4c:	ldrsw	x23, [x22, #36]
   19f50:	cmp	w8, w9
   19f54:	b.cs	1a130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x88c>  // b.hs, b.nlast
   19f58:	ldr	x9, [x19]
   19f5c:	str	x23, [x9, w8, uxtw #3]
   19f60:	ldp	w8, w9, [x19, #8]
   19f64:	cmp	w8, w9
   19f68:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   19f6c:	add	w8, w8, #0x1
   19f70:	str	w8, [x19, #8]
   19f74:	ldr	w10, [x22, #8]
   19f78:	cmp	w10, #0xb
   19f7c:	b.cc	19fa4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x700>  // b.lo, b.ul, b.last
   19f80:	sub	x10, x22, x10, lsl #3
   19f84:	ldr	x10, [x10, #80]
   19f88:	cbz	x10, 19f98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x6f4>
   19f8c:	ldrb	w11, [x10]
   19f90:	cmp	w11, #0x4
   19f94:	b.ne	1a594 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xcf0>  // b.any
   19f98:	ldr	w12, [x21, #304]
   19f9c:	cbnz	w12, 19fb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x70c>
   19fa0:	b	1a4ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc48>
   19fa4:	mov	x10, xzr
   19fa8:	ldr	w12, [x21, #304]
   19fac:	cbz	w12, 1a4ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc48>
   19fb0:	orr	x11, x10, #0x4
   19fb4:	cmn	x11, #0x4
   19fb8:	b.eq	1a534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc90>  // b.none
   19fbc:	ldr	x11, [x21, #288]
   19fc0:	ubfx	x13, x10, #4, #28
   19fc4:	eor	w14, w13, w10, lsr #9
   19fc8:	sub	w13, w12, #0x1
   19fcc:	and	w12, w14, w13
   19fd0:	lsl	x14, x12, #4
   19fd4:	ldr	x14, [x11, x14]
   19fd8:	cmp	x14, x10
   19fdc:	b.ne	1a4bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc18>  // b.any
   19fe0:	add	x10, x11, x12, lsl #4
   19fe4:	ldr	w22, [x10, #12]
   19fe8:	cmp	w8, w9
   19fec:	b.cs	1a4f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc54>  // b.hs, b.nlast
   19ff0:	ldr	x9, [x19]
   19ff4:	str	x22, [x9, w8, uxtw #3]
   19ff8:	ldp	w8, w9, [x19, #8]
   19ffc:	cmp	w8, w9
   1a000:	b.cs	1a514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc70>  // b.hs, b.nlast
   1a004:	add	w8, w8, #0x1
   1a008:	str	w8, [x19, #8]
   1a00c:	ldr	x0, [x21]
   1a010:	mov	w1, #0x15                  	// #21
   1a014:	mov	x2, x19
   1a018:	mov	w3, w20
   1a01c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a020:	str	wzr, [x19, #8]
   1a024:	ldp	x20, x19, [sp, #48]
   1a028:	ldp	x22, x21, [sp, #32]
   1a02c:	ldr	x23, [sp, #16]
   1a030:	ldp	x29, x30, [sp], #64
   1a034:	ret
   1a038:	cmp	w11, #0x1f
   1a03c:	b.eq	1992c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x88>  // b.none
   1a040:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a044:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a048:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a04c:	add	x0, x0, #0x0
   1a050:	add	x1, x1, #0x0
   1a054:	add	x3, x3, #0x0
   1a058:	mov	w2, #0x134                 	// #308
   1a05c:	bl	0 <__assert_fail>
   1a060:	cmp	w11, #0x1f
   1a064:	b.eq	19934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x90>  // b.none
   1a068:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a06c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a070:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a074:	add	x0, x0, #0x0
   1a078:	add	x1, x1, #0x0
   1a07c:	add	x3, x3, #0x0
   1a080:	mov	w2, #0x108                 	// #264
   1a084:	bl	0 <__assert_fail>
   1a088:	add	x1, x19, #0x10
   1a08c:	mov	w3, #0x8                   	// #8
   1a090:	mov	x0, x19
   1a094:	mov	x2, xzr
   1a098:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a09c:	ldr	w8, [x19, #8]
   1a0a0:	b	198e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x44>
   1a0a4:	add	x1, x19, #0x10
   1a0a8:	mov	w3, #0x8                   	// #8
   1a0ac:	mov	x0, x19
   1a0b0:	mov	x2, xzr
   1a0b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a0b8:	ldr	w8, [x19, #8]
   1a0bc:	b	19b4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x2a8>
   1a0c0:	add	x1, x19, #0x10
   1a0c4:	mov	w3, #0x8                   	// #8
   1a0c8:	mov	x0, x19
   1a0cc:	mov	x2, xzr
   1a0d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a0d4:	ldr	w8, [x19, #8]
   1a0d8:	b	19bfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x358>
   1a0dc:	add	x1, x19, #0x10
   1a0e0:	mov	w3, #0x8                   	// #8
   1a0e4:	mov	x0, x19
   1a0e8:	mov	x2, xzr
   1a0ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a0f0:	ldr	w8, [x19, #8]
   1a0f4:	b	19cc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x41c>
   1a0f8:	add	x1, x19, #0x10
   1a0fc:	mov	w3, #0x8                   	// #8
   1a100:	mov	x0, x19
   1a104:	mov	x2, xzr
   1a108:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a10c:	ldr	w8, [x19, #8]
   1a110:	b	19ce8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x444>
   1a114:	add	x1, x19, #0x10
   1a118:	mov	w3, #0x8                   	// #8
   1a11c:	mov	x0, x19
   1a120:	mov	x2, xzr
   1a124:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a128:	ldr	w8, [x19, #8]
   1a12c:	b	19d10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x46c>
   1a130:	add	x1, x19, #0x10
   1a134:	mov	w3, #0x8                   	// #8
   1a138:	mov	x0, x19
   1a13c:	mov	x2, xzr
   1a140:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a144:	ldr	w8, [x19, #8]
   1a148:	b	19f58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x6b4>
   1a14c:	mov	w15, #0x1                   	// #1
   1a150:	cmn	x14, #0x4
   1a154:	b.eq	1a17c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x8d8>  // b.none
   1a158:	add	w12, w12, w15
   1a15c:	and	w12, w12, w13
   1a160:	lsl	x14, x12, #4
   1a164:	ldr	x14, [x11, x14]
   1a168:	add	w15, w15, #0x1
   1a16c:	cmp	x14, x10
   1a170:	b.ne	1a150 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x8ac>  // b.any
   1a174:	mov	w12, w12
   1a178:	b	1996c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc8>
   1a17c:	mov	x23, xzr
   1a180:	cmp	w8, w9
   1a184:	b.cc	1997c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd8>  // b.lo, b.ul, b.last
   1a188:	add	x1, x19, #0x10
   1a18c:	mov	w3, #0x8                   	// #8
   1a190:	mov	x0, x19
   1a194:	mov	x2, xzr
   1a198:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a19c:	ldr	w8, [x19, #8]
   1a1a0:	b	1997c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xd8>
   1a1a4:	mov	w15, #0x1                   	// #1
   1a1a8:	cmn	x14, #0x4
   1a1ac:	b.eq	1a1d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x930>  // b.none
   1a1b0:	add	w12, w12, w15
   1a1b4:	and	w12, w12, w13
   1a1b8:	lsl	x14, x12, #4
   1a1bc:	ldr	x14, [x11, x14]
   1a1c0:	add	w15, w15, #0x1
   1a1c4:	cmp	x14, x10
   1a1c8:	b.ne	1a1a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x904>  // b.any
   1a1cc:	mov	w12, w12
   1a1d0:	b	199f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x14c>
   1a1d4:	mov	x23, xzr
   1a1d8:	cmp	w8, w9
   1a1dc:	b.cc	19a00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x15c>  // b.lo, b.ul, b.last
   1a1e0:	add	x1, x19, #0x10
   1a1e4:	mov	w3, #0x8                   	// #8
   1a1e8:	mov	x0, x19
   1a1ec:	mov	x2, xzr
   1a1f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a1f4:	ldr	w8, [x19, #8]
   1a1f8:	b	19a00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x15c>
   1a1fc:	mov	w15, #0x1                   	// #1
   1a200:	cmn	x14, #0x4
   1a204:	b.eq	1a22c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x988>  // b.none
   1a208:	add	w12, w12, w15
   1a20c:	and	w12, w12, w13
   1a210:	lsl	x14, x12, #4
   1a214:	ldr	x14, [x11, x14]
   1a218:	add	w15, w15, #0x1
   1a21c:	cmp	x14, x10
   1a220:	b.ne	1a200 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x95c>  // b.any
   1a224:	mov	w12, w12
   1a228:	b	19a74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x1d0>
   1a22c:	mov	x23, xzr
   1a230:	cmp	w8, w9
   1a234:	b.cc	19a84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x1e0>  // b.lo, b.ul, b.last
   1a238:	add	x1, x19, #0x10
   1a23c:	mov	w3, #0x8                   	// #8
   1a240:	mov	x0, x19
   1a244:	mov	x2, xzr
   1a248:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a24c:	ldr	w8, [x19, #8]
   1a250:	b	19a84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x1e0>
   1a254:	mov	w15, #0x1                   	// #1
   1a258:	cmn	x14, #0x4
   1a25c:	b.eq	1a284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x9e0>  // b.none
   1a260:	add	w12, w12, w15
   1a264:	and	w12, w12, w13
   1a268:	lsl	x14, x12, #4
   1a26c:	ldr	x14, [x11, x14]
   1a270:	add	w15, w15, #0x1
   1a274:	cmp	x14, x10
   1a278:	b.ne	1a258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x9b4>  // b.any
   1a27c:	mov	w12, w12
   1a280:	b	19b14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x270>
   1a284:	mov	x23, xzr
   1a288:	cmp	w8, w9
   1a28c:	b.cc	19b24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x280>  // b.lo, b.ul, b.last
   1a290:	add	x1, x19, #0x10
   1a294:	mov	w3, #0x8                   	// #8
   1a298:	mov	x0, x19
   1a29c:	mov	x2, xzr
   1a2a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a2a4:	ldr	w8, [x19, #8]
   1a2a8:	b	19b24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x280>
   1a2ac:	mov	w15, #0x1                   	// #1
   1a2b0:	cmn	x14, #0x4
   1a2b4:	b.eq	1a2dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa38>  // b.none
   1a2b8:	add	w12, w12, w15
   1a2bc:	and	w12, w12, w13
   1a2c0:	lsl	x14, x12, #4
   1a2c4:	ldr	x14, [x11, x14]
   1a2c8:	add	w15, w15, #0x1
   1a2cc:	cmp	x14, x10
   1a2d0:	b.ne	1a2b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa0c>  // b.any
   1a2d4:	mov	w12, w12
   1a2d8:	b	19bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x320>
   1a2dc:	mov	x23, xzr
   1a2e0:	cmp	w8, w9
   1a2e4:	b.cc	19bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x330>  // b.lo, b.ul, b.last
   1a2e8:	add	x1, x19, #0x10
   1a2ec:	mov	w3, #0x8                   	// #8
   1a2f0:	mov	x0, x19
   1a2f4:	mov	x2, xzr
   1a2f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a2fc:	ldr	w8, [x19, #8]
   1a300:	b	19bd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x330>
   1a304:	mov	w15, #0x1                   	// #1
   1a308:	cmn	x14, #0x4
   1a30c:	b.eq	1a334 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa90>  // b.none
   1a310:	add	w12, w12, w15
   1a314:	and	w12, w12, w13
   1a318:	lsl	x14, x12, #4
   1a31c:	ldr	x14, [x11, x14]
   1a320:	add	w15, w15, #0x1
   1a324:	cmp	x14, x10
   1a328:	b.ne	1a308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xa64>  // b.any
   1a32c:	mov	w12, w12
   1a330:	b	19c88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x3e4>
   1a334:	mov	x23, xzr
   1a338:	cmp	w8, w9
   1a33c:	b.cc	19c98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x3f4>  // b.lo, b.ul, b.last
   1a340:	add	x1, x19, #0x10
   1a344:	mov	w3, #0x8                   	// #8
   1a348:	mov	x0, x19
   1a34c:	mov	x2, xzr
   1a350:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a354:	ldr	w8, [x19, #8]
   1a358:	b	19c98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x3f4>
   1a35c:	mov	w15, #0x1                   	// #1
   1a360:	cmn	x14, #0x4
   1a364:	b.eq	1a38c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xae8>  // b.none
   1a368:	add	w12, w12, w15
   1a36c:	and	w12, w12, w13
   1a370:	lsl	x14, x12, #4
   1a374:	ldr	x14, [x11, x14]
   1a378:	add	w15, w15, #0x1
   1a37c:	cmp	x14, x10
   1a380:	b.ne	1a360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xabc>  // b.any
   1a384:	mov	w12, w12
   1a388:	b	19d78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x4d4>
   1a38c:	mov	x23, xzr
   1a390:	cmp	w8, w9
   1a394:	b.cc	19d88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x4e4>  // b.lo, b.ul, b.last
   1a398:	add	x1, x19, #0x10
   1a39c:	mov	w3, #0x8                   	// #8
   1a3a0:	mov	x0, x19
   1a3a4:	mov	x2, xzr
   1a3a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a3ac:	ldr	w8, [x19, #8]
   1a3b0:	b	19d88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x4e4>
   1a3b4:	mov	w15, #0x1                   	// #1
   1a3b8:	cmn	x14, #0x4
   1a3bc:	b.eq	1a3e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb40>  // b.none
   1a3c0:	add	w12, w12, w15
   1a3c4:	and	w12, w12, w13
   1a3c8:	lsl	x14, x12, #4
   1a3cc:	ldr	x14, [x11, x14]
   1a3d0:	add	w15, w15, #0x1
   1a3d4:	cmp	x14, x10
   1a3d8:	b.ne	1a3b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb14>  // b.any
   1a3dc:	mov	w12, w12
   1a3e0:	b	19e10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x56c>
   1a3e4:	mov	x23, xzr
   1a3e8:	cmp	w8, w9
   1a3ec:	b.cc	19e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x57c>  // b.lo, b.ul, b.last
   1a3f0:	add	x1, x19, #0x10
   1a3f4:	mov	w3, #0x8                   	// #8
   1a3f8:	mov	x0, x19
   1a3fc:	mov	x2, xzr
   1a400:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a404:	ldr	w8, [x19, #8]
   1a408:	b	19e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x57c>
   1a40c:	mov	w15, #0x1                   	// #1
   1a410:	cmn	x14, #0x4
   1a414:	b.eq	1a43c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb98>  // b.none
   1a418:	add	w12, w12, w15
   1a41c:	and	w12, w12, w13
   1a420:	lsl	x14, x12, #4
   1a424:	ldr	x14, [x11, x14]
   1a428:	add	w15, w15, #0x1
   1a42c:	cmp	x14, x10
   1a430:	b.ne	1a410 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xb6c>  // b.any
   1a434:	mov	w12, w12
   1a438:	b	19e98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x5f4>
   1a43c:	mov	x23, xzr
   1a440:	cmp	w8, w9
   1a444:	b.cc	19ea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x604>  // b.lo, b.ul, b.last
   1a448:	add	x1, x19, #0x10
   1a44c:	mov	w3, #0x8                   	// #8
   1a450:	mov	x0, x19
   1a454:	mov	x2, xzr
   1a458:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a45c:	ldr	w8, [x19, #8]
   1a460:	b	19ea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x604>
   1a464:	mov	w15, #0x1                   	// #1
   1a468:	cmn	x14, #0x4
   1a46c:	b.eq	1a494 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbf0>  // b.none
   1a470:	add	w12, w12, w15
   1a474:	and	w12, w12, w13
   1a478:	lsl	x14, x12, #4
   1a47c:	ldr	x14, [x11, x14]
   1a480:	add	w15, w15, #0x1
   1a484:	cmp	x14, x10
   1a488:	b.ne	1a468 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xbc4>  // b.any
   1a48c:	mov	w12, w12
   1a490:	b	19f20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x67c>
   1a494:	mov	x23, xzr
   1a498:	cmp	w8, w9
   1a49c:	b.cc	19f30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x68c>  // b.lo, b.ul, b.last
   1a4a0:	add	x1, x19, #0x10
   1a4a4:	mov	w3, #0x8                   	// #8
   1a4a8:	mov	x0, x19
   1a4ac:	mov	x2, xzr
   1a4b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a4b4:	ldr	w8, [x19, #8]
   1a4b8:	b	19f30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x68c>
   1a4bc:	mov	w15, #0x1                   	// #1
   1a4c0:	cmn	x14, #0x4
   1a4c4:	b.eq	1a4ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc48>  // b.none
   1a4c8:	add	w12, w12, w15
   1a4cc:	and	w12, w12, w13
   1a4d0:	lsl	x14, x12, #4
   1a4d4:	ldr	x14, [x11, x14]
   1a4d8:	add	w15, w15, #0x1
   1a4dc:	cmp	x14, x10
   1a4e0:	b.ne	1a4c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0xc1c>  // b.any
   1a4e4:	mov	w12, w12
   1a4e8:	b	19fe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x73c>
   1a4ec:	mov	x22, xzr
   1a4f0:	cmp	w8, w9
   1a4f4:	b.cc	19ff0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x74c>  // b.lo, b.ul, b.last
   1a4f8:	add	x1, x19, #0x10
   1a4fc:	mov	w3, #0x8                   	// #8
   1a500:	mov	x0, x19
   1a504:	mov	x2, xzr
   1a508:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a50c:	ldr	w8, [x19, #8]
   1a510:	b	19ff0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter17writeDISubprogramEPKN4llvm12DISubprogramERNS1_15SmallVectorImplImEEj+0x74c>
   1a514:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a518:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a51c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a520:	add	x0, x0, #0x0
   1a524:	add	x1, x1, #0x0
   1a528:	add	x3, x3, #0x0
   1a52c:	mov	w2, #0x43                  	// #67
   1a530:	bl	0 <__assert_fail>
   1a534:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a538:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a53c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a540:	add	x0, x0, #0x0
   1a544:	add	x1, x1, #0x0
   1a548:	add	x3, x3, #0x0
   1a54c:	mov	w2, #0x252                 	// #594
   1a550:	bl	0 <__assert_fail>
   1a554:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a558:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a55c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a560:	add	x0, x0, #0x0
   1a564:	add	x1, x1, #0x0
   1a568:	add	x3, x3, #0x0
   1a56c:	mov	w2, #0x436                 	// #1078
   1a570:	bl	0 <__assert_fail>
   1a574:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a578:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a57c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a580:	add	x0, x0, #0x0
   1a584:	add	x1, x1, #0x0
   1a588:	add	x3, x3, #0x0
   1a58c:	mov	w2, #0x121                 	// #289
   1a590:	bl	0 <__assert_fail>
   1a594:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a598:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a59c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a5a0:	add	x0, x0, #0x0
   1a5a4:	add	x1, x1, #0x0
   1a5a8:	add	x3, x3, #0x0
   1a5ac:	mov	w2, #0x134                 	// #308
   1a5b0:	bl	0 <__assert_fail>
   1a5b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a5b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a5bc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a5c0:	add	x0, x0, #0x0
   1a5c4:	add	x1, x1, #0x0
   1a5c8:	add	x3, x3, #0x0
   1a5cc:	mov	w2, #0x69                  	// #105
   1a5d0:	bl	0 <__assert_fail>
   1a5d4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a5d8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a5dc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a5e0:	add	x0, x0, #0x0
   1a5e4:	add	x1, x1, #0x0
   1a5e8:	add	x3, x3, #0x0
   1a5ec:	mov	w2, #0x134                 	// #308
   1a5f0:	bl	0 <__assert_fail>
   1a5f4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a5f8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a5fc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a600:	add	x0, x0, #0x0
   1a604:	add	x1, x1, #0x0
   1a608:	add	x3, x3, #0x0
   1a60c:	mov	w2, #0x134                 	// #308
   1a610:	bl	0 <__assert_fail>
   1a614:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a618:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a61c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a620:	add	x0, x0, #0x0
   1a624:	add	x1, x1, #0x0
   1a628:	add	x3, x3, #0x0
   1a62c:	mov	w2, #0x134                 	// #308
   1a630:	bl	0 <__assert_fail>
   1a634:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a638:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a63c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a640:	add	x0, x0, #0x0
   1a644:	add	x1, x1, #0x0
   1a648:	add	x3, x3, #0x0
   1a64c:	mov	w2, #0x134                 	// #308
   1a650:	bl	0 <__assert_fail>

000000000001a654 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj>:
   1a654:	stp	x29, x30, [sp, #-64]!
   1a658:	str	x23, [sp, #16]
   1a65c:	stp	x22, x21, [sp, #32]
   1a660:	stp	x20, x19, [sp, #48]
   1a664:	mov	x29, sp
   1a668:	ldrb	w9, [x1, #1]
   1a66c:	ldp	w8, w10, [x2, #8]
   1a670:	mov	w20, w3
   1a674:	mov	x19, x2
   1a678:	and	w9, w9, #0x7f
   1a67c:	cmp	w9, #0x1
   1a680:	mov	x22, x1
   1a684:	cset	w23, eq  // eq = none
   1a688:	cmp	w8, w10
   1a68c:	mov	x21, x0
   1a690:	b.cs	1a858 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x204>  // b.hs, b.nlast
   1a694:	ldr	x9, [x19]
   1a698:	str	x23, [x9, w8, uxtw #3]
   1a69c:	ldp	w8, w9, [x19, #8]
   1a6a0:	cmp	w8, w9
   1a6a4:	b.cs	1a95c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x308>  // b.hs, b.nlast
   1a6a8:	add	w8, w8, #0x1
   1a6ac:	str	w8, [x19, #8]
   1a6b0:	ldr	w10, [x22, #8]
   1a6b4:	cmp	w10, #0x1
   1a6b8:	b.ls	1a99c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x348>  // b.plast
   1a6bc:	sub	x10, x22, x10, lsl #3
   1a6c0:	ldr	x10, [x10, #8]
   1a6c4:	cbz	x10, 1a9bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x368>
   1a6c8:	ldrb	w11, [x10]
   1a6cc:	sub	w11, w11, #0x11
   1a6d0:	cmp	w11, #0x3
   1a6d4:	b.cs	1a9dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x388>  // b.hs, b.nlast
   1a6d8:	ldr	w12, [x21, #304]
   1a6dc:	cbz	w12, 1a8dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x288>
   1a6e0:	orr	x11, x10, #0x4
   1a6e4:	cmn	x11, #0x4
   1a6e8:	b.eq	1a97c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x328>  // b.none
   1a6ec:	ldr	x11, [x21, #288]
   1a6f0:	ubfx	x13, x10, #4, #28
   1a6f4:	eor	w14, w13, w10, lsr #9
   1a6f8:	sub	w13, w12, #0x1
   1a6fc:	and	w12, w13, w14
   1a700:	lsl	x14, x12, #4
   1a704:	ldr	x14, [x11, x14]
   1a708:	cmp	x14, x10
   1a70c:	b.ne	1a8ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x258>  // b.any
   1a710:	add	x10, x11, x12, lsl #4
   1a714:	ldr	w23, [x10, #12]
   1a718:	cmp	w8, w9
   1a71c:	b.cs	1a8e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x294>  // b.hs, b.nlast
   1a720:	ldr	x9, [x19]
   1a724:	str	x23, [x9, w8, uxtw #3]
   1a728:	ldp	w8, w9, [x19, #8]
   1a72c:	cmp	w8, w9
   1a730:	b.cs	1a95c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x308>  // b.hs, b.nlast
   1a734:	add	w8, w8, #0x1
   1a738:	str	w8, [x19, #8]
   1a73c:	cbz	x22, 1a9fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x3a8>
   1a740:	ldrb	w10, [x22]
   1a744:	cmp	w10, #0xf
   1a748:	b.ne	1a758 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x104>  // b.any
   1a74c:	mov	x10, x22
   1a750:	cbnz	x10, 1a76c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x118>
   1a754:	b	1a778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x124>
   1a758:	ldr	w10, [x22, #8]
   1a75c:	cbz	w10, 1a99c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x348>
   1a760:	sub	x10, x22, x10, lsl #3
   1a764:	ldr	x10, [x10]
   1a768:	cbz	x10, 1a778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x124>
   1a76c:	ldrb	w11, [x10]
   1a770:	cmp	w11, #0xf
   1a774:	b.ne	1aa1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x3c8>  // b.any
   1a778:	ldr	w12, [x21, #304]
   1a77c:	cbz	w12, 1a934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x2e0>
   1a780:	orr	x11, x10, #0x4
   1a784:	cmn	x11, #0x4
   1a788:	b.eq	1a97c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x328>  // b.none
   1a78c:	ldr	x11, [x21, #288]
   1a790:	ubfx	x13, x10, #4, #28
   1a794:	eor	w14, w13, w10, lsr #9
   1a798:	sub	w13, w12, #0x1
   1a79c:	and	w12, w14, w13
   1a7a0:	lsl	x14, x12, #4
   1a7a4:	ldr	x14, [x11, x14]
   1a7a8:	cmp	x14, x10
   1a7ac:	b.ne	1a904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x2b0>  // b.any
   1a7b0:	add	x10, x11, x12, lsl #4
   1a7b4:	ldr	w23, [x10, #12]
   1a7b8:	cmp	w8, w9
   1a7bc:	b.cs	1a940 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x2ec>  // b.hs, b.nlast
   1a7c0:	ldr	x9, [x19]
   1a7c4:	str	x23, [x9, w8, uxtw #3]
   1a7c8:	ldp	w8, w9, [x19, #8]
   1a7cc:	cmp	w8, w9
   1a7d0:	b.cs	1a95c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x308>  // b.hs, b.nlast
   1a7d4:	add	w8, w8, #0x1
   1a7d8:	str	w8, [x19, #8]
   1a7dc:	ldr	w23, [x22, #24]
   1a7e0:	cmp	w8, w9
   1a7e4:	b.cs	1a874 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x220>  // b.hs, b.nlast
   1a7e8:	ldr	x9, [x19]
   1a7ec:	str	x23, [x9, w8, uxtw #3]
   1a7f0:	ldp	w8, w9, [x19, #8]
   1a7f4:	cmp	w8, w9
   1a7f8:	b.cs	1a95c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x308>  // b.hs, b.nlast
   1a7fc:	add	w8, w8, #0x1
   1a800:	str	w8, [x19, #8]
   1a804:	ldrh	w22, [x22, #28]
   1a808:	cmp	w8, w9
   1a80c:	b.cs	1a890 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x23c>  // b.hs, b.nlast
   1a810:	ldr	x9, [x19]
   1a814:	str	x22, [x9, w8, uxtw #3]
   1a818:	ldp	w8, w9, [x19, #8]
   1a81c:	cmp	w8, w9
   1a820:	b.cs	1a95c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x308>  // b.hs, b.nlast
   1a824:	add	w8, w8, #0x1
   1a828:	str	w8, [x19, #8]
   1a82c:	ldr	x0, [x21]
   1a830:	mov	w1, #0x16                  	// #22
   1a834:	mov	x2, x19
   1a838:	mov	w3, w20
   1a83c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a840:	str	wzr, [x19, #8]
   1a844:	ldp	x20, x19, [sp, #48]
   1a848:	ldp	x22, x21, [sp, #32]
   1a84c:	ldr	x23, [sp, #16]
   1a850:	ldp	x29, x30, [sp], #64
   1a854:	ret
   1a858:	add	x1, x19, #0x10
   1a85c:	mov	w3, #0x8                   	// #8
   1a860:	mov	x0, x19
   1a864:	mov	x2, xzr
   1a868:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a86c:	ldr	w8, [x19, #8]
   1a870:	b	1a694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x40>
   1a874:	add	x1, x19, #0x10
   1a878:	mov	w3, #0x8                   	// #8
   1a87c:	mov	x0, x19
   1a880:	mov	x2, xzr
   1a884:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a888:	ldr	w8, [x19, #8]
   1a88c:	b	1a7e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x194>
   1a890:	add	x1, x19, #0x10
   1a894:	mov	w3, #0x8                   	// #8
   1a898:	mov	x0, x19
   1a89c:	mov	x2, xzr
   1a8a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a8a4:	ldr	w8, [x19, #8]
   1a8a8:	b	1a810 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x1bc>
   1a8ac:	mov	w15, #0x1                   	// #1
   1a8b0:	cmn	x14, #0x4
   1a8b4:	b.eq	1a8dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x288>  // b.none
   1a8b8:	add	w12, w12, w15
   1a8bc:	and	w12, w12, w13
   1a8c0:	lsl	x14, x12, #4
   1a8c4:	ldr	x14, [x11, x14]
   1a8c8:	add	w15, w15, #0x1
   1a8cc:	cmp	x14, x10
   1a8d0:	b.ne	1a8b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x25c>  // b.any
   1a8d4:	mov	w12, w12
   1a8d8:	b	1a710 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0xbc>
   1a8dc:	mov	x23, xzr
   1a8e0:	cmp	w8, w9
   1a8e4:	b.cc	1a720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0xcc>  // b.lo, b.ul, b.last
   1a8e8:	add	x1, x19, #0x10
   1a8ec:	mov	w3, #0x8                   	// #8
   1a8f0:	mov	x0, x19
   1a8f4:	mov	x2, xzr
   1a8f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a8fc:	ldr	w8, [x19, #8]
   1a900:	b	1a720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0xcc>
   1a904:	mov	w15, #0x1                   	// #1
   1a908:	cmn	x14, #0x4
   1a90c:	b.eq	1a934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x2e0>  // b.none
   1a910:	add	w12, w12, w15
   1a914:	and	w12, w12, w13
   1a918:	lsl	x14, x12, #4
   1a91c:	ldr	x14, [x11, x14]
   1a920:	add	w15, w15, #0x1
   1a924:	cmp	x14, x10
   1a928:	b.ne	1a908 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x2b4>  // b.any
   1a92c:	mov	w12, w12
   1a930:	b	1a7b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x15c>
   1a934:	mov	x23, xzr
   1a938:	cmp	w8, w9
   1a93c:	b.cc	1a7c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x16c>  // b.lo, b.ul, b.last
   1a940:	add	x1, x19, #0x10
   1a944:	mov	w3, #0x8                   	// #8
   1a948:	mov	x0, x19
   1a94c:	mov	x2, xzr
   1a950:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1a954:	ldr	w8, [x19, #8]
   1a958:	b	1a7c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDILexicalBlockEPKN4llvm14DILexicalBlockERNS1_15SmallVectorImplImEEj+0x16c>
   1a95c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a960:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a964:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a968:	add	x0, x0, #0x0
   1a96c:	add	x1, x1, #0x0
   1a970:	add	x3, x3, #0x0
   1a974:	mov	w2, #0x43                  	// #67
   1a978:	bl	0 <__assert_fail>
   1a97c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a980:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a984:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a988:	add	x0, x0, #0x0
   1a98c:	add	x1, x1, #0x0
   1a990:	add	x3, x3, #0x0
   1a994:	mov	w2, #0x252                 	// #594
   1a998:	bl	0 <__assert_fail>
   1a99c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a9a0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a9a4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a9a8:	add	x0, x0, #0x0
   1a9ac:	add	x1, x1, #0x0
   1a9b0:	add	x3, x3, #0x0
   1a9b4:	mov	w2, #0x436                 	// #1078
   1a9b8:	bl	0 <__assert_fail>
   1a9bc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a9c0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a9c4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a9c8:	add	x0, x0, #0x0
   1a9cc:	add	x1, x1, #0x0
   1a9d0:	add	x3, x3, #0x0
   1a9d4:	mov	w2, #0x69                  	// #105
   1a9d8:	bl	0 <__assert_fail>
   1a9dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a9e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a9e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1a9e8:	add	x0, x0, #0x0
   1a9ec:	add	x1, x1, #0x0
   1a9f0:	add	x3, x3, #0x0
   1a9f4:	mov	w2, #0x108                 	// #264
   1a9f8:	bl	0 <__assert_fail>
   1a9fc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1aa00:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1aa04:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1aa08:	add	x0, x0, #0x0
   1aa0c:	add	x1, x1, #0x0
   1aa10:	add	x3, x3, #0x0
   1aa14:	mov	w2, #0x69                  	// #105
   1aa18:	bl	0 <__assert_fail>
   1aa1c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1aa20:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1aa24:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1aa28:	add	x0, x0, #0x0
   1aa2c:	add	x1, x1, #0x0
   1aa30:	add	x3, x3, #0x0
   1aa34:	mov	w2, #0x134                 	// #308
   1aa38:	bl	0 <__assert_fail>

000000000001aa3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj>:
   1aa3c:	stp	x29, x30, [sp, #-64]!
   1aa40:	str	x23, [sp, #16]
   1aa44:	stp	x22, x21, [sp, #32]
   1aa48:	stp	x20, x19, [sp, #48]
   1aa4c:	mov	x29, sp
   1aa50:	ldrb	w9, [x1, #1]
   1aa54:	ldp	w8, w10, [x2, #8]
   1aa58:	mov	w20, w3
   1aa5c:	mov	x19, x2
   1aa60:	and	w9, w9, #0x7f
   1aa64:	cmp	w9, #0x1
   1aa68:	mov	x22, x1
   1aa6c:	cset	w23, eq  // eq = none
   1aa70:	cmp	w8, w10
   1aa74:	mov	x21, x0
   1aa78:	b.cs	1ac18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x1dc>  // b.hs, b.nlast
   1aa7c:	ldr	x9, [x19]
   1aa80:	str	x23, [x9, w8, uxtw #3]
   1aa84:	ldp	w8, w9, [x19, #8]
   1aa88:	cmp	w8, w9
   1aa8c:	b.cs	1ad00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2c4>  // b.hs, b.nlast
   1aa90:	add	w8, w8, #0x1
   1aa94:	str	w8, [x19, #8]
   1aa98:	ldr	w10, [x22, #8]
   1aa9c:	cmp	w10, #0x1
   1aaa0:	b.ls	1ad40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x304>  // b.plast
   1aaa4:	sub	x10, x22, x10, lsl #3
   1aaa8:	ldr	x10, [x10, #8]
   1aaac:	cbz	x10, 1ad60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x324>
   1aab0:	ldrb	w11, [x10]
   1aab4:	sub	w11, w11, #0x11
   1aab8:	cmp	w11, #0x3
   1aabc:	b.cs	1ad80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x344>  // b.hs, b.nlast
   1aac0:	ldr	w12, [x21, #304]
   1aac4:	cbz	w12, 1ac80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x244>
   1aac8:	orr	x11, x10, #0x4
   1aacc:	cmn	x11, #0x4
   1aad0:	b.eq	1ad20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2e4>  // b.none
   1aad4:	ldr	x11, [x21, #288]
   1aad8:	ubfx	x13, x10, #4, #28
   1aadc:	eor	w14, w13, w10, lsr #9
   1aae0:	sub	w13, w12, #0x1
   1aae4:	and	w12, w13, w14
   1aae8:	lsl	x14, x12, #4
   1aaec:	ldr	x14, [x11, x14]
   1aaf0:	cmp	x14, x10
   1aaf4:	b.ne	1ac50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x214>  // b.any
   1aaf8:	add	x10, x11, x12, lsl #4
   1aafc:	ldr	w23, [x10, #12]
   1ab00:	cmp	w8, w9
   1ab04:	b.cs	1ac8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x250>  // b.hs, b.nlast
   1ab08:	ldr	x9, [x19]
   1ab0c:	str	x23, [x9, w8, uxtw #3]
   1ab10:	ldp	w8, w9, [x19, #8]
   1ab14:	cmp	w8, w9
   1ab18:	b.cs	1ad00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2c4>  // b.hs, b.nlast
   1ab1c:	add	w8, w8, #0x1
   1ab20:	str	w8, [x19, #8]
   1ab24:	cbz	x22, 1ada0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x364>
   1ab28:	ldrb	w10, [x22]
   1ab2c:	cmp	w10, #0xf
   1ab30:	b.ne	1ab40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x104>  // b.any
   1ab34:	mov	x10, x22
   1ab38:	cbnz	x10, 1ab54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x118>
   1ab3c:	b	1ab60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x124>
   1ab40:	ldr	w10, [x22, #8]
   1ab44:	cbz	w10, 1ad40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x304>
   1ab48:	sub	x10, x22, x10, lsl #3
   1ab4c:	ldr	x10, [x10]
   1ab50:	cbz	x10, 1ab60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x124>
   1ab54:	ldrb	w11, [x10]
   1ab58:	cmp	w11, #0xf
   1ab5c:	b.ne	1adc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x384>  // b.any
   1ab60:	ldr	w12, [x21, #304]
   1ab64:	cbz	w12, 1acd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x29c>
   1ab68:	orr	x11, x10, #0x4
   1ab6c:	cmn	x11, #0x4
   1ab70:	b.eq	1ad20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2e4>  // b.none
   1ab74:	ldr	x11, [x21, #288]
   1ab78:	ubfx	x13, x10, #4, #28
   1ab7c:	eor	w14, w13, w10, lsr #9
   1ab80:	sub	w13, w12, #0x1
   1ab84:	and	w12, w14, w13
   1ab88:	lsl	x14, x12, #4
   1ab8c:	ldr	x14, [x11, x14]
   1ab90:	cmp	x14, x10
   1ab94:	b.ne	1aca8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x26c>  // b.any
   1ab98:	add	x10, x11, x12, lsl #4
   1ab9c:	ldr	w23, [x10, #12]
   1aba0:	cmp	w8, w9
   1aba4:	b.cs	1ace4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2a8>  // b.hs, b.nlast
   1aba8:	ldr	x9, [x19]
   1abac:	str	x23, [x9, w8, uxtw #3]
   1abb0:	ldp	w8, w9, [x19, #8]
   1abb4:	cmp	w8, w9
   1abb8:	b.cs	1ad00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2c4>  // b.hs, b.nlast
   1abbc:	add	w8, w8, #0x1
   1abc0:	str	w8, [x19, #8]
   1abc4:	ldr	w22, [x22, #24]
   1abc8:	cmp	w8, w9
   1abcc:	b.cs	1ac34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x1f8>  // b.hs, b.nlast
   1abd0:	ldr	x9, [x19]
   1abd4:	str	x22, [x9, w8, uxtw #3]
   1abd8:	ldp	w8, w9, [x19, #8]
   1abdc:	cmp	w8, w9
   1abe0:	b.cs	1ad00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x2c4>  // b.hs, b.nlast
   1abe4:	add	w8, w8, #0x1
   1abe8:	str	w8, [x19, #8]
   1abec:	ldr	x0, [x21]
   1abf0:	mov	w1, #0x17                  	// #23
   1abf4:	mov	x2, x19
   1abf8:	mov	w3, w20
   1abfc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ac00:	str	wzr, [x19, #8]
   1ac04:	ldp	x20, x19, [sp, #48]
   1ac08:	ldp	x22, x21, [sp, #32]
   1ac0c:	ldr	x23, [sp, #16]
   1ac10:	ldp	x29, x30, [sp], #64
   1ac14:	ret
   1ac18:	add	x1, x19, #0x10
   1ac1c:	mov	w3, #0x8                   	// #8
   1ac20:	mov	x0, x19
   1ac24:	mov	x2, xzr
   1ac28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ac2c:	ldr	w8, [x19, #8]
   1ac30:	b	1aa7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x40>
   1ac34:	add	x1, x19, #0x10
   1ac38:	mov	w3, #0x8                   	// #8
   1ac3c:	mov	x0, x19
   1ac40:	mov	x2, xzr
   1ac44:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ac48:	ldr	w8, [x19, #8]
   1ac4c:	b	1abd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x194>
   1ac50:	mov	w15, #0x1                   	// #1
   1ac54:	cmn	x14, #0x4
   1ac58:	b.eq	1ac80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x244>  // b.none
   1ac5c:	add	w12, w12, w15
   1ac60:	and	w12, w12, w13
   1ac64:	lsl	x14, x12, #4
   1ac68:	ldr	x14, [x11, x14]
   1ac6c:	add	w15, w15, #0x1
   1ac70:	cmp	x14, x10
   1ac74:	b.ne	1ac54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x218>  // b.any
   1ac78:	mov	w12, w12
   1ac7c:	b	1aaf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0xbc>
   1ac80:	mov	x23, xzr
   1ac84:	cmp	w8, w9
   1ac88:	b.cc	1ab08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0xcc>  // b.lo, b.ul, b.last
   1ac8c:	add	x1, x19, #0x10
   1ac90:	mov	w3, #0x8                   	// #8
   1ac94:	mov	x0, x19
   1ac98:	mov	x2, xzr
   1ac9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1aca0:	ldr	w8, [x19, #8]
   1aca4:	b	1ab08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0xcc>
   1aca8:	mov	w15, #0x1                   	// #1
   1acac:	cmn	x14, #0x4
   1acb0:	b.eq	1acd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x29c>  // b.none
   1acb4:	add	w12, w12, w15
   1acb8:	and	w12, w12, w13
   1acbc:	lsl	x14, x12, #4
   1acc0:	ldr	x14, [x11, x14]
   1acc4:	add	w15, w15, #0x1
   1acc8:	cmp	x14, x10
   1accc:	b.ne	1acac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x270>  // b.any
   1acd0:	mov	w12, w12
   1acd4:	b	1ab98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x15c>
   1acd8:	mov	x23, xzr
   1acdc:	cmp	w8, w9
   1ace0:	b.cc	1aba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x16c>  // b.lo, b.ul, b.last
   1ace4:	add	x1, x19, #0x10
   1ace8:	mov	w3, #0x8                   	// #8
   1acec:	mov	x0, x19
   1acf0:	mov	x2, xzr
   1acf4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1acf8:	ldr	w8, [x19, #8]
   1acfc:	b	1aba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter23writeDILexicalBlockFileEPKN4llvm18DILexicalBlockFileERNS1_15SmallVectorImplImEEj+0x16c>
   1ad00:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad04:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad08:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad0c:	add	x0, x0, #0x0
   1ad10:	add	x1, x1, #0x0
   1ad14:	add	x3, x3, #0x0
   1ad18:	mov	w2, #0x43                  	// #67
   1ad1c:	bl	0 <__assert_fail>
   1ad20:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad24:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad28:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad2c:	add	x0, x0, #0x0
   1ad30:	add	x1, x1, #0x0
   1ad34:	add	x3, x3, #0x0
   1ad38:	mov	w2, #0x252                 	// #594
   1ad3c:	bl	0 <__assert_fail>
   1ad40:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad44:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad48:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad4c:	add	x0, x0, #0x0
   1ad50:	add	x1, x1, #0x0
   1ad54:	add	x3, x3, #0x0
   1ad58:	mov	w2, #0x436                 	// #1078
   1ad5c:	bl	0 <__assert_fail>
   1ad60:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad64:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad68:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad6c:	add	x0, x0, #0x0
   1ad70:	add	x1, x1, #0x0
   1ad74:	add	x3, x3, #0x0
   1ad78:	mov	w2, #0x69                  	// #105
   1ad7c:	bl	0 <__assert_fail>
   1ad80:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad84:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad88:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ad8c:	add	x0, x0, #0x0
   1ad90:	add	x1, x1, #0x0
   1ad94:	add	x3, x3, #0x0
   1ad98:	mov	w2, #0x108                 	// #264
   1ad9c:	bl	0 <__assert_fail>
   1ada0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ada4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ada8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1adac:	add	x0, x0, #0x0
   1adb0:	add	x1, x1, #0x0
   1adb4:	add	x3, x3, #0x0
   1adb8:	mov	w2, #0x69                  	// #105
   1adbc:	bl	0 <__assert_fail>
   1adc0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1adc4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1adc8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1adcc:	add	x0, x0, #0x0
   1add0:	add	x1, x1, #0x0
   1add4:	add	x3, x3, #0x0
   1add8:	mov	w2, #0x134                 	// #308
   1addc:	bl	0 <__assert_fail>

000000000001ade0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj>:
   1ade0:	stp	x29, x30, [sp, #-64]!
   1ade4:	str	x23, [sp, #16]
   1ade8:	stp	x22, x21, [sp, #32]
   1adec:	stp	x20, x19, [sp, #48]
   1adf0:	mov	x29, sp
   1adf4:	ldrb	w9, [x1, #1]
   1adf8:	ldrb	w10, [x1, #24]
   1adfc:	ldp	w8, w11, [x2, #8]
   1ae00:	mov	w20, w3
   1ae04:	and	w9, w9, #0x7f
   1ae08:	lsl	w10, w10, #1
   1ae0c:	cmp	w9, #0x1
   1ae10:	and	x9, x10, #0x2
   1ae14:	cset	w10, eq  // eq = none
   1ae18:	mov	x19, x2
   1ae1c:	mov	x22, x1
   1ae20:	mov	x21, x0
   1ae24:	cmp	w8, w11
   1ae28:	orr	x23, x9, x10
   1ae2c:	b.cs	1afe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x200>  // b.hs, b.nlast
   1ae30:	ldr	x9, [x19]
   1ae34:	str	x23, [x9, w8, uxtw #3]
   1ae38:	ldp	w8, w9, [x19, #8]
   1ae3c:	cmp	w8, w9
   1ae40:	b.cs	1b0ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x2cc>  // b.hs, b.nlast
   1ae44:	add	w8, w8, #0x1
   1ae48:	str	w8, [x19, #8]
   1ae4c:	ldr	w10, [x22, #8]
   1ae50:	cmp	w10, #0x1
   1ae54:	b.ls	1b0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x30c>  // b.plast
   1ae58:	sub	x10, x22, x10, lsl #3
   1ae5c:	ldr	x10, [x10, #8]
   1ae60:	cbz	x10, 1ae7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x9c>
   1ae64:	ldrb	w11, [x10]
   1ae68:	sub	w12, w11, #0xb
   1ae6c:	cmp	w12, #0xb
   1ae70:	b.cs	1af90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x1b0>  // b.hs, b.nlast
   1ae74:	cmp	w12, #0xb
   1ae78:	b.cs	1afb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x1d8>  // b.hs, b.nlast
   1ae7c:	ldr	w12, [x21, #304]
   1ae80:	cbz	w12, 1b02c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x24c>
   1ae84:	orr	x11, x10, #0x4
   1ae88:	cmn	x11, #0x4
   1ae8c:	b.eq	1b0cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x2ec>  // b.none
   1ae90:	ldr	x11, [x21, #288]
   1ae94:	ubfx	x13, x10, #4, #28
   1ae98:	eor	w14, w13, w10, lsr #9
   1ae9c:	sub	w13, w12, #0x1
   1aea0:	and	w12, w14, w13
   1aea4:	lsl	x14, x12, #4
   1aea8:	ldr	x14, [x11, x14]
   1aeac:	cmp	x14, x10
   1aeb0:	b.ne	1affc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x21c>  // b.any
   1aeb4:	add	x10, x11, x12, lsl #4
   1aeb8:	ldr	w23, [x10, #12]
   1aebc:	cmp	w8, w9
   1aec0:	b.cs	1b038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x258>  // b.hs, b.nlast
   1aec4:	ldr	x9, [x19]
   1aec8:	str	x23, [x9, w8, uxtw #3]
   1aecc:	ldp	w8, w9, [x19, #8]
   1aed0:	cmp	w8, w9
   1aed4:	b.cs	1b0ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x2cc>  // b.hs, b.nlast
   1aed8:	add	w8, w8, #0x1
   1aedc:	str	w8, [x19, #8]
   1aee0:	ldr	w10, [x22, #8]
   1aee4:	cmp	w10, #0x2
   1aee8:	b.ls	1b0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x30c>  // b.plast
   1aeec:	sub	x10, x22, x10, lsl #3
   1aef0:	ldr	x10, [x10, #16]
   1aef4:	cbz	x10, 1af00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x120>
   1aef8:	ldrb	w11, [x10]
   1aefc:	cbnz	w11, 1b10c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x32c>
   1af00:	ldr	w12, [x21, #304]
   1af04:	cbz	w12, 1b084 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x2a4>
   1af08:	orr	x11, x10, #0x4
   1af0c:	cmn	x11, #0x4
   1af10:	b.eq	1b0cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x2ec>  // b.none
   1af14:	ldr	x11, [x21, #288]
   1af18:	ubfx	x13, x10, #4, #28
   1af1c:	eor	w14, w13, w10, lsr #9
   1af20:	sub	w13, w12, #0x1
   1af24:	and	w12, w14, w13
   1af28:	lsl	x14, x12, #4
   1af2c:	ldr	x14, [x11, x14]
   1af30:	cmp	x14, x10
   1af34:	b.ne	1b054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x274>  // b.any
   1af38:	add	x10, x11, x12, lsl #4
   1af3c:	ldr	w22, [x10, #12]
   1af40:	cmp	w8, w9
   1af44:	b.cs	1b090 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x2b0>  // b.hs, b.nlast
   1af48:	ldr	x9, [x19]
   1af4c:	str	x22, [x9, w8, uxtw #3]
   1af50:	ldp	w8, w9, [x19, #8]
   1af54:	cmp	w8, w9
   1af58:	b.cs	1b0ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x2cc>  // b.hs, b.nlast
   1af5c:	add	w8, w8, #0x1
   1af60:	str	w8, [x19, #8]
   1af64:	ldr	x0, [x21]
   1af68:	mov	w1, #0x18                  	// #24
   1af6c:	mov	x2, x19
   1af70:	mov	w3, w20
   1af74:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1af78:	str	wzr, [x19, #8]
   1af7c:	ldp	x20, x19, [sp, #48]
   1af80:	ldp	x22, x21, [sp, #32]
   1af84:	ldr	x23, [sp, #16]
   1af88:	ldp	x29, x30, [sp], #64
   1af8c:	ret
   1af90:	cmp	w11, #0x1f
   1af94:	b.eq	1ae74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x94>  // b.none
   1af98:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1af9c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1afa0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1afa4:	add	x0, x0, #0x0
   1afa8:	add	x1, x1, #0x0
   1afac:	add	x3, x3, #0x0
   1afb0:	mov	w2, #0x134                 	// #308
   1afb4:	bl	0 <__assert_fail>
   1afb8:	cmp	w11, #0x1f
   1afbc:	b.eq	1ae7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x9c>  // b.none
   1afc0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1afc4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1afc8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1afcc:	add	x0, x0, #0x0
   1afd0:	add	x1, x1, #0x0
   1afd4:	add	x3, x3, #0x0
   1afd8:	mov	w2, #0x108                 	// #264
   1afdc:	bl	0 <__assert_fail>
   1afe0:	add	x1, x19, #0x10
   1afe4:	mov	w3, #0x8                   	// #8
   1afe8:	mov	x0, x19
   1afec:	mov	x2, xzr
   1aff0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1aff4:	ldr	w8, [x19, #8]
   1aff8:	b	1ae30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x50>
   1affc:	mov	w15, #0x1                   	// #1
   1b000:	cmn	x14, #0x4
   1b004:	b.eq	1b02c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x24c>  // b.none
   1b008:	add	w12, w12, w15
   1b00c:	and	w12, w12, w13
   1b010:	lsl	x14, x12, #4
   1b014:	ldr	x14, [x11, x14]
   1b018:	add	w15, w15, #0x1
   1b01c:	cmp	x14, x10
   1b020:	b.ne	1b000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x220>  // b.any
   1b024:	mov	w12, w12
   1b028:	b	1aeb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0xd4>
   1b02c:	mov	x23, xzr
   1b030:	cmp	w8, w9
   1b034:	b.cc	1aec4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0xe4>  // b.lo, b.ul, b.last
   1b038:	add	x1, x19, #0x10
   1b03c:	mov	w3, #0x8                   	// #8
   1b040:	mov	x0, x19
   1b044:	mov	x2, xzr
   1b048:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b04c:	ldr	w8, [x19, #8]
   1b050:	b	1aec4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0xe4>
   1b054:	mov	w15, #0x1                   	// #1
   1b058:	cmn	x14, #0x4
   1b05c:	b.eq	1b084 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x2a4>  // b.none
   1b060:	add	w12, w12, w15
   1b064:	and	w12, w12, w13
   1b068:	lsl	x14, x12, #4
   1b06c:	ldr	x14, [x11, x14]
   1b070:	add	w15, w15, #0x1
   1b074:	cmp	x14, x10
   1b078:	b.ne	1b058 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x278>  // b.any
   1b07c:	mov	w12, w12
   1b080:	b	1af38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x158>
   1b084:	mov	x22, xzr
   1b088:	cmp	w8, w9
   1b08c:	b.cc	1af48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x168>  // b.lo, b.ul, b.last
   1b090:	add	x1, x19, #0x10
   1b094:	mov	w3, #0x8                   	// #8
   1b098:	mov	x0, x19
   1b09c:	mov	x2, xzr
   1b0a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b0a4:	ldr	w8, [x19, #8]
   1b0a8:	b	1af48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDINamespaceEPKN4llvm11DINamespaceERNS1_15SmallVectorImplImEEj+0x168>
   1b0ac:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b0b0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b0b4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b0b8:	add	x0, x0, #0x0
   1b0bc:	add	x1, x1, #0x0
   1b0c0:	add	x3, x3, #0x0
   1b0c4:	mov	w2, #0x43                  	// #67
   1b0c8:	bl	0 <__assert_fail>
   1b0cc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b0d0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b0d4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b0d8:	add	x0, x0, #0x0
   1b0dc:	add	x1, x1, #0x0
   1b0e0:	add	x3, x3, #0x0
   1b0e4:	mov	w2, #0x252                 	// #594
   1b0e8:	bl	0 <__assert_fail>
   1b0ec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b0f0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b0f4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b0f8:	add	x0, x0, #0x0
   1b0fc:	add	x1, x1, #0x0
   1b100:	add	x3, x3, #0x0
   1b104:	mov	w2, #0x436                 	// #1078
   1b108:	bl	0 <__assert_fail>
   1b10c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b110:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b114:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b118:	add	x0, x0, #0x0
   1b11c:	add	x1, x1, #0x0
   1b120:	add	x3, x3, #0x0
   1b124:	mov	w2, #0x121                 	// #289
   1b128:	bl	0 <__assert_fail>

000000000001b12c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj>:
   1b12c:	stp	x29, x30, [sp, #-80]!
   1b130:	str	x25, [sp, #16]
   1b134:	stp	x24, x23, [sp, #32]
   1b138:	stp	x22, x21, [sp, #48]
   1b13c:	stp	x20, x19, [sp, #64]
   1b140:	mov	x29, sp
   1b144:	ldrb	w9, [x1, #1]
   1b148:	ldp	w8, w10, [x2, #8]
   1b14c:	mov	w20, w3
   1b150:	mov	x19, x2
   1b154:	and	w9, w9, #0x7f
   1b158:	cmp	w9, #0x1
   1b15c:	mov	x21, x1
   1b160:	cset	w23, eq  // eq = none
   1b164:	cmp	w8, w10
   1b168:	mov	x22, x0
   1b16c:	b.cs	1b2a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x178>  // b.hs, b.nlast
   1b170:	ldr	x9, [x19]
   1b174:	str	x23, [x9, w8, uxtw #3]
   1b178:	ldp	w9, w8, [x19, #8]
   1b17c:	cmp	w9, w8
   1b180:	b.cs	1b2e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x1b4>  // b.hs, b.nlast
   1b184:	add	w9, w9, #0x1
   1b188:	str	w9, [x19, #8]
   1b18c:	ldr	w10, [x21, #8]
   1b190:	neg	x11, x10
   1b194:	lsl	x11, x11, #3
   1b198:	cbz	x11, 1b274 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x148>
   1b19c:	sub	x24, x21, x10, lsl #3
   1b1a0:	add	x23, x19, #0x10
   1b1a4:	ldr	w12, [x22, #304]
   1b1a8:	cbz	w12, 1b24c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x120>
   1b1ac:	ldr	x10, [x24]
   1b1b0:	orr	x11, x10, #0x4
   1b1b4:	cmn	x11, #0x4
   1b1b8:	b.eq	1b2c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x194>  // b.none
   1b1bc:	ldr	x11, [x22, #288]
   1b1c0:	ubfx	x13, x10, #4, #28
   1b1c4:	eor	w14, w13, w10, lsr #9
   1b1c8:	sub	w13, w12, #0x1
   1b1cc:	and	w12, w14, w13
   1b1d0:	lsl	x14, x12, #4
   1b1d4:	ldr	x14, [x11, x14]
   1b1d8:	cmp	x14, x10
   1b1dc:	b.ne	1b21c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0xf0>  // b.any
   1b1e0:	add	x10, x11, x12, lsl #4
   1b1e4:	ldr	w25, [x10, #12]
   1b1e8:	cmp	w9, w8
   1b1ec:	b.cs	1b258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x12c>  // b.hs, b.nlast
   1b1f0:	ldr	x8, [x19]
   1b1f4:	str	x25, [x8, w9, uxtw #3]
   1b1f8:	ldp	w9, w8, [x19, #8]
   1b1fc:	cmp	w9, w8
   1b200:	b.cs	1b2e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x1b4>  // b.hs, b.nlast
   1b204:	add	x24, x24, #0x8
   1b208:	add	w9, w9, #0x1
   1b20c:	cmp	x24, x21
   1b210:	str	w9, [x19, #8]
   1b214:	b.ne	1b1a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x78>  // b.any
   1b218:	b	1b274 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x148>
   1b21c:	mov	w15, #0x1                   	// #1
   1b220:	cmn	x14, #0x4
   1b224:	b.eq	1b24c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x120>  // b.none
   1b228:	add	w12, w12, w15
   1b22c:	and	w12, w12, w13
   1b230:	lsl	x14, x12, #4
   1b234:	ldr	x14, [x11, x14]
   1b238:	add	w15, w15, #0x1
   1b23c:	cmp	x14, x10
   1b240:	b.ne	1b220 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0xf4>  // b.any
   1b244:	mov	w12, w12
   1b248:	b	1b1e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0xb4>
   1b24c:	mov	x25, xzr
   1b250:	cmp	w9, w8
   1b254:	b.cc	1b1f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0xc4>  // b.lo, b.ul, b.last
   1b258:	mov	w3, #0x8                   	// #8
   1b25c:	mov	x0, x19
   1b260:	mov	x1, x23
   1b264:	mov	x2, xzr
   1b268:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b26c:	ldr	w9, [x19, #8]
   1b270:	b	1b1f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0xc4>
   1b274:	ldr	x0, [x22]
   1b278:	mov	w1, #0x20                  	// #32
   1b27c:	mov	x2, x19
   1b280:	mov	w3, w20
   1b284:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b288:	str	wzr, [x19, #8]
   1b28c:	ldp	x20, x19, [sp, #64]
   1b290:	ldp	x22, x21, [sp, #48]
   1b294:	ldp	x24, x23, [sp, #32]
   1b298:	ldr	x25, [sp, #16]
   1b29c:	ldp	x29, x30, [sp], #80
   1b2a0:	ret
   1b2a4:	add	x1, x19, #0x10
   1b2a8:	mov	w3, #0x8                   	// #8
   1b2ac:	mov	x0, x19
   1b2b0:	mov	x2, xzr
   1b2b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b2b8:	ldr	w8, [x19, #8]
   1b2bc:	b	1b170 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter13writeDIModuleEPKN4llvm8DIModuleERNS1_15SmallVectorImplImEEj+0x44>
   1b2c0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b2c4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b2c8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b2cc:	add	x0, x0, #0x0
   1b2d0:	add	x1, x1, #0x0
   1b2d4:	add	x3, x3, #0x0
   1b2d8:	mov	w2, #0x252                 	// #594
   1b2dc:	bl	0 <__assert_fail>
   1b2e0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b2e4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b2e8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b2ec:	add	x0, x0, #0x0
   1b2f0:	add	x1, x1, #0x0
   1b2f4:	add	x3, x3, #0x0
   1b2f8:	mov	w2, #0x43                  	// #67
   1b2fc:	bl	0 <__assert_fail>

000000000001b300 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj>:
   1b300:	stp	x29, x30, [sp, #-64]!
   1b304:	str	x23, [sp, #16]
   1b308:	stp	x22, x21, [sp, #32]
   1b30c:	stp	x20, x19, [sp, #48]
   1b310:	mov	x29, sp
   1b314:	ldrb	w9, [x1, #1]
   1b318:	ldp	w8, w10, [x2, #8]
   1b31c:	mov	w20, w3
   1b320:	mov	x19, x2
   1b324:	and	w9, w9, #0x7f
   1b328:	cmp	w9, #0x1
   1b32c:	mov	x22, x1
   1b330:	cset	w23, eq  // eq = none
   1b334:	cmp	w8, w10
   1b338:	mov	x21, x0
   1b33c:	b.cs	1b534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x234>  // b.hs, b.nlast
   1b340:	ldr	x9, [x19]
   1b344:	str	x23, [x9, w8, uxtw #3]
   1b348:	ldp	w8, w9, [x19, #8]
   1b34c:	cmp	w8, w9
   1b350:	b.cs	1b674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x374>  // b.hs, b.nlast
   1b354:	add	w8, w8, #0x1
   1b358:	str	w8, [x19, #8]
   1b35c:	ldrh	w23, [x22, #2]
   1b360:	cmp	w8, w9
   1b364:	b.cs	1b550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x250>  // b.hs, b.nlast
   1b368:	ldr	x9, [x19]
   1b36c:	str	x23, [x9, w8, uxtw #3]
   1b370:	ldp	w8, w9, [x19, #8]
   1b374:	cmp	w8, w9
   1b378:	b.cs	1b674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x374>  // b.hs, b.nlast
   1b37c:	add	w8, w8, #0x1
   1b380:	str	w8, [x19, #8]
   1b384:	ldr	w10, [x22, #8]
   1b388:	cbz	w10, 1b6b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3b4>
   1b38c:	sub	x10, x22, x10, lsl #3
   1b390:	ldr	x10, [x10]
   1b394:	cbz	x10, 1b3a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0xa0>
   1b398:	ldrb	w11, [x10]
   1b39c:	cbnz	w11, 1b6d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3d4>
   1b3a0:	ldr	w12, [x21, #304]
   1b3a4:	cbz	w12, 1b59c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x29c>
   1b3a8:	orr	x11, x10, #0x4
   1b3ac:	cmn	x11, #0x4
   1b3b0:	b.eq	1b694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x394>  // b.none
   1b3b4:	ldr	x11, [x21, #288]
   1b3b8:	ubfx	x13, x10, #4, #28
   1b3bc:	eor	w14, w13, w10, lsr #9
   1b3c0:	sub	w13, w12, #0x1
   1b3c4:	and	w12, w14, w13
   1b3c8:	lsl	x14, x12, #4
   1b3cc:	ldr	x14, [x11, x14]
   1b3d0:	cmp	x14, x10
   1b3d4:	b.ne	1b56c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x26c>  // b.any
   1b3d8:	add	x10, x11, x12, lsl #4
   1b3dc:	ldr	w23, [x10, #12]
   1b3e0:	cmp	w8, w9
   1b3e4:	b.cs	1b5a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x2a8>  // b.hs, b.nlast
   1b3e8:	ldr	x9, [x19]
   1b3ec:	str	x23, [x9, w8, uxtw #3]
   1b3f0:	ldp	w8, w9, [x19, #8]
   1b3f4:	cmp	w8, w9
   1b3f8:	b.cs	1b674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x374>  // b.hs, b.nlast
   1b3fc:	add	w8, w8, #0x1
   1b400:	str	w8, [x19, #8]
   1b404:	ldr	w10, [x22, #8]
   1b408:	cmp	w10, #0x1
   1b40c:	b.ls	1b6b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3b4>  // b.plast
   1b410:	sub	x10, x22, x10, lsl #3
   1b414:	ldr	x10, [x10, #8]
   1b418:	cbz	x10, 1b42c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x12c>
   1b41c:	ldrb	w11, [x10]
   1b420:	sub	w11, w11, #0xb
   1b424:	cmp	w11, #0x4
   1b428:	b.cs	1b6f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3f4>  // b.hs, b.nlast
   1b42c:	ldr	w12, [x21, #304]
   1b430:	cbz	w12, 1b5f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x2f4>
   1b434:	orr	x11, x10, #0x4
   1b438:	cmn	x11, #0x4
   1b43c:	b.eq	1b694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x394>  // b.none
   1b440:	ldr	x11, [x21, #288]
   1b444:	ubfx	x13, x10, #4, #28
   1b448:	eor	w14, w13, w10, lsr #9
   1b44c:	sub	w13, w12, #0x1
   1b450:	and	w12, w14, w13
   1b454:	lsl	x14, x12, #4
   1b458:	ldr	x14, [x11, x14]
   1b45c:	cmp	x14, x10
   1b460:	b.ne	1b5c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x2c4>  // b.any
   1b464:	add	x10, x11, x12, lsl #4
   1b468:	ldr	w23, [x10, #12]
   1b46c:	cmp	w8, w9
   1b470:	b.cs	1b600 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x300>  // b.hs, b.nlast
   1b474:	ldr	x9, [x19]
   1b478:	str	x23, [x9, w8, uxtw #3]
   1b47c:	ldp	w8, w9, [x19, #8]
   1b480:	cmp	w8, w9
   1b484:	b.cs	1b674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x374>  // b.hs, b.nlast
   1b488:	add	w8, w8, #0x1
   1b48c:	str	w8, [x19, #8]
   1b490:	ldr	w10, [x22, #8]
   1b494:	cmp	w10, #0x2
   1b498:	b.ls	1b6b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x3b4>  // b.plast
   1b49c:	ldr	w12, [x21, #304]
   1b4a0:	cbz	w12, 1b64c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x34c>
   1b4a4:	sub	x10, x22, x10, lsl #3
   1b4a8:	ldr	x10, [x10, #16]
   1b4ac:	orr	x11, x10, #0x4
   1b4b0:	cmn	x11, #0x4
   1b4b4:	b.eq	1b694 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x394>  // b.none
   1b4b8:	ldr	x11, [x21, #288]
   1b4bc:	ubfx	x13, x10, #4, #28
   1b4c0:	eor	w14, w13, w10, lsr #9
   1b4c4:	sub	w13, w12, #0x1
   1b4c8:	and	w12, w14, w13
   1b4cc:	lsl	x14, x12, #4
   1b4d0:	ldr	x14, [x11, x14]
   1b4d4:	cmp	x14, x10
   1b4d8:	b.ne	1b61c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x31c>  // b.any
   1b4dc:	add	x10, x11, x12, lsl #4
   1b4e0:	ldr	w22, [x10, #12]
   1b4e4:	cmp	w8, w9
   1b4e8:	b.cs	1b658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x358>  // b.hs, b.nlast
   1b4ec:	ldr	x9, [x19]
   1b4f0:	str	x22, [x9, w8, uxtw #3]
   1b4f4:	ldp	w8, w9, [x19, #8]
   1b4f8:	cmp	w8, w9
   1b4fc:	b.cs	1b674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x374>  // b.hs, b.nlast
   1b500:	add	w8, w8, #0x1
   1b504:	str	w8, [x19, #8]
   1b508:	ldr	x0, [x21]
   1b50c:	mov	w1, #0x1a                  	// #26
   1b510:	mov	x2, x19
   1b514:	mov	w3, w20
   1b518:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b51c:	str	wzr, [x19, #8]
   1b520:	ldp	x20, x19, [sp, #48]
   1b524:	ldp	x22, x21, [sp, #32]
   1b528:	ldr	x23, [sp, #16]
   1b52c:	ldp	x29, x30, [sp], #64
   1b530:	ret
   1b534:	add	x1, x19, #0x10
   1b538:	mov	w3, #0x8                   	// #8
   1b53c:	mov	x0, x19
   1b540:	mov	x2, xzr
   1b544:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b548:	ldr	w8, [x19, #8]
   1b54c:	b	1b340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x40>
   1b550:	add	x1, x19, #0x10
   1b554:	mov	w3, #0x8                   	// #8
   1b558:	mov	x0, x19
   1b55c:	mov	x2, xzr
   1b560:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b564:	ldr	w8, [x19, #8]
   1b568:	b	1b368 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x68>
   1b56c:	mov	w15, #0x1                   	// #1
   1b570:	cmn	x14, #0x4
   1b574:	b.eq	1b59c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x29c>  // b.none
   1b578:	add	w12, w12, w15
   1b57c:	and	w12, w12, w13
   1b580:	lsl	x14, x12, #4
   1b584:	ldr	x14, [x11, x14]
   1b588:	add	w15, w15, #0x1
   1b58c:	cmp	x14, x10
   1b590:	b.ne	1b570 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x270>  // b.any
   1b594:	mov	w12, w12
   1b598:	b	1b3d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0xd8>
   1b59c:	mov	x23, xzr
   1b5a0:	cmp	w8, w9
   1b5a4:	b.cc	1b3e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0xe8>  // b.lo, b.ul, b.last
   1b5a8:	add	x1, x19, #0x10
   1b5ac:	mov	w3, #0x8                   	// #8
   1b5b0:	mov	x0, x19
   1b5b4:	mov	x2, xzr
   1b5b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b5bc:	ldr	w8, [x19, #8]
   1b5c0:	b	1b3e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0xe8>
   1b5c4:	mov	w15, #0x1                   	// #1
   1b5c8:	cmn	x14, #0x4
   1b5cc:	b.eq	1b5f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x2f4>  // b.none
   1b5d0:	add	w12, w12, w15
   1b5d4:	and	w12, w12, w13
   1b5d8:	lsl	x14, x12, #4
   1b5dc:	ldr	x14, [x11, x14]
   1b5e0:	add	w15, w15, #0x1
   1b5e4:	cmp	x14, x10
   1b5e8:	b.ne	1b5c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x2c8>  // b.any
   1b5ec:	mov	w12, w12
   1b5f0:	b	1b464 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x164>
   1b5f4:	mov	x23, xzr
   1b5f8:	cmp	w8, w9
   1b5fc:	b.cc	1b474 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x174>  // b.lo, b.ul, b.last
   1b600:	add	x1, x19, #0x10
   1b604:	mov	w3, #0x8                   	// #8
   1b608:	mov	x0, x19
   1b60c:	mov	x2, xzr
   1b610:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b614:	ldr	w8, [x19, #8]
   1b618:	b	1b474 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x174>
   1b61c:	mov	w15, #0x1                   	// #1
   1b620:	cmn	x14, #0x4
   1b624:	b.eq	1b64c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x34c>  // b.none
   1b628:	add	w12, w12, w15
   1b62c:	and	w12, w12, w13
   1b630:	lsl	x14, x12, #4
   1b634:	ldr	x14, [x11, x14]
   1b638:	add	w15, w15, #0x1
   1b63c:	cmp	x14, x10
   1b640:	b.ne	1b620 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x320>  // b.any
   1b644:	mov	w12, w12
   1b648:	b	1b4dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x1dc>
   1b64c:	mov	x22, xzr
   1b650:	cmp	w8, w9
   1b654:	b.cc	1b4ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x1ec>  // b.lo, b.ul, b.last
   1b658:	add	x1, x19, #0x10
   1b65c:	mov	w3, #0x8                   	// #8
   1b660:	mov	x0, x19
   1b664:	mov	x2, xzr
   1b668:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1b66c:	ldr	w8, [x19, #8]
   1b670:	b	1b4ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter29writeDITemplateValueParameterEPKN4llvm24DITemplateValueParameterERNS1_15SmallVectorImplImEEj+0x1ec>
   1b674:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b678:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b67c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b680:	add	x0, x0, #0x0
   1b684:	add	x1, x1, #0x0
   1b688:	add	x3, x3, #0x0
   1b68c:	mov	w2, #0x43                  	// #67
   1b690:	bl	0 <__assert_fail>
   1b694:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b698:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b69c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b6a0:	add	x0, x0, #0x0
   1b6a4:	add	x1, x1, #0x0
   1b6a8:	add	x3, x3, #0x0
   1b6ac:	mov	w2, #0x252                 	// #594
   1b6b0:	bl	0 <__assert_fail>
   1b6b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b6b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b6bc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b6c0:	add	x0, x0, #0x0
   1b6c4:	add	x1, x1, #0x0
   1b6c8:	add	x3, x3, #0x0
   1b6cc:	mov	w2, #0x436                 	// #1078
   1b6d0:	bl	0 <__assert_fail>
   1b6d4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b6d8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b6dc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b6e0:	add	x0, x0, #0x0
   1b6e4:	add	x1, x1, #0x0
   1b6e8:	add	x3, x3, #0x0
   1b6ec:	mov	w2, #0x121                 	// #289
   1b6f0:	bl	0 <__assert_fail>
   1b6f4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b6f8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b6fc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1b700:	add	x0, x0, #0x0
   1b704:	add	x1, x1, #0x0
   1b708:	add	x3, x3, #0x0
   1b70c:	mov	w2, #0x134                 	// #308
   1b710:	bl	0 <__assert_fail>

000000000001b714 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj>:
   1b714:	stp	x29, x30, [sp, #-64]!
   1b718:	str	x23, [sp, #16]
   1b71c:	stp	x22, x21, [sp, #32]
   1b720:	stp	x20, x19, [sp, #48]
   1b724:	mov	x29, sp
   1b728:	ldrb	w9, [x1, #1]
   1b72c:	ldp	w8, w10, [x2, #8]
   1b730:	mov	w20, w3
   1b734:	mov	x19, x2
   1b738:	and	w9, w9, #0x7f
   1b73c:	cmp	w9, #0x1
   1b740:	cset	w9, eq  // eq = none
   1b744:	mov	x22, x1
   1b748:	mov	x21, x0
   1b74c:	cmp	w8, w10
   1b750:	orr	x23, x9, #0x4
   1b754:	b.cs	1bc4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x538>  // b.hs, b.nlast
   1b758:	ldr	x9, [x19]
   1b75c:	str	x23, [x9, w8, uxtw #3]
   1b760:	ldp	w8, w9, [x19, #8]
   1b764:	cmp	w8, w9
   1b768:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1b76c:	add	w8, w8, #0x1
   1b770:	str	w8, [x19, #8]
   1b774:	ldr	w10, [x22, #8]
   1b778:	cbz	w10, 1bf80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x86c>
   1b77c:	sub	x10, x22, x10, lsl #3
   1b780:	ldr	x10, [x10]
   1b784:	cbz	x10, 1b7a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8c>
   1b788:	ldrb	w11, [x10]
   1b78c:	sub	w12, w11, #0xb
   1b790:	cmp	w12, #0xb
   1b794:	b.cs	1bbfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x4e8>  // b.hs, b.nlast
   1b798:	cmp	w12, #0xb
   1b79c:	b.cs	1bc24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x510>  // b.hs, b.nlast
   1b7a0:	ldr	w12, [x21, #304]
   1b7a4:	cbz	w12, 1bd08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x5f4>
   1b7a8:	orr	x11, x10, #0x4
   1b7ac:	cmn	x11, #0x4
   1b7b0:	b.eq	1bf60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x84c>  // b.none
   1b7b4:	ldr	x11, [x21, #288]
   1b7b8:	ubfx	x13, x10, #4, #28
   1b7bc:	eor	w14, w13, w10, lsr #9
   1b7c0:	sub	w13, w12, #0x1
   1b7c4:	and	w12, w14, w13
   1b7c8:	lsl	x14, x12, #4
   1b7cc:	ldr	x14, [x11, x14]
   1b7d0:	cmp	x14, x10
   1b7d4:	b.ne	1bcd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x5c4>  // b.any
   1b7d8:	add	x10, x11, x12, lsl #4
   1b7dc:	ldr	w23, [x10, #12]
   1b7e0:	cmp	w8, w9
   1b7e4:	b.cs	1bd14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x600>  // b.hs, b.nlast
   1b7e8:	ldr	x9, [x19]
   1b7ec:	str	x23, [x9, w8, uxtw #3]
   1b7f0:	ldp	w8, w9, [x19, #8]
   1b7f4:	cmp	w8, w9
   1b7f8:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1b7fc:	add	w8, w8, #0x1
   1b800:	str	w8, [x19, #8]
   1b804:	ldr	w10, [x22, #8]
   1b808:	cmp	w10, #0x1
   1b80c:	b.ls	1bf80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x86c>  // b.plast
   1b810:	sub	x10, x22, x10, lsl #3
   1b814:	ldr	x10, [x10, #8]
   1b818:	cbz	x10, 1b824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x110>
   1b81c:	ldrb	w11, [x10]
   1b820:	cbnz	w11, 1bfa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x88c>
   1b824:	ldr	w12, [x21, #304]
   1b828:	cbz	w12, 1bd60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x64c>
   1b82c:	orr	x11, x10, #0x4
   1b830:	cmn	x11, #0x4
   1b834:	b.eq	1bf60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x84c>  // b.none
   1b838:	ldr	x11, [x21, #288]
   1b83c:	ubfx	x13, x10, #4, #28
   1b840:	eor	w14, w13, w10, lsr #9
   1b844:	sub	w13, w12, #0x1
   1b848:	and	w12, w14, w13
   1b84c:	lsl	x14, x12, #4
   1b850:	ldr	x14, [x11, x14]
   1b854:	cmp	x14, x10
   1b858:	b.ne	1bd30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x61c>  // b.any
   1b85c:	add	x10, x11, x12, lsl #4
   1b860:	ldr	w23, [x10, #12]
   1b864:	cmp	w8, w9
   1b868:	b.cs	1bd6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x658>  // b.hs, b.nlast
   1b86c:	ldr	x9, [x19]
   1b870:	str	x23, [x9, w8, uxtw #3]
   1b874:	ldp	w8, w9, [x19, #8]
   1b878:	cmp	w8, w9
   1b87c:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1b880:	add	w8, w8, #0x1
   1b884:	str	w8, [x19, #8]
   1b888:	ldr	w10, [x22, #8]
   1b88c:	cmp	w10, #0x5
   1b890:	b.ls	1bf80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x86c>  // b.plast
   1b894:	sub	x10, x22, x10, lsl #3
   1b898:	ldr	x10, [x10, #40]
   1b89c:	cbz	x10, 1b8a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x194>
   1b8a0:	ldrb	w11, [x10]
   1b8a4:	cbnz	w11, 1bfa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x88c>
   1b8a8:	ldr	w12, [x21, #304]
   1b8ac:	cbz	w12, 1bdb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6a4>
   1b8b0:	orr	x11, x10, #0x4
   1b8b4:	cmn	x11, #0x4
   1b8b8:	b.eq	1bf60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x84c>  // b.none
   1b8bc:	ldr	x11, [x21, #288]
   1b8c0:	ubfx	x13, x10, #4, #28
   1b8c4:	eor	w14, w13, w10, lsr #9
   1b8c8:	sub	w13, w12, #0x1
   1b8cc:	and	w12, w14, w13
   1b8d0:	lsl	x14, x12, #4
   1b8d4:	ldr	x14, [x11, x14]
   1b8d8:	cmp	x14, x10
   1b8dc:	b.ne	1bd88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x674>  // b.any
   1b8e0:	add	x10, x11, x12, lsl #4
   1b8e4:	ldr	w23, [x10, #12]
   1b8e8:	cmp	w8, w9
   1b8ec:	b.cs	1bdc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6b0>  // b.hs, b.nlast
   1b8f0:	ldr	x9, [x19]
   1b8f4:	str	x23, [x9, w8, uxtw #3]
   1b8f8:	ldp	w8, w9, [x19, #8]
   1b8fc:	cmp	w8, w9
   1b900:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1b904:	add	w8, w8, #0x1
   1b908:	str	w8, [x19, #8]
   1b90c:	ldr	w10, [x22, #8]
   1b910:	cmp	w10, #0x2
   1b914:	b.ls	1bf80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x86c>  // b.plast
   1b918:	sub	x10, x22, x10, lsl #3
   1b91c:	ldr	x10, [x10, #16]
   1b920:	cbz	x10, 1b930 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x21c>
   1b924:	ldrb	w11, [x10]
   1b928:	cmp	w11, #0xf
   1b92c:	b.ne	1bfc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8ac>  // b.any
   1b930:	ldr	w12, [x21, #304]
   1b934:	cbz	w12, 1be10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6fc>
   1b938:	orr	x11, x10, #0x4
   1b93c:	cmn	x11, #0x4
   1b940:	b.eq	1bf60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x84c>  // b.none
   1b944:	ldr	x11, [x21, #288]
   1b948:	ubfx	x13, x10, #4, #28
   1b94c:	eor	w14, w13, w10, lsr #9
   1b950:	sub	w13, w12, #0x1
   1b954:	and	w12, w14, w13
   1b958:	lsl	x14, x12, #4
   1b95c:	ldr	x14, [x11, x14]
   1b960:	cmp	x14, x10
   1b964:	b.ne	1bde0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6cc>  // b.any
   1b968:	add	x10, x11, x12, lsl #4
   1b96c:	ldr	w23, [x10, #12]
   1b970:	cmp	w8, w9
   1b974:	b.cs	1be1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x708>  // b.hs, b.nlast
   1b978:	ldr	x9, [x19]
   1b97c:	str	x23, [x9, w8, uxtw #3]
   1b980:	ldp	w8, w9, [x19, #8]
   1b984:	cmp	w8, w9
   1b988:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1b98c:	add	w8, w8, #0x1
   1b990:	str	w8, [x19, #8]
   1b994:	ldr	w23, [x22, #24]
   1b998:	cmp	w8, w9
   1b99c:	b.cs	1bc68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x554>  // b.hs, b.nlast
   1b9a0:	ldr	x9, [x19]
   1b9a4:	str	x23, [x9, w8, uxtw #3]
   1b9a8:	ldp	w8, w9, [x19, #8]
   1b9ac:	cmp	w8, w9
   1b9b0:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1b9b4:	add	w8, w8, #0x1
   1b9b8:	str	w8, [x19, #8]
   1b9bc:	ldr	w10, [x22, #8]
   1b9c0:	cmp	w10, #0x3
   1b9c4:	b.ls	1bf80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x86c>  // b.plast
   1b9c8:	sub	x10, x22, x10, lsl #3
   1b9cc:	ldr	x10, [x10, #24]
   1b9d0:	cbz	x10, 1b9e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x2d0>
   1b9d4:	ldrb	w11, [x10]
   1b9d8:	sub	w11, w11, #0xb
   1b9dc:	cmp	w11, #0x4
   1b9e0:	b.cs	1bfe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8cc>  // b.hs, b.nlast
   1b9e4:	ldr	w12, [x21, #304]
   1b9e8:	cbz	w12, 1be68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x754>
   1b9ec:	orr	x11, x10, #0x4
   1b9f0:	cmn	x11, #0x4
   1b9f4:	b.eq	1bf60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x84c>  // b.none
   1b9f8:	ldr	x11, [x21, #288]
   1b9fc:	ubfx	x13, x10, #4, #28
   1ba00:	eor	w14, w13, w10, lsr #9
   1ba04:	sub	w13, w12, #0x1
   1ba08:	and	w12, w14, w13
   1ba0c:	lsl	x14, x12, #4
   1ba10:	ldr	x14, [x11, x14]
   1ba14:	cmp	x14, x10
   1ba18:	b.ne	1be38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x724>  // b.any
   1ba1c:	add	x10, x11, x12, lsl #4
   1ba20:	ldr	w23, [x10, #12]
   1ba24:	cmp	w8, w9
   1ba28:	b.cs	1be74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x760>  // b.hs, b.nlast
   1ba2c:	ldr	x9, [x19]
   1ba30:	str	x23, [x9, w8, uxtw #3]
   1ba34:	ldp	w8, w9, [x19, #8]
   1ba38:	cmp	w8, w9
   1ba3c:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1ba40:	add	w8, w8, #0x1
   1ba44:	str	w8, [x19, #8]
   1ba48:	ldrb	w23, [x22, #32]
   1ba4c:	cmp	w8, w9
   1ba50:	b.cs	1bc84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x570>  // b.hs, b.nlast
   1ba54:	ldr	x9, [x19]
   1ba58:	str	x23, [x9, w8, uxtw #3]
   1ba5c:	ldp	w8, w9, [x19, #8]
   1ba60:	cmp	w8, w9
   1ba64:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1ba68:	add	w8, w8, #0x1
   1ba6c:	str	w8, [x19, #8]
   1ba70:	ldrb	w23, [x22, #33]
   1ba74:	cmp	w8, w9
   1ba78:	b.cs	1bca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x58c>  // b.hs, b.nlast
   1ba7c:	ldr	x9, [x19]
   1ba80:	str	x23, [x9, w8, uxtw #3]
   1ba84:	ldp	w8, w9, [x19, #8]
   1ba88:	cmp	w8, w9
   1ba8c:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1ba90:	add	w8, w8, #0x1
   1ba94:	str	w8, [x19, #8]
   1ba98:	ldr	w10, [x22, #8]
   1ba9c:	cmp	w10, #0x6
   1baa0:	b.ls	1bf80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x86c>  // b.plast
   1baa4:	sub	x10, x22, x10, lsl #3
   1baa8:	ldr	x10, [x10, #48]
   1baac:	cbz	x10, 1babc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x3a8>
   1bab0:	ldrb	w11, [x10]
   1bab4:	cmp	w11, #0xc
   1bab8:	b.ne	1c000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8ec>  // b.any
   1babc:	ldr	w12, [x21, #304]
   1bac0:	cbz	w12, 1bec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x7ac>
   1bac4:	orr	x11, x10, #0x4
   1bac8:	cmn	x11, #0x4
   1bacc:	b.eq	1bf60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x84c>  // b.none
   1bad0:	ldr	x11, [x21, #288]
   1bad4:	ubfx	x13, x10, #4, #28
   1bad8:	eor	w14, w13, w10, lsr #9
   1badc:	sub	w13, w12, #0x1
   1bae0:	and	w12, w14, w13
   1bae4:	lsl	x14, x12, #4
   1bae8:	ldr	x14, [x11, x14]
   1baec:	cmp	x14, x10
   1baf0:	b.ne	1be90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x77c>  // b.any
   1baf4:	add	x10, x11, x12, lsl #4
   1baf8:	ldr	w23, [x10, #12]
   1bafc:	cmp	w8, w9
   1bb00:	b.cs	1becc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x7b8>  // b.hs, b.nlast
   1bb04:	ldr	x9, [x19]
   1bb08:	str	x23, [x9, w8, uxtw #3]
   1bb0c:	ldp	w8, w9, [x19, #8]
   1bb10:	cmp	w8, w9
   1bb14:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1bb18:	add	w8, w8, #0x1
   1bb1c:	str	w8, [x19, #8]
   1bb20:	ldr	w10, [x22, #8]
   1bb24:	cmp	w10, #0x7
   1bb28:	b.ls	1bf80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x86c>  // b.plast
   1bb2c:	sub	x10, x22, x10, lsl #3
   1bb30:	ldr	x10, [x10, #56]
   1bb34:	cbz	x10, 1bb44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x430>
   1bb38:	ldrb	w11, [x10]
   1bb3c:	cmp	w11, #0x4
   1bb40:	b.ne	1c020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x90c>  // b.any
   1bb44:	ldr	w12, [x21, #304]
   1bb48:	cbz	w12, 1bf18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x804>
   1bb4c:	orr	x11, x10, #0x4
   1bb50:	cmn	x11, #0x4
   1bb54:	b.eq	1bf60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x84c>  // b.none
   1bb58:	ldr	x11, [x21, #288]
   1bb5c:	ubfx	x13, x10, #4, #28
   1bb60:	eor	w14, w13, w10, lsr #9
   1bb64:	sub	w13, w12, #0x1
   1bb68:	and	w12, w14, w13
   1bb6c:	lsl	x14, x12, #4
   1bb70:	ldr	x14, [x11, x14]
   1bb74:	cmp	x14, x10
   1bb78:	b.ne	1bee8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x7d4>  // b.any
   1bb7c:	add	x10, x11, x12, lsl #4
   1bb80:	ldr	w23, [x10, #12]
   1bb84:	cmp	w8, w9
   1bb88:	b.cs	1bf24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x810>  // b.hs, b.nlast
   1bb8c:	ldr	x9, [x19]
   1bb90:	str	x23, [x9, w8, uxtw #3]
   1bb94:	ldp	w8, w9, [x19, #8]
   1bb98:	cmp	w8, w9
   1bb9c:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1bba0:	add	w8, w8, #0x1
   1bba4:	str	w8, [x19, #8]
   1bba8:	ldr	w22, [x22, #28]
   1bbac:	cmp	w8, w9
   1bbb0:	b.cs	1bcbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x5a8>  // b.hs, b.nlast
   1bbb4:	ldr	x9, [x19]
   1bbb8:	str	x22, [x9, w8, uxtw #3]
   1bbbc:	ldp	w8, w9, [x19, #8]
   1bbc0:	cmp	w8, w9
   1bbc4:	b.cs	1bf40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x82c>  // b.hs, b.nlast
   1bbc8:	add	w8, w8, #0x1
   1bbcc:	str	w8, [x19, #8]
   1bbd0:	ldr	x0, [x21]
   1bbd4:	mov	w1, #0x1b                  	// #27
   1bbd8:	mov	x2, x19
   1bbdc:	mov	w3, w20
   1bbe0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bbe4:	str	wzr, [x19, #8]
   1bbe8:	ldp	x20, x19, [sp, #48]
   1bbec:	ldp	x22, x21, [sp, #32]
   1bbf0:	ldr	x23, [sp, #16]
   1bbf4:	ldp	x29, x30, [sp], #64
   1bbf8:	ret
   1bbfc:	cmp	w11, #0x1f
   1bc00:	b.eq	1b798 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x84>  // b.none
   1bc04:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bc08:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bc0c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bc10:	add	x0, x0, #0x0
   1bc14:	add	x1, x1, #0x0
   1bc18:	add	x3, x3, #0x0
   1bc1c:	mov	w2, #0x134                 	// #308
   1bc20:	bl	0 <__assert_fail>
   1bc24:	cmp	w11, #0x1f
   1bc28:	b.eq	1b7a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x8c>  // b.none
   1bc2c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bc30:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bc34:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bc38:	add	x0, x0, #0x0
   1bc3c:	add	x1, x1, #0x0
   1bc40:	add	x3, x3, #0x0
   1bc44:	mov	w2, #0x108                 	// #264
   1bc48:	bl	0 <__assert_fail>
   1bc4c:	add	x1, x19, #0x10
   1bc50:	mov	w3, #0x8                   	// #8
   1bc54:	mov	x0, x19
   1bc58:	mov	x2, xzr
   1bc5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bc60:	ldr	w8, [x19, #8]
   1bc64:	b	1b758 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x44>
   1bc68:	add	x1, x19, #0x10
   1bc6c:	mov	w3, #0x8                   	// #8
   1bc70:	mov	x0, x19
   1bc74:	mov	x2, xzr
   1bc78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bc7c:	ldr	w8, [x19, #8]
   1bc80:	b	1b9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x28c>
   1bc84:	add	x1, x19, #0x10
   1bc88:	mov	w3, #0x8                   	// #8
   1bc8c:	mov	x0, x19
   1bc90:	mov	x2, xzr
   1bc94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bc98:	ldr	w8, [x19, #8]
   1bc9c:	b	1ba54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x340>
   1bca0:	add	x1, x19, #0x10
   1bca4:	mov	w3, #0x8                   	// #8
   1bca8:	mov	x0, x19
   1bcac:	mov	x2, xzr
   1bcb0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bcb4:	ldr	w8, [x19, #8]
   1bcb8:	b	1ba7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x368>
   1bcbc:	add	x1, x19, #0x10
   1bcc0:	mov	w3, #0x8                   	// #8
   1bcc4:	mov	x0, x19
   1bcc8:	mov	x2, xzr
   1bccc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bcd0:	ldr	w8, [x19, #8]
   1bcd4:	b	1bbb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x4a0>
   1bcd8:	mov	w15, #0x1                   	// #1
   1bcdc:	cmn	x14, #0x4
   1bce0:	b.eq	1bd08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x5f4>  // b.none
   1bce4:	add	w12, w12, w15
   1bce8:	and	w12, w12, w13
   1bcec:	lsl	x14, x12, #4
   1bcf0:	ldr	x14, [x11, x14]
   1bcf4:	add	w15, w15, #0x1
   1bcf8:	cmp	x14, x10
   1bcfc:	b.ne	1bcdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x5c8>  // b.any
   1bd00:	mov	w12, w12
   1bd04:	b	1b7d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0xc4>
   1bd08:	mov	x23, xzr
   1bd0c:	cmp	w8, w9
   1bd10:	b.cc	1b7e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0xd4>  // b.lo, b.ul, b.last
   1bd14:	add	x1, x19, #0x10
   1bd18:	mov	w3, #0x8                   	// #8
   1bd1c:	mov	x0, x19
   1bd20:	mov	x2, xzr
   1bd24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bd28:	ldr	w8, [x19, #8]
   1bd2c:	b	1b7e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0xd4>
   1bd30:	mov	w15, #0x1                   	// #1
   1bd34:	cmn	x14, #0x4
   1bd38:	b.eq	1bd60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x64c>  // b.none
   1bd3c:	add	w12, w12, w15
   1bd40:	and	w12, w12, w13
   1bd44:	lsl	x14, x12, #4
   1bd48:	ldr	x14, [x11, x14]
   1bd4c:	add	w15, w15, #0x1
   1bd50:	cmp	x14, x10
   1bd54:	b.ne	1bd34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x620>  // b.any
   1bd58:	mov	w12, w12
   1bd5c:	b	1b85c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x148>
   1bd60:	mov	x23, xzr
   1bd64:	cmp	w8, w9
   1bd68:	b.cc	1b86c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x158>  // b.lo, b.ul, b.last
   1bd6c:	add	x1, x19, #0x10
   1bd70:	mov	w3, #0x8                   	// #8
   1bd74:	mov	x0, x19
   1bd78:	mov	x2, xzr
   1bd7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bd80:	ldr	w8, [x19, #8]
   1bd84:	b	1b86c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x158>
   1bd88:	mov	w15, #0x1                   	// #1
   1bd8c:	cmn	x14, #0x4
   1bd90:	b.eq	1bdb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6a4>  // b.none
   1bd94:	add	w12, w12, w15
   1bd98:	and	w12, w12, w13
   1bd9c:	lsl	x14, x12, #4
   1bda0:	ldr	x14, [x11, x14]
   1bda4:	add	w15, w15, #0x1
   1bda8:	cmp	x14, x10
   1bdac:	b.ne	1bd8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x678>  // b.any
   1bdb0:	mov	w12, w12
   1bdb4:	b	1b8e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x1cc>
   1bdb8:	mov	x23, xzr
   1bdbc:	cmp	w8, w9
   1bdc0:	b.cc	1b8f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x1dc>  // b.lo, b.ul, b.last
   1bdc4:	add	x1, x19, #0x10
   1bdc8:	mov	w3, #0x8                   	// #8
   1bdcc:	mov	x0, x19
   1bdd0:	mov	x2, xzr
   1bdd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bdd8:	ldr	w8, [x19, #8]
   1bddc:	b	1b8f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x1dc>
   1bde0:	mov	w15, #0x1                   	// #1
   1bde4:	cmn	x14, #0x4
   1bde8:	b.eq	1be10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6fc>  // b.none
   1bdec:	add	w12, w12, w15
   1bdf0:	and	w12, w12, w13
   1bdf4:	lsl	x14, x12, #4
   1bdf8:	ldr	x14, [x11, x14]
   1bdfc:	add	w15, w15, #0x1
   1be00:	cmp	x14, x10
   1be04:	b.ne	1bde4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x6d0>  // b.any
   1be08:	mov	w12, w12
   1be0c:	b	1b968 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x254>
   1be10:	mov	x23, xzr
   1be14:	cmp	w8, w9
   1be18:	b.cc	1b978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x264>  // b.lo, b.ul, b.last
   1be1c:	add	x1, x19, #0x10
   1be20:	mov	w3, #0x8                   	// #8
   1be24:	mov	x0, x19
   1be28:	mov	x2, xzr
   1be2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1be30:	ldr	w8, [x19, #8]
   1be34:	b	1b978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x264>
   1be38:	mov	w15, #0x1                   	// #1
   1be3c:	cmn	x14, #0x4
   1be40:	b.eq	1be68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x754>  // b.none
   1be44:	add	w12, w12, w15
   1be48:	and	w12, w12, w13
   1be4c:	lsl	x14, x12, #4
   1be50:	ldr	x14, [x11, x14]
   1be54:	add	w15, w15, #0x1
   1be58:	cmp	x14, x10
   1be5c:	b.ne	1be3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x728>  // b.any
   1be60:	mov	w12, w12
   1be64:	b	1ba1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x308>
   1be68:	mov	x23, xzr
   1be6c:	cmp	w8, w9
   1be70:	b.cc	1ba2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x318>  // b.lo, b.ul, b.last
   1be74:	add	x1, x19, #0x10
   1be78:	mov	w3, #0x8                   	// #8
   1be7c:	mov	x0, x19
   1be80:	mov	x2, xzr
   1be84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1be88:	ldr	w8, [x19, #8]
   1be8c:	b	1ba2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x318>
   1be90:	mov	w15, #0x1                   	// #1
   1be94:	cmn	x14, #0x4
   1be98:	b.eq	1bec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x7ac>  // b.none
   1be9c:	add	w12, w12, w15
   1bea0:	and	w12, w12, w13
   1bea4:	lsl	x14, x12, #4
   1bea8:	ldr	x14, [x11, x14]
   1beac:	add	w15, w15, #0x1
   1beb0:	cmp	x14, x10
   1beb4:	b.ne	1be94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x780>  // b.any
   1beb8:	mov	w12, w12
   1bebc:	b	1baf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x3e0>
   1bec0:	mov	x23, xzr
   1bec4:	cmp	w8, w9
   1bec8:	b.cc	1bb04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x3f0>  // b.lo, b.ul, b.last
   1becc:	add	x1, x19, #0x10
   1bed0:	mov	w3, #0x8                   	// #8
   1bed4:	mov	x0, x19
   1bed8:	mov	x2, xzr
   1bedc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bee0:	ldr	w8, [x19, #8]
   1bee4:	b	1bb04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x3f0>
   1bee8:	mov	w15, #0x1                   	// #1
   1beec:	cmn	x14, #0x4
   1bef0:	b.eq	1bf18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x804>  // b.none
   1bef4:	add	w12, w12, w15
   1bef8:	and	w12, w12, w13
   1befc:	lsl	x14, x12, #4
   1bf00:	ldr	x14, [x11, x14]
   1bf04:	add	w15, w15, #0x1
   1bf08:	cmp	x14, x10
   1bf0c:	b.ne	1beec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x7d8>  // b.any
   1bf10:	mov	w12, w12
   1bf14:	b	1bb7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x468>
   1bf18:	mov	x23, xzr
   1bf1c:	cmp	w8, w9
   1bf20:	b.cc	1bb8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x478>  // b.lo, b.ul, b.last
   1bf24:	add	x1, x19, #0x10
   1bf28:	mov	w3, #0x8                   	// #8
   1bf2c:	mov	x0, x19
   1bf30:	mov	x2, xzr
   1bf34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1bf38:	ldr	w8, [x19, #8]
   1bf3c:	b	1bb8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIGlobalVariableEPKN4llvm16DIGlobalVariableERNS1_15SmallVectorImplImEEj+0x478>
   1bf40:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf44:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf48:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf4c:	add	x0, x0, #0x0
   1bf50:	add	x1, x1, #0x0
   1bf54:	add	x3, x3, #0x0
   1bf58:	mov	w2, #0x43                  	// #67
   1bf5c:	bl	0 <__assert_fail>
   1bf60:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf64:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf68:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf6c:	add	x0, x0, #0x0
   1bf70:	add	x1, x1, #0x0
   1bf74:	add	x3, x3, #0x0
   1bf78:	mov	w2, #0x252                 	// #594
   1bf7c:	bl	0 <__assert_fail>
   1bf80:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf84:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf88:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bf8c:	add	x0, x0, #0x0
   1bf90:	add	x1, x1, #0x0
   1bf94:	add	x3, x3, #0x0
   1bf98:	mov	w2, #0x436                 	// #1078
   1bf9c:	bl	0 <__assert_fail>
   1bfa0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bfa4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bfa8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bfac:	add	x0, x0, #0x0
   1bfb0:	add	x1, x1, #0x0
   1bfb4:	add	x3, x3, #0x0
   1bfb8:	mov	w2, #0x121                 	// #289
   1bfbc:	bl	0 <__assert_fail>
   1bfc0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bfc4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bfc8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bfcc:	add	x0, x0, #0x0
   1bfd0:	add	x1, x1, #0x0
   1bfd4:	add	x3, x3, #0x0
   1bfd8:	mov	w2, #0x134                 	// #308
   1bfdc:	bl	0 <__assert_fail>
   1bfe0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bfe4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bfe8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1bfec:	add	x0, x0, #0x0
   1bff0:	add	x1, x1, #0x0
   1bff4:	add	x3, x3, #0x0
   1bff8:	mov	w2, #0x134                 	// #308
   1bffc:	bl	0 <__assert_fail>
   1c000:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c004:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c008:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c00c:	add	x0, x0, #0x0
   1c010:	add	x1, x1, #0x0
   1c014:	add	x3, x3, #0x0
   1c018:	mov	w2, #0x134                 	// #308
   1c01c:	bl	0 <__assert_fail>
   1c020:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c024:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c028:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c02c:	add	x0, x0, #0x0
   1c030:	add	x1, x1, #0x0
   1c034:	add	x3, x3, #0x0
   1c038:	mov	w2, #0x121                 	// #289
   1c03c:	bl	0 <__assert_fail>

000000000001c040 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj>:
   1c040:	stp	x29, x30, [sp, #-64]!
   1c044:	str	x23, [sp, #16]
   1c048:	stp	x22, x21, [sp, #32]
   1c04c:	stp	x20, x19, [sp, #48]
   1c050:	mov	x29, sp
   1c054:	ldrb	w9, [x1, #1]
   1c058:	ldp	w8, w10, [x2, #8]
   1c05c:	mov	w20, w3
   1c060:	mov	x19, x2
   1c064:	and	w9, w9, #0x7f
   1c068:	cmp	w9, #0x1
   1c06c:	cset	w9, eq  // eq = none
   1c070:	mov	x22, x1
   1c074:	mov	x21, x0
   1c078:	cmp	w8, w10
   1c07c:	orr	x23, x9, #0x2
   1c080:	b.cs	1c0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0xac>  // b.hs, b.nlast
   1c084:	ldr	x9, [x19]
   1c088:	str	x23, [x9, w8, uxtw #3]
   1c08c:	ldp	w8, w9, [x19, #8]
   1c090:	cmp	w8, w9
   1c094:	b.cs	1c55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x51c>  // b.hs, b.nlast
   1c098:	add	w8, w8, #0x1
   1c09c:	mov	x0, x22
   1c0a0:	str	w8, [x19, #8]
   1c0a4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c0a8:	ldr	w9, [x21, #304]
   1c0ac:	cbz	w9, 1c138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0xf8>
   1c0b0:	orr	x8, x0, #0x4
   1c0b4:	cmn	x8, #0x4
   1c0b8:	b.eq	1c57c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x53c>  // b.none
   1c0bc:	ldr	x8, [x21, #288]
   1c0c0:	ubfx	x10, x0, #4, #28
   1c0c4:	eor	w11, w10, w0, lsr #9
   1c0c8:	sub	w10, w9, #0x1
   1c0cc:	and	w9, w11, w10
   1c0d0:	lsl	x11, x9, #4
   1c0d4:	ldr	x11, [x8, x11]
   1c0d8:	cmp	x11, x0
   1c0dc:	b.ne	1c108 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0xc8>  // b.any
   1c0e0:	add	x8, x8, x9, lsl #4
   1c0e4:	ldr	w23, [x8, #12]
   1c0e8:	b	1c13c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0xfc>
   1c0ec:	add	x1, x19, #0x10
   1c0f0:	mov	w3, #0x8                   	// #8
   1c0f4:	mov	x0, x19
   1c0f8:	mov	x2, xzr
   1c0fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c100:	ldr	w8, [x19, #8]
   1c104:	b	1c084 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x44>
   1c108:	mov	w12, #0x1                   	// #1
   1c10c:	cmn	x11, #0x4
   1c110:	b.eq	1c138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0xf8>  // b.none
   1c114:	add	w9, w9, w12
   1c118:	and	w9, w9, w10
   1c11c:	lsl	x11, x9, #4
   1c120:	ldr	x11, [x8, x11]
   1c124:	add	w12, w12, #0x1
   1c128:	cmp	x11, x0
   1c12c:	b.ne	1c10c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0xcc>  // b.any
   1c130:	mov	w9, w9
   1c134:	b	1c0e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0xa0>
   1c138:	mov	x23, xzr
   1c13c:	ldp	w8, w9, [x19, #8]
   1c140:	cmp	w8, w9
   1c144:	b.cs	1c3c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x388>  // b.hs, b.nlast
   1c148:	ldr	x9, [x19]
   1c14c:	str	x23, [x9, w8, uxtw #3]
   1c150:	ldp	w8, w9, [x19, #8]
   1c154:	cmp	w8, w9
   1c158:	b.cs	1c55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x51c>  // b.hs, b.nlast
   1c15c:	add	w8, w8, #0x1
   1c160:	str	w8, [x19, #8]
   1c164:	ldr	w10, [x22, #8]
   1c168:	cmp	w10, #0x1
   1c16c:	b.ls	1c59c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x55c>  // b.plast
   1c170:	sub	x10, x22, x10, lsl #3
   1c174:	ldr	x10, [x10, #8]
   1c178:	cbz	x10, 1c184 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x144>
   1c17c:	ldrb	w11, [x10]
   1c180:	cbnz	w11, 1c5bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x57c>
   1c184:	ldr	w12, [x21, #304]
   1c188:	cbz	w12, 1c484 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x444>
   1c18c:	orr	x11, x10, #0x4
   1c190:	cmn	x11, #0x4
   1c194:	b.eq	1c57c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x53c>  // b.none
   1c198:	ldr	x11, [x21, #288]
   1c19c:	ubfx	x13, x10, #4, #28
   1c1a0:	eor	w14, w13, w10, lsr #9
   1c1a4:	sub	w13, w12, #0x1
   1c1a8:	and	w12, w14, w13
   1c1ac:	lsl	x14, x12, #4
   1c1b0:	ldr	x14, [x11, x14]
   1c1b4:	cmp	x14, x10
   1c1b8:	b.ne	1c454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x414>  // b.any
   1c1bc:	add	x10, x11, x12, lsl #4
   1c1c0:	ldr	w23, [x10, #12]
   1c1c4:	cmp	w8, w9
   1c1c8:	b.cs	1c490 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x450>  // b.hs, b.nlast
   1c1cc:	ldr	x9, [x19]
   1c1d0:	str	x23, [x9, w8, uxtw #3]
   1c1d4:	ldp	w8, w9, [x19, #8]
   1c1d8:	cmp	w8, w9
   1c1dc:	b.cs	1c55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x51c>  // b.hs, b.nlast
   1c1e0:	add	w8, w8, #0x1
   1c1e4:	str	w8, [x19, #8]
   1c1e8:	ldr	w10, [x22, #8]
   1c1ec:	cmp	w10, #0x2
   1c1f0:	b.ls	1c59c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x55c>  // b.plast
   1c1f4:	sub	x10, x22, x10, lsl #3
   1c1f8:	ldr	x10, [x10, #16]
   1c1fc:	cbz	x10, 1c20c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x1cc>
   1c200:	ldrb	w11, [x10]
   1c204:	cmp	w11, #0xf
   1c208:	b.ne	1c5dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x59c>  // b.any
   1c20c:	ldr	w12, [x21, #304]
   1c210:	cbz	w12, 1c4dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x49c>
   1c214:	orr	x11, x10, #0x4
   1c218:	cmn	x11, #0x4
   1c21c:	b.eq	1c57c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x53c>  // b.none
   1c220:	ldr	x11, [x21, #288]
   1c224:	ubfx	x13, x10, #4, #28
   1c228:	eor	w14, w13, w10, lsr #9
   1c22c:	sub	w13, w12, #0x1
   1c230:	and	w12, w14, w13
   1c234:	lsl	x14, x12, #4
   1c238:	ldr	x14, [x11, x14]
   1c23c:	cmp	x14, x10
   1c240:	b.ne	1c4ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x46c>  // b.any
   1c244:	add	x10, x11, x12, lsl #4
   1c248:	ldr	w23, [x10, #12]
   1c24c:	cmp	w8, w9
   1c250:	b.cs	1c4e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x4a8>  // b.hs, b.nlast
   1c254:	ldr	x9, [x19]
   1c258:	str	x23, [x9, w8, uxtw #3]
   1c25c:	ldp	w8, w9, [x19, #8]
   1c260:	cmp	w8, w9
   1c264:	b.cs	1c55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x51c>  // b.hs, b.nlast
   1c268:	add	w8, w8, #0x1
   1c26c:	str	w8, [x19, #8]
   1c270:	ldr	w23, [x22, #24]
   1c274:	cmp	w8, w9
   1c278:	b.cs	1c3e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x3a4>  // b.hs, b.nlast
   1c27c:	ldr	x9, [x19]
   1c280:	str	x23, [x9, w8, uxtw #3]
   1c284:	ldp	w8, w9, [x19, #8]
   1c288:	cmp	w8, w9
   1c28c:	b.cs	1c55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x51c>  // b.hs, b.nlast
   1c290:	add	w8, w8, #0x1
   1c294:	str	w8, [x19, #8]
   1c298:	ldr	w10, [x22, #8]
   1c29c:	cmp	w10, #0x3
   1c2a0:	b.ls	1c59c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x55c>  // b.plast
   1c2a4:	sub	x10, x22, x10, lsl #3
   1c2a8:	ldr	x10, [x10, #24]
   1c2ac:	cbz	x10, 1c2c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x280>
   1c2b0:	ldrb	w11, [x10]
   1c2b4:	sub	w11, w11, #0xb
   1c2b8:	cmp	w11, #0x4
   1c2bc:	b.cs	1c5fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x5bc>  // b.hs, b.nlast
   1c2c0:	ldr	w12, [x21, #304]
   1c2c4:	cbz	w12, 1c534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x4f4>
   1c2c8:	orr	x11, x10, #0x4
   1c2cc:	cmn	x11, #0x4
   1c2d0:	b.eq	1c57c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x53c>  // b.none
   1c2d4:	ldr	x11, [x21, #288]
   1c2d8:	ubfx	x13, x10, #4, #28
   1c2dc:	eor	w14, w13, w10, lsr #9
   1c2e0:	sub	w13, w12, #0x1
   1c2e4:	and	w12, w14, w13
   1c2e8:	lsl	x14, x12, #4
   1c2ec:	ldr	x14, [x11, x14]
   1c2f0:	cmp	x14, x10
   1c2f4:	b.ne	1c504 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x4c4>  // b.any
   1c2f8:	add	x10, x11, x12, lsl #4
   1c2fc:	ldr	w23, [x10, #12]
   1c300:	cmp	w8, w9
   1c304:	b.cs	1c540 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x500>  // b.hs, b.nlast
   1c308:	ldr	x9, [x19]
   1c30c:	str	x23, [x9, w8, uxtw #3]
   1c310:	ldp	w8, w9, [x19, #8]
   1c314:	cmp	w8, w9
   1c318:	b.cs	1c55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x51c>  // b.hs, b.nlast
   1c31c:	add	w8, w8, #0x1
   1c320:	str	w8, [x19, #8]
   1c324:	ldrh	w23, [x22, #32]
   1c328:	cmp	w8, w9
   1c32c:	b.cs	1c400 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x3c0>  // b.hs, b.nlast
   1c330:	ldr	x9, [x19]
   1c334:	str	x23, [x9, w8, uxtw #3]
   1c338:	ldp	w8, w9, [x19, #8]
   1c33c:	cmp	w8, w9
   1c340:	b.cs	1c55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x51c>  // b.hs, b.nlast
   1c344:	add	w8, w8, #0x1
   1c348:	str	w8, [x19, #8]
   1c34c:	ldr	w23, [x22, #36]
   1c350:	cmp	w8, w9
   1c354:	b.cs	1c41c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x3dc>  // b.hs, b.nlast
   1c358:	ldr	x9, [x19]
   1c35c:	str	x23, [x9, w8, uxtw #3]
   1c360:	ldp	w8, w9, [x19, #8]
   1c364:	cmp	w8, w9
   1c368:	b.cs	1c55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x51c>  // b.hs, b.nlast
   1c36c:	add	w8, w8, #0x1
   1c370:	str	w8, [x19, #8]
   1c374:	ldr	w22, [x22, #28]
   1c378:	cmp	w8, w9
   1c37c:	b.cs	1c438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x3f8>  // b.hs, b.nlast
   1c380:	ldr	x9, [x19]
   1c384:	str	x22, [x9, w8, uxtw #3]
   1c388:	ldp	w8, w9, [x19, #8]
   1c38c:	cmp	w8, w9
   1c390:	b.cs	1c55c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x51c>  // b.hs, b.nlast
   1c394:	add	w8, w8, #0x1
   1c398:	str	w8, [x19, #8]
   1c39c:	ldr	x0, [x21]
   1c3a0:	mov	w1, #0x1c                  	// #28
   1c3a4:	mov	x2, x19
   1c3a8:	mov	w3, w20
   1c3ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c3b0:	str	wzr, [x19, #8]
   1c3b4:	ldp	x20, x19, [sp, #48]
   1c3b8:	ldp	x22, x21, [sp, #32]
   1c3bc:	ldr	x23, [sp, #16]
   1c3c0:	ldp	x29, x30, [sp], #64
   1c3c4:	ret
   1c3c8:	add	x1, x19, #0x10
   1c3cc:	mov	w3, #0x8                   	// #8
   1c3d0:	mov	x0, x19
   1c3d4:	mov	x2, xzr
   1c3d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c3dc:	ldr	w8, [x19, #8]
   1c3e0:	b	1c148 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x108>
   1c3e4:	add	x1, x19, #0x10
   1c3e8:	mov	w3, #0x8                   	// #8
   1c3ec:	mov	x0, x19
   1c3f0:	mov	x2, xzr
   1c3f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c3f8:	ldr	w8, [x19, #8]
   1c3fc:	b	1c27c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x23c>
   1c400:	add	x1, x19, #0x10
   1c404:	mov	w3, #0x8                   	// #8
   1c408:	mov	x0, x19
   1c40c:	mov	x2, xzr
   1c410:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c414:	ldr	w8, [x19, #8]
   1c418:	b	1c330 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x2f0>
   1c41c:	add	x1, x19, #0x10
   1c420:	mov	w3, #0x8                   	// #8
   1c424:	mov	x0, x19
   1c428:	mov	x2, xzr
   1c42c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c430:	ldr	w8, [x19, #8]
   1c434:	b	1c358 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x318>
   1c438:	add	x1, x19, #0x10
   1c43c:	mov	w3, #0x8                   	// #8
   1c440:	mov	x0, x19
   1c444:	mov	x2, xzr
   1c448:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c44c:	ldr	w8, [x19, #8]
   1c450:	b	1c380 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x340>
   1c454:	mov	w15, #0x1                   	// #1
   1c458:	cmn	x14, #0x4
   1c45c:	b.eq	1c484 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x444>  // b.none
   1c460:	add	w12, w12, w15
   1c464:	and	w12, w12, w13
   1c468:	lsl	x14, x12, #4
   1c46c:	ldr	x14, [x11, x14]
   1c470:	add	w15, w15, #0x1
   1c474:	cmp	x14, x10
   1c478:	b.ne	1c458 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x418>  // b.any
   1c47c:	mov	w12, w12
   1c480:	b	1c1bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x17c>
   1c484:	mov	x23, xzr
   1c488:	cmp	w8, w9
   1c48c:	b.cc	1c1cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x18c>  // b.lo, b.ul, b.last
   1c490:	add	x1, x19, #0x10
   1c494:	mov	w3, #0x8                   	// #8
   1c498:	mov	x0, x19
   1c49c:	mov	x2, xzr
   1c4a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c4a4:	ldr	w8, [x19, #8]
   1c4a8:	b	1c1cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x18c>
   1c4ac:	mov	w15, #0x1                   	// #1
   1c4b0:	cmn	x14, #0x4
   1c4b4:	b.eq	1c4dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x49c>  // b.none
   1c4b8:	add	w12, w12, w15
   1c4bc:	and	w12, w12, w13
   1c4c0:	lsl	x14, x12, #4
   1c4c4:	ldr	x14, [x11, x14]
   1c4c8:	add	w15, w15, #0x1
   1c4cc:	cmp	x14, x10
   1c4d0:	b.ne	1c4b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x470>  // b.any
   1c4d4:	mov	w12, w12
   1c4d8:	b	1c244 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x204>
   1c4dc:	mov	x23, xzr
   1c4e0:	cmp	w8, w9
   1c4e4:	b.cc	1c254 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x214>  // b.lo, b.ul, b.last
   1c4e8:	add	x1, x19, #0x10
   1c4ec:	mov	w3, #0x8                   	// #8
   1c4f0:	mov	x0, x19
   1c4f4:	mov	x2, xzr
   1c4f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c4fc:	ldr	w8, [x19, #8]
   1c500:	b	1c254 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x214>
   1c504:	mov	w15, #0x1                   	// #1
   1c508:	cmn	x14, #0x4
   1c50c:	b.eq	1c534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x4f4>  // b.none
   1c510:	add	w12, w12, w15
   1c514:	and	w12, w12, w13
   1c518:	lsl	x14, x12, #4
   1c51c:	ldr	x14, [x11, x14]
   1c520:	add	w15, w15, #0x1
   1c524:	cmp	x14, x10
   1c528:	b.ne	1c508 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x4c8>  // b.any
   1c52c:	mov	w12, w12
   1c530:	b	1c2f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x2b8>
   1c534:	mov	x23, xzr
   1c538:	cmp	w8, w9
   1c53c:	b.cc	1c308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x2c8>  // b.lo, b.ul, b.last
   1c540:	add	x1, x19, #0x10
   1c544:	mov	w3, #0x8                   	// #8
   1c548:	mov	x0, x19
   1c54c:	mov	x2, xzr
   1c550:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c554:	ldr	w8, [x19, #8]
   1c558:	b	1c308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter20writeDILocalVariableEPKN4llvm15DILocalVariableERNS1_15SmallVectorImplImEEj+0x2c8>
   1c55c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c560:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c564:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c568:	add	x0, x0, #0x0
   1c56c:	add	x1, x1, #0x0
   1c570:	add	x3, x3, #0x0
   1c574:	mov	w2, #0x43                  	// #67
   1c578:	bl	0 <__assert_fail>
   1c57c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c580:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c584:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c588:	add	x0, x0, #0x0
   1c58c:	add	x1, x1, #0x0
   1c590:	add	x3, x3, #0x0
   1c594:	mov	w2, #0x252                 	// #594
   1c598:	bl	0 <__assert_fail>
   1c59c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c5a0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c5a4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c5a8:	add	x0, x0, #0x0
   1c5ac:	add	x1, x1, #0x0
   1c5b0:	add	x3, x3, #0x0
   1c5b4:	mov	w2, #0x436                 	// #1078
   1c5b8:	bl	0 <__assert_fail>
   1c5bc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c5c0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c5c4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c5c8:	add	x0, x0, #0x0
   1c5cc:	add	x1, x1, #0x0
   1c5d0:	add	x3, x3, #0x0
   1c5d4:	mov	w2, #0x121                 	// #289
   1c5d8:	bl	0 <__assert_fail>
   1c5dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c5e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c5e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c5e8:	add	x0, x0, #0x0
   1c5ec:	add	x1, x1, #0x0
   1c5f0:	add	x3, x3, #0x0
   1c5f4:	mov	w2, #0x134                 	// #308
   1c5f8:	bl	0 <__assert_fail>
   1c5fc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c600:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c604:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c608:	add	x0, x0, #0x0
   1c60c:	add	x1, x1, #0x0
   1c610:	add	x3, x3, #0x0
   1c614:	mov	w2, #0x134                 	// #308
   1c618:	bl	0 <__assert_fail>

000000000001c61c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj>:
   1c61c:	stp	x29, x30, [sp, #-64]!
   1c620:	str	x23, [sp, #16]
   1c624:	stp	x22, x21, [sp, #32]
   1c628:	stp	x20, x19, [sp, #48]
   1c62c:	mov	x29, sp
   1c630:	ldrb	w9, [x1, #1]
   1c634:	ldp	w8, w10, [x2, #8]
   1c638:	mov	w20, w3
   1c63c:	mov	x19, x2
   1c640:	and	w9, w9, #0x7f
   1c644:	cmp	w9, #0x1
   1c648:	mov	x22, x1
   1c64c:	cset	w23, eq  // eq = none
   1c650:	cmp	w8, w10
   1c654:	mov	x21, x0
   1c658:	b.cs	1c860 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x244>  // b.hs, b.nlast
   1c65c:	ldr	x9, [x19]
   1c660:	str	x23, [x9, w8, uxtw #3]
   1c664:	ldp	w8, w9, [x19, #8]
   1c668:	cmp	w8, w9
   1c66c:	b.cs	1c9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x384>  // b.hs, b.nlast
   1c670:	add	w8, w8, #0x1
   1c674:	str	w8, [x19, #8]
   1c678:	ldr	w10, [x22, #8]
   1c67c:	cbz	w10, 1c9e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3c4>
   1c680:	sub	x10, x22, x10, lsl #3
   1c684:	ldr	x10, [x10]
   1c688:	cbz	x10, 1c69c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x80>
   1c68c:	ldrb	w11, [x10]
   1c690:	sub	w11, w11, #0x11
   1c694:	cmp	w11, #0x3
   1c698:	b.cs	1ca00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3e4>  // b.hs, b.nlast
   1c69c:	ldr	w12, [x21, #304]
   1c6a0:	cbz	w12, 1c8c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x2ac>
   1c6a4:	orr	x11, x10, #0x4
   1c6a8:	cmn	x11, #0x4
   1c6ac:	b.eq	1c9c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3a4>  // b.none
   1c6b0:	ldr	x11, [x21, #288]
   1c6b4:	ubfx	x13, x10, #4, #28
   1c6b8:	eor	w14, w13, w10, lsr #9
   1c6bc:	sub	w13, w12, #0x1
   1c6c0:	and	w12, w14, w13
   1c6c4:	lsl	x14, x12, #4
   1c6c8:	ldr	x14, [x11, x14]
   1c6cc:	cmp	x14, x10
   1c6d0:	b.ne	1c898 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x27c>  // b.any
   1c6d4:	add	x10, x11, x12, lsl #4
   1c6d8:	ldr	w23, [x10, #12]
   1c6dc:	cmp	w8, w9
   1c6e0:	b.cs	1c8d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x2b8>  // b.hs, b.nlast
   1c6e4:	ldr	x9, [x19]
   1c6e8:	str	x23, [x9, w8, uxtw #3]
   1c6ec:	ldp	w8, w9, [x19, #8]
   1c6f0:	cmp	w8, w9
   1c6f4:	b.cs	1c9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x384>  // b.hs, b.nlast
   1c6f8:	add	w8, w8, #0x1
   1c6fc:	str	w8, [x19, #8]
   1c700:	ldr	w10, [x22, #8]
   1c704:	cmp	w10, #0x1
   1c708:	b.ls	1c9e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3c4>  // b.plast
   1c70c:	sub	x10, x22, x10, lsl #3
   1c710:	ldr	x10, [x10, #8]
   1c714:	cbz	x10, 1c720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x104>
   1c718:	ldrb	w11, [x10]
   1c71c:	cbnz	w11, 1ca20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x404>
   1c720:	ldr	w12, [x21, #304]
   1c724:	cbz	w12, 1c920 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x304>
   1c728:	orr	x11, x10, #0x4
   1c72c:	cmn	x11, #0x4
   1c730:	b.eq	1c9c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3a4>  // b.none
   1c734:	ldr	x11, [x21, #288]
   1c738:	ubfx	x13, x10, #4, #28
   1c73c:	eor	w14, w13, w10, lsr #9
   1c740:	sub	w13, w12, #0x1
   1c744:	and	w12, w14, w13
   1c748:	lsl	x14, x12, #4
   1c74c:	ldr	x14, [x11, x14]
   1c750:	cmp	x14, x10
   1c754:	b.ne	1c8f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x2d4>  // b.any
   1c758:	add	x10, x11, x12, lsl #4
   1c75c:	ldr	w23, [x10, #12]
   1c760:	cmp	w8, w9
   1c764:	b.cs	1c92c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x310>  // b.hs, b.nlast
   1c768:	ldr	x9, [x19]
   1c76c:	str	x23, [x9, w8, uxtw #3]
   1c770:	ldp	w8, w9, [x19, #8]
   1c774:	cmp	w8, w9
   1c778:	b.cs	1c9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x384>  // b.hs, b.nlast
   1c77c:	add	w8, w8, #0x1
   1c780:	str	w8, [x19, #8]
   1c784:	ldr	w10, [x22, #8]
   1c788:	cmp	w10, #0x2
   1c78c:	b.ls	1c9e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3c4>  // b.plast
   1c790:	sub	x10, x22, x10, lsl #3
   1c794:	ldr	x10, [x10, #16]
   1c798:	cbz	x10, 1c7a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x18c>
   1c79c:	ldrb	w11, [x10]
   1c7a0:	cmp	w11, #0xf
   1c7a4:	b.ne	1ca40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x424>  // b.any
   1c7a8:	ldr	w12, [x21, #304]
   1c7ac:	cbz	w12, 1c978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x35c>
   1c7b0:	orr	x11, x10, #0x4
   1c7b4:	cmn	x11, #0x4
   1c7b8:	b.eq	1c9c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x3a4>  // b.none
   1c7bc:	ldr	x11, [x21, #288]
   1c7c0:	ubfx	x13, x10, #4, #28
   1c7c4:	eor	w14, w13, w10, lsr #9
   1c7c8:	sub	w13, w12, #0x1
   1c7cc:	and	w12, w14, w13
   1c7d0:	lsl	x14, x12, #4
   1c7d4:	ldr	x14, [x11, x14]
   1c7d8:	cmp	x14, x10
   1c7dc:	b.ne	1c948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x32c>  // b.any
   1c7e0:	add	x10, x11, x12, lsl #4
   1c7e4:	ldr	w23, [x10, #12]
   1c7e8:	cmp	w8, w9
   1c7ec:	b.cs	1c984 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x368>  // b.hs, b.nlast
   1c7f0:	ldr	x9, [x19]
   1c7f4:	str	x23, [x9, w8, uxtw #3]
   1c7f8:	ldp	w8, w9, [x19, #8]
   1c7fc:	cmp	w8, w9
   1c800:	b.cs	1c9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x384>  // b.hs, b.nlast
   1c804:	add	w8, w8, #0x1
   1c808:	str	w8, [x19, #8]
   1c80c:	ldr	w22, [x22, #24]
   1c810:	cmp	w8, w9
   1c814:	b.cs	1c87c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x260>  // b.hs, b.nlast
   1c818:	ldr	x9, [x19]
   1c81c:	str	x22, [x9, w8, uxtw #3]
   1c820:	ldp	w8, w9, [x19, #8]
   1c824:	cmp	w8, w9
   1c828:	b.cs	1c9a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x384>  // b.hs, b.nlast
   1c82c:	add	w8, w8, #0x1
   1c830:	str	w8, [x19, #8]
   1c834:	ldr	x0, [x21]
   1c838:	mov	w1, #0x28                  	// #40
   1c83c:	mov	x2, x19
   1c840:	mov	w3, w20
   1c844:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c848:	str	wzr, [x19, #8]
   1c84c:	ldp	x20, x19, [sp, #48]
   1c850:	ldp	x22, x21, [sp, #32]
   1c854:	ldr	x23, [sp, #16]
   1c858:	ldp	x29, x30, [sp], #64
   1c85c:	ret
   1c860:	add	x1, x19, #0x10
   1c864:	mov	w3, #0x8                   	// #8
   1c868:	mov	x0, x19
   1c86c:	mov	x2, xzr
   1c870:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c874:	ldr	w8, [x19, #8]
   1c878:	b	1c65c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x40>
   1c87c:	add	x1, x19, #0x10
   1c880:	mov	w3, #0x8                   	// #8
   1c884:	mov	x0, x19
   1c888:	mov	x2, xzr
   1c88c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c890:	ldr	w8, [x19, #8]
   1c894:	b	1c818 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x1fc>
   1c898:	mov	w15, #0x1                   	// #1
   1c89c:	cmn	x14, #0x4
   1c8a0:	b.eq	1c8c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x2ac>  // b.none
   1c8a4:	add	w12, w12, w15
   1c8a8:	and	w12, w12, w13
   1c8ac:	lsl	x14, x12, #4
   1c8b0:	ldr	x14, [x11, x14]
   1c8b4:	add	w15, w15, #0x1
   1c8b8:	cmp	x14, x10
   1c8bc:	b.ne	1c89c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x280>  // b.any
   1c8c0:	mov	w12, w12
   1c8c4:	b	1c6d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0xb8>
   1c8c8:	mov	x23, xzr
   1c8cc:	cmp	w8, w9
   1c8d0:	b.cc	1c6e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0xc8>  // b.lo, b.ul, b.last
   1c8d4:	add	x1, x19, #0x10
   1c8d8:	mov	w3, #0x8                   	// #8
   1c8dc:	mov	x0, x19
   1c8e0:	mov	x2, xzr
   1c8e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c8e8:	ldr	w8, [x19, #8]
   1c8ec:	b	1c6e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0xc8>
   1c8f0:	mov	w15, #0x1                   	// #1
   1c8f4:	cmn	x14, #0x4
   1c8f8:	b.eq	1c920 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x304>  // b.none
   1c8fc:	add	w12, w12, w15
   1c900:	and	w12, w12, w13
   1c904:	lsl	x14, x12, #4
   1c908:	ldr	x14, [x11, x14]
   1c90c:	add	w15, w15, #0x1
   1c910:	cmp	x14, x10
   1c914:	b.ne	1c8f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x2d8>  // b.any
   1c918:	mov	w12, w12
   1c91c:	b	1c758 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x13c>
   1c920:	mov	x23, xzr
   1c924:	cmp	w8, w9
   1c928:	b.cc	1c768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x14c>  // b.lo, b.ul, b.last
   1c92c:	add	x1, x19, #0x10
   1c930:	mov	w3, #0x8                   	// #8
   1c934:	mov	x0, x19
   1c938:	mov	x2, xzr
   1c93c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c940:	ldr	w8, [x19, #8]
   1c944:	b	1c768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x14c>
   1c948:	mov	w15, #0x1                   	// #1
   1c94c:	cmn	x14, #0x4
   1c950:	b.eq	1c978 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x35c>  // b.none
   1c954:	add	w12, w12, w15
   1c958:	and	w12, w12, w13
   1c95c:	lsl	x14, x12, #4
   1c960:	ldr	x14, [x11, x14]
   1c964:	add	w15, w15, #0x1
   1c968:	cmp	x14, x10
   1c96c:	b.ne	1c94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x330>  // b.any
   1c970:	mov	w12, w12
   1c974:	b	1c7e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x1c4>
   1c978:	mov	x23, xzr
   1c97c:	cmp	w8, w9
   1c980:	b.cc	1c7f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x1d4>  // b.lo, b.ul, b.last
   1c984:	add	x1, x19, #0x10
   1c988:	mov	w3, #0x8                   	// #8
   1c98c:	mov	x0, x19
   1c990:	mov	x2, xzr
   1c994:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c998:	ldr	w8, [x19, #8]
   1c99c:	b	1c7f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDILabelEPKN4llvm7DILabelERNS1_15SmallVectorImplImEEj+0x1d4>
   1c9a0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c9a4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c9a8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c9ac:	add	x0, x0, #0x0
   1c9b0:	add	x1, x1, #0x0
   1c9b4:	add	x3, x3, #0x0
   1c9b8:	mov	w2, #0x43                  	// #67
   1c9bc:	bl	0 <__assert_fail>
   1c9c0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c9c4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c9c8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c9cc:	add	x0, x0, #0x0
   1c9d0:	add	x1, x1, #0x0
   1c9d4:	add	x3, x3, #0x0
   1c9d8:	mov	w2, #0x252                 	// #594
   1c9dc:	bl	0 <__assert_fail>
   1c9e0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c9e4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c9e8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1c9ec:	add	x0, x0, #0x0
   1c9f0:	add	x1, x1, #0x0
   1c9f4:	add	x3, x3, #0x0
   1c9f8:	mov	w2, #0x436                 	// #1078
   1c9fc:	bl	0 <__assert_fail>
   1ca00:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ca04:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ca08:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ca0c:	add	x0, x0, #0x0
   1ca10:	add	x1, x1, #0x0
   1ca14:	add	x3, x3, #0x0
   1ca18:	mov	w2, #0x134                 	// #308
   1ca1c:	bl	0 <__assert_fail>
   1ca20:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ca24:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ca28:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ca2c:	add	x0, x0, #0x0
   1ca30:	add	x1, x1, #0x0
   1ca34:	add	x3, x3, #0x0
   1ca38:	mov	w2, #0x121                 	// #289
   1ca3c:	bl	0 <__assert_fail>
   1ca40:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ca44:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ca48:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ca4c:	add	x0, x0, #0x0
   1ca50:	add	x1, x1, #0x0
   1ca54:	add	x3, x3, #0x0
   1ca58:	mov	w2, #0x134                 	// #308
   1ca5c:	bl	0 <__assert_fail>

000000000001ca60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj>:
   1ca60:	stp	x29, x30, [sp, #-64]!
   1ca64:	str	x23, [sp, #16]
   1ca68:	stp	x22, x21, [sp, #32]
   1ca6c:	stp	x20, x19, [sp, #48]
   1ca70:	mov	x29, sp
   1ca74:	ldrb	w9, [x1, #1]
   1ca78:	ldp	w8, w10, [x2, #8]
   1ca7c:	mov	w20, w3
   1ca80:	mov	x19, x2
   1ca84:	and	w9, w9, #0x7f
   1ca88:	cmp	w9, #0x1
   1ca8c:	mov	x22, x1
   1ca90:	cset	w23, eq  // eq = none
   1ca94:	cmp	w8, w10
   1ca98:	mov	x21, x0
   1ca9c:	b.cs	1cdd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x374>  // b.hs, b.nlast
   1caa0:	ldr	x9, [x19]
   1caa4:	str	x23, [x9, w8, uxtw #3]
   1caa8:	ldp	w8, w9, [x19, #8]
   1caac:	cmp	w8, w9
   1cab0:	b.cs	1cfe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x580>  // b.hs, b.nlast
   1cab4:	add	w8, w8, #0x1
   1cab8:	str	w8, [x19, #8]
   1cabc:	ldr	w10, [x22, #8]
   1cac0:	cbz	w10, 1d020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5c0>
   1cac4:	sub	x10, x22, x10, lsl #3
   1cac8:	ldr	x10, [x10]
   1cacc:	cbz	x10, 1cad8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x78>
   1cad0:	ldrb	w11, [x10]
   1cad4:	cbnz	w11, 1d040 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5e0>
   1cad8:	ldr	w12, [x21, #304]
   1cadc:	cbz	w12, 1ce58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x3f8>
   1cae0:	orr	x11, x10, #0x4
   1cae4:	cmn	x11, #0x4
   1cae8:	b.eq	1d000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5a0>  // b.none
   1caec:	ldr	x11, [x21, #288]
   1caf0:	ubfx	x13, x10, #4, #28
   1caf4:	eor	w14, w13, w10, lsr #9
   1caf8:	sub	w13, w12, #0x1
   1cafc:	and	w12, w14, w13
   1cb00:	lsl	x14, x12, #4
   1cb04:	ldr	x14, [x11, x14]
   1cb08:	cmp	x14, x10
   1cb0c:	b.ne	1ce28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x3c8>  // b.any
   1cb10:	add	x10, x11, x12, lsl #4
   1cb14:	ldr	w23, [x10, #12]
   1cb18:	cmp	w8, w9
   1cb1c:	b.cs	1ce64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x404>  // b.hs, b.nlast
   1cb20:	ldr	x9, [x19]
   1cb24:	str	x23, [x9, w8, uxtw #3]
   1cb28:	ldp	w8, w9, [x19, #8]
   1cb2c:	cmp	w8, w9
   1cb30:	b.cs	1cfe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x580>  // b.hs, b.nlast
   1cb34:	add	w8, w8, #0x1
   1cb38:	str	w8, [x19, #8]
   1cb3c:	ldr	w10, [x22, #8]
   1cb40:	cmp	w10, #0x1
   1cb44:	b.ls	1d020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5c0>  // b.plast
   1cb48:	sub	x10, x22, x10, lsl #3
   1cb4c:	ldr	x10, [x10, #8]
   1cb50:	cbz	x10, 1cb60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x100>
   1cb54:	ldrb	w11, [x10]
   1cb58:	cmp	w11, #0xf
   1cb5c:	b.ne	1d060 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x600>  // b.any
   1cb60:	ldr	w12, [x21, #304]
   1cb64:	cbz	w12, 1ceb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x450>
   1cb68:	orr	x11, x10, #0x4
   1cb6c:	cmn	x11, #0x4
   1cb70:	b.eq	1d000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5a0>  // b.none
   1cb74:	ldr	x11, [x21, #288]
   1cb78:	ubfx	x13, x10, #4, #28
   1cb7c:	eor	w14, w13, w10, lsr #9
   1cb80:	sub	w13, w12, #0x1
   1cb84:	and	w12, w14, w13
   1cb88:	lsl	x14, x12, #4
   1cb8c:	ldr	x14, [x11, x14]
   1cb90:	cmp	x14, x10
   1cb94:	b.ne	1ce80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x420>  // b.any
   1cb98:	add	x10, x11, x12, lsl #4
   1cb9c:	ldr	w23, [x10, #12]
   1cba0:	cmp	w8, w9
   1cba4:	b.cs	1cebc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x45c>  // b.hs, b.nlast
   1cba8:	ldr	x9, [x19]
   1cbac:	str	x23, [x9, w8, uxtw #3]
   1cbb0:	ldp	w8, w9, [x19, #8]
   1cbb4:	cmp	w8, w9
   1cbb8:	b.cs	1cfe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x580>  // b.hs, b.nlast
   1cbbc:	add	w8, w8, #0x1
   1cbc0:	str	w8, [x19, #8]
   1cbc4:	ldr	w23, [x22, #24]
   1cbc8:	cmp	w8, w9
   1cbcc:	b.cs	1cdf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x390>  // b.hs, b.nlast
   1cbd0:	ldr	x9, [x19]
   1cbd4:	str	x23, [x9, w8, uxtw #3]
   1cbd8:	ldp	w8, w9, [x19, #8]
   1cbdc:	cmp	w8, w9
   1cbe0:	b.cs	1cfe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x580>  // b.hs, b.nlast
   1cbe4:	add	w8, w8, #0x1
   1cbe8:	str	w8, [x19, #8]
   1cbec:	ldr	w10, [x22, #8]
   1cbf0:	cmp	w10, #0x3
   1cbf4:	b.ls	1d020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5c0>  // b.plast
   1cbf8:	sub	x10, x22, x10, lsl #3
   1cbfc:	ldr	x10, [x10, #24]
   1cc00:	cbz	x10, 1cc0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x1ac>
   1cc04:	ldrb	w11, [x10]
   1cc08:	cbnz	w11, 1d040 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5e0>
   1cc0c:	ldr	w12, [x21, #304]
   1cc10:	cbz	w12, 1cf08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x4a8>
   1cc14:	orr	x11, x10, #0x4
   1cc18:	cmn	x11, #0x4
   1cc1c:	b.eq	1d000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5a0>  // b.none
   1cc20:	ldr	x11, [x21, #288]
   1cc24:	ubfx	x13, x10, #4, #28
   1cc28:	eor	w14, w13, w10, lsr #9
   1cc2c:	sub	w13, w12, #0x1
   1cc30:	and	w12, w14, w13
   1cc34:	lsl	x14, x12, #4
   1cc38:	ldr	x14, [x11, x14]
   1cc3c:	cmp	x14, x10
   1cc40:	b.ne	1ced8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x478>  // b.any
   1cc44:	add	x10, x11, x12, lsl #4
   1cc48:	ldr	w23, [x10, #12]
   1cc4c:	cmp	w8, w9
   1cc50:	b.cs	1cf14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x4b4>  // b.hs, b.nlast
   1cc54:	ldr	x9, [x19]
   1cc58:	str	x23, [x9, w8, uxtw #3]
   1cc5c:	ldp	w8, w9, [x19, #8]
   1cc60:	cmp	w8, w9
   1cc64:	b.cs	1cfe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x580>  // b.hs, b.nlast
   1cc68:	add	w8, w8, #0x1
   1cc6c:	str	w8, [x19, #8]
   1cc70:	ldr	w10, [x22, #8]
   1cc74:	cmp	w10, #0x2
   1cc78:	b.ls	1d020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5c0>  // b.plast
   1cc7c:	sub	x10, x22, x10, lsl #3
   1cc80:	ldr	x10, [x10, #16]
   1cc84:	cbz	x10, 1cc90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x230>
   1cc88:	ldrb	w11, [x10]
   1cc8c:	cbnz	w11, 1d040 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5e0>
   1cc90:	ldr	w12, [x21, #304]
   1cc94:	cbz	w12, 1cf60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x500>
   1cc98:	orr	x11, x10, #0x4
   1cc9c:	cmn	x11, #0x4
   1cca0:	b.eq	1d000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5a0>  // b.none
   1cca4:	ldr	x11, [x21, #288]
   1cca8:	ubfx	x13, x10, #4, #28
   1ccac:	eor	w14, w13, w10, lsr #9
   1ccb0:	sub	w13, w12, #0x1
   1ccb4:	and	w12, w14, w13
   1ccb8:	lsl	x14, x12, #4
   1ccbc:	ldr	x14, [x11, x14]
   1ccc0:	cmp	x14, x10
   1ccc4:	b.ne	1cf30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x4d0>  // b.any
   1ccc8:	add	x10, x11, x12, lsl #4
   1cccc:	ldr	w23, [x10, #12]
   1ccd0:	cmp	w8, w9
   1ccd4:	b.cs	1cf6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x50c>  // b.hs, b.nlast
   1ccd8:	ldr	x9, [x19]
   1ccdc:	str	x23, [x9, w8, uxtw #3]
   1cce0:	ldp	w8, w9, [x19, #8]
   1cce4:	cmp	w8, w9
   1cce8:	b.cs	1cfe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x580>  // b.hs, b.nlast
   1ccec:	add	w8, w8, #0x1
   1ccf0:	str	w8, [x19, #8]
   1ccf4:	ldr	w23, [x22, #28]
   1ccf8:	cmp	w8, w9
   1ccfc:	b.cs	1ce0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x3ac>  // b.hs, b.nlast
   1cd00:	ldr	x9, [x19]
   1cd04:	str	x23, [x9, w8, uxtw #3]
   1cd08:	ldp	w8, w9, [x19, #8]
   1cd0c:	cmp	w8, w9
   1cd10:	b.cs	1cfe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x580>  // b.hs, b.nlast
   1cd14:	add	w8, w8, #0x1
   1cd18:	str	w8, [x19, #8]
   1cd1c:	ldr	w10, [x22, #8]
   1cd20:	cmp	w10, #0x4
   1cd24:	b.ls	1d020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5c0>  // b.plast
   1cd28:	sub	x10, x22, x10, lsl #3
   1cd2c:	ldr	x10, [x10, #32]
   1cd30:	cbz	x10, 1cd44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x2e4>
   1cd34:	ldrb	w11, [x10]
   1cd38:	sub	w11, w11, #0xb
   1cd3c:	cmp	w11, #0x4
   1cd40:	b.cs	1d080 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x620>  // b.hs, b.nlast
   1cd44:	ldr	w12, [x21, #304]
   1cd48:	cbz	w12, 1cfb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x558>
   1cd4c:	orr	x11, x10, #0x4
   1cd50:	cmn	x11, #0x4
   1cd54:	b.eq	1d000 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x5a0>  // b.none
   1cd58:	ldr	x11, [x21, #288]
   1cd5c:	ubfx	x13, x10, #4, #28
   1cd60:	eor	w14, w13, w10, lsr #9
   1cd64:	sub	w13, w12, #0x1
   1cd68:	and	w12, w14, w13
   1cd6c:	lsl	x14, x12, #4
   1cd70:	ldr	x14, [x11, x14]
   1cd74:	cmp	x14, x10
   1cd78:	b.ne	1cf88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x528>  // b.any
   1cd7c:	add	x10, x11, x12, lsl #4
   1cd80:	ldr	w22, [x10, #12]
   1cd84:	cmp	w8, w9
   1cd88:	b.cs	1cfc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x564>  // b.hs, b.nlast
   1cd8c:	ldr	x9, [x19]
   1cd90:	str	x22, [x9, w8, uxtw #3]
   1cd94:	ldp	w8, w9, [x19, #8]
   1cd98:	cmp	w8, w9
   1cd9c:	b.cs	1cfe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x580>  // b.hs, b.nlast
   1cda0:	add	w8, w8, #0x1
   1cda4:	str	w8, [x19, #8]
   1cda8:	ldr	x0, [x21]
   1cdac:	mov	w1, #0x1e                  	// #30
   1cdb0:	mov	x2, x19
   1cdb4:	mov	w3, w20
   1cdb8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1cdbc:	str	wzr, [x19, #8]
   1cdc0:	ldp	x20, x19, [sp, #48]
   1cdc4:	ldp	x22, x21, [sp, #32]
   1cdc8:	ldr	x23, [sp, #16]
   1cdcc:	ldp	x29, x30, [sp], #64
   1cdd0:	ret
   1cdd4:	add	x1, x19, #0x10
   1cdd8:	mov	w3, #0x8                   	// #8
   1cddc:	mov	x0, x19
   1cde0:	mov	x2, xzr
   1cde4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1cde8:	ldr	w8, [x19, #8]
   1cdec:	b	1caa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x40>
   1cdf0:	add	x1, x19, #0x10
   1cdf4:	mov	w3, #0x8                   	// #8
   1cdf8:	mov	x0, x19
   1cdfc:	mov	x2, xzr
   1ce00:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ce04:	ldr	w8, [x19, #8]
   1ce08:	b	1cbd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x170>
   1ce0c:	add	x1, x19, #0x10
   1ce10:	mov	w3, #0x8                   	// #8
   1ce14:	mov	x0, x19
   1ce18:	mov	x2, xzr
   1ce1c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ce20:	ldr	w8, [x19, #8]
   1ce24:	b	1cd00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x2a0>
   1ce28:	mov	w15, #0x1                   	// #1
   1ce2c:	cmn	x14, #0x4
   1ce30:	b.eq	1ce58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x3f8>  // b.none
   1ce34:	add	w12, w12, w15
   1ce38:	and	w12, w12, w13
   1ce3c:	lsl	x14, x12, #4
   1ce40:	ldr	x14, [x11, x14]
   1ce44:	add	w15, w15, #0x1
   1ce48:	cmp	x14, x10
   1ce4c:	b.ne	1ce2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x3cc>  // b.any
   1ce50:	mov	w12, w12
   1ce54:	b	1cb10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0xb0>
   1ce58:	mov	x23, xzr
   1ce5c:	cmp	w8, w9
   1ce60:	b.cc	1cb20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0xc0>  // b.lo, b.ul, b.last
   1ce64:	add	x1, x19, #0x10
   1ce68:	mov	w3, #0x8                   	// #8
   1ce6c:	mov	x0, x19
   1ce70:	mov	x2, xzr
   1ce74:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ce78:	ldr	w8, [x19, #8]
   1ce7c:	b	1cb20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0xc0>
   1ce80:	mov	w15, #0x1                   	// #1
   1ce84:	cmn	x14, #0x4
   1ce88:	b.eq	1ceb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x450>  // b.none
   1ce8c:	add	w12, w12, w15
   1ce90:	and	w12, w12, w13
   1ce94:	lsl	x14, x12, #4
   1ce98:	ldr	x14, [x11, x14]
   1ce9c:	add	w15, w15, #0x1
   1cea0:	cmp	x14, x10
   1cea4:	b.ne	1ce84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x424>  // b.any
   1cea8:	mov	w12, w12
   1ceac:	b	1cb98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x138>
   1ceb0:	mov	x23, xzr
   1ceb4:	cmp	w8, w9
   1ceb8:	b.cc	1cba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x148>  // b.lo, b.ul, b.last
   1cebc:	add	x1, x19, #0x10
   1cec0:	mov	w3, #0x8                   	// #8
   1cec4:	mov	x0, x19
   1cec8:	mov	x2, xzr
   1cecc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1ced0:	ldr	w8, [x19, #8]
   1ced4:	b	1cba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x148>
   1ced8:	mov	w15, #0x1                   	// #1
   1cedc:	cmn	x14, #0x4
   1cee0:	b.eq	1cf08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x4a8>  // b.none
   1cee4:	add	w12, w12, w15
   1cee8:	and	w12, w12, w13
   1ceec:	lsl	x14, x12, #4
   1cef0:	ldr	x14, [x11, x14]
   1cef4:	add	w15, w15, #0x1
   1cef8:	cmp	x14, x10
   1cefc:	b.ne	1cedc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x47c>  // b.any
   1cf00:	mov	w12, w12
   1cf04:	b	1cc44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x1e4>
   1cf08:	mov	x23, xzr
   1cf0c:	cmp	w8, w9
   1cf10:	b.cc	1cc54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x1f4>  // b.lo, b.ul, b.last
   1cf14:	add	x1, x19, #0x10
   1cf18:	mov	w3, #0x8                   	// #8
   1cf1c:	mov	x0, x19
   1cf20:	mov	x2, xzr
   1cf24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1cf28:	ldr	w8, [x19, #8]
   1cf2c:	b	1cc54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x1f4>
   1cf30:	mov	w15, #0x1                   	// #1
   1cf34:	cmn	x14, #0x4
   1cf38:	b.eq	1cf60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x500>  // b.none
   1cf3c:	add	w12, w12, w15
   1cf40:	and	w12, w12, w13
   1cf44:	lsl	x14, x12, #4
   1cf48:	ldr	x14, [x11, x14]
   1cf4c:	add	w15, w15, #0x1
   1cf50:	cmp	x14, x10
   1cf54:	b.ne	1cf34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x4d4>  // b.any
   1cf58:	mov	w12, w12
   1cf5c:	b	1ccc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x268>
   1cf60:	mov	x23, xzr
   1cf64:	cmp	w8, w9
   1cf68:	b.cc	1ccd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x278>  // b.lo, b.ul, b.last
   1cf6c:	add	x1, x19, #0x10
   1cf70:	mov	w3, #0x8                   	// #8
   1cf74:	mov	x0, x19
   1cf78:	mov	x2, xzr
   1cf7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1cf80:	ldr	w8, [x19, #8]
   1cf84:	b	1ccd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x278>
   1cf88:	mov	w15, #0x1                   	// #1
   1cf8c:	cmn	x14, #0x4
   1cf90:	b.eq	1cfb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x558>  // b.none
   1cf94:	add	w12, w12, w15
   1cf98:	and	w12, w12, w13
   1cf9c:	lsl	x14, x12, #4
   1cfa0:	ldr	x14, [x11, x14]
   1cfa4:	add	w15, w15, #0x1
   1cfa8:	cmp	x14, x10
   1cfac:	b.ne	1cf8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x52c>  // b.any
   1cfb0:	mov	w12, w12
   1cfb4:	b	1cd7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x31c>
   1cfb8:	mov	x22, xzr
   1cfbc:	cmp	w8, w9
   1cfc0:	b.cc	1cd8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x32c>  // b.lo, b.ul, b.last
   1cfc4:	add	x1, x19, #0x10
   1cfc8:	mov	w3, #0x8                   	// #8
   1cfcc:	mov	x0, x19
   1cfd0:	mov	x2, xzr
   1cfd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1cfd8:	ldr	w8, [x19, #8]
   1cfdc:	b	1cd8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeDIObjCPropertyEPKN4llvm14DIObjCPropertyERNS1_15SmallVectorImplImEEj+0x32c>
   1cfe0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1cfe4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1cfe8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1cfec:	add	x0, x0, #0x0
   1cff0:	add	x1, x1, #0x0
   1cff4:	add	x3, x3, #0x0
   1cff8:	mov	w2, #0x43                  	// #67
   1cffc:	bl	0 <__assert_fail>
   1d000:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d004:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d008:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d00c:	add	x0, x0, #0x0
   1d010:	add	x1, x1, #0x0
   1d014:	add	x3, x3, #0x0
   1d018:	mov	w2, #0x252                 	// #594
   1d01c:	bl	0 <__assert_fail>
   1d020:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d024:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d028:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d02c:	add	x0, x0, #0x0
   1d030:	add	x1, x1, #0x0
   1d034:	add	x3, x3, #0x0
   1d038:	mov	w2, #0x436                 	// #1078
   1d03c:	bl	0 <__assert_fail>
   1d040:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d044:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d048:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d04c:	add	x0, x0, #0x0
   1d050:	add	x1, x1, #0x0
   1d054:	add	x3, x3, #0x0
   1d058:	mov	w2, #0x121                 	// #289
   1d05c:	bl	0 <__assert_fail>
   1d060:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d064:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d068:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d06c:	add	x0, x0, #0x0
   1d070:	add	x1, x1, #0x0
   1d074:	add	x3, x3, #0x0
   1d078:	mov	w2, #0x134                 	// #308
   1d07c:	bl	0 <__assert_fail>
   1d080:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d084:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d088:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d08c:	add	x0, x0, #0x0
   1d090:	add	x1, x1, #0x0
   1d094:	add	x3, x3, #0x0
   1d098:	mov	w2, #0x134                 	// #308
   1d09c:	bl	0 <__assert_fail>

000000000001d0a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj>:
   1d0a0:	stp	x29, x30, [sp, #-64]!
   1d0a4:	str	x23, [sp, #16]
   1d0a8:	stp	x22, x21, [sp, #32]
   1d0ac:	stp	x20, x19, [sp, #48]
   1d0b0:	mov	x29, sp
   1d0b4:	ldrb	w9, [x1, #1]
   1d0b8:	ldp	w8, w10, [x2, #8]
   1d0bc:	mov	w20, w3
   1d0c0:	mov	x19, x2
   1d0c4:	and	w9, w9, #0x7f
   1d0c8:	cmp	w9, #0x1
   1d0cc:	mov	x22, x1
   1d0d0:	cset	w23, eq  // eq = none
   1d0d4:	cmp	w8, w10
   1d0d8:	mov	x21, x0
   1d0dc:	b.cs	1d438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x398>  // b.hs, b.nlast
   1d0e0:	ldr	x9, [x19]
   1d0e4:	str	x23, [x9, w8, uxtw #3]
   1d0e8:	ldp	w8, w9, [x19, #8]
   1d0ec:	cmp	w8, w9
   1d0f0:	b.cs	1d5ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x54c>  // b.hs, b.nlast
   1d0f4:	add	w8, w8, #0x1
   1d0f8:	str	w8, [x19, #8]
   1d0fc:	ldrh	w23, [x22, #2]
   1d100:	cmp	w8, w9
   1d104:	b.cs	1d454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x3b4>  // b.hs, b.nlast
   1d108:	ldr	x9, [x19]
   1d10c:	str	x23, [x9, w8, uxtw #3]
   1d110:	ldp	w8, w9, [x19, #8]
   1d114:	cmp	w8, w9
   1d118:	b.cs	1d5ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x54c>  // b.hs, b.nlast
   1d11c:	add	w8, w8, #0x1
   1d120:	str	w8, [x19, #8]
   1d124:	ldr	w10, [x22, #8]
   1d128:	cbz	w10, 1d62c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x58c>
   1d12c:	sub	x10, x22, x10, lsl #3
   1d130:	ldr	x10, [x10]
   1d134:	cbz	x10, 1d150 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xb0>
   1d138:	ldrb	w11, [x10]
   1d13c:	sub	w12, w11, #0xb
   1d140:	cmp	w12, #0xb
   1d144:	b.cs	1d398 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x2f8>  // b.hs, b.nlast
   1d148:	cmp	w12, #0xb
   1d14c:	b.cs	1d3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x320>  // b.hs, b.nlast
   1d150:	ldr	w12, [x21, #304]
   1d154:	cbz	w12, 1d4bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x41c>
   1d158:	orr	x11, x10, #0x4
   1d15c:	cmn	x11, #0x4
   1d160:	b.eq	1d60c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x56c>  // b.none
   1d164:	ldr	x11, [x21, #288]
   1d168:	ubfx	x13, x10, #4, #28
   1d16c:	eor	w14, w13, w10, lsr #9
   1d170:	sub	w13, w12, #0x1
   1d174:	and	w12, w14, w13
   1d178:	lsl	x14, x12, #4
   1d17c:	ldr	x14, [x11, x14]
   1d180:	cmp	x14, x10
   1d184:	b.ne	1d48c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x3ec>  // b.any
   1d188:	add	x10, x11, x12, lsl #4
   1d18c:	ldr	w23, [x10, #12]
   1d190:	cmp	w8, w9
   1d194:	b.cs	1d4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x428>  // b.hs, b.nlast
   1d198:	ldr	x9, [x19]
   1d19c:	str	x23, [x9, w8, uxtw #3]
   1d1a0:	ldp	w8, w9, [x19, #8]
   1d1a4:	cmp	w8, w9
   1d1a8:	b.cs	1d5ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x54c>  // b.hs, b.nlast
   1d1ac:	add	w8, w8, #0x1
   1d1b0:	str	w8, [x19, #8]
   1d1b4:	ldr	w10, [x22, #8]
   1d1b8:	cmp	w10, #0x1
   1d1bc:	b.ls	1d62c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x58c>  // b.plast
   1d1c0:	sub	x10, x22, x10, lsl #3
   1d1c4:	ldr	x10, [x10, #8]
   1d1c8:	cbz	x10, 1d1e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x144>
   1d1cc:	ldrb	w11, [x10]
   1d1d0:	sub	w12, w11, #0x8
   1d1d4:	cmp	w12, #0x15
   1d1d8:	b.cs	1d3e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x348>  // b.hs, b.nlast
   1d1dc:	cmp	w12, #0x15
   1d1e0:	b.cs	1d410 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x370>  // b.hs, b.nlast
   1d1e4:	ldr	w12, [x21, #304]
   1d1e8:	cbz	w12, 1d514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x474>
   1d1ec:	orr	x11, x10, #0x4
   1d1f0:	cmn	x11, #0x4
   1d1f4:	b.eq	1d60c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x56c>  // b.none
   1d1f8:	ldr	x11, [x21, #288]
   1d1fc:	ubfx	x13, x10, #4, #28
   1d200:	eor	w14, w13, w10, lsr #9
   1d204:	sub	w13, w12, #0x1
   1d208:	and	w12, w14, w13
   1d20c:	lsl	x14, x12, #4
   1d210:	ldr	x14, [x11, x14]
   1d214:	cmp	x14, x10
   1d218:	b.ne	1d4e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x444>  // b.any
   1d21c:	add	x10, x11, x12, lsl #4
   1d220:	ldr	w23, [x10, #12]
   1d224:	cmp	w8, w9
   1d228:	b.cs	1d520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x480>  // b.hs, b.nlast
   1d22c:	ldr	x9, [x19]
   1d230:	str	x23, [x9, w8, uxtw #3]
   1d234:	ldp	w8, w9, [x19, #8]
   1d238:	cmp	w8, w9
   1d23c:	b.cs	1d5ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x54c>  // b.hs, b.nlast
   1d240:	add	w8, w8, #0x1
   1d244:	str	w8, [x19, #8]
   1d248:	ldr	w23, [x22, #24]
   1d24c:	cmp	w8, w9
   1d250:	b.cs	1d470 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x3d0>  // b.hs, b.nlast
   1d254:	ldr	x9, [x19]
   1d258:	str	x23, [x9, w8, uxtw #3]
   1d25c:	ldp	w8, w9, [x19, #8]
   1d260:	cmp	w8, w9
   1d264:	b.cs	1d5ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x54c>  // b.hs, b.nlast
   1d268:	add	w8, w8, #0x1
   1d26c:	str	w8, [x19, #8]
   1d270:	ldr	w10, [x22, #8]
   1d274:	cmp	w10, #0x2
   1d278:	b.ls	1d62c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x58c>  // b.plast
   1d27c:	sub	x10, x22, x10, lsl #3
   1d280:	ldr	x10, [x10, #16]
   1d284:	cbz	x10, 1d290 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x1f0>
   1d288:	ldrb	w11, [x10]
   1d28c:	cbnz	w11, 1d64c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x5ac>
   1d290:	ldr	w12, [x21, #304]
   1d294:	cbz	w12, 1d56c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4cc>
   1d298:	orr	x11, x10, #0x4
   1d29c:	cmn	x11, #0x4
   1d2a0:	b.eq	1d60c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x56c>  // b.none
   1d2a4:	ldr	x11, [x21, #288]
   1d2a8:	ubfx	x13, x10, #4, #28
   1d2ac:	eor	w14, w13, w10, lsr #9
   1d2b0:	sub	w13, w12, #0x1
   1d2b4:	and	w12, w14, w13
   1d2b8:	lsl	x14, x12, #4
   1d2bc:	ldr	x14, [x11, x14]
   1d2c0:	cmp	x14, x10
   1d2c4:	b.ne	1d53c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x49c>  // b.any
   1d2c8:	add	x10, x11, x12, lsl #4
   1d2cc:	ldr	w23, [x10, #12]
   1d2d0:	cmp	w8, w9
   1d2d4:	b.cs	1d578 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4d8>  // b.hs, b.nlast
   1d2d8:	ldr	x9, [x19]
   1d2dc:	str	x23, [x9, w8, uxtw #3]
   1d2e0:	ldp	w8, w9, [x19, #8]
   1d2e4:	cmp	w8, w9
   1d2e8:	b.cs	1d5ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x54c>  // b.hs, b.nlast
   1d2ec:	add	w8, w8, #0x1
   1d2f0:	str	w8, [x19, #8]
   1d2f4:	ldr	w10, [x22, #8]
   1d2f8:	cmp	w10, #0x3
   1d2fc:	b.ls	1d62c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x58c>  // b.plast
   1d300:	ldr	w12, [x21, #304]
   1d304:	cbz	w12, 1d5c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x524>
   1d308:	sub	x10, x22, x10, lsl #3
   1d30c:	ldr	x10, [x10, #24]
   1d310:	orr	x11, x10, #0x4
   1d314:	cmn	x11, #0x4
   1d318:	b.eq	1d60c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x56c>  // b.none
   1d31c:	ldr	x11, [x21, #288]
   1d320:	ubfx	x13, x10, #4, #28
   1d324:	eor	w14, w13, w10, lsr #9
   1d328:	sub	w13, w12, #0x1
   1d32c:	and	w12, w14, w13
   1d330:	lsl	x14, x12, #4
   1d334:	ldr	x14, [x11, x14]
   1d338:	cmp	x14, x10
   1d33c:	b.ne	1d594 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4f4>  // b.any
   1d340:	add	x10, x11, x12, lsl #4
   1d344:	ldr	w22, [x10, #12]
   1d348:	cmp	w8, w9
   1d34c:	b.cs	1d5d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x530>  // b.hs, b.nlast
   1d350:	ldr	x9, [x19]
   1d354:	str	x22, [x9, w8, uxtw #3]
   1d358:	ldp	w8, w9, [x19, #8]
   1d35c:	cmp	w8, w9
   1d360:	b.cs	1d5ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x54c>  // b.hs, b.nlast
   1d364:	add	w8, w8, #0x1
   1d368:	str	w8, [x19, #8]
   1d36c:	ldr	x0, [x21]
   1d370:	mov	w1, #0x1f                  	// #31
   1d374:	mov	x2, x19
   1d378:	mov	w3, w20
   1d37c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d380:	str	wzr, [x19, #8]
   1d384:	ldp	x20, x19, [sp, #48]
   1d388:	ldp	x22, x21, [sp, #32]
   1d38c:	ldr	x23, [sp, #16]
   1d390:	ldp	x29, x30, [sp], #64
   1d394:	ret
   1d398:	cmp	w11, #0x1f
   1d39c:	b.eq	1d148 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xa8>  // b.none
   1d3a0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d3a4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d3a8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d3ac:	add	x0, x0, #0x0
   1d3b0:	add	x1, x1, #0x0
   1d3b4:	add	x3, x3, #0x0
   1d3b8:	mov	w2, #0x134                 	// #308
   1d3bc:	bl	0 <__assert_fail>
   1d3c0:	cmp	w11, #0x1f
   1d3c4:	b.eq	1d150 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xb0>  // b.none
   1d3c8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d3cc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d3d0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d3d4:	add	x0, x0, #0x0
   1d3d8:	add	x1, x1, #0x0
   1d3dc:	add	x3, x3, #0x0
   1d3e0:	mov	w2, #0x108                 	// #264
   1d3e4:	bl	0 <__assert_fail>
   1d3e8:	cmp	w11, #0x1f
   1d3ec:	b.eq	1d1dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x13c>  // b.none
   1d3f0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d3f4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d3f8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d3fc:	add	x0, x0, #0x0
   1d400:	add	x1, x1, #0x0
   1d404:	add	x3, x3, #0x0
   1d408:	mov	w2, #0x134                 	// #308
   1d40c:	bl	0 <__assert_fail>
   1d410:	cmp	w11, #0x1f
   1d414:	b.eq	1d1e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x144>  // b.none
   1d418:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d41c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d420:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d424:	add	x0, x0, #0x0
   1d428:	add	x1, x1, #0x0
   1d42c:	add	x3, x3, #0x0
   1d430:	mov	w2, #0x108                 	// #264
   1d434:	bl	0 <__assert_fail>
   1d438:	add	x1, x19, #0x10
   1d43c:	mov	w3, #0x8                   	// #8
   1d440:	mov	x0, x19
   1d444:	mov	x2, xzr
   1d448:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d44c:	ldr	w8, [x19, #8]
   1d450:	b	1d0e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x40>
   1d454:	add	x1, x19, #0x10
   1d458:	mov	w3, #0x8                   	// #8
   1d45c:	mov	x0, x19
   1d460:	mov	x2, xzr
   1d464:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d468:	ldr	w8, [x19, #8]
   1d46c:	b	1d108 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x68>
   1d470:	add	x1, x19, #0x10
   1d474:	mov	w3, #0x8                   	// #8
   1d478:	mov	x0, x19
   1d47c:	mov	x2, xzr
   1d480:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d484:	ldr	w8, [x19, #8]
   1d488:	b	1d254 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x1b4>
   1d48c:	mov	w15, #0x1                   	// #1
   1d490:	cmn	x14, #0x4
   1d494:	b.eq	1d4bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x41c>  // b.none
   1d498:	add	w12, w12, w15
   1d49c:	and	w12, w12, w13
   1d4a0:	lsl	x14, x12, #4
   1d4a4:	ldr	x14, [x11, x14]
   1d4a8:	add	w15, w15, #0x1
   1d4ac:	cmp	x14, x10
   1d4b0:	b.ne	1d490 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x3f0>  // b.any
   1d4b4:	mov	w12, w12
   1d4b8:	b	1d188 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xe8>
   1d4bc:	mov	x23, xzr
   1d4c0:	cmp	w8, w9
   1d4c4:	b.cc	1d198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xf8>  // b.lo, b.ul, b.last
   1d4c8:	add	x1, x19, #0x10
   1d4cc:	mov	w3, #0x8                   	// #8
   1d4d0:	mov	x0, x19
   1d4d4:	mov	x2, xzr
   1d4d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d4dc:	ldr	w8, [x19, #8]
   1d4e0:	b	1d198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0xf8>
   1d4e4:	mov	w15, #0x1                   	// #1
   1d4e8:	cmn	x14, #0x4
   1d4ec:	b.eq	1d514 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x474>  // b.none
   1d4f0:	add	w12, w12, w15
   1d4f4:	and	w12, w12, w13
   1d4f8:	lsl	x14, x12, #4
   1d4fc:	ldr	x14, [x11, x14]
   1d500:	add	w15, w15, #0x1
   1d504:	cmp	x14, x10
   1d508:	b.ne	1d4e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x448>  // b.any
   1d50c:	mov	w12, w12
   1d510:	b	1d21c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x17c>
   1d514:	mov	x23, xzr
   1d518:	cmp	w8, w9
   1d51c:	b.cc	1d22c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x18c>  // b.lo, b.ul, b.last
   1d520:	add	x1, x19, #0x10
   1d524:	mov	w3, #0x8                   	// #8
   1d528:	mov	x0, x19
   1d52c:	mov	x2, xzr
   1d530:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d534:	ldr	w8, [x19, #8]
   1d538:	b	1d22c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x18c>
   1d53c:	mov	w15, #0x1                   	// #1
   1d540:	cmn	x14, #0x4
   1d544:	b.eq	1d56c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4cc>  // b.none
   1d548:	add	w12, w12, w15
   1d54c:	and	w12, w12, w13
   1d550:	lsl	x14, x12, #4
   1d554:	ldr	x14, [x11, x14]
   1d558:	add	w15, w15, #0x1
   1d55c:	cmp	x14, x10
   1d560:	b.ne	1d540 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4a0>  // b.any
   1d564:	mov	w12, w12
   1d568:	b	1d2c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x228>
   1d56c:	mov	x23, xzr
   1d570:	cmp	w8, w9
   1d574:	b.cc	1d2d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x238>  // b.lo, b.ul, b.last
   1d578:	add	x1, x19, #0x10
   1d57c:	mov	w3, #0x8                   	// #8
   1d580:	mov	x0, x19
   1d584:	mov	x2, xzr
   1d588:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d58c:	ldr	w8, [x19, #8]
   1d590:	b	1d2d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x238>
   1d594:	mov	w15, #0x1                   	// #1
   1d598:	cmn	x14, #0x4
   1d59c:	b.eq	1d5c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x524>  // b.none
   1d5a0:	add	w12, w12, w15
   1d5a4:	and	w12, w12, w13
   1d5a8:	lsl	x14, x12, #4
   1d5ac:	ldr	x14, [x11, x14]
   1d5b0:	add	w15, w15, #0x1
   1d5b4:	cmp	x14, x10
   1d5b8:	b.ne	1d598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x4f8>  // b.any
   1d5bc:	mov	w12, w12
   1d5c0:	b	1d340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x2a0>
   1d5c4:	mov	x22, xzr
   1d5c8:	cmp	w8, w9
   1d5cc:	b.cc	1d350 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x2b0>  // b.lo, b.ul, b.last
   1d5d0:	add	x1, x19, #0x10
   1d5d4:	mov	w3, #0x8                   	// #8
   1d5d8:	mov	x0, x19
   1d5dc:	mov	x2, xzr
   1d5e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d5e4:	ldr	w8, [x19, #8]
   1d5e8:	b	1d350 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter21writeDIImportedEntityEPKN4llvm16DIImportedEntityERNS1_15SmallVectorImplImEEj+0x2b0>
   1d5ec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d5f0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d5f4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d5f8:	add	x0, x0, #0x0
   1d5fc:	add	x1, x1, #0x0
   1d600:	add	x3, x3, #0x0
   1d604:	mov	w2, #0x43                  	// #67
   1d608:	bl	0 <__assert_fail>
   1d60c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d610:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d614:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d618:	add	x0, x0, #0x0
   1d61c:	add	x1, x1, #0x0
   1d620:	add	x3, x3, #0x0
   1d624:	mov	w2, #0x252                 	// #594
   1d628:	bl	0 <__assert_fail>
   1d62c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d630:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d634:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d638:	add	x0, x0, #0x0
   1d63c:	add	x1, x1, #0x0
   1d640:	add	x3, x3, #0x0
   1d644:	mov	w2, #0x436                 	// #1078
   1d648:	bl	0 <__assert_fail>
   1d64c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d650:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d654:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d658:	add	x0, x0, #0x0
   1d65c:	add	x1, x1, #0x0
   1d660:	add	x3, x3, #0x0
   1d664:	mov	w2, #0x121                 	// #289
   1d668:	bl	0 <__assert_fail>

000000000001d66c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj>:
   1d66c:	stp	x29, x30, [sp, #-64]!
   1d670:	str	x23, [sp, #16]
   1d674:	stp	x22, x21, [sp, #32]
   1d678:	stp	x20, x19, [sp, #48]
   1d67c:	mov	x29, sp
   1d680:	ldrb	w9, [x1, #1]
   1d684:	ldp	w8, w10, [x2, #8]
   1d688:	mov	w20, w3
   1d68c:	mov	x19, x2
   1d690:	and	w9, w9, #0x7f
   1d694:	cmp	w9, #0x1
   1d698:	mov	x22, x1
   1d69c:	cset	w23, eq  // eq = none
   1d6a0:	cmp	w8, w10
   1d6a4:	mov	x21, x0
   1d6a8:	b.cs	1d848 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x1dc>  // b.hs, b.nlast
   1d6ac:	ldr	x9, [x19]
   1d6b0:	str	x23, [x9, w8, uxtw #3]
   1d6b4:	ldp	w8, w9, [x19, #8]
   1d6b8:	cmp	w8, w9
   1d6bc:	b.cs	1d94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2e0>  // b.hs, b.nlast
   1d6c0:	add	w8, w8, #0x1
   1d6c4:	str	w8, [x19, #8]
   1d6c8:	ldrh	w23, [x22, #2]
   1d6cc:	cmp	w8, w9
   1d6d0:	b.cs	1d864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x1f8>  // b.hs, b.nlast
   1d6d4:	ldr	x9, [x19]
   1d6d8:	str	x23, [x9, w8, uxtw #3]
   1d6dc:	ldp	w8, w9, [x19, #8]
   1d6e0:	cmp	w8, w9
   1d6e4:	b.cs	1d94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2e0>  // b.hs, b.nlast
   1d6e8:	add	w8, w8, #0x1
   1d6ec:	str	w8, [x19, #8]
   1d6f0:	ldr	w23, [x22, #24]
   1d6f4:	cmp	w8, w9
   1d6f8:	b.cs	1d880 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x214>  // b.hs, b.nlast
   1d6fc:	ldr	x9, [x19]
   1d700:	str	x23, [x9, w8, uxtw #3]
   1d704:	ldp	w8, w9, [x19, #8]
   1d708:	cmp	w8, w9
   1d70c:	b.cs	1d94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2e0>  // b.hs, b.nlast
   1d710:	add	w8, w8, #0x1
   1d714:	str	w8, [x19, #8]
   1d718:	ldr	w10, [x22, #8]
   1d71c:	cbz	w10, 1d98c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x320>
   1d720:	sub	x10, x22, x10, lsl #3
   1d724:	ldr	x10, [x10]
   1d728:	cbz	x10, 1d734 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0xc8>
   1d72c:	ldrb	w11, [x10]
   1d730:	cbnz	w11, 1d9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x340>
   1d734:	ldr	w12, [x21, #304]
   1d738:	cbz	w12, 1d8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x260>
   1d73c:	orr	x11, x10, #0x4
   1d740:	cmn	x11, #0x4
   1d744:	b.eq	1d96c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x300>  // b.none
   1d748:	ldr	x11, [x21, #288]
   1d74c:	ubfx	x13, x10, #4, #28
   1d750:	eor	w14, w13, w10, lsr #9
   1d754:	sub	w13, w12, #0x1
   1d758:	and	w12, w14, w13
   1d75c:	lsl	x14, x12, #4
   1d760:	ldr	x14, [x11, x14]
   1d764:	cmp	x14, x10
   1d768:	b.ne	1d89c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x230>  // b.any
   1d76c:	add	x10, x11, x12, lsl #4
   1d770:	ldr	w23, [x10, #12]
   1d774:	cmp	w8, w9
   1d778:	b.cs	1d8d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x26c>  // b.hs, b.nlast
   1d77c:	ldr	x9, [x19]
   1d780:	str	x23, [x9, w8, uxtw #3]
   1d784:	ldp	w8, w9, [x19, #8]
   1d788:	cmp	w8, w9
   1d78c:	b.cs	1d94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2e0>  // b.hs, b.nlast
   1d790:	add	w8, w8, #0x1
   1d794:	str	w8, [x19, #8]
   1d798:	ldr	w10, [x22, #8]
   1d79c:	cmp	w10, #0x1
   1d7a0:	b.ls	1d98c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x320>  // b.plast
   1d7a4:	sub	x10, x22, x10, lsl #3
   1d7a8:	ldr	x10, [x10, #8]
   1d7ac:	cbz	x10, 1d7b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x14c>
   1d7b0:	ldrb	w11, [x10]
   1d7b4:	cbnz	w11, 1d9ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x340>
   1d7b8:	ldr	w12, [x21, #304]
   1d7bc:	cbz	w12, 1d924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2b8>
   1d7c0:	orr	x11, x10, #0x4
   1d7c4:	cmn	x11, #0x4
   1d7c8:	b.eq	1d96c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x300>  // b.none
   1d7cc:	ldr	x11, [x21, #288]
   1d7d0:	ubfx	x13, x10, #4, #28
   1d7d4:	eor	w14, w13, w10, lsr #9
   1d7d8:	sub	w13, w12, #0x1
   1d7dc:	and	w12, w14, w13
   1d7e0:	lsl	x14, x12, #4
   1d7e4:	ldr	x14, [x11, x14]
   1d7e8:	cmp	x14, x10
   1d7ec:	b.ne	1d8f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x288>  // b.any
   1d7f0:	add	x10, x11, x12, lsl #4
   1d7f4:	ldr	w22, [x10, #12]
   1d7f8:	cmp	w8, w9
   1d7fc:	b.cs	1d930 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2c4>  // b.hs, b.nlast
   1d800:	ldr	x9, [x19]
   1d804:	str	x22, [x9, w8, uxtw #3]
   1d808:	ldp	w8, w9, [x19, #8]
   1d80c:	cmp	w8, w9
   1d810:	b.cs	1d94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2e0>  // b.hs, b.nlast
   1d814:	add	w8, w8, #0x1
   1d818:	str	w8, [x19, #8]
   1d81c:	ldr	x0, [x21]
   1d820:	mov	w1, #0x21                  	// #33
   1d824:	mov	x2, x19
   1d828:	mov	w3, w20
   1d82c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d830:	str	wzr, [x19, #8]
   1d834:	ldp	x20, x19, [sp, #48]
   1d838:	ldp	x22, x21, [sp, #32]
   1d83c:	ldr	x23, [sp, #16]
   1d840:	ldp	x29, x30, [sp], #64
   1d844:	ret
   1d848:	add	x1, x19, #0x10
   1d84c:	mov	w3, #0x8                   	// #8
   1d850:	mov	x0, x19
   1d854:	mov	x2, xzr
   1d858:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d85c:	ldr	w8, [x19, #8]
   1d860:	b	1d6ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x40>
   1d864:	add	x1, x19, #0x10
   1d868:	mov	w3, #0x8                   	// #8
   1d86c:	mov	x0, x19
   1d870:	mov	x2, xzr
   1d874:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d878:	ldr	w8, [x19, #8]
   1d87c:	b	1d6d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x68>
   1d880:	add	x1, x19, #0x10
   1d884:	mov	w3, #0x8                   	// #8
   1d888:	mov	x0, x19
   1d88c:	mov	x2, xzr
   1d890:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d894:	ldr	w8, [x19, #8]
   1d898:	b	1d6fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x90>
   1d89c:	mov	w15, #0x1                   	// #1
   1d8a0:	cmn	x14, #0x4
   1d8a4:	b.eq	1d8cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x260>  // b.none
   1d8a8:	add	w12, w12, w15
   1d8ac:	and	w12, w12, w13
   1d8b0:	lsl	x14, x12, #4
   1d8b4:	ldr	x14, [x11, x14]
   1d8b8:	add	w15, w15, #0x1
   1d8bc:	cmp	x14, x10
   1d8c0:	b.ne	1d8a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x234>  // b.any
   1d8c4:	mov	w12, w12
   1d8c8:	b	1d76c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x100>
   1d8cc:	mov	x23, xzr
   1d8d0:	cmp	w8, w9
   1d8d4:	b.cc	1d77c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x110>  // b.lo, b.ul, b.last
   1d8d8:	add	x1, x19, #0x10
   1d8dc:	mov	w3, #0x8                   	// #8
   1d8e0:	mov	x0, x19
   1d8e4:	mov	x2, xzr
   1d8e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d8ec:	ldr	w8, [x19, #8]
   1d8f0:	b	1d77c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x110>
   1d8f4:	mov	w15, #0x1                   	// #1
   1d8f8:	cmn	x14, #0x4
   1d8fc:	b.eq	1d924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x2b8>  // b.none
   1d900:	add	w12, w12, w15
   1d904:	and	w12, w12, w13
   1d908:	lsl	x14, x12, #4
   1d90c:	ldr	x14, [x11, x14]
   1d910:	add	w15, w15, #0x1
   1d914:	cmp	x14, x10
   1d918:	b.ne	1d8f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x28c>  // b.any
   1d91c:	mov	w12, w12
   1d920:	b	1d7f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x184>
   1d924:	mov	x22, xzr
   1d928:	cmp	w8, w9
   1d92c:	b.cc	1d800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x194>  // b.lo, b.ul, b.last
   1d930:	add	x1, x19, #0x10
   1d934:	mov	w3, #0x8                   	// #8
   1d938:	mov	x0, x19
   1d93c:	mov	x2, xzr
   1d940:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d944:	ldr	w8, [x19, #8]
   1d948:	b	1d800 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter12writeDIMacroEPKN4llvm7DIMacroERNS1_15SmallVectorImplImEEj+0x194>
   1d94c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d950:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d954:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d958:	add	x0, x0, #0x0
   1d95c:	add	x1, x1, #0x0
   1d960:	add	x3, x3, #0x0
   1d964:	mov	w2, #0x43                  	// #67
   1d968:	bl	0 <__assert_fail>
   1d96c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d970:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d974:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d978:	add	x0, x0, #0x0
   1d97c:	add	x1, x1, #0x0
   1d980:	add	x3, x3, #0x0
   1d984:	mov	w2, #0x252                 	// #594
   1d988:	bl	0 <__assert_fail>
   1d98c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d990:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d994:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d998:	add	x0, x0, #0x0
   1d99c:	add	x1, x1, #0x0
   1d9a0:	add	x3, x3, #0x0
   1d9a4:	mov	w2, #0x436                 	// #1078
   1d9a8:	bl	0 <__assert_fail>
   1d9ac:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d9b0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d9b4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1d9b8:	add	x0, x0, #0x0
   1d9bc:	add	x1, x1, #0x0
   1d9c0:	add	x3, x3, #0x0
   1d9c4:	mov	w2, #0x121                 	// #289
   1d9c8:	bl	0 <__assert_fail>

000000000001d9cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj>:
   1d9cc:	stp	x29, x30, [sp, #-64]!
   1d9d0:	str	x23, [sp, #16]
   1d9d4:	stp	x22, x21, [sp, #32]
   1d9d8:	stp	x20, x19, [sp, #48]
   1d9dc:	mov	x29, sp
   1d9e0:	ldrb	w9, [x1, #1]
   1d9e4:	ldp	w8, w10, [x2, #8]
   1d9e8:	mov	w20, w3
   1d9ec:	mov	x19, x2
   1d9f0:	and	w9, w9, #0x7f
   1d9f4:	cmp	w9, #0x1
   1d9f8:	mov	x22, x1
   1d9fc:	cset	w23, eq  // eq = none
   1da00:	cmp	w8, w10
   1da04:	mov	x21, x0
   1da08:	b.cs	1dbb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x1e4>  // b.hs, b.nlast
   1da0c:	ldr	x9, [x19]
   1da10:	str	x23, [x9, w8, uxtw #3]
   1da14:	ldp	w8, w9, [x19, #8]
   1da18:	cmp	w8, w9
   1da1c:	b.cs	1dcb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2e8>  // b.hs, b.nlast
   1da20:	add	w8, w8, #0x1
   1da24:	str	w8, [x19, #8]
   1da28:	ldrh	w23, [x22, #2]
   1da2c:	cmp	w8, w9
   1da30:	b.cs	1dbcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x200>  // b.hs, b.nlast
   1da34:	ldr	x9, [x19]
   1da38:	str	x23, [x9, w8, uxtw #3]
   1da3c:	ldp	w8, w9, [x19, #8]
   1da40:	cmp	w8, w9
   1da44:	b.cs	1dcb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2e8>  // b.hs, b.nlast
   1da48:	add	w8, w8, #0x1
   1da4c:	str	w8, [x19, #8]
   1da50:	ldr	w23, [x22, #24]
   1da54:	cmp	w8, w9
   1da58:	b.cs	1dbe8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x21c>  // b.hs, b.nlast
   1da5c:	ldr	x9, [x19]
   1da60:	str	x23, [x9, w8, uxtw #3]
   1da64:	ldp	w8, w9, [x19, #8]
   1da68:	cmp	w8, w9
   1da6c:	b.cs	1dcb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2e8>  // b.hs, b.nlast
   1da70:	add	w8, w8, #0x1
   1da74:	str	w8, [x19, #8]
   1da78:	ldr	w10, [x22, #8]
   1da7c:	cbz	w10, 1dcf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x328>
   1da80:	sub	x10, x22, x10, lsl #3
   1da84:	ldr	x10, [x10]
   1da88:	cbz	x10, 1da98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0xcc>
   1da8c:	ldrb	w11, [x10]
   1da90:	cmp	w11, #0xf
   1da94:	b.ne	1dd14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x348>  // b.any
   1da98:	ldr	w12, [x21, #304]
   1da9c:	cbz	w12, 1dc34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x268>
   1daa0:	orr	x11, x10, #0x4
   1daa4:	cmn	x11, #0x4
   1daa8:	b.eq	1dcd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x308>  // b.none
   1daac:	ldr	x11, [x21, #288]
   1dab0:	ubfx	x13, x10, #4, #28
   1dab4:	eor	w14, w13, w10, lsr #9
   1dab8:	sub	w13, w12, #0x1
   1dabc:	and	w12, w14, w13
   1dac0:	lsl	x14, x12, #4
   1dac4:	ldr	x14, [x11, x14]
   1dac8:	cmp	x14, x10
   1dacc:	b.ne	1dc04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x238>  // b.any
   1dad0:	add	x10, x11, x12, lsl #4
   1dad4:	ldr	w23, [x10, #12]
   1dad8:	cmp	w8, w9
   1dadc:	b.cs	1dc40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x274>  // b.hs, b.nlast
   1dae0:	ldr	x9, [x19]
   1dae4:	str	x23, [x9, w8, uxtw #3]
   1dae8:	ldp	w8, w9, [x19, #8]
   1daec:	cmp	w8, w9
   1daf0:	b.cs	1dcb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2e8>  // b.hs, b.nlast
   1daf4:	add	w8, w8, #0x1
   1daf8:	str	w8, [x19, #8]
   1dafc:	ldr	w10, [x22, #8]
   1db00:	cmp	w10, #0x1
   1db04:	b.ls	1dcf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x328>  // b.plast
   1db08:	sub	x10, x22, x10, lsl #3
   1db0c:	ldr	x10, [x10, #8]
   1db10:	cbz	x10, 1db20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x154>
   1db14:	ldrb	w11, [x10]
   1db18:	cmp	w11, #0x4
   1db1c:	b.ne	1dd34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x368>  // b.any
   1db20:	ldr	w12, [x21, #304]
   1db24:	cbz	w12, 1dc8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2c0>
   1db28:	orr	x11, x10, #0x4
   1db2c:	cmn	x11, #0x4
   1db30:	b.eq	1dcd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x308>  // b.none
   1db34:	ldr	x11, [x21, #288]
   1db38:	ubfx	x13, x10, #4, #28
   1db3c:	eor	w14, w13, w10, lsr #9
   1db40:	sub	w13, w12, #0x1
   1db44:	and	w12, w14, w13
   1db48:	lsl	x14, x12, #4
   1db4c:	ldr	x14, [x11, x14]
   1db50:	cmp	x14, x10
   1db54:	b.ne	1dc5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x290>  // b.any
   1db58:	add	x10, x11, x12, lsl #4
   1db5c:	ldr	w22, [x10, #12]
   1db60:	cmp	w8, w9
   1db64:	b.cs	1dc98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2cc>  // b.hs, b.nlast
   1db68:	ldr	x9, [x19]
   1db6c:	str	x22, [x9, w8, uxtw #3]
   1db70:	ldp	w8, w9, [x19, #8]
   1db74:	cmp	w8, w9
   1db78:	b.cs	1dcb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2e8>  // b.hs, b.nlast
   1db7c:	add	w8, w8, #0x1
   1db80:	str	w8, [x19, #8]
   1db84:	ldr	x0, [x21]
   1db88:	mov	w1, #0x22                  	// #34
   1db8c:	mov	x2, x19
   1db90:	mov	w3, w20
   1db94:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1db98:	str	wzr, [x19, #8]
   1db9c:	ldp	x20, x19, [sp, #48]
   1dba0:	ldp	x22, x21, [sp, #32]
   1dba4:	ldr	x23, [sp, #16]
   1dba8:	ldp	x29, x30, [sp], #64
   1dbac:	ret
   1dbb0:	add	x1, x19, #0x10
   1dbb4:	mov	w3, #0x8                   	// #8
   1dbb8:	mov	x0, x19
   1dbbc:	mov	x2, xzr
   1dbc0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dbc4:	ldr	w8, [x19, #8]
   1dbc8:	b	1da0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x40>
   1dbcc:	add	x1, x19, #0x10
   1dbd0:	mov	w3, #0x8                   	// #8
   1dbd4:	mov	x0, x19
   1dbd8:	mov	x2, xzr
   1dbdc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dbe0:	ldr	w8, [x19, #8]
   1dbe4:	b	1da34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x68>
   1dbe8:	add	x1, x19, #0x10
   1dbec:	mov	w3, #0x8                   	// #8
   1dbf0:	mov	x0, x19
   1dbf4:	mov	x2, xzr
   1dbf8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dbfc:	ldr	w8, [x19, #8]
   1dc00:	b	1da5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x90>
   1dc04:	mov	w15, #0x1                   	// #1
   1dc08:	cmn	x14, #0x4
   1dc0c:	b.eq	1dc34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x268>  // b.none
   1dc10:	add	w12, w12, w15
   1dc14:	and	w12, w12, w13
   1dc18:	lsl	x14, x12, #4
   1dc1c:	ldr	x14, [x11, x14]
   1dc20:	add	w15, w15, #0x1
   1dc24:	cmp	x14, x10
   1dc28:	b.ne	1dc08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x23c>  // b.any
   1dc2c:	mov	w12, w12
   1dc30:	b	1dad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x104>
   1dc34:	mov	x23, xzr
   1dc38:	cmp	w8, w9
   1dc3c:	b.cc	1dae0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x114>  // b.lo, b.ul, b.last
   1dc40:	add	x1, x19, #0x10
   1dc44:	mov	w3, #0x8                   	// #8
   1dc48:	mov	x0, x19
   1dc4c:	mov	x2, xzr
   1dc50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dc54:	ldr	w8, [x19, #8]
   1dc58:	b	1dae0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x114>
   1dc5c:	mov	w15, #0x1                   	// #1
   1dc60:	cmn	x14, #0x4
   1dc64:	b.eq	1dc8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x2c0>  // b.none
   1dc68:	add	w12, w12, w15
   1dc6c:	and	w12, w12, w13
   1dc70:	lsl	x14, x12, #4
   1dc74:	ldr	x14, [x11, x14]
   1dc78:	add	w15, w15, #0x1
   1dc7c:	cmp	x14, x10
   1dc80:	b.ne	1dc60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x294>  // b.any
   1dc84:	mov	w12, w12
   1dc88:	b	1db58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x18c>
   1dc8c:	mov	x22, xzr
   1dc90:	cmp	w8, w9
   1dc94:	b.cc	1db68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x19c>  // b.lo, b.ul, b.last
   1dc98:	add	x1, x19, #0x10
   1dc9c:	mov	w3, #0x8                   	// #8
   1dca0:	mov	x0, x19
   1dca4:	mov	x2, xzr
   1dca8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dcac:	ldr	w8, [x19, #8]
   1dcb0:	b	1db68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeDIMacroFileEPKN4llvm11DIMacroFileERNS1_15SmallVectorImplImEEj+0x19c>
   1dcb4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcb8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcbc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcc0:	add	x0, x0, #0x0
   1dcc4:	add	x1, x1, #0x0
   1dcc8:	add	x3, x3, #0x0
   1dccc:	mov	w2, #0x43                  	// #67
   1dcd0:	bl	0 <__assert_fail>
   1dcd4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcd8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcdc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dce0:	add	x0, x0, #0x0
   1dce4:	add	x1, x1, #0x0
   1dce8:	add	x3, x3, #0x0
   1dcec:	mov	w2, #0x252                 	// #594
   1dcf0:	bl	0 <__assert_fail>
   1dcf4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcf8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dcfc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd00:	add	x0, x0, #0x0
   1dd04:	add	x1, x1, #0x0
   1dd08:	add	x3, x3, #0x0
   1dd0c:	mov	w2, #0x436                 	// #1078
   1dd10:	bl	0 <__assert_fail>
   1dd14:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd18:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd1c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd20:	add	x0, x0, #0x0
   1dd24:	add	x1, x1, #0x0
   1dd28:	add	x3, x3, #0x0
   1dd2c:	mov	w2, #0x134                 	// #308
   1dd30:	bl	0 <__assert_fail>
   1dd34:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd38:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd3c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1dd40:	add	x0, x0, #0x0
   1dd44:	add	x1, x1, #0x0
   1dd48:	add	x3, x3, #0x0
   1dd4c:	mov	w2, #0x134                 	// #308
   1dd50:	bl	0 <__assert_fail>

000000000001dd54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj>:
   1dd54:	stp	x29, x30, [sp, #-64]!
   1dd58:	str	x23, [sp, #16]
   1dd5c:	stp	x22, x21, [sp, #32]
   1dd60:	stp	x20, x19, [sp, #48]
   1dd64:	mov	x29, sp
   1dd68:	ldrb	w9, [x1, #1]
   1dd6c:	ldp	w8, w10, [x2, #8]
   1dd70:	mov	w20, w3
   1dd74:	mov	x19, x2
   1dd78:	and	w9, w9, #0x7f
   1dd7c:	cmp	w9, #0x1
   1dd80:	mov	x22, x1
   1dd84:	cset	w23, eq  // eq = none
   1dd88:	cmp	w8, w10
   1dd8c:	mov	x21, x0
   1dd90:	b.cs	1e078 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x324>  // b.hs, b.nlast
   1dd94:	ldr	x9, [x19]
   1dd98:	str	x23, [x9, w8, uxtw #3]
   1dd9c:	ldp	w8, w9, [x19, #8]
   1dda0:	cmp	w8, w9
   1dda4:	b.cs	1e210 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4bc>  // b.hs, b.nlast
   1dda8:	add	w8, w8, #0x1
   1ddac:	str	w8, [x19, #8]
   1ddb0:	ldr	w10, [x22, #8]
   1ddb4:	cbz	w10, 1e250 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4fc>
   1ddb8:	sub	x10, x22, x10, lsl #3
   1ddbc:	ldr	x10, [x10]
   1ddc0:	cbz	x10, 1dddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x88>
   1ddc4:	ldrb	w11, [x10]
   1ddc8:	sub	w12, w11, #0xb
   1ddcc:	cmp	w12, #0xb
   1ddd0:	b.cs	1e028 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x2d4>  // b.hs, b.nlast
   1ddd4:	cmp	w12, #0xb
   1ddd8:	b.cs	1e050 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x2fc>  // b.hs, b.nlast
   1dddc:	ldr	w12, [x21, #304]
   1dde0:	cbz	w12, 1e0e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x38c>
   1dde4:	orr	x11, x10, #0x4
   1dde8:	cmn	x11, #0x4
   1ddec:	b.eq	1e230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4dc>  // b.none
   1ddf0:	ldr	x11, [x21, #288]
   1ddf4:	ubfx	x13, x10, #4, #28
   1ddf8:	eor	w14, w13, w10, lsr #9
   1ddfc:	sub	w13, w12, #0x1
   1de00:	and	w12, w14, w13
   1de04:	lsl	x14, x12, #4
   1de08:	ldr	x14, [x11, x14]
   1de0c:	cmp	x14, x10
   1de10:	b.ne	1e0b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x35c>  // b.any
   1de14:	add	x10, x11, x12, lsl #4
   1de18:	ldr	w23, [x10, #12]
   1de1c:	cmp	w8, w9
   1de20:	b.cs	1e0ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x398>  // b.hs, b.nlast
   1de24:	ldr	x9, [x19]
   1de28:	str	x23, [x9, w8, uxtw #3]
   1de2c:	ldp	w8, w9, [x19, #8]
   1de30:	cmp	w8, w9
   1de34:	b.cs	1e210 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4bc>  // b.hs, b.nlast
   1de38:	add	w8, w8, #0x1
   1de3c:	str	w8, [x19, #8]
   1de40:	ldr	w10, [x22, #8]
   1de44:	cmp	w10, #0x1
   1de48:	b.ls	1e250 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4fc>  // b.plast
   1de4c:	sub	x10, x22, x10, lsl #3
   1de50:	ldr	x10, [x10, #8]
   1de54:	cbz	x10, 1de64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x110>
   1de58:	ldrb	w11, [x10]
   1de5c:	cmp	w11, #0x18
   1de60:	b.ne	1e270 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x51c>  // b.any
   1de64:	ldr	w12, [x21, #304]
   1de68:	cbz	w12, 1e138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x3e4>
   1de6c:	orr	x11, x10, #0x4
   1de70:	cmn	x11, #0x4
   1de74:	b.eq	1e230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4dc>  // b.none
   1de78:	ldr	x11, [x21, #288]
   1de7c:	ubfx	x13, x10, #4, #28
   1de80:	eor	w14, w13, w10, lsr #9
   1de84:	sub	w13, w12, #0x1
   1de88:	and	w12, w14, w13
   1de8c:	lsl	x14, x12, #4
   1de90:	ldr	x14, [x11, x14]
   1de94:	cmp	x14, x10
   1de98:	b.ne	1e108 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x3b4>  // b.any
   1de9c:	add	x10, x11, x12, lsl #4
   1dea0:	ldr	w23, [x10, #12]
   1dea4:	cmp	w8, w9
   1dea8:	b.cs	1e144 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x3f0>  // b.hs, b.nlast
   1deac:	ldr	x9, [x19]
   1deb0:	str	x23, [x9, w8, uxtw #3]
   1deb4:	ldp	w8, w9, [x19, #8]
   1deb8:	cmp	w8, w9
   1debc:	b.cs	1e210 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4bc>  // b.hs, b.nlast
   1dec0:	add	w8, w8, #0x1
   1dec4:	str	w8, [x19, #8]
   1dec8:	ldr	w10, [x22, #8]
   1decc:	cmp	w10, #0x2
   1ded0:	b.ls	1e250 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4fc>  // b.plast
   1ded4:	sub	x10, x22, x10, lsl #3
   1ded8:	ldr	x10, [x10, #16]
   1dedc:	cbz	x10, 1dee8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x194>
   1dee0:	ldrb	w11, [x10]
   1dee4:	cbnz	w11, 1e290 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x53c>
   1dee8:	ldr	w12, [x21, #304]
   1deec:	cbz	w12, 1e190 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x43c>
   1def0:	orr	x11, x10, #0x4
   1def4:	cmn	x11, #0x4
   1def8:	b.eq	1e230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4dc>  // b.none
   1defc:	ldr	x11, [x21, #288]
   1df00:	ubfx	x13, x10, #4, #28
   1df04:	eor	w14, w13, w10, lsr #9
   1df08:	sub	w13, w12, #0x1
   1df0c:	and	w12, w14, w13
   1df10:	lsl	x14, x12, #4
   1df14:	ldr	x14, [x11, x14]
   1df18:	cmp	x14, x10
   1df1c:	b.ne	1e160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x40c>  // b.any
   1df20:	add	x10, x11, x12, lsl #4
   1df24:	ldr	w23, [x10, #12]
   1df28:	cmp	w8, w9
   1df2c:	b.cs	1e19c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x448>  // b.hs, b.nlast
   1df30:	ldr	x9, [x19]
   1df34:	str	x23, [x9, w8, uxtw #3]
   1df38:	ldp	w8, w9, [x19, #8]
   1df3c:	cmp	w8, w9
   1df40:	b.cs	1e210 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4bc>  // b.hs, b.nlast
   1df44:	add	w8, w8, #0x1
   1df48:	str	w8, [x19, #8]
   1df4c:	ldr	w10, [x22, #8]
   1df50:	cmp	w10, #0x3
   1df54:	b.ls	1e250 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4fc>  // b.plast
   1df58:	sub	x10, x22, x10, lsl #3
   1df5c:	ldr	x10, [x10, #24]
   1df60:	cbz	x10, 1df70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x21c>
   1df64:	ldrb	w11, [x10]
   1df68:	cmp	w11, #0xf
   1df6c:	b.ne	1e2b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x55c>  // b.any
   1df70:	ldr	w12, [x21, #304]
   1df74:	cbz	w12, 1e1e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x494>
   1df78:	orr	x11, x10, #0x4
   1df7c:	cmn	x11, #0x4
   1df80:	b.eq	1e230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4dc>  // b.none
   1df84:	ldr	x11, [x21, #288]
   1df88:	ubfx	x13, x10, #4, #28
   1df8c:	eor	w14, w13, w10, lsr #9
   1df90:	sub	w13, w12, #0x1
   1df94:	and	w12, w14, w13
   1df98:	lsl	x14, x12, #4
   1df9c:	ldr	x14, [x11, x14]
   1dfa0:	cmp	x14, x10
   1dfa4:	b.ne	1e1b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x464>  // b.any
   1dfa8:	add	x10, x11, x12, lsl #4
   1dfac:	ldr	w23, [x10, #12]
   1dfb0:	cmp	w8, w9
   1dfb4:	b.cs	1e1f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4a0>  // b.hs, b.nlast
   1dfb8:	ldr	x9, [x19]
   1dfbc:	str	x23, [x9, w8, uxtw #3]
   1dfc0:	ldp	w8, w9, [x19, #8]
   1dfc4:	cmp	w8, w9
   1dfc8:	b.cs	1e210 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4bc>  // b.hs, b.nlast
   1dfcc:	add	w8, w8, #0x1
   1dfd0:	str	w8, [x19, #8]
   1dfd4:	ldr	w22, [x22, #24]
   1dfd8:	cmp	w8, w9
   1dfdc:	b.cs	1e094 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x340>  // b.hs, b.nlast
   1dfe0:	ldr	x9, [x19]
   1dfe4:	str	x22, [x9, w8, uxtw #3]
   1dfe8:	ldp	w8, w9, [x19, #8]
   1dfec:	cmp	w8, w9
   1dff0:	b.cs	1e210 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x4bc>  // b.hs, b.nlast
   1dff4:	add	w8, w8, #0x1
   1dff8:	str	w8, [x19, #8]
   1dffc:	ldr	x0, [x21]
   1e000:	mov	w1, #0x2c                  	// #44
   1e004:	mov	x2, x19
   1e008:	mov	w3, w20
   1e00c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e010:	str	wzr, [x19, #8]
   1e014:	ldp	x20, x19, [sp, #48]
   1e018:	ldp	x22, x21, [sp, #32]
   1e01c:	ldr	x23, [sp, #16]
   1e020:	ldp	x29, x30, [sp], #64
   1e024:	ret
   1e028:	cmp	w11, #0x1f
   1e02c:	b.eq	1ddd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x80>  // b.none
   1e030:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e034:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e038:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e03c:	add	x0, x0, #0x0
   1e040:	add	x1, x1, #0x0
   1e044:	add	x3, x3, #0x0
   1e048:	mov	w2, #0x134                 	// #308
   1e04c:	bl	0 <__assert_fail>
   1e050:	cmp	w11, #0x1f
   1e054:	b.eq	1dddc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x88>  // b.none
   1e058:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e05c:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e060:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e064:	add	x0, x0, #0x0
   1e068:	add	x1, x1, #0x0
   1e06c:	add	x3, x3, #0x0
   1e070:	mov	w2, #0x108                 	// #264
   1e074:	bl	0 <__assert_fail>
   1e078:	add	x1, x19, #0x10
   1e07c:	mov	w3, #0x8                   	// #8
   1e080:	mov	x0, x19
   1e084:	mov	x2, xzr
   1e088:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e08c:	ldr	w8, [x19, #8]
   1e090:	b	1dd94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x40>
   1e094:	add	x1, x19, #0x10
   1e098:	mov	w3, #0x8                   	// #8
   1e09c:	mov	x0, x19
   1e0a0:	mov	x2, xzr
   1e0a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e0a8:	ldr	w8, [x19, #8]
   1e0ac:	b	1dfe0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x28c>
   1e0b0:	mov	w15, #0x1                   	// #1
   1e0b4:	cmn	x14, #0x4
   1e0b8:	b.eq	1e0e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x38c>  // b.none
   1e0bc:	add	w12, w12, w15
   1e0c0:	and	w12, w12, w13
   1e0c4:	lsl	x14, x12, #4
   1e0c8:	ldr	x14, [x11, x14]
   1e0cc:	add	w15, w15, #0x1
   1e0d0:	cmp	x14, x10
   1e0d4:	b.ne	1e0b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x360>  // b.any
   1e0d8:	mov	w12, w12
   1e0dc:	b	1de14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0xc0>
   1e0e0:	mov	x23, xzr
   1e0e4:	cmp	w8, w9
   1e0e8:	b.cc	1de24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0xd0>  // b.lo, b.ul, b.last
   1e0ec:	add	x1, x19, #0x10
   1e0f0:	mov	w3, #0x8                   	// #8
   1e0f4:	mov	x0, x19
   1e0f8:	mov	x2, xzr
   1e0fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e100:	ldr	w8, [x19, #8]
   1e104:	b	1de24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0xd0>
   1e108:	mov	w15, #0x1                   	// #1
   1e10c:	cmn	x14, #0x4
   1e110:	b.eq	1e138 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x3e4>  // b.none
   1e114:	add	w12, w12, w15
   1e118:	and	w12, w12, w13
   1e11c:	lsl	x14, x12, #4
   1e120:	ldr	x14, [x11, x14]
   1e124:	add	w15, w15, #0x1
   1e128:	cmp	x14, x10
   1e12c:	b.ne	1e10c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x3b8>  // b.any
   1e130:	mov	w12, w12
   1e134:	b	1de9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x148>
   1e138:	mov	x23, xzr
   1e13c:	cmp	w8, w9
   1e140:	b.cc	1deac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x158>  // b.lo, b.ul, b.last
   1e144:	add	x1, x19, #0x10
   1e148:	mov	w3, #0x8                   	// #8
   1e14c:	mov	x0, x19
   1e150:	mov	x2, xzr
   1e154:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e158:	ldr	w8, [x19, #8]
   1e15c:	b	1deac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x158>
   1e160:	mov	w15, #0x1                   	// #1
   1e164:	cmn	x14, #0x4
   1e168:	b.eq	1e190 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x43c>  // b.none
   1e16c:	add	w12, w12, w15
   1e170:	and	w12, w12, w13
   1e174:	lsl	x14, x12, #4
   1e178:	ldr	x14, [x11, x14]
   1e17c:	add	w15, w15, #0x1
   1e180:	cmp	x14, x10
   1e184:	b.ne	1e164 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x410>  // b.any
   1e188:	mov	w12, w12
   1e18c:	b	1df20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x1cc>
   1e190:	mov	x23, xzr
   1e194:	cmp	w8, w9
   1e198:	b.cc	1df30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x1dc>  // b.lo, b.ul, b.last
   1e19c:	add	x1, x19, #0x10
   1e1a0:	mov	w3, #0x8                   	// #8
   1e1a4:	mov	x0, x19
   1e1a8:	mov	x2, xzr
   1e1ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e1b0:	ldr	w8, [x19, #8]
   1e1b4:	b	1df30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x1dc>
   1e1b8:	mov	w15, #0x1                   	// #1
   1e1bc:	cmn	x14, #0x4
   1e1c0:	b.eq	1e1e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x494>  // b.none
   1e1c4:	add	w12, w12, w15
   1e1c8:	and	w12, w12, w13
   1e1cc:	lsl	x14, x12, #4
   1e1d0:	ldr	x14, [x11, x14]
   1e1d4:	add	w15, w15, #0x1
   1e1d8:	cmp	x14, x10
   1e1dc:	b.ne	1e1bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x468>  // b.any
   1e1e0:	mov	w12, w12
   1e1e4:	b	1dfa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x254>
   1e1e8:	mov	x23, xzr
   1e1ec:	cmp	w8, w9
   1e1f0:	b.cc	1dfb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x264>  // b.lo, b.ul, b.last
   1e1f4:	add	x1, x19, #0x10
   1e1f8:	mov	w3, #0x8                   	// #8
   1e1fc:	mov	x0, x19
   1e200:	mov	x2, xzr
   1e204:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e208:	ldr	w8, [x19, #8]
   1e20c:	b	1dfb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter18writeDICommonBlockEPKN4llvm13DICommonBlockERNS1_15SmallVectorImplImEEj+0x264>
   1e210:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e214:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e218:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e21c:	add	x0, x0, #0x0
   1e220:	add	x1, x1, #0x0
   1e224:	add	x3, x3, #0x0
   1e228:	mov	w2, #0x43                  	// #67
   1e22c:	bl	0 <__assert_fail>
   1e230:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e234:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e238:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e23c:	add	x0, x0, #0x0
   1e240:	add	x1, x1, #0x0
   1e244:	add	x3, x3, #0x0
   1e248:	mov	w2, #0x252                 	// #594
   1e24c:	bl	0 <__assert_fail>
   1e250:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e254:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e258:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e25c:	add	x0, x0, #0x0
   1e260:	add	x1, x1, #0x0
   1e264:	add	x3, x3, #0x0
   1e268:	mov	w2, #0x436                 	// #1078
   1e26c:	bl	0 <__assert_fail>
   1e270:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e274:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e278:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e27c:	add	x0, x0, #0x0
   1e280:	add	x1, x1, #0x0
   1e284:	add	x3, x3, #0x0
   1e288:	mov	w2, #0x134                 	// #308
   1e28c:	bl	0 <__assert_fail>
   1e290:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e294:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e298:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e29c:	add	x0, x0, #0x0
   1e2a0:	add	x1, x1, #0x0
   1e2a4:	add	x3, x3, #0x0
   1e2a8:	mov	w2, #0x121                 	// #289
   1e2ac:	bl	0 <__assert_fail>
   1e2b0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e2b4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e2b8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e2bc:	add	x0, x0, #0x0
   1e2c0:	add	x1, x1, #0x0
   1e2c4:	add	x3, x3, #0x0
   1e2c8:	mov	w2, #0x134                 	// #308
   1e2cc:	bl	0 <__assert_fail>

000000000001e2d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE>:
   1e2d0:	sub	sp, sp, #0xa0
   1e2d4:	stp	x29, x30, [sp, #80]
   1e2d8:	str	x25, [sp, #96]
   1e2dc:	stp	x24, x23, [sp, #112]
   1e2e0:	stp	x22, x21, [sp, #128]
   1e2e4:	stp	x20, x19, [sp, #144]
   1e2e8:	add	x29, sp, #0x50
   1e2ec:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e2f0:	ldr	d0, [x8]
   1e2f4:	mov	x8, sp
   1e2f8:	mov	x19, x1
   1e2fc:	mov	x22, x0
   1e300:	add	x23, x8, #0x10
   1e304:	mov	x1, sp
   1e308:	mov	x0, x2
   1e30c:	str	x23, [sp]
   1e310:	str	d0, [sp, #8]
   1e314:	bl	0 <_ZNK4llvm12GlobalObject14getAllMetadataERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
   1e318:	ldr	w10, [sp, #8]
   1e31c:	ldr	x20, [sp]
   1e320:	cbz	w10, 1e3e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x110>
   1e324:	ldp	w8, w9, [x19, #8]
   1e328:	add	x24, x20, x10, lsl #4
   1e32c:	add	x21, x19, #0x10
   1e330:	add	x22, x22, #0x18
   1e334:	ldr	w25, [x20]
   1e338:	cmp	w8, w9
   1e33c:	b.cs	1e3a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0xd4>  // b.hs, b.nlast
   1e340:	ldr	x9, [x19]
   1e344:	str	x25, [x9, w8, uxtw #3]
   1e348:	ldp	w8, w9, [x19, #8]
   1e34c:	cmp	w8, w9
   1e350:	b.cs	1e40c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x13c>  // b.hs, b.nlast
   1e354:	add	w8, w8, #0x1
   1e358:	str	w8, [x19, #8]
   1e35c:	ldr	x1, [x20, #8]
   1e360:	mov	x0, x22
   1e364:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e368:	ldp	w8, w9, [x19, #8]
   1e36c:	mov	w25, w0
   1e370:	cmp	w8, w9
   1e374:	b.cs	1e3c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0xf0>  // b.hs, b.nlast
   1e378:	ldr	x9, [x19]
   1e37c:	str	x25, [x9, w8, uxtw #3]
   1e380:	ldp	w8, w9, [x19, #8]
   1e384:	cmp	w8, w9
   1e388:	b.cs	1e40c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x13c>  // b.hs, b.nlast
   1e38c:	add	x20, x20, #0x10
   1e390:	add	w8, w8, #0x1
   1e394:	cmp	x20, x24
   1e398:	str	w8, [x19, #8]
   1e39c:	b.ne	1e334 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x64>  // b.any
   1e3a0:	b	1e3dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x10c>
   1e3a4:	mov	w3, #0x8                   	// #8
   1e3a8:	mov	x0, x19
   1e3ac:	mov	x1, x21
   1e3b0:	mov	x2, xzr
   1e3b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e3b8:	ldr	w8, [x19, #8]
   1e3bc:	b	1e340 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x70>
   1e3c0:	mov	w3, #0x8                   	// #8
   1e3c4:	mov	x0, x19
   1e3c8:	mov	x1, x21
   1e3cc:	mov	x2, xzr
   1e3d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e3d4:	ldr	w8, [x19, #8]
   1e3d8:	b	1e378 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0xa8>
   1e3dc:	ldr	x20, [sp]
   1e3e0:	cmp	x20, x23
   1e3e4:	b.eq	1e3f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter28pushGlobalMetadataAttachmentERN4llvm15SmallVectorImplImEERKNS1_12GlobalObjectE+0x120>  // b.none
   1e3e8:	mov	x0, x20
   1e3ec:	bl	0 <free>
   1e3f0:	ldp	x20, x19, [sp, #144]
   1e3f4:	ldp	x22, x21, [sp, #128]
   1e3f8:	ldp	x24, x23, [sp, #112]
   1e3fc:	ldr	x25, [sp, #96]
   1e400:	ldp	x29, x30, [sp, #80]
   1e404:	add	sp, sp, #0xa0
   1e408:	ret
   1e40c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e410:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e414:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e418:	add	x0, x0, #0x0
   1e41c:	add	x1, x1, #0x0
   1e420:	add	x3, x3, #0x0
   1e424:	mov	w2, #0x43                  	// #67
   1e428:	bl	0 <__assert_fail>

000000000001e42c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE>:
   1e42c:	stp	x29, x30, [sp, #-96]!
   1e430:	stp	x28, x27, [sp, #16]
   1e434:	stp	x26, x25, [sp, #32]
   1e438:	stp	x24, x23, [sp, #48]
   1e43c:	stp	x22, x21, [sp, #64]
   1e440:	stp	x20, x19, [sp, #80]
   1e444:	mov	x29, sp
   1e448:	sub	sp, sp, #0x440
   1e44c:	str	x0, [sp, #24]
   1e450:	add	x0, x0, #0x18
   1e454:	mov	x20, x3
   1e458:	mov	w23, w2
   1e45c:	mov	x21, x1
   1e460:	str	x0, [sp, #32]
   1e464:	bl	0 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE>
   1e468:	mov	x27, x21
   1e46c:	ldrb	w8, [x27, #16]!
   1e470:	sub	w9, w8, #0x19
   1e474:	cmp	w9, #0x42
   1e478:	b.hi	1ee3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xa10>  // b.pmore
   1e47c:	adrp	x10, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e480:	add	x10, x10, #0x0
   1e484:	adr	x11, 1e4a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x74>
   1e488:	ldrh	w12, [x10, x9, lsl #1]
   1e48c:	add	x11, x11, x12, lsl #2
   1e490:	mov	w24, #0xf                   	// #15
   1e494:	mov	w25, #0xc                   	// #12
   1e498:	mov	w22, w23
   1e49c:	br	x11
   1e4a0:	ldur	x1, [x21, #-24]
   1e4a4:	ldr	x0, [sp, #32]
   1e4a8:	cmp	w8, #0x4c
   1e4ac:	mov	w8, #0x32                  	// #50
   1e4b0:	cinc	w24, w8, ne  // ne = any
   1e4b4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1e4b8:	ldp	w8, w9, [x20, #8]
   1e4bc:	sub	w19, w23, w0
   1e4c0:	cmp	w8, w9
   1e4c4:	b.cs	23830 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5404>  // b.hs, b.nlast
   1e4c8:	ldr	x9, [x20]
   1e4cc:	str	w19, [x9, w8, uxtw #2]
   1e4d0:	ldp	w8, w9, [x20, #8]
   1e4d4:	cmp	w8, w9
   1e4d8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1e4dc:	add	w8, w8, #0x1
   1e4e0:	str	w8, [x20, #8]
   1e4e4:	ldr	w10, [x21, #20]
   1e4e8:	cmp	w8, w9
   1e4ec:	and	w10, w10, #0xfffffff
   1e4f0:	sub	w28, w10, #0x1
   1e4f4:	b.cs	2384c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5420>  // b.hs, b.nlast
   1e4f8:	ldr	x9, [x20]
   1e4fc:	str	w28, [x9, w8, uxtw #2]
   1e500:	ldp	w8, w9, [x20, #8]
   1e504:	cmp	w8, w9
   1e508:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1e50c:	add	w8, w8, #0x1
   1e510:	str	w8, [x20, #8]
   1e514:	cbz	w28, 22044 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c18>
   1e518:	mov	x25, xzr
   1e51c:	add	x8, x20, #0x10
   1e520:	mov	w19, #0x18                  	// #24
   1e524:	str	x8, [sp, #16]
   1e528:	b	1e558 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x12c>
   1e52c:	ldr	x9, [x20]
   1e530:	str	w23, [x9, w8, uxtw #2]
   1e534:	ldp	w8, w9, [x20, #8]
   1e538:	cmp	w8, w9
   1e53c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1e540:	add	w8, w8, #0x1
   1e544:	mov	w23, w22
   1e548:	str	w8, [x20, #8]
   1e54c:	add	x25, x25, #0x1
   1e550:	cmp	x25, x28
   1e554:	b.eq	22044 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c18>  // b.none
   1e558:	ldr	w8, [x21, #20]
   1e55c:	and	x8, x8, #0xfffffff
   1e560:	cmp	x25, x8
   1e564:	b.cs	2473c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6310>  // b.hs, b.nlast
   1e568:	mneg	x8, x8, x19
   1e56c:	add	x8, x21, x8
   1e570:	mul	x9, x25, x19
   1e574:	ldr	x26, [x8, x9]
   1e578:	ldr	x0, [sp, #32]
   1e57c:	mov	x1, x26
   1e580:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1e584:	ldp	w8, w9, [x20, #8]
   1e588:	mov	w27, w0
   1e58c:	sub	w23, w23, w0
   1e590:	cmp	w8, w9
   1e594:	b.cs	1e668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x23c>  // b.hs, b.nlast
   1e598:	ldr	x9, [x20]
   1e59c:	str	w23, [x9, w8, uxtw #2]
   1e5a0:	ldp	w8, w9, [x20, #8]
   1e5a4:	cmp	w8, w9
   1e5a8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1e5ac:	add	w8, w8, #0x1
   1e5b0:	mov	w23, w22
   1e5b4:	cmp	w27, w22
   1e5b8:	str	w8, [x20, #8]
   1e5bc:	b.cc	1e54c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x120>  // b.lo, b.ul, b.last
   1e5c0:	ldr	x11, [sp, #24]
   1e5c4:	ldr	w10, [x11, #72]
   1e5c8:	ldr	x11, [x11, #56]
   1e5cc:	cbz	w10, 1e62c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x200>
   1e5d0:	ldr	x12, [x26]
   1e5d4:	orr	x13, x12, #0x8
   1e5d8:	cmn	x13, #0x8
   1e5dc:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1e5e0:	ubfx	x13, x12, #4, #28
   1e5e4:	eor	w14, w13, w12, lsr #9
   1e5e8:	sub	w13, w10, #0x1
   1e5ec:	and	w14, w14, w13
   1e5f0:	add	x15, x11, w14, uxtw #4
   1e5f4:	ldr	x16, [x15]
   1e5f8:	cmp	x16, x12
   1e5fc:	b.eq	1e630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x204>  // b.none
   1e600:	mov	w17, #0x1                   	// #1
   1e604:	cmn	x16, #0x8
   1e608:	b.eq	1e62c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x200>  // b.none
   1e60c:	add	w14, w14, w17
   1e610:	and	w14, w14, w13
   1e614:	add	x15, x11, w14, uxtw #4
   1e618:	ldr	x16, [x15]
   1e61c:	add	w17, w17, #0x1
   1e620:	cmp	x16, x12
   1e624:	b.eq	1e630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x204>  // b.none
   1e628:	b	1e604 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d8>
   1e62c:	add	x15, x11, x10, lsl #4
   1e630:	add	x10, x11, x10, lsl #4
   1e634:	cmp	x15, x10
   1e638:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   1e63c:	ldr	w10, [x15, #8]
   1e640:	cmp	w8, w9
   1e644:	sub	w23, w10, #0x1
   1e648:	b.cc	1e52c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x100>  // b.lo, b.ul, b.last
   1e64c:	ldr	x1, [sp, #16]
   1e650:	mov	w3, #0x4                   	// #4
   1e654:	mov	x0, x20
   1e658:	mov	x2, xzr
   1e65c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e660:	ldr	w8, [x20, #8]
   1e664:	b	1e52c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x100>
   1e668:	ldr	x1, [sp, #16]
   1e66c:	mov	w3, #0x4                   	// #4
   1e670:	mov	x0, x20
   1e674:	mov	x2, xzr
   1e678:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e67c:	ldr	w8, [x20, #8]
   1e680:	b	1e598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16c>
   1e684:	ldr	w9, [x21, #20]
   1e688:	and	x8, x9, #0xfffffff
   1e68c:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1e690:	ldr	x22, [sp, #32]
   1e694:	tbnz	w9, #30, 1ed84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x958>
   1e698:	mov	w9, #0x18                  	// #24
   1e69c:	mneg	x8, x8, x9
   1e6a0:	add	x8, x21, x8
   1e6a4:	b	1ed88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x95c>
   1e6a8:	ldr	x9, [sp, #24]
   1e6ac:	ldr	w8, [x9, #72]
   1e6b0:	ldr	x9, [x9, #56]
   1e6b4:	cbz	w8, 1fb54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1728>
   1e6b8:	ldr	x10, [x21]
   1e6bc:	ldr	x22, [sp, #32]
   1e6c0:	orr	x11, x10, #0x8
   1e6c4:	cmn	x11, #0x8
   1e6c8:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1e6cc:	ubfx	x11, x10, #4, #28
   1e6d0:	eor	w12, w11, w10, lsr #9
   1e6d4:	sub	w11, w8, #0x1
   1e6d8:	and	w12, w12, w11
   1e6dc:	add	x13, x9, w12, uxtw #4
   1e6e0:	ldr	x14, [x13]
   1e6e4:	cmp	x14, x10
   1e6e8:	b.eq	1fb5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1730>  // b.none
   1e6ec:	ldr	x22, [sp, #32]
   1e6f0:	mov	w15, #0x1                   	// #1
   1e6f4:	cmn	x14, #0x8
   1e6f8:	b.eq	1fb54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1728>  // b.none
   1e6fc:	add	w12, w12, w15
   1e700:	and	w12, w12, w11
   1e704:	add	x13, x9, w12, uxtw #4
   1e708:	ldr	x14, [x13]
   1e70c:	add	w15, w15, #0x1
   1e710:	cmp	x14, x10
   1e714:	b.eq	1fb5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1730>  // b.none
   1e718:	b	1e6f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c8>
   1e71c:	ldr	w9, [x21, #20]
   1e720:	and	x8, x9, #0xfffffff
   1e724:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1e728:	ldr	x22, [sp, #32]
   1e72c:	tbnz	w9, #30, 1ee6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xa40>
   1e730:	mov	w9, #0x18                  	// #24
   1e734:	mneg	x8, x8, x9
   1e738:	add	x8, x21, x8
   1e73c:	b	1ee70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xa44>
   1e740:	ldr	w9, [x21, #20]
   1e744:	and	x8, x9, #0xfffffff
   1e748:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1e74c:	ldr	x22, [sp, #32]
   1e750:	tbnz	w9, #30, 1ef24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xaf8>
   1e754:	mov	w9, #0x18                  	// #24
   1e758:	mneg	x8, x8, x9
   1e75c:	add	x10, x21, x8
   1e760:	b	1ef28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xafc>
   1e764:	ldr	w9, [x21, #20]
   1e768:	and	x8, x9, #0xfffffff
   1e76c:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1e770:	ldr	x22, [sp, #32]
   1e774:	tbnz	w9, #30, 1ef98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xb6c>
   1e778:	mov	w9, #0x18                  	// #24
   1e77c:	mneg	x8, x8, x9
   1e780:	add	x8, x21, x8
   1e784:	b	1ef9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xb70>
   1e788:	mov	x0, x21
   1e78c:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
   1e790:	ldr	w9, [x21, #20]
   1e794:	and	x8, x9, #0xfffffff
   1e798:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1e79c:	mov	w24, w0
   1e7a0:	ldr	x0, [sp, #32]
   1e7a4:	tbnz	w9, #30, 1f050 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xc24>
   1e7a8:	mov	w9, #0x18                  	// #24
   1e7ac:	mneg	x8, x8, x9
   1e7b0:	add	x8, x21, x8
   1e7b4:	b	1f054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xc28>
   1e7b8:	ldur	x1, [x21, #-48]
   1e7bc:	cbz	x1, 24a6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6640>
   1e7c0:	ldrb	w8, [x1, #16]
   1e7c4:	ldr	x22, [sp, #32]
   1e7c8:	cmp	w8, #0x4c
   1e7cc:	b.ne	24a8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6660>  // b.any
   1e7d0:	mov	x0, x22
   1e7d4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1e7d8:	ldp	w8, w9, [x20, #8]
   1e7dc:	sub	w19, w23, w0
   1e7e0:	cmp	w8, w9
   1e7e4:	b.cs	238d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x54ac>  // b.hs, b.nlast
   1e7e8:	ldr	x9, [x20]
   1e7ec:	str	w19, [x9, w8, uxtw #2]
   1e7f0:	ldp	w8, w9, [x20, #8]
   1e7f4:	cmp	w8, w9
   1e7f8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1e7fc:	add	w8, w8, #0x1
   1e800:	str	w8, [x20, #8]
   1e804:	ldur	x1, [x21, #-24]
   1e808:	cbz	x1, 248f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64c8>
   1e80c:	ldrb	w8, [x1, #16]
   1e810:	cmp	w8, #0x12
   1e814:	b.ne	24914 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64e8>  // b.any
   1e818:	mov	x0, x22
   1e81c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1e820:	ldp	w8, w9, [x20, #8]
   1e824:	mov	w21, w0
   1e828:	cmp	w8, w9
   1e82c:	b.cs	238f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x54c8>  // b.hs, b.nlast
   1e830:	ldr	x9, [x20]
   1e834:	str	w21, [x9, w8, uxtw #2]
   1e838:	ldp	w8, w9, [x20, #8]
   1e83c:	cmp	w8, w9
   1e840:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1e844:	add	w8, w8, #0x1
   1e848:	mov	w25, wzr
   1e84c:	str	w8, [x20, #8]
   1e850:	mov	w24, #0x31                  	// #49
   1e854:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   1e858:	ldr	w9, [x21, #20]
   1e85c:	and	x8, x9, #0xfffffff
   1e860:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1e864:	ldr	x0, [sp, #32]
   1e868:	tbnz	w9, #30, 1f10c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xce0>
   1e86c:	mov	w9, #0x18                  	// #24
   1e870:	mneg	x8, x8, x9
   1e874:	add	x8, x21, x8
   1e878:	b	1f110 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xce4>
   1e87c:	mov	x26, x21
   1e880:	ldr	x24, [x26, #-24]!
   1e884:	ldr	w8, [x26, #44]
   1e888:	ldr	x28, [x26, #88]
   1e88c:	tbnz	w8, #31, 20a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x25e0>
   1e890:	mov	x25, xzr
   1e894:	mov	x8, xzr
   1e898:	b	222fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ed0>
   1e89c:	ldr	w9, [x21, #20]
   1e8a0:	and	x8, x9, #0xfffffff
   1e8a4:	cmp	w8, #0x1
   1e8a8:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   1e8ac:	ldr	x22, [sp, #32]
   1e8b0:	tbnz	w9, #30, 1f1c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xd9c>
   1e8b4:	mov	w9, #0x18                  	// #24
   1e8b8:	mneg	x8, x8, x9
   1e8bc:	add	x8, x21, x8
   1e8c0:	b	1f1cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xda0>
   1e8c4:	ldr	w9, [x21, #20]
   1e8c8:	and	x8, x9, #0xfffffff
   1e8cc:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1e8d0:	ldr	x22, [sp, #32]
   1e8d4:	tbnz	w9, #30, 1f280 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xe54>
   1e8d8:	mov	w9, #0x18                  	// #24
   1e8dc:	mneg	x8, x8, x9
   1e8e0:	add	x8, x21, x8
   1e8e4:	b	1f284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xe58>
   1e8e8:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1e8ec:	ldr	d0, [x8]
   1e8f0:	ldr	x9, [sp, #24]
   1e8f4:	add	x8, sp, #0x28
   1e8f8:	add	x20, x8, #0x10
   1e8fc:	str	x20, [sp, #40]
   1e900:	str	d0, [sp, #48]
   1e904:	ldr	w8, [x9, #72]
   1e908:	ldr	x9, [x9, #56]
   1e90c:	cbz	w8, 1ff80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b54>
   1e910:	ldr	x10, [x21]
   1e914:	ldr	x22, [sp, #32]
   1e918:	orr	x11, x10, #0x8
   1e91c:	cmn	x11, #0x8
   1e920:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1e924:	ubfx	x11, x10, #4, #28
   1e928:	eor	w12, w11, w10, lsr #9
   1e92c:	sub	w11, w8, #0x1
   1e930:	and	w12, w12, w11
   1e934:	add	x13, x9, w12, uxtw #4
   1e938:	ldr	x14, [x13]
   1e93c:	cmp	x14, x10
   1e940:	b.eq	1ff88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b5c>  // b.none
   1e944:	ldr	x22, [sp, #32]
   1e948:	mov	w15, #0x1                   	// #1
   1e94c:	cmn	x14, #0x8
   1e950:	b.eq	1ff80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b54>  // b.none
   1e954:	add	w12, w12, w15
   1e958:	and	w12, w12, w11
   1e95c:	add	x13, x9, w12, uxtw #4
   1e960:	ldr	x14, [x13]
   1e964:	add	w15, w15, #0x1
   1e968:	cmp	x14, x10
   1e96c:	b.eq	1ff88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b5c>  // b.none
   1e970:	b	1e94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x520>
   1e974:	ldr	x9, [sp, #24]
   1e978:	ldr	w8, [x9, #72]
   1e97c:	ldr	x9, [x9, #56]
   1e980:	cbz	w8, 20154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d28>
   1e984:	ldr	x10, [x21, #56]
   1e988:	ldr	x22, [sp, #32]
   1e98c:	orr	x11, x10, #0x8
   1e990:	cmn	x11, #0x8
   1e994:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1e998:	ubfx	x11, x10, #4, #28
   1e99c:	eor	w12, w11, w10, lsr #9
   1e9a0:	sub	w11, w8, #0x1
   1e9a4:	and	w12, w12, w11
   1e9a8:	add	x13, x9, w12, uxtw #4
   1e9ac:	ldr	x14, [x13]
   1e9b0:	cmp	x14, x10
   1e9b4:	b.eq	2015c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d30>  // b.none
   1e9b8:	ldr	x22, [sp, #32]
   1e9bc:	mov	w15, #0x1                   	// #1
   1e9c0:	cmn	x14, #0x8
   1e9c4:	b.eq	20154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d28>  // b.none
   1e9c8:	add	w12, w12, w15
   1e9cc:	and	w12, w12, w11
   1e9d0:	add	x13, x9, w12, uxtw #4
   1e9d4:	ldr	x14, [x13]
   1e9d8:	add	w15, w15, #0x1
   1e9dc:	cmp	x14, x10
   1e9e0:	b.eq	2015c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d30>  // b.none
   1e9e4:	b	1e9c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x594>
   1e9e8:	ldr	w8, [x21, #20]
   1e9ec:	and	x27, x8, #0xfffffff
   1e9f0:	cbz	w27, 20b50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2724>
   1e9f4:	cmp	w27, #0x1
   1e9f8:	b.ne	20b58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x272c>  // b.any
   1e9fc:	ldr	x0, [sp, #32]
   1ea00:	tbnz	w8, #30, 22230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3e04>
   1ea04:	sub	x8, x21, #0x18
   1ea08:	b	22234 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3e08>
   1ea0c:	ldur	x1, [x21, #-24]
   1ea10:	cbz	x1, 20a28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x25fc>
   1ea14:	ldrb	w8, [x1, #16]
   1ea18:	ldr	x19, [sp, #32]
   1ea1c:	cmp	w8, #0x12
   1ea20:	b.eq	20a2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2600>  // b.none
   1ea24:	b	24b9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6770>
   1ea28:	ldr	w9, [x21, #20]
   1ea2c:	and	x8, x9, #0xfffffff
   1ea30:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1ea34:	ldr	x22, [sp, #32]
   1ea38:	tbnz	w9, #30, 1f338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xf0c>
   1ea3c:	mov	w9, #0x18                  	// #24
   1ea40:	mneg	x8, x8, x9
   1ea44:	add	x10, x21, x8
   1ea48:	b	1f33c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xf10>
   1ea4c:	ldr	w9, [x21, #20]
   1ea50:	and	x8, x9, #0xfffffff
   1ea54:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1ea58:	ldr	x0, [sp, #32]
   1ea5c:	tbnz	w9, #30, 1f3ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xf80>
   1ea60:	mov	w9, #0x18                  	// #24
   1ea64:	mneg	x8, x8, x9
   1ea68:	add	x8, x21, x8
   1ea6c:	b	1f3b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xf84>
   1ea70:	ldr	w9, [x21, #20]
   1ea74:	and	x8, x9, #0xfffffff
   1ea78:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1ea7c:	ldr	x22, [sp, #32]
   1ea80:	tbnz	w9, #30, 1f3fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xfd0>
   1ea84:	mov	w9, #0x18                  	// #24
   1ea88:	mneg	x8, x8, x9
   1ea8c:	add	x8, x21, x8
   1ea90:	b	1f400 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xfd4>
   1ea94:	ldr	w9, [x21, #20]
   1ea98:	and	x8, x9, #0xfffffff
   1ea9c:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1eaa0:	ldr	x22, [sp, #32]
   1eaa4:	tbnz	w9, #30, 1f4b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1088>
   1eaa8:	mov	w9, #0x18                  	// #24
   1eaac:	mneg	x8, x8, x9
   1eab0:	add	x8, x21, x8
   1eab4:	b	1f4b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x108c>
   1eab8:	ldur	x24, [x21, #-24]
   1eabc:	ldr	w8, [x21, #20]
   1eac0:	ldr	x26, [x21, #64]
   1eac4:	tbnz	w8, #31, 20b18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x26ec>
   1eac8:	mov	x25, xzr
   1eacc:	mov	x8, xzr
   1ead0:	b	22994 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4568>
   1ead4:	ldr	w9, [x21, #20]
   1ead8:	and	x8, x9, #0xfffffff
   1eadc:	cbz	w8, 2475c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6330>
   1eae0:	ldr	x22, [sp, #32]
   1eae4:	tbnz	w9, #30, 1f5d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x11ac>
   1eae8:	mov	w9, #0x18                  	// #24
   1eaec:	mneg	x8, x8, x9
   1eaf0:	add	x10, x21, x8
   1eaf4:	b	1f5dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x11b0>
   1eaf8:	mov	x0, x21
   1eafc:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
   1eb00:	ldr	w9, [x21, #20]
   1eb04:	tst	w0, #0x1
   1eb08:	mov	w8, #0x2c                  	// #44
   1eb0c:	cinc	w24, w8, ne  // ne = any
   1eb10:	and	x8, x9, #0xfffffff
   1eb14:	cmp	w8, #0x1
   1eb18:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   1eb1c:	ldr	x22, [sp, #32]
   1eb20:	tbnz	w9, #30, 1f64c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1220>
   1eb24:	mov	w9, #0x18                  	// #24
   1eb28:	mneg	x8, x8, x9
   1eb2c:	add	x8, x21, x8
   1eb30:	b	1f650 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1224>
   1eb34:	mov	x0, x21
   1eb38:	bl	0 <_ZNK4llvm17GetElementPtrInst10isInBoundsEv>
   1eb3c:	ldp	w8, w9, [x20, #8]
   1eb40:	and	w19, w0, #0x1
   1eb44:	cmp	w8, w9
   1eb48:	b.cs	23910 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x54e4>  // b.hs, b.nlast
   1eb4c:	ldr	x9, [x20]
   1eb50:	ldr	x22, [sp, #32]
   1eb54:	str	w19, [x9, w8, uxtw #2]
   1eb58:	ldp	w8, w9, [x20, #8]
   1eb5c:	cmp	w8, w9
   1eb60:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1eb64:	ldr	x11, [sp, #24]
   1eb68:	add	w8, w8, #0x1
   1eb6c:	str	w8, [x20, #8]
   1eb70:	ldr	w10, [x11, #72]
   1eb74:	ldr	x11, [x11, #56]
   1eb78:	cbz	w10, 2071c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x22f0>
   1eb7c:	ldr	x12, [x21, #56]
   1eb80:	orr	x13, x12, #0x8
   1eb84:	cmn	x13, #0x8
   1eb88:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1eb8c:	ubfx	x13, x12, #4, #28
   1eb90:	eor	w14, w13, w12, lsr #9
   1eb94:	sub	w13, w10, #0x1
   1eb98:	and	w14, w14, w13
   1eb9c:	add	x15, x11, w14, uxtw #4
   1eba0:	ldr	x16, [x15]
   1eba4:	cmp	x16, x12
   1eba8:	b.eq	20720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x22f4>  // b.none
   1ebac:	mov	w17, #0x1                   	// #1
   1ebb0:	cmn	x16, #0x8
   1ebb4:	b.eq	2071c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x22f0>  // b.none
   1ebb8:	add	w14, w14, w17
   1ebbc:	and	w14, w14, w13
   1ebc0:	add	x15, x11, w14, uxtw #4
   1ebc4:	ldr	x16, [x15]
   1ebc8:	add	w17, w17, #0x1
   1ebcc:	cmp	x16, x12
   1ebd0:	b.eq	20720 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x22f4>  // b.none
   1ebd4:	b	1ebb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x784>
   1ebd8:	ldr	w9, [x21, #20]
   1ebdc:	and	x8, x9, #0xfffffff
   1ebe0:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1ebe4:	ldr	x0, [sp, #32]
   1ebe8:	tbnz	w9, #30, 1f704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x12d8>
   1ebec:	mov	w9, #0x18                  	// #24
   1ebf0:	mneg	x8, x8, x9
   1ebf4:	add	x8, x21, x8
   1ebf8:	b	1f708 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x12dc>
   1ebfc:	ldr	w8, [x21, #20]
   1ec00:	mov	w9, #0x18                  	// #24
   1ec04:	and	x8, x8, #0xfffffff
   1ec08:	mneg	x8, x8, x9
   1ec0c:	ldr	x1, [x21, x8]
   1ec10:	cbz	x1, 24aac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6680>
   1ec14:	ldrb	w8, [x1, #16]
   1ec18:	ldr	x22, [sp, #32]
   1ec1c:	cmp	w8, #0x4b
   1ec20:	b.ne	24acc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x66a0>  // b.any
   1ec24:	mov	x0, x22
   1ec28:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1ec2c:	ldp	w8, w9, [x20, #8]
   1ec30:	sub	w19, w23, w0
   1ec34:	cmp	w8, w9
   1ec38:	b.cs	2392c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5500>  // b.hs, b.nlast
   1ec3c:	ldr	x9, [x20]
   1ec40:	str	w19, [x9, w8, uxtw #2]
   1ec44:	ldp	w8, w9, [x20, #8]
   1ec48:	cmp	w8, w9
   1ec4c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1ec50:	add	w8, w8, #0x1
   1ec54:	str	w8, [x20, #8]
   1ec58:	ldrb	w8, [x21, #18]
   1ec5c:	tbnz	w8, #0, 1f9dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x15b0>
   1ec60:	mov	w25, wzr
   1ec64:	mov	w24, #0x30                  	// #48
   1ec68:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   1ec6c:	ldr	w9, [x21, #20]
   1ec70:	and	x8, x9, #0xfffffff
   1ec74:	cbz	w8, 24a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65e8>
   1ec78:	ldr	x22, [sp, #32]
   1ec7c:	tbnz	w9, #30, 1f758 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x132c>
   1ec80:	mov	w9, #0x18                  	// #24
   1ec84:	mneg	x8, x8, x9
   1ec88:	add	x8, x21, x8
   1ec8c:	b	1f75c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1330>
   1ec90:	ldr	w8, [x21, #20]
   1ec94:	ldr	x28, [x21, #64]
   1ec98:	tbnz	w8, #31, 20b34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2708>
   1ec9c:	mov	x24, xzr
   1eca0:	mov	x8, xzr
   1eca4:	b	22f94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b68>
   1eca8:	ldr	w9, [x21, #20]
   1ecac:	and	x8, x9, #0xfffffff
   1ecb0:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1ecb4:	ldr	x0, [sp, #32]
   1ecb8:	tbnz	w9, #30, 1f870 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1444>
   1ecbc:	mov	w9, #0x18                  	// #24
   1ecc0:	mneg	x8, x8, x9
   1ecc4:	add	x8, x21, x8
   1ecc8:	b	1f874 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1448>
   1eccc:	ldr	w9, [x21, #20]
   1ecd0:	and	x8, x9, #0xfffffff
   1ecd4:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1ecd8:	ldr	x22, [sp, #32]
   1ecdc:	tbnz	w9, #30, 1f924 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x14f8>
   1ece0:	mov	w9, #0x18                  	// #24
   1ece4:	mneg	x8, x8, x9
   1ece8:	add	x8, x21, x8
   1ecec:	b	1f928 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x14fc>
   1ecf0:	ldrh	w9, [x21, #18]
   1ecf4:	ubfx	w8, w9, #1, #14
   1ecf8:	cmp	w8, #0x8
   1ecfc:	b.cs	248bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6490>  // b.hs, b.nlast
   1ed00:	lsr	w9, w9, #1
   1ed04:	mov	w10, #0xf7                  	// #247
   1ed08:	lsr	w9, w10, w9
   1ed0c:	tbz	w9, #0, 248bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6490>
   1ed10:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   1ed14:	ldp	w9, w10, [x20, #8]
   1ed18:	add	x11, x11, #0x0
   1ed1c:	ldr	w19, [x11, w8, uxtw #2]
   1ed20:	cmp	w9, w10
   1ed24:	b.cs	23948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x551c>  // b.hs, b.nlast
   1ed28:	ldr	x8, [x20]
   1ed2c:	str	w19, [x8, w9, uxtw #2]
   1ed30:	ldp	w8, w9, [x20, #8]
   1ed34:	cmp	w8, w9
   1ed38:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1ed3c:	add	w8, w8, #0x1
   1ed40:	str	w8, [x20, #8]
   1ed44:	ldrb	w10, [x27]
   1ed48:	cmp	w10, #0x3b
   1ed4c:	b.ne	24aec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x66c0>  // b.any
   1ed50:	ldrb	w19, [x21, #56]
   1ed54:	cmp	w8, w9
   1ed58:	b.cs	23964 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5538>  // b.hs, b.nlast
   1ed5c:	ldr	x9, [x20]
   1ed60:	str	w19, [x9, w8, uxtw #2]
   1ed64:	ldp	w8, w9, [x20, #8]
   1ed68:	cmp	w8, w9
   1ed6c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1ed70:	add	w8, w8, #0x1
   1ed74:	mov	w25, wzr
   1ed78:	str	w8, [x20, #8]
   1ed7c:	mov	w24, #0x24                  	// #36
   1ed80:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   1ed84:	ldur	x8, [x21, #-8]
   1ed88:	ldr	x24, [x8]
   1ed8c:	mov	x0, x22
   1ed90:	mov	x1, x24
   1ed94:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1ed98:	ldp	w8, w9, [x20, #8]
   1ed9c:	mov	w25, w0
   1eda0:	sub	w19, w23, w0
   1eda4:	cmp	w8, w9
   1eda8:	b.cs	23868 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x543c>  // b.hs, b.nlast
   1edac:	ldr	x9, [x20]
   1edb0:	str	w19, [x9, w8, uxtw #2]
   1edb4:	ldp	w8, w9, [x20, #8]
   1edb8:	cmp	w8, w9
   1edbc:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1edc0:	add	w8, w8, #0x1
   1edc4:	cmp	w25, w23
   1edc8:	str	w8, [x20, #8]
   1edcc:	b.cc	20920 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24f4>  // b.lo, b.ul, b.last
   1edd0:	ldr	x11, [sp, #24]
   1edd4:	ldr	w10, [x11, #72]
   1edd8:	ldr	x11, [x11, #56]
   1eddc:	cbz	w10, 208e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24b8>
   1ede0:	ldr	x12, [x24]
   1ede4:	orr	x13, x12, #0x8
   1ede8:	cmn	x13, #0x8
   1edec:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1edf0:	ubfx	x13, x12, #4, #28
   1edf4:	eor	w14, w13, w12, lsr #9
   1edf8:	sub	w13, w10, #0x1
   1edfc:	and	w14, w14, w13
   1ee00:	add	x15, x11, w14, uxtw #4
   1ee04:	ldr	x16, [x15]
   1ee08:	cmp	x16, x12
   1ee0c:	b.eq	208e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24bc>  // b.none
   1ee10:	mov	w17, #0x1                   	// #1
   1ee14:	cmn	x16, #0x8
   1ee18:	b.eq	208e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24b8>  // b.none
   1ee1c:	add	w14, w14, w17
   1ee20:	and	w14, w14, w13
   1ee24:	add	x15, x11, w14, uxtw #4
   1ee28:	ldr	x16, [x15]
   1ee2c:	add	w17, w17, #0x1
   1ee30:	cmp	x16, x12
   1ee34:	b.eq	208e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24bc>  // b.none
   1ee38:	b	1ee14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x9e8>
   1ee3c:	sub	w9, w8, #0x3e
   1ee40:	cmp	w9, #0xc
   1ee44:	b.hi	1fb24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16f8>  // b.pmore
   1ee48:	ldr	w9, [x21, #20]
   1ee4c:	ldr	x0, [sp, #32]
   1ee50:	and	x8, x9, #0xfffffff
   1ee54:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1ee58:	tbnz	w9, #30, 20d30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2904>
   1ee5c:	mov	w9, #0x18                  	// #24
   1ee60:	mneg	x8, x8, x9
   1ee64:	add	x8, x21, x8
   1ee68:	b	20d34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2908>
   1ee6c:	ldur	x8, [x21, #-8]
   1ee70:	ldr	x24, [x8]
   1ee74:	mov	x0, x22
   1ee78:	mov	x1, x24
   1ee7c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1ee80:	ldp	w8, w9, [x20, #8]
   1ee84:	mov	w25, w0
   1ee88:	sub	w19, w23, w0
   1ee8c:	cmp	w8, w9
   1ee90:	b.cs	23980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5554>  // b.hs, b.nlast
   1ee94:	ldr	x9, [x20]
   1ee98:	str	w19, [x9, w8, uxtw #2]
   1ee9c:	ldp	w8, w9, [x20, #8]
   1eea0:	cmp	w8, w9
   1eea4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1eea8:	add	w8, w8, #0x1
   1eeac:	cmp	w25, w23
   1eeb0:	str	w8, [x20, #8]
   1eeb4:	b.cc	20ee8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2abc>  // b.lo, b.ul, b.last
   1eeb8:	ldr	x11, [sp, #24]
   1eebc:	ldr	w10, [x11, #72]
   1eec0:	ldr	x11, [x11, #56]
   1eec4:	cbz	w10, 20eac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a80>
   1eec8:	ldr	x12, [x24]
   1eecc:	orr	x13, x12, #0x8
   1eed0:	cmn	x13, #0x8
   1eed4:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1eed8:	ubfx	x13, x12, #4, #28
   1eedc:	eor	w14, w13, w12, lsr #9
   1eee0:	sub	w13, w10, #0x1
   1eee4:	and	w14, w14, w13
   1eee8:	add	x15, x11, w14, uxtw #4
   1eeec:	ldr	x16, [x15]
   1eef0:	cmp	x16, x12
   1eef4:	b.eq	20eb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a84>  // b.none
   1eef8:	mov	w17, #0x1                   	// #1
   1eefc:	cmn	x16, #0x8
   1ef00:	b.eq	20eac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a80>  // b.none
   1ef04:	add	w14, w14, w17
   1ef08:	and	w14, w14, w13
   1ef0c:	add	x15, x11, w14, uxtw #4
   1ef10:	ldr	x16, [x15]
   1ef14:	add	w17, w17, #0x1
   1ef18:	cmp	x16, x12
   1ef1c:	b.eq	20eb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a84>  // b.none
   1ef20:	b	1eefc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xad0>
   1ef24:	ldur	x10, [x21, #-8]
   1ef28:	ldr	x9, [sp, #24]
   1ef2c:	ldr	w8, [x9, #72]
   1ef30:	ldr	x9, [x9, #56]
   1ef34:	cbz	w8, 1fe30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a04>
   1ef38:	ldr	x10, [x10]
   1ef3c:	ldr	x10, [x10]
   1ef40:	orr	x11, x10, #0x8
   1ef44:	cmn	x11, #0x8
   1ef48:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1ef4c:	ubfx	x11, x10, #4, #28
   1ef50:	eor	w12, w11, w10, lsr #9
   1ef54:	sub	w11, w8, #0x1
   1ef58:	and	w12, w12, w11
   1ef5c:	add	x13, x9, w12, uxtw #4
   1ef60:	ldr	x14, [x13]
   1ef64:	cmp	x14, x10
   1ef68:	b.eq	1fe34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a08>  // b.none
   1ef6c:	mov	w15, #0x1                   	// #1
   1ef70:	cmn	x14, #0x8
   1ef74:	b.eq	1fe30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a04>  // b.none
   1ef78:	add	w12, w12, w15
   1ef7c:	and	w12, w12, w11
   1ef80:	add	x13, x9, w12, uxtw #4
   1ef84:	ldr	x14, [x13]
   1ef88:	add	w15, w15, #0x1
   1ef8c:	cmp	x14, x10
   1ef90:	b.eq	1fe34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a08>  // b.none
   1ef94:	b	1ef70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xb44>
   1ef98:	ldur	x8, [x21, #-8]
   1ef9c:	ldr	x24, [x8]
   1efa0:	mov	x0, x22
   1efa4:	mov	x1, x24
   1efa8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1efac:	ldp	w8, w9, [x20, #8]
   1efb0:	mov	w25, w0
   1efb4:	sub	w19, w23, w0
   1efb8:	cmp	w8, w9
   1efbc:	b.cs	2399c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5570>  // b.hs, b.nlast
   1efc0:	ldr	x9, [x20]
   1efc4:	str	w19, [x9, w8, uxtw #2]
   1efc8:	ldp	w8, w9, [x20, #8]
   1efcc:	cmp	w8, w9
   1efd0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1efd4:	add	w8, w8, #0x1
   1efd8:	cmp	w25, w23
   1efdc:	str	w8, [x20, #8]
   1efe0:	b.cc	21054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c28>  // b.lo, b.ul, b.last
   1efe4:	ldr	x11, [sp, #24]
   1efe8:	ldr	w10, [x11, #72]
   1efec:	ldr	x11, [x11, #56]
   1eff0:	cbz	w10, 21018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2bec>
   1eff4:	ldr	x12, [x24]
   1eff8:	orr	x13, x12, #0x8
   1effc:	cmn	x13, #0x8
   1f000:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f004:	ubfx	x13, x12, #4, #28
   1f008:	eor	w14, w13, w12, lsr #9
   1f00c:	sub	w13, w10, #0x1
   1f010:	and	w14, w14, w13
   1f014:	add	x15, x11, w14, uxtw #4
   1f018:	ldr	x16, [x15]
   1f01c:	cmp	x16, x12
   1f020:	b.eq	2101c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2bf0>  // b.none
   1f024:	mov	w17, #0x1                   	// #1
   1f028:	cmn	x16, #0x8
   1f02c:	b.eq	21018 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2bec>  // b.none
   1f030:	add	w14, w14, w17
   1f034:	and	w14, w14, w13
   1f038:	add	x15, x11, w14, uxtw #4
   1f03c:	ldr	x16, [x15]
   1f040:	add	w17, w17, #0x1
   1f044:	cmp	x16, x12
   1f048:	b.eq	2101c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2bf0>  // b.none
   1f04c:	b	1f028 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xbfc>
   1f050:	ldur	x8, [x21, #-8]
   1f054:	ldr	x25, [x8]
   1f058:	mov	x1, x25
   1f05c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f060:	ldp	w8, w9, [x20, #8]
   1f064:	mov	w22, w0
   1f068:	sub	w19, w23, w0
   1f06c:	cmp	w8, w9
   1f070:	b.cs	239b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x558c>  // b.hs, b.nlast
   1f074:	ldr	x9, [x20]
   1f078:	str	w19, [x9, w8, uxtw #2]
   1f07c:	ldp	w8, w9, [x20, #8]
   1f080:	cmp	w8, w9
   1f084:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f088:	add	w8, w8, #0x1
   1f08c:	cmp	w22, w23
   1f090:	str	w8, [x20, #8]
   1f094:	b.cs	1f0a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xc74>  // b.hs, b.nlast
   1f098:	mov	w11, #0x4                   	// #4
   1f09c:	b	211fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2dd0>
   1f0a0:	ldr	x11, [sp, #24]
   1f0a4:	ldr	w10, [x11, #72]
   1f0a8:	ldr	x11, [x11, #56]
   1f0ac:	cbz	w10, 211bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d90>
   1f0b0:	ldr	x12, [x25]
   1f0b4:	orr	x13, x12, #0x8
   1f0b8:	cmn	x13, #0x8
   1f0bc:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f0c0:	ubfx	x13, x12, #4, #28
   1f0c4:	eor	w14, w13, w12, lsr #9
   1f0c8:	sub	w13, w10, #0x1
   1f0cc:	and	w14, w14, w13
   1f0d0:	add	x15, x11, w14, uxtw #4
   1f0d4:	ldr	x16, [x15]
   1f0d8:	cmp	x16, x12
   1f0dc:	b.eq	211c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d94>  // b.none
   1f0e0:	mov	w17, #0x1                   	// #1
   1f0e4:	cmn	x16, #0x8
   1f0e8:	b.eq	211bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d90>  // b.none
   1f0ec:	add	w14, w14, w17
   1f0f0:	and	w14, w14, w13
   1f0f4:	add	x15, x11, w14, uxtw #4
   1f0f8:	ldr	x16, [x15]
   1f0fc:	add	w17, w17, #0x1
   1f100:	cmp	x16, x12
   1f104:	b.eq	211c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d94>  // b.none
   1f108:	b	1f0e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xcb8>
   1f10c:	ldur	x8, [x21, #-8]
   1f110:	ldr	x21, [x8]
   1f114:	mov	x1, x21
   1f118:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f11c:	ldp	w8, w9, [x20, #8]
   1f120:	mov	w22, w0
   1f124:	sub	w19, w23, w0
   1f128:	cmp	w8, w9
   1f12c:	b.cs	239d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x55a8>  // b.hs, b.nlast
   1f130:	ldr	x9, [x20]
   1f134:	str	w19, [x9, w8, uxtw #2]
   1f138:	ldp	w8, w9, [x20, #8]
   1f13c:	cmp	w8, w9
   1f140:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f144:	add	w8, w8, #0x1
   1f148:	cmp	w22, w23
   1f14c:	str	w8, [x20, #8]
   1f150:	b.cs	1f15c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xd30>  // b.hs, b.nlast
   1f154:	mov	w25, wzr
   1f158:	b	21434 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3008>
   1f15c:	ldr	x11, [sp, #24]
   1f160:	ldr	w10, [x11, #72]
   1f164:	ldr	x11, [x11, #56]
   1f168:	cbz	w10, 213f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fc8>
   1f16c:	ldr	x12, [x21]
   1f170:	orr	x13, x12, #0x8
   1f174:	cmn	x13, #0x8
   1f178:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f17c:	ubfx	x13, x12, #4, #28
   1f180:	eor	w14, w13, w12, lsr #9
   1f184:	sub	w13, w10, #0x1
   1f188:	and	w14, w14, w13
   1f18c:	add	x15, x11, w14, uxtw #4
   1f190:	ldr	x16, [x15]
   1f194:	cmp	x16, x12
   1f198:	b.eq	213f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fcc>  // b.none
   1f19c:	mov	w17, #0x1                   	// #1
   1f1a0:	cmn	x16, #0x8
   1f1a4:	b.eq	213f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fc8>  // b.none
   1f1a8:	add	w14, w14, w17
   1f1ac:	and	w14, w14, w13
   1f1b0:	add	x15, x11, w14, uxtw #4
   1f1b4:	ldr	x16, [x15]
   1f1b8:	add	w17, w17, #0x1
   1f1bc:	cmp	x16, x12
   1f1c0:	b.eq	213f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fcc>  // b.none
   1f1c4:	b	1f1a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xd74>
   1f1c8:	ldur	x8, [x21, #-8]
   1f1cc:	ldr	x24, [x8, #24]
   1f1d0:	mov	x0, x22
   1f1d4:	mov	x1, x24
   1f1d8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f1dc:	ldp	w8, w9, [x20, #8]
   1f1e0:	mov	w25, w0
   1f1e4:	sub	w19, w23, w0
   1f1e8:	cmp	w8, w9
   1f1ec:	b.cs	239f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x55c4>  // b.hs, b.nlast
   1f1f0:	ldr	x9, [x20]
   1f1f4:	str	w19, [x9, w8, uxtw #2]
   1f1f8:	ldp	w8, w9, [x20, #8]
   1f1fc:	cmp	w8, w9
   1f200:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f204:	add	w8, w8, #0x1
   1f208:	cmp	w25, w23
   1f20c:	str	w8, [x20, #8]
   1f210:	b.cc	21478 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x304c>  // b.lo, b.ul, b.last
   1f214:	ldr	x11, [sp, #24]
   1f218:	ldr	w10, [x11, #72]
   1f21c:	ldr	x11, [x11, #56]
   1f220:	cbz	w10, 2143c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3010>
   1f224:	ldr	x12, [x24]
   1f228:	orr	x13, x12, #0x8
   1f22c:	cmn	x13, #0x8
   1f230:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f234:	ubfx	x13, x12, #4, #28
   1f238:	eor	w14, w13, w12, lsr #9
   1f23c:	sub	w13, w10, #0x1
   1f240:	and	w14, w14, w13
   1f244:	add	x15, x11, w14, uxtw #4
   1f248:	ldr	x16, [x15]
   1f24c:	cmp	x16, x12
   1f250:	b.eq	21440 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3014>  // b.none
   1f254:	mov	w17, #0x1                   	// #1
   1f258:	cmn	x16, #0x8
   1f25c:	b.eq	2143c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3010>  // b.none
   1f260:	add	w14, w14, w17
   1f264:	and	w14, w14, w13
   1f268:	add	x15, x11, w14, uxtw #4
   1f26c:	ldr	x16, [x15]
   1f270:	add	w17, w17, #0x1
   1f274:	cmp	x16, x12
   1f278:	b.eq	21440 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3014>  // b.none
   1f27c:	b	1f258 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xe2c>
   1f280:	ldur	x8, [x21, #-8]
   1f284:	ldr	x24, [x8]
   1f288:	mov	x0, x22
   1f28c:	mov	x1, x24
   1f290:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f294:	ldp	w8, w9, [x20, #8]
   1f298:	mov	w25, w0
   1f29c:	sub	w19, w23, w0
   1f2a0:	cmp	w8, w9
   1f2a4:	b.cs	23a0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x55e0>  // b.hs, b.nlast
   1f2a8:	ldr	x9, [x20]
   1f2ac:	str	w19, [x9, w8, uxtw #2]
   1f2b0:	ldp	w8, w9, [x20, #8]
   1f2b4:	cmp	w8, w9
   1f2b8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f2bc:	add	w8, w8, #0x1
   1f2c0:	cmp	w25, w23
   1f2c4:	str	w8, [x20, #8]
   1f2c8:	b.cc	215ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x31c0>  // b.lo, b.ul, b.last
   1f2cc:	ldr	x11, [sp, #24]
   1f2d0:	ldr	w10, [x11, #72]
   1f2d4:	ldr	x11, [x11, #56]
   1f2d8:	cbz	w10, 215b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3184>
   1f2dc:	ldr	x12, [x24]
   1f2e0:	orr	x13, x12, #0x8
   1f2e4:	cmn	x13, #0x8
   1f2e8:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f2ec:	ubfx	x13, x12, #4, #28
   1f2f0:	eor	w14, w13, w12, lsr #9
   1f2f4:	sub	w13, w10, #0x1
   1f2f8:	and	w14, w14, w13
   1f2fc:	add	x15, x11, w14, uxtw #4
   1f300:	ldr	x16, [x15]
   1f304:	cmp	x16, x12
   1f308:	b.eq	215b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3188>  // b.none
   1f30c:	mov	w17, #0x1                   	// #1
   1f310:	cmn	x16, #0x8
   1f314:	b.eq	215b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3184>  // b.none
   1f318:	add	w14, w14, w17
   1f31c:	and	w14, w14, w13
   1f320:	add	x15, x11, w14, uxtw #4
   1f324:	ldr	x16, [x15]
   1f328:	add	w17, w17, #0x1
   1f32c:	cmp	x16, x12
   1f330:	b.eq	215b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3188>  // b.none
   1f334:	b	1f310 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xee4>
   1f338:	ldur	x10, [x21, #-8]
   1f33c:	ldr	x9, [sp, #24]
   1f340:	ldr	w8, [x9, #72]
   1f344:	ldr	x9, [x9, #56]
   1f348:	cbz	w8, 2022c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e00>
   1f34c:	ldr	x10, [x10]
   1f350:	ldr	x10, [x10]
   1f354:	orr	x11, x10, #0x8
   1f358:	cmn	x11, #0x8
   1f35c:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f360:	ubfx	x11, x10, #4, #28
   1f364:	eor	w12, w11, w10, lsr #9
   1f368:	sub	w11, w8, #0x1
   1f36c:	and	w12, w12, w11
   1f370:	add	x13, x9, w12, uxtw #4
   1f374:	ldr	x14, [x13]
   1f378:	cmp	x14, x10
   1f37c:	b.eq	20230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e04>  // b.none
   1f380:	mov	w15, #0x1                   	// #1
   1f384:	cmn	x14, #0x8
   1f388:	b.eq	2022c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e00>  // b.none
   1f38c:	add	w12, w12, w15
   1f390:	and	w12, w12, w11
   1f394:	add	x13, x9, w12, uxtw #4
   1f398:	ldr	x14, [x13]
   1f39c:	add	w15, w15, #0x1
   1f3a0:	cmp	x14, x10
   1f3a4:	b.eq	20230 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e04>  // b.none
   1f3a8:	b	1f384 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xf58>
   1f3ac:	ldur	x8, [x21, #-8]
   1f3b0:	ldr	x24, [x8]
   1f3b4:	mov	x1, x24
   1f3b8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f3bc:	ldp	w8, w9, [x20, #8]
   1f3c0:	mov	w22, w0
   1f3c4:	sub	w19, w23, w0
   1f3c8:	cmp	w8, w9
   1f3cc:	b.cs	23a28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x55fc>  // b.hs, b.nlast
   1f3d0:	ldr	x9, [x20]
   1f3d4:	str	w19, [x9, w8, uxtw #2]
   1f3d8:	ldp	w8, w9, [x20, #8]
   1f3dc:	cmp	w8, w9
   1f3e0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f3e4:	add	w8, w8, #0x1
   1f3e8:	cmp	w22, w23
   1f3ec:	str	w8, [x20, #8]
   1f3f0:	b.cs	1f56c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1140>  // b.hs, b.nlast
   1f3f4:	mov	w25, #0x5                   	// #5
   1f3f8:	b	21774 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3348>
   1f3fc:	ldur	x8, [x21, #-8]
   1f400:	ldr	x24, [x8]
   1f404:	mov	x0, x22
   1f408:	mov	x1, x24
   1f40c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f410:	ldp	w8, w9, [x20, #8]
   1f414:	mov	w25, w0
   1f418:	sub	w19, w23, w0
   1f41c:	cmp	w8, w9
   1f420:	b.cs	23a44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5618>  // b.hs, b.nlast
   1f424:	ldr	x9, [x20]
   1f428:	str	w19, [x9, w8, uxtw #2]
   1f42c:	ldp	w8, w9, [x20, #8]
   1f430:	cmp	w8, w9
   1f434:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f438:	add	w8, w8, #0x1
   1f43c:	cmp	w25, w23
   1f440:	str	w8, [x20, #8]
   1f444:	b.cc	2182c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3400>  // b.lo, b.ul, b.last
   1f448:	ldr	x11, [sp, #24]
   1f44c:	ldr	w10, [x11, #72]
   1f450:	ldr	x11, [x11, #56]
   1f454:	cbz	w10, 217f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33c4>
   1f458:	ldr	x12, [x24]
   1f45c:	orr	x13, x12, #0x8
   1f460:	cmn	x13, #0x8
   1f464:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f468:	ubfx	x13, x12, #4, #28
   1f46c:	eor	w14, w13, w12, lsr #9
   1f470:	sub	w13, w10, #0x1
   1f474:	and	w14, w14, w13
   1f478:	add	x15, x11, w14, uxtw #4
   1f47c:	ldr	x16, [x15]
   1f480:	cmp	x16, x12
   1f484:	b.eq	217f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33c8>  // b.none
   1f488:	mov	w17, #0x1                   	// #1
   1f48c:	cmn	x16, #0x8
   1f490:	b.eq	217f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33c4>  // b.none
   1f494:	add	w14, w14, w17
   1f498:	and	w14, w14, w13
   1f49c:	add	x15, x11, w14, uxtw #4
   1f4a0:	ldr	x16, [x15]
   1f4a4:	add	w17, w17, #0x1
   1f4a8:	cmp	x16, x12
   1f4ac:	b.eq	217f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33c8>  // b.none
   1f4b0:	b	1f48c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1060>
   1f4b4:	ldur	x8, [x21, #-8]
   1f4b8:	ldr	x24, [x8]
   1f4bc:	mov	x0, x22
   1f4c0:	mov	x1, x24
   1f4c4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f4c8:	ldp	w8, w9, [x20, #8]
   1f4cc:	mov	w25, w0
   1f4d0:	sub	w19, w23, w0
   1f4d4:	cmp	w8, w9
   1f4d8:	b.cs	23a60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5634>  // b.hs, b.nlast
   1f4dc:	ldr	x9, [x20]
   1f4e0:	str	w19, [x9, w8, uxtw #2]
   1f4e4:	ldp	w8, w9, [x20, #8]
   1f4e8:	cmp	w8, w9
   1f4ec:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f4f0:	add	w8, w8, #0x1
   1f4f4:	cmp	w25, w23
   1f4f8:	str	w8, [x20, #8]
   1f4fc:	b.cc	21934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3508>  // b.lo, b.ul, b.last
   1f500:	ldr	x11, [sp, #24]
   1f504:	ldr	w10, [x11, #72]
   1f508:	ldr	x11, [x11, #56]
   1f50c:	cbz	w10, 218f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34cc>
   1f510:	ldr	x12, [x24]
   1f514:	orr	x13, x12, #0x8
   1f518:	cmn	x13, #0x8
   1f51c:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f520:	ubfx	x13, x12, #4, #28
   1f524:	eor	w14, w13, w12, lsr #9
   1f528:	sub	w13, w10, #0x1
   1f52c:	and	w14, w14, w13
   1f530:	add	x15, x11, w14, uxtw #4
   1f534:	ldr	x16, [x15]
   1f538:	cmp	x16, x12
   1f53c:	b.eq	218fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34d0>  // b.none
   1f540:	mov	w17, #0x1                   	// #1
   1f544:	cmn	x16, #0x8
   1f548:	b.eq	218f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34cc>  // b.none
   1f54c:	add	w14, w14, w17
   1f550:	and	w14, w14, w13
   1f554:	add	x15, x11, w14, uxtw #4
   1f558:	ldr	x16, [x15]
   1f55c:	add	w17, w17, #0x1
   1f560:	cmp	x16, x12
   1f564:	b.eq	218fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34d0>  // b.none
   1f568:	b	1f544 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1118>
   1f56c:	ldr	x11, [sp, #24]
   1f570:	ldr	w10, [x11, #72]
   1f574:	ldr	x11, [x11, #56]
   1f578:	cbz	w10, 21734 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3308>
   1f57c:	ldr	x12, [x24]
   1f580:	orr	x13, x12, #0x8
   1f584:	cmn	x13, #0x8
   1f588:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f58c:	ubfx	x13, x12, #4, #28
   1f590:	eor	w14, w13, w12, lsr #9
   1f594:	sub	w13, w10, #0x1
   1f598:	and	w14, w14, w13
   1f59c:	add	x15, x11, w14, uxtw #4
   1f5a0:	ldr	x16, [x15]
   1f5a4:	cmp	x16, x12
   1f5a8:	b.eq	21738 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x330c>  // b.none
   1f5ac:	mov	w17, #0x1                   	// #1
   1f5b0:	cmn	x16, #0x8
   1f5b4:	b.eq	21734 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3308>  // b.none
   1f5b8:	add	w14, w14, w17
   1f5bc:	and	w14, w14, w13
   1f5c0:	add	x15, x11, w14, uxtw #4
   1f5c4:	ldr	x16, [x15]
   1f5c8:	add	w17, w17, #0x1
   1f5cc:	cmp	x16, x12
   1f5d0:	b.eq	21738 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x330c>  // b.none
   1f5d4:	b	1f5b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1184>
   1f5d8:	ldur	x10, [x21, #-8]
   1f5dc:	ldr	x9, [sp, #24]
   1f5e0:	ldr	w8, [x9, #72]
   1f5e4:	ldr	x9, [x9, #56]
   1f5e8:	cbz	w8, 20388 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f5c>
   1f5ec:	ldr	x10, [x10]
   1f5f0:	ldr	x10, [x10]
   1f5f4:	orr	x11, x10, #0x8
   1f5f8:	cmn	x11, #0x8
   1f5fc:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f600:	ubfx	x11, x10, #4, #28
   1f604:	eor	w12, w11, w10, lsr #9
   1f608:	sub	w11, w8, #0x1
   1f60c:	and	w12, w12, w11
   1f610:	add	x13, x9, w12, uxtw #4
   1f614:	ldr	x14, [x13]
   1f618:	cmp	x14, x10
   1f61c:	b.eq	2038c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f60>  // b.none
   1f620:	mov	w15, #0x1                   	// #1
   1f624:	cmn	x14, #0x8
   1f628:	b.eq	20388 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f5c>  // b.none
   1f62c:	add	w12, w12, w15
   1f630:	and	w12, w12, w11
   1f634:	add	x13, x9, w12, uxtw #4
   1f638:	ldr	x14, [x13]
   1f63c:	add	w15, w15, #0x1
   1f640:	cmp	x14, x10
   1f644:	b.eq	2038c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f60>  // b.none
   1f648:	b	1f624 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x11f8>
   1f64c:	ldur	x8, [x21, #-8]
   1f650:	ldr	x25, [x8, #24]
   1f654:	mov	x0, x22
   1f658:	mov	x1, x25
   1f65c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f660:	ldp	w8, w9, [x20, #8]
   1f664:	mov	w26, w0
   1f668:	sub	w19, w23, w0
   1f66c:	cmp	w8, w9
   1f670:	b.cs	23a7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5650>  // b.hs, b.nlast
   1f674:	ldr	x9, [x20]
   1f678:	str	w19, [x9, w8, uxtw #2]
   1f67c:	ldp	w8, w9, [x20, #8]
   1f680:	cmp	w8, w9
   1f684:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f688:	add	w8, w8, #0x1
   1f68c:	cmp	w26, w23
   1f690:	str	w8, [x20, #8]
   1f694:	b.cc	21a4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3620>  // b.lo, b.ul, b.last
   1f698:	ldr	x11, [sp, #24]
   1f69c:	ldr	w10, [x11, #72]
   1f6a0:	ldr	x11, [x11, #56]
   1f6a4:	cbz	w10, 21a10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x35e4>
   1f6a8:	ldr	x12, [x25]
   1f6ac:	orr	x13, x12, #0x8
   1f6b0:	cmn	x13, #0x8
   1f6b4:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f6b8:	ubfx	x13, x12, #4, #28
   1f6bc:	eor	w14, w13, w12, lsr #9
   1f6c0:	sub	w13, w10, #0x1
   1f6c4:	and	w14, w14, w13
   1f6c8:	add	x15, x11, w14, uxtw #4
   1f6cc:	ldr	x16, [x15]
   1f6d0:	cmp	x16, x12
   1f6d4:	b.eq	21a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x35e8>  // b.none
   1f6d8:	mov	w17, #0x1                   	// #1
   1f6dc:	cmn	x16, #0x8
   1f6e0:	b.eq	21a10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x35e4>  // b.none
   1f6e4:	add	w14, w14, w17
   1f6e8:	and	w14, w14, w13
   1f6ec:	add	x15, x11, w14, uxtw #4
   1f6f0:	ldr	x16, [x15]
   1f6f4:	add	w17, w17, #0x1
   1f6f8:	cmp	x16, x12
   1f6fc:	b.eq	21a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x35e8>  // b.none
   1f700:	b	1f6dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x12b0>
   1f704:	ldur	x8, [x21, #-8]
   1f708:	ldr	x21, [x8]
   1f70c:	mov	x1, x21
   1f710:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f714:	ldp	w8, w9, [x20, #8]
   1f718:	mov	w22, w0
   1f71c:	sub	w19, w23, w0
   1f720:	cmp	w8, w9
   1f724:	b.cs	23a98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x566c>  // b.hs, b.nlast
   1f728:	ldr	x9, [x20]
   1f72c:	str	w19, [x9, w8, uxtw #2]
   1f730:	ldp	w8, w9, [x20, #8]
   1f734:	cmp	w8, w9
   1f738:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f73c:	add	w8, w8, #0x1
   1f740:	cmp	w22, w23
   1f744:	str	w8, [x20, #8]
   1f748:	b.cs	1f804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x13d8>  // b.hs, b.nlast
   1f74c:	mov	w25, wzr
   1f750:	mov	w24, #0x27                  	// #39
   1f754:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   1f758:	ldur	x8, [x21, #-8]
   1f75c:	ldr	x1, [x8]
   1f760:	mov	x0, x22
   1f764:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f768:	ldp	w8, w9, [x20, #8]
   1f76c:	sub	w19, w23, w0
   1f770:	cmp	w8, w9
   1f774:	b.cs	23ab4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5688>  // b.hs, b.nlast
   1f778:	ldr	x9, [x20]
   1f77c:	str	w19, [x9, w8, uxtw #2]
   1f780:	ldp	w8, w9, [x20, #8]
   1f784:	cmp	w8, w9
   1f788:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f78c:	add	w8, w8, #0x1
   1f790:	str	w8, [x20, #8]
   1f794:	ldrb	w11, [x21, #18]
   1f798:	ldr	w10, [x21, #20]
   1f79c:	mov	w12, #0xfffffffe            	// #-2
   1f7a0:	tst	w11, #0x1
   1f7a4:	and	w10, w10, #0xfffffff
   1f7a8:	cinc	w11, w12, eq  // eq = none
   1f7ac:	cmp	w8, w9
   1f7b0:	add	w19, w11, w10
   1f7b4:	b.cs	23ad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x56a4>  // b.hs, b.nlast
   1f7b8:	ldr	x9, [x20]
   1f7bc:	str	w19, [x9, w8, uxtw #2]
   1f7c0:	ldp	w8, w9, [x20, #8]
   1f7c4:	cmp	w8, w9
   1f7c8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f7cc:	add	w8, w8, #0x1
   1f7d0:	str	w8, [x20, #8]
   1f7d4:	ldr	w10, [x21, #20]
   1f7d8:	tbnz	w10, #30, 1fa44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1618>
   1f7dc:	ldrh	w8, [x21, #18]
   1f7e0:	and	w10, w10, #0xfffffff
   1f7e4:	mov	w11, #0x18                  	// #24
   1f7e8:	mneg	x9, x10, x11
   1f7ec:	tst	w8, #0x1
   1f7f0:	mov	w12, #0x30                  	// #48
   1f7f4:	add	x9, x21, x9
   1f7f8:	csel	x11, x11, x12, eq  // eq = none
   1f7fc:	add	x19, x9, x11
   1f800:	b	1fa64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1638>
   1f804:	ldr	x11, [sp, #24]
   1f808:	ldr	w10, [x11, #72]
   1f80c:	ldr	x11, [x11, #56]
   1f810:	cbz	w10, 21b24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x36f8>
   1f814:	ldr	x12, [x21]
   1f818:	orr	x13, x12, #0x8
   1f81c:	cmn	x13, #0x8
   1f820:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f824:	ubfx	x13, x12, #4, #28
   1f828:	eor	w14, w13, w12, lsr #9
   1f82c:	sub	w13, w10, #0x1
   1f830:	and	w14, w14, w13
   1f834:	add	x15, x11, w14, uxtw #4
   1f838:	ldr	x16, [x15]
   1f83c:	cmp	x16, x12
   1f840:	b.eq	21b28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x36fc>  // b.none
   1f844:	mov	w17, #0x1                   	// #1
   1f848:	cmn	x16, #0x8
   1f84c:	b.eq	21b24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x36f8>  // b.none
   1f850:	add	w14, w14, w17
   1f854:	and	w14, w14, w13
   1f858:	add	x15, x11, w14, uxtw #4
   1f85c:	ldr	x16, [x15]
   1f860:	add	w17, w17, #0x1
   1f864:	cmp	x16, x12
   1f868:	b.eq	21b28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x36fc>  // b.none
   1f86c:	b	1f848 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x141c>
   1f870:	ldur	x8, [x21, #-8]
   1f874:	ldr	x24, [x8]
   1f878:	mov	x1, x24
   1f87c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f880:	ldp	w8, w9, [x20, #8]
   1f884:	mov	w22, w0
   1f888:	sub	w19, w23, w0
   1f88c:	cmp	w8, w9
   1f890:	b.cs	23aec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x56c0>  // b.hs, b.nlast
   1f894:	ldr	x9, [x20]
   1f898:	str	w19, [x9, w8, uxtw #2]
   1f89c:	ldp	w9, w8, [x20, #8]
   1f8a0:	cmp	w9, w8
   1f8a4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f8a8:	add	w9, w9, #0x1
   1f8ac:	cmp	w22, w23
   1f8b0:	str	w9, [x20, #8]
   1f8b4:	b.cc	21d30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3904>  // b.lo, b.ul, b.last
   1f8b8:	ldr	x11, [sp, #24]
   1f8bc:	ldr	w10, [x11, #72]
   1f8c0:	ldr	x11, [x11, #56]
   1f8c4:	cbz	w10, 21cf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38c8>
   1f8c8:	ldr	x12, [x24]
   1f8cc:	orr	x13, x12, #0x8
   1f8d0:	cmn	x13, #0x8
   1f8d4:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f8d8:	ubfx	x13, x12, #4, #28
   1f8dc:	eor	w14, w13, w12, lsr #9
   1f8e0:	sub	w13, w10, #0x1
   1f8e4:	and	w14, w14, w13
   1f8e8:	add	x15, x11, w14, uxtw #4
   1f8ec:	ldr	x16, [x15]
   1f8f0:	cmp	x16, x12
   1f8f4:	b.eq	21cf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38cc>  // b.none
   1f8f8:	mov	w17, #0x1                   	// #1
   1f8fc:	cmn	x16, #0x8
   1f900:	b.eq	21cf4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38c8>  // b.none
   1f904:	add	w14, w14, w17
   1f908:	and	w14, w14, w13
   1f90c:	add	x15, x11, w14, uxtw #4
   1f910:	ldr	x16, [x15]
   1f914:	add	w17, w17, #0x1
   1f918:	cmp	x16, x12
   1f91c:	b.eq	21cf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38cc>  // b.none
   1f920:	b	1f8fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x14d0>
   1f924:	ldur	x8, [x21, #-8]
   1f928:	ldr	x24, [x8]
   1f92c:	mov	x0, x22
   1f930:	mov	x1, x24
   1f934:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1f938:	ldp	w8, w9, [x20, #8]
   1f93c:	mov	w25, w0
   1f940:	sub	w19, w23, w0
   1f944:	cmp	w8, w9
   1f948:	b.cs	23b08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x56dc>  // b.hs, b.nlast
   1f94c:	ldr	x9, [x20]
   1f950:	str	w19, [x9, w8, uxtw #2]
   1f954:	ldp	w8, w9, [x20, #8]
   1f958:	cmp	w8, w9
   1f95c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1f960:	add	w8, w8, #0x1
   1f964:	cmp	w25, w23
   1f968:	str	w8, [x20, #8]
   1f96c:	b.cc	21de4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x39b8>  // b.lo, b.ul, b.last
   1f970:	ldr	x11, [sp, #24]
   1f974:	ldr	w10, [x11, #72]
   1f978:	ldr	x11, [x11, #56]
   1f97c:	cbz	w10, 21da8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x397c>
   1f980:	ldr	x12, [x24]
   1f984:	orr	x13, x12, #0x8
   1f988:	cmn	x13, #0x8
   1f98c:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1f990:	ubfx	x13, x12, #4, #28
   1f994:	eor	w14, w13, w12, lsr #9
   1f998:	sub	w13, w10, #0x1
   1f99c:	and	w14, w14, w13
   1f9a0:	add	x15, x11, w14, uxtw #4
   1f9a4:	ldr	x16, [x15]
   1f9a8:	cmp	x16, x12
   1f9ac:	b.eq	21dac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3980>  // b.none
   1f9b0:	mov	w17, #0x1                   	// #1
   1f9b4:	cmn	x16, #0x8
   1f9b8:	b.eq	21da8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x397c>  // b.none
   1f9bc:	add	w14, w14, w17
   1f9c0:	and	w14, w14, w13
   1f9c4:	add	x15, x11, w14, uxtw #4
   1f9c8:	ldr	x16, [x15]
   1f9cc:	add	w17, w17, #0x1
   1f9d0:	cmp	x16, x12
   1f9d4:	b.eq	21dac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3980>  // b.none
   1f9d8:	b	1f9b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1588>
   1f9dc:	ldr	w8, [x21, #20]
   1f9e0:	mov	w9, #0x18                  	// #24
   1f9e4:	and	x8, x8, #0xfffffff
   1f9e8:	mneg	x8, x8, x9
   1f9ec:	add	x8, x21, x8
   1f9f0:	ldr	x1, [x8, #24]
   1f9f4:	cbz	x1, 248f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64c8>
   1f9f8:	ldrb	w8, [x1, #16]
   1f9fc:	cmp	w8, #0x12
   1fa00:	b.ne	24914 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64e8>  // b.any
   1fa04:	mov	x0, x22
   1fa08:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1fa0c:	ldp	w8, w9, [x20, #8]
   1fa10:	mov	w21, w0
   1fa14:	cmp	w8, w9
   1fa18:	b.cs	24240 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5e14>  // b.hs, b.nlast
   1fa1c:	ldr	x9, [x20]
   1fa20:	str	w21, [x9, w8, uxtw #2]
   1fa24:	ldp	w8, w9, [x20, #8]
   1fa28:	cmp	w8, w9
   1fa2c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1fa30:	add	w8, w8, #0x1
   1fa34:	mov	w25, wzr
   1fa38:	str	w8, [x20, #8]
   1fa3c:	mov	w24, #0x30                  	// #48
   1fa40:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   1fa44:	ldrh	w8, [x21, #18]
   1fa48:	ldur	x9, [x21, #-8]
   1fa4c:	mov	w11, #0x30                  	// #48
   1fa50:	mov	w12, #0x18                  	// #24
   1fa54:	tst	w8, #0x1
   1fa58:	csel	x11, x12, x11, eq  // eq = none
   1fa5c:	add	x19, x9, x11
   1fa60:	and	x10, x10, #0xfffffff
   1fa64:	mov	w11, #0x18                  	// #24
   1fa68:	madd	x25, x10, x11, x9
   1fa6c:	cmp	x19, x25
   1fa70:	b.eq	1faf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16c4>  // b.none
   1fa74:	add	x23, x20, #0x10
   1fa78:	ldr	x1, [x19]
   1fa7c:	cbz	x1, 247dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x63b0>
   1fa80:	ldrb	w8, [x1, #16]
   1fa84:	cmp	w8, #0x12
   1fa88:	b.ne	247fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x63d0>  // b.any
   1fa8c:	mov	x0, x22
   1fa90:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1fa94:	ldp	w8, w9, [x20, #8]
   1fa98:	mov	w24, w0
   1fa9c:	cmp	w8, w9
   1faa0:	b.cs	1fad0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16a4>  // b.hs, b.nlast
   1faa4:	ldr	x9, [x20]
   1faa8:	str	w24, [x9, w8, uxtw #2]
   1faac:	ldp	w8, w9, [x20, #8]
   1fab0:	cmp	w8, w9
   1fab4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1fab8:	add	x19, x19, #0x18
   1fabc:	add	w8, w8, #0x1
   1fac0:	cmp	x25, x19
   1fac4:	str	w8, [x20, #8]
   1fac8:	b.ne	1fa78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x164c>  // b.any
   1facc:	b	1faec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16c0>
   1fad0:	mov	w3, #0x4                   	// #4
   1fad4:	mov	x0, x20
   1fad8:	mov	x1, x23
   1fadc:	mov	x2, xzr
   1fae0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1fae4:	ldr	w8, [x20, #8]
   1fae8:	b	1faa4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1678>
   1faec:	ldrh	w8, [x21, #18]
   1faf0:	tbnz	w8, #0, 1fb00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x16d4>
   1faf4:	mov	w25, wzr
   1faf8:	mov	w24, #0x34                  	// #52
   1fafc:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   1fb00:	ldr	w9, [x21, #20]
   1fb04:	and	x8, x9, #0xfffffff
   1fb08:	cmp	w8, #0x1
   1fb0c:	b.ls	24a14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65e8>  // b.plast
   1fb10:	tbnz	w9, #30, 20cd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x28ac>
   1fb14:	mov	w9, #0x18                  	// #24
   1fb18:	mneg	x8, x8, x9
   1fb1c:	add	x8, x21, x8
   1fb20:	b	20cdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x28b0>
   1fb24:	ldr	x22, [sp, #32]
   1fb28:	sub	w8, w8, #0x25
   1fb2c:	cmp	w8, #0x12
   1fb30:	b.cs	24bbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6790>  // b.hs, b.nlast
   1fb34:	ldr	w9, [x21, #20]
   1fb38:	and	x8, x9, #0xfffffff
   1fb3c:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1fb40:	tbnz	w9, #30, 20d80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2954>
   1fb44:	mov	w9, #0x18                  	// #24
   1fb48:	mneg	x8, x8, x9
   1fb4c:	add	x8, x21, x8
   1fb50:	b	20d84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2958>
   1fb54:	ldr	x22, [sp, #32]
   1fb58:	add	x13, x9, x8, lsl #4
   1fb5c:	add	x8, x9, x8, lsl #4
   1fb60:	cmp	x13, x8
   1fb64:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   1fb68:	ldp	w8, w9, [x20, #8]
   1fb6c:	ldr	w10, [x13, #8]
   1fb70:	cmp	w8, w9
   1fb74:	sub	w19, w10, #0x1
   1fb78:	b.cs	23b24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x56f8>  // b.hs, b.nlast
   1fb7c:	ldr	x9, [x20]
   1fb80:	str	w19, [x9, w8, uxtw #2]
   1fb84:	ldp	w8, w9, [x20, #8]
   1fb88:	cmp	w8, w9
   1fb8c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1fb90:	add	w8, w8, #0x1
   1fb94:	str	w8, [x20, #8]
   1fb98:	ldrh	w10, [x21, #18]
   1fb9c:	cmp	w8, w9
   1fba0:	and	w19, w10, #0x1
   1fba4:	b.cs	23b40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5714>  // b.hs, b.nlast
   1fba8:	ldr	x9, [x20]
   1fbac:	str	w19, [x9, w8, uxtw #2]
   1fbb0:	ldp	w8, w9, [x20, #8]
   1fbb4:	cmp	w8, w9
   1fbb8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1fbbc:	add	w8, w8, #0x1
   1fbc0:	str	w8, [x20, #8]
   1fbc4:	ldr	w10, [x21, #20]
   1fbc8:	cmp	w8, w9
   1fbcc:	and	w19, w10, #0xfffffff
   1fbd0:	b.cs	23b5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5730>  // b.hs, b.nlast
   1fbd4:	ldr	x9, [x20]
   1fbd8:	str	w19, [x9, w8, uxtw #2]
   1fbdc:	ldp	w8, w9, [x20, #8]
   1fbe0:	cmp	w8, w9
   1fbe4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1fbe8:	add	w8, w8, #0x1
   1fbec:	str	w8, [x20, #8]
   1fbf0:	ldr	w10, [x21, #20]
   1fbf4:	and	x27, x10, #0xfffffff
   1fbf8:	cbz	w27, 1fe24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19f8>
   1fbfc:	mov	x28, xzr
   1fc00:	add	x11, x20, #0x10
   1fc04:	mov	w24, #0x18                  	// #24
   1fc08:	str	x11, [sp, #32]
   1fc0c:	tbz	w10, #30, 1fc18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x17ec>
   1fc10:	ldur	x10, [x21, #-8]
   1fc14:	b	1fc24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x17f8>
   1fc18:	and	w10, w10, #0xfffffff
   1fc1c:	mneg	x10, x10, x24
   1fc20:	add	x10, x21, x10
   1fc24:	mul	x11, x28, x24
   1fc28:	ldr	x10, [x10, x11]
   1fc2c:	ldr	x10, [x10]
   1fc30:	cbz	x10, 2481c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x63f0>
   1fc34:	ldrb	w10, [x10, #8]
   1fc38:	cmp	w10, #0xe
   1fc3c:	b.ne	1fc58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x182c>  // b.any
   1fc40:	cmp	w8, w9
   1fc44:	b.cs	1fdd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19a4>  // b.hs, b.nlast
   1fc48:	ldr	x9, [x20]
   1fc4c:	mov	w10, #0x1                   	// #1
   1fc50:	str	w10, [x9, w8, uxtw #2]
   1fc54:	b	1fc68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x183c>
   1fc58:	cmp	w8, w9
   1fc5c:	b.cs	1fdec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19c0>  // b.hs, b.nlast
   1fc60:	ldr	x9, [x20]
   1fc64:	str	wzr, [x9, w8, uxtw #2]
   1fc68:	ldp	w8, w9, [x20, #8]
   1fc6c:	cmp	w8, w9
   1fc70:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1fc74:	add	w8, w8, #0x1
   1fc78:	str	w8, [x20, #8]
   1fc7c:	ldr	w8, [x21, #20]
   1fc80:	tbnz	w8, #30, 1fc94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1868>
   1fc84:	and	x8, x8, #0xfffffff
   1fc88:	mneg	x8, x8, x24
   1fc8c:	add	x8, x21, x8
   1fc90:	b	1fc98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x186c>
   1fc94:	ldur	x8, [x21, #-8]
   1fc98:	mul	x9, x28, x24
   1fc9c:	ldr	x25, [x8, x9]
   1fca0:	cbz	x25, 2483c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6410>
   1fca4:	ldrb	w8, [x25, #16]
   1fca8:	cmp	w8, #0x11
   1fcac:	b.cs	2485c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6430>  // b.hs, b.nlast
   1fcb0:	mov	x0, x22
   1fcb4:	mov	x1, x25
   1fcb8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1fcbc:	ldp	w8, w9, [x20, #8]
   1fcc0:	mov	w26, w0
   1fcc4:	sub	w19, w23, w0
   1fcc8:	cmp	w8, w9
   1fccc:	b.cs	1fdb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1988>  // b.hs, b.nlast
   1fcd0:	ldr	x9, [x20]
   1fcd4:	str	w19, [x9, w8, uxtw #2]
   1fcd8:	ldp	w8, w9, [x20, #8]
   1fcdc:	cmp	w8, w9
   1fce0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1fce4:	add	w8, w8, #0x1
   1fce8:	cmp	w26, w23
   1fcec:	str	w8, [x20, #8]
   1fcf0:	b.cc	1fd9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1970>  // b.lo, b.ul, b.last
   1fcf4:	ldr	x11, [sp, #24]
   1fcf8:	ldr	w10, [x11, #72]
   1fcfc:	ldr	x11, [x11, #56]
   1fd00:	cbz	w10, 1fd60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1934>
   1fd04:	ldr	x12, [x25]
   1fd08:	orr	x13, x12, #0x8
   1fd0c:	cmn	x13, #0x8
   1fd10:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1fd14:	ubfx	x13, x12, #4, #28
   1fd18:	eor	w14, w13, w12, lsr #9
   1fd1c:	sub	w13, w10, #0x1
   1fd20:	and	w14, w14, w13
   1fd24:	add	x15, x11, w14, uxtw #4
   1fd28:	ldr	x16, [x15]
   1fd2c:	cmp	x16, x12
   1fd30:	b.eq	1fd64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1938>  // b.none
   1fd34:	mov	w17, #0x1                   	// #1
   1fd38:	cmn	x16, #0x8
   1fd3c:	b.eq	1fd60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1934>  // b.none
   1fd40:	add	w14, w14, w17
   1fd44:	and	w14, w14, w13
   1fd48:	add	x15, x11, w14, uxtw #4
   1fd4c:	ldr	x16, [x15]
   1fd50:	add	w17, w17, #0x1
   1fd54:	cmp	x16, x12
   1fd58:	b.eq	1fd64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1938>  // b.none
   1fd5c:	b	1fd38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x190c>
   1fd60:	add	x15, x11, x10, lsl #4
   1fd64:	add	x10, x11, x10, lsl #4
   1fd68:	cmp	x15, x10
   1fd6c:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   1fd70:	ldr	w10, [x15, #8]
   1fd74:	cmp	w8, w9
   1fd78:	sub	w19, w10, #0x1
   1fd7c:	b.cs	1fe08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19dc>  // b.hs, b.nlast
   1fd80:	ldr	x9, [x20]
   1fd84:	str	w19, [x9, w8, uxtw #2]
   1fd88:	ldp	w8, w9, [x20, #8]
   1fd8c:	cmp	w8, w9
   1fd90:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1fd94:	add	w8, w8, #0x1
   1fd98:	str	w8, [x20, #8]
   1fd9c:	add	x28, x28, #0x1
   1fda0:	cmp	x28, x27
   1fda4:	b.eq	1fe24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x19f8>  // b.none
   1fda8:	ldr	w10, [x21, #20]
   1fdac:	tbnz	w10, #30, 1fc10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x17e4>
   1fdb0:	b	1fc18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x17ec>
   1fdb4:	ldr	x1, [sp, #32]
   1fdb8:	mov	w3, #0x4                   	// #4
   1fdbc:	mov	x0, x20
   1fdc0:	mov	x2, xzr
   1fdc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1fdc8:	ldr	w8, [x20, #8]
   1fdcc:	b	1fcd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x18a4>
   1fdd0:	ldr	x1, [sp, #32]
   1fdd4:	mov	w3, #0x4                   	// #4
   1fdd8:	mov	x0, x20
   1fddc:	mov	x2, xzr
   1fde0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1fde4:	ldr	w8, [x20, #8]
   1fde8:	b	1fc48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x181c>
   1fdec:	ldr	x1, [sp, #32]
   1fdf0:	mov	w3, #0x4                   	// #4
   1fdf4:	mov	x0, x20
   1fdf8:	mov	x2, xzr
   1fdfc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1fe00:	ldr	w8, [x20, #8]
   1fe04:	b	1fc60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1834>
   1fe08:	ldr	x1, [sp, #32]
   1fe0c:	mov	w3, #0x4                   	// #4
   1fe10:	mov	x0, x20
   1fe14:	mov	x2, xzr
   1fe18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1fe1c:	ldr	w8, [x20, #8]
   1fe20:	b	1fd80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1954>
   1fe24:	mov	w25, wzr
   1fe28:	mov	w24, #0x2f                  	// #47
   1fe2c:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   1fe30:	add	x13, x9, x8, lsl #4
   1fe34:	add	x8, x9, x8, lsl #4
   1fe38:	cmp	x13, x8
   1fe3c:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   1fe40:	ldp	w8, w9, [x20, #8]
   1fe44:	ldr	w10, [x13, #8]
   1fe48:	cmp	w8, w9
   1fe4c:	sub	w19, w10, #0x1
   1fe50:	b.cs	23b78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x574c>  // b.hs, b.nlast
   1fe54:	ldr	x9, [x20]
   1fe58:	str	w19, [x9, w8, uxtw #2]
   1fe5c:	ldp	w8, w9, [x20, #8]
   1fe60:	cmp	w8, w9
   1fe64:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1fe68:	add	w8, w8, #0x1
   1fe6c:	str	w8, [x20, #8]
   1fe70:	ldr	w9, [x21, #20]
   1fe74:	and	x8, x9, #0xfffffff
   1fe78:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   1fe7c:	tbnz	w9, #30, 1fe90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a64>
   1fe80:	mov	w9, #0x18                  	// #24
   1fe84:	mneg	x8, x8, x9
   1fe88:	add	x8, x21, x8
   1fe8c:	b	1fe94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a68>
   1fe90:	ldur	x8, [x21, #-8]
   1fe94:	ldr	x1, [x8]
   1fe98:	mov	x0, x22
   1fe9c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1fea0:	ldp	w8, w9, [x20, #8]
   1fea4:	sub	w19, w23, w0
   1fea8:	cmp	w8, w9
   1feac:	b.cs	23b94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5768>  // b.hs, b.nlast
   1feb0:	ldr	x9, [x20]
   1feb4:	str	w19, [x9, w8, uxtw #2]
   1feb8:	ldp	w8, w9, [x20, #8]
   1febc:	cmp	w8, w9
   1fec0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1fec4:	ldr	x11, [sp, #24]
   1fec8:	add	w8, w8, #0x1
   1fecc:	str	w8, [x20, #8]
   1fed0:	ldr	w10, [x11, #72]
   1fed4:	ldr	x11, [x11, #56]
   1fed8:	cbz	w10, 1ff38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b0c>
   1fedc:	ldr	x12, [x21]
   1fee0:	orr	x13, x12, #0x8
   1fee4:	cmn	x13, #0x8
   1fee8:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   1feec:	ubfx	x13, x12, #4, #28
   1fef0:	eor	w14, w13, w12, lsr #9
   1fef4:	sub	w13, w10, #0x1
   1fef8:	and	w14, w14, w13
   1fefc:	add	x15, x11, w14, uxtw #4
   1ff00:	ldr	x16, [x15]
   1ff04:	cmp	x16, x12
   1ff08:	b.eq	1ff3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b10>  // b.none
   1ff0c:	mov	w17, #0x1                   	// #1
   1ff10:	cmn	x16, #0x8
   1ff14:	b.eq	1ff38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b0c>  // b.none
   1ff18:	add	w14, w14, w17
   1ff1c:	and	w14, w14, w13
   1ff20:	add	x15, x11, w14, uxtw #4
   1ff24:	ldr	x16, [x15]
   1ff28:	add	w17, w17, #0x1
   1ff2c:	cmp	x16, x12
   1ff30:	b.eq	1ff3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b10>  // b.none
   1ff34:	b	1ff10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ae4>
   1ff38:	add	x15, x11, x10, lsl #4
   1ff3c:	add	x10, x11, x10, lsl #4
   1ff40:	cmp	x15, x10
   1ff44:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   1ff48:	ldr	w10, [x15, #8]
   1ff4c:	cmp	w8, w9
   1ff50:	sub	w19, w10, #0x1
   1ff54:	b.cs	23bb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5784>  // b.hs, b.nlast
   1ff58:	ldr	x9, [x20]
   1ff5c:	str	w19, [x9, w8, uxtw #2]
   1ff60:	ldp	w8, w9, [x20, #8]
   1ff64:	cmp	w8, w9
   1ff68:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   1ff6c:	add	w8, w8, #0x1
   1ff70:	mov	w25, wzr
   1ff74:	str	w8, [x20, #8]
   1ff78:	mov	w24, #0x17                  	// #23
   1ff7c:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   1ff80:	ldr	x22, [sp, #32]
   1ff84:	add	x13, x9, x8, lsl #4
   1ff88:	add	x8, x9, x8, lsl #4
   1ff8c:	cmp	x13, x8
   1ff90:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   1ff94:	ldr	w8, [x13, #8]
   1ff98:	mov	w9, #0x1                   	// #1
   1ff9c:	str	w9, [sp, #48]
   1ffa0:	sub	w8, w8, #0x1
   1ffa4:	str	x8, [sp, #56]
   1ffa8:	ldr	w8, [x21, #20]
   1ffac:	and	x24, x8, #0xfffffff
   1ffb0:	cbz	w24, 200e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1cb8>
   1ffb4:	mov	x25, xzr
   1ffb8:	mov	w26, #0x1                   	// #1
   1ffbc:	mov	w27, #0x18                  	// #24
   1ffc0:	mov	x9, x24
   1ffc4:	tbnz	w8, #30, 1ffd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ba8>
   1ffc8:	mneg	x8, x9, x27
   1ffcc:	add	x8, x21, x8
   1ffd0:	b	1ffd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1bac>
   1ffd4:	ldur	x8, [x21, #-8]
   1ffd8:	ldr	x1, [x8, x25]
   1ffdc:	mov	x0, x22
   1ffe0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   1ffe4:	subs	w8, w23, w0
   1ffe8:	sbfiz	x19, x8, #1, #32
   1ffec:	b.mi	20098 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c6c>  // b.first
   1fff0:	ldp	w8, w9, [sp, #48]
   1fff4:	cmp	w8, w9
   1fff8:	b.cs	200ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c80>  // b.hs, b.nlast
   1fffc:	ldr	x9, [sp, #40]
   20000:	str	x19, [x9, w8, uxtw #3]
   20004:	ldp	w8, w9, [sp, #48]
   20008:	cmp	w8, w9
   2000c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20010:	add	w8, w8, #0x1
   20014:	str	w8, [sp, #48]
   20018:	ldr	w8, [x21, #20]
   2001c:	tbnz	w8, #30, 20030 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c04>
   20020:	and	x8, x8, #0xfffffff
   20024:	mneg	x8, x8, x27
   20028:	add	x8, x21, x8
   2002c:	b	20034 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c08>
   20030:	ldur	x8, [x21, #-8]
   20034:	ldr	w9, [x21, #56]
   20038:	mov	x0, x22
   2003c:	madd	x8, x9, x27, x8
   20040:	ldr	x1, [x8, x26, lsl #3]
   20044:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20048:	ldp	w8, w9, [sp, #48]
   2004c:	mov	w19, w0
   20050:	cmp	w8, w9
   20054:	b.cs	200c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c9c>  // b.hs, b.nlast
   20058:	ldr	x9, [sp, #40]
   2005c:	str	x19, [x9, w8, uxtw #3]
   20060:	ldp	w8, w9, [sp, #48]
   20064:	cmp	w8, w9
   20068:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2006c:	add	w8, w8, #0x1
   20070:	cmp	x24, x26
   20074:	str	w8, [sp, #48]
   20078:	b.eq	200e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1cb8>  // b.none
   2007c:	ldr	w8, [x21, #20]
   20080:	add	x25, x25, #0x18
   20084:	and	x9, x8, #0xfffffff
   20088:	cmp	x26, x9
   2008c:	add	x26, x26, #0x1
   20090:	b.cc	1ffc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b98>  // b.lo, b.ul, b.last
   20094:	b	2487c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6450>
   20098:	ldp	w8, w9, [sp, #48]
   2009c:	neg	x10, x19
   200a0:	orr	x19, x10, #0x1
   200a4:	cmp	w8, w9
   200a8:	b.cc	1fffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1bd0>  // b.lo, b.ul, b.last
   200ac:	add	x0, sp, #0x28
   200b0:	mov	w3, #0x8                   	// #8
   200b4:	mov	x1, x20
   200b8:	mov	x2, xzr
   200bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   200c0:	ldr	w8, [sp, #48]
   200c4:	b	1fffc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1bd0>
   200c8:	add	x0, sp, #0x28
   200cc:	mov	w3, #0x8                   	// #8
   200d0:	mov	x1, x20
   200d4:	mov	x2, xzr
   200d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   200dc:	ldr	w8, [sp, #48]
   200e0:	b	20058 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1c2c>
   200e4:	mov	x0, x21
   200e8:	bl	13e50 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   200ec:	cbz	x0, 2011c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1cf0>
   200f0:	ldp	w8, w9, [sp, #48]
   200f4:	mov	x21, x0
   200f8:	cmp	w8, w9
   200fc:	b.cs	24224 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5df8>  // b.hs, b.nlast
   20100:	ldr	x9, [sp, #40]
   20104:	str	x21, [x9, w8, uxtw #3]
   20108:	ldp	w8, w9, [sp, #48]
   2010c:	cmp	w8, w9
   20110:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20114:	add	w8, w8, #0x1
   20118:	str	w8, [sp, #48]
   2011c:	ldr	x8, [sp, #24]
   20120:	add	x2, sp, #0x28
   20124:	mov	w1, #0x10                  	// #16
   20128:	mov	w3, wzr
   2012c:	ldr	x0, [x8]
   20130:	add	x19, sp, #0x28
   20134:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   20138:	ldr	x0, [sp, #40]
   2013c:	add	x8, x19, #0x10
   20140:	str	wzr, [sp, #48]
   20144:	cmp	x0, x8
   20148:	b.eq	23810 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53e4>  // b.none
   2014c:	bl	0 <free>
   20150:	b	23810 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53e4>
   20154:	ldr	x22, [sp, #32]
   20158:	add	x13, x9, x8, lsl #4
   2015c:	add	x8, x9, x8, lsl #4
   20160:	cmp	x13, x8
   20164:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   20168:	ldp	w8, w9, [x20, #8]
   2016c:	ldr	w10, [x13, #8]
   20170:	cmp	w8, w9
   20174:	sub	w19, w10, #0x1
   20178:	b.cs	23bcc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x57a0>  // b.hs, b.nlast
   2017c:	ldr	x9, [x20]
   20180:	str	w19, [x9, w8, uxtw #2]
   20184:	ldp	w8, w9, [x20, #8]
   20188:	cmp	w8, w9
   2018c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20190:	add	w8, w8, #0x1
   20194:	str	w8, [x20, #8]
   20198:	ldr	w11, [x21, #20]
   2019c:	and	x10, x11, #0xfffffff
   201a0:	cbz	w10, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   201a4:	tbnz	w11, #30, 201b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d8c>
   201a8:	mov	w11, #0x18                  	// #24
   201ac:	mneg	x10, x10, x11
   201b0:	add	x12, x21, x10
   201b4:	b	201bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d90>
   201b8:	ldur	x12, [x21, #-8]
   201bc:	ldr	x11, [sp, #24]
   201c0:	ldr	w10, [x11, #72]
   201c4:	ldr	x11, [x11, #56]
   201c8:	cbz	w10, 20608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21dc>
   201cc:	ldr	x12, [x12]
   201d0:	ldr	x12, [x12]
   201d4:	orr	x13, x12, #0x8
   201d8:	cmn	x13, #0x8
   201dc:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   201e0:	ubfx	x13, x12, #4, #28
   201e4:	eor	w14, w13, w12, lsr #9
   201e8:	sub	w13, w10, #0x1
   201ec:	and	w14, w14, w13
   201f0:	add	x15, x11, w14, uxtw #4
   201f4:	ldr	x16, [x15]
   201f8:	cmp	x16, x12
   201fc:	b.eq	2060c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21e0>  // b.none
   20200:	mov	w17, #0x1                   	// #1
   20204:	cmn	x16, #0x8
   20208:	b.eq	20608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21dc>  // b.none
   2020c:	add	w14, w14, w17
   20210:	and	w14, w14, w13
   20214:	add	x15, x11, w14, uxtw #4
   20218:	ldr	x16, [x15]
   2021c:	add	w17, w17, #0x1
   20220:	cmp	x16, x12
   20224:	b.eq	2060c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21e0>  // b.none
   20228:	b	20204 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1dd8>
   2022c:	add	x13, x9, x8, lsl #4
   20230:	add	x8, x9, x8, lsl #4
   20234:	cmp	x13, x8
   20238:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   2023c:	ldp	w8, w9, [x20, #8]
   20240:	ldr	w10, [x13, #8]
   20244:	cmp	w8, w9
   20248:	sub	w19, w10, #0x1
   2024c:	b.cs	23be8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x57bc>  // b.hs, b.nlast
   20250:	ldr	x9, [x20]
   20254:	str	w19, [x9, w8, uxtw #2]
   20258:	ldp	w8, w9, [x20, #8]
   2025c:	cmp	w8, w9
   20260:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20264:	add	w8, w8, #0x1
   20268:	str	w8, [x20, #8]
   2026c:	ldr	w9, [x21, #20]
   20270:	and	x8, x9, #0xfffffff
   20274:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   20278:	tbnz	w9, #30, 2028c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e60>
   2027c:	mov	w9, #0x18                  	// #24
   20280:	mneg	x8, x8, x9
   20284:	add	x8, x21, x8
   20288:	b	20290 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e64>
   2028c:	ldur	x8, [x21, #-8]
   20290:	ldr	x1, [x8]
   20294:	mov	x0, x22
   20298:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   2029c:	ldp	w8, w9, [x20, #8]
   202a0:	sub	w19, w23, w0
   202a4:	cmp	w8, w9
   202a8:	b.cs	23c04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x57d8>  // b.hs, b.nlast
   202ac:	ldr	x9, [x20]
   202b0:	str	w19, [x9, w8, uxtw #2]
   202b4:	ldp	w8, w9, [x20, #8]
   202b8:	cmp	w8, w9
   202bc:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   202c0:	add	w8, w8, #0x1
   202c4:	str	w8, [x20, #8]
   202c8:	ldr	w8, [x21, #20]
   202cc:	and	x19, x8, #0xfffffff
   202d0:	cmp	w19, #0x1
   202d4:	b.ne	202e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1eb8>  // b.any
   202d8:	mov	w25, wzr
   202dc:	mov	w24, #0x1f                  	// #31
   202e0:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   202e4:	cbz	w19, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   202e8:	add	x23, x20, #0x10
   202ec:	mov	w25, #0x2                   	// #2
   202f0:	mov	w26, #0x18                  	// #24
   202f4:	mov	w27, #0x18                  	// #24
   202f8:	mov	x9, x19
   202fc:	tbnz	w8, #30, 2030c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ee0>
   20300:	mneg	x8, x9, x26
   20304:	add	x8, x21, x8
   20308:	b	20310 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ee4>
   2030c:	ldur	x8, [x21, #-8]
   20310:	ldr	x1, [x8, x27]
   20314:	mov	x0, x22
   20318:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   2031c:	ldp	w8, w9, [x20, #8]
   20320:	mov	w24, w0
   20324:	cmp	w8, w9
   20328:	b.cs	2036c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f40>  // b.hs, b.nlast
   2032c:	ldr	x9, [x20]
   20330:	str	w24, [x9, w8, uxtw #2]
   20334:	ldp	w8, w9, [x20, #8]
   20338:	cmp	w8, w9
   2033c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20340:	add	w8, w8, #0x1
   20344:	cmp	x19, x25
   20348:	str	w8, [x20, #8]
   2034c:	b.eq	202d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1eac>  // b.none
   20350:	ldr	w8, [x21, #20]
   20354:	add	x27, x27, #0x18
   20358:	and	x9, x8, #0xfffffff
   2035c:	cmp	x25, x9
   20360:	add	x25, x25, #0x1
   20364:	b.cc	202fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1ed0>  // b.lo, b.ul, b.last
   20368:	b	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   2036c:	mov	w3, #0x4                   	// #4
   20370:	mov	x0, x20
   20374:	mov	x1, x23
   20378:	mov	x2, xzr
   2037c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   20380:	ldr	w8, [x20, #8]
   20384:	b	2032c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f00>
   20388:	add	x13, x9, x8, lsl #4
   2038c:	add	x8, x9, x8, lsl #4
   20390:	cmp	x13, x8
   20394:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   20398:	ldp	w8, w9, [x20, #8]
   2039c:	ldr	w10, [x13, #8]
   203a0:	cmp	w8, w9
   203a4:	sub	w19, w10, #0x1
   203a8:	b.cs	23c20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x57f4>  // b.hs, b.nlast
   203ac:	ldr	x9, [x20]
   203b0:	str	w19, [x9, w8, uxtw #2]
   203b4:	ldp	w8, w9, [x20, #8]
   203b8:	cmp	w8, w9
   203bc:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   203c0:	add	w8, w8, #0x1
   203c4:	str	w8, [x20, #8]
   203c8:	ldr	w9, [x21, #20]
   203cc:	and	x8, x9, #0xfffffff
   203d0:	cbz	w8, 2475c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6330>
   203d4:	tbnz	w9, #30, 203e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1fbc>
   203d8:	mov	w9, #0x18                  	// #24
   203dc:	mneg	x8, x8, x9
   203e0:	add	x8, x21, x8
   203e4:	b	203ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1fc0>
   203e8:	ldur	x8, [x21, #-8]
   203ec:	ldr	x1, [x8]
   203f0:	mov	x0, x22
   203f4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   203f8:	ldp	w8, w9, [x20, #8]
   203fc:	sub	w19, w23, w0
   20400:	cmp	w8, w9
   20404:	b.cs	23c3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5810>  // b.hs, b.nlast
   20408:	ldr	x9, [x20]
   2040c:	str	w19, [x9, w8, uxtw #2]
   20410:	ldp	w8, w9, [x20, #8]
   20414:	cmp	w8, w9
   20418:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2041c:	add	w8, w8, #0x1
   20420:	str	w8, [x20, #8]
   20424:	ldr	w9, [x21, #20]
   20428:	and	x8, x9, #0xfffffff
   2042c:	cmp	w8, #0x1
   20430:	b.ls	2475c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6330>  // b.plast
   20434:	tbnz	w9, #30, 20448 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x201c>
   20438:	mov	w9, #0x18                  	// #24
   2043c:	mneg	x8, x8, x9
   20440:	add	x8, x21, x8
   20444:	b	2044c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2020>
   20448:	ldur	x8, [x21, #-8]
   2044c:	ldr	x1, [x8, #24]
   20450:	cbz	x1, 247dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x63b0>
   20454:	ldrb	w8, [x1, #16]
   20458:	cmp	w8, #0x12
   2045c:	b.ne	24a34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6608>  // b.any
   20460:	mov	x0, x22
   20464:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20468:	ldp	w8, w9, [x20, #8]
   2046c:	mov	w23, w0
   20470:	cmp	w8, w9
   20474:	b.cs	23c58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x582c>  // b.hs, b.nlast
   20478:	ldr	x9, [x20]
   2047c:	str	w23, [x9, w8, uxtw #2]
   20480:	ldp	w8, w9, [x20, #8]
   20484:	cmp	w8, w9
   20488:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2048c:	add	w8, w8, #0x1
   20490:	str	w8, [x20, #8]
   20494:	ldr	w8, [x21, #20]
   20498:	add	x9, x20, #0x10
   2049c:	str	x9, [sp, #16]
   204a0:	mov	x25, xzr
   204a4:	ubfx	w9, w8, #1, #27
   204a8:	sub	w9, w9, #0x1
   204ac:	mov	w19, #0x1                   	// #1
   204b0:	mov	w26, #0x30                  	// #48
   204b4:	lsl	x28, x9, #1
   204b8:	mov	w23, #0xffffffff            	// #-1
   204bc:	cmp	x28, x25
   204c0:	b.eq	205fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21d0>  // b.none
   204c4:	ubfx	w9, w8, #1, #27
   204c8:	sub	w27, w19, #0x1
   204cc:	sub	w9, w9, #0x1
   204d0:	cmp	w9, w27
   204d4:	b.ls	2477c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6350>  // b.plast
   204d8:	and	w9, w8, #0xfffffff
   204dc:	add	x25, x25, #0x2
   204e0:	cmp	w9, w25
   204e4:	b.ls	2475c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6330>  // b.plast
   204e8:	tbnz	w8, #30, 204fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x20d0>
   204ec:	mov	w8, #0x18                  	// #24
   204f0:	mneg	x8, x9, x8
   204f4:	add	x8, x21, x8
   204f8:	b	20500 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x20d4>
   204fc:	ldur	x8, [x21, #-8]
   20500:	ldr	x1, [x8, x26]
   20504:	mov	x0, x22
   20508:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   2050c:	ldp	w8, w9, [x20, #8]
   20510:	mov	w24, w0
   20514:	cmp	w8, w9
   20518:	b.cs	205c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2198>  // b.hs, b.nlast
   2051c:	ldr	x9, [x20]
   20520:	str	w24, [x9, w8, uxtw #2]
   20524:	ldp	w8, w9, [x20, #8]
   20528:	cmp	w8, w9
   2052c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20530:	add	w8, w8, #0x1
   20534:	str	w8, [x20, #8]
   20538:	ldr	w8, [x21, #20]
   2053c:	cmn	w19, #0x1
   20540:	ubfx	w8, w8, #1, #27
   20544:	sub	w8, w8, #0x1
   20548:	b.eq	20554 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2128>  // b.none
   2054c:	cmp	w8, w27
   20550:	b.ls	2479c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6370>  // b.plast
   20554:	cmp	w8, w27
   20558:	ccmp	w19, w23, #0x4, hi  // hi = pmore
   2055c:	csel	w1, wzr, w19, eq  // eq = none
   20560:	mov	x0, x21
   20564:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   20568:	mov	x1, x0
   2056c:	mov	x0, x22
   20570:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20574:	ldp	w8, w9, [x20, #8]
   20578:	mov	w24, w0
   2057c:	cmp	w8, w9
   20580:	b.cs	205e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21b4>  // b.hs, b.nlast
   20584:	ldr	x9, [x20]
   20588:	str	w24, [x9, w8, uxtw #2]
   2058c:	ldp	w8, w9, [x20, #8]
   20590:	cmp	w8, w9
   20594:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20598:	add	w8, w8, #0x1
   2059c:	str	w8, [x20, #8]
   205a0:	ldr	w8, [x21, #20]
   205a4:	add	w19, w19, #0x1
   205a8:	sub	w9, w19, #0x1
   205ac:	add	x26, x26, #0x30
   205b0:	ubfx	w10, w8, #1, #27
   205b4:	sub	w10, w10, #0x1
   205b8:	cmp	w10, w9
   205bc:	b.cs	204bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2090>  // b.hs, b.nlast
   205c0:	b	247bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6390>
   205c4:	ldr	x1, [sp, #16]
   205c8:	mov	w3, #0x4                   	// #4
   205cc:	mov	x0, x20
   205d0:	mov	x2, xzr
   205d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   205d8:	ldr	w8, [x20, #8]
   205dc:	b	2051c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x20f0>
   205e0:	ldr	x1, [sp, #16]
   205e4:	mov	w3, #0x4                   	// #4
   205e8:	mov	x0, x20
   205ec:	mov	x2, xzr
   205f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   205f4:	ldr	w8, [x20, #8]
   205f8:	b	20584 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2158>
   205fc:	mov	w25, wzr
   20600:	mov	w24, #0xc                   	// #12
   20604:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   20608:	add	x15, x11, x10, lsl #4
   2060c:	add	x10, x11, x10, lsl #4
   20610:	cmp	x15, x10
   20614:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   20618:	ldr	w10, [x15, #8]
   2061c:	cmp	w8, w9
   20620:	sub	w19, w10, #0x1
   20624:	b.cs	23c74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5848>  // b.hs, b.nlast
   20628:	ldr	x9, [x20]
   2062c:	str	w19, [x9, w8, uxtw #2]
   20630:	ldp	w8, w9, [x20, #8]
   20634:	cmp	w8, w9
   20638:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2063c:	add	w8, w8, #0x1
   20640:	str	w8, [x20, #8]
   20644:	ldr	w9, [x21, #20]
   20648:	and	x8, x9, #0xfffffff
   2064c:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   20650:	tbnz	w9, #30, 20664 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2238>
   20654:	mov	w9, #0x18                  	// #24
   20658:	mneg	x8, x8, x9
   2065c:	add	x8, x21, x8
   20660:	b	20668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x223c>
   20664:	ldur	x8, [x21, #-8]
   20668:	ldr	x1, [x8]
   2066c:	mov	x0, x22
   20670:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20674:	ldp	w8, w9, [x20, #8]
   20678:	mov	w22, w0
   2067c:	cmp	w8, w9
   20680:	b.cs	23c90 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5864>  // b.hs, b.nlast
   20684:	ldr	x9, [x20]
   20688:	str	w22, [x9, w8, uxtw #2]
   2068c:	ldp	w8, w9, [x20, #8]
   20690:	cmp	w8, w9
   20694:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20698:	add	w8, w8, #0x1
   2069c:	str	w8, [x20, #8]
   206a0:	ldrh	w10, [x21, #18]
   206a4:	mov	w11, #0x1                   	// #1
   206a8:	and	w12, w10, #0x1f
   206ac:	add	w12, w12, #0xff
   206b0:	tst	w10, #0x1f
   206b4:	orr	w12, w12, #0x100
   206b8:	csel	w12, wzr, w12, eq  // eq = none
   206bc:	lsl	w13, w12, #23
   206c0:	lsl	x11, x11, x12
   206c4:	and	w11, w11, w13, asr #31
   206c8:	clz	w11, w11
   206cc:	cbz	w11, 24b0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x66e0>
   206d0:	mov	w12, #0x20                  	// #32
   206d4:	lsr	w13, w10, #6
   206d8:	and	w10, w10, #0x20
   206dc:	sub	w11, w12, w11
   206e0:	bfi	w10, w13, #7, #1
   206e4:	orr	w10, w10, w11
   206e8:	cmp	w8, w9
   206ec:	orr	w19, w10, #0x40
   206f0:	b.cs	23cac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5880>  // b.hs, b.nlast
   206f4:	ldr	x9, [x20]
   206f8:	str	w19, [x9, w8, uxtw #2]
   206fc:	ldp	w8, w9, [x20, #8]
   20700:	cmp	w8, w9
   20704:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20708:	add	w8, w8, #0x1
   2070c:	mov	w25, wzr
   20710:	str	w8, [x20, #8]
   20714:	mov	w24, #0x13                  	// #19
   20718:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   2071c:	add	x15, x11, x10, lsl #4
   20720:	add	x10, x11, x10, lsl #4
   20724:	cmp	x15, x10
   20728:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   2072c:	ldr	w10, [x15, #8]
   20730:	cmp	w8, w9
   20734:	sub	w19, w10, #0x1
   20738:	b.cs	23cc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x589c>  // b.hs, b.nlast
   2073c:	ldr	x9, [x20]
   20740:	str	w19, [x9, w8, uxtw #2]
   20744:	ldp	w8, w9, [x20, #8]
   20748:	cmp	w8, w9
   2074c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20750:	add	w8, w8, #0x1
   20754:	str	w8, [x20, #8]
   20758:	ldr	w8, [x21, #20]
   2075c:	and	x27, x8, #0xfffffff
   20760:	cbz	w27, 208d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24ac>
   20764:	add	x9, x20, #0x10
   20768:	mov	x28, xzr
   2076c:	str	x9, [sp, #16]
   20770:	mov	w24, #0x18                  	// #24
   20774:	mov	x9, x27
   20778:	tbnz	w8, #30, 20788 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x235c>
   2077c:	mneg	x8, x9, x24
   20780:	add	x8, x21, x8
   20784:	b	2078c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2360>
   20788:	ldur	x8, [x21, #-8]
   2078c:	mul	x9, x28, x24
   20790:	ldr	x25, [x8, x9]
   20794:	mov	x0, x22
   20798:	mov	x1, x25
   2079c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   207a0:	ldp	w8, w9, [x20, #8]
   207a4:	mov	w26, w0
   207a8:	sub	w19, w23, w0
   207ac:	cmp	w8, w9
   207b0:	b.cs	208a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2474>  // b.hs, b.nlast
   207b4:	ldr	x9, [x20]
   207b8:	str	w19, [x9, w8, uxtw #2]
   207bc:	ldp	w8, w9, [x20, #8]
   207c0:	cmp	w8, w9
   207c4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   207c8:	add	w8, w8, #0x1
   207cc:	cmp	w26, w23
   207d0:	str	w8, [x20, #8]
   207d4:	b.cc	20880 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2454>  // b.lo, b.ul, b.last
   207d8:	ldr	x11, [sp, #24]
   207dc:	ldr	w10, [x11, #72]
   207e0:	ldr	x11, [x11, #56]
   207e4:	cbz	w10, 20844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2418>
   207e8:	ldr	x12, [x25]
   207ec:	orr	x13, x12, #0x8
   207f0:	cmn	x13, #0x8
   207f4:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   207f8:	ubfx	x13, x12, #4, #28
   207fc:	eor	w14, w13, w12, lsr #9
   20800:	sub	w13, w10, #0x1
   20804:	and	w14, w14, w13
   20808:	add	x15, x11, w14, uxtw #4
   2080c:	ldr	x16, [x15]
   20810:	cmp	x16, x12
   20814:	b.eq	20848 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x241c>  // b.none
   20818:	mov	w17, #0x1                   	// #1
   2081c:	cmn	x16, #0x8
   20820:	b.eq	20844 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2418>  // b.none
   20824:	add	w14, w14, w17
   20828:	and	w14, w14, w13
   2082c:	add	x15, x11, w14, uxtw #4
   20830:	ldr	x16, [x15]
   20834:	add	w17, w17, #0x1
   20838:	cmp	x16, x12
   2083c:	b.eq	20848 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x241c>  // b.none
   20840:	b	2081c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x23f0>
   20844:	add	x15, x11, x10, lsl #4
   20848:	add	x10, x11, x10, lsl #4
   2084c:	cmp	x15, x10
   20850:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   20854:	ldr	w10, [x15, #8]
   20858:	cmp	w8, w9
   2085c:	sub	w19, w10, #0x1
   20860:	b.cs	208bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2490>  // b.hs, b.nlast
   20864:	ldr	x9, [x20]
   20868:	str	w19, [x9, w8, uxtw #2]
   2086c:	ldp	w8, w9, [x20, #8]
   20870:	cmp	w8, w9
   20874:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20878:	add	w8, w8, #0x1
   2087c:	str	w8, [x20, #8]
   20880:	add	x28, x28, #0x1
   20884:	cmp	x28, x27
   20888:	b.eq	208d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24ac>  // b.none
   2088c:	ldr	w8, [x21, #20]
   20890:	and	x9, x8, #0xfffffff
   20894:	cmp	x28, x9
   20898:	b.cc	20778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x234c>  // b.lo, b.ul, b.last
   2089c:	b	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   208a0:	ldr	x1, [sp, #16]
   208a4:	mov	w3, #0x4                   	// #4
   208a8:	mov	x0, x20
   208ac:	mov	x2, xzr
   208b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   208b4:	ldr	w8, [x20, #8]
   208b8:	b	207b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2388>
   208bc:	ldr	x1, [sp, #16]
   208c0:	mov	w3, #0x4                   	// #4
   208c4:	mov	x0, x20
   208c8:	mov	x2, xzr
   208cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   208d0:	ldr	w8, [x20, #8]
   208d4:	b	20864 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2438>
   208d8:	mov	w24, #0x2b                  	// #43
   208dc:	mov	w25, #0xd                   	// #13
   208e0:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   208e4:	add	x15, x11, x10, lsl #4
   208e8:	add	x10, x11, x10, lsl #4
   208ec:	cmp	x15, x10
   208f0:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   208f4:	ldr	w10, [x15, #8]
   208f8:	cmp	w8, w9
   208fc:	sub	w19, w10, #0x1
   20900:	b.cs	23ce4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x58b8>  // b.hs, b.nlast
   20904:	ldr	x9, [x20]
   20908:	str	w19, [x9, w8, uxtw #2]
   2090c:	ldp	w8, w9, [x20, #8]
   20910:	cmp	w8, w9
   20914:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20918:	add	w8, w8, #0x1
   2091c:	str	w8, [x20, #8]
   20920:	ldr	w9, [x21, #20]
   20924:	and	x8, x9, #0xfffffff
   20928:	cmp	w8, #0x1
   2092c:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   20930:	tbnz	w9, #30, 20944 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2518>
   20934:	mov	w9, #0x18                  	// #24
   20938:	mneg	x8, x8, x9
   2093c:	add	x8, x21, x8
   20940:	b	20948 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x251c>
   20944:	ldur	x8, [x21, #-8]
   20948:	ldr	x1, [x8, #24]
   2094c:	mov	x0, x22
   20950:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20954:	ldp	w8, w9, [x20, #8]
   20958:	sub	w19, w23, w0
   2095c:	cmp	w8, w9
   20960:	b.cs	23884 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5458>  // b.hs, b.nlast
   20964:	ldr	x9, [x20]
   20968:	str	w19, [x9, w8, uxtw #2]
   2096c:	ldp	w8, w9, [x20, #8]
   20970:	cmp	w8, w9
   20974:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20978:	add	w8, w8, #0x1
   2097c:	str	w8, [x20, #8]
   20980:	ldrb	w10, [x27]
   20984:	sub	w10, w10, #0x4d
   20988:	cmp	w10, #0x2
   2098c:	b.cs	249b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6588>  // b.hs, b.nlast
   20990:	ldrh	w10, [x21, #18]
   20994:	cmp	w8, w9
   20998:	and	w19, w10, #0x7fff
   2099c:	b.cs	238a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5474>  // b.hs, b.nlast
   209a0:	ldr	x9, [x20]
   209a4:	str	w19, [x9, w8, uxtw #2]
   209a8:	ldp	w8, w9, [x20, #8]
   209ac:	cmp	w8, w9
   209b0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   209b4:	add	w8, w8, #0x1
   209b8:	mov	x0, x21
   209bc:	str	w8, [x20, #8]
   209c0:	bl	13e50 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   209c4:	cbz	x0, 20a00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x25d4>
   209c8:	ldp	w8, w9, [x20, #8]
   209cc:	mov	x21, x0
   209d0:	cmp	w8, w9
   209d4:	b.cs	238bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5490>  // b.hs, b.nlast
   209d8:	ldr	x9, [x20]
   209dc:	str	w21, [x9, w8, uxtw #2]
   209e0:	ldp	w8, w9, [x20, #8]
   209e4:	cmp	w8, w9
   209e8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   209ec:	add	w8, w8, #0x1
   209f0:	mov	w25, wzr
   209f4:	str	w8, [x20, #8]
   209f8:	mov	w24, #0x1c                  	// #28
   209fc:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   20a00:	mov	w25, wzr
   20a04:	mov	w24, #0x1c                  	// #28
   20a08:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   20a0c:	mov	x0, x21
   20a10:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   20a14:	ldr	w8, [x21, #20]
   20a18:	mov	x25, x0
   20a1c:	tbnz	w8, #31, 222f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ec4>
   20a20:	mov	x8, xzr
   20a24:	b	222fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ed0>
   20a28:	ldr	x19, [sp, #32]
   20a2c:	mov	x0, x19
   20a30:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20a34:	ldp	w8, w9, [x20, #8]
   20a38:	mov	w24, w0
   20a3c:	cmp	w8, w9
   20a40:	b.cs	23d00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x58d4>  // b.hs, b.nlast
   20a44:	ldr	x9, [x20]
   20a48:	str	w24, [x9, w8, uxtw #2]
   20a4c:	ldp	w8, w9, [x20, #8]
   20a50:	cmp	w8, w9
   20a54:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20a58:	add	w8, w8, #0x1
   20a5c:	str	w8, [x20, #8]
   20a60:	ldr	w8, [x21, #20]
   20a64:	and	w8, w8, #0xfffffff
   20a68:	cmp	w8, #0x3
   20a6c:	b.ne	20b0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x26e0>  // b.any
   20a70:	ldur	x1, [x21, #-48]
   20a74:	cbz	x1, 20a84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2658>
   20a78:	ldrb	w8, [x1, #16]
   20a7c:	cmp	w8, #0x12
   20a80:	b.ne	24b9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6770>  // b.any
   20a84:	mov	x0, x19
   20a88:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20a8c:	ldp	w8, w9, [x20, #8]
   20a90:	mov	w24, w0
   20a94:	cmp	w8, w9
   20a98:	b.cs	2425c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5e30>  // b.hs, b.nlast
   20a9c:	ldr	x9, [x20]
   20aa0:	str	w24, [x9, w8, uxtw #2]
   20aa4:	ldp	w8, w9, [x20, #8]
   20aa8:	cmp	w8, w9
   20aac:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20ab0:	add	w8, w8, #0x1
   20ab4:	str	w8, [x20, #8]
   20ab8:	ldr	w8, [x21, #20]
   20abc:	and	w8, w8, #0xfffffff
   20ac0:	cmp	w8, #0x3
   20ac4:	b.ne	24bdc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x67b0>  // b.any
   20ac8:	ldur	x1, [x21, #-72]
   20acc:	mov	x0, x19
   20ad0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20ad4:	ldp	w8, w9, [x20, #8]
   20ad8:	sub	w19, w23, w0
   20adc:	cmp	w8, w9
   20ae0:	b.cs	24278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5e4c>  // b.hs, b.nlast
   20ae4:	ldr	x9, [x20]
   20ae8:	str	w19, [x9, w8, uxtw #2]
   20aec:	ldp	w8, w9, [x20, #8]
   20af0:	cmp	w8, w9
   20af4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20af8:	add	w8, w8, #0x1
   20afc:	mov	w25, wzr
   20b00:	str	w8, [x20, #8]
   20b04:	mov	w24, #0xb                   	// #11
   20b08:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   20b0c:	mov	w25, wzr
   20b10:	mov	w24, #0xb                   	// #11
   20b14:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   20b18:	mov	x0, x21
   20b1c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   20b20:	ldr	w8, [x21, #20]
   20b24:	mov	x25, x0
   20b28:	tbnz	w8, #31, 22988 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x455c>
   20b2c:	mov	x8, xzr
   20b30:	b	22994 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4568>
   20b34:	mov	x0, x21
   20b38:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   20b3c:	ldr	w8, [x21, #20]
   20b40:	mov	x24, x0
   20b44:	tbnz	w8, #31, 22f88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b5c>
   20b48:	mov	x8, xzr
   20b4c:	b	22f94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b68>
   20b50:	mov	w25, #0xa                   	// #10
   20b54:	b	237f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c4>
   20b58:	ldr	x22, [sp, #32]
   20b5c:	add	x9, x20, #0x10
   20b60:	mov	x28, xzr
   20b64:	str	x9, [sp, #16]
   20b68:	mov	w24, #0x18                  	// #24
   20b6c:	mov	x9, x27
   20b70:	tbnz	w8, #30, 20b80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2754>
   20b74:	mneg	x8, x9, x24
   20b78:	add	x8, x21, x8
   20b7c:	b	20b84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2758>
   20b80:	ldur	x8, [x21, #-8]
   20b84:	mul	x9, x28, x24
   20b88:	ldr	x25, [x8, x9]
   20b8c:	mov	x0, x22
   20b90:	mov	x1, x25
   20b94:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20b98:	ldp	w8, w9, [x20, #8]
   20b9c:	mov	w26, w0
   20ba0:	sub	w19, w23, w0
   20ba4:	cmp	w8, w9
   20ba8:	b.cs	20c98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x286c>  // b.hs, b.nlast
   20bac:	ldr	x9, [x20]
   20bb0:	str	w19, [x9, w8, uxtw #2]
   20bb4:	ldp	w8, w9, [x20, #8]
   20bb8:	cmp	w8, w9
   20bbc:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20bc0:	add	w8, w8, #0x1
   20bc4:	cmp	w26, w23
   20bc8:	str	w8, [x20, #8]
   20bcc:	b.cc	20c78 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x284c>  // b.lo, b.ul, b.last
   20bd0:	ldr	x11, [sp, #24]
   20bd4:	ldr	w10, [x11, #72]
   20bd8:	ldr	x11, [x11, #56]
   20bdc:	cbz	w10, 20c3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2810>
   20be0:	ldr	x12, [x25]
   20be4:	orr	x13, x12, #0x8
   20be8:	cmn	x13, #0x8
   20bec:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   20bf0:	ubfx	x13, x12, #4, #28
   20bf4:	eor	w14, w13, w12, lsr #9
   20bf8:	sub	w13, w10, #0x1
   20bfc:	and	w14, w14, w13
   20c00:	add	x15, x11, w14, uxtw #4
   20c04:	ldr	x16, [x15]
   20c08:	cmp	x16, x12
   20c0c:	b.eq	20c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2814>  // b.none
   20c10:	mov	w17, #0x1                   	// #1
   20c14:	cmn	x16, #0x8
   20c18:	b.eq	20c3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2810>  // b.none
   20c1c:	add	w14, w14, w17
   20c20:	and	w14, w14, w13
   20c24:	add	x15, x11, w14, uxtw #4
   20c28:	ldr	x16, [x15]
   20c2c:	add	w17, w17, #0x1
   20c30:	cmp	x16, x12
   20c34:	b.eq	20c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2814>  // b.none
   20c38:	b	20c14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x27e8>
   20c3c:	add	x15, x11, x10, lsl #4
   20c40:	add	x10, x11, x10, lsl #4
   20c44:	cmp	x15, x10
   20c48:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   20c4c:	ldr	w10, [x15, #8]
   20c50:	cmp	w8, w9
   20c54:	sub	w19, w10, #0x1
   20c58:	b.cs	20cb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2888>  // b.hs, b.nlast
   20c5c:	ldr	x9, [x20]
   20c60:	str	w19, [x9, w8, uxtw #2]
   20c64:	ldp	w8, w9, [x20, #8]
   20c68:	cmp	w8, w9
   20c6c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20c70:	add	w8, w8, #0x1
   20c74:	str	w8, [x20, #8]
   20c78:	add	x28, x28, #0x1
   20c7c:	cmp	x28, x27
   20c80:	b.eq	20cd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x28a4>  // b.none
   20c84:	ldr	w8, [x21, #20]
   20c88:	and	x9, x8, #0xfffffff
   20c8c:	cmp	x28, x9
   20c90:	b.cc	20b70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2744>  // b.lo, b.ul, b.last
   20c94:	b	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   20c98:	ldr	x1, [sp, #16]
   20c9c:	mov	w3, #0x4                   	// #4
   20ca0:	mov	x0, x20
   20ca4:	mov	x2, xzr
   20ca8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   20cac:	ldr	w8, [x20, #8]
   20cb0:	b	20bac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2780>
   20cb4:	ldr	x1, [sp, #16]
   20cb8:	mov	w3, #0x4                   	// #4
   20cbc:	mov	x0, x20
   20cc0:	mov	x2, xzr
   20cc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   20cc8:	ldr	w8, [x20, #8]
   20ccc:	b	20c5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2830>
   20cd0:	mov	w25, wzr
   20cd4:	b	237f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c4>
   20cd8:	ldur	x8, [x21, #-8]
   20cdc:	ldr	x1, [x8, #24]
   20ce0:	cbz	x1, 247dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x63b0>
   20ce4:	ldrb	w8, [x1, #16]
   20ce8:	cmp	w8, #0x12
   20cec:	b.ne	24a34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6608>  // b.any
   20cf0:	mov	x0, x22
   20cf4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20cf8:	ldp	w8, w9, [x20, #8]
   20cfc:	mov	w21, w0
   20d00:	cmp	w8, w9
   20d04:	b.cs	24294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5e68>  // b.hs, b.nlast
   20d08:	ldr	x9, [x20]
   20d0c:	str	w21, [x9, w8, uxtw #2]
   20d10:	ldp	w8, w9, [x20, #8]
   20d14:	cmp	w8, w9
   20d18:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20d1c:	add	w8, w8, #0x1
   20d20:	mov	w25, wzr
   20d24:	str	w8, [x20, #8]
   20d28:	mov	w24, #0x34                  	// #52
   20d2c:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   20d30:	ldur	x8, [x21, #-8]
   20d34:	ldr	x24, [x8]
   20d38:	mov	x1, x24
   20d3c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20d40:	ldp	w8, w9, [x20, #8]
   20d44:	mov	w22, w0
   20d48:	sub	w19, w23, w0
   20d4c:	cmp	w8, w9
   20d50:	b.cs	24588 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x615c>  // b.hs, b.nlast
   20d54:	ldr	x9, [x20]
   20d58:	str	w19, [x9, w8, uxtw #2]
   20d5c:	ldp	w8, w9, [x20, #8]
   20d60:	cmp	w8, w9
   20d64:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20d68:	add	w8, w8, #0x1
   20d6c:	cmp	w22, w23
   20d70:	str	w8, [x20, #8]
   20d74:	b.cs	20dd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x29a8>  // b.hs, b.nlast
   20d78:	mov	w25, #0x9                   	// #9
   20d7c:	b	23598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x516c>
   20d80:	ldur	x8, [x21, #-8]
   20d84:	ldr	x24, [x8]
   20d88:	mov	x0, x22
   20d8c:	mov	x1, x24
   20d90:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20d94:	ldp	w8, w9, [x20, #8]
   20d98:	mov	w25, w0
   20d9c:	sub	w19, w23, w0
   20da0:	cmp	w8, w9
   20da4:	b.cs	245a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6178>  // b.hs, b.nlast
   20da8:	ldr	x9, [x20]
   20dac:	str	w19, [x9, w8, uxtw #2]
   20db0:	ldp	w8, w9, [x20, #8]
   20db4:	cmp	w8, w9
   20db8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20dbc:	add	w8, w8, #0x1
   20dc0:	cmp	w25, w23
   20dc4:	str	w8, [x20, #8]
   20dc8:	b.cs	20e40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a14>  // b.hs, b.nlast
   20dcc:	mov	w25, #0x7                   	// #7
   20dd0:	b	236c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5294>
   20dd4:	ldr	x11, [sp, #24]
   20dd8:	ldr	w10, [x11, #72]
   20ddc:	ldr	x11, [x11, #56]
   20de0:	cbz	w10, 23558 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x512c>
   20de4:	ldr	x12, [x24]
   20de8:	orr	x13, x12, #0x8
   20dec:	cmn	x13, #0x8
   20df0:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   20df4:	ubfx	x13, x12, #4, #28
   20df8:	eor	w14, w13, w12, lsr #9
   20dfc:	sub	w13, w10, #0x1
   20e00:	and	w14, w14, w13
   20e04:	add	x15, x11, w14, uxtw #4
   20e08:	ldr	x16, [x15]
   20e0c:	cmp	x16, x12
   20e10:	b.eq	2355c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5130>  // b.none
   20e14:	mov	w17, #0x1                   	// #1
   20e18:	cmn	x16, #0x8
   20e1c:	b.eq	23558 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x512c>  // b.none
   20e20:	add	w14, w14, w17
   20e24:	and	w14, w14, w13
   20e28:	add	x15, x11, w14, uxtw #4
   20e2c:	ldr	x16, [x15]
   20e30:	add	w17, w17, #0x1
   20e34:	cmp	x16, x12
   20e38:	b.eq	2355c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5130>  // b.none
   20e3c:	b	20e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x29ec>
   20e40:	ldr	x11, [sp, #24]
   20e44:	ldr	w10, [x11, #72]
   20e48:	ldr	x11, [x11, #56]
   20e4c:	cbz	w10, 23680 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5254>
   20e50:	ldr	x12, [x24]
   20e54:	orr	x13, x12, #0x8
   20e58:	cmn	x13, #0x8
   20e5c:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   20e60:	ubfx	x13, x12, #4, #28
   20e64:	eor	w14, w13, w12, lsr #9
   20e68:	sub	w13, w10, #0x1
   20e6c:	and	w14, w14, w13
   20e70:	add	x15, x11, w14, uxtw #4
   20e74:	ldr	x16, [x15]
   20e78:	cmp	x16, x12
   20e7c:	b.eq	23684 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5258>  // b.none
   20e80:	mov	w17, #0x1                   	// #1
   20e84:	cmn	x16, #0x8
   20e88:	b.eq	23680 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5254>  // b.none
   20e8c:	add	w14, w14, w17
   20e90:	and	w14, w14, w13
   20e94:	add	x15, x11, w14, uxtw #4
   20e98:	ldr	x16, [x15]
   20e9c:	add	w17, w17, #0x1
   20ea0:	cmp	x16, x12
   20ea4:	b.eq	23684 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5258>  // b.none
   20ea8:	b	20e84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2a58>
   20eac:	add	x15, x11, x10, lsl #4
   20eb0:	add	x10, x11, x10, lsl #4
   20eb4:	cmp	x15, x10
   20eb8:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   20ebc:	ldr	w10, [x15, #8]
   20ec0:	cmp	w8, w9
   20ec4:	sub	w19, w10, #0x1
   20ec8:	b.cs	242b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5e84>  // b.hs, b.nlast
   20ecc:	ldr	x9, [x20]
   20ed0:	str	w19, [x9, w8, uxtw #2]
   20ed4:	ldp	w8, w9, [x20, #8]
   20ed8:	cmp	w8, w9
   20edc:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20ee0:	add	w8, w8, #0x1
   20ee4:	str	w8, [x20, #8]
   20ee8:	ldr	w9, [x21, #20]
   20eec:	and	x8, x9, #0xfffffff
   20ef0:	cmp	w8, #0x1
   20ef4:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   20ef8:	tbnz	w9, #30, 20f0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ae0>
   20efc:	mov	w9, #0x18                  	// #24
   20f00:	mneg	x8, x8, x9
   20f04:	add	x8, x21, x8
   20f08:	b	20f10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ae4>
   20f0c:	ldur	x8, [x21, #-8]
   20f10:	ldr	x21, [x8, #24]
   20f14:	mov	x0, x22
   20f18:	mov	x1, x21
   20f1c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   20f20:	ldp	w8, w9, [x20, #8]
   20f24:	mov	w22, w0
   20f28:	sub	w19, w23, w0
   20f2c:	cmp	w8, w9
   20f30:	b.cs	23d1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x58f0>  // b.hs, b.nlast
   20f34:	ldr	x9, [x20]
   20f38:	str	w19, [x9, w8, uxtw #2]
   20f3c:	ldp	w8, w9, [x20, #8]
   20f40:	cmp	w8, w9
   20f44:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   20f48:	add	w8, w8, #0x1
   20f4c:	cmp	w22, w23
   20f50:	str	w8, [x20, #8]
   20f54:	b.cs	20f64 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2b38>  // b.hs, b.nlast
   20f58:	mov	w25, wzr
   20f5c:	mov	w24, #0x6                   	// #6
   20f60:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   20f64:	ldr	x11, [sp, #24]
   20f68:	ldr	w10, [x11, #72]
   20f6c:	ldr	x11, [x11, #56]
   20f70:	cbz	w10, 20fd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ba4>
   20f74:	ldr	x12, [x21]
   20f78:	orr	x13, x12, #0x8
   20f7c:	cmn	x13, #0x8
   20f80:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   20f84:	ubfx	x13, x12, #4, #28
   20f88:	eor	w14, w13, w12, lsr #9
   20f8c:	sub	w13, w10, #0x1
   20f90:	and	w14, w14, w13
   20f94:	add	x15, x11, w14, uxtw #4
   20f98:	ldr	x16, [x15]
   20f9c:	cmp	x16, x12
   20fa0:	b.eq	20fd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ba8>  // b.none
   20fa4:	mov	w17, #0x1                   	// #1
   20fa8:	cmn	x16, #0x8
   20fac:	b.eq	20fd0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ba4>  // b.none
   20fb0:	add	w14, w14, w17
   20fb4:	and	w14, w14, w13
   20fb8:	add	x15, x11, w14, uxtw #4
   20fbc:	ldr	x16, [x15]
   20fc0:	add	w17, w17, #0x1
   20fc4:	cmp	x16, x12
   20fc8:	b.eq	20fd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ba8>  // b.none
   20fcc:	b	20fa8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2b7c>
   20fd0:	add	x15, x11, x10, lsl #4
   20fd4:	add	x10, x11, x10, lsl #4
   20fd8:	cmp	x15, x10
   20fdc:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   20fe0:	ldr	w10, [x15, #8]
   20fe4:	cmp	w8, w9
   20fe8:	sub	w19, w10, #0x1
   20fec:	b.cs	242cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ea0>  // b.hs, b.nlast
   20ff0:	ldr	x9, [x20]
   20ff4:	str	w19, [x9, w8, uxtw #2]
   20ff8:	ldp	w8, w9, [x20, #8]
   20ffc:	cmp	w8, w9
   21000:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21004:	add	w8, w8, #0x1
   21008:	mov	w25, wzr
   2100c:	str	w8, [x20, #8]
   21010:	mov	w24, #0x6                   	// #6
   21014:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   21018:	add	x15, x11, x10, lsl #4
   2101c:	add	x10, x11, x10, lsl #4
   21020:	cmp	x15, x10
   21024:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21028:	ldr	w10, [x15, #8]
   2102c:	cmp	w8, w9
   21030:	sub	w19, w10, #0x1
   21034:	b.cs	242e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ebc>  // b.hs, b.nlast
   21038:	ldr	x9, [x20]
   2103c:	str	w19, [x9, w8, uxtw #2]
   21040:	ldp	w8, w9, [x20, #8]
   21044:	cmp	w8, w9
   21048:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2104c:	add	w8, w8, #0x1
   21050:	str	w8, [x20, #8]
   21054:	ldr	w9, [x21, #20]
   21058:	and	x8, x9, #0xfffffff
   2105c:	cmp	w8, #0x1
   21060:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   21064:	tbnz	w9, #30, 21078 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c4c>
   21068:	mov	w9, #0x18                  	// #24
   2106c:	mneg	x8, x8, x9
   21070:	add	x8, x21, x8
   21074:	b	2107c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c50>
   21078:	ldur	x8, [x21, #-8]
   2107c:	ldr	x1, [x8, #24]
   21080:	mov	x0, x22
   21084:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21088:	ldp	w8, w9, [x20, #8]
   2108c:	sub	w19, w23, w0
   21090:	cmp	w8, w9
   21094:	b.cs	23d38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x590c>  // b.hs, b.nlast
   21098:	ldr	x9, [x20]
   2109c:	str	w19, [x9, w8, uxtw #2]
   210a0:	ldp	w8, w9, [x20, #8]
   210a4:	cmp	w8, w9
   210a8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   210ac:	add	w8, w8, #0x1
   210b0:	str	w8, [x20, #8]
   210b4:	ldrb	w10, [x27]
   210b8:	cmp	w10, #0x3d
   210bc:	b.ne	24934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6508>  // b.any
   210c0:	ldrh	w10, [x21, #18]
   210c4:	ubfx	w19, w10, #5, #10
   210c8:	cmp	w19, #0xd
   210cc:	b.cs	24b2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6700>  // b.hs, b.nlast
   210d0:	cmp	w8, w9
   210d4:	b.cs	23d54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5928>  // b.hs, b.nlast
   210d8:	ldr	x9, [x20]
   210dc:	str	w19, [x9, w8, uxtw #2]
   210e0:	ldp	w8, w9, [x20, #8]
   210e4:	cmp	w8, w9
   210e8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   210ec:	add	w8, w8, #0x1
   210f0:	str	w8, [x20, #8]
   210f4:	ldrb	w10, [x27]
   210f8:	cmp	w10, #0x3d
   210fc:	b.ne	24934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6508>  // b.any
   21100:	ldrh	w10, [x21, #18]
   21104:	cmp	w8, w9
   21108:	and	w19, w10, #0x1
   2110c:	b.cs	23d70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5944>  // b.hs, b.nlast
   21110:	ldr	x9, [x20]
   21114:	str	w19, [x9, w8, uxtw #2]
   21118:	ldp	w8, w9, [x20, #8]
   2111c:	cmp	w8, w9
   21120:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21124:	add	w8, w8, #0x1
   21128:	str	w8, [x20, #8]
   2112c:	ldrb	w10, [x27]
   21130:	cmp	w10, #0x3d
   21134:	b.ne	24934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6508>  // b.any
   21138:	ldrh	w10, [x21, #18]
   2113c:	mov	w11, #0xf7                  	// #247
   21140:	ubfx	x10, x10, #2, #3
   21144:	lsr	w11, w11, w10
   21148:	tbz	w11, #0, 248bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6490>
   2114c:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   21150:	add	x11, x11, #0x0
   21154:	ldr	w19, [x11, x10, lsl #2]
   21158:	cmp	w8, w9
   2115c:	b.cs	23d8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5960>  // b.hs, b.nlast
   21160:	ldr	x9, [x20]
   21164:	str	w19, [x9, w8, uxtw #2]
   21168:	ldp	w8, w9, [x20, #8]
   2116c:	cmp	w8, w9
   21170:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21174:	add	w8, w8, #0x1
   21178:	str	w8, [x20, #8]
   2117c:	ldrb	w10, [x27]
   21180:	cmp	w10, #0x3d
   21184:	b.ne	24934 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6508>  // b.any
   21188:	ldrb	w19, [x21, #56]
   2118c:	cmp	w8, w9
   21190:	b.cs	23da8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x597c>  // b.hs, b.nlast
   21194:	ldr	x9, [x20]
   21198:	str	w19, [x9, w8, uxtw #2]
   2119c:	ldp	w8, w9, [x20, #8]
   211a0:	cmp	w8, w9
   211a4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   211a8:	add	w8, w8, #0x1
   211ac:	mov	w25, wzr
   211b0:	str	w8, [x20, #8]
   211b4:	mov	w24, #0x26                  	// #38
   211b8:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   211bc:	add	x15, x11, x10, lsl #4
   211c0:	add	x10, x11, x10, lsl #4
   211c4:	cmp	x15, x10
   211c8:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   211cc:	ldr	w10, [x15, #8]
   211d0:	cmp	w8, w9
   211d4:	sub	w19, w10, #0x1
   211d8:	b.cs	24304 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ed8>  // b.hs, b.nlast
   211dc:	ldr	x9, [x20]
   211e0:	str	w19, [x9, w8, uxtw #2]
   211e4:	ldp	w8, w9, [x20, #8]
   211e8:	cmp	w8, w9
   211ec:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   211f0:	mov	w11, wzr
   211f4:	add	w8, w8, #0x1
   211f8:	str	w8, [x20, #8]
   211fc:	ldr	x12, [sp, #24]
   21200:	tst	w24, #0x1
   21204:	csel	w25, wzr, w11, ne  // ne = any
   21208:	mov	w13, #0x29                  	// #41
   2120c:	ldr	w10, [x12, #72]
   21210:	ldr	x11, [x12, #56]
   21214:	mov	w12, #0x14                  	// #20
   21218:	csel	w24, w13, w12, ne  // ne = any
   2121c:	cbz	w10, 2127c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e50>
   21220:	ldr	x12, [x21]
   21224:	orr	x13, x12, #0x8
   21228:	cmn	x13, #0x8
   2122c:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   21230:	ubfx	x13, x12, #4, #28
   21234:	eor	w14, w13, w12, lsr #9
   21238:	sub	w13, w10, #0x1
   2123c:	and	w14, w14, w13
   21240:	add	x15, x11, w14, uxtw #4
   21244:	ldr	x16, [x15]
   21248:	cmp	x16, x12
   2124c:	b.eq	21280 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e54>  // b.none
   21250:	mov	w17, #0x1                   	// #1
   21254:	cmn	x16, #0x8
   21258:	b.eq	2127c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e50>  // b.none
   2125c:	add	w14, w14, w17
   21260:	and	w14, w14, w13
   21264:	add	x15, x11, w14, uxtw #4
   21268:	ldr	x16, [x15]
   2126c:	add	w17, w17, #0x1
   21270:	cmp	x16, x12
   21274:	b.eq	21280 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e54>  // b.none
   21278:	b	21254 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e28>
   2127c:	add	x15, x11, x10, lsl #4
   21280:	add	x10, x11, x10, lsl #4
   21284:	cmp	x15, x10
   21288:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   2128c:	ldr	w10, [x15, #8]
   21290:	cmp	w8, w9
   21294:	sub	w19, w10, #0x1
   21298:	b.cs	23dc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5998>  // b.hs, b.nlast
   2129c:	ldr	x9, [x20]
   212a0:	str	w19, [x9, w8, uxtw #2]
   212a4:	ldp	w8, w9, [x20, #8]
   212a8:	cmp	w8, w9
   212ac:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   212b0:	add	w8, w8, #0x1
   212b4:	str	w8, [x20, #8]
   212b8:	ldrb	w10, [x27]
   212bc:	cmp	w10, #0x38
   212c0:	b.ne	24954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6528>  // b.any
   212c4:	ldrh	w10, [x21, #18]
   212c8:	mov	w11, #0x1f                  	// #31
   212cc:	mov	w12, #0x1                   	// #1
   212d0:	mov	w13, #0x20                  	// #32
   212d4:	ubfx	w14, w10, #1, #5
   212d8:	tst	w11, w10, lsr #1
   212dc:	add	w10, w14, #0xff
   212e0:	orr	w10, w10, #0x100
   212e4:	csel	w10, wzr, w10, eq  // eq = none
   212e8:	lsl	w11, w10, #23
   212ec:	lsl	x10, x12, x10
   212f0:	and	w10, w10, w11, asr #31
   212f4:	clz	w10, w10
   212f8:	cmp	w8, w9
   212fc:	sub	w19, w13, w10
   21300:	b.cs	23de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x59b4>  // b.hs, b.nlast
   21304:	ldr	x9, [x20]
   21308:	str	w19, [x9, w8, uxtw #2]
   2130c:	ldp	w8, w9, [x20, #8]
   21310:	cmp	w8, w9
   21314:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21318:	add	w8, w8, #0x1
   2131c:	str	w8, [x20, #8]
   21320:	ldrb	w10, [x27]
   21324:	cmp	w10, #0x38
   21328:	b.ne	24954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6528>  // b.any
   2132c:	ldrh	w10, [x21, #18]
   21330:	cmp	w8, w9
   21334:	and	w19, w10, #0x1
   21338:	b.cs	23dfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x59d0>  // b.hs, b.nlast
   2133c:	ldr	x9, [x20]
   21340:	str	w19, [x9, w8, uxtw #2]
   21344:	ldp	w8, w9, [x20, #8]
   21348:	cmp	w8, w9
   2134c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21350:	add	w8, w8, #0x1
   21354:	str	w8, [x20, #8]
   21358:	ldrb	w8, [x27]
   2135c:	cmp	w8, #0x38
   21360:	b.ne	24954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6528>  // b.any
   21364:	mov	x0, x21
   21368:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
   2136c:	tbz	w0, #0, 237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   21370:	ldrb	w8, [x27]
   21374:	cmp	w8, #0x38
   21378:	b.ne	24954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6528>  // b.any
   2137c:	ldrh	w8, [x21, #18]
   21380:	ubfx	x9, x8, #7, #3
   21384:	mov	w8, #0xf7                  	// #247
   21388:	lsr	w8, w8, w9
   2138c:	tbz	w8, #0, 248bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6490>
   21390:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   21394:	ldp	w8, w10, [x20, #8]
   21398:	add	x11, x11, #0x0
   2139c:	ldr	w19, [x11, x9, lsl #2]
   213a0:	cmp	w8, w10
   213a4:	b.cs	24320 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ef4>  // b.hs, b.nlast
   213a8:	ldr	x9, [x20]
   213ac:	str	w19, [x9, w8, uxtw #2]
   213b0:	ldp	w8, w9, [x20, #8]
   213b4:	cmp	w8, w9
   213b8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   213bc:	add	w8, w8, #0x1
   213c0:	str	w8, [x20, #8]
   213c4:	ldrb	w10, [x27]
   213c8:	cmp	w10, #0x38
   213cc:	b.ne	24954 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6528>  // b.any
   213d0:	ldrb	w19, [x21, #56]
   213d4:	cmp	w8, w9
   213d8:	b.cs	2433c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f10>  // b.hs, b.nlast
   213dc:	ldr	x9, [x20]
   213e0:	str	w19, [x9, w8, uxtw #2]
   213e4:	ldp	w8, w9, [x20, #8]
   213e8:	cmp	w8, w9
   213ec:	b.cc	22038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c0c>  // b.lo, b.ul, b.last
   213f0:	b	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>
   213f4:	add	x15, x11, x10, lsl #4
   213f8:	add	x10, x11, x10, lsl #4
   213fc:	cmp	x15, x10
   21400:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21404:	ldr	w10, [x15, #8]
   21408:	cmp	w8, w9
   2140c:	sub	w19, w10, #0x1
   21410:	b.cs	24358 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f2c>  // b.hs, b.nlast
   21414:	ldr	x9, [x20]
   21418:	str	w19, [x9, w8, uxtw #2]
   2141c:	ldp	w8, w9, [x20, #8]
   21420:	cmp	w8, w9
   21424:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21428:	mov	w25, wzr
   2142c:	add	w8, w8, #0x1
   21430:	str	w8, [x20, #8]
   21434:	mov	w24, #0x3a                  	// #58
   21438:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   2143c:	add	x15, x11, x10, lsl #4
   21440:	add	x10, x11, x10, lsl #4
   21444:	cmp	x15, x10
   21448:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   2144c:	ldr	w10, [x15, #8]
   21450:	cmp	w8, w9
   21454:	sub	w19, w10, #0x1
   21458:	b.cs	24374 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f48>  // b.hs, b.nlast
   2145c:	ldr	x9, [x20]
   21460:	str	w19, [x9, w8, uxtw #2]
   21464:	ldp	w8, w9, [x20, #8]
   21468:	cmp	w8, w9
   2146c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21470:	add	w8, w8, #0x1
   21474:	str	w8, [x20, #8]
   21478:	ldr	w9, [x21, #20]
   2147c:	and	x8, x9, #0xfffffff
   21480:	cmp	w8, #0x2
   21484:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   21488:	tbnz	w9, #30, 2149c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3070>
   2148c:	mov	w9, #0x18                  	// #24
   21490:	mneg	x8, x8, x9
   21494:	add	x8, x21, x8
   21498:	b	214a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3074>
   2149c:	ldur	x8, [x21, #-8]
   214a0:	ldr	x1, [x8, #48]
   214a4:	mov	x0, x22
   214a8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   214ac:	ldp	w8, w9, [x20, #8]
   214b0:	sub	w19, w23, w0
   214b4:	cmp	w8, w9
   214b8:	b.cs	23e18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x59ec>  // b.hs, b.nlast
   214bc:	ldr	x9, [x20]
   214c0:	str	w19, [x9, w8, uxtw #2]
   214c4:	ldp	w8, w9, [x20, #8]
   214c8:	cmp	w8, w9
   214cc:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   214d0:	add	w8, w8, #0x1
   214d4:	str	w8, [x20, #8]
   214d8:	ldr	w9, [x21, #20]
   214dc:	and	x8, x9, #0xfffffff
   214e0:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   214e4:	tbnz	w9, #30, 214f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x30cc>
   214e8:	mov	w9, #0x18                  	// #24
   214ec:	mneg	x8, x8, x9
   214f0:	add	x8, x21, x8
   214f4:	b	214fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x30d0>
   214f8:	ldur	x8, [x21, #-8]
   214fc:	ldr	x24, [x8]
   21500:	mov	x0, x22
   21504:	mov	x1, x24
   21508:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   2150c:	ldp	w8, w9, [x20, #8]
   21510:	mov	w22, w0
   21514:	sub	w19, w23, w0
   21518:	cmp	w8, w9
   2151c:	b.cs	23e34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5a08>  // b.hs, b.nlast
   21520:	ldr	x9, [x20]
   21524:	str	w19, [x9, w8, uxtw #2]
   21528:	ldp	w8, w9, [x20, #8]
   2152c:	cmp	w8, w9
   21530:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21534:	add	w8, w8, #0x1
   21538:	cmp	w22, w23
   2153c:	str	w8, [x20, #8]
   21540:	b.cc	21ba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x377c>  // b.lo, b.ul, b.last
   21544:	ldr	x11, [sp, #24]
   21548:	ldr	w10, [x11, #72]
   2154c:	ldr	x11, [x11, #56]
   21550:	cbz	w10, 21b6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3740>
   21554:	ldr	x12, [x24]
   21558:	orr	x13, x12, #0x8
   2155c:	cmn	x13, #0x8
   21560:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   21564:	ubfx	x13, x12, #4, #28
   21568:	eor	w14, w13, w12, lsr #9
   2156c:	sub	w13, w10, #0x1
   21570:	and	w14, w14, w13
   21574:	add	x15, x11, w14, uxtw #4
   21578:	ldr	x16, [x15]
   2157c:	cmp	x16, x12
   21580:	b.eq	21b70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3744>  // b.none
   21584:	mov	w17, #0x1                   	// #1
   21588:	cmn	x16, #0x8
   2158c:	b.eq	21b6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3740>  // b.none
   21590:	add	w14, w14, w17
   21594:	and	w14, w14, w13
   21598:	add	x15, x11, w14, uxtw #4
   2159c:	ldr	x16, [x15]
   215a0:	add	w17, w17, #0x1
   215a4:	cmp	x16, x12
   215a8:	b.eq	21b70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3744>  // b.none
   215ac:	b	21588 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x315c>
   215b0:	add	x15, x11, x10, lsl #4
   215b4:	add	x10, x11, x10, lsl #4
   215b8:	cmp	x15, x10
   215bc:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   215c0:	ldr	w10, [x15, #8]
   215c4:	cmp	w8, w9
   215c8:	sub	w19, w10, #0x1
   215cc:	b.cs	24390 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f64>  // b.hs, b.nlast
   215d0:	ldr	x9, [x20]
   215d4:	str	w19, [x9, w8, uxtw #2]
   215d8:	ldp	w8, w9, [x20, #8]
   215dc:	cmp	w8, w9
   215e0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   215e4:	add	w8, w8, #0x1
   215e8:	str	w8, [x20, #8]
   215ec:	ldr	w9, [x21, #20]
   215f0:	and	x8, x9, #0xfffffff
   215f4:	cmp	w8, #0x1
   215f8:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   215fc:	tbnz	w9, #30, 21610 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x31e4>
   21600:	mov	w9, #0x18                  	// #24
   21604:	mneg	x8, x8, x9
   21608:	add	x8, x21, x8
   2160c:	b	21614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x31e8>
   21610:	ldur	x8, [x21, #-8]
   21614:	ldr	x1, [x8, #24]
   21618:	mov	x0, x22
   2161c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21620:	ldp	w8, w9, [x20, #8]
   21624:	sub	w19, w23, w0
   21628:	cmp	w8, w9
   2162c:	b.cs	23e50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5a24>  // b.hs, b.nlast
   21630:	ldr	x9, [x20]
   21634:	str	w19, [x9, w8, uxtw #2]
   21638:	ldp	w8, w9, [x20, #8]
   2163c:	cmp	w8, w9
   21640:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21644:	add	w8, w8, #0x1
   21648:	str	w8, [x20, #8]
   2164c:	ldr	w9, [x21, #20]
   21650:	and	x8, x9, #0xfffffff
   21654:	cmp	w8, #0x2
   21658:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   2165c:	tbnz	w9, #30, 21670 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3244>
   21660:	mov	w9, #0x18                  	// #24
   21664:	mneg	x8, x8, x9
   21668:	add	x8, x21, x8
   2166c:	b	21674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3248>
   21670:	ldur	x8, [x21, #-8]
   21674:	ldr	x21, [x8, #48]
   21678:	mov	x0, x22
   2167c:	mov	x1, x21
   21680:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21684:	ldp	w8, w9, [x20, #8]
   21688:	mov	w22, w0
   2168c:	sub	w19, w23, w0
   21690:	cmp	w8, w9
   21694:	b.cs	23e6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5a40>  // b.hs, b.nlast
   21698:	ldr	x9, [x20]
   2169c:	str	w19, [x9, w8, uxtw #2]
   216a0:	ldp	w8, w9, [x20, #8]
   216a4:	cmp	w8, w9
   216a8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   216ac:	add	w8, w8, #0x1
   216b0:	cmp	w22, w23
   216b4:	str	w8, [x20, #8]
   216b8:	b.cs	216c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x329c>  // b.hs, b.nlast
   216bc:	mov	w25, wzr
   216c0:	mov	w24, #0x7                   	// #7
   216c4:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   216c8:	ldr	x11, [sp, #24]
   216cc:	ldr	w10, [x11, #72]
   216d0:	ldr	x11, [x11, #56]
   216d4:	cbz	w10, 21bf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37cc>
   216d8:	ldr	x12, [x21]
   216dc:	orr	x13, x12, #0x8
   216e0:	cmn	x13, #0x8
   216e4:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   216e8:	ubfx	x13, x12, #4, #28
   216ec:	eor	w14, w13, w12, lsr #9
   216f0:	sub	w13, w10, #0x1
   216f4:	and	w14, w14, w13
   216f8:	add	x15, x11, w14, uxtw #4
   216fc:	ldr	x16, [x15]
   21700:	cmp	x16, x12
   21704:	b.eq	21bfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37d0>  // b.none
   21708:	mov	w17, #0x1                   	// #1
   2170c:	cmn	x16, #0x8
   21710:	b.eq	21bf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37cc>  // b.none
   21714:	add	w14, w14, w17
   21718:	and	w14, w14, w13
   2171c:	add	x15, x11, w14, uxtw #4
   21720:	ldr	x16, [x15]
   21724:	add	w17, w17, #0x1
   21728:	cmp	x16, x12
   2172c:	b.eq	21bfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37d0>  // b.none
   21730:	b	2170c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x32e0>
   21734:	add	x15, x11, x10, lsl #4
   21738:	add	x10, x11, x10, lsl #4
   2173c:	cmp	x15, x10
   21740:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21744:	ldr	w10, [x15, #8]
   21748:	cmp	w8, w9
   2174c:	sub	w19, w10, #0x1
   21750:	b.cs	243ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f80>  // b.hs, b.nlast
   21754:	ldr	x9, [x20]
   21758:	str	w19, [x9, w8, uxtw #2]
   2175c:	ldp	w8, w9, [x20, #8]
   21760:	cmp	w8, w9
   21764:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21768:	mov	w25, wzr
   2176c:	add	w8, w8, #0x1
   21770:	str	w8, [x20, #8]
   21774:	ldrb	w10, [x27]
   21778:	cmp	w10, #0x24
   2177c:	b.ne	24b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6718>  // b.any
   21780:	cmp	w8, w9
   21784:	b.cs	23e88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5a5c>  // b.hs, b.nlast
   21788:	ldr	x9, [x20]
   2178c:	str	wzr, [x9, w8, uxtw #2]
   21790:	ldp	w8, w9, [x20, #8]
   21794:	cmp	w8, w9
   21798:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2179c:	add	w8, w8, #0x1
   217a0:	mov	x0, x21
   217a4:	str	w8, [x20, #8]
   217a8:	bl	13e50 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   217ac:	cbz	x0, 217e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33bc>
   217b0:	ldp	w8, w9, [x20, #8]
   217b4:	cmp	w25, #0x5
   217b8:	mov	w10, #0x6                   	// #6
   217bc:	mov	x21, x0
   217c0:	csel	w25, w10, w25, eq  // eq = none
   217c4:	cmp	w8, w9
   217c8:	b.cs	241d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5da4>  // b.hs, b.nlast
   217cc:	ldr	x9, [x20]
   217d0:	str	w21, [x9, w8, uxtw #2]
   217d4:	ldp	w8, w9, [x20, #8]
   217d8:	cmp	w8, w9
   217dc:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   217e0:	add	w8, w8, #0x1
   217e4:	str	w8, [x20, #8]
   217e8:	mov	w24, #0x38                  	// #56
   217ec:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   217f0:	add	x15, x11, x10, lsl #4
   217f4:	add	x10, x11, x10, lsl #4
   217f8:	cmp	x15, x10
   217fc:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21800:	ldr	w10, [x15, #8]
   21804:	cmp	w8, w9
   21808:	sub	w19, w10, #0x1
   2180c:	b.cs	243c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5f9c>  // b.hs, b.nlast
   21810:	ldr	x9, [x20]
   21814:	str	w19, [x9, w8, uxtw #2]
   21818:	ldp	w8, w9, [x20, #8]
   2181c:	cmp	w8, w9
   21820:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21824:	add	w8, w8, #0x1
   21828:	str	w8, [x20, #8]
   2182c:	ldr	w9, [x21, #20]
   21830:	and	x8, x9, #0xfffffff
   21834:	cmp	w8, #0x1
   21838:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   2183c:	tbnz	w9, #30, 21850 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3424>
   21840:	mov	w9, #0x18                  	// #24
   21844:	mneg	x8, x8, x9
   21848:	add	x8, x21, x8
   2184c:	b	21854 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3428>
   21850:	ldur	x8, [x21, #-8]
   21854:	ldr	x1, [x8, #24]
   21858:	mov	x0, x22
   2185c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21860:	ldp	w8, w9, [x20, #8]
   21864:	sub	w19, w23, w0
   21868:	cmp	w8, w9
   2186c:	b.cs	23ea4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5a78>  // b.hs, b.nlast
   21870:	ldr	x9, [x20]
   21874:	str	w19, [x9, w8, uxtw #2]
   21878:	ldp	w8, w9, [x20, #8]
   2187c:	cmp	w8, w9
   21880:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21884:	add	w8, w8, #0x1
   21888:	str	w8, [x20, #8]
   2188c:	ldr	w9, [x21, #20]
   21890:	and	x8, x9, #0xfffffff
   21894:	cmp	w8, #0x2
   21898:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   2189c:	tbnz	w9, #30, 218b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3484>
   218a0:	mov	w9, #0x18                  	// #24
   218a4:	mneg	x8, x8, x9
   218a8:	add	x8, x21, x8
   218ac:	b	218b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3488>
   218b0:	ldur	x8, [x21, #-8]
   218b4:	ldr	x1, [x8, #48]
   218b8:	mov	x0, x22
   218bc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   218c0:	ldp	w8, w9, [x20, #8]
   218c4:	sub	w19, w23, w0
   218c8:	cmp	w8, w9
   218cc:	b.cs	23ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5a94>  // b.hs, b.nlast
   218d0:	ldr	x9, [x20]
   218d4:	str	w19, [x9, w8, uxtw #2]
   218d8:	ldp	w8, w9, [x20, #8]
   218dc:	cmp	w8, w9
   218e0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   218e4:	add	w8, w8, #0x1
   218e8:	mov	w25, wzr
   218ec:	str	w8, [x20, #8]
   218f0:	mov	w24, #0x8                   	// #8
   218f4:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   218f8:	add	x15, x11, x10, lsl #4
   218fc:	add	x10, x11, x10, lsl #4
   21900:	cmp	x15, x10
   21904:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21908:	ldr	w10, [x15, #8]
   2190c:	cmp	w8, w9
   21910:	sub	w19, w10, #0x1
   21914:	b.cs	243e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5fb8>  // b.hs, b.nlast
   21918:	ldr	x9, [x20]
   2191c:	str	w19, [x9, w8, uxtw #2]
   21920:	ldp	w8, w9, [x20, #8]
   21924:	cmp	w8, w9
   21928:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2192c:	add	w8, w8, #0x1
   21930:	str	w8, [x20, #8]
   21934:	ldr	w9, [x21, #20]
   21938:	and	x8, x9, #0xfffffff
   2193c:	cmp	w8, #0x1
   21940:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   21944:	tbnz	w9, #30, 21958 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x352c>
   21948:	mov	w9, #0x18                  	// #24
   2194c:	mneg	x8, x8, x9
   21950:	add	x8, x21, x8
   21954:	b	2195c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3530>
   21958:	ldur	x8, [x21, #-8]
   2195c:	ldr	x24, [x8, #24]
   21960:	mov	x0, x22
   21964:	mov	x1, x24
   21968:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   2196c:	ldp	w8, w9, [x20, #8]
   21970:	mov	w22, w0
   21974:	sub	w19, w23, w0
   21978:	cmp	w8, w9
   2197c:	b.cs	23edc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ab0>  // b.hs, b.nlast
   21980:	ldr	x9, [x20]
   21984:	str	w19, [x9, w8, uxtw #2]
   21988:	ldp	w9, w8, [x20, #8]
   2198c:	cmp	w9, w8
   21990:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21994:	add	w9, w9, #0x1
   21998:	cmp	w22, w23
   2199c:	str	w9, [x20, #8]
   219a0:	b.cc	21c7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3850>  // b.lo, b.ul, b.last
   219a4:	ldr	x11, [sp, #24]
   219a8:	ldr	w10, [x11, #72]
   219ac:	ldr	x11, [x11, #56]
   219b0:	cbz	w10, 21c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3814>
   219b4:	ldr	x12, [x24]
   219b8:	orr	x13, x12, #0x8
   219bc:	cmn	x13, #0x8
   219c0:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   219c4:	ubfx	x13, x12, #4, #28
   219c8:	eor	w14, w13, w12, lsr #9
   219cc:	sub	w13, w10, #0x1
   219d0:	and	w14, w14, w13
   219d4:	add	x15, x11, w14, uxtw #4
   219d8:	ldr	x16, [x15]
   219dc:	cmp	x16, x12
   219e0:	b.eq	21c44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3818>  // b.none
   219e4:	mov	w17, #0x1                   	// #1
   219e8:	cmn	x16, #0x8
   219ec:	b.eq	21c40 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3814>  // b.none
   219f0:	add	w14, w14, w17
   219f4:	and	w14, w14, w13
   219f8:	add	x15, x11, w14, uxtw #4
   219fc:	ldr	x16, [x15]
   21a00:	add	w17, w17, #0x1
   21a04:	cmp	x16, x12
   21a08:	b.eq	21c44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3818>  // b.none
   21a0c:	b	219e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x35bc>
   21a10:	add	x15, x11, x10, lsl #4
   21a14:	add	x10, x11, x10, lsl #4
   21a18:	cmp	x15, x10
   21a1c:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21a20:	ldr	w10, [x15, #8]
   21a24:	cmp	w8, w9
   21a28:	sub	w19, w10, #0x1
   21a2c:	b.cs	24400 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5fd4>  // b.hs, b.nlast
   21a30:	ldr	x9, [x20]
   21a34:	str	w19, [x9, w8, uxtw #2]
   21a38:	ldp	w8, w9, [x20, #8]
   21a3c:	cmp	w8, w9
   21a40:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21a44:	add	w8, w8, #0x1
   21a48:	str	w8, [x20, #8]
   21a4c:	ldr	w9, [x21, #20]
   21a50:	and	x8, x9, #0xfffffff
   21a54:	cbz	w8, 246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   21a58:	tbnz	w9, #30, 21a6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3640>
   21a5c:	mov	w9, #0x18                  	// #24
   21a60:	mneg	x8, x8, x9
   21a64:	add	x8, x21, x8
   21a68:	b	21a70 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3644>
   21a6c:	ldur	x8, [x21, #-8]
   21a70:	ldr	x25, [x8]
   21a74:	mov	x0, x22
   21a78:	mov	x1, x25
   21a7c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21a80:	ldp	w8, w9, [x20, #8]
   21a84:	mov	w22, w0
   21a88:	sub	w19, w23, w0
   21a8c:	cmp	w8, w9
   21a90:	b.cs	23ef8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5acc>  // b.hs, b.nlast
   21a94:	ldr	x9, [x20]
   21a98:	str	w19, [x9, w8, uxtw #2]
   21a9c:	ldp	w8, w9, [x20, #8]
   21aa0:	cmp	w8, w9
   21aa4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21aa8:	add	w8, w8, #0x1
   21aac:	cmp	w22, w23
   21ab0:	str	w8, [x20, #8]
   21ab4:	b.cc	21efc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ad0>  // b.lo, b.ul, b.last
   21ab8:	ldr	x11, [sp, #24]
   21abc:	ldr	w10, [x11, #72]
   21ac0:	ldr	x11, [x11, #56]
   21ac4:	cbz	w10, 21ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a94>
   21ac8:	ldr	x12, [x25]
   21acc:	orr	x13, x12, #0x8
   21ad0:	cmn	x13, #0x8
   21ad4:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   21ad8:	ubfx	x13, x12, #4, #28
   21adc:	eor	w14, w13, w12, lsr #9
   21ae0:	sub	w13, w10, #0x1
   21ae4:	and	w14, w14, w13
   21ae8:	add	x15, x11, w14, uxtw #4
   21aec:	ldr	x16, [x15]
   21af0:	cmp	x16, x12
   21af4:	b.eq	21ec4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a98>  // b.none
   21af8:	mov	w17, #0x1                   	// #1
   21afc:	cmn	x16, #0x8
   21b00:	b.eq	21ec0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a94>  // b.none
   21b04:	add	w14, w14, w17
   21b08:	and	w14, w14, w13
   21b0c:	add	x15, x11, w14, uxtw #4
   21b10:	ldr	x16, [x15]
   21b14:	add	w17, w17, #0x1
   21b18:	cmp	x16, x12
   21b1c:	b.eq	21ec4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a98>  // b.none
   21b20:	b	21afc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x36d0>
   21b24:	add	x15, x11, x10, lsl #4
   21b28:	add	x10, x11, x10, lsl #4
   21b2c:	cmp	x15, x10
   21b30:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21b34:	ldr	w10, [x15, #8]
   21b38:	cmp	w8, w9
   21b3c:	sub	w19, w10, #0x1
   21b40:	b.cs	2441c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ff0>  // b.hs, b.nlast
   21b44:	ldr	x9, [x20]
   21b48:	str	w19, [x9, w8, uxtw #2]
   21b4c:	ldp	w8, w9, [x20, #8]
   21b50:	cmp	w8, w9
   21b54:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21b58:	add	w8, w8, #0x1
   21b5c:	mov	w25, wzr
   21b60:	str	w8, [x20, #8]
   21b64:	mov	w24, #0x27                  	// #39
   21b68:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   21b6c:	add	x15, x11, x10, lsl #4
   21b70:	add	x10, x11, x10, lsl #4
   21b74:	cmp	x15, x10
   21b78:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21b7c:	ldr	w10, [x15, #8]
   21b80:	cmp	w8, w9
   21b84:	sub	w19, w10, #0x1
   21b88:	b.cs	24438 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x600c>  // b.hs, b.nlast
   21b8c:	ldr	x9, [x20]
   21b90:	str	w19, [x9, w8, uxtw #2]
   21b94:	ldp	w8, w9, [x20, #8]
   21b98:	cmp	w8, w9
   21b9c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21ba0:	add	w8, w8, #0x1
   21ba4:	str	w8, [x20, #8]
   21ba8:	mov	x0, x21
   21bac:	bl	13e50 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   21bb0:	cbz	x0, 21bec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37c0>
   21bb4:	ldp	w8, w9, [x20, #8]
   21bb8:	mov	x21, x0
   21bbc:	cmp	w8, w9
   21bc0:	b.cs	241ec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5dc0>  // b.hs, b.nlast
   21bc4:	ldr	x9, [x20]
   21bc8:	str	w21, [x9, w8, uxtw #2]
   21bcc:	ldp	w8, w9, [x20, #8]
   21bd0:	cmp	w8, w9
   21bd4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21bd8:	add	w8, w8, #0x1
   21bdc:	mov	w25, wzr
   21be0:	str	w8, [x20, #8]
   21be4:	mov	w24, #0x1d                  	// #29
   21be8:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   21bec:	mov	w25, wzr
   21bf0:	mov	w24, #0x1d                  	// #29
   21bf4:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   21bf8:	add	x15, x11, x10, lsl #4
   21bfc:	add	x10, x11, x10, lsl #4
   21c00:	cmp	x15, x10
   21c04:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21c08:	ldr	w10, [x15, #8]
   21c0c:	cmp	w8, w9
   21c10:	sub	w19, w10, #0x1
   21c14:	b.cs	24454 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6028>  // b.hs, b.nlast
   21c18:	ldr	x9, [x20]
   21c1c:	str	w19, [x9, w8, uxtw #2]
   21c20:	ldp	w8, w9, [x20, #8]
   21c24:	cmp	w8, w9
   21c28:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21c2c:	add	w8, w8, #0x1
   21c30:	mov	w25, wzr
   21c34:	str	w8, [x20, #8]
   21c38:	mov	w24, #0x7                   	// #7
   21c3c:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   21c40:	add	x15, x11, x10, lsl #4
   21c44:	add	x10, x11, x10, lsl #4
   21c48:	cmp	x15, x10
   21c4c:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21c50:	ldr	w10, [x15, #8]
   21c54:	cmp	w9, w8
   21c58:	sub	w19, w10, #0x1
   21c5c:	b.cs	24470 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6044>  // b.hs, b.nlast
   21c60:	ldr	x8, [x20]
   21c64:	str	w19, [x8, w9, uxtw #2]
   21c68:	ldp	w9, w8, [x20, #8]
   21c6c:	cmp	w9, w8
   21c70:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21c74:	add	w9, w9, #0x1
   21c78:	str	w9, [x20, #8]
   21c7c:	ldrb	w10, [x27]
   21c80:	cmp	w10, #0x59
   21c84:	b.ne	24b5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6730>  // b.any
   21c88:	ldr	w19, [x21, #64]
   21c8c:	ldr	x22, [x21, #56]
   21c90:	mov	w10, w8
   21c94:	mov	w8, w9
   21c98:	sub	x9, x10, x8
   21c9c:	cmp	x9, x19
   21ca0:	b.cs	21cb8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x388c>  // b.hs, b.nlast
   21ca4:	add	x2, x19, x8
   21ca8:	add	x1, x20, #0x10
   21cac:	mov	w3, #0x4                   	// #4
   21cb0:	mov	x0, x20
   21cb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   21cb8:	cbz	w19, 21cd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38a8>
   21cbc:	ldr	x8, [x20]
   21cc0:	ldr	w9, [x20, #8]
   21cc4:	lsl	x2, x19, #2
   21cc8:	mov	x1, x22
   21ccc:	add	x0, x8, x9, lsl #2
   21cd0:	bl	0 <memcpy>
   21cd4:	ldp	w8, w9, [x20, #8]
   21cd8:	add	x8, x8, x19
   21cdc:	cmp	x8, x9
   21ce0:	b.hi	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.pmore
   21ce4:	mov	w25, wzr
   21ce8:	str	w8, [x20, #8]
   21cec:	mov	w24, #0x1b                  	// #27
   21cf0:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   21cf4:	add	x15, x11, x10, lsl #4
   21cf8:	add	x10, x11, x10, lsl #4
   21cfc:	cmp	x15, x10
   21d00:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21d04:	ldr	w10, [x15, #8]
   21d08:	cmp	w9, w8
   21d0c:	sub	w19, w10, #0x1
   21d10:	b.cs	2448c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6060>  // b.hs, b.nlast
   21d14:	ldr	x8, [x20]
   21d18:	str	w19, [x8, w9, uxtw #2]
   21d1c:	ldp	w9, w8, [x20, #8]
   21d20:	cmp	w9, w8
   21d24:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21d28:	add	w9, w9, #0x1
   21d2c:	str	w9, [x20, #8]
   21d30:	ldrb	w10, [x27]
   21d34:	cmp	w10, #0x58
   21d38:	b.ne	24b7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6750>  // b.any
   21d3c:	ldr	w19, [x21, #64]
   21d40:	ldr	x22, [x21, #56]
   21d44:	mov	w10, w8
   21d48:	mov	w8, w9
   21d4c:	sub	x9, x10, x8
   21d50:	cmp	x9, x19
   21d54:	b.cs	21d6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3940>  // b.hs, b.nlast
   21d58:	add	x2, x19, x8
   21d5c:	add	x1, x20, #0x10
   21d60:	mov	w3, #0x4                   	// #4
   21d64:	mov	x0, x20
   21d68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   21d6c:	cbz	w19, 21d88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x395c>
   21d70:	ldr	x8, [x20]
   21d74:	ldr	w9, [x20, #8]
   21d78:	lsl	x2, x19, #2
   21d7c:	mov	x1, x22
   21d80:	add	x0, x8, x9, lsl #2
   21d84:	bl	0 <memcpy>
   21d88:	ldp	w8, w9, [x20, #8]
   21d8c:	add	x8, x8, x19
   21d90:	cmp	x8, x9
   21d94:	b.hi	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.pmore
   21d98:	mov	w25, wzr
   21d9c:	str	w8, [x20, #8]
   21da0:	mov	w24, #0x1a                  	// #26
   21da4:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   21da8:	add	x15, x11, x10, lsl #4
   21dac:	add	x10, x11, x10, lsl #4
   21db0:	cmp	x15, x10
   21db4:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21db8:	ldr	w10, [x15, #8]
   21dbc:	cmp	w8, w9
   21dc0:	sub	w19, w10, #0x1
   21dc4:	b.cs	244a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x607c>  // b.hs, b.nlast
   21dc8:	ldr	x9, [x20]
   21dcc:	str	w19, [x9, w8, uxtw #2]
   21dd0:	ldp	w8, w9, [x20, #8]
   21dd4:	cmp	w8, w9
   21dd8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21ddc:	add	w8, w8, #0x1
   21de0:	str	w8, [x20, #8]
   21de4:	ldr	w9, [x21, #20]
   21de8:	and	x8, x9, #0xfffffff
   21dec:	cmp	w8, #0x1
   21df0:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   21df4:	tbnz	w9, #30, 21e08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x39dc>
   21df8:	mov	w9, #0x18                  	// #24
   21dfc:	mneg	x8, x8, x9
   21e00:	add	x8, x21, x8
   21e04:	b	21e0c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x39e0>
   21e08:	ldur	x8, [x21, #-8]
   21e0c:	ldr	x24, [x8, #24]
   21e10:	mov	x0, x22
   21e14:	mov	x1, x24
   21e18:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   21e1c:	ldp	w8, w9, [x20, #8]
   21e20:	mov	w25, w0
   21e24:	sub	w19, w23, w0
   21e28:	cmp	w8, w9
   21e2c:	b.cs	23f14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ae8>  // b.hs, b.nlast
   21e30:	ldr	x9, [x20]
   21e34:	str	w19, [x9, w8, uxtw #2]
   21e38:	ldp	w8, w9, [x20, #8]
   21e3c:	cmp	w8, w9
   21e40:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21e44:	add	w8, w8, #0x1
   21e48:	cmp	w25, w23
   21e4c:	str	w8, [x20, #8]
   21e50:	b.cc	22088 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c5c>  // b.lo, b.ul, b.last
   21e54:	ldr	x11, [sp, #24]
   21e58:	ldr	w10, [x11, #72]
   21e5c:	ldr	x11, [x11, #56]
   21e60:	cbz	w10, 2204c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c20>
   21e64:	ldr	x12, [x24]
   21e68:	orr	x13, x12, #0x8
   21e6c:	cmn	x13, #0x8
   21e70:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   21e74:	ubfx	x13, x12, #4, #28
   21e78:	eor	w14, w13, w12, lsr #9
   21e7c:	sub	w13, w10, #0x1
   21e80:	and	w14, w14, w13
   21e84:	add	x15, x11, w14, uxtw #4
   21e88:	ldr	x16, [x15]
   21e8c:	cmp	x16, x12
   21e90:	b.eq	22050 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c24>  // b.none
   21e94:	mov	w17, #0x1                   	// #1
   21e98:	cmn	x16, #0x8
   21e9c:	b.eq	2204c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c20>  // b.none
   21ea0:	add	w14, w14, w17
   21ea4:	and	w14, w14, w13
   21ea8:	add	x15, x11, w14, uxtw #4
   21eac:	ldr	x16, [x15]
   21eb0:	add	w17, w17, #0x1
   21eb4:	cmp	x16, x12
   21eb8:	b.eq	22050 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c24>  // b.none
   21ebc:	b	21e98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a6c>
   21ec0:	add	x15, x11, x10, lsl #4
   21ec4:	add	x10, x11, x10, lsl #4
   21ec8:	cmp	x15, x10
   21ecc:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   21ed0:	ldr	w10, [x15, #8]
   21ed4:	cmp	w8, w9
   21ed8:	sub	w19, w10, #0x1
   21edc:	b.cs	244c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6098>  // b.hs, b.nlast
   21ee0:	ldr	x9, [x20]
   21ee4:	str	w19, [x9, w8, uxtw #2]
   21ee8:	ldp	w8, w9, [x20, #8]
   21eec:	cmp	w8, w9
   21ef0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21ef4:	add	w8, w8, #0x1
   21ef8:	str	w8, [x20, #8]
   21efc:	ldrb	w10, [x27]
   21f00:	cmp	w10, #0x39
   21f04:	b.ne	24974 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6548>  // b.any
   21f08:	ldrh	w10, [x21, #18]
   21f0c:	mov	w11, #0x1f                  	// #31
   21f10:	mov	w12, #0x1                   	// #1
   21f14:	mov	w13, #0x20                  	// #32
   21f18:	ubfx	w14, w10, #1, #5
   21f1c:	tst	w11, w10, lsr #1
   21f20:	add	w10, w14, #0xff
   21f24:	orr	w10, w10, #0x100
   21f28:	csel	w10, wzr, w10, eq  // eq = none
   21f2c:	lsl	w11, w10, #23
   21f30:	lsl	x10, x12, x10
   21f34:	and	w10, w10, w11, asr #31
   21f38:	clz	w10, w10
   21f3c:	cmp	w8, w9
   21f40:	sub	w19, w13, w10
   21f44:	b.cs	23f30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5b04>  // b.hs, b.nlast
   21f48:	ldr	x9, [x20]
   21f4c:	str	w19, [x9, w8, uxtw #2]
   21f50:	ldp	w8, w9, [x20, #8]
   21f54:	cmp	w8, w9
   21f58:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21f5c:	add	w8, w8, #0x1
   21f60:	str	w8, [x20, #8]
   21f64:	ldrb	w10, [x27]
   21f68:	cmp	w10, #0x39
   21f6c:	b.ne	24974 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6548>  // b.any
   21f70:	ldrh	w10, [x21, #18]
   21f74:	cmp	w8, w9
   21f78:	and	w19, w10, #0x1
   21f7c:	b.cs	23f4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5b20>  // b.hs, b.nlast
   21f80:	ldr	x9, [x20]
   21f84:	str	w19, [x9, w8, uxtw #2]
   21f88:	ldp	w8, w9, [x20, #8]
   21f8c:	cmp	w8, w9
   21f90:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   21f94:	add	w8, w8, #0x1
   21f98:	str	w8, [x20, #8]
   21f9c:	ldrb	w8, [x27]
   21fa0:	cmp	w8, #0x39
   21fa4:	b.ne	24974 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6548>  // b.any
   21fa8:	mov	x0, x21
   21fac:	bl	0 <_ZNK4llvm11Instruction8isAtomicEv>
   21fb0:	tbz	w0, #0, 22044 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c18>
   21fb4:	ldrb	w8, [x27]
   21fb8:	cmp	w8, #0x39
   21fbc:	b.ne	24974 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6548>  // b.any
   21fc0:	ldrh	w8, [x21, #18]
   21fc4:	ubfx	x9, x8, #7, #3
   21fc8:	mov	w8, #0xf7                  	// #247
   21fcc:	lsr	w8, w8, w9
   21fd0:	tbz	w8, #0, 248bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6490>
   21fd4:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   21fd8:	ldp	w8, w10, [x20, #8]
   21fdc:	add	x11, x11, #0x0
   21fe0:	ldr	w19, [x11, x9, lsl #2]
   21fe4:	cmp	w8, w10
   21fe8:	b.cs	244e0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x60b4>  // b.hs, b.nlast
   21fec:	ldr	x9, [x20]
   21ff0:	str	w19, [x9, w8, uxtw #2]
   21ff4:	ldp	w8, w9, [x20, #8]
   21ff8:	cmp	w8, w9
   21ffc:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22000:	add	w8, w8, #0x1
   22004:	str	w8, [x20, #8]
   22008:	ldrb	w10, [x27]
   2200c:	cmp	w10, #0x39
   22010:	b.ne	24974 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6548>  // b.any
   22014:	ldrb	w19, [x21, #56]
   22018:	cmp	w8, w9
   2201c:	b.cs	244fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x60d0>  // b.hs, b.nlast
   22020:	ldr	x9, [x20]
   22024:	str	w19, [x9, w8, uxtw #2]
   22028:	ldp	w8, w9, [x20, #8]
   2202c:	cmp	w8, w9
   22030:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22034:	mov	w25, wzr
   22038:	add	w8, w8, #0x1
   2203c:	str	w8, [x20, #8]
   22040:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   22044:	mov	w25, wzr
   22048:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   2204c:	add	x15, x11, x10, lsl #4
   22050:	add	x10, x11, x10, lsl #4
   22054:	cmp	x15, x10
   22058:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   2205c:	ldr	w10, [x15, #8]
   22060:	cmp	w8, w9
   22064:	sub	w19, w10, #0x1
   22068:	b.cs	24518 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x60ec>  // b.hs, b.nlast
   2206c:	ldr	x9, [x20]
   22070:	str	w19, [x9, w8, uxtw #2]
   22074:	ldp	w8, w9, [x20, #8]
   22078:	cmp	w8, w9
   2207c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22080:	add	w8, w8, #0x1
   22084:	str	w8, [x20, #8]
   22088:	ldr	w9, [x21, #20]
   2208c:	and	x8, x9, #0xfffffff
   22090:	cmp	w8, #0x2
   22094:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   22098:	tbnz	w9, #30, 220ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c80>
   2209c:	mov	w9, #0x18                  	// #24
   220a0:	mneg	x8, x8, x9
   220a4:	add	x8, x21, x8
   220a8:	b	220b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c84>
   220ac:	ldur	x8, [x21, #-8]
   220b0:	ldr	x1, [x8, #48]
   220b4:	mov	x0, x22
   220b8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   220bc:	ldp	w8, w9, [x20, #8]
   220c0:	sub	w19, w23, w0
   220c4:	cmp	w8, w9
   220c8:	b.cs	23f68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5b3c>  // b.hs, b.nlast
   220cc:	ldr	x9, [x20]
   220d0:	str	w19, [x9, w8, uxtw #2]
   220d4:	ldp	w8, w9, [x20, #8]
   220d8:	cmp	w8, w9
   220dc:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   220e0:	add	w8, w8, #0x1
   220e4:	str	w8, [x20, #8]
   220e8:	ldrb	w10, [x27]
   220ec:	cmp	w10, #0x3c
   220f0:	b.ne	248d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a8>  // b.any
   220f4:	ldrh	w10, [x21, #18]
   220f8:	cmp	w8, w9
   220fc:	and	w19, w10, #0x1
   22100:	b.cs	23f84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5b58>  // b.hs, b.nlast
   22104:	ldr	x9, [x20]
   22108:	str	w19, [x9, w8, uxtw #2]
   2210c:	ldp	w8, w9, [x20, #8]
   22110:	cmp	w8, w9
   22114:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22118:	add	w8, w8, #0x1
   2211c:	str	w8, [x20, #8]
   22120:	ldrb	w10, [x27]
   22124:	cmp	w10, #0x3c
   22128:	b.ne	248d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a8>  // b.any
   2212c:	ldrh	w10, [x21, #18]
   22130:	mov	w11, #0xf7                  	// #247
   22134:	ubfx	x10, x10, #2, #3
   22138:	lsr	w11, w11, w10
   2213c:	tbz	w11, #0, 248bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6490>
   22140:	adrp	x19, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   22144:	add	x19, x19, #0x0
   22148:	ldr	w22, [x19, x10, lsl #2]
   2214c:	cmp	w8, w9
   22150:	b.cs	23fa0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5b74>  // b.hs, b.nlast
   22154:	ldr	x9, [x20]
   22158:	str	w22, [x9, w8, uxtw #2]
   2215c:	ldp	w8, w9, [x20, #8]
   22160:	cmp	w8, w9
   22164:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22168:	add	w8, w8, #0x1
   2216c:	str	w8, [x20, #8]
   22170:	ldrb	w10, [x27]
   22174:	cmp	w10, #0x3c
   22178:	b.ne	248d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a8>  // b.any
   2217c:	ldrb	w22, [x21, #56]
   22180:	cmp	w8, w9
   22184:	b.cs	23fbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5b90>  // b.hs, b.nlast
   22188:	ldr	x9, [x20]
   2218c:	str	w22, [x9, w8, uxtw #2]
   22190:	ldp	w8, w9, [x20, #8]
   22194:	cmp	w8, w9
   22198:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2219c:	add	w8, w8, #0x1
   221a0:	str	w8, [x20, #8]
   221a4:	ldrb	w10, [x27]
   221a8:	cmp	w10, #0x3c
   221ac:	b.ne	248d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a8>  // b.any
   221b0:	ldrh	w10, [x21, #18]
   221b4:	mov	w11, #0xf7                  	// #247
   221b8:	ubfx	x10, x10, #5, #3
   221bc:	lsr	w11, w11, w10
   221c0:	tbz	w11, #0, 248bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6490>
   221c4:	ldr	w19, [x19, x10, lsl #2]
   221c8:	cmp	w8, w9
   221cc:	b.cs	23fd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5bac>  // b.hs, b.nlast
   221d0:	ldr	x9, [x20]
   221d4:	str	w19, [x9, w8, uxtw #2]
   221d8:	ldp	w8, w9, [x20, #8]
   221dc:	cmp	w8, w9
   221e0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   221e4:	add	w8, w8, #0x1
   221e8:	str	w8, [x20, #8]
   221ec:	ldrb	w10, [x27]
   221f0:	cmp	w10, #0x3c
   221f4:	b.ne	248d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64a8>  // b.any
   221f8:	ldrh	w10, [x21, #18]
   221fc:	cmp	w8, w9
   22200:	ubfx	w19, w10, #8, #1
   22204:	b.cs	23ff4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5bc8>  // b.hs, b.nlast
   22208:	ldr	x9, [x20]
   2220c:	str	w19, [x9, w8, uxtw #2]
   22210:	ldp	w8, w9, [x20, #8]
   22214:	cmp	w8, w9
   22218:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2221c:	add	w8, w8, #0x1
   22220:	mov	w25, wzr
   22224:	str	w8, [x20, #8]
   22228:	mov	w24, #0x2e                  	// #46
   2222c:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   22230:	ldur	x8, [x21, #-8]
   22234:	ldr	x21, [x8]
   22238:	mov	x1, x21
   2223c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22240:	ldp	w8, w9, [x20, #8]
   22244:	mov	w22, w0
   22248:	sub	w19, w23, w0
   2224c:	cmp	w8, w9
   22250:	b.cs	24630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6204>  // b.hs, b.nlast
   22254:	ldr	x9, [x20]
   22258:	str	w19, [x9, w8, uxtw #2]
   2225c:	ldp	w8, w9, [x20, #8]
   22260:	cmp	w8, w9
   22264:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22268:	add	w8, w8, #0x1
   2226c:	cmp	w22, w23
   22270:	str	w8, [x20, #8]
   22274:	b.cs	22284 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3e58>  // b.hs, b.nlast
   22278:	mov	w24, #0xa                   	// #10
   2227c:	mov	w25, #0xb                   	// #11
   22280:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   22284:	ldr	x11, [sp, #24]
   22288:	ldr	w10, [x11, #72]
   2228c:	ldr	x11, [x11, #56]
   22290:	cbz	w10, 237b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5384>
   22294:	ldr	x12, [x21]
   22298:	orr	x13, x12, #0x8
   2229c:	cmn	x13, #0x8
   222a0:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   222a4:	ubfx	x13, x12, #4, #28
   222a8:	eor	w14, w13, w12, lsr #9
   222ac:	sub	w13, w10, #0x1
   222b0:	and	w14, w14, w13
   222b4:	add	x15, x11, w14, uxtw #4
   222b8:	ldr	x16, [x15]
   222bc:	cmp	x16, x12
   222c0:	b.eq	237b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5388>  // b.none
   222c4:	mov	w17, #0x1                   	// #1
   222c8:	cmn	x16, #0x8
   222cc:	b.eq	237b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5384>  // b.none
   222d0:	add	w14, w14, w17
   222d4:	and	w14, w14, w13
   222d8:	add	x15, x11, w14, uxtw #4
   222dc:	ldr	x16, [x15]
   222e0:	add	w17, w17, #0x1
   222e4:	cmp	x16, x12
   222e8:	b.eq	237b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5388>  // b.none
   222ec:	b	222c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3e9c>
   222f0:	mov	x0, x21
   222f4:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   222f8:	add	x8, x0, x1
   222fc:	sub	x8, x8, x25
   22300:	lsr	x8, x8, #4
   22304:	cbz	w8, 22324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ef8>
   22308:	tst	x21, #0x7
   2230c:	b.ne	249d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65a8>  // b.any
   22310:	ldr	x0, [sp, #24]
   22314:	and	x8, x21, #0xfffffffffffffff9
   22318:	orr	x1, x8, #0x4
   2231c:	mov	w2, w23
   22320:	bl	24c2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>
   22324:	ldr	x10, [x21, #56]
   22328:	cbz	x10, 22394 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f68>
   2232c:	ldr	x9, [sp, #24]
   22330:	ldr	w8, [x9, #432]
   22334:	ldr	x9, [x9, #416]
   22338:	cbz	w8, 2239c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f70>
   2233c:	orr	x11, x10, #0x4
   22340:	cmn	x11, #0x4
   22344:	b.eq	24994 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6568>  // b.none
   22348:	ubfx	x11, x10, #4, #28
   2234c:	eor	w12, w11, w10, lsr #9
   22350:	sub	w11, w8, #0x1
   22354:	and	w12, w11, w12
   22358:	add	x13, x9, w12, uxtw #4
   2235c:	ldr	x14, [x13]
   22360:	cmp	x14, x10
   22364:	b.eq	223a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f74>  // b.none
   22368:	mov	w15, #0x1                   	// #1
   2236c:	cmn	x14, #0x4
   22370:	b.eq	2239c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f70>  // b.none
   22374:	add	w12, w12, w15
   22378:	and	w12, w12, w11
   2237c:	add	x13, x9, w12, uxtw #4
   22380:	ldr	x14, [x13]
   22384:	add	w15, w15, #0x1
   22388:	cmp	x14, x10
   2238c:	b.eq	223a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f74>  // b.none
   22390:	b	2236c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f40>
   22394:	mov	w19, wzr
   22398:	b	223b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f84>
   2239c:	add	x13, x9, x8, lsl #4
   223a0:	add	x8, x9, x8, lsl #4
   223a4:	cmp	x13, x8
   223a8:	b.eq	249f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65c8>  // b.none
   223ac:	ldr	w19, [x13, #8]
   223b0:	ldp	w8, w9, [x20, #8]
   223b4:	cmp	w8, w9
   223b8:	b.cs	24010 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5be4>  // b.hs, b.nlast
   223bc:	ldr	x9, [x20]
   223c0:	str	w19, [x9, w8, uxtw #2]
   223c4:	ldp	w8, w9, [x20, #8]
   223c8:	cmp	w8, w9
   223cc:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   223d0:	add	w8, w8, #0x1
   223d4:	str	w8, [x20, #8]
   223d8:	ldrh	w10, [x21, #18]
   223dc:	cmp	w8, w9
   223e0:	lsr	w10, w10, #1
   223e4:	and	w10, w10, #0x3ffe
   223e8:	orr	w19, w10, #0x8000
   223ec:	b.cs	2402c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c00>  // b.hs, b.nlast
   223f0:	ldr	x9, [x20]
   223f4:	str	w19, [x9, w8, uxtw #2]
   223f8:	ldp	w8, w9, [x20, #8]
   223fc:	cmp	w8, w9
   22400:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22404:	add	w8, w8, #0x1
   22408:	str	w8, [x20, #8]
   2240c:	ldr	w8, [x21, #72]
   22410:	mov	w9, #0x18                  	// #24
   22414:	mneg	x8, x8, x9
   22418:	add	x8, x26, x8
   2241c:	ldur	x1, [x8, #-24]
   22420:	cbz	x1, 248f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64c8>
   22424:	ldrb	w8, [x1, #16]
   22428:	cmp	w8, #0x12
   2242c:	b.ne	24914 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64e8>  // b.any
   22430:	ldr	x0, [sp, #32]
   22434:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22438:	ldp	w8, w9, [x20, #8]
   2243c:	mov	w25, w0
   22440:	cmp	w8, w9
   22444:	b.cs	24048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c1c>  // b.hs, b.nlast
   22448:	ldr	x9, [x20]
   2244c:	str	w25, [x9, w8, uxtw #2]
   22450:	ldp	w8, w9, [x20, #8]
   22454:	cmp	w8, w9
   22458:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2245c:	add	w8, w8, #0x1
   22460:	str	w8, [x20, #8]
   22464:	ldr	w19, [x21, #72]
   22468:	cmp	w8, w9
   2246c:	b.cs	24064 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c38>  // b.hs, b.nlast
   22470:	ldr	x9, [x20]
   22474:	str	w19, [x9, w8, uxtw #2]
   22478:	ldp	w9, w8, [x20, #8]
   2247c:	cmp	w9, w8
   22480:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22484:	add	w9, w9, #0x1
   22488:	str	w9, [x20, #8]
   2248c:	ldr	w10, [x21, #72]
   22490:	cbz	w10, 2252c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4100>
   22494:	add	x8, x20, #0x10
   22498:	stp	x8, x24, [sp, #8]
   2249c:	sub	x19, x21, #0x18
   224a0:	sub	x24, x10, #0x1
   224a4:	mov	x25, #0xffffffffffffffe8    	// #-24
   224a8:	mov	w8, w10
   224ac:	mul	x8, x8, x25
   224b0:	ldr	x1, [x19, x8]
   224b4:	cbz	x1, 224c4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4098>
   224b8:	ldrb	w8, [x1, #16]
   224bc:	cmp	w8, #0x12
   224c0:	b.ne	2489c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6470>  // b.any
   224c4:	ldr	x0, [sp, #32]
   224c8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   224cc:	ldp	w8, w9, [x20, #8]
   224d0:	mov	w26, w0
   224d4:	cmp	w8, w9
   224d8:	b.cs	2250c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x40e0>  // b.hs, b.nlast
   224dc:	ldr	x9, [x20]
   224e0:	str	w26, [x9, w8, uxtw #2]
   224e4:	ldp	w9, w8, [x20, #8]
   224e8:	cmp	w9, w8
   224ec:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   224f0:	add	w9, w9, #0x1
   224f4:	str	w9, [x20, #8]
   224f8:	cbz	x24, 22528 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x40fc>
   224fc:	ldr	w10, [x21, #72]
   22500:	add	x19, x19, #0x18
   22504:	sub	x24, x24, #0x1
   22508:	b	224a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x407c>
   2250c:	ldr	x1, [sp, #8]
   22510:	mov	w3, #0x4                   	// #4
   22514:	mov	x0, x20
   22518:	mov	x2, xzr
   2251c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   22520:	ldr	w8, [x20, #8]
   22524:	b	224dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x40b0>
   22528:	ldr	x24, [sp, #16]
   2252c:	ldr	x11, [sp, #24]
   22530:	ldr	w10, [x11, #72]
   22534:	ldr	x11, [x11, #56]
   22538:	cbz	w10, 22594 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4168>
   2253c:	orr	x12, x28, #0x8
   22540:	cmn	x12, #0x8
   22544:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   22548:	ubfx	x12, x28, #4, #28
   2254c:	eor	w13, w12, w28, lsr #9
   22550:	sub	w12, w10, #0x1
   22554:	and	w13, w12, w13
   22558:	add	x14, x11, w13, uxtw #4
   2255c:	ldr	x15, [x14]
   22560:	cmp	x15, x28
   22564:	b.eq	22598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x416c>  // b.none
   22568:	mov	w16, #0x1                   	// #1
   2256c:	cmn	x15, #0x8
   22570:	b.eq	22594 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4168>  // b.none
   22574:	add	w13, w13, w16
   22578:	and	w13, w13, w12
   2257c:	add	x14, x11, w13, uxtw #4
   22580:	ldr	x15, [x14]
   22584:	add	w16, w16, #0x1
   22588:	cmp	x15, x28
   2258c:	b.eq	22598 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x416c>  // b.none
   22590:	b	2256c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4140>
   22594:	add	x14, x11, x10, lsl #4
   22598:	add	x10, x11, x10, lsl #4
   2259c:	cmp	x14, x10
   225a0:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   225a4:	ldr	w10, [x14, #8]
   225a8:	cmp	w9, w8
   225ac:	sub	w19, w10, #0x1
   225b0:	b.cs	24080 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c54>  // b.hs, b.nlast
   225b4:	ldr	x8, [x20]
   225b8:	str	w19, [x8, w9, uxtw #2]
   225bc:	ldp	w8, w9, [x20, #8]
   225c0:	cmp	w8, w9
   225c4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   225c8:	ldr	x0, [sp, #32]
   225cc:	add	w8, w8, #0x1
   225d0:	mov	x1, x24
   225d4:	str	w8, [x20, #8]
   225d8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   225dc:	ldp	w8, w9, [x20, #8]
   225e0:	mov	w25, w0
   225e4:	sub	w19, w23, w0
   225e8:	cmp	w8, w9
   225ec:	b.cs	2409c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c70>  // b.hs, b.nlast
   225f0:	ldr	x9, [x20]
   225f4:	str	w19, [x9, w8, uxtw #2]
   225f8:	ldp	w8, w9, [x20, #8]
   225fc:	cmp	w8, w9
   22600:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22604:	add	w8, w8, #0x1
   22608:	cmp	w25, w23
   2260c:	str	w8, [x20, #8]
   22610:	b.cc	226bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4290>  // b.lo, b.ul, b.last
   22614:	ldr	x11, [sp, #24]
   22618:	ldr	w10, [x11, #72]
   2261c:	ldr	x11, [x11, #56]
   22620:	cbz	w10, 22680 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4254>
   22624:	ldr	x12, [x24]
   22628:	orr	x13, x12, #0x8
   2262c:	cmn	x13, #0x8
   22630:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   22634:	ubfx	x13, x12, #4, #28
   22638:	eor	w14, w13, w12, lsr #9
   2263c:	sub	w13, w10, #0x1
   22640:	and	w14, w14, w13
   22644:	add	x15, x11, w14, uxtw #4
   22648:	ldr	x16, [x15]
   2264c:	cmp	x16, x12
   22650:	b.eq	22684 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4258>  // b.none
   22654:	mov	w17, #0x1                   	// #1
   22658:	cmn	x16, #0x8
   2265c:	b.eq	22680 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4254>  // b.none
   22660:	add	w14, w14, w17
   22664:	and	w14, w14, w13
   22668:	add	x15, x11, w14, uxtw #4
   2266c:	ldr	x16, [x15]
   22670:	add	w17, w17, #0x1
   22674:	cmp	x16, x12
   22678:	b.eq	22684 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4258>  // b.none
   2267c:	b	22658 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x422c>
   22680:	add	x15, x11, x10, lsl #4
   22684:	add	x10, x11, x10, lsl #4
   22688:	cmp	x15, x10
   2268c:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   22690:	ldr	w10, [x15, #8]
   22694:	cmp	w8, w9
   22698:	sub	w19, w10, #0x1
   2269c:	b.cs	24534 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6108>  // b.hs, b.nlast
   226a0:	ldr	x9, [x20]
   226a4:	str	w19, [x9, w8, uxtw #2]
   226a8:	ldp	w8, w9, [x20, #8]
   226ac:	cmp	w8, w9
   226b0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   226b4:	add	w8, w8, #0x1
   226b8:	str	w8, [x20, #8]
   226bc:	ldr	w8, [x28, #12]
   226c0:	subs	w8, w8, #0x1
   226c4:	b.eq	22768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x433c>  // b.none
   226c8:	mov	x19, xzr
   226cc:	add	x24, x20, #0x10
   226d0:	mov	w25, w8
   226d4:	mov	w26, #0x18                  	// #24
   226d8:	ldr	w9, [x21, #20]
   226dc:	and	x8, x9, #0xfffffff
   226e0:	cmp	x19, x8
   226e4:	b.cs	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.hs, b.nlast
   226e8:	tbnz	w9, #30, 226f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x42cc>
   226ec:	mneg	x8, x8, x26
   226f0:	add	x8, x21, x8
   226f4:	b	226fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x42d0>
   226f8:	ldur	x8, [x21, #-8]
   226fc:	mul	x9, x19, x26
   22700:	ldr	x1, [x8, x9]
   22704:	ldr	x0, [sp, #32]
   22708:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   2270c:	ldp	w8, w9, [x20, #8]
   22710:	sub	w23, w23, w0
   22714:	cmp	w8, w9
   22718:	b.cs	2274c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4320>  // b.hs, b.nlast
   2271c:	ldr	x9, [x20]
   22720:	str	w23, [x9, w8, uxtw #2]
   22724:	ldp	w8, w9, [x20, #8]
   22728:	cmp	w8, w9
   2272c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22730:	add	x19, x19, #0x1
   22734:	add	w8, w8, #0x1
   22738:	cmp	x19, x25
   2273c:	mov	w23, w22
   22740:	str	w8, [x20, #8]
   22744:	b.ne	226d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x42ac>  // b.any
   22748:	b	22768 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x433c>
   2274c:	mov	w3, #0x4                   	// #4
   22750:	mov	x0, x20
   22754:	mov	x1, x24
   22758:	mov	x2, xzr
   2275c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   22760:	ldr	w8, [x20, #8]
   22764:	b	2271c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x42f0>
   22768:	ldr	w8, [x28, #8]
   2276c:	cmp	w8, #0xff
   22770:	b.ls	22804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x43d8>  // b.plast
   22774:	ldrb	w8, [x27]
   22778:	ldr	w19, [x28, #12]
   2277c:	cmp	w8, #0x50
   22780:	b.eq	227b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4384>  // b.none
   22784:	cmp	w8, #0x23
   22788:	b.eq	2279c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4370>  // b.none
   2278c:	cmp	w8, #0x1d
   22790:	b.ne	24a54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6628>  // b.any
   22794:	mov	x8, #0xfffffffffffffffe    	// #-2
   22798:	b	227b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4388>
   2279c:	mov	x0, x21
   227a0:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
   227a4:	mov	x8, xzr
   227a8:	sub	x8, x8, w0, uxtw
   227ac:	b	227b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4388>
   227b0:	mov	x8, xzr
   227b4:	mov	w23, #0x18                  	// #24
   227b8:	mov	x0, x21
   227bc:	sub	w19, w19, #0x1
   227c0:	madd	x24, x8, x23, x21
   227c4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   227c8:	ldr	w8, [x21, #20]
   227cc:	mov	w9, w0
   227d0:	mneg	x9, x9, x23
   227d4:	add	x10, x24, x9
   227d8:	and	x9, x8, #0xfffffff
   227dc:	mneg	x11, x9, x23
   227e0:	add	x11, x21, x11
   227e4:	sub	x10, x10, x11
   227e8:	sub	x10, x10, #0x18
   227ec:	mov	w11, #0xaaab                	// #43691
   227f0:	lsr	x10, x10, #3
   227f4:	movk	w11, #0xaaaa, lsl #16
   227f8:	mul	w27, w10, w11
   227fc:	cmp	w19, w27
   22800:	b.ne	22810 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x43e4>  // b.any
   22804:	mov	w25, wzr
   22808:	mov	w24, #0x39                  	// #57
   2280c:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   22810:	cmp	w19, w9
   22814:	b.cs	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.hs, b.nlast
   22818:	add	x23, x20, #0x10
   2281c:	mov	w28, w19
   22820:	mov	w24, #0x18                  	// #24
   22824:	tbnz	w8, #30, 22834 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4408>
   22828:	mneg	x8, x9, x24
   2282c:	add	x8, x21, x8
   22830:	b	22838 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x440c>
   22834:	ldur	x8, [x21, #-8]
   22838:	mul	x9, x28, x24
   2283c:	ldr	x25, [x8, x9]
   22840:	ldr	x0, [sp, #32]
   22844:	mov	x1, x25
   22848:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   2284c:	ldp	w8, w9, [x20, #8]
   22850:	mov	w26, w0
   22854:	sub	w19, w22, w0
   22858:	cmp	w8, w9
   2285c:	b.cs	22950 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4524>  // b.hs, b.nlast
   22860:	ldr	x9, [x20]
   22864:	str	w19, [x9, w8, uxtw #2]
   22868:	ldp	w8, w9, [x20, #8]
   2286c:	cmp	w8, w9
   22870:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22874:	add	w8, w8, #0x1
   22878:	cmp	w26, w22
   2287c:	str	w8, [x20, #8]
   22880:	b.cc	2292c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4500>  // b.lo, b.ul, b.last
   22884:	ldr	x11, [sp, #24]
   22888:	ldr	w10, [x11, #72]
   2288c:	ldr	x11, [x11, #56]
   22890:	cbz	w10, 228f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x44c4>
   22894:	ldr	x12, [x25]
   22898:	orr	x13, x12, #0x8
   2289c:	cmn	x13, #0x8
   228a0:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   228a4:	ubfx	x13, x12, #4, #28
   228a8:	eor	w14, w13, w12, lsr #9
   228ac:	sub	w13, w10, #0x1
   228b0:	and	w14, w14, w13
   228b4:	add	x15, x11, w14, uxtw #4
   228b8:	ldr	x16, [x15]
   228bc:	cmp	x16, x12
   228c0:	b.eq	228f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x44c8>  // b.none
   228c4:	mov	w17, #0x1                   	// #1
   228c8:	cmn	x16, #0x8
   228cc:	b.eq	228f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x44c4>  // b.none
   228d0:	add	w14, w14, w17
   228d4:	and	w14, w14, w13
   228d8:	add	x15, x11, w14, uxtw #4
   228dc:	ldr	x16, [x15]
   228e0:	add	w17, w17, #0x1
   228e4:	cmp	x16, x12
   228e8:	b.eq	228f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x44c8>  // b.none
   228ec:	b	228c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x449c>
   228f0:	add	x15, x11, x10, lsl #4
   228f4:	add	x10, x11, x10, lsl #4
   228f8:	cmp	x15, x10
   228fc:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   22900:	ldr	w10, [x15, #8]
   22904:	cmp	w8, w9
   22908:	sub	w19, w10, #0x1
   2290c:	b.cs	2296c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4540>  // b.hs, b.nlast
   22910:	ldr	x9, [x20]
   22914:	str	w19, [x9, w8, uxtw #2]
   22918:	ldp	w8, w9, [x20, #8]
   2291c:	cmp	w8, w9
   22920:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22924:	add	w8, w8, #0x1
   22928:	str	w8, [x20, #8]
   2292c:	add	w8, w28, #0x1
   22930:	cmp	w8, w27
   22934:	b.eq	22804 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x43d8>  // b.none
   22938:	ldr	w8, [x21, #20]
   2293c:	add	x28, x28, #0x1
   22940:	and	x9, x8, #0xfffffff
   22944:	cmp	x28, x9
   22948:	b.cc	22824 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x43f8>  // b.lo, b.ul, b.last
   2294c:	b	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   22950:	mov	w3, #0x4                   	// #4
   22954:	mov	x0, x20
   22958:	mov	x1, x23
   2295c:	mov	x2, xzr
   22960:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   22964:	ldr	w8, [x20, #8]
   22968:	b	22860 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4434>
   2296c:	mov	w3, #0x4                   	// #4
   22970:	mov	x0, x20
   22974:	mov	x1, x23
   22978:	mov	x2, xzr
   2297c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   22980:	ldr	w8, [x20, #8]
   22984:	b	22910 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x44e4>
   22988:	mov	x0, x21
   2298c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   22990:	add	x8, x0, x1
   22994:	sub	x8, x8, x25
   22998:	lsr	x8, x8, #4
   2299c:	cbz	w8, 229b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x458c>
   229a0:	tst	x21, #0x7
   229a4:	b.ne	249d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65a8>  // b.any
   229a8:	ldr	x0, [sp, #24]
   229ac:	and	x1, x21, #0xfffffffffffffff9
   229b0:	mov	w2, w23
   229b4:	bl	24c2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>
   229b8:	ldr	x10, [x21, #56]
   229bc:	cbz	x10, 22a28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x45fc>
   229c0:	ldr	x9, [sp, #24]
   229c4:	ldr	w8, [x9, #432]
   229c8:	ldr	x9, [x9, #416]
   229cc:	cbz	w8, 22a30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4604>
   229d0:	orr	x11, x10, #0x4
   229d4:	cmn	x11, #0x4
   229d8:	b.eq	24994 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6568>  // b.none
   229dc:	ubfx	x11, x10, #4, #28
   229e0:	eor	w12, w11, w10, lsr #9
   229e4:	sub	w11, w8, #0x1
   229e8:	and	w12, w11, w12
   229ec:	add	x13, x9, w12, uxtw #4
   229f0:	ldr	x14, [x13]
   229f4:	cmp	x14, x10
   229f8:	b.eq	22a34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4608>  // b.none
   229fc:	mov	w15, #0x1                   	// #1
   22a00:	cmn	x14, #0x4
   22a04:	b.eq	22a30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4604>  // b.none
   22a08:	add	w12, w12, w15
   22a0c:	and	w12, w12, w11
   22a10:	add	x13, x9, w12, uxtw #4
   22a14:	ldr	x14, [x13]
   22a18:	add	w15, w15, #0x1
   22a1c:	cmp	x14, x10
   22a20:	b.eq	22a34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4608>  // b.none
   22a24:	b	22a00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x45d4>
   22a28:	mov	w19, wzr
   22a2c:	b	22a44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4618>
   22a30:	add	x13, x9, x8, lsl #4
   22a34:	add	x8, x9, x8, lsl #4
   22a38:	cmp	x13, x8
   22a3c:	b.eq	249f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65c8>  // b.none
   22a40:	ldr	w19, [x13, #8]
   22a44:	ldp	w8, w9, [x20, #8]
   22a48:	cmp	w8, w9
   22a4c:	b.cs	240b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5c8c>  // b.hs, b.nlast
   22a50:	ldr	x9, [x20]
   22a54:	str	w19, [x9, w8, uxtw #2]
   22a58:	ldp	w8, w9, [x20, #8]
   22a5c:	cmp	w8, w9
   22a60:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22a64:	add	w8, w8, #0x1
   22a68:	str	w8, [x20, #8]
   22a6c:	ldrh	w10, [x21, #18]
   22a70:	cmp	w8, w9
   22a74:	lsr	w10, w10, #2
   22a78:	orr	w19, w10, #0x2000
   22a7c:	b.cs	240d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ca8>  // b.hs, b.nlast
   22a80:	ldr	x9, [x20]
   22a84:	str	w19, [x9, w8, uxtw #2]
   22a88:	ldp	w8, w9, [x20, #8]
   22a8c:	cmp	w8, w9
   22a90:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22a94:	add	w8, w8, #0x1
   22a98:	str	w8, [x20, #8]
   22a9c:	ldur	x1, [x21, #-72]
   22aa0:	cbz	x1, 248f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64c8>
   22aa4:	ldrb	w8, [x1, #16]
   22aa8:	cmp	w8, #0x12
   22aac:	b.ne	24914 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64e8>  // b.any
   22ab0:	ldr	x0, [sp, #32]
   22ab4:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22ab8:	ldp	w8, w9, [x20, #8]
   22abc:	mov	w25, w0
   22ac0:	cmp	w8, w9
   22ac4:	b.cs	240f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5cc4>  // b.hs, b.nlast
   22ac8:	ldr	x9, [x20]
   22acc:	str	w25, [x9, w8, uxtw #2]
   22ad0:	ldp	w8, w9, [x20, #8]
   22ad4:	cmp	w8, w9
   22ad8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22adc:	add	w8, w8, #0x1
   22ae0:	str	w8, [x20, #8]
   22ae4:	ldur	x1, [x21, #-48]
   22ae8:	cbz	x1, 248f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64c8>
   22aec:	ldrb	w8, [x1, #16]
   22af0:	cmp	w8, #0x12
   22af4:	b.ne	24914 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x64e8>  // b.any
   22af8:	ldr	x0, [sp, #32]
   22afc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22b00:	ldp	w8, w9, [x20, #8]
   22b04:	mov	w25, w0
   22b08:	cmp	w8, w9
   22b0c:	b.cs	2410c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ce0>  // b.hs, b.nlast
   22b10:	ldr	x9, [x20]
   22b14:	str	w25, [x9, w8, uxtw #2]
   22b18:	ldp	w8, w9, [x20, #8]
   22b1c:	cmp	w8, w9
   22b20:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22b24:	ldr	x11, [sp, #24]
   22b28:	add	w8, w8, #0x1
   22b2c:	str	w8, [x20, #8]
   22b30:	ldr	w10, [x11, #72]
   22b34:	ldr	x11, [x11, #56]
   22b38:	cbz	w10, 22b94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4768>
   22b3c:	orr	x12, x26, #0x8
   22b40:	cmn	x12, #0x8
   22b44:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   22b48:	ubfx	x12, x26, #4, #28
   22b4c:	eor	w13, w12, w26, lsr #9
   22b50:	sub	w12, w10, #0x1
   22b54:	and	w13, w12, w13
   22b58:	add	x14, x11, w13, uxtw #4
   22b5c:	ldr	x15, [x14]
   22b60:	cmp	x15, x26
   22b64:	b.eq	22b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x476c>  // b.none
   22b68:	mov	w16, #0x1                   	// #1
   22b6c:	cmn	x15, #0x8
   22b70:	b.eq	22b94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4768>  // b.none
   22b74:	add	w13, w13, w16
   22b78:	and	w13, w13, w12
   22b7c:	add	x14, x11, w13, uxtw #4
   22b80:	ldr	x15, [x14]
   22b84:	add	w16, w16, #0x1
   22b88:	cmp	x15, x26
   22b8c:	b.eq	22b98 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x476c>  // b.none
   22b90:	b	22b6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4740>
   22b94:	add	x14, x11, x10, lsl #4
   22b98:	add	x10, x11, x10, lsl #4
   22b9c:	cmp	x14, x10
   22ba0:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   22ba4:	ldr	w10, [x14, #8]
   22ba8:	cmp	w8, w9
   22bac:	sub	w19, w10, #0x1
   22bb0:	b.cs	24128 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5cfc>  // b.hs, b.nlast
   22bb4:	ldr	x9, [x20]
   22bb8:	str	w19, [x9, w8, uxtw #2]
   22bbc:	ldp	w8, w9, [x20, #8]
   22bc0:	cmp	w8, w9
   22bc4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22bc8:	ldr	x0, [sp, #32]
   22bcc:	add	w8, w8, #0x1
   22bd0:	mov	x1, x24
   22bd4:	str	w8, [x20, #8]
   22bd8:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22bdc:	ldp	w8, w9, [x20, #8]
   22be0:	mov	w25, w0
   22be4:	sub	w19, w23, w0
   22be8:	cmp	w8, w9
   22bec:	b.cs	24144 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5d18>  // b.hs, b.nlast
   22bf0:	ldr	x9, [x20]
   22bf4:	str	w19, [x9, w8, uxtw #2]
   22bf8:	ldp	w8, w9, [x20, #8]
   22bfc:	cmp	w8, w9
   22c00:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22c04:	add	w8, w8, #0x1
   22c08:	cmp	w25, w23
   22c0c:	str	w8, [x20, #8]
   22c10:	b.cc	22cbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4890>  // b.lo, b.ul, b.last
   22c14:	ldr	x11, [sp, #24]
   22c18:	ldr	w10, [x11, #72]
   22c1c:	ldr	x11, [x11, #56]
   22c20:	cbz	w10, 22c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4854>
   22c24:	ldr	x12, [x24]
   22c28:	orr	x13, x12, #0x8
   22c2c:	cmn	x13, #0x8
   22c30:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   22c34:	ubfx	x13, x12, #4, #28
   22c38:	eor	w14, w13, w12, lsr #9
   22c3c:	sub	w13, w10, #0x1
   22c40:	and	w14, w14, w13
   22c44:	add	x15, x11, w14, uxtw #4
   22c48:	ldr	x16, [x15]
   22c4c:	cmp	x16, x12
   22c50:	b.eq	22c84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4858>  // b.none
   22c54:	mov	w17, #0x1                   	// #1
   22c58:	cmn	x16, #0x8
   22c5c:	b.eq	22c80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4854>  // b.none
   22c60:	add	w14, w14, w17
   22c64:	and	w14, w14, w13
   22c68:	add	x15, x11, w14, uxtw #4
   22c6c:	ldr	x16, [x15]
   22c70:	add	w17, w17, #0x1
   22c74:	cmp	x16, x12
   22c78:	b.eq	22c84 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4858>  // b.none
   22c7c:	b	22c58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x482c>
   22c80:	add	x15, x11, x10, lsl #4
   22c84:	add	x10, x11, x10, lsl #4
   22c88:	cmp	x15, x10
   22c8c:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   22c90:	ldr	w10, [x15, #8]
   22c94:	cmp	w8, w9
   22c98:	sub	w19, w10, #0x1
   22c9c:	b.cs	24550 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6124>  // b.hs, b.nlast
   22ca0:	ldr	x9, [x20]
   22ca4:	str	w19, [x9, w8, uxtw #2]
   22ca8:	ldp	w8, w9, [x20, #8]
   22cac:	cmp	w8, w9
   22cb0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22cb4:	add	w8, w8, #0x1
   22cb8:	str	w8, [x20, #8]
   22cbc:	ldr	w8, [x26, #12]
   22cc0:	subs	w8, w8, #0x1
   22cc4:	b.eq	22d68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x493c>  // b.none
   22cc8:	mov	x19, xzr
   22ccc:	add	x24, x20, #0x10
   22cd0:	mov	w25, w8
   22cd4:	mov	w28, #0x18                  	// #24
   22cd8:	ldr	w9, [x21, #20]
   22cdc:	and	x8, x9, #0xfffffff
   22ce0:	cmp	x19, x8
   22ce4:	b.cs	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.hs, b.nlast
   22ce8:	tbnz	w9, #30, 22cf8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x48cc>
   22cec:	mneg	x8, x8, x28
   22cf0:	add	x8, x21, x8
   22cf4:	b	22cfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x48d0>
   22cf8:	ldur	x8, [x21, #-8]
   22cfc:	mul	x9, x19, x28
   22d00:	ldr	x1, [x8, x9]
   22d04:	ldr	x0, [sp, #32]
   22d08:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22d0c:	ldp	w8, w9, [x20, #8]
   22d10:	sub	w23, w23, w0
   22d14:	cmp	w8, w9
   22d18:	b.cs	22d4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4920>  // b.hs, b.nlast
   22d1c:	ldr	x9, [x20]
   22d20:	str	w23, [x9, w8, uxtw #2]
   22d24:	ldp	w8, w9, [x20, #8]
   22d28:	cmp	w8, w9
   22d2c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22d30:	add	x19, x19, #0x1
   22d34:	add	w8, w8, #0x1
   22d38:	cmp	x19, x25
   22d3c:	mov	w23, w22
   22d40:	str	w8, [x20, #8]
   22d44:	b.ne	22cd8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x48ac>  // b.any
   22d48:	b	22d68 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x493c>
   22d4c:	mov	w3, #0x4                   	// #4
   22d50:	mov	x0, x20
   22d54:	mov	x1, x24
   22d58:	mov	x2, xzr
   22d5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   22d60:	ldr	w8, [x20, #8]
   22d64:	b	22d1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x48f0>
   22d68:	ldr	w8, [x26, #8]
   22d6c:	cmp	w8, #0xff
   22d70:	b.ls	22e04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x49d8>  // b.plast
   22d74:	ldrb	w8, [x27]
   22d78:	ldr	w19, [x26, #12]
   22d7c:	cmp	w8, #0x50
   22d80:	b.eq	22db0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4984>  // b.none
   22d84:	cmp	w8, #0x23
   22d88:	b.eq	22d9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4970>  // b.none
   22d8c:	cmp	w8, #0x1d
   22d90:	b.ne	24a54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6628>  // b.any
   22d94:	mov	x8, #0xfffffffffffffffe    	// #-2
   22d98:	b	22db4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4988>
   22d9c:	mov	x0, x21
   22da0:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
   22da4:	mov	x8, xzr
   22da8:	sub	x8, x8, w0, uxtw
   22dac:	b	22db4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4988>
   22db0:	mov	x8, xzr
   22db4:	mov	w23, #0x18                  	// #24
   22db8:	mov	x0, x21
   22dbc:	sub	w19, w19, #0x1
   22dc0:	madd	x24, x8, x23, x21
   22dc4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   22dc8:	ldr	w8, [x21, #20]
   22dcc:	mov	w9, w0
   22dd0:	mneg	x9, x9, x23
   22dd4:	add	x10, x24, x9
   22dd8:	and	x9, x8, #0xfffffff
   22ddc:	mneg	x11, x9, x23
   22de0:	add	x11, x21, x11
   22de4:	sub	x10, x10, x11
   22de8:	sub	x10, x10, #0x18
   22dec:	mov	w11, #0xaaab                	// #43691
   22df0:	lsr	x10, x10, #3
   22df4:	movk	w11, #0xaaaa, lsl #16
   22df8:	mul	w27, w10, w11
   22dfc:	cmp	w19, w27
   22e00:	b.ne	22e10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x49e4>  // b.any
   22e04:	mov	w25, wzr
   22e08:	mov	w24, #0xd                   	// #13
   22e0c:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   22e10:	cmp	w19, w9
   22e14:	b.cs	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.hs, b.nlast
   22e18:	add	x23, x20, #0x10
   22e1c:	mov	w28, w19
   22e20:	mov	w24, #0x18                  	// #24
   22e24:	tbnz	w8, #30, 22e34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4a08>
   22e28:	mneg	x8, x9, x24
   22e2c:	add	x8, x21, x8
   22e30:	b	22e38 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4a0c>
   22e34:	ldur	x8, [x21, #-8]
   22e38:	mul	x9, x28, x24
   22e3c:	ldr	x25, [x8, x9]
   22e40:	ldr	x0, [sp, #32]
   22e44:	mov	x1, x25
   22e48:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   22e4c:	ldp	w8, w9, [x20, #8]
   22e50:	mov	w26, w0
   22e54:	sub	w19, w22, w0
   22e58:	cmp	w8, w9
   22e5c:	b.cs	22f50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b24>  // b.hs, b.nlast
   22e60:	ldr	x9, [x20]
   22e64:	str	w19, [x9, w8, uxtw #2]
   22e68:	ldp	w8, w9, [x20, #8]
   22e6c:	cmp	w8, w9
   22e70:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22e74:	add	w8, w8, #0x1
   22e78:	cmp	w26, w22
   22e7c:	str	w8, [x20, #8]
   22e80:	b.cc	22f2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b00>  // b.lo, b.ul, b.last
   22e84:	ldr	x11, [sp, #24]
   22e88:	ldr	w10, [x11, #72]
   22e8c:	ldr	x11, [x11, #56]
   22e90:	cbz	w10, 22ef0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ac4>
   22e94:	ldr	x12, [x25]
   22e98:	orr	x13, x12, #0x8
   22e9c:	cmn	x13, #0x8
   22ea0:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   22ea4:	ubfx	x13, x12, #4, #28
   22ea8:	eor	w14, w13, w12, lsr #9
   22eac:	sub	w13, w10, #0x1
   22eb0:	and	w14, w14, w13
   22eb4:	add	x15, x11, w14, uxtw #4
   22eb8:	ldr	x16, [x15]
   22ebc:	cmp	x16, x12
   22ec0:	b.eq	22ef4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ac8>  // b.none
   22ec4:	mov	w17, #0x1                   	// #1
   22ec8:	cmn	x16, #0x8
   22ecc:	b.eq	22ef0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ac4>  // b.none
   22ed0:	add	w14, w14, w17
   22ed4:	and	w14, w14, w13
   22ed8:	add	x15, x11, w14, uxtw #4
   22edc:	ldr	x16, [x15]
   22ee0:	add	w17, w17, #0x1
   22ee4:	cmp	x16, x12
   22ee8:	b.eq	22ef4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ac8>  // b.none
   22eec:	b	22ec8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4a9c>
   22ef0:	add	x15, x11, x10, lsl #4
   22ef4:	add	x10, x11, x10, lsl #4
   22ef8:	cmp	x15, x10
   22efc:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   22f00:	ldr	w10, [x15, #8]
   22f04:	cmp	w8, w9
   22f08:	sub	w19, w10, #0x1
   22f0c:	b.cs	22f6c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b40>  // b.hs, b.nlast
   22f10:	ldr	x9, [x20]
   22f14:	str	w19, [x9, w8, uxtw #2]
   22f18:	ldp	w8, w9, [x20, #8]
   22f1c:	cmp	w8, w9
   22f20:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   22f24:	add	w8, w8, #0x1
   22f28:	str	w8, [x20, #8]
   22f2c:	add	w8, w28, #0x1
   22f30:	cmp	w8, w27
   22f34:	b.eq	22e04 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x49d8>  // b.none
   22f38:	ldr	w8, [x21, #20]
   22f3c:	add	x28, x28, #0x1
   22f40:	and	x9, x8, #0xfffffff
   22f44:	cmp	x28, x9
   22f48:	b.cc	22e24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x49f8>  // b.lo, b.ul, b.last
   22f4c:	b	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>
   22f50:	mov	w3, #0x4                   	// #4
   22f54:	mov	x0, x20
   22f58:	mov	x1, x23
   22f5c:	mov	x2, xzr
   22f60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   22f64:	ldr	w8, [x20, #8]
   22f68:	b	22e60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4a34>
   22f6c:	mov	w3, #0x4                   	// #4
   22f70:	mov	x0, x20
   22f74:	mov	x1, x23
   22f78:	mov	x2, xzr
   22f7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   22f80:	ldr	w8, [x20, #8]
   22f84:	b	22f10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ae4>
   22f88:	mov	x0, x21
   22f8c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
   22f90:	add	x8, x0, x1
   22f94:	sub	x8, x8, x24
   22f98:	lsr	x8, x8, #4
   22f9c:	cbz	w8, 22fbc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4b90>
   22fa0:	tst	x21, #0x7
   22fa4:	b.ne	249d4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65a8>  // b.any
   22fa8:	ldr	x0, [sp, #24]
   22fac:	and	x8, x21, #0xfffffffffffffff9
   22fb0:	orr	x1, x8, #0x2
   22fb4:	mov	w2, w23
   22fb8:	bl	24c2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>
   22fbc:	ldr	x10, [x21, #56]
   22fc0:	cbz	x10, 2302c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c00>
   22fc4:	ldr	x9, [sp, #24]
   22fc8:	ldr	w8, [x9, #432]
   22fcc:	ldr	x9, [x9, #416]
   22fd0:	cbz	w8, 23034 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c08>
   22fd4:	orr	x11, x10, #0x4
   22fd8:	cmn	x11, #0x4
   22fdc:	b.eq	24994 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6568>  // b.none
   22fe0:	ubfx	x11, x10, #4, #28
   22fe4:	eor	w12, w11, w10, lsr #9
   22fe8:	sub	w11, w8, #0x1
   22fec:	and	w12, w11, w12
   22ff0:	add	x13, x9, w12, uxtw #4
   22ff4:	ldr	x14, [x13]
   22ff8:	cmp	x14, x10
   22ffc:	b.eq	23038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c0c>  // b.none
   23000:	mov	w15, #0x1                   	// #1
   23004:	cmn	x14, #0x4
   23008:	b.eq	23034 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c08>  // b.none
   2300c:	add	w12, w12, w15
   23010:	and	w12, w12, w11
   23014:	add	x13, x9, w12, uxtw #4
   23018:	ldr	x14, [x13]
   2301c:	add	w15, w15, #0x1
   23020:	cmp	x14, x10
   23024:	b.eq	23038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c0c>  // b.none
   23028:	b	23004 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4bd8>
   2302c:	mov	w19, wzr
   23030:	b	23048 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c1c>
   23034:	add	x13, x9, x8, lsl #4
   23038:	add	x8, x9, x8, lsl #4
   2303c:	cmp	x13, x8
   23040:	b.eq	249f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x65c8>  // b.none
   23044:	ldr	w19, [x13, #8]
   23048:	ldp	w8, w9, [x20, #8]
   2304c:	cmp	w8, w9
   23050:	b.cs	24160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5d34>  // b.hs, b.nlast
   23054:	ldr	x9, [x20]
   23058:	str	w19, [x9, w8, uxtw #2]
   2305c:	ldp	w8, w9, [x20, #8]
   23060:	cmp	w8, w9
   23064:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   23068:	add	w8, w8, #0x1
   2306c:	mov	x0, x21
   23070:	str	w8, [x20, #8]
   23074:	bl	13e50 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   23078:	ldrh	w9, [x21, #18]
   2307c:	mov	x24, x0
   23080:	mov	w8, #0x8000                	// #32768
   23084:	movk	w8, #0x2, lsl #16
   23088:	and	w11, w9, #0x3
   2308c:	cmp	w11, #0x3
   23090:	sub	w12, w11, #0x1
   23094:	cset	w13, eq  // eq = none
   23098:	cmp	w11, #0x2
   2309c:	cset	w11, eq  // eq = none
   230a0:	cmp	w12, #0x2
   230a4:	mov	w10, #0x8000                	// #32768
   230a8:	cset	w12, cc  // cc = lo, ul, last
   230ac:	cmp	w24, #0x0
   230b0:	lsr	w9, w9, #1
   230b4:	csel	w10, w10, w8, eq  // eq = none
   230b8:	ldp	w8, w14, [x20, #8]
   230bc:	and	w9, w9, #0x3ffe
   230c0:	orr	w9, w10, w9
   230c4:	bfi	w9, w11, #14, #1
   230c8:	bfi	w9, w13, #16, #1
   230cc:	cmp	w8, w14
   230d0:	orr	w19, w9, w12
   230d4:	b.cs	2417c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5d50>  // b.hs, b.nlast
   230d8:	ldr	x9, [x20]
   230dc:	str	w19, [x9, w8, uxtw #2]
   230e0:	ldp	w8, w9, [x20, #8]
   230e4:	cmp	w8, w9
   230e8:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   230ec:	add	w8, w8, #0x1
   230f0:	str	w8, [x20, #8]
   230f4:	cbz	w24, 2311c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4cf0>
   230f8:	cmp	w8, w9
   230fc:	b.cs	24208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5ddc>  // b.hs, b.nlast
   23100:	ldr	x9, [x20]
   23104:	str	w24, [x9, w8, uxtw #2]
   23108:	ldp	w8, w9, [x20, #8]
   2310c:	cmp	w8, w9
   23110:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   23114:	add	w8, w8, #0x1
   23118:	str	w8, [x20, #8]
   2311c:	ldr	x11, [sp, #24]
   23120:	ldr	w10, [x11, #72]
   23124:	ldr	x11, [x11, #56]
   23128:	cbz	w10, 23184 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d58>
   2312c:	orr	x12, x28, #0x8
   23130:	cmn	x12, #0x8
   23134:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   23138:	ubfx	x12, x28, #4, #28
   2313c:	eor	w13, w12, w28, lsr #9
   23140:	sub	w12, w10, #0x1
   23144:	and	w13, w12, w13
   23148:	add	x14, x11, w13, uxtw #4
   2314c:	ldr	x15, [x14]
   23150:	cmp	x15, x28
   23154:	b.eq	23188 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d5c>  // b.none
   23158:	mov	w16, #0x1                   	// #1
   2315c:	cmn	x15, #0x8
   23160:	b.eq	23184 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d58>  // b.none
   23164:	add	w13, w13, w16
   23168:	and	w13, w13, w12
   2316c:	add	x14, x11, w13, uxtw #4
   23170:	ldr	x15, [x14]
   23174:	add	w16, w16, #0x1
   23178:	cmp	x15, x28
   2317c:	b.eq	23188 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d5c>  // b.none
   23180:	b	2315c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d30>
   23184:	add	x14, x11, x10, lsl #4
   23188:	add	x10, x11, x10, lsl #4
   2318c:	cmp	x14, x10
   23190:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   23194:	ldr	w10, [x14, #8]
   23198:	cmp	w8, w9
   2319c:	sub	w19, w10, #0x1
   231a0:	b.cs	24198 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5d6c>  // b.hs, b.nlast
   231a4:	ldr	x9, [x20]
   231a8:	str	w19, [x9, w8, uxtw #2]
   231ac:	ldp	w8, w9, [x20, #8]
   231b0:	cmp	w8, w9
   231b4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   231b8:	add	w8, w8, #0x1
   231bc:	str	w8, [x20, #8]
   231c0:	ldur	x24, [x21, #-24]
   231c4:	ldr	x0, [sp, #32]
   231c8:	mov	x1, x24
   231cc:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   231d0:	ldp	w8, w9, [x20, #8]
   231d4:	mov	w25, w0
   231d8:	sub	w19, w23, w0
   231dc:	cmp	w8, w9
   231e0:	b.cs	241b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5d88>  // b.hs, b.nlast
   231e4:	ldr	x9, [x20]
   231e8:	str	w19, [x9, w8, uxtw #2]
   231ec:	ldp	w8, w9, [x20, #8]
   231f0:	cmp	w8, w9
   231f4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   231f8:	add	w8, w8, #0x1
   231fc:	cmp	w25, w23
   23200:	str	w8, [x20, #8]
   23204:	b.cc	232b0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e84>  // b.lo, b.ul, b.last
   23208:	ldr	x11, [sp, #24]
   2320c:	ldr	w10, [x11, #72]
   23210:	ldr	x11, [x11, #56]
   23214:	cbz	w10, 23274 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e48>
   23218:	ldr	x12, [x24]
   2321c:	orr	x13, x12, #0x8
   23220:	cmn	x13, #0x8
   23224:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   23228:	ubfx	x13, x12, #4, #28
   2322c:	eor	w14, w13, w12, lsr #9
   23230:	sub	w13, w10, #0x1
   23234:	and	w14, w14, w13
   23238:	add	x15, x11, w14, uxtw #4
   2323c:	ldr	x16, [x15]
   23240:	cmp	x16, x12
   23244:	b.eq	23278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e4c>  // b.none
   23248:	mov	w17, #0x1                   	// #1
   2324c:	cmn	x16, #0x8
   23250:	b.eq	23274 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e48>  // b.none
   23254:	add	w14, w14, w17
   23258:	and	w14, w14, w13
   2325c:	add	x15, x11, w14, uxtw #4
   23260:	ldr	x16, [x15]
   23264:	add	w17, w17, #0x1
   23268:	cmp	x16, x12
   2326c:	b.eq	23278 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e4c>  // b.none
   23270:	b	2324c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e20>
   23274:	add	x15, x11, x10, lsl #4
   23278:	add	x10, x11, x10, lsl #4
   2327c:	cmp	x15, x10
   23280:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   23284:	ldr	w10, [x15, #8]
   23288:	cmp	w8, w9
   2328c:	sub	w19, w10, #0x1
   23290:	b.cs	2456c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6140>  // b.hs, b.nlast
   23294:	ldr	x9, [x20]
   23298:	str	w19, [x9, w8, uxtw #2]
   2329c:	ldp	w8, w9, [x20, #8]
   232a0:	cmp	w8, w9
   232a4:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   232a8:	add	w8, w8, #0x1
   232ac:	str	w8, [x20, #8]
   232b0:	ldr	w8, [x28, #12]
   232b4:	subs	w8, w8, #0x1
   232b8:	b.eq	23360 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f34>  // b.none
   232bc:	mov	x24, xzr
   232c0:	add	x25, x20, #0x10
   232c4:	mov	w19, w8
   232c8:	ldr	x8, [x28, #16]
   232cc:	mov	x0, x21
   232d0:	mov	w1, w24
   232d4:	add	x8, x8, x24, lsl #3
   232d8:	ldr	x8, [x8, #8]
   232dc:	ldrb	w23, [x8, #8]
   232e0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   232e4:	mov	x1, x0
   232e8:	ldr	x0, [sp, #32]
   232ec:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   232f0:	cmp	w23, #0x7
   232f4:	mov	w26, w0
   232f8:	b.ne	23324 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4ef8>  // b.any
   232fc:	ldp	w8, w9, [x20, #8]
   23300:	cmp	w8, w9
   23304:	b.cc	23338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f0c>  // b.lo, b.ul, b.last
   23308:	mov	w3, #0x4                   	// #4
   2330c:	mov	x0, x20
   23310:	mov	x1, x25
   23314:	mov	x2, xzr
   23318:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2331c:	ldr	w8, [x20, #8]
   23320:	b	23338 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f0c>
   23324:	ldp	w8, w9, [x20, #8]
   23328:	sub	w26, w22, w26
   2332c:	cmp	w8, w9
   23330:	mov	w9, w22
   23334:	b.cs	23308 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4edc>  // b.hs, b.nlast
   23338:	ldr	x9, [x20]
   2333c:	str	w26, [x9, w8, uxtw #2]
   23340:	ldp	w8, w9, [x20, #8]
   23344:	cmp	w8, w9
   23348:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2334c:	add	x24, x24, #0x1
   23350:	add	w8, w8, #0x1
   23354:	cmp	x19, x24
   23358:	str	w8, [x20, #8]
   2335c:	b.ne	232c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e9c>  // b.any
   23360:	ldr	w8, [x28, #8]
   23364:	cmp	w8, #0xff
   23368:	b.ls	233fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4fd0>  // b.plast
   2336c:	ldrb	w8, [x27]
   23370:	ldr	w19, [x28, #12]
   23374:	cmp	w8, #0x50
   23378:	b.eq	233a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f7c>  // b.none
   2337c:	cmp	w8, #0x23
   23380:	b.eq	23394 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f68>  // b.none
   23384:	cmp	w8, #0x1d
   23388:	b.ne	24a54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6628>  // b.any
   2338c:	mov	x8, #0xfffffffffffffffe    	// #-2
   23390:	b	233ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f80>
   23394:	mov	x0, x21
   23398:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
   2339c:	mov	x8, xzr
   233a0:	sub	x8, x8, w0, uxtw
   233a4:	b	233ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4f80>
   233a8:	mov	x8, xzr
   233ac:	sub	w26, w19, #0x1
   233b0:	mov	w19, #0x18                  	// #24
   233b4:	mov	x0, x21
   233b8:	madd	x23, x8, x19, x21
   233bc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   233c0:	ldr	w8, [x21, #20]
   233c4:	mov	w9, w0
   233c8:	mneg	x9, x9, x19
   233cc:	add	x9, x23, x9
   233d0:	and	x8, x8, #0xfffffff
   233d4:	mneg	x8, x8, x19
   233d8:	add	x8, x21, x8
   233dc:	sub	x8, x9, x8
   233e0:	sub	x8, x8, #0x18
   233e4:	mov	w9, #0xaaab                	// #43691
   233e8:	lsr	x8, x8, #3
   233ec:	movk	w9, #0xaaaa, lsl #16
   233f0:	mul	w28, w8, w9
   233f4:	cmp	w26, w28
   233f8:	b.ne	23408 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4fdc>  // b.any
   233fc:	mov	w25, wzr
   23400:	mov	w24, #0x22                  	// #34
   23404:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   23408:	add	x27, x20, #0x10
   2340c:	b	23440 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5014>
   23410:	ldr	x9, [x20]
   23414:	str	w19, [x9, w8, uxtw #2]
   23418:	ldp	w8, w9, [x20, #8]
   2341c:	cmp	w8, w9
   23420:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   23424:	add	w8, w8, #0x1
   23428:	str	w8, [x20, #8]
   2342c:	add	w26, w26, #0x1
   23430:	mov	w25, wzr
   23434:	cmp	w26, w28
   23438:	mov	w24, #0x22                  	// #34
   2343c:	b.eq	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>  // b.none
   23440:	mov	x0, x21
   23444:	mov	w1, w26
   23448:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2344c:	mov	x24, x0
   23450:	ldr	x0, [sp, #32]
   23454:	mov	x1, x24
   23458:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   2345c:	ldp	w8, w9, [x20, #8]
   23460:	mov	w25, w0
   23464:	sub	w19, w22, w0
   23468:	cmp	w8, w9
   2346c:	b.cs	2353c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5110>  // b.hs, b.nlast
   23470:	ldr	x9, [x20]
   23474:	str	w19, [x9, w8, uxtw #2]
   23478:	ldp	w8, w9, [x20, #8]
   2347c:	cmp	w8, w9
   23480:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   23484:	add	w8, w8, #0x1
   23488:	cmp	w25, w22
   2348c:	str	w8, [x20, #8]
   23490:	b.cc	2342c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5000>  // b.lo, b.ul, b.last
   23494:	ldr	x11, [sp, #24]
   23498:	ldr	w10, [x11, #72]
   2349c:	ldr	x11, [x11, #56]
   234a0:	cbz	w10, 23500 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x50d4>
   234a4:	ldr	x12, [x24]
   234a8:	orr	x13, x12, #0x8
   234ac:	cmn	x13, #0x8
   234b0:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   234b4:	ubfx	x13, x12, #4, #28
   234b8:	eor	w14, w13, w12, lsr #9
   234bc:	sub	w13, w10, #0x1
   234c0:	and	w14, w14, w13
   234c4:	add	x15, x11, w14, uxtw #4
   234c8:	ldr	x16, [x15]
   234cc:	cmp	x16, x12
   234d0:	b.eq	23504 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x50d8>  // b.none
   234d4:	mov	w17, #0x1                   	// #1
   234d8:	cmn	x16, #0x8
   234dc:	b.eq	23500 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x50d4>  // b.none
   234e0:	add	w14, w14, w17
   234e4:	and	w14, w14, w13
   234e8:	add	x15, x11, w14, uxtw #4
   234ec:	ldr	x16, [x15]
   234f0:	add	w17, w17, #0x1
   234f4:	cmp	x16, x12
   234f8:	b.eq	23504 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x50d8>  // b.none
   234fc:	b	234d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x50ac>
   23500:	add	x15, x11, x10, lsl #4
   23504:	add	x10, x11, x10, lsl #4
   23508:	cmp	x15, x10
   2350c:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   23510:	ldr	w10, [x15, #8]
   23514:	cmp	w8, w9
   23518:	sub	w19, w10, #0x1
   2351c:	b.cc	23410 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4fe4>  // b.lo, b.ul, b.last
   23520:	mov	w3, #0x4                   	// #4
   23524:	mov	x0, x20
   23528:	mov	x1, x27
   2352c:	mov	x2, xzr
   23530:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23534:	ldr	w8, [x20, #8]
   23538:	b	23410 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4fe4>
   2353c:	mov	w3, #0x4                   	// #4
   23540:	mov	x0, x20
   23544:	mov	x1, x27
   23548:	mov	x2, xzr
   2354c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23550:	ldr	w8, [x20, #8]
   23554:	b	23470 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5044>
   23558:	add	x15, x11, x10, lsl #4
   2355c:	add	x10, x11, x10, lsl #4
   23560:	cmp	x15, x10
   23564:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   23568:	ldr	w10, [x15, #8]
   2356c:	cmp	w8, w9
   23570:	sub	w19, w10, #0x1
   23574:	b.cs	24668 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x623c>  // b.hs, b.nlast
   23578:	ldr	x9, [x20]
   2357c:	str	w19, [x9, w8, uxtw #2]
   23580:	ldp	w8, w9, [x20, #8]
   23584:	cmp	w8, w9
   23588:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2358c:	mov	w25, wzr
   23590:	add	w8, w8, #0x1
   23594:	str	w8, [x20, #8]
   23598:	ldr	x11, [sp, #24]
   2359c:	ldr	w10, [x11, #72]
   235a0:	ldr	x11, [x11, #56]
   235a4:	cbz	w10, 23604 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x51d8>
   235a8:	ldr	x12, [x21]
   235ac:	orr	x13, x12, #0x8
   235b0:	cmn	x13, #0x8
   235b4:	b.eq	246fc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62d0>  // b.none
   235b8:	ubfx	x13, x12, #4, #28
   235bc:	eor	w14, w13, w12, lsr #9
   235c0:	sub	w13, w10, #0x1
   235c4:	and	w14, w14, w13
   235c8:	add	x15, x11, w14, uxtw #4
   235cc:	ldr	x16, [x15]
   235d0:	cmp	x16, x12
   235d4:	b.eq	23608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x51dc>  // b.none
   235d8:	mov	w17, #0x1                   	// #1
   235dc:	cmn	x16, #0x8
   235e0:	b.eq	23604 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x51d8>  // b.none
   235e4:	add	w14, w14, w17
   235e8:	and	w14, w14, w13
   235ec:	add	x15, x11, w14, uxtw #4
   235f0:	ldr	x16, [x15]
   235f4:	add	w17, w17, #0x1
   235f8:	cmp	x16, x12
   235fc:	b.eq	23608 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x51dc>  // b.none
   23600:	b	235dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x51b0>
   23604:	add	x15, x11, x10, lsl #4
   23608:	add	x10, x11, x10, lsl #4
   2360c:	cmp	x15, x10
   23610:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   23614:	ldr	w10, [x15, #8]
   23618:	cmp	w8, w9
   2361c:	sub	w19, w10, #0x1
   23620:	b.cs	245c0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6194>  // b.hs, b.nlast
   23624:	ldr	x9, [x20]
   23628:	str	w19, [x9, w8, uxtw #2]
   2362c:	ldp	w8, w9, [x20, #8]
   23630:	cmp	w8, w9
   23634:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   23638:	add	w8, w8, #0x1
   2363c:	str	w8, [x20, #8]
   23640:	ldrb	w10, [x27]
   23644:	sub	w10, w10, #0x3e
   23648:	cmp	w10, #0xd
   2364c:	b.cs	24bfc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x67d0>  // b.hs, b.nlast
   23650:	cmp	w8, w9
   23654:	and	w19, w10, #0xff
   23658:	b.cs	245dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x61b0>  // b.hs, b.nlast
   2365c:	ldr	x9, [x20]
   23660:	str	w19, [x9, w8, uxtw #2]
   23664:	ldp	w8, w9, [x20, #8]
   23668:	cmp	w8, w9
   2366c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   23670:	add	w8, w8, #0x1
   23674:	str	w8, [x20, #8]
   23678:	mov	w24, #0x3                   	// #3
   2367c:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   23680:	add	x15, x11, x10, lsl #4
   23684:	add	x10, x11, x10, lsl #4
   23688:	cmp	x15, x10
   2368c:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   23690:	ldr	w10, [x15, #8]
   23694:	cmp	w8, w9
   23698:	sub	w19, w10, #0x1
   2369c:	b.cs	24684 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6258>  // b.hs, b.nlast
   236a0:	ldr	x9, [x20]
   236a4:	str	w19, [x9, w8, uxtw #2]
   236a8:	ldp	w8, w9, [x20, #8]
   236ac:	cmp	w8, w9
   236b0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   236b4:	mov	w25, wzr
   236b8:	add	w8, w8, #0x1
   236bc:	str	w8, [x20, #8]
   236c0:	ldr	w9, [x21, #20]
   236c4:	and	x8, x9, #0xfffffff
   236c8:	cmp	w8, #0x1
   236cc:	b.ls	246dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62b0>  // b.plast
   236d0:	tbnz	w9, #30, 236e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x52b8>
   236d4:	mov	w9, #0x18                  	// #24
   236d8:	mneg	x8, x8, x9
   236dc:	add	x8, x21, x8
   236e0:	b	236e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x52bc>
   236e4:	ldur	x8, [x21, #-8]
   236e8:	ldr	x1, [x8, #24]
   236ec:	mov	x0, x22
   236f0:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   236f4:	ldp	w8, w9, [x20, #8]
   236f8:	sub	w19, w23, w0
   236fc:	cmp	w8, w9
   23700:	b.cs	245f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x61cc>  // b.hs, b.nlast
   23704:	ldr	x9, [x20]
   23708:	str	w19, [x9, w8, uxtw #2]
   2370c:	ldp	w8, w9, [x20, #8]
   23710:	cmp	w8, w9
   23714:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   23718:	add	w8, w8, #0x1
   2371c:	str	w8, [x20, #8]
   23720:	ldrb	w10, [x27]
   23724:	sub	w10, w10, #0x25
   23728:	cmp	w10, #0x12
   2372c:	b.cs	24c14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x67e8>  // b.hs, b.nlast
   23730:	adrp	x11, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   23734:	sxtb	x10, w10
   23738:	add	x11, x11, #0x0
   2373c:	ldr	w19, [x11, x10, lsl #2]
   23740:	cmp	w8, w9
   23744:	b.cs	24614 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x61e8>  // b.hs, b.nlast
   23748:	ldr	x9, [x20]
   2374c:	str	w19, [x9, w8, uxtw #2]
   23750:	ldp	w8, w9, [x20, #8]
   23754:	cmp	w8, w9
   23758:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   2375c:	add	w8, w8, #0x1
   23760:	mov	x0, x21
   23764:	str	w8, [x20, #8]
   23768:	bl	13e50 <_ZL20getOptimizationFlagsPKN4llvm5ValueE>
   2376c:	cbz	x0, 237a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x537c>
   23770:	ldp	w8, w9, [x20, #8]
   23774:	cmp	w25, #0x7
   23778:	mov	w10, #0x8                   	// #8
   2377c:	mov	x21, x0
   23780:	csel	w25, w10, w25, eq  // eq = none
   23784:	cmp	w8, w9
   23788:	b.cs	2464c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6220>  // b.hs, b.nlast
   2378c:	ldr	x9, [x20]
   23790:	str	w21, [x9, w8, uxtw #2]
   23794:	ldp	w8, w9, [x20, #8]
   23798:	cmp	w8, w9
   2379c:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   237a0:	add	w8, w8, #0x1
   237a4:	str	w8, [x20, #8]
   237a8:	mov	w24, #0x2                   	// #2
   237ac:	b	237f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53c8>
   237b0:	add	x15, x11, x10, lsl #4
   237b4:	add	x10, x11, x10, lsl #4
   237b8:	cmp	x15, x10
   237bc:	b.eq	2471c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x62f0>  // b.none
   237c0:	ldr	w10, [x15, #8]
   237c4:	cmp	w8, w9
   237c8:	sub	w19, w10, #0x1
   237cc:	b.cs	246a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6274>  // b.hs, b.nlast
   237d0:	ldr	x9, [x20]
   237d4:	str	w19, [x9, w8, uxtw #2]
   237d8:	ldp	w8, w9, [x20, #8]
   237dc:	cmp	w8, w9
   237e0:	b.cs	246bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x6290>  // b.hs, b.nlast
   237e4:	add	w8, w8, #0x1
   237e8:	mov	w25, wzr
   237ec:	str	w8, [x20, #8]
   237f0:	mov	w24, #0xa                   	// #10
   237f4:	ldr	x8, [sp, #24]
   237f8:	mov	w1, w24
   237fc:	mov	x2, x20
   23800:	mov	w3, w25
   23804:	ldr	x0, [x8]
   23808:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2380c:	str	wzr, [x20, #8]
   23810:	add	sp, sp, #0x440
   23814:	ldp	x20, x19, [sp, #80]
   23818:	ldp	x22, x21, [sp, #64]
   2381c:	ldp	x24, x23, [sp, #48]
   23820:	ldp	x26, x25, [sp, #32]
   23824:	ldp	x28, x27, [sp, #16]
   23828:	ldp	x29, x30, [sp], #96
   2382c:	ret
   23830:	add	x1, x20, #0x10
   23834:	mov	w3, #0x4                   	// #4
   23838:	mov	x0, x20
   2383c:	mov	x2, xzr
   23840:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23844:	ldr	w8, [x20, #8]
   23848:	b	1e4c8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x9c>
   2384c:	add	x1, x20, #0x10
   23850:	mov	w3, #0x4                   	// #4
   23854:	mov	x0, x20
   23858:	mov	x2, xzr
   2385c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23860:	ldr	w8, [x20, #8]
   23864:	b	1e4f8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xcc>
   23868:	add	x1, x20, #0x10
   2386c:	mov	w3, #0x4                   	// #4
   23870:	mov	x0, x20
   23874:	mov	x2, xzr
   23878:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2387c:	ldr	w8, [x20, #8]
   23880:	b	1edac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x980>
   23884:	add	x1, x20, #0x10
   23888:	mov	w3, #0x4                   	// #4
   2388c:	mov	x0, x20
   23890:	mov	x2, xzr
   23894:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23898:	ldr	w8, [x20, #8]
   2389c:	b	20964 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2538>
   238a0:	add	x1, x20, #0x10
   238a4:	mov	w3, #0x4                   	// #4
   238a8:	mov	x0, x20
   238ac:	mov	x2, xzr
   238b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   238b4:	ldr	w8, [x20, #8]
   238b8:	b	209a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2574>
   238bc:	add	x1, x20, #0x10
   238c0:	mov	w3, #0x4                   	// #4
   238c4:	mov	x0, x20
   238c8:	mov	x2, xzr
   238cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   238d0:	ldr	w8, [x20, #8]
   238d4:	b	209d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x25ac>
   238d8:	add	x1, x20, #0x10
   238dc:	mov	w3, #0x4                   	// #4
   238e0:	mov	x0, x20
   238e4:	mov	x2, xzr
   238e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   238ec:	ldr	w8, [x20, #8]
   238f0:	b	1e7e8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3bc>
   238f4:	add	x1, x20, #0x10
   238f8:	mov	w3, #0x4                   	// #4
   238fc:	mov	x0, x20
   23900:	mov	x2, xzr
   23904:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23908:	ldr	w8, [x20, #8]
   2390c:	b	1e830 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x404>
   23910:	add	x1, x20, #0x10
   23914:	mov	w3, #0x4                   	// #4
   23918:	mov	x0, x20
   2391c:	mov	x2, xzr
   23920:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23924:	ldr	w8, [x20, #8]
   23928:	b	1eb4c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x720>
   2392c:	add	x1, x20, #0x10
   23930:	mov	w3, #0x4                   	// #4
   23934:	mov	x0, x20
   23938:	mov	x2, xzr
   2393c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23940:	ldr	w8, [x20, #8]
   23944:	b	1ec3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x810>
   23948:	add	x1, x20, #0x10
   2394c:	mov	w3, #0x4                   	// #4
   23950:	mov	x0, x20
   23954:	mov	x2, xzr
   23958:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2395c:	ldr	w9, [x20, #8]
   23960:	b	1ed28 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x8fc>
   23964:	add	x1, x20, #0x10
   23968:	mov	w3, #0x4                   	// #4
   2396c:	mov	x0, x20
   23970:	mov	x2, xzr
   23974:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23978:	ldr	w8, [x20, #8]
   2397c:	b	1ed5c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x930>
   23980:	add	x1, x20, #0x10
   23984:	mov	w3, #0x4                   	// #4
   23988:	mov	x0, x20
   2398c:	mov	x2, xzr
   23990:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23994:	ldr	w8, [x20, #8]
   23998:	b	1ee94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xa68>
   2399c:	add	x1, x20, #0x10
   239a0:	mov	w3, #0x4                   	// #4
   239a4:	mov	x0, x20
   239a8:	mov	x2, xzr
   239ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   239b0:	ldr	w8, [x20, #8]
   239b4:	b	1efc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xb94>
   239b8:	add	x1, x20, #0x10
   239bc:	mov	w3, #0x4                   	// #4
   239c0:	mov	x0, x20
   239c4:	mov	x2, xzr
   239c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   239cc:	ldr	w8, [x20, #8]
   239d0:	b	1f074 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xc48>
   239d4:	add	x1, x20, #0x10
   239d8:	mov	w3, #0x4                   	// #4
   239dc:	mov	x0, x20
   239e0:	mov	x2, xzr
   239e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   239e8:	ldr	w8, [x20, #8]
   239ec:	b	1f130 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xd04>
   239f0:	add	x1, x20, #0x10
   239f4:	mov	w3, #0x4                   	// #4
   239f8:	mov	x0, x20
   239fc:	mov	x2, xzr
   23a00:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23a04:	ldr	w8, [x20, #8]
   23a08:	b	1f1f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xdc4>
   23a0c:	add	x1, x20, #0x10
   23a10:	mov	w3, #0x4                   	// #4
   23a14:	mov	x0, x20
   23a18:	mov	x2, xzr
   23a1c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23a20:	ldr	w8, [x20, #8]
   23a24:	b	1f2a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xe7c>
   23a28:	add	x1, x20, #0x10
   23a2c:	mov	w3, #0x4                   	// #4
   23a30:	mov	x0, x20
   23a34:	mov	x2, xzr
   23a38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23a3c:	ldr	w8, [x20, #8]
   23a40:	b	1f3d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xfa4>
   23a44:	add	x1, x20, #0x10
   23a48:	mov	w3, #0x4                   	// #4
   23a4c:	mov	x0, x20
   23a50:	mov	x2, xzr
   23a54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23a58:	ldr	w8, [x20, #8]
   23a5c:	b	1f424 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0xff8>
   23a60:	add	x1, x20, #0x10
   23a64:	mov	w3, #0x4                   	// #4
   23a68:	mov	x0, x20
   23a6c:	mov	x2, xzr
   23a70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23a74:	ldr	w8, [x20, #8]
   23a78:	b	1f4dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x10b0>
   23a7c:	add	x1, x20, #0x10
   23a80:	mov	w3, #0x4                   	// #4
   23a84:	mov	x0, x20
   23a88:	mov	x2, xzr
   23a8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23a90:	ldr	w8, [x20, #8]
   23a94:	b	1f674 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1248>
   23a98:	add	x1, x20, #0x10
   23a9c:	mov	w3, #0x4                   	// #4
   23aa0:	mov	x0, x20
   23aa4:	mov	x2, xzr
   23aa8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23aac:	ldr	w8, [x20, #8]
   23ab0:	b	1f728 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x12fc>
   23ab4:	add	x1, x20, #0x10
   23ab8:	mov	w3, #0x4                   	// #4
   23abc:	mov	x0, x20
   23ac0:	mov	x2, xzr
   23ac4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23ac8:	ldr	w8, [x20, #8]
   23acc:	b	1f778 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x134c>
   23ad0:	add	x1, x20, #0x10
   23ad4:	mov	w3, #0x4                   	// #4
   23ad8:	mov	x0, x20
   23adc:	mov	x2, xzr
   23ae0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23ae4:	ldr	w8, [x20, #8]
   23ae8:	b	1f7b8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x138c>
   23aec:	add	x1, x20, #0x10
   23af0:	mov	w3, #0x4                   	// #4
   23af4:	mov	x0, x20
   23af8:	mov	x2, xzr
   23afc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23b00:	ldr	w8, [x20, #8]
   23b04:	b	1f894 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1468>
   23b08:	add	x1, x20, #0x10
   23b0c:	mov	w3, #0x4                   	// #4
   23b10:	mov	x0, x20
   23b14:	mov	x2, xzr
   23b18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23b1c:	ldr	w8, [x20, #8]
   23b20:	b	1f94c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1520>
   23b24:	add	x1, x20, #0x10
   23b28:	mov	w3, #0x4                   	// #4
   23b2c:	mov	x0, x20
   23b30:	mov	x2, xzr
   23b34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23b38:	ldr	w8, [x20, #8]
   23b3c:	b	1fb7c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1750>
   23b40:	add	x1, x20, #0x10
   23b44:	mov	w3, #0x4                   	// #4
   23b48:	mov	x0, x20
   23b4c:	mov	x2, xzr
   23b50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23b54:	ldr	w8, [x20, #8]
   23b58:	b	1fba8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x177c>
   23b5c:	add	x1, x20, #0x10
   23b60:	mov	w3, #0x4                   	// #4
   23b64:	mov	x0, x20
   23b68:	mov	x2, xzr
   23b6c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23b70:	ldr	w8, [x20, #8]
   23b74:	b	1fbd4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x17a8>
   23b78:	add	x1, x20, #0x10
   23b7c:	mov	w3, #0x4                   	// #4
   23b80:	mov	x0, x20
   23b84:	mov	x2, xzr
   23b88:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23b8c:	ldr	w8, [x20, #8]
   23b90:	b	1fe54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a28>
   23b94:	add	x1, x20, #0x10
   23b98:	mov	w3, #0x4                   	// #4
   23b9c:	mov	x0, x20
   23ba0:	mov	x2, xzr
   23ba4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23ba8:	ldr	w8, [x20, #8]
   23bac:	b	1feb0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1a84>
   23bb0:	add	x1, x20, #0x10
   23bb4:	mov	w3, #0x4                   	// #4
   23bb8:	mov	x0, x20
   23bbc:	mov	x2, xzr
   23bc0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23bc4:	ldr	w8, [x20, #8]
   23bc8:	b	1ff58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1b2c>
   23bcc:	add	x1, x20, #0x10
   23bd0:	mov	w3, #0x4                   	// #4
   23bd4:	mov	x0, x20
   23bd8:	mov	x2, xzr
   23bdc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23be0:	ldr	w8, [x20, #8]
   23be4:	b	2017c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1d50>
   23be8:	add	x1, x20, #0x10
   23bec:	mov	w3, #0x4                   	// #4
   23bf0:	mov	x0, x20
   23bf4:	mov	x2, xzr
   23bf8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23bfc:	ldr	w8, [x20, #8]
   23c00:	b	20250 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e24>
   23c04:	add	x1, x20, #0x10
   23c08:	mov	w3, #0x4                   	// #4
   23c0c:	mov	x0, x20
   23c10:	mov	x2, xzr
   23c14:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23c18:	ldr	w8, [x20, #8]
   23c1c:	b	202ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1e80>
   23c20:	add	x1, x20, #0x10
   23c24:	mov	w3, #0x4                   	// #4
   23c28:	mov	x0, x20
   23c2c:	mov	x2, xzr
   23c30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23c34:	ldr	w8, [x20, #8]
   23c38:	b	203ac <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1f80>
   23c3c:	add	x1, x20, #0x10
   23c40:	mov	w3, #0x4                   	// #4
   23c44:	mov	x0, x20
   23c48:	mov	x2, xzr
   23c4c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23c50:	ldr	w8, [x20, #8]
   23c54:	b	20408 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1fdc>
   23c58:	add	x1, x20, #0x10
   23c5c:	mov	w3, #0x4                   	// #4
   23c60:	mov	x0, x20
   23c64:	mov	x2, xzr
   23c68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23c6c:	ldr	w8, [x20, #8]
   23c70:	b	20478 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x204c>
   23c74:	add	x1, x20, #0x10
   23c78:	mov	w3, #0x4                   	// #4
   23c7c:	mov	x0, x20
   23c80:	mov	x2, xzr
   23c84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23c88:	ldr	w8, [x20, #8]
   23c8c:	b	20628 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x21fc>
   23c90:	add	x1, x20, #0x10
   23c94:	mov	w3, #0x4                   	// #4
   23c98:	mov	x0, x20
   23c9c:	mov	x2, xzr
   23ca0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23ca4:	ldr	w8, [x20, #8]
   23ca8:	b	20684 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2258>
   23cac:	add	x1, x20, #0x10
   23cb0:	mov	w3, #0x4                   	// #4
   23cb4:	mov	x0, x20
   23cb8:	mov	x2, xzr
   23cbc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23cc0:	ldr	w8, [x20, #8]
   23cc4:	b	206f4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x22c8>
   23cc8:	add	x1, x20, #0x10
   23ccc:	mov	w3, #0x4                   	// #4
   23cd0:	mov	x0, x20
   23cd4:	mov	x2, xzr
   23cd8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23cdc:	ldr	w8, [x20, #8]
   23ce0:	b	2073c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2310>
   23ce4:	add	x1, x20, #0x10
   23ce8:	mov	w3, #0x4                   	// #4
   23cec:	mov	x0, x20
   23cf0:	mov	x2, xzr
   23cf4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23cf8:	ldr	w8, [x20, #8]
   23cfc:	b	20904 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x24d8>
   23d00:	add	x1, x20, #0x10
   23d04:	mov	w3, #0x4                   	// #4
   23d08:	mov	x0, x20
   23d0c:	mov	x2, xzr
   23d10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23d14:	ldr	w8, [x20, #8]
   23d18:	b	20a44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2618>
   23d1c:	add	x1, x20, #0x10
   23d20:	mov	w3, #0x4                   	// #4
   23d24:	mov	x0, x20
   23d28:	mov	x2, xzr
   23d2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23d30:	ldr	w8, [x20, #8]
   23d34:	b	20f34 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2b08>
   23d38:	add	x1, x20, #0x10
   23d3c:	mov	w3, #0x4                   	// #4
   23d40:	mov	x0, x20
   23d44:	mov	x2, xzr
   23d48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23d4c:	ldr	w8, [x20, #8]
   23d50:	b	21098 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c6c>
   23d54:	add	x1, x20, #0x10
   23d58:	mov	w3, #0x4                   	// #4
   23d5c:	mov	x0, x20
   23d60:	mov	x2, xzr
   23d64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23d68:	ldr	w8, [x20, #8]
   23d6c:	b	210d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2cac>
   23d70:	add	x1, x20, #0x10
   23d74:	mov	w3, #0x4                   	// #4
   23d78:	mov	x0, x20
   23d7c:	mov	x2, xzr
   23d80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23d84:	ldr	w8, [x20, #8]
   23d88:	b	21110 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ce4>
   23d8c:	add	x1, x20, #0x10
   23d90:	mov	w3, #0x4                   	// #4
   23d94:	mov	x0, x20
   23d98:	mov	x2, xzr
   23d9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23da0:	ldr	w8, [x20, #8]
   23da4:	b	21160 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d34>
   23da8:	add	x1, x20, #0x10
   23dac:	mov	w3, #0x4                   	// #4
   23db0:	mov	x0, x20
   23db4:	mov	x2, xzr
   23db8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23dbc:	ldr	w8, [x20, #8]
   23dc0:	b	21194 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2d68>
   23dc4:	add	x1, x20, #0x10
   23dc8:	mov	w3, #0x4                   	// #4
   23dcc:	mov	x0, x20
   23dd0:	mov	x2, xzr
   23dd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23dd8:	ldr	w8, [x20, #8]
   23ddc:	b	2129c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2e70>
   23de0:	add	x1, x20, #0x10
   23de4:	mov	w3, #0x4                   	// #4
   23de8:	mov	x0, x20
   23dec:	mov	x2, xzr
   23df0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23df4:	ldr	w8, [x20, #8]
   23df8:	b	21304 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2ed8>
   23dfc:	add	x1, x20, #0x10
   23e00:	mov	w3, #0x4                   	// #4
   23e04:	mov	x0, x20
   23e08:	mov	x2, xzr
   23e0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23e10:	ldr	w8, [x20, #8]
   23e14:	b	2133c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2f10>
   23e18:	add	x1, x20, #0x10
   23e1c:	mov	w3, #0x4                   	// #4
   23e20:	mov	x0, x20
   23e24:	mov	x2, xzr
   23e28:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23e2c:	ldr	w8, [x20, #8]
   23e30:	b	214bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3090>
   23e34:	add	x1, x20, #0x10
   23e38:	mov	w3, #0x4                   	// #4
   23e3c:	mov	x0, x20
   23e40:	mov	x2, xzr
   23e44:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23e48:	ldr	w8, [x20, #8]
   23e4c:	b	21520 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x30f4>
   23e50:	add	x1, x20, #0x10
   23e54:	mov	w3, #0x4                   	// #4
   23e58:	mov	x0, x20
   23e5c:	mov	x2, xzr
   23e60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23e64:	ldr	w8, [x20, #8]
   23e68:	b	21630 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3204>
   23e6c:	add	x1, x20, #0x10
   23e70:	mov	w3, #0x4                   	// #4
   23e74:	mov	x0, x20
   23e78:	mov	x2, xzr
   23e7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23e80:	ldr	w8, [x20, #8]
   23e84:	b	21698 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x326c>
   23e88:	add	x1, x20, #0x10
   23e8c:	mov	w3, #0x4                   	// #4
   23e90:	mov	x0, x20
   23e94:	mov	x2, xzr
   23e98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23e9c:	ldr	w8, [x20, #8]
   23ea0:	b	21788 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x335c>
   23ea4:	add	x1, x20, #0x10
   23ea8:	mov	w3, #0x4                   	// #4
   23eac:	mov	x0, x20
   23eb0:	mov	x2, xzr
   23eb4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23eb8:	ldr	w8, [x20, #8]
   23ebc:	b	21870 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3444>
   23ec0:	add	x1, x20, #0x10
   23ec4:	mov	w3, #0x4                   	// #4
   23ec8:	mov	x0, x20
   23ecc:	mov	x2, xzr
   23ed0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23ed4:	ldr	w8, [x20, #8]
   23ed8:	b	218d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34a4>
   23edc:	add	x1, x20, #0x10
   23ee0:	mov	w3, #0x4                   	// #4
   23ee4:	mov	x0, x20
   23ee8:	mov	x2, xzr
   23eec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23ef0:	ldr	w8, [x20, #8]
   23ef4:	b	21980 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3554>
   23ef8:	add	x1, x20, #0x10
   23efc:	mov	w3, #0x4                   	// #4
   23f00:	mov	x0, x20
   23f04:	mov	x2, xzr
   23f08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23f0c:	ldr	w8, [x20, #8]
   23f10:	b	21a94 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3668>
   23f14:	add	x1, x20, #0x10
   23f18:	mov	w3, #0x4                   	// #4
   23f1c:	mov	x0, x20
   23f20:	mov	x2, xzr
   23f24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23f28:	ldr	w8, [x20, #8]
   23f2c:	b	21e30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3a04>
   23f30:	add	x1, x20, #0x10
   23f34:	mov	w3, #0x4                   	// #4
   23f38:	mov	x0, x20
   23f3c:	mov	x2, xzr
   23f40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23f44:	ldr	w8, [x20, #8]
   23f48:	b	21f48 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3b1c>
   23f4c:	add	x1, x20, #0x10
   23f50:	mov	w3, #0x4                   	// #4
   23f54:	mov	x0, x20
   23f58:	mov	x2, xzr
   23f5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23f60:	ldr	w8, [x20, #8]
   23f64:	b	21f80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3b54>
   23f68:	add	x1, x20, #0x10
   23f6c:	mov	w3, #0x4                   	// #4
   23f70:	mov	x0, x20
   23f74:	mov	x2, xzr
   23f78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23f7c:	ldr	w8, [x20, #8]
   23f80:	b	220cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ca0>
   23f84:	add	x1, x20, #0x10
   23f88:	mov	w3, #0x4                   	// #4
   23f8c:	mov	x0, x20
   23f90:	mov	x2, xzr
   23f94:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23f98:	ldr	w8, [x20, #8]
   23f9c:	b	22104 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3cd8>
   23fa0:	add	x1, x20, #0x10
   23fa4:	mov	w3, #0x4                   	// #4
   23fa8:	mov	x0, x20
   23fac:	mov	x2, xzr
   23fb0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23fb4:	ldr	w8, [x20, #8]
   23fb8:	b	22154 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3d28>
   23fbc:	add	x1, x20, #0x10
   23fc0:	mov	w3, #0x4                   	// #4
   23fc4:	mov	x0, x20
   23fc8:	mov	x2, xzr
   23fcc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23fd0:	ldr	w8, [x20, #8]
   23fd4:	b	22188 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3d5c>
   23fd8:	add	x1, x20, #0x10
   23fdc:	mov	w3, #0x4                   	// #4
   23fe0:	mov	x0, x20
   23fe4:	mov	x2, xzr
   23fe8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   23fec:	ldr	w8, [x20, #8]
   23ff0:	b	221d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3da4>
   23ff4:	add	x1, x20, #0x10
   23ff8:	mov	w3, #0x4                   	// #4
   23ffc:	mov	x0, x20
   24000:	mov	x2, xzr
   24004:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24008:	ldr	w8, [x20, #8]
   2400c:	b	22208 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ddc>
   24010:	add	x1, x20, #0x10
   24014:	mov	w3, #0x4                   	// #4
   24018:	mov	x0, x20
   2401c:	mov	x2, xzr
   24020:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24024:	ldr	w8, [x20, #8]
   24028:	b	223bc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3f90>
   2402c:	add	x1, x20, #0x10
   24030:	mov	w3, #0x4                   	// #4
   24034:	mov	x0, x20
   24038:	mov	x2, xzr
   2403c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24040:	ldr	w8, [x20, #8]
   24044:	b	223f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3fc4>
   24048:	add	x1, x20, #0x10
   2404c:	mov	w3, #0x4                   	// #4
   24050:	mov	x0, x20
   24054:	mov	x2, xzr
   24058:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2405c:	ldr	w8, [x20, #8]
   24060:	b	22448 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x401c>
   24064:	add	x1, x20, #0x10
   24068:	mov	w3, #0x4                   	// #4
   2406c:	mov	x0, x20
   24070:	mov	x2, xzr
   24074:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24078:	ldr	w8, [x20, #8]
   2407c:	b	22470 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4044>
   24080:	add	x1, x20, #0x10
   24084:	mov	w3, #0x4                   	// #4
   24088:	mov	x0, x20
   2408c:	mov	x2, xzr
   24090:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24094:	ldr	w9, [x20, #8]
   24098:	b	225b4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4188>
   2409c:	add	x1, x20, #0x10
   240a0:	mov	w3, #0x4                   	// #4
   240a4:	mov	x0, x20
   240a8:	mov	x2, xzr
   240ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   240b0:	ldr	w8, [x20, #8]
   240b4:	b	225f0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x41c4>
   240b8:	add	x1, x20, #0x10
   240bc:	mov	w3, #0x4                   	// #4
   240c0:	mov	x0, x20
   240c4:	mov	x2, xzr
   240c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   240cc:	ldr	w8, [x20, #8]
   240d0:	b	22a50 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4624>
   240d4:	add	x1, x20, #0x10
   240d8:	mov	w3, #0x4                   	// #4
   240dc:	mov	x0, x20
   240e0:	mov	x2, xzr
   240e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   240e8:	ldr	w8, [x20, #8]
   240ec:	b	22a80 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4654>
   240f0:	add	x1, x20, #0x10
   240f4:	mov	w3, #0x4                   	// #4
   240f8:	mov	x0, x20
   240fc:	mov	x2, xzr
   24100:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24104:	ldr	w8, [x20, #8]
   24108:	b	22ac8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x469c>
   2410c:	add	x1, x20, #0x10
   24110:	mov	w3, #0x4                   	// #4
   24114:	mov	x0, x20
   24118:	mov	x2, xzr
   2411c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24120:	ldr	w8, [x20, #8]
   24124:	b	22b10 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x46e4>
   24128:	add	x1, x20, #0x10
   2412c:	mov	w3, #0x4                   	// #4
   24130:	mov	x0, x20
   24134:	mov	x2, xzr
   24138:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2413c:	ldr	w8, [x20, #8]
   24140:	b	22bb4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4788>
   24144:	add	x1, x20, #0x10
   24148:	mov	w3, #0x4                   	// #4
   2414c:	mov	x0, x20
   24150:	mov	x2, xzr
   24154:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24158:	ldr	w8, [x20, #8]
   2415c:	b	22bf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x47c4>
   24160:	add	x1, x20, #0x10
   24164:	mov	w3, #0x4                   	// #4
   24168:	mov	x0, x20
   2416c:	mov	x2, xzr
   24170:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24174:	ldr	w8, [x20, #8]
   24178:	b	23054 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4c28>
   2417c:	add	x1, x20, #0x10
   24180:	mov	w3, #0x4                   	// #4
   24184:	mov	x0, x20
   24188:	mov	x2, xzr
   2418c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24190:	ldr	w8, [x20, #8]
   24194:	b	230d8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4cac>
   24198:	add	x1, x20, #0x10
   2419c:	mov	w3, #0x4                   	// #4
   241a0:	mov	x0, x20
   241a4:	mov	x2, xzr
   241a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   241ac:	ldr	w8, [x20, #8]
   241b0:	b	231a4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4d78>
   241b4:	add	x1, x20, #0x10
   241b8:	mov	w3, #0x4                   	// #4
   241bc:	mov	x0, x20
   241c0:	mov	x2, xzr
   241c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   241c8:	ldr	w8, [x20, #8]
   241cc:	b	231e4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4db8>
   241d0:	add	x1, x20, #0x10
   241d4:	mov	w3, #0x4                   	// #4
   241d8:	mov	x0, x20
   241dc:	mov	x2, xzr
   241e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   241e4:	ldr	w8, [x20, #8]
   241e8:	b	217cc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33a0>
   241ec:	add	x1, x20, #0x10
   241f0:	mov	w3, #0x4                   	// #4
   241f4:	mov	x0, x20
   241f8:	mov	x2, xzr
   241fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24200:	ldr	w8, [x20, #8]
   24204:	b	21bc4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3798>
   24208:	add	x1, x20, #0x10
   2420c:	mov	w3, #0x4                   	// #4
   24210:	mov	x0, x20
   24214:	mov	x2, xzr
   24218:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2421c:	ldr	w8, [x20, #8]
   24220:	b	23100 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4cd4>
   24224:	add	x0, sp, #0x28
   24228:	mov	w3, #0x8                   	// #8
   2422c:	mov	x1, x20
   24230:	mov	x2, xzr
   24234:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24238:	ldr	w8, [sp, #48]
   2423c:	b	20100 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x1cd4>
   24240:	add	x1, x20, #0x10
   24244:	mov	w3, #0x4                   	// #4
   24248:	mov	x0, x20
   2424c:	mov	x2, xzr
   24250:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24254:	ldr	w8, [x20, #8]
   24258:	b	1fa1c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x15f0>
   2425c:	add	x1, x20, #0x10
   24260:	mov	w3, #0x4                   	// #4
   24264:	mov	x0, x20
   24268:	mov	x2, xzr
   2426c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24270:	ldr	w8, [x20, #8]
   24274:	b	20a9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2670>
   24278:	add	x1, x20, #0x10
   2427c:	mov	w3, #0x4                   	// #4
   24280:	mov	x0, x20
   24284:	mov	x2, xzr
   24288:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2428c:	ldr	w8, [x20, #8]
   24290:	b	20ae4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x26b8>
   24294:	add	x1, x20, #0x10
   24298:	mov	w3, #0x4                   	// #4
   2429c:	mov	x0, x20
   242a0:	mov	x2, xzr
   242a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   242a8:	ldr	w8, [x20, #8]
   242ac:	b	20d08 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x28dc>
   242b0:	add	x1, x20, #0x10
   242b4:	mov	w3, #0x4                   	// #4
   242b8:	mov	x0, x20
   242bc:	mov	x2, xzr
   242c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   242c4:	ldr	w8, [x20, #8]
   242c8:	b	20ecc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2aa0>
   242cc:	add	x1, x20, #0x10
   242d0:	mov	w3, #0x4                   	// #4
   242d4:	mov	x0, x20
   242d8:	mov	x2, xzr
   242dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   242e0:	ldr	w8, [x20, #8]
   242e4:	b	20ff0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2bc4>
   242e8:	add	x1, x20, #0x10
   242ec:	mov	w3, #0x4                   	// #4
   242f0:	mov	x0, x20
   242f4:	mov	x2, xzr
   242f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   242fc:	ldr	w8, [x20, #8]
   24300:	b	21038 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2c0c>
   24304:	add	x1, x20, #0x10
   24308:	mov	w3, #0x4                   	// #4
   2430c:	mov	x0, x20
   24310:	mov	x2, xzr
   24314:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24318:	ldr	w8, [x20, #8]
   2431c:	b	211dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2db0>
   24320:	add	x1, x20, #0x10
   24324:	mov	w3, #0x4                   	// #4
   24328:	mov	x0, x20
   2432c:	mov	x2, xzr
   24330:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24334:	ldr	w8, [x20, #8]
   24338:	b	213a8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2f7c>
   2433c:	add	x1, x20, #0x10
   24340:	mov	w3, #0x4                   	// #4
   24344:	mov	x0, x20
   24348:	mov	x2, xzr
   2434c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24350:	ldr	w8, [x20, #8]
   24354:	b	213dc <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fb0>
   24358:	add	x1, x20, #0x10
   2435c:	mov	w3, #0x4                   	// #4
   24360:	mov	x0, x20
   24364:	mov	x2, xzr
   24368:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2436c:	ldr	w8, [x20, #8]
   24370:	b	21414 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2fe8>
   24374:	add	x1, x20, #0x10
   24378:	mov	w3, #0x4                   	// #4
   2437c:	mov	x0, x20
   24380:	mov	x2, xzr
   24384:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24388:	ldr	w8, [x20, #8]
   2438c:	b	2145c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3030>
   24390:	add	x1, x20, #0x10
   24394:	mov	w3, #0x4                   	// #4
   24398:	mov	x0, x20
   2439c:	mov	x2, xzr
   243a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   243a4:	ldr	w8, [x20, #8]
   243a8:	b	215d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x31a4>
   243ac:	add	x1, x20, #0x10
   243b0:	mov	w3, #0x4                   	// #4
   243b4:	mov	x0, x20
   243b8:	mov	x2, xzr
   243bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   243c0:	ldr	w8, [x20, #8]
   243c4:	b	21754 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3328>
   243c8:	add	x1, x20, #0x10
   243cc:	mov	w3, #0x4                   	// #4
   243d0:	mov	x0, x20
   243d4:	mov	x2, xzr
   243d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   243dc:	ldr	w8, [x20, #8]
   243e0:	b	21810 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x33e4>
   243e4:	add	x1, x20, #0x10
   243e8:	mov	w3, #0x4                   	// #4
   243ec:	mov	x0, x20
   243f0:	mov	x2, xzr
   243f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   243f8:	ldr	w8, [x20, #8]
   243fc:	b	21918 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x34ec>
   24400:	add	x1, x20, #0x10
   24404:	mov	w3, #0x4                   	// #4
   24408:	mov	x0, x20
   2440c:	mov	x2, xzr
   24410:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24414:	ldr	w8, [x20, #8]
   24418:	b	21a30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3604>
   2441c:	add	x1, x20, #0x10
   24420:	mov	w3, #0x4                   	// #4
   24424:	mov	x0, x20
   24428:	mov	x2, xzr
   2442c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24430:	ldr	w8, [x20, #8]
   24434:	b	21b44 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3718>
   24438:	add	x1, x20, #0x10
   2443c:	mov	w3, #0x4                   	// #4
   24440:	mov	x0, x20
   24444:	mov	x2, xzr
   24448:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2444c:	ldr	w8, [x20, #8]
   24450:	b	21b8c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3760>
   24454:	add	x1, x20, #0x10
   24458:	mov	w3, #0x4                   	// #4
   2445c:	mov	x0, x20
   24460:	mov	x2, xzr
   24464:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24468:	ldr	w8, [x20, #8]
   2446c:	b	21c18 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x37ec>
   24470:	add	x1, x20, #0x10
   24474:	mov	w3, #0x4                   	// #4
   24478:	mov	x0, x20
   2447c:	mov	x2, xzr
   24480:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24484:	ldr	w9, [x20, #8]
   24488:	b	21c60 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3834>
   2448c:	add	x1, x20, #0x10
   24490:	mov	w3, #0x4                   	// #4
   24494:	mov	x0, x20
   24498:	mov	x2, xzr
   2449c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   244a0:	ldr	w9, [x20, #8]
   244a4:	b	21d14 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x38e8>
   244a8:	add	x1, x20, #0x10
   244ac:	mov	w3, #0x4                   	// #4
   244b0:	mov	x0, x20
   244b4:	mov	x2, xzr
   244b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   244bc:	ldr	w8, [x20, #8]
   244c0:	b	21dc8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x399c>
   244c4:	add	x1, x20, #0x10
   244c8:	mov	w3, #0x4                   	// #4
   244cc:	mov	x0, x20
   244d0:	mov	x2, xzr
   244d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   244d8:	ldr	w8, [x20, #8]
   244dc:	b	21ee0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3ab4>
   244e0:	add	x1, x20, #0x10
   244e4:	mov	w3, #0x4                   	// #4
   244e8:	mov	x0, x20
   244ec:	mov	x2, xzr
   244f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   244f4:	ldr	w8, [x20, #8]
   244f8:	b	21fec <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3bc0>
   244fc:	add	x1, x20, #0x10
   24500:	mov	w3, #0x4                   	// #4
   24504:	mov	x0, x20
   24508:	mov	x2, xzr
   2450c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24510:	ldr	w8, [x20, #8]
   24514:	b	22020 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3bf4>
   24518:	add	x1, x20, #0x10
   2451c:	mov	w3, #0x4                   	// #4
   24520:	mov	x0, x20
   24524:	mov	x2, xzr
   24528:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2452c:	ldr	w8, [x20, #8]
   24530:	b	2206c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3c40>
   24534:	add	x1, x20, #0x10
   24538:	mov	w3, #0x4                   	// #4
   2453c:	mov	x0, x20
   24540:	mov	x2, xzr
   24544:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24548:	ldr	w8, [x20, #8]
   2454c:	b	226a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4274>
   24550:	add	x1, x20, #0x10
   24554:	mov	w3, #0x4                   	// #4
   24558:	mov	x0, x20
   2455c:	mov	x2, xzr
   24560:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24564:	ldr	w8, [x20, #8]
   24568:	b	22ca0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4874>
   2456c:	add	x1, x20, #0x10
   24570:	mov	w3, #0x4                   	// #4
   24574:	mov	x0, x20
   24578:	mov	x2, xzr
   2457c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24580:	ldr	w8, [x20, #8]
   24584:	b	23294 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x4e68>
   24588:	add	x1, x20, #0x10
   2458c:	mov	w3, #0x4                   	// #4
   24590:	mov	x0, x20
   24594:	mov	x2, xzr
   24598:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2459c:	ldr	w8, [x20, #8]
   245a0:	b	20d54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x2928>
   245a4:	add	x1, x20, #0x10
   245a8:	mov	w3, #0x4                   	// #4
   245ac:	mov	x0, x20
   245b0:	mov	x2, xzr
   245b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   245b8:	ldr	w8, [x20, #8]
   245bc:	b	20da8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x297c>
   245c0:	add	x1, x20, #0x10
   245c4:	mov	w3, #0x4                   	// #4
   245c8:	mov	x0, x20
   245cc:	mov	x2, xzr
   245d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   245d4:	ldr	w8, [x20, #8]
   245d8:	b	23624 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x51f8>
   245dc:	add	x1, x20, #0x10
   245e0:	mov	w3, #0x4                   	// #4
   245e4:	mov	x0, x20
   245e8:	mov	x2, xzr
   245ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   245f0:	ldr	w8, [x20, #8]
   245f4:	b	2365c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5230>
   245f8:	add	x1, x20, #0x10
   245fc:	mov	w3, #0x4                   	// #4
   24600:	mov	x0, x20
   24604:	mov	x2, xzr
   24608:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2460c:	ldr	w8, [x20, #8]
   24610:	b	23704 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x52d8>
   24614:	add	x1, x20, #0x10
   24618:	mov	w3, #0x4                   	// #4
   2461c:	mov	x0, x20
   24620:	mov	x2, xzr
   24624:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24628:	ldr	w8, [x20, #8]
   2462c:	b	23748 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x531c>
   24630:	add	x1, x20, #0x10
   24634:	mov	w3, #0x4                   	// #4
   24638:	mov	x0, x20
   2463c:	mov	x2, xzr
   24640:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24644:	ldr	w8, [x20, #8]
   24648:	b	22254 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x3e28>
   2464c:	add	x1, x20, #0x10
   24650:	mov	w3, #0x4                   	// #4
   24654:	mov	x0, x20
   24658:	mov	x2, xzr
   2465c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24660:	ldr	w8, [x20, #8]
   24664:	b	2378c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5360>
   24668:	add	x1, x20, #0x10
   2466c:	mov	w3, #0x4                   	// #4
   24670:	mov	x0, x20
   24674:	mov	x2, xzr
   24678:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2467c:	ldr	w8, [x20, #8]
   24680:	b	23578 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x514c>
   24684:	add	x1, x20, #0x10
   24688:	mov	w3, #0x4                   	// #4
   2468c:	mov	x0, x20
   24690:	mov	x2, xzr
   24694:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24698:	ldr	w8, [x20, #8]
   2469c:	b	236a0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x5274>
   246a0:	add	x1, x20, #0x10
   246a4:	mov	w3, #0x4                   	// #4
   246a8:	mov	x0, x20
   246ac:	mov	x2, xzr
   246b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   246b4:	ldr	w8, [x20, #8]
   246b8:	b	237d0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter16writeInstructionERKN4llvm11InstructionEjRNS1_15SmallVectorImplIjEE+0x53a4>
   246bc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   246c0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   246c4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   246c8:	add	x0, x0, #0x0
   246cc:	add	x1, x1, #0x0
   246d0:	add	x3, x3, #0x0
   246d4:	mov	w2, #0x43                  	// #67
   246d8:	bl	0 <__assert_fail>
   246dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   246e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   246e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   246e8:	add	x0, x0, #0x0
   246ec:	add	x1, x1, #0x0
   246f0:	add	x3, x3, #0x0
   246f4:	mov	w2, #0xaa                  	// #170
   246f8:	bl	0 <__assert_fail>
   246fc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24700:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24704:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24708:	add	x0, x0, #0x0
   2470c:	add	x1, x1, #0x0
   24710:	add	x3, x3, #0x0
   24714:	mov	w2, #0x252                 	// #594
   24718:	bl	0 <__assert_fail>
   2471c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24720:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24724:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24728:	add	x0, x0, #0x0
   2472c:	add	x1, x1, #0x0
   24730:	add	x3, x3, #0x0
   24734:	mov	w2, #0xa9                  	// #169
   24738:	bl	0 <__assert_fail>
   2473c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24740:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24744:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24748:	add	x0, x0, #0x0
   2474c:	add	x1, x1, #0x0
   24750:	add	x3, x3, #0x0
   24754:	mov	w2, #0x8b0                 	// #2224
   24758:	bl	0 <__assert_fail>
   2475c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24760:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24764:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24768:	add	x0, x0, #0x0
   2476c:	add	x1, x1, #0x0
   24770:	add	x3, x3, #0x0
   24774:	mov	w2, #0xdbe                 	// #3518
   24778:	bl	0 <__assert_fail>
   2477c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24780:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24784:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24788:	add	x0, x0, #0x0
   2478c:	add	x1, x1, #0x0
   24790:	add	x3, x3, #0x0
   24794:	mov	w2, #0xc79                 	// #3193
   24798:	bl	0 <__assert_fail>
   2479c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   247a0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   247a4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   247a8:	add	x0, x0, #0x0
   247ac:	add	x1, x1, #0x0
   247b0:	add	x3, x3, #0x0
   247b4:	mov	w2, #0xc81                 	// #3201
   247b8:	bl	0 <__assert_fail>
   247bc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   247c0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   247c4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   247c8:	add	x0, x0, #0x0
   247cc:	add	x1, x1, #0x0
   247d0:	add	x3, x3, #0x0
   247d4:	mov	w2, #0xcd4                 	// #3284
   247d8:	bl	0 <__assert_fail>
   247dc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   247e0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   247e4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   247e8:	add	x0, x0, #0x0
   247ec:	add	x1, x1, #0x0
   247f0:	add	x3, x3, #0x0
   247f4:	mov	w2, #0x69                  	// #105
   247f8:	bl	0 <__assert_fail>
   247fc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24800:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24804:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24808:	add	x0, x0, #0x0
   2480c:	add	x1, x1, #0x0
   24810:	add	x3, x3, #0x0
   24814:	mov	w2, #0x108                 	// #264
   24818:	bl	0 <__assert_fail>
   2481c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24820:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24824:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24828:	add	x0, x0, #0x0
   2482c:	add	x1, x1, #0x0
   24830:	add	x3, x3, #0x0
   24834:	mov	w2, #0x69                  	// #105
   24838:	bl	0 <__assert_fail>
   2483c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24840:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24844:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24848:	add	x0, x0, #0x0
   2484c:	add	x1, x1, #0x0
   24850:	add	x3, x3, #0x0
   24854:	mov	w2, #0x5b                  	// #91
   24858:	bl	0 <__assert_fail>
   2485c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24860:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24864:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24868:	add	x0, x0, #0x0
   2486c:	add	x1, x1, #0x0
   24870:	add	x3, x3, #0x0
   24874:	mov	w2, #0xfa                  	// #250
   24878:	bl	0 <__assert_fail>
   2487c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24880:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24884:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24888:	add	x0, x0, #0x0
   2488c:	add	x1, x1, #0x0
   24890:	add	x3, x3, #0x0
   24894:	mov	w2, #0xadf                 	// #2783
   24898:	bl	0 <__assert_fail>
   2489c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   248a0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   248a4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   248a8:	add	x0, x0, #0x0
   248ac:	add	x1, x1, #0x0
   248b0:	add	x3, x3, #0x0
   248b4:	mov	w2, #0x121                 	// #289
   248b8:	bl	0 <__assert_fail>
   248bc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   248c0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   248c4:	add	x0, x0, #0x0
   248c8:	add	x1, x1, #0x0
   248cc:	mov	w2, #0x245                 	// #581
   248d0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   248d4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   248d8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   248dc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   248e0:	add	x0, x0, #0x0
   248e4:	add	x1, x1, #0x0
   248e8:	add	x3, x3, #0x0
   248ec:	mov	w2, #0x101                 	// #257
   248f0:	bl	0 <__assert_fail>
   248f4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   248f8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   248fc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24900:	add	x0, x0, #0x0
   24904:	add	x1, x1, #0x0
   24908:	add	x3, x3, #0x0
   2490c:	mov	w2, #0x5b                  	// #91
   24910:	bl	0 <__assert_fail>
   24914:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24918:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2491c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24920:	add	x0, x0, #0x0
   24924:	add	x1, x1, #0x0
   24928:	add	x3, x3, #0x0
   2492c:	mov	w2, #0xfa                  	// #250
   24930:	bl	0 <__assert_fail>
   24934:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24938:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2493c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24940:	add	x0, x0, #0x0
   24944:	add	x1, x1, #0x0
   24948:	add	x3, x3, #0x0
   2494c:	mov	w2, #0x101                 	// #257
   24950:	bl	0 <__assert_fail>
   24954:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24958:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2495c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24960:	add	x0, x0, #0x0
   24964:	add	x1, x1, #0x0
   24968:	add	x3, x3, #0x0
   2496c:	mov	w2, #0x101                 	// #257
   24970:	bl	0 <__assert_fail>
   24974:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24978:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2497c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24980:	add	x0, x0, #0x0
   24984:	add	x1, x1, #0x0
   24988:	add	x3, x3, #0x0
   2498c:	mov	w2, #0x101                 	// #257
   24990:	bl	0 <__assert_fail>
   24994:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24998:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2499c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   249a0:	add	x0, x0, #0x0
   249a4:	add	x1, x1, #0x0
   249a8:	add	x3, x3, #0x0
   249ac:	mov	w2, #0x252                 	// #594
   249b0:	bl	0 <__assert_fail>
   249b4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   249b8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   249bc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   249c0:	add	x0, x0, #0x0
   249c4:	add	x1, x1, #0x0
   249c8:	add	x3, x3, #0x0
   249cc:	mov	w2, #0x101                 	// #257
   249d0:	bl	0 <__assert_fail>
   249d4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   249d8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   249dc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   249e0:	add	x0, x0, #0x0
   249e4:	add	x1, x1, #0x0
   249e8:	add	x3, x3, #0x0
   249ec:	mov	w2, #0xb3                  	// #179
   249f0:	bl	0 <__assert_fail>
   249f4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   249f8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   249fc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a00:	add	x0, x0, #0x0
   24a04:	add	x1, x1, #0x0
   24a08:	add	x3, x3, #0x0
   24a0c:	mov	w2, #0xb3                  	// #179
   24a10:	bl	0 <__assert_fail>
   24a14:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a18:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a1c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a20:	add	x0, x0, #0x0
   24a24:	add	x1, x1, #0x0
   24a28:	add	x3, x3, #0x0
   24a2c:	mov	w2, #0x1126                	// #4390
   24a30:	bl	0 <__assert_fail>
   24a34:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a38:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a3c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a40:	add	x0, x0, #0x0
   24a44:	add	x1, x1, #0x0
   24a48:	add	x3, x3, #0x0
   24a4c:	mov	w2, #0x108                 	// #264
   24a50:	bl	0 <__assert_fail>
   24a54:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a58:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a5c:	add	x0, x0, #0x0
   24a60:	add	x1, x1, #0x0
   24a64:	mov	w2, #0x46a                 	// #1130
   24a68:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   24a6c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a70:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a74:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a78:	add	x0, x0, #0x0
   24a7c:	add	x1, x1, #0x0
   24a80:	add	x3, x3, #0x0
   24a84:	mov	w2, #0x5b                  	// #91
   24a88:	bl	0 <__assert_fail>
   24a8c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a90:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a94:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24a98:	add	x0, x0, #0x0
   24a9c:	add	x1, x1, #0x0
   24aa0:	add	x3, x3, #0x0
   24aa4:	mov	w2, #0xfa                  	// #250
   24aa8:	bl	0 <__assert_fail>
   24aac:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ab0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ab4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ab8:	add	x0, x0, #0x0
   24abc:	add	x1, x1, #0x0
   24ac0:	add	x3, x3, #0x0
   24ac4:	mov	w2, #0x5b                  	// #91
   24ac8:	bl	0 <__assert_fail>
   24acc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ad0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ad4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ad8:	add	x0, x0, #0x0
   24adc:	add	x1, x1, #0x0
   24ae0:	add	x3, x3, #0x0
   24ae4:	mov	w2, #0xfa                  	// #250
   24ae8:	bl	0 <__assert_fail>
   24aec:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24af0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24af4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24af8:	add	x0, x0, #0x0
   24afc:	add	x1, x1, #0x0
   24b00:	add	x3, x3, #0x0
   24b04:	mov	w2, #0x101                 	// #257
   24b08:	bl	0 <__assert_fail>
   24b0c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b10:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b14:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b18:	add	x0, x0, #0x0
   24b1c:	add	x1, x1, #0x0
   24b20:	add	x3, x3, #0x0
   24b24:	mov	w2, #0xb69                 	// #2921
   24b28:	bl	0 <__assert_fail>
   24b2c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b30:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b34:	add	x0, x0, #0x0
   24b38:	add	x1, x1, #0x0
   24b3c:	mov	w2, #0x22a                 	// #554
   24b40:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   24b44:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b48:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b4c:	add	x0, x0, #0x0
   24b50:	add	x1, x1, #0x0
   24b54:	mov	w2, #0x20b                 	// #523
   24b58:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   24b5c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b60:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b64:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b68:	add	x0, x0, #0x0
   24b6c:	add	x1, x1, #0x0
   24b70:	add	x3, x3, #0x0
   24b74:	mov	w2, #0x108                 	// #264
   24b78:	bl	0 <__assert_fail>
   24b7c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b80:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b84:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24b88:	add	x0, x0, #0x0
   24b8c:	add	x1, x1, #0x0
   24b90:	add	x3, x3, #0x0
   24b94:	mov	w2, #0x108                 	// #264
   24b98:	bl	0 <__assert_fail>
   24b9c:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ba0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ba4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ba8:	add	x0, x0, #0x0
   24bac:	add	x1, x1, #0x0
   24bb0:	add	x3, x3, #0x0
   24bb4:	mov	w2, #0x134                 	// #308
   24bb8:	bl	0 <__assert_fail>
   24bbc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24bc0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24bc4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24bc8:	add	x0, x0, #0x0
   24bcc:	add	x1, x1, #0x0
   24bd0:	add	x3, x3, #0x0
   24bd4:	mov	w2, #0xa39                 	// #2617
   24bd8:	bl	0 <__assert_fail>
   24bdc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24be0:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24be4:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24be8:	add	x0, x0, #0x0
   24bec:	add	x1, x1, #0x0
   24bf0:	add	x3, x3, #0x0
   24bf4:	mov	w2, #0xbf7                 	// #3063
   24bf8:	bl	0 <__assert_fail>
   24bfc:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24c00:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24c04:	add	x0, x0, #0x0
   24c08:	add	x1, x1, #0x0
   24c0c:	mov	w2, #0x1f8                 	// #504
   24c10:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   24c14:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24c18:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24c1c:	add	x0, x0, #0x0
   24c20:	add	x1, x1, #0x0
   24c24:	mov	w2, #0x212                 	// #530
   24c28:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000024c2c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj>:
   24c2c:	sub	sp, sp, #0x1b0
   24c30:	stp	x29, x30, [sp, #336]
   24c34:	stp	x28, x27, [sp, #352]
   24c38:	stp	x26, x25, [sp, #368]
   24c3c:	stp	x24, x23, [sp, #384]
   24c40:	stp	x22, x21, [sp, #400]
   24c44:	stp	x20, x19, [sp, #416]
   24c48:	add	x29, sp, #0x150
   24c4c:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24c50:	ldr	d0, [x8]
   24c54:	add	x8, sp, #0x30
   24c58:	mov	x20, x0
   24c5c:	add	x8, x8, #0x10
   24c60:	and	x0, x1, #0xfffffffffffffff8
   24c64:	mov	w19, w2
   24c68:	stur	x1, [x29, #-16]
   24c6c:	str	x8, [sp, #8]
   24c70:	str	x8, [sp, #48]
   24c74:	str	d0, [sp, #56]
   24c78:	bl	0 <_ZNK4llvm5Value10getContextEv>
   24c7c:	str	x0, [sp, #16]
   24c80:	sub	x0, x29, #0x10
   24c84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24c88:	cbz	w0, 24e74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x248>
   24c8c:	mov	w23, w0
   24c90:	mov	w24, wzr
   24c94:	add	x25, x20, #0x18
   24c98:	b	24cc0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x94>
   24c9c:	ldr	x0, [x20]
   24ca0:	add	x2, sp, #0x30
   24ca4:	mov	w1, #0x37                  	// #55
   24ca8:	mov	w3, wzr
   24cac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24cb0:	add	w24, w24, #0x1
   24cb4:	cmp	w24, w23
   24cb8:	str	wzr, [sp, #56]
   24cbc:	b.eq	24e74 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x248>  // b.none
   24cc0:	add	x8, sp, #0x18
   24cc4:	sub	x0, x29, #0x10
   24cc8:	mov	w1, w24
   24ccc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24cd0:	ldr	x1, [sp, #40]
   24cd4:	ldr	x2, [x1], #16
   24cd8:	ldr	x0, [sp, #16]
   24cdc:	bl	0 <_ZNK4llvm11LLVMContext21getOperandBundleTagIDENS_9StringRefE>
   24ce0:	ldp	w8, w9, [sp, #56]
   24ce4:	mov	w26, w0
   24ce8:	cmp	w8, w9
   24cec:	b.cs	24e58 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x22c>  // b.hs, b.nlast
   24cf0:	ldr	x9, [sp, #48]
   24cf4:	str	w26, [x9, w8, uxtw #2]
   24cf8:	ldp	w8, w9, [sp, #56]
   24cfc:	cmp	w8, w9
   24d00:	b.cs	24ea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x27c>  // b.hs, b.nlast
   24d04:	ldr	x9, [sp, #32]
   24d08:	add	w8, w8, #0x1
   24d0c:	str	w8, [sp, #56]
   24d10:	cbz	x9, 24c9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x70>
   24d14:	ldr	x21, [sp, #24]
   24d18:	mov	w8, #0x18                  	// #24
   24d1c:	madd	x28, x9, x8, x21
   24d20:	b	24d30 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x104>
   24d24:	add	x21, x21, #0x18
   24d28:	cmp	x21, x28
   24d2c:	b.eq	24c9c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x70>  // b.none
   24d30:	ldr	x26, [x21]
   24d34:	mov	x0, x25
   24d38:	mov	x1, x26
   24d3c:	bl	0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
   24d40:	ldp	w8, w9, [sp, #56]
   24d44:	mov	w27, w0
   24d48:	sub	w22, w19, w0
   24d4c:	cmp	w8, w9
   24d50:	b.cs	24e20 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1f4>  // b.hs, b.nlast
   24d54:	ldr	x9, [sp, #48]
   24d58:	str	w22, [x9, w8, uxtw #2]
   24d5c:	ldp	w8, w9, [sp, #56]
   24d60:	cmp	w8, w9
   24d64:	b.cs	24ea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x27c>  // b.hs, b.nlast
   24d68:	add	w8, w8, #0x1
   24d6c:	cmp	w27, w19
   24d70:	str	w8, [sp, #56]
   24d74:	b.cc	24d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0xf8>  // b.lo, b.ul, b.last
   24d78:	ldr	w10, [x20, #72]
   24d7c:	ldr	x11, [x20, #56]
   24d80:	cbz	w10, 24de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1b4>
   24d84:	ldr	x12, [x26]
   24d88:	orr	x13, x12, #0x8
   24d8c:	cmn	x13, #0x8
   24d90:	b.eq	24ec8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x29c>  // b.none
   24d94:	ubfx	x13, x12, #4, #28
   24d98:	eor	w14, w13, w12, lsr #9
   24d9c:	sub	w13, w10, #0x1
   24da0:	and	w14, w14, w13
   24da4:	add	x15, x11, w14, uxtw #4
   24da8:	ldr	x16, [x15]
   24dac:	cmp	x16, x12
   24db0:	b.eq	24de4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1b8>  // b.none
   24db4:	mov	w17, #0x1                   	// #1
   24db8:	cmn	x16, #0x8
   24dbc:	b.eq	24de0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1b4>  // b.none
   24dc0:	add	w14, w14, w17
   24dc4:	and	w14, w14, w13
   24dc8:	add	x15, x11, w14, uxtw #4
   24dcc:	ldr	x16, [x15]
   24dd0:	add	w17, w17, #0x1
   24dd4:	cmp	x16, x12
   24dd8:	b.eq	24de4 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1b8>  // b.none
   24ddc:	b	24db8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x18c>
   24de0:	add	x15, x11, x10, lsl #4
   24de4:	add	x10, x11, x10, lsl #4
   24de8:	cmp	x15, x10
   24dec:	b.eq	24ee8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x2bc>  // b.none
   24df0:	ldr	w10, [x15, #8]
   24df4:	cmp	w8, w9
   24df8:	sub	w22, w10, #0x1
   24dfc:	b.cs	24e3c <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x210>  // b.hs, b.nlast
   24e00:	ldr	x9, [sp, #48]
   24e04:	str	w22, [x9, w8, uxtw #2]
   24e08:	ldp	w8, w9, [sp, #56]
   24e0c:	cmp	w8, w9
   24e10:	b.cs	24ea8 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x27c>  // b.hs, b.nlast
   24e14:	add	w8, w8, #0x1
   24e18:	str	w8, [sp, #56]
   24e1c:	b	24d24 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0xf8>
   24e20:	ldr	x1, [sp, #8]
   24e24:	add	x0, sp, #0x30
   24e28:	mov	w3, #0x4                   	// #4
   24e2c:	mov	x2, xzr
   24e30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24e34:	ldr	w8, [sp, #56]
   24e38:	b	24d54 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x128>
   24e3c:	ldr	x1, [sp, #8]
   24e40:	add	x0, sp, #0x30
   24e44:	mov	w3, #0x4                   	// #4
   24e48:	mov	x2, xzr
   24e4c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24e50:	ldr	w8, [sp, #56]
   24e54:	b	24e00 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x1d4>
   24e58:	ldr	x1, [sp, #8]
   24e5c:	add	x0, sp, #0x30
   24e60:	mov	w3, #0x4                   	// #4
   24e64:	mov	x2, xzr
   24e68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   24e6c:	ldr	w8, [sp, #56]
   24e70:	b	24cf0 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0xc4>
   24e74:	ldr	x0, [sp, #48]
   24e78:	ldr	x8, [sp, #8]
   24e7c:	cmp	x0, x8
   24e80:	b.eq	24e88 <_ZN12_GLOBAL__N_119ModuleBitcodeWriter19writeOperandBundlesEN4llvm17ImmutableCallSiteEj+0x25c>  // b.none
   24e84:	bl	0 <free>
   24e88:	ldp	x20, x19, [sp, #416]
   24e8c:	ldp	x22, x21, [sp, #400]
   24e90:	ldp	x24, x23, [sp, #384]
   24e94:	ldp	x26, x25, [sp, #368]
   24e98:	ldp	x28, x27, [sp, #352]
   24e9c:	ldp	x29, x30, [sp, #336]
   24ea0:	add	sp, sp, #0x1b0
   24ea4:	ret
   24ea8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24eac:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24eb0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24eb4:	add	x0, x0, #0x0
   24eb8:	add	x1, x1, #0x0
   24ebc:	add	x3, x3, #0x0
   24ec0:	mov	w2, #0x43                  	// #67
   24ec4:	bl	0 <__assert_fail>
   24ec8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ecc:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ed0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ed4:	add	x0, x0, #0x0
   24ed8:	add	x1, x1, #0x0
   24edc:	add	x3, x3, #0x0
   24ee0:	mov	w2, #0x252                 	// #594
   24ee4:	bl	0 <__assert_fail>
   24ee8:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24eec:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ef0:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24ef4:	add	x0, x0, #0x0
   24ef8:	add	x1, x1, #0x0
   24efc:	add	x3, x3, #0x0
   24f00:	mov	w2, #0xa9                  	// #169
   24f04:	bl	0 <__assert_fail>

0000000000024f08 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE>:
   24f08:	stp	x29, x30, [sp, #-64]!
   24f0c:	stp	x28, x23, [sp, #16]
   24f10:	stp	x22, x21, [sp, #32]
   24f14:	stp	x20, x19, [sp, #48]
   24f18:	mov	x29, sp
   24f1c:	sub	sp, sp, #0x210
   24f20:	ldr	x8, [x1, #104]
   24f24:	mov	x21, x1
   24f28:	mov	x19, x0
   24f2c:	cbz	x8, 24f5c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x54>
   24f30:	ldp	x9, x10, [x8]
   24f34:	subs	x10, x10, x9
   24f38:	b.eq	24f5c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x54>  // b.none
   24f3c:	asr	x8, x10, #3
   24f40:	mov	x2, sp
   24f44:	mov	w1, #0xb                   	// #11
   24f48:	mov	x0, x19
   24f4c:	mov	w3, wzr
   24f50:	stp	x9, x8, [sp]
   24f54:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24f58:	ldr	x8, [x21, #104]
   24f5c:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   24f60:	ldr	d0, [x9]
   24f64:	mov	x9, sp
   24f68:	add	x20, x9, #0x10
   24f6c:	str	x20, [sp]
   24f70:	str	d0, [sp, #8]
   24f74:	cbz	x8, 252c8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>
   24f78:	ldp	x22, x9, [x8, #24]
   24f7c:	subs	x9, x9, x22
   24f80:	b.eq	25048 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x140>  // b.none
   24f84:	mov	w8, wzr
   24f88:	add	x23, x22, x9
   24f8c:	mov	w9, #0x40                  	// #64
   24f90:	str	wzr, [sp, #8]
   24f94:	cmp	w8, w9
   24f98:	b.cs	24ff4 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0xec>  // b.hs, b.nlast
   24f9c:	ldr	x9, [sp]
   24fa0:	ldr	x10, [x22]
   24fa4:	str	x10, [x9, w8, uxtw #3]
   24fa8:	ldp	w8, w9, [sp, #8]
   24fac:	cmp	w8, w9
   24fb0:	b.cs	252f0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   24fb4:	add	w8, w8, #0x1
   24fb8:	cmp	w8, w9
   24fbc:	str	w8, [sp, #8]
   24fc0:	b.cs	25010 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x108>  // b.hs, b.nlast
   24fc4:	ldr	x9, [sp]
   24fc8:	ldr	x10, [x22, #8]
   24fcc:	str	x10, [x9, w8, uxtw #3]
   24fd0:	ldp	w8, w9, [sp, #8]
   24fd4:	cmp	w8, w9
   24fd8:	b.cs	252f0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   24fdc:	add	x22, x22, #0x10
   24fe0:	add	w8, w8, #0x1
   24fe4:	cmp	x22, x23
   24fe8:	str	w8, [sp, #8]
   24fec:	b.ne	24f94 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x8c>  // b.any
   24ff0:	b	2502c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x124>
   24ff4:	mov	x0, sp
   24ff8:	mov	w3, #0x8                   	// #8
   24ffc:	mov	x1, x20
   25000:	mov	x2, xzr
   25004:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25008:	ldr	w8, [sp, #8]
   2500c:	b	24f9c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x94>
   25010:	mov	x0, sp
   25014:	mov	w3, #0x8                   	// #8
   25018:	mov	x1, x20
   2501c:	mov	x2, xzr
   25020:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   25024:	ldr	w8, [sp, #8]
   25028:	b	24fc4 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0xbc>
   2502c:	mov	x2, sp
   25030:	mov	w1, #0xc                   	// #12
   25034:	mov	x0, x19
   25038:	mov	w3, wzr
   2503c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25040:	ldr	x8, [x21, #104]
   25044:	cbz	x8, 252c8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>
   25048:	ldp	x22, x9, [x8, #48]
   2504c:	subs	x10, x9, x22
   25050:	b.eq	25118 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x210>  // b.none
   25054:	ldr	w9, [sp, #12]
   25058:	mov	w8, wzr
   2505c:	add	x23, x22, x10
   25060:	str	wzr, [sp, #8]
   25064:	cmp	w8, w9
   25068:	b.cs	250c4 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1bc>  // b.hs, b.nlast
   2506c:	ldr	x9, [sp]
   25070:	ldr	x10, [x22]
   25074:	str	x10, [x9, w8, uxtw #3]
   25078:	ldp	w8, w9, [sp, #8]
   2507c:	cmp	w8, w9
   25080:	b.cs	252f0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   25084:	add	w8, w8, #0x1
   25088:	cmp	w8, w9
   2508c:	str	w8, [sp, #8]
   25090:	b.cs	250e0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1d8>  // b.hs, b.nlast
   25094:	ldr	x9, [sp]
   25098:	ldr	x10, [x22, #8]
   2509c:	str	x10, [x9, w8, uxtw #3]
   250a0:	ldp	w8, w9, [sp, #8]
   250a4:	cmp	w8, w9
   250a8:	b.cs	252f0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   250ac:	add	x22, x22, #0x10
   250b0:	add	w8, w8, #0x1
   250b4:	cmp	x22, x23
   250b8:	str	w8, [sp, #8]
   250bc:	b.ne	25064 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x15c>  // b.any
   250c0:	b	250fc <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x1f4>
   250c4:	mov	x0, sp
   250c8:	mov	w3, #0x8                   	// #8
   250cc:	mov	x1, x20
   250d0:	mov	x2, xzr
   250d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   250d8:	ldr	w8, [sp, #8]
   250dc:	b	2506c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x164>
   250e0:	mov	x0, sp
   250e4:	mov	w3, #0x8                   	// #8
   250e8:	mov	x1, x20
   250ec:	mov	x2, xzr
   250f0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   250f4:	ldr	w8, [sp, #8]
   250f8:	b	25094 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x18c>
   250fc:	mov	x2, sp
   25100:	mov	w1, #0xd                   	// #13
   25104:	mov	x0, x19
   25108:	mov	w3, wzr
   2510c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25110:	ldr	x8, [x21, #104]
   25114:	cbz	x8, 252c8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>
   25118:	ldp	x22, x23, [x8, #72]
   2511c:	cmp	x23, x22
   25120:	b.eq	251f4 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x2ec>  // b.none
   25124:	ldr	w9, [sp, #12]
   25128:	mov	w8, wzr
   2512c:	str	wzr, [sp, #8]
   25130:	cbz	w9, 251b4 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x2ac>
   25134:	ldr	x9, [sp]
   25138:	ldr	x10, [x22]
   2513c:	str	x10, [x9, w8, uxtw #3]
   25140:	ldp	w8, w9, [sp, #8]
   25144:	cmp	w8, w9
   25148:	b.cs	252f0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   2514c:	add	w8, w8, #0x1
   25150:	cmp	w8, w9
   25154:	str	w8, [sp, #8]
   25158:	b.cs	251d0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x2c8>  // b.hs, b.nlast
   2515c:	ldr	x9, [sp]
   25160:	ldr	x10, [x22, #8]
   25164:	str	x10, [x9, w8, uxtw #3]
   25168:	ldp	w8, w9, [sp, #8]
   2516c:	cmp	w8, w9
   25170:	b.cs	252f0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   25174:	add	x8, x8, #0x1
   25178:	ldr	x9, [sp]
   2517c:	str	w8, [sp, #8]
   25180:	ldp	x2, x3, [x22, #16]
   25184:	mov	x0, sp
   25188:	add	x1, x9, x8, lsl #3
   2518c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25190:	mov	x2, sp
   25194:	mov	w1, #0xe                   	// #14
   25198:	mov	x0, x19
   2519c:	mov	w3, wzr
   251a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   251a4:	add	x22, x22, #0x28
   251a8:	cmp	x22, x23
   251ac:	b.ne	25124 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x21c>  // b.any
   251b0:	b	251ec <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x2e4>
   251b4:	mov	x0, sp
   251b8:	mov	w3, #0x8                   	// #8
   251bc:	mov	x1, x20
   251c0:	mov	x2, xzr
   251c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   251c8:	ldr	w8, [sp, #8]
   251cc:	b	25134 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x22c>
   251d0:	mov	x0, sp
   251d4:	mov	w3, #0x8                   	// #8
   251d8:	mov	x1, x20
   251dc:	mov	x2, xzr
   251e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   251e4:	ldr	w8, [sp, #8]
   251e8:	b	2515c <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x254>
   251ec:	ldr	x8, [x21, #104]
   251f0:	cbz	x8, 252c8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>
   251f4:	ldp	x21, x22, [x8, #96]
   251f8:	cmp	x22, x21
   251fc:	b.eq	252c8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>  // b.none
   25200:	ldr	w9, [sp, #12]
   25204:	mov	w8, wzr
   25208:	str	wzr, [sp, #8]
   2520c:	cbz	w9, 25290 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x388>
   25210:	ldr	x9, [sp]
   25214:	ldr	x10, [x21]
   25218:	str	x10, [x9, w8, uxtw #3]
   2521c:	ldp	w8, w9, [sp, #8]
   25220:	cmp	w8, w9
   25224:	b.cs	252f0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   25228:	add	w8, w8, #0x1
   2522c:	cmp	w8, w9
   25230:	str	w8, [sp, #8]
   25234:	b.cs	252ac <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3a4>  // b.hs, b.nlast
   25238:	ldr	x9, [sp]
   2523c:	ldr	x10, [x21, #8]
   25240:	str	x10, [x9, w8, uxtw #3]
   25244:	ldp	w8, w9, [sp, #8]
   25248:	cmp	w8, w9
   2524c:	b.cs	252f0 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3e8>  // b.hs, b.nlast
   25250:	add	x8, x8, #0x1
   25254:	ldr	x9, [sp]
   25258:	str	w8, [sp, #8]
   2525c:	ldp	x2, x3, [x21, #16]
   25260:	mov	x0, sp
   25264:	add	x1, x9, x8, lsl #3
   25268:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2526c:	mov	x2, sp
   25270:	mov	w1, #0xf                   	// #15
   25274:	mov	x0, x19
   25278:	mov	w3, wzr
   2527c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25280:	add	x21, x21, #0x28
   25284:	cmp	x21, x22
   25288:	b.ne	25200 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x2f8>  // b.any
   2528c:	b	252c8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3c0>
   25290:	mov	x0, sp
   25294:	mov	w3, #0x8                   	// #8
   25298:	mov	x1, x20
   2529c:	mov	x2, xzr
   252a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   252a4:	ldr	w8, [sp, #8]
   252a8:	b	25210 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x308>
   252ac:	mov	x0, sp
   252b0:	mov	w3, #0x8                   	// #8
   252b4:	mov	x1, x20
   252b8:	mov	x2, xzr
   252bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   252c0:	ldr	w8, [sp, #8]
   252c4:	b	25238 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x330>
   252c8:	ldr	x0, [sp]
   252cc:	cmp	x0, x20
   252d0:	b.eq	252d8 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE+0x3d0>  // b.none
   252d4:	bl	0 <free>
   252d8:	add	sp, sp, #0x210
   252dc:	ldp	x20, x19, [sp, #48]
   252e0:	ldp	x22, x21, [sp, #32]
   252e4:	ldp	x28, x23, [sp, #16]
   252e8:	ldp	x29, x30, [sp], #64
   252ec:	ret
   252f0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   252f4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   252f8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   252fc:	add	x0, x0, #0x0
   25300:	add	x1, x1, #0x0
   25304:	add	x3, x3, #0x0
   25308:	mov	w2, #0x43                  	// #67
   2530c:	bl	0 <__assert_fail>

0000000000025310 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv>:
   25310:	str	d8, [sp, #-112]!
   25314:	stp	x29, x30, [sp, #16]
   25318:	stp	x28, x27, [sp, #32]
   2531c:	stp	x26, x25, [sp, #48]
   25320:	stp	x24, x23, [sp, #64]
   25324:	stp	x22, x21, [sp, #80]
   25328:	stp	x20, x19, [sp, #96]
   2532c:	mov	x29, sp
   25330:	sub	sp, sp, #0x630
   25334:	mov	x27, x0
   25338:	ldr	x0, [x0]
   2533c:	mov	w1, #0x14                  	// #20
   25340:	mov	w2, #0x3                   	// #3
   25344:	add	x23, sp, #0x300
   25348:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2534c:	ldr	x0, [x27]
   25350:	mov	w8, #0x8                   	// #8
   25354:	add	x19, sp, #0xd0
   25358:	mov	w20, #0x1                   	// #1
   2535c:	add	x2, sp, #0x300
   25360:	mov	w1, #0xa                   	// #10
   25364:	mov	w3, wzr
   25368:	str	x8, [sp, #208]
   2536c:	str	x19, [sp, #768]
   25370:	str	x20, [sp, #776]
   25374:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25378:	ldr	x8, [x27, #16]
   2537c:	ldr	x0, [x27]
   25380:	add	x2, sp, #0x300
   25384:	mov	w1, #0x14                  	// #20
   25388:	ldrb	w9, [x8, #227]
   2538c:	ldrb	w10, [x8, #224]
   25390:	ldrb	w11, [x8, #226]
   25394:	mov	w3, wzr
   25398:	cmp	w9, #0x0
   2539c:	orr	x9, x10, #0x2
   253a0:	csel	x9, x10, x9, eq  // eq = none
   253a4:	ldrb	w10, [x8, #229]
   253a8:	cmp	w11, #0x0
   253ac:	orr	x11, x9, #0x4
   253b0:	csel	x9, x9, x11, eq  // eq = none
   253b4:	ldrb	w11, [x8, #230]
   253b8:	cmp	w10, #0x0
   253bc:	orr	x10, x9, #0x8
   253c0:	ldrb	w8, [x8, #225]
   253c4:	csel	x9, x9, x10, eq  // eq = none
   253c8:	cmp	w11, #0x0
   253cc:	orr	x10, x9, #0x10
   253d0:	csel	x9, x9, x10, eq  // eq = none
   253d4:	cmp	w8, #0x0
   253d8:	orr	x8, x9, #0x20
   253dc:	csel	x8, x9, x8, eq  // eq = none
   253e0:	str	x8, [sp, #208]
   253e4:	str	x19, [sp, #768]
   253e8:	str	x20, [sp, #776]
   253ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   253f0:	ldr	x20, [x27, #56]
   253f4:	add	x21, x27, #0x28
   253f8:	cmp	x20, x21
   253fc:	b.eq	25444 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x134>  // b.none
   25400:	mov	w22, #0x2                   	// #2
   25404:	ldr	w8, [x20, #40]
   25408:	ldr	x0, [x27]
   2540c:	add	x2, sp, #0x300
   25410:	mov	w1, #0x10                  	// #16
   25414:	str	x8, [sp, #208]
   25418:	ldr	x8, [x20, #32]
   2541c:	mov	w3, wzr
   25420:	str	x19, [sp, #768]
   25424:	str	x22, [sp, #776]
   25428:	str	x8, [sp, #216]
   2542c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25430:	mov	x0, x20
   25434:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
   25438:	mov	x20, x0
   2543c:	cmp	x0, x21
   25440:	b.ne	25404 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf4>  // b.any
   25444:	mov	w0, #0x220                 	// #544
   25448:	bl	0 <_Znwm>
   2544c:	adrp	x24, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25450:	ldr	x24, [x24]
   25454:	adrp	x8, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25458:	ldr	d8, [x8]
   2545c:	movi	v0.2s, #0x1
   25460:	add	x10, x24, #0x10
   25464:	str	x10, [x0]
   25468:	ldr	w8, [sp, #768]
   2546c:	ldur	w10, [x23, #3]
   25470:	str	d0, [x0, #8]
   25474:	movi	v0.2d, #0x0
   25478:	mov	x22, x0
   2547c:	mov	x21, x0
   25480:	mov	x25, x0
   25484:	mov	w9, #0x4                   	// #4
   25488:	stp	q0, q0, [x0, #48]
   2548c:	stp	q0, q0, [x0, #80]
   25490:	stp	q0, q0, [x0, #112]
   25494:	stp	q0, q0, [x0, #144]
   25498:	stp	q0, q0, [x0, #176]
   2549c:	stp	q0, q0, [x0, #208]
   254a0:	stp	q0, q0, [x0, #240]
   254a4:	stp	q0, q0, [x0, #272]
   254a8:	stp	q0, q0, [x0, #304]
   254ac:	stp	q0, q0, [x0, #336]
   254b0:	stp	q0, q0, [x0, #368]
   254b4:	stp	q0, q0, [x0, #400]
   254b8:	stp	q0, q0, [x0, #432]
   254bc:	stp	q0, q0, [x0, #464]
   254c0:	stp	q0, q0, [x0, #496]
   254c4:	str	q0, [x22, #32]!
   254c8:	str	q0, [x0, #528]
   254cc:	str	x22, [x21, #16]!
   254d0:	str	d8, [x25, #24]!
   254d4:	str	x9, [x22]
   254d8:	mov	w9, #0xff                  	// #255
   254dc:	strb	w9, [x0, #40]
   254e0:	str	w10, [x0, #44]
   254e4:	stur	w8, [x0, #41]
   254e8:	ldr	w8, [x25]
   254ec:	ldr	w9, [x0, #28]
   254f0:	cmp	w8, w9
   254f4:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   254f8:	add	w8, w8, #0x1
   254fc:	mov	x20, x0
   25500:	cmp	w8, w9
   25504:	str	w8, [x25]
   25508:	b.cs	2712c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e1c>  // b.hs, b.nlast
   2550c:	ldr	x9, [x20, #16]
   25510:	mov	w10, #0x8                   	// #8
   25514:	mov	w11, #0x4                   	// #4
   25518:	add	x8, x9, w8, uxtw #4
   2551c:	str	x10, [x8]
   25520:	strb	w11, [x8, #8]
   25524:	ldur	w9, [x23, #3]
   25528:	ldr	w10, [sp, #768]
   2552c:	str	w9, [x8, #12]
   25530:	stur	w10, [x8, #9]
   25534:	ldp	w8, w9, [x20, #24]
   25538:	cmp	w8, w9
   2553c:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25540:	add	w8, w8, #0x1
   25544:	cmp	w8, w9
   25548:	str	w8, [x25]
   2554c:	b.cs	27148 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e38>  // b.hs, b.nlast
   25550:	ldr	x9, [x20, #16]
   25554:	mov	w10, #0x8                   	// #8
   25558:	mov	w11, #0x4                   	// #4
   2555c:	add	x8, x9, w8, uxtw #4
   25560:	str	x10, [x8]
   25564:	strb	w11, [x8, #8]
   25568:	ldur	w9, [x23, #3]
   2556c:	ldr	w10, [sp, #768]
   25570:	str	w9, [x8, #12]
   25574:	stur	w10, [x8, #9]
   25578:	ldp	w8, w9, [x20, #24]
   2557c:	cmp	w8, w9
   25580:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25584:	add	w8, w8, #0x1
   25588:	cmp	w8, w9
   2558c:	str	w8, [x25]
   25590:	b.cs	27164 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e54>  // b.hs, b.nlast
   25594:	ldr	x9, [x20, #16]
   25598:	mov	w10, #0x6                   	// #6
   2559c:	mov	w11, #0x4                   	// #4
   255a0:	add	x8, x9, w8, uxtw #4
   255a4:	str	x10, [x8]
   255a8:	strb	w11, [x8, #8]
   255ac:	ldur	w9, [x23, #3]
   255b0:	ldr	w10, [sp, #768]
   255b4:	str	w9, [x8, #12]
   255b8:	stur	w10, [x8, #9]
   255bc:	ldp	w8, w9, [x20, #24]
   255c0:	cmp	w8, w9
   255c4:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   255c8:	add	w8, w8, #0x1
   255cc:	cmp	w8, w9
   255d0:	str	w8, [x25]
   255d4:	b.cs	27180 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e70>  // b.hs, b.nlast
   255d8:	ldr	x9, [x20, #16]
   255dc:	mov	w10, #0x8                   	// #8
   255e0:	mov	w11, #0x4                   	// #4
   255e4:	add	x8, x9, w8, uxtw #4
   255e8:	str	x10, [x8]
   255ec:	strb	w11, [x8, #8]
   255f0:	ldur	w9, [x23, #3]
   255f4:	ldr	w10, [sp, #768]
   255f8:	str	w9, [x8, #12]
   255fc:	stur	w10, [x8, #9]
   25600:	ldp	w8, w9, [x20, #24]
   25604:	cmp	w8, w9
   25608:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   2560c:	add	w8, w8, #0x1
   25610:	cmp	w8, w9
   25614:	str	w8, [x25]
   25618:	b.cs	2719c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e8c>  // b.hs, b.nlast
   2561c:	ldr	x9, [x20, #16]
   25620:	mov	w10, #0x4                   	// #4
   25624:	add	x8, x9, w8, uxtw #4
   25628:	str	x10, [x8]
   2562c:	strb	w10, [x8, #8]
   25630:	ldur	w9, [x23, #3]
   25634:	ldr	w10, [sp, #768]
   25638:	str	w9, [x8, #12]
   2563c:	stur	w10, [x8, #9]
   25640:	ldp	w8, w9, [x20, #24]
   25644:	cmp	w8, w9
   25648:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   2564c:	add	w8, w8, #0x1
   25650:	cmp	w8, w9
   25654:	str	w8, [x25]
   25658:	b.cs	271b8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ea8>  // b.hs, b.nlast
   2565c:	ldr	x9, [x20, #16]
   25660:	mov	w10, #0x8                   	// #8
   25664:	mov	w11, #0x4                   	// #4
   25668:	add	x8, x9, w8, uxtw #4
   2566c:	str	x10, [x8]
   25670:	strb	w11, [x8, #8]
   25674:	ldur	w9, [x23, #3]
   25678:	ldr	w10, [sp, #768]
   2567c:	str	w9, [x8, #12]
   25680:	stur	w10, [x8, #9]
   25684:	ldp	w8, w9, [x20, #24]
   25688:	cmp	w8, w9
   2568c:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25690:	add	w8, w8, #0x1
   25694:	cmp	w8, w9
   25698:	str	w8, [x25]
   2569c:	b.cs	271d4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ec4>  // b.hs, b.nlast
   256a0:	ldr	x9, [x20, #16]
   256a4:	mov	w10, #0x4                   	// #4
   256a8:	add	x8, x9, w8, uxtw #4
   256ac:	str	x10, [x8]
   256b0:	strb	w10, [x8, #8]
   256b4:	ldur	w9, [x23, #3]
   256b8:	ldr	w10, [sp, #768]
   256bc:	str	w9, [x8, #12]
   256c0:	stur	w10, [x8, #9]
   256c4:	ldp	w8, w9, [x20, #24]
   256c8:	cmp	w8, w9
   256cc:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   256d0:	add	w8, w8, #0x1
   256d4:	cmp	w8, w9
   256d8:	str	w8, [x25]
   256dc:	b.cs	271f0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ee0>  // b.hs, b.nlast
   256e0:	ldr	x9, [x20, #16]
   256e4:	mov	w10, #0x4                   	// #4
   256e8:	add	x8, x9, w8, uxtw #4
   256ec:	str	x10, [x8]
   256f0:	strb	w10, [x8, #8]
   256f4:	ldur	w9, [x23, #3]
   256f8:	ldr	w10, [sp, #768]
   256fc:	str	w9, [x8, #12]
   25700:	stur	w10, [x8, #9]
   25704:	ldp	w8, w9, [x20, #24]
   25708:	cmp	w8, w9
   2570c:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25710:	add	w8, w8, #0x1
   25714:	cmp	w8, w9
   25718:	str	w8, [x25]
   2571c:	b.cs	2720c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1efc>  // b.hs, b.nlast
   25720:	ldr	x9, [x20, #16]
   25724:	mov	w10, #0x4                   	// #4
   25728:	add	x8, x9, w8, uxtw #4
   2572c:	str	x10, [x8]
   25730:	strb	w10, [x8, #8]
   25734:	ldur	w9, [x23, #3]
   25738:	ldr	w10, [sp, #768]
   2573c:	str	w9, [x8, #12]
   25740:	stur	w10, [x8, #9]
   25744:	ldp	w8, w9, [x20, #24]
   25748:	cmp	w8, w9
   2574c:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25750:	add	w8, w8, #0x1
   25754:	cmp	w8, w9
   25758:	str	w8, [x25]
   2575c:	b.cs	27228 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1f18>  // b.hs, b.nlast
   25760:	ldr	x9, [x20, #16]
   25764:	mov	w10, #0x6                   	// #6
   25768:	add	x8, x9, w8, uxtw #4
   2576c:	str	xzr, [x8]
   25770:	strb	w10, [x8, #8]
   25774:	ldur	w9, [x23, #3]
   25778:	ldr	w10, [sp, #768]
   2577c:	str	w9, [x8, #12]
   25780:	stur	w10, [x8, #9]
   25784:	ldp	w8, w9, [x20, #24]
   25788:	cmp	w8, w9
   2578c:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25790:	add	w8, w8, #0x1
   25794:	cmp	w8, w9
   25798:	str	w8, [x25]
   2579c:	b.cs	27244 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1f34>  // b.hs, b.nlast
   257a0:	ldr	x9, [x20, #16]
   257a4:	mov	w10, #0x8                   	// #8
   257a8:	mov	w11, #0x4                   	// #4
   257ac:	add	x8, x9, w8, uxtw #4
   257b0:	str	x10, [x8]
   257b4:	strb	w11, [x8, #8]
   257b8:	ldur	w9, [x23, #3]
   257bc:	ldr	w10, [sp, #768]
   257c0:	str	w9, [x8, #12]
   257c4:	stur	w10, [x8, #9]
   257c8:	ldp	w8, w9, [x20, #24]
   257cc:	cmp	w8, w9
   257d0:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   257d4:	add	w8, w8, #0x1
   257d8:	str	w8, [x20, #24]
   257dc:	ldr	x22, [x27]
   257e0:	mov	x1, x21
   257e4:	stp	x21, x20, [x29, #-208]
   257e8:	mov	x0, x22
   257ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   257f0:	ldp	x1, x8, [x22, #32]
   257f4:	add	x20, x22, #0x18
   257f8:	cmp	x1, x8
   257fc:	b.eq	25820 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x510>  // b.none
   25800:	str	xzr, [x1, #8]
   25804:	ldur	q0, [x29, #-208]
   25808:	add	x8, x1, #0x10
   2580c:	stur	xzr, [x29, #-200]
   25810:	str	q0, [x1]
   25814:	stur	xzr, [x29, #-208]
   25818:	str	x8, [x22, #32]
   2581c:	b	25830 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x520>
   25820:	sub	x2, x29, #0xd0
   25824:	mov	x0, x20
   25828:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2582c:	ldr	x8, [x22, #32]
   25830:	ldr	x9, [x20]
   25834:	adrp	x25, 0 <__pthread_key_create>
   25838:	ldur	x20, [x29, #-200]
   2583c:	ldr	x25, [x25]
   25840:	sub	x8, x8, x9
   25844:	lsr	x8, x8, #4
   25848:	add	w19, w8, #0x3
   2584c:	cbz	x20, 258c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5b8>
   25850:	add	x8, x20, #0x8
   25854:	cbz	x25, 25874 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x564>
   25858:	ldaxr	w9, [x8]
   2585c:	sub	w10, w9, #0x1
   25860:	stlxr	w11, w10, [x8]
   25864:	cbnz	w11, 25858 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x548>
   25868:	cmp	w9, #0x1
   2586c:	b.eq	25888 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x578>  // b.none
   25870:	b	258c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5b8>
   25874:	ldr	w9, [x8]
   25878:	sub	w10, w9, #0x1
   2587c:	str	w10, [x8]
   25880:	cmp	w9, #0x1
   25884:	b.ne	258c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5b8>  // b.any
   25888:	mov	x21, x20
   2588c:	ldr	x8, [x21], #12
   25890:	mov	x0, x20
   25894:	ldr	x8, [x8, #16]
   25898:	blr	x8
   2589c:	cbz	x25, 270cc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1dbc>
   258a0:	ldaxr	w8, [x21]
   258a4:	sub	w9, w8, #0x1
   258a8:	stlxr	w10, w9, [x21]
   258ac:	cbnz	w10, 258a0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x590>
   258b0:	cmp	w8, #0x1
   258b4:	b.ne	258c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5b8>  // b.any
   258b8:	ldr	x8, [x20]
   258bc:	mov	x0, x20
   258c0:	ldr	x8, [x8, #24]
   258c4:	blr	x8
   258c8:	mov	w0, #0x220                 	// #544
   258cc:	stur	w19, [x29, #-188]
   258d0:	bl	0 <_Znwm>
   258d4:	add	x8, x24, #0x10
   258d8:	movi	v0.2s, #0x1
   258dc:	ldr	w10, [sp, #768]
   258e0:	str	x8, [x0]
   258e4:	ldur	w8, [x23, #3]
   258e8:	str	d0, [x0, #8]
   258ec:	movi	v0.2d, #0x0
   258f0:	mov	x22, x0
   258f4:	mov	x21, x0
   258f8:	mov	x26, x0
   258fc:	mov	w9, #0x5                   	// #5
   25900:	stp	q0, q0, [x0, #48]
   25904:	stp	q0, q0, [x0, #80]
   25908:	stp	q0, q0, [x0, #112]
   2590c:	stp	q0, q0, [x0, #144]
   25910:	stp	q0, q0, [x0, #176]
   25914:	stp	q0, q0, [x0, #208]
   25918:	stp	q0, q0, [x0, #240]
   2591c:	stp	q0, q0, [x0, #272]
   25920:	stp	q0, q0, [x0, #304]
   25924:	stp	q0, q0, [x0, #336]
   25928:	stp	q0, q0, [x0, #368]
   2592c:	stp	q0, q0, [x0, #400]
   25930:	stp	q0, q0, [x0, #432]
   25934:	stp	q0, q0, [x0, #464]
   25938:	stp	q0, q0, [x0, #496]
   2593c:	str	q0, [x22, #32]!
   25940:	str	q0, [x0, #528]
   25944:	str	x22, [x21, #16]!
   25948:	str	d8, [x26, #24]!
   2594c:	str	x9, [x22]
   25950:	mov	w9, #0xff                  	// #255
   25954:	strb	w9, [x0, #40]
   25958:	str	w8, [x0, #44]
   2595c:	stur	w10, [x0, #41]
   25960:	ldr	w8, [x26]
   25964:	ldr	w9, [x0, #28]
   25968:	cmp	w8, w9
   2596c:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25970:	add	w8, w8, #0x1
   25974:	mov	x20, x0
   25978:	cmp	w8, w9
   2597c:	str	w8, [x26]
   25980:	b.cs	27260 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1f50>  // b.hs, b.nlast
   25984:	ldr	x9, [x20, #16]
   25988:	mov	w10, #0x8                   	// #8
   2598c:	mov	w11, #0x4                   	// #4
   25990:	add	x8, x9, w8, uxtw #4
   25994:	str	x10, [x8]
   25998:	strb	w11, [x8, #8]
   2599c:	ldur	w9, [x23, #3]
   259a0:	ldr	w10, [sp, #768]
   259a4:	str	w9, [x8, #12]
   259a8:	stur	w10, [x8, #9]
   259ac:	ldp	w8, w9, [x20, #24]
   259b0:	cmp	w8, w9
   259b4:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   259b8:	add	w8, w8, #0x1
   259bc:	cmp	w8, w9
   259c0:	str	w8, [x26]
   259c4:	b.cs	2727c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1f6c>  // b.hs, b.nlast
   259c8:	ldr	x9, [x20, #16]
   259cc:	mov	w10, #0x8                   	// #8
   259d0:	mov	w11, #0x4                   	// #4
   259d4:	add	x8, x9, w8, uxtw #4
   259d8:	str	x10, [x8]
   259dc:	strb	w11, [x8, #8]
   259e0:	ldur	w9, [x23, #3]
   259e4:	ldr	w10, [sp, #768]
   259e8:	str	w9, [x8, #12]
   259ec:	stur	w10, [x8, #9]
   259f0:	ldp	w8, w9, [x20, #24]
   259f4:	cmp	w8, w9
   259f8:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   259fc:	add	w8, w8, #0x1
   25a00:	cmp	w8, w9
   25a04:	str	w8, [x26]
   25a08:	b.cs	27298 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1f88>  // b.hs, b.nlast
   25a0c:	ldr	x9, [x20, #16]
   25a10:	mov	w10, #0x6                   	// #6
   25a14:	mov	w11, #0x4                   	// #4
   25a18:	add	x8, x9, w8, uxtw #4
   25a1c:	str	x10, [x8]
   25a20:	strb	w11, [x8, #8]
   25a24:	ldur	w9, [x23, #3]
   25a28:	ldr	w10, [sp, #768]
   25a2c:	str	w9, [x8, #12]
   25a30:	stur	w10, [x8, #9]
   25a34:	ldp	w8, w9, [x20, #24]
   25a38:	cmp	w8, w9
   25a3c:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25a40:	add	w8, w8, #0x1
   25a44:	cmp	w8, w9
   25a48:	str	w8, [x26]
   25a4c:	b.cs	272b4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1fa4>  // b.hs, b.nlast
   25a50:	ldr	x9, [x20, #16]
   25a54:	mov	w10, #0x8                   	// #8
   25a58:	mov	w11, #0x4                   	// #4
   25a5c:	add	x8, x9, w8, uxtw #4
   25a60:	str	x10, [x8]
   25a64:	strb	w11, [x8, #8]
   25a68:	ldur	w9, [x23, #3]
   25a6c:	ldr	w10, [sp, #768]
   25a70:	str	w9, [x8, #12]
   25a74:	stur	w10, [x8, #9]
   25a78:	ldp	w8, w9, [x20, #24]
   25a7c:	cmp	w8, w9
   25a80:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25a84:	add	w8, w8, #0x1
   25a88:	cmp	w8, w9
   25a8c:	str	w8, [x26]
   25a90:	b.cs	272d0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1fc0>  // b.hs, b.nlast
   25a94:	ldr	x9, [x20, #16]
   25a98:	mov	w10, #0x4                   	// #4
   25a9c:	add	x8, x9, w8, uxtw #4
   25aa0:	str	x10, [x8]
   25aa4:	strb	w10, [x8, #8]
   25aa8:	ldur	w9, [x23, #3]
   25aac:	ldr	w10, [sp, #768]
   25ab0:	str	w9, [x8, #12]
   25ab4:	stur	w10, [x8, #9]
   25ab8:	ldp	w8, w9, [x20, #24]
   25abc:	cmp	w8, w9
   25ac0:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25ac4:	add	w8, w8, #0x1
   25ac8:	cmp	w8, w9
   25acc:	str	w8, [x26]
   25ad0:	b.cs	272ec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1fdc>  // b.hs, b.nlast
   25ad4:	ldr	x9, [x20, #16]
   25ad8:	mov	w10, #0x8                   	// #8
   25adc:	mov	w11, #0x4                   	// #4
   25ae0:	add	x8, x9, w8, uxtw #4
   25ae4:	str	x10, [x8]
   25ae8:	strb	w11, [x8, #8]
   25aec:	ldur	w9, [x23, #3]
   25af0:	ldr	w10, [sp, #768]
   25af4:	str	w9, [x8, #12]
   25af8:	stur	w10, [x8, #9]
   25afc:	ldp	w8, w9, [x20, #24]
   25b00:	cmp	w8, w9
   25b04:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25b08:	add	w8, w8, #0x1
   25b0c:	cmp	w8, w9
   25b10:	str	w8, [x26]
   25b14:	b.cs	27308 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ff8>  // b.hs, b.nlast
   25b18:	ldr	x9, [x20, #16]
   25b1c:	mov	w10, #0x4                   	// #4
   25b20:	add	x8, x9, w8, uxtw #4
   25b24:	str	x10, [x8]
   25b28:	strb	w10, [x8, #8]
   25b2c:	ldur	w9, [x23, #3]
   25b30:	ldr	w10, [sp, #768]
   25b34:	str	w9, [x8, #12]
   25b38:	stur	w10, [x8, #9]
   25b3c:	ldp	w8, w9, [x20, #24]
   25b40:	cmp	w8, w9
   25b44:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25b48:	add	w8, w8, #0x1
   25b4c:	cmp	w8, w9
   25b50:	str	w8, [x26]
   25b54:	b.cs	27324 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2014>  // b.hs, b.nlast
   25b58:	ldr	x9, [x20, #16]
   25b5c:	mov	w10, #0x4                   	// #4
   25b60:	add	x8, x9, w8, uxtw #4
   25b64:	str	x10, [x8]
   25b68:	strb	w10, [x8, #8]
   25b6c:	ldur	w9, [x23, #3]
   25b70:	ldr	w10, [sp, #768]
   25b74:	str	w9, [x8, #12]
   25b78:	stur	w10, [x8, #9]
   25b7c:	ldp	w8, w9, [x20, #24]
   25b80:	cmp	w8, w9
   25b84:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25b88:	add	w8, w8, #0x1
   25b8c:	cmp	w8, w9
   25b90:	str	w8, [x26]
   25b94:	b.cs	27340 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2030>  // b.hs, b.nlast
   25b98:	ldr	x9, [x20, #16]
   25b9c:	mov	w10, #0x4                   	// #4
   25ba0:	add	x8, x9, w8, uxtw #4
   25ba4:	str	x10, [x8]
   25ba8:	strb	w10, [x8, #8]
   25bac:	ldur	w9, [x23, #3]
   25bb0:	ldr	w10, [sp, #768]
   25bb4:	str	w9, [x8, #12]
   25bb8:	stur	w10, [x8, #9]
   25bbc:	ldp	w8, w9, [x20, #24]
   25bc0:	cmp	w8, w9
   25bc4:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25bc8:	add	w8, w8, #0x1
   25bcc:	cmp	w8, w9
   25bd0:	str	w8, [x26]
   25bd4:	b.cs	2735c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x204c>  // b.hs, b.nlast
   25bd8:	ldr	x9, [x20, #16]
   25bdc:	mov	w10, #0x6                   	// #6
   25be0:	add	x8, x9, w8, uxtw #4
   25be4:	str	xzr, [x8]
   25be8:	strb	w10, [x8, #8]
   25bec:	ldur	w9, [x23, #3]
   25bf0:	ldr	w10, [sp, #768]
   25bf4:	str	w9, [x8, #12]
   25bf8:	stur	w10, [x8, #9]
   25bfc:	ldp	w8, w9, [x20, #24]
   25c00:	cmp	w8, w9
   25c04:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25c08:	add	w8, w8, #0x1
   25c0c:	cmp	w8, w9
   25c10:	str	w8, [x26]
   25c14:	b.cs	27378 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2068>  // b.hs, b.nlast
   25c18:	ldr	x9, [x20, #16]
   25c1c:	mov	w10, #0x8                   	// #8
   25c20:	mov	w11, #0x4                   	// #4
   25c24:	add	x8, x9, w8, uxtw #4
   25c28:	str	x10, [x8]
   25c2c:	strb	w11, [x8, #8]
   25c30:	ldur	w9, [x23, #3]
   25c34:	ldr	w10, [sp, #768]
   25c38:	str	w9, [x8, #12]
   25c3c:	stur	w10, [x8, #9]
   25c40:	ldp	w8, w9, [x20, #24]
   25c44:	cmp	w8, w9
   25c48:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25c4c:	add	w8, w8, #0x1
   25c50:	str	w8, [x20, #24]
   25c54:	ldr	x22, [x27]
   25c58:	mov	x1, x21
   25c5c:	stp	x21, x20, [x29, #-240]
   25c60:	mov	x0, x22
   25c64:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25c68:	ldp	x1, x8, [x22, #32]
   25c6c:	add	x20, x22, #0x18
   25c70:	cmp	x1, x8
   25c74:	b.eq	25c98 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x988>  // b.none
   25c78:	str	xzr, [x1, #8]
   25c7c:	ldur	q0, [x29, #-240]
   25c80:	add	x8, x1, #0x10
   25c84:	stur	xzr, [x29, #-232]
   25c88:	str	q0, [x1]
   25c8c:	stur	xzr, [x29, #-240]
   25c90:	str	x8, [x22, #32]
   25c94:	b	25ca8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x998>
   25c98:	sub	x2, x29, #0xf0
   25c9c:	mov	x0, x20
   25ca0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25ca4:	ldr	x8, [x22, #32]
   25ca8:	ldr	x9, [x20]
   25cac:	ldur	x20, [x29, #-232]
   25cb0:	sub	x8, x8, x9
   25cb4:	lsr	x8, x8, #4
   25cb8:	add	w19, w8, #0x3
   25cbc:	cbz	x20, 25d38 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa28>
   25cc0:	add	x8, x20, #0x8
   25cc4:	cbz	x25, 25ce4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x9d4>
   25cc8:	ldaxr	w9, [x8]
   25ccc:	sub	w10, w9, #0x1
   25cd0:	stlxr	w11, w10, [x8]
   25cd4:	cbnz	w11, 25cc8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x9b8>
   25cd8:	cmp	w9, #0x1
   25cdc:	b.eq	25cf8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x9e8>  // b.none
   25ce0:	b	25d38 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa28>
   25ce4:	ldr	w9, [x8]
   25ce8:	sub	w10, w9, #0x1
   25cec:	str	w10, [x8]
   25cf0:	cmp	w9, #0x1
   25cf4:	b.ne	25d38 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa28>  // b.any
   25cf8:	mov	x21, x20
   25cfc:	ldr	x8, [x21], #12
   25d00:	mov	x0, x20
   25d04:	ldr	x8, [x8, #16]
   25d08:	blr	x8
   25d0c:	cbz	x25, 270e4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1dd4>
   25d10:	ldaxr	w8, [x21]
   25d14:	sub	w9, w8, #0x1
   25d18:	stlxr	w10, w9, [x21]
   25d1c:	cbnz	w10, 25d10 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa00>
   25d20:	cmp	w8, #0x1
   25d24:	b.ne	25d38 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa28>  // b.any
   25d28:	ldr	x8, [x20]
   25d2c:	mov	x0, x20
   25d30:	ldr	x8, [x8, #24]
   25d34:	blr	x8
   25d38:	mov	w0, #0x220                 	// #544
   25d3c:	stur	w19, [x29, #-212]
   25d40:	bl	0 <_Znwm>
   25d44:	movi	v0.2s, #0x1
   25d48:	add	x8, x24, #0x10
   25d4c:	str	d0, [x0, #8]
   25d50:	movi	v0.2d, #0x0
   25d54:	mov	x22, x0
   25d58:	mov	x21, x0
   25d5c:	mov	w9, #0x6                   	// #6
   25d60:	str	x8, [x0]
   25d64:	stp	q0, q0, [x0, #48]
   25d68:	stp	q0, q0, [x0, #80]
   25d6c:	stp	q0, q0, [x0, #112]
   25d70:	stp	q0, q0, [x0, #144]
   25d74:	stp	q0, q0, [x0, #176]
   25d78:	stp	q0, q0, [x0, #208]
   25d7c:	stp	q0, q0, [x0, #240]
   25d80:	stp	q0, q0, [x0, #272]
   25d84:	stp	q0, q0, [x0, #304]
   25d88:	stp	q0, q0, [x0, #336]
   25d8c:	stp	q0, q0, [x0, #368]
   25d90:	stp	q0, q0, [x0, #400]
   25d94:	stp	q0, q0, [x0, #432]
   25d98:	stp	q0, q0, [x0, #464]
   25d9c:	stp	q0, q0, [x0, #496]
   25da0:	str	q0, [x22, #32]!
   25da4:	str	q0, [x0, #528]
   25da8:	str	x22, [x21, #16]!
   25dac:	str	d8, [x0, #24]
   25db0:	str	x9, [x22]
   25db4:	ldp	w8, w9, [x0, #24]
   25db8:	ldur	w11, [x23, #3]
   25dbc:	ldr	w12, [sp, #768]
   25dc0:	mov	w10, #0xff                  	// #255
   25dc4:	cmp	w8, w9
   25dc8:	strb	w10, [x0, #40]
   25dcc:	str	w11, [x0, #44]
   25dd0:	stur	w12, [x0, #41]
   25dd4:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25dd8:	add	w8, w8, #0x1
   25ddc:	mov	x20, x0
   25de0:	cmp	w8, w9
   25de4:	str	w8, [x0, #24]
   25de8:	b.cs	27394 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2084>  // b.hs, b.nlast
   25dec:	ldr	x9, [x20, #16]
   25df0:	mov	w10, #0x8                   	// #8
   25df4:	mov	w11, #0x4                   	// #4
   25df8:	add	x8, x9, w8, uxtw #4
   25dfc:	str	x10, [x8]
   25e00:	strb	w11, [x8, #8]
   25e04:	ldur	w9, [x23, #3]
   25e08:	ldr	w10, [sp, #768]
   25e0c:	str	w9, [x8, #12]
   25e10:	stur	w10, [x8, #9]
   25e14:	ldp	w8, w9, [x20, #24]
   25e18:	cmp	w8, w9
   25e1c:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25e20:	add	w8, w8, #0x1
   25e24:	cmp	w8, w9
   25e28:	str	w8, [x20, #24]
   25e2c:	b.cs	273b0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x20a0>  // b.hs, b.nlast
   25e30:	ldr	x9, [x20, #16]
   25e34:	mov	w10, #0x8                   	// #8
   25e38:	mov	w11, #0x4                   	// #4
   25e3c:	add	x8, x9, w8, uxtw #4
   25e40:	str	x10, [x8]
   25e44:	strb	w11, [x8, #8]
   25e48:	ldur	w9, [x23, #3]
   25e4c:	ldr	w10, [sp, #768]
   25e50:	str	w9, [x8, #12]
   25e54:	stur	w10, [x8, #9]
   25e58:	ldp	w8, w9, [x20, #24]
   25e5c:	cmp	w8, w9
   25e60:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25e64:	add	w8, w8, #0x1
   25e68:	cmp	w8, w9
   25e6c:	str	w8, [x20, #24]
   25e70:	b.cs	273cc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x20bc>  // b.hs, b.nlast
   25e74:	ldr	x9, [x20, #16]
   25e78:	mov	w10, #0x6                   	// #6
   25e7c:	mov	w11, #0x4                   	// #4
   25e80:	add	x8, x9, w8, uxtw #4
   25e84:	str	x10, [x8]
   25e88:	strb	w11, [x8, #8]
   25e8c:	ldur	w9, [x23, #3]
   25e90:	ldr	w10, [sp, #768]
   25e94:	str	w9, [x8, #12]
   25e98:	stur	w10, [x8, #9]
   25e9c:	ldp	w8, w9, [x20, #24]
   25ea0:	cmp	w8, w9
   25ea4:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25ea8:	add	w8, w8, #0x1
   25eac:	cmp	w8, w9
   25eb0:	str	w8, [x20, #24]
   25eb4:	b.cs	273e8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x20d8>  // b.hs, b.nlast
   25eb8:	ldr	x9, [x20, #16]
   25ebc:	mov	w10, #0x6                   	// #6
   25ec0:	add	x8, x9, w8, uxtw #4
   25ec4:	str	xzr, [x8]
   25ec8:	strb	w10, [x8, #8]
   25ecc:	ldur	w9, [x23, #3]
   25ed0:	ldr	w10, [sp, #768]
   25ed4:	str	w9, [x8, #12]
   25ed8:	stur	w10, [x8, #9]
   25edc:	ldp	w8, w9, [x20, #24]
   25ee0:	cmp	w8, w9
   25ee4:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25ee8:	add	w8, w8, #0x1
   25eec:	cmp	w8, w9
   25ef0:	str	w8, [x20, #24]
   25ef4:	b.cs	27404 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x20f4>  // b.hs, b.nlast
   25ef8:	ldr	x9, [x20, #16]
   25efc:	mov	w10, #0x8                   	// #8
   25f00:	mov	w11, #0x4                   	// #4
   25f04:	add	x8, x9, w8, uxtw #4
   25f08:	str	x10, [x8]
   25f0c:	strb	w11, [x8, #8]
   25f10:	ldur	w9, [x23, #3]
   25f14:	ldr	w10, [sp, #768]
   25f18:	str	w9, [x8, #12]
   25f1c:	stur	w10, [x8, #9]
   25f20:	ldp	w8, w9, [x20, #24]
   25f24:	cmp	w8, w9
   25f28:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   25f2c:	add	w8, w8, #0x1
   25f30:	str	w8, [x20, #24]
   25f34:	ldr	x22, [x27]
   25f38:	mov	x1, x21
   25f3c:	str	x21, [sp, #1312]
   25f40:	str	x20, [sp, #1320]
   25f44:	mov	x0, x22
   25f48:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f4c:	ldp	x1, x8, [x22, #32]
   25f50:	add	x20, x22, #0x18
   25f54:	cmp	x1, x8
   25f58:	b.eq	25f7c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xc6c>  // b.none
   25f5c:	str	xzr, [x1, #8]
   25f60:	ldr	q0, [sp, #1312]
   25f64:	add	x8, x1, #0x10
   25f68:	str	xzr, [sp, #1320]
   25f6c:	str	q0, [x1]
   25f70:	str	xzr, [sp, #1312]
   25f74:	str	x8, [x22, #32]
   25f78:	b	25f8c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xc7c>
   25f7c:	add	x2, sp, #0x520
   25f80:	mov	x0, x20
   25f84:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   25f88:	ldr	x8, [x22, #32]
   25f8c:	ldr	x9, [x20]
   25f90:	ldr	x20, [sp, #1320]
   25f94:	sub	x8, x8, x9
   25f98:	lsr	x8, x8, #4
   25f9c:	add	w19, w8, #0x3
   25fa0:	cbz	x20, 2601c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xd0c>
   25fa4:	add	x8, x20, #0x8
   25fa8:	cbz	x25, 25fc8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xcb8>
   25fac:	ldaxr	w9, [x8]
   25fb0:	sub	w10, w9, #0x1
   25fb4:	stlxr	w11, w10, [x8]
   25fb8:	cbnz	w11, 25fac <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xc9c>
   25fbc:	cmp	w9, #0x1
   25fc0:	b.eq	25fdc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xccc>  // b.none
   25fc4:	b	2601c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xd0c>
   25fc8:	ldr	w9, [x8]
   25fcc:	sub	w10, w9, #0x1
   25fd0:	str	w10, [x8]
   25fd4:	cmp	w9, #0x1
   25fd8:	b.ne	2601c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xd0c>  // b.any
   25fdc:	mov	x21, x20
   25fe0:	ldr	x8, [x21], #12
   25fe4:	mov	x0, x20
   25fe8:	ldr	x8, [x8, #16]
   25fec:	blr	x8
   25ff0:	cbz	x25, 270fc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1dec>
   25ff4:	ldaxr	w8, [x21]
   25ff8:	sub	w9, w8, #0x1
   25ffc:	stlxr	w10, w9, [x21]
   26000:	cbnz	w10, 25ff4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xce4>
   26004:	cmp	w8, #0x1
   26008:	b.ne	2601c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xd0c>  // b.any
   2600c:	ldr	x8, [x20]
   26010:	mov	x0, x20
   26014:	ldr	x8, [x8, #24]
   26018:	blr	x8
   2601c:	mov	w0, #0x220                 	// #544
   26020:	stur	w19, [x29, #-244]
   26024:	bl	0 <_Znwm>
   26028:	movi	v0.2s, #0x1
   2602c:	add	x8, x24, #0x10
   26030:	str	d0, [x0, #8]
   26034:	movi	v0.2d, #0x0
   26038:	mov	x22, x0
   2603c:	mov	x21, x0
   26040:	mov	w9, #0x8                   	// #8
   26044:	str	x8, [x0]
   26048:	stp	q0, q0, [x0, #48]
   2604c:	stp	q0, q0, [x0, #80]
   26050:	stp	q0, q0, [x0, #112]
   26054:	stp	q0, q0, [x0, #144]
   26058:	stp	q0, q0, [x0, #176]
   2605c:	stp	q0, q0, [x0, #208]
   26060:	stp	q0, q0, [x0, #240]
   26064:	stp	q0, q0, [x0, #272]
   26068:	stp	q0, q0, [x0, #304]
   2606c:	stp	q0, q0, [x0, #336]
   26070:	stp	q0, q0, [x0, #368]
   26074:	stp	q0, q0, [x0, #400]
   26078:	stp	q0, q0, [x0, #432]
   2607c:	stp	q0, q0, [x0, #464]
   26080:	stp	q0, q0, [x0, #496]
   26084:	str	q0, [x22, #32]!
   26088:	str	q0, [x0, #528]
   2608c:	str	x22, [x21, #16]!
   26090:	str	d8, [x0, #24]
   26094:	str	x9, [x22]
   26098:	ldp	w8, w9, [x0, #24]
   2609c:	ldur	w11, [x23, #3]
   260a0:	ldr	w12, [sp, #768]
   260a4:	mov	w10, #0xff                  	// #255
   260a8:	cmp	w8, w9
   260ac:	strb	w10, [x0, #40]
   260b0:	str	w11, [x0, #44]
   260b4:	stur	w12, [x0, #41]
   260b8:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   260bc:	add	w8, w8, #0x1
   260c0:	mov	x20, x0
   260c4:	cmp	w8, w9
   260c8:	str	w8, [x0, #24]
   260cc:	b.cs	27420 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2110>  // b.hs, b.nlast
   260d0:	ldr	x9, [x20, #16]
   260d4:	mov	w10, #0x8                   	// #8
   260d8:	mov	w11, #0x4                   	// #4
   260dc:	add	x8, x9, w8, uxtw #4
   260e0:	str	x10, [x8]
   260e4:	strb	w11, [x8, #8]
   260e8:	ldur	w9, [x23, #3]
   260ec:	ldr	w10, [sp, #768]
   260f0:	str	w9, [x8, #12]
   260f4:	stur	w10, [x8, #9]
   260f8:	ldp	w8, w9, [x20, #24]
   260fc:	cmp	w8, w9
   26100:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26104:	add	w8, w8, #0x1
   26108:	cmp	w8, w9
   2610c:	str	w8, [x20, #24]
   26110:	b.cs	2743c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x212c>  // b.hs, b.nlast
   26114:	ldr	x9, [x20, #16]
   26118:	mov	w10, #0x8                   	// #8
   2611c:	mov	w11, #0x4                   	// #4
   26120:	add	x8, x9, w8, uxtw #4
   26124:	str	x10, [x8]
   26128:	strb	w11, [x8, #8]
   2612c:	ldur	w9, [x23, #3]
   26130:	ldr	w10, [sp, #768]
   26134:	str	w9, [x8, #12]
   26138:	stur	w10, [x8, #9]
   2613c:	ldp	w8, w9, [x20, #24]
   26140:	cmp	w8, w9
   26144:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26148:	add	w8, w8, #0x1
   2614c:	cmp	w8, w9
   26150:	str	w8, [x20, #24]
   26154:	b.cs	27458 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2148>  // b.hs, b.nlast
   26158:	ldr	x9, [x20, #16]
   2615c:	mov	w10, #0x6                   	// #6
   26160:	mov	w11, #0x4                   	// #4
   26164:	add	x8, x9, w8, uxtw #4
   26168:	str	x10, [x8]
   2616c:	strb	w11, [x8, #8]
   26170:	ldur	w9, [x23, #3]
   26174:	ldr	w10, [sp, #768]
   26178:	str	w9, [x8, #12]
   2617c:	stur	w10, [x8, #9]
   26180:	ldp	w8, w9, [x20, #24]
   26184:	cmp	w8, w9
   26188:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   2618c:	add	w8, w8, #0x1
   26190:	cmp	w8, w9
   26194:	str	w8, [x20, #24]
   26198:	b.cs	27474 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2164>  // b.hs, b.nlast
   2619c:	ldr	x9, [x20, #16]
   261a0:	mov	w10, #0x8                   	// #8
   261a4:	mov	w11, #0x4                   	// #4
   261a8:	add	x8, x9, w8, uxtw #4
   261ac:	str	x10, [x8]
   261b0:	strb	w11, [x8, #8]
   261b4:	ldur	w9, [x23, #3]
   261b8:	ldr	w10, [sp, #768]
   261bc:	str	w9, [x8, #12]
   261c0:	stur	w10, [x8, #9]
   261c4:	ldp	w8, w9, [x20, #24]
   261c8:	cmp	w8, w9
   261cc:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   261d0:	add	w8, w8, #0x1
   261d4:	str	w8, [x20, #24]
   261d8:	ldr	x22, [x27]
   261dc:	mov	x1, x21
   261e0:	str	x21, [sp, #1296]
   261e4:	str	x20, [sp, #1304]
   261e8:	mov	x0, x22
   261ec:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   261f0:	ldp	x1, x8, [x22, #32]
   261f4:	add	x21, x22, #0x18
   261f8:	cmp	x1, x8
   261fc:	b.eq	26220 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf10>  // b.none
   26200:	str	xzr, [x1, #8]
   26204:	ldr	q0, [sp, #1296]
   26208:	add	x23, x1, #0x10
   2620c:	str	xzr, [sp, #1304]
   26210:	str	q0, [x1]
   26214:	str	xzr, [sp, #1296]
   26218:	str	x23, [x22, #32]
   2621c:	b	26230 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf20>
   26220:	add	x2, sp, #0x510
   26224:	mov	x0, x21
   26228:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2622c:	ldr	x23, [x22, #32]
   26230:	ldr	x20, [sp, #1304]
   26234:	ldr	x22, [x21]
   26238:	cbz	x20, 262b4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfa4>
   2623c:	add	x8, x20, #0x8
   26240:	cbz	x25, 26260 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf50>
   26244:	ldaxr	w9, [x8]
   26248:	sub	w10, w9, #0x1
   2624c:	stlxr	w11, w10, [x8]
   26250:	cbnz	w11, 26244 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf34>
   26254:	cmp	w9, #0x1
   26258:	b.eq	26274 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf64>  // b.none
   2625c:	b	262b4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfa4>
   26260:	ldr	w9, [x8]
   26264:	sub	w10, w9, #0x1
   26268:	str	w10, [x8]
   2626c:	cmp	w9, #0x1
   26270:	b.ne	262b4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfa4>  // b.any
   26274:	mov	x19, x20
   26278:	ldr	x8, [x19], #12
   2627c:	mov	x0, x20
   26280:	ldr	x8, [x8, #16]
   26284:	blr	x8
   26288:	cbz	x25, 27114 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1e04>
   2628c:	ldaxr	w8, [x19]
   26290:	sub	w9, w8, #0x1
   26294:	stlxr	w10, w9, [x19]
   26298:	cbnz	w10, 2628c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf7c>
   2629c:	cmp	w8, #0x1
   262a0:	b.ne	262b4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfa4>  // b.any
   262a4:	ldr	x8, [x20]
   262a8:	mov	x0, x20
   262ac:	ldr	x8, [x8, #24]
   262b0:	blr	x8
   262b4:	adrp	x9, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   262b8:	ldr	d0, [x9]
   262bc:	add	x8, sp, #0x300
   262c0:	add	x10, sp, #0xd0
   262c4:	add	x11, sp, #0xa0
   262c8:	add	x12, sp, #0x60
   262cc:	add	x13, sp, #0x2e0
   262d0:	sub	x14, x29, #0xf4
   262d4:	add	x15, sp, #0x90
   262d8:	sub	x16, x29, #0xd4
   262dc:	sub	x17, x29, #0xbc
   262e0:	add	x18, x8, #0x10
   262e4:	add	x20, x10, #0x10
   262e8:	stp	x13, x8, [sp, #32]
   262ec:	add	x8, x11, #0x8
   262f0:	add	x24, x12, #0x8
   262f4:	str	xzr, [sp, #744]
   262f8:	str	xzr, [sp, #736]
   262fc:	str	wzr, [sp, #760]
   26300:	str	xzr, [sp, #752]
   26304:	str	wzr, [sp, #168]
   26308:	str	wzr, [sp, #104]
   2630c:	stp	x10, x27, [sp, #144]
   26310:	stp	x10, x14, [sp, #48]
   26314:	stp	x12, x27, [sp, #16]
   26318:	stp	x15, x11, [sp, #64]
   2631c:	str	x18, [sp, #768]
   26320:	stp	xzr, x20, [sp, #200]
   26324:	stp	xzr, x8, [sp, #176]
   26328:	str	x8, [sp, #192]
   2632c:	stp	xzr, x24, [sp, #112]
   26330:	stp	x24, xzr, [sp, #128]
   26334:	str	d0, [sp, #776]
   26338:	str	d0, [sp, #216]
   2633c:	stp	x16, x17, [sp, #80]
   26340:	str	x8, [sp]
   26344:	ldr	x8, [x27, #24]
   26348:	str	x27, [x29, #8]
   2634c:	cbz	x8, 26448 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1138>
   26350:	ldr	x21, [x8, #24]
   26354:	add	x25, x8, #0x8
   26358:	cmp	x21, x25
   2635c:	b.ne	26378 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1068>  // b.any
   26360:	b	2645c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x114c>
   26364:	mov	x0, x21
   26368:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   2636c:	mov	x21, x0
   26370:	cmp	x0, x25
   26374:	b.eq	2645c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x114c>  // b.none
   26378:	ldr	w8, [x21, #80]
   2637c:	cbz	w8, 26364 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1054>
   26380:	ldr	w8, [x21, #88]
   26384:	ldp	x27, x26, [x21, #64]
   26388:	add	x28, x26, x8, lsl #4
   2638c:	cbz	w8, 263b4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x10a4>
   26390:	lsl	x9, x8, #4
   26394:	add	x8, x9, x26
   26398:	ldr	x10, [x26]
   2639c:	cmn	x10, #0x2
   263a0:	b.cc	263b4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x10a4>  // b.lo, b.ul, b.last
   263a4:	subs	x9, x9, #0x10
   263a8:	add	x26, x26, #0x10
   263ac:	b.ne	26398 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1088>  // b.any
   263b0:	mov	x26, x8
   263b4:	cmp	x26, x28
   263b8:	b.eq	26364 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1054>  // b.none
   263bc:	ldp	x1, x2, [x26]
   263c0:	add	x0, sp, #0x10
   263c4:	mov	w3, wzr
   263c8:	bl	27950 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>
   263cc:	ldr	x8, [x26, #8]
   263d0:	cbz	x8, 27570 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2260>
   263d4:	ldr	w9, [x8, #8]
   263d8:	cbnz	w9, 26404 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x10f4>
   263dc:	ldr	x9, [x8, #64]
   263e0:	cmp	x9, #0x7
   263e4:	b.ls	27510 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2200>  // b.plast
   263e8:	ldr	x2, [x8, #72]
   263ec:	cbz	x2, 274b0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x21a0>
   263f0:	and	x8, x9, #0xfffffffffffffff8
   263f4:	ldr	x1, [x8]
   263f8:	add	x0, sp, #0x10
   263fc:	mov	w3, #0x1                   	// #1
   26400:	bl	27950 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>
   26404:	ldr	x8, [x21, #64]
   26408:	cmp	x8, x27
   2640c:	b.ne	27530 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2220>  // b.any
   26410:	add	x26, x26, #0x10
   26414:	cmp	x26, x28
   26418:	b.hi	27550 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2240>  // b.pmore
   2641c:	b.eq	26364 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1054>  // b.none
   26420:	ldr	x8, [x26]
   26424:	cmn	x8, #0x2
   26428:	b.cc	2643c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x112c>  // b.lo, b.ul, b.last
   2642c:	add	x26, x26, #0x10
   26430:	cmp	x28, x26
   26434:	b.ne	26420 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1110>  // b.any
   26438:	b	26364 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1054>
   2643c:	cmp	x28, x26
   26440:	b.ne	263bc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x10ac>  // b.any
   26444:	b	26364 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1054>
   26448:	ldr	x8, [x27, #16]
   2644c:	ldr	x21, [x8, #24]
   26450:	add	x19, x8, #0x8
   26454:	cmp	x21, x19
   26458:	b.ne	266dc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x13cc>  // b.any
   2645c:	ldr	w8, [sp, #776]
   26460:	ldr	x28, [x29, #8]
   26464:	cbz	w8, 26708 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x13f8>
   26468:	sub	x9, x23, x22
   2646c:	ldr	x23, [sp, #768]
   26470:	lsr	x9, x9, #4
   26474:	add	w21, w9, #0x3
   26478:	lsl	x25, x8, #3
   2647c:	b	2648c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x117c>
   26480:	subs	x25, x25, #0x8
   26484:	add	x23, x23, #0x8
   26488:	b.eq	26708 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x13f8>  // b.none
   2648c:	ldr	x27, [x23]
   26490:	add	x0, sp, #0x2e0
   26494:	sub	x1, x29, #0xa8
   26498:	stur	x27, [x29, #-168]
   2649c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   264a0:	ldr	w19, [x0]
   264a4:	cbz	w19, 274d0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x21c0>
   264a8:	ldp	w8, w9, [sp, #216]
   264ac:	cmp	w8, w9
   264b0:	b.cs	2663c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x132c>  // b.hs, b.nlast
   264b4:	ldr	x9, [sp, #208]
   264b8:	str	x19, [x9, w8, uxtw #3]
   264bc:	ldp	w8, w9, [sp, #216]
   264c0:	cmp	w8, w9
   264c4:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   264c8:	add	w8, w8, #0x1
   264cc:	str	w8, [sp, #216]
   264d0:	ldr	x19, [x28, #16]
   264d4:	ldp	x1, x2, [x27, #24]
   264d8:	add	x0, x19, #0x30
   264dc:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
   264e0:	cmn	w0, #0x1
   264e4:	b.eq	264f8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x11e8>  // b.none
   264e8:	ldr	w9, [x19, #56]
   264ec:	sxtw	x8, w0
   264f0:	cmp	x8, x9
   264f4:	b.ne	26500 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x11f0>  // b.any
   264f8:	mov	x19, xzr
   264fc:	b	2650c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x11fc>
   26500:	ldr	x9, [x19, #48]
   26504:	ldr	x8, [x9, x8, lsl #3]
   26508:	ldr	x19, [x8, #8]
   2650c:	ldp	w8, w9, [sp, #216]
   26510:	cmp	w8, w9
   26514:	b.cs	26658 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1348>  // b.hs, b.nlast
   26518:	ldr	x9, [sp, #208]
   2651c:	str	x19, [x9, w8, uxtw #3]
   26520:	ldp	w8, w9, [sp, #216]
   26524:	cmp	w8, w9
   26528:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   2652c:	add	w8, w8, #0x1
   26530:	str	w8, [sp, #216]
   26534:	ldrb	w19, [x27, #12]
   26538:	cmp	w8, w9
   2653c:	b.cs	26674 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1364>  // b.hs, b.nlast
   26540:	ldr	x9, [sp, #208]
   26544:	str	x19, [x9, w8, uxtw #3]
   26548:	ldp	w8, w9, [sp, #216]
   2654c:	cmp	w8, w9
   26550:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26554:	add	w8, w8, #0x1
   26558:	str	w8, [sp, #216]
   2655c:	ldr	x8, [x27, #72]
   26560:	cbz	x8, 274b0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x21a0>
   26564:	add	x0, sp, #0x2e0
   26568:	sub	x1, x29, #0xa8
   2656c:	stur	x8, [x29, #-168]
   26570:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26574:	ldr	w19, [x0]
   26578:	cbz	w19, 274f0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x21e0>
   2657c:	ldp	w8, w9, [sp, #216]
   26580:	cmp	w8, w9
   26584:	b.cs	26690 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1380>  // b.hs, b.nlast
   26588:	ldr	x9, [sp, #208]
   2658c:	str	x19, [x9, w8, uxtw #3]
   26590:	ldp	w8, w9, [sp, #216]
   26594:	cmp	w8, w9
   26598:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   2659c:	add	w8, w8, #0x1
   265a0:	str	w8, [sp, #216]
   265a4:	ldr	x0, [x28]
   265a8:	add	x2, sp, #0xd0
   265ac:	mov	w1, #0x8                   	// #8
   265b0:	mov	w3, w21
   265b4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   265b8:	str	wzr, [sp, #216]
   265bc:	ldrb	w8, [x27, #12]
   265c0:	and	w8, w8, #0xf
   265c4:	sub	w8, w8, #0x7
   265c8:	cmp	w8, #0x1
   265cc:	b.hi	2661c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x130c>  // b.pmore
   265d0:	ldp	x22, x19, [sp, #144]
   265d4:	ldr	x26, [x27, #16]
   265d8:	ldp	w8, w9, [x22, #8]
   265dc:	cmp	w8, w9
   265e0:	b.cs	266ac <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x139c>  // b.hs, b.nlast
   265e4:	ldr	x9, [x22]
   265e8:	str	x26, [x9, w8, uxtw #3]
   265ec:	ldp	w8, w9, [x22, #8]
   265f0:	cmp	w8, w9
   265f4:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   265f8:	add	w8, w8, #0x1
   265fc:	str	w8, [x22, #8]
   26600:	ldr	x0, [x19]
   26604:	ldr	x2, [sp, #144]
   26608:	mov	w1, #0x9                   	// #9
   2660c:	mov	w3, wzr
   26610:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26614:	ldr	x8, [sp, #144]
   26618:	str	wzr, [x8, #8]
   2661c:	ldr	x0, [x27, #72]
   26620:	cbz	x0, 274b0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x21a0>
   26624:	ldr	w8, [x0, #8]
   26628:	cmp	w8, #0x1
   2662c:	b.ne	26480 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1170>  // b.any
   26630:	add	x1, sp, #0xa0
   26634:	bl	27800 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE>
   26638:	b	26480 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1170>
   2663c:	add	x0, sp, #0xd0
   26640:	mov	w3, #0x8                   	// #8
   26644:	mov	x1, x20
   26648:	mov	x2, xzr
   2664c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26650:	ldr	w8, [sp, #216]
   26654:	b	264b4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x11a4>
   26658:	add	x0, sp, #0xd0
   2665c:	mov	w3, #0x8                   	// #8
   26660:	mov	x1, x20
   26664:	mov	x2, xzr
   26668:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2666c:	ldr	w8, [sp, #216]
   26670:	b	26518 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1208>
   26674:	add	x0, sp, #0xd0
   26678:	mov	w3, #0x8                   	// #8
   2667c:	mov	x1, x20
   26680:	mov	x2, xzr
   26684:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26688:	ldr	w8, [sp, #216]
   2668c:	b	26540 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1230>
   26690:	add	x0, sp, #0xd0
   26694:	mov	w3, #0x8                   	// #8
   26698:	mov	x1, x20
   2669c:	mov	x2, xzr
   266a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   266a4:	ldr	w8, [sp, #216]
   266a8:	b	26588 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1278>
   266ac:	add	x1, x22, #0x10
   266b0:	mov	w3, #0x8                   	// #8
   266b4:	mov	x0, x22
   266b8:	mov	x2, xzr
   266bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   266c0:	ldr	w8, [x22, #8]
   266c4:	b	265e4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x12d4>
   266c8:	mov	x0, x21
   266cc:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   266d0:	mov	x21, x0
   266d4:	cmp	x0, x19
   266d8:	b.eq	2645c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x114c>  // b.none
   266dc:	ldp	x25, x26, [x21, #56]
   266e0:	cmp	x25, x26
   266e4:	b.eq	266c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x13b8>  // b.none
   266e8:	ldr	x2, [x25], #8
   266ec:	ldr	x1, [x21, #32]
   266f0:	add	x0, sp, #0x10
   266f4:	mov	w3, wzr
   266f8:	bl	27950 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>
   266fc:	cmp	x26, x25
   26700:	b.ne	266e8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x13d8>  // b.any
   26704:	b	266c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x13b8>
   26708:	ldr	x8, [x28, #16]
   2670c:	ldr	x9, [x8, #272]
   26710:	cbz	x9, 26748 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1438>
   26714:	add	x8, x8, #0xe8
   26718:	ldr	x21, [x8, #24]
   2671c:	add	x25, x8, #0x8
   26720:	cmp	x21, x25
   26724:	b.ne	26e10 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1b00>  // b.any
   26728:	ldr	w8, [sp, #216]
   2672c:	cbz	w8, 26748 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1438>
   26730:	ldr	x0, [x28]
   26734:	add	x2, sp, #0xd0
   26738:	mov	w1, #0x11                  	// #17
   2673c:	mov	w3, wzr
   26740:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26744:	str	wzr, [sp, #216]
   26748:	ldr	x8, [x28, #16]
   2674c:	ldr	x9, [x8, #320]
   26750:	cbz	x9, 26788 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1478>
   26754:	add	x8, x8, #0x118
   26758:	ldr	x21, [x8, #24]
   2675c:	add	x25, x8, #0x8
   26760:	cmp	x21, x25
   26764:	b.ne	26f48 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c38>  // b.any
   26768:	ldr	w8, [sp, #216]
   2676c:	cbz	w8, 26788 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1478>
   26770:	ldr	x0, [x28]
   26774:	add	x2, sp, #0xd0
   26778:	mov	w1, #0x12                  	// #18
   2677c:	mov	w3, wzr
   26780:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26784:	str	wzr, [sp, #216]
   26788:	ldr	x0, [sp, #184]
   2678c:	b	26798 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1488>
   26790:	ldr	x0, [sp, #8]
   26794:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   26798:	ldr	x8, [sp]
   2679c:	cmp	x0, x8
   267a0:	b.eq	27050 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d40>  // b.none
   267a4:	ldr	x8, [x28, #16]
   267a8:	str	x0, [sp, #8]
   267ac:	ldr	x22, [x8, #96]
   267b0:	add	x27, x8, #0x58
   267b4:	cbz	x22, 267f0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x14e0>
   267b8:	ldr	x8, [x0, #32]
   267bc:	b	267cc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x14bc>
   267c0:	ldr	x10, [x22, #24]
   267c4:	mov	x22, x10
   267c8:	cbz	x10, 267f0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x14e0>
   267cc:	ldr	x9, [x22, #32]
   267d0:	cmp	x9, x8
   267d4:	b.cc	267c0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x14b0>  // b.lo, b.ul, b.last
   267d8:	ldr	x10, [x22, #16]
   267dc:	cmp	x8, x9
   267e0:	b.cs	26d90 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1a80>  // b.hs, b.nlast
   267e4:	mov	x27, x22
   267e8:	mov	x22, x10
   267ec:	cbnz	x10, 267cc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x14bc>
   267f0:	mov	x22, x27
   267f4:	cmp	x22, x27
   267f8:	b.ne	26830 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1520>  // b.any
   267fc:	b	26790 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1480>
   26800:	ldr	x28, [x29, #8]
   26804:	add	x2, sp, #0xd0
   26808:	mov	w1, #0x15                  	// #21
   2680c:	mov	w3, wzr
   26810:	ldr	x0, [x28]
   26814:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26818:	mov	x0, x22
   2681c:	str	wzr, [sp, #216]
   26820:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   26824:	mov	x22, x0
   26828:	cmp	x0, x27
   2682c:	b.eq	26790 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1480>  // b.none
   26830:	ldr	x23, [x28, #8]
   26834:	ldp	x1, x2, [x22, #40]
   26838:	mov	x0, x23
   2683c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26840:	ldp	w8, w9, [sp, #216]
   26844:	mov	x24, x0
   26848:	cmp	w8, w9
   2684c:	b.cs	26cb0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x19a0>  // b.hs, b.nlast
   26850:	ldr	x9, [sp, #208]
   26854:	str	x24, [x9, w8, uxtw #3]
   26858:	ldp	w8, w9, [sp, #216]
   2685c:	cmp	w8, w9
   26860:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26864:	add	w8, w8, #0x1
   26868:	str	w8, [sp, #216]
   2686c:	ldr	x19, [x22, #48]
   26870:	cmp	w8, w9
   26874:	b.cs	26ccc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x19bc>  // b.hs, b.nlast
   26878:	ldr	x9, [sp, #208]
   2687c:	str	x19, [x9, w8, uxtw #3]
   26880:	ldp	w8, w9, [sp, #216]
   26884:	cmp	w8, w9
   26888:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   2688c:	add	w8, w8, #0x1
   26890:	str	w8, [sp, #216]
   26894:	ldr	w19, [x22, #72]
   26898:	cmp	w8, w9
   2689c:	b.cs	26ce8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x19d8>  // b.hs, b.nlast
   268a0:	ldr	x9, [sp, #208]
   268a4:	str	x19, [x9, w8, uxtw #3]
   268a8:	ldp	w8, w9, [sp, #216]
   268ac:	cmp	w8, w9
   268b0:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   268b4:	add	w8, w8, #0x1
   268b8:	str	w8, [sp, #216]
   268bc:	ldr	w19, [x22, #76]
   268c0:	cmp	w8, w9
   268c4:	b.cs	26d04 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x19f4>  // b.hs, b.nlast
   268c8:	ldr	x9, [sp, #208]
   268cc:	str	x19, [x9, w8, uxtw #3]
   268d0:	ldp	w8, w9, [sp, #216]
   268d4:	cmp	w8, w9
   268d8:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   268dc:	add	w8, w8, #0x1
   268e0:	cmp	w8, w9
   268e4:	str	w8, [sp, #216]
   268e8:	b.cs	26d20 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1a10>  // b.hs, b.nlast
   268ec:	ldr	x9, [sp, #208]
   268f0:	ldr	x10, [x22, #80]
   268f4:	str	x10, [x9, w8, uxtw #3]
   268f8:	ldp	w8, w9, [sp, #216]
   268fc:	cmp	w8, w9
   26900:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26904:	add	w8, w8, #0x1
   26908:	cmp	w8, w9
   2690c:	str	w8, [sp, #216]
   26910:	b.cs	26d3c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1a2c>  // b.hs, b.nlast
   26914:	ldr	x9, [sp, #208]
   26918:	ldr	x10, [x22, #88]
   2691c:	str	x10, [x9, w8, uxtw #3]
   26920:	ldp	w8, w9, [sp, #216]
   26924:	cmp	w8, w9
   26928:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   2692c:	add	w8, w8, #0x1
   26930:	str	w8, [sp, #216]
   26934:	ldrb	w19, [x22, #96]
   26938:	cmp	w8, w9
   2693c:	b.cs	26d58 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1a48>  // b.hs, b.nlast
   26940:	ldr	x9, [sp, #208]
   26944:	str	x19, [x9, w8, uxtw #3]
   26948:	ldp	w8, w9, [sp, #216]
   2694c:	cmp	w8, w9
   26950:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26954:	add	w8, w8, #0x1
   26958:	cmp	w8, w9
   2695c:	str	w8, [sp, #216]
   26960:	b.cs	26d74 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1a64>  // b.hs, b.nlast
   26964:	ldr	x9, [sp, #208]
   26968:	ldr	x10, [x22, #104]
   2696c:	str	x10, [x9, w8, uxtw #3]
   26970:	ldp	w8, w19, [sp, #216]
   26974:	cmp	w8, w19
   26978:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   2697c:	add	w21, w8, #0x1
   26980:	str	w21, [sp, #216]
   26984:	ldr	x24, [x22, #136]
   26988:	add	x28, x22, #0x78
   2698c:	cmp	x24, x28
   26990:	b.ne	269ac <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x169c>  // b.any
   26994:	b	26800 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x14f0>
   26998:	mov	x0, x24
   2699c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   269a0:	mov	x24, x0
   269a4:	cmp	x0, x28
   269a8:	b.eq	26800 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x14f0>  // b.none
   269ac:	ldr	x25, [x24, #32]
   269b0:	cmp	w21, w19
   269b4:	b.cs	26c24 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1914>  // b.hs, b.nlast
   269b8:	ldr	x8, [sp, #208]
   269bc:	str	x25, [x8, w21, uxtw #3]
   269c0:	ldp	w8, w9, [sp, #216]
   269c4:	cmp	w8, w9
   269c8:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   269cc:	add	w8, w8, #0x1
   269d0:	add	x26, x24, #0x28
   269d4:	str	w8, [sp, #216]
   269d8:	ldr	w19, [x26]
   269dc:	cmp	w8, w9
   269e0:	b.cs	26c40 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1930>  // b.hs, b.nlast
   269e4:	ldr	x9, [sp, #208]
   269e8:	str	x19, [x9, w8, uxtw #3]
   269ec:	ldp	w8, w9, [sp, #216]
   269f0:	cmp	w8, w9
   269f4:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   269f8:	add	w8, w8, #0x1
   269fc:	str	w8, [sp, #216]
   26a00:	ldp	x1, x2, [x26, #8]
   26a04:	mov	x0, x23
   26a08:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26a0c:	ldp	w8, w9, [sp, #216]
   26a10:	mov	x25, x0
   26a14:	cmp	w8, w9
   26a18:	b.cs	26c5c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x194c>  // b.hs, b.nlast
   26a1c:	ldr	x9, [sp, #208]
   26a20:	str	x25, [x9, w8, uxtw #3]
   26a24:	ldp	w8, w9, [sp, #216]
   26a28:	cmp	w8, w9
   26a2c:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26a30:	add	w8, w8, #0x1
   26a34:	str	w8, [sp, #216]
   26a38:	ldr	x19, [x26, #16]
   26a3c:	cmp	w8, w9
   26a40:	b.cs	26c78 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1968>  // b.hs, b.nlast
   26a44:	ldr	x9, [sp, #208]
   26a48:	str	x19, [x9, w8, uxtw #3]
   26a4c:	ldp	w8, w9, [sp, #216]
   26a50:	cmp	w8, w9
   26a54:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26a58:	add	w8, w8, #0x1
   26a5c:	str	w8, [sp, #216]
   26a60:	ldr	x19, [x26, #80]
   26a64:	cmp	w8, w9
   26a68:	b.cs	26c94 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1984>  // b.hs, b.nlast
   26a6c:	ldr	x9, [sp, #208]
   26a70:	str	x19, [x9, w8, uxtw #3]
   26a74:	ldp	w8, w19, [sp, #216]
   26a78:	cmp	w8, w19
   26a7c:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26a80:	add	w21, w8, #0x1
   26a84:	str	w21, [sp, #216]
   26a88:	ldr	x25, [x26, #64]
   26a8c:	add	x26, x26, #0x30
   26a90:	cmp	x25, x26
   26a94:	b.eq	26998 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1688>  // b.none
   26a98:	ldp	x9, x8, [x25, #32]
   26a9c:	cmp	w21, w19
   26aa0:	sub	x8, x8, x9
   26aa4:	asr	x19, x8, #3
   26aa8:	b.cs	26b98 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1888>  // b.hs, b.nlast
   26aac:	ldr	x8, [sp, #208]
   26ab0:	str	x19, [x8, w21, uxtw #3]
   26ab4:	ldp	w8, w9, [sp, #216]
   26ab8:	cmp	w8, w9
   26abc:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26ac0:	add	x8, x8, #0x1
   26ac4:	ldr	x9, [sp, #208]
   26ac8:	str	w8, [sp, #216]
   26acc:	ldp	x2, x3, [x25, #32]
   26ad0:	add	x0, sp, #0xd0
   26ad4:	add	x1, x9, x8, lsl #3
   26ad8:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26adc:	ldp	w8, w9, [sp, #216]
   26ae0:	ldr	w19, [x25, #56]
   26ae4:	cmp	w8, w9
   26ae8:	b.cs	26bb4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x18a4>  // b.hs, b.nlast
   26aec:	ldr	x9, [sp, #208]
   26af0:	str	x19, [x9, w8, uxtw #3]
   26af4:	ldp	w8, w9, [sp, #216]
   26af8:	cmp	w8, w9
   26afc:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26b00:	add	w8, w8, #0x1
   26b04:	cmp	w8, w9
   26b08:	str	w8, [sp, #216]
   26b0c:	b.cs	26bd0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x18c0>  // b.hs, b.nlast
   26b10:	ldr	x9, [sp, #208]
   26b14:	ldr	x10, [x25, #64]
   26b18:	str	x10, [x9, w8, uxtw #3]
   26b1c:	ldp	w8, w9, [sp, #216]
   26b20:	cmp	w8, w9
   26b24:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26b28:	add	w8, w8, #0x1
   26b2c:	str	w8, [sp, #216]
   26b30:	ldr	w19, [x25, #72]
   26b34:	cmp	w8, w9
   26b38:	b.cs	26bec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x18dc>  // b.hs, b.nlast
   26b3c:	ldr	x9, [sp, #208]
   26b40:	str	x19, [x9, w8, uxtw #3]
   26b44:	ldp	w8, w9, [sp, #216]
   26b48:	cmp	w8, w9
   26b4c:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26b50:	add	w8, w8, #0x1
   26b54:	str	w8, [sp, #216]
   26b58:	ldr	w19, [x25, #76]
   26b5c:	cmp	w8, w9
   26b60:	b.cs	26c08 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x18f8>  // b.hs, b.nlast
   26b64:	ldr	x9, [sp, #208]
   26b68:	str	x19, [x9, w8, uxtw #3]
   26b6c:	ldp	w8, w19, [sp, #216]
   26b70:	cmp	w8, w19
   26b74:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26b78:	add	w21, w8, #0x1
   26b7c:	mov	x0, x25
   26b80:	str	w21, [sp, #216]
   26b84:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   26b88:	mov	x25, x0
   26b8c:	cmp	x0, x26
   26b90:	b.ne	26a98 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1788>  // b.any
   26b94:	b	26998 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1688>
   26b98:	add	x0, sp, #0xd0
   26b9c:	mov	w3, #0x8                   	// #8
   26ba0:	mov	x1, x20
   26ba4:	mov	x2, xzr
   26ba8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26bac:	ldr	w21, [sp, #216]
   26bb0:	b	26aac <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x179c>
   26bb4:	add	x0, sp, #0xd0
   26bb8:	mov	w3, #0x8                   	// #8
   26bbc:	mov	x1, x20
   26bc0:	mov	x2, xzr
   26bc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26bc8:	ldr	w8, [sp, #216]
   26bcc:	b	26aec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x17dc>
   26bd0:	add	x0, sp, #0xd0
   26bd4:	mov	w3, #0x8                   	// #8
   26bd8:	mov	x1, x20
   26bdc:	mov	x2, xzr
   26be0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26be4:	ldr	w8, [sp, #216]
   26be8:	b	26b10 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1800>
   26bec:	add	x0, sp, #0xd0
   26bf0:	mov	w3, #0x8                   	// #8
   26bf4:	mov	x1, x20
   26bf8:	mov	x2, xzr
   26bfc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26c00:	ldr	w8, [sp, #216]
   26c04:	b	26b3c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x182c>
   26c08:	add	x0, sp, #0xd0
   26c0c:	mov	w3, #0x8                   	// #8
   26c10:	mov	x1, x20
   26c14:	mov	x2, xzr
   26c18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26c1c:	ldr	w8, [sp, #216]
   26c20:	b	26b64 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1854>
   26c24:	add	x0, sp, #0xd0
   26c28:	mov	w3, #0x8                   	// #8
   26c2c:	mov	x1, x20
   26c30:	mov	x2, xzr
   26c34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26c38:	ldr	w21, [sp, #216]
   26c3c:	b	269b8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x16a8>
   26c40:	add	x0, sp, #0xd0
   26c44:	mov	w3, #0x8                   	// #8
   26c48:	mov	x1, x20
   26c4c:	mov	x2, xzr
   26c50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26c54:	ldr	w8, [sp, #216]
   26c58:	b	269e4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x16d4>
   26c5c:	add	x0, sp, #0xd0
   26c60:	mov	w3, #0x8                   	// #8
   26c64:	mov	x1, x20
   26c68:	mov	x2, xzr
   26c6c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26c70:	ldr	w8, [sp, #216]
   26c74:	b	26a1c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x170c>
   26c78:	add	x0, sp, #0xd0
   26c7c:	mov	w3, #0x8                   	// #8
   26c80:	mov	x1, x20
   26c84:	mov	x2, xzr
   26c88:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26c8c:	ldr	w8, [sp, #216]
   26c90:	b	26a44 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1734>
   26c94:	add	x0, sp, #0xd0
   26c98:	mov	w3, #0x8                   	// #8
   26c9c:	mov	x1, x20
   26ca0:	mov	x2, xzr
   26ca4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26ca8:	ldr	w8, [sp, #216]
   26cac:	b	26a6c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x175c>
   26cb0:	add	x0, sp, #0xd0
   26cb4:	mov	w3, #0x8                   	// #8
   26cb8:	mov	x1, x20
   26cbc:	mov	x2, xzr
   26cc0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26cc4:	ldr	w8, [sp, #216]
   26cc8:	b	26850 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1540>
   26ccc:	add	x0, sp, #0xd0
   26cd0:	mov	w3, #0x8                   	// #8
   26cd4:	mov	x1, x20
   26cd8:	mov	x2, xzr
   26cdc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26ce0:	ldr	w8, [sp, #216]
   26ce4:	b	26878 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1568>
   26ce8:	add	x0, sp, #0xd0
   26cec:	mov	w3, #0x8                   	// #8
   26cf0:	mov	x1, x20
   26cf4:	mov	x2, xzr
   26cf8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26cfc:	ldr	w8, [sp, #216]
   26d00:	b	268a0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1590>
   26d04:	add	x0, sp, #0xd0
   26d08:	mov	w3, #0x8                   	// #8
   26d0c:	mov	x1, x20
   26d10:	mov	x2, xzr
   26d14:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26d18:	ldr	w8, [sp, #216]
   26d1c:	b	268c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x15b8>
   26d20:	add	x0, sp, #0xd0
   26d24:	mov	w3, #0x8                   	// #8
   26d28:	mov	x1, x20
   26d2c:	mov	x2, xzr
   26d30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26d34:	ldr	w8, [sp, #216]
   26d38:	b	268ec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x15dc>
   26d3c:	add	x0, sp, #0xd0
   26d40:	mov	w3, #0x8                   	// #8
   26d44:	mov	x1, x20
   26d48:	mov	x2, xzr
   26d4c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26d50:	ldr	w8, [sp, #216]
   26d54:	b	26914 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1604>
   26d58:	add	x0, sp, #0xd0
   26d5c:	mov	w3, #0x8                   	// #8
   26d60:	mov	x1, x20
   26d64:	mov	x2, xzr
   26d68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26d6c:	ldr	w8, [sp, #216]
   26d70:	b	26940 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1630>
   26d74:	add	x0, sp, #0xd0
   26d78:	mov	w3, #0x8                   	// #8
   26d7c:	mov	x1, x20
   26d80:	mov	x2, xzr
   26d84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26d88:	ldr	w8, [sp, #216]
   26d8c:	b	26964 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1654>
   26d90:	ldr	x9, [x22, #24]
   26d94:	cbz	x10, 26db8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1aa8>
   26d98:	ldr	x11, [x10, #32]
   26d9c:	add	x12, x10, #0x18
   26da0:	add	x13, x10, #0x10
   26da4:	cmp	x11, x8
   26da8:	csel	x22, x22, x10, cc  // cc = lo, ul, last
   26dac:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   26db0:	ldr	x10, [x10]
   26db4:	cbnz	x10, 26d98 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1a88>
   26db8:	cbz	x9, 267f4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x14e4>
   26dbc:	ldr	x10, [x9, #32]
   26dc0:	add	x11, x9, #0x10
   26dc4:	add	x12, x9, #0x18
   26dc8:	cmp	x8, x10
   26dcc:	csel	x27, x9, x27, cc  // cc = lo, ul, last
   26dd0:	csel	x9, x11, x12, cc  // cc = lo, ul, last
   26dd4:	ldr	x9, [x9]
   26dd8:	cbnz	x9, 26dbc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1aac>
   26ddc:	b	267f4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x14e4>
   26de0:	ldr	x9, [sp, #208]
   26de4:	str	x19, [x9, w8, uxtw #3]
   26de8:	ldp	w8, w9, [sp, #216]
   26dec:	cmp	w8, w9
   26df0:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26df4:	add	w8, w8, #0x1
   26df8:	str	w8, [sp, #216]
   26dfc:	mov	x0, x21
   26e00:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   26e04:	mov	x21, x0
   26e08:	cmp	x0, x25
   26e0c:	b.eq	26728 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1418>  // b.none
   26e10:	ldp	x22, x23, [x21, #32]
   26e14:	cbz	x23, 26e2c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1b1c>
   26e18:	ldrb	w8, [x22]
   26e1c:	cmp	w8, #0x1
   26e20:	b.ne	26e2c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1b1c>  // b.any
   26e24:	add	x22, x22, #0x1
   26e28:	sub	x23, x23, #0x1
   26e2c:	sub	x0, x29, #0xa8
   26e30:	bl	0 <_ZN4llvm3MD5C1Ev>
   26e34:	sub	x0, x29, #0xa8
   26e38:	mov	x1, x22
   26e3c:	mov	x2, x23
   26e40:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
   26e44:	sub	x0, x29, #0xa8
   26e48:	sub	x1, x29, #0xb8
   26e4c:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
   26e50:	ldr	x10, [sp, #112]
   26e54:	cbz	x10, 26dfc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1aec>
   26e58:	ldur	x8, [x29, #-184]
   26e5c:	mov	x9, x24
   26e60:	ldr	x11, [x10, #32]
   26e64:	add	x12, x10, #0x18
   26e68:	add	x13, x10, #0x10
   26e6c:	cmp	x11, x8
   26e70:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   26e74:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   26e78:	ldr	x10, [x10]
   26e7c:	cbnz	x10, 26e60 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1b50>
   26e80:	cmp	x9, x24
   26e84:	b.eq	26dfc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1aec>  // b.none
   26e88:	ldr	x10, [x9, #32]
   26e8c:	cmp	x8, x10
   26e90:	csel	x8, x24, x9, cc  // cc = lo, ul, last
   26e94:	cmp	x8, x24
   26e98:	b.eq	26dfc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1aec>  // b.none
   26e9c:	ldr	x0, [x28, #8]
   26ea0:	ldp	x1, x2, [x21, #32]
   26ea4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26ea8:	ldp	w8, w9, [sp, #216]
   26eac:	mov	x22, x0
   26eb0:	cmp	w8, w9
   26eb4:	b.cs	26efc <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1bec>  // b.hs, b.nlast
   26eb8:	ldr	x9, [sp, #208]
   26ebc:	str	x22, [x9, w8, uxtw #3]
   26ec0:	ldp	w8, w9, [sp, #216]
   26ec4:	cmp	w8, w9
   26ec8:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26ecc:	add	w8, w8, #0x1
   26ed0:	str	w8, [sp, #216]
   26ed4:	ldr	x19, [x21, #40]
   26ed8:	cmp	w8, w9
   26edc:	b.cc	26de0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ad0>  // b.lo, b.ul, b.last
   26ee0:	add	x0, sp, #0xd0
   26ee4:	mov	w3, #0x8                   	// #8
   26ee8:	mov	x1, x20
   26eec:	mov	x2, xzr
   26ef0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26ef4:	ldr	w8, [sp, #216]
   26ef8:	b	26de0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ad0>
   26efc:	add	x0, sp, #0xd0
   26f00:	mov	w3, #0x8                   	// #8
   26f04:	mov	x1, x20
   26f08:	mov	x2, xzr
   26f0c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   26f10:	ldr	w8, [sp, #216]
   26f14:	b	26eb8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ba8>
   26f18:	ldr	x9, [sp, #208]
   26f1c:	str	x19, [x9, w8, uxtw #3]
   26f20:	ldp	w8, w9, [sp, #216]
   26f24:	cmp	w8, w9
   26f28:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   26f2c:	add	w8, w8, #0x1
   26f30:	str	w8, [sp, #216]
   26f34:	mov	x0, x21
   26f38:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
   26f3c:	mov	x21, x0
   26f40:	cmp	x0, x25
   26f44:	b.eq	26768 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1458>  // b.none
   26f48:	ldp	x22, x23, [x21, #32]
   26f4c:	cbz	x23, 26f64 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c54>
   26f50:	ldrb	w8, [x22]
   26f54:	cmp	w8, #0x1
   26f58:	b.ne	26f64 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c54>  // b.any
   26f5c:	add	x22, x22, #0x1
   26f60:	sub	x23, x23, #0x1
   26f64:	sub	x0, x29, #0xa8
   26f68:	bl	0 <_ZN4llvm3MD5C1Ev>
   26f6c:	sub	x0, x29, #0xa8
   26f70:	mov	x1, x22
   26f74:	mov	x2, x23
   26f78:	bl	0 <_ZN4llvm3MD56updateENS_9StringRefE>
   26f7c:	sub	x0, x29, #0xa8
   26f80:	sub	x1, x29, #0xb8
   26f84:	bl	0 <_ZN4llvm3MD55finalERNS0_9MD5ResultE>
   26f88:	ldr	x10, [sp, #112]
   26f8c:	cbz	x10, 26f34 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c24>
   26f90:	ldur	x8, [x29, #-184]
   26f94:	mov	x9, x24
   26f98:	ldr	x11, [x10, #32]
   26f9c:	add	x12, x10, #0x18
   26fa0:	add	x13, x10, #0x10
   26fa4:	cmp	x11, x8
   26fa8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   26fac:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   26fb0:	ldr	x10, [x10]
   26fb4:	cbnz	x10, 26f98 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c88>
   26fb8:	cmp	x9, x24
   26fbc:	b.eq	26f34 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c24>  // b.none
   26fc0:	ldr	x10, [x9, #32]
   26fc4:	cmp	x8, x10
   26fc8:	csel	x8, x24, x9, cc  // cc = lo, ul, last
   26fcc:	cmp	x8, x24
   26fd0:	b.eq	26f34 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c24>  // b.none
   26fd4:	ldr	x0, [x28, #8]
   26fd8:	ldp	x1, x2, [x21, #32]
   26fdc:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   26fe0:	ldp	w8, w9, [sp, #216]
   26fe4:	mov	x22, x0
   26fe8:	cmp	w8, w9
   26fec:	b.cs	27034 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d24>  // b.hs, b.nlast
   26ff0:	ldr	x9, [sp, #208]
   26ff4:	str	x22, [x9, w8, uxtw #3]
   26ff8:	ldp	w8, w9, [sp, #216]
   26ffc:	cmp	w8, w9
   27000:	b.cs	27490 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2180>  // b.hs, b.nlast
   27004:	add	w8, w8, #0x1
   27008:	str	w8, [sp, #216]
   2700c:	ldr	x19, [x21, #40]
   27010:	cmp	w8, w9
   27014:	b.cc	26f18 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c08>  // b.lo, b.ul, b.last
   27018:	add	x0, sp, #0xd0
   2701c:	mov	w3, #0x8                   	// #8
   27020:	mov	x1, x20
   27024:	mov	x2, xzr
   27028:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2702c:	ldr	w8, [sp, #216]
   27030:	b	26f18 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1c08>
   27034:	add	x0, sp, #0xd0
   27038:	mov	w3, #0x8                   	// #8
   2703c:	mov	x1, x20
   27040:	mov	x2, xzr
   27044:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27048:	ldr	w8, [sp, #216]
   2704c:	b	26ff0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1ce0>
   27050:	ldr	x0, [x28]
   27054:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27058:	ldr	x1, [sp, #112]
   2705c:	add	x0, sp, #0x60
   27060:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27064:	ldr	x1, [sp, #176]
   27068:	add	x0, sp, #0xa0
   2706c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27070:	ldr	x0, [sp, #208]
   27074:	add	x8, sp, #0xd0
   27078:	add	x8, x8, #0x10
   2707c:	cmp	x0, x8
   27080:	b.eq	27088 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d78>  // b.none
   27084:	bl	0 <free>
   27088:	ldr	x0, [sp, #744]
   2708c:	bl	0 <_ZdlPv>
   27090:	ldr	x0, [sp, #768]
   27094:	add	x8, sp, #0x300
   27098:	add	x8, x8, #0x10
   2709c:	cmp	x0, x8
   270a0:	b.eq	270a8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1d98>  // b.none
   270a4:	bl	0 <free>
   270a8:	add	sp, sp, #0x630
   270ac:	ldp	x20, x19, [sp, #96]
   270b0:	ldp	x22, x21, [sp, #80]
   270b4:	ldp	x24, x23, [sp, #64]
   270b8:	ldp	x26, x25, [sp, #48]
   270bc:	ldp	x28, x27, [sp, #32]
   270c0:	ldp	x29, x30, [sp, #16]
   270c4:	ldr	d8, [sp], #112
   270c8:	ret
   270cc:	ldr	w8, [x21]
   270d0:	sub	w9, w8, #0x1
   270d4:	str	w9, [x21]
   270d8:	cmp	w8, #0x1
   270dc:	b.eq	258b8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5a8>  // b.none
   270e0:	b	258c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x5b8>
   270e4:	ldr	w8, [x21]
   270e8:	sub	w9, w8, #0x1
   270ec:	str	w9, [x21]
   270f0:	cmp	w8, #0x1
   270f4:	b.eq	25d28 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa18>  // b.none
   270f8:	b	25d38 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xa28>
   270fc:	ldr	w8, [x21]
   27100:	sub	w9, w8, #0x1
   27104:	str	w9, [x21]
   27108:	cmp	w8, #0x1
   2710c:	b.eq	2600c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xcfc>  // b.none
   27110:	b	2601c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xd0c>
   27114:	ldr	w8, [x19]
   27118:	sub	w9, w8, #0x1
   2711c:	str	w9, [x19]
   27120:	cmp	w8, #0x1
   27124:	b.eq	262a4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xf94>  // b.none
   27128:	b	262b4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xfa4>
   2712c:	mov	w3, #0x10                  	// #16
   27130:	mov	x0, x21
   27134:	mov	x1, x22
   27138:	mov	x2, xzr
   2713c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27140:	ldr	w8, [x25]
   27144:	b	2550c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x1fc>
   27148:	mov	w3, #0x10                  	// #16
   2714c:	mov	x0, x21
   27150:	mov	x1, x22
   27154:	mov	x2, xzr
   27158:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2715c:	ldr	w8, [x25]
   27160:	b	25550 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x240>
   27164:	mov	w3, #0x10                  	// #16
   27168:	mov	x0, x21
   2716c:	mov	x1, x22
   27170:	mov	x2, xzr
   27174:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27178:	ldr	w8, [x25]
   2717c:	b	25594 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x284>
   27180:	mov	w3, #0x10                  	// #16
   27184:	mov	x0, x21
   27188:	mov	x1, x22
   2718c:	mov	x2, xzr
   27190:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27194:	ldr	w8, [x25]
   27198:	b	255d8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x2c8>
   2719c:	mov	w3, #0x10                  	// #16
   271a0:	mov	x0, x21
   271a4:	mov	x1, x22
   271a8:	mov	x2, xzr
   271ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   271b0:	ldr	w8, [x25]
   271b4:	b	2561c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x30c>
   271b8:	mov	w3, #0x10                  	// #16
   271bc:	mov	x0, x21
   271c0:	mov	x1, x22
   271c4:	mov	x2, xzr
   271c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   271cc:	ldr	w8, [x25]
   271d0:	b	2565c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x34c>
   271d4:	mov	w3, #0x10                  	// #16
   271d8:	mov	x0, x21
   271dc:	mov	x1, x22
   271e0:	mov	x2, xzr
   271e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   271e8:	ldr	w8, [x25]
   271ec:	b	256a0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x390>
   271f0:	mov	w3, #0x10                  	// #16
   271f4:	mov	x0, x21
   271f8:	mov	x1, x22
   271fc:	mov	x2, xzr
   27200:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27204:	ldr	w8, [x25]
   27208:	b	256e0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x3d0>
   2720c:	mov	w3, #0x10                  	// #16
   27210:	mov	x0, x21
   27214:	mov	x1, x22
   27218:	mov	x2, xzr
   2721c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27220:	ldr	w8, [x25]
   27224:	b	25720 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x410>
   27228:	mov	w3, #0x10                  	// #16
   2722c:	mov	x0, x21
   27230:	mov	x1, x22
   27234:	mov	x2, xzr
   27238:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2723c:	ldr	w8, [x25]
   27240:	b	25760 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x450>
   27244:	mov	w3, #0x10                  	// #16
   27248:	mov	x0, x21
   2724c:	mov	x1, x22
   27250:	mov	x2, xzr
   27254:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27258:	ldr	w8, [x25]
   2725c:	b	257a0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x490>
   27260:	mov	w3, #0x10                  	// #16
   27264:	mov	x0, x21
   27268:	mov	x1, x22
   2726c:	mov	x2, xzr
   27270:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27274:	ldr	w8, [x26]
   27278:	b	25984 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x674>
   2727c:	mov	w3, #0x10                  	// #16
   27280:	mov	x0, x21
   27284:	mov	x1, x22
   27288:	mov	x2, xzr
   2728c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27290:	ldr	w8, [x26]
   27294:	b	259c8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x6b8>
   27298:	mov	w3, #0x10                  	// #16
   2729c:	mov	x0, x21
   272a0:	mov	x1, x22
   272a4:	mov	x2, xzr
   272a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   272ac:	ldr	w8, [x26]
   272b0:	b	25a0c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x6fc>
   272b4:	mov	w3, #0x10                  	// #16
   272b8:	mov	x0, x21
   272bc:	mov	x1, x22
   272c0:	mov	x2, xzr
   272c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   272c8:	ldr	w8, [x26]
   272cc:	b	25a50 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x740>
   272d0:	mov	w3, #0x10                  	// #16
   272d4:	mov	x0, x21
   272d8:	mov	x1, x22
   272dc:	mov	x2, xzr
   272e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   272e4:	ldr	w8, [x26]
   272e8:	b	25a94 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x784>
   272ec:	mov	w3, #0x10                  	// #16
   272f0:	mov	x0, x21
   272f4:	mov	x1, x22
   272f8:	mov	x2, xzr
   272fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27300:	ldr	w8, [x26]
   27304:	b	25ad4 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x7c4>
   27308:	mov	w3, #0x10                  	// #16
   2730c:	mov	x0, x21
   27310:	mov	x1, x22
   27314:	mov	x2, xzr
   27318:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2731c:	ldr	w8, [x26]
   27320:	b	25b18 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x808>
   27324:	mov	w3, #0x10                  	// #16
   27328:	mov	x0, x21
   2732c:	mov	x1, x22
   27330:	mov	x2, xzr
   27334:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27338:	ldr	w8, [x26]
   2733c:	b	25b58 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x848>
   27340:	mov	w3, #0x10                  	// #16
   27344:	mov	x0, x21
   27348:	mov	x1, x22
   2734c:	mov	x2, xzr
   27350:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27354:	ldr	w8, [x26]
   27358:	b	25b98 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x888>
   2735c:	mov	w3, #0x10                  	// #16
   27360:	mov	x0, x21
   27364:	mov	x1, x22
   27368:	mov	x2, xzr
   2736c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27370:	ldr	w8, [x26]
   27374:	b	25bd8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x8c8>
   27378:	mov	w3, #0x10                  	// #16
   2737c:	mov	x0, x21
   27380:	mov	x1, x22
   27384:	mov	x2, xzr
   27388:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2738c:	ldr	w8, [x26]
   27390:	b	25c18 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0x908>
   27394:	mov	w3, #0x10                  	// #16
   27398:	mov	x0, x21
   2739c:	mov	x1, x22
   273a0:	mov	x2, xzr
   273a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   273a8:	ldr	w8, [x20, #24]
   273ac:	b	25dec <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xadc>
   273b0:	mov	w3, #0x10                  	// #16
   273b4:	mov	x0, x21
   273b8:	mov	x1, x22
   273bc:	mov	x2, xzr
   273c0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   273c4:	ldr	w8, [x20, #24]
   273c8:	b	25e30 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xb20>
   273cc:	mov	w3, #0x10                  	// #16
   273d0:	mov	x0, x21
   273d4:	mov	x1, x22
   273d8:	mov	x2, xzr
   273dc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   273e0:	ldr	w8, [x20, #24]
   273e4:	b	25e74 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xb64>
   273e8:	mov	w3, #0x10                  	// #16
   273ec:	mov	x0, x21
   273f0:	mov	x1, x22
   273f4:	mov	x2, xzr
   273f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   273fc:	ldr	w8, [x20, #24]
   27400:	b	25eb8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xba8>
   27404:	mov	w3, #0x10                  	// #16
   27408:	mov	x0, x21
   2740c:	mov	x1, x22
   27410:	mov	x2, xzr
   27414:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27418:	ldr	w8, [x20, #24]
   2741c:	b	25ef8 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xbe8>
   27420:	mov	w3, #0x10                  	// #16
   27424:	mov	x0, x21
   27428:	mov	x1, x22
   2742c:	mov	x2, xzr
   27430:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27434:	ldr	w8, [x20, #24]
   27438:	b	260d0 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xdc0>
   2743c:	mov	w3, #0x10                  	// #16
   27440:	mov	x0, x21
   27444:	mov	x1, x22
   27448:	mov	x2, xzr
   2744c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27450:	ldr	w8, [x20, #24]
   27454:	b	26114 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xe04>
   27458:	mov	w3, #0x10                  	// #16
   2745c:	mov	x0, x21
   27460:	mov	x1, x22
   27464:	mov	x2, xzr
   27468:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2746c:	ldr	w8, [x20, #24]
   27470:	b	26158 <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xe48>
   27474:	mov	w3, #0x10                  	// #16
   27478:	mov	x0, x21
   2747c:	mov	x1, x22
   27480:	mov	x2, xzr
   27484:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27488:	ldr	w8, [x20, #24]
   2748c:	b	2619c <_ZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEv+0xe8c>
   27490:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27494:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27498:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2749c:	add	x0, x0, #0x0
   274a0:	add	x1, x1, #0x0
   274a4:	add	x3, x3, #0x0
   274a8:	mov	w2, #0x43                  	// #67
   274ac:	bl	0 <__assert_fail>
   274b0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   274b4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   274b8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   274bc:	add	x0, x0, #0x0
   274c0:	add	x1, x1, #0x0
   274c4:	add	x3, x3, #0x0
   274c8:	mov	w2, #0x1cb                 	// #459
   274cc:	bl	0 <__assert_fail>
   274d0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   274d4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   274d8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   274dc:	add	x0, x0, #0x0
   274e0:	add	x1, x1, #0x0
   274e4:	add	x3, x3, #0x0
   274e8:	mov	w2, #0x101c                	// #4124
   274ec:	bl	0 <__assert_fail>
   274f0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   274f4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   274f8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   274fc:	add	x0, x0, #0x0
   27500:	add	x1, x1, #0x0
   27504:	add	x3, x3, #0x0
   27508:	mov	w2, #0x1021                	// #4129
   2750c:	bl	0 <__assert_fail>
   27510:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27514:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27518:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2751c:	add	x0, x0, #0x0
   27520:	add	x1, x1, #0x0
   27524:	add	x3, x3, #0x0
   27528:	mov	w2, #0x1d8                 	// #472
   2752c:	bl	0 <__assert_fail>
   27530:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27534:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27538:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2753c:	add	x0, x0, #0x0
   27540:	add	x1, x1, #0x0
   27544:	add	x3, x3, #0x0
   27548:	mov	w2, #0x4cf                 	// #1231
   2754c:	bl	0 <__assert_fail>
   27550:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27554:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27558:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2755c:	add	x0, x0, #0x0
   27560:	add	x1, x1, #0x0
   27564:	add	x3, x3, #0x0
   27568:	mov	w2, #0x4e0                 	// #1248
   2756c:	bl	0 <__assert_fail>
   27570:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27574:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27578:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2757c:	add	x0, x0, #0x0
   27580:	add	x1, x1, #0x0
   27584:	add	x3, x3, #0x0
   27588:	mov	w2, #0x69                  	// #105
   2758c:	bl	0 <__assert_fail>

0000000000027590 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE>:
   27590:	stp	x29, x30, [sp, #-80]!
   27594:	stp	x26, x25, [sp, #16]
   27598:	stp	x24, x23, [sp, #32]
   2759c:	stp	x22, x21, [sp, #48]
   275a0:	stp	x20, x19, [sp, #64]
   275a4:	mov	x29, sp
   275a8:	mov	x24, x1
   275ac:	ldr	x23, [x0, #32]
   275b0:	ldr	x25, [x24], #40
   275b4:	mov	x20, x1
   275b8:	mov	x19, x0
   275bc:	cbz	x25, 27630 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xa0>
   275c0:	mov	w10, #0x1                   	// #1
   275c4:	mov	x8, x25
   275c8:	mov	x9, x24
   275cc:	b	275e8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x58>
   275d0:	mov	w10, wzr
   275d4:	sxtb	w11, w11
   275d8:	tbnz	w11, #31, 27638 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xa8>
   275dc:	subs	x8, x8, #0x1
   275e0:	add	x9, x9, #0x1
   275e4:	b.eq	2762c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x9c>  // b.none
   275e8:	ldrb	w11, [x9]
   275ec:	tbz	w10, #0, 275d0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x40>
   275f0:	sub	w10, w11, #0x30
   275f4:	cmp	w10, #0xa
   275f8:	mov	w10, #0x1                   	// #1
   275fc:	b.cc	275d4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x44>  // b.lo, b.ul, b.last
   27600:	and	w12, w11, #0xffffffdf
   27604:	sub	w12, w12, #0x41
   27608:	and	w12, w12, #0xff
   2760c:	cmp	w12, #0x1a
   27610:	b.cc	275d4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x44>  // b.lo, b.ul, b.last
   27614:	cmp	w11, #0x2e
   27618:	mov	w10, #0x1                   	// #1
   2761c:	b.eq	275dc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x4c>  // b.none
   27620:	cmp	w11, #0x5f
   27624:	b.eq	275dc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x4c>  // b.none
   27628:	b	275d0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x40>
   2762c:	cbz	w10, 27640 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xb0>
   27630:	add	x8, x19, #0x8
   27634:	b	27644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xb4>
   27638:	mov	x8, x19
   2763c:	b	27644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xb4>
   27640:	add	x8, x19, #0x10
   27644:	ldr	x22, [x19, #24]
   27648:	ldr	x9, [x8]
   2764c:	ldr	w26, [x20, #8]
   27650:	ldp	w8, w10, [x22, #8]
   27654:	ldr	w21, [x9]
   27658:	cmp	w8, w10
   2765c:	b.cs	277c4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x234>  // b.hs, b.nlast
   27660:	ldr	x9, [x22]
   27664:	str	w26, [x9, w8, uxtw #2]
   27668:	ldp	w8, w9, [x22, #8]
   2766c:	cmp	w8, w9
   27670:	b.cs	277e0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x250>  // b.hs, b.nlast
   27674:	add	w8, w8, #0x1
   27678:	str	w8, [x22, #8]
   2767c:	ldr	x22, [x19, #24]
   27680:	add	x10, x24, x25
   27684:	sub	x25, x10, x24
   27688:	ldp	w8, w9, [x22, #8]
   2768c:	sub	x9, x9, x8
   27690:	cmp	x25, x9
   27694:	b.ls	276b0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x120>  // b.plast
   27698:	add	x2, x25, x8
   2769c:	add	x1, x22, #0x10
   276a0:	mov	w3, #0x4                   	// #4
   276a4:	mov	x0, x22
   276a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   276ac:	ldr	w8, [x22, #8]
   276b0:	cmp	x25, #0x1
   276b4:	b.lt	276dc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x14c>  // b.tstop
   276b8:	ldr	x9, [x22]
   276bc:	add	x8, x9, x8, lsl #2
   276c0:	add	x9, x25, #0x1
   276c4:	ldrb	w10, [x24], #1
   276c8:	sub	x9, x9, #0x1
   276cc:	cmp	x9, #0x1
   276d0:	str	w10, [x8], #4
   276d4:	b.gt	276c4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x134>
   276d8:	ldr	w8, [x22, #8]
   276dc:	ldr	w9, [x22, #12]
   276e0:	add	x8, x8, x25
   276e4:	cmp	x8, x9
   276e8:	b.hi	277e0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x250>  // b.pmore
   276ec:	str	w8, [x22, #8]
   276f0:	ldr	x0, [x23]
   276f4:	ldr	x2, [x19, #24]
   276f8:	mov	w1, #0x1                   	// #1
   276fc:	mov	w3, w21
   27700:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27704:	mov	x21, x20
   27708:	ldr	w8, [x21, #16]!
   2770c:	cbnz	w8, 2772c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x19c>
   27710:	ldr	w8, [x20, #20]
   27714:	cbnz	w8, 2772c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x19c>
   27718:	ldr	w8, [x20, #24]
   2771c:	cbnz	w8, 2772c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x19c>
   27720:	ldp	w8, w9, [x20, #28]
   27724:	orr	w8, w8, w9
   27728:	cbz	w8, 277a4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x214>
   2772c:	ldr	x20, [x19, #24]
   27730:	ldr	w8, [x20, #12]
   27734:	str	wzr, [x20, #8]
   27738:	cmp	w8, #0x4
   2773c:	b.hi	2775c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x1cc>  // b.pmore
   27740:	add	x1, x20, #0x10
   27744:	mov	w2, #0x5                   	// #5
   27748:	mov	w3, #0x4                   	// #4
   2774c:	mov	x0, x20
   27750:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27754:	ldr	w8, [x20, #8]
   27758:	b	27760 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x1d0>
   2775c:	mov	x8, xzr
   27760:	ldr	x9, [x20]
   27764:	ldr	w10, [x21, #16]
   27768:	ldr	q0, [x21]
   2776c:	add	x8, x9, x8, lsl #2
   27770:	str	w10, [x8, #16]
   27774:	str	q0, [x8]
   27778:	ldp	w8, w9, [x20, #8]
   2777c:	add	x8, x8, #0x5
   27780:	cmp	x8, x9
   27784:	b.hi	277e0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0x250>  // b.pmore
   27788:	str	w8, [x20, #8]
   2778c:	ldr	x8, [x19, #40]
   27790:	ldr	x0, [x23]
   27794:	ldr	x2, [x19, #24]
   27798:	mov	w1, #0x2                   	// #2
   2779c:	ldr	w3, [x8]
   277a0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   277a4:	ldr	x8, [x19, #24]
   277a8:	str	wzr, [x8, #8]
   277ac:	ldp	x20, x19, [sp, #64]
   277b0:	ldp	x22, x21, [sp, #48]
   277b4:	ldp	x24, x23, [sp, #32]
   277b8:	ldp	x26, x25, [sp, #16]
   277bc:	ldp	x29, x30, [sp], #80
   277c0:	ret
   277c4:	add	x1, x22, #0x10
   277c8:	mov	w3, #0x4                   	// #4
   277cc:	mov	x0, x22
   277d0:	mov	x2, xzr
   277d4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   277d8:	ldr	w8, [x22, #8]
   277dc:	b	27660 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter15writeModStringsEvENK3$_0clERKN4llvm14StringMapEntryISt4pairImSt5arrayIjLm5EEEEE+0xd0>
   277e0:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   277e4:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   277e8:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   277ec:	add	x0, x0, #0x0
   277f0:	add	x1, x1, #0x0
   277f4:	add	x3, x3, #0x0
   277f8:	mov	w2, #0x43                  	// #67
   277fc:	bl	0 <__assert_fail>

0000000000027800 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE>:
   27800:	stp	x29, x30, [sp, #-64]!
   27804:	str	x23, [sp, #16]
   27808:	stp	x22, x21, [sp, #32]
   2780c:	stp	x20, x19, [sp, #48]
   27810:	mov	x29, sp
   27814:	ldr	x8, [x0, #104]
   27818:	cbz	x8, 2793c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>
   2781c:	ldp	x21, x9, [x8]
   27820:	mov	x20, x0
   27824:	mov	x19, x1
   27828:	subs	x9, x9, x21
   2782c:	b.eq	2785c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x5c>  // b.none
   27830:	b.eq	2785c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x5c>  // b.none
   27834:	asr	x8, x9, #3
   27838:	lsl	x22, x8, #3
   2783c:	mov	x0, x19
   27840:	mov	x1, x21
   27844:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27848:	subs	x22, x22, #0x8
   2784c:	add	x21, x21, #0x8
   27850:	b.ne	2783c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x3c>  // b.any
   27854:	ldr	x8, [x20, #104]
   27858:	cbz	x8, 2793c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>
   2785c:	ldp	x21, x9, [x8, #24]
   27860:	subs	x9, x9, x21
   27864:	b.eq	27890 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x90>  // b.none
   27868:	asr	x8, x9, #4
   2786c:	lsl	x22, x8, #4
   27870:	mov	x0, x19
   27874:	mov	x1, x21
   27878:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2787c:	subs	x22, x22, #0x10
   27880:	add	x21, x21, #0x10
   27884:	b.ne	27870 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x70>  // b.any
   27888:	ldr	x8, [x20, #104]
   2788c:	cbz	x8, 2793c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>
   27890:	ldp	x21, x9, [x8, #48]
   27894:	subs	x9, x9, x21
   27898:	b.eq	278c4 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0xc4>  // b.none
   2789c:	asr	x8, x9, #4
   278a0:	lsl	x22, x8, #4
   278a4:	mov	x0, x19
   278a8:	mov	x1, x21
   278ac:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   278b0:	subs	x22, x22, #0x10
   278b4:	add	x21, x21, #0x10
   278b8:	b.ne	278a4 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0xa4>  // b.any
   278bc:	ldr	x8, [x20, #104]
   278c0:	cbz	x8, 2793c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>
   278c4:	ldp	x21, x9, [x8, #72]
   278c8:	mov	x22, #0xcccccccccccccccc    	// #-3689348814741910324
   278cc:	movk	x22, #0xcccd
   278d0:	subs	x9, x9, x21
   278d4:	b.eq	27908 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x108>  // b.none
   278d8:	asr	x8, x9, #3
   278dc:	mul	x8, x8, x22
   278e0:	add	x8, x8, x8, lsl #2
   278e4:	lsl	x23, x8, #3
   278e8:	mov	x0, x19
   278ec:	mov	x1, x21
   278f0:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   278f4:	subs	x23, x23, #0x28
   278f8:	add	x21, x21, #0x28
   278fc:	b.ne	278e8 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0xe8>  // b.any
   27900:	ldr	x8, [x20, #104]
   27904:	cbz	x8, 2793c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>
   27908:	ldp	x20, x8, [x8, #96]
   2790c:	subs	x8, x8, x20
   27910:	b.eq	2793c <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x13c>  // b.none
   27914:	asr	x8, x8, #3
   27918:	mul	x8, x8, x22
   2791c:	add	x8, x8, x8, lsl #2
   27920:	lsl	x21, x8, #3
   27924:	mov	x0, x19
   27928:	mov	x1, x20
   2792c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27930:	subs	x21, x21, #0x28
   27934:	add	x20, x20, #0x28
   27938:	b.ne	27924 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE+0x124>  // b.any
   2793c:	ldp	x20, x19, [sp, #48]
   27940:	ldp	x22, x21, [sp, #32]
   27944:	ldr	x23, [sp, #16]
   27948:	ldp	x29, x30, [sp], #64
   2794c:	ret

0000000000027950 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb>:
   27950:	sub	sp, sp, #0x80
   27954:	stp	x29, x30, [sp, #32]
   27958:	stp	x28, x27, [sp, #48]
   2795c:	stp	x26, x25, [sp, #64]
   27960:	stp	x24, x23, [sp, #80]
   27964:	stp	x22, x21, [sp, #96]
   27968:	stp	x20, x19, [sp, #112]
   2796c:	add	x29, sp, #0x20
   27970:	ldr	x20, [x0, #8]
   27974:	stur	x2, [x29, #-8]
   27978:	cbz	x2, 286a4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd54>
   2797c:	ldr	x26, [x0]
   27980:	mov	x21, x2
   27984:	mov	x22, x1
   27988:	mov	x19, x0
   2798c:	ldr	x9, [x26, #16]
   27990:	add	x23, x26, #0x8
   27994:	str	w3, [sp, #8]
   27998:	str	x20, [sp, #16]
   2799c:	cbz	x9, 279d0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x80>
   279a0:	ldr	x8, [x9, #32]
   279a4:	mov	x24, x9
   279a8:	add	x9, x9, #0x10
   279ac:	add	x10, x24, #0x18
   279b0:	cmp	x22, x8
   279b4:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   279b8:	ldr	x9, [x9]
   279bc:	cbnz	x9, 279a0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x50>
   279c0:	cmp	x22, x8
   279c4:	mov	x0, x24
   279c8:	b.cc	279d4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x84>  // b.lo, b.ul, b.last
   279cc:	b	279e8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x98>
   279d0:	mov	x24, x23
   279d4:	ldr	x8, [x26, #24]
   279d8:	cmp	x8, x24
   279dc:	b.eq	279f4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa4>  // b.none
   279e0:	mov	x0, x24
   279e4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
   279e8:	ldr	x8, [x0, #32]
   279ec:	cmp	x8, x22
   279f0:	b.cs	27a40 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xf0>  // b.hs, b.nlast
   279f4:	cbz	x24, 27a40 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xf0>
   279f8:	cmp	x23, x24
   279fc:	b.eq	27a10 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc0>  // b.none
   27a00:	ldr	x8, [x24, #32]
   27a04:	cmp	x22, x8
   27a08:	cset	w25, cc  // cc = lo, ul, last
   27a0c:	b	27a14 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc4>
   27a10:	mov	w25, #0x1                   	// #1
   27a14:	mov	w0, #0x28                  	// #40
   27a18:	bl	0 <_Znwm>
   27a1c:	mov	x1, x0
   27a20:	str	x22, [x0, #32]
   27a24:	mov	w0, w25
   27a28:	mov	x2, x24
   27a2c:	mov	x3, x23
   27a30:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
   27a34:	ldr	x8, [x26, #40]
   27a38:	add	x8, x8, #0x1
   27a3c:	str	x8, [x26, #40]
   27a40:	ldp	x26, x27, [x21, #40]
   27a44:	cmp	x27, x26
   27a48:	b.ne	27b64 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x214>  // b.any
   27a4c:	ldr	x24, [sp, #16]
   27a50:	ldr	x8, [x24, #48]
   27a54:	cbz	x8, 28664 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd14>
   27a58:	add	x23, x24, #0x28
   27a5c:	add	x26, x24, #0x20
   27a60:	mov	x9, x23
   27a64:	ldr	x10, [x8, #32]
   27a68:	add	x11, x8, #0x18
   27a6c:	add	x12, x8, #0x10
   27a70:	cmp	x10, x22
   27a74:	csel	x9, x9, x8, cc  // cc = lo, ul, last
   27a78:	csel	x8, x11, x12, cc  // cc = lo, ul, last
   27a7c:	ldr	x8, [x8]
   27a80:	cbnz	x8, 27a64 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x114>
   27a84:	cmp	x9, x23
   27a88:	b.eq	28664 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd14>  // b.none
   27a8c:	ldr	x8, [x9, #32]
   27a90:	cmp	x8, x22
   27a94:	csel	x9, x23, x9, hi  // hi = pmore
   27a98:	cmp	x9, x23
   27a9c:	b.eq	28664 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd14>  // b.none
   27aa0:	ldr	x0, [x19, #16]
   27aa4:	ldr	w22, [x9, #40]
   27aa8:	ldr	w8, [x0, #24]
   27aac:	cbz	w8, 27be8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x298>
   27ab0:	orr	x9, x21, #0x8
   27ab4:	cmn	x9, #0x8
   27ab8:	b.eq	28684 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd34>  // b.none
   27abc:	ldr	x9, [x0, #8]
   27ac0:	ubfx	x10, x21, #4, #28
   27ac4:	eor	w11, w10, w21, lsr #9
   27ac8:	sub	w10, w8, #0x1
   27acc:	and	w11, w11, w10
   27ad0:	add	x8, x9, w11, uxtw #4
   27ad4:	ldr	x13, [x8]
   27ad8:	cmp	x13, x21
   27adc:	b.eq	27c08 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x2b8>  // b.none
   27ae0:	mov	x12, xzr
   27ae4:	mov	w15, #0x1                   	// #1
   27ae8:	mov	x14, #0xfffffffffffffff0    	// #-16
   27aec:	cmn	x13, #0x8
   27af0:	b.eq	28468 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb18>  // b.none
   27af4:	cmp	x12, #0x0
   27af8:	add	w11, w11, w15
   27afc:	ccmp	x13, x14, #0x0, eq  // eq = none
   27b00:	and	w11, w11, w10
   27b04:	csel	x12, x12, x8, ne  // ne = any
   27b08:	add	x8, x9, w11, uxtw #4
   27b0c:	ldr	x13, [x8]
   27b10:	add	w15, w15, #0x1
   27b14:	cmp	x13, x21
   27b18:	b.eq	27c08 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x2b8>  // b.none
   27b1c:	b	27aec <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x19c>
   27b20:	ldr	x8, [x24, #32]
   27b24:	cmp	x20, x8
   27b28:	cset	w25, cc  // cc = lo, ul, last
   27b2c:	mov	w0, #0x28                  	// #40
   27b30:	bl	0 <_Znwm>
   27b34:	mov	x1, x0
   27b38:	str	x20, [x0, #32]
   27b3c:	mov	w0, w25
   27b40:	mov	x2, x24
   27b44:	mov	x3, x23
   27b48:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
   27b4c:	ldr	x8, [x28, #40]
   27b50:	add	x8, x8, #0x1
   27b54:	str	x8, [x28, #40]
   27b58:	add	x26, x26, #0x8
   27b5c:	cmp	x26, x27
   27b60:	b.eq	27a4c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xfc>  // b.none
   27b64:	ldr	x8, [x26]
   27b68:	ldr	x28, [x19]
   27b6c:	and	x8, x8, #0xfffffffffffffff8
   27b70:	ldr	x9, [x28, #16]
   27b74:	ldr	x20, [x8]
   27b78:	add	x23, x28, #0x8
   27b7c:	cbz	x9, 27bb0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x260>
   27b80:	ldr	x8, [x9, #32]
   27b84:	mov	x24, x9
   27b88:	add	x9, x9, #0x10
   27b8c:	add	x10, x24, #0x18
   27b90:	cmp	x20, x8
   27b94:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   27b98:	ldr	x9, [x9]
   27b9c:	cbnz	x9, 27b80 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x230>
   27ba0:	cmp	x20, x8
   27ba4:	mov	x0, x24
   27ba8:	b.cc	27bb4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x264>  // b.lo, b.ul, b.last
   27bac:	b	27bc8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x278>
   27bb0:	mov	x24, x23
   27bb4:	ldr	x8, [x28, #24]
   27bb8:	cmp	x8, x24
   27bbc:	b.eq	27bd4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x284>  // b.none
   27bc0:	mov	x0, x24
   27bc4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
   27bc8:	ldr	x8, [x0, #32]
   27bcc:	cmp	x8, x20
   27bd0:	b.cs	27b58 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x208>  // b.hs, b.nlast
   27bd4:	cbz	x24, 27b58 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x208>
   27bd8:	cmp	x23, x24
   27bdc:	b.ne	27b20 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x1d0>  // b.any
   27be0:	mov	w25, #0x1                   	// #1
   27be4:	b	27b2c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x1dc>
   27be8:	mov	x3, xzr
   27bec:	sub	x1, x29, #0x8
   27bf0:	sub	x2, x29, #0x8
   27bf4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   27bf8:	ldur	x9, [x29, #-8]
   27bfc:	mov	x8, x0
   27c00:	str	wzr, [x0, #8]
   27c04:	str	x9, [x0]
   27c08:	str	w22, [x8, #8]
   27c0c:	ldr	w8, [sp, #8]
   27c10:	tbnz	w8, #0, 28448 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xaf8>
   27c14:	ldur	x20, [x29, #-8]
   27c18:	cbz	x20, 286c4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd74>
   27c1c:	ldr	w8, [x20, #8]
   27c20:	cmp	w8, #0x0
   27c24:	csel	x21, x20, xzr, eq  // eq = none
   27c28:	cbz	x21, 27c5c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x30c>
   27c2c:	ldr	x19, [x19, #24]
   27c30:	ldp	w8, w9, [x19, #8]
   27c34:	cmp	w8, w9
   27c38:	b.cs	28474 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb24>  // b.hs, b.nlast
   27c3c:	ldr	x9, [x19]
   27c40:	str	x21, [x9, w8, uxtw #3]
   27c44:	ldp	w8, w9, [x19, #8]
   27c48:	cmp	w8, w9
   27c4c:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27c50:	add	w8, w8, #0x1
   27c54:	str	w8, [x19, #8]
   27c58:	b	28448 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xaf8>
   27c5c:	cmp	w8, #0x1
   27c60:	b.eq	27cd0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x380>  // b.none
   27c64:	cmp	w8, #0x2
   27c68:	b.ne	28724 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xdd4>  // b.any
   27c6c:	ldr	x21, [x19, #32]
   27c70:	ldp	w8, w9, [x21, #8]
   27c74:	cmp	w8, w9
   27c78:	b.cs	28490 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb40>  // b.hs, b.nlast
   27c7c:	ldr	x9, [x21]
   27c80:	str	x22, [x9, w8, uxtw #3]
   27c84:	ldp	w8, w9, [x21, #8]
   27c88:	cmp	w8, w9
   27c8c:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27c90:	add	w8, w8, #0x1
   27c94:	str	w8, [x21, #8]
   27c98:	ldr	x22, [x24, #16]
   27c9c:	ldp	x1, x2, [x20, #24]
   27ca0:	ldr	x21, [x19, #32]
   27ca4:	add	x0, x22, #0x30
   27ca8:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
   27cac:	cmn	w0, #0x1
   27cb0:	b.eq	27d50 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x400>  // b.none
   27cb4:	ldr	w9, [x22, #56]
   27cb8:	sxtw	x8, w0
   27cbc:	mov	x14, x26
   27cc0:	cmp	x8, x9
   27cc4:	b.ne	27d68 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x418>  // b.any
   27cc8:	mov	x22, xzr
   27ccc:	b	27d74 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x424>
   27cd0:	ldr	x0, [x24]
   27cd4:	mov	x1, x20
   27cd8:	str	x26, [sp, #8]
   27cdc:	bl	24f08 <_ZL32writeFunctionTypeMetadataRecordsRN4llvm15BitstreamWriterEPNS_15FunctionSummaryE>
   27ce0:	ldr	x1, [x19, #56]
   27ce4:	mov	x0, x20
   27ce8:	bl	27800 <_ZL20getReferencedTypeIdsPN4llvm15FunctionSummaryERSt3setImSt4lessImESaImEE>
   27cec:	ldr	x21, [x19, #32]
   27cf0:	ldp	w8, w9, [x21, #8]
   27cf4:	cmp	w8, w9
   27cf8:	b.cs	284ac <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb5c>  // b.hs, b.nlast
   27cfc:	ldr	x9, [x21]
   27d00:	str	x22, [x9, w8, uxtw #3]
   27d04:	ldp	w8, w9, [x21, #8]
   27d08:	cmp	w8, w9
   27d0c:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27d10:	add	w8, w8, #0x1
   27d14:	str	w8, [x21, #8]
   27d18:	ldr	x22, [x24, #16]
   27d1c:	ldp	x1, x2, [x20, #24]
   27d20:	ldr	x21, [x19, #32]
   27d24:	add	x0, x22, #0x30
   27d28:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
   27d2c:	cmn	w0, #0x1
   27d30:	b.eq	27d5c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x40c>  // b.none
   27d34:	ldr	w9, [x22, #56]
   27d38:	ldr	x16, [sp, #8]
   27d3c:	sxtw	x8, w0
   27d40:	cmp	x8, x9
   27d44:	b.ne	27ed0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x580>  // b.any
   27d48:	mov	x22, xzr
   27d4c:	b	27edc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x58c>
   27d50:	mov	x22, xzr
   27d54:	mov	x14, x26
   27d58:	b	27d74 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x424>
   27d5c:	ldr	x16, [sp, #8]
   27d60:	mov	x22, xzr
   27d64:	b	27edc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x58c>
   27d68:	ldr	x9, [x22, #48]
   27d6c:	ldr	x8, [x9, x8, lsl #3]
   27d70:	ldr	x22, [x8, #8]
   27d74:	ldp	w8, w9, [x21, #8]
   27d78:	cmp	w8, w9
   27d7c:	b.cs	284c8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb78>  // b.hs, b.nlast
   27d80:	ldr	x9, [x21]
   27d84:	str	x22, [x9, w8, uxtw #3]
   27d88:	ldp	w8, w9, [x21, #8]
   27d8c:	cmp	w8, w9
   27d90:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27d94:	add	w8, w8, #0x1
   27d98:	str	w8, [x21, #8]
   27d9c:	ldr	x21, [x19, #32]
   27da0:	ldrb	w22, [x20, #12]
   27da4:	ldp	w8, w9, [x21, #8]
   27da8:	cmp	w8, w9
   27dac:	b.cs	284e8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xb98>  // b.hs, b.nlast
   27db0:	ldr	x9, [x21]
   27db4:	str	x22, [x9, w8, uxtw #3]
   27db8:	ldp	w8, w9, [x21, #8]
   27dbc:	cmp	w8, w9
   27dc0:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27dc4:	add	w8, w8, #0x1
   27dc8:	str	w8, [x21, #8]
   27dcc:	ldr	x21, [x19, #32]
   27dd0:	ldr	w10, [x20, #72]
   27dd4:	ldp	w8, w9, [x21, #8]
   27dd8:	and	x22, x10, #0x3
   27ddc:	cmp	w8, w9
   27de0:	b.cs	28508 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xbb8>  // b.hs, b.nlast
   27de4:	ldr	x9, [x21]
   27de8:	str	x22, [x9, w8, uxtw #3]
   27dec:	ldp	w8, w9, [x21, #8]
   27df0:	cmp	w8, w9
   27df4:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27df8:	add	w8, w8, #0x1
   27dfc:	str	w8, [x21, #8]
   27e00:	ldp	x21, x22, [x20, #40]
   27e04:	cmp	x22, x21
   27e08:	b.ne	27e28 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4d8>  // b.any
   27e0c:	ldp	x2, x8, [x19, #32]
   27e10:	ldr	x0, [x24]
   27e14:	mov	w1, #0x6                   	// #6
   27e18:	b	283d0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa80>
   27e1c:	add	x21, x21, #0x8
   27e20:	cmp	x21, x22
   27e24:	b.eq	27e0c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4bc>  // b.none
   27e28:	ldr	x10, [x14, #16]
   27e2c:	cbz	x10, 27e1c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4cc>
   27e30:	ldr	x8, [x21]
   27e34:	mov	x9, x23
   27e38:	and	x8, x8, #0xfffffffffffffff8
   27e3c:	ldr	x8, [x8]
   27e40:	ldr	x11, [x10, #32]
   27e44:	add	x12, x10, #0x18
   27e48:	add	x13, x10, #0x10
   27e4c:	cmp	x11, x8
   27e50:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   27e54:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   27e58:	ldr	x10, [x10]
   27e5c:	cbnz	x10, 27e40 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4f0>
   27e60:	cmp	x9, x23
   27e64:	b.eq	27e1c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4cc>  // b.none
   27e68:	ldr	x10, [x9, #32]
   27e6c:	cmp	x10, x8
   27e70:	csel	x9, x23, x9, hi  // hi = pmore
   27e74:	cmp	x9, x23
   27e78:	b.eq	27e1c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4cc>  // b.none
   27e7c:	ldr	x20, [x19, #32]
   27e80:	ldr	w25, [x9, #40]
   27e84:	ldp	w8, w10, [x20, #8]
   27e88:	cmp	w8, w10
   27e8c:	b.cs	27eb0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x560>  // b.hs, b.nlast
   27e90:	ldr	x9, [x20]
   27e94:	str	x25, [x9, w8, uxtw #3]
   27e98:	ldp	w8, w9, [x20, #8]
   27e9c:	cmp	w8, w9
   27ea0:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27ea4:	add	w8, w8, #0x1
   27ea8:	str	w8, [x20, #8]
   27eac:	b	27e1c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x4cc>
   27eb0:	add	x1, x20, #0x10
   27eb4:	mov	w3, #0x8                   	// #8
   27eb8:	mov	x0, x20
   27ebc:	mov	x2, xzr
   27ec0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   27ec4:	ldr	w8, [x20, #8]
   27ec8:	mov	x14, x26
   27ecc:	b	27e90 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x540>
   27ed0:	ldr	x9, [x22, #48]
   27ed4:	ldr	x8, [x9, x8, lsl #3]
   27ed8:	ldr	x22, [x8, #8]
   27edc:	ldp	w8, w9, [x21, #8]
   27ee0:	cmp	w8, w9
   27ee4:	b.cs	28528 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xbd8>  // b.hs, b.nlast
   27ee8:	ldr	x9, [x21]
   27eec:	str	x22, [x9, w8, uxtw #3]
   27ef0:	ldp	w8, w9, [x21, #8]
   27ef4:	cmp	w8, w9
   27ef8:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27efc:	add	w8, w8, #0x1
   27f00:	str	w8, [x21, #8]
   27f04:	ldr	x21, [x19, #32]
   27f08:	ldrb	w22, [x20, #12]
   27f0c:	ldp	w8, w9, [x21, #8]
   27f10:	cmp	w8, w9
   27f14:	b.cs	28548 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xbf8>  // b.hs, b.nlast
   27f18:	ldr	x9, [x21]
   27f1c:	str	x22, [x9, w8, uxtw #3]
   27f20:	ldp	w8, w9, [x21, #8]
   27f24:	cmp	w8, w9
   27f28:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27f2c:	add	w8, w8, #0x1
   27f30:	str	w8, [x21, #8]
   27f34:	ldr	x21, [x19, #32]
   27f38:	ldr	w22, [x20, #64]
   27f3c:	ldp	w8, w9, [x21, #8]
   27f40:	cmp	w8, w9
   27f44:	b.cs	28568 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc18>  // b.hs, b.nlast
   27f48:	ldr	x9, [x21]
   27f4c:	str	x22, [x9, w8, uxtw #3]
   27f50:	ldp	w8, w9, [x21, #8]
   27f54:	cmp	w8, w9
   27f58:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27f5c:	add	w8, w8, #0x1
   27f60:	str	w8, [x21, #8]
   27f64:	ldr	x21, [x19, #32]
   27f68:	ldr	w10, [x20, #68]
   27f6c:	ldp	w8, w9, [x21, #8]
   27f70:	and	x22, x10, #0x3f
   27f74:	cmp	w8, w9
   27f78:	b.cs	28588 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc38>  // b.hs, b.nlast
   27f7c:	ldr	x9, [x21]
   27f80:	str	x22, [x9, w8, uxtw #3]
   27f84:	ldp	w8, w9, [x21, #8]
   27f88:	cmp	w8, w9
   27f8c:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27f90:	add	w8, w8, #0x1
   27f94:	str	w8, [x21, #8]
   27f98:	ldr	x21, [x19, #32]
   27f9c:	ldr	x22, [x20, #72]
   27fa0:	ldp	w8, w9, [x21, #8]
   27fa4:	cmp	w8, w9
   27fa8:	b.cs	285a8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc58>  // b.hs, b.nlast
   27fac:	ldr	x9, [x21]
   27fb0:	str	x22, [x9, w8, uxtw #3]
   27fb4:	ldp	w8, w9, [x21, #8]
   27fb8:	cmp	w8, w9
   27fbc:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27fc0:	add	w8, w8, #0x1
   27fc4:	str	w8, [x21, #8]
   27fc8:	ldr	x21, [x19, #32]
   27fcc:	ldp	w8, w9, [x21, #8]
   27fd0:	cmp	w8, w9
   27fd4:	b.cs	285c8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc78>  // b.hs, b.nlast
   27fd8:	ldr	x9, [x21]
   27fdc:	str	xzr, [x9, w8, uxtw #3]
   27fe0:	ldp	w8, w9, [x21, #8]
   27fe4:	cmp	w8, w9
   27fe8:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   27fec:	add	w8, w8, #0x1
   27ff0:	str	w8, [x21, #8]
   27ff4:	ldr	x21, [x19, #32]
   27ff8:	ldp	w8, w9, [x21, #8]
   27ffc:	cmp	w8, w9
   28000:	b.cs	285e8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xc98>  // b.hs, b.nlast
   28004:	ldr	x9, [x21]
   28008:	str	xzr, [x9, w8, uxtw #3]
   2800c:	ldp	w8, w9, [x21, #8]
   28010:	cmp	w8, w9
   28014:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   28018:	add	w8, w8, #0x1
   2801c:	str	w8, [x21, #8]
   28020:	ldr	x21, [x19, #32]
   28024:	ldp	w8, w9, [x21, #8]
   28028:	cmp	w8, w9
   2802c:	b.cs	28608 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcb8>  // b.hs, b.nlast
   28030:	ldr	x9, [x21]
   28034:	str	xzr, [x9, w8, uxtw #3]
   28038:	ldp	w8, w9, [x21, #8]
   2803c:	cmp	w8, w9
   28040:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   28044:	add	w8, w8, #0x1
   28048:	str	w8, [x21, #8]
   2804c:	ldp	x28, x26, [x20, #40]
   28050:	cmp	x26, x28
   28054:	b.eq	28148 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x7f8>  // b.none
   28058:	mov	w27, wzr
   2805c:	mov	w25, wzr
   28060:	mov	w22, wzr
   28064:	b	28074 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x724>
   28068:	add	x28, x28, #0x8
   2806c:	cmp	x28, x26
   28070:	b.eq	28154 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x804>  // b.none
   28074:	ldr	x10, [x16, #16]
   28078:	cbz	x10, 28068 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x718>
   2807c:	ldr	x8, [x28]
   28080:	mov	x9, x23
   28084:	and	x8, x8, #0xfffffffffffffff8
   28088:	ldr	x8, [x8]
   2808c:	ldr	x11, [x10, #32]
   28090:	add	x12, x10, #0x18
   28094:	add	x13, x10, #0x10
   28098:	cmp	x11, x8
   2809c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
   280a0:	csel	x10, x12, x13, cc  // cc = lo, ul, last
   280a4:	ldr	x10, [x10]
   280a8:	cbnz	x10, 2808c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x73c>
   280ac:	cmp	x9, x23
   280b0:	b.eq	28068 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x718>  // b.none
   280b4:	ldr	x10, [x9, #32]
   280b8:	cmp	x10, x8
   280bc:	csel	x9, x23, x9, hi  // hi = pmore
   280c0:	cmp	x9, x23
   280c4:	b.eq	28068 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x718>  // b.none
   280c8:	ldr	x21, [x19, #32]
   280cc:	ldr	w24, [x9, #40]
   280d0:	ldp	w8, w10, [x21, #8]
   280d4:	cmp	w8, w10
   280d8:	b.cs	28128 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x7d8>  // b.hs, b.nlast
   280dc:	ldr	x9, [x21]
   280e0:	str	x24, [x9, w8, uxtw #3]
   280e4:	ldp	w8, w9, [x21, #8]
   280e8:	cmp	w8, w9
   280ec:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   280f0:	add	w8, w8, #0x1
   280f4:	str	w8, [x21, #8]
   280f8:	ldr	x8, [x28]
   280fc:	mvn	w9, w8
   28100:	tst	x9, #0x6
   28104:	b.eq	286e4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xd94>  // b.none
   28108:	ubfx	w10, w8, #2, #1
   2810c:	tst	x8, #0x2
   28110:	ubfx	x9, x8, #1, #1
   28114:	csel	w8, w10, wzr, eq  // eq = none
   28118:	add	w25, w25, w9
   2811c:	add	w22, w22, w8
   28120:	add	w27, w27, #0x1
   28124:	b	28068 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x718>
   28128:	add	x1, x21, #0x10
   2812c:	mov	w3, #0x8                   	// #8
   28130:	mov	x0, x21
   28134:	mov	x2, xzr
   28138:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2813c:	ldr	x16, [sp, #8]
   28140:	ldr	w8, [x21, #8]
   28144:	b	280dc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x78c>
   28148:	mov	w22, wzr
   2814c:	mov	w25, wzr
   28150:	mov	w27, wzr
   28154:	ldr	x2, [x19, #32]
   28158:	ldr	w8, [x2, #8]
   2815c:	cmp	w8, #0x6
   28160:	b.ls	28704 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xdb4>  // b.plast
   28164:	ldr	x9, [x2]
   28168:	mov	w10, w27
   2816c:	cmp	w8, #0x7
   28170:	str	x10, [x9, #48]
   28174:	b.eq	28704 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xdb4>  // b.none
   28178:	ldr	x27, [sp, #16]
   2817c:	mov	w10, w25
   28180:	cmp	w8, #0x8
   28184:	str	x10, [x9, #56]
   28188:	b.ls	28704 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xdb4>  // b.plast
   2818c:	mov	w8, w22
   28190:	str	x8, [x9, #64]
   28194:	ldp	x21, x22, [x20, #80]
   28198:	subs	x8, x22, x21
   2819c:	b.eq	283c0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa70>  // b.none
   281a0:	asr	x9, x8, #4
   281a4:	lsl	x9, x9, #4
   281a8:	sub	x10, x9, #0x10
   281ac:	add	x9, x21, #0x8
   281b0:	ldr	w11, [x9], #16
   281b4:	and	w25, w11, #0x7
   281b8:	cbnz	w25, 281cc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x87c>
   281bc:	sub	x11, x10, #0x10
   281c0:	mov	x12, x10
   281c4:	mov	x10, x11
   281c8:	cbnz	x12, 281b0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x860>
   281cc:	cbnz	x8, 281fc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8ac>
   281d0:	b	283b0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa60>
   281d4:	ldr	x9, [x20]
   281d8:	str	x24, [x9, w8, uxtw #3]
   281dc:	ldp	w8, w9, [x20, #8]
   281e0:	cmp	w8, w9
   281e4:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   281e8:	add	w8, w8, #0x1
   281ec:	str	w8, [x20, #8]
   281f0:	add	x21, x21, #0x10
   281f4:	cmp	x21, x22
   281f8:	b.eq	283ac <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa5c>  // b.none
   281fc:	ldr	x8, [x21]
   28200:	and	x9, x8, #0xfffffffffffffff8
   28204:	ldr	x8, [x16, #16]
   28208:	ldr	x9, [x9]
   2820c:	cbz	x8, 282c4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x974>
   28210:	mov	x11, x8
   28214:	mov	x10, x23
   28218:	ldr	x12, [x11, #32]
   2821c:	add	x13, x11, #0x18
   28220:	add	x14, x11, #0x10
   28224:	cmp	x12, x9
   28228:	csel	x10, x10, x11, cc  // cc = lo, ul, last
   2822c:	csel	x11, x13, x14, cc  // cc = lo, ul, last
   28230:	ldr	x11, [x11]
   28234:	cbnz	x11, 28218 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8c8>
   28238:	cmp	x10, x23
   2823c:	b.eq	282c4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x974>  // b.none
   28240:	ldr	x11, [x10, #32]
   28244:	cmp	x11, x9
   28248:	csel	x10, x23, x10, hi  // hi = pmore
   2824c:	cmp	x10, x23
   28250:	b.eq	282c4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x974>  // b.none
   28254:	ldr	w26, [x10, #40]
   28258:	ldr	x20, [x19, #32]
   2825c:	mov	w24, w26
   28260:	ldp	w8, w9, [x20, #8]
   28264:	cmp	w8, w9
   28268:	b.cs	2838c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa3c>  // b.hs, b.nlast
   2826c:	ldr	x9, [x20]
   28270:	str	x24, [x9, w8, uxtw #3]
   28274:	ldp	w8, w9, [x20, #8]
   28278:	cmp	w8, w9
   2827c:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   28280:	add	w8, w8, #0x1
   28284:	str	w8, [x20, #8]
   28288:	cbz	w25, 281f0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8a0>
   2828c:	ldr	x20, [x19, #32]
   28290:	ldr	w10, [x21, #8]
   28294:	ldp	w8, w9, [x20, #8]
   28298:	and	x24, x10, #0x7
   2829c:	cmp	w8, w9
   282a0:	b.cc	281d4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x884>  // b.lo, b.ul, b.last
   282a4:	add	x1, x20, #0x10
   282a8:	mov	w3, #0x8                   	// #8
   282ac:	mov	x0, x20
   282b0:	mov	x2, xzr
   282b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   282b8:	ldr	x16, [sp, #8]
   282bc:	ldr	w8, [x20, #8]
   282c0:	b	281d4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x884>
   282c4:	ldr	x0, [x27, #16]
   282c8:	ldr	x12, [x0, #192]
   282cc:	cbz	x12, 281f0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8a0>
   282d0:	add	x10, x0, #0xb8
   282d4:	mov	x11, x10
   282d8:	ldr	x13, [x12, #32]
   282dc:	add	x14, x12, #0x18
   282e0:	add	x15, x12, #0x10
   282e4:	cmp	x13, x9
   282e8:	csel	x11, x11, x12, cc  // cc = lo, ul, last
   282ec:	csel	x12, x14, x15, cc  // cc = lo, ul, last
   282f0:	ldr	x12, [x12]
   282f4:	cbnz	x12, 282d8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x988>
   282f8:	cmp	x11, x10
   282fc:	b.eq	281f0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8a0>  // b.none
   28300:	ldr	x12, [x11, #32]
   28304:	cmp	x12, x9
   28308:	csel	x9, x10, x11, hi  // hi = pmore
   2830c:	cmp	x9, x10
   28310:	b.eq	281f0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8a0>  // b.none
   28314:	ldr	x1, [x9, #40]
   28318:	cbz	x1, 281f0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8a0>
   2831c:	cbz	x8, 281f0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8a0>
   28320:	mov	x9, x23
   28324:	ldr	x10, [x8, #32]
   28328:	add	x11, x8, #0x18
   2832c:	add	x12, x8, #0x10
   28330:	cmp	x10, x1
   28334:	csel	x9, x9, x8, cc  // cc = lo, ul, last
   28338:	csel	x8, x11, x12, cc  // cc = lo, ul, last
   2833c:	ldr	x8, [x8]
   28340:	cbnz	x8, 28324 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x9d4>
   28344:	cmp	x9, x23
   28348:	b.eq	281f0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8a0>  // b.none
   2834c:	ldr	x8, [x9, #32]
   28350:	cmp	x8, x1
   28354:	csel	x8, x23, x9, hi  // hi = pmore
   28358:	cmp	x8, x23
   2835c:	b.eq	281f0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8a0>  // b.none
   28360:	ldr	w26, [x8, #40]
   28364:	mov	w2, wzr
   28368:	bl	0 <_ZNK4llvm18ModuleSummaryIndex21getGlobalValueSummaryEmb>
   2836c:	cbz	x0, 28384 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa34>
   28370:	ldr	w8, [x0, #8]
   28374:	ldr	x16, [sp, #8]
   28378:	cmp	w8, #0x2
   2837c:	b.eq	281f0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x8a0>  // b.none
   28380:	b	28258 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x908>
   28384:	ldr	x16, [sp, #8]
   28388:	b	28258 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x908>
   2838c:	add	x1, x20, #0x10
   28390:	mov	w3, #0x8                   	// #8
   28394:	mov	x0, x20
   28398:	mov	x2, xzr
   2839c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   283a0:	ldr	x16, [sp, #8]
   283a4:	ldr	w8, [x20, #8]
   283a8:	b	2826c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x91c>
   283ac:	ldr	x2, [x19, #32]
   283b0:	cbz	w25, 283c0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa70>
   283b4:	add	x8, x19, #0x40
   283b8:	mov	w1, #0x5                   	// #5
   283bc:	b	283c8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xa78>
   283c0:	add	x8, x19, #0x48
   283c4:	mov	w1, #0x4                   	// #4
   283c8:	ldr	x8, [x8]
   283cc:	ldr	x0, [x27]
   283d0:	ldr	w3, [x8]
   283d4:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   283d8:	ldr	x8, [x19, #32]
   283dc:	str	wzr, [x8, #8]
   283e0:	ldur	x8, [x29, #-8]
   283e4:	ldrb	w9, [x8, #12]
   283e8:	and	w9, w9, #0xf
   283ec:	sub	w9, w9, #0x7
   283f0:	cmp	w9, #0x1
   283f4:	b.hi	28448 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xaf8>  // b.pmore
   283f8:	ldr	x20, [x19, #48]
   283fc:	ldr	x22, [x8, #16]
   28400:	ldp	x19, x21, [x20]
   28404:	ldp	w9, w10, [x19, #8]
   28408:	cmp	w9, w10
   2840c:	b.cs	28628 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcd8>  // b.hs, b.nlast
   28410:	ldr	x8, [x19]
   28414:	str	x22, [x8, w9, uxtw #3]
   28418:	ldp	w8, w9, [x19, #8]
   2841c:	cmp	w8, w9
   28420:	b.cs	28644 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xcf4>  // b.hs, b.nlast
   28424:	add	w8, w8, #0x1
   28428:	str	w8, [x19, #8]
   2842c:	ldr	x0, [x21]
   28430:	ldr	x2, [x20]
   28434:	mov	w1, #0x9                   	// #9
   28438:	mov	w3, wzr
   2843c:	bl	0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28440:	ldr	x8, [x20]
   28444:	str	wzr, [x8, #8]
   28448:	ldp	x20, x19, [sp, #112]
   2844c:	ldp	x22, x21, [sp, #96]
   28450:	ldp	x24, x23, [sp, #80]
   28454:	ldp	x26, x25, [sp, #64]
   28458:	ldp	x28, x27, [sp, #48]
   2845c:	ldp	x29, x30, [sp, #32]
   28460:	add	sp, sp, #0x80
   28464:	ret
   28468:	cmp	x12, #0x0
   2846c:	csel	x3, x8, x12, eq  // eq = none
   28470:	b	27bec <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x29c>
   28474:	add	x1, x19, #0x10
   28478:	mov	w3, #0x8                   	// #8
   2847c:	mov	x0, x19
   28480:	mov	x2, xzr
   28484:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   28488:	ldr	w8, [x19, #8]
   2848c:	b	27c3c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x2ec>
   28490:	add	x1, x21, #0x10
   28494:	mov	w3, #0x8                   	// #8
   28498:	mov	x0, x21
   2849c:	mov	x2, xzr
   284a0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   284a4:	ldr	w8, [x21, #8]
   284a8:	b	27c7c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x32c>
   284ac:	add	x1, x21, #0x10
   284b0:	mov	w3, #0x8                   	// #8
   284b4:	mov	x0, x21
   284b8:	mov	x2, xzr
   284bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   284c0:	ldr	w8, [x21, #8]
   284c4:	b	27cfc <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x3ac>
   284c8:	add	x1, x21, #0x10
   284cc:	mov	w3, #0x8                   	// #8
   284d0:	mov	x0, x21
   284d4:	mov	x2, xzr
   284d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   284dc:	ldr	w8, [x21, #8]
   284e0:	mov	x14, x26
   284e4:	b	27d80 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x430>
   284e8:	add	x1, x21, #0x10
   284ec:	mov	w3, #0x8                   	// #8
   284f0:	mov	x0, x21
   284f4:	mov	x2, xzr
   284f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   284fc:	ldr	w8, [x21, #8]
   28500:	mov	x14, x26
   28504:	b	27db0 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x460>
   28508:	add	x1, x21, #0x10
   2850c:	mov	w3, #0x8                   	// #8
   28510:	mov	x0, x21
   28514:	mov	x2, xzr
   28518:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2851c:	ldr	w8, [x21, #8]
   28520:	mov	x14, x26
   28524:	b	27de4 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x494>
   28528:	add	x1, x21, #0x10
   2852c:	mov	w3, #0x8                   	// #8
   28530:	mov	x0, x21
   28534:	mov	x2, xzr
   28538:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2853c:	ldr	x16, [sp, #8]
   28540:	ldr	w8, [x21, #8]
   28544:	b	27ee8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x598>
   28548:	add	x1, x21, #0x10
   2854c:	mov	w3, #0x8                   	// #8
   28550:	mov	x0, x21
   28554:	mov	x2, xzr
   28558:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2855c:	ldr	x16, [sp, #8]
   28560:	ldr	w8, [x21, #8]
   28564:	b	27f18 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x5c8>
   28568:	add	x1, x21, #0x10
   2856c:	mov	w3, #0x8                   	// #8
   28570:	mov	x0, x21
   28574:	mov	x2, xzr
   28578:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2857c:	ldr	x16, [sp, #8]
   28580:	ldr	w8, [x21, #8]
   28584:	b	27f48 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x5f8>
   28588:	add	x1, x21, #0x10
   2858c:	mov	w3, #0x8                   	// #8
   28590:	mov	x0, x21
   28594:	mov	x2, xzr
   28598:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2859c:	ldr	x16, [sp, #8]
   285a0:	ldr	w8, [x21, #8]
   285a4:	b	27f7c <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x62c>
   285a8:	add	x1, x21, #0x10
   285ac:	mov	w3, #0x8                   	// #8
   285b0:	mov	x0, x21
   285b4:	mov	x2, xzr
   285b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   285bc:	ldr	x16, [sp, #8]
   285c0:	ldr	w8, [x21, #8]
   285c4:	b	27fac <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x65c>
   285c8:	add	x1, x21, #0x10
   285cc:	mov	w3, #0x8                   	// #8
   285d0:	mov	x0, x21
   285d4:	mov	x2, xzr
   285d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   285dc:	ldr	x16, [sp, #8]
   285e0:	ldr	w8, [x21, #8]
   285e4:	b	27fd8 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x688>
   285e8:	add	x1, x21, #0x10
   285ec:	mov	w3, #0x8                   	// #8
   285f0:	mov	x0, x21
   285f4:	mov	x2, xzr
   285f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   285fc:	ldr	x16, [sp, #8]
   28600:	ldr	w8, [x21, #8]
   28604:	b	28004 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x6b4>
   28608:	add	x1, x21, #0x10
   2860c:	mov	w3, #0x8                   	// #8
   28610:	mov	x0, x21
   28614:	mov	x2, xzr
   28618:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2861c:	ldr	x16, [sp, #8]
   28620:	ldr	w8, [x21, #8]
   28624:	b	28030 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0x6e0>
   28628:	add	x1, x19, #0x10
   2862c:	mov	w3, #0x8                   	// #8
   28630:	mov	x0, x19
   28634:	mov	x2, xzr
   28638:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   2863c:	ldr	w9, [x19, #8]
   28640:	b	28410 <_ZZN12_GLOBAL__N_118IndexBitcodeWriter31writeCombinedGlobalValueSummaryEvENK3$_1clESt4pairImPN4llvm18GlobalValueSummaryEEb+0xac0>
   28644:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28648:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2864c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28650:	add	x0, x0, #0x0
   28654:	add	x1, x1, #0x0
   28658:	add	x3, x3, #0x0
   2865c:	mov	w2, #0x43                  	// #67
   28660:	bl	0 <__assert_fail>
   28664:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28668:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2866c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28670:	add	x0, x0, #0x0
   28674:	add	x1, x1, #0x0
   28678:	add	x3, x3, #0x0
   2867c:	mov	w2, #0xfa1                 	// #4001
   28680:	bl	0 <__assert_fail>
   28684:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28688:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2868c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28690:	add	x0, x0, #0x0
   28694:	add	x1, x1, #0x0
   28698:	add	x3, x3, #0x0
   2869c:	mov	w2, #0x252                 	// #594
   286a0:	bl	0 <__assert_fail>
   286a4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   286a8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   286ac:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   286b0:	add	x0, x0, #0x0
   286b4:	add	x1, x1, #0x0
   286b8:	add	x3, x3, #0x0
   286bc:	mov	w2, #0xf9b                 	// #3995
   286c0:	bl	0 <__assert_fail>
   286c4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   286c8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   286cc:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   286d0:	add	x0, x0, #0x0
   286d4:	add	x1, x1, #0x0
   286d8:	add	x3, x3, #0x0
   286dc:	mov	w2, #0x69                  	// #105
   286e0:	bl	0 <__assert_fail>
   286e4:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   286e8:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   286ec:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   286f0:	add	x0, x0, #0x0
   286f4:	add	x1, x1, #0x0
   286f8:	add	x3, x3, #0x0
   286fc:	mov	w2, #0xc3                  	// #195
   28700:	bl	0 <__assert_fail>
   28704:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28708:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2870c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28710:	add	x0, x0, #0x0
   28714:	add	x1, x1, #0x0
   28718:	add	x3, x3, #0x0
   2871c:	mov	w2, #0x95                  	// #149
   28720:	bl	0 <__assert_fail>
   28724:	adrp	x0, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28728:	adrp	x1, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   2872c:	adrp	x3, 0 <_ZN4llvm13BitcodeWriterC1ERNS_15SmallVectorImplIcEE>
   28730:	add	x0, x0, #0x0
   28734:	add	x1, x1, #0x0
   28738:	add	x3, x3, #0x0
   2873c:	mov	w2, #0x108                 	// #264
   28740:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZTVN4llvm2cl3optIjLb0ENS0_6parserIjEEEE>
  10:	ldr	x8, [x0, #184]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	x8, 38 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev+0x38>
  28:	add	x0, x19, #0xa8
  2c:	mov	w2, #0x3                   	// #3
  30:	mov	x1, x0
  34:	blr	x8
  38:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  3c:	ldp	x8, x0, [x19, #96]
  40:	ldr	x9, [x9]
  44:	cmp	x0, x8
  48:	add	x9, x9, #0x10
  4c:	str	x9, [x19]
  50:	b.eq	58 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	ldr	x8, [x19, #88]
  5c:	ldr	x0, [x19, #64]
  60:	add	x9, x19, #0x50
  64:	add	x8, x8, #0x1
  68:	cmp	x0, x9
  6c:	str	x8, [x19, #88]
  70:	b.eq	80 <_ZN4llvm2cl3optIjLb0ENS0_6parserIjEEED2Ev+0x80>  // b.none
  74:	ldr	x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	b	0 <free>
  80:	ldr	x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
  10:	ldr	x8, [x0, #184]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	x8, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x38>
  28:	add	x0, x19, #0xa8
  2c:	mov	w2, #0x3                   	// #3
  30:	mov	x1, x0
  34:	blr	x8
  38:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  3c:	ldp	x8, x0, [x19, #96]
  40:	ldr	x9, [x9]
  44:	cmp	x0, x8
  48:	add	x9, x9, #0x10
  4c:	str	x9, [x19]
  50:	b.eq	58 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	ldr	x8, [x19, #88]
  5c:	ldr	x0, [x19, #64]
  60:	add	x9, x19, #0x50
  64:	add	x8, x8, #0x1
  68:	cmp	x0, x9
  6c:	str	x8, [x19, #88]
  70:	b.eq	80 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x80>  // b.none
  74:	ldr	x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	b	0 <free>
  80:	ldr	x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter13EnterSubblockEjj:

0000000000000000 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	str	x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	mov	w21, w2
  1c:	ldr	w2, [x0, #16]
  20:	mov	w20, w1
  24:	mov	w1, #0x1                   	// #1
  28:	mov	x19, x0
  2c:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  30:	cmp	w20, #0x80
  34:	mov	w1, w20
  38:	b.cc	64 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x64>  // b.lo, b.ul, b.last
  3c:	mov	w22, w20
  40:	mov	w1, #0x80                  	// #128
  44:	bfxil	w1, w22, #0, #7
  48:	mov	w2, #0x8                   	// #8
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  54:	lsr	w1, w22, #7
  58:	lsr	w8, w22, #14
  5c:	mov	w22, w1
  60:	cbnz	w8, 40 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x40>
  64:	mov	w2, #0x8                   	// #8
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  70:	cmp	w21, #0x8
  74:	mov	w1, w21
  78:	b.cc	a4 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0xa4>  // b.lo, b.ul, b.last
  7c:	mov	w22, w21
  80:	mov	w1, #0x8                   	// #8
  84:	bfxil	w1, w22, #0, #3
  88:	mov	w2, #0x4                   	// #4
  8c:	mov	x0, x19
  90:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  94:	lsr	w1, w22, #3
  98:	cmp	w22, #0x3f
  9c:	mov	w22, w1
  a0:	b.hi	80 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x80>  // b.pmore
  a4:	mov	w2, #0x4                   	// #4
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
  b0:	ldr	w8, [x19, #8]
  b4:	cbz	w8, 108 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x108>
  b8:	ldr	x22, [x19]
  bc:	ldr	w23, [x19, #12]
  c0:	ldp	w8, w9, [x22, #8]
  c4:	sub	x9, x9, x8
  c8:	cmp	x9, #0x3
  cc:	b.hi	e8 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0xe8>  // b.pmore
  d0:	add	x2, x8, #0x4
  d4:	add	x1, x22, #0x10
  d8:	mov	w3, #0x1                   	// #1
  dc:	mov	x0, x22
  e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  e4:	ldr	w8, [x22, #8]
  e8:	ldr	x9, [x22]
  ec:	str	w23, [x9, x8]
  f0:	ldp	w8, w9, [x22, #8]
  f4:	add	x8, x8, #0x4
  f8:	cmp	x8, x9
  fc:	b.hi	258 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x258>  // b.pmore
 100:	str	w8, [x22, #8]
 104:	str	xzr, [x19, #8]
 108:	ldr	x22, [x19]
 10c:	ldr	w8, [x22, #8]
 110:	tst	x8, #0x3
 114:	b.ne	278 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x278>  // b.any
 118:	lsr	x9, x8, #2
 11c:	str	x9, [x29, #24]
 120:	ldp	w23, w9, [x19, #12]
 124:	stur	w9, [x29, #-4]
 128:	ldr	w9, [x22, #12]
 12c:	sub	x9, x9, x8
 130:	cmp	x9, #0x3
 134:	b.hi	150 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x150>  // b.pmore
 138:	add	x2, x8, #0x4
 13c:	add	x1, x22, #0x10
 140:	mov	w3, #0x1                   	// #1
 144:	mov	x0, x22
 148:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 14c:	ldr	w8, [x22, #8]
 150:	ldr	x9, [x22]
 154:	str	w23, [x9, x8]
 158:	ldp	w8, w9, [x22, #8]
 15c:	add	x8, x8, #0x4
 160:	cmp	x8, x9
 164:	b.hi	258 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x258>  // b.pmore
 168:	str	w8, [x22, #8]
 16c:	ldr	w8, [x19, #8]
 170:	ldp	x1, x9, [x19, #56]
 174:	str	w21, [x19, #16]
 178:	and	w8, w8, #0x1f
 17c:	cmp	x1, x9
 180:	stp	w8, wzr, [x19, #8]
 184:	b.eq	1ac <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x1ac>  // b.none
 188:	ldur	w8, [x29, #-4]
 18c:	ldr	x9, [x29, #24]
 190:	stp	xzr, xzr, [x1, #24]
 194:	str	w8, [x1]
 198:	stp	x9, xzr, [x1, #8]
 19c:	ldr	x8, [x19, #56]
 1a0:	add	x8, x8, #0x28
 1a4:	str	x8, [x19, #56]
 1a8:	b	1c0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x1c0>
 1ac:	add	x0, x19, #0x30
 1b0:	sub	x2, x29, #0x4
 1b4:	add	x3, x29, #0x18
 1b8:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 1bc:	ldr	x8, [x19, #56]
 1c0:	ldr	q1, [x19, #24]!
 1c4:	ldur	x10, [x8, #-24]
 1c8:	ldur	q0, [x8, #-16]
 1cc:	stur	q1, [x8, #-24]
 1d0:	ldr	x9, [x19, #16]
 1d4:	stur	x9, [x8, #-8]
 1d8:	ldp	x8, x9, [x19, #48]
 1dc:	str	x10, [x19]
 1e0:	stur	q0, [x19, #8]
 1e4:	cmp	x8, x9
 1e8:	b.eq	210 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x210>  // b.none
 1ec:	mov	x10, x9
 1f0:	ldr	w11, [x10, #-32]!
 1f4:	cmp	w11, w20
 1f8:	b.ne	210 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x210>  // b.any
 1fc:	ldp	x2, x3, [x10, #8]
 200:	fmov	x1, d0
 204:	mov	x0, x19
 208:	bl	0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 20c:	b	240 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x240>
 210:	sub	x9, x9, x8
 214:	lsr	x9, x9, #5
 218:	cbz	w9, 240 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x240>
 21c:	mov	w11, wzr
 220:	mov	w10, w11
 224:	add	x10, x8, x10, lsl #5
 228:	ldr	w12, [x10]
 22c:	cmp	w12, w20
 230:	b.eq	1fc <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x1fc>  // b.none
 234:	add	w11, w11, #0x1
 238:	cmp	w9, w11
 23c:	b.ne	220 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj+0x220>  // b.any
 240:	ldp	x20, x19, [sp, #64]
 244:	ldp	x22, x21, [sp, #48]
 248:	ldr	x23, [sp, #32]
 24c:	ldp	x29, x30, [sp, #16]
 250:	add	sp, sp, #0x50
 254:	ret
 258:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 25c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 260:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 264:	add	x0, x0, #0x0
 268:	add	x1, x1, #0x0
 26c:	add	x3, x3, #0x0
 270:	mov	w2, #0x43                  	// #67
 274:	bl	0 <__assert_fail>
 278:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 27c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 280:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13EnterSubblockEjj>
 284:	add	x0, x0, #0x0
 288:	add	x1, x1, #0x0
 28c:	add	x3, x3, #0x0
 290:	mov	w2, #0x4f                  	// #79
 294:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter9ExitBlockEv:

0000000000000000 <_ZN4llvm15BitstreamWriter9ExitBlockEv>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	x8, x21, [x0, #48]
  18:	cmp	x8, x21
  1c:	b.eq	1c8 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x1c8>  // b.none
  20:	ldr	w2, [x0, #16]
  24:	mov	w1, wzr
  28:	mov	x19, x0
  2c:	bl	0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  30:	ldr	w8, [x19, #8]
  34:	cbz	w8, 88 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x88>
  38:	ldr	x20, [x19]
  3c:	ldr	w22, [x19, #12]
  40:	ldp	w8, w9, [x20, #8]
  44:	sub	x9, x9, x8
  48:	cmp	x9, #0x3
  4c:	b.hi	68 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x68>  // b.pmore
  50:	add	x2, x8, #0x4
  54:	add	x1, x20, #0x10
  58:	mov	w3, #0x1                   	// #1
  5c:	mov	x0, x20
  60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  64:	ldr	w8, [x20, #8]
  68:	ldr	x9, [x20]
  6c:	str	w22, [x9, x8]
  70:	ldp	w8, w9, [x20, #8]
  74:	add	x8, x8, #0x4
  78:	cmp	x8, x9
  7c:	b.hi	208 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x208>  // b.pmore
  80:	str	w8, [x20, #8]
  84:	str	xzr, [x19, #8]
  88:	ldr	x8, [x19]
  8c:	ldr	w8, [x8, #8]
  90:	tst	x8, #0x3
  94:	b.ne	1e8 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x1e8>  // b.any
  98:	ldur	x9, [x21, #-32]
  9c:	lsr	x8, x8, #2
  a0:	mov	x0, x19
  a4:	mvn	w10, w9
  a8:	add	w2, w10, w8
  ac:	lsl	x1, x9, #5
  b0:	bl	0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  b4:	ldur	w8, [x21, #-40]
  b8:	sub	x1, x21, #0x18
  bc:	add	x0, x19, #0x18
  c0:	str	w8, [x19, #16]
  c4:	bl	0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
  c8:	ldr	x21, [x19, #56]
  cc:	sub	x8, x21, #0x28
  d0:	str	x8, [x19, #56]
  d4:	ldp	x19, x22, [x21, #-24]
  d8:	cmp	x19, x22
  dc:	b.eq	198 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x198>  // b.none
  e0:	adrp	x23, 0 <__pthread_key_create>
  e4:	ldr	x23, [x23]
  e8:	b	f8 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xf8>
  ec:	add	x19, x19, #0x10
  f0:	cmp	x19, x22
  f4:	b.eq	194 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x194>  // b.none
  f8:	ldr	x20, [x19, #8]
  fc:	cbz	x20, ec <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xec>
 100:	add	x8, x20, #0x8
 104:	cbz	x23, 124 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x124>
 108:	ldaxr	w9, [x8]
 10c:	sub	w10, w9, #0x1
 110:	stlxr	w11, w10, [x8]
 114:	cbnz	w11, 108 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x108>
 118:	cmp	w9, #0x1
 11c:	b.ne	ec <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xec>  // b.any
 120:	b	138 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x138>
 124:	ldr	w9, [x8]
 128:	sub	w10, w9, #0x1
 12c:	str	w10, [x8]
 130:	cmp	w9, #0x1
 134:	b.ne	ec <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xec>  // b.any
 138:	mov	x24, x20
 13c:	ldr	x8, [x24], #12
 140:	mov	x0, x20
 144:	ldr	x8, [x8, #16]
 148:	blr	x8
 14c:	cbz	x23, 16c <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x16c>
 150:	ldaxr	w8, [x24]
 154:	sub	w9, w8, #0x1
 158:	stlxr	w10, w9, [x24]
 15c:	cbnz	w10, 150 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x150>
 160:	cmp	w8, #0x1
 164:	b.ne	ec <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xec>  // b.any
 168:	b	180 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x180>
 16c:	ldr	w8, [x24]
 170:	sub	w9, w8, #0x1
 174:	str	w9, [x24]
 178:	cmp	w8, #0x1
 17c:	b.ne	ec <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xec>  // b.any
 180:	ldr	x8, [x20]
 184:	mov	x0, x20
 188:	ldr	x8, [x8, #24]
 18c:	blr	x8
 190:	b	ec <_ZN4llvm15BitstreamWriter9ExitBlockEv+0xec>
 194:	ldur	x19, [x21, #-24]
 198:	cbz	x19, 1b4 <_ZN4llvm15BitstreamWriter9ExitBlockEv+0x1b4>
 19c:	mov	x0, x19
 1a0:	ldp	x20, x19, [sp, #48]
 1a4:	ldp	x22, x21, [sp, #32]
 1a8:	ldp	x24, x23, [sp, #16]
 1ac:	ldp	x29, x30, [sp], #64
 1b0:	b	0 <_ZdlPv>
 1b4:	ldp	x20, x19, [sp, #48]
 1b8:	ldp	x22, x21, [sp, #32]
 1bc:	ldp	x24, x23, [sp, #16]
 1c0:	ldp	x29, x30, [sp], #64
 1c4:	ret
 1c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 1cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 1d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 1d4:	add	x0, x0, #0x0
 1d8:	add	x1, x1, #0x0
 1dc:	add	x3, x3, #0x0
 1e0:	mov	w2, #0xe5                  	// #229
 1e4:	bl	0 <__assert_fail>
 1e8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 1ec:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 1f0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x4f                  	// #79
 204:	bl	0 <__assert_fail>
 208:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 20c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 210:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9ExitBlockEv>
 214:	add	x0, x0, #0x0
 218:	add	x1, x1, #0x0
 21c:	add	x3, x3, #0x0
 220:	mov	w2, #0x43                  	// #67
 224:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12consumeErrorENS_5ErrorE:

0000000000000000 <_ZN4llvm12consumeErrorENS_5ErrorE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #112]
   8:	add	x29, sp, #0x70
   c:	ldr	x8, [x0]
  10:	str	xzr, [x0]
  14:	add	x0, sp, #0x10
  18:	add	x1, sp, #0x8
  1c:	orr	x8, x8, #0x1
  20:	str	x8, [sp, #16]
  24:	add	x8, sp, #0x18
  28:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  2c:	ldr	x8, [sp, #24]
  30:	tst	x8, #0xfffffffffffffffe
  34:	and	x9, x8, #0xfffffffffffffffe
  38:	cset	w8, ne  // ne = any
  3c:	orr	x8, x9, x8
  40:	str	x8, [sp, #24]
  44:	cbnz	x9, 60 <_ZN4llvm12consumeErrorENS_5ErrorE+0x60>
  48:	cbnz	x8, d0 <_ZN4llvm12consumeErrorENS_5ErrorE+0xd0>
  4c:	ldr	x8, [sp, #16]
  50:	cbnz	x8, d8 <_ZN4llvm12consumeErrorENS_5ErrorE+0xd8>
  54:	ldp	x29, x30, [sp, #112]
  58:	add	sp, sp, #0x80
  5c:	ret
  60:	sturb	wzr, [x29, #-16]
  64:	stp	xzr, xzr, [sp, #48]
  68:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
  6c:	ldr	x10, [x10]
  70:	sub	x8, x29, #0x20
  74:	mov	w9, #0x1                   	// #1
  78:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  7c:	add	x11, x8, #0x10
  80:	str	w9, [sp, #64]
  84:	add	x9, x10, #0x10
  88:	add	x1, x1, #0x0
  8c:	add	x0, sp, #0x20
  90:	stp	x11, xzr, [x29, #-32]
  94:	stp	x9, xzr, [sp, #32]
  98:	str	x8, [sp, #72]
  9c:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  a0:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  ac:	add	x1, sp, #0x18
  b0:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  b4:	add	x0, sp, #0x20
  b8:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  bc:	ldr	x0, [x0]
  c0:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  c4:	add	x1, x1, #0x0
  c8:	mov	w2, #0x2c9                 	// #713
  cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  d0:	add	x0, sp, #0x18
  d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  d8:	add	x0, sp, #0x10
  dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm15SmallVectorImplIcE6insertEPcmRKc:

0000000000000000 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0]
  1c:	ldr	w8, [x0, #8]
  20:	mov	x20, x3
  24:	mov	x19, x2
  28:	mov	x21, x0
  2c:	add	x10, x9, x8
  30:	cmp	x10, x1
  34:	sub	x25, x1, x9
  38:	b.eq	e0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0xe0>  // b.none
  3c:	cmp	x9, x1
  40:	b.hi	204 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x204>  // b.pmore
  44:	cmp	x10, x1
  48:	b.cc	224 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x224>  // b.lo, b.ul, b.last
  4c:	ldr	w10, [x21, #12]
  50:	add	x2, x8, x19
  54:	cmp	x2, x10
  58:	b.ls	74 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x74>  // b.plast
  5c:	add	x1, x21, #0x10
  60:	mov	w3, #0x1                   	// #1
  64:	mov	x0, x21
  68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  6c:	ldr	x9, [x21]
  70:	ldr	w8, [x21, #8]
  74:	add	x22, x9, x25
  78:	add	x23, x9, x8
  7c:	sub	x24, x23, x22
  80:	cmp	x24, x19
  84:	b.cs	110 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x110>  // b.hs, b.nlast
  88:	ldr	w11, [x21, #12]
  8c:	add	x10, x8, x19
  90:	cmp	x10, x11
  94:	b.hi	1e4 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1e4>  // b.pmore
  98:	cmp	x25, x8
  9c:	str	w10, [x21, #8]
  a0:	b.eq	b8 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0xb8>  // b.none
  a4:	add	x8, x9, w10, uxtw
  a8:	sub	x0, x8, x24
  ac:	mov	x1, x22
  b0:	mov	x2, x24
  b4:	bl	0 <memcpy>
  b8:	cbz	x24, cc <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0xcc>
  bc:	ldrb	w1, [x20]
  c0:	mov	x0, x22
  c4:	mov	x2, x24
  c8:	bl	0 <memset>
  cc:	subs	x2, x19, x24
  d0:	b.eq	1c8 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1c8>  // b.none
  d4:	ldrb	w1, [x20]
  d8:	mov	x0, x23
  dc:	b	1c4 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1c4>
  e0:	ldr	w10, [x21, #12]
  e4:	sub	x11, x10, x8
  e8:	cmp	x11, x19
  ec:	b.cs	144 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x144>  // b.hs, b.nlast
  f0:	add	x2, x8, x19
  f4:	add	x1, x21, #0x10
  f8:	mov	w3, #0x1                   	// #1
  fc:	mov	x0, x21
 100:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 104:	ldr	x9, [x21]
 108:	ldr	w8, [x21, #8]
 10c:	b	148 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x148>
 110:	ldr	w10, [x21, #12]
 114:	sub	x24, x23, x19
 118:	sub	x11, x10, x8
 11c:	cmp	x11, x19
 120:	b.cs	178 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x178>  // b.hs, b.nlast
 124:	add	x2, x8, x19
 128:	add	x1, x21, #0x10
 12c:	mov	w3, #0x1                   	// #1
 130:	mov	x0, x21
 134:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 138:	ldr	x9, [x21]
 13c:	ldr	w8, [x21, #8]
 140:	b	17c <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x17c>
 144:	cbz	x19, 15c <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x15c>
 148:	ldrb	w1, [x20]
 14c:	add	x0, x9, x8
 150:	mov	x2, x19
 154:	bl	0 <memset>
 158:	ldp	w8, w10, [x21, #8]
 15c:	add	x8, x8, x19
 160:	cmp	x8, x10
 164:	b.hi	1e4 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1e4>  // b.pmore
 168:	ldr	x9, [x21]
 16c:	str	w8, [x21, #8]
 170:	add	x22, x9, x25
 174:	b	1c8 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1c8>
 178:	cbz	x19, 190 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x190>
 17c:	add	x0, x9, x8
 180:	mov	x1, x24
 184:	mov	x2, x19
 188:	bl	0 <memmove>
 18c:	ldp	w8, w10, [x21, #8]
 190:	add	x8, x8, x19
 194:	cmp	x8, x10
 198:	b.hi	1e4 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1e4>  // b.pmore
 19c:	subs	x2, x24, x22
 1a0:	str	w8, [x21, #8]
 1a4:	b.eq	1b4 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1b4>  // b.none
 1a8:	sub	x0, x23, x2
 1ac:	mov	x1, x22
 1b0:	bl	0 <memmove>
 1b4:	cbz	x19, 1c8 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc+0x1c8>
 1b8:	ldrb	w1, [x20]
 1bc:	mov	x0, x22
 1c0:	mov	x2, x19
 1c4:	bl	0 <memset>
 1c8:	mov	x0, x22
 1cc:	ldp	x20, x19, [sp, #64]
 1d0:	ldp	x22, x21, [sp, #48]
 1d4:	ldp	x24, x23, [sp, #32]
 1d8:	ldr	x25, [sp, #16]
 1dc:	ldp	x29, x30, [sp], #80
 1e0:	ret
 1e4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 1e8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 1ec:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 1f0:	add	x0, x0, #0x0
 1f4:	add	x1, x1, #0x0
 1f8:	add	x3, x3, #0x0
 1fc:	mov	w2, #0x43                  	// #67
 200:	bl	0 <__assert_fail>
 204:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 208:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 20c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 210:	add	x0, x0, #0x0
 214:	add	x1, x1, #0x0
 218:	add	x3, x3, #0x0
 21c:	mov	w2, #0x217                 	// #535
 220:	bl	0 <__assert_fail>
 224:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 228:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 22c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIcE6insertEPcmRKc>
 230:	add	x0, x0, #0x0
 234:	add	x1, x1, #0x0
 238:	add	x3, x3, #0x0
 23c:	mov	w2, #0x218                 	// #536
 240:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18raw_string_ostream3strB5cxx11Ev:

0000000000000000 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter4EmitEjj:

0000000000000000 <_ZN4llvm15BitstreamWriter4EmitEjj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	w8, w2, #0x1
  18:	cmp	w8, #0x1f
  1c:	b.hi	dc <_ZN4llvm15BitstreamWriter4EmitEjj+0xdc>  // b.pmore
  20:	neg	w8, w2
  24:	mov	w9, #0xffffffff            	// #-1
  28:	lsr	w8, w9, w8
  2c:	mov	w20, w2
  30:	mov	w21, w1
  34:	bics	wzr, w1, w8
  38:	b.ne	fc <_ZN4llvm15BitstreamWriter4EmitEjj+0xfc>  // b.any
  3c:	ldp	w8, w9, [x0, #8]
  40:	mov	x19, x0
  44:	lsl	w10, w21, w8
  48:	add	w8, w8, w20
  4c:	orr	w23, w9, w10
  50:	cmp	w8, #0x20
  54:	str	w23, [x0, #12]
  58:	b.cc	c4 <_ZN4llvm15BitstreamWriter4EmitEjj+0xc4>  // b.lo, b.ul, b.last
  5c:	ldr	x22, [x19]
  60:	ldp	w8, w9, [x22, #8]
  64:	sub	x9, x9, x8
  68:	cmp	x9, #0x3
  6c:	b.hi	88 <_ZN4llvm15BitstreamWriter4EmitEjj+0x88>  // b.pmore
  70:	add	x2, x8, #0x4
  74:	add	x1, x22, #0x10
  78:	mov	w3, #0x1                   	// #1
  7c:	mov	x0, x22
  80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  84:	ldr	w8, [x22, #8]
  88:	ldr	x9, [x22]
  8c:	str	w23, [x9, x8]
  90:	ldp	w8, w9, [x22, #8]
  94:	add	x8, x8, #0x4
  98:	cmp	x8, x9
  9c:	b.hi	11c <_ZN4llvm15BitstreamWriter4EmitEjj+0x11c>  // b.pmore
  a0:	str	w8, [x22, #8]
  a4:	ldr	w8, [x19, #8]
  a8:	neg	w9, w8
  ac:	cmp	w8, #0x0
  b0:	add	w8, w8, w20
  b4:	lsr	w9, w21, w9
  b8:	csel	w9, wzr, w9, eq  // eq = none
  bc:	and	w8, w8, #0x1f
  c0:	str	w9, [x19, #12]
  c4:	str	w8, [x19, #8]
  c8:	ldp	x20, x19, [sp, #48]
  cc:	ldp	x22, x21, [sp, #32]
  d0:	ldr	x23, [sp, #16]
  d4:	ldp	x29, x30, [sp], #64
  d8:	ret
  dc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  e0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  e4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x78                  	// #120
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 100:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 104:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x79                  	// #121
 118:	bl	0 <__assert_fail>
 11c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 120:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 124:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter4EmitEjj>
 128:	add	x0, x0, #0x0
 12c:	add	x1, x1, #0x0
 130:	add	x3, x3, #0x0
 134:	mov	w2, #0x43                  	// #67
 138:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x25, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x25, x20
  24:	cmp	x8, x9
  28:	b.eq	150 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.none
  2c:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  30:	asr	x9, x8, #3
  34:	movk	x10, #0xcccd
  38:	cmp	x8, #0x0
  3c:	mul	x9, x9, x10
  40:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  44:	csinc	x10, x9, xzr, ne  // ne = any
  48:	movk	x8, #0x333, lsl #48
  4c:	adds	x9, x10, x9
  50:	cset	w10, cs  // cs = hs, nlast
  54:	cmp	x9, x8
  58:	cset	w11, hi  // hi = pmore
  5c:	orr	w10, w10, w11
  60:	cmp	w10, #0x0
  64:	csel	x26, x8, x9, ne  // ne = any
  68:	add	x8, x26, x26, lsl #2
  6c:	mov	x19, x0
  70:	lsl	x0, x8, #3
  74:	mov	x23, x3
  78:	mov	x24, x2
  7c:	mov	x21, x1
  80:	bl	0 <_Znwm>
  84:	ldr	w8, [x24]
  88:	ldr	x9, [x23]
  8c:	subs	x10, x21, x20
  90:	add	x10, x0, x10
  94:	mov	x22, x0
  98:	str	w8, [x10]
  9c:	mov	x8, x0
  a0:	stp	x9, xzr, [x10, #8]
  a4:	stp	xzr, xzr, [x10, #24]
  a8:	b.eq	e0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe0>  // b.none
  ac:	mov	x9, x20
  b0:	ldr	q0, [x9]
  b4:	str	q0, [x8]
  b8:	ldr	q0, [x9, #16]
  bc:	str	q0, [x8, #16]
  c0:	ldr	x10, [x9, #32]
  c4:	str	x10, [x8, #32]
  c8:	stp	xzr, xzr, [x9, #16]
  cc:	str	xzr, [x9, #32]
  d0:	add	x9, x9, #0x28
  d4:	cmp	x9, x21
  d8:	add	x8, x8, #0x28
  dc:	b.ne	b0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xb0>  // b.any
  e0:	cmp	x25, x21
  e4:	add	x23, x8, #0x28
  e8:	b.eq	11c <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>  // b.none
  ec:	ldr	q0, [x21]
  f0:	str	q0, [x23]
  f4:	ldr	q0, [x21, #16]
  f8:	str	q0, [x23, #16]
  fc:	ldr	x8, [x21, #32]
 100:	str	x8, [x23, #32]
 104:	stp	xzr, xzr, [x21, #16]
 108:	str	xzr, [x21, #32]
 10c:	add	x21, x21, #0x28
 110:	cmp	x21, x25
 114:	add	x23, x23, #0x28
 118:	b.ne	ec <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xec>  // b.any
 11c:	cbz	x20, 128 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x128>
 120:	mov	x0, x20
 124:	bl	0 <_ZdlPv>
 128:	mov	w8, #0x28                  	// #40
 12c:	madd	x8, x26, x8, x22
 130:	stp	x22, x23, [x19]
 134:	str	x8, [x19, #16]
 138:	ldp	x20, x19, [sp, #64]
 13c:	ldp	x22, x21, [sp, #48]
 140:	ldp	x24, x23, [sp, #32]
 144:	ldp	x26, x25, [sp, #16]
 148:	ldp	x29, x30, [sp], #80
 14c:	ret
 150:	adrp	x0, 0 <_ZNSt6vectorIN4llvm15BitstreamWriter5BlockESaIS2_EE17_M_realloc_insertIJRjRmEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	cmp	x2, x3
  20:	b.eq	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x358>  // b.none
  24:	ldp	x22, x9, [x0, #8]
  28:	sub	x24, x3, x2
  2c:	asr	x8, x24, #4
  30:	mov	x23, x3
  34:	sub	x9, x9, x22
  38:	mov	x20, x2
  3c:	mov	x19, x1
  40:	mov	x21, x0
  44:	cmp	x8, x9, asr #4
  48:	b.ls	a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xa8>  // b.plast
  4c:	ldr	x9, [x21]
  50:	sub	x10, x22, x9
  54:	asr	x11, x10, #4
  58:	mov	x10, #0x7ffffffffffffff     	// #576460752303423487
  5c:	sub	x12, x10, x11
  60:	cmp	x12, x8
  64:	b.cc	790 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x790>  // b.lo, b.ul, b.last
  68:	cmp	x11, x8
  6c:	csel	x8, x8, x11, cc  // cc = lo, ul, last
  70:	adds	x8, x8, x11
  74:	lsr	x12, x8, #59
  78:	cset	w11, cs  // cs = hs, nlast
  7c:	cmp	x12, #0x0
  80:	cset	w12, ne  // ne = any
  84:	orr	w11, w11, w12
  88:	cmp	w11, #0x0
  8c:	csel	x24, x10, x8, ne  // ne = any
  90:	cbz	x24, 26c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x26c>
  94:	lsl	x0, x24, #4
  98:	bl	0 <_Znwm>
  9c:	ldr	x9, [x21]
  a0:	mov	x22, x0
  a4:	b	270 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x270>
  a8:	sub	x9, x22, x19
  ac:	asr	x9, x9, #4
  b0:	subs	x10, x8, x9
  b4:	b.cs	200 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x200>  // b.hs, b.nlast
  b8:	sub	x23, x22, x8, lsl #4
  bc:	cbz	x24, 5a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5a4>
  c0:	sub	x10, x24, #0x10
  c4:	lsr	x9, x10, #4
  c8:	cbz	x9, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x578>
  cc:	add	x11, x22, #0x8
  d0:	and	x10, x10, #0xfffffffffffffff0
  d4:	mvn	x11, x11
  d8:	cmp	x10, x11
  dc:	b.hi	578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x578>  // b.pmore
  e0:	neg	x12, x8
  e4:	add	x11, x22, x12, lsl #4
  e8:	add	x11, x11, #0x8
  ec:	mvn	x11, x11
  f0:	cmp	x10, x11
  f4:	mov	x11, x22
  f8:	mov	x10, x23
  fc:	b.hi	580 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x580>  // b.pmore
 100:	add	x10, x22, x9, lsl #4
 104:	sub	x11, x9, x8
 108:	add	x18, x10, #0x8
 10c:	add	x10, x22, x11, lsl #4
 110:	add	x12, x22, x12, lsl #4
 114:	add	x13, x9, #0x1
 118:	cmp	x22, x10
 11c:	add	x0, x12, #0x8
 120:	sub	x11, x13, x8
 124:	add	x1, x22, x13, lsl #4
 128:	add	x12, x10, #0x8
 12c:	cset	w13, cc  // cc = lo, ul, last
 130:	cmp	x23, x18
 134:	add	x15, x22, x11, lsl #4
 138:	cset	w11, cc  // cc = lo, ul, last
 13c:	cmp	x22, x12
 140:	and	w2, w13, w11
 144:	cset	w13, cc  // cc = lo, ul, last
 148:	cmp	x23, x12
 14c:	add	x17, x22, #0x8
 150:	cset	w12, cc  // cc = lo, ul, last
 154:	cmp	x23, x10
 158:	cset	w14, cc  // cc = lo, ul, last
 15c:	cmp	x17, x15
 160:	cset	w10, cc  // cc = lo, ul, last
 164:	cmp	x0, x18
 168:	cset	w16, cc  // cc = lo, ul, last
 16c:	cmp	x17, x1
 170:	cset	w15, cc  // cc = lo, ul, last
 174:	cmp	x17, x18
 178:	cset	w18, cc  // cc = lo, ul, last
 17c:	cmp	x0, x1
 180:	cset	w17, cc  // cc = lo, ul, last
 184:	tbnz	w2, #0, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x578>
 188:	and	w11, w13, w11
 18c:	tbnz	w11, #0, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x578>
 190:	and	w11, w12, w14
 194:	tbnz	w11, #0, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x578>
 198:	and	w11, w10, w16
 19c:	tbnz	w11, #0, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x578>
 1a0:	and	w11, w15, w18
 1a4:	tbnz	w11, #0, 578 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x578>
 1a8:	and	w12, w17, w10
 1ac:	mov	x11, x22
 1b0:	mov	x10, x23
 1b4:	tbnz	w12, #0, 580 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x580>
 1b8:	add	x9, x9, #0x1
 1bc:	and	x12, x9, #0x1ffffffffffffffe
 1c0:	lsl	x10, x12, #4
 1c4:	neg	x13, x8, lsl #4
 1c8:	add	x11, x22, x10
 1cc:	add	x10, x23, x10
 1d0:	movi	v0.2d, #0x0
 1d4:	mov	x14, x12
 1d8:	mov	x15, x22
 1dc:	add	x16, x15, x13
 1e0:	ldp	q2, q1, [x16]
 1e4:	subs	x14, x14, #0x2
 1e8:	stp	q2, q1, [x15], #32
 1ec:	stp	q0, q0, [x16]
 1f0:	b.ne	1dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1dc>  // b.any
 1f4:	cmp	x9, x12
 1f8:	b.ne	580 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x580>  // b.any
 1fc:	b	5a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5a4>
 200:	adrp	x24, 0 <__pthread_key_create>
 204:	ldr	x24, [x24]
 208:	add	x9, x20, x9, lsl #4
 20c:	cmp	x9, x23
 210:	mov	x11, x22
 214:	b.eq	42c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x42c>  // b.none
 218:	mov	x12, x9
 21c:	b	23c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x23c>
 220:	ldr	w14, [x13]
 224:	add	w14, w14, #0x1
 228:	str	w14, [x13]
 22c:	add	x12, x12, #0x10
 230:	cmp	x12, x23
 234:	add	x11, x11, #0x10
 238:	b.eq	428 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x428>  // b.none
 23c:	ldr	x13, [x12]
 240:	str	x13, [x11]
 244:	ldr	x13, [x12, #8]
 248:	str	x13, [x11, #8]
 24c:	cbz	x13, 22c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x22c>
 250:	add	x13, x13, #0x8
 254:	cbz	x24, 220 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x220>
 258:	ldaxr	w14, [x13]
 25c:	add	w14, w14, #0x1
 260:	stlxr	w15, w14, [x13]
 264:	cbnz	w15, 258 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x258>
 268:	b	22c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x22c>
 26c:	mov	x22, xzr
 270:	cmp	x9, x19
 274:	mov	x25, x22
 278:	b.eq	29c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x29c>  // b.none
 27c:	mov	x25, x22
 280:	str	xzr, [x25, #8]
 284:	ldr	q0, [x9]
 288:	str	xzr, [x9, #8]
 28c:	str	q0, [x25], #16
 290:	str	xzr, [x9], #16
 294:	cmp	x9, x19
 298:	b.ne	280 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x280>  // b.any
 29c:	adrp	x26, 0 <__pthread_key_create>
 2a0:	ldr	x26, [x26]
 2a4:	b	2c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2c4>
 2a8:	ldr	w9, [x8]
 2ac:	add	w9, w9, #0x1
 2b0:	str	w9, [x8]
 2b4:	add	x20, x20, #0x10
 2b8:	cmp	x20, x23
 2bc:	add	x25, x25, #0x10
 2c0:	b.eq	2f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2f4>  // b.none
 2c4:	ldr	x8, [x20]
 2c8:	str	x8, [x25]
 2cc:	ldr	x8, [x20, #8]
 2d0:	str	x8, [x25, #8]
 2d4:	cbz	x8, 2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2b4>
 2d8:	add	x8, x8, #0x8
 2dc:	cbz	x26, 2a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2a8>
 2e0:	ldaxr	w9, [x8]
 2e4:	add	w9, w9, #0x1
 2e8:	stlxr	w10, w9, [x8]
 2ec:	cbnz	w10, 2e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2e0>
 2f0:	b	2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x2b4>
 2f4:	ldr	x20, [x21, #8]
 2f8:	cmp	x20, x19
 2fc:	b.eq	334 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x334>  // b.none
 300:	mov	x8, xzr
 304:	add	x9, x25, x8
 308:	add	x10, x19, x8
 30c:	str	xzr, [x9, #8]
 310:	ldr	q0, [x10]
 314:	add	x11, x10, #0x10
 318:	cmp	x11, x20
 31c:	add	x8, x8, #0x10
 320:	str	xzr, [x10, #8]
 324:	str	q0, [x9]
 328:	str	xzr, [x10]
 32c:	b.ne	304 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x304>  // b.any
 330:	add	x25, x25, x8
 334:	ldr	x23, [x21]
 338:	cmp	x23, x20
 33c:	b.ne	380 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x380>  // b.any
 340:	cbz	x20, 34c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x34c>
 344:	mov	x0, x20
 348:	bl	0 <_ZdlPv>
 34c:	add	x8, x22, x24, lsl #4
 350:	stp	x22, x25, [x21]
 354:	str	x8, [x21, #16]
 358:	ldp	x20, x19, [sp, #80]
 35c:	ldp	x22, x21, [sp, #64]
 360:	ldp	x24, x23, [sp, #48]
 364:	ldp	x26, x25, [sp, #32]
 368:	ldr	x27, [sp, #16]
 36c:	ldp	x29, x30, [sp], #96
 370:	ret
 374:	add	x23, x23, #0x10
 378:	cmp	x23, x20
 37c:	b.eq	41c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x41c>  // b.none
 380:	ldr	x19, [x23, #8]
 384:	cbz	x19, 374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x374>
 388:	add	x8, x19, #0x8
 38c:	cbz	x26, 3ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3ac>
 390:	ldaxr	w9, [x8]
 394:	sub	w10, w9, #0x1
 398:	stlxr	w11, w10, [x8]
 39c:	cbnz	w11, 390 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x390>
 3a0:	cmp	w9, #0x1
 3a4:	b.ne	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x374>  // b.any
 3a8:	b	3c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3c0>
 3ac:	ldr	w9, [x8]
 3b0:	sub	w10, w9, #0x1
 3b4:	str	w10, [x8]
 3b8:	cmp	w9, #0x1
 3bc:	b.ne	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x374>  // b.any
 3c0:	mov	x27, x19
 3c4:	ldr	x8, [x27], #12
 3c8:	mov	x0, x19
 3cc:	ldr	x8, [x8, #16]
 3d0:	blr	x8
 3d4:	cbz	x26, 3f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3f4>
 3d8:	ldaxr	w8, [x27]
 3dc:	sub	w9, w8, #0x1
 3e0:	stlxr	w10, w9, [x27]
 3e4:	cbnz	w10, 3d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x3d8>
 3e8:	cmp	w8, #0x1
 3ec:	b.ne	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x374>  // b.any
 3f0:	b	408 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x408>
 3f4:	ldr	w8, [x27]
 3f8:	sub	w9, w8, #0x1
 3fc:	str	w9, [x27]
 400:	cmp	w8, #0x1
 404:	b.ne	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x374>  // b.any
 408:	ldr	x8, [x19]
 40c:	mov	x0, x19
 410:	ldr	x8, [x8, #24]
 414:	blr	x8
 418:	b	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x374>
 41c:	ldr	x20, [x21]
 420:	cbnz	x20, 344 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x344>
 424:	b	34c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x34c>
 428:	ldr	x11, [x21, #8]
 42c:	add	x10, x11, x10, lsl #4
 430:	cmp	x22, x19
 434:	str	x10, [x21, #8]
 438:	b.eq	464 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x464>  // b.none
 43c:	add	x10, x10, #0x8
 440:	mov	x12, x19
 444:	str	xzr, [x10]
 448:	ldr	q0, [x12]
 44c:	str	xzr, [x12, #8]
 450:	stur	q0, [x10, #-8]
 454:	str	xzr, [x12], #16
 458:	cmp	x12, x22
 45c:	add	x10, x10, #0x10
 460:	b.ne	444 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x444>  // b.any
 464:	add	x10, x11, x8, lsl #4
 468:	sub	x8, x9, x20
 46c:	cmp	x8, #0x1
 470:	str	x10, [x21, #8]
 474:	b.lt	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x358>  // b.tstop
 478:	lsr	x22, x8, #4
 47c:	b	494 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x494>
 480:	str	x23, [x19, #8]
 484:	add	x20, x20, #0x10
 488:	subs	x22, x22, #0x1
 48c:	add	x19, x19, #0x10
 490:	b.le	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x358>
 494:	ldr	x8, [x20]
 498:	ldr	x21, [x19, #8]
 49c:	str	x8, [x19]
 4a0:	ldr	x23, [x20, #8]
 4a4:	cmp	x23, x21
 4a8:	b.eq	484 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x484>  // b.none
 4ac:	cbz	x23, 4cc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4cc>
 4b0:	add	x8, x23, #0x8
 4b4:	cbz	x24, 4d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4d4>
 4b8:	ldaxr	w9, [x8]
 4bc:	add	w9, w9, #0x1
 4c0:	stlxr	w10, w9, [x8]
 4c4:	cbnz	w10, 4b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4b8>
 4c8:	ldr	x21, [x19, #8]
 4cc:	cbnz	x21, 4e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4e4>
 4d0:	b	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x480>
 4d4:	ldr	w9, [x8]
 4d8:	add	w9, w9, #0x1
 4dc:	str	w9, [x8]
 4e0:	cbz	x21, 480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x480>
 4e4:	add	x8, x21, #0x8
 4e8:	cbz	x24, 508 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x508>
 4ec:	ldaxr	w9, [x8]
 4f0:	sub	w10, w9, #0x1
 4f4:	stlxr	w11, w10, [x8]
 4f8:	cbnz	w11, 4ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x4ec>
 4fc:	cmp	w9, #0x1
 500:	b.ne	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x480>  // b.any
 504:	b	51c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x51c>
 508:	ldr	w9, [x8]
 50c:	sub	w10, w9, #0x1
 510:	str	w10, [x8]
 514:	cmp	w9, #0x1
 518:	b.ne	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x480>  // b.any
 51c:	mov	x25, x21
 520:	ldr	x8, [x25], #12
 524:	mov	x0, x21
 528:	ldr	x8, [x8, #16]
 52c:	blr	x8
 530:	cbz	x24, 550 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x550>
 534:	ldaxr	w8, [x25]
 538:	sub	w9, w8, #0x1
 53c:	stlxr	w10, w9, [x25]
 540:	cbnz	w10, 534 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x534>
 544:	cmp	w8, #0x1
 548:	b.ne	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x480>  // b.any
 54c:	b	564 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x564>
 550:	ldr	w8, [x25]
 554:	sub	w9, w8, #0x1
 558:	str	w9, [x25]
 55c:	cmp	w8, #0x1
 560:	b.ne	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x480>  // b.any
 564:	ldr	x8, [x21]
 568:	mov	x0, x21
 56c:	ldr	x8, [x8, #24]
 570:	blr	x8
 574:	b	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x480>
 578:	mov	x11, x22
 57c:	mov	x10, x23
 580:	add	x9, x11, #0x8
 584:	str	xzr, [x9]
 588:	ldr	q0, [x10]
 58c:	str	xzr, [x10, #8]
 590:	stur	q0, [x9, #-8]
 594:	str	xzr, [x10], #16
 598:	cmp	x10, x22
 59c:	add	x9, x9, #0x10
 5a0:	b.ne	584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x584>  // b.any
 5a4:	add	x9, x22, x8, lsl #4
 5a8:	sub	x8, x23, x19
 5ac:	cmp	x8, #0x1
 5b0:	str	x9, [x21, #8]
 5b4:	b.lt	680 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x680>  // b.tstop
 5b8:	adrp	x26, 0 <__pthread_key_create>
 5bc:	ldr	x26, [x26]
 5c0:	lsr	x25, x8, #4
 5c4:	b	5d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5d0>
 5c8:	subs	x25, x25, #0x1
 5cc:	b.le	680 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x680>
 5d0:	ldr	x8, [x23, #-16]!
 5d4:	ldr	x9, [x23, #8]
 5d8:	stp	xzr, xzr, [x23]
 5dc:	str	x8, [x22, #-16]!
 5e0:	ldr	x21, [x22, #8]
 5e4:	str	x9, [x22, #8]
 5e8:	cbz	x21, 5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5c8>
 5ec:	add	x8, x21, #0x8
 5f0:	cbz	x26, 610 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x610>
 5f4:	ldaxr	w9, [x8]
 5f8:	sub	w10, w9, #0x1
 5fc:	stlxr	w11, w10, [x8]
 600:	cbnz	w11, 5f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5f4>
 604:	cmp	w9, #0x1
 608:	b.ne	5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5c8>  // b.any
 60c:	b	624 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x624>
 610:	ldr	w9, [x8]
 614:	sub	w10, w9, #0x1
 618:	str	w10, [x8]
 61c:	cmp	w9, #0x1
 620:	b.ne	5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5c8>  // b.any
 624:	mov	x27, x21
 628:	ldr	x8, [x27], #12
 62c:	mov	x0, x21
 630:	ldr	x8, [x8, #16]
 634:	blr	x8
 638:	cbz	x26, 658 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x658>
 63c:	ldaxr	w8, [x27]
 640:	sub	w9, w8, #0x1
 644:	stlxr	w10, w9, [x27]
 648:	cbnz	w10, 63c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x63c>
 64c:	cmp	w8, #0x1
 650:	b.ne	5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5c8>  // b.any
 654:	b	66c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x66c>
 658:	ldr	w8, [x27]
 65c:	sub	w9, w8, #0x1
 660:	str	w9, [x27]
 664:	cmp	w8, #0x1
 668:	b.ne	5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5c8>  // b.any
 66c:	ldr	x8, [x21]
 670:	mov	x0, x21
 674:	ldr	x8, [x8, #24]
 678:	blr	x8
 67c:	b	5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x5c8>
 680:	cmp	x24, #0x1
 684:	b.lt	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x358>  // b.tstop
 688:	adrp	x23, 0 <__pthread_key_create>
 68c:	ldr	x23, [x23]
 690:	lsr	x22, x24, #4
 694:	b	6ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6ac>
 698:	str	x24, [x19, #8]
 69c:	add	x20, x20, #0x10
 6a0:	subs	x22, x22, #0x1
 6a4:	add	x19, x19, #0x10
 6a8:	b.le	358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x358>
 6ac:	ldr	x8, [x20]
 6b0:	ldr	x21, [x19, #8]
 6b4:	str	x8, [x19]
 6b8:	ldr	x24, [x20, #8]
 6bc:	cmp	x24, x21
 6c0:	b.eq	69c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x69c>  // b.none
 6c4:	cbz	x24, 6e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6e4>
 6c8:	add	x8, x24, #0x8
 6cc:	cbz	x23, 6ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6ec>
 6d0:	ldaxr	w9, [x8]
 6d4:	add	w9, w9, #0x1
 6d8:	stlxr	w10, w9, [x8]
 6dc:	cbnz	w10, 6d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6d0>
 6e0:	ldr	x21, [x19, #8]
 6e4:	cbnz	x21, 6fc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x6fc>
 6e8:	b	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x698>
 6ec:	ldr	w9, [x8]
 6f0:	add	w9, w9, #0x1
 6f4:	str	w9, [x8]
 6f8:	cbz	x21, 698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x698>
 6fc:	add	x8, x21, #0x8
 700:	cbz	x23, 720 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x720>
 704:	ldaxr	w9, [x8]
 708:	sub	w10, w9, #0x1
 70c:	stlxr	w11, w10, [x8]
 710:	cbnz	w11, 704 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x704>
 714:	cmp	w9, #0x1
 718:	b.ne	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x698>  // b.any
 71c:	b	734 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x734>
 720:	ldr	w9, [x8]
 724:	sub	w10, w9, #0x1
 728:	str	w10, [x8]
 72c:	cmp	w9, #0x1
 730:	b.ne	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x698>  // b.any
 734:	mov	x25, x21
 738:	ldr	x8, [x25], #12
 73c:	mov	x0, x21
 740:	ldr	x8, [x8, #16]
 744:	blr	x8
 748:	cbz	x23, 768 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x768>
 74c:	ldaxr	w8, [x25]
 750:	sub	w9, w8, #0x1
 754:	stlxr	w10, w9, [x25]
 758:	cbnz	w10, 74c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x74c>
 75c:	cmp	w8, #0x1
 760:	b.ne	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x698>  // b.any
 764:	b	77c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x77c>
 768:	ldr	w8, [x25]
 76c:	sub	w9, w8, #0x1
 770:	str	w9, [x25]
 774:	cmp	w8, #0x1
 778:	b.ne	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x698>  // b.any
 77c:	ldr	x8, [x21]
 780:	mov	x0, x21
 784:	ldr	x8, [x8, #24]
 788:	blr	x8
 78c:	b	698 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x698>
 790:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
 794:	add	x0, x0, #0x0
 798:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE:

0000000000000000 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w2, [x0, #16]
  18:	mov	x20, x1
  1c:	mov	w1, #0x2                   	// #2
  20:	mov	x19, x0
  24:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  28:	ldr	w21, [x20, #8]
  2c:	cmp	w21, #0x10
  30:	b.cs	3c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x3c>  // b.hs, b.nlast
  34:	mov	w1, w21
  38:	b	60 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x60>
  3c:	mov	w1, #0x10                  	// #16
  40:	bfxil	w1, w21, #0, #4
  44:	mov	w2, #0x5                   	// #5
  48:	mov	x0, x19
  4c:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  50:	lsr	w1, w21, #4
  54:	cmp	w21, #0xff
  58:	mov	w21, w1
  5c:	b.hi	3c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x3c>  // b.pmore
  60:	mov	w2, #0x5                   	// #5
  64:	mov	x0, x19
  68:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  6c:	ldr	w22, [x20, #8]
  70:	cbz	w22, 208 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x208>
  74:	mov	x23, xzr
  78:	ldr	x8, [x20]
  7c:	mov	w2, #0x1                   	// #1
  80:	mov	x0, x19
  84:	add	x21, x8, x23, lsl #4
  88:	mov	x24, x21
  8c:	ldrb	w8, [x24, #8]!
  90:	and	w1, w8, #0x1
  94:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  98:	ldrb	w8, [x24]
  9c:	tbnz	w8, #0, 14c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x14c>
  a0:	ubfx	w1, w8, #1, #3
  a4:	mov	w2, #0x3                   	// #3
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
  b0:	ldrb	w8, [x24]
  b4:	tbnz	w8, #0, 22c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x22c>
  b8:	ubfx	w8, w8, #1, #3
  bc:	sub	w9, w8, #0x3
  c0:	cmp	w9, #0x3
  c4:	b.cc	1d0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1d0>  // b.lo, b.ul, b.last
  c8:	sub	w8, w8, #0x1
  cc:	cmp	w8, #0x2
  d0:	b.cs	21c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x21c>  // b.hs, b.nlast
  d4:	ldr	x24, [x21]
  d8:	lsr	x8, x24, #32
  dc:	mov	w21, w24
  e0:	cbnz	x8, f4 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0xf4>
  e4:	cmp	w21, #0x10
  e8:	b.cs	120 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x120>  // b.hs, b.nlast
  ec:	mov	w1, w21
  f0:	b	144 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x144>
  f4:	mov	w1, #0x10                  	// #16
  f8:	bfxil	w1, w21, #0, #4
  fc:	mov	w2, #0x5                   	// #5
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 108:	lsr	x21, x24, #4
 10c:	cmp	x24, #0xff
 110:	mov	x24, x21
 114:	b.hi	f4 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0xf4>  // b.pmore
 118:	mov	w2, #0x5                   	// #5
 11c:	b	194 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x194>
 120:	mov	w1, #0x10                  	// #16
 124:	bfxil	w1, w21, #0, #4
 128:	mov	w2, #0x5                   	// #5
 12c:	mov	x0, x19
 130:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 134:	lsr	w1, w21, #4
 138:	cmp	w21, #0xff
 13c:	mov	w21, w1
 140:	b.hi	120 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x120>  // b.pmore
 144:	mov	w2, #0x5                   	// #5
 148:	b	1c8 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1c8>
 14c:	ldr	x24, [x21]
 150:	lsr	x8, x24, #32
 154:	mov	w21, w24
 158:	cbnz	x8, 16c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x16c>
 15c:	cmp	w21, #0x80
 160:	b.cs	1a0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1a0>  // b.hs, b.nlast
 164:	mov	w1, w21
 168:	b	1c4 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1c4>
 16c:	mov	w1, #0x80                  	// #128
 170:	bfxil	w1, w21, #0, #7
 174:	mov	w2, #0x8                   	// #8
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 180:	lsr	x21, x24, #7
 184:	lsr	x8, x24, #14
 188:	mov	x24, x21
 18c:	cbnz	x8, 16c <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x16c>
 190:	mov	w2, #0x8                   	// #8
 194:	mov	x0, x19
 198:	mov	w1, w21
 19c:	b	1cc <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1cc>
 1a0:	mov	w1, #0x80                  	// #128
 1a4:	bfxil	w1, w21, #0, #7
 1a8:	mov	w2, #0x8                   	// #8
 1ac:	mov	x0, x19
 1b0:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 1b4:	lsr	w1, w21, #7
 1b8:	lsr	w8, w21, #14
 1bc:	mov	w21, w1
 1c0:	cbnz	w8, 1a0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x1a0>
 1c4:	mov	w2, #0x8                   	// #8
 1c8:	mov	x0, x19
 1cc:	bl	0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 1d0:	add	x23, x23, #0x1
 1d4:	cmp	x23, x22
 1d8:	b.eq	208 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x208>  // b.none
 1dc:	ldr	w8, [x20, #8]
 1e0:	cmp	x23, x8
 1e4:	b.cc	78 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE+0x78>  // b.lo, b.ul, b.last
 1e8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 1ec:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 1f0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x99                  	// #153
 204:	bl	0 <__assert_fail>
 208:	ldp	x20, x19, [sp, #48]
 20c:	ldp	x22, x21, [sp, #32]
 210:	ldp	x24, x23, [sp, #16]
 214:	ldp	x29, x30, [sp], #64
 218:	ret
 21c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 220:	add	x0, x0, #0x0
 224:	mov	w1, #0x1                   	// #1
 228:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
 22c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 230:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 234:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter12EncodeAbbrevERKNS_13BitCodeAbbrevE>
 238:	add	x0, x0, #0x0
 23c:	add	x1, x1, #0x0
 240:	add	x3, x3, #0x0
 244:	mov	w2, #0x77                  	// #119
 248:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter9EmitVBR64Emj:

0000000000000000 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cmp	w2, #0x21
  18:	b.cs	c8 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xc8>  // b.hs, b.nlast
  1c:	mov	w19, w2
  20:	mov	x20, x1
  24:	mov	x21, x0
  28:	lsr	x8, x1, #32
  2c:	cbnz	x8, 6c <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x6c>
  30:	sub	w22, w19, #0x1
  34:	mov	w8, #0x1                   	// #1
  38:	lsl	w23, w8, w22
  3c:	cmp	w23, w20
  40:	b.hi	a8 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xa8>  // b.pmore
  44:	sub	w24, w23, #0x1
  48:	and	w8, w20, w24
  4c:	orr	w1, w8, w23
  50:	mov	x0, x21
  54:	mov	w2, w19
  58:	bl	0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  5c:	lsr	w20, w20, w22
  60:	cmp	w20, w23
  64:	b.cs	48 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x48>  // b.hs, b.nlast
  68:	b	a8 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xa8>
  6c:	sub	w8, w19, #0x1
  70:	mov	w9, #0x1                   	// #1
  74:	lsl	w22, w9, w8
  78:	cmp	x22, x20
  7c:	b.hi	a8 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0xa8>  // b.pmore
  80:	sub	w23, w22, #0x1
  84:	mov	w24, w8
  88:	and	w8, w20, w23
  8c:	orr	w1, w8, w22
  90:	mov	x0, x21
  94:	mov	w2, w19
  98:	bl	0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  9c:	lsr	x20, x20, x24
  a0:	cmp	x20, x22
  a4:	b.cs	88 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj+0x88>  // b.hs, b.nlast
  a8:	mov	x0, x21
  ac:	mov	w1, w20
  b0:	mov	w2, w19
  b4:	ldp	x20, x19, [sp, #48]
  b8:	ldp	x22, x21, [sp, #32]
  bc:	ldp	x24, x23, [sp, #16]
  c0:	ldp	x29, x30, [sp], #64
  c4:	b	0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  c8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  cc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  d0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter9EmitVBR64Emj>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0xa0                  	// #160
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x20, x24, [x0]
  24:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  28:	sub	x8, x24, x20
  2c:	cmp	x8, x9
  30:	b.eq	290 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x290>  // b.none
  34:	asr	x9, x8, #4
  38:	cmp	x8, #0x0
  3c:	csinc	x10, x9, xzr, ne  // ne = any
  40:	adds	x9, x10, x9
  44:	lsr	x11, x9, #59
  48:	cset	w10, cs  // cs = hs, nlast
  4c:	cmp	x11, #0x0
  50:	cset	w11, ne  // ne = any
  54:	orr	w10, w10, w11
  58:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  5c:	cmp	w10, #0x0
  60:	csel	x9, x8, x9, ne  // ne = any
  64:	sub	x8, x1, x20
  68:	mov	x23, x2
  6c:	mov	x19, x0
  70:	mov	x21, x1
  74:	asr	x25, x8, #4
  78:	str	x9, [sp, #8]
  7c:	cbz	x9, 90 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x90>
  80:	lsl	x0, x9, #4
  84:	bl	0 <_Znwm>
  88:	mov	x22, x0
  8c:	b	94 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x94>
  90:	mov	x22, xzr
  94:	ldr	q0, [x23]
  98:	stp	xzr, xzr, [x23]
  9c:	adrp	x26, 0 <__pthread_key_create>
  a0:	cmp	x20, x21
  a4:	str	q0, [x22, x25, lsl #4]
  a8:	ldr	x26, [x26]
  ac:	mov	x27, x22
  b0:	b.eq	180 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x180>  // b.none
  b4:	mov	x27, x22
  b8:	mov	x28, x20
  bc:	b	d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd0>
  c0:	add	x28, x28, #0x10
  c4:	cmp	x28, x21
  c8:	add	x27, x27, #0x10
  cc:	b.eq	180 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x180>  // b.none
  d0:	str	xzr, [x27, #8]
  d4:	ldr	q0, [x28]
  d8:	str	xzr, [x28, #8]
  dc:	str	q0, [x27]
  e0:	ldr	x25, [x28, #8]
  e4:	str	xzr, [x28]
  e8:	cbz	x25, c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>
  ec:	add	x8, x25, #0x8
  f0:	cbz	x26, 110 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x110>
  f4:	ldaxr	w9, [x8]
  f8:	sub	w10, w9, #0x1
  fc:	stlxr	w11, w10, [x8]
 100:	cbnz	w11, f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xf4>
 104:	cmp	w9, #0x1
 108:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 10c:	b	124 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x124>
 110:	ldr	w9, [x8]
 114:	sub	w10, w9, #0x1
 118:	str	w10, [x8]
 11c:	cmp	w9, #0x1
 120:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 124:	mov	x23, x25
 128:	ldr	x8, [x23], #12
 12c:	mov	x0, x25
 130:	ldr	x8, [x8, #16]
 134:	blr	x8
 138:	cbz	x26, 158 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x158>
 13c:	ldaxr	w8, [x23]
 140:	sub	w9, w8, #0x1
 144:	stlxr	w10, w9, [x23]
 148:	cbnz	w10, 13c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x13c>
 14c:	cmp	w8, #0x1
 150:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 154:	b	16c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x16c>
 158:	ldr	w8, [x23]
 15c:	sub	w9, w8, #0x1
 160:	str	w9, [x23]
 164:	cmp	w8, #0x1
 168:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 16c:	ldr	x8, [x25]
 170:	mov	x0, x25
 174:	ldr	x8, [x8, #24]
 178:	blr	x8
 17c:	b	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>
 180:	cmp	x24, x21
 184:	add	x27, x27, #0x10
 188:	b.eq	254 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x254>  // b.none
 18c:	ldr	x28, [sp, #8]
 190:	b	1a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1a4>
 194:	add	x21, x21, #0x10
 198:	cmp	x21, x24
 19c:	add	x27, x27, #0x10
 1a0:	b.eq	258 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x258>  // b.none
 1a4:	str	xzr, [x27, #8]
 1a8:	ldr	q0, [x21]
 1ac:	str	xzr, [x21, #8]
 1b0:	str	q0, [x27]
 1b4:	ldr	x23, [x21, #8]
 1b8:	str	xzr, [x21]
 1bc:	cbz	x23, 194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>
 1c0:	add	x8, x23, #0x8
 1c4:	cbz	x26, 1e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1e4>
 1c8:	ldaxr	w9, [x8]
 1cc:	sub	w10, w9, #0x1
 1d0:	stlxr	w11, w10, [x8]
 1d4:	cbnz	w11, 1c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1c8>
 1d8:	cmp	w9, #0x1
 1dc:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 1e0:	b	1f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1f8>
 1e4:	ldr	w9, [x8]
 1e8:	sub	w10, w9, #0x1
 1ec:	str	w10, [x8]
 1f0:	cmp	w9, #0x1
 1f4:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 1f8:	mov	x25, x23
 1fc:	ldr	x8, [x25], #12
 200:	mov	x0, x23
 204:	ldr	x8, [x8, #16]
 208:	blr	x8
 20c:	cbz	x26, 22c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x22c>
 210:	ldaxr	w8, [x25]
 214:	sub	w9, w8, #0x1
 218:	stlxr	w10, w9, [x25]
 21c:	cbnz	w10, 210 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x210>
 220:	cmp	w8, #0x1
 224:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 228:	b	240 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x240>
 22c:	ldr	w8, [x25]
 230:	sub	w9, w8, #0x1
 234:	str	w9, [x25]
 238:	cmp	w8, #0x1
 23c:	b.ne	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 240:	ldr	x8, [x23]
 244:	mov	x0, x23
 248:	ldr	x8, [x8, #24]
 24c:	blr	x8
 250:	b	194 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>
 254:	ldr	x28, [sp, #8]
 258:	cbz	x20, 264 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x264>
 25c:	mov	x0, x20
 260:	bl	0 <_ZdlPv>
 264:	add	x8, x22, x28, lsl #4
 268:	stp	x22, x27, [x19]
 26c:	str	x8, [x19, #16]
 270:	ldp	x20, x19, [sp, #96]
 274:	ldp	x22, x21, [sp, #80]
 278:	ldp	x24, x23, [sp, #64]
 27c:	ldp	x26, x25, [sp, #48]
 280:	ldp	x28, x27, [sp, #32]
 284:	ldp	x29, x30, [sp, #16]
 288:	add	sp, sp, #0x70
 28c:	ret
 290:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 294:	add	x0, x0, #0x0
 298:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15BitstreamWriter13BackpatchWordEmj:

0000000000000000 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	ubfx	x9, x1, #3, #32
  10:	ldr	w10, [x8, #8]
  14:	cmp	x9, x10
  18:	b.cs	c4 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj+0xc4>  // b.hs, b.nlast
  1c:	ldr	x8, [x8]
  20:	ands	x10, x1, #0x7
  24:	add	x8, x8, x9
  28:	ldr	w9, [x8]
  2c:	b.eq	90 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj+0x90>  // b.none
  30:	ldr	w11, [x8, #4]
  34:	neg	w13, w10
  38:	mov	w14, #0xffffffff            	// #-1
  3c:	lsr	w12, w9, w10
  40:	lsl	w14, w14, w13
  44:	bic	w12, w12, w14
  48:	lsl	w11, w11, w13
  4c:	orr	w11, w11, w12
  50:	cbnz	w11, 98 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj+0x98>
  54:	cbz	x10, b8 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj+0xb8>
  58:	ldr	w11, [x8, #4]
  5c:	mov	w12, #0xffffffff            	// #-1
  60:	neg	w14, w10
  64:	lsl	w13, w2, w10
  68:	lsl	w10, w12, w10
  6c:	lsr	w12, w2, w14
  70:	bic	w9, w9, w10
  74:	bic	w12, w12, w10
  78:	and	w10, w11, w10
  7c:	orr	w9, w9, w13
  80:	orr	w10, w10, w12
  84:	stp	w9, w10, [x8]
  88:	ldp	x29, x30, [sp], #16
  8c:	ret
  90:	mov	w11, w9
  94:	cbz	w11, 54 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj+0x54>
  98:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  9c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  a0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x6d                  	// #109
  b4:	bl	0 <__assert_fail>
  b8:	str	w2, [x8]
  bc:	ldp	x29, x30, [sp], #16
  c0:	ret
  c4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  c8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  cc:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter13BackpatchWordEmj>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x95                  	// #149
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x19, x0
  20:	cmp	x1, x0
  24:	b.eq	3f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3f0>  // b.none
  28:	ldp	x22, x21, [x1]
  2c:	ldr	x8, [x19, #16]
  30:	ldr	x24, [x19]
  34:	mov	x20, x1
  38:	sub	x0, x21, x22
  3c:	asr	x23, x0, #4
  40:	sub	x8, x8, x24
  44:	cmp	x23, x8, asr #4
  48:	b.ls	6c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x6c>  // b.plast
  4c:	cbz	x0, 2a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2a0>
  50:	lsr	x8, x23, #59
  54:	cbnz	x8, 534 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x534>
  58:	bl	0 <_Znwm>
  5c:	mov	x20, x0
  60:	cmp	x22, x21
  64:	b.ne	2ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2ac>  // b.any
  68:	b	308 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x308>
  6c:	ldr	x25, [x19, #8]
  70:	sub	x9, x25, x24
  74:	asr	x8, x9, #4
  78:	cmp	x8, x23
  7c:	b.cs	190 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x190>  // b.hs, b.nlast
  80:	cmp	x9, #0x1
  84:	b.lt	420 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x420>  // b.tstop
  88:	adrp	x26, 0 <__pthread_key_create>
  8c:	ldr	x26, [x26]
  90:	lsr	x25, x9, #4
  94:	b	ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xac>
  98:	str	x27, [x24, #8]
  9c:	add	x22, x22, #0x10
  a0:	subs	x25, x25, #0x1
  a4:	add	x24, x24, #0x10
  a8:	b.le	410 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x410>
  ac:	ldr	x8, [x22]
  b0:	ldr	x21, [x24, #8]
  b4:	str	x8, [x24]
  b8:	ldr	x27, [x22, #8]
  bc:	cmp	x27, x21
  c0:	b.eq	9c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x9c>  // b.none
  c4:	cbz	x27, e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xe4>
  c8:	add	x8, x27, #0x8
  cc:	cbz	x26, ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xec>
  d0:	ldaxr	w9, [x8]
  d4:	add	w9, w9, #0x1
  d8:	stlxr	w10, w9, [x8]
  dc:	cbnz	w10, d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xd0>
  e0:	ldr	x21, [x24, #8]
  e4:	cbnz	x21, fc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0xfc>
  e8:	b	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>
  ec:	ldr	w9, [x8]
  f0:	add	w9, w9, #0x1
  f4:	str	w9, [x8]
  f8:	cbz	x21, 98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>
  fc:	add	x8, x21, #0x8
 100:	cbz	x26, 120 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x120>
 104:	ldaxr	w9, [x8]
 108:	sub	w10, w9, #0x1
 10c:	stlxr	w11, w10, [x8]
 110:	cbnz	w11, 104 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x104>
 114:	cmp	w9, #0x1
 118:	b.ne	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>  // b.any
 11c:	b	134 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x134>
 120:	ldr	w9, [x8]
 124:	sub	w10, w9, #0x1
 128:	str	w10, [x8]
 12c:	cmp	w9, #0x1
 130:	b.ne	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>  // b.any
 134:	mov	x28, x21
 138:	ldr	x8, [x28], #12
 13c:	mov	x0, x21
 140:	ldr	x8, [x8, #16]
 144:	blr	x8
 148:	cbz	x26, 168 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x168>
 14c:	ldaxr	w8, [x28]
 150:	sub	w9, w8, #0x1
 154:	stlxr	w10, w9, [x28]
 158:	cbnz	w10, 14c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x14c>
 15c:	cmp	w8, #0x1
 160:	b.ne	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>  // b.any
 164:	b	17c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x17c>
 168:	ldr	w8, [x28]
 16c:	sub	w9, w8, #0x1
 170:	str	w9, [x28]
 174:	cmp	w8, #0x1
 178:	b.ne	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>  // b.any
 17c:	ldr	x8, [x21]
 180:	mov	x0, x21
 184:	ldr	x8, [x8, #24]
 188:	blr	x8
 18c:	b	98 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x98>
 190:	adrp	x21, 0 <__pthread_key_create>
 194:	ldr	x21, [x21]
 198:	cmp	x0, #0x1
 19c:	b.lt	490 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x490>  // b.tstop
 1a0:	lsr	x25, x0, #4
 1a4:	b	1bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1bc>
 1a8:	str	x26, [x24, #8]
 1ac:	add	x22, x22, #0x10
 1b0:	subs	x25, x25, #0x1
 1b4:	add	x24, x24, #0x10
 1b8:	b.le	484 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x484>
 1bc:	ldr	x8, [x22]
 1c0:	ldr	x20, [x24, #8]
 1c4:	str	x8, [x24]
 1c8:	ldr	x26, [x22, #8]
 1cc:	cmp	x26, x20
 1d0:	b.eq	1ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1ac>  // b.none
 1d4:	cbz	x26, 1f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1f4>
 1d8:	add	x8, x26, #0x8
 1dc:	cbz	x21, 1fc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1fc>
 1e0:	ldaxr	w9, [x8]
 1e4:	add	w9, w9, #0x1
 1e8:	stlxr	w10, w9, [x8]
 1ec:	cbnz	w10, 1e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1e0>
 1f0:	ldr	x20, [x24, #8]
 1f4:	cbnz	x20, 20c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x20c>
 1f8:	b	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>
 1fc:	ldr	w9, [x8]
 200:	add	w9, w9, #0x1
 204:	str	w9, [x8]
 208:	cbz	x20, 1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>
 20c:	add	x8, x20, #0x8
 210:	cbz	x21, 230 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x230>
 214:	ldaxr	w9, [x8]
 218:	sub	w10, w9, #0x1
 21c:	stlxr	w11, w10, [x8]
 220:	cbnz	w11, 214 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x214>
 224:	cmp	w9, #0x1
 228:	b.ne	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>  // b.any
 22c:	b	244 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x244>
 230:	ldr	w9, [x8]
 234:	sub	w10, w9, #0x1
 238:	str	w10, [x8]
 23c:	cmp	w9, #0x1
 240:	b.ne	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>  // b.any
 244:	mov	x27, x20
 248:	ldr	x8, [x27], #12
 24c:	mov	x0, x20
 250:	ldr	x8, [x8, #16]
 254:	blr	x8
 258:	cbz	x21, 278 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x278>
 25c:	ldaxr	w8, [x27]
 260:	sub	w9, w8, #0x1
 264:	stlxr	w10, w9, [x27]
 268:	cbnz	w10, 25c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x25c>
 26c:	cmp	w8, #0x1
 270:	b.ne	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>  // b.any
 274:	b	28c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x28c>
 278:	ldr	w8, [x27]
 27c:	sub	w9, w8, #0x1
 280:	str	w9, [x27]
 284:	cmp	w8, #0x1
 288:	b.ne	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>  // b.any
 28c:	ldr	x8, [x20]
 290:	mov	x0, x20
 294:	ldr	x8, [x8, #24]
 298:	blr	x8
 29c:	b	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x1a8>
 2a0:	mov	x20, xzr
 2a4:	cmp	x22, x21
 2a8:	b.eq	308 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x308>  // b.none
 2ac:	adrp	x8, 0 <__pthread_key_create>
 2b0:	ldr	x8, [x8]
 2b4:	mov	x9, x20
 2b8:	b	2d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2d8>
 2bc:	ldr	w11, [x10]
 2c0:	add	w11, w11, #0x1
 2c4:	str	w11, [x10]
 2c8:	add	x22, x22, #0x10
 2cc:	cmp	x22, x21
 2d0:	add	x9, x9, #0x10
 2d4:	b.eq	308 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x308>  // b.none
 2d8:	ldr	x10, [x22]
 2dc:	str	x10, [x9]
 2e0:	ldr	x10, [x22, #8]
 2e4:	str	x10, [x9, #8]
 2e8:	cbz	x10, 2c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2c8>
 2ec:	add	x10, x10, #0x8
 2f0:	cbz	x8, 2bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2bc>
 2f4:	ldaxr	w11, [x10]
 2f8:	add	w11, w11, #0x1
 2fc:	stlxr	w12, w11, [x10]
 300:	cbnz	w12, 2f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2f4>
 304:	b	2c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x2c8>
 308:	ldp	x21, x24, [x19]
 30c:	cmp	x21, x24
 310:	b.eq	3cc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3cc>  // b.none
 314:	adrp	x25, 0 <__pthread_key_create>
 318:	ldr	x25, [x25]
 31c:	b	32c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x32c>
 320:	add	x21, x21, #0x10
 324:	cmp	x21, x24
 328:	b.eq	3c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3c8>  // b.none
 32c:	ldr	x22, [x21, #8]
 330:	cbz	x22, 320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>
 334:	add	x8, x22, #0x8
 338:	cbz	x25, 358 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x358>
 33c:	ldaxr	w9, [x8]
 340:	sub	w10, w9, #0x1
 344:	stlxr	w11, w10, [x8]
 348:	cbnz	w11, 33c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x33c>
 34c:	cmp	w9, #0x1
 350:	b.ne	320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>  // b.any
 354:	b	36c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x36c>
 358:	ldr	w9, [x8]
 35c:	sub	w10, w9, #0x1
 360:	str	w10, [x8]
 364:	cmp	w9, #0x1
 368:	b.ne	320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>  // b.any
 36c:	mov	x26, x22
 370:	ldr	x8, [x26], #12
 374:	mov	x0, x22
 378:	ldr	x8, [x8, #16]
 37c:	blr	x8
 380:	cbz	x25, 3a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3a0>
 384:	ldaxr	w8, [x26]
 388:	sub	w9, w8, #0x1
 38c:	stlxr	w10, w9, [x26]
 390:	cbnz	w10, 384 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x384>
 394:	cmp	w8, #0x1
 398:	b.ne	320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>  // b.any
 39c:	b	3b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3b4>
 3a0:	ldr	w8, [x26]
 3a4:	sub	w9, w8, #0x1
 3a8:	str	w9, [x26]
 3ac:	cmp	w8, #0x1
 3b0:	b.ne	320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>  // b.any
 3b4:	ldr	x8, [x22]
 3b8:	mov	x0, x22
 3bc:	ldr	x8, [x8, #24]
 3c0:	blr	x8
 3c4:	b	320 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x320>
 3c8:	ldr	x21, [x19]
 3cc:	cbz	x21, 3d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3d8>
 3d0:	mov	x0, x21
 3d4:	bl	0 <_ZdlPv>
 3d8:	add	x8, x20, x23, lsl #4
 3dc:	str	x20, [x19]
 3e0:	str	x8, [x19, #16]
 3e4:	ldr	x8, [x19]
 3e8:	add	x8, x8, x23, lsl #4
 3ec:	str	x8, [x19, #8]
 3f0:	mov	x0, x19
 3f4:	ldp	x20, x19, [sp, #80]
 3f8:	ldp	x22, x21, [sp, #64]
 3fc:	ldp	x24, x23, [sp, #48]
 400:	ldp	x26, x25, [sp, #32]
 404:	ldp	x28, x27, [sp, #16]
 408:	ldp	x29, x30, [sp], #96
 40c:	ret
 410:	ldp	x8, x25, [x19]
 414:	ldp	x22, x21, [x20]
 418:	sub	x8, x25, x8
 41c:	asr	x8, x8, #4
 420:	add	x8, x22, x8, lsl #4
 424:	cmp	x8, x21
 428:	b.eq	3e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3e4>  // b.none
 42c:	adrp	x9, 0 <__pthread_key_create>
 430:	ldr	x9, [x9]
 434:	b	454 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x454>
 438:	ldr	w11, [x10]
 43c:	add	w11, w11, #0x1
 440:	str	w11, [x10]
 444:	add	x8, x8, #0x10
 448:	cmp	x8, x21
 44c:	add	x25, x25, #0x10
 450:	b.eq	3e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3e4>  // b.none
 454:	ldr	x10, [x8]
 458:	str	x10, [x25]
 45c:	ldr	x10, [x8, #8]
 460:	str	x10, [x25, #8]
 464:	cbz	x10, 444 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x444>
 468:	add	x10, x10, #0x8
 46c:	cbz	x9, 438 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x438>
 470:	ldaxr	w11, [x10]
 474:	add	w11, w11, #0x1
 478:	stlxr	w12, w11, [x10]
 47c:	cbnz	w12, 470 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x470>
 480:	b	444 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x444>
 484:	ldr	x25, [x19, #8]
 488:	b	490 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x490>
 48c:	add	x24, x24, #0x10
 490:	cmp	x24, x25
 494:	b.eq	3e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x3e4>  // b.none
 498:	ldr	x20, [x24, #8]
 49c:	cbz	x20, 48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>
 4a0:	add	x8, x20, #0x8
 4a4:	cbz	x21, 4c4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4c4>
 4a8:	ldaxr	w9, [x8]
 4ac:	sub	w10, w9, #0x1
 4b0:	stlxr	w11, w10, [x8]
 4b4:	cbnz	w11, 4a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4a8>
 4b8:	cmp	w9, #0x1
 4bc:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>  // b.any
 4c0:	b	4d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4d8>
 4c4:	ldr	w9, [x8]
 4c8:	sub	w10, w9, #0x1
 4cc:	str	w10, [x8]
 4d0:	cmp	w9, #0x1
 4d4:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>  // b.any
 4d8:	mov	x22, x20
 4dc:	ldr	x8, [x22], #12
 4e0:	mov	x0, x20
 4e4:	ldr	x8, [x8, #16]
 4e8:	blr	x8
 4ec:	cbz	x21, 50c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x50c>
 4f0:	ldaxr	w8, [x22]
 4f4:	sub	w9, w8, #0x1
 4f8:	stlxr	w10, w9, [x22]
 4fc:	cbnz	w10, 4f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x4f0>
 500:	cmp	w8, #0x1
 504:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>  // b.any
 508:	b	520 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x520>
 50c:	ldr	w8, [x22]
 510:	sub	w9, w8, #0x1
 514:	str	w9, [x22]
 518:	cmp	w8, #0x1
 51c:	b.ne	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>  // b.any
 520:	ldr	x8, [x20]
 524:	mov	x0, x20
 528:	ldr	x8, [x8, #24]
 52c:	blr	x8
 530:	b	48c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EEaSERKS5_+0x48c>
 534:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	ldr	x21, [x0]
  20:	mov	x19, x8
  24:	tst	x21, #0xfffffffffffffffe
  28:	and	x20, x21, #0xfffffffffffffffe
  2c:	cset	w8, ne  // ne = any
  30:	orr	x8, x20, x8
  34:	str	x8, [x0]
  38:	cbz	x20, 13c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x13c>
  3c:	str	xzr, [x0]
  40:	ldr	x8, [x20]
  44:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  48:	mov	x0, x20
  4c:	ldr	x8, [x8, #48]
  50:	ldr	x1, [x1]
  54:	blr	x8
  58:	tbz	w0, #0, 144 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x144>
  5c:	mov	w8, #0x1                   	// #1
  60:	str	x8, [x19]
  64:	ldp	x23, x24, [x20, #8]
  68:	cmp	x23, x24
  6c:	b.eq	128 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x128>  // b.none
  70:	adrp	x21, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  74:	ldr	x21, [x21]
  78:	mov	w25, #0x1                   	// #1
  7c:	mov	w8, #0x1                   	// #1
  80:	str	x8, [sp, #8]
  84:	str	xzr, [x19]
  88:	ldr	x22, [x23]
  8c:	str	xzr, [x23]
  90:	mov	x1, x21
  94:	ldr	x8, [x22]
  98:	mov	x0, x22
  9c:	ldr	x8, [x8, #48]
  a0:	blr	x8
  a4:	tbz	w0, #0, dc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xdc>
  a8:	ldr	x8, [x22]
  ac:	mov	x0, x22
  b0:	mov	x1, x21
  b4:	ldr	x8, [x8, #48]
  b8:	blr	x8
  bc:	tbz	w0, #0, 1e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e8>
  c0:	str	x25, [sp]
  c4:	cbz	x22, e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  c8:	ldr	x8, [x22]
  cc:	mov	x0, x22
  d0:	ldr	x8, [x8, #8]
  d4:	blr	x8
  d8:	b	e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  dc:	orr	x8, x22, #0x1
  e0:	str	x8, [sp]
  e4:	add	x8, x29, #0x18
  e8:	add	x0, sp, #0x8
  ec:	mov	x1, sp
  f0:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  f4:	ldr	x8, [x19]
  f8:	cbnz	x8, 1d0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1d0>
  fc:	ldr	x8, [x29, #24]
 100:	ldr	x9, [sp]
 104:	str	xzr, [x29, #24]
 108:	orr	x8, x8, #0x1
 10c:	str	x8, [x19]
 110:	cbnz	x9, 1d8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1d8>
 114:	ldr	x9, [sp, #8]
 118:	cbnz	x9, 1e0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e0>
 11c:	add	x23, x23, #0x8
 120:	cmp	x24, x23
 124:	b.ne	80 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x80>  // b.any
 128:	ldr	x8, [x20]
 12c:	mov	x0, x20
 130:	ldr	x8, [x8, #8]
 134:	blr	x8
 138:	b	1b4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1b4>
 13c:	mov	w8, #0x1                   	// #1
 140:	b	1b0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1b0>
 144:	ldr	x8, [x20]
 148:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
 14c:	mov	x0, x20
 150:	ldr	x8, [x8, #48]
 154:	ldr	x1, [x1]
 158:	blr	x8
 15c:	tbz	w0, #0, 1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 160:	ldr	x8, [x20]
 164:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
 168:	mov	x0, x20
 16c:	ldr	x8, [x8, #48]
 170:	ldr	x1, [x1]
 174:	blr	x8
 178:	tbz	w0, #0, 1e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e8>
 17c:	mov	w8, #0x1                   	// #1
 180:	str	x8, [x19]
 184:	ldr	x8, [x20]
 188:	mov	x0, x20
 18c:	ldp	x20, x19, [sp, #80]
 190:	ldp	x22, x21, [sp, #64]
 194:	ldr	x1, [x8, #8]
 198:	ldp	x24, x23, [sp, #48]
 19c:	ldr	x25, [sp, #32]
 1a0:	ldp	x29, x30, [sp, #16]
 1a4:	add	sp, sp, #0x60
 1a8:	br	x1
 1ac:	orr	x8, x21, #0x1
 1b0:	str	x8, [x19]
 1b4:	ldp	x20, x19, [sp, #80]
 1b8:	ldp	x22, x21, [sp, #64]
 1bc:	ldp	x24, x23, [sp, #48]
 1c0:	ldr	x25, [sp, #32]
 1c4:	ldp	x29, x30, [sp, #16]
 1c8:	add	sp, sp, #0x60
 1cc:	ret
 1d0:	mov	x0, x19
 1d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1d8:	mov	x0, sp
 1dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1e0:	add	x0, sp, #0x8
 1e4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1e8:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1ec:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1f0:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x329                 	// #809
 204:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	ands	x8, x8, #0xfffffffffffffffe
  18:	b.eq	34 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x34>  // b.none
  1c:	ldr	x9, [x8]
  20:	mov	x0, x8
  24:	mov	x1, x19
  28:	ldr	x9, [x9, #16]
  2c:	blr	x9
  30:	b	80 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x80>
  34:	ldp	x9, x8, [x19, #16]
  38:	sub	x9, x9, x8
  3c:	cmp	x9, #0x6
  40:	b.hi	5c <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x5c>  // b.pmore
  44:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  48:	add	x1, x1, #0x0
  4c:	mov	w2, #0x7                   	// #7
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  58:	b	80 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x80>
  5c:	mov	w9, #0x6563                	// #25955
  60:	mov	w10, #0x7573                	// #30067
  64:	movk	w9, #0x7373, lsl #16
  68:	movk	w10, #0x6363, lsl #16
  6c:	stur	w9, [x8, #3]
  70:	str	w10, [x8]
  74:	ldr	x8, [x19, #24]
  78:	add	x8, x8, #0x7
  7c:	str	x8, [x19, #24]
  80:	mov	x0, x19
  84:	ldr	x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	b	30 <_ZN4llvm11raw_ostreamlsEPKc+0x30>
  2c:	mov	x21, xzr
  30:	ldp	x8, x0, [x19, #16]
  34:	sub	x8, x8, x0
  38:	cmp	x21, x8
  3c:	b.ls	5c <_ZN4llvm11raw_ostreamlsEPKc+0x5c>  // b.plast
  40:	mov	x0, x19
  44:	mov	x1, x20
  48:	mov	x2, x21
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  5c:	cbz	x21, 78 <_ZN4llvm11raw_ostreamlsEPKc+0x78>
  60:	mov	x1, x20
  64:	mov	x2, x21
  68:	bl	0 <memcpy>
  6c:	ldr	x8, [x19, #24]
  70:	add	x8, x8, x21
  74:	str	x8, [x19, #24]
  78:	mov	x0, x19
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x19, x8
  20:	ldr	x8, [x0]
  24:	mov	x21, x1
  28:	tst	x8, #0xfffffffffffffffe
  2c:	and	x9, x8, #0xfffffffffffffffe
  30:	cset	w8, ne  // ne = any
  34:	orr	x8, x9, x8
  38:	str	x8, [x0]
  3c:	cbz	x9, 16c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x16c>
  40:	ldr	x8, [x21]
  44:	mov	x20, x0
  48:	tst	x8, #0xfffffffffffffffe
  4c:	and	x9, x8, #0xfffffffffffffffe
  50:	cset	w8, ne  // ne = any
  54:	orr	x8, x9, x8
  58:	str	x8, [x21]
  5c:	cbz	x9, 254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
  60:	ldr	x9, [x20]
  64:	ands	x0, x9, #0xfffffffffffffffe
  68:	b.eq	114 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x114>  // b.none
  6c:	ldr	x8, [x0]
  70:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  74:	ldr	x8, [x8, #48]
  78:	ldr	x1, [x1]
  7c:	blr	x8
  80:	tbz	w0, #0, 110 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x110>
  84:	ldr	x8, [x21]
  88:	ldr	x9, [x20]
  8c:	ands	x0, x8, #0xfffffffffffffffe
  90:	and	x24, x9, #0xfffffffffffffffe
  94:	b.eq	1f4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f4>  // b.none
  98:	ldr	x8, [x0]
  9c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  a0:	ldr	x8, [x8, #48]
  a4:	ldr	x1, [x1]
  a8:	blr	x8
  ac:	ldr	x8, [x21]
  b0:	and	x22, x8, #0xfffffffffffffffe
  b4:	tbz	w0, #0, 1f8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f8>
  b8:	str	xzr, [x21]
  bc:	ldp	x21, x25, [x22, #8]
  c0:	cmp	x21, x25
  c4:	b.eq	224 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x224>  // b.none
  c8:	add	x23, x24, #0x8
  cc:	b	e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe8>
  d0:	mov	x0, x23
  d4:	mov	x2, x21
  d8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  dc:	add	x21, x21, #0x8
  e0:	cmp	x25, x21
  e4:	b.eq	224 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x224>  // b.none
  e8:	ldp	x1, x8, [x24, #16]
  ec:	cmp	x1, x8
  f0:	b.eq	d0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xd0>  // b.none
  f4:	ldr	x8, [x21]
  f8:	str	xzr, [x21]
  fc:	str	x8, [x1]
 100:	ldr	x8, [x24, #16]
 104:	add	x8, x8, #0x8
 108:	str	x8, [x24, #16]
 10c:	b	dc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xdc>
 110:	ldr	x8, [x21]
 114:	ands	x0, x8, #0xfffffffffffffffe
 118:	b.eq	180 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x180>  // b.none
 11c:	ldr	x8, [x0]
 120:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 124:	ldr	x8, [x8, #48]
 128:	ldr	x1, [x1]
 12c:	blr	x8
 130:	tbz	w0, #0, 180 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x180>
 134:	ldr	x8, [x21]
 138:	add	x2, x29, #0x18
 13c:	and	x0, x8, #0xfffffffffffffffe
 140:	ldr	x1, [x0, #8]!
 144:	ldr	x8, [x20]
 148:	and	x8, x8, #0xfffffffffffffffe
 14c:	str	x8, [x29, #24]
 150:	str	xzr, [x20]
 154:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 158:	ldr	x0, [x29, #24]
 15c:	cbz	x0, 16c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x16c>
 160:	ldr	x8, [x0]
 164:	ldr	x8, [x8, #8]
 168:	blr	x8
 16c:	ldr	x8, [x21]
 170:	orr	x8, x8, #0x1
 174:	str	x8, [x19]
 178:	str	xzr, [x21]
 17c:	b	264 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x264>
 180:	mov	w0, #0x20                  	// #32
 184:	bl	0 <_Znwm>
 188:	ldr	x8, [x20]
 18c:	add	x1, sp, #0x8
 190:	mov	x2, sp
 194:	mov	x22, x0
 198:	and	x8, x8, #0xfffffffffffffffe
 19c:	str	x8, [sp, #8]
 1a0:	str	xzr, [x20]
 1a4:	ldr	x8, [x21]
 1a8:	and	x8, x8, #0xfffffffffffffffe
 1ac:	str	x8, [sp]
 1b0:	str	xzr, [x21]
 1b4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 1b8:	ldr	x0, [sp]
 1bc:	orr	x8, x22, #0x1
 1c0:	str	x8, [x19]
 1c4:	cbz	x0, 1d4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1d4>
 1c8:	ldr	x8, [x0]
 1cc:	ldr	x8, [x8, #8]
 1d0:	blr	x8
 1d4:	ldr	x0, [sp, #8]
 1d8:	str	xzr, [sp]
 1dc:	cbz	x0, 1ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1ec>
 1e0:	ldr	x8, [x0]
 1e4:	ldr	x8, [x8, #8]
 1e8:	blr	x8
 1ec:	str	xzr, [sp, #8]
 1f0:	b	264 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x264>
 1f4:	mov	x22, xzr
 1f8:	str	x22, [x29, #24]
 1fc:	str	xzr, [x21]
 200:	ldp	x1, x8, [x24, #16]
 204:	cmp	x1, x8
 208:	b.eq	234 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x234>  // b.none
 20c:	str	xzr, [x29, #24]
 210:	str	x22, [x1], #8
 214:	str	x1, [x24, #16]
 218:	ldr	x0, [x29, #24]
 21c:	cbnz	x0, 248 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x248>
 220:	b	254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
 224:	cbz	x22, 254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
 228:	ldr	x8, [x22]
 22c:	mov	x0, x22
 230:	b	24c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x24c>
 234:	add	x0, x24, #0x8
 238:	add	x2, x29, #0x18
 23c:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 240:	ldr	x0, [x29, #24]
 244:	cbz	x0, 254 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x254>
 248:	ldr	x8, [x0]
 24c:	ldr	x8, [x8, #8]
 250:	blr	x8
 254:	ldr	x8, [x20]
 258:	orr	x8, x8, #0x1
 25c:	str	x8, [x19]
 260:	str	xzr, [x20]
 264:	ldp	x20, x19, [sp, #80]
 268:	ldp	x22, x21, [sp, #64]
 26c:	ldp	x24, x23, [sp, #48]
 270:	ldr	x25, [sp, #32]
 274:	ldp	x29, x30, [sp, #16]
 278:	add	sp, sp, #0x60
 27c:	ret

Disassembly of section .text._ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_:

0000000000000000 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZTVN4llvm9ErrorListE>
  14:	ldr	x8, [x8]
  18:	mov	x20, x0
  1c:	mov	x19, x0
  20:	mov	x22, x1
  24:	add	x8, x8, #0x10
  28:	str	x8, [x0]
  2c:	str	xzr, [x20, #8]!
  30:	stp	xzr, xzr, [x0, #16]
  34:	ldr	x0, [x1]
  38:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  3c:	mov	x21, x2
  40:	ldr	x8, [x0]
  44:	ldr	x8, [x8, #48]
  48:	ldr	x1, [x1]
  4c:	blr	x8
  50:	tbnz	w0, #0, f4 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf4>
  54:	ldr	x0, [x21]
  58:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  5c:	ldr	x8, [x0]
  60:	ldr	x8, [x8, #48]
  64:	ldr	x1, [x1]
  68:	blr	x8
  6c:	tbnz	w0, #0, f4 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf4>
  70:	ldp	x1, x8, [x19, #16]
  74:	cmp	x1, x8
  78:	b.eq	98 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0x98>  // b.none
  7c:	ldr	x8, [x22]
  80:	str	xzr, [x22]
  84:	str	x8, [x1]
  88:	ldr	x8, [x19, #16]
  8c:	add	x1, x8, #0x8
  90:	str	x1, [x19, #16]
  94:	b	a8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xa8>
  98:	mov	x0, x20
  9c:	mov	x2, x22
  a0:	bl	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  a4:	ldr	x1, [x19, #16]
  a8:	ldr	x8, [x19, #24]
  ac:	cmp	x1, x8
  b0:	b.eq	dc <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xdc>  // b.none
  b4:	ldr	x8, [x21]
  b8:	str	xzr, [x21]
  bc:	str	x8, [x1]
  c0:	ldr	x8, [x19, #16]
  c4:	add	x8, x8, #0x8
  c8:	str	x8, [x19, #16]
  cc:	ldp	x20, x19, [sp, #32]
  d0:	ldp	x22, x21, [sp, #16]
  d4:	ldp	x29, x30, [sp], #48
  d8:	ret
  dc:	mov	x0, x20
  e0:	mov	x2, x21
  e4:	ldp	x20, x19, [sp, #32]
  e8:	ldp	x22, x21, [sp, #16]
  ec:	ldp	x29, x30, [sp], #48
  f0:	b	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  f4:	adrp	x0, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  f8:	adrp	x1, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  fc:	adrp	x3, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x182                 	// #386
 110:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	144 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x144>  // b.none
  2c:	asr	x9, x8, #3
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #60
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #3
  70:	cbz	x25, 84 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x84>
  74:	lsl	x0, x25, #3
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	x8, [x23]
  8c:	str	xzr, [x23]
  90:	cmp	x20, x21
  94:	mov	x23, x22
  98:	str	x8, [x22, x26, lsl #3]
  9c:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  a0:	mov	x23, x22
  a4:	mov	x26, x20
  a8:	b	bc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xbc>
  ac:	str	xzr, [x26], #8
  b0:	cmp	x21, x26
  b4:	add	x23, x23, #0x8
  b8:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  bc:	ldr	x8, [x26]
  c0:	str	xzr, [x26]
  c4:	str	x8, [x23]
  c8:	ldr	x0, [x26]
  cc:	cbz	x0, ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  d0:	ldr	x8, [x0]
  d4:	ldr	x8, [x8, #8]
  d8:	blr	x8
  dc:	b	ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  e0:	str	xzr, [x21], #8
  e4:	cmp	x24, x21
  e8:	add	x23, x23, #0x8
  ec:	b.eq	114 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x114>  // b.none
  f0:	ldr	x8, [x21]
  f4:	str	xzr, [x21]
  f8:	str	x8, [x23]
  fc:	ldr	x0, [x21]
 100:	cbz	x0, e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 104:	ldr	x8, [x0]
 108:	ldr	x8, [x8, #8]
 10c:	blr	x8
 110:	b	e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 114:	cbz	x20, 120 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x120>
 118:	mov	x0, x20
 11c:	bl	0 <_ZdlPv>
 120:	add	x8, x22, x25, lsl #3
 124:	stp	x22, x23, [x19]
 128:	str	x8, [x19, #16]
 12c:	ldp	x20, x19, [sp, #64]
 130:	ldp	x22, x21, [sp, #48]
 134:	ldp	x24, x23, [sp, #32]
 138:	ldp	x26, x25, [sp, #16]
 13c:	ldp	x29, x30, [sp], #80
 140:	ret
 144:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldp	x8, x9, [x0]
  18:	ldr	x10, [x0, #16]
  1c:	mov	x20, x2
  20:	mov	x19, x0
  24:	sub	x11, x1, x8
  28:	cmp	x9, x10
  2c:	asr	x21, x11, #3
  30:	b.eq	cc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xcc>  // b.none
  34:	cmp	x9, x1
  38:	b.eq	e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xe0>  // b.none
  3c:	ldur	x10, [x9, #-8]
  40:	add	x22, x8, x21, lsl #3
  44:	stp	xzr, x10, [x9, #-8]
  48:	ldr	x9, [x19, #8]
  4c:	sub	x8, x9, #0x8
  50:	add	x10, x9, #0x8
  54:	sub	x9, x8, x22
  58:	cmp	x9, #0x1
  5c:	str	x10, [x19, #8]
  60:	b.lt	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xa8>  // b.tstop
  64:	lsr	x9, x9, #3
  68:	add	x23, x9, #0x1
  6c:	mov	x24, x8
  70:	b	84 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x84>
  74:	sub	x23, x23, #0x1
  78:	cmp	x23, #0x1
  7c:	mov	x8, x24
  80:	b.le	a8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xa8>
  84:	ldr	x9, [x24, #-8]!
  88:	str	xzr, [x24]
  8c:	ldr	x0, [x8]
  90:	str	x9, [x8]
  94:	cbz	x0, 74 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x74>
  98:	ldr	x8, [x0]
  9c:	ldr	x8, [x8, #8]
  a0:	blr	x8
  a4:	b	74 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0x74>
  a8:	ldr	x8, [x20]
  ac:	str	xzr, [x20]
  b0:	ldr	x0, [x22]
  b4:	str	x8, [x22]
  b8:	cbz	x0, f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xf8>
  bc:	ldr	x8, [x0]
  c0:	ldr	x8, [x8, #8]
  c4:	blr	x8
  c8:	b	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xf8>
  cc:	add	x1, x8, x21, lsl #3
  d0:	mov	x0, x19
  d4:	mov	x2, x20
  d8:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_>
  dc:	b	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE14_M_insert_rvalEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EEOS5_+0xf8>
  e0:	ldr	x8, [x20]
  e4:	str	xzr, [x20]
  e8:	str	x8, [x9]
  ec:	ldr	x8, [x19, #8]
  f0:	add	x8, x8, #0x8
  f4:	str	x8, [x19, #8]
  f8:	ldr	x8, [x19]
  fc:	ldp	x20, x19, [sp, #48]
 100:	ldp	x24, x23, [sp, #16]
 104:	add	x0, x8, x21, lsl #3
 108:	ldp	x22, x21, [sp, #32]
 10c:	ldp	x29, x30, [sp], #64
 110:	ret

Disassembly of section .text._ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_:

0000000000000000 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #16]
  18:	mov	x22, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x8, 6c <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x6c>
  28:	ldr	x9, [x22]
  2c:	mov	x21, x20
  30:	ldr	x10, [x8, #32]
  34:	add	x11, x8, #0x18
  38:	add	x12, x8, #0x10
  3c:	cmp	x10, x9
  40:	csel	x21, x21, x8, cc  // cc = lo, ul, last
  44:	csel	x8, x11, x12, cc  // cc = lo, ul, last
  48:	ldr	x8, [x8]
  4c:	cbnz	x8, 30 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x30>
  50:	cmp	x21, x20
  54:	b.eq	70 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x70>  // b.none
  58:	ldr	x8, [x22]
  5c:	ldr	x9, [x21, #32]
  60:	cmp	x8, x9
  64:	b.cc	70 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0x70>  // b.lo, b.ul, b.last
  68:	b	f0 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0xf0>
  6c:	mov	x21, x20
  70:	mov	w0, #0x30                  	// #48
  74:	bl	0 <_Znwm>
  78:	ldr	x8, [x22]
  7c:	mov	x23, x0
  80:	mov	x22, x0
  84:	mov	x1, x21
  88:	str	x8, [x23, #32]!
  8c:	str	wzr, [x0, #40]
  90:	mov	x0, x19
  94:	mov	x2, x23
  98:	bl	0 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_>
  9c:	mov	x21, x0
  a0:	cbz	x1, e8 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0xe8>
  a4:	mov	x2, x1
  a8:	mov	w0, #0x1                   	// #1
  ac:	cbnz	x21, c8 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0xc8>
  b0:	cmp	x20, x2
  b4:	b.eq	c8 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0xc8>  // b.none
  b8:	ldr	x8, [x23]
  bc:	ldr	x9, [x2, #32]
  c0:	cmp	x8, x9
  c4:	cset	w0, cc  // cc = lo, ul, last
  c8:	mov	x1, x22
  cc:	mov	x3, x20
  d0:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  d4:	ldr	x8, [x19, #40]
  d8:	mov	x21, x22
  dc:	add	x8, x8, #0x1
  e0:	str	x8, [x19, #40]
  e4:	b	f0 <_ZNSt3mapImjSt4lessImESaISt4pairIKmjEEEixERS3_+0xf0>
  e8:	mov	x0, x22
  ec:	bl	0 <_ZdlPv>
  f0:	add	x0, x21, #0x28
  f4:	ldp	x20, x19, [sp, #48]
  f8:	ldp	x22, x21, [sp, #32]
  fc:	ldr	x23, [sp, #16]
 100:	ldp	x29, x30, [sp], #64
 104:	ret

Disassembly of section .text._ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x74>  // b.none
  2c:	ldr	x22, [x22]
  30:	ldr	x8, [x20, #32]
  34:	cmp	x22, x8
  38:	b.cs	d0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0xd0>  // b.hs, b.nlast
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	118 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x118>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldr	x8, [x0, #32]
  54:	cmp	x8, x22
  58:	b.cs	124 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x124>  // b.hs, b.nlast
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	200 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x200>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldr	x9, [x22]
  84:	ldr	x8, [x19, #32]
  88:	cmp	x8, x9
  8c:	b.cc	1d0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1d0>  // b.lo, b.ul, b.last
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 164 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x164>
  98:	ldr	x8, [x22]
  9c:	ldr	x10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	x8, x10
  b0:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x9c>
  bc:	cmp	x8, x10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.cc	168 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x168>  // b.lo, b.ul, b.last
  cc:	b	180 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x180>
  d0:	cmp	x8, x22
  d4:	b.cs	110 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x110>  // b.hs, b.nlast
  d8:	ldr	x19, [x21, #32]
  dc:	cmp	x19, x20
  e0:	b.eq	1d0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1d0>  // b.none
  e4:	mov	x0, x20
  e8:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  ec:	ldr	x8, [x0, #32]
  f0:	cmp	x22, x8
  f4:	b.cs	18c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x18c>  // b.hs, b.nlast
  f8:	ldr	x8, [x20, #24]
  fc:	cmp	x8, #0x0
 100:	csel	x8, xzr, x0, eq  // eq = none
 104:	csel	x19, x20, x0, eq  // eq = none
 108:	mov	x20, x8
 10c:	b	200 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x200>
 110:	mov	x19, xzr
 114:	b	200 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x200>
 118:	mov	x20, x24
 11c:	mov	x19, x24
 120:	b	200 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x200>
 124:	ldr	x9, [x21, #16]
 128:	cbz	x9, 1c4 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1c4>
 12c:	ldr	x8, [x9, #32]
 130:	mov	x19, x9
 134:	add	x9, x9, #0x10
 138:	add	x10, x19, #0x18
 13c:	cmp	x22, x8
 140:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 144:	ldr	x9, [x9]
 148:	cbnz	x9, 12c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x12c>
 14c:	cmp	x22, x8
 150:	mov	x0, x19
 154:	b.cs	1f0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1f0>  // b.hs, b.nlast
 158:	cmp	x24, x19
 15c:	b.ne	1e8 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1e8>  // b.any
 160:	b	1d0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1d0>
 164:	mov	x19, x23
 168:	ldr	x8, [x21, #24]
 16c:	cmp	x8, x20
 170:	b.eq	1d0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1d0>  // b.none
 174:	mov	x0, x20
 178:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 17c:	ldr	x8, [x22]
 180:	ldr	x9, [x0, #32]
 184:	cmp	x9, x8
 188:	b	1f8 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1f8>
 18c:	ldr	x9, [x21, #16]
 190:	cbz	x9, 1d8 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1d8>
 194:	ldr	x8, [x9, #32]
 198:	mov	x19, x9
 19c:	add	x9, x9, #0x10
 1a0:	add	x10, x19, #0x18
 1a4:	cmp	x22, x8
 1a8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 1ac:	ldr	x9, [x9]
 1b0:	cbnz	x9, 194 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x194>
 1b4:	cmp	x22, x8
 1b8:	mov	x0, x19
 1bc:	b.cc	1dc <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1dc>  // b.lo, b.ul, b.last
 1c0:	b	1f0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1f0>
 1c4:	mov	x19, x23
 1c8:	cmp	x24, x19
 1cc:	b.ne	1e8 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1e8>  // b.any
 1d0:	mov	x20, xzr
 1d4:	b	200 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x200>
 1d8:	mov	x19, x23
 1dc:	ldr	x8, [x21, #24]
 1e0:	cmp	x8, x19
 1e4:	b.eq	1d0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERS1_+0x1d0>  // b.none
 1e8:	mov	x0, x19
 1ec:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1f0:	ldr	x8, [x0, #32]
 1f4:	cmp	x8, x22
 1f8:	csel	x20, xzr, x0, cc  // cc = lo, ul, last
 1fc:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
 200:	mov	x0, x20
 204:	mov	x1, x19
 208:	ldp	x20, x19, [sp, #48]
 20c:	ldp	x22, x21, [sp, #32]
 210:	ldp	x24, x23, [sp, #16]
 214:	ldp	x29, x30, [sp], #64
 218:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldr	x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
  ec:	cbz	w19, 158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x158>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x158>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	16c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x16c>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	w23, [x8, x22, lsl #2]
 128:	cmp	w23, #0x20
 12c:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 130:	mov	w1, #0x20                  	// #32
 134:	bfxil	w1, w23, #0, #5
 138:	mov	w2, #0x6                   	// #6
 13c:	mov	x0, x20
 140:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
 144:	lsr	w1, w23, #5
 148:	cmp	w23, #0x3ff
 14c:	mov	w23, w1
 150:	b.hi	130 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0x130>  // b.pmore
 154:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j+0xfc>
 158:	ldp	x20, x19, [sp, #48]
 15c:	ldp	x22, x21, [sp, #32]
 160:	ldr	x23, [sp, #16]
 164:	ldp	x29, x30, [sp], #64
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
 170:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
 174:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj1EEEEEvjRKT_j>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x99                  	// #153
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldr	x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
  ec:	cbz	w19, 158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x158>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x158>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	16c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x16c>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	w23, [x8, x22, lsl #2]
 128:	cmp	w23, #0x20
 12c:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 130:	mov	w1, #0x20                  	// #32
 134:	bfxil	w1, w23, #0, #5
 138:	mov	w2, #0x6                   	// #6
 13c:	mov	x0, x20
 140:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
 144:	lsr	w1, w23, #5
 148:	cmp	w23, #0x3ff
 14c:	mov	w23, w1
 150:	b.hi	130 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0x130>  // b.pmore
 154:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j+0xfc>
 158:	ldp	x20, x19, [sp, #48]
 15c:	ldp	x22, x21, [sp, #32]
 160:	ldr	x23, [sp, #16]
 164:	ldp	x29, x30, [sp], #64
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
 170:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
 174:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj64EEEEEvjRKT_j>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x99                  	// #153
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE:

0000000000000000 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	stur	x5, [x29, #-8]
  24:	ldp	x8, x10, [x0, #24]
  28:	sub	w9, w1, #0x4
  2c:	sub	x10, x10, x8
  30:	cmp	x9, x10, asr #4
  34:	b.cs	440 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x440>  // b.hs, b.nlast
  38:	mov	x23, x2
  3c:	lsl	x9, x9, #4
  40:	ldr	w2, [x0, #16]
  44:	ldr	x25, [x8, x9]
  48:	mov	x24, x6
  4c:	mov	x21, x4
  50:	mov	x19, x3
  54:	mov	x22, x0
  58:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  5c:	ldr	w26, [x25, #8]
  60:	tst	x24, #0xff00000000
  64:	b.eq	9c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x9c>  // b.none
  68:	cbz	w26, 4a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4a0>
  6c:	ldr	x1, [x25]
  70:	ldrb	w8, [x1, #8]
  74:	tbnz	w8, #0, 2b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2b4>
  78:	ubfx	w8, w8, #1, #3
  7c:	cmp	w8, #0x5
  80:	b.eq	4c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4c0>  // b.none
  84:	cmp	w8, #0x3
  88:	b.eq	4c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4c0>  // b.none
  8c:	mov	x0, x22
  90:	mov	w2, w24
  94:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  98:	b	2c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2c0>
  9c:	mov	w27, wzr
  a0:	cmp	w27, w26
  a4:	b.eq	2cc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2cc>  // b.none
  a8:	ldur	x8, [x29, #-8]
  ac:	mov	w28, wzr
  b0:	mov	x20, x21
  b4:	str	x21, [sp, #16]
  b8:	and	x9, x8, #0xffffffff
  bc:	lsr	x8, x8, #32
  c0:	stp	x9, x8, [sp]
  c4:	b	f0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf0>
  c8:	mov	w8, w28
  cc:	cmp	x19, x8
  d0:	b.ls	380 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x380>  // b.plast
  d4:	ldr	w2, [x23, x8, lsl #2]
  d8:	mov	x0, x22
  dc:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  e0:	add	w28, w28, #0x1
  e4:	add	w27, w27, #0x1
  e8:	cmp	w27, w26
  ec:	b.eq	2d4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2d4>  // b.none
  f0:	ldr	w8, [x25, #8]
  f4:	cmp	w8, w27
  f8:	b.ls	300 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x300>  // b.plast
  fc:	ldr	x9, [x25]
 100:	add	x1, x9, w27, uxtw #4
 104:	ldrb	w10, [x1, #8]
 108:	tbnz	w10, #0, 1c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1c0>
 10c:	ubfx	w10, w10, #1, #3
 110:	cmp	w10, #0x5
 114:	b.eq	1e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1e0>  // b.none
 118:	cmp	w10, #0x3
 11c:	b.ne	c8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xc8>  // b.any
 120:	add	w10, w27, #0x2
 124:	cmp	w10, w26
 128:	b.ne	3a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3a0>  // b.any
 12c:	add	w27, w27, #0x1
 130:	cmp	w8, w27
 134:	b.ls	300 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x300>  // b.plast
 138:	add	x24, x9, w27, uxtw #4
 13c:	cbz	x20, 234 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x234>
 140:	cmp	x19, w28, uxtw
 144:	b.ne	3c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3c0>  // b.any
 148:	ldur	x8, [x29, #-8]
 14c:	cmp	w8, #0x20
 150:	mov	w1, w8
 154:	b.cc	184 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x184>  // b.lo, b.ul, b.last
 158:	ldur	x8, [x29, #-8]
 15c:	mov	w21, w8
 160:	mov	w1, #0x20                  	// #32
 164:	bfxil	w1, w21, #0, #5
 168:	mov	w2, #0x6                   	// #6
 16c:	mov	x0, x22
 170:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 174:	lsr	w1, w21, #5
 178:	cmp	w21, #0x3ff
 17c:	mov	w21, w1
 180:	b.hi	160 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x160>  // b.pmore
 184:	mov	w2, #0x6                   	// #6
 188:	mov	x0, x22
 18c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 190:	ldur	x8, [x29, #-8]
 194:	cbz	w8, 1b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1b4>
 198:	ldr	x21, [sp]
 19c:	ldrb	w2, [x20], #1
 1a0:	mov	x0, x22
 1a4:	mov	x1, x24
 1a8:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 1ac:	subs	x21, x21, #0x1
 1b0:	b.ne	19c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x19c>  // b.any
 1b4:	ldr	x21, [sp, #16]
 1b8:	mov	x20, xzr
 1bc:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 1c0:	mov	w8, w28
 1c4:	cmp	x19, x8
 1c8:	b.ls	360 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x360>  // b.plast
 1cc:	ldr	w8, [x23, x8, lsl #2]
 1d0:	ldr	x9, [x1]
 1d4:	cmp	x9, x8
 1d8:	b.eq	e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe0>  // b.none
 1dc:	b	340 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x340>
 1e0:	mov	w8, w28
 1e4:	cbz	x20, 21c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x21c>
 1e8:	cmp	x19, x8
 1ec:	b.ne	3e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3e0>  // b.any
 1f0:	cmp	x20, x21
 1f4:	b.ne	400 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x400>  // b.any
 1f8:	ldr	x8, [sp, #8]
 1fc:	cbnz	x8, 420 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x420>
 200:	ldur	x2, [x29, #-8]
 204:	mov	w3, #0x1                   	// #1
 208:	mov	x0, x22
 20c:	mov	x1, x21
 210:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 214:	mov	x20, xzr
 218:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 21c:	sub	x2, x19, x8
 220:	add	x1, x23, x8, lsl #2
 224:	mov	w3, #0x1                   	// #1
 228:	mov	x0, x22
 22c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 230:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 234:	sub	w20, w19, w28
 238:	cmp	w20, #0x20
 23c:	b.cs	248 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x248>  // b.hs, b.nlast
 240:	mov	w1, w20
 244:	b	26c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x26c>
 248:	mov	w1, #0x20                  	// #32
 24c:	bfxil	w1, w20, #0, #5
 250:	mov	w2, #0x6                   	// #6
 254:	mov	x0, x22
 258:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 25c:	lsr	w1, w20, #5
 260:	cmp	w20, #0x3ff
 264:	mov	w20, w1
 268:	b.hi	248 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x248>  // b.pmore
 26c:	mov	w2, #0x6                   	// #6
 270:	mov	x0, x22
 274:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 278:	cmp	w28, w19
 27c:	b.eq	2a8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2a8>  // b.none
 280:	mov	w20, w28
 284:	cmp	x19, x20
 288:	b.ls	320 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x320>  // b.plast
 28c:	ldr	w2, [x23, x20, lsl #2]
 290:	mov	x0, x22
 294:	mov	x1, x24
 298:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 29c:	add	w28, w20, #0x1
 2a0:	cmp	w19, w28
 2a4:	b.ne	280 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x280>  // b.any
 2a8:	mov	x20, xzr
 2ac:	mov	w28, w19
 2b0:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 2b4:	ldr	x8, [x1]
 2b8:	cmp	x8, w24, uxtw
 2bc:	b.ne	340 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x340>  // b.any
 2c0:	mov	w27, #0x1                   	// #1
 2c4:	cmp	w27, w26
 2c8:	b.ne	a8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa8>  // b.any
 2cc:	mov	w28, wzr
 2d0:	mov	x20, x21
 2d4:	cmp	x19, w28, uxtw
 2d8:	b.ne	460 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x460>  // b.any
 2dc:	cbnz	x20, 480 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x480>
 2e0:	ldp	x20, x19, [sp, #112]
 2e4:	ldp	x22, x21, [sp, #96]
 2e8:	ldp	x24, x23, [sp, #80]
 2ec:	ldp	x26, x25, [sp, #64]
 2f0:	ldp	x28, x27, [sp, #48]
 2f4:	ldp	x29, x30, [sp, #32]
 2f8:	add	sp, sp, #0x80
 2fc:	ret
 300:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 304:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 308:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 30c:	add	x0, x0, #0x0
 310:	add	x1, x1, #0x0
 314:	add	x3, x3, #0x0
 318:	mov	w2, #0x99                  	// #153
 31c:	bl	0 <__assert_fail>
 320:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 324:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 328:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 32c:	add	x0, x0, #0x0
 330:	add	x1, x1, #0x0
 334:	add	x3, x3, #0x0
 338:	mov	w2, #0xfa                  	// #250
 33c:	bl	0 <__assert_fail>
 340:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 344:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 348:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 34c:	add	x0, x0, #0x0
 350:	add	x1, x1, #0x0
 354:	add	x3, x3, #0x0
 358:	mov	w2, #0x107                 	// #263
 35c:	bl	0 <__assert_fail>
 360:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 364:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 368:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 36c:	add	x0, x0, #0x0
 370:	add	x1, x1, #0x0
 374:	add	x3, x3, #0x0
 378:	mov	w2, #0x145                 	// #325
 37c:	bl	0 <__assert_fail>
 380:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 384:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 388:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 38c:	add	x0, x0, #0x0
 390:	add	x1, x1, #0x0
 394:	add	x3, x3, #0x0
 398:	mov	w2, #0x173                 	// #371
 39c:	bl	0 <__assert_fail>
 3a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ac:	add	x0, x0, #0x0
 3b0:	add	x1, x1, #0x0
 3b4:	add	x3, x3, #0x0
 3b8:	mov	w2, #0x14a                 	// #330
 3bc:	bl	0 <__assert_fail>
 3c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3cc:	add	x0, x0, #0x0
 3d0:	add	x1, x1, #0x0
 3d4:	add	x3, x3, #0x0
 3d8:	mov	w2, #0x151                 	// #337
 3dc:	bl	0 <__assert_fail>
 3e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ec:	add	x0, x0, #0x0
 3f0:	add	x1, x1, #0x0
 3f4:	add	x3, x3, #0x0
 3f8:	mov	w2, #0x169                 	// #361
 3fc:	bl	0 <__assert_fail>
 400:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 404:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 408:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 40c:	add	x0, x0, #0x0
 410:	add	x1, x1, #0x0
 414:	add	x3, x3, #0x0
 418:	mov	w2, #0x16b                 	// #363
 41c:	bl	0 <__assert_fail>
 420:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 424:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 428:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 42c:	add	x0, x0, #0x0
 430:	add	x1, x1, #0x0
 434:	add	x3, x3, #0x0
 438:	mov	w2, #0x16c                 	// #364
 43c:	bl	0 <__assert_fail>
 440:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 444:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 448:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 44c:	add	x0, x0, #0x0
 450:	add	x1, x1, #0x0
 454:	add	x3, x3, #0x0
 458:	mov	w2, #0x12d                 	// #301
 45c:	bl	0 <__assert_fail>
 460:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 464:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 468:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 46c:	add	x0, x0, #0x0
 470:	add	x1, x1, #0x0
 474:	add	x3, x3, #0x0
 478:	mov	w2, #0x178                 	// #376
 47c:	bl	0 <__assert_fail>
 480:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 484:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 488:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 48c:	add	x0, x0, #0x0
 490:	add	x1, x1, #0x0
 494:	add	x3, x3, #0x0
 498:	mov	w2, #0x17a                 	// #378
 49c:	bl	0 <__assert_fail>
 4a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4ac:	add	x0, x0, #0x0
 4b0:	add	x1, x1, #0x0
 4b4:	add	x3, x3, #0x0
 4b8:	mov	w2, #0x134                 	// #308
 4bc:	bl	0 <__assert_fail>
 4c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplIjEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4cc:	add	x0, x0, #0x0
 4d0:	add	x1, x1, #0x0
 4d4:	add	x3, x3, #0x0
 4d8:	mov	w2, #0x13c                 	// #316
 4dc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x1, #8]
   c:	tbnz	w8, #0, dc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xdc>
  10:	ubfx	w8, w8, #1, #3
  14:	cmp	w8, #0x1
  18:	b.eq	60 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x60>  // b.none
  1c:	cmp	w8, #0x2
  20:	b.eq	48 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x48>  // b.none
  24:	cmp	w8, #0x4
  28:	b.ne	fc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xfc>  // b.any
  2c:	sub	w8, w2, #0x61
  30:	and	w8, w8, #0xff
  34:	cmp	w8, #0x19
  38:	and	w8, w2, #0xff
  3c:	b.hi	80 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x80>  // b.pmore
  40:	sub	w1, w8, #0x61
  44:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  48:	ldr	x8, [x1]
  4c:	cbz	x8, 78 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x78>
  50:	mov	w1, w2
  54:	mov	w2, w8
  58:	ldp	x29, x30, [sp], #16
  5c:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  60:	ldr	x8, [x1]
  64:	cbz	x8, 78 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x78>
  68:	mov	w1, w2
  6c:	mov	w2, w8
  70:	ldp	x29, x30, [sp], #16
  74:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  78:	ldp	x29, x30, [sp], #16
  7c:	ret
  80:	sub	w9, w2, #0x41
  84:	and	w9, w9, #0xff
  88:	cmp	w9, #0x19
  8c:	b.hi	98 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x98>  // b.pmore
  90:	sub	w1, w8, #0x27
  94:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  98:	sub	w9, w2, #0x30
  9c:	and	w9, w9, #0xff
  a0:	cmp	w9, #0x9
  a4:	b.hi	b0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xb0>  // b.pmore
  a8:	add	w1, w8, #0x4
  ac:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  b0:	and	w8, w2, #0xff
  b4:	cmp	w8, #0x2e
  b8:	b.eq	cc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xcc>  // b.none
  bc:	cmp	w8, #0x5f
  c0:	b.ne	114 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0x114>  // b.any
  c4:	mov	w1, #0x3f                  	// #63
  c8:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  cc:	mov	w1, #0x3e                  	// #62
  d0:	mov	w2, #0x6                   	// #6
  d4:	ldp	x29, x30, [sp], #16
  d8:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  dc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  e0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  e4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x10e                 	// #270
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 100:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	mov	w2, #0x112                 	// #274
 110:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 114:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 118:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIjEEvRKNS_15BitCodeAbbrevOpET_>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	mov	w2, #0x99                  	// #153
 128:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x1, #8]
   c:	tbnz	w8, #0, dc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xdc>
  10:	ubfx	w8, w8, #1, #3
  14:	cmp	w8, #0x1
  18:	b.eq	60 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x60>  // b.none
  1c:	cmp	w8, #0x2
  20:	b.eq	48 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x48>  // b.none
  24:	cmp	w8, #0x4
  28:	b.ne	fc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xfc>  // b.any
  2c:	sub	w8, w2, #0x61
  30:	and	w8, w8, #0xff
  34:	cmp	w8, #0x19
  38:	and	w8, w2, #0xff
  3c:	b.hi	80 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x80>  // b.pmore
  40:	sub	w1, w8, #0x61
  44:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  48:	ldr	x8, [x1]
  4c:	cbz	x8, 78 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x78>
  50:	and	x1, x2, #0xff
  54:	mov	w2, w8
  58:	ldp	x29, x30, [sp], #16
  5c:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  60:	ldr	x8, [x1]
  64:	cbz	x8, 78 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x78>
  68:	and	w1, w2, #0xff
  6c:	mov	w2, w8
  70:	ldp	x29, x30, [sp], #16
  74:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  78:	ldp	x29, x30, [sp], #16
  7c:	ret
  80:	sub	w9, w2, #0x41
  84:	and	w9, w9, #0xff
  88:	cmp	w9, #0x19
  8c:	b.hi	98 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x98>  // b.pmore
  90:	sub	w1, w8, #0x27
  94:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  98:	sub	w9, w2, #0x30
  9c:	and	w9, w9, #0xff
  a0:	cmp	w9, #0x9
  a4:	b.hi	b0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xb0>  // b.pmore
  a8:	add	w1, w8, #0x4
  ac:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  b0:	and	w8, w2, #0xff
  b4:	cmp	w8, #0x2e
  b8:	b.eq	cc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xcc>  // b.none
  bc:	cmp	w8, #0x5f
  c0:	b.ne	114 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0x114>  // b.any
  c4:	mov	w1, #0x3f                  	// #63
  c8:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  cc:	mov	w1, #0x3e                  	// #62
  d0:	mov	w2, #0x6                   	// #6
  d4:	ldp	x29, x30, [sp], #16
  d8:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  dc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  e0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  e4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x10e                 	// #270
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
 100:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	mov	w2, #0x112                 	// #274
 110:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 114:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
 118:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldIhEEvRKNS_15BitCodeAbbrevOpET_>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	mov	w2, #0x99                  	// #153
 128:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb:

0000000000000000 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x2
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	tbz	w3, #0, 68 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x68>
  24:	cmp	w21, #0x20
  28:	b.cs	34 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x34>  // b.hs, b.nlast
  2c:	mov	w1, w21
  30:	b	5c <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x5c>
  34:	mov	w22, w21
  38:	mov	w1, #0x20                  	// #32
  3c:	bfxil	w1, w22, #0, #5
  40:	mov	w2, #0x6                   	// #6
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
  4c:	lsr	w1, w22, #5
  50:	cmp	w22, #0x3ff
  54:	mov	w22, w1
  58:	b.hi	38 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x38>  // b.pmore
  5c:	mov	w2, #0x6                   	// #6
  60:	mov	x0, x19
  64:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
  68:	ldr	w8, [x19, #8]
  6c:	cbz	w8, c0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0xc0>
  70:	ldr	x22, [x19]
  74:	ldr	w23, [x19, #12]
  78:	ldp	w8, w9, [x22, #8]
  7c:	sub	x9, x9, x8
  80:	cmp	x9, #0x3
  84:	b.hi	a0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0xa0>  // b.pmore
  88:	add	x2, x8, #0x4
  8c:	add	x1, x22, #0x10
  90:	mov	w3, #0x1                   	// #1
  94:	mov	x0, x22
  98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  9c:	ldr	w8, [x22, #8]
  a0:	ldr	x9, [x22]
  a4:	str	w23, [x9, x8]
  a8:	ldp	w8, w9, [x22, #8]
  ac:	add	x8, x8, #0x4
  b0:	cmp	x8, x9
  b4:	b.hi	198 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x198>  // b.pmore
  b8:	str	w8, [x22, #8]
  bc:	str	xzr, [x19, #8]
  c0:	cbz	x21, 174 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x174>
  c4:	lsl	x22, x21, #2
  c8:	ldr	w23, [x20]
  cc:	cmp	w23, #0x100
  d0:	b.cs	1b8 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x1b8>  // b.hs, b.nlast
  d4:	ldr	x21, [x19]
  d8:	ldp	w8, w9, [x21, #8]
  dc:	cmp	w8, w9
  e0:	b.cs	110 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x110>  // b.hs, b.nlast
  e4:	ldr	x9, [x21]
  e8:	strb	w23, [x9, w8, uxtw]
  ec:	ldp	w8, w9, [x21, #8]
  f0:	cmp	w8, w9
  f4:	b.cs	198 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x198>  // b.hs, b.nlast
  f8:	add	w8, w8, #0x1
  fc:	subs	x22, x22, #0x4
 100:	add	x20, x20, #0x4
 104:	str	w8, [x21, #8]
 108:	b.ne	c8 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0xc8>  // b.any
 10c:	b	174 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x174>
 110:	add	x1, x21, #0x10
 114:	mov	w3, #0x1                   	// #1
 118:	mov	x0, x21
 11c:	mov	x2, xzr
 120:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 124:	ldr	w8, [x21, #8]
 128:	b	e4 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0xe4>
 12c:	ldp	w8, w9, [x20, #8]
 130:	cmp	w8, w9
 134:	b.cs	158 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x158>  // b.hs, b.nlast
 138:	ldr	x9, [x20]
 13c:	strb	wzr, [x9, w8, uxtw]
 140:	ldp	w8, w9, [x20, #8]
 144:	cmp	w8, w9
 148:	b.cs	198 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x198>  // b.hs, b.nlast
 14c:	add	w8, w8, #0x1
 150:	str	w8, [x20, #8]
 154:	b	174 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x174>
 158:	add	x1, x20, #0x10
 15c:	mov	w3, #0x1                   	// #1
 160:	mov	x0, x20
 164:	mov	x2, xzr
 168:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 16c:	ldr	w8, [x20, #8]
 170:	b	138 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x138>
 174:	ldr	x20, [x19]
 178:	ldrb	w8, [x20, #8]
 17c:	tst	w8, #0x3
 180:	b.ne	12c <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb+0x12c>  // b.any
 184:	ldp	x20, x19, [sp, #48]
 188:	ldp	x22, x21, [sp, #32]
 18c:	ldr	x23, [sp, #16]
 190:	ldp	x29, x30, [sp], #64
 194:	ret
 198:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 19c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 1a0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0x43                  	// #67
 1b4:	bl	0 <__assert_fail>
 1b8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 1bc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 1c0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobIjEEvNS_8ArrayRefIT_EEb>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x3, x3, #0x0
 1d0:	mov	w2, #0x18a                 	// #394
 1d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb:

0000000000000000 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x2
  18:	mov	x21, x1
  1c:	mov	x19, x0
  20:	tbz	w3, #0, 68 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x68>
  24:	cmp	w20, #0x20
  28:	b.cs	34 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x34>  // b.hs, b.nlast
  2c:	mov	w1, w20
  30:	b	5c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x5c>
  34:	mov	w22, w20
  38:	mov	w1, #0x20                  	// #32
  3c:	bfxil	w1, w22, #0, #5
  40:	mov	w2, #0x6                   	// #6
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
  4c:	lsr	w1, w22, #5
  50:	cmp	w22, #0x3ff
  54:	mov	w22, w1
  58:	b.hi	38 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x38>  // b.pmore
  5c:	mov	w2, #0x6                   	// #6
  60:	mov	x0, x19
  64:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
  68:	ldr	w8, [x19, #8]
  6c:	cbz	w8, c0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0xc0>
  70:	ldr	x22, [x19]
  74:	ldr	w23, [x19, #12]
  78:	ldp	w8, w9, [x22, #8]
  7c:	sub	x9, x9, x8
  80:	cmp	x9, #0x3
  84:	b.hi	a0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0xa0>  // b.pmore
  88:	add	x2, x8, #0x4
  8c:	add	x1, x22, #0x10
  90:	mov	w3, #0x1                   	// #1
  94:	mov	x0, x22
  98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  9c:	ldr	w8, [x22, #8]
  a0:	ldr	x9, [x22]
  a4:	str	w23, [x9, x8]
  a8:	ldp	w8, w9, [x22, #8]
  ac:	add	x8, x8, #0x4
  b0:	cmp	x8, x9
  b4:	b.hi	18c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x18c>  // b.pmore
  b8:	str	w8, [x22, #8]
  bc:	str	xzr, [x19, #8]
  c0:	cbz	x20, 168 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x168>
  c4:	ldr	x22, [x19]
  c8:	ldrb	w23, [x21]
  cc:	ldp	w8, w9, [x22, #8]
  d0:	cmp	w8, w9
  d4:	b.cs	104 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x104>  // b.hs, b.nlast
  d8:	ldr	x9, [x22]
  dc:	strb	w23, [x9, w8, uxtw]
  e0:	ldp	w8, w9, [x22, #8]
  e4:	cmp	w8, w9
  e8:	b.cs	18c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x18c>  // b.hs, b.nlast
  ec:	add	w8, w8, #0x1
  f0:	subs	x20, x20, #0x1
  f4:	add	x21, x21, #0x1
  f8:	str	w8, [x22, #8]
  fc:	b.ne	c4 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0xc4>  // b.any
 100:	b	168 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x168>
 104:	add	x1, x22, #0x10
 108:	mov	w3, #0x1                   	// #1
 10c:	mov	x0, x22
 110:	mov	x2, xzr
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	ldr	w8, [x22, #8]
 11c:	b	d8 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0xd8>
 120:	ldp	w8, w9, [x20, #8]
 124:	cmp	w8, w9
 128:	b.cs	14c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x14c>  // b.hs, b.nlast
 12c:	ldr	x9, [x20]
 130:	strb	wzr, [x9, w8, uxtw]
 134:	ldp	w8, w9, [x20, #8]
 138:	cmp	w8, w9
 13c:	b.cs	18c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x18c>  // b.hs, b.nlast
 140:	add	w8, w8, #0x1
 144:	str	w8, [x20, #8]
 148:	b	168 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x168>
 14c:	add	x1, x20, #0x10
 150:	mov	w3, #0x1                   	// #1
 154:	mov	x0, x20
 158:	mov	x2, xzr
 15c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 160:	ldr	w8, [x20, #8]
 164:	b	12c <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x12c>
 168:	ldr	x20, [x19]
 16c:	ldrb	w8, [x20, #8]
 170:	tst	w8, #0x3
 174:	b.ne	120 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb+0x120>  // b.any
 178:	ldp	x20, x19, [sp, #48]
 17c:	ldp	x22, x21, [sp, #32]
 180:	ldr	x23, [sp, #16]
 184:	ldp	x29, x30, [sp], #64
 188:	ret
 18c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
 190:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
 194:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobIhEEvNS_8ArrayRefIT_EEb>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x43                  	// #67
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
  ec:	cbz	w19, 190 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x190>
  f0:	mov	w8, wzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 108:	add	w8, w22, #0x1
 10c:	cmp	w8, w19
 110:	b.eq	190 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x190>  // b.none
 114:	ldr	x9, [x21, #8]
 118:	mov	w22, w8
 11c:	cmp	x9, x22
 120:	b.ls	1a4 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x1a4>  // b.plast
 124:	ldr	x8, [x21]
 128:	ldr	x24, [x8, x22, lsl #3]
 12c:	lsr	x8, x24, #32
 130:	mov	w23, w24
 134:	cbnz	x8, 168 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x168>
 138:	cmp	w23, #0x20
 13c:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 140:	mov	w1, #0x20                  	// #32
 144:	bfxil	w1, w23, #0, #5
 148:	mov	w2, #0x6                   	// #6
 14c:	mov	x0, x20
 150:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 154:	lsr	w1, w23, #5
 158:	cmp	w23, #0x400
 15c:	mov	w23, w1
 160:	b.cs	140 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x140>  // b.hs, b.nlast
 164:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xfc>
 168:	mov	w1, #0x20                  	// #32
 16c:	bfxil	w1, w23, #0, #5
 170:	mov	w2, #0x6                   	// #6
 174:	mov	x0, x20
 178:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 17c:	lsr	x23, x24, #5
 180:	cmp	x24, #0x3ff
 184:	mov	x24, x23
 188:	b.hi	168 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0x168>  // b.pmore
 18c:	b	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j+0xf8>
 190:	ldp	x20, x19, [sp, #48]
 194:	ldp	x22, x21, [sp, #32]
 198:	ldp	x24, x23, [sp, #16]
 19c:	ldp	x29, x30, [sp], #64
 1a0:	ret
 1a4:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 1a8:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 1ac:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefImEEEEvjRKT_j>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0xfa                  	// #250
 1c0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE:

0000000000000000 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	stur	x5, [x29, #-8]
  24:	ldp	x8, x10, [x0, #24]
  28:	sub	w9, w1, #0x4
  2c:	sub	x10, x10, x8
  30:	cmp	x9, x10, asr #4
  34:	b.cs	440 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x440>  // b.hs, b.nlast
  38:	mov	x23, x2
  3c:	lsl	x9, x9, #4
  40:	ldr	w2, [x0, #16]
  44:	ldr	x25, [x8, x9]
  48:	mov	x24, x6
  4c:	mov	x21, x4
  50:	mov	x19, x3
  54:	mov	x22, x0
  58:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  5c:	ldr	w26, [x25, #8]
  60:	tst	x24, #0xff00000000
  64:	b.eq	9c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x9c>  // b.none
  68:	cbz	w26, 4a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4a0>
  6c:	ldr	x1, [x25]
  70:	ldrb	w8, [x1, #8]
  74:	tbnz	w8, #0, 2b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2b4>
  78:	ubfx	w8, w8, #1, #3
  7c:	cmp	w8, #0x5
  80:	b.eq	4c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4c0>  // b.none
  84:	cmp	w8, #0x3
  88:	b.eq	4c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4c0>  // b.none
  8c:	mov	x0, x22
  90:	mov	w2, w24
  94:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  98:	b	2c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2c0>
  9c:	mov	w27, wzr
  a0:	cmp	w27, w26
  a4:	b.eq	2cc <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2cc>  // b.none
  a8:	ldur	x8, [x29, #-8]
  ac:	mov	w28, wzr
  b0:	mov	x20, x21
  b4:	str	x21, [sp, #16]
  b8:	and	x9, x8, #0xffffffff
  bc:	lsr	x8, x8, #32
  c0:	stp	x9, x8, [sp]
  c4:	b	f0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xf0>
  c8:	mov	w8, w28
  cc:	cmp	x19, x8
  d0:	b.ls	380 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x380>  // b.plast
  d4:	ldr	x2, [x23, x8, lsl #3]
  d8:	mov	x0, x22
  dc:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
  e0:	add	w28, w28, #0x1
  e4:	add	w27, w27, #0x1
  e8:	cmp	w27, w26
  ec:	b.eq	2d4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2d4>  // b.none
  f0:	ldr	w8, [x25, #8]
  f4:	cmp	w8, w27
  f8:	b.ls	300 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x300>  // b.plast
  fc:	ldr	x9, [x25]
 100:	add	x1, x9, w27, uxtw #4
 104:	ldrb	w10, [x1, #8]
 108:	tbnz	w10, #0, 1c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1c0>
 10c:	ubfx	w10, w10, #1, #3
 110:	cmp	w10, #0x5
 114:	b.eq	1e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1e0>  // b.none
 118:	cmp	w10, #0x3
 11c:	b.ne	c8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xc8>  // b.any
 120:	add	w10, w27, #0x2
 124:	cmp	w10, w26
 128:	b.ne	3a0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3a0>  // b.any
 12c:	add	w27, w27, #0x1
 130:	cmp	w8, w27
 134:	b.ls	300 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x300>  // b.plast
 138:	add	x24, x9, w27, uxtw #4
 13c:	cbz	x20, 234 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x234>
 140:	cmp	x19, w28, uxtw
 144:	b.ne	3c0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3c0>  // b.any
 148:	ldur	x8, [x29, #-8]
 14c:	cmp	w8, #0x20
 150:	mov	w1, w8
 154:	b.cc	184 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x184>  // b.lo, b.ul, b.last
 158:	ldur	x8, [x29, #-8]
 15c:	mov	w21, w8
 160:	mov	w1, #0x20                  	// #32
 164:	bfxil	w1, w21, #0, #5
 168:	mov	w2, #0x6                   	// #6
 16c:	mov	x0, x22
 170:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 174:	lsr	w1, w21, #5
 178:	cmp	w21, #0x3ff
 17c:	mov	w21, w1
 180:	b.hi	160 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x160>  // b.pmore
 184:	mov	w2, #0x6                   	// #6
 188:	mov	x0, x22
 18c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 190:	ldur	x8, [x29, #-8]
 194:	cbz	w8, 1b4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x1b4>
 198:	ldr	x21, [sp]
 19c:	ldrb	w2, [x20], #1
 1a0:	mov	x0, x22
 1a4:	mov	x1, x24
 1a8:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 1ac:	subs	x21, x21, #0x1
 1b0:	b.ne	19c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x19c>  // b.any
 1b4:	ldr	x21, [sp, #16]
 1b8:	mov	x20, xzr
 1bc:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 1c0:	mov	w8, w28
 1c4:	cmp	x19, x8
 1c8:	b.ls	340 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x340>  // b.plast
 1cc:	ldr	x8, [x23, x8, lsl #3]
 1d0:	ldr	x9, [x1]
 1d4:	cmp	x9, x8
 1d8:	b.eq	e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe0>  // b.none
 1dc:	b	360 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x360>
 1e0:	mov	w8, w28
 1e4:	cbz	x20, 21c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x21c>
 1e8:	cmp	x19, x8
 1ec:	b.ne	3e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x3e0>  // b.any
 1f0:	cmp	x20, x21
 1f4:	b.ne	400 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x400>  // b.any
 1f8:	ldr	x8, [sp, #8]
 1fc:	cbnz	x8, 420 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x420>
 200:	ldur	x2, [x29, #-8]
 204:	mov	w3, #0x1                   	// #1
 208:	mov	x0, x22
 20c:	mov	x1, x21
 210:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 214:	mov	x20, xzr
 218:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 21c:	sub	x2, x19, x8
 220:	add	x1, x23, x8, lsl #3
 224:	mov	w3, #0x1                   	// #1
 228:	mov	x0, x22
 22c:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 230:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 234:	sub	w20, w19, w28
 238:	cmp	w20, #0x20
 23c:	b.cs	248 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x248>  // b.hs, b.nlast
 240:	mov	w1, w20
 244:	b	26c <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x26c>
 248:	mov	w1, #0x20                  	// #32
 24c:	bfxil	w1, w20, #0, #5
 250:	mov	w2, #0x6                   	// #6
 254:	mov	x0, x22
 258:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 25c:	lsr	w1, w20, #5
 260:	cmp	w20, #0x3ff
 264:	mov	w20, w1
 268:	b.hi	248 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x248>  // b.pmore
 26c:	mov	w2, #0x6                   	// #6
 270:	mov	x0, x22
 274:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 278:	cmp	w28, w19
 27c:	b.eq	2a8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x2a8>  // b.none
 280:	mov	w20, w28
 284:	cmp	x19, x20
 288:	b.ls	320 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x320>  // b.plast
 28c:	ldr	x2, [x23, x20, lsl #3]
 290:	mov	x0, x22
 294:	mov	x1, x24
 298:	bl	0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 29c:	add	w28, w20, #0x1
 2a0:	cmp	w19, w28
 2a4:	b.ne	280 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x280>  // b.any
 2a8:	mov	x20, xzr
 2ac:	mov	w28, w19
 2b0:	b	e4 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xe4>
 2b4:	ldr	x8, [x1]
 2b8:	cmp	x8, w24, uxtw
 2bc:	b.ne	4e0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x4e0>  // b.any
 2c0:	mov	w27, #0x1                   	// #1
 2c4:	cmp	w27, w26
 2c8:	b.ne	a8 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0xa8>  // b.any
 2cc:	mov	w28, wzr
 2d0:	mov	x20, x21
 2d4:	cmp	x19, w28, uxtw
 2d8:	b.ne	460 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x460>  // b.any
 2dc:	cbnz	x20, 480 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE+0x480>
 2e0:	ldp	x20, x19, [sp, #112]
 2e4:	ldp	x22, x21, [sp, #96]
 2e8:	ldp	x24, x23, [sp, #80]
 2ec:	ldp	x26, x25, [sp, #64]
 2f0:	ldp	x28, x27, [sp, #48]
 2f4:	ldp	x29, x30, [sp, #32]
 2f8:	add	sp, sp, #0x80
 2fc:	ret
 300:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 304:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 308:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 30c:	add	x0, x0, #0x0
 310:	add	x1, x1, #0x0
 314:	add	x3, x3, #0x0
 318:	mov	w2, #0x99                  	// #153
 31c:	bl	0 <__assert_fail>
 320:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 324:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 328:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 32c:	add	x0, x0, #0x0
 330:	add	x1, x1, #0x0
 334:	add	x3, x3, #0x0
 338:	mov	w2, #0xfa                  	// #250
 33c:	bl	0 <__assert_fail>
 340:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 344:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 348:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 34c:	add	x0, x0, #0x0
 350:	add	x1, x1, #0x0
 354:	add	x3, x3, #0x0
 358:	mov	w2, #0x145                 	// #325
 35c:	bl	0 <__assert_fail>
 360:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 364:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 368:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 36c:	add	x0, x0, #0x0
 370:	add	x1, x1, #0x0
 374:	add	x3, x3, #0x0
 378:	mov	w2, #0x107                 	// #263
 37c:	bl	0 <__assert_fail>
 380:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 384:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 388:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 38c:	add	x0, x0, #0x0
 390:	add	x1, x1, #0x0
 394:	add	x3, x3, #0x0
 398:	mov	w2, #0x173                 	// #371
 39c:	bl	0 <__assert_fail>
 3a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ac:	add	x0, x0, #0x0
 3b0:	add	x1, x1, #0x0
 3b4:	add	x3, x3, #0x0
 3b8:	mov	w2, #0x14a                 	// #330
 3bc:	bl	0 <__assert_fail>
 3c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3cc:	add	x0, x0, #0x0
 3d0:	add	x1, x1, #0x0
 3d4:	add	x3, x3, #0x0
 3d8:	mov	w2, #0x151                 	// #337
 3dc:	bl	0 <__assert_fail>
 3e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3e8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 3ec:	add	x0, x0, #0x0
 3f0:	add	x1, x1, #0x0
 3f4:	add	x3, x3, #0x0
 3f8:	mov	w2, #0x169                 	// #361
 3fc:	bl	0 <__assert_fail>
 400:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 404:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 408:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 40c:	add	x0, x0, #0x0
 410:	add	x1, x1, #0x0
 414:	add	x3, x3, #0x0
 418:	mov	w2, #0x16b                 	// #363
 41c:	bl	0 <__assert_fail>
 420:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 424:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 428:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 42c:	add	x0, x0, #0x0
 430:	add	x1, x1, #0x0
 434:	add	x3, x3, #0x0
 438:	mov	w2, #0x16c                 	// #364
 43c:	bl	0 <__assert_fail>
 440:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 444:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 448:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 44c:	add	x0, x0, #0x0
 450:	add	x1, x1, #0x0
 454:	add	x3, x3, #0x0
 458:	mov	w2, #0x12d                 	// #301
 45c:	bl	0 <__assert_fail>
 460:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 464:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 468:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 46c:	add	x0, x0, #0x0
 470:	add	x1, x1, #0x0
 474:	add	x3, x3, #0x0
 478:	mov	w2, #0x178                 	// #376
 47c:	bl	0 <__assert_fail>
 480:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 484:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 488:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 48c:	add	x0, x0, #0x0
 490:	add	x1, x1, #0x0
 494:	add	x3, x3, #0x0
 498:	mov	w2, #0x17a                 	// #378
 49c:	bl	0 <__assert_fail>
 4a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4ac:	add	x0, x0, #0x0
 4b0:	add	x1, x1, #0x0
 4b4:	add	x3, x3, #0x0
 4b8:	mov	w2, #0x134                 	// #308
 4bc:	bl	0 <__assert_fail>
 4c0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4c4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4c8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4cc:	add	x0, x0, #0x0
 4d0:	add	x1, x1, #0x0
 4d4:	add	x3, x3, #0x0
 4d8:	mov	w2, #0x13c                 	// #316
 4dc:	bl	0 <__assert_fail>
 4e0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4e4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4e8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter24EmitRecordWithAbbrevImplImEEvjNS_8ArrayRefIT_EENS_9StringRefENS_8OptionalIjEE>
 4ec:	add	x0, x0, #0x0
 4f0:	add	x1, x1, #0x0
 4f4:	add	x3, x3, #0x0
 4f8:	mov	w2, #0x107                 	// #263
 4fc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_:

0000000000000000 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x1, #8]
   c:	tbnz	w8, #0, dc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xdc>
  10:	ubfx	w8, w8, #1, #3
  14:	cmp	w8, #0x1
  18:	b.eq	60 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x60>  // b.none
  1c:	cmp	w8, #0x2
  20:	b.eq	48 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x48>  // b.none
  24:	cmp	w8, #0x4
  28:	b.ne	fc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xfc>  // b.any
  2c:	sub	w8, w2, #0x61
  30:	and	w8, w8, #0xff
  34:	cmp	w8, #0x19
  38:	and	w8, w2, #0xff
  3c:	b.hi	80 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x80>  // b.pmore
  40:	sub	w1, w8, #0x61
  44:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  48:	ldr	x8, [x1]
  4c:	cbz	x8, 78 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x78>
  50:	mov	x1, x2
  54:	mov	w2, w8
  58:	ldp	x29, x30, [sp], #16
  5c:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  60:	ldr	x8, [x1]
  64:	cbz	x8, 78 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x78>
  68:	mov	w1, w2
  6c:	mov	w2, w8
  70:	ldp	x29, x30, [sp], #16
  74:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  78:	ldp	x29, x30, [sp], #16
  7c:	ret
  80:	sub	w9, w2, #0x41
  84:	and	w9, w9, #0xff
  88:	cmp	w9, #0x19
  8c:	b.hi	98 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x98>  // b.pmore
  90:	sub	w1, w8, #0x27
  94:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  98:	sub	w9, w2, #0x30
  9c:	and	w9, w9, #0xff
  a0:	cmp	w9, #0x9
  a4:	b.hi	b0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xb0>  // b.pmore
  a8:	add	w1, w8, #0x4
  ac:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  b0:	and	w8, w2, #0xff
  b4:	cmp	w8, #0x2e
  b8:	b.eq	cc <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xcc>  // b.none
  bc:	cmp	w8, #0x5f
  c0:	b.ne	114 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0x114>  // b.any
  c4:	mov	w1, #0x3f                  	// #63
  c8:	b	d0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_+0xd0>
  cc:	mov	w1, #0x3e                  	// #62
  d0:	mov	w2, #0x6                   	// #6
  d4:	ldp	x29, x30, [sp], #16
  d8:	b	0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  dc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  e0:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  e4:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x10e                 	// #270
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
 100:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	mov	w2, #0x112                 	// #274
 110:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 114:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
 118:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter20EmitAbbreviatedFieldImEEvRKNS_15BitCodeAbbrevOpET_>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	mov	w2, #0x99                  	// #153
 128:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb:

0000000000000000 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x2
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	tbz	w3, #0, 68 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x68>
  24:	cmp	w21, #0x20
  28:	b.cs	34 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x34>  // b.hs, b.nlast
  2c:	mov	w1, w21
  30:	b	5c <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x5c>
  34:	mov	w22, w21
  38:	mov	w1, #0x20                  	// #32
  3c:	bfxil	w1, w22, #0, #5
  40:	mov	w2, #0x6                   	// #6
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
  4c:	lsr	w1, w22, #5
  50:	cmp	w22, #0x3ff
  54:	mov	w22, w1
  58:	b.hi	38 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x38>  // b.pmore
  5c:	mov	w2, #0x6                   	// #6
  60:	mov	x0, x19
  64:	bl	0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
  68:	ldr	w8, [x19, #8]
  6c:	cbz	w8, c0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0xc0>
  70:	ldr	x22, [x19]
  74:	ldr	w23, [x19, #12]
  78:	ldp	w8, w9, [x22, #8]
  7c:	sub	x9, x9, x8
  80:	cmp	x9, #0x3
  84:	b.hi	a0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0xa0>  // b.pmore
  88:	add	x2, x8, #0x4
  8c:	add	x1, x22, #0x10
  90:	mov	w3, #0x1                   	// #1
  94:	mov	x0, x22
  98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  9c:	ldr	w8, [x22, #8]
  a0:	ldr	x9, [x22]
  a4:	str	w23, [x9, x8]
  a8:	ldp	w8, w9, [x22, #8]
  ac:	add	x8, x8, #0x4
  b0:	cmp	x8, x9
  b4:	b.hi	198 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x198>  // b.pmore
  b8:	str	w8, [x22, #8]
  bc:	str	xzr, [x19, #8]
  c0:	cbz	x21, 174 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x174>
  c4:	lsl	x22, x21, #3
  c8:	ldr	x23, [x20]
  cc:	cmp	x23, #0x100
  d0:	b.cs	1b8 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x1b8>  // b.hs, b.nlast
  d4:	ldr	x21, [x19]
  d8:	ldp	w8, w9, [x21, #8]
  dc:	cmp	w8, w9
  e0:	b.cs	110 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x110>  // b.hs, b.nlast
  e4:	ldr	x9, [x21]
  e8:	strb	w23, [x9, w8, uxtw]
  ec:	ldp	w8, w9, [x21, #8]
  f0:	cmp	w8, w9
  f4:	b.cs	198 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x198>  // b.hs, b.nlast
  f8:	add	w8, w8, #0x1
  fc:	subs	x22, x22, #0x8
 100:	add	x20, x20, #0x8
 104:	str	w8, [x21, #8]
 108:	b.ne	c8 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0xc8>  // b.any
 10c:	b	174 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x174>
 110:	add	x1, x21, #0x10
 114:	mov	w3, #0x1                   	// #1
 118:	mov	x0, x21
 11c:	mov	x2, xzr
 120:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 124:	ldr	w8, [x21, #8]
 128:	b	e4 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0xe4>
 12c:	ldp	w8, w9, [x20, #8]
 130:	cmp	w8, w9
 134:	b.cs	158 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x158>  // b.hs, b.nlast
 138:	ldr	x9, [x20]
 13c:	strb	wzr, [x9, w8, uxtw]
 140:	ldp	w8, w9, [x20, #8]
 144:	cmp	w8, w9
 148:	b.cs	198 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x198>  // b.hs, b.nlast
 14c:	add	w8, w8, #0x1
 150:	str	w8, [x20, #8]
 154:	b	174 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x174>
 158:	add	x1, x20, #0x10
 15c:	mov	w3, #0x1                   	// #1
 160:	mov	x0, x20
 164:	mov	x2, xzr
 168:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 16c:	ldr	w8, [x20, #8]
 170:	b	138 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x138>
 174:	ldr	x20, [x19]
 178:	ldrb	w8, [x20, #8]
 17c:	tst	w8, #0x3
 180:	b.ne	12c <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb+0x12c>  // b.any
 184:	ldp	x20, x19, [sp, #48]
 188:	ldp	x22, x21, [sp, #32]
 18c:	ldr	x23, [sp, #16]
 190:	ldp	x29, x30, [sp], #64
 194:	ret
 198:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 19c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 1a0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0x43                  	// #67
 1b4:	bl	0 <__assert_fail>
 1b8:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 1bc:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 1c0:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter8emitBlobImEEvNS_8ArrayRefIT_EEb>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x3, x3, #0x0
 1d0:	mov	w2, #0x18a                 	// #394
 1d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv:

0000000000000000 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	w2, #0x2                   	// #2
  20:	mov	w1, wzr
  24:	mov	x19, x0
  28:	bl	0 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv>
  2c:	ldp	x22, x23, [x19, #72]
  30:	mov	w8, #0xffffffff            	// #-1
  34:	str	w8, [x19, #20]
  38:	cmp	x23, x22
  3c:	b.eq	130 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x130>  // b.none
  40:	adrp	x24, 0 <__pthread_key_create>
  44:	ldr	x24, [x24]
  48:	mov	x25, x22
  4c:	b	5c <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x5c>
  50:	add	x25, x25, #0x20
  54:	cmp	x25, x23
  58:	b.eq	12c <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x12c>  // b.none
  5c:	ldp	x20, x26, [x25, #8]
  60:	cmp	x20, x26
  64:	b.ne	7c <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x7c>  // b.any
  68:	cbnz	x20, 120 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x120>
  6c:	b	50 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x50>
  70:	add	x20, x20, #0x10
  74:	cmp	x20, x26
  78:	b.eq	118 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x118>  // b.none
  7c:	ldr	x21, [x20, #8]
  80:	cbz	x21, 70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>
  84:	add	x8, x21, #0x8
  88:	cbz	x24, a8 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0xa8>
  8c:	ldaxr	w9, [x8]
  90:	sub	w10, w9, #0x1
  94:	stlxr	w11, w10, [x8]
  98:	cbnz	w11, 8c <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x8c>
  9c:	cmp	w9, #0x1
  a0:	b.ne	70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>  // b.any
  a4:	b	bc <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0xbc>
  a8:	ldr	w9, [x8]
  ac:	sub	w10, w9, #0x1
  b0:	str	w10, [x8]
  b4:	cmp	w9, #0x1
  b8:	b.ne	70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>  // b.any
  bc:	mov	x27, x21
  c0:	ldr	x8, [x27], #12
  c4:	mov	x0, x21
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	cbz	x24, f0 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0xf0>
  d4:	ldaxr	w8, [x27]
  d8:	sub	w9, w8, #0x1
  dc:	stlxr	w10, w9, [x27]
  e0:	cbnz	w10, d4 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0xd4>
  e4:	cmp	w8, #0x1
  e8:	b.ne	70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>  // b.any
  ec:	b	104 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x104>
  f0:	ldr	w8, [x27]
  f4:	sub	w9, w8, #0x1
  f8:	str	w9, [x27]
  fc:	cmp	w8, #0x1
 100:	b.ne	70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>  // b.any
 104:	ldr	x8, [x21]
 108:	mov	x0, x21
 10c:	ldr	x8, [x8, #24]
 110:	blr	x8
 114:	b	70 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x70>
 118:	ldr	x20, [x25, #8]
 11c:	cbz	x20, 50 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x50>
 120:	mov	x0, x20
 124:	bl	0 <_ZdlPv>
 128:	b	50 <_ZN4llvm15BitstreamWriter19EnterBlockInfoBlockEv+0x50>
 12c:	str	x22, [x19, #80]
 130:	ldp	x20, x19, [sp, #80]
 134:	ldp	x22, x21, [sp, #64]
 138:	ldp	x24, x23, [sp, #48]
 13c:	ldp	x26, x25, [sp, #32]
 140:	ldr	x27, [sp, #16]
 144:	ldp	x29, x30, [sp], #96
 148:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE:

0000000000000000 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x22, x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	ldr	w8, [x0, #20]
  18:	mov	x21, x0
  1c:	mov	w20, w1
  20:	mov	x19, x2
  24:	cmp	w8, w1
  28:	b.eq	70 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x70>  // b.none
  2c:	adrp	x9, 0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  30:	ldr	d0, [x9]
  34:	add	x8, sp, #0x8
  38:	add	x22, x8, #0x10
  3c:	add	x2, sp, #0x8
  40:	mov	w1, #0x1                   	// #1
  44:	mov	x0, x21
  48:	mov	w3, wzr
  4c:	str	x22, [sp, #8]
  50:	str	w20, [sp, #24]
  54:	str	d0, [sp, #16]
  58:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  5c:	str	w20, [x21, #20]
  60:	ldr	x0, [sp, #8]
  64:	cmp	x0, x22
  68:	b.eq	70 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x70>  // b.none
  6c:	bl	0 <free>
  70:	ldr	x1, [x19]
  74:	mov	x0, x21
  78:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  7c:	ldp	x8, x1, [x21, #72]
  80:	cmp	x8, x1
  84:	b.eq	98 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x98>  // b.none
  88:	mov	x22, x1
  8c:	ldr	w9, [x22, #-32]!
  90:	cmp	w9, w20
  94:	b.eq	fc <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xfc>  // b.none
  98:	sub	x9, x1, x8
  9c:	lsr	x9, x9, #5
  a0:	cbz	w9, c8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xc8>
  a4:	mov	w10, wzr
  a8:	mov	w11, w10
  ac:	add	x22, x8, x11, lsl #5
  b0:	ldr	w11, [x22]
  b4:	cmp	w11, w20
  b8:	b.eq	fc <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xfc>  // b.none
  bc:	add	w10, w10, #0x1
  c0:	cmp	w9, w10
  c4:	b.ne	a8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xa8>  // b.any
  c8:	ldr	x8, [x21, #88]
  cc:	cmp	x1, x8
  d0:	b.eq	ec <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xec>  // b.none
  d4:	movi	v0.2d, #0x0
  d8:	stp	q0, q0, [x1]
  dc:	ldr	x8, [x21, #80]
  e0:	add	x22, x8, #0x20
  e4:	str	x22, [x21, #80]
  e8:	b	f8 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0xf8>
  ec:	add	x0, x21, #0x48
  f0:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
  f4:	ldr	x22, [x21, #80]
  f8:	str	w20, [x22, #-32]!
  fc:	ldp	x1, x8, [x22, #16]
 100:	add	x20, x22, #0x8
 104:	cmp	x1, x8
 108:	b.eq	12c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x12c>  // b.none
 10c:	str	xzr, [x1, #8]
 110:	ldr	q0, [x19]
 114:	add	x8, x1, #0x10
 118:	str	xzr, [x19, #8]
 11c:	str	q0, [x1]
 120:	str	xzr, [x19]
 124:	str	x8, [x22, #16]
 128:	b	13c <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE+0x13c>
 12c:	mov	x0, x20
 130:	mov	x2, x19
 134:	bl	0 <_ZN4llvm15BitstreamWriter19EmitBlockInfoAbbrevEjSt10shared_ptrINS_13BitCodeAbbrevEE>
 138:	ldr	x8, [x22, #16]
 13c:	ldr	x9, [x20]
 140:	ldp	x20, x19, [sp, #64]
 144:	ldp	x22, x21, [sp, #48]
 148:	ldp	x29, x30, [sp, #32]
 14c:	sub	x8, x8, x9
 150:	lsr	x8, x8, #4
 154:	add	w0, w8, #0x3
 158:	add	sp, sp, #0x50
 15c:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldr	x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
  ec:	cbz	w19, 158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x158>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x158>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	16c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x16c>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	w23, [x8, x22, lsl #2]
 128:	cmp	w23, #0x20
 12c:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 130:	mov	w1, #0x20                  	// #32
 134:	bfxil	w1, w23, #0, #5
 138:	mov	w2, #0x6                   	// #6
 13c:	mov	x0, x20
 140:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
 144:	lsr	w1, w23, #5
 148:	cmp	w23, #0x3ff
 14c:	mov	w23, w1
 150:	b.hi	130 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0x130>  // b.pmore
 154:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j+0xfc>
 158:	ldp	x20, x19, [sp, #48]
 15c:	ldp	x22, x21, [sp, #32]
 160:	ldr	x23, [sp, #16]
 164:	ldp	x29, x30, [sp], #64
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
 170:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
 174:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorIjLj2EEEEEvjRKT_j>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x99                  	// #153
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x23, [x0]
  1c:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
  20:	sub	x8, x23, x20
  24:	cmp	x8, x9
  28:	b.eq	140 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x140>  // b.none
  2c:	asr	x9, x8, #5
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #58
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  54:	cmp	w10, #0x0
  58:	csel	x24, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x19, x0
  64:	mov	x21, x1
  68:	asr	x25, x8, #5
  6c:	cbz	x24, 80 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x80>
  70:	lsl	x0, x24, #5
  74:	bl	0 <_Znwm>
  78:	mov	x22, x0
  7c:	b	84 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x84>
  80:	mov	x22, xzr
  84:	add	x8, x22, x25, lsl #5
  88:	movi	v0.2d, #0x0
  8c:	cmp	x20, x21
  90:	stp	q0, q0, [x8]
  94:	mov	x8, x22
  98:	b.eq	d4 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd4>  // b.none
  9c:	mov	x8, x22
  a0:	mov	x9, x20
  a4:	ldr	w10, [x9]
  a8:	str	w10, [x8]
  ac:	ldur	q0, [x9, #8]
  b0:	stur	q0, [x8, #8]
  b4:	ldr	x10, [x9, #24]
  b8:	str	x10, [x8, #24]
  bc:	stp	xzr, xzr, [x9, #8]
  c0:	str	xzr, [x9, #24]
  c4:	add	x9, x9, #0x20
  c8:	cmp	x9, x21
  cc:	add	x8, x8, #0x20
  d0:	b.ne	a4 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa4>  // b.any
  d4:	cmp	x23, x21
  d8:	add	x25, x8, #0x20
  dc:	b.eq	110 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x110>  // b.none
  e0:	ldr	w8, [x21]
  e4:	str	w8, [x25]
  e8:	ldur	q0, [x21, #8]
  ec:	stur	q0, [x25, #8]
  f0:	ldr	x8, [x21, #24]
  f4:	str	x8, [x25, #24]
  f8:	stp	xzr, xzr, [x21, #8]
  fc:	str	xzr, [x21, #24]
 100:	add	x21, x21, #0x20
 104:	cmp	x21, x23
 108:	add	x25, x25, #0x20
 10c:	b.ne	e0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe0>  // b.any
 110:	cbz	x20, 11c <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>
 114:	mov	x0, x20
 118:	bl	0 <_ZdlPv>
 11c:	add	x8, x22, x24, lsl #5
 120:	stp	x22, x25, [x19]
 124:	str	x8, [x19, #16]
 128:	ldp	x20, x19, [sp, #64]
 12c:	ldp	x22, x21, [sp, #48]
 130:	ldp	x24, x23, [sp, #32]
 134:	ldr	x25, [sp, #16]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret
 140:	adrp	x0, 0 <_ZNSt6vectorIN4llvm15BitstreamWriter9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 144:	add	x0, x0, #0x0
 148:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
  ec:	cbz	w19, 18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x18c>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x18c>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	1a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x1a0>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	x24, [x8, x22, lsl #3]
 128:	lsr	x8, x24, #32
 12c:	mov	w23, w24
 130:	cbnz	x8, 164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x164>
 134:	cmp	w23, #0x20
 138:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 13c:	mov	w1, #0x20                  	// #32
 140:	bfxil	w1, w23, #0, #5
 144:	mov	w2, #0x6                   	// #6
 148:	mov	x0, x20
 14c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 150:	lsr	w1, w23, #5
 154:	cmp	w23, #0x400
 158:	mov	w23, w1
 15c:	b.cs	13c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x13c>  // b.hs, b.nlast
 160:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xfc>
 164:	mov	w1, #0x20                  	// #32
 168:	bfxil	w1, w23, #0, #5
 16c:	mov	w2, #0x6                   	// #6
 170:	mov	x0, x20
 174:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 178:	lsr	x23, x24, #5
 17c:	cmp	x24, #0x3ff
 180:	mov	x24, x23
 184:	b.hi	164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0x164>  // b.pmore
 188:	b	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j+0xf8>
 18c:	ldp	x20, x19, [sp, #48]
 190:	ldp	x22, x21, [sp, #32]
 194:	ldp	x24, x23, [sp, #16]
 198:	ldp	x29, x30, [sp], #64
 19c:	ret
 1a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 1a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 1a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj64EEEEEvjRKT_j>
 1ac:	add	x0, x0, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x3, x3, #0x0
 1b8:	mov	w2, #0x99                  	// #153
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w11, [x0, #24]
   c:	cbz	w11, b4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb4>
  10:	ldr	w8, [x1]
  14:	ldr	x9, [x0, #8]
  18:	ldr	x10, [x1, #8]
  1c:	cmn	w8, #0x1
  20:	b.ne	2c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x2c>  // b.any
  24:	cmn	x10, #0x4
  28:	b.eq	13c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x13c>  // b.none
  2c:	cmn	w8, #0x2
  30:	b.ne	3c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x3c>  // b.any
  34:	cmn	x10, #0x8
  38:	b.eq	13c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x13c>  // b.none
  3c:	mov	w13, #0x25                  	// #37
  40:	ubfx	x14, x10, #4, #28
  44:	mov	x15, #0xffffffffffffffff    	// #-1
  48:	sub	w12, w11, #0x1
  4c:	mul	w11, w8, w13
  50:	eor	w13, w14, w10, lsr #9
  54:	eor	x14, x15, x13, lsl #32
  58:	bfi	x13, x11, #32, #32
  5c:	add	x11, x13, x14
  60:	eor	x11, x11, x11, lsr #22
  64:	eor	x13, x15, x11, lsl #13
  68:	add	x11, x11, x13
  6c:	eor	x11, x11, x11, lsr #8
  70:	add	x11, x11, x11, lsl #3
  74:	eor	x11, x11, x11, lsr #15
  78:	eor	x13, x15, x11, lsl #27
  7c:	add	x11, x11, x13
  80:	lsr	x13, x11, #31
  84:	eor	w11, w13, w11
  88:	and	w14, w12, w11
  8c:	mov	w13, #0x18                  	// #24
  90:	umaddl	x11, w14, w13, x9
  94:	ldr	w16, [x11]
  98:	ldr	x18, [x11, #8]
  9c:	cmp	w8, w16
  a0:	b.ne	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xc8>  // b.any
  a4:	cmp	x10, x18
  a8:	b.ne	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xc8>  // b.any
  ac:	mov	w0, #0x1                   	// #1
  b0:	b	bc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xbc>
  b4:	mov	x11, xzr
  b8:	mov	w0, wzr
  bc:	str	x11, [x2]
  c0:	ldp	x29, x30, [sp], #16
  c4:	ret
  c8:	mov	x15, xzr
  cc:	mov	w1, #0x1                   	// #1
  d0:	mov	w17, #0xfffffffe            	// #-2
  d4:	mov	w0, #0x1                   	// #1
  d8:	cmn	w16, #0x1
  dc:	b.ne	e8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xe8>  // b.any
  e0:	cmn	x18, #0x4
  e4:	b.eq	12c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x12c>  // b.none
  e8:	cmn	x18, #0x8
  ec:	add	w14, w14, w1
  f0:	ccmp	w16, w17, #0x0, eq  // eq = none
  f4:	and	w14, w14, w12
  f8:	ccmp	x15, #0x0, #0x0, eq  // eq = none
  fc:	csel	x15, x15, x11, ne  // ne = any
 100:	umaddl	x11, w14, w13, x9
 104:	ldr	w16, [x11]
 108:	ldr	x18, [x11, #8]
 10c:	add	w3, w1, #0x1
 110:	mov	w1, w3
 114:	cmp	w8, w16
 118:	b.ne	d8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xd8>  // b.any
 11c:	cmp	x10, x18
 120:	mov	w1, w3
 124:	b.eq	bc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xbc>  // b.none
 128:	b	d8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xd8>
 12c:	cmp	x15, #0x0
 130:	mov	w0, wzr
 134:	csel	x11, x11, x15, eq  // eq = none
 138:	b	bc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xbc>
 13c:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 140:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 144:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 148:	add	x0, x0, #0x0
 14c:	add	x1, x1, #0x0
 150:	add	x3, x3, #0x0
 154:	mov	w2, #0x252                 	// #594
 158:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18StringTableBuilder3addENS_9StringRefE:

0000000000000000 <_ZN4llvm18StringTableBuilder3addENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cmn	x1, #0x2
  14:	b.eq	5c <_ZN4llvm18StringTableBuilder3addENS_9StringRefE+0x5c>  // b.none
  18:	mov	x19, x1
  1c:	cmn	x1, #0x1
  20:	b.eq	7c <_ZN4llvm18StringTableBuilder3addENS_9StringRefE+0x7c>  // b.none
  24:	mov	x21, x0
  28:	mov	x0, x19
  2c:	mov	x1, x2
  30:	mov	x20, x2
  34:	bl	0 <_ZN4llvm10hash_valueENS_9StringRefE>
  38:	lsr	x8, x20, #32
  3c:	cbnz	x8, 9c <_ZN4llvm18StringTableBuilder3addENS_9StringRefE+0x9c>
  40:	orr	x2, x20, x0, lsl #32
  44:	mov	x0, x21
  48:	mov	x1, x19
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldr	x21, [sp, #16]
  54:	ldp	x29, x30, [sp], #48
  58:	b	0 <_ZN4llvm18StringTableBuilder3addENS_19CachedHashStringRefE>
  5c:	adrp	x0, 0 <_ZN4llvm18StringTableBuilder3addENS_9StringRefE>
  60:	adrp	x1, 0 <_ZN4llvm18StringTableBuilder3addENS_9StringRefE>
  64:	adrp	x3, 0 <_ZN4llvm18StringTableBuilder3addENS_9StringRefE>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0xeb                  	// #235
  78:	bl	0 <__assert_fail>
  7c:	adrp	x0, 0 <_ZN4llvm18StringTableBuilder3addENS_9StringRefE>
  80:	adrp	x1, 0 <_ZN4llvm18StringTableBuilder3addENS_9StringRefE>
  84:	adrp	x3, 0 <_ZN4llvm18StringTableBuilder3addENS_9StringRefE>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0xe9                  	// #233
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZN4llvm18StringTableBuilder3addENS_9StringRefE>
  a0:	adrp	x1, 0 <_ZN4llvm18StringTableBuilder3addENS_9StringRefE>
  a4:	adrp	x3, 0 <_ZN4llvm18StringTableBuilder3addENS_9StringRefE>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x29                  	// #41
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldr	x25, [x0, #16]
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	add	x23, x0, #0x8
  30:	cbz	x25, e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xe0>
  34:	str	x19, [sp, #8]
  38:	ldp	x22, x24, [x20]
  3c:	mov	w26, #0x7fffffff            	// #2147483647
  40:	mov	x27, #0xffffffff80000000    	// #-2147483648
  44:	mov	w28, #0x80000000            	// #-2147483648
  48:	mov	x21, x23
  4c:	b	74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x74>
  50:	tbnz	w0, #31, 68 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x68>
  54:	add	x8, x25, #0x10
  58:	mov	x21, x25
  5c:	ldr	x25, [x8]
  60:	cbnz	x25, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x74>
  64:	b	a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xa8>
  68:	add	x8, x25, #0x18
  6c:	ldr	x25, [x8]
  70:	cbz	x25, a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xa8>
  74:	ldr	x8, [x25, #40]
  78:	subs	x19, x8, x24
  7c:	csel	x2, x24, x8, hi  // hi = pmore
  80:	cbz	x2, 94 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x94>
  84:	ldr	x0, [x25, #32]
  88:	mov	x1, x22
  8c:	bl	0 <memcmp>
  90:	cbnz	w0, 50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x50>
  94:	cmp	x19, x26
  98:	b.gt	54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x54>
  9c:	cmp	x19, x27
  a0:	csel	w0, w19, w28, gt
  a4:	b	50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x50>
  a8:	cmp	x21, x23
  ac:	b.eq	e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xe8>  // b.none
  b0:	ldr	x8, [x20, #8]
  b4:	ldr	x9, [x21, #40]
  b8:	ldr	x19, [sp, #8]
  bc:	subs	x22, x8, x9
  c0:	csel	x2, x9, x8, hi  // hi = pmore
  c4:	cbz	x2, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x134>
  c8:	ldr	x1, [x21, #32]
  cc:	ldr	x0, [x20]
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x134>
  d8:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x110>
  dc:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xec>
  e0:	mov	x21, x23
  e4:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xec>
  e8:	ldr	x19, [sp, #8]
  ec:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
  f0:	add	x2, x2, #0x0
  f4:	sub	x3, x29, #0x8
  f8:	add	x4, sp, #0x10
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	stur	x20, [x29, #-8]
 108:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_>
 10c:	mov	x21, x0
 110:	add	x0, x21, #0x40
 114:	ldp	x20, x19, [sp, #112]
 118:	ldp	x22, x21, [sp, #96]
 11c:	ldp	x24, x23, [sp, #80]
 120:	ldp	x26, x25, [sp, #64]
 124:	ldp	x28, x27, [sp, #48]
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x80
 130:	ret
 134:	mov	w8, #0x7fffffff            	// #2147483647
 138:	cmp	x22, x8
 13c:	b.gt	110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x110>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x22, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w22, w8, gt
 150:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0x110>
 154:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixEOS5_+0xec>

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldr	x25, [x0, #16]
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	add	x23, x0, #0x8
  30:	cbz	x25, e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xe0>
  34:	str	x19, [sp, #8]
  38:	ldp	x22, x24, [x20]
  3c:	mov	w26, #0x7fffffff            	// #2147483647
  40:	mov	x27, #0xffffffff80000000    	// #-2147483648
  44:	mov	w28, #0x80000000            	// #-2147483648
  48:	mov	x21, x23
  4c:	b	74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x74>
  50:	tbnz	w0, #31, 68 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x68>
  54:	add	x8, x25, #0x10
  58:	mov	x21, x25
  5c:	ldr	x25, [x8]
  60:	cbnz	x25, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x74>
  64:	b	a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xa8>
  68:	add	x8, x25, #0x18
  6c:	ldr	x25, [x8]
  70:	cbz	x25, a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xa8>
  74:	ldr	x8, [x25, #40]
  78:	subs	x19, x8, x24
  7c:	csel	x2, x24, x8, hi  // hi = pmore
  80:	cbz	x2, 94 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x94>
  84:	ldr	x0, [x25, #32]
  88:	mov	x1, x22
  8c:	bl	0 <memcmp>
  90:	cbnz	w0, 50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x50>
  94:	cmp	x19, x26
  98:	b.gt	54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x54>
  9c:	cmp	x19, x27
  a0:	csel	w0, w19, w28, gt
  a4:	b	50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x50>
  a8:	cmp	x21, x23
  ac:	b.eq	e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xe8>  // b.none
  b0:	ldr	x8, [x20, #8]
  b4:	ldr	x9, [x21, #40]
  b8:	ldr	x19, [sp, #8]
  bc:	subs	x22, x8, x9
  c0:	csel	x2, x9, x8, hi  // hi = pmore
  c4:	cbz	x2, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x134>
  c8:	ldr	x1, [x21, #32]
  cc:	ldr	x0, [x20]
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x134>
  d8:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x110>
  dc:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xec>
  e0:	mov	x21, x23
  e4:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xec>
  e8:	ldr	x19, [sp, #8]
  ec:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_>
  f0:	add	x2, x2, #0x0
  f4:	sub	x3, x29, #0x8
  f8:	add	x4, sp, #0x10
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	stur	x20, [x29, #-8]
 108:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_>
 10c:	mov	x21, x0
 110:	add	x0, x21, #0x40
 114:	ldp	x20, x19, [sp, #112]
 118:	ldp	x22, x21, [sp, #96]
 11c:	ldp	x24, x23, [sp, #80]
 120:	ldp	x26, x25, [sp, #64]
 124:	ldp	x28, x27, [sp, #48]
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x80
 130:	ret
 134:	mov	w8, #0x7fffffff            	// #2147483647
 138:	cmp	x22, x8
 13c:	b.gt	110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x110>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x22, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w22, w8, gt
 150:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0x110>
 154:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEjSt4lessIS5_ESaISt4pairIKS5_jEEEixERS9_+0xec>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x0
  18:	mov	w0, #0x48                  	// #72
  1c:	mov	x22, x3
  20:	mov	x21, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x8, [x22]
  2c:	add	x24, x0, #0x30
  30:	mov	x22, x0
  34:	str	x24, [x22, #32]!
  38:	mov	x9, x8
  3c:	ldr	x10, [x9], #16
  40:	mov	x19, x0
  44:	cmp	x10, x9
  48:	b.eq	5c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x5c>  // b.none
  4c:	str	x10, [x22]
  50:	ldr	x10, [x8, #16]
  54:	str	x10, [x24]
  58:	b	64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x64>
  5c:	ldr	q0, [x10]
  60:	str	q0, [x24]
  64:	ldr	x10, [x8, #8]
  68:	mov	x0, x20
  6c:	mov	x1, x21
  70:	mov	x2, x22
  74:	str	x10, [x19, #40]
  78:	stp	x9, xzr, [x8]
  7c:	strb	wzr, [x8, #16]
  80:	str	wzr, [x19, #64]
  84:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
  88:	mov	x23, x0
  8c:	cbz	x1, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xa0>
  90:	mov	x21, x1
  94:	cbz	x23, bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xbc>
  98:	mov	w0, #0x1                   	// #1
  9c:	b	10c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x10c>
  a0:	ldr	x0, [x22]
  a4:	cmp	x0, x24
  a8:	b.eq	b0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xb0>  // b.none
  ac:	bl	0 <_ZdlPv>
  b0:	mov	x0, x19
  b4:	bl	0 <_ZdlPv>
  b8:	b	12c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x12c>
  bc:	add	x8, x20, #0x8
  c0:	cmp	x8, x21
  c4:	b.eq	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x98>  // b.none
  c8:	ldr	x8, [x19, #40]
  cc:	ldr	x9, [x21, #40]
  d0:	subs	x23, x8, x9
  d4:	csel	x2, x9, x8, hi  // hi = pmore
  d8:	cbz	x2, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xec>
  dc:	ldr	x1, [x21, #32]
  e0:	ldr	x0, [x22]
  e4:	bl	0 <memcmp>
  e8:	cbnz	w0, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x108>
  ec:	mov	w0, #0x7fffffff            	// #2147483647
  f0:	cmp	x23, x0
  f4:	b.gt	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x108>
  f8:	mov	x8, #0xffffffff80000000    	// #-2147483648
  fc:	cmp	x23, x8
 100:	mov	w8, #0x80000000            	// #-2147483648
 104:	csel	w0, w23, w8, gt
 108:	lsr	w0, w0, #31
 10c:	add	x3, x20, #0x8
 110:	mov	x1, x19
 114:	mov	x2, x21
 118:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 11c:	ldr	x8, [x20, #40]
 120:	mov	x23, x19
 124:	add	x8, x8, #0x1
 128:	str	x8, [x20, #40]
 12c:	mov	x0, x23
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldp	x24, x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	add	x8, x0, #0x8
  1c:	mov	x21, x0
  20:	cmp	x8, x1
  24:	mov	x20, x2
  28:	b.eq	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xa0>  // b.none
  2c:	ldr	x23, [x20, #8]
  30:	ldr	x24, [x1, #40]
  34:	mov	x19, x1
  38:	subs	x25, x23, x24
  3c:	csel	x22, x24, x23, hi  // hi = pmore
  40:	cbz	x22, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x60>
  44:	ldr	x1, [x19, #32]
  48:	ldr	x0, [x20]
  4c:	mov	x2, x22
  50:	bl	0 <memcmp>
  54:	cbz	w0, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x60>
  58:	tbz	w0, #31, 80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x80>
  5c:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x120>
  60:	mov	w8, #0x7fffffff            	// #2147483647
  64:	cmp	x25, x8
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x80>
  6c:	mov	x8, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x25, x8
  74:	mov	w8, #0x80000000            	// #-2147483648
  78:	csel	w0, w25, w8, gt
  7c:	tbnz	w0, #31, 120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x120>
  80:	cbz	x22, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xf4>
  84:	ldr	x1, [x20]
  88:	ldr	x0, [x19, #32]
  8c:	mov	x2, x22
  90:	bl	0 <memcmp>
  94:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xf4>
  98:	tbz	w0, #31, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x118>
  9c:	b	190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x190>
  a0:	ldr	x8, [x21, #40]
  a4:	cbz	x8, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
  a8:	ldr	x22, [x21, #32]
  ac:	ldr	x9, [x20, #8]
  b0:	ldr	x8, [x22, #40]
  b4:	subs	x19, x8, x9
  b8:	csel	x2, x9, x8, hi  // hi = pmore
  bc:	cbz	x2, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xd0>
  c0:	ldr	x1, [x20]
  c4:	ldr	x0, [x22, #32]
  c8:	bl	0 <memcmp>
  cc:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0xec>
  d0:	mov	w8, #0x7fffffff            	// #2147483647
  d4:	cmp	x19, x8
  d8:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
  dc:	mov	x8, #0xffffffff80000000    	// #-2147483648
  e0:	cmp	x19, x8
  e4:	mov	w8, #0x80000000            	// #-2147483648
  e8:	csel	w0, w19, w8, gt
  ec:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
  f0:	b	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x21c>
  f4:	sub	x8, x24, x23
  f8:	mov	w9, #0x7fffffff            	// #2147483647
  fc:	cmp	x8, x9
 100:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x118>
 104:	mov	x9, #0xffffffff80000000    	// #-2147483648
 108:	cmp	x8, x9
 10c:	mov	w9, #0x80000000            	// #-2147483648
 110:	csel	w0, w8, w9, gt
 114:	tbnz	w0, #31, 190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x190>
 118:	mov	x22, xzr
 11c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1fc>
 120:	ldr	x22, [x21, #24]
 124:	cmp	x22, x19
 128:	b.eq	224 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x224>  // b.none
 12c:	mov	x0, x19
 130:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 134:	ldr	x8, [x0, #40]
 138:	mov	x22, x0
 13c:	subs	x24, x8, x23
 140:	csel	x2, x23, x8, hi  // hi = pmore
 144:	cbz	x2, 158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x158>
 148:	ldr	x1, [x20]
 14c:	ldr	x0, [x22, #32]
 150:	bl	0 <memcmp>
 154:	cbnz	w0, 174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x174>
 158:	mov	w8, #0x7fffffff            	// #2147483647
 15c:	cmp	x24, x8
 160:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
 164:	mov	x8, #0xffffffff80000000    	// #-2147483648
 168:	cmp	x24, x8
 16c:	mov	w8, #0x80000000            	// #-2147483648
 170:	csel	w0, w24, w8, gt
 174:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
 178:	ldr	x8, [x22, #24]
 17c:	cmp	x8, #0x0
 180:	csel	x8, xzr, x19, eq  // eq = none
 184:	csel	x22, x22, x19, eq  // eq = none
 188:	mov	x19, x8
 18c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1fc>
 190:	ldr	x22, [x21, #32]
 194:	cmp	x22, x19
 198:	b.eq	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x21c>  // b.none
 19c:	mov	x0, x19
 1a0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 1a4:	ldr	x8, [x0, #40]
 1a8:	mov	x22, x0
 1ac:	subs	x24, x23, x8
 1b0:	csel	x2, x8, x23, hi  // hi = pmore
 1b4:	cbz	x2, 1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1c8>
 1b8:	ldr	x1, [x22, #32]
 1bc:	ldr	x0, [x20]
 1c0:	bl	0 <memcmp>
 1c4:	cbnz	w0, 1e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e4>
 1c8:	mov	w8, #0x7fffffff            	// #2147483647
 1cc:	cmp	x24, x8
 1d0:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1e8>
 1d4:	mov	x8, #0xffffffff80000000    	// #-2147483648
 1d8:	cmp	x24, x8
 1dc:	mov	w8, #0x80000000            	// #-2147483648
 1e0:	csel	w0, w24, w8, gt
 1e4:	tbnz	w0, #31, 22c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x22c>
 1e8:	mov	x0, x21
 1ec:	mov	x1, x20
 1f0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_>
 1f4:	mov	x19, x0
 1f8:	mov	x22, x1
 1fc:	mov	x0, x19
 200:	mov	x1, x22
 204:	ldp	x20, x19, [sp, #64]
 208:	ldp	x22, x21, [sp, #48]
 20c:	ldp	x24, x23, [sp, #32]
 210:	ldr	x25, [sp, #16]
 214:	ldp	x29, x30, [sp], #80
 218:	ret
 21c:	mov	x19, xzr
 220:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1fc>
 224:	mov	x19, x22
 228:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1fc>
 22c:	ldr	x8, [x19, #24]
 230:	cmp	x8, #0x0
 234:	csel	x8, xzr, x22, eq  // eq = none
 238:	csel	x22, x19, x22, eq  // eq = none
 23c:	mov	x19, x8
 240:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS7_+0x1fc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xa0>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbnz	w8, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xa4>
  9c:	b	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xbc>
  a0:	add	x19, x21, #0x8
  a4:	ldr	x8, [x21, #24]
  a8:	cmp	x8, x19
  ac:	b.eq	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x110>  // b.none
  b0:	mov	x0, x19
  b4:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  b8:	mov	x22, x0
  bc:	ldr	x8, [x22, #40]
  c0:	ldr	x9, [x20, #8]
  c4:	subs	x21, x8, x9
  c8:	csel	x2, x9, x8, hi  // hi = pmore
  cc:	cbz	x2, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xe8>
  d0:	ldr	x1, [x20]
  d4:	ldr	x0, [x22, #32]
  d8:	bl	0 <memcmp>
  dc:	cbz	w0, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0xe8>
  e0:	tbz	w0, #31, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x108>
  e4:	b	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x110>
  e8:	mov	w8, #0x7fffffff            	// #2147483647
  ec:	cmp	x21, x8
  f0:	b.gt	108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x108>
  f4:	mov	x8, #0xffffffff80000000    	// #-2147483648
  f8:	cmp	x21, x8
  fc:	mov	w8, #0x80000000            	// #-2147483648
 100:	csel	w0, w21, w8, gt
 104:	tbnz	w0, #31, 110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x110>
 108:	mov	x19, xzr
 10c:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE24_M_get_insert_unique_posERS7_+0x114>
 110:	mov	x22, xzr
 114:	mov	x0, x22
 118:	mov	x1, x19
 11c:	ldp	x20, x19, [sp, #64]
 120:	ldp	x22, x21, [sp, #48]
 124:	ldp	x24, x23, [sp, #32]
 128:	ldp	x26, x25, [sp, #16]
 12c:	ldp	x29, x30, [sp], #80
 130:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x21, x3
  24:	mov	x22, x1
  28:	bl	0 <_Znwm>
  2c:	ldr	x8, [x21]
  30:	add	x25, x0, #0x30
  34:	mov	x21, x0
  38:	str	x25, [x21, #32]!
  3c:	ldp	x23, x24, [x8]
  40:	mov	x19, x0
  44:	cbnz	x23, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x4c>
  48:	cbnz	x24, 188 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x188>
  4c:	cmp	x24, #0x10
  50:	str	x24, [x29, #24]
  54:	b.cc	7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x7c>  // b.lo, b.ul, b.last
  58:	add	x1, x29, #0x18
  5c:	mov	x0, x21
  60:	mov	x2, xzr
  64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  68:	ldr	x8, [x29, #24]
  6c:	str	x0, [x21]
  70:	str	x8, [x25]
  74:	cbnz	x24, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x84>
  78:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xa4>
  7c:	mov	x0, x25
  80:	cbz	x24, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xa4>
  84:	cmp	x24, #0x1
  88:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x98>  // b.any
  8c:	ldrb	w8, [x23]
  90:	strb	w8, [x0]
  94:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xa4>
  98:	mov	x1, x23
  9c:	mov	x2, x24
  a0:	bl	0 <memcpy>
  a4:	ldr	x8, [x29, #24]
  a8:	ldr	x9, [x19, #32]
  ac:	mov	x0, x20
  b0:	mov	x1, x22
  b4:	mov	x2, x21
  b8:	str	x8, [x19, #40]
  bc:	strb	wzr, [x9, x8]
  c0:	str	wzr, [x19, #64]
  c4:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
  c8:	mov	x23, x0
  cc:	cbz	x1, e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xe0>
  d0:	mov	x22, x1
  d4:	cbz	x23, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xfc>
  d8:	mov	w0, #0x1                   	// #1
  dc:	b	14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x14c>
  e0:	ldr	x0, [x21]
  e4:	cmp	x0, x25
  e8:	b.eq	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xf0>  // b.none
  ec:	bl	0 <_ZdlPv>
  f0:	mov	x0, x19
  f4:	bl	0 <_ZdlPv>
  f8:	b	16c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x16c>
  fc:	add	x8, x20, #0x8
 100:	cmp	x8, x22
 104:	b.eq	d8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0xd8>  // b.none
 108:	ldr	x8, [x19, #40]
 10c:	ldr	x9, [x22, #40]
 110:	subs	x23, x8, x9
 114:	csel	x2, x9, x8, hi  // hi = pmore
 118:	cbz	x2, 12c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x12c>
 11c:	ldr	x1, [x22, #32]
 120:	ldr	x0, [x21]
 124:	bl	0 <memcmp>
 128:	cbnz	w0, 148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x148>
 12c:	mov	w0, #0x7fffffff            	// #2147483647
 130:	cmp	x23, x0
 134:	b.gt	148 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_+0x148>
 138:	mov	x8, #0xffffffff80000000    	// #-2147483648
 13c:	cmp	x23, x8
 140:	mov	w8, #0x80000000            	// #-2147483648
 144:	csel	w0, w23, w8, gt
 148:	lsr	w0, w0, #31
 14c:	add	x3, x20, #0x8
 150:	mov	x1, x19
 154:	mov	x2, x22
 158:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 15c:	ldr	x8, [x20, #40]
 160:	mov	x23, x19
 164:	add	x8, x8, #0x1
 168:	str	x8, [x20, #40]
 16c:	mov	x0, x23
 170:	ldp	x20, x19, [sp, #64]
 174:	ldp	x22, x21, [sp, #48]
 178:	ldp	x24, x23, [sp, #32]
 17c:	ldr	x25, [sp, #16]
 180:	ldp	x29, x30, [sp], #80
 184:	ret
 188:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESJ_IJEEEEESt17_Rb_tree_iteratorIS8_ESt23_Rb_tree_const_iteratorIS8_EDpOT_>
 18c:	add	x0, x0, #0x0
 190:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x58>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x58>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
  3c:	ldr	x0, [x20, #32]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x30
  48:	cmp	x0, x8
  4c:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x20>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_jESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x20>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZN4llvm7APFloatD2Ev:

0000000000000000 <_ZN4llvm7APFloatD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x0
  14:	ldr	x21, [x20, #8]!
  18:	mov	x19, x0
  1c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  20:	cmp	x0, x21
  24:	b.eq	3c <_ZN4llvm7APFloatD2Ev+0x3c>  // b.none
  28:	mov	x0, x20
  2c:	ldp	x20, x19, [sp, #32]
  30:	ldp	x22, x21, [sp, #16]
  34:	ldp	x29, x30, [sp], #48
  38:	b	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
  3c:	ldr	x8, [x19, #16]
  40:	cbz	x8, 70 <_ZN4llvm7APFloatD2Ev+0x70>
  44:	mov	x20, x8
  48:	ldr	x9, [x20, #-8]!
  4c:	cbz	x9, 68 <_ZN4llvm7APFloatD2Ev+0x68>
  50:	lsl	x21, x9, #5
  54:	sub	x22, x8, #0x20
  58:	add	x0, x22, x21
  5c:	bl	0 <_ZN4llvm7APFloatD2Ev>
  60:	subs	x21, x21, #0x20
  64:	b.ne	58 <_ZN4llvm7APFloatD2Ev+0x58>  // b.any
  68:	mov	x0, x20
  6c:	bl	0 <_ZdaPv>
  70:	str	xzr, [x19, #16]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret

Disassembly of section .text._ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_:

0000000000000000 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	x0, 178 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x178>
   c:	ldrb	w8, [x0, #16]
  10:	subs	w9, w8, #0x18
  14:	b.cs	24 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x24>  // b.hs, b.nlast
  18:	cmp	w8, #0x5
  1c:	b.ne	120 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x120>  // b.any
  20:	ldrh	w9, [x0, #18]
  24:	cmp	w9, #0x39
  28:	mov	x1, xzr
  2c:	b.hi	14c <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x14c>  // b.pmore
  30:	mov	x11, #0x5000                	// #20480
  34:	mov	w10, #0x1                   	// #1
  38:	movk	x11, #0x125, lsl #16
  3c:	lsl	x10, x10, x9
  40:	movk	x11, #0x40, lsl #48
  44:	tst	x10, x11
  48:	b.eq	b4 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xb4>  // b.none
  4c:	subs	w9, w8, #0x18
  50:	b.cs	60 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x60>  // b.hs, b.nlast
  54:	cmp	w8, #0x5
  58:	b.ne	158 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x158>  // b.any
  5c:	ldrh	w9, [x0, #18]
  60:	cmp	w9, #0x39
  64:	b.hi	158 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x158>  // b.pmore
  68:	mov	x10, #0x5000                	// #20480
  6c:	mov	w8, #0x1                   	// #1
  70:	movk	x10, #0x125, lsl #16
  74:	lsl	x8, x8, x9
  78:	movk	x10, #0x40, lsl #48
  7c:	tst	x8, x10
  80:	b.ne	148 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x148>  // b.any
  84:	mov	w8, #0x1                   	// #1
  88:	lsl	x8, x8, x9
  8c:	tst	x8, #0x380000000000000
  90:	b.eq	158 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x158>  // b.none
  94:	ldr	x8, [x0]
  98:	cbz	x8, e0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xe0>
  9c:	ldrb	w9, [x8, #8]
  a0:	cmp	w9, #0xe
  a4:	b.ne	128 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x128>  // b.any
  a8:	ldr	x8, [x8, #24]
  ac:	cbnz	x8, 9c <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x9c>
  b0:	b	e0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xe0>
  b4:	mov	w10, #0x1                   	// #1
  b8:	lsl	x9, x10, x9
  bc:	tst	x9, #0x380000000000000
  c0:	b.eq	14c <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x14c>  // b.none
  c4:	ldr	x9, [x0]
  c8:	cbz	x9, e0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xe0>
  cc:	ldrb	w10, [x9, #8]
  d0:	cmp	w10, #0xe
  d4:	b.ne	100 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x100>  // b.any
  d8:	ldr	x9, [x9, #24]
  dc:	cbnz	x9, cc <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0xcc>
  e0:	adrp	x0, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  e4:	adrp	x1, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  e8:	adrp	x3, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0x69                  	// #105
  fc:	bl	0 <__assert_fail>
 100:	cmp	w10, #0x10
 104:	b.ne	114 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x114>  // b.any
 108:	ldr	x9, [x9, #16]
 10c:	ldr	x9, [x9]
 110:	ldrb	w10, [x9, #8]
 114:	sub	w9, w10, #0x1
 118:	cmp	w9, #0x5
 11c:	b.ls	4c <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x4c>  // b.plast
 120:	mov	x1, xzr
 124:	b	14c <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x14c>
 128:	cmp	w9, #0x10
 12c:	b.ne	13c <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x13c>  // b.any
 130:	ldr	x8, [x8, #16]
 134:	ldr	x8, [x8]
 138:	ldrb	w9, [x8, #8]
 13c:	sub	w8, w9, #0x1
 140:	cmp	w8, #0x6
 144:	b.cs	158 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_+0x158>  // b.hs, b.nlast
 148:	mov	x1, x0
 14c:	mov	x0, x1
 150:	ldp	x29, x30, [sp], #16
 154:	ret
 158:	adrp	x0, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 15c:	adrp	x1, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 160:	adrp	x3, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0x108                 	// #264
 174:	bl	0 <__assert_fail>
 178:	adrp	x0, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 17c:	adrp	x1, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 180:	adrp	x3, 0 <_ZN4llvm8dyn_castINS_14FPMathOperatorEKNS_5ValueEEENS_10cast_rettyIT_PT0_E8ret_typeES7_>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0x69                  	// #105
 194:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x2
  14:	mov	w21, w1
  18:	mov	x19, x0
  1c:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x54>
  20:	mov	w9, w21
  24:	mov	x0, x19
  28:	mov	x2, x20
  2c:	ldp	x20, x19, [sp, #32]
  30:	ldp	x22, x21, [sp, #16]
  34:	mov	w8, w3
  38:	orr	x6, x9, #0x100000000
  3c:	mov	w3, #0x2                   	// #2
  40:	mov	w1, w8
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  54:	ldr	w2, [x19, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  64:	cmp	w21, #0x20
  68:	b.cs	74 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x74>  // b.hs, b.nlast
  6c:	mov	w1, w21
  70:	b	98 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x98>
  74:	mov	w1, #0x20                  	// #32
  78:	bfxil	w1, w21, #0, #5
  7c:	mov	w2, #0x6                   	// #6
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  88:	lsr	w1, w21, #5
  8c:	cmp	w21, #0x3ff
  90:	mov	w21, w1
  94:	b.hi	74 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x74>  // b.pmore
  98:	mov	w2, #0x6                   	// #6
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  a4:	mov	w1, #0x2                   	// #2
  a8:	mov	w2, #0x6                   	// #6
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  b4:	ldr	x21, [x20]
  b8:	lsr	x8, x21, #32
  bc:	cbnz	x8, f0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0xf0>
  c0:	cmp	w21, #0x20
  c4:	b.cc	118 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x118>  // b.lo, b.ul, b.last
  c8:	mov	w1, #0x20                  	// #32
  cc:	bfxil	w1, w21, #0, #5
  d0:	mov	w2, #0x6                   	// #6
  d4:	mov	x0, x19
  d8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
  dc:	lsr	w1, w21, #5
  e0:	cmp	w21, #0x400
  e4:	mov	w21, w1
  e8:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0xc8>  // b.hs, b.nlast
  ec:	b	11c <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x11c>
  f0:	mov	x22, x21
  f4:	mov	w1, #0x20                  	// #32
  f8:	bfxil	w1, w21, #0, #5
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
 108:	lsr	x21, x22, #5
 10c:	cmp	x22, #0x3ff
 110:	mov	x22, x21
 114:	b.hi	f4 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0xf4>  // b.pmore
 118:	mov	w1, w21
 11c:	mov	w2, #0x6                   	// #6
 120:	mov	x0, x19
 124:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
 128:	ldr	x20, [x20, #8]
 12c:	lsr	x8, x20, #32
 130:	cbnz	x8, 174 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x174>
 134:	cmp	w20, #0x20
 138:	b.cs	144 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x144>  // b.hs, b.nlast
 13c:	mov	w1, w20
 140:	b	168 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x168>
 144:	mov	w1, #0x20                  	// #32
 148:	bfxil	w1, w20, #0, #5
 14c:	mov	w2, #0x6                   	// #6
 150:	mov	x0, x19
 154:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
 158:	lsr	w1, w20, #5
 15c:	cmp	w20, #0x3ff
 160:	mov	w20, w1
 164:	b.hi	144 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x144>  // b.pmore
 168:	mov	w2, #0x6                   	// #6
 16c:	mov	x0, x19
 170:	b	1a8 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x1a8>
 174:	mov	x21, x20
 178:	mov	w1, #0x20                  	// #32
 17c:	bfxil	w1, w20, #0, #5
 180:	mov	w2, #0x6                   	// #6
 184:	mov	x0, x19
 188:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>
 18c:	lsr	x20, x21, #5
 190:	cmp	x21, #0x3ff
 194:	mov	x21, x20
 198:	b.hi	178 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j+0x178>  // b.pmore
 19c:	mov	w2, #0x6                   	// #6
 1a0:	mov	x0, x19
 1a4:	mov	w1, w20
 1a8:	ldp	x20, x19, [sp, #32]
 1ac:	ldp	x22, x21, [sp, #16]
 1b0:	ldp	x29, x30, [sp], #48
 1b4:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA2_mEEvjRKT_j>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x2
  18:	ldr	x2, [x2]
  1c:	ldr	x8, [x20, #8]
  20:	mov	w21, w1
  24:	mov	x19, x0
  28:	sub	x22, x8, x2
  2c:	cbz	w3, 64 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x64>
  30:	asr	x8, x22, #3
  34:	mov	w9, w21
  38:	mov	x0, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x9, #0x100000000
  4c:	mov	w1, w3
  50:	mov	x3, x8
  54:	mov	x4, xzr
  58:	mov	x5, xzr
  5c:	ldp	x29, x30, [sp], #64
  60:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  64:	ldr	w2, [x19, #16]
  68:	mov	w1, #0x3                   	// #3
  6c:	mov	x0, x19
  70:	lsr	x23, x22, #3
  74:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  78:	cmp	w21, #0x20
  7c:	b.cs	88 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x88>  // b.hs, b.nlast
  80:	mov	w1, w21
  84:	b	ac <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0xac>
  88:	mov	w1, #0x20                  	// #32
  8c:	bfxil	w1, w21, #0, #5
  90:	mov	w2, #0x6                   	// #6
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  9c:	lsr	w1, w21, #5
  a0:	cmp	w21, #0x3ff
  a4:	mov	w21, w1
  a8:	b.hi	88 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x88>  // b.pmore
  ac:	mov	w2, #0x6                   	// #6
  b0:	mov	x0, x19
  b4:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  b8:	cmp	w23, #0x20
  bc:	mov	w1, w23
  c0:	b.cc	ec <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0xec>  // b.lo, b.ul, b.last
  c4:	mov	w21, w23
  c8:	mov	w1, #0x20                  	// #32
  cc:	bfxil	w1, w21, #0, #5
  d0:	mov	w2, #0x6                   	// #6
  d4:	mov	x0, x19
  d8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  dc:	lsr	w1, w21, #5
  e0:	cmp	w21, #0x3ff
  e4:	mov	w21, w1
  e8:	b.hi	c8 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0xc8>  // b.pmore
  ec:	mov	w2, #0x6                   	// #6
  f0:	mov	x0, x19
  f4:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
  f8:	cbz	w23, 190 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x190>
  fc:	mov	x21, xzr
 100:	ubfx	x22, x22, #3, #32
 104:	b	124 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x124>
 108:	mov	w1, w23
 10c:	mov	w2, #0x6                   	// #6
 110:	mov	x0, x19
 114:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
 118:	add	x21, x21, #0x1
 11c:	cmp	x21, x22
 120:	b.eq	190 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x190>  // b.none
 124:	ldr	x8, [x20]
 128:	ldr	x24, [x8, x21, lsl #3]
 12c:	lsr	x8, x24, #32
 130:	mov	w23, w24
 134:	cbnz	x8, 168 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x168>
 138:	cmp	w23, #0x20
 13c:	b.cc	108 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x108>  // b.lo, b.ul, b.last
 140:	mov	w1, #0x20                  	// #32
 144:	bfxil	w1, w23, #0, #5
 148:	mov	w2, #0x6                   	// #6
 14c:	mov	x0, x19
 150:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
 154:	lsr	w1, w23, #5
 158:	cmp	w23, #0x400
 15c:	mov	w23, w1
 160:	b.cs	140 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x140>  // b.hs, b.nlast
 164:	b	10c <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x10c>
 168:	mov	w1, #0x20                  	// #32
 16c:	bfxil	w1, w23, #0, #5
 170:	mov	w2, #0x6                   	// #6
 174:	mov	x0, x19
 178:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j>
 17c:	lsr	x23, x24, #5
 180:	cmp	x24, #0x3ff
 184:	mov	x24, x23
 188:	b.hi	168 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x168>  // b.pmore
 18c:	b	108 <_ZN4llvm15BitstreamWriter10EmitRecordISt6vectorImSaImEEEEvjRKT_j+0x108>
 190:	ldp	x20, x19, [sp, #48]
 194:	ldp	x22, x21, [sp, #32]
 198:	ldp	x24, x23, [sp, #16]
 19c:	ldp	x29, x30, [sp], #64
 1a0:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriterD2Ev:

0000000000000000 <_ZN4llvm15BitstreamWriterD2Ev>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	w8, [x0, #8]
  1c:	cbnz	w8, 358 <_ZN4llvm15BitstreamWriterD2Ev+0x358>
  20:	ldp	x8, x9, [x0, #48]
  24:	mov	x19, x0
  28:	cmp	x8, x9
  2c:	b.ne	338 <_ZN4llvm15BitstreamWriterD2Ev+0x338>  // b.any
  30:	ldp	x8, x9, [x19, #24]
  34:	cmp	x8, x9
  38:	b.ne	338 <_ZN4llvm15BitstreamWriterD2Ev+0x338>  // b.any
  3c:	ldp	x20, x24, [x19, #72]
  40:	adrp	x23, 0 <__pthread_key_create>
  44:	ldr	x23, [x23]
  48:	cmp	x20, x24
  4c:	b.ne	ac <_ZN4llvm15BitstreamWriterD2Ev+0xac>  // b.any
  50:	cbz	x20, 5c <_ZN4llvm15BitstreamWriterD2Ev+0x5c>
  54:	mov	x0, x20
  58:	bl	0 <_ZdlPv>
  5c:	ldp	x20, x24, [x19, #48]
  60:	cmp	x20, x24
  64:	b.ne	188 <_ZN4llvm15BitstreamWriterD2Ev+0x188>  // b.any
  68:	cbz	x20, 74 <_ZN4llvm15BitstreamWriterD2Ev+0x74>
  6c:	mov	x0, x20
  70:	bl	0 <_ZdlPv>
  74:	ldp	x20, x22, [x19, #24]
  78:	cmp	x20, x22
  7c:	b.ne	264 <_ZN4llvm15BitstreamWriterD2Ev+0x264>  // b.any
  80:	cbz	x20, 320 <_ZN4llvm15BitstreamWriterD2Ev+0x320>
  84:	mov	x0, x20
  88:	ldp	x20, x19, [sp, #64]
  8c:	ldp	x22, x21, [sp, #48]
  90:	ldp	x24, x23, [sp, #32]
  94:	ldp	x26, x25, [sp, #16]
  98:	ldp	x29, x30, [sp], #80
  9c:	b	0 <_ZdlPv>
  a0:	add	x20, x20, #0x20
  a4:	cmp	x20, x24
  a8:	b.eq	300 <_ZN4llvm15BitstreamWriterD2Ev+0x300>  // b.none
  ac:	ldp	x21, x25, [x20, #8]
  b0:	cmp	x21, x25
  b4:	b.ne	cc <_ZN4llvm15BitstreamWriterD2Ev+0xcc>  // b.any
  b8:	cbnz	x21, 170 <_ZN4llvm15BitstreamWriterD2Ev+0x170>
  bc:	b	a0 <_ZN4llvm15BitstreamWriterD2Ev+0xa0>
  c0:	add	x21, x21, #0x10
  c4:	cmp	x21, x25
  c8:	b.eq	168 <_ZN4llvm15BitstreamWriterD2Ev+0x168>  // b.none
  cc:	ldr	x22, [x21, #8]
  d0:	cbz	x22, c0 <_ZN4llvm15BitstreamWriterD2Ev+0xc0>
  d4:	add	x8, x22, #0x8
  d8:	cbz	x23, f8 <_ZN4llvm15BitstreamWriterD2Ev+0xf8>
  dc:	ldaxr	w9, [x8]
  e0:	sub	w10, w9, #0x1
  e4:	stlxr	w11, w10, [x8]
  e8:	cbnz	w11, dc <_ZN4llvm15BitstreamWriterD2Ev+0xdc>
  ec:	cmp	w9, #0x1
  f0:	b.ne	c0 <_ZN4llvm15BitstreamWriterD2Ev+0xc0>  // b.any
  f4:	b	10c <_ZN4llvm15BitstreamWriterD2Ev+0x10c>
  f8:	ldr	w9, [x8]
  fc:	sub	w10, w9, #0x1
 100:	str	w10, [x8]
 104:	cmp	w9, #0x1
 108:	b.ne	c0 <_ZN4llvm15BitstreamWriterD2Ev+0xc0>  // b.any
 10c:	mov	x26, x22
 110:	ldr	x8, [x26], #12
 114:	mov	x0, x22
 118:	ldr	x8, [x8, #16]
 11c:	blr	x8
 120:	cbz	x23, 140 <_ZN4llvm15BitstreamWriterD2Ev+0x140>
 124:	ldaxr	w8, [x26]
 128:	sub	w9, w8, #0x1
 12c:	stlxr	w10, w9, [x26]
 130:	cbnz	w10, 124 <_ZN4llvm15BitstreamWriterD2Ev+0x124>
 134:	cmp	w8, #0x1
 138:	b.ne	c0 <_ZN4llvm15BitstreamWriterD2Ev+0xc0>  // b.any
 13c:	b	154 <_ZN4llvm15BitstreamWriterD2Ev+0x154>
 140:	ldr	w8, [x26]
 144:	sub	w9, w8, #0x1
 148:	str	w9, [x26]
 14c:	cmp	w8, #0x1
 150:	b.ne	c0 <_ZN4llvm15BitstreamWriterD2Ev+0xc0>  // b.any
 154:	ldr	x8, [x22]
 158:	mov	x0, x22
 15c:	ldr	x8, [x8, #24]
 160:	blr	x8
 164:	b	c0 <_ZN4llvm15BitstreamWriterD2Ev+0xc0>
 168:	ldr	x21, [x20, #8]
 16c:	cbz	x21, a0 <_ZN4llvm15BitstreamWriterD2Ev+0xa0>
 170:	mov	x0, x21
 174:	bl	0 <_ZdlPv>
 178:	b	a0 <_ZN4llvm15BitstreamWriterD2Ev+0xa0>
 17c:	add	x20, x20, #0x28
 180:	cmp	x20, x24
 184:	b.eq	30c <_ZN4llvm15BitstreamWriterD2Ev+0x30c>  // b.none
 188:	ldp	x21, x25, [x20, #16]
 18c:	cmp	x21, x25
 190:	b.ne	1a8 <_ZN4llvm15BitstreamWriterD2Ev+0x1a8>  // b.any
 194:	cbnz	x21, 24c <_ZN4llvm15BitstreamWriterD2Ev+0x24c>
 198:	b	17c <_ZN4llvm15BitstreamWriterD2Ev+0x17c>
 19c:	add	x21, x21, #0x10
 1a0:	cmp	x21, x25
 1a4:	b.eq	244 <_ZN4llvm15BitstreamWriterD2Ev+0x244>  // b.none
 1a8:	ldr	x22, [x21, #8]
 1ac:	cbz	x22, 19c <_ZN4llvm15BitstreamWriterD2Ev+0x19c>
 1b0:	add	x8, x22, #0x8
 1b4:	cbz	x23, 1d4 <_ZN4llvm15BitstreamWriterD2Ev+0x1d4>
 1b8:	ldaxr	w9, [x8]
 1bc:	sub	w10, w9, #0x1
 1c0:	stlxr	w11, w10, [x8]
 1c4:	cbnz	w11, 1b8 <_ZN4llvm15BitstreamWriterD2Ev+0x1b8>
 1c8:	cmp	w9, #0x1
 1cc:	b.ne	19c <_ZN4llvm15BitstreamWriterD2Ev+0x19c>  // b.any
 1d0:	b	1e8 <_ZN4llvm15BitstreamWriterD2Ev+0x1e8>
 1d4:	ldr	w9, [x8]
 1d8:	sub	w10, w9, #0x1
 1dc:	str	w10, [x8]
 1e0:	cmp	w9, #0x1
 1e4:	b.ne	19c <_ZN4llvm15BitstreamWriterD2Ev+0x19c>  // b.any
 1e8:	mov	x26, x22
 1ec:	ldr	x8, [x26], #12
 1f0:	mov	x0, x22
 1f4:	ldr	x8, [x8, #16]
 1f8:	blr	x8
 1fc:	cbz	x23, 21c <_ZN4llvm15BitstreamWriterD2Ev+0x21c>
 200:	ldaxr	w8, [x26]
 204:	sub	w9, w8, #0x1
 208:	stlxr	w10, w9, [x26]
 20c:	cbnz	w10, 200 <_ZN4llvm15BitstreamWriterD2Ev+0x200>
 210:	cmp	w8, #0x1
 214:	b.ne	19c <_ZN4llvm15BitstreamWriterD2Ev+0x19c>  // b.any
 218:	b	230 <_ZN4llvm15BitstreamWriterD2Ev+0x230>
 21c:	ldr	w8, [x26]
 220:	sub	w9, w8, #0x1
 224:	str	w9, [x26]
 228:	cmp	w8, #0x1
 22c:	b.ne	19c <_ZN4llvm15BitstreamWriterD2Ev+0x19c>  // b.any
 230:	ldr	x8, [x22]
 234:	mov	x0, x22
 238:	ldr	x8, [x8, #24]
 23c:	blr	x8
 240:	b	19c <_ZN4llvm15BitstreamWriterD2Ev+0x19c>
 244:	ldr	x21, [x20, #16]
 248:	cbz	x21, 17c <_ZN4llvm15BitstreamWriterD2Ev+0x17c>
 24c:	mov	x0, x21
 250:	bl	0 <_ZdlPv>
 254:	b	17c <_ZN4llvm15BitstreamWriterD2Ev+0x17c>
 258:	add	x20, x20, #0x10
 25c:	cmp	x20, x22
 260:	b.eq	318 <_ZN4llvm15BitstreamWriterD2Ev+0x318>  // b.none
 264:	ldr	x21, [x20, #8]
 268:	cbz	x21, 258 <_ZN4llvm15BitstreamWriterD2Ev+0x258>
 26c:	add	x8, x21, #0x8
 270:	cbz	x23, 290 <_ZN4llvm15BitstreamWriterD2Ev+0x290>
 274:	ldaxr	w9, [x8]
 278:	sub	w10, w9, #0x1
 27c:	stlxr	w11, w10, [x8]
 280:	cbnz	w11, 274 <_ZN4llvm15BitstreamWriterD2Ev+0x274>
 284:	cmp	w9, #0x1
 288:	b.ne	258 <_ZN4llvm15BitstreamWriterD2Ev+0x258>  // b.any
 28c:	b	2a4 <_ZN4llvm15BitstreamWriterD2Ev+0x2a4>
 290:	ldr	w9, [x8]
 294:	sub	w10, w9, #0x1
 298:	str	w10, [x8]
 29c:	cmp	w9, #0x1
 2a0:	b.ne	258 <_ZN4llvm15BitstreamWriterD2Ev+0x258>  // b.any
 2a4:	mov	x24, x21
 2a8:	ldr	x8, [x24], #12
 2ac:	mov	x0, x21
 2b0:	ldr	x8, [x8, #16]
 2b4:	blr	x8
 2b8:	cbz	x23, 2d8 <_ZN4llvm15BitstreamWriterD2Ev+0x2d8>
 2bc:	ldaxr	w8, [x24]
 2c0:	sub	w9, w8, #0x1
 2c4:	stlxr	w10, w9, [x24]
 2c8:	cbnz	w10, 2bc <_ZN4llvm15BitstreamWriterD2Ev+0x2bc>
 2cc:	cmp	w8, #0x1
 2d0:	b.ne	258 <_ZN4llvm15BitstreamWriterD2Ev+0x258>  // b.any
 2d4:	b	2ec <_ZN4llvm15BitstreamWriterD2Ev+0x2ec>
 2d8:	ldr	w8, [x24]
 2dc:	sub	w9, w8, #0x1
 2e0:	str	w9, [x24]
 2e4:	cmp	w8, #0x1
 2e8:	b.ne	258 <_ZN4llvm15BitstreamWriterD2Ev+0x258>  // b.any
 2ec:	ldr	x8, [x21]
 2f0:	mov	x0, x21
 2f4:	ldr	x8, [x8, #24]
 2f8:	blr	x8
 2fc:	b	258 <_ZN4llvm15BitstreamWriterD2Ev+0x258>
 300:	ldr	x20, [x19, #72]
 304:	cbnz	x20, 54 <_ZN4llvm15BitstreamWriterD2Ev+0x54>
 308:	b	5c <_ZN4llvm15BitstreamWriterD2Ev+0x5c>
 30c:	ldr	x20, [x19, #48]
 310:	cbnz	x20, 6c <_ZN4llvm15BitstreamWriterD2Ev+0x6c>
 314:	b	74 <_ZN4llvm15BitstreamWriterD2Ev+0x74>
 318:	ldr	x20, [x19, #24]
 31c:	cbnz	x20, 84 <_ZN4llvm15BitstreamWriterD2Ev+0x84>
 320:	ldp	x20, x19, [sp, #64]
 324:	ldp	x22, x21, [sp, #48]
 328:	ldp	x24, x23, [sp, #32]
 32c:	ldp	x26, x25, [sp, #16]
 330:	ldp	x29, x30, [sp], #80
 334:	ret
 338:	adrp	x0, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 33c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 340:	adrp	x3, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 344:	add	x0, x0, #0x0
 348:	add	x1, x1, #0x0
 34c:	add	x3, x3, #0x0
 350:	mov	w2, #0x59                  	// #89
 354:	bl	0 <__assert_fail>
 358:	adrp	x0, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 35c:	adrp	x1, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 360:	adrp	x3, 0 <_ZN4llvm15BitstreamWriterD2Ev>
 364:	add	x0, x0, #0x0
 368:	add	x1, x1, #0x0
 36c:	add	x3, x3, #0x0
 370:	mov	w2, #0x58                  	// #88
 374:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
  ec:	cbz	w19, 18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x18c>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x18c>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	1a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x1a0>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	x24, [x8, x22, lsl #3]
 128:	lsr	x8, x24, #32
 12c:	mov	w23, w24
 130:	cbnz	x8, 164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x164>
 134:	cmp	w23, #0x20
 138:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 13c:	mov	w1, #0x20                  	// #32
 140:	bfxil	w1, w23, #0, #5
 144:	mov	w2, #0x6                   	// #6
 148:	mov	x0, x20
 14c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 150:	lsr	w1, w23, #5
 154:	cmp	w23, #0x400
 158:	mov	w23, w1
 15c:	b.cs	13c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x13c>  // b.hs, b.nlast
 160:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xfc>
 164:	mov	w1, #0x20                  	// #32
 168:	bfxil	w1, w23, #0, #5
 16c:	mov	w2, #0x6                   	// #6
 170:	mov	x0, x20
 174:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 178:	lsr	x23, x24, #5
 17c:	cmp	x24, #0x3ff
 180:	mov	x24, x23
 184:	b.hi	164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0x164>  // b.pmore
 188:	b	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j+0xf8>
 18c:	ldp	x20, x19, [sp, #48]
 190:	ldp	x22, x21, [sp, #32]
 194:	ldp	x24, x23, [sp, #16]
 198:	ldp	x29, x30, [sp], #64
 19c:	ret
 1a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 1a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 1a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplImEEEEvjRKT_j>
 1ac:	add	x0, x0, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x3, x3, #0x0
 1b8:	mov	w2, #0x99                  	// #153
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE:

0000000000000000 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #280]
   c:	cbz	w9, a8 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0xa8>
  10:	orr	x8, x1, #0x4
  14:	cmn	x8, #0x4
  18:	b.eq	88 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0x88>  // b.none
  1c:	ldr	x8, [x0, #264]
  20:	ubfx	x10, x1, #4, #28
  24:	eor	w11, w10, w1, lsr #9
  28:	sub	w10, w9, #0x1
  2c:	and	w9, w10, w11
  30:	lsl	x11, x9, #4
  34:	ldr	x11, [x8, x11]
  38:	cmp	x11, x1
  3c:	b.ne	58 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0x58>  // b.any
  40:	add	x8, x8, x9, lsl #4
  44:	ldr	w8, [x8, #12]
  48:	cbz	w8, a8 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0xa8>
  4c:	sub	w0, w8, #0x1
  50:	ldp	x29, x30, [sp], #16
  54:	ret
  58:	mov	w12, #0x1                   	// #1
  5c:	cmn	x11, #0x4
  60:	b.eq	a8 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0xa8>  // b.none
  64:	add	w9, w9, w12
  68:	and	w9, w9, w10
  6c:	lsl	x11, x9, #4
  70:	ldr	x11, [x8, x11]
  74:	add	w12, w12, #0x1
  78:	cmp	x11, x1
  7c:	b.ne	5c <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0x5c>  // b.any
  80:	mov	w9, w9
  84:	b	40 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0x40>
  88:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  8c:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  90:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x252                 	// #594
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  ac:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  b0:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x9b                  	// #155
  c4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15DILocalVariable8getScopeEv:

0000000000000000 <_ZNK4llvm15DILocalVariable8getScopeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	cbz	w8, 74 <_ZNK4llvm15DILocalVariable8getScopeEv+0x74>
  10:	sub	x8, x0, x8, lsl #3
  14:	ldr	x0, [x8]
  18:	cbz	x0, 94 <_ZNK4llvm15DILocalVariable8getScopeEv+0x94>
  1c:	ldrb	w8, [x0]
  20:	sub	w9, w8, #0xb
  24:	cmp	w9, #0xb
  28:	ccmp	w8, #0x1f, #0x4, cs  // cs = hs, nlast
  2c:	b.ne	b4 <_ZNK4llvm15DILocalVariable8getScopeEv+0xb4>  // b.any
  30:	cmp	w9, #0xb
  34:	b.cs	4c <_ZNK4llvm15DILocalVariable8getScopeEv+0x4c>  // b.hs, b.nlast
  38:	sub	w8, w8, #0x11
  3c:	cmp	w8, #0x3
  40:	b.cs	d4 <_ZNK4llvm15DILocalVariable8getScopeEv+0xd4>  // b.hs, b.nlast
  44:	ldp	x29, x30, [sp], #16
  48:	ret
  4c:	cmp	w8, #0x1f
  50:	b.eq	38 <_ZNK4llvm15DILocalVariable8getScopeEv+0x38>  // b.none
  54:	adrp	x0, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  58:	adrp	x1, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  5c:	adrp	x3, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  60:	add	x0, x0, #0x0
  64:	add	x1, x1, #0x0
  68:	add	x3, x3, #0x0
  6c:	mov	w2, #0x108                 	// #264
  70:	bl	0 <__assert_fail>
  74:	adrp	x0, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  78:	adrp	x1, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  7c:	adrp	x3, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  80:	add	x0, x0, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x3, x3, #0x0
  8c:	mov	w2, #0x436                 	// #1078
  90:	bl	0 <__assert_fail>
  94:	adrp	x0, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  98:	adrp	x1, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  9c:	adrp	x3, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x69                  	// #105
  b0:	bl	0 <__assert_fail>
  b4:	adrp	x0, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  b8:	adrp	x1, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  bc:	adrp	x3, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  c0:	add	x0, x0, #0x0
  c4:	add	x1, x1, #0x0
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x134                 	// #308
  d0:	bl	0 <__assert_fail>
  d4:	adrp	x0, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  d8:	adrp	x1, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  dc:	adrp	x3, 0 <_ZNK4llvm15DILocalVariable8getScopeEv>
  e0:	add	x0, x0, #0x0
  e4:	add	x1, x1, #0x0
  e8:	add	x3, x3, #0x0
  ec:	mov	w2, #0x108                 	// #264
  f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
  ec:	cbz	w19, 18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x18c>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x18c>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	1a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x1a0>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	x24, [x8, x22, lsl #3]
 128:	lsr	x8, x24, #32
 12c:	mov	w23, w24
 130:	cbnz	x8, 164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x164>
 134:	cmp	w23, #0x20
 138:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 13c:	mov	w1, #0x20                  	// #32
 140:	bfxil	w1, w23, #0, #5
 144:	mov	w2, #0x6                   	// #6
 148:	mov	x0, x20
 14c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 150:	lsr	w1, w23, #5
 154:	cmp	w23, #0x400
 158:	mov	w23, w1
 15c:	b.cs	13c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x13c>  // b.hs, b.nlast
 160:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xfc>
 164:	mov	w1, #0x20                  	// #32
 168:	bfxil	w1, w23, #0, #5
 16c:	mov	w2, #0x6                   	// #6
 170:	mov	x0, x20
 174:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 178:	lsr	x23, x24, #5
 17c:	cmp	x24, #0x3ff
 180:	mov	x24, x23
 184:	b.hi	164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0x164>  // b.pmore
 188:	b	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j+0xf8>
 18c:	ldp	x20, x19, [sp, #48]
 190:	ldp	x22, x21, [sp, #32]
 194:	ldp	x24, x23, [sp, #16]
 198:	ldp	x29, x30, [sp], #64
 19c:	ret
 1a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 1a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 1a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj4EEEEEvjRKT_j>
 1ac:	add	x0, x0, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x3, x3, #0x0
 1b8:	mov	w2, #0x99                  	// #153
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	mov	x19, x1
  14:	cbz	w8, 8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_+0x8c>
  18:	ldr	x9, [x19]
  1c:	orr	x10, x9, #0x8
  20:	cmn	x10, #0x8
  24:	b.eq	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_+0xc4>  // b.none
  28:	ldr	x10, [x0, #8]
  2c:	ubfx	x11, x9, #4, #28
  30:	eor	w12, w11, w9, lsr #9
  34:	sub	w11, w8, #0x1
  38:	and	w12, w12, w11
  3c:	add	x8, x10, w12, uxtw #4
  40:	ldr	x14, [x8]
  44:	cmp	x14, x9
  48:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_+0xa8>  // b.none
  4c:	mov	x13, xzr
  50:	mov	w16, #0x1                   	// #1
  54:	mov	x15, #0xfffffffffffffff0    	// #-16
  58:	cmn	x14, #0x8
  5c:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_+0xb8>  // b.none
  60:	cmp	x13, #0x0
  64:	add	w12, w12, w16
  68:	ccmp	x14, x15, #0x0, eq  // eq = none
  6c:	and	w12, w12, w11
  70:	csel	x13, x13, x8, ne  // ne = any
  74:	add	x8, x10, w12, uxtw #4
  78:	ldr	x14, [x8]
  7c:	add	w16, w16, #0x1
  80:	cmp	x14, x9
  84:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_+0xa8>  // b.none
  88:	b	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_+0x58>
  8c:	mov	x3, xzr
  90:	mov	x1, x19
  94:	mov	x2, x19
  98:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_>
  9c:	ldr	x9, [x19]
  a0:	mov	x8, x0
  a4:	stp	x9, xzr, [x0]
  a8:	ldr	x19, [sp, #16]
  ac:	add	x0, x8, #0x8
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret
  b8:	cmp	x13, #0x0
  bc:	csel	x3, x8, x13, eq  // eq = none
  c0:	b	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_+0x90>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_EixEOS4_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x252                 	// #594
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_mEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	188 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x188>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  68:	mov	x10, x9
  6c:	add	x9, x9, x8, lsl #4
  70:	mov	x11, #0xfffffffffffffff8    	// #-8
  74:	str	x11, [x10], #16
  78:	cmp	x9, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x140>  // b.none
  88:	mov	w9, wzr
  8c:	sub	w10, w8, #0x1
  90:	mov	x11, #0xfffffffffffffff0    	// #-16
  94:	b	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0xc0>
  98:	cmp	x16, #0x0
  9c:	csel	x13, x14, x16, eq  // eq = none
  a0:	str	x12, [x13]
  a4:	ldr	x12, [x1, #8]
  a8:	add	w9, w9, #0x1
  ac:	str	x12, [x13, #8]
  b0:	str	w9, [x0, #16]
  b4:	add	x1, x1, #0x10
  b8:	cmp	x1, x2
  bc:	b.eq	140 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x140>  // b.none
  c0:	ldr	x12, [x1]
  c4:	orr	x13, x12, #0x8
  c8:	cmn	x13, #0x8
  cc:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb4>  // b.none
  d0:	cbz	w8, 138 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x138>
  d4:	cmn	x12, #0x8
  d8:	b.eq	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x168>  // b.none
  dc:	ldr	x13, [x0, #8]
  e0:	ubfx	x14, x12, #4, #28
  e4:	eor	w14, w14, w12, lsr #9
  e8:	and	w15, w14, w10
  ec:	add	x14, x13, w15, uxtw #4
  f0:	ldr	x17, [x14]
  f4:	cmp	x17, x12
  f8:	b.eq	148 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x148>  // b.none
  fc:	mov	x16, xzr
 100:	mov	w18, #0x1                   	// #1
 104:	cmn	x17, #0x8
 108:	b.eq	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x98>  // b.none
 10c:	cmp	x16, #0x0
 110:	add	w15, w15, w18
 114:	ccmp	x17, x11, #0x0, eq  // eq = none
 118:	and	w15, w15, w10
 11c:	csel	x16, x16, x14, ne  // ne = any
 120:	add	x14, x13, w15, uxtw #4
 124:	ldr	x17, [x14]
 128:	add	w18, w18, #0x1
 12c:	cmp	x17, x12
 130:	b.ne	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x104>  // b.any
 134:	b	148 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0x148>
 138:	mov	x13, xzr
 13c:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_+0xa0>
 140:	ldp	x29, x30, [sp], #16
 144:	ret
 148:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 14c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x17a                 	// #378
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 16c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x252                 	// #594
 184:	bl	0 <__assert_fail>
 188:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 18c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 190:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8FunctionEmNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_mEEEES4_mS6_S9_E18moveFromOldBucketsEPS9_SC_>
 194:	add	x0, x0, #0x0
 198:	add	x1, x1, #0x0
 19c:	add	x3, x3, #0x0
 1a0:	mov	w2, #0x15c                 	// #348
 1a4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldp	x24, x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
  ec:	cbz	w19, 18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x18c>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	18c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x18c>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	1a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x1a0>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	x24, [x8, x22, lsl #3]
 128:	lsr	x8, x24, #32
 12c:	mov	w23, w24
 130:	cbnz	x8, 164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x164>
 134:	cmp	w23, #0x20
 138:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 13c:	mov	w1, #0x20                  	// #32
 140:	bfxil	w1, w23, #0, #5
 144:	mov	w2, #0x6                   	// #6
 148:	mov	x0, x20
 14c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 150:	lsr	w1, w23, #5
 154:	cmp	w23, #0x400
 158:	mov	w23, w1
 15c:	b.cs	13c <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x13c>  // b.hs, b.nlast
 160:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xfc>
 164:	mov	w1, #0x20                  	// #32
 168:	bfxil	w1, w23, #0, #5
 16c:	mov	w2, #0x6                   	// #6
 170:	mov	x0, x20
 174:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 178:	lsr	x23, x24, #5
 17c:	cmp	x24, #0x3ff
 180:	mov	x24, x23
 184:	b.hi	164 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0x164>  // b.pmore
 188:	b	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j+0xf8>
 18c:	ldp	x20, x19, [sp, #48]
 190:	ldp	x22, x21, [sp, #32]
 194:	ldp	x24, x23, [sp, #16]
 198:	ldp	x29, x30, [sp], #64
 19c:	ret
 1a0:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 1a4:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 1a8:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_11SmallVectorImLj128EEEEEvjRKT_j>
 1ac:	add	x0, x0, #0x0
 1b0:	add	x1, x1, #0x0
 1b4:	add	x3, x3, #0x0
 1b8:	mov	w2, #0x99                  	// #153
 1bc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase13getArgOperandEj:

0000000000000000 <_ZNK4llvm8CallBase13getArgOperandEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w8, [x0, #16]
  14:	mov	x20, x0
  18:	mov	w19, w1
  1c:	cmp	w8, #0x50
  20:	b.eq	50 <_ZNK4llvm8CallBase13getArgOperandEj+0x50>  // b.none
  24:	cmp	w8, #0x23
  28:	b.eq	3c <_ZNK4llvm8CallBase13getArgOperandEj+0x3c>  // b.none
  2c:	cmp	w8, #0x1d
  30:	b.ne	c4 <_ZNK4llvm8CallBase13getArgOperandEj+0xc4>  // b.any
  34:	mov	x8, #0xfffffffffffffffe    	// #-2
  38:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  3c:	mov	x0, x20
  40:	bl	0 <_ZNK4llvm8CallBase34getNumSubclassExtraOperandsDynamicEv>
  44:	mov	x8, xzr
  48:	sub	x8, x8, w0, uxtw
  4c:	b	54 <_ZNK4llvm8CallBase13getArgOperandEj+0x54>
  50:	mov	x8, xzr
  54:	mov	w21, #0x18                  	// #24
  58:	mov	x0, x20
  5c:	madd	x22, x8, x21, x20
  60:	bl	0 <_ZNK4llvm8CallBase13getArgOperandEj>
  64:	ldr	w8, [x20, #20]
  68:	mov	w9, w0
  6c:	mneg	x9, x9, x21
  70:	add	x10, x22, x9
  74:	and	x9, x8, #0xfffffff
  78:	mneg	x8, x9, x21
  7c:	add	x8, x20, x8
  80:	sub	x10, x10, x8
  84:	sub	x10, x10, #0x18
  88:	mov	w11, #0xaaab                	// #43691
  8c:	lsr	x10, x10, #3
  90:	movk	w11, #0xaaaa, lsl #16
  94:	mul	w10, w10, w11
  98:	cmp	w10, w19
  9c:	b.ls	dc <_ZNK4llvm8CallBase13getArgOperandEj+0xdc>  // b.plast
  a0:	cmp	w9, w19
  a4:	b.ls	fc <_ZNK4llvm8CallBase13getArgOperandEj+0xfc>  // b.plast
  a8:	mov	w9, #0x18                  	// #24
  ac:	umull	x9, w19, w9
  b0:	ldr	x0, [x8, x9]
  b4:	ldp	x20, x19, [sp, #32]
  b8:	ldp	x22, x21, [sp, #16]
  bc:	ldp	x29, x30, [sp], #48
  c0:	ret
  c4:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  c8:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	mov	w2, #0x46a                 	// #1130
  d8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  dc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e0:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e4:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x4df                 	// #1247
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 100:	adrp	x1, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 104:	adrp	x3, 0 <_ZNK4llvm8CallBase13getArgOperandEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x86a                 	// #2154
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	w19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldr	x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
  ec:	cbz	w19, 158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x158>
  f0:	mov	x22, xzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
 108:	add	x22, x22, #0x1
 10c:	cmp	x22, x19
 110:	b.eq	158 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x158>  // b.none
 114:	ldr	w8, [x21, #8]
 118:	cmp	x22, x8
 11c:	b.cs	16c <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x16c>  // b.hs, b.nlast
 120:	ldr	x8, [x21]
 124:	ldr	w23, [x8, x22, lsl #2]
 128:	cmp	w23, #0x20
 12c:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 130:	mov	w1, #0x20                  	// #32
 134:	bfxil	w1, w23, #0, #5
 138:	mov	w2, #0x6                   	// #6
 13c:	mov	x0, x20
 140:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
 144:	lsr	w1, w23, #5
 148:	cmp	w23, #0x3ff
 14c:	mov	w23, w1
 150:	b.hi	130 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0x130>  // b.pmore
 154:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j+0xfc>
 158:	ldp	x20, x19, [sp, #48]
 15c:	ldp	x22, x21, [sp, #32]
 160:	ldr	x23, [sp, #16]
 164:	ldp	x29, x30, [sp], #64
 168:	ret
 16c:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
 170:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
 174:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_15SmallVectorImplIjEEEEvjRKT_j>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x99                  	// #153
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10SwitchInst12getSuccessorEj:

0000000000000000 <_ZNK4llvm10SwitchInst12getSuccessorEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #20]
   c:	ubfx	w8, w9, #1, #27
  10:	cmp	w8, w1
  14:	b.ls	68 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x68>  // b.plast
  18:	mov	w8, #0x1                   	// #1
  1c:	bfi	w8, w1, #1, #31
  20:	and	x10, x9, #0xfffffff
  24:	cmp	w10, w8
  28:	b.ls	88 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x88>  // b.plast
  2c:	tbnz	w9, #30, 40 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x40>
  30:	mov	w9, #0x18                  	// #24
  34:	mneg	x9, x10, x9
  38:	add	x9, x0, x9
  3c:	b	44 <_ZNK4llvm10SwitchInst12getSuccessorEj+0x44>
  40:	ldur	x9, [x0, #-8]
  44:	mov	w10, #0x18                  	// #24
  48:	umull	x8, w8, w10
  4c:	ldr	x0, [x9, x8]
  50:	cbz	x0, a8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xa8>
  54:	ldrb	w8, [x0, #16]
  58:	cmp	w8, #0x12
  5c:	b.ne	c8 <_ZNK4llvm10SwitchInst12getSuccessorEj+0xc8>  // b.any
  60:	ldp	x29, x30, [sp], #16
  64:	ret
  68:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  6c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  70:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0xd7c                 	// #3452
  84:	bl	0 <__assert_fail>
  88:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  8c:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  90:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0xdbe                 	// #3518
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  ac:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x69                  	// #105
  c4:	bl	0 <__assert_fail>
  c8:	adrp	x0, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  cc:	adrp	x1, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d0:	adrp	x3, 0 <_ZNK4llvm10SwitchInst12getSuccessorEj>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x108                 	// #264
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv:

0000000000000000 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0]
  10:	and	x8, x9, #0x6
  14:	cmp	x8, #0x4
  18:	and	x20, x9, #0xfffffffffffffff8
  1c:	b.eq	58 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x58>  // b.none
  20:	cmp	x8, #0x2
  24:	b.ne	88 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x88>  // b.any
  28:	cbz	x20, e4 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xe4>
  2c:	ldrb	w8, [x20, #16]
  30:	cmp	w8, #0x50
  34:	b.eq	98 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x98>  // b.none
  38:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  3c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  40:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  44:	add	x0, x0, #0x0
  48:	add	x1, x1, #0x0
  4c:	add	x3, x3, #0x0
  50:	mov	w2, #0x108                 	// #264
  54:	bl	0 <__assert_fail>
  58:	cbz	x20, 104 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x104>
  5c:	ldrb	w8, [x20, #16]
  60:	cmp	w8, #0x23
  64:	b.eq	98 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x98>  // b.none
  68:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  6c:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  70:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x108                 	// #264
  84:	bl	0 <__assert_fail>
  88:	cbz	x20, 124 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x124>
  8c:	ldrb	w8, [x20, #16]
  90:	cmp	w8, #0x1d
  94:	b.ne	144 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0x144>  // b.any
  98:	ldr	w8, [x20, #20]
  9c:	tbnz	w8, #31, a8 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xa8>
  a0:	mov	x19, xzr
  a4:	b	bc <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xbc>
  a8:	mov	x0, x20
  ac:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b0:	ldr	w8, [x20, #20]
  b4:	mov	x19, x0
  b8:	tbnz	w8, #31, d4 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xd4>
  bc:	mov	x8, xzr
  c0:	sub	x8, x8, x19
  c4:	ldp	x20, x19, [sp, #16]
  c8:	lsr	x0, x8, #4
  cc:	ldp	x29, x30, [sp], #32
  d0:	ret
  d4:	mov	x0, x20
  d8:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  dc:	add	x8, x0, x1
  e0:	b	c0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv+0xc0>
  e4:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  e8:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  ec:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x69                  	// #105
 100:	bl	0 <__assert_fail>
 104:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 108:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 10c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x69                  	// #105
 120:	bl	0 <__assert_fail>
 124:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 128:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 12c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 130:	add	x0, x0, #0x0
 134:	add	x1, x1, #0x0
 138:	add	x3, x3, #0x0
 13c:	mov	w2, #0x69                  	// #105
 140:	bl	0 <__assert_fail>
 144:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 148:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 14c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E20getNumOperandBundlesEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x108                 	// #264
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj:

0000000000000000 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x10, [x0]
   c:	and	x9, x10, #0x6
  10:	cmp	x9, #0x4
  14:	and	x0, x10, #0xfffffffffffffff8
  18:	b.eq	54 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x54>  // b.none
  1c:	cmp	x9, #0x2
  20:	b.ne	84 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x84>  // b.any
  24:	cbz	x0, 9c <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x9c>
  28:	ldrb	w9, [x0, #16]
  2c:	cmp	w9, #0x50
  30:	b.eq	94 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x94>  // b.none
  34:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  38:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  3c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  40:	add	x0, x0, #0x0
  44:	add	x1, x1, #0x0
  48:	add	x3, x3, #0x0
  4c:	mov	w2, #0x108                 	// #264
  50:	bl	0 <__assert_fail>
  54:	cbz	x0, bc <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0xbc>
  58:	ldrb	w9, [x0, #16]
  5c:	cmp	w9, #0x23
  60:	b.eq	94 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0x94>  // b.none
  64:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  68:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  6c:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x108                 	// #264
  80:	bl	0 <__assert_fail>
  84:	cbz	x0, dc <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0xdc>
  88:	ldrb	w9, [x0, #16]
  8c:	cmp	w9, #0x1d
  90:	b.ne	fc <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj+0xfc>  // b.any
  94:	ldp	x29, x30, [sp], #16
  98:	b	0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  9c:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  a0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  a4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x69                  	// #105
  b8:	bl	0 <__assert_fail>
  bc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  c0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  c4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x69                  	// #105
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  e0:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  e4:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x69                  	// #105
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
 100:	adrp	x1, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
 104:	adrp	x3, 0 <_ZNK4llvm12CallSiteBaseIKNS_8FunctionEKNS_10BasicBlockEKNS_5ValueEKNS_4UserEKNS_3UseEKNS_11InstructionEKNS_8CallInstEKNS_10InvokeInstEKNS_10CallBrInstEPSA_E18getOperandBundleAtEj>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase18getOperandBundleAtEj:

0000000000000000 <_ZNK4llvm8CallBase18getOperandBundleAtEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w9, [x0, #20]
  14:	mov	w21, w1
  18:	mov	x19, x0
  1c:	mov	x20, x8
  20:	tbnz	w9, #31, 30 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x30>
  24:	mov	x22, xzr
  28:	mov	x8, xzr
  2c:	b	58 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x58>
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  38:	ldr	w8, [x19, #20]
  3c:	mov	x22, x0
  40:	tbnz	w8, #31, 4c <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x4c>
  44:	mov	x8, xzr
  48:	b	58 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0x58>
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  54:	add	x8, x0, x1
  58:	sub	x8, x8, x22
  5c:	lsr	x8, x8, #4
  60:	cmp	w8, w21
  64:	b.ls	b0 <_ZNK4llvm8CallBase18getOperandBundleAtEj+0xb0>  // b.plast
  68:	mov	x0, x19
  6c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  70:	ldr	w9, [x19, #20]
  74:	add	x8, x0, w21, uxtw #4
  78:	ldp	w11, w12, [x8, #8]
  7c:	mov	w10, #0x18                  	// #24
  80:	ldr	x8, [x8]
  84:	and	x9, x9, #0xfffffff
  88:	mneg	x9, x9, x10
  8c:	add	x9, x19, x9
  90:	sub	x12, x12, x11
  94:	madd	x9, x11, x10, x9
  98:	stp	x9, x12, [x20]
  9c:	str	x8, [x20, #16]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x22, x21, [sp, #16]
  a8:	ldp	x29, x30, [sp], #48
  ac:	ret
  b0:	adrp	x0, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  b4:	adrp	x1, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  b8:	adrp	x3, 0 <_ZNK4llvm8CallBase18getOperandBundleAtEj>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x716                 	// #1814
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8CallBase25getNumTotalBundleOperandsEv:

0000000000000000 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #20]
  14:	mov	x19, x0
  18:	tbnz	w8, #31, 28 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x28>
  1c:	mov	x20, xzr
  20:	mov	x8, xzr
  24:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  28:	mov	x0, x19
  2c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  30:	ldr	w8, [x19, #20]
  34:	mov	x20, x0
  38:	tbnz	w8, #31, 44 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x44>
  3c:	mov	x8, xzr
  40:	b	50 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x50>
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  4c:	add	x8, x0, x1
  50:	sub	x8, x8, x20
  54:	lsr	x8, x8, #4
  58:	cbz	w8, 70 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x70>
  5c:	ldr	w8, [x19, #20]
  60:	tbnz	w8, #31, 78 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x78>
  64:	mov	x20, xzr
  68:	mov	x8, xzr
  6c:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  70:	mov	w0, wzr
  74:	b	118 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x118>
  78:	mov	x0, x19
  7c:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  80:	ldr	w8, [x19, #20]
  84:	mov	x20, x0
  88:	tbnz	w8, #31, 94 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x94>
  8c:	mov	x8, xzr
  90:	b	a0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xa0>
  94:	mov	x0, x19
  98:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  9c:	add	x8, x0, x1
  a0:	sub	x8, x8, x20
  a4:	lsr	x8, x8, #4
  a8:	cbz	w8, 128 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x128>
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  b4:	ldr	w8, [x19, #20]
  b8:	ldr	w21, [x0, #8]
  bc:	tbnz	w8, #31, cc <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xcc>
  c0:	mov	x20, xzr
  c4:	mov	x8, xzr
  c8:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  cc:	mov	x0, x19
  d0:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  d4:	ldr	w8, [x19, #20]
  d8:	mov	x20, x0
  dc:	tbnz	w8, #31, e8 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xe8>
  e0:	mov	x8, xzr
  e4:	b	f4 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0xf4>
  e8:	mov	x0, x19
  ec:	bl	0 <_ZN4llvm4User13getDescriptorEv>
  f0:	add	x8, x0, x1
  f4:	sub	x8, x8, x20
  f8:	lsr	x8, x8, #4
  fc:	cbz	w8, 148 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x148>
 100:	mov	x0, x19
 104:	bl	0 <_ZN4llvm4User13getDescriptorEv>
 108:	add	x8, x0, x1
 10c:	ldur	w8, [x8, #-4]
 110:	subs	w0, w8, w21
 114:	b.cc	168 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv+0x168>  // b.lo, b.ul, b.last
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 12c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 130:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x6ed                 	// #1773
 144:	bl	0 <__assert_fail>
 148:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 14c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 150:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x6f3                 	// #1779
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 16c:	adrp	x1, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 170:	adrp	x3, 0 <_ZNK4llvm8CallBase25getNumTotalBundleOperandsEv>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x710                 	// #1808
 184:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_:

0000000000000000 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x9, [x0]
  20:	ldr	w8, [x0, #8]
  24:	mov	x24, x3
  28:	mov	x19, x2
  2c:	sub	x11, x1, x9
  30:	add	x10, x9, x8, lsl #3
  34:	mov	x20, x0
  38:	cmp	x10, x1
  3c:	asr	x26, x11, #3
  40:	b.eq	f4 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xf4>  // b.none
  44:	cmp	x9, x1
  48:	b.hi	21c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x21c>  // b.pmore
  4c:	cmp	x10, x1
  50:	b.cc	23c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x23c>  // b.lo, b.ul, b.last
  54:	ldr	w10, [x20, #12]
  58:	sub	x22, x24, x19
  5c:	asr	x27, x22, #3
  60:	add	x2, x27, x8
  64:	cmp	x2, x10
  68:	b.ls	84 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x84>  // b.plast
  6c:	add	x1, x20, #0x10
  70:	mov	w3, #0x8                   	// #8
  74:	mov	x0, x20
  78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  7c:	ldr	x9, [x20]
  80:	ldr	w8, [x20, #8]
  84:	add	x21, x9, x26, lsl #3
  88:	add	x23, x9, x8, lsl #3
  8c:	sub	x25, x23, x21
  90:	asr	x28, x25, #3
  94:	cmp	x28, x27
  98:	b.cs	15c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x15c>  // b.hs, b.nlast
  9c:	ldr	w11, [x20, #12]
  a0:	add	x10, x27, x8
  a4:	cmp	x10, x11
  a8:	b.hi	1fc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1fc>  // b.pmore
  ac:	cmp	x26, x8
  b0:	str	w10, [x20, #8]
  b4:	b.eq	cc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xcc>  // b.none
  b8:	add	x8, x9, w10, uxtw #3
  bc:	sub	x0, x8, x28, lsl #3
  c0:	mov	x1, x21
  c4:	mov	x2, x25
  c8:	bl	0 <memcpy>
  cc:	cbz	x25, e8 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xe8>
  d0:	mov	x8, x21
  d4:	ldr	x9, [x19], #8
  d8:	subs	x28, x28, #0x1
  dc:	str	x9, [x8], #8
  e0:	b.ne	d4 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0xd4>  // b.any
  e4:	sub	x22, x24, x19
  e8:	cbz	x22, 1dc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1dc>
  ec:	mov	x0, x23
  f0:	b	1d0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1d0>
  f4:	ldr	w9, [x20, #12]
  f8:	sub	x21, x24, x19
  fc:	asr	x22, x21, #3
 100:	sub	x9, x9, x8
 104:	cmp	x22, x9
 108:	b.ls	120 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x120>  // b.plast
 10c:	add	x2, x22, x8
 110:	add	x1, x20, #0x10
 114:	mov	w3, #0x8                   	// #8
 118:	mov	x0, x20
 11c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 120:	cbz	x21, 13c <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x13c>
 124:	ldr	x8, [x20]
 128:	ldr	w9, [x20, #8]
 12c:	mov	x1, x19
 130:	mov	x2, x21
 134:	add	x0, x8, x9, lsl #3
 138:	bl	0 <memmove>
 13c:	ldp	w8, w9, [x20, #8]
 140:	add	x8, x22, x8
 144:	cmp	x8, x9
 148:	b.hi	1fc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1fc>  // b.pmore
 14c:	ldr	x9, [x20]
 150:	str	w8, [x20, #8]
 154:	add	x21, x9, x26, lsl #3
 158:	b	1dc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1dc>
 15c:	ldr	w9, [x20, #12]
 160:	sub	x9, x9, x8
 164:	cmp	x27, x9
 168:	b.ls	180 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x180>  // b.plast
 16c:	add	x2, x27, x8
 170:	add	x1, x20, #0x10
 174:	mov	w3, #0x8                   	// #8
 178:	mov	x0, x20
 17c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 180:	sub	x24, x23, x27, lsl #3
 184:	cbz	x22, 1a0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1a0>
 188:	ldr	x8, [x20]
 18c:	ldr	w9, [x20, #8]
 190:	mov	x1, x24
 194:	mov	x2, x22
 198:	add	x0, x8, x9, lsl #3
 19c:	bl	0 <memmove>
 1a0:	ldp	w8, w9, [x20, #8]
 1a4:	add	x8, x27, x8
 1a8:	cmp	x8, x9
 1ac:	b.hi	1fc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1fc>  // b.pmore
 1b0:	subs	x2, x24, x21
 1b4:	str	w8, [x20, #8]
 1b8:	b.eq	1c8 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1c8>  // b.none
 1bc:	sub	x0, x23, x2
 1c0:	mov	x1, x21
 1c4:	bl	0 <memmove>
 1c8:	cbz	x22, 1dc <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_+0x1dc>
 1cc:	mov	x0, x21
 1d0:	mov	x1, x19
 1d4:	mov	x2, x22
 1d8:	bl	0 <memmove>
 1dc:	mov	x0, x21
 1e0:	ldp	x20, x19, [sp, #80]
 1e4:	ldp	x22, x21, [sp, #64]
 1e8:	ldp	x24, x23, [sp, #48]
 1ec:	ldp	x26, x25, [sp, #32]
 1f0:	ldp	x28, x27, [sp, #16]
 1f4:	ldp	x29, x30, [sp], #96
 1f8:	ret
 1fc:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 200:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 204:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 208:	add	x0, x0, #0x0
 20c:	add	x1, x1, #0x0
 210:	add	x3, x3, #0x0
 214:	mov	w2, #0x43                  	// #67
 218:	bl	0 <__assert_fail>
 21c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 220:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 224:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 228:	add	x0, x0, #0x0
 22c:	add	x1, x1, #0x0
 230:	add	x3, x3, #0x0
 234:	mov	w2, #0x24e                 	// #590
 238:	bl	0 <__assert_fail>
 23c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 240:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 244:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplImE6insertIN9__gnu_cxx17__normal_iteratorIPKmSt6vectorImSaImEEEEvEEPmSB_T_SC_>
 248:	add	x0, x0, #0x0
 24c:	add	x1, x1, #0x0
 250:	add	x3, x3, #0x0
 254:	mov	w2, #0x24f                 	// #591
 258:	bl	0 <__assert_fail>

Disassembly of section .text._ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_:

0000000000000000 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, x0
  14:	cmp	x8, #0x81
  18:	b.lt	104 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x104>  // b.tstop
  1c:	mov	x19, x0
  20:	mov	x20, x2
  24:	add	x22, x0, #0x8
  28:	b	48 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x48>
  2c:	mov	x0, x21
  30:	mov	x2, x20
  34:	bl	0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_>
  38:	sub	x8, x21, x19
  3c:	cmp	x8, #0x80
  40:	mov	x1, x21
  44:	b.le	104 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x104>
  48:	cbz	x20, 114 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x114>
  4c:	lsr	x8, x8, #4
  50:	ldr	x9, [x19, #8]
  54:	ldr	x11, [x19, x8, lsl #3]
  58:	ldur	x10, [x1, #-8]
  5c:	sub	x20, x20, #0x1
  60:	cmp	x9, x11
  64:	b.cs	78 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x78>  // b.hs, b.nlast
  68:	cmp	x11, x10
  6c:	b.cs	88 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x88>  // b.hs, b.nlast
  70:	ldr	x9, [x19]
  74:	b	c0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xc0>
  78:	cmp	x9, x10
  7c:	b.cs	a8 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xa8>  // b.hs, b.nlast
  80:	ldr	x8, [x19]
  84:	b	a0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xa0>
  88:	ldr	x8, [x19]
  8c:	cmp	x9, x10
  90:	b.cs	a0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xa0>  // b.hs, b.nlast
  94:	str	x10, [x19]
  98:	stur	x8, [x1, #-8]
  9c:	b	c8 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xc8>
  a0:	stp	x9, x8, [x19]
  a4:	b	c8 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xc8>
  a8:	ldr	x9, [x19]
  ac:	cmp	x11, x10
  b0:	b.cs	c0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xc0>  // b.hs, b.nlast
  b4:	str	x10, [x19]
  b8:	stur	x9, [x1, #-8]
  bc:	b	c8 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xc8>
  c0:	str	x11, [x19]
  c4:	str	x9, [x19, x8, lsl #3]
  c8:	mov	x8, x1
  cc:	mov	x9, x22
  d0:	ldr	x11, [x19]
  d4:	ldr	x10, [x9], #8
  d8:	cmp	x10, x11
  dc:	b.cc	d4 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xd4>  // b.lo, b.ul, b.last
  e0:	sub	x21, x9, #0x8
  e4:	ldr	x12, [x8, #-8]!
  e8:	cmp	x11, x12
  ec:	b.cc	e4 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xe4>  // b.lo, b.ul, b.last
  f0:	cmp	x21, x8
  f4:	b.cs	2c <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0x2c>  // b.hs, b.nlast
  f8:	str	x12, [x21]
  fc:	str	x10, [x8]
 100:	b	d0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_+0xd0>
 104:	ldp	x20, x19, [sp, #32]
 108:	ldp	x22, x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret
 114:	mov	x0, x19
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldp	x22, x21, [sp, #16]
 120:	mov	x2, x1
 124:	ldp	x29, x30, [sp], #48
 128:	b	0 <_ZSt16__introsort_loopIPmlN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_T1_>

Disassembly of section .text._ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_:

0000000000000000 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	x8, x1, x0
  1c:	mov	x19, x1
  20:	mov	x20, x0
  24:	cmp	x8, #0x81
  28:	b.lt	ac <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xac>  // b.tstop
  2c:	add	x21, x20, #0x8
  30:	mov	w22, #0x1                   	// #1
  34:	mov	x23, x21
  38:	mov	x24, x20
  3c:	b	68 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x68>
  40:	lsl	x2, x22, #3
  44:	mov	x0, x21
  48:	mov	x1, x20
  4c:	bl	0 <memmove>
  50:	mov	x8, x20
  54:	add	x22, x22, #0x1
  58:	cmp	x22, #0x10
  5c:	add	x23, x23, #0x8
  60:	str	x25, [x8]
  64:	b.eq	140 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x140>  // b.none
  68:	mov	x8, x24
  6c:	add	x24, x20, x22, lsl #3
  70:	ldr	x25, [x24]
  74:	ldr	x9, [x20]
  78:	cmp	x25, x9
  7c:	b.cc	40 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x40>  // b.lo, b.ul, b.last
  80:	ldr	x9, [x8]
  84:	mov	x8, x24
  88:	cmp	x25, x9
  8c:	b.cs	54 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x54>  // b.hs, b.nlast
  90:	mov	x8, x23
  94:	str	x9, [x8]
  98:	ldur	x9, [x8, #-16]
  9c:	sub	x8, x8, #0x8
  a0:	cmp	x25, x9
  a4:	b.cc	94 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x94>  // b.lo, b.ul, b.last
  a8:	b	54 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x54>
  ac:	cmp	x20, x19
  b0:	b.eq	14c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x14c>  // b.none
  b4:	add	x9, x20, #0x8
  b8:	cmp	x9, x19
  bc:	b.eq	14c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x14c>  // b.none
  c0:	mov	x21, x20
  c4:	b	d8 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xd8>
  c8:	add	x9, x21, #0x8
  cc:	cmp	x9, x19
  d0:	str	x22, [x8]
  d4:	b.eq	14c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x14c>  // b.none
  d8:	ldr	x22, [x21, #8]
  dc:	ldr	x8, [x20]
  e0:	mov	x10, x21
  e4:	mov	x21, x9
  e8:	cmp	x22, x8
  ec:	b.cs	114 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x114>  // b.hs, b.nlast
  f0:	subs	x2, x21, x20
  f4:	mov	x8, x20
  f8:	b.eq	c8 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xc8>  // b.none
  fc:	sub	x8, x10, x2
 100:	add	x0, x8, #0x10
 104:	mov	x1, x20
 108:	bl	0 <memmove>
 10c:	mov	x8, x20
 110:	b	c8 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xc8>
 114:	ldr	x9, [x10]
 118:	mov	x8, x21
 11c:	cmp	x22, x9
 120:	b.cs	c8 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xc8>  // b.hs, b.nlast
 124:	mov	x8, x21
 128:	str	x9, [x8]
 12c:	ldur	x9, [x8, #-16]
 130:	sub	x8, x8, #0x8
 134:	cmp	x22, x9
 138:	b.cc	128 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x128>  // b.lo, b.ul, b.last
 13c:	b	c8 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0xc8>
 140:	add	x8, x20, #0x80
 144:	cmp	x8, x19
 148:	b.ne	174 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x174>  // b.any
 14c:	ldp	x20, x19, [sp, #64]
 150:	ldp	x22, x21, [sp, #48]
 154:	ldp	x24, x23, [sp, #32]
 158:	ldr	x25, [sp, #16]
 15c:	ldp	x29, x30, [sp], #80
 160:	ret
 164:	add	x8, x8, #0x8
 168:	cmp	x8, x19
 16c:	str	x9, [x10]
 170:	b.eq	14c <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x14c>  // b.none
 174:	ldp	x11, x9, [x8, #-8]
 178:	mov	x10, x8
 17c:	cmp	x9, x11
 180:	b.cs	164 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x164>  // b.hs, b.nlast
 184:	mov	x10, x8
 188:	str	x11, [x10]
 18c:	ldur	x11, [x10, #-16]
 190:	sub	x10, x10, #0x8
 194:	cmp	x9, x11
 198:	b.cc	188 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x188>  // b.lo, b.ul, b.last
 19c:	b	164 <_ZSt22__final_insertion_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_T0_+0x164>

Disassembly of section .text._ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_:

0000000000000000 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_>:
   0:	sub	x8, x1, x0
   4:	cmp	x8, #0x10
   8:	asr	x9, x8, #3
   c:	b.ge	1f8 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x1f8>  // b.tcont
  10:	cmp	x1, x2
  14:	b.cs	108 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x108>  // b.hs, b.nlast
  18:	sub	x10, x9, #0x1
  1c:	sub	x11, x9, #0x2
  20:	cmp	x10, #0x0
  24:	csel	x9, x9, x10, lt  // lt = tstop
  28:	cmp	x11, #0x0
  2c:	csel	x11, x10, x11, lt  // lt = tstop
  30:	asr	x9, x9, #1
  34:	asr	x10, x11, #1
  38:	orr	x11, x11, #0x1
  3c:	mov	x12, x1
  40:	b	58 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x58>
  44:	mov	x15, x14
  48:	str	x13, [x0, x15, lsl #3]
  4c:	add	x12, x12, #0x8
  50:	cmp	x12, x2
  54:	b.cs	108 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x108>  // b.hs, b.nlast
  58:	ldr	x13, [x12]
  5c:	ldr	x14, [x0]
  60:	cmp	x13, x14
  64:	b.cs	4c <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x4c>  // b.hs, b.nlast
  68:	cmp	x8, #0x11
  6c:	str	x14, [x12]
  70:	b.lt	b4 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0xb4>  // b.tstop
  74:	mov	x15, xzr
  78:	lsl	x14, x15, #1
  7c:	mov	w16, #0x1                   	// #1
  80:	add	x14, x14, #0x2
  84:	bfi	x16, x15, #1, #63
  88:	ldr	x17, [x0, x14, lsl #3]
  8c:	ldr	x18, [x0, x16, lsl #3]
  90:	cmp	x17, x18
  94:	csel	x14, x16, x14, cc  // cc = lo, ul, last
  98:	ldr	x16, [x0, x14, lsl #3]
  9c:	cmp	x14, x9
  a0:	str	x16, [x0, x15, lsl #3]
  a4:	mov	x15, x14
  a8:	b.lt	78 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x78>  // b.tstop
  ac:	tbz	w8, #3, bc <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0xbc>
  b0:	b	d0 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0xd0>
  b4:	mov	x14, xzr
  b8:	tbnz	w8, #3, d0 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0xd0>
  bc:	cmp	x14, x10
  c0:	b.ne	d0 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0xd0>  // b.any
  c4:	ldr	x14, [x0, x11, lsl #3]
  c8:	str	x14, [x0, x10, lsl #3]
  cc:	mov	x14, x11
  d0:	cmp	x14, #0x1
  d4:	b.lt	44 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x44>  // b.tstop
  d8:	sub	x15, x14, #0x1
  dc:	cmp	x15, #0x0
  e0:	csel	x15, x14, x15, lt  // lt = tstop
  e4:	asr	x15, x15, #1
  e8:	ldr	x16, [x0, x15, lsl #3]
  ec:	cmp	x16, x13
  f0:	b.cs	44 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x44>  // b.hs, b.nlast
  f4:	cmp	x14, #0x2
  f8:	str	x16, [x0, x14, lsl #3]
  fc:	mov	x14, x15
 100:	b.gt	d8 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0xd8>
 104:	b	48 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x48>
 108:	cmp	x8, #0x9
 10c:	b.ge	124 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x124>  // b.tcont
 110:	ret
 114:	mov	x11, x10
 118:	cmp	x9, #0x8
 11c:	str	x8, [x0, x11, lsl #3]
 120:	b.le	110 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x110>
 124:	ldr	x8, [x1, #-8]!
 128:	ldr	x13, [x0]
 12c:	sub	x9, x1, x0
 130:	asr	x12, x9, #3
 134:	sub	x11, x12, #0x1
 138:	cmp	x11, #0x0
 13c:	csel	x10, x12, x11, lt  // lt = tstop
 140:	cmp	x9, #0x11
 144:	str	x13, [x1]
 148:	b.lt	190 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x190>  // b.tstop
 14c:	mov	x14, xzr
 150:	asr	x13, x10, #1
 154:	lsl	x10, x14, #1
 158:	mov	w15, #0x1                   	// #1
 15c:	add	x10, x10, #0x2
 160:	bfi	x15, x14, #1, #63
 164:	ldr	x16, [x0, x10, lsl #3]
 168:	ldr	x17, [x0, x15, lsl #3]
 16c:	cmp	x16, x17
 170:	csel	x10, x15, x10, cc  // cc = lo, ul, last
 174:	ldr	x15, [x0, x10, lsl #3]
 178:	cmp	x10, x13
 17c:	str	x15, [x0, x14, lsl #3]
 180:	mov	x14, x10
 184:	b.lt	154 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x154>  // b.tstop
 188:	tbz	w9, #3, 198 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x198>
 18c:	b	1c0 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x1c0>
 190:	mov	x10, xzr
 194:	tbnz	w9, #3, 1c0 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x1c0>
 198:	sub	x12, x12, #0x2
 19c:	cmp	x12, #0x0
 1a0:	csel	x11, x11, x12, lt  // lt = tstop
 1a4:	cmp	x10, x11, asr #1
 1a8:	b.ne	1c0 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x1c0>  // b.any
 1ac:	mov	w11, #0x1                   	// #1
 1b0:	bfi	x11, x10, #1, #63
 1b4:	ldr	x12, [x0, x11, lsl #3]
 1b8:	str	x12, [x0, x10, lsl #3]
 1bc:	mov	x10, x11
 1c0:	cmp	x10, #0x1
 1c4:	b.lt	114 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x114>  // b.tstop
 1c8:	sub	x11, x10, #0x1
 1cc:	cmp	x11, #0x0
 1d0:	csel	x11, x10, x11, lt  // lt = tstop
 1d4:	asr	x11, x11, #1
 1d8:	ldr	x12, [x0, x11, lsl #3]
 1dc:	cmp	x12, x8
 1e0:	b.cs	114 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x114>  // b.hs, b.nlast
 1e4:	cmp	x10, #0x2
 1e8:	str	x12, [x0, x10, lsl #3]
 1ec:	mov	x10, x11
 1f0:	b.gt	1c8 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x1c8>
 1f4:	b	118 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x118>
 1f8:	sub	x10, x9, #0x2
 1fc:	sub	x11, x9, #0x1
 200:	cmp	x10, #0x0
 204:	csel	x12, x11, x10, lt  // lt = tstop
 208:	cmp	x11, #0x0
 20c:	asr	x10, x12, #1
 210:	csel	x11, x9, x11, lt  // lt = tstop
 214:	asr	x11, x11, #1
 218:	orr	x12, x12, #0x1
 21c:	mov	x14, x10
 220:	b	234 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x234>
 224:	mov	x16, x15
 228:	str	x14, [x0, x16, lsl #3]
 22c:	sub	x14, x13, #0x1
 230:	cbz	x13, 10 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x10>
 234:	mov	x13, x14
 238:	ldr	x14, [x0, x14, lsl #3]
 23c:	cmp	x11, x13
 240:	mov	x15, x13
 244:	b.le	280 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x280>
 248:	mov	x16, x13
 24c:	lsl	x15, x16, #1
 250:	mov	w17, #0x1                   	// #1
 254:	add	x15, x15, #0x2
 258:	bfi	x17, x16, #1, #63
 25c:	ldr	x18, [x0, x15, lsl #3]
 260:	ldr	x3, [x0, x17, lsl #3]
 264:	cmp	x18, x3
 268:	csel	x15, x17, x15, cc  // cc = lo, ul, last
 26c:	ldr	x17, [x0, x15, lsl #3]
 270:	cmp	x15, x11
 274:	str	x17, [x0, x16, lsl #3]
 278:	mov	x16, x15
 27c:	b.lt	24c <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x24c>  // b.tstop
 280:	tbnz	w8, #3, 298 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x298>
 284:	cmp	x15, x10
 288:	b.ne	298 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x298>  // b.any
 28c:	ldr	x15, [x0, x12, lsl #3]
 290:	str	x15, [x0, x10, lsl #3]
 294:	mov	x15, x12
 298:	cmp	x15, x13
 29c:	b.le	224 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x224>
 2a0:	sub	x16, x15, #0x1
 2a4:	cmp	x16, #0x0
 2a8:	csel	x16, x15, x16, lt  // lt = tstop
 2ac:	asr	x16, x16, #1
 2b0:	ldr	x17, [x0, x16, lsl #3]
 2b4:	cmp	x17, x14
 2b8:	b.cs	224 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x224>  // b.hs, b.nlast
 2bc:	cmp	x16, x13
 2c0:	str	x17, [x0, x15, lsl #3]
 2c4:	mov	x15, x16
 2c8:	b.gt	2a0 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x2a0>
 2cc:	b	228 <_ZSt14__partial_sortIPmN9__gnu_cxx5__ops15_Iter_less_iterEEvT_S4_S4_T0_+0x228>

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x2
  14:	mov	w21, w1
  18:	mov	x19, x0
  1c:	cbz	w3, 54 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x54>
  20:	mov	w9, w21
  24:	mov	x0, x19
  28:	mov	x2, x20
  2c:	ldp	x20, x19, [sp, #32]
  30:	ldr	x21, [sp, #16]
  34:	mov	w8, w3
  38:	orr	x6, x9, #0x100000000
  3c:	mov	w3, #0x5                   	// #5
  40:	mov	w1, w8
  44:	mov	x4, xzr
  48:	mov	x5, xzr
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  54:	ldr	w2, [x19, #16]
  58:	mov	w1, #0x3                   	// #3
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  64:	cmp	w21, #0x20
  68:	b.cs	74 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x74>  // b.hs, b.nlast
  6c:	mov	w1, w21
  70:	b	98 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x98>
  74:	mov	w1, #0x20                  	// #32
  78:	bfxil	w1, w21, #0, #5
  7c:	mov	w2, #0x6                   	// #6
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  88:	lsr	w1, w21, #5
  8c:	cmp	w21, #0x3ff
  90:	mov	w21, w1
  94:	b.hi	74 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x74>  // b.pmore
  98:	mov	w2, #0x6                   	// #6
  9c:	mov	x0, x19
  a0:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  a4:	mov	w1, #0x5                   	// #5
  a8:	mov	w2, #0x6                   	// #6
  ac:	mov	x0, x19
  b0:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  b4:	ldr	w21, [x20]
  b8:	cmp	w21, #0x20
  bc:	b.cs	c8 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0xc8>  // b.hs, b.nlast
  c0:	mov	w1, w21
  c4:	b	ec <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0xec>
  c8:	mov	w1, #0x20                  	// #32
  cc:	bfxil	w1, w21, #0, #5
  d0:	mov	w2, #0x6                   	// #6
  d4:	mov	x0, x19
  d8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  dc:	lsr	w1, w21, #5
  e0:	cmp	w21, #0x3ff
  e4:	mov	w21, w1
  e8:	b.hi	c8 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0xc8>  // b.pmore
  ec:	mov	w2, #0x6                   	// #6
  f0:	mov	x0, x19
  f4:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
  f8:	ldr	w21, [x20, #4]
  fc:	cmp	w21, #0x20
 100:	b.cs	10c <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x10c>  // b.hs, b.nlast
 104:	mov	w1, w21
 108:	b	130 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x130>
 10c:	mov	w1, #0x20                  	// #32
 110:	bfxil	w1, w21, #0, #5
 114:	mov	w2, #0x6                   	// #6
 118:	mov	x0, x19
 11c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 120:	lsr	w1, w21, #5
 124:	cmp	w21, #0x3ff
 128:	mov	w21, w1
 12c:	b.hi	10c <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x10c>  // b.pmore
 130:	mov	w2, #0x6                   	// #6
 134:	mov	x0, x19
 138:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 13c:	ldr	w21, [x20, #8]
 140:	cmp	w21, #0x20
 144:	b.cs	150 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x150>  // b.hs, b.nlast
 148:	mov	w1, w21
 14c:	b	174 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x174>
 150:	mov	w1, #0x20                  	// #32
 154:	bfxil	w1, w21, #0, #5
 158:	mov	w2, #0x6                   	// #6
 15c:	mov	x0, x19
 160:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 164:	lsr	w1, w21, #5
 168:	cmp	w21, #0x3ff
 16c:	mov	w21, w1
 170:	b.hi	150 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x150>  // b.pmore
 174:	mov	w2, #0x6                   	// #6
 178:	mov	x0, x19
 17c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 180:	ldr	w21, [x20, #12]
 184:	cmp	w21, #0x20
 188:	b.cs	194 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x194>  // b.hs, b.nlast
 18c:	mov	w1, w21
 190:	b	1b8 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x1b8>
 194:	mov	w1, #0x20                  	// #32
 198:	bfxil	w1, w21, #0, #5
 19c:	mov	w2, #0x6                   	// #6
 1a0:	mov	x0, x19
 1a4:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 1a8:	lsr	w1, w21, #5
 1ac:	cmp	w21, #0x3ff
 1b0:	mov	w21, w1
 1b4:	b.hi	194 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x194>  // b.pmore
 1b8:	mov	w2, #0x6                   	// #6
 1bc:	mov	x0, x19
 1c0:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 1c4:	ldr	w20, [x20, #16]
 1c8:	cmp	w20, #0x20
 1cc:	b.cs	1d8 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x1d8>  // b.hs, b.nlast
 1d0:	mov	w1, w20
 1d4:	b	1fc <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x1fc>
 1d8:	mov	w1, #0x20                  	// #32
 1dc:	bfxil	w1, w20, #0, #5
 1e0:	mov	w2, #0x6                   	// #6
 1e4:	mov	x0, x19
 1e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>
 1ec:	lsr	w1, w20, #5
 1f0:	cmp	w20, #0x3ff
 1f4:	mov	w20, w1
 1f8:	b.hi	1d8 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j+0x1d8>  // b.pmore
 1fc:	mov	x0, x19
 200:	ldp	x20, x19, [sp, #32]
 204:	ldr	x21, [sp, #16]
 208:	mov	w2, #0x6                   	// #6
 20c:	ldp	x29, x30, [sp], #48
 210:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordIA5_jEEvjRKT_j>

Disassembly of section .text._ZN4llvm15ValueEnumeratorD2Ev:

0000000000000000 <_ZN4llvm15ValueEnumeratorD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #512]
  18:	cbz	x0, 20 <_ZN4llvm15ValueEnumeratorD2Ev+0x20>
  1c:	bl	0 <_ZdlPv>
  20:	ldr	x0, [x19, #480]
  24:	bl	0 <_ZdlPv>
  28:	ldr	x8, [x19, #472]
  2c:	ldr	x0, [x19, #448]
  30:	add	x8, x8, #0x1
  34:	str	x8, [x19, #472]
  38:	bl	0 <_ZdlPv>
  3c:	ldr	x8, [x19, #440]
  40:	ldr	x0, [x19, #416]
  44:	add	x8, x8, #0x1
  48:	str	x8, [x19, #440]
  4c:	cbz	x0, 54 <_ZN4llvm15ValueEnumeratorD2Ev+0x54>
  50:	bl	0 <_ZdlPv>
  54:	ldr	x0, [x19, #392]
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x8, [x19, #384]
  60:	ldr	x0, [x19, #360]
  64:	add	x8, x8, #0x1
  68:	str	x8, [x19, #384]
  6c:	cbz	x0, 74 <_ZN4llvm15ValueEnumeratorD2Ev+0x74>
  70:	bl	0 <_ZdlPv>
  74:	ldr	x0, [x19, #336]
  78:	bl	0 <_ZdlPv>
  7c:	ldr	x8, [x19, #328]
  80:	ldrb	w9, [x19, #296]
  84:	add	x8, x8, #0x1
  88:	str	x8, [x19, #328]
  8c:	tbnz	w9, #0, a0 <_ZN4llvm15ValueEnumeratorD2Ev+0xa0>
  90:	ldr	x0, [x19, #304]
  94:	bl	0 <_ZdlPv>
  98:	ldrb	w8, [x19, #296]
  9c:	tbnz	w8, #0, 18c <_ZN4llvm15ValueEnumeratorD2Ev+0x18c>
  a0:	ldr	x8, [x19, #288]
  a4:	ldr	x0, [x19, #264]
  a8:	add	x8, x8, #0x1
  ac:	str	x8, [x19, #288]
  b0:	bl	0 <_ZdlPv>
  b4:	ldr	x8, [x19, #256]
  b8:	ldr	x0, [x19, #232]
  bc:	add	x8, x8, #0x1
  c0:	str	x8, [x19, #256]
  c4:	cbz	x0, cc <_ZN4llvm15ValueEnumeratorD2Ev+0xcc>
  c8:	bl	0 <_ZdlPv>
  cc:	ldr	x0, [x19, #208]
  d0:	cbz	x0, d8 <_ZN4llvm15ValueEnumeratorD2Ev+0xd8>
  d4:	bl	0 <_ZdlPv>
  d8:	ldr	x0, [x19, #184]
  dc:	add	x20, x19, #0x88
  e0:	cbz	x0, e8 <_ZN4llvm15ValueEnumeratorD2Ev+0xe8>
  e4:	bl	0 <_ZdlPv>
  e8:	ldr	x1, [x19, #152]
  ec:	mov	x0, x20
  f0:	bl	0 <_ZN4llvm15ValueEnumeratorD2Ev>
  f4:	ldr	x0, [x19, #112]
  f8:	cbz	x0, 100 <_ZN4llvm15ValueEnumeratorD2Ev+0x100>
  fc:	bl	0 <_ZdlPv>
 100:	ldr	x0, [x19, #88]
 104:	bl	0 <_ZdlPv>
 108:	ldr	x8, [x19, #80]
 10c:	ldr	x0, [x19, #56]
 110:	add	x8, x8, #0x1
 114:	str	x8, [x19, #80]
 118:	cbz	x0, 120 <_ZN4llvm15ValueEnumeratorD2Ev+0x120>
 11c:	bl	0 <_ZdlPv>
 120:	ldr	x0, [x19, #32]
 124:	bl	0 <_ZdlPv>
 128:	ldr	x8, [x19, #24]
 12c:	ldp	x20, x21, [x19]
 130:	add	x8, x8, #0x1
 134:	cmp	x20, x21
 138:	str	x8, [x19, #24]
 13c:	b.ne	164 <_ZN4llvm15ValueEnumeratorD2Ev+0x164>  // b.any
 140:	cbz	x20, 17c <_ZN4llvm15ValueEnumeratorD2Ev+0x17c>
 144:	mov	x0, x20
 148:	ldp	x20, x19, [sp, #32]
 14c:	ldr	x21, [sp, #16]
 150:	ldp	x29, x30, [sp], #48
 154:	b	0 <_ZdlPv>
 158:	add	x20, x20, #0x28
 15c:	cmp	x21, x20
 160:	b.eq	174 <_ZN4llvm15ValueEnumeratorD2Ev+0x174>  // b.none
 164:	ldr	x0, [x20, #16]
 168:	cbz	x0, 158 <_ZN4llvm15ValueEnumeratorD2Ev+0x158>
 16c:	bl	0 <_ZdlPv>
 170:	b	158 <_ZN4llvm15ValueEnumeratorD2Ev+0x158>
 174:	ldr	x20, [x19]
 178:	cbnz	x20, 144 <_ZN4llvm15ValueEnumeratorD2Ev+0x144>
 17c:	ldp	x20, x19, [sp, #32]
 180:	ldr	x21, [sp, #16]
 184:	ldp	x29, x30, [sp], #48
 188:	ret
 18c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorD2Ev>
 190:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorD2Ev>
 194:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorD2Ev>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x45b                 	// #1115
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E:

0000000000000000 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeImSt4pairIKmjESt10_Select1stIS2_ESt4lessImESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE8_M_eraseEPSt13_Rb_tree_nodeIS6_E+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	mov	x19, x1
  14:	cbz	w8, 8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_+0x8c>
  18:	ldr	x9, [x19]
  1c:	orr	x10, x9, #0x8
  20:	cmn	x10, #0x8
  24:	b.eq	c8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_+0xc8>  // b.none
  28:	ldr	x10, [x0, #8]
  2c:	ubfx	x11, x9, #4, #28
  30:	eor	w12, w11, w9, lsr #9
  34:	sub	w11, w8, #0x1
  38:	and	w12, w12, w11
  3c:	add	x8, x10, w12, uxtw #4
  40:	ldr	x14, [x8]
  44:	cmp	x14, x9
  48:	b.eq	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_+0xac>  // b.none
  4c:	mov	x13, xzr
  50:	mov	w16, #0x1                   	// #1
  54:	mov	x15, #0xfffffffffffffff0    	// #-16
  58:	cmn	x14, #0x8
  5c:	b.eq	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_+0xbc>  // b.none
  60:	cmp	x13, #0x0
  64:	add	w12, w12, w16
  68:	ccmp	x14, x15, #0x0, eq  // eq = none
  6c:	and	w12, w12, w11
  70:	csel	x13, x13, x8, ne  // ne = any
  74:	add	x8, x10, w12, uxtw #4
  78:	ldr	x14, [x8]
  7c:	add	w16, w16, #0x1
  80:	cmp	x14, x9
  84:	b.eq	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_+0xac>  // b.none
  88:	b	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_+0x58>
  8c:	mov	x3, xzr
  90:	mov	x1, x19
  94:	mov	x2, x19
  98:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_>
  9c:	ldr	x9, [x19]
  a0:	mov	x8, x0
  a4:	str	wzr, [x0, #8]
  a8:	str	x9, [x0]
  ac:	ldr	x19, [sp, #16]
  b0:	add	x0, x8, #0x8
  b4:	ldp	x29, x30, [sp], #32
  b8:	ret
  bc:	cmp	x13, #0x0
  c0:	csel	x3, x8, x13, eq  // eq = none
  c4:	b	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_+0x90>
  c8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_>
  cc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_>
  d0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixEOS4_>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x252                 	// #594
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_:

0000000000000000 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x9, [x0, #16]
  18:	mov	x21, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x9, 5c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0x5c>
  28:	ldr	x8, [x21]
  2c:	ldr	x10, [x9, #32]
  30:	mov	x22, x9
  34:	add	x9, x9, #0x10
  38:	add	x11, x22, #0x18
  3c:	cmp	x8, x10
  40:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  44:	ldr	x9, [x9]
  48:	cbnz	x9, 2c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0x2c>
  4c:	cmp	x8, x10
  50:	mov	x23, x22
  54:	b.cc	60 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0x60>  // b.lo, b.ul, b.last
  58:	b	7c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0x7c>
  5c:	mov	x22, x20
  60:	ldr	x8, [x19, #24]
  64:	cmp	x8, x22
  68:	b.eq	88 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0x88>  // b.none
  6c:	mov	x0, x22
  70:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  74:	ldr	x8, [x21]
  78:	mov	x23, x0
  7c:	ldr	x9, [x23, #32]
  80:	cmp	x9, x8
  84:	b.cs	a8 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0xa8>  // b.hs, b.nlast
  88:	cbz	x22, b0 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0xb0>
  8c:	cmp	x20, x22
  90:	b.eq	bc <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0xbc>  // b.none
  94:	ldr	x8, [x21]
  98:	ldr	x9, [x22, #32]
  9c:	cmp	x8, x9
  a0:	cset	w24, cc  // cc = lo, ul, last
  a4:	b	c0 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0xc0>
  a8:	mov	x1, xzr
  ac:	b	f8 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0xf8>
  b0:	mov	x23, xzr
  b4:	mov	x1, xzr
  b8:	b	f8 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE16_M_insert_uniqueIRKmEESt4pairISt17_Rb_tree_iteratorImEbEOT_+0xf8>
  bc:	mov	w24, #0x1                   	// #1
  c0:	mov	w0, #0x28                  	// #40
  c4:	bl	0 <_Znwm>
  c8:	ldr	x8, [x21]
  cc:	mov	x23, x0
  d0:	mov	x1, x23
  d4:	mov	x2, x22
  d8:	str	x8, [x0, #32]
  dc:	mov	w0, w24
  e0:	mov	x3, x20
  e4:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  e8:	ldr	x8, [x19, #40]
  ec:	mov	w1, #0x1                   	// #1
  f0:	add	x8, x8, #0x1
  f4:	str	x8, [x19, #40]
  f8:	mov	x0, x23
  fc:	ldp	x20, x19, [sp, #48]
 100:	ldp	x22, x21, [sp, #32]
 104:	ldp	x24, x23, [sp, #16]
 108:	ldp	x29, x30, [sp], #64
 10c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_18GlobalValueSummaryEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE:

0000000000000000 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeImmSt9_IdentityImESt4lessImESaImEE8_M_eraseEPSt13_Rb_tree_nodeImE+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j:

0000000000000000 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x19, [x2, #8]
  18:	mov	x21, x2
  1c:	mov	w22, w1
  20:	mov	x20, x0
  24:	cbz	w3, 5c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x5c>
  28:	ldr	x2, [x21]
  2c:	mov	w8, w22
  30:	mov	x0, x20
  34:	mov	w1, w3
  38:	mov	x3, x19
  3c:	ldp	x20, x19, [sp, #48]
  40:	ldp	x22, x21, [sp, #32]
  44:	ldr	x23, [sp, #16]
  48:	orr	x6, x8, #0x100000000
  4c:	mov	x4, xzr
  50:	mov	x5, xzr
  54:	ldp	x29, x30, [sp], #64
  58:	b	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  5c:	ldr	w2, [x20, #16]
  60:	mov	w1, #0x3                   	// #3
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  6c:	cmp	w22, #0x20
  70:	b.cs	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x7c>  // b.hs, b.nlast
  74:	mov	w1, w22
  78:	b	a0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xa0>
  7c:	mov	w1, #0x20                  	// #32
  80:	bfxil	w1, w22, #0, #5
  84:	mov	w2, #0x6                   	// #6
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  90:	lsr	w1, w22, #5
  94:	cmp	w22, #0x3ff
  98:	mov	w22, w1
  9c:	b.hi	7c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x7c>  // b.pmore
  a0:	mov	w2, #0x6                   	// #6
  a4:	mov	x0, x20
  a8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  ac:	cmp	w19, #0x20
  b0:	mov	w1, w19
  b4:	b.cc	e0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xe0>  // b.lo, b.ul, b.last
  b8:	mov	w22, w19
  bc:	mov	w1, #0x20                  	// #32
  c0:	bfxil	w1, w22, #0, #5
  c4:	mov	w2, #0x6                   	// #6
  c8:	mov	x0, x20
  cc:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  d0:	lsr	w1, w22, #5
  d4:	cmp	w22, #0x3ff
  d8:	mov	w22, w1
  dc:	b.hi	bc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xbc>  // b.pmore
  e0:	mov	w2, #0x6                   	// #6
  e4:	mov	x0, x20
  e8:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
  ec:	cbz	w19, 15c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x15c>
  f0:	mov	w8, wzr
  f4:	b	114 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x114>
  f8:	mov	w1, w23
  fc:	mov	w2, #0x6                   	// #6
 100:	mov	x0, x20
 104:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
 108:	add	w8, w22, #0x1
 10c:	cmp	w8, w19
 110:	b.eq	15c <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x15c>  // b.none
 114:	ldr	x9, [x21, #8]
 118:	mov	w22, w8
 11c:	cmp	x9, x22
 120:	b.ls	170 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x170>  // b.plast
 124:	ldr	x8, [x21]
 128:	ldr	w23, [x8, x22, lsl #2]
 12c:	cmp	w23, #0x20
 130:	b.cc	f8 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xf8>  // b.lo, b.ul, b.last
 134:	mov	w1, #0x20                  	// #32
 138:	bfxil	w1, w23, #0, #5
 13c:	mov	w2, #0x6                   	// #6
 140:	mov	x0, x20
 144:	bl	0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
 148:	lsr	w1, w23, #5
 14c:	cmp	w23, #0x3ff
 150:	mov	w23, w1
 154:	b.hi	134 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0x134>  // b.pmore
 158:	b	fc <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j+0xfc>
 15c:	ldp	x20, x19, [sp, #48]
 160:	ldp	x22, x21, [sp, #32]
 164:	ldr	x23, [sp, #16]
 168:	ldp	x29, x30, [sp], #64
 16c:	ret
 170:	adrp	x0, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
 174:	adrp	x1, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
 178:	adrp	x3, 0 <_ZN4llvm15BitstreamWriter10EmitRecordINS_8ArrayRefIjEEEEvjRKT_j>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0xfa                  	// #250
 18c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE>:
   0:	ldrb	w8, [x1, #12]
   4:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE+0x24>
   8:	ldrb	w8, [x0, #12]
   c:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIjE7compareERKNS0_18GenericOptionValueE+0x24>
  10:	ldr	w8, [x0, #8]
  14:	ldr	w9, [x1, #8]
  18:	cmp	w8, w9
  1c:	cset	w0, ne  // ne = any
  20:	ret
  24:	mov	w0, wzr
  28:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKjEN4llvm2cl3optIjLb0ENS4_6parserIjEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKjEN4llvm2cl3optIjLb0ENS4_6parserIjEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIjLb0ENS2_6parserIjEEEUlRKjE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIjLb0ENS2_6parserIjEEEUlRKjE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIjLb0ENS2_6parserIjEEEUlRKjE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE>:
   0:	ldrb	w8, [x1, #9]
   4:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
   8:	ldrb	w8, [x0, #9]
   c:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
  10:	ldrb	w8, [x0, #8]
  14:	ldrb	w9, [x1, #8]
  18:	cmp	w8, w9
  1c:	cset	w0, ne  // ne = any
  20:	ret
  24:	mov	w0, wzr
  28:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev>:
   0:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	mov	x8, x0
   4:	ldr	x0, [x0, #16]
   8:	add	x8, x8, #0x20
   c:	cmp	x0, x8
  10:	b.eq	18 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x18>  // b.none
  14:	b	0 <free>
  18:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	cbz	x0, 8 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv+0x8>
   4:	b	0 <_ZdlPv>
   8:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>
  10:	ldr	x8, [x8]
  14:	mov	x19, x0
  18:	cmp	x1, x8
  1c:	b.eq	2c <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x2c>  // b.none
  20:	mov	x0, x1
  24:	bl	0 <_ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info>
  28:	tbz	w0, #0, 34 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x34>
  2c:	add	x0, x19, #0x10
  30:	b	38 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x38>
  34:	mov	x0, xzr
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_BitcodeWriter.cpp>:
   0:	stp	d9, d8, [sp, #-64]!
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	adrp	x19, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  18:	add	x19, x19, #0x0
  1c:	adrp	x21, 0 <_ZN4llvm2cl15GeneralCategoryE>
  20:	adrp	x9, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  24:	ldr	x21, [x21]
  28:	ldr	x9, [x9]
  2c:	ldrh	w10, [x19, #10]
  30:	adrp	x8, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  34:	movi	v0.2d, #0x0
  38:	ldr	d9, [x8]
  3c:	and	w10, w10, #0x8000
  40:	mov	x8, x19
  44:	strh	w10, [x19, #10]
  48:	add	x10, x19, #0x80
  4c:	add	x9, x9, #0x10
  50:	strh	wzr, [x19, #8]
  54:	stur	q0, [x19, #12]
  58:	stur	q0, [x19, #28]
  5c:	stur	q0, [x19, #44]
  60:	str	wzr, [x19, #60]
  64:	str	x21, [x8, #80]!
  68:	stp	xzr, x10, [x19, #88]
  6c:	str	x10, [x19, #104]
  70:	str	x9, [x19, #144]
  74:	adrp	x9, 0 <_ZTVN4llvm2cl3optIjLb0ENS0_6parserIjEEEE>
  78:	ldr	x9, [x9]
  7c:	adrp	x1, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  80:	movi	v8.2s, #0x1
  84:	mov	w22, #0x1                   	// #1
  88:	add	x9, x9, #0x10
  8c:	str	x9, [x19]
  90:	adrp	x9, 0 <_ZTVN4llvm2cl6parserIjEE>
  94:	ldr	x9, [x9]
  98:	str	x8, [x19, #64]
  9c:	adrp	x8, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  a0:	add	x8, x8, #0x0
  a4:	add	x9, x9, #0x10
  a8:	str	x9, [x19, #160]
  ac:	adrp	x9, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  b0:	add	x9, x9, #0x0
  b4:	add	x1, x1, #0x0
  b8:	mov	w2, #0x19                  	// #25
  bc:	mov	x0, x19
  c0:	str	d9, [x19, #112]
  c4:	str	wzr, [x19, #120]
  c8:	str	d8, [x19, #72]
  cc:	str	wzr, [x19, #136]
  d0:	strb	w22, [x19, #156]
  d4:	str	wzr, [x19, #152]
  d8:	stp	x8, x9, [x19, #184]
  dc:	mov	w20, #0x19                  	// #25
  e0:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
  e4:	ldrh	w8, [x19, #10]
  e8:	adrp	x9, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
  ec:	add	x9, x9, #0x0
  f0:	mov	w10, #0x47                  	// #71
  f4:	and	w8, w8, #0xffffffbf
  f8:	orr	w8, w8, #0x20
  fc:	mov	x0, x19
 100:	str	w20, [x19, #136]
 104:	strb	w22, [x19, #156]
 108:	str	w20, [x19, #152]
 10c:	strh	w8, [x19, #10]
 110:	stp	x9, x10, [x19, #32]
 114:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 118:	adrp	x20, 0 <__dso_handle>
 11c:	adrp	x0, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 120:	add	x20, x20, #0x0
 124:	add	x0, x0, #0x0
 128:	mov	x1, x19
 12c:	mov	x2, x20
 130:	bl	0 <__cxa_atexit>
 134:	adrp	x19, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 138:	add	x19, x19, #0x0
 13c:	ldrh	w8, [x19, #10]
 140:	movi	v0.2d, #0x0
 144:	add	x9, x19, #0x80
 148:	strh	wzr, [x19, #8]
 14c:	and	w8, w8, #0x8000
 150:	strh	w8, [x19, #10]
 154:	mov	x8, x19
 158:	stur	q0, [x19, #12]
 15c:	stur	q0, [x19, #28]
 160:	stur	q0, [x19, #44]
 164:	str	wzr, [x19, #60]
 168:	str	x21, [x8, #80]!
 16c:	stp	xzr, x9, [x19, #88]
 170:	str	x9, [x19, #104]
 174:	adrp	x9, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 178:	ldr	x9, [x9]
 17c:	adrp	x10, 0 <_ZTVN4llvm2cl6parserIbEE>
 180:	adrp	x1, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 184:	add	x1, x1, #0x0
 188:	add	x9, x9, #0x10
 18c:	str	x9, [x19, #144]
 190:	adrp	x9, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
 194:	ldr	x9, [x9]
 198:	strb	w22, [x19, #153]
 19c:	ldr	x10, [x10]
 1a0:	mov	w2, #0x16                  	// #22
 1a4:	add	x9, x9, #0x10
 1a8:	str	x9, [x19]
 1ac:	add	x10, x10, #0x10
 1b0:	adrp	x9, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 1b4:	str	x10, [x19, #160]
 1b8:	adrp	x10, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 1bc:	add	x9, x9, #0x0
 1c0:	add	x10, x10, #0x0
 1c4:	mov	x0, x19
 1c8:	str	d9, [x19, #112]
 1cc:	str	wzr, [x19, #120]
 1d0:	str	d8, [x19, #72]
 1d4:	strb	wzr, [x19, #136]
 1d8:	strb	wzr, [x19, #152]
 1dc:	str	x8, [x19, #64]
 1e0:	stp	x10, x9, [x19, #184]
 1e4:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 1e8:	ldrh	w8, [x19, #10]
 1ec:	adrp	x10, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 1f0:	mov	w9, #0x100                 	// #256
 1f4:	add	x10, x10, #0x0
 1f8:	and	w8, w8, #0xffffffbf
 1fc:	mov	w11, #0x33                  	// #51
 200:	orr	w8, w8, #0x20
 204:	mov	x0, x19
 208:	strb	wzr, [x19, #136]
 20c:	strh	w9, [x19, #152]
 210:	strh	w8, [x19, #10]
 214:	stp	x10, x11, [x19, #32]
 218:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 21c:	mov	x1, x19
 220:	mov	x2, x20
 224:	ldp	x20, x19, [sp, #48]
 228:	ldp	x22, x21, [sp, #32]
 22c:	ldp	x29, x30, [sp, #16]
 230:	adrp	x0, 0 <_GLOBAL__sub_I_BitcodeWriter.cpp>
 234:	add	x0, x0, #0x0
 238:	ldp	d9, d8, [sp], #64
 23c:	b	0 <__cxa_atexit>

BitcodeWriterPass.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldrb	w9, [x0, #9]
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	mov	x19, x8
  20:	cbz	w9, 38 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0x38>
  24:	mov	x0, x2
  28:	mov	x1, x20
  2c:	bl	0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  30:	mov	x3, x0
  34:	b	3c <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE+0x3c>
  38:	mov	x3, xzr
  3c:	ldr	x1, [x21]
  40:	ldrb	w2, [x21, #8]
  44:	ldrb	w4, [x21, #10]
  48:	mov	x0, x20
  4c:	mov	x5, xzr
  50:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
  54:	adrp	x8, 0 <_ZN4llvm17PreservedAnalyses14AllAnalysesKeyE>
  58:	ldr	x8, [x8]
  5c:	mov	x9, x19
  60:	ldr	x21, [sp, #16]
  64:	str	x8, [x9, #40]!
  68:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  6c:	ldr	d0, [x8]
  70:	add	x8, x19, #0x60
  74:	stp	xzr, x8, [x19, #56]
  78:	str	x8, [x19, #72]
  7c:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  80:	str	d0, [x19, #80]
  84:	ldr	d0, [x8]
  88:	mov	w8, #0x1                   	// #1
  8c:	str	wzr, [x19, #32]
  90:	str	wzr, [x19, #88]
  94:	stp	x9, x9, [x19, #8]
  98:	str	d0, [x19, #24]
  9c:	str	x8, [x19]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret

00000000000000ac <_ZN4llvm30initializeWriteBitcodePassPassERNS_12PassRegistryE>:
  ac:	sub	sp, sp, #0x30
  b0:	stp	x29, x30, [sp, #32]
  b4:	add	x29, sp, #0x20
  b8:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
  bc:	add	x8, x8, #0x0
  c0:	add	x9, sp, #0x8
  c4:	stp	x0, x8, [sp, #8]
  c8:	str	x9, [sp, #24]
  cc:	adrp	x0, 0 <_ZSt15__once_callable>
  d0:	ldr	x1, [x0]
  d4:	add	x0, x0, #0x0
  d8:	blr	x1
  dc:	mrs	x8, tpidr_el0
  e0:	add	x9, sp, #0x10
  e4:	str	x9, [x8, x0]
  e8:	adrp	x0, 0 <_ZSt11__once_call>
  ec:	ldr	x1, [x0]
  f0:	add	x0, x0, #0x0
  f4:	blr	x1
  f8:	adrp	x10, 0 <__pthread_key_create>
  fc:	ldr	x10, [x10]
 100:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 104:	add	x9, x9, #0x0
 108:	str	x9, [x8, x0]
 10c:	cbz	x10, 134 <_ZN4llvm30initializeWriteBitcodePassPassERNS_12PassRegistryE+0x88>
 110:	adrp	x1, 0 <__once_proxy>
 114:	ldr	x1, [x1]
 118:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 11c:	add	x0, x0, #0x0
 120:	bl	0 <pthread_once>
 124:	cbnz	w0, 138 <_ZN4llvm30initializeWriteBitcodePassPassERNS_12PassRegistryE+0x8c>
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x30
 130:	ret
 134:	mov	w0, #0xffffffff            	// #-1
 138:	bl	0 <_ZSt20__throw_system_errori>

000000000000013c <_ZL34initializeWriteBitcodePassPassOnceRN4llvm12PassRegistryE>:
 13c:	stp	x29, x30, [sp, #-32]!
 140:	stp	x20, x19, [sp, #16]
 144:	mov	x29, sp
 148:	mov	x19, x0
 14c:	bl	0 <_ZN4llvm43initializeModuleSummaryIndexWrapperPassPassERNS_12PassRegistryE>
 150:	mov	w0, #0x50                  	// #80
 154:	bl	0 <_Znwm>
 158:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 15c:	adrp	x10, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 160:	add	x8, x8, #0x0
 164:	mov	w9, #0xd                   	// #13
 168:	add	x10, x10, #0x0
 16c:	adrp	x11, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 170:	stp	x8, x9, [x0]
 174:	stp	x10, x9, [x0, #16]
 178:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 17c:	mov	x20, x0
 180:	add	x11, x11, #0x0
 184:	mov	w8, #0x100                 	// #256
 188:	add	x9, x9, #0x0
 18c:	strb	wzr, [x0, #42]
 190:	stp	xzr, xzr, [x0, #48]
 194:	str	x11, [x0, #32]
 198:	strh	w8, [x0, #40]
 19c:	stp	xzr, x9, [x0, #64]
 1a0:	mov	w2, #0x1                   	// #1
 1a4:	mov	x0, x19
 1a8:	mov	x1, x20
 1ac:	bl	0 <_ZN4llvm12PassRegistry12registerPassERKNS_8PassInfoEb>
 1b0:	mov	x0, x20
 1b4:	ldp	x20, x19, [sp, #16]
 1b8:	ldp	x29, x30, [sp], #32
 1bc:	ret

00000000000001c0 <_ZN4llvm23createBitcodeWriterPassERNS_11raw_ostreamEbbb>:
 1c0:	sub	sp, sp, #0x50
 1c4:	stp	x29, x30, [sp, #16]
 1c8:	str	x23, [sp, #32]
 1cc:	stp	x22, x21, [sp, #48]
 1d0:	stp	x20, x19, [sp, #64]
 1d4:	add	x29, sp, #0x10
 1d8:	mov	x23, x0
 1dc:	mov	w0, #0x30                  	// #48
 1e0:	mov	w20, w3
 1e4:	mov	w21, w2
 1e8:	mov	w22, w1
 1ec:	bl	0 <_Znwm>
 1f0:	adrp	x11, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 1f4:	adrp	x13, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 1f8:	and	w8, w22, #0x1
 1fc:	and	w9, w21, #0x1
 200:	and	w10, w20, #0x1
 204:	add	x11, x11, #0x0
 208:	mov	w12, #0x4                   	// #4
 20c:	add	x13, x13, #0x0
 210:	mov	x19, x0
 214:	str	x23, [x0, #32]
 218:	stp	xzr, x11, [x0, #8]
 21c:	str	w12, [x0, #24]
 220:	str	x13, [x0]
 224:	strb	w8, [x0, #40]
 228:	strb	w9, [x0, #41]
 22c:	strb	w10, [x0, #42]
 230:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 234:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 238:	add	x8, x8, #0x0
 23c:	add	x9, x29, #0x18
 240:	str	x0, [x29, #24]
 244:	stp	x8, x9, [sp]
 248:	adrp	x0, 0 <_ZSt15__once_callable>
 24c:	ldr	x1, [x0]
 250:	add	x0, x0, #0x0
 254:	blr	x1
 258:	mrs	x8, tpidr_el0
 25c:	mov	x9, sp
 260:	str	x9, [x8, x0]
 264:	adrp	x0, 0 <_ZSt11__once_call>
 268:	ldr	x1, [x0]
 26c:	add	x0, x0, #0x0
 270:	blr	x1
 274:	adrp	x10, 0 <__pthread_key_create>
 278:	ldr	x10, [x10]
 27c:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 280:	add	x9, x9, #0x0
 284:	str	x9, [x8, x0]
 288:	cbz	x10, 2c0 <_ZN4llvm23createBitcodeWriterPassERNS_11raw_ostreamEbbb+0x100>
 28c:	adrp	x1, 0 <__once_proxy>
 290:	ldr	x1, [x1]
 294:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 298:	add	x0, x0, #0x0
 29c:	bl	0 <pthread_once>
 2a0:	cbnz	w0, 2c4 <_ZN4llvm23createBitcodeWriterPassERNS_11raw_ostreamEbbb+0x104>
 2a4:	mov	x0, x19
 2a8:	ldp	x20, x19, [sp, #64]
 2ac:	ldp	x22, x21, [sp, #48]
 2b0:	ldr	x23, [sp, #32]
 2b4:	ldp	x29, x30, [sp, #16]
 2b8:	add	sp, sp, #0x50
 2bc:	ret
 2c0:	mov	w0, #0xffffffff            	// #-1
 2c4:	bl	0 <_ZSt20__throw_system_errori>

00000000000002c8 <_ZN4llvm19isBitcodeWriterPassEPNS_4PassE>:
 2c8:	ldr	x8, [x0, #16]
 2cc:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 2d0:	add	x9, x9, #0x0
 2d4:	cmp	x8, x9
 2d8:	cset	w0, eq  // eq = none
 2dc:	ret

00000000000002e0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_116WriteBitcodePassEEEPNS_4PassEv>:
 2e0:	sub	sp, sp, #0x30
 2e4:	stp	x29, x30, [sp, #16]
 2e8:	str	x19, [sp, #32]
 2ec:	add	x29, sp, #0x10
 2f0:	mov	w0, #0x30                  	// #48
 2f4:	bl	0 <_Znwm>
 2f8:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 2fc:	adrp	x10, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 300:	add	x8, x8, #0x0
 304:	mov	w9, #0x4                   	// #4
 308:	add	x10, x10, #0x0
 30c:	mov	x19, x0
 310:	stp	xzr, x8, [x0, #8]
 314:	str	w9, [x0, #24]
 318:	str	x10, [x0]
 31c:	bl	0 <_ZN4llvm4dbgsEv>
 320:	str	x0, [x19, #32]
 324:	bl	0 <_ZN4llvm12PassRegistry15getPassRegistryEv>
 328:	adrp	x8, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 32c:	add	x8, x8, #0x0
 330:	add	x9, x29, #0x18
 334:	str	x0, [x29, #24]
 338:	stp	x8, x9, [sp]
 33c:	adrp	x0, 0 <_ZSt15__once_callable>
 340:	ldr	x1, [x0]
 344:	add	x0, x0, #0x0
 348:	blr	x1
 34c:	mrs	x8, tpidr_el0
 350:	mov	x9, sp
 354:	str	x9, [x8, x0]
 358:	adrp	x0, 0 <_ZSt11__once_call>
 35c:	ldr	x1, [x0]
 360:	add	x0, x0, #0x0
 364:	blr	x1
 368:	adrp	x10, 0 <__pthread_key_create>
 36c:	ldr	x10, [x10]
 370:	adrp	x9, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 374:	add	x9, x9, #0x0
 378:	str	x9, [x8, x0]
 37c:	cbz	x10, 3ac <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_116WriteBitcodePassEEEPNS_4PassEv+0xcc>
 380:	adrp	x1, 0 <__once_proxy>
 384:	ldr	x1, [x1]
 388:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 38c:	add	x0, x0, #0x0
 390:	bl	0 <pthread_once>
 394:	cbnz	w0, 3b0 <_ZN4llvm15callDefaultCtorIN12_GLOBAL__N_116WriteBitcodePassEEEPNS_4PassEv+0xd0>
 398:	mov	x0, x19
 39c:	ldr	x19, [sp, #32]
 3a0:	ldp	x29, x30, [sp, #16]
 3a4:	add	sp, sp, #0x30
 3a8:	ret
 3ac:	mov	w0, #0xffffffff            	// #-1
 3b0:	bl	0 <_ZSt20__throw_system_errori>

00000000000003b4 <_ZN12_GLOBAL__N_116WriteBitcodePassD0Ev>:
 3b4:	stp	x29, x30, [sp, #-32]!
 3b8:	str	x19, [sp, #16]
 3bc:	mov	x29, sp
 3c0:	mov	x19, x0
 3c4:	bl	0 <_ZN4llvm10ModulePassD2Ev>
 3c8:	mov	x0, x19
 3cc:	ldr	x19, [sp, #16]
 3d0:	ldp	x29, x30, [sp], #32
 3d4:	b	0 <_ZdlPv>

00000000000003d8 <_ZNK12_GLOBAL__N_116WriteBitcodePass11getPassNameEv>:
 3d8:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 3dc:	add	x0, x0, #0x0
 3e0:	mov	w1, #0xe                   	// #14
 3e4:	ret

00000000000003e8 <_ZNK12_GLOBAL__N_116WriteBitcodePass16getAnalysisUsageERN4llvm13AnalysisUsageE>:
 3e8:	mov	w8, #0x1                   	// #1
 3ec:	strb	w8, [x1, #160]
 3f0:	ldrb	w8, [x0, #41]
 3f4:	cbz	w8, 40c <_ZNK12_GLOBAL__N_116WriteBitcodePass16getAnalysisUsageERN4llvm13AnalysisUsageE+0x24>
 3f8:	adrp	x8, 0 <_ZN4llvm29ModuleSummaryIndexWrapperPass2IDE>
 3fc:	ldr	x8, [x8]
 400:	mov	x0, x1
 404:	mov	x1, x8
 408:	b	0 <_ZN4llvm13AnalysisUsage13addRequiredIDERc>
 40c:	ret

0000000000000410 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE>:
 410:	stp	x29, x30, [sp, #-32]!
 414:	stp	x20, x19, [sp, #16]
 418:	mov	x29, sp
 41c:	ldrb	w8, [x0, #41]
 420:	mov	x20, x0
 424:	mov	x19, x1
 428:	cbz	w8, 494 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0x84>
 42c:	ldr	x9, [x20, #8]
 430:	cbz	x9, 4e0 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0xd0>
 434:	ldr	x8, [x9]
 438:	ldr	x9, [x9, #8]
 43c:	cmp	x8, x9
 440:	b.eq	4c0 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0xb0>  // b.none
 444:	adrp	x10, 0 <_ZN4llvm29ModuleSummaryIndexWrapperPass2IDE>
 448:	ldr	x10, [x10]
 44c:	mov	x0, xzr
 450:	ldp	x11, x12, [x8]
 454:	cmp	x11, x10
 458:	csel	x0, x12, x0, eq  // eq = none
 45c:	b.eq	46c <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0x5c>  // b.none
 460:	add	x8, x8, #0x10
 464:	cmp	x8, x9
 468:	b.ne	450 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0x40>  // b.any
 46c:	cbz	x0, 4c0 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0xb0>
 470:	ldr	x8, [x0]
 474:	adrp	x1, 0 <_ZN4llvm29ModuleSummaryIndexWrapperPass2IDE>
 478:	ldr	x8, [x8, #96]
 47c:	ldr	x1, [x1]
 480:	blr	x8
 484:	ldrb	w8, [x0, #472]
 488:	cbz	w8, 500 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0xf0>
 48c:	add	x3, x0, #0x20
 490:	b	498 <_ZN12_GLOBAL__N_116WriteBitcodePass11runOnModuleERN4llvm6ModuleE+0x88>
 494:	mov	x3, xzr
 498:	ldr	x1, [x20, #32]
 49c:	ldrb	w2, [x20, #40]
 4a0:	ldrb	w4, [x20, #42]
 4a4:	mov	x0, x19
 4a8:	mov	x5, xzr
 4ac:	bl	0 <_ZN4llvm18WriteBitcodeToFileERKNS_6ModuleERNS_11raw_ostreamEbPKNS_18ModuleSummaryIndexEbPSt5arrayIjLm5EE>
 4b0:	ldp	x20, x19, [sp, #16]
 4b4:	mov	w0, wzr
 4b8:	ldp	x29, x30, [sp], #32
 4bc:	ret
 4c0:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 4c4:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 4c8:	adrp	x3, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 4cc:	add	x0, x0, #0x0
 4d0:	add	x1, x1, #0x0
 4d4:	add	x3, x3, #0x0
 4d8:	mov	w2, #0xeb                  	// #235
 4dc:	bl	0 <__assert_fail>
 4e0:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 4e4:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 4e8:	adrp	x3, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 4ec:	add	x0, x0, #0x0
 4f0:	add	x1, x1, #0x0
 4f4:	add	x3, x3, #0x0
 4f8:	mov	w2, #0xdd                  	// #221
 4fc:	bl	0 <__assert_fail>
 500:	adrp	x0, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 504:	adrp	x1, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 508:	adrp	x3, 0 <_ZN4llvm17BitcodeWriterPass3runERNS_6ModuleERNS_15AnalysisManagerIS1_JEEE>
 50c:	add	x0, x0, #0x0
 510:	add	x1, x1, #0x0
 514:	add	x3, x3, #0x0
 518:	mov	w2, #0x49                  	// #73
 51c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_:

0000000000000000 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w10, [x0, #24]
   c:	cbz	w10, b0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_+0xb0>
  10:	adrp	x8, 0 <_ZN4llvm26ModuleSummaryIndexAnalysis3KeyE>
  14:	ldr	x8, [x8]
  18:	orr	x9, x8, #0x8
  1c:	cmn	x9, #0x8
  20:	b.eq	90 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_+0x90>  // b.none
  24:	ldr	x9, [x0, #8]
  28:	ubfx	x11, x8, #4, #28
  2c:	sub	w10, w10, #0x1
  30:	eor	w11, w11, w8, lsr #9
  34:	and	w11, w10, w11
  38:	lsl	x12, x11, #4
  3c:	ldr	x12, [x9, x12]
  40:	mov	x2, x1
  44:	cmp	x12, x8
  48:	b.ne	64 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_+0x64>  // b.any
  4c:	adrp	x1, 0 <_ZN4llvm26ModuleSummaryIndexAnalysis3KeyE>
  50:	ldr	x1, [x1]
  54:	bl	0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE13getResultImplEPNS_11AnalysisKeyERS1_>
  58:	add	x0, x0, #0x8
  5c:	ldp	x29, x30, [sp], #16
  60:	ret
  64:	mov	w13, #0x1                   	// #1
  68:	cmn	x12, #0x8
  6c:	b.eq	b0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_+0xb0>  // b.none
  70:	add	w11, w11, w13
  74:	and	w11, w11, w10
  78:	lsl	x12, x11, #4
  7c:	ldr	x12, [x9, x12]
  80:	add	w13, w13, #0x1
  84:	cmp	x12, x8
  88:	b.eq	4c <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_+0x4c>  // b.none
  8c:	b	68 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_+0x68>
  90:	adrp	x0, 0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>
  94:	adrp	x1, 0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>
  98:	adrp	x3, 0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>
  9c:	add	x0, x0, #0x0
  a0:	add	x1, x1, #0x0
  a4:	add	x3, x3, #0x0
  a8:	mov	w2, #0x252                 	// #594
  ac:	bl	0 <__assert_fail>
  b0:	adrp	x0, 0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>
  b4:	adrp	x1, 0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>
  b8:	adrp	x3, 0 <_ZN4llvm15AnalysisManagerINS_6ModuleEJEE9getResultINS_26ModuleSummaryIndexAnalysisEEERNT_6ResultERS1_>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x30b                 	// #779
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm4Pass16doInitializationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass16doInitializationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm4Pass14doFinalizationERNS_6ModuleE:

0000000000000000 <_ZN4llvm4Pass14doFinalizationERNS_6ModuleE>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv:

0000000000000000 <_ZZSt9call_onceIRFPvRN4llvm12PassRegistryEEJSt17reference_wrapperIS2_EEEvRSt9once_flagOT_DpOT0_ENUlvE0_8__invokeEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZSt15__once_callable>
   c:	ldr	x1, [x0]
  10:	add	x0, x0, #0x0
  14:	blr	x1
  18:	mrs	x8, tpidr_el0
  1c:	ldr	x8, [x8, x0]
  20:	ldp	x1, x9, [x8]
  24:	ldr	x0, [x9]
  28:	ldp	x29, x30, [sp], #16
  2c:	br	x1

ValueEnumerator.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>:
       0:	sub	sp, sp, #0x140
       4:	stp	x29, x30, [sp, #224]
       8:	stp	x28, x27, [sp, #240]
       c:	stp	x26, x25, [sp, #256]
      10:	stp	x24, x23, [sp, #272]
      14:	stp	x22, x21, [sp, #288]
      18:	stp	x20, x19, [sp, #304]
      1c:	add	x29, sp, #0xe0
      20:	adrp	x10, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
      24:	ldr	d1, [x10]
      28:	movi	v0.2d, #0x0
      2c:	mov	x9, x0
      30:	str	xzr, [x0, #128]
      34:	str	q0, [x0, #112]
      38:	str	wzr, [x9, #144]!
      3c:	and	w8, w2, #0x1
      40:	add	x10, x0, #0x108
      44:	stp	xzr, x9, [x0, #152]
      48:	stp	x9, xzr, [x0, #168]
      4c:	mov	w9, #0xffffffff            	// #-1
      50:	mov	x25, x1
      54:	mov	x19, x0
      58:	stp	q0, q0, [x0]
      5c:	str	q0, [x0, #32]
      60:	str	wzr, [x0, #48]
      64:	stur	q0, [x0, #56]
      68:	stur	q0, [x0, #72]
      6c:	stur	q0, [x0, #88]
      70:	str	wzr, [x0, #104]
      74:	str	xzr, [x0, #288]
      78:	str	q0, [x10]
      7c:	str	w9, [x0, #304]
      80:	add	x9, x0, #0x168
      84:	strb	w8, [x0, #320]
      88:	add	x8, x0, #0x21c
      8c:	str	d1, [x0, #296]
      90:	movi	v1.2d, #0x0
      94:	str	wzr, [x0, #280]
      98:	stur	q0, [x0, #248]
      9c:	stur	q0, [x0, #232]
      a0:	stur	q0, [x0, #216]
      a4:	stur	q0, [x0, #200]
      a8:	stur	q0, [x0, #184]
      ac:	str	xzr, [x0, #528]
      b0:	str	q0, [x0, #512]
      b4:	str	d1, [x8]
      b8:	stp	xzr, xzr, [x0, #336]
      bc:	str	wzr, [x0, #352]
      c0:	str	xzr, [x0, #328]
      c4:	stp	q0, q0, [x9]
      c8:	str	q0, [x9, #32]
      cc:	str	wzr, [x9, #48]
      d0:	stp	q0, q0, [x0, #416]
      d4:	str	q0, [x0, #448]
      d8:	str	wzr, [x0, #464]
      dc:	stp	xzr, xzr, [x0, #472]
      e0:	str	wzr, [x0, #496]
      e4:	str	xzr, [x0, #488]
      e8:	tbz	w2, #0, b20 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb20>
      ec:	str	xzr, [sp, #80]
      f0:	stp	xzr, xzr, [sp, #56]
      f4:	str	xzr, [sp, #48]
      f8:	str	wzr, [sp, #72]
      fc:	ldr	x20, [x25, #16]
     100:	add	x26, x25, #0x8
     104:	b	118 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x118>
     108:	ldur	x0, [x21, #-24]
     10c:	add	x1, sp, #0x30
     110:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     114:	ldr	x20, [x20, #8]
     118:	cmp	x26, x20
     11c:	b.eq	18c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x18c>  // b.none
     120:	ldrb	w8, [x20]
     124:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     128:	sub	x8, x20, #0x38
     12c:	cmp	x20, #0x0
     130:	csel	x21, xzr, x8, eq  // eq = none
     134:	mov	x0, x21
     138:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     13c:	tbnz	w0, #0, 114 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x114>
     140:	mov	x0, x21
     144:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     148:	tbnz	w0, #0, 16c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x16c>
     14c:	ldur	x8, [x21, #-24]
     150:	cbz	x8, 1400 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1400>
     154:	ldrb	w8, [x8, #16]
     158:	cmp	w8, #0x4
     15c:	b.cc	114 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x114>  // b.lo, b.ul, b.last
     160:	mov	x0, x21
     164:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     168:	tbz	w0, #0, 108 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x108>
     16c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     170:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     174:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     178:	add	x0, x0, #0x0
     17c:	add	x1, x1, #0x0
     180:	add	x3, x3, #0x0
     184:	mov	w2, #0x89                  	// #137
     188:	bl	0 <__assert_fail>
     18c:	ldr	x20, [x25, #48]
     190:	add	x28, x25, #0x28
     194:	b	19c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x19c>
     198:	ldr	x20, [x20, #8]
     19c:	cmp	x28, x20
     1a0:	b.eq	1e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1e0>  // b.none
     1a4:	ldrb	w8, [x20]
     1a8:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     1ac:	sub	x8, x20, #0x30
     1b0:	cmp	x20, #0x0
     1b4:	csel	x8, xzr, x8, eq  // eq = none
     1b8:	ldur	x0, [x8, #-24]
     1bc:	cbz	x0, 1400 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1400>
     1c0:	ldrb	w8, [x0, #16]
     1c4:	cmp	w8, #0x11
     1c8:	b.cs	d60 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd60>  // b.hs, b.nlast
     1cc:	cmp	w8, #0x4
     1d0:	b.cc	198 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x198>  // b.lo, b.ul, b.last
     1d4:	add	x1, sp, #0x30
     1d8:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     1dc:	b	198 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x198>
     1e0:	ldr	x20, [x25, #64]
     1e4:	add	x27, x25, #0x38
     1e8:	b	1f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1f0>
     1ec:	ldr	x20, [x20, #8]
     1f0:	cmp	x27, x20
     1f4:	b.eq	234 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x234>  // b.none
     1f8:	ldrb	w8, [x20]
     1fc:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     200:	sub	x8, x20, #0x30
     204:	cmp	x20, #0x0
     208:	csel	x8, xzr, x8, eq  // eq = none
     20c:	ldur	x0, [x8, #-24]
     210:	cbz	x0, 1400 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1400>
     214:	ldrb	w8, [x0, #16]
     218:	cmp	w8, #0x11
     21c:	b.cs	d60 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd60>  // b.hs, b.nlast
     220:	cmp	w8, #0x4
     224:	b.cc	1ec <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1ec>  // b.lo, b.ul, b.last
     228:	add	x1, sp, #0x30
     22c:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     230:	b	1ec <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1ec>
     234:	ldr	x20, [x25, #32]
     238:	add	x24, x25, #0x18
     23c:	cmp	x24, x20
     240:	b.eq	31c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x31c>  // b.none
     244:	mov	w21, #0x18                  	// #24
     248:	b	258 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x258>
     24c:	ldr	x20, [x20, #8]
     250:	cmp	x24, x20
     254:	b.eq	2dc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2dc>  // b.none
     258:	ldrb	w8, [x20]
     25c:	tbnz	w8, #2, 1380 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1380>
     260:	sub	x8, x20, #0x38
     264:	cmp	x20, #0x0
     268:	csel	x9, xzr, x8, eq  // eq = none
     26c:	ldr	w8, [x9, #20]
     270:	tbnz	w8, #30, 288 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x288>
     274:	and	w8, w8, #0xfffffff
     278:	mneg	x10, x8, x21
     27c:	add	x22, x9, x10
     280:	cbnz	x8, 294 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x294>
     284:	b	24c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x24c>
     288:	ldur	x22, [x9, #-8]
     28c:	and	x8, x8, #0xfffffff
     290:	cbz	x8, 24c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x24c>
     294:	add	x8, x8, x8, lsl #1
     298:	lsl	x23, x8, #3
     29c:	b	2ac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2ac>
     2a0:	subs	x23, x23, #0x18
     2a4:	add	x22, x22, #0x18
     2a8:	b.eq	24c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x24c>  // b.none
     2ac:	ldr	x0, [x22]
     2b0:	cbz	x0, 1360 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1360>
     2b4:	ldrb	w8, [x0, #16]
     2b8:	cbz	w8, 2a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2a0>
     2bc:	cmp	w8, #0x3
     2c0:	b.eq	2a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2a0>  // b.none
     2c4:	sub	w8, w8, #0x1
     2c8:	cmp	w8, #0x2
     2cc:	b.cc	2a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2a0>  // b.lo, b.ul, b.last
     2d0:	add	x1, sp, #0x30
     2d4:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     2d8:	b	2a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2a0>
     2dc:	ldr	x20, [x25, #32]
     2e0:	ldr	w8, [sp, #64]
     2e4:	cmp	x24, x20
     2e8:	str	w8, [sp, #80]
     2ec:	b.eq	324 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x324>  // b.none
     2f0:	ldrb	w8, [x20]
     2f4:	tbnz	w8, #2, 1380 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1380>
     2f8:	sub	x8, x20, #0x38
     2fc:	cmp	x20, #0x0
     300:	csel	x0, xzr, x8, eq  // eq = none
     304:	add	x1, sp, #0x30
     308:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     30c:	ldr	x20, [x20, #8]
     310:	cmp	x24, x20
     314:	b.ne	2f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x2f0>  // b.any
     318:	b	324 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x324>
     31c:	ldr	w8, [sp, #64]
     320:	str	w8, [sp, #80]
     324:	ldr	x20, [x25, #48]
     328:	cmp	x28, x20
     32c:	b.eq	358 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x358>  // b.none
     330:	ldrb	w8, [x20]
     334:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     338:	sub	x8, x20, #0x30
     33c:	cmp	x20, #0x0
     340:	csel	x0, xzr, x8, eq  // eq = none
     344:	add	x1, sp, #0x30
     348:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     34c:	ldr	x20, [x20, #8]
     350:	cmp	x28, x20
     354:	b.ne	330 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x330>  // b.any
     358:	ldr	x20, [x25, #64]
     35c:	cmp	x27, x20
     360:	b.eq	38c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x38c>  // b.none
     364:	ldrb	w8, [x20]
     368:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     36c:	sub	x8, x20, #0x30
     370:	cmp	x20, #0x0
     374:	csel	x0, xzr, x8, eq  // eq = none
     378:	add	x1, sp, #0x30
     37c:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     380:	ldr	x20, [x20, #8]
     384:	cmp	x27, x20
     388:	b.ne	364 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x364>  // b.any
     38c:	ldr	x20, [x25, #16]
     390:	cmp	x26, x20
     394:	b.eq	3c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3c0>  // b.none
     398:	ldrb	w8, [x20]
     39c:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     3a0:	sub	x8, x20, #0x38
     3a4:	cmp	x20, #0x0
     3a8:	csel	x0, xzr, x8, eq  // eq = none
     3ac:	add	x1, sp, #0x30
     3b0:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     3b4:	ldr	x20, [x20, #8]
     3b8:	cmp	x26, x20
     3bc:	b.ne	398 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x398>  // b.any
     3c0:	ldr	w8, [sp, #64]
     3c4:	stp	x28, x27, [sp, #8]
     3c8:	stp	x26, x25, [sp, #24]
     3cc:	str	x24, [sp, #40]
     3d0:	str	w8, [sp, #84]
     3d4:	ldr	x27, [x25, #32]
     3d8:	cmp	x24, x27
     3dc:	b.eq	600 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x600>  // b.none
     3e0:	mov	w28, #0x18                  	// #24
     3e4:	b	3f4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3f4>
     3e8:	ldr	x27, [x27, #8]
     3ec:	cmp	x24, x27
     3f0:	b.eq	600 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x600>  // b.none
     3f4:	ldrb	w8, [x27]
     3f8:	tbnz	w8, #2, 1380 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1380>
     3fc:	sub	x8, x27, #0x38
     400:	cmp	x27, #0x0
     404:	csel	x21, xzr, x8, eq  // eq = none
     408:	mov	x0, x21
     40c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     410:	tbnz	w0, #0, 3e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3e8>
     414:	ldr	x22, [x21, #80]
     418:	add	x20, x21, #0x48
     41c:	cmp	x20, x22
     420:	b.eq	44c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x44c>  // b.none
     424:	ldrb	w8, [x22]
     428:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
     42c:	sub	x8, x22, #0x18
     430:	cmp	x22, #0x0
     434:	csel	x0, xzr, x8, eq  // eq = none
     438:	add	x1, sp, #0x30
     43c:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     440:	ldr	x22, [x22, #8]
     444:	cmp	x20, x22
     448:	b.ne	424 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x424>  // b.any
     44c:	ldrb	w8, [x21, #18]
     450:	tbnz	w8, #0, 460 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x460>
     454:	ldr	x22, [x21, #88]
     458:	mov	x8, x22
     45c:	b	488 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x488>
     460:	mov	x0, x21
     464:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     468:	ldrb	w8, [x21, #18]
     46c:	ldr	x22, [x21, #88]
     470:	tbnz	w8, #0, 47c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x47c>
     474:	mov	x8, x22
     478:	b	488 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x488>
     47c:	mov	x0, x21
     480:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     484:	ldr	x8, [x21, #88]
     488:	ldr	x9, [x21, #96]
     48c:	mov	w10, #0x28                  	// #40
     490:	madd	x23, x9, x10, x8
     494:	cmp	x23, x22
     498:	b.eq	4b4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4b4>  // b.none
     49c:	add	x1, sp, #0x30
     4a0:	mov	x0, x22
     4a4:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     4a8:	add	x22, x22, #0x28
     4ac:	cmp	x23, x22
     4b0:	b.ne	49c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x49c>  // b.any
     4b4:	ldr	x22, [x21, #80]
     4b8:	cmp	x20, x22
     4bc:	b.ne	4d0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4d0>  // b.any
     4c0:	b	3e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3e8>
     4c4:	ldr	x22, [x22, #8]
     4c8:	cmp	x20, x22
     4cc:	b.eq	590 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x590>  // b.none
     4d0:	ldrb	w8, [x22]
     4d4:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
     4d8:	sub	x8, x22, #0x18
     4dc:	cmp	x22, #0x0
     4e0:	csel	x8, xzr, x8, eq  // eq = none
     4e4:	ldr	x24, [x8, #48]
     4e8:	add	x25, x8, #0x28
     4ec:	b	4f4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4f4>
     4f0:	ldr	x24, [x24, #8]
     4f4:	cmp	x25, x24
     4f8:	b.eq	4c4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4c4>  // b.none
     4fc:	ldrb	w8, [x24]
     500:	tbnz	w8, #2, 1320 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1320>
     504:	sub	x8, x24, #0x18
     508:	cmp	x24, #0x0
     50c:	csel	x9, xzr, x8, eq  // eq = none
     510:	ldr	w8, [x9, #20]
     514:	tbnz	w8, #30, 52c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x52c>
     518:	and	w8, w8, #0xfffffff
     51c:	mneg	x10, x8, x28
     520:	add	x26, x9, x10
     524:	cbnz	x8, 538 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x538>
     528:	b	4f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4f0>
     52c:	ldur	x26, [x9, #-8]
     530:	and	x8, x8, #0xfffffff
     534:	cbz	x8, 4f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4f0>
     538:	add	x8, x8, x8, lsl #1
     53c:	lsl	x23, x8, #3
     540:	b	558 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x558>
     544:	add	x1, sp, #0x30
     548:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     54c:	subs	x23, x23, #0x18
     550:	add	x26, x26, #0x18
     554:	b.eq	4f0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x4f0>  // b.none
     558:	ldr	x0, [x26]
     55c:	ldrb	w8, [x0, #16]
     560:	cmp	w8, #0x10
     564:	b.hi	584 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x584>  // b.pmore
     568:	cbz	w8, 54c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x54c>
     56c:	cmp	w8, #0x3
     570:	b.eq	54c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x54c>  // b.none
     574:	sub	w8, w8, #0x1
     578:	cmp	w8, #0x2
     57c:	b.cs	544 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x544>  // b.hs, b.nlast
     580:	b	54c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x54c>
     584:	cmp	w8, #0x14
     588:	b.eq	544 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x544>  // b.none
     58c:	b	54c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x54c>
     590:	ldr	x21, [x21, #80]
     594:	ldr	x24, [sp, #40]
     598:	cmp	x20, x21
     59c:	b.ne	5b0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x5b0>  // b.any
     5a0:	b	3e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3e8>
     5a4:	ldr	x21, [x21, #8]
     5a8:	cmp	x20, x21
     5ac:	b.eq	3e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x3e8>  // b.none
     5b0:	ldrb	w8, [x21]
     5b4:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
     5b8:	sub	x8, x21, #0x18
     5bc:	cmp	x21, #0x0
     5c0:	csel	x8, xzr, x8, eq  // eq = none
     5c4:	ldr	x22, [x8, #48]
     5c8:	add	x23, x8, #0x28
     5cc:	cmp	x23, x22
     5d0:	b.eq	5a4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x5a4>  // b.none
     5d4:	ldrb	w8, [x22]
     5d8:	tbnz	w8, #2, 1320 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1320>
     5dc:	sub	x8, x22, #0x18
     5e0:	cmp	x22, #0x0
     5e4:	csel	x0, xzr, x8, eq  // eq = none
     5e8:	add	x1, sp, #0x30
     5ec:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
     5f0:	ldr	x22, [x22, #8]
     5f4:	cmp	x23, x22
     5f8:	b.ne	5d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x5d4>  // b.any
     5fc:	b	5a4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x5a4>
     600:	ldr	x8, [sp, #32]
     604:	stp	xzr, xzr, [x29, #-32]
     608:	stur	xzr, [x29, #-16]
     60c:	ldr	x8, [x8, #24]
     610:	and	x27, x8, #0xfffffffffffffff8
     614:	cmp	x24, x27
     618:	b.eq	838 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x838>  // b.none
     61c:	mov	w28, #0x18                  	// #24
     620:	b	638 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x638>
     624:	ldr	x8, [x27]
     628:	ldr	x24, [sp, #40]
     62c:	and	x27, x8, #0xfffffffffffffff8
     630:	cmp	x24, x27
     634:	b.eq	838 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x838>  // b.none
     638:	ldrb	w8, [x27]
     63c:	tbnz	w8, #2, 1440 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1440>
     640:	sub	x8, x27, #0x38
     644:	cmp	x27, #0x0
     648:	csel	x21, xzr, x8, eq  // eq = none
     64c:	mov	x0, x21
     650:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     654:	tbnz	w0, #0, 624 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x624>
     658:	ldr	x22, [x21, #80]
     65c:	add	x20, x21, #0x48
     660:	cmp	x20, x22
     664:	b.eq	698 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x698>  // b.none
     668:	ldrb	w8, [x22]
     66c:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
     670:	sub	x8, x22, #0x18
     674:	cmp	x22, #0x0
     678:	csel	x0, xzr, x8, eq  // eq = none
     67c:	add	x2, sp, #0x30
     680:	sub	x3, x29, #0x20
     684:	mov	x1, x21
     688:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     68c:	ldr	x22, [x22, #8]
     690:	cmp	x20, x22
     694:	b.ne	668 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x668>  // b.any
     698:	ldrb	w8, [x21, #18]
     69c:	tbnz	w8, #0, 6ac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6ac>
     6a0:	ldr	x22, [x21, #88]
     6a4:	mov	x8, x22
     6a8:	b	6d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6d4>
     6ac:	mov	x0, x21
     6b0:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     6b4:	ldrb	w8, [x21, #18]
     6b8:	ldr	x22, [x21, #88]
     6bc:	tbnz	w8, #0, 6c8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6c8>
     6c0:	mov	x8, x22
     6c4:	b	6d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6d4>
     6c8:	mov	x0, x21
     6cc:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
     6d0:	ldr	x8, [x21, #88]
     6d4:	ldr	x9, [x21, #96]
     6d8:	mov	w10, #0x28                  	// #40
     6dc:	madd	x23, x9, x10, x8
     6e0:	cmp	x23, x22
     6e4:	b.eq	708 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x708>  // b.none
     6e8:	add	x2, sp, #0x30
     6ec:	sub	x3, x29, #0x20
     6f0:	mov	x0, x22
     6f4:	mov	x1, x21
     6f8:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     6fc:	add	x22, x22, #0x28
     700:	cmp	x23, x22
     704:	b.ne	6e8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x6e8>  // b.any
     708:	ldr	x22, [x21, #80]
     70c:	cmp	x20, x22
     710:	b.ne	724 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x724>  // b.any
     714:	b	624 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x624>
     718:	ldr	x22, [x22, #8]
     71c:	cmp	x20, x22
     720:	b.eq	7cc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7cc>  // b.none
     724:	ldrb	w8, [x22]
     728:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
     72c:	sub	x8, x22, #0x18
     730:	cmp	x22, #0x0
     734:	csel	x8, xzr, x8, eq  // eq = none
     738:	ldr	x24, [x8, #48]
     73c:	add	x25, x8, #0x28
     740:	b	748 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x748>
     744:	ldr	x24, [x24, #8]
     748:	cmp	x25, x24
     74c:	b.eq	718 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x718>  // b.none
     750:	ldrb	w8, [x24]
     754:	tbnz	w8, #2, 1320 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1320>
     758:	sub	x8, x24, #0x18
     75c:	cmp	x24, #0x0
     760:	csel	x9, xzr, x8, eq  // eq = none
     764:	ldr	w8, [x9, #20]
     768:	tbnz	w8, #30, 780 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x780>
     76c:	and	w8, w8, #0xfffffff
     770:	mneg	x10, x8, x28
     774:	add	x26, x9, x10
     778:	cbnz	x8, 78c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x78c>
     77c:	b	744 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x744>
     780:	ldur	x26, [x9, #-8]
     784:	and	x8, x8, #0xfffffff
     788:	cbz	x8, 744 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x744>
     78c:	add	x8, x8, x8, lsl #1
     790:	lsl	x23, x8, #3
     794:	b	7a4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7a4>
     798:	subs	x23, x23, #0x18
     79c:	add	x26, x26, #0x18
     7a0:	b.eq	744 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x744>  // b.none
     7a4:	ldr	x0, [x26]
     7a8:	ldrb	w8, [x0, #16]
     7ac:	cmp	w8, #0x11
     7b0:	ccmp	w8, #0x14, #0x4, cs  // cs = hs, nlast
     7b4:	b.ne	798 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x798>  // b.any
     7b8:	add	x2, sp, #0x30
     7bc:	sub	x3, x29, #0x20
     7c0:	mov	x1, x21
     7c4:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     7c8:	b	798 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x798>
     7cc:	ldr	x22, [x21, #80]
     7d0:	b	7d8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7d8>
     7d4:	ldr	x22, [x22, #8]
     7d8:	cmp	x20, x22
     7dc:	b.eq	624 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x624>  // b.none
     7e0:	ldrb	w8, [x22]
     7e4:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
     7e8:	sub	x8, x22, #0x18
     7ec:	cmp	x22, #0x0
     7f0:	csel	x8, xzr, x8, eq  // eq = none
     7f4:	ldr	x23, [x8, #48]
     7f8:	add	x24, x8, #0x28
     7fc:	cmp	x24, x23
     800:	b.eq	7d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7d4>  // b.none
     804:	ldrb	w8, [x23]
     808:	tbnz	w8, #2, 1320 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1320>
     80c:	sub	x8, x23, #0x18
     810:	cmp	x23, #0x0
     814:	csel	x0, xzr, x8, eq  // eq = none
     818:	add	x2, sp, #0x30
     81c:	sub	x3, x29, #0x20
     820:	mov	x1, x21
     824:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     828:	ldr	x23, [x23, #8]
     82c:	cmp	x24, x23
     830:	b.ne	804 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x804>  // b.any
     834:	b	7d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x7d4>
     838:	ldp	x22, x25, [sp, #24]
     83c:	ldp	x26, x23, [sp, #8]
     840:	ldr	x20, [x25, #16]
     844:	cmp	x22, x20
     848:	b.eq	87c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x87c>  // b.none
     84c:	ldrb	w8, [x20]
     850:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     854:	sub	x8, x20, #0x38
     858:	cmp	x20, #0x0
     85c:	csel	x0, xzr, x8, eq  // eq = none
     860:	add	x2, sp, #0x30
     864:	sub	x3, x29, #0x20
     868:	mov	x1, xzr
     86c:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     870:	ldr	x20, [x20, #8]
     874:	cmp	x22, x20
     878:	b.ne	84c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x84c>  // b.any
     87c:	ldr	x20, [x25, #32]
     880:	cmp	x24, x20
     884:	b.eq	8b8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x8b8>  // b.none
     888:	ldrb	w8, [x20]
     88c:	tbnz	w8, #2, 1380 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1380>
     890:	sub	x8, x20, #0x38
     894:	cmp	x20, #0x0
     898:	csel	x0, xzr, x8, eq  // eq = none
     89c:	add	x2, sp, #0x30
     8a0:	sub	x3, x29, #0x20
     8a4:	mov	x1, xzr
     8a8:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     8ac:	ldr	x20, [x20, #8]
     8b0:	cmp	x24, x20
     8b4:	b.ne	888 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x888>  // b.any
     8b8:	ldr	x20, [x25, #48]
     8bc:	cmp	x26, x20
     8c0:	b.eq	8f4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x8f4>  // b.none
     8c4:	ldrb	w8, [x20]
     8c8:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     8cc:	sub	x8, x20, #0x30
     8d0:	cmp	x20, #0x0
     8d4:	csel	x0, xzr, x8, eq  // eq = none
     8d8:	add	x2, sp, #0x30
     8dc:	sub	x3, x29, #0x20
     8e0:	mov	x1, xzr
     8e4:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     8e8:	ldr	x20, [x20, #8]
     8ec:	cmp	x26, x20
     8f0:	b.ne	8c4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x8c4>  // b.any
     8f4:	ldr	x20, [x25, #64]
     8f8:	cmp	x23, x20
     8fc:	b.eq	930 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x930>  // b.none
     900:	ldrb	w8, [x20]
     904:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     908:	sub	x8, x20, #0x30
     90c:	cmp	x20, #0x0
     910:	csel	x0, xzr, x8, eq  // eq = none
     914:	add	x2, sp, #0x30
     918:	sub	x3, x29, #0x20
     91c:	mov	x1, xzr
     920:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     924:	ldr	x20, [x20, #8]
     928:	cmp	x23, x20
     92c:	b.ne	900 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x900>  // b.any
     930:	ldr	x20, [x25, #16]
     934:	b	93c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x93c>
     938:	ldr	x20, [x20, #8]
     93c:	cmp	x22, x20
     940:	b.eq	988 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x988>  // b.none
     944:	ldrb	w8, [x20]
     948:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     94c:	sub	x8, x20, #0x38
     950:	cmp	x20, #0x0
     954:	csel	x21, xzr, x8, eq  // eq = none
     958:	mov	x0, x21
     95c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     960:	tbnz	w0, #0, 938 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x938>
     964:	mov	x0, x21
     968:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     96c:	tbnz	w0, #0, 16c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x16c>
     970:	ldur	x0, [x21, #-24]
     974:	add	x2, sp, #0x30
     978:	sub	x3, x29, #0x20
     97c:	mov	x1, xzr
     980:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     984:	b	938 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x938>
     988:	ldr	x20, [x25, #48]
     98c:	b	9a4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9a4>
     990:	add	x2, sp, #0x30
     994:	sub	x3, x29, #0x20
     998:	mov	x1, xzr
     99c:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     9a0:	ldr	x20, [x20, #8]
     9a4:	cmp	x26, x20
     9a8:	b.eq	9d8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9d8>  // b.none
     9ac:	ldrb	w8, [x20]
     9b0:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     9b4:	sub	x8, x20, #0x30
     9b8:	cmp	x20, #0x0
     9bc:	csel	x8, xzr, x8, eq  // eq = none
     9c0:	ldur	x0, [x8, #-24]
     9c4:	cbz	x0, 990 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x990>
     9c8:	ldrb	w8, [x0, #16]
     9cc:	cmp	w8, #0x11
     9d0:	b.cc	990 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x990>  // b.lo, b.ul, b.last
     9d4:	b	d60 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd60>
     9d8:	ldr	x20, [x25, #64]
     9dc:	b	9f4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9f4>
     9e0:	add	x2, sp, #0x30
     9e4:	sub	x3, x29, #0x20
     9e8:	mov	x1, xzr
     9ec:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     9f0:	ldr	x20, [x20, #8]
     9f4:	cmp	x23, x20
     9f8:	b.eq	a28 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa28>  // b.none
     9fc:	ldrb	w8, [x20]
     a00:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     a04:	sub	x8, x20, #0x30
     a08:	cmp	x20, #0x0
     a0c:	csel	x8, xzr, x8, eq  // eq = none
     a10:	ldur	x0, [x8, #-24]
     a14:	cbz	x0, 9e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9e0>
     a18:	ldrb	w8, [x0, #16]
     a1c:	cmp	w8, #0x11
     a20:	b.cc	9e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x9e0>  // b.lo, b.ul, b.last
     a24:	b	d60 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd60>
     a28:	ldr	x20, [x25, #32]
     a2c:	cmp	x24, x20
     a30:	b.eq	aac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xaac>  // b.none
     a34:	mov	w21, #0x18                  	// #24
     a38:	b	a48 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa48>
     a3c:	ldr	x20, [x20, #8]
     a40:	cmp	x24, x20
     a44:	b.eq	aac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xaac>  // b.none
     a48:	ldrb	w8, [x20]
     a4c:	tbnz	w8, #2, 1380 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1380>
     a50:	sub	x8, x20, #0x38
     a54:	cmp	x20, #0x0
     a58:	csel	x9, xzr, x8, eq  // eq = none
     a5c:	ldr	w8, [x9, #20]
     a60:	tbnz	w8, #30, a78 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa78>
     a64:	and	w8, w8, #0xfffffff
     a68:	mneg	x10, x8, x21
     a6c:	add	x22, x9, x10
     a70:	cbnz	x8, a84 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa84>
     a74:	b	a3c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa3c>
     a78:	ldur	x22, [x9, #-8]
     a7c:	and	x8, x8, #0xfffffff
     a80:	cbz	x8, a3c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa3c>
     a84:	add	x8, x8, x8, lsl #1
     a88:	lsl	x23, x8, #3
     a8c:	ldr	x0, [x22], #24
     a90:	add	x2, sp, #0x30
     a94:	sub	x3, x29, #0x20
     a98:	mov	x1, xzr
     a9c:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
     aa0:	subs	x23, x23, #0x18
     aa4:	b.ne	a8c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa8c>  // b.any
     aa8:	b	a3c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xa3c>
     aac:	ldr	x0, [sp, #56]
     ab0:	bl	0 <_ZdlPv>
     ab4:	ldur	q0, [x29, #-32]
     ab8:	ldp	x21, x20, [x19]
     abc:	str	q0, [x19]
     ac0:	ldur	x8, [x29, #-16]
     ac4:	cmp	x20, x21
     ac8:	str	x8, [x19, #16]
     acc:	stp	xzr, xzr, [x29, #-32]
     ad0:	stur	xzr, [x29, #-16]
     ad4:	b.eq	afc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xafc>  // b.none
     ad8:	mov	x22, x21
     adc:	b	aec <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xaec>
     ae0:	add	x22, x22, #0x28
     ae4:	cmp	x20, x22
     ae8:	b.eq	afc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xafc>  // b.none
     aec:	ldr	x0, [x22, #16]
     af0:	cbz	x0, ae0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xae0>
     af4:	bl	0 <_ZdlPv>
     af8:	b	ae0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xae0>
     afc:	cbz	x21, b08 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb08>
     b00:	mov	x0, x21
     b04:	bl	0 <_ZdlPv>
     b08:	ldp	x21, x20, [x29, #-32]
     b0c:	cmp	x21, x20
     b10:	b.ne	cbc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcbc>  // b.any
     b14:	cbz	x21, b20 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb20>
     b18:	mov	x0, x21
     b1c:	bl	0 <_ZdlPv>
     b20:	ldr	x20, [x25, #16]
     b24:	add	x27, x25, #0x8
     b28:	cmp	x27, x20
     b2c:	b.eq	b58 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb58>  // b.none
     b30:	ldrb	w8, [x20]
     b34:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     b38:	sub	x8, x20, #0x38
     b3c:	cmp	x20, #0x0
     b40:	csel	x1, xzr, x8, eq  // eq = none
     b44:	mov	x0, x19
     b48:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     b4c:	ldr	x20, [x20, #8]
     b50:	cmp	x27, x20
     b54:	b.ne	b30 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb30>  // b.any
     b58:	ldr	x20, [x25, #32]
     b5c:	add	x23, x25, #0x18
     b60:	cmp	x23, x20
     b64:	b.eq	ba0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xba0>  // b.none
     b68:	ldrb	w8, [x20]
     b6c:	tbnz	w8, #2, 1380 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1380>
     b70:	sub	x8, x20, #0x38
     b74:	cmp	x20, #0x0
     b78:	csel	x21, xzr, x8, eq  // eq = none
     b7c:	mov	x0, x19
     b80:	mov	x1, x21
     b84:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     b88:	ldr	x1, [x21, #112]
     b8c:	mov	x0, x19
     b90:	bl	17d8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
     b94:	ldr	x20, [x20, #8]
     b98:	cmp	x23, x20
     b9c:	b.ne	b68 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb68>  // b.any
     ba0:	ldr	x20, [x25, #48]
     ba4:	add	x22, x25, #0x28
     ba8:	cmp	x22, x20
     bac:	b.eq	bd8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xbd8>  // b.none
     bb0:	ldrb	w8, [x20]
     bb4:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     bb8:	sub	x8, x20, #0x30
     bbc:	cmp	x20, #0x0
     bc0:	csel	x1, xzr, x8, eq  // eq = none
     bc4:	mov	x0, x19
     bc8:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     bcc:	ldr	x20, [x20, #8]
     bd0:	cmp	x22, x20
     bd4:	b.ne	bb0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xbb0>  // b.any
     bd8:	ldr	x21, [x25, #64]
     bdc:	add	x20, x25, #0x38
     be0:	cmp	x20, x21
     be4:	b.eq	c10 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc10>  // b.none
     be8:	ldrb	w8, [x21]
     bec:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     bf0:	sub	x8, x21, #0x30
     bf4:	cmp	x21, #0x0
     bf8:	csel	x1, xzr, x8, eq  // eq = none
     bfc:	mov	x0, x19
     c00:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     c04:	ldr	x21, [x21, #8]
     c08:	cmp	x20, x21
     c0c:	b.ne	be8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xbe8>  // b.any
     c10:	ldr	x8, [x19, #120]
     c14:	str	x23, [sp, #24]
     c18:	ldr	x23, [x25, #16]
     c1c:	str	x8, [sp, #16]
     c20:	ldr	x8, [x19, #112]
     c24:	cmp	x27, x23
     c28:	str	x8, [sp, #8]
     c2c:	b.eq	ccc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xccc>  // b.none
     c30:	mov	w24, #0xffffffff            	// #-1
     c34:	b	c44 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc44>
     c38:	ldr	x23, [x23, #8]
     c3c:	cmp	x27, x23
     c40:	b.eq	ccc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xccc>  // b.none
     c44:	ldrb	w8, [x23]
     c48:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     c4c:	sub	x8, x23, #0x38
     c50:	cmp	x23, #0x0
     c54:	csel	x21, xzr, x8, eq  // eq = none
     c58:	mov	x0, x21
     c5c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     c60:	tbnz	w0, #0, c7c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc7c>
     c64:	mov	x0, x21
     c68:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     c6c:	tbnz	w0, #0, 16c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x16c>
     c70:	ldur	x1, [x21, #-24]
     c74:	mov	x0, x19
     c78:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     c7c:	ldr	x8, [x21, #72]
     c80:	cbz	x8, c38 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc38>
     c84:	mov	x0, x21
     c88:	str	w24, [sp, #48]
     c8c:	str	x8, [sp, #56]
     c90:	bl	0 <_ZNK4llvm5Value10getContextEv>
     c94:	add	x1, sp, #0x30
     c98:	mov	w2, #0x1                   	// #1
     c9c:	bl	0 <_ZN4llvm13AttributeList3getERNS_11LLVMContextENS_8ArrayRefISt4pairIjNS_12AttributeSetEEEE>
     ca0:	mov	x1, x0
     ca4:	mov	x0, x19
     ca8:	bl	17d8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
     cac:	b	c38 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xc38>
     cb0:	add	x21, x21, #0x28
     cb4:	cmp	x20, x21
     cb8:	b.eq	12d4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x12d4>  // b.none
     cbc:	ldr	x0, [x21, #16]
     cc0:	cbz	x0, cb0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcb0>
     cc4:	bl	0 <_ZdlPv>
     cc8:	b	cb0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcb0>
     ccc:	ldr	x21, [x25, #48]
     cd0:	ldr	x24, [sp, #24]
     cd4:	cmp	x22, x21
     cd8:	b.ne	cf8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcf8>  // b.any
     cdc:	ldr	x21, [x25, #64]
     ce0:	b	d30 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd30>
     ce4:	mov	x0, x19
     ce8:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     cec:	ldr	x21, [x21, #8]
     cf0:	cmp	x22, x21
     cf4:	b.eq	cdc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xcdc>  // b.none
     cf8:	ldrb	w8, [x21]
     cfc:	tbnz	w8, #2, 13c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13c0>
     d00:	sub	x8, x21, #0x30
     d04:	cmp	x21, #0x0
     d08:	csel	x8, xzr, x8, eq  // eq = none
     d0c:	ldur	x1, [x8, #-24]
     d10:	cbz	x1, ce4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xce4>
     d14:	ldrb	w8, [x1, #16]
     d18:	cmp	w8, #0x11
     d1c:	b.cc	ce4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xce4>  // b.lo, b.ul, b.last
     d20:	b	d60 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd60>
     d24:	mov	x0, x19
     d28:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     d2c:	ldr	x21, [x21, #8]
     d30:	cmp	x20, x21
     d34:	b.eq	d80 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd80>  // b.none
     d38:	ldrb	w8, [x21]
     d3c:	tbnz	w8, #2, 13e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13e0>
     d40:	sub	x8, x21, #0x30
     d44:	cmp	x21, #0x0
     d48:	csel	x8, xzr, x8, eq  // eq = none
     d4c:	ldur	x1, [x8, #-24]
     d50:	cbz	x1, d24 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd24>
     d54:	ldrb	w8, [x1, #16]
     d58:	cmp	w8, #0x11
     d5c:	b.cc	d24 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd24>  // b.lo, b.ul, b.last
     d60:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     d64:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     d68:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     d6c:	add	x0, x0, #0x0
     d70:	add	x1, x1, #0x0
     d74:	add	x3, x3, #0x0
     d78:	mov	w2, #0x134                 	// #308
     d7c:	bl	0 <__assert_fail>
     d80:	ldr	x20, [x25, #32]
     d84:	cmp	x24, x20
     d88:	b.eq	dfc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xdfc>  // b.none
     d8c:	mov	w21, #0x18                  	// #24
     d90:	b	da0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xda0>
     d94:	ldr	x20, [x20, #8]
     d98:	cmp	x24, x20
     d9c:	b.eq	dfc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xdfc>  // b.none
     da0:	ldrb	w8, [x20]
     da4:	tbnz	w8, #2, 1380 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1380>
     da8:	sub	x8, x20, #0x38
     dac:	cmp	x20, #0x0
     db0:	csel	x9, xzr, x8, eq  // eq = none
     db4:	ldr	w8, [x9, #20]
     db8:	tbnz	w8, #30, dd0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xdd0>
     dbc:	and	w8, w8, #0xfffffff
     dc0:	mneg	x10, x8, x21
     dc4:	add	x22, x9, x10
     dc8:	cbnz	x8, ddc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xddc>
     dcc:	b	d94 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd94>
     dd0:	ldur	x22, [x9, #-8]
     dd4:	and	x8, x8, #0xfffffff
     dd8:	cbz	x8, d94 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd94>
     ddc:	add	x8, x8, x8, lsl #1
     de0:	lsl	x23, x8, #3
     de4:	ldr	x1, [x22], #24
     de8:	mov	x0, x19
     dec:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     df0:	subs	x23, x23, #0x18
     df4:	b.ne	de4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xde4>  // b.any
     df8:	b	d94 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xd94>
     dfc:	ldr	x0, [x25]
     e00:	bl	0 <_ZN4llvm4Type13getMetadataTyERNS_11LLVMContextE>
     e04:	mov	x1, x0
     e08:	mov	x0, x19
     e0c:	bl	1a08 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
     e10:	ldr	x9, [x25, #120]
     e14:	ldr	w8, [x9, #8]
     e18:	ldr	x9, [x9]
     e1c:	cbz	w8, e48 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe48>
     e20:	add	x10, x9, #0x8
     e24:	mov	x20, x9
     e28:	b	e34 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe34>
     e2c:	mov	x20, x10
     e30:	add	x10, x10, #0x8
     e34:	ldur	x11, [x10, #-8]
     e38:	cbz	x11, e2c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe2c>
     e3c:	cmn	x11, #0x8
     e40:	b.eq	e2c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe2c>  // b.none
     e44:	b	e4c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe4c>
     e48:	mov	x20, x9
     e4c:	add	x21, x9, x8, lsl #3
     e50:	cmp	x21, x20
     e54:	b.eq	e84 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe84>  // b.none
     e58:	ldr	x8, [x20], #8
     e5c:	mov	x0, x19
     e60:	ldr	x1, [x8, #8]
     e64:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
     e68:	b	e70 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe70>
     e6c:	add	x20, x20, #0x8
     e70:	ldr	x8, [x20]
     e74:	cbz	x8, e6c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe6c>
     e78:	cmn	x8, #0x8
     e7c:	b.eq	e6c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe6c>  // b.none
     e80:	b	e50 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe50>
     e84:	ldr	x21, [x25, #80]
     e88:	add	x20, x25, #0x48
     e8c:	b	e94 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe94>
     e90:	ldr	x21, [x21, #8]
     e94:	cmp	x20, x21
     e98:	b.eq	ee4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xee4>  // b.none
     e9c:	ldrb	w8, [x21]
     ea0:	tbnz	w8, #2, 1420 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1420>
     ea4:	mov	x0, x21
     ea8:	bl	0 <_ZNK4llvm11NamedMDNode14getNumOperandsEv>
     eac:	cbz	w0, e90 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe90>
     eb0:	mov	w22, w0
     eb4:	mov	w23, wzr
     eb8:	mov	x0, x21
     ebc:	mov	w1, w23
     ec0:	bl	0 <_ZNK4llvm11NamedMDNode10getOperandEj>
     ec4:	mov	x2, x0
     ec8:	mov	x0, x19
     ecc:	mov	w1, wzr
     ed0:	bl	3ba8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
     ed4:	add	w23, w23, #0x1
     ed8:	cmp	w22, w23
     edc:	b.ne	eb8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xeb8>  // b.any
     ee0:	b	e90 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xe90>
     ee4:	adrp	x8, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
     ee8:	ldr	d0, [x8]
     eec:	add	x8, sp, #0x30
     ef0:	add	x8, x8, #0x10
     ef4:	str	x8, [sp, #48]
     ef8:	str	d0, [sp, #56]
     efc:	ldr	x20, [x25, #16]
     f00:	b	f08 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf08>
     f04:	ldr	x20, [x20, #8]
     f08:	cmp	x27, x20
     f0c:	b.eq	f60 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf60>  // b.none
     f10:	ldrb	w8, [x20]
     f14:	tbnz	w8, #2, 13a0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x13a0>
     f18:	sub	x8, x20, #0x38
     f1c:	cmp	x20, #0x0
     f20:	csel	x0, xzr, x8, eq  // eq = none
     f24:	add	x1, sp, #0x30
     f28:	str	wzr, [sp, #56]
     f2c:	bl	0 <_ZNK4llvm12GlobalObject14getAllMetadataERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
     f30:	ldr	w8, [sp, #56]
     f34:	cbz	w8, f04 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf04>
     f38:	ldr	x9, [sp, #48]
     f3c:	lsl	x21, x8, #4
     f40:	add	x22, x9, #0x8
     f44:	ldr	x2, [x22], #16
     f48:	mov	x0, x19
     f4c:	mov	w1, wzr
     f50:	bl	3ba8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
     f54:	subs	x21, x21, #0x10
     f58:	b.ne	f44 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf44>  // b.any
     f5c:	b	f04 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf04>
     f60:	ldr	x25, [x25, #32]
     f64:	cmp	x24, x25
     f68:	b.ne	fdc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xfdc>  // b.any
     f6c:	ldp	x9, x8, [x19, #112]
     f70:	ldp	x11, x10, [sp, #8]
     f74:	mov	x0, x19
     f78:	sub	x8, x8, x9
     f7c:	sub	x10, x10, x11
     f80:	lsr	x1, x10, #4
     f84:	lsr	x2, x8, #4
     f88:	bl	1ec8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj>
     f8c:	mov	x0, x19
     f90:	bl	22b8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv>
     f94:	ldr	x0, [sp, #48]
     f98:	add	x8, sp, #0x30
     f9c:	add	x8, x8, #0x10
     fa0:	cmp	x0, x8
     fa4:	b.eq	fac <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xfac>  // b.none
     fa8:	bl	0 <free>
     fac:	ldp	x20, x19, [sp, #304]
     fb0:	ldp	x22, x21, [sp, #288]
     fb4:	ldp	x24, x23, [sp, #272]
     fb8:	ldp	x26, x25, [sp, #256]
     fbc:	ldp	x28, x27, [sp, #240]
     fc0:	ldp	x29, x30, [sp, #224]
     fc4:	add	sp, sp, #0x140
     fc8:	ret
     fcc:	ldp	x8, x25, [sp, #24]
     fd0:	ldr	x25, [x25, #8]
     fd4:	cmp	x8, x25
     fd8:	b.eq	f6c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xf6c>  // b.none
     fdc:	ldrb	w8, [x25]
     fe0:	tbnz	w8, #2, 1380 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1380>
     fe4:	sub	x8, x25, #0x38
     fe8:	cmp	x25, #0x0
     fec:	csel	x20, xzr, x8, eq  // eq = none
     ff0:	ldrb	w8, [x20, #18]
     ff4:	tbnz	w8, #0, 1004 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1004>
     ff8:	ldr	x21, [x20, #88]
     ffc:	mov	x8, x21
    1000:	b	102c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x102c>
    1004:	mov	x0, x20
    1008:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    100c:	ldrb	w8, [x20, #18]
    1010:	ldr	x21, [x20, #88]
    1014:	tbnz	w8, #0, 1020 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1020>
    1018:	mov	x8, x21
    101c:	b	102c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x102c>
    1020:	mov	x0, x20
    1024:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    1028:	ldr	x8, [x20, #88]
    102c:	ldr	x9, [x20, #96]
    1030:	mov	w10, #0x28                  	// #40
    1034:	madd	x22, x9, x10, x8
    1038:	cmp	x22, x21
    103c:	b.eq	1054 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1054>  // b.none
    1040:	ldr	x1, [x21], #40
    1044:	mov	x0, x19
    1048:	bl	1a08 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    104c:	cmp	x22, x21
    1050:	b.ne	1040 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1040>  // b.any
    1054:	add	x1, sp, #0x30
    1058:	mov	x0, x20
    105c:	str	wzr, [sp, #56]
    1060:	bl	0 <_ZNK4llvm12GlobalObject14getAllMetadataERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
    1064:	ldr	w8, [sp, #56]
    1068:	cbz	w8, 10c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10c0>
    106c:	ldr	x9, [sp, #48]
    1070:	lsl	x22, x8, #4
    1074:	add	x23, x9, #0x8
    1078:	b	1094 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1094>
    107c:	mov	x0, x19
    1080:	mov	x2, x21
    1084:	bl	3ba8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    1088:	subs	x22, x22, #0x10
    108c:	add	x23, x23, #0x10
    1090:	b.eq	10c0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10c0>  // b.none
    1094:	mov	x0, x20
    1098:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    109c:	ldr	x21, [x23]
    10a0:	mov	w1, wzr
    10a4:	cbz	x25, 107c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x107c>
    10a8:	tbnz	w0, #0, 107c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x107c>
    10ac:	mov	x0, x19
    10b0:	mov	x1, x20
    10b4:	bl	2ed8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    10b8:	add	w1, w0, #0x1
    10bc:	b	107c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x107c>
    10c0:	ldr	x27, [x20, #80]
    10c4:	add	x8, x20, #0x48
    10c8:	stp	x25, x8, [sp, #32]
    10cc:	b	10d8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10d8>
    10d0:	ldr	x27, [x27, #8]
    10d4:	ldr	x8, [sp, #40]
    10d8:	cmp	x8, x27
    10dc:	b.eq	fcc <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xfcc>  // b.none
    10e0:	ldrb	w8, [x27]
    10e4:	tbnz	w8, #2, 1340 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1340>
    10e8:	sub	x8, x27, #0x18
    10ec:	cmp	x27, #0x0
    10f0:	csel	x8, xzr, x8, eq  // eq = none
    10f4:	ldr	x23, [x8, #48]
    10f8:	add	x24, x8, #0x28
    10fc:	b	1104 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1104>
    1100:	ldr	x23, [x23, #8]
    1104:	cmp	x24, x23
    1108:	b.eq	10d0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x10d0>  // b.none
    110c:	ldrb	w8, [x23]
    1110:	tbnz	w8, #2, 1320 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1320>
    1114:	sub	x8, x23, #0x18
    1118:	cmp	x23, #0x0
    111c:	csel	x21, xzr, x8, eq  // eq = none
    1120:	ldr	w8, [x21, #20]
    1124:	tbnz	w8, #30, 1140 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1140>
    1128:	and	w8, w8, #0xfffffff
    112c:	mov	w9, #0x18                  	// #24
    1130:	mneg	x9, x8, x9
    1134:	add	x28, x21, x9
    1138:	cbnz	x8, 114c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x114c>
    113c:	b	11b4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x11b4>
    1140:	ldur	x28, [x21, #-8]
    1144:	and	x8, x8, #0xfffffff
    1148:	cbz	x8, 11b4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x11b4>
    114c:	add	x8, x8, x8, lsl #1
    1150:	lsl	x25, x8, #3
    1154:	b	116c <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x116c>
    1158:	mov	x0, x19
    115c:	bl	1d38 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE>
    1160:	subs	x25, x25, #0x18
    1164:	add	x28, x28, #0x18
    1168:	b.eq	11b4 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x11b4>  // b.none
    116c:	ldr	x1, [x28]
    1170:	cbz	x1, 12e0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x12e0>
    1174:	ldrb	w8, [x1, #16]
    1178:	cmp	w8, #0x13
    117c:	b.ne	1158 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1158>  // b.any
    1180:	ldr	x22, [x1, #24]
    1184:	cbz	x22, 1300 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1300>
    1188:	ldrb	w8, [x22]
    118c:	cmp	w8, #0x2
    1190:	b.eq	1160 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1160>  // b.none
    1194:	mov	x0, x19
    1198:	mov	x1, x20
    119c:	bl	2ed8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    11a0:	add	w1, w0, #0x1
    11a4:	mov	x0, x19
    11a8:	mov	x2, x22
    11ac:	bl	3ba8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    11b0:	b	1160 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1160>
    11b4:	ldr	x1, [x21]
    11b8:	mov	x0, x19
    11bc:	bl	1a08 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    11c0:	ldrb	w8, [x21, #16]
    11c4:	sub	w8, w8, #0x1d
    11c8:	cmp	w8, #0x33
    11cc:	b.hi	11f8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x11f8>  // b.pmore
    11d0:	mov	w9, #0x1                   	// #1
    11d4:	lsl	x8, x9, x8
    11d8:	mov	x9, #0x41                  	// #65
    11dc:	movk	x9, #0x8, lsl #48
    11e0:	tst	x8, x9
    11e4:	b.eq	11f8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x11f8>  // b.none
    11e8:	cbz	x23, 11f8 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x11f8>
    11ec:	ldr	x1, [x21, #56]
    11f0:	mov	x0, x19
    11f4:	bl	17d8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
    11f8:	str	wzr, [sp, #56]
    11fc:	ldrsh	w8, [x21, #18]
    1200:	tbnz	w8, #31, 1254 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1254>
    1204:	add	x0, x21, #0x30
    1208:	bl	0 <_ZNK4llvm8DebugLoc3getEv>
    120c:	cbz	x0, 1100 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1100>
    1210:	ldr	w8, [x0, #8]
    1214:	mov	x21, x0
    1218:	neg	x9, x8
    121c:	lsl	x9, x9, #3
    1220:	cbz	x9, 1100 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1100>
    1224:	neg	x25, x8, lsl #3
    1228:	ldr	x22, [x21, x25]
    122c:	mov	x0, x19
    1230:	mov	x1, x20
    1234:	bl	2ed8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    1238:	add	w1, w0, #0x1
    123c:	mov	x0, x19
    1240:	mov	x2, x22
    1244:	bl	3ba8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    1248:	adds	x25, x25, #0x8
    124c:	b.ne	1228 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1228>  // b.any
    1250:	b	1100 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1100>
    1254:	add	x1, sp, #0x30
    1258:	mov	x0, x21
    125c:	bl	0 <_ZNK4llvm11Instruction35getAllMetadataOtherThanDebugLocImplERNS_15SmallVectorImplISt4pairIjPNS_6MDNodeEEEE>
    1260:	ldr	w8, [sp, #56]
    1264:	cbz	w8, 1204 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1204>
    1268:	mov	x25, xzr
    126c:	sub	x28, x8, #0x1
    1270:	mov	w26, #0x8                   	// #8
    1274:	ldr	x8, [sp, #48]
    1278:	mov	x0, x19
    127c:	mov	x1, x20
    1280:	ldr	x22, [x8, x26]
    1284:	bl	2ed8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    1288:	add	w1, w0, #0x1
    128c:	mov	x0, x19
    1290:	mov	x2, x22
    1294:	bl	3ba8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    1298:	cmp	x28, x25
    129c:	b.eq	1204 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1204>  // b.none
    12a0:	ldr	w8, [sp, #56]
    12a4:	add	x25, x25, #0x1
    12a8:	add	x26, x26, #0x10
    12ac:	cmp	x25, x8
    12b0:	b.cc	1274 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0x1274>  // b.lo, b.ul, b.last
    12b4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    12b8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    12bc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    12c0:	add	x0, x0, #0x0
    12c4:	add	x1, x1, #0x0
    12c8:	add	x3, x3, #0x0
    12cc:	mov	w2, #0x95                  	// #149
    12d0:	bl	0 <__assert_fail>
    12d4:	ldur	x21, [x29, #-32]
    12d8:	cbnz	x21, b18 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb18>
    12dc:	b	b20 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb+0xb20>
    12e0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    12e4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    12e8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    12ec:	add	x0, x0, #0x0
    12f0:	add	x1, x1, #0x0
    12f4:	add	x3, x3, #0x0
    12f8:	mov	w2, #0x69                  	// #105
    12fc:	bl	0 <__assert_fail>
    1300:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1304:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1308:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    130c:	add	x0, x0, #0x0
    1310:	add	x1, x1, #0x0
    1314:	add	x3, x3, #0x0
    1318:	mov	w2, #0x69                  	// #105
    131c:	bl	0 <__assert_fail>
    1320:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1324:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1328:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    132c:	add	x0, x0, #0x0
    1330:	add	x1, x1, #0x0
    1334:	add	x3, x3, #0x0
    1338:	mov	w2, #0x8b                  	// #139
    133c:	bl	0 <__assert_fail>
    1340:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1344:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1348:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    134c:	add	x0, x0, #0x0
    1350:	add	x1, x1, #0x0
    1354:	add	x3, x3, #0x0
    1358:	mov	w2, #0x8b                  	// #139
    135c:	bl	0 <__assert_fail>
    1360:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1364:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1368:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    136c:	add	x0, x0, #0x0
    1370:	add	x1, x1, #0x0
    1374:	add	x3, x3, #0x0
    1378:	mov	w2, #0x69                  	// #105
    137c:	bl	0 <__assert_fail>
    1380:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1384:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1388:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    138c:	add	x0, x0, #0x0
    1390:	add	x1, x1, #0x0
    1394:	add	x3, x3, #0x0
    1398:	mov	w2, #0x8b                  	// #139
    139c:	bl	0 <__assert_fail>
    13a0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13a4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13a8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13ac:	add	x0, x0, #0x0
    13b0:	add	x1, x1, #0x0
    13b4:	add	x3, x3, #0x0
    13b8:	mov	w2, #0x8b                  	// #139
    13bc:	bl	0 <__assert_fail>
    13c0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13c4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13c8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13cc:	add	x0, x0, #0x0
    13d0:	add	x1, x1, #0x0
    13d4:	add	x3, x3, #0x0
    13d8:	mov	w2, #0x8b                  	// #139
    13dc:	bl	0 <__assert_fail>
    13e0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13e4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13e8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    13ec:	add	x0, x0, #0x0
    13f0:	add	x1, x1, #0x0
    13f4:	add	x3, x3, #0x0
    13f8:	mov	w2, #0x8b                  	// #139
    13fc:	bl	0 <__assert_fail>
    1400:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1404:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1408:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    140c:	add	x0, x0, #0x0
    1410:	add	x1, x1, #0x0
    1414:	add	x3, x3, #0x0
    1418:	mov	w2, #0x69                  	// #105
    141c:	bl	0 <__assert_fail>
    1420:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1424:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1428:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    142c:	add	x0, x0, #0x0
    1430:	add	x1, x1, #0x0
    1434:	add	x3, x3, #0x0
    1438:	mov	w2, #0x8b                  	// #139
    143c:	bl	0 <__assert_fail>
    1440:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1444:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1448:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    144c:	add	x0, x0, #0x0
    1450:	add	x1, x1, #0x0
    1454:	add	x3, x3, #0x0
    1458:	mov	w2, #0x8b                  	// #139
    145c:	bl	0 <__assert_fail>

0000000000001460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>:
    1460:	sub	sp, sp, #0x70
    1464:	stp	x29, x30, [sp, #32]
    1468:	stp	x26, x25, [sp, #48]
    146c:	stp	x24, x23, [sp, #64]
    1470:	stp	x22, x21, [sp, #80]
    1474:	stp	x20, x19, [sp, #96]
    1478:	add	x29, sp, #0x20
    147c:	stur	x1, [x29, #-8]
    1480:	ldr	x8, [x1]
    1484:	ldrb	w8, [x8, #8]
    1488:	cbz	w8, 174c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x2ec>
    148c:	ldrb	w8, [x1, #16]
    1490:	cmp	w8, #0x13
    1494:	b.eq	176c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x30c>  // b.none
    1498:	add	x20, x0, #0x50
    149c:	mov	x19, x0
    14a0:	sub	x1, x29, #0x8
    14a4:	mov	x0, x20
    14a8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    14ac:	ldr	w8, [x0]
    14b0:	cbz	w8, 14d0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x70>
    14b4:	ldr	x9, [x19, #112]
    14b8:	sub	w8, w8, #0x1
    14bc:	add	x8, x9, w8, uxtw #4
    14c0:	ldr	w9, [x8, #8]
    14c4:	add	w9, w9, #0x1
    14c8:	str	w9, [x8, #8]
    14cc:	b	1710 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x2b0>
    14d0:	ldur	x8, [x29, #-8]
    14d4:	cbz	x8, 178c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x32c>
    14d8:	ldrb	w9, [x8, #16]
    14dc:	mov	x21, x0
    14e0:	cmp	w9, #0x3
    14e4:	b.eq	14ec <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x8c>  // b.none
    14e8:	cbnz	w9, 15dc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x17c>
    14ec:	ldr	x8, [x8, #48]
    14f0:	str	x8, [sp, #8]
    14f4:	cbz	x8, 15d8 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x178>
    14f8:	add	x0, x19, #0x88
    14fc:	add	x1, sp, #0x8
    1500:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1504:	ldr	w8, [x0]
    1508:	cbnz	w8, 15d8 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x178>
    150c:	ldp	x22, x8, [x19, #184]
    1510:	sub	x23, x8, x22
    1514:	lsr	x9, x23, #3
    1518:	add	w9, w9, #0x1
    151c:	str	w9, [x0]
    1520:	ldr	x9, [x19, #200]
    1524:	cmp	x9, x8
    1528:	b.eq	1544 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0xe4>  // b.none
    152c:	ldr	x9, [sp, #8]
    1530:	str	x9, [x8]
    1534:	ldr	x8, [x19, #192]
    1538:	add	x8, x8, #0x8
    153c:	str	x8, [x19, #192]
    1540:	b	15d8 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x178>
    1544:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    1548:	cmp	x23, x8
    154c:	b.eq	17cc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x36c>  // b.none
    1550:	asr	x26, x23, #3
    1554:	cmp	x23, #0x0
    1558:	csinc	x8, x26, xzr, ne  // ne = any
    155c:	adds	x8, x8, x26
    1560:	lsr	x10, x8, #60
    1564:	cset	w9, cs  // cs = hs, nlast
    1568:	cmp	x10, #0x0
    156c:	cset	w10, ne  // ne = any
    1570:	orr	w9, w9, w10
    1574:	cmp	w9, #0x0
    1578:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    157c:	csel	x25, x9, x8, ne  // ne = any
    1580:	cbz	x25, 1594 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x134>
    1584:	lsl	x0, x25, #3
    1588:	bl	0 <_Znwm>
    158c:	mov	x24, x0
    1590:	b	1598 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x138>
    1594:	mov	x24, xzr
    1598:	ldr	x8, [sp, #8]
    159c:	add	x26, x24, x26, lsl #3
    15a0:	cmp	x23, #0x1
    15a4:	str	x8, [x26]
    15a8:	b.lt	15bc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x15c>  // b.tstop
    15ac:	mov	x0, x24
    15b0:	mov	x1, x22
    15b4:	mov	x2, x23
    15b8:	bl	0 <memmove>
    15bc:	add	x23, x26, #0x8
    15c0:	cbz	x22, 15cc <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x16c>
    15c4:	mov	x0, x22
    15c8:	bl	0 <_ZdlPv>
    15cc:	add	x8, x24, x25, lsl #3
    15d0:	stp	x24, x23, [x19, #184]
    15d4:	str	x8, [x19, #200]
    15d8:	ldur	x8, [x29, #-8]
    15dc:	ldr	x1, [x8]
    15e0:	mov	x0, x19
    15e4:	bl	1a08 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    15e8:	ldur	x8, [x29, #-8]
    15ec:	cbz	x8, 17ac <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x34c>
    15f0:	ldrb	w9, [x8, #16]
    15f4:	sub	w9, w9, #0x4
    15f8:	cmp	w9, #0xc
    15fc:	b.hi	1620 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1c0>  // b.pmore
    1600:	ldr	w10, [x8, #20]
    1604:	and	x9, x10, #0xfffffff
    1608:	cbz	w9, 1620 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1c0>
    160c:	tbnz	w10, #30, 1674 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x214>
    1610:	mov	w10, #0x18                  	// #24
    1614:	mneg	x10, x9, x10
    1618:	add	x21, x8, x10
    161c:	b	1678 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x218>
    1620:	mov	w9, #0x1                   	// #1
    1624:	stp	x8, x9, [sp, #8]
    1628:	ldp	x1, x8, [x19, #120]
    162c:	add	x20, x19, #0x70
    1630:	cmp	x1, x8
    1634:	b.eq	1650 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x1f0>  // b.none
    1638:	ldur	q0, [sp, #8]
    163c:	str	q0, [x1]
    1640:	ldr	x8, [x19, #120]
    1644:	add	x8, x8, #0x10
    1648:	str	x8, [x19, #120]
    164c:	b	1660 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x200>
    1650:	add	x2, sp, #0x8
    1654:	mov	x0, x20
    1658:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    165c:	ldr	x8, [x19, #120]
    1660:	ldr	x9, [x20]
    1664:	sub	x8, x8, x9
    1668:	lsr	x8, x8, #4
    166c:	str	w8, [x21]
    1670:	b	1710 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x2b0>
    1674:	ldur	x21, [x8, #-8]
    1678:	add	x8, x9, x9, lsl #1
    167c:	lsl	x22, x8, #3
    1680:	b	1690 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x230>
    1684:	subs	x22, x22, #0x18
    1688:	add	x21, x21, #0x18
    168c:	b.eq	16b0 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x250>  // b.none
    1690:	ldr	x1, [x21]
    1694:	cbz	x1, 172c <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x2cc>
    1698:	ldrb	w8, [x1, #16]
    169c:	cmp	w8, #0x12
    16a0:	b.eq	1684 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x224>  // b.none
    16a4:	mov	x0, x19
    16a8:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    16ac:	b	1684 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x224>
    16b0:	ldur	x8, [x29, #-8]
    16b4:	mov	w9, #0x1                   	// #1
    16b8:	add	x21, x19, #0x70
    16bc:	stp	x8, x9, [sp, #8]
    16c0:	ldp	x1, x8, [x19, #120]
    16c4:	cmp	x1, x8
    16c8:	b.eq	16e4 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x284>  // b.none
    16cc:	ldur	q0, [sp, #8]
    16d0:	str	q0, [x1]
    16d4:	ldr	x8, [x19, #120]
    16d8:	add	x8, x8, #0x10
    16dc:	str	x8, [x19, #120]
    16e0:	b	16f4 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE+0x294>
    16e4:	add	x2, sp, #0x8
    16e8:	mov	x0, x21
    16ec:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    16f0:	ldr	x8, [x19, #120]
    16f4:	ldr	x9, [x21]
    16f8:	sub	x1, x29, #0x8
    16fc:	mov	x0, x20
    1700:	sub	x8, x8, x9
    1704:	lsr	x19, x8, #4
    1708:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    170c:	str	w19, [x0]
    1710:	ldp	x20, x19, [sp, #96]
    1714:	ldp	x22, x21, [sp, #80]
    1718:	ldp	x24, x23, [sp, #64]
    171c:	ldp	x26, x25, [sp, #48]
    1720:	ldp	x29, x30, [sp, #32]
    1724:	add	sp, sp, #0x70
    1728:	ret
    172c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1730:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1734:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1738:	add	x0, x0, #0x0
    173c:	add	x1, x1, #0x0
    1740:	add	x3, x3, #0x0
    1744:	mov	w2, #0x5b                  	// #91
    1748:	bl	0 <__assert_fail>
    174c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1750:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1754:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1758:	add	x0, x0, #0x0
    175c:	add	x1, x1, #0x0
    1760:	add	x3, x3, #0x0
    1764:	mov	w2, #0x325                 	// #805
    1768:	bl	0 <__assert_fail>
    176c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1770:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1774:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1778:	add	x0, x0, #0x0
    177c:	add	x1, x1, #0x0
    1780:	add	x3, x3, #0x0
    1784:	mov	w2, #0x326                 	// #806
    1788:	bl	0 <__assert_fail>
    178c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1790:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1794:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1798:	add	x0, x0, #0x0
    179c:	add	x1, x1, #0x0
    17a0:	add	x3, x3, #0x0
    17a4:	mov	w2, #0x69                  	// #105
    17a8:	bl	0 <__assert_fail>
    17ac:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    17b0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    17b4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    17b8:	add	x0, x0, #0x0
    17bc:	add	x1, x1, #0x0
    17c0:	add	x3, x3, #0x0
    17c4:	mov	w2, #0x69                  	// #105
    17c8:	bl	0 <__assert_fail>
    17cc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    17d0:	add	x0, x0, #0x0
    17d4:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000017d8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>:
    17d8:	sub	sp, sp, #0x60
    17dc:	stp	x29, x30, [sp, #32]
    17e0:	stp	x24, x23, [sp, #48]
    17e4:	stp	x22, x21, [sp, #64]
    17e8:	stp	x20, x19, [sp, #80]
    17ec:	add	x29, sp, #0x20
    17f0:	str	x1, [sp, #16]
    17f4:	cbz	x1, 19c4 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x1ec>
    17f8:	ldr	w9, [x0, #408]
    17fc:	mov	x19, x0
    1800:	cbz	w9, 1874 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x9c>
    1804:	orr	x8, x1, #0x4
    1808:	cmn	x8, #0x4
    180c:	b.eq	19e8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x210>  // b.none
    1810:	ldr	x8, [x19, #392]
    1814:	ubfx	x10, x1, #4, #28
    1818:	eor	w10, w10, w1, lsr #9
    181c:	sub	w9, w9, #0x1
    1820:	and	w10, w10, w9
    1824:	add	x20, x8, w10, uxtw #4
    1828:	ldr	x12, [x20]
    182c:	cmp	x12, x1
    1830:	b.eq	1898 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0xc0>  // b.none
    1834:	mov	x11, xzr
    1838:	mov	w14, #0x1                   	// #1
    183c:	mov	x13, #0xfffffffffffffff8    	// #-8
    1840:	cmn	x12, #0x4
    1844:	b.eq	19dc <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x204>  // b.none
    1848:	cmp	x11, #0x0
    184c:	add	w10, w10, w14
    1850:	ccmp	x12, x13, #0x0, eq  // eq = none
    1854:	and	w10, w10, w9
    1858:	csel	x11, x11, x20, ne  // ne = any
    185c:	add	x20, x8, w10, uxtw #4
    1860:	ldr	x12, [x20]
    1864:	add	w14, w14, #0x1
    1868:	cmp	x12, x1
    186c:	b.eq	1898 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0xc0>  // b.none
    1870:	b	1840 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x68>
    1874:	mov	x3, xzr
    1878:	add	x0, x19, #0x180
    187c:	add	x1, sp, #0x10
    1880:	add	x2, sp, #0x10
    1884:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1888:	ldr	x8, [sp, #16]
    188c:	mov	x20, x0
    1890:	str	wzr, [x0, #8]
    1894:	str	x8, [x0]
    1898:	ldr	w8, [x20, #8]
    189c:	cbnz	w8, 18e8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x110>
    18a0:	ldp	x1, x8, [x19, #424]
    18a4:	add	x21, x19, #0x1a0
    18a8:	cmp	x1, x8
    18ac:	b.eq	18c8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0xf0>  // b.none
    18b0:	ldr	x8, [sp, #16]
    18b4:	str	x8, [x1]
    18b8:	ldr	x8, [x19, #424]
    18bc:	add	x8, x8, #0x8
    18c0:	str	x8, [x19, #424]
    18c4:	b	18d8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x100>
    18c8:	add	x2, sp, #0x10
    18cc:	mov	x0, x21
    18d0:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    18d4:	ldr	x8, [x19, #424]
    18d8:	ldr	x9, [x21]
    18dc:	sub	x8, x8, x9
    18e0:	lsr	x8, x8, #3
    18e4:	str	w8, [x20, #8]
    18e8:	add	x0, sp, #0x10
    18ec:	bl	0 <_ZNK4llvm13AttributeList14getNumAttrSetsEv>
    18f0:	cbz	w0, 19c4 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x1ec>
    18f4:	mov	w20, w0
    18f8:	mov	w24, wzr
    18fc:	add	x21, x19, #0x148
    1900:	add	x22, x19, #0x168
    1904:	b	1938 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x160>
    1908:	ldr	q0, [sp]
    190c:	str	q0, [x1]
    1910:	ldr	x8, [x19, #368]
    1914:	add	x8, x8, #0x10
    1918:	str	x8, [x19, #368]
    191c:	ldr	x9, [x22]
    1920:	sub	x8, x8, x9
    1924:	lsr	x8, x8, #4
    1928:	str	w8, [x23, #16]
    192c:	add	w24, w24, #0x1
    1930:	cmp	w20, w24
    1934:	b.eq	19c4 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x1ec>  // b.none
    1938:	sub	w23, w24, #0x1
    193c:	add	x0, sp, #0x10
    1940:	mov	w1, w23
    1944:	bl	0 <_ZNK4llvm13AttributeList13getAttributesEj>
    1948:	cbz	x0, 192c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x154>
    194c:	str	x0, [sp, #8]
    1950:	mov	x1, sp
    1954:	sub	x2, x29, #0x8
    1958:	mov	x0, x21
    195c:	str	w23, [sp]
    1960:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1964:	ldur	x23, [x29, #-8]
    1968:	tbz	w0, #0, 1978 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x1a0>
    196c:	ldr	w8, [x23, #16]
    1970:	cbnz	w8, 192c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x154>
    1974:	b	19a4 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x1cc>
    1978:	mov	x1, sp
    197c:	mov	x2, sp
    1980:	mov	x0, x21
    1984:	mov	x3, x23
    1988:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    198c:	ldr	w8, [sp]
    1990:	mov	x23, x0
    1994:	str	w8, [x0]
    1998:	ldr	x8, [sp, #8]
    199c:	str	wzr, [x0, #16]
    19a0:	str	x8, [x0, #8]
    19a4:	ldp	x1, x8, [x19, #368]
    19a8:	cmp	x1, x8
    19ac:	b.ne	1908 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x130>  // b.any
    19b0:	mov	x2, sp
    19b4:	mov	x0, x22
    19b8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19bc:	ldr	x8, [x19, #368]
    19c0:	b	191c <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0x144>
    19c4:	ldp	x20, x19, [sp, #80]
    19c8:	ldp	x22, x21, [sp, #64]
    19cc:	ldp	x24, x23, [sp, #48]
    19d0:	ldp	x29, x30, [sp, #32]
    19d4:	add	sp, sp, #0x60
    19d8:	ret
    19dc:	cmp	x11, #0x0
    19e0:	csel	x3, x20, x11, eq  // eq = none
    19e4:	b	1878 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE+0xa0>
    19e8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19ec:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19f0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    19f4:	add	x0, x0, #0x0
    19f8:	add	x1, x1, #0x0
    19fc:	add	x3, x3, #0x0
    1a00:	mov	w2, #0x252                 	// #594
    1a04:	bl	0 <__assert_fail>

0000000000001a08 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>:
    1a08:	stp	x29, x30, [sp, #-80]!
    1a0c:	str	x25, [sp, #16]
    1a10:	stp	x24, x23, [sp, #32]
    1a14:	stp	x22, x21, [sp, #48]
    1a18:	stp	x20, x19, [sp, #64]
    1a1c:	mov	x29, sp
    1a20:	add	x20, x0, #0x18
    1a24:	mov	x19, x0
    1a28:	str	x1, [x29, #24]
    1a2c:	add	x1, x29, #0x18
    1a30:	mov	x0, x20
    1a34:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a38:	ldr	w8, [x0]
    1a3c:	cbnz	w8, 1b74 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x16c>
    1a40:	ldr	x8, [x29, #24]
    1a44:	cbz	x8, 1b8c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x184>
    1a48:	ldr	w9, [x8, #8]
    1a4c:	mov	w10, #0x4ff                 	// #1279
    1a50:	and	w9, w9, w10
    1a54:	cmp	w9, #0xd
    1a58:	b.ne	1a64 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x5c>  // b.any
    1a5c:	mov	w9, #0xffffffff            	// #-1
    1a60:	str	w9, [x0]
    1a64:	ldr	w9, [x8, #12]
    1a68:	cbz	w9, 1a88 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x80>
    1a6c:	ldr	x21, [x8, #16]
    1a70:	lsl	x22, x9, #3
    1a74:	ldr	x1, [x21], #8
    1a78:	mov	x0, x19
    1a7c:	bl	1a08 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    1a80:	subs	x22, x22, #0x8
    1a84:	b.ne	1a74 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x6c>  // b.any
    1a88:	add	x1, x29, #0x18
    1a8c:	mov	x0, x20
    1a90:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1a94:	ldr	w8, [x0]
    1a98:	add	w8, w8, #0x1
    1a9c:	cmp	w8, #0x2
    1aa0:	b.cs	1b74 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x16c>  // b.hs, b.nlast
    1aa4:	ldp	x8, x9, [x19, #64]
    1aa8:	mov	x20, x0
    1aac:	cmp	x8, x9
    1ab0:	b.eq	1acc <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0xc4>  // b.none
    1ab4:	ldr	x9, [x29, #24]
    1ab8:	str	x9, [x8]
    1abc:	ldp	x22, x8, [x19, #56]
    1ac0:	add	x23, x8, #0x8
    1ac4:	str	x23, [x19, #64]
    1ac8:	b	1b68 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x160>
    1acc:	ldr	x21, [x19, #56]
    1ad0:	sub	x23, x8, x21
    1ad4:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    1ad8:	cmp	x23, x8
    1adc:	b.eq	1bac <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x1a4>  // b.none
    1ae0:	asr	x25, x23, #3
    1ae4:	cmp	x23, #0x0
    1ae8:	csinc	x8, x25, xzr, ne  // ne = any
    1aec:	adds	x8, x8, x25
    1af0:	lsr	x10, x8, #60
    1af4:	cset	w9, cs  // cs = hs, nlast
    1af8:	cmp	x10, #0x0
    1afc:	cset	w10, ne  // ne = any
    1b00:	orr	w9, w9, w10
    1b04:	cmp	w9, #0x0
    1b08:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    1b0c:	csel	x24, x9, x8, ne  // ne = any
    1b10:	cbz	x24, 1b24 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x11c>
    1b14:	lsl	x0, x24, #3
    1b18:	bl	0 <_Znwm>
    1b1c:	mov	x22, x0
    1b20:	b	1b28 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x120>
    1b24:	mov	x22, xzr
    1b28:	ldr	x8, [x29, #24]
    1b2c:	add	x25, x22, x25, lsl #3
    1b30:	cmp	x23, #0x1
    1b34:	str	x8, [x25]
    1b38:	b.lt	1b4c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x144>  // b.tstop
    1b3c:	mov	x0, x22
    1b40:	mov	x1, x21
    1b44:	mov	x2, x23
    1b48:	bl	0 <memmove>
    1b4c:	add	x23, x25, #0x8
    1b50:	cbz	x21, 1b5c <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE+0x154>
    1b54:	mov	x0, x21
    1b58:	bl	0 <_ZdlPv>
    1b5c:	add	x8, x22, x24, lsl #3
    1b60:	stp	x22, x23, [x19, #56]
    1b64:	str	x8, [x19, #72]
    1b68:	sub	x8, x23, x22
    1b6c:	lsr	x8, x8, #3
    1b70:	str	w8, [x20]
    1b74:	ldp	x20, x19, [sp, #64]
    1b78:	ldp	x22, x21, [sp, #48]
    1b7c:	ldp	x24, x23, [sp, #32]
    1b80:	ldr	x25, [sp, #16]
    1b84:	ldp	x29, x30, [sp], #80
    1b88:	ret
    1b8c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1b90:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1b94:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1b98:	add	x0, x0, #0x0
    1b9c:	add	x1, x1, #0x0
    1ba0:	add	x3, x3, #0x0
    1ba4:	mov	w2, #0x69                  	// #105
    1ba8:	bl	0 <__assert_fail>
    1bac:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1bb0:	add	x0, x0, #0x0
    1bb4:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000001bb8 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE>:
    1bb8:	stp	x29, x30, [sp, #-48]!
    1bbc:	str	x21, [sp, #16]
    1bc0:	stp	x20, x19, [sp, #32]
    1bc4:	mov	x29, sp
    1bc8:	ldr	w8, [x1, #8]
    1bcc:	ldr	x9, [x1]
    1bd0:	mov	x19, x0
    1bd4:	cbz	w8, 1c00 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x48>
    1bd8:	add	x10, x9, #0x8
    1bdc:	mov	x20, x9
    1be0:	b	1bec <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x34>
    1be4:	mov	x20, x10
    1be8:	add	x10, x10, #0x8
    1bec:	ldur	x11, [x10, #-8]
    1bf0:	cbz	x11, 1be4 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x2c>
    1bf4:	cmn	x11, #0x8
    1bf8:	b.eq	1be4 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x2c>  // b.none
    1bfc:	b	1c04 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x4c>
    1c00:	mov	x20, x9
    1c04:	add	x21, x9, x8, lsl #3
    1c08:	cmp	x21, x20
    1c0c:	b.eq	1c3c <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x84>  // b.none
    1c10:	ldr	x8, [x20], #8
    1c14:	mov	x0, x19
    1c18:	ldr	x1, [x8, #8]
    1c1c:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    1c20:	b	1c28 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x70>
    1c24:	add	x20, x20, #0x8
    1c28:	ldr	x8, [x20]
    1c2c:	cbz	x8, 1c24 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x6c>
    1c30:	cmn	x8, #0x8
    1c34:	b.eq	1c24 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x6c>  // b.none
    1c38:	b	1c08 <_ZN4llvm15ValueEnumerator25EnumerateValueSymbolTableERKNS_16ValueSymbolTableE+0x50>
    1c3c:	ldp	x20, x19, [sp, #32]
    1c40:	ldr	x21, [sp, #16]
    1c44:	ldp	x29, x30, [sp], #48
    1c48:	ret

0000000000001c4c <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE>:
    1c4c:	stp	x29, x30, [sp, #-64]!
    1c50:	str	x23, [sp, #16]
    1c54:	stp	x22, x21, [sp, #32]
    1c58:	stp	x20, x19, [sp, #48]
    1c5c:	mov	x29, sp
    1c60:	ldr	x19, [x1, #80]
    1c64:	add	x23, x1, #0x48
    1c68:	cmp	x23, x19
    1c6c:	b.eq	1ccc <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x80>  // b.none
    1c70:	mov	x20, x0
    1c74:	b	1c84 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x38>
    1c78:	ldr	x19, [x19, #8]
    1c7c:	cmp	x23, x19
    1c80:	b.eq	1ccc <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x80>  // b.none
    1c84:	ldrb	w8, [x19]
    1c88:	tbnz	w8, #2, 1ce0 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x94>
    1c8c:	mov	x0, x19
    1c90:	bl	0 <_ZNK4llvm11NamedMDNode14getNumOperandsEv>
    1c94:	cbz	w0, 1c78 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x2c>
    1c98:	mov	w21, w0
    1c9c:	mov	w22, wzr
    1ca0:	mov	x0, x19
    1ca4:	mov	w1, w22
    1ca8:	bl	0 <_ZNK4llvm11NamedMDNode10getOperandEj>
    1cac:	mov	x2, x0
    1cb0:	mov	x0, x20
    1cb4:	mov	w1, wzr
    1cb8:	bl	3ba8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    1cbc:	add	w22, w22, #0x1
    1cc0:	cmp	w21, w22
    1cc4:	b.ne	1ca0 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x54>  // b.any
    1cc8:	b	1c78 <_ZN4llvm15ValueEnumerator22EnumerateNamedMetadataERKNS_6ModuleE+0x2c>
    1ccc:	ldp	x20, x19, [sp, #48]
    1cd0:	ldp	x22, x21, [sp, #32]
    1cd4:	ldr	x23, [sp, #16]
    1cd8:	ldp	x29, x30, [sp], #64
    1cdc:	ret
    1ce0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1ce4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1ce8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1cec:	add	x0, x0, #0x0
    1cf0:	add	x1, x1, #0x0
    1cf4:	add	x3, x3, #0x0
    1cf8:	mov	w2, #0x8b                  	// #139
    1cfc:	bl	0 <__assert_fail>

0000000000001d00 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEPKNS_8FunctionEPKNS_8MetadataE>:
    1d00:	stp	x29, x30, [sp, #-32]!
    1d04:	stp	x20, x19, [sp, #16]
    1d08:	mov	x29, sp
    1d0c:	mov	x19, x2
    1d10:	mov	x20, x0
    1d14:	cbz	x1, 1d24 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEPKNS_8FunctionEPKNS_8MetadataE+0x24>
    1d18:	mov	x0, x20
    1d1c:	bl	2ed8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    1d20:	add	w1, w0, #0x1
    1d24:	mov	x0, x20
    1d28:	mov	x2, x19
    1d2c:	ldp	x20, x19, [sp, #16]
    1d30:	ldp	x29, x30, [sp], #32
    1d34:	b	3ba8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>

0000000000001d38 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE>:
    1d38:	stp	x29, x30, [sp, #-48]!
    1d3c:	str	x21, [sp, #16]
    1d40:	stp	x20, x19, [sp, #32]
    1d44:	mov	x29, sp
    1d48:	mov	x20, x1
    1d4c:	ldr	x1, [x1]
    1d50:	mov	x19, x0
    1d54:	bl	1a08 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    1d58:	cbz	x20, 1e68 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x130>
    1d5c:	ldrb	w8, [x20, #16]
    1d60:	cmp	w8, #0x13
    1d64:	b.eq	1e88 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x150>  // b.none
    1d68:	cmp	w8, #0x10
    1d6c:	b.hi	1da8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x70>  // b.pmore
    1d70:	ldr	w9, [x19, #104]
    1d74:	cbz	w9, 1de4 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xac>
    1d78:	orr	x8, x20, #0x8
    1d7c:	cmn	x8, #0x8
    1d80:	b.eq	1ea8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x170>  // b.none
    1d84:	ldr	x8, [x19, #88]
    1d88:	ubfx	x10, x20, #4, #28
    1d8c:	eor	w10, w10, w20, lsr #9
    1d90:	sub	w9, w9, #0x1
    1d94:	and	w10, w9, w10
    1d98:	lsl	x11, x10, #4
    1d9c:	ldr	x11, [x8, x11]
    1da0:	cmp	x11, x20
    1da4:	b.ne	1db8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x80>  // b.any
    1da8:	ldp	x20, x19, [sp, #32]
    1dac:	ldr	x21, [sp, #16]
    1db0:	ldp	x29, x30, [sp], #48
    1db4:	ret
    1db8:	mov	w12, #0x1                   	// #1
    1dbc:	cmn	x11, #0x8
    1dc0:	b.eq	1de4 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xac>  // b.none
    1dc4:	add	w10, w10, w12
    1dc8:	and	w10, w10, w9
    1dcc:	lsl	x11, x10, #4
    1dd0:	ldr	x11, [x8, x11]
    1dd4:	add	w12, w12, #0x1
    1dd8:	cmp	x11, x20
    1ddc:	b.eq	1da8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x70>  // b.none
    1de0:	b	1dbc <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x84>
    1de4:	ldr	w8, [x20, #20]
    1de8:	tbnz	w8, #30, 1e04 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xcc>
    1dec:	and	w8, w8, #0xfffffff
    1df0:	mov	w9, #0x18                  	// #24
    1df4:	mneg	x9, x8, x9
    1df8:	add	x20, x20, x9
    1dfc:	cbnz	x8, 1e10 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xd8>
    1e00:	b	1da8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x70>
    1e04:	ldur	x20, [x20, #-8]
    1e08:	and	x8, x8, #0xfffffff
    1e0c:	cbz	x8, 1da8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x70>
    1e10:	add	x8, x8, x8, lsl #1
    1e14:	lsl	x21, x8, #3
    1e18:	b	1e28 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xf0>
    1e1c:	subs	x21, x21, #0x18
    1e20:	add	x20, x20, #0x18
    1e24:	b.eq	1da8 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x70>  // b.none
    1e28:	ldr	x1, [x20]
    1e2c:	cbz	x1, 1e48 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0x110>
    1e30:	ldrb	w8, [x1, #16]
    1e34:	cmp	w8, #0x12
    1e38:	b.eq	1e1c <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xe4>  // b.none
    1e3c:	mov	x0, x19
    1e40:	bl	1d38 <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE>
    1e44:	b	1e1c <_ZN4llvm15ValueEnumerator20EnumerateOperandTypeEPKNS_5ValueE+0xe4>
    1e48:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e4c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e50:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e54:	add	x0, x0, #0x0
    1e58:	add	x1, x1, #0x0
    1e5c:	add	x3, x3, #0x0
    1e60:	mov	w2, #0x69                  	// #105
    1e64:	bl	0 <__assert_fail>
    1e68:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e6c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e70:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e74:	add	x0, x0, #0x0
    1e78:	add	x1, x1, #0x0
    1e7c:	add	x3, x3, #0x0
    1e80:	mov	w2, #0x69                  	// #105
    1e84:	bl	0 <__assert_fail>
    1e88:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e8c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e90:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1e94:	add	x0, x0, #0x0
    1e98:	add	x1, x1, #0x0
    1e9c:	add	x3, x3, #0x0
    1ea0:	mov	w2, #0x37f                 	// #895
    1ea4:	bl	0 <__assert_fail>
    1ea8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1eac:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1eb0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    1eb4:	add	x0, x0, #0x0
    1eb8:	add	x1, x1, #0x0
    1ebc:	add	x3, x3, #0x0
    1ec0:	mov	w2, #0x252                 	// #594
    1ec4:	bl	0 <__assert_fail>

0000000000001ec8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj>:
    1ec8:	sub	sp, sp, #0x70
    1ecc:	stp	x29, x30, [sp, #16]
    1ed0:	stp	x28, x27, [sp, #32]
    1ed4:	stp	x26, x25, [sp, #48]
    1ed8:	stp	x24, x23, [sp, #64]
    1edc:	stp	x22, x21, [sp, #80]
    1ee0:	stp	x20, x19, [sp, #96]
    1ee4:	add	x29, sp, #0x10
    1ee8:	cmp	w1, w2
    1eec:	b.eq	2298 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3d0>  // b.none
    1ef0:	add	w8, w1, #0x1
    1ef4:	mov	w19, w2
    1ef8:	mov	w21, w1
    1efc:	cmp	w8, w2
    1f00:	b.eq	2298 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3d0>  // b.none
    1f04:	ldrb	w8, [x0, #320]
    1f08:	mov	x20, x0
    1f0c:	cbnz	w8, 2298 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3d0>
    1f10:	ldr	x28, [x20, #112]
    1f14:	mov	w8, w21
    1f18:	str	x8, [sp, #8]
    1f1c:	mov	w9, w19
    1f20:	add	x22, x28, w21, uxtw #4
    1f24:	add	x23, x28, w19, uxtw #4
    1f28:	sub	x8, x23, x22
    1f2c:	cmp	x8, #0x1
    1f30:	str	x9, [sp]
    1f34:	b.lt	1f6c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0xa4>  // b.tstop
    1f38:	adrp	x26, 0 <_ZSt7nothrow>
    1f3c:	ldr	x26, [x26]
    1f40:	asr	x8, x8, #4
    1f44:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
    1f48:	cmp	x8, x9
    1f4c:	csel	x24, x8, x9, lt  // lt = tstop
    1f50:	lsl	x27, x24, #4
    1f54:	mov	x0, x27
    1f58:	mov	x1, x26
    1f5c:	bl	0 <_ZnwmRKSt9nothrow_t>
    1f60:	cbnz	x0, 1f88 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0xc0>
    1f64:	lsr	x24, x24, #1
    1f68:	cbnz	x24, 1f50 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x88>
    1f6c:	mov	x0, x22
    1f70:	mov	x1, x23
    1f74:	mov	x2, x20
    1f78:	bl	63c8 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    1f7c:	ldr	x26, [sp, #8]
    1f80:	mov	x25, xzr
    1f84:	b	2000 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x138>
    1f88:	ldr	x26, [sp, #8]
    1f8c:	mov	x25, x0
    1f90:	cbz	x27, 1fe8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x120>
    1f94:	ldr	q0, [x22]
    1f98:	add	x8, x25, x27
    1f9c:	add	x9, x25, #0x10
    1fa0:	cmp	x8, x9
    1fa4:	str	q0, [x25]
    1fa8:	b.eq	1fd0 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x108>  // b.none
    1fac:	mov	x10, x25
    1fb0:	ldr	q0, [x10]
    1fb4:	add	x9, x10, #0x10
    1fb8:	add	x11, x10, #0x20
    1fbc:	cmp	x11, x8
    1fc0:	str	q0, [x10, #16]
    1fc4:	mov	x10, x9
    1fc8:	b.ne	1fb0 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0xe8>  // b.any
    1fcc:	b	1fd4 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x10c>
    1fd0:	mov	x9, x25
    1fd4:	ldr	x8, [x9]
    1fd8:	str	x8, [x22]
    1fdc:	ldr	w8, [x9, #8]
    1fe0:	add	x9, x28, x26, lsl #4
    1fe4:	str	w8, [x9, #8]
    1fe8:	mov	x0, x22
    1fec:	mov	x1, x23
    1ff0:	mov	x2, x25
    1ff4:	mov	x3, x24
    1ff8:	mov	x4, x20
    1ffc:	bl	646c <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>
    2000:	ldr	x23, [sp]
    2004:	mov	x0, x25
    2008:	bl	0 <_ZdlPv>
    200c:	ldr	x8, [x20, #112]
    2010:	add	x22, x8, x26, lsl #4
    2014:	add	x23, x8, x23, lsl #4
    2018:	sub	x8, x23, x22
    201c:	cmp	x8, #0x40
    2020:	b.lt	20e0 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x218>  // b.tstop
    2024:	lsr	x8, x8, #6
    2028:	add	x8, x8, #0x1
    202c:	ldr	x9, [x22]
    2030:	ldr	x10, [x9]
    2034:	ldrb	w9, [x10, #8]
    2038:	cmp	w9, #0x10
    203c:	b.ne	204c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x184>  // b.any
    2040:	ldr	x9, [x10, #16]
    2044:	ldr	x9, [x9]
    2048:	ldrb	w9, [x9, #8]
    204c:	cmp	w9, #0xb
    2050:	b.ne	2194 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2cc>  // b.any
    2054:	ldr	x9, [x22, #16]
    2058:	ldr	x10, [x9]
    205c:	ldrb	w9, [x10, #8]
    2060:	cmp	w9, #0x10
    2064:	b.ne	2074 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x1ac>  // b.any
    2068:	ldr	x9, [x10, #16]
    206c:	ldr	x9, [x9]
    2070:	ldrb	w9, [x9, #8]
    2074:	cmp	w9, #0xb
    2078:	b.ne	2180 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2b8>  // b.any
    207c:	ldr	x9, [x22, #32]
    2080:	ldr	x10, [x9]
    2084:	ldrb	w9, [x10, #8]
    2088:	cmp	w9, #0x10
    208c:	b.ne	209c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x1d4>  // b.any
    2090:	ldr	x9, [x10, #16]
    2094:	ldr	x9, [x9]
    2098:	ldrb	w9, [x9, #8]
    209c:	cmp	w9, #0xb
    20a0:	b.ne	2188 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2c0>  // b.any
    20a4:	ldr	x9, [x22, #48]
    20a8:	ldr	x10, [x9]
    20ac:	ldrb	w9, [x10, #8]
    20b0:	cmp	w9, #0x10
    20b4:	b.ne	20c4 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x1fc>  // b.any
    20b8:	ldr	x9, [x10, #16]
    20bc:	ldr	x9, [x9]
    20c0:	ldrb	w9, [x9, #8]
    20c4:	cmp	w9, #0xb
    20c8:	b.ne	2190 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2c8>  // b.any
    20cc:	sub	x8, x8, #0x1
    20d0:	cmp	x8, #0x1
    20d4:	add	x22, x22, #0x40
    20d8:	b.gt	202c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x164>
    20dc:	sub	x8, x23, x22
    20e0:	asr	x8, x8, #4
    20e4:	cmp	x8, #0x1
    20e8:	b.eq	2154 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x28c>  // b.none
    20ec:	cmp	x8, #0x2
    20f0:	b.eq	2128 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x260>  // b.none
    20f4:	cmp	x8, #0x3
    20f8:	b.ne	2270 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3a8>  // b.any
    20fc:	ldr	x8, [x22]
    2100:	ldr	x9, [x8]
    2104:	ldrb	w8, [x9, #8]
    2108:	cmp	w8, #0x10
    210c:	b.ne	211c <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x254>  // b.any
    2110:	ldr	x8, [x9, #16]
    2114:	ldr	x8, [x8]
    2118:	ldrb	w8, [x8, #8]
    211c:	cmp	w8, #0xb
    2120:	b.ne	2194 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2cc>  // b.any
    2124:	add	x22, x22, #0x10
    2128:	ldr	x8, [x22]
    212c:	ldr	x9, [x8]
    2130:	ldrb	w8, [x9, #8]
    2134:	cmp	w8, #0x10
    2138:	b.ne	2148 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x280>  // b.any
    213c:	ldr	x8, [x9, #16]
    2140:	ldr	x8, [x8]
    2144:	ldrb	w8, [x8, #8]
    2148:	cmp	w8, #0xb
    214c:	b.ne	2194 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2cc>  // b.any
    2150:	add	x22, x22, #0x10
    2154:	ldr	x8, [x22]
    2158:	ldr	x9, [x8]
    215c:	ldrb	w8, [x9, #8]
    2160:	cmp	w8, #0x10
    2164:	b.ne	2174 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2ac>  // b.any
    2168:	ldr	x8, [x9, #16]
    216c:	ldr	x8, [x8]
    2170:	ldrb	w8, [x8, #8]
    2174:	cmp	w8, #0xb
    2178:	csel	x22, x23, x22, eq  // eq = none
    217c:	b	2194 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2cc>
    2180:	add	x22, x22, #0x10
    2184:	b	2194 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2cc>
    2188:	add	x22, x22, #0x20
    218c:	b	2194 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2cc>
    2190:	add	x22, x22, #0x30
    2194:	cmp	x22, x23
    2198:	b.eq	2270 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3a8>  // b.none
    219c:	sub	x8, x23, x22
    21a0:	cmp	x8, #0x1
    21a4:	asr	x24, x8, #4
    21a8:	b.lt	21e4 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x31c>  // b.tstop
    21ac:	adrp	x27, 0 <_ZSt7nothrow>
    21b0:	ldr	x27, [x27]
    21b4:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
    21b8:	cmp	x24, x8
    21bc:	csel	x25, x24, x8, lt  // lt = tstop
    21c0:	lsl	x28, x25, #4
    21c4:	mov	x0, x28
    21c8:	mov	x1, x27
    21cc:	bl	0 <_ZnwmRKSt9nothrow_t>
    21d0:	cbnz	x0, 21f0 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x328>
    21d4:	lsr	x25, x25, #1
    21d8:	cbnz	x25, 21c0 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x2f8>
    21dc:	mov	x26, xzr
    21e0:	b	2248 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x380>
    21e4:	mov	x25, xzr
    21e8:	mov	x26, xzr
    21ec:	b	2248 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x380>
    21f0:	mov	x26, x0
    21f4:	cbz	x28, 2248 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x380>
    21f8:	ldr	q0, [x22]
    21fc:	add	x8, x26, x28
    2200:	add	x9, x26, #0x10
    2204:	cmp	x8, x9
    2208:	str	q0, [x26]
    220c:	b.eq	2234 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x36c>  // b.none
    2210:	mov	x10, x26
    2214:	ldr	q0, [x10]
    2218:	add	x9, x10, #0x10
    221c:	add	x11, x10, #0x20
    2220:	cmp	x11, x8
    2224:	str	q0, [x10, #16]
    2228:	mov	x10, x9
    222c:	b.ne	2214 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x34c>  // b.any
    2230:	b	2238 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x370>
    2234:	mov	x9, x26
    2238:	ldr	x8, [x9]
    223c:	str	x8, [x22]
    2240:	ldr	w8, [x9, #8]
    2244:	str	w8, [x22, #8]
    2248:	adrp	x2, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    224c:	add	x2, x2, #0x0
    2250:	mov	x0, x22
    2254:	mov	x1, x23
    2258:	mov	x3, x24
    225c:	mov	x4, x26
    2260:	mov	x5, x25
    2264:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2268:	mov	x0, x26
    226c:	bl	0 <_ZdlPv>
    2270:	add	x22, x20, #0x50
    2274:	ldr	x8, [x20, #112]
    2278:	mov	x0, x22
    227c:	add	w23, w21, #0x1
    2280:	add	x1, x8, w21, uxtw #4
    2284:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2288:	cmp	w19, w23
    228c:	mov	w21, w23
    2290:	str	w23, [x0]
    2294:	b.ne	2274 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj+0x3ac>  // b.any
    2298:	ldp	x20, x19, [sp, #96]
    229c:	ldp	x22, x21, [sp, #80]
    22a0:	ldp	x24, x23, [sp, #64]
    22a4:	ldp	x26, x25, [sp, #48]
    22a8:	ldp	x28, x27, [sp, #32]
    22ac:	ldp	x29, x30, [sp, #16]
    22b0:	add	sp, sp, #0x70
    22b4:	ret

00000000000022b8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv>:
    22b8:	stp	x29, x30, [sp, #-96]!
    22bc:	stp	x28, x27, [sp, #16]
    22c0:	stp	x26, x25, [sp, #32]
    22c4:	stp	x24, x23, [sp, #48]
    22c8:	stp	x22, x21, [sp, #64]
    22cc:	stp	x20, x19, [sp, #80]
    22d0:	mov	x29, sp
    22d4:	sub	sp, sp, #0x270
    22d8:	mov	x20, x0
    22dc:	ldr	x19, [x20, #208]!
    22e0:	mov	x23, x20
    22e4:	ldr	w2, [x20, #64]
    22e8:	ldr	x22, [x23, #8]!
    22ec:	sub	x8, x22, x19
    22f0:	cmp	x2, x8, asr #3
    22f4:	b.ne	2c6c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x9b4>  // b.any
    22f8:	cmp	x19, x22
    22fc:	b.eq	2b20 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x868>  // b.none
    2300:	adrp	x9, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2304:	ldr	d0, [x9]
    2308:	add	x8, sp, #0x48
    230c:	mov	x28, x0
    2310:	add	x21, x8, #0x10
    2314:	cmp	w2, #0x41
    2318:	str	x21, [sp, #72]
    231c:	str	d0, [sp, #80]
    2320:	b.cc	233c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x84>  // b.lo, b.ul, b.last
    2324:	add	x0, sp, #0x48
    2328:	mov	w3, #0x8                   	// #8
    232c:	mov	x1, x21
    2330:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2334:	ldr	x19, [x20]
    2338:	ldr	x22, [x23]
    233c:	cmp	x19, x22
    2340:	add	x27, x20, #0x30
    2344:	stp	x23, x20, [sp, #32]
    2348:	str	x28, [sp, #24]
    234c:	b.eq	243c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x184>  // b.none
    2350:	ldr	w10, [x27, #24]
    2354:	cbz	w10, 23d0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x118>
    2358:	ldr	x8, [x19]
    235c:	orr	x9, x8, #0x4
    2360:	cmn	x9, #0x4
    2364:	b.eq	2ba0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x8e8>  // b.none
    2368:	ldr	x9, [x27, #8]
    236c:	ubfx	x11, x8, #4, #28
    2370:	eor	w12, w11, w8, lsr #9
    2374:	sub	w11, w10, #0x1
    2378:	and	w10, w12, w11
    237c:	lsl	x12, x10, #4
    2380:	ldr	x12, [x9, x12]
    2384:	cmp	x12, x8
    2388:	b.ne	23a0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xe8>  // b.any
    238c:	add	x8, x9, x10, lsl #4
    2390:	ldr	x8, [x8, #8]
    2394:	and	x9, x8, #0xffffffff00000000
    2398:	and	x8, x8, #0xffffffff
    239c:	b	23d8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x120>
    23a0:	mov	w13, #0x1                   	// #1
    23a4:	cmn	x12, #0x4
    23a8:	b.eq	23d0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x118>  // b.none
    23ac:	add	w10, w10, w13
    23b0:	and	w10, w10, w11
    23b4:	lsl	x12, x10, #4
    23b8:	ldr	x12, [x9, x12]
    23bc:	add	w13, w13, #0x1
    23c0:	cmp	x12, x8
    23c4:	b.ne	23a4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xec>  // b.any
    23c8:	mov	w10, w10
    23cc:	b	238c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0xd4>
    23d0:	mov	x8, xzr
    23d4:	mov	x9, xzr
    23d8:	ldp	w10, w11, [sp, #80]
    23dc:	orr	x20, x9, x8
    23e0:	cmp	w10, w11
    23e4:	b.cs	2414 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x15c>  // b.hs, b.nlast
    23e8:	ldr	x8, [sp, #72]
    23ec:	str	x20, [x8, w10, uxtw #3]
    23f0:	ldp	w8, w9, [sp, #80]
    23f4:	cmp	w8, w9
    23f8:	b.cs	2bc0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x908>  // b.hs, b.nlast
    23fc:	add	x19, x19, #0x8
    2400:	add	x25, x8, #0x1
    2404:	cmp	x19, x22
    2408:	str	w25, [sp, #80]
    240c:	b.ne	2350 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x98>  // b.any
    2410:	b	2430 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x178>
    2414:	add	x0, sp, #0x48
    2418:	mov	w3, #0x8                   	// #8
    241c:	mov	x1, x21
    2420:	mov	x2, xzr
    2424:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2428:	ldr	w10, [sp, #80]
    242c:	b	23e8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x130>
    2430:	ldr	x22, [sp, #72]
    2434:	add	x21, x22, x25, lsl #3
    2438:	b	244c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x194>
    243c:	ldr	w25, [sp, #80]
    2440:	cbz	w25, 25e8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x330>
    2444:	ldr	x22, [sp, #72]
    2448:	add	x21, x22, w25, uxtw #3
    244c:	clz	x8, x25
    2450:	mov	w9, #0x7e                  	// #126
    2454:	sub	x2, x9, x8, lsl #1
    2458:	mov	x0, x22
    245c:	mov	x1, x21
    2460:	mov	x3, x28
    2464:	bl	799c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_>
    2468:	cmp	w25, #0x11
    246c:	b.cc	2524 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x26c>  // b.lo, b.ul, b.last
    2470:	add	x23, x22, #0x8
    2474:	mov	w19, #0x1                   	// #1
    2478:	mov	x26, x23
    247c:	mov	x20, x22
    2480:	stur	x28, [x29, #-24]
    2484:	b	24a0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1e8>
    2488:	str	x24, [x20]
    248c:	add	x19, x19, #0x1
    2490:	cmp	x19, #0x10
    2494:	add	x26, x26, #0x8
    2498:	mov	x20, x28
    249c:	b.eq	25dc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x324>  // b.none
    24a0:	add	x28, x22, x19, lsl #3
    24a4:	ldr	x1, [x28]
    24a8:	ldr	x2, [x22]
    24ac:	sub	x0, x29, #0x18
    24b0:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    24b4:	tbz	w0, #0, 24d4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x21c>
    24b8:	lsl	x2, x19, #3
    24bc:	ldr	x20, [x22, x2]
    24c0:	mov	x0, x23
    24c4:	mov	x1, x22
    24c8:	bl	0 <memmove>
    24cc:	str	x20, [x22]
    24d0:	b	248c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1d4>
    24d4:	ldur	x8, [x29, #-24]
    24d8:	sub	x0, x29, #0x10
    24dc:	stur	x8, [x29, #-16]
    24e0:	ldr	x24, [x28]
    24e4:	ldr	x2, [x20]
    24e8:	mov	x1, x24
    24ec:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    24f0:	mov	x20, x28
    24f4:	tbz	w0, #0, 2488 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1d0>
    24f8:	mov	x8, x26
    24fc:	mov	x20, x26
    2500:	ldr	x9, [x20, #-8]!
    2504:	ldur	x2, [x8, #-16]
    2508:	sub	x0, x29, #0x10
    250c:	mov	x1, x24
    2510:	str	x9, [x8]
    2514:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    2518:	mov	x8, x20
    251c:	tbnz	w0, #0, 2500 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x248>
    2520:	b	2488 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x1d0>
    2524:	cmp	w25, #0x1
    2528:	stur	x28, [x29, #-24]
    252c:	b.eq	25e8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x330>  // b.none
    2530:	add	x8, x22, #0x8
    2534:	mov	x20, x22
    2538:	b	2550 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x298>
    253c:	str	x23, [x20]
    2540:	add	x8, x19, #0x8
    2544:	cmp	x8, x21
    2548:	mov	x20, x19
    254c:	b.eq	25e8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x330>  // b.none
    2550:	ldr	x1, [x8]
    2554:	ldr	x2, [x22]
    2558:	sub	x0, x29, #0x18
    255c:	mov	x19, x8
    2560:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    2564:	tbz	w0, #0, 258c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x2d4>
    2568:	ldr	x23, [x19]
    256c:	subs	x2, x19, x22
    2570:	b.eq	2584 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x2cc>  // b.none
    2574:	sub	x8, x20, x2
    2578:	add	x0, x8, #0x10
    257c:	mov	x1, x22
    2580:	bl	0 <memmove>
    2584:	str	x23, [x22]
    2588:	b	2540 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x288>
    258c:	ldur	x8, [x29, #-24]
    2590:	sub	x0, x29, #0x10
    2594:	stur	x8, [x29, #-16]
    2598:	ldr	x23, [x19]
    259c:	ldr	x2, [x20]
    25a0:	mov	x1, x23
    25a4:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    25a8:	mov	x20, x19
    25ac:	tbz	w0, #0, 253c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x284>
    25b0:	mov	x8, x19
    25b4:	mov	x20, x19
    25b8:	ldr	x9, [x20, #-8]!
    25bc:	ldur	x2, [x8, #-16]
    25c0:	sub	x0, x29, #0x10
    25c4:	mov	x1, x23
    25c8:	str	x9, [x8]
    25cc:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    25d0:	mov	x8, x20
    25d4:	tbnz	w0, #0, 25b8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x300>
    25d8:	b	253c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x284>
    25dc:	ldr	x28, [sp, #24]
    25e0:	cmp	w25, #0x10
    25e4:	b.ne	2b40 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x888>  // b.any
    25e8:	ldp	x21, x8, [x28, #208]
    25ec:	ldp	x25, x20, [sp, #32]
    25f0:	sub	x22, x8, x21
    25f4:	asr	x24, x22, #3
    25f8:	lsr	x8, x24, #60
    25fc:	stp	xzr, xzr, [x20]
    2600:	str	xzr, [x20, #16]
    2604:	cbnz	x8, 2c8c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x9d4>
    2608:	add	x8, x28, #0xe0
    260c:	stp	x8, x24, [sp, #48]
    2610:	str	x21, [sp, #64]
    2614:	cbz	x22, 2804 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x54c>
    2618:	mov	x0, x22
    261c:	bl	0 <_Znwm>
    2620:	ldr	x24, [x20]
    2624:	ldr	x8, [x25]
    2628:	mov	x23, x0
    262c:	sub	x2, x8, x24
    2630:	cmp	x2, #0x1
    2634:	b.lt	2644 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x38c>  // b.tstop
    2638:	mov	x0, x23
    263c:	mov	x1, x24
    2640:	bl	0 <memmove>
    2644:	cbz	x24, 2650 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x398>
    2648:	mov	x0, x24
    264c:	bl	0 <_ZdlPv>
    2650:	str	x23, [x20]
    2654:	str	x23, [x25]
    2658:	ldp	x9, x24, [sp, #48]
    265c:	ldr	x21, [sp, #64]
    2660:	add	x8, x23, x24, lsl #3
    2664:	str	x8, [x9]
    2668:	ldr	w19, [sp, #80]
    266c:	cbz	w19, 2810 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x558>
    2670:	ldr	x23, [sp, #48]
    2674:	str	x22, [sp, #16]
    2678:	mov	x22, xzr
    267c:	mov	w26, wzr
    2680:	mov	w8, w19
    2684:	b	2698 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3e0>
    2688:	ldr	w8, [sp, #80]
    268c:	cmp	w19, w26
    2690:	add	x22, x22, #0x8
    2694:	b.eq	27f4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x53c>  // b.none
    2698:	cmp	w8, w26
    269c:	b.ls	2ab0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x7f8>  // b.plast
    26a0:	ldr	x9, [sp, #72]
    26a4:	ldr	w10, [x9, x22]
    26a8:	cbnz	w10, 27f4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x53c>
    26ac:	add	x8, x9, x22
    26b0:	ldr	w8, [x8, #4]
    26b4:	cbz	w8, 2be0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x928>
    26b8:	cmp	x24, x8
    26bc:	b.cc	2c00 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x948>  // b.lo, b.ul, b.last
    26c0:	sub	w8, w8, #0x1
    26c4:	cmp	x24, x8
    26c8:	b.ls	2c20 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x968>  // b.plast
    26cc:	ldr	x8, [x21, x8, lsl #3]
    26d0:	stur	x8, [x29, #-16]
    26d4:	ldr	x9, [x25]
    26d8:	ldr	x10, [x23]
    26dc:	cmp	x9, x10
    26e0:	b.eq	26f8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x440>  // b.none
    26e4:	str	x8, [x9]
    26e8:	ldr	x8, [x25]
    26ec:	mov	x9, x25
    26f0:	add	x8, x8, #0x8
    26f4:	b	27bc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x504>
    26f8:	ldr	x23, [x20]
    26fc:	sub	x24, x9, x23
    2700:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    2704:	cmp	x24, x9
    2708:	b.eq	2c60 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x9a8>  // b.none
    270c:	asr	x20, x24, #3
    2710:	cmp	x24, #0x0
    2714:	csinc	x9, x20, xzr, ne  // ne = any
    2718:	adds	x9, x9, x20
    271c:	lsr	x11, x9, #60
    2720:	cset	w10, cs  // cs = hs, nlast
    2724:	cmp	x11, #0x0
    2728:	cset	w11, ne  // ne = any
    272c:	orr	w10, w10, w11
    2730:	cmp	w10, #0x0
    2734:	mov	x10, #0xfffffffffffffff     	// #1152921504606846975
    2738:	mov	x21, x28
    273c:	mov	x28, x27
    2740:	csel	x27, x10, x9, ne  // ne = any
    2744:	cbz	x27, 275c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x4a4>
    2748:	lsl	x0, x27, #3
    274c:	bl	0 <_Znwm>
    2750:	ldur	x8, [x29, #-16]
    2754:	mov	x25, x0
    2758:	b	2760 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x4a8>
    275c:	mov	x25, xzr
    2760:	add	x20, x25, x20, lsl #3
    2764:	cmp	x24, #0x1
    2768:	str	x8, [x20]
    276c:	b.lt	2780 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x4c8>  // b.tstop
    2770:	mov	x0, x25
    2774:	mov	x1, x23
    2778:	mov	x2, x24
    277c:	bl	0 <memmove>
    2780:	add	x20, x20, #0x8
    2784:	cbz	x23, 2790 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x4d8>
    2788:	mov	x0, x23
    278c:	bl	0 <_ZdlPv>
    2790:	ldp	x10, x9, [sp, #32]
    2794:	add	x8, x25, x27, lsl #3
    2798:	mov	x27, x28
    279c:	mov	x28, x21
    27a0:	str	x25, [x9]
    27a4:	str	x20, [x10]
    27a8:	ldp	x23, x24, [sp, #48]
    27ac:	ldr	x21, [sp, #64]
    27b0:	mov	x25, x10
    27b4:	mov	x20, x9
    27b8:	mov	x9, x23
    27bc:	sub	x1, x29, #0x10
    27c0:	mov	x0, x27
    27c4:	str	x8, [x9]
    27c8:	add	w26, w26, #0x1
    27cc:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    27d0:	str	w26, [x0, #4]
    27d4:	ldur	x8, [x29, #-16]
    27d8:	cbz	x8, 2c40 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x988>
    27dc:	ldrb	w8, [x8]
    27e0:	cbnz	w8, 2688 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3d0>
    27e4:	ldr	w8, [x28, #544]
    27e8:	add	w8, w8, #0x1
    27ec:	str	w8, [x28, #544]
    27f0:	b	2688 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3d0>
    27f4:	ldr	x9, [x25]
    27f8:	ldr	x23, [x20]
    27fc:	ldr	x22, [sp, #16]
    2800:	b	2818 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x560>
    2804:	mov	x23, xzr
    2808:	ldr	w19, [sp, #80]
    280c:	cbnz	w19, 2670 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x3b8>
    2810:	mov	w8, wzr
    2814:	mov	x9, x23
    2818:	sub	x10, x9, x23
    281c:	mov	w11, w8
    2820:	cmp	x11, x10, asr #3
    2824:	b.eq	2afc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x844>  // b.none
    2828:	mov	x25, x28
    282c:	ldr	x10, [x25, #248]!
    2830:	mov	x11, x24
    2834:	ldur	x24, [x25, #-16]
    2838:	sub	x10, x10, x24
    283c:	cmp	x11, x10, asr #3
    2840:	b.ls	28a0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x5e8>  // b.plast
    2844:	ldr	x8, [x28, #240]
    2848:	mov	x0, x22
    284c:	sub	x19, x8, x24
    2850:	bl	0 <_Znwm>
    2854:	ldp	x22, x8, [x28, #232]
    2858:	mov	x24, x0
    285c:	sub	x2, x8, x22
    2860:	cmp	x2, #0x1
    2864:	b.lt	2874 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x5bc>  // b.tstop
    2868:	mov	x0, x24
    286c:	mov	x1, x22
    2870:	bl	0 <memmove>
    2874:	asr	x19, x19, #3
    2878:	cbz	x22, 2884 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x5cc>
    287c:	mov	x0, x22
    2880:	bl	0 <_ZdlPv>
    2884:	ldr	x9, [sp, #56]
    2888:	add	x8, x24, x19, lsl #3
    288c:	stp	x24, x8, [x28, #232]
    2890:	add	x9, x24, x9, lsl #3
    2894:	str	x9, [x28, #248]
    2898:	ldp	x23, x9, [x28, #208]
    289c:	ldr	w8, [sp, #80]
    28a0:	sub	x9, x9, x23
    28a4:	lsr	x19, x9, #3
    28a8:	str	x27, [sp, #48]
    28ac:	mov	w27, wzr
    28b0:	mov	w20, wzr
    28b4:	cmp	w8, w19
    28b8:	stur	wzr, [x29, #-24]
    28bc:	b.eq	2ad8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x820>  // b.none
    28c0:	ldp	x24, x23, [sp, #56]
    28c4:	cmp	w8, w19
    28c8:	b.ls	2ab0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x7f8>  // b.plast
    28cc:	add	x10, x28, #0x120
    28d0:	ubfx	x9, x9, #3, #32
    28d4:	mov	w27, wzr
    28d8:	add	x21, x28, #0xf0
    28dc:	stp	x10, x25, [sp, #8]
    28e0:	sub	w10, w8, #0x1
    28e4:	lsl	x26, x9, #3
    28e8:	mov	w22, w19
    28ec:	str	xzr, [sp, #32]
    28f0:	str	w10, [sp, #40]
    28f4:	ldr	x10, [sp, #72]
    28f8:	ldur	w9, [x29, #-24]
    28fc:	ldr	w20, [x10, x26]
    2900:	cbz	w9, 2960 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x6a8>
    2904:	cmp	w9, w20
    2908:	b.eq	2964 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x6ac>  // b.none
    290c:	ldp	x9, x8, [x28, #232]
    2910:	ldr	x0, [sp, #8]
    2914:	sub	x1, x29, #0x18
    2918:	sub	x8, x8, x9
    291c:	lsr	x22, x8, #3
    2920:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2924:	ldr	x8, [sp, #32]
    2928:	ldr	w9, [x0, #12]
    292c:	str	w27, [x0, #12]
    2930:	stp	w8, w22, [x0, #4]
    2934:	ldp	x10, x8, [x28, #232]
    2938:	ldp	x12, x11, [x28, #208]
    293c:	mov	w27, w9
    2940:	stur	w20, [x29, #-24]
    2944:	sub	x10, x8, x10
    2948:	ldr	w8, [sp, #80]
    294c:	sub	x11, x11, x12
    2950:	lsr	x10, x10, #3
    2954:	lsr	x22, x11, #3
    2958:	str	x10, [sp, #32]
    295c:	b	2964 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x6ac>
    2960:	stur	w20, [x29, #-24]
    2964:	cmp	w8, w19
    2968:	b.ls	2ab0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x7f8>  // b.plast
    296c:	ldr	x8, [sp, #72]
    2970:	add	x8, x8, x26
    2974:	ldr	w8, [x8, #4]
    2978:	cbz	w8, 2be0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x928>
    297c:	cmp	x24, x8
    2980:	b.cc	2c00 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x948>  // b.lo, b.ul, b.last
    2984:	sub	w8, w8, #0x1
    2988:	cmp	x24, x8
    298c:	b.ls	2c20 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x968>  // b.plast
    2990:	ldr	x8, [x23, x8, lsl #3]
    2994:	stur	x8, [x29, #-16]
    2998:	ldr	x9, [x21]
    299c:	ldr	x10, [x25]
    29a0:	cmp	x9, x10
    29a4:	b.eq	29bc <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x704>  // b.none
    29a8:	str	x8, [x9]
    29ac:	ldr	x8, [x21]
    29b0:	mov	x9, x21
    29b4:	add	x8, x8, #0x8
    29b8:	b	2a64 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x7ac>
    29bc:	ldr	x23, [x28, #232]
    29c0:	sub	x24, x9, x23
    29c4:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    29c8:	cmp	x24, x9
    29cc:	b.eq	2c60 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x9a8>  // b.none
    29d0:	asr	x28, x24, #3
    29d4:	cmp	x24, #0x0
    29d8:	csinc	x9, x28, xzr, ne  // ne = any
    29dc:	adds	x9, x9, x28
    29e0:	lsr	x11, x9, #60
    29e4:	cset	w10, cs  // cs = hs, nlast
    29e8:	cmp	x11, #0x0
    29ec:	cset	w11, ne  // ne = any
    29f0:	orr	w10, w10, w11
    29f4:	cmp	w10, #0x0
    29f8:	mov	x10, #0xfffffffffffffff     	// #1152921504606846975
    29fc:	csel	x20, x10, x9, ne  // ne = any
    2a00:	cbz	x20, 2a18 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x760>
    2a04:	lsl	x0, x20, #3
    2a08:	bl	0 <_Znwm>
    2a0c:	ldur	x8, [x29, #-16]
    2a10:	mov	x25, x0
    2a14:	b	2a1c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x764>
    2a18:	mov	x25, xzr
    2a1c:	add	x28, x25, x28, lsl #3
    2a20:	cmp	x24, #0x1
    2a24:	str	x8, [x28]
    2a28:	b.lt	2a3c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x784>  // b.tstop
    2a2c:	mov	x0, x25
    2a30:	mov	x1, x23
    2a34:	mov	x2, x24
    2a38:	bl	0 <memmove>
    2a3c:	add	x24, x28, #0x8
    2a40:	cbz	x23, 2a4c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x794>
    2a44:	mov	x0, x23
    2a48:	bl	0 <_ZdlPv>
    2a4c:	ldr	x28, [sp, #24]
    2a50:	add	x8, x25, x20, lsl #3
    2a54:	stp	x25, x24, [x28, #232]
    2a58:	ldr	x25, [sp, #16]
    2a5c:	ldp	x24, x23, [sp, #56]
    2a60:	mov	x9, x25
    2a64:	ldr	x0, [sp, #48]
    2a68:	sub	x1, x29, #0x10
    2a6c:	str	x8, [x9]
    2a70:	add	w22, w22, #0x1
    2a74:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2a78:	str	w22, [x0, #4]
    2a7c:	ldur	x8, [x29, #-16]
    2a80:	cbz	x8, 2c40 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x988>
    2a84:	ldrb	w8, [x8]
    2a88:	cmp	w8, #0x0
    2a8c:	ldr	w8, [sp, #40]
    2a90:	cinc	w27, w27, eq  // eq = none
    2a94:	cmp	w8, w19
    2a98:	b.eq	2ad0 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x818>  // b.none
    2a9c:	ldr	w8, [sp, #80]
    2aa0:	add	w19, w19, #0x1
    2aa4:	add	x26, x26, #0x8
    2aa8:	cmp	w8, w19
    2aac:	b.hi	28f4 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x63c>  // b.pmore
    2ab0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ab4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ab8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2abc:	add	x0, x0, #0x0
    2ac0:	add	x1, x1, #0x0
    2ac4:	add	x3, x3, #0x0
    2ac8:	mov	w2, #0x95                  	// #149
    2acc:	bl	0 <__assert_fail>
    2ad0:	ldr	x24, [x28, #232]
    2ad4:	ldr	x20, [sp, #32]
    2ad8:	ldr	x8, [x28, #240]
    2adc:	add	x0, x28, #0x120
    2ae0:	sub	x1, x29, #0x18
    2ae4:	sub	x8, x8, x24
    2ae8:	lsr	x19, x8, #3
    2aec:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2af0:	stp	w20, w19, [x0, #4]
    2af4:	ldr	x21, [sp, #64]
    2af8:	str	w27, [x0, #12]
    2afc:	cbz	x21, 2b08 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x850>
    2b00:	mov	x0, x21
    2b04:	bl	0 <_ZdlPv>
    2b08:	ldr	x0, [sp, #72]
    2b0c:	add	x8, sp, #0x48
    2b10:	add	x8, x8, #0x10
    2b14:	cmp	x0, x8
    2b18:	b.eq	2b20 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x868>  // b.none
    2b1c:	bl	0 <free>
    2b20:	add	sp, sp, #0x270
    2b24:	ldp	x20, x19, [sp, #80]
    2b28:	ldp	x22, x21, [sp, #64]
    2b2c:	ldp	x24, x23, [sp, #48]
    2b30:	ldp	x26, x25, [sp, #32]
    2b34:	ldp	x28, x27, [sp, #16]
    2b38:	ldp	x29, x30, [sp], #96
    2b3c:	ret
    2b40:	add	x19, x22, #0x80
    2b44:	b	2b58 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x8a0>
    2b48:	add	x19, x19, #0x8
    2b4c:	cmp	x19, x21
    2b50:	str	x22, [x20]
    2b54:	b.eq	25e8 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x330>  // b.none
    2b58:	stur	x28, [x29, #-16]
    2b5c:	ldp	x2, x22, [x19, #-8]
    2b60:	sub	x0, x29, #0x10
    2b64:	mov	x1, x22
    2b68:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    2b6c:	mov	x20, x19
    2b70:	tbz	w0, #0, 2b48 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x890>
    2b74:	mov	x8, x19
    2b78:	mov	x20, x19
    2b7c:	ldr	x9, [x20, #-8]!
    2b80:	ldur	x2, [x8, #-16]
    2b84:	sub	x0, x29, #0x10
    2b88:	mov	x1, x22
    2b8c:	str	x9, [x8]
    2b90:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    2b94:	mov	x8, x20
    2b98:	tbnz	w0, #0, 2b7c <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x8c4>
    2b9c:	b	2b48 <_ZN4llvm15ValueEnumerator16organizeMetadataEv+0x890>
    2ba0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ba4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ba8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2bac:	add	x0, x0, #0x0
    2bb0:	add	x1, x1, #0x0
    2bb4:	add	x3, x3, #0x0
    2bb8:	mov	w2, #0x252                 	// #594
    2bbc:	bl	0 <__assert_fail>
    2bc0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2bc4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2bc8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2bcc:	add	x0, x0, #0x0
    2bd0:	add	x1, x1, #0x0
    2bd4:	add	x3, x3, #0x0
    2bd8:	mov	w2, #0x43                  	// #67
    2bdc:	bl	0 <__assert_fail>
    2be0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2be4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2be8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2bec:	add	x0, x0, #0x0
    2bf0:	add	x1, x1, #0x0
    2bf4:	add	x3, x3, #0x0
    2bf8:	mov	w2, #0x55                  	// #85
    2bfc:	bl	0 <__assert_fail>
    2c00:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c04:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c08:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c0c:	add	x0, x0, #0x0
    2c10:	add	x1, x1, #0x0
    2c14:	add	x3, x3, #0x0
    2c18:	mov	w2, #0x56                  	// #86
    2c1c:	bl	0 <__assert_fail>
    2c20:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c24:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c28:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c2c:	add	x0, x0, #0x0
    2c30:	add	x1, x1, #0x0
    2c34:	add	x3, x3, #0x0
    2c38:	mov	w2, #0xfa                  	// #250
    2c3c:	bl	0 <__assert_fail>
    2c40:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c44:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c48:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c4c:	add	x0, x0, #0x0
    2c50:	add	x1, x1, #0x0
    2c54:	add	x3, x3, #0x0
    2c58:	mov	w2, #0x69                  	// #105
    2c5c:	bl	0 <__assert_fail>
    2c60:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c64:	add	x0, x0, #0x0
    2c68:	bl	0 <_ZSt20__throw_length_errorPKc>
    2c6c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c70:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c74:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c78:	add	x0, x0, #0x0
    2c7c:	add	x1, x1, #0x0
    2c80:	add	x3, x3, #0x0
    2c84:	mov	w2, #0x2d7                 	// #727
    2c88:	bl	0 <__assert_fail>
    2c8c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2c90:	add	x0, x0, #0x0
    2c94:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000002c98 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE>:
    2c98:	stp	x29, x30, [sp, #-16]!
    2c9c:	mov	x29, sp
    2ca0:	ldr	w8, [x0, #496]
    2ca4:	ldr	x9, [x0, #480]
    2ca8:	cbz	w8, 2d04 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x6c>
    2cac:	orr	x10, x1, #0x8
    2cb0:	cmn	x10, #0x8
    2cb4:	b.eq	2d20 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x88>  // b.none
    2cb8:	ubfx	x10, x1, #4, #28
    2cbc:	eor	w11, w10, w1, lsr #9
    2cc0:	sub	w10, w8, #0x1
    2cc4:	and	w11, w10, w11
    2cc8:	add	x12, x9, w11, uxtw #4
    2ccc:	ldr	x13, [x12]
    2cd0:	cmp	x13, x1
    2cd4:	b.eq	2d08 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x70>  // b.none
    2cd8:	mov	w14, #0x1                   	// #1
    2cdc:	cmn	x13, #0x8
    2ce0:	b.eq	2d04 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x6c>  // b.none
    2ce4:	add	w11, w11, w14
    2ce8:	and	w11, w11, w10
    2cec:	add	x12, x9, w11, uxtw #4
    2cf0:	ldr	x13, [x12]
    2cf4:	add	w14, w14, #0x1
    2cf8:	cmp	x13, x1
    2cfc:	b.eq	2d08 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x70>  // b.none
    2d00:	b	2cdc <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0x44>
    2d04:	add	x12, x9, x8, lsl #4
    2d08:	add	x8, x9, x8, lsl #4
    2d0c:	cmp	x12, x8
    2d10:	b.eq	2d40 <_ZNK4llvm15ValueEnumerator16getInstructionIDEPKNS_11InstructionE+0xa8>  // b.none
    2d14:	ldr	w0, [x12, #8]
    2d18:	ldp	x29, x30, [sp], #16
    2d1c:	ret
    2d20:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d24:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d28:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d2c:	add	x0, x0, #0x0
    2d30:	add	x1, x1, #0x0
    2d34:	add	x3, x3, #0x0
    2d38:	mov	w2, #0x252                 	// #594
    2d3c:	bl	0 <__assert_fail>
    2d40:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d44:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d48:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2d4c:	add	x0, x0, #0x0
    2d50:	add	x1, x1, #0x0
    2d54:	add	x3, x3, #0x0
    2d58:	mov	w2, #0x1bb                 	// #443
    2d5c:	bl	0 <__assert_fail>

0000000000002d60 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE>:
    2d60:	stp	x29, x30, [sp, #-16]!
    2d64:	mov	x29, sp
    2d68:	ldr	x10, [x0, #152]
    2d6c:	cbz	x10, 2dc4 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE+0x64>
    2d70:	add	x8, x0, #0x90
    2d74:	mov	x9, x8
    2d78:	ldr	x11, [x10, #32]
    2d7c:	add	x12, x10, #0x18
    2d80:	add	x13, x10, #0x10
    2d84:	cmp	x11, x1
    2d88:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    2d8c:	csel	x10, x12, x13, cc  // cc = lo, ul, last
    2d90:	ldr	x10, [x10]
    2d94:	cbnz	x10, 2d78 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE+0x18>
    2d98:	cmp	x9, x8
    2d9c:	b.eq	2dc4 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE+0x64>  // b.none
    2da0:	ldr	x10, [x9, #32]
    2da4:	cmp	x10, x1
    2da8:	csel	x9, x8, x9, hi  // hi = pmore
    2dac:	cmp	x9, x8
    2db0:	b.eq	2dc4 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE+0x64>  // b.none
    2db4:	ldr	w0, [x9, #40]
    2db8:	cbz	w0, 2dc4 <_ZNK4llvm15ValueEnumerator11getComdatIDEPKNS_6ComdatE+0x64>
    2dbc:	ldp	x29, x30, [sp], #16
    2dc0:	ret
    2dc4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2dc8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2dcc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2dd0:	add	x0, x0, #0x0
    2dd4:	add	x1, x1, #0x0
    2dd8:	add	x3, x3, #0x0
    2ddc:	mov	w2, #0x1c1                 	// #449
    2de0:	bl	0 <__assert_fail>

0000000000002de4 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE>:
    2de4:	stp	x29, x30, [sp, #-32]!
    2de8:	str	x19, [sp, #16]
    2dec:	mov	x29, sp
    2df0:	str	x1, [x29, #24]
    2df4:	ldr	w19, [x0, #504]
    2df8:	ldr	w8, [x0, #496]
    2dfc:	add	w9, w19, #0x1
    2e00:	str	w9, [x0, #504]
    2e04:	cbz	w8, 2e78 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0x94>
    2e08:	orr	x9, x1, #0x8
    2e0c:	cmn	x9, #0x8
    2e10:	b.eq	2eb8 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0xd4>  // b.none
    2e14:	ldr	x9, [x0, #480]
    2e18:	ubfx	x10, x1, #4, #28
    2e1c:	eor	w11, w10, w1, lsr #9
    2e20:	sub	w10, w8, #0x1
    2e24:	and	w11, w11, w10
    2e28:	add	x8, x9, w11, uxtw #4
    2e2c:	ldr	x13, [x8]
    2e30:	cmp	x13, x1
    2e34:	b.eq	2e9c <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0xb8>  // b.none
    2e38:	mov	x12, xzr
    2e3c:	mov	w15, #0x1                   	// #1
    2e40:	mov	x14, #0xfffffffffffffff0    	// #-16
    2e44:	cmn	x13, #0x8
    2e48:	b.eq	2eac <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0xc8>  // b.none
    2e4c:	cmp	x12, #0x0
    2e50:	add	w11, w11, w15
    2e54:	ccmp	x13, x14, #0x0, eq  // eq = none
    2e58:	and	w11, w11, w10
    2e5c:	csel	x12, x12, x8, ne  // ne = any
    2e60:	add	x8, x9, w11, uxtw #4
    2e64:	ldr	x13, [x8]
    2e68:	add	w15, w15, #0x1
    2e6c:	cmp	x13, x1
    2e70:	b.eq	2e9c <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0xb8>  // b.none
    2e74:	b	2e44 <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0x60>
    2e78:	mov	x3, xzr
    2e7c:	add	x0, x0, #0x1d8
    2e80:	add	x1, x29, #0x18
    2e84:	add	x2, x29, #0x18
    2e88:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2e8c:	ldr	x9, [x29, #24]
    2e90:	mov	x8, x0
    2e94:	str	wzr, [x0, #8]
    2e98:	str	x9, [x0]
    2e9c:	str	w19, [x8, #8]
    2ea0:	ldr	x19, [sp, #16]
    2ea4:	ldp	x29, x30, [sp], #32
    2ea8:	ret
    2eac:	cmp	x12, #0x0
    2eb0:	csel	x3, x8, x12, eq  // eq = none
    2eb4:	b	2e7c <_ZN4llvm15ValueEnumerator16setInstructionIDEPKNS_11InstructionE+0x98>
    2eb8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ebc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ec0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ec4:	add	x0, x0, #0x0
    2ec8:	add	x1, x1, #0x0
    2ecc:	add	x3, x3, #0x0
    2ed0:	mov	w2, #0x252                 	// #594
    2ed4:	bl	0 <__assert_fail>

0000000000002ed8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>:
    2ed8:	stp	x29, x30, [sp, #-16]!
    2edc:	mov	x29, sp
    2ee0:	cbz	x1, 2f80 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xa8>
    2ee4:	ldrb	w8, [x1, #16]
    2ee8:	cmp	w8, #0x13
    2eec:	b.ne	2efc <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x24>  // b.any
    2ef0:	ldr	x1, [x1, #24]
    2ef4:	ldp	x29, x30, [sp], #16
    2ef8:	b	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2efc:	ldr	w8, [x0, #104]
    2f00:	ldr	x9, [x0, #88]
    2f04:	cbz	w8, 2f60 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x88>
    2f08:	orr	x10, x1, #0x8
    2f0c:	cmn	x10, #0x8
    2f10:	b.eq	2fa0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xc8>  // b.none
    2f14:	ubfx	x10, x1, #4, #28
    2f18:	eor	w11, w10, w1, lsr #9
    2f1c:	sub	w10, w8, #0x1
    2f20:	and	w11, w10, w11
    2f24:	add	x12, x9, w11, uxtw #4
    2f28:	ldr	x13, [x12]
    2f2c:	cmp	x13, x1
    2f30:	b.eq	2f64 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x8c>  // b.none
    2f34:	mov	w14, #0x1                   	// #1
    2f38:	cmn	x13, #0x8
    2f3c:	b.eq	2f60 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x88>  // b.none
    2f40:	add	w11, w11, w14
    2f44:	and	w11, w11, w10
    2f48:	add	x12, x9, w11, uxtw #4
    2f4c:	ldr	x13, [x12]
    2f50:	add	w14, w14, #0x1
    2f54:	cmp	x13, x1
    2f58:	b.eq	2f64 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x8c>  // b.none
    2f5c:	b	2f38 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0x60>
    2f60:	add	x12, x9, x8, lsl #4
    2f64:	add	x8, x9, x8, lsl #4
    2f68:	cmp	x12, x8
    2f6c:	b.eq	2fc0 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE+0xe8>  // b.none
    2f70:	ldr	w8, [x12, #8]
    2f74:	sub	w0, w8, #0x1
    2f78:	ldp	x29, x30, [sp], #16
    2f7c:	ret
    2f80:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f84:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f88:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2f8c:	add	x0, x0, #0x0
    2f90:	add	x1, x1, #0x0
    2f94:	add	x3, x3, #0x0
    2f98:	mov	w2, #0x69                  	// #105
    2f9c:	bl	0 <__assert_fail>
    2fa0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2fa4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2fa8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2fac:	add	x0, x0, #0x0
    2fb0:	add	x1, x1, #0x0
    2fb4:	add	x3, x3, #0x0
    2fb8:	mov	w2, #0x252                 	// #594
    2fbc:	bl	0 <__assert_fail>
    2fc0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2fc4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2fc8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2fcc:	add	x0, x0, #0x0
    2fd0:	add	x1, x1, #0x0
    2fd4:	add	x3, x3, #0x0
    2fd8:	mov	w2, #0x1ce                 	// #462
    2fdc:	bl	0 <__assert_fail>

0000000000002fe0 <_ZNK4llvm15ValueEnumerator4dumpEv>:
    2fe0:	stp	x29, x30, [sp, #-32]!
    2fe4:	str	x19, [sp, #16]
    2fe8:	mov	x29, sp
    2fec:	mov	x19, x0
    2ff0:	bl	0 <_ZN4llvm4dbgsEv>
    2ff4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    2ff8:	add	x2, x19, #0x50
    2ffc:	add	x3, x3, #0x0
    3000:	mov	x1, x0
    3004:	bl	3088 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc>
    3008:	bl	0 <_ZN4llvm4dbgsEv>
    300c:	ldp	x9, x8, [x0, #16]
    3010:	cmp	x8, x9
    3014:	b.cs	302c <_ZNK4llvm15ValueEnumerator4dumpEv+0x4c>  // b.hs, b.nlast
    3018:	add	x9, x8, #0x1
    301c:	mov	w10, #0xa                   	// #10
    3020:	str	x9, [x0, #24]
    3024:	strb	w10, [x8]
    3028:	b	3034 <_ZNK4llvm15ValueEnumerator4dumpEv+0x54>
    302c:	mov	w1, #0xa                   	// #10
    3030:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    3034:	bl	0 <_ZN4llvm4dbgsEv>
    3038:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    303c:	add	x2, x19, #0x100
    3040:	add	x3, x3, #0x0
    3044:	mov	x1, x0
    3048:	bl	36c4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc>
    304c:	bl	0 <_ZN4llvm4dbgsEv>
    3050:	ldp	x9, x8, [x0, #16]
    3054:	cmp	x8, x9
    3058:	b.cs	3078 <_ZNK4llvm15ValueEnumerator4dumpEv+0x98>  // b.hs, b.nlast
    305c:	ldr	x19, [sp, #16]
    3060:	add	x9, x8, #0x1
    3064:	mov	w10, #0xa                   	// #10
    3068:	str	x9, [x0, #24]
    306c:	strb	w10, [x8]
    3070:	ldp	x29, x30, [sp], #32
    3074:	ret
    3078:	ldr	x19, [sp, #16]
    307c:	mov	w1, #0xa                   	// #10
    3080:	ldp	x29, x30, [sp], #32
    3084:	b	0 <_ZN4llvm11raw_ostream5writeEh>

0000000000003088 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc>:
    3088:	sub	sp, sp, #0x70
    308c:	stp	x29, x30, [sp, #16]
    3090:	stp	x28, x27, [sp, #32]
    3094:	stp	x26, x25, [sp, #48]
    3098:	stp	x24, x23, [sp, #64]
    309c:	stp	x22, x21, [sp, #80]
    30a0:	stp	x20, x19, [sp, #96]
    30a4:	add	x29, sp, #0x10
    30a8:	ldp	x9, x8, [x1, #16]
    30ac:	mov	x22, x3
    30b0:	mov	x21, x1
    30b4:	str	x2, [sp, #8]
    30b8:	sub	x9, x9, x8
    30bc:	cmp	x9, #0x9
    30c0:	b.hi	30f0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x68>  // b.pmore
    30c4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    30c8:	add	x1, x1, #0x0
    30cc:	mov	w2, #0xa                   	// #10
    30d0:	mov	x0, x21
    30d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    30d8:	mov	x19, x0
    30dc:	cbz	x22, 311c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x94>
    30e0:	mov	x0, x22
    30e4:	bl	0 <strlen>
    30e8:	mov	x23, x0
    30ec:	b	3120 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x98>
    30f0:	adrp	x9, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    30f4:	add	x9, x9, #0x0
    30f8:	ldr	x9, [x9]
    30fc:	mov	w10, #0x203a                	// #8250
    3100:	strh	w10, [x8, #8]
    3104:	mov	x19, x21
    3108:	str	x9, [x8]
    310c:	ldr	x8, [x21, #24]
    3110:	add	x8, x8, #0xa
    3114:	str	x8, [x21, #24]
    3118:	cbnz	x22, 30e0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x58>
    311c:	mov	x23, xzr
    3120:	ldp	x8, x0, [x19, #16]
    3124:	sub	x8, x8, x0
    3128:	cmp	x23, x8
    312c:	b.ls	314c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0xc4>  // b.plast
    3130:	mov	x0, x19
    3134:	mov	x1, x22
    3138:	mov	x2, x23
    313c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3140:	mov	x19, x0
    3144:	ldr	x0, [x0, #24]
    3148:	b	3168 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0xe0>
    314c:	cbz	x23, 3168 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0xe0>
    3150:	mov	x1, x22
    3154:	mov	x2, x23
    3158:	bl	0 <memcpy>
    315c:	ldr	x8, [x19, #24]
    3160:	add	x0, x8, x23
    3164:	str	x0, [x19, #24]
    3168:	ldr	x8, [x19, #16]
    316c:	cmp	x8, x0
    3170:	b.ne	318c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x104>  // b.any
    3174:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3178:	add	x1, x1, #0x0
    317c:	mov	w2, #0x1                   	// #1
    3180:	mov	x0, x19
    3184:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3188:	b	31a0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x118>
    318c:	mov	w8, #0xa                   	// #10
    3190:	strb	w8, [x0]
    3194:	ldr	x8, [x19, #24]
    3198:	add	x8, x8, #0x1
    319c:	str	x8, [x19, #24]
    31a0:	ldp	x9, x8, [x21, #16]
    31a4:	sub	x9, x9, x8
    31a8:	cmp	x9, #0x5
    31ac:	b.hi	31c8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x140>  // b.pmore
    31b0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    31b4:	add	x1, x1, #0x0
    31b8:	mov	w2, #0x6                   	// #6
    31bc:	mov	x0, x21
    31c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    31c4:	b	31ec <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x164>
    31c8:	mov	w10, #0x6953                	// #26963
    31cc:	mov	w9, #0x203a                	// #8250
    31d0:	movk	w10, #0x657a, lsl #16
    31d4:	strh	w9, [x8, #4]
    31d8:	str	w10, [x8]
    31dc:	ldr	x8, [x21, #24]
    31e0:	mov	x0, x21
    31e4:	add	x8, x8, #0x6
    31e8:	str	x8, [x21, #24]
    31ec:	ldr	x8, [sp, #8]
    31f0:	ldr	w1, [x8, #16]
    31f4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    31f8:	ldp	x9, x8, [x0, #16]
    31fc:	cmp	x9, x8
    3200:	b.ne	3218 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x190>  // b.any
    3204:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3208:	add	x1, x1, #0x0
    320c:	mov	w2, #0x1                   	// #1
    3210:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3214:	b	322c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x1a4>
    3218:	mov	w9, #0xa                   	// #10
    321c:	strb	w9, [x8]
    3220:	ldr	x8, [x0, #24]
    3224:	add	x8, x8, #0x1
    3228:	str	x8, [x0, #24]
    322c:	ldr	x11, [sp, #8]
    3230:	ldr	w9, [x11, #24]
    3234:	ldr	w10, [x11, #16]
    3238:	ldp	x11, x8, [x11]
    323c:	add	x22, x8, x9, lsl #4
    3240:	mov	x20, x22
    3244:	str	x11, [sp]
    3248:	cbz	w10, 3274 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x1ec>
    324c:	cbz	w9, 3280 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x1f8>
    3250:	lsl	x9, x9, #4
    3254:	add	x20, x9, x8
    3258:	ldr	x10, [x8]
    325c:	orr	x10, x10, #0x8
    3260:	cmn	x10, #0x8
    3264:	b.ne	3280 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x1f8>  // b.any
    3268:	subs	x9, x9, #0x10
    326c:	add	x8, x8, #0x10
    3270:	b.ne	3258 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x1d0>  // b.any
    3274:	cmp	x20, x22
    3278:	b.ne	328c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x204>  // b.any
    327c:	b	3644 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x5bc>
    3280:	mov	x20, x8
    3284:	cmp	x20, x22
    3288:	b.eq	3644 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x5bc>  // b.none
    328c:	adrp	x26, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3290:	adrp	x27, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3294:	add	x26, x26, #0x0
    3298:	add	x27, x27, #0x0
    329c:	mov	w25, #0x2c                  	// #44
    32a0:	b	32b0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x228>
    32a4:	mov	x20, x8
    32a8:	cmp	x20, x22
    32ac:	b.eq	3644 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x5bc>  // b.none
    32b0:	ldr	x28, [x20]
    32b4:	ldp	x9, x8, [x21, #16]
    32b8:	ldrb	w10, [x28, #23]
    32bc:	sub	x9, x9, x8
    32c0:	tbnz	w10, #5, 32e4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x25c>
    32c4:	cmp	x9, #0xd
    32c8:	b.hi	3308 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x280>  // b.pmore
    32cc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    32d0:	mov	w2, #0xe                   	// #14
    32d4:	mov	x0, x21
    32d8:	add	x1, x1, #0x0
    32dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    32e0:	b	33a4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x31c>
    32e4:	cmp	x9, #0x6
    32e8:	b.hi	3330 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x2a8>  // b.pmore
    32ec:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    32f0:	mov	w2, #0x7                   	// #7
    32f4:	mov	x0, x21
    32f8:	add	x1, x1, #0x0
    32fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3300:	mov	x19, x0
    3304:	b	3358 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x2d0>
    3308:	adrp	x10, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    330c:	add	x10, x10, #0x0
    3310:	ldur	x9, [x10, #6]
    3314:	ldr	x10, [x10]
    3318:	stur	x9, [x8, #6]
    331c:	str	x10, [x8]
    3320:	ldr	x8, [x21, #24]
    3324:	add	x8, x8, #0xe
    3328:	str	x8, [x21, #24]
    332c:	b	33a4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x31c>
    3330:	mov	w9, #0x6575                	// #25973
    3334:	movk	w9, #0x203a, lsl #16
    3338:	stur	w9, [x8, #3]
    333c:	mov	w9, #0x6156                	// #24918
    3340:	movk	w9, #0x756c, lsl #16
    3344:	str	w9, [x8]
    3348:	ldr	x8, [x21, #24]
    334c:	mov	x19, x21
    3350:	add	x8, x8, #0x7
    3354:	str	x8, [x21, #24]
    3358:	mov	x0, x28
    335c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    3360:	ldp	x9, x8, [x19, #16]
    3364:	mov	x23, x1
    3368:	sub	x9, x9, x8
    336c:	cmp	x1, x9
    3370:	mov	x1, x0
    3374:	b.ls	3388 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x300>  // b.plast
    3378:	mov	x0, x19
    337c:	mov	x2, x23
    3380:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3384:	b	33a4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x31c>
    3388:	cbz	x23, 33a4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x31c>
    338c:	mov	x0, x8
    3390:	mov	x2, x23
    3394:	bl	0 <memcpy>
    3398:	ldr	x8, [x19, #24]
    339c:	add	x8, x8, x23
    33a0:	str	x8, [x19, #24]
    33a4:	bl	0 <_ZN4llvm4errsEv>
    33a8:	mov	x1, x0
    33ac:	mov	x0, x28
    33b0:	mov	w2, wzr
    33b4:	bl	0 <_ZNK4llvm5Value5printERNS_11raw_ostreamEb>
    33b8:	bl	0 <_ZN4llvm4errsEv>
    33bc:	ldp	x9, x8, [x0, #16]
    33c0:	cmp	x8, x9
    33c4:	b.cs	33dc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x354>  // b.hs, b.nlast
    33c8:	add	x9, x8, #0x1
    33cc:	str	x9, [x0, #24]
    33d0:	mov	w9, #0xa                   	// #10
    33d4:	strb	w9, [x8]
    33d8:	b	33e4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x35c>
    33dc:	mov	w1, #0xa                   	// #10
    33e0:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
    33e4:	ldp	x9, x8, [x21, #16]
    33e8:	sub	x9, x9, x8
    33ec:	cmp	x9, #0x5
    33f0:	b.hi	3410 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x388>  // b.pmore
    33f4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    33f8:	mov	w2, #0x6                   	// #6
    33fc:	mov	x0, x21
    3400:	add	x1, x1, #0x0
    3404:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3408:	mov	x19, x0
    340c:	b	3434 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x3ac>
    3410:	mov	w9, #0x2873                	// #10355
    3414:	strh	w9, [x8, #4]
    3418:	mov	w9, #0x5520                	// #21792
    341c:	movk	w9, #0x6573, lsl #16
    3420:	str	w9, [x8]
    3424:	ldr	x8, [x21, #24]
    3428:	mov	x19, x21
    342c:	add	x8, x8, #0x6
    3430:	str	x8, [x21, #24]
    3434:	mov	x0, x28
    3438:	bl	0 <_ZNK4llvm5Value10getNumUsesEv>
    343c:	mov	w1, w0
    3440:	mov	x0, x19
    3444:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    3448:	ldp	x9, x8, [x0, #16]
    344c:	sub	x9, x9, x8
    3450:	cmp	x9, #0x1
    3454:	b.hi	346c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x3e4>  // b.pmore
    3458:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    345c:	mov	w2, #0x2                   	// #2
    3460:	add	x1, x1, #0x0
    3464:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3468:	b	3480 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x3f8>
    346c:	mov	w9, #0x3a29                	// #14889
    3470:	strh	w9, [x8]
    3474:	ldr	x8, [x0, #24]
    3478:	add	x8, x8, #0x2
    347c:	str	x8, [x0, #24]
    3480:	mov	x0, x28
    3484:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    3488:	ldr	x24, [x28, #8]
    348c:	cbnz	x24, 34e4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x45c>
    3490:	ldp	x9, x8, [x21, #16]
    3494:	sub	x9, x9, x8
    3498:	cmp	x9, #0x1
    349c:	b.hi	35e8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x560>  // b.pmore
    34a0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    34a4:	mov	w2, #0x2                   	// #2
    34a8:	mov	x0, x21
    34ac:	add	x1, x1, #0x0
    34b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    34b4:	b	35fc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x574>
    34b8:	mov	w9, #0x6c75                	// #27765
    34bc:	movk	w9, #0x5d6c, lsl #16
    34c0:	stur	w9, [x8, #3]
    34c4:	mov	w9, #0x5b20                	// #23328
    34c8:	movk	w9, #0x756e, lsl #16
    34cc:	str	w9, [x8]
    34d0:	ldr	x8, [x21, #24]
    34d4:	add	x8, x8, #0x7
    34d8:	str	x8, [x21, #24]
    34dc:	ldr	x24, [x24, #8]
    34e0:	cbz	x24, 3490 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x408>
    34e4:	mov	x0, x28
    34e8:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    34ec:	ldr	x8, [x28, #8]
    34f0:	cbz	x8, 3664 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x5dc>
    34f4:	cmp	x24, x8
    34f8:	b.eq	352c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x4a4>  // b.none
    34fc:	ldp	x9, x8, [x21, #16]
    3500:	cmp	x9, x8
    3504:	b.ne	351c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x494>  // b.any
    3508:	mov	w2, #0x1                   	// #1
    350c:	mov	x0, x21
    3510:	mov	x1, x27
    3514:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3518:	b	352c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x4a4>
    351c:	strb	w25, [x8]
    3520:	ldr	x8, [x21, #24]
    3524:	add	x8, x8, #0x1
    3528:	str	x8, [x21, #24]
    352c:	ldr	x8, [x24]
    3530:	ldrb	w10, [x8, #23]
    3534:	ldp	x9, x8, [x21, #16]
    3538:	tbnz	w10, #5, 3560 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x4d8>
    353c:	sub	x9, x9, x8
    3540:	cmp	x9, #0x6
    3544:	b.hi	34b8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x430>  // b.pmore
    3548:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    354c:	mov	w2, #0x7                   	// #7
    3550:	mov	x0, x21
    3554:	add	x1, x1, #0x0
    3558:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    355c:	b	34dc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x454>
    3560:	cmp	x9, x8
    3564:	b.ne	3580 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x4f8>  // b.any
    3568:	mov	w2, #0x1                   	// #1
    356c:	mov	x0, x21
    3570:	mov	x1, x26
    3574:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3578:	mov	x19, x0
    357c:	b	3598 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x510>
    3580:	mov	w9, #0x20                  	// #32
    3584:	strb	w9, [x8]
    3588:	ldr	x8, [x21, #24]
    358c:	mov	x19, x21
    3590:	add	x8, x8, #0x1
    3594:	str	x8, [x21, #24]
    3598:	ldr	x0, [x24]
    359c:	bl	0 <_ZNK4llvm5Value7getNameEv>
    35a0:	ldp	x9, x8, [x19, #16]
    35a4:	mov	x23, x1
    35a8:	sub	x9, x9, x8
    35ac:	cmp	x1, x9
    35b0:	mov	x1, x0
    35b4:	b.ls	35c8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x540>  // b.plast
    35b8:	mov	x0, x19
    35bc:	mov	x2, x23
    35c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    35c4:	b	34dc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x454>
    35c8:	cbz	x23, 34dc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x454>
    35cc:	mov	x0, x8
    35d0:	mov	x2, x23
    35d4:	bl	0 <memcpy>
    35d8:	ldr	x8, [x19, #24]
    35dc:	add	x8, x8, x23
    35e0:	str	x8, [x19, #24]
    35e4:	b	34dc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x454>
    35e8:	mov	w9, #0xa0a                 	// #2570
    35ec:	strh	w9, [x8]
    35f0:	ldr	x8, [x21, #24]
    35f4:	add	x8, x8, #0x2
    35f8:	str	x8, [x21, #24]
    35fc:	ldp	x9, x8, [sp]
    3600:	ldr	x8, [x8]
    3604:	cmp	x8, x9
    3608:	b.ne	3684 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x5fc>  // b.any
    360c:	add	x8, x20, #0x10
    3610:	cmp	x8, x22
    3614:	b.hi	36a4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x61c>  // b.pmore
    3618:	mov	x20, x22
    361c:	b.eq	32a8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x220>  // b.none
    3620:	ldr	x9, [x8]
    3624:	orr	x9, x9, #0x8
    3628:	cmn	x9, #0x8
    362c:	b.ne	32a4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x21c>  // b.any
    3630:	add	x8, x8, #0x10
    3634:	cmp	x22, x8
    3638:	b.ne	3620 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x598>  // b.any
    363c:	mov	x20, x22
    3640:	b	32a8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_jEEEEPKc+0x220>
    3644:	ldp	x20, x19, [sp, #96]
    3648:	ldp	x22, x21, [sp, #80]
    364c:	ldp	x24, x23, [sp, #64]
    3650:	ldp	x26, x25, [sp, #48]
    3654:	ldp	x28, x27, [sp, #32]
    3658:	ldp	x29, x30, [sp, #16]
    365c:	add	sp, sp, #0x70
    3660:	ret
    3664:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3668:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    366c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3670:	add	x0, x0, #0x0
    3674:	add	x1, x1, #0x0
    3678:	add	x3, x3, #0x0
    367c:	mov	w2, #0x99                  	// #153
    3680:	bl	0 <__assert_fail>
    3684:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3688:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    368c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3690:	add	x0, x0, #0x0
    3694:	add	x1, x1, #0x0
    3698:	add	x3, x3, #0x0
    369c:	mov	w2, #0x4cf                 	// #1231
    36a0:	bl	0 <__assert_fail>
    36a4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    36a8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    36ac:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    36b0:	add	x0, x0, #0x0
    36b4:	add	x1, x1, #0x0
    36b8:	add	x3, x3, #0x0
    36bc:	mov	w2, #0x4e0                 	// #1248
    36c0:	bl	0 <__assert_fail>

00000000000036c4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc>:
    36c4:	stp	x29, x30, [sp, #-96]!
    36c8:	stp	x28, x27, [sp, #16]
    36cc:	stp	x26, x25, [sp, #32]
    36d0:	stp	x24, x23, [sp, #48]
    36d4:	stp	x22, x21, [sp, #64]
    36d8:	stp	x20, x19, [sp, #80]
    36dc:	mov	x29, sp
    36e0:	ldp	x9, x8, [x1, #16]
    36e4:	mov	x22, x3
    36e8:	mov	x19, x1
    36ec:	mov	x20, x2
    36f0:	sub	x9, x9, x8
    36f4:	cmp	x9, #0x9
    36f8:	b.hi	3728 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x64>  // b.pmore
    36fc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3700:	add	x1, x1, #0x0
    3704:	mov	w2, #0xa                   	// #10
    3708:	mov	x0, x19
    370c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3710:	mov	x21, x0
    3714:	cbz	x22, 3754 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x90>
    3718:	mov	x0, x22
    371c:	bl	0 <strlen>
    3720:	mov	x23, x0
    3724:	b	3758 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x94>
    3728:	adrp	x9, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    372c:	add	x9, x9, #0x0
    3730:	ldr	x9, [x9]
    3734:	mov	w10, #0x203a                	// #8250
    3738:	strh	w10, [x8, #8]
    373c:	mov	x21, x19
    3740:	str	x9, [x8]
    3744:	ldr	x8, [x19, #24]
    3748:	add	x8, x8, #0xa
    374c:	str	x8, [x19, #24]
    3750:	cbnz	x22, 3718 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x54>
    3754:	mov	x23, xzr
    3758:	ldp	x8, x0, [x21, #16]
    375c:	sub	x8, x8, x0
    3760:	cmp	x23, x8
    3764:	b.ls	3784 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0xc0>  // b.plast
    3768:	mov	x0, x21
    376c:	mov	x1, x22
    3770:	mov	x2, x23
    3774:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3778:	mov	x21, x0
    377c:	ldr	x0, [x0, #24]
    3780:	b	37a0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0xdc>
    3784:	cbz	x23, 37a0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0xdc>
    3788:	mov	x1, x22
    378c:	mov	x2, x23
    3790:	bl	0 <memcpy>
    3794:	ldr	x8, [x21, #24]
    3798:	add	x0, x8, x23
    379c:	str	x0, [x21, #24]
    37a0:	ldr	x8, [x21, #16]
    37a4:	cmp	x8, x0
    37a8:	b.ne	37c4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x100>  // b.any
    37ac:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    37b0:	add	x1, x1, #0x0
    37b4:	mov	w2, #0x1                   	// #1
    37b8:	mov	x0, x21
    37bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    37c0:	b	37d8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x114>
    37c4:	mov	w8, #0xa                   	// #10
    37c8:	strb	w8, [x0]
    37cc:	ldr	x8, [x21, #24]
    37d0:	add	x8, x8, #0x1
    37d4:	str	x8, [x21, #24]
    37d8:	ldp	x9, x8, [x19, #16]
    37dc:	sub	x9, x9, x8
    37e0:	cmp	x9, #0x5
    37e4:	b.hi	3800 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x13c>  // b.pmore
    37e8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    37ec:	add	x1, x1, #0x0
    37f0:	mov	w2, #0x6                   	// #6
    37f4:	mov	x0, x19
    37f8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    37fc:	b	3824 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x160>
    3800:	mov	w10, #0x6953                	// #26963
    3804:	mov	w9, #0x203a                	// #8250
    3808:	movk	w10, #0x657a, lsl #16
    380c:	strh	w9, [x8, #4]
    3810:	str	w10, [x8]
    3814:	ldr	x8, [x19, #24]
    3818:	mov	x0, x19
    381c:	add	x8, x8, #0x6
    3820:	str	x8, [x19, #24]
    3824:	ldr	w1, [x20, #16]
    3828:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    382c:	ldp	x9, x8, [x0, #16]
    3830:	cmp	x9, x8
    3834:	b.ne	384c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x188>  // b.any
    3838:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    383c:	add	x1, x1, #0x0
    3840:	mov	w2, #0x1                   	// #1
    3844:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3848:	b	3860 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x19c>
    384c:	mov	w9, #0xa                   	// #10
    3850:	strb	w9, [x8]
    3854:	ldr	x8, [x0, #24]
    3858:	add	x8, x8, #0x1
    385c:	str	x8, [x0, #24]
    3860:	ldr	w9, [x20, #24]
    3864:	ldp	x25, x8, [x20]
    3868:	ldr	w10, [x20, #16]
    386c:	add	x26, x8, x9, lsl #4
    3870:	mov	x27, x26
    3874:	cbz	w10, 38a0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1dc>
    3878:	cbz	w9, 38ac <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1e8>
    387c:	lsl	x9, x9, #4
    3880:	add	x27, x9, x8
    3884:	ldr	x10, [x8]
    3888:	orr	x10, x10, #0x4
    388c:	cmn	x10, #0x4
    3890:	b.ne	38ac <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1e8>  // b.any
    3894:	subs	x9, x9, #0x10
    3898:	add	x8, x8, #0x10
    389c:	b.ne	3884 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1c0>  // b.any
    38a0:	cmp	x27, x26
    38a4:	b.ne	38b8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x1f4>  // b.any
    38a8:	b	3a78 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3b4>
    38ac:	mov	x27, x8
    38b0:	cmp	x27, x26
    38b4:	b.eq	3a78 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3b4>  // b.none
    38b8:	adrp	x21, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    38bc:	adrp	x22, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    38c0:	adrp	x23, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    38c4:	add	x21, x21, #0x0
    38c8:	add	x22, x22, #0x0
    38cc:	add	x23, x23, #0x0
    38d0:	mov	w28, #0xa                   	// #10
    38d4:	b	38e4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x220>
    38d8:	mov	x27, x8
    38dc:	cmp	x27, x26
    38e0:	b.eq	3a78 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3b4>  // b.none
    38e4:	ldp	x9, x8, [x19, #16]
    38e8:	ldr	x24, [x27]
    38ec:	sub	x9, x9, x8
    38f0:	cmp	x9, #0x10
    38f4:	b.hi	390c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x248>  // b.pmore
    38f8:	mov	w2, #0x11                  	// #17
    38fc:	mov	x0, x19
    3900:	mov	x1, x21
    3904:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3908:	b	392c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x268>
    390c:	ldr	q0, [x21]
    3910:	mov	w9, #0x20                  	// #32
    3914:	strb	w9, [x8, #16]
    3918:	mov	x0, x19
    391c:	str	q0, [x8]
    3920:	ldr	x8, [x19, #24]
    3924:	add	x8, x8, #0x11
    3928:	str	x8, [x19, #24]
    392c:	ldr	x8, [x20]
    3930:	cmp	x8, x25
    3934:	b.ne	3a94 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3d0>  // b.any
    3938:	ldr	w1, [x27, #12]
    393c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    3940:	ldp	x9, x8, [x0, #16]
    3944:	cmp	x9, x8
    3948:	b.ne	395c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x298>  // b.any
    394c:	mov	w2, #0x1                   	// #1
    3950:	mov	x1, x22
    3954:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3958:	b	396c <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x2a8>
    395c:	strb	w28, [x8]
    3960:	ldr	x8, [x0, #24]
    3964:	add	x8, x8, #0x1
    3968:	str	x8, [x0, #24]
    396c:	ldp	x9, x8, [x19, #16]
    3970:	sub	x9, x9, x8
    3974:	cmp	x9, #0x14
    3978:	b.hi	3990 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x2cc>  // b.pmore
    397c:	mov	w2, #0x15                  	// #21
    3980:	mov	x0, x19
    3984:	mov	x1, x23
    3988:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    398c:	b	39b0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x2ec>
    3990:	ldur	x9, [x23, #13]
    3994:	ldr	q0, [x23]
    3998:	mov	x0, x19
    399c:	stur	x9, [x8, #13]
    39a0:	str	q0, [x8]
    39a4:	ldr	x8, [x19, #24]
    39a8:	add	x8, x8, #0x15
    39ac:	str	x8, [x19, #24]
    39b0:	ldr	x8, [x20]
    39b4:	cmp	x8, x25
    39b8:	b.ne	3a94 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3d0>  // b.any
    39bc:	ldr	w1, [x27, #8]
    39c0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    39c4:	ldp	x9, x8, [x0, #16]
    39c8:	cmp	x9, x8
    39cc:	b.ne	39e0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x31c>  // b.any
    39d0:	mov	w2, #0x1                   	// #1
    39d4:	mov	x1, x22
    39d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    39dc:	b	39f0 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x32c>
    39e0:	strb	w28, [x8]
    39e4:	ldr	x8, [x0, #24]
    39e8:	add	x8, x8, #0x1
    39ec:	str	x8, [x0, #24]
    39f0:	mov	x0, x24
    39f4:	mov	x1, x19
    39f8:	mov	x2, xzr
    39fc:	mov	w3, wzr
    3a00:	bl	0 <_ZNK4llvm8Metadata5printERNS_11raw_ostreamEPKNS_6ModuleEb>
    3a04:	ldp	x9, x8, [x19, #16]
    3a08:	cmp	x9, x8
    3a0c:	b.ne	3a24 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x360>  // b.any
    3a10:	mov	w2, #0x1                   	// #1
    3a14:	mov	x0, x19
    3a18:	mov	x1, x22
    3a1c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    3a20:	b	3a34 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x370>
    3a24:	strb	w28, [x8]
    3a28:	ldr	x8, [x19, #24]
    3a2c:	add	x8, x8, #0x1
    3a30:	str	x8, [x19, #24]
    3a34:	ldr	x8, [x20]
    3a38:	cmp	x8, x25
    3a3c:	b.ne	3ab4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x3f0>  // b.any
    3a40:	add	x8, x27, #0x10
    3a44:	cmp	x8, x26
    3a48:	b.hi	3ad4 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x410>  // b.pmore
    3a4c:	mov	x27, x26
    3a50:	b.eq	38dc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x218>  // b.none
    3a54:	ldr	x9, [x8]
    3a58:	orr	x9, x9, #0x4
    3a5c:	cmn	x9, #0x4
    3a60:	b.ne	38d8 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x214>  // b.any
    3a64:	add	x8, x8, #0x10
    3a68:	cmp	x26, x8
    3a6c:	b.ne	3a54 <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x390>  // b.any
    3a70:	mov	x27, x26
    3a74:	b	38dc <_ZNK4llvm15ValueEnumerator5printERNS_11raw_ostreamERKNS_8DenseMapIPKNS_8MetadataENS0_7MDIndexENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S7_EEEEPKc+0x218>
    3a78:	ldp	x20, x19, [sp, #80]
    3a7c:	ldp	x22, x21, [sp, #64]
    3a80:	ldp	x24, x23, [sp, #48]
    3a84:	ldp	x26, x25, [sp, #32]
    3a88:	ldp	x28, x27, [sp, #16]
    3a8c:	ldp	x29, x30, [sp], #96
    3a90:	ret
    3a94:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3a98:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3a9c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3aa0:	add	x0, x0, #0x0
    3aa4:	add	x1, x1, #0x0
    3aa8:	add	x3, x3, #0x0
    3aac:	mov	w2, #0x4b9                 	// #1209
    3ab0:	bl	0 <__assert_fail>
    3ab4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3ab8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3abc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3ac0:	add	x0, x0, #0x0
    3ac4:	add	x1, x1, #0x0
    3ac8:	add	x3, x3, #0x0
    3acc:	mov	w2, #0x4cf                 	// #1231
    3ad0:	bl	0 <__assert_fail>
    3ad4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3ad8:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3adc:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3ae0:	add	x0, x0, #0x0
    3ae4:	add	x1, x1, #0x0
    3ae8:	add	x3, x3, #0x0
    3aec:	mov	w2, #0x4e0                 	// #1248
    3af0:	bl	0 <__assert_fail>

0000000000003af4 <_ZL21isIntOrIntVectorValueRKSt4pairIPKN4llvm5ValueEjE>:
    3af4:	ldr	x8, [x0]
    3af8:	ldr	x9, [x8]
    3afc:	ldrb	w8, [x9, #8]
    3b00:	cmp	w8, #0x10
    3b04:	b.ne	3b14 <_ZL21isIntOrIntVectorValueRKSt4pairIPKN4llvm5ValueEjE+0x20>  // b.any
    3b08:	ldr	x8, [x9, #16]
    3b0c:	ldr	x8, [x8]
    3b10:	ldrb	w8, [x8, #8]
    3b14:	cmp	w8, #0xb
    3b18:	cset	w0, eq  // eq = none
    3b1c:	ret

0000000000003b20 <_ZN4llvm15ValueEnumerator20EnumerateNamedMDNodeEPKNS_11NamedMDNodeE>:
    3b20:	stp	x29, x30, [sp, #-48]!
    3b24:	stp	x22, x21, [sp, #16]
    3b28:	stp	x20, x19, [sp, #32]
    3b2c:	mov	x29, sp
    3b30:	mov	x20, x0
    3b34:	mov	x0, x1
    3b38:	mov	x19, x1
    3b3c:	bl	0 <_ZNK4llvm11NamedMDNode14getNumOperandsEv>
    3b40:	cbz	w0, 3b74 <_ZN4llvm15ValueEnumerator20EnumerateNamedMDNodeEPKNS_11NamedMDNodeE+0x54>
    3b44:	mov	w21, w0
    3b48:	mov	w22, wzr
    3b4c:	mov	x0, x19
    3b50:	mov	w1, w22
    3b54:	bl	0 <_ZNK4llvm11NamedMDNode10getOperandEj>
    3b58:	mov	x2, x0
    3b5c:	mov	x0, x20
    3b60:	mov	w1, wzr
    3b64:	bl	3ba8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>
    3b68:	add	w22, w22, #0x1
    3b6c:	cmp	w21, w22
    3b70:	b.ne	3b4c <_ZN4llvm15ValueEnumerator20EnumerateNamedMDNodeEPKNS_11NamedMDNodeE+0x2c>  // b.any
    3b74:	ldp	x20, x19, [sp, #32]
    3b78:	ldp	x22, x21, [sp, #16]
    3b7c:	ldp	x29, x30, [sp], #48
    3b80:	ret

0000000000003b84 <_ZNK4llvm15ValueEnumerator21getMetadataFunctionIDEPKNS_8FunctionE>:
    3b84:	cbz	x1, 3ba0 <_ZNK4llvm15ValueEnumerator21getMetadataFunctionIDEPKNS_8FunctionE+0x1c>
    3b88:	stp	x29, x30, [sp, #-16]!
    3b8c:	mov	x29, sp
    3b90:	bl	2ed8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    3b94:	add	w0, w0, #0x1
    3b98:	ldp	x29, x30, [sp], #16
    3b9c:	ret
    3ba0:	mov	w0, wzr
    3ba4:	ret

0000000000003ba8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE>:
    3ba8:	stp	x29, x30, [sp, #-96]!
    3bac:	stp	x28, x27, [sp, #16]
    3bb0:	stp	x26, x25, [sp, #32]
    3bb4:	stp	x24, x23, [sp, #48]
    3bb8:	stp	x22, x21, [sp, #64]
    3bbc:	stp	x20, x19, [sp, #80]
    3bc0:	mov	x29, sp
    3bc4:	sub	sp, sp, #0x340
    3bc8:	adrp	x9, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3bcc:	ldr	d0, [x9]
    3bd0:	add	x8, sp, #0x228
    3bd4:	add	x10, sp, #0x18
    3bd8:	add	x11, x8, #0x10
    3bdc:	add	x8, x10, #0x10
    3be0:	mov	w19, w1
    3be4:	mov	x20, x0
    3be8:	str	x11, [sp, #8]
    3bec:	str	x11, [sp, #552]
    3bf0:	str	x8, [sp, #24]
    3bf4:	str	d0, [sp, #560]
    3bf8:	str	d0, [sp, #32]
    3bfc:	bl	44b8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    3c00:	cbz	x0, 3c40 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x98>
    3c04:	ldp	w8, w9, [sp, #32]
    3c08:	ldr	w10, [x0, #8]
    3c0c:	mov	x22, x0
    3c10:	cmp	w8, w9
    3c14:	sub	x21, x0, x10, lsl #3
    3c18:	b.cs	4020 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x478>  // b.hs, b.nlast
    3c1c:	ldr	x9, [sp, #24]
    3c20:	add	x8, x9, w8, uxtw #4
    3c24:	stp	x22, x21, [x8]
    3c28:	ldp	w8, w9, [sp, #32]
    3c2c:	cmp	w8, w9
    3c30:	b.cs	4034 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x48c>  // b.hs, b.nlast
    3c34:	add	w8, w8, #0x1
    3c38:	str	w8, [sp, #32]
    3c3c:	b	3c48 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xa0>
    3c40:	ldr	w8, [sp, #32]
    3c44:	cbz	w8, 3fd0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x428>
    3c48:	add	x22, x20, #0x100
    3c4c:	mov	x27, #0xfffffffffffffff     	// #1152921504606846975
    3c50:	b	3c5c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xb4>
    3c54:	str	wzr, [sp, #560]
    3c58:	cbz	w8, 3fd0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x428>
    3c5c:	ldr	x9, [sp, #24]
    3c60:	add	x8, x9, w8, uxtw #4
    3c64:	ldp	x28, x23, [x8, #-16]
    3c68:	sub	x8, x28, x23
    3c6c:	cmp	x8, #0x20
    3c70:	b.lt	3ce0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x138>  // b.tstop
    3c74:	lsr	x8, x8, #5
    3c78:	add	x24, x8, #0x1
    3c7c:	ldr	x2, [x23]
    3c80:	mov	x0, x20
    3c84:	mov	w1, w19
    3c88:	bl	44b8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    3c8c:	cbnz	x0, 3d58 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b0>
    3c90:	ldr	x2, [x23, #8]
    3c94:	mov	x0, x20
    3c98:	mov	w1, w19
    3c9c:	bl	44b8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    3ca0:	cbnz	x0, 3d44 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x19c>
    3ca4:	ldr	x2, [x23, #16]
    3ca8:	mov	x0, x20
    3cac:	mov	w1, w19
    3cb0:	bl	44b8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    3cb4:	cbnz	x0, 3d54 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1ac>
    3cb8:	ldr	x2, [x23, #24]
    3cbc:	mov	x0, x20
    3cc0:	mov	w1, w19
    3cc4:	bl	44b8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    3cc8:	cbnz	x0, 3e1c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x274>
    3ccc:	sub	x24, x24, #0x1
    3cd0:	cmp	x24, #0x1
    3cd4:	add	x23, x23, #0x20
    3cd8:	b.gt	3c7c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xd4>
    3cdc:	sub	x8, x28, x23
    3ce0:	asr	x8, x8, #3
    3ce4:	cmp	x8, #0x1
    3ce8:	b.eq	3d2c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x184>  // b.none
    3cec:	cmp	x8, #0x2
    3cf0:	b.eq	3d14 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x16c>  // b.none
    3cf4:	cmp	x8, #0x3
    3cf8:	b.ne	3e28 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x280>  // b.any
    3cfc:	ldr	x2, [x23]
    3d00:	mov	x0, x20
    3d04:	mov	w1, w19
    3d08:	bl	44b8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    3d0c:	cbnz	x0, 3d58 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b0>
    3d10:	add	x23, x23, #0x8
    3d14:	ldr	x2, [x23]
    3d18:	mov	x0, x20
    3d1c:	mov	w1, w19
    3d20:	bl	44b8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    3d24:	cbnz	x0, 3d58 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b0>
    3d28:	add	x23, x23, #0x8
    3d2c:	ldr	x2, [x23]
    3d30:	mov	x0, x20
    3d34:	mov	w1, w19
    3d38:	bl	44b8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>
    3d3c:	cbnz	x0, 3d58 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b0>
    3d40:	b	3e28 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x280>
    3d44:	add	x23, x23, #0x8
    3d48:	cmp	x23, x28
    3d4c:	b.ne	3d60 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b8>  // b.any
    3d50:	b	3e28 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x280>
    3d54:	add	x23, x23, #0x10
    3d58:	cmp	x23, x28
    3d5c:	b.eq	3e28 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x280>  // b.none
    3d60:	ldr	x24, [x23]
    3d64:	cbz	x24, 4054 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x4ac>
    3d68:	ldrb	w8, [x24]
    3d6c:	sub	w8, w8, #0x4
    3d70:	cmp	w8, #0x1c
    3d74:	b.cs	4074 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x4cc>  // b.hs, b.nlast
    3d78:	ldr	w8, [sp, #32]
    3d7c:	cbz	w8, 4094 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x4ec>
    3d80:	ldr	x9, [sp, #24]
    3d84:	add	x10, x23, #0x8
    3d88:	add	x11, x9, x8, lsl #4
    3d8c:	stur	x10, [x11, #-8]
    3d90:	ldrb	w10, [x24, #1]
    3d94:	and	w10, w10, #0x7f
    3d98:	cmp	w10, #0x1
    3d9c:	b.ne	3db0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x208>  // b.any
    3da0:	ldrb	w10, [x28, #1]
    3da4:	and	w10, w10, #0x7f
    3da8:	cmp	w10, #0x1
    3dac:	b.ne	3de4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x23c>  // b.any
    3db0:	ldr	w10, [sp, #36]
    3db4:	ldr	w11, [x24, #8]
    3db8:	cmp	w8, w10
    3dbc:	sub	x21, x24, x11, lsl #3
    3dc0:	b.cs	3f9c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x3f4>  // b.hs, b.nlast
    3dc4:	add	x8, x9, x8, lsl #4
    3dc8:	stp	x24, x21, [x8]
    3dcc:	ldp	w8, w9, [sp, #32]
    3dd0:	cmp	w8, w9
    3dd4:	b.cs	4034 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x48c>  // b.hs, b.nlast
    3dd8:	add	w8, w8, #0x1
    3ddc:	str	w8, [sp, #32]
    3de0:	b	3c58 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xb0>
    3de4:	ldr	w8, [sp, #560]
    3de8:	ldr	w9, [sp, #564]
    3dec:	cmp	w8, w9
    3df0:	b.cs	3fb4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x40c>  // b.hs, b.nlast
    3df4:	ldr	x9, [sp, #552]
    3df8:	str	x24, [x9, w8, uxtw #3]
    3dfc:	ldr	w9, [sp, #560]
    3e00:	ldr	w8, [sp, #564]
    3e04:	cmp	w9, w8
    3e08:	b.cs	4034 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x48c>  // b.hs, b.nlast
    3e0c:	ldr	w8, [sp, #32]
    3e10:	add	w9, w9, #0x1
    3e14:	str	w9, [sp, #560]
    3e18:	b	3c58 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xb0>
    3e1c:	add	x23, x23, #0x18
    3e20:	cmp	x23, x28
    3e24:	b.ne	3d60 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x1b8>  // b.any
    3e28:	ldp	w8, w9, [sp, #32]
    3e2c:	sub	x8, x8, #0x1
    3e30:	cmp	x8, x9
    3e34:	b.hi	4034 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x48c>  // b.pmore
    3e38:	str	w8, [sp, #32]
    3e3c:	ldp	x8, x9, [x20, #216]
    3e40:	cmp	x8, x9
    3e44:	b.eq	3e5c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x2b4>  // b.none
    3e48:	str	x28, [x8]
    3e4c:	ldp	x24, x8, [x20, #208]
    3e50:	add	x25, x8, #0x8
    3e54:	str	x25, [x20, #216]
    3e58:	b	3ef0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x348>
    3e5c:	ldr	x23, [x20, #208]
    3e60:	sub	x25, x8, x23
    3e64:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    3e68:	cmp	x25, x8
    3e6c:	b.eq	40b4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x50c>  // b.none
    3e70:	asr	x26, x25, #3
    3e74:	cmp	x25, #0x0
    3e78:	csinc	x8, x26, xzr, ne  // ne = any
    3e7c:	adds	x8, x8, x26
    3e80:	lsr	x10, x8, #60
    3e84:	cset	w9, cs  // cs = hs, nlast
    3e88:	cmp	x10, #0x0
    3e8c:	cset	w10, ne  // ne = any
    3e90:	orr	w9, w9, w10
    3e94:	cmp	w9, #0x0
    3e98:	csel	x21, x27, x8, ne  // ne = any
    3e9c:	cbz	x21, 3eb0 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x308>
    3ea0:	lsl	x0, x21, #3
    3ea4:	bl	0 <_Znwm>
    3ea8:	mov	x24, x0
    3eac:	b	3eb4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x30c>
    3eb0:	mov	x24, xzr
    3eb4:	add	x26, x24, x26, lsl #3
    3eb8:	cmp	x25, #0x1
    3ebc:	str	x28, [x26]
    3ec0:	b.lt	3ed4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x32c>  // b.tstop
    3ec4:	mov	x0, x24
    3ec8:	mov	x1, x23
    3ecc:	mov	x2, x25
    3ed0:	bl	0 <memmove>
    3ed4:	add	x25, x26, #0x8
    3ed8:	cbz	x23, 3ee4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x33c>
    3edc:	mov	x0, x23
    3ee0:	bl	0 <_ZdlPv>
    3ee4:	add	x8, x24, x21, lsl #3
    3ee8:	stp	x24, x25, [x20, #208]
    3eec:	str	x8, [x20, #224]
    3ef0:	sub	x8, x25, x24
    3ef4:	add	x1, sp, #0x10
    3ef8:	mov	x0, x22
    3efc:	lsr	x21, x8, #3
    3f00:	str	x28, [sp, #16]
    3f04:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3f08:	str	w21, [x0, #4]
    3f0c:	ldr	w8, [sp, #32]
    3f10:	cbz	w8, 3f30 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x388>
    3f14:	ldr	x9, [sp, #24]
    3f18:	add	x9, x9, x8, lsl #4
    3f1c:	ldur	x9, [x9, #-16]
    3f20:	ldrb	w9, [x9, #1]
    3f24:	and	w9, w9, #0x7f
    3f28:	cmp	w9, #0x1
    3f2c:	b.ne	3c58 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xb0>  // b.any
    3f30:	ldr	w10, [sp, #560]
    3f34:	cbz	w10, 3c54 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xac>
    3f38:	ldr	x23, [sp, #552]
    3f3c:	ldr	w9, [sp, #36]
    3f40:	lsl	x24, x10, #3
    3f44:	ldr	x21, [x23]
    3f48:	cmp	w8, w9
    3f4c:	ldr	w10, [x21, #8]
    3f50:	sub	x25, x21, x10, lsl #3
    3f54:	b.cs	3f88 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x3e0>  // b.hs, b.nlast
    3f58:	ldr	x9, [sp, #24]
    3f5c:	add	x8, x9, w8, uxtw #4
    3f60:	stp	x21, x25, [x8]
    3f64:	ldp	w8, w9, [sp, #32]
    3f68:	cmp	w8, w9
    3f6c:	b.cs	4034 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x48c>  // b.hs, b.nlast
    3f70:	add	w8, w8, #0x1
    3f74:	subs	x24, x24, #0x8
    3f78:	add	x23, x23, #0x8
    3f7c:	str	w8, [sp, #32]
    3f80:	b.ne	3f44 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x39c>  // b.any
    3f84:	b	3c54 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0xac>
    3f88:	add	x0, sp, #0x18
    3f8c:	mov	x1, xzr
    3f90:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3f94:	ldr	w8, [sp, #32]
    3f98:	b	3f58 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x3b0>
    3f9c:	add	x0, sp, #0x18
    3fa0:	mov	x1, xzr
    3fa4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    3fa8:	ldr	w8, [sp, #32]
    3fac:	ldr	x9, [sp, #24]
    3fb0:	b	3dc4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x21c>
    3fb4:	ldr	x1, [sp, #8]
    3fb8:	add	x0, sp, #0x228
    3fbc:	mov	w3, #0x8                   	// #8
    3fc0:	mov	x2, xzr
    3fc4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3fc8:	ldr	w8, [sp, #560]
    3fcc:	b	3df4 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x24c>
    3fd0:	ldr	x0, [sp, #24]
    3fd4:	add	x8, sp, #0x18
    3fd8:	add	x8, x8, #0x10
    3fdc:	cmp	x0, x8
    3fe0:	b.eq	3fe8 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x440>  // b.none
    3fe4:	bl	0 <free>
    3fe8:	ldr	x0, [sp, #552]
    3fec:	add	x8, sp, #0x228
    3ff0:	add	x8, x8, #0x10
    3ff4:	cmp	x0, x8
    3ff8:	b.eq	4000 <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x458>  // b.none
    3ffc:	bl	0 <free>
    4000:	add	sp, sp, #0x340
    4004:	ldp	x20, x19, [sp, #80]
    4008:	ldp	x22, x21, [sp, #64]
    400c:	ldp	x24, x23, [sp, #48]
    4010:	ldp	x26, x25, [sp, #32]
    4014:	ldp	x28, x27, [sp, #16]
    4018:	ldp	x29, x30, [sp], #96
    401c:	ret
    4020:	add	x0, sp, #0x18
    4024:	mov	x1, xzr
    4028:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    402c:	ldr	w8, [sp, #32]
    4030:	b	3c1c <_ZN4llvm15ValueEnumerator17EnumerateMetadataEjPKNS_8MetadataE+0x74>
    4034:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4038:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    403c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4040:	add	x0, x0, #0x0
    4044:	add	x1, x1, #0x0
    4048:	add	x3, x3, #0x0
    404c:	mov	w2, #0x43                  	// #67
    4050:	bl	0 <__assert_fail>
    4054:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4058:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    405c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4060:	add	x0, x0, #0x0
    4064:	add	x1, x1, #0x0
    4068:	add	x3, x3, #0x0
    406c:	mov	w2, #0x5b                  	// #91
    4070:	bl	0 <__assert_fail>
    4074:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4078:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    407c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4080:	add	x0, x0, #0x0
    4084:	add	x1, x1, #0x0
    4088:	add	x3, x3, #0x0
    408c:	mov	w2, #0xfa                  	// #250
    4090:	bl	0 <__assert_fail>
    4094:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4098:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    409c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    40a0:	add	x0, x0, #0x0
    40a4:	add	x1, x1, #0x0
    40a8:	add	x3, x3, #0x0
    40ac:	mov	w2, #0xa7                  	// #167
    40b0:	bl	0 <__assert_fail>
    40b4:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    40b8:	add	x0, x0, #0x0
    40bc:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000040c0 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataERKNS_8FunctionEPKNS_15LocalAsMetadataE>:
    40c0:	stp	x29, x30, [sp, #-32]!
    40c4:	stp	x20, x19, [sp, #16]
    40c8:	mov	x29, sp
    40cc:	mov	x19, x2
    40d0:	mov	x20, x0
    40d4:	bl	2ed8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    40d8:	add	w1, w0, #0x1
    40dc:	mov	x0, x20
    40e0:	mov	x2, x19
    40e4:	ldp	x20, x19, [sp, #16]
    40e8:	ldp	x29, x30, [sp], #32
    40ec:	b	40f0 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE>

00000000000040f0 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE>:
    40f0:	stp	x29, x30, [sp, #-96]!
    40f4:	str	x27, [sp, #16]
    40f8:	stp	x26, x25, [sp, #32]
    40fc:	stp	x24, x23, [sp, #48]
    4100:	stp	x22, x21, [sp, #64]
    4104:	stp	x20, x19, [sp, #80]
    4108:	mov	x29, sp
    410c:	cbz	w1, 4250 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x160>
    4110:	mov	w21, w1
    4114:	mov	x19, x0
    4118:	add	x0, x0, #0x100
    411c:	add	x1, x29, #0x18
    4120:	mov	x20, x2
    4124:	str	x2, [x29, #24]
    4128:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    412c:	ldr	w8, [x0, #4]
    4130:	mov	x22, x0
    4134:	cbz	w8, 4164 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x74>
    4138:	ldr	w8, [x22]
    413c:	cmp	w8, w21
    4140:	b.eq	4234 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x144>  // b.none
    4144:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4148:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    414c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4150:	add	x0, x0, #0x0
    4154:	add	x1, x1, #0x0
    4158:	add	x3, x3, #0x0
    415c:	mov	w2, #0x2ba                 	// #698
    4160:	bl	0 <__assert_fail>
    4164:	ldp	x8, x9, [x19, #216]
    4168:	cmp	x8, x9
    416c:	b.eq	4184 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x94>  // b.none
    4170:	str	x20, [x8]
    4174:	ldp	x24, x8, [x19, #208]
    4178:	add	x25, x8, #0x8
    417c:	str	x25, [x19, #216]
    4180:	b	421c <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x12c>
    4184:	ldr	x23, [x19, #208]
    4188:	sub	x25, x8, x23
    418c:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    4190:	cmp	x25, x8
    4194:	b.eq	4270 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x180>  // b.none
    4198:	asr	x27, x25, #3
    419c:	cmp	x25, #0x0
    41a0:	csinc	x8, x27, xzr, ne  // ne = any
    41a4:	adds	x8, x8, x27
    41a8:	lsr	x10, x8, #60
    41ac:	cset	w9, cs  // cs = hs, nlast
    41b0:	cmp	x10, #0x0
    41b4:	cset	w10, ne  // ne = any
    41b8:	orr	w9, w9, w10
    41bc:	cmp	w9, #0x0
    41c0:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    41c4:	csel	x26, x9, x8, ne  // ne = any
    41c8:	cbz	x26, 41dc <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0xec>
    41cc:	lsl	x0, x26, #3
    41d0:	bl	0 <_Znwm>
    41d4:	mov	x24, x0
    41d8:	b	41e0 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0xf0>
    41dc:	mov	x24, xzr
    41e0:	add	x27, x24, x27, lsl #3
    41e4:	cmp	x25, #0x1
    41e8:	str	x20, [x27]
    41ec:	b.lt	4200 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x110>  // b.tstop
    41f0:	mov	x0, x24
    41f4:	mov	x1, x23
    41f8:	mov	x2, x25
    41fc:	bl	0 <memmove>
    4200:	add	x25, x27, #0x8
    4204:	cbz	x23, 4210 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE+0x120>
    4208:	mov	x0, x23
    420c:	bl	0 <_ZdlPv>
    4210:	add	x8, x24, x26, lsl #3
    4214:	stp	x24, x25, [x19, #208]
    4218:	str	x8, [x19, #224]
    421c:	sub	x8, x25, x24
    4220:	lsr	x8, x8, #3
    4224:	stp	w21, w8, [x22]
    4228:	ldr	x1, [x20, #136]
    422c:	mov	x0, x19
    4230:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    4234:	ldp	x20, x19, [sp, #80]
    4238:	ldp	x22, x21, [sp, #64]
    423c:	ldp	x24, x23, [sp, #48]
    4240:	ldp	x26, x25, [sp, #32]
    4244:	ldr	x27, [sp, #16]
    4248:	ldp	x29, x30, [sp], #96
    424c:	ret
    4250:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4254:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4258:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    425c:	add	x0, x0, #0x0
    4260:	add	x1, x1, #0x0
    4264:	add	x3, x3, #0x0
    4268:	mov	w2, #0x2b5                 	// #693
    426c:	bl	0 <__assert_fail>
    4270:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4274:	add	x0, x0, #0x0
    4278:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000427c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE>:
    427c:	stp	x29, x30, [sp, #-64]!
    4280:	stp	x28, x23, [sp, #16]
    4284:	stp	x22, x21, [sp, #32]
    4288:	stp	x20, x19, [sp, #48]
    428c:	mov	x29, sp
    4290:	sub	sp, sp, #0x210
    4294:	adrp	x8, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4298:	ldr	d0, [x8]
    429c:	mov	x8, sp
    42a0:	add	x19, x8, #0x10
    42a4:	str	x19, [sp]
    42a8:	str	d0, [sp, #8]
    42ac:	ldr	w8, [x1, #8]
    42b0:	cbz	w8, 4440 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1c4>
    42b4:	ldr	w8, [x1, #12]
    42b8:	str	wzr, [x1, #8]
    42bc:	cbz	w8, 4440 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1c4>
    42c0:	ldr	x8, [x1]
    42c4:	cbz	x8, 4498 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x21c>
    42c8:	ldrb	w9, [x8]
    42cc:	sub	w9, w9, #0x4
    42d0:	cmp	w9, #0x1b
    42d4:	b.hi	4440 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1c4>  // b.pmore
    42d8:	str	x8, [sp, #16]
    42dc:	mov	w8, #0x1                   	// #1
    42e0:	mov	x20, x0
    42e4:	str	w8, [sp, #8]
    42e8:	mov	w9, #0x40                  	// #64
    42ec:	b	42f4 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x78>
    42f0:	cbz	w8, 4428 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1ac>
    42f4:	mov	w10, w8
    42f8:	sub	x8, x10, #0x1
    42fc:	cmp	x8, w9, uxtw
    4300:	b.hi	4478 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1fc>  // b.pmore
    4304:	ldr	x11, [sp]
    4308:	add	x10, x11, x10, lsl #3
    430c:	ldur	x21, [x10, #-8]
    4310:	str	w8, [sp, #8]
    4314:	ldr	w10, [x21, #8]
    4318:	neg	x11, x10
    431c:	lsl	x11, x11, #3
    4320:	cbz	x11, 42f0 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x74>
    4324:	sub	x22, x21, x10, lsl #3
    4328:	b	4338 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xbc>
    432c:	add	x22, x22, #0x8
    4330:	cmp	x22, x21
    4334:	b.eq	42f0 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x74>  // b.none
    4338:	ldr	x12, [x22]
    433c:	cbz	x12, 432c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>
    4340:	ldr	w10, [x20, #280]
    4344:	ldr	x11, [x20, #264]
    4348:	cbz	w10, 43a4 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x128>
    434c:	orr	x13, x12, #0x4
    4350:	cmn	x13, #0x4
    4354:	b.eq	4458 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1dc>  // b.none
    4358:	ubfx	x13, x12, #4, #28
    435c:	eor	w14, w13, w12, lsr #9
    4360:	sub	w13, w10, #0x1
    4364:	and	w14, w13, w14
    4368:	add	x15, x11, w14, uxtw #4
    436c:	ldr	x16, [x15]
    4370:	cmp	x16, x12
    4374:	b.eq	43a8 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x12c>  // b.none
    4378:	mov	w17, #0x1                   	// #1
    437c:	cmn	x16, #0x4
    4380:	b.eq	43a4 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x128>  // b.none
    4384:	add	w14, w14, w17
    4388:	and	w14, w14, w13
    438c:	add	x15, x11, w14, uxtw #4
    4390:	ldr	x16, [x15]
    4394:	add	w17, w17, #0x1
    4398:	cmp	x16, x12
    439c:	b.eq	43a8 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x12c>  // b.none
    43a0:	b	437c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x100>
    43a4:	add	x15, x11, x10, lsl #4
    43a8:	add	x10, x11, x10, lsl #4
    43ac:	cmp	x15, x10
    43b0:	b.eq	432c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>  // b.none
    43b4:	ldr	w10, [x15, #8]
    43b8:	cbz	w10, 432c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>
    43bc:	ldr	w10, [x15, #12]
    43c0:	str	wzr, [x15, #8]
    43c4:	cbz	w10, 432c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>
    43c8:	ldr	x10, [x15]
    43cc:	cbz	x10, 4498 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x21c>
    43d0:	ldrb	w11, [x10]
    43d4:	sub	w11, w11, #0x4
    43d8:	cmp	w11, #0x1c
    43dc:	csel	x23, x10, xzr, cc  // cc = lo, ul, last
    43e0:	cbz	x23, 432c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>
    43e4:	cmp	w8, w9
    43e8:	b.cs	440c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x190>  // b.hs, b.nlast
    43ec:	ldr	x9, [sp]
    43f0:	str	x23, [x9, w8, uxtw #3]
    43f4:	ldp	w8, w9, [sp, #8]
    43f8:	cmp	w8, w9
    43fc:	b.cs	4478 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1fc>  // b.hs, b.nlast
    4400:	add	w8, w8, #0x1
    4404:	str	w8, [sp, #8]
    4408:	b	432c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0xb0>
    440c:	mov	x0, sp
    4410:	mov	w3, #0x8                   	// #8
    4414:	mov	x1, x19
    4418:	mov	x2, xzr
    441c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4420:	ldr	w8, [sp, #8]
    4424:	b	43ec <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x170>
    4428:	ldr	x0, [sp]
    442c:	mov	x8, sp
    4430:	add	x8, x8, #0x10
    4434:	cmp	x0, x8
    4438:	b.eq	4440 <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE+0x1c4>  // b.none
    443c:	bl	0 <free>
    4440:	add	sp, sp, #0x210
    4444:	ldp	x20, x19, [sp, #48]
    4448:	ldp	x22, x21, [sp, #32]
    444c:	ldp	x28, x23, [sp, #16]
    4450:	ldp	x29, x30, [sp], #64
    4454:	ret
    4458:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    445c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4460:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4464:	add	x0, x0, #0x0
    4468:	add	x1, x1, #0x0
    446c:	add	x3, x3, #0x0
    4470:	mov	w2, #0x252                 	// #594
    4474:	bl	0 <__assert_fail>
    4478:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    447c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4480:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4484:	add	x0, x0, #0x0
    4488:	add	x1, x1, #0x0
    448c:	add	x3, x3, #0x0
    4490:	mov	w2, #0x43                  	// #67
    4494:	bl	0 <__assert_fail>
    4498:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    449c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    44a0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    44a4:	add	x0, x0, #0x0
    44a8:	add	x1, x1, #0x0
    44ac:	add	x3, x3, #0x0
    44b0:	mov	w2, #0x69                  	// #105
    44b4:	bl	0 <__assert_fail>

00000000000044b8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE>:
    44b8:	sub	sp, sp, #0x90
    44bc:	stp	x29, x30, [sp, #64]
    44c0:	stp	x26, x25, [sp, #80]
    44c4:	stp	x24, x23, [sp, #96]
    44c8:	stp	x22, x21, [sp, #112]
    44cc:	stp	x20, x19, [sp, #128]
    44d0:	add	x29, sp, #0x40
    44d4:	mov	x20, x2
    44d8:	cbz	x2, 4660 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1a8>
    44dc:	ldrb	w8, [x20]
    44e0:	mov	w22, w1
    44e4:	mov	x19, x0
    44e8:	cmp	w8, #0x2
    44ec:	b.cc	4500 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x48>  // b.lo, b.ul, b.last
    44f0:	sub	w8, w8, #0x4
    44f4:	and	w8, w8, #0xff
    44f8:	cmp	w8, #0x1b
    44fc:	b.hi	4680 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1c8>  // b.pmore
    4500:	mov	w8, w22
    4504:	add	x9, sp, #0x8
    4508:	add	x0, x19, #0x100
    450c:	add	x2, x9, #0x8
    4510:	stp	x20, x8, [sp, #8]
    4514:	add	x8, sp, #0x18
    4518:	add	x1, sp, #0x8
    451c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4520:	ldp	x8, x9, [sp, #24]
    4524:	ldr	x8, [x8]
    4528:	cmp	x8, x9
    452c:	b.ne	46a0 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1e8>  // b.any
    4530:	ldrb	w8, [sp, #56]
    4534:	ldr	x21, [sp, #40]
    4538:	cbz	w8, 456c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0xb4>
    453c:	ldrb	w8, [x20]
    4540:	sub	w9, w8, #0x4
    4544:	cmp	w9, #0x1c
    4548:	b.cc	4660 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1a8>  // b.lo, b.ul, b.last
    454c:	ldp	x9, x10, [x19, #216]
    4550:	cmp	x9, x10
    4554:	b.eq	4590 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0xd8>  // b.none
    4558:	str	x20, [x9]
    455c:	ldp	x23, x9, [x19, #208]
    4560:	add	x24, x9, #0x8
    4564:	str	x24, [x19, #216]
    4568:	b	462c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x174>
    456c:	ldr	w8, [x21, #8]
    4570:	mov	x20, xzr
    4574:	cmp	w8, w22
    4578:	b.eq	4660 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1a8>  // b.none
    457c:	cbz	w8, 4660 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1a8>
    4580:	mov	x0, x19
    4584:	mov	x1, x21
    4588:	bl	427c <_ZN4llvm15ValueEnumerator24dropFunctionFromMetadataERNS_6detail12DenseMapPairIPKNS_8MetadataENS0_7MDIndexEEE>
    458c:	b	465c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1a4>
    4590:	ldr	x22, [x19, #208]
    4594:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    4598:	sub	x24, x9, x22
    459c:	cmp	x24, x8
    45a0:	b.eq	4700 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x248>  // b.none
    45a4:	asr	x26, x24, #3
    45a8:	cmp	x24, #0x0
    45ac:	csinc	x8, x26, xzr, ne  // ne = any
    45b0:	adds	x8, x8, x26
    45b4:	lsr	x10, x8, #60
    45b8:	cset	w9, cs  // cs = hs, nlast
    45bc:	cmp	x10, #0x0
    45c0:	cset	w10, ne  // ne = any
    45c4:	orr	w9, w9, w10
    45c8:	cmp	w9, #0x0
    45cc:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    45d0:	csel	x25, x9, x8, ne  // ne = any
    45d4:	cbz	x25, 45e8 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x130>
    45d8:	lsl	x0, x25, #3
    45dc:	bl	0 <_Znwm>
    45e0:	mov	x23, x0
    45e4:	b	45ec <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x134>
    45e8:	mov	x23, xzr
    45ec:	add	x26, x23, x26, lsl #3
    45f0:	cmp	x24, #0x1
    45f4:	str	x20, [x26]
    45f8:	b.lt	460c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x154>  // b.tstop
    45fc:	mov	x0, x23
    4600:	mov	x1, x22
    4604:	mov	x2, x24
    4608:	bl	0 <memmove>
    460c:	add	x24, x26, #0x8
    4610:	cbz	x22, 461c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x164>
    4614:	mov	x0, x22
    4618:	bl	0 <_ZdlPv>
    461c:	add	x8, x23, x25, lsl #3
    4620:	stp	x23, x24, [x19, #208]
    4624:	str	x8, [x19, #224]
    4628:	ldrb	w8, [x20]
    462c:	sub	x9, x24, x23
    4630:	lsr	x9, x9, #3
    4634:	cmp	w8, #0x1
    4638:	str	w9, [x21, #12]
    463c:	b.ne	465c <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x1a4>  // b.any
    4640:	ldr	x1, [x20, #136]
    4644:	cbz	x1, 46c0 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x208>
    4648:	ldrb	w8, [x1, #16]
    464c:	cmp	w8, #0x11
    4650:	b.cs	46e0 <_ZN4llvm15ValueEnumerator21enumerateMetadataImplEjPKNS_8MetadataE+0x228>  // b.hs, b.nlast
    4654:	mov	x0, x19
    4658:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    465c:	mov	x20, xzr
    4660:	mov	x0, x20
    4664:	ldp	x20, x19, [sp, #128]
    4668:	ldp	x22, x21, [sp, #112]
    466c:	ldp	x24, x23, [sp, #96]
    4670:	ldp	x26, x25, [sp, #80]
    4674:	ldp	x29, x30, [sp, #64]
    4678:	add	sp, sp, #0x90
    467c:	ret
    4680:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4684:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4688:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    468c:	add	x0, x0, #0x0
    4690:	add	x1, x1, #0x0
    4694:	add	x3, x3, #0x0
    4698:	mov	w2, #0x297                 	// #663
    469c:	bl	0 <__assert_fail>
    46a0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    46a4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    46a8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    46ac:	add	x0, x0, #0x0
    46b0:	add	x1, x1, #0x0
    46b4:	add	x3, x3, #0x0
    46b8:	mov	w2, #0x4b9                 	// #1209
    46bc:	bl	0 <__assert_fail>
    46c0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    46c4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    46c8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    46cc:	add	x0, x0, #0x0
    46d0:	add	x1, x1, #0x0
    46d4:	add	x3, x3, #0x0
    46d8:	mov	w2, #0x69                  	// #105
    46dc:	bl	0 <__assert_fail>
    46e0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    46e4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    46e8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    46ec:	add	x0, x0, #0x0
    46f0:	add	x1, x1, #0x0
    46f4:	add	x3, x3, #0x0
    46f8:	mov	w2, #0x108                 	// #264
    46fc:	bl	0 <__assert_fail>
    4700:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4704:	add	x0, x0, #0x0
    4708:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000470c <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE>:
    470c:	stp	x29, x30, [sp, #-32]!
    4710:	stp	x20, x19, [sp, #16]
    4714:	mov	x29, sp
    4718:	mov	x20, x0
    471c:	ldr	x8, [x20, #208]!
    4720:	ldr	x9, [x0, #216]
    4724:	mov	x19, x0
    4728:	sub	x8, x9, x8
    472c:	lsr	x8, x8, #3
    4730:	str	w8, [x0, #540]
    4734:	bl	2ed8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    4738:	ldrb	w8, [x19, #296]
    473c:	tbnz	w8, #0, 4754 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0x48>
    4740:	add	x8, x19, #0x120
    4744:	ldr	w10, [x8, #24]
    4748:	cbz	w10, 47e8 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0xdc>
    474c:	ldr	x8, [x8, #16]
    4750:	b	475c <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0x50>
    4754:	add	x8, x19, #0x130
    4758:	mov	w10, #0x1                   	// #1
    475c:	add	w9, w0, #0x1
    4760:	cmn	w9, #0x2
    4764:	b.cs	47f8 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0xec>  // b.hs, b.nlast
    4768:	mov	w11, #0x25                  	// #37
    476c:	mul	w11, w9, w11
    4770:	sub	w10, w10, #0x1
    4774:	and	w11, w10, w11
    4778:	add	x14, x8, w11, uxtw #4
    477c:	ldr	w12, [x14]
    4780:	cmp	w9, w12
    4784:	b.ne	47bc <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0xb0>  // b.any
    4788:	ldur	x10, [x14, #4]
    478c:	ldr	w9, [x14, #12]
    4790:	and	x8, x10, #0xffffffff
    4794:	lsr	x10, x10, #32
    4798:	ldr	x11, [x19, #232]
    479c:	str	w9, [x19, #544]
    47a0:	ldr	x1, [x19, #216]
    47a4:	mov	x0, x20
    47a8:	ldp	x20, x19, [sp, #16]
    47ac:	add	x2, x11, x8, lsl #3
    47b0:	add	x3, x11, x10, lsl #3
    47b4:	ldp	x29, x30, [sp], #32
    47b8:	b	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    47bc:	mov	w13, #0x1                   	// #1
    47c0:	cmn	w12, #0x1
    47c4:	b.eq	47e8 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0xdc>  // b.none
    47c8:	add	w11, w11, w13
    47cc:	and	w11, w11, w10
    47d0:	add	x14, x8, w11, uxtw #4
    47d4:	ldr	w12, [x14]
    47d8:	add	w13, w13, #0x1
    47dc:	cmp	w9, w12
    47e0:	b.eq	4788 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0x7c>  // b.none
    47e4:	b	47c0 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0xb4>
    47e8:	mov	x8, xzr
    47ec:	mov	x10, xzr
    47f0:	mov	w9, wzr
    47f4:	b	4798 <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE+0x8c>
    47f8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    47fc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4800:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4804:	add	x0, x0, #0x0
    4808:	add	x1, x1, #0x0
    480c:	add	x3, x3, #0x0
    4810:	mov	w2, #0x252                 	// #594
    4814:	bl	0 <__assert_fail>

0000000000004818 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE>:
    4818:	sub	sp, sp, #0xc0
    481c:	stp	x29, x30, [sp, #96]
    4820:	stp	x28, x27, [sp, #112]
    4824:	stp	x26, x25, [sp, #128]
    4828:	stp	x24, x23, [sp, #144]
    482c:	stp	x22, x21, [sp, #160]
    4830:	stp	x20, x19, [sp, #176]
    4834:	add	x29, sp, #0x60
    4838:	ldp	x9, x8, [x0, #112]
    483c:	mov	x22, x1
    4840:	mov	x20, x0
    4844:	str	wzr, [x0, #504]
    4848:	sub	x8, x8, x9
    484c:	lsr	x8, x8, #4
    4850:	str	w8, [x0, #536]
    4854:	bl	470c <_ZN4llvm15ValueEnumerator27incorporateFunctionMetadataERKNS_8FunctionE>
    4858:	ldrb	w8, [x22, #18]
    485c:	tbnz	w8, #0, 486c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x54>
    4860:	ldr	x21, [x22, #88]
    4864:	mov	x8, x21
    4868:	b	4894 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x7c>
    486c:	mov	x0, x22
    4870:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    4874:	ldrb	w8, [x22, #18]
    4878:	ldr	x21, [x22, #88]
    487c:	tbnz	w8, #0, 4888 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x70>
    4880:	mov	x8, x21
    4884:	b	4894 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x7c>
    4888:	mov	x0, x22
    488c:	bl	0 <_ZNK4llvm8Function18BuildLazyArgumentsEv>
    4890:	ldr	x8, [x22, #88]
    4894:	ldr	x9, [x22, #96]
    4898:	mov	w10, #0x28                  	// #40
    489c:	madd	x19, x9, x10, x8
    48a0:	b	48a8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x90>
    48a4:	add	x21, x21, #0x28
    48a8:	cmp	x19, x21
    48ac:	b.eq	48e4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0xcc>  // b.none
    48b0:	mov	x0, x20
    48b4:	mov	x1, x21
    48b8:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    48bc:	mov	w1, #0x6                   	// #6
    48c0:	mov	x0, x21
    48c4:	bl	0 <_ZNK4llvm8Argument12hasAttributeENS_9Attribute8AttrKindE>
    48c8:	tbz	w0, #0, 48a4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x8c>
    48cc:	mov	x0, x21
    48d0:	bl	0 <_ZNK4llvm8Argument17getParamByValTypeEv>
    48d4:	mov	x1, x0
    48d8:	mov	x0, x20
    48dc:	bl	1a08 <_ZN4llvm15ValueEnumerator13EnumerateTypeEPNS_4TypeE>
    48e0:	b	48a4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x8c>
    48e4:	ldp	x9, x8, [x20, #112]
    48e8:	sub	x8, x8, x9
    48ec:	lsr	x2, x8, #4
    48f0:	str	w2, [x20, #548]
    48f4:	ldr	x26, [x22, #80]
    48f8:	add	x8, x22, #0x48
    48fc:	mov	w1, w2
    4900:	stp	x22, x8, [sp]
    4904:	cmp	x8, x26
    4908:	b.eq	4b78 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x360>  // b.none
    490c:	add	x21, x20, #0x50
    4910:	mov	w27, #0x18                  	// #24
    4914:	b	4954 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x13c>
    4918:	mov	x3, xzr
    491c:	add	x1, sp, #0x10
    4920:	add	x2, sp, #0x10
    4924:	mov	x0, x21
    4928:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    492c:	ldr	x8, [sp, #16]
    4930:	str	wzr, [x0, #8]
    4934:	str	x8, [x0]
    4938:	sub	x8, x24, x22
    493c:	lsr	x8, x8, #3
    4940:	str	w8, [x0, #8]
    4944:	ldr	x26, [x26, #8]
    4948:	ldr	x8, [sp, #8]
    494c:	cmp	x8, x26
    4950:	b.eq	4b64 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x34c>  // b.none
    4954:	ldrb	w8, [x26]
    4958:	tbnz	w8, #2, 4e98 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x680>
    495c:	sub	x8, x26, #0x18
    4960:	cmp	x26, #0x0
    4964:	csel	x28, xzr, x8, eq  // eq = none
    4968:	ldr	x22, [x28, #48]
    496c:	add	x23, x28, #0x28
    4970:	b	4978 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x160>
    4974:	ldr	x22, [x22, #8]
    4978:	cmp	x23, x22
    497c:	b.eq	4a18 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x200>  // b.none
    4980:	ldrb	w8, [x22]
    4984:	tbnz	w8, #2, 4e58 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x640>
    4988:	sub	x8, x22, #0x18
    498c:	cmp	x22, #0x0
    4990:	csel	x9, xzr, x8, eq  // eq = none
    4994:	ldr	w8, [x9, #20]
    4998:	tbnz	w8, #30, 49b0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x198>
    499c:	and	w8, w8, #0xfffffff
    49a0:	mneg	x10, x8, x27
    49a4:	add	x24, x9, x10
    49a8:	cbnz	x8, 49bc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1a4>
    49ac:	b	4974 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x15c>
    49b0:	ldur	x24, [x9, #-8]
    49b4:	and	x8, x8, #0xfffffff
    49b8:	cbz	x8, 4974 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x15c>
    49bc:	add	x8, x8, x8, lsl #1
    49c0:	lsl	x19, x8, #3
    49c4:	b	49dc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1c4>
    49c8:	mov	x0, x20
    49cc:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    49d0:	subs	x19, x19, #0x18
    49d4:	add	x24, x24, #0x18
    49d8:	b.eq	4974 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x15c>  // b.none
    49dc:	ldr	x1, [x24]
    49e0:	cbz	x1, 4dd8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x5c0>
    49e4:	ldrb	w8, [x1, #16]
    49e8:	cmp	w8, #0x10
    49ec:	b.hi	4a0c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1f4>  // b.pmore
    49f0:	cbz	w8, 49d0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b8>
    49f4:	cmp	w8, #0x3
    49f8:	b.eq	49d0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b8>  // b.none
    49fc:	sub	w8, w8, #0x1
    4a00:	cmp	w8, #0x2
    4a04:	b.cs	49c8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b0>  // b.hs, b.nlast
    4a08:	b	49d0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b8>
    4a0c:	cmp	w8, #0x14
    4a10:	b.eq	49c8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b0>  // b.none
    4a14:	b	49d0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x1b8>
    4a18:	ldr	x8, [x20, #520]
    4a1c:	ldr	x9, [x20, #528]
    4a20:	cmp	x8, x9
    4a24:	b.eq	4a40 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x228>  // b.none
    4a28:	str	x28, [x8]
    4a2c:	ldr	x8, [x20, #520]
    4a30:	ldr	x22, [x20, #512]
    4a34:	add	x24, x8, #0x8
    4a38:	str	x24, [x20, #520]
    4a3c:	b	4adc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2c4>
    4a40:	ldr	x23, [x20, #512]
    4a44:	sub	x24, x8, x23
    4a48:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    4a4c:	cmp	x24, x8
    4a50:	b.eq	4ef8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x6e0>  // b.none
    4a54:	asr	x25, x24, #3
    4a58:	cmp	x24, #0x0
    4a5c:	csinc	x8, x25, xzr, ne  // ne = any
    4a60:	adds	x8, x8, x25
    4a64:	lsr	x10, x8, #60
    4a68:	cset	w9, cs  // cs = hs, nlast
    4a6c:	cmp	x10, #0x0
    4a70:	cset	w10, ne  // ne = any
    4a74:	orr	w9, w9, w10
    4a78:	cmp	w9, #0x0
    4a7c:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    4a80:	csel	x19, x9, x8, ne  // ne = any
    4a84:	cbz	x19, 4a98 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x280>
    4a88:	lsl	x0, x19, #3
    4a8c:	bl	0 <_Znwm>
    4a90:	mov	x22, x0
    4a94:	b	4a9c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x284>
    4a98:	mov	x22, xzr
    4a9c:	add	x25, x22, x25, lsl #3
    4aa0:	cmp	x24, #0x1
    4aa4:	str	x28, [x25]
    4aa8:	b.lt	4abc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2a4>  // b.tstop
    4aac:	mov	x0, x22
    4ab0:	mov	x1, x23
    4ab4:	mov	x2, x24
    4ab8:	bl	0 <memmove>
    4abc:	add	x24, x25, #0x8
    4ac0:	cbz	x23, 4acc <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x2b4>
    4ac4:	mov	x0, x23
    4ac8:	bl	0 <_ZdlPv>
    4acc:	add	x8, x22, x19, lsl #3
    4ad0:	str	x22, [x20, #512]
    4ad4:	str	x24, [x20, #520]
    4ad8:	str	x8, [x20, #528]
    4adc:	str	x28, [sp, #16]
    4ae0:	ldr	w9, [x21, #24]
    4ae4:	cbz	w9, 4918 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x100>
    4ae8:	orr	x8, x28, #0x8
    4aec:	cmn	x8, #0x8
    4af0:	b.eq	4e78 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x660>  // b.none
    4af4:	ldr	x8, [x21, #8]
    4af8:	ubfx	x10, x28, #4, #28
    4afc:	eor	w10, w10, w28, lsr #9
    4b00:	sub	w9, w9, #0x1
    4b04:	and	w10, w10, w9
    4b08:	add	x0, x8, w10, uxtw #4
    4b0c:	ldr	x12, [x0]
    4b10:	cmp	x12, x28
    4b14:	b.eq	4938 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x120>  // b.none
    4b18:	mov	x11, xzr
    4b1c:	mov	w13, #0x1                   	// #1
    4b20:	cmn	x12, #0x8
    4b24:	b.eq	4b58 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x340>  // b.none
    4b28:	cmp	x11, #0x0
    4b2c:	add	w10, w10, w13
    4b30:	mov	x14, #0xfffffffffffffff0    	// #-16
    4b34:	ccmp	x12, x14, #0x0, eq  // eq = none
    4b38:	and	w10, w10, w9
    4b3c:	csel	x11, x11, x0, ne  // ne = any
    4b40:	add	x0, x8, w10, uxtw #4
    4b44:	ldr	x12, [x0]
    4b48:	add	w13, w13, #0x1
    4b4c:	cmp	x12, x28
    4b50:	b.eq	4938 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x120>  // b.none
    4b54:	b	4b20 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x308>
    4b58:	cmp	x11, #0x0
    4b5c:	csel	x3, x0, x11, eq  // eq = none
    4b60:	b	491c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x104>
    4b64:	ldp	x9, x8, [x20, #112]
    4b68:	ldr	w1, [x20, #548]
    4b6c:	ldr	x22, [sp]
    4b70:	sub	x8, x8, x9
    4b74:	lsr	x2, x8, #4
    4b78:	mov	x0, x20
    4b7c:	bl	1ec8 <_ZN4llvm15ValueEnumerator17OptimizeConstantsEjj>
    4b80:	ldr	x1, [x22, #112]
    4b84:	mov	x0, x20
    4b88:	bl	17d8 <_ZN4llvm15ValueEnumerator19EnumerateAttributesENS_13AttributeListE>
    4b8c:	ldp	x9, x8, [x20, #112]
    4b90:	adrp	x11, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4b94:	ldr	d0, [x11]
    4b98:	add	x10, sp, #0x10
    4b9c:	sub	x8, x8, x9
    4ba0:	add	x10, x10, #0x10
    4ba4:	lsr	x8, x8, #4
    4ba8:	str	w8, [x20, #552]
    4bac:	str	x10, [sp, #16]
    4bb0:	str	d0, [sp, #24]
    4bb4:	ldr	x23, [x22, #80]
    4bb8:	ldr	x8, [sp, #8]
    4bbc:	mov	x25, x10
    4bc0:	cmp	x8, x23
    4bc4:	b.eq	4da8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x590>  // b.none
    4bc8:	mov	w24, #0x18                  	// #24
    4bcc:	b	4be0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3c8>
    4bd0:	ldr	x23, [x23, #8]
    4bd4:	ldr	x8, [sp, #8]
    4bd8:	cmp	x8, x23
    4bdc:	b.eq	4cf0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4d8>  // b.none
    4be0:	ldrb	w8, [x23]
    4be4:	tbnz	w8, #2, 4e98 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x680>
    4be8:	sub	x8, x23, #0x18
    4bec:	cmp	x23, #0x0
    4bf0:	csel	x8, xzr, x8, eq  // eq = none
    4bf4:	ldr	x26, [x8, #48]
    4bf8:	add	x27, x8, #0x28
    4bfc:	b	4c04 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3ec>
    4c00:	ldr	x26, [x26, #8]
    4c04:	cmp	x27, x26
    4c08:	b.eq	4bd0 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3b8>  // b.none
    4c0c:	ldrb	w8, [x26]
    4c10:	tbnz	w8, #2, 4e58 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x640>
    4c14:	sub	x8, x26, #0x18
    4c18:	cmp	x26, #0x0
    4c1c:	csel	x22, xzr, x8, eq  // eq = none
    4c20:	ldr	w8, [x22, #20]
    4c24:	tbnz	w8, #30, 4c3c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x424>
    4c28:	and	w8, w8, #0xfffffff
    4c2c:	mneg	x9, x8, x24
    4c30:	add	x28, x22, x9
    4c34:	cbnz	x8, 4c48 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x430>
    4c38:	b	4cd4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4bc>
    4c3c:	ldur	x28, [x22, #-8]
    4c40:	and	x8, x8, #0xfffffff
    4c44:	cbz	x8, 4cd4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4bc>
    4c48:	add	x8, x8, x8, lsl #1
    4c4c:	lsl	x21, x8, #3
    4c50:	b	4c60 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x448>
    4c54:	subs	x21, x21, #0x18
    4c58:	add	x28, x28, #0x18
    4c5c:	b.eq	4cd4 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4bc>  // b.none
    4c60:	ldr	x8, [x28]
    4c64:	cbz	x8, 4df8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x5e0>
    4c68:	ldrb	w9, [x8, #16]
    4c6c:	cmp	w9, #0x13
    4c70:	b.ne	4c54 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x43c>  // b.any
    4c74:	ldr	x8, [x8, #24]
    4c78:	cbz	x8, 4e18 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x600>
    4c7c:	ldrb	w9, [x8]
    4c80:	cmp	w9, #0x2
    4c84:	csel	x19, x8, xzr, eq  // eq = none
    4c88:	cbz	x19, 4c54 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x43c>
    4c8c:	ldp	w8, w9, [sp, #24]
    4c90:	cmp	w8, w9
    4c94:	b.cs	4cb8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4a0>  // b.hs, b.nlast
    4c98:	ldr	x9, [sp, #16]
    4c9c:	str	x19, [x9, w8, uxtw #3]
    4ca0:	ldp	w8, w9, [sp, #24]
    4ca4:	cmp	w8, w9
    4ca8:	b.cs	4e38 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x620>  // b.hs, b.nlast
    4cac:	add	w8, w8, #0x1
    4cb0:	str	w8, [sp, #24]
    4cb4:	b	4c54 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x43c>
    4cb8:	add	x0, sp, #0x10
    4cbc:	mov	w3, #0x8                   	// #8
    4cc0:	mov	x1, x25
    4cc4:	mov	x2, xzr
    4cc8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4ccc:	ldr	w8, [sp, #24]
    4cd0:	b	4c98 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x480>
    4cd4:	ldr	x8, [x22]
    4cd8:	ldrb	w8, [x8, #8]
    4cdc:	cbz	w8, 4c00 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3e8>
    4ce0:	mov	x0, x20
    4ce4:	mov	x1, x22
    4ce8:	bl	1460 <_ZN4llvm15ValueEnumerator14EnumerateValueEPKNS_5ValueE>
    4cec:	b	4c00 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x3e8>
    4cf0:	ldr	w23, [sp, #24]
    4cf4:	ldr	x19, [sp]
    4cf8:	cbz	w23, 4da8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x590>
    4cfc:	mov	x24, xzr
    4d00:	ldr	w10, [x20, #104]
    4d04:	cbz	w10, 4eb8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x6a0>
    4d08:	ldr	x8, [sp, #16]
    4d0c:	ldr	x22, [x8, x24, lsl #3]
    4d10:	ldr	x8, [x22, #136]
    4d14:	orr	x9, x8, #0x8
    4d18:	cmn	x9, #0x8
    4d1c:	b.eq	4e78 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x660>  // b.none
    4d20:	ldr	x9, [x20, #88]
    4d24:	ubfx	x11, x8, #4, #28
    4d28:	eor	w11, w11, w8, lsr #9
    4d2c:	sub	w10, w10, #0x1
    4d30:	and	w11, w11, w10
    4d34:	lsl	x12, x11, #4
    4d38:	ldr	x12, [x9, x12]
    4d3c:	cmp	x12, x8
    4d40:	b.ne	4d7c <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x564>  // b.any
    4d44:	mov	x0, x20
    4d48:	mov	x1, x19
    4d4c:	bl	2ed8 <_ZNK4llvm15ValueEnumerator10getValueIDEPKNS_5ValueE>
    4d50:	add	w1, w0, #0x1
    4d54:	mov	x0, x20
    4d58:	mov	x2, x22
    4d5c:	bl	40f0 <_ZN4llvm15ValueEnumerator30EnumerateFunctionLocalMetadataEjPKNS_15LocalAsMetadataE>
    4d60:	add	x24, x24, #0x1
    4d64:	cmp	x24, x23
    4d68:	b.eq	4da8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x590>  // b.none
    4d6c:	ldr	w8, [sp, #24]
    4d70:	cmp	x24, x8
    4d74:	b.cc	4d00 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x4e8>  // b.lo, b.ul, b.last
    4d78:	b	4ed8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x6c0>
    4d7c:	mov	w13, #0x1                   	// #1
    4d80:	cmn	x12, #0x8
    4d84:	b.eq	4eb8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x6a0>  // b.none
    4d88:	add	w11, w11, w13
    4d8c:	and	w11, w11, w10
    4d90:	lsl	x12, x11, #4
    4d94:	ldr	x12, [x9, x12]
    4d98:	add	w13, w13, #0x1
    4d9c:	cmp	x12, x8
    4da0:	b.eq	4d44 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x52c>  // b.none
    4da4:	b	4d80 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x568>
    4da8:	ldr	x0, [sp, #16]
    4dac:	cmp	x0, x25
    4db0:	b.eq	4db8 <_ZN4llvm15ValueEnumerator19incorporateFunctionERKNS_8FunctionE+0x5a0>  // b.none
    4db4:	bl	0 <free>
    4db8:	ldp	x20, x19, [sp, #176]
    4dbc:	ldp	x22, x21, [sp, #160]
    4dc0:	ldp	x24, x23, [sp, #144]
    4dc4:	ldp	x26, x25, [sp, #128]
    4dc8:	ldp	x28, x27, [sp, #112]
    4dcc:	ldp	x29, x30, [sp, #96]
    4dd0:	add	sp, sp, #0xc0
    4dd4:	ret
    4dd8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4ddc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4de0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4de4:	add	x0, x0, #0x0
    4de8:	add	x1, x1, #0x0
    4dec:	add	x3, x3, #0x0
    4df0:	mov	w2, #0x5b                  	// #91
    4df4:	bl	0 <__assert_fail>
    4df8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4dfc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e00:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e04:	add	x0, x0, #0x0
    4e08:	add	x1, x1, #0x0
    4e0c:	add	x3, x3, #0x0
    4e10:	mov	w2, #0x69                  	// #105
    4e14:	bl	0 <__assert_fail>
    4e18:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e1c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e20:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e24:	add	x0, x0, #0x0
    4e28:	add	x1, x1, #0x0
    4e2c:	add	x3, x3, #0x0
    4e30:	mov	w2, #0x69                  	// #105
    4e34:	bl	0 <__assert_fail>
    4e38:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e3c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e40:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e44:	add	x0, x0, #0x0
    4e48:	add	x1, x1, #0x0
    4e4c:	add	x3, x3, #0x0
    4e50:	mov	w2, #0x43                  	// #67
    4e54:	bl	0 <__assert_fail>
    4e58:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e5c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e60:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e64:	add	x0, x0, #0x0
    4e68:	add	x1, x1, #0x0
    4e6c:	add	x3, x3, #0x0
    4e70:	mov	w2, #0x8b                  	// #139
    4e74:	bl	0 <__assert_fail>
    4e78:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e7c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e80:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e84:	add	x0, x0, #0x0
    4e88:	add	x1, x1, #0x0
    4e8c:	add	x3, x3, #0x0
    4e90:	mov	w2, #0x252                 	// #594
    4e94:	bl	0 <__assert_fail>
    4e98:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4e9c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4ea0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4ea4:	add	x0, x0, #0x0
    4ea8:	add	x1, x1, #0x0
    4eac:	add	x3, x3, #0x0
    4eb0:	mov	w2, #0x8b                  	// #139
    4eb4:	bl	0 <__assert_fail>
    4eb8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4ebc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4ec0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4ec4:	add	x0, x0, #0x0
    4ec8:	add	x1, x1, #0x0
    4ecc:	add	x3, x3, #0x0
    4ed0:	mov	w2, #0x3e8                 	// #1000
    4ed4:	bl	0 <__assert_fail>
    4ed8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4edc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4ee0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4ee4:	add	x0, x0, #0x0
    4ee8:	add	x1, x1, #0x0
    4eec:	add	x3, x3, #0x0
    4ef0:	mov	w2, #0x95                  	// #149
    4ef4:	bl	0 <__assert_fail>
    4ef8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4efc:	add	x0, x0, #0x0
    4f00:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000004f04 <_ZN4llvm15ValueEnumerator13purgeFunctionEv>:
    4f04:	stp	x29, x30, [sp, #-32]!
    4f08:	stp	x20, x19, [sp, #16]
    4f0c:	mov	x29, sp
    4f10:	mov	x19, x0
    4f14:	ldr	x9, [x0, #112]!
    4f18:	ldr	x10, [x0, #8]
    4f1c:	ldr	w8, [x0, #424]
    4f20:	sub	x9, x10, x9
    4f24:	lsr	x9, x9, #4
    4f28:	cmp	w8, w9
    4f2c:	adrp	x10, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    4f30:	b.ne	5034 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x130>  // b.any
    4f34:	mov	x20, x19
    4f38:	ldr	x11, [x20, #208]!
    4f3c:	ldr	x12, [x20, #8]
    4f40:	ldr	w9, [x20, #332]
    4f44:	sub	x11, x12, x11
    4f48:	lsr	x11, x11, #3
    4f4c:	cmp	w9, w11
    4f50:	b.ne	504c <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x148>  // b.any
    4f54:	ldr	x11, [x19, #520]
    4f58:	ldr	x15, [x19, #512]
    4f5c:	sub	x13, x11, x15
    4f60:	lsr	x11, x13, #3
    4f64:	cbz	w11, 5010 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x10c>
    4f68:	ldr	w12, [x19, #104]
    4f6c:	ldr	d0, [x10]
    4f70:	mov	x11, xzr
    4f74:	ubfx	x10, x13, #3, #32
    4f78:	sub	w13, w12, #0x1
    4f7c:	mov	x14, #0xfffffffffffffff0    	// #-16
    4f80:	cbz	w12, 4fc8 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xc4>
    4f84:	ldr	x16, [x15, x11, lsl #3]
    4f88:	orr	x15, x16, #0x8
    4f8c:	cmn	x15, #0x8
    4f90:	b.eq	51f0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2ec>  // b.none
    4f94:	ldr	x15, [x19, #88]
    4f98:	ubfx	x17, x16, #4, #28
    4f9c:	eor	w17, w17, w16, lsr #9
    4fa0:	and	w17, w17, w13
    4fa4:	lsl	x18, x17, #4
    4fa8:	ldr	x18, [x15, x18]
    4fac:	cmp	x18, x16
    4fb0:	b.ne	4fe0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xdc>  // b.any
    4fb4:	lsl	x16, x17, #4
    4fb8:	str	x14, [x15, x16]
    4fbc:	ldr	d1, [x19, #96]
    4fc0:	add	v1.2s, v1.2s, v0.2s
    4fc4:	str	d1, [x19, #96]
    4fc8:	add	x11, x11, #0x1
    4fcc:	cmp	x11, x10
    4fd0:	b.eq	5010 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x10c>  // b.none
    4fd4:	ldr	x15, [x19, #512]
    4fd8:	cbnz	w12, 4f84 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x80>
    4fdc:	b	4fc8 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xc4>
    4fe0:	mov	w1, #0x1                   	// #1
    4fe4:	cmn	x18, #0x8
    4fe8:	b.eq	4fc8 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xc4>  // b.none
    4fec:	add	w17, w17, w1
    4ff0:	and	w17, w17, w13
    4ff4:	lsl	x18, x17, #4
    4ff8:	ldr	x18, [x15, x18]
    4ffc:	add	w1, w1, #0x1
    5000:	cmp	x18, x16
    5004:	b.ne	4fe4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xe0>  // b.any
    5008:	mov	w17, w17
    500c:	b	4fb4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0xb0>
    5010:	ldp	x11, x10, [x19, #112]
    5014:	sub	x12, x10, x11
    5018:	asr	x12, x12, #4
    501c:	cmp	x12, x8
    5020:	b.cs	5064 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x160>  // b.hs, b.nlast
    5024:	sub	x1, x8, x12
    5028:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    502c:	ldr	w9, [x19, #540]
    5030:	b	5078 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x174>
    5034:	ldr	w11, [x19, #104]
    5038:	ldr	d0, [x10]
    503c:	mov	x13, #0xfffffffffffffff0    	// #-16
    5040:	mov	w14, w8
    5044:	sub	w12, w11, #0x1
    5048:	b	5120 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x21c>
    504c:	ldr	w12, [x19, #280]
    5050:	ldr	d0, [x10]
    5054:	mov	x14, #0xfffffffffffffff8    	// #-8
    5058:	mov	w15, w9
    505c:	sub	w13, w12, #0x1
    5060:	b	51b0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2ac>
    5064:	b.ls	5078 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x174>  // b.plast
    5068:	add	x8, x11, x8, lsl #4
    506c:	cmp	x8, x10
    5070:	b.eq	5078 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x174>  // b.none
    5074:	str	x8, [x19, #120]
    5078:	ldp	x10, x8, [x19, #208]
    507c:	mov	w9, w9
    5080:	sub	x11, x8, x10
    5084:	asr	x11, x11, #3
    5088:	cmp	x11, x9
    508c:	b.cs	50a0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x19c>  // b.hs, b.nlast
    5090:	sub	x1, x9, x11
    5094:	mov	x0, x20
    5098:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    509c:	b	50b4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x1b0>
    50a0:	b.ls	50b4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x1b0>  // b.plast
    50a4:	add	x9, x10, x9, lsl #3
    50a8:	cmp	x9, x8
    50ac:	b.eq	50b4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x1b0>  // b.none
    50b0:	str	x9, [x19, #216]
    50b4:	ldr	x8, [x19, #512]
    50b8:	ldr	x9, [x19, #520]
    50bc:	cmp	x9, x8
    50c0:	b.eq	50c8 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x1c4>  // b.none
    50c4:	str	x8, [x19, #520]
    50c8:	str	wzr, [x19, #544]
    50cc:	ldp	x20, x19, [sp, #16]
    50d0:	ldp	x29, x30, [sp], #32
    50d4:	ret
    50d8:	cmn	x18, #0x8
    50dc:	b.eq	5114 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x210>  // b.none
    50e0:	add	w17, w17, w1
    50e4:	and	w17, w17, w12
    50e8:	lsl	x18, x17, #4
    50ec:	ldr	x18, [x15, x18]
    50f0:	add	w1, w1, #0x1
    50f4:	cmp	x18, x16
    50f8:	b.ne	50d8 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x1d4>  // b.any
    50fc:	mov	w17, w17
    5100:	lsl	x16, x17, #4
    5104:	str	x13, [x15, x16]
    5108:	ldr	d1, [x19, #96]
    510c:	add	v1.2s, v1.2s, v0.2s
    5110:	str	d1, [x19, #96]
    5114:	add	w14, w14, #0x1
    5118:	cmp	w14, w9
    511c:	b.eq	4f34 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x30>  // b.none
    5120:	cbz	w11, 5114 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x210>
    5124:	ldr	x15, [x0]
    5128:	mov	w16, w14
    512c:	lsl	x16, x16, #4
    5130:	ldr	x16, [x15, x16]
    5134:	orr	x15, x16, #0x8
    5138:	cmn	x15, #0x8
    513c:	b.eq	51f0 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2ec>  // b.none
    5140:	ldr	x15, [x19, #88]
    5144:	ubfx	x17, x16, #4, #28
    5148:	eor	w17, w17, w16, lsr #9
    514c:	and	w17, w17, w12
    5150:	lsl	x18, x17, #4
    5154:	ldr	x18, [x15, x18]
    5158:	cmp	x18, x16
    515c:	b.eq	5100 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x1fc>  // b.none
    5160:	mov	w1, #0x1                   	// #1
    5164:	b	50d8 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x1d4>
    5168:	cmn	x1, #0x4
    516c:	b.eq	51a4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2a0>  // b.none
    5170:	add	w18, w18, w2
    5174:	and	w18, w18, w13
    5178:	lsl	x1, x18, #4
    517c:	ldr	x1, [x16, x1]
    5180:	add	w2, w2, #0x1
    5184:	cmp	x1, x17
    5188:	b.ne	5168 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x264>  // b.any
    518c:	mov	w18, w18
    5190:	lsl	x17, x18, #4
    5194:	str	x14, [x16, x17]
    5198:	ldr	d1, [x19, #272]
    519c:	add	v1.2s, v1.2s, v0.2s
    51a0:	str	d1, [x19, #272]
    51a4:	add	w15, w15, #0x1
    51a8:	cmp	w15, w11
    51ac:	b.eq	4f54 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x50>  // b.none
    51b0:	cbz	w12, 51a4 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x2a0>
    51b4:	ldr	x16, [x20]
    51b8:	ldr	x17, [x16, w15, uxtw #3]
    51bc:	orr	x16, x17, #0x4
    51c0:	cmn	x16, #0x4
    51c4:	b.eq	5210 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x30c>  // b.none
    51c8:	ldr	x16, [x19, #264]
    51cc:	ubfx	x18, x17, #4, #28
    51d0:	eor	w18, w18, w17, lsr #9
    51d4:	and	w18, w18, w13
    51d8:	lsl	x1, x18, #4
    51dc:	ldr	x1, [x16, x1]
    51e0:	cmp	x1, x17
    51e4:	b.eq	5190 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x28c>  // b.none
    51e8:	mov	w2, #0x1                   	// #1
    51ec:	b	5168 <_ZN4llvm15ValueEnumerator13purgeFunctionEv+0x264>
    51f0:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    51f4:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    51f8:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    51fc:	add	x0, x0, #0x0
    5200:	add	x1, x1, #0x0
    5204:	add	x3, x3, #0x0
    5208:	mov	w2, #0x252                 	// #594
    520c:	bl	0 <__assert_fail>
    5210:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5214:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5218:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    521c:	add	x0, x0, #0x0
    5220:	add	x1, x1, #0x0
    5224:	add	x3, x3, #0x0
    5228:	mov	w2, #0x252                 	// #594
    522c:	bl	0 <__assert_fail>

0000000000005230 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE>:
    5230:	sub	sp, sp, #0x50
    5234:	stp	x29, x30, [sp, #16]
    5238:	stp	x24, x23, [sp, #32]
    523c:	stp	x22, x21, [sp, #48]
    5240:	stp	x20, x19, [sp, #64]
    5244:	add	x29, sp, #0x10
    5248:	str	x1, [sp]
    524c:	ldr	w9, [x0, #464]
    5250:	mov	x19, x0
    5254:	add	x20, x0, #0x1b8
    5258:	cbz	w9, 52cc <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x9c>
    525c:	orr	x8, x1, #0x8
    5260:	cmn	x8, #0x8
    5264:	b.eq	541c <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1ec>  // b.none
    5268:	ldr	x8, [x19, #448]
    526c:	ubfx	x10, x1, #4, #28
    5270:	eor	w10, w10, w1, lsr #9
    5274:	sub	w9, w9, #0x1
    5278:	and	w10, w10, w9
    527c:	add	x0, x8, w10, uxtw #4
    5280:	ldr	x12, [x0]
    5284:	cmp	x12, x1
    5288:	b.eq	52ec <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xbc>  // b.none
    528c:	mov	x11, xzr
    5290:	mov	w14, #0x1                   	// #1
    5294:	mov	x13, #0xfffffffffffffff0    	// #-16
    5298:	cmn	x12, #0x8
    529c:	b.eq	5410 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1e0>  // b.none
    52a0:	cmp	x11, #0x0
    52a4:	add	w10, w10, w14
    52a8:	ccmp	x12, x13, #0x0, eq  // eq = none
    52ac:	and	w10, w10, w9
    52b0:	csel	x11, x11, x0, ne  // ne = any
    52b4:	add	x0, x8, w10, uxtw #4
    52b8:	ldr	x12, [x0]
    52bc:	add	w14, w14, #0x1
    52c0:	cmp	x12, x1
    52c4:	b.eq	52ec <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xbc>  // b.none
    52c8:	b	5298 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x68>
    52cc:	mov	x3, xzr
    52d0:	mov	x1, sp
    52d4:	mov	x2, sp
    52d8:	mov	x0, x20
    52dc:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    52e0:	ldr	x8, [sp]
    52e4:	str	wzr, [x0, #8]
    52e8:	str	x8, [x0]
    52ec:	ldr	w8, [x0, #8]
    52f0:	cbz	w8, 52fc <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xcc>
    52f4:	sub	w0, w8, #0x1
    52f8:	b	53f8 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1c8>
    52fc:	ldr	x1, [sp]
    5300:	ldr	x8, [x1, #56]
    5304:	ldr	x21, [x8, #80]
    5308:	add	x22, x8, #0x48
    530c:	cmp	x22, x21
    5310:	b.eq	53f0 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1c0>  // b.none
    5314:	mov	w23, wzr
    5318:	mov	x24, #0xfffffffffffffff0    	// #-16
    531c:	b	5354 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x124>
    5320:	mov	x3, xzr
    5324:	add	x1, sp, #0x8
    5328:	add	x2, sp, #0x8
    532c:	mov	x0, x20
    5330:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5334:	ldr	x8, [sp, #8]
    5338:	str	wzr, [x0, #8]
    533c:	str	x8, [x0]
    5340:	add	w23, w23, #0x1
    5344:	str	w23, [x0, #8]
    5348:	ldr	x21, [x21, #8]
    534c:	cmp	x22, x21
    5350:	b.eq	53ec <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1bc>  // b.none
    5354:	ldrb	w8, [x21]
    5358:	tbnz	w8, #2, 543c <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x20c>
    535c:	sub	x8, x21, #0x18
    5360:	cmp	x21, #0x0
    5364:	csel	x8, xzr, x8, eq  // eq = none
    5368:	str	x8, [sp, #8]
    536c:	ldr	w10, [x20, #24]
    5370:	cbz	w10, 5320 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xf0>
    5374:	orr	x9, x8, #0x8
    5378:	cmn	x9, #0x8
    537c:	b.eq	541c <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1ec>  // b.none
    5380:	ldr	x9, [x20, #8]
    5384:	ubfx	x11, x8, #4, #28
    5388:	eor	w11, w11, w8, lsr #9
    538c:	sub	w10, w10, #0x1
    5390:	and	w11, w10, w11
    5394:	add	x0, x9, w11, uxtw #4
    5398:	ldr	x13, [x0]
    539c:	cmp	x13, x8
    53a0:	b.eq	5340 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x110>  // b.none
    53a4:	mov	x12, xzr
    53a8:	mov	w14, #0x1                   	// #1
    53ac:	cmn	x13, #0x8
    53b0:	b.eq	53e0 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x1b0>  // b.none
    53b4:	cmp	x12, #0x0
    53b8:	add	w11, w11, w14
    53bc:	ccmp	x13, x24, #0x0, eq  // eq = none
    53c0:	and	w11, w11, w10
    53c4:	csel	x12, x12, x0, ne  // ne = any
    53c8:	add	x0, x9, w11, uxtw #4
    53cc:	ldr	x13, [x0]
    53d0:	add	w14, w14, #0x1
    53d4:	cmp	x13, x8
    53d8:	b.eq	5340 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x110>  // b.none
    53dc:	b	53ac <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0x17c>
    53e0:	cmp	x12, #0x0
    53e4:	csel	x3, x0, x12, eq  // eq = none
    53e8:	b	5324 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xf4>
    53ec:	ldr	x1, [sp]
    53f0:	mov	x0, x19
    53f4:	bl	5230 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE>
    53f8:	ldp	x20, x19, [sp, #64]
    53fc:	ldp	x22, x21, [sp, #48]
    5400:	ldp	x24, x23, [sp, #32]
    5404:	ldp	x29, x30, [sp, #16]
    5408:	add	sp, sp, #0x50
    540c:	ret
    5410:	cmp	x11, #0x0
    5414:	csel	x3, x0, x11, eq  // eq = none
    5418:	b	52d0 <_ZNK4llvm15ValueEnumerator21getGlobalBasicBlockIDEPKNS_10BasicBlockE+0xa0>
    541c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5420:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5424:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5428:	add	x0, x0, #0x0
    542c:	add	x1, x1, #0x0
    5430:	add	x3, x3, #0x0
    5434:	mov	w2, #0x252                 	// #594
    5438:	bl	0 <__assert_fail>
    543c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5440:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5444:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5448:	add	x0, x0, #0x0
    544c:	add	x1, x1, #0x0
    5450:	add	x3, x3, #0x0
    5454:	mov	w2, #0x8b                  	// #139
    5458:	bl	0 <__assert_fail>

000000000000545c <_ZNK4llvm15ValueEnumerator34computeBitsRequiredForTypeIndiciesEv>:
    545c:	ldp	x9, x8, [x0, #56]
    5460:	sub	x8, x8, x9
    5464:	lsr	x8, x8, #3
    5468:	clz	w8, w8
    546c:	mov	w9, #0x20                  	// #32
    5470:	sub	w0, w9, w8
    5474:	ret

0000000000005478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>:
    5478:	stp	x29, x30, [sp, #-64]!
    547c:	str	x23, [sp, #16]
    5480:	stp	x22, x21, [sp, #32]
    5484:	stp	x20, x19, [sp, #48]
    5488:	mov	x29, sp
    548c:	mov	x21, x1
    5490:	mov	x22, x0
    5494:	str	x0, [x29, #24]
    5498:	add	x1, x29, #0x18
    549c:	mov	x0, x2
    54a0:	mov	x19, x3
    54a4:	mov	x20, x2
    54a8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    54ac:	ldr	w8, [x0]
    54b0:	cbz	w8, 55ac <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x134>
    54b4:	ldrb	w8, [x0, #4]
    54b8:	mov	x23, x0
    54bc:	cbnz	w8, 5578 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x100>
    54c0:	mov	w8, #0x1                   	// #1
    54c4:	mov	x0, x22
    54c8:	strb	w8, [x23, #4]
    54cc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    54d0:	ldr	x8, [x22, #8]
    54d4:	cbz	x8, 5508 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x90>
    54d8:	mov	x0, x22
    54dc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    54e0:	ldr	x8, [x22, #8]
    54e4:	cbz	x8, 55cc <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x154>
    54e8:	ldr	x8, [x8, #8]
    54ec:	cbz	x8, 5508 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x90>
    54f0:	ldr	w2, [x23]
    54f4:	mov	x0, x22
    54f8:	mov	x1, x21
    54fc:	mov	x3, x20
    5500:	mov	x4, x19
    5504:	bl	57ac <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE>
    5508:	ldrb	w8, [x22, #16]
    550c:	cmp	w8, #0x10
    5510:	b.hi	5578 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x100>  // b.pmore
    5514:	ldr	w9, [x22, #20]
    5518:	and	x8, x9, #0xfffffff
    551c:	cbz	w8, 5578 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x100>
    5520:	tbnz	w9, #30, 5534 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xbc>
    5524:	mov	w9, #0x18                  	// #24
    5528:	mneg	x9, x8, x9
    552c:	add	x22, x22, x9
    5530:	b	5538 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xc0>
    5534:	ldur	x22, [x22, #-8]
    5538:	add	x8, x8, x8, lsl #1
    553c:	lsl	x23, x8, #3
    5540:	b	5550 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xd8>
    5544:	subs	x23, x23, #0x18
    5548:	add	x22, x22, #0x18
    554c:	b.eq	5578 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x100>  // b.none
    5550:	ldr	x0, [x22]
    5554:	cbz	x0, 558c <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0x114>
    5558:	ldrb	w8, [x0, #16]
    555c:	cmp	w8, #0x10
    5560:	b.hi	5544 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xcc>  // b.pmore
    5564:	mov	x1, x21
    5568:	mov	x2, x20
    556c:	mov	x3, x19
    5570:	bl	5478 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE>
    5574:	b	5544 <_ZL24predictValueUseListOrderPKN4llvm5ValueEPKNS_8FunctionERN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISA_EE+0xcc>
    5578:	ldp	x20, x19, [sp, #48]
    557c:	ldp	x22, x21, [sp, #32]
    5580:	ldr	x23, [sp, #16]
    5584:	ldp	x29, x30, [sp], #64
    5588:	ret
    558c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5590:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5594:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5598:	add	x0, x0, #0x0
    559c:	add	x1, x1, #0x0
    55a0:	add	x3, x3, #0x0
    55a4:	mov	w2, #0x69                  	// #105
    55a8:	bl	0 <__assert_fail>
    55ac:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    55b0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    55b4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    55b8:	add	x0, x0, #0x0
    55bc:	add	x1, x1, #0x0
    55c0:	add	x3, x3, #0x0
    55c4:	mov	w2, #0xf2                  	// #242
    55c8:	bl	0 <__assert_fail>
    55cc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    55d0:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    55d4:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    55d8:	add	x0, x0, #0x0
    55dc:	add	x1, x1, #0x0
    55e0:	add	x3, x3, #0x0
    55e4:	mov	w2, #0x8d                  	// #141
    55e8:	bl	0 <__assert_fail>

00000000000055ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>:
    55ec:	sub	sp, sp, #0x50
    55f0:	stp	x29, x30, [sp, #16]
    55f4:	stp	x24, x23, [sp, #32]
    55f8:	stp	x22, x21, [sp, #48]
    55fc:	stp	x20, x19, [sp, #64]
    5600:	add	x29, sp, #0x10
    5604:	ldr	w9, [x1, #24]
    5608:	mov	x19, x1
    560c:	mov	x20, x0
    5610:	cbz	w9, 5650 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x64>
    5614:	orr	x8, x20, #0x8
    5618:	cmn	x8, #0x8
    561c:	b.eq	576c <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x180>  // b.none
    5620:	ldr	x8, [x19, #8]
    5624:	ubfx	x10, x20, #4, #28
    5628:	eor	w11, w10, w20, lsr #9
    562c:	sub	w10, w9, #0x1
    5630:	and	w9, w10, w11
    5634:	lsl	x11, x9, #4
    5638:	ldr	x11, [x8, x11]
    563c:	cmp	x11, x20
    5640:	b.ne	571c <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x130>  // b.any
    5644:	add	x8, x8, x9, lsl #4
    5648:	ldr	w8, [x8, #8]
    564c:	cbnz	w8, 567c <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x90>
    5650:	cbz	x20, 578c <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x1a0>
    5654:	ldrb	w9, [x20, #16]
    5658:	cmp	w9, #0x10
    565c:	b.ls	5694 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xa8>  // b.plast
    5660:	str	x20, [sp, #8]
    5664:	ldr	w8, [x19, #16]
    5668:	add	x1, sp, #0x8
    566c:	mov	x0, x19
    5670:	add	w20, w8, #0x1
    5674:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5678:	str	w20, [x0]
    567c:	ldp	x20, x19, [sp, #64]
    5680:	ldp	x22, x21, [sp, #48]
    5684:	ldp	x24, x23, [sp, #32]
    5688:	ldp	x29, x30, [sp, #16]
    568c:	add	sp, sp, #0x50
    5690:	ret
    5694:	ldr	w10, [x20, #20]
    5698:	and	x8, x10, #0xfffffff
    569c:	cbz	w8, 5660 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x74>
    56a0:	cmp	w9, #0x4
    56a4:	b.cc	5660 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x74>  // b.lo, b.ul, b.last
    56a8:	tbnz	w10, #30, 56bc <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xd0>
    56ac:	mov	w9, #0x18                  	// #24
    56b0:	mneg	x9, x8, x9
    56b4:	add	x21, x20, x9
    56b8:	b	56c0 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xd4>
    56bc:	ldur	x21, [x20, #-8]
    56c0:	add	x8, x8, x8, lsl #1
    56c4:	mov	w24, #0x9                   	// #9
    56c8:	mov	w22, #0x1                   	// #1
    56cc:	lsl	x23, x8, #3
    56d0:	movk	w24, #0x4, lsl #16
    56d4:	b	56e4 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xf8>
    56d8:	subs	x23, x23, #0x18
    56dc:	add	x21, x21, #0x18
    56e0:	b.eq	5660 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x74>  // b.none
    56e4:	ldr	x0, [x21]
    56e8:	cbz	x0, 574c <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x160>
    56ec:	ldrb	w8, [x0, #16]
    56f0:	cmp	w8, #0x12
    56f4:	b.hi	5704 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x118>  // b.pmore
    56f8:	lsl	w9, w22, w8
    56fc:	tst	w9, w24
    5700:	b.ne	56d8 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xec>  // b.any
    5704:	sub	w8, w8, #0x1
    5708:	cmp	w8, #0x2
    570c:	b.cc	56d8 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xec>  // b.lo, b.ul, b.last
    5710:	mov	x1, x19
    5714:	bl	55ec <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE>
    5718:	b	56d8 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0xec>
    571c:	mov	w12, #0x1                   	// #1
    5720:	cmn	x11, #0x8
    5724:	b.eq	5650 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x64>  // b.none
    5728:	add	w9, w9, w12
    572c:	and	w9, w9, w10
    5730:	lsl	x11, x9, #4
    5734:	ldr	x11, [x8, x11]
    5738:	add	w12, w12, #0x1
    573c:	cmp	x11, x20
    5740:	b.ne	5720 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x134>  // b.any
    5744:	mov	w9, w9
    5748:	b	5644 <_ZL10orderValuePKN4llvm5ValueERN12_GLOBAL__N_18OrderMapE+0x58>
    574c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5750:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5754:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5758:	add	x0, x0, #0x0
    575c:	add	x1, x1, #0x0
    5760:	add	x3, x3, #0x0
    5764:	mov	w2, #0x69                  	// #105
    5768:	bl	0 <__assert_fail>
    576c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5770:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5774:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5778:	add	x0, x0, #0x0
    577c:	add	x1, x1, #0x0
    5780:	add	x3, x3, #0x0
    5784:	mov	w2, #0x252                 	// #594
    5788:	bl	0 <__assert_fail>
    578c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5790:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5794:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5798:	add	x0, x0, #0x0
    579c:	add	x1, x1, #0x0
    57a0:	add	x3, x3, #0x0
    57a4:	mov	w2, #0x69                  	// #105
    57a8:	bl	0 <__assert_fail>

00000000000057ac <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE>:
    57ac:	stp	x29, x30, [sp, #-96]!
    57b0:	str	x28, [sp, #16]
    57b4:	stp	x26, x25, [sp, #32]
    57b8:	stp	x24, x23, [sp, #48]
    57bc:	stp	x22, x21, [sp, #64]
    57c0:	stp	x20, x19, [sp, #80]
    57c4:	mov	x29, sp
    57c8:	sub	sp, sp, #0x490
    57cc:	adrp	x8, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    57d0:	ldr	d0, [x8]
    57d4:	add	x8, sp, #0x10
    57d8:	sub	x24, x29, #0x68
    57dc:	add	x8, x8, #0x10
    57e0:	mov	x19, x4
    57e4:	mov	x20, x3
    57e8:	mov	x21, x0
    57ec:	stur	w2, [x29, #-108]
    57f0:	stp	x1, x0, [x24]
    57f4:	str	x8, [sp, #16]
    57f8:	str	d0, [sp, #24]
    57fc:	bl	0 <_ZNK4llvm5Value30assertModuleIsMaterializedImplEv>
    5800:	ldr	x21, [x21, #8]
    5804:	cbz	x21, 58d0 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x124>
    5808:	mov	x0, x21
    580c:	bl	0 <_ZNK4llvm3Use7getUserEv>
    5810:	ldr	w9, [x20, #24]
    5814:	cbz	w9, 5800 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x54>
    5818:	orr	x8, x0, #0x8
    581c:	cmn	x8, #0x8
    5820:	b.eq	5b68 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x3bc>  // b.none
    5824:	ldr	x8, [x20, #8]
    5828:	ubfx	x10, x0, #4, #28
    582c:	eor	w11, w10, w0, lsr #9
    5830:	sub	w10, w9, #0x1
    5834:	and	w9, w11, w10
    5838:	lsl	x11, x9, #4
    583c:	ldr	x11, [x8, x11]
    5840:	cmp	x11, x0
    5844:	b.ne	588c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0xe0>  // b.any
    5848:	add	x8, x8, x9, lsl #4
    584c:	ldr	w8, [x8, #8]
    5850:	cbz	w8, 5800 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x54>
    5854:	ldp	w22, w8, [sp, #24]
    5858:	cmp	w22, w8
    585c:	mov	w8, w22
    5860:	b.cs	58bc <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x110>  // b.hs, b.nlast
    5864:	ldr	x9, [sp, #16]
    5868:	add	x8, x9, w8, uxtw #4
    586c:	str	x21, [x8]
    5870:	str	w22, [x8, #8]
    5874:	ldp	w8, w9, [sp, #24]
    5878:	cmp	w8, w9
    587c:	b.cs	5b88 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x3dc>  // b.hs, b.nlast
    5880:	add	w8, w8, #0x1
    5884:	str	w8, [sp, #24]
    5888:	b	5800 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x54>
    588c:	mov	w12, #0x1                   	// #1
    5890:	cmn	x11, #0x8
    5894:	b.eq	5800 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x54>  // b.none
    5898:	add	w9, w9, w12
    589c:	and	w9, w9, w10
    58a0:	lsl	x11, x9, #4
    58a4:	ldr	x11, [x8, x11]
    58a8:	add	w12, w12, #0x1
    58ac:	cmp	x11, x0
    58b0:	b.ne	5890 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0xe4>  // b.any
    58b4:	mov	w9, w9
    58b8:	b	5848 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x9c>
    58bc:	add	x0, sp, #0x10
    58c0:	mov	x1, xzr
    58c4:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    58c8:	ldr	w8, [sp, #24]
    58cc:	b	5864 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0xb8>
    58d0:	ldr	w22, [sp, #24]
    58d4:	cmp	w22, #0x2
    58d8:	b.cc	5b30 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x384>  // b.lo, b.ul, b.last
    58dc:	ldur	w8, [x29, #-108]
    58e0:	ldr	w9, [x20, #36]
    58e4:	cmp	w9, w8
    58e8:	b.cs	58f4 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x148>  // b.hs, b.nlast
    58ec:	mov	w8, wzr
    58f0:	b	5900 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x154>
    58f4:	ldr	w9, [x20, #32]
    58f8:	cmp	w9, w8
    58fc:	cset	w8, cc  // cc = lo, ul, last
    5900:	ldr	x23, [sp, #16]
    5904:	strb	w8, [sp, #12]
    5908:	clz	x8, x22
    590c:	mov	w9, #0x7e                  	// #126
    5910:	add	x21, x23, x22, lsl #4
    5914:	sub	x25, x29, #0x6c
    5918:	add	x26, sp, #0xc
    591c:	sub	x2, x9, x8, lsl #1
    5920:	sub	x3, x29, #0x58
    5924:	mov	x0, x23
    5928:	mov	x1, x21
    592c:	stp	x20, x25, [x24, #16]
    5930:	str	x26, [x24, #32]
    5934:	bl	5bc8 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_>
    5938:	cmp	w22, #0x11
    593c:	b.cc	59d8 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x22c>  // b.lo, b.ul, b.last
    5940:	add	x22, x23, #0x100
    5944:	sub	x2, x29, #0x40
    5948:	mov	x0, x23
    594c:	mov	x1, x22
    5950:	stp	x20, x25, [x24, #40]
    5954:	str	x26, [x24, #56]
    5958:	bl	6284 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_>
    595c:	b	597c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x1d0>
    5960:	ldr	x8, [x24, #88]
    5964:	add	x22, x22, #0x10
    5968:	cmp	x22, x21
    596c:	str	x8, [x23]
    5970:	ldur	w8, [x29, #-8]
    5974:	str	w8, [x23, #8]
    5978:	b.eq	59f0 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x244>  // b.none
    597c:	stp	x20, x25, [x24, #64]
    5980:	str	x26, [x24, #80]
    5984:	ldr	q0, [x22]
    5988:	sub	x2, x22, #0x10
    598c:	sub	x0, x29, #0x28
    5990:	sub	x1, x29, #0x10
    5994:	stur	q0, [x24, #88]
    5998:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    599c:	mov	x23, x22
    59a0:	tbz	w0, #0, 5960 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x1b4>
    59a4:	mov	x8, x22
    59a8:	mov	x23, x22
    59ac:	ldr	x9, [x23, #-16]!
    59b0:	ldur	w10, [x8, #-8]
    59b4:	sub	x2, x8, #0x20
    59b8:	sub	x0, x29, #0x28
    59bc:	sub	x1, x29, #0x10
    59c0:	str	x9, [x8]
    59c4:	str	w10, [x8, #8]
    59c8:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    59cc:	mov	x8, x23
    59d0:	tbnz	w0, #0, 59ac <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x200>
    59d4:	b	5960 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x1b4>
    59d8:	sub	x2, x29, #0x28
    59dc:	mov	x0, x23
    59e0:	mov	x1, x21
    59e4:	stp	x20, x25, [x24, #64]
    59e8:	str	x26, [x24, #80]
    59ec:	bl	6284 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_>
    59f0:	ldr	w22, [sp, #24]
    59f4:	ldr	x8, [sp, #16]
    59f8:	cbz	w22, 5a2c <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x280>
    59fc:	lsl	x9, x22, #4
    5a00:	sub	x9, x9, #0x10
    5a04:	mov	x10, x8
    5a08:	cbz	x9, 5b30 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x384>
    5a0c:	ldr	w12, [x10, #24]
    5a10:	ldr	w13, [x10, #8]
    5a14:	add	x11, x10, #0x10
    5a18:	sub	x9, x9, #0x10
    5a1c:	mov	x10, x11
    5a20:	cmp	w12, w13
    5a24:	b.cs	5a08 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x25c>  // b.hs, b.nlast
    5a28:	b	5a30 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x284>
    5a2c:	mov	x11, x8
    5a30:	add	x8, x8, x22, lsl #4
    5a34:	cmp	x11, x8
    5a38:	b.eq	5b30 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x384>  // b.none
    5a3c:	str	x22, [x24, #64]
    5a40:	ldp	x20, x8, [x19, #8]
    5a44:	cmp	x20, x8
    5a48:	b.eq	5a70 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x2c4>  // b.none
    5a4c:	ldp	x9, x8, [x24]
    5a50:	lsl	x21, x22, #2
    5a54:	stp	xzr, xzr, [x20, #24]
    5a58:	stp	x9, xzr, [x20, #8]
    5a5c:	str	x8, [x20]
    5a60:	cbz	w22, 5a90 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x2e4>
    5a64:	mov	x0, x21
    5a68:	bl	0 <_Znwm>
    5a6c:	b	5a94 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x2e8>
    5a70:	sub	x2, x29, #0x60
    5a74:	sub	x3, x29, #0x68
    5a78:	sub	x4, x29, #0x28
    5a7c:	mov	x0, x19
    5a80:	mov	x1, x20
    5a84:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5a88:	ldr	x8, [x19, #8]
    5a8c:	b	5ac4 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x318>
    5a90:	mov	x0, xzr
    5a94:	add	x23, x0, x22, lsl #2
    5a98:	stp	x0, x0, [x20, #16]
    5a9c:	str	x23, [x20, #32]
    5aa0:	cbz	w22, 5ab4 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x308>
    5aa4:	mov	w1, wzr
    5aa8:	mov	x2, x21
    5aac:	bl	0 <memset>
    5ab0:	mov	x0, x23
    5ab4:	str	x0, [x20, #24]
    5ab8:	ldr	x8, [x19, #8]
    5abc:	add	x8, x8, #0x28
    5ac0:	str	x8, [x19, #8]
    5ac4:	ldp	x8, x9, [x8, #-24]
    5ac8:	ldr	w11, [sp, #24]
    5acc:	sub	x9, x9, x8
    5ad0:	cmp	x11, x9, asr #2
    5ad4:	b.ne	5ba8 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x3fc>  // b.any
    5ad8:	cbz	w11, 5b30 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x384>
    5adc:	ldr	x10, [sp, #16]
    5ae0:	mov	x9, xzr
    5ae4:	sub	x11, x11, #0x1
    5ae8:	add	x10, x10, #0x8
    5aec:	ldr	w12, [x10]
    5af0:	cmp	x11, x9
    5af4:	str	w12, [x8, x9, lsl #2]
    5af8:	b.eq	5b30 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x384>  // b.none
    5afc:	ldr	w12, [sp, #24]
    5b00:	add	x9, x9, #0x1
    5b04:	add	x10, x10, #0x10
    5b08:	cmp	x9, x12
    5b0c:	b.cc	5aec <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x340>  // b.lo, b.ul, b.last
    5b10:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b14:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b18:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b1c:	add	x0, x0, #0x0
    5b20:	add	x1, x1, #0x0
    5b24:	add	x3, x3, #0x0
    5b28:	mov	w2, #0x95                  	// #149
    5b2c:	bl	0 <__assert_fail>
    5b30:	ldr	x0, [sp, #16]
    5b34:	add	x8, sp, #0x10
    5b38:	add	x8, x8, #0x10
    5b3c:	cmp	x0, x8
    5b40:	b.eq	5b48 <_ZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EE+0x39c>  // b.none
    5b44:	bl	0 <free>
    5b48:	add	sp, sp, #0x490
    5b4c:	ldp	x20, x19, [sp, #80]
    5b50:	ldp	x22, x21, [sp, #64]
    5b54:	ldp	x24, x23, [sp, #48]
    5b58:	ldp	x26, x25, [sp, #32]
    5b5c:	ldr	x28, [sp, #16]
    5b60:	ldp	x29, x30, [sp], #96
    5b64:	ret
    5b68:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b6c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b70:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b74:	add	x0, x0, #0x0
    5b78:	add	x1, x1, #0x0
    5b7c:	add	x3, x3, #0x0
    5b80:	mov	w2, #0x252                 	// #594
    5b84:	bl	0 <__assert_fail>
    5b88:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b8c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b90:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5b94:	add	x0, x0, #0x0
    5b98:	add	x1, x1, #0x0
    5b9c:	add	x3, x3, #0x0
    5ba0:	mov	w2, #0x43                  	// #67
    5ba4:	bl	0 <__assert_fail>
    5ba8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5bac:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5bb0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    5bb4:	add	x0, x0, #0x0
    5bb8:	add	x1, x1, #0x0
    5bbc:	add	x3, x3, #0x0
    5bc0:	mov	w2, #0xea                  	// #234
    5bc4:	bl	0 <__assert_fail>

0000000000005bc8 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_>:
    5bc8:	sub	sp, sp, #0x100
    5bcc:	stp	x29, x30, [sp, #160]
    5bd0:	str	x27, [sp, #176]
    5bd4:	stp	x26, x25, [sp, #192]
    5bd8:	stp	x24, x23, [sp, #208]
    5bdc:	stp	x22, x21, [sp, #224]
    5be0:	stp	x20, x19, [sp, #240]
    5be4:	add	x29, sp, #0xa0
    5be8:	sub	x25, x1, x0
    5bec:	cmp	x25, #0x101
    5bf0:	b.lt	5ea8 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x2e0>  // b.tstop
    5bf4:	mov	x21, x3
    5bf8:	mov	x20, x1
    5bfc:	mov	x19, x0
    5c00:	mov	x22, x2
    5c04:	add	x23, x0, #0x10
    5c08:	add	x26, x0, #0x18
    5c0c:	b	5c44 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x7c>
    5c10:	ldr	x8, [x21, #16]
    5c14:	ldr	q0, [x21]
    5c18:	mov	x3, sp
    5c1c:	mov	x0, x24
    5c20:	mov	x1, x20
    5c24:	mov	x2, x22
    5c28:	str	x8, [sp, #16]
    5c2c:	str	q0, [sp]
    5c30:	bl	5bc8 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_>
    5c34:	sub	x25, x24, x19
    5c38:	cmp	x25, #0x100
    5c3c:	mov	x20, x24
    5c40:	b.le	5ea8 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x2e0>
    5c44:	cbz	x22, 5ddc <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x214>
    5c48:	ldr	x8, [x21, #16]
    5c4c:	ldr	q0, [x21]
    5c50:	lsr	x27, x25, #5
    5c54:	add	x24, x19, x27, lsl #4
    5c58:	str	x8, [sp, #48]
    5c5c:	str	q0, [sp, #32]
    5c60:	ldr	x8, [x21, #16]
    5c64:	ldr	q0, [x21]
    5c68:	sub	x0, x29, #0x20
    5c6c:	mov	x1, x23
    5c70:	mov	x2, x24
    5c74:	sub	x22, x22, #0x1
    5c78:	sub	x25, x20, #0x10
    5c7c:	stur	x8, [x29, #-16]
    5c80:	stur	q0, [x29, #-32]
    5c84:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    5c88:	tbz	w0, #0, 5cb8 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0xf0>
    5c8c:	sub	x0, x29, #0x20
    5c90:	mov	x1, x24
    5c94:	mov	x2, x25
    5c98:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    5c9c:	tbz	w0, #0, 5ce4 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x11c>
    5ca0:	ldr	x8, [x24]
    5ca4:	ldr	x9, [x19]
    5ca8:	add	x10, x19, x27, lsl #4
    5cac:	str	x8, [x19]
    5cb0:	str	x9, [x24]
    5cb4:	b	5d4c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x184>
    5cb8:	sub	x0, x29, #0x20
    5cbc:	mov	x1, x23
    5cc0:	mov	x2, x25
    5cc4:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    5cc8:	tbz	w0, #0, 5d10 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x148>
    5ccc:	ldr	x8, [x19, #16]
    5cd0:	ldr	x9, [x19]
    5cd4:	str	x8, [x19]
    5cd8:	str	x9, [x19, #16]
    5cdc:	mov	x8, x26
    5ce0:	b	5d50 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x188>
    5ce4:	sub	x0, x29, #0x20
    5ce8:	mov	x1, x23
    5cec:	mov	x2, x25
    5cf0:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    5cf4:	ldr	x8, [x19]
    5cf8:	tbnz	w0, #0, 5d28 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x160>
    5cfc:	ldr	x9, [x19, #16]
    5d00:	str	x8, [x19, #16]
    5d04:	mov	x8, x26
    5d08:	str	x9, [x19]
    5d0c:	b	5d50 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x188>
    5d10:	sub	x0, x29, #0x20
    5d14:	mov	x1, x24
    5d18:	mov	x2, x25
    5d1c:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    5d20:	ldr	x8, [x19]
    5d24:	tbz	w0, #0, 5d3c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x174>
    5d28:	ldur	x9, [x20, #-16]
    5d2c:	str	x9, [x19]
    5d30:	stur	x8, [x20, #-16]
    5d34:	sub	x8, x20, #0x8
    5d38:	b	5d50 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x188>
    5d3c:	ldr	x9, [x24]
    5d40:	add	x10, x19, x27, lsl #4
    5d44:	str	x9, [x19]
    5d48:	str	x8, [x24]
    5d4c:	add	x8, x10, #0x8
    5d50:	ldr	w9, [x8]
    5d54:	ldr	w10, [x19, #8]
    5d58:	mov	x25, x20
    5d5c:	mov	x27, x23
    5d60:	str	w9, [x19, #8]
    5d64:	str	w10, [x8]
    5d68:	ldr	q0, [sp, #32]
    5d6c:	ldr	x8, [sp, #48]
    5d70:	stur	q0, [x29, #-64]
    5d74:	stur	x8, [x29, #-48]
    5d78:	sub	x24, x27, #0x10
    5d7c:	add	x24, x24, #0x10
    5d80:	sub	x0, x29, #0x40
    5d84:	mov	x1, x24
    5d88:	mov	x2, x19
    5d8c:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    5d90:	tbnz	w0, #0, 5d7c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x1b4>
    5d94:	add	x27, x24, #0x10
    5d98:	sub	x25, x25, #0x10
    5d9c:	sub	x0, x29, #0x40
    5da0:	mov	x1, x19
    5da4:	mov	x2, x25
    5da8:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    5dac:	tbnz	w0, #0, 5d98 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x1d0>
    5db0:	cmp	x24, x25
    5db4:	b.cs	5c10 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x48>  // b.hs, b.nlast
    5db8:	ldr	x8, [x25]
    5dbc:	ldr	x9, [x24]
    5dc0:	str	x8, [x24]
    5dc4:	str	x9, [x25]
    5dc8:	ldr	w8, [x25, #8]
    5dcc:	ldr	w9, [x24, #8]
    5dd0:	str	w8, [x24, #8]
    5dd4:	str	w9, [x25, #8]
    5dd8:	b	5d78 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x1b0>
    5ddc:	ldr	q0, [x21]
    5de0:	ldr	x8, [x21, #16]
    5de4:	lsr	x22, x25, #4
    5de8:	sub	x9, x22, #0x2
    5dec:	str	q0, [sp, #64]
    5df0:	str	x8, [sp, #80]
    5df4:	ldr	x8, [x21, #16]
    5df8:	sub	x10, x22, #0x1
    5dfc:	cmp	x9, #0x0
    5e00:	csel	x9, x10, x9, lt  // lt = tstop
    5e04:	ldr	q0, [x21]
    5e08:	asr	x21, x9, #1
    5e0c:	stur	x8, [x29, #-48]
    5e10:	add	x8, x19, x21, lsl #4
    5e14:	add	x23, x8, #0x8
    5e18:	stur	q0, [x29, #-64]
    5e1c:	ldp	x3, x4, [x23, #-8]
    5e20:	ldur	q0, [x29, #-64]
    5e24:	ldur	x8, [x29, #-48]
    5e28:	sub	x5, x29, #0x20
    5e2c:	mov	x0, x19
    5e30:	mov	x1, x21
    5e34:	mov	x2, x22
    5e38:	stur	q0, [x29, #-32]
    5e3c:	stur	x8, [x29, #-16]
    5e40:	bl	5ec8 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_>
    5e44:	sub	x21, x21, #0x1
    5e48:	cmn	x21, #0x1
    5e4c:	sub	x23, x23, #0x10
    5e50:	b.ne	5e1c <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x254>  // b.any
    5e54:	cmp	x25, #0x11
    5e58:	b.lt	5ea8 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x2e0>  // b.tstop
    5e5c:	sub	x20, x20, #0x10
    5e60:	ldr	x8, [x19]
    5e64:	ldp	x3, x4, [x20]
    5e68:	sub	x21, x20, x19
    5e6c:	asr	x2, x21, #4
    5e70:	str	x8, [x20]
    5e74:	ldr	w8, [x19, #8]
    5e78:	sub	x5, x29, #0x20
    5e7c:	mov	x0, x19
    5e80:	mov	x1, xzr
    5e84:	str	w8, [x20, #8]
    5e88:	ldr	q0, [sp, #64]
    5e8c:	ldr	x8, [sp, #80]
    5e90:	stur	q0, [x29, #-32]
    5e94:	stur	x8, [x29, #-16]
    5e98:	bl	5ec8 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_>
    5e9c:	cmp	x21, #0x10
    5ea0:	sub	x20, x20, #0x10
    5ea4:	b.gt	5e60 <_ZSt16__introsort_loopIPSt4pairIPKN4llvm3UseEjElN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_T1_+0x298>
    5ea8:	ldp	x20, x19, [sp, #240]
    5eac:	ldp	x22, x21, [sp, #224]
    5eb0:	ldp	x24, x23, [sp, #208]
    5eb4:	ldp	x26, x25, [sp, #192]
    5eb8:	ldr	x27, [sp, #176]
    5ebc:	ldp	x29, x30, [sp, #160]
    5ec0:	add	sp, sp, #0x100
    5ec4:	ret

0000000000005ec8 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_>:
    5ec8:	sub	sp, sp, #0xa0
    5ecc:	stp	x29, x30, [sp, #64]
    5ed0:	stp	x28, x27, [sp, #80]
    5ed4:	stp	x26, x25, [sp, #96]
    5ed8:	stp	x24, x23, [sp, #112]
    5edc:	stp	x22, x21, [sp, #128]
    5ee0:	stp	x20, x19, [sp, #144]
    5ee4:	add	x29, sp, #0x40
    5ee8:	sub	x26, x2, #0x1
    5eec:	cmp	x26, #0x0
    5ef0:	csel	x8, x2, x26, lt  // lt = tstop
    5ef4:	asr	x27, x8, #1
    5ef8:	mov	x23, x5
    5efc:	mov	x20, x4
    5f00:	mov	x24, x2
    5f04:	mov	x22, x1
    5f08:	mov	x21, x0
    5f0c:	cmp	x27, x1
    5f10:	mov	x25, x1
    5f14:	str	x3, [sp, #8]
    5f18:	b.le	5f6c <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xa4>
    5f1c:	mov	x28, x22
    5f20:	lsl	x8, x28, #1
    5f24:	mov	w25, #0x1                   	// #1
    5f28:	add	x19, x8, #0x2
    5f2c:	bfi	x25, x28, #1, #63
    5f30:	add	x1, x21, x19, lsl #4
    5f34:	add	x2, x21, x25, lsl #4
    5f38:	mov	x0, x23
    5f3c:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    5f40:	tst	w0, #0x1
    5f44:	csel	x25, x25, x19, ne  // ne = any
    5f48:	add	x8, x21, x25, lsl #4
    5f4c:	ldr	x9, [x8]
    5f50:	add	x10, x21, x28, lsl #4
    5f54:	cmp	x25, x27
    5f58:	mov	x28, x25
    5f5c:	str	x9, [x10]
    5f60:	ldr	w8, [x8, #8]
    5f64:	str	w8, [x10, #8]
    5f68:	b.lt	5f20 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x58>  // b.tstop
    5f6c:	tbnz	w24, #0, 5fb0 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xe8>
    5f70:	sub	x8, x24, #0x2
    5f74:	ldr	x19, [sp, #8]
    5f78:	cmp	x8, #0x0
    5f7c:	csel	x8, x26, x8, lt  // lt = tstop
    5f80:	cmp	x25, x8, asr #1
    5f84:	b.ne	5fb4 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xec>  // b.any
    5f88:	mov	w8, #0x1                   	// #1
    5f8c:	bfi	x8, x25, #1, #63
    5f90:	add	x9, x21, x8, lsl #4
    5f94:	ldr	x10, [x9]
    5f98:	add	x11, x21, x25, lsl #4
    5f9c:	mov	x25, x8
    5fa0:	str	x10, [x11]
    5fa4:	ldr	w9, [x9, #8]
    5fa8:	str	w9, [x11, #8]
    5fac:	b	5fb4 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0xec>
    5fb0:	ldr	x19, [sp, #8]
    5fb4:	ldr	x8, [x23, #16]
    5fb8:	ldr	q0, [x23]
    5fbc:	cmp	x25, x22
    5fc0:	stp	x19, x20, [x29, #-16]
    5fc4:	str	x8, [sp, #32]
    5fc8:	str	q0, [sp, #16]
    5fcc:	b.le	601c <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x154>
    5fd0:	sub	x8, x25, #0x1
    5fd4:	cmp	x8, #0x0
    5fd8:	csel	x8, x25, x8, lt  // lt = tstop
    5fdc:	asr	x24, x8, #1
    5fe0:	add	x23, x21, x24, lsl #4
    5fe4:	add	x0, sp, #0x10
    5fe8:	sub	x2, x29, #0x10
    5fec:	mov	x1, x23
    5ff0:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    5ff4:	tbz	w0, #0, 601c <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x154>
    5ff8:	ldr	x8, [x23]
    5ffc:	add	x9, x21, x25, lsl #4
    6000:	cmp	x24, x22
    6004:	mov	x25, x24
    6008:	str	x8, [x9]
    600c:	ldr	w8, [x23, #8]
    6010:	str	w8, [x9, #8]
    6014:	b.gt	5fd0 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x108>
    6018:	b	6020 <_ZSt13__adjust_heapIPSt4pairIPKN4llvm3UseEjElS5_N9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_T0_SS_T1_T2_+0x158>
    601c:	mov	x24, x25
    6020:	add	x8, x21, x24, lsl #4
    6024:	str	x19, [x8]
    6028:	str	w20, [x8, #8]
    602c:	ldp	x20, x19, [sp, #144]
    6030:	ldp	x22, x21, [sp, #128]
    6034:	ldp	x24, x23, [sp, #112]
    6038:	ldp	x26, x25, [sp, #96]
    603c:	ldp	x28, x27, [sp, #80]
    6040:	ldp	x29, x30, [sp, #64]
    6044:	add	sp, sp, #0xa0
    6048:	ret

000000000000604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>:
    604c:	stp	x29, x30, [sp, #-80]!
    6050:	stp	x26, x25, [sp, #16]
    6054:	stp	x24, x23, [sp, #32]
    6058:	stp	x22, x21, [sp, #48]
    605c:	stp	x20, x19, [sp, #64]
    6060:	mov	x29, sp
    6064:	ldr	x21, [x1]
    6068:	ldr	x19, [x2]
    606c:	cmp	x21, x19
    6070:	b.eq	61f4 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1a8>  // b.none
    6074:	ldr	x22, [x0]
    6078:	mov	x20, x0
    607c:	mov	x0, x21
    6080:	bl	0 <_ZNK4llvm3Use7getUserEv>
    6084:	ldr	w26, [x22, #24]
    6088:	cbz	w26, 6204 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1b8>
    608c:	orr	x8, x0, #0x8
    6090:	cmn	x8, #0x8
    6094:	b.eq	6264 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x218>  // b.none
    6098:	ldr	x23, [x22, #8]
    609c:	ubfx	x8, x0, #4, #28
    60a0:	eor	w8, w8, w0, lsr #9
    60a4:	sub	w25, w26, #0x1
    60a8:	and	w8, w8, w25
    60ac:	lsl	x9, x8, #4
    60b0:	ldr	x9, [x23, x9]
    60b4:	cmp	x9, x0
    60b8:	b.ne	6104 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xb8>  // b.any
    60bc:	add	x8, x23, x8, lsl #4
    60c0:	ldr	w24, [x8, #8]
    60c4:	mov	x0, x19
    60c8:	bl	0 <_ZNK4llvm3Use7getUserEv>
    60cc:	cbz	w26, 616c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x120>
    60d0:	orr	x8, x0, #0x8
    60d4:	cmn	x8, #0x8
    60d8:	b.eq	6264 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x218>  // b.none
    60dc:	ubfx	x8, x0, #4, #28
    60e0:	eor	w8, w8, w0, lsr #9
    60e4:	and	w8, w8, w25
    60e8:	lsl	x9, x8, #4
    60ec:	ldr	x9, [x23, x9]
    60f0:	cmp	x9, x0
    60f4:	b.ne	613c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xf0>  // b.any
    60f8:	add	x8, x23, x8, lsl #4
    60fc:	ldr	w8, [x8, #8]
    6100:	b	6170 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x124>
    6104:	mov	w10, #0x1                   	// #1
    6108:	cmn	x9, #0x8
    610c:	b.eq	6134 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xe8>  // b.none
    6110:	add	w8, w8, w10
    6114:	and	w8, w8, w25
    6118:	lsl	x9, x8, #4
    611c:	ldr	x9, [x23, x9]
    6120:	add	w10, w10, #0x1
    6124:	cmp	x9, x0
    6128:	b.ne	6108 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xbc>  // b.any
    612c:	mov	w8, w8
    6130:	b	60bc <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x70>
    6134:	mov	w24, wzr
    6138:	b	60c4 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x78>
    613c:	mov	w10, #0x1                   	// #1
    6140:	cmn	x9, #0x8
    6144:	b.eq	616c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x120>  // b.none
    6148:	add	w8, w8, w10
    614c:	and	w8, w8, w25
    6150:	lsl	x9, x8, #4
    6154:	ldr	x9, [x23, x9]
    6158:	add	w10, w10, #0x1
    615c:	cmp	x9, x0
    6160:	b.ne	6140 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xf4>  // b.any
    6164:	mov	w8, w8
    6168:	b	60f8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0xac>
    616c:	mov	w8, wzr
    6170:	ldr	w9, [x22, #36]
    6174:	cmp	w9, w24
    6178:	b.cs	61a4 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x158>  // b.hs, b.nlast
    617c:	cmp	w24, w8
    6180:	b.cs	61c8 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x17c>  // b.hs, b.nlast
    6184:	ldr	x9, [x20, #8]
    6188:	ldr	w9, [x9]
    618c:	cmp	w9, w8
    6190:	b.cc	61f4 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1a8>  // b.lo, b.ul, b.last
    6194:	ldr	x8, [x20, #16]
    6198:	ldrb	w8, [x8]
    619c:	cbnz	w8, 61f4 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1a8>
    61a0:	b	61ec <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1a0>
    61a4:	ldr	w10, [x22, #32]
    61a8:	cmp	w10, w24
    61ac:	b.cs	617c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x130>  // b.hs, b.nlast
    61b0:	cmp	w9, w8
    61b4:	b.cc	617c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x130>  // b.lo, b.ul, b.last
    61b8:	cmp	w10, w8
    61bc:	b.cs	617c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x130>  // b.hs, b.nlast
    61c0:	cmp	w24, w8
    61c4:	b	6248 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1fc>
    61c8:	ldr	x9, [x20, #8]
    61cc:	cmp	w8, w24
    61d0:	ldr	w9, [x9]
    61d4:	b.cs	61fc <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1b0>  // b.hs, b.nlast
    61d8:	cmp	w9, w24
    61dc:	b.cc	61ec <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1a0>  // b.lo, b.ul, b.last
    61e0:	ldr	x8, [x20, #16]
    61e4:	ldrb	w8, [x8]
    61e8:	cbz	w8, 61f4 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1a8>
    61ec:	mov	w0, #0x1                   	// #1
    61f0:	b	624c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x200>
    61f4:	mov	w0, wzr
    61f8:	b	624c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x200>
    61fc:	cmp	w9, w24
    6200:	b.cc	6210 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1c4>  // b.lo, b.ul, b.last
    6204:	ldr	x8, [x20, #16]
    6208:	ldrb	w8, [x8]
    620c:	cbz	w8, 6230 <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x1e4>
    6210:	mov	x0, x21
    6214:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    6218:	mov	w20, w0
    621c:	mov	x0, x19
    6220:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    6224:	cmp	w20, w0
    6228:	cset	w0, hi  // hi = pmore
    622c:	b	624c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_+0x200>
    6230:	mov	x0, x21
    6234:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    6238:	mov	w20, w0
    623c:	mov	x0, x19
    6240:	bl	0 <_ZNK4llvm3Use12getOperandNoEv>
    6244:	cmp	w20, w0
    6248:	cset	w0, cc  // cc = lo, ul, last
    624c:	ldp	x20, x19, [sp, #64]
    6250:	ldp	x22, x21, [sp, #48]
    6254:	ldp	x24, x23, [sp, #32]
    6258:	ldp	x26, x25, [sp, #16]
    625c:	ldp	x29, x30, [sp], #80
    6260:	ret
    6264:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6268:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    626c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6270:	add	x0, x0, #0x0
    6274:	add	x1, x1, #0x0
    6278:	add	x3, x3, #0x0
    627c:	mov	w2, #0x252                 	// #594
    6280:	bl	0 <__assert_fail>

0000000000006284 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_>:
    6284:	sub	sp, sp, #0x70
    6288:	stp	x29, x30, [sp, #48]
    628c:	str	x23, [sp, #64]
    6290:	stp	x22, x21, [sp, #80]
    6294:	stp	x20, x19, [sp, #96]
    6298:	add	x29, sp, #0x30
    629c:	cmp	x0, x1
    62a0:	b.eq	63b0 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x12c>  // b.none
    62a4:	add	x8, x0, #0x10
    62a8:	mov	x19, x1
    62ac:	mov	x20, x0
    62b0:	cmp	x8, x1
    62b4:	b.eq	63b0 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x12c>  // b.none
    62b8:	mov	x21, x2
    62bc:	mov	x23, x20
    62c0:	b	62e4 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x60>
    62c4:	ldur	x8, [x29, #-16]
    62c8:	str	x8, [x23]
    62cc:	ldur	w8, [x29, #-8]
    62d0:	str	w8, [x23, #8]
    62d4:	add	x8, x22, #0x10
    62d8:	cmp	x8, x19
    62dc:	mov	x23, x22
    62e0:	b.eq	63b0 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x12c>  // b.none
    62e4:	mov	x0, x21
    62e8:	mov	x1, x8
    62ec:	mov	x2, x20
    62f0:	mov	x22, x8
    62f4:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    62f8:	tbz	w0, #0, 634c <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0xc8>
    62fc:	ldr	x8, [x22]
    6300:	ldr	w9, [x23, #24]
    6304:	sub	x10, x22, x20
    6308:	cmp	x10, #0x1
    630c:	b.lt	6340 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0xbc>  // b.tstop
    6310:	lsr	x10, x10, #4
    6314:	add	x10, x10, #0x1
    6318:	mov	x12, x22
    631c:	mov	x11, x22
    6320:	ldr	x13, [x11, #-16]!
    6324:	ldur	w14, [x12, #-8]
    6328:	sub	x10, x10, #0x1
    632c:	cmp	x10, #0x1
    6330:	str	x13, [x12]
    6334:	str	w14, [x12, #8]
    6338:	mov	x12, x11
    633c:	b.gt	6320 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x9c>
    6340:	str	x8, [x20]
    6344:	str	w9, [x20, #8]
    6348:	b	62d4 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x50>
    634c:	ldr	x8, [x21, #16]
    6350:	ldr	q0, [x21]
    6354:	mov	x0, sp
    6358:	sub	x1, x29, #0x10
    635c:	str	x8, [sp, #16]
    6360:	str	q0, [sp]
    6364:	ldr	q0, [x22]
    6368:	mov	x2, x23
    636c:	stur	q0, [x29, #-16]
    6370:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    6374:	mov	x23, x22
    6378:	tbz	w0, #0, 62c4 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x40>
    637c:	mov	x8, x22
    6380:	mov	x23, x22
    6384:	ldr	x9, [x23, #-16]!
    6388:	ldur	w10, [x8, #-8]
    638c:	sub	x2, x8, #0x20
    6390:	mov	x0, sp
    6394:	sub	x1, x29, #0x10
    6398:	str	x9, [x8]
    639c:	str	w10, [x8, #8]
    63a0:	bl	604c <_ZZL28predictValueUseListOrderImplPKN4llvm5ValueEPKNS_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS_12UseListOrderESaISB_EEENK3$_4clERKSt4pairIPKNS_3UseEjESM_>
    63a4:	mov	x8, x23
    63a8:	tbnz	w0, #0, 6384 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x100>
    63ac:	b	62c4 <_ZSt16__insertion_sortIPSt4pairIPKN4llvm3UseEjEN9__gnu_cxx5__ops15_Iter_comp_iterIZL28predictValueUseListOrderImplPKNS1_5ValueEPKNS1_8FunctionEjRKN12_GLOBAL__N_18OrderMapERSt6vectorINS1_12UseListOrderESaISL_EEE3$_4EEEvT_SR_T0_+0x40>
    63b0:	ldp	x20, x19, [sp, #96]
    63b4:	ldp	x22, x21, [sp, #80]
    63b8:	ldr	x23, [sp, #64]
    63bc:	ldp	x29, x30, [sp, #48]
    63c0:	add	sp, sp, #0x70
    63c4:	ret

00000000000063c8 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>:
    63c8:	stp	x29, x30, [sp, #-64]!
    63cc:	str	x23, [sp, #16]
    63d0:	stp	x22, x21, [sp, #32]
    63d4:	stp	x20, x19, [sp, #48]
    63d8:	mov	x29, sp
    63dc:	sub	x8, x1, x0
    63e0:	mov	x20, x1
    63e4:	mov	x21, x0
    63e8:	cmp	x8, #0xef
    63ec:	mov	x19, x2
    63f0:	b.gt	6414 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x4c>
    63f4:	mov	x0, x21
    63f8:	mov	x1, x20
    63fc:	mov	x2, x19
    6400:	ldp	x20, x19, [sp, #48]
    6404:	ldp	x22, x21, [sp, #32]
    6408:	ldr	x23, [sp, #16]
    640c:	ldp	x29, x30, [sp], #64
    6410:	b	6540 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    6414:	lsr	x22, x8, #5
    6418:	add	x23, x21, x22, lsl #4
    641c:	mov	x0, x21
    6420:	mov	x1, x23
    6424:	mov	x2, x19
    6428:	bl	63c8 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    642c:	mov	x0, x23
    6430:	mov	x1, x20
    6434:	mov	x2, x19
    6438:	bl	63c8 <_ZSt21__inplace_stable_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    643c:	sub	x8, x20, x23
    6440:	mov	x0, x21
    6444:	mov	x1, x23
    6448:	mov	x2, x20
    644c:	mov	x3, x22
    6450:	mov	x5, x19
    6454:	ldp	x20, x19, [sp, #48]
    6458:	ldp	x22, x21, [sp, #32]
    645c:	ldr	x23, [sp, #16]
    6460:	asr	x4, x8, #4
    6464:	ldp	x29, x30, [sp], #64
    6468:	b	679c <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_>

000000000000646c <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>:
    646c:	stp	x29, x30, [sp, #-64]!
    6470:	stp	x24, x23, [sp, #16]
    6474:	stp	x22, x21, [sp, #32]
    6478:	stp	x20, x19, [sp, #48]
    647c:	mov	x29, sp
    6480:	sub	x8, x1, x0
    6484:	asr	x8, x8, #4
    6488:	add	x9, x8, #0x1
    648c:	add	x10, x8, #0x2
    6490:	cmp	x9, #0x0
    6494:	csinc	x8, x10, x8, lt  // lt = tstop
    6498:	asr	x8, x8, #1
    649c:	add	x24, x0, x8, lsl #4
    64a0:	mov	x19, x4
    64a4:	mov	x20, x3
    64a8:	mov	x21, x2
    64ac:	mov	x22, x1
    64b0:	mov	x23, x0
    64b4:	cmp	x8, x3
    64b8:	mov	x1, x24
    64bc:	b.le	64e8 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_+0x7c>
    64c0:	mov	x3, x20
    64c4:	mov	x4, x19
    64c8:	bl	646c <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>
    64cc:	mov	x0, x24
    64d0:	mov	x1, x22
    64d4:	mov	x2, x21
    64d8:	mov	x3, x20
    64dc:	mov	x4, x19
    64e0:	bl	646c <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_>
    64e4:	b	6504 <_ZSt22__stable_sort_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_T2_+0x98>
    64e8:	mov	x3, x19
    64ec:	bl	6de8 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_>
    64f0:	mov	x0, x24
    64f4:	mov	x1, x22
    64f8:	mov	x2, x21
    64fc:	mov	x3, x19
    6500:	bl	6de8 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_>
    6504:	sub	x8, x24, x23
    6508:	sub	x9, x22, x24
    650c:	mov	x0, x23
    6510:	mov	x1, x24
    6514:	mov	x2, x22
    6518:	mov	x5, x21
    651c:	mov	x6, x20
    6520:	mov	x7, x19
    6524:	ldp	x20, x19, [sp, #48]
    6528:	ldp	x22, x21, [sp, #32]
    652c:	ldp	x24, x23, [sp, #16]
    6530:	asr	x3, x8, #4
    6534:	asr	x4, x9, #4
    6538:	ldp	x29, x30, [sp], #64
    653c:	b	7174 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_>

0000000000006540 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>:
    6540:	sub	sp, sp, #0x40
    6544:	stp	x29, x30, [sp, #16]
    6548:	stp	x22, x21, [sp, #32]
    654c:	stp	x20, x19, [sp, #48]
    6550:	add	x29, sp, #0x10
    6554:	cmp	x0, x1
    6558:	str	x2, [sp, #8]
    655c:	b.eq	6748 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x208>  // b.none
    6560:	add	x8, x0, #0x10
    6564:	mov	x19, x1
    6568:	mov	x20, x0
    656c:	cmp	x8, x1
    6570:	b.eq	6748 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x208>  // b.none
    6574:	mov	x22, x20
    6578:	b	6594 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x54>
    657c:	str	x8, [x12]
    6580:	str	w9, [x12, #8]
    6584:	add	x8, x21, #0x10
    6588:	cmp	x8, x19
    658c:	mov	x22, x21
    6590:	b.eq	6748 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x208>  // b.none
    6594:	add	x0, sp, #0x8
    6598:	mov	x1, x8
    659c:	mov	x2, x20
    65a0:	mov	x21, x8
    65a4:	bl	6914 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_>
    65a8:	tbz	w0, #0, 65fc <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xbc>
    65ac:	ldr	x8, [x21]
    65b0:	ldr	w9, [x22, #24]
    65b4:	sub	x10, x21, x20
    65b8:	cmp	x10, #0x1
    65bc:	b.lt	65f0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xb0>  // b.tstop
    65c0:	lsr	x10, x10, #4
    65c4:	add	x10, x10, #0x1
    65c8:	mov	x12, x21
    65cc:	mov	x11, x21
    65d0:	ldr	x13, [x11, #-16]!
    65d4:	ldur	w14, [x12, #-8]
    65d8:	sub	x10, x10, #0x1
    65dc:	cmp	x10, #0x1
    65e0:	str	x13, [x12]
    65e4:	str	w14, [x12, #8]
    65e8:	mov	x12, x11
    65ec:	b.gt	65d0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x90>
    65f0:	str	x8, [x20]
    65f4:	str	w9, [x20, #8]
    65f8:	b	6584 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x44>
    65fc:	ldr	x8, [x21]
    6600:	ldr	x11, [sp, #8]
    6604:	ldr	w9, [x22, #24]
    6608:	mov	x16, x21
    660c:	ldr	x10, [x8]
    6610:	mov	x14, x21
    6614:	ubfx	x12, x10, #4, #28
    6618:	eor	w13, w12, w10, lsr #9
    661c:	mov	x12, x21
    6620:	b	6640 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x100>
    6624:	ldur	w16, [x16, #-8]
    6628:	cmp	w9, w16
    662c:	b.ls	657c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x3c>  // b.plast
    6630:	str	x15, [x12]
    6634:	str	w16, [x12, #8]
    6638:	mov	x12, x14
    663c:	mov	x16, x14
    6640:	ldr	x15, [x14, #-16]!
    6644:	ldr	x0, [x15]
    6648:	cmp	x10, x0
    664c:	b.eq	6624 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xe4>  // b.none
    6650:	ldr	w17, [x11, #48]
    6654:	ldr	x18, [x11, #32]
    6658:	cbz	w17, 66ac <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x16c>
    665c:	orr	x1, x10, #0x8
    6660:	cmn	x1, #0x8
    6664:	b.eq	675c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x21c>  // b.none
    6668:	sub	w1, w17, #0x1
    666c:	and	w2, w1, w13
    6670:	add	x3, x18, w2, uxtw #4
    6674:	ldr	x4, [x3]
    6678:	cmp	x4, x10
    667c:	b.eq	66b0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x170>  // b.none
    6680:	mov	w5, #0x1                   	// #1
    6684:	cmn	x4, #0x8
    6688:	b.eq	66ac <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x16c>  // b.none
    668c:	add	w2, w2, w5
    6690:	and	w2, w2, w1
    6694:	add	x3, x18, w2, uxtw #4
    6698:	ldr	x4, [x3]
    669c:	add	w5, w5, #0x1
    66a0:	cmp	x4, x10
    66a4:	b.eq	66b0 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x170>  // b.none
    66a8:	b	6684 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x144>
    66ac:	add	x3, x18, x17, lsl #4
    66b0:	add	x1, x18, x17, lsl #4
    66b4:	cmp	x3, x1
    66b8:	b.eq	677c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x23c>  // b.none
    66bc:	ldr	w1, [x3, #8]
    66c0:	cbz	w17, 671c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x1dc>
    66c4:	orr	x2, x0, #0x8
    66c8:	cmn	x2, #0x8
    66cc:	b.eq	675c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x21c>  // b.none
    66d0:	ubfx	x2, x0, #4, #28
    66d4:	eor	w3, w2, w0, lsr #9
    66d8:	sub	w2, w17, #0x1
    66dc:	and	w3, w2, w3
    66e0:	add	x4, x18, w3, uxtw #4
    66e4:	ldr	x5, [x4]
    66e8:	cmp	x5, x0
    66ec:	b.eq	6720 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x1e0>  // b.none
    66f0:	mov	w6, #0x1                   	// #1
    66f4:	cmn	x5, #0x8
    66f8:	b.eq	671c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x1dc>  // b.none
    66fc:	add	w3, w3, w6
    6700:	and	w3, w3, w2
    6704:	add	x4, x18, w3, uxtw #4
    6708:	ldr	x5, [x4]
    670c:	add	w6, w6, #0x1
    6710:	cmp	x5, x0
    6714:	b.eq	6720 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x1e0>  // b.none
    6718:	b	66f4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x1b4>
    671c:	add	x4, x18, x17, lsl #4
    6720:	add	x17, x18, x17, lsl #4
    6724:	cmp	x4, x17
    6728:	b.eq	677c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x23c>  // b.none
    672c:	ldr	w17, [x4, #8]
    6730:	sub	w18, w1, #0x1
    6734:	sub	w17, w17, #0x1
    6738:	cmp	w18, w17
    673c:	b.cs	657c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0x3c>  // b.hs, b.nlast
    6740:	ldur	w16, [x16, #-8]
    6744:	b	6630 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_+0xf0>
    6748:	ldp	x20, x19, [sp, #48]
    674c:	ldp	x22, x21, [sp, #32]
    6750:	ldp	x29, x30, [sp, #16]
    6754:	add	sp, sp, #0x40
    6758:	ret
    675c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6760:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6764:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6768:	add	x0, x0, #0x0
    676c:	add	x1, x1, #0x0
    6770:	add	x3, x3, #0x0
    6774:	mov	w2, #0x252                 	// #594
    6778:	bl	0 <__assert_fail>
    677c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6780:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6784:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6788:	add	x0, x0, #0x0
    678c:	add	x1, x1, #0x0
    6790:	add	x3, x3, #0x0
    6794:	mov	w2, #0xa9                  	// #169
    6798:	bl	0 <__assert_fail>

000000000000679c <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_>:
    679c:	sub	sp, sp, #0x70
    67a0:	stp	x29, x30, [sp, #16]
    67a4:	stp	x28, x27, [sp, #32]
    67a8:	stp	x26, x25, [sp, #48]
    67ac:	stp	x24, x23, [sp, #64]
    67b0:	stp	x22, x21, [sp, #80]
    67b4:	stp	x20, x19, [sp, #96]
    67b8:	add	x29, sp, #0x10
    67bc:	str	x5, [sp, #8]
    67c0:	cbz	x3, 6818 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x7c>
    67c4:	mov	x23, x4
    67c8:	cbz	x4, 6818 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x7c>
    67cc:	add	x8, x23, x3
    67d0:	mov	x24, x3
    67d4:	mov	x21, x1
    67d8:	mov	x20, x0
    67dc:	cmp	x8, #0x2
    67e0:	b.ne	6838 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x9c>  // b.any
    67e4:	add	x0, sp, #0x8
    67e8:	mov	x1, x21
    67ec:	mov	x2, x20
    67f0:	bl	6914 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_>
    67f4:	tbz	w0, #0, 6818 <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x7c>
    67f8:	ldr	x8, [x21]
    67fc:	ldr	x9, [x20]
    6800:	str	x8, [x20]
    6804:	str	x9, [x21]
    6808:	ldr	w8, [x21, #8]
    680c:	ldr	w9, [x20, #8]
    6810:	str	w8, [x20, #8]
    6814:	str	w9, [x21, #8]
    6818:	ldp	x20, x19, [sp, #96]
    681c:	ldp	x22, x21, [sp, #80]
    6820:	ldp	x24, x23, [sp, #64]
    6824:	ldp	x26, x25, [sp, #48]
    6828:	ldp	x28, x27, [sp, #32]
    682c:	ldp	x29, x30, [sp, #16]
    6830:	add	sp, sp, #0x70
    6834:	ret
    6838:	mov	x19, x5
    683c:	mov	x22, x2
    6840:	cmp	x24, x23
    6844:	b.le	687c <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0xe0>
    6848:	cmp	x24, #0x0
    684c:	cinc	x8, x24, lt  // lt = tstop
    6850:	asr	x27, x8, #1
    6854:	add	x28, x20, x27, lsl #4
    6858:	mov	x0, x21
    685c:	mov	x1, x22
    6860:	mov	x2, x28
    6864:	mov	x3, x19
    6868:	bl	6a90 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    686c:	sub	x8, x0, x21
    6870:	mov	x25, x0
    6874:	asr	x26, x8, #4
    6878:	b	68ac <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_+0x110>
    687c:	cmp	x23, #0x0
    6880:	cinc	x8, x23, lt  // lt = tstop
    6884:	asr	x26, x8, #1
    6888:	add	x25, x21, x26, lsl #4
    688c:	mov	x0, x20
    6890:	mov	x1, x21
    6894:	mov	x2, x25
    6898:	mov	x3, x19
    689c:	bl	6c3c <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    68a0:	sub	x8, x0, x20
    68a4:	mov	x28, x0
    68a8:	asr	x27, x8, #4
    68ac:	mov	x0, x28
    68b0:	mov	x1, x21
    68b4:	mov	x2, x25
    68b8:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    68bc:	mov	x21, x0
    68c0:	mov	x0, x20
    68c4:	mov	x1, x28
    68c8:	mov	x2, x21
    68cc:	mov	x3, x27
    68d0:	mov	x4, x26
    68d4:	mov	x5, x19
    68d8:	bl	679c <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_>
    68dc:	sub	x3, x24, x27
    68e0:	sub	x4, x23, x26
    68e4:	mov	x0, x21
    68e8:	mov	x1, x25
    68ec:	mov	x2, x22
    68f0:	mov	x5, x19
    68f4:	ldp	x20, x19, [sp, #96]
    68f8:	ldp	x22, x21, [sp, #80]
    68fc:	ldp	x24, x23, [sp, #64]
    6900:	ldp	x26, x25, [sp, #48]
    6904:	ldp	x28, x27, [sp, #32]
    6908:	ldp	x29, x30, [sp, #16]
    690c:	add	sp, sp, #0x70
    6910:	b	679c <_ZSt22__merge_without_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_>

0000000000006914 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_>:
    6914:	stp	x29, x30, [sp, #-16]!
    6918:	mov	x29, sp
    691c:	ldr	x8, [x1]
    6920:	ldr	x9, [x2]
    6924:	ldr	x11, [x8]
    6928:	ldr	x10, [x9]
    692c:	cmp	x11, x10
    6930:	b.eq	699c <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x88>  // b.none
    6934:	ldr	x9, [x0]
    6938:	ldr	w8, [x9, #48]
    693c:	ldr	x9, [x9, #32]
    6940:	cbz	w8, 69b4 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0xa0>
    6944:	orr	x12, x11, #0x8
    6948:	cmn	x12, #0x8
    694c:	b.eq	6a50 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x13c>  // b.none
    6950:	ubfx	x12, x11, #4, #28
    6954:	eor	w13, w12, w11, lsr #9
    6958:	sub	w12, w8, #0x1
    695c:	and	w13, w12, w13
    6960:	add	x14, x9, w13, uxtw #4
    6964:	ldr	x15, [x14]
    6968:	cmp	x15, x11
    696c:	b.eq	69b8 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0xa4>  // b.none
    6970:	mov	w16, #0x1                   	// #1
    6974:	cmn	x15, #0x8
    6978:	b.eq	69b4 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0xa0>  // b.none
    697c:	add	w13, w13, w16
    6980:	and	w13, w13, w12
    6984:	add	x14, x9, w13, uxtw #4
    6988:	ldr	x15, [x14]
    698c:	add	w16, w16, #0x1
    6990:	cmp	x15, x11
    6994:	b.eq	69b8 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0xa4>  // b.none
    6998:	b	6974 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x60>
    699c:	ldr	w8, [x1, #8]
    69a0:	ldr	w9, [x2, #8]
    69a4:	cmp	w8, w9
    69a8:	cset	w0, hi  // hi = pmore
    69ac:	ldp	x29, x30, [sp], #16
    69b0:	ret
    69b4:	add	x14, x9, x8, lsl #4
    69b8:	add	x11, x9, x8, lsl #4
    69bc:	cmp	x14, x11
    69c0:	b.eq	6a70 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x15c>  // b.none
    69c4:	ldr	w11, [x14, #8]
    69c8:	cbz	w8, 6a24 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x110>
    69cc:	orr	x12, x10, #0x8
    69d0:	cmn	x12, #0x8
    69d4:	b.eq	6a50 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x13c>  // b.none
    69d8:	ubfx	x12, x10, #4, #28
    69dc:	eor	w13, w12, w10, lsr #9
    69e0:	sub	w12, w8, #0x1
    69e4:	and	w13, w12, w13
    69e8:	add	x14, x9, w13, uxtw #4
    69ec:	ldr	x15, [x14]
    69f0:	cmp	x15, x10
    69f4:	b.eq	6a28 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x114>  // b.none
    69f8:	mov	w16, #0x1                   	// #1
    69fc:	cmn	x15, #0x8
    6a00:	b.eq	6a24 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x110>  // b.none
    6a04:	add	w13, w13, w16
    6a08:	and	w13, w13, w12
    6a0c:	add	x14, x9, w13, uxtw #4
    6a10:	ldr	x15, [x14]
    6a14:	add	w16, w16, #0x1
    6a18:	cmp	x15, x10
    6a1c:	b.eq	6a28 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x114>  // b.none
    6a20:	b	69fc <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0xe8>
    6a24:	add	x14, x9, x8, lsl #4
    6a28:	add	x8, x9, x8, lsl #4
    6a2c:	cmp	x14, x8
    6a30:	b.eq	6a70 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_+0x15c>  // b.none
    6a34:	ldr	w8, [x14, #8]
    6a38:	sub	w9, w11, #0x1
    6a3c:	sub	w8, w8, #0x1
    6a40:	cmp	w9, w8
    6a44:	cset	w0, cc  // cc = lo, ul, last
    6a48:	ldp	x29, x30, [sp], #16
    6a4c:	ret
    6a50:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6a54:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6a58:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6a5c:	add	x0, x0, #0x0
    6a60:	add	x1, x1, #0x0
    6a64:	add	x3, x3, #0x0
    6a68:	mov	w2, #0x252                 	// #594
    6a6c:	bl	0 <__assert_fail>
    6a70:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6a74:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6a78:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6a7c:	add	x0, x0, #0x0
    6a80:	add	x1, x1, #0x0
    6a84:	add	x3, x3, #0x0
    6a88:	mov	w2, #0xa9                  	// #169
    6a8c:	bl	0 <__assert_fail>

0000000000006a90 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>:
    6a90:	stp	x29, x30, [sp, #-16]!
    6a94:	mov	x29, sp
    6a98:	sub	x9, x1, x0
    6a9c:	cmp	x9, #0x1
    6aa0:	b.lt	6bf4 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x164>  // b.tstop
    6aa4:	ldr	x8, [x2]
    6aa8:	lsr	x10, x9, #4
    6aac:	ldr	x8, [x8]
    6ab0:	ubfx	x9, x8, #4, #28
    6ab4:	eor	w9, w9, w8, lsr #9
    6ab8:	b	6ad4 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x44>
    6abc:	mvn	x11, x11
    6ac0:	add	x0, x12, #0x10
    6ac4:	add	x11, x10, x11
    6ac8:	cmp	x11, #0x0
    6acc:	mov	x10, x11
    6ad0:	b.le	6bf4 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x164>
    6ad4:	lsr	x11, x10, #1
    6ad8:	add	x12, x0, x11, lsl #4
    6adc:	ldr	x13, [x12]
    6ae0:	ldr	x15, [x13]
    6ae4:	cmp	x15, x8
    6ae8:	b.eq	6b50 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xc0>  // b.none
    6aec:	ldr	w13, [x3, #48]
    6af0:	ldr	x14, [x3, #32]
    6af4:	cbz	w13, 6b64 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xd4>
    6af8:	orr	x16, x15, #0x8
    6afc:	cmn	x16, #0x8
    6b00:	b.eq	6bfc <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x16c>  // b.none
    6b04:	ubfx	x16, x15, #4, #28
    6b08:	eor	w17, w16, w15, lsr #9
    6b0c:	sub	w16, w13, #0x1
    6b10:	and	w17, w16, w17
    6b14:	add	x18, x14, w17, uxtw #4
    6b18:	ldr	x1, [x18]
    6b1c:	cmp	x1, x15
    6b20:	b.eq	6b68 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xd8>  // b.none
    6b24:	mov	w4, #0x1                   	// #1
    6b28:	cmn	x1, #0x8
    6b2c:	b.eq	6b64 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xd4>  // b.none
    6b30:	add	w17, w17, w4
    6b34:	and	w17, w17, w16
    6b38:	add	x18, x14, w17, uxtw #4
    6b3c:	ldr	x1, [x18]
    6b40:	add	w4, w4, #0x1
    6b44:	cmp	x1, x15
    6b48:	b.eq	6b68 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xd8>  // b.none
    6b4c:	b	6b28 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x98>
    6b50:	ldr	w13, [x12, #8]
    6b54:	ldr	w14, [x2, #8]
    6b58:	cmp	w13, w14
    6b5c:	b.hi	6abc <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x2c>  // b.pmore
    6b60:	b	6ac8 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x38>
    6b64:	add	x18, x14, x13, lsl #4
    6b68:	add	x15, x14, x13, lsl #4
    6b6c:	cmp	x18, x15
    6b70:	b.eq	6c1c <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x18c>  // b.none
    6b74:	ldr	w15, [x18, #8]
    6b78:	cbz	w13, 6bcc <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x13c>
    6b7c:	orr	x16, x8, #0x8
    6b80:	cmn	x16, #0x8
    6b84:	b.eq	6bfc <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x16c>  // b.none
    6b88:	sub	w16, w13, #0x1
    6b8c:	and	w17, w16, w9
    6b90:	add	x18, x14, w17, uxtw #4
    6b94:	ldr	x1, [x18]
    6b98:	cmp	x1, x8
    6b9c:	b.eq	6bd0 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x140>  // b.none
    6ba0:	mov	w4, #0x1                   	// #1
    6ba4:	cmn	x1, #0x8
    6ba8:	b.eq	6bcc <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x13c>  // b.none
    6bac:	add	w17, w17, w4
    6bb0:	and	w17, w17, w16
    6bb4:	add	x18, x14, w17, uxtw #4
    6bb8:	ldr	x1, [x18]
    6bbc:	add	w4, w4, #0x1
    6bc0:	cmp	x1, x8
    6bc4:	b.eq	6bd0 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x140>  // b.none
    6bc8:	b	6ba4 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x114>
    6bcc:	add	x18, x14, x13, lsl #4
    6bd0:	add	x13, x14, x13, lsl #4
    6bd4:	cmp	x18, x13
    6bd8:	b.eq	6c1c <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x18c>  // b.none
    6bdc:	ldr	w13, [x18, #8]
    6be0:	sub	w14, w15, #0x1
    6be4:	sub	w13, w13, #0x1
    6be8:	cmp	w14, w13
    6bec:	b.cc	6abc <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x2c>  // b.lo, b.ul, b.last
    6bf0:	b	6ac8 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x38>
    6bf4:	ldp	x29, x30, [sp], #16
    6bf8:	ret
    6bfc:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6c00:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6c04:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6c08:	add	x0, x0, #0x0
    6c0c:	add	x1, x1, #0x0
    6c10:	add	x3, x3, #0x0
    6c14:	mov	w2, #0x252                 	// #594
    6c18:	bl	0 <__assert_fail>
    6c1c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6c20:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6c24:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6c28:	add	x0, x0, #0x0
    6c2c:	add	x1, x1, #0x0
    6c30:	add	x3, x3, #0x0
    6c34:	mov	w2, #0xa9                  	// #169
    6c38:	bl	0 <__assert_fail>

0000000000006c3c <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>:
    6c3c:	stp	x29, x30, [sp, #-16]!
    6c40:	mov	x29, sp
    6c44:	sub	x9, x1, x0
    6c48:	cmp	x9, #0x1
    6c4c:	b.lt	6da0 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x164>  // b.tstop
    6c50:	ldr	x8, [x2]
    6c54:	lsr	x10, x9, #4
    6c58:	ldr	x8, [x8]
    6c5c:	ubfx	x9, x8, #4, #28
    6c60:	eor	w9, w9, w8, lsr #9
    6c64:	b	6c80 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x44>
    6c68:	mvn	x11, x11
    6c6c:	add	x0, x12, #0x10
    6c70:	add	x11, x10, x11
    6c74:	cmp	x11, #0x0
    6c78:	mov	x10, x11
    6c7c:	b.le	6da0 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x164>
    6c80:	lsr	x11, x10, #1
    6c84:	add	x12, x0, x11, lsl #4
    6c88:	ldr	x13, [x12]
    6c8c:	ldr	x15, [x13]
    6c90:	cmp	x8, x15
    6c94:	b.eq	6cf4 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xb8>  // b.none
    6c98:	ldr	w13, [x3, #48]
    6c9c:	ldr	x14, [x3, #32]
    6ca0:	cbz	w13, 6d08 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xcc>
    6ca4:	orr	x16, x8, #0x8
    6ca8:	cmn	x16, #0x8
    6cac:	b.eq	6da8 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x16c>  // b.none
    6cb0:	sub	w16, w13, #0x1
    6cb4:	and	w17, w16, w9
    6cb8:	add	x18, x14, w17, uxtw #4
    6cbc:	ldr	x1, [x18]
    6cc0:	cmp	x1, x8
    6cc4:	b.eq	6d0c <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xd0>  // b.none
    6cc8:	mov	w4, #0x1                   	// #1
    6ccc:	cmn	x1, #0x8
    6cd0:	b.eq	6d08 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xcc>  // b.none
    6cd4:	add	w17, w17, w4
    6cd8:	and	w17, w17, w16
    6cdc:	add	x18, x14, w17, uxtw #4
    6ce0:	ldr	x1, [x18]
    6ce4:	add	w4, w4, #0x1
    6ce8:	cmp	x1, x8
    6cec:	b.eq	6d0c <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0xd0>  // b.none
    6cf0:	b	6ccc <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x90>
    6cf4:	ldr	w13, [x2, #8]
    6cf8:	ldr	w14, [x12, #8]
    6cfc:	cmp	w13, w14
    6d00:	b.ls	6c68 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x2c>  // b.plast
    6d04:	b	6c74 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x38>
    6d08:	add	x18, x14, x13, lsl #4
    6d0c:	add	x16, x14, x13, lsl #4
    6d10:	cmp	x18, x16
    6d14:	b.eq	6dc8 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x18c>  // b.none
    6d18:	ldr	w16, [x18, #8]
    6d1c:	cbz	w13, 6d78 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x13c>
    6d20:	orr	x17, x15, #0x8
    6d24:	cmn	x17, #0x8
    6d28:	b.eq	6da8 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x16c>  // b.none
    6d2c:	ubfx	x17, x15, #4, #28
    6d30:	eor	w18, w17, w15, lsr #9
    6d34:	sub	w17, w13, #0x1
    6d38:	and	w18, w17, w18
    6d3c:	add	x1, x14, w18, uxtw #4
    6d40:	ldr	x4, [x1]
    6d44:	cmp	x4, x15
    6d48:	b.eq	6d7c <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x140>  // b.none
    6d4c:	mov	w5, #0x1                   	// #1
    6d50:	cmn	x4, #0x8
    6d54:	b.eq	6d78 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x13c>  // b.none
    6d58:	add	w18, w18, w5
    6d5c:	and	w18, w18, w17
    6d60:	add	x1, x14, w18, uxtw #4
    6d64:	ldr	x4, [x1]
    6d68:	add	w5, w5, #0x1
    6d6c:	cmp	x4, x15
    6d70:	b.eq	6d7c <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x140>  // b.none
    6d74:	b	6d50 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x114>
    6d78:	add	x1, x14, x13, lsl #4
    6d7c:	add	x13, x14, x13, lsl #4
    6d80:	cmp	x1, x13
    6d84:	b.eq	6dc8 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x18c>  // b.none
    6d88:	ldr	w13, [x1, #8]
    6d8c:	sub	w14, w16, #0x1
    6d90:	sub	w13, w13, #0x1
    6d94:	cmp	w14, w13
    6d98:	b.cs	6c68 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x2c>  // b.hs, b.nlast
    6d9c:	b	6c74 <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_+0x38>
    6da0:	ldp	x29, x30, [sp], #16
    6da4:	ret
    6da8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6dac:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6db0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6db4:	add	x0, x0, #0x0
    6db8:	add	x1, x1, #0x0
    6dbc:	add	x3, x3, #0x0
    6dc0:	mov	w2, #0x252                 	// #594
    6dc4:	bl	0 <__assert_fail>
    6dc8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6dcc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6dd0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    6dd4:	add	x0, x0, #0x0
    6dd8:	add	x1, x1, #0x0
    6ddc:	add	x3, x3, #0x0
    6de0:	mov	w2, #0xa9                  	// #169
    6de4:	bl	0 <__assert_fail>

0000000000006de8 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_>:
    6de8:	sub	sp, sp, #0x90
    6dec:	stp	x29, x30, [sp, #48]
    6df0:	stp	x28, x27, [sp, #64]
    6df4:	stp	x26, x25, [sp, #80]
    6df8:	stp	x24, x23, [sp, #96]
    6dfc:	stp	x22, x21, [sp, #112]
    6e00:	stp	x20, x19, [sp, #128]
    6e04:	add	x29, sp, #0x30
    6e08:	sub	x21, x1, x0
    6e0c:	mov	x19, x3
    6e10:	mov	x20, x1
    6e14:	cmp	x21, #0x61
    6e18:	b.lt	712c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x344>  // b.tstop
    6e1c:	asr	x23, x21, #4
    6e20:	add	x27, x2, x21
    6e24:	stp	x0, x2, [sp, #16]
    6e28:	add	x24, x0, #0x70
    6e2c:	mov	x1, x24
    6e30:	mov	x2, x19
    6e34:	bl	6540 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    6e38:	sub	x8, x20, x24
    6e3c:	cmp	x8, #0x60
    6e40:	mov	x0, x24
    6e44:	b.gt	6e28 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x40>
    6e48:	mov	x0, x24
    6e4c:	mov	x1, x20
    6e50:	mov	x2, x19
    6e54:	bl	6540 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    6e58:	ldr	x24, [sp, #16]
    6e5c:	cmp	x21, #0x71
    6e60:	b.lt	7154 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x36c>  // b.tstop
    6e64:	mov	w22, #0x7                   	// #7
    6e68:	str	x23, [sp, #8]
    6e6c:	stur	x19, [x29, #-16]
    6e70:	b	6e9c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0xb4>
    6e74:	cmp	x8, x28
    6e78:	csel	x8, x28, x8, gt
    6e7c:	add	x1, x0, x8, lsl #4
    6e80:	mov	x2, x1
    6e84:	mov	x3, x27
    6e88:	mov	x5, x19
    6e8c:	bl	7774 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>
    6e90:	cmp	x21, x23
    6e94:	mov	x22, x21
    6e98:	b.ge	7154 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x36c>  // b.tcont
    6e9c:	ldr	x21, [sp, #24]
    6ea0:	lsl	x28, x22, #1
    6ea4:	cmp	x23, x28
    6ea8:	mov	x8, x23
    6eac:	mov	x23, x24
    6eb0:	b.lt	6fd8 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x1f0>  // b.tstop
    6eb4:	ldr	x21, [sp, #24]
    6eb8:	b	6ed0 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0xe8>
    6ebc:	sub	x8, x20, x23
    6ec0:	asr	x8, x8, #4
    6ec4:	cmp	x8, x28
    6ec8:	mov	x24, x23
    6ecc:	b.lt	6fd4 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x1ec>  // b.tstop
    6ed0:	ldur	x8, [x29, #-16]
    6ed4:	mov	x19, x20
    6ed8:	mov	x20, x27
    6edc:	add	x27, x24, x22, lsl #4
    6ee0:	add	x23, x24, x28, lsl #4
    6ee4:	stur	x8, [x29, #-8]
    6ee8:	cbz	x22, 6f50 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x168>
    6eec:	mov	x26, x24
    6ef0:	mov	x25, x27
    6ef4:	b	6f1c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x134>
    6ef8:	ldr	x8, [x24]
    6efc:	add	x24, x26, #0x10
    6f00:	str	x8, [x21]
    6f04:	ldr	w8, [x26, #8]
    6f08:	cmp	x27, x24
    6f0c:	mov	x26, x24
    6f10:	str	w8, [x21, #8]
    6f14:	add	x21, x21, #0x10
    6f18:	b.eq	6f54 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x16c>  // b.none
    6f1c:	cmp	x23, x25
    6f20:	b.eq	6f58 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x170>  // b.none
    6f24:	sub	x0, x29, #0x8
    6f28:	mov	x1, x25
    6f2c:	mov	x2, x24
    6f30:	bl	6914 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_>
    6f34:	tbz	w0, #0, 6ef8 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x110>
    6f38:	mov	x8, x25
    6f3c:	ldr	x9, [x8], #16
    6f40:	mov	x26, x25
    6f44:	str	x9, [x21]
    6f48:	mov	x25, x8
    6f4c:	b	6f04 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x11c>
    6f50:	mov	x25, x27
    6f54:	mov	x26, x27
    6f58:	sub	x8, x27, x24
    6f5c:	cmp	x8, #0x1
    6f60:	b.lt	6f90 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x1a8>  // b.tstop
    6f64:	lsr	x8, x8, #4
    6f68:	add	x8, x8, #0x1
    6f6c:	ldr	x9, [x26]
    6f70:	sub	x8, x8, #0x1
    6f74:	cmp	x8, #0x1
    6f78:	str	x9, [x21]
    6f7c:	ldr	w9, [x26, #8]
    6f80:	add	x26, x26, #0x10
    6f84:	str	w9, [x21, #8]
    6f88:	add	x21, x21, #0x10
    6f8c:	b.gt	6f6c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x184>
    6f90:	sub	x8, x23, x25
    6f94:	mov	x27, x20
    6f98:	mov	x20, x19
    6f9c:	cmp	x8, #0x1
    6fa0:	b.lt	6ebc <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0xd4>  // b.tstop
    6fa4:	lsr	x8, x8, #4
    6fa8:	add	x8, x8, #0x1
    6fac:	ldr	x9, [x25]
    6fb0:	sub	x8, x8, #0x1
    6fb4:	cmp	x8, #0x1
    6fb8:	str	x9, [x21]
    6fbc:	ldr	w9, [x25, #8]
    6fc0:	add	x25, x25, #0x10
    6fc4:	str	w9, [x21, #8]
    6fc8:	add	x21, x21, #0x10
    6fcc:	b.gt	6fac <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x1c4>
    6fd0:	b	6ebc <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0xd4>
    6fd4:	ldur	x19, [x29, #-16]
    6fd8:	cmp	x8, x22
    6fdc:	csel	x8, x22, x8, gt
    6fe0:	add	x26, x23, x8, lsl #4
    6fe4:	stur	x19, [x29, #-8]
    6fe8:	cbz	x8, 7050 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x268>
    6fec:	mov	x24, x23
    6ff0:	mov	x25, x26
    6ff4:	b	701c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x234>
    6ff8:	ldr	x8, [x23]
    6ffc:	add	x23, x24, #0x10
    7000:	str	x8, [x21]
    7004:	ldr	w8, [x24, #8]
    7008:	cmp	x26, x23
    700c:	mov	x24, x23
    7010:	str	w8, [x21, #8]
    7014:	add	x21, x21, #0x10
    7018:	b.eq	7054 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x26c>  // b.none
    701c:	cmp	x25, x20
    7020:	b.eq	7058 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x270>  // b.none
    7024:	sub	x0, x29, #0x8
    7028:	mov	x1, x25
    702c:	mov	x2, x23
    7030:	bl	6914 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm15ValueEnumerator17OptimizeConstantsEjjE3$_0EclINS_17__normal_iteratorIPSt4pairIPKNS2_5ValueEjESt6vectorISC_SaISC_EEEESH_EEbT_T0_>
    7034:	tbz	w0, #0, 6ff8 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x210>
    7038:	mov	x8, x25
    703c:	ldr	x9, [x8], #16
    7040:	mov	x24, x25
    7044:	str	x9, [x21]
    7048:	mov	x25, x8
    704c:	b	7004 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x21c>
    7050:	mov	x25, x26
    7054:	mov	x24, x26
    7058:	sub	x8, x26, x23
    705c:	cmp	x8, #0x1
    7060:	b.lt	7090 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x2a8>  // b.tstop
    7064:	lsr	x8, x8, #4
    7068:	add	x8, x8, #0x1
    706c:	ldr	x9, [x24]
    7070:	sub	x8, x8, #0x1
    7074:	cmp	x8, #0x1
    7078:	str	x9, [x21]
    707c:	ldr	w9, [x24, #8]
    7080:	add	x24, x24, #0x10
    7084:	str	w9, [x21, #8]
    7088:	add	x21, x21, #0x10
    708c:	b.gt	706c <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x284>
    7090:	ldp	x24, x0, [sp, #16]
    7094:	ldr	x23, [sp, #8]
    7098:	sub	x8, x20, x25
    709c:	cmp	x8, #0x1
    70a0:	b.lt	70d0 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x2e8>  // b.tstop
    70a4:	lsr	x8, x8, #4
    70a8:	add	x8, x8, #0x1
    70ac:	ldr	x9, [x25]
    70b0:	sub	x8, x8, #0x1
    70b4:	cmp	x8, #0x1
    70b8:	str	x9, [x21]
    70bc:	ldr	w9, [x25, #8]
    70c0:	add	x25, x25, #0x10
    70c4:	str	w9, [x21, #8]
    70c8:	add	x21, x21, #0x10
    70cc:	b.gt	70ac <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x2c4>
    70d0:	lsl	x21, x22, #2
    70d4:	cmp	x23, x21
    70d8:	mov	x4, x24
    70dc:	mov	x8, x23
    70e0:	b.lt	6e74 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x8c>  // b.tstop
    70e4:	ldr	x0, [sp, #24]
    70e8:	lsl	x23, x22, #6
    70ec:	lsl	x22, x22, #5
    70f0:	mov	x4, x24
    70f4:	add	x1, x0, x22
    70f8:	add	x24, x0, x23
    70fc:	mov	x2, x1
    7100:	mov	x3, x24
    7104:	mov	x5, x19
    7108:	bl	7774 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>
    710c:	sub	x8, x27, x24
    7110:	asr	x8, x8, #4
    7114:	mov	x4, x0
    7118:	cmp	x8, x21
    711c:	mov	x0, x24
    7120:	b.ge	70f4 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x30c>  // b.tcont
    7124:	ldp	x23, x24, [sp, #8]
    7128:	b	6e74 <_ZSt24__merge_sort_with_bufferIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_T1_+0x8c>
    712c:	mov	x1, x20
    7130:	mov	x2, x19
    7134:	ldp	x20, x19, [sp, #128]
    7138:	ldp	x22, x21, [sp, #112]
    713c:	ldp	x24, x23, [sp, #96]
    7140:	ldp	x26, x25, [sp, #80]
    7144:	ldp	x28, x27, [sp, #64]
    7148:	ldp	x29, x30, [sp, #48]
    714c:	add	sp, sp, #0x90
    7150:	b	6540 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_T0_>
    7154:	ldp	x20, x19, [sp, #128]
    7158:	ldp	x22, x21, [sp, #112]
    715c:	ldp	x24, x23, [sp, #96]
    7160:	ldp	x26, x25, [sp, #80]
    7164:	ldp	x28, x27, [sp, #64]
    7168:	ldp	x29, x30, [sp, #48]
    716c:	add	sp, sp, #0x90
    7170:	ret

0000000000007174 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_>:
    7174:	sub	sp, sp, #0x80
    7178:	stp	x29, x30, [sp, #32]
    717c:	stp	x28, x27, [sp, #48]
    7180:	stp	x26, x25, [sp, #64]
    7184:	stp	x24, x23, [sp, #80]
    7188:	stp	x22, x21, [sp, #96]
    718c:	stp	x20, x19, [sp, #112]
    7190:	add	x29, sp, #0x20
    7194:	cmp	x3, x4
    7198:	mov	x19, x7
    719c:	mov	x23, x4
    71a0:	mov	x28, x3
    71a4:	mov	x24, x1
    71a8:	cset	w8, gt
    71ac:	cmp	x3, x6
    71b0:	mov	x25, x0
    71b4:	str	x5, [sp, #16]
    71b8:	str	x2, [sp]
    71bc:	stur	x6, [x29, #-8]
    71c0:	b.gt	71d8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x64>
    71c4:	cmp	x28, x23
    71c8:	b.gt	71d8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x64>
    71cc:	mov	x26, x25
    71d0:	mov	x22, x24
    71d4:	b	72dc <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x168>
    71d8:	ldur	x27, [x29, #-8]
    71dc:	mov	x26, x25
    71e0:	str	x19, [sp, #8]
    71e4:	ldur	x9, [x29, #-8]
    71e8:	cmp	x23, x9
    71ec:	b.le	7494 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x320>
    71f0:	tbz	w8, #0, 7228 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0xb4>
    71f4:	cmp	x28, #0x0
    71f8:	cinc	x8, x28, lt  // lt = tstop
    71fc:	ldr	x1, [sp]
    7200:	asr	x21, x8, #1
    7204:	mov	x3, x19
    7208:	add	x19, x26, x21, lsl #4
    720c:	mov	x0, x24
    7210:	mov	x2, x19
    7214:	bl	6a90 <_ZSt13__lower_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Iter_comp_valIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    7218:	sub	x8, x0, x24
    721c:	mov	x22, x0
    7220:	asr	x20, x8, #4
    7224:	b	7258 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0xe4>
    7228:	cmp	x23, #0x0
    722c:	cinc	x8, x23, lt  // lt = tstop
    7230:	asr	x20, x8, #1
    7234:	add	x22, x24, x20, lsl #4
    7238:	mov	x0, x25
    723c:	mov	x1, x24
    7240:	mov	x2, x22
    7244:	mov	x3, x19
    7248:	bl	6c3c <_ZSt13__upper_boundIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES7_NS0_5__ops14_Val_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET_SI_SI_RKT0_T1_>
    724c:	sub	x8, x0, x25
    7250:	mov	x19, x0
    7254:	asr	x21, x8, #4
    7258:	mov	x1, x24
    725c:	ldr	x24, [sp, #16]
    7260:	sub	x28, x28, x21
    7264:	mov	x0, x19
    7268:	mov	x2, x22
    726c:	mov	x3, x28
    7270:	mov	x4, x20
    7274:	mov	x5, x24
    7278:	mov	x6, x27
    727c:	bl	0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7280:	mov	x1, x19
    7284:	ldr	x19, [sp, #8]
    7288:	mov	x26, x0
    728c:	mov	x0, x25
    7290:	mov	x2, x26
    7294:	mov	x3, x21
    7298:	mov	x4, x20
    729c:	mov	x5, x24
    72a0:	mov	x6, x27
    72a4:	mov	x7, x19
    72a8:	bl	7174 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_>
    72ac:	sub	x23, x23, x20
    72b0:	cmp	x28, x23
    72b4:	cset	w8, gt
    72b8:	cmp	x28, x27
    72bc:	mov	x24, x22
    72c0:	mov	x25, x26
    72c4:	b.gt	71e4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x70>
    72c8:	cmp	x28, x23
    72cc:	mov	x24, x22
    72d0:	mov	x25, x26
    72d4:	b.gt	71e4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x70>
    72d8:	mov	x25, x26
    72dc:	ldr	x2, [sp, #16]
    72e0:	ldr	x3, [sp]
    72e4:	sub	x9, x22, x26
    72e8:	cmp	x9, #0x1
    72ec:	b.lt	7714 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a0>  // b.tstop
    72f0:	lsr	x9, x9, #4
    72f4:	mov	x8, xzr
    72f8:	add	x9, x9, #0x1
    72fc:	add	x10, x25, x8
    7300:	ldr	x11, [x10]
    7304:	add	x12, x2, x8
    7308:	sub	x9, x9, #0x1
    730c:	cmp	x9, #0x1
    7310:	str	x11, [x12]
    7314:	ldr	w10, [x10, #8]
    7318:	add	x8, x8, #0x10
    731c:	str	w10, [x12, #8]
    7320:	b.gt	72fc <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x188>
    7324:	cbz	x8, 7714 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a0>
    7328:	add	x9, x2, x8
    732c:	neg	x10, x2
    7330:	b	7354 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x1e0>
    7334:	ldr	w13, [x2, #8]
    7338:	add	x2, x2, #0x10
    733c:	str	x11, [x26]
    7340:	str	w13, [x26, #8]
    7344:	add	x11, x2, x10
    7348:	cmp	x11, x8
    734c:	add	x26, x26, #0x10
    7350:	b.eq	7714 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a0>  // b.none
    7354:	cmp	x22, x3
    7358:	b.eq	765c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x4e8>  // b.none
    735c:	ldr	x12, [x22]
    7360:	ldr	x11, [x2]
    7364:	ldr	x15, [x12]
    7368:	ldr	x14, [x11]
    736c:	cmp	x15, x14
    7370:	b.eq	73d8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x264>  // b.none
    7374:	ldr	w12, [x19, #48]
    7378:	ldr	x13, [x19, #32]
    737c:	cbz	w12, 73ec <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x278>
    7380:	orr	x16, x15, #0x8
    7384:	cmn	x16, #0x8
    7388:	b.eq	7734 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5c0>  // b.none
    738c:	ubfx	x16, x15, #4, #28
    7390:	eor	w17, w16, w15, lsr #9
    7394:	sub	w16, w12, #0x1
    7398:	and	w17, w16, w17
    739c:	add	x18, x13, w17, uxtw #4
    73a0:	ldr	x0, [x18]
    73a4:	cmp	x0, x15
    73a8:	b.eq	73f0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x27c>  // b.none
    73ac:	mov	w1, #0x1                   	// #1
    73b0:	cmn	x0, #0x8
    73b4:	b.eq	73ec <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x278>  // b.none
    73b8:	add	w17, w17, w1
    73bc:	and	w17, w17, w16
    73c0:	add	x18, x13, w17, uxtw #4
    73c4:	ldr	x0, [x18]
    73c8:	add	w1, w1, #0x1
    73cc:	cmp	x0, x15
    73d0:	b.eq	73f0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x27c>  // b.none
    73d4:	b	73b0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x23c>
    73d8:	ldr	w12, [x22, #8]
    73dc:	ldr	w13, [x2, #8]
    73e0:	cmp	w12, w13
    73e4:	b.ls	7338 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x1c4>  // b.plast
    73e8:	b	7484 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x310>
    73ec:	add	x18, x13, x12, lsl #4
    73f0:	add	x15, x13, x12, lsl #4
    73f4:	cmp	x18, x15
    73f8:	b.eq	7754 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5e0>  // b.none
    73fc:	ldr	w15, [x18, #8]
    7400:	cbz	w12, 745c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2e8>
    7404:	orr	x16, x14, #0x8
    7408:	cmn	x16, #0x8
    740c:	b.eq	7734 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5c0>  // b.none
    7410:	ubfx	x16, x14, #4, #28
    7414:	eor	w17, w16, w14, lsr #9
    7418:	sub	w16, w12, #0x1
    741c:	and	w17, w16, w17
    7420:	add	x18, x13, w17, uxtw #4
    7424:	ldr	x0, [x18]
    7428:	cmp	x0, x14
    742c:	b.eq	7460 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2ec>  // b.none
    7430:	mov	w1, #0x1                   	// #1
    7434:	cmn	x0, #0x8
    7438:	b.eq	745c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2e8>  // b.none
    743c:	add	w17, w17, w1
    7440:	and	w17, w17, w16
    7444:	add	x18, x13, w17, uxtw #4
    7448:	ldr	x0, [x18]
    744c:	add	w1, w1, #0x1
    7450:	cmp	x0, x14
    7454:	b.eq	7460 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2ec>  // b.none
    7458:	b	7434 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x2c0>
    745c:	add	x18, x13, x12, lsl #4
    7460:	add	x12, x13, x12, lsl #4
    7464:	cmp	x18, x12
    7468:	b.eq	7754 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5e0>  // b.none
    746c:	ldr	w12, [x18, #8]
    7470:	sub	w13, w15, #0x1
    7474:	sub	w12, w12, #0x1
    7478:	cmp	w13, w12
    747c:	b.cs	7334 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x1c0>  // b.hs, b.nlast
    7480:	ldr	w12, [x22, #8]
    7484:	ldr	x11, [x22], #16
    7488:	str	w12, [x26, #8]
    748c:	str	x11, [x26]
    7490:	b	7344 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x1d0>
    7494:	ldr	x2, [sp]
    7498:	ldr	x1, [sp, #16]
    749c:	sub	x9, x2, x24
    74a0:	cmp	x9, #0x1
    74a4:	mov	x8, x1
    74a8:	b.lt	74e0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x36c>  // b.tstop
    74ac:	lsr	x8, x9, #4
    74b0:	add	x9, x8, #0x1
    74b4:	mov	x8, x1
    74b8:	mov	x10, x24
    74bc:	ldr	x11, [x10]
    74c0:	sub	x9, x9, #0x1
    74c4:	cmp	x9, #0x1
    74c8:	str	x11, [x8]
    74cc:	ldr	w11, [x10, #8]
    74d0:	add	x10, x10, #0x10
    74d4:	str	w11, [x8, #8]
    74d8:	add	x8, x8, #0x10
    74dc:	b.gt	74bc <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x348>
    74e0:	cmp	x26, x24
    74e4:	b.eq	7698 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x524>  // b.none
    74e8:	cmp	x8, x1
    74ec:	b.eq	7714 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a0>  // b.none
    74f0:	sub	x9, x24, #0x10
    74f4:	b	750c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x398>
    74f8:	ldr	w11, [x8, #8]
    74fc:	str	x10, [x2, #-16]!
    7500:	cmp	x8, x1
    7504:	str	w11, [x2, #8]
    7508:	b.eq	7714 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a0>  // b.none
    750c:	sub	x8, x8, #0x10
    7510:	ldr	x10, [x8]
    7514:	ldr	x11, [x9]
    7518:	ldr	x14, [x10]
    751c:	ldr	x13, [x11]
    7520:	cmp	x14, x13
    7524:	b.eq	758c <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x418>  // b.none
    7528:	ldr	w11, [x19, #48]
    752c:	ldr	x12, [x19, #32]
    7530:	cbz	w11, 75a0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x42c>
    7534:	orr	x15, x14, #0x8
    7538:	cmn	x15, #0x8
    753c:	b.eq	7734 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5c0>  // b.none
    7540:	ubfx	x15, x14, #4, #28
    7544:	eor	w16, w15, w14, lsr #9
    7548:	sub	w15, w11, #0x1
    754c:	and	w16, w15, w16
    7550:	add	x17, x12, w16, uxtw #4
    7554:	ldr	x18, [x17]
    7558:	cmp	x18, x14
    755c:	b.eq	75a4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x430>  // b.none
    7560:	mov	w0, #0x1                   	// #1
    7564:	cmn	x18, #0x8
    7568:	b.eq	75a0 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x42c>  // b.none
    756c:	add	w16, w16, w0
    7570:	and	w16, w16, w15
    7574:	add	x17, x12, w16, uxtw #4
    7578:	ldr	x18, [x17]
    757c:	add	w0, w0, #0x1
    7580:	cmp	x18, x14
    7584:	b.eq	75a4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x430>  // b.none
    7588:	b	7564 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x3f0>
    758c:	ldr	w11, [x8, #8]
    7590:	ldr	w12, [x9, #8]
    7594:	cmp	w11, w12
    7598:	b.ls	74fc <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x388>  // b.plast
    759c:	b	7638 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x4c4>
    75a0:	add	x17, x12, x11, lsl #4
    75a4:	add	x14, x12, x11, lsl #4
    75a8:	cmp	x17, x14
    75ac:	b.eq	7754 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5e0>  // b.none
    75b0:	ldr	w14, [x17, #8]
    75b4:	cbz	w11, 7610 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x49c>
    75b8:	orr	x15, x13, #0x8
    75bc:	cmn	x15, #0x8
    75c0:	b.eq	7734 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5c0>  // b.none
    75c4:	ubfx	x15, x13, #4, #28
    75c8:	eor	w16, w15, w13, lsr #9
    75cc:	sub	w15, w11, #0x1
    75d0:	and	w16, w15, w16
    75d4:	add	x17, x12, w16, uxtw #4
    75d8:	ldr	x18, [x17]
    75dc:	cmp	x18, x13
    75e0:	b.eq	7614 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x4a0>  // b.none
    75e4:	mov	w0, #0x1                   	// #1
    75e8:	cmn	x18, #0x8
    75ec:	b.eq	7610 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x49c>  // b.none
    75f0:	add	w16, w16, w0
    75f4:	and	w16, w16, w15
    75f8:	add	x17, x12, w16, uxtw #4
    75fc:	ldr	x18, [x17]
    7600:	add	w0, w0, #0x1
    7604:	cmp	x18, x13
    7608:	b.eq	7614 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x4a0>  // b.none
    760c:	b	75e8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x474>
    7610:	add	x17, x12, x11, lsl #4
    7614:	add	x11, x12, x11, lsl #4
    7618:	cmp	x17, x11
    761c:	b.eq	7754 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5e0>  // b.none
    7620:	ldr	w11, [x17, #8]
    7624:	sub	w12, w14, #0x1
    7628:	sub	w11, w11, #0x1
    762c:	cmp	w12, w11
    7630:	b.cs	74f8 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x384>  // b.hs, b.nlast
    7634:	ldr	w12, [x9, #8]
    7638:	ldr	x11, [x9]
    763c:	mov	x10, x2
    7640:	cmp	x26, x9
    7644:	str	x11, [x10, #-16]!
    7648:	str	w12, [x10, #8]
    764c:	b.eq	76d4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x560>  // b.none
    7650:	sub	x9, x9, #0x10
    7654:	mov	x2, x10
    7658:	b	7510 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x39c>
    765c:	sub	x8, x9, x2
    7660:	cmp	x8, #0x1
    7664:	b.lt	7714 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a0>  // b.tstop
    7668:	lsr	x8, x8, #4
    766c:	add	x8, x8, #0x1
    7670:	ldr	x9, [x2]
    7674:	sub	x8, x8, #0x1
    7678:	cmp	x8, #0x1
    767c:	str	x9, [x26]
    7680:	ldr	w9, [x2, #8]
    7684:	add	x2, x2, #0x10
    7688:	str	w9, [x26, #8]
    768c:	add	x26, x26, #0x10
    7690:	b.gt	7670 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x4fc>
    7694:	b	7714 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a0>
    7698:	sub	x9, x8, x1
    769c:	cmp	x9, #0x1
    76a0:	b.lt	7714 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a0>  // b.tstop
    76a4:	lsr	x10, x9, #4
    76a8:	sub	x9, x2, #0x8
    76ac:	add	x10, x10, #0x1
    76b0:	sub	x8, x8, #0x8
    76b4:	ldur	x11, [x8, #-8]
    76b8:	sub	x10, x10, #0x1
    76bc:	cmp	x10, #0x1
    76c0:	stur	x11, [x9, #-8]
    76c4:	ldr	w11, [x8], #-16
    76c8:	str	w11, [x9], #-16
    76cc:	b.gt	76b4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x540>
    76d0:	b	7714 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a0>
    76d4:	sub	x9, x8, x1
    76d8:	add	x9, x9, #0x10
    76dc:	cmp	x9, #0x1
    76e0:	b.lt	7714 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x5a0>  // b.tstop
    76e4:	lsr	x10, x9, #4
    76e8:	sub	x9, x2, #0x20
    76ec:	add	x10, x10, #0x1
    76f0:	add	x8, x8, #0x8
    76f4:	ldur	x11, [x8, #-8]
    76f8:	sub	x10, x10, #0x1
    76fc:	cmp	x10, #0x1
    7700:	str	x11, [x9]
    7704:	ldr	w11, [x8], #-16
    7708:	str	w11, [x9, #8]
    770c:	sub	x9, x9, #0x10
    7710:	b.gt	76f4 <_ZSt16__merge_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEElS8_NS0_5__ops15_Iter_comp_iterIZNS3_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEEvT_SI_SI_T0_SJ_T1_SJ_T2_+0x580>
    7714:	ldp	x20, x19, [sp, #112]
    7718:	ldp	x22, x21, [sp, #96]
    771c:	ldp	x24, x23, [sp, #80]
    7720:	ldp	x26, x25, [sp, #64]
    7724:	ldp	x28, x27, [sp, #48]
    7728:	ldp	x29, x30, [sp, #32]
    772c:	add	sp, sp, #0x80
    7730:	ret
    7734:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7738:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    773c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7740:	add	x0, x0, #0x0
    7744:	add	x1, x1, #0x0
    7748:	add	x3, x3, #0x0
    774c:	mov	w2, #0x252                 	// #594
    7750:	bl	0 <__assert_fail>
    7754:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7758:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    775c:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7760:	add	x0, x0, #0x0
    7764:	add	x1, x1, #0x0
    7768:	add	x3, x3, #0x0
    776c:	mov	w2, #0xa9                  	// #169
    7770:	bl	0 <__assert_fail>

0000000000007774 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_>:
    7774:	stp	x29, x30, [sp, #-16]!
    7778:	mov	x29, sp
    777c:	cmp	x2, x3
    7780:	b.ne	781c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0xa8>  // b.any
    7784:	sub	x8, x1, x0
    7788:	cmp	x8, #0x1
    778c:	b.lt	77bc <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x48>  // b.tstop
    7790:	lsr	x8, x8, #4
    7794:	add	x8, x8, #0x1
    7798:	ldr	x9, [x0]
    779c:	sub	x8, x8, #0x1
    77a0:	cmp	x8, #0x1
    77a4:	str	x9, [x4]
    77a8:	ldr	w9, [x0, #8]
    77ac:	add	x0, x0, #0x10
    77b0:	str	w9, [x4, #8]
    77b4:	add	x4, x4, #0x10
    77b8:	b.gt	7798 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x24>
    77bc:	sub	x8, x3, x2
    77c0:	cmp	x8, #0x1
    77c4:	b.lt	77f4 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x80>  // b.tstop
    77c8:	lsr	x8, x8, #4
    77cc:	add	x8, x8, #0x1
    77d0:	ldr	x9, [x2]
    77d4:	sub	x8, x8, #0x1
    77d8:	cmp	x8, #0x1
    77dc:	str	x9, [x4]
    77e0:	ldr	w9, [x2, #8]
    77e4:	add	x2, x2, #0x10
    77e8:	str	w9, [x4, #8]
    77ec:	add	x4, x4, #0x10
    77f0:	b.gt	77d0 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x5c>
    77f4:	mov	x0, x4
    77f8:	ldp	x29, x30, [sp], #16
    77fc:	ret
    7800:	ldr	w11, [x0, #8]
    7804:	add	x0, x0, #0x10
    7808:	str	x9, [x4]
    780c:	str	w11, [x4, #8]
    7810:	cmp	x2, x3
    7814:	add	x4, x4, #0x10
    7818:	b.eq	7784 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x10>  // b.none
    781c:	cmp	x0, x1
    7820:	b.eq	7784 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x10>  // b.none
    7824:	ldr	x8, [x2]
    7828:	ldr	x9, [x0]
    782c:	ldr	x13, [x8]
    7830:	ldr	x12, [x9]
    7834:	cmp	x13, x12
    7838:	b.eq	78a0 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x12c>  // b.none
    783c:	ldr	w10, [x5, #48]
    7840:	ldr	x11, [x5, #32]
    7844:	cbz	w10, 78b4 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x140>
    7848:	orr	x14, x13, #0x8
    784c:	cmn	x14, #0x8
    7850:	b.eq	795c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1e8>  // b.none
    7854:	ubfx	x14, x13, #4, #28
    7858:	eor	w15, w14, w13, lsr #9
    785c:	sub	w14, w10, #0x1
    7860:	and	w15, w14, w15
    7864:	add	x16, x11, w15, uxtw #4
    7868:	ldr	x17, [x16]
    786c:	cmp	x17, x13
    7870:	b.eq	78b8 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x144>  // b.none
    7874:	mov	w18, #0x1                   	// #1
    7878:	cmn	x17, #0x8
    787c:	b.eq	78b4 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x140>  // b.none
    7880:	add	w15, w15, w18
    7884:	and	w15, w15, w14
    7888:	add	x16, x11, w15, uxtw #4
    788c:	ldr	x17, [x16]
    7890:	add	w18, w18, #0x1
    7894:	cmp	x17, x13
    7898:	b.eq	78b8 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x144>  // b.none
    789c:	b	7878 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x104>
    78a0:	ldr	w10, [x2, #8]
    78a4:	ldr	w11, [x0, #8]
    78a8:	cmp	w10, w11
    78ac:	b.ls	7804 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x90>  // b.plast
    78b0:	b	794c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1d8>
    78b4:	add	x16, x11, x10, lsl #4
    78b8:	add	x13, x11, x10, lsl #4
    78bc:	cmp	x16, x13
    78c0:	b.eq	797c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x208>  // b.none
    78c4:	ldr	w13, [x16, #8]
    78c8:	cbz	w10, 7924 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1b0>
    78cc:	orr	x14, x12, #0x8
    78d0:	cmn	x14, #0x8
    78d4:	b.eq	795c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1e8>  // b.none
    78d8:	ubfx	x14, x12, #4, #28
    78dc:	eor	w15, w14, w12, lsr #9
    78e0:	sub	w14, w10, #0x1
    78e4:	and	w15, w14, w15
    78e8:	add	x16, x11, w15, uxtw #4
    78ec:	ldr	x17, [x16]
    78f0:	cmp	x17, x12
    78f4:	b.eq	7928 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1b4>  // b.none
    78f8:	mov	w18, #0x1                   	// #1
    78fc:	cmn	x17, #0x8
    7900:	b.eq	7924 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1b0>  // b.none
    7904:	add	w15, w15, w18
    7908:	and	w15, w15, w14
    790c:	add	x16, x11, w15, uxtw #4
    7910:	ldr	x17, [x16]
    7914:	add	w18, w18, #0x1
    7918:	cmp	x17, x12
    791c:	b.eq	7928 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x1b4>  // b.none
    7920:	b	78fc <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x188>
    7924:	add	x16, x11, x10, lsl #4
    7928:	add	x10, x11, x10, lsl #4
    792c:	cmp	x16, x10
    7930:	b.eq	797c <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x208>  // b.none
    7934:	ldr	w10, [x16, #8]
    7938:	sub	w11, w13, #0x1
    793c:	sub	w10, w10, #0x1
    7940:	cmp	w11, w10
    7944:	b.cs	7800 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x8c>  // b.hs, b.nlast
    7948:	ldr	w10, [x2, #8]
    794c:	str	x8, [x4]
    7950:	str	w10, [x4, #8]
    7954:	add	x2, x2, #0x10
    7958:	b	7810 <_ZSt12__move_mergeIPSt4pairIPKN4llvm5ValueEjEN9__gnu_cxx17__normal_iteratorIS6_St6vectorIS5_SaIS5_EEEENS7_5__ops15_Iter_comp_iterIZNS1_15ValueEnumerator17OptimizeConstantsEjjE3$_0EEET0_T_SJ_SJ_SJ_SI_T1_+0x9c>
    795c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7960:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7964:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7968:	add	x0, x0, #0x0
    796c:	add	x1, x1, #0x0
    7970:	add	x3, x3, #0x0
    7974:	mov	w2, #0x252                 	// #594
    7978:	bl	0 <__assert_fail>
    797c:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7980:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7984:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7988:	add	x0, x0, #0x0
    798c:	add	x1, x1, #0x0
    7990:	add	x3, x3, #0x0
    7994:	mov	w2, #0xa9                  	// #169
    7998:	bl	0 <__assert_fail>

000000000000799c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_>:
    799c:	sub	sp, sp, #0x60
    79a0:	stp	x29, x30, [sp, #16]
    79a4:	stp	x26, x25, [sp, #32]
    79a8:	stp	x24, x23, [sp, #48]
    79ac:	stp	x22, x21, [sp, #64]
    79b0:	stp	x20, x19, [sp, #80]
    79b4:	add	x29, sp, #0x10
    79b8:	sub	x25, x1, x0
    79bc:	cmp	x25, #0x81
    79c0:	b.lt	7b9c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x200>  // b.tstop
    79c4:	mov	x19, x3
    79c8:	mov	x21, x1
    79cc:	mov	x20, x0
    79d0:	mov	x22, x2
    79d4:	add	x24, x0, #0x8
    79d8:	b	7a00 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x64>
    79dc:	mov	x0, x23
    79e0:	mov	x1, x21
    79e4:	mov	x2, x22
    79e8:	mov	x3, x19
    79ec:	bl	799c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_>
    79f0:	sub	x25, x23, x20
    79f4:	cmp	x25, #0x80
    79f8:	mov	x21, x23
    79fc:	b.le	7b9c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x200>
    7a00:	cbz	x22, 7b28 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x18c>
    7a04:	lsr	x23, x25, #4
    7a08:	str	x19, [sp, #8]
    7a0c:	ldr	x1, [x20, #8]
    7a10:	ldr	x2, [x20, x23, lsl #3]
    7a14:	add	x0, sp, #0x8
    7a18:	sub	x22, x22, #0x1
    7a1c:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    7a20:	tbz	w0, #0, 7a50 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0xb4>
    7a24:	ldr	x1, [x20, x23, lsl #3]
    7a28:	ldur	x2, [x21, #-8]
    7a2c:	add	x0, sp, #0x8
    7a30:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    7a34:	tbz	w0, #0, 7a74 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0xd8>
    7a38:	lsl	x8, x23, #3
    7a3c:	ldr	x9, [x20, x8]
    7a40:	ldr	x10, [x20]
    7a44:	str	x9, [x20]
    7a48:	str	x10, [x20, x8]
    7a4c:	b	7ad0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x134>
    7a50:	ldr	x1, [x24]
    7a54:	ldur	x2, [x21, #-8]
    7a58:	add	x0, sp, #0x8
    7a5c:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    7a60:	tbz	w0, #0, 7a98 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0xfc>
    7a64:	ldr	q0, [x20]
    7a68:	ext	v0.16b, v0.16b, v0.16b, #8
    7a6c:	str	q0, [x20]
    7a70:	b	7ad0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x134>
    7a74:	ldr	x1, [x20, #8]
    7a78:	ldur	x2, [x21, #-8]
    7a7c:	add	x0, sp, #0x8
    7a80:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    7a84:	ldr	x8, [x20]
    7a88:	tbnz	w0, #0, 7ab0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x114>
    7a8c:	ldr	x9, [x20, #8]
    7a90:	stp	x9, x8, [x20]
    7a94:	b	7ad0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x134>
    7a98:	ldr	x1, [x20, x23, lsl #3]
    7a9c:	ldur	x2, [x21, #-8]
    7aa0:	add	x0, sp, #0x8
    7aa4:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    7aa8:	ldr	x8, [x20]
    7aac:	tbz	w0, #0, 7ac0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x124>
    7ab0:	ldur	x9, [x21, #-8]
    7ab4:	str	x9, [x20]
    7ab8:	stur	x8, [x21, #-8]
    7abc:	b	7ad0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x134>
    7ac0:	lsl	x9, x23, #3
    7ac4:	ldr	x10, [x20, x9]
    7ac8:	str	x10, [x20]
    7acc:	str	x8, [x20, x9]
    7ad0:	mov	x25, x21
    7ad4:	mov	x26, x24
    7ad8:	str	x19, [sp, #8]
    7adc:	sub	x23, x26, #0x8
    7ae0:	ldr	x1, [x23, #8]!
    7ae4:	ldr	x2, [x20]
    7ae8:	add	x0, sp, #0x8
    7aec:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    7af0:	tbnz	w0, #0, 7ae0 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x144>
    7af4:	add	x26, x23, #0x8
    7af8:	ldr	x2, [x25, #-8]!
    7afc:	ldr	x1, [x20]
    7b00:	add	x0, sp, #0x8
    7b04:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    7b08:	tbnz	w0, #0, 7af8 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x15c>
    7b0c:	cmp	x23, x25
    7b10:	b.cs	79dc <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x40>  // b.hs, b.nlast
    7b14:	ldr	x8, [x25]
    7b18:	ldr	x9, [x23]
    7b1c:	str	x8, [x23]
    7b20:	str	x9, [x25]
    7b24:	b	7adc <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x140>
    7b28:	lsr	x22, x25, #3
    7b2c:	sub	x8, x22, #0x2
    7b30:	sub	x9, x22, #0x1
    7b34:	cmp	x8, #0x0
    7b38:	csel	x8, x9, x8, lt  // lt = tstop
    7b3c:	asr	x23, x8, #1
    7b40:	ldr	x3, [x20, x23, lsl #3]
    7b44:	mov	x0, x20
    7b48:	mov	x1, x23
    7b4c:	mov	x2, x22
    7b50:	mov	x4, x19
    7b54:	bl	7bb8 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_>
    7b58:	sub	x23, x23, #0x1
    7b5c:	cmn	x23, #0x1
    7b60:	b.ne	7b40 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1a4>  // b.any
    7b64:	cmp	x25, #0x9
    7b68:	b.lt	7b9c <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x200>  // b.tstop
    7b6c:	sub	x21, x21, #0x8
    7b70:	ldr	x8, [x20]
    7b74:	ldr	x3, [x21]
    7b78:	sub	x22, x21, x20
    7b7c:	asr	x2, x22, #3
    7b80:	mov	x0, x20
    7b84:	mov	x1, xzr
    7b88:	mov	x4, x19
    7b8c:	str	x8, [x21], #-8
    7b90:	bl	7bb8 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_>
    7b94:	cmp	x22, #0x8
    7b98:	b.gt	7b70 <_ZSt16__introsort_loopIPN4llvm15ValueEnumerator7MDIndexElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_S9_T0_T1_+0x1d4>
    7b9c:	ldp	x20, x19, [sp, #80]
    7ba0:	ldp	x22, x21, [sp, #64]
    7ba4:	ldp	x24, x23, [sp, #48]
    7ba8:	ldp	x26, x25, [sp, #32]
    7bac:	ldp	x29, x30, [sp, #16]
    7bb0:	add	sp, sp, #0x60
    7bb4:	ret

0000000000007bb8 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_>:
    7bb8:	sub	sp, sp, #0x70
    7bbc:	stp	x29, x30, [sp, #16]
    7bc0:	stp	x28, x27, [sp, #32]
    7bc4:	stp	x26, x25, [sp, #48]
    7bc8:	stp	x24, x23, [sp, #64]
    7bcc:	stp	x22, x21, [sp, #80]
    7bd0:	stp	x20, x19, [sp, #96]
    7bd4:	add	x29, sp, #0x10
    7bd8:	sub	x25, x2, #0x1
    7bdc:	cmp	x25, #0x0
    7be0:	csel	x8, x2, x25, lt  // lt = tstop
    7be4:	asr	x26, x8, #1
    7be8:	mov	x22, x4
    7bec:	mov	x19, x3
    7bf0:	mov	x23, x2
    7bf4:	mov	x21, x1
    7bf8:	mov	x20, x0
    7bfc:	cmp	x26, x1
    7c00:	mov	x24, x1
    7c04:	str	x4, [sp, #8]
    7c08:	b.le	7c4c <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x94>
    7c0c:	mov	x27, x21
    7c10:	lsl	x8, x27, #1
    7c14:	mov	w24, #0x1                   	// #1
    7c18:	add	x28, x8, #0x2
    7c1c:	bfi	x24, x27, #1, #63
    7c20:	ldr	x1, [x20, x28, lsl #3]
    7c24:	ldr	x2, [x20, x24, lsl #3]
    7c28:	add	x0, sp, #0x8
    7c2c:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    7c30:	tst	w0, #0x1
    7c34:	csel	x24, x24, x28, ne  // ne = any
    7c38:	ldr	x8, [x20, x24, lsl #3]
    7c3c:	cmp	x24, x26
    7c40:	str	x8, [x20, x27, lsl #3]
    7c44:	mov	x27, x24
    7c48:	b.lt	7c10 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x58>  // b.tstop
    7c4c:	tbnz	w23, #0, 7c78 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0xc0>
    7c50:	sub	x8, x23, #0x2
    7c54:	cmp	x8, #0x0
    7c58:	csel	x8, x25, x8, lt  // lt = tstop
    7c5c:	cmp	x24, x8, asr #1
    7c60:	b.ne	7c78 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0xc0>  // b.any
    7c64:	mov	w8, #0x1                   	// #1
    7c68:	bfi	x8, x24, #1, #63
    7c6c:	ldr	x9, [x20, x8, lsl #3]
    7c70:	str	x9, [x20, x24, lsl #3]
    7c74:	mov	x24, x8
    7c78:	cmp	x24, x21
    7c7c:	str	x22, [sp]
    7c80:	b.le	7cc0 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x108>
    7c84:	sub	x8, x24, #0x1
    7c88:	cmp	x8, #0x0
    7c8c:	csel	x8, x24, x8, lt  // lt = tstop
    7c90:	asr	x22, x8, #1
    7c94:	ldr	x1, [x20, x22, lsl #3]
    7c98:	mov	x0, sp
    7c9c:	mov	x2, x19
    7ca0:	bl	7ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>
    7ca4:	tbz	w0, #0, 7cc0 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x108>
    7ca8:	ldr	x8, [x20, x22, lsl #3]
    7cac:	cmp	x22, x21
    7cb0:	str	x8, [x20, x24, lsl #3]
    7cb4:	mov	x24, x22
    7cb8:	b.gt	7c84 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0xcc>
    7cbc:	b	7cc4 <_ZSt13__adjust_heapIPN4llvm15ValueEnumerator7MDIndexElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS1_16organizeMetadataEvE3$_3EEEvT_T0_SA_T1_T2_+0x10c>
    7cc0:	mov	x22, x24
    7cc4:	str	x19, [x20, x22, lsl #3]
    7cc8:	ldp	x20, x19, [sp, #96]
    7ccc:	ldp	x22, x21, [sp, #80]
    7cd0:	ldp	x24, x23, [sp, #64]
    7cd4:	ldp	x26, x25, [sp, #48]
    7cd8:	ldp	x28, x27, [sp, #32]
    7cdc:	ldp	x29, x30, [sp, #16]
    7ce0:	add	sp, sp, #0x70
    7ce4:	ret

0000000000007ce8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_>:
    7ce8:	stp	x29, x30, [sp, #-16]!
    7cec:	mov	x29, sp
    7cf0:	lsr	x8, x1, #32
    7cf4:	cbz	w8, 7db8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xd0>
    7cf8:	ldr	x9, [x0]
    7cfc:	ldp	x11, x9, [x9, #208]
    7d00:	sub	x9, x9, x11
    7d04:	asr	x12, x9, #3
    7d08:	cmp	x12, x8
    7d0c:	b.cc	7e38 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x150>  // b.lo, b.ul, b.last
    7d10:	sub	w9, w8, #0x1
    7d14:	cmp	x12, x9
    7d18:	b.ls	7e58 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x170>  // b.plast
    7d1c:	ldr	x10, [x11, x9, lsl #3]
    7d20:	cbz	x10, 7e78 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x190>
    7d24:	ldrb	w13, [x10]
    7d28:	lsr	x9, x2, #32
    7d2c:	cbz	w13, 7d48 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x60>
    7d30:	sub	w13, w13, #0x4
    7d34:	cmp	w13, #0x1b
    7d38:	b.ls	7da0 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xb8>  // b.plast
    7d3c:	mov	w10, #0x1                   	// #1
    7d40:	cbnz	w9, 7d50 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x68>
    7d44:	b	7db8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xd0>
    7d48:	mov	w10, wzr
    7d4c:	cbz	w9, 7db8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xd0>
    7d50:	cmp	x12, x9
    7d54:	b.cc	7e38 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x150>  // b.lo, b.ul, b.last
    7d58:	sub	w13, w9, #0x1
    7d5c:	cmp	x12, x13
    7d60:	b.ls	7e58 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x170>  // b.plast
    7d64:	ldr	x11, [x11, x13, lsl #3]
    7d68:	cbz	x11, 7e78 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x190>
    7d6c:	ldrb	w12, [x11]
    7d70:	cbz	w12, 7d90 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xa8>
    7d74:	sub	w12, w12, #0x4
    7d78:	cmp	w12, #0x1b
    7d7c:	b.ls	7dd8 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0xf0>  // b.plast
    7d80:	mov	w11, #0x1                   	// #1
    7d84:	cmp	w1, w2
    7d88:	b.cc	7e10 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x128>  // b.lo, b.ul, b.last
    7d8c:	b	7df4 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x10c>
    7d90:	mov	w11, wzr
    7d94:	cmp	w1, w2
    7d98:	b.cs	7df4 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x10c>  // b.hs, b.nlast
    7d9c:	b	7e10 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x128>
    7da0:	ldrb	w10, [x10, #1]
    7da4:	and	w10, w10, #0x7f
    7da8:	cmp	w10, #0x1
    7dac:	mov	w10, #0x2                   	// #2
    7db0:	cinc	w10, w10, ne  // ne = any
    7db4:	cbnz	w9, 7d50 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x68>
    7db8:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7dbc:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7dc0:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7dc4:	add	x0, x0, #0x0
    7dc8:	add	x1, x1, #0x0
    7dcc:	add	x3, x3, #0x0
    7dd0:	mov	w2, #0x55                  	// #85
    7dd4:	bl	0 <__assert_fail>
    7dd8:	ldrb	w11, [x11, #1]
    7ddc:	and	w11, w11, #0x7f
    7de0:	cmp	w11, #0x1
    7de4:	mov	w11, #0x2                   	// #2
    7de8:	cinc	w11, w11, ne  // ne = any
    7dec:	cmp	w1, w2
    7df0:	b.cc	7e10 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x128>  // b.lo, b.ul, b.last
    7df4:	cmp	w2, w1
    7df8:	b.cs	7e08 <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x120>  // b.hs, b.nlast
    7dfc:	mov	w0, wzr
    7e00:	ldp	x29, x30, [sp], #16
    7e04:	ret
    7e08:	cmp	w10, w11
    7e0c:	b.cs	7e1c <_ZZN4llvm15ValueEnumerator16organizeMetadataEvENK3$_3clENS0_7MDIndexES2_+0x134>  // b.hs, b.nlast
    7e10:	mov	w0, #0x1                   	// #1
    7e14:	ldp	x29, x30, [sp], #16
    7e18:	ret
    7e1c:	cmp	w11, w10
    7e20:	cset	w10, cs  // cs = hs, nlast
    7e24:	cmp	w8, w9
    7e28:	cset	w8, cc  // cc = lo, ul, last
    7e2c:	and	w0, w8, w10
    7e30:	ldp	x29, x30, [sp], #16
    7e34:	ret
    7e38:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7e3c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7e40:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7e44:	add	x0, x0, #0x0
    7e48:	add	x1, x1, #0x0
    7e4c:	add	x3, x3, #0x0
    7e50:	mov	w2, #0x56                  	// #86
    7e54:	bl	0 <__assert_fail>
    7e58:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7e5c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7e60:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7e64:	add	x0, x0, #0x0
    7e68:	add	x1, x1, #0x0
    7e6c:	add	x3, x3, #0x0
    7e70:	mov	w2, #0xfa                  	// #250
    7e74:	bl	0 <__assert_fail>
    7e78:	adrp	x0, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7e7c:	adrp	x1, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7e80:	adrp	x3, 0 <_ZN4llvm15ValueEnumeratorC1ERKNS_6ModuleEb>
    7e84:	add	x0, x0, #0x0
    7e88:	add	x1, x1, #0x0
    7e8c:	add	x3, x3, #0x0
    7e90:	mov	w2, #0x69                  	// #105
    7e94:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE:

0000000000000000 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #280]
   c:	cbz	w9, a8 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0xa8>
  10:	orr	x8, x1, #0x4
  14:	cmn	x8, #0x4
  18:	b.eq	88 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0x88>  // b.none
  1c:	ldr	x8, [x0, #264]
  20:	ubfx	x10, x1, #4, #28
  24:	eor	w11, w10, w1, lsr #9
  28:	sub	w10, w9, #0x1
  2c:	and	w9, w10, w11
  30:	lsl	x11, x9, #4
  34:	ldr	x11, [x8, x11]
  38:	cmp	x11, x1
  3c:	b.ne	58 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0x58>  // b.any
  40:	add	x8, x8, x9, lsl #4
  44:	ldr	w8, [x8, #12]
  48:	cbz	w8, a8 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0xa8>
  4c:	sub	w0, w8, #0x1
  50:	ldp	x29, x30, [sp], #16
  54:	ret
  58:	mov	w12, #0x1                   	// #1
  5c:	cmn	x11, #0x4
  60:	b.eq	a8 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0xa8>  // b.none
  64:	add	w9, w9, w12
  68:	and	w9, w9, w10
  6c:	lsl	x11, x9, #4
  70:	ldr	x11, [x8, x11]
  74:	add	w12, w12, #0x1
  78:	cmp	x11, x1
  7c:	b.ne	5c <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0x5c>  // b.any
  80:	mov	w9, w9
  84:	b	40 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE+0x40>
  88:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  8c:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  90:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x252                 	// #594
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  ac:	adrp	x1, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  b0:	adrp	x3, 0 <_ZNK4llvm15ValueEnumerator13getMetadataIDEPKNS_8MetadataE>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x9b                  	// #155
  c4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	mov	x19, x1
  14:	cbz	w8, 8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_+0x8c>
  18:	ldr	x9, [x19]
  1c:	orr	x10, x9, #0x8
  20:	cmn	x10, #0x8
  24:	b.eq	c8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_+0xc8>  // b.none
  28:	ldr	x10, [x0, #8]
  2c:	ubfx	x11, x9, #4, #28
  30:	eor	w12, w11, w9, lsr #9
  34:	sub	w11, w8, #0x1
  38:	and	w12, w12, w11
  3c:	add	x8, x10, w12, uxtw #4
  40:	ldr	x14, [x8]
  44:	cmp	x14, x9
  48:	b.eq	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_+0xac>  // b.none
  4c:	mov	x13, xzr
  50:	mov	w16, #0x1                   	// #1
  54:	mov	x15, #0xfffffffffffffff0    	// #-16
  58:	cmn	x14, #0x8
  5c:	b.eq	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_+0xbc>  // b.none
  60:	cmp	x13, #0x0
  64:	add	w12, w12, w16
  68:	ccmp	x14, x15, #0x0, eq  // eq = none
  6c:	and	w12, w12, w11
  70:	csel	x13, x13, x8, ne  // ne = any
  74:	add	x8, x10, w12, uxtw #4
  78:	ldr	x14, [x8]
  7c:	add	w16, w16, #0x1
  80:	cmp	x14, x9
  84:	b.eq	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_+0xac>  // b.none
  88:	b	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_+0x58>
  8c:	mov	x3, xzr
  90:	mov	x1, x19
  94:	mov	x2, x19
  98:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_>
  9c:	ldr	x9, [x19]
  a0:	mov	x8, x0
  a4:	str	wzr, [x0, #8]
  a8:	str	x9, [x0]
  ac:	ldr	x19, [sp, #16]
  b0:	add	x0, x8, #0x8
  b4:	ldp	x29, x30, [sp], #32
  b8:	ret
  bc:	cmp	x13, #0x0
  c0:	csel	x3, x8, x13, eq  // eq = none
  c4:	b	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_+0x90>
  c8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_>
  cc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_>
  d0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_EixERKS4_>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x252                 	// #594
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	mov	x19, x1
  14:	cbz	w8, 8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_+0x8c>
  18:	ldr	x9, [x19]
  1c:	orr	x10, x9, #0x4
  20:	cmn	x10, #0x4
  24:	b.eq	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_+0xc4>  // b.none
  28:	ldr	x10, [x0, #8]
  2c:	ubfx	x11, x9, #4, #28
  30:	eor	w12, w11, w9, lsr #9
  34:	sub	w11, w8, #0x1
  38:	and	w12, w12, w11
  3c:	add	x8, x10, w12, uxtw #4
  40:	ldr	x14, [x8]
  44:	cmp	x14, x9
  48:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_+0xa8>  // b.none
  4c:	mov	x13, xzr
  50:	mov	w16, #0x1                   	// #1
  54:	mov	x15, #0xfffffffffffffff8    	// #-8
  58:	cmn	x14, #0x4
  5c:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_+0xb8>  // b.none
  60:	cmp	x13, #0x0
  64:	add	w12, w12, w16
  68:	ccmp	x14, x15, #0x0, eq  // eq = none
  6c:	and	w12, w12, w11
  70:	csel	x13, x13, x8, ne  // ne = any
  74:	add	x8, x10, w12, uxtw #4
  78:	ldr	x14, [x8]
  7c:	add	w16, w16, #0x1
  80:	cmp	x14, x9
  84:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_+0xa8>  // b.none
  88:	b	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_+0x58>
  8c:	mov	x3, xzr
  90:	mov	x1, x19
  94:	mov	x2, x19
  98:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_>
  9c:	ldr	x9, [x19]
  a0:	mov	x8, x0
  a4:	stp	x9, xzr, [x0]
  a8:	ldr	x19, [sp, #16]
  ac:	add	x0, x8, #0x8
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret
  b8:	cmp	x13, #0x0
  bc:	csel	x3, x8, x13, eq  // eq = none
  c0:	b	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_+0x90>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixEOS4_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x252                 	// #594
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	mov	x19, x1
  14:	cbz	w8, 8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0x8c>
  18:	ldr	x9, [x19]
  1c:	orr	x10, x9, #0x4
  20:	cmn	x10, #0x4
  24:	b.eq	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0xc4>  // b.none
  28:	ldr	x10, [x0, #8]
  2c:	ubfx	x11, x9, #4, #28
  30:	eor	w12, w11, w9, lsr #9
  34:	sub	w11, w8, #0x1
  38:	and	w12, w12, w11
  3c:	add	x8, x10, w12, uxtw #4
  40:	ldr	x14, [x8]
  44:	cmp	x14, x9
  48:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0xa8>  // b.none
  4c:	mov	x13, xzr
  50:	mov	w16, #0x1                   	// #1
  54:	mov	x15, #0xfffffffffffffff8    	// #-8
  58:	cmn	x14, #0x4
  5c:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0xb8>  // b.none
  60:	cmp	x13, #0x0
  64:	add	w12, w12, w16
  68:	ccmp	x14, x15, #0x0, eq  // eq = none
  6c:	and	w12, w12, w11
  70:	csel	x13, x13, x8, ne  // ne = any
  74:	add	x8, x10, w12, uxtw #4
  78:	ldr	x14, [x8]
  7c:	add	w16, w16, #0x1
  80:	cmp	x14, x9
  84:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0xa8>  // b.none
  88:	b	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0x58>
  8c:	mov	x3, xzr
  90:	mov	x1, x19
  94:	mov	x2, x19
  98:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_>
  9c:	ldr	x9, [x19]
  a0:	mov	x8, x0
  a4:	stp	x9, xzr, [x0]
  a8:	ldr	x19, [sp, #16]
  ac:	add	x0, x8, #0x8
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret
  b8:	cmp	x13, #0x0
  bc:	csel	x3, x8, x13, eq  // eq = none
  c0:	b	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0x90>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x252                 	// #594
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	mov	x19, x1
  14:	cbz	w8, 8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_+0x8c>
  18:	ldr	x9, [x19]
  1c:	orr	x10, x9, #0x8
  20:	cmn	x10, #0x8
  24:	b.eq	c8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_+0xc8>  // b.none
  28:	ldr	x10, [x0, #8]
  2c:	ubfx	x11, x9, #4, #28
  30:	eor	w12, w11, w9, lsr #9
  34:	sub	w11, w8, #0x1
  38:	and	w12, w12, w11
  3c:	add	x8, x10, w12, uxtw #4
  40:	ldr	x14, [x8]
  44:	cmp	x14, x9
  48:	b.eq	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_+0xac>  // b.none
  4c:	mov	x13, xzr
  50:	mov	w16, #0x1                   	// #1
  54:	mov	x15, #0xfffffffffffffff0    	// #-16
  58:	cmn	x14, #0x8
  5c:	b.eq	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_+0xbc>  // b.none
  60:	cmp	x13, #0x0
  64:	add	w12, w12, w16
  68:	ccmp	x14, x15, #0x0, eq  // eq = none
  6c:	and	w12, w12, w11
  70:	csel	x13, x13, x8, ne  // ne = any
  74:	add	x8, x10, w12, uxtw #4
  78:	ldr	x14, [x8]
  7c:	add	w16, w16, #0x1
  80:	cmp	x14, x9
  84:	b.eq	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_+0xac>  // b.none
  88:	b	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_+0x58>
  8c:	mov	x3, xzr
  90:	mov	x1, x19
  94:	mov	x2, x19
  98:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_>
  9c:	ldr	x9, [x19]
  a0:	mov	x8, x0
  a4:	str	wzr, [x0, #8]
  a8:	str	x9, [x0]
  ac:	ldr	x19, [sp, #16]
  b0:	add	x0, x8, #0x8
  b4:	ldp	x29, x30, [sp], #32
  b8:	ret
  bc:	cmp	x13, #0x0
  c0:	csel	x3, x8, x13, eq  // eq = none
  c4:	b	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_+0x90>
  c8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_>
  cc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_>
  d0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_EixERKS3_>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	add	x3, x3, #0x0
  e0:	mov	w2, #0x252                 	// #594
  e4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	mov	x19, x1
  14:	cbz	w8, 8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0x8c>
  18:	ldr	x9, [x19]
  1c:	orr	x10, x9, #0x8
  20:	cmn	x10, #0x8
  24:	b.eq	cc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0xcc>  // b.none
  28:	ldr	x10, [x0, #8]
  2c:	ubfx	x11, x9, #4, #28
  30:	eor	w12, w11, w9, lsr #9
  34:	sub	w11, w8, #0x1
  38:	and	w12, w12, w11
  3c:	add	x8, x10, w12, uxtw #4
  40:	ldr	x14, [x8]
  44:	cmp	x14, x9
  48:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0xb0>  // b.none
  4c:	mov	x13, xzr
  50:	mov	w16, #0x1                   	// #1
  54:	mov	x15, #0xfffffffffffffff0    	// #-16
  58:	cmn	x14, #0x8
  5c:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0xc0>  // b.none
  60:	cmp	x13, #0x0
  64:	add	w12, w12, w16
  68:	ccmp	x14, x15, #0x0, eq  // eq = none
  6c:	and	w12, w12, w11
  70:	csel	x13, x13, x8, ne  // ne = any
  74:	add	x8, x10, w12, uxtw #4
  78:	ldr	x14, [x8]
  7c:	add	w16, w16, #0x1
  80:	cmp	x14, x9
  84:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0xb0>  // b.none
  88:	b	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0x58>
  8c:	mov	x3, xzr
  90:	mov	x1, x19
  94:	mov	x2, x19
  98:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_>
  9c:	ldr	x9, [x19]
  a0:	mov	x8, x0
  a4:	str	wzr, [x0, #8]
  a8:	strb	wzr, [x0, #12]
  ac:	str	x9, [x0]
  b0:	ldr	x19, [sp, #16]
  b4:	add	x0, x8, #0x8
  b8:	ldp	x29, x30, [sp], #32
  bc:	ret
  c0:	cmp	x13, #0x0
  c4:	csel	x3, x8, x13, eq  // eq = none
  c8:	b	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_+0x90>
  cc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_>
  d0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_>
  d4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_EixERKS4_>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x252                 	// #594
  e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	x9, [x1, #8]
  a0:	str	x9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueESt4pairIjbENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_3UseEjELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x26, [x0]
  20:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  24:	sub	x8, x26, x20
  28:	cmp	x8, x9
  2c:	b.eq	1d4 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1d4>  // b.none
  30:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  34:	asr	x9, x8, #3
  38:	movk	x10, #0xcccd
  3c:	cmp	x8, #0x0
  40:	mul	x9, x9, x10
  44:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  48:	csinc	x11, x9, xzr, ne  // ne = any
  4c:	movk	x8, #0x333, lsl #48
  50:	adds	x9, x11, x9
  54:	cset	w11, cs  // cs = hs, nlast
  58:	cmp	x9, x8
  5c:	cset	w12, hi  // hi = pmore
  60:	orr	w11, w11, w12
  64:	sub	x12, x1, x20
  68:	cmp	w11, #0x0
  6c:	csel	x27, x8, x9, ne  // ne = any
  70:	asr	x8, x12, #3
  74:	mov	x24, x4
  78:	mov	x23, x3
  7c:	mov	x25, x2
  80:	mov	x19, x0
  84:	mov	x21, x1
  88:	mul	x28, x8, x10
  8c:	cbz	x27, a4 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa4>
  90:	add	x8, x27, x27, lsl #2
  94:	lsl	x0, x8, #3
  98:	bl	0 <_Znwm>
  9c:	mov	x22, x0
  a0:	b	a8 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa8>
  a4:	mov	x22, xzr
  a8:	ldr	x24, [x24]
  ac:	ldr	x9, [x25]
  b0:	ldr	x10, [x23]
  b4:	mov	w8, #0x28                  	// #40
  b8:	madd	x8, x28, x8, x22
  bc:	lsr	x11, x24, #61
  c0:	stp	x9, x10, [x8]
  c4:	cbnz	x11, 1e0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1e0>
  c8:	add	x25, x8, #0x10
  cc:	lsl	x23, x24, #2
  d0:	stp	xzr, xzr, [x25]
  d4:	str	xzr, [x25, #16]
  d8:	cbz	x24, e8 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xe8>
  dc:	mov	x0, x23
  e0:	bl	0 <_Znwm>
  e4:	b	ec <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>
  e8:	mov	x0, xzr
  ec:	mov	w8, #0x28                  	// #40
  f0:	str	x0, [x25]
  f4:	madd	x25, x28, x8, x22
  f8:	str	x0, [x25, #24]!
  fc:	add	x28, x0, x24, lsl #2
 100:	str	x28, [x25, #8]
 104:	cbz	x24, 118 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x118>
 108:	mov	w1, wzr
 10c:	mov	x2, x23
 110:	bl	0 <memset>
 114:	mov	x0, x28
 118:	cmp	x20, x21
 11c:	mov	x8, x22
 120:	str	x0, [x25]
 124:	b.eq	160 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x160>  // b.none
 128:	mov	x8, x22
 12c:	mov	x9, x20
 130:	ldr	q0, [x9]
 134:	str	q0, [x8]
 138:	ldr	q0, [x9, #16]
 13c:	str	q0, [x8, #16]
 140:	ldr	x10, [x9, #32]
 144:	str	x10, [x8, #32]
 148:	stp	xzr, xzr, [x9, #16]
 14c:	str	xzr, [x9, #32]
 150:	add	x9, x9, #0x28
 154:	cmp	x9, x21
 158:	add	x8, x8, #0x28
 15c:	b.ne	130 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x130>  // b.any
 160:	cmp	x26, x21
 164:	add	x23, x8, #0x28
 168:	b.eq	19c <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x19c>  // b.none
 16c:	ldr	q0, [x21]
 170:	str	q0, [x23]
 174:	ldr	q0, [x21, #16]
 178:	str	q0, [x23, #16]
 17c:	ldr	x8, [x21, #32]
 180:	str	x8, [x23, #32]
 184:	stp	xzr, xzr, [x21, #16]
 188:	str	xzr, [x21, #32]
 18c:	add	x21, x21, #0x28
 190:	cmp	x21, x26
 194:	add	x23, x23, #0x28
 198:	b.ne	16c <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x16c>  // b.any
 19c:	cbz	x20, 1a8 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1a8>
 1a0:	mov	x0, x20
 1a4:	bl	0 <_ZdlPv>
 1a8:	mov	w8, #0x28                  	// #40
 1ac:	madd	x8, x27, x8, x22
 1b0:	stp	x22, x23, [x19]
 1b4:	str	x8, [x19, #16]
 1b8:	ldp	x20, x19, [sp, #80]
 1bc:	ldp	x22, x21, [sp, #64]
 1c0:	ldp	x24, x23, [sp, #48]
 1c4:	ldp	x26, x25, [sp, #32]
 1c8:	ldp	x28, x27, [sp, #16]
 1cc:	ldp	x29, x30, [sp], #96
 1d0:	ret
 1d4:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 1d8:	add	x0, x0, #0x0
 1dc:	bl	0 <_ZSt20__throw_length_errorPKc>
 1e0:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12UseListOrderESaIS1_EE17_M_realloc_insertIJRPKNS0_5ValueERPKNS0_8FunctionEmEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 1e4:	add	x0, x0, #0x0
 1e8:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_10BasicBlockEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_11InstructionEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag:

0000000000000000 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag>:
   0:	cmp	x0, x1
   4:	b.eq	64 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x64>  // b.none
   8:	subs	x10, x2, x1
   c:	b.eq	60 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x60>  // b.none
  10:	sub	x8, x2, x0
  14:	asr	x8, x8, #4
  18:	sub	x9, x1, x0
  1c:	cmp	x8, x9, asr #3
  20:	b.ne	6c <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x6c>  // b.any
  24:	mov	x8, x1
  28:	ldr	x9, [x8]
  2c:	ldr	x10, [x0]
  30:	str	x9, [x0]
  34:	str	x10, [x8]
  38:	ldr	w9, [x8, #8]
  3c:	ldr	w10, [x0, #8]
  40:	str	w9, [x0, #8]
  44:	add	x0, x0, #0x10
  48:	str	w10, [x8, #8]
  4c:	cmp	x1, x0
  50:	add	x8, x8, #0x10
  54:	b.ne	28 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x28>  // b.any
  58:	mov	x0, x1
  5c:	ret
  60:	mov	x2, x0
  64:	mov	x0, x2
  68:	ret
  6c:	asr	x9, x9, #4
  70:	add	x2, x0, x10
  74:	b	90 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x90>
  78:	add	x9, x0, x8, lsl #4
  7c:	sub	x0, x9, x10, lsl #4
  80:	sdiv	x9, x8, x10
  84:	msub	x9, x9, x10, x8
  88:	mov	x8, x10
  8c:	cbz	x9, 64 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x64>
  90:	sub	x10, x8, x9
  94:	cmp	x9, x10
  98:	b.ge	f4 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0xf4>  // b.tcont
  9c:	cmp	x10, #0x1
  a0:	b.lt	d8 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0xd8>  // b.tstop
  a4:	add	x11, x0, x9, lsl #4
  a8:	ldr	x12, [x11]
  ac:	ldr	x13, [x0]
  b0:	subs	x10, x10, #0x1
  b4:	str	x12, [x0]
  b8:	str	x13, [x11]
  bc:	ldr	w12, [x11, #8]
  c0:	ldr	w13, [x0, #8]
  c4:	str	w12, [x0, #8]
  c8:	str	w13, [x11, #8]
  cc:	add	x0, x0, #0x10
  d0:	add	x11, x11, #0x10
  d4:	b.ne	a8 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0xa8>  // b.any
  d8:	sdiv	x10, x8, x9
  dc:	msub	x8, x10, x9, x8
  e0:	cbz	x8, 64 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x64>
  e4:	sub	x10, x9, x8
  e8:	mov	x8, x9
  ec:	mov	x9, x10
  f0:	b	90 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x90>
  f4:	cmp	x9, #0x1
  f8:	b.lt	78 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x78>  // b.tstop
  fc:	sub	x12, x0, #0x8
 100:	add	x11, x12, x8, lsl #4
 104:	add	x12, x12, x9, lsl #4
 108:	ldur	x13, [x11, #-8]
 10c:	ldur	x14, [x12, #-8]
 110:	sub	x9, x9, #0x1
 114:	stur	x13, [x12, #-8]
 118:	stur	x14, [x11, #-8]
 11c:	ldr	w13, [x11]
 120:	ldr	w14, [x12]
 124:	str	w13, [x12], #-16
 128:	str	w14, [x11], #-16
 12c:	cbnz	x9, 108 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x108>
 130:	b	80 <_ZNSt3_V28__rotateIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS8_SaIS8_EEEEEET_SE_SE_SE_St26random_access_iterator_tag+0x80>

Disassembly of section .text._ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_:

0000000000000000 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_>:
   0:	cmp	x3, x4
   4:	b.le	cc <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xcc>
   8:	cmp	x4, x6
   c:	b.gt	cc <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xcc>
  10:	cbz	x4, 190 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x190>
  14:	sub	x9, x2, x1
  18:	cmp	x9, #0x1
  1c:	mov	x8, x5
  20:	b.lt	58 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x58>  // b.tstop
  24:	lsr	x8, x9, #4
  28:	add	x9, x8, #0x1
  2c:	mov	x8, x5
  30:	mov	x10, x1
  34:	ldr	x11, [x10]
  38:	sub	x9, x9, #0x1
  3c:	cmp	x9, #0x1
  40:	str	x11, [x8]
  44:	ldr	w11, [x10, #8]
  48:	add	x10, x10, #0x10
  4c:	str	w11, [x8, #8]
  50:	add	x8, x8, #0x10
  54:	b.gt	34 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x34>
  58:	sub	x9, x1, x0
  5c:	cmp	x9, #0x1
  60:	b.lt	90 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x90>  // b.tstop
  64:	lsr	x10, x9, #4
  68:	sub	x9, x2, #0x8
  6c:	add	x10, x10, #0x1
  70:	sub	x11, x1, #0x8
  74:	ldur	x12, [x11, #-8]
  78:	sub	x10, x10, #0x1
  7c:	cmp	x10, #0x1
  80:	stur	x12, [x9, #-8]
  84:	ldr	w12, [x11], #-16
  88:	str	w12, [x9], #-16
  8c:	b.gt	74 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x74>
  90:	sub	x8, x8, x5
  94:	cmp	x8, #0x1
  98:	b.lt	190 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x190>  // b.tstop
  9c:	lsr	x8, x8, #4
  a0:	add	x8, x8, #0x1
  a4:	ldr	x9, [x5]
  a8:	sub	x8, x8, #0x1
  ac:	cmp	x8, #0x1
  b0:	str	x9, [x0]
  b4:	ldr	w9, [x5, #8]
  b8:	add	x5, x5, #0x10
  bc:	str	w9, [x0, #8]
  c0:	add	x0, x0, #0x10
  c4:	b.gt	a4 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xa4>
  c8:	b	190 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x190>
  cc:	cmp	x3, x6
  d0:	b.le	d8 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xd8>
  d4:	b	0 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_>
  d8:	cbz	x3, 194 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x194>
  dc:	sub	x9, x1, x0
  e0:	cmp	x9, #0x1
  e4:	mov	x8, x5
  e8:	b.lt	120 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x120>  // b.tstop
  ec:	lsr	x8, x9, #4
  f0:	add	x9, x8, #0x1
  f4:	mov	x8, x5
  f8:	mov	x10, x0
  fc:	ldr	x11, [x10]
 100:	sub	x9, x9, #0x1
 104:	cmp	x9, #0x1
 108:	str	x11, [x8]
 10c:	ldr	w11, [x10, #8]
 110:	add	x10, x10, #0x10
 114:	str	w11, [x8, #8]
 118:	add	x8, x8, #0x10
 11c:	b.gt	fc <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0xfc>
 120:	sub	x9, x2, x1
 124:	cmp	x9, #0x1
 128:	b.lt	158 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x158>  // b.tstop
 12c:	lsr	x9, x9, #4
 130:	add	x9, x9, #0x1
 134:	ldr	x10, [x1]
 138:	sub	x9, x9, #0x1
 13c:	cmp	x9, #0x1
 140:	str	x10, [x0]
 144:	ldr	w10, [x1, #8]
 148:	add	x1, x1, #0x10
 14c:	str	w10, [x0, #8]
 150:	add	x0, x0, #0x10
 154:	b.gt	134 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x134>
 158:	sub	x9, x8, x5
 15c:	cmp	x9, #0x1
 160:	b.lt	194 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x194>  // b.tstop
 164:	lsr	x9, x9, #4
 168:	add	x9, x9, #0x1
 16c:	sub	x8, x8, #0x8
 170:	mov	x0, x2
 174:	ldur	x10, [x8, #-8]
 178:	sub	x9, x9, #0x1
 17c:	cmp	x9, #0x1
 180:	str	x10, [x0, #-16]!
 184:	ldr	w10, [x8], #-16
 188:	str	w10, [x0, #8]
 18c:	b.gt	174 <_ZSt17__rotate_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_lET_SD_SD_SD_T1_SE_T0_SE_+0x174>
 190:	ret
 194:	mov	x0, x2
 198:	ret

Disassembly of section .text._ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_:

0000000000000000 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cmp	x3, #0x1
  1c:	mov	x21, x0
  20:	b.eq	f8 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0xf8>  // b.none
  24:	mov	x24, x5
  28:	mov	x19, x4
  2c:	mov	x25, x3
  30:	mov	x20, x2
  34:	mov	x22, x1
  38:	cmp	x3, x5
  3c:	b.le	9c <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x9c>
  40:	cmp	x25, #0x0
  44:	cinc	x8, x25, lt  // lt = tstop
  48:	asr	x26, x8, #1
  4c:	add	x23, x21, x26, lsl #4
  50:	mov	x0, x21
  54:	mov	x1, x23
  58:	mov	x2, x20
  5c:	mov	x3, x26
  60:	mov	x4, x19
  64:	mov	x5, x24
  68:	bl	0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>
  6c:	cmp	x25, x26
  70:	mov	x21, x0
  74:	b.eq	158 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x158>  // b.none
  78:	sub	x26, x26, x25
  7c:	mov	x25, x23
  80:	mov	x0, x25
  84:	blr	x20
  88:	tbz	w0, #0, 160 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x160>
  8c:	adds	x26, x26, #0x1
  90:	add	x25, x25, #0x10
  94:	b.cc	80 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x80>  // b.lo, b.ul, b.last
  98:	b	184 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x184>
  9c:	ldr	x8, [x21]
  a0:	add	x23, x21, #0x10
  a4:	cmp	x23, x22
  a8:	add	x24, x19, #0x10
  ac:	str	x8, [x19]
  b0:	ldr	w8, [x21, #8]
  b4:	str	w8, [x19, #8]
  b8:	b.ne	134 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x134>  // b.any
  bc:	sub	x8, x24, x19
  c0:	cmp	x8, #0x1
  c4:	b.lt	f8 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0xf8>  // b.tstop
  c8:	lsr	x8, x8, #4
  cc:	add	x8, x8, #0x1
  d0:	mov	x9, x21
  d4:	ldr	x10, [x19]
  d8:	sub	x8, x8, #0x1
  dc:	cmp	x8, #0x1
  e0:	str	x10, [x9]
  e4:	ldr	w10, [x19, #8]
  e8:	add	x19, x19, #0x10
  ec:	str	w10, [x9, #8]
  f0:	add	x9, x9, #0x10
  f4:	b.gt	d4 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0xd4>
  f8:	mov	x0, x21
  fc:	ldp	x20, x19, [sp, #64]
 100:	ldp	x22, x21, [sp, #48]
 104:	ldp	x24, x23, [sp, #32]
 108:	ldp	x26, x25, [sp, #16]
 10c:	ldp	x29, x30, [sp], #80
 110:	ret
 114:	ldr	x8, [x23]
 118:	str	x8, [x24]
 11c:	ldr	w8, [x23, #8]
 120:	str	w8, [x24, #8]
 124:	add	x24, x24, #0x10
 128:	add	x23, x23, #0x10
 12c:	cmp	x22, x23
 130:	b.eq	bc <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0xbc>  // b.none
 134:	mov	x0, x23
 138:	blr	x20
 13c:	tbz	w0, #0, 114 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x114>
 140:	ldr	x8, [x23]
 144:	str	x8, [x21]
 148:	ldr	w8, [x23, #8]
 14c:	str	w8, [x21, #8]
 150:	add	x21, x21, #0x10
 154:	b	128 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x128>
 158:	mov	x25, x23
 15c:	b	184 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x184>
 160:	cbz	x26, 184 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_+0x184>
 164:	neg	x3, x26
 168:	mov	x0, x25
 16c:	mov	x1, x22
 170:	mov	x2, x20
 174:	mov	x4, x19
 178:	mov	x5, x24
 17c:	bl	0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>
 180:	mov	x25, x0
 184:	mov	x0, x21
 188:	mov	x1, x23
 18c:	mov	x2, x25
 190:	ldp	x20, x19, [sp, #64]
 194:	ldp	x22, x21, [sp, #48]
 198:	ldp	x24, x23, [sp, #32]
 19c:	ldp	x26, x25, [sp, #16]
 1a0:	ldp	x29, x30, [sp], #80
 1a4:	b	0 <_ZSt27__stable_partition_adaptiveIN9__gnu_cxx17__normal_iteratorIPSt4pairIPKN4llvm5ValueEjESt6vectorIS7_SaIS7_EEEES8_NS0_5__ops10_Iter_predIPFbRKS7_EEElET_SK_SK_T1_T2_T0_SM_>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_5ValueEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPKNS_6MDNodeEPKNS_9MDOperandEELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x4
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x4
  a8:	cmn	x9, #0x4
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff8    	// #-8
  e0:	cmn	x13, #0x4
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x4
 12c:	cmn	x9, #0x4
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff8    	// #-8
 164:	cmn	x13, #0x4
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E20InsertIntoBucketImplIS4_EEPSB_RKS4_RKT_SF_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffffc    	// #-4
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffffc    	// #-4
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffffc    	// #-4
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffffc    	// #-4
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff8    	// #-8
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	x9, [x1, #8]
  a0:	str	x9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x4
  c4:	cmn	x10, #0x4
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x13c>
  d4:	cmn	x9, #0x4
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x4
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E18moveFromOldBucketsEPSB_SE_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w9, [x0, #24]
  14:	mov	x21, x2
  18:	mov	x22, x1
  1c:	mov	x19, x0
  20:	mov	x20, x8
  24:	cbz	w9, 64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x64>
  28:	ldr	x10, [x22]
  2c:	orr	x8, x10, #0x4
  30:	cmn	x8, #0x4
  34:	b.eq	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x104>  // b.none
  38:	ldr	x8, [x19, #8]
  3c:	ubfx	x11, x10, #4, #28
  40:	eor	w12, w11, w10, lsr #9
  44:	sub	w11, w9, #0x1
  48:	and	w12, w12, w11
  4c:	add	x0, x8, w12, uxtw #4
  50:	ldr	x14, [x0]
  54:	cmp	x14, x10
  58:	b.ne	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0xb8>  // b.any
  5c:	mov	w10, wzr
  60:	b	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x94>
  64:	mov	x3, xzr
  68:	mov	x0, x19
  6c:	mov	x1, x22
  70:	mov	x2, x22
  74:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>
  78:	ldr	x8, [x22]
  7c:	mov	w10, #0x1                   	// #1
  80:	str	x8, [x0]
  84:	ldr	x8, [x21]
  88:	str	x8, [x0, #8]
  8c:	ldr	x8, [x19, #8]
  90:	ldr	w9, [x19, #24]
  94:	add	x8, x8, w9, uxtw #4
  98:	ldr	x9, [x19]
  9c:	stp	x0, x8, [x20, #16]
  a0:	strb	w10, [x20, #32]
  a4:	ldp	x22, x21, [sp, #16]
  a8:	stp	x19, x9, [x20]
  ac:	ldp	x20, x19, [sp, #32]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret
  b8:	mov	x13, xzr
  bc:	mov	w16, #0x1                   	// #1
  c0:	mov	x15, #0xfffffffffffffff8    	// #-8
  c4:	cmn	x14, #0x4
  c8:	b.eq	f8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0xf8>  // b.none
  cc:	cmp	x13, #0x0
  d0:	add	w12, w12, w16
  d4:	ccmp	x14, x15, #0x0, eq  // eq = none
  d8:	and	w12, w12, w11
  dc:	csel	x13, x13, x0, ne  // ne = any
  e0:	add	x0, x8, w12, uxtw #4
  e4:	ldr	x14, [x0]
  e8:	add	w16, w16, #0x1
  ec:	cmp	x14, x10
  f0:	b.eq	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x5c>  // b.none
  f4:	b	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0xc4>
  f8:	cmp	x13, #0x0
  fc:	csel	x3, x0, x13, eq  // eq = none
 100:	b	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_+0x68>
 104:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>
 108:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>
 10c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPKNS_8MetadataENS_15ValueEnumerator7MDIndexENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEEES4_S6_S8_SB_E11try_emplaceIJS6_EEESt4pairINS_16DenseMapIteratorIS4_S6_S8_SB_Lb0EEEbEOS4_DpOT_>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x252                 	// #594
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #8]
  10:	mov	x19, x1
  14:	tbnz	w8, #0, 28 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj+0x28>
  18:	ldr	w8, [x0, #24]
  1c:	cbz	w8, 6c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj+0x6c>
  20:	ldr	x9, [x0, #16]
  24:	b	30 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj+0x30>
  28:	add	x9, x0, #0x10
  2c:	mov	w8, #0x1                   	// #1
  30:	ldr	w10, [x19]
  34:	cmn	w10, #0x2
  38:	b.cs	e0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj+0xe0>  // b.hs, b.nlast
  3c:	mov	w11, #0x25                  	// #37
  40:	mul	w12, w10, w11
  44:	sub	w11, w8, #0x1
  48:	and	w12, w12, w11
  4c:	add	x8, x9, w12, uxtw #4
  50:	ldr	w14, [x8]
  54:	cmp	w10, w14
  58:	b.ne	94 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj+0x94>  // b.any
  5c:	ldr	x19, [sp, #16]
  60:	mov	x0, x8
  64:	ldp	x29, x30, [sp], #32
  68:	ret
  6c:	mov	x3, xzr
  70:	mov	x1, x19
  74:	mov	x2, x19
  78:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj>
  7c:	ldr	w9, [x19]
  80:	mov	x8, x0
  84:	str	wzr, [x0, #12]
  88:	stur	xzr, [x0, #4]
  8c:	str	w9, [x0]
  90:	b	5c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj+0x5c>
  94:	mov	x13, xzr
  98:	mov	w16, #0x1                   	// #1
  9c:	mov	w15, #0xfffffffe            	// #-2
  a0:	cmn	w14, #0x1
  a4:	b.eq	d4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj+0xd4>  // b.none
  a8:	cmp	x13, #0x0
  ac:	add	w12, w12, w16
  b0:	ccmp	w14, w15, #0x0, eq  // eq = none
  b4:	and	w12, w12, w11
  b8:	csel	x13, x13, x8, ne  // ne = any
  bc:	add	x8, x9, w12, uxtw #4
  c0:	ldr	w14, [x8]
  c4:	add	w16, w16, #0x1
  c8:	cmp	w10, w14
  cc:	b.eq	5c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj+0x5c>  // b.none
  d0:	b	a0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj+0xa0>
  d4:	cmp	x13, #0x0
  d8:	csel	x3, x8, x13, eq  // eq = none
  dc:	b	70 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj+0x70>
  e0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj>
  e4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj>
  e8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E16FindAndConstructERKj>
  ec:	add	x0, x0, #0x0
  f0:	add	x1, x1, #0x0
  f4:	add	x3, x3, #0x0
  f8:	mov	w2, #0x252                 	// #594
  fc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0]
  10:	ldr	w8, [x0, #8]
  14:	mov	x20, x2
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x1
  20:	str	x9, [x0]
  24:	lsr	w9, w8, #1
  28:	tbnz	w8, #0, 34 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x34>
  2c:	ldr	w1, [x19, #24]
  30:	b	38 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x38>
  34:	mov	w1, #0x1                   	// #1
  38:	lsl	w10, w9, #2
  3c:	add	w10, w10, #0x4
  40:	add	w11, w1, w1, lsl #1
  44:	cmp	w10, w11
  48:	b.cs	a4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0xa4>  // b.hs, b.nlast
  4c:	ldr	w10, [x19, #12]
  50:	mvn	w9, w9
  54:	add	w9, w1, w9
  58:	sub	w9, w9, w10
  5c:	cmp	w9, w1, lsr #3
  60:	b.ls	c8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0xc8>  // b.plast
  64:	cbz	x3, 1e4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x1e4>
  68:	lsr	w9, w8, #1
  6c:	adds	w9, w9, #0x1
  70:	b.mi	204 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x204>  // b.first
  74:	bfi	w8, w9, #1, #31
  78:	str	w8, [x19, #8]
  7c:	ldr	w8, [x3]
  80:	cmn	w8, #0x1
  84:	b.eq	94 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x94>  // b.none
  88:	ldr	w8, [x19, #12]
  8c:	sub	w8, w8, #0x1
  90:	str	w8, [x19, #12]
  94:	ldp	x20, x19, [sp, #16]
  98:	mov	x0, x3
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret
  a4:	lsl	w1, w1, #1
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
  b0:	ldr	w8, [x19, #8]
  b4:	tbnz	w8, #0, e8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0xe8>
  b8:	ldr	w11, [x19, #24]
  bc:	cbz	w11, 1d0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x1d0>
  c0:	ldr	x9, [x19, #16]
  c4:	b	f0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0xf0>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
  d0:	ldr	w8, [x19, #8]
  d4:	tbnz	w8, #0, 15c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x15c>
  d8:	ldr	w11, [x19, #24]
  dc:	cbz	w11, 1e4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x1e4>
  e0:	ldr	x9, [x19, #16]
  e4:	b	164 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x164>
  e8:	add	x9, x19, #0x10
  ec:	mov	w11, #0x1                   	// #1
  f0:	ldr	w10, [x20]
  f4:	cmn	w10, #0x2
  f8:	b.cs	224 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x224>  // b.hs, b.nlast
  fc:	mov	w12, #0x25                  	// #37
 100:	mul	w12, w10, w12
 104:	sub	w11, w11, #0x1
 108:	and	w12, w12, w11
 10c:	add	x3, x9, w12, uxtw #4
 110:	ldr	w14, [x3]
 114:	cmp	w10, w14
 118:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>  // b.none
 11c:	mov	x13, xzr
 120:	mov	w16, #0x1                   	// #1
 124:	mov	w15, #0xfffffffe            	// #-2
 128:	cmn	w14, #0x1
 12c:	b.eq	1d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x1d8>  // b.none
 130:	cmp	x13, #0x0
 134:	add	w12, w12, w16
 138:	ccmp	w14, w15, #0x0, eq  // eq = none
 13c:	and	w12, w12, w11
 140:	csel	x13, x13, x3, ne  // ne = any
 144:	add	x3, x9, w12, uxtw #4
 148:	ldr	w14, [x3]
 14c:	add	w16, w16, #0x1
 150:	cmp	w10, w14
 154:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>  // b.none
 158:	b	128 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x128>
 15c:	add	x9, x19, #0x10
 160:	mov	w11, #0x1                   	// #1
 164:	ldr	w10, [x20]
 168:	cmn	w10, #0x2
 16c:	b.cs	224 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x224>  // b.hs, b.nlast
 170:	mov	w12, #0x25                  	// #37
 174:	mul	w12, w10, w12
 178:	sub	w11, w11, #0x1
 17c:	and	w12, w12, w11
 180:	add	x3, x9, w12, uxtw #4
 184:	ldr	w14, [x3]
 188:	cmp	w10, w14
 18c:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>  // b.none
 190:	mov	x13, xzr
 194:	mov	w16, #0x1                   	// #1
 198:	mov	w15, #0xfffffffe            	// #-2
 19c:	cmn	w14, #0x1
 1a0:	b.eq	1d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x1d8>  // b.none
 1a4:	cmp	x13, #0x0
 1a8:	add	w12, w12, w16
 1ac:	ccmp	w14, w15, #0x0, eq  // eq = none
 1b0:	and	w12, w12, w11
 1b4:	csel	x13, x13, x3, ne  // ne = any
 1b8:	add	x3, x9, w12, uxtw #4
 1bc:	ldr	w14, [x3]
 1c0:	add	w16, w16, #0x1
 1c4:	cmp	w10, w14
 1c8:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>  // b.none
 1cc:	b	19c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x19c>
 1d0:	mov	x3, xzr
 1d4:	b	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>
 1d8:	cmp	x13, #0x0
 1dc:	csel	x3, x3, x13, eq  // eq = none
 1e0:	b	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_+0x64>
 1e4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 1e8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 1ec:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 1f0:	add	x0, x0, #0x0
 1f4:	add	x1, x1, #0x0
 1f8:	add	x3, x3, #0x0
 1fc:	mov	w2, #0x22f                 	// #559
 200:	bl	0 <__assert_fail>
 204:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 208:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 20c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 210:	add	x0, x0, #0x0
 214:	add	x1, x1, #0x0
 218:	add	x3, x3, #0x0
 21c:	mov	w2, #0x441                 	// #1089
 220:	bl	0 <__assert_fail>
 224:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 228:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 22c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E20InsertIntoBucketImplIjEEPS8_RKjRKT_SC_>
 230:	add	x0, x0, #0x0
 234:	add	x1, x1, #0x0
 238:	add	x3, x3, #0x0
 23c:	mov	w2, #0x252                 	// #594
 240:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	cmp	w1, #0x2
  18:	mov	x19, x0
  1c:	b.cc	50 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0x50>  // b.lo, b.ul, b.last
  20:	sub	w8, w1, #0x1
  24:	orr	x8, x8, x8, lsr #1
  28:	orr	x8, x8, x8, lsr #2
  2c:	orr	x8, x8, x8, lsr #4
  30:	orr	x8, x8, x8, lsr #8
  34:	orr	x8, x8, x8, lsr #16
  38:	lsr	x9, x8, #32
  3c:	orr	w8, w9, w8
  40:	add	w9, w8, #0x1
  44:	cmp	w9, #0x40
  48:	mov	w9, #0x40                  	// #64
  4c:	csinc	w1, w9, w8, ls  // ls = plast
  50:	ldr	w8, [x19, #8]
  54:	tbnz	w8, #0, 74 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0x74>
  58:	ldr	x20, [x19, #16]
  5c:	ldr	w21, [x19, #24]
  60:	cmp	w1, #0x1
  64:	b.hi	e0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0xe0>  // b.pmore
  68:	orr	w8, w8, #0x1
  6c:	str	w8, [x19, #8]
  70:	b	f0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0xf0>
  74:	ldr	w9, [x19, #16]
  78:	mov	x20, sp
  7c:	cmn	w9, #0x3
  80:	b.hi	9c <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0x9c>  // b.pmore
  84:	str	w9, [sp]
  88:	ldr	w9, [x19, #28]
  8c:	ldur	x10, [x19, #20]
  90:	add	x20, x20, #0x10
  94:	str	w9, [sp, #12]
  98:	stur	x10, [sp, #4]
  9c:	cmp	w1, #0x2
  a0:	b.cc	bc <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj+0xbc>  // b.lo, b.ul, b.last
  a4:	mov	w21, w1
  a8:	and	w8, w8, #0xfffffffe
  ac:	lsl	x0, x21, #4
  b0:	str	w8, [x19, #8]
  b4:	bl	0 <_Znwm>
  b8:	stp	x0, x21, [x19, #16]
  bc:	mov	x1, sp
  c0:	mov	x0, x19
  c4:	mov	x2, x20
  c8:	bl	0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj>
  cc:	ldp	x20, x19, [sp, #48]
  d0:	ldp	x22, x21, [sp, #32]
  d4:	ldp	x29, x30, [sp, #16]
  d8:	add	sp, sp, #0x40
  dc:	ret
  e0:	mov	w22, w1
  e4:	lsl	x0, x22, #4
  e8:	bl	0 <_Znwm>
  ec:	stp	x0, x22, [x19, #16]
  f0:	add	x2, x20, x21, lsl #4
  f4:	mov	x0, x19
  f8:	mov	x1, x20
  fc:	bl	0 <_ZN4llvm13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS2_EEE4growEj>
 100:	mov	x0, x20
 104:	ldp	x20, x19, [sp, #48]
 108:	ldp	x22, x21, [sp, #32]
 10c:	ldp	x29, x30, [sp, #16]
 110:	add	sp, sp, #0x40
 114:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	and	w9, w8, #0x1
  10:	stp	w9, wzr, [x0, #8]
  14:	tbnz	w8, #0, 24 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x24>
  18:	ldr	w8, [x0, #24]
  1c:	sub	w10, w8, #0x1
  20:	b	2c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x2c>
  24:	mov	w10, wzr
  28:	mov	w8, #0x1                   	// #1
  2c:	tst	w10, w8
  30:	b.ne	1d4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x1d4>  // b.any
  34:	add	x8, x0, #0x10
  38:	cbnz	w9, 50 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x50>
  3c:	ldr	w9, [x0, #24]
  40:	cbz	w9, a8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xa8>
  44:	ldr	x10, [x0, #16]
  48:	add	x9, x10, x9, lsl #4
  4c:	b	58 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x58>
  50:	add	x9, x0, #0x20
  54:	mov	x10, x8
  58:	sub	x11, x9, x10
  5c:	sub	x11, x11, #0x10
  60:	lsr	x11, x11, #4
  64:	cbz	x11, 98 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x98>
  68:	add	x11, x11, #0x1
  6c:	and	x12, x11, #0x1ffffffffffffffe
  70:	add	x13, x10, #0x10
  74:	add	x10, x10, x12, lsl #4
  78:	mov	w14, #0xffffffff            	// #-1
  7c:	mov	x15, x12
  80:	stur	w14, [x13, #-16]
  84:	str	w14, [x13], #32
  88:	subs	x15, x15, #0x2
  8c:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>  // b.any
  90:	cmp	x11, x12
  94:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xa8>  // b.none
  98:	mov	w11, #0xffffffff            	// #-1
  9c:	str	w11, [x10], #16
  a0:	cmp	x9, x10
  a4:	b.ne	9c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>  // b.any
  a8:	cmp	x1, x2
  ac:	b.eq	18c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x18c>  // b.none
  b0:	mov	w9, #0x25                  	// #37
  b4:	mov	w10, #0xfffffffe            	// #-2
  b8:	b	c8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xc8>
  bc:	add	x1, x1, #0x10
  c0:	cmp	x1, x2
  c4:	b.eq	18c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x18c>  // b.none
  c8:	ldr	w11, [x1]
  cc:	cmn	w11, #0x3
  d0:	b.hi	bc <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xbc>  // b.pmore
  d4:	ldrb	w12, [x0, #8]
  d8:	tbnz	w12, #0, ec <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xec>
  dc:	ldr	w13, [x0, #24]
  e0:	cbz	w13, 184 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x184>
  e4:	ldr	x12, [x0, #16]
  e8:	b	f4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xf4>
  ec:	mov	w13, #0x1                   	// #1
  f0:	mov	x12, x8
  f4:	mul	w14, w11, w9
  f8:	sub	w13, w13, #0x1
  fc:	and	w15, w13, w14
 100:	add	x14, x12, w15, uxtw #4
 104:	ldr	w17, [x14]
 108:	cmp	w11, w17
 10c:	b.eq	194 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x194>  // b.none
 110:	mov	x16, xzr
 114:	mov	w18, #0x1                   	// #1
 118:	cmn	w17, #0x1
 11c:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x14c>  // b.none
 120:	cmp	x16, #0x0
 124:	add	w15, w15, w18
 128:	ccmp	w17, w10, #0x0, eq  // eq = none
 12c:	and	w15, w15, w13
 130:	csel	x16, x16, x14, ne  // ne = any
 134:	add	x14, x12, w15, uxtw #4
 138:	ldr	w17, [x14]
 13c:	add	w18, w18, #0x1
 140:	cmp	w11, w17
 144:	b.ne	118 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x118>  // b.any
 148:	b	194 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x194>
 14c:	cmp	x16, #0x0
 150:	csel	x12, x14, x16, eq  // eq = none
 154:	str	w11, [x12]
 158:	ldr	w11, [x1, #12]
 15c:	ldur	x13, [x1, #4]
 160:	str	w11, [x12, #12]
 164:	stur	x13, [x12, #4]
 168:	ldr	w11, [x0, #8]
 16c:	lsr	w12, w11, #1
 170:	adds	w12, w12, #0x1
 174:	b.mi	1b4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x1b4>  // b.first
 178:	bfi	w11, w12, #1, #31
 17c:	str	w11, [x0, #8]
 180:	b	bc <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xbc>
 184:	mov	x12, xzr
 188:	b	154 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x154>
 18c:	ldp	x29, x30, [sp], #16
 190:	ret
 194:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 198:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 19c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1a0:	add	x0, x0, #0x0
 1a4:	add	x1, x1, #0x0
 1a8:	add	x3, x3, #0x0
 1ac:	mov	w2, #0x17a                 	// #378
 1b0:	bl	0 <__assert_fail>
 1b4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1b8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1bc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1c0:	add	x0, x0, #0x0
 1c4:	add	x1, x1, #0x0
 1c8:	add	x3, x3, #0x0
 1cc:	mov	w2, #0x441                 	// #1089
 1d0:	bl	0 <__assert_fail>
 1d4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1d8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1dc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIjNS_15ValueEnumerator7MDRangeELj1ENS_12DenseMapInfoIjEENS_6detail12DenseMapPairIjS3_EEEEjS3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 1e0:	add	x0, x0, #0x0
 1e4:	add	x1, x1, #0x0
 1e8:	add	x3, x3, #0x0
 1ec:	mov	w2, #0x15c                 	// #348
 1f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	cmp	x2, x3
  20:	b.eq	198 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x198>  // b.none
  24:	ldp	x24, x8, [x0, #8]
  28:	sub	x22, x3, x2
  2c:	asr	x26, x22, #3
  30:	mov	x21, x2
  34:	sub	x8, x8, x24
  38:	mov	x19, x1
  3c:	mov	x20, x0
  40:	cmp	x26, x8, asr #3
  44:	b.ls	a4 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xa4>  // b.plast
  48:	ldr	x23, [x20]
  4c:	sub	x8, x24, x23
  50:	asr	x9, x8, #3
  54:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  58:	sub	x10, x8, x9
  5c:	cmp	x10, x26
  60:	b.cc	200 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x200>  // b.lo, b.ul, b.last
  64:	cmp	x9, x26
  68:	csel	x10, x26, x9, cc  // cc = lo, ul, last
  6c:	adds	x9, x10, x9
  70:	lsr	x11, x9, #60
  74:	cset	w10, cs  // cs = hs, nlast
  78:	cmp	x11, #0x0
  7c:	cset	w11, ne  // ne = any
  80:	orr	w10, w10, w11
  84:	cmp	w10, #0x0
  88:	csel	x27, x8, x9, ne  // ne = any
  8c:	cbz	x27, 128 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x128>
  90:	lsl	x0, x27, #3
  94:	bl	0 <_Znwm>
  98:	ldr	x23, [x20]
  9c:	mov	x24, x0
  a0:	b	12c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x12c>
  a4:	sub	x23, x24, x19
  a8:	asr	x25, x23, #3
  ac:	subs	x27, x26, x25
  b0:	b.cs	d4 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xd4>  // b.hs, b.nlast
  b4:	sub	x23, x24, x26, lsl #3
  b8:	cbz	x22, 1b4 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1b4>
  bc:	mov	x0, x24
  c0:	mov	x1, x23
  c4:	mov	x2, x22
  c8:	bl	0 <memmove>
  cc:	ldr	x8, [x20, #8]
  d0:	b	1b8 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1b8>
  d4:	add	x22, x21, x25, lsl #3
  d8:	subs	x2, x3, x22
  dc:	b.eq	f0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0xf0>  // b.none
  e0:	mov	x0, x24
  e4:	mov	x1, x22
  e8:	bl	0 <memmove>
  ec:	ldr	x24, [x20, #8]
  f0:	add	x0, x24, x27, lsl #3
  f4:	str	x0, [x20, #8]
  f8:	cbz	x23, 10c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x10c>
  fc:	mov	x1, x19
 100:	mov	x2, x23
 104:	bl	0 <memmove>
 108:	ldr	x0, [x20, #8]
 10c:	add	x8, x0, x25, lsl #3
 110:	subs	x2, x22, x21
 114:	str	x8, [x20, #8]
 118:	b.eq	198 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x198>  // b.none
 11c:	mov	x0, x19
 120:	mov	x1, x21
 124:	b	1e4 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1e4>
 128:	mov	x24, xzr
 12c:	subs	x2, x19, x23
 130:	asr	x25, x2, #3
 134:	b.eq	144 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x144>  // b.none
 138:	mov	x0, x24
 13c:	mov	x1, x23
 140:	bl	0 <memmove>
 144:	add	x25, x24, x25, lsl #3
 148:	cbz	x22, 15c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x15c>
 14c:	mov	x0, x25
 150:	mov	x1, x21
 154:	mov	x2, x22
 158:	bl	0 <memmove>
 15c:	ldr	x8, [x20, #8]
 160:	add	x21, x25, x26, lsl #3
 164:	subs	x2, x8, x19
 168:	asr	x22, x2, #3
 16c:	b.eq	17c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x17c>  // b.none
 170:	mov	x0, x21
 174:	mov	x1, x19
 178:	bl	0 <memmove>
 17c:	add	x19, x21, x22, lsl #3
 180:	cbz	x23, 18c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x18c>
 184:	mov	x0, x23
 188:	bl	0 <_ZdlPv>
 18c:	add	x8, x24, x27, lsl #3
 190:	stp	x24, x19, [x20]
 194:	str	x8, [x20, #16]
 198:	ldp	x20, x19, [sp, #80]
 19c:	ldp	x22, x21, [sp, #64]
 1a0:	ldp	x24, x23, [sp, #48]
 1a4:	ldp	x26, x25, [sp, #32]
 1a8:	ldr	x27, [sp, #16]
 1ac:	ldp	x29, x30, [sp], #96
 1b0:	ret
 1b4:	mov	x8, x24
 1b8:	add	x8, x8, x26, lsl #3
 1bc:	subs	x2, x23, x19
 1c0:	str	x8, [x20, #8]
 1c4:	b.eq	1d4 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x1d4>  // b.none
 1c8:	sub	x0, x24, x2
 1cc:	mov	x1, x19
 1d0:	bl	0 <memmove>
 1d4:	cbz	x22, 198 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag+0x198>
 1d8:	mov	x0, x19
 1dc:	mov	x1, x21
 1e0:	mov	x2, x22
 1e4:	ldp	x20, x19, [sp, #80]
 1e8:	ldp	x22, x21, [sp, #64]
 1ec:	ldp	x24, x23, [sp, #48]
 1f0:	ldp	x26, x25, [sp, #32]
 1f4:	ldr	x27, [sp, #16]
 1f8:	ldp	x29, x30, [sp], #96
 1fc:	b	0 <memmove>
 200:	adrp	x0, 0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPS3_S5_EEEEvSA_T_SB_St20forward_iterator_tag>
 204:	add	x0, x0, #0x0
 208:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_:

0000000000000000 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #16]
  18:	mov	x22, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x8, 6c <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x6c>
  28:	ldr	x9, [x22]
  2c:	mov	x21, x20
  30:	ldr	x10, [x8, #32]
  34:	add	x11, x8, #0x18
  38:	add	x12, x8, #0x10
  3c:	cmp	x10, x9
  40:	csel	x21, x21, x8, cc  // cc = lo, ul, last
  44:	csel	x8, x11, x12, cc  // cc = lo, ul, last
  48:	ldr	x8, [x8]
  4c:	cbnz	x8, 30 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x30>
  50:	cmp	x21, x20
  54:	b.eq	70 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x70>  // b.none
  58:	ldr	x8, [x22]
  5c:	ldr	x9, [x21, #32]
  60:	cmp	x8, x9
  64:	b.cc	70 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0x70>  // b.lo, b.ul, b.last
  68:	b	f0 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0xf0>
  6c:	mov	x21, x20
  70:	mov	w0, #0x30                  	// #48
  74:	bl	0 <_Znwm>
  78:	ldr	x8, [x22]
  7c:	mov	x23, x0
  80:	mov	x22, x0
  84:	mov	x1, x21
  88:	str	x8, [x23, #32]!
  8c:	str	wzr, [x0, #40]
  90:	mov	x0, x19
  94:	mov	x2, x23
  98:	bl	0 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_>
  9c:	mov	x21, x0
  a0:	cbz	x1, e8 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0xe8>
  a4:	mov	x2, x1
  a8:	mov	w0, #0x1                   	// #1
  ac:	cbnz	x21, c8 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0xc8>
  b0:	cmp	x20, x2
  b4:	b.eq	c8 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0xc8>  // b.none
  b8:	ldr	x8, [x23]
  bc:	ldr	x9, [x2, #32]
  c0:	cmp	x8, x9
  c4:	cset	w0, cc  // cc = lo, ul, last
  c8:	mov	x1, x22
  cc:	mov	x3, x20
  d0:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  d4:	ldr	x8, [x19, #40]
  d8:	mov	x21, x22
  dc:	add	x8, x8, #0x1
  e0:	str	x8, [x19, #40]
  e4:	b	f0 <_ZNSt3mapIPKN4llvm6ComdatEjSt4lessIS3_ESaISt4pairIKS3_jEEEixERS7_+0xf0>
  e8:	mov	x0, x22
  ec:	bl	0 <_ZdlPv>
  f0:	add	x0, x21, #0x28
  f4:	ldp	x20, x19, [sp, #48]
  f8:	ldp	x22, x21, [sp, #32]
  fc:	ldr	x23, [sp, #16]
 100:	ldp	x29, x30, [sp], #64
 104:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_:

0000000000000000 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x74>  // b.none
  2c:	ldr	x22, [x22]
  30:	ldr	x8, [x20, #32]
  34:	cmp	x22, x8
  38:	b.cs	d0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0xd0>  // b.hs, b.nlast
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	118 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x118>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldr	x8, [x0, #32]
  54:	cmp	x8, x22
  58:	b.cs	124 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x124>  // b.hs, b.nlast
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	200 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x200>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldr	x9, [x22]
  84:	ldr	x8, [x19, #32]
  88:	cmp	x8, x9
  8c:	b.cc	1d0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1d0>  // b.lo, b.ul, b.last
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 164 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x164>
  98:	ldr	x8, [x22]
  9c:	ldr	x10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	x8, x10
  b0:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x9c>
  bc:	cmp	x8, x10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.cc	168 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x168>  // b.lo, b.ul, b.last
  cc:	b	180 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x180>
  d0:	cmp	x8, x22
  d4:	b.cs	110 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x110>  // b.hs, b.nlast
  d8:	ldr	x19, [x21, #32]
  dc:	cmp	x19, x20
  e0:	b.eq	1d0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1d0>  // b.none
  e4:	mov	x0, x20
  e8:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  ec:	ldr	x8, [x0, #32]
  f0:	cmp	x22, x8
  f4:	b.cs	18c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x18c>  // b.hs, b.nlast
  f8:	ldr	x8, [x20, #24]
  fc:	cmp	x8, #0x0
 100:	csel	x8, xzr, x0, eq  // eq = none
 104:	csel	x19, x20, x0, eq  // eq = none
 108:	mov	x20, x8
 10c:	b	200 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x200>
 110:	mov	x19, xzr
 114:	b	200 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x200>
 118:	mov	x20, x24
 11c:	mov	x19, x24
 120:	b	200 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x200>
 124:	ldr	x9, [x21, #16]
 128:	cbz	x9, 1c4 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1c4>
 12c:	ldr	x8, [x9, #32]
 130:	mov	x19, x9
 134:	add	x9, x9, #0x10
 138:	add	x10, x19, #0x18
 13c:	cmp	x22, x8
 140:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 144:	ldr	x9, [x9]
 148:	cbnz	x9, 12c <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x12c>
 14c:	cmp	x22, x8
 150:	mov	x0, x19
 154:	b.cs	1f0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1f0>  // b.hs, b.nlast
 158:	cmp	x24, x19
 15c:	b.ne	1e8 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1e8>  // b.any
 160:	b	1d0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1d0>
 164:	mov	x19, x23
 168:	ldr	x8, [x21, #24]
 16c:	cmp	x8, x20
 170:	b.eq	1d0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1d0>  // b.none
 174:	mov	x0, x20
 178:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 17c:	ldr	x8, [x22]
 180:	ldr	x9, [x0, #32]
 184:	cmp	x9, x8
 188:	b	1f8 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1f8>
 18c:	ldr	x9, [x21, #16]
 190:	cbz	x9, 1d8 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1d8>
 194:	ldr	x8, [x9, #32]
 198:	mov	x19, x9
 19c:	add	x9, x9, #0x10
 1a0:	add	x10, x19, #0x18
 1a4:	cmp	x22, x8
 1a8:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 1ac:	ldr	x9, [x9]
 1b0:	cbnz	x9, 194 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x194>
 1b4:	cmp	x22, x8
 1b8:	mov	x0, x19
 1bc:	b.cc	1dc <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1dc>  // b.lo, b.ul, b.last
 1c0:	b	1f0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1f0>
 1c4:	mov	x19, x23
 1c8:	cmp	x24, x19
 1cc:	b.ne	1e8 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1e8>  // b.any
 1d0:	mov	x20, xzr
 1d4:	b	200 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x200>
 1d8:	mov	x19, x23
 1dc:	ldr	x8, [x21, #24]
 1e0:	cmp	x8, x19
 1e4:	b.eq	1d0 <_ZNSt8_Rb_treeIPKN4llvm6ComdatESt4pairIKS3_jESt10_Select1stIS6_ESt4lessIS3_ESaIS6_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS6_ERS5_+0x1d0>  // b.none
 1e8:	mov	x0, x19
 1ec:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1f0:	ldr	x8, [x0, #32]
 1f4:	cmp	x8, x22
 1f8:	csel	x20, xzr, x0, cc  // cc = lo, ul, last
 1fc:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
 200:	mov	x0, x20
 204:	mov	x1, x19
 208:	ldp	x20, x19, [sp, #48]
 20c:	ldp	x22, x21, [sp, #32]
 210:	ldp	x24, x23, [sp, #16]
 214:	ldp	x29, x30, [sp], #64
 218:	ret

Disassembly of section .text._ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	108 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x108>  // b.none
  2c:	asr	x9, x8, #4
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #59
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #4
  70:	cbz	x25, 84 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x84>
  74:	lsl	x0, x25, #4
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	q0, [x23]
  8c:	cmp	x20, x21
  90:	mov	x8, x22
  94:	str	q0, [x22, x26, lsl #4]
  98:	b.eq	b8 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xb8>  // b.none
  9c:	mov	x8, x22
  a0:	mov	x9, x20
  a4:	ldr	q0, [x9], #16
  a8:	cmp	x21, x9
  ac:	str	q0, [x8]
  b0:	add	x8, x8, #0x10
  b4:	b.ne	a4 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa4>  // b.any
  b8:	cmp	x24, x21
  bc:	add	x23, x8, #0x10
  c0:	b.eq	d8 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd8>  // b.none
  c4:	ldr	q0, [x21], #16
  c8:	cmp	x24, x21
  cc:	str	q0, [x23]
  d0:	add	x23, x23, #0x10
  d4:	b.ne	c4 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc4>  // b.any
  d8:	cbz	x20, e4 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>
  dc:	mov	x0, x20
  e0:	bl	0 <_ZdlPv>
  e4:	add	x8, x22, x25, lsl #4
  e8:	stp	x22, x23, [x19]
  ec:	str	x8, [x19, #16]
  f0:	ldp	x20, x19, [sp, #64]
  f4:	ldp	x22, x21, [sp, #48]
  f8:	ldp	x24, x23, [sp, #32]
  fc:	ldp	x26, x25, [sp, #16]
 100:	ldp	x29, x30, [sp], #80
 104:	ret
 108:	adrp	x0, 0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffff8    	// #-8
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff0    	// #-16
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x8
  c4:	cmn	x10, #0x8
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x13c>
  d4:	cmn	x9, #0x8
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w12, w11
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x8
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4TypeEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEEES3_jS5_S8_E18moveFromOldBucketsEPS8_SB_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x4
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x4
  a8:	cmn	x9, #0x4
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff8    	// #-8
  e0:	cmn	x13, #0x4
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x4
 12c:	cmn	x9, #0x4
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff8    	// #-8
 164:	cmn	x13, #0x4
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E20InsertIntoBucketImplIS2_EEPS7_RKS2_RKT_SB_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffffc    	// #-4
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffffc    	// #-4
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS1_EENS_6detail12DenseMapPairIS1_jEEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	18c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x18c>  // b.any
  1c:	cbz	w8, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x80>
  20:	ldr	x9, [x0, #8]
  24:	lsl	x10, x8, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x9, #0x10
  40:	add	x10, x9, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffffc    	// #-4
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x80>
  68:	mov	x10, x9
  6c:	add	x8, x9, x8, lsl #4
  70:	mov	x9, #0xfffffffffffffffc    	// #-4
  74:	str	x9, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x144>  // b.none
  88:	mov	x8, #0xfffffffffffffff8    	// #-8
  8c:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0xbc>
  90:	cmp	x14, #0x0
  94:	csel	x10, x12, x14, eq  // eq = none
  98:	str	x9, [x10]
  9c:	ldr	w9, [x1, #8]
  a0:	str	w9, [x10, #8]
  a4:	ldr	w9, [x0, #16]
  a8:	add	w9, w9, #0x1
  ac:	str	w9, [x0, #16]
  b0:	add	x1, x1, #0x10
  b4:	cmp	x1, x2
  b8:	b.eq	144 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x144>  // b.none
  bc:	ldr	x9, [x1]
  c0:	orr	x10, x9, #0x4
  c4:	cmn	x10, #0x4
  c8:	b.eq	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0xb0>  // b.none
  cc:	ldr	w11, [x0, #24]
  d0:	cbz	w11, 13c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x13c>
  d4:	cmn	x9, #0x4
  d8:	b.eq	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x16c>  // b.none
  dc:	ldr	x10, [x0, #8]
  e0:	ubfx	x12, x9, #4, #28
  e4:	eor	w12, w12, w9, lsr #9
  e8:	sub	w11, w11, #0x1
  ec:	and	w13, w11, w12
  f0:	add	x12, x10, w13, uxtw #4
  f4:	ldr	x15, [x12]
  f8:	cmp	x15, x9
  fc:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x14c>  // b.none
 100:	mov	x14, xzr
 104:	mov	w16, #0x1                   	// #1
 108:	cmn	x15, #0x4
 10c:	b.eq	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x90>  // b.none
 110:	cmp	x14, #0x0
 114:	add	w13, w13, w16
 118:	ccmp	x15, x8, #0x0, eq  // eq = none
 11c:	and	w13, w13, w11
 120:	csel	x14, x14, x12, ne  // ne = any
 124:	add	x12, x10, w13, uxtw #4
 128:	ldr	x15, [x12]
 12c:	add	w16, w16, #0x1
 130:	cmp	x15, x9
 134:	b.ne	108 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x108>  // b.any
 138:	b	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x14c>
 13c:	mov	x10, xzr
 140:	b	98 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_+0x98>
 144:	ldp	x29, x30, [sp], #16
 148:	ret
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x252                 	// #594
 188:	bl	0 <__assert_fail>
 18c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 190:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 194:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_13AttributeListEjNS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_jEEEES2_jS4_S7_E18moveFromOldBucketsEPS7_SA_>
 198:	add	x0, x0, #0x0
 19c:	add	x1, x1, #0x0
 1a0:	add	x3, x3, #0x0
 1a4:	mov	w2, #0x15c                 	// #348
 1a8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x24, [x0]
  20:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  24:	sub	x8, x24, x20
  28:	cmp	x8, x9
  2c:	b.eq	200 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x200>  // b.none
  30:	asr	x9, x8, #3
  34:	cmp	x8, #0x0
  38:	csinc	x10, x9, xzr, ne  // ne = any
  3c:	adds	x9, x10, x9
  40:	lsr	x11, x9, #60
  44:	cset	w10, cs  // cs = hs, nlast
  48:	cmp	x11, #0x0
  4c:	cset	w11, ne  // ne = any
  50:	orr	w10, w10, w11
  54:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  58:	cmp	w10, #0x0
  5c:	sub	x26, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x22, x1
  6c:	csel	x25, x8, x9, ne  // ne = any
  70:	asr	x27, x26, #3
  74:	cbz	x25, 88 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x88>
  78:	lsl	x0, x25, #3
  7c:	bl	0 <_Znwm>
  80:	mov	x21, x0
  84:	b	8c <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x8c>
  88:	mov	x21, xzr
  8c:	ldr	x8, [x23]
  90:	cmp	x20, x22
  94:	str	x8, [x21, x27, lsl #3]
  98:	mov	x8, x21
  9c:	b.eq	130 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x130>  // b.none
  a0:	sub	x10, x26, #0x8
  a4:	cmp	x10, #0x18
  a8:	mov	x8, x21
  ac:	mov	x9, x20
  b0:	b.cc	120 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x120>  // b.lo, b.ul, b.last
  b4:	and	x8, x10, #0xfffffffffffffff8
  b8:	add	x8, x8, #0x8
  bc:	add	x9, x20, x8
  c0:	cmp	x21, x9
  c4:	b.cs	dc <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xdc>  // b.hs, b.nlast
  c8:	add	x8, x21, x8
  cc:	cmp	x20, x8
  d0:	mov	x8, x21
  d4:	mov	x9, x20
  d8:	b.cc	120 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x120>  // b.lo, b.ul, b.last
  dc:	lsr	x8, x10, #3
  e0:	add	x10, x8, #0x1
  e4:	and	x11, x10, #0x3ffffffffffffffc
  e8:	lsl	x9, x11, #3
  ec:	add	x12, x20, #0x10
  f0:	add	x8, x21, x9
  f4:	add	x9, x20, x9
  f8:	add	x13, x21, #0x10
  fc:	mov	x14, x11
 100:	ldp	q0, q1, [x12, #-16]
 104:	add	x12, x12, #0x20
 108:	subs	x14, x14, #0x4
 10c:	stp	q0, q1, [x13, #-16]
 110:	add	x13, x13, #0x20
 114:	b.ne	100 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x100>  // b.any
 118:	cmp	x10, x11
 11c:	b.eq	130 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x130>  // b.none
 120:	ldr	x10, [x9], #8
 124:	cmp	x22, x9
 128:	str	x10, [x8], #8
 12c:	b.ne	120 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x120>  // b.any
 130:	subs	x9, x24, x22
 134:	add	x23, x8, #0x8
 138:	b.eq	1cc <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1cc>  // b.none
 13c:	sub	x10, x9, #0x8
 140:	cmp	x10, #0x18
 144:	b.cs	150 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x150>  // b.hs, b.nlast
 148:	mov	x9, x22
 14c:	b	1bc <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1bc>
 150:	and	x9, x10, #0xfffffffffffffff8
 154:	add	x11, x9, x22
 158:	add	x11, x11, #0x8
 15c:	cmp	x23, x11
 160:	b.cs	178 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x178>  // b.hs, b.nlast
 164:	add	x9, x9, x8
 168:	add	x9, x9, #0x10
 16c:	cmp	x22, x9
 170:	mov	x9, x22
 174:	b.cc	1bc <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1bc>  // b.lo, b.ul, b.last
 178:	lsr	x9, x10, #3
 17c:	add	x10, x9, #0x1
 180:	and	x11, x10, #0x3ffffffffffffffc
 184:	lsl	x9, x11, #3
 188:	add	x12, x22, #0x10
 18c:	add	x23, x23, x9
 190:	add	x9, x22, x9
 194:	add	x8, x8, #0x18
 198:	mov	x13, x11
 19c:	ldp	q0, q1, [x12, #-16]
 1a0:	add	x12, x12, #0x20
 1a4:	subs	x13, x13, #0x4
 1a8:	stp	q0, q1, [x8, #-16]
 1ac:	add	x8, x8, #0x20
 1b0:	b.ne	19c <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x19c>  // b.any
 1b4:	cmp	x10, x11
 1b8:	b.eq	1cc <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1cc>  // b.none
 1bc:	ldr	x8, [x9], #8
 1c0:	cmp	x24, x9
 1c4:	str	x8, [x23], #8
 1c8:	b.ne	1bc <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1bc>  // b.any
 1cc:	cbz	x20, 1d8 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x1d8>
 1d0:	mov	x0, x20
 1d4:	bl	0 <_ZdlPv>
 1d8:	add	x8, x21, x25, lsl #3
 1dc:	stp	x21, x23, [x19]
 1e0:	str	x8, [x19, #16]
 1e4:	ldp	x20, x19, [sp, #80]
 1e8:	ldp	x22, x21, [sp, #64]
 1ec:	ldp	x24, x23, [sp, #48]
 1f0:	ldp	x26, x25, [sp, #32]
 1f4:	ldr	x27, [sp, #16]
 1f8:	ldp	x29, x30, [sp], #96
 1fc:	ret
 200:	adrp	x0, 0 <_ZNSt6vectorIN4llvm13AttributeListESaIS1_EE17_M_realloc_insertIJRKS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 204:	add	x0, x0, #0x0
 208:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w11, [x0, #24]
   c:	cbz	w11, b4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xb4>
  10:	ldr	w8, [x1]
  14:	ldr	x9, [x0, #8]
  18:	ldr	x10, [x1, #8]
  1c:	cmn	w8, #0x1
  20:	b.ne	2c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x2c>  // b.any
  24:	cmn	x10, #0x4
  28:	b.eq	13c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x13c>  // b.none
  2c:	cmn	w8, #0x2
  30:	b.ne	3c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x3c>  // b.any
  34:	cmn	x10, #0x8
  38:	b.eq	13c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x13c>  // b.none
  3c:	mov	w13, #0x25                  	// #37
  40:	ubfx	x14, x10, #4, #28
  44:	mov	x15, #0xffffffffffffffff    	// #-1
  48:	sub	w12, w11, #0x1
  4c:	mul	w11, w8, w13
  50:	eor	w13, w14, w10, lsr #9
  54:	eor	x14, x15, x13, lsl #32
  58:	bfi	x13, x11, #32, #32
  5c:	add	x11, x13, x14
  60:	eor	x11, x11, x11, lsr #22
  64:	eor	x13, x15, x11, lsl #13
  68:	add	x11, x11, x13
  6c:	eor	x11, x11, x11, lsr #8
  70:	add	x11, x11, x11, lsl #3
  74:	eor	x11, x11, x11, lsr #15
  78:	eor	x13, x15, x11, lsl #27
  7c:	add	x11, x11, x13
  80:	lsr	x13, x11, #31
  84:	eor	w11, w13, w11
  88:	and	w14, w12, w11
  8c:	mov	w13, #0x18                  	// #24
  90:	umaddl	x11, w14, w13, x9
  94:	ldr	w16, [x11]
  98:	ldr	x18, [x11, #8]
  9c:	cmp	w8, w16
  a0:	b.ne	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xc8>  // b.any
  a4:	cmp	x10, x18
  a8:	b.ne	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xc8>  // b.any
  ac:	mov	w0, #0x1                   	// #1
  b0:	b	bc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xbc>
  b4:	mov	x11, xzr
  b8:	mov	w0, wzr
  bc:	str	x11, [x2]
  c0:	ldp	x29, x30, [sp], #16
  c4:	ret
  c8:	mov	x15, xzr
  cc:	mov	w1, #0x1                   	// #1
  d0:	mov	w17, #0xfffffffe            	// #-2
  d4:	mov	w0, #0x1                   	// #1
  d8:	cmn	w16, #0x1
  dc:	b.ne	e8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xe8>  // b.any
  e0:	cmn	x18, #0x4
  e4:	b.eq	12c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0x12c>  // b.none
  e8:	cmn	x18, #0x8
  ec:	add	w14, w14, w1
  f0:	ccmp	w16, w17, #0x0, eq  // eq = none
  f4:	and	w14, w14, w12
  f8:	ccmp	x15, #0x0, #0x0, eq  // eq = none
  fc:	csel	x15, x15, x11, ne  // ne = any
 100:	umaddl	x11, w14, w13, x9
 104:	ldr	w16, [x11]
 108:	ldr	x18, [x11, #8]
 10c:	add	w3, w1, #0x1
 110:	mov	w1, w3
 114:	cmp	w8, w16
 118:	b.ne	d8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xd8>  // b.any
 11c:	cmp	x10, x18
 120:	mov	w1, w3
 124:	b.eq	bc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xbc>  // b.none
 128:	b	d8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xd8>
 12c:	cmp	x15, #0x0
 130:	mov	w0, wzr
 134:	csel	x11, x11, x15, eq  // eq = none
 138:	b	bc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_+0xbc>
 13c:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 140:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 144:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E15LookupBucketForIS4_EEbRKT_RPKS9_>
 148:	add	x0, x0, #0x0
 14c:	add	x1, x1, #0x0
 150:	add	x3, x3, #0x0
 154:	mov	w2, #0x252                 	// #594
 158:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xa0>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xa4>  // b.plast
  58:	cbz	x3, c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0xc4>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	w8, [x3]
  6c:	cmn	w8, #0x1
  70:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x80>  // b.any
  74:	ldr	x8, [x3, #8]
  78:	cmn	x8, #0x4
  7c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x8c>  // b.none
  80:	ldr	w8, [x19, #20]
  84:	sub	w8, w8, #0x1
  88:	str	w8, [x19, #20]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	mov	x0, x3
  98:	add	sp, sp, #0x30
  9c:	ret
  a0:	lsl	w1, w1, #1
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  ac:	add	x2, sp, #0x8
  b0:	mov	x0, x19
  b4:	mov	x1, x20
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  bc:	ldr	x3, [sp, #8]
  c0:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_+0x5c>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E20InsertIntoBucketImplIS4_EEPS9_RKS4_RKT_SD_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	12c <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x12c>  // b.any
  a0:	cbz	w8, 11c <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x11c>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x11, x8, #0x18
  b0:	cmp	x11, #0x18
  b4:	adrp	x9, 0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
  b8:	mov	x10, x0
  bc:	b.cc	108 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x108>  // b.lo, b.ul, b.last
  c0:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c4:	movk	x10, #0xaaab
  c8:	umulh	x10, x11, x10
  cc:	ldr	q0, [x9]
  d0:	lsr	x10, x10, #4
  d4:	add	x11, x10, #0x1
  d8:	and	x12, x11, #0x1ffffffffffffffe
  dc:	mov	w10, #0x18                  	// #24
  e0:	madd	x10, x12, x10, x0
  e4:	mov	x13, x12
  e8:	mov	x14, x0
  ec:	str	q0, [x14]
  f0:	stur	q0, [x14, #24]
  f4:	subs	x13, x13, #0x2
  f8:	add	x14, x14, #0x30
  fc:	b.ne	ec <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0xec>  // b.any
 100:	cmp	x11, x12
 104:	b.eq	11c <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x11c>  // b.none
 108:	ldr	q0, [x9]
 10c:	add	x8, x0, x8
 110:	str	q0, [x10], #24
 114:	cmp	x8, x10
 118:	b.ne	110 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj+0x110>  // b.any
 11c:	ldp	x20, x19, [sp, #32]
 120:	ldr	x21, [sp, #16]
 124:	ldp	x29, x30, [sp], #48
 128:	ret
 12c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 130:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 134:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_jEEE4growEj>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x15c                 	// #348
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	str	xzr, [x0, #16]
  18:	sub	w9, w8, #0x1
  1c:	tst	w8, w9
  20:	b.ne	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x164>  // b.any
  24:	mov	x19, x2
  28:	mov	x20, x1
  2c:	mov	x21, x0
  30:	cbz	w8, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb8>
  34:	ldr	x9, [x21, #8]
  38:	mov	w10, #0x18                  	// #24
  3c:	mul	x10, x8, x10
  40:	sub	x11, x10, #0x18
  44:	cmp	x11, #0x18
  48:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
  4c:	b.cs	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x58>  // b.hs, b.nlast
  50:	mov	x11, x9
  54:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xa0>
  58:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  5c:	movk	x12, #0xaaab
  60:	umulh	x11, x11, x12
  64:	ldr	q0, [x10]
  68:	lsr	x11, x11, #4
  6c:	add	x12, x11, #0x1
  70:	and	x13, x12, #0x1ffffffffffffffe
  74:	mov	w11, #0x18                  	// #24
  78:	madd	x11, x13, x11, x9
  7c:	mov	x14, x13
  80:	mov	x15, x9
  84:	str	q0, [x15]
  88:	stur	q0, [x15, #24]
  8c:	subs	x14, x14, #0x2
  90:	add	x15, x15, #0x30
  94:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x84>  // b.any
  98:	cmp	x12, x13
  9c:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xb8>  // b.none
  a0:	ldr	q0, [x10]
  a4:	mov	w10, #0x18                  	// #24
  a8:	madd	x8, x8, x10, x9
  ac:	str	q0, [x11], #24
  b0:	cmp	x8, x11
  b4:	b.ne	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xac>  // b.any
  b8:	cmp	x20, x19
  bc:	b.ne	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xdc>  // b.any
  c0:	ldp	x20, x19, [sp, #32]
  c4:	ldr	x21, [sp, #16]
  c8:	ldp	x29, x30, [sp], #48
  cc:	ret
  d0:	add	x20, x20, #0x18
  d4:	cmp	x19, x20
  d8:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xc0>  // b.none
  dc:	ldr	w9, [x20]
  e0:	ldr	x8, [x20, #8]
  e4:	cmn	w9, #0x1
  e8:	b.ne	f4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xf4>  // b.any
  ec:	cmn	x8, #0x4
  f0:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xd0>  // b.none
  f4:	cmn	w9, #0x2
  f8:	b.ne	104 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x104>  // b.any
  fc:	cmn	x8, #0x8
 100:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xd0>  // b.none
 104:	add	x2, x29, #0x18
 108:	mov	x0, x21
 10c:	mov	x1, x20
 110:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 114:	tbnz	w0, #0, 144 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0x144>
 118:	ldr	x8, [x29, #24]
 11c:	ldr	w9, [x20]
 120:	str	w9, [x8]
 124:	ldr	x9, [x20, #8]
 128:	str	x9, [x8, #8]
 12c:	ldr	w9, [x20, #16]
 130:	str	w9, [x8, #16]
 134:	ldr	w8, [x21, #16]
 138:	add	w8, w8, #0x1
 13c:	str	w8, [x21, #16]
 140:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_+0xd0>
 144:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 148:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 14c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x17a                 	// #378
 160:	bl	0 <__assert_fail>
 164:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 168:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 16c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIjNS_12AttributeSetEEjNS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_jEEEES4_jS6_S9_E18moveFromOldBucketsEPS9_SC_>
 170:	add	x0, x0, #0x0
 174:	add	x1, x1, #0x0
 178:	add	x3, x3, #0x0
 17c:	mov	w2, #0x15c                 	// #348
 180:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	108 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x108>  // b.none
  2c:	asr	x9, x8, #4
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #59
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #4
  70:	cbz	x25, 84 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x84>
  74:	lsl	x0, x25, #4
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	q0, [x23]
  8c:	cmp	x20, x21
  90:	mov	x8, x22
  94:	str	q0, [x22, x26, lsl #4]
  98:	b.eq	b8 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb8>  // b.none
  9c:	mov	x8, x22
  a0:	mov	x9, x20
  a4:	ldr	q0, [x9], #16
  a8:	cmp	x21, x9
  ac:	str	q0, [x8]
  b0:	add	x8, x8, #0x10
  b4:	b.ne	a4 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa4>  // b.any
  b8:	cmp	x24, x21
  bc:	add	x23, x8, #0x10
  c0:	b.eq	d8 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd8>  // b.none
  c4:	ldr	q0, [x21], #16
  c8:	cmp	x24, x21
  cc:	str	q0, [x23]
  d0:	add	x23, x23, #0x10
  d4:	b.ne	c4 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc4>  // b.any
  d8:	cbz	x20, e4 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe4>
  dc:	mov	x0, x20
  e0:	bl	0 <_ZdlPv>
  e4:	add	x8, x22, x25, lsl #4
  e8:	stp	x22, x23, [x19]
  ec:	str	x8, [x19, #16]
  f0:	ldp	x20, x19, [sp, #64]
  f4:	ldp	x22, x21, [sp, #48]
  f8:	ldp	x24, x23, [sp, #32]
  fc:	ldp	x26, x25, [sp, #16]
 100:	ldp	x29, x30, [sp], #80
 104:	ret
 108:	adrp	x0, 0 <_ZNSt6vectorISt4pairIjN4llvm12AttributeSetEESaIS3_EE17_M_realloc_insertIJRKS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 10c:	add	x0, x0, #0x0
 110:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, 194 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x194>
  18:	ldp	x11, x8, [x0, #8]
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	sub	x8, x8, x11
  28:	cmp	x1, x8, asr #4
  2c:	b.ls	88 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x88>  // b.plast
  30:	ldr	x8, [x19]
  34:	sub	x8, x11, x8
  38:	asr	x23, x8, #4
  3c:	eor	x8, x23, #0x7ffffffffffffff
  40:	cmp	x8, x20
  44:	b.cc	1a8 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x1a8>  // b.lo, b.ul, b.last
  48:	cmp	x23, x20
  4c:	csel	x8, x20, x23, cc  // cc = lo, ul, last
  50:	adds	x8, x8, x23
  54:	lsr	x10, x8, #59
  58:	cset	w9, cs  // cs = hs, nlast
  5c:	cmp	x10, #0x0
  60:	cset	w10, ne  // ne = any
  64:	orr	w9, w9, w10
  68:	cmp	w9, #0x0
  6c:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  70:	csel	x22, x9, x8, ne  // ne = any
  74:	cbz	x22, f0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xf0>
  78:	lsl	x0, x22, #4
  7c:	bl	0 <_Znwm>
  80:	mov	x21, x0
  84:	b	f4 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xf4>
  88:	cmp	x20, #0x2
  8c:	b.cs	9c <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x9c>  // b.hs, b.nlast
  90:	mov	x8, x11
  94:	mov	x9, x20
  98:	b	d4 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xd4>
  9c:	and	x10, x20, #0xfffffffffffffffe
  a0:	and	x9, x20, #0x1
  a4:	add	x8, x11, x10, lsl #4
  a8:	add	x11, x11, #0x10
  ac:	mov	x12, x10
  b0:	stur	xzr, [x11, #-16]
  b4:	str	xzr, [x11]
  b8:	stur	wzr, [x11, #-8]
  bc:	str	wzr, [x11, #8]
  c0:	subs	x12, x12, #0x2
  c4:	add	x11, x11, #0x20
  c8:	b.ne	b0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xb0>  // b.any
  cc:	cmp	x10, x20
  d0:	b.eq	e8 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xe8>  // b.none
  d4:	str	xzr, [x8]
  d8:	str	wzr, [x8, #8]
  dc:	subs	x9, x9, #0x1
  e0:	add	x8, x8, #0x10
  e4:	b.ne	d4 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0xd4>  // b.any
  e8:	str	x8, [x19, #8]
  ec:	b	194 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x194>
  f0:	mov	x21, xzr
  f4:	add	x23, x21, x23, lsl #4
  f8:	cmp	x20, #0x2
  fc:	mov	x8, x23
 100:	mov	x9, x20
 104:	b.cc	140 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x140>  // b.lo, b.ul, b.last
 108:	and	x10, x20, #0xfffffffffffffffe
 10c:	and	x9, x20, #0x1
 110:	add	x8, x23, x10, lsl #4
 114:	add	x11, x23, #0x10
 118:	mov	x12, x10
 11c:	stur	xzr, [x11, #-16]
 120:	str	xzr, [x11]
 124:	stur	wzr, [x11, #-8]
 128:	str	wzr, [x11, #8]
 12c:	subs	x12, x12, #0x2
 130:	add	x11, x11, #0x20
 134:	b.ne	11c <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x11c>  // b.any
 138:	cmp	x10, x20
 13c:	b.eq	154 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x154>  // b.none
 140:	str	xzr, [x8]
 144:	str	wzr, [x8, #8]
 148:	subs	x9, x9, #0x1
 14c:	add	x8, x8, #0x10
 150:	b.ne	140 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x140>  // b.any
 154:	ldp	x0, x8, [x19]
 158:	cmp	x0, x8
 15c:	b.eq	17c <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x17c>  // b.none
 160:	mov	x9, x21
 164:	ldr	q0, [x0], #16
 168:	cmp	x8, x0
 16c:	str	q0, [x9]
 170:	add	x9, x9, #0x10
 174:	b.ne	164 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x164>  // b.any
 178:	ldr	x0, [x19]
 17c:	cbz	x0, 184 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm+0x184>
 180:	bl	0 <_ZdlPv>
 184:	add	x8, x23, x20, lsl #4
 188:	add	x9, x21, x22, lsl #4
 18c:	stp	x21, x8, [x19]
 190:	str	x9, [x19, #16]
 194:	ldp	x20, x19, [sp, #48]
 198:	ldp	x22, x21, [sp, #32]
 19c:	ldr	x23, [sp, #16]
 1a0:	ldp	x29, x30, [sp], #64
 1a4:	ret
 1a8:	adrp	x0, 0 <_ZNSt6vectorISt4pairIPKN4llvm5ValueEjESaIS5_EE17_M_default_appendEm>
 1ac:	add	x0, x0, #0x0
 1b0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cbz	x1, 108 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0x108>
  1c:	mov	x23, x0
  20:	mov	x25, x0
  24:	ldr	x22, [x23, #8]!
  28:	ldr	x21, [x0]
  2c:	ldr	x8, [x25, #16]!
  30:	mov	x19, x1
  34:	mov	x20, x0
  38:	sub	x8, x8, x22
  3c:	cmp	x1, x8, asr #3
  40:	b.ls	9c <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0x9c>  // b.plast
  44:	sub	x8, x22, x21
  48:	asr	x24, x8, #3
  4c:	eor	x8, x24, #0xfffffffffffffff
  50:	cmp	x8, x19
  54:	b.cc	120 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0x120>  // b.lo, b.ul, b.last
  58:	cmp	x24, x19
  5c:	csel	x8, x19, x24, cc  // cc = lo, ul, last
  60:	adds	x8, x8, x24
  64:	lsr	x10, x8, #60
  68:	cset	w9, cs  // cs = hs, nlast
  6c:	cmp	x10, #0x0
  70:	cset	w10, ne  // ne = any
  74:	orr	w9, w9, w10
  78:	cmp	w9, #0x0
  7c:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  80:	csel	x26, x9, x8, ne  // ne = any
  84:	cbz	x26, bc <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xbc>
  88:	lsl	x0, x26, #3
  8c:	bl	0 <_Znwm>
  90:	ldp	x21, x22, [x20]
  94:	mov	x23, x0
  98:	b	c0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xc0>
  9c:	lsl	x19, x19, #3
  a0:	mov	x0, x22
  a4:	mov	w1, wzr
  a8:	mov	x2, x19
  ac:	bl	0 <memset>
  b0:	add	x8, x22, x19
  b4:	mov	x25, x23
  b8:	b	104 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0x104>
  bc:	mov	x23, xzr
  c0:	add	x24, x23, x24, lsl #3
  c4:	lsl	x2, x19, #3
  c8:	mov	x0, x24
  cc:	mov	w1, wzr
  d0:	bl	0 <memset>
  d4:	sub	x2, x22, x21
  d8:	cmp	x2, #0x1
  dc:	b.lt	ec <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xec>  // b.tstop
  e0:	mov	x0, x23
  e4:	mov	x1, x21
  e8:	bl	0 <memmove>
  ec:	cbz	x21, f8 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm+0xf8>
  f0:	mov	x0, x21
  f4:	bl	0 <_ZdlPv>
  f8:	add	x8, x24, x19, lsl #3
  fc:	stp	x23, x8, [x20]
 100:	add	x8, x23, x26, lsl #3
 104:	str	x8, [x25]
 108:	ldp	x20, x19, [sp, #64]
 10c:	ldp	x22, x21, [sp, #48]
 110:	ldp	x24, x23, [sp, #32]
 114:	ldp	x26, x25, [sp, #16]
 118:	ldp	x29, x30, [sp], #80
 11c:	ret
 120:	adrp	x0, 0 <_ZNSt6vectorIPKN4llvm8MetadataESaIS3_EE17_M_default_appendEm>
 124:	add	x0, x0, #0x0
 128:	bl	0 <_ZSt20__throw_length_errorPKc>
