
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-boot-check-no-failures_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400db0 <_init>:
  400db0:	stp	x29, x30, [sp, #-16]!
  400db4:	mov	x29, sp
  400db8:	bl	400fe0 <call_weak_fn>
  400dbc:	ldp	x29, x30, [sp], #16
  400dc0:	ret

Disassembly of section .plt:

0000000000400dd0 <.plt>:
  400dd0:	stp	x16, x30, [sp, #-16]!
  400dd4:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400dd8:	ldr	x17, [x16, #3864]
  400ddc:	add	x16, x16, #0xf18
  400de0:	br	x17
  400de4:	nop
  400de8:	nop
  400dec:	nop

0000000000400df0 <bus_error_message@plt>:
  400df0:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400df4:	ldr	x17, [x16, #3872]
  400df8:	add	x16, x16, #0xf20
  400dfc:	br	x17

0000000000400e00 <__libc_start_main@plt>:
  400e00:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400e04:	ldr	x17, [x16, #3880]
  400e08:	add	x16, x16, #0xf28
  400e0c:	br	x17

0000000000400e10 <sd_bus_get_property_trivial@plt>:
  400e10:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400e14:	ldr	x17, [x16, #3888]
  400e18:	add	x16, x16, #0xf30
  400e1c:	br	x17

0000000000400e20 <__gmon_start__@plt>:
  400e20:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400e24:	ldr	x17, [x16, #3896]
  400e28:	add	x16, x16, #0xf38
  400e2c:	br	x17

0000000000400e30 <polkit_agent_close@plt>:
  400e30:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400e34:	ldr	x17, [x16, #3904]
  400e38:	add	x16, x16, #0xf40
  400e3c:	br	x17

0000000000400e40 <log_parse_environment_realm@plt>:
  400e40:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400e44:	ldr	x17, [x16, #3912]
  400e48:	add	x16, x16, #0xf48
  400e4c:	br	x17

0000000000400e50 <log_assert_failed_realm@plt>:
  400e50:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400e54:	ldr	x17, [x16, #3920]
  400e58:	add	x16, x16, #0xf50
  400e5c:	br	x17

0000000000400e60 <getopt_long@plt>:
  400e60:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400e64:	ldr	x17, [x16, #3928]
  400e68:	add	x16, x16, #0xf58
  400e6c:	br	x17

0000000000400e70 <log_assert_failed_unreachable_realm@plt>:
  400e70:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400e74:	ldr	x17, [x16, #3936]
  400e78:	add	x16, x16, #0xf60
  400e7c:	br	x17

0000000000400e80 <abort@plt>:
  400e80:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400e84:	ldr	x17, [x16, #3944]
  400e88:	add	x16, x16, #0xf68
  400e8c:	br	x17

0000000000400e90 <terminal_urlify_man@plt>:
  400e90:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400e94:	ldr	x17, [x16, #3952]
  400e98:	add	x16, x16, #0xf70
  400e9c:	br	x17

0000000000400ea0 <__stack_chk_fail@plt>:
  400ea0:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400ea4:	ldr	x17, [x16, #3960]
  400ea8:	add	x16, x16, #0xf78
  400eac:	br	x17

0000000000400eb0 <ask_password_agent_close@plt>:
  400eb0:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400eb4:	ldr	x17, [x16, #3968]
  400eb8:	add	x16, x16, #0xf80
  400ebc:	br	x17

0000000000400ec0 <version@plt>:
  400ec0:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400ec4:	ldr	x17, [x16, #3976]
  400ec8:	add	x16, x16, #0xf88
  400ecc:	br	x17

0000000000400ed0 <pager_close@plt>:
  400ed0:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400ed4:	ldr	x17, [x16, #3984]
  400ed8:	add	x16, x16, #0xf90
  400edc:	br	x17

0000000000400ee0 <sd_bus_error_free@plt>:
  400ee0:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400ee4:	ldr	x17, [x16, #3992]
  400ee8:	add	x16, x16, #0xf98
  400eec:	br	x17

0000000000400ef0 <log_internal_realm@plt>:
  400ef0:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400ef4:	ldr	x17, [x16, #4000]
  400ef8:	add	x16, x16, #0xfa0
  400efc:	br	x17

0000000000400f00 <sd_bus_flush_close_unref@plt>:
  400f00:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400f04:	ldr	x17, [x16, #4008]
  400f08:	add	x16, x16, #0xfa8
  400f0c:	br	x17

0000000000400f10 <sd_bus_open_system@plt>:
  400f10:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400f14:	ldr	x17, [x16, #4016]
  400f18:	add	x16, x16, #0xfb0
  400f1c:	br	x17

0000000000400f20 <colors_enabled@plt>:
  400f20:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400f24:	ldr	x17, [x16, #4024]
  400f28:	add	x16, x16, #0xfb8
  400f2c:	br	x17

0000000000400f30 <free@plt>:
  400f30:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400f34:	ldr	x17, [x16, #4032]
  400f38:	add	x16, x16, #0xfc0
  400f3c:	br	x17

0000000000400f40 <mac_selinux_finish@plt>:
  400f40:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400f44:	ldr	x17, [x16, #4040]
  400f48:	add	x16, x16, #0xfc8
  400f4c:	br	x17

0000000000400f50 <printf@plt>:
  400f50:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400f54:	ldr	x17, [x16, #4048]
  400f58:	add	x16, x16, #0xfd0
  400f5c:	br	x17

0000000000400f60 <log_open@plt>:
  400f60:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400f64:	ldr	x17, [x16, #4056]
  400f68:	add	x16, x16, #0xfd8
  400f6c:	br	x17

0000000000400f70 <log_oom_internal@plt>:
  400f70:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400f74:	ldr	x17, [x16, #4064]
  400f78:	add	x16, x16, #0xfe0
  400f7c:	br	x17

0000000000400f80 <log_get_max_level_realm@plt>:
  400f80:	adrp	x16, 412000 <__FRAME_END__+0x100a8>
  400f84:	ldr	x17, [x16, #4072]
  400f88:	add	x16, x16, #0xfe8
  400f8c:	br	x17

Disassembly of section .text:

0000000000400f90 <_start>:
  400f90:	mov	x29, #0x0                   	// #0
  400f94:	mov	x30, #0x0                   	// #0
  400f98:	mov	x5, x0
  400f9c:	ldr	x1, [sp]
  400fa0:	add	x2, sp, #0x8
  400fa4:	mov	x6, sp
  400fa8:	movz	x0, #0x0, lsl #48
  400fac:	movk	x0, #0x0, lsl #32
  400fb0:	movk	x0, #0x40, lsl #16
  400fb4:	movk	x0, #0x1890
  400fb8:	movz	x3, #0x0, lsl #48
  400fbc:	movk	x3, #0x0, lsl #32
  400fc0:	movk	x3, #0x40, lsl #16
  400fc4:	movk	x3, #0x18f0
  400fc8:	movz	x4, #0x0, lsl #48
  400fcc:	movk	x4, #0x0, lsl #32
  400fd0:	movk	x4, #0x40, lsl #16
  400fd4:	movk	x4, #0x1970
  400fd8:	bl	400e00 <__libc_start_main@plt>
  400fdc:	bl	400e80 <abort@plt>

0000000000400fe0 <call_weak_fn>:
  400fe0:	adrp	x0, 412000 <__FRAME_END__+0x100a8>
  400fe4:	ldr	x0, [x0, #4088]
  400fe8:	cbz	x0, 400ff0 <call_weak_fn+0x10>
  400fec:	b	400e20 <__gmon_start__@plt>
  400ff0:	ret

0000000000400ff4 <deregister_tm_clones>:
  400ff4:	stp	x29, x30, [sp, #-32]!
  400ff8:	mov	x29, sp
  400ffc:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401000:	add	x0, x0, #0x0
  401004:	str	x0, [sp, #24]
  401008:	ldr	x0, [sp, #24]
  40100c:	str	x0, [sp, #24]
  401010:	ldr	x1, [sp, #24]
  401014:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401018:	add	x0, x0, #0x0
  40101c:	cmp	x1, x0
  401020:	b.eq	40105c <deregister_tm_clones+0x68>  // b.none
  401024:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401028:	add	x0, x0, #0x988
  40102c:	ldr	x0, [x0]
  401030:	str	x0, [sp, #16]
  401034:	ldr	x0, [sp, #16]
  401038:	str	x0, [sp, #16]
  40103c:	ldr	x0, [sp, #16]
  401040:	cmp	x0, #0x0
  401044:	b.eq	401060 <deregister_tm_clones+0x6c>  // b.none
  401048:	ldr	x1, [sp, #16]
  40104c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401050:	add	x0, x0, #0x0
  401054:	blr	x1
  401058:	b	401060 <deregister_tm_clones+0x6c>
  40105c:	nop
  401060:	ldp	x29, x30, [sp], #32
  401064:	ret

0000000000401068 <register_tm_clones>:
  401068:	stp	x29, x30, [sp, #-48]!
  40106c:	mov	x29, sp
  401070:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401074:	add	x0, x0, #0x0
  401078:	str	x0, [sp, #40]
  40107c:	ldr	x0, [sp, #40]
  401080:	str	x0, [sp, #40]
  401084:	ldr	x1, [sp, #40]
  401088:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  40108c:	add	x0, x0, #0x0
  401090:	sub	x0, x1, x0
  401094:	asr	x0, x0, #3
  401098:	lsr	x1, x0, #63
  40109c:	add	x0, x1, x0
  4010a0:	asr	x0, x0, #1
  4010a4:	str	x0, [sp, #32]
  4010a8:	ldr	x0, [sp, #32]
  4010ac:	cmp	x0, #0x0
  4010b0:	b.eq	4010f0 <register_tm_clones+0x88>  // b.none
  4010b4:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  4010b8:	add	x0, x0, #0x990
  4010bc:	ldr	x0, [x0]
  4010c0:	str	x0, [sp, #24]
  4010c4:	ldr	x0, [sp, #24]
  4010c8:	str	x0, [sp, #24]
  4010cc:	ldr	x0, [sp, #24]
  4010d0:	cmp	x0, #0x0
  4010d4:	b.eq	4010f4 <register_tm_clones+0x8c>  // b.none
  4010d8:	ldr	x2, [sp, #24]
  4010dc:	ldr	x1, [sp, #32]
  4010e0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4010e4:	add	x0, x0, #0x0
  4010e8:	blr	x2
  4010ec:	b	4010f4 <register_tm_clones+0x8c>
  4010f0:	nop
  4010f4:	ldp	x29, x30, [sp], #48
  4010f8:	ret

00000000004010fc <__do_global_dtors_aux>:
  4010fc:	stp	x29, x30, [sp, #-16]!
  401100:	mov	x29, sp
  401104:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401108:	add	x0, x0, #0x14
  40110c:	ldrb	w0, [x0]
  401110:	and	x0, x0, #0xff
  401114:	cmp	x0, #0x0
  401118:	b.ne	401134 <__do_global_dtors_aux+0x38>  // b.any
  40111c:	bl	400ff4 <deregister_tm_clones>
  401120:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401124:	add	x0, x0, #0x14
  401128:	mov	w1, #0x1                   	// #1
  40112c:	strb	w1, [x0]
  401130:	b	401138 <__do_global_dtors_aux+0x3c>
  401134:	nop
  401138:	ldp	x29, x30, [sp], #16
  40113c:	ret

0000000000401140 <frame_dummy>:
  401140:	stp	x29, x30, [sp, #-16]!
  401144:	mov	x29, sp
  401148:	bl	401068 <register_tm_clones>
  40114c:	nop
  401150:	ldp	x29, x30, [sp], #16
  401154:	ret

0000000000401158 <sd_bus_flush_close_unrefp>:
  401158:	stp	x29, x30, [sp, #-32]!
  40115c:	mov	x29, sp
  401160:	str	x0, [sp, #24]
  401164:	ldr	x0, [sp, #24]
  401168:	ldr	x0, [x0]
  40116c:	cmp	x0, #0x0
  401170:	b.eq	401180 <sd_bus_flush_close_unrefp+0x28>  // b.none
  401174:	ldr	x0, [sp, #24]
  401178:	ldr	x0, [x0]
  40117c:	bl	400f00 <sd_bus_flush_close_unref@plt>
  401180:	nop
  401184:	ldp	x29, x30, [sp], #32
  401188:	ret

000000000040118c <ALIGN_TO>:
  40118c:	sub	sp, sp, #0x10
  401190:	str	x0, [sp, #8]
  401194:	str	x1, [sp]
  401198:	ldr	x1, [sp, #8]
  40119c:	ldr	x0, [sp]
  4011a0:	add	x0, x1, x0
  4011a4:	sub	x1, x0, #0x1
  4011a8:	ldr	x0, [sp]
  4011ac:	neg	x0, x0
  4011b0:	and	x0, x1, x0
  4011b4:	add	sp, sp, #0x10
  4011b8:	ret

00000000004011bc <freep>:
  4011bc:	stp	x29, x30, [sp, #-32]!
  4011c0:	mov	x29, sp
  4011c4:	str	x0, [sp, #24]
  4011c8:	ldr	x0, [sp, #24]
  4011cc:	ldr	x0, [x0]
  4011d0:	bl	400f30 <free@plt>
  4011d4:	nop
  4011d8:	ldp	x29, x30, [sp], #32
  4011dc:	ret

00000000004011e0 <save_argc_argv>:
  4011e0:	sub	sp, sp, #0x10
  4011e4:	str	w0, [sp, #12]
  4011e8:	str	x1, [sp]
  4011ec:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4011f0:	add	x0, x0, #0x10
  4011f4:	ldr	w1, [sp, #12]
  4011f8:	str	w1, [x0]
  4011fc:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401200:	add	x0, x0, #0x0
  401204:	ldr	x1, [sp]
  401208:	str	x1, [x0]
  40120c:	nop
  401210:	add	sp, sp, #0x10
  401214:	ret

0000000000401218 <static_destruct>:
  401218:	stp	x29, x30, [sp, #-32]!
  40121c:	mov	x29, sp
  401220:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401224:	add	x0, x0, #0xbf8
  401228:	ldr	x0, [x0]
  40122c:	cmp	x0, #0x0
  401230:	b.eq	401294 <static_destruct+0x7c>  // b.none
  401234:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401238:	add	x0, x0, #0xbf8
  40123c:	ldr	x0, [x0]
  401240:	mov	x1, #0x8                   	// #8
  401244:	bl	40118c <ALIGN_TO>
  401248:	str	x0, [sp, #24]
  40124c:	b	401278 <static_destruct+0x60>
  401250:	ldr	x0, [sp, #24]
  401254:	ldr	x1, [x0, #8]
  401258:	ldr	x0, [sp, #24]
  40125c:	ldr	x0, [x0]
  401260:	blr	x1
  401264:	ldr	x0, [sp, #24]
  401268:	add	x0, x0, #0x10
  40126c:	mov	x1, #0x8                   	// #8
  401270:	bl	40118c <ALIGN_TO>
  401274:	str	x0, [sp, #24]
  401278:	ldr	x1, [sp, #24]
  40127c:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401280:	add	x0, x0, #0xc00
  401284:	ldr	x0, [x0]
  401288:	cmp	x1, x0
  40128c:	b.cc	401250 <static_destruct+0x38>  // b.lo, b.ul, b.last
  401290:	b	401298 <static_destruct+0x80>
  401294:	nop
  401298:	ldp	x29, x30, [sp], #32
  40129c:	ret

00000000004012a0 <ansi_normal>:
  4012a0:	stp	x29, x30, [sp, #-16]!
  4012a4:	mov	x29, sp
  4012a8:	bl	400f20 <colors_enabled@plt>
  4012ac:	and	w0, w0, #0xff
  4012b0:	cmp	w0, #0x0
  4012b4:	b.eq	4012c4 <ansi_normal+0x24>  // b.none
  4012b8:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  4012bc:	add	x0, x0, #0x998
  4012c0:	b	4012cc <ansi_normal+0x2c>
  4012c4:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  4012c8:	add	x0, x0, #0x9a0
  4012cc:	ldp	x29, x30, [sp], #16
  4012d0:	ret

00000000004012d4 <ansi_highlight>:
  4012d4:	stp	x29, x30, [sp, #-16]!
  4012d8:	mov	x29, sp
  4012dc:	bl	400f20 <colors_enabled@plt>
  4012e0:	and	w0, w0, #0xff
  4012e4:	cmp	w0, #0x0
  4012e8:	b.eq	4012f8 <ansi_highlight+0x24>  // b.none
  4012ec:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  4012f0:	add	x0, x0, #0x9a8
  4012f4:	b	401300 <ansi_highlight+0x2c>
  4012f8:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  4012fc:	add	x0, x0, #0x9a0
  401300:	ldp	x29, x30, [sp], #16
  401304:	ret

0000000000401308 <help>:
  401308:	stp	x29, x30, [sp, #-64]!
  40130c:	mov	x29, sp
  401310:	stp	x19, x20, [sp, #16]
  401314:	adrp	x0, 412000 <__FRAME_END__+0x100a8>
  401318:	add	x0, x0, #0xcd0
  40131c:	ldr	x1, [x0]
  401320:	str	x1, [sp, #56]
  401324:	mov	x1, #0x0                   	// #0
  401328:	str	xzr, [sp, #48]
  40132c:	add	x0, sp, #0x30
  401330:	mov	x2, x0
  401334:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401338:	add	x1, x0, #0x9b8
  40133c:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401340:	add	x0, x0, #0x9c0
  401344:	bl	400e90 <terminal_urlify_man@plt>
  401348:	str	w0, [sp, #44]
  40134c:	ldr	w0, [sp, #44]
  401350:	cmp	w0, #0x0
  401354:	b.ge	40137c <help+0x74>  // b.tcont
  401358:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  40135c:	add	x1, x0, #0x9eb
  401360:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401364:	add	x3, x0, #0xc08
  401368:	mov	w2, #0x18                  	// #24
  40136c:	mov	w0, #0x0                   	// #0
  401370:	bl	400f70 <log_oom_internal@plt>
  401374:	mov	w19, w0
  401378:	b	4013bc <help+0xb4>
  40137c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401380:	add	x0, x0, #0x8
  401384:	ldr	x19, [x0]
  401388:	bl	4012d4 <ansi_highlight>
  40138c:	mov	x20, x0
  401390:	bl	4012a0 <ansi_normal>
  401394:	mov	x1, x0
  401398:	ldr	x0, [sp, #48]
  40139c:	mov	x4, x0
  4013a0:	mov	x3, x1
  4013a4:	mov	x2, x20
  4013a8:	mov	x1, x19
  4013ac:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  4013b0:	add	x0, x0, #0xa10
  4013b4:	bl	400f50 <printf@plt>
  4013b8:	mov	w19, #0x0                   	// #0
  4013bc:	add	x0, sp, #0x30
  4013c0:	bl	4011bc <freep>
  4013c4:	mov	w1, w19
  4013c8:	adrp	x0, 412000 <__FRAME_END__+0x100a8>
  4013cc:	add	x0, x0, #0xcd0
  4013d0:	ldr	x2, [sp, #56]
  4013d4:	ldr	x0, [x0]
  4013d8:	eor	x0, x2, x0
  4013dc:	cmp	x0, #0x0
  4013e0:	b.eq	4013e8 <help+0xe0>  // b.none
  4013e4:	bl	400ea0 <__stack_chk_fail@plt>
  4013e8:	mov	w0, w1
  4013ec:	ldp	x19, x20, [sp, #16]
  4013f0:	ldp	x29, x30, [sp], #64
  4013f4:	ret

00000000004013f8 <parse_argv>:
  4013f8:	stp	x29, x30, [sp, #-48]!
  4013fc:	mov	x29, sp
  401400:	str	w0, [sp, #28]
  401404:	str	x1, [sp, #16]
  401408:	ldr	w0, [sp, #28]
  40140c:	lsr	w0, w0, #31
  401410:	and	w0, w0, #0xff
  401414:	and	x0, x0, #0xff
  401418:	cmp	x0, #0x0
  40141c:	b.eq	401448 <parse_argv+0x50>  // b.none
  401420:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401424:	add	x1, x0, #0x9eb
  401428:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  40142c:	add	x4, x0, #0xc10
  401430:	mov	w3, #0x36                  	// #54
  401434:	mov	x2, x1
  401438:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  40143c:	add	x1, x0, #0xaa8
  401440:	mov	w0, #0x0                   	// #0
  401444:	bl	400e50 <log_assert_failed_realm@plt>
  401448:	ldr	x0, [sp, #16]
  40144c:	cmp	x0, #0x0
  401450:	cset	w0, eq  // eq = none
  401454:	and	w0, w0, #0xff
  401458:	and	x0, x0, #0xff
  40145c:	cmp	x0, #0x0
  401460:	b.eq	401500 <parse_argv+0x108>  // b.none
  401464:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401468:	add	x1, x0, #0x9eb
  40146c:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401470:	add	x4, x0, #0xc10
  401474:	mov	w3, #0x37                  	// #55
  401478:	mov	x2, x1
  40147c:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401480:	add	x1, x0, #0xab8
  401484:	mov	w0, #0x0                   	// #0
  401488:	bl	400e50 <log_assert_failed_realm@plt>
  40148c:	ldr	w0, [sp, #44]
  401490:	cmp	w0, #0x101
  401494:	b.eq	4014c8 <parse_argv+0xd0>  // b.none
  401498:	ldr	w0, [sp, #44]
  40149c:	cmp	w0, #0x101
  4014a0:	b.gt	4014d8 <parse_argv+0xe0>
  4014a4:	ldr	w0, [sp, #44]
  4014a8:	cmp	w0, #0x3f
  4014ac:	b.eq	4014d0 <parse_argv+0xd8>  // b.none
  4014b0:	ldr	w0, [sp, #44]
  4014b4:	cmp	w0, #0x68
  4014b8:	b.ne	4014d8 <parse_argv+0xe0>  // b.any
  4014bc:	bl	401308 <help>
  4014c0:	mov	w0, #0x0                   	// #0
  4014c4:	b	401538 <parse_argv+0x140>
  4014c8:	bl	400ec0 <version@plt>
  4014cc:	b	401538 <parse_argv+0x140>
  4014d0:	mov	w0, #0xffffffea            	// #-22
  4014d4:	b	401538 <parse_argv+0x140>
  4014d8:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  4014dc:	add	x1, x0, #0x9eb
  4014e0:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  4014e4:	add	x4, x0, #0xc10
  4014e8:	mov	w3, #0x47                  	// #71
  4014ec:	mov	x2, x1
  4014f0:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  4014f4:	add	x1, x0, #0xac0
  4014f8:	mov	w0, #0x0                   	// #0
  4014fc:	bl	400e70 <log_assert_failed_unreachable_realm@plt>
  401500:	nop
  401504:	mov	x4, #0x0                   	// #0
  401508:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  40150c:	add	x3, x0, #0xc20
  401510:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401514:	add	x2, x0, #0xad0
  401518:	ldr	x1, [sp, #16]
  40151c:	ldr	w0, [sp, #28]
  401520:	bl	400e60 <getopt_long@plt>
  401524:	str	w0, [sp, #44]
  401528:	ldr	w0, [sp, #44]
  40152c:	cmp	w0, #0x0
  401530:	b.ge	40148c <parse_argv+0x94>  // b.tcont
  401534:	mov	w0, #0x1                   	// #1
  401538:	ldp	x29, x30, [sp], #48
  40153c:	ret

0000000000401540 <run>:
  401540:	stp	x29, x30, [sp, #-144]!
  401544:	mov	x29, sp
  401548:	stp	x19, x20, [sp, #16]
  40154c:	str	w0, [sp, #44]
  401550:	str	x1, [sp, #32]
  401554:	adrp	x0, 412000 <__FRAME_END__+0x100a8>
  401558:	add	x0, x0, #0xcd0
  40155c:	ldr	x1, [x0]
  401560:	str	x1, [sp, #136]
  401564:	mov	x1, #0x0                   	// #0
  401568:	str	xzr, [sp, #112]
  40156c:	str	xzr, [sp, #120]
  401570:	str	wzr, [sp, #128]
  401574:	str	xzr, [sp, #104]
  401578:	mov	w0, #0x0                   	// #0
  40157c:	bl	400e40 <log_parse_environment_realm@plt>
  401580:	bl	400f60 <log_open@plt>
  401584:	ldr	x1, [sp, #32]
  401588:	ldr	w0, [sp, #44]
  40158c:	bl	4013f8 <parse_argv>
  401590:	str	w0, [sp, #52]
  401594:	ldr	w0, [sp, #52]
  401598:	cmp	w0, #0x0
  40159c:	b.gt	4015a8 <run+0x68>
  4015a0:	ldr	w19, [sp, #52]
  4015a4:	b	40184c <run+0x30c>
  4015a8:	add	x0, sp, #0x68
  4015ac:	bl	400f10 <sd_bus_open_system@plt>
  4015b0:	str	w0, [sp, #52]
  4015b4:	ldr	w0, [sp, #52]
  4015b8:	cmp	w0, #0x0
  4015bc:	b.ge	40164c <run+0x10c>  // b.tcont
  4015c0:	mov	w0, #0x3                   	// #3
  4015c4:	str	w0, [sp, #92]
  4015c8:	ldr	w0, [sp, #52]
  4015cc:	str	w0, [sp, #96]
  4015d0:	str	wzr, [sp, #100]
  4015d4:	ldr	w0, [sp, #100]
  4015d8:	bl	400f80 <log_get_max_level_realm@plt>
  4015dc:	mov	w1, w0
  4015e0:	ldr	w0, [sp, #92]
  4015e4:	and	w0, w0, #0x7
  4015e8:	cmp	w1, w0
  4015ec:	b.lt	401634 <run+0xf4>  // b.tstop
  4015f0:	ldr	w0, [sp, #100]
  4015f4:	lsl	w1, w0, #10
  4015f8:	ldr	w0, [sp, #92]
  4015fc:	orr	w6, w1, w0
  401600:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401604:	add	x1, x0, #0x9eb
  401608:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  40160c:	add	x5, x0, #0xad8
  401610:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401614:	add	x4, x0, #0xc80
  401618:	mov	w3, #0x5c                  	// #92
  40161c:	mov	x2, x1
  401620:	ldr	w1, [sp, #96]
  401624:	mov	w0, w6
  401628:	bl	400ef0 <log_internal_realm@plt>
  40162c:	mov	w19, w0
  401630:	b	40184c <run+0x30c>
  401634:	ldr	w0, [sp, #96]
  401638:	cmp	w0, #0x0
  40163c:	cneg	w0, w0, lt  // lt = tstop
  401640:	and	w0, w0, #0xff
  401644:	neg	w19, w0
  401648:	b	40184c <run+0x30c>
  40164c:	ldr	x8, [sp, #104]
  401650:	add	x1, sp, #0x30
  401654:	add	x0, sp, #0x70
  401658:	mov	x7, x1
  40165c:	mov	w6, #0x75                  	// #117
  401660:	mov	x5, x0
  401664:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401668:	add	x4, x0, #0xb00
  40166c:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401670:	add	x3, x0, #0xb10
  401674:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401678:	add	x2, x0, #0xb38
  40167c:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401680:	add	x1, x0, #0xb58
  401684:	mov	x0, x8
  401688:	bl	400e10 <sd_bus_get_property_trivial@plt>
  40168c:	str	w0, [sp, #52]
  401690:	ldr	w0, [sp, #52]
  401694:	cmp	w0, #0x0
  401698:	b.ge	401738 <run+0x1f8>  // b.tcont
  40169c:	mov	w0, #0x3                   	// #3
  4016a0:	str	w0, [sp, #80]
  4016a4:	ldr	w0, [sp, #52]
  4016a8:	str	w0, [sp, #84]
  4016ac:	str	wzr, [sp, #88]
  4016b0:	ldr	w0, [sp, #88]
  4016b4:	bl	400f80 <log_get_max_level_realm@plt>
  4016b8:	mov	w1, w0
  4016bc:	ldr	w0, [sp, #80]
  4016c0:	and	w0, w0, #0x7
  4016c4:	cmp	w1, w0
  4016c8:	b.lt	401720 <run+0x1e0>  // b.tstop
  4016cc:	ldr	w0, [sp, #88]
  4016d0:	lsl	w1, w0, #10
  4016d4:	ldr	w0, [sp, #80]
  4016d8:	orr	w19, w1, w0
  4016dc:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  4016e0:	add	x20, x0, #0x9eb
  4016e4:	add	x0, sp, #0x70
  4016e8:	ldr	w1, [sp, #52]
  4016ec:	bl	400df0 <bus_error_message@plt>
  4016f0:	mov	x6, x0
  4016f4:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  4016f8:	add	x5, x0, #0xb78
  4016fc:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401700:	add	x4, x0, #0xc80
  401704:	mov	w3, #0x68                  	// #104
  401708:	mov	x2, x20
  40170c:	ldr	w1, [sp, #84]
  401710:	mov	w0, w19
  401714:	bl	400ef0 <log_internal_realm@plt>
  401718:	mov	w19, w0
  40171c:	b	40184c <run+0x30c>
  401720:	ldr	w0, [sp, #84]
  401724:	cmp	w0, #0x0
  401728:	cneg	w0, w0, lt  // lt = tstop
  40172c:	and	w0, w0, #0xff
  401730:	neg	w19, w0
  401734:	b	40184c <run+0x30c>
  401738:	ldr	w0, [sp, #48]
  40173c:	cmp	w0, #0x0
  401740:	b.eq	4017c4 <run+0x284>  // b.none
  401744:	mov	w0, #0x5                   	// #5
  401748:	str	w0, [sp, #68]
  40174c:	str	wzr, [sp, #72]
  401750:	str	wzr, [sp, #76]
  401754:	ldr	w0, [sp, #76]
  401758:	bl	400f80 <log_get_max_level_realm@plt>
  40175c:	mov	w1, w0
  401760:	ldr	w0, [sp, #68]
  401764:	and	w0, w0, #0x7
  401768:	cmp	w1, w0
  40176c:	b.lt	4017b8 <run+0x278>  // b.tstop
  401770:	ldr	w0, [sp, #76]
  401774:	lsl	w1, w0, #10
  401778:	ldr	w0, [sp, #68]
  40177c:	orr	w7, w1, w0
  401780:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401784:	add	x1, x0, #0x9eb
  401788:	ldr	w0, [sp, #48]
  40178c:	mov	w6, w0
  401790:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401794:	add	x5, x0, #0xba0
  401798:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  40179c:	add	x4, x0, #0xc80
  4017a0:	mov	w3, #0x6b                  	// #107
  4017a4:	mov	x2, x1
  4017a8:	ldr	w1, [sp, #72]
  4017ac:	mov	w0, w7
  4017b0:	bl	400ef0 <log_internal_realm@plt>
  4017b4:	b	401838 <run+0x2f8>
  4017b8:	ldr	w0, [sp, #72]
  4017bc:	cmp	w0, #0x0
  4017c0:	b	401838 <run+0x2f8>
  4017c4:	mov	w0, #0x6                   	// #6
  4017c8:	str	w0, [sp, #56]
  4017cc:	str	wzr, [sp, #60]
  4017d0:	str	wzr, [sp, #64]
  4017d4:	ldr	w0, [sp, #64]
  4017d8:	bl	400f80 <log_get_max_level_realm@plt>
  4017dc:	mov	w1, w0
  4017e0:	ldr	w0, [sp, #56]
  4017e4:	and	w0, w0, #0x7
  4017e8:	cmp	w1, w0
  4017ec:	b.lt	401830 <run+0x2f0>  // b.tstop
  4017f0:	ldr	w0, [sp, #64]
  4017f4:	lsl	w1, w0, #10
  4017f8:	ldr	w0, [sp, #56]
  4017fc:	orr	w6, w1, w0
  401800:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401804:	add	x1, x0, #0x9eb
  401808:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  40180c:	add	x5, x0, #0xbc8
  401810:	adrp	x0, 401000 <deregister_tm_clones+0xc>
  401814:	add	x4, x0, #0xc80
  401818:	mov	w3, #0x6d                  	// #109
  40181c:	mov	x2, x1
  401820:	ldr	w1, [sp, #60]
  401824:	mov	w0, w6
  401828:	bl	400ef0 <log_internal_realm@plt>
  40182c:	b	401838 <run+0x2f8>
  401830:	ldr	w0, [sp, #60]
  401834:	cmp	w0, #0x0
  401838:	ldr	w0, [sp, #48]
  40183c:	cmp	w0, #0x0
  401840:	cset	w0, ne  // ne = any
  401844:	and	w0, w0, #0xff
  401848:	mov	w19, w0
  40184c:	add	x0, sp, #0x68
  401850:	bl	401158 <sd_bus_flush_close_unrefp>
  401854:	add	x0, sp, #0x70
  401858:	bl	400ee0 <sd_bus_error_free@plt>
  40185c:	mov	w1, w19
  401860:	adrp	x0, 412000 <__FRAME_END__+0x100a8>
  401864:	add	x0, x0, #0xcd0
  401868:	ldr	x2, [sp, #136]
  40186c:	ldr	x0, [x0]
  401870:	eor	x0, x2, x0
  401874:	cmp	x0, #0x0
  401878:	b.eq	401880 <run+0x340>  // b.none
  40187c:	bl	400ea0 <__stack_chk_fail@plt>
  401880:	mov	w0, w1
  401884:	ldp	x19, x20, [sp, #16]
  401888:	ldp	x29, x30, [sp], #144
  40188c:	ret

0000000000401890 <main>:
  401890:	stp	x29, x30, [sp, #-48]!
  401894:	mov	x29, sp
  401898:	str	w0, [sp, #28]
  40189c:	str	x1, [sp, #16]
  4018a0:	ldr	x1, [sp, #16]
  4018a4:	ldr	w0, [sp, #28]
  4018a8:	bl	4011e0 <save_argc_argv>
  4018ac:	ldr	x1, [sp, #16]
  4018b0:	ldr	w0, [sp, #28]
  4018b4:	bl	401540 <run>
  4018b8:	str	w0, [sp, #44]
  4018bc:	bl	400eb0 <ask_password_agent_close@plt>
  4018c0:	bl	400e30 <polkit_agent_close@plt>
  4018c4:	bl	400ed0 <pager_close@plt>
  4018c8:	bl	400f40 <mac_selinux_finish@plt>
  4018cc:	bl	401218 <static_destruct>
  4018d0:	ldr	w0, [sp, #44]
  4018d4:	cmp	w0, #0x0
  4018d8:	b.lt	4018e4 <main+0x54>  // b.tstop
  4018dc:	ldr	w0, [sp, #44]
  4018e0:	b	4018e8 <main+0x58>
  4018e4:	mov	w0, #0x1                   	// #1
  4018e8:	ldp	x29, x30, [sp], #48
  4018ec:	ret

00000000004018f0 <__libc_csu_init>:
  4018f0:	stp	x29, x30, [sp, #-64]!
  4018f4:	mov	x29, sp
  4018f8:	stp	x19, x20, [sp, #16]
  4018fc:	adrp	x20, 412000 <__FRAME_END__+0x100a8>
  401900:	add	x20, x20, #0xcc8
  401904:	stp	x21, x22, [sp, #32]
  401908:	adrp	x21, 412000 <__FRAME_END__+0x100a8>
  40190c:	add	x21, x21, #0xcc0
  401910:	sub	x20, x20, x21
  401914:	mov	w22, w0
  401918:	stp	x23, x24, [sp, #48]
  40191c:	mov	x23, x1
  401920:	mov	x24, x2
  401924:	bl	400db0 <_init>
  401928:	cmp	xzr, x20, asr #3
  40192c:	b.eq	401958 <__libc_csu_init+0x68>  // b.none
  401930:	asr	x20, x20, #3
  401934:	mov	x19, #0x0                   	// #0
  401938:	ldr	x3, [x21, x19, lsl #3]
  40193c:	mov	x2, x24
  401940:	add	x19, x19, #0x1
  401944:	mov	x1, x23
  401948:	mov	w0, w22
  40194c:	blr	x3
  401950:	cmp	x20, x19
  401954:	b.ne	401938 <__libc_csu_init+0x48>  // b.any
  401958:	ldp	x19, x20, [sp, #16]
  40195c:	ldp	x21, x22, [sp, #32]
  401960:	ldp	x23, x24, [sp, #48]
  401964:	ldp	x29, x30, [sp], #64
  401968:	ret
  40196c:	nop

0000000000401970 <__libc_csu_fini>:
  401970:	ret

Disassembly of section .fini:

0000000000401974 <_fini>:
  401974:	stp	x29, x30, [sp, #-16]!
  401978:	mov	x29, sp
  40197c:	ldp	x29, x30, [sp], #16
  401980:	ret
