
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ata_id_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401090 <_init>:
  401090:	stp	x29, x30, [sp, #-16]!
  401094:	mov	x29, sp
  401098:	bl	401320 <call_weak_fn>
  40109c:	ldp	x29, x30, [sp], #16
  4010a0:	ret

Disassembly of section .plt:

00000000004010b0 <.plt>:
  4010b0:	stp	x16, x30, [sp, #-16]!
  4010b4:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4010b8:	ldr	x17, [x16, #3808]
  4010bc:	add	x16, x16, #0xee0
  4010c0:	br	x17
  4010c4:	nop
  4010c8:	nop
  4010cc:	nop

00000000004010d0 <strscpy@plt>:
  4010d0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4010d4:	ldr	x17, [x16, #3816]
  4010d8:	add	x16, x16, #0xee8
  4010dc:	br	x17

00000000004010e0 <__libc_start_main@plt>:
  4010e0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4010e4:	ldr	x17, [x16, #3824]
  4010e8:	add	x16, x16, #0xef0
  4010ec:	br	x17

00000000004010f0 <__gmon_start__@plt>:
  4010f0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4010f4:	ldr	x17, [x16, #3832]
  4010f8:	add	x16, x16, #0xef8
  4010fc:	br	x17

0000000000401100 <log_parse_environment_realm@plt>:
  401100:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401104:	ldr	x17, [x16, #3840]
  401108:	add	x16, x16, #0xf00
  40110c:	br	x17

0000000000401110 <strscpyl@plt>:
  401110:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401114:	ldr	x17, [x16, #3848]
  401118:	add	x16, x16, #0xf08
  40111c:	br	x17

0000000000401120 <sd_device_new_from_subsystem_sysname@plt>:
  401120:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401124:	ldr	x17, [x16, #3856]
  401128:	add	x16, x16, #0xf10
  40112c:	br	x17

0000000000401130 <memcpy@plt>:
  401130:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401134:	ldr	x17, [x16, #3864]
  401138:	add	x16, x16, #0xf18
  40113c:	br	x17

0000000000401140 <__ctype_b_loc@plt>:
  401140:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401144:	ldr	x17, [x16, #3872]
  401148:	add	x16, x16, #0xf20
  40114c:	br	x17

0000000000401150 <safe_close@plt>:
  401150:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401154:	ldr	x17, [x16, #3880]
  401158:	add	x16, x16, #0xf28
  40115c:	br	x17

0000000000401160 <log_assert_failed_realm@plt>:
  401160:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401164:	ldr	x17, [x16, #3888]
  401168:	add	x16, x16, #0xf30
  40116c:	br	x17

0000000000401170 <utf8_encoded_valid_unichar@plt>:
  401170:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401174:	ldr	x17, [x16, #3896]
  401178:	add	x16, x16, #0xf38
  40117c:	br	x17

0000000000401180 <getopt_long@plt>:
  401180:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401184:	ldr	x17, [x16, #3904]
  401188:	add	x16, x16, #0xf40
  40118c:	br	x17

0000000000401190 <encode_devnode_name@plt>:
  401190:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401194:	ldr	x17, [x16, #3912]
  401198:	add	x16, x16, #0xf48
  40119c:	br	x17

00000000004011a0 <abort@plt>:
  4011a0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4011a4:	ldr	x17, [x16, #3920]
  4011a8:	add	x16, x16, #0xf50
  4011ac:	br	x17

00000000004011b0 <strspn@plt>:
  4011b0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4011b4:	ldr	x17, [x16, #3928]
  4011b8:	add	x16, x16, #0xf58
  4011bc:	br	x17

00000000004011c0 <__errno_location@plt>:
  4011c0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4011c4:	ldr	x17, [x16, #3936]
  4011c8:	add	x16, x16, #0xf60
  4011cc:	br	x17

00000000004011d0 <log_set_target@plt>:
  4011d0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4011d4:	ldr	x17, [x16, #3944]
  4011d8:	add	x16, x16, #0xf68
  4011dc:	br	x17

00000000004011e0 <__stack_chk_fail@plt>:
  4011e0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4011e4:	ldr	x17, [x16, #3952]
  4011e8:	add	x16, x16, #0xf70
  4011ec:	br	x17

00000000004011f0 <udev_parse_config_full@plt>:
  4011f0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4011f4:	ldr	x17, [x16, #3960]
  4011f8:	add	x16, x16, #0xf78
  4011fc:	br	x17

0000000000401200 <log_internal_realm@plt>:
  401200:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401204:	ldr	x17, [x16, #3968]
  401208:	add	x16, x16, #0xf80
  40120c:	br	x17

0000000000401210 <ioctl@plt>:
  401210:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401214:	ldr	x17, [x16, #3976]
  401218:	add	x16, x16, #0xf88
  40121c:	br	x17

0000000000401220 <whitelisted_char_for_devnode@plt>:
  401220:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401224:	ldr	x17, [x16, #3984]
  401228:	add	x16, x16, #0xf90
  40122c:	br	x17

0000000000401230 <strchr@plt>:
  401230:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401234:	ldr	x17, [x16, #3992]
  401238:	add	x16, x16, #0xf98
  40123c:	br	x17

0000000000401240 <sd_device_get_sysattr_value@plt>:
  401240:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401244:	ldr	x17, [x16, #4000]
  401248:	add	x16, x16, #0xfa0
  40124c:	br	x17

0000000000401250 <puts@plt>:
  401250:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401254:	ldr	x17, [x16, #4008]
  401258:	add	x16, x16, #0xfa8
  40125c:	br	x17

0000000000401260 <sd_device_unref@plt>:
  401260:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401264:	ldr	x17, [x16, #4016]
  401268:	add	x16, x16, #0xfb0
  40126c:	br	x17

0000000000401270 <printf@plt>:
  401270:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401274:	ldr	x17, [x16, #4024]
  401278:	add	x16, x16, #0xfb8
  40127c:	br	x17

0000000000401280 <open64@plt>:
  401280:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401284:	ldr	x17, [x16, #4032]
  401288:	add	x16, x16, #0xfc0
  40128c:	br	x17

0000000000401290 <sd_device_get_syspath@plt>:
  401290:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  401294:	ldr	x17, [x16, #4040]
  401298:	add	x16, x16, #0xfc8
  40129c:	br	x17

00000000004012a0 <log_open@plt>:
  4012a0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4012a4:	ldr	x17, [x16, #4048]
  4012a8:	add	x16, x16, #0xfd0
  4012ac:	br	x17

00000000004012b0 <memset@plt>:
  4012b0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4012b4:	ldr	x17, [x16, #4056]
  4012b8:	add	x16, x16, #0xfd8
  4012bc:	br	x17

00000000004012c0 <log_get_max_level_realm@plt>:
  4012c0:	adrp	x16, 413000 <__FRAME_END__+0xfda0>
  4012c4:	ldr	x17, [x16, #4064]
  4012c8:	add	x16, x16, #0xfe0
  4012cc:	br	x17

Disassembly of section .text:

00000000004012d0 <_start>:
  4012d0:	mov	x29, #0x0                   	// #0
  4012d4:	mov	x30, #0x0                   	// #0
  4012d8:	mov	x5, x0
  4012dc:	ldr	x1, [sp]
  4012e0:	add	x2, sp, #0x8
  4012e4:	mov	x6, sp
  4012e8:	movz	x0, #0x0, lsl #48
  4012ec:	movk	x0, #0x0, lsl #32
  4012f0:	movk	x0, #0x40, lsl #16
  4012f4:	movk	x0, #0x1460
  4012f8:	movz	x3, #0x0, lsl #48
  4012fc:	movk	x3, #0x0, lsl #32
  401300:	movk	x3, #0x40, lsl #16
  401304:	movk	x3, #0x2678
  401308:	movz	x4, #0x0, lsl #48
  40130c:	movk	x4, #0x0, lsl #32
  401310:	movk	x4, #0x40, lsl #16
  401314:	movk	x4, #0x26f8
  401318:	bl	4010e0 <__libc_start_main@plt>
  40131c:	bl	4011a0 <abort@plt>

0000000000401320 <call_weak_fn>:
  401320:	adrp	x0, 413000 <__FRAME_END__+0xfda0>
  401324:	ldr	x0, [x0, #4080]
  401328:	cbz	x0, 401330 <call_weak_fn+0x10>
  40132c:	b	4010f0 <__gmon_start__@plt>
  401330:	ret

0000000000401334 <deregister_tm_clones>:
  401334:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401338:	add	x0, x0, #0x0
  40133c:	adrp	x1, 414000 <__progname@@GLIBC_2.17>
  401340:	add	x1, x1, #0x0
  401344:	cmp	x0, x1
  401348:	b.eq	40137c <deregister_tm_clones+0x48>  // b.none
  40134c:	stp	x29, x30, [sp, #-32]!
  401350:	mov	x29, sp
  401354:	adrp	x0, 402000 <main+0xba0>
  401358:	ldr	x0, [x0, #1808]
  40135c:	str	x0, [sp, #24]
  401360:	mov	x1, x0
  401364:	cbz	x1, 401374 <deregister_tm_clones+0x40>
  401368:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  40136c:	add	x0, x0, #0x0
  401370:	blr	x1
  401374:	ldp	x29, x30, [sp], #32
  401378:	ret
  40137c:	ret

0000000000401380 <register_tm_clones>:
  401380:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401384:	add	x0, x0, #0x0
  401388:	adrp	x1, 414000 <__progname@@GLIBC_2.17>
  40138c:	add	x1, x1, #0x0
  401390:	sub	x0, x0, x1
  401394:	lsr	x1, x0, #63
  401398:	add	x0, x1, x0, asr #3
  40139c:	cmp	xzr, x0, asr #1
  4013a0:	b.eq	4013d8 <register_tm_clones+0x58>  // b.none
  4013a4:	stp	x29, x30, [sp, #-32]!
  4013a8:	mov	x29, sp
  4013ac:	asr	x1, x0, #1
  4013b0:	adrp	x0, 402000 <main+0xba0>
  4013b4:	ldr	x0, [x0, #1816]
  4013b8:	str	x0, [sp, #24]
  4013bc:	mov	x2, x0
  4013c0:	cbz	x2, 4013d0 <register_tm_clones+0x50>
  4013c4:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  4013c8:	add	x0, x0, #0x0
  4013cc:	blr	x2
  4013d0:	ldp	x29, x30, [sp], #32
  4013d4:	ret
  4013d8:	ret

00000000004013dc <__do_global_dtors_aux>:
  4013dc:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  4013e0:	ldrb	w0, [x0, #12]
  4013e4:	cbnz	w0, 401408 <__do_global_dtors_aux+0x2c>
  4013e8:	stp	x29, x30, [sp, #-16]!
  4013ec:	mov	x29, sp
  4013f0:	bl	401334 <deregister_tm_clones>
  4013f4:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  4013f8:	mov	w1, #0x1                   	// #1
  4013fc:	strb	w1, [x0, #12]
  401400:	ldp	x29, x30, [sp], #16
  401404:	ret
  401408:	ret

000000000040140c <frame_dummy>:
  40140c:	stp	x29, x30, [sp, #-16]!
  401410:	mov	x29, sp
  401414:	bl	401380 <register_tm_clones>
  401418:	ldp	x29, x30, [sp], #16
  40141c:	ret

0000000000401420 <disk_identify_get_string>:
  401420:	cbz	x3, 40145c <disk_identify_get_string+0x3c>
  401424:	lsl	w1, w1, #1
  401428:	sub	w4, w1, w2
  40142c:	mov	x1, x2
  401430:	add	w6, w4, #0x1
  401434:	add	x5, x2, x3
  401438:	add	w2, w6, w1
  40143c:	ldrb	w3, [x0, w2, uxtw]
  401440:	add	w2, w4, w1
  401444:	ldrb	w2, [x0, w2, uxtw]
  401448:	strb	w3, [x1]
  40144c:	strb	w2, [x1, #1]
  401450:	add	x1, x1, #0x2
  401454:	cmp	x5, x1
  401458:	b.ne	401438 <disk_identify_get_string+0x18>  // b.any
  40145c:	ret

0000000000401460 <main>:
  401460:	sub	sp, sp, #0x6b0
  401464:	stp	x29, x30, [sp]
  401468:	mov	x29, sp
  40146c:	stp	x19, x20, [sp, #16]
  401470:	stp	x21, x22, [sp, #32]
  401474:	stp	x23, x24, [sp, #48]
  401478:	str	x25, [sp, #64]
  40147c:	mov	w24, w0
  401480:	mov	x23, x1
  401484:	adrp	x0, 413000 <__FRAME_END__+0xfda0>
  401488:	ldr	x1, [x0, #3224]
  40148c:	str	x1, [sp, #1704]
  401490:	mov	x1, #0x0                   	// #0
  401494:	mov	w0, #0x7                   	// #7
  401498:	bl	4011d0 <log_set_target@plt>
  40149c:	mov	x3, #0x0                   	// #0
  4014a0:	mov	x2, #0x0                   	// #0
  4014a4:	mov	x1, #0x0                   	// #0
  4014a8:	mov	x0, #0x0                   	// #0
  4014ac:	bl	4011f0 <udev_parse_config_full@plt>
  4014b0:	mov	w0, #0x1                   	// #1
  4014b4:	bl	401100 <log_parse_environment_realm@plt>
  4014b8:	bl	4012a0 <log_open@plt>
  4014bc:	mov	w22, #0x0                   	// #0
  4014c0:	adrp	x21, 402000 <main+0xba0>
  4014c4:	add	x21, x21, #0xe38
  4014c8:	adrp	x20, 402000 <main+0xba0>
  4014cc:	add	x20, x20, #0x720
  4014d0:	mov	w25, #0x1                   	// #1
  4014d4:	b	4014e0 <main+0x80>
  4014d8:	cmp	w0, #0x78
  4014dc:	csel	w22, w22, w25, ne  // ne = any
  4014e0:	mov	x4, #0x0                   	// #0
  4014e4:	mov	x3, x21
  4014e8:	mov	x2, x20
  4014ec:	mov	x1, x23
  4014f0:	mov	w0, w24
  4014f4:	bl	401180 <getopt_long@plt>
  4014f8:	mov	w19, w0
  4014fc:	cmn	w0, #0x1
  401500:	b.eq	401564 <main+0x104>  // b.none
  401504:	cmp	w0, #0x68
  401508:	b.ne	4014d8 <main+0x78>  // b.any
  40150c:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401510:	ldr	x1, [x0]
  401514:	adrp	x0, 402000 <main+0xba0>
  401518:	add	x0, x0, #0x728
  40151c:	bl	401270 <printf@plt>
  401520:	mov	w20, #0xffffffff            	// #-1
  401524:	mov	w22, #0x0                   	// #0
  401528:	mov	w0, w20
  40152c:	bl	401150 <safe_close@plt>
  401530:	adrp	x0, 413000 <__FRAME_END__+0xfda0>
  401534:	ldr	x1, [sp, #1704]
  401538:	ldr	x0, [x0, #3224]
  40153c:	eor	x0, x1, x0
  401540:	cbnz	x0, 40204c <main+0xbec>
  401544:	mov	w0, w22
  401548:	ldp	x19, x20, [sp, #16]
  40154c:	ldp	x21, x22, [sp, #32]
  401550:	ldp	x23, x24, [sp, #48]
  401554:	ldr	x25, [sp, #64]
  401558:	ldp	x29, x30, [sp]
  40155c:	add	sp, sp, #0x6b0
  401560:	ret
  401564:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401568:	ldrsw	x0, [x0, #8]
  40156c:	ldr	x24, [x23, x0, lsl #3]
  401570:	cbz	x24, 401668 <main+0x208>
  401574:	mov	w1, #0x800                 	// #2048
  401578:	movk	w1, #0x8, lsl #16
  40157c:	mov	x0, x24
  401580:	bl	401280 <open64@plt>
  401584:	mov	w20, w0
  401588:	tbnz	w0, #31, 4016b8 <main+0x258>
  40158c:	mov	x2, #0x200                 	// #512
  401590:	mov	w1, #0x0                   	// #0
  401594:	add	x0, sp, #0x350
  401598:	bl	4012b0 <memset@plt>
  40159c:	add	x0, sp, #0x600
  4015a0:	stur	wzr, [x0, #-159]
  4015a4:	strb	wzr, [sp, #1381]
  4015a8:	mov	w0, #0x12                  	// #18
  4015ac:	strb	w0, [sp, #1376]
  4015b0:	mov	w0, #0x24                  	// #36
  4015b4:	strb	w0, [sp, #1380]
  4015b8:	add	x0, sp, #0x600
  4015bc:	stp	xzr, xzr, [x0, #-136]
  4015c0:	stp	xzr, xzr, [x0, #-120]
  4015c4:	mov	x2, #0xa0                  	// #160
  4015c8:	mov	w1, #0x0                   	// #0
  4015cc:	add	x0, sp, #0xb0
  4015d0:	bl	4012b0 <memset@plt>
  4015d4:	mov	w0, #0x51                  	// #81
  4015d8:	str	w0, [sp, #176]
  4015dc:	mov	w0, #0x6                   	// #6
  4015e0:	str	w0, [sp, #188]
  4015e4:	add	x0, sp, #0x560
  4015e8:	str	x0, [sp, #192]
  4015ec:	mov	w0, #0x20                  	// #32
  4015f0:	str	w0, [sp, #220]
  4015f4:	add	x0, sp, #0x578
  4015f8:	str	x0, [sp, #224]
  4015fc:	mov	w0, #0x24                  	// #36
  401600:	str	w0, [sp, #244]
  401604:	add	x0, sp, #0x5a8
  401608:	str	x0, [sp, #256]
  40160c:	mov	w0, #0x7530                	// #30000
  401610:	str	w0, [sp, #264]
  401614:	add	x2, sp, #0xb0
  401618:	mov	x1, #0x2285                	// #8837
  40161c:	mov	w0, w20
  401620:	bl	401210 <ioctl@plt>
  401624:	cbz	w0, 40177c <main+0x31c>
  401628:	bl	4011c0 <__errno_location@plt>
  40162c:	mov	x21, x0
  401630:	ldr	w0, [x0]
  401634:	cmp	w0, #0x16
  401638:	b.eq	401704 <main+0x2a4>  // b.none
  40163c:	add	x2, sp, #0x150
  401640:	mov	x1, #0x30d                 	// #781
  401644:	mov	w0, w20
  401648:	bl	401210 <ioctl@plt>
  40164c:	cbz	w0, 401f94 <main+0xb34>
  401650:	mov	w0, #0x1                   	// #1
  401654:	bl	4012c0 <log_get_max_level_realm@plt>
  401658:	cmp	w0, #0x6
  40165c:	b.gt	401a90 <main+0x630>
  401660:	mov	w22, #0x2                   	// #2
  401664:	b	401528 <main+0xc8>
  401668:	mov	w0, #0x1                   	// #1
  40166c:	bl	4012c0 <log_get_max_level_realm@plt>
  401670:	cmp	w0, #0x2
  401674:	b.gt	401684 <main+0x224>
  401678:	mov	w20, w19
  40167c:	mov	w22, #0x1                   	// #1
  401680:	b	401528 <main+0xc8>
  401684:	adrp	x5, 402000 <main+0xba0>
  401688:	add	x5, x5, #0x7b0
  40168c:	adrp	x4, 402000 <main+0xba0>
  401690:	add	x4, x4, #0xe30
  401694:	mov	w3, #0x1b6                 	// #438
  401698:	adrp	x2, 402000 <main+0xba0>
  40169c:	add	x2, x2, #0x7cb
  4016a0:	mov	w1, #0x0                   	// #0
  4016a4:	mov	w0, #0x403                 	// #1027
  4016a8:	bl	401200 <log_internal_realm@plt>
  4016ac:	mov	w20, w19
  4016b0:	mov	w22, #0x1                   	// #1
  4016b4:	b	401528 <main+0xc8>
  4016b8:	mov	w0, #0x1                   	// #1
  4016bc:	bl	4012c0 <log_get_max_level_realm@plt>
  4016c0:	cmp	w0, #0x2
  4016c4:	b.gt	4016d0 <main+0x270>
  4016c8:	mov	w22, #0x1                   	// #1
  4016cc:	b	401528 <main+0xc8>
  4016d0:	mov	x6, x24
  4016d4:	adrp	x5, 402000 <main+0xba0>
  4016d8:	add	x5, x5, #0x7e8
  4016dc:	adrp	x4, 402000 <main+0xba0>
  4016e0:	add	x4, x4, #0xe30
  4016e4:	mov	w3, #0x1bc                 	// #444
  4016e8:	adrp	x2, 402000 <main+0xba0>
  4016ec:	add	x2, x2, #0x7cb
  4016f0:	mov	w1, #0x0                   	// #0
  4016f4:	mov	w0, #0x403                 	// #1027
  4016f8:	bl	401200 <log_internal_realm@plt>
  4016fc:	mov	w22, #0x1                   	// #1
  401700:	b	401528 <main+0xc8>
  401704:	stp	xzr, xzr, [sp, #96]
  401708:	stp	xzr, xzr, [sp, #128]
  40170c:	stp	xzr, xzr, [sp, #144]
  401710:	stp	xzr, xzr, [sp, #160]
  401714:	mov	w0, #0x53                  	// #83
  401718:	str	w0, [sp, #88]
  40171c:	mov	w0, #0xfffffffd            	// #-3
  401720:	str	w0, [sp, #92]
  401724:	mov	w0, #0x6                   	// #6
  401728:	strb	w0, [sp, #96]
  40172c:	mov	w0, #0x20                  	// #32
  401730:	strb	w0, [sp, #97]
  401734:	mov	w0, #0x24                  	// #36
  401738:	str	w0, [sp, #100]
  40173c:	add	x0, sp, #0x5a8
  401740:	str	x0, [sp, #104]
  401744:	add	x0, sp, #0x560
  401748:	str	x0, [sp, #112]
  40174c:	add	x0, sp, #0x578
  401750:	str	x0, [sp, #120]
  401754:	mov	w0, #0x7530                	// #30000
  401758:	str	w0, [sp, #128]
  40175c:	add	x2, sp, #0x58
  401760:	mov	x1, #0x2285                	// #8837
  401764:	mov	w0, w20
  401768:	bl	401210 <ioctl@plt>
  40176c:	cbnz	w0, 40163c <main+0x1dc>
  401770:	ldr	x0, [sp, #152]
  401774:	tst	x0, #0xffffffff000000ff
  401778:	b.ne	4018f8 <main+0x498>  // b.any
  40177c:	ldr	x21, [sp, #288]
  401780:	cbnz	x21, 401904 <main+0x4a4>
  401784:	ldr	w0, [sp, #284]
  401788:	cbnz	w0, 401904 <main+0x4a4>
  40178c:	ldrb	w23, [sp, #1448]
  401790:	and	w23, w23, #0x1f
  401794:	cmp	w23, #0x5
  401798:	b.eq	401914 <main+0x4b4>  // b.none
  40179c:	cbnz	w23, 401a54 <main+0x5f4>
  4017a0:	adrp	x0, 402000 <main+0xba0>
  4017a4:	add	x0, x0, #0xe10
  4017a8:	ldr	x1, [x0, #16]
  4017ac:	str	x1, [sp, #1376]
  4017b0:	ldur	w0, [x0, #23]
  4017b4:	add	x1, sp, #0x600
  4017b8:	stur	w0, [x1, #-153]
  4017bc:	strb	wzr, [sp, #1387]
  4017c0:	stp	xzr, xzr, [x1, #-136]
  4017c4:	stp	xzr, xzr, [x1, #-120]
  4017c8:	mov	x2, #0xa0                  	// #160
  4017cc:	mov	w1, #0x0                   	// #0
  4017d0:	add	x0, sp, #0xb0
  4017d4:	bl	4012b0 <memset@plt>
  4017d8:	mov	w0, #0x51                  	// #81
  4017dc:	str	w0, [sp, #176]
  4017e0:	mov	w0, #0xc                   	// #12
  4017e4:	str	w0, [sp, #188]
  4017e8:	add	x0, sp, #0x560
  4017ec:	str	x0, [sp, #192]
  4017f0:	mov	w0, #0x20                  	// #32
  4017f4:	str	w0, [sp, #220]
  4017f8:	add	x0, sp, #0x578
  4017fc:	str	x0, [sp, #224]
  401800:	mov	w0, #0x200                 	// #512
  401804:	str	w0, [sp, #244]
  401808:	add	x0, sp, #0x350
  40180c:	str	x0, [sp, #256]
  401810:	mov	w0, #0x7530                	// #30000
  401814:	str	w0, [sp, #264]
  401818:	add	x2, sp, #0xb0
  40181c:	mov	x1, #0x2285                	// #8837
  401820:	mov	w0, w20
  401824:	bl	401210 <ioctl@plt>
  401828:	cbz	w0, 4018a8 <main+0x448>
  40182c:	bl	4011c0 <__errno_location@plt>
  401830:	ldr	w0, [x0]
  401834:	cmp	w0, #0x16
  401838:	b.ne	40163c <main+0x1dc>  // b.any
  40183c:	stp	xzr, xzr, [sp, #96]
  401840:	stp	xzr, xzr, [sp, #128]
  401844:	stp	xzr, xzr, [sp, #144]
  401848:	stp	xzr, xzr, [sp, #160]
  40184c:	mov	w0, #0x53                  	// #83
  401850:	str	w0, [sp, #88]
  401854:	mov	w0, #0xfffffffd            	// #-3
  401858:	str	w0, [sp, #92]
  40185c:	mov	w0, #0xc                   	// #12
  401860:	strb	w0, [sp, #96]
  401864:	mov	w0, #0x20                  	// #32
  401868:	strb	w0, [sp, #97]
  40186c:	mov	w0, #0x200                 	// #512
  401870:	str	w0, [sp, #100]
  401874:	add	x0, sp, #0x350
  401878:	str	x0, [sp, #104]
  40187c:	add	x0, sp, #0x560
  401880:	str	x0, [sp, #112]
  401884:	add	x0, sp, #0x578
  401888:	str	x0, [sp, #120]
  40188c:	mov	w0, #0x7530                	// #30000
  401890:	str	w0, [sp, #128]
  401894:	add	x2, sp, #0x58
  401898:	mov	x1, #0x2285                	// #8837
  40189c:	mov	w0, w20
  4018a0:	bl	401210 <ioctl@plt>
  4018a4:	cbnz	w0, 40163c <main+0x1dc>
  4018a8:	ldrb	w0, [sp, #1400]
  4018ac:	cmp	w0, #0x72
  4018b0:	b.eq	401a64 <main+0x604>  // b.none
  4018b4:	cmp	w0, #0x70
  4018b8:	b.ne	401a70 <main+0x610>  // b.any
  4018bc:	ldrb	w0, [sp, #1412]
  4018c0:	cbnz	w0, 401a70 <main+0x610>
  4018c4:	ldrb	w0, [sp, #1413]
  4018c8:	cmp	w0, #0x1d
  4018cc:	b.ne	401a70 <main+0x610>  // b.any
  4018d0:	add	x1, sp, #0x350
  4018d4:	ldrb	w0, [x21, x1]
  4018d8:	cbnz	w0, 401f44 <main+0xae4>
  4018dc:	add	x21, x21, #0x1
  4018e0:	cmp	x21, #0x200
  4018e4:	b.ne	4018d4 <main+0x474>  // b.any
  4018e8:	bl	4011c0 <__errno_location@plt>
  4018ec:	mov	w1, #0x5                   	// #5
  4018f0:	str	w1, [x0]
  4018f4:	b	40163c <main+0x1dc>
  4018f8:	mov	w0, #0x5                   	// #5
  4018fc:	str	w0, [x21]
  401900:	b	40163c <main+0x1dc>
  401904:	bl	4011c0 <__errno_location@plt>
  401908:	mov	w1, #0x5                   	// #5
  40190c:	str	w1, [x0]
  401910:	b	40163c <main+0x1dc>
  401914:	adrp	x0, 402000 <main+0xba0>
  401918:	add	x0, x0, #0xe10
  40191c:	ldp	x0, x1, [x0]
  401920:	add	x2, sp, #0x600
  401924:	stp	x0, x1, [x2, #-160]
  401928:	stp	xzr, xzr, [x2, #-136]
  40192c:	stp	xzr, xzr, [x2, #-120]
  401930:	mov	x2, #0xa0                  	// #160
  401934:	mov	w1, #0x0                   	// #0
  401938:	add	x0, sp, #0xb0
  40193c:	bl	4012b0 <memset@plt>
  401940:	mov	w0, #0x51                  	// #81
  401944:	str	w0, [sp, #176]
  401948:	mov	w0, #0x10                  	// #16
  40194c:	str	w0, [sp, #188]
  401950:	add	x0, sp, #0x560
  401954:	str	x0, [sp, #192]
  401958:	mov	w0, #0x20                  	// #32
  40195c:	str	w0, [sp, #220]
  401960:	add	x0, sp, #0x578
  401964:	str	x0, [sp, #224]
  401968:	mov	w0, #0x200                 	// #512
  40196c:	str	w0, [sp, #244]
  401970:	add	x0, sp, #0x350
  401974:	str	x0, [sp, #256]
  401978:	mov	w0, #0x7530                	// #30000
  40197c:	str	w0, [sp, #264]
  401980:	add	x2, sp, #0xb0
  401984:	mov	x1, #0x2285                	// #8837
  401988:	mov	w0, w20
  40198c:	bl	401210 <ioctl@plt>
  401990:	mov	w23, w0
  401994:	cbz	w0, 401a18 <main+0x5b8>
  401998:	bl	4011c0 <__errno_location@plt>
  40199c:	ldr	w0, [x0]
  4019a0:	cmp	w0, #0x16
  4019a4:	b.ne	4018d0 <main+0x470>  // b.any
  4019a8:	stp	xzr, xzr, [sp, #96]
  4019ac:	stp	xzr, xzr, [sp, #128]
  4019b0:	stp	xzr, xzr, [sp, #144]
  4019b4:	stp	xzr, xzr, [sp, #160]
  4019b8:	mov	w0, #0x53                  	// #83
  4019bc:	str	w0, [sp, #88]
  4019c0:	mov	w0, #0xfffffffd            	// #-3
  4019c4:	str	w0, [sp, #92]
  4019c8:	mov	w0, #0x10                  	// #16
  4019cc:	strb	w0, [sp, #96]
  4019d0:	mov	w0, #0x20                  	// #32
  4019d4:	strb	w0, [sp, #97]
  4019d8:	mov	w0, #0x200                 	// #512
  4019dc:	str	w0, [sp, #100]
  4019e0:	add	x0, sp, #0x350
  4019e4:	str	x0, [sp, #104]
  4019e8:	add	x0, sp, #0x560
  4019ec:	str	x0, [sp, #112]
  4019f0:	add	x0, sp, #0x578
  4019f4:	str	x0, [sp, #120]
  4019f8:	mov	w0, #0x7530                	// #30000
  4019fc:	str	w0, [sp, #128]
  401a00:	add	x2, sp, #0x58
  401a04:	mov	x1, #0x2285                	// #8837
  401a08:	mov	w0, w20
  401a0c:	bl	401210 <ioctl@plt>
  401a10:	mov	w23, w0
  401a14:	cbnz	w0, 4018d0 <main+0x470>
  401a18:	ldrb	w0, [sp, #1400]
  401a1c:	cmp	w0, #0x72
  401a20:	b.ne	401a40 <main+0x5e0>  // b.any
  401a24:	ldrb	w0, [sp, #1408]
  401a28:	cmp	w0, #0x9
  401a2c:	b.ne	401a40 <main+0x5e0>  // b.any
  401a30:	ldrb	w0, [sp, #1409]
  401a34:	mov	w23, #0x0                   	// #0
  401a38:	cmp	w0, #0xc
  401a3c:	b.eq	4018d0 <main+0x470>  // b.none
  401a40:	bl	4011c0 <__errno_location@plt>
  401a44:	mov	w1, #0x5                   	// #5
  401a48:	str	w1, [x0]
  401a4c:	mov	w23, w19
  401a50:	b	4018d0 <main+0x470>
  401a54:	bl	4011c0 <__errno_location@plt>
  401a58:	mov	w1, #0x5                   	// #5
  401a5c:	str	w1, [x0]
  401a60:	b	40163c <main+0x1dc>
  401a64:	ldrb	w0, [sp, #1408]
  401a68:	cmp	w0, #0x9
  401a6c:	b.eq	401a80 <main+0x620>  // b.none
  401a70:	bl	4011c0 <__errno_location@plt>
  401a74:	mov	w1, #0x5                   	// #5
  401a78:	str	w1, [x0]
  401a7c:	b	40163c <main+0x1dc>
  401a80:	ldrb	w0, [sp, #1409]
  401a84:	cmp	w0, #0xc
  401a88:	b.ne	401a70 <main+0x610>  // b.any
  401a8c:	b	4018d0 <main+0x470>
  401a90:	bl	4011c0 <__errno_location@plt>
  401a94:	mov	x6, x24
  401a98:	adrp	x5, 402000 <main+0xba0>
  401a9c:	add	x5, x5, #0x800
  401aa0:	adrp	x4, 402000 <main+0xba0>
  401aa4:	add	x4, x4, #0xe30
  401aa8:	mov	w3, #0x1df                 	// #479
  401aac:	adrp	x2, 402000 <main+0xba0>
  401ab0:	add	x2, x2, #0x7cb
  401ab4:	ldr	w1, [x0]
  401ab8:	mov	w0, #0x407                 	// #1031
  401abc:	bl	401200 <log_internal_realm@plt>
  401ac0:	mov	w22, #0x2                   	// #2
  401ac4:	b	401528 <main+0xc8>
  401ac8:	adrp	x0, 402000 <main+0xba0>
  401acc:	add	x0, x0, #0x828
  401ad0:	bl	401250 <puts@plt>
  401ad4:	ldrb	w0, [sp, #337]
  401ad8:	tbz	w0, #7, 401b50 <main+0x6f0>
  401adc:	and	w0, w0, #0x1f
  401ae0:	cmp	w0, #0x5
  401ae4:	b.eq	401b30 <main+0x6d0>  // b.none
  401ae8:	b.hi	401b08 <main+0x6a8>  // b.pmore
  401aec:	cbz	w0, 401b20 <main+0x6c0>
  401af0:	cmp	w0, #0x1
  401af4:	b.ne	401b40 <main+0x6e0>  // b.any
  401af8:	adrp	x0, 402000 <main+0xba0>
  401afc:	add	x0, x0, #0x848
  401b00:	bl	401250 <puts@plt>
  401b04:	b	401b5c <main+0x6fc>
  401b08:	cmp	w0, #0x7
  401b0c:	b.ne	401b40 <main+0x6e0>  // b.any
  401b10:	adrp	x0, 402000 <main+0xba0>
  401b14:	add	x0, x0, #0x858
  401b18:	bl	401250 <puts@plt>
  401b1c:	b	401b5c <main+0x6fc>
  401b20:	adrp	x0, 402000 <main+0xba0>
  401b24:	add	x0, x0, #0x838
  401b28:	bl	401250 <puts@plt>
  401b2c:	b	401b5c <main+0x6fc>
  401b30:	adrp	x0, 402000 <main+0xba0>
  401b34:	add	x0, x0, #0x838
  401b38:	bl	401250 <puts@plt>
  401b3c:	b	401b5c <main+0x6fc>
  401b40:	adrp	x0, 402000 <main+0xba0>
  401b44:	add	x0, x0, #0x868
  401b48:	bl	401250 <puts@plt>
  401b4c:	b	401b5c <main+0x6fc>
  401b50:	adrp	x0, 402000 <main+0xba0>
  401b54:	add	x0, x0, #0x878
  401b58:	bl	401250 <puts@plt>
  401b5c:	adrp	x0, 402000 <main+0xba0>
  401b60:	add	x0, x0, #0x888
  401b64:	bl	401250 <puts@plt>
  401b68:	add	x1, sp, #0x578
  401b6c:	adrp	x0, 402000 <main+0xba0>
  401b70:	add	x0, x0, #0x898
  401b74:	bl	401270 <printf@plt>
  401b78:	add	x1, sp, #0x5a8
  401b7c:	adrp	x0, 402000 <main+0xba0>
  401b80:	add	x0, x0, #0x8a8
  401b84:	bl	401270 <printf@plt>
  401b88:	add	x1, sp, #0x550
  401b8c:	adrp	x0, 402000 <main+0xba0>
  401b90:	add	x0, x0, #0x8c0
  401b94:	bl	401270 <printf@plt>
  401b98:	ldrb	w0, [sp, #1376]
  401b9c:	cbz	w0, 401c98 <main+0x838>
  401ba0:	add	x2, sp, #0x560
  401ba4:	add	x1, sp, #0x578
  401ba8:	adrp	x0, 402000 <main+0xba0>
  401bac:	add	x0, x0, #0x8d0
  401bb0:	bl	401270 <printf@plt>
  401bb4:	add	x1, sp, #0x560
  401bb8:	adrp	x0, 402000 <main+0xba0>
  401bbc:	add	x0, x0, #0x8e8
  401bc0:	bl	401270 <printf@plt>
  401bc4:	ldrh	w0, [sp, #500]
  401bc8:	tbnz	w0, #5, 401cac <main+0x84c>
  401bcc:	ldrh	w0, [sp, #500]
  401bd0:	tbnz	w0, #10, 401cd0 <main+0x870>
  401bd4:	ldrh	w0, [sp, #500]
  401bd8:	tbnz	w0, #3, 401cf4 <main+0x894>
  401bdc:	ldrh	w0, [sp, #500]
  401be0:	tbnz	w0, #1, 401d18 <main+0x8b8>
  401be4:	ldrh	w0, [sp, #500]
  401be8:	tbnz	w0, #0, 401de0 <main+0x980>
  401bec:	ldrh	w0, [sp, #502]
  401bf0:	tbnz	w0, #9, 401e04 <main+0x9a4>
  401bf4:	ldrh	w0, [sp, #502]
  401bf8:	tbnz	w0, #5, 401e48 <main+0x9e8>
  401bfc:	ldrh	w0, [sp, #502]
  401c00:	tbnz	w0, #3, 401e6c <main+0xa0c>
  401c04:	ldrh	w0, [sp, #502]
  401c08:	tbnz	w0, #0, 401ea8 <main+0xa48>
  401c0c:	ldrh	w19, [sp, #1000]
  401c10:	sub	w1, w19, #0x1
  401c14:	mov	w0, #0xfffd                	// #65533
  401c18:	cmp	w0, w1, uxth
  401c1c:	b.cc	401c34 <main+0x7d4>  // b.lo, b.ul, b.last
  401c20:	adrp	x0, 402000 <main+0xba0>
  401c24:	add	x0, x0, #0xd28
  401c28:	bl	401250 <puts@plt>
  401c2c:	tbnz	w19, #2, 401eb8 <main+0xa58>
  401c30:	tbnz	w19, #1, 401ec8 <main+0xa68>
  401c34:	ldrh	w1, [sp, #1282]
  401c38:	cmp	w1, #0x1
  401c3c:	b.eq	401ed8 <main+0xa78>  // b.none
  401c40:	sub	w0, w1, #0x401
  401c44:	mov	w2, #0xfbfd                	// #64509
  401c48:	cmp	w2, w0, uxth
  401c4c:	b.cs	401ee8 <main+0xa88>  // b.hs, b.nlast
  401c50:	ldrh	w0, [sp, #1064]
  401c54:	and	w1, w0, #0xf000
  401c58:	cmp	w1, #0x5, lsl #12
  401c5c:	b.eq	401ef8 <main+0xa98>  // b.none
  401c60:	ldrh	w0, [sp, #848]
  401c64:	add	w0, w0, #0x7, lsl #12
  401c68:	add	w0, w0, #0xbb6
  401c6c:	and	w0, w0, #0xffffffbf
  401c70:	tst	w0, #0xffff
  401c74:	b.eq	401f24 <main+0xac4>  // b.none
  401c78:	ldrh	w0, [sp, #1014]
  401c7c:	mov	w1, #0xc004                	// #49156
  401c80:	and	w0, w0, w1
  401c84:	mov	w1, #0x4004                	// #16388
  401c88:	cmp	w0, w1
  401c8c:	b.eq	401f24 <main+0xac4>  // b.none
  401c90:	mov	w22, #0x0                   	// #0
  401c94:	b	401528 <main+0xc8>
  401c98:	add	x1, sp, #0x578
  401c9c:	adrp	x0, 402000 <main+0xba0>
  401ca0:	add	x0, x0, #0x900
  401ca4:	bl	401270 <printf@plt>
  401ca8:	b	401bc4 <main+0x764>
  401cac:	adrp	x0, 402000 <main+0xba0>
  401cb0:	add	x0, x0, #0x910
  401cb4:	bl	401250 <puts@plt>
  401cb8:	ldrh	w1, [sp, #506]
  401cbc:	ubfx	x1, x1, #5, #1
  401cc0:	adrp	x0, 402000 <main+0xba0>
  401cc4:	add	x0, x0, #0x928
  401cc8:	bl	401270 <printf@plt>
  401ccc:	b	401bcc <main+0x76c>
  401cd0:	adrp	x0, 402000 <main+0xba0>
  401cd4:	add	x0, x0, #0x948
  401cd8:	bl	401250 <puts@plt>
  401cdc:	ldrh	w1, [sp, #506]
  401ce0:	ubfx	x1, x1, #10, #1
  401ce4:	adrp	x0, 402000 <main+0xba0>
  401ce8:	add	x0, x0, #0x968
  401cec:	bl	401270 <printf@plt>
  401cf0:	b	401bd4 <main+0x774>
  401cf4:	adrp	x0, 402000 <main+0xba0>
  401cf8:	add	x0, x0, #0x990
  401cfc:	bl	401250 <puts@plt>
  401d00:	ldrh	w1, [sp, #506]
  401d04:	ubfx	x1, x1, #3, #1
  401d08:	adrp	x0, 402000 <main+0xba0>
  401d0c:	add	x0, x0, #0x9a8
  401d10:	bl	401270 <printf@plt>
  401d14:	b	401bdc <main+0x77c>
  401d18:	adrp	x0, 402000 <main+0xba0>
  401d1c:	add	x0, x0, #0x9d0
  401d20:	bl	401250 <puts@plt>
  401d24:	ldrh	w1, [sp, #506]
  401d28:	ubfx	x1, x1, #1, #1
  401d2c:	adrp	x0, 402000 <main+0xba0>
  401d30:	add	x0, x0, #0x9f0
  401d34:	bl	401270 <printf@plt>
  401d38:	ldrh	w1, [sp, #514]
  401d3c:	lsl	w1, w1, #1
  401d40:	adrp	x0, 402000 <main+0xba0>
  401d44:	add	x0, x0, #0xa18
  401d48:	bl	401270 <printf@plt>
  401d4c:	ldrh	w0, [sp, #506]
  401d50:	tbz	w0, #1, 401d68 <main+0x908>
  401d54:	ldrh	w0, [sp, #592]
  401d58:	tbz	w0, #8, 401d98 <main+0x938>
  401d5c:	adrp	x0, 402000 <main+0xba0>
  401d60:	add	x0, x0, #0xa48
  401d64:	bl	401250 <puts@plt>
  401d68:	ldrh	w0, [sp, #592]
  401d6c:	tbnz	w0, #5, 401da8 <main+0x948>
  401d70:	ldrh	w0, [sp, #592]
  401d74:	tbnz	w0, #4, 401dc0 <main+0x960>
  401d78:	ldrh	w0, [sp, #592]
  401d7c:	tbnz	w0, #3, 401dd0 <main+0x970>
  401d80:	ldrh	w0, [sp, #592]
  401d84:	tbz	w0, #2, 401be4 <main+0x784>
  401d88:	adrp	x0, 402000 <main+0xba0>
  401d8c:	add	x0, x0, #0xb28
  401d90:	bl	401250 <puts@plt>
  401d94:	b	401be4 <main+0x784>
  401d98:	adrp	x0, 402000 <main+0xba0>
  401d9c:	add	x0, x0, #0xa78
  401da0:	bl	401250 <puts@plt>
  401da4:	b	401d68 <main+0x908>
  401da8:	ldrh	w1, [sp, #516]
  401dac:	lsl	w1, w1, #1
  401db0:	adrp	x0, 402000 <main+0xba0>
  401db4:	add	x0, x0, #0xaa0
  401db8:	bl	401270 <printf@plt>
  401dbc:	b	401d70 <main+0x910>
  401dc0:	adrp	x0, 402000 <main+0xba0>
  401dc4:	add	x0, x0, #0xad8
  401dc8:	bl	401250 <puts@plt>
  401dcc:	b	401d78 <main+0x918>
  401dd0:	adrp	x0, 402000 <main+0xba0>
  401dd4:	add	x0, x0, #0xb00
  401dd8:	bl	401250 <puts@plt>
  401ddc:	b	401d80 <main+0x920>
  401de0:	adrp	x0, 402000 <main+0xba0>
  401de4:	add	x0, x0, #0xb50
  401de8:	bl	401250 <puts@plt>
  401dec:	ldrh	w1, [sp, #506]
  401df0:	and	w1, w1, #0x1
  401df4:	adrp	x0, 402000 <main+0xba0>
  401df8:	add	x0, x0, #0xb70
  401dfc:	bl	401270 <printf@plt>
  401e00:	b	401bec <main+0x78c>
  401e04:	adrp	x0, 402000 <main+0xba0>
  401e08:	add	x0, x0, #0xb98
  401e0c:	bl	401250 <puts@plt>
  401e10:	ldrh	w1, [sp, #508]
  401e14:	ubfx	x1, x1, #9, #1
  401e18:	adrp	x0, 402000 <main+0xba0>
  401e1c:	add	x0, x0, #0xbb8
  401e20:	bl	401270 <printf@plt>
  401e24:	ldrb	w1, [sp, #525]
  401e28:	adrp	x0, 402000 <main+0xba0>
  401e2c:	add	x0, x0, #0xbe0
  401e30:	bl	401270 <printf@plt>
  401e34:	ldrb	w1, [sp, #524]
  401e38:	adrp	x0, 402000 <main+0xba0>
  401e3c:	add	x0, x0, #0xc18
  401e40:	bl	401270 <printf@plt>
  401e44:	b	401bf4 <main+0x794>
  401e48:	adrp	x0, 402000 <main+0xba0>
  401e4c:	add	x0, x0, #0xc48
  401e50:	bl	401250 <puts@plt>
  401e54:	ldrh	w1, [sp, #508]
  401e58:	ubfx	x1, x1, #5, #1
  401e5c:	adrp	x0, 402000 <main+0xba0>
  401e60:	add	x0, x0, #0xc68
  401e64:	bl	401270 <printf@plt>
  401e68:	b	401bfc <main+0x79c>
  401e6c:	adrp	x0, 402000 <main+0xba0>
  401e70:	add	x0, x0, #0xc90
  401e74:	bl	401250 <puts@plt>
  401e78:	ldrh	w1, [sp, #508]
  401e7c:	ubfx	x1, x1, #3, #1
  401e80:	adrp	x0, 402000 <main+0xba0>
  401e84:	add	x0, x0, #0xcb0
  401e88:	bl	401270 <printf@plt>
  401e8c:	ldrh	w0, [sp, #508]
  401e90:	tbz	w0, #3, 401c04 <main+0x7a4>
  401e94:	ldrb	w1, [sp, #518]
  401e98:	adrp	x0, 402000 <main+0xba0>
  401e9c:	add	x0, x0, #0xcd8
  401ea0:	bl	401270 <printf@plt>
  401ea4:	b	401c04 <main+0x7a4>
  401ea8:	adrp	x0, 402000 <main+0xba0>
  401eac:	add	x0, x0, #0xd08
  401eb0:	bl	401250 <puts@plt>
  401eb4:	b	401c0c <main+0x7ac>
  401eb8:	adrp	x0, 402000 <main+0xba0>
  401ebc:	add	x0, x0, #0xd38
  401ec0:	bl	401250 <puts@plt>
  401ec4:	b	401c30 <main+0x7d0>
  401ec8:	adrp	x0, 402000 <main+0xba0>
  401ecc:	add	x0, x0, #0xd58
  401ed0:	bl	401250 <puts@plt>
  401ed4:	b	401c34 <main+0x7d4>
  401ed8:	adrp	x0, 402000 <main+0xba0>
  401edc:	add	x0, x0, #0xd78
  401ee0:	bl	401250 <puts@plt>
  401ee4:	b	401c50 <main+0x7f0>
  401ee8:	adrp	x0, 402000 <main+0xba0>
  401eec:	add	x0, x0, #0xd98
  401ef0:	bl	401270 <printf@plt>
  401ef4:	b	401c50 <main+0x7f0>
  401ef8:	lsl	w0, w0, #16
  401efc:	ldrh	w1, [sp, #1066]
  401f00:	orr	x0, x1, x0
  401f04:	ldrh	w1, [sp, #1068]
  401f08:	orr	x0, x1, x0, lsl #16
  401f0c:	ldrh	w1, [sp, #1070]
  401f10:	orr	x1, x1, x0, lsl #16
  401f14:	adrp	x0, 402000 <main+0xba0>
  401f18:	add	x0, x0, #0xdb8
  401f1c:	bl	401270 <printf@plt>
  401f20:	b	401c60 <main+0x800>
  401f24:	adrp	x0, 402000 <main+0xba0>
  401f28:	add	x0, x0, #0xde8
  401f2c:	bl	401250 <puts@plt>
  401f30:	mov	w22, #0x0                   	// #0
  401f34:	b	401528 <main+0xc8>
  401f38:	add	x0, sp, #0x578
  401f3c:	bl	401250 <puts@plt>
  401f40:	b	401528 <main+0xc8>
  401f44:	cbnz	w23, 40163c <main+0x1dc>
  401f48:	mov	x3, #0x14                  	// #20
  401f4c:	add	x0, sp, #0x350
  401f50:	add	x2, x0, x3
  401f54:	mov	w1, #0xa                   	// #10
  401f58:	bl	401420 <disk_identify_get_string>
  401f5c:	mov	x3, #0x8                   	// #8
  401f60:	add	x0, sp, #0x350
  401f64:	add	x2, sp, #0x37e
  401f68:	mov	w1, #0x17                  	// #23
  401f6c:	bl	401420 <disk_identify_get_string>
  401f70:	mov	x3, #0x28                  	// #40
  401f74:	add	x0, sp, #0x350
  401f78:	add	x2, sp, #0x386
  401f7c:	mov	w1, #0x1b                  	// #27
  401f80:	bl	401420 <disk_identify_get_string>
  401f84:	mov	x2, #0x200                 	// #512
  401f88:	add	x1, sp, #0x350
  401f8c:	add	x0, sp, #0x150
  401f90:	bl	401130 <memcpy@plt>
  401f94:	add	x0, sp, #0x206
  401f98:	ldp	x0, x1, [x0, #-128]
  401f9c:	add	x2, sp, #0x600
  401fa0:	stp	x0, x1, [x2, #-136]
  401fa4:	add	x0, sp, #0x206
  401fa8:	ldp	x0, x1, [x0, #-112]
  401fac:	stp	x0, x1, [x2, #-120]
  401fb0:	add	x0, sp, #0x200
  401fb4:	ldur	x0, [x0, #-90]
  401fb8:	str	x0, [sp, #1432]
  401fbc:	strb	wzr, [sp, #1440]
  401fc0:	mov	x2, #0x100                 	// #256
  401fc4:	add	x1, sp, #0x5a8
  401fc8:	add	x0, sp, #0x578
  401fcc:	bl	402664 <udev_util_encode_string>
  401fd0:	mov	x2, #0x28                  	// #40
  401fd4:	add	x1, sp, #0x578
  401fd8:	add	x0, sp, #0x186
  401fdc:	bl	4023e0 <util_replace_whitespace>
  401fe0:	mov	x1, #0x0                   	// #0
  401fe4:	add	x0, sp, #0x578
  401fe8:	bl	40250c <util_replace_chars>
  401fec:	mov	x2, #0x14                  	// #20
  401ff0:	add	x1, sp, #0x560
  401ff4:	add	x0, sp, #0x150
  401ff8:	add	x0, x0, x2
  401ffc:	bl	4023e0 <util_replace_whitespace>
  402000:	mov	x1, #0x0                   	// #0
  402004:	add	x0, sp, #0x560
  402008:	bl	40250c <util_replace_chars>
  40200c:	mov	x2, #0x8                   	// #8
  402010:	add	x1, sp, #0x550
  402014:	add	x0, sp, #0x17e
  402018:	bl	4023e0 <util_replace_whitespace>
  40201c:	mov	x1, #0x0                   	// #0
  402020:	add	x0, sp, #0x550
  402024:	bl	40250c <util_replace_chars>
  402028:	cbnz	w22, 401ac8 <main+0x668>
  40202c:	ldrb	w0, [sp, #1376]
  402030:	cbz	w0, 401f38 <main+0xad8>
  402034:	add	x2, sp, #0x560
  402038:	add	x1, sp, #0x578
  40203c:	adrp	x0, 402000 <main+0xba0>
  402040:	add	x0, x0, #0xdf8
  402044:	bl	401270 <printf@plt>
  402048:	b	401528 <main+0xc8>
  40204c:	bl	4011e0 <__stack_chk_fail@plt>

0000000000402050 <util_resolve_subsys_kernel>:
  402050:	sub	sp, sp, #0x470
  402054:	stp	x29, x30, [sp, #16]
  402058:	add	x29, sp, #0x10
  40205c:	stp	x19, x20, [sp, #32]
  402060:	stp	x21, x22, [sp, #48]
  402064:	stp	x23, x24, [sp, #64]
  402068:	mov	x22, x1
  40206c:	mov	x23, x2
  402070:	adrp	x1, 413000 <__FRAME_END__+0xfda0>
  402074:	ldr	x1, [x1, #4088]
  402078:	ldr	x2, [x1]
  40207c:	str	x2, [sp, #1128]
  402080:	mov	x2, #0x0                   	// #0
  402084:	str	xzr, [sp, #88]
  402088:	ldrb	w1, [x0]
  40208c:	cmp	w1, #0x5b
  402090:	b.ne	40229c <util_resolve_subsys_kernel+0x24c>  // b.any
  402094:	and	w24, w3, #0xff
  402098:	add	x19, sp, #0x68
  40209c:	mov	x2, x0
  4020a0:	mov	x1, #0x400                 	// #1024
  4020a4:	mov	x0, x19
  4020a8:	bl	4010d0 <strscpy@plt>
  4020ac:	mov	w1, #0x2f                  	// #47
  4020b0:	add	x0, x19, #0x1
  4020b4:	bl	401230 <strchr@plt>
  4020b8:	mov	x21, x0
  4020bc:	cbz	x0, 402284 <util_resolve_subsys_kernel+0x234>
  4020c0:	strb	wzr, [x21], #1
  4020c4:	mov	w1, #0x5d                  	// #93
  4020c8:	mov	x0, x21
  4020cc:	bl	401230 <strchr@plt>
  4020d0:	cbz	x0, 40228c <util_resolve_subsys_kernel+0x23c>
  4020d4:	strb	wzr, [x0]
  4020d8:	ldrb	w1, [x0, #1]
  4020dc:	cmp	w1, #0x2f
  4020e0:	cinc	x20, x0, eq  // eq = none
  4020e4:	ldrb	w0, [x20, #1]!
  4020e8:	cbnz	w0, 402198 <util_resolve_subsys_kernel+0x148>
  4020ec:	cbnz	w24, 402294 <util_resolve_subsys_kernel+0x244>
  4020f0:	mov	x2, x21
  4020f4:	add	x1, sp, #0x69
  4020f8:	add	x0, sp, #0x58
  4020fc:	bl	401120 <sd_device_new_from_subsystem_sysname@plt>
  402100:	mov	w19, w0
  402104:	mov	x20, #0x0                   	// #0
  402108:	tbnz	w0, #31, 4021f4 <util_resolve_subsys_kernel+0x1a4>
  40210c:	add	x1, sp, #0x60
  402110:	ldr	x0, [sp, #88]
  402114:	bl	401290 <sd_device_get_syspath@plt>
  402118:	mov	w19, w0
  40211c:	tbnz	w0, #31, 4021f4 <util_resolve_subsys_kernel+0x1a4>
  402120:	ldr	x2, [sp, #96]
  402124:	cbz	x20, 4022a4 <util_resolve_subsys_kernel+0x254>
  402128:	mov	x5, #0x0                   	// #0
  40212c:	mov	x4, x20
  402130:	adrp	x3, 402000 <main+0xba0>
  402134:	add	x3, x3, #0xef8
  402138:	mov	x1, x23
  40213c:	mov	x0, x22
  402140:	bl	401110 <strscpyl@plt>
  402144:	mov	w0, #0x0                   	// #0
  402148:	bl	4012c0 <log_get_max_level_realm@plt>
  40214c:	mov	w19, #0x0                   	// #0
  402150:	cmp	w0, #0x6
  402154:	b.le	4021f4 <util_resolve_subsys_kernel+0x1a4>
  402158:	str	x22, [sp, #8]
  40215c:	str	x20, [sp]
  402160:	mov	x7, x21
  402164:	add	x6, sp, #0x69
  402168:	adrp	x5, 402000 <main+0xba0>
  40216c:	add	x5, x5, #0xed8
  402170:	adrp	x4, 402000 <main+0xba0>
  402174:	add	x4, x4, #0xf70
  402178:	mov	w3, #0x49                  	// #73
  40217c:	adrp	x2, 402000 <main+0xba0>
  402180:	add	x2, x2, #0xebb
  402184:	mov	w1, #0x0                   	// #0
  402188:	mov	w0, #0x7                   	// #7
  40218c:	bl	401200 <log_internal_realm@plt>
  402190:	mov	w19, #0x0                   	// #0
  402194:	b	4021f4 <util_resolve_subsys_kernel+0x1a4>
  402198:	mov	x2, x21
  40219c:	add	x1, sp, #0x69
  4021a0:	add	x0, sp, #0x58
  4021a4:	bl	401120 <sd_device_new_from_subsystem_sysname@plt>
  4021a8:	mov	w19, w0
  4021ac:	tbnz	w0, #31, 4021f4 <util_resolve_subsys_kernel+0x1a4>
  4021b0:	cbz	w24, 40210c <util_resolve_subsys_kernel+0xbc>
  4021b4:	add	x2, sp, #0x60
  4021b8:	mov	x1, x20
  4021bc:	ldr	x0, [sp, #88]
  4021c0:	bl	401240 <sd_device_get_sysattr_value@plt>
  4021c4:	mov	w19, w0
  4021c8:	cmp	w0, #0x0
  4021cc:	ccmn	w0, #0x2, #0x4, lt  // lt = tstop
  4021d0:	b.ne	4021f4 <util_resolve_subsys_kernel+0x1a4>  // b.any
  4021d4:	cmn	w0, #0x2
  4021d8:	b.ne	402234 <util_resolve_subsys_kernel+0x1e4>  // b.any
  4021dc:	strb	wzr, [x22]
  4021e0:	mov	w0, #0x0                   	// #0
  4021e4:	bl	4012c0 <log_get_max_level_realm@plt>
  4021e8:	mov	w19, #0x0                   	// #0
  4021ec:	cmp	w0, #0x6
  4021f0:	b.gt	402248 <util_resolve_subsys_kernel+0x1f8>
  4021f4:	ldr	x0, [sp, #88]
  4021f8:	cbz	x0, 402200 <util_resolve_subsys_kernel+0x1b0>
  4021fc:	bl	401260 <sd_device_unref@plt>
  402200:	adrp	x0, 413000 <__FRAME_END__+0xfda0>
  402204:	ldr	x0, [x0, #4088]
  402208:	ldr	x1, [sp, #1128]
  40220c:	ldr	x0, [x0]
  402210:	eor	x0, x1, x0
  402214:	cbnz	x0, 4022dc <util_resolve_subsys_kernel+0x28c>
  402218:	mov	w0, w19
  40221c:	ldp	x19, x20, [sp, #32]
  402220:	ldp	x21, x22, [sp, #48]
  402224:	ldp	x23, x24, [sp, #64]
  402228:	ldp	x29, x30, [sp, #16]
  40222c:	add	sp, sp, #0x470
  402230:	ret
  402234:	ldr	x2, [sp, #96]
  402238:	mov	x1, x23
  40223c:	mov	x0, x22
  402240:	bl	4010d0 <strscpy@plt>
  402244:	b	4021e0 <util_resolve_subsys_kernel+0x190>
  402248:	str	x22, [sp, #8]
  40224c:	str	x20, [sp]
  402250:	mov	x7, x21
  402254:	add	x6, sp, #0x69
  402258:	adrp	x5, 402000 <main+0xba0>
  40225c:	add	x5, x5, #0xe98
  402260:	adrp	x4, 402000 <main+0xba0>
  402264:	add	x4, x4, #0xf70
  402268:	mov	w3, #0x42                  	// #66
  40226c:	adrp	x2, 402000 <main+0xba0>
  402270:	add	x2, x2, #0xebb
  402274:	mov	w1, #0x0                   	// #0
  402278:	mov	w0, #0x7                   	// #7
  40227c:	bl	401200 <log_internal_realm@plt>
  402280:	b	4021f4 <util_resolve_subsys_kernel+0x1a4>
  402284:	mov	w19, #0xffffffea            	// #-22
  402288:	b	4021f4 <util_resolve_subsys_kernel+0x1a4>
  40228c:	mov	w19, #0xffffffea            	// #-22
  402290:	b	4021f4 <util_resolve_subsys_kernel+0x1a4>
  402294:	mov	w19, #0xffffffea            	// #-22
  402298:	b	4021f4 <util_resolve_subsys_kernel+0x1a4>
  40229c:	mov	w19, #0xffffffea            	// #-22
  4022a0:	b	402200 <util_resolve_subsys_kernel+0x1b0>
  4022a4:	mov	x5, #0x0                   	// #0
  4022a8:	mov	x4, #0x0                   	// #0
  4022ac:	mov	x3, #0x0                   	// #0
  4022b0:	mov	x1, x23
  4022b4:	mov	x0, x22
  4022b8:	bl	401110 <strscpyl@plt>
  4022bc:	mov	w0, #0x0                   	// #0
  4022c0:	bl	4012c0 <log_get_max_level_realm@plt>
  4022c4:	mov	w19, #0x0                   	// #0
  4022c8:	cmp	w0, #0x6
  4022cc:	b.le	4021f4 <util_resolve_subsys_kernel+0x1a4>
  4022d0:	adrp	x0, 402000 <main+0xba0>
  4022d4:	add	x20, x0, #0x7a8
  4022d8:	b	402158 <util_resolve_subsys_kernel+0x108>
  4022dc:	bl	4011e0 <__stack_chk_fail@plt>

00000000004022e0 <util_path_encode>:
  4022e0:	stp	x29, x30, [sp, #-16]!
  4022e4:	mov	x29, sp
  4022e8:	cbz	x0, 402314 <util_path_encode+0x34>
  4022ec:	mov	x4, x0
  4022f0:	cbz	x1, 402340 <util_path_encode+0x60>
  4022f4:	ldrb	w3, [x4], #1
  4022f8:	mov	x0, #0x0                   	// #0
  4022fc:	cbz	w3, 402338 <util_path_encode+0x58>
  402300:	mov	w7, #0x785c                	// #30812
  402304:	movk	w7, #0x6335, lsl #16
  402308:	mov	w6, #0x785c                	// #30812
  40230c:	movk	w6, #0x6632, lsl #16
  402310:	b	4023a4 <util_path_encode+0xc4>
  402314:	adrp	x4, 402000 <main+0xba0>
  402318:	add	x4, x4, #0xf28
  40231c:	mov	w3, #0x51                  	// #81
  402320:	adrp	x2, 402000 <main+0xba0>
  402324:	add	x2, x2, #0xebb
  402328:	adrp	x1, 402000 <main+0xba0>
  40232c:	add	x1, x1, #0xf00
  402330:	mov	w0, #0x0                   	// #0
  402334:	bl	401160 <log_assert_failed_realm@plt>
  402338:	mov	x0, #0x0                   	// #0
  40233c:	b	4023c4 <util_path_encode+0xe4>
  402340:	adrp	x4, 402000 <main+0xba0>
  402344:	add	x4, x4, #0xf28
  402348:	mov	w3, #0x52                  	// #82
  40234c:	adrp	x2, 402000 <main+0xba0>
  402350:	add	x2, x2, #0xebb
  402354:	adrp	x1, 402000 <main+0xba0>
  402358:	add	x1, x1, #0xf08
  40235c:	mov	w0, #0x0                   	// #0
  402360:	bl	401160 <log_assert_failed_realm@plt>
  402364:	add	x3, x0, #0x4
  402368:	cmp	x3, x2
  40236c:	b.cs	4023d0 <util_path_encode+0xf0>  // b.hs, b.nlast
  402370:	str	w6, [x1, x0]
  402374:	mov	x0, x3
  402378:	b	40239c <util_path_encode+0xbc>
  40237c:	add	x3, x0, #0x4
  402380:	cmp	x3, x2
  402384:	b.cs	4023d8 <util_path_encode+0xf8>  // b.hs, b.nlast
  402388:	str	w7, [x1, x0]
  40238c:	mov	x0, x3
  402390:	b	40239c <util_path_encode+0xbc>
  402394:	strb	w3, [x1, x0]
  402398:	mov	x0, x5
  40239c:	ldrb	w3, [x4], #1
  4023a0:	cbz	w3, 4023c4 <util_path_encode+0xe4>
  4023a4:	cmp	w3, #0x2f
  4023a8:	b.eq	402364 <util_path_encode+0x84>  // b.none
  4023ac:	cmp	w3, #0x5c
  4023b0:	b.eq	40237c <util_path_encode+0x9c>  // b.none
  4023b4:	add	x5, x0, #0x1
  4023b8:	cmp	x5, x2
  4023bc:	b.cc	402394 <util_path_encode+0xb4>  // b.lo, b.ul, b.last
  4023c0:	mov	x0, #0x0                   	// #0
  4023c4:	strb	wzr, [x1, x0]
  4023c8:	ldp	x29, x30, [sp], #16
  4023cc:	ret
  4023d0:	mov	x0, #0x0                   	// #0
  4023d4:	b	4023c4 <util_path_encode+0xe4>
  4023d8:	mov	x0, #0x0                   	// #0
  4023dc:	b	4023c4 <util_path_encode+0xe4>

00000000004023e0 <util_replace_whitespace>:
  4023e0:	stp	x29, x30, [sp, #-96]!
  4023e4:	mov	x29, sp
  4023e8:	stp	x19, x20, [sp, #16]
  4023ec:	stp	x21, x22, [sp, #32]
  4023f0:	stp	x23, x24, [sp, #48]
  4023f4:	stp	x25, x26, [sp, #64]
  4023f8:	stp	x27, x28, [sp, #80]
  4023fc:	cbz	x0, 402440 <util_replace_whitespace+0x60>
  402400:	mov	x22, x0
  402404:	mov	x25, x1
  402408:	mov	x24, x2
  40240c:	cbz	x1, 402464 <util_replace_whitespace+0x84>
  402410:	adrp	x1, 402000 <main+0xba0>
  402414:	add	x1, x1, #0xf20
  402418:	bl	4011b0 <strspn@plt>
  40241c:	mov	x19, x0
  402420:	mov	x20, #0x0                   	// #0
  402424:	mov	w23, #0x0                   	// #0
  402428:	mov	w27, #0x1                   	// #1
  40242c:	mov	w26, #0x0                   	// #0
  402430:	mov	w28, #0x5f                  	// #95
  402434:	cmp	x0, x24
  402438:	b.cc	4024b4 <util_replace_whitespace+0xd4>  // b.lo, b.ul, b.last
  40243c:	b	4024e0 <util_replace_whitespace+0x100>
  402440:	adrp	x4, 402000 <main+0xba0>
  402444:	add	x4, x4, #0xf40
  402448:	mov	w3, #0x84                  	// #132
  40244c:	adrp	x2, 402000 <main+0xba0>
  402450:	add	x2, x2, #0xebb
  402454:	adrp	x1, 402000 <main+0xba0>
  402458:	add	x1, x1, #0xf10
  40245c:	mov	w0, #0x0                   	// #0
  402460:	bl	401160 <log_assert_failed_realm@plt>
  402464:	adrp	x4, 402000 <main+0xba0>
  402468:	add	x4, x4, #0xf40
  40246c:	mov	w3, #0x85                  	// #133
  402470:	adrp	x2, 402000 <main+0xba0>
  402474:	add	x2, x2, #0xebb
  402478:	adrp	x1, 402000 <main+0xba0>
  40247c:	add	x1, x1, #0xf18
  402480:	mov	w0, #0x0                   	// #0
  402484:	bl	401160 <log_assert_failed_realm@plt>
  402488:	strb	w28, [x25, x20]
  40248c:	mov	x20, x0
  402490:	ldrb	w0, [x22, x19]
  402494:	strb	w0, [x25, x20]
  402498:	add	x20, x20, #0x1
  40249c:	mov	w23, w26
  4024a0:	add	x19, x19, #0x1
  4024a4:	cmp	x20, x19
  4024a8:	csel	x0, x20, x19, cs  // cs = hs, nlast
  4024ac:	cmp	x0, x24
  4024b0:	b.cs	4024e0 <util_replace_whitespace+0x100>  // b.hs, b.nlast
  4024b4:	ldrb	w21, [x22, x19]
  4024b8:	cbz	w21, 4024e0 <util_replace_whitespace+0x100>
  4024bc:	bl	401140 <__ctype_b_loc@plt>
  4024c0:	and	x21, x21, #0xff
  4024c4:	ldr	x0, [x0]
  4024c8:	ldrh	w0, [x0, x21, lsl #1]
  4024cc:	tbnz	w0, #13, 402504 <util_replace_whitespace+0x124>
  4024d0:	cbz	w23, 402490 <util_replace_whitespace+0xb0>
  4024d4:	add	x0, x20, #0x1
  4024d8:	cmp	x0, x24
  4024dc:	b.cc	402488 <util_replace_whitespace+0xa8>  // b.lo, b.ul, b.last
  4024e0:	strb	wzr, [x25, x20]
  4024e4:	mov	x0, x20
  4024e8:	ldp	x19, x20, [sp, #16]
  4024ec:	ldp	x21, x22, [sp, #32]
  4024f0:	ldp	x23, x24, [sp, #48]
  4024f4:	ldp	x25, x26, [sp, #64]
  4024f8:	ldp	x27, x28, [sp, #80]
  4024fc:	ldp	x29, x30, [sp], #96
  402500:	ret
  402504:	mov	w23, w27
  402508:	b	4024a0 <util_replace_whitespace+0xc0>

000000000040250c <util_replace_chars>:
  40250c:	stp	x29, x30, [sp, #-96]!
  402510:	mov	x29, sp
  402514:	cbz	x0, 402564 <util_replace_chars+0x58>
  402518:	stp	x19, x20, [sp, #16]
  40251c:	stp	x21, x22, [sp, #32]
  402520:	stp	x23, x24, [sp, #48]
  402524:	mov	x20, x0
  402528:	mov	x22, x1
  40252c:	ldrb	w0, [x0]
  402530:	mov	x21, x20
  402534:	mov	x23, #0x0                   	// #0
  402538:	mov	x19, #0x0                   	// #0
  40253c:	cbz	w0, 40255c <util_replace_chars+0x50>
  402540:	stp	x25, x26, [sp, #64]
  402544:	str	x27, [sp, #80]
  402548:	mov	x24, #0xffffffffffffffff    	// #-1
  40254c:	mov	w25, #0x5f                  	// #95
  402550:	mov	w26, #0x20                  	// #32
  402554:	mov	w27, #0x20                  	// #32
  402558:	b	4025ac <util_replace_chars+0xa0>
  40255c:	mov	x23, #0x0                   	// #0
  402560:	b	40264c <util_replace_chars+0x140>
  402564:	stp	x19, x20, [sp, #16]
  402568:	stp	x21, x22, [sp, #32]
  40256c:	stp	x23, x24, [sp, #48]
  402570:	stp	x25, x26, [sp, #64]
  402574:	str	x27, [sp, #80]
  402578:	adrp	x4, 402000 <main+0xba0>
  40257c:	add	x4, x4, #0xf58
  402580:	mov	w3, #0xa1                  	// #161
  402584:	adrp	x2, 402000 <main+0xba0>
  402588:	add	x2, x2, #0xebb
  40258c:	adrp	x1, 402000 <main+0xba0>
  402590:	add	x1, x1, #0xf10
  402594:	mov	w0, #0x0                   	// #0
  402598:	bl	401160 <log_assert_failed_realm@plt>
  40259c:	add	x19, x19, #0x1
  4025a0:	add	x21, x20, x19
  4025a4:	ldrb	w0, [x20, x19]
  4025a8:	cbz	w0, 402644 <util_replace_chars+0x138>
  4025ac:	mov	x1, x22
  4025b0:	bl	401220 <whitelisted_char_for_devnode@plt>
  4025b4:	cbnz	w0, 40259c <util_replace_chars+0x90>
  4025b8:	ldrb	w0, [x21]
  4025bc:	cmp	w0, #0x5c
  4025c0:	b.ne	4025d4 <util_replace_chars+0xc8>  // b.any
  4025c4:	add	x0, x20, x19
  4025c8:	ldrb	w0, [x0, #1]
  4025cc:	cmp	w0, #0x78
  4025d0:	b.eq	402614 <util_replace_chars+0x108>  // b.none
  4025d4:	mov	x1, x24
  4025d8:	mov	x0, x21
  4025dc:	bl	401170 <utf8_encoded_valid_unichar@plt>
  4025e0:	cmp	w0, #0x1
  4025e4:	b.gt	40261c <util_replace_chars+0x110>
  4025e8:	bl	401140 <__ctype_b_loc@plt>
  4025ec:	ldrb	w1, [x21]
  4025f0:	ldr	x0, [x0]
  4025f4:	ldrh	w0, [x0, x1, lsl #1]
  4025f8:	tst	x0, #0x2000
  4025fc:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  402600:	b.ne	402624 <util_replace_chars+0x118>  // b.any
  402604:	strb	w25, [x21]
  402608:	add	x19, x19, #0x1
  40260c:	add	x23, x23, #0x1
  402610:	b	4025a0 <util_replace_chars+0x94>
  402614:	add	x19, x19, #0x2
  402618:	b	4025a0 <util_replace_chars+0x94>
  40261c:	add	x19, x19, w0, sxtw
  402620:	b	4025a0 <util_replace_chars+0x94>
  402624:	mov	w1, w26
  402628:	mov	x0, x22
  40262c:	bl	401230 <strchr@plt>
  402630:	cbz	x0, 402604 <util_replace_chars+0xf8>
  402634:	strb	w27, [x21]
  402638:	add	x19, x19, #0x1
  40263c:	add	x23, x23, #0x1
  402640:	b	4025a0 <util_replace_chars+0x94>
  402644:	ldp	x25, x26, [sp, #64]
  402648:	ldr	x27, [sp, #80]
  40264c:	mov	x0, x23
  402650:	ldp	x19, x20, [sp, #16]
  402654:	ldp	x21, x22, [sp, #32]
  402658:	ldp	x23, x24, [sp, #48]
  40265c:	ldp	x29, x30, [sp], #96
  402660:	ret

0000000000402664 <udev_util_encode_string>:
  402664:	stp	x29, x30, [sp, #-16]!
  402668:	mov	x29, sp
  40266c:	bl	401190 <encode_devnode_name@plt>
  402670:	ldp	x29, x30, [sp], #16
  402674:	ret

0000000000402678 <__libc_csu_init>:
  402678:	stp	x29, x30, [sp, #-64]!
  40267c:	mov	x29, sp
  402680:	stp	x19, x20, [sp, #16]
  402684:	adrp	x20, 413000 <__FRAME_END__+0xfda0>
  402688:	add	x20, x20, #0xc90
  40268c:	stp	x21, x22, [sp, #32]
  402690:	adrp	x21, 413000 <__FRAME_END__+0xfda0>
  402694:	add	x21, x21, #0xc88
  402698:	sub	x20, x20, x21
  40269c:	mov	w22, w0
  4026a0:	stp	x23, x24, [sp, #48]
  4026a4:	mov	x23, x1
  4026a8:	mov	x24, x2
  4026ac:	bl	401090 <_init>
  4026b0:	cmp	xzr, x20, asr #3
  4026b4:	b.eq	4026e0 <__libc_csu_init+0x68>  // b.none
  4026b8:	asr	x20, x20, #3
  4026bc:	mov	x19, #0x0                   	// #0
  4026c0:	ldr	x3, [x21, x19, lsl #3]
  4026c4:	mov	x2, x24
  4026c8:	add	x19, x19, #0x1
  4026cc:	mov	x1, x23
  4026d0:	mov	w0, w22
  4026d4:	blr	x3
  4026d8:	cmp	x20, x19
  4026dc:	b.ne	4026c0 <__libc_csu_init+0x48>  // b.any
  4026e0:	ldp	x19, x20, [sp, #16]
  4026e4:	ldp	x21, x22, [sp, #32]
  4026e8:	ldp	x23, x24, [sp, #48]
  4026ec:	ldp	x29, x30, [sp], #64
  4026f0:	ret
  4026f4:	nop

00000000004026f8 <__libc_csu_fini>:
  4026f8:	ret

Disassembly of section .fini:

00000000004026fc <_fini>:
  4026fc:	stp	x29, x30, [sp, #-16]!
  402700:	mov	x29, sp
  402704:	ldp	x29, x30, [sp], #16
  402708:	ret
