
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//ldm.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xe28>:
   0:	mov	x2, x0
   4:	mov	x0, #0x0                   	// #0
   8:	add	x1, x2, x1
   c:	cmp	x2, x1
  10:	b.cc	18 <grub_mod_init-0xe10>  // b.lo, b.ul, b.last
  14:	ret
  18:	ldrb	w3, [x2], #1
  1c:	orr	x0, x3, x0, lsl #8
  20:	b	c <grub_mod_init-0xe1c>
  24:	ldr	w0, [x1]
  28:	cmp	w0, #0x3
  2c:	b.gt	48 <grub_mod_init-0xde0>
  30:	ldrb	w0, [x1, #56]
  34:	cmp	w0, #0x42
  38:	b.ne	50 <grub_mod_init-0xdd8>  // b.any
  3c:	mov	w0, #0x1                   	// #1
  40:	str	w0, [x2]
  44:	ret
  48:	mov	w0, #0x1                   	// #1
  4c:	b	44 <grub_mod_init-0xde4>
  50:	mov	w0, #0x0                   	// #0
  54:	b	44 <grub_mod_init-0xde4>
  58:	stp	x29, x30, [sp, #-176]!
  5c:	mov	x3, #0x80                  	// #128
  60:	mov	x29, sp
  64:	stp	x19, x20, [sp, #16]
  68:	mov	x19, x1
  6c:	mov	x20, x0
  70:	stp	x21, x22, [sp, #32]
  74:	mov	x21, x2
  78:	ldrsw	x2, [x1, #32]
  7c:	ldr	x1, [x1, #40]
  80:	add	x4, sp, #0x30
  84:	ldr	x22, [x0, #40]
  88:	str	x1, [x0, #40]
  8c:	ldr	x1, [x19, #24]
  90:	bl	0 <grub_disk_read>
  94:	str	x22, [x20, #40]
  98:	cbz	w0, a4 <grub_mod_init-0xd84>
  9c:	mov	w0, #0x0                   	// #0
  a0:	b	d0 <grub_mod_init-0xd58>
  a4:	adrp	x0, 0 <grub_mod_init-0xe28>
  a8:	mov	x2, #0x10                  	// #16
  ac:	ldr	x1, [x0]
  b0:	add	x0, sp, #0x30
  b4:	bl	0 <grub_memcmp>
  b8:	cbnz	w0, 9c <grub_mod_init-0xd8c>
  bc:	ldp	x0, x1, [x19, #8]
  c0:	add	x0, x0, x1
  c4:	sub	x0, x0, #0x1
  c8:	str	x0, [x21]
  cc:	mov	w0, #0x1                   	// #1
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldp	x21, x22, [sp, #32]
  d8:	ldp	x29, x30, [sp], #176
  dc:	ret
	...
  e8:	sub	sp, sp, #0x3f0
  ec:	stp	x29, x30, [sp]
  f0:	mov	x29, sp
  f4:	stp	x25, x26, [sp, #64]
  f8:	mov	x25, x1
  fc:	adrp	x1, 0 <grub_mod_init-0xe28>
 100:	stp	x19, x20, [sp, #16]
 104:	mov	x20, x2
 108:	add	x2, sp, #0x1f0
 10c:	ldr	x1, [x1]
 110:	stp	x21, x22, [sp, #32]
 114:	mov	x22, x0
 118:	stp	x23, x24, [sp, #48]
 11c:	stp	x27, x28, [sp, #80]
 120:	str	wzr, [sp, #496]
 124:	bl	0 <grub_partition_msdos_iterate>
 128:	cbz	w0, 16c <grub_mod_init-0xcbc>
 12c:	adrp	x0, 0 <grub_mod_init-0xe28>
 130:	mov	w21, #0x0                   	// #0
 134:	ldr	x0, [x0]
 138:	str	wzr, [x0]
 13c:	mov	w19, #0x0                   	// #0
 140:	adrp	x23, 0 <grub_mod_init-0xe28>
 144:	adrp	x24, 0 <grub_mod_init-0xe28>
 148:	cmp	w19, #0x1
 14c:	b.eq	174 <grub_mod_init-0xcb4>  // b.none
 150:	cmp	w19, #0x2
 154:	b.eq	1d4 <grub_mod_init-0xc54>  // b.none
 158:	cbnz	w21, 208 <grub_mod_init-0xc20>
 15c:	add	w19, w19, #0x1
 160:	cmp	w19, #0x3
 164:	b.ne	148 <grub_mod_init-0xce0>  // b.any
 168:	b	1ac <grub_mod_init-0xc7c>
 16c:	ldr	w21, [sp, #496]
 170:	b	13c <grub_mod_init-0xcec>
 174:	cbz	w21, 15c <grub_mod_init-0xccc>
 178:	ldr	x0, [x22, #40]
 17c:	cbnz	x0, 15c <grub_mod_init-0xccc>
 180:	mov	x0, x22
 184:	bl	0 <grub_disk_get_size>
 188:	cmn	x0, #0x1
 18c:	b.eq	15c <grub_mod_init-0xccc>  // b.none
 190:	sub	x1, x0, #0x1
 194:	add	x4, sp, #0xb0
 198:	mov	x0, x22
 19c:	mov	x3, #0x13b                 	// #315
 1a0:	mov	x2, #0x0                   	// #0
 1a4:	bl	0 <grub_disk_read>
 1a8:	cbz	w0, 210 <grub_mod_init-0xc18>
 1ac:	str	xzr, [sp, #120]
 1b0:	ldp	x29, x30, [sp]
 1b4:	ldp	x19, x20, [sp, #16]
 1b8:	ldp	x21, x22, [sp, #32]
 1bc:	ldp	x23, x24, [sp, #48]
 1c0:	ldp	x25, x26, [sp, #64]
 1c4:	ldp	x27, x28, [sp, #80]
 1c8:	ldr	x0, [sp, #120]
 1cc:	add	sp, sp, #0x3f0
 1d0:	ret
 1d4:	ldr	x1, [x24]
 1d8:	add	x2, sp, #0x1f0
 1dc:	mov	x0, x22
 1e0:	str	xzr, [sp, #496]
 1e4:	bl	0 <grub_gpt_partition_map_iterate>
 1e8:	cbz	w0, 1fc <grub_mod_init-0xc2c>
 1ec:	adrp	x0, 0 <grub_mod_init-0xe28>
 1f0:	ldr	x0, [x0]
 1f4:	str	wzr, [x0]
 1f8:	b	15c <grub_mod_init-0xccc>
 1fc:	ldr	x1, [sp, #496]
 200:	cbnz	x1, 194 <grub_mod_init-0xc94>
 204:	b	15c <grub_mod_init-0xccc>
 208:	mov	x1, #0x6                   	// #6
 20c:	b	194 <grub_mod_init-0xc94>
 210:	ldr	x1, [x23]
 214:	add	x0, sp, #0xb0
 218:	mov	x2, #0x8                   	// #8
 21c:	bl	0 <grub_memcmp>
 220:	cbnz	w0, 15c <grub_mod_init-0xccc>
 224:	ldrh	w0, [sp, #188]
 228:	ldrb	w1, [sp, #189]
 22c:	orr	w0, w1, w0, lsl #8
 230:	sxth	w0, w0
 234:	cmp	w0, #0x2
 238:	b.ne	15c <grub_mod_init-0xccc>  // b.any
 23c:	ldrh	w0, [sp, #190]
 240:	ldrb	w1, [sp, #191]
 244:	orr	w0, w1, w0, lsl #8
 248:	sub	w0, w0, #0xb
 24c:	and	w0, w0, #0xffff
 250:	cmp	w0, #0x1
 254:	b.hi	15c <grub_mod_init-0xccc>  // b.pmore
 258:	mov	x0, #0x41                  	// #65
 25c:	bl	0 <grub_malloc>
 260:	str	x0, [x25]
 264:	cbz	x0, 1ac <grub_mod_init-0xc7c>
 268:	add	x1, sp, #0xe0
 26c:	mov	x2, #0x40                  	// #64
 270:	bl	0 <grub_memmove>
 274:	ldr	x0, [x25]
 278:	strb	wzr, [x0, #64]
 27c:	ldr	x0, [x25]
 280:	bl	0 <grub_strlen>
 284:	str	x0, [x25, #8]
 288:	add	x0, sp, #0x250
 28c:	ldur	x0, [x0, #-133]
 290:	rev	x0, x0
 294:	str	x0, [x20]
 298:	mov	x0, #0x0                   	// #0
 29c:	add	x1, sp, #0xb0
 2a0:	add	x1, x1, x0
 2a4:	ldrb	w1, [x1, #176]
 2a8:	cbz	w1, 2b8 <grub_mod_init-0xb70>
 2ac:	add	x0, x0, #0x1
 2b0:	cmp	x0, #0x40
 2b4:	b.ne	29c <grub_mod_init-0xb8c>  // b.any
 2b8:	add	x20, sp, #0x160
 2bc:	mov	x1, x20
 2c0:	bl	0 <grub_diskfilter_get_vg_by_uuid>
 2c4:	str	x0, [sp, #120]
 2c8:	cbnz	x0, 1b0 <grub_mod_init-0xc78>
 2cc:	mov	x0, #0x38                  	// #56
 2d0:	bl	0 <grub_malloc>
 2d4:	mov	x19, x0
 2d8:	cbz	x0, 31c <grub_mod_init-0xb0c>
 2dc:	mov	x0, #0x1                   	// #1
 2e0:	str	x0, [x19, #24]
 2e4:	mov	x0, #0x21                  	// #33
 2e8:	bl	0 <grub_malloc>
 2ec:	str	x0, [x19, #16]
 2f0:	mov	x0, #0x41                  	// #65
 2f4:	bl	0 <grub_malloc>
 2f8:	str	x0, [x19]
 2fc:	mov	x1, x0
 300:	cbz	x0, 30c <grub_mod_init-0xb1c>
 304:	ldr	x2, [x19, #16]
 308:	cbnz	x2, 328 <grub_mod_init-0xb00>
 30c:	mov	x0, x1
 310:	bl	0 <grub_free>
 314:	ldr	x0, [x19, #16]
 318:	bl	0 <grub_free>
 31c:	ldr	x0, [x25]
 320:	bl	0 <grub_free>
 324:	b	1b0 <grub_mod_init-0xc78>
 328:	mov	x1, x20
 32c:	mov	x2, #0x40                  	// #64
 330:	bl	0 <grub_memmove>
 334:	add	x27, sp, #0x3f0
 338:	ldr	x0, [x19, #16]
 33c:	add	x1, sp, #0x1a0
 340:	mov	x2, #0x20                  	// #32
 344:	bl	0 <grub_memmove>
 348:	ldr	x0, [x19, #16]
 34c:	strb	wzr, [x0, #32]
 350:	ldr	x0, [x19]
 354:	strb	wzr, [x0, #64]
 358:	ldr	x0, [x19]
 35c:	bl	0 <grub_strlen>
 360:	str	x0, [x19, #8]
 364:	add	x0, sp, #0x250
 368:	stp	xzr, xzr, [x19, #32]
 36c:	ldur	x21, [x0, #-117]
 370:	ldur	x23, [x0, #-109]
 374:	rev	x21, x21
 378:	rev	x23, x23
 37c:	add	x0, x21, x23
 380:	add	x21, x21, #0x12
 384:	mov	x24, x21
 388:	str	x0, [sp, #104]
 38c:	ldr	x0, [sp, #104]
 390:	cmp	x0, x24
 394:	b.hi	3dc <grub_mod_init-0xa4c>  // b.pmore
 398:	mov	x27, x21
 39c:	ldr	x0, [sp, #104]
 3a0:	cmp	x0, x27
 3a4:	b.hi	544 <grub_mod_init-0x8e4>  // b.pmore
 3a8:	str	x21, [sp, #112]
 3ac:	ldp	x0, x1, [sp, #104]
 3b0:	cmp	x0, x1
 3b4:	b.hi	7a0 <grub_mod_init-0x688>  // b.pmore
 3b8:	mov	x26, #0x100000001           	// #4294967297
 3bc:	ldr	x0, [sp, #104]
 3c0:	cmp	x0, x21
 3c4:	b.hi	ad8 <grub_mod_init-0x350>  // b.pmore
 3c8:	mov	x0, x19
 3cc:	bl	0 <grub_diskfilter_vg_register>
 3d0:	cbnz	w0, 470 <grub_mod_init-0x9b8>
 3d4:	str	x19, [sp, #120]
 3d8:	b	1b0 <grub_mod_init-0xc78>
 3dc:	add	x4, sp, #0x1f0
 3e0:	mov	x1, x24
 3e4:	mov	x0, x22
 3e8:	mov	x3, #0x200                 	// #512
 3ec:	mov	x2, #0x0                   	// #0
 3f0:	bl	0 <grub_disk_read>
 3f4:	cbnz	w0, 470 <grub_mod_init-0x9b8>
 3f8:	add	x23, sp, #0x1f0
 3fc:	adrp	x0, 0 <grub_mod_init-0xe28>
 400:	mov	x2, #0x4                   	// #4
 404:	ldr	x1, [x0]
 408:	mov	x0, x23
 40c:	bl	0 <grub_memcmp>
 410:	cbnz	w0, 530 <grub_mod_init-0x8f8>
 414:	ldrh	w0, [x23, #16]
 418:	ldrb	w1, [x23, #17]
 41c:	orr	w0, w1, w0, lsl #8
 420:	and	w0, w0, #0xffff
 424:	cmp	w0, #0x1
 428:	b.hi	530 <grub_mod_init-0x8f8>  // b.pmore
 42c:	ldrb	w0, [x23, #19]
 430:	cmp	w0, #0x34
 434:	b.ne	530 <grub_mod_init-0x8f8>  // b.any
 438:	mov	x0, #0x48                  	// #72
 43c:	bl	0 <grub_zalloc>
 440:	mov	x20, x0
 444:	cbz	x0, 470 <grub_mod_init-0x9b8>
 448:	str	xzr, [x0, #24]
 44c:	add	x26, x23, #0x18
 450:	add	x28, x23, #0x80
 454:	ldrb	w2, [x23, #24]
 458:	ldrb	w5, [x23, #24]
 45c:	add	x2, x2, #0x1
 460:	add	x2, x26, x2
 464:	cmp	x28, x2
 468:	b.hi	494 <grub_mod_init-0x994>  // b.pmore
 46c:	bl	0 <grub_free>
 470:	ldr	x20, [x19, #40]
 474:	mov	w22, #0x38                  	// #56
 478:	cbnz	x20, dd4 <grub_mod_init-0x54>
 47c:	ldr	x20, [x19, #32]
 480:	cbnz	x20, ddc <grub_mod_init-0x4c>
 484:	ldr	x0, [x19]
 488:	bl	0 <grub_free>
 48c:	mov	x0, x19
 490:	b	318 <grub_mod_init-0xb10>
 494:	add	w0, w5, #0x2
 498:	sxtw	x0, w0
 49c:	bl	0 <grub_malloc>
 4a0:	str	x0, [x20, #64]
 4a4:	cbnz	x0, 4b0 <grub_mod_init-0x978>
 4a8:	mov	x0, x20
 4ac:	b	46c <grub_mod_init-0x9bc>
 4b0:	ldrb	w2, [x23, #24]
 4b4:	mov	x1, x26
 4b8:	add	x2, x2, #0x1
 4bc:	bl	0 <grub_memmove>
 4c0:	ldr	x0, [x20, #64]
 4c4:	ldrb	w2, [x23, #24]
 4c8:	add	x0, x0, x2
 4cc:	strb	wzr, [x0, #1]
 4d0:	ldrb	w0, [x23, #24]
 4d4:	add	x0, x0, #0x1
 4d8:	add	x2, x26, x0
 4dc:	ldrb	w0, [x26, x0]
 4e0:	add	x0, x0, #0x1
 4e4:	add	x26, x2, x0
 4e8:	cmp	x26, x28
 4ec:	b.cs	4a8 <grub_mod_init-0x980>  // b.hs, b.nlast
 4f0:	ldrb	w2, [x2, x0]
 4f4:	add	x0, x2, #0x1
 4f8:	add	x5, x26, x0
 4fc:	cmp	x28, x5
 500:	b.ls	4a8 <grub_mod_init-0x980>  // b.plast
 504:	str	x2, [x20, #8]
 508:	bl	0 <grub_malloc>
 50c:	str	x0, [x20]
 510:	ldr	x2, [x20, #8]
 514:	add	x1, x26, #0x1
 518:	bl	0 <grub_memmove>
 51c:	ldp	x1, x0, [x20]
 520:	strb	wzr, [x1, x0]
 524:	ldr	x0, [x19, #32]
 528:	str	x0, [x20, #56]
 52c:	str	x20, [x19, #32]
 530:	add	x23, x23, #0x80
 534:	cmp	x23, x27
 538:	b.ne	3fc <grub_mod_init-0xa2c>  // b.any
 53c:	add	x24, x24, #0x1
 540:	b	38c <grub_mod_init-0xa9c>
 544:	add	x4, sp, #0x1f0
 548:	mov	x1, x27
 54c:	mov	x0, x22
 550:	mov	x3, #0x200                 	// #512
 554:	mov	x2, #0x0                   	// #0
 558:	bl	0 <grub_disk_read>
 55c:	cbnz	w0, 470 <grub_mod_init-0x9b8>
 560:	add	x20, sp, #0x1f0
 564:	adrp	x0, 0 <grub_mod_init-0xe28>
 568:	mov	x2, #0x4                   	// #4
 56c:	ldr	x1, [x0]
 570:	mov	x0, x20
 574:	bl	0 <grub_memcmp>
 578:	cbnz	w0, 788 <grub_mod_init-0x6a0>
 57c:	ldrh	w0, [x20, #16]
 580:	ldrb	w1, [x20, #17]
 584:	orr	w0, w1, w0, lsl #8
 588:	and	w0, w0, #0xffff
 58c:	cmp	w0, #0x1
 590:	b.hi	788 <grub_mod_init-0x6a0>  // b.pmore
 594:	ldrb	w0, [x20, #19]
 598:	cmp	w0, #0x51
 59c:	b.ne	788 <grub_mod_init-0x6a0>  // b.any
 5a0:	mov	x0, #0x60                  	// #96
 5a4:	bl	0 <grub_zalloc>
 5a8:	mov	x26, x0
 5ac:	cbz	x0, 470 <grub_mod_init-0x9b8>
 5b0:	mov	w0, #0x1                   	// #1
 5b4:	str	w0, [x26, #28]
 5b8:	mov	x0, #0x1                   	// #1
 5bc:	str	x0, [x26, #32]
 5c0:	str	w0, [x26, #56]
 5c4:	mov	x0, #0x38                  	// #56
 5c8:	str	x19, [x26, #72]
 5cc:	bl	0 <grub_zalloc>
 5d0:	str	x0, [x26, #64]
 5d4:	mov	x24, x0
 5d8:	cbz	x0, 470 <grub_mod_init-0x9b8>
 5dc:	mov	w0, #0x1                   	// #1
 5e0:	str	xzr, [x24]
 5e4:	str	w0, [x24, #16]
 5e8:	mov	x0, #0x800000000           	// #34359738368
 5ec:	str	x0, [x24, #32]
 5f0:	mov	x0, #0x100                 	// #256
 5f4:	bl	0 <grub_zalloc>
 5f8:	str	x0, [x24, #40]
 5fc:	ldr	x0, [x26, #64]
 600:	ldr	x0, [x0, #40]
 604:	cbz	x0, 470 <grub_mod_init-0x9b8>
 608:	ldrb	w0, [x20, #24]
 60c:	add	x24, x20, #0x18
 610:	add	x23, x20, #0x80
 614:	add	x1, x0, #0x1
 618:	add	x1, x24, x1
 61c:	cmp	x23, x1
 620:	b.hi	62c <grub_mod_init-0x7fc>  // b.pmore
 624:	mov	x0, x26
 628:	b	46c <grub_mod_init-0x9bc>
 62c:	add	x0, x0, #0x2
 630:	bl	0 <grub_malloc>
 634:	str	x0, [x26, #88]
 638:	cbz	x0, 624 <grub_mod_init-0x804>
 63c:	ldrb	w2, [x20, #24]
 640:	mov	x1, x24
 644:	add	x2, x2, #0x1
 648:	bl	0 <grub_memmove>
 64c:	ldr	x0, [x26, #88]
 650:	ldrb	w1, [x20, #24]
 654:	add	x0, x0, x1
 658:	strb	wzr, [x0, #1]
 65c:	ldrb	w5, [x20, #24]
 660:	add	x28, x5, #0x1
 664:	add	x3, x24, x28
 668:	ldrb	w1, [x24, x28]
 66c:	ldrb	w0, [x24, x28]
 670:	add	x1, x1, #0x1
 674:	add	x1, x3, x1
 678:	cmp	x23, x1
 67c:	b.ls	624 <grub_mod_init-0x804>  // b.plast
 680:	add	w0, w0, #0x1
 684:	str	x3, [sp, #112]
 688:	sxtw	x0, w0
 68c:	bl	0 <grub_malloc>
 690:	str	x0, [x26, #16]
 694:	ldr	x3, [sp, #112]
 698:	cbnz	x0, 6a8 <grub_mod_init-0x780>
 69c:	ldr	x0, [x26, #88]
 6a0:	bl	0 <grub_free>
 6a4:	b	624 <grub_mod_init-0x804>
 6a8:	ldrb	w2, [x24, x28]
 6ac:	add	x1, x3, #0x1
 6b0:	str	x3, [sp, #112]
 6b4:	bl	0 <grub_memmove>
 6b8:	ldrb	w0, [x24, x28]
 6bc:	ldr	x1, [x26, #16]
 6c0:	strb	wzr, [x1, x0]
 6c4:	adrp	x0, 0 <grub_mod_init-0xe28>
 6c8:	ldr	x0, [x0]
 6cc:	ldr	x1, [x19]
 6d0:	ldr	x2, [x26, #16]
 6d4:	bl	0 <grub_xasprintf>
 6d8:	str	x0, [x26]
 6dc:	ldr	x3, [sp, #112]
 6e0:	cbnz	x0, 6f4 <grub_mod_init-0x734>
 6e4:	ldr	x0, [x26, #88]
 6e8:	bl	0 <grub_free>
 6ec:	ldr	x0, [x26, #16]
 6f0:	b	6a0 <grub_mod_init-0x788>
 6f4:	ldrb	w0, [x24, x28]
 6f8:	add	x0, x0, #0x1
 6fc:	add	x2, x3, x0
 700:	ldrb	w0, [x3, x0]
 704:	add	x0, x0, #0x1
 708:	add	x1, x2, x0
 70c:	cmp	x1, x23
 710:	b.cs	6e4 <grub_mod_init-0x744>  // b.hs, b.nlast
 714:	ldrb	w0, [x2, x0]
 718:	add	x0, x0, #0x1
 71c:	add	x1, x1, x0
 720:	cmp	x1, x23
 724:	b.cs	6e4 <grub_mod_init-0x744>  // b.hs, b.nlast
 728:	add	x0, x1, #0x15
 72c:	cmp	x0, x23
 730:	b.cs	6e4 <grub_mod_init-0x744>  // b.hs, b.nlast
 734:	ldrb	w1, [x1, #21]
 738:	add	x1, x1, #0x1
 73c:	add	x0, x0, x1
 740:	cmp	x0, x23
 744:	b.cs	6e4 <grub_mod_init-0x744>  // b.hs, b.nlast
 748:	add	x2, x0, #0x10
 74c:	cmp	x2, x23
 750:	b.cs	6e4 <grub_mod_init-0x744>  // b.hs, b.nlast
 754:	ldrb	w1, [x0, #16]
 758:	add	x5, x1, #0x1
 75c:	add	x2, x2, x5
 760:	cmp	x23, x2
 764:	b.ls	6e4 <grub_mod_init-0x744>  // b.plast
 768:	add	x0, x0, #0x11
 76c:	bl	0 <grub_mod_init-0xe28>
 770:	ldr	x1, [x26, #64]
 774:	str	x0, [x26, #40]
 778:	str	x0, [x1, #8]
 77c:	ldr	x0, [x19, #40]
 780:	str	x0, [x26, #80]
 784:	str	x26, [x19, #40]
 788:	add	x20, x20, #0x80
 78c:	add	x0, sp, #0x3f0
 790:	cmp	x20, x0
 794:	b.ne	564 <grub_mod_init-0x8c4>  // b.any
 798:	add	x27, x27, #0x1
 79c:	b	39c <grub_mod_init-0xa8c>
 7a0:	ldr	x1, [sp, #112]
 7a4:	add	x4, sp, #0x1f0
 7a8:	mov	x0, x22
 7ac:	mov	x3, #0x200                 	// #512
 7b0:	mov	x2, #0x0                   	// #0
 7b4:	bl	0 <grub_disk_read>
 7b8:	cbnz	w0, 470 <grub_mod_init-0x9b8>
 7bc:	add	x20, sp, #0x1f0
 7c0:	adrp	x0, 0 <grub_mod_init-0xe28>
 7c4:	mov	x2, #0x4                   	// #4
 7c8:	ldr	x1, [x0]
 7cc:	mov	x0, x20
 7d0:	bl	0 <grub_memcmp>
 7d4:	cbnz	w0, 9d8 <grub_mod_init-0x450>
 7d8:	ldrh	w0, [x20, #16]
 7dc:	ldrb	w1, [x20, #17]
 7e0:	orr	w0, w1, w0, lsl #8
 7e4:	and	w0, w0, #0xffff
 7e8:	cmp	w0, #0x1
 7ec:	b.hi	9d8 <grub_mod_init-0x450>  // b.pmore
 7f0:	ldrb	w0, [x20, #19]
 7f4:	cmp	w0, #0x32
 7f8:	b.ne	9d8 <grub_mod_init-0x450>  // b.any
 7fc:	mov	x0, #0x60                  	// #96
 800:	bl	0 <grub_zalloc>
 804:	mov	x27, x0
 808:	cbz	x0, 470 <grub_mod_init-0x9b8>
 80c:	str	xzr, [x0]
 810:	add	x28, x20, #0x18
 814:	str	xzr, [x0, #16]
 818:	add	x24, x20, #0x80
 81c:	str	wzr, [x0, #56]
 820:	ldrb	w0, [x20, #24]
 824:	add	x1, x0, #0x1
 828:	add	x1, x28, x1
 82c:	cmp	x24, x1
 830:	b.ls	470 <grub_mod_init-0x9b8>  // b.plast
 834:	add	x0, x0, #0x2
 838:	bl	0 <grub_malloc>
 83c:	str	x0, [x27, #88]
 840:	cbnz	x0, 84c <grub_mod_init-0x5dc>
 844:	mov	x0, x27
 848:	b	46c <grub_mod_init-0x9bc>
 84c:	ldrb	w2, [x20, #24]
 850:	mov	x1, x28
 854:	add	x2, x2, #0x1
 858:	bl	0 <grub_memmove>
 85c:	ldr	x0, [x27, #88]
 860:	ldrb	w1, [x20, #24]
 864:	add	x0, x0, x1
 868:	strb	wzr, [x0, #1]
 86c:	ldrb	w0, [x20, #24]
 870:	add	x0, x0, #0x1
 874:	add	x1, x28, x0
 878:	ldrb	w0, [x28, x0]
 87c:	add	x0, x0, #0x1
 880:	add	x2, x1, x0
 884:	cmp	x2, x24
 888:	b.cc	898 <grub_mod_init-0x590>  // b.lo, b.ul, b.last
 88c:	ldr	x0, [x27, #88]
 890:	bl	0 <grub_free>
 894:	b	844 <grub_mod_init-0x5e4>
 898:	ldrb	w0, [x1, x0]
 89c:	add	x0, x0, #0x1
 8a0:	add	x1, x2, x0
 8a4:	cmp	x1, x24
 8a8:	b.cs	88c <grub_mod_init-0x59c>  // b.hs, b.nlast
 8ac:	add	x5, x1, #0x5
 8b0:	ldrb	w28, [x2, x0]
 8b4:	cmp	x5, x24
 8b8:	b.cs	88c <grub_mod_init-0x59c>  // b.hs, b.nlast
 8bc:	ldrb	w0, [x1, #5]
 8c0:	add	x0, x0, #0x1
 8c4:	add	x5, x5, x0
 8c8:	cmp	x5, x24
 8cc:	b.cs	88c <grub_mod_init-0x59c>  // b.hs, b.nlast
 8d0:	add	x0, x5, #0x10
 8d4:	str	x0, [sp, #128]
 8d8:	ldrb	w0, [x5, #16]
 8dc:	add	x1, x5, #0x10
 8e0:	add	x0, x0, #0x1
 8e4:	add	x0, x1, x0
 8e8:	cmp	x24, x0
 8ec:	b.ls	88c <grub_mod_init-0x59c>  // b.plast
 8f0:	ldr	x23, [x19, #40]
 8f4:	add	x26, x5, #0x11
 8f8:	cbnz	x23, 910 <grub_mod_init-0x518>
 8fc:	ldr	x0, [x27, #88]
 900:	bl	0 <grub_free>
 904:	mov	x0, x27
 908:	bl	0 <grub_free>
 90c:	b	9d8 <grub_mod_init-0x450>
 910:	ldr	x0, [x23, #88]
 914:	ldrb	w8, [x5, #16]
 918:	ldrb	w2, [x0]
 91c:	cmp	w2, w8
 920:	b.eq	92c <grub_mod_init-0x4fc>  // b.none
 924:	ldr	x23, [x23, #80]
 928:	b	8f8 <grub_mod_init-0x530>
 92c:	and	x2, x2, #0xff
 930:	mov	x1, x26
 934:	add	x0, x0, #0x1
 938:	str	x5, [sp, #136]
 93c:	bl	0 <grub_memcmp>
 940:	ldr	x5, [sp, #136]
 944:	cbnz	w0, 924 <grub_mod_init-0x504>
 948:	ldr	x0, [x23, #40]
 94c:	str	x0, [x27, #40]
 950:	cmp	w28, #0x2
 954:	b.ne	9f8 <grub_mod_init-0x430>  // b.any
 958:	mov	x0, #0x8                   	// #8
 95c:	str	wzr, [x27, #28]
 960:	str	x0, [x27, #32]
 964:	mov	x0, #0x1c0                 	// #448
 968:	bl	0 <grub_malloc>
 96c:	str	x0, [x27, #64]
 970:	cbz	x0, 470 <grub_mod_init-0x9b8>
 974:	ldr	x0, [x23, #64]
 978:	ldp	w2, w1, [x0, #32]
 97c:	cmp	w1, w2
 980:	b.ne	9a4 <grub_mod_init-0x484>  // b.any
 984:	lsl	w1, w1, #1
 988:	str	w1, [x0, #36]
 98c:	ldr	x0, [x0, #40]
 990:	lsl	x1, x1, #5
 994:	bl	0 <grub_realloc>
 998:	cbz	x0, 470 <grub_mod_init-0x9b8>
 99c:	ldr	x1, [x23, #64]
 9a0:	str	x0, [x1, #40]
 9a4:	ldr	x1, [x23, #64]
 9a8:	ldr	w0, [x1, #32]
 9ac:	ldr	x5, [x1, #40]
 9b0:	ubfiz	x4, x0, #5, #32
 9b4:	add	w0, w0, #0x1
 9b8:	add	x2, x5, x4
 9bc:	str	xzr, [x2, #16]
 9c0:	str	xzr, [x5, x4]
 9c4:	str	w0, [x1, #32]
 9c8:	ldr	x0, [x19, #40]
 9cc:	str	x27, [x2, #24]
 9d0:	str	x0, [x27, #80]
 9d4:	str	x27, [x19, #40]
 9d8:	add	x20, x20, #0x80
 9dc:	add	x0, sp, #0x3f0
 9e0:	cmp	x0, x20
 9e4:	b.ne	7c0 <grub_mod_init-0x668>  // b.any
 9e8:	ldr	x0, [sp, #112]
 9ec:	add	x0, x0, #0x1
 9f0:	str	x0, [sp, #112]
 9f4:	b	3ac <grub_mod_init-0xa7c>
 9f8:	mov	x0, #0x1                   	// #1
 9fc:	str	w0, [x27, #28]
 a00:	str	x0, [x27, #32]
 a04:	mov	x0, #0x38                  	// #56
 a08:	str	x5, [sp, #136]
 a0c:	bl	0 <grub_malloc>
 a10:	str	x0, [x27, #64]
 a14:	mov	x26, x0
 a18:	cbz	x0, 470 <grub_mod_init-0x9b8>
 a1c:	ldr	x0, [x23, #40]
 a20:	stp	xzr, x0, [x26]
 a24:	cmp	w28, #0x1
 a28:	str	wzr, [x26, #20]
 a2c:	ldr	x5, [sp, #136]
 a30:	b.ne	ac0 <grub_mod_init-0x368>  // b.any
 a34:	str	wzr, [x26, #16]
 a38:	ldrb	w0, [x5, #16]
 a3c:	ldr	x1, [sp, #128]
 a40:	add	x0, x0, #0x1
 a44:	add	x28, x1, x0
 a48:	ldrb	w0, [x20, #18]
 a4c:	add	x5, x28, #0x1
 a50:	tbz	w0, #4, 470 <grub_mod_init-0x9b8>
 a54:	cmp	x5, x24
 a58:	b.cs	88c <grub_mod_init-0x59c>  // b.hs, b.nlast
 a5c:	ldrb	w1, [x28, #1]
 a60:	add	x0, x1, #0x1
 a64:	add	x0, x5, x0
 a68:	cmp	x24, x0
 a6c:	b.ls	88c <grub_mod_init-0x59c>  // b.plast
 a70:	add	x0, x28, #0x2
 a74:	bl	0 <grub_mod_init-0xe28>
 a78:	str	w0, [x26, #48]
 a7c:	ldrb	w1, [x28, #1]
 a80:	add	x1, x1, #0x1
 a84:	add	x0, x5, x1
 a88:	ldrb	w1, [x5, x1]
 a8c:	add	x5, x1, #0x1
 a90:	add	x5, x0, x5
 a94:	cmp	x24, x5
 a98:	b.ls	88c <grub_mod_init-0x59c>  // b.plast
 a9c:	add	x0, x0, #0x1
 aa0:	bl	0 <grub_mod_init-0xe28>
 aa4:	stp	w0, w0, [x26, #32]
 aa8:	ubfiz	x0, x0, #5, #32
 aac:	bl	0 <grub_zalloc>
 ab0:	str	x0, [x26, #40]
 ab4:	ldr	x0, [x23, #64]
 ab8:	ldr	x0, [x0, #40]
 abc:	b	970 <grub_mod_init-0x4b8>
 ac0:	cmp	w28, #0x3
 ac4:	b.ne	470 <grub_mod_init-0x9b8>  // b.any
 ac8:	mov	x0, #0x5                   	// #5
 acc:	movk	x0, #0x2, lsl #32
 ad0:	str	x0, [x26, #16]
 ad4:	b	a38 <grub_mod_init-0x3f0>
 ad8:	add	x4, sp, #0x1f0
 adc:	mov	x1, x21
 ae0:	mov	x0, x22
 ae4:	mov	x3, #0x200                 	// #512
 ae8:	mov	x2, #0x0                   	// #0
 aec:	bl	0 <grub_disk_read>
 af0:	cbnz	w0, 470 <grub_mod_init-0x9b8>
 af4:	add	x24, sp, #0x1f0
 af8:	adrp	x0, 0 <grub_mod_init-0xe28>
 afc:	mov	x2, #0x4                   	// #4
 b00:	add	x20, x24, #0x80
 b04:	ldr	x1, [x0]
 b08:	mov	x0, x24
 b0c:	bl	0 <grub_memcmp>
 b10:	cbnz	w0, bd0 <grub_mod_init-0x258>
 b14:	ldrh	w0, [x24, #16]
 b18:	ldrb	w1, [x24, #17]
 b1c:	orr	w0, w1, w0, lsl #8
 b20:	and	w0, w0, #0xffff
 b24:	cmp	w0, #0x1
 b28:	b.hi	bd0 <grub_mod_init-0x258>  // b.pmore
 b2c:	ldrb	w0, [x24, #19]
 b30:	cmp	w0, #0x33
 b34:	b.ne	bd0 <grub_mod_init-0x258>  // b.any
 b38:	ldrb	w0, [x24, #24]
 b3c:	add	x1, x24, #0x18
 b40:	ldr	x23, [x19, #40]
 b44:	add	x0, x0, #0x1
 b48:	add	x4, x1, x0
 b4c:	cmp	x4, x20
 b50:	b.cs	470 <grub_mod_init-0x9b8>  // b.hs, b.nlast
 b54:	ldrb	w0, [x1, x0]
 b58:	add	x0, x0, #0x1
 b5c:	add	x4, x4, x0
 b60:	cmp	x4, x20
 b64:	b.cs	470 <grub_mod_init-0x9b8>  // b.hs, b.nlast
 b68:	add	x24, x4, #0x1c
 b6c:	add	x0, x4, #0xc
 b70:	cmp	x24, x20
 b74:	b.cs	470 <grub_mod_init-0x9b8>  // b.hs, b.nlast
 b78:	mov	x1, #0x8                   	// #8
 b7c:	bl	0 <grub_mod_init-0xe28>
 b80:	mov	x1, #0x8                   	// #8
 b84:	str	x0, [sp, #112]
 b88:	add	x0, x4, #0x14
 b8c:	bl	0 <grub_mod_init-0xe28>
 b90:	ldrb	w1, [x4, #28]
 b94:	str	x0, [sp, #128]
 b98:	add	x28, x1, #0x1
 b9c:	add	x27, x24, x28
 ba0:	cmp	x27, x20
 ba4:	b.cs	470 <grub_mod_init-0x9b8>  // b.hs, b.nlast
 ba8:	add	x0, x4, #0x1d
 bac:	bl	0 <grub_mod_init-0xe28>
 bb0:	str	x0, [sp, #136]
 bb4:	ldrb	w0, [x24, x28]
 bb8:	add	x0, x0, #0x1
 bbc:	add	x0, x27, x0
 bc0:	cmp	x20, x0
 bc4:	b.ls	470 <grub_mod_init-0x9b8>  // b.plast
 bc8:	add	x4, x27, #0x1
 bcc:	cbnz	x23, be8 <grub_mod_init-0x240>
 bd0:	add	x0, sp, #0x3f0
 bd4:	mov	x24, x20
 bd8:	cmp	x20, x0
 bdc:	b.ne	af8 <grub_mod_init-0x330>  // b.any
 be0:	add	x21, x21, #0x1
 be4:	b	3bc <grub_mod_init-0xa6c>
 be8:	ldr	x1, [x23, #88]
 bec:	ldrb	w2, [x27]
 bf0:	ldrb	w0, [x1]
 bf4:	cmp	w2, w0
 bf8:	b.ne	ca0 <grub_mod_init-0x188>  // b.any
 bfc:	mov	x0, x4
 c00:	and	x2, x2, #0xff
 c04:	add	x1, x1, #0x1
 c08:	str	x4, [sp, #144]
 c0c:	bl	0 <grub_memcmp>
 c10:	ldr	x4, [sp, #144]
 c14:	cbnz	w0, ca0 <grub_mod_init-0x188>
 c18:	ldrb	w7, [x24, x28]
 c1c:	add	x7, x7, #0x1
 c20:	add	x4, x27, x7
 c24:	cmp	x4, x20
 c28:	b.cs	470 <grub_mod_init-0x9b8>  // b.hs, b.nlast
 c2c:	ldr	x6, [x19, #32]
 c30:	add	x1, x4, #0x1
 c34:	mov	x24, #0x0                   	// #0
 c38:	cbnz	x6, ca8 <grub_mod_init-0x180>
 c3c:	ldr	x0, [x23, #32]
 c40:	cmp	x0, #0x1
 c44:	b.ne	ce8 <grub_mod_init-0x140>  // b.any
 c48:	ldrb	w1, [x27, x7]
 c4c:	add	x1, x1, #0x1
 c50:	add	x0, x4, x1
 c54:	ldrb	w1, [x4, x1]
 c58:	add	x2, x1, #0x1
 c5c:	add	x2, x0, x2
 c60:	cmp	x20, x2
 c64:	b.ls	470 <grub_mod_init-0x9b8>  // b.plast
 c68:	add	x0, x0, #0x1
 c6c:	bl	0 <grub_mod_init-0xe28>
 c70:	ldr	x1, [x23, #64]
 c74:	ldr	w2, [x1, #32]
 c78:	cmp	w2, w0
 c7c:	b.ls	bd0 <grub_mod_init-0x258>  // b.plast
 c80:	ldr	x2, [x1, #40]
 c84:	ubfiz	x0, x0, #5, #32
 c88:	ldr	x3, [sp, #112]
 c8c:	add	x1, x2, x0
 c90:	str	x3, [x2, x0]
 c94:	stp	xzr, x24, [x1, #8]
 c98:	str	xzr, [x1, #24]
 c9c:	b	bd0 <grub_mod_init-0x258>
 ca0:	ldr	x23, [x23, #80]
 ca4:	b	bcc <grub_mod_init-0x25c>
 ca8:	ldr	x0, [x6, #64]
 cac:	ldrb	w8, [x4]
 cb0:	ldrb	w2, [x0]
 cb4:	cmp	w2, w8
 cb8:	b.ne	ce0 <grub_mod_init-0x148>  // b.any
 cbc:	and	x2, x2, #0xff
 cc0:	add	x0, x0, #0x1
 cc4:	stp	x1, x4, [sp, #144]
 cc8:	stp	x6, x7, [sp, #160]
 ccc:	bl	0 <grub_memcmp>
 cd0:	cmp	w0, #0x0
 cd4:	ldp	x6, x7, [sp, #160]
 cd8:	ldp	x1, x4, [sp, #144]
 cdc:	csel	x24, x24, x6, ne  // ne = any
 ce0:	ldr	x6, [x6, #56]
 ce4:	b	c38 <grub_mod_init-0x1f0>
 ce8:	ldr	w1, [x23, #28]
 cec:	cmp	x0, x1
 cf0:	b.ne	d14 <grub_mod_init-0x114>  // b.any
 cf4:	lsl	x1, x0, #1
 cf8:	str	x1, [x23, #32]
 cfc:	mov	x1, #0x70                  	// #112
 d00:	mul	x1, x0, x1
 d04:	ldr	x0, [x23, #64]
 d08:	bl	0 <grub_realloc>
 d0c:	cbz	x0, 470 <grub_mod_init-0x9b8>
 d10:	str	x0, [x23, #64]
 d14:	ldr	w0, [x23, #28]
 d18:	mov	w1, #0x38                  	// #56
 d1c:	ldr	x2, [x23, #64]
 d20:	ldr	x3, [sp, #128]
 d24:	umull	x0, w0, w1
 d28:	add	x1, x2, x0
 d2c:	str	x1, [sp, #128]
 d30:	str	x3, [x2, x0]
 d34:	ldr	x0, [sp, #136]
 d38:	str	x0, [x1, #8]
 d3c:	str	wzr, [x1, #16]
 d40:	mov	x0, #0x20                  	// #32
 d44:	str	x26, [x1, #32]
 d48:	bl	0 <grub_malloc>
 d4c:	ldr	x1, [sp, #128]
 d50:	mov	w2, #0x38                  	// #56
 d54:	str	x0, [x1, #40]
 d58:	ldr	w1, [x23, #28]
 d5c:	ldr	x0, [x23, #64]
 d60:	umaddl	x0, w1, w2, x0
 d64:	ldr	x0, [x0, #40]
 d68:	cbz	x0, 470 <grub_mod_init-0x9b8>
 d6c:	ldr	x2, [sp, #112]
 d70:	stp	x2, xzr, [x0]
 d74:	add	w1, w1, #0x1
 d78:	stp	x24, xzr, [x0, #16]
 d7c:	str	w1, [x23, #28]
 d80:	b	bd0 <grub_mod_init-0x258>
 d84:	umaddl	x0, w21, w22, x0
 d88:	add	w21, w21, #0x1
 d8c:	ldr	x0, [x0, #40]
 d90:	bl	0 <grub_free>
 d94:	ldr	w1, [x20, #28]
 d98:	ldr	x0, [x20, #64]
 d9c:	cmp	w21, w1
 da0:	b.cc	d84 <grub_mod_init-0xa4>  // b.lo, b.ul, b.last
 da4:	ldr	x21, [x20, #80]
 da8:	bl	0 <grub_free>
 dac:	ldr	x0, [x20, #88]
 db0:	bl	0 <grub_free>
 db4:	ldr	x0, [x20, #16]
 db8:	bl	0 <grub_free>
 dbc:	ldr	x0, [x20]
 dc0:	bl	0 <grub_free>
 dc4:	mov	x0, x20
 dc8:	mov	x20, x21
 dcc:	bl	0 <grub_free>
 dd0:	b	478 <grub_mod_init-0x9b0>
 dd4:	mov	w21, #0x0                   	// #0
 dd8:	b	d94 <grub_mod_init-0x94>
 ddc:	ldr	x0, [x20]
 de0:	ldr	x21, [x20, #56]
 de4:	bl	0 <grub_free>
 de8:	mov	x0, x20
 dec:	mov	x20, x21
 df0:	bl	0 <grub_free>
 df4:	b	480 <grub_mod_init-0x9a8>
	...

0000000000000e28 <grub_mod_init>:
 e28:	adrp	x0, 0 <grub_mod_init-0xe28>
 e2c:	ldr	x0, [x0]
 e30:	ldr	x1, [x0]
 e34:	cbnz	x1, e4c <grub_mod_init+0x24>
 e38:	adrp	x1, 0 <grub_mod_init-0xe28>
 e3c:	ldr	x1, [x1]
 e40:	stp	xzr, x0, [x1]
 e44:	str	x1, [x0]
 e48:	ret
 e4c:	mov	x0, x1
 e50:	ldr	x1, [x1]
 e54:	b	e34 <grub_mod_init+0xc>
	...

0000000000000e68 <grub_mod_fini>:
 e68:	adrp	x0, 0 <grub_mod_init-0xe28>
 e6c:	ldr	x0, [x0]
 e70:	b	0 <grub_list_remove>
 e74:	nop
	...
