
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha256.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e10 <.init>:
 e10:	stp	x29, x30, [sp, #-16]!
 e14:	mov	x29, sp
 e18:	bl	f80 <_Py_strhex@plt+0x10>
 e1c:	ldp	x29, x30, [sp], #16
 e20:	ret

Disassembly of section .plt:

0000000000000e30 <memcpy@plt-0x20>:
 e30:	stp	x16, x30, [sp, #-16]!
 e34:	adrp	x16, 13000 <PyInit__sha256@@Base+0xfd60>
 e38:	ldr	x17, [x16, #4088]
 e3c:	add	x16, x16, #0xff8
 e40:	br	x17
 e44:	nop
 e48:	nop
 e4c:	nop

0000000000000e50 <memcpy@plt>:
 e50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e54:	ldr	x17, [x16]
 e58:	add	x16, x16, #0x0
 e5c:	br	x17

0000000000000e60 <PyBuffer_Release@plt>:
 e60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e64:	ldr	x17, [x16, #8]
 e68:	add	x16, x16, #0x8
 e6c:	br	x17

0000000000000e70 <__cxa_finalize@plt>:
 e70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e74:	ldr	x17, [x16, #16]
 e78:	add	x16, x16, #0x10
 e7c:	br	x17

0000000000000e80 <PyBytes_FromStringAndSize@plt>:
 e80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e84:	ldr	x17, [x16, #24]
 e88:	add	x16, x16, #0x18
 e8c:	br	x17

0000000000000e90 <_Py_Dealloc@plt>:
 e90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 e94:	ldr	x17, [x16, #32]
 e98:	add	x16, x16, #0x20
 e9c:	br	x17

0000000000000ea0 <_PyArg_UnpackKeywords@plt>:
 ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ea4:	ldr	x17, [x16, #40]
 ea8:	add	x16, x16, #0x28
 eac:	br	x17

0000000000000eb0 <PyErr_SetString@plt>:
 eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 eb4:	ldr	x17, [x16, #48]
 eb8:	add	x16, x16, #0x30
 ebc:	br	x17

0000000000000ec0 <memset@plt>:
 ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ec4:	ldr	x17, [x16, #56]
 ec8:	add	x16, x16, #0x38
 ecc:	br	x17

0000000000000ed0 <PyObject_Free@plt>:
 ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ed4:	ldr	x17, [x16, #64]
 ed8:	add	x16, x16, #0x40
 edc:	br	x17

0000000000000ee0 <PyType_Ready@plt>:
 ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ee4:	ldr	x17, [x16, #72]
 ee8:	add	x16, x16, #0x48
 eec:	br	x17

0000000000000ef0 <PyLong_FromLong@plt>:
 ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 ef4:	ldr	x17, [x16, #80]
 ef8:	add	x16, x16, #0x50
 efc:	br	x17

0000000000000f00 <__gmon_start__@plt>:
 f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f04:	ldr	x17, [x16, #88]
 f08:	add	x16, x16, #0x58
 f0c:	br	x17

0000000000000f10 <PyErr_Occurred@plt>:
 f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f14:	ldr	x17, [x16, #96]
 f18:	add	x16, x16, #0x60
 f1c:	br	x17

0000000000000f20 <PyModule_Create2@plt>:
 f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f24:	ldr	x17, [x16, #104]
 f28:	add	x16, x16, #0x68
 f2c:	br	x17

0000000000000f30 <PyObject_GetBuffer@plt>:
 f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f34:	ldr	x17, [x16, #112]
 f38:	add	x16, x16, #0x70
 f3c:	br	x17

0000000000000f40 <_PyObject_New@plt>:
 f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f44:	ldr	x17, [x16, #120]
 f48:	add	x16, x16, #0x78
 f4c:	br	x17

0000000000000f50 <PyModule_AddObject@plt>:
 f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f54:	ldr	x17, [x16, #128]
 f58:	add	x16, x16, #0x80
 f5c:	br	x17

0000000000000f60 <PyUnicode_FromStringAndSize@plt>:
 f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f64:	ldr	x17, [x16, #136]
 f68:	add	x16, x16, #0x88
 f6c:	br	x17

0000000000000f70 <_Py_strhex@plt>:
 f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
 f74:	ldr	x17, [x16, #144]
 f78:	add	x16, x16, #0x90
 f7c:	br	x17

Disassembly of section .text:

0000000000000f80 <PyInit__sha256@@Base-0x2320>:
     f80:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfd60>
     f84:	ldr	x0, [x0, #4040]
     f88:	cbz	x0, f90 <_Py_strhex@plt+0x20>
     f8c:	b	f00 <__gmon_start__@plt>
     f90:	ret
     f94:	nop
     f98:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10d60>
     f9c:	add	x0, x0, #0x690
     fa0:	adrp	x1, 14000 <PyInit__sha256@@Base+0x10d60>
     fa4:	add	x1, x1, #0x690
     fa8:	cmp	x1, x0
     fac:	b.eq	fc4 <_Py_strhex@plt+0x54>  // b.none
     fb0:	adrp	x1, 13000 <PyInit__sha256@@Base+0xfd60>
     fb4:	ldr	x1, [x1, #4008]
     fb8:	cbz	x1, fc4 <_Py_strhex@plt+0x54>
     fbc:	mov	x16, x1
     fc0:	br	x16
     fc4:	ret
     fc8:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10d60>
     fcc:	add	x0, x0, #0x690
     fd0:	adrp	x1, 14000 <PyInit__sha256@@Base+0x10d60>
     fd4:	add	x1, x1, #0x690
     fd8:	sub	x1, x1, x0
     fdc:	lsr	x2, x1, #63
     fe0:	add	x1, x2, x1, asr #3
     fe4:	cmp	xzr, x1, asr #1
     fe8:	asr	x1, x1, #1
     fec:	b.eq	1004 <_Py_strhex@plt+0x94>  // b.none
     ff0:	adrp	x2, 13000 <PyInit__sha256@@Base+0xfd60>
     ff4:	ldr	x2, [x2, #4064]
     ff8:	cbz	x2, 1004 <_Py_strhex@plt+0x94>
     ffc:	mov	x16, x2
    1000:	br	x16
    1004:	ret
    1008:	stp	x29, x30, [sp, #-32]!
    100c:	mov	x29, sp
    1010:	str	x19, [sp, #16]
    1014:	adrp	x19, 14000 <PyInit__sha256@@Base+0x10d60>
    1018:	ldrb	w0, [x19, #1680]
    101c:	cbnz	w0, 1044 <_Py_strhex@plt+0xd4>
    1020:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfd60>
    1024:	ldr	x0, [x0, #4016]
    1028:	cbz	x0, 1038 <_Py_strhex@plt+0xc8>
    102c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10d60>
    1030:	ldr	x0, [x0, #152]
    1034:	bl	e70 <__cxa_finalize@plt>
    1038:	bl	f98 <_Py_strhex@plt+0x28>
    103c:	mov	w0, #0x1                   	// #1
    1040:	strb	w0, [x19, #1680]
    1044:	ldr	x19, [sp, #16]
    1048:	ldp	x29, x30, [sp], #32
    104c:	ret
    1050:	b	fc8 <_Py_strhex@plt+0x58>
    1054:	nop
    1058:	ldur	q1, [x0, #88]
    105c:	sub	sp, sp, #0x120
    1060:	ldur	q0, [x0, #104]
    1064:	add	x1, sp, #0x24
    1068:	ldur	q2, [x0, #56]
    106c:	add	x2, sp, #0xe4
    1070:	ldur	q3, [x0, #72]
    1074:	rev32	v0.16b, v0.16b
    1078:	rev32	v1.16b, v1.16b
    107c:	rev32	v3.16b, v3.16b
    1080:	rev32	v2.16b, v2.16b
    1084:	stp	q1, q0, [sp, #64]
    1088:	ldr	d0, [sp, #88]
    108c:	stp	q2, q3, [sp, #32]
    1090:	ushr	v3.2s, v0.2s, #19
    1094:	shl	v1.2s, v0.2s, #13
    1098:	shl	v6.2s, v0.2s, #15
    109c:	ushr	v7.2s, v0.2s, #17
    10a0:	ldr	d4, [x1]
    10a4:	ushr	v2.2s, v0.2s, #10
    10a8:	ldur	d17, [x1, #-4]
    10ac:	ldr	d5, [x1, #32]
    10b0:	add	x1, x1, #0x8
    10b4:	orr	v1.8b, v1.8b, v3.8b
    10b8:	ushr	v16.2s, v4.2s, #7
    10bc:	orr	v0.8b, v6.8b, v7.8b
    10c0:	shl	v3.2s, v4.2s, #25
    10c4:	shl	v6.2s, v4.2s, #14
    10c8:	ushr	v7.2s, v4.2s, #18
    10cc:	add	v5.2s, v5.2s, v17.2s
    10d0:	ushr	v4.2s, v4.2s, #3
    10d4:	eor	v0.8b, v1.8b, v0.8b
    10d8:	orr	v1.8b, v3.8b, v16.8b
    10dc:	orr	v3.8b, v6.8b, v7.8b
    10e0:	eor	v0.8b, v0.8b, v2.8b
    10e4:	eor	v1.8b, v1.8b, v3.8b
    10e8:	add	v0.2s, v0.2s, v5.2s
    10ec:	eor	v1.8b, v1.8b, v4.8b
    10f0:	add	v0.2s, v0.2s, v1.2s
    10f4:	stur	d0, [x1, #52]
    10f8:	cmp	x2, x1
    10fc:	b.ne	1090 <_Py_strhex@plt+0x120>  // b.any
    1100:	ldp	x2, x1, [x0, #32]
    1104:	stp	x2, x1, [sp, #16]
    1108:	ldr	w14, [sp, #32]
    110c:	ldp	w12, w13, [sp, #20]
    1110:	mov	w11, #0x2f98                	// #12184
    1114:	ldr	w10, [sp, #28]
    1118:	movk	w11, #0x428a, lsl #16
    111c:	eor	w8, w13, w12
    1120:	ror	w3, w2, #11
    1124:	eor	w3, w3, w2, ror #6
    1128:	and	w8, w8, w2
    112c:	ldr	x9, [x0, #16]
    1130:	eor	w8, w8, w13
    1134:	ldr	x1, [x0, #24]
    1138:	eor	w3, w3, w2, ror #25
    113c:	str	x1, [sp, #8]
    1140:	add	w3, w3, w8
    1144:	add	w8, w10, w14
    1148:	lsr	x6, x9, #32
    114c:	add	w3, w3, w8
    1150:	orr	w4, w9, w6
    1154:	ldp	w7, w8, [sp, #8]
    1158:	ror	w5, w9, #13
    115c:	and	w10, w9, w6
    1160:	eor	w5, w5, w9, ror #2
    1164:	and	w4, w4, w7
    1168:	eor	w5, w5, w9, ror #22
    116c:	orr	w4, w4, w10
    1170:	ldr	w14, [sp, #36]
    1174:	add	w3, w3, w11
    1178:	add	w5, w5, w4
    117c:	add	w11, w3, w8
    1180:	add	w5, w5, w3
    1184:	eor	w4, w2, w12
    1188:	add	w13, w13, w14
    118c:	and	w4, w4, w11
    1190:	mov	w14, #0x4491                	// #17553
    1194:	orr	w3, w9, w5
    1198:	eor	w4, w4, w12
    119c:	ror	w10, w11, #11
    11a0:	movk	w14, #0x7137, lsl #16
    11a4:	ror	w8, w5, #13
    11a8:	eor	w10, w10, w11, ror #6
    11ac:	add	w4, w4, w14
    11b0:	and	w3, w3, w6
    11b4:	and	w14, w9, w5
    11b8:	eor	w8, w8, w5, ror #2
    11bc:	eor	w10, w10, w11, ror #25
    11c0:	orr	w3, w3, w14
    11c4:	add	w4, w4, w13
    11c8:	eor	w8, w8, w5, ror #22
    11cc:	ldr	w14, [sp, #40]
    11d0:	add	w8, w8, w3
    11d4:	add	w4, w4, w10
    11d8:	add	w10, w7, w4
    11dc:	eor	w3, w2, w11
    11e0:	add	w4, w8, w4
    11e4:	add	w12, w12, w14
    11e8:	and	w3, w3, w10
    11ec:	mov	w14, #0xfbcf                	// #64463
    11f0:	orr	w7, w5, w4
    11f4:	eor	w3, w3, w2
    11f8:	ror	w13, w10, #11
    11fc:	movk	w14, #0xb5c0, lsl #16
    1200:	ror	w8, w4, #13
    1204:	eor	w13, w13, w10, ror #6
    1208:	and	w7, w7, w9
    120c:	eor	w8, w8, w4, ror #2
    1210:	add	w3, w3, w14
    1214:	and	w14, w5, w4
    1218:	eor	w8, w8, w4, ror #22
    121c:	orr	w7, w7, w14
    1220:	add	w3, w3, w12
    1224:	eor	w12, w13, w10, ror #25
    1228:	add	w8, w8, w7
    122c:	add	w3, w3, w12
    1230:	eor	w7, w11, w10
    1234:	add	w6, w6, w3
    1238:	add	w3, w8, w3
    123c:	ldr	w8, [sp, #44]
    1240:	and	w7, w7, w6
    1244:	eor	w7, w7, w11
    1248:	ror	w14, w6, #11
    124c:	add	w8, w2, w8
    1250:	mov	w2, #0xdba5                	// #56229
    1254:	orr	w13, w4, w3
    1258:	ror	w12, w3, #13
    125c:	eor	w14, w14, w6, ror #6
    1260:	movk	w2, #0xe9b5, lsl #16
    1264:	add	w2, w7, w2
    1268:	and	w15, w4, w3
    126c:	and	w13, w13, w5
    1270:	eor	w7, w12, w3, ror #2
    1274:	add	w2, w2, w8
    1278:	eor	w12, w14, w6, ror #25
    127c:	orr	w8, w13, w15
    1280:	add	w2, w2, w12
    1284:	eor	w7, w7, w3, ror #22
    1288:	add	w1, w9, w2
    128c:	add	w7, w7, w8
    1290:	eor	w8, w10, w6
    1294:	and	w8, w8, w1
    1298:	add	w2, w7, w2
    129c:	ldr	w14, [sp, #48]
    12a0:	eor	w8, w8, w10
    12a4:	add	w8, w8, w11
    12a8:	ror	w13, w1, #11
    12ac:	mov	w11, #0xc25b                	// #49755
    12b0:	orr	w12, w3, w2
    12b4:	eor	w13, w13, w1, ror #6
    12b8:	ror	w7, w2, #13
    12bc:	movk	w11, #0x3956, lsl #16
    12c0:	add	w14, w14, w11
    12c4:	and	w15, w3, w2
    12c8:	and	w12, w12, w4
    12cc:	eor	w13, w13, w1, ror #25
    12d0:	eor	w11, w7, w2, ror #2
    12d4:	add	w8, w8, w14
    12d8:	orr	w7, w12, w15
    12dc:	add	w8, w8, w13
    12e0:	eor	w11, w11, w2, ror #22
    12e4:	add	w5, w5, w8
    12e8:	add	w11, w11, w7
    12ec:	eor	w7, w6, w1
    12f0:	add	w8, w11, w8
    12f4:	and	w7, w7, w5
    12f8:	ldr	w14, [sp, #52]
    12fc:	eor	w7, w7, w6
    1300:	ror	w13, w5, #11
    1304:	add	w7, w7, w10
    1308:	mov	w10, #0x11f1                	// #4593
    130c:	orr	w12, w2, w8
    1310:	eor	w13, w13, w5, ror #6
    1314:	movk	w10, #0x59f1, lsl #16
    1318:	ror	w11, w8, #13
    131c:	add	w14, w14, w10
    1320:	and	w15, w2, w8
    1324:	and	w10, w12, w3
    1328:	eor	w11, w11, w8, ror #2
    132c:	eor	w12, w13, w5, ror #25
    1330:	add	w7, w7, w14
    1334:	orr	w10, w10, w15
    1338:	add	w7, w7, w12
    133c:	eor	w11, w11, w8, ror #22
    1340:	add	w4, w4, w7
    1344:	add	w11, w11, w10
    1348:	eor	w10, w1, w5
    134c:	and	w10, w10, w4
    1350:	add	w7, w11, w7
    1354:	ldr	w14, [sp, #56]
    1358:	eor	w10, w10, w1
    135c:	add	w6, w10, w6
    1360:	ror	w13, w4, #11
    1364:	mov	w10, #0x82a4                	// #33444
    1368:	orr	w12, w8, w7
    136c:	eor	w13, w13, w4, ror #6
    1370:	ror	w11, w7, #13
    1374:	movk	w10, #0x923f, lsl #16
    1378:	add	w14, w14, w10
    137c:	and	w15, w8, w7
    1380:	and	w10, w12, w2
    1384:	eor	w11, w11, w7, ror #2
    1388:	eor	w12, w13, w4, ror #25
    138c:	add	w6, w6, w14
    1390:	orr	w10, w10, w15
    1394:	add	w6, w6, w12
    1398:	eor	w11, w11, w7, ror #22
    139c:	add	w3, w3, w6
    13a0:	add	w11, w11, w10
    13a4:	eor	w10, w5, w4
    13a8:	add	w6, w11, w6
    13ac:	and	w10, w10, w3
    13b0:	ldr	w14, [sp, #60]
    13b4:	eor	w10, w10, w5
    13b8:	ror	w13, w3, #11
    13bc:	add	w1, w10, w1
    13c0:	mov	w10, #0x5ed5                	// #24277
    13c4:	orr	w12, w7, w6
    13c8:	eor	w13, w13, w3, ror #6
    13cc:	movk	w10, #0xab1c, lsl #16
    13d0:	ror	w11, w6, #13
    13d4:	add	w14, w14, w10
    13d8:	and	w15, w7, w6
    13dc:	and	w10, w12, w8
    13e0:	eor	w11, w11, w6, ror #2
    13e4:	eor	w12, w13, w3, ror #25
    13e8:	add	w1, w1, w14
    13ec:	orr	w10, w10, w15
    13f0:	add	w1, w1, w12
    13f4:	eor	w11, w11, w6, ror #22
    13f8:	add	w2, w2, w1
    13fc:	add	w11, w11, w10
    1400:	eor	w10, w4, w3
    1404:	and	w10, w10, w2
    1408:	add	w1, w11, w1
    140c:	ldr	w14, [sp, #64]
    1410:	eor	w10, w10, w4
    1414:	add	w5, w10, w5
    1418:	ror	w13, w2, #11
    141c:	mov	w10, #0xaa98                	// #43672
    1420:	orr	w12, w6, w1
    1424:	eor	w13, w13, w2, ror #6
    1428:	ror	w11, w1, #13
    142c:	movk	w10, #0xd807, lsl #16
    1430:	add	w14, w14, w10
    1434:	and	w15, w6, w1
    1438:	and	w10, w12, w7
    143c:	eor	w11, w11, w1, ror #2
    1440:	eor	w12, w13, w2, ror #25
    1444:	add	w5, w5, w14
    1448:	orr	w10, w10, w15
    144c:	add	w5, w5, w12
    1450:	eor	w11, w11, w1, ror #22
    1454:	add	w8, w8, w5
    1458:	add	w11, w11, w10
    145c:	eor	w10, w3, w2
    1460:	add	w5, w11, w5
    1464:	and	w10, w10, w8
    1468:	ldr	w14, [sp, #68]
    146c:	eor	w10, w10, w3
    1470:	ror	w13, w8, #11
    1474:	add	w4, w10, w4
    1478:	mov	w10, #0x5b01                	// #23297
    147c:	orr	w12, w1, w5
    1480:	eor	w13, w13, w8, ror #6
    1484:	movk	w10, #0x1283, lsl #16
    1488:	ror	w11, w5, #13
    148c:	add	w14, w14, w10
    1490:	and	w15, w1, w5
    1494:	and	w10, w12, w6
    1498:	eor	w11, w11, w5, ror #2
    149c:	eor	w12, w13, w8, ror #25
    14a0:	add	w4, w4, w14
    14a4:	orr	w10, w10, w15
    14a8:	add	w4, w4, w12
    14ac:	eor	w11, w11, w5, ror #22
    14b0:	add	w7, w7, w4
    14b4:	add	w11, w11, w10
    14b8:	eor	w10, w2, w8
    14bc:	and	w10, w10, w7
    14c0:	add	w4, w11, w4
    14c4:	ldr	w14, [sp, #72]
    14c8:	eor	w10, w10, w2
    14cc:	add	w3, w10, w3
    14d0:	ror	w13, w7, #11
    14d4:	mov	w10, #0x85be                	// #34238
    14d8:	orr	w12, w5, w4
    14dc:	eor	w13, w13, w7, ror #6
    14e0:	ror	w11, w4, #13
    14e4:	movk	w10, #0x2431, lsl #16
    14e8:	add	w14, w14, w10
    14ec:	and	w15, w5, w4
    14f0:	and	w10, w12, w1
    14f4:	eor	w11, w11, w4, ror #2
    14f8:	eor	w12, w13, w7, ror #25
    14fc:	add	w3, w3, w14
    1500:	orr	w10, w10, w15
    1504:	add	w3, w3, w12
    1508:	eor	w11, w11, w4, ror #22
    150c:	add	w6, w6, w3
    1510:	add	w11, w11, w10
    1514:	eor	w10, w8, w7
    1518:	add	w3, w11, w3
    151c:	and	w10, w10, w6
    1520:	ldr	w14, [sp, #76]
    1524:	eor	w10, w10, w8
    1528:	ror	w13, w6, #11
    152c:	add	w2, w10, w2
    1530:	mov	w10, #0x7dc3                	// #32195
    1534:	orr	w12, w4, w3
    1538:	eor	w13, w13, w6, ror #6
    153c:	movk	w10, #0x550c, lsl #16
    1540:	ror	w11, w3, #13
    1544:	add	w14, w14, w10
    1548:	and	w15, w4, w3
    154c:	and	w10, w12, w5
    1550:	eor	w11, w11, w3, ror #2
    1554:	eor	w12, w13, w6, ror #25
    1558:	add	w2, w2, w14
    155c:	orr	w10, w10, w15
    1560:	add	w2, w2, w12
    1564:	eor	w11, w11, w3, ror #22
    1568:	add	w1, w1, w2
    156c:	add	w11, w11, w10
    1570:	eor	w10, w7, w6
    1574:	and	w10, w10, w1
    1578:	add	w2, w11, w2
    157c:	ldr	w14, [sp, #80]
    1580:	eor	w10, w10, w7
    1584:	add	w8, w10, w8
    1588:	ror	w13, w1, #11
    158c:	mov	w10, #0x5d74                	// #23924
    1590:	orr	w12, w3, w2
    1594:	eor	w13, w13, w1, ror #6
    1598:	ror	w11, w2, #13
    159c:	movk	w10, #0x72be, lsl #16
    15a0:	add	w14, w14, w10
    15a4:	and	w15, w3, w2
    15a8:	and	w10, w12, w4
    15ac:	eor	w11, w11, w2, ror #2
    15b0:	eor	w12, w13, w1, ror #25
    15b4:	add	w8, w8, w14
    15b8:	orr	w10, w10, w15
    15bc:	add	w8, w8, w12
    15c0:	eor	w11, w11, w2, ror #22
    15c4:	add	w5, w5, w8
    15c8:	add	w11, w11, w10
    15cc:	eor	w10, w6, w1
    15d0:	add	w8, w11, w8
    15d4:	and	w10, w10, w5
    15d8:	ldr	w14, [sp, #84]
    15dc:	eor	w10, w10, w6
    15e0:	ror	w13, w5, #11
    15e4:	add	w7, w10, w7
    15e8:	mov	w10, #0xb1fe                	// #45566
    15ec:	orr	w12, w2, w8
    15f0:	eor	w13, w13, w5, ror #6
    15f4:	movk	w10, #0x80de, lsl #16
    15f8:	ror	w11, w8, #13
    15fc:	add	w14, w14, w10
    1600:	and	w15, w2, w8
    1604:	and	w10, w12, w3
    1608:	eor	w11, w11, w8, ror #2
    160c:	eor	w12, w13, w5, ror #25
    1610:	add	w7, w7, w14
    1614:	orr	w10, w10, w15
    1618:	add	w7, w7, w12
    161c:	eor	w11, w11, w8, ror #22
    1620:	add	w4, w4, w7
    1624:	add	w11, w11, w10
    1628:	eor	w10, w1, w5
    162c:	and	w10, w10, w4
    1630:	add	w7, w11, w7
    1634:	ldr	w14, [sp, #88]
    1638:	eor	w10, w10, w1
    163c:	add	w6, w10, w6
    1640:	ror	w13, w4, #11
    1644:	mov	w10, #0x6a7                 	// #1703
    1648:	orr	w12, w8, w7
    164c:	eor	w13, w13, w4, ror #6
    1650:	ror	w11, w7, #13
    1654:	movk	w10, #0x9bdc, lsl #16
    1658:	add	w14, w14, w10
    165c:	and	w15, w8, w7
    1660:	and	w10, w12, w2
    1664:	eor	w11, w11, w7, ror #2
    1668:	eor	w12, w13, w4, ror #25
    166c:	add	w6, w6, w14
    1670:	orr	w10, w10, w15
    1674:	add	w6, w6, w12
    1678:	eor	w11, w11, w7, ror #22
    167c:	add	w3, w3, w6
    1680:	add	w11, w11, w10
    1684:	eor	w10, w5, w4
    1688:	add	w6, w11, w6
    168c:	and	w10, w10, w3
    1690:	ldr	w14, [sp, #92]
    1694:	eor	w10, w10, w5
    1698:	ror	w13, w3, #11
    169c:	add	w1, w10, w1
    16a0:	mov	w10, #0xf174                	// #61812
    16a4:	orr	w12, w7, w6
    16a8:	eor	w13, w13, w3, ror #6
    16ac:	movk	w10, #0xc19b, lsl #16
    16b0:	ror	w11, w6, #13
    16b4:	add	w14, w14, w10
    16b8:	and	w15, w7, w6
    16bc:	and	w10, w12, w8
    16c0:	eor	w11, w11, w6, ror #2
    16c4:	eor	w12, w13, w3, ror #25
    16c8:	add	w1, w1, w14
    16cc:	orr	w10, w10, w15
    16d0:	add	w1, w1, w12
    16d4:	eor	w11, w11, w6, ror #22
    16d8:	add	w2, w2, w1
    16dc:	add	w11, w11, w10
    16e0:	eor	w10, w4, w3
    16e4:	and	w10, w10, w2
    16e8:	add	w1, w11, w1
    16ec:	ldr	w14, [sp, #96]
    16f0:	eor	w10, w10, w4
    16f4:	add	w5, w10, w5
    16f8:	ror	w13, w2, #11
    16fc:	mov	w10, #0x69c1                	// #27073
    1700:	orr	w12, w6, w1
    1704:	eor	w13, w13, w2, ror #6
    1708:	ror	w11, w1, #13
    170c:	movk	w10, #0xe49b, lsl #16
    1710:	add	w14, w14, w10
    1714:	and	w15, w6, w1
    1718:	and	w10, w12, w7
    171c:	eor	w11, w11, w1, ror #2
    1720:	eor	w12, w13, w2, ror #25
    1724:	add	w5, w5, w14
    1728:	orr	w10, w10, w15
    172c:	add	w5, w5, w12
    1730:	eor	w11, w11, w1, ror #22
    1734:	add	w8, w8, w5
    1738:	add	w11, w11, w10
    173c:	eor	w10, w3, w2
    1740:	add	w5, w11, w5
    1744:	and	w10, w10, w8
    1748:	ldr	w14, [sp, #100]
    174c:	eor	w10, w10, w3
    1750:	ror	w13, w8, #11
    1754:	add	w4, w10, w4
    1758:	mov	w10, #0x4786                	// #18310
    175c:	orr	w12, w1, w5
    1760:	eor	w13, w13, w8, ror #6
    1764:	movk	w10, #0xefbe, lsl #16
    1768:	ror	w11, w5, #13
    176c:	add	w14, w14, w10
    1770:	and	w15, w1, w5
    1774:	and	w10, w12, w6
    1778:	eor	w11, w11, w5, ror #2
    177c:	eor	w12, w13, w8, ror #25
    1780:	add	w4, w4, w14
    1784:	orr	w10, w10, w15
    1788:	add	w4, w4, w12
    178c:	eor	w11, w11, w5, ror #22
    1790:	add	w7, w7, w4
    1794:	add	w11, w11, w10
    1798:	eor	w10, w2, w8
    179c:	and	w10, w10, w7
    17a0:	add	w4, w11, w4
    17a4:	ldr	w14, [sp, #104]
    17a8:	eor	w10, w10, w2
    17ac:	add	w3, w10, w3
    17b0:	ror	w13, w7, #11
    17b4:	mov	w10, #0x9dc6                	// #40390
    17b8:	orr	w12, w5, w4
    17bc:	eor	w13, w13, w7, ror #6
    17c0:	ror	w11, w4, #13
    17c4:	movk	w10, #0xfc1, lsl #16
    17c8:	add	w14, w14, w10
    17cc:	and	w15, w5, w4
    17d0:	and	w10, w12, w1
    17d4:	eor	w11, w11, w4, ror #2
    17d8:	eor	w12, w13, w7, ror #25
    17dc:	add	w3, w3, w14
    17e0:	orr	w10, w10, w15
    17e4:	add	w3, w3, w12
    17e8:	eor	w11, w11, w4, ror #22
    17ec:	add	w6, w6, w3
    17f0:	add	w11, w11, w10
    17f4:	eor	w10, w8, w7
    17f8:	add	w3, w11, w3
    17fc:	and	w10, w10, w6
    1800:	ldr	w13, [sp, #108]
    1804:	eor	w9, w10, w8
    1808:	ror	w12, w6, #11
    180c:	add	w2, w9, w2
    1810:	mov	w9, #0xa1cc                	// #41420
    1814:	orr	w11, w4, w3
    1818:	eor	w12, w12, w6, ror #6
    181c:	movk	w9, #0x240c, lsl #16
    1820:	ror	w10, w3, #13
    1824:	add	w13, w13, w9
    1828:	and	w14, w4, w3
    182c:	and	w9, w11, w5
    1830:	eor	w10, w10, w3, ror #2
    1834:	eor	w11, w12, w6, ror #25
    1838:	add	w2, w2, w13
    183c:	orr	w9, w9, w14
    1840:	add	w2, w2, w11
    1844:	eor	w10, w10, w3, ror #22
    1848:	add	w1, w1, w2
    184c:	add	w10, w10, w9
    1850:	eor	w9, w7, w6
    1854:	and	w9, w9, w1
    1858:	ldr	w13, [sp, #112]
    185c:	add	w2, w10, w2
    1860:	eor	w9, w9, w7
    1864:	add	w8, w9, w8
    1868:	ror	w12, w1, #11
    186c:	mov	w9, #0x2c6f                	// #11375
    1870:	orr	w11, w3, w2
    1874:	eor	w12, w12, w1, ror #6
    1878:	ror	w10, w2, #13
    187c:	movk	w9, #0x2de9, lsl #16
    1880:	add	w13, w13, w9
    1884:	and	w14, w3, w2
    1888:	and	w9, w11, w4
    188c:	eor	w10, w10, w2, ror #2
    1890:	eor	w11, w12, w1, ror #25
    1894:	add	w8, w8, w13
    1898:	orr	w9, w9, w14
    189c:	add	w8, w8, w11
    18a0:	eor	w10, w10, w2, ror #22
    18a4:	add	w5, w5, w8
    18a8:	add	w10, w10, w9
    18ac:	eor	w9, w6, w1
    18b0:	add	w8, w10, w8
    18b4:	and	w9, w9, w5
    18b8:	ldr	w13, [sp, #116]
    18bc:	eor	w9, w9, w6
    18c0:	ror	w12, w5, #11
    18c4:	add	w7, w9, w7
    18c8:	mov	w9, #0x84aa                	// #33962
    18cc:	orr	w11, w2, w8
    18d0:	eor	w12, w12, w5, ror #6
    18d4:	movk	w9, #0x4a74, lsl #16
    18d8:	ror	w10, w8, #13
    18dc:	add	w13, w13, w9
    18e0:	and	w14, w2, w8
    18e4:	and	w9, w11, w3
    18e8:	eor	w10, w10, w8, ror #2
    18ec:	eor	w11, w12, w5, ror #25
    18f0:	add	w7, w7, w13
    18f4:	orr	w9, w9, w14
    18f8:	add	w7, w7, w11
    18fc:	eor	w10, w10, w8, ror #22
    1900:	add	w4, w4, w7
    1904:	add	w10, w10, w9
    1908:	eor	w9, w1, w5
    190c:	and	w9, w9, w4
    1910:	add	w7, w10, w7
    1914:	ldr	w13, [sp, #120]
    1918:	eor	w9, w9, w1
    191c:	add	w6, w9, w6
    1920:	ror	w12, w4, #11
    1924:	mov	w9, #0xa9dc                	// #43484
    1928:	orr	w11, w8, w7
    192c:	eor	w12, w12, w4, ror #6
    1930:	ror	w10, w7, #13
    1934:	movk	w9, #0x5cb0, lsl #16
    1938:	add	w13, w13, w9
    193c:	and	w14, w8, w7
    1940:	and	w9, w11, w2
    1944:	eor	w10, w10, w7, ror #2
    1948:	eor	w11, w12, w4, ror #25
    194c:	add	w6, w6, w13
    1950:	orr	w9, w9, w14
    1954:	add	w6, w6, w11
    1958:	eor	w10, w10, w7, ror #22
    195c:	add	w3, w3, w6
    1960:	add	w10, w10, w9
    1964:	eor	w9, w5, w4
    1968:	add	w6, w10, w6
    196c:	and	w9, w9, w3
    1970:	ldr	w13, [sp, #124]
    1974:	eor	w9, w9, w5
    1978:	ror	w12, w3, #11
    197c:	add	w1, w9, w1
    1980:	mov	w9, #0x88da                	// #35034
    1984:	orr	w11, w7, w6
    1988:	eor	w12, w12, w3, ror #6
    198c:	movk	w9, #0x76f9, lsl #16
    1990:	ror	w10, w6, #13
    1994:	add	w13, w13, w9
    1998:	and	w14, w7, w6
    199c:	and	w9, w11, w8
    19a0:	eor	w10, w10, w6, ror #2
    19a4:	eor	w11, w12, w3, ror #25
    19a8:	add	w1, w1, w13
    19ac:	orr	w9, w9, w14
    19b0:	add	w1, w1, w11
    19b4:	eor	w10, w10, w6, ror #22
    19b8:	add	w2, w2, w1
    19bc:	add	w10, w10, w9
    19c0:	eor	w9, w4, w3
    19c4:	and	w9, w9, w2
    19c8:	add	w1, w10, w1
    19cc:	ldr	w13, [sp, #128]
    19d0:	eor	w9, w9, w4
    19d4:	add	w5, w9, w5
    19d8:	ror	w12, w2, #11
    19dc:	mov	w9, #0x5152                	// #20818
    19e0:	orr	w11, w6, w1
    19e4:	eor	w12, w12, w2, ror #6
    19e8:	ror	w10, w1, #13
    19ec:	movk	w9, #0x983e, lsl #16
    19f0:	add	w13, w13, w9
    19f4:	and	w14, w6, w1
    19f8:	and	w9, w11, w7
    19fc:	eor	w10, w10, w1, ror #2
    1a00:	eor	w11, w12, w2, ror #25
    1a04:	add	w5, w5, w13
    1a08:	orr	w9, w9, w14
    1a0c:	add	w5, w5, w11
    1a10:	eor	w10, w10, w1, ror #22
    1a14:	add	w8, w8, w5
    1a18:	add	w10, w10, w9
    1a1c:	eor	w9, w3, w2
    1a20:	add	w5, w10, w5
    1a24:	and	w9, w9, w8
    1a28:	ldr	w13, [sp, #132]
    1a2c:	eor	w9, w9, w3
    1a30:	ror	w12, w8, #11
    1a34:	add	w4, w9, w4
    1a38:	mov	w9, #0xc66d                	// #50797
    1a3c:	orr	w11, w1, w5
    1a40:	eor	w12, w12, w8, ror #6
    1a44:	movk	w9, #0xa831, lsl #16
    1a48:	ror	w10, w5, #13
    1a4c:	add	w13, w13, w9
    1a50:	and	w14, w1, w5
    1a54:	and	w9, w11, w6
    1a58:	eor	w10, w10, w5, ror #2
    1a5c:	eor	w11, w12, w8, ror #25
    1a60:	add	w4, w4, w13
    1a64:	orr	w9, w9, w14
    1a68:	add	w4, w4, w11
    1a6c:	eor	w10, w10, w5, ror #22
    1a70:	add	w7, w7, w4
    1a74:	add	w10, w10, w9
    1a78:	eor	w9, w2, w8
    1a7c:	and	w9, w9, w7
    1a80:	add	w4, w10, w4
    1a84:	ldr	w13, [sp, #136]
    1a88:	eor	w9, w9, w2
    1a8c:	add	w3, w9, w3
    1a90:	ror	w12, w7, #11
    1a94:	mov	w9, #0x27c8                	// #10184
    1a98:	orr	w11, w5, w4
    1a9c:	eor	w12, w12, w7, ror #6
    1aa0:	ror	w10, w4, #13
    1aa4:	movk	w9, #0xb003, lsl #16
    1aa8:	add	w13, w13, w9
    1aac:	and	w14, w5, w4
    1ab0:	and	w9, w11, w1
    1ab4:	eor	w10, w10, w4, ror #2
    1ab8:	eor	w11, w12, w7, ror #25
    1abc:	add	w3, w3, w13
    1ac0:	orr	w9, w9, w14
    1ac4:	add	w3, w3, w11
    1ac8:	eor	w10, w10, w4, ror #22
    1acc:	add	w6, w6, w3
    1ad0:	add	w10, w10, w9
    1ad4:	eor	w9, w8, w7
    1ad8:	add	w3, w10, w3
    1adc:	and	w9, w9, w6
    1ae0:	ldr	w13, [sp, #140]
    1ae4:	eor	w9, w9, w8
    1ae8:	ror	w12, w6, #11
    1aec:	add	w2, w9, w2
    1af0:	mov	w9, #0x7fc7                	// #32711
    1af4:	orr	w11, w4, w3
    1af8:	eor	w12, w12, w6, ror #6
    1afc:	movk	w9, #0xbf59, lsl #16
    1b00:	ror	w10, w3, #13
    1b04:	add	w13, w13, w9
    1b08:	and	w14, w4, w3
    1b0c:	and	w9, w11, w5
    1b10:	eor	w10, w10, w3, ror #2
    1b14:	eor	w11, w12, w6, ror #25
    1b18:	add	w2, w2, w13
    1b1c:	orr	w9, w9, w14
    1b20:	add	w2, w2, w11
    1b24:	eor	w10, w10, w3, ror #22
    1b28:	add	w1, w1, w2
    1b2c:	add	w10, w10, w9
    1b30:	eor	w9, w7, w6
    1b34:	and	w9, w9, w1
    1b38:	add	w2, w10, w2
    1b3c:	ldr	w13, [sp, #144]
    1b40:	eor	w9, w9, w7
    1b44:	add	w8, w9, w8
    1b48:	ror	w12, w1, #11
    1b4c:	mov	w9, #0xbf3                 	// #3059
    1b50:	orr	w11, w3, w2
    1b54:	eor	w12, w12, w1, ror #6
    1b58:	ror	w10, w2, #13
    1b5c:	movk	w9, #0xc6e0, lsl #16
    1b60:	add	w13, w13, w9
    1b64:	and	w14, w3, w2
    1b68:	and	w9, w11, w4
    1b6c:	eor	w10, w10, w2, ror #2
    1b70:	eor	w11, w12, w1, ror #25
    1b74:	add	w8, w8, w13
    1b78:	orr	w9, w9, w14
    1b7c:	add	w8, w8, w11
    1b80:	eor	w10, w10, w2, ror #22
    1b84:	add	w5, w5, w8
    1b88:	add	w10, w10, w9
    1b8c:	eor	w9, w6, w1
    1b90:	add	w8, w10, w8
    1b94:	and	w9, w9, w5
    1b98:	ldr	w13, [sp, #148]
    1b9c:	eor	w9, w9, w6
    1ba0:	ror	w12, w5, #11
    1ba4:	add	w7, w9, w7
    1ba8:	mov	w9, #0x9147                	// #37191
    1bac:	orr	w11, w2, w8
    1bb0:	eor	w12, w12, w5, ror #6
    1bb4:	movk	w9, #0xd5a7, lsl #16
    1bb8:	ror	w10, w8, #13
    1bbc:	add	w13, w13, w9
    1bc0:	and	w14, w2, w8
    1bc4:	and	w9, w11, w3
    1bc8:	eor	w10, w10, w8, ror #2
    1bcc:	eor	w11, w12, w5, ror #25
    1bd0:	add	w7, w7, w13
    1bd4:	orr	w9, w9, w14
    1bd8:	add	w7, w7, w11
    1bdc:	eor	w10, w10, w8, ror #22
    1be0:	add	w4, w4, w7
    1be4:	add	w10, w10, w9
    1be8:	eor	w9, w1, w5
    1bec:	and	w9, w9, w4
    1bf0:	add	w7, w10, w7
    1bf4:	ldr	w13, [sp, #152]
    1bf8:	eor	w9, w9, w1
    1bfc:	add	w6, w9, w6
    1c00:	ror	w12, w4, #11
    1c04:	mov	w9, #0x6351                	// #25425
    1c08:	orr	w11, w8, w7
    1c0c:	eor	w12, w12, w4, ror #6
    1c10:	ror	w10, w7, #13
    1c14:	movk	w9, #0x6ca, lsl #16
    1c18:	add	w13, w13, w9
    1c1c:	and	w14, w8, w7
    1c20:	and	w9, w11, w2
    1c24:	eor	w10, w10, w7, ror #2
    1c28:	eor	w11, w12, w4, ror #25
    1c2c:	add	w6, w6, w13
    1c30:	orr	w9, w9, w14
    1c34:	add	w6, w6, w11
    1c38:	eor	w10, w10, w7, ror #22
    1c3c:	add	w3, w3, w6
    1c40:	add	w10, w10, w9
    1c44:	eor	w9, w5, w4
    1c48:	add	w6, w10, w6
    1c4c:	and	w9, w9, w3
    1c50:	ldr	w13, [sp, #156]
    1c54:	eor	w9, w9, w5
    1c58:	ror	w12, w3, #11
    1c5c:	add	w1, w9, w1
    1c60:	mov	w9, #0x2967                	// #10599
    1c64:	orr	w11, w7, w6
    1c68:	eor	w12, w12, w3, ror #6
    1c6c:	movk	w9, #0x1429, lsl #16
    1c70:	ror	w10, w6, #13
    1c74:	add	w13, w13, w9
    1c78:	and	w14, w7, w6
    1c7c:	and	w9, w11, w8
    1c80:	eor	w10, w10, w6, ror #2
    1c84:	eor	w11, w12, w3, ror #25
    1c88:	add	w1, w1, w13
    1c8c:	orr	w9, w9, w14
    1c90:	add	w1, w1, w11
    1c94:	eor	w10, w10, w6, ror #22
    1c98:	add	w2, w2, w1
    1c9c:	add	w10, w10, w9
    1ca0:	eor	w9, w4, w3
    1ca4:	and	w9, w9, w2
    1ca8:	add	w1, w10, w1
    1cac:	ldr	w13, [sp, #160]
    1cb0:	eor	w9, w9, w4
    1cb4:	add	w5, w9, w5
    1cb8:	ror	w12, w2, #11
    1cbc:	mov	w9, #0xa85                 	// #2693
    1cc0:	orr	w11, w6, w1
    1cc4:	eor	w12, w12, w2, ror #6
    1cc8:	ror	w10, w1, #13
    1ccc:	movk	w9, #0x27b7, lsl #16
    1cd0:	add	w13, w13, w9
    1cd4:	and	w14, w6, w1
    1cd8:	and	w9, w11, w7
    1cdc:	eor	w10, w10, w1, ror #2
    1ce0:	eor	w11, w12, w2, ror #25
    1ce4:	add	w5, w5, w13
    1ce8:	orr	w9, w9, w14
    1cec:	add	w5, w5, w11
    1cf0:	eor	w10, w10, w1, ror #22
    1cf4:	add	w8, w8, w5
    1cf8:	add	w10, w10, w9
    1cfc:	eor	w9, w3, w2
    1d00:	add	w5, w10, w5
    1d04:	and	w9, w9, w8
    1d08:	ldr	w13, [sp, #164]
    1d0c:	eor	w9, w9, w3
    1d10:	ror	w12, w8, #11
    1d14:	add	w4, w9, w4
    1d18:	mov	w9, #0x2138                	// #8504
    1d1c:	orr	w11, w1, w5
    1d20:	eor	w12, w12, w8, ror #6
    1d24:	movk	w9, #0x2e1b, lsl #16
    1d28:	ror	w10, w5, #13
    1d2c:	add	w13, w13, w9
    1d30:	and	w14, w1, w5
    1d34:	and	w9, w11, w6
    1d38:	eor	w10, w10, w5, ror #2
    1d3c:	eor	w11, w12, w8, ror #25
    1d40:	add	w4, w4, w13
    1d44:	orr	w9, w9, w14
    1d48:	add	w4, w4, w11
    1d4c:	eor	w10, w10, w5, ror #22
    1d50:	add	w7, w7, w4
    1d54:	add	w10, w10, w9
    1d58:	eor	w9, w2, w8
    1d5c:	and	w9, w9, w7
    1d60:	add	w4, w10, w4
    1d64:	ldr	w13, [sp, #168]
    1d68:	eor	w9, w9, w2
    1d6c:	add	w3, w9, w3
    1d70:	ror	w12, w7, #11
    1d74:	mov	w9, #0x6dfc                	// #28156
    1d78:	orr	w11, w5, w4
    1d7c:	eor	w12, w12, w7, ror #6
    1d80:	ror	w10, w4, #13
    1d84:	movk	w9, #0x4d2c, lsl #16
    1d88:	add	w13, w13, w9
    1d8c:	and	w14, w5, w4
    1d90:	and	w9, w11, w1
    1d94:	eor	w10, w10, w4, ror #2
    1d98:	eor	w11, w12, w7, ror #25
    1d9c:	add	w3, w3, w13
    1da0:	orr	w9, w9, w14
    1da4:	add	w3, w3, w11
    1da8:	eor	w10, w10, w4, ror #22
    1dac:	add	w6, w6, w3
    1db0:	add	w10, w10, w9
    1db4:	eor	w9, w8, w7
    1db8:	add	w3, w10, w3
    1dbc:	and	w9, w9, w6
    1dc0:	ldr	w13, [sp, #172]
    1dc4:	eor	w9, w9, w8
    1dc8:	ror	w12, w6, #11
    1dcc:	add	w2, w9, w2
    1dd0:	mov	w9, #0xd13                 	// #3347
    1dd4:	orr	w11, w4, w3
    1dd8:	eor	w12, w12, w6, ror #6
    1ddc:	movk	w9, #0x5338, lsl #16
    1de0:	ror	w10, w3, #13
    1de4:	add	w13, w13, w9
    1de8:	and	w14, w4, w3
    1dec:	and	w9, w11, w5
    1df0:	eor	w10, w10, w3, ror #2
    1df4:	eor	w11, w12, w6, ror #25
    1df8:	add	w2, w2, w13
    1dfc:	orr	w9, w9, w14
    1e00:	add	w2, w2, w11
    1e04:	eor	w10, w10, w3, ror #22
    1e08:	add	w1, w1, w2
    1e0c:	add	w10, w10, w9
    1e10:	eor	w9, w7, w6
    1e14:	and	w9, w9, w1
    1e18:	add	w2, w10, w2
    1e1c:	ldr	w13, [sp, #176]
    1e20:	eor	w9, w9, w7
    1e24:	add	w8, w9, w8
    1e28:	ror	w12, w1, #11
    1e2c:	mov	w9, #0x7354                	// #29524
    1e30:	orr	w11, w3, w2
    1e34:	eor	w12, w12, w1, ror #6
    1e38:	ror	w10, w2, #13
    1e3c:	movk	w9, #0x650a, lsl #16
    1e40:	add	w13, w13, w9
    1e44:	and	w14, w3, w2
    1e48:	and	w9, w11, w4
    1e4c:	eor	w10, w10, w2, ror #2
    1e50:	eor	w11, w12, w1, ror #25
    1e54:	add	w8, w8, w13
    1e58:	orr	w9, w9, w14
    1e5c:	add	w8, w8, w11
    1e60:	eor	w10, w10, w2, ror #22
    1e64:	add	w5, w5, w8
    1e68:	add	w10, w10, w9
    1e6c:	eor	w9, w6, w1
    1e70:	add	w8, w10, w8
    1e74:	and	w9, w9, w5
    1e78:	ldr	w13, [sp, #180]
    1e7c:	eor	w9, w9, w6
    1e80:	ror	w12, w5, #11
    1e84:	add	w7, w9, w7
    1e88:	mov	w9, #0xabb                 	// #2747
    1e8c:	orr	w11, w2, w8
    1e90:	eor	w12, w12, w5, ror #6
    1e94:	movk	w9, #0x766a, lsl #16
    1e98:	ror	w10, w8, #13
    1e9c:	add	w13, w13, w9
    1ea0:	and	w14, w2, w8
    1ea4:	and	w9, w11, w3
    1ea8:	eor	w10, w10, w8, ror #2
    1eac:	eor	w11, w12, w5, ror #25
    1eb0:	add	w7, w7, w13
    1eb4:	orr	w9, w9, w14
    1eb8:	add	w7, w7, w11
    1ebc:	eor	w10, w10, w8, ror #22
    1ec0:	add	w4, w4, w7
    1ec4:	add	w10, w10, w9
    1ec8:	eor	w9, w1, w5
    1ecc:	and	w9, w9, w4
    1ed0:	add	w7, w10, w7
    1ed4:	ldr	w13, [sp, #184]
    1ed8:	eor	w9, w9, w1
    1edc:	add	w6, w9, w6
    1ee0:	ror	w12, w4, #11
    1ee4:	mov	w9, #0xc92e                	// #51502
    1ee8:	orr	w11, w8, w7
    1eec:	eor	w12, w12, w4, ror #6
    1ef0:	ror	w10, w7, #13
    1ef4:	movk	w9, #0x81c2, lsl #16
    1ef8:	add	w13, w13, w9
    1efc:	and	w14, w8, w7
    1f00:	and	w9, w11, w2
    1f04:	eor	w10, w10, w7, ror #2
    1f08:	eor	w11, w12, w4, ror #25
    1f0c:	add	w6, w6, w13
    1f10:	orr	w9, w9, w14
    1f14:	add	w6, w6, w11
    1f18:	eor	w10, w10, w7, ror #22
    1f1c:	add	w3, w3, w6
    1f20:	add	w10, w10, w9
    1f24:	eor	w9, w5, w4
    1f28:	add	w6, w10, w6
    1f2c:	and	w9, w9, w3
    1f30:	ldr	w13, [sp, #188]
    1f34:	eor	w9, w9, w5
    1f38:	ror	w12, w3, #11
    1f3c:	add	w1, w9, w1
    1f40:	mov	w9, #0x2c85                	// #11397
    1f44:	orr	w11, w7, w6
    1f48:	eor	w12, w12, w3, ror #6
    1f4c:	movk	w9, #0x9272, lsl #16
    1f50:	ror	w10, w6, #13
    1f54:	add	w13, w13, w9
    1f58:	and	w14, w7, w6
    1f5c:	and	w9, w11, w8
    1f60:	eor	w10, w10, w6, ror #2
    1f64:	eor	w11, w12, w3, ror #25
    1f68:	add	w1, w1, w13
    1f6c:	orr	w9, w9, w14
    1f70:	add	w1, w1, w11
    1f74:	eor	w10, w10, w6, ror #22
    1f78:	add	w2, w2, w1
    1f7c:	add	w10, w10, w9
    1f80:	eor	w9, w4, w3
    1f84:	and	w9, w9, w2
    1f88:	add	w1, w10, w1
    1f8c:	ldr	w13, [sp, #192]
    1f90:	eor	w9, w9, w4
    1f94:	add	w5, w9, w5
    1f98:	ror	w12, w2, #11
    1f9c:	mov	w9, #0xe8a1                	// #59553
    1fa0:	orr	w11, w6, w1
    1fa4:	eor	w12, w12, w2, ror #6
    1fa8:	ror	w10, w1, #13
    1fac:	movk	w9, #0xa2bf, lsl #16
    1fb0:	add	w13, w13, w9
    1fb4:	and	w14, w6, w1
    1fb8:	and	w9, w11, w7
    1fbc:	eor	w10, w10, w1, ror #2
    1fc0:	eor	w11, w12, w2, ror #25
    1fc4:	add	w5, w5, w13
    1fc8:	orr	w9, w9, w14
    1fcc:	add	w5, w5, w11
    1fd0:	eor	w10, w10, w1, ror #22
    1fd4:	add	w8, w8, w5
    1fd8:	add	w10, w10, w9
    1fdc:	eor	w9, w3, w2
    1fe0:	add	w5, w10, w5
    1fe4:	and	w9, w9, w8
    1fe8:	ldr	w13, [sp, #196]
    1fec:	eor	w9, w9, w3
    1ff0:	ror	w12, w8, #11
    1ff4:	add	w4, w9, w4
    1ff8:	mov	w9, #0x664b                	// #26187
    1ffc:	orr	w11, w1, w5
    2000:	eor	w12, w12, w8, ror #6
    2004:	movk	w9, #0xa81a, lsl #16
    2008:	ror	w10, w5, #13
    200c:	add	w13, w13, w9
    2010:	and	w14, w1, w5
    2014:	and	w9, w11, w6
    2018:	eor	w10, w10, w5, ror #2
    201c:	eor	w11, w12, w8, ror #25
    2020:	add	w4, w4, w13
    2024:	orr	w9, w9, w14
    2028:	add	w4, w4, w11
    202c:	eor	w10, w10, w5, ror #22
    2030:	add	w7, w7, w4
    2034:	add	w10, w10, w9
    2038:	eor	w9, w2, w8
    203c:	and	w9, w9, w7
    2040:	add	w4, w10, w4
    2044:	ldr	w13, [sp, #200]
    2048:	eor	w9, w9, w2
    204c:	add	w3, w9, w3
    2050:	ror	w12, w7, #11
    2054:	mov	w9, #0x8b70                	// #35696
    2058:	orr	w11, w5, w4
    205c:	eor	w12, w12, w7, ror #6
    2060:	ror	w10, w4, #13
    2064:	movk	w9, #0xc24b, lsl #16
    2068:	add	w13, w13, w9
    206c:	and	w14, w5, w4
    2070:	and	w9, w11, w1
    2074:	eor	w10, w10, w4, ror #2
    2078:	eor	w11, w12, w7, ror #25
    207c:	add	w3, w3, w13
    2080:	orr	w9, w9, w14
    2084:	add	w3, w3, w11
    2088:	eor	w10, w10, w4, ror #22
    208c:	add	w6, w6, w3
    2090:	add	w10, w10, w9
    2094:	eor	w9, w8, w7
    2098:	add	w3, w10, w3
    209c:	and	w9, w9, w6
    20a0:	ldr	w13, [sp, #204]
    20a4:	eor	w9, w9, w8
    20a8:	ror	w12, w6, #11
    20ac:	add	w2, w9, w2
    20b0:	mov	w9, #0x51a3                	// #20899
    20b4:	orr	w11, w4, w3
    20b8:	eor	w12, w12, w6, ror #6
    20bc:	movk	w9, #0xc76c, lsl #16
    20c0:	ror	w10, w3, #13
    20c4:	add	w13, w13, w9
    20c8:	and	w14, w4, w3
    20cc:	and	w9, w11, w5
    20d0:	eor	w10, w10, w3, ror #2
    20d4:	eor	w11, w12, w6, ror #25
    20d8:	add	w2, w2, w13
    20dc:	orr	w9, w9, w14
    20e0:	add	w2, w2, w11
    20e4:	eor	w10, w10, w3, ror #22
    20e8:	add	w1, w1, w2
    20ec:	add	w10, w10, w9
    20f0:	eor	w9, w7, w6
    20f4:	and	w9, w9, w1
    20f8:	add	w2, w10, w2
    20fc:	eor	w9, w9, w7
    2100:	ldr	w13, [sp, #208]
    2104:	add	w8, w9, w8
    2108:	mov	w9, #0xe819                	// #59417
    210c:	orr	w11, w3, w2
    2110:	ror	w10, w2, #13
    2114:	movk	w9, #0xd192, lsl #16
    2118:	ror	w12, w1, #11
    211c:	and	w14, w3, w2
    2120:	and	w11, w11, w4
    2124:	add	w13, w13, w9
    2128:	eor	w12, w12, w1, ror #6
    212c:	eor	w9, w10, w2, ror #2
    2130:	eor	w12, w12, w1, ror #25
    2134:	orr	w10, w11, w14
    2138:	add	w8, w8, w13
    213c:	eor	w9, w9, w2, ror #22
    2140:	add	w8, w8, w12
    2144:	add	w9, w9, w10
    2148:	add	w5, w5, w8
    214c:	add	w8, w9, w8
    2150:	eor	w9, w6, w1
    2154:	and	w9, w9, w5
    2158:	ldr	w13, [sp, #212]
    215c:	eor	w9, w9, w6
    2160:	orr	w11, w2, w8
    2164:	add	w7, w9, w7
    2168:	mov	w9, #0x624                 	// #1572
    216c:	ror	w10, w8, #13
    2170:	movk	w9, #0xd699, lsl #16
    2174:	ror	w12, w5, #11
    2178:	and	w14, w2, w8
    217c:	and	w11, w11, w3
    2180:	add	w13, w13, w9
    2184:	eor	w12, w12, w5, ror #6
    2188:	eor	w9, w10, w8, ror #2
    218c:	eor	w12, w12, w5, ror #25
    2190:	orr	w10, w11, w14
    2194:	add	w7, w7, w13
    2198:	eor	w9, w9, w8, ror #22
    219c:	add	w7, w7, w12
    21a0:	add	w9, w9, w10
    21a4:	add	w4, w4, w7
    21a8:	add	w7, w9, w7
    21ac:	eor	w9, w1, w5
    21b0:	and	w9, w9, w4
    21b4:	ldr	w13, [sp, #216]
    21b8:	eor	w9, w9, w1
    21bc:	orr	w11, w8, w7
    21c0:	add	w6, w9, w6
    21c4:	mov	w9, #0x3585                	// #13701
    21c8:	ror	w10, w7, #13
    21cc:	movk	w9, #0xf40e, lsl #16
    21d0:	ror	w12, w4, #11
    21d4:	and	w14, w8, w7
    21d8:	and	w11, w11, w2
    21dc:	add	w13, w13, w9
    21e0:	eor	w12, w12, w4, ror #6
    21e4:	eor	w9, w10, w7, ror #2
    21e8:	eor	w12, w12, w4, ror #25
    21ec:	orr	w10, w11, w14
    21f0:	add	w6, w6, w13
    21f4:	eor	w9, w9, w7, ror #22
    21f8:	add	w6, w6, w12
    21fc:	add	w9, w9, w10
    2200:	add	w3, w3, w6
    2204:	add	w6, w9, w6
    2208:	eor	w9, w5, w4
    220c:	and	w9, w9, w3
    2210:	ldr	w13, [sp, #220]
    2214:	eor	w9, w9, w5
    2218:	orr	w11, w7, w6
    221c:	add	w1, w9, w1
    2220:	mov	w9, #0xa070                	// #41072
    2224:	ror	w10, w6, #13
    2228:	movk	w9, #0x106a, lsl #16
    222c:	ror	w12, w3, #11
    2230:	and	w14, w7, w6
    2234:	and	w11, w11, w8
    2238:	add	w13, w13, w9
    223c:	eor	w12, w12, w3, ror #6
    2240:	eor	w9, w10, w6, ror #2
    2244:	eor	w12, w12, w3, ror #25
    2248:	orr	w10, w11, w14
    224c:	add	w1, w1, w13
    2250:	eor	w9, w9, w6, ror #22
    2254:	add	w1, w1, w12
    2258:	add	w9, w9, w10
    225c:	add	w2, w2, w1
    2260:	add	w1, w9, w1
    2264:	eor	w9, w4, w3
    2268:	and	w9, w9, w2
    226c:	ldr	w13, [sp, #224]
    2270:	eor	w9, w9, w4
    2274:	orr	w11, w6, w1
    2278:	add	w5, w9, w5
    227c:	mov	w9, #0xc116                	// #49430
    2280:	ror	w10, w1, #13
    2284:	movk	w9, #0x19a4, lsl #16
    2288:	ror	w12, w2, #11
    228c:	and	w14, w6, w1
    2290:	and	w11, w11, w7
    2294:	add	w13, w13, w9
    2298:	eor	w12, w12, w2, ror #6
    229c:	eor	w9, w10, w1, ror #2
    22a0:	eor	w12, w12, w2, ror #25
    22a4:	orr	w10, w11, w14
    22a8:	add	w5, w5, w13
    22ac:	eor	w9, w9, w1, ror #22
    22b0:	add	w5, w5, w12
    22b4:	add	w9, w9, w10
    22b8:	add	w8, w8, w5
    22bc:	add	w5, w9, w5
    22c0:	eor	w9, w3, w2
    22c4:	and	w9, w9, w8
    22c8:	ldr	w13, [sp, #228]
    22cc:	eor	w9, w9, w3
    22d0:	orr	w11, w1, w5
    22d4:	add	w4, w9, w4
    22d8:	mov	w9, #0x6c08                	// #27656
    22dc:	ror	w10, w5, #13
    22e0:	movk	w9, #0x1e37, lsl #16
    22e4:	ror	w12, w8, #11
    22e8:	and	w14, w1, w5
    22ec:	and	w11, w11, w6
    22f0:	add	w13, w13, w9
    22f4:	eor	w12, w12, w8, ror #6
    22f8:	eor	w9, w10, w5, ror #2
    22fc:	eor	w12, w12, w8, ror #25
    2300:	orr	w10, w11, w14
    2304:	add	w4, w4, w13
    2308:	eor	w9, w9, w5, ror #22
    230c:	add	w4, w4, w12
    2310:	add	w9, w9, w10
    2314:	add	w7, w7, w4
    2318:	add	w4, w9, w4
    231c:	eor	w9, w2, w8
    2320:	and	w9, w9, w7
    2324:	ldr	w13, [sp, #232]
    2328:	eor	w9, w9, w2
    232c:	orr	w11, w5, w4
    2330:	add	w3, w9, w3
    2334:	mov	w9, #0x774c                	// #30540
    2338:	ror	w10, w4, #13
    233c:	movk	w9, #0x2748, lsl #16
    2340:	ror	w12, w7, #11
    2344:	and	w14, w5, w4
    2348:	and	w11, w11, w1
    234c:	add	w13, w13, w9
    2350:	eor	w12, w12, w7, ror #6
    2354:	eor	w9, w10, w4, ror #2
    2358:	eor	w12, w12, w7, ror #25
    235c:	orr	w10, w11, w14
    2360:	add	w3, w3, w13
    2364:	eor	w9, w9, w4, ror #22
    2368:	add	w3, w3, w12
    236c:	add	w9, w9, w10
    2370:	add	w6, w6, w3
    2374:	add	w3, w9, w3
    2378:	eor	w9, w8, w7
    237c:	and	w9, w9, w6
    2380:	ldr	w13, [sp, #236]
    2384:	eor	w9, w9, w8
    2388:	orr	w11, w4, w3
    238c:	add	w2, w9, w2
    2390:	mov	w9, #0xbcb5                	// #48309
    2394:	ror	w10, w3, #13
    2398:	movk	w9, #0x34b0, lsl #16
    239c:	ror	w12, w6, #11
    23a0:	and	w14, w4, w3
    23a4:	and	w11, w11, w5
    23a8:	add	w13, w13, w9
    23ac:	eor	w12, w12, w6, ror #6
    23b0:	eor	w9, w10, w3, ror #2
    23b4:	eor	w12, w12, w6, ror #25
    23b8:	orr	w10, w11, w14
    23bc:	add	w2, w2, w13
    23c0:	eor	w9, w9, w3, ror #22
    23c4:	add	w2, w2, w12
    23c8:	add	w9, w9, w10
    23cc:	add	w1, w1, w2
    23d0:	add	w2, w9, w2
    23d4:	eor	w9, w7, w6
    23d8:	and	w9, w9, w1
    23dc:	ldr	w13, [sp, #240]
    23e0:	eor	w9, w9, w7
    23e4:	orr	w11, w3, w2
    23e8:	add	w8, w9, w8
    23ec:	mov	w9, #0xcb3                 	// #3251
    23f0:	ror	w10, w2, #13
    23f4:	movk	w9, #0x391c, lsl #16
    23f8:	ror	w12, w1, #11
    23fc:	and	w14, w3, w2
    2400:	and	w11, w11, w4
    2404:	add	w13, w13, w9
    2408:	eor	w12, w12, w1, ror #6
    240c:	eor	w9, w10, w2, ror #2
    2410:	eor	w12, w12, w1, ror #25
    2414:	orr	w10, w11, w14
    2418:	add	w8, w8, w13
    241c:	eor	w9, w9, w2, ror #22
    2420:	add	w8, w8, w12
    2424:	add	w9, w9, w10
    2428:	add	w5, w5, w8
    242c:	add	w9, w9, w8
    2430:	eor	w8, w6, w1
    2434:	and	w8, w8, w5
    2438:	ldr	w13, [sp, #244]
    243c:	eor	w8, w8, w6
    2440:	orr	w11, w2, w9
    2444:	add	w7, w8, w7
    2448:	mov	w8, #0xaa4a                	// #43594
    244c:	ror	w10, w9, #13
    2450:	movk	w8, #0x4ed8, lsl #16
    2454:	ror	w12, w5, #11
    2458:	and	w14, w2, w9
    245c:	and	w11, w11, w3
    2460:	add	w13, w13, w8
    2464:	eor	w12, w12, w5, ror #6
    2468:	eor	w8, w10, w9, ror #2
    246c:	eor	w12, w12, w5, ror #25
    2470:	orr	w10, w11, w14
    2474:	add	w7, w7, w13
    2478:	eor	w8, w8, w9, ror #22
    247c:	add	w7, w7, w12
    2480:	add	w8, w8, w10
    2484:	add	w4, w4, w7
    2488:	add	w8, w8, w7
    248c:	eor	w7, w1, w5
    2490:	and	w7, w7, w4
    2494:	ldr	w13, [sp, #248]
    2498:	eor	w7, w7, w1
    249c:	orr	w11, w9, w8
    24a0:	add	w6, w7, w6
    24a4:	mov	w7, #0xca4f                	// #51791
    24a8:	ror	w10, w8, #13
    24ac:	movk	w7, #0x5b9c, lsl #16
    24b0:	ror	w12, w4, #11
    24b4:	and	w14, w9, w8
    24b8:	and	w11, w11, w2
    24bc:	add	w13, w13, w7
    24c0:	eor	w12, w12, w4, ror #6
    24c4:	eor	w7, w10, w8, ror #2
    24c8:	eor	w12, w12, w4, ror #25
    24cc:	orr	w10, w11, w14
    24d0:	add	w6, w6, w13
    24d4:	eor	w7, w7, w8, ror #22
    24d8:	add	w6, w6, w12
    24dc:	add	w7, w7, w10
    24e0:	add	w3, w3, w6
    24e4:	add	w7, w7, w6
    24e8:	eor	w6, w5, w4
    24ec:	and	w6, w6, w3
    24f0:	ldr	w13, [sp, #252]
    24f4:	eor	w6, w6, w5
    24f8:	orr	w11, w8, w7
    24fc:	add	w1, w6, w1
    2500:	mov	w6, #0x6ff3                	// #28659
    2504:	ror	w10, w7, #13
    2508:	movk	w6, #0x682e, lsl #16
    250c:	ror	w12, w3, #11
    2510:	and	w14, w8, w7
    2514:	and	w11, w11, w9
    2518:	add	w13, w13, w6
    251c:	eor	w12, w12, w3, ror #6
    2520:	eor	w6, w10, w7, ror #2
    2524:	eor	w12, w12, w3, ror #25
    2528:	orr	w10, w11, w14
    252c:	add	w1, w1, w13
    2530:	eor	w6, w6, w7, ror #22
    2534:	add	w1, w1, w12
    2538:	add	w6, w6, w10
    253c:	add	w2, w2, w1
    2540:	add	w6, w6, w1
    2544:	eor	w1, w4, w3
    2548:	and	w1, w1, w2
    254c:	ldr	w13, [sp, #256]
    2550:	eor	w1, w1, w4
    2554:	orr	w11, w7, w6
    2558:	add	w1, w1, w5
    255c:	mov	w5, #0x82ee                	// #33518
    2560:	ror	w10, w6, #13
    2564:	movk	w5, #0x748f, lsl #16
    2568:	ror	w12, w2, #11
    256c:	and	w14, w7, w6
    2570:	and	w11, w11, w8
    2574:	add	w13, w13, w5
    2578:	eor	w12, w12, w2, ror #6
    257c:	eor	w5, w10, w6, ror #2
    2580:	eor	w12, w12, w2, ror #25
    2584:	orr	w10, w11, w14
    2588:	add	w1, w1, w13
    258c:	eor	w5, w5, w6, ror #22
    2590:	add	w1, w1, w12
    2594:	add	w5, w5, w10
    2598:	add	w9, w9, w1
    259c:	add	w1, w5, w1
    25a0:	eor	w5, w3, w2
    25a4:	and	w5, w5, w9
    25a8:	ldr	w13, [sp, #260]
    25ac:	eor	w5, w5, w3
    25b0:	orr	w11, w6, w1
    25b4:	add	w4, w5, w4
    25b8:	mov	w5, #0x636f                	// #25455
    25bc:	ror	w10, w1, #13
    25c0:	movk	w5, #0x78a5, lsl #16
    25c4:	ror	w12, w9, #11
    25c8:	and	w14, w6, w1
    25cc:	and	w11, w11, w7
    25d0:	add	w13, w13, w5
    25d4:	eor	w12, w12, w9, ror #6
    25d8:	eor	w5, w10, w1, ror #2
    25dc:	eor	w12, w12, w9, ror #25
    25e0:	orr	w10, w11, w14
    25e4:	add	w4, w4, w13
    25e8:	eor	w5, w5, w1, ror #22
    25ec:	add	w4, w4, w12
    25f0:	add	w5, w5, w10
    25f4:	add	w8, w8, w4
    25f8:	add	w4, w5, w4
    25fc:	eor	w5, w2, w9
    2600:	and	w5, w5, w8
    2604:	ldr	w13, [sp, #264]
    2608:	eor	w5, w5, w2
    260c:	orr	w11, w1, w4
    2610:	add	w3, w5, w3
    2614:	mov	w5, #0x7814                	// #30740
    2618:	ror	w10, w4, #13
    261c:	movk	w5, #0x84c8, lsl #16
    2620:	ror	w12, w8, #11
    2624:	and	w14, w1, w4
    2628:	and	w11, w11, w6
    262c:	add	w13, w13, w5
    2630:	eor	w12, w12, w8, ror #6
    2634:	eor	w5, w10, w4, ror #2
    2638:	eor	w12, w12, w8, ror #25
    263c:	orr	w10, w11, w14
    2640:	add	w3, w3, w13
    2644:	eor	w5, w5, w4, ror #22
    2648:	add	w3, w3, w12
    264c:	add	w5, w5, w10
    2650:	add	w7, w7, w3
    2654:	add	w3, w5, w3
    2658:	eor	w5, w9, w8
    265c:	and	w5, w5, w7
    2660:	ldr	w13, [sp, #268]
    2664:	eor	w5, w5, w9
    2668:	orr	w11, w4, w3
    266c:	add	w2, w5, w2
    2670:	mov	w5, #0x208                 	// #520
    2674:	ror	w10, w3, #13
    2678:	movk	w5, #0x8cc7, lsl #16
    267c:	ror	w12, w7, #11
    2680:	and	w14, w4, w3
    2684:	and	w11, w11, w1
    2688:	add	w13, w13, w5
    268c:	eor	w12, w12, w7, ror #6
    2690:	eor	w5, w10, w3, ror #2
    2694:	eor	w12, w12, w7, ror #25
    2698:	orr	w10, w11, w14
    269c:	add	w2, w2, w13
    26a0:	eor	w5, w5, w3, ror #22
    26a4:	add	w2, w2, w12
    26a8:	add	w5, w5, w10
    26ac:	add	w6, w6, w2
    26b0:	add	w5, w5, w2
    26b4:	eor	w2, w8, w7
    26b8:	and	w2, w2, w6
    26bc:	ldr	w13, [sp, #272]
    26c0:	eor	w2, w2, w8
    26c4:	orr	w11, w3, w5
    26c8:	add	w2, w2, w9
    26cc:	mov	w9, #0xfffa                	// #65530
    26d0:	ror	w10, w5, #13
    26d4:	movk	w9, #0x90be, lsl #16
    26d8:	ror	w12, w6, #11
    26dc:	and	w14, w3, w5
    26e0:	and	w11, w11, w4
    26e4:	add	w13, w13, w9
    26e8:	eor	w12, w12, w6, ror #6
    26ec:	eor	w9, w10, w5, ror #2
    26f0:	eor	w12, w12, w6, ror #25
    26f4:	orr	w10, w11, w14
    26f8:	add	w2, w2, w13
    26fc:	eor	w9, w9, w5, ror #22
    2700:	add	w2, w2, w12
    2704:	add	w9, w9, w10
    2708:	add	w1, w1, w2
    270c:	add	w2, w9, w2
    2710:	eor	w9, w7, w6
    2714:	and	w9, w9, w1
    2718:	ldr	w13, [sp, #276]
    271c:	eor	w9, w9, w7
    2720:	orr	w11, w5, w2
    2724:	add	w8, w9, w8
    2728:	mov	w9, #0x6ceb                	// #27883
    272c:	ror	w10, w2, #13
    2730:	movk	w9, #0xa450, lsl #16
    2734:	ror	w12, w1, #11
    2738:	and	w14, w5, w2
    273c:	and	w11, w11, w3
    2740:	add	w13, w13, w9
    2744:	eor	w12, w12, w1, ror #6
    2748:	eor	w9, w10, w2, ror #2
    274c:	eor	w12, w12, w1, ror #25
    2750:	orr	w10, w11, w14
    2754:	add	w8, w8, w13
    2758:	eor	w9, w9, w2, ror #22
    275c:	add	w8, w8, w12
    2760:	add	w9, w9, w10
    2764:	add	w4, w4, w8
    2768:	add	w8, w9, w8
    276c:	eor	w9, w6, w1
    2770:	and	w9, w9, w4
    2774:	ldr	w13, [sp, #280]
    2778:	eor	w9, w9, w6
    277c:	ror	w12, w4, #11
    2780:	add	w7, w9, w7
    2784:	mov	w9, #0xa3f7                	// #41975
    2788:	orr	w11, w2, w8
    278c:	eor	w12, w12, w4, ror #6
    2790:	movk	w9, #0xbef9, lsl #16
    2794:	ror	w10, w8, #13
    2798:	add	w13, w13, w9
    279c:	and	w14, w2, w8
    27a0:	and	w9, w11, w5
    27a4:	eor	w10, w10, w8, ror #2
    27a8:	eor	w11, w12, w4, ror #25
    27ac:	add	w7, w7, w13
    27b0:	orr	w9, w9, w14
    27b4:	add	w7, w7, w11
    27b8:	eor	w10, w10, w8, ror #22
    27bc:	add	w3, w3, w7
    27c0:	add	w10, w10, w9
    27c4:	eor	w9, w1, w4
    27c8:	and	w9, w9, w3
    27cc:	add	w7, w10, w7
    27d0:	eor	w9, w9, w1
    27d4:	ldr	w13, [sp, #284]
    27d8:	add	w6, w9, w6
    27dc:	mov	w9, #0x78f2                	// #30962
    27e0:	ror	w10, w7, #13
    27e4:	orr	w11, w8, w7
    27e8:	ror	w12, w3, #11
    27ec:	movk	w9, #0xc671, lsl #16
    27f0:	eor	w12, w12, w3, ror #6
    27f4:	add	w13, w13, w9
    27f8:	and	w11, w11, w2
    27fc:	eor	w9, w10, w7, ror #2
    2800:	and	w14, w8, w7
    2804:	eor	w12, w12, w3, ror #25
    2808:	add	w6, w6, w13
    280c:	orr	w10, w11, w14
    2810:	eor	w9, w9, w7, ror #22
    2814:	add	w6, w6, w12
    2818:	add	w9, w9, w10
    281c:	add	w5, w5, w6
    2820:	add	w6, w9, w6
    2824:	stp	w6, w7, [sp]
    2828:	stp	w8, w2, [sp, #8]
    282c:	stp	w5, w3, [sp, #16]
    2830:	stp	w4, w1, [sp, #24]
    2834:	ldp	q1, q0, [x0, #16]
    2838:	ldp	q3, q2, [sp]
    283c:	add	v1.4s, v1.4s, v3.4s
    2840:	add	v0.4s, v0.4s, v2.4s
    2844:	stp	q1, q0, [x0, #16]
    2848:	add	sp, sp, #0x120
    284c:	ret
    2850:	stp	x29, x30, [sp, #-64]!
    2854:	lsl	w4, w2, #3
    2858:	lsr	w5, w2, #29
    285c:	mov	x29, sp
    2860:	ldr	w3, [x0, #52]
    2864:	stp	x21, x22, [sp, #32]
    2868:	mov	x21, x0
    286c:	str	x23, [sp, #48]
    2870:	mov	x23, x2
    2874:	ldr	w2, [x0, #48]
    2878:	stp	x19, x20, [sp, #16]
    287c:	add	x20, x0, #0x38
    2880:	ldr	w0, [x0, #120]
    2884:	adds	w2, w2, w4
    2888:	mov	x19, x1
    288c:	adc	w3, w3, w5
    2890:	stp	w2, w3, [x21, #48]
    2894:	cbnz	w0, 2910 <_Py_strhex@plt+0x19a0>
    2898:	cmp	x23, #0x3f
    289c:	b.le	2958 <_Py_strhex@plt+0x19e8>
    28a0:	sub	x18, x23, #0x40
    28a4:	lsr	x23, x18, #6
    28a8:	add	x22, x23, #0x1
    28ac:	add	x22, x19, x22, lsl #6
    28b0:	ldp	x0, x1, [x19]
    28b4:	stp	x0, x1, [x20]
    28b8:	add	x19, x19, #0x40
    28bc:	ldp	x2, x3, [x19, #-48]
    28c0:	stp	x2, x3, [x20, #16]
    28c4:	mov	x0, x21
    28c8:	ldp	x2, x3, [x19, #-32]
    28cc:	stp	x2, x3, [x20, #32]
    28d0:	ldp	x2, x3, [x19, #-16]
    28d4:	stp	x2, x3, [x20, #48]
    28d8:	bl	1058 <_Py_strhex@plt+0xe8>
    28dc:	cmp	x19, x22
    28e0:	b.ne	28b0 <_Py_strhex@plt+0x1940>  // b.any
    28e4:	sub	x23, x18, x23, lsl #6
    28e8:	mov	x1, x22
    28ec:	mov	x0, x20
    28f0:	mov	x2, x23
    28f4:	bl	e50 <memcpy@plt>
    28f8:	str	w23, [x21, #120]
    28fc:	ldp	x19, x20, [sp, #16]
    2900:	ldp	x21, x22, [sp, #32]
    2904:	ldr	x23, [sp, #48]
    2908:	ldp	x29, x30, [sp], #64
    290c:	ret
    2910:	mov	w22, #0x40                  	// #64
    2914:	sub	w22, w22, w0
    2918:	add	x0, x20, w0, sxtw
    291c:	sxtw	x22, w22
    2920:	cmp	x23, x22
    2924:	csel	x22, x23, x22, le
    2928:	mov	x2, x22
    292c:	bl	e50 <memcpy@plt>
    2930:	ldr	w0, [x21, #120]
    2934:	add	w0, w0, w22
    2938:	str	w0, [x21, #120]
    293c:	cmp	w0, #0x40
    2940:	b.ne	28fc <_Py_strhex@plt+0x198c>  // b.any
    2944:	sub	x23, x23, x22
    2948:	add	x19, x19, x22
    294c:	mov	x0, x21
    2950:	bl	1058 <_Py_strhex@plt+0xe8>
    2954:	b	2898 <_Py_strhex@plt+0x1928>
    2958:	mov	x22, x19
    295c:	b	28e8 <_Py_strhex@plt+0x1978>
    2960:	stp	x29, x30, [sp, #-112]!
    2964:	mov	x29, sp
    2968:	stp	x19, x20, [sp, #16]
    296c:	mov	x19, x0
    2970:	ldr	x0, [x1, #8]
    2974:	ldr	x2, [x0, #168]
    2978:	tbnz	w2, #28, 2a48 <_Py_strhex@plt+0x1ad8>
    297c:	ldr	x0, [x0, #160]
    2980:	cbz	x0, 29f0 <_Py_strhex@plt+0x1a80>
    2984:	ldr	x0, [x0]
    2988:	cbz	x0, 29f0 <_Py_strhex@plt+0x1a80>
    298c:	add	x20, sp, #0x20
    2990:	mov	x0, x1
    2994:	mov	w2, #0x0                   	// #0
    2998:	mov	x1, x20
    299c:	bl	f30 <PyObject_GetBuffer@plt>
    29a0:	cmn	w0, #0x1
    29a4:	b.eq	2a68 <_Py_strhex@plt+0x1af8>  // b.none
    29a8:	ldr	w0, [sp, #68]
    29ac:	cmp	w0, #0x1
    29b0:	b.gt	2a18 <_Py_strhex@plt+0x1aa8>
    29b4:	ldr	x1, [sp, #32]
    29b8:	mov	x0, x19
    29bc:	ldr	x2, [sp, #48]
    29c0:	bl	2850 <_Py_strhex@plt+0x18e0>
    29c4:	mov	x0, x20
    29c8:	bl	e60 <PyBuffer_Release@plt>
    29cc:	adrp	x1, 13000 <PyInit__sha256@@Base+0xfd60>
    29d0:	ldr	x1, [x1, #4056]
    29d4:	mov	x0, x1
    29d8:	ldr	x2, [x1]
    29dc:	add	x2, x2, #0x1
    29e0:	str	x2, [x1]
    29e4:	ldp	x19, x20, [sp, #16]
    29e8:	ldp	x29, x30, [sp], #112
    29ec:	ret
    29f0:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfd60>
    29f4:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    29f8:	add	x1, x1, #0x3a0
    29fc:	ldr	x0, [x0, #4032]
    2a00:	ldr	x0, [x0]
    2a04:	bl	eb0 <PyErr_SetString@plt>
    2a08:	mov	x0, #0x0                   	// #0
    2a0c:	ldp	x19, x20, [sp, #16]
    2a10:	ldp	x29, x30, [sp], #112
    2a14:	ret
    2a18:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfd60>
    2a1c:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2a20:	add	x1, x1, #0x3d0
    2a24:	ldr	x0, [x0, #4024]
    2a28:	ldr	x0, [x0]
    2a2c:	bl	eb0 <PyErr_SetString@plt>
    2a30:	mov	x0, x20
    2a34:	bl	e60 <PyBuffer_Release@plt>
    2a38:	mov	x0, #0x0                   	// #0
    2a3c:	ldp	x19, x20, [sp, #16]
    2a40:	ldp	x29, x30, [sp], #112
    2a44:	ret
    2a48:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfd60>
    2a4c:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2a50:	add	x1, x1, #0x370
    2a54:	ldr	x0, [x0, #4032]
    2a58:	ldr	x0, [x0]
    2a5c:	bl	eb0 <PyErr_SetString@plt>
    2a60:	mov	x0, #0x0                   	// #0
    2a64:	b	29e4 <_Py_strhex@plt+0x1a74>
    2a68:	mov	x0, #0x0                   	// #0
    2a6c:	b	29e4 <_Py_strhex@plt+0x1a74>
    2a70:	stp	x29, x30, [sp, #-32]!
    2a74:	adrp	x1, 14000 <PyInit__sha256@@Base+0x10d60>
    2a78:	add	x1, x1, #0xa0
    2a7c:	mov	x29, sp
    2a80:	str	x19, [sp, #16]
    2a84:	mov	x19, x0
    2a88:	ldr	x0, [x0, #8]
    2a8c:	cmp	x0, x1
    2a90:	b.eq	2a98 <_Py_strhex@plt+0x1b28>  // b.none
    2a94:	add	x0, x1, #0x1a0
    2a98:	bl	f40 <_PyObject_New@plt>
    2a9c:	cbz	x0, 2af0 <_Py_strhex@plt+0x1b80>
    2aa0:	ldr	d0, [x19, #120]
    2aa4:	add	x2, x19, #0x38
    2aa8:	str	d0, [x0, #120]
    2aac:	ldr	d0, [x19, #48]
    2ab0:	str	d0, [x0, #48]
    2ab4:	ldp	x4, x5, [x19, #16]
    2ab8:	stp	x4, x5, [x0, #16]
    2abc:	ldp	x4, x5, [x19, #32]
    2ac0:	stp	x4, x5, [x0, #32]
    2ac4:	ldp	x4, x5, [x19, #56]
    2ac8:	stp	x4, x5, [x0, #56]
    2acc:	ldp	x4, x5, [x2, #16]
    2ad0:	stp	x4, x5, [x0, #72]
    2ad4:	ldp	x4, x5, [x2, #32]
    2ad8:	stp	x4, x5, [x0, #88]
    2adc:	ldp	x2, x3, [x2, #48]
    2ae0:	stp	x2, x3, [x0, #104]
    2ae4:	ldr	x19, [sp, #16]
    2ae8:	ldp	x29, x30, [sp], #32
    2aec:	ret
    2af0:	mov	x0, #0x0                   	// #0
    2af4:	b	2ae4 <_Py_strhex@plt+0x1b74>
    2af8:	mov	x0, #0x40                  	// #64
    2afc:	b	ef0 <PyLong_FromLong@plt>
    2b00:	b	ed0 <PyObject_Free@plt>
    2b04:	nop
    2b08:	sub	sp, sp, #0x90
    2b0c:	mov	x0, x1
    2b10:	mov	x1, x2
    2b14:	mov	x2, x3
    2b18:	stp	x29, x30, [sp, #16]
    2b1c:	add	x29, sp, #0x10
    2b20:	stp	x19, x20, [sp, #32]
    2b24:	cbz	x3, 2c18 <_Py_strhex@plt+0x1ca8>
    2b28:	ldr	x19, [x3, #16]
    2b2c:	add	x19, x1, x19
    2b30:	add	x3, sp, #0x38
    2b34:	str	x3, [sp]
    2b38:	adrp	x4, 14000 <PyInit__sha256@@Base+0x10d60>
    2b3c:	add	x4, x4, #0xa0
    2b40:	mov	x3, x2
    2b44:	add	x4, x4, #0x340
    2b48:	mov	w7, #0x0                   	// #0
    2b4c:	mov	w6, #0x1                   	// #1
    2b50:	mov	w5, #0x0                   	// #0
    2b54:	mov	x2, #0x0                   	// #0
    2b58:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    2b5c:	cbz	x0, 2c88 <_Py_strhex@plt+0x1d18>
    2b60:	cbz	x19, 2c30 <_Py_strhex@plt+0x1cc0>
    2b64:	ldr	x0, [x0]
    2b68:	cbz	x0, 2c30 <_Py_strhex@plt+0x1cc0>
    2b6c:	ldr	x1, [x0, #8]
    2b70:	ldr	x2, [x1, #168]
    2b74:	tbnz	w2, #28, 2d28 <_Py_strhex@plt+0x1db8>
    2b78:	ldr	x1, [x1, #160]
    2b7c:	cbz	x1, 2cf8 <_Py_strhex@plt+0x1d88>
    2b80:	ldr	x1, [x1]
    2b84:	cbz	x1, 2cf8 <_Py_strhex@plt+0x1d88>
    2b88:	add	x20, sp, #0x40
    2b8c:	mov	w2, #0x0                   	// #0
    2b90:	mov	x1, x20
    2b94:	bl	f30 <PyObject_GetBuffer@plt>
    2b98:	cmn	w0, #0x1
    2b9c:	b.eq	2c88 <_Py_strhex@plt+0x1d18>  // b.none
    2ba0:	ldr	w0, [sp, #100]
    2ba4:	cmp	w0, #0x1
    2ba8:	b.gt	2ca0 <_Py_strhex@plt+0x1d30>
    2bac:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10d60>
    2bb0:	add	x0, x0, #0xa0
    2bb4:	add	x0, x0, #0x1a0
    2bb8:	bl	f40 <_PyObject_New@plt>
    2bbc:	mov	x19, x0
    2bc0:	cbz	x0, 2cd8 <_Py_strhex@plt+0x1d68>
    2bc4:	adrp	x0, 3000 <_Py_strhex@plt+0x2090>
    2bc8:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2bcc:	str	xzr, [x19, #48]
    2bd0:	ldr	q1, [x0, #1168]
    2bd4:	mov	x0, #0x1c00000000          	// #120259084288
    2bd8:	ldr	q0, [x1, #1184]
    2bdc:	str	x0, [x19, #120]
    2be0:	stp	q1, q0, [x19, #16]
    2be4:	bl	f10 <PyErr_Occurred@plt>
    2be8:	cbnz	x0, 2cc8 <_Py_strhex@plt+0x1d58>
    2bec:	ldr	x1, [sp, #64]
    2bf0:	mov	x0, x19
    2bf4:	ldr	x2, [sp, #80]
    2bf8:	bl	2850 <_Py_strhex@plt+0x18e0>
    2bfc:	mov	x0, x20
    2c00:	bl	e60 <PyBuffer_Release@plt>
    2c04:	mov	x0, x19
    2c08:	ldp	x29, x30, [sp, #16]
    2c0c:	ldp	x19, x20, [sp, #32]
    2c10:	add	sp, sp, #0x90
    2c14:	ret
    2c18:	tbnz	x1, #63, 2d48 <_Py_strhex@plt+0x1dd8>
    2c1c:	cmp	x0, #0x0
    2c20:	mov	x19, x1
    2c24:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    2c28:	b.gt	2b30 <_Py_strhex@plt+0x1bc0>
    2c2c:	cbnz	x19, 2b64 <_Py_strhex@plt+0x1bf4>
    2c30:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10d60>
    2c34:	add	x0, x0, #0xa0
    2c38:	add	x0, x0, #0x1a0
    2c3c:	bl	f40 <_PyObject_New@plt>
    2c40:	mov	x19, x0
    2c44:	cbz	x0, 2c88 <_Py_strhex@plt+0x1d18>
    2c48:	adrp	x0, 3000 <_Py_strhex@plt+0x2090>
    2c4c:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2c50:	str	xzr, [x19, #48]
    2c54:	ldr	q1, [x0, #1168]
    2c58:	mov	x0, #0x1c00000000          	// #120259084288
    2c5c:	ldr	q0, [x1, #1184]
    2c60:	str	x0, [x19, #120]
    2c64:	stp	q1, q0, [x19, #16]
    2c68:	bl	f10 <PyErr_Occurred@plt>
    2c6c:	cbz	x0, 2c8c <_Py_strhex@plt+0x1d1c>
    2c70:	ldr	x0, [x19]
    2c74:	sub	x0, x0, #0x1
    2c78:	str	x0, [x19]
    2c7c:	cbnz	x0, 2c88 <_Py_strhex@plt+0x1d18>
    2c80:	mov	x0, x19
    2c84:	bl	e90 <_Py_Dealloc@plt>
    2c88:	mov	x19, #0x0                   	// #0
    2c8c:	mov	x0, x19
    2c90:	ldp	x29, x30, [sp, #16]
    2c94:	ldp	x19, x20, [sp, #32]
    2c98:	add	sp, sp, #0x90
    2c9c:	ret
    2ca0:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfd60>
    2ca4:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2ca8:	add	x1, x1, #0x3d0
    2cac:	mov	x19, #0x0                   	// #0
    2cb0:	ldr	x0, [x0, #4024]
    2cb4:	ldr	x0, [x0]
    2cb8:	bl	eb0 <PyErr_SetString@plt>
    2cbc:	mov	x0, x20
    2cc0:	bl	e60 <PyBuffer_Release@plt>
    2cc4:	b	2c8c <_Py_strhex@plt+0x1d1c>
    2cc8:	ldr	x0, [x19]
    2ccc:	sub	x0, x0, #0x1
    2cd0:	str	x0, [x19]
    2cd4:	cbz	x0, 2d78 <_Py_strhex@plt+0x1e08>
    2cd8:	mov	x0, x20
    2cdc:	mov	x19, #0x0                   	// #0
    2ce0:	bl	e60 <PyBuffer_Release@plt>
    2ce4:	mov	x0, x19
    2ce8:	ldp	x29, x30, [sp, #16]
    2cec:	ldp	x19, x20, [sp, #32]
    2cf0:	add	sp, sp, #0x90
    2cf4:	ret
    2cf8:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfd60>
    2cfc:	mov	x19, #0x0                   	// #0
    2d00:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2d04:	add	x1, x1, #0x3a0
    2d08:	ldr	x0, [x0, #4032]
    2d0c:	ldr	x0, [x0]
    2d10:	bl	eb0 <PyErr_SetString@plt>
    2d14:	mov	x0, x19
    2d18:	ldp	x29, x30, [sp, #16]
    2d1c:	ldp	x19, x20, [sp, #32]
    2d20:	add	sp, sp, #0x90
    2d24:	ret
    2d28:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfd60>
    2d2c:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2d30:	mov	x19, #0x0                   	// #0
    2d34:	add	x1, x1, #0x370
    2d38:	ldr	x0, [x0, #4032]
    2d3c:	ldr	x0, [x0]
    2d40:	bl	eb0 <PyErr_SetString@plt>
    2d44:	b	2c8c <_Py_strhex@plt+0x1d1c>
    2d48:	add	x2, sp, #0x38
    2d4c:	str	x2, [sp]
    2d50:	adrp	x4, 14000 <PyInit__sha256@@Base+0x10d60>
    2d54:	add	x4, x4, #0xa0
    2d58:	add	x4, x4, #0x340
    2d5c:	mov	w7, #0x0                   	// #0
    2d60:	mov	w6, #0x1                   	// #1
    2d64:	mov	w5, #0x0                   	// #0
    2d68:	mov	x2, #0x0                   	// #0
    2d6c:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    2d70:	cbnz	x0, 2b64 <_Py_strhex@plt+0x1bf4>
    2d74:	b	2c88 <_Py_strhex@plt+0x1d18>
    2d78:	mov	x0, x19
    2d7c:	bl	e90 <_Py_Dealloc@plt>
    2d80:	b	2cd8 <_Py_strhex@plt+0x1d68>
    2d84:	nop
    2d88:	sub	sp, sp, #0x90
    2d8c:	mov	x0, x1
    2d90:	mov	x1, x2
    2d94:	mov	x2, x3
    2d98:	stp	x29, x30, [sp, #16]
    2d9c:	add	x29, sp, #0x10
    2da0:	stp	x19, x20, [sp, #32]
    2da4:	cbz	x3, 2e94 <_Py_strhex@plt+0x1f24>
    2da8:	ldr	x19, [x3, #16]
    2dac:	add	x19, x1, x19
    2db0:	add	x3, sp, #0x38
    2db4:	str	x3, [sp]
    2db8:	adrp	x4, 14000 <PyInit__sha256@@Base+0x10d60>
    2dbc:	add	x4, x4, #0xa0
    2dc0:	mov	x3, x2
    2dc4:	add	x4, x4, #0x380
    2dc8:	mov	w7, #0x0                   	// #0
    2dcc:	mov	w6, #0x1                   	// #1
    2dd0:	mov	w5, #0x0                   	// #0
    2dd4:	mov	x2, #0x0                   	// #0
    2dd8:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    2ddc:	cbz	x0, 2f00 <_Py_strhex@plt+0x1f90>
    2de0:	cbz	x19, 2eac <_Py_strhex@plt+0x1f3c>
    2de4:	ldr	x0, [x0]
    2de8:	cbz	x0, 2eac <_Py_strhex@plt+0x1f3c>
    2dec:	ldr	x1, [x0, #8]
    2df0:	ldr	x2, [x1, #168]
    2df4:	tbnz	w2, #28, 2fa0 <_Py_strhex@plt+0x2030>
    2df8:	ldr	x1, [x1, #160]
    2dfc:	cbz	x1, 2f70 <_Py_strhex@plt+0x2000>
    2e00:	ldr	x1, [x1]
    2e04:	cbz	x1, 2f70 <_Py_strhex@plt+0x2000>
    2e08:	add	x20, sp, #0x40
    2e0c:	mov	w2, #0x0                   	// #0
    2e10:	mov	x1, x20
    2e14:	bl	f30 <PyObject_GetBuffer@plt>
    2e18:	cmn	w0, #0x1
    2e1c:	b.eq	2f00 <_Py_strhex@plt+0x1f90>  // b.none
    2e20:	ldr	w0, [sp, #100]
    2e24:	cmp	w0, #0x1
    2e28:	b.gt	2f18 <_Py_strhex@plt+0x1fa8>
    2e2c:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10d60>
    2e30:	add	x0, x0, #0xa0
    2e34:	bl	f40 <_PyObject_New@plt>
    2e38:	mov	x19, x0
    2e3c:	cbz	x0, 2f50 <_Py_strhex@plt+0x1fe0>
    2e40:	adrp	x0, 3000 <_Py_strhex@plt+0x2090>
    2e44:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2e48:	str	xzr, [x19, #48]
    2e4c:	ldr	q1, [x0, #1200]
    2e50:	mov	x0, #0x2000000000          	// #137438953472
    2e54:	ldr	q0, [x1, #1216]
    2e58:	str	x0, [x19, #120]
    2e5c:	stp	q1, q0, [x19, #16]
    2e60:	bl	f10 <PyErr_Occurred@plt>
    2e64:	cbnz	x0, 2f40 <_Py_strhex@plt+0x1fd0>
    2e68:	ldr	x1, [sp, #64]
    2e6c:	mov	x0, x19
    2e70:	ldr	x2, [sp, #80]
    2e74:	bl	2850 <_Py_strhex@plt+0x18e0>
    2e78:	mov	x0, x20
    2e7c:	bl	e60 <PyBuffer_Release@plt>
    2e80:	mov	x0, x19
    2e84:	ldp	x29, x30, [sp, #16]
    2e88:	ldp	x19, x20, [sp, #32]
    2e8c:	add	sp, sp, #0x90
    2e90:	ret
    2e94:	tbnz	x1, #63, 2fc0 <_Py_strhex@plt+0x2050>
    2e98:	cmp	x0, #0x0
    2e9c:	mov	x19, x1
    2ea0:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    2ea4:	b.gt	2db0 <_Py_strhex@plt+0x1e40>
    2ea8:	cbnz	x19, 2de4 <_Py_strhex@plt+0x1e74>
    2eac:	adrp	x0, 14000 <PyInit__sha256@@Base+0x10d60>
    2eb0:	add	x0, x0, #0xa0
    2eb4:	bl	f40 <_PyObject_New@plt>
    2eb8:	mov	x19, x0
    2ebc:	cbz	x0, 2f00 <_Py_strhex@plt+0x1f90>
    2ec0:	adrp	x0, 3000 <_Py_strhex@plt+0x2090>
    2ec4:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2ec8:	str	xzr, [x19, #48]
    2ecc:	ldr	q1, [x0, #1200]
    2ed0:	mov	x0, #0x2000000000          	// #137438953472
    2ed4:	ldr	q0, [x1, #1216]
    2ed8:	str	x0, [x19, #120]
    2edc:	stp	q1, q0, [x19, #16]
    2ee0:	bl	f10 <PyErr_Occurred@plt>
    2ee4:	cbz	x0, 2f04 <_Py_strhex@plt+0x1f94>
    2ee8:	ldr	x0, [x19]
    2eec:	sub	x0, x0, #0x1
    2ef0:	str	x0, [x19]
    2ef4:	cbnz	x0, 2f00 <_Py_strhex@plt+0x1f90>
    2ef8:	mov	x0, x19
    2efc:	bl	e90 <_Py_Dealloc@plt>
    2f00:	mov	x19, #0x0                   	// #0
    2f04:	mov	x0, x19
    2f08:	ldp	x29, x30, [sp, #16]
    2f0c:	ldp	x19, x20, [sp, #32]
    2f10:	add	sp, sp, #0x90
    2f14:	ret
    2f18:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfd60>
    2f1c:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2f20:	add	x1, x1, #0x3d0
    2f24:	mov	x19, #0x0                   	// #0
    2f28:	ldr	x0, [x0, #4024]
    2f2c:	ldr	x0, [x0]
    2f30:	bl	eb0 <PyErr_SetString@plt>
    2f34:	mov	x0, x20
    2f38:	bl	e60 <PyBuffer_Release@plt>
    2f3c:	b	2f04 <_Py_strhex@plt+0x1f94>
    2f40:	ldr	x0, [x19]
    2f44:	sub	x0, x0, #0x1
    2f48:	str	x0, [x19]
    2f4c:	cbz	x0, 2ff0 <_Py_strhex@plt+0x2080>
    2f50:	mov	x0, x20
    2f54:	mov	x19, #0x0                   	// #0
    2f58:	bl	e60 <PyBuffer_Release@plt>
    2f5c:	mov	x0, x19
    2f60:	ldp	x29, x30, [sp, #16]
    2f64:	ldp	x19, x20, [sp, #32]
    2f68:	add	sp, sp, #0x90
    2f6c:	ret
    2f70:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfd60>
    2f74:	mov	x19, #0x0                   	// #0
    2f78:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2f7c:	add	x1, x1, #0x3a0
    2f80:	ldr	x0, [x0, #4032]
    2f84:	ldr	x0, [x0]
    2f88:	bl	eb0 <PyErr_SetString@plt>
    2f8c:	mov	x0, x19
    2f90:	ldp	x29, x30, [sp, #16]
    2f94:	ldp	x19, x20, [sp, #32]
    2f98:	add	sp, sp, #0x90
    2f9c:	ret
    2fa0:	adrp	x0, 13000 <PyInit__sha256@@Base+0xfd60>
    2fa4:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    2fa8:	mov	x19, #0x0                   	// #0
    2fac:	add	x1, x1, #0x370
    2fb0:	ldr	x0, [x0, #4032]
    2fb4:	ldr	x0, [x0]
    2fb8:	bl	eb0 <PyErr_SetString@plt>
    2fbc:	b	2f04 <_Py_strhex@plt+0x1f94>
    2fc0:	add	x2, sp, #0x38
    2fc4:	str	x2, [sp]
    2fc8:	adrp	x4, 14000 <PyInit__sha256@@Base+0x10d60>
    2fcc:	add	x4, x4, #0xa0
    2fd0:	add	x4, x4, #0x380
    2fd4:	mov	w7, #0x0                   	// #0
    2fd8:	mov	w6, #0x1                   	// #1
    2fdc:	mov	w5, #0x0                   	// #0
    2fe0:	mov	x2, #0x0                   	// #0
    2fe4:	bl	ea0 <_PyArg_UnpackKeywords@plt>
    2fe8:	cbnz	x0, 2de4 <_Py_strhex@plt+0x1e74>
    2fec:	b	2f00 <_Py_strhex@plt+0x1f90>
    2ff0:	mov	x0, x19
    2ff4:	bl	e90 <_Py_Dealloc@plt>
    2ff8:	b	2f50 <_Py_strhex@plt+0x1fe0>
    2ffc:	nop
    3000:	ldr	w0, [x0, #124]
    3004:	cmp	w0, #0x20
    3008:	b.eq	301c <_Py_strhex@plt+0x20ac>  // b.none
    300c:	adrp	x0, 3000 <_Py_strhex@plt+0x2090>
    3010:	mov	x1, #0x6                   	// #6
    3014:	add	x0, x0, #0x488
    3018:	b	f60 <PyUnicode_FromStringAndSize@plt>
    301c:	adrp	x0, 3000 <_Py_strhex@plt+0x2090>
    3020:	mov	x1, #0x6                   	// #6
    3024:	add	x0, x0, #0x478
    3028:	b	f60 <PyUnicode_FromStringAndSize@plt>
    302c:	nop
    3030:	stp	x29, x30, [sp, #-208]!
    3034:	mov	w9, #0xffffff80            	// #-128
    3038:	mov	x29, sp
    303c:	stp	x19, x20, [sp, #16]
    3040:	add	x20, sp, #0x50
    3044:	ldr	w1, [x0, #48]
    3048:	stp	x21, x22, [sp, #32]
    304c:	mov	x19, x0
    3050:	ldr	d1, [x0, #48]
    3054:	ldp	x6, x7, [x0, #16]
    3058:	stp	x6, x7, [sp, #96]
    305c:	ldr	d0, [x0, #120]
    3060:	ldp	x6, x7, [x0, #88]
    3064:	stp	x6, x7, [sp, #168]
    3068:	ubfx	x1, x1, #3, #6
    306c:	ldp	x6, x7, [x0, #104]
    3070:	add	x3, sp, #0x88
    3074:	stp	x6, x7, [sp, #184]
    3078:	add	w2, w1, #0x1
    307c:	add	x22, x20, #0x38
    3080:	ldp	x6, x7, [x0, #56]
    3084:	str	d1, [sp, #128]
    3088:	ldp	x4, x5, [x0, #72]
    308c:	stp	x6, x7, [sp, #136]
    3090:	cmp	w2, #0x38
    3094:	stp	x4, x5, [sp, #152]
    3098:	ldp	x4, x5, [x0, #32]
    309c:	stp	x4, x5, [x20, #32]
    30a0:	add	x0, x22, w2, sxtw
    30a4:	str	d0, [sp, #200]
    30a8:	ldr	x21, [x19, #48]
    30ac:	strb	w9, [x3, w1, sxtw]
    30b0:	rev	x21, x21
    30b4:	b.le	314c <_Py_strhex@plt+0x21dc>
    30b8:	mov	w1, #0x40                  	// #64
    30bc:	sub	w2, w1, w2
    30c0:	mov	w1, #0x0                   	// #0
    30c4:	sxtw	x2, w2
    30c8:	bl	ec0 <memset@plt>
    30cc:	mov	x0, x20
    30d0:	bl	1058 <_Py_strhex@plt+0xe8>
    30d4:	stp	xzr, xzr, [sp, #136]
    30d8:	stp	xzr, xzr, [x20, #72]
    30dc:	stp	xzr, xzr, [x20, #88]
    30e0:	str	xzr, [x20, #104]
    30e4:	mov	x0, x20
    30e8:	str	x21, [sp, #192]
    30ec:	bl	1058 <_Py_strhex@plt+0xe8>
    30f0:	ldp	w9, w8, [sp, #96]
    30f4:	add	x0, sp, #0x30
    30f8:	ldp	w7, w6, [sp, #104]
    30fc:	rev	w9, w9
    3100:	ldp	w5, w4, [sp, #112]
    3104:	rev	w8, w8
    3108:	ldp	w3, w2, [sp, #120]
    310c:	rev	w7, w7
    3110:	ldrsw	x1, [x19, #124]
    3114:	rev	w6, w6
    3118:	rev	w5, w5
    311c:	rev	w4, w4
    3120:	rev	w3, w3
    3124:	rev	w2, w2
    3128:	stp	w9, w8, [sp, #48]
    312c:	stp	w7, w6, [sp, #56]
    3130:	stp	w5, w4, [sp, #64]
    3134:	stp	w3, w2, [sp, #72]
    3138:	bl	e80 <PyBytes_FromStringAndSize@plt>
    313c:	ldp	x19, x20, [sp, #16]
    3140:	ldp	x21, x22, [sp, #32]
    3144:	ldp	x29, x30, [sp], #208
    3148:	ret
    314c:	mov	w1, #0x38                  	// #56
    3150:	sub	w2, w1, w2
    3154:	mov	w1, #0x0                   	// #0
    3158:	sxtw	x2, w2
    315c:	bl	ec0 <memset@plt>
    3160:	b	30e4 <_Py_strhex@plt+0x2174>
    3164:	nop
    3168:	stp	x29, x30, [sp, #-208]!
    316c:	mov	w9, #0xffffff80            	// #-128
    3170:	mov	x29, sp
    3174:	stp	x19, x20, [sp, #16]
    3178:	add	x20, sp, #0x50
    317c:	ldr	w1, [x0, #48]
    3180:	stp	x21, x22, [sp, #32]
    3184:	mov	x19, x0
    3188:	ldr	d1, [x0, #48]
    318c:	ldp	x6, x7, [x0, #16]
    3190:	stp	x6, x7, [sp, #96]
    3194:	ldr	d0, [x0, #120]
    3198:	ldp	x6, x7, [x0, #88]
    319c:	stp	x6, x7, [sp, #168]
    31a0:	ubfx	x1, x1, #3, #6
    31a4:	ldp	x6, x7, [x0, #104]
    31a8:	add	x3, sp, #0x88
    31ac:	stp	x6, x7, [sp, #184]
    31b0:	add	w2, w1, #0x1
    31b4:	add	x22, x20, #0x38
    31b8:	ldp	x6, x7, [x0, #56]
    31bc:	str	d1, [sp, #128]
    31c0:	ldp	x4, x5, [x0, #72]
    31c4:	stp	x6, x7, [sp, #136]
    31c8:	cmp	w2, #0x38
    31cc:	stp	x4, x5, [sp, #152]
    31d0:	ldp	x4, x5, [x0, #32]
    31d4:	stp	x4, x5, [x20, #32]
    31d8:	add	x0, x22, w2, sxtw
    31dc:	str	d0, [sp, #200]
    31e0:	ldr	x21, [x19, #48]
    31e4:	strb	w9, [x3, w1, sxtw]
    31e8:	rev	x21, x21
    31ec:	b.le	3284 <_Py_strhex@plt+0x2314>
    31f0:	mov	w1, #0x40                  	// #64
    31f4:	sub	w2, w1, w2
    31f8:	mov	w1, #0x0                   	// #0
    31fc:	sxtw	x2, w2
    3200:	bl	ec0 <memset@plt>
    3204:	mov	x0, x20
    3208:	bl	1058 <_Py_strhex@plt+0xe8>
    320c:	stp	xzr, xzr, [sp, #136]
    3210:	stp	xzr, xzr, [x20, #72]
    3214:	stp	xzr, xzr, [x20, #88]
    3218:	str	xzr, [x20, #104]
    321c:	mov	x0, x20
    3220:	str	x21, [sp, #192]
    3224:	bl	1058 <_Py_strhex@plt+0xe8>
    3228:	ldp	w9, w8, [sp, #96]
    322c:	add	x0, sp, #0x30
    3230:	ldp	w7, w6, [sp, #104]
    3234:	rev	w9, w9
    3238:	ldp	w5, w4, [sp, #112]
    323c:	rev	w8, w8
    3240:	ldp	w3, w2, [sp, #120]
    3244:	rev	w7, w7
    3248:	ldrsw	x1, [x19, #124]
    324c:	rev	w6, w6
    3250:	rev	w5, w5
    3254:	rev	w4, w4
    3258:	rev	w3, w3
    325c:	rev	w2, w2
    3260:	stp	w9, w8, [sp, #48]
    3264:	stp	w7, w6, [sp, #56]
    3268:	stp	w5, w4, [sp, #64]
    326c:	stp	w3, w2, [sp, #72]
    3270:	bl	f70 <_Py_strhex@plt>
    3274:	ldp	x19, x20, [sp, #16]
    3278:	ldp	x21, x22, [sp, #32]
    327c:	ldp	x29, x30, [sp], #208
    3280:	ret
    3284:	mov	w1, #0x38                  	// #56
    3288:	sub	w2, w1, w2
    328c:	mov	w1, #0x0                   	// #0
    3290:	sxtw	x2, w2
    3294:	bl	ec0 <memset@plt>
    3298:	b	321c <_Py_strhex@plt+0x22ac>
    329c:	nop

00000000000032a0 <PyInit__sha256@@Base>:
    32a0:	stp	x29, x30, [sp, #-48]!
    32a4:	mov	x29, sp
    32a8:	stp	x19, x20, [sp, #16]
    32ac:	adrp	x20, 13000 <PyInit__sha256@@Base+0xfd60>
    32b0:	stp	x21, x22, [sp, #32]
    32b4:	adrp	x22, 14000 <PyInit__sha256@@Base+0x10d60>
    32b8:	add	x19, x22, #0xa0
    32bc:	add	x21, x19, #0x1a0
    32c0:	ldr	x20, [x20, #4048]
    32c4:	mov	x0, x21
    32c8:	str	x20, [x21, #8]
    32cc:	bl	ee0 <PyType_Ready@plt>
    32d0:	tbnz	w0, #31, 3348 <PyInit__sha256@@Base+0xa8>
    32d4:	mov	x0, x19
    32d8:	str	x20, [x19, #8]
    32dc:	bl	ee0 <PyType_Ready@plt>
    32e0:	tbnz	w0, #31, 3348 <PyInit__sha256@@Base+0xa8>
    32e4:	add	x0, x19, #0x3c0
    32e8:	mov	w1, #0x3f5                 	// #1013
    32ec:	bl	f20 <PyModule_Create2@plt>
    32f0:	mov	x20, x0
    32f4:	cbz	x0, 3334 <PyInit__sha256@@Base+0x94>
    32f8:	ldr	x3, [x19, #416]
    32fc:	mov	x2, x21
    3300:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    3304:	add	x1, x1, #0x3f0
    3308:	add	x3, x3, #0x1
    330c:	str	x3, [x19, #416]
    3310:	bl	f50 <PyModule_AddObject@plt>
    3314:	ldr	x3, [x22, #160]
    3318:	adrp	x1, 3000 <_Py_strhex@plt+0x2090>
    331c:	mov	x2, x19
    3320:	add	x1, x1, #0x400
    3324:	add	x3, x3, #0x1
    3328:	mov	x0, x20
    332c:	str	x3, [x22, #160]
    3330:	bl	f50 <PyModule_AddObject@plt>
    3334:	mov	x0, x20
    3338:	ldp	x19, x20, [sp, #16]
    333c:	ldp	x21, x22, [sp, #32]
    3340:	ldp	x29, x30, [sp], #48
    3344:	ret
    3348:	mov	x20, #0x0                   	// #0
    334c:	mov	x0, x20
    3350:	ldp	x19, x20, [sp, #16]
    3354:	ldp	x21, x22, [sp, #32]
    3358:	ldp	x29, x30, [sp], #48
    335c:	ret

Disassembly of section .fini:

0000000000003360 <.fini>:
    3360:	stp	x29, x30, [sp, #-16]!
    3364:	mov	x29, sp
    3368:	ldp	x29, x30, [sp], #16
    336c:	ret
