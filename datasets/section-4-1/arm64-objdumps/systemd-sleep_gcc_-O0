
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-sleep_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401308 <_init>:
  401308:	stp	x29, x30, [sp, #-16]!
  40130c:	mov	x29, sp
  401310:	bl	401650 <call_weak_fn>
  401314:	ldp	x29, x30, [sp], #16
  401318:	ret

Disassembly of section .plt:

0000000000401320 <.plt>:
  401320:	stp	x16, x30, [sp, #-16]!
  401324:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401328:	ldr	x17, [x16, #3720]
  40132c:	add	x16, x16, #0xe88
  401330:	br	x17
  401334:	nop
  401338:	nop
  40133c:	nop

0000000000401340 <timerfd_create@plt>:
  401340:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401344:	ldr	x17, [x16, #3728]
  401348:	add	x16, x16, #0xe90
  40134c:	br	x17

0000000000401350 <safe_fclose@plt>:
  401350:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401354:	ldr	x17, [x16, #3736]
  401358:	add	x16, x16, #0xe98
  40135c:	br	x17

0000000000401360 <find_hibernate_location@plt>:
  401360:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401364:	ldr	x17, [x16, #3744]
  401368:	add	x16, x16, #0xea0
  40136c:	br	x17

0000000000401370 <__libc_start_main@plt>:
  401370:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401374:	ldr	x17, [x16, #3752]
  401378:	add	x16, x16, #0xea8
  40137c:	br	x17

0000000000401380 <format_timespan@plt>:
  401380:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401384:	ldr	x17, [x16, #3760]
  401388:	add	x16, x16, #0xeb0
  40138c:	br	x17

0000000000401390 <__gmon_start__@plt>:
  401390:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401394:	ldr	x17, [x16, #3768]
  401398:	add	x16, x16, #0xeb8
  40139c:	br	x17

00000000004013a0 <write_string_file_ts@plt>:
  4013a0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4013a4:	ldr	x17, [x16, #3776]
  4013a8:	add	x16, x16, #0xec0
  4013ac:	br	x17

00000000004013b0 <polkit_agent_close@plt>:
  4013b0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4013b4:	ldr	x17, [x16, #3784]
  4013b8:	add	x16, x16, #0xec8
  4013bc:	br	x17

00000000004013c0 <write_string_stream_ts@plt>:
  4013c0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4013c4:	ldr	x17, [x16, #3792]
  4013c8:	add	x16, x16, #0xed0
  4013cc:	br	x17

00000000004013d0 <snprintf@plt>:
  4013d0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4013d4:	ldr	x17, [x16, #3800]
  4013d8:	add	x16, x16, #0xed8
  4013dc:	br	x17

00000000004013e0 <timespec_store@plt>:
  4013e0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4013e4:	ldr	x17, [x16, #3808]
  4013e8:	add	x16, x16, #0xee0
  4013ec:	br	x17

00000000004013f0 <log_setup_service@plt>:
  4013f0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4013f4:	ldr	x17, [x16, #3816]
  4013f8:	add	x16, x16, #0xee8
  4013fc:	br	x17

0000000000401400 <safe_close@plt>:
  401400:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401404:	ldr	x17, [x16, #3824]
  401408:	add	x16, x16, #0xef0
  40140c:	br	x17

0000000000401410 <parse_sleep_config@plt>:
  401410:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401414:	ldr	x17, [x16, #3832]
  401418:	add	x16, x16, #0xef8
  40141c:	br	x17

0000000000401420 <log_assert_failed_realm@plt>:
  401420:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401424:	ldr	x17, [x16, #3840]
  401428:	add	x16, x16, #0xf00
  40142c:	br	x17

0000000000401430 <getopt_long@plt>:
  401430:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401434:	ldr	x17, [x16, #3848]
  401438:	add	x16, x16, #0xf08
  40143c:	br	x17

0000000000401440 <log_assert_failed_unreachable_realm@plt>:
  401440:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401444:	ldr	x17, [x16, #3856]
  401448:	add	x16, x16, #0xf10
  40144c:	br	x17

0000000000401450 <access@plt>:
  401450:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401454:	ldr	x17, [x16, #3864]
  401458:	add	x16, x16, #0xf18
  40145c:	br	x17

0000000000401460 <abort@plt>:
  401460:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401464:	ldr	x17, [x16, #3872]
  401468:	add	x16, x16, #0xf20
  40146c:	br	x17

0000000000401470 <__errno_location@plt>:
  401470:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401474:	ldr	x17, [x16, #3880]
  401478:	add	x16, x16, #0xf28
  40147c:	br	x17

0000000000401480 <free_sleep_config@plt>:
  401480:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401484:	ldr	x17, [x16, #3888]
  401488:	add	x16, x16, #0xf30
  40148c:	br	x17

0000000000401490 <terminal_urlify_man@plt>:
  401490:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401494:	ldr	x17, [x16, #3896]
  401498:	add	x16, x16, #0xf38
  40149c:	br	x17

00000000004014a0 <__stack_chk_fail@plt>:
  4014a0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4014a4:	ldr	x17, [x16, #3904]
  4014a8:	add	x16, x16, #0xf40
  4014ac:	br	x17

00000000004014b0 <sleep_settings@plt>:
  4014b0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4014b4:	ldr	x17, [x16, #3912]
  4014b8:	add	x16, x16, #0xf48
  4014bc:	br	x17

00000000004014c0 <ask_password_agent_close@plt>:
  4014c0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4014c4:	ldr	x17, [x16, #3920]
  4014c8:	add	x16, x16, #0xf50
  4014cc:	br	x17

00000000004014d0 <version@plt>:
  4014d0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4014d4:	ldr	x17, [x16, #3928]
  4014d8:	add	x16, x16, #0xf58
  4014dc:	br	x17

00000000004014e0 <pager_close@plt>:
  4014e0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4014e4:	ldr	x17, [x16, #3936]
  4014e8:	add	x16, x16, #0xf60
  4014ec:	br	x17

00000000004014f0 <poll@plt>:
  4014f0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4014f4:	ldr	x17, [x16, #3944]
  4014f8:	add	x16, x16, #0xf68
  4014fc:	br	x17

0000000000401500 <strv_find@plt>:
  401500:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401504:	ldr	x17, [x16, #3952]
  401508:	add	x16, x16, #0xf70
  40150c:	br	x17

0000000000401510 <log_struct_internal@plt>:
  401510:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401514:	ldr	x17, [x16, #3960]
  401518:	add	x16, x16, #0xf78
  40151c:	br	x17

0000000000401520 <timerfd_settime@plt>:
  401520:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401524:	ldr	x17, [x16, #3968]
  401528:	add	x16, x16, #0xf80
  40152c:	br	x17

0000000000401530 <log_internal_realm@plt>:
  401530:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401534:	ldr	x17, [x16, #3976]
  401538:	add	x16, x16, #0xf88
  40153c:	br	x17

0000000000401540 <fclose@plt>:
  401540:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401544:	ldr	x17, [x16, #3984]
  401548:	add	x16, x16, #0xf90
  40154c:	br	x17

0000000000401550 <setvbuf@plt>:
  401550:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401554:	ldr	x17, [x16, #3992]
  401558:	add	x16, x16, #0xf98
  40155c:	br	x17

0000000000401560 <strcmp@plt>:
  401560:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401564:	ldr	x17, [x16, #4000]
  401568:	add	x16, x16, #0xfa0
  40156c:	br	x17

0000000000401570 <hibernate_location_free@plt>:
  401570:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401574:	ldr	x17, [x16, #4008]
  401578:	add	x16, x16, #0xfa8
  40157c:	br	x17

0000000000401580 <strdup@plt>:
  401580:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401584:	ldr	x17, [x16, #4016]
  401588:	add	x16, x16, #0xfb0
  40158c:	br	x17

0000000000401590 <free@plt>:
  401590:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  401594:	ldr	x17, [x16, #4024]
  401598:	add	x16, x16, #0xfb8
  40159c:	br	x17

00000000004015a0 <mac_selinux_finish@plt>:
  4015a0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4015a4:	ldr	x17, [x16, #4032]
  4015a8:	add	x16, x16, #0xfc0
  4015ac:	br	x17

00000000004015b0 <printf@plt>:
  4015b0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4015b4:	ldr	x17, [x16, #4040]
  4015b8:	add	x16, x16, #0xfc8
  4015bc:	br	x17

00000000004015c0 <execute_directories@plt>:
  4015c0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4015c4:	ldr	x17, [x16, #4048]
  4015c8:	add	x16, x16, #0xfd0
  4015cc:	br	x17

00000000004015d0 <fopen64@plt>:
  4015d0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4015d4:	ldr	x17, [x16, #4056]
  4015d8:	add	x16, x16, #0xfd8
  4015dc:	br	x17

00000000004015e0 <log_oom_internal@plt>:
  4015e0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4015e4:	ldr	x17, [x16, #4064]
  4015e8:	add	x16, x16, #0xfe0
  4015ec:	br	x17

00000000004015f0 <log_get_max_level_realm@plt>:
  4015f0:	adrp	x16, 414000 <__FRAME_END__+0xfc20>
  4015f4:	ldr	x17, [x16, #4072]
  4015f8:	add	x16, x16, #0xfe8
  4015fc:	br	x17

Disassembly of section .text:

0000000000401600 <_start>:
  401600:	mov	x29, #0x0                   	// #0
  401604:	mov	x30, #0x0                   	// #0
  401608:	mov	x5, x0
  40160c:	ldr	x1, [sp]
  401610:	add	x2, sp, #0x8
  401614:	mov	x6, sp
  401618:	movz	x0, #0x0, lsl #48
  40161c:	movk	x0, #0x0, lsl #32
  401620:	movk	x0, #0x40, lsl #16
  401624:	movk	x0, #0x3404
  401628:	movz	x3, #0x0, lsl #48
  40162c:	movk	x3, #0x0, lsl #32
  401630:	movk	x3, #0x40, lsl #16
  401634:	movk	x3, #0x3458
  401638:	movz	x4, #0x0, lsl #48
  40163c:	movk	x4, #0x0, lsl #32
  401640:	movk	x4, #0x40, lsl #16
  401644:	movk	x4, #0x34d8
  401648:	bl	401370 <__libc_start_main@plt>
  40164c:	bl	401460 <abort@plt>

0000000000401650 <call_weak_fn>:
  401650:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  401654:	ldr	x0, [x0, #4088]
  401658:	cbz	x0, 401660 <call_weak_fn+0x10>
  40165c:	b	401390 <__gmon_start__@plt>
  401660:	ret

0000000000401664 <deregister_tm_clones>:
  401664:	stp	x29, x30, [sp, #-32]!
  401668:	mov	x29, sp
  40166c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401670:	add	x0, x0, #0x0
  401674:	str	x0, [sp, #24]
  401678:	ldr	x0, [sp, #24]
  40167c:	str	x0, [sp, #24]
  401680:	ldr	x1, [sp, #24]
  401684:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401688:	add	x0, x0, #0x0
  40168c:	cmp	x1, x0
  401690:	b.eq	4016cc <deregister_tm_clones+0x68>  // b.none
  401694:	adrp	x0, 403000 <parse_argv+0x160>
  401698:	add	x0, x0, #0x4f0
  40169c:	ldr	x0, [x0]
  4016a0:	str	x0, [sp, #16]
  4016a4:	ldr	x0, [sp, #16]
  4016a8:	str	x0, [sp, #16]
  4016ac:	ldr	x0, [sp, #16]
  4016b0:	cmp	x0, #0x0
  4016b4:	b.eq	4016d0 <deregister_tm_clones+0x6c>  // b.none
  4016b8:	ldr	x1, [sp, #16]
  4016bc:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4016c0:	add	x0, x0, #0x0
  4016c4:	blr	x1
  4016c8:	b	4016d0 <deregister_tm_clones+0x6c>
  4016cc:	nop
  4016d0:	ldp	x29, x30, [sp], #32
  4016d4:	ret

00000000004016d8 <register_tm_clones>:
  4016d8:	stp	x29, x30, [sp, #-48]!
  4016dc:	mov	x29, sp
  4016e0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4016e4:	add	x0, x0, #0x0
  4016e8:	str	x0, [sp, #40]
  4016ec:	ldr	x0, [sp, #40]
  4016f0:	str	x0, [sp, #40]
  4016f4:	ldr	x1, [sp, #40]
  4016f8:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4016fc:	add	x0, x0, #0x0
  401700:	sub	x0, x1, x0
  401704:	asr	x0, x0, #3
  401708:	lsr	x1, x0, #63
  40170c:	add	x0, x1, x0
  401710:	asr	x0, x0, #1
  401714:	str	x0, [sp, #32]
  401718:	ldr	x0, [sp, #32]
  40171c:	cmp	x0, #0x0
  401720:	b.eq	401760 <register_tm_clones+0x88>  // b.none
  401724:	adrp	x0, 403000 <parse_argv+0x160>
  401728:	add	x0, x0, #0x4f8
  40172c:	ldr	x0, [x0]
  401730:	str	x0, [sp, #24]
  401734:	ldr	x0, [sp, #24]
  401738:	str	x0, [sp, #24]
  40173c:	ldr	x0, [sp, #24]
  401740:	cmp	x0, #0x0
  401744:	b.eq	401764 <register_tm_clones+0x8c>  // b.none
  401748:	ldr	x2, [sp, #24]
  40174c:	ldr	x1, [sp, #32]
  401750:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401754:	add	x0, x0, #0x0
  401758:	blr	x2
  40175c:	b	401764 <register_tm_clones+0x8c>
  401760:	nop
  401764:	ldp	x29, x30, [sp], #48
  401768:	ret

000000000040176c <__do_global_dtors_aux>:
  40176c:	stp	x29, x30, [sp, #-16]!
  401770:	mov	x29, sp
  401774:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401778:	add	x0, x0, #0x18
  40177c:	ldrb	w0, [x0]
  401780:	and	x0, x0, #0xff
  401784:	cmp	x0, #0x0
  401788:	b.ne	4017a4 <__do_global_dtors_aux+0x38>  // b.any
  40178c:	bl	401664 <deregister_tm_clones>
  401790:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  401794:	add	x0, x0, #0x18
  401798:	mov	w1, #0x1                   	// #1
  40179c:	strb	w1, [x0]
  4017a0:	b	4017a8 <__do_global_dtors_aux+0x3c>
  4017a4:	nop
  4017a8:	ldp	x29, x30, [sp], #16
  4017ac:	ret

00000000004017b0 <frame_dummy>:
  4017b0:	stp	x29, x30, [sp, #-16]!
  4017b4:	mov	x29, sp
  4017b8:	bl	4016d8 <register_tm_clones>
  4017bc:	nop
  4017c0:	ldp	x29, x30, [sp], #16
  4017c4:	ret

00000000004017c8 <ALIGN_TO>:
  4017c8:	sub	sp, sp, #0x10
  4017cc:	str	x0, [sp, #8]
  4017d0:	str	x1, [sp]
  4017d4:	ldr	x1, [sp, #8]
  4017d8:	ldr	x0, [sp]
  4017dc:	add	x0, x1, x0
  4017e0:	sub	x1, x0, #0x1
  4017e4:	ldr	x0, [sp]
  4017e8:	neg	x0, x0
  4017ec:	and	x0, x1, x0
  4017f0:	add	sp, sp, #0x10
  4017f4:	ret

00000000004017f8 <closep>:
  4017f8:	stp	x29, x30, [sp, #-32]!
  4017fc:	mov	x29, sp
  401800:	str	x0, [sp, #24]
  401804:	ldr	x0, [sp, #24]
  401808:	ldr	w0, [x0]
  40180c:	bl	401400 <safe_close@plt>
  401810:	nop
  401814:	ldp	x29, x30, [sp], #32
  401818:	ret

000000000040181c <fclosep>:
  40181c:	stp	x29, x30, [sp, #-32]!
  401820:	mov	x29, sp
  401824:	str	x0, [sp, #24]
  401828:	ldr	x0, [sp, #24]
  40182c:	ldr	x0, [x0]
  401830:	bl	401350 <safe_fclose@plt>
  401834:	nop
  401838:	ldp	x29, x30, [sp], #32
  40183c:	ret

0000000000401840 <write_string_stream>:
  401840:	stp	x29, x30, [sp, #-48]!
  401844:	mov	x29, sp
  401848:	str	x0, [sp, #40]
  40184c:	str	x1, [sp, #32]
  401850:	str	w2, [sp, #28]
  401854:	mov	x3, #0x0                   	// #0
  401858:	ldr	w2, [sp, #28]
  40185c:	ldr	x1, [sp, #32]
  401860:	ldr	x0, [sp, #40]
  401864:	bl	4013c0 <write_string_stream_ts@plt>
  401868:	ldp	x29, x30, [sp], #48
  40186c:	ret

0000000000401870 <write_string_file>:
  401870:	stp	x29, x30, [sp, #-48]!
  401874:	mov	x29, sp
  401878:	str	x0, [sp, #40]
  40187c:	str	x1, [sp, #32]
  401880:	str	w2, [sp, #28]
  401884:	mov	x3, #0x0                   	// #0
  401888:	ldr	w2, [sp, #28]
  40188c:	ldr	x1, [sp, #32]
  401890:	ldr	x0, [sp, #40]
  401894:	bl	4013a0 <write_string_file_ts@plt>
  401898:	ldp	x29, x30, [sp], #48
  40189c:	ret

00000000004018a0 <freep>:
  4018a0:	stp	x29, x30, [sp, #-32]!
  4018a4:	mov	x29, sp
  4018a8:	str	x0, [sp, #24]
  4018ac:	ldr	x0, [sp, #24]
  4018b0:	ldr	x0, [x0]
  4018b4:	bl	401590 <free@plt>
  4018b8:	nop
  4018bc:	ldp	x29, x30, [sp], #32
  4018c0:	ret

00000000004018c4 <save_argc_argv>:
  4018c4:	sub	sp, sp, #0x10
  4018c8:	str	w0, [sp, #12]
  4018cc:	str	x1, [sp]
  4018d0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4018d4:	add	x0, x0, #0x14
  4018d8:	ldr	w1, [sp, #12]
  4018dc:	str	w1, [x0]
  4018e0:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4018e4:	add	x0, x0, #0x0
  4018e8:	ldr	x1, [sp]
  4018ec:	str	x1, [x0]
  4018f0:	nop
  4018f4:	add	sp, sp, #0x10
  4018f8:	ret

00000000004018fc <static_destruct>:
  4018fc:	stp	x29, x30, [sp, #-32]!
  401900:	mov	x29, sp
  401904:	adrp	x0, 403000 <parse_argv+0x160>
  401908:	add	x0, x0, #0xe30
  40190c:	ldr	x0, [x0]
  401910:	cmp	x0, #0x0
  401914:	b.eq	401978 <static_destruct+0x7c>  // b.none
  401918:	adrp	x0, 403000 <parse_argv+0x160>
  40191c:	add	x0, x0, #0xe30
  401920:	ldr	x0, [x0]
  401924:	mov	x1, #0x8                   	// #8
  401928:	bl	4017c8 <ALIGN_TO>
  40192c:	str	x0, [sp, #24]
  401930:	b	40195c <static_destruct+0x60>
  401934:	ldr	x0, [sp, #24]
  401938:	ldr	x1, [x0, #8]
  40193c:	ldr	x0, [sp, #24]
  401940:	ldr	x0, [x0]
  401944:	blr	x1
  401948:	ldr	x0, [sp, #24]
  40194c:	add	x0, x0, #0x10
  401950:	mov	x1, #0x8                   	// #8
  401954:	bl	4017c8 <ALIGN_TO>
  401958:	str	x0, [sp, #24]
  40195c:	ldr	x1, [sp, #24]
  401960:	adrp	x0, 403000 <parse_argv+0x160>
  401964:	add	x0, x0, #0xe38
  401968:	ldr	x0, [x0]
  40196c:	cmp	x1, x0
  401970:	b.cc	401934 <static_destruct+0x38>  // b.lo, b.ul, b.last
  401974:	b	40197c <static_destruct+0x80>
  401978:	nop
  40197c:	ldp	x29, x30, [sp], #32
  401980:	ret

0000000000401984 <free_sleep_configp>:
  401984:	stp	x29, x30, [sp, #-32]!
  401988:	mov	x29, sp
  40198c:	str	x0, [sp, #24]
  401990:	ldr	x0, [sp, #24]
  401994:	ldr	x0, [x0]
  401998:	cmp	x0, #0x0
  40199c:	b.eq	4019ac <free_sleep_configp+0x28>  // b.none
  4019a0:	ldr	x0, [sp, #24]
  4019a4:	ldr	x0, [x0]
  4019a8:	bl	401480 <free_sleep_config@plt>
  4019ac:	nop
  4019b0:	ldp	x29, x30, [sp], #32
  4019b4:	ret

00000000004019b8 <hibernate_location_freep>:
  4019b8:	stp	x29, x30, [sp, #-32]!
  4019bc:	mov	x29, sp
  4019c0:	str	x0, [sp, #24]
  4019c4:	ldr	x0, [sp, #24]
  4019c8:	ldr	x0, [x0]
  4019cc:	cmp	x0, #0x0
  4019d0:	b.eq	4019e0 <hibernate_location_freep+0x28>  // b.none
  4019d4:	ldr	x0, [sp, #24]
  4019d8:	ldr	x0, [x0]
  4019dc:	bl	401570 <hibernate_location_free@plt>
  4019e0:	nop
  4019e4:	ldp	x29, x30, [sp], #32
  4019e8:	ret

00000000004019ec <strv_isempty>:
  4019ec:	sub	sp, sp, #0x10
  4019f0:	str	x0, [sp, #8]
  4019f4:	ldr	x0, [sp, #8]
  4019f8:	cmp	x0, #0x0
  4019fc:	b.eq	401a10 <strv_isempty+0x24>  // b.none
  401a00:	ldr	x0, [sp, #8]
  401a04:	ldr	x0, [x0]
  401a08:	cmp	x0, #0x0
  401a0c:	b.ne	401a18 <strv_isempty+0x2c>  // b.any
  401a10:	mov	w0, #0x1                   	// #1
  401a14:	b	401a1c <strv_isempty+0x30>
  401a18:	mov	w0, #0x0                   	// #0
  401a1c:	and	w0, w0, #0x1
  401a20:	and	w0, w0, #0xff
  401a24:	add	sp, sp, #0x10
  401a28:	ret

0000000000401a2c <__unique_prefix_static_destructor_wrapper4>:
  401a2c:	stp	x29, x30, [sp, #-48]!
  401a30:	mov	x29, sp
  401a34:	str	x0, [sp, #24]
  401a38:	ldr	x0, [sp, #24]
  401a3c:	str	x0, [sp, #40]
  401a40:	ldr	x0, [sp, #40]
  401a44:	bl	4018a0 <freep>
  401a48:	nop
  401a4c:	ldp	x29, x30, [sp], #48
  401a50:	ret

0000000000401a54 <write_hibernate_location_info>:
  401a54:	stp	x29, x30, [sp, #-160]!
  401a58:	mov	x29, sp
  401a5c:	str	x0, [sp, #24]
  401a60:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  401a64:	add	x0, x0, #0xc40
  401a68:	ldr	x1, [x0]
  401a6c:	str	x1, [sp, #152]
  401a70:	mov	x1, #0x0                   	// #0
  401a74:	ldr	x0, [sp, #24]
  401a78:	cmp	x0, #0x0
  401a7c:	cset	w0, eq  // eq = none
  401a80:	and	w0, w0, #0xff
  401a84:	and	x0, x0, #0xff
  401a88:	cmp	x0, #0x0
  401a8c:	b.eq	401ab8 <write_hibernate_location_info+0x64>  // b.none
  401a90:	adrp	x0, 403000 <parse_argv+0x160>
  401a94:	add	x1, x0, #0x543
  401a98:	adrp	x0, 403000 <parse_argv+0x160>
  401a9c:	add	x4, x0, #0xe40
  401aa0:	mov	w3, #0x2c                  	// #44
  401aa4:	mov	x2, x1
  401aa8:	adrp	x0, 403000 <parse_argv+0x160>
  401aac:	add	x1, x0, #0x558
  401ab0:	mov	w0, #0x0                   	// #0
  401ab4:	bl	401420 <log_assert_failed_realm@plt>
  401ab8:	ldr	x0, [sp, #24]
  401abc:	ldr	x0, [x0, #16]
  401ac0:	cmp	x0, #0x0
  401ac4:	cset	w0, eq  // eq = none
  401ac8:	and	w0, w0, #0xff
  401acc:	and	x0, x0, #0xff
  401ad0:	cmp	x0, #0x0
  401ad4:	b.eq	401b00 <write_hibernate_location_info+0xac>  // b.none
  401ad8:	adrp	x0, 403000 <parse_argv+0x160>
  401adc:	add	x1, x0, #0x543
  401ae0:	adrp	x0, 403000 <parse_argv+0x160>
  401ae4:	add	x4, x0, #0xe40
  401ae8:	mov	w3, #0x2d                  	// #45
  401aec:	mov	x2, x1
  401af0:	adrp	x0, 403000 <parse_argv+0x160>
  401af4:	add	x1, x0, #0x570
  401af8:	mov	w0, #0x0                   	// #0
  401afc:	bl	401420 <log_assert_failed_realm@plt>
  401b00:	ldr	x0, [sp, #24]
  401b04:	ldr	x0, [x0]
  401b08:	cmp	x0, #0x0
  401b0c:	cset	w0, eq  // eq = none
  401b10:	and	w0, w0, #0xff
  401b14:	and	x0, x0, #0xff
  401b18:	cmp	x0, #0x0
  401b1c:	b.eq	401b48 <write_hibernate_location_info+0xf4>  // b.none
  401b20:	adrp	x0, 403000 <parse_argv+0x160>
  401b24:	add	x1, x0, #0x543
  401b28:	adrp	x0, 403000 <parse_argv+0x160>
  401b2c:	add	x4, x0, #0xe40
  401b30:	mov	w3, #0x2e                  	// #46
  401b34:	mov	x2, x1
  401b38:	adrp	x0, 403000 <parse_argv+0x160>
  401b3c:	add	x1, x0, #0x590
  401b40:	mov	w0, #0x0                   	// #0
  401b44:	bl	401420 <log_assert_failed_realm@plt>
  401b48:	ldr	x0, [sp, #24]
  401b4c:	ldr	x0, [x0]
  401b50:	mov	w2, #0x20                  	// #32
  401b54:	mov	x1, x0
  401b58:	adrp	x0, 403000 <parse_argv+0x160>
  401b5c:	add	x0, x0, #0x5b0
  401b60:	bl	401870 <write_string_file>
  401b64:	str	w0, [sp, #40]
  401b68:	ldr	w0, [sp, #40]
  401b6c:	cmp	w0, #0x0
  401b70:	b.ge	401c18 <write_hibernate_location_info+0x1c4>  // b.tcont
  401b74:	mov	w0, #0x7                   	// #7
  401b78:	str	w0, [sp, #116]
  401b7c:	ldr	w0, [sp, #40]
  401b80:	str	w0, [sp, #120]
  401b84:	str	wzr, [sp, #124]
  401b88:	ldr	w0, [sp, #124]
  401b8c:	bl	4015f0 <log_get_max_level_realm@plt>
  401b90:	mov	w1, w0
  401b94:	ldr	w0, [sp, #116]
  401b98:	and	w0, w0, #0x7
  401b9c:	cmp	w1, w0
  401ba0:	b.lt	401c00 <write_hibernate_location_info+0x1ac>  // b.tstop
  401ba4:	ldr	w0, [sp, #124]
  401ba8:	lsl	w1, w0, #10
  401bac:	ldr	w0, [sp, #116]
  401bb0:	orr	w8, w1, w0
  401bb4:	adrp	x0, 403000 <parse_argv+0x160>
  401bb8:	add	x1, x0, #0x543
  401bbc:	ldr	x0, [sp, #24]
  401bc0:	ldr	x0, [x0, #16]
  401bc4:	ldr	x2, [x0]
  401bc8:	ldr	x0, [sp, #24]
  401bcc:	ldr	x0, [x0]
  401bd0:	mov	x7, x0
  401bd4:	mov	x6, x2
  401bd8:	adrp	x0, 403000 <parse_argv+0x160>
  401bdc:	add	x5, x0, #0x5c8
  401be0:	adrp	x0, 403000 <parse_argv+0x160>
  401be4:	add	x4, x0, #0xe60
  401be8:	mov	w3, #0x32                  	// #50
  401bec:	mov	x2, x1
  401bf0:	ldr	w1, [sp, #120]
  401bf4:	mov	w0, w8
  401bf8:	bl	401530 <log_internal_realm@plt>
  401bfc:	b	4020ac <write_hibernate_location_info+0x658>
  401c00:	ldr	w0, [sp, #120]
  401c04:	cmp	w0, #0x0
  401c08:	cneg	w0, w0, lt  // lt = tstop
  401c0c:	and	w0, w0, #0xff
  401c10:	neg	w0, w0
  401c14:	b	4020ac <write_hibernate_location_info+0x658>
  401c18:	mov	w0, #0x7                   	// #7
  401c1c:	str	w0, [sp, #44]
  401c20:	str	wzr, [sp, #48]
  401c24:	str	wzr, [sp, #52]
  401c28:	ldr	w0, [sp, #52]
  401c2c:	bl	4015f0 <log_get_max_level_realm@plt>
  401c30:	mov	w1, w0
  401c34:	ldr	w0, [sp, #44]
  401c38:	and	w0, w0, #0x7
  401c3c:	cmp	w1, w0
  401c40:	b.lt	401ca0 <write_hibernate_location_info+0x24c>  // b.tstop
  401c44:	ldr	w0, [sp, #52]
  401c48:	lsl	w1, w0, #10
  401c4c:	ldr	w0, [sp, #44]
  401c50:	orr	w8, w1, w0
  401c54:	adrp	x0, 403000 <parse_argv+0x160>
  401c58:	add	x1, x0, #0x543
  401c5c:	ldr	x0, [sp, #24]
  401c60:	ldr	x0, [x0, #16]
  401c64:	ldr	x2, [x0]
  401c68:	ldr	x0, [sp, #24]
  401c6c:	ldr	x0, [x0]
  401c70:	mov	x7, x0
  401c74:	mov	x6, x2
  401c78:	adrp	x0, 403000 <parse_argv+0x160>
  401c7c:	add	x5, x0, #0x618
  401c80:	adrp	x0, 403000 <parse_argv+0x160>
  401c84:	add	x4, x0, #0xe60
  401c88:	mov	w3, #0x35                  	// #53
  401c8c:	mov	x2, x1
  401c90:	ldr	w1, [sp, #48]
  401c94:	mov	w0, w8
  401c98:	bl	401530 <log_internal_realm@plt>
  401c9c:	b	401ca8 <write_hibernate_location_info+0x254>
  401ca0:	ldr	w0, [sp, #48]
  401ca4:	cmp	w0, #0x0
  401ca8:	ldr	x0, [sp, #24]
  401cac:	ldr	x0, [x0, #16]
  401cb0:	ldr	x2, [x0, #8]
  401cb4:	adrp	x0, 403000 <parse_argv+0x160>
  401cb8:	add	x1, x0, #0x650
  401cbc:	mov	x0, x2
  401cc0:	bl	401560 <strcmp@plt>
  401cc4:	cmp	w0, #0x0
  401cc8:	b.ne	401cd4 <write_hibernate_location_info+0x280>  // b.any
  401ccc:	ldr	w0, [sp, #40]
  401cd0:	b	4020ac <write_hibernate_location_info+0x658>
  401cd4:	ldr	x0, [sp, #24]
  401cd8:	ldr	x0, [x0, #16]
  401cdc:	ldr	x2, [x0, #8]
  401ce0:	adrp	x0, 403000 <parse_argv+0x160>
  401ce4:	add	x1, x0, #0x660
  401ce8:	mov	x0, x2
  401cec:	bl	401560 <strcmp@plt>
  401cf0:	cmp	w0, #0x0
  401cf4:	b.eq	401d94 <write_hibernate_location_info+0x340>  // b.none
  401cf8:	mov	w0, #0x7                   	// #7
  401cfc:	str	w0, [sp, #104]
  401d00:	mov	w0, #0x16                  	// #22
  401d04:	movk	w0, #0x4000, lsl #16
  401d08:	str	w0, [sp, #108]
  401d0c:	str	wzr, [sp, #112]
  401d10:	ldr	w0, [sp, #112]
  401d14:	bl	4015f0 <log_get_max_level_realm@plt>
  401d18:	mov	w1, w0
  401d1c:	ldr	w0, [sp, #104]
  401d20:	and	w0, w0, #0x7
  401d24:	cmp	w1, w0
  401d28:	b.lt	401d7c <write_hibernate_location_info+0x328>  // b.tstop
  401d2c:	ldr	w0, [sp, #112]
  401d30:	lsl	w1, w0, #10
  401d34:	ldr	w0, [sp, #104]
  401d38:	orr	w7, w1, w0
  401d3c:	adrp	x0, 403000 <parse_argv+0x160>
  401d40:	add	x1, x0, #0x543
  401d44:	ldr	x0, [sp, #24]
  401d48:	ldr	x0, [x0, #16]
  401d4c:	ldr	x0, [x0, #8]
  401d50:	mov	x6, x0
  401d54:	adrp	x0, 403000 <parse_argv+0x160>
  401d58:	add	x5, x0, #0x668
  401d5c:	adrp	x0, 403000 <parse_argv+0x160>
  401d60:	add	x4, x0, #0xe60
  401d64:	mov	w3, #0x3c                  	// #60
  401d68:	mov	x2, x1
  401d6c:	ldr	w1, [sp, #108]
  401d70:	mov	w0, w7
  401d74:	bl	401530 <log_internal_realm@plt>
  401d78:	b	4020ac <write_hibernate_location_info+0x658>
  401d7c:	ldr	w0, [sp, #108]
  401d80:	cmp	w0, #0x0
  401d84:	cneg	w0, w0, lt  // lt = tstop
  401d88:	and	w0, w0, #0xff
  401d8c:	neg	w0, w0
  401d90:	b	4020ac <write_hibernate_location_info+0x658>
  401d94:	ldr	x0, [sp, #24]
  401d98:	ldr	x0, [x0, #8]
  401d9c:	cmp	x0, #0x0
  401da0:	b.eq	401ef0 <write_hibernate_location_info+0x49c>  // b.none
  401da4:	mov	w1, #0x2                   	// #2
  401da8:	adrp	x0, 403000 <parse_argv+0x160>
  401dac:	add	x0, x0, #0x688
  401db0:	bl	401450 <access@plt>
  401db4:	cmp	w0, #0x0
  401db8:	b.ge	401ef0 <write_hibernate_location_info+0x49c>  // b.tcont
  401dbc:	bl	401470 <__errno_location@plt>
  401dc0:	ldr	w0, [x0]
  401dc4:	cmp	w0, #0x2
  401dc8:	b.ne	401e64 <write_hibernate_location_info+0x410>  // b.any
  401dcc:	mov	w0, #0x7                   	// #7
  401dd0:	str	w0, [sp, #68]
  401dd4:	str	wzr, [sp, #72]
  401dd8:	str	wzr, [sp, #76]
  401ddc:	ldr	w0, [sp, #76]
  401de0:	bl	4015f0 <log_get_max_level_realm@plt>
  401de4:	mov	w1, w0
  401de8:	ldr	w0, [sp, #68]
  401dec:	and	w0, w0, #0x7
  401df0:	cmp	w1, w0
  401df4:	b.lt	401e54 <write_hibernate_location_info+0x400>  // b.tstop
  401df8:	ldr	w0, [sp, #76]
  401dfc:	lsl	w1, w0, #10
  401e00:	ldr	w0, [sp, #68]
  401e04:	orr	w8, w1, w0
  401e08:	adrp	x0, 403000 <parse_argv+0x160>
  401e0c:	add	x1, x0, #0x543
  401e10:	ldr	x0, [sp, #24]
  401e14:	ldr	x0, [x0, #16]
  401e18:	ldr	x2, [x0]
  401e1c:	ldr	x0, [sp, #24]
  401e20:	ldr	x0, [x0, #8]
  401e24:	mov	x7, x0
  401e28:	mov	x6, x2
  401e2c:	adrp	x0, 403000 <parse_argv+0x160>
  401e30:	add	x5, x0, #0x6a8
  401e34:	adrp	x0, 403000 <parse_argv+0x160>
  401e38:	add	x4, x0, #0xe60
  401e3c:	mov	w3, #0x42                  	// #66
  401e40:	mov	x2, x1
  401e44:	ldr	w1, [sp, #72]
  401e48:	mov	w0, w8
  401e4c:	bl	401530 <log_internal_realm@plt>
  401e50:	b	401e5c <write_hibernate_location_info+0x408>
  401e54:	ldr	w0, [sp, #72]
  401e58:	cmp	w0, #0x0
  401e5c:	mov	w0, #0x0                   	// #0
  401e60:	b	4020ac <write_hibernate_location_info+0x658>
  401e64:	mov	w0, #0x7                   	// #7
  401e68:	str	w0, [sp, #56]
  401e6c:	bl	401470 <__errno_location@plt>
  401e70:	ldr	w0, [x0]
  401e74:	str	w0, [sp, #60]
  401e78:	str	wzr, [sp, #64]
  401e7c:	ldr	w0, [sp, #64]
  401e80:	bl	4015f0 <log_get_max_level_realm@plt>
  401e84:	mov	w1, w0
  401e88:	ldr	w0, [sp, #56]
  401e8c:	and	w0, w0, #0x7
  401e90:	cmp	w1, w0
  401e94:	b.lt	401ed8 <write_hibernate_location_info+0x484>  // b.tstop
  401e98:	ldr	w0, [sp, #64]
  401e9c:	lsl	w1, w0, #10
  401ea0:	ldr	w0, [sp, #56]
  401ea4:	orr	w6, w1, w0
  401ea8:	adrp	x0, 403000 <parse_argv+0x160>
  401eac:	add	x1, x0, #0x543
  401eb0:	adrp	x0, 403000 <parse_argv+0x160>
  401eb4:	add	x5, x0, #0x6f0
  401eb8:	adrp	x0, 403000 <parse_argv+0x160>
  401ebc:	add	x4, x0, #0xe60
  401ec0:	mov	w3, #0x47                  	// #71
  401ec4:	mov	x2, x1
  401ec8:	ldr	w1, [sp, #60]
  401ecc:	mov	w0, w6
  401ed0:	bl	401530 <log_internal_realm@plt>
  401ed4:	b	4020ac <write_hibernate_location_info+0x658>
  401ed8:	ldr	w0, [sp, #60]
  401edc:	cmp	w0, #0x0
  401ee0:	cneg	w0, w0, lt  // lt = tstop
  401ee4:	and	w0, w0, #0xff
  401ee8:	neg	w0, w0
  401eec:	b	4020ac <write_hibernate_location_info+0x658>
  401ef0:	ldr	x0, [sp, #24]
  401ef4:	ldr	x0, [x0, #8]
  401ef8:	add	x4, sp, #0x80
  401efc:	mov	x3, x0
  401f00:	adrp	x0, 403000 <parse_argv+0x160>
  401f04:	add	x2, x0, #0x720
  401f08:	mov	x1, #0x16                  	// #22
  401f0c:	mov	x0, x4
  401f10:	bl	4013d0 <snprintf@plt>
  401f14:	cmp	w0, #0x15
  401f18:	cset	w0, hi  // hi = pmore
  401f1c:	and	w0, w0, #0xff
  401f20:	and	x0, x0, #0xff
  401f24:	cmp	x0, #0x0
  401f28:	b.eq	401f54 <write_hibernate_location_info+0x500>  // b.none
  401f2c:	adrp	x0, 403000 <parse_argv+0x160>
  401f30:	add	x1, x0, #0x543
  401f34:	adrp	x0, 403000 <parse_argv+0x160>
  401f38:	add	x4, x0, #0xe40
  401f3c:	mov	w3, #0x4a                  	// #74
  401f40:	mov	x2, x1
  401f44:	adrp	x0, 403000 <parse_argv+0x160>
  401f48:	add	x1, x0, #0x728
  401f4c:	mov	w0, #0x0                   	// #0
  401f50:	bl	401420 <log_assert_failed_realm@plt>
  401f54:	add	x0, sp, #0x80
  401f58:	mov	w2, #0x20                  	// #32
  401f5c:	mov	x1, x0
  401f60:	adrp	x0, 403000 <parse_argv+0x160>
  401f64:	add	x0, x0, #0x688
  401f68:	bl	401870 <write_string_file>
  401f6c:	str	w0, [sp, #40]
  401f70:	ldr	w0, [sp, #40]
  401f74:	cmp	w0, #0x0
  401f78:	b.ge	40201c <write_hibernate_location_info+0x5c8>  // b.tcont
  401f7c:	mov	w0, #0x7                   	// #7
  401f80:	str	w0, [sp, #92]
  401f84:	ldr	w0, [sp, #40]
  401f88:	str	w0, [sp, #96]
  401f8c:	str	wzr, [sp, #100]
  401f90:	ldr	w0, [sp, #100]
  401f94:	bl	4015f0 <log_get_max_level_realm@plt>
  401f98:	mov	w1, w0
  401f9c:	ldr	w0, [sp, #92]
  401fa0:	and	w0, w0, #0x7
  401fa4:	cmp	w1, w0
  401fa8:	b.lt	402004 <write_hibernate_location_info+0x5b0>  // b.tstop
  401fac:	ldr	w0, [sp, #100]
  401fb0:	lsl	w1, w0, #10
  401fb4:	ldr	w0, [sp, #92]
  401fb8:	orr	w8, w1, w0
  401fbc:	adrp	x0, 403000 <parse_argv+0x160>
  401fc0:	add	x1, x0, #0x543
  401fc4:	ldr	x0, [sp, #24]
  401fc8:	ldr	x0, [x0, #16]
  401fcc:	ldr	x0, [x0]
  401fd0:	add	x2, sp, #0x80
  401fd4:	mov	x7, x2
  401fd8:	mov	x6, x0
  401fdc:	adrp	x0, 403000 <parse_argv+0x160>
  401fe0:	add	x5, x0, #0x758
  401fe4:	adrp	x0, 403000 <parse_argv+0x160>
  401fe8:	add	x4, x0, #0xe60
  401fec:	mov	w3, #0x4d                  	// #77
  401ff0:	mov	x2, x1
  401ff4:	ldr	w1, [sp, #96]
  401ff8:	mov	w0, w8
  401ffc:	bl	401530 <log_internal_realm@plt>
  402000:	b	4020ac <write_hibernate_location_info+0x658>
  402004:	ldr	w0, [sp, #96]
  402008:	cmp	w0, #0x0
  40200c:	cneg	w0, w0, lt  // lt = tstop
  402010:	and	w0, w0, #0xff
  402014:	neg	w0, w0
  402018:	b	4020ac <write_hibernate_location_info+0x658>
  40201c:	mov	w0, #0x7                   	// #7
  402020:	str	w0, [sp, #80]
  402024:	str	wzr, [sp, #84]
  402028:	str	wzr, [sp, #88]
  40202c:	ldr	w0, [sp, #88]
  402030:	bl	4015f0 <log_get_max_level_realm@plt>
  402034:	mov	w1, w0
  402038:	ldr	w0, [sp, #80]
  40203c:	and	w0, w0, #0x7
  402040:	cmp	w1, w0
  402044:	b.lt	4020a0 <write_hibernate_location_info+0x64c>  // b.tstop
  402048:	ldr	w0, [sp, #88]
  40204c:	lsl	w1, w0, #10
  402050:	ldr	w0, [sp, #80]
  402054:	orr	w8, w1, w0
  402058:	adrp	x0, 403000 <parse_argv+0x160>
  40205c:	add	x1, x0, #0x543
  402060:	ldr	x0, [sp, #24]
  402064:	ldr	x0, [x0, #16]
  402068:	ldr	x0, [x0]
  40206c:	add	x2, sp, #0x80
  402070:	mov	x7, x2
  402074:	mov	x6, x0
  402078:	adrp	x0, 403000 <parse_argv+0x160>
  40207c:	add	x5, x0, #0x7a8
  402080:	adrp	x0, 403000 <parse_argv+0x160>
  402084:	add	x4, x0, #0xe60
  402088:	mov	w3, #0x50                  	// #80
  40208c:	mov	x2, x1
  402090:	ldr	w1, [sp, #84]
  402094:	mov	w0, w8
  402098:	bl	401530 <log_internal_realm@plt>
  40209c:	b	4020a8 <write_hibernate_location_info+0x654>
  4020a0:	ldr	w0, [sp, #84]
  4020a4:	cmp	w0, #0x0
  4020a8:	mov	w0, #0x0                   	// #0
  4020ac:	mov	w1, w0
  4020b0:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  4020b4:	add	x0, x0, #0xc40
  4020b8:	ldr	x2, [sp, #152]
  4020bc:	ldr	x0, [x0]
  4020c0:	eor	x0, x2, x0
  4020c4:	cmp	x0, #0x0
  4020c8:	b.eq	4020d0 <write_hibernate_location_info+0x67c>  // b.none
  4020cc:	bl	4014a0 <__stack_chk_fail@plt>
  4020d0:	mov	w0, w1
  4020d4:	ldp	x29, x30, [sp], #160
  4020d8:	ret

00000000004020dc <write_mode>:
  4020dc:	stp	x29, x30, [sp, #-64]!
  4020e0:	mov	x29, sp
  4020e4:	str	x0, [sp, #24]
  4020e8:	str	wzr, [sp, #36]
  4020ec:	ldr	x0, [sp, #24]
  4020f0:	str	x0, [sp, #56]
  4020f4:	b	4021d0 <write_mode+0xf4>
  4020f8:	ldr	x0, [sp, #56]
  4020fc:	ldr	x0, [x0]
  402100:	mov	w2, #0x20                  	// #32
  402104:	mov	x1, x0
  402108:	adrp	x0, 403000 <parse_argv+0x160>
  40210c:	add	x0, x0, #0x7f0
  402110:	bl	401870 <write_string_file>
  402114:	str	w0, [sp, #40]
  402118:	ldr	w0, [sp, #40]
  40211c:	cmp	w0, #0x0
  402120:	b.lt	40212c <write_mode+0x50>  // b.tstop
  402124:	mov	w0, #0x0                   	// #0
  402128:	b	4021f0 <write_mode+0x114>
  40212c:	mov	w0, #0x7                   	// #7
  402130:	str	w0, [sp, #44]
  402134:	ldr	w0, [sp, #40]
  402138:	str	w0, [sp, #48]
  40213c:	str	wzr, [sp, #52]
  402140:	ldr	w0, [sp, #52]
  402144:	bl	4015f0 <log_get_max_level_realm@plt>
  402148:	mov	w1, w0
  40214c:	ldr	w0, [sp, #44]
  402150:	and	w0, w0, #0x7
  402154:	cmp	w1, w0
  402158:	b.lt	4021a8 <write_mode+0xcc>  // b.tstop
  40215c:	ldr	w0, [sp, #52]
  402160:	lsl	w1, w0, #10
  402164:	ldr	w0, [sp, #44]
  402168:	orr	w7, w1, w0
  40216c:	adrp	x0, 403000 <parse_argv+0x160>
  402170:	add	x1, x0, #0x543
  402174:	ldr	x0, [sp, #56]
  402178:	ldr	x0, [x0]
  40217c:	mov	x6, x0
  402180:	adrp	x0, 403000 <parse_argv+0x160>
  402184:	add	x5, x0, #0x800
  402188:	adrp	x0, 403000 <parse_argv+0x160>
  40218c:	add	x4, x0, #0xe80
  402190:	mov	w3, #0x60                  	// #96
  402194:	mov	x2, x1
  402198:	ldr	w1, [sp, #48]
  40219c:	mov	w0, w7
  4021a0:	bl	401530 <log_internal_realm@plt>
  4021a4:	b	4021b0 <write_mode+0xd4>
  4021a8:	ldr	w0, [sp, #48]
  4021ac:	cmp	w0, #0x0
  4021b0:	ldr	w0, [sp, #36]
  4021b4:	cmp	w0, #0x0
  4021b8:	b.lt	4021c4 <write_mode+0xe8>  // b.tstop
  4021bc:	ldr	w0, [sp, #40]
  4021c0:	str	w0, [sp, #36]
  4021c4:	ldr	x0, [sp, #56]
  4021c8:	add	x0, x0, #0x8
  4021cc:	str	x0, [sp, #56]
  4021d0:	ldr	x0, [sp, #56]
  4021d4:	cmp	x0, #0x0
  4021d8:	b.eq	4021ec <write_mode+0x110>  // b.none
  4021dc:	ldr	x0, [sp, #56]
  4021e0:	ldr	x0, [x0]
  4021e4:	cmp	x0, #0x0
  4021e8:	b.ne	4020f8 <write_mode+0x1c>  // b.any
  4021ec:	ldr	w0, [sp, #36]
  4021f0:	ldp	x29, x30, [sp], #64
  4021f4:	ret

00000000004021f8 <write_state>:
  4021f8:	stp	x29, x30, [sp, #-64]!
  4021fc:	mov	x29, sp
  402200:	str	x0, [sp, #24]
  402204:	str	x1, [sp, #16]
  402208:	str	wzr, [sp, #36]
  40220c:	ldr	x0, [sp, #16]
  402210:	str	x0, [sp, #56]
  402214:	b	402340 <write_state+0x148>
  402218:	ldr	x0, [sp, #24]
  40221c:	ldr	x3, [x0]
  402220:	ldr	x0, [sp, #56]
  402224:	ldr	x0, [x0]
  402228:	mov	w2, #0x20                  	// #32
  40222c:	mov	x1, x0
  402230:	mov	x0, x3
  402234:	bl	401840 <write_string_stream>
  402238:	str	w0, [sp, #40]
  40223c:	ldr	w0, [sp, #40]
  402240:	cmp	w0, #0x0
  402244:	b.lt	402250 <write_state+0x58>  // b.tstop
  402248:	mov	w0, #0x0                   	// #0
  40224c:	b	402360 <write_state+0x168>
  402250:	mov	w0, #0x7                   	// #7
  402254:	str	w0, [sp, #44]
  402258:	ldr	w0, [sp, #40]
  40225c:	str	w0, [sp, #48]
  402260:	str	wzr, [sp, #52]
  402264:	ldr	w0, [sp, #52]
  402268:	bl	4015f0 <log_get_max_level_realm@plt>
  40226c:	mov	w1, w0
  402270:	ldr	w0, [sp, #44]
  402274:	and	w0, w0, #0x7
  402278:	cmp	w1, w0
  40227c:	b.lt	4022cc <write_state+0xd4>  // b.tstop
  402280:	ldr	w0, [sp, #52]
  402284:	lsl	w1, w0, #10
  402288:	ldr	w0, [sp, #44]
  40228c:	orr	w7, w1, w0
  402290:	adrp	x0, 403000 <parse_argv+0x160>
  402294:	add	x1, x0, #0x543
  402298:	ldr	x0, [sp, #56]
  40229c:	ldr	x0, [x0]
  4022a0:	mov	x6, x0
  4022a4:	adrp	x0, 403000 <parse_argv+0x160>
  4022a8:	add	x5, x0, #0x830
  4022ac:	adrp	x0, 403000 <parse_argv+0x160>
  4022b0:	add	x4, x0, #0xe90
  4022b4:	mov	w3, #0x72                  	// #114
  4022b8:	mov	x2, x1
  4022bc:	ldr	w1, [sp, #48]
  4022c0:	mov	w0, w7
  4022c4:	bl	401530 <log_internal_realm@plt>
  4022c8:	b	4022d4 <write_state+0xdc>
  4022cc:	ldr	w0, [sp, #48]
  4022d0:	cmp	w0, #0x0
  4022d4:	ldr	w0, [sp, #36]
  4022d8:	cmp	w0, #0x0
  4022dc:	b.lt	4022e8 <write_state+0xf0>  // b.tstop
  4022e0:	ldr	w0, [sp, #40]
  4022e4:	str	w0, [sp, #36]
  4022e8:	ldr	x0, [sp, #24]
  4022ec:	ldr	x0, [x0]
  4022f0:	bl	401540 <fclose@plt>
  4022f4:	adrp	x0, 403000 <parse_argv+0x160>
  4022f8:	add	x1, x0, #0x860
  4022fc:	adrp	x0, 403000 <parse_argv+0x160>
  402300:	add	x0, x0, #0x868
  402304:	bl	4015d0 <fopen64@plt>
  402308:	mov	x1, x0
  40230c:	ldr	x0, [sp, #24]
  402310:	str	x1, [x0]
  402314:	ldr	x0, [sp, #24]
  402318:	ldr	x0, [x0]
  40231c:	cmp	x0, #0x0
  402320:	b.ne	402334 <write_state+0x13c>  // b.any
  402324:	bl	401470 <__errno_location@plt>
  402328:	ldr	w0, [x0]
  40232c:	neg	w0, w0
  402330:	b	402360 <write_state+0x168>
  402334:	ldr	x0, [sp, #56]
  402338:	add	x0, x0, #0x8
  40233c:	str	x0, [sp, #56]
  402340:	ldr	x0, [sp, #56]
  402344:	cmp	x0, #0x0
  402348:	b.eq	40235c <write_state+0x164>  // b.none
  40234c:	ldr	x0, [sp, #56]
  402350:	ldr	x0, [x0]
  402354:	cmp	x0, #0x0
  402358:	b.ne	402218 <write_state+0x20>  // b.any
  40235c:	ldr	w0, [sp, #36]
  402360:	ldp	x29, x30, [sp], #64
  402364:	ret

0000000000402368 <execute>:
  402368:	sub	sp, sp, #0xa0
  40236c:	stp	x29, x30, [sp, #16]
  402370:	add	x29, sp, #0x10
  402374:	str	x19, [sp, #32]
  402378:	str	x0, [sp, #56]
  40237c:	str	x1, [sp, #48]
  402380:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  402384:	add	x0, x0, #0xc40
  402388:	ldr	x1, [x0]
  40238c:	str	x1, [sp, #152]
  402390:	mov	x1, #0x0                   	// #0
  402394:	add	x0, sp, #0xa8
  402398:	sub	x0, x0, #0x30
  40239c:	str	xzr, [x0]
  4023a0:	add	x0, sp, #0xa8
  4023a4:	sub	x0, x0, #0x30
  4023a8:	adrp	x1, 403000 <parse_argv+0x160>
  4023ac:	add	x1, x1, #0x880
  4023b0:	str	x1, [x0, #8]
  4023b4:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4023b8:	add	x0, x0, #0x20
  4023bc:	ldr	x1, [x0]
  4023c0:	add	x0, sp, #0xa8
  4023c4:	sub	x0, x0, #0x30
  4023c8:	str	x1, [x0, #16]
  4023cc:	add	x0, sp, #0xa8
  4023d0:	sub	x0, x0, #0x30
  4023d4:	str	xzr, [x0, #24]
  4023d8:	str	xzr, [sp, #104]
  4023dc:	str	xzr, [sp, #112]
  4023e0:	adrp	x0, 403000 <parse_argv+0x160>
  4023e4:	add	x1, x0, #0x860
  4023e8:	adrp	x0, 403000 <parse_argv+0x160>
  4023ec:	add	x0, x0, #0x868
  4023f0:	bl	4015d0 <fopen64@plt>
  4023f4:	str	x0, [sp, #104]
  4023f8:	ldr	x0, [sp, #104]
  4023fc:	cmp	x0, #0x0
  402400:	b.ne	402494 <execute+0x12c>  // b.any
  402404:	mov	w0, #0x3                   	// #3
  402408:	str	w0, [sp, #92]
  40240c:	bl	401470 <__errno_location@plt>
  402410:	ldr	w0, [x0]
  402414:	str	w0, [sp, #96]
  402418:	str	wzr, [sp, #100]
  40241c:	ldr	w0, [sp, #100]
  402420:	bl	4015f0 <log_get_max_level_realm@plt>
  402424:	mov	w1, w0
  402428:	ldr	w0, [sp, #92]
  40242c:	and	w0, w0, #0x7
  402430:	cmp	w1, w0
  402434:	b.lt	40247c <execute+0x114>  // b.tstop
  402438:	ldr	w0, [sp, #100]
  40243c:	lsl	w1, w0, #10
  402440:	ldr	w0, [sp, #92]
  402444:	orr	w6, w1, w0
  402448:	adrp	x0, 403000 <parse_argv+0x160>
  40244c:	add	x1, x0, #0x543
  402450:	adrp	x0, 403000 <parse_argv+0x160>
  402454:	add	x5, x0, #0x888
  402458:	adrp	x0, 403000 <parse_argv+0x160>
  40245c:	add	x4, x0, #0xea0
  402460:	mov	w3, #0x93                  	// #147
  402464:	mov	x2, x1
  402468:	ldr	w1, [sp, #96]
  40246c:	mov	w0, w6
  402470:	bl	401530 <log_internal_realm@plt>
  402474:	mov	w19, w0
  402478:	b	4027b8 <execute+0x450>
  40247c:	ldr	w0, [sp, #96]
  402480:	cmp	w0, #0x0
  402484:	cneg	w0, w0, lt  // lt = tstop
  402488:	and	w0, w0, #0xff
  40248c:	neg	w19, w0
  402490:	b	4027b8 <execute+0x450>
  402494:	ldr	x0, [sp, #104]
  402498:	mov	x3, #0x0                   	// #0
  40249c:	mov	w2, #0x2                   	// #2
  4024a0:	mov	x1, #0x0                   	// #0
  4024a4:	bl	401550 <setvbuf@plt>
  4024a8:	ldr	x0, [sp, #56]
  4024ac:	bl	4019ec <strv_isempty>
  4024b0:	and	w0, w0, #0xff
  4024b4:	eor	w0, w0, #0x1
  4024b8:	and	w0, w0, #0xff
  4024bc:	cmp	w0, #0x0
  4024c0:	b.eq	402638 <execute+0x2d0>  // b.none
  4024c4:	add	x0, sp, #0x70
  4024c8:	bl	401360 <find_hibernate_location@plt>
  4024cc:	str	w0, [sp, #64]
  4024d0:	ldr	w0, [sp, #64]
  4024d4:	cmp	w0, #0x0
  4024d8:	b.ge	4024e4 <execute+0x17c>  // b.tcont
  4024dc:	ldr	w19, [sp, #64]
  4024e0:	b	4027b8 <execute+0x450>
  4024e4:	ldr	w0, [sp, #64]
  4024e8:	cmp	w0, #0x0
  4024ec:	b.ne	402594 <execute+0x22c>  // b.any
  4024f0:	ldr	x0, [sp, #112]
  4024f4:	bl	401a54 <write_hibernate_location_info>
  4024f8:	str	w0, [sp, #64]
  4024fc:	ldr	w0, [sp, #64]
  402500:	cmp	w0, #0x0
  402504:	b.ge	402594 <execute+0x22c>  // b.tcont
  402508:	mov	w0, #0x3                   	// #3
  40250c:	str	w0, [sp, #68]
  402510:	ldr	w0, [sp, #64]
  402514:	str	w0, [sp, #72]
  402518:	str	wzr, [sp, #76]
  40251c:	ldr	w0, [sp, #76]
  402520:	bl	4015f0 <log_get_max_level_realm@plt>
  402524:	mov	w1, w0
  402528:	ldr	w0, [sp, #68]
  40252c:	and	w0, w0, #0x7
  402530:	cmp	w1, w0
  402534:	b.lt	40257c <execute+0x214>  // b.tstop
  402538:	ldr	w0, [sp, #76]
  40253c:	lsl	w1, w0, #10
  402540:	ldr	w0, [sp, #68]
  402544:	orr	w6, w1, w0
  402548:	adrp	x0, 403000 <parse_argv+0x160>
  40254c:	add	x1, x0, #0x543
  402550:	adrp	x0, 403000 <parse_argv+0x160>
  402554:	add	x5, x0, #0x8b0
  402558:	adrp	x0, 403000 <parse_argv+0x160>
  40255c:	add	x4, x0, #0xea0
  402560:	mov	w3, #0x9f                  	// #159
  402564:	mov	x2, x1
  402568:	ldr	w1, [sp, #72]
  40256c:	mov	w0, w6
  402570:	bl	401530 <log_internal_realm@plt>
  402574:	mov	w19, w0
  402578:	b	4027b8 <execute+0x450>
  40257c:	ldr	w0, [sp, #72]
  402580:	cmp	w0, #0x0
  402584:	cneg	w0, w0, lt  // lt = tstop
  402588:	and	w0, w0, #0xff
  40258c:	neg	w19, w0
  402590:	b	4027b8 <execute+0x450>
  402594:	ldr	x0, [sp, #56]
  402598:	bl	4020dc <write_mode>
  40259c:	str	w0, [sp, #64]
  4025a0:	ldr	w0, [sp, #64]
  4025a4:	cmp	w0, #0x0
  4025a8:	b.ge	402638 <execute+0x2d0>  // b.tcont
  4025ac:	mov	w0, #0x3                   	// #3
  4025b0:	str	w0, [sp, #80]
  4025b4:	ldr	w0, [sp, #64]
  4025b8:	str	w0, [sp, #84]
  4025bc:	str	wzr, [sp, #88]
  4025c0:	ldr	w0, [sp, #88]
  4025c4:	bl	4015f0 <log_get_max_level_realm@plt>
  4025c8:	mov	w1, w0
  4025cc:	ldr	w0, [sp, #80]
  4025d0:	and	w0, w0, #0x7
  4025d4:	cmp	w1, w0
  4025d8:	b.lt	402620 <execute+0x2b8>  // b.tstop
  4025dc:	ldr	w0, [sp, #88]
  4025e0:	lsl	w1, w0, #10
  4025e4:	ldr	w0, [sp, #80]
  4025e8:	orr	w6, w1, w0
  4025ec:	adrp	x0, 403000 <parse_argv+0x160>
  4025f0:	add	x1, x0, #0x543
  4025f4:	adrp	x0, 403000 <parse_argv+0x160>
  4025f8:	add	x5, x0, #0x8d8
  4025fc:	adrp	x0, 403000 <parse_argv+0x160>
  402600:	add	x4, x0, #0xea0
  402604:	mov	w3, #0xa4                  	// #164
  402608:	mov	x2, x1
  40260c:	ldr	w1, [sp, #84]
  402610:	mov	w0, w6
  402614:	bl	401530 <log_internal_realm@plt>
  402618:	mov	w19, w0
  40261c:	b	4027b8 <execute+0x450>
  402620:	ldr	w0, [sp, #84]
  402624:	cmp	w0, #0x0
  402628:	cneg	w0, w0, lt  // lt = tstop
  40262c:	and	w0, w0, #0xff
  402630:	neg	w19, w0
  402634:	b	4027b8 <execute+0x450>
  402638:	add	x0, sp, #0x78
  40263c:	mov	w6, #0x3                   	// #3
  402640:	mov	x5, #0x0                   	// #0
  402644:	mov	x4, x0
  402648:	mov	x3, #0x0                   	// #0
  40264c:	mov	x2, #0x0                   	// #0
  402650:	mov	x1, #0x4a80                	// #19072
  402654:	movk	x1, #0x55d, lsl #16
  402658:	adrp	x0, 403000 <parse_argv+0x160>
  40265c:	add	x0, x0, #0xea8
  402660:	bl	4015c0 <execute_directories@plt>
  402664:	adrp	x0, 403000 <parse_argv+0x160>
  402668:	add	x1, x0, #0x543
  40266c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402670:	add	x0, x0, #0x20
  402674:	ldr	x0, [x0]
  402678:	str	xzr, [sp, #8]
  40267c:	str	x0, [sp]
  402680:	adrp	x0, 403000 <parse_argv+0x160>
  402684:	add	x7, x0, #0x908
  402688:	adrp	x0, 403000 <parse_argv+0x160>
  40268c:	add	x6, x0, #0x918
  402690:	adrp	x0, 403000 <parse_argv+0x160>
  402694:	add	x5, x0, #0x938
  402698:	adrp	x0, 403000 <parse_argv+0x160>
  40269c:	add	x4, x0, #0xea0
  4026a0:	mov	w3, #0xa9                  	// #169
  4026a4:	mov	x2, x1
  4026a8:	mov	w1, #0x0                   	// #0
  4026ac:	mov	w0, #0x6                   	// #6
  4026b0:	bl	401510 <log_struct_internal@plt>
  4026b4:	add	x0, sp, #0x68
  4026b8:	ldr	x1, [sp, #48]
  4026bc:	bl	4021f8 <write_state>
  4026c0:	str	w0, [sp, #64]
  4026c4:	ldr	w0, [sp, #64]
  4026c8:	cmp	w0, #0x0
  4026cc:	b.ge	402724 <execute+0x3bc>  // b.tcont
  4026d0:	adrp	x0, 403000 <parse_argv+0x160>
  4026d4:	add	x1, x0, #0x543
  4026d8:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4026dc:	add	x0, x0, #0x20
  4026e0:	ldr	x0, [x0]
  4026e4:	str	xzr, [sp, #8]
  4026e8:	str	x0, [sp]
  4026ec:	adrp	x0, 403000 <parse_argv+0x160>
  4026f0:	add	x7, x0, #0x908
  4026f4:	adrp	x0, 403000 <parse_argv+0x160>
  4026f8:	add	x6, x0, #0x968
  4026fc:	adrp	x0, 403000 <parse_argv+0x160>
  402700:	add	x5, x0, #0x9a8
  402704:	adrp	x0, 403000 <parse_argv+0x160>
  402708:	add	x4, x0, #0xea0
  40270c:	mov	w3, #0xb0                  	// #176
  402710:	mov	x2, x1
  402714:	ldr	w1, [sp, #64]
  402718:	mov	w0, #0x3                   	// #3
  40271c:	bl	401510 <log_struct_internal@plt>
  402720:	b	402774 <execute+0x40c>
  402724:	adrp	x0, 403000 <parse_argv+0x160>
  402728:	add	x1, x0, #0x543
  40272c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402730:	add	x0, x0, #0x20
  402734:	ldr	x0, [x0]
  402738:	str	xzr, [sp, #8]
  40273c:	str	x0, [sp]
  402740:	adrp	x0, 403000 <parse_argv+0x160>
  402744:	add	x7, x0, #0x908
  402748:	adrp	x0, 403000 <parse_argv+0x160>
  40274c:	add	x6, x0, #0x9d8
  402750:	adrp	x0, 403000 <parse_argv+0x160>
  402754:	add	x5, x0, #0x9a8
  402758:	adrp	x0, 403000 <parse_argv+0x160>
  40275c:	add	x4, x0, #0xea0
  402760:	mov	w3, #0xb5                  	// #181
  402764:	mov	x2, x1
  402768:	mov	w1, #0x0                   	// #0
  40276c:	mov	w0, #0x6                   	// #6
  402770:	bl	401510 <log_struct_internal@plt>
  402774:	add	x0, sp, #0xa8
  402778:	sub	x0, x0, #0x30
  40277c:	adrp	x1, 403000 <parse_argv+0x160>
  402780:	add	x1, x1, #0x9f0
  402784:	str	x1, [x0, #8]
  402788:	add	x0, sp, #0x78
  40278c:	mov	w6, #0x3                   	// #3
  402790:	mov	x5, #0x0                   	// #0
  402794:	mov	x4, x0
  402798:	mov	x3, #0x0                   	// #0
  40279c:	mov	x2, #0x0                   	// #0
  4027a0:	mov	x1, #0x4a80                	// #19072
  4027a4:	movk	x1, #0x55d, lsl #16
  4027a8:	adrp	x0, 403000 <parse_argv+0x160>
  4027ac:	add	x0, x0, #0xea8
  4027b0:	bl	4015c0 <execute_directories@plt>
  4027b4:	ldr	w19, [sp, #64]
  4027b8:	add	x0, sp, #0x70
  4027bc:	bl	4019b8 <hibernate_location_freep>
  4027c0:	add	x0, sp, #0x68
  4027c4:	bl	40181c <fclosep>
  4027c8:	mov	w1, w19
  4027cc:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  4027d0:	add	x0, x0, #0xc40
  4027d4:	ldr	x2, [sp, #152]
  4027d8:	ldr	x0, [x0]
  4027dc:	eor	x0, x2, x0
  4027e0:	cmp	x0, #0x0
  4027e4:	b.eq	4027ec <execute+0x484>  // b.none
  4027e8:	bl	4014a0 <__stack_chk_fail@plt>
  4027ec:	mov	w0, w1
  4027f0:	ldr	x19, [sp, #32]
  4027f4:	ldp	x29, x30, [sp, #16]
  4027f8:	add	sp, sp, #0xa0
  4027fc:	ret

0000000000402800 <execute_s2h>:
  402800:	stp	x29, x30, [sp, #-256]!
  402804:	mov	x29, sp
  402808:	stp	x19, x20, [sp, #16]
  40280c:	str	x0, [sp, #40]
  402810:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  402814:	add	x0, x0, #0xc40
  402818:	ldr	x1, [x0]
  40281c:	str	x1, [sp, #248]
  402820:	mov	x1, #0x0                   	// #0
  402824:	mov	w0, #0xffffffff            	// #-1
  402828:	str	w0, [sp, #52]
  40282c:	stp	xzr, xzr, [sp, #152]
  402830:	stp	xzr, xzr, [sp, #168]
  402834:	ldr	x0, [sp, #40]
  402838:	cmp	x0, #0x0
  40283c:	cset	w0, eq  // eq = none
  402840:	and	w0, w0, #0xff
  402844:	and	x0, x0, #0xff
  402848:	cmp	x0, #0x0
  40284c:	b.eq	402878 <execute_s2h+0x78>  // b.none
  402850:	adrp	x0, 403000 <parse_argv+0x160>
  402854:	add	x1, x0, #0x543
  402858:	adrp	x0, 403000 <parse_argv+0x160>
  40285c:	add	x4, x0, #0xeb8
  402860:	mov	w3, #0xc7                  	// #199
  402864:	mov	x2, x1
  402868:	adrp	x0, 403000 <parse_argv+0x160>
  40286c:	add	x1, x0, #0x9f8
  402870:	mov	w0, #0x0                   	// #0
  402874:	bl	401420 <log_assert_failed_realm@plt>
  402878:	mov	w1, #0x800                 	// #2048
  40287c:	movk	w1, #0x8, lsl #16
  402880:	mov	w0, #0x9                   	// #9
  402884:	bl	401340 <timerfd_create@plt>
  402888:	str	w0, [sp, #52]
  40288c:	ldr	w0, [sp, #52]
  402890:	cmp	w0, #0x0
  402894:	b.ge	402928 <execute_s2h+0x128>  // b.tcont
  402898:	mov	w0, #0x3                   	// #3
  40289c:	str	w0, [sp, #132]
  4028a0:	bl	401470 <__errno_location@plt>
  4028a4:	ldr	w0, [x0]
  4028a8:	str	w0, [sp, #136]
  4028ac:	str	wzr, [sp, #140]
  4028b0:	ldr	w0, [sp, #140]
  4028b4:	bl	4015f0 <log_get_max_level_realm@plt>
  4028b8:	mov	w1, w0
  4028bc:	ldr	w0, [sp, #132]
  4028c0:	and	w0, w0, #0x7
  4028c4:	cmp	w1, w0
  4028c8:	b.lt	402910 <execute_s2h+0x110>  // b.tstop
  4028cc:	ldr	w0, [sp, #140]
  4028d0:	lsl	w1, w0, #10
  4028d4:	ldr	w0, [sp, #132]
  4028d8:	orr	w6, w1, w0
  4028dc:	adrp	x0, 403000 <parse_argv+0x160>
  4028e0:	add	x1, x0, #0x543
  4028e4:	adrp	x0, 403000 <parse_argv+0x160>
  4028e8:	add	x5, x0, #0xa08
  4028ec:	adrp	x0, 403000 <parse_argv+0x160>
  4028f0:	add	x4, x0, #0xec8
  4028f4:	mov	w3, #0xcb                  	// #203
  4028f8:	mov	x2, x1
  4028fc:	ldr	w1, [sp, #136]
  402900:	mov	w0, w6
  402904:	bl	401530 <log_internal_realm@plt>
  402908:	mov	w19, w0
  40290c:	b	402d8c <execute_s2h+0x58c>
  402910:	ldr	w0, [sp, #136]
  402914:	cmp	w0, #0x0
  402918:	cneg	w0, w0, lt  // lt = tstop
  40291c:	and	w0, w0, #0xff
  402920:	neg	w19, w0
  402924:	b	402d8c <execute_s2h+0x58c>
  402928:	mov	w0, #0x7                   	// #7
  40292c:	str	w0, [sp, #56]
  402930:	str	wzr, [sp, #60]
  402934:	str	wzr, [sp, #64]
  402938:	ldr	w0, [sp, #64]
  40293c:	bl	4015f0 <log_get_max_level_realm@plt>
  402940:	mov	w1, w0
  402944:	ldr	w0, [sp, #56]
  402948:	and	w0, w0, #0x7
  40294c:	cmp	w1, w0
  402950:	b.lt	4029b8 <execute_s2h+0x1b8>  // b.tstop
  402954:	ldr	w0, [sp, #64]
  402958:	lsl	w1, w0, #10
  40295c:	ldr	w0, [sp, #56]
  402960:	orr	w19, w1, w0
  402964:	adrp	x0, 403000 <parse_argv+0x160>
  402968:	add	x20, x0, #0x543
  40296c:	ldr	x0, [sp, #40]
  402970:	ldr	x1, [x0, #56]
  402974:	add	x0, sp, #0xb8
  402978:	mov	x3, #0x4240                	// #16960
  40297c:	movk	x3, #0xf, lsl #16
  402980:	mov	x2, x1
  402984:	mov	x1, #0x40                  	// #64
  402988:	bl	401380 <format_timespan@plt>
  40298c:	mov	x6, x0
  402990:	adrp	x0, 403000 <parse_argv+0x160>
  402994:	add	x5, x0, #0xa28
  402998:	adrp	x0, 403000 <parse_argv+0x160>
  40299c:	add	x4, x0, #0xec8
  4029a0:	mov	w3, #0xcd                  	// #205
  4029a4:	mov	x2, x20
  4029a8:	ldr	w1, [sp, #60]
  4029ac:	mov	w0, w19
  4029b0:	bl	401530 <log_internal_realm@plt>
  4029b4:	b	4029c0 <execute_s2h+0x1c0>
  4029b8:	ldr	w0, [sp, #60]
  4029bc:	cmp	w0, #0x0
  4029c0:	ldr	x0, [sp, #40]
  4029c4:	ldr	x1, [x0, #56]
  4029c8:	add	x0, sp, #0x98
  4029cc:	add	x0, x0, #0x10
  4029d0:	bl	4013e0 <timespec_store@plt>
  4029d4:	ldr	w0, [sp, #52]
  4029d8:	add	x1, sp, #0x98
  4029dc:	mov	x3, #0x0                   	// #0
  4029e0:	mov	x2, x1
  4029e4:	mov	w1, #0x0                   	// #0
  4029e8:	bl	401520 <timerfd_settime@plt>
  4029ec:	str	w0, [sp, #68]
  4029f0:	ldr	w0, [sp, #68]
  4029f4:	cmp	w0, #0x0
  4029f8:	b.ge	402a8c <execute_s2h+0x28c>  // b.tcont
  4029fc:	mov	w0, #0x3                   	// #3
  402a00:	str	w0, [sp, #120]
  402a04:	bl	401470 <__errno_location@plt>
  402a08:	ldr	w0, [x0]
  402a0c:	str	w0, [sp, #124]
  402a10:	str	wzr, [sp, #128]
  402a14:	ldr	w0, [sp, #128]
  402a18:	bl	4015f0 <log_get_max_level_realm@plt>
  402a1c:	mov	w1, w0
  402a20:	ldr	w0, [sp, #120]
  402a24:	and	w0, w0, #0x7
  402a28:	cmp	w1, w0
  402a2c:	b.lt	402a74 <execute_s2h+0x274>  // b.tstop
  402a30:	ldr	w0, [sp, #128]
  402a34:	lsl	w1, w0, #10
  402a38:	ldr	w0, [sp, #120]
  402a3c:	orr	w6, w1, w0
  402a40:	adrp	x0, 403000 <parse_argv+0x160>
  402a44:	add	x1, x0, #0x543
  402a48:	adrp	x0, 403000 <parse_argv+0x160>
  402a4c:	add	x5, x0, #0xa48
  402a50:	adrp	x0, 403000 <parse_argv+0x160>
  402a54:	add	x4, x0, #0xec8
  402a58:	mov	w3, #0xd4                  	// #212
  402a5c:	mov	x2, x1
  402a60:	ldr	w1, [sp, #124]
  402a64:	mov	w0, w6
  402a68:	bl	401530 <log_internal_realm@plt>
  402a6c:	mov	w19, w0
  402a70:	b	402d8c <execute_s2h+0x58c>
  402a74:	ldr	w0, [sp, #124]
  402a78:	cmp	w0, #0x0
  402a7c:	cneg	w0, w0, lt  // lt = tstop
  402a80:	and	w0, w0, #0xff
  402a84:	neg	w19, w0
  402a88:	b	402d8c <execute_s2h+0x58c>
  402a8c:	ldr	x0, [sp, #40]
  402a90:	ldr	x2, [x0, #8]
  402a94:	ldr	x0, [sp, #40]
  402a98:	ldr	x0, [x0, #16]
  402a9c:	mov	x1, x0
  402aa0:	mov	x0, x2
  402aa4:	bl	402368 <execute>
  402aa8:	str	w0, [sp, #68]
  402aac:	ldr	w0, [sp, #68]
  402ab0:	cmp	w0, #0x0
  402ab4:	b.ge	402ac0 <execute_s2h+0x2c0>  // b.tcont
  402ab8:	ldr	w19, [sp, #68]
  402abc:	b	402d8c <execute_s2h+0x58c>
  402ac0:	ldr	w0, [sp, #52]
  402ac4:	str	xzr, [sp, #144]
  402ac8:	str	w0, [sp, #144]
  402acc:	mov	w0, #0x1                   	// #1
  402ad0:	strh	w0, [sp, #148]
  402ad4:	add	x0, sp, #0x90
  402ad8:	mov	w2, #0x0                   	// #0
  402adc:	mov	x1, #0x1                   	// #1
  402ae0:	bl	4014f0 <poll@plt>
  402ae4:	str	w0, [sp, #68]
  402ae8:	ldr	w0, [sp, #68]
  402aec:	cmp	w0, #0x0
  402af0:	b.ge	402b84 <execute_s2h+0x384>  // b.tcont
  402af4:	mov	w0, #0x3                   	// #3
  402af8:	str	w0, [sp, #108]
  402afc:	bl	401470 <__errno_location@plt>
  402b00:	ldr	w0, [x0]
  402b04:	str	w0, [sp, #112]
  402b08:	str	wzr, [sp, #116]
  402b0c:	ldr	w0, [sp, #116]
  402b10:	bl	4015f0 <log_get_max_level_realm@plt>
  402b14:	mov	w1, w0
  402b18:	ldr	w0, [sp, #108]
  402b1c:	and	w0, w0, #0x7
  402b20:	cmp	w1, w0
  402b24:	b.lt	402b6c <execute_s2h+0x36c>  // b.tstop
  402b28:	ldr	w0, [sp, #116]
  402b2c:	lsl	w1, w0, #10
  402b30:	ldr	w0, [sp, #108]
  402b34:	orr	w6, w1, w0
  402b38:	adrp	x0, 403000 <parse_argv+0x160>
  402b3c:	add	x1, x0, #0x543
  402b40:	adrp	x0, 403000 <parse_argv+0x160>
  402b44:	add	x5, x0, #0xa70
  402b48:	adrp	x0, 403000 <parse_argv+0x160>
  402b4c:	add	x4, x0, #0xec8
  402b50:	mov	w3, #0xe0                  	// #224
  402b54:	mov	x2, x1
  402b58:	ldr	w1, [sp, #112]
  402b5c:	mov	w0, w6
  402b60:	bl	401530 <log_internal_realm@plt>
  402b64:	mov	w19, w0
  402b68:	b	402d8c <execute_s2h+0x58c>
  402b6c:	ldr	w0, [sp, #112]
  402b70:	cmp	w0, #0x0
  402b74:	cneg	w0, w0, lt  // lt = tstop
  402b78:	and	w0, w0, #0xff
  402b7c:	neg	w19, w0
  402b80:	b	402d8c <execute_s2h+0x58c>
  402b84:	ldr	w0, [sp, #52]
  402b88:	bl	401400 <safe_close@plt>
  402b8c:	str	w0, [sp, #52]
  402b90:	ldrsh	w0, [sp, #150]
  402b94:	and	w0, w0, #0x1
  402b98:	cmp	w0, #0x0
  402b9c:	b.ne	402ba8 <execute_s2h+0x3a8>  // b.any
  402ba0:	mov	w19, #0x0                   	// #0
  402ba4:	b	402d8c <execute_s2h+0x58c>
  402ba8:	mov	w0, #0x7                   	// #7
  402bac:	str	w0, [sp, #72]
  402bb0:	str	wzr, [sp, #76]
  402bb4:	str	wzr, [sp, #80]
  402bb8:	ldr	w0, [sp, #80]
  402bbc:	bl	4015f0 <log_get_max_level_realm@plt>
  402bc0:	mov	w1, w0
  402bc4:	ldr	w0, [sp, #72]
  402bc8:	and	w0, w0, #0x7
  402bcc:	cmp	w1, w0
  402bd0:	b.lt	402c38 <execute_s2h+0x438>  // b.tstop
  402bd4:	ldr	w0, [sp, #80]
  402bd8:	lsl	w1, w0, #10
  402bdc:	ldr	w0, [sp, #72]
  402be0:	orr	w19, w1, w0
  402be4:	adrp	x0, 403000 <parse_argv+0x160>
  402be8:	add	x20, x0, #0x543
  402bec:	ldr	x0, [sp, #40]
  402bf0:	ldr	x1, [x0, #56]
  402bf4:	add	x0, sp, #0xb8
  402bf8:	mov	x3, #0x4240                	// #16960
  402bfc:	movk	x3, #0xf, lsl #16
  402c00:	mov	x2, x1
  402c04:	mov	x1, #0x40                  	// #64
  402c08:	bl	401380 <format_timespan@plt>
  402c0c:	mov	x6, x0
  402c10:	adrp	x0, 403000 <parse_argv+0x160>
  402c14:	add	x5, x0, #0xa90
  402c18:	adrp	x0, 403000 <parse_argv+0x160>
  402c1c:	add	x4, x0, #0xec8
  402c20:	mov	w3, #0xe8                  	// #232
  402c24:	mov	x2, x20
  402c28:	ldr	w1, [sp, #76]
  402c2c:	mov	w0, w19
  402c30:	bl	401530 <log_internal_realm@plt>
  402c34:	b	402c40 <execute_s2h+0x440>
  402c38:	ldr	w0, [sp, #76]
  402c3c:	cmp	w0, #0x0
  402c40:	ldr	x0, [sp, #40]
  402c44:	ldr	x2, [x0, #24]
  402c48:	ldr	x0, [sp, #40]
  402c4c:	ldr	x0, [x0, #32]
  402c50:	mov	x1, x0
  402c54:	mov	x0, x2
  402c58:	bl	402368 <execute>
  402c5c:	str	w0, [sp, #68]
  402c60:	ldr	w0, [sp, #68]
  402c64:	cmp	w0, #0x0
  402c68:	b.ge	402d88 <execute_s2h+0x588>  // b.tcont
  402c6c:	mov	w0, #0x5                   	// #5
  402c70:	str	w0, [sp, #84]
  402c74:	str	wzr, [sp, #88]
  402c78:	str	wzr, [sp, #92]
  402c7c:	ldr	w0, [sp, #92]
  402c80:	bl	4015f0 <log_get_max_level_realm@plt>
  402c84:	mov	w1, w0
  402c88:	ldr	w0, [sp, #84]
  402c8c:	and	w0, w0, #0x7
  402c90:	cmp	w1, w0
  402c94:	b.lt	402cd8 <execute_s2h+0x4d8>  // b.tstop
  402c98:	ldr	w0, [sp, #92]
  402c9c:	lsl	w1, w0, #10
  402ca0:	ldr	w0, [sp, #84]
  402ca4:	orr	w6, w1, w0
  402ca8:	adrp	x0, 403000 <parse_argv+0x160>
  402cac:	add	x1, x0, #0x543
  402cb0:	adrp	x0, 403000 <parse_argv+0x160>
  402cb4:	add	x5, x0, #0xac8
  402cb8:	adrp	x0, 403000 <parse_argv+0x160>
  402cbc:	add	x4, x0, #0xec8
  402cc0:	mov	w3, #0xed                  	// #237
  402cc4:	mov	x2, x1
  402cc8:	ldr	w1, [sp, #88]
  402ccc:	mov	w0, w6
  402cd0:	bl	401530 <log_internal_realm@plt>
  402cd4:	b	402ce0 <execute_s2h+0x4e0>
  402cd8:	ldr	w0, [sp, #88]
  402cdc:	cmp	w0, #0x0
  402ce0:	ldr	x0, [sp, #40]
  402ce4:	ldr	x2, [x0, #8]
  402ce8:	ldr	x0, [sp, #40]
  402cec:	ldr	x0, [x0, #16]
  402cf0:	mov	x1, x0
  402cf4:	mov	x0, x2
  402cf8:	bl	402368 <execute>
  402cfc:	str	w0, [sp, #68]
  402d00:	ldr	w0, [sp, #68]
  402d04:	cmp	w0, #0x0
  402d08:	b.ge	402d88 <execute_s2h+0x588>  // b.tcont
  402d0c:	mov	w0, #0x5                   	// #5
  402d10:	str	w0, [sp, #96]
  402d14:	str	wzr, [sp, #100]
  402d18:	str	wzr, [sp, #104]
  402d1c:	ldr	w0, [sp, #104]
  402d20:	bl	4015f0 <log_get_max_level_realm@plt>
  402d24:	mov	w1, w0
  402d28:	ldr	w0, [sp, #96]
  402d2c:	and	w0, w0, #0x7
  402d30:	cmp	w1, w0
  402d34:	b.lt	402d78 <execute_s2h+0x578>  // b.tstop
  402d38:	ldr	w0, [sp, #104]
  402d3c:	lsl	w1, w0, #10
  402d40:	ldr	w0, [sp, #96]
  402d44:	orr	w6, w1, w0
  402d48:	adrp	x0, 403000 <parse_argv+0x160>
  402d4c:	add	x1, x0, #0x543
  402d50:	adrp	x0, 403000 <parse_argv+0x160>
  402d54:	add	x5, x0, #0xaf8
  402d58:	adrp	x0, 403000 <parse_argv+0x160>
  402d5c:	add	x4, x0, #0xec8
  402d60:	mov	w3, #0xf0                  	// #240
  402d64:	mov	x2, x1
  402d68:	ldr	w1, [sp, #100]
  402d6c:	mov	w0, w6
  402d70:	bl	401530 <log_internal_realm@plt>
  402d74:	b	402d80 <execute_s2h+0x580>
  402d78:	ldr	w0, [sp, #100]
  402d7c:	cmp	w0, #0x0
  402d80:	ldr	w19, [sp, #68]
  402d84:	b	402d8c <execute_s2h+0x58c>
  402d88:	mov	w19, #0x0                   	// #0
  402d8c:	add	x0, sp, #0x34
  402d90:	bl	4017f8 <closep>
  402d94:	mov	w1, w19
  402d98:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  402d9c:	add	x0, x0, #0xc40
  402da0:	ldr	x2, [sp, #248]
  402da4:	ldr	x0, [x0]
  402da8:	eor	x0, x2, x0
  402dac:	cmp	x0, #0x0
  402db0:	b.eq	402db8 <execute_s2h+0x5b8>  // b.none
  402db4:	bl	4014a0 <__stack_chk_fail@plt>
  402db8:	mov	w0, w1
  402dbc:	ldp	x19, x20, [sp, #16]
  402dc0:	ldp	x29, x30, [sp], #256
  402dc4:	ret

0000000000402dc8 <help>:
  402dc8:	stp	x29, x30, [sp, #-64]!
  402dcc:	mov	x29, sp
  402dd0:	str	x19, [sp, #16]
  402dd4:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  402dd8:	add	x0, x0, #0xc40
  402ddc:	ldr	x1, [x0]
  402de0:	str	x1, [sp, #56]
  402de4:	mov	x1, #0x0                   	// #0
  402de8:	str	xzr, [sp, #48]
  402dec:	add	x0, sp, #0x30
  402df0:	mov	x2, x0
  402df4:	adrp	x0, 403000 <parse_argv+0x160>
  402df8:	add	x1, x0, #0xb30
  402dfc:	adrp	x0, 403000 <parse_argv+0x160>
  402e00:	add	x0, x0, #0xb38
  402e04:	bl	401490 <terminal_urlify_man@plt>
  402e08:	str	w0, [sp, #44]
  402e0c:	ldr	w0, [sp, #44]
  402e10:	cmp	w0, #0x0
  402e14:	b.ge	402e3c <help+0x74>  // b.tcont
  402e18:	adrp	x0, 403000 <parse_argv+0x160>
  402e1c:	add	x1, x0, #0x543
  402e20:	adrp	x0, 403000 <parse_argv+0x160>
  402e24:	add	x3, x0, #0xed8
  402e28:	mov	w2, #0xfe                  	// #254
  402e2c:	mov	w0, #0x0                   	// #0
  402e30:	bl	4015e0 <log_oom_internal@plt>
  402e34:	mov	w19, w0
  402e38:	b	402e64 <help+0x9c>
  402e3c:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402e40:	add	x0, x0, #0x8
  402e44:	ldr	x0, [x0]
  402e48:	ldr	x1, [sp, #48]
  402e4c:	mov	x2, x1
  402e50:	mov	x1, x0
  402e54:	adrp	x0, 403000 <parse_argv+0x160>
  402e58:	add	x0, x0, #0xb50
  402e5c:	bl	4015b0 <printf@plt>
  402e60:	mov	w19, #0x0                   	// #0
  402e64:	add	x0, sp, #0x30
  402e68:	bl	4018a0 <freep>
  402e6c:	mov	w1, w19
  402e70:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  402e74:	add	x0, x0, #0xc40
  402e78:	ldr	x2, [sp, #56]
  402e7c:	ldr	x0, [x0]
  402e80:	eor	x0, x2, x0
  402e84:	cmp	x0, #0x0
  402e88:	b.eq	402e90 <help+0xc8>  // b.none
  402e8c:	bl	4014a0 <__stack_chk_fail@plt>
  402e90:	mov	w0, w1
  402e94:	ldr	x19, [sp, #16]
  402e98:	ldp	x29, x30, [sp], #64
  402e9c:	ret

0000000000402ea0 <parse_argv>:
  402ea0:	stp	x29, x30, [sp, #-112]!
  402ea4:	mov	x29, sp
  402ea8:	str	w0, [sp, #28]
  402eac:	str	x1, [sp, #16]
  402eb0:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  402eb4:	add	x0, x0, #0xc40
  402eb8:	ldr	x1, [x0]
  402ebc:	str	x1, [sp, #104]
  402ec0:	mov	x1, #0x0                   	// #0
  402ec4:	ldr	w0, [sp, #28]
  402ec8:	lsr	w0, w0, #31
  402ecc:	and	w0, w0, #0xff
  402ed0:	and	x0, x0, #0xff
  402ed4:	cmp	x0, #0x0
  402ed8:	b.eq	402f04 <parse_argv+0x64>  // b.none
  402edc:	adrp	x0, 403000 <parse_argv+0x160>
  402ee0:	add	x1, x0, #0x543
  402ee4:	adrp	x0, 403000 <parse_argv+0x160>
  402ee8:	add	x4, x0, #0xee0
  402eec:	mov	w3, #0x11f                 	// #287
  402ef0:	mov	x2, x1
  402ef4:	adrp	x0, 403000 <parse_argv+0x160>
  402ef8:	add	x1, x0, #0xd38
  402efc:	mov	w0, #0x0                   	// #0
  402f00:	bl	401420 <log_assert_failed_realm@plt>
  402f04:	ldr	x0, [sp, #16]
  402f08:	cmp	x0, #0x0
  402f0c:	cset	w0, eq  // eq = none
  402f10:	and	w0, w0, #0xff
  402f14:	and	x0, x0, #0xff
  402f18:	cmp	x0, #0x0
  402f1c:	b.eq	402fb8 <parse_argv+0x118>  // b.none
  402f20:	adrp	x0, 403000 <parse_argv+0x160>
  402f24:	add	x1, x0, #0x543
  402f28:	adrp	x0, 403000 <parse_argv+0x160>
  402f2c:	add	x4, x0, #0xee0
  402f30:	mov	w3, #0x120                 	// #288
  402f34:	mov	x2, x1
  402f38:	adrp	x0, 403000 <parse_argv+0x160>
  402f3c:	add	x1, x0, #0xd48
  402f40:	mov	w0, #0x0                   	// #0
  402f44:	bl	401420 <log_assert_failed_realm@plt>
  402f48:	ldr	w0, [sp, #36]
  402f4c:	cmp	w0, #0x100
  402f50:	b.eq	402f80 <parse_argv+0xe0>  // b.none
  402f54:	ldr	w0, [sp, #36]
  402f58:	cmp	w0, #0x100
  402f5c:	b.gt	402f90 <parse_argv+0xf0>
  402f60:	ldr	w0, [sp, #36]
  402f64:	cmp	w0, #0x3f
  402f68:	b.eq	402f88 <parse_argv+0xe8>  // b.none
  402f6c:	ldr	w0, [sp, #36]
  402f70:	cmp	w0, #0x68
  402f74:	b.ne	402f90 <parse_argv+0xf0>  // b.any
  402f78:	bl	402dc8 <help>
  402f7c:	b	4031ec <parse_argv+0x34c>
  402f80:	bl	4014d0 <version@plt>
  402f84:	b	4031ec <parse_argv+0x34c>
  402f88:	mov	w0, #0xffffffea            	// #-22
  402f8c:	b	4031ec <parse_argv+0x34c>
  402f90:	adrp	x0, 403000 <parse_argv+0x160>
  402f94:	add	x1, x0, #0x543
  402f98:	adrp	x0, 403000 <parse_argv+0x160>
  402f9c:	add	x4, x0, #0xee0
  402fa0:	mov	w3, #0x12e                 	// #302
  402fa4:	mov	x2, x1
  402fa8:	adrp	x0, 403000 <parse_argv+0x160>
  402fac:	add	x1, x0, #0xd50
  402fb0:	mov	w0, #0x0                   	// #0
  402fb4:	bl	401440 <log_assert_failed_unreachable_realm@plt>
  402fb8:	nop
  402fbc:	mov	x4, #0x0                   	// #0
  402fc0:	adrp	x0, 403000 <parse_argv+0x160>
  402fc4:	add	x3, x0, #0xef0
  402fc8:	adrp	x0, 403000 <parse_argv+0x160>
  402fcc:	add	x2, x0, #0xd68
  402fd0:	ldr	x1, [sp, #16]
  402fd4:	ldr	w0, [sp, #28]
  402fd8:	bl	401430 <getopt_long@plt>
  402fdc:	str	w0, [sp, #36]
  402fe0:	ldr	w0, [sp, #36]
  402fe4:	cmp	w0, #0x0
  402fe8:	b.ge	402f48 <parse_argv+0xa8>  // b.tcont
  402fec:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  402ff0:	add	x0, x0, #0x10
  402ff4:	ldr	w0, [x0]
  402ff8:	ldr	w1, [sp, #28]
  402ffc:	sub	w0, w1, w0
  403000:	cmp	w0, #0x1
  403004:	b.eq	4030a4 <parse_argv+0x204>  // b.none
  403008:	mov	w0, #0x3                   	// #3
  40300c:	str	w0, [sp, #52]
  403010:	mov	w0, #0x16                  	// #22
  403014:	movk	w0, #0x4000, lsl #16
  403018:	str	w0, [sp, #56]
  40301c:	str	wzr, [sp, #60]
  403020:	ldr	w0, [sp, #60]
  403024:	bl	4015f0 <log_get_max_level_realm@plt>
  403028:	mov	w1, w0
  40302c:	ldr	w0, [sp, #52]
  403030:	and	w0, w0, #0x7
  403034:	cmp	w1, w0
  403038:	b.lt	40308c <parse_argv+0x1ec>  // b.tstop
  40303c:	ldr	w0, [sp, #60]
  403040:	lsl	w1, w0, #10
  403044:	ldr	w0, [sp, #52]
  403048:	orr	w7, w1, w0
  40304c:	adrp	x0, 403000 <parse_argv+0x160>
  403050:	add	x1, x0, #0x543
  403054:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  403058:	add	x0, x0, #0x8
  40305c:	ldr	x0, [x0]
  403060:	mov	x6, x0
  403064:	adrp	x0, 403000 <parse_argv+0x160>
  403068:	add	x5, x0, #0xd70
  40306c:	adrp	x0, 403000 <parse_argv+0x160>
  403070:	add	x4, x0, #0xf50
  403074:	mov	w3, #0x132                 	// #306
  403078:	mov	x2, x1
  40307c:	ldr	w1, [sp, #56]
  403080:	mov	w0, w7
  403084:	bl	401530 <log_internal_realm@plt>
  403088:	b	4031ec <parse_argv+0x34c>
  40308c:	ldr	w0, [sp, #56]
  403090:	cmp	w0, #0x0
  403094:	cneg	w0, w0, lt  // lt = tstop
  403098:	and	w0, w0, #0xff
  40309c:	neg	w0, w0
  4030a0:	b	4031ec <parse_argv+0x34c>
  4030a4:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4030a8:	add	x0, x0, #0x10
  4030ac:	ldr	w0, [x0]
  4030b0:	sxtw	x0, w0
  4030b4:	lsl	x0, x0, #3
  4030b8:	ldr	x1, [sp, #16]
  4030bc:	add	x0, x1, x0
  4030c0:	ldr	x0, [x0]
  4030c4:	bl	401580 <strdup@plt>
  4030c8:	mov	x1, x0
  4030cc:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4030d0:	add	x0, x0, #0x20
  4030d4:	str	x1, [x0]
  4030d8:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  4030dc:	add	x0, x0, #0x20
  4030e0:	ldr	x0, [x0]
  4030e4:	cmp	x0, #0x0
  4030e8:	b.ne	40310c <parse_argv+0x26c>  // b.any
  4030ec:	adrp	x0, 403000 <parse_argv+0x160>
  4030f0:	add	x1, x0, #0x543
  4030f4:	adrp	x0, 403000 <parse_argv+0x160>
  4030f8:	add	x3, x0, #0xf50
  4030fc:	mov	w2, #0x138                 	// #312
  403100:	mov	w0, #0x0                   	// #0
  403104:	bl	4015e0 <log_oom_internal@plt>
  403108:	b	4031ec <parse_argv+0x34c>
  40310c:	adrp	x0, 403000 <parse_argv+0x160>
  403110:	add	x1, x0, #0xda0
  403114:	add	x0, sp, #0x40
  403118:	ldp	x2, x3, [x1]
  40311c:	stp	x2, x3, [x0]
  403120:	ldp	x2, x3, [x1, #16]
  403124:	stp	x2, x3, [x0, #16]
  403128:	ldr	x1, [x1, #32]
  40312c:	str	x1, [x0, #32]
  403130:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  403134:	add	x0, x0, #0x20
  403138:	ldr	x1, [x0]
  40313c:	add	x0, sp, #0x40
  403140:	bl	401500 <strv_find@plt>
  403144:	cmp	x0, #0x0
  403148:	b.ne	4031e8 <parse_argv+0x348>  // b.any
  40314c:	mov	w0, #0x3                   	// #3
  403150:	str	w0, [sp, #40]
  403154:	mov	w0, #0x16                  	// #22
  403158:	movk	w0, #0x4000, lsl #16
  40315c:	str	w0, [sp, #44]
  403160:	str	wzr, [sp, #48]
  403164:	ldr	w0, [sp, #48]
  403168:	bl	4015f0 <log_get_max_level_realm@plt>
  40316c:	mov	w1, w0
  403170:	ldr	w0, [sp, #40]
  403174:	and	w0, w0, #0x7
  403178:	cmp	w1, w0
  40317c:	b.lt	4031d0 <parse_argv+0x330>  // b.tstop
  403180:	ldr	w0, [sp, #48]
  403184:	lsl	w1, w0, #10
  403188:	ldr	w0, [sp, #40]
  40318c:	orr	w7, w1, w0
  403190:	adrp	x0, 403000 <parse_argv+0x160>
  403194:	add	x1, x0, #0x543
  403198:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  40319c:	add	x0, x0, #0x20
  4031a0:	ldr	x0, [x0]
  4031a4:	mov	x6, x0
  4031a8:	adrp	x0, 403000 <parse_argv+0x160>
  4031ac:	add	x5, x0, #0xd88
  4031b0:	adrp	x0, 403000 <parse_argv+0x160>
  4031b4:	add	x4, x0, #0xf50
  4031b8:	mov	w3, #0x13b                 	// #315
  4031bc:	mov	x2, x1
  4031c0:	ldr	w1, [sp, #44]
  4031c4:	mov	w0, w7
  4031c8:	bl	401530 <log_internal_realm@plt>
  4031cc:	b	4031ec <parse_argv+0x34c>
  4031d0:	ldr	w0, [sp, #44]
  4031d4:	cmp	w0, #0x0
  4031d8:	cneg	w0, w0, lt  // lt = tstop
  4031dc:	and	w0, w0, #0xff
  4031e0:	neg	w0, w0
  4031e4:	b	4031ec <parse_argv+0x34c>
  4031e8:	mov	w0, #0x1                   	// #1
  4031ec:	mov	w1, w0
  4031f0:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  4031f4:	add	x0, x0, #0xc40
  4031f8:	ldr	x2, [sp, #104]
  4031fc:	ldr	x0, [x0]
  403200:	eor	x0, x2, x0
  403204:	cmp	x0, #0x0
  403208:	b.eq	403210 <parse_argv+0x370>  // b.none
  40320c:	bl	4014a0 <__stack_chk_fail@plt>
  403210:	mov	w0, w1
  403214:	ldp	x29, x30, [sp], #112
  403218:	ret

000000000040321c <run>:
  40321c:	stp	x29, x30, [sp, #-112]!
  403220:	mov	x29, sp
  403224:	str	x19, [sp, #16]
  403228:	str	w0, [sp, #44]
  40322c:	str	x1, [sp, #32]
  403230:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  403234:	add	x0, x0, #0xc40
  403238:	ldr	x1, [x0]
  40323c:	str	x1, [sp, #104]
  403240:	mov	x1, #0x0                   	// #0
  403244:	str	xzr, [sp, #80]
  403248:	str	xzr, [sp, #88]
  40324c:	str	xzr, [sp, #96]
  403250:	bl	4013f0 <log_setup_service@plt>
  403254:	ldr	x1, [sp, #32]
  403258:	ldr	w0, [sp, #44]
  40325c:	bl	402ea0 <parse_argv>
  403260:	str	w0, [sp, #64]
  403264:	ldr	w0, [sp, #64]
  403268:	cmp	w0, #0x0
  40326c:	b.gt	403278 <run+0x5c>
  403270:	ldr	w19, [sp, #64]
  403274:	b	4033c8 <run+0x1ac>
  403278:	add	x0, sp, #0x60
  40327c:	bl	401410 <parse_sleep_config@plt>
  403280:	str	w0, [sp, #64]
  403284:	ldr	w0, [sp, #64]
  403288:	cmp	w0, #0x0
  40328c:	b.ge	403298 <run+0x7c>  // b.tcont
  403290:	ldr	w19, [sp, #64]
  403294:	b	4033c8 <run+0x1ac>
  403298:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  40329c:	add	x0, x0, #0x20
  4032a0:	ldr	x0, [x0]
  4032a4:	ldr	x1, [sp, #96]
  4032a8:	add	x4, sp, #0x58
  4032ac:	add	x3, sp, #0x50
  4032b0:	add	x2, sp, #0x3f
  4032b4:	bl	4014b0 <sleep_settings@plt>
  4032b8:	str	w0, [sp, #64]
  4032bc:	ldr	w0, [sp, #64]
  4032c0:	cmp	w0, #0x0
  4032c4:	b.ge	4032d0 <run+0xb4>  // b.tcont
  4032c8:	ldr	w19, [sp, #64]
  4032cc:	b	4033c8 <run+0x1ac>
  4032d0:	ldrb	w0, [sp, #63]
  4032d4:	eor	w0, w0, #0x1
  4032d8:	and	w0, w0, #0xff
  4032dc:	cmp	w0, #0x0
  4032e0:	b.eq	403384 <run+0x168>  // b.none
  4032e4:	mov	w0, #0x3                   	// #3
  4032e8:	str	w0, [sp, #68]
  4032ec:	mov	w0, #0xd                   	// #13
  4032f0:	movk	w0, #0x4000, lsl #16
  4032f4:	str	w0, [sp, #72]
  4032f8:	str	wzr, [sp, #76]
  4032fc:	ldr	w0, [sp, #76]
  403300:	bl	4015f0 <log_get_max_level_realm@plt>
  403304:	mov	w1, w0
  403308:	ldr	w0, [sp, #68]
  40330c:	and	w0, w0, #0x7
  403310:	cmp	w1, w0
  403314:	b.lt	40336c <run+0x150>  // b.tstop
  403318:	ldr	w0, [sp, #76]
  40331c:	lsl	w1, w0, #10
  403320:	ldr	w0, [sp, #68]
  403324:	orr	w7, w1, w0
  403328:	adrp	x0, 403000 <parse_argv+0x160>
  40332c:	add	x1, x0, #0x543
  403330:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  403334:	add	x0, x0, #0x20
  403338:	ldr	x0, [x0]
  40333c:	mov	x6, x0
  403340:	adrp	x0, 403000 <parse_argv+0x160>
  403344:	add	x5, x0, #0xdc8
  403348:	adrp	x0, 403000 <parse_argv+0x160>
  40334c:	add	x4, x0, #0xf60
  403350:	mov	w3, #0x156                 	// #342
  403354:	mov	x2, x1
  403358:	ldr	w1, [sp, #72]
  40335c:	mov	w0, w7
  403360:	bl	401530 <log_internal_realm@plt>
  403364:	mov	w19, w0
  403368:	b	4033c8 <run+0x1ac>
  40336c:	ldr	w0, [sp, #72]
  403370:	cmp	w0, #0x0
  403374:	cneg	w0, w0, lt  // lt = tstop
  403378:	and	w0, w0, #0xff
  40337c:	neg	w19, w0
  403380:	b	4033c8 <run+0x1ac>
  403384:	adrp	x0, 415000 <saved_argv@@SD_SHARED>
  403388:	add	x0, x0, #0x20
  40338c:	ldr	x2, [x0]
  403390:	adrp	x0, 403000 <parse_argv+0x160>
  403394:	add	x1, x0, #0x528
  403398:	mov	x0, x2
  40339c:	bl	401560 <strcmp@plt>
  4033a0:	cmp	w0, #0x0
  4033a4:	b.ne	4033b8 <run+0x19c>  // b.any
  4033a8:	ldr	x0, [sp, #96]
  4033ac:	bl	402800 <execute_s2h>
  4033b0:	mov	w19, w0
  4033b4:	b	4033c8 <run+0x1ac>
  4033b8:	ldr	x0, [sp, #80]
  4033bc:	ldr	x1, [sp, #88]
  4033c0:	bl	402368 <execute>
  4033c4:	mov	w19, w0
  4033c8:	add	x0, sp, #0x60
  4033cc:	bl	401984 <free_sleep_configp>
  4033d0:	mov	w1, w19
  4033d4:	adrp	x0, 414000 <__FRAME_END__+0xfc20>
  4033d8:	add	x0, x0, #0xc40
  4033dc:	ldr	x2, [sp, #104]
  4033e0:	ldr	x0, [x0]
  4033e4:	eor	x0, x2, x0
  4033e8:	cmp	x0, #0x0
  4033ec:	b.eq	4033f4 <run+0x1d8>  // b.none
  4033f0:	bl	4014a0 <__stack_chk_fail@plt>
  4033f4:	mov	w0, w1
  4033f8:	ldr	x19, [sp, #16]
  4033fc:	ldp	x29, x30, [sp], #112
  403400:	ret

0000000000403404 <main>:
  403404:	stp	x29, x30, [sp, #-48]!
  403408:	mov	x29, sp
  40340c:	str	w0, [sp, #28]
  403410:	str	x1, [sp, #16]
  403414:	ldr	x1, [sp, #16]
  403418:	ldr	w0, [sp, #28]
  40341c:	bl	4018c4 <save_argc_argv>
  403420:	ldr	x1, [sp, #16]
  403424:	ldr	w0, [sp, #28]
  403428:	bl	40321c <run>
  40342c:	str	w0, [sp, #44]
  403430:	bl	4014c0 <ask_password_agent_close@plt>
  403434:	bl	4013b0 <polkit_agent_close@plt>
  403438:	bl	4014e0 <pager_close@plt>
  40343c:	bl	4015a0 <mac_selinux_finish@plt>
  403440:	bl	4018fc <static_destruct>
  403444:	ldr	w0, [sp, #44]
  403448:	lsr	w0, w0, #31
  40344c:	ldp	x29, x30, [sp], #48
  403450:	ret
  403454:	nop

0000000000403458 <__libc_csu_init>:
  403458:	stp	x29, x30, [sp, #-64]!
  40345c:	mov	x29, sp
  403460:	stp	x19, x20, [sp, #16]
  403464:	adrp	x20, 414000 <__FRAME_END__+0xfc20>
  403468:	add	x20, x20, #0xc38
  40346c:	stp	x21, x22, [sp, #32]
  403470:	adrp	x21, 414000 <__FRAME_END__+0xfc20>
  403474:	add	x21, x21, #0xc30
  403478:	sub	x20, x20, x21
  40347c:	mov	w22, w0
  403480:	stp	x23, x24, [sp, #48]
  403484:	mov	x23, x1
  403488:	mov	x24, x2
  40348c:	bl	401308 <_init>
  403490:	cmp	xzr, x20, asr #3
  403494:	b.eq	4034c0 <__libc_csu_init+0x68>  // b.none
  403498:	asr	x20, x20, #3
  40349c:	mov	x19, #0x0                   	// #0
  4034a0:	ldr	x3, [x21, x19, lsl #3]
  4034a4:	mov	x2, x24
  4034a8:	add	x19, x19, #0x1
  4034ac:	mov	x1, x23
  4034b0:	mov	w0, w22
  4034b4:	blr	x3
  4034b8:	cmp	x20, x19
  4034bc:	b.ne	4034a0 <__libc_csu_init+0x48>  // b.any
  4034c0:	ldp	x19, x20, [sp, #16]
  4034c4:	ldp	x21, x22, [sp, #32]
  4034c8:	ldp	x23, x24, [sp, #48]
  4034cc:	ldp	x29, x30, [sp], #64
  4034d0:	ret
  4034d4:	nop

00000000004034d8 <__libc_csu_fini>:
  4034d8:	ret

Disassembly of section .fini:

00000000004034dc <_fini>:
  4034dc:	stp	x29, x30, [sp, #-16]!
  4034e0:	mov	x29, sp
  4034e4:	ldp	x29, x30, [sp], #16
  4034e8:	ret
