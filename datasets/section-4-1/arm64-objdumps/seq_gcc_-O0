
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//seq_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000fc8 <_init>:
 fc8:	stp	x29, x30, [sp, #-16]!
 fcc:	mov	x29, sp
 fd0:	bl	11f0 <call_weak_fn>
 fd4:	ldp	x29, x30, [sp], #16
 fd8:	ret

Disassembly of section .plt:

0000000000000fe0 <.plt>:
     fe0:	stp	x16, x30, [sp, #-16]!
     fe4:	adrp	x16, 16000 <__FRAME_END__+0xf390>
     fe8:	ldr	x17, [x16, #4088]
     fec:	add	x16, x16, #0xff8
     ff0:	br	x17
     ff4:	nop
     ff8:	nop
     ffc:	nop

0000000000001000 <memcpy@plt>:
    1000:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1004:	ldr	x17, [x16]
    1008:	add	x16, x16, #0x0
    100c:	br	x17

0000000000001010 <all_digits@plt>:
    1010:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1014:	ldr	x17, [x16, #8]
    1018:	add	x16, x16, #0x8
    101c:	br	x17

0000000000001020 <fputs@plt>:
    1020:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1024:	ldr	x17, [x16, #16]
    1028:	add	x16, x16, #0x10
    102c:	br	x17

0000000000001030 <builtin_error@plt>:
    1030:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1034:	ldr	x17, [x16, #24]
    1038:	add	x16, x16, #0x18
    103c:	br	x17

0000000000001040 <builtin_warning@plt>:
    1040:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1044:	ldr	x17, [x16, #32]
    1048:	add	x16, x16, #0x20
    104c:	br	x17

0000000000001050 <__cxa_finalize@plt>:
    1050:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1054:	ldr	x17, [x16, #40]
    1058:	add	x16, x16, #0x28
    105c:	br	x17

0000000000001060 <sprintf@plt>:
    1060:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1064:	ldr	x17, [x16, #48]
    1068:	add	x16, x16, #0x30
    106c:	br	x17

0000000000001070 <snprintf@plt>:
    1070:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1074:	ldr	x17, [x16, #56]
    1078:	add	x16, x16, #0x38
    107c:	br	x17

0000000000001080 <locale_decpoint@plt>:
    1080:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1084:	ldr	x17, [x16, #64]
    1088:	add	x16, x16, #0x40
    108c:	br	x17

0000000000001090 <print_intseq@plt>:
    1090:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1094:	ldr	x17, [x16, #72]
    1098:	add	x16, x16, #0x48
    109c:	br	x17

00000000000010a0 <builtin_help@plt>:
    10a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    10a4:	ldr	x17, [x16, #80]
    10a8:	add	x16, x16, #0x50
    10ac:	br	x17

00000000000010b0 <xmalloc@plt>:
    10b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    10b4:	ldr	x17, [x16, #88]
    10b8:	add	x16, x16, #0x58
    10bc:	br	x17

00000000000010c0 <builtin_usage@plt>:
    10c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    10c4:	ldr	x17, [x16, #96]
    10c8:	add	x16, x16, #0x60
    10cc:	br	x17

00000000000010d0 <strerror@plt>:
    10d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    10d4:	ldr	x17, [x16, #104]
    10d8:	add	x16, x16, #0x68
    10dc:	br	x17

00000000000010e0 <__gmon_start__@plt>:
    10e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    10e4:	ldr	x17, [x16, #112]
    10e8:	add	x16, x16, #0x70
    10ec:	br	x17

00000000000010f0 <__ctype_b_loc@plt>:
    10f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    10f4:	ldr	x17, [x16, #120]
    10f8:	add	x16, x16, #0x78
    10fc:	br	x17

0000000000001100 <strtold@plt>:
    1100:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1104:	ldr	x17, [x16, #128]
    1108:	add	x16, x16, #0x80
    110c:	br	x17

0000000000001110 <print_fltseq@plt>:
    1110:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1114:	ldr	x17, [x16, #136]
    1118:	add	x16, x16, #0x88
    111c:	br	x17

0000000000001120 <free@plt>:
    1120:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1124:	ldr	x17, [x16, #144]
    1128:	add	x16, x16, #0x90
    112c:	br	x17

0000000000001130 <internal_getopt@plt>:
    1130:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1134:	ldr	x17, [x16, #152]
    1138:	add	x16, x16, #0x98
    113c:	br	x17

0000000000001140 <reset_internal_getopt@plt>:
    1140:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1144:	ldr	x17, [x16, #160]
    1148:	add	x16, x16, #0xa0
    114c:	br	x17

0000000000001150 <strspn@plt>:
    1150:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1154:	ldr	x17, [x16, #168]
    1158:	add	x16, x16, #0xa8
    115c:	br	x17

0000000000001160 <strchr@plt>:
    1160:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1164:	ldr	x17, [x16, #176]
    1168:	add	x16, x16, #0xb0
    116c:	br	x17

0000000000001170 <sh_chkwrite@plt>:
    1170:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1174:	ldr	x17, [x16, #184]
    1178:	add	x16, x16, #0xb8
    117c:	br	x17

0000000000001180 <strcpy@plt>:
    1180:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1184:	ldr	x17, [x16, #192]
    1188:	add	x16, x16, #0xc0
    118c:	br	x17

0000000000001190 <termsig_handler@plt>:
    1190:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    1194:	ldr	x17, [x16, #200]
    1198:	add	x16, x16, #0xc8
    119c:	br	x17

00000000000011a0 <width_needed@plt>:
    11a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    11a4:	ldr	x17, [x16, #208]
    11a8:	add	x16, x16, #0xd0
    11ac:	br	x17

00000000000011b0 <throw_to_top_level@plt>:
    11b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    11b4:	ldr	x17, [x16, #216]
    11b8:	add	x16, x16, #0xd8
    11bc:	br	x17

00000000000011c0 <printf@plt>:
    11c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    11c4:	ldr	x17, [x16, #224]
    11c8:	add	x16, x16, #0xe0
    11cc:	br	x17

00000000000011d0 <__errno_location@plt>:
    11d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    11d4:	ldr	x17, [x16, #232]
    11d8:	add	x16, x16, #0xe8
    11dc:	br	x17

00000000000011e0 <sh_invalidnum@plt>:
    11e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    11e4:	ldr	x17, [x16, #240]
    11e8:	add	x16, x16, #0xf0
    11ec:	br	x17

Disassembly of section .text:

00000000000011f0 <call_weak_fn>:
    11f0:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    11f4:	ldr	x0, [x0, #4032]
    11f8:	cbz	x0, 1200 <call_weak_fn+0x10>
    11fc:	b	10e0 <__gmon_start__@plt>
    1200:	ret

0000000000001204 <deregister_tm_clones>:
    1204:	stp	x29, x30, [sp, #-32]!
    1208:	mov	x29, sp
    120c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1210:	add	x0, x0, #0x1b0
    1214:	str	x0, [sp, #24]
    1218:	ldr	x0, [sp, #24]
    121c:	str	x0, [sp, #24]
    1220:	ldr	x1, [sp, #24]
    1224:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1228:	add	x0, x0, #0x1b0
    122c:	cmp	x1, x0
    1230:	b.eq	1268 <deregister_tm_clones+0x64>  // b.none
    1234:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1238:	ldr	x0, [x0, #3992]
    123c:	str	x0, [sp, #16]
    1240:	ldr	x0, [sp, #16]
    1244:	str	x0, [sp, #16]
    1248:	ldr	x0, [sp, #16]
    124c:	cmp	x0, #0x0
    1250:	b.eq	126c <deregister_tm_clones+0x68>  // b.none
    1254:	ldr	x1, [sp, #16]
    1258:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    125c:	add	x0, x0, #0x1b0
    1260:	blr	x1
    1264:	b	126c <deregister_tm_clones+0x68>
    1268:	nop
    126c:	ldp	x29, x30, [sp], #32
    1270:	ret

0000000000001274 <register_tm_clones>:
    1274:	stp	x29, x30, [sp, #-48]!
    1278:	mov	x29, sp
    127c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1280:	add	x0, x0, #0x1b0
    1284:	str	x0, [sp, #40]
    1288:	ldr	x0, [sp, #40]
    128c:	str	x0, [sp, #40]
    1290:	ldr	x1, [sp, #40]
    1294:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1298:	add	x0, x0, #0x1b0
    129c:	sub	x0, x1, x0
    12a0:	asr	x0, x0, #3
    12a4:	lsr	x1, x0, #63
    12a8:	add	x0, x1, x0
    12ac:	asr	x0, x0, #1
    12b0:	str	x0, [sp, #32]
    12b4:	ldr	x0, [sp, #32]
    12b8:	cmp	x0, #0x0
    12bc:	b.eq	12f8 <register_tm_clones+0x84>  // b.none
    12c0:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    12c4:	ldr	x0, [x0, #4064]
    12c8:	str	x0, [sp, #24]
    12cc:	ldr	x0, [sp, #24]
    12d0:	str	x0, [sp, #24]
    12d4:	ldr	x0, [sp, #24]
    12d8:	cmp	x0, #0x0
    12dc:	b.eq	12fc <register_tm_clones+0x88>  // b.none
    12e0:	ldr	x2, [sp, #24]
    12e4:	ldr	x1, [sp, #32]
    12e8:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    12ec:	add	x0, x0, #0x1b0
    12f0:	blr	x2
    12f4:	b	12fc <register_tm_clones+0x88>
    12f8:	nop
    12fc:	ldp	x29, x30, [sp], #48
    1300:	ret

0000000000001304 <__do_global_dtors_aux>:
    1304:	stp	x29, x30, [sp, #-16]!
    1308:	mov	x29, sp
    130c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1310:	add	x0, x0, #0x1b0
    1314:	ldrb	w0, [x0]
    1318:	and	x0, x0, #0xff
    131c:	cmp	x0, #0x0
    1320:	b.ne	135c <__do_global_dtors_aux+0x58>  // b.any
    1324:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1328:	ldr	x0, [x0, #4000]
    132c:	cmp	x0, #0x0
    1330:	b.eq	1344 <__do_global_dtors_aux+0x40>  // b.none
    1334:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1338:	add	x0, x0, #0xf8
    133c:	ldr	x0, [x0]
    1340:	bl	1050 <__cxa_finalize@plt>
    1344:	bl	1204 <deregister_tm_clones>
    1348:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    134c:	add	x0, x0, #0x1b0
    1350:	mov	w1, #0x1                   	// #1
    1354:	strb	w1, [x0]
    1358:	b	1360 <__do_global_dtors_aux+0x5c>
    135c:	nop
    1360:	ldp	x29, x30, [sp], #16
    1364:	ret

0000000000001368 <frame_dummy>:
    1368:	stp	x29, x30, [sp, #-16]!
    136c:	mov	x29, sp
    1370:	bl	1274 <register_tm_clones>
    1374:	nop
    1378:	ldp	x29, x30, [sp], #16
    137c:	ret

0000000000001380 <getfloatmax>:
    1380:	stp	x29, x30, [sp, #-64]!
    1384:	mov	x29, sp
    1388:	str	x0, [sp, #24]
    138c:	bl	11d0 <__errno_location@plt>
    1390:	str	wzr, [x0]
    1394:	add	x0, sp, #0x28
    1398:	mov	x1, x0
    139c:	ldr	x0, [sp, #24]
    13a0:	bl	1100 <strtold@plt>
    13a4:	str	q0, [sp, #48]
    13a8:	ldr	x0, [sp, #40]
    13ac:	ldrb	w0, [x0]
    13b0:	cmp	w0, #0x0
    13b4:	b.eq	13d4 <getfloatmax+0x54>  // b.none
    13b8:	ldr	x0, [sp, #24]
    13bc:	bl	11e0 <sh_invalidnum@plt>
    13c0:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    13c4:	add	x0, x0, #0x1b8
    13c8:	mov	w1, #0x1                   	// #1
    13cc:	str	w1, [x0]
    13d0:	b	1410 <getfloatmax+0x90>
    13d4:	bl	11d0 <__errno_location@plt>
    13d8:	ldr	w0, [x0]
    13dc:	cmp	w0, #0x22
    13e0:	b.ne	1410 <getfloatmax+0x90>  // b.any
    13e4:	mov	w0, #0x22                  	// #34
    13e8:	bl	10d0 <strerror@plt>
    13ec:	mov	x2, x0
    13f0:	ldr	x1, [sp, #24]
    13f4:	adrp	x0, 6000 <__fixtfdi+0x28>
    13f8:	add	x0, x0, #0x428
    13fc:	bl	1030 <builtin_error@plt>
    1400:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1404:	add	x0, x0, #0x1b8
    1408:	mov	w1, #0x1                   	// #1
    140c:	str	w1, [x0]
    1410:	movi	v1.2d, #0x0
    1414:	ldr	q0, [sp, #48]
    1418:	bl	407c <__eqtf2>
    141c:	cmp	w0, #0x0
    1420:	b.ne	1428 <getfloatmax+0xa8>  // b.any
    1424:	stp	xzr, xzr, [sp, #48]
    1428:	ldr	q0, [sp, #48]
    142c:	ldp	x29, x30, [sp], #64
    1430:	ret

0000000000001434 <long_double_format>:
    1434:	stp	x29, x30, [sp, #-80]!
    1438:	mov	x29, sp
    143c:	str	x0, [sp, #24]
    1440:	str	xzr, [sp, #72]
    1444:	b	14a8 <long_double_format+0x74>
    1448:	ldr	x1, [sp, #24]
    144c:	ldr	x0, [sp, #72]
    1450:	add	x0, x1, x0
    1454:	ldrb	w0, [x0]
    1458:	cmp	w0, #0x0
    145c:	b.ne	1478 <long_double_format+0x44>  // b.any
    1460:	ldr	x1, [sp, #24]
    1464:	adrp	x0, 6000 <__fixtfdi+0x28>
    1468:	add	x0, x0, #0x438
    146c:	bl	1030 <builtin_error@plt>
    1470:	mov	x0, #0x0                   	// #0
    1474:	b	178c <long_double_format+0x358>
    1478:	ldr	x1, [sp, #24]
    147c:	ldr	x0, [sp, #72]
    1480:	add	x0, x1, x0
    1484:	ldrb	w0, [x0]
    1488:	cmp	w0, #0x25
    148c:	b.ne	1498 <long_double_format+0x64>  // b.any
    1490:	mov	x0, #0x2                   	// #2
    1494:	b	149c <long_double_format+0x68>
    1498:	mov	x0, #0x1                   	// #1
    149c:	ldr	x1, [sp, #72]
    14a0:	add	x0, x1, x0
    14a4:	str	x0, [sp, #72]
    14a8:	ldr	x1, [sp, #24]
    14ac:	ldr	x0, [sp, #72]
    14b0:	add	x0, x1, x0
    14b4:	ldrb	w0, [x0]
    14b8:	cmp	w0, #0x25
    14bc:	b.ne	1448 <long_double_format+0x14>  // b.any
    14c0:	ldr	x0, [sp, #72]
    14c4:	add	x0, x0, #0x1
    14c8:	ldr	x1, [sp, #24]
    14cc:	add	x0, x1, x0
    14d0:	ldrb	w0, [x0]
    14d4:	cmp	w0, #0x25
    14d8:	b.eq	1448 <long_double_format+0x14>  // b.none
    14dc:	ldr	x0, [sp, #72]
    14e0:	add	x0, x0, #0x1
    14e4:	str	x0, [sp, #72]
    14e8:	ldr	x1, [sp, #24]
    14ec:	ldr	x0, [sp, #72]
    14f0:	add	x2, x1, x0
    14f4:	adrp	x0, 6000 <__fixtfdi+0x28>
    14f8:	add	x1, x0, #0x458
    14fc:	mov	x0, x2
    1500:	bl	1150 <strspn@plt>
    1504:	mov	x1, x0
    1508:	ldr	x0, [sp, #72]
    150c:	add	x0, x0, x1
    1510:	str	x0, [sp, #72]
    1514:	ldr	x1, [sp, #24]
    1518:	ldr	x0, [sp, #72]
    151c:	add	x2, x1, x0
    1520:	adrp	x0, 6000 <__fixtfdi+0x28>
    1524:	add	x1, x0, #0x460
    1528:	mov	x0, x2
    152c:	bl	1150 <strspn@plt>
    1530:	mov	x1, x0
    1534:	ldr	x0, [sp, #72]
    1538:	add	x0, x0, x1
    153c:	str	x0, [sp, #72]
    1540:	ldr	x1, [sp, #24]
    1544:	ldr	x0, [sp, #72]
    1548:	add	x0, x1, x0
    154c:	ldrb	w0, [x0]
    1550:	cmp	w0, #0x2e
    1554:	b.ne	1590 <long_double_format+0x15c>  // b.any
    1558:	ldr	x0, [sp, #72]
    155c:	add	x0, x0, #0x1
    1560:	str	x0, [sp, #72]
    1564:	ldr	x1, [sp, #24]
    1568:	ldr	x0, [sp, #72]
    156c:	add	x2, x1, x0
    1570:	adrp	x0, 6000 <__fixtfdi+0x28>
    1574:	add	x1, x0, #0x460
    1578:	mov	x0, x2
    157c:	bl	1150 <strspn@plt>
    1580:	mov	x1, x0
    1584:	ldr	x0, [sp, #72]
    1588:	add	x0, x0, x1
    158c:	str	x0, [sp, #72]
    1590:	ldr	x0, [sp, #72]
    1594:	str	x0, [sp, #64]
    1598:	ldr	x1, [sp, #24]
    159c:	ldr	x0, [sp, #72]
    15a0:	add	x0, x1, x0
    15a4:	ldrb	w0, [x0]
    15a8:	cmp	w0, #0x4c
    15ac:	cset	w0, eq  // eq = none
    15b0:	and	w0, w0, #0xff
    15b4:	str	w0, [sp, #60]
    15b8:	ldrsw	x0, [sp, #60]
    15bc:	ldr	x1, [sp, #72]
    15c0:	add	x0, x1, x0
    15c4:	str	x0, [sp, #72]
    15c8:	ldr	x1, [sp, #24]
    15cc:	ldr	x0, [sp, #72]
    15d0:	add	x0, x1, x0
    15d4:	ldrb	w0, [x0]
    15d8:	cmp	w0, #0x0
    15dc:	b.eq	1628 <long_double_format+0x1f4>  // b.none
    15e0:	cmp	w0, #0x0
    15e4:	b.lt	1640 <long_double_format+0x20c>  // b.tstop
    15e8:	cmp	w0, #0x67
    15ec:	b.gt	1640 <long_double_format+0x20c>
    15f0:	cmp	w0, #0x41
    15f4:	b.lt	1640 <long_double_format+0x20c>  // b.tstop
    15f8:	sub	w0, w0, #0x41
    15fc:	mov	x1, #0x1                   	// #1
    1600:	lsl	x1, x1, x0
    1604:	mov	x0, #0x71                  	// #113
    1608:	movk	x0, #0x71, lsl #32
    160c:	and	x0, x1, x0
    1610:	cmp	x0, #0x0
    1614:	cset	w0, ne  // ne = any
    1618:	and	w0, w0, #0xff
    161c:	cmp	w0, #0x0
    1620:	b.ne	166c <long_double_format+0x238>  // b.any
    1624:	b	1640 <long_double_format+0x20c>
    1628:	ldr	x1, [sp, #24]
    162c:	adrp	x0, 6000 <__fixtfdi+0x28>
    1630:	add	x0, x0, #0x470
    1634:	bl	1030 <builtin_error@plt>
    1638:	mov	x0, #0x0                   	// #0
    163c:	b	178c <long_double_format+0x358>
    1640:	ldr	x1, [sp, #24]
    1644:	ldr	x0, [sp, #72]
    1648:	add	x0, x1, x0
    164c:	ldrb	w0, [x0]
    1650:	mov	w2, w0
    1654:	ldr	x1, [sp, #24]
    1658:	adrp	x0, 6000 <__fixtfdi+0x28>
    165c:	add	x0, x0, #0x488
    1660:	bl	1030 <builtin_error@plt>
    1664:	mov	x0, #0x0                   	// #0
    1668:	b	178c <long_double_format+0x358>
    166c:	nop
    1670:	ldr	x0, [sp, #72]
    1674:	add	x0, x0, #0x1
    1678:	str	x0, [sp, #72]
    167c:	ldr	x1, [sp, #24]
    1680:	ldr	x0, [sp, #72]
    1684:	add	x0, x1, x0
    1688:	ldrb	w0, [x0]
    168c:	cmp	w0, #0x25
    1690:	b.ne	16c8 <long_double_format+0x294>  // b.any
    1694:	ldr	x0, [sp, #72]
    1698:	add	x0, x0, #0x1
    169c:	ldr	x1, [sp, #24]
    16a0:	add	x0, x1, x0
    16a4:	ldrb	w0, [x0]
    16a8:	cmp	w0, #0x25
    16ac:	b.eq	16c8 <long_double_format+0x294>  // b.none
    16b0:	ldr	x1, [sp, #24]
    16b4:	adrp	x0, 6000 <__fixtfdi+0x28>
    16b8:	add	x0, x0, #0x4b0
    16bc:	bl	1030 <builtin_error@plt>
    16c0:	mov	x0, #0x0                   	// #0
    16c4:	b	178c <long_double_format+0x358>
    16c8:	ldr	x1, [sp, #24]
    16cc:	ldr	x0, [sp, #72]
    16d0:	add	x0, x1, x0
    16d4:	ldrb	w0, [x0]
    16d8:	cmp	w0, #0x0
    16dc:	b.ne	1758 <long_double_format+0x324>  // b.any
    16e0:	ldr	x0, [sp, #72]
    16e4:	add	x0, x0, #0x1
    16e8:	str	x0, [sp, #48]
    16ec:	ldr	x0, [sp, #48]
    16f0:	add	x0, x0, #0x1
    16f4:	bl	10b0 <xmalloc@plt>
    16f8:	str	x0, [sp, #40]
    16fc:	ldr	x2, [sp, #64]
    1700:	ldr	x1, [sp, #24]
    1704:	ldr	x0, [sp, #40]
    1708:	bl	1000 <memcpy@plt>
    170c:	ldr	x1, [sp, #40]
    1710:	ldr	x0, [sp, #64]
    1714:	add	x0, x1, x0
    1718:	mov	w1, #0x4c                  	// #76
    171c:	strb	w1, [x0]
    1720:	ldr	x0, [sp, #64]
    1724:	add	x0, x0, #0x1
    1728:	ldr	x1, [sp, #40]
    172c:	add	x2, x1, x0
    1730:	ldrsw	x1, [sp, #60]
    1734:	ldr	x0, [sp, #64]
    1738:	add	x0, x1, x0
    173c:	ldr	x1, [sp, #24]
    1740:	add	x0, x1, x0
    1744:	mov	x1, x0
    1748:	mov	x0, x2
    174c:	bl	1180 <strcpy@plt>
    1750:	ldr	x0, [sp, #40]
    1754:	b	178c <long_double_format+0x358>
    1758:	ldr	x1, [sp, #24]
    175c:	ldr	x0, [sp, #72]
    1760:	add	x0, x1, x0
    1764:	ldrb	w0, [x0]
    1768:	cmp	w0, #0x25
    176c:	b.ne	1778 <long_double_format+0x344>  // b.any
    1770:	mov	x0, #0x2                   	// #2
    1774:	b	177c <long_double_format+0x348>
    1778:	mov	x0, #0x1                   	// #1
    177c:	ldr	x1, [sp, #72]
    1780:	add	x0, x1, x0
    1784:	str	x0, [sp, #72]
    1788:	b	167c <long_double_format+0x248>
    178c:	ldp	x29, x30, [sp], #80
    1790:	ret

0000000000001794 <getprec>:
    1794:	stp	x29, x30, [sp, #-48]!
    1798:	mov	x29, sp
    179c:	str	x0, [sp, #24]
    17a0:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    17a4:	add	x0, x0, #0x1c8
    17a8:	ldrb	w0, [x0]
    17ac:	mov	w1, w0
    17b0:	ldr	x0, [sp, #24]
    17b4:	bl	1160 <strchr@plt>
    17b8:	str	x0, [sp, #32]
    17bc:	ldr	x0, [sp, #32]
    17c0:	cmp	x0, #0x0
    17c4:	b.eq	17d4 <getprec+0x40>  // b.none
    17c8:	ldr	x0, [sp, #32]
    17cc:	add	x0, x0, #0x1
    17d0:	str	x0, [sp, #32]
    17d4:	str	wzr, [sp, #44]
    17d8:	b	17f4 <getprec+0x60>
    17dc:	ldr	w0, [sp, #44]
    17e0:	add	w0, w0, #0x1
    17e4:	str	w0, [sp, #44]
    17e8:	ldr	x0, [sp, #32]
    17ec:	add	x0, x0, #0x1
    17f0:	str	x0, [sp, #32]
    17f4:	ldr	x0, [sp, #32]
    17f8:	cmp	x0, #0x0
    17fc:	b.eq	183c <getprec+0xa8>  // b.none
    1800:	ldr	x0, [sp, #32]
    1804:	ldrb	w0, [x0]
    1808:	cmp	w0, #0x0
    180c:	b.eq	183c <getprec+0xa8>  // b.none
    1810:	bl	10f0 <__ctype_b_loc@plt>
    1814:	ldr	x1, [x0]
    1818:	ldr	x0, [sp, #32]
    181c:	ldrb	w0, [x0]
    1820:	and	x0, x0, #0xff
    1824:	lsl	x0, x0, #1
    1828:	add	x0, x1, x0
    182c:	ldrh	w0, [x0]
    1830:	and	w0, w0, #0x800
    1834:	cmp	w0, #0x0
    1838:	b.ne	17dc <getprec+0x48>  // b.any
    183c:	ldr	w0, [sp, #44]
    1840:	ldp	x29, x30, [sp], #48
    1844:	ret

0000000000001848 <genformat>:
    1848:	stp	x29, x30, [sp, #-96]!
    184c:	mov	x29, sp
    1850:	str	q0, [sp, #48]
    1854:	str	q1, [sp, #32]
    1858:	str	q2, [sp, #16]
    185c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1860:	add	x0, x0, #0x1bc
    1864:	ldr	w0, [x0]
    1868:	cmp	w0, #0x0
    186c:	b.ne	187c <genformat+0x34>  // b.any
    1870:	adrp	x0, 6000 <__fixtfdi+0x28>
    1874:	add	x0, x0, #0x4d8
    1878:	b	1a30 <genformat+0x1e8>
    187c:	ldr	q0, [sp, #32]
    1880:	adrp	x0, 6000 <__fixtfdi+0x28>
    1884:	add	x2, x0, #0x4d8
    1888:	mov	x1, #0x1c                  	// #28
    188c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1890:	add	x0, x0, #0x1d0
    1894:	bl	1070 <snprintf@plt>
    1898:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    189c:	add	x0, x0, #0x1d0
    18a0:	bl	1794 <getprec>
    18a4:	str	w0, [sp, #84]
    18a8:	ldr	q0, [sp, #48]
    18ac:	adrp	x0, 6000 <__fixtfdi+0x28>
    18b0:	add	x2, x0, #0x4d8
    18b4:	mov	x1, #0x1c                  	// #28
    18b8:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    18bc:	add	x0, x0, #0x1d0
    18c0:	bl	1070 <snprintf@plt>
    18c4:	str	w0, [sp, #92]
    18c8:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    18cc:	add	x0, x0, #0x1d0
    18d0:	bl	1794 <getprec>
    18d4:	str	w0, [sp, #80]
    18d8:	ldr	w0, [sp, #84]
    18dc:	ldr	w2, [sp, #80]
    18e0:	ldr	w1, [sp, #80]
    18e4:	cmp	w2, w0
    18e8:	csel	w0, w1, w0, ge  // ge = tcont
    18ec:	str	w0, [sp, #76]
    18f0:	ldr	q0, [sp, #16]
    18f4:	adrp	x0, 6000 <__fixtfdi+0x28>
    18f8:	add	x2, x0, #0x4d8
    18fc:	mov	x1, #0x1c                  	// #28
    1900:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1904:	add	x0, x0, #0x1d0
    1908:	bl	1070 <snprintf@plt>
    190c:	str	w0, [sp, #88]
    1910:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1914:	add	x0, x0, #0x1d0
    1918:	bl	1794 <getprec>
    191c:	str	w0, [sp, #72]
    1920:	ldr	w1, [sp, #76]
    1924:	ldr	w0, [sp, #80]
    1928:	sub	w0, w1, w0
    192c:	ldr	w1, [sp, #92]
    1930:	add	w0, w1, w0
    1934:	str	w0, [sp, #92]
    1938:	ldr	w1, [sp, #76]
    193c:	ldr	w0, [sp, #72]
    1940:	sub	w0, w1, w0
    1944:	ldr	w1, [sp, #88]
    1948:	add	w0, w1, w0
    194c:	str	w0, [sp, #88]
    1950:	ldr	w0, [sp, #72]
    1954:	cmp	w0, #0x0
    1958:	b.eq	1974 <genformat+0x12c>  // b.none
    195c:	ldr	w0, [sp, #76]
    1960:	cmp	w0, #0x0
    1964:	b.ne	1974 <genformat+0x12c>  // b.any
    1968:	ldr	w0, [sp, #88]
    196c:	sub	w0, w0, #0x1
    1970:	str	w0, [sp, #88]
    1974:	ldr	w0, [sp, #72]
    1978:	cmp	w0, #0x0
    197c:	b.ne	1998 <genformat+0x150>  // b.any
    1980:	ldr	w0, [sp, #76]
    1984:	cmp	w0, #0x0
    1988:	b.eq	1998 <genformat+0x150>  // b.none
    198c:	ldr	w0, [sp, #88]
    1990:	add	w0, w0, #0x1
    1994:	str	w0, [sp, #88]
    1998:	ldr	w0, [sp, #80]
    199c:	cmp	w0, #0x0
    19a0:	b.ne	19bc <genformat+0x174>  // b.any
    19a4:	ldr	w0, [sp, #76]
    19a8:	cmp	w0, #0x0
    19ac:	b.eq	19bc <genformat+0x174>  // b.none
    19b0:	ldr	w0, [sp, #92]
    19b4:	add	w0, w0, #0x1
    19b8:	str	w0, [sp, #92]
    19bc:	ldr	w0, [sp, #88]
    19c0:	ldr	w2, [sp, #92]
    19c4:	ldr	w1, [sp, #92]
    19c8:	cmp	w2, w0
    19cc:	csel	w0, w1, w0, ge  // ge = tcont
    19d0:	str	w0, [sp, #68]
    19d4:	ldr	w0, [sp, #68]
    19d8:	cmp	w0, #0x0
    19dc:	b.eq	1a08 <genformat+0x1c0>  // b.none
    19e0:	adrp	x0, 6000 <__fixtfdi+0x28>
    19e4:	add	x4, x0, #0x4e0
    19e8:	ldr	w3, [sp, #76]
    19ec:	ldr	w2, [sp, #68]
    19f0:	adrp	x0, 6000 <__fixtfdi+0x28>
    19f4:	add	x1, x0, #0x4e8
    19f8:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    19fc:	add	x0, x0, #0x1d0
    1a00:	bl	1060 <sprintf@plt>
    1a04:	b	1a28 <genformat+0x1e0>
    1a08:	adrp	x0, 6000 <__fixtfdi+0x28>
    1a0c:	add	x3, x0, #0x4e0
    1a10:	ldr	w2, [sp, #76]
    1a14:	adrp	x0, 6000 <__fixtfdi+0x28>
    1a18:	add	x1, x0, #0x4f8
    1a1c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1a20:	add	x0, x0, #0x1d0
    1a24:	bl	1060 <sprintf@plt>
    1a28:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1a2c:	add	x0, x0, #0x1d0
    1a30:	ldp	x29, x30, [sp], #96
    1a34:	ret

0000000000001a38 <print_fltseq>:
    1a38:	stp	x29, x30, [sp, #-144]!
    1a3c:	mov	x29, sp
    1a40:	str	x19, [sp, #16]
    1a44:	str	x0, [sp, #88]
    1a48:	str	q0, [sp, #64]
    1a4c:	str	q1, [sp, #48]
    1a50:	str	q2, [sp, #32]
    1a54:	str	wzr, [sp, #140]
    1a58:	adrp	x0, 6000 <__fixtfdi+0x28>
    1a5c:	add	x0, x0, #0x508
    1a60:	str	x0, [sp, #104]
    1a64:	ldr	q0, [sp, #64]
    1a68:	str	q0, [sp, #112]
    1a6c:	b	1b44 <print_fltseq+0x10c>
    1a70:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1a74:	ldr	x0, [x0, #4048]
    1a78:	ldr	w0, [x0]
    1a7c:	cmp	w0, #0x0
    1a80:	b.eq	1a94 <print_fltseq+0x5c>  // b.none
    1a84:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1a88:	ldr	x0, [x0, #4048]
    1a8c:	ldr	w0, [x0]
    1a90:	bl	1190 <termsig_handler@plt>
    1a94:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1a98:	ldr	x0, [x0, #4024]
    1a9c:	ldr	w0, [x0]
    1aa0:	cmp	w0, #0x0
    1aa4:	b.eq	1aac <print_fltseq+0x74>  // b.none
    1aa8:	bl	11b0 <throw_to_top_level@plt>
    1aac:	ldr	x0, [sp, #104]
    1ab0:	ldrb	w0, [x0]
    1ab4:	cmp	w0, #0x0
    1ab8:	b.eq	1ae8 <print_fltseq+0xb0>  // b.none
    1abc:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1ac0:	ldr	x0, [x0, #4016]
    1ac4:	ldr	x0, [x0]
    1ac8:	mov	x1, x0
    1acc:	ldr	x0, [sp, #104]
    1ad0:	bl	1020 <fputs@plt>
    1ad4:	cmn	w0, #0x1
    1ad8:	b.ne	1ae8 <print_fltseq+0xb0>  // b.any
    1adc:	mov	w0, #0x1                   	// #1
    1ae0:	bl	1170 <sh_chkwrite@plt>
    1ae4:	b	1be8 <print_fltseq+0x1b0>
    1ae8:	ldr	q0, [sp, #112]
    1aec:	ldr	x0, [sp, #88]
    1af0:	bl	11c0 <printf@plt>
    1af4:	cmp	w0, #0x0
    1af8:	b.ge	1b08 <print_fltseq+0xd0>  // b.tcont
    1afc:	mov	w0, #0x1                   	// #1
    1b00:	bl	1170 <sh_chkwrite@plt>
    1b04:	b	1be8 <print_fltseq+0x1b0>
    1b08:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1b0c:	add	x0, x0, #0x1c0
    1b10:	ldr	x0, [x0]
    1b14:	str	x0, [sp, #104]
    1b18:	ldr	w0, [sp, #140]
    1b1c:	add	w0, w0, #0x1
    1b20:	str	w0, [sp, #140]
    1b24:	ldr	w0, [sp, #140]
    1b28:	bl	5e50 <__floatsitf>
    1b2c:	ldr	q1, [sp, #32]
    1b30:	bl	491c <__multf3>
    1b34:	mov	v1.16b, v0.16b
    1b38:	ldr	q0, [sp, #64]
    1b3c:	bl	2470 <__addtf3>
    1b40:	str	q0, [sp, #112]
    1b44:	movi	v1.2d, #0x0
    1b48:	ldr	q0, [sp, #32]
    1b4c:	bl	42b4 <__getf2>
    1b50:	cmp	w0, #0x0
    1b54:	b.lt	1b7c <print_fltseq+0x144>  // b.tstop
    1b58:	mov	w19, #0x1                   	// #1
    1b5c:	ldr	q1, [sp, #48]
    1b60:	ldr	q0, [sp, #112]
    1b64:	bl	45e8 <__letf2>
    1b68:	cmp	w0, #0x0
    1b6c:	b.le	1b74 <print_fltseq+0x13c>
    1b70:	mov	w19, #0x0                   	// #0
    1b74:	and	w0, w19, #0xff
    1b78:	b	1b9c <print_fltseq+0x164>
    1b7c:	mov	w19, #0x1                   	// #1
    1b80:	ldr	q1, [sp, #48]
    1b84:	ldr	q0, [sp, #112]
    1b88:	bl	42b4 <__getf2>
    1b8c:	cmp	w0, #0x0
    1b90:	b.ge	1b98 <print_fltseq+0x160>  // b.tcont
    1b94:	mov	w19, #0x0                   	// #0
    1b98:	and	w0, w19, #0xff
    1b9c:	cmp	w0, #0x0
    1ba0:	b.ne	1a70 <print_fltseq+0x38>  // b.any
    1ba4:	ldr	w0, [sp, #140]
    1ba8:	cmp	w0, #0x0
    1bac:	b.le	1be0 <print_fltseq+0x1a8>
    1bb0:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1bb4:	ldr	x0, [x0, #4016]
    1bb8:	ldr	x0, [x0]
    1bbc:	mov	x1, x0
    1bc0:	adrp	x0, 6000 <__fixtfdi+0x28>
    1bc4:	add	x0, x0, #0x420
    1bc8:	bl	1020 <fputs@plt>
    1bcc:	cmn	w0, #0x1
    1bd0:	b.ne	1be0 <print_fltseq+0x1a8>  // b.any
    1bd4:	mov	w0, #0x1                   	// #1
    1bd8:	bl	1170 <sh_chkwrite@plt>
    1bdc:	b	1be8 <print_fltseq+0x1b0>
    1be0:	mov	w0, #0x0                   	// #0
    1be4:	bl	1170 <sh_chkwrite@plt>
    1be8:	ldr	x19, [sp, #16]
    1bec:	ldp	x29, x30, [sp], #144
    1bf0:	ret

0000000000001bf4 <width_needed>:
    1bf4:	sub	sp, sp, #0x20
    1bf8:	str	x0, [sp, #8]
    1bfc:	ldr	x0, [sp, #8]
    1c00:	lsr	x0, x0, #63
    1c04:	and	w0, w0, #0xff
    1c08:	str	w0, [sp, #28]
    1c0c:	ldr	w0, [sp, #28]
    1c10:	cmp	w0, #0x0
    1c14:	b.eq	1c24 <width_needed+0x30>  // b.none
    1c18:	ldr	x0, [sp, #8]
    1c1c:	neg	x0, x0
    1c20:	str	x0, [sp, #8]
    1c24:	ldr	w0, [sp, #28]
    1c28:	add	w0, w0, #0x1
    1c2c:	str	w0, [sp, #28]
    1c30:	ldr	x0, [sp, #8]
    1c34:	mov	x1, #0x6666666666666666    	// #7378697629483820646
    1c38:	movk	x1, #0x6667
    1c3c:	smulh	x1, x0, x1
    1c40:	asr	x1, x1, #2
    1c44:	asr	x0, x0, #63
    1c48:	sub	x0, x1, x0
    1c4c:	str	x0, [sp, #8]
    1c50:	ldr	x0, [sp, #8]
    1c54:	cmp	x0, #0x0
    1c58:	b.ne	1c24 <width_needed+0x30>  // b.any
    1c5c:	ldr	w0, [sp, #28]
    1c60:	add	sp, sp, #0x20
    1c64:	ret

0000000000001c68 <print_intseq>:
    1c68:	stp	x29, x30, [sp, #-112]!
    1c6c:	mov	x29, sp
    1c70:	str	x0, [sp, #40]
    1c74:	str	x1, [sp, #32]
    1c78:	str	x2, [sp, #24]
    1c7c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1c80:	add	x0, x0, #0x1bc
    1c84:	ldr	w0, [x0]
    1c88:	cmp	w0, #0x0
    1c8c:	b.eq	1cdc <print_intseq+0x74>  // b.none
    1c90:	ldr	x0, [sp, #40]
    1c94:	bl	11a0 <width_needed@plt>
    1c98:	str	w0, [sp, #92]
    1c9c:	ldr	x0, [sp, #32]
    1ca0:	bl	11a0 <width_needed@plt>
    1ca4:	str	w0, [sp, #88]
    1ca8:	ldr	w0, [sp, #88]
    1cac:	ldr	w2, [sp, #92]
    1cb0:	ldr	w1, [sp, #92]
    1cb4:	cmp	w2, w0
    1cb8:	csel	w0, w1, w0, ge  // ge = tcont
    1cbc:	str	w0, [sp, #84]
    1cc0:	add	x4, sp, #0x30
    1cc4:	ldr	w3, [sp, #84]
    1cc8:	adrp	x0, 6000 <__fixtfdi+0x28>
    1ccc:	add	x2, x0, #0x510
    1cd0:	mov	x1, #0x14                  	// #20
    1cd4:	mov	x0, x4
    1cd8:	bl	1070 <snprintf@plt>
    1cdc:	adrp	x0, 6000 <__fixtfdi+0x28>
    1ce0:	add	x0, x0, #0x508
    1ce4:	str	x0, [sp, #104]
    1ce8:	ldr	x0, [sp, #40]
    1cec:	str	x0, [sp, #96]
    1cf0:	b	1d9c <print_intseq+0x134>
    1cf4:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1cf8:	ldr	x0, [x0, #4048]
    1cfc:	ldr	w0, [x0]
    1d00:	cmp	w0, #0x0
    1d04:	b.eq	1d18 <print_intseq+0xb0>  // b.none
    1d08:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1d0c:	ldr	x0, [x0, #4048]
    1d10:	ldr	w0, [x0]
    1d14:	bl	1190 <termsig_handler@plt>
    1d18:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1d1c:	ldr	x0, [x0, #4024]
    1d20:	ldr	w0, [x0]
    1d24:	cmp	w0, #0x0
    1d28:	b.eq	1d30 <print_intseq+0xc8>  // b.none
    1d2c:	bl	11b0 <throw_to_top_level@plt>
    1d30:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1d34:	add	x0, x0, #0x1bc
    1d38:	ldr	w0, [x0]
    1d3c:	cmp	w0, #0x0
    1d40:	b.eq	1d4c <print_intseq+0xe4>  // b.none
    1d44:	add	x0, sp, #0x30
    1d48:	b	1d54 <print_intseq+0xec>
    1d4c:	adrp	x0, 6000 <__fixtfdi+0x28>
    1d50:	add	x0, x0, #0x520
    1d54:	ldr	x2, [sp, #96]
    1d58:	ldr	x1, [sp, #104]
    1d5c:	bl	11c0 <printf@plt>
    1d60:	cmp	w0, #0x0
    1d64:	b.ge	1d74 <print_intseq+0x10c>  // b.tcont
    1d68:	mov	w0, #0x1                   	// #1
    1d6c:	bl	1170 <sh_chkwrite@plt>
    1d70:	b	1e18 <print_intseq+0x1b0>
    1d74:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1d78:	add	x0, x0, #0x1c0
    1d7c:	ldr	x0, [x0]
    1d80:	str	x0, [sp, #104]
    1d84:	ldr	x1, [sp, #96]
    1d88:	ldr	x0, [sp, #24]
    1d8c:	add	x0, x1, x0
    1d90:	str	x0, [sp, #72]
    1d94:	ldr	x0, [sp, #72]
    1d98:	str	x0, [sp, #96]
    1d9c:	ldr	x1, [sp, #40]
    1da0:	ldr	x0, [sp, #32]
    1da4:	cmp	x1, x0
    1da8:	b.gt	1dc4 <print_intseq+0x15c>
    1dac:	ldr	x1, [sp, #96]
    1db0:	ldr	x0, [sp, #32]
    1db4:	cmp	x1, x0
    1db8:	cset	w0, le
    1dbc:	and	w0, w0, #0xff
    1dc0:	b	1dd8 <print_intseq+0x170>
    1dc4:	ldr	x1, [sp, #96]
    1dc8:	ldr	x0, [sp, #32]
    1dcc:	cmp	x1, x0
    1dd0:	cset	w0, ge  // ge = tcont
    1dd4:	and	w0, w0, #0xff
    1dd8:	cmp	w0, #0x0
    1ddc:	b.ne	1cf4 <print_intseq+0x8c>  // b.any
    1de0:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1de4:	ldr	x0, [x0, #4016]
    1de8:	ldr	x0, [x0]
    1dec:	mov	x1, x0
    1df0:	adrp	x0, 6000 <__fixtfdi+0x28>
    1df4:	add	x0, x0, #0x420
    1df8:	bl	1020 <fputs@plt>
    1dfc:	cmn	w0, #0x1
    1e00:	b.ne	1e10 <print_intseq+0x1a8>  // b.any
    1e04:	mov	w0, #0x1                   	// #1
    1e08:	bl	1170 <sh_chkwrite@plt>
    1e0c:	b	1e18 <print_intseq+0x1b0>
    1e10:	mov	w0, #0x0                   	// #0
    1e14:	bl	1170 <sh_chkwrite@plt>
    1e18:	ldp	x29, x30, [sp], #112
    1e1c:	ret

0000000000001e20 <seq_builtin>:
    1e20:	stp	x29, x30, [sp, #-160]!
    1e24:	mov	x29, sp
    1e28:	str	x0, [sp, #24]
    1e2c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1e30:	add	x0, x0, #0x1bc
    1e34:	str	wzr, [x0]
    1e38:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    1e3c:	add	x0, x0, #0x1c0
    1e40:	adrp	x1, 6000 <__fixtfdi+0x28>
    1e44:	add	x1, x1, #0x528
    1e48:	str	x1, [x0]
    1e4c:	str	xzr, [sp, #80]
    1e50:	adrp	x0, 6000 <__fixtfdi+0x28>
    1e54:	add	x0, x0, #0x910
    1e58:	ldr	q0, [x0]
    1e5c:	str	q0, [sp, #144]
    1e60:	stp	xzr, xzr, [sp, #64]
    1e64:	stp	xzr, xzr, [sp, #128]
    1e68:	str	xzr, [sp, #56]
    1e6c:	ldr	x0, [sp, #56]
    1e70:	str	x0, [sp, #48]
    1e74:	ldr	x0, [sp, #48]
    1e78:	str	x0, [sp, #40]
    1e7c:	str	xzr, [sp, #32]
    1e80:	ldr	x0, [sp, #32]
    1e84:	str	x0, [sp, #88]
    1e88:	ldr	x0, [sp, #88]
    1e8c:	str	x0, [sp, #96]
    1e90:	str	wzr, [sp, #104]
    1e94:	ldr	w0, [sp, #104]
    1e98:	str	w0, [sp, #108]
    1e9c:	str	wzr, [sp, #116]
    1ea0:	bl	1140 <reset_internal_getopt@plt>
    1ea4:	b	2048 <seq_builtin+0x228>
    1ea8:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1eac:	ldr	x0, [x0, #4008]
    1eb0:	ldr	x0, [x0]
    1eb4:	cmp	x0, #0x0
    1eb8:	b.eq	1ecc <seq_builtin+0xac>  // b.none
    1ebc:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1ec0:	ldr	x0, [x0, #4008]
    1ec4:	ldr	x0, [x0]
    1ec8:	b	1ed0 <seq_builtin+0xb0>
    1ecc:	ldr	x0, [sp, #24]
    1ed0:	str	x0, [sp, #120]
    1ed4:	ldr	x0, [sp, #120]
    1ed8:	cmp	x0, #0x0
    1edc:	b.eq	1f84 <seq_builtin+0x164>  // b.none
    1ee0:	ldr	x0, [sp, #120]
    1ee4:	ldr	x0, [x0, #8]
    1ee8:	cmp	x0, #0x0
    1eec:	b.eq	1f84 <seq_builtin+0x164>  // b.none
    1ef0:	ldr	x0, [sp, #120]
    1ef4:	ldr	x0, [x0, #8]
    1ef8:	ldr	x0, [x0]
    1efc:	cmp	x0, #0x0
    1f00:	b.eq	1f84 <seq_builtin+0x164>  // b.none
    1f04:	ldr	x0, [sp, #120]
    1f08:	ldr	x0, [x0, #8]
    1f0c:	ldr	x0, [x0]
    1f10:	ldrb	w0, [x0]
    1f14:	cmp	w0, #0x2d
    1f18:	b.ne	1f84 <seq_builtin+0x164>  // b.any
    1f1c:	ldr	x0, [sp, #120]
    1f20:	ldr	x0, [x0, #8]
    1f24:	ldr	x0, [x0]
    1f28:	add	x0, x0, #0x1
    1f2c:	ldrb	w0, [x0]
    1f30:	cmp	w0, #0x2e
    1f34:	b.eq	1f70 <seq_builtin+0x150>  // b.none
    1f38:	ldr	x0, [sp, #120]
    1f3c:	ldr	x0, [x0, #8]
    1f40:	ldr	x0, [x0]
    1f44:	add	x0, x0, #0x1
    1f48:	ldrb	w0, [x0]
    1f4c:	cmp	w0, #0x2f
    1f50:	b.ls	1f84 <seq_builtin+0x164>  // b.plast
    1f54:	ldr	x0, [sp, #120]
    1f58:	ldr	x0, [x0, #8]
    1f5c:	ldr	x0, [x0]
    1f60:	add	x0, x0, #0x1
    1f64:	ldrb	w0, [x0]
    1f68:	cmp	w0, #0x39
    1f6c:	b.hi	1f84 <seq_builtin+0x164>  // b.pmore
    1f70:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1f74:	ldr	x0, [x0, #4056]
    1f78:	ldr	x1, [sp, #120]
    1f7c:	str	x1, [x0]
    1f80:	b	205c <seq_builtin+0x23c>
    1f84:	adrp	x0, 6000 <__fixtfdi+0x28>
    1f88:	add	x1, x0, #0x530
    1f8c:	ldr	x0, [sp, #24]
    1f90:	bl	1130 <internal_getopt@plt>
    1f94:	str	w0, [sp, #116]
    1f98:	ldr	w0, [sp, #116]
    1f9c:	cmn	w0, #0x1
    1fa0:	b.eq	2058 <seq_builtin+0x238>  // b.none
    1fa4:	ldr	w0, [sp, #116]
    1fa8:	cmp	w0, #0x77
    1fac:	b.eq	201c <seq_builtin+0x1fc>  // b.none
    1fb0:	ldr	w0, [sp, #116]
    1fb4:	cmp	w0, #0x77
    1fb8:	b.gt	203c <seq_builtin+0x21c>
    1fbc:	ldr	w0, [sp, #116]
    1fc0:	cmp	w0, #0x73
    1fc4:	b.eq	2000 <seq_builtin+0x1e0>  // b.none
    1fc8:	ldr	w0, [sp, #116]
    1fcc:	cmp	w0, #0x73
    1fd0:	b.gt	203c <seq_builtin+0x21c>
    1fd4:	ldr	w0, [sp, #116]
    1fd8:	cmn	w0, #0x63
    1fdc:	b.eq	2030 <seq_builtin+0x210>  // b.none
    1fe0:	ldr	w0, [sp, #116]
    1fe4:	cmp	w0, #0x66
    1fe8:	b.ne	203c <seq_builtin+0x21c>  // b.any
    1fec:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    1ff0:	ldr	x0, [x0, #4040]
    1ff4:	ldr	x0, [x0]
    1ff8:	str	x0, [sp, #80]
    1ffc:	b	2048 <seq_builtin+0x228>
    2000:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    2004:	ldr	x0, [x0, #4040]
    2008:	ldr	x1, [x0]
    200c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2010:	add	x0, x0, #0x1c0
    2014:	str	x1, [x0]
    2018:	b	2048 <seq_builtin+0x228>
    201c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2020:	add	x0, x0, #0x1bc
    2024:	mov	w1, #0x1                   	// #1
    2028:	str	w1, [x0]
    202c:	b	2048 <seq_builtin+0x228>
    2030:	bl	10a0 <builtin_help@plt>
    2034:	mov	w0, #0x102                 	// #258
    2038:	b	2468 <seq_builtin+0x648>
    203c:	bl	10c0 <builtin_usage@plt>
    2040:	mov	w0, #0x102                 	// #258
    2044:	b	2468 <seq_builtin+0x648>
    2048:	ldr	w0, [sp, #116]
    204c:	cmn	w0, #0x1
    2050:	b.ne	1ea8 <seq_builtin+0x88>  // b.any
    2054:	b	205c <seq_builtin+0x23c>
    2058:	nop
    205c:	adrp	x0, 16000 <__FRAME_END__+0xf390>
    2060:	ldr	x0, [x0, #4056]
    2064:	ldr	x0, [x0]
    2068:	str	x0, [sp, #24]
    206c:	ldr	x0, [sp, #24]
    2070:	cmp	x0, #0x0
    2074:	b.ne	2084 <seq_builtin+0x264>  // b.any
    2078:	bl	10c0 <builtin_usage@plt>
    207c:	mov	w0, #0x1                   	// #1
    2080:	b	2468 <seq_builtin+0x648>
    2084:	mov	w0, #0x1                   	// #1
    2088:	str	w0, [sp, #112]
    208c:	ldr	x0, [sp, #24]
    2090:	str	x0, [sp, #120]
    2094:	b	20b0 <seq_builtin+0x290>
    2098:	ldr	w0, [sp, #112]
    209c:	add	w0, w0, #0x1
    20a0:	str	w0, [sp, #112]
    20a4:	ldr	x0, [sp, #120]
    20a8:	ldr	x0, [x0]
    20ac:	str	x0, [sp, #120]
    20b0:	ldr	x0, [sp, #120]
    20b4:	ldr	x0, [x0]
    20b8:	cmp	x0, #0x0
    20bc:	b.ne	2098 <seq_builtin+0x278>  // b.any
    20c0:	ldr	w0, [sp, #112]
    20c4:	cmp	w0, #0x3
    20c8:	b.le	20d8 <seq_builtin+0x2b8>
    20cc:	bl	10c0 <builtin_usage@plt>
    20d0:	mov	w0, #0x1                   	// #1
    20d4:	b	2468 <seq_builtin+0x648>
    20d8:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    20dc:	add	x0, x0, #0x1b8
    20e0:	str	wzr, [x0]
    20e4:	ldr	x0, [sp, #120]
    20e8:	ldr	x0, [x0, #8]
    20ec:	ldr	x0, [x0]
    20f0:	str	x0, [sp, #32]
    20f4:	ldr	x0, [sp, #32]
    20f8:	bl	1380 <getfloatmax>
    20fc:	str	q0, [sp, #64]
    2100:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2104:	add	x0, x0, #0x1b8
    2108:	ldr	w0, [x0]
    210c:	cmp	w0, #0x0
    2110:	b.eq	211c <seq_builtin+0x2fc>  // b.none
    2114:	mov	w0, #0x1                   	// #1
    2118:	b	2468 <seq_builtin+0x648>
    211c:	ldr	w0, [sp, #112]
    2120:	cmp	w0, #0x1
    2124:	b.le	216c <seq_builtin+0x34c>
    2128:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    212c:	add	x0, x0, #0x1b8
    2130:	str	wzr, [x0]
    2134:	ldr	x0, [sp, #24]
    2138:	ldr	x0, [x0, #8]
    213c:	ldr	x0, [x0]
    2140:	str	x0, [sp, #96]
    2144:	ldr	x0, [sp, #96]
    2148:	bl	1380 <getfloatmax>
    214c:	str	q0, [sp, #144]
    2150:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2154:	add	x0, x0, #0x1b8
    2158:	ldr	w0, [x0]
    215c:	cmp	w0, #0x0
    2160:	b.eq	216c <seq_builtin+0x34c>  // b.none
    2164:	mov	w0, #0x1                   	// #1
    2168:	b	2468 <seq_builtin+0x648>
    216c:	ldr	w0, [sp, #112]
    2170:	cmp	w0, #0x2
    2174:	b.le	2214 <seq_builtin+0x3f4>
    2178:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    217c:	add	x0, x0, #0x1b8
    2180:	str	wzr, [x0]
    2184:	ldr	x0, [sp, #24]
    2188:	ldr	x0, [x0]
    218c:	ldr	x0, [x0, #8]
    2190:	ldr	x0, [x0]
    2194:	str	x0, [sp, #88]
    2198:	ldr	x0, [sp, #88]
    219c:	bl	1380 <getfloatmax>
    21a0:	str	q0, [sp, #128]
    21a4:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    21a8:	add	x0, x0, #0x1b8
    21ac:	ldr	w0, [x0]
    21b0:	cmp	w0, #0x0
    21b4:	b.eq	21c0 <seq_builtin+0x3a0>  // b.none
    21b8:	mov	w0, #0x1                   	// #1
    21bc:	b	2468 <seq_builtin+0x648>
    21c0:	movi	v1.2d, #0x0
    21c4:	ldr	q0, [sp, #128]
    21c8:	bl	407c <__eqtf2>
    21cc:	cmp	w0, #0x0
    21d0:	b.ne	2214 <seq_builtin+0x3f4>  // b.any
    21d4:	ldr	q1, [sp, #64]
    21d8:	ldr	q0, [sp, #144]
    21dc:	bl	45e8 <__letf2>
    21e0:	cmp	w0, #0x0
    21e4:	b.ge	21f4 <seq_builtin+0x3d4>  // b.tcont
    21e8:	adrp	x0, 6000 <__fixtfdi+0x28>
    21ec:	add	x0, x0, #0x538
    21f0:	b	21fc <seq_builtin+0x3dc>
    21f4:	adrp	x0, 6000 <__fixtfdi+0x28>
    21f8:	add	x0, x0, #0x540
    21fc:	mov	x1, x0
    2200:	adrp	x0, 6000 <__fixtfdi+0x28>
    2204:	add	x0, x0, #0x548
    2208:	bl	1030 <builtin_error@plt>
    220c:	mov	w0, #0x1                   	// #1
    2210:	b	2468 <seq_builtin+0x648>
    2214:	movi	v1.2d, #0x0
    2218:	ldr	q0, [sp, #128]
    221c:	bl	407c <__eqtf2>
    2220:	cmp	w0, #0x0
    2224:	b.ne	225c <seq_builtin+0x43c>  // b.any
    2228:	ldr	q1, [sp, #64]
    222c:	ldr	q0, [sp, #144]
    2230:	bl	45e8 <__letf2>
    2234:	cmp	w0, #0x0
    2238:	b.gt	224c <seq_builtin+0x42c>
    223c:	adrp	x0, 6000 <__fixtfdi+0x28>
    2240:	add	x0, x0, #0x910
    2244:	ldr	q0, [x0]
    2248:	b	2258 <seq_builtin+0x438>
    224c:	adrp	x0, 6000 <__fixtfdi+0x28>
    2250:	add	x0, x0, #0x920
    2254:	ldr	q0, [x0]
    2258:	str	q0, [sp, #128]
    225c:	movi	v1.2d, #0x0
    2260:	ldr	q0, [sp, #128]
    2264:	bl	45e8 <__letf2>
    2268:	cmp	w0, #0x0
    226c:	b.ge	2284 <seq_builtin+0x464>  // b.tcont
    2270:	ldr	q1, [sp, #64]
    2274:	ldr	q0, [sp, #144]
    2278:	bl	45e8 <__letf2>
    227c:	cmp	w0, #0x0
    2280:	b.lt	22ac <seq_builtin+0x48c>  // b.tstop
    2284:	movi	v1.2d, #0x0
    2288:	ldr	q0, [sp, #128]
    228c:	bl	42b4 <__getf2>
    2290:	cmp	w0, #0x0
    2294:	b.le	22ec <seq_builtin+0x4cc>
    2298:	ldr	q1, [sp, #64]
    229c:	ldr	q0, [sp, #144]
    22a0:	bl	42b4 <__getf2>
    22a4:	cmp	w0, #0x0
    22a8:	b.le	22ec <seq_builtin+0x4cc>
    22ac:	ldr	q1, [sp, #64]
    22b0:	ldr	q0, [sp, #144]
    22b4:	bl	45e8 <__letf2>
    22b8:	cmp	w0, #0x0
    22bc:	b.ge	22cc <seq_builtin+0x4ac>  // b.tcont
    22c0:	adrp	x0, 6000 <__fixtfdi+0x28>
    22c4:	add	x0, x0, #0x538
    22c8:	b	22d4 <seq_builtin+0x4b4>
    22cc:	adrp	x0, 6000 <__fixtfdi+0x28>
    22d0:	add	x0, x0, #0x540
    22d4:	mov	x1, x0
    22d8:	adrp	x0, 6000 <__fixtfdi+0x28>
    22dc:	add	x0, x0, #0x558
    22e0:	bl	1030 <builtin_error@plt>
    22e4:	mov	w0, #0x1                   	// #1
    22e8:	b	2468 <seq_builtin+0x648>
    22ec:	ldr	x0, [sp, #80]
    22f0:	cmp	x0, #0x0
    22f4:	b.eq	2320 <seq_builtin+0x500>  // b.none
    22f8:	ldr	x0, [sp, #80]
    22fc:	bl	1434 <long_double_format>
    2300:	str	x0, [sp, #80]
    2304:	mov	w0, #0x1                   	// #1
    2308:	str	w0, [sp, #104]
    230c:	ldr	x0, [sp, #80]
    2310:	cmp	x0, #0x0
    2314:	b.ne	2320 <seq_builtin+0x500>  // b.any
    2318:	mov	w0, #0x1                   	// #1
    231c:	b	2468 <seq_builtin+0x648>
    2320:	ldr	x0, [sp, #80]
    2324:	cmp	x0, #0x0
    2328:	b.eq	2358 <seq_builtin+0x538>  // b.none
    232c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2330:	add	x0, x0, #0x1bc
    2334:	ldr	w0, [x0]
    2338:	cmp	w0, #0x0
    233c:	b.eq	2358 <seq_builtin+0x538>  // b.none
    2340:	adrp	x0, 6000 <__fixtfdi+0x28>
    2344:	add	x0, x0, #0x570
    2348:	bl	1040 <builtin_warning@plt>
    234c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2350:	add	x0, x0, #0x1bc
    2354:	str	wzr, [x0]
    2358:	ldr	x0, [sp, #32]
    235c:	cmp	x0, #0x0
    2360:	b.eq	23c0 <seq_builtin+0x5a0>  // b.none
    2364:	ldr	x0, [sp, #32]
    2368:	bl	1010 <all_digits@plt>
    236c:	cmp	w0, #0x0
    2370:	b.eq	23c0 <seq_builtin+0x5a0>  // b.none
    2374:	ldr	x0, [sp, #96]
    2378:	cmp	x0, #0x0
    237c:	b.eq	2390 <seq_builtin+0x570>  // b.none
    2380:	ldr	x0, [sp, #96]
    2384:	bl	1010 <all_digits@plt>
    2388:	cmp	w0, #0x0
    238c:	b.eq	23c0 <seq_builtin+0x5a0>  // b.none
    2390:	ldr	x0, [sp, #88]
    2394:	cmp	x0, #0x0
    2398:	b.eq	23ac <seq_builtin+0x58c>  // b.none
    239c:	ldr	x0, [sp, #88]
    23a0:	bl	1010 <all_digits@plt>
    23a4:	cmp	w0, #0x0
    23a8:	b.eq	23c0 <seq_builtin+0x5a0>  // b.none
    23ac:	ldr	x0, [sp, #80]
    23b0:	cmp	x0, #0x0
    23b4:	b.ne	23c0 <seq_builtin+0x5a0>  // b.any
    23b8:	mov	w0, #0x1                   	// #1
    23bc:	str	w0, [sp, #108]
    23c0:	ldr	w0, [sp, #108]
    23c4:	cmp	w0, #0x0
    23c8:	b.eq	2404 <seq_builtin+0x5e4>  // b.none
    23cc:	ldr	q0, [sp, #144]
    23d0:	bl	5fd8 <__fixtfdi>
    23d4:	str	x0, [sp, #40]
    23d8:	ldr	q0, [sp, #64]
    23dc:	bl	5fd8 <__fixtfdi>
    23e0:	str	x0, [sp, #48]
    23e4:	ldr	q0, [sp, #128]
    23e8:	bl	5fd8 <__fixtfdi>
    23ec:	str	x0, [sp, #56]
    23f0:	ldr	x2, [sp, #56]
    23f4:	ldr	x1, [sp, #48]
    23f8:	ldr	x0, [sp, #40]
    23fc:	bl	1090 <print_intseq@plt>
    2400:	b	2468 <seq_builtin+0x648>
    2404:	bl	1080 <locale_decpoint@plt>
    2408:	and	w1, w0, #0xff
    240c:	adrp	x0, 17000 <memcpy@GLIBC_2.17>
    2410:	add	x0, x0, #0x1c8
    2414:	strb	w1, [x0]
    2418:	ldr	x0, [sp, #80]
    241c:	cmp	x0, #0x0
    2420:	b.ne	2438 <seq_builtin+0x618>  // b.any
    2424:	ldr	q2, [sp, #64]
    2428:	ldr	q1, [sp, #128]
    242c:	ldr	q0, [sp, #144]
    2430:	bl	1848 <genformat>
    2434:	str	x0, [sp, #80]
    2438:	ldr	q2, [sp, #128]
    243c:	ldr	q1, [sp, #64]
    2440:	ldr	q0, [sp, #144]
    2444:	ldr	x0, [sp, #80]
    2448:	bl	1110 <print_fltseq@plt>
    244c:	ldr	w0, [sp, #104]
    2450:	cmp	w0, #0x0
    2454:	b.eq	2460 <seq_builtin+0x640>  // b.none
    2458:	ldr	x0, [sp, #80]
    245c:	bl	1120 <free@plt>
    2460:	mov	w0, #0x0                   	// #0
    2464:	bl	1170 <sh_chkwrite@plt>
    2468:	ldp	x29, x30, [sp], #160
    246c:	ret

0000000000002470 <__addtf3>:
    2470:	stp	x29, x30, [sp, #-400]!
    2474:	mov	x29, sp
    2478:	str	q0, [sp, #32]
    247c:	str	q1, [sp, #16]
    2480:	str	wzr, [sp, #356]
    2484:	str	xzr, [sp, #304]
    2488:	mrs	x0, fpcr
    248c:	str	x0, [sp, #304]
    2490:	ldr	q0, [sp, #32]
    2494:	str	q0, [sp, #80]
    2498:	ldr	x0, [sp, #80]
    249c:	str	x0, [sp, #360]
    24a0:	ldr	x0, [sp, #88]
    24a4:	ubfx	x0, x0, #0, #48
    24a8:	str	x0, [sp, #376]
    24ac:	ldrh	w0, [sp, #94]
    24b0:	ubfx	x0, x0, #0, #15
    24b4:	and	w0, w0, #0xffff
    24b8:	and	x0, x0, #0xffff
    24bc:	str	x0, [sp, #296]
    24c0:	ldrb	w0, [sp, #95]
    24c4:	ubfx	x0, x0, #7, #1
    24c8:	and	w0, w0, #0xff
    24cc:	and	x0, x0, #0xff
    24d0:	str	x0, [sp, #288]
    24d4:	ldr	x0, [sp, #376]
    24d8:	lsl	x1, x0, #3
    24dc:	ldr	x0, [sp, #360]
    24e0:	lsr	x0, x0, #61
    24e4:	orr	x0, x1, x0
    24e8:	str	x0, [sp, #376]
    24ec:	ldr	x0, [sp, #360]
    24f0:	lsl	x0, x0, #3
    24f4:	str	x0, [sp, #360]
    24f8:	ldr	q0, [sp, #16]
    24fc:	str	q0, [sp, #64]
    2500:	ldr	x0, [sp, #64]
    2504:	str	x0, [sp, #368]
    2508:	ldr	x0, [sp, #72]
    250c:	ubfx	x0, x0, #0, #48
    2510:	str	x0, [sp, #392]
    2514:	ldrh	w0, [sp, #78]
    2518:	ubfx	x0, x0, #0, #15
    251c:	and	w0, w0, #0xffff
    2520:	and	x0, x0, #0xffff
    2524:	str	x0, [sp, #280]
    2528:	ldrb	w0, [sp, #79]
    252c:	ubfx	x0, x0, #7, #1
    2530:	and	w0, w0, #0xff
    2534:	and	x0, x0, #0xff
    2538:	str	x0, [sp, #272]
    253c:	ldr	x0, [sp, #392]
    2540:	lsl	x1, x0, #3
    2544:	ldr	x0, [sp, #368]
    2548:	lsr	x0, x0, #61
    254c:	orr	x0, x1, x0
    2550:	str	x0, [sp, #392]
    2554:	ldr	x0, [sp, #368]
    2558:	lsl	x0, x0, #3
    255c:	str	x0, [sp, #368]
    2560:	ldr	x1, [sp, #288]
    2564:	ldr	x0, [sp, #272]
    2568:	cmp	x1, x0
    256c:	b.ne	3054 <__addtf3+0xbe4>  // b.any
    2570:	ldr	x0, [sp, #288]
    2574:	str	x0, [sp, #384]
    2578:	ldr	x0, [sp, #296]
    257c:	mov	w1, w0
    2580:	ldr	x0, [sp, #280]
    2584:	sub	w0, w1, w0
    2588:	str	w0, [sp, #324]
    258c:	ldr	w0, [sp, #324]
    2590:	cmp	w0, #0x0
    2594:	b.le	2894 <__addtf3+0x424>
    2598:	ldr	x0, [sp, #296]
    259c:	str	x0, [sp, #344]
    25a0:	ldr	x0, [sp, #280]
    25a4:	cmp	x0, #0x0
    25a8:	b.ne	26d8 <__addtf3+0x268>  // b.any
    25ac:	ldr	x1, [sp, #392]
    25b0:	ldr	x0, [sp, #368]
    25b4:	orr	x0, x1, x0
    25b8:	cmp	x0, #0x0
    25bc:	b.ne	2614 <__addtf3+0x1a4>  // b.any
    25c0:	ldr	x1, [sp, #296]
    25c4:	mov	x0, #0x7fff                	// #32767
    25c8:	cmp	x1, x0
    25cc:	b.ne	2600 <__addtf3+0x190>  // b.any
    25d0:	ldr	x1, [sp, #376]
    25d4:	ldr	x0, [sp, #360]
    25d8:	orr	x0, x1, x0
    25dc:	cmp	x0, #0x0
    25e0:	b.eq	2600 <__addtf3+0x190>  // b.none
    25e4:	ldr	x0, [sp, #376]
    25e8:	and	x0, x0, #0x4000000000000
    25ec:	cmp	x0, #0x0
    25f0:	b.ne	2600 <__addtf3+0x190>  // b.any
    25f4:	ldr	w0, [sp, #356]
    25f8:	orr	w0, w0, #0x1
    25fc:	str	w0, [sp, #356]
    2600:	ldr	x0, [sp, #360]
    2604:	str	x0, [sp, #336]
    2608:	ldr	x0, [sp, #376]
    260c:	str	x0, [sp, #328]
    2610:	b	3d28 <__addtf3+0x18b8>
    2614:	ldr	w0, [sp, #324]
    2618:	sub	w0, w0, #0x1
    261c:	str	w0, [sp, #324]
    2620:	ldr	w0, [sp, #324]
    2624:	cmp	w0, #0x0
    2628:	b.ne	2674 <__addtf3+0x204>  // b.any
    262c:	ldr	x1, [sp, #360]
    2630:	ldr	x0, [sp, #368]
    2634:	add	x0, x1, x0
    2638:	str	x0, [sp, #160]
    263c:	ldr	x1, [sp, #376]
    2640:	ldr	x0, [sp, #392]
    2644:	add	x1, x1, x0
    2648:	ldr	x2, [sp, #160]
    264c:	ldr	x0, [sp, #360]
    2650:	cmp	x2, x0
    2654:	cset	w0, cc  // cc = lo, ul, last
    2658:	and	w0, w0, #0xff
    265c:	and	x0, x0, #0xff
    2660:	add	x0, x1, x0
    2664:	str	x0, [sp, #328]
    2668:	ldr	x0, [sp, #160]
    266c:	str	x0, [sp, #336]
    2670:	b	2f5c <__addtf3+0xaec>
    2674:	ldr	x1, [sp, #296]
    2678:	mov	x0, #0x7fff                	// #32767
    267c:	cmp	x1, x0
    2680:	b.ne	274c <__addtf3+0x2dc>  // b.any
    2684:	ldr	x1, [sp, #296]
    2688:	mov	x0, #0x7fff                	// #32767
    268c:	cmp	x1, x0
    2690:	b.ne	26c4 <__addtf3+0x254>  // b.any
    2694:	ldr	x1, [sp, #376]
    2698:	ldr	x0, [sp, #360]
    269c:	orr	x0, x1, x0
    26a0:	cmp	x0, #0x0
    26a4:	b.eq	26c4 <__addtf3+0x254>  // b.none
    26a8:	ldr	x0, [sp, #376]
    26ac:	and	x0, x0, #0x4000000000000
    26b0:	cmp	x0, #0x0
    26b4:	b.ne	26c4 <__addtf3+0x254>  // b.any
    26b8:	ldr	w0, [sp, #356]
    26bc:	orr	w0, w0, #0x1
    26c0:	str	w0, [sp, #356]
    26c4:	ldr	x0, [sp, #360]
    26c8:	str	x0, [sp, #336]
    26cc:	ldr	x0, [sp, #376]
    26d0:	str	x0, [sp, #328]
    26d4:	b	3d28 <__addtf3+0x18b8>
    26d8:	ldr	x1, [sp, #296]
    26dc:	mov	x0, #0x7fff                	// #32767
    26e0:	cmp	x1, x0
    26e4:	b.ne	273c <__addtf3+0x2cc>  // b.any
    26e8:	ldr	x1, [sp, #296]
    26ec:	mov	x0, #0x7fff                	// #32767
    26f0:	cmp	x1, x0
    26f4:	b.ne	2728 <__addtf3+0x2b8>  // b.any
    26f8:	ldr	x1, [sp, #376]
    26fc:	ldr	x0, [sp, #360]
    2700:	orr	x0, x1, x0
    2704:	cmp	x0, #0x0
    2708:	b.eq	2728 <__addtf3+0x2b8>  // b.none
    270c:	ldr	x0, [sp, #376]
    2710:	and	x0, x0, #0x4000000000000
    2714:	cmp	x0, #0x0
    2718:	b.ne	2728 <__addtf3+0x2b8>  // b.any
    271c:	ldr	w0, [sp, #356]
    2720:	orr	w0, w0, #0x1
    2724:	str	w0, [sp, #356]
    2728:	ldr	x0, [sp, #360]
    272c:	str	x0, [sp, #336]
    2730:	ldr	x0, [sp, #376]
    2734:	str	x0, [sp, #328]
    2738:	b	3d28 <__addtf3+0x18b8>
    273c:	ldr	x0, [sp, #392]
    2740:	orr	x0, x0, #0x8000000000000
    2744:	str	x0, [sp, #392]
    2748:	b	2750 <__addtf3+0x2e0>
    274c:	nop
    2750:	ldr	w0, [sp, #324]
    2754:	cmp	w0, #0x74
    2758:	b.gt	282c <__addtf3+0x3bc>
    275c:	ldr	w0, [sp, #324]
    2760:	cmp	w0, #0x3f
    2764:	b.gt	27cc <__addtf3+0x35c>
    2768:	mov	w1, #0x40                  	// #64
    276c:	ldr	w0, [sp, #324]
    2770:	sub	w0, w1, w0
    2774:	ldr	x1, [sp, #392]
    2778:	lsl	x1, x1, x0
    277c:	ldr	w0, [sp, #324]
    2780:	ldr	x2, [sp, #368]
    2784:	lsr	x0, x2, x0
    2788:	orr	x1, x1, x0
    278c:	mov	w2, #0x40                  	// #64
    2790:	ldr	w0, [sp, #324]
    2794:	sub	w0, w2, w0
    2798:	ldr	x2, [sp, #368]
    279c:	lsl	x0, x2, x0
    27a0:	cmp	x0, #0x0
    27a4:	cset	w0, ne  // ne = any
    27a8:	and	w0, w0, #0xff
    27ac:	sxtw	x0, w0
    27b0:	orr	x0, x1, x0
    27b4:	str	x0, [sp, #368]
    27b8:	ldr	w0, [sp, #324]
    27bc:	ldr	x1, [sp, #392]
    27c0:	lsr	x0, x1, x0
    27c4:	str	x0, [sp, #392]
    27c8:	b	284c <__addtf3+0x3dc>
    27cc:	ldr	w0, [sp, #324]
    27d0:	sub	w0, w0, #0x40
    27d4:	ldr	x1, [sp, #392]
    27d8:	lsr	x1, x1, x0
    27dc:	ldr	w0, [sp, #324]
    27e0:	cmp	w0, #0x40
    27e4:	b.eq	2800 <__addtf3+0x390>  // b.none
    27e8:	mov	w2, #0x80                  	// #128
    27ec:	ldr	w0, [sp, #324]
    27f0:	sub	w0, w2, w0
    27f4:	ldr	x2, [sp, #392]
    27f8:	lsl	x0, x2, x0
    27fc:	b	2804 <__addtf3+0x394>
    2800:	mov	x0, #0x0                   	// #0
    2804:	ldr	x2, [sp, #368]
    2808:	orr	x0, x0, x2
    280c:	cmp	x0, #0x0
    2810:	cset	w0, ne  // ne = any
    2814:	and	w0, w0, #0xff
    2818:	and	x0, x0, #0xff
    281c:	orr	x0, x1, x0
    2820:	str	x0, [sp, #368]
    2824:	str	xzr, [sp, #392]
    2828:	b	284c <__addtf3+0x3dc>
    282c:	ldr	x1, [sp, #392]
    2830:	ldr	x0, [sp, #368]
    2834:	orr	x0, x1, x0
    2838:	cmp	x0, #0x0
    283c:	b.eq	284c <__addtf3+0x3dc>  // b.none
    2840:	mov	x0, #0x1                   	// #1
    2844:	str	x0, [sp, #368]
    2848:	str	xzr, [sp, #392]
    284c:	ldr	x1, [sp, #360]
    2850:	ldr	x0, [sp, #368]
    2854:	add	x0, x1, x0
    2858:	str	x0, [sp, #152]
    285c:	ldr	x1, [sp, #376]
    2860:	ldr	x0, [sp, #392]
    2864:	add	x1, x1, x0
    2868:	ldr	x2, [sp, #152]
    286c:	ldr	x0, [sp, #360]
    2870:	cmp	x2, x0
    2874:	cset	w0, cc  // cc = lo, ul, last
    2878:	and	w0, w0, #0xff
    287c:	and	x0, x0, #0xff
    2880:	add	x0, x1, x0
    2884:	str	x0, [sp, #328]
    2888:	ldr	x0, [sp, #152]
    288c:	str	x0, [sp, #336]
    2890:	b	2f5c <__addtf3+0xaec>
    2894:	ldr	w0, [sp, #324]
    2898:	cmp	w0, #0x0
    289c:	b.ge	2ba8 <__addtf3+0x738>  // b.tcont
    28a0:	ldr	w0, [sp, #324]
    28a4:	neg	w0, w0
    28a8:	str	w0, [sp, #324]
    28ac:	ldr	x0, [sp, #280]
    28b0:	str	x0, [sp, #344]
    28b4:	ldr	x0, [sp, #296]
    28b8:	cmp	x0, #0x0
    28bc:	b.ne	29ec <__addtf3+0x57c>  // b.any
    28c0:	ldr	x1, [sp, #376]
    28c4:	ldr	x0, [sp, #360]
    28c8:	orr	x0, x1, x0
    28cc:	cmp	x0, #0x0
    28d0:	b.ne	2928 <__addtf3+0x4b8>  // b.any
    28d4:	ldr	x1, [sp, #280]
    28d8:	mov	x0, #0x7fff                	// #32767
    28dc:	cmp	x1, x0
    28e0:	b.ne	2914 <__addtf3+0x4a4>  // b.any
    28e4:	ldr	x1, [sp, #392]
    28e8:	ldr	x0, [sp, #368]
    28ec:	orr	x0, x1, x0
    28f0:	cmp	x0, #0x0
    28f4:	b.eq	2914 <__addtf3+0x4a4>  // b.none
    28f8:	ldr	x0, [sp, #392]
    28fc:	and	x0, x0, #0x4000000000000
    2900:	cmp	x0, #0x0
    2904:	b.ne	2914 <__addtf3+0x4a4>  // b.any
    2908:	ldr	w0, [sp, #356]
    290c:	orr	w0, w0, #0x1
    2910:	str	w0, [sp, #356]
    2914:	ldr	x0, [sp, #368]
    2918:	str	x0, [sp, #336]
    291c:	ldr	x0, [sp, #392]
    2920:	str	x0, [sp, #328]
    2924:	b	3d28 <__addtf3+0x18b8>
    2928:	ldr	w0, [sp, #324]
    292c:	sub	w0, w0, #0x1
    2930:	str	w0, [sp, #324]
    2934:	ldr	w0, [sp, #324]
    2938:	cmp	w0, #0x0
    293c:	b.ne	2988 <__addtf3+0x518>  // b.any
    2940:	ldr	x1, [sp, #368]
    2944:	ldr	x0, [sp, #360]
    2948:	add	x0, x1, x0
    294c:	str	x0, [sp, #176]
    2950:	ldr	x1, [sp, #392]
    2954:	ldr	x0, [sp, #376]
    2958:	add	x1, x1, x0
    295c:	ldr	x2, [sp, #176]
    2960:	ldr	x0, [sp, #368]
    2964:	cmp	x2, x0
    2968:	cset	w0, cc  // cc = lo, ul, last
    296c:	and	w0, w0, #0xff
    2970:	and	x0, x0, #0xff
    2974:	add	x0, x1, x0
    2978:	str	x0, [sp, #328]
    297c:	ldr	x0, [sp, #176]
    2980:	str	x0, [sp, #336]
    2984:	b	2f5c <__addtf3+0xaec>
    2988:	ldr	x1, [sp, #280]
    298c:	mov	x0, #0x7fff                	// #32767
    2990:	cmp	x1, x0
    2994:	b.ne	2a60 <__addtf3+0x5f0>  // b.any
    2998:	ldr	x1, [sp, #280]
    299c:	mov	x0, #0x7fff                	// #32767
    29a0:	cmp	x1, x0
    29a4:	b.ne	29d8 <__addtf3+0x568>  // b.any
    29a8:	ldr	x1, [sp, #392]
    29ac:	ldr	x0, [sp, #368]
    29b0:	orr	x0, x1, x0
    29b4:	cmp	x0, #0x0
    29b8:	b.eq	29d8 <__addtf3+0x568>  // b.none
    29bc:	ldr	x0, [sp, #392]
    29c0:	and	x0, x0, #0x4000000000000
    29c4:	cmp	x0, #0x0
    29c8:	b.ne	29d8 <__addtf3+0x568>  // b.any
    29cc:	ldr	w0, [sp, #356]
    29d0:	orr	w0, w0, #0x1
    29d4:	str	w0, [sp, #356]
    29d8:	ldr	x0, [sp, #368]
    29dc:	str	x0, [sp, #336]
    29e0:	ldr	x0, [sp, #392]
    29e4:	str	x0, [sp, #328]
    29e8:	b	3d28 <__addtf3+0x18b8>
    29ec:	ldr	x1, [sp, #280]
    29f0:	mov	x0, #0x7fff                	// #32767
    29f4:	cmp	x1, x0
    29f8:	b.ne	2a50 <__addtf3+0x5e0>  // b.any
    29fc:	ldr	x1, [sp, #280]
    2a00:	mov	x0, #0x7fff                	// #32767
    2a04:	cmp	x1, x0
    2a08:	b.ne	2a3c <__addtf3+0x5cc>  // b.any
    2a0c:	ldr	x1, [sp, #392]
    2a10:	ldr	x0, [sp, #368]
    2a14:	orr	x0, x1, x0
    2a18:	cmp	x0, #0x0
    2a1c:	b.eq	2a3c <__addtf3+0x5cc>  // b.none
    2a20:	ldr	x0, [sp, #392]
    2a24:	and	x0, x0, #0x4000000000000
    2a28:	cmp	x0, #0x0
    2a2c:	b.ne	2a3c <__addtf3+0x5cc>  // b.any
    2a30:	ldr	w0, [sp, #356]
    2a34:	orr	w0, w0, #0x1
    2a38:	str	w0, [sp, #356]
    2a3c:	ldr	x0, [sp, #368]
    2a40:	str	x0, [sp, #336]
    2a44:	ldr	x0, [sp, #392]
    2a48:	str	x0, [sp, #328]
    2a4c:	b	3d28 <__addtf3+0x18b8>
    2a50:	ldr	x0, [sp, #376]
    2a54:	orr	x0, x0, #0x8000000000000
    2a58:	str	x0, [sp, #376]
    2a5c:	b	2a64 <__addtf3+0x5f4>
    2a60:	nop
    2a64:	ldr	w0, [sp, #324]
    2a68:	cmp	w0, #0x74
    2a6c:	b.gt	2b40 <__addtf3+0x6d0>
    2a70:	ldr	w0, [sp, #324]
    2a74:	cmp	w0, #0x3f
    2a78:	b.gt	2ae0 <__addtf3+0x670>
    2a7c:	mov	w1, #0x40                  	// #64
    2a80:	ldr	w0, [sp, #324]
    2a84:	sub	w0, w1, w0
    2a88:	ldr	x1, [sp, #376]
    2a8c:	lsl	x1, x1, x0
    2a90:	ldr	w0, [sp, #324]
    2a94:	ldr	x2, [sp, #360]
    2a98:	lsr	x0, x2, x0
    2a9c:	orr	x1, x1, x0
    2aa0:	mov	w2, #0x40                  	// #64
    2aa4:	ldr	w0, [sp, #324]
    2aa8:	sub	w0, w2, w0
    2aac:	ldr	x2, [sp, #360]
    2ab0:	lsl	x0, x2, x0
    2ab4:	cmp	x0, #0x0
    2ab8:	cset	w0, ne  // ne = any
    2abc:	and	w0, w0, #0xff
    2ac0:	sxtw	x0, w0
    2ac4:	orr	x0, x1, x0
    2ac8:	str	x0, [sp, #360]
    2acc:	ldr	w0, [sp, #324]
    2ad0:	ldr	x1, [sp, #376]
    2ad4:	lsr	x0, x1, x0
    2ad8:	str	x0, [sp, #376]
    2adc:	b	2b60 <__addtf3+0x6f0>
    2ae0:	ldr	w0, [sp, #324]
    2ae4:	sub	w0, w0, #0x40
    2ae8:	ldr	x1, [sp, #376]
    2aec:	lsr	x1, x1, x0
    2af0:	ldr	w0, [sp, #324]
    2af4:	cmp	w0, #0x40
    2af8:	b.eq	2b14 <__addtf3+0x6a4>  // b.none
    2afc:	mov	w2, #0x80                  	// #128
    2b00:	ldr	w0, [sp, #324]
    2b04:	sub	w0, w2, w0
    2b08:	ldr	x2, [sp, #376]
    2b0c:	lsl	x0, x2, x0
    2b10:	b	2b18 <__addtf3+0x6a8>
    2b14:	mov	x0, #0x0                   	// #0
    2b18:	ldr	x2, [sp, #360]
    2b1c:	orr	x0, x0, x2
    2b20:	cmp	x0, #0x0
    2b24:	cset	w0, ne  // ne = any
    2b28:	and	w0, w0, #0xff
    2b2c:	and	x0, x0, #0xff
    2b30:	orr	x0, x1, x0
    2b34:	str	x0, [sp, #360]
    2b38:	str	xzr, [sp, #376]
    2b3c:	b	2b60 <__addtf3+0x6f0>
    2b40:	ldr	x1, [sp, #376]
    2b44:	ldr	x0, [sp, #360]
    2b48:	orr	x0, x1, x0
    2b4c:	cmp	x0, #0x0
    2b50:	b.eq	2b60 <__addtf3+0x6f0>  // b.none
    2b54:	mov	x0, #0x1                   	// #1
    2b58:	str	x0, [sp, #360]
    2b5c:	str	xzr, [sp, #376]
    2b60:	ldr	x1, [sp, #368]
    2b64:	ldr	x0, [sp, #360]
    2b68:	add	x0, x1, x0
    2b6c:	str	x0, [sp, #168]
    2b70:	ldr	x1, [sp, #392]
    2b74:	ldr	x0, [sp, #376]
    2b78:	add	x1, x1, x0
    2b7c:	ldr	x2, [sp, #168]
    2b80:	ldr	x0, [sp, #368]
    2b84:	cmp	x2, x0
    2b88:	cset	w0, cc  // cc = lo, ul, last
    2b8c:	and	w0, w0, #0xff
    2b90:	and	x0, x0, #0xff
    2b94:	add	x0, x1, x0
    2b98:	str	x0, [sp, #328]
    2b9c:	ldr	x0, [sp, #168]
    2ba0:	str	x0, [sp, #336]
    2ba4:	b	2f5c <__addtf3+0xaec>
    2ba8:	ldr	x0, [sp, #296]
    2bac:	add	x0, x0, #0x1
    2bb0:	and	x0, x0, #0x7ffe
    2bb4:	cmp	x0, #0x0
    2bb8:	b.ne	2e3c <__addtf3+0x9cc>  // b.any
    2bbc:	ldr	x0, [sp, #296]
    2bc0:	cmp	x0, #0x0
    2bc4:	b.ne	2c98 <__addtf3+0x828>  // b.any
    2bc8:	str	xzr, [sp, #344]
    2bcc:	ldr	x1, [sp, #376]
    2bd0:	ldr	x0, [sp, #360]
    2bd4:	orr	x0, x1, x0
    2bd8:	cmp	x0, #0x0
    2bdc:	b.ne	2c04 <__addtf3+0x794>  // b.any
    2be0:	ldr	x1, [sp, #392]
    2be4:	ldr	x0, [sp, #368]
    2be8:	orr	x0, x1, x0
    2bec:	cmp	x0, #0x0
    2bf0:	ldr	x0, [sp, #368]
    2bf4:	str	x0, [sp, #336]
    2bf8:	ldr	x0, [sp, #392]
    2bfc:	str	x0, [sp, #328]
    2c00:	b	3d28 <__addtf3+0x18b8>
    2c04:	ldr	x1, [sp, #392]
    2c08:	ldr	x0, [sp, #368]
    2c0c:	orr	x0, x1, x0
    2c10:	cmp	x0, #0x0
    2c14:	b.ne	2c2c <__addtf3+0x7bc>  // b.any
    2c18:	ldr	x0, [sp, #360]
    2c1c:	str	x0, [sp, #336]
    2c20:	ldr	x0, [sp, #376]
    2c24:	str	x0, [sp, #328]
    2c28:	b	3d28 <__addtf3+0x18b8>
    2c2c:	ldr	x1, [sp, #360]
    2c30:	ldr	x0, [sp, #368]
    2c34:	add	x0, x1, x0
    2c38:	str	x0, [sp, #184]
    2c3c:	ldr	x1, [sp, #376]
    2c40:	ldr	x0, [sp, #392]
    2c44:	add	x1, x1, x0
    2c48:	ldr	x2, [sp, #184]
    2c4c:	ldr	x0, [sp, #360]
    2c50:	cmp	x2, x0
    2c54:	cset	w0, cc  // cc = lo, ul, last
    2c58:	and	w0, w0, #0xff
    2c5c:	and	x0, x0, #0xff
    2c60:	add	x0, x1, x0
    2c64:	str	x0, [sp, #328]
    2c68:	ldr	x0, [sp, #184]
    2c6c:	str	x0, [sp, #336]
    2c70:	ldr	x0, [sp, #328]
    2c74:	and	x0, x0, #0x8000000000000
    2c78:	cmp	x0, #0x0
    2c7c:	b.eq	3d04 <__addtf3+0x1894>  // b.none
    2c80:	ldr	x0, [sp, #328]
    2c84:	and	x0, x0, #0xfff7ffffffffffff
    2c88:	str	x0, [sp, #328]
    2c8c:	mov	x0, #0x1                   	// #1
    2c90:	str	x0, [sp, #344]
    2c94:	b	3d04 <__addtf3+0x1894>
    2c98:	ldr	x1, [sp, #296]
    2c9c:	mov	x0, #0x7fff                	// #32767
    2ca0:	cmp	x1, x0
    2ca4:	b.ne	2cd8 <__addtf3+0x868>  // b.any
    2ca8:	ldr	x1, [sp, #376]
    2cac:	ldr	x0, [sp, #360]
    2cb0:	orr	x0, x1, x0
    2cb4:	cmp	x0, #0x0
    2cb8:	b.eq	2cd8 <__addtf3+0x868>  // b.none
    2cbc:	ldr	x0, [sp, #376]
    2cc0:	and	x0, x0, #0x4000000000000
    2cc4:	cmp	x0, #0x0
    2cc8:	b.ne	2cd8 <__addtf3+0x868>  // b.any
    2ccc:	ldr	w0, [sp, #356]
    2cd0:	orr	w0, w0, #0x1
    2cd4:	str	w0, [sp, #356]
    2cd8:	ldr	x1, [sp, #280]
    2cdc:	mov	x0, #0x7fff                	// #32767
    2ce0:	cmp	x1, x0
    2ce4:	b.ne	2d18 <__addtf3+0x8a8>  // b.any
    2ce8:	ldr	x1, [sp, #392]
    2cec:	ldr	x0, [sp, #368]
    2cf0:	orr	x0, x1, x0
    2cf4:	cmp	x0, #0x0
    2cf8:	b.eq	2d18 <__addtf3+0x8a8>  // b.none
    2cfc:	ldr	x0, [sp, #392]
    2d00:	and	x0, x0, #0x4000000000000
    2d04:	cmp	x0, #0x0
    2d08:	b.ne	2d18 <__addtf3+0x8a8>  // b.any
    2d0c:	ldr	w0, [sp, #356]
    2d10:	orr	w0, w0, #0x1
    2d14:	str	w0, [sp, #356]
    2d18:	mov	x0, #0x7fff                	// #32767
    2d1c:	str	x0, [sp, #344]
    2d20:	ldr	x1, [sp, #376]
    2d24:	ldr	x0, [sp, #360]
    2d28:	orr	x0, x1, x0
    2d2c:	cmp	x0, #0x0
    2d30:	b.ne	2d48 <__addtf3+0x8d8>  // b.any
    2d34:	ldr	x0, [sp, #368]
    2d38:	str	x0, [sp, #336]
    2d3c:	ldr	x0, [sp, #392]
    2d40:	str	x0, [sp, #328]
    2d44:	b	3d28 <__addtf3+0x18b8>
    2d48:	ldr	x1, [sp, #392]
    2d4c:	ldr	x0, [sp, #368]
    2d50:	orr	x0, x1, x0
    2d54:	cmp	x0, #0x0
    2d58:	b.ne	2d70 <__addtf3+0x900>  // b.any
    2d5c:	ldr	x0, [sp, #360]
    2d60:	str	x0, [sp, #336]
    2d64:	ldr	x0, [sp, #376]
    2d68:	str	x0, [sp, #328]
    2d6c:	b	3d28 <__addtf3+0x18b8>
    2d70:	ldr	x0, [sp, #360]
    2d74:	lsr	x1, x0, #3
    2d78:	ldr	x0, [sp, #376]
    2d7c:	lsl	x0, x0, #61
    2d80:	orr	x0, x1, x0
    2d84:	str	x0, [sp, #360]
    2d88:	ldr	x0, [sp, #376]
    2d8c:	lsr	x0, x0, #3
    2d90:	str	x0, [sp, #376]
    2d94:	ldr	x0, [sp, #368]
    2d98:	lsr	x1, x0, #3
    2d9c:	ldr	x0, [sp, #392]
    2da0:	lsl	x0, x0, #61
    2da4:	orr	x0, x1, x0
    2da8:	str	x0, [sp, #368]
    2dac:	ldr	x0, [sp, #392]
    2db0:	lsr	x0, x0, #3
    2db4:	str	x0, [sp, #392]
    2db8:	ldr	x0, [sp, #376]
    2dbc:	and	x0, x0, #0x800000000000
    2dc0:	cmp	x0, #0x0
    2dc4:	b.eq	2df4 <__addtf3+0x984>  // b.none
    2dc8:	ldr	x0, [sp, #392]
    2dcc:	and	x0, x0, #0x800000000000
    2dd0:	cmp	x0, #0x0
    2dd4:	b.ne	2df4 <__addtf3+0x984>  // b.any
    2dd8:	ldr	x0, [sp, #272]
    2ddc:	str	x0, [sp, #384]
    2de0:	ldr	x0, [sp, #368]
    2de4:	str	x0, [sp, #336]
    2de8:	ldr	x0, [sp, #392]
    2dec:	str	x0, [sp, #328]
    2df0:	b	2e0c <__addtf3+0x99c>
    2df4:	ldr	x0, [sp, #288]
    2df8:	str	x0, [sp, #384]
    2dfc:	ldr	x0, [sp, #360]
    2e00:	str	x0, [sp, #336]
    2e04:	ldr	x0, [sp, #376]
    2e08:	str	x0, [sp, #328]
    2e0c:	mov	x0, #0x3                   	// #3
    2e10:	str	x0, [sp, #248]
    2e14:	ldr	x0, [sp, #328]
    2e18:	lsl	x1, x0, #3
    2e1c:	ldr	x0, [sp, #336]
    2e20:	lsr	x0, x0, #61
    2e24:	orr	x0, x1, x0
    2e28:	str	x0, [sp, #328]
    2e2c:	ldr	x0, [sp, #336]
    2e30:	lsl	x0, x0, #3
    2e34:	str	x0, [sp, #336]
    2e38:	b	3d28 <__addtf3+0x18b8>
    2e3c:	ldr	x1, [sp, #360]
    2e40:	ldr	x0, [sp, #368]
    2e44:	add	x0, x1, x0
    2e48:	str	x0, [sp, #192]
    2e4c:	ldr	x1, [sp, #376]
    2e50:	ldr	x0, [sp, #392]
    2e54:	add	x1, x1, x0
    2e58:	ldr	x2, [sp, #192]
    2e5c:	ldr	x0, [sp, #360]
    2e60:	cmp	x2, x0
    2e64:	cset	w0, cc  // cc = lo, ul, last
    2e68:	and	w0, w0, #0xff
    2e6c:	and	x0, x0, #0xff
    2e70:	add	x0, x1, x0
    2e74:	str	x0, [sp, #328]
    2e78:	ldr	x0, [sp, #192]
    2e7c:	str	x0, [sp, #336]
    2e80:	ldr	x0, [sp, #296]
    2e84:	add	x0, x0, #0x1
    2e88:	str	x0, [sp, #344]
    2e8c:	ldr	x0, [sp, #328]
    2e90:	lsl	x1, x0, #63
    2e94:	ldr	x0, [sp, #336]
    2e98:	lsr	x0, x0, #1
    2e9c:	orr	x1, x1, x0
    2ea0:	ldr	x0, [sp, #336]
    2ea4:	and	x0, x0, #0x1
    2ea8:	orr	x0, x1, x0
    2eac:	str	x0, [sp, #336]
    2eb0:	ldr	x0, [sp, #328]
    2eb4:	lsr	x0, x0, #1
    2eb8:	str	x0, [sp, #328]
    2ebc:	ldr	x1, [sp, #344]
    2ec0:	mov	x0, #0x7fff                	// #32767
    2ec4:	cmp	x1, x0
    2ec8:	b.ne	3d0c <__addtf3+0x189c>  // b.any
    2ecc:	ldr	x0, [sp, #304]
    2ed0:	and	x0, x0, #0xc00000
    2ed4:	cmp	x0, #0x0
    2ed8:	b.eq	2f14 <__addtf3+0xaa4>  // b.none
    2edc:	ldr	x0, [sp, #304]
    2ee0:	and	x0, x0, #0xc00000
    2ee4:	cmp	x0, #0x400, lsl #12
    2ee8:	b.ne	2ef8 <__addtf3+0xa88>  // b.any
    2eec:	ldr	x0, [sp, #384]
    2ef0:	cmp	x0, #0x0
    2ef4:	b.eq	2f14 <__addtf3+0xaa4>  // b.none
    2ef8:	ldr	x0, [sp, #304]
    2efc:	and	x0, x0, #0xc00000
    2f00:	cmp	x0, #0x800, lsl #12
    2f04:	b.ne	2f28 <__addtf3+0xab8>  // b.any
    2f08:	ldr	x0, [sp, #384]
    2f0c:	cmp	x0, #0x0
    2f10:	b.eq	2f28 <__addtf3+0xab8>  // b.none
    2f14:	mov	x0, #0x7fff                	// #32767
    2f18:	str	x0, [sp, #344]
    2f1c:	str	xzr, [sp, #336]
    2f20:	str	xzr, [sp, #328]
    2f24:	b	2f40 <__addtf3+0xad0>
    2f28:	mov	x0, #0x7ffe                	// #32766
    2f2c:	str	x0, [sp, #344]
    2f30:	mov	x0, #0xffffffffffffffff    	// #-1
    2f34:	str	x0, [sp, #336]
    2f38:	mov	x0, #0xffffffffffffffff    	// #-1
    2f3c:	str	x0, [sp, #328]
    2f40:	ldr	w0, [sp, #356]
    2f44:	orr	w0, w0, #0x10
    2f48:	str	w0, [sp, #356]
    2f4c:	ldr	w0, [sp, #356]
    2f50:	orr	w0, w0, #0x4
    2f54:	str	w0, [sp, #356]
    2f58:	b	3d0c <__addtf3+0x189c>
    2f5c:	ldr	x0, [sp, #328]
    2f60:	and	x0, x0, #0x8000000000000
    2f64:	cmp	x0, #0x0
    2f68:	b.eq	3d14 <__addtf3+0x18a4>  // b.none
    2f6c:	ldr	x0, [sp, #328]
    2f70:	and	x0, x0, #0xfff7ffffffffffff
    2f74:	str	x0, [sp, #328]
    2f78:	ldr	x0, [sp, #344]
    2f7c:	add	x0, x0, #0x1
    2f80:	str	x0, [sp, #344]
    2f84:	ldr	x0, [sp, #328]
    2f88:	lsl	x1, x0, #63
    2f8c:	ldr	x0, [sp, #336]
    2f90:	lsr	x0, x0, #1
    2f94:	orr	x1, x1, x0
    2f98:	ldr	x0, [sp, #336]
    2f9c:	and	x0, x0, #0x1
    2fa0:	orr	x0, x1, x0
    2fa4:	str	x0, [sp, #336]
    2fa8:	ldr	x0, [sp, #328]
    2fac:	lsr	x0, x0, #1
    2fb0:	str	x0, [sp, #328]
    2fb4:	ldr	x1, [sp, #344]
    2fb8:	mov	x0, #0x7fff                	// #32767
    2fbc:	cmp	x1, x0
    2fc0:	b.ne	3d14 <__addtf3+0x18a4>  // b.any
    2fc4:	ldr	x0, [sp, #304]
    2fc8:	and	x0, x0, #0xc00000
    2fcc:	cmp	x0, #0x0
    2fd0:	b.eq	300c <__addtf3+0xb9c>  // b.none
    2fd4:	ldr	x0, [sp, #304]
    2fd8:	and	x0, x0, #0xc00000
    2fdc:	cmp	x0, #0x400, lsl #12
    2fe0:	b.ne	2ff0 <__addtf3+0xb80>  // b.any
    2fe4:	ldr	x0, [sp, #384]
    2fe8:	cmp	x0, #0x0
    2fec:	b.eq	300c <__addtf3+0xb9c>  // b.none
    2ff0:	ldr	x0, [sp, #304]
    2ff4:	and	x0, x0, #0xc00000
    2ff8:	cmp	x0, #0x800, lsl #12
    2ffc:	b.ne	3020 <__addtf3+0xbb0>  // b.any
    3000:	ldr	x0, [sp, #384]
    3004:	cmp	x0, #0x0
    3008:	b.eq	3020 <__addtf3+0xbb0>  // b.none
    300c:	mov	x0, #0x7fff                	// #32767
    3010:	str	x0, [sp, #344]
    3014:	str	xzr, [sp, #336]
    3018:	str	xzr, [sp, #328]
    301c:	b	3038 <__addtf3+0xbc8>
    3020:	mov	x0, #0x7ffe                	// #32766
    3024:	str	x0, [sp, #344]
    3028:	mov	x0, #0xffffffffffffffff    	// #-1
    302c:	str	x0, [sp, #336]
    3030:	mov	x0, #0xffffffffffffffff    	// #-1
    3034:	str	x0, [sp, #328]
    3038:	ldr	w0, [sp, #356]
    303c:	orr	w0, w0, #0x10
    3040:	str	w0, [sp, #356]
    3044:	ldr	w0, [sp, #356]
    3048:	orr	w0, w0, #0x4
    304c:	str	w0, [sp, #356]
    3050:	b	3d28 <__addtf3+0x18b8>
    3054:	ldr	x0, [sp, #296]
    3058:	mov	w1, w0
    305c:	ldr	x0, [sp, #280]
    3060:	sub	w0, w1, w0
    3064:	str	w0, [sp, #320]
    3068:	ldr	w0, [sp, #320]
    306c:	cmp	w0, #0x0
    3070:	b.le	3378 <__addtf3+0xf08>
    3074:	ldr	x0, [sp, #296]
    3078:	str	x0, [sp, #344]
    307c:	ldr	x0, [sp, #288]
    3080:	str	x0, [sp, #384]
    3084:	ldr	x0, [sp, #280]
    3088:	cmp	x0, #0x0
    308c:	b.ne	31bc <__addtf3+0xd4c>  // b.any
    3090:	ldr	x1, [sp, #392]
    3094:	ldr	x0, [sp, #368]
    3098:	orr	x0, x1, x0
    309c:	cmp	x0, #0x0
    30a0:	b.ne	30f8 <__addtf3+0xc88>  // b.any
    30a4:	ldr	x1, [sp, #296]
    30a8:	mov	x0, #0x7fff                	// #32767
    30ac:	cmp	x1, x0
    30b0:	b.ne	30e4 <__addtf3+0xc74>  // b.any
    30b4:	ldr	x1, [sp, #376]
    30b8:	ldr	x0, [sp, #360]
    30bc:	orr	x0, x1, x0
    30c0:	cmp	x0, #0x0
    30c4:	b.eq	30e4 <__addtf3+0xc74>  // b.none
    30c8:	ldr	x0, [sp, #376]
    30cc:	and	x0, x0, #0x4000000000000
    30d0:	cmp	x0, #0x0
    30d4:	b.ne	30e4 <__addtf3+0xc74>  // b.any
    30d8:	ldr	w0, [sp, #356]
    30dc:	orr	w0, w0, #0x1
    30e0:	str	w0, [sp, #356]
    30e4:	ldr	x0, [sp, #360]
    30e8:	str	x0, [sp, #336]
    30ec:	ldr	x0, [sp, #376]
    30f0:	str	x0, [sp, #328]
    30f4:	b	3d28 <__addtf3+0x18b8>
    30f8:	ldr	w0, [sp, #320]
    30fc:	sub	w0, w0, #0x1
    3100:	str	w0, [sp, #320]
    3104:	ldr	w0, [sp, #320]
    3108:	cmp	w0, #0x0
    310c:	b.ne	3158 <__addtf3+0xce8>  // b.any
    3110:	ldr	x1, [sp, #360]
    3114:	ldr	x0, [sp, #368]
    3118:	sub	x0, x1, x0
    311c:	str	x0, [sp, #208]
    3120:	ldr	x1, [sp, #376]
    3124:	ldr	x0, [sp, #392]
    3128:	sub	x1, x1, x0
    312c:	ldr	x2, [sp, #208]
    3130:	ldr	x0, [sp, #360]
    3134:	cmp	x2, x0
    3138:	cset	w0, hi  // hi = pmore
    313c:	and	w0, w0, #0xff
    3140:	and	x0, x0, #0xff
    3144:	sub	x0, x1, x0
    3148:	str	x0, [sp, #328]
    314c:	ldr	x0, [sp, #208]
    3150:	str	x0, [sp, #336]
    3154:	b	3b28 <__addtf3+0x16b8>
    3158:	ldr	x1, [sp, #296]
    315c:	mov	x0, #0x7fff                	// #32767
    3160:	cmp	x1, x0
    3164:	b.ne	3230 <__addtf3+0xdc0>  // b.any
    3168:	ldr	x1, [sp, #296]
    316c:	mov	x0, #0x7fff                	// #32767
    3170:	cmp	x1, x0
    3174:	b.ne	31a8 <__addtf3+0xd38>  // b.any
    3178:	ldr	x1, [sp, #376]
    317c:	ldr	x0, [sp, #360]
    3180:	orr	x0, x1, x0
    3184:	cmp	x0, #0x0
    3188:	b.eq	31a8 <__addtf3+0xd38>  // b.none
    318c:	ldr	x0, [sp, #376]
    3190:	and	x0, x0, #0x4000000000000
    3194:	cmp	x0, #0x0
    3198:	b.ne	31a8 <__addtf3+0xd38>  // b.any
    319c:	ldr	w0, [sp, #356]
    31a0:	orr	w0, w0, #0x1
    31a4:	str	w0, [sp, #356]
    31a8:	ldr	x0, [sp, #360]
    31ac:	str	x0, [sp, #336]
    31b0:	ldr	x0, [sp, #376]
    31b4:	str	x0, [sp, #328]
    31b8:	b	3d28 <__addtf3+0x18b8>
    31bc:	ldr	x1, [sp, #296]
    31c0:	mov	x0, #0x7fff                	// #32767
    31c4:	cmp	x1, x0
    31c8:	b.ne	3220 <__addtf3+0xdb0>  // b.any
    31cc:	ldr	x1, [sp, #296]
    31d0:	mov	x0, #0x7fff                	// #32767
    31d4:	cmp	x1, x0
    31d8:	b.ne	320c <__addtf3+0xd9c>  // b.any
    31dc:	ldr	x1, [sp, #376]
    31e0:	ldr	x0, [sp, #360]
    31e4:	orr	x0, x1, x0
    31e8:	cmp	x0, #0x0
    31ec:	b.eq	320c <__addtf3+0xd9c>  // b.none
    31f0:	ldr	x0, [sp, #376]
    31f4:	and	x0, x0, #0x4000000000000
    31f8:	cmp	x0, #0x0
    31fc:	b.ne	320c <__addtf3+0xd9c>  // b.any
    3200:	ldr	w0, [sp, #356]
    3204:	orr	w0, w0, #0x1
    3208:	str	w0, [sp, #356]
    320c:	ldr	x0, [sp, #360]
    3210:	str	x0, [sp, #336]
    3214:	ldr	x0, [sp, #376]
    3218:	str	x0, [sp, #328]
    321c:	b	3d28 <__addtf3+0x18b8>
    3220:	ldr	x0, [sp, #392]
    3224:	orr	x0, x0, #0x8000000000000
    3228:	str	x0, [sp, #392]
    322c:	b	3234 <__addtf3+0xdc4>
    3230:	nop
    3234:	ldr	w0, [sp, #320]
    3238:	cmp	w0, #0x74
    323c:	b.gt	3310 <__addtf3+0xea0>
    3240:	ldr	w0, [sp, #320]
    3244:	cmp	w0, #0x3f
    3248:	b.gt	32b0 <__addtf3+0xe40>
    324c:	mov	w1, #0x40                  	// #64
    3250:	ldr	w0, [sp, #320]
    3254:	sub	w0, w1, w0
    3258:	ldr	x1, [sp, #392]
    325c:	lsl	x1, x1, x0
    3260:	ldr	w0, [sp, #320]
    3264:	ldr	x2, [sp, #368]
    3268:	lsr	x0, x2, x0
    326c:	orr	x1, x1, x0
    3270:	mov	w2, #0x40                  	// #64
    3274:	ldr	w0, [sp, #320]
    3278:	sub	w0, w2, w0
    327c:	ldr	x2, [sp, #368]
    3280:	lsl	x0, x2, x0
    3284:	cmp	x0, #0x0
    3288:	cset	w0, ne  // ne = any
    328c:	and	w0, w0, #0xff
    3290:	sxtw	x0, w0
    3294:	orr	x0, x1, x0
    3298:	str	x0, [sp, #368]
    329c:	ldr	w0, [sp, #320]
    32a0:	ldr	x1, [sp, #392]
    32a4:	lsr	x0, x1, x0
    32a8:	str	x0, [sp, #392]
    32ac:	b	3330 <__addtf3+0xec0>
    32b0:	ldr	w0, [sp, #320]
    32b4:	sub	w0, w0, #0x40
    32b8:	ldr	x1, [sp, #392]
    32bc:	lsr	x1, x1, x0
    32c0:	ldr	w0, [sp, #320]
    32c4:	cmp	w0, #0x40
    32c8:	b.eq	32e4 <__addtf3+0xe74>  // b.none
    32cc:	mov	w2, #0x80                  	// #128
    32d0:	ldr	w0, [sp, #320]
    32d4:	sub	w0, w2, w0
    32d8:	ldr	x2, [sp, #392]
    32dc:	lsl	x0, x2, x0
    32e0:	b	32e8 <__addtf3+0xe78>
    32e4:	mov	x0, #0x0                   	// #0
    32e8:	ldr	x2, [sp, #368]
    32ec:	orr	x0, x0, x2
    32f0:	cmp	x0, #0x0
    32f4:	cset	w0, ne  // ne = any
    32f8:	and	w0, w0, #0xff
    32fc:	and	x0, x0, #0xff
    3300:	orr	x0, x1, x0
    3304:	str	x0, [sp, #368]
    3308:	str	xzr, [sp, #392]
    330c:	b	3330 <__addtf3+0xec0>
    3310:	ldr	x1, [sp, #392]
    3314:	ldr	x0, [sp, #368]
    3318:	orr	x0, x1, x0
    331c:	cmp	x0, #0x0
    3320:	b.eq	3330 <__addtf3+0xec0>  // b.none
    3324:	mov	x0, #0x1                   	// #1
    3328:	str	x0, [sp, #368]
    332c:	str	xzr, [sp, #392]
    3330:	ldr	x1, [sp, #360]
    3334:	ldr	x0, [sp, #368]
    3338:	sub	x0, x1, x0
    333c:	str	x0, [sp, #200]
    3340:	ldr	x1, [sp, #376]
    3344:	ldr	x0, [sp, #392]
    3348:	sub	x1, x1, x0
    334c:	ldr	x2, [sp, #200]
    3350:	ldr	x0, [sp, #360]
    3354:	cmp	x2, x0
    3358:	cset	w0, hi  // hi = pmore
    335c:	and	w0, w0, #0xff
    3360:	and	x0, x0, #0xff
    3364:	sub	x0, x1, x0
    3368:	str	x0, [sp, #328]
    336c:	ldr	x0, [sp, #200]
    3370:	str	x0, [sp, #336]
    3374:	b	3b28 <__addtf3+0x16b8>
    3378:	ldr	w0, [sp, #320]
    337c:	cmp	w0, #0x0
    3380:	b.ge	3694 <__addtf3+0x1224>  // b.tcont
    3384:	ldr	w0, [sp, #320]
    3388:	neg	w0, w0
    338c:	str	w0, [sp, #320]
    3390:	ldr	x0, [sp, #280]
    3394:	str	x0, [sp, #344]
    3398:	ldr	x0, [sp, #272]
    339c:	str	x0, [sp, #384]
    33a0:	ldr	x0, [sp, #296]
    33a4:	cmp	x0, #0x0
    33a8:	b.ne	34d8 <__addtf3+0x1068>  // b.any
    33ac:	ldr	x1, [sp, #376]
    33b0:	ldr	x0, [sp, #360]
    33b4:	orr	x0, x1, x0
    33b8:	cmp	x0, #0x0
    33bc:	b.ne	3414 <__addtf3+0xfa4>  // b.any
    33c0:	ldr	x1, [sp, #280]
    33c4:	mov	x0, #0x7fff                	// #32767
    33c8:	cmp	x1, x0
    33cc:	b.ne	3400 <__addtf3+0xf90>  // b.any
    33d0:	ldr	x1, [sp, #392]
    33d4:	ldr	x0, [sp, #368]
    33d8:	orr	x0, x1, x0
    33dc:	cmp	x0, #0x0
    33e0:	b.eq	3400 <__addtf3+0xf90>  // b.none
    33e4:	ldr	x0, [sp, #392]
    33e8:	and	x0, x0, #0x4000000000000
    33ec:	cmp	x0, #0x0
    33f0:	b.ne	3400 <__addtf3+0xf90>  // b.any
    33f4:	ldr	w0, [sp, #356]
    33f8:	orr	w0, w0, #0x1
    33fc:	str	w0, [sp, #356]
    3400:	ldr	x0, [sp, #368]
    3404:	str	x0, [sp, #336]
    3408:	ldr	x0, [sp, #392]
    340c:	str	x0, [sp, #328]
    3410:	b	3d28 <__addtf3+0x18b8>
    3414:	ldr	w0, [sp, #320]
    3418:	sub	w0, w0, #0x1
    341c:	str	w0, [sp, #320]
    3420:	ldr	w0, [sp, #320]
    3424:	cmp	w0, #0x0
    3428:	b.ne	3474 <__addtf3+0x1004>  // b.any
    342c:	ldr	x1, [sp, #368]
    3430:	ldr	x0, [sp, #360]
    3434:	sub	x0, x1, x0
    3438:	str	x0, [sp, #224]
    343c:	ldr	x1, [sp, #392]
    3440:	ldr	x0, [sp, #376]
    3444:	sub	x1, x1, x0
    3448:	ldr	x2, [sp, #224]
    344c:	ldr	x0, [sp, #368]
    3450:	cmp	x2, x0
    3454:	cset	w0, hi  // hi = pmore
    3458:	and	w0, w0, #0xff
    345c:	and	x0, x0, #0xff
    3460:	sub	x0, x1, x0
    3464:	str	x0, [sp, #328]
    3468:	ldr	x0, [sp, #224]
    346c:	str	x0, [sp, #336]
    3470:	b	3b28 <__addtf3+0x16b8>
    3474:	ldr	x1, [sp, #280]
    3478:	mov	x0, #0x7fff                	// #32767
    347c:	cmp	x1, x0
    3480:	b.ne	354c <__addtf3+0x10dc>  // b.any
    3484:	ldr	x1, [sp, #280]
    3488:	mov	x0, #0x7fff                	// #32767
    348c:	cmp	x1, x0
    3490:	b.ne	34c4 <__addtf3+0x1054>  // b.any
    3494:	ldr	x1, [sp, #392]
    3498:	ldr	x0, [sp, #368]
    349c:	orr	x0, x1, x0
    34a0:	cmp	x0, #0x0
    34a4:	b.eq	34c4 <__addtf3+0x1054>  // b.none
    34a8:	ldr	x0, [sp, #392]
    34ac:	and	x0, x0, #0x4000000000000
    34b0:	cmp	x0, #0x0
    34b4:	b.ne	34c4 <__addtf3+0x1054>  // b.any
    34b8:	ldr	w0, [sp, #356]
    34bc:	orr	w0, w0, #0x1
    34c0:	str	w0, [sp, #356]
    34c4:	ldr	x0, [sp, #368]
    34c8:	str	x0, [sp, #336]
    34cc:	ldr	x0, [sp, #392]
    34d0:	str	x0, [sp, #328]
    34d4:	b	3d28 <__addtf3+0x18b8>
    34d8:	ldr	x1, [sp, #280]
    34dc:	mov	x0, #0x7fff                	// #32767
    34e0:	cmp	x1, x0
    34e4:	b.ne	353c <__addtf3+0x10cc>  // b.any
    34e8:	ldr	x1, [sp, #280]
    34ec:	mov	x0, #0x7fff                	// #32767
    34f0:	cmp	x1, x0
    34f4:	b.ne	3528 <__addtf3+0x10b8>  // b.any
    34f8:	ldr	x1, [sp, #392]
    34fc:	ldr	x0, [sp, #368]
    3500:	orr	x0, x1, x0
    3504:	cmp	x0, #0x0
    3508:	b.eq	3528 <__addtf3+0x10b8>  // b.none
    350c:	ldr	x0, [sp, #392]
    3510:	and	x0, x0, #0x4000000000000
    3514:	cmp	x0, #0x0
    3518:	b.ne	3528 <__addtf3+0x10b8>  // b.any
    351c:	ldr	w0, [sp, #356]
    3520:	orr	w0, w0, #0x1
    3524:	str	w0, [sp, #356]
    3528:	ldr	x0, [sp, #368]
    352c:	str	x0, [sp, #336]
    3530:	ldr	x0, [sp, #392]
    3534:	str	x0, [sp, #328]
    3538:	b	3d28 <__addtf3+0x18b8>
    353c:	ldr	x0, [sp, #376]
    3540:	orr	x0, x0, #0x8000000000000
    3544:	str	x0, [sp, #376]
    3548:	b	3550 <__addtf3+0x10e0>
    354c:	nop
    3550:	ldr	w0, [sp, #320]
    3554:	cmp	w0, #0x74
    3558:	b.gt	362c <__addtf3+0x11bc>
    355c:	ldr	w0, [sp, #320]
    3560:	cmp	w0, #0x3f
    3564:	b.gt	35cc <__addtf3+0x115c>
    3568:	mov	w1, #0x40                  	// #64
    356c:	ldr	w0, [sp, #320]
    3570:	sub	w0, w1, w0
    3574:	ldr	x1, [sp, #376]
    3578:	lsl	x1, x1, x0
    357c:	ldr	w0, [sp, #320]
    3580:	ldr	x2, [sp, #360]
    3584:	lsr	x0, x2, x0
    3588:	orr	x1, x1, x0
    358c:	mov	w2, #0x40                  	// #64
    3590:	ldr	w0, [sp, #320]
    3594:	sub	w0, w2, w0
    3598:	ldr	x2, [sp, #360]
    359c:	lsl	x0, x2, x0
    35a0:	cmp	x0, #0x0
    35a4:	cset	w0, ne  // ne = any
    35a8:	and	w0, w0, #0xff
    35ac:	sxtw	x0, w0
    35b0:	orr	x0, x1, x0
    35b4:	str	x0, [sp, #360]
    35b8:	ldr	w0, [sp, #320]
    35bc:	ldr	x1, [sp, #376]
    35c0:	lsr	x0, x1, x0
    35c4:	str	x0, [sp, #376]
    35c8:	b	364c <__addtf3+0x11dc>
    35cc:	ldr	w0, [sp, #320]
    35d0:	sub	w0, w0, #0x40
    35d4:	ldr	x1, [sp, #376]
    35d8:	lsr	x1, x1, x0
    35dc:	ldr	w0, [sp, #320]
    35e0:	cmp	w0, #0x40
    35e4:	b.eq	3600 <__addtf3+0x1190>  // b.none
    35e8:	mov	w2, #0x80                  	// #128
    35ec:	ldr	w0, [sp, #320]
    35f0:	sub	w0, w2, w0
    35f4:	ldr	x2, [sp, #376]
    35f8:	lsl	x0, x2, x0
    35fc:	b	3604 <__addtf3+0x1194>
    3600:	mov	x0, #0x0                   	// #0
    3604:	ldr	x2, [sp, #360]
    3608:	orr	x0, x0, x2
    360c:	cmp	x0, #0x0
    3610:	cset	w0, ne  // ne = any
    3614:	and	w0, w0, #0xff
    3618:	and	x0, x0, #0xff
    361c:	orr	x0, x1, x0
    3620:	str	x0, [sp, #360]
    3624:	str	xzr, [sp, #376]
    3628:	b	364c <__addtf3+0x11dc>
    362c:	ldr	x1, [sp, #376]
    3630:	ldr	x0, [sp, #360]
    3634:	orr	x0, x1, x0
    3638:	cmp	x0, #0x0
    363c:	b.eq	364c <__addtf3+0x11dc>  // b.none
    3640:	mov	x0, #0x1                   	// #1
    3644:	str	x0, [sp, #360]
    3648:	str	xzr, [sp, #376]
    364c:	ldr	x1, [sp, #368]
    3650:	ldr	x0, [sp, #360]
    3654:	sub	x0, x1, x0
    3658:	str	x0, [sp, #216]
    365c:	ldr	x1, [sp, #392]
    3660:	ldr	x0, [sp, #376]
    3664:	sub	x1, x1, x0
    3668:	ldr	x2, [sp, #216]
    366c:	ldr	x0, [sp, #368]
    3670:	cmp	x2, x0
    3674:	cset	w0, hi  // hi = pmore
    3678:	and	w0, w0, #0xff
    367c:	and	x0, x0, #0xff
    3680:	sub	x0, x1, x0
    3684:	str	x0, [sp, #328]
    3688:	ldr	x0, [sp, #216]
    368c:	str	x0, [sp, #336]
    3690:	b	3b28 <__addtf3+0x16b8>
    3694:	ldr	x0, [sp, #296]
    3698:	add	x0, x0, #0x1
    369c:	and	x0, x0, #0x7ffe
    36a0:	cmp	x0, #0x0
    36a4:	b.ne	3a3c <__addtf3+0x15cc>  // b.any
    36a8:	ldr	x0, [sp, #296]
    36ac:	cmp	x0, #0x0
    36b0:	b.ne	382c <__addtf3+0x13bc>  // b.any
    36b4:	str	xzr, [sp, #344]
    36b8:	ldr	x1, [sp, #376]
    36bc:	ldr	x0, [sp, #360]
    36c0:	orr	x0, x1, x0
    36c4:	cmp	x0, #0x0
    36c8:	b.ne	371c <__addtf3+0x12ac>  // b.any
    36cc:	ldr	x0, [sp, #368]
    36d0:	str	x0, [sp, #336]
    36d4:	ldr	x0, [sp, #392]
    36d8:	str	x0, [sp, #328]
    36dc:	ldr	x1, [sp, #392]
    36e0:	ldr	x0, [sp, #368]
    36e4:	orr	x0, x1, x0
    36e8:	cmp	x0, #0x0
    36ec:	b.ne	3710 <__addtf3+0x12a0>  // b.any
    36f0:	ldr	x0, [sp, #304]
    36f4:	and	x0, x0, #0xc00000
    36f8:	cmp	x0, #0x800, lsl #12
    36fc:	cset	w0, eq  // eq = none
    3700:	and	w0, w0, #0xff
    3704:	and	x0, x0, #0xff
    3708:	str	x0, [sp, #384]
    370c:	b	3d28 <__addtf3+0x18b8>
    3710:	ldr	x0, [sp, #272]
    3714:	str	x0, [sp, #384]
    3718:	b	3d28 <__addtf3+0x18b8>
    371c:	ldr	x1, [sp, #392]
    3720:	ldr	x0, [sp, #368]
    3724:	orr	x0, x1, x0
    3728:	cmp	x0, #0x0
    372c:	b.ne	374c <__addtf3+0x12dc>  // b.any
    3730:	ldr	x0, [sp, #360]
    3734:	str	x0, [sp, #336]
    3738:	ldr	x0, [sp, #376]
    373c:	str	x0, [sp, #328]
    3740:	ldr	x0, [sp, #288]
    3744:	str	x0, [sp, #384]
    3748:	b	3d28 <__addtf3+0x18b8>
    374c:	ldr	x1, [sp, #360]
    3750:	ldr	x0, [sp, #368]
    3754:	sub	x0, x1, x0
    3758:	str	x0, [sp, #240]
    375c:	ldr	x1, [sp, #376]
    3760:	ldr	x0, [sp, #392]
    3764:	sub	x1, x1, x0
    3768:	ldr	x2, [sp, #240]
    376c:	ldr	x0, [sp, #360]
    3770:	cmp	x2, x0
    3774:	cset	w0, hi  // hi = pmore
    3778:	and	w0, w0, #0xff
    377c:	and	x0, x0, #0xff
    3780:	sub	x0, x1, x0
    3784:	str	x0, [sp, #328]
    3788:	ldr	x0, [sp, #240]
    378c:	str	x0, [sp, #336]
    3790:	ldr	x0, [sp, #288]
    3794:	str	x0, [sp, #384]
    3798:	ldr	x0, [sp, #328]
    379c:	and	x0, x0, #0x8000000000000
    37a0:	cmp	x0, #0x0
    37a4:	b.eq	37f8 <__addtf3+0x1388>  // b.none
    37a8:	ldr	x1, [sp, #368]
    37ac:	ldr	x0, [sp, #360]
    37b0:	sub	x0, x1, x0
    37b4:	str	x0, [sp, #232]
    37b8:	ldr	x1, [sp, #392]
    37bc:	ldr	x0, [sp, #376]
    37c0:	sub	x1, x1, x0
    37c4:	ldr	x2, [sp, #232]
    37c8:	ldr	x0, [sp, #368]
    37cc:	cmp	x2, x0
    37d0:	cset	w0, hi  // hi = pmore
    37d4:	and	w0, w0, #0xff
    37d8:	and	x0, x0, #0xff
    37dc:	sub	x0, x1, x0
    37e0:	str	x0, [sp, #328]
    37e4:	ldr	x0, [sp, #232]
    37e8:	str	x0, [sp, #336]
    37ec:	ldr	x0, [sp, #272]
    37f0:	str	x0, [sp, #384]
    37f4:	b	3d1c <__addtf3+0x18ac>
    37f8:	ldr	x1, [sp, #328]
    37fc:	ldr	x0, [sp, #336]
    3800:	orr	x0, x1, x0
    3804:	cmp	x0, #0x0
    3808:	b.ne	3d1c <__addtf3+0x18ac>  // b.any
    380c:	ldr	x0, [sp, #304]
    3810:	and	x0, x0, #0xc00000
    3814:	cmp	x0, #0x800, lsl #12
    3818:	cset	w0, eq  // eq = none
    381c:	and	w0, w0, #0xff
    3820:	and	x0, x0, #0xff
    3824:	str	x0, [sp, #384]
    3828:	b	3d1c <__addtf3+0x18ac>
    382c:	ldr	x1, [sp, #296]
    3830:	mov	x0, #0x7fff                	// #32767
    3834:	cmp	x1, x0
    3838:	b.ne	386c <__addtf3+0x13fc>  // b.any
    383c:	ldr	x1, [sp, #376]
    3840:	ldr	x0, [sp, #360]
    3844:	orr	x0, x1, x0
    3848:	cmp	x0, #0x0
    384c:	b.eq	386c <__addtf3+0x13fc>  // b.none
    3850:	ldr	x0, [sp, #376]
    3854:	and	x0, x0, #0x4000000000000
    3858:	cmp	x0, #0x0
    385c:	b.ne	386c <__addtf3+0x13fc>  // b.any
    3860:	ldr	w0, [sp, #356]
    3864:	orr	w0, w0, #0x1
    3868:	str	w0, [sp, #356]
    386c:	ldr	x1, [sp, #280]
    3870:	mov	x0, #0x7fff                	// #32767
    3874:	cmp	x1, x0
    3878:	b.ne	38ac <__addtf3+0x143c>  // b.any
    387c:	ldr	x1, [sp, #392]
    3880:	ldr	x0, [sp, #368]
    3884:	orr	x0, x1, x0
    3888:	cmp	x0, #0x0
    388c:	b.eq	38ac <__addtf3+0x143c>  // b.none
    3890:	ldr	x0, [sp, #392]
    3894:	and	x0, x0, #0x4000000000000
    3898:	cmp	x0, #0x0
    389c:	b.ne	38ac <__addtf3+0x143c>  // b.any
    38a0:	ldr	w0, [sp, #356]
    38a4:	orr	w0, w0, #0x1
    38a8:	str	w0, [sp, #356]
    38ac:	mov	x0, #0x7fff                	// #32767
    38b0:	str	x0, [sp, #344]
    38b4:	ldr	x1, [sp, #376]
    38b8:	ldr	x0, [sp, #360]
    38bc:	orr	x0, x1, x0
    38c0:	cmp	x0, #0x0
    38c4:	b.ne	3940 <__addtf3+0x14d0>  // b.any
    38c8:	ldr	x1, [sp, #392]
    38cc:	ldr	x0, [sp, #368]
    38d0:	orr	x0, x1, x0
    38d4:	cmp	x0, #0x0
    38d8:	b.ne	3924 <__addtf3+0x14b4>  // b.any
    38dc:	str	xzr, [sp, #384]
    38e0:	mov	x0, #0xffffffffffffffff    	// #-1
    38e4:	str	x0, [sp, #336]
    38e8:	mov	x0, #0xffffffffffff        	// #281474976710655
    38ec:	str	x0, [sp, #328]
    38f0:	ldr	x0, [sp, #328]
    38f4:	lsl	x1, x0, #3
    38f8:	ldr	x0, [sp, #336]
    38fc:	lsr	x0, x0, #61
    3900:	orr	x0, x1, x0
    3904:	str	x0, [sp, #328]
    3908:	ldr	x0, [sp, #336]
    390c:	lsl	x0, x0, #3
    3910:	str	x0, [sp, #336]
    3914:	ldr	w0, [sp, #356]
    3918:	orr	w0, w0, #0x1
    391c:	str	w0, [sp, #356]
    3920:	b	3d28 <__addtf3+0x18b8>
    3924:	ldr	x0, [sp, #272]
    3928:	str	x0, [sp, #384]
    392c:	ldr	x0, [sp, #368]
    3930:	str	x0, [sp, #336]
    3934:	ldr	x0, [sp, #392]
    3938:	str	x0, [sp, #328]
    393c:	b	3d28 <__addtf3+0x18b8>
    3940:	ldr	x1, [sp, #392]
    3944:	ldr	x0, [sp, #368]
    3948:	orr	x0, x1, x0
    394c:	cmp	x0, #0x0
    3950:	b.ne	3970 <__addtf3+0x1500>  // b.any
    3954:	ldr	x0, [sp, #288]
    3958:	str	x0, [sp, #384]
    395c:	ldr	x0, [sp, #360]
    3960:	str	x0, [sp, #336]
    3964:	ldr	x0, [sp, #376]
    3968:	str	x0, [sp, #328]
    396c:	b	3d28 <__addtf3+0x18b8>
    3970:	ldr	x0, [sp, #360]
    3974:	lsr	x1, x0, #3
    3978:	ldr	x0, [sp, #376]
    397c:	lsl	x0, x0, #61
    3980:	orr	x0, x1, x0
    3984:	str	x0, [sp, #360]
    3988:	ldr	x0, [sp, #376]
    398c:	lsr	x0, x0, #3
    3990:	str	x0, [sp, #376]
    3994:	ldr	x0, [sp, #368]
    3998:	lsr	x1, x0, #3
    399c:	ldr	x0, [sp, #392]
    39a0:	lsl	x0, x0, #61
    39a4:	orr	x0, x1, x0
    39a8:	str	x0, [sp, #368]
    39ac:	ldr	x0, [sp, #392]
    39b0:	lsr	x0, x0, #3
    39b4:	str	x0, [sp, #392]
    39b8:	ldr	x0, [sp, #376]
    39bc:	and	x0, x0, #0x800000000000
    39c0:	cmp	x0, #0x0
    39c4:	b.eq	39f4 <__addtf3+0x1584>  // b.none
    39c8:	ldr	x0, [sp, #392]
    39cc:	and	x0, x0, #0x800000000000
    39d0:	cmp	x0, #0x0
    39d4:	b.ne	39f4 <__addtf3+0x1584>  // b.any
    39d8:	ldr	x0, [sp, #272]
    39dc:	str	x0, [sp, #384]
    39e0:	ldr	x0, [sp, #368]
    39e4:	str	x0, [sp, #336]
    39e8:	ldr	x0, [sp, #392]
    39ec:	str	x0, [sp, #328]
    39f0:	b	3a0c <__addtf3+0x159c>
    39f4:	ldr	x0, [sp, #288]
    39f8:	str	x0, [sp, #384]
    39fc:	ldr	x0, [sp, #360]
    3a00:	str	x0, [sp, #336]
    3a04:	ldr	x0, [sp, #376]
    3a08:	str	x0, [sp, #328]
    3a0c:	mov	x0, #0x3                   	// #3
    3a10:	str	x0, [sp, #248]
    3a14:	ldr	x0, [sp, #328]
    3a18:	lsl	x1, x0, #3
    3a1c:	ldr	x0, [sp, #336]
    3a20:	lsr	x0, x0, #61
    3a24:	orr	x0, x1, x0
    3a28:	str	x0, [sp, #328]
    3a2c:	ldr	x0, [sp, #336]
    3a30:	lsl	x0, x0, #3
    3a34:	str	x0, [sp, #336]
    3a38:	b	3d28 <__addtf3+0x18b8>
    3a3c:	ldr	x0, [sp, #296]
    3a40:	str	x0, [sp, #344]
    3a44:	ldr	x1, [sp, #360]
    3a48:	ldr	x0, [sp, #368]
    3a4c:	sub	x0, x1, x0
    3a50:	str	x0, [sp, #264]
    3a54:	ldr	x1, [sp, #376]
    3a58:	ldr	x0, [sp, #392]
    3a5c:	sub	x1, x1, x0
    3a60:	ldr	x2, [sp, #264]
    3a64:	ldr	x0, [sp, #360]
    3a68:	cmp	x2, x0
    3a6c:	cset	w0, hi  // hi = pmore
    3a70:	and	w0, w0, #0xff
    3a74:	and	x0, x0, #0xff
    3a78:	sub	x0, x1, x0
    3a7c:	str	x0, [sp, #328]
    3a80:	ldr	x0, [sp, #264]
    3a84:	str	x0, [sp, #336]
    3a88:	ldr	x0, [sp, #288]
    3a8c:	str	x0, [sp, #384]
    3a90:	ldr	x0, [sp, #328]
    3a94:	and	x0, x0, #0x8000000000000
    3a98:	cmp	x0, #0x0
    3a9c:	b.eq	3af0 <__addtf3+0x1680>  // b.none
    3aa0:	ldr	x1, [sp, #368]
    3aa4:	ldr	x0, [sp, #360]
    3aa8:	sub	x0, x1, x0
    3aac:	str	x0, [sp, #256]
    3ab0:	ldr	x1, [sp, #392]
    3ab4:	ldr	x0, [sp, #376]
    3ab8:	sub	x1, x1, x0
    3abc:	ldr	x2, [sp, #256]
    3ac0:	ldr	x0, [sp, #368]
    3ac4:	cmp	x2, x0
    3ac8:	cset	w0, hi  // hi = pmore
    3acc:	and	w0, w0, #0xff
    3ad0:	and	x0, x0, #0xff
    3ad4:	sub	x0, x1, x0
    3ad8:	str	x0, [sp, #328]
    3adc:	ldr	x0, [sp, #256]
    3ae0:	str	x0, [sp, #336]
    3ae4:	ldr	x0, [sp, #272]
    3ae8:	str	x0, [sp, #384]
    3aec:	b	3b48 <__addtf3+0x16d8>
    3af0:	ldr	x1, [sp, #328]
    3af4:	ldr	x0, [sp, #336]
    3af8:	orr	x0, x1, x0
    3afc:	cmp	x0, #0x0
    3b00:	b.ne	3b48 <__addtf3+0x16d8>  // b.any
    3b04:	str	xzr, [sp, #344]
    3b08:	ldr	x0, [sp, #304]
    3b0c:	and	x0, x0, #0xc00000
    3b10:	cmp	x0, #0x800, lsl #12
    3b14:	cset	w0, eq  // eq = none
    3b18:	and	w0, w0, #0xff
    3b1c:	and	x0, x0, #0xff
    3b20:	str	x0, [sp, #384]
    3b24:	b	3d28 <__addtf3+0x18b8>
    3b28:	ldr	x0, [sp, #328]
    3b2c:	and	x0, x0, #0x8000000000000
    3b30:	cmp	x0, #0x0
    3b34:	b.eq	3d24 <__addtf3+0x18b4>  // b.none
    3b38:	ldr	x0, [sp, #328]
    3b3c:	and	x0, x0, #0x7ffffffffffff
    3b40:	str	x0, [sp, #328]
    3b44:	b	3b4c <__addtf3+0x16dc>
    3b48:	nop
    3b4c:	ldr	x0, [sp, #328]
    3b50:	cmp	x0, #0x0
    3b54:	b.eq	3b68 <__addtf3+0x16f8>  // b.none
    3b58:	ldr	x0, [sp, #328]
    3b5c:	clz	x0, x0
    3b60:	str	w0, [sp, #316]
    3b64:	b	3b80 <__addtf3+0x1710>
    3b68:	ldr	x0, [sp, #336]
    3b6c:	clz	x0, x0
    3b70:	str	w0, [sp, #316]
    3b74:	ldr	w0, [sp, #316]
    3b78:	add	w0, w0, #0x40
    3b7c:	str	w0, [sp, #316]
    3b80:	ldr	w0, [sp, #316]
    3b84:	sub	w0, w0, #0xc
    3b88:	str	w0, [sp, #316]
    3b8c:	ldr	w0, [sp, #316]
    3b90:	cmp	w0, #0x3f
    3b94:	b.gt	3bd4 <__addtf3+0x1764>
    3b98:	ldr	w0, [sp, #316]
    3b9c:	ldr	x1, [sp, #328]
    3ba0:	lsl	x1, x1, x0
    3ba4:	mov	w2, #0x40                  	// #64
    3ba8:	ldr	w0, [sp, #316]
    3bac:	sub	w0, w2, w0
    3bb0:	ldr	x2, [sp, #336]
    3bb4:	lsr	x0, x2, x0
    3bb8:	orr	x0, x1, x0
    3bbc:	str	x0, [sp, #328]
    3bc0:	ldr	w0, [sp, #316]
    3bc4:	ldr	x1, [sp, #336]
    3bc8:	lsl	x0, x1, x0
    3bcc:	str	x0, [sp, #336]
    3bd0:	b	3bec <__addtf3+0x177c>
    3bd4:	ldr	w0, [sp, #316]
    3bd8:	sub	w0, w0, #0x40
    3bdc:	ldr	x1, [sp, #336]
    3be0:	lsl	x0, x1, x0
    3be4:	str	x0, [sp, #328]
    3be8:	str	xzr, [sp, #336]
    3bec:	ldrsw	x0, [sp, #316]
    3bf0:	ldr	x1, [sp, #344]
    3bf4:	cmp	x1, x0
    3bf8:	b.gt	3ce4 <__addtf3+0x1874>
    3bfc:	ldr	w0, [sp, #316]
    3c00:	ldr	x1, [sp, #344]
    3c04:	sub	w0, w0, w1
    3c08:	add	w0, w0, #0x1
    3c0c:	str	w0, [sp, #316]
    3c10:	ldr	w0, [sp, #316]
    3c14:	cmp	w0, #0x3f
    3c18:	b.gt	3c80 <__addtf3+0x1810>
    3c1c:	mov	w1, #0x40                  	// #64
    3c20:	ldr	w0, [sp, #316]
    3c24:	sub	w0, w1, w0
    3c28:	ldr	x1, [sp, #328]
    3c2c:	lsl	x1, x1, x0
    3c30:	ldr	w0, [sp, #316]
    3c34:	ldr	x2, [sp, #336]
    3c38:	lsr	x0, x2, x0
    3c3c:	orr	x1, x1, x0
    3c40:	mov	w2, #0x40                  	// #64
    3c44:	ldr	w0, [sp, #316]
    3c48:	sub	w0, w2, w0
    3c4c:	ldr	x2, [sp, #336]
    3c50:	lsl	x0, x2, x0
    3c54:	cmp	x0, #0x0
    3c58:	cset	w0, ne  // ne = any
    3c5c:	and	w0, w0, #0xff
    3c60:	sxtw	x0, w0
    3c64:	orr	x0, x1, x0
    3c68:	str	x0, [sp, #336]
    3c6c:	ldr	w0, [sp, #316]
    3c70:	ldr	x1, [sp, #328]
    3c74:	lsr	x0, x1, x0
    3c78:	str	x0, [sp, #328]
    3c7c:	b	3cdc <__addtf3+0x186c>
    3c80:	ldr	w0, [sp, #316]
    3c84:	sub	w0, w0, #0x40
    3c88:	ldr	x1, [sp, #328]
    3c8c:	lsr	x1, x1, x0
    3c90:	ldr	w0, [sp, #316]
    3c94:	cmp	w0, #0x40
    3c98:	b.eq	3cb4 <__addtf3+0x1844>  // b.none
    3c9c:	mov	w2, #0x80                  	// #128
    3ca0:	ldr	w0, [sp, #316]
    3ca4:	sub	w0, w2, w0
    3ca8:	ldr	x2, [sp, #328]
    3cac:	lsl	x0, x2, x0
    3cb0:	b	3cb8 <__addtf3+0x1848>
    3cb4:	mov	x0, #0x0                   	// #0
    3cb8:	ldr	x2, [sp, #336]
    3cbc:	orr	x0, x0, x2
    3cc0:	cmp	x0, #0x0
    3cc4:	cset	w0, ne  // ne = any
    3cc8:	and	w0, w0, #0xff
    3ccc:	and	x0, x0, #0xff
    3cd0:	orr	x0, x1, x0
    3cd4:	str	x0, [sp, #336]
    3cd8:	str	xzr, [sp, #328]
    3cdc:	str	xzr, [sp, #344]
    3ce0:	b	3d28 <__addtf3+0x18b8>
    3ce4:	ldrsw	x0, [sp, #316]
    3ce8:	ldr	x1, [sp, #344]
    3cec:	sub	x0, x1, x0
    3cf0:	str	x0, [sp, #344]
    3cf4:	ldr	x0, [sp, #328]
    3cf8:	and	x0, x0, #0xfff7ffffffffffff
    3cfc:	str	x0, [sp, #328]
    3d00:	b	3d28 <__addtf3+0x18b8>
    3d04:	nop
    3d08:	b	3d28 <__addtf3+0x18b8>
    3d0c:	nop
    3d10:	b	3d28 <__addtf3+0x18b8>
    3d14:	nop
    3d18:	b	3d28 <__addtf3+0x18b8>
    3d1c:	nop
    3d20:	b	3d28 <__addtf3+0x18b8>
    3d24:	nop
    3d28:	ldr	x0, [sp, #344]
    3d2c:	cmp	x0, #0x0
    3d30:	b.ne	3d50 <__addtf3+0x18e0>  // b.any
    3d34:	ldr	x1, [sp, #328]
    3d38:	ldr	x0, [sp, #336]
    3d3c:	orr	x0, x1, x0
    3d40:	cmp	x0, #0x0
    3d44:	b.eq	3d50 <__addtf3+0x18e0>  // b.none
    3d48:	mov	w0, #0x1                   	// #1
    3d4c:	b	3d54 <__addtf3+0x18e4>
    3d50:	mov	w0, #0x0                   	// #0
    3d54:	str	w0, [sp, #148]
    3d58:	ldr	x0, [sp, #336]
    3d5c:	and	x0, x0, #0x7
    3d60:	cmp	x0, #0x0
    3d64:	b.eq	3eac <__addtf3+0x1a3c>  // b.none
    3d68:	ldr	w0, [sp, #356]
    3d6c:	orr	w0, w0, #0x10
    3d70:	str	w0, [sp, #356]
    3d74:	ldr	x0, [sp, #304]
    3d78:	and	x0, x0, #0xc00000
    3d7c:	cmp	x0, #0xc00, lsl #12
    3d80:	b.eq	3eb4 <__addtf3+0x1a44>  // b.none
    3d84:	cmp	x0, #0xc00, lsl #12
    3d88:	b.hi	3eb8 <__addtf3+0x1a48>  // b.pmore
    3d8c:	cmp	x0, #0x800, lsl #12
    3d90:	b.eq	3e54 <__addtf3+0x19e4>  // b.none
    3d94:	cmp	x0, #0x800, lsl #12
    3d98:	b.hi	3eb8 <__addtf3+0x1a48>  // b.pmore
    3d9c:	cmp	x0, #0x0
    3da0:	b.eq	3db0 <__addtf3+0x1940>  // b.none
    3da4:	cmp	x0, #0x400, lsl #12
    3da8:	b.eq	3dfc <__addtf3+0x198c>  // b.none
    3dac:	b	3eb8 <__addtf3+0x1a48>
    3db0:	ldr	x0, [sp, #336]
    3db4:	and	x0, x0, #0xf
    3db8:	cmp	x0, #0x4
    3dbc:	b.eq	3eb4 <__addtf3+0x1a44>  // b.none
    3dc0:	ldr	x0, [sp, #336]
    3dc4:	add	x0, x0, #0x4
    3dc8:	str	x0, [sp, #120]
    3dcc:	ldr	x1, [sp, #120]
    3dd0:	ldr	x0, [sp, #336]
    3dd4:	cmp	x1, x0
    3dd8:	cset	w0, cc  // cc = lo, ul, last
    3ddc:	and	w0, w0, #0xff
    3de0:	and	x0, x0, #0xff
    3de4:	ldr	x1, [sp, #328]
    3de8:	add	x0, x1, x0
    3dec:	str	x0, [sp, #328]
    3df0:	ldr	x0, [sp, #120]
    3df4:	str	x0, [sp, #336]
    3df8:	b	3eb4 <__addtf3+0x1a44>
    3dfc:	ldr	x0, [sp, #384]
    3e00:	cmp	x0, #0x0
    3e04:	b.ne	3eb4 <__addtf3+0x1a44>  // b.any
    3e08:	ldr	x0, [sp, #336]
    3e0c:	and	x0, x0, #0x7
    3e10:	cmp	x0, #0x0
    3e14:	b.eq	3eb4 <__addtf3+0x1a44>  // b.none
    3e18:	ldr	x0, [sp, #336]
    3e1c:	add	x0, x0, #0x8
    3e20:	str	x0, [sp, #128]
    3e24:	ldr	x1, [sp, #128]
    3e28:	ldr	x0, [sp, #336]
    3e2c:	cmp	x1, x0
    3e30:	cset	w0, cc  // cc = lo, ul, last
    3e34:	and	w0, w0, #0xff
    3e38:	and	x0, x0, #0xff
    3e3c:	ldr	x1, [sp, #328]
    3e40:	add	x0, x1, x0
    3e44:	str	x0, [sp, #328]
    3e48:	ldr	x0, [sp, #128]
    3e4c:	str	x0, [sp, #336]
    3e50:	b	3eb4 <__addtf3+0x1a44>
    3e54:	ldr	x0, [sp, #384]
    3e58:	cmp	x0, #0x0
    3e5c:	b.eq	3eb4 <__addtf3+0x1a44>  // b.none
    3e60:	ldr	x0, [sp, #336]
    3e64:	and	x0, x0, #0x7
    3e68:	cmp	x0, #0x0
    3e6c:	b.eq	3eb4 <__addtf3+0x1a44>  // b.none
    3e70:	ldr	x0, [sp, #336]
    3e74:	add	x0, x0, #0x8
    3e78:	str	x0, [sp, #136]
    3e7c:	ldr	x1, [sp, #136]
    3e80:	ldr	x0, [sp, #336]
    3e84:	cmp	x1, x0
    3e88:	cset	w0, cc  // cc = lo, ul, last
    3e8c:	and	w0, w0, #0xff
    3e90:	and	x0, x0, #0xff
    3e94:	ldr	x1, [sp, #328]
    3e98:	add	x0, x1, x0
    3e9c:	str	x0, [sp, #328]
    3ea0:	ldr	x0, [sp, #136]
    3ea4:	str	x0, [sp, #336]
    3ea8:	b	3eb4 <__addtf3+0x1a44>
    3eac:	nop
    3eb0:	b	3eb8 <__addtf3+0x1a48>
    3eb4:	nop
    3eb8:	ldr	w0, [sp, #148]
    3ebc:	cmp	w0, #0x0
    3ec0:	b.eq	3ef0 <__addtf3+0x1a80>  // b.none
    3ec4:	ldr	w0, [sp, #356]
    3ec8:	and	w0, w0, #0x10
    3ecc:	cmp	w0, #0x0
    3ed0:	b.ne	3ee4 <__addtf3+0x1a74>  // b.any
    3ed4:	ldr	x0, [sp, #304]
    3ed8:	and	x0, x0, #0x800
    3edc:	cmp	x0, #0x0
    3ee0:	b.eq	3ef0 <__addtf3+0x1a80>  // b.none
    3ee4:	ldr	w0, [sp, #356]
    3ee8:	orr	w0, w0, #0x8
    3eec:	str	w0, [sp, #356]
    3ef0:	ldr	x0, [sp, #328]
    3ef4:	and	x0, x0, #0x8000000000000
    3ef8:	cmp	x0, #0x0
    3efc:	b.eq	3fb4 <__addtf3+0x1b44>  // b.none
    3f00:	ldr	x0, [sp, #328]
    3f04:	and	x0, x0, #0xfff7ffffffffffff
    3f08:	str	x0, [sp, #328]
    3f0c:	ldr	x0, [sp, #344]
    3f10:	add	x0, x0, #0x1
    3f14:	str	x0, [sp, #344]
    3f18:	ldr	x1, [sp, #344]
    3f1c:	mov	x0, #0x7fff                	// #32767
    3f20:	cmp	x1, x0
    3f24:	b.ne	3fb4 <__addtf3+0x1b44>  // b.any
    3f28:	ldr	x0, [sp, #304]
    3f2c:	and	x0, x0, #0xc00000
    3f30:	cmp	x0, #0x0
    3f34:	b.eq	3f70 <__addtf3+0x1b00>  // b.none
    3f38:	ldr	x0, [sp, #304]
    3f3c:	and	x0, x0, #0xc00000
    3f40:	cmp	x0, #0x400, lsl #12
    3f44:	b.ne	3f54 <__addtf3+0x1ae4>  // b.any
    3f48:	ldr	x0, [sp, #384]
    3f4c:	cmp	x0, #0x0
    3f50:	b.eq	3f70 <__addtf3+0x1b00>  // b.none
    3f54:	ldr	x0, [sp, #304]
    3f58:	and	x0, x0, #0xc00000
    3f5c:	cmp	x0, #0x800, lsl #12
    3f60:	b.ne	3f84 <__addtf3+0x1b14>  // b.any
    3f64:	ldr	x0, [sp, #384]
    3f68:	cmp	x0, #0x0
    3f6c:	b.eq	3f84 <__addtf3+0x1b14>  // b.none
    3f70:	mov	x0, #0x7fff                	// #32767
    3f74:	str	x0, [sp, #344]
    3f78:	str	xzr, [sp, #336]
    3f7c:	str	xzr, [sp, #328]
    3f80:	b	3f9c <__addtf3+0x1b2c>
    3f84:	mov	x0, #0x7ffe                	// #32766
    3f88:	str	x0, [sp, #344]
    3f8c:	mov	x0, #0xffffffffffffffff    	// #-1
    3f90:	str	x0, [sp, #336]
    3f94:	mov	x0, #0xffffffffffffffff    	// #-1
    3f98:	str	x0, [sp, #328]
    3f9c:	ldr	w0, [sp, #356]
    3fa0:	orr	w0, w0, #0x10
    3fa4:	str	w0, [sp, #356]
    3fa8:	ldr	w0, [sp, #356]
    3fac:	orr	w0, w0, #0x4
    3fb0:	str	w0, [sp, #356]
    3fb4:	ldr	x0, [sp, #336]
    3fb8:	lsr	x1, x0, #3
    3fbc:	ldr	x0, [sp, #328]
    3fc0:	lsl	x0, x0, #61
    3fc4:	orr	x0, x1, x0
    3fc8:	str	x0, [sp, #336]
    3fcc:	ldr	x0, [sp, #328]
    3fd0:	lsr	x0, x0, #3
    3fd4:	str	x0, [sp, #328]
    3fd8:	ldr	x1, [sp, #344]
    3fdc:	mov	x0, #0x7fff                	// #32767
    3fe0:	cmp	x1, x0
    3fe4:	b.ne	4008 <__addtf3+0x1b98>  // b.any
    3fe8:	ldr	x1, [sp, #328]
    3fec:	ldr	x0, [sp, #336]
    3ff0:	orr	x0, x1, x0
    3ff4:	cmp	x0, #0x0
    3ff8:	b.eq	4008 <__addtf3+0x1b98>  // b.none
    3ffc:	ldr	x0, [sp, #328]
    4000:	orr	x0, x0, #0x800000000000
    4004:	str	x0, [sp, #328]
    4008:	ldr	x0, [sp, #336]
    400c:	str	x0, [sp, #48]
    4010:	ldr	x0, [sp, #328]
    4014:	and	x1, x0, #0xffffffffffff
    4018:	ldr	x0, [sp, #56]
    401c:	bfxil	x0, x1, #0, #48
    4020:	str	x0, [sp, #56]
    4024:	ldr	x0, [sp, #344]
    4028:	and	w0, w0, #0x7fff
    402c:	and	w1, w0, #0xffff
    4030:	ldrh	w0, [sp, #62]
    4034:	bfxil	w0, w1, #0, #15
    4038:	strh	w0, [sp, #62]
    403c:	ldr	x0, [sp, #384]
    4040:	and	w0, w0, #0x1
    4044:	and	w1, w0, #0xff
    4048:	ldrb	w0, [sp, #63]
    404c:	bfi	w0, w1, #7, #1
    4050:	strb	w0, [sp, #63]
    4054:	ldr	q0, [sp, #48]
    4058:	str	q0, [sp, #96]
    405c:	ldrsw	x0, [sp, #356]
    4060:	cmp	x0, #0x0
    4064:	b.eq	4070 <__addtf3+0x1c00>  // b.none
    4068:	ldr	w0, [sp, #356]
    406c:	bl	6318 <__sfp_handle_exceptions>
    4070:	ldr	q0, [sp, #96]
    4074:	ldp	x29, x30, [sp], #400
    4078:	ret

000000000000407c <__eqtf2>:
    407c:	stp	x29, x30, [sp, #-176]!
    4080:	mov	x29, sp
    4084:	str	q0, [sp, #32]
    4088:	str	q1, [sp, #16]
    408c:	str	wzr, [sp, #160]
    4090:	str	xzr, [sp, #152]
    4094:	mrs	x0, fpcr
    4098:	str	x0, [sp, #152]
    409c:	ldr	q0, [sp, #32]
    40a0:	str	q0, [sp, #64]
    40a4:	ldr	x0, [sp, #64]
    40a8:	str	x0, [sp, #144]
    40ac:	ldr	x0, [sp, #72]
    40b0:	ubfx	x0, x0, #0, #48
    40b4:	str	x0, [sp, #136]
    40b8:	ldrh	w0, [sp, #78]
    40bc:	ubfx	x0, x0, #0, #15
    40c0:	and	w0, w0, #0xffff
    40c4:	and	x0, x0, #0xffff
    40c8:	str	x0, [sp, #128]
    40cc:	ldrb	w0, [sp, #79]
    40d0:	ubfx	x0, x0, #7, #1
    40d4:	and	w0, w0, #0xff
    40d8:	and	x0, x0, #0xff
    40dc:	str	x0, [sp, #120]
    40e0:	ldr	q0, [sp, #16]
    40e4:	str	q0, [sp, #48]
    40e8:	ldr	x0, [sp, #48]
    40ec:	str	x0, [sp, #112]
    40f0:	ldr	x0, [sp, #56]
    40f4:	ubfx	x0, x0, #0, #48
    40f8:	str	x0, [sp, #104]
    40fc:	ldrh	w0, [sp, #62]
    4100:	ubfx	x0, x0, #0, #15
    4104:	and	w0, w0, #0xffff
    4108:	and	x0, x0, #0xffff
    410c:	str	x0, [sp, #96]
    4110:	ldrb	w0, [sp, #63]
    4114:	ubfx	x0, x0, #7, #1
    4118:	and	w0, w0, #0xff
    411c:	and	x0, x0, #0xff
    4120:	str	x0, [sp, #88]
    4124:	ldr	x1, [sp, #128]
    4128:	mov	x0, #0x7fff                	// #32767
    412c:	cmp	x1, x0
    4130:	b.ne	4148 <__eqtf2+0xcc>  // b.any
    4134:	ldr	x1, [sp, #136]
    4138:	ldr	x0, [sp, #144]
    413c:	orr	x0, x1, x0
    4140:	cmp	x0, #0x0
    4144:	b.ne	416c <__eqtf2+0xf0>  // b.any
    4148:	ldr	x1, [sp, #96]
    414c:	mov	x0, #0x7fff                	// #32767
    4150:	cmp	x1, x0
    4154:	b.ne	421c <__eqtf2+0x1a0>  // b.any
    4158:	ldr	x1, [sp, #104]
    415c:	ldr	x0, [sp, #112]
    4160:	orr	x0, x1, x0
    4164:	cmp	x0, #0x0
    4168:	b.eq	421c <__eqtf2+0x1a0>  // b.none
    416c:	mov	w0, #0x1                   	// #1
    4170:	str	w0, [sp, #164]
    4174:	str	wzr, [sp, #168]
    4178:	ldr	x1, [sp, #128]
    417c:	mov	x0, #0x7fff                	// #32767
    4180:	cmp	x1, x0
    4184:	b.ne	41b4 <__eqtf2+0x138>  // b.any
    4188:	ldr	x1, [sp, #136]
    418c:	ldr	x0, [sp, #144]
    4190:	orr	x0, x1, x0
    4194:	cmp	x0, #0x0
    4198:	b.eq	41b4 <__eqtf2+0x138>  // b.none
    419c:	ldr	x0, [sp, #136]
    41a0:	and	x0, x0, #0x800000000000
    41a4:	cmp	x0, #0x0
    41a8:	b.ne	41b4 <__eqtf2+0x138>  // b.any
    41ac:	mov	w0, #0x1                   	// #1
    41b0:	str	w0, [sp, #168]
    41b4:	ldr	w0, [sp, #168]
    41b8:	cmp	w0, #0x0
    41bc:	b.ne	420c <__eqtf2+0x190>  // b.any
    41c0:	str	wzr, [sp, #172]
    41c4:	ldr	x1, [sp, #96]
    41c8:	mov	x0, #0x7fff                	// #32767
    41cc:	cmp	x1, x0
    41d0:	b.ne	4200 <__eqtf2+0x184>  // b.any
    41d4:	ldr	x1, [sp, #104]
    41d8:	ldr	x0, [sp, #112]
    41dc:	orr	x0, x1, x0
    41e0:	cmp	x0, #0x0
    41e4:	b.eq	4200 <__eqtf2+0x184>  // b.none
    41e8:	ldr	x0, [sp, #104]
    41ec:	and	x0, x0, #0x800000000000
    41f0:	cmp	x0, #0x0
    41f4:	b.ne	4200 <__eqtf2+0x184>  // b.any
    41f8:	mov	w0, #0x1                   	// #1
    41fc:	str	w0, [sp, #172]
    4200:	ldr	w0, [sp, #172]
    4204:	cmp	w0, #0x0
    4208:	b.eq	4290 <__eqtf2+0x214>  // b.none
    420c:	ldr	w0, [sp, #160]
    4210:	orr	w0, w0, #0x1
    4214:	str	w0, [sp, #160]
    4218:	b	4290 <__eqtf2+0x214>
    421c:	ldr	x1, [sp, #128]
    4220:	ldr	x0, [sp, #96]
    4224:	cmp	x1, x0
    4228:	b.ne	427c <__eqtf2+0x200>  // b.any
    422c:	ldr	x1, [sp, #136]
    4230:	ldr	x0, [sp, #104]
    4234:	cmp	x1, x0
    4238:	b.ne	427c <__eqtf2+0x200>  // b.any
    423c:	ldr	x1, [sp, #144]
    4240:	ldr	x0, [sp, #112]
    4244:	cmp	x1, x0
    4248:	b.ne	427c <__eqtf2+0x200>  // b.any
    424c:	ldr	x1, [sp, #120]
    4250:	ldr	x0, [sp, #88]
    4254:	cmp	x1, x0
    4258:	b.eq	4284 <__eqtf2+0x208>  // b.none
    425c:	ldr	x0, [sp, #128]
    4260:	cmp	x0, #0x0
    4264:	b.ne	427c <__eqtf2+0x200>  // b.any
    4268:	ldr	x1, [sp, #136]
    426c:	ldr	x0, [sp, #144]
    4270:	orr	x0, x1, x0
    4274:	cmp	x0, #0x0
    4278:	b.eq	4284 <__eqtf2+0x208>  // b.none
    427c:	mov	w0, #0x1                   	// #1
    4280:	b	4288 <__eqtf2+0x20c>
    4284:	mov	w0, #0x0                   	// #0
    4288:	str	w0, [sp, #164]
    428c:	b	4294 <__eqtf2+0x218>
    4290:	nop
    4294:	ldrsw	x0, [sp, #160]
    4298:	cmp	x0, #0x0
    429c:	b.eq	42a8 <__eqtf2+0x22c>  // b.none
    42a0:	ldr	w0, [sp, #160]
    42a4:	bl	6318 <__sfp_handle_exceptions>
    42a8:	ldr	w0, [sp, #164]
    42ac:	ldp	x29, x30, [sp], #176
    42b0:	ret

00000000000042b4 <__getf2>:
    42b4:	stp	x29, x30, [sp, #-176]!
    42b8:	mov	x29, sp
    42bc:	str	q0, [sp, #32]
    42c0:	str	q1, [sp, #16]
    42c4:	str	wzr, [sp, #168]
    42c8:	str	xzr, [sp, #160]
    42cc:	mrs	x0, fpcr
    42d0:	str	x0, [sp, #160]
    42d4:	ldr	q0, [sp, #32]
    42d8:	str	q0, [sp, #64]
    42dc:	ldr	x0, [sp, #64]
    42e0:	str	x0, [sp, #152]
    42e4:	ldr	x0, [sp, #72]
    42e8:	ubfx	x0, x0, #0, #48
    42ec:	str	x0, [sp, #144]
    42f0:	ldrh	w0, [sp, #78]
    42f4:	ubfx	x0, x0, #0, #15
    42f8:	and	w0, w0, #0xffff
    42fc:	and	x0, x0, #0xffff
    4300:	str	x0, [sp, #136]
    4304:	ldrb	w0, [sp, #79]
    4308:	ubfx	x0, x0, #7, #1
    430c:	and	w0, w0, #0xff
    4310:	and	x0, x0, #0xff
    4314:	str	x0, [sp, #128]
    4318:	ldr	q0, [sp, #16]
    431c:	str	q0, [sp, #48]
    4320:	ldr	x0, [sp, #48]
    4324:	str	x0, [sp, #120]
    4328:	ldr	x0, [sp, #56]
    432c:	ubfx	x0, x0, #0, #48
    4330:	str	x0, [sp, #112]
    4334:	ldrh	w0, [sp, #62]
    4338:	ubfx	x0, x0, #0, #15
    433c:	and	w0, w0, #0xffff
    4340:	and	x0, x0, #0xffff
    4344:	str	x0, [sp, #104]
    4348:	ldrb	w0, [sp, #63]
    434c:	ubfx	x0, x0, #7, #1
    4350:	and	w0, w0, #0xff
    4354:	and	x0, x0, #0xff
    4358:	str	x0, [sp, #96]
    435c:	ldr	x1, [sp, #136]
    4360:	mov	x0, #0x7fff                	// #32767
    4364:	cmp	x1, x0
    4368:	b.ne	4380 <__getf2+0xcc>  // b.any
    436c:	ldr	x1, [sp, #144]
    4370:	ldr	x0, [sp, #152]
    4374:	orr	x0, x1, x0
    4378:	cmp	x0, #0x0
    437c:	b.ne	43a4 <__getf2+0xf0>  // b.any
    4380:	ldr	x1, [sp, #104]
    4384:	mov	x0, #0x7fff                	// #32767
    4388:	cmp	x1, x0
    438c:	b.ne	43bc <__getf2+0x108>  // b.any
    4390:	ldr	x1, [sp, #112]
    4394:	ldr	x0, [sp, #120]
    4398:	orr	x0, x1, x0
    439c:	cmp	x0, #0x0
    43a0:	b.eq	43bc <__getf2+0x108>  // b.none
    43a4:	mov	w0, #0xfffffffe            	// #-2
    43a8:	str	w0, [sp, #172]
    43ac:	ldr	w0, [sp, #168]
    43b0:	orr	w0, w0, #0x1
    43b4:	str	w0, [sp, #168]
    43b8:	b	45c8 <__getf2+0x314>
    43bc:	ldr	x0, [sp, #136]
    43c0:	cmp	x0, #0x0
    43c4:	b.ne	43e4 <__getf2+0x130>  // b.any
    43c8:	ldr	x1, [sp, #144]
    43cc:	ldr	x0, [sp, #152]
    43d0:	orr	x0, x1, x0
    43d4:	cmp	x0, #0x0
    43d8:	b.ne	43e4 <__getf2+0x130>  // b.any
    43dc:	mov	w0, #0x1                   	// #1
    43e0:	b	43e8 <__getf2+0x134>
    43e4:	mov	w0, #0x0                   	// #0
    43e8:	str	w0, [sp, #92]
    43ec:	ldr	x0, [sp, #104]
    43f0:	cmp	x0, #0x0
    43f4:	b.ne	4414 <__getf2+0x160>  // b.any
    43f8:	ldr	x1, [sp, #112]
    43fc:	ldr	x0, [sp, #120]
    4400:	orr	x0, x1, x0
    4404:	cmp	x0, #0x0
    4408:	b.ne	4414 <__getf2+0x160>  // b.any
    440c:	mov	w0, #0x1                   	// #1
    4410:	b	4418 <__getf2+0x164>
    4414:	mov	w0, #0x0                   	// #0
    4418:	str	w0, [sp, #88]
    441c:	ldr	w0, [sp, #92]
    4420:	cmp	w0, #0x0
    4424:	b.eq	443c <__getf2+0x188>  // b.none
    4428:	ldr	w0, [sp, #88]
    442c:	cmp	w0, #0x0
    4430:	b.eq	443c <__getf2+0x188>  // b.none
    4434:	str	wzr, [sp, #172]
    4438:	b	45c8 <__getf2+0x314>
    443c:	ldr	w0, [sp, #92]
    4440:	cmp	w0, #0x0
    4444:	b.eq	4468 <__getf2+0x1b4>  // b.none
    4448:	ldr	x0, [sp, #96]
    444c:	cmp	x0, #0x0
    4450:	b.eq	445c <__getf2+0x1a8>  // b.none
    4454:	mov	w0, #0x1                   	// #1
    4458:	b	4460 <__getf2+0x1ac>
    445c:	mov	w0, #0xffffffff            	// #-1
    4460:	str	w0, [sp, #172]
    4464:	b	45c8 <__getf2+0x314>
    4468:	ldr	w0, [sp, #88]
    446c:	cmp	w0, #0x0
    4470:	b.eq	4494 <__getf2+0x1e0>  // b.none
    4474:	ldr	x0, [sp, #128]
    4478:	cmp	x0, #0x0
    447c:	b.eq	4488 <__getf2+0x1d4>  // b.none
    4480:	mov	w0, #0xffffffff            	// #-1
    4484:	b	448c <__getf2+0x1d8>
    4488:	mov	w0, #0x1                   	// #1
    448c:	str	w0, [sp, #172]
    4490:	b	45c8 <__getf2+0x314>
    4494:	ldr	x1, [sp, #128]
    4498:	ldr	x0, [sp, #96]
    449c:	cmp	x1, x0
    44a0:	b.eq	44c4 <__getf2+0x210>  // b.none
    44a4:	ldr	x0, [sp, #128]
    44a8:	cmp	x0, #0x0
    44ac:	b.eq	44b8 <__getf2+0x204>  // b.none
    44b0:	mov	w0, #0xffffffff            	// #-1
    44b4:	b	44bc <__getf2+0x208>
    44b8:	mov	w0, #0x1                   	// #1
    44bc:	str	w0, [sp, #172]
    44c0:	b	45c8 <__getf2+0x314>
    44c4:	ldr	x1, [sp, #136]
    44c8:	ldr	x0, [sp, #104]
    44cc:	cmp	x1, x0
    44d0:	b.le	44f4 <__getf2+0x240>
    44d4:	ldr	x0, [sp, #128]
    44d8:	cmp	x0, #0x0
    44dc:	b.eq	44e8 <__getf2+0x234>  // b.none
    44e0:	mov	w0, #0xffffffff            	// #-1
    44e4:	b	44ec <__getf2+0x238>
    44e8:	mov	w0, #0x1                   	// #1
    44ec:	str	w0, [sp, #172]
    44f0:	b	45c8 <__getf2+0x314>
    44f4:	ldr	x1, [sp, #136]
    44f8:	ldr	x0, [sp, #104]
    44fc:	cmp	x1, x0
    4500:	b.ge	4524 <__getf2+0x270>  // b.tcont
    4504:	ldr	x0, [sp, #128]
    4508:	cmp	x0, #0x0
    450c:	b.eq	4518 <__getf2+0x264>  // b.none
    4510:	mov	w0, #0x1                   	// #1
    4514:	b	451c <__getf2+0x268>
    4518:	mov	w0, #0xffffffff            	// #-1
    451c:	str	w0, [sp, #172]
    4520:	b	45c8 <__getf2+0x314>
    4524:	ldr	x1, [sp, #144]
    4528:	ldr	x0, [sp, #112]
    452c:	cmp	x1, x0
    4530:	b.hi	4554 <__getf2+0x2a0>  // b.pmore
    4534:	ldr	x1, [sp, #144]
    4538:	ldr	x0, [sp, #112]
    453c:	cmp	x1, x0
    4540:	b.ne	4574 <__getf2+0x2c0>  // b.any
    4544:	ldr	x1, [sp, #152]
    4548:	ldr	x0, [sp, #120]
    454c:	cmp	x1, x0
    4550:	b.ls	4574 <__getf2+0x2c0>  // b.plast
    4554:	ldr	x0, [sp, #128]
    4558:	cmp	x0, #0x0
    455c:	b.eq	4568 <__getf2+0x2b4>  // b.none
    4560:	mov	w0, #0xffffffff            	// #-1
    4564:	b	456c <__getf2+0x2b8>
    4568:	mov	w0, #0x1                   	// #1
    456c:	str	w0, [sp, #172]
    4570:	b	45c8 <__getf2+0x314>
    4574:	ldr	x1, [sp, #112]
    4578:	ldr	x0, [sp, #144]
    457c:	cmp	x1, x0
    4580:	b.hi	45a4 <__getf2+0x2f0>  // b.pmore
    4584:	ldr	x1, [sp, #112]
    4588:	ldr	x0, [sp, #144]
    458c:	cmp	x1, x0
    4590:	b.ne	45c4 <__getf2+0x310>  // b.any
    4594:	ldr	x1, [sp, #120]
    4598:	ldr	x0, [sp, #152]
    459c:	cmp	x1, x0
    45a0:	b.ls	45c4 <__getf2+0x310>  // b.plast
    45a4:	ldr	x0, [sp, #128]
    45a8:	cmp	x0, #0x0
    45ac:	b.eq	45b8 <__getf2+0x304>  // b.none
    45b0:	mov	w0, #0x1                   	// #1
    45b4:	b	45bc <__getf2+0x308>
    45b8:	mov	w0, #0xffffffff            	// #-1
    45bc:	str	w0, [sp, #172]
    45c0:	b	45c8 <__getf2+0x314>
    45c4:	str	wzr, [sp, #172]
    45c8:	ldrsw	x0, [sp, #168]
    45cc:	cmp	x0, #0x0
    45d0:	b.eq	45dc <__getf2+0x328>  // b.none
    45d4:	ldr	w0, [sp, #168]
    45d8:	bl	6318 <__sfp_handle_exceptions>
    45dc:	ldr	w0, [sp, #172]
    45e0:	ldp	x29, x30, [sp], #176
    45e4:	ret

00000000000045e8 <__letf2>:
    45e8:	stp	x29, x30, [sp, #-176]!
    45ec:	mov	x29, sp
    45f0:	str	q0, [sp, #32]
    45f4:	str	q1, [sp, #16]
    45f8:	str	wzr, [sp, #168]
    45fc:	str	xzr, [sp, #160]
    4600:	mrs	x0, fpcr
    4604:	str	x0, [sp, #160]
    4608:	ldr	q0, [sp, #32]
    460c:	str	q0, [sp, #64]
    4610:	ldr	x0, [sp, #64]
    4614:	str	x0, [sp, #152]
    4618:	ldr	x0, [sp, #72]
    461c:	ubfx	x0, x0, #0, #48
    4620:	str	x0, [sp, #144]
    4624:	ldrh	w0, [sp, #78]
    4628:	ubfx	x0, x0, #0, #15
    462c:	and	w0, w0, #0xffff
    4630:	and	x0, x0, #0xffff
    4634:	str	x0, [sp, #136]
    4638:	ldrb	w0, [sp, #79]
    463c:	ubfx	x0, x0, #7, #1
    4640:	and	w0, w0, #0xff
    4644:	and	x0, x0, #0xff
    4648:	str	x0, [sp, #128]
    464c:	ldr	q0, [sp, #16]
    4650:	str	q0, [sp, #48]
    4654:	ldr	x0, [sp, #48]
    4658:	str	x0, [sp, #120]
    465c:	ldr	x0, [sp, #56]
    4660:	ubfx	x0, x0, #0, #48
    4664:	str	x0, [sp, #112]
    4668:	ldrh	w0, [sp, #62]
    466c:	ubfx	x0, x0, #0, #15
    4670:	and	w0, w0, #0xffff
    4674:	and	x0, x0, #0xffff
    4678:	str	x0, [sp, #104]
    467c:	ldrb	w0, [sp, #63]
    4680:	ubfx	x0, x0, #7, #1
    4684:	and	w0, w0, #0xff
    4688:	and	x0, x0, #0xff
    468c:	str	x0, [sp, #96]
    4690:	ldr	x1, [sp, #136]
    4694:	mov	x0, #0x7fff                	// #32767
    4698:	cmp	x1, x0
    469c:	b.ne	46b4 <__letf2+0xcc>  // b.any
    46a0:	ldr	x1, [sp, #144]
    46a4:	ldr	x0, [sp, #152]
    46a8:	orr	x0, x1, x0
    46ac:	cmp	x0, #0x0
    46b0:	b.ne	46d8 <__letf2+0xf0>  // b.any
    46b4:	ldr	x1, [sp, #104]
    46b8:	mov	x0, #0x7fff                	// #32767
    46bc:	cmp	x1, x0
    46c0:	b.ne	46f0 <__letf2+0x108>  // b.any
    46c4:	ldr	x1, [sp, #112]
    46c8:	ldr	x0, [sp, #120]
    46cc:	orr	x0, x1, x0
    46d0:	cmp	x0, #0x0
    46d4:	b.eq	46f0 <__letf2+0x108>  // b.none
    46d8:	mov	w0, #0x2                   	// #2
    46dc:	str	w0, [sp, #172]
    46e0:	ldr	w0, [sp, #168]
    46e4:	orr	w0, w0, #0x1
    46e8:	str	w0, [sp, #168]
    46ec:	b	48fc <__letf2+0x314>
    46f0:	ldr	x0, [sp, #136]
    46f4:	cmp	x0, #0x0
    46f8:	b.ne	4718 <__letf2+0x130>  // b.any
    46fc:	ldr	x1, [sp, #144]
    4700:	ldr	x0, [sp, #152]
    4704:	orr	x0, x1, x0
    4708:	cmp	x0, #0x0
    470c:	b.ne	4718 <__letf2+0x130>  // b.any
    4710:	mov	w0, #0x1                   	// #1
    4714:	b	471c <__letf2+0x134>
    4718:	mov	w0, #0x0                   	// #0
    471c:	str	w0, [sp, #92]
    4720:	ldr	x0, [sp, #104]
    4724:	cmp	x0, #0x0
    4728:	b.ne	4748 <__letf2+0x160>  // b.any
    472c:	ldr	x1, [sp, #112]
    4730:	ldr	x0, [sp, #120]
    4734:	orr	x0, x1, x0
    4738:	cmp	x0, #0x0
    473c:	b.ne	4748 <__letf2+0x160>  // b.any
    4740:	mov	w0, #0x1                   	// #1
    4744:	b	474c <__letf2+0x164>
    4748:	mov	w0, #0x0                   	// #0
    474c:	str	w0, [sp, #88]
    4750:	ldr	w0, [sp, #92]
    4754:	cmp	w0, #0x0
    4758:	b.eq	4770 <__letf2+0x188>  // b.none
    475c:	ldr	w0, [sp, #88]
    4760:	cmp	w0, #0x0
    4764:	b.eq	4770 <__letf2+0x188>  // b.none
    4768:	str	wzr, [sp, #172]
    476c:	b	48fc <__letf2+0x314>
    4770:	ldr	w0, [sp, #92]
    4774:	cmp	w0, #0x0
    4778:	b.eq	479c <__letf2+0x1b4>  // b.none
    477c:	ldr	x0, [sp, #96]
    4780:	cmp	x0, #0x0
    4784:	b.eq	4790 <__letf2+0x1a8>  // b.none
    4788:	mov	w0, #0x1                   	// #1
    478c:	b	4794 <__letf2+0x1ac>
    4790:	mov	w0, #0xffffffff            	// #-1
    4794:	str	w0, [sp, #172]
    4798:	b	48fc <__letf2+0x314>
    479c:	ldr	w0, [sp, #88]
    47a0:	cmp	w0, #0x0
    47a4:	b.eq	47c8 <__letf2+0x1e0>  // b.none
    47a8:	ldr	x0, [sp, #128]
    47ac:	cmp	x0, #0x0
    47b0:	b.eq	47bc <__letf2+0x1d4>  // b.none
    47b4:	mov	w0, #0xffffffff            	// #-1
    47b8:	b	47c0 <__letf2+0x1d8>
    47bc:	mov	w0, #0x1                   	// #1
    47c0:	str	w0, [sp, #172]
    47c4:	b	48fc <__letf2+0x314>
    47c8:	ldr	x1, [sp, #128]
    47cc:	ldr	x0, [sp, #96]
    47d0:	cmp	x1, x0
    47d4:	b.eq	47f8 <__letf2+0x210>  // b.none
    47d8:	ldr	x0, [sp, #128]
    47dc:	cmp	x0, #0x0
    47e0:	b.eq	47ec <__letf2+0x204>  // b.none
    47e4:	mov	w0, #0xffffffff            	// #-1
    47e8:	b	47f0 <__letf2+0x208>
    47ec:	mov	w0, #0x1                   	// #1
    47f0:	str	w0, [sp, #172]
    47f4:	b	48fc <__letf2+0x314>
    47f8:	ldr	x1, [sp, #136]
    47fc:	ldr	x0, [sp, #104]
    4800:	cmp	x1, x0
    4804:	b.le	4828 <__letf2+0x240>
    4808:	ldr	x0, [sp, #128]
    480c:	cmp	x0, #0x0
    4810:	b.eq	481c <__letf2+0x234>  // b.none
    4814:	mov	w0, #0xffffffff            	// #-1
    4818:	b	4820 <__letf2+0x238>
    481c:	mov	w0, #0x1                   	// #1
    4820:	str	w0, [sp, #172]
    4824:	b	48fc <__letf2+0x314>
    4828:	ldr	x1, [sp, #136]
    482c:	ldr	x0, [sp, #104]
    4830:	cmp	x1, x0
    4834:	b.ge	4858 <__letf2+0x270>  // b.tcont
    4838:	ldr	x0, [sp, #128]
    483c:	cmp	x0, #0x0
    4840:	b.eq	484c <__letf2+0x264>  // b.none
    4844:	mov	w0, #0x1                   	// #1
    4848:	b	4850 <__letf2+0x268>
    484c:	mov	w0, #0xffffffff            	// #-1
    4850:	str	w0, [sp, #172]
    4854:	b	48fc <__letf2+0x314>
    4858:	ldr	x1, [sp, #144]
    485c:	ldr	x0, [sp, #112]
    4860:	cmp	x1, x0
    4864:	b.hi	4888 <__letf2+0x2a0>  // b.pmore
    4868:	ldr	x1, [sp, #144]
    486c:	ldr	x0, [sp, #112]
    4870:	cmp	x1, x0
    4874:	b.ne	48a8 <__letf2+0x2c0>  // b.any
    4878:	ldr	x1, [sp, #152]
    487c:	ldr	x0, [sp, #120]
    4880:	cmp	x1, x0
    4884:	b.ls	48a8 <__letf2+0x2c0>  // b.plast
    4888:	ldr	x0, [sp, #128]
    488c:	cmp	x0, #0x0
    4890:	b.eq	489c <__letf2+0x2b4>  // b.none
    4894:	mov	w0, #0xffffffff            	// #-1
    4898:	b	48a0 <__letf2+0x2b8>
    489c:	mov	w0, #0x1                   	// #1
    48a0:	str	w0, [sp, #172]
    48a4:	b	48fc <__letf2+0x314>
    48a8:	ldr	x1, [sp, #112]
    48ac:	ldr	x0, [sp, #144]
    48b0:	cmp	x1, x0
    48b4:	b.hi	48d8 <__letf2+0x2f0>  // b.pmore
    48b8:	ldr	x1, [sp, #112]
    48bc:	ldr	x0, [sp, #144]
    48c0:	cmp	x1, x0
    48c4:	b.ne	48f8 <__letf2+0x310>  // b.any
    48c8:	ldr	x1, [sp, #120]
    48cc:	ldr	x0, [sp, #152]
    48d0:	cmp	x1, x0
    48d4:	b.ls	48f8 <__letf2+0x310>  // b.plast
    48d8:	ldr	x0, [sp, #128]
    48dc:	cmp	x0, #0x0
    48e0:	b.eq	48ec <__letf2+0x304>  // b.none
    48e4:	mov	w0, #0x1                   	// #1
    48e8:	b	48f0 <__letf2+0x308>
    48ec:	mov	w0, #0xffffffff            	// #-1
    48f0:	str	w0, [sp, #172]
    48f4:	b	48fc <__letf2+0x314>
    48f8:	str	wzr, [sp, #172]
    48fc:	ldrsw	x0, [sp, #168]
    4900:	cmp	x0, #0x0
    4904:	b.eq	4910 <__letf2+0x328>  // b.none
    4908:	ldr	w0, [sp, #168]
    490c:	bl	6318 <__sfp_handle_exceptions>
    4910:	ldr	w0, [sp, #172]
    4914:	ldp	x29, x30, [sp], #176
    4918:	ret

000000000000491c <__multf3>:
    491c:	sub	sp, sp, #0x2a0
    4920:	stp	x29, x30, [sp]
    4924:	mov	x29, sp
    4928:	str	q0, [sp, #32]
    492c:	str	q1, [sp, #16]
    4930:	str	wzr, [sp, #596]
    4934:	str	xzr, [sp, #488]
    4938:	mrs	x0, fpcr
    493c:	str	x0, [sp, #488]
    4940:	ldr	q0, [sp, #32]
    4944:	str	q0, [sp, #112]
    4948:	ldr	x0, [sp, #112]
    494c:	str	x0, [sp, #608]
    4950:	ldr	x0, [sp, #120]
    4954:	ubfx	x0, x0, #0, #48
    4958:	str	x0, [sp, #616]
    495c:	ldrh	w0, [sp, #126]
    4960:	ubfx	x0, x0, #0, #15
    4964:	and	w0, w0, #0xffff
    4968:	and	x0, x0, #0xffff
    496c:	str	x0, [sp, #600]
    4970:	ldrb	w0, [sp, #127]
    4974:	ubfx	x0, x0, #7, #1
    4978:	and	w0, w0, #0xff
    497c:	and	x0, x0, #0xff
    4980:	str	x0, [sp, #480]
    4984:	ldr	x0, [sp, #600]
    4988:	cmp	x0, #0x0
    498c:	b.eq	49e8 <__multf3+0xcc>  // b.none
    4990:	ldr	x1, [sp, #600]
    4994:	mov	x0, #0x7fff                	// #32767
    4998:	cmp	x1, x0
    499c:	b.eq	4adc <__multf3+0x1c0>  // b.none
    49a0:	ldr	x0, [sp, #616]
    49a4:	orr	x0, x0, #0x1000000000000
    49a8:	str	x0, [sp, #616]
    49ac:	ldr	x0, [sp, #616]
    49b0:	lsl	x1, x0, #3
    49b4:	ldr	x0, [sp, #608]
    49b8:	lsr	x0, x0, #61
    49bc:	orr	x0, x1, x0
    49c0:	str	x0, [sp, #616]
    49c4:	ldr	x0, [sp, #608]
    49c8:	lsl	x0, x0, #3
    49cc:	str	x0, [sp, #608]
    49d0:	ldr	x1, [sp, #600]
    49d4:	mov	x0, #0xffffffffffffc001    	// #-16383
    49d8:	add	x0, x1, x0
    49dc:	str	x0, [sp, #600]
    49e0:	str	xzr, [sp, #584]
    49e4:	b	4b20 <__multf3+0x204>
    49e8:	ldr	x1, [sp, #616]
    49ec:	ldr	x0, [sp, #608]
    49f0:	orr	x0, x1, x0
    49f4:	cmp	x0, #0x0
    49f8:	b.ne	4a08 <__multf3+0xec>  // b.any
    49fc:	mov	x0, #0x1                   	// #1
    4a00:	str	x0, [sp, #584]
    4a04:	b	4b20 <__multf3+0x204>
    4a08:	ldr	x0, [sp, #616]
    4a0c:	cmp	x0, #0x0
    4a10:	b.eq	4a28 <__multf3+0x10c>  // b.none
    4a14:	ldr	x0, [sp, #616]
    4a18:	clz	x0, x0
    4a1c:	sxtw	x0, w0
    4a20:	str	x0, [sp, #552]
    4a24:	b	4a44 <__multf3+0x128>
    4a28:	ldr	x0, [sp, #608]
    4a2c:	clz	x0, x0
    4a30:	sxtw	x0, w0
    4a34:	str	x0, [sp, #552]
    4a38:	ldr	x0, [sp, #552]
    4a3c:	add	x0, x0, #0x40
    4a40:	str	x0, [sp, #552]
    4a44:	ldr	x0, [sp, #552]
    4a48:	sub	x0, x0, #0xf
    4a4c:	str	x0, [sp, #552]
    4a50:	ldr	x0, [sp, #552]
    4a54:	cmp	x0, #0x3c
    4a58:	b.gt	4aa4 <__multf3+0x188>
    4a5c:	ldr	x0, [sp, #552]
    4a60:	add	w0, w0, #0x3
    4a64:	ldr	x1, [sp, #616]
    4a68:	lsl	x1, x1, x0
    4a6c:	ldr	x0, [sp, #552]
    4a70:	mov	w2, w0
    4a74:	mov	w0, #0x3d                  	// #61
    4a78:	sub	w0, w0, w2
    4a7c:	ldr	x2, [sp, #608]
    4a80:	lsr	x0, x2, x0
    4a84:	orr	x0, x1, x0
    4a88:	str	x0, [sp, #616]
    4a8c:	ldr	x0, [sp, #552]
    4a90:	add	w0, w0, #0x3
    4a94:	ldr	x1, [sp, #608]
    4a98:	lsl	x0, x1, x0
    4a9c:	str	x0, [sp, #608]
    4aa0:	b	4abc <__multf3+0x1a0>
    4aa4:	ldr	x0, [sp, #552]
    4aa8:	sub	w0, w0, #0x3d
    4aac:	ldr	x1, [sp, #608]
    4ab0:	lsl	x0, x1, x0
    4ab4:	str	x0, [sp, #616]
    4ab8:	str	xzr, [sp, #608]
    4abc:	ldr	x1, [sp, #552]
    4ac0:	mov	x0, #0x3ffe                	// #16382
    4ac4:	add	x0, x1, x0
    4ac8:	ldr	x1, [sp, #600]
    4acc:	sub	x0, x1, x0
    4ad0:	str	x0, [sp, #600]
    4ad4:	str	xzr, [sp, #584]
    4ad8:	b	4b20 <__multf3+0x204>
    4adc:	ldr	x1, [sp, #616]
    4ae0:	ldr	x0, [sp, #608]
    4ae4:	orr	x0, x1, x0
    4ae8:	cmp	x0, #0x0
    4aec:	b.ne	4afc <__multf3+0x1e0>  // b.any
    4af0:	mov	x0, #0x2                   	// #2
    4af4:	str	x0, [sp, #584]
    4af8:	b	4b20 <__multf3+0x204>
    4afc:	mov	x0, #0x3                   	// #3
    4b00:	str	x0, [sp, #584]
    4b04:	ldr	x0, [sp, #616]
    4b08:	and	x0, x0, #0x800000000000
    4b0c:	cmp	x0, #0x0
    4b10:	b.ne	4b20 <__multf3+0x204>  // b.any
    4b14:	ldr	w0, [sp, #596]
    4b18:	orr	w0, w0, #0x1
    4b1c:	str	w0, [sp, #596]
    4b20:	nop
    4b24:	ldr	q0, [sp, #16]
    4b28:	str	q0, [sp, #96]
    4b2c:	ldr	x0, [sp, #96]
    4b30:	str	x0, [sp, #640]
    4b34:	ldr	x0, [sp, #104]
    4b38:	ubfx	x0, x0, #0, #48
    4b3c:	str	x0, [sp, #648]
    4b40:	ldrh	w0, [sp, #110]
    4b44:	ubfx	x0, x0, #0, #15
    4b48:	and	w0, w0, #0xffff
    4b4c:	and	x0, x0, #0xffff
    4b50:	str	x0, [sp, #624]
    4b54:	ldrb	w0, [sp, #111]
    4b58:	ubfx	x0, x0, #7, #1
    4b5c:	and	w0, w0, #0xff
    4b60:	and	x0, x0, #0xff
    4b64:	str	x0, [sp, #472]
    4b68:	ldr	x0, [sp, #624]
    4b6c:	cmp	x0, #0x0
    4b70:	b.eq	4bcc <__multf3+0x2b0>  // b.none
    4b74:	ldr	x1, [sp, #624]
    4b78:	mov	x0, #0x7fff                	// #32767
    4b7c:	cmp	x1, x0
    4b80:	b.eq	4cc0 <__multf3+0x3a4>  // b.none
    4b84:	ldr	x0, [sp, #648]
    4b88:	orr	x0, x0, #0x1000000000000
    4b8c:	str	x0, [sp, #648]
    4b90:	ldr	x0, [sp, #648]
    4b94:	lsl	x1, x0, #3
    4b98:	ldr	x0, [sp, #640]
    4b9c:	lsr	x0, x0, #61
    4ba0:	orr	x0, x1, x0
    4ba4:	str	x0, [sp, #648]
    4ba8:	ldr	x0, [sp, #640]
    4bac:	lsl	x0, x0, #3
    4bb0:	str	x0, [sp, #640]
    4bb4:	ldr	x1, [sp, #624]
    4bb8:	mov	x0, #0xffffffffffffc001    	// #-16383
    4bbc:	add	x0, x1, x0
    4bc0:	str	x0, [sp, #624]
    4bc4:	str	xzr, [sp, #632]
    4bc8:	b	4d04 <__multf3+0x3e8>
    4bcc:	ldr	x1, [sp, #648]
    4bd0:	ldr	x0, [sp, #640]
    4bd4:	orr	x0, x1, x0
    4bd8:	cmp	x0, #0x0
    4bdc:	b.ne	4bec <__multf3+0x2d0>  // b.any
    4be0:	mov	x0, #0x1                   	// #1
    4be4:	str	x0, [sp, #632]
    4be8:	b	4d04 <__multf3+0x3e8>
    4bec:	ldr	x0, [sp, #648]
    4bf0:	cmp	x0, #0x0
    4bf4:	b.eq	4c0c <__multf3+0x2f0>  // b.none
    4bf8:	ldr	x0, [sp, #648]
    4bfc:	clz	x0, x0
    4c00:	sxtw	x0, w0
    4c04:	str	x0, [sp, #544]
    4c08:	b	4c28 <__multf3+0x30c>
    4c0c:	ldr	x0, [sp, #640]
    4c10:	clz	x0, x0
    4c14:	sxtw	x0, w0
    4c18:	str	x0, [sp, #544]
    4c1c:	ldr	x0, [sp, #544]
    4c20:	add	x0, x0, #0x40
    4c24:	str	x0, [sp, #544]
    4c28:	ldr	x0, [sp, #544]
    4c2c:	sub	x0, x0, #0xf
    4c30:	str	x0, [sp, #544]
    4c34:	ldr	x0, [sp, #544]
    4c38:	cmp	x0, #0x3c
    4c3c:	b.gt	4c88 <__multf3+0x36c>
    4c40:	ldr	x0, [sp, #544]
    4c44:	add	w0, w0, #0x3
    4c48:	ldr	x1, [sp, #648]
    4c4c:	lsl	x1, x1, x0
    4c50:	ldr	x0, [sp, #544]
    4c54:	mov	w2, w0
    4c58:	mov	w0, #0x3d                  	// #61
    4c5c:	sub	w0, w0, w2
    4c60:	ldr	x2, [sp, #640]
    4c64:	lsr	x0, x2, x0
    4c68:	orr	x0, x1, x0
    4c6c:	str	x0, [sp, #648]
    4c70:	ldr	x0, [sp, #544]
    4c74:	add	w0, w0, #0x3
    4c78:	ldr	x1, [sp, #640]
    4c7c:	lsl	x0, x1, x0
    4c80:	str	x0, [sp, #640]
    4c84:	b	4ca0 <__multf3+0x384>
    4c88:	ldr	x0, [sp, #544]
    4c8c:	sub	w0, w0, #0x3d
    4c90:	ldr	x1, [sp, #640]
    4c94:	lsl	x0, x1, x0
    4c98:	str	x0, [sp, #648]
    4c9c:	str	xzr, [sp, #640]
    4ca0:	ldr	x1, [sp, #544]
    4ca4:	mov	x0, #0x3ffe                	// #16382
    4ca8:	add	x0, x1, x0
    4cac:	ldr	x1, [sp, #624]
    4cb0:	sub	x0, x1, x0
    4cb4:	str	x0, [sp, #624]
    4cb8:	str	xzr, [sp, #632]
    4cbc:	b	4d04 <__multf3+0x3e8>
    4cc0:	ldr	x1, [sp, #648]
    4cc4:	ldr	x0, [sp, #640]
    4cc8:	orr	x0, x1, x0
    4ccc:	cmp	x0, #0x0
    4cd0:	b.ne	4ce0 <__multf3+0x3c4>  // b.any
    4cd4:	mov	x0, #0x2                   	// #2
    4cd8:	str	x0, [sp, #632]
    4cdc:	b	4d04 <__multf3+0x3e8>
    4ce0:	mov	x0, #0x3                   	// #3
    4ce4:	str	x0, [sp, #632]
    4ce8:	ldr	x0, [sp, #648]
    4cec:	and	x0, x0, #0x800000000000
    4cf0:	cmp	x0, #0x0
    4cf4:	b.ne	4d04 <__multf3+0x3e8>  // b.any
    4cf8:	ldr	w0, [sp, #596]
    4cfc:	orr	w0, w0, #0x1
    4d00:	str	w0, [sp, #596]
    4d04:	nop
    4d08:	ldr	x1, [sp, #480]
    4d0c:	ldr	x0, [sp, #472]
    4d10:	eor	x0, x1, x0
    4d14:	str	x0, [sp, #656]
    4d18:	ldr	x1, [sp, #600]
    4d1c:	ldr	x0, [sp, #624]
    4d20:	add	x0, x1, x0
    4d24:	add	x0, x0, #0x1
    4d28:	str	x0, [sp, #576]
    4d2c:	ldr	x0, [sp, #584]
    4d30:	lsl	x1, x0, #2
    4d34:	ldr	x0, [sp, #632]
    4d38:	orr	x0, x1, x0
    4d3c:	cmp	x0, #0xf
    4d40:	b.eq	5550 <__multf3+0xc34>  // b.none
    4d44:	cmp	x0, #0xf
    4d48:	b.gt	5624 <__multf3+0xd08>
    4d4c:	cmp	x0, #0xe
    4d50:	b.gt	5624 <__multf3+0xd08>
    4d54:	cmp	x0, #0xc
    4d58:	b.ge	55b0 <__multf3+0xc94>  // b.tcont
    4d5c:	cmp	x0, #0xb
    4d60:	b.eq	55d4 <__multf3+0xcb8>  // b.none
    4d64:	cmp	x0, #0xb
    4d68:	b.gt	5624 <__multf3+0xd08>
    4d6c:	cmp	x0, #0xa
    4d70:	b.gt	5624 <__multf3+0xd08>
    4d74:	cmp	x0, #0x3
    4d78:	b.ge	4d9c <__multf3+0x480>  // b.tcont
    4d7c:	cmp	x0, #0x0
    4d80:	b.eq	4e00 <__multf3+0x4e4>  // b.none
    4d84:	cmp	x0, #0x0
    4d88:	b.lt	5624 <__multf3+0xd08>  // b.tstop
    4d8c:	sub	x0, x0, #0x1
    4d90:	cmp	x0, #0x1
    4d94:	b.hi	5624 <__multf3+0xd08>  // b.pmore
    4d98:	b	55dc <__multf3+0xcc0>
    4d9c:	mov	w1, w0
    4da0:	mov	x0, #0x1                   	// #1
    4da4:	lsl	x0, x0, x1
    4da8:	mov	x1, #0x530                 	// #1328
    4dac:	and	x1, x0, x1
    4db0:	cmp	x1, #0x0
    4db4:	cset	w1, ne  // ne = any
    4db8:	and	w1, w1, #0xff
    4dbc:	cmp	w1, #0x0
    4dc0:	b.ne	55b8 <__multf3+0xc9c>  // b.any
    4dc4:	mov	x1, #0x240                 	// #576
    4dc8:	and	x1, x0, x1
    4dcc:	cmp	x1, #0x0
    4dd0:	cset	w1, ne  // ne = any
    4dd4:	and	w1, w1, #0xff
    4dd8:	cmp	w1, #0x0
    4ddc:	b.ne	55f8 <__multf3+0xcdc>  // b.any
    4de0:	mov	x1, #0x88                  	// #136
    4de4:	and	x0, x0, x1
    4de8:	cmp	x0, #0x0
    4dec:	cset	w0, ne  // ne = any
    4df0:	and	w0, w0, #0xff
    4df4:	cmp	w0, #0x0
    4df8:	b.ne	55d4 <__multf3+0xcb8>  // b.any
    4dfc:	b	5624 <__multf3+0xd08>
    4e00:	str	xzr, [sp, #664]
    4e04:	ldr	x0, [sp, #608]
    4e08:	str	w0, [sp, #468]
    4e0c:	ldr	x0, [sp, #608]
    4e10:	lsr	x0, x0, #32
    4e14:	str	w0, [sp, #464]
    4e18:	ldr	x0, [sp, #640]
    4e1c:	str	w0, [sp, #460]
    4e20:	ldr	x0, [sp, #640]
    4e24:	lsr	x0, x0, #32
    4e28:	str	w0, [sp, #456]
    4e2c:	ldr	w1, [sp, #468]
    4e30:	ldr	w0, [sp, #460]
    4e34:	mul	x0, x1, x0
    4e38:	str	x0, [sp, #448]
    4e3c:	ldr	w1, [sp, #468]
    4e40:	ldr	w0, [sp, #456]
    4e44:	mul	x0, x1, x0
    4e48:	str	x0, [sp, #440]
    4e4c:	ldr	w1, [sp, #464]
    4e50:	ldr	w0, [sp, #460]
    4e54:	mul	x0, x1, x0
    4e58:	str	x0, [sp, #432]
    4e5c:	ldr	w1, [sp, #464]
    4e60:	ldr	w0, [sp, #456]
    4e64:	mul	x0, x1, x0
    4e68:	str	x0, [sp, #536]
    4e6c:	ldr	x0, [sp, #448]
    4e70:	lsr	x0, x0, #32
    4e74:	ldr	x1, [sp, #440]
    4e78:	add	x0, x1, x0
    4e7c:	str	x0, [sp, #440]
    4e80:	ldr	x1, [sp, #440]
    4e84:	ldr	x0, [sp, #432]
    4e88:	add	x0, x1, x0
    4e8c:	str	x0, [sp, #440]
    4e90:	ldr	x1, [sp, #440]
    4e94:	ldr	x0, [sp, #432]
    4e98:	cmp	x1, x0
    4e9c:	b.cs	4eb0 <__multf3+0x594>  // b.hs, b.nlast
    4ea0:	ldr	x1, [sp, #536]
    4ea4:	mov	x0, #0x100000000           	// #4294967296
    4ea8:	add	x0, x1, x0
    4eac:	str	x0, [sp, #536]
    4eb0:	ldr	x0, [sp, #440]
    4eb4:	lsr	x1, x0, #32
    4eb8:	ldr	x0, [sp, #536]
    4ebc:	add	x1, x1, x0
    4ec0:	add	x0, sp, #0x30
    4ec4:	str	x1, [x0, #8]
    4ec8:	ldr	x0, [sp, #440]
    4ecc:	and	x0, x0, #0xffffffff
    4ed0:	lsl	x1, x0, #32
    4ed4:	ldr	x0, [sp, #448]
    4ed8:	and	x0, x0, #0xffffffff
    4edc:	add	x1, x1, x0
    4ee0:	add	x0, sp, #0x30
    4ee4:	str	x1, [x0]
    4ee8:	ldr	x0, [sp, #608]
    4eec:	str	w0, [sp, #428]
    4ef0:	ldr	x0, [sp, #608]
    4ef4:	lsr	x0, x0, #32
    4ef8:	str	w0, [sp, #424]
    4efc:	ldr	x0, [sp, #648]
    4f00:	str	w0, [sp, #420]
    4f04:	ldr	x0, [sp, #648]
    4f08:	lsr	x0, x0, #32
    4f0c:	str	w0, [sp, #416]
    4f10:	ldr	w1, [sp, #428]
    4f14:	ldr	w0, [sp, #420]
    4f18:	mul	x0, x1, x0
    4f1c:	str	x0, [sp, #408]
    4f20:	ldr	w1, [sp, #428]
    4f24:	ldr	w0, [sp, #416]
    4f28:	mul	x0, x1, x0
    4f2c:	str	x0, [sp, #400]
    4f30:	ldr	w1, [sp, #424]
    4f34:	ldr	w0, [sp, #420]
    4f38:	mul	x0, x1, x0
    4f3c:	str	x0, [sp, #392]
    4f40:	ldr	w1, [sp, #424]
    4f44:	ldr	w0, [sp, #416]
    4f48:	mul	x0, x1, x0
    4f4c:	str	x0, [sp, #528]
    4f50:	ldr	x0, [sp, #408]
    4f54:	lsr	x0, x0, #32
    4f58:	ldr	x1, [sp, #400]
    4f5c:	add	x0, x1, x0
    4f60:	str	x0, [sp, #400]
    4f64:	ldr	x1, [sp, #400]
    4f68:	ldr	x0, [sp, #392]
    4f6c:	add	x0, x1, x0
    4f70:	str	x0, [sp, #400]
    4f74:	ldr	x1, [sp, #400]
    4f78:	ldr	x0, [sp, #392]
    4f7c:	cmp	x1, x0
    4f80:	b.cs	4f94 <__multf3+0x678>  // b.hs, b.nlast
    4f84:	ldr	x1, [sp, #528]
    4f88:	mov	x0, #0x100000000           	// #4294967296
    4f8c:	add	x0, x1, x0
    4f90:	str	x0, [sp, #528]
    4f94:	ldr	x0, [sp, #400]
    4f98:	lsr	x0, x0, #32
    4f9c:	ldr	x1, [sp, #528]
    4fa0:	add	x0, x1, x0
    4fa4:	str	x0, [sp, #384]
    4fa8:	ldr	x0, [sp, #400]
    4fac:	and	x0, x0, #0xffffffff
    4fb0:	lsl	x1, x0, #32
    4fb4:	ldr	x0, [sp, #408]
    4fb8:	and	x0, x0, #0xffffffff
    4fbc:	add	x0, x1, x0
    4fc0:	str	x0, [sp, #376]
    4fc4:	ldr	x0, [sp, #616]
    4fc8:	str	w0, [sp, #372]
    4fcc:	ldr	x0, [sp, #616]
    4fd0:	lsr	x0, x0, #32
    4fd4:	str	w0, [sp, #368]
    4fd8:	ldr	x0, [sp, #640]
    4fdc:	str	w0, [sp, #364]
    4fe0:	ldr	x0, [sp, #640]
    4fe4:	lsr	x0, x0, #32
    4fe8:	str	w0, [sp, #360]
    4fec:	ldr	w1, [sp, #372]
    4ff0:	ldr	w0, [sp, #364]
    4ff4:	mul	x0, x1, x0
    4ff8:	str	x0, [sp, #352]
    4ffc:	ldr	w1, [sp, #372]
    5000:	ldr	w0, [sp, #360]
    5004:	mul	x0, x1, x0
    5008:	str	x0, [sp, #344]
    500c:	ldr	w1, [sp, #368]
    5010:	ldr	w0, [sp, #364]
    5014:	mul	x0, x1, x0
    5018:	str	x0, [sp, #336]
    501c:	ldr	w1, [sp, #368]
    5020:	ldr	w0, [sp, #360]
    5024:	mul	x0, x1, x0
    5028:	str	x0, [sp, #520]
    502c:	ldr	x0, [sp, #352]
    5030:	lsr	x0, x0, #32
    5034:	ldr	x1, [sp, #344]
    5038:	add	x0, x1, x0
    503c:	str	x0, [sp, #344]
    5040:	ldr	x1, [sp, #344]
    5044:	ldr	x0, [sp, #336]
    5048:	add	x0, x1, x0
    504c:	str	x0, [sp, #344]
    5050:	ldr	x1, [sp, #344]
    5054:	ldr	x0, [sp, #336]
    5058:	cmp	x1, x0
    505c:	b.cs	5070 <__multf3+0x754>  // b.hs, b.nlast
    5060:	ldr	x1, [sp, #520]
    5064:	mov	x0, #0x100000000           	// #4294967296
    5068:	add	x0, x1, x0
    506c:	str	x0, [sp, #520]
    5070:	ldr	x0, [sp, #344]
    5074:	lsr	x0, x0, #32
    5078:	ldr	x1, [sp, #520]
    507c:	add	x0, x1, x0
    5080:	str	x0, [sp, #328]
    5084:	ldr	x0, [sp, #344]
    5088:	and	x0, x0, #0xffffffff
    508c:	lsl	x1, x0, #32
    5090:	ldr	x0, [sp, #352]
    5094:	and	x0, x0, #0xffffffff
    5098:	add	x0, x1, x0
    509c:	str	x0, [sp, #320]
    50a0:	ldr	x0, [sp, #616]
    50a4:	str	w0, [sp, #316]
    50a8:	ldr	x0, [sp, #616]
    50ac:	lsr	x0, x0, #32
    50b0:	str	w0, [sp, #312]
    50b4:	ldr	x0, [sp, #648]
    50b8:	str	w0, [sp, #308]
    50bc:	ldr	x0, [sp, #648]
    50c0:	lsr	x0, x0, #32
    50c4:	str	w0, [sp, #304]
    50c8:	ldr	w1, [sp, #316]
    50cc:	ldr	w0, [sp, #308]
    50d0:	mul	x0, x1, x0
    50d4:	str	x0, [sp, #296]
    50d8:	ldr	w1, [sp, #316]
    50dc:	ldr	w0, [sp, #304]
    50e0:	mul	x0, x1, x0
    50e4:	str	x0, [sp, #288]
    50e8:	ldr	w1, [sp, #312]
    50ec:	ldr	w0, [sp, #308]
    50f0:	mul	x0, x1, x0
    50f4:	str	x0, [sp, #280]
    50f8:	ldr	w1, [sp, #312]
    50fc:	ldr	w0, [sp, #304]
    5100:	mul	x0, x1, x0
    5104:	str	x0, [sp, #512]
    5108:	ldr	x0, [sp, #296]
    510c:	lsr	x0, x0, #32
    5110:	ldr	x1, [sp, #288]
    5114:	add	x0, x1, x0
    5118:	str	x0, [sp, #288]
    511c:	ldr	x1, [sp, #288]
    5120:	ldr	x0, [sp, #280]
    5124:	add	x0, x1, x0
    5128:	str	x0, [sp, #288]
    512c:	ldr	x1, [sp, #288]
    5130:	ldr	x0, [sp, #280]
    5134:	cmp	x1, x0
    5138:	b.cs	514c <__multf3+0x830>  // b.hs, b.nlast
    513c:	ldr	x1, [sp, #512]
    5140:	mov	x0, #0x100000000           	// #4294967296
    5144:	add	x0, x1, x0
    5148:	str	x0, [sp, #512]
    514c:	ldr	x0, [sp, #288]
    5150:	lsr	x1, x0, #32
    5154:	ldr	x0, [sp, #512]
    5158:	add	x1, x1, x0
    515c:	add	x0, sp, #0x30
    5160:	str	x1, [x0, #24]
    5164:	ldr	x0, [sp, #288]
    5168:	and	x0, x0, #0xffffffff
    516c:	lsl	x1, x0, #32
    5170:	ldr	x0, [sp, #296]
    5174:	and	x0, x0, #0xffffffff
    5178:	add	x1, x1, x0
    517c:	add	x0, sp, #0x30
    5180:	str	x1, [x0, #16]
    5184:	add	x0, sp, #0x30
    5188:	ldr	x1, [x0, #8]
    518c:	ldr	x0, [sp, #376]
    5190:	add	x1, x1, x0
    5194:	add	x0, sp, #0x30
    5198:	str	x1, [x0, #8]
    519c:	add	x0, sp, #0x30
    51a0:	ldr	x0, [x0, #8]
    51a4:	ldr	x1, [sp, #376]
    51a8:	cmp	x1, x0
    51ac:	cset	w0, hi  // hi = pmore
    51b0:	and	w0, w0, #0xff
    51b4:	and	x0, x0, #0xff
    51b8:	str	x0, [sp, #272]
    51bc:	add	x0, sp, #0x30
    51c0:	ldr	x1, [x0, #16]
    51c4:	ldr	x0, [sp, #384]
    51c8:	add	x1, x1, x0
    51cc:	add	x0, sp, #0x30
    51d0:	str	x1, [x0, #16]
    51d4:	add	x0, sp, #0x30
    51d8:	ldr	x0, [x0, #16]
    51dc:	ldr	x1, [sp, #384]
    51e0:	cmp	x1, x0
    51e4:	cset	w0, hi  // hi = pmore
    51e8:	and	w0, w0, #0xff
    51ec:	and	x0, x0, #0xff
    51f0:	str	x0, [sp, #264]
    51f4:	add	x0, sp, #0x30
    51f8:	ldr	x1, [x0, #16]
    51fc:	ldr	x0, [sp, #272]
    5200:	add	x1, x1, x0
    5204:	add	x0, sp, #0x30
    5208:	str	x1, [x0, #16]
    520c:	add	x0, sp, #0x30
    5210:	ldr	x0, [x0, #16]
    5214:	ldr	x1, [sp, #272]
    5218:	cmp	x1, x0
    521c:	cset	w0, hi  // hi = pmore
    5220:	and	w0, w0, #0xff
    5224:	and	x0, x0, #0xff
    5228:	ldr	x1, [sp, #264]
    522c:	orr	x0, x1, x0
    5230:	str	x0, [sp, #264]
    5234:	add	x0, sp, #0x30
    5238:	ldr	x1, [x0, #24]
    523c:	ldr	x0, [sp, #264]
    5240:	add	x1, x1, x0
    5244:	add	x0, sp, #0x30
    5248:	str	x1, [x0, #24]
    524c:	add	x0, sp, #0x30
    5250:	ldr	x1, [x0, #8]
    5254:	ldr	x0, [sp, #320]
    5258:	add	x1, x1, x0
    525c:	add	x0, sp, #0x30
    5260:	str	x1, [x0, #8]
    5264:	add	x0, sp, #0x30
    5268:	ldr	x0, [x0, #8]
    526c:	ldr	x1, [sp, #320]
    5270:	cmp	x1, x0
    5274:	cset	w0, hi  // hi = pmore
    5278:	and	w0, w0, #0xff
    527c:	and	x0, x0, #0xff
    5280:	str	x0, [sp, #256]
    5284:	add	x0, sp, #0x30
    5288:	ldr	x1, [x0, #16]
    528c:	ldr	x0, [sp, #328]
    5290:	add	x1, x1, x0
    5294:	add	x0, sp, #0x30
    5298:	str	x1, [x0, #16]
    529c:	add	x0, sp, #0x30
    52a0:	ldr	x0, [x0, #16]
    52a4:	ldr	x1, [sp, #328]
    52a8:	cmp	x1, x0
    52ac:	cset	w0, hi  // hi = pmore
    52b0:	and	w0, w0, #0xff
    52b4:	and	x0, x0, #0xff
    52b8:	str	x0, [sp, #248]
    52bc:	add	x0, sp, #0x30
    52c0:	ldr	x1, [x0, #16]
    52c4:	ldr	x0, [sp, #256]
    52c8:	add	x1, x1, x0
    52cc:	add	x0, sp, #0x30
    52d0:	str	x1, [x0, #16]
    52d4:	add	x0, sp, #0x30
    52d8:	ldr	x0, [x0, #16]
    52dc:	ldr	x1, [sp, #256]
    52e0:	cmp	x1, x0
    52e4:	cset	w0, hi  // hi = pmore
    52e8:	and	w0, w0, #0xff
    52ec:	and	x0, x0, #0xff
    52f0:	ldr	x1, [sp, #248]
    52f4:	orr	x0, x1, x0
    52f8:	str	x0, [sp, #248]
    52fc:	add	x0, sp, #0x30
    5300:	ldr	x1, [x0, #24]
    5304:	ldr	x0, [sp, #248]
    5308:	add	x1, x1, x0
    530c:	add	x0, sp, #0x30
    5310:	str	x1, [x0, #24]
    5314:	mov	x0, #0x1                   	// #1
    5318:	str	x0, [sp, #240]
    531c:	mov	x0, #0x33                  	// #51
    5320:	str	x0, [sp, #232]
    5324:	mov	x1, #0x40                  	// #64
    5328:	ldr	x0, [sp, #232]
    532c:	sub	x0, x1, x0
    5330:	str	x0, [sp, #224]
    5334:	str	xzr, [sp, #504]
    5338:	str	xzr, [sp, #496]
    533c:	b	5364 <__multf3+0xa48>
    5340:	add	x0, sp, #0x30
    5344:	ldr	x1, [sp, #504]
    5348:	ldr	x0, [x0, x1, lsl #3]
    534c:	ldr	x1, [sp, #496]
    5350:	orr	x0, x1, x0
    5354:	str	x0, [sp, #496]
    5358:	ldr	x0, [sp, #504]
    535c:	add	x0, x0, #0x1
    5360:	str	x0, [sp, #504]
    5364:	ldr	x1, [sp, #504]
    5368:	ldr	x0, [sp, #240]
    536c:	cmp	x1, x0
    5370:	b.lt	5340 <__multf3+0xa24>  // b.tstop
    5374:	ldr	x0, [sp, #232]
    5378:	cmp	x0, #0x0
    537c:	b.ne	53d0 <__multf3+0xab4>  // b.any
    5380:	str	xzr, [sp, #504]
    5384:	b	53b4 <__multf3+0xa98>
    5388:	ldr	x1, [sp, #504]
    538c:	ldr	x0, [sp, #240]
    5390:	add	x1, x1, x0
    5394:	add	x0, sp, #0x30
    5398:	ldr	x2, [x0, x1, lsl #3]
    539c:	add	x0, sp, #0x30
    53a0:	ldr	x1, [sp, #504]
    53a4:	str	x2, [x0, x1, lsl #3]
    53a8:	ldr	x0, [sp, #504]
    53ac:	add	x0, x0, #0x1
    53b0:	str	x0, [sp, #504]
    53b4:	mov	x1, #0x3                   	// #3
    53b8:	ldr	x0, [sp, #240]
    53bc:	sub	x0, x1, x0
    53c0:	ldr	x1, [sp, #504]
    53c4:	cmp	x1, x0
    53c8:	b.le	5388 <__multf3+0xa6c>
    53cc:	b	54ac <__multf3+0xb90>
    53d0:	add	x0, sp, #0x30
    53d4:	ldr	x1, [sp, #504]
    53d8:	ldr	x0, [x0, x1, lsl #3]
    53dc:	ldr	x1, [sp, #224]
    53e0:	lsl	x0, x0, x1
    53e4:	ldr	x1, [sp, #496]
    53e8:	orr	x0, x1, x0
    53ec:	str	x0, [sp, #496]
    53f0:	str	xzr, [sp, #504]
    53f4:	b	5450 <__multf3+0xb34>
    53f8:	ldr	x1, [sp, #504]
    53fc:	ldr	x0, [sp, #240]
    5400:	add	x1, x1, x0
    5404:	add	x0, sp, #0x30
    5408:	ldr	x0, [x0, x1, lsl #3]
    540c:	ldr	x1, [sp, #232]
    5410:	lsr	x1, x0, x1
    5414:	ldr	x2, [sp, #504]
    5418:	ldr	x0, [sp, #240]
    541c:	add	x0, x2, x0
    5420:	add	x2, x0, #0x1
    5424:	add	x0, sp, #0x30
    5428:	ldr	x0, [x0, x2, lsl #3]
    542c:	ldr	x2, [sp, #224]
    5430:	lsl	x0, x0, x2
    5434:	orr	x2, x1, x0
    5438:	add	x0, sp, #0x30
    543c:	ldr	x1, [sp, #504]
    5440:	str	x2, [x0, x1, lsl #3]
    5444:	ldr	x0, [sp, #504]
    5448:	add	x0, x0, #0x1
    544c:	str	x0, [sp, #504]
    5450:	mov	x1, #0x3                   	// #3
    5454:	ldr	x0, [sp, #240]
    5458:	sub	x0, x1, x0
    545c:	ldr	x1, [sp, #504]
    5460:	cmp	x1, x0
    5464:	b.lt	53f8 <__multf3+0xadc>  // b.tstop
    5468:	add	x0, sp, #0x30
    546c:	ldr	x1, [x0, #24]
    5470:	ldr	x0, [sp, #232]
    5474:	mov	w3, w0
    5478:	ldr	x0, [sp, #504]
    547c:	add	x2, x0, #0x1
    5480:	str	x2, [sp, #504]
    5484:	lsr	x2, x1, x3
    5488:	add	x1, sp, #0x30
    548c:	str	x2, [x1, x0, lsl #3]
    5490:	b	54ac <__multf3+0xb90>
    5494:	add	x0, sp, #0x30
    5498:	ldr	x1, [sp, #504]
    549c:	str	xzr, [x0, x1, lsl #3]
    54a0:	ldr	x0, [sp, #504]
    54a4:	add	x0, x0, #0x1
    54a8:	str	x0, [sp, #504]
    54ac:	ldr	x0, [sp, #504]
    54b0:	cmp	x0, #0x3
    54b4:	b.le	5494 <__multf3+0xb78>
    54b8:	ldr	x0, [sp, #496]
    54bc:	cmp	x0, #0x0
    54c0:	cset	w0, ne  // ne = any
    54c4:	and	w0, w0, #0xff
    54c8:	str	w0, [sp, #220]
    54cc:	add	x0, sp, #0x30
    54d0:	ldr	x1, [x0]
    54d4:	ldrsw	x0, [sp, #220]
    54d8:	orr	x1, x1, x0
    54dc:	add	x0, sp, #0x30
    54e0:	str	x1, [x0]
    54e4:	add	x0, sp, #0x30
    54e8:	ldr	x0, [x0]
    54ec:	str	x0, [sp, #568]
    54f0:	add	x0, sp, #0x30
    54f4:	ldr	x0, [x0, #8]
    54f8:	str	x0, [sp, #560]
    54fc:	ldr	x0, [sp, #560]
    5500:	and	x0, x0, #0x10000000000000
    5504:	cmp	x0, #0x0
    5508:	b.eq	5540 <__multf3+0xc24>  // b.none
    550c:	ldr	x0, [sp, #560]
    5510:	lsl	x1, x0, #63
    5514:	ldr	x0, [sp, #568]
    5518:	lsr	x0, x0, #1
    551c:	orr	x1, x1, x0
    5520:	ldr	x0, [sp, #568]
    5524:	and	x0, x0, #0x1
    5528:	orr	x0, x1, x0
    552c:	str	x0, [sp, #568]
    5530:	ldr	x0, [sp, #560]
    5534:	lsr	x0, x0, #1
    5538:	str	x0, [sp, #560]
    553c:	b	5624 <__multf3+0xd08>
    5540:	ldr	x0, [sp, #576]
    5544:	sub	x0, x0, #0x1
    5548:	str	x0, [sp, #576]
    554c:	b	5624 <__multf3+0xd08>
    5550:	ldr	x0, [sp, #616]
    5554:	and	x0, x0, #0x800000000000
    5558:	cmp	x0, #0x0
    555c:	b.eq	558c <__multf3+0xc70>  // b.none
    5560:	ldr	x0, [sp, #648]
    5564:	and	x0, x0, #0x800000000000
    5568:	cmp	x0, #0x0
    556c:	b.ne	558c <__multf3+0xc70>  // b.any
    5570:	ldr	x0, [sp, #472]
    5574:	str	x0, [sp, #656]
    5578:	ldr	x0, [sp, #640]
    557c:	str	x0, [sp, #568]
    5580:	ldr	x0, [sp, #648]
    5584:	str	x0, [sp, #560]
    5588:	b	55a4 <__multf3+0xc88>
    558c:	ldr	x0, [sp, #480]
    5590:	str	x0, [sp, #656]
    5594:	ldr	x0, [sp, #608]
    5598:	str	x0, [sp, #568]
    559c:	ldr	x0, [sp, #616]
    55a0:	str	x0, [sp, #560]
    55a4:	mov	x0, #0x3                   	// #3
    55a8:	str	x0, [sp, #664]
    55ac:	b	5624 <__multf3+0xd08>
    55b0:	ldr	x0, [sp, #480]
    55b4:	str	x0, [sp, #656]
    55b8:	ldr	x0, [sp, #608]
    55bc:	str	x0, [sp, #568]
    55c0:	ldr	x0, [sp, #616]
    55c4:	str	x0, [sp, #560]
    55c8:	ldr	x0, [sp, #584]
    55cc:	str	x0, [sp, #664]
    55d0:	b	5624 <__multf3+0xd08>
    55d4:	ldr	x0, [sp, #472]
    55d8:	str	x0, [sp, #656]
    55dc:	ldr	x0, [sp, #640]
    55e0:	str	x0, [sp, #568]
    55e4:	ldr	x0, [sp, #648]
    55e8:	str	x0, [sp, #560]
    55ec:	ldr	x0, [sp, #632]
    55f0:	str	x0, [sp, #664]
    55f4:	b	5624 <__multf3+0xd08>
    55f8:	str	xzr, [sp, #656]
    55fc:	mov	x0, #0x3                   	// #3
    5600:	str	x0, [sp, #664]
    5604:	mov	x0, #0xffffffffffffffff    	// #-1
    5608:	str	x0, [sp, #568]
    560c:	mov	x0, #0xffffffffffff        	// #281474976710655
    5610:	str	x0, [sp, #560]
    5614:	ldr	w0, [sp, #596]
    5618:	orr	w0, w0, #0x1
    561c:	str	w0, [sp, #596]
    5620:	b	5624 <__multf3+0xd08>
    5624:	ldr	x0, [sp, #664]
    5628:	cmp	x0, #0x3
    562c:	b.eq	5dc0 <__multf3+0x14a4>  // b.none
    5630:	ldr	x0, [sp, #664]
    5634:	cmp	x0, #0x3
    5638:	b.gt	5dd8 <__multf3+0x14bc>
    563c:	ldr	x0, [sp, #664]
    5640:	cmp	x0, #0x2
    5644:	b.eq	5dac <__multf3+0x1490>  // b.none
    5648:	ldr	x0, [sp, #664]
    564c:	cmp	x0, #0x2
    5650:	b.gt	5dd8 <__multf3+0x14bc>
    5654:	ldr	x0, [sp, #664]
    5658:	cmp	x0, #0x0
    565c:	b.eq	5670 <__multf3+0xd54>  // b.none
    5660:	ldr	x0, [sp, #664]
    5664:	cmp	x0, #0x1
    5668:	b.eq	5d9c <__multf3+0x1480>  // b.none
    566c:	b	5dd8 <__multf3+0x14bc>
    5670:	ldr	x1, [sp, #576]
    5674:	mov	x0, #0x3fff                	// #16383
    5678:	add	x0, x1, x0
    567c:	str	x0, [sp, #576]
    5680:	ldr	x0, [sp, #576]
    5684:	cmp	x0, #0x0
    5688:	b.le	5904 <__multf3+0xfe8>
    568c:	ldr	x0, [sp, #568]
    5690:	and	x0, x0, #0x7
    5694:	cmp	x0, #0x0
    5698:	b.eq	57e0 <__multf3+0xec4>  // b.none
    569c:	ldr	w0, [sp, #596]
    56a0:	orr	w0, w0, #0x10
    56a4:	str	w0, [sp, #596]
    56a8:	ldr	x0, [sp, #488]
    56ac:	and	x0, x0, #0xc00000
    56b0:	cmp	x0, #0xc00, lsl #12
    56b4:	b.eq	57e8 <__multf3+0xecc>  // b.none
    56b8:	cmp	x0, #0xc00, lsl #12
    56bc:	b.hi	57ec <__multf3+0xed0>  // b.pmore
    56c0:	cmp	x0, #0x800, lsl #12
    56c4:	b.eq	5788 <__multf3+0xe6c>  // b.none
    56c8:	cmp	x0, #0x800, lsl #12
    56cc:	b.hi	57ec <__multf3+0xed0>  // b.pmore
    56d0:	cmp	x0, #0x0
    56d4:	b.eq	56e4 <__multf3+0xdc8>  // b.none
    56d8:	cmp	x0, #0x400, lsl #12
    56dc:	b.eq	5730 <__multf3+0xe14>  // b.none
    56e0:	b	57ec <__multf3+0xed0>
    56e4:	ldr	x0, [sp, #568]
    56e8:	and	x0, x0, #0xf
    56ec:	cmp	x0, #0x4
    56f0:	b.eq	57e8 <__multf3+0xecc>  // b.none
    56f4:	ldr	x0, [sp, #568]
    56f8:	add	x0, x0, #0x4
    56fc:	str	x0, [sp, #144]
    5700:	ldr	x1, [sp, #144]
    5704:	ldr	x0, [sp, #568]
    5708:	cmp	x1, x0
    570c:	cset	w0, cc  // cc = lo, ul, last
    5710:	and	w0, w0, #0xff
    5714:	and	x0, x0, #0xff
    5718:	ldr	x1, [sp, #560]
    571c:	add	x0, x1, x0
    5720:	str	x0, [sp, #560]
    5724:	ldr	x0, [sp, #144]
    5728:	str	x0, [sp, #568]
    572c:	b	57e8 <__multf3+0xecc>
    5730:	ldr	x0, [sp, #656]
    5734:	cmp	x0, #0x0
    5738:	b.ne	57e8 <__multf3+0xecc>  // b.any
    573c:	ldr	x0, [sp, #568]
    5740:	and	x0, x0, #0x7
    5744:	cmp	x0, #0x0
    5748:	b.eq	57e8 <__multf3+0xecc>  // b.none
    574c:	ldr	x0, [sp, #568]
    5750:	add	x0, x0, #0x8
    5754:	str	x0, [sp, #152]
    5758:	ldr	x1, [sp, #152]
    575c:	ldr	x0, [sp, #568]
    5760:	cmp	x1, x0
    5764:	cset	w0, cc  // cc = lo, ul, last
    5768:	and	w0, w0, #0xff
    576c:	and	x0, x0, #0xff
    5770:	ldr	x1, [sp, #560]
    5774:	add	x0, x1, x0
    5778:	str	x0, [sp, #560]
    577c:	ldr	x0, [sp, #152]
    5780:	str	x0, [sp, #568]
    5784:	b	57e8 <__multf3+0xecc>
    5788:	ldr	x0, [sp, #656]
    578c:	cmp	x0, #0x0
    5790:	b.eq	57e8 <__multf3+0xecc>  // b.none
    5794:	ldr	x0, [sp, #568]
    5798:	and	x0, x0, #0x7
    579c:	cmp	x0, #0x0
    57a0:	b.eq	57e8 <__multf3+0xecc>  // b.none
    57a4:	ldr	x0, [sp, #568]
    57a8:	add	x0, x0, #0x8
    57ac:	str	x0, [sp, #160]
    57b0:	ldr	x1, [sp, #160]
    57b4:	ldr	x0, [sp, #568]
    57b8:	cmp	x1, x0
    57bc:	cset	w0, cc  // cc = lo, ul, last
    57c0:	and	w0, w0, #0xff
    57c4:	and	x0, x0, #0xff
    57c8:	ldr	x1, [sp, #560]
    57cc:	add	x0, x1, x0
    57d0:	str	x0, [sp, #560]
    57d4:	ldr	x0, [sp, #160]
    57d8:	str	x0, [sp, #568]
    57dc:	b	57e8 <__multf3+0xecc>
    57e0:	nop
    57e4:	b	57ec <__multf3+0xed0>
    57e8:	nop
    57ec:	ldr	x0, [sp, #560]
    57f0:	and	x0, x0, #0x10000000000000
    57f4:	cmp	x0, #0x0
    57f8:	b.eq	5814 <__multf3+0xef8>  // b.none
    57fc:	ldr	x0, [sp, #560]
    5800:	and	x0, x0, #0xffefffffffffffff
    5804:	str	x0, [sp, #560]
    5808:	ldr	x0, [sp, #576]
    580c:	add	x0, x0, #0x1
    5810:	str	x0, [sp, #576]
    5814:	ldr	x0, [sp, #568]
    5818:	lsr	x1, x0, #3
    581c:	ldr	x0, [sp, #560]
    5820:	lsl	x0, x0, #61
    5824:	orr	x0, x1, x0
    5828:	str	x0, [sp, #568]
    582c:	ldr	x0, [sp, #560]
    5830:	lsr	x0, x0, #3
    5834:	str	x0, [sp, #560]
    5838:	ldr	x1, [sp, #576]
    583c:	mov	x0, #0x7ffe                	// #32766
    5840:	cmp	x1, x0
    5844:	b.le	5dd4 <__multf3+0x14b8>
    5848:	ldr	x0, [sp, #488]
    584c:	and	x0, x0, #0xc00000
    5850:	cmp	x0, #0x800, lsl #12
    5854:	b.eq	5898 <__multf3+0xf7c>  // b.none
    5858:	cmp	x0, #0x800, lsl #12
    585c:	b.hi	58b0 <__multf3+0xf94>  // b.pmore
    5860:	cmp	x0, #0x0
    5864:	b.eq	5874 <__multf3+0xf58>  // b.none
    5868:	cmp	x0, #0x400, lsl #12
    586c:	b.eq	5880 <__multf3+0xf64>  // b.none
    5870:	b	58b0 <__multf3+0xf94>
    5874:	mov	x0, #0x2                   	// #2
    5878:	str	x0, [sp, #664]
    587c:	b	58ac <__multf3+0xf90>
    5880:	ldr	x0, [sp, #656]
    5884:	cmp	x0, #0x0
    5888:	b.ne	58ac <__multf3+0xf90>  // b.any
    588c:	mov	x0, #0x2                   	// #2
    5890:	str	x0, [sp, #664]
    5894:	b	58ac <__multf3+0xf90>
    5898:	ldr	x0, [sp, #656]
    589c:	cmp	x0, #0x0
    58a0:	b.eq	58ac <__multf3+0xf90>  // b.none
    58a4:	mov	x0, #0x2                   	// #2
    58a8:	str	x0, [sp, #664]
    58ac:	nop
    58b0:	ldr	x0, [sp, #664]
    58b4:	cmp	x0, #0x2
    58b8:	b.ne	58d0 <__multf3+0xfb4>  // b.any
    58bc:	mov	x0, #0x7fff                	// #32767
    58c0:	str	x0, [sp, #576]
    58c4:	str	xzr, [sp, #568]
    58c8:	str	xzr, [sp, #560]
    58cc:	b	58e8 <__multf3+0xfcc>
    58d0:	mov	x0, #0x7ffe                	// #32766
    58d4:	str	x0, [sp, #576]
    58d8:	mov	x0, #0xffffffffffffffff    	// #-1
    58dc:	str	x0, [sp, #568]
    58e0:	mov	x0, #0xffffffffffffffff    	// #-1
    58e4:	str	x0, [sp, #560]
    58e8:	ldr	w0, [sp, #596]
    58ec:	orr	w0, w0, #0x4
    58f0:	str	w0, [sp, #596]
    58f4:	ldr	w0, [sp, #596]
    58f8:	orr	w0, w0, #0x10
    58fc:	str	w0, [sp, #596]
    5900:	b	5dd4 <__multf3+0x14b8>
    5904:	mov	w0, #0x1                   	// #1
    5908:	str	w0, [sp, #216]
    590c:	mov	x1, #0x1                   	// #1
    5910:	ldr	x0, [sp, #576]
    5914:	sub	x0, x1, x0
    5918:	str	x0, [sp, #576]
    591c:	ldr	x0, [sp, #576]
    5920:	cmp	x0, #0x74
    5924:	b.gt	5bfc <__multf3+0x12e0>
    5928:	ldr	x0, [sp, #576]
    592c:	cmp	x0, #0x3f
    5930:	b.gt	59a8 <__multf3+0x108c>
    5934:	ldr	x0, [sp, #576]
    5938:	mov	w1, w0
    593c:	mov	w0, #0x40                  	// #64
    5940:	sub	w0, w0, w1
    5944:	ldr	x1, [sp, #560]
    5948:	lsl	x1, x1, x0
    594c:	ldr	x0, [sp, #576]
    5950:	mov	w2, w0
    5954:	ldr	x0, [sp, #568]
    5958:	lsr	x0, x0, x2
    595c:	orr	x1, x1, x0
    5960:	ldr	x0, [sp, #576]
    5964:	mov	w2, w0
    5968:	mov	w0, #0x40                  	// #64
    596c:	sub	w0, w0, w2
    5970:	ldr	x2, [sp, #568]
    5974:	lsl	x0, x2, x0
    5978:	cmp	x0, #0x0
    597c:	cset	w0, ne  // ne = any
    5980:	and	w0, w0, #0xff
    5984:	sxtw	x0, w0
    5988:	orr	x0, x1, x0
    598c:	str	x0, [sp, #568]
    5990:	ldr	x0, [sp, #576]
    5994:	mov	w1, w0
    5998:	ldr	x0, [sp, #560]
    599c:	lsr	x0, x0, x1
    59a0:	str	x0, [sp, #560]
    59a4:	b	5a08 <__multf3+0x10ec>
    59a8:	ldr	x0, [sp, #576]
    59ac:	sub	w0, w0, #0x40
    59b0:	ldr	x1, [sp, #560]
    59b4:	lsr	x1, x1, x0
    59b8:	ldr	x0, [sp, #576]
    59bc:	cmp	x0, #0x40
    59c0:	b.eq	59e0 <__multf3+0x10c4>  // b.none
    59c4:	ldr	x0, [sp, #576]
    59c8:	mov	w2, w0
    59cc:	mov	w0, #0x80                  	// #128
    59d0:	sub	w0, w0, w2
    59d4:	ldr	x2, [sp, #560]
    59d8:	lsl	x0, x2, x0
    59dc:	b	59e4 <__multf3+0x10c8>
    59e0:	mov	x0, #0x0                   	// #0
    59e4:	ldr	x2, [sp, #568]
    59e8:	orr	x0, x0, x2
    59ec:	cmp	x0, #0x0
    59f0:	cset	w0, ne  // ne = any
    59f4:	and	w0, w0, #0xff
    59f8:	and	x0, x0, #0xff
    59fc:	orr	x0, x1, x0
    5a00:	str	x0, [sp, #568]
    5a04:	str	xzr, [sp, #560]
    5a08:	ldr	x0, [sp, #568]
    5a0c:	and	x0, x0, #0x7
    5a10:	cmp	x0, #0x0
    5a14:	b.eq	5b5c <__multf3+0x1240>  // b.none
    5a18:	ldr	w0, [sp, #596]
    5a1c:	orr	w0, w0, #0x10
    5a20:	str	w0, [sp, #596]
    5a24:	ldr	x0, [sp, #488]
    5a28:	and	x0, x0, #0xc00000
    5a2c:	cmp	x0, #0xc00, lsl #12
    5a30:	b.eq	5b64 <__multf3+0x1248>  // b.none
    5a34:	cmp	x0, #0xc00, lsl #12
    5a38:	b.hi	5b68 <__multf3+0x124c>  // b.pmore
    5a3c:	cmp	x0, #0x800, lsl #12
    5a40:	b.eq	5b04 <__multf3+0x11e8>  // b.none
    5a44:	cmp	x0, #0x800, lsl #12
    5a48:	b.hi	5b68 <__multf3+0x124c>  // b.pmore
    5a4c:	cmp	x0, #0x0
    5a50:	b.eq	5a60 <__multf3+0x1144>  // b.none
    5a54:	cmp	x0, #0x400, lsl #12
    5a58:	b.eq	5aac <__multf3+0x1190>  // b.none
    5a5c:	b	5b68 <__multf3+0x124c>
    5a60:	ldr	x0, [sp, #568]
    5a64:	and	x0, x0, #0xf
    5a68:	cmp	x0, #0x4
    5a6c:	b.eq	5b64 <__multf3+0x1248>  // b.none
    5a70:	ldr	x0, [sp, #568]
    5a74:	add	x0, x0, #0x4
    5a78:	str	x0, [sp, #168]
    5a7c:	ldr	x1, [sp, #168]
    5a80:	ldr	x0, [sp, #568]
    5a84:	cmp	x1, x0
    5a88:	cset	w0, cc  // cc = lo, ul, last
    5a8c:	and	w0, w0, #0xff
    5a90:	and	x0, x0, #0xff
    5a94:	ldr	x1, [sp, #560]
    5a98:	add	x0, x1, x0
    5a9c:	str	x0, [sp, #560]
    5aa0:	ldr	x0, [sp, #168]
    5aa4:	str	x0, [sp, #568]
    5aa8:	b	5b64 <__multf3+0x1248>
    5aac:	ldr	x0, [sp, #656]
    5ab0:	cmp	x0, #0x0
    5ab4:	b.ne	5b64 <__multf3+0x1248>  // b.any
    5ab8:	ldr	x0, [sp, #568]
    5abc:	and	x0, x0, #0x7
    5ac0:	cmp	x0, #0x0
    5ac4:	b.eq	5b64 <__multf3+0x1248>  // b.none
    5ac8:	ldr	x0, [sp, #568]
    5acc:	add	x0, x0, #0x8
    5ad0:	str	x0, [sp, #176]
    5ad4:	ldr	x1, [sp, #176]
    5ad8:	ldr	x0, [sp, #568]
    5adc:	cmp	x1, x0
    5ae0:	cset	w0, cc  // cc = lo, ul, last
    5ae4:	and	w0, w0, #0xff
    5ae8:	and	x0, x0, #0xff
    5aec:	ldr	x1, [sp, #560]
    5af0:	add	x0, x1, x0
    5af4:	str	x0, [sp, #560]
    5af8:	ldr	x0, [sp, #176]
    5afc:	str	x0, [sp, #568]
    5b00:	b	5b64 <__multf3+0x1248>
    5b04:	ldr	x0, [sp, #656]
    5b08:	cmp	x0, #0x0
    5b0c:	b.eq	5b64 <__multf3+0x1248>  // b.none
    5b10:	ldr	x0, [sp, #568]
    5b14:	and	x0, x0, #0x7
    5b18:	cmp	x0, #0x0
    5b1c:	b.eq	5b64 <__multf3+0x1248>  // b.none
    5b20:	ldr	x0, [sp, #568]
    5b24:	add	x0, x0, #0x8
    5b28:	str	x0, [sp, #184]
    5b2c:	ldr	x1, [sp, #184]
    5b30:	ldr	x0, [sp, #568]
    5b34:	cmp	x1, x0
    5b38:	cset	w0, cc  // cc = lo, ul, last
    5b3c:	and	w0, w0, #0xff
    5b40:	and	x0, x0, #0xff
    5b44:	ldr	x1, [sp, #560]
    5b48:	add	x0, x1, x0
    5b4c:	str	x0, [sp, #560]
    5b50:	ldr	x0, [sp, #184]
    5b54:	str	x0, [sp, #568]
    5b58:	b	5b64 <__multf3+0x1248>
    5b5c:	nop
    5b60:	b	5b68 <__multf3+0x124c>
    5b64:	nop
    5b68:	ldr	x0, [sp, #560]
    5b6c:	and	x0, x0, #0x8000000000000
    5b70:	cmp	x0, #0x0
    5b74:	b.eq	5b98 <__multf3+0x127c>  // b.none
    5b78:	mov	x0, #0x1                   	// #1
    5b7c:	str	x0, [sp, #576]
    5b80:	str	xzr, [sp, #568]
    5b84:	str	xzr, [sp, #560]
    5b88:	ldr	w0, [sp, #596]
    5b8c:	orr	w0, w0, #0x10
    5b90:	str	w0, [sp, #596]
    5b94:	b	5bc0 <__multf3+0x12a4>
    5b98:	str	xzr, [sp, #576]
    5b9c:	ldr	x0, [sp, #568]
    5ba0:	lsr	x1, x0, #3
    5ba4:	ldr	x0, [sp, #560]
    5ba8:	lsl	x0, x0, #61
    5bac:	orr	x0, x1, x0
    5bb0:	str	x0, [sp, #568]
    5bb4:	ldr	x0, [sp, #560]
    5bb8:	lsr	x0, x0, #3
    5bbc:	str	x0, [sp, #560]
    5bc0:	ldr	w0, [sp, #216]
    5bc4:	cmp	w0, #0x0
    5bc8:	b.eq	5dd4 <__multf3+0x14b8>  // b.none
    5bcc:	ldr	w0, [sp, #596]
    5bd0:	and	w0, w0, #0x10
    5bd4:	cmp	w0, #0x0
    5bd8:	b.ne	5bec <__multf3+0x12d0>  // b.any
    5bdc:	ldr	x0, [sp, #488]
    5be0:	and	x0, x0, #0x800
    5be4:	cmp	x0, #0x0
    5be8:	b.eq	5dd4 <__multf3+0x14b8>  // b.none
    5bec:	ldr	w0, [sp, #596]
    5bf0:	orr	w0, w0, #0x8
    5bf4:	str	w0, [sp, #596]
    5bf8:	b	5dd4 <__multf3+0x14b8>
    5bfc:	str	xzr, [sp, #576]
    5c00:	ldr	x1, [sp, #560]
    5c04:	ldr	x0, [sp, #568]
    5c08:	orr	x0, x1, x0
    5c0c:	cmp	x0, #0x0
    5c10:	b.eq	5d8c <__multf3+0x1470>  // b.none
    5c14:	mov	x0, #0x1                   	// #1
    5c18:	str	x0, [sp, #568]
    5c1c:	str	xzr, [sp, #560]
    5c20:	ldr	x0, [sp, #568]
    5c24:	and	x0, x0, #0x7
    5c28:	cmp	x0, #0x0
    5c2c:	b.eq	5d74 <__multf3+0x1458>  // b.none
    5c30:	ldr	w0, [sp, #596]
    5c34:	orr	w0, w0, #0x10
    5c38:	str	w0, [sp, #596]
    5c3c:	ldr	x0, [sp, #488]
    5c40:	and	x0, x0, #0xc00000
    5c44:	cmp	x0, #0xc00, lsl #12
    5c48:	b.eq	5d7c <__multf3+0x1460>  // b.none
    5c4c:	cmp	x0, #0xc00, lsl #12
    5c50:	b.hi	5d80 <__multf3+0x1464>  // b.pmore
    5c54:	cmp	x0, #0x800, lsl #12
    5c58:	b.eq	5d1c <__multf3+0x1400>  // b.none
    5c5c:	cmp	x0, #0x800, lsl #12
    5c60:	b.hi	5d80 <__multf3+0x1464>  // b.pmore
    5c64:	cmp	x0, #0x0
    5c68:	b.eq	5c78 <__multf3+0x135c>  // b.none
    5c6c:	cmp	x0, #0x400, lsl #12
    5c70:	b.eq	5cc4 <__multf3+0x13a8>  // b.none
    5c74:	b	5d80 <__multf3+0x1464>
    5c78:	ldr	x0, [sp, #568]
    5c7c:	and	x0, x0, #0xf
    5c80:	cmp	x0, #0x4
    5c84:	b.eq	5d7c <__multf3+0x1460>  // b.none
    5c88:	ldr	x0, [sp, #568]
    5c8c:	add	x0, x0, #0x4
    5c90:	str	x0, [sp, #192]
    5c94:	ldr	x1, [sp, #192]
    5c98:	ldr	x0, [sp, #568]
    5c9c:	cmp	x1, x0
    5ca0:	cset	w0, cc  // cc = lo, ul, last
    5ca4:	and	w0, w0, #0xff
    5ca8:	and	x0, x0, #0xff
    5cac:	ldr	x1, [sp, #560]
    5cb0:	add	x0, x1, x0
    5cb4:	str	x0, [sp, #560]
    5cb8:	ldr	x0, [sp, #192]
    5cbc:	str	x0, [sp, #568]
    5cc0:	b	5d7c <__multf3+0x1460>
    5cc4:	ldr	x0, [sp, #656]
    5cc8:	cmp	x0, #0x0
    5ccc:	b.ne	5d7c <__multf3+0x1460>  // b.any
    5cd0:	ldr	x0, [sp, #568]
    5cd4:	and	x0, x0, #0x7
    5cd8:	cmp	x0, #0x0
    5cdc:	b.eq	5d7c <__multf3+0x1460>  // b.none
    5ce0:	ldr	x0, [sp, #568]
    5ce4:	add	x0, x0, #0x8
    5ce8:	str	x0, [sp, #200]
    5cec:	ldr	x1, [sp, #200]
    5cf0:	ldr	x0, [sp, #568]
    5cf4:	cmp	x1, x0
    5cf8:	cset	w0, cc  // cc = lo, ul, last
    5cfc:	and	w0, w0, #0xff
    5d00:	and	x0, x0, #0xff
    5d04:	ldr	x1, [sp, #560]
    5d08:	add	x0, x1, x0
    5d0c:	str	x0, [sp, #560]
    5d10:	ldr	x0, [sp, #200]
    5d14:	str	x0, [sp, #568]
    5d18:	b	5d7c <__multf3+0x1460>
    5d1c:	ldr	x0, [sp, #656]
    5d20:	cmp	x0, #0x0
    5d24:	b.eq	5d7c <__multf3+0x1460>  // b.none
    5d28:	ldr	x0, [sp, #568]
    5d2c:	and	x0, x0, #0x7
    5d30:	cmp	x0, #0x0
    5d34:	b.eq	5d7c <__multf3+0x1460>  // b.none
    5d38:	ldr	x0, [sp, #568]
    5d3c:	add	x0, x0, #0x8
    5d40:	str	x0, [sp, #208]
    5d44:	ldr	x1, [sp, #208]
    5d48:	ldr	x0, [sp, #568]
    5d4c:	cmp	x1, x0
    5d50:	cset	w0, cc  // cc = lo, ul, last
    5d54:	and	w0, w0, #0xff
    5d58:	and	x0, x0, #0xff
    5d5c:	ldr	x1, [sp, #560]
    5d60:	add	x0, x1, x0
    5d64:	str	x0, [sp, #560]
    5d68:	ldr	x0, [sp, #208]
    5d6c:	str	x0, [sp, #568]
    5d70:	b	5d7c <__multf3+0x1460>
    5d74:	nop
    5d78:	b	5d80 <__multf3+0x1464>
    5d7c:	nop
    5d80:	ldr	x0, [sp, #568]
    5d84:	lsr	x0, x0, #3
    5d88:	str	x0, [sp, #568]
    5d8c:	ldr	w0, [sp, #596]
    5d90:	orr	w0, w0, #0x8
    5d94:	str	w0, [sp, #596]
    5d98:	b	5dd4 <__multf3+0x14b8>
    5d9c:	str	xzr, [sp, #576]
    5da0:	str	xzr, [sp, #568]
    5da4:	str	xzr, [sp, #560]
    5da8:	b	5dd4 <__multf3+0x14b8>
    5dac:	mov	x0, #0x7fff                	// #32767
    5db0:	str	x0, [sp, #576]
    5db4:	str	xzr, [sp, #568]
    5db8:	str	xzr, [sp, #560]
    5dbc:	b	5dd4 <__multf3+0x14b8>
    5dc0:	mov	x0, #0x7fff                	// #32767
    5dc4:	str	x0, [sp, #576]
    5dc8:	ldr	x0, [sp, #560]
    5dcc:	orr	x0, x0, #0x800000000000
    5dd0:	str	x0, [sp, #560]
    5dd4:	nop
    5dd8:	ldr	x0, [sp, #568]
    5ddc:	str	x0, [sp, #80]
    5de0:	ldr	x0, [sp, #560]
    5de4:	and	x1, x0, #0xffffffffffff
    5de8:	ldr	x0, [sp, #88]
    5dec:	bfxil	x0, x1, #0, #48
    5df0:	str	x0, [sp, #88]
    5df4:	ldr	x0, [sp, #576]
    5df8:	and	w0, w0, #0x7fff
    5dfc:	and	w1, w0, #0xffff
    5e00:	ldrh	w0, [sp, #94]
    5e04:	bfxil	w0, w1, #0, #15
    5e08:	strh	w0, [sp, #94]
    5e0c:	ldr	x0, [sp, #656]
    5e10:	and	w0, w0, #0x1
    5e14:	and	w1, w0, #0xff
    5e18:	ldrb	w0, [sp, #95]
    5e1c:	bfi	w0, w1, #7, #1
    5e20:	strb	w0, [sp, #95]
    5e24:	ldr	q0, [sp, #80]
    5e28:	str	q0, [sp, #128]
    5e2c:	ldrsw	x0, [sp, #596]
    5e30:	cmp	x0, #0x0
    5e34:	b.eq	5e40 <__multf3+0x1524>  // b.none
    5e38:	ldr	w0, [sp, #596]
    5e3c:	bl	6318 <__sfp_handle_exceptions>
    5e40:	ldr	q0, [sp, #128]
    5e44:	ldp	x29, x30, [sp]
    5e48:	add	sp, sp, #0x2a0
    5e4c:	ret

0000000000005e50 <__floatsitf>:
    5e50:	sub	sp, sp, #0x60
    5e54:	str	w0, [sp, #12]
    5e58:	ldr	w0, [sp, #12]
    5e5c:	cmp	w0, #0x0
    5e60:	b.eq	5f68 <__floatsitf+0x118>  // b.none
    5e64:	ldr	w0, [sp, #12]
    5e68:	str	w0, [sp, #36]
    5e6c:	ldr	w0, [sp, #12]
    5e70:	lsr	w0, w0, #31
    5e74:	and	w0, w0, #0xff
    5e78:	and	x0, x0, #0xff
    5e7c:	str	x0, [sp, #40]
    5e80:	ldr	x0, [sp, #40]
    5e84:	cmp	x0, #0x0
    5e88:	b.eq	5e98 <__floatsitf+0x48>  // b.none
    5e8c:	ldr	w0, [sp, #36]
    5e90:	neg	w0, w0
    5e94:	str	w0, [sp, #36]
    5e98:	ldr	w0, [sp, #36]
    5e9c:	clz	x0, x0
    5ea0:	str	w0, [sp, #52]
    5ea4:	mov	w1, #0x403e                	// #16446
    5ea8:	ldr	w0, [sp, #52]
    5eac:	sub	w0, w1, w0
    5eb0:	sxtw	x0, w0
    5eb4:	str	x0, [sp, #56]
    5eb8:	ldr	w0, [sp, #36]
    5ebc:	str	x0, [sp, #64]
    5ec0:	str	xzr, [sp, #72]
    5ec4:	mov	x1, #0x406f                	// #16495
    5ec8:	ldr	x0, [sp, #56]
    5ecc:	sub	x0, x1, x0
    5ed0:	cmp	x0, #0x0
    5ed4:	b.le	5f78 <__floatsitf+0x128>
    5ed8:	mov	x1, #0x406f                	// #16495
    5edc:	ldr	x0, [sp, #56]
    5ee0:	sub	x0, x1, x0
    5ee4:	cmp	x0, #0x3f
    5ee8:	b.gt	5f44 <__floatsitf+0xf4>
    5eec:	ldr	x0, [sp, #56]
    5ef0:	mov	w1, w0
    5ef4:	mov	w0, #0x406f                	// #16495
    5ef8:	sub	w0, w0, w1
    5efc:	ldr	x1, [sp, #72]
    5f00:	lsl	x1, x1, x0
    5f04:	ldr	x0, [sp, #56]
    5f08:	mov	w2, w0
    5f0c:	mov	w0, #0xffffbfd1            	// #-16431
    5f10:	add	w0, w2, w0
    5f14:	ldr	x2, [sp, #64]
    5f18:	lsr	x0, x2, x0
    5f1c:	orr	x0, x1, x0
    5f20:	str	x0, [sp, #72]
    5f24:	ldr	x0, [sp, #56]
    5f28:	mov	w1, w0
    5f2c:	mov	w0, #0x406f                	// #16495
    5f30:	sub	w0, w0, w1
    5f34:	ldr	x1, [sp, #64]
    5f38:	lsl	x0, x1, x0
    5f3c:	str	x0, [sp, #64]
    5f40:	b	5f78 <__floatsitf+0x128>
    5f44:	ldr	x0, [sp, #56]
    5f48:	mov	w1, w0
    5f4c:	mov	w0, #0x402f                	// #16431
    5f50:	sub	w0, w0, w1
    5f54:	ldr	x1, [sp, #64]
    5f58:	lsl	x0, x1, x0
    5f5c:	str	x0, [sp, #72]
    5f60:	str	xzr, [sp, #64]
    5f64:	b	5f78 <__floatsitf+0x128>
    5f68:	str	xzr, [sp, #40]
    5f6c:	str	xzr, [sp, #56]
    5f70:	str	xzr, [sp, #64]
    5f74:	str	xzr, [sp, #72]
    5f78:	ldr	x0, [sp, #64]
    5f7c:	str	x0, [sp, #16]
    5f80:	ldr	x0, [sp, #72]
    5f84:	and	x1, x0, #0xffffffffffff
    5f88:	ldr	x0, [sp, #24]
    5f8c:	bfxil	x0, x1, #0, #48
    5f90:	str	x0, [sp, #24]
    5f94:	ldr	x0, [sp, #56]
    5f98:	and	w0, w0, #0x7fff
    5f9c:	and	w1, w0, #0xffff
    5fa0:	ldrh	w0, [sp, #30]
    5fa4:	bfxil	w0, w1, #0, #15
    5fa8:	strh	w0, [sp, #30]
    5fac:	ldr	x0, [sp, #40]
    5fb0:	and	w0, w0, #0x1
    5fb4:	and	w1, w0, #0xff
    5fb8:	ldrb	w0, [sp, #31]
    5fbc:	bfi	w0, w1, #7, #1
    5fc0:	strb	w0, [sp, #31]
    5fc4:	ldr	q0, [sp, #16]
    5fc8:	str	q0, [sp, #80]
    5fcc:	ldr	q0, [sp, #80]
    5fd0:	add	sp, sp, #0x60
    5fd4:	ret

0000000000005fd8 <__fixtfdi>:
    5fd8:	stp	x29, x30, [sp, #-128]!
    5fdc:	mov	x29, sp
    5fe0:	str	q0, [sp, #16]
    5fe4:	str	wzr, [sp, #124]
    5fe8:	str	xzr, [sp, #88]
    5fec:	mrs	x0, fpcr
    5ff0:	str	x0, [sp, #88]
    5ff4:	ldr	q0, [sp, #16]
    5ff8:	str	q0, [sp, #32]
    5ffc:	ldr	x0, [sp, #32]
    6000:	str	x0, [sp, #112]
    6004:	ldr	x0, [sp, #40]
    6008:	ubfx	x0, x0, #0, #48
    600c:	str	x0, [sp, #80]
    6010:	ldrh	w0, [sp, #46]
    6014:	ubfx	x0, x0, #0, #15
    6018:	and	w0, w0, #0xffff
    601c:	and	x0, x0, #0xffff
    6020:	str	x0, [sp, #72]
    6024:	ldrb	w0, [sp, #47]
    6028:	ubfx	x0, x0, #7, #1
    602c:	and	w0, w0, #0xff
    6030:	and	x0, x0, #0xff
    6034:	str	x0, [sp, #64]
    6038:	ldr	x1, [sp, #72]
    603c:	mov	x0, #0x3ffe                	// #16382
    6040:	cmp	x1, x0
    6044:	b.gt	608c <__fixtfdi+0xb4>
    6048:	str	xzr, [sp, #104]
    604c:	ldr	x0, [sp, #72]
    6050:	cmp	x0, #0x0
    6054:	b.ne	607c <__fixtfdi+0xa4>  // b.any
    6058:	ldr	x1, [sp, #80]
    605c:	ldr	x0, [sp, #112]
    6060:	orr	x0, x1, x0
    6064:	cmp	x0, #0x0
    6068:	b.eq	62f8 <__fixtfdi+0x320>  // b.none
    606c:	ldr	w0, [sp, #124]
    6070:	orr	w0, w0, #0x10
    6074:	str	w0, [sp, #124]
    6078:	b	62f8 <__fixtfdi+0x320>
    607c:	ldr	w0, [sp, #124]
    6080:	orr	w0, w0, #0x10
    6084:	str	w0, [sp, #124]
    6088:	b	62f8 <__fixtfdi+0x320>
    608c:	ldr	x1, [sp, #72]
    6090:	mov	x0, #0x403d                	// #16445
    6094:	cmp	x1, x0
    6098:	b.le	6170 <__fixtfdi+0x198>
    609c:	mov	x0, #0x1                   	// #1
    60a0:	str	x0, [sp, #104]
    60a4:	ldr	x0, [sp, #104]
    60a8:	lsl	x0, x0, #63
    60ac:	str	x0, [sp, #104]
    60b0:	ldr	x1, [sp, #64]
    60b4:	ldr	x0, [sp, #104]
    60b8:	add	x0, x1, x0
    60bc:	sub	x0, x0, #0x1
    60c0:	str	x0, [sp, #104]
    60c4:	ldr	x0, [sp, #64]
    60c8:	cmp	x0, #0x0
    60cc:	b.eq	6160 <__fixtfdi+0x188>  // b.none
    60d0:	ldr	x1, [sp, #72]
    60d4:	mov	x0, #0x403e                	// #16446
    60d8:	cmp	x1, x0
    60dc:	b.ne	6160 <__fixtfdi+0x188>  // b.any
    60e0:	str	wzr, [sp, #60]
    60e4:	ldr	x0, [sp, #112]
    60e8:	lsl	x0, x0, #15
    60ec:	cmp	x0, #0x0
    60f0:	cset	w0, ne  // ne = any
    60f4:	and	w0, w0, #0xff
    60f8:	str	w0, [sp, #60]
    60fc:	ldr	x0, [sp, #80]
    6100:	lsl	x1, x0, #15
    6104:	ldr	x0, [sp, #112]
    6108:	lsr	x0, x0, #49
    610c:	orr	x0, x1, x0
    6110:	str	x0, [sp, #112]
    6114:	ldr	x0, [sp, #80]
    6118:	lsr	x0, x0, #49
    611c:	str	x0, [sp, #80]
    6120:	ldr	x1, [sp, #80]
    6124:	ldr	x0, [sp, #112]
    6128:	orr	x0, x1, x0
    612c:	cmp	x0, #0x0
    6130:	b.eq	6144 <__fixtfdi+0x16c>  // b.none
    6134:	ldr	w0, [sp, #124]
    6138:	orr	w0, w0, #0x1
    613c:	str	w0, [sp, #124]
    6140:	b	62f4 <__fixtfdi+0x31c>
    6144:	ldr	w0, [sp, #60]
    6148:	cmp	w0, #0x0
    614c:	b.eq	62f4 <__fixtfdi+0x31c>  // b.none
    6150:	ldr	w0, [sp, #124]
    6154:	orr	w0, w0, #0x10
    6158:	str	w0, [sp, #124]
    615c:	b	62f4 <__fixtfdi+0x31c>
    6160:	ldr	w0, [sp, #124]
    6164:	orr	w0, w0, #0x1
    6168:	str	w0, [sp, #124]
    616c:	b	62f8 <__fixtfdi+0x320>
    6170:	str	wzr, [sp, #100]
    6174:	ldr	x0, [sp, #80]
    6178:	orr	x0, x0, #0x1000000000000
    617c:	str	x0, [sp, #80]
    6180:	ldr	x1, [sp, #72]
    6184:	mov	x0, #0x406e                	// #16494
    6188:	cmp	x1, x0
    618c:	b.le	61b8 <__fixtfdi+0x1e0>
    6190:	ldr	x0, [sp, #112]
    6194:	str	x0, [sp, #104]
    6198:	ldr	x0, [sp, #72]
    619c:	mov	w1, w0
    61a0:	mov	w0, #0xffffbf91            	// #-16495
    61a4:	add	w0, w1, w0
    61a8:	ldr	x1, [sp, #104]
    61ac:	lsl	x0, x1, x0
    61b0:	str	x0, [sp, #104]
    61b4:	b	62c0 <__fixtfdi+0x2e8>
    61b8:	mov	x1, #0x406f                	// #16495
    61bc:	ldr	x0, [sp, #72]
    61c0:	sub	x0, x1, x0
    61c4:	cmp	x0, #0x3f
    61c8:	b.gt	624c <__fixtfdi+0x274>
    61cc:	ldr	x0, [sp, #72]
    61d0:	mov	w1, w0
    61d4:	mov	w0, #0xffffbfd1            	// #-16431
    61d8:	add	w0, w1, w0
    61dc:	ldr	x1, [sp, #112]
    61e0:	lsl	x0, x1, x0
    61e4:	cmp	x0, #0x0
    61e8:	cset	w0, ne  // ne = any
    61ec:	and	w0, w0, #0xff
    61f0:	str	w0, [sp, #100]
    61f4:	ldr	x0, [sp, #72]
    61f8:	mov	w1, w0
    61fc:	mov	w0, #0xffffbfd1            	// #-16431
    6200:	add	w0, w1, w0
    6204:	ldr	x1, [sp, #80]
    6208:	lsl	x1, x1, x0
    620c:	ldr	x0, [sp, #72]
    6210:	mov	w2, w0
    6214:	mov	w0, #0x406f                	// #16495
    6218:	sub	w0, w0, w2
    621c:	ldr	x2, [sp, #112]
    6220:	lsr	x0, x2, x0
    6224:	orr	x0, x1, x0
    6228:	str	x0, [sp, #112]
    622c:	ldr	x0, [sp, #72]
    6230:	mov	w1, w0
    6234:	mov	w0, #0x406f                	// #16495
    6238:	sub	w0, w0, w1
    623c:	ldr	x1, [sp, #80]
    6240:	lsr	x0, x1, x0
    6244:	str	x0, [sp, #80]
    6248:	b	62b8 <__fixtfdi+0x2e0>
    624c:	mov	x1, #0x406f                	// #16495
    6250:	ldr	x0, [sp, #72]
    6254:	sub	x0, x1, x0
    6258:	cmp	x0, #0x40
    625c:	b.eq	627c <__fixtfdi+0x2a4>  // b.none
    6260:	ldr	x0, [sp, #72]
    6264:	mov	w1, w0
    6268:	mov	w0, #0xffffc011            	// #-16367
    626c:	add	w0, w1, w0
    6270:	ldr	x1, [sp, #80]
    6274:	lsl	x0, x1, x0
    6278:	b	6280 <__fixtfdi+0x2a8>
    627c:	mov	x0, #0x0                   	// #0
    6280:	ldr	x1, [sp, #112]
    6284:	orr	x0, x0, x1
    6288:	cmp	x0, #0x0
    628c:	cset	w0, ne  // ne = any
    6290:	and	w0, w0, #0xff
    6294:	str	w0, [sp, #100]
    6298:	ldr	x0, [sp, #72]
    629c:	mov	w1, w0
    62a0:	mov	w0, #0x402f                	// #16431
    62a4:	sub	w0, w0, w1
    62a8:	ldr	x1, [sp, #80]
    62ac:	lsr	x0, x1, x0
    62b0:	str	x0, [sp, #112]
    62b4:	str	xzr, [sp, #80]
    62b8:	ldr	x0, [sp, #112]
    62bc:	str	x0, [sp, #104]
    62c0:	ldr	x0, [sp, #64]
    62c4:	cmp	x0, #0x0
    62c8:	b.eq	62d8 <__fixtfdi+0x300>  // b.none
    62cc:	ldr	x0, [sp, #104]
    62d0:	neg	x0, x0
    62d4:	str	x0, [sp, #104]
    62d8:	ldr	w0, [sp, #100]
    62dc:	cmp	w0, #0x0
    62e0:	b.eq	62f8 <__fixtfdi+0x320>  // b.none
    62e4:	ldr	w0, [sp, #124]
    62e8:	orr	w0, w0, #0x10
    62ec:	str	w0, [sp, #124]
    62f0:	b	62f8 <__fixtfdi+0x320>
    62f4:	nop
    62f8:	ldrsw	x0, [sp, #124]
    62fc:	cmp	x0, #0x0
    6300:	b.eq	630c <__fixtfdi+0x334>  // b.none
    6304:	ldr	w0, [sp, #124]
    6308:	bl	6318 <__sfp_handle_exceptions>
    630c:	ldr	x0, [sp, #104]
    6310:	ldp	x29, x30, [sp], #128
    6314:	ret

0000000000006318 <__sfp_handle_exceptions>:
    6318:	sub	sp, sp, #0x30
    631c:	str	w0, [sp, #12]
    6320:	mov	w0, #0x7f7fffff            	// #2139095039
    6324:	fmov	s0, w0
    6328:	str	s0, [sp, #44]
    632c:	movi	v0.2s, #0x80, lsl #16
    6330:	str	s0, [sp, #40]
    6334:	mov	w0, #0xc5ae                	// #50606
    6338:	movk	w0, #0x749d, lsl #16
    633c:	fmov	s0, w0
    6340:	str	s0, [sp, #36]
    6344:	str	wzr, [sp, #32]
    6348:	fmov	s0, #1.000000000000000000e+00
    634c:	str	s0, [sp, #28]
    6350:	ldr	w0, [sp, #12]
    6354:	and	w0, w0, #0x1
    6358:	cmp	w0, #0x0
    635c:	b.eq	6370 <__sfp_handle_exceptions+0x58>  // b.none
    6360:	ldr	s1, [sp, #32]
    6364:	fdiv	s0, s1, s1
    6368:	mrs	x0, fpsr
    636c:	str	w0, [sp, #24]
    6370:	ldr	w0, [sp, #12]
    6374:	and	w0, w0, #0x2
    6378:	cmp	w0, #0x0
    637c:	b.eq	6394 <__sfp_handle_exceptions+0x7c>  // b.none
    6380:	ldr	s1, [sp, #28]
    6384:	ldr	s2, [sp, #32]
    6388:	fdiv	s0, s1, s2
    638c:	mrs	x0, fpsr
    6390:	str	w0, [sp, #24]
    6394:	ldr	w0, [sp, #12]
    6398:	and	w0, w0, #0x4
    639c:	cmp	w0, #0x0
    63a0:	b.eq	63b8 <__sfp_handle_exceptions+0xa0>  // b.none
    63a4:	ldr	s1, [sp, #44]
    63a8:	ldr	s2, [sp, #36]
    63ac:	fadd	s0, s1, s2
    63b0:	mrs	x0, fpsr
    63b4:	str	w0, [sp, #24]
    63b8:	ldr	w0, [sp, #12]
    63bc:	and	w0, w0, #0x8
    63c0:	cmp	w0, #0x0
    63c4:	b.eq	63d8 <__sfp_handle_exceptions+0xc0>  // b.none
    63c8:	ldr	s1, [sp, #40]
    63cc:	fmul	s0, s1, s1
    63d0:	mrs	x0, fpsr
    63d4:	str	w0, [sp, #24]
    63d8:	ldr	w0, [sp, #12]
    63dc:	and	w0, w0, #0x10
    63e0:	cmp	w0, #0x0
    63e4:	b.eq	63fc <__sfp_handle_exceptions+0xe4>  // b.none
    63e8:	ldr	s1, [sp, #44]
    63ec:	ldr	s2, [sp, #28]
    63f0:	fsub	s0, s1, s2
    63f4:	mrs	x0, fpsr
    63f8:	str	w0, [sp, #24]
    63fc:	nop
    6400:	add	sp, sp, #0x30
    6404:	ret

Disassembly of section .fini:

0000000000006408 <_fini>:
    6408:	stp	x29, x30, [sp, #-16]!
    640c:	mov	x29, sp
    6410:	ldp	x29, x30, [sp], #16
    6414:	ret
