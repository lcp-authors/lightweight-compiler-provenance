
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_heapq.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000aa0 <.init>:
 aa0:	stp	x29, x30, [sp, #-16]!
 aa4:	mov	x29, sp
 aa8:	bl	b90 <PyModule_AddObject@plt+0x10>
 aac:	ldp	x29, x30, [sp], #16
 ab0:	ret

Disassembly of section .plt:

0000000000000ac0 <__cxa_finalize@plt-0x20>:
 ac0:	stp	x16, x30, [sp, #-16]!
 ac4:	adrp	x16, 13000 <PyInit__heapq@@Base+0x1239c>
 ac8:	ldr	x17, [x16, #4088]
 acc:	add	x16, x16, #0xff8
 ad0:	br	x17
 ad4:	nop
 ad8:	nop
 adc:	nop

0000000000000ae0 <__cxa_finalize@plt>:
 ae0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 ae4:	ldr	x17, [x16]
 ae8:	add	x16, x16, #0x0
 aec:	br	x17

0000000000000af0 <PyList_SetSlice@plt>:
 af0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 af4:	ldr	x17, [x16, #8]
 af8:	add	x16, x16, #0x8
 afc:	br	x17

0000000000000b00 <_Py_Dealloc@plt>:
 b00:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b04:	ldr	x17, [x16, #16]
 b08:	add	x16, x16, #0x10
 b0c:	br	x17

0000000000000b10 <PyErr_SetString@plt>:
 b10:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b14:	ldr	x17, [x16, #24]
 b18:	add	x16, x16, #0x18
 b1c:	br	x17

0000000000000b20 <PyObject_RichCompareBool@plt>:
 b20:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b24:	ldr	x17, [x16, #32]
 b28:	add	x16, x16, #0x20
 b2c:	br	x17

0000000000000b30 <PyList_Append@plt>:
 b30:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b34:	ldr	x17, [x16, #40]
 b38:	add	x16, x16, #0x28
 b3c:	br	x17

0000000000000b40 <__gmon_start__@plt>:
 b40:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b44:	ldr	x17, [x16, #48]
 b48:	add	x16, x16, #0x30
 b4c:	br	x17

0000000000000b50 <_PyArg_CheckPositional@plt>:
 b50:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b54:	ldr	x17, [x16, #56]
 b58:	add	x16, x16, #0x38
 b5c:	br	x17

0000000000000b60 <PyModule_Create2@plt>:
 b60:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b64:	ldr	x17, [x16, #64]
 b68:	add	x16, x16, #0x40
 b6c:	br	x17

0000000000000b70 <PyUnicode_DecodeUTF8@plt>:
 b70:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b74:	ldr	x17, [x16, #72]
 b78:	add	x16, x16, #0x48
 b7c:	br	x17

0000000000000b80 <PyModule_AddObject@plt>:
 b80:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b84:	ldr	x17, [x16, #80]
 b88:	add	x16, x16, #0x50
 b8c:	br	x17

Disassembly of section .text:

0000000000000b90 <PyInit__heapq@@Base-0xd4>:
     b90:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
     b94:	ldr	x0, [x0, #4040]
     b98:	cbz	x0, ba0 <PyModule_AddObject@plt+0x20>
     b9c:	b	b40 <__gmon_start__@plt>
     ba0:	ret
     ba4:	nop
     ba8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     bac:	add	x0, x0, #0x1e8
     bb0:	adrp	x1, 14000 <PyInit__heapq@@Base+0x1339c>
     bb4:	add	x1, x1, #0x1e8
     bb8:	cmp	x1, x0
     bbc:	b.eq	bd4 <PyModule_AddObject@plt+0x54>  // b.none
     bc0:	adrp	x1, 13000 <PyInit__heapq@@Base+0x1239c>
     bc4:	ldr	x1, [x1, #4008]
     bc8:	cbz	x1, bd4 <PyModule_AddObject@plt+0x54>
     bcc:	mov	x16, x1
     bd0:	br	x16
     bd4:	ret
     bd8:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     bdc:	add	x0, x0, #0x1e8
     be0:	adrp	x1, 14000 <PyInit__heapq@@Base+0x1339c>
     be4:	add	x1, x1, #0x1e8
     be8:	sub	x1, x1, x0
     bec:	lsr	x2, x1, #63
     bf0:	add	x1, x2, x1, asr #3
     bf4:	cmp	xzr, x1, asr #1
     bf8:	asr	x1, x1, #1
     bfc:	b.eq	c14 <PyModule_AddObject@plt+0x94>  // b.none
     c00:	adrp	x2, 13000 <PyInit__heapq@@Base+0x1239c>
     c04:	ldr	x2, [x2, #4064]
     c08:	cbz	x2, c14 <PyModule_AddObject@plt+0x94>
     c0c:	mov	x16, x2
     c10:	br	x16
     c14:	ret
     c18:	stp	x29, x30, [sp, #-32]!
     c1c:	mov	x29, sp
     c20:	str	x19, [sp, #16]
     c24:	adrp	x19, 14000 <PyInit__heapq@@Base+0x1339c>
     c28:	ldrb	w0, [x19, #488]
     c2c:	cbnz	w0, c54 <PyModule_AddObject@plt+0xd4>
     c30:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
     c34:	ldr	x0, [x0, #4016]
     c38:	cbz	x0, c48 <PyModule_AddObject@plt+0xc8>
     c3c:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     c40:	ldr	x0, [x0, #88]
     c44:	bl	ae0 <__cxa_finalize@plt>
     c48:	bl	ba8 <PyModule_AddObject@plt+0x28>
     c4c:	mov	w0, #0x1                   	// #1
     c50:	strb	w0, [x19, #488]
     c54:	ldr	x19, [sp, #16]
     c58:	ldp	x29, x30, [sp], #32
     c5c:	ret
     c60:	b	bd8 <PyModule_AddObject@plt+0x58>

0000000000000c64 <PyInit__heapq@@Base>:
     c64:	stp	x29, x30, [sp, #-32]!
     c68:	str	x19, [sp, #16]
     c6c:	mov	x29, sp
     c70:	adrp	x0, 14000 <PyInit__heapq@@Base+0x1339c>
     c74:	add	x0, x0, #0x60
     c78:	mov	w1, #0x3f5                 	// #1013
     c7c:	bl	b60 <PyModule_Create2@plt>
     c80:	mov	x19, x0
     c84:	cbz	x0, cb0 <PyInit__heapq@@Base+0x4c>
     c88:	adrp	x0, 1000 <PyInit__heapq@@Base+0x39c>
     c8c:	add	x0, x0, #0x5d8
     c90:	mov	w1, #0x126f                	// #4719
     c94:	mov	x2, xzr
     c98:	bl	b70 <PyUnicode_DecodeUTF8@plt>
     c9c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     ca0:	mov	x2, x0
     ca4:	add	x1, x1, #0x1b0
     ca8:	mov	x0, x19
     cac:	bl	b80 <PyModule_AddObject@plt>
     cb0:	mov	x0, x19
     cb4:	ldr	x19, [sp, #16]
     cb8:	ldp	x29, x30, [sp], #32
     cbc:	ret
     cc0:	stp	x29, x30, [sp, #-32]!
     cc4:	stp	x20, x19, [sp, #16]
     cc8:	mov	x29, sp
     ccc:	cmp	x2, #0x2
     cd0:	mov	x19, x1
     cd4:	b.eq	cf8 <PyInit__heapq@@Base+0x94>  // b.none
     cd8:	mov	x8, x2
     cdc:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     ce0:	add	x0, x0, #0x1c1
     ce4:	mov	w2, #0x2                   	// #2
     ce8:	mov	w3, #0x2                   	// #2
     cec:	mov	x1, x8
     cf0:	bl	b50 <_PyArg_CheckPositional@plt>
     cf4:	cbz	w0, d34 <PyInit__heapq@@Base+0xd0>
     cf8:	ldr	x20, [x19]
     cfc:	ldr	x8, [x20, #8]
     d00:	ldrb	w8, [x8, #171]
     d04:	tbnz	w8, #1, d24 <PyInit__heapq@@Base+0xc0>
     d08:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     d0c:	ldr	x8, [x8, #4032]
     d10:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     d14:	add	x1, x1, #0x21d
     d18:	ldr	x0, [x8]
     d1c:	bl	b10 <PyErr_SetString@plt>
     d20:	b	d34 <PyInit__heapq@@Base+0xd0>
     d24:	ldr	x1, [x19, #8]
     d28:	mov	x0, x20
     d2c:	bl	b30 <PyList_Append@plt>
     d30:	cbz	w0, d44 <PyInit__heapq@@Base+0xe0>
     d34:	mov	x0, xzr
     d38:	ldp	x20, x19, [sp, #16]
     d3c:	ldp	x29, x30, [sp], #32
     d40:	ret
     d44:	ldr	x8, [x20, #16]
     d48:	mov	x0, x20
     d4c:	mov	x1, xzr
     d50:	sub	x2, x8, #0x1
     d54:	bl	fa8 <PyInit__heapq@@Base+0x344>
     d58:	mov	w8, w0
     d5c:	mov	x0, xzr
     d60:	cbnz	w8, d38 <PyInit__heapq@@Base+0xd4>
     d64:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
     d68:	ldr	x0, [x0, #4048]
     d6c:	ldr	x8, [x0]
     d70:	add	x8, x8, #0x1
     d74:	str	x8, [x0]
     d78:	b	d38 <PyInit__heapq@@Base+0xd4>
     d7c:	stp	x29, x30, [sp, #-48]!
     d80:	str	x21, [sp, #16]
     d84:	stp	x20, x19, [sp, #32]
     d88:	mov	x29, sp
     d8c:	cmp	x2, #0x2
     d90:	mov	x19, x1
     d94:	b.eq	db8 <PyInit__heapq@@Base+0x154>  // b.none
     d98:	mov	x8, x2
     d9c:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     da0:	add	x0, x0, #0x1ca
     da4:	mov	w2, #0x2                   	// #2
     da8:	mov	w3, #0x2                   	// #2
     dac:	mov	x1, x8
     db0:	bl	b50 <_PyArg_CheckPositional@plt>
     db4:	cbz	w0, de0 <PyInit__heapq@@Base+0x17c>
     db8:	ldr	x20, [x19]
     dbc:	ldr	x8, [x20, #8]
     dc0:	ldrb	w8, [x8, #171]
     dc4:	tbnz	w8, #1, de8 <PyInit__heapq@@Base+0x184>
     dc8:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     dcc:	ldr	x8, [x8, #4032]
     dd0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     dd4:	add	x1, x1, #0x21d
     dd8:	ldr	x0, [x8]
     ddc:	bl	b10 <PyErr_SetString@plt>
     de0:	mov	x19, xzr
     de4:	b	e68 <PyInit__heapq@@Base+0x204>
     de8:	ldr	x8, [x20, #16]
     dec:	ldr	x19, [x19, #8]
     df0:	cbz	x8, e5c <PyInit__heapq@@Base+0x1f8>
     df4:	ldr	x8, [x20, #24]
     df8:	mov	x1, x19
     dfc:	mov	w2, wzr
     e00:	ldr	x0, [x8]
     e04:	bl	b20 <PyObject_RichCompareBool@plt>
     e08:	tbnz	w0, #31, de0 <PyInit__heapq@@Base+0x17c>
     e0c:	cbz	w0, e5c <PyInit__heapq@@Base+0x1f8>
     e10:	ldr	x8, [x20, #16]
     e14:	cbz	x8, e7c <PyInit__heapq@@Base+0x218>
     e18:	ldr	x8, [x20, #24]
     e1c:	ldr	x9, [x19]
     e20:	mov	x0, x20
     e24:	mov	x1, xzr
     e28:	ldr	x21, [x8]
     e2c:	add	x9, x9, #0x1
     e30:	str	x9, [x19]
     e34:	str	x19, [x8]
     e38:	bl	1078 <PyInit__heapq@@Base+0x414>
     e3c:	cbz	w0, e90 <PyInit__heapq@@Base+0x22c>
     e40:	ldr	x8, [x21]
     e44:	subs	x8, x8, #0x1
     e48:	str	x8, [x21]
     e4c:	b.ne	de0 <PyInit__heapq@@Base+0x17c>  // b.any
     e50:	mov	x0, x21
     e54:	bl	b00 <_Py_Dealloc@plt>
     e58:	b	de0 <PyInit__heapq@@Base+0x17c>
     e5c:	ldr	x8, [x19]
     e60:	add	x8, x8, #0x1
     e64:	str	x8, [x19]
     e68:	mov	x0, x19
     e6c:	ldp	x20, x19, [sp, #32]
     e70:	ldr	x21, [sp, #16]
     e74:	ldp	x29, x30, [sp], #48
     e78:	ret
     e7c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
     e80:	ldr	x8, [x8, #4056]
     e84:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
     e88:	add	x1, x1, #0x23a
     e8c:	b	dd8 <PyInit__heapq@@Base+0x174>
     e90:	mov	x19, x21
     e94:	b	e68 <PyInit__heapq@@Base+0x204>
     e98:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
     e9c:	add	x8, x8, #0x78
     ea0:	mov	x0, x1
     ea4:	mov	x1, x8
     ea8:	b	1178 <PyInit__heapq@@Base+0x514>
     eac:	stp	x29, x30, [sp, #-32]!
     eb0:	str	x19, [sp, #16]
     eb4:	mov	x29, sp
     eb8:	cmp	x2, #0x2
     ebc:	mov	x19, x1
     ec0:	b.eq	ee4 <PyInit__heapq@@Base+0x280>  // b.none
     ec4:	mov	x8, x2
     ec8:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     ecc:	add	x0, x0, #0x1de
     ed0:	mov	w2, #0x2                   	// #2
     ed4:	mov	w3, #0x2                   	// #2
     ed8:	mov	x1, x8
     edc:	bl	b50 <_PyArg_CheckPositional@plt>
     ee0:	cbz	w0, efc <PyInit__heapq@@Base+0x298>
     ee4:	ldp	x0, x1, [x19]
     ee8:	ldr	x19, [sp, #16]
     eec:	adrp	x2, 1000 <PyInit__heapq@@Base+0x39c>
     ef0:	add	x2, x2, #0x78
     ef4:	ldp	x29, x30, [sp], #32
     ef8:	b	1274 <PyInit__heapq@@Base+0x610>
     efc:	ldr	x19, [sp, #16]
     f00:	mov	x0, xzr
     f04:	ldp	x29, x30, [sp], #32
     f08:	ret
     f0c:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
     f10:	add	x8, x8, #0x78
     f14:	mov	x0, x1
     f18:	mov	x1, x8
     f1c:	b	1314 <PyInit__heapq@@Base+0x6b0>
     f20:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
     f24:	add	x8, x8, #0x478
     f28:	mov	x0, x1
     f2c:	mov	x1, x8
     f30:	b	1178 <PyInit__heapq@@Base+0x514>
     f34:	adrp	x8, 1000 <PyInit__heapq@@Base+0x39c>
     f38:	add	x8, x8, #0x478
     f3c:	mov	x0, x1
     f40:	mov	x1, x8
     f44:	b	1314 <PyInit__heapq@@Base+0x6b0>
     f48:	stp	x29, x30, [sp, #-32]!
     f4c:	str	x19, [sp, #16]
     f50:	mov	x29, sp
     f54:	cmp	x2, #0x2
     f58:	mov	x19, x1
     f5c:	b.eq	f80 <PyInit__heapq@@Base+0x31c>  // b.none
     f60:	mov	x8, x2
     f64:	adrp	x0, 3000 <PyInit__heapq@@Base+0x239c>
     f68:	add	x0, x0, #0x20c
     f6c:	mov	w2, #0x2                   	// #2
     f70:	mov	w3, #0x2                   	// #2
     f74:	mov	x1, x8
     f78:	bl	b50 <_PyArg_CheckPositional@plt>
     f7c:	cbz	w0, f98 <PyInit__heapq@@Base+0x334>
     f80:	ldp	x0, x1, [x19]
     f84:	ldr	x19, [sp, #16]
     f88:	adrp	x2, 1000 <PyInit__heapq@@Base+0x39c>
     f8c:	add	x2, x2, #0x478
     f90:	ldp	x29, x30, [sp], #32
     f94:	b	1274 <PyInit__heapq@@Base+0x610>
     f98:	ldr	x19, [sp, #16]
     f9c:	mov	x0, xzr
     fa0:	ldp	x29, x30, [sp], #32
     fa4:	ret
     fa8:	stp	x29, x30, [sp, #-64]!
     fac:	str	x23, [sp, #16]
     fb0:	stp	x22, x21, [sp, #32]
     fb4:	stp	x20, x19, [sp, #48]
     fb8:	mov	x29, sp
     fbc:	ldr	x22, [x0, #16]
     fc0:	cmp	x22, x2
     fc4:	b.le	1034 <PyInit__heapq@@Base+0x3d0>
     fc8:	mov	x20, x2
     fcc:	mov	x21, x1
     fd0:	cmp	x2, x1
     fd4:	b.le	102c <PyInit__heapq@@Base+0x3c8>
     fd8:	ldr	x8, [x0, #24]
     fdc:	mov	x19, x0
     fe0:	ldr	x0, [x8, x20, lsl #3]
     fe4:	sub	x9, x20, #0x1
     fe8:	asr	x23, x9, #1
     fec:	ldr	x1, [x8, x23, lsl #3]
     ff0:	mov	w2, wzr
     ff4:	bl	b20 <PyObject_RichCompareBool@plt>
     ff8:	tbnz	w0, #31, 104c <PyInit__heapq@@Base+0x3e8>
     ffc:	ldr	x8, [x19, #16]
    1000:	cmp	x22, x8
    1004:	b.ne	1064 <PyInit__heapq@@Base+0x400>  // b.any
    1008:	cbz	w0, 1050 <PyInit__heapq@@Base+0x3ec>
    100c:	ldr	x8, [x19, #24]
    1010:	cmp	x23, x21
    1014:	ldr	x0, [x8, x20, lsl #3]
    1018:	ldr	x9, [x8, x23, lsl #3]
    101c:	str	x0, [x8, x23, lsl #3]
    1020:	str	x9, [x8, x20, lsl #3]
    1024:	mov	x20, x23
    1028:	b.gt	fe4 <PyInit__heapq@@Base+0x380>
    102c:	mov	w0, wzr
    1030:	b	1050 <PyInit__heapq@@Base+0x3ec>
    1034:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1038:	ldr	x8, [x8, #4056]
    103c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1040:	add	x1, x1, #0x23a
    1044:	ldr	x0, [x8]
    1048:	bl	b10 <PyErr_SetString@plt>
    104c:	mov	w0, #0xffffffff            	// #-1
    1050:	ldp	x20, x19, [sp, #48]
    1054:	ldp	x22, x21, [sp, #32]
    1058:	ldr	x23, [sp, #16]
    105c:	ldp	x29, x30, [sp], #64
    1060:	ret
    1064:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1068:	ldr	x8, [x8, #4024]
    106c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1070:	add	x1, x1, #0x24d
    1074:	b	1044 <PyInit__heapq@@Base+0x3e0>
    1078:	stp	x29, x30, [sp, #-64]!
    107c:	stp	x24, x23, [sp, #16]
    1080:	stp	x22, x21, [sp, #32]
    1084:	stp	x20, x19, [sp, #48]
    1088:	mov	x29, sp
    108c:	ldr	x22, [x0, #16]
    1090:	cmp	x22, x1
    1094:	b.le	1134 <PyInit__heapq@@Base+0x4d0>
    1098:	asr	x23, x22, #1
    109c:	mov	x19, x0
    10a0:	mov	x20, x1
    10a4:	cmp	x23, x1
    10a8:	mov	x21, x1
    10ac:	b.le	1114 <PyInit__heapq@@Base+0x4b0>
    10b0:	ldr	x8, [x19, #24]
    10b4:	mov	x24, x20
    10b8:	mov	w21, #0x1                   	// #1
    10bc:	bfi	x21, x24, #1, #63
    10c0:	add	x9, x21, #0x1
    10c4:	cmp	x9, x22
    10c8:	b.ge	10f8 <PyInit__heapq@@Base+0x494>  // b.tcont
    10cc:	ldr	x0, [x8, x21, lsl #3]
    10d0:	ldr	x1, [x8, x9, lsl #3]
    10d4:	mov	w2, wzr
    10d8:	bl	b20 <PyObject_RichCompareBool@plt>
    10dc:	tbnz	w0, #31, 114c <PyInit__heapq@@Base+0x4e8>
    10e0:	ldr	x8, [x19, #16]
    10e4:	cmp	x22, x8
    10e8:	b.ne	1164 <PyInit__heapq@@Base+0x500>  // b.any
    10ec:	ldr	x8, [x19, #24]
    10f0:	eor	w9, w0, #0x1
    10f4:	add	x21, x21, x9
    10f8:	ldr	x9, [x8, x24, lsl #3]
    10fc:	ldr	x10, [x8, x21, lsl #3]
    1100:	cmp	x21, x23
    1104:	str	x9, [x8, x21, lsl #3]
    1108:	str	x10, [x8, x24, lsl #3]
    110c:	mov	x24, x21
    1110:	b.lt	10b8 <PyInit__heapq@@Base+0x454>  // b.tstop
    1114:	mov	x0, x19
    1118:	mov	x1, x20
    111c:	mov	x2, x21
    1120:	ldp	x20, x19, [sp, #48]
    1124:	ldp	x22, x21, [sp, #32]
    1128:	ldp	x24, x23, [sp, #16]
    112c:	ldp	x29, x30, [sp], #64
    1130:	b	fa8 <PyInit__heapq@@Base+0x344>
    1134:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1138:	ldr	x8, [x8, #4056]
    113c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1140:	add	x1, x1, #0x23a
    1144:	ldr	x0, [x8]
    1148:	bl	b10 <PyErr_SetString@plt>
    114c:	ldp	x20, x19, [sp, #48]
    1150:	ldp	x22, x21, [sp, #32]
    1154:	ldp	x24, x23, [sp, #16]
    1158:	mov	w0, #0xffffffff            	// #-1
    115c:	ldp	x29, x30, [sp], #64
    1160:	ret
    1164:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1168:	ldr	x8, [x8, #4024]
    116c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1170:	add	x1, x1, #0x24d
    1174:	b	1144 <PyInit__heapq@@Base+0x4e0>
    1178:	stp	x29, x30, [sp, #-48]!
    117c:	stp	x22, x21, [sp, #16]
    1180:	stp	x20, x19, [sp, #32]
    1184:	mov	x29, sp
    1188:	ldr	x8, [x0, #8]
    118c:	ldrb	w8, [x8, #171]
    1190:	tbnz	w8, #1, 11a8 <PyInit__heapq@@Base+0x544>
    1194:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1198:	ldr	x8, [x8, #4032]
    119c:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    11a0:	add	x1, x1, #0x21d
    11a4:	b	1210 <PyInit__heapq@@Base+0x5ac>
    11a8:	ldr	x22, [x0, #16]
    11ac:	mov	x20, x0
    11b0:	cbz	x22, 1200 <PyInit__heapq@@Base+0x59c>
    11b4:	ldr	x8, [x20, #24]
    11b8:	mov	x21, x1
    11bc:	sub	x1, x22, #0x1
    11c0:	mov	x0, x20
    11c4:	ldr	x19, [x8, x1, lsl #3]
    11c8:	mov	x2, x22
    11cc:	mov	x3, xzr
    11d0:	ldr	x8, [x19]
    11d4:	add	x8, x8, #0x1
    11d8:	str	x8, [x19]
    11dc:	bl	af0 <PyList_SetSlice@plt>
    11e0:	cbz	w0, 1230 <PyInit__heapq@@Base+0x5cc>
    11e4:	ldr	x8, [x19]
    11e8:	subs	x8, x8, #0x1
    11ec:	str	x8, [x19]
    11f0:	b.ne	1218 <PyInit__heapq@@Base+0x5b4>  // b.any
    11f4:	mov	x0, x19
    11f8:	bl	b00 <_Py_Dealloc@plt>
    11fc:	b	1218 <PyInit__heapq@@Base+0x5b4>
    1200:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1204:	ldr	x8, [x8, #4056]
    1208:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    120c:	add	x1, x1, #0x23a
    1210:	ldr	x0, [x8]
    1214:	bl	b10 <PyErr_SetString@plt>
    1218:	mov	x19, xzr
    121c:	mov	x0, x19
    1220:	ldp	x20, x19, [sp, #32]
    1224:	ldp	x22, x21, [sp, #16]
    1228:	ldp	x29, x30, [sp], #48
    122c:	ret
    1230:	cmp	x22, #0x1
    1234:	b.eq	121c <PyInit__heapq@@Base+0x5b8>  // b.none
    1238:	ldr	x8, [x20, #24]
    123c:	mov	x0, x20
    1240:	mov	x1, xzr
    1244:	ldr	x22, [x8]
    1248:	str	x19, [x8]
    124c:	blr	x21
    1250:	cbz	w0, 126c <PyInit__heapq@@Base+0x608>
    1254:	ldr	x8, [x22]
    1258:	subs	x8, x8, #0x1
    125c:	str	x8, [x22]
    1260:	b.ne	1218 <PyInit__heapq@@Base+0x5b4>  // b.any
    1264:	mov	x0, x22
    1268:	b	11f8 <PyInit__heapq@@Base+0x594>
    126c:	mov	x19, x22
    1270:	b	121c <PyInit__heapq@@Base+0x5b8>
    1274:	stp	x29, x30, [sp, #-32]!
    1278:	str	x19, [sp, #16]
    127c:	mov	x29, sp
    1280:	ldr	x8, [x0, #8]
    1284:	ldrb	w8, [x8, #171]
    1288:	tbnz	w8, #1, 12a0 <PyInit__heapq@@Base+0x63c>
    128c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1290:	ldr	x8, [x8, #4032]
    1294:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1298:	add	x1, x1, #0x21d
    129c:	b	12f8 <PyInit__heapq@@Base+0x694>
    12a0:	ldr	x8, [x0, #16]
    12a4:	cbz	x8, 12e8 <PyInit__heapq@@Base+0x684>
    12a8:	ldr	x8, [x0, #24]
    12ac:	ldr	x9, [x1]
    12b0:	ldr	x19, [x8]
    12b4:	add	x9, x9, #0x1
    12b8:	str	x9, [x1]
    12bc:	str	x1, [x8]
    12c0:	mov	x1, xzr
    12c4:	blr	x2
    12c8:	cbz	w0, 1304 <PyInit__heapq@@Base+0x6a0>
    12cc:	ldr	x8, [x19]
    12d0:	subs	x8, x8, #0x1
    12d4:	str	x8, [x19]
    12d8:	b.ne	1300 <PyInit__heapq@@Base+0x69c>  // b.any
    12dc:	mov	x0, x19
    12e0:	bl	b00 <_Py_Dealloc@plt>
    12e4:	b	1300 <PyInit__heapq@@Base+0x69c>
    12e8:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    12ec:	ldr	x8, [x8, #4056]
    12f0:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    12f4:	add	x1, x1, #0x23a
    12f8:	ldr	x0, [x8]
    12fc:	bl	b10 <PyErr_SetString@plt>
    1300:	mov	x19, xzr
    1304:	mov	x0, x19
    1308:	ldr	x19, [sp, #16]
    130c:	ldp	x29, x30, [sp], #32
    1310:	ret
    1314:	stp	x29, x30, [sp, #-80]!
    1318:	str	x25, [sp, #16]
    131c:	stp	x24, x23, [sp, #32]
    1320:	stp	x22, x21, [sp, #48]
    1324:	stp	x20, x19, [sp, #64]
    1328:	mov	x29, sp
    132c:	ldr	x8, [x0, #8]
    1330:	ldrb	w8, [x8, #171]
    1334:	tbnz	w8, #1, 136c <PyInit__heapq@@Base+0x708>
    1338:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    133c:	ldr	x8, [x8, #4032]
    1340:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1344:	add	x1, x1, #0x21d
    1348:	ldr	x0, [x8]
    134c:	bl	b10 <PyErr_SetString@plt>
    1350:	mov	x0, xzr
    1354:	ldp	x20, x19, [sp, #64]
    1358:	ldp	x22, x21, [sp, #48]
    135c:	ldp	x24, x23, [sp, #32]
    1360:	ldr	x25, [sp, #16]
    1364:	ldp	x29, x30, [sp], #80
    1368:	ret
    136c:	ldr	x8, [x0, #16]
    1370:	mov	x19, x0
    1374:	mov	x20, x1
    1378:	cmp	x8, #0x9c5
    137c:	b.lt	1414 <PyInit__heapq@@Base+0x7b0>  // b.tstop
    1380:	lsr	x23, x8, #1
    1384:	mov	x9, xzr
    1388:	add	x10, x23, #0x1
    138c:	lsr	x11, x10, #1
    1390:	cmp	x10, #0x3
    1394:	add	x9, x9, #0x1
    1398:	mov	x10, x11
    139c:	b.hi	138c <PyInit__heapq@@Base+0x728>  // b.pmore
    13a0:	lsl	x24, x11, x9
    13a4:	sub	x21, x24, #0x2
    13a8:	cmp	x21, x8, asr #2
    13ac:	b.ge	1434 <PyInit__heapq@@Base+0x7d0>  // b.tcont
    13b0:	sub	x24, x24, #0x1
    13b4:	cmp	x23, x24
    13b8:	b.le	13fc <PyInit__heapq@@Base+0x798>
    13bc:	sub	x21, x23, #0x1
    13c0:	mov	x0, x19
    13c4:	mov	x1, x21
    13c8:	blr	x20
    13cc:	mov	x22, x21
    13d0:	cbnz	w0, 1350 <PyInit__heapq@@Base+0x6ec>
    13d4:	tbz	w22, #0, 13f0 <PyInit__heapq@@Base+0x78c>
    13d8:	asr	x22, x22, #1
    13dc:	mov	x0, x19
    13e0:	mov	x1, x22
    13e4:	blr	x20
    13e8:	cbz	w0, 13d4 <PyInit__heapq@@Base+0x770>
    13ec:	b	1350 <PyInit__heapq@@Base+0x6ec>
    13f0:	sub	x21, x21, #0x1
    13f4:	cmp	x21, x24
    13f8:	b.ge	13c0 <PyInit__heapq@@Base+0x75c>  // b.tcont
    13fc:	adrp	x0, 13000 <PyInit__heapq@@Base+0x1239c>
    1400:	ldr	x0, [x0, #4048]
    1404:	ldr	x8, [x0]
    1408:	add	x8, x8, #0x1
    140c:	str	x8, [x0]
    1410:	b	1354 <PyInit__heapq@@Base+0x6f0>
    1414:	asr	x21, x8, #1
    1418:	subs	x21, x21, #0x1
    141c:	b.lt	13fc <PyInit__heapq@@Base+0x798>  // b.tstop
    1420:	mov	x0, x19
    1424:	mov	x1, x21
    1428:	blr	x20
    142c:	cbz	w0, 1418 <PyInit__heapq@@Base+0x7b4>
    1430:	b	1350 <PyInit__heapq@@Base+0x6ec>
    1434:	asr	x25, x8, #2
    1438:	mov	x0, x19
    143c:	mov	x1, x21
    1440:	blr	x20
    1444:	mov	x22, x21
    1448:	cbnz	w0, 1350 <PyInit__heapq@@Base+0x6ec>
    144c:	tbz	w22, #0, 1468 <PyInit__heapq@@Base+0x804>
    1450:	asr	x22, x22, #1
    1454:	mov	x0, x19
    1458:	mov	x1, x22
    145c:	blr	x20
    1460:	cbz	w0, 144c <PyInit__heapq@@Base+0x7e8>
    1464:	b	1350 <PyInit__heapq@@Base+0x6ec>
    1468:	sub	x21, x21, #0x1
    146c:	cmp	x21, x25
    1470:	b.ge	1438 <PyInit__heapq@@Base+0x7d4>  // b.tcont
    1474:	b	13b0 <PyInit__heapq@@Base+0x74c>
    1478:	stp	x29, x30, [sp, #-64]!
    147c:	stp	x24, x23, [sp, #16]
    1480:	stp	x22, x21, [sp, #32]
    1484:	stp	x20, x19, [sp, #48]
    1488:	mov	x29, sp
    148c:	ldr	x21, [x0, #16]
    1490:	cmp	x21, x1
    1494:	b.le	157c <PyInit__heapq@@Base+0x918>
    1498:	asr	x23, x21, #1
    149c:	mov	x19, x0
    14a0:	mov	x20, x1
    14a4:	cmp	x23, x1
    14a8:	mov	x22, x1
    14ac:	b.le	1514 <PyInit__heapq@@Base+0x8b0>
    14b0:	ldr	x8, [x19, #24]
    14b4:	mov	x24, x20
    14b8:	mov	w22, #0x1                   	// #1
    14bc:	bfi	x22, x24, #1, #63
    14c0:	add	x9, x22, #0x1
    14c4:	cmp	x9, x21
    14c8:	b.ge	14f8 <PyInit__heapq@@Base+0x894>  // b.tcont
    14cc:	ldr	x0, [x8, x9, lsl #3]
    14d0:	ldr	x1, [x8, x22, lsl #3]
    14d4:	mov	w2, wzr
    14d8:	bl	b20 <PyObject_RichCompareBool@plt>
    14dc:	tbnz	w0, #31, 1594 <PyInit__heapq@@Base+0x930>
    14e0:	ldr	x8, [x19, #16]
    14e4:	cmp	x21, x8
    14e8:	b.ne	15b4 <PyInit__heapq@@Base+0x950>  // b.any
    14ec:	ldr	x8, [x19, #24]
    14f0:	eor	w9, w0, #0x1
    14f4:	add	x22, x22, x9
    14f8:	ldr	x9, [x8, x24, lsl #3]
    14fc:	ldr	x10, [x8, x22, lsl #3]
    1500:	cmp	x22, x23
    1504:	str	x9, [x8, x22, lsl #3]
    1508:	str	x10, [x8, x24, lsl #3]
    150c:	mov	x24, x22
    1510:	b.lt	14b8 <PyInit__heapq@@Base+0x854>  // b.tstop
    1514:	cmp	x21, x22
    1518:	b.le	157c <PyInit__heapq@@Base+0x918>
    151c:	cmp	x22, x20
    1520:	b.le	15ac <PyInit__heapq@@Base+0x948>
    1524:	ldr	x8, [x19, #24]
    1528:	ldr	x1, [x8, x22, lsl #3]
    152c:	sub	x9, x22, #0x1
    1530:	asr	x23, x9, #1
    1534:	ldr	x0, [x8, x23, lsl #3]
    1538:	mov	w2, wzr
    153c:	bl	b20 <PyObject_RichCompareBool@plt>
    1540:	tbnz	w0, #31, 1594 <PyInit__heapq@@Base+0x930>
    1544:	ldr	x8, [x19, #16]
    1548:	cmp	x21, x8
    154c:	b.ne	15b4 <PyInit__heapq@@Base+0x950>  // b.any
    1550:	cbz	w0, 1598 <PyInit__heapq@@Base+0x934>
    1554:	ldr	x8, [x19, #24]
    1558:	mov	w0, wzr
    155c:	cmp	x23, x20
    1560:	ldr	x1, [x8, x22, lsl #3]
    1564:	ldr	x9, [x8, x23, lsl #3]
    1568:	str	x1, [x8, x23, lsl #3]
    156c:	str	x9, [x8, x22, lsl #3]
    1570:	mov	x22, x23
    1574:	b.gt	152c <PyInit__heapq@@Base+0x8c8>
    1578:	b	1598 <PyInit__heapq@@Base+0x934>
    157c:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    1580:	ldr	x8, [x8, #4056]
    1584:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    1588:	add	x1, x1, #0x23a
    158c:	ldr	x0, [x8]
    1590:	bl	b10 <PyErr_SetString@plt>
    1594:	mov	w0, #0xffffffff            	// #-1
    1598:	ldp	x20, x19, [sp, #48]
    159c:	ldp	x22, x21, [sp, #32]
    15a0:	ldp	x24, x23, [sp, #16]
    15a4:	ldp	x29, x30, [sp], #64
    15a8:	ret
    15ac:	mov	w0, wzr
    15b0:	b	1598 <PyInit__heapq@@Base+0x934>
    15b4:	adrp	x8, 13000 <PyInit__heapq@@Base+0x1239c>
    15b8:	ldr	x8, [x8, #4024]
    15bc:	adrp	x1, 3000 <PyInit__heapq@@Base+0x239c>
    15c0:	add	x1, x1, #0x24d
    15c4:	b	158c <PyInit__heapq@@Base+0x928>

Disassembly of section .fini:

00000000000015c8 <.fini>:
    15c8:	stp	x29, x30, [sp, #-16]!
    15cc:	mov	x29, sp
    15d0:	ldp	x29, x30, [sp], #16
    15d4:	ret
