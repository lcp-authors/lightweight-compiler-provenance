
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_md4.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xbe0>:
   0:	mov	x2, #0x2301                	// #8961
   4:	mov	x1, #0xdcfe                	// #56574
   8:	movk	x2, #0x6745, lsl #16
   c:	movk	x1, #0x98ba, lsl #16
  10:	movk	x2, #0xab89, lsl #32
  14:	movk	x1, #0x5476, lsl #32
  18:	movk	x2, #0xefcd, lsl #48
  1c:	movk	x1, #0x1032, lsl #48
  20:	stp	x2, x1, [x0]
  24:	str	wzr, [x0, #16]
  28:	str	wzr, [x0, #84]
  2c:	ret
  30:	add	x0, x0, #0x14
  34:	ret
  38:	stp	x29, x30, [sp, #-160]!
  3c:	mov	x2, #0x40                  	// #64
  40:	mov	x29, sp
  44:	stp	x19, x20, [sp, #16]
  48:	mov	x19, x0
  4c:	add	x0, sp, #0x60
  50:	stp	x21, x22, [sp, #32]
  54:	stp	x23, x24, [sp, #48]
  58:	ldp	w21, w23, [x19, #8]
  5c:	stp	x25, x26, [sp, #64]
  60:	ldp	w22, w20, [x19]
  64:	str	x27, [sp, #80]
  68:	bl	0 <grub_memmove>
  6c:	ldp	w26, w18, [sp, #96]
  70:	eor	w0, w21, w23
  74:	and	w0, w0, w20
  78:	eor	w7, w20, w21
  7c:	add	w22, w26, w22
  80:	eor	w0, w0, w23
  84:	add	w0, w0, w22
  88:	add	w23, w18, w23
  8c:	ldr	w22, [sp, #104]
  90:	mov	w4, #0x7999                	// #31129
  94:	ror	w0, w0, #29
  98:	and	w7, w7, w0
  9c:	eor	w5, w20, w0
  a0:	eor	w7, w7, w21
  a4:	add	w21, w22, w21
  a8:	add	w7, w7, w23
  ac:	ldr	w16, [sp, #116]
  b0:	ldp	w2, w24, [sp, #108]
  b4:	ror	w7, w7, #25
  b8:	and	w5, w5, w7
  bc:	eor	w1, w0, w7
  c0:	eor	w5, w5, w20
  c4:	add	w20, w2, w20
  c8:	add	w5, w5, w21
  cc:	add	w8, w16, w7
  d0:	ldp	w25, w17, [sp, #128]
  d4:	ror	w5, w5, #21
  d8:	and	w1, w1, w5
  dc:	eor	w3, w7, w5
  e0:	eor	w1, w1, w0
  e4:	add	w0, w24, w0
  e8:	add	w1, w1, w20
  ec:	ldr	w21, [sp, #136]
  f0:	ldr	w14, [sp, #140]
  f4:	movk	w4, #0x5a82, lsl #16
  f8:	ldr	w23, [sp, #144]
  fc:	ror	w1, w1, #13
 100:	and	w3, w3, w1
 104:	eor	w6, w5, w1
 108:	eor	w3, w3, w7
 10c:	add	w11, w26, w4
 110:	add	w3, w3, w0
 114:	ldp	w20, w0, [sp, #120]
 118:	ror	w3, w3, #29
 11c:	and	w6, w6, w3
 120:	eor	w10, w1, w3
 124:	eor	w6, w6, w5
 128:	add	w13, w20, w5
 12c:	add	w6, w6, w8
 130:	add	w12, w0, w1
 134:	add	w27, w25, w3
 138:	ror	w6, w6, #25
 13c:	and	w10, w10, w6
 140:	eor	w9, w3, w6
 144:	eor	w10, w10, w1
 148:	add	w8, w17, w6
 14c:	add	w10, w10, w13
 150:	ldp	w15, w30, [sp, #148]
 154:	ror	w10, w10, #21
 158:	and	w9, w9, w10
 15c:	eor	w7, w6, w10
 160:	eor	w9, w9, w3
 164:	add	w13, w21, w10
 168:	add	w9, w9, w12
 16c:	ror	w9, w9, #13
 170:	and	w7, w7, w9
 174:	eor	w1, w10, w9
 178:	eor	w7, w7, w6
 17c:	add	w12, w14, w9
 180:	add	w7, w7, w27
 184:	ror	w7, w7, #29
 188:	and	w1, w1, w7
 18c:	eor	w3, w9, w7
 190:	eor	w1, w1, w10
 194:	add	w5, w23, w7
 198:	add	w1, w1, w8
 19c:	ror	w1, w1, #25
 1a0:	and	w3, w3, w1
 1a4:	eor	w6, w7, w1
 1a8:	eor	w3, w3, w9
 1ac:	add	w3, w3, w13
 1b0:	add	w13, w15, w1
 1b4:	ror	w3, w3, #21
 1b8:	and	w6, w6, w3
 1bc:	eor	w8, w1, w3
 1c0:	eor	w6, w6, w7
 1c4:	add	w27, w30, w3
 1c8:	add	w6, w6, w12
 1cc:	ror	w6, w6, #13
 1d0:	and	w8, w8, w6
 1d4:	eor	w12, w3, w6
 1d8:	eor	w8, w8, w1
 1dc:	ldr	w1, [sp, #156]
 1e0:	add	w8, w8, w5
 1e4:	ror	w8, w8, #29
 1e8:	and	w12, w12, w8
 1ec:	eor	w10, w6, w8
 1f0:	eor	w12, w12, w3
 1f4:	add	w12, w12, w13
 1f8:	add	w13, w1, w6
 1fc:	ror	w12, w12, #25
 200:	and	w10, w10, w12
 204:	eor	w9, w8, w12
 208:	eor	w10, w10, w6
 20c:	add	w10, w10, w27
 210:	add	w27, w24, w4
 214:	ror	w10, w10, #21
 218:	and	w9, w9, w10
 21c:	orr	w5, w12, w10
 220:	eor	w9, w9, w8
 224:	and	w3, w12, w10
 228:	add	w9, w9, w13
 22c:	ror	w9, w9, #13
 230:	and	w5, w5, w9
 234:	and	w6, w10, w9
 238:	orr	w5, w5, w3
 23c:	orr	w3, w10, w9
 240:	add	w5, w5, w8
 244:	add	w5, w5, w11
 248:	add	w11, w25, w4
 24c:	ror	w5, w5, #29
 250:	and	w3, w3, w5
 254:	orr	w7, w9, w5
 258:	orr	w3, w3, w6
 25c:	and	w6, w9, w5
 260:	add	w3, w3, w12
 264:	add	w3, w3, w27
 268:	ror	w3, w3, #27
 26c:	and	w7, w7, w3
 270:	and	w8, w5, w3
 274:	orr	w7, w7, w6
 278:	orr	w6, w5, w3
 27c:	add	w7, w7, w10
 280:	add	w10, w23, w4
 284:	add	w7, w7, w11
 288:	ror	w7, w7, #23
 28c:	and	w6, w6, w7
 290:	orr	w13, w3, w7
 294:	orr	w6, w6, w8
 298:	and	w8, w3, w7
 29c:	add	w6, w6, w9
 2a0:	add	w9, w18, w4
 2a4:	add	w6, w6, w10
 2a8:	ror	w6, w6, #19
 2ac:	and	w13, w13, w6
 2b0:	orr	w12, w7, w6
 2b4:	orr	w13, w13, w8
 2b8:	and	w8, w7, w6
 2bc:	add	w13, w13, w5
 2c0:	add	w5, w16, w4
 2c4:	add	w13, w13, w9
 2c8:	ror	w13, w13, #29
 2cc:	and	w12, w12, w13
 2d0:	orr	w11, w6, w13
 2d4:	orr	w12, w12, w8
 2d8:	and	w8, w6, w13
 2dc:	add	w12, w12, w3
 2e0:	add	w12, w12, w5
 2e4:	add	w5, w17, w4
 2e8:	ror	w12, w12, #27
 2ec:	and	w11, w11, w12
 2f0:	orr	w10, w13, w12
 2f4:	orr	w11, w11, w8
 2f8:	and	w3, w13, w12
 2fc:	add	w11, w11, w7
 300:	add	w11, w11, w5
 304:	add	w5, w15, w4
 308:	ror	w11, w11, #23
 30c:	and	w10, w10, w11
 310:	orr	w9, w12, w11
 314:	orr	w10, w10, w3
 318:	and	w3, w12, w11
 31c:	add	w10, w10, w6
 320:	add	w10, w10, w5
 324:	add	w5, w22, w4
 328:	ror	w10, w10, #19
 32c:	and	w9, w9, w10
 330:	orr	w8, w11, w10
 334:	orr	w9, w9, w3
 338:	and	w3, w11, w10
 33c:	add	w9, w9, w13
 340:	add	w9, w9, w5
 344:	add	w5, w20, w4
 348:	ror	w9, w9, #29
 34c:	and	w8, w8, w9
 350:	orr	w7, w10, w9
 354:	orr	w8, w8, w3
 358:	and	w3, w10, w9
 35c:	add	w8, w8, w12
 360:	add	w8, w8, w5
 364:	add	w5, w21, w4
 368:	ror	w8, w8, #27
 36c:	and	w7, w7, w8
 370:	orr	w6, w9, w8
 374:	orr	w7, w7, w3
 378:	and	w3, w9, w8
 37c:	add	w7, w7, w11
 380:	add	w11, w30, w4
 384:	add	w7, w7, w5
 388:	ror	w7, w7, #23
 38c:	and	w6, w6, w7
 390:	orr	w5, w8, w7
 394:	orr	w6, w6, w3
 398:	and	w3, w8, w7
 39c:	add	w6, w6, w10
 3a0:	add	w10, w2, w4
 3a4:	add	w6, w6, w11
 3a8:	ror	w6, w6, #19
 3ac:	and	w5, w5, w6
 3b0:	and	w11, w7, w6
 3b4:	orr	w5, w5, w3
 3b8:	orr	w3, w7, w6
 3bc:	add	w5, w5, w9
 3c0:	add	w5, w5, w10
 3c4:	add	w10, w0, w4
 3c8:	ror	w5, w5, #29
 3cc:	and	w9, w3, w5
 3d0:	orr	w3, w6, w5
 3d4:	orr	w9, w9, w11
 3d8:	add	w11, w14, w4
 3dc:	add	w8, w9, w8
 3e0:	and	w9, w6, w5
 3e4:	add	w8, w8, w10
 3e8:	add	w10, w1, w4
 3ec:	ror	w8, w8, #27
 3f0:	and	w3, w3, w8
 3f4:	and	w4, w5, w8
 3f8:	orr	w3, w3, w9
 3fc:	orr	w9, w5, w8
 400:	add	w7, w3, w7
 404:	mov	w3, #0xeba1                	// #60321
 408:	add	w7, w7, w11
 40c:	movk	w3, #0x6ed9, lsl #16
 410:	add	w26, w26, w3
 414:	add	w25, w25, w3
 418:	add	w24, w24, w3
 41c:	ror	w7, w7, #23
 420:	and	w9, w9, w7
 424:	add	w23, w23, w3
 428:	orr	w4, w9, w4
 42c:	eor	w9, w8, w7
 430:	add	w6, w4, w6
 434:	add	w22, w22, w3
 438:	add	w4, w6, w10
 43c:	add	w10, w0, w3
 440:	add	w21, w21, w3
 444:	add	w20, w20, w3
 448:	add	w30, w30, w3
 44c:	ror	w4, w4, #19
 450:	eor	w9, w9, w4
 454:	eor	w6, w7, w4
 458:	add	w5, w9, w5
 45c:	add	w13, w2, w3
 460:	add	w26, w5, w26
 464:	add	w18, w18, w3
 468:	add	w12, w14, w3
 46c:	add	w17, w17, w3
 470:	add	w16, w16, w3
 474:	ror	w26, w26, #29
 478:	eor	w5, w6, w26
 47c:	eor	w6, w4, w26
 480:	add	w8, w5, w8
 484:	add	w5, w15, w3
 488:	add	w25, w8, w25
 48c:	add	w3, w1, w3
 490:	ldp	w27, w9, [x19]
 494:	ror	w25, w25, #23
 498:	eor	w0, w6, w25
 49c:	eor	w6, w26, w25
 4a0:	add	w7, w0, w7
 4a4:	add	w24, w7, w24
 4a8:	ror	w24, w24, #21
 4ac:	eor	w6, w6, w24
 4b0:	eor	w0, w25, w24
 4b4:	add	w4, w6, w4
 4b8:	add	w23, w4, w23
 4bc:	ldp	w11, w6, [x19, #8]
 4c0:	ror	w23, w23, #17
 4c4:	eor	w0, w0, w23
 4c8:	eor	w8, w24, w23
 4cc:	add	w26, w0, w26
 4d0:	add	w22, w26, w22
 4d4:	ror	w22, w22, #29
 4d8:	eor	w8, w8, w22
 4dc:	eor	w7, w23, w22
 4e0:	add	w25, w8, w25
 4e4:	add	w21, w25, w21
 4e8:	ldp	x25, x26, [sp, #64]
 4ec:	ror	w21, w21, #23
 4f0:	eor	w7, w7, w21
 4f4:	eor	w15, w22, w21
 4f8:	add	w24, w7, w24
 4fc:	add	w20, w24, w20
 500:	ror	w20, w20, #21
 504:	eor	w15, w15, w20
 508:	eor	w2, w21, w20
 50c:	add	w23, w15, w23
 510:	add	w30, w23, w30
 514:	ldp	x23, x24, [sp, #48]
 518:	ror	w30, w30, #17
 51c:	eor	w2, w2, w30
 520:	eor	w14, w20, w30
 524:	add	w22, w2, w22
 528:	add	w18, w22, w18
 52c:	ror	w18, w18, #29
 530:	eor	w14, w14, w18
 534:	eor	w0, w30, w18
 538:	add	w21, w14, w21
 53c:	add	w17, w21, w17
 540:	ldp	x21, x22, [sp, #32]
 544:	ror	w17, w17, #23
 548:	eor	w0, w0, w17
 54c:	eor	w15, w18, w17
 550:	add	w20, w0, w20
 554:	add	w16, w20, w16
 558:	ror	w16, w16, #21
 55c:	eor	w15, w15, w16
 560:	eor	w2, w17, w16
 564:	add	w15, w15, w30
 568:	add	w15, w15, w5
 56c:	ror	w15, w15, #17
 570:	eor	w2, w2, w15
 574:	eor	w14, w16, w15
 578:	add	w2, w2, w18
 57c:	add	w2, w2, w13
 580:	ror	w1, w2, #29
 584:	eor	w14, w14, w1
 588:	eor	w0, w15, w1
 58c:	add	w14, w14, w17
 590:	add	w27, w27, w1
 594:	add	w14, w14, w12
 598:	ror	w14, w14, #23
 59c:	eor	w0, w0, w14
 5a0:	eor	w1, w1, w14
 5a4:	add	w0, w0, w16
 5a8:	add	w14, w6, w14
 5ac:	add	w0, w0, w10
 5b0:	ror	w0, w0, #21
 5b4:	eor	w1, w1, w0
 5b8:	add	w0, w11, w0
 5bc:	add	w1, w1, w15
 5c0:	stp	w0, w14, [x19, #8]
 5c4:	add	w1, w1, w3
 5c8:	ror	w1, w1, #17
 5cc:	add	w1, w9, w1
 5d0:	stp	w27, w1, [x19]
 5d4:	ldp	x19, x20, [sp, #16]
 5d8:	ldr	x27, [sp, #80]
 5dc:	ldp	x29, x30, [sp], #160
 5e0:	ret
 5e4:	nop
 5e8:	stp	x29, x30, [sp, #-48]!
 5ec:	mov	x29, sp
 5f0:	stp	x19, x20, [sp, #16]
 5f4:	mov	x20, x1
 5f8:	ldr	w1, [x0, #84]
 5fc:	stp	x21, x22, [sp, #32]
 600:	mov	x19, x0
 604:	mov	x21, x2
 608:	cmp	w1, #0x40
 60c:	b.eq	71c <grub_mod_init-0x4c4>  // b.none
 610:	cbz	x20, 6e0 <grub_mod_init-0x500>
 614:	cbz	w1, 654 <grub_mod_init-0x58c>
 618:	cbz	x2, 6e0 <grub_mod_init-0x500>
 61c:	sxtw	x0, w1
 620:	add	x1, x19, #0x14
 624:	b	640 <grub_mod_init-0x5a0>
 628:	str	w2, [x19, #84]
 62c:	subs	x21, x21, #0x1
 630:	ldrb	w3, [x20], #1
 634:	strb	w3, [x1, x0]
 638:	add	x0, x0, #0x1
 63c:	b.eq	6f0 <grub_mod_init-0x4f0>  // b.none
 640:	add	w2, w0, #0x1
 644:	cmp	w0, #0x3f
 648:	b.le	628 <grub_mod_init-0x5b8>
 64c:	cmp	w0, #0x40
 650:	b.eq	758 <grub_mod_init-0x488>  // b.none
 654:	mov	w0, #0x80                  	// #128
 658:	bl	0 <_gcry_burn_stack>
 65c:	cmp	x21, #0x3f
 660:	b.ls	750 <grub_mod_init-0x490>  // b.plast
 664:	sub	x22, x21, #0x40
 668:	and	x22, x22, #0xffffffffffffffc0
 66c:	add	x22, x22, #0x40
 670:	add	x22, x20, x22
 674:	nop
 678:	mov	x1, x20
 67c:	mov	x0, x19
 680:	bl	38 <grub_mod_init-0xba8>
 684:	str	wzr, [x19, #84]
 688:	ldr	w0, [x19, #16]
 68c:	add	x20, x20, #0x40
 690:	cmp	x20, x22
 694:	add	w0, w0, #0x1
 698:	str	w0, [x19, #16]
 69c:	b.ne	678 <grub_mod_init-0x568>  // b.any
 6a0:	and	x21, x21, #0x3f
 6a4:	cbz	x21, 6e0 <grub_mod_init-0x500>
 6a8:	ldrsw	x1, [x19, #84]
 6ac:	add	x2, x19, #0x14
 6b0:	sub	x22, x22, x1
 6b4:	add	x21, x1, x21
 6b8:	b	6d4 <grub_mod_init-0x50c>
 6bc:	str	w0, [x19, #84]
 6c0:	ldrb	w0, [x22, x1]
 6c4:	strb	w0, [x2, x1]
 6c8:	add	x1, x1, #0x1
 6cc:	cmp	x1, x21
 6d0:	b.eq	6e0 <grub_mod_init-0x500>  // b.none
 6d4:	add	w0, w1, #0x1
 6d8:	cmp	w1, #0x3f
 6dc:	b.le	6bc <grub_mod_init-0x524>
 6e0:	ldp	x19, x20, [sp, #16]
 6e4:	ldp	x21, x22, [sp, #32]
 6e8:	ldp	x29, x30, [sp], #48
 6ec:	ret
 6f0:	cmp	w2, #0x40
 6f4:	b.ne	6e0 <grub_mod_init-0x500>  // b.any
 6f8:	mov	x0, x19
 6fc:	bl	38 <grub_mod_init-0xba8>
 700:	mov	w0, #0x80                  	// #128
 704:	bl	0 <_gcry_burn_stack>
 708:	ldr	w0, [x19, #16]
 70c:	str	wzr, [x19, #84]
 710:	add	w0, w0, #0x1
 714:	str	w0, [x19, #16]
 718:	b	6e0 <grub_mod_init-0x500>
 71c:	add	x1, x0, #0x14
 720:	bl	38 <grub_mod_init-0xba8>
 724:	mov	w0, #0x80                  	// #128
 728:	bl	0 <_gcry_burn_stack>
 72c:	str	wzr, [x19, #84]
 730:	ldr	w0, [x19, #16]
 734:	add	w0, w0, #0x1
 738:	str	w0, [x19, #16]
 73c:	cbz	x20, 6e0 <grub_mod_init-0x500>
 740:	mov	w0, #0x80                  	// #128
 744:	bl	0 <_gcry_burn_stack>
 748:	cmp	x21, #0x3f
 74c:	b.hi	664 <grub_mod_init-0x57c>  // b.pmore
 750:	mov	x22, x20
 754:	b	6a4 <grub_mod_init-0x53c>
 758:	add	x1, x19, #0x14
 75c:	mov	x0, x19
 760:	bl	38 <grub_mod_init-0xba8>
 764:	mov	x22, x20
 768:	mov	w0, #0x80                  	// #128
 76c:	bl	0 <_gcry_burn_stack>
 770:	str	wzr, [x19, #84]
 774:	ldr	w1, [x19, #16]
 778:	mov	w0, #0x80                  	// #128
 77c:	add	w1, w1, #0x1
 780:	str	w1, [x19, #16]
 784:	bl	0 <_gcry_burn_stack>
 788:	cmp	x21, #0x3f
 78c:	b.hi	664 <grub_mod_init-0x57c>  // b.pmore
 790:	b	6a8 <grub_mod_init-0x538>
 794:	nop
 798:	stp	x29, x30, [sp, #-48]!
 79c:	mov	x29, sp
 7a0:	ldr	w1, [x0, #84]
 7a4:	stp	x19, x20, [sp, #16]
 7a8:	mov	x19, x0
 7ac:	add	x20, x0, #0x14
 7b0:	stp	x21, x22, [sp, #32]
 7b4:	cmp	w1, #0x40
 7b8:	b.eq	b78 <grub_mod_init-0x68>  // b.none
 7bc:	ldr	w2, [x0, #16]
 7c0:	add	w3, w1, #0x1
 7c4:	lsl	w0, w2, #6
 7c8:	adds	w0, w1, w0
 7cc:	cset	w4, cs  // cs = hs, nlast
 7d0:	cmp	w1, #0x37
 7d4:	add	w2, w4, w2, lsr #26
 7d8:	lsl	w22, w0, #3
 7dc:	extr	w21, w2, w0, #29
 7e0:	b.le	904 <grub_mod_init-0x2dc>
 7e4:	add	x0, x19, w1, sxtw
 7e8:	str	w3, [x19, #84]
 7ec:	mov	w2, #0xffffff80            	// #-128
 7f0:	cmp	w3, #0x3f
 7f4:	strb	w2, [x0, #20]
 7f8:	b.gt	8f8 <grub_mod_init-0x2e8>
 7fc:	add	x3, x19, w3, sxtw
 800:	cmp	w1, #0x3e
 804:	add	w0, w1, #0x2
 808:	strb	wzr, [x3, #20]
 80c:	b.eq	87c <grub_mod_init-0x364>  // b.none
 810:	add	x0, x19, w0, sxtw
 814:	cmp	w1, #0x3d
 818:	add	w2, w1, #0x3
 81c:	strb	wzr, [x0, #20]
 820:	b.eq	87c <grub_mod_init-0x364>  // b.none
 824:	add	x2, x19, w2, sxtw
 828:	cmp	w1, #0x3c
 82c:	add	w0, w1, #0x4
 830:	strb	wzr, [x2, #20]
 834:	b.eq	87c <grub_mod_init-0x364>  // b.none
 838:	add	x0, x19, w0, sxtw
 83c:	cmp	w1, #0x3b
 840:	add	w2, w1, #0x5
 844:	strb	wzr, [x0, #20]
 848:	b.eq	87c <grub_mod_init-0x364>  // b.none
 84c:	add	x2, x19, w2, sxtw
 850:	cmp	w1, #0x3a
 854:	add	w0, w1, #0x6
 858:	strb	wzr, [x2, #20]
 85c:	b.eq	87c <grub_mod_init-0x364>  // b.none
 860:	add	x0, x19, w0, sxtw
 864:	cmp	w1, #0x39
 868:	add	w1, w1, #0x7
 86c:	strb	wzr, [x0, #20]
 870:	b.eq	87c <grub_mod_init-0x364>  // b.none
 874:	add	x1, x19, w1, sxtw
 878:	strb	wzr, [x1, #20]
 87c:	mov	w0, #0x40                  	// #64
 880:	str	w0, [x19, #84]
 884:	mov	x1, x20
 888:	mov	x0, x19
 88c:	bl	38 <grub_mod_init-0xba8>
 890:	mov	w0, #0x80                  	// #128
 894:	bl	0 <_gcry_burn_stack>
 898:	str	wzr, [x19, #84]
 89c:	ldr	w0, [x19, #16]
 8a0:	add	w0, w0, #0x1
 8a4:	str	w0, [x19, #16]
 8a8:	mov	x0, x20
 8ac:	mov	x2, #0x38                  	// #56
 8b0:	mov	w1, #0x0                   	// #0
 8b4:	bl	0 <grub_memset>
 8b8:	mov	x1, x20
 8bc:	str	w22, [x19, #76]
 8c0:	strh	w21, [x19, #80]
 8c4:	mov	x0, x19
 8c8:	strh	wzr, [x19, #82]
 8cc:	bl	38 <grub_mod_init-0xba8>
 8d0:	mov	w0, #0x80                  	// #128
 8d4:	bl	0 <_gcry_burn_stack>
 8d8:	ldr	x0, [x19]
 8dc:	ldp	x21, x22, [sp, #32]
 8e0:	stur	x0, [x19, #20]
 8e4:	ldr	x0, [x19, #8]
 8e8:	stur	x0, [x19, #28]
 8ec:	ldp	x19, x20, [sp, #16]
 8f0:	ldp	x29, x30, [sp], #48
 8f4:	ret
 8f8:	cmp	w3, #0x40
 8fc:	b.ne	8a8 <grub_mod_init-0x338>  // b.any
 900:	b	884 <grub_mod_init-0x35c>
 904:	sxtw	x5, w1
 908:	str	w3, [x19, #84]
 90c:	add	x0, x19, x5
 910:	mov	w2, #0xffffff80            	// #-128
 914:	cmp	w3, #0x37
 918:	strb	w2, [x0, #20]
 91c:	b.gt	8b8 <grub_mod_init-0x328>
 920:	add	x6, x5, #0x15
 924:	mov	w7, #0xb                   	// #11
 928:	add	x2, x19, x6
 92c:	mov	w5, #0x36                  	// #54
 930:	neg	x2, x2
 934:	sub	w5, w5, w1
 938:	and	w2, w2, #0x7
 93c:	mov	w4, #0x37                  	// #55
 940:	add	w0, w2, #0x7
 944:	sub	w4, w4, w1
 948:	cmp	w0, w7
 94c:	csel	w0, w0, w7, cs  // cs = hs, nlast
 950:	cmp	w5, w0
 954:	b.cc	bd4 <grub_mod_init-0xc>  // b.lo, b.ul, b.last
 958:	cbz	w2, bcc <grub_mod_init-0x14>
 95c:	add	x5, x19, w3, sxtw
 960:	cmp	w2, #0x1
 964:	add	w0, w3, #0x1
 968:	strb	wzr, [x5, #20]
 96c:	b.eq	9e0 <grub_mod_init-0x200>  // b.none
 970:	add	x5, x19, w0, sxtw
 974:	cmp	w2, #0x2
 978:	add	w0, w3, #0x2
 97c:	strb	wzr, [x5, #20]
 980:	b.eq	9e0 <grub_mod_init-0x200>  // b.none
 984:	add	x5, x19, w0, sxtw
 988:	cmp	w2, #0x3
 98c:	add	w0, w3, #0x3
 990:	strb	wzr, [x5, #20]
 994:	b.eq	9e0 <grub_mod_init-0x200>  // b.none
 998:	add	x5, x19, w0, sxtw
 99c:	cmp	w2, #0x4
 9a0:	add	w0, w3, #0x4
 9a4:	strb	wzr, [x5, #20]
 9a8:	b.eq	9e0 <grub_mod_init-0x200>  // b.none
 9ac:	add	x5, x19, w0, sxtw
 9b0:	cmp	w2, #0x5
 9b4:	add	w0, w3, #0x5
 9b8:	strb	wzr, [x5, #20]
 9bc:	b.eq	9e0 <grub_mod_init-0x200>  // b.none
 9c0:	add	x5, x19, w0, sxtw
 9c4:	cmp	w2, #0x7
 9c8:	add	w0, w3, #0x6
 9cc:	strb	wzr, [x5, #20]
 9d0:	b.ne	9e0 <grub_mod_init-0x200>  // b.any
 9d4:	add	x5, x19, w0, sxtw
 9d8:	add	w0, w3, #0x7
 9dc:	strb	wzr, [x5, #20]
 9e0:	mov	w5, w2
 9e4:	sub	w2, w4, w2
 9e8:	add	x5, x5, x6
 9ec:	lsr	w4, w2, #3
 9f0:	add	x6, x19, x5
 9f4:	cmp	w4, #0x1
 9f8:	str	xzr, [x19, x5]
 9fc:	b.eq	a4c <grub_mod_init-0x194>  // b.none
 a00:	str	xzr, [x6, #8]
 a04:	cmp	w4, #0x2
 a08:	b.eq	a4c <grub_mod_init-0x194>  // b.none
 a0c:	str	xzr, [x6, #16]
 a10:	cmp	w4, #0x3
 a14:	b.eq	a4c <grub_mod_init-0x194>  // b.none
 a18:	str	xzr, [x6, #24]
 a1c:	cmp	w4, #0x4
 a20:	b.eq	a4c <grub_mod_init-0x194>  // b.none
 a24:	str	xzr, [x6, #32]
 a28:	cmp	w4, #0x5
 a2c:	b.eq	a4c <grub_mod_init-0x194>  // b.none
 a30:	str	xzr, [x6, #40]
 a34:	cmp	w4, #0x6
 a38:	b.eq	a4c <grub_mod_init-0x194>  // b.none
 a3c:	str	xzr, [x6, #48]
 a40:	cmp	w4, #0x7
 a44:	b.eq	a4c <grub_mod_init-0x194>  // b.none
 a48:	str	xzr, [x6, #56]
 a4c:	and	w4, w2, #0xfffffff8
 a50:	add	w0, w4, w0
 a54:	cmp	w4, w2
 a58:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 a5c:	add	x2, x19, w0, sxtw
 a60:	cmp	w0, #0x37
 a64:	add	w4, w0, #0x1
 a68:	strb	wzr, [x2, #20]
 a6c:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 a70:	add	x4, x19, w4, sxtw
 a74:	cmp	w0, #0x36
 a78:	add	w2, w0, #0x2
 a7c:	strb	wzr, [x4, #20]
 a80:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 a84:	add	x2, x19, w2, sxtw
 a88:	cmp	w0, #0x35
 a8c:	add	w4, w0, #0x3
 a90:	strb	wzr, [x2, #20]
 a94:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 a98:	add	x4, x19, w4, sxtw
 a9c:	cmp	w0, #0x34
 aa0:	add	w2, w0, #0x4
 aa4:	strb	wzr, [x4, #20]
 aa8:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 aac:	add	x2, x19, w2, sxtw
 ab0:	cmp	w0, #0x33
 ab4:	add	w4, w0, #0x5
 ab8:	strb	wzr, [x2, #20]
 abc:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 ac0:	add	x4, x19, w4, sxtw
 ac4:	cmp	w0, #0x32
 ac8:	add	w2, w0, #0x6
 acc:	strb	wzr, [x4, #20]
 ad0:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 ad4:	add	x2, x19, w2, sxtw
 ad8:	cmp	w0, #0x31
 adc:	add	w4, w0, #0x7
 ae0:	strb	wzr, [x2, #20]
 ae4:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 ae8:	add	x4, x19, w4, sxtw
 aec:	cmp	w0, #0x30
 af0:	add	w2, w0, #0x8
 af4:	strb	wzr, [x4, #20]
 af8:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 afc:	add	x2, x19, w2, sxtw
 b00:	cmp	w0, #0x2f
 b04:	add	w4, w0, #0x9
 b08:	strb	wzr, [x2, #20]
 b0c:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 b10:	add	x4, x19, w4, sxtw
 b14:	cmp	w0, #0x2e
 b18:	add	w2, w0, #0xa
 b1c:	strb	wzr, [x4, #20]
 b20:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 b24:	add	x2, x19, w2, sxtw
 b28:	cmp	w0, #0x2d
 b2c:	add	w4, w0, #0xb
 b30:	strb	wzr, [x2, #20]
 b34:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 b38:	add	x4, x19, w4, sxtw
 b3c:	cmp	w0, #0x2c
 b40:	add	w2, w0, #0xc
 b44:	strb	wzr, [x4, #20]
 b48:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 b4c:	add	x2, x19, w2, sxtw
 b50:	cmp	w0, #0x2b
 b54:	add	w0, w0, #0xd
 b58:	strb	wzr, [x2, #20]
 b5c:	b.eq	b68 <grub_mod_init-0x78>  // b.none
 b60:	add	x0, x19, w0, sxtw
 b64:	strb	wzr, [x0, #20]
 b68:	sub	w1, w3, w1
 b6c:	add	w1, w1, #0x37
 b70:	str	w1, [x19, #84]
 b74:	b	8b8 <grub_mod_init-0x328>
 b78:	mov	x1, x20
 b7c:	bl	38 <grub_mod_init-0xba8>
 b80:	mov	w0, #0x80                  	// #128
 b84:	bl	0 <_gcry_burn_stack>
 b88:	ldr	w0, [x19, #16]
 b8c:	mov	w5, #0x1                   	// #1
 b90:	add	x2, x19, #0x15
 b94:	mov	w7, #0xffffff80            	// #-128
 b98:	add	w0, w0, w5
 b9c:	neg	x2, x2
 ba0:	and	w2, w2, #0x7
 ba4:	mov	w3, w5
 ba8:	lsl	w22, w0, #9
 bac:	lsr	w21, w0, #23
 bb0:	mov	w4, #0x37                  	// #55
 bb4:	mov	w1, #0x0                   	// #0
 bb8:	mov	x6, #0x15                  	// #21
 bbc:	str	w0, [x19, #16]
 bc0:	strb	w7, [x19, #20]
 bc4:	str	w5, [x19, #84]
 bc8:	b	958 <grub_mod_init-0x288>
 bcc:	mov	w0, w3
 bd0:	b	9e0 <grub_mod_init-0x200>
 bd4:	mov	w0, w3
 bd8:	b	a5c <grub_mod_init-0x184>
 bdc:	nop

0000000000000be0 <grub_mod_init>:
 be0:	adrp	x0, 0 <grub_mod_init-0xbe0>
 be4:	ldr	x0, [x0]
 be8:	b	0 <grub_md_register>
 bec:	nop
	...

0000000000000bf8 <grub_mod_fini>:
 bf8:	adrp	x0, 0 <grub_mod_init-0xbe0>
 bfc:	ldr	x0, [x0]
 c00:	b	0 <grub_md_unregister>
 c04:	nop
	...
