
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sort_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004026d8 <.init>:
  4026d8:	stp	x29, x30, [sp, #-16]!
  4026dc:	mov	x29, sp
  4026e0:	bl	402ea0 <ferror@plt+0x60>
  4026e4:	ldp	x29, x30, [sp], #16
  4026e8:	ret

Disassembly of section .plt:

00000000004026f0 <mbrtowc@plt-0x20>:
  4026f0:	stp	x16, x30, [sp, #-16]!
  4026f4:	adrp	x16, 427000 <_obstack_memory_used@@Base+0x15a28>
  4026f8:	ldr	x17, [x16, #4088]
  4026fc:	add	x16, x16, #0xff8
  402700:	br	x17
  402704:	nop
  402708:	nop
  40270c:	nop

0000000000402710 <mbrtowc@plt>:
  402710:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16]
  402718:	add	x16, x16, #0x0
  40271c:	br	x17

0000000000402720 <memcpy@plt>:
  402720:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #8]
  402728:	add	x16, x16, #0x8
  40272c:	br	x17

0000000000402730 <memmove@plt>:
  402730:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #16]
  402738:	add	x16, x16, #0x10
  40273c:	br	x17

0000000000402740 <pthread_sigmask@plt>:
  402740:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #24]
  402748:	add	x16, x16, #0x18
  40274c:	br	x17

0000000000402750 <_exit@plt>:
  402750:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #32]
  402758:	add	x16, x16, #0x20
  40275c:	br	x17

0000000000402760 <fwrite_unlocked@plt>:
  402760:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #40]
  402768:	add	x16, x16, #0x28
  40276c:	br	x17

0000000000402770 <strtoul@plt>:
  402770:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #48]
  402778:	add	x16, x16, #0x30
  40277c:	br	x17

0000000000402780 <strlen@plt>:
  402780:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #56]
  402788:	add	x16, x16, #0x38
  40278c:	br	x17

0000000000402790 <exit@plt>:
  402790:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #64]
  402798:	add	x16, x16, #0x40
  40279c:	br	x17

00000000004027a0 <raise@plt>:
  4027a0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #72]
  4027a8:	add	x16, x16, #0x48
  4027ac:	br	x17

00000000004027b0 <error@plt>:
  4027b0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #80]
  4027b8:	add	x16, x16, #0x50
  4027bc:	br	x17

00000000004027c0 <sysinfo@plt>:
  4027c0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #88]
  4027c8:	add	x16, x16, #0x58
  4027cc:	br	x17

00000000004027d0 <getuid@plt>:
  4027d0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #96]
  4027d8:	add	x16, x16, #0x60
  4027dc:	br	x17

00000000004027e0 <pipe@plt>:
  4027e0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #104]
  4027e8:	add	x16, x16, #0x68
  4027ec:	br	x17

00000000004027f0 <__cxa_atexit@plt>:
  4027f0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #112]
  4027f8:	add	x16, x16, #0x70
  4027fc:	br	x17

0000000000402800 <iswcntrl@plt>:
  402800:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #120]
  402808:	add	x16, x16, #0x78
  40280c:	br	x17

0000000000402810 <qsort@plt>:
  402810:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #128]
  402818:	add	x16, x16, #0x80
  40281c:	br	x17

0000000000402820 <setvbuf@plt>:
  402820:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #136]
  402828:	add	x16, x16, #0x88
  40282c:	br	x17

0000000000402830 <euidaccess@plt>:
  402830:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #144]
  402838:	add	x16, x16, #0x90
  40283c:	br	x17

0000000000402840 <fork@plt>:
  402840:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #152]
  402848:	add	x16, x16, #0x98
  40284c:	br	x17

0000000000402850 <lseek@plt>:
  402850:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #160]
  402858:	add	x16, x16, #0xa0
  40285c:	br	x17

0000000000402860 <__fpending@plt>:
  402860:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #168]
  402868:	add	x16, x16, #0xa8
  40286c:	br	x17

0000000000402870 <localeconv@plt>:
  402870:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #176]
  402878:	add	x16, x16, #0xb0
  40287c:	br	x17

0000000000402880 <fileno@plt>:
  402880:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #184]
  402888:	add	x16, x16, #0xb8
  40288c:	br	x17

0000000000402890 <signal@plt>:
  402890:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #192]
  402898:	add	x16, x16, #0xc0
  40289c:	br	x17

00000000004028a0 <fclose@plt>:
  4028a0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #200]
  4028a8:	add	x16, x16, #0xc8
  4028ac:	br	x17

00000000004028b0 <getpid@plt>:
  4028b0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #208]
  4028b8:	add	x16, x16, #0xd0
  4028bc:	br	x17

00000000004028c0 <nl_langinfo@plt>:
  4028c0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #216]
  4028c8:	add	x16, x16, #0xd8
  4028cc:	br	x17

00000000004028d0 <fopen@plt>:
  4028d0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #224]
  4028d8:	add	x16, x16, #0xe0
  4028dc:	br	x17

00000000004028e0 <malloc@plt>:
  4028e0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #232]
  4028e8:	add	x16, x16, #0xe8
  4028ec:	br	x17

00000000004028f0 <wcwidth@plt>:
  4028f0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #240]
  4028f8:	add	x16, x16, #0xf0
  4028fc:	br	x17

0000000000402900 <open@plt>:
  402900:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #248]
  402908:	add	x16, x16, #0xf8
  40290c:	br	x17

0000000000402910 <getppid@plt>:
  402910:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #256]
  402918:	add	x16, x16, #0x100
  40291c:	br	x17

0000000000402920 <sigemptyset@plt>:
  402920:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #264]
  402928:	add	x16, x16, #0x108
  40292c:	br	x17

0000000000402930 <pthread_cond_signal@plt>:
  402930:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #272]
  402938:	add	x16, x16, #0x110
  40293c:	br	x17

0000000000402940 <strncmp@plt>:
  402940:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #280]
  402948:	add	x16, x16, #0x118
  40294c:	br	x17

0000000000402950 <bindtextdomain@plt>:
  402950:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #288]
  402958:	add	x16, x16, #0x120
  40295c:	br	x17

0000000000402960 <__libc_start_main@plt>:
  402960:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #296]
  402968:	add	x16, x16, #0x128
  40296c:	br	x17

0000000000402970 <fgetc@plt>:
  402970:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #304]
  402978:	add	x16, x16, #0x130
  40297c:	br	x17

0000000000402980 <__printf_chk@plt>:
  402980:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #312]
  402988:	add	x16, x16, #0x138
  40298c:	br	x17

0000000000402990 <memset@plt>:
  402990:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #320]
  402998:	add	x16, x16, #0x140
  40299c:	br	x17

00000000004029a0 <fdopen@plt>:
  4029a0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #328]
  4029a8:	add	x16, x16, #0x148
  4029ac:	br	x17

00000000004029b0 <gettimeofday@plt>:
  4029b0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #336]
  4029b8:	add	x16, x16, #0x150
  4029bc:	br	x17

00000000004029c0 <__strtoul_internal@plt>:
  4029c0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #344]
  4029c8:	add	x16, x16, #0x158
  4029cc:	br	x17

00000000004029d0 <calloc@plt>:
  4029d0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #352]
  4029d8:	add	x16, x16, #0x160
  4029dc:	br	x17

00000000004029e0 <realloc@plt>:
  4029e0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #360]
  4029e8:	add	x16, x16, #0x168
  4029ec:	br	x17

00000000004029f0 <__ctype_toupper_loc@plt>:
  4029f0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #368]
  4029f8:	add	x16, x16, #0x170
  4029fc:	br	x17

0000000000402a00 <pthread_mutex_init@plt>:
  402a00:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #376]
  402a08:	add	x16, x16, #0x178
  402a0c:	br	x17

0000000000402a10 <close@plt>:
  402a10:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #384]
  402a18:	add	x16, x16, #0x180
  402a1c:	br	x17

0000000000402a20 <sigaction@plt>:
  402a20:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #392]
  402a28:	add	x16, x16, #0x188
  402a2c:	br	x17

0000000000402a30 <strrchr@plt>:
  402a30:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #400]
  402a38:	add	x16, x16, #0x190
  402a3c:	br	x17

0000000000402a40 <pthread_create@plt>:
  402a40:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #408]
  402a48:	add	x16, x16, #0x198
  402a4c:	br	x17

0000000000402a50 <__gmon_start__@plt>:
  402a50:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #416]
  402a58:	add	x16, x16, #0x1a0
  402a5c:	br	x17

0000000000402a60 <write@plt>:
  402a60:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #424]
  402a68:	add	x16, x16, #0x1a8
  402a6c:	br	x17

0000000000402a70 <pthread_join@plt>:
  402a70:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #432]
  402a78:	add	x16, x16, #0x1b0
  402a7c:	br	x17

0000000000402a80 <abort@plt>:
  402a80:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #440]
  402a88:	add	x16, x16, #0x1b8
  402a8c:	br	x17

0000000000402a90 <mkostemp@plt>:
  402a90:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #448]
  402a98:	add	x16, x16, #0x1c0
  402a9c:	br	x17

0000000000402aa0 <sched_getaffinity@plt>:
  402aa0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #456]
  402aa8:	add	x16, x16, #0x1c8
  402aac:	br	x17

0000000000402ab0 <posix_fadvise@plt>:
  402ab0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #464]
  402ab8:	add	x16, x16, #0x1d0
  402abc:	br	x17

0000000000402ac0 <mbsinit@plt>:
  402ac0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #472]
  402ac8:	add	x16, x16, #0x1d8
  402acc:	br	x17

0000000000402ad0 <__overflow@plt>:
  402ad0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #480]
  402ad8:	add	x16, x16, #0x1e0
  402adc:	br	x17

0000000000402ae0 <pipe2@plt>:
  402ae0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #488]
  402ae8:	add	x16, x16, #0x1e8
  402aec:	br	x17

0000000000402af0 <fread_unlocked@plt>:
  402af0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #496]
  402af8:	add	x16, x16, #0x1f0
  402afc:	br	x17

0000000000402b00 <memcmp@plt>:
  402b00:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #504]
  402b08:	add	x16, x16, #0x1f8
  402b0c:	br	x17

0000000000402b10 <textdomain@plt>:
  402b10:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #512]
  402b18:	add	x16, x16, #0x200
  402b1c:	br	x17

0000000000402b20 <getopt_long@plt>:
  402b20:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #520]
  402b28:	add	x16, x16, #0x208
  402b2c:	br	x17

0000000000402b30 <__fprintf_chk@plt>:
  402b30:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #528]
  402b38:	add	x16, x16, #0x210
  402b3c:	br	x17

0000000000402b40 <sigismember@plt>:
  402b40:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #536]
  402b48:	add	x16, x16, #0x218
  402b4c:	br	x17

0000000000402b50 <strcmp@plt>:
  402b50:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #544]
  402b58:	add	x16, x16, #0x220
  402b5c:	br	x17

0000000000402b60 <__ctype_b_loc@plt>:
  402b60:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #552]
  402b68:	add	x16, x16, #0x228
  402b6c:	br	x17

0000000000402b70 <strtol@plt>:
  402b70:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #560]
  402b78:	add	x16, x16, #0x230
  402b7c:	br	x17

0000000000402b80 <fseeko@plt>:
  402b80:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #568]
  402b88:	add	x16, x16, #0x238
  402b8c:	br	x17

0000000000402b90 <strtold@plt>:
  402b90:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #576]
  402b98:	add	x16, x16, #0x240
  402b9c:	br	x17

0000000000402ba0 <free@plt>:
  402ba0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #584]
  402ba8:	add	x16, x16, #0x248
  402bac:	br	x17

0000000000402bb0 <__ctype_get_mb_cur_max@plt>:
  402bb0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #592]
  402bb8:	add	x16, x16, #0x250
  402bbc:	br	x17

0000000000402bc0 <getgid@plt>:
  402bc0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #600]
  402bc8:	add	x16, x16, #0x258
  402bcc:	br	x17

0000000000402bd0 <pthread_cond_wait@plt>:
  402bd0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #608]
  402bd8:	add	x16, x16, #0x260
  402bdc:	br	x17

0000000000402be0 <nanosleep@plt>:
  402be0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #616]
  402be8:	add	x16, x16, #0x268
  402bec:	br	x17

0000000000402bf0 <__stpcpy_chk@plt>:
  402bf0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #624]
  402bf8:	add	x16, x16, #0x270
  402bfc:	br	x17

0000000000402c00 <strchr@plt>:
  402c00:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #632]
  402c08:	add	x16, x16, #0x278
  402c0c:	br	x17

0000000000402c10 <fwrite@plt>:
  402c10:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #640]
  402c18:	add	x16, x16, #0x280
  402c1c:	br	x17

0000000000402c20 <__read_chk@plt>:
  402c20:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #648]
  402c28:	add	x16, x16, #0x288
  402c2c:	br	x17

0000000000402c30 <fflush_unlocked@plt>:
  402c30:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #656]
  402c38:	add	x16, x16, #0x290
  402c3c:	br	x17

0000000000402c40 <__sched_cpucount@plt>:
  402c40:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #664]
  402c48:	add	x16, x16, #0x298
  402c4c:	br	x17

0000000000402c50 <fcntl@plt>:
  402c50:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #672]
  402c58:	add	x16, x16, #0x2a0
  402c5c:	br	x17

0000000000402c60 <strxfrm@plt>:
  402c60:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #680]
  402c68:	add	x16, x16, #0x2a8
  402c6c:	br	x17

0000000000402c70 <dcngettext@plt>:
  402c70:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #688]
  402c78:	add	x16, x16, #0x2b0
  402c7c:	br	x17

0000000000402c80 <fflush@plt>:
  402c80:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #696]
  402c88:	add	x16, x16, #0x2b8
  402c8c:	br	x17

0000000000402c90 <strcpy@plt>:
  402c90:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #704]
  402c98:	add	x16, x16, #0x2c0
  402c9c:	br	x17

0000000000402ca0 <pthread_cond_init@plt>:
  402ca0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #712]
  402ca8:	add	x16, x16, #0x2c8
  402cac:	br	x17

0000000000402cb0 <getrlimit@plt>:
  402cb0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #720]
  402cb8:	add	x16, x16, #0x2d0
  402cbc:	br	x17

0000000000402cc0 <clearerr_unlocked@plt>:
  402cc0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #728]
  402cc8:	add	x16, x16, #0x2d8
  402ccc:	br	x17

0000000000402cd0 <__explicit_bzero_chk@plt>:
  402cd0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #736]
  402cd8:	add	x16, x16, #0x2e0
  402cdc:	br	x17

0000000000402ce0 <memchr@plt>:
  402ce0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #744]
  402ce8:	add	x16, x16, #0x2e8
  402cec:	br	x17

0000000000402cf0 <mkstemp@plt>:
  402cf0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #752]
  402cf8:	add	x16, x16, #0x2f0
  402cfc:	br	x17

0000000000402d00 <sysconf@plt>:
  402d00:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #760]
  402d08:	add	x16, x16, #0x2f8
  402d0c:	br	x17

0000000000402d10 <__fxstat@plt>:
  402d10:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #768]
  402d18:	add	x16, x16, #0x300
  402d1c:	br	x17

0000000000402d20 <dcgettext@plt>:
  402d20:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #776]
  402d28:	add	x16, x16, #0x308
  402d2c:	br	x17

0000000000402d30 <fputs_unlocked@plt>:
  402d30:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #784]
  402d38:	add	x16, x16, #0x310
  402d3c:	br	x17

0000000000402d40 <strcoll@plt>:
  402d40:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #792]
  402d48:	add	x16, x16, #0x318
  402d4c:	br	x17

0000000000402d50 <__freading@plt>:
  402d50:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #800]
  402d58:	add	x16, x16, #0x320
  402d5c:	br	x17

0000000000402d60 <ftruncate@plt>:
  402d60:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #808]
  402d68:	add	x16, x16, #0x328
  402d6c:	br	x17

0000000000402d70 <dup2@plt>:
  402d70:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #816]
  402d78:	add	x16, x16, #0x330
  402d7c:	br	x17

0000000000402d80 <sigaddset@plt>:
  402d80:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #824]
  402d88:	add	x16, x16, #0x338
  402d8c:	br	x17

0000000000402d90 <iswprint@plt>:
  402d90:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #832]
  402d98:	add	x16, x16, #0x340
  402d9c:	br	x17

0000000000402da0 <__assert_fail@plt>:
  402da0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #840]
  402da8:	add	x16, x16, #0x348
  402dac:	br	x17

0000000000402db0 <__errno_location@plt>:
  402db0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #848]
  402db8:	add	x16, x16, #0x350
  402dbc:	br	x17

0000000000402dc0 <execlp@plt>:
  402dc0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #856]
  402dc8:	add	x16, x16, #0x358
  402dcc:	br	x17

0000000000402dd0 <getenv@plt>:
  402dd0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #864]
  402dd8:	add	x16, x16, #0x360
  402ddc:	br	x17

0000000000402de0 <__xstat@plt>:
  402de0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #872]
  402de8:	add	x16, x16, #0x368
  402dec:	br	x17

0000000000402df0 <pthread_mutex_lock@plt>:
  402df0:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #880]
  402df8:	add	x16, x16, #0x370
  402dfc:	br	x17

0000000000402e00 <pthread_mutex_unlock@plt>:
  402e00:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #888]
  402e08:	add	x16, x16, #0x378
  402e0c:	br	x17

0000000000402e10 <waitpid@plt>:
  402e10:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #896]
  402e18:	add	x16, x16, #0x380
  402e1c:	br	x17

0000000000402e20 <unlink@plt>:
  402e20:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #904]
  402e28:	add	x16, x16, #0x388
  402e2c:	br	x17

0000000000402e30 <setlocale@plt>:
  402e30:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #912]
  402e38:	add	x16, x16, #0x390
  402e3c:	br	x17

0000000000402e40 <ferror@plt>:
  402e40:	adrp	x16, 428000 <mbrtowc@GLIBC_2.17>
  402e44:	ldr	x17, [x16, #920]
  402e48:	add	x16, x16, #0x398
  402e4c:	br	x17

Disassembly of section .text:

0000000000402e50 <_obstack_begin@@Base-0xe564>:
  402e50:	mov	x29, #0x0                   	// #0
  402e54:	mov	x30, #0x0                   	// #0
  402e58:	mov	x5, x0
  402e5c:	ldr	x1, [sp]
  402e60:	add	x2, sp, #0x8
  402e64:	mov	x6, sp
  402e68:	movz	x0, #0x0, lsl #48
  402e6c:	movk	x0, #0x0, lsl #32
  402e70:	movk	x0, #0x40, lsl #16
  402e74:	movk	x0, #0x75c0
  402e78:	movz	x3, #0x0, lsl #48
  402e7c:	movk	x3, #0x0, lsl #32
  402e80:	movk	x3, #0x41, lsl #16
  402e84:	movk	x3, #0x1f00
  402e88:	movz	x4, #0x0, lsl #48
  402e8c:	movk	x4, #0x0, lsl #32
  402e90:	movk	x4, #0x41, lsl #16
  402e94:	movk	x4, #0x1f80
  402e98:	bl	402960 <__libc_start_main@plt>
  402e9c:	bl	402a80 <abort@plt>
  402ea0:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x15a28>
  402ea4:	ldr	x0, [x0, #4064]
  402ea8:	cbz	x0, 402eb0 <ferror@plt+0x70>
  402eac:	b	402a50 <__gmon_start__@plt>
  402eb0:	ret
  402eb4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  402eb8:	add	x0, x0, #0x528
  402ebc:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  402ec0:	add	x1, x1, #0x528
  402ec4:	cmp	x0, x1
  402ec8:	b.eq	402efc <ferror@plt+0xbc>  // b.none
  402ecc:	stp	x29, x30, [sp, #-32]!
  402ed0:	mov	x29, sp
  402ed4:	adrp	x0, 411000 <ferror@plt+0xe1c0>
  402ed8:	ldr	x0, [x0, #4016]
  402edc:	str	x0, [sp, #24]
  402ee0:	mov	x1, x0
  402ee4:	cbz	x1, 402ef4 <ferror@plt+0xb4>
  402ee8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  402eec:	add	x0, x0, #0x528
  402ef0:	blr	x1
  402ef4:	ldp	x29, x30, [sp], #32
  402ef8:	ret
  402efc:	ret
  402f00:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  402f04:	add	x0, x0, #0x528
  402f08:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  402f0c:	add	x1, x1, #0x528
  402f10:	sub	x0, x0, x1
  402f14:	lsr	x1, x0, #63
  402f18:	add	x0, x1, x0, asr #3
  402f1c:	cmp	xzr, x0, asr #1
  402f20:	b.eq	402f58 <ferror@plt+0x118>  // b.none
  402f24:	stp	x29, x30, [sp, #-32]!
  402f28:	mov	x29, sp
  402f2c:	asr	x1, x0, #1
  402f30:	adrp	x0, 411000 <ferror@plt+0xe1c0>
  402f34:	ldr	x0, [x0, #4024]
  402f38:	str	x0, [sp, #24]
  402f3c:	mov	x2, x0
  402f40:	cbz	x2, 402f50 <ferror@plt+0x110>
  402f44:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  402f48:	add	x0, x0, #0x528
  402f4c:	blr	x2
  402f50:	ldp	x29, x30, [sp], #32
  402f54:	ret
  402f58:	ret
  402f5c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  402f60:	ldrb	w0, [x0, #1376]
  402f64:	cbnz	w0, 402f88 <ferror@plt+0x148>
  402f68:	stp	x29, x30, [sp, #-16]!
  402f6c:	mov	x29, sp
  402f70:	bl	402eb4 <ferror@plt+0x74>
  402f74:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  402f78:	mov	w1, #0x1                   	// #1
  402f7c:	strb	w1, [x0, #1376]
  402f80:	ldp	x29, x30, [sp], #16
  402f84:	ret
  402f88:	ret
  402f8c:	stp	x29, x30, [sp, #-16]!
  402f90:	mov	x29, sp
  402f94:	bl	402f00 <ferror@plt+0xc0>
  402f98:	ldp	x29, x30, [sp], #16
  402f9c:	ret
  402fa0:	ldrsw	x0, [x0, #8]
  402fa4:	udiv	x2, x0, x1
  402fa8:	msub	x0, x2, x1, x0
  402fac:	ret
  402fb0:	ldr	w2, [x0, #8]
  402fb4:	ldr	w0, [x1, #8]
  402fb8:	cmp	w2, w0
  402fbc:	cset	w0, eq  // eq = none
  402fc0:	ret
  402fc4:	ldr	x2, [x0]
  402fc8:	ldr	x0, [x0, #8]
  402fcc:	sub	x0, x0, #0x1
  402fd0:	add	x0, x2, x0
  402fd4:	ldr	x6, [x1]
  402fd8:	ldr	x7, [x1, #8]
  402fdc:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  402fe0:	ldr	w4, [x3, #944]
  402fe4:	cmp	w4, #0x100
  402fe8:	b.eq	403028 <ferror@plt+0x1e8>  // b.none
  402fec:	cmp	x2, x0
  402ff0:	b.cs	403088 <ferror@plt+0x248>  // b.hs, b.nlast
  402ff4:	sub	x5, x6, #0x1
  402ff8:	cbnz	x6, 40306c <ferror@plt+0x22c>
  402ffc:	ldrb	w1, [x1, #48]
  403000:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  403004:	add	x3, x3, #0x568
  403008:	cbz	w1, 403088 <ferror@plt+0x248>
  40300c:	ldrb	w1, [x2]
  403010:	ldrb	w1, [x3, w1, sxtw]
  403014:	cbz	w1, 403088 <ferror@plt+0x248>
  403018:	add	x2, x2, #0x1
  40301c:	cmp	x0, x2
  403020:	b.hi	40300c <ferror@plt+0x1cc>  // b.pmore
  403024:	b	403088 <ferror@plt+0x248>
  403028:	cmp	x2, x0
  40302c:	b.cs	403088 <ferror@plt+0x248>  // b.hs, b.nlast
  403030:	sub	x5, x6, #0x1
  403034:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  403038:	add	x3, x3, #0x568
  40303c:	cbnz	x6, 4030d4 <ferror@plt+0x294>
  403040:	b	402ffc <ferror@plt+0x1bc>
  403044:	cmp	x0, x2
  403048:	b.ls	403088 <ferror@plt+0x248>  // b.plast
  40304c:	add	x2, x2, #0x1
  403050:	cmp	x0, x2
  403054:	b.ls	403088 <ferror@plt+0x248>  // b.plast
  403058:	sub	x5, x5, #0x1
  40305c:	cmn	x5, #0x1
  403060:	b.eq	402ffc <ferror@plt+0x1bc>  // b.none
  403064:	cmp	x0, x2
  403068:	b.ls	403088 <ferror@plt+0x248>  // b.plast
  40306c:	ldrb	w3, [x2]
  403070:	cmp	w4, w3
  403074:	b.eq	403044 <ferror@plt+0x204>  // b.none
  403078:	add	x2, x2, #0x1
  40307c:	cmp	x0, x2
  403080:	b.ne	40306c <ferror@plt+0x22c>  // b.any
  403084:	mov	x2, x0
  403088:	add	x2, x2, x7
  40308c:	cmp	x2, x0
  403090:	csel	x0, x2, x0, ls  // ls = plast
  403094:	ret
  403098:	cmp	x0, x2
  40309c:	b.ls	403088 <ferror@plt+0x248>  // b.plast
  4030a0:	ldrb	w4, [x2]
  4030a4:	ldrb	w4, [x3, w4, sxtw]
  4030a8:	cbnz	w4, 4030c0 <ferror@plt+0x280>
  4030ac:	add	x2, x2, #0x1
  4030b0:	cmp	x0, x2
  4030b4:	b.ne	4030a0 <ferror@plt+0x260>  // b.any
  4030b8:	mov	x2, x0
  4030bc:	b	403088 <ferror@plt+0x248>
  4030c0:	cmp	x0, x2
  4030c4:	b.ls	403088 <ferror@plt+0x248>  // b.plast
  4030c8:	sub	x4, x5, #0x1
  4030cc:	cbz	x5, 402ffc <ferror@plt+0x1bc>
  4030d0:	mov	x5, x4
  4030d4:	ldrb	w4, [x2]
  4030d8:	ldrb	w4, [x3, w4, sxtw]
  4030dc:	cbz	w4, 403098 <ferror@plt+0x258>
  4030e0:	add	x2, x2, #0x1
  4030e4:	cmp	x0, x2
  4030e8:	b.hi	4030d4 <ferror@plt+0x294>  // b.pmore
  4030ec:	b	403088 <ferror@plt+0x248>
  4030f0:	mov	x2, x0
  4030f4:	ldr	x0, [x0]
  4030f8:	ldr	x2, [x2, #8]
  4030fc:	sub	x2, x2, #0x1
  403100:	add	x2, x0, x2
  403104:	ldr	x7, [x1, #16]
  403108:	ldr	x6, [x1, #24]
  40310c:	cmp	x6, #0x0
  403110:	cinc	x7, x7, eq  // eq = none
  403114:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  403118:	ldr	w4, [x3, #944]
  40311c:	cmp	w4, #0x100
  403120:	b.eq	403138 <ferror@plt+0x2f8>  // b.none
  403124:	cmp	x0, x2
  403128:	b.cs	4031a0 <ferror@plt+0x360>  // b.hs, b.nlast
  40312c:	sub	x5, x7, #0x1
  403130:	cbnz	x7, 403184 <ferror@plt+0x344>
  403134:	b	4031a0 <ferror@plt+0x360>
  403138:	cmp	x0, x2
  40313c:	b.cs	4031a0 <ferror@plt+0x360>  // b.hs, b.nlast
  403140:	sub	x5, x7, #0x1
  403144:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  403148:	add	x3, x3, #0x568
  40314c:	cbnz	x7, 403224 <ferror@plt+0x3e4>
  403150:	b	4031a0 <ferror@plt+0x360>
  403154:	cmp	x2, x0
  403158:	b.ls	4031a0 <ferror@plt+0x360>  // b.plast
  40315c:	orr	x3, x6, x5
  403160:	cbz	x3, 4031e4 <ferror@plt+0x3a4>
  403164:	add	x0, x0, #0x1
  403168:	cmp	x2, x0
  40316c:	b.ls	4031a0 <ferror@plt+0x360>  // b.plast
  403170:	sub	x5, x5, #0x1
  403174:	cmn	x5, #0x1
  403178:	b.eq	4031a0 <ferror@plt+0x360>  // b.none
  40317c:	cmp	x2, x0
  403180:	b.ls	4031a0 <ferror@plt+0x360>  // b.plast
  403184:	ldrb	w3, [x0]
  403188:	cmp	w4, w3
  40318c:	b.eq	403154 <ferror@plt+0x314>  // b.none
  403190:	add	x0, x0, #0x1
  403194:	cmp	x2, x0
  403198:	b.ne	403184 <ferror@plt+0x344>  // b.any
  40319c:	mov	x0, x2
  4031a0:	cbz	x6, 4031e4 <ferror@plt+0x3a4>
  4031a4:	ldrb	w1, [x1, #49]
  4031a8:	cbz	w1, 4031d8 <ferror@plt+0x398>
  4031ac:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  4031b0:	add	x3, x3, #0x568
  4031b4:	cmp	x0, x2
  4031b8:	b.cs	4031d8 <ferror@plt+0x398>  // b.hs, b.nlast
  4031bc:	ldrb	w1, [x0]
  4031c0:	ldrb	w1, [x3, w1, sxtw]
  4031c4:	cbz	w1, 4031d8 <ferror@plt+0x398>
  4031c8:	add	x0, x0, #0x1
  4031cc:	cmp	x2, x0
  4031d0:	b.ne	4031bc <ferror@plt+0x37c>  // b.any
  4031d4:	mov	x0, x2
  4031d8:	add	x0, x0, x6
  4031dc:	cmp	x0, x2
  4031e0:	csel	x0, x0, x2, ls  // ls = plast
  4031e4:	ret
  4031e8:	cmp	x2, x0
  4031ec:	b.ls	4031a0 <ferror@plt+0x360>  // b.plast
  4031f0:	ldrb	w4, [x0]
  4031f4:	ldrb	w4, [x3, w4, sxtw]
  4031f8:	cbnz	w4, 403210 <ferror@plt+0x3d0>
  4031fc:	add	x0, x0, #0x1
  403200:	cmp	x2, x0
  403204:	b.ne	4031f0 <ferror@plt+0x3b0>  // b.any
  403208:	mov	x0, x2
  40320c:	b	4031a0 <ferror@plt+0x360>
  403210:	cmp	x2, x0
  403214:	b.ls	4031a0 <ferror@plt+0x360>  // b.plast
  403218:	sub	x4, x5, #0x1
  40321c:	cbz	x5, 4031a0 <ferror@plt+0x360>
  403220:	mov	x5, x4
  403224:	ldrb	w4, [x0]
  403228:	ldrb	w4, [x3, w4, sxtw]
  40322c:	cbz	w4, 4031e8 <ferror@plt+0x3a8>
  403230:	add	x0, x0, #0x1
  403234:	cmp	x2, x0
  403238:	b.hi	403224 <ferror@plt+0x3e4>  // b.pmore
  40323c:	b	4031a0 <ferror@plt+0x360>
  403240:	mov	x8, x0
  403244:	ldr	x3, [x0]
  403248:	mov	x1, x3
  40324c:	ldrb	w2, [x1], #1
  403250:	sub	w0, w2, #0x30
  403254:	cmp	w0, #0x9
  403258:	b.hi	4032e0 <ferror@plt+0x4a0>  // b.pmore
  40325c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403260:	ldr	w5, [x0, #1640]
  403264:	mov	w0, #0x0                   	// #0
  403268:	mov	w7, #0x0                   	// #0
  40326c:	mov	w9, #0x1                   	// #1
  403270:	b	403288 <ferror@plt+0x448>
  403274:	mov	x1, x3
  403278:	ldrb	w2, [x1], #1
  40327c:	sub	w4, w2, #0x30
  403280:	cmp	w4, #0x9
  403284:	b.hi	4032b4 <ferror@plt+0x474>  // b.pmore
  403288:	cmp	w2, w0
  40328c:	csel	w0, w2, w0, hi  // hi = pmore
  403290:	and	w0, w0, #0xff
  403294:	ldrb	w2, [x3, #1]
  403298:	add	x3, x3, #0x2
  40329c:	mov	w6, w9
  4032a0:	cmp	w2, w5
  4032a4:	b.eq	403274 <ferror@plt+0x434>  // b.none
  4032a8:	mov	x3, x1
  4032ac:	mov	w6, w7
  4032b0:	b	403274 <ferror@plt+0x434>
  4032b4:	cbnz	w6, 4032d4 <ferror@plt+0x494>
  4032b8:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  4032bc:	ldr	w3, [x3, #1644]
  4032c0:	cmp	w2, w3
  4032c4:	b.eq	4032e8 <ferror@plt+0x4a8>  // b.none
  4032c8:	sub	x1, x1, #0x1
  4032cc:	str	x1, [x8]
  4032d0:	ret
  4032d4:	sub	x3, x3, #0x1
  4032d8:	str	x3, [x8]
  4032dc:	b	4032d0 <ferror@plt+0x490>
  4032e0:	mov	w0, #0x0                   	// #0
  4032e4:	b	4032b8 <ferror@plt+0x478>
  4032e8:	ldrb	w2, [x1], #1
  4032ec:	sub	w3, w2, #0x30
  4032f0:	cmp	w3, #0x9
  4032f4:	b.hi	4032c8 <ferror@plt+0x488>  // b.pmore
  4032f8:	cmp	w2, w0
  4032fc:	csel	w0, w2, w0, hi  // hi = pmore
  403300:	and	w0, w0, #0xff
  403304:	ldrb	w2, [x1], #1
  403308:	sub	w3, w2, #0x30
  40330c:	cmp	w3, #0x9
  403310:	b.ls	4032f8 <ferror@plt+0x4b8>  // b.plast
  403314:	b	4032c8 <ferror@plt+0x488>
  403318:	stp	x29, x30, [sp, #-48]!
  40331c:	mov	x29, sp
  403320:	str	x19, [sp, #16]
  403324:	ldrb	w19, [x0]
  403328:	cmp	w19, #0x2d
  40332c:	cinc	x0, x0, eq  // eq = none
  403330:	str	x0, [sp, #40]
  403334:	add	x0, sp, #0x28
  403338:	bl	403240 <ferror@plt+0x400>
  40333c:	and	w0, w0, #0xff
  403340:	cmp	w0, #0x30
  403344:	b.ls	403370 <ferror@plt+0x530>  // b.plast
  403348:	ldr	x0, [sp, #40]
  40334c:	ldrb	w1, [x0]
  403350:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  403354:	add	x0, x0, #0xde8
  403358:	ldrb	w0, [x0, w1, sxtw]
  40335c:	cmp	w19, #0x2d
  403360:	cneg	w0, w0, eq  // eq = none
  403364:	ldr	x19, [sp, #16]
  403368:	ldp	x29, x30, [sp], #48
  40336c:	ret
  403370:	mov	w0, #0x0                   	// #0
  403374:	b	403364 <ferror@plt+0x524>
  403378:	ldrb	w3, [x0]
  40337c:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x16a28>
  403380:	add	x2, x2, #0x568
  403384:	ldrb	w2, [x2, w3, sxtw]
  403388:	cbz	w2, 4033a0 <ferror@plt+0x560>
  40338c:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  403390:	add	x3, x3, #0x568
  403394:	ldrb	w2, [x0, #1]!
  403398:	ldrb	w2, [x3, w2, sxtw]
  40339c:	cbnz	w2, 403394 <ferror@plt+0x554>
  4033a0:	mov	x9, #0xc                   	// #12
  4033a4:	mov	x10, #0x0                   	// #0
  4033a8:	adrp	x8, 428000 <_obstack_memory_used@@Base+0x16a28>
  4033ac:	add	x8, x8, #0x3b0
  4033b0:	add	x8, x8, #0x8
  4033b4:	adrp	x6, 428000 <_obstack_memory_used@@Base+0x16a28>
  4033b8:	add	x6, x6, #0x568
  4033bc:	add	x6, x6, #0x108
  4033c0:	b	4033e0 <ferror@plt+0x5a0>
  4033c4:	mov	x3, x0
  4033c8:	b	40341c <ferror@plt+0x5dc>
  4033cc:	add	x10, x7, #0x1
  4033d0:	b	4033d8 <ferror@plt+0x598>
  4033d4:	mov	x9, x7
  4033d8:	cmp	x10, x9
  4033dc:	b.cs	403438 <ferror@plt+0x5f8>  // b.hs, b.nlast
  4033e0:	add	x7, x10, x9
  4033e4:	lsr	x7, x7, #1
  4033e8:	lsl	x2, x7, #4
  4033ec:	ldr	x5, [x8, x2]
  4033f0:	ldrb	w2, [x5]
  4033f4:	cbz	w2, 4033c4 <ferror@plt+0x584>
  4033f8:	mov	x3, x0
  4033fc:	ldrb	w4, [x3]
  403400:	ldrb	w4, [x6, w4, sxtw]
  403404:	cmp	w4, w2
  403408:	b.cc	4033d4 <ferror@plt+0x594>  // b.lo, b.ul, b.last
  40340c:	b.hi	4033cc <ferror@plt+0x58c>  // b.pmore
  403410:	add	x3, x3, #0x1
  403414:	ldrb	w2, [x5, #1]!
  403418:	cbnz	w2, 4033fc <ferror@plt+0x5bc>
  40341c:	cbz	x1, 403424 <ferror@plt+0x5e4>
  403420:	str	x3, [x1]
  403424:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403428:	add	x0, x0, #0x3b0
  40342c:	add	x7, x0, x7, lsl #4
  403430:	ldr	w0, [x7, #16]
  403434:	ret
  403438:	mov	w0, #0x0                   	// #0
  40343c:	b	403434 <ferror@plt+0x5f4>
  403440:	ldr	x1, [x0, #32]
  403444:	cbz	x1, 403454 <ferror@plt+0x614>
  403448:	mov	w1, #0x0                   	// #0
  40344c:	and	w0, w1, #0x1
  403450:	ret
  403454:	ldr	x2, [x0, #40]
  403458:	cbnz	x2, 40344c <ferror@plt+0x60c>
  40345c:	ldrb	w2, [x0, #48]
  403460:	cbnz	w2, 40344c <ferror@plt+0x60c>
  403464:	ldrb	w2, [x0, #49]
  403468:	cbnz	w2, 40344c <ferror@plt+0x60c>
  40346c:	ldr	x2, [x0, #48]
  403470:	and	x2, x2, #0xffffffff0000
  403474:	and	x2, x2, #0xffffffff00ffffff
  403478:	cbnz	x2, 40344c <ferror@plt+0x60c>
  40347c:	ldrb	w2, [x0, #54]
  403480:	cbnz	w2, 40344c <ferror@plt+0x60c>
  403484:	ldrb	w2, [x0, #56]
  403488:	cbnz	w2, 40344c <ferror@plt+0x60c>
  40348c:	ldrb	w1, [x0, #51]
  403490:	eor	w1, w1, #0x1
  403494:	b	40344c <ferror@plt+0x60c>
  403498:	ldrh	w2, [x0, #48]
  40349c:	cbz	w2, 4034a8 <ferror@plt+0x668>
  4034a0:	mov	w2, #0x62                  	// #98
  4034a4:	strb	w2, [x1], #1
  4034a8:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x16a28>
  4034ac:	add	x2, x2, #0x568
  4034b0:	add	x2, x2, #0x208
  4034b4:	ldr	x3, [x0, #32]
  4034b8:	cmp	x3, x2
  4034bc:	b.eq	403564 <ferror@plt+0x724>  // b.none
  4034c0:	ldr	x3, [x0, #40]
  4034c4:	mov	x2, x1
  4034c8:	cbz	x3, 4034d4 <ferror@plt+0x694>
  4034cc:	mov	w1, #0x66                  	// #102
  4034d0:	strb	w1, [x2], #1
  4034d4:	ldrb	w1, [x0, #52]
  4034d8:	cbz	w1, 4034e4 <ferror@plt+0x6a4>
  4034dc:	mov	w1, #0x67                  	// #103
  4034e0:	strb	w1, [x2], #1
  4034e4:	ldrb	w1, [x0, #53]
  4034e8:	cbz	w1, 4034f4 <ferror@plt+0x6b4>
  4034ec:	mov	w1, #0x68                  	// #104
  4034f0:	strb	w1, [x2], #1
  4034f4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  4034f8:	add	x1, x1, #0x568
  4034fc:	add	x1, x1, #0x308
  403500:	ldr	x3, [x0, #32]
  403504:	cmp	x3, x1
  403508:	b.eq	403570 <ferror@plt+0x730>  // b.none
  40350c:	ldrb	w1, [x0, #54]
  403510:	cbz	w1, 40351c <ferror@plt+0x6dc>
  403514:	mov	w1, #0x4d                  	// #77
  403518:	strb	w1, [x2], #1
  40351c:	ldrb	w1, [x0, #50]
  403520:	cbz	w1, 40352c <ferror@plt+0x6ec>
  403524:	mov	w1, #0x6e                  	// #110
  403528:	strb	w1, [x2], #1
  40352c:	ldrb	w1, [x0, #51]
  403530:	cbz	w1, 40353c <ferror@plt+0x6fc>
  403534:	mov	w1, #0x52                  	// #82
  403538:	strb	w1, [x2], #1
  40353c:	ldrb	w1, [x0, #55]
  403540:	cbz	w1, 40354c <ferror@plt+0x70c>
  403544:	mov	w1, #0x72                  	// #114
  403548:	strb	w1, [x2], #1
  40354c:	ldrb	w0, [x0, #56]
  403550:	cbz	w0, 40355c <ferror@plt+0x71c>
  403554:	mov	w0, #0x56                  	// #86
  403558:	strb	w0, [x2], #1
  40355c:	strb	wzr, [x2]
  403560:	ret
  403564:	mov	w2, #0x64                  	// #100
  403568:	strb	w2, [x1], #1
  40356c:	b	4034c0 <ferror@plt+0x680>
  403570:	mov	w1, #0x69                  	// #105
  403574:	strb	w1, [x2], #1
  403578:	b	40350c <ferror@plt+0x6cc>
  40357c:	ldr	w3, [x0, #80]
  403580:	ldr	w2, [x1, #80]
  403584:	cmp	w3, w2
  403588:	b.eq	403594 <ferror@plt+0x754>  // b.none
  40358c:	cset	w0, cc  // cc = lo, ul, last
  403590:	ret
  403594:	ldr	x2, [x0, #40]
  403598:	ldr	x0, [x0, #48]
  40359c:	add	x2, x2, x0
  4035a0:	ldr	x0, [x1, #40]
  4035a4:	ldr	x1, [x1, #48]
  4035a8:	add	x0, x0, x1
  4035ac:	cmp	x2, x0
  4035b0:	cset	w0, cc  // cc = lo, ul, last
  4035b4:	b	403590 <ferror@plt+0x750>
  4035b8:	ldrb	w3, [x0]
  4035bc:	cbz	w3, 4036c0 <ferror@plt+0x880>
  4035c0:	adrp	x4, 428000 <_obstack_memory_used@@Base+0x16a28>
  4035c4:	add	x4, x4, #0x568
  4035c8:	add	x7, x4, #0x108
  4035cc:	add	x8, x4, #0x308
  4035d0:	mov	w5, #0x1                   	// #1
  4035d4:	and	w6, w2, #0xfffffffd
  4035d8:	sub	w2, w2, #0x1
  4035dc:	add	x4, x4, #0x208
  4035e0:	b	40360c <ferror@plt+0x7cc>
  4035e4:	cmp	w3, #0x56
  4035e8:	b.eq	4036b8 <ferror@plt+0x878>  // b.none
  4035ec:	b.ls	403640 <ferror@plt+0x800>  // b.plast
  4035f0:	cmp	w3, #0x62
  4035f4:	b.eq	403670 <ferror@plt+0x830>  // b.none
  4035f8:	cmp	w3, #0x64
  4035fc:	b.ne	4036c0 <ferror@plt+0x880>  // b.any
  403600:	str	x4, [x1, #32]
  403604:	ldrb	w3, [x0, #1]!
  403608:	cbz	w3, 4036c0 <ferror@plt+0x880>
  40360c:	cmp	w3, #0x66
  403610:	b.eq	403688 <ferror@plt+0x848>  // b.none
  403614:	b.ls	4035e4 <ferror@plt+0x7a4>  // b.plast
  403618:	cmp	w3, #0x69
  40361c:	b.eq	403698 <ferror@plt+0x858>  // b.none
  403620:	cmp	w3, #0x69
  403624:	b.ls	403658 <ferror@plt+0x818>  // b.plast
  403628:	cmp	w3, #0x6e
  40362c:	b.eq	4036b0 <ferror@plt+0x870>  // b.none
  403630:	cmp	w3, #0x72
  403634:	b.ne	4036c0 <ferror@plt+0x880>  // b.any
  403638:	strb	w5, [x1, #55]
  40363c:	b	403604 <ferror@plt+0x7c4>
  403640:	cmp	w3, #0x4d
  403644:	b.eq	4036a8 <ferror@plt+0x868>  // b.none
  403648:	cmp	w3, #0x52
  40364c:	b.ne	4036c0 <ferror@plt+0x880>  // b.any
  403650:	strb	w5, [x1, #51]
  403654:	b	403604 <ferror@plt+0x7c4>
  403658:	cmp	w3, #0x67
  40365c:	b.eq	403690 <ferror@plt+0x850>  // b.none
  403660:	cmp	w3, #0x68
  403664:	b.ne	4036c0 <ferror@plt+0x880>  // b.any
  403668:	strb	w5, [x1, #53]
  40366c:	b	403604 <ferror@plt+0x7c4>
  403670:	cbnz	w6, 403678 <ferror@plt+0x838>
  403674:	strb	w5, [x1, #48]
  403678:	cmp	w2, #0x1
  40367c:	b.hi	403604 <ferror@plt+0x7c4>  // b.pmore
  403680:	strb	w5, [x1, #49]
  403684:	b	403604 <ferror@plt+0x7c4>
  403688:	str	x7, [x1, #40]
  40368c:	b	403604 <ferror@plt+0x7c4>
  403690:	strb	w5, [x1, #52]
  403694:	b	403604 <ferror@plt+0x7c4>
  403698:	ldr	x3, [x1, #32]
  40369c:	cbnz	x3, 403604 <ferror@plt+0x7c4>
  4036a0:	str	x8, [x1, #32]
  4036a4:	b	403604 <ferror@plt+0x7c4>
  4036a8:	strb	w5, [x1, #54]
  4036ac:	b	403604 <ferror@plt+0x7c4>
  4036b0:	strb	w5, [x1, #50]
  4036b4:	b	403604 <ferror@plt+0x7c4>
  4036b8:	strb	w5, [x1, #56]
  4036bc:	b	403604 <ferror@plt+0x7c4>
  4036c0:	ret
  4036c4:	stp	x29, x30, [sp, #-16]!
  4036c8:	mov	x29, sp
  4036cc:	ldr	x1, [x1]
  4036d0:	ldr	x0, [x0]
  4036d4:	bl	402b50 <strcmp@plt>
  4036d8:	ldp	x29, x30, [sp], #16
  4036dc:	ret
  4036e0:	stp	x29, x30, [sp, #-32]!
  4036e4:	mov	x29, sp
  4036e8:	str	x19, [sp, #16]
  4036ec:	mov	x19, x0
  4036f0:	mov	w2, #0x5                   	// #5
  4036f4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4036f8:	add	x1, x1, #0x50
  4036fc:	mov	x0, #0x0                   	// #0
  403700:	bl	402d20 <dcgettext@plt>
  403704:	mov	x3, x19
  403708:	mov	x2, x0
  40370c:	mov	w1, #0x0                   	// #0
  403710:	mov	w0, #0x2                   	// #2
  403714:	bl	4027b0 <error@plt>
  403718:	stp	x29, x30, [sp, #-48]!
  40371c:	mov	x29, sp
  403720:	stp	x19, x20, [sp, #16]
  403724:	str	x21, [sp, #32]
  403728:	mov	x21, x0
  40372c:	mov	x20, x1
  403730:	mov	w2, #0x5                   	// #5
  403734:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  403738:	add	x1, x1, #0x70
  40373c:	mov	x0, #0x0                   	// #0
  403740:	bl	402d20 <dcgettext@plt>
  403744:	mov	x19, x0
  403748:	mov	w2, #0x5                   	// #5
  40374c:	mov	x1, x20
  403750:	mov	x0, #0x0                   	// #0
  403754:	bl	402d20 <dcgettext@plt>
  403758:	mov	x20, x0
  40375c:	mov	x0, x21
  403760:	bl	40e68c <ferror@plt+0xb84c>
  403764:	mov	x4, x0
  403768:	mov	x3, x20
  40376c:	mov	x2, x19
  403770:	mov	w1, #0x0                   	// #0
  403774:	mov	w0, #0x2                   	// #2
  403778:	bl	4027b0 <error@plt>
  40377c:	stp	x29, x30, [sp, #-32]!
  403780:	mov	x29, sp
  403784:	str	x19, [sp, #16]
  403788:	mov	x19, x0
  40378c:	add	x2, x0, #0x8
  403790:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  403794:	add	x1, x1, #0x568
  403798:	add	x1, x1, #0x408
  40379c:	mov	w0, #0x0                   	// #0
  4037a0:	bl	402740 <pthread_sigmask@plt>
  4037a4:	cmp	w0, #0x0
  4037a8:	cset	w0, eq  // eq = none
  4037ac:	strb	w0, [x19]
  4037b0:	ldr	x19, [sp, #16]
  4037b4:	ldp	x29, x30, [sp], #32
  4037b8:	ret
  4037bc:	ldrb	w1, [x0]
  4037c0:	cbnz	w1, 4037c8 <ferror@plt+0x988>
  4037c4:	ret
  4037c8:	stp	x29, x30, [sp, #-16]!
  4037cc:	mov	x29, sp
  4037d0:	mov	x2, #0x0                   	// #0
  4037d4:	add	x1, x0, #0x8
  4037d8:	mov	w0, #0x2                   	// #2
  4037dc:	bl	402740 <pthread_sigmask@plt>
  4037e0:	ldp	x29, x30, [sp], #16
  4037e4:	ret
  4037e8:	stp	x29, x30, [sp, #-32]!
  4037ec:	mov	x29, sp
  4037f0:	str	x19, [sp, #16]
  4037f4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4037f8:	add	x0, x0, #0x568
  4037fc:	ldr	x19, [x0, #1160]
  403800:	cbz	x19, 403814 <ferror@plt+0x9d4>
  403804:	add	x0, x19, #0xd
  403808:	bl	402e20 <unlink@plt>
  40380c:	ldr	x19, [x19]
  403810:	cbnz	x19, 403804 <ferror@plt+0x9c4>
  403814:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403818:	add	x0, x0, #0x568
  40381c:	str	xzr, [x0, #1160]
  403820:	ldr	x19, [sp, #16]
  403824:	ldp	x29, x30, [sp], #32
  403828:	ret
  40382c:	stp	x29, x30, [sp, #-160]!
  403830:	mov	x29, sp
  403834:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403838:	add	x0, x0, #0x568
  40383c:	ldr	x0, [x0, #1160]
  403840:	cbz	x0, 403858 <ferror@plt+0xa18>
  403844:	add	x0, sp, #0x18
  403848:	bl	40377c <ferror@plt+0x93c>
  40384c:	bl	4037e8 <ferror@plt+0x9a8>
  403850:	add	x0, sp, #0x18
  403854:	bl	4037bc <ferror@plt+0x97c>
  403858:	bl	409d40 <ferror@plt+0x6f00>
  40385c:	ldp	x29, x30, [sp], #160
  403860:	ret
  403864:	stp	x29, x30, [sp, #-32]!
  403868:	mov	x29, sp
  40386c:	str	x19, [sp, #16]
  403870:	mov	w19, w0
  403874:	bl	4037e8 <ferror@plt+0x9a8>
  403878:	mov	x1, #0x0                   	// #0
  40387c:	mov	w0, w19
  403880:	bl	402890 <signal@plt>
  403884:	mov	w0, w19
  403888:	bl	4027a0 <raise@plt>
  40388c:	ldr	x19, [sp, #16]
  403890:	ldp	x29, x30, [sp], #32
  403894:	ret
  403898:	stp	xzr, xzr, [x0]
  40389c:	stp	xzr, xzr, [x0, #16]
  4038a0:	stp	xzr, xzr, [x0, #32]
  4038a4:	stp	xzr, xzr, [x0, #48]
  4038a8:	str	xzr, [x0, #64]
  4038ac:	mov	x2, #0xffffffffffffffff    	// #-1
  4038b0:	str	x2, [x0, #16]
  4038b4:	ret
  4038b8:	stp	x29, x30, [sp, #-64]!
  4038bc:	mov	x29, sp
  4038c0:	stp	x19, x20, [sp, #16]
  4038c4:	str	x21, [sp, #32]
  4038c8:	mov	x21, x0
  4038cc:	mov	x20, x1
  4038d0:	mov	x19, x2
  4038d4:	adrp	x4, 412000 <_obstack_memory_used@@Base+0xa28>
  4038d8:	add	x4, x4, #0x900
  4038dc:	add	x3, sp, #0x30
  4038e0:	mov	w2, #0xa                   	// #10
  4038e4:	add	x1, sp, #0x38
  4038e8:	bl	410894 <ferror@plt+0xda54>
  4038ec:	cmp	w0, #0x3
  4038f0:	b.eq	403984 <ferror@plt+0xb44>  // b.none
  4038f4:	b.hi	40391c <ferror@plt+0xadc>  // b.pmore
  4038f8:	cmp	w0, #0x1
  4038fc:	b.eq	403984 <ferror@plt+0xb44>  // b.none
  403900:	tst	w0, #0xfffffffd
  403904:	b.eq	403978 <ferror@plt+0xb38>  // b.none
  403908:	ldr	x0, [sp, #56]
  40390c:	ldp	x19, x20, [sp, #16]
  403910:	ldr	x21, [sp, #32]
  403914:	ldp	x29, x30, [sp], #64
  403918:	ret
  40391c:	cmp	w0, #0x4
  403920:	b.ne	403908 <ferror@plt+0xac8>  // b.any
  403924:	mov	x0, x19
  403928:	cbz	x19, 40390c <ferror@plt+0xacc>
  40392c:	mov	w2, #0x5                   	// #5
  403930:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  403934:	add	x1, x1, #0x98
  403938:	mov	x0, #0x0                   	// #0
  40393c:	bl	402d20 <dcgettext@plt>
  403940:	mov	x20, x0
  403944:	mov	w2, #0x5                   	// #5
  403948:	mov	x1, x19
  40394c:	mov	x0, #0x0                   	// #0
  403950:	bl	402d20 <dcgettext@plt>
  403954:	mov	x19, x0
  403958:	mov	x0, x21
  40395c:	bl	40e68c <ferror@plt+0xb84c>
  403960:	mov	x4, x0
  403964:	mov	x3, x19
  403968:	mov	x2, x20
  40396c:	mov	w1, #0x0                   	// #0
  403970:	mov	w0, #0x2                   	// #2
  403974:	bl	4027b0 <error@plt>
  403978:	ldr	x0, [sp, #48]
  40397c:	str	x0, [x20]
  403980:	b	403908 <ferror@plt+0xac8>
  403984:	mov	x0, #0xffffffffffffffff    	// #-1
  403988:	str	x0, [x20]
  40398c:	b	403908 <ferror@plt+0xac8>
  403990:	stp	x29, x30, [sp, #-48]!
  403994:	mov	x29, sp
  403998:	stp	x19, x20, [sp, #16]
  40399c:	str	x21, [sp, #32]
  4039a0:	mov	x20, x0
  4039a4:	mov	x19, x1
  4039a8:	bl	402db0 <__errno_location@plt>
  4039ac:	ldr	w21, [x0]
  4039b0:	cbz	x19, 4039e0 <ferror@plt+0xba0>
  4039b4:	mov	x2, x19
  4039b8:	mov	w1, #0x3                   	// #3
  4039bc:	mov	w0, #0x0                   	// #0
  4039c0:	bl	40e4ec <ferror@plt+0xb6ac>
  4039c4:	mov	x4, x0
  4039c8:	mov	x3, x20
  4039cc:	adrp	x2, 412000 <_obstack_memory_used@@Base+0xa28>
  4039d0:	add	x2, x2, #0xd0
  4039d4:	mov	w1, w21
  4039d8:	mov	w0, #0x2                   	// #2
  4039dc:	bl	4027b0 <error@plt>
  4039e0:	mov	w2, #0x5                   	// #5
  4039e4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4039e8:	add	x1, x1, #0xc0
  4039ec:	mov	x0, #0x0                   	// #0
  4039f0:	bl	402d20 <dcgettext@plt>
  4039f4:	mov	x19, x0
  4039f8:	b	4039b4 <ferror@plt+0xb74>
  4039fc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403a00:	ldr	w0, [x0, #2680]
  403a04:	cbz	w0, 403a28 <ferror@plt+0xbe8>
  403a08:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403a0c:	ldr	w1, [x0, #2680]
  403a10:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403a14:	add	x0, x0, #0x568
  403a18:	add	x0, x0, #0x490
  403a1c:	cmp	w1, #0x0
  403a20:	csel	x0, x0, xzr, lt  // lt = tstop
  403a24:	ret
  403a28:	stp	x29, x30, [sp, #-16]!
  403a2c:	mov	x29, sp
  403a30:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x16a28>
  403a34:	add	x2, x2, #0x568
  403a38:	add	x2, x2, #0x490
  403a3c:	mov	w1, #0x1                   	// #1
  403a40:	bl	402d10 <__fxstat@plt>
  403a44:	mov	w1, #0xffffffff            	// #-1
  403a48:	cbz	w0, 403a54 <ferror@plt+0xc14>
  403a4c:	bl	402db0 <__errno_location@plt>
  403a50:	ldr	w1, [x0]
  403a54:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403a58:	str	w1, [x0, #2680]
  403a5c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403a60:	ldr	w1, [x0, #2680]
  403a64:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403a68:	add	x0, x0, #0x568
  403a6c:	add	x0, x0, #0x490
  403a70:	cmp	w1, #0x0
  403a74:	csel	x0, x0, xzr, lt  // lt = tstop
  403a78:	ldp	x29, x30, [sp], #16
  403a7c:	ret
  403a80:	stp	x29, x30, [sp, #-48]!
  403a84:	mov	x29, sp
  403a88:	stp	x19, x20, [sp, #16]
  403a8c:	mov	x19, x0
  403a90:	ldrb	w0, [x1]
  403a94:	cmp	w0, #0x72
  403a98:	b.eq	403ad0 <ferror@plt+0xc90>  // b.none
  403a9c:	cmp	w0, #0x77
  403aa0:	b.ne	403b90 <ferror@plt+0xd50>  // b.any
  403aa4:	cbz	x19, 403ab8 <ferror@plt+0xc78>
  403aa8:	mov	x1, #0x0                   	// #0
  403aac:	mov	w0, #0x1                   	// #1
  403ab0:	bl	402d60 <ftruncate@plt>
  403ab4:	cbnz	w0, 403b30 <ferror@plt+0xcf0>
  403ab8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403abc:	ldr	x19, [x0, #1352]
  403ac0:	mov	x0, x19
  403ac4:	ldp	x19, x20, [sp, #16]
  403ac8:	ldp	x29, x30, [sp], #48
  403acc:	ret
  403ad0:	mov	x20, x1
  403ad4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  403ad8:	add	x1, x1, #0xd8
  403adc:	mov	x0, x19
  403ae0:	bl	402b50 <strcmp@plt>
  403ae4:	cbnz	w0, 403b0c <ferror@plt+0xccc>
  403ae8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403aec:	mov	w1, #0x1                   	// #1
  403af0:	strb	w1, [x0, #2684]
  403af4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403af8:	ldr	x19, [x0, #1360]
  403afc:	mov	w1, #0x2                   	// #2
  403b00:	mov	x0, x19
  403b04:	bl	40acb0 <ferror@plt+0x7e70>
  403b08:	b	403ac0 <ferror@plt+0xc80>
  403b0c:	mov	w1, #0x80000               	// #524288
  403b10:	mov	x0, x19
  403b14:	bl	402900 <open@plt>
  403b18:	mov	x19, #0x0                   	// #0
  403b1c:	tbnz	w0, #31, 403afc <ferror@plt+0xcbc>
  403b20:	mov	x1, x20
  403b24:	bl	4029a0 <fdopen@plt>
  403b28:	mov	x19, x0
  403b2c:	b	403afc <ferror@plt+0xcbc>
  403b30:	bl	402db0 <__errno_location@plt>
  403b34:	ldr	w20, [x0]
  403b38:	bl	4039fc <ferror@plt+0xbbc>
  403b3c:	cbz	x0, 403b50 <ferror@plt+0xd10>
  403b40:	ldr	w0, [x0, #16]
  403b44:	and	w0, w0, #0xf000
  403b48:	cmp	w0, #0x8, lsl #12
  403b4c:	b.ne	403ab8 <ferror@plt+0xc78>  // b.any
  403b50:	str	x21, [sp, #32]
  403b54:	mov	w2, #0x5                   	// #5
  403b58:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  403b5c:	add	x1, x1, #0xe0
  403b60:	mov	x0, #0x0                   	// #0
  403b64:	bl	402d20 <dcgettext@plt>
  403b68:	mov	x21, x0
  403b6c:	mov	x2, x19
  403b70:	mov	w1, #0x3                   	// #3
  403b74:	mov	w0, #0x0                   	// #0
  403b78:	bl	40e4ec <ferror@plt+0xb6ac>
  403b7c:	mov	x3, x0
  403b80:	mov	x2, x21
  403b84:	mov	w1, w20
  403b88:	mov	w0, #0x2                   	// #2
  403b8c:	bl	4027b0 <error@plt>
  403b90:	str	x21, [sp, #32]
  403b94:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x1a28>
  403b98:	add	x3, x3, #0xde8
  403b9c:	add	x3, x3, #0x100
  403ba0:	mov	w2, #0x3d6                 	// #982
  403ba4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  403ba8:	add	x1, x1, #0xf8
  403bac:	adrp	x0, 412000 <_obstack_memory_used@@Base+0xa28>
  403bb0:	add	x0, x0, #0x108
  403bb4:	bl	402da0 <__assert_fail@plt>
  403bb8:	stp	x29, x30, [sp, #-32]!
  403bbc:	mov	x29, sp
  403bc0:	str	x19, [sp, #16]
  403bc4:	mov	x19, x0
  403bc8:	bl	403a80 <ferror@plt+0xc40>
  403bcc:	cbz	x0, 403bdc <ferror@plt+0xd9c>
  403bd0:	ldr	x19, [sp, #16]
  403bd4:	ldp	x29, x30, [sp], #32
  403bd8:	ret
  403bdc:	mov	w2, #0x5                   	// #5
  403be0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  403be4:	add	x1, x1, #0x138
  403be8:	bl	402d20 <dcgettext@plt>
  403bec:	mov	x1, x19
  403bf0:	bl	403990 <ferror@plt+0xb50>
  403bf4:	stp	x29, x30, [sp, #-32]!
  403bf8:	mov	x29, sp
  403bfc:	stp	x19, x20, [sp, #16]
  403c00:	mov	x19, x0
  403c04:	mov	x20, x1
  403c08:	bl	402880 <fileno@plt>
  403c0c:	cbz	w0, 403c40 <ferror@plt+0xe00>
  403c10:	cmp	w0, #0x1
  403c14:	b.eq	403c54 <ferror@plt+0xe14>  // b.none
  403c18:	mov	x0, x19
  403c1c:	bl	410c74 <ferror@plt+0xde34>
  403c20:	cbz	w0, 403c60 <ferror@plt+0xe20>
  403c24:	mov	w2, #0x5                   	// #5
  403c28:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  403c2c:	add	x1, x1, #0x158
  403c30:	mov	x0, #0x0                   	// #0
  403c34:	bl	402d20 <dcgettext@plt>
  403c38:	mov	x1, x20
  403c3c:	bl	403990 <ferror@plt+0xb50>
  403c40:	ldr	w0, [x19]
  403c44:	tbz	w0, #4, 403c60 <ferror@plt+0xe20>
  403c48:	mov	x0, x19
  403c4c:	bl	402cc0 <clearerr_unlocked@plt>
  403c50:	b	403c60 <ferror@plt+0xe20>
  403c54:	mov	x0, x19
  403c58:	bl	402c30 <fflush_unlocked@plt>
  403c5c:	cbnz	w0, 403c6c <ferror@plt+0xe2c>
  403c60:	ldp	x19, x20, [sp, #16]
  403c64:	ldp	x29, x30, [sp], #32
  403c68:	ret
  403c6c:	mov	w2, #0x5                   	// #5
  403c70:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  403c74:	add	x1, x1, #0x148
  403c78:	mov	x0, #0x0                   	// #0
  403c7c:	bl	402d20 <dcgettext@plt>
  403c80:	mov	x1, x20
  403c84:	bl	403990 <ferror@plt+0xb50>
  403c88:	stp	x29, x30, [sp, #-16]!
  403c8c:	mov	x29, sp
  403c90:	mov	x1, #0x48                  	// #72
  403c94:	bl	41008c <ferror@plt+0xd24c>
  403c98:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  403c9c:	ldr	x1, [x1, #2688]
  403ca0:	cbz	x1, 403cc4 <ferror@plt+0xe84>
  403ca4:	mov	x2, x1
  403ca8:	ldr	x1, [x1, #64]
  403cac:	cbnz	x1, 403ca4 <ferror@plt+0xe64>
  403cb0:	add	x1, x2, #0x40
  403cb4:	str	x0, [x1]
  403cb8:	str	xzr, [x0, #64]
  403cbc:	ldp	x29, x30, [sp], #16
  403cc0:	ret
  403cc4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  403cc8:	add	x1, x1, #0x568
  403ccc:	add	x1, x1, #0x518
  403cd0:	b	403cb4 <ferror@plt+0xe74>
  403cd4:	stp	x29, x30, [sp, #-32]!
  403cd8:	mov	x29, sp
  403cdc:	stp	x19, x20, [sp, #16]
  403ce0:	mov	x19, x0
  403ce4:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x16a28>
  403ce8:	add	x2, x2, #0x568
  403cec:	ldr	x1, [x2, #1312]
  403cf0:	ldr	x2, [x2, #1320]
  403cf4:	cmp	x2, x1
  403cf8:	b.eq	403d24 <ferror@plt+0xee4>  // b.none
  403cfc:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  403d00:	add	x1, x1, #0x568
  403d04:	ldr	x0, [x1, #1328]
  403d08:	ldr	x2, [x1, #1320]
  403d0c:	add	x3, x2, #0x1
  403d10:	str	x3, [x1, #1320]
  403d14:	str	x19, [x0, x2, lsl #3]
  403d18:	ldp	x19, x20, [sp, #16]
  403d1c:	ldp	x29, x30, [sp], #32
  403d20:	ret
  403d24:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403d28:	ldr	x0, [x0, #2712]
  403d2c:	cbz	x0, 403d64 <ferror@plt+0xf24>
  403d30:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  403d34:	movk	x2, #0xaaa, lsl #48
  403d38:	cmp	x1, x2
  403d3c:	b.cs	403d80 <ferror@plt+0xf40>  // b.hs, b.nlast
  403d40:	add	x2, x1, #0x1
  403d44:	add	x1, x2, x1, lsr #1
  403d48:	adrp	x20, 428000 <_obstack_memory_used@@Base+0x16a28>
  403d4c:	add	x20, x20, #0x568
  403d50:	str	x1, [x20, #1312]
  403d54:	lsl	x1, x1, #3
  403d58:	bl	40fedc <ferror@plt+0xd09c>
  403d5c:	str	x0, [x20, #1328]
  403d60:	b	403cfc <ferror@plt+0xebc>
  403d64:	cbz	x1, 403d84 <ferror@plt+0xf44>
  403d68:	cmp	xzr, x1, lsr #61
  403d6c:	cset	x2, ne  // ne = any
  403d70:	tst	x1, #0x1000000000000000
  403d74:	csinc	w2, w2, wzr, eq  // eq = none
  403d78:	cbz	w2, 403d48 <ferror@plt+0xf08>
  403d7c:	bl	4100ec <ferror@plt+0xd2ac>
  403d80:	bl	4100ec <ferror@plt+0xd2ac>
  403d84:	mov	x1, #0x10                  	// #16
  403d88:	b	403d48 <ferror@plt+0xf08>
  403d8c:	stp	x29, x30, [sp, #-48]!
  403d90:	mov	x29, sp
  403d94:	stp	x19, x20, [sp, #16]
  403d98:	stp	x21, x22, [sp, #32]
  403d9c:	mov	x19, x0
  403da0:	mov	x20, x1
  403da4:	add	x22, x1, #0x1
  403da8:	and	x2, x2, #0xffffffffffffffe0
  403dac:	add	x21, x2, #0x20
  403db0:	mov	x0, x21
  403db4:	bl	4028e0 <malloc@plt>
  403db8:	str	x0, [x19]
  403dbc:	cbz	x0, 403de8 <ferror@plt+0xfa8>
  403dc0:	str	x20, [x19, #40]
  403dc4:	str	x21, [x19, #24]
  403dc8:	str	xzr, [x19, #16]
  403dcc:	str	xzr, [x19, #32]
  403dd0:	str	xzr, [x19, #8]
  403dd4:	strb	wzr, [x19, #48]
  403dd8:	ldp	x19, x20, [sp, #16]
  403ddc:	ldp	x21, x22, [sp, #32]
  403de0:	ldp	x29, x30, [sp], #48
  403de4:	ret
  403de8:	lsr	x2, x21, #1
  403dec:	cmp	x22, x21, lsr #1
  403df0:	b.cc	403da8 <ferror@plt+0xf68>  // b.lo, b.ul, b.last
  403df4:	bl	4100ec <ferror@plt+0xd2ac>
  403df8:	stp	x29, x30, [sp, #-32]!
  403dfc:	mov	x29, sp
  403e00:	stp	x19, x20, [sp, #16]
  403e04:	mov	x19, x0
  403e08:	mov	x20, x1
  403e0c:	mov	w2, #0x0                   	// #0
  403e10:	sub	x1, x1, x0
  403e14:	bl	40c4a8 <ferror@plt+0x9668>
  403e18:	sxtw	x0, w0
  403e1c:	cmp	x20, x19
  403e20:	b.ls	403e38 <ferror@plt+0xff8>  // b.plast
  403e24:	ldrb	w2, [x19], #1
  403e28:	cmp	w2, #0x9
  403e2c:	cinc	x0, x0, eq  // eq = none
  403e30:	cmp	x20, x19
  403e34:	b.ne	403e24 <ferror@plt+0xfe4>  // b.any
  403e38:	ldp	x19, x20, [sp, #16]
  403e3c:	ldp	x29, x30, [sp], #32
  403e40:	ret
  403e44:	stp	x29, x30, [sp, #-112]!
  403e48:	mov	x29, sp
  403e4c:	stp	x19, x20, [sp, #16]
  403e50:	stp	x21, x22, [sp, #32]
  403e54:	stp	x23, x24, [sp, #48]
  403e58:	mov	x20, x1
  403e5c:	mov	x22, x2
  403e60:	ldr	x19, [x0]
  403e64:	ldr	x24, [x0, #8]
  403e68:	add	x21, x19, x24
  403e6c:	cbz	x2, 403eb0 <ferror@plt+0x1070>
  403e70:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403e74:	ldrb	w0, [x0, #1144]
  403e78:	sturb	w0, [x21, #-1]
  403e7c:	mov	x3, x20
  403e80:	mov	x2, x24
  403e84:	mov	x1, #0x1                   	// #1
  403e88:	mov	x0, x19
  403e8c:	bl	402760 <fwrite_unlocked@plt>
  403e90:	cmp	x24, x0
  403e94:	b.ne	4041fc <ferror@plt+0x13bc>  // b.any
  403e98:	sturb	wzr, [x21, #-1]
  403e9c:	ldp	x19, x20, [sp, #16]
  403ea0:	ldp	x21, x22, [sp, #32]
  403ea4:	ldp	x23, x24, [sp, #48]
  403ea8:	ldp	x29, x30, [sp], #112
  403eac:	ret
  403eb0:	mov	x23, x0
  403eb4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403eb8:	ldrb	w0, [x0, #2720]
  403ebc:	cbz	w0, 403e70 <ferror@plt+0x1030>
  403ec0:	stp	x25, x26, [sp, #64]
  403ec4:	str	x27, [sp, #80]
  403ec8:	mov	w22, #0xa                   	// #10
  403ecc:	b	403ef4 <ferror@plt+0x10b4>
  403ed0:	cmp	x21, x19
  403ed4:	csel	w1, w1, w22, ne  // ne = any
  403ed8:	ldr	x0, [x20, #40]
  403edc:	ldr	x2, [x20, #48]
  403ee0:	cmp	x2, x0
  403ee4:	b.ls	403f10 <ferror@plt+0x10d0>  // b.plast
  403ee8:	add	x2, x0, #0x1
  403eec:	str	x2, [x20, #40]
  403ef0:	strb	w1, [x0]
  403ef4:	cmp	x19, x21
  403ef8:	b.cs	403f3c <ferror@plt+0x10fc>  // b.hs, b.nlast
  403efc:	ldrb	w1, [x19], #1
  403f00:	cmp	w1, #0x9
  403f04:	b.ne	403ed0 <ferror@plt+0x1090>  // b.any
  403f08:	mov	w1, #0x3e                  	// #62
  403f0c:	b	403ed8 <ferror@plt+0x1098>
  403f10:	mov	x0, x20
  403f14:	bl	402ad0 <__overflow@plt>
  403f18:	cmn	w0, #0x1
  403f1c:	b.ne	403ef4 <ferror@plt+0x10b4>  // b.any
  403f20:	mov	w2, #0x5                   	// #5
  403f24:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  403f28:	add	x1, x1, #0x168
  403f2c:	mov	x0, #0x0                   	// #0
  403f30:	bl	402d20 <dcgettext@plt>
  403f34:	mov	x1, #0x0                   	// #0
  403f38:	bl	403990 <ferror@plt+0xb50>
  403f3c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  403f40:	ldr	x20, [x0, #2688]
  403f44:	adrp	x24, 428000 <_obstack_memory_used@@Base+0x16a28>
  403f48:	add	x24, x24, #0x568
  403f4c:	mov	x25, #0xff0000              	// #16711680
  403f50:	movk	x25, #0xff00, lsl #32
  403f54:	b	40406c <ferror@plt+0x122c>
  403f58:	ldr	x0, [x20, #16]
  403f5c:	cmn	x0, #0x1
  403f60:	b.ne	4040ac <ferror@plt+0x126c>  // b.any
  403f64:	b	4040bc <ferror@plt+0x127c>
  403f68:	ldrb	w26, [x19]
  403f6c:	strb	wzr, [x19]
  403f70:	ldrb	w0, [x21]
  403f74:	ldrb	w0, [x24, w0, sxtw]
  403f78:	cbz	w0, 403f88 <ferror@plt+0x1148>
  403f7c:	ldrb	w0, [x21, #1]!
  403f80:	ldrb	w0, [x24, w0, sxtw]
  403f84:	cbnz	w0, 403f7c <ferror@plt+0x113c>
  403f88:	str	x21, [sp, #96]
  403f8c:	cmp	x21, x19
  403f90:	b.ls	4040ec <ferror@plt+0x12ac>  // b.plast
  403f94:	str	x19, [sp, #96]
  403f98:	strb	w26, [x19]
  403f9c:	ldr	x19, [sp, #96]
  403fa0:	mov	x1, x21
  403fa4:	mov	x0, x22
  403fa8:	bl	403df8 <ferror@plt+0xfb8>
  403fac:	mov	x22, x0
  403fb0:	mov	x1, x19
  403fb4:	mov	x0, x21
  403fb8:	bl	403df8 <ferror@plt+0xfb8>
  403fbc:	mov	x19, x0
  403fc0:	sub	x21, x22, #0x1
  403fc4:	cbz	x22, 404000 <ferror@plt+0x11c0>
  403fc8:	adrp	x26, 428000 <_obstack_memory_used@@Base+0x16a28>
  403fcc:	mov	w22, #0x20                  	// #32
  403fd0:	mov	w27, #0x20                  	// #32
  403fd4:	ldr	x0, [x26, #1352]
  403fd8:	ldr	x1, [x0, #40]
  403fdc:	ldr	x2, [x0, #48]
  403fe0:	cmp	x1, x2
  403fe4:	b.cs	404198 <ferror@plt+0x1358>  // b.hs, b.nlast
  403fe8:	add	x2, x1, #0x1
  403fec:	str	x2, [x0, #40]
  403ff0:	strb	w22, [x1]
  403ff4:	sub	x21, x21, #0x1
  403ff8:	cmn	x21, #0x1
  403ffc:	b.ne	403fd4 <ferror@plt+0x1194>  // b.any
  404000:	cbz	x19, 4041a4 <ferror@plt+0x1364>
  404004:	adrp	x22, 428000 <_obstack_memory_used@@Base+0x16a28>
  404008:	mov	w21, #0x5f                  	// #95
  40400c:	mov	w26, #0x5f                  	// #95
  404010:	ldr	x0, [x22, #1352]
  404014:	ldr	x1, [x0, #40]
  404018:	ldr	x2, [x0, #48]
  40401c:	cmp	x1, x2
  404020:	b.cs	4041c8 <ferror@plt+0x1388>  // b.hs, b.nlast
  404024:	add	x2, x1, #0x1
  404028:	str	x2, [x0, #40]
  40402c:	strb	w21, [x1]
  404030:	subs	x19, x19, #0x1
  404034:	b.ne	404010 <ferror@plt+0x11d0>  // b.any
  404038:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40403c:	ldr	x0, [x0, #1352]
  404040:	ldr	x1, [x0, #40]
  404044:	ldr	x2, [x0, #48]
  404048:	cmp	x1, x2
  40404c:	b.cs	4041d4 <ferror@plt+0x1394>  // b.hs, b.nlast
  404050:	add	x2, x1, #0x1
  404054:	str	x2, [x0, #40]
  404058:	mov	w0, #0xa                   	// #10
  40405c:	strb	w0, [x1]
  404060:	cbz	x20, 404220 <ferror@plt+0x13e0>
  404064:	ldr	x20, [x20, #64]
  404068:	cbz	x20, 4041e0 <ferror@plt+0x13a0>
  40406c:	ldr	x22, [x23]
  404070:	ldr	x19, [x23, #8]
  404074:	sub	x19, x19, #0x1
  404078:	add	x19, x22, x19
  40407c:	mov	x21, x22
  404080:	cbz	x20, 403fa0 <ferror@plt+0x1160>
  404084:	ldr	x26, [x20]
  404088:	cmn	x26, #0x1
  40408c:	b.eq	403f58 <ferror@plt+0x1118>  // b.none
  404090:	mov	x1, x20
  404094:	mov	x0, x23
  404098:	bl	402fc4 <ferror@plt+0x184>
  40409c:	mov	x21, x0
  4040a0:	ldr	x0, [x20, #16]
  4040a4:	cmn	x0, #0x1
  4040a8:	b.eq	4040d0 <ferror@plt+0x1290>  // b.none
  4040ac:	mov	x1, x20
  4040b0:	mov	x0, x23
  4040b4:	bl	4030f0 <ferror@plt+0x2b0>
  4040b8:	mov	x19, x0
  4040bc:	cmn	x26, #0x1
  4040c0:	cset	w1, eq  // eq = none
  4040c4:	ldrb	w0, [x20, #48]
  4040c8:	tst	w1, w0
  4040cc:	b.ne	403f68 <ferror@plt+0x1128>  // b.any
  4040d0:	ldrb	w0, [x20, #54]
  4040d4:	cbnz	w0, 403f68 <ferror@plt+0x1128>
  4040d8:	ldr	x0, [x20, #48]
  4040dc:	and	x0, x0, #0xffffffff0000
  4040e0:	and	x0, x0, #0xffffffff00ffffff
  4040e4:	cbz	x0, 403fa0 <ferror@plt+0x1160>
  4040e8:	b	403f68 <ferror@plt+0x1128>
  4040ec:	ldrb	w0, [x20, #54]
  4040f0:	cbnz	w0, 404170 <ferror@plt+0x1330>
  4040f4:	ldrb	w0, [x20, #52]
  4040f8:	cbnz	w0, 404180 <ferror@plt+0x1340>
  4040fc:	ldr	x0, [x20, #48]
  404100:	tst	x0, x25
  404104:	b.eq	404190 <ferror@plt+0x1350>  // b.none
  404108:	mov	w0, #0x0                   	// #0
  40410c:	cmp	x21, x19
  404110:	b.cs	404120 <ferror@plt+0x12e0>  // b.hs, b.nlast
  404114:	ldrb	w0, [x21]
  404118:	cmp	w0, #0x2d
  40411c:	cset	w0, eq  // eq = none
  404120:	add	x0, x21, w0, sxtw
  404124:	str	x0, [sp, #104]
  404128:	add	x0, sp, #0x68
  40412c:	bl	403240 <ferror@plt+0x400>
  404130:	and	w0, w0, #0xff
  404134:	cmp	w0, #0x2f
  404138:	b.ls	403f98 <ferror@plt+0x1158>  // b.plast
  40413c:	ldr	x1, [sp, #104]
  404140:	ldrb	w2, [x20, #53]
  404144:	mov	w0, #0x0                   	// #0
  404148:	cbz	w2, 404164 <ferror@plt+0x1324>
  40414c:	ldrb	w2, [x1]
  404150:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  404154:	add	x0, x0, #0xde8
  404158:	ldrb	w0, [x0, w2, sxtw]
  40415c:	cmp	w0, #0x0
  404160:	cset	w0, ne  // ne = any
  404164:	add	x0, x1, w0, sxtw
  404168:	str	x0, [sp, #96]
  40416c:	b	403f98 <ferror@plt+0x1158>
  404170:	add	x1, sp, #0x60
  404174:	mov	x0, x21
  404178:	bl	403378 <ferror@plt+0x538>
  40417c:	b	403f98 <ferror@plt+0x1158>
  404180:	add	x1, sp, #0x60
  404184:	mov	x0, x21
  404188:	bl	402b90 <strtold@plt>
  40418c:	b	403f98 <ferror@plt+0x1158>
  404190:	str	x19, [sp, #96]
  404194:	b	403f98 <ferror@plt+0x1158>
  404198:	mov	w1, w27
  40419c:	bl	402ad0 <__overflow@plt>
  4041a0:	b	403ff4 <ferror@plt+0x11b4>
  4041a4:	mov	w2, #0x5                   	// #5
  4041a8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4041ac:	add	x1, x1, #0x178
  4041b0:	mov	x0, #0x0                   	// #0
  4041b4:	bl	402d20 <dcgettext@plt>
  4041b8:	mov	x1, x0
  4041bc:	mov	w0, #0x1                   	// #1
  4041c0:	bl	402980 <__printf_chk@plt>
  4041c4:	b	404060 <ferror@plt+0x1220>
  4041c8:	mov	w1, w26
  4041cc:	bl	402ad0 <__overflow@plt>
  4041d0:	b	404030 <ferror@plt+0x11f0>
  4041d4:	mov	w1, #0xa                   	// #10
  4041d8:	bl	402ad0 <__overflow@plt>
  4041dc:	b	404060 <ferror@plt+0x1220>
  4041e0:	ldrb	w0, [x24, #1337]
  4041e4:	cbnz	w0, 40422c <ferror@plt+0x13ec>
  4041e8:	ldrb	w0, [x24, #1338]
  4041ec:	cbz	w0, 40406c <ferror@plt+0x122c>
  4041f0:	ldp	x25, x26, [sp, #64]
  4041f4:	ldr	x27, [sp, #80]
  4041f8:	b	403e9c <ferror@plt+0x105c>
  4041fc:	stp	x25, x26, [sp, #64]
  404200:	str	x27, [sp, #80]
  404204:	mov	w2, #0x5                   	// #5
  404208:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  40420c:	add	x1, x1, #0x168
  404210:	mov	x0, #0x0                   	// #0
  404214:	bl	402d20 <dcgettext@plt>
  404218:	mov	x1, x22
  40421c:	bl	403990 <ferror@plt+0xb50>
  404220:	ldp	x25, x26, [sp, #64]
  404224:	ldr	x27, [sp, #80]
  404228:	b	403e9c <ferror@plt+0x105c>
  40422c:	ldp	x25, x26, [sp, #64]
  404230:	ldr	x27, [sp, #80]
  404234:	b	403e9c <ferror@plt+0x105c>
  404238:	stp	x29, x30, [sp, #-48]!
  40423c:	mov	x29, sp
  404240:	stp	x19, x20, [sp, #16]
  404244:	stp	x21, x22, [sp, #32]
  404248:	mov	x21, x0
  40424c:	mov	x20, x1
  404250:	mov	x22, x2
  404254:	bl	402db0 <__errno_location@plt>
  404258:	mov	x19, x0
  40425c:	str	wzr, [x0]
  404260:	mov	x2, x22
  404264:	mov	x1, x20
  404268:	mov	x0, x21
  40426c:	bl	402c60 <strxfrm@plt>
  404270:	ldr	w19, [x19]
  404274:	cbnz	w19, 404288 <ferror@plt+0x1448>
  404278:	ldp	x19, x20, [sp, #16]
  40427c:	ldp	x21, x22, [sp, #32]
  404280:	ldp	x29, x30, [sp], #48
  404284:	ret
  404288:	mov	w2, #0x5                   	// #5
  40428c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  404290:	add	x1, x1, #0x190
  404294:	mov	x0, #0x0                   	// #0
  404298:	bl	402d20 <dcgettext@plt>
  40429c:	mov	x2, x0
  4042a0:	mov	w1, w19
  4042a4:	mov	w0, #0x0                   	// #0
  4042a8:	bl	4027b0 <error@plt>
  4042ac:	mov	w2, #0x5                   	// #5
  4042b0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4042b4:	add	x1, x1, #0x1b0
  4042b8:	mov	x0, #0x0                   	// #0
  4042bc:	bl	402d20 <dcgettext@plt>
  4042c0:	mov	x2, x0
  4042c4:	mov	w1, #0x0                   	// #0
  4042c8:	mov	w0, #0x0                   	// #0
  4042cc:	bl	4027b0 <error@plt>
  4042d0:	mov	w2, #0x5                   	// #5
  4042d4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4042d8:	add	x1, x1, #0x1e0
  4042dc:	mov	x0, #0x0                   	// #0
  4042e0:	bl	402d20 <dcgettext@plt>
  4042e4:	mov	x19, x0
  4042e8:	mov	x2, x20
  4042ec:	mov	w1, #0x8                   	// #8
  4042f0:	mov	w0, #0x0                   	// #0
  4042f4:	bl	40e360 <ferror@plt+0xb520>
  4042f8:	mov	x3, x0
  4042fc:	mov	x2, x19
  404300:	mov	w1, #0x0                   	// #0
  404304:	mov	w0, #0x2                   	// #2
  404308:	bl	4027b0 <error@plt>
  40430c:	mov	x12, #0x21a0                	// #8608
  404310:	sub	sp, sp, x12
  404314:	stp	x29, x30, [sp]
  404318:	mov	x29, sp
  40431c:	stp	x19, x20, [sp, #16]
  404320:	stp	x21, x22, [sp, #32]
  404324:	stp	x23, x24, [sp, #48]
  404328:	stp	x25, x26, [sp, #64]
  40432c:	stp	x27, x28, [sp, #80]
  404330:	mov	x2, x0
  404334:	str	x0, [sp, #104]
  404338:	str	x1, [sp, #112]
  40433c:	str	wzr, [sp, #120]
  404340:	str	wzr, [sp, #124]
  404344:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  404348:	ldr	x26, [x0, #2688]
  40434c:	ldr	x27, [x2, #16]
  404350:	ldr	x25, [x1, #16]
  404354:	ldr	x20, [x2, #24]
  404358:	ldr	x19, [x1, #24]
  40435c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  404360:	add	x24, x0, #0x568
  404364:	add	x0, x24, #0x540
  404368:	str	x0, [sp, #184]
  40436c:	add	x0, sp, #0x1bc
  404370:	str	x0, [sp, #168]
  404374:	mov	x22, x20
  404378:	mov	x21, x19
  40437c:	b	404530 <ferror@plt+0x16f0>
  404380:	ldrb	w0, [x26, #56]
  404384:	cbnz	w0, 404564 <ferror@plt+0x1724>
  404388:	cbz	x19, 404ae4 <ferror@plt+0x1ca4>
  40438c:	mov	x4, x27
  404390:	cbnz	x20, 404a18 <ferror@plt+0x1bd8>
  404394:	b	404a90 <ferror@plt+0x1c50>
  404398:	add	x0, x21, x22
  40439c:	add	x0, x0, #0x2
  4043a0:	cmp	x0, #0xfa0
  4043a4:	b.hi	4043cc <ferror@plt+0x158c>  // b.pmore
  4043a8:	str	xzr, [sp, #160]
  4043ac:	add	x0, sp, #0x260
  4043b0:	add	x3, x21, #0x1
  4043b4:	add	x3, x0, x3
  4043b8:	cbz	x21, 404410 <ferror@plt+0x15d0>
  4043bc:	mov	x1, x27
  4043c0:	add	x27, x27, x21
  4043c4:	mov	x21, #0x0                   	// #0
  4043c8:	b	4043f4 <ferror@plt+0x15b4>
  4043cc:	bl	40fe60 <ferror@plt+0xd020>
  4043d0:	str	x0, [sp, #160]
  4043d4:	b	4043b0 <ferror@plt+0x1570>
  4043d8:	ldrb	w2, [x1]
  4043dc:	ldrb	w2, [x20, x2]
  4043e0:	strb	w2, [x0, x21]
  4043e4:	add	x21, x21, #0x1
  4043e8:	add	x1, x1, #0x1
  4043ec:	cmp	x1, x27
  4043f0:	b.eq	404410 <ferror@plt+0x15d0>  // b.none
  4043f4:	cbz	x19, 4043d8 <ferror@plt+0x1598>
  4043f8:	ldrb	w2, [x1]
  4043fc:	ldrb	w2, [x19, x2]
  404400:	cbnz	w2, 4043e8 <ferror@plt+0x15a8>
  404404:	cbnz	x20, 4043d8 <ferror@plt+0x1598>
  404408:	ldrb	w2, [x1]
  40440c:	b	4043e0 <ferror@plt+0x15a0>
  404410:	strb	wzr, [x0, x21]
  404414:	cbz	x22, 404460 <ferror@plt+0x1620>
  404418:	mov	x1, x25
  40441c:	add	x25, x25, x22
  404420:	mov	x22, #0x0                   	// #0
  404424:	b	404444 <ferror@plt+0x1604>
  404428:	ldrb	w2, [x1]
  40442c:	ldrb	w2, [x20, x2]
  404430:	strb	w2, [x3, x22]
  404434:	add	x22, x22, #0x1
  404438:	add	x1, x1, #0x1
  40443c:	cmp	x25, x1
  404440:	b.eq	404460 <ferror@plt+0x1620>  // b.none
  404444:	cbz	x19, 404428 <ferror@plt+0x15e8>
  404448:	ldrb	w2, [x1]
  40444c:	ldrb	w2, [x19, x2]
  404450:	cbnz	w2, 404438 <ferror@plt+0x15f8>
  404454:	cbnz	x20, 404428 <ferror@plt+0x15e8>
  404458:	ldrb	w2, [x1]
  40445c:	b	404430 <ferror@plt+0x15f0>
  404460:	strb	wzr, [x3, x22]
  404464:	mov	x25, x3
  404468:	mov	x27, x0
  40446c:	b	404584 <ferror@plt+0x1744>
  404470:	ldrb	w0, [x27]
  404474:	ldrb	w0, [x24, w0, sxtw]
  404478:	cbz	w0, 4045c8 <ferror@plt+0x1788>
  40447c:	mov	x0, x27
  404480:	ldrb	w1, [x0, #1]!
  404484:	ldrb	w1, [x24, w1, sxtw]
  404488:	cbnz	w1, 404480 <ferror@plt+0x1640>
  40448c:	ldrb	w1, [x25]
  404490:	ldrb	w1, [x24, w1, sxtw]
  404494:	cbz	w1, 4045d0 <ferror@plt+0x1790>
  404498:	mov	x1, x25
  40449c:	ldrb	w2, [x1, #1]!
  4044a0:	ldrb	w2, [x24, w2, sxtw]
  4044a4:	cbnz	w2, 40449c <ferror@plt+0x165c>
  4044a8:	ldr	w3, [x24, #256]
  4044ac:	ldr	w2, [x24, #260]
  4044b0:	bl	40f384 <ferror@plt+0xc544>
  4044b4:	mov	w28, w0
  4044b8:	cbnz	x23, 4049e0 <ferror@plt+0x1ba0>
  4044bc:	ldrb	w0, [sp, #120]
  4044c0:	strb	w0, [x27, x21]
  4044c4:	ldrb	w0, [sp, #124]
  4044c8:	strb	w0, [x25, x22]
  4044cc:	cbnz	w28, 404bec <ferror@plt+0x1dac>
  4044d0:	ldr	x26, [x26, #64]
  4044d4:	cbz	x26, 404bf8 <ferror@plt+0x1db8>
  4044d8:	ldr	x0, [x26, #16]
  4044dc:	cmn	x0, #0x1
  4044e0:	b.eq	404b50 <ferror@plt+0x1d10>  // b.none
  4044e4:	mov	x1, x26
  4044e8:	ldr	x0, [sp, #104]
  4044ec:	bl	4030f0 <ferror@plt+0x2b0>
  4044f0:	mov	x22, x0
  4044f4:	mov	x1, x26
  4044f8:	ldr	x0, [sp, #112]
  4044fc:	bl	4030f0 <ferror@plt+0x2b0>
  404500:	mov	x21, x0
  404504:	ldr	x0, [x26]
  404508:	cmn	x0, #0x1
  40450c:	b.eq	404b7c <ferror@plt+0x1d3c>  // b.none
  404510:	mov	x1, x26
  404514:	ldr	x0, [sp, #104]
  404518:	bl	402fc4 <ferror@plt+0x184>
  40451c:	mov	x27, x0
  404520:	mov	x1, x26
  404524:	ldr	x0, [sp, #112]
  404528:	bl	402fc4 <ferror@plt+0x184>
  40452c:	mov	x25, x0
  404530:	ldr	x20, [x26, #40]
  404534:	ldr	x19, [x26, #32]
  404538:	cmp	x27, x22
  40453c:	csel	x3, x27, x22, cs  // cs = hs, nlast
  404540:	cmp	x25, x21
  404544:	csel	x1, x25, x21, cs  // cs = hs, nlast
  404548:	sub	x21, x3, x27
  40454c:	sub	x22, x1, x25
  404550:	ldrb	w0, [x24, #1339]
  404554:	cbnz	w0, 404564 <ferror@plt+0x1724>
  404558:	ldr	x0, [x26, #48]
  40455c:	tst	x0, #0xffffffffff0000
  404560:	b.eq	404380 <ferror@plt+0x1540>  // b.none
  404564:	orr	x23, x20, x19
  404568:	cbnz	x23, 404398 <ferror@plt+0x1558>
  40456c:	ldrb	w0, [x3]
  404570:	str	w0, [sp, #120]
  404574:	strb	wzr, [x3]
  404578:	ldrb	w0, [x1]
  40457c:	str	w0, [sp, #124]
  404580:	strb	wzr, [x1]
  404584:	ldrb	w0, [x26, #50]
  404588:	cbnz	w0, 404470 <ferror@plt+0x1630>
  40458c:	ldrb	w0, [x26, #52]
  404590:	cbnz	w0, 4045d8 <ferror@plt+0x1798>
  404594:	ldrb	w0, [x26, #53]
  404598:	cbnz	w0, 4046dc <ferror@plt+0x189c>
  40459c:	ldrb	w0, [x26, #54]
  4045a0:	cbnz	w0, 40475c <ferror@plt+0x191c>
  4045a4:	ldrb	w0, [x26, #51]
  4045a8:	cbnz	w0, 404780 <ferror@plt+0x1940>
  4045ac:	ldrb	w0, [x26, #56]
  4045b0:	cbz	w0, 4049ac <ferror@plt+0x1b6c>
  4045b4:	mov	x1, x25
  4045b8:	mov	x0, x27
  4045bc:	bl	40ae10 <ferror@plt+0x7fd0>
  4045c0:	mov	w28, w0
  4045c4:	b	4044b8 <ferror@plt+0x1678>
  4045c8:	mov	x0, x27
  4045cc:	b	40448c <ferror@plt+0x164c>
  4045d0:	mov	x1, x25
  4045d4:	b	4044a8 <ferror@plt+0x1668>
  4045d8:	add	x1, sp, #0xf8
  4045dc:	mov	x0, x27
  4045e0:	bl	402b90 <strtold@plt>
  4045e4:	str	q0, [sp, #128]
  4045e8:	add	x1, sp, #0x100
  4045ec:	mov	x0, x25
  4045f0:	bl	402b90 <strtold@plt>
  4045f4:	str	q0, [sp, #144]
  4045f8:	ldr	x0, [sp, #248]
  4045fc:	cmp	x27, x0
  404600:	b.eq	4046b4 <ferror@plt+0x1874>  // b.none
  404604:	ldr	x0, [sp, #256]
  404608:	cmp	x25, x0
  40460c:	b.eq	4046c4 <ferror@plt+0x1884>  // b.none
  404610:	ldr	q1, [sp, #144]
  404614:	ldr	q0, [sp, #128]
  404618:	bl	411d08 <_obstack_memory_used@@Base+0x730>
  40461c:	tbnz	w0, #31, 4046cc <ferror@plt+0x188c>
  404620:	ldr	q1, [sp, #144]
  404624:	ldr	q0, [sp, #128]
  404628:	bl	411b80 <_obstack_memory_used@@Base+0x5a8>
  40462c:	mov	w28, #0x1                   	// #1
  404630:	cmp	w0, #0x0
  404634:	b.gt	4044b8 <ferror@plt+0x1678>
  404638:	ldr	q1, [sp, #144]
  40463c:	ldr	q0, [sp, #128]
  404640:	bl	411a5c <_obstack_memory_used@@Base+0x484>
  404644:	mov	w28, #0x0                   	// #0
  404648:	cbz	w0, 4044b8 <ferror@plt+0x1678>
  40464c:	ldr	q1, [sp, #144]
  404650:	mov	v0.16b, v1.16b
  404654:	bl	411a5c <_obstack_memory_used@@Base+0x484>
  404658:	cbz	w0, 4046d4 <ferror@plt+0x1894>
  40465c:	ldr	q0, [sp, #128]
  404660:	mov	v1.16b, v0.16b
  404664:	bl	411a5c <_obstack_memory_used@@Base+0x484>
  404668:	mov	w28, #0x1                   	// #1
  40466c:	cbz	w0, 4044b8 <ferror@plt+0x1678>
  404670:	mov	x1, #0x0                   	// #0
  404674:	mov	x0, x27
  404678:	bl	402b90 <strtold@plt>
  40467c:	str	q0, [sp, #288]
  404680:	mov	x1, #0x0                   	// #0
  404684:	mov	x0, x25
  404688:	bl	402b90 <strtold@plt>
  40468c:	add	x0, sp, #0x1, lsl #12
  404690:	add	x0, x0, #0x290
  404694:	stur	q0, [x0, #-144]
  404698:	mov	x2, #0x10                  	// #16
  40469c:	add	x1, sp, #0x1, lsl #12
  4046a0:	add	x1, x1, #0x200
  4046a4:	add	x0, sp, #0x120
  4046a8:	bl	402b00 <memcmp@plt>
  4046ac:	mov	w28, w0
  4046b0:	b	4044b8 <ferror@plt+0x1678>
  4046b4:	ldr	x0, [sp, #256]
  4046b8:	cmp	x0, x25
  4046bc:	csetm	w28, ne  // ne = any
  4046c0:	b	4044b8 <ferror@plt+0x1678>
  4046c4:	mov	w28, #0x1                   	// #1
  4046c8:	b	4044b8 <ferror@plt+0x1678>
  4046cc:	mov	w28, #0xffffffff            	// #-1
  4046d0:	b	4044b8 <ferror@plt+0x1678>
  4046d4:	mov	w28, #0xffffffff            	// #-1
  4046d8:	b	4044b8 <ferror@plt+0x1678>
  4046dc:	ldrb	w0, [x27]
  4046e0:	ldrb	w0, [x24, w0, sxtw]
  4046e4:	cbz	w0, 40474c <ferror@plt+0x190c>
  4046e8:	mov	x19, x27
  4046ec:	ldrb	w0, [x19, #1]!
  4046f0:	ldrb	w0, [x24, w0, sxtw]
  4046f4:	cbnz	w0, 4046ec <ferror@plt+0x18ac>
  4046f8:	ldrb	w0, [x25]
  4046fc:	ldrb	w0, [x24, w0, sxtw]
  404700:	cbz	w0, 404754 <ferror@plt+0x1914>
  404704:	mov	x20, x25
  404708:	ldrb	w0, [x20, #1]!
  40470c:	ldrb	w0, [x24, w0, sxtw]
  404710:	cbnz	w0, 404708 <ferror@plt+0x18c8>
  404714:	mov	x0, x19
  404718:	bl	403318 <ferror@plt+0x4d8>
  40471c:	mov	w28, w0
  404720:	mov	x0, x20
  404724:	bl	403318 <ferror@plt+0x4d8>
  404728:	subs	w28, w28, w0
  40472c:	b.ne	4044b8 <ferror@plt+0x1678>  // b.any
  404730:	ldr	w3, [x24, #256]
  404734:	ldr	w2, [x24, #260]
  404738:	mov	x1, x20
  40473c:	mov	x0, x19
  404740:	bl	40f384 <ferror@plt+0xc544>
  404744:	mov	w28, w0
  404748:	b	4044b8 <ferror@plt+0x1678>
  40474c:	mov	x19, x27
  404750:	b	4046f8 <ferror@plt+0x18b8>
  404754:	mov	x20, x25
  404758:	b	404714 <ferror@plt+0x18d4>
  40475c:	mov	x1, #0x0                   	// #0
  404760:	mov	x0, x27
  404764:	bl	403378 <ferror@plt+0x538>
  404768:	mov	w28, w0
  40476c:	mov	x1, #0x0                   	// #0
  404770:	mov	x0, x25
  404774:	bl	403378 <ferror@plt+0x538>
  404778:	sub	w28, w28, w0
  40477c:	b	4044b8 <ferror@plt+0x1678>
  404780:	mov	x19, #0x9c                  	// #156
  404784:	mov	x2, x19
  404788:	ldr	x1, [sp, #184]
  40478c:	add	x0, sp, #0x1bc
  404790:	bl	402720 <memcpy@plt>
  404794:	mov	x2, x19
  404798:	add	x1, sp, #0x1bc
  40479c:	add	x0, sp, #0x120
  4047a0:	bl	402720 <memcpy@plt>
  4047a4:	ldrb	w0, [x24, #1339]
  4047a8:	cbz	w0, 404c28 <ferror@plt+0x1de8>
  4047ac:	add	x1, x27, x21
  4047b0:	add	x2, x25, x22
  4047b4:	add	x0, x21, x22
  4047b8:	add	x0, x0, x0, lsl #1
  4047bc:	add	x0, x0, #0x2
  4047c0:	str	x0, [sp, #144]
  4047c4:	str	xzr, [sp, #128]
  4047c8:	mov	x19, #0xfa0                 	// #4000
  4047cc:	add	x0, sp, #0x1, lsl #12
  4047d0:	add	x0, x0, #0x200
  4047d4:	mov	w28, #0x0                   	// #0
  4047d8:	str	x26, [sp, #192]
  4047dc:	str	x27, [sp, #200]
  4047e0:	str	x25, [sp, #208]
  4047e4:	str	x21, [sp, #216]
  4047e8:	str	x22, [sp, #224]
  4047ec:	mov	x22, x1
  4047f0:	mov	x21, x27
  4047f4:	str	x23, [sp, #232]
  4047f8:	mov	x23, x2
  4047fc:	mov	x27, x0
  404800:	b	404d88 <ferror@plt+0x1f48>
  404804:	add	x19, x19, x19, lsl #1
  404808:	lsr	x19, x19, #1
  40480c:	cmp	x0, x19
  404810:	csel	x19, x0, x19, cs  // cs = hs, nlast
  404814:	ldr	x0, [sp, #128]
  404818:	bl	402ba0 <free@plt>
  40481c:	mov	x0, x19
  404820:	bl	4028e0 <malloc@plt>
  404824:	str	x0, [sp, #128]
  404828:	mov	x27, x0
  40482c:	cmp	x0, #0x0
  404830:	mov	x1, #0xfa0                 	// #4000
  404834:	csel	x19, x19, x1, ne  // ne = any
  404838:	add	x0, sp, #0x1, lsl #12
  40483c:	add	x0, x0, #0x200
  404840:	csel	x27, x27, x0, ne  // ne = any
  404844:	b	404d94 <ferror@plt+0x1f54>
  404848:	mov	x2, x19
  40484c:	mov	x1, x21
  404850:	mov	x0, x27
  404854:	bl	404238 <ferror@plt+0x13f8>
  404858:	add	x20, x0, #0x1
  40485c:	cmp	x23, x25
  404860:	b.ls	404de8 <ferror@plt+0x1fa8>  // b.plast
  404864:	cmp	x19, x20
  404868:	b.cs	404888 <ferror@plt+0x1a48>  // b.hs, b.nlast
  40486c:	mov	x2, #0x0                   	// #0
  404870:	mov	x1, x25
  404874:	mov	x0, #0x0                   	// #0
  404878:	bl	404238 <ferror@plt+0x13f8>
  40487c:	add	x26, x0, #0x1
  404880:	b	4048b0 <ferror@plt+0x1a70>
  404884:	mov	x20, #0x0                   	// #0
  404888:	sub	x2, x19, x20
  40488c:	mov	x1, x25
  404890:	add	x0, x27, x20
  404894:	bl	404238 <ferror@plt+0x13f8>
  404898:	add	x26, x0, #0x1
  40489c:	cmp	x19, x20
  4048a0:	b.cc	4048b0 <ferror@plt+0x1a70>  // b.lo, b.ul, b.last
  4048a4:	add	x0, x26, x20
  4048a8:	cmp	x19, x0
  4048ac:	b.cs	404dac <ferror@plt+0x1f6c>  // b.hs, b.nlast
  4048b0:	add	x19, x20, x26
  4048b4:	add	x0, x19, x19, lsl #1
  4048b8:	lsr	x0, x0, #1
  4048bc:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  4048c0:	cmp	x19, x1
  4048c4:	csel	x19, x0, x19, cc  // cc = lo, ul, last
  4048c8:	ldr	x0, [sp, #128]
  4048cc:	bl	402ba0 <free@plt>
  4048d0:	mov	x0, x19
  4048d4:	bl	40fe60 <ferror@plt+0xd020>
  4048d8:	mov	x27, x0
  4048dc:	cmp	x22, x21
  4048e0:	b.hi	40490c <ferror@plt+0x1acc>  // b.pmore
  4048e4:	cmp	x23, x25
  4048e8:	b.hi	40491c <ferror@plt+0x1adc>  // b.pmore
  4048ec:	cmp	x22, x21
  4048f0:	b.ls	404d10 <ferror@plt+0x1ed0>  // b.plast
  4048f4:	mov	x0, x21
  4048f8:	bl	402780 <strlen@plt>
  4048fc:	add	x0, x0, #0x1
  404900:	add	x21, x21, x0
  404904:	str	x27, [sp, #128]
  404908:	b	404d2c <ferror@plt+0x1eec>
  40490c:	mov	x2, x20
  404910:	mov	x1, x21
  404914:	bl	402c60 <strxfrm@plt>
  404918:	b	4048e4 <ferror@plt+0x1aa4>
  40491c:	mov	x2, x26
  404920:	mov	x1, x25
  404924:	add	x0, x27, x20
  404928:	bl	402c60 <strxfrm@plt>
  40492c:	cmp	x22, x21
  404930:	b.hi	404dd0 <ferror@plt+0x1f90>  // b.pmore
  404934:	str	x27, [sp, #128]
  404938:	b	404d14 <ferror@plt+0x1ed4>
  40493c:	ldr	x25, [sp, #208]
  404940:	ldr	x21, [sp, #216]
  404944:	ldr	x22, [sp, #224]
  404948:	ldr	x23, [sp, #232]
  40494c:	str	x27, [sp, #144]
  404950:	ldr	x27, [sp, #200]
  404954:	str	x26, [sp, #176]
  404958:	ldr	x26, [sp, #192]
  40495c:	b	404ca8 <ferror@plt+0x1e68>
  404960:	cbnz	w28, 404d04 <ferror@plt+0x1ec4>
  404964:	b	40497c <ferror@plt+0x1b3c>
  404968:	str	x22, [sp, #176]
  40496c:	str	x25, [sp, #192]
  404970:	mov	x20, x21
  404974:	str	x27, [sp, #144]
  404978:	str	xzr, [sp, #128]
  40497c:	ldr	x19, [sp, #176]
  404980:	cmp	x20, x19
  404984:	csel	x2, x20, x19, ls  // ls = plast
  404988:	ldr	x1, [sp, #192]
  40498c:	ldr	x0, [sp, #144]
  404990:	bl	402b00 <memcmp@plt>
  404994:	mov	w28, w0
  404998:	cbnz	w0, 404d04 <ferror@plt+0x1ec4>
  40499c:	cmp	x20, x19
  4049a0:	cset	w28, hi  // hi = pmore
  4049a4:	sbc	w28, w28, wzr
  4049a8:	b	404d04 <ferror@plt+0x1ec4>
  4049ac:	cbnz	x21, 4049bc <ferror@plt+0x1b7c>
  4049b0:	cmp	x22, #0x0
  4049b4:	csetm	w28, ne  // ne = any
  4049b8:	b	4044b8 <ferror@plt+0x1678>
  4049bc:	mov	w28, #0x1                   	// #1
  4049c0:	cbz	x22, 4044b8 <ferror@plt+0x1678>
  4049c4:	add	x3, x22, #0x1
  4049c8:	mov	x2, x25
  4049cc:	add	x1, x21, #0x1
  4049d0:	mov	x0, x27
  4049d4:	bl	410280 <ferror@plt+0xd440>
  4049d8:	mov	w28, w0
  4049dc:	b	4044b8 <ferror@plt+0x1678>
  4049e0:	ldr	x0, [sp, #160]
  4049e4:	bl	402ba0 <free@plt>
  4049e8:	b	4044cc <ferror@plt+0x168c>
  4049ec:	cmp	x0, x3
  4049f0:	ccmp	x1, x25, #0x0, cc  // cc = lo, ul, last
  4049f4:	b.ls	404a54 <ferror@plt+0x1c14>  // b.plast
  4049f8:	ldrb	w0, [x0]
  4049fc:	ldrb	w0, [x20, x0]
  404a00:	ldrb	w2, [x25]
  404a04:	ldrb	w2, [x20, x2]
  404a08:	subs	w0, w0, w2
  404a0c:	b.ne	404be8 <ferror@plt+0x1da8>  // b.any
  404a10:	add	x25, x25, #0x1
  404a14:	add	x4, x4, #0x1
  404a18:	mov	x0, x4
  404a1c:	cmp	x4, x3
  404a20:	b.cs	404a30 <ferror@plt+0x1bf0>  // b.hs, b.nlast
  404a24:	ldrb	w2, [x4]
  404a28:	ldrb	w2, [x19, x2]
  404a2c:	cbnz	w2, 404a14 <ferror@plt+0x1bd4>
  404a30:	cmp	x25, x1
  404a34:	b.cs	404a54 <ferror@plt+0x1c14>  // b.hs, b.nlast
  404a38:	ldrb	w2, [x25]
  404a3c:	ldrb	w2, [x19, x2]
  404a40:	cbz	w2, 4049ec <ferror@plt+0x1bac>
  404a44:	add	x25, x25, #0x1
  404a48:	cmp	x1, x25
  404a4c:	b.ne	404a38 <ferror@plt+0x1bf8>  // b.any
  404a50:	mov	x25, x1
  404a54:	cmp	x0, x3
  404a58:	cset	w28, cc  // cc = lo, ul, last
  404a5c:	cmp	x1, x25
  404a60:	cset	w0, hi  // hi = pmore
  404a64:	sub	w28, w28, w0
  404a68:	b	4044cc <ferror@plt+0x168c>
  404a6c:	cmp	x0, x3
  404a70:	ccmp	x1, x25, #0x0, cc  // cc = lo, ul, last
  404a74:	b.ls	404acc <ferror@plt+0x1c8c>  // b.plast
  404a78:	ldrb	w0, [x0]
  404a7c:	ldrb	w2, [x25]
  404a80:	subs	w0, w0, w2
  404a84:	b.ne	404c20 <ferror@plt+0x1de0>  // b.any
  404a88:	add	x25, x25, #0x1
  404a8c:	add	x27, x27, #0x1
  404a90:	mov	x0, x27
  404a94:	cmp	x27, x3
  404a98:	b.cs	404aa8 <ferror@plt+0x1c68>  // b.hs, b.nlast
  404a9c:	ldrb	w2, [x27]
  404aa0:	ldrb	w2, [x19, x2]
  404aa4:	cbnz	w2, 404a8c <ferror@plt+0x1c4c>
  404aa8:	cmp	x25, x1
  404aac:	b.cs	404acc <ferror@plt+0x1c8c>  // b.hs, b.nlast
  404ab0:	ldrb	w2, [x25]
  404ab4:	ldrb	w2, [x19, x2]
  404ab8:	cbz	w2, 404a6c <ferror@plt+0x1c2c>
  404abc:	add	x25, x25, #0x1
  404ac0:	cmp	x1, x25
  404ac4:	b.ne	404ab0 <ferror@plt+0x1c70>  // b.any
  404ac8:	mov	x25, x1
  404acc:	cmp	x0, x3
  404ad0:	cset	w28, cc  // cc = lo, ul, last
  404ad4:	cmp	x1, x25
  404ad8:	cset	w0, hi  // hi = pmore
  404adc:	sub	w28, w28, w0
  404ae0:	b	4044cc <ferror@plt+0x168c>
  404ae4:	cbnz	x21, 404af4 <ferror@plt+0x1cb4>
  404ae8:	cmp	x22, #0x0
  404aec:	csetm	w28, ne  // ne = any
  404af0:	b	4044cc <ferror@plt+0x168c>
  404af4:	cbz	x22, 404bd8 <ferror@plt+0x1d98>
  404af8:	cbnz	x20, 404b28 <ferror@plt+0x1ce8>
  404afc:	cmp	x21, x22
  404b00:	csel	x2, x21, x22, ls  // ls = plast
  404b04:	mov	x1, x25
  404b08:	mov	x0, x27
  404b0c:	bl	402b00 <memcmp@plt>
  404b10:	mov	w28, w0
  404b14:	cbnz	w0, 404bec <ferror@plt+0x1dac>
  404b18:	cmp	x21, x22
  404b1c:	b.cc	404be0 <ferror@plt+0x1da0>  // b.lo, b.ul, b.last
  404b20:	cset	w28, ne  // ne = any
  404b24:	b	4044cc <ferror@plt+0x168c>
  404b28:	cmp	x27, x3
  404b2c:	ccmp	x25, x1, #0x2, cc  // cc = lo, ul, last
  404b30:	b.cs	404b18 <ferror@plt+0x1cd8>  // b.hs, b.nlast
  404b34:	ldrb	w0, [x27], #1
  404b38:	ldrb	w0, [x20, x0]
  404b3c:	ldrb	w2, [x25], #1
  404b40:	ldrb	w28, [x20, x2]
  404b44:	subs	w28, w0, w28
  404b48:	b.eq	404b28 <ferror@plt+0x1ce8>  // b.none
  404b4c:	b	404bec <ferror@plt+0x1dac>
  404b50:	ldr	x1, [sp, #104]
  404b54:	ldr	x22, [x1, #8]
  404b58:	sub	x0, x22, #0x1
  404b5c:	ldr	x22, [x1]
  404b60:	add	x22, x22, x0
  404b64:	ldr	x1, [sp, #112]
  404b68:	ldr	x21, [x1, #8]
  404b6c:	sub	x0, x21, #0x1
  404b70:	ldr	x21, [x1]
  404b74:	add	x21, x21, x0
  404b78:	b	404504 <ferror@plt+0x16c4>
  404b7c:	ldr	x0, [sp, #104]
  404b80:	ldr	x27, [x0]
  404b84:	ldr	x0, [sp, #112]
  404b88:	ldr	x25, [x0]
  404b8c:	ldrb	w0, [x26, #48]
  404b90:	cbz	w0, 404530 <ferror@plt+0x16f0>
  404b94:	cmp	x22, x27
  404b98:	b.ls	404bb4 <ferror@plt+0x1d74>  // b.plast
  404b9c:	ldrb	w0, [x27]
  404ba0:	ldrb	w0, [x24, w0, sxtw]
  404ba4:	cbz	w0, 404bb4 <ferror@plt+0x1d74>
  404ba8:	add	x27, x27, #0x1
  404bac:	cmp	x22, x27
  404bb0:	b.ne	404b9c <ferror@plt+0x1d5c>  // b.any
  404bb4:	cmp	x21, x25
  404bb8:	b.ls	404530 <ferror@plt+0x16f0>  // b.plast
  404bbc:	ldrb	w0, [x25]
  404bc0:	ldrb	w0, [x24, w0, sxtw]
  404bc4:	cbz	w0, 404530 <ferror@plt+0x16f0>
  404bc8:	add	x25, x25, #0x1
  404bcc:	cmp	x21, x25
  404bd0:	b.ne	404bbc <ferror@plt+0x1d7c>  // b.any
  404bd4:	b	404530 <ferror@plt+0x16f0>
  404bd8:	mov	w28, #0x1                   	// #1
  404bdc:	b	404bec <ferror@plt+0x1dac>
  404be0:	mov	w28, #0xffffffff            	// #-1
  404be4:	b	404bec <ferror@plt+0x1dac>
  404be8:	mov	w28, w0
  404bec:	ldrb	w0, [x26, #55]
  404bf0:	cmp	w0, #0x0
  404bf4:	cneg	w28, w28, ne  // ne = any
  404bf8:	mov	w0, w28
  404bfc:	ldp	x19, x20, [sp, #16]
  404c00:	ldp	x21, x22, [sp, #32]
  404c04:	ldp	x23, x24, [sp, #48]
  404c08:	ldp	x25, x26, [sp, #64]
  404c0c:	ldp	x27, x28, [sp, #80]
  404c10:	ldp	x29, x30, [sp]
  404c14:	mov	x12, #0x21a0                	// #8608
  404c18:	add	sp, sp, x12
  404c1c:	ret
  404c20:	mov	w28, w0
  404c24:	b	404bec <ferror@plt+0x1dac>
  404c28:	add	x2, sp, #0x120
  404c2c:	mov	x1, x21
  404c30:	mov	x0, x27
  404c34:	bl	40a9a0 <ferror@plt+0x7b60>
  404c38:	add	x1, sp, #0x100
  404c3c:	add	x0, sp, #0x120
  404c40:	bl	40a8e8 <ferror@plt+0x7aa8>
  404c44:	ldr	x20, [sp, #168]
  404c48:	mov	x2, x20
  404c4c:	mov	x1, x22
  404c50:	mov	x0, x25
  404c54:	bl	40a9a0 <ferror@plt+0x7b60>
  404c58:	add	x19, sp, #0x110
  404c5c:	mov	x1, x19
  404c60:	mov	x0, x20
  404c64:	bl	40a8e8 <ferror@plt+0x7aa8>
  404c68:	mov	x2, #0x10                  	// #16
  404c6c:	mov	x1, x19
  404c70:	add	x0, sp, #0x100
  404c74:	bl	402b00 <memcmp@plt>
  404c78:	mov	w28, w0
  404c7c:	cbz	w0, 404968 <ferror@plt+0x1b28>
  404c80:	str	xzr, [sp, #128]
  404c84:	b	404d04 <ferror@plt+0x1ec4>
  404c88:	ldr	x25, [sp, #208]
  404c8c:	ldr	x21, [sp, #216]
  404c90:	ldr	x22, [sp, #224]
  404c94:	ldr	x23, [sp, #232]
  404c98:	str	x27, [sp, #144]
  404c9c:	ldr	x27, [sp, #200]
  404ca0:	str	x26, [sp, #176]
  404ca4:	ldr	x26, [sp, #192]
  404ca8:	ldr	x0, [sp, #144]
  404cac:	add	x19, x0, x20
  404cb0:	str	x19, [sp, #192]
  404cb4:	add	x2, sp, #0x120
  404cb8:	mov	x1, x20
  404cbc:	bl	40a9a0 <ferror@plt+0x7b60>
  404cc0:	add	x1, sp, #0x100
  404cc4:	add	x0, sp, #0x120
  404cc8:	bl	40a8e8 <ferror@plt+0x7aa8>
  404ccc:	ldr	x2, [sp, #168]
  404cd0:	ldr	x1, [sp, #176]
  404cd4:	mov	x0, x19
  404cd8:	bl	40a9a0 <ferror@plt+0x7b60>
  404cdc:	add	x19, sp, #0x110
  404ce0:	mov	x1, x19
  404ce4:	ldr	x0, [sp, #168]
  404ce8:	bl	40a8e8 <ferror@plt+0x7aa8>
  404cec:	mov	x2, #0x10                  	// #16
  404cf0:	mov	x1, x19
  404cf4:	add	x0, sp, #0x100
  404cf8:	bl	402b00 <memcmp@plt>
  404cfc:	cbz	w0, 404960 <ferror@plt+0x1b20>
  404d00:	mov	w28, w0
  404d04:	ldr	x0, [sp, #128]
  404d08:	bl	402ba0 <free@plt>
  404d0c:	b	4044b8 <ferror@plt+0x1678>
  404d10:	str	x27, [sp, #128]
  404d14:	cmp	x23, x25
  404d18:	b.ls	404c88 <ferror@plt+0x1e48>  // b.plast
  404d1c:	mov	x0, x25
  404d20:	bl	402780 <strlen@plt>
  404d24:	add	x0, x0, #0x1
  404d28:	add	x25, x25, x0
  404d2c:	cmp	x22, x21
  404d30:	ccmp	x23, x25, #0x2, ls  // ls = plast
  404d34:	b.ls	40493c <ferror@plt+0x1afc>  // b.plast
  404d38:	add	x2, sp, #0x120
  404d3c:	mov	x1, x20
  404d40:	mov	x0, x27
  404d44:	bl	40a9a0 <ferror@plt+0x7b60>
  404d48:	add	x0, x27, x20
  404d4c:	ldr	x2, [sp, #168]
  404d50:	mov	x1, x26
  404d54:	str	x0, [sp, #176]
  404d58:	bl	40a9a0 <ferror@plt+0x7b60>
  404d5c:	cbnz	w28, 404d88 <ferror@plt+0x1f48>
  404d60:	cmp	x20, x26
  404d64:	csel	x2, x20, x26, ls  // ls = plast
  404d68:	ldr	x1, [sp, #176]
  404d6c:	mov	x0, x27
  404d70:	bl	402b00 <memcmp@plt>
  404d74:	mov	w28, w0
  404d78:	cbnz	w0, 404d88 <ferror@plt+0x1f48>
  404d7c:	cmp	x20, x26
  404d80:	cset	w28, hi  // hi = pmore
  404d84:	sbc	w28, w28, wzr
  404d88:	ldr	x0, [sp, #144]
  404d8c:	cmp	x0, x19
  404d90:	b.hi	404804 <ferror@plt+0x19c4>  // b.pmore
  404d94:	cmp	x22, x21
  404d98:	b.hi	404848 <ferror@plt+0x1a08>  // b.pmore
  404d9c:	cmp	x23, x25
  404da0:	b.hi	404884 <ferror@plt+0x1a44>  // b.pmore
  404da4:	mov	x26, #0x0                   	// #0
  404da8:	mov	x20, #0x0                   	// #0
  404dac:	cmp	x22, x21
  404db0:	b.ls	404d14 <ferror@plt+0x1ed4>  // b.plast
  404db4:	mov	x0, x21
  404db8:	bl	402780 <strlen@plt>
  404dbc:	add	x0, x0, #0x1
  404dc0:	add	x21, x21, x0
  404dc4:	cmp	x23, x25
  404dc8:	b.ls	404d2c <ferror@plt+0x1eec>  // b.plast
  404dcc:	b	404d1c <ferror@plt+0x1edc>
  404dd0:	mov	x0, x21
  404dd4:	bl	402780 <strlen@plt>
  404dd8:	add	x0, x0, #0x1
  404ddc:	add	x21, x21, x0
  404de0:	str	x27, [sp, #128]
  404de4:	b	404d1c <ferror@plt+0x1edc>
  404de8:	mov	x26, #0x0                   	// #0
  404dec:	cmp	x19, x20
  404df0:	b.cc	4048b0 <ferror@plt+0x1a70>  // b.lo, b.ul, b.last
  404df4:	b	404db4 <ferror@plt+0x1f74>
  404df8:	stp	x29, x30, [sp, #-64]!
  404dfc:	mov	x29, sp
  404e00:	stp	x19, x20, [sp, #16]
  404e04:	mov	x19, x0
  404e08:	mov	x20, x1
  404e0c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  404e10:	ldr	x0, [x0, #2688]
  404e14:	cbz	x0, 404e3c <ferror@plt+0x1ffc>
  404e18:	mov	x0, x19
  404e1c:	bl	40430c <ferror@plt+0x14cc>
  404e20:	cbnz	w0, 404e78 <ferror@plt+0x2038>
  404e24:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  404e28:	ldrb	w1, [x1, #2721]
  404e2c:	cbnz	w1, 404e78 <ferror@plt+0x2038>
  404e30:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  404e34:	ldrb	w1, [x1, #2722]
  404e38:	cbnz	w1, 404e78 <ferror@plt+0x2038>
  404e3c:	stp	x21, x22, [sp, #32]
  404e40:	stp	x23, x24, [sp, #48]
  404e44:	ldr	x21, [x19, #8]
  404e48:	ldr	x23, [x20, #8]
  404e4c:	sub	x22, x23, #0x1
  404e50:	subs	x24, x21, #0x1
  404e54:	b.ne	404e84 <ferror@plt+0x2044>  // b.any
  404e58:	cmp	x22, #0x0
  404e5c:	csetm	w0, ne  // ne = any
  404e60:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  404e64:	ldrb	w1, [x1, #2884]
  404e68:	cmp	w1, #0x0
  404e6c:	cneg	w0, w0, ne  // ne = any
  404e70:	ldp	x21, x22, [sp, #32]
  404e74:	ldp	x23, x24, [sp, #48]
  404e78:	ldp	x19, x20, [sp, #16]
  404e7c:	ldp	x29, x30, [sp], #64
  404e80:	ret
  404e84:	mov	w0, #0x1                   	// #1
  404e88:	cbz	x22, 404e60 <ferror@plt+0x2020>
  404e8c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  404e90:	ldrb	w0, [x0, #2723]
  404e94:	cbnz	w0, 404ec8 <ferror@plt+0x2088>
  404e98:	cmp	x24, x22
  404e9c:	csel	x2, x24, x22, ls  // ls = plast
  404ea0:	ldr	x1, [x20]
  404ea4:	ldr	x0, [x19]
  404ea8:	bl	402b00 <memcmp@plt>
  404eac:	cbnz	w0, 404e60 <ferror@plt+0x2020>
  404eb0:	mov	w0, #0xffffffff            	// #-1
  404eb4:	cmp	x24, x22
  404eb8:	b.cc	404e60 <ferror@plt+0x2020>  // b.lo, b.ul, b.last
  404ebc:	cmp	x21, x23
  404ec0:	cset	w0, ne  // ne = any
  404ec4:	b	404e60 <ferror@plt+0x2020>
  404ec8:	mov	x3, x23
  404ecc:	ldr	x2, [x20]
  404ed0:	mov	x1, x21
  404ed4:	ldr	x0, [x19]
  404ed8:	bl	410280 <ferror@plt+0xd440>
  404edc:	b	404e60 <ferror@plt+0x2020>
  404ee0:	stp	x29, x30, [sp, #-80]!
  404ee4:	mov	x29, sp
  404ee8:	stp	x19, x20, [sp, #16]
  404eec:	stp	x21, x22, [sp, #32]
  404ef0:	stp	x23, x24, [sp, #48]
  404ef4:	mov	x21, x0
  404ef8:	mov	x19, x2
  404efc:	and	w24, w3, #0xff
  404f00:	cmp	x1, #0x2
  404f04:	b.eq	404f48 <ferror@plt+0x2108>  // b.none
  404f08:	str	x25, [sp, #64]
  404f0c:	mov	x23, x1
  404f10:	lsr	x22, x1, #1
  404f14:	sub	x25, x1, x22
  404f18:	neg	x20, x22, lsl #5
  404f1c:	add	x0, x0, x20
  404f20:	cbz	w24, 405070 <ferror@plt+0x2230>
  404f24:	mov	w3, #0x1                   	// #1
  404f28:	add	x2, x2, x20
  404f2c:	mov	x1, x25
  404f30:	bl	404ee0 <ferror@plt+0x20a0>
  404f34:	cmp	x23, #0x3
  404f38:	b.hi	4050c8 <ferror@plt+0x2288>  // b.pmore
  404f3c:	add	x20, x19, x20
  404f40:	sub	x19, x19, #0x20
  404f44:	b	404fd8 <ferror@plt+0x2198>
  404f48:	sub	x1, x0, #0x40
  404f4c:	sub	x0, x0, #0x20
  404f50:	bl	404df8 <ferror@plt+0x1fb8>
  404f54:	cbz	w24, 404f9c <ferror@plt+0x215c>
  404f58:	cmp	w0, #0x0
  404f5c:	cset	w0, gt
  404f60:	mvn	w1, w0
  404f64:	sbfiz	x1, x1, #5, #32
  404f68:	add	x1, x21, x1
  404f6c:	ldp	x2, x3, [x1]
  404f70:	stp	x2, x3, [x19, #-32]
  404f74:	ldp	x2, x3, [x1, #16]
  404f78:	stp	x2, x3, [x19, #-16]
  404f7c:	sub	w0, w0, #0x2
  404f80:	sbfiz	x0, x0, #5, #32
  404f84:	add	x21, x21, x0
  404f88:	ldp	x0, x1, [x21]
  404f8c:	stp	x0, x1, [x19, #-64]
  404f90:	ldp	x0, x1, [x21, #16]
  404f94:	stp	x0, x1, [x19, #-48]
  404f98:	b	40503c <ferror@plt+0x21fc>
  404f9c:	cmp	w0, #0x0
  404fa0:	b.le	40503c <ferror@plt+0x21fc>
  404fa4:	ldp	x2, x3, [x21, #-32]
  404fa8:	stp	x2, x3, [x19, #-32]
  404fac:	ldp	x0, x1, [x21, #-16]
  404fb0:	stp	x0, x1, [x19, #-16]
  404fb4:	ldp	x4, x5, [x21, #-64]
  404fb8:	stp	x4, x5, [x21, #-32]
  404fbc:	ldp	x4, x5, [x21, #-48]
  404fc0:	stp	x4, x5, [x21, #-16]
  404fc4:	stp	x2, x3, [x21, #-64]
  404fc8:	stp	x0, x1, [x21, #-48]
  404fcc:	b	40503c <ferror@plt+0x21fc>
  404fd0:	mov	x20, x23
  404fd4:	sub	x19, x19, #0x20
  404fd8:	sub	x24, x21, #0x20
  404fdc:	sub	x23, x20, #0x20
  404fe0:	mov	x1, x23
  404fe4:	mov	x0, x24
  404fe8:	bl	404df8 <ferror@plt+0x1fb8>
  404fec:	cmp	w0, #0x0
  404ff0:	b.le	405050 <ferror@plt+0x2210>
  404ff4:	mov	x3, x19
  404ff8:	ldp	x0, x1, [x20, #-32]
  404ffc:	stp	x0, x1, [x19]
  405000:	ldp	x0, x1, [x20, #-16]
  405004:	stp	x0, x1, [x19, #16]
  405008:	subs	x25, x25, #0x1
  40500c:	b.ne	404fd0 <ferror@plt+0x2190>  // b.any
  405010:	mov	x0, #0xffffffffffffffe0    	// #-32
  405014:	add	x1, x3, x0
  405018:	add	x2, x21, x0
  40501c:	ldp	x4, x5, [x2]
  405020:	stp	x4, x5, [x1]
  405024:	ldp	x4, x5, [x2, #16]
  405028:	stp	x4, x5, [x1, #16]
  40502c:	sub	x0, x0, #0x20
  405030:	subs	x22, x22, #0x1
  405034:	b.ne	405014 <ferror@plt+0x21d4>  // b.any
  405038:	ldr	x25, [sp, #64]
  40503c:	ldp	x19, x20, [sp, #16]
  405040:	ldp	x21, x22, [sp, #32]
  405044:	ldp	x23, x24, [sp, #48]
  405048:	ldp	x29, x30, [sp], #80
  40504c:	ret
  405050:	ldp	x0, x1, [x21, #-32]
  405054:	stp	x0, x1, [x19]
  405058:	ldp	x0, x1, [x21, #-16]
  40505c:	stp	x0, x1, [x19, #16]
  405060:	subs	x22, x22, #0x1
  405064:	b.eq	4050e0 <ferror@plt+0x22a0>  // b.none
  405068:	mov	x21, x24
  40506c:	b	404fd4 <ferror@plt+0x2194>
  405070:	mov	w3, #0x0                   	// #0
  405074:	mov	x1, x25
  405078:	bl	404ee0 <ferror@plt+0x20a0>
  40507c:	cmp	x23, #0x3
  405080:	b.hi	4050a4 <ferror@plt+0x2264>  // b.pmore
  405084:	ldp	x0, x1, [x21, #-32]
  405088:	stp	x0, x1, [x19, #-32]
  40508c:	ldp	x0, x1, [x21, #-16]
  405090:	stp	x0, x1, [x19, #-16]
  405094:	mov	x0, x19
  405098:	mov	x19, x21
  40509c:	mov	x21, x0
  4050a0:	b	404f3c <ferror@plt+0x20fc>
  4050a4:	eor	w3, w24, #0x1
  4050a8:	mov	x2, x19
  4050ac:	mov	x1, x22
  4050b0:	mov	x0, x21
  4050b4:	bl	404ee0 <ferror@plt+0x20a0>
  4050b8:	mov	x0, x19
  4050bc:	mov	x19, x21
  4050c0:	mov	x21, x0
  4050c4:	b	404f3c <ferror@plt+0x20fc>
  4050c8:	eor	w3, w24, #0x1
  4050cc:	mov	x2, x19
  4050d0:	mov	x1, x22
  4050d4:	mov	x0, x21
  4050d8:	bl	404ee0 <ferror@plt+0x20a0>
  4050dc:	b	404f3c <ferror@plt+0x20fc>
  4050e0:	ldr	x25, [sp, #64]
  4050e4:	b	40503c <ferror@plt+0x21fc>
  4050e8:	stp	x29, x30, [sp, #-48]!
  4050ec:	mov	x29, sp
  4050f0:	stp	x19, x20, [sp, #16]
  4050f4:	str	x21, [sp, #32]
  4050f8:	mov	x19, x0
  4050fc:	mov	x21, x1
  405100:	mov	x20, x2
  405104:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  405108:	ldrb	w0, [x0, #2721]
  40510c:	cbz	w0, 405150 <ferror@plt+0x2310>
  405110:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  405114:	ldr	x0, [x0, #2888]
  405118:	cbz	x0, 405134 <ferror@plt+0x22f4>
  40511c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  405120:	add	x1, x1, #0x568
  405124:	add	x1, x1, #0x5e0
  405128:	mov	x0, x19
  40512c:	bl	404df8 <ferror@plt+0x1fb8>
  405130:	cbz	w0, 405160 <ferror@plt+0x2320>
  405134:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  405138:	add	x0, x0, #0x568
  40513c:	add	x0, x0, #0x5e0
  405140:	ldp	x2, x3, [x19]
  405144:	stp	x2, x3, [x0]
  405148:	ldp	x2, x3, [x19, #16]
  40514c:	stp	x2, x3, [x0, #16]
  405150:	mov	x2, x20
  405154:	mov	x1, x21
  405158:	mov	x0, x19
  40515c:	bl	403e44 <ferror@plt+0x1004>
  405160:	ldp	x19, x20, [sp, #16]
  405164:	ldr	x21, [sp, #32]
  405168:	ldp	x29, x30, [sp], #48
  40516c:	ret
  405170:	cmp	w0, w1
  405174:	b.ne	40517c <ferror@plt+0x233c>  // b.any
  405178:	ret
  40517c:	stp	x29, x30, [sp, #-32]!
  405180:	mov	x29, sp
  405184:	str	x19, [sp, #16]
  405188:	mov	w19, w0
  40518c:	bl	402d70 <dup2@plt>
  405190:	mov	w0, w19
  405194:	bl	402a10 <close@plt>
  405198:	ldr	x19, [sp, #16]
  40519c:	ldp	x29, x30, [sp], #32
  4051a0:	ret
  4051a4:	stp	x29, x30, [sp, #-32]!
  4051a8:	mov	x29, sp
  4051ac:	str	w0, [sp, #24]
  4051b0:	add	x1, sp, #0x10
  4051b4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4051b8:	ldr	x0, [x0, #2920]
  4051bc:	bl	40bff8 <ferror@plt+0x91b8>
  4051c0:	cbz	x0, 4051d8 <ferror@plt+0x2398>
  4051c4:	mov	w1, #0x2                   	// #2
  4051c8:	strb	w1, [x0, #12]
  4051cc:	mov	w0, #0x1                   	// #1
  4051d0:	ldp	x29, x30, [sp], #32
  4051d4:	ret
  4051d8:	mov	w0, #0x0                   	// #0
  4051dc:	b	4051d0 <ferror@plt+0x2390>
  4051e0:	stp	x29, x30, [sp, #-48]!
  4051e4:	mov	x29, sp
  4051e8:	stp	x19, x20, [sp, #16]
  4051ec:	mov	w19, w0
  4051f0:	cmp	w0, #0x0
  4051f4:	csinv	w0, w0, wzr, ne  // ne = any
  4051f8:	cset	w2, eq  // eq = none
  4051fc:	add	x1, sp, #0x2c
  405200:	bl	402e10 <waitpid@plt>
  405204:	tbnz	w0, #31, 405254 <ferror@plt+0x2414>
  405208:	mov	w20, w0
  40520c:	cmp	w0, #0x0
  405210:	b.le	405244 <ferror@plt+0x2404>
  405214:	cmp	w19, #0x0
  405218:	b.le	405298 <ferror@plt+0x2458>
  40521c:	ldr	w0, [sp, #44]
  405220:	ubfx	x1, x0, #8, #8
  405224:	and	w0, w0, #0x7f
  405228:	orr	w0, w1, w0
  40522c:	cbnz	w0, 4052a8 <ferror@plt+0x2468>
  405230:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  405234:	add	x0, x0, #0x568
  405238:	ldr	w1, [x0, #1552]
  40523c:	sub	w1, w1, #0x1
  405240:	str	w1, [x0, #1552]
  405244:	mov	w0, w20
  405248:	ldp	x19, x20, [sp, #16]
  40524c:	ldp	x29, x30, [sp], #48
  405250:	ret
  405254:	bl	402db0 <__errno_location@plt>
  405258:	ldr	w20, [x0]
  40525c:	mov	w2, #0x5                   	// #5
  405260:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  405264:	add	x1, x1, #0x200
  405268:	mov	x0, #0x0                   	// #0
  40526c:	bl	402d20 <dcgettext@plt>
  405270:	mov	x19, x0
  405274:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  405278:	ldr	x1, [x0, #2928]
  40527c:	mov	w0, #0x4                   	// #4
  405280:	bl	40e3ec <ferror@plt+0xb5ac>
  405284:	mov	x3, x0
  405288:	mov	x2, x19
  40528c:	mov	w1, w20
  405290:	mov	w0, #0x2                   	// #2
  405294:	bl	4027b0 <error@plt>
  405298:	bl	4051a4 <ferror@plt+0x2364>
  40529c:	and	w0, w0, #0xff
  4052a0:	cbz	w0, 405244 <ferror@plt+0x2404>
  4052a4:	b	40521c <ferror@plt+0x23dc>
  4052a8:	mov	w2, #0x5                   	// #5
  4052ac:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4052b0:	add	x1, x1, #0x218
  4052b4:	mov	x0, #0x0                   	// #0
  4052b8:	bl	402d20 <dcgettext@plt>
  4052bc:	mov	x19, x0
  4052c0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4052c4:	ldr	x1, [x0, #2928]
  4052c8:	mov	w0, #0x4                   	// #4
  4052cc:	bl	40e3ec <ferror@plt+0xb5ac>
  4052d0:	mov	x3, x0
  4052d4:	mov	x2, x19
  4052d8:	mov	w1, #0x0                   	// #0
  4052dc:	mov	w0, #0x2                   	// #2
  4052e0:	bl	4027b0 <error@plt>
  4052e4:	stp	x29, x30, [sp, #-208]!
  4052e8:	mov	x29, sp
  4052ec:	stp	x19, x20, [sp, #16]
  4052f0:	stp	x21, x22, [sp, #32]
  4052f4:	stp	x23, x24, [sp, #48]
  4052f8:	mov	x20, x0
  4052fc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  405300:	add	x0, x0, #0x568
  405304:	ldr	x19, [x0, #1160]
  405308:	add	x0, x19, #0xd
  40530c:	cmp	x20, x0
  405310:	b.eq	405384 <ferror@plt+0x2544>  // b.none
  405314:	mov	x21, x19
  405318:	ldr	x19, [x19]
  40531c:	add	x0, x19, #0xd
  405320:	cmp	x20, x0
  405324:	b.ne	405314 <ferror@plt+0x24d4>  // b.any
  405328:	ldrb	w0, [x19, #12]
  40532c:	cmp	w0, #0x1
  405330:	b.eq	405394 <ferror@plt+0x2554>  // b.none
  405334:	ldr	x23, [x19]
  405338:	add	x0, sp, #0x48
  40533c:	bl	40377c <ferror@plt+0x93c>
  405340:	mov	x0, x20
  405344:	bl	402e20 <unlink@plt>
  405348:	mov	w22, w0
  40534c:	bl	402db0 <__errno_location@plt>
  405350:	ldr	w24, [x0]
  405354:	str	x23, [x21]
  405358:	add	x0, sp, #0x48
  40535c:	bl	4037bc <ferror@plt+0x97c>
  405360:	cbnz	w22, 4053b4 <ferror@plt+0x2574>
  405364:	cbz	x23, 4053f4 <ferror@plt+0x25b4>
  405368:	mov	x0, x19
  40536c:	bl	402ba0 <free@plt>
  405370:	ldp	x19, x20, [sp, #16]
  405374:	ldp	x21, x22, [sp, #32]
  405378:	ldp	x23, x24, [sp, #48]
  40537c:	ldp	x29, x30, [sp], #208
  405380:	ret
  405384:	adrp	x21, 428000 <_obstack_memory_used@@Base+0x16a28>
  405388:	add	x21, x21, #0x568
  40538c:	add	x21, x21, #0x488
  405390:	b	405328 <ferror@plt+0x24e8>
  405394:	ldr	w22, [x19, #8]
  405398:	mov	w0, w22
  40539c:	bl	4051a4 <ferror@plt+0x2364>
  4053a0:	and	w0, w0, #0xff
  4053a4:	cbz	w0, 405334 <ferror@plt+0x24f4>
  4053a8:	mov	w0, w22
  4053ac:	bl	4051e0 <ferror@plt+0x23a0>
  4053b0:	b	405334 <ferror@plt+0x24f4>
  4053b4:	mov	w2, #0x5                   	// #5
  4053b8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4053bc:	add	x1, x1, #0x238
  4053c0:	mov	x0, #0x0                   	// #0
  4053c4:	bl	402d20 <dcgettext@plt>
  4053c8:	mov	x22, x0
  4053cc:	mov	x2, x20
  4053d0:	mov	w1, #0x3                   	// #3
  4053d4:	mov	w0, #0x0                   	// #0
  4053d8:	bl	40e4ec <ferror@plt+0xb6ac>
  4053dc:	mov	x3, x0
  4053e0:	mov	x2, x22
  4053e4:	mov	w1, w24
  4053e8:	mov	w0, #0x0                   	// #0
  4053ec:	bl	4027b0 <error@plt>
  4053f0:	b	405364 <ferror@plt+0x2524>
  4053f4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4053f8:	str	x21, [x0, #1152]
  4053fc:	b	405368 <ferror@plt+0x2528>
  405400:	stp	x29, x30, [sp, #-32]!
  405404:	mov	x29, sp
  405408:	str	x19, [sp, #16]
  40540c:	adrp	x19, 428000 <_obstack_memory_used@@Base+0x16a28>
  405410:	add	x19, x19, #0x568
  405414:	ldr	w0, [x19, #1552]
  405418:	cmp	w0, #0x0
  40541c:	b.le	40542c <ferror@plt+0x25ec>
  405420:	mov	w0, #0x0                   	// #0
  405424:	bl	4051e0 <ferror@plt+0x23a0>
  405428:	cbnz	w0, 405414 <ferror@plt+0x25d4>
  40542c:	ldr	x19, [sp, #16]
  405430:	ldp	x29, x30, [sp], #32
  405434:	ret
  405438:	stp	x29, x30, [sp, #-224]!
  40543c:	mov	x29, sp
  405440:	stp	x19, x20, [sp, #16]
  405444:	str	x25, [sp, #64]
  405448:	mov	x25, x0
  40544c:	mov	x19, x1
  405450:	mov	w1, #0x80000               	// #524288
  405454:	bl	40c99c <ferror@plt+0x9b5c>
  405458:	tbnz	w0, #31, 4055a4 <ferror@plt+0x2764>
  40545c:	stp	x23, x24, [sp, #48]
  405460:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  405464:	ldr	w0, [x0, #1160]
  405468:	add	w0, w0, #0x1
  40546c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  405470:	ldr	w1, [x1, #2936]
  405474:	cmp	w0, w1
  405478:	b.cc	40549c <ferror@plt+0x265c>  // b.lo, b.ul, b.last
  40547c:	sub	x23, x19, #0x1
  405480:	cbz	x19, 405520 <ferror@plt+0x26e0>
  405484:	stp	x21, x22, [sp, #32]
  405488:	str	d8, [sp, #72]
  40548c:	fmov	d8, #2.500000000000000000e-01
  405490:	adrp	x21, 428000 <_obstack_memory_used@@Base+0x16a28>
  405494:	add	x21, x21, #0x568
  405498:	b	4054e4 <ferror@plt+0x26a4>
  40549c:	mov	w0, #0xffffffff            	// #-1
  4054a0:	bl	4051e0 <ferror@plt+0x23a0>
  4054a4:	bl	405400 <ferror@plt+0x25c0>
  4054a8:	b	40547c <ferror@plt+0x263c>
  4054ac:	str	x24, [x21, #1160]
  4054b0:	add	x0, sp, #0x58
  4054b4:	bl	4037bc <ferror@plt+0x97c>
  4054b8:	str	w22, [x20]
  4054bc:	cmp	w19, #0x0
  4054c0:	ccmp	w22, #0xb, #0x0, lt  // lt = tstop
  4054c4:	b.ne	40553c <ferror@plt+0x26fc>  // b.any
  4054c8:	fmov	d0, d8
  4054cc:	bl	4102e8 <ferror@plt+0xd4a8>
  4054d0:	fadd	d8, d8, d8
  4054d4:	bl	405400 <ferror@plt+0x25c0>
  4054d8:	sub	x23, x23, #0x1
  4054dc:	cmn	x23, #0x1
  4054e0:	b.eq	405540 <ferror@plt+0x2700>  // b.none
  4054e4:	add	x0, sp, #0x58
  4054e8:	bl	40377c <ferror@plt+0x93c>
  4054ec:	ldr	x24, [x21, #1160]
  4054f0:	str	xzr, [x21, #1160]
  4054f4:	bl	402840 <fork@plt>
  4054f8:	mov	w19, w0
  4054fc:	bl	402db0 <__errno_location@plt>
  405500:	mov	x20, x0
  405504:	ldr	w22, [x0]
  405508:	cbnz	w19, 4054ac <ferror@plt+0x266c>
  40550c:	add	x0, sp, #0x58
  405510:	bl	4037bc <ferror@plt+0x97c>
  405514:	str	w22, [x20]
  405518:	ldp	x21, x22, [sp, #32]
  40551c:	ldr	d8, [sp, #72]
  405520:	mov	w0, #0x0                   	// #0
  405524:	bl	402a10 <close@plt>
  405528:	mov	w0, #0x1                   	// #1
  40552c:	bl	402a10 <close@plt>
  405530:	mov	w19, #0x0                   	// #0
  405534:	ldp	x23, x24, [sp, #48]
  405538:	b	405590 <ferror@plt+0x2750>
  40553c:	tbz	w19, #31, 405570 <ferror@plt+0x2730>
  405540:	bl	402db0 <__errno_location@plt>
  405544:	mov	x20, x0
  405548:	ldr	w21, [x0]
  40554c:	ldr	w0, [x25]
  405550:	bl	402a10 <close@plt>
  405554:	ldr	w0, [x25, #4]
  405558:	bl	402a10 <close@plt>
  40555c:	str	w21, [x20]
  405560:	ldp	x21, x22, [sp, #32]
  405564:	ldp	x23, x24, [sp, #48]
  405568:	ldr	d8, [sp, #72]
  40556c:	b	405590 <ferror@plt+0x2750>
  405570:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  405574:	add	x0, x0, #0x568
  405578:	ldr	w1, [x0, #1552]
  40557c:	add	w1, w1, #0x1
  405580:	str	w1, [x0, #1552]
  405584:	ldp	x21, x22, [sp, #32]
  405588:	ldp	x23, x24, [sp, #48]
  40558c:	ldr	d8, [sp, #72]
  405590:	mov	w0, w19
  405594:	ldp	x19, x20, [sp, #16]
  405598:	ldr	x25, [sp, #64]
  40559c:	ldp	x29, x30, [sp], #224
  4055a0:	ret
  4055a4:	mov	w19, #0xffffffff            	// #-1
  4055a8:	b	405590 <ferror@plt+0x2750>
  4055ac:	stp	x29, x30, [sp, #-48]!
  4055b0:	mov	x29, sp
  4055b4:	stp	x19, x20, [sp, #16]
  4055b8:	mov	w20, w0
  4055bc:	mov	x19, x1
  4055c0:	mov	x0, x1
  4055c4:	bl	402780 <strlen@plt>
  4055c8:	mov	x2, x0
  4055cc:	mov	x1, x19
  4055d0:	mov	w0, #0x2                   	// #2
  4055d4:	bl	402a60 <write@plt>
  4055d8:	cbnz	w20, 4055f8 <ferror@plt+0x27b8>
  4055dc:	mov	x2, #0x1                   	// #1
  4055e0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4055e4:	add	x1, x1, #0x7d0
  4055e8:	mov	w0, #0x2                   	// #2
  4055ec:	bl	402a60 <write@plt>
  4055f0:	mov	w0, #0x2                   	// #2
  4055f4:	bl	402750 <_exit@plt>
  4055f8:	add	x1, sp, #0x20
  4055fc:	mov	w0, w20
  405600:	bl	40c3a8 <ferror@plt+0x9568>
  405604:	mov	x19, x0
  405608:	mov	x2, #0x8                   	// #8
  40560c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  405610:	add	x1, x1, #0x258
  405614:	mov	w0, #0x2                   	// #2
  405618:	bl	402a60 <write@plt>
  40561c:	mov	x0, x19
  405620:	bl	402780 <strlen@plt>
  405624:	mov	x2, x0
  405628:	mov	x1, x19
  40562c:	mov	w0, #0x2                   	// #2
  405630:	bl	402a60 <write@plt>
  405634:	b	4055dc <ferror@plt+0x279c>
  405638:	stp	x29, x30, [sp, #-32]!
  40563c:	mov	x29, sp
  405640:	str	x19, [sp, #16]
  405644:	mov	x19, x0
  405648:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40564c:	ldr	x0, [x0, #2920]
  405650:	cbz	x0, 40567c <ferror@plt+0x283c>
  405654:	mov	w0, #0x1                   	// #1
  405658:	strb	w0, [x19, #12]
  40565c:	mov	x1, x19
  405660:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  405664:	ldr	x0, [x0, #2920]
  405668:	bl	40bfb8 <ferror@plt+0x9178>
  40566c:	cbz	x0, 4056ac <ferror@plt+0x286c>
  405670:	ldr	x19, [sp, #16]
  405674:	ldp	x29, x30, [sp], #32
  405678:	ret
  40567c:	mov	x4, #0x0                   	// #0
  405680:	adrp	x3, 402000 <mbrtowc@plt-0x710>
  405684:	add	x3, x3, #0xfb0
  405688:	adrp	x2, 402000 <mbrtowc@plt-0x710>
  40568c:	add	x2, x2, #0xfa0
  405690:	mov	x1, #0x0                   	// #0
  405694:	mov	x0, #0x2f                  	// #47
  405698:	bl	40ba80 <ferror@plt+0x8c40>
  40569c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  4056a0:	str	x0, [x1, #2920]
  4056a4:	cbnz	x0, 405654 <ferror@plt+0x2814>
  4056a8:	bl	4100ec <ferror@plt+0xd2ac>
  4056ac:	bl	4100ec <ferror@plt+0xd2ac>
  4056b0:	stp	x29, x30, [sp, #-224]!
  4056b4:	mov	x29, sp
  4056b8:	stp	x19, x20, [sp, #16]
  4056bc:	stp	x21, x22, [sp, #32]
  4056c0:	stp	x23, x24, [sp, #48]
  4056c4:	str	x25, [sp, #64]
  4056c8:	mov	x23, x0
  4056cc:	and	w25, w1, #0xff
  4056d0:	adrp	x20, 428000 <_obstack_memory_used@@Base+0x16a28>
  4056d4:	add	x20, x20, #0x568
  4056d8:	ldr	x1, [x20, #1560]
  4056dc:	ldr	x0, [x20, #1328]
  4056e0:	ldr	x24, [x0, x1, lsl #3]
  4056e4:	mov	x0, x24
  4056e8:	bl	402780 <strlen@plt>
  4056ec:	mov	x21, x0
  4056f0:	add	x0, x0, #0x20
  4056f4:	and	x0, x0, #0xfffffffffffffff8
  4056f8:	bl	40fe60 <ferror@plt+0xd020>
  4056fc:	mov	x19, x0
  405700:	add	x22, x0, #0xd
  405704:	mov	x2, x21
  405708:	mov	x1, x24
  40570c:	mov	x0, x22
  405710:	bl	402720 <memcpy@plt>
  405714:	adrp	x0, 412000 <_obstack_memory_used@@Base+0xa28>
  405718:	add	x0, x0, #0x2e0
  40571c:	add	x1, x22, x21
  405720:	ldr	x2, [x0]
  405724:	str	x2, [x22, x21]
  405728:	ldr	w0, [x0, #8]
  40572c:	str	w0, [x1, #8]
  405730:	str	xzr, [x19]
  405734:	ldr	x1, [x20, #1560]
  405738:	add	x1, x1, #0x1
  40573c:	str	x1, [x20, #1560]
  405740:	ldr	x0, [x20, #1320]
  405744:	cmp	x1, x0
  405748:	b.eq	4057f4 <ferror@plt+0x29b4>  // b.none
  40574c:	add	x0, sp, #0x58
  405750:	bl	40377c <ferror@plt+0x93c>
  405754:	mov	w1, #0x80000               	// #524288
  405758:	mov	x0, x22
  40575c:	bl	40f35c <ferror@plt+0xc51c>
  405760:	mov	w20, w0
  405764:	tbnz	w0, #31, 4058b4 <ferror@plt+0x2a74>
  405768:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40576c:	add	x0, x0, #0x3b0
  405770:	ldr	x1, [x0, #208]
  405774:	str	x19, [x1]
  405778:	str	x19, [x0, #208]
  40577c:	bl	402db0 <__errno_location@plt>
  405780:	mov	x21, x0
  405784:	ldr	w24, [x0]
  405788:	add	x0, sp, #0x58
  40578c:	bl	4037bc <ferror@plt+0x97c>
  405790:	str	w24, [x21]
  405794:	strb	wzr, [x19, #12]
  405798:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40579c:	ldr	x0, [x0, #2928]
  4057a0:	cbz	x0, 4057c0 <ferror@plt+0x2980>
  4057a4:	mov	x1, #0x4                   	// #4
  4057a8:	add	x0, sp, #0x58
  4057ac:	bl	405438 <ferror@plt+0x25f8>
  4057b0:	str	w0, [x19, #8]
  4057b4:	cmp	w0, #0x0
  4057b8:	b.gt	405838 <ferror@plt+0x29f8>
  4057bc:	cbz	w0, 405858 <ferror@plt+0x2a18>
  4057c0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4057c4:	add	x1, x1, #0x2b8
  4057c8:	mov	w0, w20
  4057cc:	bl	4029a0 <fdopen@plt>
  4057d0:	str	x0, [x23]
  4057d4:	cbz	x0, 40589c <ferror@plt+0x2a5c>
  4057d8:	mov	x0, x19
  4057dc:	ldp	x19, x20, [sp, #16]
  4057e0:	ldp	x21, x22, [sp, #32]
  4057e4:	ldp	x23, x24, [sp, #48]
  4057e8:	ldr	x25, [sp, #64]
  4057ec:	ldp	x29, x30, [sp], #224
  4057f0:	ret
  4057f4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4057f8:	str	xzr, [x0, #2944]
  4057fc:	b	40574c <ferror@plt+0x290c>
  405800:	mov	w2, #0x5                   	// #5
  405804:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  405808:	add	x1, x1, #0x268
  40580c:	mov	x0, #0x0                   	// #0
  405810:	bl	402d20 <dcgettext@plt>
  405814:	mov	x19, x0
  405818:	mov	x1, x24
  40581c:	mov	w0, #0x4                   	// #4
  405820:	bl	40e3ec <ferror@plt+0xb5ac>
  405824:	mov	x3, x0
  405828:	mov	x2, x19
  40582c:	mov	w1, w21
  405830:	mov	w0, #0x2                   	// #2
  405834:	bl	4027b0 <error@plt>
  405838:	mov	w0, w20
  40583c:	bl	402a10 <close@plt>
  405840:	ldr	w0, [sp, #88]
  405844:	bl	402a10 <close@plt>
  405848:	ldr	w20, [sp, #92]
  40584c:	mov	x0, x19
  405850:	bl	405638 <ferror@plt+0x27f8>
  405854:	b	4057c0 <ferror@plt+0x2980>
  405858:	ldr	w0, [sp, #92]
  40585c:	bl	402a10 <close@plt>
  405860:	mov	w1, #0x1                   	// #1
  405864:	mov	w0, w20
  405868:	bl	405170 <ferror@plt+0x2330>
  40586c:	mov	w1, #0x0                   	// #0
  405870:	ldr	w0, [sp, #88]
  405874:	bl	405170 <ferror@plt+0x2330>
  405878:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40587c:	ldr	x0, [x0, #2928]
  405880:	mov	x2, #0x0                   	// #0
  405884:	mov	x1, x0
  405888:	bl	402dc0 <execlp@plt>
  40588c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  405890:	add	x1, x1, #0x290
  405894:	ldr	w0, [x21]
  405898:	bl	4055ac <ferror@plt+0x276c>
  40589c:	mov	w2, #0x5                   	// #5
  4058a0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4058a4:	add	x1, x1, #0x2c0
  4058a8:	bl	402d20 <dcgettext@plt>
  4058ac:	mov	x1, x22
  4058b0:	bl	403990 <ferror@plt+0xb50>
  4058b4:	bl	402db0 <__errno_location@plt>
  4058b8:	mov	x20, x0
  4058bc:	ldr	w21, [x0]
  4058c0:	add	x0, sp, #0x58
  4058c4:	bl	4037bc <ferror@plt+0x97c>
  4058c8:	str	w21, [x20]
  4058cc:	cmp	w21, #0x18
  4058d0:	cset	w0, ne  // ne = any
  4058d4:	eor	w25, w25, #0x1
  4058d8:	orr	w25, w0, w25
  4058dc:	cbnz	w25, 405800 <ferror@plt+0x29c0>
  4058e0:	mov	x0, x19
  4058e4:	bl	402ba0 <free@plt>
  4058e8:	mov	x19, #0x0                   	// #0
  4058ec:	b	4057d8 <ferror@plt+0x2998>
  4058f0:	stp	x29, x30, [sp, #-64]!
  4058f4:	mov	x29, sp
  4058f8:	stp	x19, x20, [sp, #16]
  4058fc:	stp	x21, x22, [sp, #32]
  405900:	stp	x23, x24, [sp, #48]
  405904:	mov	x19, x1
  405908:	mov	x21, x3
  40590c:	mov	x22, x4
  405910:	tst	w5, #0xff
  405914:	b.eq	405998 <ferror@plt+0x2b58>  // b.none
  405918:	ldr	x1, [x0, #40]
  40591c:	lsr	x3, x1, #1
  405920:	sub	x1, x1, x3
  405924:	sub	x20, x2, x4, lsl #5
  405928:	sub	x24, x20, x3, lsl #5
  40592c:	add	x2, x0, #0x10
  405930:	add	x23, x19, #0x88
  405934:	str	x20, [x19, #16]
  405938:	str	x20, [x19]
  40593c:	str	x24, [x19, #24]
  405940:	str	x24, [x19, #8]
  405944:	str	x2, [x19, #32]
  405948:	str	x3, [x19, #40]
  40594c:	str	x1, [x19, #48]
  405950:	str	x0, [x19, #56]
  405954:	ldr	w0, [x0, #80]
  405958:	add	w0, w0, #0x1
  40595c:	str	w0, [x19, #80]
  405960:	strb	wzr, [x19, #84]
  405964:	mov	x1, #0x0                   	// #0
  405968:	add	x0, x19, #0x58
  40596c:	bl	402a00 <pthread_mutex_init@plt>
  405970:	cmp	x21, #0x1
  405974:	b.hi	4059b4 <ferror@plt+0x2b74>  // b.pmore
  405978:	str	xzr, [x19, #64]
  40597c:	str	xzr, [x19, #72]
  405980:	mov	x0, x23
  405984:	ldp	x19, x20, [sp, #16]
  405988:	ldp	x21, x22, [sp, #32]
  40598c:	ldp	x23, x24, [sp, #48]
  405990:	ldp	x29, x30, [sp], #64
  405994:	ret
  405998:	ldr	x1, [x0, #48]
  40599c:	lsr	x3, x1, #1
  4059a0:	sub	x1, x1, x3
  4059a4:	sub	x20, x2, x4, lsl #5
  4059a8:	sub	x24, x20, x3, lsl #5
  4059ac:	add	x2, x0, #0x18
  4059b0:	b	405930 <ferror@plt+0x2af0>
  4059b4:	lsr	x3, x21, #1
  4059b8:	sub	x21, x21, x3
  4059bc:	str	x23, [x19, #64]
  4059c0:	mov	w5, #0x1                   	// #1
  4059c4:	mov	x4, x22
  4059c8:	mov	x2, x20
  4059cc:	mov	x1, x23
  4059d0:	mov	x0, x19
  4059d4:	bl	4058f0 <ferror@plt+0x2ab0>
  4059d8:	mov	x1, x0
  4059dc:	str	x0, [x19, #72]
  4059e0:	mov	w5, #0x0                   	// #0
  4059e4:	mov	x4, x22
  4059e8:	mov	x3, x21
  4059ec:	mov	x2, x24
  4059f0:	mov	x0, x19
  4059f4:	bl	4058f0 <ferror@plt+0x2ab0>
  4059f8:	mov	x23, x0
  4059fc:	b	405980 <ferror@plt+0x2b40>
  405a00:	stp	x29, x30, [sp, #-48]!
  405a04:	mov	x29, sp
  405a08:	stp	x19, x20, [sp, #16]
  405a0c:	str	x21, [sp, #32]
  405a10:	mov	x19, x0
  405a14:	mov	x20, x1
  405a18:	add	x21, x0, #0x8
  405a1c:	mov	x0, x21
  405a20:	bl	402df0 <pthread_mutex_lock@plt>
  405a24:	mov	x1, x20
  405a28:	ldr	x0, [x19], #56
  405a2c:	bl	40c1b8 <ferror@plt+0x9378>
  405a30:	mov	w0, #0x1                   	// #1
  405a34:	strb	w0, [x20, #84]
  405a38:	mov	x0, x19
  405a3c:	bl	402930 <pthread_cond_signal@plt>
  405a40:	mov	x0, x21
  405a44:	bl	402e00 <pthread_mutex_unlock@plt>
  405a48:	ldp	x19, x20, [sp, #16]
  405a4c:	ldr	x21, [sp, #32]
  405a50:	ldp	x29, x30, [sp], #48
  405a54:	ret
  405a58:	ldrb	w2, [x1, #84]
  405a5c:	cbnz	w2, 405a88 <ferror@plt+0x2c48>
  405a60:	ldr	x4, [x1, #8]
  405a64:	ldr	x3, [x1, #24]
  405a68:	ldr	x5, [x1]
  405a6c:	ldr	x2, [x1, #16]
  405a70:	cmp	x5, x2
  405a74:	b.eq	405a9c <ferror@plt+0x2c5c>  // b.none
  405a78:	mov	w2, #0x1                   	// #1
  405a7c:	cmp	x4, x3
  405a80:	b.eq	405a8c <ferror@plt+0x2c4c>  // b.none
  405a84:	cbnz	w2, 405ab8 <ferror@plt+0x2c78>
  405a88:	ret
  405a8c:	ldr	x2, [x1, #48]
  405a90:	cmp	x2, #0x0
  405a94:	cset	w2, eq  // eq = none
  405a98:	b	405a84 <ferror@plt+0x2c44>
  405a9c:	mov	w2, #0x0                   	// #0
  405aa0:	cmp	x4, x3
  405aa4:	b.eq	405a84 <ferror@plt+0x2c44>  // b.none
  405aa8:	ldr	x2, [x1, #40]
  405aac:	cmp	x2, #0x0
  405ab0:	cset	w2, eq  // eq = none
  405ab4:	b	405a84 <ferror@plt+0x2c44>
  405ab8:	stp	x29, x30, [sp, #-16]!
  405abc:	mov	x29, sp
  405ac0:	bl	405a00 <ferror@plt+0x2bc0>
  405ac4:	ldp	x29, x30, [sp], #16
  405ac8:	ret
  405acc:	stp	x29, x30, [sp, #-176]!
  405ad0:	mov	x29, sp
  405ad4:	stp	x19, x20, [sp, #16]
  405ad8:	stp	x21, x22, [sp, #32]
  405adc:	stp	x23, x24, [sp, #48]
  405ae0:	stp	x25, x26, [sp, #64]
  405ae4:	mov	x24, x0
  405ae8:	mov	x19, x1
  405aec:	mov	x25, x2
  405af0:	mov	x21, x3
  405af4:	mov	x20, x4
  405af8:	mov	x22, x5
  405afc:	mov	x23, x6
  405b00:	ldr	x0, [x3, #40]
  405b04:	ldr	x1, [x3, #48]
  405b08:	add	x0, x0, x1
  405b0c:	lsr	x26, x19, #1
  405b10:	str	x24, [sp, #112]
  405b14:	str	x26, [sp, #120]
  405b18:	str	x2, [sp, #128]
  405b1c:	ldr	x1, [x3, #64]
  405b20:	str	x1, [sp, #136]
  405b24:	str	x4, [sp, #144]
  405b28:	str	x5, [sp, #152]
  405b2c:	str	x6, [sp, #160]
  405b30:	cmp	x19, #0x1
  405b34:	mov	x1, #0x1ffff               	// #131071
  405b38:	ccmp	x0, x1, #0x0, hi  // hi = pmore
  405b3c:	b.hi	405b9c <ferror@plt+0x2d5c>  // b.pmore
  405b40:	stp	x27, x28, [sp, #80]
  405b44:	ldr	x19, [x21, #40]
  405b48:	ldr	x26, [x21, #48]
  405b4c:	sub	x27, x24, x25, lsl #5
  405b50:	cmp	x26, #0x1
  405b54:	b.hi	405bec <ferror@plt+0x2dac>  // b.pmore
  405b58:	cmp	x19, #0x1
  405b5c:	b.hi	405c08 <ferror@plt+0x2dc8>  // b.pmore
  405b60:	str	x24, [x21]
  405b64:	neg	x19, x19, lsl #5
  405b68:	add	x0, x24, x19
  405b6c:	str	x0, [x21, #8]
  405b70:	str	x0, [x21, #16]
  405b74:	sub	x19, x19, x26, lsl #5
  405b78:	add	x0, x24, x19
  405b7c:	str	x0, [x21, #24]
  405b80:	mov	x1, x21
  405b84:	mov	x0, x20
  405b88:	bl	405a00 <ferror@plt+0x2bc0>
  405b8c:	add	x27, x20, #0x8
  405b90:	add	x0, x20, #0x38
  405b94:	str	x0, [sp, #104]
  405b98:	b	405ffc <ferror@plt+0x31bc>
  405b9c:	add	x3, sp, #0x70
  405ba0:	adrp	x2, 406000 <ferror@plt+0x31c0>
  405ba4:	add	x2, x2, #0x4c
  405ba8:	mov	x1, #0x0                   	// #0
  405bac:	add	x0, sp, #0xa8
  405bb0:	bl	402a40 <pthread_create@plt>
  405bb4:	cbnz	w0, 405b40 <ferror@plt+0x2d00>
  405bb8:	ldr	x0, [x21, #40]
  405bbc:	mov	x6, x23
  405bc0:	mov	x5, x22
  405bc4:	mov	x4, x20
  405bc8:	ldr	x3, [x21, #72]
  405bcc:	mov	x2, x25
  405bd0:	sub	x1, x19, x26
  405bd4:	sub	x0, x24, x0, lsl #5
  405bd8:	bl	405acc <ferror@plt+0x2c8c>
  405bdc:	mov	x1, #0x0                   	// #0
  405be0:	ldr	x0, [sp, #168]
  405be4:	bl	402a70 <pthread_join@plt>
  405be8:	b	405c98 <ferror@plt+0x2e58>
  405bec:	lsr	x2, x19, #1
  405bf0:	mov	w3, #0x0                   	// #0
  405bf4:	sub	x2, x27, x2, lsl #5
  405bf8:	mov	x1, x26
  405bfc:	sub	x0, x24, x19, lsl #5
  405c00:	bl	404ee0 <ferror@plt+0x20a0>
  405c04:	b	405b58 <ferror@plt+0x2d18>
  405c08:	mov	w3, #0x0                   	// #0
  405c0c:	mov	x2, x27
  405c10:	mov	x1, x19
  405c14:	mov	x0, x24
  405c18:	bl	404ee0 <ferror@plt+0x20a0>
  405c1c:	b	405b60 <ferror@plt+0x2d20>
  405c20:	mov	x0, x27
  405c24:	bl	402e00 <pthread_mutex_unlock@plt>
  405c28:	add	x26, x19, #0x58
  405c2c:	mov	x0, x26
  405c30:	bl	402df0 <pthread_mutex_lock@plt>
  405c34:	strb	wzr, [x19, #84]
  405c38:	ldr	w0, [x19, #80]
  405c3c:	cbz	w0, 405c80 <ferror@plt+0x2e40>
  405c40:	ldr	x21, [x19]
  405c44:	ldr	x24, [x19, #8]
  405c48:	add	w2, w0, #0x1
  405c4c:	lsl	w2, w2, #1
  405c50:	lsr	x2, x25, x2
  405c54:	add	x2, x2, #0x1
  405c58:	cmp	w0, #0x1
  405c5c:	b.ls	405cb0 <ferror@plt+0x2e70>  // b.plast
  405c60:	ldr	x0, [x19, #32]
  405c64:	ldr	x3, [x0]
  405c68:	ldr	x4, [x19, #16]
  405c6c:	cmp	x21, x4
  405c70:	b.eq	406024 <ferror@plt+0x31e4>  // b.none
  405c74:	sub	x28, x3, #0x20
  405c78:	mov	x0, x21
  405c7c:	b	405d1c <ferror@plt+0x2edc>
  405c80:	mov	x0, x26
  405c84:	bl	402e00 <pthread_mutex_unlock@plt>
  405c88:	mov	x1, x19
  405c8c:	mov	x0, x20
  405c90:	bl	405a00 <ferror@plt+0x2bc0>
  405c94:	ldp	x27, x28, [sp, #80]
  405c98:	ldp	x19, x20, [sp, #16]
  405c9c:	ldp	x21, x22, [sp, #32]
  405ca0:	ldp	x23, x24, [sp, #48]
  405ca4:	ldp	x25, x26, [sp, #64]
  405ca8:	ldp	x29, x30, [sp], #176
  405cac:	ret
  405cb0:	ldr	x1, [x19, #16]
  405cb4:	mov	x0, x21
  405cb8:	mov	x28, x2
  405cbc:	cmp	x21, x1
  405cc0:	b.ne	405ec0 <ferror@plt+0x3080>  // b.any
  405cc4:	sub	x1, x21, x1
  405cc8:	asr	x0, x1, #5
  405ccc:	ldr	x1, [x19, #8]
  405cd0:	sub	x3, x24, x1
  405cd4:	ldr	x2, [x19, #48]
  405cd8:	cmp	x2, x3, asr #5
  405cdc:	b.ne	405f2c <ferror@plt+0x30ec>  // b.any
  405ce0:	b	405da4 <ferror@plt+0x2f64>
  405ce4:	ldr	x0, [x19]
  405ce8:	sub	x1, x0, #0x20
  405cec:	str	x1, [x19]
  405cf0:	mov	x3, x28
  405cf4:	ldp	x4, x5, [x0, #-32]
  405cf8:	stp	x4, x5, [x28]
  405cfc:	ldp	x0, x1, [x0, #-16]
  405d00:	stp	x0, x1, [x28, #16]
  405d04:	ldr	x0, [x19]
  405d08:	ldr	x4, [x19, #16]
  405d0c:	sub	x28, x28, #0x20
  405d10:	cmp	x0, x4
  405d14:	b.eq	40602c <ferror@plt+0x31ec>  // b.none
  405d18:	ldr	x2, [sp, #96]
  405d1c:	add	x3, x28, #0x20
  405d20:	ldr	x1, [x19, #8]
  405d24:	ldr	x5, [x19, #24]
  405d28:	cmp	x1, x5
  405d2c:	b.eq	405d78 <ferror@plt+0x2f38>  // b.none
  405d30:	sub	x5, x2, #0x1
  405d34:	str	x5, [sp, #96]
  405d38:	cbz	x2, 405d74 <ferror@plt+0x2f34>
  405d3c:	sub	x1, x1, #0x20
  405d40:	sub	x0, x0, #0x20
  405d44:	bl	404df8 <ferror@plt+0x1fb8>
  405d48:	cmp	w0, #0x0
  405d4c:	b.le	405ce4 <ferror@plt+0x2ea4>
  405d50:	ldr	x0, [x19, #8]
  405d54:	sub	x1, x0, #0x20
  405d58:	str	x1, [x19, #8]
  405d5c:	mov	x3, x28
  405d60:	ldp	x4, x5, [x0, #-32]
  405d64:	stp	x4, x5, [x28]
  405d68:	ldp	x0, x1, [x0, #-16]
  405d6c:	stp	x0, x1, [x28, #16]
  405d70:	b	405d04 <ferror@plt+0x2ec4>
  405d74:	mov	x2, #0xffffffffffffffff    	// #-1
  405d78:	ldr	x1, [x19, #8]
  405d7c:	sub	x6, x24, x1
  405d80:	ldr	x5, [x19, #48]
  405d84:	cmp	x5, x6, asr #5
  405d88:	b.eq	405e04 <ferror@plt+0x2fc4>  // b.none
  405d8c:	sub	x0, x21, x0
  405d90:	ldr	x4, [x19, #40]
  405d94:	cmp	x4, x0, asr #5
  405d98:	b.eq	405e4c <ferror@plt+0x300c>  // b.none
  405d9c:	ldr	x0, [x19, #32]
  405da0:	str	x3, [x0]
  405da4:	ldr	x0, [x19, #8]
  405da8:	sub	x24, x24, x0
  405dac:	ldr	x0, [x19]
  405db0:	sub	x21, x21, x0
  405db4:	ldr	x0, [x19, #40]
  405db8:	sub	x21, x0, x21, asr #5
  405dbc:	str	x21, [x19, #40]
  405dc0:	ldr	x0, [x19, #48]
  405dc4:	sub	x24, x0, x24, asr #5
  405dc8:	str	x24, [x19, #48]
  405dcc:	mov	x1, x19
  405dd0:	mov	x0, x20
  405dd4:	bl	405a58 <ferror@plt+0x2c18>
  405dd8:	ldr	w0, [x19, #80]
  405ddc:	cmp	w0, #0x1
  405de0:	b.hi	405fd0 <ferror@plt+0x3190>  // b.pmore
  405de4:	ldr	x0, [x19, #40]
  405de8:	ldr	x1, [x19, #48]
  405dec:	cmn	x0, x1
  405df0:	b.ne	405ff4 <ferror@plt+0x31b4>  // b.any
  405df4:	ldr	x1, [x19, #56]
  405df8:	mov	x0, x20
  405dfc:	bl	405a00 <ferror@plt+0x2bc0>
  405e00:	b	405ff4 <ferror@plt+0x31b4>
  405e04:	ldr	x0, [x19]
  405e08:	cmp	x0, x4
  405e0c:	b.eq	405d9c <ferror@plt+0x2f5c>  // b.none
  405e10:	sub	x1, x2, #0x1
  405e14:	cbz	x2, 405d9c <ferror@plt+0x2f5c>
  405e18:	sub	x0, x0, #0x20
  405e1c:	str	x0, [x19]
  405e20:	ldp	x6, x7, [x0]
  405e24:	stp	x6, x7, [x3, #-32]!
  405e28:	ldp	x6, x7, [x0, #16]
  405e2c:	stp	x6, x7, [x3, #16]
  405e30:	cmp	x0, x4
  405e34:	b.eq	405d9c <ferror@plt+0x2f5c>  // b.none
  405e38:	sub	x1, x1, #0x1
  405e3c:	sub	x0, x0, #0x20
  405e40:	cmn	x1, #0x1
  405e44:	b.ne	405e1c <ferror@plt+0x2fdc>  // b.any
  405e48:	b	405d9c <ferror@plt+0x2f5c>
  405e4c:	ldr	x5, [x19, #24]
  405e50:	cmp	x5, x1
  405e54:	b.eq	405d9c <ferror@plt+0x2f5c>  // b.none
  405e58:	sub	x4, x2, #0x1
  405e5c:	cbz	x2, 405d9c <ferror@plt+0x2f5c>
  405e60:	sub	x0, x1, #0x20
  405e64:	str	x0, [x19, #8]
  405e68:	ldp	x6, x7, [x0]
  405e6c:	stp	x6, x7, [x3, #-32]!
  405e70:	ldp	x6, x7, [x0, #16]
  405e74:	stp	x6, x7, [x3, #16]
  405e78:	cmp	x0, x5
  405e7c:	b.eq	405d9c <ferror@plt+0x2f5c>  // b.none
  405e80:	sub	x4, x4, #0x1
  405e84:	sub	x0, x0, #0x20
  405e88:	cmn	x4, #0x1
  405e8c:	b.ne	405e64 <ferror@plt+0x3024>  // b.any
  405e90:	b	405d9c <ferror@plt+0x2f5c>
  405e94:	ldr	x0, [x19]
  405e98:	sub	x0, x0, #0x20
  405e9c:	str	x0, [x19]
  405ea0:	mov	x2, x23
  405ea4:	mov	x1, x22
  405ea8:	bl	4050e8 <ferror@plt+0x22a8>
  405eac:	ldr	x0, [x19]
  405eb0:	ldr	x1, [x19, #16]
  405eb4:	cmp	x0, x1
  405eb8:	b.eq	405cc4 <ferror@plt+0x2e84>  // b.none
  405ebc:	mov	x2, x28
  405ec0:	ldr	x1, [x19, #8]
  405ec4:	ldr	x3, [x19, #24]
  405ec8:	cmp	x1, x3
  405ecc:	b.eq	405f10 <ferror@plt+0x30d0>  // b.none
  405ed0:	sub	x3, x2, #0x1
  405ed4:	mov	x28, x3
  405ed8:	cbz	x2, 405f0c <ferror@plt+0x30cc>
  405edc:	sub	x1, x1, #0x20
  405ee0:	sub	x0, x0, #0x20
  405ee4:	bl	404df8 <ferror@plt+0x1fb8>
  405ee8:	cmp	w0, #0x0
  405eec:	b.le	405e94 <ferror@plt+0x3054>
  405ef0:	ldr	x0, [x19, #8]
  405ef4:	sub	x0, x0, #0x20
  405ef8:	str	x0, [x19, #8]
  405efc:	mov	x2, x23
  405f00:	mov	x1, x22
  405f04:	bl	4050e8 <ferror@plt+0x22a8>
  405f08:	b	405eac <ferror@plt+0x306c>
  405f0c:	mov	x2, #0xffffffffffffffff    	// #-1
  405f10:	sub	x3, x24, x1
  405f14:	ldr	x4, [x19, #48]
  405f18:	cmp	x4, x3, asr #5
  405f1c:	b.eq	405f84 <ferror@plt+0x3144>  // b.none
  405f20:	sub	x0, x21, x0
  405f24:	asr	x0, x0, #5
  405f28:	mov	x28, x2
  405f2c:	ldr	x2, [x19, #40]
  405f30:	cmp	x0, x2
  405f34:	b.ne	405da4 <ferror@plt+0x2f64>  // b.any
  405f38:	ldr	x0, [x19, #24]
  405f3c:	cmp	x1, x0
  405f40:	b.eq	405da4 <ferror@plt+0x2f64>  // b.none
  405f44:	mov	x0, x28
  405f48:	sub	x28, x28, #0x1
  405f4c:	cbz	x0, 405da4 <ferror@plt+0x2f64>
  405f50:	sub	x0, x1, #0x20
  405f54:	str	x0, [x19, #8]
  405f58:	mov	x2, x23
  405f5c:	mov	x1, x22
  405f60:	bl	4050e8 <ferror@plt+0x22a8>
  405f64:	ldr	x1, [x19, #8]
  405f68:	ldr	x0, [x19, #24]
  405f6c:	cmp	x1, x0
  405f70:	b.eq	405da4 <ferror@plt+0x2f64>  // b.none
  405f74:	sub	x28, x28, #0x1
  405f78:	cmn	x28, #0x1
  405f7c:	b.ne	405f50 <ferror@plt+0x3110>  // b.any
  405f80:	b	405da4 <ferror@plt+0x2f64>
  405f84:	ldr	x0, [x19]
  405f88:	ldr	x1, [x19, #16]
  405f8c:	cmp	x0, x1
  405f90:	b.eq	405da4 <ferror@plt+0x2f64>  // b.none
  405f94:	sub	x28, x2, #0x1
  405f98:	cbz	x2, 405da4 <ferror@plt+0x2f64>
  405f9c:	sub	x0, x0, #0x20
  405fa0:	str	x0, [x19]
  405fa4:	mov	x2, x23
  405fa8:	mov	x1, x22
  405fac:	bl	4050e8 <ferror@plt+0x22a8>
  405fb0:	ldr	x0, [x19]
  405fb4:	ldr	x1, [x19, #16]
  405fb8:	cmp	x0, x1
  405fbc:	b.eq	405da4 <ferror@plt+0x2f64>  // b.none
  405fc0:	sub	x28, x28, #0x1
  405fc4:	cmn	x28, #0x1
  405fc8:	b.ne	405f9c <ferror@plt+0x315c>  // b.any
  405fcc:	b	405da4 <ferror@plt+0x2f64>
  405fd0:	ldr	x0, [x19, #56]
  405fd4:	add	x0, x0, #0x58
  405fd8:	bl	402df0 <pthread_mutex_lock@plt>
  405fdc:	ldr	x1, [x19, #56]
  405fe0:	mov	x0, x20
  405fe4:	bl	405a58 <ferror@plt+0x2c18>
  405fe8:	ldr	x0, [x19, #56]
  405fec:	add	x0, x0, #0x58
  405ff0:	bl	402e00 <pthread_mutex_unlock@plt>
  405ff4:	mov	x0, x26
  405ff8:	bl	402e00 <pthread_mutex_unlock@plt>
  405ffc:	mov	x0, x27
  406000:	bl	402df0 <pthread_mutex_lock@plt>
  406004:	ldr	x0, [x20]
  406008:	bl	40c2c0 <ferror@plt+0x9480>
  40600c:	mov	x19, x0
  406010:	cbnz	x0, 405c20 <ferror@plt+0x2de0>
  406014:	mov	x1, x27
  406018:	ldr	x0, [sp, #104]
  40601c:	bl	402bd0 <pthread_cond_wait@plt>
  406020:	b	406004 <ferror@plt+0x31c4>
  406024:	mov	x0, x4
  406028:	b	406034 <ferror@plt+0x31f4>
  40602c:	mov	x0, x4
  406030:	ldr	x2, [sp, #96]
  406034:	ldr	x1, [x19, #8]
  406038:	sub	x5, x24, x1
  40603c:	ldr	x4, [x19, #48]
  406040:	cmp	x4, x5, asr #5
  406044:	b.ne	405d8c <ferror@plt+0x2f4c>  // b.any
  406048:	b	405d9c <ferror@plt+0x2f5c>
  40604c:	stp	x29, x30, [sp, #-16]!
  406050:	mov	x29, sp
  406054:	ldr	x6, [x0, #48]
  406058:	ldr	x5, [x0, #40]
  40605c:	ldr	x4, [x0, #32]
  406060:	ldr	x3, [x0, #24]
  406064:	ldr	x2, [x0, #16]
  406068:	ldr	x1, [x0, #8]
  40606c:	ldr	x0, [x0]
  406070:	bl	405acc <ferror@plt+0x2c8c>
  406074:	mov	x0, #0x0                   	// #0
  406078:	ldp	x29, x30, [sp], #16
  40607c:	ret
  406080:	stp	x29, x30, [sp, #-144]!
  406084:	mov	x29, sp
  406088:	stp	x19, x20, [sp, #16]
  40608c:	mov	x19, x0
  406090:	str	x0, [sp, #120]
  406094:	str	x1, [sp, #112]
  406098:	str	x2, [sp, #136]
  40609c:	ldrb	w0, [x0, #48]
  4060a0:	str	w0, [sp, #132]
  4060a4:	cbnz	w0, 40636c <ferror@plt+0x352c>
  4060a8:	stp	x21, x22, [sp, #32]
  4060ac:	stp	x23, x24, [sp, #48]
  4060b0:	stp	x25, x26, [sp, #64]
  4060b4:	stp	x27, x28, [sp, #80]
  4060b8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4060bc:	ldr	x22, [x0, #2688]
  4060c0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4060c4:	add	x0, x0, #0x3b0
  4060c8:	ldrb	w26, [x0, #200]
  4060cc:	ldr	x27, [x19, #40]
  4060d0:	ldr	x23, [x0, #224]
  4060d4:	ldr	x1, [x19, #8]
  4060d8:	ldr	x2, [x19, #32]
  4060dc:	cmp	x1, x2
  4060e0:	b.ne	4060f4 <ferror@plt+0x32b4>  // b.any
  4060e4:	sub	x23, x23, #0x22
  4060e8:	adrp	x28, 428000 <_obstack_memory_used@@Base+0x16a28>
  4060ec:	add	x28, x28, #0x568
  4060f0:	b	4062cc <ferror@plt+0x348c>
  4060f4:	ldr	x0, [x19]
  4060f8:	sub	x1, x1, x2
  4060fc:	add	x1, x0, x1
  406100:	bl	402730 <memmove@plt>
  406104:	ldr	x0, [x19, #32]
  406108:	str	x0, [x19, #8]
  40610c:	str	xzr, [x19, #16]
  406110:	b	4060e4 <ferror@plt+0x32a4>
  406114:	mov	w2, #0x5                   	// #5
  406118:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  40611c:	add	x1, x1, #0x2f0
  406120:	mov	x0, #0x0                   	// #0
  406124:	bl	402d20 <dcgettext@plt>
  406128:	ldr	x1, [sp, #136]
  40612c:	bl	403990 <ferror@plt+0xb50>
  406130:	mov	x1, x22
  406134:	mov	x0, x20
  406138:	bl	402fc4 <ferror@plt+0x184>
  40613c:	str	x0, [x20, #16]
  406140:	mov	x21, x19
  406144:	sub	x2, x25, x19
  406148:	mov	w1, w26
  40614c:	mov	x0, x19
  406150:	bl	402ce0 <memchr@plt>
  406154:	cbz	x0, 4061d0 <ferror@plt+0x3390>
  406158:	mov	x19, x0
  40615c:	strb	wzr, [x19], #1
  406160:	str	x21, [x20, #-32]!
  406164:	sub	x1, x19, x21
  406168:	str	x1, [x20, #8]
  40616c:	cmp	x23, x1
  406170:	csel	x23, x23, x1, cs  // cs = hs, nlast
  406174:	sub	x24, x24, x27
  406178:	cbz	x22, 406140 <ferror@plt+0x3300>
  40617c:	ldr	x1, [x22, #16]
  406180:	cmn	x1, #0x1
  406184:	b.eq	406194 <ferror@plt+0x3354>  // b.none
  406188:	mov	x1, x22
  40618c:	mov	x0, x20
  406190:	bl	4030f0 <ferror@plt+0x2b0>
  406194:	str	x0, [x20, #24]
  406198:	ldr	x0, [x22]
  40619c:	cmn	x0, #0x1
  4061a0:	b.ne	406130 <ferror@plt+0x32f0>  // b.any
  4061a4:	ldrb	w0, [x22, #48]
  4061a8:	cbnz	w0, 4061b4 <ferror@plt+0x3374>
  4061ac:	str	x21, [x20, #16]
  4061b0:	b	406140 <ferror@plt+0x3300>
  4061b4:	ldrb	w0, [x21]
  4061b8:	ldrb	w0, [x28, w0, sxtw]
  4061bc:	cbz	w0, 4061ac <ferror@plt+0x336c>
  4061c0:	ldrb	w0, [x21, #1]!
  4061c4:	ldrb	w0, [x28, w0, sxtw]
  4061c8:	cbnz	w0, 4061c0 <ferror@plt+0x3380>
  4061cc:	b	4061ac <ferror@plt+0x336c>
  4061d0:	ldr	x0, [sp, #120]
  4061d4:	ldrb	w0, [x0, #48]
  4061d8:	cbnz	w0, 406268 <ferror@plt+0x3428>
  4061dc:	mov	x19, x25
  4061e0:	ldr	x0, [sp, #96]
  4061e4:	cmp	x0, x24
  4061e8:	b.cs	40626c <ferror@plt+0x342c>  // b.hs, b.nlast
  4061ec:	sub	x0, x24, #0x1
  4061f0:	ldr	x1, [sp, #96]
  4061f4:	udiv	x0, x0, x1
  4061f8:	ldr	x3, [sp, #112]
  4061fc:	str	x0, [sp, #104]
  406200:	mov	x2, x0
  406204:	mov	x1, #0x1                   	// #1
  406208:	mov	x0, x19
  40620c:	bl	402af0 <fread_unlocked@plt>
  406210:	add	x25, x19, x0
  406214:	sub	x24, x24, x0
  406218:	ldr	x1, [sp, #104]
  40621c:	cmp	x1, x0
  406220:	b.eq	406144 <ferror@plt+0x3304>  // b.none
  406224:	ldr	x0, [sp, #112]
  406228:	ldr	w0, [x0]
  40622c:	tbnz	w0, #5, 406114 <ferror@plt+0x32d4>
  406230:	tbz	w0, #4, 406144 <ferror@plt+0x3304>
  406234:	mov	w0, #0x1                   	// #1
  406238:	ldr	x1, [sp, #120]
  40623c:	strb	w0, [x1, #48]
  406240:	ldr	x0, [x1]
  406244:	cmp	x0, x25
  406248:	b.eq	406374 <ferror@plt+0x3534>  // b.none
  40624c:	cmp	x21, x25
  406250:	b.eq	406144 <ferror@plt+0x3304>  // b.none
  406254:	ldurb	w0, [x25, #-1]
  406258:	cmp	w0, w26
  40625c:	b.eq	406144 <ferror@plt+0x3304>  // b.none
  406260:	strb	w26, [x25], #1
  406264:	b	406144 <ferror@plt+0x3304>
  406268:	mov	x19, x25
  40626c:	ldr	x3, [sp, #120]
  406270:	ldr	x0, [x3]
  406274:	sub	x1, x19, x0
  406278:	str	x1, [x3, #8]
  40627c:	ldr	x2, [x3, #24]
  406280:	add	x1, x0, x2
  406284:	sub	x1, x1, x20
  406288:	asr	x1, x1, #5
  40628c:	str	x1, [x3, #16]
  406290:	cbnz	x1, 406310 <ferror@plt+0x34d0>
  406294:	lsr	x19, x2, #5
  406298:	cbz	x0, 406340 <ferror@plt+0x3500>
  40629c:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  4062a0:	movk	x1, #0x553f
  4062a4:	cmp	x2, x1
  4062a8:	b.hi	406360 <ferror@plt+0x3520>  // b.pmore
  4062ac:	add	x19, x19, x2, lsr #6
  4062b0:	add	x19, x19, #0x1
  4062b4:	lsl	x19, x19, #5
  4062b8:	mov	x1, x19
  4062bc:	bl	40fedc <ferror@plt+0xd09c>
  4062c0:	ldr	x1, [sp, #120]
  4062c4:	str	x0, [x1]
  4062c8:	str	x19, [x1, #24]
  4062cc:	ldr	x1, [sp, #120]
  4062d0:	ldr	x21, [x1]
  4062d4:	ldr	x19, [x1, #8]
  4062d8:	add	x19, x21, x19
  4062dc:	ldr	x0, [x1, #24]
  4062e0:	add	x0, x21, x0
  4062e4:	ldr	x1, [x1, #16]
  4062e8:	sub	x20, x0, x1, lsl #5
  4062ec:	msub	x0, x1, x27, x0
  4062f0:	sub	x24, x0, x19
  4062f4:	cbz	x1, 406304 <ferror@plt+0x34c4>
  4062f8:	ldr	x21, [x20]
  4062fc:	ldr	x0, [x20, #8]
  406300:	add	x21, x21, x0
  406304:	add	x0, x27, #0x1
  406308:	str	x0, [sp, #96]
  40630c:	b	4061e0 <ferror@plt+0x33a0>
  406310:	sub	x19, x19, x21
  406314:	str	x19, [x3, #32]
  406318:	add	x23, x23, #0x22
  40631c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  406320:	str	x23, [x0, #1168]
  406324:	mov	w0, #0x1                   	// #1
  406328:	str	w0, [sp, #132]
  40632c:	ldp	x21, x22, [sp, #32]
  406330:	ldp	x23, x24, [sp, #48]
  406334:	ldp	x25, x26, [sp, #64]
  406338:	ldp	x27, x28, [sp, #80]
  40633c:	b	406384 <ferror@plt+0x3544>
  406340:	cmp	x2, #0x1f
  406344:	b.ls	406364 <ferror@plt+0x3524>  // b.plast
  406348:	cmp	xzr, x19, lsr #59
  40634c:	cset	x1, ne  // ne = any
  406350:	tst	x19, #0x400000000000000
  406354:	csinc	w1, w1, wzr, eq  // eq = none
  406358:	cbz	w1, 4062b4 <ferror@plt+0x3474>
  40635c:	bl	4100ec <ferror@plt+0xd2ac>
  406360:	bl	4100ec <ferror@plt+0xd2ac>
  406364:	mov	x19, #0x4                   	// #4
  406368:	b	4062b4 <ferror@plt+0x3474>
  40636c:	str	wzr, [sp, #132]
  406370:	b	406384 <ferror@plt+0x3544>
  406374:	ldp	x21, x22, [sp, #32]
  406378:	ldp	x23, x24, [sp, #48]
  40637c:	ldp	x25, x26, [sp, #64]
  406380:	ldp	x27, x28, [sp, #80]
  406384:	ldrb	w0, [sp, #132]
  406388:	ldp	x19, x20, [sp, #16]
  40638c:	ldp	x29, x30, [sp], #144
  406390:	ret
  406394:	stp	x29, x30, [sp, #-240]!
  406398:	mov	x29, sp
  40639c:	stp	x19, x20, [sp, #16]
  4063a0:	stp	x21, x22, [sp, #32]
  4063a4:	stp	x23, x24, [sp, #48]
  4063a8:	stp	x25, x26, [sp, #64]
  4063ac:	stp	x27, x28, [sp, #80]
  4063b0:	str	x0, [sp, #120]
  4063b4:	str	x1, [sp, #192]
  4063b8:	str	x3, [sp, #176]
  4063bc:	str	x4, [sp, #184]
  4063c0:	str	x5, [sp, #112]
  4063c4:	mov	x0, #0x38                  	// #56
  4063c8:	mul	x1, x2, x0
  4063cc:	umulh	x0, x2, x0
  4063d0:	cmp	x0, #0x0
  4063d4:	cset	x0, ne  // ne = any
  4063d8:	cmp	x1, #0x0
  4063dc:	csinc	x0, x0, xzr, ge  // ge = tcont
  4063e0:	cbnz	w0, 406470 <ferror@plt+0x3630>
  4063e4:	mov	x26, x2
  4063e8:	lsl	x19, x2, #3
  4063ec:	sub	x0, x19, x2
  4063f0:	lsl	x0, x0, #3
  4063f4:	bl	40fe60 <ferror@plt+0xd020>
  4063f8:	str	x0, [sp, #104]
  4063fc:	cmp	xzr, x26, lsr #61
  406400:	cset	x0, ne  // ne = any
  406404:	cmp	x19, #0x0
  406408:	csinc	x0, x0, xzr, ge  // ge = tcont
  40640c:	cbnz	w0, 406474 <ferror@plt+0x3634>
  406410:	lsl	x19, x26, #3
  406414:	mov	x0, x19
  406418:	bl	40fe60 <ferror@plt+0xd020>
  40641c:	mov	x24, x0
  406420:	mov	x0, x19
  406424:	bl	40fe60 <ferror@plt+0xd020>
  406428:	mov	x28, x0
  40642c:	mov	x0, x19
  406430:	bl	40fe60 <ferror@plt+0xd020>
  406434:	mov	x21, x0
  406438:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40643c:	ldr	x0, [x0, #2688]
  406440:	str	x0, [sp, #200]
  406444:	str	xzr, [sp, #208]
  406448:	cbz	x26, 40671c <ferror@plt+0x38dc>
  40644c:	mov	x19, #0x0                   	// #0
  406450:	adrp	x25, 428000 <_obstack_memory_used@@Base+0x16a28>
  406454:	add	x25, x25, #0x568
  406458:	adrp	x27, 428000 <_obstack_memory_used@@Base+0x16a28>
  40645c:	add	x27, x27, #0x3b0
  406460:	ldr	x0, [sp, #120]
  406464:	sub	x0, x0, #0x10
  406468:	str	x0, [sp, #144]
  40646c:	b	4064dc <ferror@plt+0x369c>
  406470:	bl	4100ec <ferror@plt+0xd2ac>
  406474:	bl	4100ec <ferror@plt+0xd2ac>
  406478:	ldr	x0, [sp, #120]
  40647c:	ldr	x1, [x0, x22]
  406480:	ldr	x0, [sp, #112]
  406484:	ldr	x0, [x0, x19, lsl #3]
  406488:	bl	403bf4 <ferror@plt+0xdb4>
  40648c:	ldr	x0, [sp, #192]
  406490:	cmp	x0, x19
  406494:	b.hi	406598 <ferror@plt+0x3758>  // b.pmore
  406498:	ldr	x0, [sp, #104]
  40649c:	ldr	x0, [x0, x23, lsl #3]
  4064a0:	bl	402ba0 <free@plt>
  4064a4:	sub	x4, x26, #0x1
  4064a8:	cmp	x4, x19
  4064ac:	b.ls	4065b0 <ferror@plt+0x3770>  // b.plast
  4064b0:	ldr	x0, [sp, #136]
  4064b4:	ldr	x22, [sp, #128]
  4064b8:	ldr	x1, [sp, #144]
  4064bc:	add	x26, x1, x26, lsl #4
  4064c0:	ldp	x2, x3, [x0, #16]
  4064c4:	stp	x2, x3, [x0], #16
  4064c8:	ldr	x1, [x22, #8]
  4064cc:	str	x1, [x22], #8
  4064d0:	cmp	x26, x0
  4064d4:	b.ne	4064c0 <ferror@plt+0x3680>  // b.any
  4064d8:	mov	x26, x4
  4064dc:	lsl	x22, x19, #3
  4064e0:	sub	x23, x22, x19
  4064e4:	ldr	x0, [sp, #104]
  4064e8:	add	x20, x0, x23, lsl #3
  4064ec:	ldr	x0, [x25, #1568]
  4064f0:	udiv	x0, x0, x26
  4064f4:	ldr	x2, [x27, #224]
  4064f8:	cmp	x0, x2
  4064fc:	csel	x2, x0, x2, cs  // cs = hs, nlast
  406500:	mov	x1, #0x20                  	// #32
  406504:	mov	x0, x20
  406508:	bl	403d8c <ferror@plt+0xf4c>
  40650c:	ldr	x0, [sp, #112]
  406510:	add	x1, x0, x22
  406514:	str	x1, [sp, #128]
  406518:	lsl	x22, x19, #4
  40651c:	ldr	x1, [sp, #120]
  406520:	add	x2, x1, x22
  406524:	str	x2, [sp, #136]
  406528:	ldr	x2, [x1, x22]
  40652c:	ldr	x1, [x0, x19, lsl #3]
  406530:	mov	x0, x20
  406534:	bl	406080 <ferror@plt+0x3240>
  406538:	and	w0, w0, #0xff
  40653c:	cbz	w0, 406478 <ferror@plt+0x3638>
  406540:	ldr	x0, [sp, #104]
  406544:	ldr	x0, [x0, x23, lsl #3]
  406548:	ldr	x1, [x20, #24]
  40654c:	add	x0, x0, x1
  406550:	sub	x1, x0, #0x20
  406554:	str	x1, [x24, x19, lsl #3]
  406558:	ldr	x1, [x20, #16]
  40655c:	sub	x0, x0, x1, lsl #5
  406560:	str	x0, [x28, x19, lsl #3]
  406564:	add	x19, x19, #0x1
  406568:	cmp	x19, x26
  40656c:	b.cc	4064dc <ferror@plt+0x369c>  // b.lo, b.ul, b.last
  406570:	cbz	x26, 40671c <ferror@plt+0x38dc>
  406574:	mov	x0, #0x0                   	// #0
  406578:	str	x0, [x21, x0, lsl #3]
  40657c:	add	x0, x0, #0x1
  406580:	cmp	x0, x26
  406584:	b.ne	406578 <ferror@plt+0x3738>  // b.any
  406588:	cmp	x26, #0x1
  40658c:	b.ls	4065f8 <ferror@plt+0x37b8>  // b.plast
  406590:	mov	x20, #0x1                   	// #1
  406594:	b	4065c4 <ferror@plt+0x3784>
  406598:	sub	x0, x0, #0x1
  40659c:	str	x0, [sp, #192]
  4065a0:	ldr	x0, [sp, #120]
  4065a4:	ldr	x0, [x0, x22]
  4065a8:	bl	4052e4 <ferror@plt+0x24a4>
  4065ac:	b	406498 <ferror@plt+0x3658>
  4065b0:	mov	x26, x4
  4065b4:	b	406570 <ferror@plt+0x3730>
  4065b8:	add	x20, x20, #0x1
  4065bc:	cmp	x20, x26
  4065c0:	b.cs	4065f8 <ferror@plt+0x37b8>  // b.hs, b.nlast
  4065c4:	lsl	x19, x20, #3
  4065c8:	sub	x19, x19, #0x8
  4065cc:	ldr	x22, [x21, x19]
  4065d0:	ldr	x23, [x21, x20, lsl #3]
  4065d4:	ldr	x1, [x24, x23, lsl #3]
  4065d8:	ldr	x0, [x24, x22, lsl #3]
  4065dc:	bl	404df8 <ferror@plt+0x1fb8>
  4065e0:	cmp	w0, #0x0
  4065e4:	b.le	4065b8 <ferror@plt+0x3778>
  4065e8:	str	x23, [x21, x19]
  4065ec:	str	x22, [x21, x20, lsl #3]
  4065f0:	mov	x20, #0x1                   	// #1
  4065f4:	b	4065c4 <ferror@plt+0x3784>
  4065f8:	str	xzr, [sp, #128]
  4065fc:	str	xzr, [sp, #160]
  406600:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  406604:	add	x0, x0, #0x568
  406608:	str	x0, [sp, #168]
  40660c:	ldr	x0, [sp, #112]
  406610:	sub	x0, x0, #0x8
  406614:	str	x0, [sp, #136]
  406618:	sub	x0, x24, #0x8
  40661c:	str	x0, [sp, #144]
  406620:	sub	x0, x28, #0x8
  406624:	str	x0, [sp, #152]
  406628:	b	40690c <ferror@plt+0x3acc>
  40662c:	ldr	x0, [sp, #128]
  406630:	cbz	x0, 406648 <ferror@plt+0x3808>
  406634:	lsl	x0, x0, #1
  406638:	str	x0, [sp, #128]
  40663c:	cmp	x20, x0
  406640:	b.hi	40662c <ferror@plt+0x37ec>  // b.pmore
  406644:	mov	x20, x0
  406648:	ldr	x0, [sp, #208]
  40664c:	bl	402ba0 <free@plt>
  406650:	mov	x0, x20
  406654:	bl	40fe60 <ferror@plt+0xd020>
  406658:	str	x0, [sp, #208]
  40665c:	str	x20, [sp, #128]
  406660:	b	406958 <ferror@plt+0x3b18>
  406664:	ldr	x2, [sp, #184]
  406668:	ldr	x1, [sp, #176]
  40666c:	mov	x0, x19
  406670:	bl	403e44 <ferror@plt+0x1004>
  406674:	ldr	x0, [x28, x25, lsl #3]
  406678:	cmp	x0, x19
  40667c:	b.cc	4066dc <ferror@plt+0x389c>  // b.lo, b.ul, b.last
  406680:	lsl	x20, x25, #3
  406684:	sub	x20, x20, x25
  406688:	ldr	x0, [sp, #104]
  40668c:	add	x19, x0, x20, lsl #3
  406690:	lsl	x0, x25, #4
  406694:	ldr	x1, [sp, #120]
  406698:	ldr	x2, [x1, x0]
  40669c:	ldr	x0, [sp, #112]
  4066a0:	ldr	x1, [x0, x25, lsl #3]
  4066a4:	mov	x0, x19
  4066a8:	bl	406080 <ferror@plt+0x3240>
  4066ac:	and	w0, w0, #0xff
  4066b0:	cbz	w0, 40676c <ferror@plt+0x392c>
  4066b4:	ldr	x0, [sp, #104]
  4066b8:	ldr	x0, [x0, x20, lsl #3]
  4066bc:	ldr	x1, [x19, #24]
  4066c0:	add	x0, x0, x1
  4066c4:	sub	x1, x0, #0x20
  4066c8:	str	x1, [x24, x25, lsl #3]
  4066cc:	ldr	x1, [x19, #16]
  4066d0:	sub	x0, x0, x1, lsl #5
  4066d4:	str	x0, [x28, x25, lsl #3]
  4066d8:	b	4066e4 <ferror@plt+0x38a4>
  4066dc:	sub	x19, x19, #0x20
  4066e0:	str	x19, [x24, x25, lsl #3]
  4066e4:	mov	x22, x26
  4066e8:	mov	x19, #0x1                   	// #1
  4066ec:	mov	x20, x19
  4066f0:	cmp	x26, x19
  4066f4:	b.hi	4068b4 <ferror@plt+0x3a74>  // b.pmore
  4066f8:	str	x25, [x21]
  4066fc:	cbnz	x26, 40690c <ferror@plt+0x3acc>
  406700:	ldr	x0, [sp, #160]
  406704:	cmp	x0, #0x0
  406708:	cset	w1, ne  // ne = any
  40670c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  406710:	ldrb	w0, [x0, #2721]
  406714:	tst	w1, w0
  406718:	b.ne	4069ac <ferror@plt+0x3b6c>  // b.any
  40671c:	ldr	x1, [sp, #184]
  406720:	ldr	x0, [sp, #176]
  406724:	bl	403bf4 <ferror@plt+0xdb4>
  406728:	ldr	x0, [sp, #112]
  40672c:	bl	402ba0 <free@plt>
  406730:	ldr	x0, [sp, #104]
  406734:	bl	402ba0 <free@plt>
  406738:	mov	x0, x21
  40673c:	bl	402ba0 <free@plt>
  406740:	mov	x0, x28
  406744:	bl	402ba0 <free@plt>
  406748:	mov	x0, x24
  40674c:	bl	402ba0 <free@plt>
  406750:	ldp	x19, x20, [sp, #16]
  406754:	ldp	x21, x22, [sp, #32]
  406758:	ldp	x23, x24, [sp, #48]
  40675c:	ldp	x25, x26, [sp, #64]
  406760:	ldp	x27, x28, [sp, #80]
  406764:	ldp	x29, x30, [sp], #240
  406768:	ret
  40676c:	mov	x0, #0x1                   	// #1
  406770:	cmp	x26, x0
  406774:	b.hi	40686c <ferror@plt+0x3a2c>  // b.pmore
  406778:	sub	x22, x26, #0x1
  40677c:	ldr	x19, [x21]
  406780:	lsl	x20, x19, #4
  406784:	ldr	x0, [sp, #120]
  406788:	add	x23, x0, x20
  40678c:	ldr	x1, [x0, x20]
  406790:	ldr	x0, [sp, #112]
  406794:	ldr	x0, [x0, x19, lsl #3]
  406798:	bl	403bf4 <ferror@plt+0xdb4>
  40679c:	ldr	x0, [sp, #192]
  4067a0:	cmp	x19, x0
  4067a4:	b.cc	406888 <ferror@plt+0x3a48>  // b.lo, b.ul, b.last
  4067a8:	lsl	x0, x19, #3
  4067ac:	sub	x0, x0, x19
  4067b0:	lsl	x20, x0, #3
  4067b4:	ldr	x25, [sp, #104]
  4067b8:	ldr	x0, [x25, x0, lsl #3]
  4067bc:	bl	402ba0 <free@plt>
  4067c0:	cmp	x19, x22
  4067c4:	b.cs	406838 <ferror@plt+0x39f8>  // b.hs, b.nlast
  4067c8:	add	x4, x25, #0x38
  4067cc:	add	x19, x19, #0x1
  4067d0:	ldr	x0, [sp, #112]
  4067d4:	ldr	x0, [x0, x19, lsl #3]
  4067d8:	ldr	x1, [sp, #136]
  4067dc:	str	x0, [x1, x19, lsl #3]
  4067e0:	ldp	x0, x1, [x23, #16]
  4067e4:	stp	x0, x1, [x23], #16
  4067e8:	ldr	x0, [sp, #104]
  4067ec:	add	x0, x0, x20
  4067f0:	add	x1, x4, x20
  4067f4:	ldp	x2, x3, [x1]
  4067f8:	stp	x2, x3, [x0]
  4067fc:	ldp	x2, x3, [x1, #16]
  406800:	stp	x2, x3, [x0, #16]
  406804:	ldp	x2, x3, [x1, #32]
  406808:	stp	x2, x3, [x0, #32]
  40680c:	ldr	x1, [x1, #48]
  406810:	str	x1, [x0, #48]
  406814:	ldr	x0, [x24, x19, lsl #3]
  406818:	ldr	x1, [sp, #144]
  40681c:	str	x0, [x1, x19, lsl #3]
  406820:	ldr	x0, [x28, x19, lsl #3]
  406824:	ldr	x1, [sp, #152]
  406828:	str	x0, [x1, x19, lsl #3]
  40682c:	add	x20, x20, #0x38
  406830:	cmp	x19, x22
  406834:	b.ne	4067cc <ferror@plt+0x398c>  // b.any
  406838:	cbz	x22, 406700 <ferror@plt+0x38c0>
  40683c:	add	x0, x21, #0x8
  406840:	add	x26, x21, x26, lsl #3
  406844:	ldr	x1, [x0]
  406848:	stur	x1, [x0, #-8]
  40684c:	add	x0, x0, #0x8
  406850:	cmp	x26, x0
  406854:	b.ne	406844 <ferror@plt+0x3a04>  // b.any
  406858:	mov	x26, x22
  40685c:	b	40690c <ferror@plt+0x3acc>
  406860:	add	x0, x0, #0x1
  406864:	cmp	x0, x26
  406868:	b.eq	406778 <ferror@plt+0x3938>  // b.none
  40686c:	ldr	x1, [x21, x0, lsl #3]
  406870:	ldr	x2, [x21]
  406874:	cmp	x1, x2
  406878:	b.ls	406860 <ferror@plt+0x3a20>  // b.plast
  40687c:	sub	x1, x1, #0x1
  406880:	str	x1, [x21, x0, lsl #3]
  406884:	b	406860 <ferror@plt+0x3a20>
  406888:	sub	x0, x0, #0x1
  40688c:	str	x0, [sp, #192]
  406890:	ldr	x0, [sp, #120]
  406894:	ldr	x0, [x0, x20]
  406898:	bl	4052e4 <ferror@plt+0x24a4>
  40689c:	b	4067a8 <ferror@plt+0x3968>
  4068a0:	mov	x22, x19
  4068a4:	add	x19, x20, x22
  4068a8:	lsr	x19, x19, #1
  4068ac:	cmp	x20, x22
  4068b0:	b.cs	4068e4 <ferror@plt+0x3aa4>  // b.hs, b.nlast
  4068b4:	ldr	x23, [x21, x19, lsl #3]
  4068b8:	ldr	x1, [x24, x23, lsl #3]
  4068bc:	ldr	x0, [x27]
  4068c0:	bl	404df8 <ferror@plt+0x1fb8>
  4068c4:	tbnz	w0, #31, 4068a0 <ferror@plt+0x3a60>
  4068c8:	cmp	w0, #0x0
  4068cc:	ccmp	x25, x23, #0x2, eq  // eq = none
  4068d0:	b.cc	4068dc <ferror@plt+0x3a9c>  // b.lo, b.ul, b.last
  4068d4:	add	x20, x19, #0x1
  4068d8:	b	4068a4 <ferror@plt+0x3a64>
  4068dc:	mov	x22, x19
  4068e0:	b	4068a4 <ferror@plt+0x3a64>
  4068e4:	subs	x2, x20, #0x1
  4068e8:	b.eq	406908 <ferror@plt+0x3ac8>  // b.none
  4068ec:	add	x0, x21, #0x8
  4068f0:	add	x20, x21, x20, lsl #3
  4068f4:	ldr	x1, [x0]
  4068f8:	stur	x1, [x0, #-8]
  4068fc:	add	x0, x0, #0x8
  406900:	cmp	x20, x0
  406904:	b.ne	4068f4 <ferror@plt+0x3ab4>  // b.any
  406908:	str	x25, [x21, x2, lsl #3]
  40690c:	ldr	x25, [x21]
  406910:	add	x27, x24, x25, lsl #3
  406914:	ldr	x19, [x24, x25, lsl #3]
  406918:	ldr	x0, [sp, #168]
  40691c:	ldrb	w0, [x0, #1337]
  406920:	cbz	w0, 406664 <ferror@plt+0x3824>
  406924:	ldr	x0, [sp, #160]
  406928:	cbz	x0, 406948 <ferror@plt+0x3b08>
  40692c:	mov	x1, x19
  406930:	bl	404df8 <ferror@plt+0x1fb8>
  406934:	cbz	w0, 406674 <ferror@plt+0x3834>
  406938:	ldr	x2, [sp, #184]
  40693c:	ldr	x1, [sp, #176]
  406940:	add	x0, sp, #0xd0
  406944:	bl	403e44 <ferror@plt+0x1004>
  406948:	ldr	x20, [x19, #8]
  40694c:	ldr	x0, [sp, #128]
  406950:	cmp	x20, x0
  406954:	b.hi	40662c <ferror@plt+0x37ec>  // b.pmore
  406958:	ldr	x2, [x19, #8]
  40695c:	str	x2, [sp, #216]
  406960:	ldr	x1, [x19]
  406964:	ldr	x0, [sp, #208]
  406968:	bl	402720 <memcpy@plt>
  40696c:	add	x0, sp, #0xd0
  406970:	str	x0, [sp, #160]
  406974:	ldr	x0, [sp, #200]
  406978:	cbz	x0, 406674 <ferror@plt+0x3834>
  40697c:	ldr	x1, [sp, #208]
  406980:	ldr	x0, [x19, #16]
  406984:	ldr	x2, [x19]
  406988:	sub	x0, x0, x2
  40698c:	add	x0, x1, x0
  406990:	str	x0, [sp, #224]
  406994:	ldr	x0, [x19, #24]
  406998:	ldr	x2, [x19]
  40699c:	sub	x0, x0, x2
  4069a0:	add	x1, x1, x0
  4069a4:	str	x1, [sp, #232]
  4069a8:	b	406674 <ferror@plt+0x3834>
  4069ac:	ldr	x2, [sp, #184]
  4069b0:	ldr	x1, [sp, #176]
  4069b4:	add	x0, sp, #0xd0
  4069b8:	bl	403e44 <ferror@plt+0x1004>
  4069bc:	ldr	x0, [sp, #208]
  4069c0:	bl	402ba0 <free@plt>
  4069c4:	b	40671c <ferror@plt+0x38dc>
  4069c8:	stp	x29, x30, [sp, #-112]!
  4069cc:	mov	x29, sp
  4069d0:	stp	x21, x22, [sp, #32]
  4069d4:	mov	x22, x1
  4069d8:	cmp	xzr, x1, lsr #61
  4069dc:	cset	x1, ne  // ne = any
  4069e0:	tst	x22, #0x1000000000000000
  4069e4:	csinc	w1, w1, wzr, eq  // eq = none
  4069e8:	cbnz	w1, 406a30 <ferror@plt+0x3bf0>
  4069ec:	stp	x19, x20, [sp, #16]
  4069f0:	stp	x23, x24, [sp, #48]
  4069f4:	mov	x20, x0
  4069f8:	mov	x19, x2
  4069fc:	lsl	x0, x22, #3
  406a00:	bl	40fe60 <ferror@plt+0xd020>
  406a04:	mov	x23, x0
  406a08:	str	x0, [x19]
  406a0c:	cbz	x22, 406bec <ferror@plt+0x3dac>
  406a10:	stp	x25, x26, [sp, #64]
  406a14:	stp	x27, x28, [sp, #80]
  406a18:	mov	x21, #0x0                   	// #0
  406a1c:	adrp	x24, 412000 <_obstack_memory_used@@Base+0xa28>
  406a20:	add	x24, x24, #0x360
  406a24:	mov	x26, #0x0                   	// #0
  406a28:	mov	x25, #0x9                   	// #9
  406a2c:	b	406b4c <ferror@plt+0x3d0c>
  406a30:	stp	x19, x20, [sp, #16]
  406a34:	stp	x23, x24, [sp, #48]
  406a38:	stp	x25, x26, [sp, #64]
  406a3c:	stp	x27, x28, [sp, #80]
  406a40:	bl	4100ec <ferror@plt+0xd2ac>
  406a44:	ldr	w27, [x19, #8]
  406a48:	mov	w0, w27
  406a4c:	bl	4051a4 <ferror@plt+0x2364>
  406a50:	and	w0, w0, #0xff
  406a54:	cbz	w0, 406b68 <ferror@plt+0x3d28>
  406a58:	mov	w0, w27
  406a5c:	bl	4051e0 <ferror@plt+0x23a0>
  406a60:	b	406b68 <ferror@plt+0x3d28>
  406a64:	bl	402db0 <__errno_location@plt>
  406a68:	mov	x28, x0
  406a6c:	ldr	w19, [x0]
  406a70:	cmp	w19, #0x18
  406a74:	b.ne	406a90 <ferror@plt+0x3c50>  // b.any
  406a78:	mov	w0, w27
  406a7c:	bl	402a10 <close@plt>
  406a80:	mov	w0, #0x18                  	// #24
  406a84:	str	w0, [x28]
  406a88:	mov	x19, x26
  406a8c:	b	406b34 <ferror@plt+0x3cf4>
  406a90:	mov	w2, #0x5                   	// #5
  406a94:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  406a98:	add	x1, x1, #0x300
  406a9c:	mov	x0, #0x0                   	// #0
  406aa0:	bl	402d20 <dcgettext@plt>
  406aa4:	mov	x20, x0
  406aa8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  406aac:	ldr	x1, [x0, #2928]
  406ab0:	mov	w0, #0x4                   	// #4
  406ab4:	bl	40e3ec <ferror@plt+0xb5ac>
  406ab8:	mov	x3, x0
  406abc:	mov	x2, x20
  406ac0:	mov	w1, w19
  406ac4:	mov	w0, #0x2                   	// #2
  406ac8:	bl	4027b0 <error@plt>
  406acc:	ldr	w0, [sp, #104]
  406ad0:	bl	402a10 <close@plt>
  406ad4:	mov	w1, #0x0                   	// #0
  406ad8:	mov	w0, w27
  406adc:	bl	405170 <ferror@plt+0x2330>
  406ae0:	mov	w1, #0x1                   	// #1
  406ae4:	ldr	w0, [sp, #108]
  406ae8:	bl	405170 <ferror@plt+0x2330>
  406aec:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  406af0:	ldr	x0, [x0, #2928]
  406af4:	mov	x3, #0x0                   	// #0
  406af8:	adrp	x2, 412000 <_obstack_memory_used@@Base+0xa28>
  406afc:	add	x2, x2, #0x328
  406b00:	mov	x1, x0
  406b04:	bl	402dc0 <execlp@plt>
  406b08:	bl	402db0 <__errno_location@plt>
  406b0c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  406b10:	add	x1, x1, #0x330
  406b14:	ldr	w0, [x0]
  406b18:	bl	4055ac <ferror@plt+0x276c>
  406b1c:	mov	x19, x26
  406b20:	b	406b34 <ferror@plt+0x3cf4>
  406b24:	mov	x1, x24
  406b28:	ldr	x0, [x3]
  406b2c:	bl	403a80 <ferror@plt+0xc40>
  406b30:	mov	x19, x0
  406b34:	str	x19, [x23, x21, lsl #3]
  406b38:	cbz	x19, 406bf4 <ferror@plt+0x3db4>
  406b3c:	add	x21, x21, #0x1
  406b40:	add	x20, x20, #0x10
  406b44:	cmp	x22, x21
  406b48:	b.eq	406be0 <ferror@plt+0x3da0>  // b.none
  406b4c:	mov	x3, x20
  406b50:	ldr	x19, [x20, #8]
  406b54:	cbz	x19, 406b24 <ferror@plt+0x3ce4>
  406b58:	ldrb	w2, [x19, #12]
  406b5c:	cbz	w2, 406b24 <ferror@plt+0x3ce4>
  406b60:	cmp	w2, #0x1
  406b64:	b.eq	406a44 <ferror@plt+0x3c04>  // b.none
  406b68:	mov	w1, #0x0                   	// #0
  406b6c:	add	x0, x19, #0xd
  406b70:	bl	402900 <open@plt>
  406b74:	mov	w27, w0
  406b78:	tbnz	w0, #31, 406b1c <ferror@plt+0x3cdc>
  406b7c:	mov	x1, x25
  406b80:	add	x0, sp, #0x68
  406b84:	bl	405438 <ferror@plt+0x25f8>
  406b88:	cmn	w0, #0x1
  406b8c:	b.eq	406a64 <ferror@plt+0x3c24>  // b.none
  406b90:	cbz	w0, 406acc <ferror@plt+0x3c8c>
  406b94:	str	w0, [x19, #8]
  406b98:	mov	x0, x19
  406b9c:	bl	405638 <ferror@plt+0x27f8>
  406ba0:	mov	w0, w27
  406ba4:	bl	402a10 <close@plt>
  406ba8:	ldr	w0, [sp, #108]
  406bac:	bl	402a10 <close@plt>
  406bb0:	mov	x1, x24
  406bb4:	ldr	w0, [sp, #104]
  406bb8:	bl	4029a0 <fdopen@plt>
  406bbc:	mov	x19, x0
  406bc0:	cbnz	x0, 406b34 <ferror@plt+0x3cf4>
  406bc4:	bl	402db0 <__errno_location@plt>
  406bc8:	mov	x27, x0
  406bcc:	ldr	w28, [x0]
  406bd0:	ldr	w0, [sp, #104]
  406bd4:	bl	402a10 <close@plt>
  406bd8:	str	w28, [x27]
  406bdc:	b	406b34 <ferror@plt+0x3cf4>
  406be0:	ldp	x25, x26, [sp, #64]
  406be4:	ldp	x27, x28, [sp, #80]
  406be8:	b	406bfc <ferror@plt+0x3dbc>
  406bec:	mov	x21, x22
  406bf0:	b	406bfc <ferror@plt+0x3dbc>
  406bf4:	ldp	x25, x26, [sp, #64]
  406bf8:	ldp	x27, x28, [sp, #80]
  406bfc:	mov	x0, x21
  406c00:	ldp	x19, x20, [sp, #16]
  406c04:	ldp	x23, x24, [sp, #48]
  406c08:	ldp	x21, x22, [sp, #32]
  406c0c:	ldp	x29, x30, [sp], #112
  406c10:	ret
  406c14:	stp	x29, x30, [sp, #-80]!
  406c18:	mov	x29, sp
  406c1c:	stp	x19, x20, [sp, #16]
  406c20:	stp	x21, x22, [sp, #32]
  406c24:	stp	x23, x24, [sp, #48]
  406c28:	mov	x21, x0
  406c2c:	mov	x22, x1
  406c30:	mov	x20, x2
  406c34:	mov	x23, x3
  406c38:	mov	x24, x4
  406c3c:	add	x2, sp, #0x48
  406c40:	mov	x1, x20
  406c44:	bl	4069c8 <ferror@plt+0x3b88>
  406c48:	mov	x19, x0
  406c4c:	cmp	x20, x0
  406c50:	ccmp	x0, #0x1, #0x2, hi  // hi = pmore
  406c54:	b.ls	406c8c <ferror@plt+0x3e4c>  // b.plast
  406c58:	ldr	x5, [sp, #72]
  406c5c:	mov	x4, x24
  406c60:	mov	x3, x23
  406c64:	mov	x2, x0
  406c68:	mov	x1, x22
  406c6c:	mov	x0, x21
  406c70:	bl	406394 <ferror@plt+0x3554>
  406c74:	mov	x0, x19
  406c78:	ldp	x19, x20, [sp, #16]
  406c7c:	ldp	x21, x22, [sp, #32]
  406c80:	ldp	x23, x24, [sp, #48]
  406c84:	ldp	x29, x30, [sp], #80
  406c88:	ret
  406c8c:	mov	w2, #0x5                   	// #5
  406c90:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  406c94:	add	x1, x1, #0x138
  406c98:	mov	x0, #0x0                   	// #0
  406c9c:	bl	402d20 <dcgettext@plt>
  406ca0:	lsl	x19, x19, #4
  406ca4:	ldr	x1, [x21, x19]
  406ca8:	bl	403990 <ferror@plt+0xb50>
  406cac:	stp	x29, x30, [sp, #-256]!
  406cb0:	mov	x29, sp
  406cb4:	stp	x19, x20, [sp, #16]
  406cb8:	stp	x21, x22, [sp, #32]
  406cbc:	stp	x23, x24, [sp, #48]
  406cc0:	stp	x25, x26, [sp, #64]
  406cc4:	stp	x27, x28, [sp, #80]
  406cc8:	mov	x23, x0
  406ccc:	mov	x22, x1
  406cd0:	mov	x25, x2
  406cd4:	mov	x28, x3
  406cd8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  406cdc:	ldr	w0, [x0, #1160]
  406ce0:	cmp	x2, x0
  406ce4:	b.ls	406e14 <ferror@plt+0x3fd4>  // b.plast
  406ce8:	adrp	x27, 428000 <_obstack_memory_used@@Base+0x16a28>
  406cec:	add	x27, x27, #0x3b0
  406cf0:	b	406d20 <ferror@plt+0x3ee0>
  406cf4:	sub	x2, x25, x20
  406cf8:	lsl	x2, x2, #4
  406cfc:	add	x1, x23, x20, lsl #4
  406d00:	add	x0, x23, x26, lsl #4
  406d04:	bl	402730 <memmove@plt>
  406d08:	add	x22, x22, x26
  406d0c:	sub	x20, x26, x20
  406d10:	add	x25, x25, x20
  406d14:	ldr	w0, [x27, #216]
  406d18:	cmp	x0, x25
  406d1c:	b.cs	406e14 <ferror@plt+0x3fd4>  // b.hs, b.nlast
  406d20:	ldr	w0, [x27, #216]
  406d24:	mov	x21, x23
  406d28:	mov	x26, #0x0                   	// #0
  406d2c:	mov	x20, #0x0                   	// #0
  406d30:	mov	x1, x25
  406d34:	cmp	x0, x25
  406d38:	b.hi	406d9c <ferror@plt+0x3f5c>  // b.pmore
  406d3c:	mov	w1, #0x0                   	// #0
  406d40:	add	x0, sp, #0x80
  406d44:	bl	4056b0 <ferror@plt+0x2870>
  406d48:	mov	x19, x0
  406d4c:	ldr	w2, [x27, #216]
  406d50:	add	x24, x0, #0xd
  406d54:	cmp	x2, x22
  406d58:	mov	x4, x24
  406d5c:	ldr	x3, [sp, #128]
  406d60:	csel	x1, x2, x22, ls  // ls = plast
  406d64:	add	x0, x23, x20, lsl #4
  406d68:	bl	406c14 <ferror@plt+0x3dd4>
  406d6c:	cmp	x0, x22
  406d70:	csel	x1, x0, x22, ls  // ls = plast
  406d74:	sub	x22, x22, x1
  406d78:	str	x24, [x21]
  406d7c:	str	x19, [x21, #8]
  406d80:	add	x20, x20, x0
  406d84:	add	x26, x26, #0x1
  406d88:	ldr	w0, [x27, #216]
  406d8c:	sub	x1, x25, x20
  406d90:	add	x21, x21, #0x10
  406d94:	cmp	x0, x1
  406d98:	b.ls	406d3c <ferror@plt+0x3efc>  // b.plast
  406d9c:	add	x19, x1, #0x1
  406da0:	udiv	x2, x26, x0
  406da4:	msub	x2, x2, x0, x26
  406da8:	sub	x3, x0, x2
  406dac:	cmp	x3, x1
  406db0:	b.cs	406cf4 <ferror@plt+0x3eb4>  // b.hs, b.nlast
  406db4:	sub	x0, x2, x0
  406db8:	add	x19, x0, x19
  406dbc:	mov	w1, #0x0                   	// #0
  406dc0:	add	x0, sp, #0x80
  406dc4:	bl	4056b0 <ferror@plt+0x2870>
  406dc8:	mov	x21, x0
  406dcc:	add	x24, x0, #0xd
  406dd0:	cmp	x19, x22
  406dd4:	mov	x4, x24
  406dd8:	ldr	x3, [sp, #128]
  406ddc:	mov	x2, x19
  406de0:	csel	x1, x19, x22, ls  // ls = plast
  406de4:	add	x0, x23, x20, lsl #4
  406de8:	bl	406c14 <ferror@plt+0x3dd4>
  406dec:	cmp	x0, x22
  406df0:	csel	x1, x0, x22, ls  // ls = plast
  406df4:	sub	x22, x22, x1
  406df8:	lsl	x1, x26, #4
  406dfc:	add	x2, x23, x1
  406e00:	str	x24, [x23, x1]
  406e04:	add	x26, x26, #0x1
  406e08:	str	x21, [x2, #8]
  406e0c:	add	x20, x20, x0
  406e10:	b	406cf4 <ferror@plt+0x3eb4>
  406e14:	cmp	x22, x25
  406e18:	b.cs	406f18 <ferror@plt+0x40d8>  // b.hs, b.nlast
  406e1c:	add	x20, x23, x22, lsl #4
  406e20:	mov	x24, x22
  406e24:	mov	x27, #0x0                   	// #0
  406e28:	adrp	x0, 412000 <_obstack_memory_used@@Base+0xa28>
  406e2c:	add	x0, x0, #0xd8
  406e30:	str	x0, [sp, #104]
  406e34:	b	406e80 <ferror@plt+0x4040>
  406e38:	add	x2, sp, #0x80
  406e3c:	ldr	x1, [x26]
  406e40:	mov	w0, #0x0                   	// #0
  406e44:	bl	402de0 <__xstat@plt>
  406e48:	cbnz	w0, 406e70 <ferror@plt+0x4030>
  406e4c:	b	406ed8 <ferror@plt+0x4098>
  406e50:	ldr	x0, [x21]
  406e54:	ldr	x1, [sp, #128]
  406e58:	cmp	x1, x0
  406e5c:	b.ne	406e70 <ferror@plt+0x4030>  // b.any
  406e60:	cbz	x27, 406eec <ferror@plt+0x40ac>
  406e64:	add	x0, x27, #0xd
  406e68:	str	x0, [x26]
  406e6c:	str	x27, [x26, #8]
  406e70:	add	x24, x24, #0x1
  406e74:	add	x20, x20, #0x10
  406e78:	cmp	x24, x25
  406e7c:	b.eq	406f18 <ferror@plt+0x40d8>  // b.none
  406e80:	mov	x26, x20
  406e84:	ldr	x21, [x20]
  406e88:	ldr	x1, [sp, #104]
  406e8c:	mov	x0, x21
  406e90:	bl	402b50 <strcmp@plt>
  406e94:	mov	w19, w0
  406e98:	cbz	x28, 406eb4 <ferror@plt+0x4074>
  406e9c:	mov	x1, x21
  406ea0:	mov	x0, x28
  406ea4:	bl	402b50 <strcmp@plt>
  406ea8:	cmp	w0, #0x0
  406eac:	ccmp	w19, #0x0, #0x4, eq  // eq = none
  406eb0:	b.ne	406e60 <ferror@plt+0x4020>  // b.any
  406eb4:	bl	4039fc <ferror@plt+0xbbc>
  406eb8:	mov	x21, x0
  406ebc:	cbz	x0, 406f18 <ferror@plt+0x40d8>
  406ec0:	cbnz	w19, 406e38 <ferror@plt+0x3ff8>
  406ec4:	add	x2, sp, #0x80
  406ec8:	mov	w1, #0x0                   	// #0
  406ecc:	mov	w0, #0x0                   	// #0
  406ed0:	bl	402d10 <__fxstat@plt>
  406ed4:	cbnz	w0, 406e70 <ferror@plt+0x4030>
  406ed8:	ldr	x0, [x21, #8]
  406edc:	ldr	x1, [sp, #136]
  406ee0:	cmp	x1, x0
  406ee4:	b.ne	406e70 <ferror@plt+0x4030>  // b.any
  406ee8:	b	406e50 <ferror@plt+0x4010>
  406eec:	mov	w1, #0x0                   	// #0
  406ef0:	add	x0, sp, #0x78
  406ef4:	bl	4056b0 <ferror@plt+0x2870>
  406ef8:	mov	x27, x0
  406efc:	add	x4, x0, #0xd
  406f00:	ldr	x3, [sp, #120]
  406f04:	mov	x2, #0x1                   	// #1
  406f08:	mov	x1, #0x0                   	// #0
  406f0c:	mov	x0, x26
  406f10:	bl	406c14 <ferror@plt+0x3dd4>
  406f14:	b	406e64 <ferror@plt+0x4024>
  406f18:	adrp	x0, 412000 <_obstack_memory_used@@Base+0xa28>
  406f1c:	add	x0, x0, #0x2b8
  406f20:	str	x0, [sp, #104]
  406f24:	add	x27, x23, #0x10
  406f28:	b	406fd8 <ferror@plt+0x4198>
  406f2c:	ldr	x1, [sp, #104]
  406f30:	mov	x0, x28
  406f34:	bl	403a80 <ferror@plt+0xc40>
  406f38:	cbnz	x0, 40701c <ferror@plt+0x41dc>
  406f3c:	bl	402db0 <__errno_location@plt>
  406f40:	ldr	w0, [x0]
  406f44:	cmp	w0, #0x18
  406f48:	ccmp	x19, #0x2, #0x0, eq  // eq = none
  406f4c:	b.ls	407054 <ferror@plt+0x4214>  // b.plast
  406f50:	sub	x24, x19, #0x1
  406f54:	add	x24, x23, x24, lsl #4
  406f58:	sub	x19, x19, #0x1
  406f5c:	mov	x21, x24
  406f60:	ldr	x1, [x24], #-16
  406f64:	ldr	x0, [sp, #120]
  406f68:	ldr	x0, [x0, x19, lsl #3]
  406f6c:	bl	403bf4 <ferror@plt+0xdb4>
  406f70:	cmp	x19, #0x2
  406f74:	cset	w1, hi  // hi = pmore
  406f78:	add	x0, sp, #0x80
  406f7c:	bl	4056b0 <ferror@plt+0x2870>
  406f80:	mov	x20, x0
  406f84:	cbz	x0, 406f58 <ferror@plt+0x4118>
  406f88:	cmp	x22, x19
  406f8c:	csel	x24, x22, x19, ls  // ls = plast
  406f90:	add	x26, x0, #0xd
  406f94:	ldr	x5, [sp, #120]
  406f98:	mov	x4, x26
  406f9c:	ldr	x3, [sp, #128]
  406fa0:	mov	x2, x19
  406fa4:	mov	x1, x24
  406fa8:	mov	x0, x23
  406fac:	bl	406394 <ferror@plt+0x3554>
  406fb0:	str	x26, [x23]
  406fb4:	str	x20, [x23, #8]
  406fb8:	sub	x25, x25, x19
  406fbc:	lsl	x2, x25, #4
  406fc0:	mov	x1, x21
  406fc4:	mov	x0, x27
  406fc8:	bl	402730 <memmove@plt>
  406fcc:	sub	x22, x22, x24
  406fd0:	add	x22, x22, #0x1
  406fd4:	add	x25, x25, #0x1
  406fd8:	add	x2, sp, #0x78
  406fdc:	mov	x1, x25
  406fe0:	mov	x0, x23
  406fe4:	bl	4069c8 <ferror@plt+0x3b88>
  406fe8:	mov	x19, x0
  406fec:	cmp	x25, x0
  406ff0:	b.eq	406f2c <ferror@plt+0x40ec>  // b.none
  406ff4:	cmp	x0, #0x2
  406ff8:	b.hi	406f50 <ferror@plt+0x4110>  // b.pmore
  406ffc:	mov	w2, #0x5                   	// #5
  407000:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407004:	add	x1, x1, #0x138
  407008:	mov	x0, #0x0                   	// #0
  40700c:	bl	402d20 <dcgettext@plt>
  407010:	lsl	x19, x19, #4
  407014:	ldr	x1, [x23, x19]
  407018:	bl	403990 <ferror@plt+0xb50>
  40701c:	ldr	x5, [sp, #120]
  407020:	mov	x4, x28
  407024:	mov	x3, x0
  407028:	mov	x2, x19
  40702c:	mov	x1, x22
  407030:	mov	x0, x23
  407034:	bl	406394 <ferror@plt+0x3554>
  407038:	ldp	x19, x20, [sp, #16]
  40703c:	ldp	x21, x22, [sp, #32]
  407040:	ldp	x23, x24, [sp, #48]
  407044:	ldp	x25, x26, [sp, #64]
  407048:	ldp	x27, x28, [sp, #80]
  40704c:	ldp	x29, x30, [sp], #256
  407050:	ret
  407054:	mov	w2, #0x5                   	// #5
  407058:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  40705c:	add	x1, x1, #0x138
  407060:	mov	x0, #0x0                   	// #0
  407064:	bl	402d20 <dcgettext@plt>
  407068:	mov	x1, x28
  40706c:	bl	403990 <ferror@plt+0xb50>
  407070:	stp	x29, x30, [sp, #-160]!
  407074:	mov	x29, sp
  407078:	stp	x19, x20, [sp, #16]
  40707c:	str	x21, [sp, #32]
  407080:	mov	w20, w0
  407084:	cbz	w0, 4070c4 <ferror@plt+0x4284>
  407088:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40708c:	ldr	x19, [x0, #1328]
  407090:	mov	w2, #0x5                   	// #5
  407094:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407098:	add	x1, x1, #0x378
  40709c:	mov	x0, #0x0                   	// #0
  4070a0:	bl	402d20 <dcgettext@plt>
  4070a4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  4070a8:	ldr	x3, [x1, #2992]
  4070ac:	mov	x2, x0
  4070b0:	mov	w1, #0x1                   	// #1
  4070b4:	mov	x0, x19
  4070b8:	bl	402b30 <__fprintf_chk@plt>
  4070bc:	mov	w0, w20
  4070c0:	bl	402790 <exit@plt>
  4070c4:	mov	w2, #0x5                   	// #5
  4070c8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4070cc:	add	x1, x1, #0x3a0
  4070d0:	mov	x0, #0x0                   	// #0
  4070d4:	bl	402d20 <dcgettext@plt>
  4070d8:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  4070dc:	ldr	x2, [x1, #2992]
  4070e0:	mov	x3, x2
  4070e4:	mov	x1, x0
  4070e8:	mov	w0, #0x1                   	// #1
  4070ec:	bl	402980 <__printf_chk@plt>
  4070f0:	mov	w2, #0x5                   	// #5
  4070f4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4070f8:	add	x1, x1, #0x3e8
  4070fc:	mov	x0, #0x0                   	// #0
  407100:	bl	402d20 <dcgettext@plt>
  407104:	adrp	x19, 428000 <_obstack_memory_used@@Base+0x16a28>
  407108:	ldr	x1, [x19, #1352]
  40710c:	bl	402d30 <fputs_unlocked@plt>
  407110:	mov	w2, #0x5                   	// #5
  407114:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407118:	add	x1, x1, #0x428
  40711c:	mov	x0, #0x0                   	// #0
  407120:	bl	402d20 <dcgettext@plt>
  407124:	ldr	x1, [x19, #1352]
  407128:	bl	402d30 <fputs_unlocked@plt>
  40712c:	mov	w2, #0x5                   	// #5
  407130:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407134:	add	x1, x1, #0x460
  407138:	mov	x0, #0x0                   	// #0
  40713c:	bl	402d20 <dcgettext@plt>
  407140:	ldr	x1, [x19, #1352]
  407144:	bl	402d30 <fputs_unlocked@plt>
  407148:	mov	w2, #0x5                   	// #5
  40714c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407150:	add	x1, x1, #0x4b0
  407154:	mov	x0, #0x0                   	// #0
  407158:	bl	402d20 <dcgettext@plt>
  40715c:	ldr	x1, [x19, #1352]
  407160:	bl	402d30 <fputs_unlocked@plt>
  407164:	mov	w2, #0x5                   	// #5
  407168:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  40716c:	add	x1, x1, #0x4c8
  407170:	mov	x0, #0x0                   	// #0
  407174:	bl	402d20 <dcgettext@plt>
  407178:	ldr	x1, [x19, #1352]
  40717c:	bl	402d30 <fputs_unlocked@plt>
  407180:	mov	w2, #0x5                   	// #5
  407184:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407188:	add	x1, x1, #0x598
  40718c:	mov	x0, #0x0                   	// #0
  407190:	bl	402d20 <dcgettext@plt>
  407194:	ldr	x1, [x19, #1352]
  407198:	bl	402d30 <fputs_unlocked@plt>
  40719c:	mov	w2, #0x5                   	// #5
  4071a0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4071a4:	add	x1, x1, #0x670
  4071a8:	mov	x0, #0x0                   	// #0
  4071ac:	bl	402d20 <dcgettext@plt>
  4071b0:	ldr	x1, [x19, #1352]
  4071b4:	bl	402d30 <fputs_unlocked@plt>
  4071b8:	mov	w2, #0x5                   	// #5
  4071bc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4071c0:	add	x1, x1, #0x6c0
  4071c4:	mov	x0, #0x0                   	// #0
  4071c8:	bl	402d20 <dcgettext@plt>
  4071cc:	ldr	x1, [x19, #1352]
  4071d0:	bl	402d30 <fputs_unlocked@plt>
  4071d4:	mov	w2, #0x5                   	// #5
  4071d8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4071dc:	add	x1, x1, #0x7d8
  4071e0:	mov	x0, #0x0                   	// #0
  4071e4:	bl	402d20 <dcgettext@plt>
  4071e8:	ldr	x1, [x19, #1352]
  4071ec:	bl	402d30 <fputs_unlocked@plt>
  4071f0:	mov	w2, #0x5                   	// #5
  4071f4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4071f8:	add	x1, x1, #0x8f0
  4071fc:	mov	x0, #0x0                   	// #0
  407200:	bl	402d20 <dcgettext@plt>
  407204:	ldr	x1, [x19, #1352]
  407208:	bl	402d30 <fputs_unlocked@plt>
  40720c:	mov	w2, #0x5                   	// #5
  407210:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407214:	add	x1, x1, #0x908
  407218:	mov	x0, #0x0                   	// #0
  40721c:	bl	402d20 <dcgettext@plt>
  407220:	ldr	x1, [x19, #1352]
  407224:	bl	402d30 <fputs_unlocked@plt>
  407228:	mov	w2, #0x5                   	// #5
  40722c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407230:	add	x1, x1, #0x980
  407234:	mov	x0, #0x0                   	// #0
  407238:	bl	402d20 <dcgettext@plt>
  40723c:	ldr	x1, [x19, #1352]
  407240:	bl	402d30 <fputs_unlocked@plt>
  407244:	mov	w2, #0x5                   	// #5
  407248:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  40724c:	add	x1, x1, #0xa98
  407250:	mov	x0, #0x0                   	// #0
  407254:	bl	402d20 <dcgettext@plt>
  407258:	ldr	x1, [x19, #1352]
  40725c:	bl	402d30 <fputs_unlocked@plt>
  407260:	mov	w2, #0x5                   	// #5
  407264:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407268:	add	x1, x1, #0xbf8
  40726c:	mov	x0, #0x0                   	// #0
  407270:	bl	402d20 <dcgettext@plt>
  407274:	ldr	x1, [x19, #1352]
  407278:	bl	402d30 <fputs_unlocked@plt>
  40727c:	mov	w2, #0x5                   	// #5
  407280:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407284:	add	x1, x1, #0xc88
  407288:	mov	x0, #0x0                   	// #0
  40728c:	bl	402d20 <dcgettext@plt>
  407290:	ldr	x1, [x19, #1352]
  407294:	bl	402d30 <fputs_unlocked@plt>
  407298:	mov	w2, #0x5                   	// #5
  40729c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4072a0:	add	x1, x1, #0xd60
  4072a4:	mov	x0, #0x0                   	// #0
  4072a8:	bl	402d20 <dcgettext@plt>
  4072ac:	adrp	x2, 412000 <_obstack_memory_used@@Base+0xa28>
  4072b0:	add	x2, x2, #0xf28
  4072b4:	mov	x1, x0
  4072b8:	mov	w0, #0x1                   	// #1
  4072bc:	bl	402980 <__printf_chk@plt>
  4072c0:	mov	w2, #0x5                   	// #5
  4072c4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4072c8:	add	x1, x1, #0xf30
  4072cc:	mov	x0, #0x0                   	// #0
  4072d0:	bl	402d20 <dcgettext@plt>
  4072d4:	ldr	x1, [x19, #1352]
  4072d8:	bl	402d30 <fputs_unlocked@plt>
  4072dc:	mov	w2, #0x5                   	// #5
  4072e0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4072e4:	add	x1, x1, #0xf70
  4072e8:	mov	x0, #0x0                   	// #0
  4072ec:	bl	402d20 <dcgettext@plt>
  4072f0:	ldr	x1, [x19, #1352]
  4072f4:	bl	402d30 <fputs_unlocked@plt>
  4072f8:	mov	w2, #0x5                   	// #5
  4072fc:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407300:	add	x1, x1, #0xfa0
  407304:	mov	x0, #0x0                   	// #0
  407308:	bl	402d20 <dcgettext@plt>
  40730c:	ldr	x1, [x19, #1352]
  407310:	bl	402d30 <fputs_unlocked@plt>
  407314:	mov	w2, #0x5                   	// #5
  407318:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  40731c:	add	x1, x1, #0xfd8
  407320:	mov	x0, #0x0                   	// #0
  407324:	bl	402d20 <dcgettext@plt>
  407328:	ldr	x1, [x19, #1352]
  40732c:	bl	402d30 <fputs_unlocked@plt>
  407330:	mov	w2, #0x5                   	// #5
  407334:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407338:	add	x1, x1, #0x238
  40733c:	mov	x0, #0x0                   	// #0
  407340:	bl	402d20 <dcgettext@plt>
  407344:	ldr	x1, [x19, #1352]
  407348:	bl	402d30 <fputs_unlocked@plt>
  40734c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  407350:	add	x2, x2, #0xde8
  407354:	add	x0, x2, #0x110
  407358:	ldr	x1, [x2, #272]
  40735c:	ldr	x2, [x2, #280]
  407360:	str	x1, [sp, #48]
  407364:	str	x2, [sp, #56]
  407368:	ldp	x2, x3, [x0, #16]
  40736c:	stp	x2, x3, [sp, #64]
  407370:	ldp	x2, x3, [x0, #32]
  407374:	stp	x2, x3, [sp, #80]
  407378:	ldp	x2, x3, [x0, #48]
  40737c:	stp	x2, x3, [sp, #96]
  407380:	ldp	x2, x3, [x0, #64]
  407384:	stp	x2, x3, [sp, #112]
  407388:	ldp	x2, x3, [x0, #80]
  40738c:	stp	x2, x3, [sp, #128]
  407390:	ldp	x2, x3, [x0, #96]
  407394:	stp	x2, x3, [sp, #144]
  407398:	add	x19, sp, #0x30
  40739c:	cbz	x1, 4073c0 <ferror@plt+0x4580>
  4073a0:	add	x19, sp, #0x30
  4073a4:	adrp	x21, 413000 <_obstack_memory_used@@Base+0x1a28>
  4073a8:	add	x21, x21, #0xae0
  4073ac:	mov	x0, x21
  4073b0:	bl	402b50 <strcmp@plt>
  4073b4:	cbz	w0, 4073c0 <ferror@plt+0x4580>
  4073b8:	ldr	x1, [x19, #16]!
  4073bc:	cbnz	x1, 4073ac <ferror@plt+0x456c>
  4073c0:	ldr	x19, [x19, #8]
  4073c4:	cbz	x19, 407514 <ferror@plt+0x46d4>
  4073c8:	mov	w2, #0x5                   	// #5
  4073cc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4073d0:	add	x1, x1, #0x320
  4073d4:	mov	x0, #0x0                   	// #0
  4073d8:	bl	402d20 <dcgettext@plt>
  4073dc:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x1a28>
  4073e0:	add	x3, x3, #0x338
  4073e4:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  4073e8:	add	x2, x2, #0x360
  4073ec:	mov	x1, x0
  4073f0:	mov	w0, #0x1                   	// #1
  4073f4:	bl	402980 <__printf_chk@plt>
  4073f8:	mov	x1, #0x0                   	// #0
  4073fc:	mov	w0, #0x5                   	// #5
  407400:	bl	402e30 <setlocale@plt>
  407404:	cbz	x0, 40741c <ferror@plt+0x45dc>
  407408:	mov	x2, #0x3                   	// #3
  40740c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407410:	add	x1, x1, #0x370
  407414:	bl	402940 <strncmp@plt>
  407418:	cbnz	w0, 407498 <ferror@plt+0x4658>
  40741c:	mov	w2, #0x5                   	// #5
  407420:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407424:	add	x1, x1, #0x3c0
  407428:	mov	x0, #0x0                   	// #0
  40742c:	bl	402d20 <dcgettext@plt>
  407430:	adrp	x21, 413000 <_obstack_memory_used@@Base+0x1a28>
  407434:	add	x21, x21, #0xae0
  407438:	mov	x3, x21
  40743c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  407440:	add	x2, x2, #0x338
  407444:	mov	x1, x0
  407448:	mov	w0, #0x1                   	// #1
  40744c:	bl	402980 <__printf_chk@plt>
  407450:	mov	w2, #0x5                   	// #5
  407454:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407458:	add	x1, x1, #0x3e0
  40745c:	mov	x0, #0x0                   	// #0
  407460:	bl	402d20 <dcgettext@plt>
  407464:	mov	x1, x0
  407468:	adrp	x3, 412000 <_obstack_memory_used@@Base+0xa28>
  40746c:	add	x0, x3, #0x900
  407470:	adrp	x3, 412000 <_obstack_memory_used@@Base+0xa28>
  407474:	add	x3, x3, #0x368
  407478:	cmp	x19, x21
  40747c:	csel	x3, x3, x0, eq  // eq = none
  407480:	mov	x2, x19
  407484:	mov	w0, #0x1                   	// #1
  407488:	bl	402980 <__printf_chk@plt>
  40748c:	b	4070bc <ferror@plt+0x427c>
  407490:	adrp	x19, 413000 <_obstack_memory_used@@Base+0x1a28>
  407494:	add	x19, x19, #0xae0
  407498:	mov	w2, #0x5                   	// #5
  40749c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4074a0:	add	x1, x1, #0x378
  4074a4:	mov	x0, #0x0                   	// #0
  4074a8:	bl	402d20 <dcgettext@plt>
  4074ac:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  4074b0:	ldr	x1, [x1, #1352]
  4074b4:	bl	402d30 <fputs_unlocked@plt>
  4074b8:	b	40741c <ferror@plt+0x45dc>
  4074bc:	mov	w2, #0x5                   	// #5
  4074c0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4074c4:	add	x1, x1, #0x3c0
  4074c8:	mov	x0, #0x0                   	// #0
  4074cc:	bl	402d20 <dcgettext@plt>
  4074d0:	adrp	x19, 413000 <_obstack_memory_used@@Base+0x1a28>
  4074d4:	add	x19, x19, #0xae0
  4074d8:	mov	x3, x19
  4074dc:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  4074e0:	add	x2, x2, #0x338
  4074e4:	mov	x1, x0
  4074e8:	mov	w0, #0x1                   	// #1
  4074ec:	bl	402980 <__printf_chk@plt>
  4074f0:	mov	w2, #0x5                   	// #5
  4074f4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4074f8:	add	x1, x1, #0x3e0
  4074fc:	mov	x0, #0x0                   	// #0
  407500:	bl	402d20 <dcgettext@plt>
  407504:	mov	x1, x0
  407508:	adrp	x2, 412000 <_obstack_memory_used@@Base+0xa28>
  40750c:	add	x3, x2, #0x368
  407510:	b	407480 <ferror@plt+0x4640>
  407514:	mov	w2, #0x5                   	// #5
  407518:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  40751c:	add	x1, x1, #0x320
  407520:	mov	x0, #0x0                   	// #0
  407524:	bl	402d20 <dcgettext@plt>
  407528:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x1a28>
  40752c:	add	x3, x3, #0x338
  407530:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  407534:	add	x2, x2, #0x360
  407538:	mov	x1, x0
  40753c:	mov	w0, #0x1                   	// #1
  407540:	bl	402980 <__printf_chk@plt>
  407544:	mov	x1, #0x0                   	// #0
  407548:	mov	w0, #0x5                   	// #5
  40754c:	bl	402e30 <setlocale@plt>
  407550:	cbz	x0, 4074bc <ferror@plt+0x467c>
  407554:	mov	x2, #0x3                   	// #3
  407558:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  40755c:	add	x1, x1, #0x370
  407560:	bl	402940 <strncmp@plt>
  407564:	cbnz	w0, 407490 <ferror@plt+0x4650>
  407568:	mov	w2, #0x5                   	// #5
  40756c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407570:	add	x1, x1, #0x3c0
  407574:	mov	x0, #0x0                   	// #0
  407578:	bl	402d20 <dcgettext@plt>
  40757c:	adrp	x19, 413000 <_obstack_memory_used@@Base+0x1a28>
  407580:	add	x19, x19, #0xae0
  407584:	mov	x3, x19
  407588:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  40758c:	add	x2, x2, #0x338
  407590:	mov	x1, x0
  407594:	mov	w0, #0x1                   	// #1
  407598:	bl	402980 <__printf_chk@plt>
  40759c:	mov	w2, #0x5                   	// #5
  4075a0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4075a4:	add	x1, x1, #0x3e0
  4075a8:	mov	x0, #0x0                   	// #0
  4075ac:	bl	402d20 <dcgettext@plt>
  4075b0:	mov	x1, x0
  4075b4:	adrp	x3, 412000 <_obstack_memory_used@@Base+0xa28>
  4075b8:	add	x3, x3, #0x368
  4075bc:	b	407480 <ferror@plt+0x4640>
  4075c0:	sub	sp, sp, #0x3a0
  4075c4:	stp	x29, x30, [sp]
  4075c8:	mov	x29, sp
  4075cc:	stp	x19, x20, [sp, #16]
  4075d0:	stp	x21, x22, [sp, #32]
  4075d4:	stp	x23, x24, [sp, #48]
  4075d8:	stp	x25, x26, [sp, #64]
  4075dc:	stp	x27, x28, [sp, #80]
  4075e0:	str	d8, [sp, #96]
  4075e4:	mov	w22, w0
  4075e8:	mov	x23, x1
  4075ec:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  4075f0:	add	x0, x0, #0x418
  4075f4:	bl	402dd0 <getenv@plt>
  4075f8:	str	x0, [sp, #176]
  4075fc:	cmp	x0, #0x0
  407600:	cset	w26, ne  // ne = any
  407604:	bl	40cb50 <ferror@plt+0x9d10>
  407608:	sub	w0, w0, #0x30, lsl #12
  40760c:	sub	w0, w0, #0xdb0
  407610:	cmp	w0, #0x2b8
  407614:	cset	w28, hi  // hi = pmore
  407618:	ldr	x0, [x23]
  40761c:	bl	40cbd4 <ferror@plt+0x9d94>
  407620:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407624:	add	x1, x1, #0x900
  407628:	mov	w0, #0x6                   	// #6
  40762c:	bl	402e30 <setlocale@plt>
  407630:	str	x0, [sp, #160]
  407634:	adrp	x19, 411000 <ferror@plt+0xe1c0>
  407638:	add	x19, x19, #0xfd8
  40763c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407640:	add	x1, x1, #0x428
  407644:	mov	x0, x19
  407648:	bl	402950 <bindtextdomain@plt>
  40764c:	mov	x0, x19
  407650:	bl	402b10 <textdomain@plt>
  407654:	mov	w20, #0x2                   	// #2
  407658:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40765c:	str	w20, [x0, #1216]
  407660:	mov	w0, #0x3                   	// #3
  407664:	bl	40b190 <ferror@plt+0x8350>
  407668:	adrp	x19, 428000 <_obstack_memory_used@@Base+0x16a28>
  40766c:	add	x19, x19, #0x568
  407670:	strb	w0, [x19, #1339]
  407674:	mov	w0, w20
  407678:	bl	40b190 <ferror@plt+0x8350>
  40767c:	and	w1, w0, #0xff
  407680:	str	w1, [sp, #112]
  407684:	strb	w0, [x19, #1576]
  407688:	bl	402870 <localeconv@plt>
  40768c:	ldr	x2, [x0]
  407690:	ldrb	w1, [x2]
  407694:	str	w1, [x19, #260]
  407698:	cbz	w1, 4076a4 <ferror@plt+0x4864>
  40769c:	ldrb	w1, [x2, #1]
  4076a0:	cbz	w1, 4076b0 <ferror@plt+0x4870>
  4076a4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  4076a8:	mov	w2, #0x2e                  	// #46
  4076ac:	str	w2, [x1, #1644]
  4076b0:	ldr	x1, [x0, #8]
  4076b4:	ldrb	w0, [x1]
  4076b8:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x16a28>
  4076bc:	str	w0, [x2, #1640]
  4076c0:	cbz	w0, 4076cc <ferror@plt+0x488c>
  4076c4:	ldrb	w0, [x1, #1]
  4076c8:	cbz	w0, 4076d8 <ferror@plt+0x4898>
  4076cc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4076d0:	mov	w1, #0xffffffff            	// #-1
  4076d4:	str	w1, [x0, #1640]
  4076d8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4076dc:	strb	wzr, [x0, #2684]
  4076e0:	bl	402b60 <__ctype_b_loc@plt>
  4076e4:	mov	x20, x0
  4076e8:	mov	x19, #0x0                   	// #0
  4076ec:	adrp	x21, 428000 <_obstack_memory_used@@Base+0x16a28>
  4076f0:	add	x21, x21, #0x568
  4076f4:	add	x27, x21, #0x308
  4076f8:	add	x25, x21, #0x208
  4076fc:	add	x24, x21, #0x108
  407700:	b	407714 <ferror@plt+0x48d4>
  407704:	strb	w6, [x19, x24]
  407708:	add	x19, x19, #0x1
  40770c:	cmp	x19, #0x100
  407710:	b.eq	407798 <ferror@plt+0x4958>  // b.none
  407714:	ldr	x0, [x20]
  407718:	ubfiz	x3, x19, #1, #8
  40771c:	and	w1, w19, #0xff
  407720:	cmp	w1, #0xa
  407724:	cset	w2, eq  // eq = none
  407728:	ldrh	w1, [x0, x3]
  40772c:	tst	x1, #0x1
  407730:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  407734:	cset	w1, ne  // ne = any
  407738:	strb	w1, [x19, x21]
  40773c:	mov	w1, w19
  407740:	mov	w6, w19
  407744:	lsl	x5, x19, #1
  407748:	ldrh	w0, [x0, x5]
  40774c:	eor	x0, x0, #0x4000
  407750:	ubfx	x0, x0, #14, #1
  407754:	strb	w0, [x19, x27]
  407758:	ldr	x4, [x20]
  40775c:	ldrh	w5, [x4, x5]
  407760:	mov	w0, #0x0                   	// #0
  407764:	tbnz	w5, #3, 407778 <ferror@plt+0x4938>
  407768:	ldrh	w0, [x4, x3]
  40776c:	tst	x0, #0x1
  407770:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  407774:	cset	w0, eq  // eq = none
  407778:	strb	w0, [x25, x19]
  40777c:	add	w0, w1, #0x80
  407780:	cmp	w0, #0x17f
  407784:	b.hi	407704 <ferror@plt+0x48c4>  // b.pmore
  407788:	bl	4029f0 <__ctype_toupper_loc@plt>
  40778c:	ldr	x0, [x0]
  407790:	ldr	w6, [x0, x19, lsl #2]
  407794:	b	407704 <ferror@plt+0x48c4>
  407798:	ldr	w0, [sp, #112]
  40779c:	cbz	w0, 407860 <ferror@plt+0x4a20>
  4077a0:	adrp	x27, 428000 <_obstack_memory_used@@Base+0x16a28>
  4077a4:	add	x27, x27, #0x3b0
  4077a8:	add	x27, x27, #0x8
  4077ac:	mov	x24, #0x1                   	// #1
  4077b0:	adrp	x25, 428000 <_obstack_memory_used@@Base+0x16a28>
  4077b4:	add	x25, x25, #0x568
  4077b8:	add	x25, x25, #0x108
  4077bc:	b	407800 <ferror@plt+0x49c0>
  4077c0:	ldrb	w2, [x25, w2, sxtw]
  4077c4:	strb	w2, [x0, x19]
  4077c8:	add	x19, x19, #0x1
  4077cc:	add	x1, x1, #0x1
  4077d0:	cmp	x21, x1
  4077d4:	b.eq	4077ec <ferror@plt+0x49ac>  // b.none
  4077d8:	ldrb	w2, [x1]
  4077dc:	and	x3, x2, #0xff
  4077e0:	ldrh	w3, [x4, x3, lsl #1]
  4077e4:	tbnz	w3, #0, 4077cc <ferror@plt+0x498c>
  4077e8:	b	4077c0 <ferror@plt+0x4980>
  4077ec:	strb	wzr, [x0, x19]
  4077f0:	add	x24, x24, #0x1
  4077f4:	add	x27, x27, #0x10
  4077f8:	cmp	x24, #0xd
  4077fc:	b.eq	407840 <ferror@plt+0x4a00>  // b.none
  407800:	add	w0, w24, #0x20, lsl #12
  407804:	add	w0, w0, #0xd
  407808:	bl	4028c0 <nl_langinfo@plt>
  40780c:	mov	x21, x0
  407810:	bl	402780 <strlen@plt>
  407814:	mov	x19, x0
  407818:	add	x0, x0, #0x1
  40781c:	bl	40fe60 <ferror@plt+0xd020>
  407820:	str	x0, [x27]
  407824:	str	w24, [x27, #8]
  407828:	cbz	x19, 4077ec <ferror@plt+0x49ac>
  40782c:	ldr	x4, [x20]
  407830:	mov	x1, x21
  407834:	add	x21, x21, x19
  407838:	mov	x19, #0x0                   	// #0
  40783c:	b	4077d8 <ferror@plt+0x4998>
  407840:	adrp	x3, 403000 <ferror@plt+0x1c0>
  407844:	add	x3, x3, #0x6c4
  407848:	mov	x2, #0x10                  	// #16
  40784c:	mov	x1, #0xc                   	// #12
  407850:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407854:	add	x0, x0, #0x3b0
  407858:	add	x0, x0, #0x8
  40785c:	bl	402810 <qsort@plt>
  407860:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407864:	add	x0, x0, #0x568
  407868:	add	x0, x0, #0x408
  40786c:	bl	402920 <sigemptyset@plt>
  407870:	adrp	x21, 413000 <_obstack_memory_used@@Base+0x1a28>
  407874:	add	x21, x21, #0xde8
  407878:	add	x19, x21, #0x180
  40787c:	add	x21, x21, #0x1ac
  407880:	mov	x20, x19
  407884:	adrp	x25, 428000 <_obstack_memory_used@@Base+0x16a28>
  407888:	add	x25, x25, #0x568
  40788c:	add	x25, x25, #0x408
  407890:	b	4078ac <ferror@plt+0x4a6c>
  407894:	mov	w1, w24
  407898:	mov	x0, x25
  40789c:	bl	402d80 <sigaddset@plt>
  4078a0:	add	x20, x20, #0x4
  4078a4:	cmp	x20, x21
  4078a8:	b.eq	4078d0 <ferror@plt+0x4a90>  // b.none
  4078ac:	ldr	w24, [x20]
  4078b0:	add	x2, sp, #0x158
  4078b4:	mov	x1, #0x0                   	// #0
  4078b8:	mov	w0, w24
  4078bc:	bl	402a20 <sigaction@plt>
  4078c0:	ldr	x0, [sp, #344]
  4078c4:	cmp	x0, #0x1
  4078c8:	b.ne	407894 <ferror@plt+0x4a54>  // b.any
  4078cc:	b	4078a0 <ferror@plt+0x4a60>
  4078d0:	adrp	x0, 403000 <ferror@plt+0x1c0>
  4078d4:	add	x0, x0, #0x864
  4078d8:	str	x0, [sp, #344]
  4078dc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4078e0:	add	x0, x0, #0x568
  4078e4:	add	x0, x0, #0x408
  4078e8:	ldp	x2, x3, [x0]
  4078ec:	stp	x2, x3, [sp, #352]
  4078f0:	ldp	x2, x3, [x0, #16]
  4078f4:	stp	x2, x3, [sp, #368]
  4078f8:	ldp	x2, x3, [x0, #32]
  4078fc:	stp	x2, x3, [sp, #384]
  407900:	ldp	x2, x3, [x0, #48]
  407904:	stp	x2, x3, [sp, #400]
  407908:	ldp	x2, x3, [x0, #64]
  40790c:	stp	x2, x3, [sp, #416]
  407910:	ldp	x2, x3, [x0, #80]
  407914:	stp	x2, x3, [sp, #432]
  407918:	ldp	x2, x3, [x0, #96]
  40791c:	stp	x2, x3, [sp, #448]
  407920:	ldp	x0, x1, [x0, #112]
  407924:	stp	x0, x1, [sp, #464]
  407928:	str	wzr, [sp, #480]
  40792c:	adrp	x24, 428000 <_obstack_memory_used@@Base+0x16a28>
  407930:	add	x24, x24, #0x568
  407934:	add	x24, x24, #0x408
  407938:	b	407948 <ferror@plt+0x4b08>
  40793c:	add	x19, x19, #0x4
  407940:	cmp	x21, x19
  407944:	b.eq	407970 <ferror@plt+0x4b30>  // b.none
  407948:	ldr	w20, [x19]
  40794c:	mov	w1, w20
  407950:	mov	x0, x24
  407954:	bl	402b40 <sigismember@plt>
  407958:	cbz	w0, 40793c <ferror@plt+0x4afc>
  40795c:	mov	x2, #0x0                   	// #0
  407960:	add	x1, sp, #0x158
  407964:	mov	w0, w20
  407968:	bl	402a20 <sigaction@plt>
  40796c:	b	40793c <ferror@plt+0x4afc>
  407970:	mov	x1, #0x0                   	// #0
  407974:	mov	w0, #0x11                  	// #17
  407978:	bl	402890 <signal@plt>
  40797c:	adrp	x0, 403000 <ferror@plt+0x1c0>
  407980:	add	x0, x0, #0x82c
  407984:	bl	411f88 <_obstack_memory_used@@Base+0x9b0>
  407988:	add	x0, sp, #0x310
  40798c:	bl	403898 <ferror@plt+0xa58>
  407990:	mov	x0, #0xffffffffffffffff    	// #-1
  407994:	str	x0, [sp, #784]
  407998:	sxtw	x0, w22
  40799c:	sbfiz	x1, x22, #3, #32
  4079a0:	cmp	xzr, x0, lsr #61
  4079a4:	cset	x2, ne  // ne = any
  4079a8:	cmp	x1, #0x0
  4079ac:	csinc	x1, x2, xzr, ge  // ge = tcont
  4079b0:	str	w1, [sp, #200]
  4079b4:	cbnz	w1, 407a04 <ferror@plt+0x4bc4>
  4079b8:	lsl	x0, x0, #3
  4079bc:	bl	40fe60 <ferror@plt+0xd020>
  4079c0:	mov	x25, x0
  4079c4:	ldr	w24, [sp, #200]
  4079c8:	str	xzr, [sp, #136]
  4079cc:	str	xzr, [sp, #128]
  4079d0:	mov	x19, #0x0                   	// #0
  4079d4:	str	xzr, [sp, #168]
  4079d8:	str	xzr, [sp, #144]
  4079dc:	mov	w27, #0x0                   	// #0
  4079e0:	mov	w20, #0x0                   	// #0
  4079e4:	adrp	x21, 428000 <_obstack_memory_used@@Base+0x16a28>
  4079e8:	add	x21, x21, #0x540
  4079ec:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  4079f0:	add	x0, x0, #0xde8
  4079f4:	str	x0, [sp, #112]
  4079f8:	add	x0, x0, #0x1b0
  4079fc:	str	x0, [sp, #120]
  407a00:	b	407a28 <ferror@plt+0x4be8>
  407a04:	bl	4100ec <ferror@plt+0xd2ac>
  407a08:	ldr	w0, [x21]
  407a0c:	cmp	w0, w22
  407a10:	b.ge	4084f8 <ferror@plt+0x56b8>  // b.tcont
  407a14:	add	w1, w0, #0x1
  407a18:	str	w1, [x21]
  407a1c:	ldr	x0, [x23, w0, sxtw #3]
  407a20:	str	x0, [x25, x19, lsl #3]
  407a24:	add	x19, x19, #0x1
  407a28:	mov	w0, #0xffffffff            	// #-1
  407a2c:	str	w0, [sp, #216]
  407a30:	cmp	w20, w0
  407a34:	b.eq	407a08 <ferror@plt+0x4bc8>  // b.none
  407a38:	cmp	x19, #0x0
  407a3c:	ccmp	w26, #0x0, #0x4, ne  // ne = any
  407a40:	b.eq	407a94 <ferror@plt+0x4c54>  // b.none
  407a44:	eor	w0, w28, #0x1
  407a48:	cmp	w27, #0x0
  407a4c:	cset	w1, ne  // ne = any
  407a50:	orr	w0, w1, w0
  407a54:	cbnz	w0, 407a08 <ferror@plt+0x4bc8>
  407a58:	ldr	w0, [x21]
  407a5c:	cmp	w0, w22
  407a60:	b.eq	409914 <ferror@plt+0x6ad4>  // b.none
  407a64:	ldr	x1, [x23, w0, sxtw #3]
  407a68:	ldrb	w2, [x1]
  407a6c:	cmp	w2, #0x2d
  407a70:	b.ne	407a08 <ferror@plt+0x4bc8>  // b.any
  407a74:	ldrb	w2, [x1, #1]
  407a78:	cmp	w2, #0x6f
  407a7c:	b.ne	407a08 <ferror@plt+0x4bc8>  // b.any
  407a80:	ldrb	w1, [x1, #2]
  407a84:	cbnz	w1, 407a94 <ferror@plt+0x4c54>
  407a88:	add	w0, w0, #0x1
  407a8c:	cmp	w0, w22
  407a90:	b.eq	407a08 <ferror@plt+0x4bc8>  // b.none
  407a94:	add	x4, sp, #0xd8
  407a98:	ldr	x3, [sp, #120]
  407a9c:	ldr	x0, [sp, #112]
  407aa0:	add	x2, x0, #0x590
  407aa4:	mov	x1, x23
  407aa8:	mov	w0, w22
  407aac:	bl	402b20 <getopt_long@plt>
  407ab0:	mov	w20, w0
  407ab4:	cmn	w0, #0x1
  407ab8:	b.eq	407a08 <ferror@plt+0x4bc8>  // b.none
  407abc:	cmp	w0, #0x107
  407ac0:	b.gt	4084e8 <ferror@plt+0x56a8>
  407ac4:	cmp	w0, #0x42
  407ac8:	b.le	407af0 <ferror@plt+0x4cb0>
  407acc:	sub	w1, w0, #0x43
  407ad0:	cmp	w1, #0xc4
  407ad4:	b.hi	4084e8 <ferror@plt+0x56a8>  // b.pmore
  407ad8:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  407adc:	add	x0, x0, #0xc58
  407ae0:	ldrh	w0, [x0, w1, uxtw #1]
  407ae4:	adr	x1, 407af0 <ferror@plt+0x4cb0>
  407ae8:	add	x0, x1, w0, sxth #2
  407aec:	br	x0
  407af0:	cmn	w0, #0x2
  407af4:	b.eq	4084e0 <ferror@plt+0x56a0>  // b.none
  407af8:	cmp	w0, #0x1
  407afc:	b.ne	407b28 <ferror@plt+0x4ce8>  // b.any
  407b00:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407b04:	ldr	x0, [x0, #1336]
  407b08:	ldrb	w0, [x0]
  407b0c:	cmp	w0, #0x2b
  407b10:	b.eq	407b70 <ferror@plt+0x4d30>  // b.none
  407b14:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407b18:	ldr	x0, [x0, #1336]
  407b1c:	str	x0, [x25, x19, lsl #3]
  407b20:	add	x19, x19, #0x1
  407b24:	b	407a28 <ferror@plt+0x4be8>
  407b28:	cmn	w0, #0x3
  407b2c:	b.ne	4084e8 <ferror@plt+0x56a8>  // b.any
  407b30:	mov	x6, #0x0                   	// #0
  407b34:	adrp	x5, 413000 <_obstack_memory_used@@Base+0x1a28>
  407b38:	add	x5, x5, #0x6b8
  407b3c:	adrp	x4, 413000 <_obstack_memory_used@@Base+0x1a28>
  407b40:	add	x4, x4, #0x6c8
  407b44:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407b48:	ldr	x3, [x0, #1200]
  407b4c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  407b50:	add	x2, x2, #0x360
  407b54:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407b58:	add	x1, x1, #0xae0
  407b5c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407b60:	ldr	x0, [x0, #1352]
  407b64:	bl	40fd5c <ferror@plt+0xcf1c>
  407b68:	mov	w0, #0x0                   	// #0
  407b6c:	bl	402790 <exit@plt>
  407b70:	ldr	w0, [x21]
  407b74:	cmp	w0, w22
  407b78:	b.eq	407ca0 <ferror@plt+0x4e60>  // b.none
  407b7c:	ldr	x0, [x23, w0, sxtw #3]
  407b80:	ldrb	w1, [x0]
  407b84:	cmp	w1, #0x2d
  407b88:	b.eq	407c8c <ferror@plt+0x4e4c>  // b.none
  407b8c:	mov	w0, #0x0                   	// #0
  407b90:	str	w0, [sp, #184]
  407b94:	ldr	x1, [sp, #176]
  407b98:	cmp	x1, #0x0
  407b9c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  407ba0:	cset	w0, ne  // ne = any
  407ba4:	orr	w28, w28, w0
  407ba8:	cbz	w28, 407b14 <ferror@plt+0x4cd4>
  407bac:	add	x0, sp, #0x358
  407bb0:	bl	403898 <ferror@plt+0xa58>
  407bb4:	mov	x1, x0
  407bb8:	str	x0, [sp, #152]
  407bbc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407bc0:	ldr	x0, [x0, #1336]
  407bc4:	mov	x2, #0x0                   	// #0
  407bc8:	add	x0, x0, #0x1
  407bcc:	bl	4038b8 <ferror@plt+0xa78>
  407bd0:	cbz	x0, 409620 <ferror@plt+0x67e0>
  407bd4:	ldrb	w1, [x0]
  407bd8:	cmp	w1, #0x2e
  407bdc:	b.eq	407ca8 <ferror@plt+0x4e68>  // b.none
  407be0:	ldr	x1, [sp, #152]
  407be4:	ldr	x1, [x1]
  407be8:	cbz	x1, 409938 <ferror@plt+0x6af8>
  407bec:	mov	w2, #0x0                   	// #0
  407bf0:	ldr	x1, [sp, #152]
  407bf4:	bl	4035b8 <ferror@plt+0x778>
  407bf8:	ldrb	w0, [x0]
  407bfc:	cbnz	w0, 407b14 <ferror@plt+0x4cd4>
  407c00:	ldr	w0, [sp, #184]
  407c04:	cbz	w0, 407c74 <ferror@plt+0x4e34>
  407c08:	ldr	w0, [x21]
  407c0c:	add	w1, w0, #0x1
  407c10:	str	w1, [x21]
  407c14:	ldr	x0, [x23, w0, sxtw #3]
  407c18:	str	x0, [sp, #184]
  407c1c:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  407c20:	add	x2, x2, #0x440
  407c24:	ldr	x1, [sp, #152]
  407c28:	add	x1, x1, #0x10
  407c2c:	add	x0, x0, #0x1
  407c30:	bl	4038b8 <ferror@plt+0xa78>
  407c34:	cbz	x0, 407cd4 <ferror@plt+0x4e94>
  407c38:	ldrb	w1, [x0]
  407c3c:	cmp	w1, #0x2e
  407c40:	b.eq	407cf8 <ferror@plt+0x4eb8>  // b.none
  407c44:	ldr	x2, [sp, #152]
  407c48:	ldr	x1, [x2, #24]
  407c4c:	cbnz	x1, 407c60 <ferror@plt+0x4e20>
  407c50:	ldr	x1, [x2, #16]
  407c54:	cbz	x1, 407c60 <ferror@plt+0x4e20>
  407c58:	sub	x1, x1, #0x1
  407c5c:	str	x1, [x2, #16]
  407c60:	mov	w2, #0x1                   	// #1
  407c64:	ldr	x1, [sp, #152]
  407c68:	bl	4035b8 <ferror@plt+0x778>
  407c6c:	ldrb	w0, [x0]
  407c70:	cbnz	w0, 407d14 <ferror@plt+0x4ed4>
  407c74:	mov	w0, #0x1                   	// #1
  407c78:	ldr	x1, [sp, #152]
  407c7c:	strb	w0, [x1, #57]
  407c80:	mov	x0, x1
  407c84:	bl	403c88 <ferror@plt+0xe48>
  407c88:	b	407a28 <ferror@plt+0x4be8>
  407c8c:	ldrb	w0, [x0, #1]
  407c90:	sub	w0, w0, #0x30
  407c94:	cmp	w0, #0x9
  407c98:	cset	w0, ls  // ls = plast
  407c9c:	b	407b90 <ferror@plt+0x4d50>
  407ca0:	mov	w0, #0x0                   	// #0
  407ca4:	b	407b90 <ferror@plt+0x4d50>
  407ca8:	mov	x2, #0x0                   	// #0
  407cac:	ldr	x1, [sp, #152]
  407cb0:	add	x1, x1, #0x8
  407cb4:	add	x0, x0, #0x1
  407cb8:	bl	4038b8 <ferror@plt+0xa78>
  407cbc:	ldr	x2, [sp, #152]
  407cc0:	ldr	x1, [x2]
  407cc4:	cbnz	x1, 409950 <ferror@plt+0x6b10>
  407cc8:	ldr	x1, [x2, #8]
  407ccc:	cbnz	x1, 409950 <ferror@plt+0x6b10>
  407cd0:	b	409944 <ferror@plt+0x6b04>
  407cd4:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x1a28>
  407cd8:	add	x3, x3, #0xde8
  407cdc:	add	x3, x3, #0x5b0
  407ce0:	mov	w2, #0x1112                	// #4370
  407ce4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  407ce8:	add	x1, x1, #0xf8
  407cec:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  407cf0:	add	x0, x0, #0x688
  407cf4:	bl	402da0 <__assert_fail@plt>
  407cf8:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  407cfc:	add	x2, x2, #0x460
  407d00:	ldr	x1, [sp, #152]
  407d04:	add	x1, x1, #0x18
  407d08:	add	x0, x0, #0x1
  407d0c:	bl	4038b8 <ferror@plt+0xa78>
  407d10:	b	407c44 <ferror@plt+0x4e04>
  407d14:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407d18:	add	x1, x1, #0x480
  407d1c:	ldr	x0, [sp, #184]
  407d20:	bl	403718 <ferror@plt+0x8d8>
  407d24:	ldr	x1, [sp, #112]
  407d28:	add	x20, x1, #0x5b8
  407d2c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407d30:	ldr	x5, [x0, #1208]
  407d34:	mov	x4, #0x1                   	// #1
  407d38:	mov	x3, x20
  407d3c:	add	x2, x1, #0x5c0
  407d40:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407d44:	ldr	x1, [x0, #1336]
  407d48:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  407d4c:	add	x0, x0, #0x4a0
  407d50:	bl	409c34 <ferror@plt+0x6df4>
  407d54:	ldrb	w20, [x20, x0]
  407d58:	strb	w20, [sp, #344]
  407d5c:	strb	wzr, [sp, #345]
  407d60:	mov	w2, #0x2                   	// #2
  407d64:	add	x1, sp, #0x310
  407d68:	add	x0, sp, #0x158
  407d6c:	bl	4035b8 <ferror@plt+0x778>
  407d70:	b	407a28 <ferror@plt+0x4be8>
  407d74:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407d78:	ldr	x1, [x0, #1336]
  407d7c:	cbz	x1, 407dc0 <ferror@plt+0x4f80>
  407d80:	ldr	x2, [sp, #112]
  407d84:	add	x20, x2, #0x5f8
  407d88:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407d8c:	ldr	x5, [x0, #1208]
  407d90:	mov	x4, #0x1                   	// #1
  407d94:	mov	x3, x20
  407d98:	add	x2, x2, #0x600
  407d9c:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  407da0:	add	x0, x0, #0x4a8
  407da4:	bl	409c34 <ferror@plt+0x6df4>
  407da8:	ldrb	w20, [x20, x0]
  407dac:	cbz	w27, 407db8 <ferror@plt+0x4f78>
  407db0:	cmp	w27, w20
  407db4:	b.ne	407dc8 <ferror@plt+0x4f88>  // b.any
  407db8:	and	w27, w20, #0xff
  407dbc:	b	407a28 <ferror@plt+0x4be8>
  407dc0:	mov	w20, #0x63                  	// #99
  407dc4:	b	407dac <ferror@plt+0x4f6c>
  407dc8:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  407dcc:	add	x0, x0, #0x4b0
  407dd0:	bl	4036e0 <ferror@plt+0x8a0>
  407dd4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407dd8:	ldr	x0, [x0, #2928]
  407ddc:	cbz	x0, 407df0 <ferror@plt+0x4fb0>
  407de0:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  407de4:	ldr	x1, [x1, #1336]
  407de8:	bl	402b50 <strcmp@plt>
  407dec:	cbnz	w0, 407e04 <ferror@plt+0x4fc4>
  407df0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407df4:	ldr	x1, [x0, #1336]
  407df8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407dfc:	str	x1, [x0, #2928]
  407e00:	b	407a28 <ferror@plt+0x4be8>
  407e04:	mov	w2, #0x5                   	// #5
  407e08:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407e0c:	add	x1, x1, #0x4b8
  407e10:	mov	x0, #0x0                   	// #0
  407e14:	bl	402d20 <dcgettext@plt>
  407e18:	mov	x2, x0
  407e1c:	mov	w1, #0x0                   	// #0
  407e20:	mov	w0, #0x2                   	// #2
  407e24:	bl	4027b0 <error@plt>
  407e28:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407e2c:	mov	w1, #0x1                   	// #1
  407e30:	strb	w1, [x0, #2720]
  407e34:	b	407a28 <ferror@plt+0x4be8>
  407e38:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407e3c:	ldr	x0, [x0, #1336]
  407e40:	str	x0, [sp, #128]
  407e44:	b	407a28 <ferror@plt+0x4be8>
  407e48:	add	x0, sp, #0x358
  407e4c:	bl	403898 <ferror@plt+0xa58>
  407e50:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  407e54:	add	x2, x2, #0x4e0
  407e58:	str	x0, [sp, #152]
  407e5c:	mov	x1, x0
  407e60:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407e64:	ldr	x0, [x0, #1336]
  407e68:	bl	4038b8 <ferror@plt+0xa78>
  407e6c:	ldr	x3, [sp, #152]
  407e70:	ldr	x1, [x3]
  407e74:	sub	x2, x1, #0x1
  407e78:	str	x2, [x3]
  407e7c:	cbz	x1, 407ee4 <ferror@plt+0x50a4>
  407e80:	ldrb	w1, [x0]
  407e84:	cmp	w1, #0x2e
  407e88:	b.eq	407ef8 <ferror@plt+0x50b8>  // b.none
  407e8c:	ldr	x2, [sp, #152]
  407e90:	ldr	x1, [x2]
  407e94:	cbnz	x1, 407ea8 <ferror@plt+0x5068>
  407e98:	ldr	x1, [x2, #8]
  407e9c:	cbnz	x1, 407ea8 <ferror@plt+0x5068>
  407ea0:	mov	x1, #0xffffffffffffffff    	// #-1
  407ea4:	str	x1, [x2]
  407ea8:	mov	w2, #0x0                   	// #0
  407eac:	ldr	x1, [sp, #152]
  407eb0:	bl	4035b8 <ferror@plt+0x778>
  407eb4:	ldrb	w1, [x0]
  407eb8:	cmp	w1, #0x2c
  407ebc:	b.eq	407f38 <ferror@plt+0x50f8>  // b.none
  407ec0:	mov	x1, #0xffffffffffffffff    	// #-1
  407ec4:	ldr	x2, [sp, #152]
  407ec8:	str	x1, [x2, #16]
  407ecc:	str	xzr, [x2, #24]
  407ed0:	ldrb	w0, [x0]
  407ed4:	cbnz	w0, 407fb0 <ferror@plt+0x5170>
  407ed8:	ldr	x0, [sp, #152]
  407edc:	bl	403c88 <ferror@plt+0xe48>
  407ee0:	b	407a28 <ferror@plt+0x4be8>
  407ee4:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407ee8:	add	x1, x1, #0x500
  407eec:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407ef0:	ldr	x0, [x0, #1336]
  407ef4:	bl	403718 <ferror@plt+0x8d8>
  407ef8:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  407efc:	add	x2, x2, #0x460
  407f00:	ldr	x3, [sp, #152]
  407f04:	add	x1, x3, #0x8
  407f08:	add	x0, x0, #0x1
  407f0c:	bl	4038b8 <ferror@plt+0xa78>
  407f10:	ldr	x3, [sp, #152]
  407f14:	ldr	x1, [x3, #8]
  407f18:	sub	x2, x1, #0x1
  407f1c:	str	x2, [x3, #8]
  407f20:	cbnz	x1, 407e8c <ferror@plt+0x504c>
  407f24:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407f28:	add	x1, x1, #0x518
  407f2c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407f30:	ldr	x0, [x0, #1336]
  407f34:	bl	403718 <ferror@plt+0x8d8>
  407f38:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  407f3c:	add	x2, x2, #0x538
  407f40:	ldr	x3, [sp, #152]
  407f44:	add	x1, x3, #0x10
  407f48:	add	x0, x0, #0x1
  407f4c:	bl	4038b8 <ferror@plt+0xa78>
  407f50:	ldr	x3, [sp, #152]
  407f54:	ldr	x1, [x3, #16]
  407f58:	sub	x2, x1, #0x1
  407f5c:	str	x2, [x3, #16]
  407f60:	cbz	x1, 407f80 <ferror@plt+0x5140>
  407f64:	ldrb	w1, [x0]
  407f68:	cmp	w1, #0x2e
  407f6c:	b.eq	407f94 <ferror@plt+0x5154>  // b.none
  407f70:	mov	w2, #0x1                   	// #1
  407f74:	ldr	x1, [sp, #152]
  407f78:	bl	4035b8 <ferror@plt+0x778>
  407f7c:	b	407ed0 <ferror@plt+0x5090>
  407f80:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407f84:	add	x1, x1, #0x500
  407f88:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407f8c:	ldr	x0, [x0, #1336]
  407f90:	bl	403718 <ferror@plt+0x8d8>
  407f94:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  407f98:	add	x2, x2, #0x460
  407f9c:	ldr	x1, [sp, #152]
  407fa0:	add	x1, x1, #0x18
  407fa4:	add	x0, x0, #0x1
  407fa8:	bl	4038b8 <ferror@plt+0xa78>
  407fac:	b	407f70 <ferror@plt+0x5130>
  407fb0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  407fb4:	add	x1, x1, #0x480
  407fb8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407fbc:	ldr	x0, [x0, #1336]
  407fc0:	bl	403718 <ferror@plt+0x8d8>
  407fc4:	ldr	w0, [sp, #216]
  407fc8:	str	w0, [sp, #184]
  407fcc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  407fd0:	ldr	x0, [x0, #1336]
  407fd4:	str	x0, [sp, #192]
  407fd8:	mov	x4, #0x0                   	// #0
  407fdc:	add	x3, sp, #0xf0
  407fe0:	mov	w2, #0xa                   	// #10
  407fe4:	mov	x1, #0x0                   	// #0
  407fe8:	bl	410894 <ferror@plt+0xda54>
  407fec:	str	w0, [sp, #152]
  407ff0:	add	x1, sp, #0x158
  407ff4:	mov	w0, #0x7                   	// #7
  407ff8:	bl	402cb0 <getrlimit@plt>
  407ffc:	cbnz	w0, 4080c8 <ferror@plt+0x5288>
  408000:	ldr	x0, [sp, #344]
  408004:	sub	w0, w0, #0x3
  408008:	str	w0, [sp, #204]
  40800c:	ldr	w0, [sp, #152]
  408010:	cbnz	w0, 408160 <ferror@plt+0x5320>
  408014:	ldr	x0, [sp, #240]
  408018:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  40801c:	str	w0, [x1, #1160]
  408020:	tst	x0, #0xffffffff00000000
  408024:	b.ne	40803c <ferror@plt+0x51fc>  // b.any
  408028:	cmp	w0, #0x1
  40802c:	b.ls	4080d4 <ferror@plt+0x5294>  // b.plast
  408030:	ldr	w1, [sp, #204]
  408034:	cmp	w0, w1
  408038:	b.ls	407a28 <ferror@plt+0x4be8>  // b.plast
  40803c:	mov	w2, #0x5                   	// #5
  408040:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408044:	add	x1, x1, #0x5a0
  408048:	mov	x0, #0x0                   	// #0
  40804c:	bl	402d20 <dcgettext@plt>
  408050:	mov	x19, x0
  408054:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  408058:	add	x0, x0, #0xde8
  40805c:	ldr	w1, [sp, #184]
  408060:	sbfiz	x1, x1, #5, #32
  408064:	add	x0, x0, #0x1b0
  408068:	ldr	x20, [x0, x1]
  40806c:	ldr	x0, [sp, #192]
  408070:	bl	40e68c <ferror@plt+0xb84c>
  408074:	mov	x4, x0
  408078:	mov	x3, x20
  40807c:	mov	x2, x19
  408080:	mov	w1, #0x0                   	// #0
  408084:	mov	w0, #0x0                   	// #0
  408088:	bl	4027b0 <error@plt>
  40808c:	mov	w2, #0x5                   	// #5
  408090:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408094:	add	x1, x1, #0x5c0
  408098:	mov	x0, #0x0                   	// #0
  40809c:	bl	402d20 <dcgettext@plt>
  4080a0:	mov	x19, x0
  4080a4:	add	x1, sp, #0x120
  4080a8:	ldr	w0, [sp, #204]
  4080ac:	bl	40c428 <ferror@plt+0x95e8>
  4080b0:	mov	x4, x0
  4080b4:	mov	x3, x20
  4080b8:	mov	x2, x19
  4080bc:	mov	w1, #0x0                   	// #0
  4080c0:	mov	w0, #0x2                   	// #2
  4080c4:	bl	4027b0 <error@plt>
  4080c8:	mov	w0, #0x11                  	// #17
  4080cc:	str	w0, [sp, #204]
  4080d0:	b	40800c <ferror@plt+0x51cc>
  4080d4:	mov	w2, #0x5                   	// #5
  4080d8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4080dc:	add	x1, x1, #0x558
  4080e0:	mov	x0, #0x0                   	// #0
  4080e4:	bl	402d20 <dcgettext@plt>
  4080e8:	mov	x19, x0
  4080ec:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  4080f0:	add	x0, x0, #0xde8
  4080f4:	ldr	w1, [sp, #184]
  4080f8:	sbfiz	x1, x1, #5, #32
  4080fc:	add	x0, x0, #0x1b0
  408100:	ldr	x20, [x0, x1]
  408104:	ldr	x0, [sp, #192]
  408108:	bl	40e68c <ferror@plt+0xb84c>
  40810c:	mov	x4, x0
  408110:	mov	x3, x20
  408114:	mov	x2, x19
  408118:	mov	w1, #0x0                   	// #0
  40811c:	mov	w0, #0x0                   	// #0
  408120:	bl	4027b0 <error@plt>
  408124:	mov	w2, #0x5                   	// #5
  408128:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  40812c:	add	x1, x1, #0x578
  408130:	mov	x0, #0x0                   	// #0
  408134:	bl	402d20 <dcgettext@plt>
  408138:	mov	x19, x0
  40813c:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  408140:	add	x0, x0, #0x598
  408144:	bl	40e68c <ferror@plt+0xb84c>
  408148:	mov	x4, x0
  40814c:	mov	x3, x20
  408150:	mov	x2, x19
  408154:	mov	w1, #0x0                   	// #0
  408158:	mov	w0, #0x2                   	// #2
  40815c:	bl	4027b0 <error@plt>
  408160:	ldr	w0, [sp, #152]
  408164:	cmp	w0, #0x1
  408168:	b.eq	40803c <ferror@plt+0x51fc>  // b.none
  40816c:	ldr	x4, [sp, #192]
  408170:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x1a28>
  408174:	add	x3, x3, #0xde8
  408178:	add	x3, x3, #0x1b0
  40817c:	mov	w2, #0x4                   	// #4
  408180:	ldr	w1, [sp, #184]
  408184:	ldr	w0, [sp, #152]
  408188:	bl	410770 <ferror@plt+0xd930>
  40818c:	ldr	x2, [sp, #136]
  408190:	cbz	x2, 4081a8 <ferror@plt+0x5368>
  408194:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408198:	ldr	x1, [x0, #1336]
  40819c:	mov	x0, x2
  4081a0:	bl	402b50 <strcmp@plt>
  4081a4:	cbnz	w0, 4081b8 <ferror@plt+0x5378>
  4081a8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4081ac:	ldr	x0, [x0, #1336]
  4081b0:	str	x0, [sp, #136]
  4081b4:	b	407a28 <ferror@plt+0x4be8>
  4081b8:	mov	w2, #0x5                   	// #5
  4081bc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4081c0:	add	x1, x1, #0x5f0
  4081c4:	mov	x0, #0x0                   	// #0
  4081c8:	bl	402d20 <dcgettext@plt>
  4081cc:	mov	x2, x0
  4081d0:	mov	w1, #0x0                   	// #0
  4081d4:	mov	w0, #0x2                   	// #2
  4081d8:	bl	4027b0 <error@plt>
  4081dc:	ldr	x2, [sp, #144]
  4081e0:	cbz	x2, 4081f8 <ferror@plt+0x53b8>
  4081e4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4081e8:	ldr	x1, [x0, #1336]
  4081ec:	mov	x0, x2
  4081f0:	bl	402b50 <strcmp@plt>
  4081f4:	cbnz	w0, 408208 <ferror@plt+0x53c8>
  4081f8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4081fc:	ldr	x0, [x0, #1336]
  408200:	str	x0, [sp, #144]
  408204:	b	407a28 <ferror@plt+0x4be8>
  408208:	mov	w2, #0x5                   	// #5
  40820c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408210:	add	x1, x1, #0x610
  408214:	mov	x0, #0x0                   	// #0
  408218:	bl	402d20 <dcgettext@plt>
  40821c:	mov	x2, x0
  408220:	mov	w1, #0x0                   	// #0
  408224:	mov	w0, #0x2                   	// #2
  408228:	bl	4027b0 <error@plt>
  40822c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408230:	mov	w1, #0x1                   	// #1
  408234:	strb	w1, [x0, #2722]
  408238:	b	407a28 <ferror@plt+0x4be8>
  40823c:	ldr	w0, [sp, #216]
  408240:	str	w0, [sp, #152]
  408244:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408248:	ldr	x0, [x0, #1336]
  40824c:	str	x0, [sp, #184]
  408250:	adrp	x4, 413000 <_obstack_memory_used@@Base+0x1a28>
  408254:	add	x4, x4, #0x638
  408258:	add	x3, sp, #0x120
  40825c:	mov	w2, #0xa                   	// #10
  408260:	add	x1, sp, #0x158
  408264:	bl	410894 <ferror@plt+0xda54>
  408268:	cbnz	w0, 40965c <ferror@plt+0x681c>
  40826c:	ldr	x0, [sp, #344]
  408270:	ldurb	w0, [x0, #-1]
  408274:	sub	w0, w0, #0x30
  408278:	cmp	w0, #0x9
  40827c:	b.hi	408298 <ferror@plt+0x5458>  // b.pmore
  408280:	ldr	x0, [sp, #288]
  408284:	mov	x1, #0x3fffffffffffff      	// #18014398509481983
  408288:	cmp	x0, x1
  40828c:	b.hi	40963c <ferror@plt+0x67fc>  // b.pmore
  408290:	lsl	x0, x0, #10
  408294:	str	x0, [sp, #288]
  408298:	ldr	x1, [sp, #288]
  40829c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4082a0:	ldr	x0, [x0, #2952]
  4082a4:	cmp	x1, x0
  4082a8:	b.cc	407a28 <ferror@plt+0x4be8>  // b.lo, b.ul, b.last
  4082ac:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4082b0:	ldr	w0, [x0, #1160]
  4082b4:	mov	x2, #0x22                  	// #34
  4082b8:	mul	x0, x0, x2
  4082bc:	cmp	x0, x1
  4082c0:	csel	x0, x0, x1, cs  // cs = hs, nlast
  4082c4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  4082c8:	str	x0, [x1, #2952]
  4082cc:	b	407a28 <ferror@plt+0x4be8>
  4082d0:	bl	40c89c <ferror@plt+0x9a5c>
  4082d4:	ldr	d1, [sp, #288]
  4082d8:	ucvtf	d1, d1
  4082dc:	fmul	d0, d1, d0
  4082e0:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  4082e4:	fmov	d1, x0
  4082e8:	fdiv	d0, d0, d1
  4082ec:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  4082f0:	fmov	d1, x0
  4082f4:	fcmpe	d0, d1
  4082f8:	b.pl	408308 <ferror@plt+0x54c8>  // b.nfrst
  4082fc:	fcvtzu	d0, d0
  408300:	str	d0, [sp, #288]
  408304:	b	408298 <ferror@plt+0x5458>
  408308:	mov	w0, #0x1                   	// #1
  40830c:	b	409640 <ferror@plt+0x6800>
  408310:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408314:	ldr	x0, [x0, #1336]
  408318:	ldrb	w1, [x0]
  40831c:	cbz	w1, 408360 <ferror@plt+0x5520>
  408320:	ldrb	w2, [x0, #1]
  408324:	cbz	w2, 40833c <ferror@plt+0x54fc>
  408328:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  40832c:	add	x1, x1, #0x658
  408330:	bl	402b50 <strcmp@plt>
  408334:	cbnz	w0, 408384 <ferror@plt+0x5544>
  408338:	mov	w1, #0x0                   	// #0
  40833c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408340:	ldr	w0, [x0, #944]
  408344:	cmp	w0, #0x100
  408348:	b.eq	408354 <ferror@plt+0x5514>  // b.none
  40834c:	cmp	w0, w1
  408350:	b.ne	4083bc <ferror@plt+0x557c>  // b.any
  408354:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408358:	str	w1, [x0, #944]
  40835c:	b	407a28 <ferror@plt+0x4be8>
  408360:	mov	w2, #0x5                   	// #5
  408364:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408368:	add	x1, x1, #0x648
  40836c:	mov	x0, #0x0                   	// #0
  408370:	bl	402d20 <dcgettext@plt>
  408374:	mov	x2, x0
  408378:	mov	w1, #0x0                   	// #0
  40837c:	mov	w0, #0x2                   	// #2
  408380:	bl	4027b0 <error@plt>
  408384:	mov	w2, #0x5                   	// #5
  408388:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  40838c:	add	x1, x1, #0x660
  408390:	mov	x0, #0x0                   	// #0
  408394:	bl	402d20 <dcgettext@plt>
  408398:	mov	x19, x0
  40839c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4083a0:	ldr	x0, [x0, #1336]
  4083a4:	bl	40e68c <ferror@plt+0xb84c>
  4083a8:	mov	x3, x0
  4083ac:	mov	x2, x19
  4083b0:	mov	w1, #0x0                   	// #0
  4083b4:	mov	w0, #0x2                   	// #2
  4083b8:	bl	4027b0 <error@plt>
  4083bc:	mov	w2, #0x5                   	// #5
  4083c0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4083c4:	add	x1, x1, #0x678
  4083c8:	mov	x0, #0x0                   	// #0
  4083cc:	bl	402d20 <dcgettext@plt>
  4083d0:	mov	x2, x0
  4083d4:	mov	w1, #0x0                   	// #0
  4083d8:	mov	w0, #0x2                   	// #2
  4083dc:	bl	4027b0 <error@plt>
  4083e0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4083e4:	ldr	x0, [x0, #1336]
  4083e8:	bl	403cd4 <ferror@plt+0xe94>
  4083ec:	b	407a28 <ferror@plt+0x4be8>
  4083f0:	ldr	w0, [sp, #216]
  4083f4:	str	w0, [sp, #152]
  4083f8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4083fc:	ldr	x0, [x0, #1336]
  408400:	str	x0, [sp, #168]
  408404:	adrp	x4, 412000 <_obstack_memory_used@@Base+0xa28>
  408408:	add	x4, x4, #0x900
  40840c:	add	x3, sp, #0x158
  408410:	mov	w2, #0xa                   	// #10
  408414:	mov	x1, #0x0                   	// #0
  408418:	bl	410394 <ferror@plt+0xd554>
  40841c:	cmp	w0, #0x1
  408420:	b.eq	408470 <ferror@plt+0x5630>  // b.none
  408424:	cbnz	w0, 408454 <ferror@plt+0x5614>
  408428:	ldr	x0, [sp, #344]
  40842c:	str	x0, [sp, #168]
  408430:	cbnz	x0, 407a28 <ferror@plt+0x4be8>
  408434:	mov	w2, #0x5                   	// #5
  408438:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  40843c:	add	x1, x1, #0x690
  408440:	bl	402d20 <dcgettext@plt>
  408444:	mov	x2, x0
  408448:	mov	w1, #0x0                   	// #0
  40844c:	mov	w0, #0x2                   	// #2
  408450:	bl	4027b0 <error@plt>
  408454:	ldr	x4, [sp, #168]
  408458:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x1a28>
  40845c:	add	x3, x3, #0xde8
  408460:	add	x3, x3, #0x1b0
  408464:	mov	w2, #0x7                   	// #7
  408468:	ldr	w1, [sp, #152]
  40846c:	bl	410770 <ferror@plt+0xd930>
  408470:	mov	x0, #0xffffffffffffffff    	// #-1
  408474:	str	x0, [sp, #168]
  408478:	b	407a28 <ferror@plt+0x4be8>
  40847c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408480:	mov	w1, #0x1                   	// #1
  408484:	strb	w1, [x0, #2721]
  408488:	b	407a28 <ferror@plt+0x4be8>
  40848c:	ldr	w0, [x21]
  408490:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  408494:	ldr	x1, [x1, #1336]
  408498:	add	x2, x23, w0, sxtw #3
  40849c:	ldur	x2, [x2, #-8]
  4084a0:	cmp	x2, x1
  4084a4:	b.ne	407a28 <ferror@plt+0x4be8>  // b.any
  4084a8:	ldrb	w2, [x1]
  4084ac:	sub	w3, w2, #0x30
  4084b0:	cmp	w3, #0x9
  4084b4:	b.ls	4084cc <ferror@plt+0x568c>  // b.plast
  4084b8:	cmp	w2, #0x0
  4084bc:	cset	w1, ne  // ne = any
  4084c0:	sub	w0, w0, w1
  4084c4:	str	w0, [x21]
  4084c8:	b	407a28 <ferror@plt+0x4be8>
  4084cc:	add	x1, x1, #0x1
  4084d0:	b	4084a8 <ferror@plt+0x5668>
  4084d4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4084d8:	strb	wzr, [x0, #1144]
  4084dc:	b	407a28 <ferror@plt+0x4be8>
  4084e0:	mov	w0, #0x0                   	// #0
  4084e4:	bl	407070 <ferror@plt+0x4230>
  4084e8:	mov	w0, #0x2                   	// #2
  4084ec:	bl	407070 <ferror@plt+0x4230>
  4084f0:	mov	w24, #0x1                   	// #1
  4084f4:	b	407a28 <ferror@plt+0x4be8>
  4084f8:	ldr	x0, [sp, #128]
  4084fc:	cbz	x0, 409920 <ferror@plt+0x6ae0>
  408500:	cbnz	x19, 408594 <ferror@plt+0x5754>
  408504:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  408508:	add	x1, x1, #0x360
  40850c:	ldr	x0, [sp, #128]
  408510:	bl	403bb8 <ferror@plt+0xd78>
  408514:	mov	x20, x0
  408518:	add	x0, sp, #0x1f0
  40851c:	bl	40f0b4 <ferror@plt+0xc274>
  408520:	add	x1, sp, #0x1f0
  408524:	mov	x0, x20
  408528:	bl	40f17c <ferror@plt+0xc33c>
  40852c:	and	w0, w0, #0xff
  408530:	cbz	w0, 408608 <ferror@plt+0x57c8>
  408534:	ldr	x1, [sp, #128]
  408538:	mov	x0, x20
  40853c:	bl	403bf4 <ferror@plt+0xdb4>
  408540:	ldr	x23, [sp, #496]
  408544:	cbz	x23, 4086b8 <ferror@plt+0x5878>
  408548:	mov	x0, x25
  40854c:	bl	402ba0 <free@plt>
  408550:	ldr	x25, [sp, #504]
  408554:	mov	x20, x25
  408558:	adrp	x22, 412000 <_obstack_memory_used@@Base+0xa28>
  40855c:	add	x22, x22, #0xd8
  408560:	ldr	x21, [x20]
  408564:	mov	x1, x22
  408568:	mov	x0, x21
  40856c:	bl	402b50 <strcmp@plt>
  408570:	cbz	w0, 408640 <ferror@plt+0x5800>
  408574:	ldrb	w0, [x21]
  408578:	cbz	w0, 408678 <ferror@plt+0x5838>
  40857c:	add	x19, x19, #0x1
  408580:	add	x20, x20, #0x8
  408584:	cmp	x23, x19
  408588:	b.ne	408560 <ferror@plt+0x5720>  // b.any
  40858c:	mov	x19, x23
  408590:	b	409920 <ferror@plt+0x6ae0>
  408594:	mov	w2, #0x5                   	// #5
  408598:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  40859c:	add	x1, x1, #0x6d8
  4085a0:	mov	x0, #0x0                   	// #0
  4085a4:	bl	402d20 <dcgettext@plt>
  4085a8:	mov	x19, x0
  4085ac:	ldr	x1, [x25]
  4085b0:	mov	w0, #0x4                   	// #4
  4085b4:	bl	40e3ec <ferror@plt+0xb5ac>
  4085b8:	mov	x3, x0
  4085bc:	mov	x2, x19
  4085c0:	mov	w1, #0x0                   	// #0
  4085c4:	mov	w0, #0x0                   	// #0
  4085c8:	bl	4027b0 <error@plt>
  4085cc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4085d0:	ldr	x19, [x0, #1328]
  4085d4:	mov	w2, #0x5                   	// #5
  4085d8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4085dc:	add	x1, x1, #0x6f0
  4085e0:	mov	x0, #0x0                   	// #0
  4085e4:	bl	402d20 <dcgettext@plt>
  4085e8:	mov	x3, x0
  4085ec:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2a28>
  4085f0:	add	x2, x2, #0xa60
  4085f4:	mov	w1, #0x1                   	// #1
  4085f8:	mov	x0, x19
  4085fc:	bl	402b30 <__fprintf_chk@plt>
  408600:	mov	w0, #0x2                   	// #2
  408604:	bl	407070 <ferror@plt+0x4230>
  408608:	mov	w2, #0x5                   	// #5
  40860c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408610:	add	x1, x1, #0x728
  408614:	mov	x0, #0x0                   	// #0
  408618:	bl	402d20 <dcgettext@plt>
  40861c:	mov	x19, x0
  408620:	ldr	x1, [sp, #128]
  408624:	mov	w0, #0x4                   	// #4
  408628:	bl	40e3ec <ferror@plt+0xb5ac>
  40862c:	mov	x3, x0
  408630:	mov	x2, x19
  408634:	mov	w1, #0x0                   	// #0
  408638:	mov	w0, #0x2                   	// #2
  40863c:	bl	4027b0 <error@plt>
  408640:	mov	w2, #0x5                   	// #5
  408644:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408648:	add	x1, x1, #0x748
  40864c:	mov	x0, #0x0                   	// #0
  408650:	bl	402d20 <dcgettext@plt>
  408654:	mov	x19, x0
  408658:	ldr	x1, [x20]
  40865c:	mov	w0, #0x4                   	// #4
  408660:	bl	40e3ec <ferror@plt+0xb5ac>
  408664:	mov	x3, x0
  408668:	mov	x2, x19
  40866c:	mov	w1, #0x0                   	// #0
  408670:	mov	w0, #0x2                   	// #2
  408674:	bl	4027b0 <error@plt>
  408678:	mov	w2, #0x5                   	// #5
  40867c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408680:	add	x1, x1, #0x788
  408684:	mov	x0, #0x0                   	// #0
  408688:	bl	402d20 <dcgettext@plt>
  40868c:	mov	x20, x0
  408690:	ldr	x2, [sp, #128]
  408694:	mov	w1, #0x3                   	// #3
  408698:	mov	w0, #0x0                   	// #0
  40869c:	bl	40e4ec <ferror@plt+0xb6ac>
  4086a0:	add	x4, x19, #0x1
  4086a4:	mov	x3, x0
  4086a8:	mov	x2, x20
  4086ac:	mov	w1, #0x0                   	// #0
  4086b0:	mov	w0, #0x2                   	// #2
  4086b4:	bl	4027b0 <error@plt>
  4086b8:	mov	w2, #0x5                   	// #5
  4086bc:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4086c0:	add	x1, x1, #0x7b0
  4086c4:	mov	x0, #0x0                   	// #0
  4086c8:	bl	402d20 <dcgettext@plt>
  4086cc:	mov	x19, x0
  4086d0:	ldr	x1, [sp, #128]
  4086d4:	mov	w0, #0x4                   	// #4
  4086d8:	bl	40e3ec <ferror@plt+0xb5ac>
  4086dc:	mov	x3, x0
  4086e0:	mov	x2, x19
  4086e4:	mov	w1, #0x0                   	// #0
  4086e8:	mov	w0, #0x2                   	// #2
  4086ec:	bl	4027b0 <error@plt>
  4086f0:	ldrb	w0, [x22, #51]
  4086f4:	orr	w21, w21, w0
  4086f8:	and	w21, w21, #0xff
  4086fc:	ldr	x22, [x22, #64]
  408700:	cbz	x22, 408778 <ferror@plt+0x5938>
  408704:	mov	x0, x22
  408708:	bl	403440 <ferror@plt+0x600>
  40870c:	and	w0, w0, #0xff
  408710:	cbz	w0, 4086f0 <ferror@plt+0x58b0>
  408714:	ldrb	w0, [x22, #55]
  408718:	cbnz	w0, 4086f0 <ferror@plt+0x58b0>
  40871c:	ldr	x0, [sp, #816]
  408720:	str	x0, [x22, #32]
  408724:	ldr	x0, [sp, #824]
  408728:	str	x0, [x22, #40]
  40872c:	ldrb	w0, [sp, #832]
  408730:	strb	w0, [x22, #48]
  408734:	ldrb	w0, [sp, #833]
  408738:	strb	w0, [x22, #49]
  40873c:	ldrb	w0, [sp, #838]
  408740:	strb	w0, [x22, #54]
  408744:	ldrb	w0, [sp, #834]
  408748:	strb	w0, [x22, #50]
  40874c:	ldrb	w0, [sp, #836]
  408750:	strb	w0, [x22, #52]
  408754:	ldrb	w0, [sp, #837]
  408758:	strb	w0, [x22, #53]
  40875c:	ldrb	w0, [sp, #840]
  408760:	strb	w0, [x22, #56]
  408764:	ldrb	w0, [sp, #835]
  408768:	strb	w0, [x22, #51]
  40876c:	ldrb	w0, [sp, #839]
  408770:	strb	w0, [x22, #55]
  408774:	b	4086f0 <ferror@plt+0x58b0>
  408778:	ldr	w26, [sp, #200]
  40877c:	ldrb	w0, [x20, #50]
  408780:	ldrb	w1, [x20, #52]
  408784:	add	w0, w0, w1
  408788:	ldrb	w1, [x20, #53]
  40878c:	add	w0, w0, w1
  408790:	ldrb	w1, [x20, #54]
  408794:	add	w0, w0, w1
  408798:	ldrb	w1, [x20, #56]
  40879c:	ldrb	w2, [x20, #51]
  4087a0:	orr	w2, w1, w2
  4087a4:	ldr	x1, [x20, #32]
  4087a8:	cmp	x1, #0x0
  4087ac:	cset	w1, ne  // ne = any
  4087b0:	orr	w1, w1, w2
  4087b4:	add	w0, w0, w1, uxtb
  4087b8:	cmp	w0, #0x1
  4087bc:	b.gt	4088d4 <ferror@plt+0x5a94>
  4087c0:	ldr	x20, [x20, #64]
  4087c4:	cbnz	x20, 40877c <ferror@plt+0x593c>
  4087c8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4087cc:	ldrb	w0, [x0, #2720]
  4087d0:	cbz	w0, 408b40 <ferror@plt+0x5d00>
  4087d4:	cmp	w27, #0x0
  4087d8:	cset	w0, ne  // ne = any
  4087dc:	ldr	x1, [sp, #136]
  4087e0:	cmp	x1, #0x0
  4087e4:	csinc	w0, w0, wzr, eq  // eq = none
  4087e8:	str	w0, [sp, #112]
  4087ec:	cbnz	w0, 408908 <ferror@plt+0x5ac8>
  4087f0:	ldr	x0, [sp, #160]
  4087f4:	cbz	x0, 408928 <ferror@plt+0x5ae8>
  4087f8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  4087fc:	add	x1, x1, #0x900
  408800:	mov	w0, #0x3                   	// #3
  408804:	bl	402e30 <setlocale@plt>
  408808:	cbz	x0, 408928 <ferror@plt+0x5ae8>
  40880c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408810:	ldrb	w0, [x0, #2723]
  408814:	cbz	w0, 408958 <ferror@plt+0x5b18>
  408818:	mov	w2, #0x5                   	// #5
  40881c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408820:	add	x1, x1, #0x7e0
  408824:	mov	x0, #0x0                   	// #0
  408828:	bl	402d20 <dcgettext@plt>
  40882c:	mov	x20, x0
  408830:	mov	x1, #0x0                   	// #0
  408834:	mov	w0, #0x3                   	// #3
  408838:	bl	402e30 <setlocale@plt>
  40883c:	bl	40e68c <ferror@plt+0xb84c>
  408840:	mov	x3, x0
  408844:	mov	x2, x20
  408848:	mov	w1, #0x0                   	// #0
  40884c:	mov	w0, #0x0                   	// #0
  408850:	bl	4027b0 <error@plt>
  408854:	add	x0, sp, #0x260
  408858:	ldp	x0, x1, [x0, #176]
  40885c:	add	x2, sp, #0x200
  408860:	stp	x0, x1, [x2, #-168]
  408864:	add	x0, sp, #0x260
  408868:	ldp	x0, x1, [x0, #192]
  40886c:	add	x2, sp, #0x260
  408870:	stp	x0, x1, [x2, #-248]
  408874:	ldp	x0, x1, [x2, #208]
  408878:	stp	x0, x1, [x2, #-232]
  40887c:	ldp	x0, x1, [x2, #224]
  408880:	stp	x0, x1, [x2, #-216]
  408884:	ldr	x0, [sp, #848]
  408888:	str	x0, [sp, #408]
  40888c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408890:	ldr	x20, [x0, #2688]
  408894:	cbz	x20, 408a54 <ferror@plt+0x5c14>
  408898:	mov	x23, #0x1                   	// #1
  40889c:	add	x0, sp, #0xf0
  4088a0:	add	x0, x0, x23
  4088a4:	str	x0, [sp, #152]
  4088a8:	add	x0, sp, #0x123
  4088ac:	str	x0, [sp, #160]
  4088b0:	b	409790 <ferror@plt+0x6950>
  4088b4:	add	x0, sp, #0x310
  4088b8:	bl	403c88 <ferror@plt+0xe48>
  4088bc:	ldrb	w21, [sp, #835]
  4088c0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4088c4:	ldr	x20, [x0, #2688]
  4088c8:	cbz	x20, 4088f4 <ferror@plt+0x5ab4>
  4088cc:	mov	w26, #0x1                   	// #1
  4088d0:	b	40877c <ferror@plt+0x593c>
  4088d4:	strb	wzr, [x20, #55]
  4088d8:	strb	wzr, [x20, #49]
  4088dc:	strb	wzr, [x20, #48]
  4088e0:	add	x1, sp, #0x158
  4088e4:	mov	x0, x20
  4088e8:	bl	403498 <ferror@plt+0x658>
  4088ec:	add	x0, sp, #0x158
  4088f0:	bl	4036e0 <ferror@plt+0x8a0>
  4088f4:	mov	w26, #0x1                   	// #1
  4088f8:	b	4087c8 <ferror@plt+0x5988>
  4088fc:	ldr	w26, [sp, #200]
  408900:	mov	w21, w26
  408904:	b	4087d4 <ferror@plt+0x5994>
  408908:	cmp	w27, #0x0
  40890c:	mov	w0, #0x6f                  	// #111
  408910:	csel	w27, w27, w0, ne  // ne = any
  408914:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408918:	add	x0, x0, #0x3b0
  40891c:	strb	w27, [x0, #232]
  408920:	add	x0, x0, #0xe8
  408924:	bl	4036e0 <ferror@plt+0x8a0>
  408928:	mov	w2, #0x5                   	// #5
  40892c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408930:	add	x1, x1, #0x7c8
  408934:	mov	x0, #0x0                   	// #0
  408938:	bl	402d20 <dcgettext@plt>
  40893c:	mov	x3, x0
  408940:	adrp	x2, 412000 <_obstack_memory_used@@Base+0xa28>
  408944:	add	x2, x2, #0x250
  408948:	mov	w1, #0x0                   	// #0
  40894c:	mov	w0, #0x0                   	// #0
  408950:	bl	4027b0 <error@plt>
  408954:	b	40880c <ferror@plt+0x59cc>
  408958:	mov	w2, #0x5                   	// #5
  40895c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408960:	add	x1, x1, #0x810
  408964:	mov	x0, #0x0                   	// #0
  408968:	bl	402d20 <dcgettext@plt>
  40896c:	mov	x3, x0
  408970:	adrp	x2, 412000 <_obstack_memory_used@@Base+0xa28>
  408974:	add	x2, x2, #0x250
  408978:	mov	w1, #0x0                   	// #0
  40897c:	mov	w0, #0x0                   	// #0
  408980:	bl	4027b0 <error@plt>
  408984:	b	408854 <ferror@plt+0x5a14>
  408988:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  40898c:	add	x0, x0, #0x848
  408990:	ldrh	w1, [x0]
  408994:	ldr	x2, [sp, #120]
  408998:	strh	w1, [x2]
  40899c:	ldrb	w0, [x0, #2]
  4089a0:	mov	x22, x2
  4089a4:	strb	w0, [x22, #2]!
  4089a8:	add	x28, x28, #0x1
  4089ac:	add	x1, sp, #0xd8
  4089b0:	mov	x0, x28
  4089b4:	bl	40c468 <ferror@plt+0x9628>
  4089b8:	mov	x1, x0
  4089bc:	mov	x0, x22
  4089c0:	bl	402c90 <strcpy@plt>
  4089c4:	ldr	x22, [sp, #128]
  4089c8:	mov	w0, #0x2c                  	// #44
  4089cc:	strh	w0, [x22], #1
  4089d0:	ldr	x0, [x20, #24]
  4089d4:	cmn	x0, #0x1
  4089d8:	add	x1, sp, #0xd8
  4089dc:	cinc	x0, x28, eq  // eq = none
  4089e0:	bl	40c468 <ferror@plt+0x9628>
  4089e4:	mov	x1, x0
  4089e8:	mov	x0, x22
  4089ec:	bl	402c90 <strcpy@plt>
  4089f0:	b	409808 <ferror@plt+0x69c8>
  4089f4:	ldrb	w0, [x20, #48]
  4089f8:	cbnz	w0, 408a08 <ferror@plt+0x5bc8>
  4089fc:	tbz	w2, #0, 408a18 <ferror@plt+0x5bd8>
  408a00:	ldr	x0, [x20, #8]
  408a04:	cbnz	x0, 408a18 <ferror@plt+0x5bd8>
  408a08:	ldrb	w0, [x20, #49]
  408a0c:	cbnz	w0, 4098bc <ferror@plt+0x6a7c>
  408a10:	ldr	x0, [x20, #24]
  408a14:	cbz	x0, 4098bc <ferror@plt+0x6a7c>
  408a18:	mov	w2, #0x5                   	// #5
  408a1c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408a20:	add	x1, x1, #0x880
  408a24:	mov	x0, #0x0                   	// #0
  408a28:	bl	402d20 <dcgettext@plt>
  408a2c:	mov	x3, x23
  408a30:	mov	x2, x0
  408a34:	mov	w1, #0x0                   	// #0
  408a38:	mov	w0, #0x0                   	// #0
  408a3c:	bl	4027b0 <error@plt>
  408a40:	b	4098bc <ferror@plt+0x6a7c>
  408a44:	str	xzr, [sp, #376]
  408a48:	b	4096bc <ferror@plt+0x687c>
  408a4c:	str	xzr, [sp, #384]
  408a50:	b	4096d0 <ferror@plt+0x6890>
  408a54:	add	x0, sp, #0x158
  408a58:	bl	403440 <ferror@plt+0x600>
  408a5c:	and	w0, w0, #0xff
  408a60:	cbz	w0, 408ac4 <ferror@plt+0x5c84>
  408a64:	ldrb	w0, [sp, #399]
  408a68:	cbz	w0, 408b40 <ferror@plt+0x5d00>
  408a6c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408a70:	ldrb	w20, [x0, #2722]
  408a74:	cbnz	w20, 4095b4 <ferror@plt+0x6774>
  408a78:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408a7c:	ldrb	w20, [x0, #2721]
  408a80:	cbnz	w20, 4095a4 <ferror@plt+0x6764>
  408a84:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408a88:	ldrb	w0, [x0, #2721]
  408a8c:	cbnz	w0, 408b40 <ferror@plt+0x5d00>
  408a90:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408a94:	ldr	x0, [x0, #2688]
  408a98:	cbz	x0, 408b40 <ferror@plt+0x5d00>
  408a9c:	mov	w2, #0x5                   	// #5
  408aa0:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408aa4:	add	x1, x1, #0x930
  408aa8:	mov	x0, #0x0                   	// #0
  408aac:	bl	402d20 <dcgettext@plt>
  408ab0:	mov	x2, x0
  408ab4:	mov	w1, #0x0                   	// #0
  408ab8:	mov	w0, #0x0                   	// #0
  408abc:	bl	4027b0 <error@plt>
  408ac0:	b	408b40 <ferror@plt+0x5d00>
  408ac4:	ldrb	w20, [sp, #399]
  408ac8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408acc:	ldrb	w0, [x0, #2722]
  408ad0:	cbnz	w0, 408ae4 <ferror@plt+0x5ca4>
  408ad4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408ad8:	ldrb	w0, [x0, #2721]
  408adc:	cbnz	w0, 408ae4 <ferror@plt+0x5ca4>
  408ae0:	strb	wzr, [sp, #399]
  408ae4:	add	x1, sp, #0x120
  408ae8:	add	x0, sp, #0x158
  408aec:	bl	403498 <ferror@plt+0x658>
  408af0:	add	x0, sp, #0x120
  408af4:	bl	402780 <strlen@plt>
  408af8:	mov	w4, #0x5                   	// #5
  408afc:	mov	x3, x0
  408b00:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  408b04:	add	x2, x2, #0x8f8
  408b08:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408b0c:	add	x1, x1, #0x918
  408b10:	mov	x0, #0x0                   	// #0
  408b14:	bl	402c70 <dcngettext@plt>
  408b18:	add	x3, sp, #0x120
  408b1c:	mov	x2, x0
  408b20:	mov	w1, #0x0                   	// #0
  408b24:	mov	w0, #0x0                   	// #0
  408b28:	bl	4027b0 <error@plt>
  408b2c:	strb	w20, [sp, #399]
  408b30:	cbz	w20, 408b40 <ferror@plt+0x5d00>
  408b34:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408b38:	ldrb	w0, [x0, #2722]
  408b3c:	cbz	w0, 408a84 <ferror@plt+0x5c44>
  408b40:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408b44:	ldrb	w1, [sp, #839]
  408b48:	strb	w1, [x0, #2884]
  408b4c:	cbnz	w21, 408c98 <ferror@plt+0x5e58>
  408b50:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408b54:	ldr	x0, [x0, #2704]
  408b58:	cbz	x0, 408d24 <ferror@plt+0x5ee4>
  408b5c:	cbz	x19, 408d48 <ferror@plt+0x5f08>
  408b60:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408b64:	ldr	x1, [x0, #2952]
  408b68:	cbz	x1, 408b8c <ferror@plt+0x5d4c>
  408b6c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408b70:	ldr	w0, [x0, #1160]
  408b74:	mov	x2, #0x22                  	// #34
  408b78:	mul	x0, x0, x2
  408b7c:	cmp	x0, x1
  408b80:	csel	x0, x0, x1, cs  // cs = hs, nlast
  408b84:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  408b88:	str	x0, [x1, #2952]
  408b8c:	cbz	w27, 408d70 <ferror@plt+0x5f30>
  408b90:	cmp	x19, #0x1
  408b94:	b.hi	408d8c <ferror@plt+0x5f4c>  // b.pmore
  408b98:	ldr	x0, [sp, #136]
  408b9c:	cbnz	x0, 408dc8 <ferror@plt+0x5f88>
  408ba0:	ldr	x24, [x25]
  408ba4:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  408ba8:	add	x1, x1, #0x360
  408bac:	mov	x0, x24
  408bb0:	bl	403bb8 <ferror@plt+0xd78>
  408bb4:	mov	x23, x0
  408bb8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408bbc:	add	x0, x0, #0x568
  408bc0:	ldr	x26, [x0, #1304]
  408bc4:	ldrb	w21, [x0, #1337]
  408bc8:	eor	w21, w21, #0x1
  408bcc:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  408bd0:	ldr	x1, [x1, #1168]
  408bd4:	ldr	x2, [x0, #1568]
  408bd8:	cmp	x2, x1
  408bdc:	csel	x2, x2, x1, cs  // cs = hs, nlast
  408be0:	mov	x1, #0x20                  	// #32
  408be4:	add	x0, sp, #0x158
  408be8:	bl	403d8c <ferror@plt+0xf4c>
  408bec:	str	xzr, [sp, #288]
  408bf0:	mov	x25, #0x0                   	// #0
  408bf4:	mov	x22, #0x0                   	// #0
  408bf8:	mov	x2, x24
  408bfc:	mov	x1, x23
  408c00:	add	x0, sp, #0x158
  408c04:	bl	406080 <ferror@plt+0x3240>
  408c08:	and	w0, w0, #0xff
  408c0c:	cbz	w0, 408f18 <ferror@plt+0x60d8>
  408c10:	ldr	x19, [sp, #344]
  408c14:	ldr	x0, [sp, #368]
  408c18:	add	x19, x19, x0
  408c1c:	ldr	x20, [sp, #360]
  408c20:	sub	x20, x19, x20, lsl #5
  408c24:	cbnz	x22, 408ddc <ferror@plt+0x5f9c>
  408c28:	sub	x19, x19, #0x20
  408c2c:	cmp	x20, x19
  408c30:	b.cs	408e88 <ferror@plt+0x6048>  // b.hs, b.nlast
  408c34:	sub	x1, x19, #0x20
  408c38:	mov	x0, x19
  408c3c:	bl	404df8 <ferror@plt+0x1fb8>
  408c40:	cmp	w21, w0
  408c44:	b.gt	408c28 <ferror@plt+0x5de8>
  408c48:	cmp	w27, #0x63
  408c4c:	b.eq	408df4 <ferror@plt+0x5fb4>  // b.none
  408c50:	mov	x1, x24
  408c54:	mov	x0, x23
  408c58:	bl	403bf4 <ferror@plt+0xdb4>
  408c5c:	ldr	x0, [sp, #344]
  408c60:	bl	402ba0 <free@plt>
  408c64:	ldr	x0, [sp, #288]
  408c68:	bl	402ba0 <free@plt>
  408c6c:	ldr	w0, [sp, #200]
  408c70:	eor	w0, w0, #0x1
  408c74:	ldp	x19, x20, [sp, #16]
  408c78:	ldp	x21, x22, [sp, #32]
  408c7c:	ldp	x23, x24, [sp, #48]
  408c80:	ldp	x25, x26, [sp, #64]
  408c84:	ldp	x27, x28, [sp, #80]
  408c88:	ldp	x29, x30, [sp]
  408c8c:	ldr	d8, [sp, #96]
  408c90:	add	sp, sp, #0x3a0
  408c94:	ret
  408c98:	mov	x1, #0x10                  	// #16
  408c9c:	ldr	x0, [sp, #144]
  408ca0:	bl	40e728 <ferror@plt+0xb8e8>
  408ca4:	mov	x20, x0
  408ca8:	cbz	x0, 408cec <ferror@plt+0x5eac>
  408cac:	mov	x2, #0x10                  	// #16
  408cb0:	add	x1, sp, #0x158
  408cb4:	bl	40e9a8 <ferror@plt+0xbb68>
  408cb8:	mov	x0, x20
  408cbc:	bl	40eb10 <ferror@plt+0xbcd0>
  408cc0:	cbnz	w0, 408d08 <ferror@plt+0x5ec8>
  408cc4:	adrp	x20, 428000 <_obstack_memory_used@@Base+0x16a28>
  408cc8:	add	x20, x20, #0x568
  408ccc:	add	x20, x20, #0x540
  408cd0:	mov	x0, x20
  408cd4:	bl	409e24 <ferror@plt+0x6fe4>
  408cd8:	mov	x2, x20
  408cdc:	mov	x1, #0x10                  	// #16
  408ce0:	add	x0, sp, #0x158
  408ce4:	bl	40a9a0 <ferror@plt+0x7b60>
  408ce8:	b	408b50 <ferror@plt+0x5d10>
  408cec:	mov	w2, #0x5                   	// #5
  408cf0:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  408cf4:	add	x1, x1, #0x138
  408cf8:	mov	x0, #0x0                   	// #0
  408cfc:	bl	402d20 <dcgettext@plt>
  408d00:	ldr	x1, [sp, #144]
  408d04:	bl	403990 <ferror@plt+0xb50>
  408d08:	mov	w2, #0x5                   	// #5
  408d0c:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  408d10:	add	x1, x1, #0x158
  408d14:	mov	x0, #0x0                   	// #0
  408d18:	bl	402d20 <dcgettext@plt>
  408d1c:	ldr	x1, [sp, #144]
  408d20:	bl	403990 <ferror@plt+0xb50>
  408d24:	adrp	x0, 413000 <_obstack_memory_used@@Base+0x1a28>
  408d28:	add	x0, x0, #0x968
  408d2c:	bl	402dd0 <getenv@plt>
  408d30:	cbz	x0, 408d3c <ferror@plt+0x5efc>
  408d34:	bl	403cd4 <ferror@plt+0xe94>
  408d38:	b	408b5c <ferror@plt+0x5d1c>
  408d3c:	adrp	x0, 412000 <_obstack_memory_used@@Base+0xa28>
  408d40:	add	x0, x0, #0xf28
  408d44:	b	408d34 <ferror@plt+0x5ef4>
  408d48:	mov	x0, x25
  408d4c:	bl	402ba0 <free@plt>
  408d50:	mov	x0, #0x8                   	// #8
  408d54:	bl	40fe60 <ferror@plt+0xd020>
  408d58:	mov	x25, x0
  408d5c:	adrp	x0, 412000 <_obstack_memory_used@@Base+0xa28>
  408d60:	add	x0, x0, #0xd8
  408d64:	str	x0, [x25]
  408d68:	mov	x19, #0x1                   	// #1
  408d6c:	b	408b60 <ferror@plt+0x5d20>
  408d70:	cbz	x19, 408f74 <ferror@plt+0x6134>
  408d74:	mov	x20, x25
  408d78:	mov	x21, #0x0                   	// #0
  408d7c:	adrp	x23, 412000 <_obstack_memory_used@@Base+0xa28>
  408d80:	add	x23, x23, #0xd8
  408d84:	mov	w26, #0x4                   	// #4
  408d88:	b	408f34 <ferror@plt+0x60f4>
  408d8c:	mov	w2, #0x5                   	// #5
  408d90:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408d94:	add	x1, x1, #0x970
  408d98:	mov	x0, #0x0                   	// #0
  408d9c:	bl	402d20 <dcgettext@plt>
  408da0:	mov	x19, x0
  408da4:	ldr	x1, [x25, #8]
  408da8:	mov	w0, #0x4                   	// #4
  408dac:	bl	40e3ec <ferror@plt+0xb5ac>
  408db0:	mov	w4, w27
  408db4:	mov	x3, x0
  408db8:	mov	x2, x19
  408dbc:	mov	w1, #0x0                   	// #0
  408dc0:	mov	w0, #0x2                   	// #2
  408dc4:	bl	4027b0 <error@plt>
  408dc8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408dcc:	add	x0, x0, #0x3b0
  408dd0:	strb	w27, [x0, #248]
  408dd4:	add	x0, x0, #0xf8
  408dd8:	bl	4036e0 <ferror@plt+0x8a0>
  408ddc:	sub	x1, x19, #0x20
  408de0:	add	x0, sp, #0x120
  408de4:	bl	404df8 <ferror@plt+0x1fb8>
  408de8:	cmp	w21, w0
  408dec:	b.gt	408c28 <ferror@plt+0x5de8>
  408df0:	b	408c48 <ferror@plt+0x5e08>
  408df4:	sub	x19, x19, #0x20
  408df8:	ldr	x0, [sp, #344]
  408dfc:	ldr	x1, [sp, #368]
  408e00:	add	x0, x0, x1
  408e04:	sub	x0, x0, x19
  408e08:	add	x25, x25, x0, asr #5
  408e0c:	adrp	x21, 428000 <_obstack_memory_used@@Base+0x16a28>
  408e10:	ldr	x22, [x21, #1328]
  408e14:	mov	w2, #0x5                   	// #5
  408e18:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408e1c:	add	x1, x1, #0x998
  408e20:	mov	x0, #0x0                   	// #0
  408e24:	bl	402d20 <dcgettext@plt>
  408e28:	mov	x20, x0
  408e2c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  408e30:	ldr	x26, [x0, #2992]
  408e34:	add	x1, sp, #0xf0
  408e38:	mov	x0, x25
  408e3c:	bl	40c468 <ferror@plt+0x9628>
  408e40:	mov	x5, x0
  408e44:	mov	x4, x24
  408e48:	mov	x3, x26
  408e4c:	mov	x2, x20
  408e50:	mov	w1, #0x1                   	// #1
  408e54:	mov	x0, x22
  408e58:	bl	402b30 <__fprintf_chk@plt>
  408e5c:	ldr	x20, [x21, #1328]
  408e60:	mov	w2, #0x5                   	// #5
  408e64:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408e68:	add	x1, x1, #0x9b0
  408e6c:	mov	x0, #0x0                   	// #0
  408e70:	bl	402d20 <dcgettext@plt>
  408e74:	mov	x2, x0
  408e78:	mov	x1, x20
  408e7c:	mov	x0, x19
  408e80:	bl	403e44 <ferror@plt+0x1004>
  408e84:	b	408c50 <ferror@plt+0x5e10>
  408e88:	ldr	x0, [sp, #360]
  408e8c:	add	x25, x25, x0
  408e90:	ldr	x20, [x19, #8]
  408e94:	cmp	x22, x20
  408e98:	b.cc	408ee8 <ferror@plt+0x60a8>  // b.lo, b.ul, b.last
  408e9c:	ldr	x2, [x19, #8]
  408ea0:	ldr	x1, [x19]
  408ea4:	ldr	x0, [sp, #288]
  408ea8:	bl	402720 <memcpy@plt>
  408eac:	ldr	x0, [x19, #8]
  408eb0:	str	x0, [sp, #296]
  408eb4:	cbz	x26, 408bf8 <ferror@plt+0x5db8>
  408eb8:	ldr	x1, [sp, #288]
  408ebc:	ldr	x0, [x19, #16]
  408ec0:	ldr	x2, [x19]
  408ec4:	sub	x0, x0, x2
  408ec8:	add	x0, x1, x0
  408ecc:	str	x0, [sp, #304]
  408ed0:	ldr	x0, [x19, #24]
  408ed4:	ldr	x2, [x19]
  408ed8:	sub	x0, x0, x2
  408edc:	add	x1, x1, x0
  408ee0:	str	x1, [sp, #312]
  408ee4:	b	408bf8 <ferror@plt+0x5db8>
  408ee8:	lsl	x22, x22, #1
  408eec:	cbz	x22, 408efc <ferror@plt+0x60bc>
  408ef0:	cmp	x20, x22
  408ef4:	b.hi	408ee8 <ferror@plt+0x60a8>  // b.pmore
  408ef8:	mov	x20, x22
  408efc:	ldr	x0, [sp, #288]
  408f00:	bl	402ba0 <free@plt>
  408f04:	mov	x0, x20
  408f08:	bl	40fe60 <ferror@plt+0xd020>
  408f0c:	str	x0, [sp, #288]
  408f10:	mov	x22, x20
  408f14:	b	408e9c <ferror@plt+0x605c>
  408f18:	mov	w0, #0x1                   	// #1
  408f1c:	str	w0, [sp, #200]
  408f20:	b	408c50 <ferror@plt+0x5e10>
  408f24:	add	x21, x21, #0x1
  408f28:	add	x20, x20, #0x8
  408f2c:	cmp	x19, x21
  408f30:	b.eq	408f74 <ferror@plt+0x6134>  // b.none
  408f34:	ldr	x22, [x20]
  408f38:	mov	x1, x23
  408f3c:	mov	x0, x22
  408f40:	bl	402b50 <strcmp@plt>
  408f44:	cbz	w0, 408f24 <ferror@plt+0x60e4>
  408f48:	mov	w1, w26
  408f4c:	mov	x0, x22
  408f50:	bl	402830 <euidaccess@plt>
  408f54:	cbz	w0, 408f24 <ferror@plt+0x60e4>
  408f58:	mov	w2, #0x5                   	// #5
  408f5c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  408f60:	add	x1, x1, #0x9c0
  408f64:	mov	x0, #0x0                   	// #0
  408f68:	bl	402d20 <dcgettext@plt>
  408f6c:	ldr	x1, [x20]
  408f70:	bl	403990 <ferror@plt+0xb50>
  408f74:	ldr	x0, [sp, #136]
  408f78:	cbz	x0, 408f98 <ferror@plt+0x6158>
  408f7c:	mov	w2, #0x1b6                 	// #438
  408f80:	mov	w1, #0x41                  	// #65
  408f84:	movk	w1, #0x8, lsl #16
  408f88:	bl	402900 <open@plt>
  408f8c:	tbnz	w0, #31, 408fe4 <ferror@plt+0x61a4>
  408f90:	mov	w1, #0x1                   	// #1
  408f94:	bl	405170 <ferror@plt+0x2330>
  408f98:	cbnz	w24, 409000 <ferror@plt+0x61c0>
  408f9c:	ldr	x0, [sp, #168]
  408fa0:	cbz	x0, 409040 <ferror@plt+0x6200>
  408fa4:	mov	x0, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  408fa8:	movk	x0, #0xf0, lsl #48
  408fac:	ldr	x1, [sp, #168]
  408fb0:	cmp	x1, x0
  408fb4:	csel	x1, x1, x0, ls  // ls = plast
  408fb8:	str	x1, [sp, #128]
  408fbc:	str	xzr, [sp, #312]
  408fc0:	lsl	x0, x1, #1
  408fc4:	str	x0, [sp, #152]
  408fc8:	mov	x0, #0x110                 	// #272
  408fcc:	mul	x0, x1, x0
  408fd0:	str	x0, [sp, #144]
  408fd4:	mov	x26, #0x0                   	// #0
  408fd8:	add	x0, sp, #0x160
  408fdc:	str	x0, [sp, #160]
  408fe0:	b	40944c <ferror@plt+0x660c>
  408fe4:	mov	w2, #0x5                   	// #5
  408fe8:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  408fec:	add	x1, x1, #0x138
  408ff0:	mov	x0, #0x0                   	// #0
  408ff4:	bl	402d20 <dcgettext@plt>
  408ff8:	ldr	x1, [sp, #136]
  408ffc:	bl	403990 <ferror@plt+0xb50>
  409000:	mov	x1, #0x10                  	// #16
  409004:	mov	x0, x19
  409008:	bl	410054 <ferror@plt+0xd214>
  40900c:	mov	x1, #0x0                   	// #0
  409010:	b	409024 <ferror@plt+0x61e4>
  409014:	ldr	x3, [x25, x1, lsl #3]
  409018:	lsl	x2, x1, #4
  40901c:	str	x3, [x0, x2]
  409020:	add	x1, x1, #0x1
  409024:	cmp	x19, x1
  409028:	b.ne	409014 <ferror@plt+0x61d4>  // b.any
  40902c:	ldr	x3, [sp, #136]
  409030:	mov	x2, x19
  409034:	mov	x1, #0x0                   	// #0
  409038:	bl	406cac <ferror@plt+0x3e6c>
  40903c:	b	4094e0 <ferror@plt+0x66a0>
  409040:	mov	w0, #0x2                   	// #2
  409044:	bl	40c7d0 <ferror@plt+0x9990>
  409048:	cmp	x0, #0x8
  40904c:	mov	x1, #0x8                   	// #8
  409050:	csel	x0, x0, x1, ls  // ls = plast
  409054:	str	x0, [sp, #168]
  409058:	b	408fa4 <ferror@plt+0x6164>
  40905c:	mov	x1, #0x1                   	// #1
  409060:	mov	x0, x1
  409064:	lsl	x0, x0, #1
  409068:	add	x1, x1, #0x1
  40906c:	ldr	x2, [sp, #128]
  409070:	cmp	x2, x0
  409074:	b.hi	409064 <ferror@plt+0x6224>  // b.pmore
  409078:	lsl	x0, x1, #5
  40907c:	str	x0, [sp, #176]
  409080:	b	40947c <ferror@plt+0x663c>
  409084:	ldr	x0, [sp, #176]
  409088:	add	x23, x0, #0x1
  40908c:	add	x21, x0, #0x2
  409090:	adrp	x28, 412000 <_obstack_memory_used@@Base+0xa28>
  409094:	add	x28, x28, #0xd8
  409098:	b	409140 <ferror@plt+0x6300>
  40909c:	ldr	x0, [sp, #112]
  4090a0:	bl	402880 <fileno@plt>
  4090a4:	add	x2, sp, #0x158
  4090a8:	mov	w1, w0
  4090ac:	mov	w0, #0x0                   	// #0
  4090b0:	bl	402d10 <__fxstat@plt>
  4090b4:	cmp	w0, #0x0
  4090b8:	cset	w0, ne  // ne = any
  4090bc:	b	4090d8 <ferror@plt+0x6298>
  4090c0:	add	x2, sp, #0x158
  4090c4:	mov	x1, x22
  4090c8:	mov	w0, #0x0                   	// #0
  4090cc:	bl	402de0 <__xstat@plt>
  4090d0:	cmp	w0, #0x0
  4090d4:	cset	w0, ne  // ne = any
  4090d8:	cbnz	w0, 409170 <ferror@plt+0x6330>
  4090dc:	ldr	w0, [sp, #360]
  4090e0:	and	w0, w0, #0xf000
  4090e4:	cmp	w0, #0x8, lsl #12
  4090e8:	b.eq	40918c <ferror@plt+0x634c>  // b.none
  4090ec:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4090f0:	ldr	x0, [x0, #2952]
  4090f4:	cbnz	x0, 409288 <ferror@plt+0x6448>
  4090f8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4090fc:	ldr	x0, [x0, #2968]
  409100:	mov	x22, #0x20000               	// #131072
  409104:	cbz	x0, 4091b4 <ferror@plt+0x6374>
  409108:	mul	x0, x23, x22
  40910c:	add	x0, x0, #0x1
  409110:	udiv	x1, x0, x23
  409114:	cmp	x22, x1
  409118:	b.ne	409280 <ferror@plt+0x6440>  // b.any
  40911c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  409120:	ldr	x1, [x1, #2968]
  409124:	sub	x1, x1, x21
  409128:	cmp	x0, x1
  40912c:	b.cs	409280 <ferror@plt+0x6440>  // b.hs, b.nlast
  409130:	add	x21, x21, x0
  409134:	add	x20, x20, #0x1
  409138:	cmp	x19, x20
  40913c:	b.eq	40928c <ferror@plt+0x644c>  // b.none
  409140:	cbz	x20, 40909c <ferror@plt+0x625c>
  409144:	ldr	x22, [x25, x20, lsl #3]
  409148:	mov	x1, x28
  40914c:	mov	x0, x22
  409150:	bl	402b50 <strcmp@plt>
  409154:	cbnz	w0, 4090c0 <ferror@plt+0x6280>
  409158:	add	x2, sp, #0x158
  40915c:	mov	w1, #0x0                   	// #0
  409160:	bl	402d10 <__fxstat@plt>
  409164:	cmp	w0, #0x0
  409168:	cset	w0, ne  // ne = any
  40916c:	b	4090d8 <ferror@plt+0x6298>
  409170:	mov	w2, #0x5                   	// #5
  409174:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  409178:	add	x1, x1, #0x9d0
  40917c:	mov	x0, #0x0                   	// #0
  409180:	bl	402d20 <dcgettext@plt>
  409184:	ldr	x1, [x25, x20, lsl #3]
  409188:	bl	403990 <ferror@plt+0xb50>
  40918c:	ldr	x22, [sp, #392]
  409190:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409194:	ldr	x0, [x0, #2968]
  409198:	cbnz	x0, 409108 <ferror@plt+0x62c8>
  40919c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4091a0:	add	x0, x0, #0x568
  4091a4:	ldr	x1, [x0, #1568]
  4091a8:	str	x1, [x0, #1584]
  4091ac:	cbnz	x1, 409108 <ferror@plt+0x62c8>
  4091b0:	b	4091b8 <ferror@plt+0x6378>
  4091b4:	mov	x22, #0x20000               	// #131072
  4091b8:	add	x1, sp, #0xf0
  4091bc:	mov	w0, #0x2                   	// #2
  4091c0:	bl	402cb0 <getrlimit@plt>
  4091c4:	cmp	w0, #0x0
  4091c8:	ldr	x27, [sp, #240]
  4091cc:	csinv	x27, x27, xzr, eq  // eq = none
  4091d0:	add	x1, sp, #0xf0
  4091d4:	mov	w0, #0x9                   	// #9
  4091d8:	bl	402cb0 <getrlimit@plt>
  4091dc:	cbnz	w0, 4091ec <ferror@plt+0x63ac>
  4091e0:	ldr	x0, [sp, #240]
  4091e4:	cmp	x27, x0
  4091e8:	csel	x27, x27, x0, ls  // ls = plast
  4091ec:	lsr	x27, x27, #1
  4091f0:	add	x1, sp, #0xf0
  4091f4:	mov	w0, #0x5                   	// #5
  4091f8:	bl	402cb0 <getrlimit@plt>
  4091fc:	cbnz	w0, 409218 <ferror@plt+0x63d8>
  409200:	ldr	x0, [sp, #240]
  409204:	lsr	x0, x0, #4
  409208:	mov	x1, #0xf                   	// #15
  40920c:	mul	x0, x0, x1
  409210:	cmp	x27, x0
  409214:	csel	x27, x27, x0, ls  // ls = plast
  409218:	bl	40c914 <ferror@plt+0x9ad4>
  40921c:	fmov	d8, d0
  409220:	bl	40c89c <ferror@plt+0x9a5c>
  409224:	fmov	d1, #1.250000000000000000e-01
  409228:	fmul	d1, d0, d1
  40922c:	fcmpe	d8, d1
  409230:	fcsel	d8, d8, d1, gt
  409234:	fmov	d1, #7.500000000000000000e-01
  409238:	fmul	d0, d0, d1
  40923c:	ucvtf	d1, x27
  409240:	fcmpe	d0, d1
  409244:	b.pl	40924c <ferror@plt+0x640c>  // b.nfrst
  409248:	fcvtzu	x27, d0
  40924c:	ucvtf	d0, x27
  409250:	fcmpe	d0, d8
  409254:	b.le	40925c <ferror@plt+0x641c>
  409258:	fcvtzu	x27, d8
  40925c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409260:	ldr	w0, [x0, #1160]
  409264:	mov	x1, #0x22                  	// #34
  409268:	mul	x0, x0, x1
  40926c:	cmp	x0, x27
  409270:	csel	x0, x0, x27, cs  // cs = hs, nlast
  409274:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  409278:	str	x0, [x1, #2968]
  40927c:	b	409108 <ferror@plt+0x62c8>
  409280:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409284:	ldr	x0, [x0, #2968]
  409288:	mov	x21, x0
  40928c:	mov	x2, x21
  409290:	ldr	x1, [sp, #176]
  409294:	add	x0, sp, #0x120
  409298:	bl	403d8c <ferror@plt+0xf4c>
  40929c:	b	409484 <ferror@plt+0x6644>
  4092a0:	ldr	x2, [sp, #312]
  4092a4:	ldr	x3, [sp, #296]
  4092a8:	ldr	x5, [sp, #176]
  4092ac:	add	x1, x5, #0x1
  4092b0:	sub	x4, x2, x3
  4092b4:	ldr	x0, [sp, #304]
  4092b8:	msub	x0, x5, x0, x4
  4092bc:	cmp	x1, x0
  4092c0:	b.cc	409438 <ferror@plt+0x65f8>  // b.lo, b.ul, b.last
  4092c4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4092c8:	str	xzr, [x0, #2888]
  4092cc:	ldr	x23, [sp, #288]
  4092d0:	add	x23, x23, x2
  4092d4:	add	x26, x26, #0x1
  4092d8:	mov	w1, #0x0                   	// #0
  4092dc:	add	x0, sp, #0xf0
  4092e0:	bl	4056b0 <ferror@plt+0x2870>
  4092e4:	add	x21, x0, #0xd
  4092e8:	ldr	w22, [sp, #200]
  4092ec:	ldr	x0, [sp, #304]
  4092f0:	cmp	x0, #0x1
  4092f4:	b.ls	409494 <ferror@plt+0x6654>  // b.plast
  4092f8:	ldr	x1, [sp, #152]
  4092fc:	adrp	x0, 403000 <ferror@plt+0x1c0>
  409300:	add	x0, x0, #0x57c
  409304:	bl	40c108 <ferror@plt+0x92c8>
  409308:	str	x0, [sp, #344]
  40930c:	mov	x1, #0x0                   	// #0
  409310:	ldr	x0, [sp, #160]
  409314:	bl	402a00 <pthread_mutex_init@plt>
  409318:	mov	x1, #0x0                   	// #0
  40931c:	add	x0, sp, #0x190
  409320:	bl	402ca0 <pthread_cond_init@plt>
  409324:	ldr	x27, [sp, #304]
  409328:	ldr	x0, [sp, #144]
  40932c:	bl	40fe60 <ferror@plt+0xd020>
  409330:	mov	x20, x0
  409334:	str	xzr, [x0, #24]
  409338:	str	xzr, [x0, #16]
  40933c:	str	xzr, [x0, #8]
  409340:	str	xzr, [x0]
  409344:	str	xzr, [x0, #32]
  409348:	str	x27, [x0, #48]
  40934c:	str	x27, [x0, #40]
  409350:	str	xzr, [x0, #56]
  409354:	str	wzr, [x0, #80]
  409358:	strb	wzr, [x0, #84]
  40935c:	mov	x1, #0x0                   	// #0
  409360:	add	x0, x0, #0x58
  409364:	bl	402a00 <pthread_mutex_init@plt>
  409368:	add	x28, x20, #0x88
  40936c:	mov	w5, #0x0                   	// #0
  409370:	mov	x4, x27
  409374:	ldr	x27, [sp, #128]
  409378:	mov	x3, x27
  40937c:	mov	x2, x23
  409380:	mov	x1, x28
  409384:	mov	x0, x20
  409388:	bl	4058f0 <ferror@plt+0x2ab0>
  40938c:	mov	x6, x21
  409390:	ldr	x5, [sp, #240]
  409394:	add	x4, sp, #0x158
  409398:	mov	x3, x28
  40939c:	ldr	x2, [sp, #304]
  4093a0:	mov	x1, x27
  4093a4:	mov	x0, x23
  4093a8:	bl	405acc <ferror@plt+0x2c8c>
  4093ac:	mov	x1, x21
  4093b0:	ldr	x0, [sp, #240]
  4093b4:	bl	403bf4 <ferror@plt+0xdb4>
  4093b8:	cbnz	w22, 4094a8 <ferror@plt+0x6668>
  4093bc:	ldr	x2, [sp, #120]
  4093c0:	ldr	x1, [sp, #112]
  4093c4:	add	x0, sp, #0x120
  4093c8:	bl	406080 <ferror@plt+0x3240>
  4093cc:	and	w0, w0, #0xff
  4093d0:	cbz	w0, 40943c <ferror@plt+0x65fc>
  4093d4:	ldrb	w22, [sp, #336]
  4093d8:	cmp	x19, #0x0
  4093dc:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  4093e0:	b.ne	4092a0 <ferror@plt+0x6460>  // b.any
  4093e4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4093e8:	str	xzr, [x0, #2888]
  4093ec:	ldr	x23, [sp, #288]
  4093f0:	ldr	x0, [sp, #312]
  4093f4:	add	x23, x23, x0
  4093f8:	cbz	w22, 4092d4 <ferror@plt+0x6494>
  4093fc:	ldr	x20, [sp, #320]
  409400:	orr	x20, x19, x20
  409404:	orr	x20, x20, x26
  409408:	cbnz	x20, 4092d4 <ferror@plt+0x6494>
  40940c:	ldr	x1, [sp, #120]
  409410:	ldr	x0, [sp, #112]
  409414:	bl	403bf4 <ferror@plt+0xdb4>
  409418:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  40941c:	add	x1, x1, #0x2b8
  409420:	ldr	x21, [sp, #136]
  409424:	mov	x0, x21
  409428:	bl	403bb8 <ferror@plt+0xd78>
  40942c:	str	x0, [sp, #240]
  409430:	mov	x26, x20
  409434:	b	4092ec <ferror@plt+0x64ac>
  409438:	str	x3, [sp, #320]
  40943c:	add	x25, x25, #0x8
  409440:	ldr	x1, [sp, #120]
  409444:	ldr	x0, [sp, #112]
  409448:	bl	403bf4 <ferror@plt+0xdb4>
  40944c:	cbz	x19, 4094f4 <ferror@plt+0x66b4>
  409450:	ldr	x0, [x25]
  409454:	str	x0, [sp, #120]
  409458:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  40945c:	add	x1, x1, #0x360
  409460:	bl	403bb8 <ferror@plt+0xd78>
  409464:	str	x0, [sp, #112]
  409468:	ldr	x0, [sp, #168]
  40946c:	cmp	x0, #0x1
  409470:	b.hi	40905c <ferror@plt+0x621c>  // b.pmore
  409474:	mov	x0, #0x30                  	// #48
  409478:	str	x0, [sp, #176]
  40947c:	ldr	x20, [sp, #312]
  409480:	cbz	x20, 409084 <ferror@plt+0x6244>
  409484:	strb	wzr, [sp, #336]
  409488:	sub	x19, x19, #0x1
  40948c:	str	w24, [sp, #200]
  409490:	b	4093bc <ferror@plt+0x657c>
  409494:	mov	x2, x21
  409498:	ldr	x1, [sp, #240]
  40949c:	sub	x0, x23, #0x20
  4094a0:	bl	4050e8 <ferror@plt+0x22a8>
  4094a4:	b	4093ac <ferror@plt+0x656c>
  4094a8:	ldr	x0, [sp, #288]
  4094ac:	bl	402ba0 <free@plt>
  4094b0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4094b4:	ldr	w0, [x0, #2936]
  4094b8:	cmp	w0, #0x0
  4094bc:	b.le	4094e0 <ferror@plt+0x66a0>
  4094c0:	mov	w20, #0xffffffff            	// #-1
  4094c4:	adrp	x19, 428000 <_obstack_memory_used@@Base+0x16a28>
  4094c8:	add	x19, x19, #0x568
  4094cc:	mov	w0, w20
  4094d0:	bl	4051e0 <ferror@plt+0x23a0>
  4094d4:	ldr	w0, [x19, #1552]
  4094d8:	cmp	w0, #0x0
  4094dc:	b.gt	4094cc <ferror@plt+0x668c>
  4094e0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4094e4:	ldrb	w0, [x0, #2684]
  4094e8:	cbnz	w0, 409568 <ferror@plt+0x6728>
  4094ec:	mov	w0, #0x0                   	// #0
  4094f0:	b	408c74 <ferror@plt+0x5e34>
  4094f4:	ldr	x0, [sp, #288]
  4094f8:	bl	402ba0 <free@plt>
  4094fc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409500:	add	x0, x0, #0x568
  409504:	ldr	x19, [x0, #1160]
  409508:	cmp	xzr, x26, lsr #60
  40950c:	cset	x0, ne  // ne = any
  409510:	tst	x26, #0x800000000000000
  409514:	csinc	w0, w0, wzr, eq  // eq = none
  409518:	cbnz	w0, 409564 <ferror@plt+0x6724>
  40951c:	lsl	x0, x26, #4
  409520:	bl	40fe60 <ferror@plt+0xd020>
  409524:	mov	x20, x0
  409528:	cbz	x19, 409544 <ferror@plt+0x6704>
  40952c:	add	x1, x19, #0xd
  409530:	str	x1, [x0]
  409534:	str	x19, [x0, #8]
  409538:	ldr	x19, [x19]
  40953c:	add	x0, x0, #0x10
  409540:	cbnz	x19, 40952c <ferror@plt+0x66ec>
  409544:	ldr	x3, [sp, #136]
  409548:	mov	x2, x26
  40954c:	mov	x1, x26
  409550:	mov	x0, x20
  409554:	bl	406cac <ferror@plt+0x3e6c>
  409558:	mov	x0, x20
  40955c:	bl	402ba0 <free@plt>
  409560:	b	4094b0 <ferror@plt+0x6670>
  409564:	bl	4100ec <ferror@plt+0xd2ac>
  409568:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40956c:	ldr	x0, [x0, #1360]
  409570:	bl	410c74 <ferror@plt+0xde34>
  409574:	mov	w1, w0
  409578:	mov	w0, #0x0                   	// #0
  40957c:	cmn	w1, #0x1
  409580:	b.ne	408c74 <ferror@plt+0x5e34>  // b.any
  409584:	mov	w2, #0x5                   	// #5
  409588:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  40958c:	add	x1, x1, #0x158
  409590:	mov	x0, #0x0                   	// #0
  409594:	bl	402d20 <dcgettext@plt>
  409598:	adrp	x1, 412000 <_obstack_memory_used@@Base+0xa28>
  40959c:	add	x1, x1, #0xd8
  4095a0:	bl	403990 <ferror@plt+0xb50>
  4095a4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4095a8:	ldr	x0, [x0, #2688]
  4095ac:	cbnz	x0, 408ae4 <ferror@plt+0x5ca4>
  4095b0:	b	408a84 <ferror@plt+0x5c44>
  4095b4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4095b8:	ldr	x0, [x0, #2688]
  4095bc:	cbnz	x0, 408ae4 <ferror@plt+0x5ca4>
  4095c0:	b	408b40 <ferror@plt+0x5d00>
  4095c4:	mov	w2, #0x5                   	// #5
  4095c8:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4095cc:	add	x1, x1, #0x9e0
  4095d0:	mov	x0, #0x0                   	// #0
  4095d4:	bl	402d20 <dcgettext@plt>
  4095d8:	mov	x3, x23
  4095dc:	mov	x2, x0
  4095e0:	mov	w1, #0x0                   	// #0
  4095e4:	mov	w0, #0x0                   	// #0
  4095e8:	bl	4027b0 <error@plt>
  4095ec:	mov	w1, #0x1                   	// #1
  4095f0:	b	409878 <ferror@plt+0x6a38>
  4095f4:	add	x0, sp, #0x310
  4095f8:	bl	403440 <ferror@plt+0x600>
  4095fc:	and	w0, w0, #0xff
  409600:	cbz	w0, 4088b4 <ferror@plt+0x5a74>
  409604:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409608:	ldrb	w0, [x0, #2720]
  40960c:	cbnz	w0, 4088fc <ferror@plt+0x5abc>
  409610:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409614:	ldrb	w1, [sp, #839]
  409618:	strb	w1, [x0, #2884]
  40961c:	b	408b50 <ferror@plt+0x5d10>
  409620:	ldr	x1, [sp, #152]
  409624:	ldr	x1, [x1]
  409628:	cbnz	x1, 407b14 <ferror@plt+0x4cd4>
  40962c:	ldr	x1, [sp, #152]
  409630:	ldr	x1, [x1, #8]
  409634:	cbnz	x1, 407b14 <ferror@plt+0x4cd4>
  409638:	b	409944 <ferror@plt+0x6b04>
  40963c:	mov	w0, #0x1                   	// #1
  409640:	ldr	x4, [sp, #184]
  409644:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x1a28>
  409648:	add	x3, x3, #0xde8
  40964c:	add	x3, x3, #0x1b0
  409650:	mov	w2, #0x53                  	// #83
  409654:	ldr	w1, [sp, #152]
  409658:	bl	410770 <ferror@plt+0xd930>
  40965c:	cmp	w0, #0x2
  409660:	b.ne	409640 <ferror@plt+0x6800>  // b.any
  409664:	ldr	x1, [sp, #344]
  409668:	ldurb	w2, [x1, #-1]
  40966c:	sub	w2, w2, #0x30
  409670:	cmp	w2, #0x9
  409674:	b.hi	409640 <ferror@plt+0x6800>  // b.pmore
  409678:	ldrb	w2, [x1, #1]
  40967c:	cbnz	w2, 409640 <ferror@plt+0x6800>
  409680:	ldrb	w1, [x1]
  409684:	cmp	w1, #0x25
  409688:	b.eq	4082d0 <ferror@plt+0x5490>  // b.none
  40968c:	cmp	w1, #0x62
  409690:	b.eq	408298 <ferror@plt+0x5458>  // b.none
  409694:	b	409640 <ferror@plt+0x6800>
  409698:	cmp	w1, #0x0
  40969c:	ccmp	w26, #0x0, #0x0, eq  // eq = none
  4096a0:	b.eq	4098bc <ferror@plt+0x6a7c>  // b.none
  4096a4:	cbz	w26, 4098bc <ferror@plt+0x6a7c>
  4096a8:	ldr	x0, [sp, #376]
  4096ac:	cbz	x0, 4096bc <ferror@plt+0x687c>
  4096b0:	ldr	x1, [x20, #32]
  4096b4:	cmp	x0, x1
  4096b8:	b.eq	408a44 <ferror@plt+0x5c04>  // b.none
  4096bc:	ldr	x0, [sp, #384]
  4096c0:	cbz	x0, 4096d0 <ferror@plt+0x6890>
  4096c4:	ldr	x1, [x20, #40]
  4096c8:	cmp	x0, x1
  4096cc:	b.eq	408a4c <ferror@plt+0x5c0c>  // b.none
  4096d0:	ldrb	w0, [x20, #48]
  4096d4:	eor	w0, w0, #0x1
  4096d8:	ldrb	w1, [sp, #392]
  4096dc:	and	w0, w0, w1
  4096e0:	strb	w0, [sp, #392]
  4096e4:	ldrb	w0, [x20, #49]
  4096e8:	eor	w0, w0, #0x1
  4096ec:	ldrb	w1, [sp, #393]
  4096f0:	and	w0, w0, w1
  4096f4:	strb	w0, [sp, #393]
  4096f8:	ldrb	w0, [x20, #54]
  4096fc:	eor	w0, w0, #0x1
  409700:	ldrb	w1, [sp, #398]
  409704:	and	w0, w0, w1
  409708:	strb	w0, [sp, #398]
  40970c:	ldrb	w0, [x20, #50]
  409710:	eor	w0, w0, #0x1
  409714:	ldrb	w1, [sp, #394]
  409718:	and	w0, w0, w1
  40971c:	strb	w0, [sp, #394]
  409720:	ldrb	w0, [x20, #52]
  409724:	eor	w0, w0, #0x1
  409728:	ldrb	w1, [sp, #396]
  40972c:	and	w0, w0, w1
  409730:	strb	w0, [sp, #396]
  409734:	ldrb	w0, [x20, #53]
  409738:	eor	w0, w0, #0x1
  40973c:	ldrb	w1, [sp, #397]
  409740:	and	w0, w0, w1
  409744:	strb	w0, [sp, #397]
  409748:	ldrb	w0, [x20, #51]
  40974c:	eor	w0, w0, #0x1
  409750:	ldrb	w1, [sp, #395]
  409754:	and	w0, w0, w1
  409758:	strb	w0, [sp, #395]
  40975c:	ldrb	w0, [x20, #56]
  409760:	eor	w0, w0, #0x1
  409764:	ldrb	w1, [sp, #400]
  409768:	and	w0, w0, w1
  40976c:	strb	w0, [sp, #400]
  409770:	ldrb	w0, [x20, #55]
  409774:	eor	w0, w0, #0x1
  409778:	ldrb	w1, [sp, #399]
  40977c:	and	w0, w0, w1
  409780:	strb	w0, [sp, #399]
  409784:	ldr	x20, [x20, #64]
  409788:	add	x23, x23, #0x1
  40978c:	cbz	x20, 408a54 <ferror@plt+0x5c14>
  409790:	ldrb	w0, [x20, #57]
  409794:	cbz	w0, 409854 <ferror@plt+0x6a14>
  409798:	ldr	x22, [x20]
  40979c:	ldr	x28, [x20, #16]
  4097a0:	cmn	x22, #0x1
  4097a4:	csel	x22, x22, xzr, ne  // ne = any
  4097a8:	mov	w0, #0x2b                  	// #43
  4097ac:	strh	w0, [sp, #240]
  4097b0:	add	x1, sp, #0xd8
  4097b4:	mov	x0, x22
  4097b8:	bl	40c468 <ferror@plt+0x9628>
  4097bc:	mov	x2, #0x2d                  	// #45
  4097c0:	mov	x1, x0
  4097c4:	ldr	x0, [sp, #152]
  4097c8:	bl	402bf0 <__stpcpy_chk@plt>
  4097cc:	str	x0, [sp, #120]
  4097d0:	mov	w0, #0x6b2d                	// #27437
  4097d4:	movk	w0, #0x20, lsl #16
  4097d8:	str	w0, [sp, #288]
  4097dc:	add	x1, sp, #0xd8
  4097e0:	add	x0, x22, #0x1
  4097e4:	bl	40c468 <ferror@plt+0x9628>
  4097e8:	mov	x2, #0x2c                  	// #44
  4097ec:	mov	x1, x0
  4097f0:	ldr	x0, [sp, #160]
  4097f4:	bl	402bf0 <__stpcpy_chk@plt>
  4097f8:	str	x0, [sp, #128]
  4097fc:	ldr	x0, [x20, #16]
  409800:	cmn	x0, #0x1
  409804:	b.ne	408988 <ferror@plt+0x5b48>  // b.any
  409808:	mov	w2, #0x5                   	// #5
  40980c:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  409810:	add	x1, x1, #0x850
  409814:	mov	x0, #0x0                   	// #0
  409818:	bl	402d20 <dcgettext@plt>
  40981c:	mov	x28, x0
  409820:	add	x1, sp, #0xf0
  409824:	mov	w0, #0x0                   	// #0
  409828:	bl	40e674 <ferror@plt+0xb834>
  40982c:	mov	x22, x0
  409830:	add	x1, sp, #0x120
  409834:	mov	w0, #0x1                   	// #1
  409838:	bl	40e674 <ferror@plt+0xb834>
  40983c:	mov	x4, x0
  409840:	mov	x3, x22
  409844:	mov	x2, x28
  409848:	mov	w1, #0x0                   	// #0
  40984c:	mov	w0, #0x0                   	// #0
  409850:	bl	4027b0 <error@plt>
  409854:	ldr	x0, [x20]
  409858:	ldr	w2, [sp, #112]
  40985c:	mov	w1, w2
  409860:	cmn	x0, #0x1
  409864:	b.eq	409878 <ferror@plt+0x6a38>  // b.none
  409868:	ldr	x1, [x20, #16]
  40986c:	cmp	x0, x1
  409870:	b.hi	4095c4 <ferror@plt+0x6784>  // b.pmore
  409874:	mov	w1, w2
  409878:	ldr	x0, [x20, #48]
  40987c:	and	x0, x0, #0xffffffff0000
  409880:	and	x0, x0, #0xffffffff00ffffff
  409884:	mov	w2, #0x1                   	// #1
  409888:	cbnz	x0, 409890 <ferror@plt+0x6a50>
  40988c:	ldrb	w2, [x20, #54]
  409890:	ldr	x0, [x20, #16]
  409894:	cbnz	x0, 4098a0 <ferror@plt+0x6a60>
  409898:	ldr	x0, [x20, #24]
  40989c:	cbnz	x0, 409698 <ferror@plt+0x6858>
  4098a0:	cmp	w1, #0x0
  4098a4:	ccmp	w26, #0x0, #0x0, eq  // eq = none
  4098a8:	b.ne	4096a4 <ferror@plt+0x6864>  // b.any
  4098ac:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4098b0:	ldr	w0, [x0, #944]
  4098b4:	cmp	w0, #0x100
  4098b8:	b.eq	4089f4 <ferror@plt+0x5bb4>  // b.none
  4098bc:	ldr	x0, [x20, #48]
  4098c0:	and	x0, x0, #0xffffffff0000
  4098c4:	and	x0, x0, #0xffffffff00ffffff
  4098c8:	cbz	x0, 4096a8 <ferror@plt+0x6868>
  4098cc:	ldr	x0, [x20]
  4098d0:	ldr	x1, [x20, #16]
  4098d4:	adds	x0, x0, #0x1
  4098d8:	csinc	x0, x0, xzr, ne  // ne = any
  4098dc:	adds	x1, x1, #0x1
  4098e0:	ccmp	x0, x1, #0x0, ne  // ne = any
  4098e4:	b.cs	4096a8 <ferror@plt+0x6868>  // b.hs, b.nlast
  4098e8:	mov	w2, #0x5                   	// #5
  4098ec:	adrp	x1, 413000 <_obstack_memory_used@@Base+0x1a28>
  4098f0:	add	x1, x1, #0x8c8
  4098f4:	mov	x0, #0x0                   	// #0
  4098f8:	bl	402d20 <dcgettext@plt>
  4098fc:	mov	x3, x23
  409900:	mov	x2, x0
  409904:	mov	w1, #0x0                   	// #0
  409908:	mov	w0, #0x0                   	// #0
  40990c:	bl	4027b0 <error@plt>
  409910:	b	4096a8 <ferror@plt+0x6868>
  409914:	ldr	x0, [sp, #128]
  409918:	cbnz	x0, 408594 <ferror@plt+0x5754>
  40991c:	mov	w27, #0x0                   	// #0
  409920:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409924:	ldr	x20, [x0, #2688]
  409928:	cbz	x20, 4095f4 <ferror@plt+0x67b4>
  40992c:	ldr	w21, [sp, #200]
  409930:	mov	x22, x20
  409934:	b	408704 <ferror@plt+0x58c4>
  409938:	ldr	x1, [sp, #152]
  40993c:	ldr	x1, [x1, #8]
  409940:	cbnz	x1, 407bec <ferror@plt+0x4dac>
  409944:	mov	x1, #0xffffffffffffffff    	// #-1
  409948:	ldr	x2, [sp, #152]
  40994c:	str	x1, [x2]
  409950:	cbz	x0, 407b14 <ferror@plt+0x4cd4>
  409954:	b	407bec <ferror@plt+0x4dac>
  409958:	stp	x29, x30, [sp, #-16]!
  40995c:	mov	x29, sp
  409960:	mov	w0, #0x1                   	// #1
  409964:	bl	407070 <ferror@plt+0x4230>
  409968:	ldp	x29, x30, [sp], #16
  40996c:	ret
  409970:	stp	x29, x30, [sp, #-96]!
  409974:	mov	x29, sp
  409978:	stp	x19, x20, [sp, #16]
  40997c:	stp	x23, x24, [sp, #48]
  409980:	stp	x25, x26, [sp, #64]
  409984:	stp	x27, x28, [sp, #80]
  409988:	mov	x25, x0
  40998c:	mov	x24, x1
  409990:	mov	x27, x2
  409994:	mov	x23, x3
  409998:	bl	402780 <strlen@plt>
  40999c:	ldr	x19, [x24]
  4099a0:	cbz	x19, 409a60 <ferror@plt+0x6c20>
  4099a4:	stp	x21, x22, [sp, #32]
  4099a8:	mov	x22, x0
  4099ac:	mov	x21, x27
  4099b0:	mov	w28, #0x0                   	// #0
  4099b4:	mov	x26, #0xffffffffffffffff    	// #-1
  4099b8:	mov	x20, #0x0                   	// #0
  4099bc:	b	4099e0 <ferror@plt+0x6ba0>
  4099c0:	mov	x26, x20
  4099c4:	ldp	x21, x22, [sp, #32]
  4099c8:	b	409a44 <ferror@plt+0x6c04>
  4099cc:	mov	x26, x20
  4099d0:	add	x20, x20, #0x1
  4099d4:	ldr	x19, [x24, x20, lsl #3]
  4099d8:	add	x21, x21, x23
  4099dc:	cbz	x19, 409a34 <ferror@plt+0x6bf4>
  4099e0:	mov	x2, x22
  4099e4:	mov	x1, x25
  4099e8:	mov	x0, x19
  4099ec:	bl	402940 <strncmp@plt>
  4099f0:	cbnz	w0, 4099d0 <ferror@plt+0x6b90>
  4099f4:	mov	x0, x19
  4099f8:	bl	402780 <strlen@plt>
  4099fc:	cmp	x0, x22
  409a00:	b.eq	4099c0 <ferror@plt+0x6b80>  // b.none
  409a04:	cmn	x26, #0x1
  409a08:	b.eq	4099cc <ferror@plt+0x6b8c>  // b.none
  409a0c:	cbz	x27, 409a2c <ferror@plt+0x6bec>
  409a10:	mov	x2, x23
  409a14:	mov	x1, x21
  409a18:	madd	x0, x26, x23, x27
  409a1c:	bl	402b00 <memcmp@plt>
  409a20:	cmp	w0, #0x0
  409a24:	csinc	w28, w28, wzr, eq  // eq = none
  409a28:	b	4099d0 <ferror@plt+0x6b90>
  409a2c:	mov	w28, #0x1                   	// #1
  409a30:	b	4099d0 <ferror@plt+0x6b90>
  409a34:	cmp	w28, #0x0
  409a38:	mov	x0, #0xfffffffffffffffe    	// #-2
  409a3c:	csel	x26, x26, x0, eq  // eq = none
  409a40:	ldp	x21, x22, [sp, #32]
  409a44:	mov	x0, x26
  409a48:	ldp	x19, x20, [sp, #16]
  409a4c:	ldp	x23, x24, [sp, #48]
  409a50:	ldp	x25, x26, [sp, #64]
  409a54:	ldp	x27, x28, [sp, #80]
  409a58:	ldp	x29, x30, [sp], #96
  409a5c:	ret
  409a60:	mov	x26, #0xffffffffffffffff    	// #-1
  409a64:	b	409a44 <ferror@plt+0x6c04>
  409a68:	stp	x29, x30, [sp, #-48]!
  409a6c:	mov	x29, sp
  409a70:	stp	x19, x20, [sp, #16]
  409a74:	str	x21, [sp, #32]
  409a78:	mov	x21, x0
  409a7c:	mov	x20, x1
  409a80:	cmn	x2, #0x1
  409a84:	b.eq	409ae8 <ferror@plt+0x6ca8>  // b.none
  409a88:	mov	w2, #0x5                   	// #5
  409a8c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  409a90:	add	x1, x1, #0x430
  409a94:	mov	x0, #0x0                   	// #0
  409a98:	bl	402d20 <dcgettext@plt>
  409a9c:	mov	x19, x0
  409aa0:	mov	x2, x20
  409aa4:	mov	w1, #0x8                   	// #8
  409aa8:	mov	w0, #0x0                   	// #0
  409aac:	bl	40e360 <ferror@plt+0xb520>
  409ab0:	mov	x20, x0
  409ab4:	mov	x1, x21
  409ab8:	mov	w0, #0x1                   	// #1
  409abc:	bl	40e674 <ferror@plt+0xb834>
  409ac0:	mov	x4, x0
  409ac4:	mov	x3, x20
  409ac8:	mov	x2, x19
  409acc:	mov	w1, #0x0                   	// #0
  409ad0:	mov	w0, #0x0                   	// #0
  409ad4:	bl	4027b0 <error@plt>
  409ad8:	ldp	x19, x20, [sp, #16]
  409adc:	ldr	x21, [sp, #32]
  409ae0:	ldp	x29, x30, [sp], #48
  409ae4:	ret
  409ae8:	mov	w2, #0x5                   	// #5
  409aec:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  409af0:	add	x1, x1, #0x410
  409af4:	mov	x0, #0x0                   	// #0
  409af8:	bl	402d20 <dcgettext@plt>
  409afc:	mov	x19, x0
  409b00:	b	409aa0 <ferror@plt+0x6c60>
  409b04:	stp	x29, x30, [sp, #-96]!
  409b08:	mov	x29, sp
  409b0c:	stp	x19, x20, [sp, #16]
  409b10:	stp	x21, x22, [sp, #32]
  409b14:	stp	x23, x24, [sp, #48]
  409b18:	mov	x24, x0
  409b1c:	mov	x20, x1
  409b20:	mov	x22, x2
  409b24:	mov	w2, #0x5                   	// #5
  409b28:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  409b2c:	add	x1, x1, #0x450
  409b30:	mov	x0, #0x0                   	// #0
  409b34:	bl	402d20 <dcgettext@plt>
  409b38:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  409b3c:	ldr	x1, [x1, #1328]
  409b40:	bl	402d30 <fputs_unlocked@plt>
  409b44:	ldr	x21, [x24]
  409b48:	cbz	x21, 409bec <ferror@plt+0x6dac>
  409b4c:	stp	x25, x26, [sp, #64]
  409b50:	stp	x27, x28, [sp, #80]
  409b54:	mov	x23, #0x0                   	// #0
  409b58:	mov	x19, #0x0                   	// #0
  409b5c:	adrp	x25, 428000 <_obstack_memory_used@@Base+0x16a28>
  409b60:	adrp	x26, 414000 <_obstack_memory_used@@Base+0x2a28>
  409b64:	add	x26, x26, #0x468
  409b68:	adrp	x27, 414000 <_obstack_memory_used@@Base+0x2a28>
  409b6c:	add	x27, x27, #0x470
  409b70:	b	409ba8 <ferror@plt+0x6d68>
  409b74:	ldr	x23, [x25, #1328]
  409b78:	mov	x0, x21
  409b7c:	bl	40e68c <ferror@plt+0xb84c>
  409b80:	mov	x3, x0
  409b84:	mov	x2, x26
  409b88:	mov	w1, #0x1                   	// #1
  409b8c:	mov	x0, x23
  409b90:	bl	402b30 <__fprintf_chk@plt>
  409b94:	mov	x23, x20
  409b98:	add	x19, x19, #0x1
  409b9c:	ldr	x21, [x24, x19, lsl #3]
  409ba0:	add	x20, x20, x22
  409ba4:	cbz	x21, 409be4 <ferror@plt+0x6da4>
  409ba8:	cbz	x19, 409b74 <ferror@plt+0x6d34>
  409bac:	mov	x2, x22
  409bb0:	mov	x1, x20
  409bb4:	mov	x0, x23
  409bb8:	bl	402b00 <memcmp@plt>
  409bbc:	cbnz	w0, 409b74 <ferror@plt+0x6d34>
  409bc0:	ldr	x28, [x25, #1328]
  409bc4:	mov	x0, x21
  409bc8:	bl	40e68c <ferror@plt+0xb84c>
  409bcc:	mov	x3, x0
  409bd0:	mov	x2, x27
  409bd4:	mov	w1, #0x1                   	// #1
  409bd8:	mov	x0, x28
  409bdc:	bl	402b30 <__fprintf_chk@plt>
  409be0:	b	409b98 <ferror@plt+0x6d58>
  409be4:	ldp	x25, x26, [sp, #64]
  409be8:	ldp	x27, x28, [sp, #80]
  409bec:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409bf0:	ldr	x0, [x0, #1328]
  409bf4:	ldr	x1, [x0, #40]
  409bf8:	ldr	x2, [x0, #48]
  409bfc:	cmp	x1, x2
  409c00:	b.cs	409c28 <ferror@plt+0x6de8>  // b.hs, b.nlast
  409c04:	add	x2, x1, #0x1
  409c08:	str	x2, [x0, #40]
  409c0c:	mov	w0, #0xa                   	// #10
  409c10:	strb	w0, [x1]
  409c14:	ldp	x19, x20, [sp, #16]
  409c18:	ldp	x21, x22, [sp, #32]
  409c1c:	ldp	x23, x24, [sp, #48]
  409c20:	ldp	x29, x30, [sp], #96
  409c24:	ret
  409c28:	mov	w1, #0xa                   	// #10
  409c2c:	bl	402ad0 <__overflow@plt>
  409c30:	b	409c14 <ferror@plt+0x6dd4>
  409c34:	stp	x29, x30, [sp, #-64]!
  409c38:	mov	x29, sp
  409c3c:	stp	x19, x20, [sp, #16]
  409c40:	stp	x21, x22, [sp, #32]
  409c44:	stp	x23, x24, [sp, #48]
  409c48:	mov	x23, x0
  409c4c:	mov	x22, x1
  409c50:	mov	x19, x2
  409c54:	mov	x20, x3
  409c58:	mov	x21, x4
  409c5c:	mov	x24, x5
  409c60:	mov	x3, x4
  409c64:	mov	x2, x20
  409c68:	mov	x1, x19
  409c6c:	mov	x0, x22
  409c70:	bl	409970 <ferror@plt+0x6b30>
  409c74:	tbnz	x0, #63, 409c8c <ferror@plt+0x6e4c>
  409c78:	ldp	x19, x20, [sp, #16]
  409c7c:	ldp	x21, x22, [sp, #32]
  409c80:	ldp	x23, x24, [sp, #48]
  409c84:	ldp	x29, x30, [sp], #64
  409c88:	ret
  409c8c:	mov	x2, x0
  409c90:	mov	x1, x22
  409c94:	mov	x0, x23
  409c98:	bl	409a68 <ferror@plt+0x6c28>
  409c9c:	mov	x2, x21
  409ca0:	mov	x1, x20
  409ca4:	mov	x0, x19
  409ca8:	bl	409b04 <ferror@plt+0x6cc4>
  409cac:	blr	x24
  409cb0:	mov	x0, #0xffffffffffffffff    	// #-1
  409cb4:	b	409c78 <ferror@plt+0x6e38>
  409cb8:	stp	x29, x30, [sp, #-64]!
  409cbc:	mov	x29, sp
  409cc0:	stp	x21, x22, [sp, #32]
  409cc4:	ldr	x22, [x1]
  409cc8:	cbz	x22, 409d18 <ferror@plt+0x6ed8>
  409ccc:	stp	x19, x20, [sp, #16]
  409cd0:	str	x23, [sp, #48]
  409cd4:	mov	x23, x0
  409cd8:	mov	x21, x3
  409cdc:	mov	x19, x2
  409ce0:	add	x20, x1, #0x8
  409ce4:	mov	x2, x21
  409ce8:	mov	x1, x19
  409cec:	mov	x0, x23
  409cf0:	bl	402b00 <memcmp@plt>
  409cf4:	cbz	w0, 409d10 <ferror@plt+0x6ed0>
  409cf8:	ldr	x22, [x20], #8
  409cfc:	add	x19, x19, x21
  409d00:	cbnz	x22, 409ce4 <ferror@plt+0x6ea4>
  409d04:	ldp	x19, x20, [sp, #16]
  409d08:	ldr	x23, [sp, #48]
  409d0c:	b	409d18 <ferror@plt+0x6ed8>
  409d10:	ldp	x19, x20, [sp, #16]
  409d14:	ldr	x23, [sp, #48]
  409d18:	mov	x0, x22
  409d1c:	ldp	x21, x22, [sp, #32]
  409d20:	ldp	x29, x30, [sp], #64
  409d24:	ret
  409d28:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  409d2c:	str	x0, [x1, #2976]
  409d30:	ret
  409d34:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  409d38:	strb	w0, [x1, #2984]
  409d3c:	ret
  409d40:	stp	x29, x30, [sp, #-48]!
  409d44:	mov	x29, sp
  409d48:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409d4c:	ldr	x0, [x0, #1352]
  409d50:	bl	411604 <_obstack_memory_used@@Base+0x2c>
  409d54:	cbz	w0, 409d74 <ferror@plt+0x6f34>
  409d58:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409d5c:	ldrb	w0, [x0, #2984]
  409d60:	cbz	w0, 409d8c <ferror@plt+0x6f4c>
  409d64:	bl	402db0 <__errno_location@plt>
  409d68:	ldr	w0, [x0]
  409d6c:	cmp	w0, #0x20
  409d70:	b.ne	409d8c <ferror@plt+0x6f4c>  // b.any
  409d74:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409d78:	ldr	x0, [x0, #1328]
  409d7c:	bl	411604 <_obstack_memory_used@@Base+0x2c>
  409d80:	cbnz	w0, 409e10 <ferror@plt+0x6fd0>
  409d84:	ldp	x29, x30, [sp], #48
  409d88:	ret
  409d8c:	stp	x19, x20, [sp, #16]
  409d90:	str	x21, [sp, #32]
  409d94:	mov	w2, #0x5                   	// #5
  409d98:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  409d9c:	add	x1, x1, #0x478
  409da0:	mov	x0, #0x0                   	// #0
  409da4:	bl	402d20 <dcgettext@plt>
  409da8:	mov	x19, x0
  409dac:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409db0:	ldr	x20, [x0, #2976]
  409db4:	cbz	x20, 409df0 <ferror@plt+0x6fb0>
  409db8:	bl	402db0 <__errno_location@plt>
  409dbc:	ldr	w21, [x0]
  409dc0:	mov	x0, x20
  409dc4:	bl	40e4bc <ferror@plt+0xb67c>
  409dc8:	mov	x4, x19
  409dcc:	mov	x3, x0
  409dd0:	adrp	x2, 412000 <_obstack_memory_used@@Base+0xa28>
  409dd4:	add	x2, x2, #0xd0
  409dd8:	mov	w1, w21
  409ddc:	mov	w0, #0x0                   	// #0
  409de0:	bl	4027b0 <error@plt>
  409de4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409de8:	ldr	w0, [x0, #1216]
  409dec:	bl	402750 <_exit@plt>
  409df0:	bl	402db0 <__errno_location@plt>
  409df4:	mov	x3, x19
  409df8:	adrp	x2, 412000 <_obstack_memory_used@@Base+0xa28>
  409dfc:	add	x2, x2, #0x250
  409e00:	ldr	w1, [x0]
  409e04:	mov	w0, #0x0                   	// #0
  409e08:	bl	4027b0 <error@plt>
  409e0c:	b	409de4 <ferror@plt+0x6fa4>
  409e10:	stp	x19, x20, [sp, #16]
  409e14:	str	x21, [sp, #32]
  409e18:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  409e1c:	ldr	w0, [x0, #1216]
  409e20:	bl	402750 <_exit@plt>
  409e24:	mov	w1, #0x2301                	// #8961
  409e28:	movk	w1, #0x6745, lsl #16
  409e2c:	str	w1, [x0]
  409e30:	mov	w1, #0xab89                	// #43913
  409e34:	movk	w1, #0xefcd, lsl #16
  409e38:	str	w1, [x0, #4]
  409e3c:	mov	w1, #0xdcfe                	// #56574
  409e40:	movk	w1, #0x98ba, lsl #16
  409e44:	str	w1, [x0, #8]
  409e48:	mov	w1, #0x5476                	// #21622
  409e4c:	movk	w1, #0x1032, lsl #16
  409e50:	str	w1, [x0, #12]
  409e54:	str	wzr, [x0, #20]
  409e58:	str	wzr, [x0, #16]
  409e5c:	str	wzr, [x0, #24]
  409e60:	ret
  409e64:	mov	x2, x0
  409e68:	mov	x0, x1
  409e6c:	ldr	w1, [x2]
  409e70:	str	w1, [x0]
  409e74:	ldr	w1, [x2, #4]
  409e78:	str	w1, [x0, #4]
  409e7c:	ldr	w1, [x2, #8]
  409e80:	str	w1, [x0, #8]
  409e84:	ldr	w1, [x2, #12]
  409e88:	str	w1, [x0, #12]
  409e8c:	ret
  409e90:	stp	x29, x30, [sp, #-96]!
  409e94:	mov	x29, sp
  409e98:	stp	x21, x22, [sp, #32]
  409e9c:	stp	x23, x24, [sp, #48]
  409ea0:	stp	x25, x26, [sp, #64]
  409ea4:	stp	x27, x28, [sp, #80]
  409ea8:	and	x27, x1, #0xfffffffffffffffc
  409eac:	add	x27, x0, x27
  409eb0:	ldr	w26, [x2]
  409eb4:	ldr	w22, [x2, #4]
  409eb8:	ldr	w24, [x2, #8]
  409ebc:	ldr	w25, [x2, #12]
  409ec0:	ldr	w4, [x2, #16]
  409ec4:	add	w4, w4, w1
  409ec8:	str	w4, [x2, #16]
  409ecc:	lsr	x5, x1, #32
  409ed0:	ldr	w3, [x2, #20]
  409ed4:	add	w3, w3, w5
  409ed8:	cmp	w4, w1
  409edc:	cinc	w1, w3, cc  // cc = lo, ul, last
  409ee0:	str	w1, [x2, #20]
  409ee4:	cmp	x0, x27
  409ee8:	b.cs	40a8c0 <ferror@plt+0x7a80>  // b.hs, b.nlast
  409eec:	stp	x19, x20, [sp, #16]
  409ef0:	mov	w28, #0xa478                	// #42104
  409ef4:	movk	w28, #0xd76a, lsl #16
  409ef8:	add	w3, w26, w28
  409efc:	mov	w1, #0xb756                	// #46934
  409f00:	movk	w1, #0xe8c7, lsl #16
  409f04:	add	w4, w25, w1
  409f08:	mov	w1, #0x70db                	// #28891
  409f0c:	movk	w1, #0x2420, lsl #16
  409f10:	add	w1, w24, w1
  409f14:	mov	w5, #0xceee                	// #52974
  409f18:	movk	w5, #0xc1bd, lsl #16
  409f1c:	add	w9, w22, w5
  409f20:	ldr	w8, [x0]
  409f24:	eor	w5, w24, w25
  409f28:	and	w5, w5, w22
  409f2c:	eor	w5, w5, w25
  409f30:	add	w5, w5, w8
  409f34:	add	w5, w5, w3
  409f38:	ror	w5, w5, #25
  409f3c:	add	w5, w5, w22
  409f40:	ldr	w7, [x0, #4]
  409f44:	eor	w3, w22, w24
  409f48:	and	w3, w3, w5
  409f4c:	eor	w3, w3, w24
  409f50:	add	w3, w3, w7
  409f54:	add	w3, w3, w4
  409f58:	ror	w3, w3, #20
  409f5c:	add	w3, w5, w3
  409f60:	ldr	w6, [x0, #8]
  409f64:	eor	w4, w5, w22
  409f68:	and	w4, w4, w3
  409f6c:	eor	w4, w4, w22
  409f70:	add	w4, w4, w6
  409f74:	add	w4, w4, w1
  409f78:	ror	w4, w4, #15
  409f7c:	add	w4, w3, w4
  409f80:	ldr	w14, [x0, #12]
  409f84:	eor	w1, w5, w3
  409f88:	and	w1, w1, w4
  409f8c:	eor	w1, w1, w5
  409f90:	add	w1, w1, w14
  409f94:	add	w1, w1, w9
  409f98:	ror	w1, w1, #10
  409f9c:	add	w1, w4, w1
  409fa0:	eor	w9, w3, w4
  409fa4:	and	w9, w9, w1
  409fa8:	eor	w9, w9, w3
  409fac:	add	w5, w9, w5
  409fb0:	ldr	w9, [x0, #16]
  409fb4:	mov	w10, #0xfaf                 	// #4015
  409fb8:	movk	w10, #0xf57c, lsl #16
  409fbc:	add	w10, w9, w10
  409fc0:	add	w5, w10, w5
  409fc4:	ror	w5, w5, #25
  409fc8:	add	w5, w1, w5
  409fcc:	eor	w10, w4, w1
  409fd0:	and	w10, w10, w5
  409fd4:	eor	w10, w10, w4
  409fd8:	add	w3, w10, w3
  409fdc:	ldr	w15, [x0, #20]
  409fe0:	mov	w10, #0xc62a                	// #50730
  409fe4:	movk	w10, #0x4787, lsl #16
  409fe8:	add	w10, w15, w10
  409fec:	add	w3, w10, w3
  409ff0:	ror	w3, w3, #20
  409ff4:	add	w3, w5, w3
  409ff8:	eor	w10, w1, w5
  409ffc:	and	w10, w10, w3
  40a000:	eor	w10, w10, w1
  40a004:	add	w4, w10, w4
  40a008:	ldr	w11, [x0, #24]
  40a00c:	mov	w10, #0x4613                	// #17939
  40a010:	movk	w10, #0xa830, lsl #16
  40a014:	add	w10, w11, w10
  40a018:	add	w4, w10, w4
  40a01c:	ror	w4, w4, #15
  40a020:	add	w4, w3, w4
  40a024:	eor	w10, w5, w3
  40a028:	and	w10, w10, w4
  40a02c:	eor	w10, w10, w5
  40a030:	add	w1, w10, w1
  40a034:	ldr	w17, [x0, #28]
  40a038:	mov	w10, #0x9501                	// #38145
  40a03c:	movk	w10, #0xfd46, lsl #16
  40a040:	add	w10, w17, w10
  40a044:	add	w1, w10, w1
  40a048:	ror	w1, w1, #10
  40a04c:	add	w1, w4, w1
  40a050:	eor	w23, w3, w4
  40a054:	and	w23, w23, w1
  40a058:	eor	w23, w23, w3
  40a05c:	add	w5, w23, w5
  40a060:	ldr	w20, [x0, #32]
  40a064:	mov	w10, #0x98d8                	// #39128
  40a068:	movk	w10, #0x6980, lsl #16
  40a06c:	add	w23, w20, w10
  40a070:	add	w5, w23, w5
  40a074:	ror	w23, w5, #25
  40a078:	add	w23, w1, w23
  40a07c:	eor	w10, w4, w1
  40a080:	and	w10, w10, w23
  40a084:	eor	w10, w10, w4
  40a088:	add	w3, w10, w3
  40a08c:	ldr	w5, [x0, #36]
  40a090:	mov	w10, #0xf7af                	// #63407
  40a094:	movk	w10, #0x8b44, lsl #16
  40a098:	add	w10, w5, w10
  40a09c:	add	w3, w10, w3
  40a0a0:	ror	w10, w3, #20
  40a0a4:	add	w10, w23, w10
  40a0a8:	eor	w16, w1, w23
  40a0ac:	and	w16, w16, w10
  40a0b0:	eor	w16, w16, w1
  40a0b4:	add	w4, w16, w4
  40a0b8:	ldr	w3, [x0, #40]
  40a0bc:	sub	w16, w3, #0xa, lsl #12
  40a0c0:	sub	w16, w16, #0x44f
  40a0c4:	add	w4, w16, w4
  40a0c8:	ror	w16, w4, #15
  40a0cc:	add	w16, w10, w16
  40a0d0:	eor	w12, w23, w10
  40a0d4:	and	w12, w12, w16
  40a0d8:	eor	w12, w12, w23
  40a0dc:	add	w1, w12, w1
  40a0e0:	ldr	w13, [x0, #44]
  40a0e4:	mov	w4, #0xd7be                	// #55230
  40a0e8:	movk	w4, #0x895c, lsl #16
  40a0ec:	add	w12, w13, w4
  40a0f0:	add	w1, w12, w1
  40a0f4:	ror	w12, w1, #10
  40a0f8:	add	w12, w16, w12
  40a0fc:	eor	w1, w10, w16
  40a100:	and	w1, w1, w12
  40a104:	eor	w1, w1, w10
  40a108:	add	w23, w1, w23
  40a10c:	ldr	w4, [x0, #48]
  40a110:	mov	w1, #0x1122                	// #4386
  40a114:	movk	w1, #0x6b90, lsl #16
  40a118:	add	w1, w4, w1
  40a11c:	add	w23, w1, w23
  40a120:	ror	w1, w23, #25
  40a124:	add	w1, w12, w1
  40a128:	eor	w19, w16, w12
  40a12c:	and	w19, w19, w1
  40a130:	eor	w19, w19, w16
  40a134:	add	w19, w19, w10
  40a138:	ldr	w10, [x0, #52]
  40a13c:	mov	w18, #0x7193                	// #29075
  40a140:	movk	w18, #0xfd98, lsl #16
  40a144:	add	w18, w10, w18
  40a148:	add	w19, w18, w19
  40a14c:	ror	w19, w19, #20
  40a150:	add	w19, w1, w19
  40a154:	eor	w21, w12, w1
  40a158:	and	w21, w21, w19
  40a15c:	eor	w21, w21, w12
  40a160:	add	w21, w21, w16
  40a164:	ldr	w16, [x0, #56]
  40a168:	mov	w18, #0x438e                	// #17294
  40a16c:	movk	w18, #0xa679, lsl #16
  40a170:	add	w18, w16, w18
  40a174:	add	w21, w18, w21
  40a178:	ror	w21, w21, #15
  40a17c:	add	w21, w19, w21
  40a180:	eor	w18, w1, w19
  40a184:	and	w18, w18, w21
  40a188:	eor	w18, w18, w1
  40a18c:	add	w18, w18, w12
  40a190:	ldr	w12, [x0, #60]
  40a194:	mov	w23, #0x821                 	// #2081
  40a198:	movk	w23, #0x49b4, lsl #16
  40a19c:	add	w23, w12, w23
  40a1a0:	add	w18, w23, w18
  40a1a4:	add	x0, x0, #0x40
  40a1a8:	ror	w18, w18, #10
  40a1ac:	add	w18, w21, w18
  40a1b0:	eor	w23, w21, w18
  40a1b4:	and	w23, w23, w19
  40a1b8:	eor	w23, w23, w21
  40a1bc:	add	w1, w23, w1
  40a1c0:	mov	w23, #0x2562                	// #9570
  40a1c4:	movk	w23, #0xf61e, lsl #16
  40a1c8:	add	w23, w7, w23
  40a1cc:	add	w1, w23, w1
  40a1d0:	ror	w1, w1, #27
  40a1d4:	add	w1, w18, w1
  40a1d8:	eor	w23, w18, w1
  40a1dc:	and	w23, w23, w21
  40a1e0:	eor	w23, w23, w18
  40a1e4:	add	w19, w23, w19
  40a1e8:	mov	w23, #0xb340                	// #45888
  40a1ec:	movk	w23, #0xc040, lsl #16
  40a1f0:	add	w23, w11, w23
  40a1f4:	add	w19, w23, w19
  40a1f8:	ror	w19, w19, #23
  40a1fc:	add	w19, w1, w19
  40a200:	eor	w23, w1, w19
  40a204:	and	w23, w23, w18
  40a208:	eor	w23, w23, w1
  40a20c:	add	w21, w23, w21
  40a210:	mov	w23, #0x5a51                	// #23121
  40a214:	movk	w23, #0x265e, lsl #16
  40a218:	add	w23, w13, w23
  40a21c:	add	w21, w23, w21
  40a220:	ror	w21, w21, #18
  40a224:	add	w21, w19, w21
  40a228:	eor	w23, w19, w21
  40a22c:	and	w23, w23, w1
  40a230:	eor	w23, w23, w19
  40a234:	add	w18, w23, w18
  40a238:	mov	w23, #0xc7aa                	// #51114
  40a23c:	movk	w23, #0xe9b6, lsl #16
  40a240:	add	w23, w8, w23
  40a244:	add	w18, w23, w18
  40a248:	ror	w18, w18, #12
  40a24c:	add	w18, w21, w18
  40a250:	eor	w23, w21, w18
  40a254:	and	w23, w23, w19
  40a258:	eor	w23, w23, w21
  40a25c:	add	w1, w23, w1
  40a260:	mov	w23, #0x105d                	// #4189
  40a264:	movk	w23, #0xd62f, lsl #16
  40a268:	add	w23, w15, w23
  40a26c:	add	w1, w23, w1
  40a270:	ror	w1, w1, #27
  40a274:	add	w1, w18, w1
  40a278:	eor	w23, w18, w1
  40a27c:	and	w23, w23, w21
  40a280:	eor	w23, w23, w18
  40a284:	add	w19, w23, w19
  40a288:	mov	w23, #0x1453                	// #5203
  40a28c:	movk	w23, #0x244, lsl #16
  40a290:	add	w23, w3, w23
  40a294:	add	w19, w23, w19
  40a298:	ror	w19, w19, #23
  40a29c:	add	w19, w1, w19
  40a2a0:	eor	w23, w1, w19
  40a2a4:	and	w23, w23, w18
  40a2a8:	eor	w23, w23, w1
  40a2ac:	add	w21, w23, w21
  40a2b0:	mov	w23, #0xe681                	// #59009
  40a2b4:	movk	w23, #0xd8a1, lsl #16
  40a2b8:	add	w23, w12, w23
  40a2bc:	add	w21, w23, w21
  40a2c0:	ror	w21, w21, #18
  40a2c4:	add	w21, w19, w21
  40a2c8:	eor	w23, w19, w21
  40a2cc:	and	w23, w23, w1
  40a2d0:	eor	w23, w23, w19
  40a2d4:	add	w18, w23, w18
  40a2d8:	mov	w23, #0xfbc8                	// #64456
  40a2dc:	movk	w23, #0xe7d3, lsl #16
  40a2e0:	add	w23, w9, w23
  40a2e4:	add	w18, w23, w18
  40a2e8:	ror	w18, w18, #12
  40a2ec:	add	w18, w21, w18
  40a2f0:	eor	w23, w21, w18
  40a2f4:	and	w23, w23, w19
  40a2f8:	eor	w23, w23, w21
  40a2fc:	add	w1, w23, w1
  40a300:	mov	w23, #0xcde6                	// #52710
  40a304:	movk	w23, #0x21e1, lsl #16
  40a308:	add	w23, w5, w23
  40a30c:	add	w1, w23, w1
  40a310:	ror	w1, w1, #27
  40a314:	add	w1, w18, w1
  40a318:	eor	w23, w18, w1
  40a31c:	and	w23, w23, w21
  40a320:	eor	w23, w23, w18
  40a324:	add	w19, w23, w19
  40a328:	mov	w23, #0x7d6                 	// #2006
  40a32c:	movk	w23, #0xc337, lsl #16
  40a330:	add	w23, w16, w23
  40a334:	add	w19, w23, w19
  40a338:	ror	w19, w19, #23
  40a33c:	add	w19, w1, w19
  40a340:	eor	w23, w1, w19
  40a344:	and	w23, w23, w18
  40a348:	eor	w23, w23, w1
  40a34c:	add	w23, w23, w21
  40a350:	mov	w21, #0xd87                 	// #3463
  40a354:	movk	w21, #0xf4d5, lsl #16
  40a358:	add	w21, w14, w21
  40a35c:	add	w21, w21, w23
  40a360:	ror	w21, w21, #18
  40a364:	add	w21, w19, w21
  40a368:	eor	w23, w19, w21
  40a36c:	and	w23, w23, w1
  40a370:	eor	w23, w23, w19
  40a374:	add	w23, w23, w18
  40a378:	mov	w18, #0x14ed                	// #5357
  40a37c:	movk	w18, #0x455a, lsl #16
  40a380:	add	w18, w20, w18
  40a384:	add	w18, w18, w23
  40a388:	ror	w18, w18, #12
  40a38c:	add	w18, w21, w18
  40a390:	eor	w23, w21, w18
  40a394:	and	w23, w23, w19
  40a398:	eor	w23, w23, w21
  40a39c:	add	w23, w23, w1
  40a3a0:	mov	w1, #0xe905                	// #59653
  40a3a4:	movk	w1, #0xa9e3, lsl #16
  40a3a8:	add	w1, w10, w1
  40a3ac:	add	w1, w1, w23
  40a3b0:	ror	w1, w1, #27
  40a3b4:	add	w1, w18, w1
  40a3b8:	eor	w23, w18, w1
  40a3bc:	and	w23, w23, w21
  40a3c0:	eor	w23, w23, w18
  40a3c4:	add	w23, w23, w19
  40a3c8:	mov	w19, #0xa3f8                	// #41976
  40a3cc:	movk	w19, #0xfcef, lsl #16
  40a3d0:	add	w19, w6, w19
  40a3d4:	add	w19, w19, w23
  40a3d8:	ror	w19, w19, #23
  40a3dc:	add	w19, w1, w19
  40a3e0:	eor	w23, w1, w19
  40a3e4:	and	w23, w23, w18
  40a3e8:	eor	w23, w23, w1
  40a3ec:	add	w21, w23, w21
  40a3f0:	mov	w23, #0x2d9                 	// #729
  40a3f4:	movk	w23, #0x676f, lsl #16
  40a3f8:	add	w23, w17, w23
  40a3fc:	add	w23, w23, w21
  40a400:	ror	w23, w23, #18
  40a404:	add	w23, w19, w23
  40a408:	eor	w30, w19, w23
  40a40c:	and	w21, w30, w1
  40a410:	eor	w21, w21, w19
  40a414:	add	w21, w21, w18
  40a418:	mov	w18, #0x4c8a                	// #19594
  40a41c:	movk	w18, #0x8d2a, lsl #16
  40a420:	add	w18, w4, w18
  40a424:	add	w18, w18, w21
  40a428:	ror	w18, w18, #12
  40a42c:	add	w18, w23, w18
  40a430:	eor	w30, w30, w18
  40a434:	add	w1, w30, w1
  40a438:	sub	w30, w15, #0x5c, lsl #12
  40a43c:	sub	w30, w30, #0x6be
  40a440:	add	w1, w30, w1
  40a444:	ror	w1, w1, #28
  40a448:	add	w1, w18, w1
  40a44c:	eor	w21, w23, w18
  40a450:	eor	w21, w21, w1
  40a454:	add	w21, w21, w19
  40a458:	mov	w19, #0xf681                	// #63105
  40a45c:	movk	w19, #0x8771, lsl #16
  40a460:	add	w19, w20, w19
  40a464:	add	w19, w19, w21
  40a468:	ror	w19, w19, #21
  40a46c:	add	w19, w1, w19
  40a470:	eor	w21, w18, w1
  40a474:	eor	w21, w21, w19
  40a478:	add	w21, w21, w23
  40a47c:	mov	w23, #0x6122                	// #24866
  40a480:	movk	w23, #0x6d9d, lsl #16
  40a484:	add	w23, w13, w23
  40a488:	add	w23, w23, w21
  40a48c:	ror	w23, w23, #16
  40a490:	add	w23, w19, w23
  40a494:	eor	w21, w1, w19
  40a498:	eor	w21, w21, w23
  40a49c:	add	w18, w21, w18
  40a4a0:	mov	w21, #0x380c                	// #14348
  40a4a4:	movk	w21, #0xfde5, lsl #16
  40a4a8:	add	w21, w16, w21
  40a4ac:	add	w21, w21, w18
  40a4b0:	ror	w21, w21, #9
  40a4b4:	add	w21, w23, w21
  40a4b8:	eor	w18, w19, w23
  40a4bc:	eor	w18, w18, w21
  40a4c0:	add	w18, w18, w1
  40a4c4:	mov	w1, #0xea44                	// #59972
  40a4c8:	movk	w1, #0xa4be, lsl #16
  40a4cc:	add	w1, w7, w1
  40a4d0:	add	w1, w1, w18
  40a4d4:	ror	w1, w1, #28
  40a4d8:	add	w1, w21, w1
  40a4dc:	eor	w18, w23, w21
  40a4e0:	eor	w18, w18, w1
  40a4e4:	add	w18, w18, w19
  40a4e8:	mov	w19, #0xcfa9                	// #53161
  40a4ec:	movk	w19, #0x4bde, lsl #16
  40a4f0:	add	w19, w9, w19
  40a4f4:	add	w19, w19, w18
  40a4f8:	ror	w19, w19, #21
  40a4fc:	add	w19, w1, w19
  40a500:	eor	w18, w21, w1
  40a504:	eor	w18, w18, w19
  40a508:	add	w23, w18, w23
  40a50c:	mov	w18, #0x4b60                	// #19296
  40a510:	movk	w18, #0xf6bb, lsl #16
  40a514:	add	w18, w17, w18
  40a518:	add	w18, w18, w23
  40a51c:	ror	w18, w18, #16
  40a520:	add	w18, w19, w18
  40a524:	eor	w23, w1, w19
  40a528:	eor	w23, w23, w18
  40a52c:	add	w23, w23, w21
  40a530:	mov	w21, #0xbc70                	// #48240
  40a534:	movk	w21, #0xbebf, lsl #16
  40a538:	add	w21, w3, w21
  40a53c:	add	w21, w21, w23
  40a540:	ror	w21, w21, #9
  40a544:	add	w21, w18, w21
  40a548:	eor	w23, w19, w18
  40a54c:	eor	w23, w23, w21
  40a550:	add	w23, w23, w1
  40a554:	mov	w1, #0x7ec6                	// #32454
  40a558:	movk	w1, #0x289b, lsl #16
  40a55c:	add	w1, w10, w1
  40a560:	add	w1, w1, w23
  40a564:	ror	w1, w1, #28
  40a568:	add	w1, w21, w1
  40a56c:	eor	w23, w18, w21
  40a570:	eor	w23, w23, w1
  40a574:	add	w23, w23, w19
  40a578:	mov	w19, #0x27fa                	// #10234
  40a57c:	movk	w19, #0xeaa1, lsl #16
  40a580:	add	w19, w8, w19
  40a584:	add	w19, w19, w23
  40a588:	ror	w19, w19, #21
  40a58c:	add	w19, w1, w19
  40a590:	eor	w23, w21, w1
  40a594:	eor	w23, w23, w19
  40a598:	add	w23, w23, w18
  40a59c:	mov	w18, #0x3085                	// #12421
  40a5a0:	movk	w18, #0xd4ef, lsl #16
  40a5a4:	add	w18, w14, w18
  40a5a8:	add	w18, w18, w23
  40a5ac:	ror	w18, w18, #16
  40a5b0:	add	w18, w19, w18
  40a5b4:	eor	w23, w1, w19
  40a5b8:	eor	w23, w23, w18
  40a5bc:	add	w23, w23, w21
  40a5c0:	mov	w21, #0x1d05                	// #7429
  40a5c4:	movk	w21, #0x488, lsl #16
  40a5c8:	add	w21, w11, w21
  40a5cc:	add	w21, w21, w23
  40a5d0:	ror	w21, w21, #9
  40a5d4:	add	w21, w18, w21
  40a5d8:	eor	w23, w19, w18
  40a5dc:	eor	w23, w23, w21
  40a5e0:	add	w23, w23, w1
  40a5e4:	mov	w1, #0xd039                	// #53305
  40a5e8:	movk	w1, #0xd9d4, lsl #16
  40a5ec:	add	w1, w5, w1
  40a5f0:	add	w1, w1, w23
  40a5f4:	ror	w1, w1, #28
  40a5f8:	add	w1, w21, w1
  40a5fc:	eor	w23, w18, w21
  40a600:	eor	w23, w23, w1
  40a604:	add	w23, w23, w19
  40a608:	mov	w19, #0x99e5                	// #39397
  40a60c:	movk	w19, #0xe6db, lsl #16
  40a610:	add	w19, w4, w19
  40a614:	add	w19, w19, w23
  40a618:	ror	w19, w19, #21
  40a61c:	add	w19, w1, w19
  40a620:	eor	w23, w21, w1
  40a624:	eor	w23, w23, w19
  40a628:	add	w23, w23, w18
  40a62c:	mov	w18, #0x7cf8                	// #31992
  40a630:	movk	w18, #0x1fa2, lsl #16
  40a634:	add	w18, w12, w18
  40a638:	add	w18, w18, w23
  40a63c:	ror	w18, w18, #16
  40a640:	add	w18, w19, w18
  40a644:	eor	w23, w1, w19
  40a648:	eor	w23, w23, w18
  40a64c:	add	w23, w23, w21
  40a650:	mov	w21, #0x5665                	// #22117
  40a654:	movk	w21, #0xc4ac, lsl #16
  40a658:	add	w21, w6, w21
  40a65c:	add	w21, w21, w23
  40a660:	ror	w21, w21, #9
  40a664:	add	w21, w18, w21
  40a668:	orn	w23, w21, w19
  40a66c:	eor	w23, w23, w18
  40a670:	add	w1, w23, w1
  40a674:	mov	w23, #0x2244                	// #8772
  40a678:	movk	w23, #0xf429, lsl #16
  40a67c:	add	w8, w8, w23
  40a680:	add	w8, w8, w1
  40a684:	ror	w8, w8, #26
  40a688:	add	w8, w21, w8
  40a68c:	orn	w1, w8, w18
  40a690:	eor	w1, w1, w21
  40a694:	add	w1, w1, w19
  40a698:	mov	w19, #0xff97                	// #65431
  40a69c:	movk	w19, #0x432a, lsl #16
  40a6a0:	add	w19, w17, w19
  40a6a4:	add	w19, w19, w1
  40a6a8:	ror	w19, w19, #22
  40a6ac:	add	w19, w8, w19
  40a6b0:	orn	w1, w19, w21
  40a6b4:	eor	w1, w1, w8
  40a6b8:	add	w1, w1, w18
  40a6bc:	mov	w18, #0x23a7                	// #9127
  40a6c0:	movk	w18, #0xab94, lsl #16
  40a6c4:	add	w18, w16, w18
  40a6c8:	add	w18, w18, w1
  40a6cc:	ror	w18, w18, #17
  40a6d0:	add	w18, w19, w18
  40a6d4:	orn	w17, w18, w8
  40a6d8:	eor	w17, w17, w19
  40a6dc:	add	w21, w17, w21
  40a6e0:	mov	w17, #0xa039                	// #41017
  40a6e4:	movk	w17, #0xfc93, lsl #16
  40a6e8:	add	w17, w15, w17
  40a6ec:	add	w17, w17, w21
  40a6f0:	ror	w17, w17, #11
  40a6f4:	add	w17, w18, w17
  40a6f8:	orn	w1, w17, w19
  40a6fc:	eor	w1, w1, w18
  40a700:	add	w8, w1, w8
  40a704:	mov	w1, #0x59c3                	// #22979
  40a708:	movk	w1, #0x655b, lsl #16
  40a70c:	add	w1, w4, w1
  40a710:	add	w1, w1, w8
  40a714:	ror	w1, w1, #26
  40a718:	add	w1, w17, w1
  40a71c:	orn	w16, w1, w18
  40a720:	eor	w16, w16, w17
  40a724:	add	w19, w16, w19
  40a728:	mov	w16, #0xcc92                	// #52370
  40a72c:	movk	w16, #0x8f0c, lsl #16
  40a730:	add	w16, w14, w16
  40a734:	add	w16, w16, w19
  40a738:	ror	w16, w16, #22
  40a73c:	add	w16, w1, w16
  40a740:	orn	w15, w16, w17
  40a744:	eor	w15, w15, w1
  40a748:	add	w18, w15, w18
  40a74c:	sub	w15, w3, #0x100, lsl #12
  40a750:	sub	w15, w15, #0xb83
  40a754:	add	w15, w15, w18
  40a758:	ror	w15, w15, #17
  40a75c:	add	w15, w16, w15
  40a760:	orn	w14, w15, w1
  40a764:	eor	w14, w14, w16
  40a768:	add	w17, w14, w17
  40a76c:	mov	w14, #0x5dd1                	// #24017
  40a770:	movk	w14, #0x8584, lsl #16
  40a774:	add	w14, w7, w14
  40a778:	add	w14, w14, w17
  40a77c:	ror	w14, w14, #11
  40a780:	add	w14, w15, w14
  40a784:	orn	w8, w14, w16
  40a788:	eor	w8, w8, w15
  40a78c:	add	w1, w8, w1
  40a790:	mov	w8, #0x7e4f                	// #32335
  40a794:	movk	w8, #0x6fa8, lsl #16
  40a798:	add	w8, w20, w8
  40a79c:	add	w8, w8, w1
  40a7a0:	ror	w8, w8, #26
  40a7a4:	add	w8, w14, w8
  40a7a8:	orn	w4, w8, w15
  40a7ac:	eor	w4, w4, w14
  40a7b0:	add	w16, w4, w16
  40a7b4:	mov	w4, #0xe6e0                	// #59104
  40a7b8:	movk	w4, #0xfe2c, lsl #16
  40a7bc:	add	w4, w12, w4
  40a7c0:	add	w4, w4, w16
  40a7c4:	ror	w4, w4, #22
  40a7c8:	add	w4, w8, w4
  40a7cc:	orn	w3, w4, w14
  40a7d0:	eor	w3, w3, w8
  40a7d4:	add	w15, w3, w15
  40a7d8:	mov	w3, #0x4314                	// #17172
  40a7dc:	movk	w3, #0xa301, lsl #16
  40a7e0:	add	w3, w11, w3
  40a7e4:	add	w3, w3, w15
  40a7e8:	ror	w3, w3, #17
  40a7ec:	add	w3, w4, w3
  40a7f0:	orn	w7, w3, w8
  40a7f4:	eor	w7, w7, w4
  40a7f8:	add	w14, w7, w14
  40a7fc:	mov	w7, #0x11a1                	// #4513
  40a800:	movk	w7, #0x4e08, lsl #16
  40a804:	add	w7, w10, w7
  40a808:	add	w7, w7, w14
  40a80c:	ror	w7, w7, #11
  40a810:	add	w7, w3, w7
  40a814:	orn	w1, w7, w4
  40a818:	eor	w1, w1, w3
  40a81c:	add	w8, w1, w8
  40a820:	mov	w1, #0x7e82                	// #32386
  40a824:	movk	w1, #0xf753, lsl #16
  40a828:	add	w1, w9, w1
  40a82c:	add	w1, w1, w8
  40a830:	ror	w1, w1, #26
  40a834:	add	w1, w7, w1
  40a838:	orn	w8, w1, w3
  40a83c:	eor	w8, w8, w7
  40a840:	add	w8, w8, w4
  40a844:	mov	w4, #0xf235                	// #62005
  40a848:	movk	w4, #0xbd3a, lsl #16
  40a84c:	add	w4, w13, w4
  40a850:	add	w4, w4, w8
  40a854:	ror	w4, w4, #22
  40a858:	add	w4, w1, w4
  40a85c:	orn	w8, w4, w7
  40a860:	eor	w8, w8, w1
  40a864:	add	w8, w8, w3
  40a868:	mov	w3, #0xd2bb                	// #53947
  40a86c:	movk	w3, #0x2ad7, lsl #16
  40a870:	add	w3, w6, w3
  40a874:	add	w3, w3, w8
  40a878:	ror	w3, w3, #17
  40a87c:	add	w3, w4, w3
  40a880:	orn	w6, w3, w1
  40a884:	eor	w6, w6, w4
  40a888:	add	w7, w6, w7
  40a88c:	mov	w6, #0xd391                	// #54161
  40a890:	movk	w6, #0xeb86, lsl #16
  40a894:	add	w5, w5, w6
  40a898:	add	w5, w5, w7
  40a89c:	ror	w5, w5, #11
  40a8a0:	add	w5, w3, w5
  40a8a4:	add	w26, w26, w1
  40a8a8:	add	w22, w22, w5
  40a8ac:	add	w24, w24, w3
  40a8b0:	add	w25, w25, w4
  40a8b4:	cmp	x27, x0
  40a8b8:	b.hi	409ef8 <ferror@plt+0x70b8>  // b.pmore
  40a8bc:	ldp	x19, x20, [sp, #16]
  40a8c0:	str	w26, [x2]
  40a8c4:	str	w22, [x2, #4]
  40a8c8:	str	w24, [x2, #8]
  40a8cc:	str	w25, [x2, #12]
  40a8d0:	ldp	x21, x22, [sp, #32]
  40a8d4:	ldp	x23, x24, [sp, #48]
  40a8d8:	ldp	x25, x26, [sp, #64]
  40a8dc:	ldp	x27, x28, [sp, #80]
  40a8e0:	ldp	x29, x30, [sp], #96
  40a8e4:	ret
  40a8e8:	stp	x29, x30, [sp, #-48]!
  40a8ec:	mov	x29, sp
  40a8f0:	stp	x19, x20, [sp, #16]
  40a8f4:	stp	x21, x22, [sp, #32]
  40a8f8:	mov	x19, x0
  40a8fc:	mov	x20, x1
  40a900:	ldr	w0, [x0, #24]
  40a904:	cmp	w0, #0x38
  40a908:	mov	x2, #0x10                  	// #16
  40a90c:	mov	x1, #0x20                  	// #32
  40a910:	csel	x2, x2, x1, cc  // cc = lo, ul, last
  40a914:	ldr	w3, [x19, #16]
  40a918:	add	w3, w0, w3
  40a91c:	str	w3, [x19, #16]
  40a920:	cmp	w3, w0
  40a924:	b.cs	40a934 <ferror@plt+0x7af4>  // b.hs, b.nlast
  40a928:	ldr	w1, [x19, #20]
  40a92c:	add	w1, w1, #0x1
  40a930:	str	w1, [x19, #20]
  40a934:	lsl	x21, x2, #2
  40a938:	add	x4, x19, x21
  40a93c:	lsl	w1, w3, #3
  40a940:	str	w1, [x4, #20]
  40a944:	ldr	w1, [x19, #20]
  40a948:	extr	w3, w1, w3, #29
  40a94c:	str	w3, [x4, #24]
  40a950:	add	x22, x19, #0x1c
  40a954:	mov	w0, w0
  40a958:	sub	x2, x2, #0x2
  40a95c:	lsl	x2, x2, #2
  40a960:	sub	x2, x2, x0
  40a964:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40a968:	add	x1, x1, #0x488
  40a96c:	add	x0, x22, x0
  40a970:	bl	402720 <memcpy@plt>
  40a974:	mov	x2, x19
  40a978:	mov	x1, x21
  40a97c:	mov	x0, x22
  40a980:	bl	409e90 <ferror@plt+0x7050>
  40a984:	mov	x1, x20
  40a988:	mov	x0, x19
  40a98c:	bl	409e64 <ferror@plt+0x7024>
  40a990:	ldp	x19, x20, [sp, #16]
  40a994:	ldp	x21, x22, [sp, #32]
  40a998:	ldp	x29, x30, [sp], #48
  40a99c:	ret
  40a9a0:	stp	x29, x30, [sp, #-80]!
  40a9a4:	mov	x29, sp
  40a9a8:	stp	x19, x20, [sp, #16]
  40a9ac:	stp	x21, x22, [sp, #32]
  40a9b0:	mov	x19, x0
  40a9b4:	mov	x22, x1
  40a9b8:	mov	x21, x2
  40a9bc:	ldr	w0, [x2, #24]
  40a9c0:	cbnz	w0, 40aa60 <ferror@plt+0x7c20>
  40a9c4:	cmp	x22, #0x3f
  40a9c8:	b.ls	40aa4c <ferror@plt+0x7c0c>  // b.plast
  40a9cc:	tst	x19, #0x3
  40a9d0:	b.eq	40aae8 <ferror@plt+0x7ca8>  // b.none
  40a9d4:	stp	x23, x24, [sp, #48]
  40a9d8:	cmp	x22, #0x40
  40a9dc:	b.ls	40ab0c <ferror@plt+0x7ccc>  // b.plast
  40a9e0:	str	x25, [sp, #64]
  40a9e4:	sub	x25, x22, #0x41
  40a9e8:	lsr	x25, x25, #6
  40a9ec:	add	x23, x25, #0x1
  40a9f0:	add	x23, x19, x23, lsl #6
  40a9f4:	add	x20, x21, #0x1c
  40a9f8:	mov	x24, #0x40                  	// #64
  40a9fc:	ldp	x0, x1, [x19]
  40aa00:	stp	x0, x1, [x20]
  40aa04:	ldp	x0, x1, [x19, #16]
  40aa08:	stp	x0, x1, [x20, #16]
  40aa0c:	ldp	x0, x1, [x19, #32]
  40aa10:	stp	x0, x1, [x20, #32]
  40aa14:	ldp	x0, x1, [x19, #48]
  40aa18:	stp	x0, x1, [x20, #48]
  40aa1c:	mov	x2, x21
  40aa20:	mov	x1, x24
  40aa24:	mov	x0, x20
  40aa28:	bl	409e90 <ferror@plt+0x7050>
  40aa2c:	add	x19, x19, #0x40
  40aa30:	cmp	x19, x23
  40aa34:	b.ne	40a9fc <ferror@plt+0x7bbc>  // b.any
  40aa38:	sub	x22, x22, #0x40
  40aa3c:	sub	x22, x22, x25, lsl #6
  40aa40:	mov	x19, x23
  40aa44:	ldp	x23, x24, [sp, #48]
  40aa48:	ldr	x25, [sp, #64]
  40aa4c:	cbnz	x22, 40ab08 <ferror@plt+0x7cc8>
  40aa50:	ldp	x19, x20, [sp, #16]
  40aa54:	ldp	x21, x22, [sp, #32]
  40aa58:	ldp	x29, x30, [sp], #80
  40aa5c:	ret
  40aa60:	stp	x23, x24, [sp, #48]
  40aa64:	mov	w23, w0
  40aa68:	mov	x20, #0x80                  	// #128
  40aa6c:	sub	x20, x20, x23
  40aa70:	cmp	x20, x1
  40aa74:	csel	x20, x20, x1, ls  // ls = plast
  40aa78:	add	x24, x2, #0x1c
  40aa7c:	mov	x2, x20
  40aa80:	mov	x1, x19
  40aa84:	add	x0, x24, x23
  40aa88:	bl	402720 <memcpy@plt>
  40aa8c:	ldr	w1, [x21, #24]
  40aa90:	add	w1, w1, w20
  40aa94:	str	w1, [x21, #24]
  40aa98:	cmp	w1, #0x40
  40aa9c:	b.hi	40aab0 <ferror@plt+0x7c70>  // b.pmore
  40aaa0:	add	x19, x19, x20
  40aaa4:	sub	x22, x22, x20
  40aaa8:	ldp	x23, x24, [sp, #48]
  40aaac:	b	40a9c4 <ferror@plt+0x7b84>
  40aab0:	mov	x2, x21
  40aab4:	and	x1, x1, #0xffffffc0
  40aab8:	mov	x0, x24
  40aabc:	bl	409e90 <ferror@plt+0x7050>
  40aac0:	ldr	w2, [x21, #24]
  40aac4:	and	w2, w2, #0x3f
  40aac8:	str	w2, [x21, #24]
  40aacc:	add	x0, x23, x20
  40aad0:	and	x1, x0, #0xffffffffffffffc0
  40aad4:	and	x2, x2, #0x3f
  40aad8:	add	x1, x24, x1
  40aadc:	mov	x0, x24
  40aae0:	bl	402720 <memcpy@plt>
  40aae4:	b	40aaa0 <ferror@plt+0x7c60>
  40aae8:	and	x20, x22, #0xffffffffffffffc0
  40aaec:	mov	x2, x21
  40aaf0:	mov	x1, x20
  40aaf4:	mov	x0, x19
  40aaf8:	bl	409e90 <ferror@plt+0x7050>
  40aafc:	add	x19, x19, x20
  40ab00:	and	x22, x22, #0x3f
  40ab04:	b	40aa4c <ferror@plt+0x7c0c>
  40ab08:	stp	x23, x24, [sp, #48]
  40ab0c:	ldr	w20, [x21, #24]
  40ab10:	add	x23, x21, #0x1c
  40ab14:	mov	x2, x22
  40ab18:	mov	x1, x19
  40ab1c:	add	x0, x23, x20
  40ab20:	bl	402720 <memcpy@plt>
  40ab24:	add	x22, x20, x22
  40ab28:	cmp	x22, #0x3f
  40ab2c:	b.hi	40ab3c <ferror@plt+0x7cfc>  // b.pmore
  40ab30:	str	w22, [x21, #24]
  40ab34:	ldp	x23, x24, [sp, #48]
  40ab38:	b	40aa50 <ferror@plt+0x7c10>
  40ab3c:	mov	x2, x21
  40ab40:	mov	x1, #0x40                  	// #64
  40ab44:	mov	x0, x23
  40ab48:	bl	409e90 <ferror@plt+0x7050>
  40ab4c:	sub	x22, x22, #0x40
  40ab50:	mov	x2, x22
  40ab54:	add	x1, x21, #0x5c
  40ab58:	mov	x0, x23
  40ab5c:	bl	402720 <memcpy@plt>
  40ab60:	b	40ab30 <ferror@plt+0x7cf0>
  40ab64:	stp	x29, x30, [sp, #-208]!
  40ab68:	mov	x29, sp
  40ab6c:	stp	x19, x20, [sp, #16]
  40ab70:	str	x21, [sp, #32]
  40ab74:	mov	x20, x0
  40ab78:	mov	x21, x1
  40ab7c:	mov	x19, x2
  40ab80:	add	x0, sp, #0x30
  40ab84:	bl	409e24 <ferror@plt+0x6fe4>
  40ab88:	add	x2, sp, #0x30
  40ab8c:	mov	x1, x21
  40ab90:	mov	x0, x20
  40ab94:	bl	40a9a0 <ferror@plt+0x7b60>
  40ab98:	mov	x1, x19
  40ab9c:	add	x0, sp, #0x30
  40aba0:	bl	40a8e8 <ferror@plt+0x7aa8>
  40aba4:	ldp	x19, x20, [sp, #16]
  40aba8:	ldr	x21, [sp, #32]
  40abac:	ldp	x29, x30, [sp], #208
  40abb0:	ret
  40abb4:	stp	x29, x30, [sp, #-224]!
  40abb8:	mov	x29, sp
  40abbc:	stp	x19, x20, [sp, #16]
  40abc0:	stp	x23, x24, [sp, #48]
  40abc4:	mov	x20, x0
  40abc8:	mov	x24, x1
  40abcc:	mov	x0, #0x8048                	// #32840
  40abd0:	bl	4028e0 <malloc@plt>
  40abd4:	cbz	x0, 40ac94 <ferror@plt+0x7e54>
  40abd8:	stp	x21, x22, [sp, #32]
  40abdc:	mov	x21, x0
  40abe0:	add	x0, sp, #0x40
  40abe4:	bl	409e24 <ferror@plt+0x6fe4>
  40abe8:	mov	x22, #0x8000                	// #32768
  40abec:	mov	x23, #0x1                   	// #1
  40abf0:	mov	x19, #0x0                   	// #0
  40abf4:	ldr	w2, [x20]
  40abf8:	tbnz	w2, #4, 40ac28 <ferror@plt+0x7de8>
  40abfc:	mov	x3, x20
  40ac00:	sub	x2, x22, x19
  40ac04:	mov	x1, x23
  40ac08:	add	x0, x21, x19
  40ac0c:	bl	402af0 <fread_unlocked@plt>
  40ac10:	add	x19, x19, x0
  40ac14:	cmp	x19, #0x8, lsl #12
  40ac18:	b.eq	40ac6c <ferror@plt+0x7e2c>  // b.none
  40ac1c:	cbnz	x0, 40abf4 <ferror@plt+0x7db4>
  40ac20:	ldr	w0, [x20]
  40ac24:	tbnz	w0, #5, 40ac58 <ferror@plt+0x7e18>
  40ac28:	cbnz	x19, 40ac80 <ferror@plt+0x7e40>
  40ac2c:	mov	x1, x24
  40ac30:	add	x0, sp, #0x40
  40ac34:	bl	40a8e8 <ferror@plt+0x7aa8>
  40ac38:	mov	x0, x21
  40ac3c:	bl	402ba0 <free@plt>
  40ac40:	mov	w0, #0x0                   	// #0
  40ac44:	ldp	x21, x22, [sp, #32]
  40ac48:	ldp	x19, x20, [sp, #16]
  40ac4c:	ldp	x23, x24, [sp, #48]
  40ac50:	ldp	x29, x30, [sp], #224
  40ac54:	ret
  40ac58:	mov	x0, x21
  40ac5c:	bl	402ba0 <free@plt>
  40ac60:	mov	w0, #0x1                   	// #1
  40ac64:	ldp	x21, x22, [sp, #32]
  40ac68:	b	40ac48 <ferror@plt+0x7e08>
  40ac6c:	add	x2, sp, #0x40
  40ac70:	mov	x1, x22
  40ac74:	mov	x0, x21
  40ac78:	bl	409e90 <ferror@plt+0x7050>
  40ac7c:	b	40abf0 <ferror@plt+0x7db0>
  40ac80:	add	x2, sp, #0x40
  40ac84:	mov	x1, x19
  40ac88:	mov	x0, x21
  40ac8c:	bl	40a9a0 <ferror@plt+0x7b60>
  40ac90:	b	40ac2c <ferror@plt+0x7dec>
  40ac94:	mov	w0, #0x1                   	// #1
  40ac98:	b	40ac48 <ferror@plt+0x7e08>
  40ac9c:	stp	x29, x30, [sp, #-16]!
  40aca0:	mov	x29, sp
  40aca4:	bl	402ab0 <posix_fadvise@plt>
  40aca8:	ldp	x29, x30, [sp], #16
  40acac:	ret
  40acb0:	cbz	x0, 40ace4 <ferror@plt+0x7ea4>
  40acb4:	stp	x29, x30, [sp, #-32]!
  40acb8:	mov	x29, sp
  40acbc:	str	x19, [sp, #16]
  40acc0:	mov	w19, w1
  40acc4:	bl	402880 <fileno@plt>
  40acc8:	mov	w3, w19
  40accc:	mov	x2, #0x0                   	// #0
  40acd0:	mov	x1, #0x0                   	// #0
  40acd4:	bl	402ab0 <posix_fadvise@plt>
  40acd8:	ldr	x19, [sp, #16]
  40acdc:	ldp	x29, x30, [sp], #32
  40ace0:	ret
  40ace4:	ret
  40ace8:	mov	x5, x0
  40acec:	ldr	x2, [x0]
  40acf0:	ldrb	w1, [x2]
  40acf4:	cbz	w1, 40adb4 <ferror@plt+0x7f74>
  40acf8:	mov	w3, #0x0                   	// #0
  40acfc:	mov	x0, #0x0                   	// #0
  40ad00:	mov	x7, #0x0                   	// #0
  40ad04:	mov	w8, #0x1                   	// #1
  40ad08:	mov	w6, #0x0                   	// #0
  40ad0c:	b	40ad2c <ferror@plt+0x7eec>
  40ad10:	mov	w3, w6
  40ad14:	cmp	w1, #0x41
  40ad18:	csel	x0, x0, x7, cs  // cs = hs, nlast
  40ad1c:	add	x2, x2, #0x1
  40ad20:	str	x2, [x5]
  40ad24:	ldrb	w1, [x2]
  40ad28:	cbz	w1, 40adb8 <ferror@plt+0x7f78>
  40ad2c:	cbz	w3, 40ad58 <ferror@plt+0x7f18>
  40ad30:	cmp	w1, #0x5a
  40ad34:	b.ls	40ad10 <ferror@plt+0x7ed0>  // b.plast
  40ad38:	sub	w4, w1, #0x61
  40ad3c:	and	w4, w4, #0xff
  40ad40:	mov	w3, w6
  40ad44:	cmp	w4, #0x19
  40ad48:	b.ls	40ad1c <ferror@plt+0x7edc>  // b.plast
  40ad4c:	cmp	w1, #0x7e
  40ad50:	csel	x0, x0, x7, eq  // eq = none
  40ad54:	b	40ad1c <ferror@plt+0x7edc>
  40ad58:	cmp	w1, #0x2e
  40ad5c:	b.eq	40ad84 <ferror@plt+0x7f44>  // b.none
  40ad60:	cmp	w1, #0x5a
  40ad64:	b.hi	40ad98 <ferror@plt+0x7f58>  // b.pmore
  40ad68:	cmp	w1, #0x40
  40ad6c:	b.hi	40ad1c <ferror@plt+0x7edc>  // b.pmore
  40ad70:	sub	w1, w1, #0x30
  40ad74:	and	w1, w1, #0xff
  40ad78:	cmp	w1, #0xa
  40ad7c:	csel	x0, x0, x7, cc  // cc = lo, ul, last
  40ad80:	b	40ad1c <ferror@plt+0x7edc>
  40ad84:	cmp	x0, #0x0
  40ad88:	csel	x1, x0, x2, ne  // ne = any
  40ad8c:	csel	w3, w8, w8, ne  // ne = any
  40ad90:	mov	x0, x1
  40ad94:	b	40ad1c <ferror@plt+0x7edc>
  40ad98:	sub	w4, w1, #0x61
  40ad9c:	and	w4, w4, #0xff
  40ada0:	cmp	w4, #0x19
  40ada4:	b.ls	40ad1c <ferror@plt+0x7edc>  // b.plast
  40ada8:	cmp	w1, #0x7e
  40adac:	csel	x0, x0, x7, eq  // eq = none
  40adb0:	b	40ad1c <ferror@plt+0x7edc>
  40adb4:	mov	x0, #0x0                   	// #0
  40adb8:	ret
  40adbc:	and	w1, w0, #0xff
  40adc0:	sub	w0, w1, #0x30
  40adc4:	cmp	w0, #0x9
  40adc8:	b.ls	40ae08 <ferror@plt+0x7fc8>  // b.plast
  40adcc:	mov	w0, w1
  40add0:	cmp	w1, #0x5a
  40add4:	b.hi	40ade8 <ferror@plt+0x7fa8>  // b.pmore
  40add8:	cmp	w1, #0x40
  40addc:	b.hi	40ae0c <ferror@plt+0x7fcc>  // b.pmore
  40ade0:	add	w0, w1, #0x100
  40ade4:	b	40ae0c <ferror@plt+0x7fcc>
  40ade8:	sub	w2, w1, #0x61
  40adec:	and	w2, w2, #0xff
  40adf0:	cmp	w2, #0x19
  40adf4:	b.ls	40ae0c <ferror@plt+0x7fcc>  // b.plast
  40adf8:	mov	w0, #0xffffffff            	// #-1
  40adfc:	cmp	w1, #0x7e
  40ae00:	b.eq	40ae0c <ferror@plt+0x7fcc>  // b.none
  40ae04:	b	40ade0 <ferror@plt+0x7fa0>
  40ae08:	mov	w0, #0x0                   	// #0
  40ae0c:	ret
  40ae10:	stp	x29, x30, [sp, #-128]!
  40ae14:	mov	x29, sp
  40ae18:	stp	x19, x20, [sp, #16]
  40ae1c:	stp	x21, x22, [sp, #32]
  40ae20:	mov	x20, x0
  40ae24:	mov	x21, x1
  40ae28:	bl	402b50 <strcmp@plt>
  40ae2c:	mov	w22, w0
  40ae30:	cbz	w0, 40b104 <ferror@plt+0x82c4>
  40ae34:	ldrb	w19, [x20]
  40ae38:	cbz	w19, 40b0f4 <ferror@plt+0x82b4>
  40ae3c:	stp	x23, x24, [sp, #48]
  40ae40:	ldrb	w23, [x21]
  40ae44:	cbz	w23, 40b0fc <ferror@plt+0x82bc>
  40ae48:	mov	x1, x20
  40ae4c:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40ae50:	add	x0, x0, #0x4c8
  40ae54:	bl	402b50 <strcmp@plt>
  40ae58:	cbz	w0, 40b118 <ferror@plt+0x82d8>
  40ae5c:	mov	x1, x21
  40ae60:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40ae64:	add	x0, x0, #0x4c8
  40ae68:	bl	402b50 <strcmp@plt>
  40ae6c:	cbz	w0, 40b124 <ferror@plt+0x82e4>
  40ae70:	mov	x1, x20
  40ae74:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40ae78:	add	x0, x0, #0x4d0
  40ae7c:	bl	402b50 <strcmp@plt>
  40ae80:	cbz	w0, 40b130 <ferror@plt+0x82f0>
  40ae84:	mov	x1, x21
  40ae88:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40ae8c:	add	x0, x0, #0x4d0
  40ae90:	bl	402b50 <strcmp@plt>
  40ae94:	cbz	w0, 40b13c <ferror@plt+0x82fc>
  40ae98:	cmp	w19, #0x2e
  40ae9c:	cset	w0, eq  // eq = none
  40aea0:	cmp	w23, #0x2e
  40aea4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40aea8:	b.ne	40b148 <ferror@plt+0x8308>  // b.any
  40aeac:	cmp	w23, #0x2e
  40aeb0:	cset	w1, eq  // eq = none
  40aeb4:	cmp	w19, #0x2e
  40aeb8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40aebc:	b.ne	40b154 <ferror@plt+0x8314>  // b.any
  40aec0:	stp	x25, x26, [sp, #64]
  40aec4:	stp	x27, x28, [sp, #80]
  40aec8:	cmp	w0, #0x0
  40aecc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40aed0:	b.ne	40af48 <ferror@plt+0x8108>  // b.any
  40aed4:	str	x20, [sp, #120]
  40aed8:	str	x21, [sp, #112]
  40aedc:	add	x0, sp, #0x78
  40aee0:	bl	40ace8 <ferror@plt+0x7ea8>
  40aee4:	mov	x19, x0
  40aee8:	add	x0, sp, #0x70
  40aeec:	bl	40ace8 <ferror@plt+0x7ea8>
  40aef0:	cmp	x19, #0x0
  40aef4:	ldr	x24, [sp, #120]
  40aef8:	csel	x24, x24, x19, eq  // eq = none
  40aefc:	sub	x24, x24, x20
  40af00:	cmp	x0, #0x0
  40af04:	ldr	x26, [sp, #112]
  40af08:	csel	x26, x26, x0, eq  // eq = none
  40af0c:	sub	x26, x26, x21
  40af10:	orr	x19, x19, x0
  40af14:	cmp	x19, #0x0
  40af18:	ccmp	x24, x26, #0x0, ne  // ne = any
  40af1c:	b.eq	40af54 <ferror@plt+0x8114>  // b.none
  40af20:	mov	x23, #0x0                   	// #0
  40af24:	mov	x25, #0x0                   	// #0
  40af28:	str	wzr, [sp, #108]
  40af2c:	cmp	x24, x25
  40af30:	ccmp	x26, x23, #0x2, ls  // ls = plast
  40af34:	b.ls	40b0e4 <ferror@plt+0x82a4>  // b.plast
  40af38:	mov	x19, x25
  40af3c:	sub	x25, x23, x25
  40af40:	add	x28, x21, x25
  40af44:	b	40afb0 <ferror@plt+0x8170>
  40af48:	add	x20, x20, #0x1
  40af4c:	add	x21, x21, #0x1
  40af50:	b	40aed4 <ferror@plt+0x8094>
  40af54:	mov	x2, x24
  40af58:	mov	x1, x21
  40af5c:	mov	x0, x20
  40af60:	bl	402940 <strncmp@plt>
  40af64:	cbnz	w0, 40af20 <ferror@plt+0x80e0>
  40af68:	ldr	x24, [sp, #120]
  40af6c:	sub	x24, x24, x20
  40af70:	ldr	x26, [sp, #112]
  40af74:	sub	x26, x26, x21
  40af78:	b	40af20 <ferror@plt+0x80e0>
  40af7c:	ldr	w27, [sp, #108]
  40af80:	b	40af9c <ferror@plt+0x815c>
  40af84:	ldrb	w0, [x20, x19]
  40af88:	bl	40adbc <ferror@plt+0x7f7c>
  40af8c:	mov	w27, w0
  40af90:	ldr	w0, [sp, #108]
  40af94:	cmp	x26, x23
  40af98:	b.eq	40afa4 <ferror@plt+0x8164>  // b.none
  40af9c:	ldrb	w0, [x28, x19]
  40afa0:	bl	40adbc <ferror@plt+0x7f7c>
  40afa4:	cmp	w0, w27
  40afa8:	b.ne	40affc <ferror@plt+0x81bc>  // b.any
  40afac:	add	x19, x19, #0x1
  40afb0:	add	x23, x19, x25
  40afb4:	cmp	x24, x19
  40afb8:	b.ls	40afcc <ferror@plt+0x818c>  // b.plast
  40afbc:	ldrb	w0, [x20, x19]
  40afc0:	sub	w0, w0, #0x30
  40afc4:	cmp	w0, #0x9
  40afc8:	b.hi	40af84 <ferror@plt+0x8144>  // b.pmore
  40afcc:	cmp	x26, x23
  40afd0:	b.ls	40b010 <ferror@plt+0x81d0>  // b.plast
  40afd4:	ldrb	w0, [x28, x19]
  40afd8:	sub	w0, w0, #0x30
  40afdc:	cmp	w0, #0x9
  40afe0:	b.ls	40b010 <ferror@plt+0x81d0>  // b.plast
  40afe4:	cmp	x24, x19
  40afe8:	b.eq	40af7c <ferror@plt+0x813c>  // b.none
  40afec:	ldrb	w0, [x20, x19]
  40aff0:	bl	40adbc <ferror@plt+0x7f7c>
  40aff4:	mov	w27, w0
  40aff8:	b	40af9c <ferror@plt+0x815c>
  40affc:	sub	w22, w27, w0
  40b000:	ldp	x23, x24, [sp, #48]
  40b004:	ldp	x25, x26, [sp, #64]
  40b008:	ldp	x27, x28, [sp, #80]
  40b00c:	b	40b104 <ferror@plt+0x82c4>
  40b010:	ldrb	w0, [x20, x19]
  40b014:	cmp	w0, #0x30
  40b018:	b.ne	40b02c <ferror@plt+0x81ec>  // b.any
  40b01c:	add	x19, x19, #0x1
  40b020:	ldrb	w0, [x20, x19]
  40b024:	cmp	w0, #0x30
  40b028:	b.eq	40b01c <ferror@plt+0x81dc>  // b.none
  40b02c:	ldrb	w0, [x21, x23]
  40b030:	cmp	w0, #0x30
  40b034:	b.ne	40b048 <ferror@plt+0x8208>  // b.any
  40b038:	add	x23, x23, #0x1
  40b03c:	ldrb	w0, [x21, x23]
  40b040:	cmp	w0, #0x30
  40b044:	b.eq	40b038 <ferror@plt+0x81f8>  // b.none
  40b048:	ldrb	w0, [x20, x19]
  40b04c:	sub	w1, w0, #0x30
  40b050:	mov	w3, #0x0                   	// #0
  40b054:	cmp	w1, #0x9
  40b058:	b.ls	40b080 <ferror@plt+0x8240>  // b.plast
  40b05c:	ldrb	w0, [x21, x23]
  40b060:	sub	w0, w0, #0x30
  40b064:	cmp	w0, #0x9
  40b068:	b.hi	40b0dc <ferror@plt+0x829c>  // b.pmore
  40b06c:	mov	w22, #0xffffffff            	// #-1
  40b070:	ldp	x23, x24, [sp, #48]
  40b074:	ldp	x25, x26, [sp, #64]
  40b078:	ldp	x27, x28, [sp, #80]
  40b07c:	b	40b104 <ferror@plt+0x82c4>
  40b080:	ldrb	w2, [x21, x23]
  40b084:	sub	w4, w2, #0x30
  40b088:	cmp	w4, #0x9
  40b08c:	b.hi	40b174 <ferror@plt+0x8334>  // b.pmore
  40b090:	sub	w0, w0, w2
  40b094:	cmp	w3, #0x0
  40b098:	csel	w3, w0, w3, eq  // eq = none
  40b09c:	add	x19, x19, #0x1
  40b0a0:	add	x23, x23, #0x1
  40b0a4:	ldrb	w0, [x20, x19]
  40b0a8:	sub	w1, w0, #0x30
  40b0ac:	cmp	w1, #0x9
  40b0b0:	b.ls	40b080 <ferror@plt+0x8240>  // b.plast
  40b0b4:	ldrb	w0, [x21, x23]
  40b0b8:	sub	w0, w0, #0x30
  40b0bc:	cmp	w0, #0x9
  40b0c0:	b.ls	40b160 <ferror@plt+0x8320>  // b.plast
  40b0c4:	cbz	w3, 40b0dc <ferror@plt+0x829c>
  40b0c8:	mov	w22, w3
  40b0cc:	ldp	x23, x24, [sp, #48]
  40b0d0:	ldp	x25, x26, [sp, #64]
  40b0d4:	ldp	x27, x28, [sp, #80]
  40b0d8:	b	40b104 <ferror@plt+0x82c4>
  40b0dc:	mov	x25, x19
  40b0e0:	b	40af2c <ferror@plt+0x80ec>
  40b0e4:	ldp	x23, x24, [sp, #48]
  40b0e8:	ldp	x25, x26, [sp, #64]
  40b0ec:	ldp	x27, x28, [sp, #80]
  40b0f0:	b	40b104 <ferror@plt+0x82c4>
  40b0f4:	mov	w22, #0xffffffff            	// #-1
  40b0f8:	b	40b104 <ferror@plt+0x82c4>
  40b0fc:	mov	w22, #0x1                   	// #1
  40b100:	ldp	x23, x24, [sp, #48]
  40b104:	mov	w0, w22
  40b108:	ldp	x19, x20, [sp, #16]
  40b10c:	ldp	x21, x22, [sp, #32]
  40b110:	ldp	x29, x30, [sp], #128
  40b114:	ret
  40b118:	mov	w22, #0xffffffff            	// #-1
  40b11c:	ldp	x23, x24, [sp, #48]
  40b120:	b	40b104 <ferror@plt+0x82c4>
  40b124:	mov	w22, #0x1                   	// #1
  40b128:	ldp	x23, x24, [sp, #48]
  40b12c:	b	40b104 <ferror@plt+0x82c4>
  40b130:	mov	w22, #0xffffffff            	// #-1
  40b134:	ldp	x23, x24, [sp, #48]
  40b138:	b	40b104 <ferror@plt+0x82c4>
  40b13c:	mov	w22, #0x1                   	// #1
  40b140:	ldp	x23, x24, [sp, #48]
  40b144:	b	40b104 <ferror@plt+0x82c4>
  40b148:	mov	w22, #0xffffffff            	// #-1
  40b14c:	ldp	x23, x24, [sp, #48]
  40b150:	b	40b104 <ferror@plt+0x82c4>
  40b154:	mov	w22, #0x1                   	// #1
  40b158:	ldp	x23, x24, [sp, #48]
  40b15c:	b	40b104 <ferror@plt+0x82c4>
  40b160:	mov	w22, #0xffffffff            	// #-1
  40b164:	ldp	x23, x24, [sp, #48]
  40b168:	ldp	x25, x26, [sp, #64]
  40b16c:	ldp	x27, x28, [sp, #80]
  40b170:	b	40b104 <ferror@plt+0x82c4>
  40b174:	cmp	w1, #0x9
  40b178:	b.hi	40b0c4 <ferror@plt+0x8284>  // b.pmore
  40b17c:	mov	w22, #0x1                   	// #1
  40b180:	ldp	x23, x24, [sp, #48]
  40b184:	ldp	x25, x26, [sp, #64]
  40b188:	ldp	x27, x28, [sp, #80]
  40b18c:	b	40b104 <ferror@plt+0x82c4>
  40b190:	stp	x29, x30, [sp, #-32]!
  40b194:	mov	x29, sp
  40b198:	mov	x1, #0x0                   	// #0
  40b19c:	bl	402e30 <setlocale@plt>
  40b1a0:	mov	w1, #0x1                   	// #1
  40b1a4:	cbz	x0, 40b1e0 <ferror@plt+0x83a0>
  40b1a8:	str	x19, [sp, #16]
  40b1ac:	mov	x19, x0
  40b1b0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40b1b4:	add	x1, x1, #0x4d8
  40b1b8:	bl	402b50 <strcmp@plt>
  40b1bc:	mov	w1, #0x0                   	// #0
  40b1c0:	cbz	w0, 40b1ec <ferror@plt+0x83ac>
  40b1c4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40b1c8:	add	x1, x1, #0x4e0
  40b1cc:	mov	x0, x19
  40b1d0:	bl	402b50 <strcmp@plt>
  40b1d4:	cmp	w0, #0x0
  40b1d8:	cset	w1, ne  // ne = any
  40b1dc:	ldr	x19, [sp, #16]
  40b1e0:	mov	w0, w1
  40b1e4:	ldp	x29, x30, [sp], #32
  40b1e8:	ret
  40b1ec:	ldr	x19, [sp, #16]
  40b1f0:	b	40b1e0 <ferror@plt+0x83a0>
  40b1f4:	ror	x2, x0, #3
  40b1f8:	udiv	x0, x2, x1
  40b1fc:	msub	x0, x0, x1, x2
  40b200:	ret
  40b204:	cmp	x1, x0
  40b208:	cset	w0, eq  // eq = none
  40b20c:	ret
  40b210:	mov	x1, x0
  40b214:	ldr	x2, [x0, #40]
  40b218:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40b21c:	add	x0, x0, #0x558
  40b220:	cmp	x2, x0
  40b224:	b.eq	40b2c4 <ferror@plt+0x8484>  // b.none
  40b228:	ldr	s0, [x2, #8]
  40b22c:	mov	w0, #0xcccd                	// #52429
  40b230:	movk	w0, #0x3dcc, lsl #16
  40b234:	fmov	s1, w0
  40b238:	fcmpe	s0, s1
  40b23c:	b.le	40b2a0 <ferror@plt+0x8460>
  40b240:	mov	w0, #0x6666                	// #26214
  40b244:	movk	w0, #0x3f66, lsl #16
  40b248:	fmov	s1, w0
  40b24c:	fcmpe	s0, s1
  40b250:	b.pl	40b2a0 <ferror@plt+0x8460>  // b.nfrst
  40b254:	mov	w0, #0xcccd                	// #52429
  40b258:	movk	w0, #0x3f8c, lsl #16
  40b25c:	fmov	s1, w0
  40b260:	ldr	s2, [x2, #12]
  40b264:	fcmpe	s2, s1
  40b268:	b.le	40b2a0 <ferror@plt+0x8460>
  40b26c:	ldr	s1, [x2]
  40b270:	fcmpe	s1, #0.0
  40b274:	b.lt	40b2a0 <ferror@plt+0x8460>  // b.tstop
  40b278:	mov	w0, #0xcccd                	// #52429
  40b27c:	movk	w0, #0x3dcc, lsl #16
  40b280:	fmov	s2, w0
  40b284:	fadd	s1, s1, s2
  40b288:	ldr	s2, [x2, #4]
  40b28c:	fcmpe	s1, s2
  40b290:	b.pl	40b2a0 <ferror@plt+0x8460>  // b.nfrst
  40b294:	fmov	s3, #1.000000000000000000e+00
  40b298:	fcmpe	s2, s3
  40b29c:	b.ls	40b2b4 <ferror@plt+0x8474>  // b.plast
  40b2a0:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40b2a4:	add	x0, x0, #0x558
  40b2a8:	str	x0, [x1, #40]
  40b2ac:	mov	w0, #0x0                   	// #0
  40b2b0:	ret
  40b2b4:	mov	w0, #0x1                   	// #1
  40b2b8:	fcmpe	s0, s1
  40b2bc:	b.le	40b2a0 <ferror@plt+0x8460>
  40b2c0:	b	40b2b0 <ferror@plt+0x8470>
  40b2c4:	mov	w0, #0x1                   	// #1
  40b2c8:	b	40b2b0 <ferror@plt+0x8470>
  40b2cc:	ldrb	w2, [x1, #16]
  40b2d0:	cbnz	w2, 40b2f8 <ferror@plt+0x84b8>
  40b2d4:	ucvtf	s0, x0
  40b2d8:	ldr	s1, [x1, #8]
  40b2dc:	fdiv	s0, s0, s1
  40b2e0:	mov	w0, #0x5f800000            	// #1602224128
  40b2e4:	fmov	s1, w0
  40b2e8:	mov	x0, #0x0                   	// #0
  40b2ec:	fcmpe	s0, s1
  40b2f0:	b.ge	40b3a0 <ferror@plt+0x8560>  // b.tcont
  40b2f4:	fcvtzu	x0, s0
  40b2f8:	cmp	x0, #0xa
  40b2fc:	mov	x1, #0xa                   	// #10
  40b300:	csel	x0, x0, x1, cs  // cs = hs, nlast
  40b304:	orr	x0, x0, #0x1
  40b308:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40b30c:	movk	x5, #0xaaab
  40b310:	cmn	x0, #0x1
  40b314:	b.ne	40b33c <ferror@plt+0x84fc>  // b.any
  40b318:	mov	x0, #0x0                   	// #0
  40b31c:	b	40b3a0 <ferror@plt+0x8560>
  40b320:	mov	x1, #0x3                   	// #3
  40b324:	udiv	x2, x0, x1
  40b328:	msub	x1, x2, x1, x0
  40b32c:	cbnz	x1, 40b388 <ferror@plt+0x8548>
  40b330:	add	x0, x0, #0x2
  40b334:	cmn	x0, #0x1
  40b338:	b.eq	40b3a4 <ferror@plt+0x8564>  // b.none
  40b33c:	cmp	x0, #0x9
  40b340:	b.ls	40b320 <ferror@plt+0x84e0>  // b.plast
  40b344:	umulh	x1, x0, x5
  40b348:	and	x2, x1, #0xfffffffffffffffe
  40b34c:	add	x1, x2, x1, lsr #1
  40b350:	cmp	x0, x1
  40b354:	b.eq	40b330 <ferror@plt+0x84f0>  // b.none
  40b358:	mov	x3, #0x10                  	// #16
  40b35c:	mov	x2, #0x9                   	// #9
  40b360:	mov	x1, #0x3                   	// #3
  40b364:	add	x2, x2, x3
  40b368:	add	x1, x1, #0x2
  40b36c:	cmp	x2, x0
  40b370:	b.cs	40b324 <ferror@plt+0x84e4>  // b.hs, b.nlast
  40b374:	add	x3, x3, #0x8
  40b378:	udiv	x4, x0, x1
  40b37c:	msub	x4, x4, x1, x0
  40b380:	cbnz	x4, 40b364 <ferror@plt+0x8524>
  40b384:	b	40b330 <ferror@plt+0x84f0>
  40b388:	cmp	xzr, x0, lsr #61
  40b38c:	cset	x1, ne  // ne = any
  40b390:	tst	x0, #0x1000000000000000
  40b394:	csinc	w1, w1, wzr, eq  // eq = none
  40b398:	cmp	w1, #0x0
  40b39c:	csel	x0, x0, xzr, eq  // eq = none
  40b3a0:	ret
  40b3a4:	mov	x0, #0x0                   	// #0
  40b3a8:	b	40b3a0 <ferror@plt+0x8560>
  40b3ac:	stp	x29, x30, [sp, #-32]!
  40b3b0:	mov	x29, sp
  40b3b4:	str	x19, [sp, #16]
  40b3b8:	mov	x19, x0
  40b3bc:	mov	x0, x1
  40b3c0:	ldr	x2, [x19, #48]
  40b3c4:	ldr	x1, [x19, #16]
  40b3c8:	blr	x2
  40b3cc:	ldr	x1, [x19, #16]
  40b3d0:	cmp	x1, x0
  40b3d4:	b.ls	40b3ec <ferror@plt+0x85ac>  // b.plast
  40b3d8:	ldr	x1, [x19]
  40b3dc:	add	x0, x1, x0, lsl #4
  40b3e0:	ldr	x19, [sp, #16]
  40b3e4:	ldp	x29, x30, [sp], #32
  40b3e8:	ret
  40b3ec:	bl	402a80 <abort@plt>
  40b3f0:	stp	x29, x30, [sp, #-80]!
  40b3f4:	mov	x29, sp
  40b3f8:	stp	x21, x22, [sp, #32]
  40b3fc:	stp	x23, x24, [sp, #48]
  40b400:	mov	x21, x0
  40b404:	ldr	x22, [x1]
  40b408:	ldr	x0, [x1, #8]
  40b40c:	cmp	x22, x0
  40b410:	b.cs	40b544 <ferror@plt+0x8704>  // b.hs, b.nlast
  40b414:	stp	x19, x20, [sp, #16]
  40b418:	str	x25, [sp, #64]
  40b41c:	mov	x23, x1
  40b420:	and	w24, w2, #0xff
  40b424:	mov	x25, #0x10                  	// #16
  40b428:	b	40b4e4 <ferror@plt+0x86a4>
  40b42c:	str	x20, [x0]
  40b430:	ldr	x0, [x21, #24]
  40b434:	add	x0, x0, #0x1
  40b438:	str	x0, [x21, #24]
  40b43c:	str	xzr, [x2]
  40b440:	ldr	x0, [x21, #72]
  40b444:	str	x0, [x2, #8]
  40b448:	str	x2, [x21, #72]
  40b44c:	cbz	x19, 40b480 <ferror@plt+0x8640>
  40b450:	ldr	x20, [x19]
  40b454:	mov	x1, x20
  40b458:	mov	x0, x21
  40b45c:	bl	40b3ac <ferror@plt+0x856c>
  40b460:	mov	x2, x19
  40b464:	ldr	x19, [x19, #8]
  40b468:	ldr	x1, [x0]
  40b46c:	cbz	x1, 40b42c <ferror@plt+0x85ec>
  40b470:	ldr	x1, [x0, #8]
  40b474:	str	x1, [x2, #8]
  40b478:	str	x2, [x0, #8]
  40b47c:	b	40b44c <ferror@plt+0x860c>
  40b480:	ldr	x20, [x22]
  40b484:	str	xzr, [x22, #8]
  40b488:	cbnz	w24, 40b4d4 <ferror@plt+0x8694>
  40b48c:	mov	x1, x20
  40b490:	mov	x0, x21
  40b494:	bl	40b3ac <ferror@plt+0x856c>
  40b498:	mov	x19, x0
  40b49c:	ldr	x0, [x0]
  40b4a0:	cbz	x0, 40b510 <ferror@plt+0x86d0>
  40b4a4:	ldr	x0, [x21, #72]
  40b4a8:	cbz	x0, 40b4f8 <ferror@plt+0x86b8>
  40b4ac:	ldr	x1, [x0, #8]
  40b4b0:	str	x1, [x21, #72]
  40b4b4:	str	x20, [x0]
  40b4b8:	ldr	x1, [x19, #8]
  40b4bc:	str	x1, [x0, #8]
  40b4c0:	str	x0, [x19, #8]
  40b4c4:	str	xzr, [x22]
  40b4c8:	ldr	x0, [x23, #24]
  40b4cc:	sub	x0, x0, #0x1
  40b4d0:	str	x0, [x23, #24]
  40b4d4:	add	x22, x22, #0x10
  40b4d8:	ldr	x0, [x23, #8]
  40b4dc:	cmp	x0, x22
  40b4e0:	b.ls	40b524 <ferror@plt+0x86e4>  // b.plast
  40b4e4:	ldr	x0, [x22]
  40b4e8:	cbz	x0, 40b4d4 <ferror@plt+0x8694>
  40b4ec:	ldr	x19, [x22, #8]
  40b4f0:	cbnz	x19, 40b450 <ferror@plt+0x8610>
  40b4f4:	b	40b480 <ferror@plt+0x8640>
  40b4f8:	mov	x0, x25
  40b4fc:	bl	4028e0 <malloc@plt>
  40b500:	cbnz	x0, 40b4b4 <ferror@plt+0x8674>
  40b504:	ldp	x19, x20, [sp, #16]
  40b508:	ldr	x25, [sp, #64]
  40b50c:	b	40b530 <ferror@plt+0x86f0>
  40b510:	str	x20, [x19]
  40b514:	ldr	x0, [x21, #24]
  40b518:	add	x0, x0, #0x1
  40b51c:	str	x0, [x21, #24]
  40b520:	b	40b4c4 <ferror@plt+0x8684>
  40b524:	mov	w24, #0x1                   	// #1
  40b528:	ldp	x19, x20, [sp, #16]
  40b52c:	ldr	x25, [sp, #64]
  40b530:	mov	w0, w24
  40b534:	ldp	x21, x22, [sp, #32]
  40b538:	ldp	x23, x24, [sp, #48]
  40b53c:	ldp	x29, x30, [sp], #80
  40b540:	ret
  40b544:	mov	w24, #0x1                   	// #1
  40b548:	b	40b530 <ferror@plt+0x86f0>
  40b54c:	stp	x29, x30, [sp, #-64]!
  40b550:	mov	x29, sp
  40b554:	stp	x19, x20, [sp, #16]
  40b558:	stp	x21, x22, [sp, #32]
  40b55c:	str	x23, [sp, #48]
  40b560:	mov	x21, x0
  40b564:	mov	x20, x1
  40b568:	mov	x22, x2
  40b56c:	and	w23, w3, #0xff
  40b570:	bl	40b3ac <ferror@plt+0x856c>
  40b574:	mov	x19, x0
  40b578:	str	x0, [x22]
  40b57c:	ldr	x0, [x0]
  40b580:	cbz	x0, 40b61c <ferror@plt+0x87dc>
  40b584:	cmp	x0, x20
  40b588:	b.eq	40b5dc <ferror@plt+0x879c>  // b.none
  40b58c:	ldr	x2, [x21, #56]
  40b590:	mov	x1, x0
  40b594:	mov	x0, x20
  40b598:	blr	x2
  40b59c:	and	w0, w0, #0xff
  40b5a0:	cbnz	w0, 40b5dc <ferror@plt+0x879c>
  40b5a4:	ldr	x0, [x19, #8]
  40b5a8:	cbz	x0, 40b61c <ferror@plt+0x87dc>
  40b5ac:	ldr	x1, [x0]
  40b5b0:	cmp	x1, x20
  40b5b4:	b.eq	40b610 <ferror@plt+0x87d0>  // b.none
  40b5b8:	ldr	x2, [x21, #56]
  40b5bc:	mov	x0, x20
  40b5c0:	blr	x2
  40b5c4:	and	w0, w0, #0xff
  40b5c8:	cbnz	w0, 40b610 <ferror@plt+0x87d0>
  40b5cc:	ldr	x19, [x19, #8]
  40b5d0:	ldr	x0, [x19, #8]
  40b5d4:	cbnz	x0, 40b5ac <ferror@plt+0x876c>
  40b5d8:	b	40b61c <ferror@plt+0x87dc>
  40b5dc:	ldr	x0, [x19]
  40b5e0:	cbz	w23, 40b61c <ferror@plt+0x87dc>
  40b5e4:	ldr	x1, [x19, #8]
  40b5e8:	cbz	x1, 40b608 <ferror@plt+0x87c8>
  40b5ec:	ldp	x2, x3, [x1]
  40b5f0:	stp	x2, x3, [x19]
  40b5f4:	str	xzr, [x1]
  40b5f8:	ldr	x2, [x21, #72]
  40b5fc:	str	x2, [x1, #8]
  40b600:	str	x1, [x21, #72]
  40b604:	b	40b61c <ferror@plt+0x87dc>
  40b608:	str	xzr, [x19]
  40b60c:	b	40b61c <ferror@plt+0x87dc>
  40b610:	ldr	x1, [x19, #8]
  40b614:	ldr	x0, [x1]
  40b618:	cbnz	w23, 40b630 <ferror@plt+0x87f0>
  40b61c:	ldp	x19, x20, [sp, #16]
  40b620:	ldp	x21, x22, [sp, #32]
  40b624:	ldr	x23, [sp, #48]
  40b628:	ldp	x29, x30, [sp], #64
  40b62c:	ret
  40b630:	ldr	x2, [x1, #8]
  40b634:	str	x2, [x19, #8]
  40b638:	str	xzr, [x1]
  40b63c:	ldr	x2, [x21, #72]
  40b640:	str	x2, [x1, #8]
  40b644:	str	x1, [x21, #72]
  40b648:	b	40b61c <ferror@plt+0x87dc>
  40b64c:	ldr	x0, [x0, #16]
  40b650:	ret
  40b654:	ldr	x0, [x0, #24]
  40b658:	ret
  40b65c:	ldr	x0, [x0, #32]
  40b660:	ret
  40b664:	ldr	x3, [x0]
  40b668:	ldr	x4, [x0, #8]
  40b66c:	cmp	x3, x4
  40b670:	b.cs	40b6b8 <ferror@plt+0x8878>  // b.hs, b.nlast
  40b674:	mov	x0, #0x0                   	// #0
  40b678:	b	40b694 <ferror@plt+0x8854>
  40b67c:	mov	x2, #0x1                   	// #1
  40b680:	cmp	x0, x2
  40b684:	csel	x0, x0, x2, cs  // cs = hs, nlast
  40b688:	add	x3, x3, #0x10
  40b68c:	cmp	x3, x4
  40b690:	b.cs	40b6bc <ferror@plt+0x887c>  // b.hs, b.nlast
  40b694:	ldr	x1, [x3]
  40b698:	cbz	x1, 40b688 <ferror@plt+0x8848>
  40b69c:	ldr	x1, [x3, #8]
  40b6a0:	cbz	x1, 40b67c <ferror@plt+0x883c>
  40b6a4:	mov	x2, #0x1                   	// #1
  40b6a8:	add	x2, x2, #0x1
  40b6ac:	ldr	x1, [x1, #8]
  40b6b0:	cbnz	x1, 40b6a8 <ferror@plt+0x8868>
  40b6b4:	b	40b680 <ferror@plt+0x8840>
  40b6b8:	mov	x0, #0x0                   	// #0
  40b6bc:	ret
  40b6c0:	mov	x6, x0
  40b6c4:	ldr	x3, [x0]
  40b6c8:	ldr	x4, [x0, #8]
  40b6cc:	cmp	x3, x4
  40b6d0:	b.cs	40b714 <ferror@plt+0x88d4>  // b.hs, b.nlast
  40b6d4:	mov	x2, #0x0                   	// #0
  40b6d8:	mov	x5, #0x0                   	// #0
  40b6dc:	b	40b6ec <ferror@plt+0x88ac>
  40b6e0:	add	x3, x3, #0x10
  40b6e4:	cmp	x3, x4
  40b6e8:	b.cs	40b71c <ferror@plt+0x88dc>  // b.hs, b.nlast
  40b6ec:	ldr	x1, [x3]
  40b6f0:	cbz	x1, 40b6e0 <ferror@plt+0x88a0>
  40b6f4:	add	x5, x5, #0x1
  40b6f8:	add	x2, x2, #0x1
  40b6fc:	ldr	x1, [x3, #8]
  40b700:	cbz	x1, 40b6e0 <ferror@plt+0x88a0>
  40b704:	add	x2, x2, #0x1
  40b708:	ldr	x1, [x1, #8]
  40b70c:	cbnz	x1, 40b704 <ferror@plt+0x88c4>
  40b710:	b	40b6e0 <ferror@plt+0x88a0>
  40b714:	mov	x2, #0x0                   	// #0
  40b718:	mov	x5, #0x0                   	// #0
  40b71c:	ldr	x1, [x6, #24]
  40b720:	mov	w0, #0x0                   	// #0
  40b724:	cmp	x1, x5
  40b728:	b.eq	40b730 <ferror@plt+0x88f0>  // b.none
  40b72c:	ret
  40b730:	ldr	x0, [x6, #32]
  40b734:	cmp	x0, x2
  40b738:	cset	w0, eq  // eq = none
  40b73c:	b	40b72c <ferror@plt+0x88ec>
  40b740:	stp	x29, x30, [sp, #-64]!
  40b744:	mov	x29, sp
  40b748:	stp	x19, x20, [sp, #16]
  40b74c:	stp	x21, x22, [sp, #32]
  40b750:	str	x23, [sp, #48]
  40b754:	mov	x20, x0
  40b758:	mov	x19, x1
  40b75c:	ldr	x21, [x0, #16]
  40b760:	ldr	x23, [x0, #24]
  40b764:	bl	40b664 <ferror@plt+0x8824>
  40b768:	mov	x22, x0
  40b76c:	ldr	x3, [x20, #32]
  40b770:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2a28>
  40b774:	add	x2, x2, #0x4e8
  40b778:	mov	w1, #0x1                   	// #1
  40b77c:	mov	x0, x19
  40b780:	bl	402b30 <__fprintf_chk@plt>
  40b784:	mov	x3, x21
  40b788:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2a28>
  40b78c:	add	x2, x2, #0x500
  40b790:	mov	w1, #0x1                   	// #1
  40b794:	mov	x0, x19
  40b798:	bl	402b30 <__fprintf_chk@plt>
  40b79c:	ucvtf	d1, x23
  40b7a0:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  40b7a4:	fmov	d0, x0
  40b7a8:	fmul	d1, d1, d0
  40b7ac:	ucvtf	d0, x21
  40b7b0:	fdiv	d0, d1, d0
  40b7b4:	mov	x3, x23
  40b7b8:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2a28>
  40b7bc:	add	x2, x2, #0x518
  40b7c0:	mov	w1, #0x1                   	// #1
  40b7c4:	mov	x0, x19
  40b7c8:	bl	402b30 <__fprintf_chk@plt>
  40b7cc:	mov	x3, x22
  40b7d0:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2a28>
  40b7d4:	add	x2, x2, #0x540
  40b7d8:	mov	w1, #0x1                   	// #1
  40b7dc:	mov	x0, x19
  40b7e0:	bl	402b30 <__fprintf_chk@plt>
  40b7e4:	ldp	x19, x20, [sp, #16]
  40b7e8:	ldp	x21, x22, [sp, #32]
  40b7ec:	ldr	x23, [sp, #48]
  40b7f0:	ldp	x29, x30, [sp], #64
  40b7f4:	ret
  40b7f8:	stp	x29, x30, [sp, #-48]!
  40b7fc:	mov	x29, sp
  40b800:	stp	x19, x20, [sp, #16]
  40b804:	str	x21, [sp, #32]
  40b808:	mov	x21, x0
  40b80c:	mov	x20, x1
  40b810:	bl	40b3ac <ferror@plt+0x856c>
  40b814:	mov	x19, x0
  40b818:	ldr	x0, [x0]
  40b81c:	cbz	x0, 40b864 <ferror@plt+0x8a24>
  40b820:	ldr	x1, [x19]
  40b824:	cmp	x1, x20
  40b828:	b.eq	40b84c <ferror@plt+0x8a0c>  // b.none
  40b82c:	ldr	x2, [x21, #56]
  40b830:	mov	x0, x20
  40b834:	blr	x2
  40b838:	and	w0, w0, #0xff
  40b83c:	cbnz	w0, 40b84c <ferror@plt+0x8a0c>
  40b840:	ldr	x19, [x19, #8]
  40b844:	cbnz	x19, 40b820 <ferror@plt+0x89e0>
  40b848:	b	40b850 <ferror@plt+0x8a10>
  40b84c:	ldr	x19, [x19]
  40b850:	mov	x0, x19
  40b854:	ldp	x19, x20, [sp, #16]
  40b858:	ldr	x21, [sp, #32]
  40b85c:	ldp	x29, x30, [sp], #48
  40b860:	ret
  40b864:	mov	x19, x0
  40b868:	b	40b850 <ferror@plt+0x8a10>
  40b86c:	ldr	x1, [x0, #32]
  40b870:	cbz	x1, 40b8a4 <ferror@plt+0x8a64>
  40b874:	ldr	x1, [x0]
  40b878:	ldr	x2, [x0, #8]
  40b87c:	cmp	x1, x2
  40b880:	b.cs	40b898 <ferror@plt+0x8a58>  // b.hs, b.nlast
  40b884:	ldr	x0, [x1]
  40b888:	cbnz	x0, 40b8a8 <ferror@plt+0x8a68>
  40b88c:	add	x1, x1, #0x10
  40b890:	cmp	x1, x2
  40b894:	b.cc	40b884 <ferror@plt+0x8a44>  // b.lo, b.ul, b.last
  40b898:	stp	x29, x30, [sp, #-16]!
  40b89c:	mov	x29, sp
  40b8a0:	bl	402a80 <abort@plt>
  40b8a4:	mov	x0, #0x0                   	// #0
  40b8a8:	ret
  40b8ac:	stp	x29, x30, [sp, #-32]!
  40b8b0:	mov	x29, sp
  40b8b4:	stp	x19, x20, [sp, #16]
  40b8b8:	mov	x20, x0
  40b8bc:	mov	x19, x1
  40b8c0:	bl	40b3ac <ferror@plt+0x856c>
  40b8c4:	mov	x3, x0
  40b8c8:	mov	x2, x0
  40b8cc:	b	40b8e0 <ferror@plt+0x8aa0>
  40b8d0:	ldr	x0, [x1]
  40b8d4:	b	40b914 <ferror@plt+0x8ad4>
  40b8d8:	ldr	x2, [x2, #8]
  40b8dc:	cbz	x2, 40b8f4 <ferror@plt+0x8ab4>
  40b8e0:	ldr	x4, [x2]
  40b8e4:	cmp	x4, x19
  40b8e8:	b.ne	40b8d8 <ferror@plt+0x8a98>  // b.any
  40b8ec:	ldr	x1, [x2, #8]
  40b8f0:	cbnz	x1, 40b8d0 <ferror@plt+0x8a90>
  40b8f4:	ldr	x1, [x20, #8]
  40b8f8:	add	x3, x3, #0x10
  40b8fc:	cmp	x1, x3
  40b900:	b.ls	40b910 <ferror@plt+0x8ad0>  // b.plast
  40b904:	ldr	x0, [x3]
  40b908:	cbz	x0, 40b8f8 <ferror@plt+0x8ab8>
  40b90c:	b	40b914 <ferror@plt+0x8ad4>
  40b910:	mov	x0, #0x0                   	// #0
  40b914:	ldp	x19, x20, [sp, #16]
  40b918:	ldp	x29, x30, [sp], #32
  40b91c:	ret
  40b920:	mov	x6, x0
  40b924:	ldr	x5, [x0]
  40b928:	ldr	x0, [x0, #8]
  40b92c:	cmp	x5, x0
  40b930:	b.cs	40b984 <ferror@plt+0x8b44>  // b.hs, b.nlast
  40b934:	mov	x0, #0x0                   	// #0
  40b938:	sub	x4, x1, #0x8
  40b93c:	b	40b950 <ferror@plt+0x8b10>
  40b940:	add	x5, x5, #0x10
  40b944:	ldr	x1, [x6, #8]
  40b948:	cmp	x1, x5
  40b94c:	b.ls	40b980 <ferror@plt+0x8b40>  // b.plast
  40b950:	ldr	x1, [x5]
  40b954:	cbz	x1, 40b940 <ferror@plt+0x8b00>
  40b958:	cmp	x2, x0
  40b95c:	b.ls	40b980 <ferror@plt+0x8b40>  // b.plast
  40b960:	mov	x1, x5
  40b964:	add	x0, x0, #0x1
  40b968:	ldr	x3, [x1]
  40b96c:	str	x3, [x4, x0, lsl #3]
  40b970:	ldr	x1, [x1, #8]
  40b974:	cbz	x1, 40b940 <ferror@plt+0x8b00>
  40b978:	cmp	x2, x0
  40b97c:	b.ne	40b964 <ferror@plt+0x8b24>  // b.any
  40b980:	ret
  40b984:	mov	x0, #0x0                   	// #0
  40b988:	b	40b980 <ferror@plt+0x8b40>
  40b98c:	stp	x29, x30, [sp, #-64]!
  40b990:	mov	x29, sp
  40b994:	stp	x19, x20, [sp, #16]
  40b998:	stp	x23, x24, [sp, #48]
  40b99c:	mov	x24, x0
  40b9a0:	ldr	x23, [x0]
  40b9a4:	ldr	x0, [x0, #8]
  40b9a8:	cmp	x23, x0
  40b9ac:	b.cs	40ba0c <ferror@plt+0x8bcc>  // b.hs, b.nlast
  40b9b0:	stp	x21, x22, [sp, #32]
  40b9b4:	mov	x21, x1
  40b9b8:	mov	x22, x2
  40b9bc:	mov	x20, #0x0                   	// #0
  40b9c0:	b	40b9d4 <ferror@plt+0x8b94>
  40b9c4:	add	x23, x23, #0x10
  40b9c8:	ldr	x0, [x24, #8]
  40b9cc:	cmp	x0, x23
  40b9d0:	b.ls	40ba04 <ferror@plt+0x8bc4>  // b.plast
  40b9d4:	ldr	x0, [x23]
  40b9d8:	cbz	x0, 40b9c4 <ferror@plt+0x8b84>
  40b9dc:	mov	x19, x23
  40b9e0:	mov	x1, x22
  40b9e4:	ldr	x0, [x19]
  40b9e8:	blr	x21
  40b9ec:	and	w0, w0, #0xff
  40b9f0:	cbz	w0, 40ba14 <ferror@plt+0x8bd4>
  40b9f4:	add	x20, x20, #0x1
  40b9f8:	ldr	x19, [x19, #8]
  40b9fc:	cbnz	x19, 40b9e0 <ferror@plt+0x8ba0>
  40ba00:	b	40b9c4 <ferror@plt+0x8b84>
  40ba04:	ldp	x21, x22, [sp, #32]
  40ba08:	b	40ba18 <ferror@plt+0x8bd8>
  40ba0c:	mov	x20, #0x0                   	// #0
  40ba10:	b	40ba18 <ferror@plt+0x8bd8>
  40ba14:	ldp	x21, x22, [sp, #32]
  40ba18:	mov	x0, x20
  40ba1c:	ldp	x19, x20, [sp, #16]
  40ba20:	ldp	x23, x24, [sp, #48]
  40ba24:	ldp	x29, x30, [sp], #64
  40ba28:	ret
  40ba2c:	mov	x4, x0
  40ba30:	ldrb	w2, [x0]
  40ba34:	cbz	w2, 40ba5c <ferror@plt+0x8c1c>
  40ba38:	mov	x0, #0x0                   	// #0
  40ba3c:	lsl	x3, x0, #5
  40ba40:	sub	x0, x3, x0
  40ba44:	add	x2, x0, w2, uxtb
  40ba48:	udiv	x0, x2, x1
  40ba4c:	msub	x0, x0, x1, x2
  40ba50:	ldrb	w2, [x4, #1]!
  40ba54:	cbnz	w2, 40ba3c <ferror@plt+0x8bfc>
  40ba58:	ret
  40ba5c:	mov	x0, #0x0                   	// #0
  40ba60:	b	40ba58 <ferror@plt+0x8c18>
  40ba64:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40ba68:	add	x1, x1, #0x558
  40ba6c:	ldp	x2, x3, [x1]
  40ba70:	stp	x2, x3, [x0]
  40ba74:	ldr	w1, [x1, #16]
  40ba78:	str	w1, [x0, #16]
  40ba7c:	ret
  40ba80:	stp	x29, x30, [sp, #-64]!
  40ba84:	mov	x29, sp
  40ba88:	stp	x19, x20, [sp, #16]
  40ba8c:	stp	x21, x22, [sp, #32]
  40ba90:	stp	x23, x24, [sp, #48]
  40ba94:	mov	x24, x0
  40ba98:	mov	x20, x1
  40ba9c:	mov	x23, x4
  40baa0:	adrp	x1, 40b000 <ferror@plt+0x81c0>
  40baa4:	add	x1, x1, #0x1f4
  40baa8:	cmp	x2, #0x0
  40baac:	csel	x22, x1, x2, eq  // eq = none
  40bab0:	adrp	x1, 40b000 <ferror@plt+0x81c0>
  40bab4:	add	x1, x1, #0x204
  40bab8:	cmp	x3, #0x0
  40babc:	csel	x21, x1, x3, eq  // eq = none
  40bac0:	mov	x0, #0x50                  	// #80
  40bac4:	bl	4028e0 <malloc@plt>
  40bac8:	mov	x19, x0
  40bacc:	cbz	x0, 40bb3c <ferror@plt+0x8cfc>
  40bad0:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40bad4:	add	x0, x0, #0x558
  40bad8:	cmp	x20, #0x0
  40badc:	csel	x20, x0, x20, eq  // eq = none
  40bae0:	str	x20, [x19, #40]
  40bae4:	mov	x0, x19
  40bae8:	bl	40b210 <ferror@plt+0x83d0>
  40baec:	and	w0, w0, #0xff
  40baf0:	cbz	w0, 40bb54 <ferror@plt+0x8d14>
  40baf4:	mov	x1, x20
  40baf8:	mov	x0, x24
  40bafc:	bl	40b2cc <ferror@plt+0x848c>
  40bb00:	mov	x20, x0
  40bb04:	str	x0, [x19, #16]
  40bb08:	cbz	x0, 40bb54 <ferror@plt+0x8d14>
  40bb0c:	mov	x1, #0x10                  	// #16
  40bb10:	bl	4029d0 <calloc@plt>
  40bb14:	str	x0, [x19]
  40bb18:	cbz	x0, 40bb54 <ferror@plt+0x8d14>
  40bb1c:	add	x20, x0, x20, lsl #4
  40bb20:	str	x20, [x19, #8]
  40bb24:	str	xzr, [x19, #24]
  40bb28:	str	xzr, [x19, #32]
  40bb2c:	str	x22, [x19, #48]
  40bb30:	str	x21, [x19, #56]
  40bb34:	str	x23, [x19, #64]
  40bb38:	str	xzr, [x19, #72]
  40bb3c:	mov	x0, x19
  40bb40:	ldp	x19, x20, [sp, #16]
  40bb44:	ldp	x21, x22, [sp, #32]
  40bb48:	ldp	x23, x24, [sp, #48]
  40bb4c:	ldp	x29, x30, [sp], #64
  40bb50:	ret
  40bb54:	mov	x0, x19
  40bb58:	bl	402ba0 <free@plt>
  40bb5c:	mov	x19, #0x0                   	// #0
  40bb60:	b	40bb3c <ferror@plt+0x8cfc>
  40bb64:	stp	x29, x30, [sp, #-48]!
  40bb68:	mov	x29, sp
  40bb6c:	stp	x19, x20, [sp, #16]
  40bb70:	str	x21, [sp, #32]
  40bb74:	mov	x20, x0
  40bb78:	ldr	x21, [x0]
  40bb7c:	ldr	x0, [x0, #8]
  40bb80:	cmp	x21, x0
  40bb84:	b.cc	40bbf8 <ferror@plt+0x8db8>  // b.lo, b.ul, b.last
  40bb88:	str	xzr, [x20, #24]
  40bb8c:	str	xzr, [x20, #32]
  40bb90:	ldp	x19, x20, [sp, #16]
  40bb94:	ldr	x21, [sp, #32]
  40bb98:	ldp	x29, x30, [sp], #48
  40bb9c:	ret
  40bba0:	str	xzr, [x19]
  40bba4:	ldr	x0, [x19, #8]
  40bba8:	ldr	x1, [x20, #72]
  40bbac:	str	x1, [x19, #8]
  40bbb0:	str	x19, [x20, #72]
  40bbb4:	cbz	x0, 40bbd0 <ferror@plt+0x8d90>
  40bbb8:	mov	x19, x0
  40bbbc:	ldr	x1, [x20, #64]
  40bbc0:	cbz	x1, 40bba0 <ferror@plt+0x8d60>
  40bbc4:	ldr	x0, [x19]
  40bbc8:	blr	x1
  40bbcc:	b	40bba0 <ferror@plt+0x8d60>
  40bbd0:	ldr	x1, [x20, #64]
  40bbd4:	cbz	x1, 40bbe0 <ferror@plt+0x8da0>
  40bbd8:	ldr	x0, [x21]
  40bbdc:	blr	x1
  40bbe0:	str	xzr, [x21]
  40bbe4:	str	xzr, [x21, #8]
  40bbe8:	add	x21, x21, #0x10
  40bbec:	ldr	x0, [x20, #8]
  40bbf0:	cmp	x0, x21
  40bbf4:	b.ls	40bb88 <ferror@plt+0x8d48>  // b.plast
  40bbf8:	ldr	x0, [x21]
  40bbfc:	cbz	x0, 40bbe8 <ferror@plt+0x8da8>
  40bc00:	ldr	x19, [x21, #8]
  40bc04:	cbnz	x19, 40bbbc <ferror@plt+0x8d7c>
  40bc08:	b	40bbd0 <ferror@plt+0x8d90>
  40bc0c:	stp	x29, x30, [sp, #-48]!
  40bc10:	mov	x29, sp
  40bc14:	stp	x19, x20, [sp, #16]
  40bc18:	str	x21, [sp, #32]
  40bc1c:	mov	x21, x0
  40bc20:	ldr	x0, [x0, #64]
  40bc24:	cbz	x0, 40bc78 <ferror@plt+0x8e38>
  40bc28:	ldr	x0, [x21, #32]
  40bc2c:	cbz	x0, 40bc78 <ferror@plt+0x8e38>
  40bc30:	ldr	x20, [x21]
  40bc34:	ldr	x0, [x21, #8]
  40bc38:	cmp	x20, x0
  40bc3c:	b.cc	40bc54 <ferror@plt+0x8e14>  // b.lo, b.ul, b.last
  40bc40:	b	40bc88 <ferror@plt+0x8e48>
  40bc44:	add	x20, x20, #0x10
  40bc48:	ldr	x0, [x21, #8]
  40bc4c:	cmp	x0, x20
  40bc50:	b.ls	40bc78 <ferror@plt+0x8e38>  // b.plast
  40bc54:	ldr	x0, [x20]
  40bc58:	cbz	x0, 40bc44 <ferror@plt+0x8e04>
  40bc5c:	mov	x19, x20
  40bc60:	ldr	x1, [x21, #64]
  40bc64:	ldr	x0, [x19]
  40bc68:	blr	x1
  40bc6c:	ldr	x19, [x19, #8]
  40bc70:	cbnz	x19, 40bc60 <ferror@plt+0x8e20>
  40bc74:	b	40bc44 <ferror@plt+0x8e04>
  40bc78:	ldr	x20, [x21]
  40bc7c:	ldr	x0, [x21, #8]
  40bc80:	cmp	x20, x0
  40bc84:	b.cc	40bcd0 <ferror@plt+0x8e90>  // b.lo, b.ul, b.last
  40bc88:	ldr	x19, [x21, #72]
  40bc8c:	cbz	x19, 40bca0 <ferror@plt+0x8e60>
  40bc90:	mov	x0, x19
  40bc94:	ldr	x19, [x19, #8]
  40bc98:	bl	402ba0 <free@plt>
  40bc9c:	cbnz	x19, 40bc90 <ferror@plt+0x8e50>
  40bca0:	ldr	x0, [x21]
  40bca4:	bl	402ba0 <free@plt>
  40bca8:	mov	x0, x21
  40bcac:	bl	402ba0 <free@plt>
  40bcb0:	ldp	x19, x20, [sp, #16]
  40bcb4:	ldr	x21, [sp, #32]
  40bcb8:	ldp	x29, x30, [sp], #48
  40bcbc:	ret
  40bcc0:	add	x20, x20, #0x10
  40bcc4:	ldr	x0, [x21, #8]
  40bcc8:	cmp	x0, x20
  40bccc:	b.ls	40bc88 <ferror@plt+0x8e48>  // b.plast
  40bcd0:	ldr	x19, [x20, #8]
  40bcd4:	cbz	x19, 40bcc0 <ferror@plt+0x8e80>
  40bcd8:	mov	x0, x19
  40bcdc:	ldr	x19, [x19, #8]
  40bce0:	bl	402ba0 <free@plt>
  40bce4:	cbnz	x19, 40bcd8 <ferror@plt+0x8e98>
  40bce8:	b	40bcc0 <ferror@plt+0x8e80>
  40bcec:	stp	x29, x30, [sp, #-128]!
  40bcf0:	mov	x29, sp
  40bcf4:	stp	x19, x20, [sp, #16]
  40bcf8:	str	x21, [sp, #32]
  40bcfc:	mov	x19, x0
  40bd00:	mov	x0, x1
  40bd04:	ldr	x21, [x19, #40]
  40bd08:	mov	x1, x21
  40bd0c:	bl	40b2cc <ferror@plt+0x848c>
  40bd10:	cbz	x0, 40be04 <ferror@plt+0x8fc4>
  40bd14:	mov	x20, x0
  40bd18:	ldr	x0, [x19, #16]
  40bd1c:	cmp	x0, x20
  40bd20:	b.eq	40be1c <ferror@plt+0x8fdc>  // b.none
  40bd24:	mov	x1, #0x10                  	// #16
  40bd28:	mov	x0, x20
  40bd2c:	bl	4029d0 <calloc@plt>
  40bd30:	str	x0, [sp, #48]
  40bd34:	cbz	x0, 40be24 <ferror@plt+0x8fe4>
  40bd38:	str	x20, [sp, #64]
  40bd3c:	add	x20, x0, x20, lsl #4
  40bd40:	str	x20, [sp, #56]
  40bd44:	str	xzr, [sp, #72]
  40bd48:	str	xzr, [sp, #80]
  40bd4c:	str	x21, [sp, #88]
  40bd50:	ldr	x0, [x19, #48]
  40bd54:	str	x0, [sp, #96]
  40bd58:	ldr	x0, [x19, #56]
  40bd5c:	str	x0, [sp, #104]
  40bd60:	ldr	x0, [x19, #64]
  40bd64:	str	x0, [sp, #112]
  40bd68:	ldr	x0, [x19, #72]
  40bd6c:	str	x0, [sp, #120]
  40bd70:	mov	w2, #0x0                   	// #0
  40bd74:	mov	x1, x19
  40bd78:	add	x0, sp, #0x30
  40bd7c:	bl	40b3f0 <ferror@plt+0x85b0>
  40bd80:	ands	w20, w0, #0xff
  40bd84:	b.ne	40bdcc <ferror@plt+0x8f8c>  // b.any
  40bd88:	ldr	x0, [sp, #120]
  40bd8c:	str	x0, [x19, #72]
  40bd90:	mov	w2, #0x1                   	// #1
  40bd94:	add	x1, sp, #0x30
  40bd98:	mov	x0, x19
  40bd9c:	bl	40b3f0 <ferror@plt+0x85b0>
  40bda0:	and	w0, w0, #0xff
  40bda4:	cbz	w0, 40be00 <ferror@plt+0x8fc0>
  40bda8:	mov	w2, #0x0                   	// #0
  40bdac:	add	x1, sp, #0x30
  40bdb0:	mov	x0, x19
  40bdb4:	bl	40b3f0 <ferror@plt+0x85b0>
  40bdb8:	and	w0, w0, #0xff
  40bdbc:	cbz	w0, 40be00 <ferror@plt+0x8fc0>
  40bdc0:	ldr	x0, [sp, #48]
  40bdc4:	bl	402ba0 <free@plt>
  40bdc8:	b	40be08 <ferror@plt+0x8fc8>
  40bdcc:	ldr	x0, [x19]
  40bdd0:	bl	402ba0 <free@plt>
  40bdd4:	ldr	x0, [sp, #48]
  40bdd8:	str	x0, [x19]
  40bddc:	ldr	x0, [sp, #56]
  40bde0:	str	x0, [x19, #8]
  40bde4:	ldr	x0, [sp, #64]
  40bde8:	str	x0, [x19, #16]
  40bdec:	ldr	x0, [sp, #72]
  40bdf0:	str	x0, [x19, #24]
  40bdf4:	ldr	x0, [sp, #120]
  40bdf8:	str	x0, [x19, #72]
  40bdfc:	b	40be08 <ferror@plt+0x8fc8>
  40be00:	bl	402a80 <abort@plt>
  40be04:	mov	w20, #0x0                   	// #0
  40be08:	mov	w0, w20
  40be0c:	ldp	x19, x20, [sp, #16]
  40be10:	ldr	x21, [sp, #32]
  40be14:	ldp	x29, x30, [sp], #128
  40be18:	ret
  40be1c:	mov	w20, #0x1                   	// #1
  40be20:	b	40be08 <ferror@plt+0x8fc8>
  40be24:	mov	w20, #0x0                   	// #0
  40be28:	b	40be08 <ferror@plt+0x8fc8>
  40be2c:	stp	x29, x30, [sp, #-64]!
  40be30:	mov	x29, sp
  40be34:	stp	x19, x20, [sp, #16]
  40be38:	str	x21, [sp, #32]
  40be3c:	cbz	x1, 40be7c <ferror@plt+0x903c>
  40be40:	mov	x19, x0
  40be44:	mov	x20, x1
  40be48:	mov	x21, x2
  40be4c:	mov	w3, #0x0                   	// #0
  40be50:	add	x2, sp, #0x38
  40be54:	bl	40b54c <ferror@plt+0x870c>
  40be58:	mov	x1, x0
  40be5c:	cbz	x0, 40be80 <ferror@plt+0x9040>
  40be60:	mov	w0, #0x0                   	// #0
  40be64:	cbz	x21, 40be6c <ferror@plt+0x902c>
  40be68:	str	x1, [x21]
  40be6c:	ldp	x19, x20, [sp, #16]
  40be70:	ldr	x21, [sp, #32]
  40be74:	ldp	x29, x30, [sp], #64
  40be78:	ret
  40be7c:	bl	402a80 <abort@plt>
  40be80:	ldr	x0, [x19, #24]
  40be84:	ucvtf	s1, x0
  40be88:	ldr	x1, [x19, #40]
  40be8c:	ldr	x0, [x19, #16]
  40be90:	ucvtf	s0, x0
  40be94:	ldr	s2, [x1, #8]
  40be98:	fmul	s0, s0, s2
  40be9c:	fcmpe	s1, s0
  40bea0:	b.gt	40bee8 <ferror@plt+0x90a8>
  40bea4:	ldr	x0, [sp, #56]
  40bea8:	ldr	x1, [x0]
  40beac:	cbz	x1, 40bf94 <ferror@plt+0x9154>
  40beb0:	ldr	x1, [x19, #72]
  40beb4:	cbz	x1, 40bf7c <ferror@plt+0x913c>
  40beb8:	ldr	x0, [x1, #8]
  40bebc:	str	x0, [x19, #72]
  40bec0:	str	x20, [x1]
  40bec4:	ldr	x0, [sp, #56]
  40bec8:	ldr	x2, [x0, #8]
  40becc:	str	x2, [x1, #8]
  40bed0:	str	x1, [x0, #8]
  40bed4:	ldr	x0, [x19, #32]
  40bed8:	add	x0, x0, #0x1
  40bedc:	str	x0, [x19, #32]
  40bee0:	mov	w0, #0x1                   	// #1
  40bee4:	b	40be6c <ferror@plt+0x902c>
  40bee8:	mov	x0, x19
  40beec:	bl	40b210 <ferror@plt+0x83d0>
  40bef0:	ldr	x1, [x19, #40]
  40bef4:	ldr	s2, [x1, #8]
  40bef8:	ldr	x0, [x19, #16]
  40befc:	ucvtf	s0, x0
  40bf00:	ldr	x0, [x19, #24]
  40bf04:	ucvtf	s1, x0
  40bf08:	fmul	s3, s2, s0
  40bf0c:	fcmpe	s1, s3
  40bf10:	b.le	40bea4 <ferror@plt+0x9064>
  40bf14:	ldrb	w0, [x1, #16]
  40bf18:	cbz	w0, 40bf6c <ferror@plt+0x912c>
  40bf1c:	ldr	s1, [x1, #12]
  40bf20:	fmul	s0, s0, s1
  40bf24:	mov	w0, #0x5f800000            	// #1602224128
  40bf28:	fmov	s1, w0
  40bf2c:	mov	w0, #0xffffffff            	// #-1
  40bf30:	fcmpe	s0, s1
  40bf34:	b.ge	40be6c <ferror@plt+0x902c>  // b.tcont
  40bf38:	fcvtzu	x1, s0
  40bf3c:	mov	x0, x19
  40bf40:	bl	40bcec <ferror@plt+0x8eac>
  40bf44:	and	w1, w0, #0xff
  40bf48:	mov	w0, #0xffffffff            	// #-1
  40bf4c:	cbz	w1, 40be6c <ferror@plt+0x902c>
  40bf50:	mov	w3, #0x0                   	// #0
  40bf54:	add	x2, sp, #0x38
  40bf58:	mov	x1, x20
  40bf5c:	mov	x0, x19
  40bf60:	bl	40b54c <ferror@plt+0x870c>
  40bf64:	cbz	x0, 40bea4 <ferror@plt+0x9064>
  40bf68:	bl	402a80 <abort@plt>
  40bf6c:	ldr	s1, [x1, #12]
  40bf70:	fmul	s0, s0, s1
  40bf74:	fmul	s0, s0, s2
  40bf78:	b	40bf24 <ferror@plt+0x90e4>
  40bf7c:	mov	x0, #0x10                  	// #16
  40bf80:	bl	4028e0 <malloc@plt>
  40bf84:	mov	x1, x0
  40bf88:	mov	w0, #0xffffffff            	// #-1
  40bf8c:	cbz	x1, 40be6c <ferror@plt+0x902c>
  40bf90:	b	40bec0 <ferror@plt+0x9080>
  40bf94:	str	x20, [x0]
  40bf98:	ldr	x0, [x19, #32]
  40bf9c:	add	x0, x0, #0x1
  40bfa0:	str	x0, [x19, #32]
  40bfa4:	ldr	x0, [x19, #24]
  40bfa8:	add	x0, x0, #0x1
  40bfac:	str	x0, [x19, #24]
  40bfb0:	mov	w0, #0x1                   	// #1
  40bfb4:	b	40be6c <ferror@plt+0x902c>
  40bfb8:	stp	x29, x30, [sp, #-48]!
  40bfbc:	mov	x29, sp
  40bfc0:	str	x19, [sp, #16]
  40bfc4:	mov	x19, x1
  40bfc8:	add	x2, sp, #0x28
  40bfcc:	bl	40be2c <ferror@plt+0x8fec>
  40bfd0:	cmn	w0, #0x1
  40bfd4:	b.eq	40bff0 <ferror@plt+0x91b0>  // b.none
  40bfd8:	cmp	w0, #0x0
  40bfdc:	ldr	x0, [sp, #40]
  40bfe0:	csel	x0, x0, x19, eq  // eq = none
  40bfe4:	ldr	x19, [sp, #16]
  40bfe8:	ldp	x29, x30, [sp], #48
  40bfec:	ret
  40bff0:	mov	x0, #0x0                   	// #0
  40bff4:	b	40bfe4 <ferror@plt+0x91a4>
  40bff8:	stp	x29, x30, [sp, #-64]!
  40bffc:	mov	x29, sp
  40c000:	stp	x19, x20, [sp, #16]
  40c004:	mov	x19, x0
  40c008:	mov	w3, #0x1                   	// #1
  40c00c:	add	x2, sp, #0x38
  40c010:	bl	40b54c <ferror@plt+0x870c>
  40c014:	mov	x20, x0
  40c018:	cbz	x0, 40c034 <ferror@plt+0x91f4>
  40c01c:	ldr	x0, [x19, #32]
  40c020:	sub	x0, x0, #0x1
  40c024:	str	x0, [x19, #32]
  40c028:	ldr	x0, [sp, #56]
  40c02c:	ldr	x0, [x0]
  40c030:	cbz	x0, 40c044 <ferror@plt+0x9204>
  40c034:	mov	x0, x20
  40c038:	ldp	x19, x20, [sp, #16]
  40c03c:	ldp	x29, x30, [sp], #64
  40c040:	ret
  40c044:	ldr	x0, [x19, #24]
  40c048:	sub	x0, x0, #0x1
  40c04c:	str	x0, [x19, #24]
  40c050:	ucvtf	s0, x0
  40c054:	ldr	x1, [x19, #40]
  40c058:	ldr	x0, [x19, #16]
  40c05c:	ucvtf	s1, x0
  40c060:	ldr	s2, [x1]
  40c064:	fmul	s1, s1, s2
  40c068:	fcmpe	s0, s1
  40c06c:	b.pl	40c034 <ferror@plt+0x91f4>  // b.nfrst
  40c070:	mov	x0, x19
  40c074:	bl	40b210 <ferror@plt+0x83d0>
  40c078:	ldr	x1, [x19, #40]
  40c07c:	ldr	x0, [x19, #16]
  40c080:	ucvtf	s0, x0
  40c084:	ldr	x0, [x19, #24]
  40c088:	ucvtf	s2, x0
  40c08c:	ldr	s1, [x1]
  40c090:	fmul	s1, s0, s1
  40c094:	fcmpe	s2, s1
  40c098:	b.pl	40c034 <ferror@plt+0x91f4>  // b.nfrst
  40c09c:	ldrb	w0, [x1, #16]
  40c0a0:	cbz	w0, 40c0e8 <ferror@plt+0x92a8>
  40c0a4:	ldr	s1, [x1, #4]
  40c0a8:	fmul	s0, s0, s1
  40c0ac:	fcvtzu	x1, s0
  40c0b0:	mov	x0, x19
  40c0b4:	bl	40bcec <ferror@plt+0x8eac>
  40c0b8:	and	w0, w0, #0xff
  40c0bc:	cbnz	w0, 40c034 <ferror@plt+0x91f4>
  40c0c0:	str	x21, [sp, #32]
  40c0c4:	ldr	x21, [x19, #72]
  40c0c8:	cbz	x21, 40c0dc <ferror@plt+0x929c>
  40c0cc:	mov	x0, x21
  40c0d0:	ldr	x21, [x21, #8]
  40c0d4:	bl	402ba0 <free@plt>
  40c0d8:	cbnz	x21, 40c0cc <ferror@plt+0x928c>
  40c0dc:	str	xzr, [x19, #72]
  40c0e0:	ldr	x21, [sp, #32]
  40c0e4:	b	40c034 <ferror@plt+0x91f4>
  40c0e8:	ldr	s1, [x1, #4]
  40c0ec:	fmul	s0, s0, s1
  40c0f0:	ldr	s1, [x1, #8]
  40c0f4:	fmul	s0, s0, s1
  40c0f8:	fcvtzu	x1, s0
  40c0fc:	b	40c0b0 <ferror@plt+0x9270>
  40c100:	mov	w0, #0x0                   	// #0
  40c104:	ret
  40c108:	stp	x29, x30, [sp, #-48]!
  40c10c:	mov	x29, sp
  40c110:	stp	x19, x20, [sp, #16]
  40c114:	str	x21, [sp, #32]
  40c118:	mov	x21, x0
  40c11c:	mov	x19, x1
  40c120:	mov	x0, #0x20                  	// #32
  40c124:	bl	40fe60 <ferror@plt+0xd020>
  40c128:	mov	x20, x0
  40c12c:	cmp	x19, #0x0
  40c130:	csinc	x19, x19, xzr, ne  // ne = any
  40c134:	cmp	xzr, x19, lsr #61
  40c138:	cset	x0, ne  // ne = any
  40c13c:	tst	x19, #0x1000000000000000
  40c140:	csinc	w0, w0, wzr, eq  // eq = none
  40c144:	cbnz	w0, 40c188 <ferror@plt+0x9348>
  40c148:	lsl	x0, x19, #3
  40c14c:	bl	40fe60 <ferror@plt+0xd020>
  40c150:	str	x0, [x20]
  40c154:	str	xzr, [x0]
  40c158:	str	x19, [x20, #8]
  40c15c:	str	xzr, [x20, #16]
  40c160:	adrp	x0, 40c000 <ferror@plt+0x91c0>
  40c164:	add	x0, x0, #0x100
  40c168:	cmp	x21, #0x0
  40c16c:	csel	x21, x0, x21, eq  // eq = none
  40c170:	str	x21, [x20, #24]
  40c174:	mov	x0, x20
  40c178:	ldp	x19, x20, [sp, #16]
  40c17c:	ldr	x21, [sp, #32]
  40c180:	ldp	x29, x30, [sp], #48
  40c184:	ret
  40c188:	bl	4100ec <ferror@plt+0xd2ac>
  40c18c:	stp	x29, x30, [sp, #-32]!
  40c190:	mov	x29, sp
  40c194:	str	x19, [sp, #16]
  40c198:	mov	x19, x0
  40c19c:	ldr	x0, [x0]
  40c1a0:	bl	402ba0 <free@plt>
  40c1a4:	mov	x0, x19
  40c1a8:	bl	402ba0 <free@plt>
  40c1ac:	ldr	x19, [sp, #16]
  40c1b0:	ldp	x29, x30, [sp], #32
  40c1b4:	ret
  40c1b8:	stp	x29, x30, [sp, #-64]!
  40c1bc:	mov	x29, sp
  40c1c0:	stp	x19, x20, [sp, #16]
  40c1c4:	stp	x21, x22, [sp, #32]
  40c1c8:	str	x23, [sp, #48]
  40c1cc:	mov	x19, x0
  40c1d0:	mov	x20, x1
  40c1d4:	ldr	x2, [x0, #8]
  40c1d8:	sub	x3, x2, #0x1
  40c1dc:	ldr	x0, [x0, #16]
  40c1e0:	cmp	x3, x0
  40c1e4:	b.ls	40c264 <ferror@plt+0x9424>  // b.plast
  40c1e8:	ldr	x1, [x19]
  40c1ec:	ldr	x0, [x19, #16]
  40c1f0:	add	x0, x0, #0x1
  40c1f4:	str	x0, [x19, #16]
  40c1f8:	str	x20, [x1, x0, lsl #3]
  40c1fc:	ldr	x21, [x19]
  40c200:	ldr	x20, [x19, #16]
  40c204:	ldr	x23, [x19, #24]
  40c208:	ldr	x22, [x21, x20, lsl #3]
  40c20c:	mov	x19, x20
  40c210:	cmp	x20, #0x1
  40c214:	b.eq	40c248 <ferror@plt+0x9408>  // b.none
  40c218:	mov	x19, x20
  40c21c:	lsr	x20, x20, #1
  40c220:	mov	x1, x22
  40c224:	ldr	x0, [x21, x20, lsl #3]
  40c228:	blr	x23
  40c22c:	cmp	w0, #0x0
  40c230:	b.gt	40c248 <ferror@plt+0x9408>
  40c234:	ldr	x0, [x21, x20, lsl #3]
  40c238:	str	x0, [x21, x19, lsl #3]
  40c23c:	cmp	x20, #0x1
  40c240:	b.ne	40c218 <ferror@plt+0x93d8>  // b.any
  40c244:	mov	x19, x20
  40c248:	str	x22, [x21, x19, lsl #3]
  40c24c:	mov	w0, #0x0                   	// #0
  40c250:	ldp	x19, x20, [sp, #16]
  40c254:	ldp	x21, x22, [sp, #32]
  40c258:	ldr	x23, [sp, #48]
  40c25c:	ldp	x29, x30, [sp], #64
  40c260:	ret
  40c264:	ldr	x0, [x19]
  40c268:	cbz	x0, 40c298 <ferror@plt+0x9458>
  40c26c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40c270:	movk	x1, #0xaaa, lsl #48
  40c274:	cmp	x2, x1
  40c278:	b.cs	40c2b4 <ferror@plt+0x9474>  // b.hs, b.nlast
  40c27c:	add	x1, x2, #0x1
  40c280:	add	x2, x1, x2, lsr #1
  40c284:	str	x2, [x19, #8]
  40c288:	lsl	x1, x2, #3
  40c28c:	bl	40fedc <ferror@plt+0xd09c>
  40c290:	str	x0, [x19]
  40c294:	b	40c1e8 <ferror@plt+0x93a8>
  40c298:	cbz	x2, 40c2b8 <ferror@plt+0x9478>
  40c29c:	cmp	xzr, x2, lsr #61
  40c2a0:	cset	x1, ne  // ne = any
  40c2a4:	tst	x2, #0x1000000000000000
  40c2a8:	csinc	w1, w1, wzr, eq  // eq = none
  40c2ac:	cbz	w1, 40c284 <ferror@plt+0x9444>
  40c2b0:	bl	4100ec <ferror@plt+0xd2ac>
  40c2b4:	bl	4100ec <ferror@plt+0xd2ac>
  40c2b8:	mov	x2, #0x10                  	// #16
  40c2bc:	b	40c284 <ferror@plt+0x9444>
  40c2c0:	stp	x29, x30, [sp, #-96]!
  40c2c4:	mov	x29, sp
  40c2c8:	stp	x25, x26, [sp, #64]
  40c2cc:	ldr	x1, [x0, #16]
  40c2d0:	mov	x26, #0x0                   	// #0
  40c2d4:	cbz	x1, 40c390 <ferror@plt+0x9550>
  40c2d8:	stp	x19, x20, [sp, #16]
  40c2dc:	stp	x21, x22, [sp, #32]
  40c2e0:	stp	x23, x24, [sp, #48]
  40c2e4:	str	x27, [sp, #80]
  40c2e8:	ldr	x2, [x0]
  40c2ec:	ldr	x26, [x2, #8]
  40c2f0:	sub	x3, x1, #0x1
  40c2f4:	str	x3, [x0, #16]
  40c2f8:	ldr	x1, [x2, x1, lsl #3]
  40c2fc:	str	x1, [x2, #8]
  40c300:	ldr	x20, [x0]
  40c304:	ldr	x22, [x0, #16]
  40c308:	ldr	x24, [x0, #24]
  40c30c:	ldr	x25, [x20, #8]
  40c310:	lsr	x27, x22, #1
  40c314:	cmp	x22, #0x1
  40c318:	b.ls	40c3a0 <ferror@plt+0x9560>  // b.plast
  40c31c:	mov	x21, #0x1                   	// #1
  40c320:	b	40c34c <ferror@plt+0x950c>
  40c324:	mov	x1, x25
  40c328:	ldr	x0, [x20, x19, lsl #3]
  40c32c:	blr	x24
  40c330:	cmp	w0, #0x0
  40c334:	b.le	40c37c <ferror@plt+0x953c>
  40c338:	ldr	x0, [x20, x19, lsl #3]
  40c33c:	str	x0, [x20, x21, lsl #3]
  40c340:	cmp	x27, x19
  40c344:	b.cc	40c378 <ferror@plt+0x9538>  // b.lo, b.ul, b.last
  40c348:	mov	x21, x19
  40c34c:	lsl	x19, x21, #1
  40c350:	cmp	x22, x21, lsl #1
  40c354:	b.ls	40c324 <ferror@plt+0x94e4>  // b.plast
  40c358:	add	x23, x19, #0x1
  40c35c:	lsl	x0, x21, #4
  40c360:	ldr	x1, [x20, x23, lsl #3]
  40c364:	ldr	x0, [x20, x0]
  40c368:	blr	x24
  40c36c:	cmp	w0, #0x0
  40c370:	csel	x19, x19, x23, ge  // ge = tcont
  40c374:	b	40c324 <ferror@plt+0x94e4>
  40c378:	mov	x21, x19
  40c37c:	str	x25, [x20, x21, lsl #3]
  40c380:	ldp	x19, x20, [sp, #16]
  40c384:	ldp	x21, x22, [sp, #32]
  40c388:	ldp	x23, x24, [sp, #48]
  40c38c:	ldr	x27, [sp, #80]
  40c390:	mov	x0, x26
  40c394:	ldp	x25, x26, [sp, #64]
  40c398:	ldp	x29, x30, [sp], #96
  40c39c:	ret
  40c3a0:	mov	x21, #0x1                   	// #1
  40c3a4:	b	40c37c <ferror@plt+0x953c>
  40c3a8:	mov	w2, w0
  40c3ac:	add	x0, x1, #0xb
  40c3b0:	strb	wzr, [x1, #11]
  40c3b4:	mov	w4, #0x6667                	// #26215
  40c3b8:	movk	w4, #0x6666, lsl #16
  40c3bc:	tbnz	w2, #31, 40c3e8 <ferror@plt+0x95a8>
  40c3c0:	smull	x1, w2, w4
  40c3c4:	asr	x1, x1, #34
  40c3c8:	sub	w1, w1, w2, asr #31
  40c3cc:	add	w3, w1, w1, lsl #2
  40c3d0:	sub	w2, w2, w3, lsl #1
  40c3d4:	add	w2, w2, #0x30
  40c3d8:	strb	w2, [x0, #-1]!
  40c3dc:	mov	w2, w1
  40c3e0:	cbnz	w1, 40c3c0 <ferror@plt+0x9580>
  40c3e4:	ret
  40c3e8:	mov	w6, w4
  40c3ec:	mov	w5, #0x30                  	// #48
  40c3f0:	mov	x4, x0
  40c3f4:	smull	x1, w2, w6
  40c3f8:	asr	x1, x1, #34
  40c3fc:	sub	w1, w1, w2, asr #31
  40c400:	add	w3, w1, w1, lsl #2
  40c404:	sub	w2, w2, w3, lsl #1
  40c408:	sub	w2, w5, w2
  40c40c:	strb	w2, [x0, #-1]!
  40c410:	mov	w2, w1
  40c414:	cbnz	w1, 40c3f0 <ferror@plt+0x95b0>
  40c418:	mov	w1, #0x2d                  	// #45
  40c41c:	sturb	w1, [x0, #-1]
  40c420:	sub	x0, x4, #0x2
  40c424:	b	40c3e4 <ferror@plt+0x95a4>
  40c428:	mov	w3, w0
  40c42c:	add	x0, x1, #0xa
  40c430:	strb	wzr, [x1, #10]
  40c434:	mov	w4, #0xcccd                	// #52429
  40c438:	movk	w4, #0xcccc, lsl #16
  40c43c:	umull	x1, w3, w4
  40c440:	lsr	x1, x1, #35
  40c444:	add	w2, w1, w1, lsl #2
  40c448:	sub	w2, w3, w2, lsl #1
  40c44c:	add	w2, w2, #0x30
  40c450:	strb	w2, [x0, #-1]!
  40c454:	mov	w2, w3
  40c458:	mov	w3, w1
  40c45c:	cmp	w2, #0x9
  40c460:	b.hi	40c43c <ferror@plt+0x95fc>  // b.pmore
  40c464:	ret
  40c468:	mov	x3, x0
  40c46c:	add	x0, x1, #0x14
  40c470:	strb	wzr, [x1, #20]
  40c474:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  40c478:	movk	x4, #0xcccd
  40c47c:	umulh	x1, x3, x4
  40c480:	lsr	x1, x1, #3
  40c484:	add	x2, x1, x1, lsl #2
  40c488:	sub	x2, x3, x2, lsl #1
  40c48c:	add	w2, w2, #0x30
  40c490:	strb	w2, [x0, #-1]!
  40c494:	mov	x2, x3
  40c498:	mov	x3, x1
  40c49c:	cmp	x2, #0x9
  40c4a0:	b.hi	40c47c <ferror@plt+0x963c>  // b.pmore
  40c4a4:	ret
  40c4a8:	stp	x29, x30, [sp, #-96]!
  40c4ac:	mov	x29, sp
  40c4b0:	stp	x19, x20, [sp, #16]
  40c4b4:	stp	x21, x22, [sp, #32]
  40c4b8:	stp	x23, x24, [sp, #48]
  40c4bc:	mov	x19, x0
  40c4c0:	mov	w23, w2
  40c4c4:	add	x21, x0, x1
  40c4c8:	bl	402bb0 <__ctype_get_mb_cur_max@plt>
  40c4cc:	cmp	x0, #0x1
  40c4d0:	b.ls	40c4f0 <ferror@plt+0x96b0>  // b.plast
  40c4d4:	cmp	x19, x21
  40c4d8:	b.cs	40c67c <ferror@plt+0x983c>  // b.hs, b.nlast
  40c4dc:	stp	x25, x26, [sp, #64]
  40c4e0:	mov	w20, #0x0                   	// #0
  40c4e4:	mov	x22, #0x1                   	// #1
  40c4e8:	and	w24, w23, #0x2
  40c4ec:	b	40c534 <ferror@plt+0x96f4>
  40c4f0:	mov	w20, #0x0                   	// #0
  40c4f4:	cmp	x19, x21
  40c4f8:	b.cs	40c5f8 <ferror@plt+0x97b8>  // b.hs, b.nlast
  40c4fc:	bl	402b60 <__ctype_b_loc@plt>
  40c500:	ldr	x1, [x0]
  40c504:	mov	w20, #0x0                   	// #0
  40c508:	and	w23, w23, #0x2
  40c50c:	mov	w2, #0x7fffffff            	// #2147483647
  40c510:	b	40c660 <ferror@plt+0x9820>
  40c514:	sub	w3, w3, #0x25
  40c518:	and	w3, w3, #0xff
  40c51c:	cmp	w3, #0x1a
  40c520:	b.hi	40c558 <ferror@plt+0x9718>  // b.pmore
  40c524:	add	x19, x19, #0x1
  40c528:	add	w20, w20, #0x1
  40c52c:	cmp	x19, x21
  40c530:	b.cs	40c63c <ferror@plt+0x97fc>  // b.hs, b.nlast
  40c534:	ldrb	w3, [x19]
  40c538:	cmp	w3, #0x5f
  40c53c:	b.hi	40c564 <ferror@plt+0x9724>  // b.pmore
  40c540:	cmp	w3, #0x40
  40c544:	b.hi	40c524 <ferror@plt+0x96e4>  // b.pmore
  40c548:	cmp	w3, #0x23
  40c54c:	b.hi	40c514 <ferror@plt+0x96d4>  // b.pmore
  40c550:	cmp	w3, #0x1f
  40c554:	b.hi	40c524 <ferror@plt+0x96e4>  // b.pmore
  40c558:	str	xzr, [sp, #88]
  40c55c:	mov	w26, #0x7fffffff            	// #2147483647
  40c560:	b	40c5ac <ferror@plt+0x976c>
  40c564:	sub	w3, w3, #0x61
  40c568:	and	w3, w3, #0xff
  40c56c:	cmp	w3, #0x1d
  40c570:	b.ls	40c524 <ferror@plt+0x96e4>  // b.plast
  40c574:	b	40c558 <ferror@plt+0x9718>
  40c578:	tbnz	w23, #0, 40c630 <ferror@plt+0x97f0>
  40c57c:	add	x19, x19, #0x1
  40c580:	add	w20, w20, #0x1
  40c584:	b	40c52c <ferror@plt+0x96ec>
  40c588:	tbnz	w23, #0, 40c630 <ferror@plt+0x97f0>
  40c58c:	add	w20, w20, #0x1
  40c590:	mov	x19, x21
  40c594:	b	40c52c <ferror@plt+0x96ec>
  40c598:	add	w20, w20, w0
  40c59c:	add	x19, x19, x25
  40c5a0:	add	x0, sp, #0x58
  40c5a4:	bl	402ac0 <mbsinit@plt>
  40c5a8:	cbnz	w0, 40c52c <ferror@plt+0x96ec>
  40c5ac:	add	x3, sp, #0x58
  40c5b0:	sub	x2, x21, x19
  40c5b4:	mov	x1, x19
  40c5b8:	add	x0, sp, #0x54
  40c5bc:	bl	411128 <ferror@plt+0xe2e8>
  40c5c0:	cmn	x0, #0x1
  40c5c4:	b.eq	40c578 <ferror@plt+0x9738>  // b.none
  40c5c8:	cmn	x0, #0x2
  40c5cc:	b.eq	40c588 <ferror@plt+0x9748>  // b.none
  40c5d0:	cmp	x0, #0x0
  40c5d4:	csel	x25, x0, x22, ne  // ne = any
  40c5d8:	ldr	w0, [sp, #84]
  40c5dc:	bl	4028f0 <wcwidth@plt>
  40c5e0:	tbnz	w0, #31, 40c610 <ferror@plt+0x97d0>
  40c5e4:	sub	w1, w26, w20
  40c5e8:	cmp	w1, w0
  40c5ec:	b.ge	40c598 <ferror@plt+0x9758>  // b.tcont
  40c5f0:	mov	w20, #0x7fffffff            	// #2147483647
  40c5f4:	ldp	x25, x26, [sp, #64]
  40c5f8:	mov	w0, w20
  40c5fc:	ldp	x19, x20, [sp, #16]
  40c600:	ldp	x21, x22, [sp, #32]
  40c604:	ldp	x23, x24, [sp, #48]
  40c608:	ldp	x29, x30, [sp], #96
  40c60c:	ret
  40c610:	cbnz	w24, 40c630 <ferror@plt+0x97f0>
  40c614:	ldr	w0, [sp, #84]
  40c618:	bl	402800 <iswcntrl@plt>
  40c61c:	cbnz	w0, 40c59c <ferror@plt+0x975c>
  40c620:	cmp	w20, w26
  40c624:	b.eq	40c5f0 <ferror@plt+0x97b0>  // b.none
  40c628:	add	w20, w20, #0x1
  40c62c:	b	40c59c <ferror@plt+0x975c>
  40c630:	mov	w20, #0xffffffff            	// #-1
  40c634:	ldp	x25, x26, [sp, #64]
  40c638:	b	40c5f8 <ferror@plt+0x97b8>
  40c63c:	ldp	x25, x26, [sp, #64]
  40c640:	b	40c5f8 <ferror@plt+0x97b8>
  40c644:	cbnz	w23, 40c684 <ferror@plt+0x9844>
  40c648:	tbnz	w0, #1, 40c658 <ferror@plt+0x9818>
  40c64c:	cmp	w20, w2
  40c650:	b.eq	40c5f8 <ferror@plt+0x97b8>  // b.none
  40c654:	add	w20, w20, #0x1
  40c658:	cmp	x21, x19
  40c65c:	b.eq	40c5f8 <ferror@plt+0x97b8>  // b.none
  40c660:	ldrb	w0, [x19], #1
  40c664:	ldrh	w0, [x1, x0, lsl #1]
  40c668:	tbz	w0, #14, 40c644 <ferror@plt+0x9804>
  40c66c:	cmp	w20, w2
  40c670:	b.eq	40c5f8 <ferror@plt+0x97b8>  // b.none
  40c674:	add	w20, w20, #0x1
  40c678:	b	40c658 <ferror@plt+0x9818>
  40c67c:	mov	w20, #0x0                   	// #0
  40c680:	b	40c5f8 <ferror@plt+0x97b8>
  40c684:	mov	w20, #0xffffffff            	// #-1
  40c688:	b	40c5f8 <ferror@plt+0x97b8>
  40c68c:	stp	x29, x30, [sp, #-32]!
  40c690:	mov	x29, sp
  40c694:	stp	x19, x20, [sp, #16]
  40c698:	mov	x19, x0
  40c69c:	mov	w20, w1
  40c6a0:	bl	402780 <strlen@plt>
  40c6a4:	mov	w2, w20
  40c6a8:	mov	x1, x0
  40c6ac:	mov	x0, x19
  40c6b0:	bl	40c4a8 <ferror@plt+0x9668>
  40c6b4:	ldp	x19, x20, [sp, #16]
  40c6b8:	ldp	x29, x30, [sp], #32
  40c6bc:	ret
  40c6c0:	cbz	x0, 40c774 <ferror@plt+0x9934>
  40c6c4:	ldrb	w1, [x0]
  40c6c8:	cbz	w1, 40c77c <ferror@plt+0x993c>
  40c6cc:	cmp	w1, #0xd
  40c6d0:	b.hi	40c6e4 <ferror@plt+0x98a4>  // b.pmore
  40c6d4:	cmp	w1, #0x8
  40c6d8:	b.hi	40c6ec <ferror@plt+0x98ac>  // b.pmore
  40c6dc:	mov	x0, #0x0                   	// #0
  40c6e0:	ret
  40c6e4:	cmp	w1, #0x20
  40c6e8:	b.ne	40c6fc <ferror@plt+0x98bc>  // b.any
  40c6ec:	ldrb	w1, [x0, #1]!
  40c6f0:	cbnz	w1, 40c6cc <ferror@plt+0x988c>
  40c6f4:	mov	x0, #0x0                   	// #0
  40c6f8:	ret
  40c6fc:	sub	w1, w1, #0x30
  40c700:	cmp	w1, #0x9
  40c704:	b.hi	40c784 <ferror@plt+0x9944>  // b.pmore
  40c708:	stp	x29, x30, [sp, #-32]!
  40c70c:	mov	x29, sp
  40c710:	str	xzr, [sp, #24]
  40c714:	mov	w2, #0xa                   	// #10
  40c718:	add	x1, sp, #0x18
  40c71c:	bl	402770 <strtoul@plt>
  40c720:	ldr	x2, [sp, #24]
  40c724:	cbz	x2, 40c750 <ferror@plt+0x9910>
  40c728:	ldrb	w1, [x2]
  40c72c:	cbz	w1, 40c754 <ferror@plt+0x9914>
  40c730:	add	x2, x2, #0x1
  40c734:	cmp	w1, #0xd
  40c738:	b.hi	40c75c <ferror@plt+0x991c>  // b.pmore
  40c73c:	cmp	w1, #0x8
  40c740:	b.hi	40c764 <ferror@plt+0x9924>  // b.pmore
  40c744:	cmp	w1, #0x2c
  40c748:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40c74c:	b.eq	40c754 <ferror@plt+0x9914>  // b.none
  40c750:	mov	x0, #0x0                   	// #0
  40c754:	ldp	x29, x30, [sp], #32
  40c758:	ret
  40c75c:	cmp	w1, #0x20
  40c760:	b.ne	40c744 <ferror@plt+0x9904>  // b.any
  40c764:	str	x2, [sp, #24]
  40c768:	ldrb	w1, [x2], #1
  40c76c:	cbnz	w1, 40c734 <ferror@plt+0x98f4>
  40c770:	b	40c754 <ferror@plt+0x9914>
  40c774:	mov	x0, #0x0                   	// #0
  40c778:	ret
  40c77c:	mov	x0, #0x0                   	// #0
  40c780:	ret
  40c784:	mov	x0, #0x0                   	// #0
  40c788:	ret
  40c78c:	stp	x29, x30, [sp, #-144]!
  40c790:	mov	x29, sp
  40c794:	add	x2, sp, #0x10
  40c798:	mov	x1, #0x80                  	// #128
  40c79c:	mov	w0, #0x0                   	// #0
  40c7a0:	bl	402aa0 <sched_getaffinity@plt>
  40c7a4:	cbz	w0, 40c7b4 <ferror@plt+0x9974>
  40c7a8:	mov	x0, #0x0                   	// #0
  40c7ac:	ldp	x29, x30, [sp], #144
  40c7b0:	ret
  40c7b4:	add	x1, sp, #0x10
  40c7b8:	mov	x0, #0x80                  	// #128
  40c7bc:	bl	402c40 <__sched_cpucount@plt>
  40c7c0:	mov	w1, w0
  40c7c4:	sxtw	x0, w0
  40c7c8:	cbz	w1, 40c7a8 <ferror@plt+0x9968>
  40c7cc:	b	40c7ac <ferror@plt+0x996c>
  40c7d0:	stp	x29, x30, [sp, #-32]!
  40c7d4:	mov	x29, sp
  40c7d8:	stp	x19, x20, [sp, #16]
  40c7dc:	cmp	w0, #0x2
  40c7e0:	b.eq	40c824 <ferror@plt+0x99e4>  // b.none
  40c7e4:	cmp	w0, #0x1
  40c7e8:	b.eq	40c878 <ferror@plt+0x9a38>  // b.none
  40c7ec:	mov	w0, #0x53                  	// #83
  40c7f0:	bl	402d00 <sysconf@plt>
  40c7f4:	mov	x20, x0
  40c7f8:	cmp	x0, #0x1
  40c7fc:	b.eq	40c880 <ferror@plt+0x9a40>  // b.none
  40c800:	mov	x19, #0xffffffffffffffff    	// #-1
  40c804:	mov	x0, #0x1                   	// #1
  40c808:	cmp	x20, #0x0
  40c80c:	b.gt	40c890 <ferror@plt+0x9a50>
  40c810:	cmp	x0, x19
  40c814:	csel	x0, x0, x19, ls  // ls = plast
  40c818:	ldp	x19, x20, [sp, #16]
  40c81c:	ldp	x29, x30, [sp], #32
  40c820:	ret
  40c824:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40c828:	add	x0, x0, #0x570
  40c82c:	bl	402dd0 <getenv@plt>
  40c830:	bl	40c6c0 <ferror@plt+0x9880>
  40c834:	mov	x20, x0
  40c838:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40c83c:	add	x0, x0, #0x580
  40c840:	bl	402dd0 <getenv@plt>
  40c844:	bl	40c6c0 <ferror@plt+0x9880>
  40c848:	cmp	x0, #0x0
  40c84c:	csinv	x19, x0, xzr, ne  // ne = any
  40c850:	cmp	x19, x20
  40c854:	csel	x0, x19, x20, ls  // ls = plast
  40c858:	cbnz	x20, 40c818 <ferror@plt+0x99d8>
  40c85c:	bl	40c78c <ferror@plt+0x994c>
  40c860:	cbnz	x0, 40c810 <ferror@plt+0x99d0>
  40c864:	mov	w0, #0x54                  	// #84
  40c868:	bl	402d00 <sysconf@plt>
  40c86c:	cmp	x0, #0x0
  40c870:	csinc	x0, x0, xzr, gt
  40c874:	b	40c810 <ferror@plt+0x99d0>
  40c878:	mov	x19, #0xffffffffffffffff    	// #-1
  40c87c:	b	40c85c <ferror@plt+0x9a1c>
  40c880:	bl	40c78c <ferror@plt+0x994c>
  40c884:	cbz	x0, 40c890 <ferror@plt+0x9a50>
  40c888:	mov	x20, x0
  40c88c:	b	40c800 <ferror@plt+0x99c0>
  40c890:	mov	x0, x20
  40c894:	mov	x19, #0xffffffffffffffff    	// #-1
  40c898:	b	40c810 <ferror@plt+0x99d0>
  40c89c:	stp	x29, x30, [sp, #-144]!
  40c8a0:	mov	x29, sp
  40c8a4:	str	d8, [sp, #16]
  40c8a8:	mov	w0, #0x55                  	// #85
  40c8ac:	bl	402d00 <sysconf@plt>
  40c8b0:	scvtf	d8, x0
  40c8b4:	mov	w0, #0x1e                  	// #30
  40c8b8:	bl	402d00 <sysconf@plt>
  40c8bc:	fcmpe	d8, #0.0
  40c8c0:	b.lt	40c8d4 <ferror@plt+0x9a94>  // b.tstop
  40c8c4:	fmov	d0, x0
  40c8c8:	scvtf	d0, d0
  40c8cc:	fcmpe	d0, #0.0
  40c8d0:	b.ge	40c8f4 <ferror@plt+0x9ab4>  // b.tcont
  40c8d4:	add	x0, sp, #0x20
  40c8d8:	bl	4027c0 <sysinfo@plt>
  40c8dc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40c8e0:	ldr	d0, [x1, #1432]
  40c8e4:	cbz	w0, 40c8fc <ferror@plt+0x9abc>
  40c8e8:	ldr	d8, [sp, #16]
  40c8ec:	ldp	x29, x30, [sp], #144
  40c8f0:	ret
  40c8f4:	fmul	d0, d8, d0
  40c8f8:	b	40c8e8 <ferror@plt+0x9aa8>
  40c8fc:	ldr	d0, [sp, #64]
  40c900:	ucvtf	d0, d0
  40c904:	ldr	w0, [sp, #136]
  40c908:	ucvtf	d8, w0
  40c90c:	fmul	d0, d0, d8
  40c910:	b	40c8e8 <ferror@plt+0x9aa8>
  40c914:	stp	x29, x30, [sp, #-144]!
  40c918:	mov	x29, sp
  40c91c:	str	d8, [sp, #16]
  40c920:	mov	w0, #0x56                  	// #86
  40c924:	bl	402d00 <sysconf@plt>
  40c928:	scvtf	d8, x0
  40c92c:	mov	w0, #0x1e                  	// #30
  40c930:	bl	402d00 <sysconf@plt>
  40c934:	fcmpe	d8, #0.0
  40c938:	b.lt	40c94c <ferror@plt+0x9b0c>  // b.tstop
  40c93c:	fmov	d0, x0
  40c940:	scvtf	d0, d0
  40c944:	fcmpe	d0, #0.0
  40c948:	b.ge	40c984 <ferror@plt+0x9b44>  // b.tcont
  40c94c:	add	x0, sp, #0x20
  40c950:	bl	4027c0 <sysinfo@plt>
  40c954:	cbnz	w0, 40c98c <ferror@plt+0x9b4c>
  40c958:	ldr	d0, [sp, #72]
  40c95c:	ucvtf	d0, d0
  40c960:	ldr	d8, [sp, #88]
  40c964:	ucvtf	d8, d8
  40c968:	fadd	d0, d0, d8
  40c96c:	ldr	w0, [sp, #136]
  40c970:	ucvtf	d8, w0
  40c974:	fmul	d0, d0, d8
  40c978:	ldr	d8, [sp, #16]
  40c97c:	ldp	x29, x30, [sp], #144
  40c980:	ret
  40c984:	fmul	d0, d8, d0
  40c988:	b	40c978 <ferror@plt+0x9b38>
  40c98c:	bl	40c89c <ferror@plt+0x9a5c>
  40c990:	fmov	d8, #2.500000000000000000e-01
  40c994:	fmul	d0, d0, d8
  40c998:	b	40c978 <ferror@plt+0x9b38>
  40c99c:	stp	x29, x30, [sp, #-64]!
  40c9a0:	mov	x29, sp
  40c9a4:	stp	x19, x20, [sp, #16]
  40c9a8:	stp	x21, x22, [sp, #32]
  40c9ac:	stp	x23, x24, [sp, #48]
  40c9b0:	mov	x19, x0
  40c9b4:	mov	w20, w1
  40c9b8:	ldr	w24, [x0]
  40c9bc:	ldr	w23, [x0, #4]
  40c9c0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40c9c4:	ldr	w0, [x0, #2988]
  40c9c8:	tbz	w0, #31, 40ca0c <ferror@plt+0x9bcc>
  40c9cc:	mov	w0, #0xf7ff                	// #63487
  40c9d0:	movk	w0, #0xfff7, lsl #16
  40c9d4:	ands	w22, w20, w0
  40c9d8:	b.ne	40ca4c <ferror@plt+0x9c0c>  // b.any
  40c9dc:	mov	x0, x19
  40c9e0:	bl	4027e0 <pipe@plt>
  40c9e4:	tbnz	w0, #31, 40cb48 <ferror@plt+0x9d08>
  40c9e8:	tbnz	w20, #11, 40ca60 <ferror@plt+0x9c20>
  40c9ec:	and	w21, w20, #0x80000
  40c9f0:	tbnz	w20, #19, 40cae8 <ferror@plt+0x9ca8>
  40c9f4:	mov	w0, w21
  40c9f8:	ldp	x19, x20, [sp, #16]
  40c9fc:	ldp	x21, x22, [sp, #32]
  40ca00:	ldp	x23, x24, [sp, #48]
  40ca04:	ldp	x29, x30, [sp], #64
  40ca08:	ret
  40ca0c:	mov	x0, x19
  40ca10:	bl	402ae0 <pipe2@plt>
  40ca14:	mov	w21, w0
  40ca18:	tbz	w0, #31, 40ca2c <ferror@plt+0x9bec>
  40ca1c:	bl	402db0 <__errno_location@plt>
  40ca20:	ldr	w0, [x0]
  40ca24:	cmp	w0, #0x26
  40ca28:	b.eq	40ca3c <ferror@plt+0x9bfc>  // b.none
  40ca2c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40ca30:	mov	w1, #0x1                   	// #1
  40ca34:	str	w1, [x0, #2988]
  40ca38:	b	40c9f4 <ferror@plt+0x9bb4>
  40ca3c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40ca40:	mov	w1, #0xffffffff            	// #-1
  40ca44:	str	w1, [x0, #2988]
  40ca48:	b	40c9cc <ferror@plt+0x9b8c>
  40ca4c:	bl	402db0 <__errno_location@plt>
  40ca50:	mov	w1, #0x16                  	// #22
  40ca54:	str	w1, [x0]
  40ca58:	mov	w21, #0xffffffff            	// #-1
  40ca5c:	b	40c9f4 <ferror@plt+0x9bb4>
  40ca60:	mov	w2, #0x0                   	// #0
  40ca64:	mov	w1, #0x3                   	// #3
  40ca68:	ldr	w0, [x19, #4]
  40ca6c:	bl	410d14 <ferror@plt+0xded4>
  40ca70:	tbnz	w0, #31, 40cab8 <ferror@plt+0x9c78>
  40ca74:	orr	w2, w0, #0x800
  40ca78:	mov	w1, #0x4                   	// #4
  40ca7c:	ldr	w0, [x19, #4]
  40ca80:	bl	410d14 <ferror@plt+0xded4>
  40ca84:	cmn	w0, #0x1
  40ca88:	b.eq	40cab8 <ferror@plt+0x9c78>  // b.none
  40ca8c:	mov	w2, #0x0                   	// #0
  40ca90:	mov	w1, #0x3                   	// #3
  40ca94:	ldr	w0, [x19]
  40ca98:	bl	410d14 <ferror@plt+0xded4>
  40ca9c:	tbnz	w0, #31, 40cab8 <ferror@plt+0x9c78>
  40caa0:	orr	w2, w0, #0x800
  40caa4:	mov	w1, #0x4                   	// #4
  40caa8:	ldr	w0, [x19]
  40caac:	bl	410d14 <ferror@plt+0xded4>
  40cab0:	cmn	w0, #0x1
  40cab4:	b.ne	40c9ec <ferror@plt+0x9bac>  // b.any
  40cab8:	bl	402db0 <__errno_location@plt>
  40cabc:	mov	x20, x0
  40cac0:	ldr	w21, [x0]
  40cac4:	ldr	w0, [x19]
  40cac8:	bl	402a10 <close@plt>
  40cacc:	ldr	w0, [x19, #4]
  40cad0:	bl	402a10 <close@plt>
  40cad4:	str	w24, [x19]
  40cad8:	str	w23, [x19, #4]
  40cadc:	str	w21, [x20]
  40cae0:	mov	w21, #0xffffffff            	// #-1
  40cae4:	b	40c9f4 <ferror@plt+0x9bb4>
  40cae8:	mov	w2, #0x0                   	// #0
  40caec:	mov	w1, #0x1                   	// #1
  40caf0:	ldr	w0, [x19, #4]
  40caf4:	bl	410d14 <ferror@plt+0xded4>
  40caf8:	tbnz	w0, #31, 40cab8 <ferror@plt+0x9c78>
  40cafc:	orr	w2, w0, #0x1
  40cb00:	mov	w1, #0x2                   	// #2
  40cb04:	ldr	w0, [x19, #4]
  40cb08:	bl	410d14 <ferror@plt+0xded4>
  40cb0c:	cmn	w0, #0x1
  40cb10:	b.eq	40cab8 <ferror@plt+0x9c78>  // b.none
  40cb14:	mov	w2, #0x0                   	// #0
  40cb18:	mov	w1, #0x1                   	// #1
  40cb1c:	ldr	w0, [x19]
  40cb20:	bl	410d14 <ferror@plt+0xded4>
  40cb24:	tbnz	w0, #31, 40cab8 <ferror@plt+0x9c78>
  40cb28:	orr	w2, w0, #0x1
  40cb2c:	mov	w1, #0x2                   	// #2
  40cb30:	ldr	w0, [x19]
  40cb34:	bl	410d14 <ferror@plt+0xded4>
  40cb38:	mov	w21, w22
  40cb3c:	cmn	w0, #0x1
  40cb40:	b.ne	40c9f4 <ferror@plt+0x9bb4>  // b.any
  40cb44:	b	40cab8 <ferror@plt+0x9c78>
  40cb48:	mov	w21, #0xffffffff            	// #-1
  40cb4c:	b	40c9f4 <ferror@plt+0x9bb4>
  40cb50:	stp	x29, x30, [sp, #-32]!
  40cb54:	mov	x29, sp
  40cb58:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cb5c:	add	x0, x0, #0x5a0
  40cb60:	bl	402dd0 <getenv@plt>
  40cb64:	cbz	x0, 40cbc8 <ferror@plt+0x9d88>
  40cb68:	ldrb	w2, [x0]
  40cb6c:	mov	x1, #0x1069                	// #4201
  40cb70:	movk	x1, #0x3, lsl #16
  40cb74:	cbnz	w2, 40cb8c <ferror@plt+0x9d4c>
  40cb78:	mov	x0, #0x7fffffff            	// #2147483647
  40cb7c:	cmp	x1, x0
  40cb80:	csel	x0, x1, x0, le
  40cb84:	ldp	x29, x30, [sp], #32
  40cb88:	ret
  40cb8c:	mov	w2, #0xa                   	// #10
  40cb90:	add	x1, sp, #0x18
  40cb94:	bl	402b70 <strtol@plt>
  40cb98:	mov	x1, x0
  40cb9c:	ldr	x0, [sp, #24]
  40cba0:	ldrb	w0, [x0]
  40cba4:	cbz	w0, 40cbb4 <ferror@plt+0x9d74>
  40cba8:	mov	x1, #0x1069                	// #4201
  40cbac:	movk	x1, #0x3, lsl #16
  40cbb0:	b	40cb78 <ferror@plt+0x9d38>
  40cbb4:	mov	x0, #0xffffffff80000000    	// #-2147483648
  40cbb8:	cmp	x1, x0
  40cbbc:	b.ge	40cb78 <ferror@plt+0x9d38>  // b.tcont
  40cbc0:	mov	w0, #0x80000000            	// #-2147483648
  40cbc4:	b	40cb84 <ferror@plt+0x9d44>
  40cbc8:	mov	x1, #0x1069                	// #4201
  40cbcc:	movk	x1, #0x3, lsl #16
  40cbd0:	b	40cb78 <ferror@plt+0x9d38>
  40cbd4:	stp	x29, x30, [sp, #-48]!
  40cbd8:	mov	x29, sp
  40cbdc:	cbz	x0, 40cc54 <ferror@plt+0x9e14>
  40cbe0:	stp	x19, x20, [sp, #16]
  40cbe4:	mov	x19, x0
  40cbe8:	mov	w1, #0x2f                  	// #47
  40cbec:	bl	402a30 <strrchr@plt>
  40cbf0:	mov	x20, x0
  40cbf4:	cbz	x0, 40cc88 <ferror@plt+0x9e48>
  40cbf8:	str	x21, [sp, #32]
  40cbfc:	add	x21, x0, #0x1
  40cc00:	sub	x0, x21, x19
  40cc04:	cmp	x0, #0x6
  40cc08:	b.le	40cc7c <ferror@plt+0x9e3c>
  40cc0c:	mov	x2, #0x7                   	// #7
  40cc10:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cc14:	add	x1, x1, #0x5e8
  40cc18:	sub	x0, x20, #0x6
  40cc1c:	bl	402940 <strncmp@plt>
  40cc20:	cbnz	w0, 40cc84 <ferror@plt+0x9e44>
  40cc24:	mov	x2, #0x3                   	// #3
  40cc28:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cc2c:	add	x1, x1, #0x5f0
  40cc30:	mov	x0, x21
  40cc34:	bl	402940 <strncmp@plt>
  40cc38:	mov	x19, x21
  40cc3c:	cbnz	w0, 40cca4 <ferror@plt+0x9e64>
  40cc40:	add	x19, x20, #0x4
  40cc44:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40cc48:	str	x19, [x0, #1368]
  40cc4c:	ldr	x21, [sp, #32]
  40cc50:	b	40cc88 <ferror@plt+0x9e48>
  40cc54:	stp	x19, x20, [sp, #16]
  40cc58:	str	x21, [sp, #32]
  40cc5c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40cc60:	ldr	x3, [x0, #1328]
  40cc64:	mov	x2, #0x37                  	// #55
  40cc68:	mov	x1, #0x1                   	// #1
  40cc6c:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cc70:	add	x0, x0, #0x5b0
  40cc74:	bl	402c10 <fwrite@plt>
  40cc78:	bl	402a80 <abort@plt>
  40cc7c:	ldr	x21, [sp, #32]
  40cc80:	b	40cc88 <ferror@plt+0x9e48>
  40cc84:	ldr	x21, [sp, #32]
  40cc88:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40cc8c:	str	x19, [x0, #2992]
  40cc90:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40cc94:	str	x19, [x0, #1320]
  40cc98:	ldp	x19, x20, [sp, #16]
  40cc9c:	ldp	x29, x30, [sp], #48
  40cca0:	ret
  40cca4:	ldr	x21, [sp, #32]
  40cca8:	b	40cc88 <ferror@plt+0x9e48>
  40ccac:	stp	xzr, xzr, [x8]
  40ccb0:	stp	xzr, xzr, [x8, #16]
  40ccb4:	stp	xzr, xzr, [x8, #32]
  40ccb8:	str	xzr, [x8, #48]
  40ccbc:	cmp	w0, #0xa
  40ccc0:	b.eq	40cccc <ferror@plt+0x9e8c>  // b.none
  40ccc4:	str	w0, [x8]
  40ccc8:	ret
  40cccc:	stp	x29, x30, [sp, #-16]!
  40ccd0:	mov	x29, sp
  40ccd4:	bl	402a80 <abort@plt>
  40ccd8:	stp	x29, x30, [sp, #-48]!
  40ccdc:	mov	x29, sp
  40cce0:	stp	x19, x20, [sp, #16]
  40cce4:	str	x21, [sp, #32]
  40cce8:	mov	x20, x0
  40ccec:	mov	w21, w1
  40ccf0:	mov	w2, #0x5                   	// #5
  40ccf4:	mov	x1, x0
  40ccf8:	mov	x0, #0x0                   	// #0
  40ccfc:	bl	402d20 <dcgettext@plt>
  40cd00:	mov	x19, x0
  40cd04:	cmp	x20, x0
  40cd08:	b.eq	40cd20 <ferror@plt+0x9ee0>  // b.none
  40cd0c:	mov	x0, x19
  40cd10:	ldp	x19, x20, [sp, #16]
  40cd14:	ldr	x21, [sp, #32]
  40cd18:	ldp	x29, x30, [sp], #48
  40cd1c:	ret
  40cd20:	bl	411858 <_obstack_memory_used@@Base+0x280>
  40cd24:	ldrb	w1, [x0]
  40cd28:	and	w1, w1, #0xffffffdf
  40cd2c:	cmp	w1, #0x55
  40cd30:	b.ne	40cdb0 <ferror@plt+0x9f70>  // b.any
  40cd34:	ldrb	w1, [x0, #1]
  40cd38:	and	w1, w1, #0xffffffdf
  40cd3c:	cmp	w1, #0x54
  40cd40:	b.ne	40cd74 <ferror@plt+0x9f34>  // b.any
  40cd44:	ldrb	w1, [x0, #2]
  40cd48:	and	w1, w1, #0xffffffdf
  40cd4c:	cmp	w1, #0x46
  40cd50:	b.ne	40cd74 <ferror@plt+0x9f34>  // b.any
  40cd54:	ldrb	w1, [x0, #3]
  40cd58:	cmp	w1, #0x2d
  40cd5c:	b.ne	40cd74 <ferror@plt+0x9f34>  // b.any
  40cd60:	ldrb	w1, [x0, #4]
  40cd64:	cmp	w1, #0x38
  40cd68:	b.ne	40cd74 <ferror@plt+0x9f34>  // b.any
  40cd6c:	ldrb	w0, [x0, #5]
  40cd70:	cbz	w0, 40cd90 <ferror@plt+0x9f50>
  40cd74:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cd78:	add	x0, x19, #0x620
  40cd7c:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cd80:	add	x19, x19, #0x5f8
  40cd84:	cmp	w21, #0x9
  40cd88:	csel	x19, x19, x0, eq  // eq = none
  40cd8c:	b	40cd0c <ferror@plt+0x9ecc>
  40cd90:	ldrb	w1, [x19]
  40cd94:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cd98:	add	x0, x19, #0x600
  40cd9c:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cda0:	add	x19, x19, #0x618
  40cda4:	cmp	w1, #0x60
  40cda8:	csel	x19, x19, x0, eq  // eq = none
  40cdac:	b	40cd0c <ferror@plt+0x9ecc>
  40cdb0:	cmp	w1, #0x47
  40cdb4:	b.ne	40cd74 <ferror@plt+0x9f34>  // b.any
  40cdb8:	ldrb	w1, [x0, #1]
  40cdbc:	and	w1, w1, #0xffffffdf
  40cdc0:	cmp	w1, #0x42
  40cdc4:	b.ne	40cd74 <ferror@plt+0x9f34>  // b.any
  40cdc8:	ldrb	w1, [x0, #2]
  40cdcc:	cmp	w1, #0x31
  40cdd0:	b.ne	40cd74 <ferror@plt+0x9f34>  // b.any
  40cdd4:	ldrb	w1, [x0, #3]
  40cdd8:	cmp	w1, #0x38
  40cddc:	b.ne	40cd74 <ferror@plt+0x9f34>  // b.any
  40cde0:	ldrb	w1, [x0, #4]
  40cde4:	cmp	w1, #0x30
  40cde8:	b.ne	40cd74 <ferror@plt+0x9f34>  // b.any
  40cdec:	ldrb	w1, [x0, #5]
  40cdf0:	cmp	w1, #0x33
  40cdf4:	b.ne	40cd74 <ferror@plt+0x9f34>  // b.any
  40cdf8:	ldrb	w1, [x0, #6]
  40cdfc:	cmp	w1, #0x30
  40ce00:	b.ne	40cd74 <ferror@plt+0x9f34>  // b.any
  40ce04:	ldrb	w0, [x0, #7]
  40ce08:	cbnz	w0, 40cd74 <ferror@plt+0x9f34>
  40ce0c:	ldrb	w1, [x19]
  40ce10:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x2a28>
  40ce14:	add	x0, x19, #0x608
  40ce18:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x2a28>
  40ce1c:	add	x19, x19, #0x610
  40ce20:	cmp	w1, #0x60
  40ce24:	csel	x19, x19, x0, eq  // eq = none
  40ce28:	b	40cd0c <ferror@plt+0x9ecc>
  40ce2c:	sub	sp, sp, #0xf0
  40ce30:	stp	x29, x30, [sp, #16]
  40ce34:	add	x29, sp, #0x10
  40ce38:	stp	x19, x20, [sp, #32]
  40ce3c:	stp	x21, x22, [sp, #48]
  40ce40:	stp	x23, x24, [sp, #64]
  40ce44:	stp	x25, x26, [sp, #80]
  40ce48:	stp	x27, x28, [sp, #96]
  40ce4c:	mov	x28, x0
  40ce50:	mov	x26, x1
  40ce54:	str	x2, [sp, #136]
  40ce58:	mov	x24, x3
  40ce5c:	mov	w25, w4
  40ce60:	mov	w19, w5
  40ce64:	str	w5, [sp, #184]
  40ce68:	str	x6, [sp, #152]
  40ce6c:	str	x7, [sp, #200]
  40ce70:	bl	402bb0 <__ctype_get_mb_cur_max@plt>
  40ce74:	str	x0, [sp, #168]
  40ce78:	mov	x0, x19
  40ce7c:	ubfx	x0, x0, #1, #1
  40ce80:	str	x0, [sp, #112]
  40ce84:	mov	w0, #0x1                   	// #1
  40ce88:	str	w0, [sp, #128]
  40ce8c:	str	wzr, [sp, #180]
  40ce90:	str	wzr, [sp, #124]
  40ce94:	str	wzr, [sp, #132]
  40ce98:	str	xzr, [sp, #144]
  40ce9c:	str	xzr, [sp, #160]
  40cea0:	str	xzr, [sp, #192]
  40cea4:	mov	w23, w25
  40cea8:	mov	x25, x24
  40ceac:	cmp	w23, #0x4
  40ceb0:	b.eq	40d020 <ferror@plt+0xa1e0>  // b.none
  40ceb4:	b.ls	40cf04 <ferror@plt+0xa0c4>  // b.plast
  40ceb8:	cmp	w23, #0x7
  40cebc:	b.eq	40d090 <ferror@plt+0xa250>  // b.none
  40cec0:	b.ls	40cf50 <ferror@plt+0xa110>  // b.plast
  40cec4:	sub	w0, w23, #0x8
  40cec8:	cmp	w0, #0x2
  40cecc:	b.hi	40d080 <ferror@plt+0xa240>  // b.pmore
  40ced0:	cmp	w23, #0xa
  40ced4:	b.ne	40cfc4 <ferror@plt+0xa184>  // b.any
  40ced8:	mov	x27, #0x0                   	// #0
  40cedc:	ldr	w0, [sp, #112]
  40cee0:	cbz	w0, 40cff0 <ferror@plt+0xa1b0>
  40cee4:	ldr	x0, [sp, #240]
  40cee8:	bl	402780 <strlen@plt>
  40ceec:	str	x0, [sp, #144]
  40cef0:	ldr	x0, [sp, #240]
  40cef4:	str	x0, [sp, #160]
  40cef8:	mov	w0, #0x1                   	// #1
  40cefc:	str	w0, [sp, #132]
  40cf00:	b	40cf88 <ferror@plt+0xa148>
  40cf04:	cmp	w23, #0x2
  40cf08:	b.eq	40d05c <ferror@plt+0xa21c>  // b.none
  40cf0c:	b.ls	40cf1c <ferror@plt+0xa0dc>  // b.plast
  40cf10:	mov	w0, #0x1                   	// #1
  40cf14:	str	w0, [sp, #132]
  40cf18:	b	40cf28 <ferror@plt+0xa0e8>
  40cf1c:	cbz	w23, 40d084 <ferror@plt+0xa244>
  40cf20:	cmp	w23, #0x1
  40cf24:	b.ne	40d080 <ferror@plt+0xa240>  // b.any
  40cf28:	mov	w0, #0x1                   	// #1
  40cf2c:	str	w0, [sp, #112]
  40cf30:	mov	x0, #0x1                   	// #1
  40cf34:	str	x0, [sp, #144]
  40cf38:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cf3c:	add	x0, x0, #0x620
  40cf40:	str	x0, [sp, #160]
  40cf44:	mov	x27, #0x0                   	// #0
  40cf48:	mov	w23, #0x2                   	// #2
  40cf4c:	b	40cf88 <ferror@plt+0xa148>
  40cf50:	cmp	w23, #0x5
  40cf54:	b.eq	40cf90 <ferror@plt+0xa150>  // b.none
  40cf58:	cmp	w23, #0x6
  40cf5c:	b.ne	40d080 <ferror@plt+0xa240>  // b.any
  40cf60:	mov	w0, #0x1                   	// #1
  40cf64:	str	w0, [sp, #112]
  40cf68:	str	w0, [sp, #132]
  40cf6c:	mov	x0, #0x1                   	// #1
  40cf70:	str	x0, [sp, #144]
  40cf74:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cf78:	add	x0, x0, #0x5f8
  40cf7c:	str	x0, [sp, #160]
  40cf80:	mov	x27, #0x0                   	// #0
  40cf84:	mov	w23, #0x5                   	// #5
  40cf88:	mov	x24, #0x0                   	// #0
  40cf8c:	b	40da7c <ferror@plt+0xac3c>
  40cf90:	ldr	w0, [sp, #112]
  40cf94:	cbnz	w0, 40d0a4 <ferror@plt+0xa264>
  40cf98:	cbz	x26, 40d0c8 <ferror@plt+0xa288>
  40cf9c:	mov	w0, #0x22                  	// #34
  40cfa0:	strb	w0, [x28]
  40cfa4:	mov	w0, #0x1                   	// #1
  40cfa8:	str	w0, [sp, #132]
  40cfac:	mov	x27, #0x1                   	// #1
  40cfb0:	str	x27, [sp, #144]
  40cfb4:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cfb8:	add	x0, x0, #0x5f8
  40cfbc:	str	x0, [sp, #160]
  40cfc0:	b	40cf88 <ferror@plt+0xa148>
  40cfc4:	mov	w1, w23
  40cfc8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cfcc:	add	x0, x0, #0x628
  40cfd0:	bl	40ccd8 <ferror@plt+0x9e98>
  40cfd4:	str	x0, [sp, #200]
  40cfd8:	mov	w1, w23
  40cfdc:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40cfe0:	add	x0, x0, #0x620
  40cfe4:	bl	40ccd8 <ferror@plt+0x9e98>
  40cfe8:	str	x0, [sp, #240]
  40cfec:	b	40ced8 <ferror@plt+0xa098>
  40cff0:	ldr	x1, [sp, #200]
  40cff4:	ldrb	w0, [x1]
  40cff8:	cbnz	w0, 40d010 <ferror@plt+0xa1d0>
  40cffc:	mov	x27, #0x0                   	// #0
  40d000:	b	40cee4 <ferror@plt+0xa0a4>
  40d004:	add	x27, x27, #0x1
  40d008:	ldrb	w0, [x1, x27]
  40d00c:	cbz	w0, 40cee4 <ferror@plt+0xa0a4>
  40d010:	cmp	x26, x27
  40d014:	b.ls	40d004 <ferror@plt+0xa1c4>  // b.plast
  40d018:	strb	w0, [x28, x27]
  40d01c:	b	40d004 <ferror@plt+0xa1c4>
  40d020:	ldr	w0, [sp, #112]
  40d024:	cbnz	w0, 40cf28 <ferror@plt+0xa0e8>
  40d028:	mov	w0, #0x1                   	// #1
  40d02c:	str	w0, [sp, #132]
  40d030:	cbz	x26, 40d0e8 <ferror@plt+0xa2a8>
  40d034:	mov	w0, #0x27                  	// #39
  40d038:	strb	w0, [x28]
  40d03c:	str	wzr, [sp, #112]
  40d040:	mov	x27, #0x1                   	// #1
  40d044:	str	x27, [sp, #144]
  40d048:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40d04c:	add	x0, x0, #0x620
  40d050:	str	x0, [sp, #160]
  40d054:	mov	w23, #0x2                   	// #2
  40d058:	b	40cf88 <ferror@plt+0xa148>
  40d05c:	ldr	w0, [sp, #112]
  40d060:	cbz	w0, 40d030 <ferror@plt+0xa1f0>
  40d064:	mov	x0, #0x1                   	// #1
  40d068:	str	x0, [sp, #144]
  40d06c:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40d070:	add	x0, x0, #0x620
  40d074:	str	x0, [sp, #160]
  40d078:	mov	x27, #0x0                   	// #0
  40d07c:	b	40cf88 <ferror@plt+0xa148>
  40d080:	bl	402a80 <abort@plt>
  40d084:	str	wzr, [sp, #112]
  40d088:	mov	x27, #0x0                   	// #0
  40d08c:	b	40cf88 <ferror@plt+0xa148>
  40d090:	str	wzr, [sp, #112]
  40d094:	mov	w0, #0x1                   	// #1
  40d098:	str	w0, [sp, #132]
  40d09c:	mov	x27, #0x0                   	// #0
  40d0a0:	b	40cf88 <ferror@plt+0xa148>
  40d0a4:	ldr	w0, [sp, #112]
  40d0a8:	str	w0, [sp, #132]
  40d0ac:	mov	x0, #0x1                   	// #1
  40d0b0:	str	x0, [sp, #144]
  40d0b4:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40d0b8:	add	x0, x0, #0x5f8
  40d0bc:	str	x0, [sp, #160]
  40d0c0:	mov	x27, #0x0                   	// #0
  40d0c4:	b	40cf88 <ferror@plt+0xa148>
  40d0c8:	mov	w0, #0x1                   	// #1
  40d0cc:	str	w0, [sp, #132]
  40d0d0:	mov	x27, #0x1                   	// #1
  40d0d4:	str	x27, [sp, #144]
  40d0d8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40d0dc:	add	x0, x0, #0x5f8
  40d0e0:	str	x0, [sp, #160]
  40d0e4:	b	40cf88 <ferror@plt+0xa148>
  40d0e8:	str	wzr, [sp, #112]
  40d0ec:	mov	x27, #0x1                   	// #1
  40d0f0:	str	x27, [sp, #144]
  40d0f4:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40d0f8:	add	x0, x0, #0x620
  40d0fc:	str	x0, [sp, #160]
  40d100:	mov	w23, #0x2                   	// #2
  40d104:	b	40cf88 <ferror@plt+0xa148>
  40d108:	ldr	x0, [sp, #144]
  40d10c:	add	x20, x24, x0
  40d110:	cmp	x0, #0x1
  40d114:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  40d118:	b.ne	40d128 <ferror@plt+0xa2e8>  // b.any
  40d11c:	ldr	x0, [sp, #136]
  40d120:	bl	402780 <strlen@plt>
  40d124:	mov	x25, x0
  40d128:	cmp	x20, x25
  40d12c:	b.hi	40dd58 <ferror@plt+0xaf18>  // b.pmore
  40d130:	ldr	x0, [sp, #136]
  40d134:	add	x20, x0, x24
  40d138:	ldr	x2, [sp, #144]
  40d13c:	ldr	x1, [sp, #160]
  40d140:	mov	x0, x20
  40d144:	bl	402b00 <memcmp@plt>
  40d148:	cbnz	w0, 40dd58 <ferror@plt+0xaf18>
  40d14c:	ldr	w0, [sp, #112]
  40d150:	cbnz	w0, 40d178 <ferror@plt+0xa338>
  40d154:	ldrb	w20, [x20]
  40d158:	cmp	w20, #0x7e
  40d15c:	b.hi	40d644 <ferror@plt+0xa804>  // b.pmore
  40d160:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40d164:	add	x0, x0, #0x6a0
  40d168:	ldrh	w0, [x0, w20, uxtw #1]
  40d16c:	adr	x1, 40d178 <ferror@plt+0xa338>
  40d170:	add	x0, x1, w0, sxth #2
  40d174:	br	x0
  40d178:	mov	x24, x25
  40d17c:	mov	w25, w23
  40d180:	b	40dce0 <ferror@plt+0xaea0>
  40d184:	ldr	w0, [sp, #132]
  40d188:	cbnz	w0, 40d1a4 <ferror@plt+0xa364>
  40d18c:	ldr	x0, [sp, #184]
  40d190:	tbnz	w0, #0, 40da78 <ferror@plt+0xac38>
  40d194:	ldr	w0, [sp, #132]
  40d198:	mov	w22, w0
  40d19c:	mov	w19, w0
  40d1a0:	b	40d9b8 <ferror@plt+0xab78>
  40d1a4:	ldr	w0, [sp, #112]
  40d1a8:	cbnz	w0, 40dc94 <ferror@plt+0xae54>
  40d1ac:	mov	w22, w0
  40d1b0:	cmp	w23, #0x2
  40d1b4:	cset	w1, eq  // eq = none
  40d1b8:	ldr	w0, [sp, #124]
  40d1bc:	eor	w0, w0, #0x1
  40d1c0:	ands	w0, w1, w0
  40d1c4:	b.eq	40d228 <ferror@plt+0xa3e8>  // b.none
  40d1c8:	cmp	x26, x27
  40d1cc:	b.ls	40d1d8 <ferror@plt+0xa398>  // b.plast
  40d1d0:	mov	w1, #0x27                  	// #39
  40d1d4:	strb	w1, [x28, x27]
  40d1d8:	add	x1, x27, #0x1
  40d1dc:	cmp	x26, x1
  40d1e0:	b.ls	40d1ec <ferror@plt+0xa3ac>  // b.plast
  40d1e4:	mov	w2, #0x24                  	// #36
  40d1e8:	strb	w2, [x28, x1]
  40d1ec:	add	x1, x27, #0x2
  40d1f0:	cmp	x26, x1
  40d1f4:	b.ls	40d200 <ferror@plt+0xa3c0>  // b.plast
  40d1f8:	mov	w2, #0x27                  	// #39
  40d1fc:	strb	w2, [x28, x1]
  40d200:	add	x1, x27, #0x3
  40d204:	cmp	x26, x1
  40d208:	b.ls	40dd44 <ferror@plt+0xaf04>  // b.plast
  40d20c:	mov	w2, #0x5c                  	// #92
  40d210:	strb	w2, [x28, x1]
  40d214:	add	x27, x27, #0x4
  40d218:	str	w0, [sp, #124]
  40d21c:	mov	w19, #0x0                   	// #0
  40d220:	mov	w20, #0x30                  	// #48
  40d224:	b	40d9e0 <ferror@plt+0xaba0>
  40d228:	cmp	x26, x27
  40d22c:	b.hi	40d24c <ferror@plt+0xa40c>  // b.pmore
  40d230:	add	x2, x27, #0x1
  40d234:	cbnz	w21, 40d25c <ferror@plt+0xa41c>
  40d238:	mov	w0, w19
  40d23c:	mov	w19, w21
  40d240:	mov	x27, x2
  40d244:	mov	w20, #0x30                  	// #48
  40d248:	b	40d9b8 <ferror@plt+0xab78>
  40d24c:	mov	w1, #0x5c                  	// #92
  40d250:	strb	w1, [x28, x27]
  40d254:	add	x2, x27, #0x1
  40d258:	cbz	w21, 40d298 <ferror@plt+0xa458>
  40d25c:	add	x1, x24, #0x1
  40d260:	cmp	x1, x25
  40d264:	b.cs	40d280 <ferror@plt+0xa440>  // b.hs, b.nlast
  40d268:	ldr	x3, [sp, #136]
  40d26c:	ldrb	w1, [x3, x1]
  40d270:	sub	w1, w1, #0x30
  40d274:	and	w1, w1, #0xff
  40d278:	cmp	w1, #0x9
  40d27c:	b.ls	40d2ac <ferror@plt+0xa46c>  // b.plast
  40d280:	mov	w1, w0
  40d284:	mov	w0, w19
  40d288:	mov	w19, w1
  40d28c:	mov	x27, x2
  40d290:	mov	w20, #0x30                  	// #48
  40d294:	b	40d9c8 <ferror@plt+0xab88>
  40d298:	mov	w0, w19
  40d29c:	mov	w19, w21
  40d2a0:	mov	x27, x2
  40d2a4:	mov	w20, #0x30                  	// #48
  40d2a8:	b	40d9e0 <ferror@plt+0xaba0>
  40d2ac:	cmp	x26, x2
  40d2b0:	b.ls	40d2bc <ferror@plt+0xa47c>  // b.plast
  40d2b4:	mov	w1, #0x30                  	// #48
  40d2b8:	strb	w1, [x28, x2]
  40d2bc:	add	x1, x27, #0x2
  40d2c0:	cmp	x26, x1
  40d2c4:	b.ls	40d2d0 <ferror@plt+0xa490>  // b.plast
  40d2c8:	mov	w2, #0x30                  	// #48
  40d2cc:	strb	w2, [x28, x1]
  40d2d0:	add	x2, x27, #0x3
  40d2d4:	b	40d280 <ferror@plt+0xa440>
  40d2d8:	mov	w22, #0x0                   	// #0
  40d2dc:	cmp	w23, #0x2
  40d2e0:	b.eq	40d2fc <ferror@plt+0xa4bc>  // b.none
  40d2e4:	cmp	w23, #0x5
  40d2e8:	b.eq	40d310 <ferror@plt+0xa4d0>  // b.none
  40d2ec:	mov	w19, #0x0                   	// #0
  40d2f0:	mov	w0, #0x0                   	// #0
  40d2f4:	mov	w20, #0x3f                  	// #63
  40d2f8:	b	40d9b8 <ferror@plt+0xab78>
  40d2fc:	ldr	w0, [sp, #112]
  40d300:	cbnz	w0, 40dca0 <ferror@plt+0xae60>
  40d304:	mov	w19, w0
  40d308:	mov	w20, #0x3f                  	// #63
  40d30c:	b	40d62c <ferror@plt+0xa7ec>
  40d310:	ldr	x0, [sp, #184]
  40d314:	tbz	w0, #2, 40dae0 <ferror@plt+0xaca0>
  40d318:	add	x4, x24, #0x2
  40d31c:	cmp	x4, x25
  40d320:	b.cs	40daf0 <ferror@plt+0xacb0>  // b.hs, b.nlast
  40d324:	ldr	x0, [sp, #136]
  40d328:	add	x0, x0, x24
  40d32c:	ldrb	w20, [x0, #1]
  40d330:	cmp	w20, #0x3f
  40d334:	b.eq	40d348 <ferror@plt+0xa508>  // b.none
  40d338:	mov	w19, #0x0                   	// #0
  40d33c:	mov	w0, #0x0                   	// #0
  40d340:	mov	w20, #0x3f                  	// #63
  40d344:	b	40d9b8 <ferror@plt+0xab78>
  40d348:	ldr	x0, [sp, #136]
  40d34c:	ldrb	w3, [x0, x4]
  40d350:	cmp	w3, #0x3e
  40d354:	b.hi	40db00 <ferror@plt+0xacc0>  // b.pmore
  40d358:	mov	x1, #0x1                   	// #1
  40d35c:	lsl	x1, x1, x3
  40d360:	mov	w19, #0x0                   	// #0
  40d364:	mov	w0, #0x0                   	// #0
  40d368:	mov	x2, #0xa38200000000        	// #179778741075968
  40d36c:	movk	x2, #0x7000, lsl #48
  40d370:	tst	x1, x2
  40d374:	b.eq	40d9b8 <ferror@plt+0xab78>  // b.none
  40d378:	ldr	w0, [sp, #112]
  40d37c:	cbnz	w0, 40dd38 <ferror@plt+0xaef8>
  40d380:	cmp	x26, x27
  40d384:	b.ls	40d390 <ferror@plt+0xa550>  // b.plast
  40d388:	mov	w0, #0x3f                  	// #63
  40d38c:	strb	w0, [x28, x27]
  40d390:	add	x0, x27, #0x1
  40d394:	cmp	x26, x0
  40d398:	b.ls	40d3a4 <ferror@plt+0xa564>  // b.plast
  40d39c:	mov	w1, #0x22                  	// #34
  40d3a0:	strb	w1, [x28, x0]
  40d3a4:	add	x0, x27, #0x2
  40d3a8:	cmp	x26, x0
  40d3ac:	b.ls	40d3b8 <ferror@plt+0xa578>  // b.plast
  40d3b0:	mov	w1, #0x22                  	// #34
  40d3b4:	strb	w1, [x28, x0]
  40d3b8:	add	x0, x27, #0x3
  40d3bc:	cmp	x26, x0
  40d3c0:	b.ls	40d3cc <ferror@plt+0xa58c>  // b.plast
  40d3c4:	mov	w1, #0x3f                  	// #63
  40d3c8:	strb	w1, [x28, x0]
  40d3cc:	add	x27, x27, #0x4
  40d3d0:	ldr	w0, [sp, #112]
  40d3d4:	mov	w19, w0
  40d3d8:	mov	w20, w3
  40d3dc:	mov	x24, x4
  40d3e0:	b	40d9b8 <ferror@plt+0xab78>
  40d3e4:	mov	w22, #0x0                   	// #0
  40d3e8:	mov	w20, #0x8                   	// #8
  40d3ec:	mov	w0, #0x62                  	// #98
  40d3f0:	b	40d420 <ferror@plt+0xa5e0>
  40d3f4:	mov	w22, #0x0                   	// #0
  40d3f8:	mov	w20, #0xc                   	// #12
  40d3fc:	mov	w0, #0x66                  	// #102
  40d400:	b	40d420 <ferror@plt+0xa5e0>
  40d404:	mov	w22, #0x0                   	// #0
  40d408:	mov	w20, #0xd                   	// #13
  40d40c:	mov	w0, #0x72                  	// #114
  40d410:	ldr	w1, [sp, #112]
  40d414:	cmp	w1, #0x0
  40d418:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  40d41c:	b.eq	40d4f8 <ferror@plt+0xa6b8>  // b.none
  40d420:	ldr	w1, [sp, #132]
  40d424:	cbnz	w1, 40db34 <ferror@plt+0xacf4>
  40d428:	mov	w19, w1
  40d42c:	mov	w0, w1
  40d430:	b	40d9b8 <ferror@plt+0xab78>
  40d434:	mov	w22, #0x0                   	// #0
  40d438:	mov	w20, #0x9                   	// #9
  40d43c:	mov	w0, #0x74                  	// #116
  40d440:	b	40d410 <ferror@plt+0xa5d0>
  40d444:	mov	w22, #0x0                   	// #0
  40d448:	mov	w20, #0xb                   	// #11
  40d44c:	mov	w0, #0x76                  	// #118
  40d450:	b	40d420 <ferror@plt+0xa5e0>
  40d454:	mov	w22, #0x0                   	// #0
  40d458:	cmp	w23, #0x2
  40d45c:	b.eq	40d488 <ferror@plt+0xa648>  // b.none
  40d460:	ldr	w0, [sp, #132]
  40d464:	cmp	w0, #0x0
  40d468:	ldr	w0, [sp, #112]
  40d46c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d470:	ldr	w0, [sp, #176]
  40d474:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40d478:	b.ne	40db4c <ferror@plt+0xad0c>  // b.any
  40d47c:	mov	w20, #0x5c                  	// #92
  40d480:	mov	w0, w20
  40d484:	b	40d420 <ferror@plt+0xa5e0>
  40d488:	ldr	w0, [sp, #112]
  40d48c:	cbnz	w0, 40dcac <ferror@plt+0xae6c>
  40d490:	mov	w19, w0
  40d494:	mov	w20, #0x5c                  	// #92
  40d498:	eor	w0, w0, #0x1
  40d49c:	ldr	w1, [sp, #124]
  40d4a0:	and	w0, w1, w0
  40d4a4:	tst	w0, #0xff
  40d4a8:	b.eq	40da58 <ferror@plt+0xac18>  // b.none
  40d4ac:	cmp	x26, x27
  40d4b0:	b.ls	40d4bc <ferror@plt+0xa67c>  // b.plast
  40d4b4:	mov	w0, #0x27                  	// #39
  40d4b8:	strb	w0, [x28, x27]
  40d4bc:	add	x0, x27, #0x1
  40d4c0:	cmp	x26, x0
  40d4c4:	b.ls	40d4d0 <ferror@plt+0xa690>  // b.plast
  40d4c8:	mov	w1, #0x27                  	// #39
  40d4cc:	strb	w1, [x28, x0]
  40d4d0:	add	x27, x27, #0x2
  40d4d4:	str	wzr, [sp, #124]
  40d4d8:	b	40da58 <ferror@plt+0xac18>
  40d4dc:	mov	w0, #0x6e                  	// #110
  40d4e0:	b	40d410 <ferror@plt+0xa5d0>
  40d4e4:	mov	w0, #0x6e                  	// #110
  40d4e8:	b	40d410 <ferror@plt+0xa5d0>
  40d4ec:	mov	w22, #0x0                   	// #0
  40d4f0:	mov	w0, #0x6e                  	// #110
  40d4f4:	b	40d410 <ferror@plt+0xa5d0>
  40d4f8:	mov	x24, x25
  40d4fc:	mov	w25, #0x2                   	// #2
  40d500:	b	40dccc <ferror@plt+0xae8c>
  40d504:	mov	w0, #0x61                  	// #97
  40d508:	b	40d420 <ferror@plt+0xa5e0>
  40d50c:	mov	w0, #0x61                  	// #97
  40d510:	b	40d420 <ferror@plt+0xa5e0>
  40d514:	mov	w22, #0x0                   	// #0
  40d518:	cmp	x25, #0x1
  40d51c:	cset	w0, ne  // ne = any
  40d520:	cmn	x25, #0x1
  40d524:	b.eq	40d53c <ferror@plt+0xa6fc>  // b.none
  40d528:	cbnz	w0, 40db0c <ferror@plt+0xaccc>
  40d52c:	cbz	x24, 40d564 <ferror@plt+0xa724>
  40d530:	mov	w19, #0x0                   	// #0
  40d534:	mov	w0, #0x0                   	// #0
  40d538:	b	40d9b8 <ferror@plt+0xab78>
  40d53c:	ldr	x0, [sp, #136]
  40d540:	ldrb	w0, [x0, #1]
  40d544:	cmp	w0, #0x0
  40d548:	cset	w0, ne  // ne = any
  40d54c:	b	40d528 <ferror@plt+0xa6e8>
  40d550:	mov	w22, #0x0                   	// #0
  40d554:	b	40d52c <ferror@plt+0xa6ec>
  40d558:	mov	w22, #0x0                   	// #0
  40d55c:	b	40d564 <ferror@plt+0xa724>
  40d560:	mov	w19, w22
  40d564:	cmp	w23, #0x2
  40d568:	cset	w0, eq  // eq = none
  40d56c:	ldr	w1, [sp, #112]
  40d570:	ands	w0, w1, w0
  40d574:	b.eq	40d9b8 <ferror@plt+0xab78>  // b.none
  40d578:	mov	x24, x25
  40d57c:	mov	w25, #0x2                   	// #2
  40d580:	b	40dccc <ferror@plt+0xae8c>
  40d584:	ldr	w19, [sp, #112]
  40d588:	b	40d564 <ferror@plt+0xa724>
  40d58c:	mov	w22, #0x0                   	// #0
  40d590:	mov	w19, #0x0                   	// #0
  40d594:	b	40d564 <ferror@plt+0xa724>
  40d598:	mov	w22, #0x0                   	// #0
  40d59c:	cmp	w23, #0x2
  40d5a0:	b.eq	40d5b4 <ferror@plt+0xa774>  // b.none
  40d5a4:	str	w19, [sp, #180]
  40d5a8:	mov	w0, #0x0                   	// #0
  40d5ac:	mov	w20, #0x27                  	// #39
  40d5b0:	b	40d9b8 <ferror@plt+0xab78>
  40d5b4:	ldr	w0, [sp, #112]
  40d5b8:	cbnz	w0, 40dcb8 <ferror@plt+0xae78>
  40d5bc:	cmp	x26, #0x0
  40d5c0:	mov	x0, #0x0                   	// #0
  40d5c4:	ldr	x1, [sp, #192]
  40d5c8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  40d5cc:	b.eq	40d5fc <ferror@plt+0xa7bc>  // b.none
  40d5d0:	cmp	x26, x27
  40d5d4:	b.ls	40d5e0 <ferror@plt+0xa7a0>  // b.plast
  40d5d8:	mov	w0, #0x27                  	// #39
  40d5dc:	strb	w0, [x28, x27]
  40d5e0:	add	x0, x27, #0x1
  40d5e4:	cmp	x26, x0
  40d5e8:	b.ls	40d634 <ferror@plt+0xa7f4>  // b.plast
  40d5ec:	mov	w1, #0x5c                  	// #92
  40d5f0:	strb	w1, [x28, x0]
  40d5f4:	mov	x0, x26
  40d5f8:	ldr	x26, [sp, #192]
  40d5fc:	add	x1, x27, #0x2
  40d600:	cmp	x1, x0
  40d604:	b.cs	40d610 <ferror@plt+0xa7d0>  // b.hs, b.nlast
  40d608:	mov	w2, #0x27                  	// #39
  40d60c:	strb	w2, [x28, x1]
  40d610:	add	x27, x27, #0x3
  40d614:	str	w19, [sp, #180]
  40d618:	ldr	w1, [sp, #112]
  40d61c:	str	w1, [sp, #124]
  40d620:	str	x26, [sp, #192]
  40d624:	mov	x26, x0
  40d628:	mov	w20, #0x27                  	// #39
  40d62c:	mov	w0, #0x0                   	// #0
  40d630:	b	40d9e0 <ferror@plt+0xaba0>
  40d634:	mov	x0, x26
  40d638:	ldr	x26, [sp, #192]
  40d63c:	b	40d5fc <ferror@plt+0xa7bc>
  40d640:	mov	w22, #0x0                   	// #0
  40d644:	ldr	x0, [sp, #168]
  40d648:	cmp	x0, #0x1
  40d64c:	b.ne	40d688 <ferror@plt+0xa848>  // b.any
  40d650:	bl	402b60 <__ctype_b_loc@plt>
  40d654:	and	x1, x20, #0xff
  40d658:	ldr	x0, [x0]
  40d65c:	ldrh	w19, [x0, x1, lsl #1]
  40d660:	ubfx	x19, x19, #14, #1
  40d664:	ldr	x0, [sp, #168]
  40d668:	mov	x2, x0
  40d66c:	eor	w0, w19, #0x1
  40d670:	ldr	w1, [sp, #132]
  40d674:	and	w0, w1, w0
  40d678:	ands	w0, w0, #0xff
  40d67c:	b.eq	40d9b8 <ferror@plt+0xab78>  // b.none
  40d680:	mov	w19, #0x0                   	// #0
  40d684:	b	40d834 <ferror@plt+0xa9f4>
  40d688:	str	xzr, [sp, #232]
  40d68c:	cmn	x25, #0x1
  40d690:	b.eq	40d6b4 <ferror@plt+0xa874>  // b.none
  40d694:	mov	x0, #0x0                   	// #0
  40d698:	str	w21, [sp, #176]
  40d69c:	str	w20, [sp, #208]
  40d6a0:	str	w22, [sp, #212]
  40d6a4:	mov	x22, x0
  40d6a8:	str	x27, [sp, #216]
  40d6ac:	ldr	w27, [sp, #112]
  40d6b0:	b	40d784 <ferror@plt+0xa944>
  40d6b4:	ldr	x0, [sp, #136]
  40d6b8:	bl	402780 <strlen@plt>
  40d6bc:	mov	x25, x0
  40d6c0:	b	40d694 <ferror@plt+0xa854>
  40d6c4:	ldr	w20, [sp, #208]
  40d6c8:	mov	x2, x22
  40d6cc:	mov	x0, x21
  40d6d0:	ldr	w21, [sp, #176]
  40d6d4:	ldr	w22, [sp, #212]
  40d6d8:	ldr	x27, [sp, #216]
  40d6dc:	mov	w19, #0x0                   	// #0
  40d6e0:	cmp	x0, x25
  40d6e4:	b.cs	40d82c <ferror@plt+0xa9ec>  // b.hs, b.nlast
  40d6e8:	mov	x1, x2
  40d6ec:	ldr	x2, [sp, #136]
  40d6f0:	ldrb	w0, [x2, x0]
  40d6f4:	cbz	w0, 40d714 <ferror@plt+0xa8d4>
  40d6f8:	add	x1, x1, #0x1
  40d6fc:	add	x0, x24, x1
  40d700:	cmp	x25, x0
  40d704:	b.hi	40d6f0 <ferror@plt+0xa8b0>  // b.pmore
  40d708:	mov	x2, x1
  40d70c:	mov	w19, #0x0                   	// #0
  40d710:	b	40d82c <ferror@plt+0xa9ec>
  40d714:	mov	x2, x1
  40d718:	mov	w19, #0x0                   	// #0
  40d71c:	b	40d82c <ferror@plt+0xa9ec>
  40d720:	add	x1, x1, #0x1
  40d724:	cmp	x1, x21
  40d728:	b.eq	40d764 <ferror@plt+0xa924>  // b.none
  40d72c:	ldrb	w0, [x1]
  40d730:	sub	w0, w0, #0x5b
  40d734:	and	w0, w0, #0xff
  40d738:	cmp	w0, #0x21
  40d73c:	b.hi	40d720 <ferror@plt+0xa8e0>  // b.pmore
  40d740:	mov	x2, #0x1                   	// #1
  40d744:	lsl	x0, x2, x0
  40d748:	mov	x2, #0x2b                  	// #43
  40d74c:	movk	x2, #0x2, lsl #32
  40d750:	tst	x0, x2
  40d754:	b.eq	40d720 <ferror@plt+0xa8e0>  // b.none
  40d758:	mov	x24, x25
  40d75c:	mov	w25, #0x2                   	// #2
  40d760:	b	40dccc <ferror@plt+0xae8c>
  40d764:	ldr	w0, [sp, #228]
  40d768:	bl	402d90 <iswprint@plt>
  40d76c:	cmp	w0, #0x0
  40d770:	csel	w19, w19, wzr, ne  // ne = any
  40d774:	add	x22, x22, x20
  40d778:	add	x0, sp, #0xe8
  40d77c:	bl	402ac0 <mbsinit@plt>
  40d780:	cbnz	w0, 40d7e4 <ferror@plt+0xa9a4>
  40d784:	add	x21, x24, x22
  40d788:	add	x3, sp, #0xe8
  40d78c:	sub	x2, x25, x21
  40d790:	ldr	x0, [sp, #136]
  40d794:	add	x1, x0, x21
  40d798:	add	x0, sp, #0xe4
  40d79c:	bl	411128 <ferror@plt+0xe2e8>
  40d7a0:	mov	x20, x0
  40d7a4:	cbz	x0, 40d818 <ferror@plt+0xa9d8>
  40d7a8:	cmn	x0, #0x1
  40d7ac:	b.eq	40d7fc <ferror@plt+0xa9bc>  // b.none
  40d7b0:	cmn	x0, #0x2
  40d7b4:	b.eq	40d6c4 <ferror@plt+0xa884>  // b.none
  40d7b8:	cmp	w27, #0x0
  40d7bc:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  40d7c0:	b.ne	40d764 <ferror@plt+0xa924>  // b.any
  40d7c4:	cmp	x0, #0x1
  40d7c8:	b.ls	40d764 <ferror@plt+0xa924>  // b.plast
  40d7cc:	add	x1, x21, #0x1
  40d7d0:	ldr	x0, [sp, #136]
  40d7d4:	add	x1, x0, x1
  40d7d8:	add	x0, x0, x20
  40d7dc:	add	x21, x0, x21
  40d7e0:	b	40d72c <ferror@plt+0xa8ec>
  40d7e4:	ldr	w21, [sp, #176]
  40d7e8:	ldr	w20, [sp, #208]
  40d7ec:	mov	x2, x22
  40d7f0:	ldr	w22, [sp, #212]
  40d7f4:	ldr	x27, [sp, #216]
  40d7f8:	b	40d82c <ferror@plt+0xa9ec>
  40d7fc:	ldr	w21, [sp, #176]
  40d800:	ldr	w20, [sp, #208]
  40d804:	mov	x2, x22
  40d808:	ldr	w22, [sp, #212]
  40d80c:	ldr	x27, [sp, #216]
  40d810:	mov	w19, #0x0                   	// #0
  40d814:	b	40d82c <ferror@plt+0xa9ec>
  40d818:	ldr	w21, [sp, #176]
  40d81c:	ldr	w20, [sp, #208]
  40d820:	mov	x2, x22
  40d824:	ldr	w22, [sp, #212]
  40d828:	ldr	x27, [sp, #216]
  40d82c:	cmp	x2, #0x1
  40d830:	b.ls	40d66c <ferror@plt+0xa82c>  // b.plast
  40d834:	add	x5, x24, x2
  40d838:	mov	w0, #0x0                   	// #0
  40d83c:	eor	w1, w19, #0x1
  40d840:	ldr	w2, [sp, #132]
  40d844:	and	w1, w2, w1
  40d848:	and	w1, w1, #0xff
  40d84c:	mov	w3, w1
  40d850:	mov	w6, #0x5c                  	// #92
  40d854:	mov	w7, #0x24                  	// #36
  40d858:	ldr	w9, [sp, #112]
  40d85c:	ldr	w4, [sp, #124]
  40d860:	ldr	x8, [sp, #136]
  40d864:	b	40d8e0 <ferror@plt+0xaaa0>
  40d868:	cbz	w22, 40d87c <ferror@plt+0xaa3c>
  40d86c:	cmp	x26, x27
  40d870:	b.ls	40d878 <ferror@plt+0xaa38>  // b.plast
  40d874:	strb	w6, [x28, x27]
  40d878:	add	x27, x27, #0x1
  40d87c:	add	x2, x24, #0x1
  40d880:	cmp	x2, x5
  40d884:	b.cs	40d998 <ferror@plt+0xab58>  // b.hs, b.nlast
  40d888:	eor	w22, w0, #0x1
  40d88c:	and	w22, w4, w22
  40d890:	ands	w22, w22, #0xff
  40d894:	b.eq	40d9ac <ferror@plt+0xab6c>  // b.none
  40d898:	cmp	x26, x27
  40d89c:	b.ls	40d8a8 <ferror@plt+0xaa68>  // b.plast
  40d8a0:	mov	w4, #0x27                  	// #39
  40d8a4:	strb	w4, [x28, x27]
  40d8a8:	add	x4, x27, #0x1
  40d8ac:	cmp	x26, x4
  40d8b0:	b.ls	40d8bc <ferror@plt+0xaa7c>  // b.plast
  40d8b4:	mov	w10, #0x27                  	// #39
  40d8b8:	strb	w10, [x28, x4]
  40d8bc:	add	x27, x27, #0x2
  40d8c0:	mov	w22, w3
  40d8c4:	mov	x24, x2
  40d8c8:	mov	w4, w3
  40d8cc:	cmp	x26, x27
  40d8d0:	b.ls	40d8d8 <ferror@plt+0xaa98>  // b.plast
  40d8d4:	strb	w20, [x28, x27]
  40d8d8:	add	x27, x27, #0x1
  40d8dc:	ldrb	w20, [x8, x24]
  40d8e0:	cbz	w1, 40d868 <ferror@plt+0xaa28>
  40d8e4:	cbnz	w9, 40dc74 <ferror@plt+0xae34>
  40d8e8:	cmp	w23, #0x2
  40d8ec:	cset	w0, eq  // eq = none
  40d8f0:	eor	w2, w4, #0x1
  40d8f4:	ands	w0, w0, w2
  40d8f8:	b.eq	40d938 <ferror@plt+0xaaf8>  // b.none
  40d8fc:	cmp	x26, x27
  40d900:	b.ls	40d90c <ferror@plt+0xaacc>  // b.plast
  40d904:	mov	w2, #0x27                  	// #39
  40d908:	strb	w2, [x28, x27]
  40d90c:	add	x2, x27, #0x1
  40d910:	cmp	x26, x2
  40d914:	b.ls	40d91c <ferror@plt+0xaadc>  // b.plast
  40d918:	strb	w7, [x28, x2]
  40d91c:	add	x2, x27, #0x2
  40d920:	cmp	x26, x2
  40d924:	b.ls	40d930 <ferror@plt+0xaaf0>  // b.plast
  40d928:	mov	w4, #0x27                  	// #39
  40d92c:	strb	w4, [x28, x2]
  40d930:	add	x27, x27, #0x3
  40d934:	mov	w4, w0
  40d938:	cmp	x26, x27
  40d93c:	b.ls	40d944 <ferror@plt+0xab04>  // b.plast
  40d940:	strb	w6, [x28, x27]
  40d944:	add	x0, x27, #0x1
  40d948:	cmp	x26, x0
  40d94c:	b.ls	40d95c <ferror@plt+0xab1c>  // b.plast
  40d950:	lsr	w2, w20, #6
  40d954:	add	w2, w2, #0x30
  40d958:	strb	w2, [x28, x0]
  40d95c:	add	x0, x27, #0x2
  40d960:	cmp	x26, x0
  40d964:	b.ls	40d974 <ferror@plt+0xab34>  // b.plast
  40d968:	ubfx	x2, x20, #3, #3
  40d96c:	add	w2, w2, #0x30
  40d970:	strb	w2, [x28, x0]
  40d974:	add	x27, x27, #0x3
  40d978:	and	w20, w20, #0x7
  40d97c:	add	w20, w20, #0x30
  40d980:	add	x2, x24, #0x1
  40d984:	cmp	x5, x2
  40d988:	b.ls	40d9a0 <ferror@plt+0xab60>  // b.plast
  40d98c:	mov	w0, w3
  40d990:	mov	x24, x2
  40d994:	b	40d8cc <ferror@plt+0xaa8c>
  40d998:	str	w4, [sp, #124]
  40d99c:	b	40d498 <ferror@plt+0xa658>
  40d9a0:	str	w4, [sp, #124]
  40d9a4:	mov	w0, w1
  40d9a8:	b	40d498 <ferror@plt+0xa658>
  40d9ac:	mov	x24, x2
  40d9b0:	b	40d8cc <ferror@plt+0xaa8c>
  40d9b4:	mov	w0, w22
  40d9b8:	cmp	w21, #0x0
  40d9bc:	ldr	w1, [sp, #112]
  40d9c0:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  40d9c4:	b.eq	40d9e0 <ferror@plt+0xaba0>  // b.none
  40d9c8:	ldr	x2, [sp, #152]
  40d9cc:	cbz	x2, 40d9e0 <ferror@plt+0xaba0>
  40d9d0:	ubfx	x1, x20, #5, #8
  40d9d4:	ldr	w1, [x2, x1, lsl #2]
  40d9d8:	lsr	w1, w1, w20
  40d9dc:	tbnz	w1, #0, 40d9e4 <ferror@plt+0xaba4>
  40d9e0:	cbz	w22, 40d498 <ferror@plt+0xa658>
  40d9e4:	ldr	w0, [sp, #112]
  40d9e8:	cbnz	w0, 40dcc4 <ferror@plt+0xae84>
  40d9ec:	cmp	w23, #0x2
  40d9f0:	cset	w0, eq  // eq = none
  40d9f4:	ldr	w1, [sp, #124]
  40d9f8:	eor	w1, w1, #0x1
  40d9fc:	ands	w0, w0, w1
  40da00:	b.eq	40da44 <ferror@plt+0xac04>  // b.none
  40da04:	cmp	x26, x27
  40da08:	b.ls	40da14 <ferror@plt+0xabd4>  // b.plast
  40da0c:	mov	w1, #0x27                  	// #39
  40da10:	strb	w1, [x28, x27]
  40da14:	add	x1, x27, #0x1
  40da18:	cmp	x26, x1
  40da1c:	b.ls	40da28 <ferror@plt+0xabe8>  // b.plast
  40da20:	mov	w2, #0x24                  	// #36
  40da24:	strb	w2, [x28, x1]
  40da28:	add	x1, x27, #0x2
  40da2c:	cmp	x26, x1
  40da30:	b.ls	40da3c <ferror@plt+0xabfc>  // b.plast
  40da34:	mov	w2, #0x27                  	// #39
  40da38:	strb	w2, [x28, x1]
  40da3c:	add	x27, x27, #0x3
  40da40:	str	w0, [sp, #124]
  40da44:	cmp	x26, x27
  40da48:	b.ls	40da54 <ferror@plt+0xac14>  // b.plast
  40da4c:	mov	w0, #0x5c                  	// #92
  40da50:	strb	w0, [x28, x27]
  40da54:	add	x27, x27, #0x1
  40da58:	cmp	x27, x26
  40da5c:	b.cs	40da64 <ferror@plt+0xac24>  // b.hs, b.nlast
  40da60:	strb	w20, [x28, x27]
  40da64:	add	x27, x27, #0x1
  40da68:	cmp	w19, #0x0
  40da6c:	ldr	w0, [sp, #128]
  40da70:	csel	w0, w0, w19, ne  // ne = any
  40da74:	str	w0, [sp, #128]
  40da78:	add	x24, x24, #0x1
  40da7c:	cmp	x25, x24
  40da80:	cset	w19, ne  // ne = any
  40da84:	cmn	x25, #0x1
  40da88:	b.eq	40db5c <ferror@plt+0xad1c>  // b.none
  40da8c:	cbz	w19, 40db70 <ferror@plt+0xad30>
  40da90:	cmp	w23, #0x2
  40da94:	cset	w21, ne  // ne = any
  40da98:	ldr	w0, [sp, #132]
  40da9c:	and	w21, w0, w21
  40daa0:	ldr	x0, [sp, #144]
  40daa4:	cmp	x0, #0x0
  40daa8:	cset	w0, ne  // ne = any
  40daac:	str	w0, [sp, #176]
  40dab0:	csel	w22, w21, wzr, ne  // ne = any
  40dab4:	cbnz	w22, 40d108 <ferror@plt+0xa2c8>
  40dab8:	ldr	x0, [sp, #136]
  40dabc:	ldrb	w20, [x0, x24]
  40dac0:	cmp	w20, #0x7e
  40dac4:	b.hi	40d644 <ferror@plt+0xa804>  // b.pmore
  40dac8:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40dacc:	add	x0, x0, #0x7a0
  40dad0:	ldrh	w0, [x0, w20, uxtw #1]
  40dad4:	adr	x1, 40dae0 <ferror@plt+0xaca0>
  40dad8:	add	x0, x1, w0, sxth #2
  40dadc:	br	x0
  40dae0:	mov	w19, #0x0                   	// #0
  40dae4:	mov	w0, #0x0                   	// #0
  40dae8:	mov	w20, #0x3f                  	// #63
  40daec:	b	40d9b8 <ferror@plt+0xab78>
  40daf0:	mov	w19, #0x0                   	// #0
  40daf4:	mov	w0, #0x0                   	// #0
  40daf8:	mov	w20, #0x3f                  	// #63
  40dafc:	b	40d9b8 <ferror@plt+0xab78>
  40db00:	mov	w19, #0x0                   	// #0
  40db04:	mov	w0, #0x0                   	// #0
  40db08:	b	40d9b8 <ferror@plt+0xab78>
  40db0c:	mov	w19, #0x0                   	// #0
  40db10:	mov	w0, #0x0                   	// #0
  40db14:	b	40d9b8 <ferror@plt+0xab78>
  40db18:	mov	w19, w22
  40db1c:	ldr	w0, [sp, #112]
  40db20:	b	40d9b8 <ferror@plt+0xab78>
  40db24:	mov	w19, w22
  40db28:	mov	w22, #0x0                   	// #0
  40db2c:	mov	w0, #0x0                   	// #0
  40db30:	b	40d9b8 <ferror@plt+0xab78>
  40db34:	mov	w20, w0
  40db38:	mov	w19, #0x0                   	// #0
  40db3c:	b	40d9e4 <ferror@plt+0xaba4>
  40db40:	mov	w19, #0x0                   	// #0
  40db44:	mov	w20, #0x61                  	// #97
  40db48:	b	40d9e4 <ferror@plt+0xaba4>
  40db4c:	mov	w19, #0x0                   	// #0
  40db50:	mov	w0, #0x0                   	// #0
  40db54:	mov	w20, #0x5c                  	// #92
  40db58:	b	40d498 <ferror@plt+0xa658>
  40db5c:	ldr	x0, [sp, #136]
  40db60:	ldrb	w0, [x0, x24]
  40db64:	cmp	w0, #0x0
  40db68:	cset	w19, ne  // ne = any
  40db6c:	b	40da8c <ferror@plt+0xac4c>
  40db70:	cmp	w23, #0x2
  40db74:	cset	w1, eq  // eq = none
  40db78:	cmp	w1, #0x0
  40db7c:	ldr	w0, [sp, #112]
  40db80:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40db84:	ccmp	x27, #0x0, #0x0, ne  // ne = any
  40db88:	b.eq	40dc88 <ferror@plt+0xae48>  // b.none
  40db8c:	eor	w0, w0, #0x1
  40db90:	and	w0, w0, #0xff
  40db94:	cmp	w1, #0x0
  40db98:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40db9c:	cset	w1, ne  // ne = any
  40dba0:	ldr	w2, [sp, #180]
  40dba4:	ands	w1, w2, w1
  40dba8:	b.eq	40dc1c <ferror@plt+0xaddc>  // b.none
  40dbac:	ldr	w0, [sp, #128]
  40dbb0:	cbnz	w0, 40dbe4 <ferror@plt+0xada4>
  40dbb4:	cmp	x26, #0x0
  40dbb8:	cset	w0, eq  // eq = none
  40dbbc:	ldr	x2, [sp, #192]
  40dbc0:	cmp	x2, #0x0
  40dbc4:	csel	w0, w0, wzr, ne  // ne = any
  40dbc8:	str	w0, [sp, #180]
  40dbcc:	mov	w23, #0x2                   	// #2
  40dbd0:	cbz	w0, 40dc18 <ferror@plt+0xadd8>
  40dbd4:	ldr	w0, [sp, #128]
  40dbd8:	str	w0, [sp, #112]
  40dbdc:	ldr	x26, [sp, #192]
  40dbe0:	b	40ceac <ferror@plt+0xa06c>
  40dbe4:	ldr	x0, [sp, #240]
  40dbe8:	str	x0, [sp]
  40dbec:	ldr	x7, [sp, #200]
  40dbf0:	ldr	x6, [sp, #152]
  40dbf4:	ldr	w5, [sp, #184]
  40dbf8:	mov	w4, #0x5                   	// #5
  40dbfc:	mov	x3, x25
  40dc00:	ldr	x2, [sp, #136]
  40dc04:	ldr	x1, [sp, #192]
  40dc08:	mov	x0, x28
  40dc0c:	bl	40ce2c <ferror@plt+0x9fec>
  40dc10:	mov	x27, x0
  40dc14:	b	40dd14 <ferror@plt+0xaed4>
  40dc18:	mov	w0, w1
  40dc1c:	ldr	x1, [sp, #160]
  40dc20:	cmp	x1, #0x0
  40dc24:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40dc28:	b.eq	40dc64 <ferror@plt+0xae24>  // b.none
  40dc2c:	mov	x0, x1
  40dc30:	ldrb	w2, [x1]
  40dc34:	cbz	w2, 40dc64 <ferror@plt+0xae24>
  40dc38:	mov	x1, x27
  40dc3c:	sub	x0, x0, x27
  40dc40:	b	40dc50 <ferror@plt+0xae10>
  40dc44:	add	x1, x1, #0x1
  40dc48:	ldrb	w2, [x0, x1]
  40dc4c:	cbz	w2, 40dc60 <ferror@plt+0xae20>
  40dc50:	cmp	x26, x1
  40dc54:	b.ls	40dc44 <ferror@plt+0xae04>  // b.plast
  40dc58:	strb	w2, [x28, x1]
  40dc5c:	b	40dc44 <ferror@plt+0xae04>
  40dc60:	mov	x27, x1
  40dc64:	cmp	x26, x27
  40dc68:	b.ls	40dd14 <ferror@plt+0xaed4>  // b.plast
  40dc6c:	strb	wzr, [x28, x27]
  40dc70:	b	40dd14 <ferror@plt+0xaed4>
  40dc74:	mov	x24, x25
  40dc78:	mov	w25, w23
  40dc7c:	ldr	w0, [sp, #112]
  40dc80:	str	w0, [sp, #132]
  40dc84:	b	40dccc <ferror@plt+0xae8c>
  40dc88:	mov	x24, x25
  40dc8c:	mov	w25, #0x2                   	// #2
  40dc90:	b	40dccc <ferror@plt+0xae8c>
  40dc94:	mov	x24, x25
  40dc98:	mov	w25, w23
  40dc9c:	b	40dccc <ferror@plt+0xae8c>
  40dca0:	mov	x24, x25
  40dca4:	mov	w25, w23
  40dca8:	b	40dccc <ferror@plt+0xae8c>
  40dcac:	mov	x24, x25
  40dcb0:	mov	w25, w23
  40dcb4:	b	40dccc <ferror@plt+0xae8c>
  40dcb8:	mov	x24, x25
  40dcbc:	mov	w25, w23
  40dcc0:	b	40dccc <ferror@plt+0xae8c>
  40dcc4:	mov	x24, x25
  40dcc8:	mov	w25, w23
  40dccc:	ldr	w0, [sp, #132]
  40dcd0:	cmp	w0, #0x0
  40dcd4:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  40dcd8:	mov	w0, #0x4                   	// #4
  40dcdc:	csel	w25, w25, w0, ne  // ne = any
  40dce0:	ldr	x0, [sp, #240]
  40dce4:	str	x0, [sp]
  40dce8:	ldr	x7, [sp, #200]
  40dcec:	mov	x6, #0x0                   	// #0
  40dcf0:	ldr	w0, [sp, #184]
  40dcf4:	and	w5, w0, #0xfffffffd
  40dcf8:	mov	w4, w25
  40dcfc:	mov	x3, x24
  40dd00:	ldr	x2, [sp, #136]
  40dd04:	mov	x1, x26
  40dd08:	mov	x0, x28
  40dd0c:	bl	40ce2c <ferror@plt+0x9fec>
  40dd10:	mov	x27, x0
  40dd14:	mov	x0, x27
  40dd18:	ldp	x19, x20, [sp, #32]
  40dd1c:	ldp	x21, x22, [sp, #48]
  40dd20:	ldp	x23, x24, [sp, #64]
  40dd24:	ldp	x25, x26, [sp, #80]
  40dd28:	ldp	x27, x28, [sp, #96]
  40dd2c:	ldp	x29, x30, [sp, #16]
  40dd30:	add	sp, sp, #0xf0
  40dd34:	ret
  40dd38:	mov	x24, x25
  40dd3c:	mov	w25, w23
  40dd40:	b	40dce0 <ferror@plt+0xaea0>
  40dd44:	add	x27, x27, #0x4
  40dd48:	str	w0, [sp, #124]
  40dd4c:	mov	w19, #0x0                   	// #0
  40dd50:	mov	w20, #0x30                  	// #48
  40dd54:	b	40d9b8 <ferror@plt+0xab78>
  40dd58:	ldr	x0, [sp, #136]
  40dd5c:	ldrb	w20, [x0, x24]
  40dd60:	cmp	w20, #0x7e
  40dd64:	b.hi	40d640 <ferror@plt+0xa800>  // b.pmore
  40dd68:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40dd6c:	add	x0, x0, #0x8a0
  40dd70:	ldrh	w0, [x0, w20, uxtw #1]
  40dd74:	adr	x1, 40dd80 <ferror@plt+0xaf40>
  40dd78:	add	x0, x1, w0, sxth #2
  40dd7c:	br	x0
  40dd80:	sub	sp, sp, #0x80
  40dd84:	stp	x29, x30, [sp, #16]
  40dd88:	add	x29, sp, #0x10
  40dd8c:	stp	x19, x20, [sp, #32]
  40dd90:	stp	x21, x22, [sp, #48]
  40dd94:	stp	x23, x24, [sp, #64]
  40dd98:	stp	x25, x26, [sp, #80]
  40dd9c:	stp	x27, x28, [sp, #96]
  40dda0:	mov	w19, w0
  40dda4:	str	x1, [sp, #112]
  40dda8:	str	x2, [sp, #120]
  40ddac:	mov	x20, x3
  40ddb0:	bl	402db0 <__errno_location@plt>
  40ddb4:	mov	x23, x0
  40ddb8:	ldr	w28, [x0]
  40ddbc:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40ddc0:	ldr	x21, [x0, #1224]
  40ddc4:	tbnz	w19, #31, 40df08 <ferror@plt+0xb0c8>
  40ddc8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40ddcc:	ldr	w0, [x0, #1232]
  40ddd0:	cmp	w0, w19
  40ddd4:	b.gt	40de38 <ferror@plt+0xaff8>
  40ddd8:	mov	w0, #0x7fffffff            	// #2147483647
  40dddc:	cmp	w19, w0
  40dde0:	b.eq	40df0c <ferror@plt+0xb0cc>  // b.none
  40dde4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40dde8:	add	x0, x0, #0x4c8
  40ddec:	add	x0, x0, #0x10
  40ddf0:	cmp	x21, x0
  40ddf4:	b.eq	40df10 <ferror@plt+0xb0d0>  // b.none
  40ddf8:	add	w24, w19, #0x1
  40ddfc:	sbfiz	x1, x24, #4, #32
  40de00:	mov	x0, x21
  40de04:	bl	40fedc <ferror@plt+0xd09c>
  40de08:	mov	x21, x0
  40de0c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40de10:	str	x21, [x0, #1224]
  40de14:	adrp	x22, 428000 <_obstack_memory_used@@Base+0x16a28>
  40de18:	add	x22, x22, #0x4c8
  40de1c:	ldr	w0, [x22, #8]
  40de20:	sub	w2, w24, w0
  40de24:	sbfiz	x2, x2, #4, #32
  40de28:	mov	w1, #0x0                   	// #0
  40de2c:	add	x0, x21, w0, sxtw #4
  40de30:	bl	402990 <memset@plt>
  40de34:	str	w24, [x22, #8]
  40de38:	sbfiz	x19, x19, #4, #32
  40de3c:	add	x27, x21, x19
  40de40:	ldr	x25, [x21, x19]
  40de44:	ldr	x22, [x27, #8]
  40de48:	ldr	w24, [x20, #4]
  40de4c:	orr	w24, w24, #0x1
  40de50:	add	x26, x20, #0x8
  40de54:	ldr	x0, [x20, #48]
  40de58:	str	x0, [sp]
  40de5c:	ldr	x7, [x20, #40]
  40de60:	mov	x6, x26
  40de64:	mov	w5, w24
  40de68:	ldr	w4, [x20]
  40de6c:	ldr	x3, [sp, #120]
  40de70:	ldr	x2, [sp, #112]
  40de74:	mov	x1, x25
  40de78:	mov	x0, x22
  40de7c:	bl	40ce2c <ferror@plt+0x9fec>
  40de80:	cmp	x25, x0
  40de84:	b.hi	40dee0 <ferror@plt+0xb0a0>  // b.pmore
  40de88:	add	x25, x0, #0x1
  40de8c:	str	x25, [x21, x19]
  40de90:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40de94:	add	x0, x0, #0xbb8
  40de98:	cmp	x22, x0
  40de9c:	b.eq	40dea8 <ferror@plt+0xb068>  // b.none
  40dea0:	mov	x0, x22
  40dea4:	bl	402ba0 <free@plt>
  40dea8:	mov	x0, x25
  40deac:	bl	40fe60 <ferror@plt+0xd020>
  40deb0:	mov	x22, x0
  40deb4:	str	x0, [x27, #8]
  40deb8:	ldr	x1, [x20, #48]
  40debc:	str	x1, [sp]
  40dec0:	ldr	x7, [x20, #40]
  40dec4:	mov	x6, x26
  40dec8:	mov	w5, w24
  40decc:	ldr	w4, [x20]
  40ded0:	ldr	x3, [sp, #120]
  40ded4:	ldr	x2, [sp, #112]
  40ded8:	mov	x1, x25
  40dedc:	bl	40ce2c <ferror@plt+0x9fec>
  40dee0:	str	w28, [x23]
  40dee4:	mov	x0, x22
  40dee8:	ldp	x19, x20, [sp, #32]
  40deec:	ldp	x21, x22, [sp, #48]
  40def0:	ldp	x23, x24, [sp, #64]
  40def4:	ldp	x25, x26, [sp, #80]
  40def8:	ldp	x27, x28, [sp, #96]
  40defc:	ldp	x29, x30, [sp, #16]
  40df00:	add	sp, sp, #0x80
  40df04:	ret
  40df08:	bl	402a80 <abort@plt>
  40df0c:	bl	4100ec <ferror@plt+0xd2ac>
  40df10:	add	w24, w19, #0x1
  40df14:	sbfiz	x1, x24, #4, #32
  40df18:	mov	x0, #0x0                   	// #0
  40df1c:	bl	40fedc <ferror@plt+0xd09c>
  40df20:	mov	x21, x0
  40df24:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40df28:	add	x1, x0, #0x4c8
  40df2c:	str	x21, [x0, #1224]
  40df30:	ldp	x0, x1, [x1, #16]
  40df34:	stp	x0, x1, [x21]
  40df38:	b	40de14 <ferror@plt+0xafd4>
  40df3c:	stp	x29, x30, [sp, #-48]!
  40df40:	mov	x29, sp
  40df44:	stp	x19, x20, [sp, #16]
  40df48:	str	x21, [sp, #32]
  40df4c:	mov	x20, x0
  40df50:	bl	402db0 <__errno_location@plt>
  40df54:	mov	x19, x0
  40df58:	ldr	w21, [x0]
  40df5c:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x16a28>
  40df60:	add	x2, x2, #0xbb8
  40df64:	add	x2, x2, #0x100
  40df68:	cmp	x20, #0x0
  40df6c:	mov	x1, #0x38                  	// #56
  40df70:	csel	x0, x2, x20, eq  // eq = none
  40df74:	bl	41008c <ferror@plt+0xd24c>
  40df78:	str	w21, [x19]
  40df7c:	ldp	x19, x20, [sp, #16]
  40df80:	ldr	x21, [sp, #32]
  40df84:	ldp	x29, x30, [sp], #48
  40df88:	ret
  40df8c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  40df90:	add	x1, x1, #0xbb8
  40df94:	add	x1, x1, #0x100
  40df98:	cmp	x0, #0x0
  40df9c:	csel	x0, x1, x0, eq  // eq = none
  40dfa0:	ldr	w0, [x0]
  40dfa4:	ret
  40dfa8:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x16a28>
  40dfac:	add	x2, x2, #0xbb8
  40dfb0:	add	x2, x2, #0x100
  40dfb4:	cmp	x0, #0x0
  40dfb8:	csel	x0, x2, x0, eq  // eq = none
  40dfbc:	str	w1, [x0]
  40dfc0:	ret
  40dfc4:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  40dfc8:	add	x3, x3, #0xbb8
  40dfcc:	add	x3, x3, #0x100
  40dfd0:	cmp	x0, #0x0
  40dfd4:	csel	x0, x3, x0, eq  // eq = none
  40dfd8:	add	x0, x0, #0x8
  40dfdc:	ubfx	x4, x1, #5, #3
  40dfe0:	and	w1, w1, #0x1f
  40dfe4:	ldr	w5, [x0, x4, lsl #2]
  40dfe8:	lsr	w3, w5, w1
  40dfec:	eor	w2, w3, w2
  40dff0:	and	w2, w2, #0x1
  40dff4:	lsl	w2, w2, w1
  40dff8:	eor	w2, w2, w5
  40dffc:	str	w2, [x0, x4, lsl #2]
  40e000:	and	w0, w3, #0x1
  40e004:	ret
  40e008:	mov	x2, x0
  40e00c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e010:	add	x0, x0, #0xbb8
  40e014:	add	x0, x0, #0x100
  40e018:	cmp	x2, #0x0
  40e01c:	csel	x2, x0, x2, eq  // eq = none
  40e020:	ldr	w0, [x2, #4]
  40e024:	str	w1, [x2, #4]
  40e028:	ret
  40e02c:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e030:	add	x3, x3, #0xbb8
  40e034:	add	x3, x3, #0x100
  40e038:	cmp	x0, #0x0
  40e03c:	csel	x0, x3, x0, eq  // eq = none
  40e040:	mov	w3, #0xa                   	// #10
  40e044:	str	w3, [x0]
  40e048:	cmp	x1, #0x0
  40e04c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40e050:	b.eq	40e060 <ferror@plt+0xb220>  // b.none
  40e054:	str	x1, [x0, #40]
  40e058:	str	x2, [x0, #48]
  40e05c:	ret
  40e060:	stp	x29, x30, [sp, #-16]!
  40e064:	mov	x29, sp
  40e068:	bl	402a80 <abort@plt>
  40e06c:	sub	sp, sp, #0x60
  40e070:	stp	x29, x30, [sp, #16]
  40e074:	add	x29, sp, #0x10
  40e078:	stp	x19, x20, [sp, #32]
  40e07c:	stp	x21, x22, [sp, #48]
  40e080:	stp	x23, x24, [sp, #64]
  40e084:	str	x25, [sp, #80]
  40e088:	mov	x21, x0
  40e08c:	mov	x22, x1
  40e090:	mov	x23, x2
  40e094:	mov	x24, x3
  40e098:	mov	x19, x4
  40e09c:	adrp	x4, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e0a0:	add	x4, x4, #0xbb8
  40e0a4:	add	x4, x4, #0x100
  40e0a8:	cmp	x19, #0x0
  40e0ac:	csel	x19, x4, x19, eq  // eq = none
  40e0b0:	bl	402db0 <__errno_location@plt>
  40e0b4:	mov	x20, x0
  40e0b8:	ldr	w25, [x0]
  40e0bc:	ldr	x7, [x19, #40]
  40e0c0:	ldr	w5, [x19, #4]
  40e0c4:	ldr	w4, [x19]
  40e0c8:	ldr	x0, [x19, #48]
  40e0cc:	str	x0, [sp]
  40e0d0:	add	x6, x19, #0x8
  40e0d4:	mov	x3, x24
  40e0d8:	mov	x2, x23
  40e0dc:	mov	x1, x22
  40e0e0:	mov	x0, x21
  40e0e4:	bl	40ce2c <ferror@plt+0x9fec>
  40e0e8:	str	w25, [x20]
  40e0ec:	ldp	x19, x20, [sp, #32]
  40e0f0:	ldp	x21, x22, [sp, #48]
  40e0f4:	ldp	x23, x24, [sp, #64]
  40e0f8:	ldr	x25, [sp, #80]
  40e0fc:	ldp	x29, x30, [sp, #16]
  40e100:	add	sp, sp, #0x60
  40e104:	ret
  40e108:	sub	sp, sp, #0x80
  40e10c:	stp	x29, x30, [sp, #16]
  40e110:	add	x29, sp, #0x10
  40e114:	stp	x19, x20, [sp, #32]
  40e118:	stp	x21, x22, [sp, #48]
  40e11c:	stp	x23, x24, [sp, #64]
  40e120:	stp	x25, x26, [sp, #80]
  40e124:	stp	x27, x28, [sp, #96]
  40e128:	mov	x22, x0
  40e12c:	mov	x23, x1
  40e130:	mov	x20, x2
  40e134:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e138:	add	x0, x0, #0xbb8
  40e13c:	add	x0, x0, #0x100
  40e140:	cmp	x3, #0x0
  40e144:	csel	x19, x0, x3, eq  // eq = none
  40e148:	bl	402db0 <__errno_location@plt>
  40e14c:	mov	x21, x0
  40e150:	ldr	w28, [x0]
  40e154:	cmp	x20, #0x0
  40e158:	cset	w24, eq  // eq = none
  40e15c:	ldr	w0, [x19, #4]
  40e160:	orr	w24, w24, w0
  40e164:	add	x27, x19, #0x8
  40e168:	ldr	x7, [x19, #40]
  40e16c:	ldr	w4, [x19]
  40e170:	ldr	x0, [x19, #48]
  40e174:	str	x0, [sp]
  40e178:	mov	x6, x27
  40e17c:	mov	w5, w24
  40e180:	mov	x3, x23
  40e184:	mov	x2, x22
  40e188:	mov	x1, #0x0                   	// #0
  40e18c:	mov	x0, #0x0                   	// #0
  40e190:	bl	40ce2c <ferror@plt+0x9fec>
  40e194:	mov	x25, x0
  40e198:	add	x26, x0, #0x1
  40e19c:	mov	x0, x26
  40e1a0:	bl	40fe60 <ferror@plt+0xd020>
  40e1a4:	str	x0, [sp, #120]
  40e1a8:	ldr	x7, [x19, #40]
  40e1ac:	ldr	w4, [x19]
  40e1b0:	ldr	x1, [x19, #48]
  40e1b4:	str	x1, [sp]
  40e1b8:	mov	x6, x27
  40e1bc:	mov	w5, w24
  40e1c0:	mov	x3, x23
  40e1c4:	mov	x2, x22
  40e1c8:	mov	x1, x26
  40e1cc:	bl	40ce2c <ferror@plt+0x9fec>
  40e1d0:	str	w28, [x21]
  40e1d4:	cbz	x20, 40e1dc <ferror@plt+0xb39c>
  40e1d8:	str	x25, [x20]
  40e1dc:	ldr	x0, [sp, #120]
  40e1e0:	ldp	x19, x20, [sp, #32]
  40e1e4:	ldp	x21, x22, [sp, #48]
  40e1e8:	ldp	x23, x24, [sp, #64]
  40e1ec:	ldp	x25, x26, [sp, #80]
  40e1f0:	ldp	x27, x28, [sp, #96]
  40e1f4:	ldp	x29, x30, [sp, #16]
  40e1f8:	add	sp, sp, #0x80
  40e1fc:	ret
  40e200:	stp	x29, x30, [sp, #-16]!
  40e204:	mov	x29, sp
  40e208:	mov	x3, x2
  40e20c:	mov	x2, #0x0                   	// #0
  40e210:	bl	40e108 <ferror@plt+0xb2c8>
  40e214:	ldp	x29, x30, [sp], #16
  40e218:	ret
  40e21c:	stp	x29, x30, [sp, #-48]!
  40e220:	mov	x29, sp
  40e224:	stp	x19, x20, [sp, #16]
  40e228:	str	x21, [sp, #32]
  40e22c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e230:	add	x1, x0, #0x4c8
  40e234:	ldr	x21, [x0, #1224]
  40e238:	ldr	w20, [x1, #8]
  40e23c:	cmp	w20, #0x1
  40e240:	b.le	40e264 <ferror@plt+0xb424>
  40e244:	add	x19, x21, #0x18
  40e248:	sub	w20, w20, #0x2
  40e24c:	add	x0, x21, #0x28
  40e250:	add	x20, x0, x20, lsl #4
  40e254:	ldr	x0, [x19], #16
  40e258:	bl	402ba0 <free@plt>
  40e25c:	cmp	x19, x20
  40e260:	b.ne	40e254 <ferror@plt+0xb414>  // b.any
  40e264:	ldr	x0, [x21, #8]
  40e268:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e26c:	add	x1, x1, #0xbb8
  40e270:	cmp	x0, x1
  40e274:	b.eq	40e298 <ferror@plt+0xb458>  // b.none
  40e278:	bl	402ba0 <free@plt>
  40e27c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e280:	add	x0, x0, #0x4c8
  40e284:	mov	x1, #0x100                 	// #256
  40e288:	str	x1, [x0, #16]
  40e28c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e290:	add	x1, x1, #0xbb8
  40e294:	str	x1, [x0, #24]
  40e298:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e29c:	add	x0, x0, #0x4c8
  40e2a0:	add	x0, x0, #0x10
  40e2a4:	cmp	x21, x0
  40e2a8:	b.eq	40e2c4 <ferror@plt+0xb484>  // b.none
  40e2ac:	mov	x0, x21
  40e2b0:	bl	402ba0 <free@plt>
  40e2b4:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e2b8:	add	x0, x1, #0x4c8
  40e2bc:	add	x0, x0, #0x10
  40e2c0:	str	x0, [x1, #1224]
  40e2c4:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e2c8:	mov	w1, #0x1                   	// #1
  40e2cc:	str	w1, [x0, #1232]
  40e2d0:	ldp	x19, x20, [sp, #16]
  40e2d4:	ldr	x21, [sp, #32]
  40e2d8:	ldp	x29, x30, [sp], #48
  40e2dc:	ret
  40e2e0:	stp	x29, x30, [sp, #-16]!
  40e2e4:	mov	x29, sp
  40e2e8:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e2ec:	add	x3, x3, #0xbb8
  40e2f0:	add	x3, x3, #0x100
  40e2f4:	mov	x2, #0xffffffffffffffff    	// #-1
  40e2f8:	bl	40dd80 <ferror@plt+0xaf40>
  40e2fc:	ldp	x29, x30, [sp], #16
  40e300:	ret
  40e304:	stp	x29, x30, [sp, #-16]!
  40e308:	mov	x29, sp
  40e30c:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e310:	add	x3, x3, #0xbb8
  40e314:	add	x3, x3, #0x100
  40e318:	bl	40dd80 <ferror@plt+0xaf40>
  40e31c:	ldp	x29, x30, [sp], #16
  40e320:	ret
  40e324:	stp	x29, x30, [sp, #-16]!
  40e328:	mov	x29, sp
  40e32c:	mov	x1, x0
  40e330:	mov	w0, #0x0                   	// #0
  40e334:	bl	40e2e0 <ferror@plt+0xb4a0>
  40e338:	ldp	x29, x30, [sp], #16
  40e33c:	ret
  40e340:	stp	x29, x30, [sp, #-16]!
  40e344:	mov	x29, sp
  40e348:	mov	x2, x1
  40e34c:	mov	x1, x0
  40e350:	mov	w0, #0x0                   	// #0
  40e354:	bl	40e304 <ferror@plt+0xb4c4>
  40e358:	ldp	x29, x30, [sp], #16
  40e35c:	ret
  40e360:	stp	x29, x30, [sp, #-96]!
  40e364:	mov	x29, sp
  40e368:	stp	x19, x20, [sp, #16]
  40e36c:	mov	w19, w0
  40e370:	mov	w0, w1
  40e374:	mov	x20, x2
  40e378:	add	x8, sp, #0x28
  40e37c:	bl	40ccac <ferror@plt+0x9e6c>
  40e380:	add	x3, sp, #0x28
  40e384:	mov	x2, #0xffffffffffffffff    	// #-1
  40e388:	mov	x1, x20
  40e38c:	mov	w0, w19
  40e390:	bl	40dd80 <ferror@plt+0xaf40>
  40e394:	ldp	x19, x20, [sp, #16]
  40e398:	ldp	x29, x30, [sp], #96
  40e39c:	ret
  40e3a0:	stp	x29, x30, [sp, #-112]!
  40e3a4:	mov	x29, sp
  40e3a8:	stp	x19, x20, [sp, #16]
  40e3ac:	str	x21, [sp, #32]
  40e3b0:	mov	w19, w0
  40e3b4:	mov	w0, w1
  40e3b8:	mov	x20, x2
  40e3bc:	mov	x21, x3
  40e3c0:	add	x8, sp, #0x38
  40e3c4:	bl	40ccac <ferror@plt+0x9e6c>
  40e3c8:	add	x3, sp, #0x38
  40e3cc:	mov	x2, x21
  40e3d0:	mov	x1, x20
  40e3d4:	mov	w0, w19
  40e3d8:	bl	40dd80 <ferror@plt+0xaf40>
  40e3dc:	ldp	x19, x20, [sp, #16]
  40e3e0:	ldr	x21, [sp, #32]
  40e3e4:	ldp	x29, x30, [sp], #112
  40e3e8:	ret
  40e3ec:	stp	x29, x30, [sp, #-16]!
  40e3f0:	mov	x29, sp
  40e3f4:	mov	x2, x1
  40e3f8:	mov	w1, w0
  40e3fc:	mov	w0, #0x0                   	// #0
  40e400:	bl	40e360 <ferror@plt+0xb520>
  40e404:	ldp	x29, x30, [sp], #16
  40e408:	ret
  40e40c:	stp	x29, x30, [sp, #-16]!
  40e410:	mov	x29, sp
  40e414:	mov	x3, x2
  40e418:	mov	x2, x1
  40e41c:	mov	w1, w0
  40e420:	mov	w0, #0x0                   	// #0
  40e424:	bl	40e3a0 <ferror@plt+0xb560>
  40e428:	ldp	x29, x30, [sp], #16
  40e42c:	ret
  40e430:	stp	x29, x30, [sp, #-96]!
  40e434:	mov	x29, sp
  40e438:	stp	x19, x20, [sp, #16]
  40e43c:	mov	x19, x0
  40e440:	mov	x20, x1
  40e444:	and	w1, w2, #0xff
  40e448:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e44c:	add	x2, x2, #0xbb8
  40e450:	add	x0, x2, #0x100
  40e454:	ldp	x2, x3, [x2, #256]
  40e458:	stp	x2, x3, [sp, #40]
  40e45c:	ldp	x2, x3, [x0, #16]
  40e460:	stp	x2, x3, [sp, #56]
  40e464:	ldp	x2, x3, [x0, #32]
  40e468:	stp	x2, x3, [sp, #72]
  40e46c:	ldr	x0, [x0, #48]
  40e470:	str	x0, [sp, #88]
  40e474:	mov	w2, #0x1                   	// #1
  40e478:	add	x0, sp, #0x28
  40e47c:	bl	40dfc4 <ferror@plt+0xb184>
  40e480:	add	x3, sp, #0x28
  40e484:	mov	x2, x20
  40e488:	mov	x1, x19
  40e48c:	mov	w0, #0x0                   	// #0
  40e490:	bl	40dd80 <ferror@plt+0xaf40>
  40e494:	ldp	x19, x20, [sp, #16]
  40e498:	ldp	x29, x30, [sp], #96
  40e49c:	ret
  40e4a0:	stp	x29, x30, [sp, #-16]!
  40e4a4:	mov	x29, sp
  40e4a8:	mov	w2, w1
  40e4ac:	mov	x1, #0xffffffffffffffff    	// #-1
  40e4b0:	bl	40e430 <ferror@plt+0xb5f0>
  40e4b4:	ldp	x29, x30, [sp], #16
  40e4b8:	ret
  40e4bc:	stp	x29, x30, [sp, #-16]!
  40e4c0:	mov	x29, sp
  40e4c4:	mov	w1, #0x3a                  	// #58
  40e4c8:	bl	40e4a0 <ferror@plt+0xb660>
  40e4cc:	ldp	x29, x30, [sp], #16
  40e4d0:	ret
  40e4d4:	stp	x29, x30, [sp, #-16]!
  40e4d8:	mov	x29, sp
  40e4dc:	mov	w2, #0x3a                  	// #58
  40e4e0:	bl	40e430 <ferror@plt+0xb5f0>
  40e4e4:	ldp	x29, x30, [sp], #16
  40e4e8:	ret
  40e4ec:	stp	x29, x30, [sp, #-160]!
  40e4f0:	mov	x29, sp
  40e4f4:	stp	x19, x20, [sp, #16]
  40e4f8:	mov	w19, w0
  40e4fc:	mov	w0, w1
  40e500:	mov	x20, x2
  40e504:	add	x8, sp, #0x20
  40e508:	bl	40ccac <ferror@plt+0x9e6c>
  40e50c:	ldp	x0, x1, [sp, #32]
  40e510:	stp	x0, x1, [sp, #104]
  40e514:	ldp	x0, x1, [sp, #48]
  40e518:	stp	x0, x1, [sp, #120]
  40e51c:	ldp	x0, x1, [sp, #64]
  40e520:	stp	x0, x1, [sp, #136]
  40e524:	ldr	x0, [sp, #80]
  40e528:	str	x0, [sp, #152]
  40e52c:	mov	w2, #0x1                   	// #1
  40e530:	mov	w1, #0x3a                  	// #58
  40e534:	add	x0, sp, #0x68
  40e538:	bl	40dfc4 <ferror@plt+0xb184>
  40e53c:	add	x3, sp, #0x68
  40e540:	mov	x2, #0xffffffffffffffff    	// #-1
  40e544:	mov	x1, x20
  40e548:	mov	w0, w19
  40e54c:	bl	40dd80 <ferror@plt+0xaf40>
  40e550:	ldp	x19, x20, [sp, #16]
  40e554:	ldp	x29, x30, [sp], #160
  40e558:	ret
  40e55c:	stp	x29, x30, [sp, #-112]!
  40e560:	mov	x29, sp
  40e564:	stp	x19, x20, [sp, #16]
  40e568:	str	x21, [sp, #32]
  40e56c:	mov	w19, w0
  40e570:	mov	x20, x3
  40e574:	mov	x21, x4
  40e578:	adrp	x5, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e57c:	add	x5, x5, #0xbb8
  40e580:	add	x0, x5, #0x100
  40e584:	ldp	x4, x5, [x5, #256]
  40e588:	stp	x4, x5, [sp, #56]
  40e58c:	ldp	x4, x5, [x0, #16]
  40e590:	stp	x4, x5, [sp, #72]
  40e594:	ldp	x4, x5, [x0, #32]
  40e598:	stp	x4, x5, [sp, #88]
  40e59c:	ldr	x0, [x0, #48]
  40e5a0:	str	x0, [sp, #104]
  40e5a4:	add	x0, sp, #0x38
  40e5a8:	bl	40e02c <ferror@plt+0xb1ec>
  40e5ac:	add	x3, sp, #0x38
  40e5b0:	mov	x2, x21
  40e5b4:	mov	x1, x20
  40e5b8:	mov	w0, w19
  40e5bc:	bl	40dd80 <ferror@plt+0xaf40>
  40e5c0:	ldp	x19, x20, [sp, #16]
  40e5c4:	ldr	x21, [sp, #32]
  40e5c8:	ldp	x29, x30, [sp], #112
  40e5cc:	ret
  40e5d0:	stp	x29, x30, [sp, #-16]!
  40e5d4:	mov	x29, sp
  40e5d8:	mov	x4, #0xffffffffffffffff    	// #-1
  40e5dc:	bl	40e55c <ferror@plt+0xb71c>
  40e5e0:	ldp	x29, x30, [sp], #16
  40e5e4:	ret
  40e5e8:	stp	x29, x30, [sp, #-16]!
  40e5ec:	mov	x29, sp
  40e5f0:	mov	x3, x2
  40e5f4:	mov	x2, x1
  40e5f8:	mov	x1, x0
  40e5fc:	mov	w0, #0x0                   	// #0
  40e600:	bl	40e5d0 <ferror@plt+0xb790>
  40e604:	ldp	x29, x30, [sp], #16
  40e608:	ret
  40e60c:	stp	x29, x30, [sp, #-16]!
  40e610:	mov	x29, sp
  40e614:	mov	x4, x3
  40e618:	mov	x3, x2
  40e61c:	mov	x2, x1
  40e620:	mov	x1, x0
  40e624:	mov	w0, #0x0                   	// #0
  40e628:	bl	40e55c <ferror@plt+0xb71c>
  40e62c:	ldp	x29, x30, [sp], #16
  40e630:	ret
  40e634:	stp	x29, x30, [sp, #-16]!
  40e638:	mov	x29, sp
  40e63c:	adrp	x3, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e640:	add	x3, x3, #0x4c8
  40e644:	add	x3, x3, #0x20
  40e648:	bl	40dd80 <ferror@plt+0xaf40>
  40e64c:	ldp	x29, x30, [sp], #16
  40e650:	ret
  40e654:	stp	x29, x30, [sp, #-16]!
  40e658:	mov	x29, sp
  40e65c:	mov	x2, x1
  40e660:	mov	x1, x0
  40e664:	mov	w0, #0x0                   	// #0
  40e668:	bl	40e634 <ferror@plt+0xb7f4>
  40e66c:	ldp	x29, x30, [sp], #16
  40e670:	ret
  40e674:	stp	x29, x30, [sp, #-16]!
  40e678:	mov	x29, sp
  40e67c:	mov	x2, #0xffffffffffffffff    	// #-1
  40e680:	bl	40e634 <ferror@plt+0xb7f4>
  40e684:	ldp	x29, x30, [sp], #16
  40e688:	ret
  40e68c:	stp	x29, x30, [sp, #-16]!
  40e690:	mov	x29, sp
  40e694:	mov	x1, x0
  40e698:	mov	w0, #0x0                   	// #0
  40e69c:	bl	40e674 <ferror@plt+0xb834>
  40e6a0:	ldp	x29, x30, [sp], #16
  40e6a4:	ret
  40e6a8:	stp	x29, x30, [sp, #-48]!
  40e6ac:	mov	x29, sp
  40e6b0:	stp	x19, x20, [sp, #16]
  40e6b4:	stp	x21, x22, [sp, #32]
  40e6b8:	cbz	x0, 40e708 <ferror@plt+0xb8c8>
  40e6bc:	mov	x19, x0
  40e6c0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  40e6c4:	ldr	w22, [x0, #1216]
  40e6c8:	bl	402db0 <__errno_location@plt>
  40e6cc:	ldr	w21, [x0]
  40e6d0:	cbnz	w21, 40e70c <ferror@plt+0xb8cc>
  40e6d4:	mov	w2, #0x5                   	// #5
  40e6d8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40e6dc:	add	x1, x1, #0xa20
  40e6e0:	mov	x0, #0x0                   	// #0
  40e6e4:	bl	402d20 <dcgettext@plt>
  40e6e8:	mov	x20, x0
  40e6ec:	mov	x0, x19
  40e6f0:	bl	40e68c <ferror@plt+0xb84c>
  40e6f4:	mov	x3, x0
  40e6f8:	mov	x2, x20
  40e6fc:	mov	w1, w21
  40e700:	mov	w0, w22
  40e704:	bl	4027b0 <error@plt>
  40e708:	bl	402a80 <abort@plt>
  40e70c:	mov	w2, #0x5                   	// #5
  40e710:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40e714:	add	x1, x1, #0xa30
  40e718:	mov	x0, #0x0                   	// #0
  40e71c:	bl	402d20 <dcgettext@plt>
  40e720:	mov	x20, x0
  40e724:	b	40e6ec <ferror@plt+0xb8ac>
  40e728:	stp	x29, x30, [sp, #-64]!
  40e72c:	mov	x29, sp
  40e730:	stp	x19, x20, [sp, #16]
  40e734:	cbz	x1, 40e7ac <ferror@plt+0xb96c>
  40e738:	stp	x21, x22, [sp, #32]
  40e73c:	mov	x21, x0
  40e740:	mov	x20, x1
  40e744:	cbz	x0, 40e81c <ferror@plt+0xb9dc>
  40e748:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40e74c:	add	x1, x1, #0xa40
  40e750:	bl	4117a0 <_obstack_memory_used@@Base+0x1c8>
  40e754:	mov	x22, x0
  40e758:	cbz	x0, 40e810 <ferror@plt+0xb9d0>
  40e75c:	mov	x0, #0x1038                	// #4152
  40e760:	bl	40fe60 <ferror@plt+0xd020>
  40e764:	mov	x19, x0
  40e768:	str	x22, [x0]
  40e76c:	adrp	x0, 40e000 <ferror@plt+0xb1c0>
  40e770:	add	x0, x0, #0x6a8
  40e774:	str	x0, [x19, #8]
  40e778:	str	x21, [x19, #16]
  40e77c:	cmp	x20, #0x1, lsl #12
  40e780:	mov	x3, #0x1000                	// #4096
  40e784:	csel	x3, x20, x3, ls  // ls = plast
  40e788:	mov	w2, #0x0                   	// #0
  40e78c:	add	x1, x19, #0x18
  40e790:	mov	x0, x22
  40e794:	bl	402820 <setvbuf@plt>
  40e798:	ldp	x21, x22, [sp, #32]
  40e79c:	mov	x0, x19
  40e7a0:	ldp	x19, x20, [sp, #16]
  40e7a4:	ldp	x29, x30, [sp], #64
  40e7a8:	ret
  40e7ac:	mov	x0, #0x1038                	// #4152
  40e7b0:	bl	40fe60 <ferror@plt+0xd020>
  40e7b4:	mov	x19, x0
  40e7b8:	str	xzr, [x0]
  40e7bc:	adrp	x0, 40e000 <ferror@plt+0xb1c0>
  40e7c0:	add	x0, x0, #0x6a8
  40e7c4:	str	x0, [x19, #8]
  40e7c8:	str	xzr, [x19, #16]
  40e7cc:	b	40e79c <ferror@plt+0xb95c>
  40e7d0:	mov	x22, #0x800                 	// #2048
  40e7d4:	sub	x22, x22, x20
  40e7d8:	cmp	x22, #0x10
  40e7dc:	mov	x0, #0x10                  	// #16
  40e7e0:	csel	x22, x22, x0, ls  // ls = plast
  40e7e4:	mov	x1, #0x0                   	// #0
  40e7e8:	add	x0, sp, #0x30
  40e7ec:	bl	4029b0 <gettimeofday@plt>
  40e7f0:	mov	x2, x22
  40e7f4:	add	x1, sp, #0x30
  40e7f8:	add	x0, x21, x20
  40e7fc:	bl	402720 <memcpy@plt>
  40e800:	add	x22, x20, x22
  40e804:	cmp	x22, #0x7ff
  40e808:	b.ls	40e8c4 <ferror@plt+0xba84>  // b.plast
  40e80c:	b	40e894 <ferror@plt+0xba54>
  40e810:	mov	x19, x0
  40e814:	ldp	x21, x22, [sp, #32]
  40e818:	b	40e79c <ferror@plt+0xb95c>
  40e81c:	mov	x0, #0x1038                	// #4152
  40e820:	bl	40fe60 <ferror@plt+0xd020>
  40e824:	mov	x19, x0
  40e828:	str	xzr, [x0]
  40e82c:	adrp	x0, 40e000 <ferror@plt+0xb1c0>
  40e830:	add	x0, x0, #0x6a8
  40e834:	str	x0, [x19, #8]
  40e838:	str	xzr, [x19, #16]
  40e83c:	str	xzr, [x19, #24]
  40e840:	add	x21, x19, #0x20
  40e844:	mov	w1, #0x0                   	// #0
  40e848:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  40e84c:	add	x0, x0, #0xa48
  40e850:	bl	402900 <open@plt>
  40e854:	mov	w22, w0
  40e858:	tbnz	w0, #31, 40e8a4 <ferror@plt+0xba64>
  40e85c:	cmp	x20, #0x800
  40e860:	mov	x3, #0x1018                	// #4120
  40e864:	mov	x2, #0x800                 	// #2048
  40e868:	csel	x2, x20, x2, ls  // ls = plast
  40e86c:	mov	x1, x21
  40e870:	mov	w0, w22
  40e874:	bl	402c20 <__read_chk@plt>
  40e878:	mov	x20, x0
  40e87c:	mov	w0, w22
  40e880:	bl	402a10 <close@plt>
  40e884:	cmp	x20, #0x0
  40e888:	csel	x20, x20, xzr, ge  // ge = tcont
  40e88c:	cmp	x20, #0x7ff
  40e890:	b.ls	40e7d0 <ferror@plt+0xb990>  // b.plast
  40e894:	mov	x0, x21
  40e898:	bl	40ed7c <ferror@plt+0xbf3c>
  40e89c:	ldp	x21, x22, [sp, #32]
  40e8a0:	b	40e79c <ferror@plt+0xb95c>
  40e8a4:	mov	x22, #0x10                  	// #16
  40e8a8:	mov	x1, #0x0                   	// #0
  40e8ac:	add	x0, sp, #0x30
  40e8b0:	bl	4029b0 <gettimeofday@plt>
  40e8b4:	mov	x2, x22
  40e8b8:	add	x1, sp, #0x30
  40e8bc:	mov	x0, x21
  40e8c0:	bl	402720 <memcpy@plt>
  40e8c4:	mov	x0, #0x800                 	// #2048
  40e8c8:	sub	x20, x0, x22
  40e8cc:	cmp	x20, #0x4
  40e8d0:	mov	x0, #0x4                   	// #4
  40e8d4:	csel	x20, x20, x0, ls  // ls = plast
  40e8d8:	bl	4028b0 <getpid@plt>
  40e8dc:	str	w0, [sp, #48]
  40e8e0:	mov	x2, x20
  40e8e4:	add	x1, sp, #0x30
  40e8e8:	add	x0, x21, x22
  40e8ec:	bl	402720 <memcpy@plt>
  40e8f0:	add	x20, x20, x22
  40e8f4:	cmp	x20, #0x7ff
  40e8f8:	b.hi	40e894 <ferror@plt+0xba54>  // b.pmore
  40e8fc:	mov	x22, #0x800                 	// #2048
  40e900:	sub	x22, x22, x20
  40e904:	cmp	x22, #0x4
  40e908:	mov	x0, #0x4                   	// #4
  40e90c:	csel	x22, x22, x0, ls  // ls = plast
  40e910:	bl	402910 <getppid@plt>
  40e914:	str	w0, [sp, #48]
  40e918:	mov	x2, x22
  40e91c:	add	x1, sp, #0x30
  40e920:	add	x0, x21, x20
  40e924:	bl	402720 <memcpy@plt>
  40e928:	add	x20, x20, x22
  40e92c:	cmp	x20, #0x7ff
  40e930:	b.hi	40e894 <ferror@plt+0xba54>  // b.pmore
  40e934:	mov	x22, #0x800                 	// #2048
  40e938:	sub	x22, x22, x20
  40e93c:	cmp	x22, #0x4
  40e940:	mov	x0, #0x4                   	// #4
  40e944:	csel	x22, x22, x0, ls  // ls = plast
  40e948:	bl	4027d0 <getuid@plt>
  40e94c:	str	w0, [sp, #48]
  40e950:	mov	x2, x22
  40e954:	add	x1, sp, #0x30
  40e958:	add	x0, x21, x20
  40e95c:	bl	402720 <memcpy@plt>
  40e960:	add	x20, x20, x22
  40e964:	cmp	x20, #0x7ff
  40e968:	b.hi	40e894 <ferror@plt+0xba54>  // b.pmore
  40e96c:	bl	402bc0 <getgid@plt>
  40e970:	str	w0, [sp, #48]
  40e974:	mov	x0, #0x800                 	// #2048
  40e978:	sub	x0, x0, x20
  40e97c:	cmp	x0, #0x4
  40e980:	mov	x2, #0x4                   	// #4
  40e984:	csel	x2, x0, x2, ls  // ls = plast
  40e988:	add	x1, sp, #0x30
  40e98c:	add	x0, x21, x20
  40e990:	bl	402720 <memcpy@plt>
  40e994:	b	40e894 <ferror@plt+0xba54>
  40e998:	str	x1, [x0, #8]
  40e99c:	ret
  40e9a0:	str	x1, [x0, #16]
  40e9a4:	ret
  40e9a8:	stp	x29, x30, [sp, #-80]!
  40e9ac:	mov	x29, sp
  40e9b0:	stp	x19, x20, [sp, #16]
  40e9b4:	stp	x21, x22, [sp, #32]
  40e9b8:	stp	x23, x24, [sp, #48]
  40e9bc:	mov	x21, x0
  40e9c0:	mov	x19, x1
  40e9c4:	mov	x20, x2
  40e9c8:	ldr	x0, [x0]
  40e9cc:	cbz	x0, 40ea24 <ferror@plt+0xbbe4>
  40e9d0:	mov	x23, #0x1                   	// #1
  40e9d4:	ldr	x3, [x21]
  40e9d8:	mov	x2, x20
  40e9dc:	mov	x1, x23
  40e9e0:	mov	x0, x19
  40e9e4:	bl	402af0 <fread_unlocked@plt>
  40e9e8:	mov	x22, x0
  40e9ec:	bl	402db0 <__errno_location@plt>
  40e9f0:	ldr	w2, [x0]
  40e9f4:	add	x19, x19, x22
  40e9f8:	subs	x20, x20, x22
  40e9fc:	b.eq	40eaf4 <ferror@plt+0xbcb4>  // b.none
  40ea00:	ldr	x1, [x21]
  40ea04:	ldr	w1, [x1]
  40ea08:	ands	w1, w1, #0x20
  40ea0c:	csel	w2, w2, w1, ne  // ne = any
  40ea10:	str	w2, [x0]
  40ea14:	ldr	x1, [x21, #8]
  40ea18:	ldr	x0, [x21, #16]
  40ea1c:	blr	x1
  40ea20:	b	40e9d4 <ferror@plt+0xbb94>
  40ea24:	str	x25, [sp, #64]
  40ea28:	ldr	x22, [x21, #24]
  40ea2c:	add	x24, x21, #0x838
  40ea30:	mov	x23, #0x800                 	// #2048
  40ea34:	add	x25, x21, #0x20
  40ea38:	cmp	x2, x22
  40ea3c:	b.hi	40ea98 <ferror@plt+0xbc58>  // b.pmore
  40ea40:	mov	x23, x2
  40ea44:	b	40ea58 <ferror@plt+0xbc18>
  40ea48:	mov	x1, x24
  40ea4c:	add	x0, x21, #0x20
  40ea50:	bl	40eb54 <ferror@plt+0xbd14>
  40ea54:	mov	x22, #0x800                 	// #2048
  40ea58:	sub	x1, x21, x22
  40ea5c:	mov	x2, x23
  40ea60:	add	x1, x1, #0x1, lsl #12
  40ea64:	add	x1, x1, #0x38
  40ea68:	mov	x0, x19
  40ea6c:	bl	402720 <memcpy@plt>
  40ea70:	sub	x22, x22, x23
  40ea74:	str	x22, [x21, #24]
  40ea78:	ldr	x25, [sp, #64]
  40ea7c:	b	40eaf4 <ferror@plt+0xbcb4>
  40ea80:	mov	x1, x24
  40ea84:	mov	x0, x25
  40ea88:	bl	40eb54 <ferror@plt+0xbd14>
  40ea8c:	mov	x22, x23
  40ea90:	cmp	x20, #0x800
  40ea94:	b.ls	40eb08 <ferror@plt+0xbcc8>  // b.plast
  40ea98:	sub	x1, x23, x22
  40ea9c:	mov	x2, x22
  40eaa0:	add	x1, x24, x1
  40eaa4:	mov	x0, x19
  40eaa8:	bl	402720 <memcpy@plt>
  40eaac:	add	x19, x19, x22
  40eab0:	sub	x20, x20, x22
  40eab4:	tst	x19, #0x7
  40eab8:	b.ne	40ea80 <ferror@plt+0xbc40>  // b.any
  40eabc:	and	x25, x20, #0x7ff
  40eac0:	mov	x23, x20
  40eac4:	add	x20, x20, x19
  40eac8:	add	x22, x21, #0x20
  40eacc:	sub	x19, x20, x23
  40ead0:	cmp	x25, x23
  40ead4:	b.eq	40ea48 <ferror@plt+0xbc08>  // b.none
  40ead8:	mov	x1, x19
  40eadc:	mov	x0, x22
  40eae0:	bl	40eb54 <ferror@plt+0xbd14>
  40eae4:	subs	x23, x23, #0x800
  40eae8:	b.ne	40eacc <ferror@plt+0xbc8c>  // b.any
  40eaec:	str	xzr, [x21, #24]
  40eaf0:	ldr	x25, [sp, #64]
  40eaf4:	ldp	x19, x20, [sp, #16]
  40eaf8:	ldp	x21, x22, [sp, #32]
  40eafc:	ldp	x23, x24, [sp, #48]
  40eb00:	ldp	x29, x30, [sp], #80
  40eb04:	ret
  40eb08:	mov	x23, x20
  40eb0c:	b	40ea54 <ferror@plt+0xbc14>
  40eb10:	stp	x29, x30, [sp, #-32]!
  40eb14:	mov	x29, sp
  40eb18:	stp	x19, x20, [sp, #16]
  40eb1c:	mov	x19, x0
  40eb20:	ldr	x20, [x0]
  40eb24:	mov	x2, #0xffffffffffffffff    	// #-1
  40eb28:	mov	x1, #0x1038                	// #4152
  40eb2c:	bl	402cd0 <__explicit_bzero_chk@plt>
  40eb30:	mov	x0, x19
  40eb34:	bl	402ba0 <free@plt>
  40eb38:	mov	w0, #0x0                   	// #0
  40eb3c:	cbz	x20, 40eb48 <ferror@plt+0xbd08>
  40eb40:	mov	x0, x20
  40eb44:	bl	410c74 <ferror@plt+0xde34>
  40eb48:	ldp	x19, x20, [sp, #16]
  40eb4c:	ldp	x29, x30, [sp], #32
  40eb50:	ret
  40eb54:	ldr	x2, [x0, #2048]
  40eb58:	ldr	x5, [x0, #2056]
  40eb5c:	ldr	x9, [x0, #2064]
  40eb60:	add	x9, x9, #0x1
  40eb64:	str	x9, [x0, #2064]
  40eb68:	add	x9, x5, x9
  40eb6c:	mov	x6, x0
  40eb70:	add	x8, x0, #0x400
  40eb74:	mov	x7, x1
  40eb78:	mov	x3, x0
  40eb7c:	eor	x4, x2, x2, lsl #21
  40eb80:	ldr	x2, [x3, #1024]
  40eb84:	sub	x2, x2, #0x1
  40eb88:	sub	x2, x2, x4
  40eb8c:	ldr	x4, [x3]
  40eb90:	and	x5, x4, #0x7f8
  40eb94:	ldr	x5, [x6, x5]
  40eb98:	add	x5, x2, x5
  40eb9c:	add	x5, x5, x9
  40eba0:	str	x5, [x3]
  40eba4:	lsr	x5, x5, #8
  40eba8:	and	x5, x5, #0x7f8
  40ebac:	ldr	x9, [x6, x5]
  40ebb0:	add	x9, x4, x9
  40ebb4:	str	x9, [x7]
  40ebb8:	eor	x2, x2, x2, lsr #5
  40ebbc:	ldr	x4, [x3, #1032]
  40ebc0:	add	x2, x2, x4
  40ebc4:	ldr	x5, [x3, #8]
  40ebc8:	and	x4, x5, #0x7f8
  40ebcc:	ldr	x4, [x6, x4]
  40ebd0:	add	x4, x2, x4
  40ebd4:	add	x4, x4, x9
  40ebd8:	str	x4, [x3, #8]
  40ebdc:	lsr	x4, x4, #8
  40ebe0:	and	x4, x4, #0x7f8
  40ebe4:	ldr	x9, [x6, x4]
  40ebe8:	add	x9, x5, x9
  40ebec:	str	x9, [x7, #8]
  40ebf0:	eor	x2, x2, x2, lsl #12
  40ebf4:	ldr	x4, [x3, #1040]
  40ebf8:	add	x2, x2, x4
  40ebfc:	ldr	x4, [x3, #16]
  40ec00:	and	x5, x4, #0x7f8
  40ec04:	ldr	x5, [x6, x5]
  40ec08:	add	x5, x2, x5
  40ec0c:	add	x5, x5, x9
  40ec10:	str	x5, [x3, #16]
  40ec14:	lsr	x5, x5, #8
  40ec18:	and	x5, x5, #0x7f8
  40ec1c:	ldr	x9, [x6, x5]
  40ec20:	add	x9, x4, x9
  40ec24:	str	x9, [x7, #16]
  40ec28:	eor	x2, x2, x2, lsr #33
  40ec2c:	ldr	x4, [x3, #1048]
  40ec30:	add	x2, x2, x4
  40ec34:	ldr	x5, [x3, #24]
  40ec38:	and	x4, x5, #0x7f8
  40ec3c:	ldr	x4, [x6, x4]
  40ec40:	add	x4, x2, x4
  40ec44:	add	x4, x4, x9
  40ec48:	str	x4, [x3, #24]
  40ec4c:	lsr	x4, x4, #8
  40ec50:	and	x4, x4, #0x7f8
  40ec54:	ldr	x9, [x6, x4]
  40ec58:	add	x9, x5, x9
  40ec5c:	str	x9, [x7, #24]
  40ec60:	add	x7, x7, #0x20
  40ec64:	add	x3, x3, #0x20
  40ec68:	cmp	x3, x8
  40ec6c:	b.ne	40eb7c <ferror@plt+0xbd3c>  // b.any
  40ec70:	add	x1, x1, #0x400
  40ec74:	mov	x4, x0
  40ec78:	add	x7, x0, #0x400
  40ec7c:	eor	x2, x2, x2, lsl #21
  40ec80:	ldr	x3, [x4]
  40ec84:	sub	x3, x3, #0x1
  40ec88:	sub	x2, x3, x2
  40ec8c:	ldr	x3, [x4, #1024]
  40ec90:	and	x5, x3, #0x7f8
  40ec94:	ldr	x5, [x6, x5]
  40ec98:	add	x5, x2, x5
  40ec9c:	add	x5, x5, x9
  40eca0:	str	x5, [x4, #1024]
  40eca4:	lsr	x5, x5, #8
  40eca8:	and	x5, x5, #0x7f8
  40ecac:	ldr	x8, [x6, x5]
  40ecb0:	add	x8, x3, x8
  40ecb4:	str	x8, [x1]
  40ecb8:	eor	x2, x2, x2, lsr #5
  40ecbc:	ldr	x3, [x4, #8]
  40ecc0:	add	x2, x2, x3
  40ecc4:	ldr	x5, [x4, #1032]
  40ecc8:	and	x3, x5, #0x7f8
  40eccc:	ldr	x3, [x6, x3]
  40ecd0:	add	x3, x2, x3
  40ecd4:	add	x3, x3, x8
  40ecd8:	str	x3, [x4, #1032]
  40ecdc:	lsr	x3, x3, #8
  40ece0:	and	x3, x3, #0x7f8
  40ece4:	ldr	x8, [x6, x3]
  40ece8:	add	x8, x5, x8
  40ecec:	str	x8, [x1, #8]
  40ecf0:	eor	x2, x2, x2, lsl #12
  40ecf4:	ldr	x3, [x4, #16]
  40ecf8:	add	x2, x2, x3
  40ecfc:	ldr	x3, [x4, #1040]
  40ed00:	and	x5, x3, #0x7f8
  40ed04:	ldr	x5, [x6, x5]
  40ed08:	add	x5, x2, x5
  40ed0c:	add	x5, x5, x8
  40ed10:	str	x5, [x4, #1040]
  40ed14:	lsr	x5, x5, #8
  40ed18:	and	x5, x5, #0x7f8
  40ed1c:	ldr	x8, [x6, x5]
  40ed20:	add	x8, x3, x8
  40ed24:	str	x8, [x1, #16]
  40ed28:	eor	x2, x2, x2, lsr #33
  40ed2c:	ldr	x3, [x4, #24]
  40ed30:	add	x2, x2, x3
  40ed34:	ldr	x5, [x4, #1048]
  40ed38:	and	x3, x5, #0x7f8
  40ed3c:	ldr	x3, [x6, x3]
  40ed40:	add	x3, x2, x3
  40ed44:	add	x3, x3, x8
  40ed48:	str	x3, [x4, #1048]
  40ed4c:	lsr	x3, x3, #8
  40ed50:	and	x3, x3, #0x7f8
  40ed54:	ldr	x9, [x6, x3]
  40ed58:	add	x9, x5, x9
  40ed5c:	str	x9, [x1, #24]
  40ed60:	add	x1, x1, #0x20
  40ed64:	add	x4, x4, #0x20
  40ed68:	cmp	x4, x7
  40ed6c:	b.ne	40ec7c <ferror@plt+0xbe3c>  // b.any
  40ed70:	str	x2, [x0, #2048]
  40ed74:	str	x9, [x0, #2056]
  40ed78:	ret
  40ed7c:	mov	x5, x0
  40ed80:	add	x8, x0, #0x800
  40ed84:	mov	x11, x0
  40ed88:	mov	x3, #0xc0ab                	// #49323
  40ed8c:	movk	x3, #0x6c44, lsl #16
  40ed90:	movk	x3, #0x704f, lsl #32
  40ed94:	movk	x3, #0x98f5, lsl #48
  40ed98:	mov	x1, #0x89ed                	// #35309
  40ed9c:	movk	x1, #0xcbfc, lsl #16
  40eda0:	movk	x1, #0x5bf2, lsl #32
  40eda4:	movk	x1, #0xae98, lsl #48
  40eda8:	mov	x4, #0x9315                	// #37653
  40edac:	movk	x4, #0xa5a0, lsl #16
  40edb0:	movk	x4, #0x4a0f, lsl #32
  40edb4:	movk	x4, #0x48fe, lsl #48
  40edb8:	mov	x2, #0xe0ce                	// #57550
  40edbc:	movk	x2, #0x8355, lsl #16
  40edc0:	movk	x2, #0x53db, lsl #32
  40edc4:	movk	x2, #0x82f0, lsl #48
  40edc8:	mov	x10, #0x5524                	// #21796
  40edcc:	movk	x10, #0x4a59, lsl #16
  40edd0:	movk	x10, #0x2e82, lsl #32
  40edd4:	movk	x10, #0xb29b, lsl #48
  40edd8:	mov	x7, #0x12a0                	// #4768
  40eddc:	movk	x7, #0x3d47, lsl #16
  40ede0:	movk	x7, #0xa505, lsl #32
  40ede4:	movk	x7, #0x8c0e, lsl #48
  40ede8:	mov	x6, #0xc862                	// #51298
  40edec:	movk	x6, #0xc73a, lsl #16
  40edf0:	movk	x6, #0xb322, lsl #32
  40edf4:	movk	x6, #0xb9f8, lsl #48
  40edf8:	mov	x9, #0x4b7c                	// #19324
  40edfc:	movk	x9, #0xa288, lsl #16
  40ee00:	movk	x9, #0x4677, lsl #32
  40ee04:	movk	x9, #0x647c, lsl #48
  40ee08:	ldr	x12, [x11, #32]
  40ee0c:	add	x2, x2, x12
  40ee10:	ldr	x12, [x11, #40]
  40ee14:	add	x4, x4, x12
  40ee18:	ldr	x12, [x11, #48]
  40ee1c:	add	x1, x1, x12
  40ee20:	ldr	x12, [x11, #56]
  40ee24:	add	x3, x3, x12
  40ee28:	ldr	x12, [x11]
  40ee2c:	sub	x12, x12, x2
  40ee30:	add	x9, x12, x9
  40ee34:	eor	x4, x4, x3, lsr #9
  40ee38:	add	x3, x3, x9
  40ee3c:	ldr	x12, [x11, #8]
  40ee40:	sub	x12, x12, x4
  40ee44:	add	x6, x12, x6
  40ee48:	eor	x1, x1, x9, lsl #9
  40ee4c:	add	x9, x9, x6
  40ee50:	ldr	x12, [x11, #16]
  40ee54:	sub	x12, x12, x1
  40ee58:	add	x7, x12, x7
  40ee5c:	eor	x3, x3, x6, lsr #23
  40ee60:	add	x6, x6, x7
  40ee64:	ldr	x12, [x11, #24]
  40ee68:	sub	x12, x12, x3
  40ee6c:	add	x10, x12, x10
  40ee70:	eor	x9, x9, x7, lsl #15
  40ee74:	add	x7, x7, x10
  40ee78:	sub	x2, x2, x9
  40ee7c:	eor	x6, x6, x10, lsr #14
  40ee80:	add	x10, x10, x2
  40ee84:	sub	x4, x4, x6
  40ee88:	eor	x7, x7, x2, lsl #20
  40ee8c:	add	x2, x2, x4
  40ee90:	sub	x1, x1, x7
  40ee94:	eor	x10, x10, x4, lsr #17
  40ee98:	add	x4, x4, x1
  40ee9c:	sub	x3, x3, x10
  40eea0:	eor	x2, x2, x1, lsl #14
  40eea4:	add	x1, x1, x3
  40eea8:	str	x9, [x11]
  40eeac:	str	x6, [x11, #8]
  40eeb0:	str	x7, [x11, #16]
  40eeb4:	str	x10, [x11, #24]
  40eeb8:	str	x2, [x11, #32]
  40eebc:	str	x4, [x11, #40]
  40eec0:	str	x1, [x11, #48]
  40eec4:	str	x3, [x11, #56]
  40eec8:	add	x11, x11, #0x40
  40eecc:	cmp	x11, x8
  40eed0:	b.ne	40ee08 <ferror@plt+0xbfc8>  // b.any
  40eed4:	ldr	x11, [x5, #32]
  40eed8:	add	x2, x2, x11
  40eedc:	ldr	x11, [x5, #40]
  40eee0:	add	x4, x4, x11
  40eee4:	ldr	x11, [x5, #48]
  40eee8:	add	x1, x1, x11
  40eeec:	ldr	x11, [x5, #56]
  40eef0:	add	x3, x3, x11
  40eef4:	ldr	x11, [x5]
  40eef8:	sub	x11, x11, x2
  40eefc:	add	x9, x11, x9
  40ef00:	eor	x4, x4, x3, lsr #9
  40ef04:	add	x3, x3, x9
  40ef08:	ldr	x11, [x5, #8]
  40ef0c:	sub	x11, x11, x4
  40ef10:	add	x6, x11, x6
  40ef14:	eor	x1, x1, x9, lsl #9
  40ef18:	add	x9, x9, x6
  40ef1c:	ldr	x11, [x5, #16]
  40ef20:	sub	x11, x11, x1
  40ef24:	add	x7, x11, x7
  40ef28:	eor	x3, x3, x6, lsr #23
  40ef2c:	add	x6, x6, x7
  40ef30:	ldr	x11, [x5, #24]
  40ef34:	sub	x11, x11, x3
  40ef38:	add	x10, x11, x10
  40ef3c:	eor	x9, x9, x7, lsl #15
  40ef40:	add	x7, x7, x10
  40ef44:	sub	x2, x2, x9
  40ef48:	eor	x6, x6, x10, lsr #14
  40ef4c:	add	x10, x10, x2
  40ef50:	sub	x4, x4, x6
  40ef54:	eor	x7, x7, x2, lsl #20
  40ef58:	add	x2, x2, x4
  40ef5c:	sub	x1, x1, x7
  40ef60:	eor	x10, x10, x4, lsr #17
  40ef64:	add	x4, x4, x1
  40ef68:	sub	x3, x3, x10
  40ef6c:	eor	x2, x2, x1, lsl #14
  40ef70:	add	x1, x1, x3
  40ef74:	str	x9, [x5]
  40ef78:	str	x6, [x5, #8]
  40ef7c:	str	x7, [x5, #16]
  40ef80:	str	x10, [x5, #24]
  40ef84:	str	x2, [x5, #32]
  40ef88:	str	x4, [x5, #40]
  40ef8c:	str	x1, [x5, #48]
  40ef90:	str	x3, [x5, #56]
  40ef94:	add	x5, x5, #0x40
  40ef98:	cmp	x5, x8
  40ef9c:	b.ne	40eed4 <ferror@plt+0xc094>  // b.any
  40efa0:	str	xzr, [x0, #2064]
  40efa4:	str	xzr, [x0, #2056]
  40efa8:	str	xzr, [x0, #2048]
  40efac:	ret
  40efb0:	stp	x29, x30, [sp, #-48]!
  40efb4:	mov	x29, sp
  40efb8:	stp	x19, x20, [sp, #16]
  40efbc:	str	x21, [sp, #32]
  40efc0:	mov	x19, x0
  40efc4:	ldr	x1, [x0, #48]
  40efc8:	ldr	x21, [x0, #40]
  40efcc:	sub	x20, x1, x21
  40efd0:	sub	x20, x20, #0x1
  40efd4:	cmp	x1, x21
  40efd8:	b.eq	40f07c <ferror@plt+0xc23c>  // b.none
  40efdc:	ldr	x0, [x19, #72]
  40efe0:	add	x1, x1, x0
  40efe4:	bic	x0, x1, x0
  40efe8:	str	x0, [x19, #48]
  40efec:	ldr	x1, [x19, #32]
  40eff0:	ldr	x2, [x19, #56]
  40eff4:	sub	x0, x0, x1
  40eff8:	sub	x1, x2, x1
  40effc:	cmp	x0, x1
  40f000:	b.ls	40f008 <ferror@plt+0xc1c8>  // b.plast
  40f004:	str	x2, [x19, #48]
  40f008:	ldr	x1, [x19, #48]
  40f00c:	str	x1, [x19, #40]
  40f010:	ldr	x0, [x19, #144]
  40f014:	ldr	x1, [x19, #136]
  40f018:	sub	x0, x0, x1
  40f01c:	cmp	x0, #0x7
  40f020:	b.ls	40f094 <ferror@plt+0xc254>  // b.plast
  40f024:	ldr	x1, [x19, #136]
  40f028:	str	x21, [x1]
  40f02c:	ldr	x1, [x19, #136]
  40f030:	add	x1, x1, #0x8
  40f034:	str	x1, [x19, #136]
  40f038:	ldr	x0, [x19, #232]
  40f03c:	ldr	x1, [x19, #224]
  40f040:	sub	x0, x0, x1
  40f044:	cmp	x0, #0x7
  40f048:	b.ls	40f0a4 <ferror@plt+0xc264>  // b.plast
  40f04c:	ldr	x1, [x19, #224]
  40f050:	str	x20, [x1]
  40f054:	ldr	x1, [x19, #224]
  40f058:	add	x1, x1, #0x8
  40f05c:	str	x1, [x19, #224]
  40f060:	ldr	x0, [x19]
  40f064:	add	x0, x0, #0x1
  40f068:	str	x0, [x19]
  40f06c:	ldp	x19, x20, [sp, #16]
  40f070:	ldr	x21, [sp, #32]
  40f074:	ldp	x29, x30, [sp], #48
  40f078:	ret
  40f07c:	add	x0, x0, #0x18
  40f080:	mov	x2, x0
  40f084:	ldrb	w0, [x0, #80]
  40f088:	orr	w0, w0, #0x2
  40f08c:	strb	w0, [x2, #80]
  40f090:	b	40efdc <ferror@plt+0xc19c>
  40f094:	mov	x1, #0x8                   	// #8
  40f098:	add	x0, x19, #0x70
  40f09c:	bl	411408 <_obstack_newchunk@@Base>
  40f0a0:	b	40f024 <ferror@plt+0xc1e4>
  40f0a4:	mov	x1, #0x8                   	// #8
  40f0a8:	add	x0, x19, #0xc8
  40f0ac:	bl	411408 <_obstack_newchunk@@Base>
  40f0b0:	b	40f04c <ferror@plt+0xc20c>
  40f0b4:	stp	x29, x30, [sp, #-48]!
  40f0b8:	mov	x29, sp
  40f0bc:	stp	x19, x20, [sp, #16]
  40f0c0:	str	x21, [sp, #32]
  40f0c4:	mov	x19, x0
  40f0c8:	str	xzr, [x0]
  40f0cc:	str	xzr, [x0, #8]
  40f0d0:	str	xzr, [x0, #16]
  40f0d4:	adrp	x21, 402000 <mbrtowc@plt-0x710>
  40f0d8:	add	x21, x21, #0xba0
  40f0dc:	adrp	x20, 402000 <mbrtowc@plt-0x710>
  40f0e0:	add	x20, x20, #0x8e0
  40f0e4:	mov	x4, x21
  40f0e8:	mov	x3, x20
  40f0ec:	mov	x2, #0x0                   	// #0
  40f0f0:	mov	x1, #0x0                   	// #0
  40f0f4:	add	x0, x0, #0x18
  40f0f8:	bl	4113b4 <_obstack_begin@@Base>
  40f0fc:	mov	x4, x21
  40f100:	mov	x3, x20
  40f104:	mov	x2, #0x0                   	// #0
  40f108:	mov	x1, #0x0                   	// #0
  40f10c:	add	x0, x19, #0x70
  40f110:	bl	4113b4 <_obstack_begin@@Base>
  40f114:	mov	x4, x21
  40f118:	mov	x3, x20
  40f11c:	mov	x2, #0x0                   	// #0
  40f120:	mov	x1, #0x0                   	// #0
  40f124:	add	x0, x19, #0xc8
  40f128:	bl	4113b4 <_obstack_begin@@Base>
  40f12c:	ldp	x19, x20, [sp, #16]
  40f130:	ldr	x21, [sp, #32]
  40f134:	ldp	x29, x30, [sp], #48
  40f138:	ret
  40f13c:	stp	x29, x30, [sp, #-32]!
  40f140:	mov	x29, sp
  40f144:	str	x19, [sp, #16]
  40f148:	mov	x19, x0
  40f14c:	mov	x1, #0x0                   	// #0
  40f150:	add	x0, x0, #0x18
  40f154:	bl	411558 <_obstack_free@@Base>
  40f158:	mov	x1, #0x0                   	// #0
  40f15c:	add	x0, x19, #0x70
  40f160:	bl	411558 <_obstack_free@@Base>
  40f164:	mov	x1, #0x0                   	// #0
  40f168:	add	x0, x19, #0xc8
  40f16c:	bl	411558 <_obstack_free@@Base>
  40f170:	ldr	x19, [sp, #16]
  40f174:	ldp	x29, x30, [sp], #32
  40f178:	ret
  40f17c:	stp	x29, x30, [sp, #-48]!
  40f180:	mov	x29, sp
  40f184:	stp	x19, x20, [sp, #16]
  40f188:	stp	x21, x22, [sp, #32]
  40f18c:	mov	x21, x0
  40f190:	mov	x20, x1
  40f194:	mov	x22, #0x1                   	// #1
  40f198:	b	40f2cc <ferror@plt+0xc48c>
  40f19c:	ldr	x1, [x20, #48]
  40f1a0:	ldr	x0, [x20, #40]
  40f1a4:	cmp	x1, x0
  40f1a8:	b.eq	40f1d0 <ferror@plt+0xc390>  // b.none
  40f1ac:	ldr	x0, [x20, #56]
  40f1b0:	cmp	x1, x0
  40f1b4:	b.eq	40f2a8 <ferror@plt+0xc468>  // b.none
  40f1b8:	ldr	x0, [x20, #48]
  40f1bc:	add	x2, x0, #0x1
  40f1c0:	str	x2, [x20, #48]
  40f1c4:	strb	wzr, [x0]
  40f1c8:	mov	x0, x20
  40f1cc:	bl	40efb0 <ferror@plt+0xc170>
  40f1d0:	ldr	x0, [x20, #144]
  40f1d4:	ldr	x1, [x20, #136]
  40f1d8:	sub	x0, x0, x1
  40f1dc:	cmp	x0, #0x7
  40f1e0:	b.ls	40f30c <ferror@plt+0xc4cc>  // b.plast
  40f1e4:	add	x0, x20, #0x70
  40f1e8:	ldr	x1, [x20, #136]
  40f1ec:	str	xzr, [x1]
  40f1f0:	ldr	x1, [x20, #136]
  40f1f4:	add	x1, x1, #0x8
  40f1f8:	ldr	x3, [x20, #128]
  40f1fc:	cmp	x1, x3
  40f200:	b.eq	40f31c <ferror@plt+0xc4dc>  // b.none
  40f204:	ldr	x0, [x20, #160]
  40f208:	add	x1, x1, x0
  40f20c:	bic	x0, x1, x0
  40f210:	str	x0, [x20, #136]
  40f214:	ldr	x1, [x20, #120]
  40f218:	ldr	x2, [x20, #144]
  40f21c:	sub	x0, x0, x1
  40f220:	sub	x1, x2, x1
  40f224:	cmp	x0, x1
  40f228:	b.ls	40f230 <ferror@plt+0xc3f0>  // b.plast
  40f22c:	str	x2, [x20, #136]
  40f230:	ldr	x1, [x20, #136]
  40f234:	str	x1, [x20, #128]
  40f238:	str	x3, [x20, #8]
  40f23c:	add	x0, x20, #0xc8
  40f240:	ldr	x3, [x20, #216]
  40f244:	ldr	x1, [x20, #224]
  40f248:	cmp	x1, x3
  40f24c:	b.eq	40f330 <ferror@plt+0xc4f0>  // b.none
  40f250:	ldr	x0, [x20, #248]
  40f254:	add	x1, x1, x0
  40f258:	bic	x0, x1, x0
  40f25c:	str	x0, [x20, #224]
  40f260:	ldr	x1, [x20, #208]
  40f264:	ldr	x2, [x20, #232]
  40f268:	sub	x0, x0, x1
  40f26c:	sub	x1, x2, x1
  40f270:	cmp	x0, x1
  40f274:	b.ls	40f27c <ferror@plt+0xc43c>  // b.plast
  40f278:	str	x2, [x20, #224]
  40f27c:	ldr	x1, [x20, #224]
  40f280:	str	x1, [x20, #216]
  40f284:	str	x3, [x20, #16]
  40f288:	mov	x0, x21
  40f28c:	bl	402e40 <ferror@plt>
  40f290:	cmp	w0, #0x0
  40f294:	cset	w0, eq  // eq = none
  40f298:	ldp	x19, x20, [sp, #16]
  40f29c:	ldp	x21, x22, [sp, #32]
  40f2a0:	ldp	x29, x30, [sp], #48
  40f2a4:	ret
  40f2a8:	mov	x1, #0x1                   	// #1
  40f2ac:	add	x0, x20, #0x18
  40f2b0:	bl	411408 <_obstack_newchunk@@Base>
  40f2b4:	b	40f1b8 <ferror@plt+0xc378>
  40f2b8:	ldr	x1, [x20, #48]
  40f2bc:	add	x3, x1, #0x1
  40f2c0:	str	x3, [x20, #48]
  40f2c4:	strb	w19, [x1]
  40f2c8:	cbz	w19, 40f300 <ferror@plt+0xc4c0>
  40f2cc:	mov	x0, x21
  40f2d0:	bl	402970 <fgetc@plt>
  40f2d4:	mov	w19, w0
  40f2d8:	cmn	w0, #0x1
  40f2dc:	b.eq	40f19c <ferror@plt+0xc35c>  // b.none
  40f2e0:	ldr	x0, [x20, #56]
  40f2e4:	ldr	x1, [x20, #48]
  40f2e8:	cmp	x0, x1
  40f2ec:	b.ne	40f2b8 <ferror@plt+0xc478>  // b.any
  40f2f0:	mov	x1, x22
  40f2f4:	add	x0, x20, #0x18
  40f2f8:	bl	411408 <_obstack_newchunk@@Base>
  40f2fc:	b	40f2b8 <ferror@plt+0xc478>
  40f300:	mov	x0, x20
  40f304:	bl	40efb0 <ferror@plt+0xc170>
  40f308:	b	40f2cc <ferror@plt+0xc48c>
  40f30c:	mov	x1, #0x8                   	// #8
  40f310:	add	x0, x20, #0x70
  40f314:	bl	411408 <_obstack_newchunk@@Base>
  40f318:	b	40f1e4 <ferror@plt+0xc3a4>
  40f31c:	mov	x2, x0
  40f320:	ldrb	w0, [x0, #80]
  40f324:	orr	w0, w0, #0x2
  40f328:	strb	w0, [x2, #80]
  40f32c:	b	40f204 <ferror@plt+0xc3c4>
  40f330:	mov	x2, x0
  40f334:	ldrb	w0, [x0, #80]
  40f338:	orr	w0, w0, #0x2
  40f33c:	strb	w0, [x2, #80]
  40f340:	b	40f250 <ferror@plt+0xc410>
  40f344:	stp	x29, x30, [sp, #-16]!
  40f348:	mov	x29, sp
  40f34c:	bl	402cf0 <mkstemp@plt>
  40f350:	bl	40f8a0 <ferror@plt+0xca60>
  40f354:	ldp	x29, x30, [sp], #16
  40f358:	ret
  40f35c:	stp	x29, x30, [sp, #-32]!
  40f360:	mov	x29, sp
  40f364:	str	x19, [sp, #16]
  40f368:	mov	w19, w1
  40f36c:	bl	402a90 <mkostemp@plt>
  40f370:	mov	w1, w19
  40f374:	bl	411724 <_obstack_memory_used@@Base+0x14c>
  40f378:	ldr	x19, [sp, #16]
  40f37c:	ldp	x29, x30, [sp], #32
  40f380:	ret
  40f384:	mov	x4, x0
  40f388:	ldrb	w5, [x0]
  40f38c:	ldrb	w6, [x1]
  40f390:	cmp	w5, #0x2d
  40f394:	b.eq	40f3d0 <ferror@plt+0xc590>  // b.none
  40f398:	cmp	w6, #0x2d
  40f39c:	b.ne	40f68c <ferror@plt+0xc84c>  // b.any
  40f3a0:	ldrb	w0, [x1, #1]!
  40f3a4:	cmp	w0, #0x30
  40f3a8:	b.eq	40f3a0 <ferror@plt+0xc560>  // b.none
  40f3ac:	cmp	w3, w0
  40f3b0:	b.eq	40f3a0 <ferror@plt+0xc560>  // b.none
  40f3b4:	cmp	w2, w0
  40f3b8:	b.eq	40f63c <ferror@plt+0xc7fc>  // b.none
  40f3bc:	sub	w1, w0, #0x30
  40f3c0:	mov	w0, #0x1                   	// #1
  40f3c4:	cmp	w1, #0x9
  40f3c8:	b.ls	40f440 <ferror@plt+0xc600>  // b.plast
  40f3cc:	b	40f650 <ferror@plt+0xc810>
  40f3d0:	ldrb	w5, [x4, #1]!
  40f3d4:	cmp	w5, #0x30
  40f3d8:	b.eq	40f3d0 <ferror@plt+0xc590>  // b.none
  40f3dc:	cmp	w3, w5
  40f3e0:	b.eq	40f3d0 <ferror@plt+0xc590>  // b.none
  40f3e4:	cmp	w6, #0x2d
  40f3e8:	b.eq	40f454 <ferror@plt+0xc614>  // b.none
  40f3ec:	cmp	w2, w5
  40f3f0:	b.eq	40f408 <ferror@plt+0xc5c8>  // b.none
  40f3f4:	sub	w5, w5, #0x30
  40f3f8:	cmp	w5, #0x9
  40f3fc:	b.hi	40f41c <ferror@plt+0xc5dc>  // b.pmore
  40f400:	mov	w0, #0xffffffff            	// #-1
  40f404:	b	40f440 <ferror@plt+0xc600>
  40f408:	ldrb	w5, [x4, #1]!
  40f40c:	cmp	w5, #0x30
  40f410:	b.eq	40f408 <ferror@plt+0xc5c8>  // b.none
  40f414:	b	40f3f4 <ferror@plt+0xc5b4>
  40f418:	ldrb	w6, [x1, #1]!
  40f41c:	cmp	w6, #0x30
  40f420:	b.eq	40f418 <ferror@plt+0xc5d8>  // b.none
  40f424:	cmp	w3, w6
  40f428:	b.eq	40f418 <ferror@plt+0xc5d8>  // b.none
  40f42c:	cmp	w2, w6
  40f430:	b.eq	40f444 <ferror@plt+0xc604>  // b.none
  40f434:	sub	w6, w6, #0x30
  40f438:	cmp	w6, #0x9
  40f43c:	csetm	w0, ls  // ls = plast
  40f440:	ret
  40f444:	ldrb	w6, [x1, #1]!
  40f448:	cmp	w6, #0x30
  40f44c:	b.eq	40f444 <ferror@plt+0xc604>  // b.none
  40f450:	b	40f434 <ferror@plt+0xc5f4>
  40f454:	ldrb	w6, [x1, #1]!
  40f458:	cmp	w6, #0x30
  40f45c:	b.eq	40f454 <ferror@plt+0xc614>  // b.none
  40f460:	cmp	w3, w6
  40f464:	b.eq	40f454 <ferror@plt+0xc614>  // b.none
  40f468:	cmp	w5, w6
  40f46c:	b.ne	40f4a8 <ferror@plt+0xc668>  // b.any
  40f470:	sub	w0, w5, #0x30
  40f474:	cmp	w0, #0x9
  40f478:	b.hi	40f4a8 <ferror@plt+0xc668>  // b.pmore
  40f47c:	ldrb	w5, [x4, #1]!
  40f480:	cmp	w3, w5
  40f484:	b.eq	40f47c <ferror@plt+0xc63c>  // b.none
  40f488:	ldrb	w6, [x1, #1]!
  40f48c:	cmp	w3, w6
  40f490:	b.eq	40f488 <ferror@plt+0xc648>  // b.none
  40f494:	cmp	w5, w6
  40f498:	b.ne	40f4a8 <ferror@plt+0xc668>  // b.any
  40f49c:	sub	w0, w5, #0x30
  40f4a0:	cmp	w0, #0x9
  40f4a4:	b.ls	40f47c <ferror@plt+0xc63c>  // b.plast
  40f4a8:	mov	w0, w5
  40f4ac:	cmp	w2, w5
  40f4b0:	b.eq	40f52c <ferror@plt+0xc6ec>  // b.none
  40f4b4:	cmp	w2, w6
  40f4b8:	b.eq	40f584 <ferror@plt+0xc744>  // b.none
  40f4bc:	sub	w0, w6, w0
  40f4c0:	sub	w5, w5, #0x30
  40f4c4:	cmp	w5, #0x9
  40f4c8:	b.hi	40f628 <ferror@plt+0xc7e8>  // b.pmore
  40f4cc:	mov	x5, #0x0                   	// #0
  40f4d0:	ldrb	w2, [x4, #1]!
  40f4d4:	cmp	w3, w2
  40f4d8:	b.eq	40f4d0 <ferror@plt+0xc690>  // b.none
  40f4dc:	add	x5, x5, #0x1
  40f4e0:	sub	w2, w2, #0x30
  40f4e4:	cmp	w2, #0x9
  40f4e8:	b.ls	40f4d0 <ferror@plt+0xc690>  // b.plast
  40f4ec:	sub	w6, w6, #0x30
  40f4f0:	cmp	w6, #0x9
  40f4f4:	b.hi	40f888 <ferror@plt+0xca48>  // b.pmore
  40f4f8:	mov	x4, #0x0                   	// #0
  40f4fc:	ldrb	w2, [x1, #1]!
  40f500:	cmp	w3, w2
  40f504:	b.eq	40f4fc <ferror@plt+0xc6bc>  // b.none
  40f508:	add	x4, x4, #0x1
  40f50c:	sub	w2, w2, #0x30
  40f510:	cmp	w2, #0x9
  40f514:	b.ls	40f4fc <ferror@plt+0xc6bc>  // b.plast
  40f518:	cmp	x4, x5
  40f51c:	b.eq	40f630 <ferror@plt+0xc7f0>  // b.none
  40f520:	mov	w0, #0xffffffff            	// #-1
  40f524:	cneg	w0, w0, hi  // hi = pmore
  40f528:	b	40f440 <ferror@plt+0xc600>
  40f52c:	sub	w7, w6, #0x30
  40f530:	cmp	w7, #0x9
  40f534:	b.ls	40f4b4 <ferror@plt+0xc674>  // b.plast
  40f538:	and	w3, w2, #0xff
  40f53c:	ldrb	w0, [x1]
  40f540:	cmp	w0, w2, uxtb
  40f544:	b.eq	40f598 <ferror@plt+0xc758>  // b.none
  40f548:	ldrb	w1, [x4]
  40f54c:	mov	w0, #0x0                   	// #0
  40f550:	add	x4, x4, #0x1
  40f554:	cmp	w1, w3
  40f558:	b.ne	40f440 <ferror@plt+0xc600>  // b.any
  40f55c:	ldrb	w0, [x4]
  40f560:	cmp	w0, #0x30
  40f564:	b.ne	40f574 <ferror@plt+0xc734>  // b.any
  40f568:	ldrb	w0, [x4, #1]!
  40f56c:	cmp	w0, #0x30
  40f570:	b.eq	40f568 <ferror@plt+0xc728>  // b.none
  40f574:	sub	w0, w0, #0x30
  40f578:	cmp	w0, #0x9
  40f57c:	csetm	w0, ls  // ls = plast
  40f580:	b	40f440 <ferror@plt+0xc600>
  40f584:	sub	w5, w5, #0x30
  40f588:	sub	w0, w6, w0
  40f58c:	cmp	w5, #0x9
  40f590:	b.ls	40f4cc <ferror@plt+0xc68c>  // b.plast
  40f594:	b	40f538 <ferror@plt+0xc6f8>
  40f598:	ldrb	w2, [x4]
  40f59c:	cmp	w2, w0
  40f5a0:	b.eq	40f5d0 <ferror@plt+0xc790>  // b.none
  40f5a4:	add	x1, x1, #0x1
  40f5a8:	ldrb	w0, [x1]
  40f5ac:	cmp	w0, #0x30
  40f5b0:	b.ne	40f5c0 <ferror@plt+0xc780>  // b.any
  40f5b4:	ldrb	w0, [x1, #1]!
  40f5b8:	cmp	w0, #0x30
  40f5bc:	b.eq	40f5b4 <ferror@plt+0xc774>  // b.none
  40f5c0:	sub	w0, w0, #0x30
  40f5c4:	cmp	w0, #0x9
  40f5c8:	cset	w0, ls  // ls = plast
  40f5cc:	b	40f440 <ferror@plt+0xc600>
  40f5d0:	ldrb	w0, [x1, #1]!
  40f5d4:	ldrb	w2, [x4, #1]!
  40f5d8:	cmp	w0, w2
  40f5dc:	b.ne	40f5f4 <ferror@plt+0xc7b4>  // b.any
  40f5e0:	sub	w0, w0, #0x30
  40f5e4:	cmp	w0, #0x9
  40f5e8:	b.ls	40f5d0 <ferror@plt+0xc790>  // b.plast
  40f5ec:	mov	w0, #0x0                   	// #0
  40f5f0:	b	40f440 <ferror@plt+0xc600>
  40f5f4:	sub	w3, w0, #0x30
  40f5f8:	cmp	w3, #0x9
  40f5fc:	b.hi	40f614 <ferror@plt+0xc7d4>  // b.pmore
  40f600:	sub	w3, w2, #0x30
  40f604:	cmp	w3, #0x9
  40f608:	b.hi	40f5a8 <ferror@plt+0xc768>  // b.pmore
  40f60c:	sub	w0, w0, w2
  40f610:	b	40f440 <ferror@plt+0xc600>
  40f614:	sub	w0, w2, #0x30
  40f618:	cmp	w0, #0x9
  40f61c:	b.ls	40f55c <ferror@plt+0xc71c>  // b.plast
  40f620:	mov	w0, #0x0                   	// #0
  40f624:	b	40f440 <ferror@plt+0xc600>
  40f628:	mov	x5, #0x0                   	// #0
  40f62c:	b	40f4ec <ferror@plt+0xc6ac>
  40f630:	cmp	x5, #0x0
  40f634:	csel	w0, w0, wzr, ne  // ne = any
  40f638:	b	40f440 <ferror@plt+0xc600>
  40f63c:	ldrb	w0, [x1, #1]!
  40f640:	cmp	w0, #0x30
  40f644:	b.eq	40f63c <ferror@plt+0xc7fc>  // b.none
  40f648:	b	40f3bc <ferror@plt+0xc57c>
  40f64c:	ldrb	w5, [x4, #1]!
  40f650:	cmp	w5, #0x30
  40f654:	b.eq	40f64c <ferror@plt+0xc80c>  // b.none
  40f658:	cmp	w3, w5
  40f65c:	b.eq	40f64c <ferror@plt+0xc80c>  // b.none
  40f660:	cmp	w2, w5
  40f664:	b.eq	40f678 <ferror@plt+0xc838>  // b.none
  40f668:	sub	w5, w5, #0x30
  40f66c:	cmp	w5, #0x9
  40f670:	cset	w0, ls  // ls = plast
  40f674:	b	40f440 <ferror@plt+0xc600>
  40f678:	ldrb	w5, [x4, #1]!
  40f67c:	cmp	w5, #0x30
  40f680:	b.eq	40f678 <ferror@plt+0xc838>  // b.none
  40f684:	b	40f668 <ferror@plt+0xc828>
  40f688:	ldrb	w5, [x4, #1]!
  40f68c:	cmp	w5, #0x30
  40f690:	b.eq	40f688 <ferror@plt+0xc848>  // b.none
  40f694:	cmp	w3, w5
  40f698:	b.eq	40f688 <ferror@plt+0xc848>  // b.none
  40f69c:	b	40f6a4 <ferror@plt+0xc864>
  40f6a0:	ldrb	w6, [x1, #1]!
  40f6a4:	cmp	w6, #0x30
  40f6a8:	b.eq	40f6a0 <ferror@plt+0xc860>  // b.none
  40f6ac:	cmp	w3, w6
  40f6b0:	b.eq	40f6a0 <ferror@plt+0xc860>  // b.none
  40f6b4:	cmp	w5, w6
  40f6b8:	b.ne	40f6f4 <ferror@plt+0xc8b4>  // b.any
  40f6bc:	sub	w0, w5, #0x30
  40f6c0:	cmp	w0, #0x9
  40f6c4:	b.hi	40f6f4 <ferror@plt+0xc8b4>  // b.pmore
  40f6c8:	ldrb	w5, [x4, #1]!
  40f6cc:	cmp	w3, w5
  40f6d0:	b.eq	40f6c8 <ferror@plt+0xc888>  // b.none
  40f6d4:	ldrb	w6, [x1, #1]!
  40f6d8:	cmp	w3, w6
  40f6dc:	b.eq	40f6d4 <ferror@plt+0xc894>  // b.none
  40f6e0:	cmp	w5, w6
  40f6e4:	b.ne	40f6f4 <ferror@plt+0xc8b4>  // b.any
  40f6e8:	sub	w0, w5, #0x30
  40f6ec:	cmp	w0, #0x9
  40f6f0:	b.ls	40f6c8 <ferror@plt+0xc888>  // b.plast
  40f6f4:	mov	w0, w5
  40f6f8:	cmp	w2, w5
  40f6fc:	b.eq	40f778 <ferror@plt+0xc938>  // b.none
  40f700:	cmp	w2, w6
  40f704:	b.eq	40f7d0 <ferror@plt+0xc990>  // b.none
  40f708:	sub	w0, w0, w6
  40f70c:	sub	w5, w5, #0x30
  40f710:	cmp	w5, #0x9
  40f714:	b.hi	40f874 <ferror@plt+0xca34>  // b.pmore
  40f718:	mov	x5, #0x0                   	// #0
  40f71c:	ldrb	w2, [x4, #1]!
  40f720:	cmp	w3, w2
  40f724:	b.eq	40f71c <ferror@plt+0xc8dc>  // b.none
  40f728:	add	x5, x5, #0x1
  40f72c:	sub	w2, w2, #0x30
  40f730:	cmp	w2, #0x9
  40f734:	b.ls	40f71c <ferror@plt+0xc8dc>  // b.plast
  40f738:	sub	w6, w6, #0x30
  40f73c:	cmp	w6, #0x9
  40f740:	b.hi	40f894 <ferror@plt+0xca54>  // b.pmore
  40f744:	mov	x4, #0x0                   	// #0
  40f748:	ldrb	w2, [x1, #1]!
  40f74c:	cmp	w3, w2
  40f750:	b.eq	40f748 <ferror@plt+0xc908>  // b.none
  40f754:	add	x4, x4, #0x1
  40f758:	sub	w2, w2, #0x30
  40f75c:	cmp	w2, #0x9
  40f760:	b.ls	40f748 <ferror@plt+0xc908>  // b.plast
  40f764:	cmp	x4, x5
  40f768:	b.eq	40f87c <ferror@plt+0xca3c>  // b.none
  40f76c:	mov	w0, #0x1                   	// #1
  40f770:	cneg	w0, w0, hi  // hi = pmore
  40f774:	b	40f440 <ferror@plt+0xc600>
  40f778:	sub	w7, w6, #0x30
  40f77c:	cmp	w7, #0x9
  40f780:	b.ls	40f700 <ferror@plt+0xc8c0>  // b.plast
  40f784:	and	w3, w2, #0xff
  40f788:	ldrb	w0, [x4]
  40f78c:	cmp	w0, w2, uxtb
  40f790:	b.eq	40f7e4 <ferror@plt+0xc9a4>  // b.none
  40f794:	ldrb	w2, [x1]
  40f798:	mov	w0, #0x0                   	// #0
  40f79c:	add	x1, x1, #0x1
  40f7a0:	cmp	w2, w3
  40f7a4:	b.ne	40f440 <ferror@plt+0xc600>  // b.any
  40f7a8:	ldrb	w0, [x1]
  40f7ac:	cmp	w0, #0x30
  40f7b0:	b.ne	40f7c0 <ferror@plt+0xc980>  // b.any
  40f7b4:	ldrb	w0, [x1, #1]!
  40f7b8:	cmp	w0, #0x30
  40f7bc:	b.eq	40f7b4 <ferror@plt+0xc974>  // b.none
  40f7c0:	sub	w0, w0, #0x30
  40f7c4:	cmp	w0, #0x9
  40f7c8:	csetm	w0, ls  // ls = plast
  40f7cc:	b	40f440 <ferror@plt+0xc600>
  40f7d0:	sub	w5, w5, #0x30
  40f7d4:	sub	w0, w0, w6
  40f7d8:	cmp	w5, #0x9
  40f7dc:	b.ls	40f718 <ferror@plt+0xc8d8>  // b.plast
  40f7e0:	b	40f784 <ferror@plt+0xc944>
  40f7e4:	ldrb	w2, [x1]
  40f7e8:	cmp	w2, w0
  40f7ec:	b.eq	40f81c <ferror@plt+0xc9dc>  // b.none
  40f7f0:	add	x4, x4, #0x1
  40f7f4:	ldrb	w0, [x4]
  40f7f8:	cmp	w0, #0x30
  40f7fc:	b.ne	40f80c <ferror@plt+0xc9cc>  // b.any
  40f800:	ldrb	w0, [x4, #1]!
  40f804:	cmp	w0, #0x30
  40f808:	b.eq	40f800 <ferror@plt+0xc9c0>  // b.none
  40f80c:	sub	w0, w0, #0x30
  40f810:	cmp	w0, #0x9
  40f814:	cset	w0, ls  // ls = plast
  40f818:	b	40f440 <ferror@plt+0xc600>
  40f81c:	ldrb	w0, [x4, #1]!
  40f820:	ldrb	w2, [x1, #1]!
  40f824:	cmp	w0, w2
  40f828:	b.ne	40f840 <ferror@plt+0xca00>  // b.any
  40f82c:	sub	w0, w0, #0x30
  40f830:	cmp	w0, #0x9
  40f834:	b.ls	40f81c <ferror@plt+0xc9dc>  // b.plast
  40f838:	mov	w0, #0x0                   	// #0
  40f83c:	b	40f440 <ferror@plt+0xc600>
  40f840:	sub	w3, w0, #0x30
  40f844:	cmp	w3, #0x9
  40f848:	b.hi	40f860 <ferror@plt+0xca20>  // b.pmore
  40f84c:	sub	w1, w2, #0x30
  40f850:	sub	w0, w0, w2
  40f854:	cmp	w1, #0x9
  40f858:	b.hi	40f7f4 <ferror@plt+0xc9b4>  // b.pmore
  40f85c:	b	40f440 <ferror@plt+0xc600>
  40f860:	sub	w2, w2, #0x30
  40f864:	mov	w0, #0x0                   	// #0
  40f868:	cmp	w2, #0x9
  40f86c:	b.hi	40f440 <ferror@plt+0xc600>  // b.pmore
  40f870:	b	40f7a8 <ferror@plt+0xc968>
  40f874:	mov	x5, #0x0                   	// #0
  40f878:	b	40f738 <ferror@plt+0xc8f8>
  40f87c:	cmp	x5, #0x0
  40f880:	csel	w0, w0, wzr, ne  // ne = any
  40f884:	b	40f440 <ferror@plt+0xc600>
  40f888:	cmp	x5, #0x0
  40f88c:	csetm	w0, ne  // ne = any
  40f890:	b	40f440 <ferror@plt+0xc600>
  40f894:	cmp	x5, #0x0
  40f898:	cset	w0, ne  // ne = any
  40f89c:	b	40f440 <ferror@plt+0xc600>
  40f8a0:	stp	x29, x30, [sp, #-48]!
  40f8a4:	mov	x29, sp
  40f8a8:	stp	x19, x20, [sp, #16]
  40f8ac:	mov	w19, w0
  40f8b0:	cmp	w0, #0x2
  40f8b4:	b.ls	40f8c8 <ferror@plt+0xca88>  // b.plast
  40f8b8:	mov	w0, w19
  40f8bc:	ldp	x19, x20, [sp, #16]
  40f8c0:	ldp	x29, x30, [sp], #48
  40f8c4:	ret
  40f8c8:	stp	x21, x22, [sp, #32]
  40f8cc:	bl	411a40 <_obstack_memory_used@@Base+0x468>
  40f8d0:	mov	w21, w0
  40f8d4:	bl	402db0 <__errno_location@plt>
  40f8d8:	mov	x20, x0
  40f8dc:	ldr	w22, [x0]
  40f8e0:	mov	w0, w19
  40f8e4:	bl	402a10 <close@plt>
  40f8e8:	str	w22, [x20]
  40f8ec:	mov	w19, w21
  40f8f0:	ldp	x21, x22, [sp, #32]
  40f8f4:	b	40f8b8 <ferror@plt+0xca78>
  40f8f8:	sub	sp, sp, #0x50
  40f8fc:	stp	x29, x30, [sp, #32]
  40f900:	add	x29, sp, #0x20
  40f904:	stp	x19, x20, [sp, #48]
  40f908:	str	x21, [sp, #64]
  40f90c:	mov	x21, x0
  40f910:	mov	x20, x4
  40f914:	mov	x19, x5
  40f918:	cbz	x1, 40f9dc <ferror@plt+0xcb9c>
  40f91c:	mov	x5, x3
  40f920:	mov	x4, x2
  40f924:	mov	x3, x1
  40f928:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2a28>
  40f92c:	add	x2, x2, #0xa58
  40f930:	mov	w1, #0x1                   	// #1
  40f934:	bl	402b30 <__fprintf_chk@plt>
  40f938:	mov	w2, #0x5                   	// #5
  40f93c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40f940:	add	x1, x1, #0xa70
  40f944:	mov	x0, #0x0                   	// #0
  40f948:	bl	402d20 <dcgettext@plt>
  40f94c:	mov	w4, #0x7e3                 	// #2019
  40f950:	mov	x3, x0
  40f954:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2a28>
  40f958:	add	x2, x2, #0xd68
  40f95c:	mov	w1, #0x1                   	// #1
  40f960:	mov	x0, x21
  40f964:	bl	402b30 <__fprintf_chk@plt>
  40f968:	mov	w2, #0x5                   	// #5
  40f96c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40f970:	add	x1, x1, #0xa78
  40f974:	mov	x0, #0x0                   	// #0
  40f978:	bl	402d20 <dcgettext@plt>
  40f97c:	mov	x1, x21
  40f980:	bl	402d30 <fputs_unlocked@plt>
  40f984:	cmp	x19, #0x5
  40f988:	b.eq	40fb70 <ferror@plt+0xcd30>  // b.none
  40f98c:	b.hi	40fa40 <ferror@plt+0xcc00>  // b.pmore
  40f990:	cmp	x19, #0x2
  40f994:	b.eq	40fb0c <ferror@plt+0xcccc>  // b.none
  40f998:	b.ls	40f9f8 <ferror@plt+0xcbb8>  // b.plast
  40f99c:	cmp	x19, #0x3
  40f9a0:	b.eq	40fb3c <ferror@plt+0xccfc>  // b.none
  40f9a4:	mov	w2, #0x5                   	// #5
  40f9a8:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40f9ac:	add	x1, x1, #0xb90
  40f9b0:	mov	x0, #0x0                   	// #0
  40f9b4:	bl	402d20 <dcgettext@plt>
  40f9b8:	ldr	x6, [x20, #24]
  40f9bc:	ldr	x5, [x20, #16]
  40f9c0:	ldr	x4, [x20, #8]
  40f9c4:	ldr	x3, [x20]
  40f9c8:	mov	x2, x0
  40f9cc:	mov	w1, #0x1                   	// #1
  40f9d0:	mov	x0, x21
  40f9d4:	bl	402b30 <__fprintf_chk@plt>
  40f9d8:	b	40fa2c <ferror@plt+0xcbec>
  40f9dc:	mov	x4, x3
  40f9e0:	mov	x3, x2
  40f9e4:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2a28>
  40f9e8:	add	x2, x2, #0xa68
  40f9ec:	mov	w1, #0x1                   	// #1
  40f9f0:	bl	402b30 <__fprintf_chk@plt>
  40f9f4:	b	40f938 <ferror@plt+0xcaf8>
  40f9f8:	cbz	x19, 40fa2c <ferror@plt+0xcbec>
  40f9fc:	cmp	x19, #0x1
  40fa00:	b.ne	40fc44 <ferror@plt+0xce04>  // b.any
  40fa04:	mov	w2, #0x5                   	// #5
  40fa08:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fa0c:	add	x1, x1, #0xb48
  40fa10:	mov	x0, #0x0                   	// #0
  40fa14:	bl	402d20 <dcgettext@plt>
  40fa18:	ldr	x3, [x20]
  40fa1c:	mov	x2, x0
  40fa20:	mov	w1, #0x1                   	// #1
  40fa24:	mov	x0, x21
  40fa28:	bl	402b30 <__fprintf_chk@plt>
  40fa2c:	ldp	x19, x20, [sp, #48]
  40fa30:	ldr	x21, [sp, #64]
  40fa34:	ldp	x29, x30, [sp, #32]
  40fa38:	add	sp, sp, #0x50
  40fa3c:	ret
  40fa40:	cmp	x19, #0x8
  40fa44:	b.eq	40fbf0 <ferror@plt+0xcdb0>  // b.none
  40fa48:	b.ls	40fab0 <ferror@plt+0xcc70>  // b.plast
  40fa4c:	cmp	x19, #0x9
  40fa50:	b.ne	40fc44 <ferror@plt+0xce04>  // b.any
  40fa54:	mov	w2, #0x5                   	// #5
  40fa58:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fa5c:	add	x1, x1, #0xc60
  40fa60:	mov	x0, #0x0                   	// #0
  40fa64:	bl	402d20 <dcgettext@plt>
  40fa68:	ldr	x1, [x20, #64]
  40fa6c:	str	x1, [sp, #24]
  40fa70:	ldr	x1, [x20, #56]
  40fa74:	str	x1, [sp, #16]
  40fa78:	ldr	x1, [x20, #48]
  40fa7c:	str	x1, [sp, #8]
  40fa80:	ldr	x1, [x20, #40]
  40fa84:	str	x1, [sp]
  40fa88:	ldr	x7, [x20, #32]
  40fa8c:	ldr	x6, [x20, #24]
  40fa90:	ldr	x5, [x20, #16]
  40fa94:	ldr	x4, [x20, #8]
  40fa98:	ldr	x3, [x20]
  40fa9c:	mov	x2, x0
  40faa0:	mov	w1, #0x1                   	// #1
  40faa4:	mov	x0, x21
  40faa8:	bl	402b30 <__fprintf_chk@plt>
  40faac:	b	40fa2c <ferror@plt+0xcbec>
  40fab0:	cmp	x19, #0x6
  40fab4:	b.eq	40fbac <ferror@plt+0xcd6c>  // b.none
  40fab8:	cmp	x19, #0x7
  40fabc:	b.ne	40fc44 <ferror@plt+0xce04>  // b.any
  40fac0:	mov	w2, #0x5                   	// #5
  40fac4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fac8:	add	x1, x1, #0xc00
  40facc:	mov	x0, #0x0                   	// #0
  40fad0:	bl	402d20 <dcgettext@plt>
  40fad4:	ldr	x1, [x20, #48]
  40fad8:	str	x1, [sp, #8]
  40fadc:	ldr	x1, [x20, #40]
  40fae0:	str	x1, [sp]
  40fae4:	ldr	x7, [x20, #32]
  40fae8:	ldr	x6, [x20, #24]
  40faec:	ldr	x5, [x20, #16]
  40faf0:	ldr	x4, [x20, #8]
  40faf4:	ldr	x3, [x20]
  40faf8:	mov	x2, x0
  40fafc:	mov	w1, #0x1                   	// #1
  40fb00:	mov	x0, x21
  40fb04:	bl	402b30 <__fprintf_chk@plt>
  40fb08:	b	40fa2c <ferror@plt+0xcbec>
  40fb0c:	mov	w2, #0x5                   	// #5
  40fb10:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fb14:	add	x1, x1, #0xb58
  40fb18:	mov	x0, #0x0                   	// #0
  40fb1c:	bl	402d20 <dcgettext@plt>
  40fb20:	ldr	x4, [x20, #8]
  40fb24:	ldr	x3, [x20]
  40fb28:	mov	x2, x0
  40fb2c:	mov	w1, #0x1                   	// #1
  40fb30:	mov	x0, x21
  40fb34:	bl	402b30 <__fprintf_chk@plt>
  40fb38:	b	40fa2c <ferror@plt+0xcbec>
  40fb3c:	mov	w2, #0x5                   	// #5
  40fb40:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fb44:	add	x1, x1, #0xb70
  40fb48:	mov	x0, #0x0                   	// #0
  40fb4c:	bl	402d20 <dcgettext@plt>
  40fb50:	ldr	x5, [x20, #16]
  40fb54:	ldr	x4, [x20, #8]
  40fb58:	ldr	x3, [x20]
  40fb5c:	mov	x2, x0
  40fb60:	mov	w1, #0x1                   	// #1
  40fb64:	mov	x0, x21
  40fb68:	bl	402b30 <__fprintf_chk@plt>
  40fb6c:	b	40fa2c <ferror@plt+0xcbec>
  40fb70:	mov	w2, #0x5                   	// #5
  40fb74:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fb78:	add	x1, x1, #0xbb0
  40fb7c:	mov	x0, #0x0                   	// #0
  40fb80:	bl	402d20 <dcgettext@plt>
  40fb84:	ldr	x7, [x20, #32]
  40fb88:	ldr	x6, [x20, #24]
  40fb8c:	ldr	x5, [x20, #16]
  40fb90:	ldr	x4, [x20, #8]
  40fb94:	ldr	x3, [x20]
  40fb98:	mov	x2, x0
  40fb9c:	mov	w1, #0x1                   	// #1
  40fba0:	mov	x0, x21
  40fba4:	bl	402b30 <__fprintf_chk@plt>
  40fba8:	b	40fa2c <ferror@plt+0xcbec>
  40fbac:	mov	w2, #0x5                   	// #5
  40fbb0:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fbb4:	add	x1, x1, #0xbd8
  40fbb8:	mov	x0, #0x0                   	// #0
  40fbbc:	bl	402d20 <dcgettext@plt>
  40fbc0:	ldr	x1, [x20, #40]
  40fbc4:	str	x1, [sp]
  40fbc8:	ldr	x7, [x20, #32]
  40fbcc:	ldr	x6, [x20, #24]
  40fbd0:	ldr	x5, [x20, #16]
  40fbd4:	ldr	x4, [x20, #8]
  40fbd8:	ldr	x3, [x20]
  40fbdc:	mov	x2, x0
  40fbe0:	mov	w1, #0x1                   	// #1
  40fbe4:	mov	x0, x21
  40fbe8:	bl	402b30 <__fprintf_chk@plt>
  40fbec:	b	40fa2c <ferror@plt+0xcbec>
  40fbf0:	mov	w2, #0x5                   	// #5
  40fbf4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fbf8:	add	x1, x1, #0xc30
  40fbfc:	mov	x0, #0x0                   	// #0
  40fc00:	bl	402d20 <dcgettext@plt>
  40fc04:	ldr	x1, [x20, #56]
  40fc08:	str	x1, [sp, #16]
  40fc0c:	ldr	x1, [x20, #48]
  40fc10:	str	x1, [sp, #8]
  40fc14:	ldr	x1, [x20, #40]
  40fc18:	str	x1, [sp]
  40fc1c:	ldr	x7, [x20, #32]
  40fc20:	ldr	x6, [x20, #24]
  40fc24:	ldr	x5, [x20, #16]
  40fc28:	ldr	x4, [x20, #8]
  40fc2c:	ldr	x3, [x20]
  40fc30:	mov	x2, x0
  40fc34:	mov	w1, #0x1                   	// #1
  40fc38:	mov	x0, x21
  40fc3c:	bl	402b30 <__fprintf_chk@plt>
  40fc40:	b	40fa2c <ferror@plt+0xcbec>
  40fc44:	mov	w2, #0x5                   	// #5
  40fc48:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fc4c:	add	x1, x1, #0xc98
  40fc50:	mov	x0, #0x0                   	// #0
  40fc54:	bl	402d20 <dcgettext@plt>
  40fc58:	ldr	x1, [x20, #64]
  40fc5c:	str	x1, [sp, #24]
  40fc60:	ldr	x1, [x20, #56]
  40fc64:	str	x1, [sp, #16]
  40fc68:	ldr	x1, [x20, #48]
  40fc6c:	str	x1, [sp, #8]
  40fc70:	ldr	x1, [x20, #40]
  40fc74:	str	x1, [sp]
  40fc78:	ldr	x7, [x20, #32]
  40fc7c:	ldr	x6, [x20, #24]
  40fc80:	ldr	x5, [x20, #16]
  40fc84:	ldr	x4, [x20, #8]
  40fc88:	ldr	x3, [x20]
  40fc8c:	mov	x2, x0
  40fc90:	mov	w1, #0x1                   	// #1
  40fc94:	mov	x0, x21
  40fc98:	bl	402b30 <__fprintf_chk@plt>
  40fc9c:	b	40fa2c <ferror@plt+0xcbec>
  40fca0:	stp	x29, x30, [sp, #-16]!
  40fca4:	mov	x29, sp
  40fca8:	ldr	x5, [x4]
  40fcac:	cbz	x5, 40fccc <ferror@plt+0xce8c>
  40fcb0:	mov	x5, #0x0                   	// #0
  40fcb4:	add	x5, x5, #0x1
  40fcb8:	ldr	x6, [x4, x5, lsl #3]
  40fcbc:	cbnz	x6, 40fcb4 <ferror@plt+0xce74>
  40fcc0:	bl	40f8f8 <ferror@plt+0xcab8>
  40fcc4:	ldp	x29, x30, [sp], #16
  40fcc8:	ret
  40fccc:	mov	x5, #0x0                   	// #0
  40fcd0:	b	40fcc0 <ferror@plt+0xce80>
  40fcd4:	stp	x29, x30, [sp, #-96]!
  40fcd8:	mov	x29, sp
  40fcdc:	ldr	x7, [x4]
  40fce0:	ldr	w8, [x4, #24]
  40fce4:	ldr	x11, [x4, #8]
  40fce8:	add	x4, sp, #0x10
  40fcec:	mov	x5, #0x0                   	// #0
  40fcf0:	b	40fd2c <ferror@plt+0xceec>
  40fcf4:	add	w9, w8, #0x8
  40fcf8:	cmp	w9, #0x0
  40fcfc:	b.le	40fd40 <ferror@plt+0xcf00>
  40fd00:	add	x10, x7, #0xf
  40fd04:	mov	w8, w9
  40fd08:	mov	x6, x7
  40fd0c:	and	x7, x10, #0xfffffffffffffff8
  40fd10:	ldr	x6, [x6]
  40fd14:	str	x6, [x4]
  40fd18:	cbz	x6, 40fd4c <ferror@plt+0xcf0c>
  40fd1c:	add	x5, x5, #0x1
  40fd20:	add	x4, x4, #0x8
  40fd24:	cmp	x5, #0xa
  40fd28:	b.eq	40fd4c <ferror@plt+0xcf0c>  // b.none
  40fd2c:	tbnz	w8, #31, 40fcf4 <ferror@plt+0xceb4>
  40fd30:	add	x9, x7, #0xf
  40fd34:	mov	x6, x7
  40fd38:	and	x7, x9, #0xfffffffffffffff8
  40fd3c:	b	40fd10 <ferror@plt+0xced0>
  40fd40:	add	x6, x11, w8, sxtw
  40fd44:	mov	w8, w9
  40fd48:	b	40fd10 <ferror@plt+0xced0>
  40fd4c:	add	x4, sp, #0x10
  40fd50:	bl	40f8f8 <ferror@plt+0xcab8>
  40fd54:	ldp	x29, x30, [sp], #96
  40fd58:	ret
  40fd5c:	stp	x29, x30, [sp, #-240]!
  40fd60:	mov	x29, sp
  40fd64:	str	x4, [sp, #208]
  40fd68:	str	x5, [sp, #216]
  40fd6c:	str	x6, [sp, #224]
  40fd70:	str	x7, [sp, #232]
  40fd74:	str	q0, [sp, #80]
  40fd78:	str	q1, [sp, #96]
  40fd7c:	str	q2, [sp, #112]
  40fd80:	str	q3, [sp, #128]
  40fd84:	str	q4, [sp, #144]
  40fd88:	str	q5, [sp, #160]
  40fd8c:	str	q6, [sp, #176]
  40fd90:	str	q7, [sp, #192]
  40fd94:	add	x4, sp, #0xf0
  40fd98:	str	x4, [sp, #48]
  40fd9c:	str	x4, [sp, #56]
  40fda0:	add	x4, sp, #0xd0
  40fda4:	str	x4, [sp, #64]
  40fda8:	mov	w4, #0xffffffe0            	// #-32
  40fdac:	str	w4, [sp, #72]
  40fdb0:	mov	w4, #0xffffff80            	// #-128
  40fdb4:	str	w4, [sp, #76]
  40fdb8:	ldp	x4, x5, [sp, #48]
  40fdbc:	stp	x4, x5, [sp, #16]
  40fdc0:	ldp	x4, x5, [sp, #64]
  40fdc4:	stp	x4, x5, [sp, #32]
  40fdc8:	add	x4, sp, #0x10
  40fdcc:	bl	40fcd4 <ferror@plt+0xce94>
  40fdd0:	ldp	x29, x30, [sp], #240
  40fdd4:	ret
  40fdd8:	stp	x29, x30, [sp, #-16]!
  40fddc:	mov	x29, sp
  40fde0:	mov	w2, #0x5                   	// #5
  40fde4:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fde8:	add	x1, x1, #0xcd8
  40fdec:	mov	x0, #0x0                   	// #0
  40fdf0:	bl	402d20 <dcgettext@plt>
  40fdf4:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fdf8:	add	x2, x2, #0xcf0
  40fdfc:	mov	x1, x0
  40fe00:	mov	w0, #0x1                   	// #1
  40fe04:	bl	402980 <__printf_chk@plt>
  40fe08:	mov	w2, #0x5                   	// #5
  40fe0c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fe10:	add	x1, x1, #0xd08
  40fe14:	mov	x0, #0x0                   	// #0
  40fe18:	bl	402d20 <dcgettext@plt>
  40fe1c:	adrp	x3, 413000 <_obstack_memory_used@@Base+0x1a28>
  40fe20:	add	x3, x3, #0x338
  40fe24:	adrp	x2, 413000 <_obstack_memory_used@@Base+0x1a28>
  40fe28:	add	x2, x2, #0x360
  40fe2c:	mov	x1, x0
  40fe30:	mov	w0, #0x1                   	// #1
  40fe34:	bl	402980 <__printf_chk@plt>
  40fe38:	mov	w2, #0x5                   	// #5
  40fe3c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  40fe40:	add	x1, x1, #0xd20
  40fe44:	mov	x0, #0x0                   	// #0
  40fe48:	bl	402d20 <dcgettext@plt>
  40fe4c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  40fe50:	ldr	x1, [x1, #1352]
  40fe54:	bl	402d30 <fputs_unlocked@plt>
  40fe58:	ldp	x29, x30, [sp], #16
  40fe5c:	ret
  40fe60:	stp	x29, x30, [sp, #-32]!
  40fe64:	mov	x29, sp
  40fe68:	str	x19, [sp, #16]
  40fe6c:	mov	x19, x0
  40fe70:	bl	4028e0 <malloc@plt>
  40fe74:	cmp	x0, #0x0
  40fe78:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40fe7c:	b.ne	40fe8c <ferror@plt+0xd04c>  // b.any
  40fe80:	ldr	x19, [sp, #16]
  40fe84:	ldp	x29, x30, [sp], #32
  40fe88:	ret
  40fe8c:	bl	4100ec <ferror@plt+0xd2ac>
  40fe90:	stp	x29, x30, [sp, #-16]!
  40fe94:	mov	x29, sp
  40fe98:	mul	x3, x0, x1
  40fe9c:	umulh	x2, x0, x1
  40fea0:	cmp	x2, #0x0
  40fea4:	cset	x2, ne  // ne = any
  40fea8:	cmp	x3, #0x0
  40feac:	csinc	x2, x2, xzr, ge  // ge = tcont
  40feb0:	cbnz	w2, 40fec4 <ferror@plt+0xd084>
  40feb4:	mul	x0, x0, x1
  40feb8:	bl	40fe60 <ferror@plt+0xd020>
  40febc:	ldp	x29, x30, [sp], #16
  40fec0:	ret
  40fec4:	bl	4100ec <ferror@plt+0xd2ac>
  40fec8:	stp	x29, x30, [sp, #-16]!
  40fecc:	mov	x29, sp
  40fed0:	bl	40fe60 <ferror@plt+0xd020>
  40fed4:	ldp	x29, x30, [sp], #16
  40fed8:	ret
  40fedc:	stp	x29, x30, [sp, #-32]!
  40fee0:	mov	x29, sp
  40fee4:	cmp	x1, #0x0
  40fee8:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  40feec:	b.ne	40ff14 <ferror@plt+0xd0d4>  // b.any
  40fef0:	str	x19, [sp, #16]
  40fef4:	mov	x19, x1
  40fef8:	bl	4029e0 <realloc@plt>
  40fefc:	cmp	x0, #0x0
  40ff00:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  40ff04:	b.ne	40ff20 <ferror@plt+0xd0e0>  // b.any
  40ff08:	ldr	x19, [sp, #16]
  40ff0c:	ldp	x29, x30, [sp], #32
  40ff10:	ret
  40ff14:	bl	402ba0 <free@plt>
  40ff18:	mov	x0, #0x0                   	// #0
  40ff1c:	b	40ff0c <ferror@plt+0xd0cc>
  40ff20:	bl	4100ec <ferror@plt+0xd2ac>
  40ff24:	stp	x29, x30, [sp, #-16]!
  40ff28:	mov	x29, sp
  40ff2c:	mul	x4, x1, x2
  40ff30:	umulh	x3, x1, x2
  40ff34:	cmp	x3, #0x0
  40ff38:	cset	x3, ne  // ne = any
  40ff3c:	cmp	x4, #0x0
  40ff40:	csinc	x3, x3, xzr, ge  // ge = tcont
  40ff44:	cbnz	w3, 40ff58 <ferror@plt+0xd118>
  40ff48:	mul	x1, x1, x2
  40ff4c:	bl	40fedc <ferror@plt+0xd09c>
  40ff50:	ldp	x29, x30, [sp], #16
  40ff54:	ret
  40ff58:	bl	4100ec <ferror@plt+0xd2ac>
  40ff5c:	stp	x29, x30, [sp, #-16]!
  40ff60:	mov	x29, sp
  40ff64:	ldr	x3, [x1]
  40ff68:	cbz	x0, 40ff9c <ferror@plt+0xd15c>
  40ff6c:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  40ff70:	movk	x4, #0x5554
  40ff74:	udiv	x4, x4, x2
  40ff78:	cmp	x4, x3
  40ff7c:	b.ls	40ffd0 <ferror@plt+0xd190>  // b.plast
  40ff80:	add	x4, x3, #0x1
  40ff84:	add	x3, x4, x3, lsr #1
  40ff88:	str	x3, [x1]
  40ff8c:	mul	x1, x3, x2
  40ff90:	bl	40fedc <ferror@plt+0xd09c>
  40ff94:	ldp	x29, x30, [sp], #16
  40ff98:	ret
  40ff9c:	cbnz	x3, 40ffb0 <ferror@plt+0xd170>
  40ffa0:	mov	x3, #0x80                  	// #128
  40ffa4:	udiv	x3, x3, x2
  40ffa8:	cmp	x2, #0x80
  40ffac:	cinc	x3, x3, hi  // hi = pmore
  40ffb0:	mul	x5, x3, x2
  40ffb4:	umulh	x4, x3, x2
  40ffb8:	cmp	x4, #0x0
  40ffbc:	cset	x4, ne  // ne = any
  40ffc0:	cmp	x5, #0x0
  40ffc4:	csinc	x4, x4, xzr, ge  // ge = tcont
  40ffc8:	cbz	w4, 40ff88 <ferror@plt+0xd148>
  40ffcc:	bl	4100ec <ferror@plt+0xd2ac>
  40ffd0:	bl	4100ec <ferror@plt+0xd2ac>
  40ffd4:	stp	x29, x30, [sp, #-16]!
  40ffd8:	mov	x29, sp
  40ffdc:	mov	x2, x1
  40ffe0:	ldr	x1, [x1]
  40ffe4:	cbz	x0, 410010 <ferror@plt+0xd1d0>
  40ffe8:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  40ffec:	movk	x3, #0x5553
  40fff0:	cmp	x1, x3
  40fff4:	b.hi	41001c <ferror@plt+0xd1dc>  // b.pmore
  40fff8:	add	x3, x1, #0x1
  40fffc:	add	x1, x3, x1, lsr #1
  410000:	str	x1, [x2]
  410004:	bl	40fedc <ferror@plt+0xd09c>
  410008:	ldp	x29, x30, [sp], #16
  41000c:	ret
  410010:	cbz	x1, 410020 <ferror@plt+0xd1e0>
  410014:	tbz	x1, #63, 410000 <ferror@plt+0xd1c0>
  410018:	bl	4100ec <ferror@plt+0xd2ac>
  41001c:	bl	4100ec <ferror@plt+0xd2ac>
  410020:	mov	x1, #0x80                  	// #128
  410024:	b	410000 <ferror@plt+0xd1c0>
  410028:	stp	x29, x30, [sp, #-32]!
  41002c:	mov	x29, sp
  410030:	str	x19, [sp, #16]
  410034:	mov	x19, x0
  410038:	bl	40fe60 <ferror@plt+0xd020>
  41003c:	mov	x2, x19
  410040:	mov	w1, #0x0                   	// #0
  410044:	bl	402990 <memset@plt>
  410048:	ldr	x19, [sp, #16]
  41004c:	ldp	x29, x30, [sp], #32
  410050:	ret
  410054:	stp	x29, x30, [sp, #-16]!
  410058:	mov	x29, sp
  41005c:	mul	x3, x0, x1
  410060:	umulh	x2, x0, x1
  410064:	cmp	x2, #0x0
  410068:	cset	x2, ne  // ne = any
  41006c:	cmp	x3, #0x0
  410070:	csinc	x2, x2, xzr, ge  // ge = tcont
  410074:	cbnz	w2, 410088 <ferror@plt+0xd248>
  410078:	bl	4029d0 <calloc@plt>
  41007c:	cbz	x0, 410088 <ferror@plt+0xd248>
  410080:	ldp	x29, x30, [sp], #16
  410084:	ret
  410088:	bl	4100ec <ferror@plt+0xd2ac>
  41008c:	stp	x29, x30, [sp, #-32]!
  410090:	mov	x29, sp
  410094:	stp	x19, x20, [sp, #16]
  410098:	mov	x20, x0
  41009c:	mov	x19, x1
  4100a0:	mov	x0, x1
  4100a4:	bl	40fe60 <ferror@plt+0xd020>
  4100a8:	mov	x2, x19
  4100ac:	mov	x1, x20
  4100b0:	bl	402720 <memcpy@plt>
  4100b4:	ldp	x19, x20, [sp, #16]
  4100b8:	ldp	x29, x30, [sp], #32
  4100bc:	ret
  4100c0:	stp	x29, x30, [sp, #-32]!
  4100c4:	mov	x29, sp
  4100c8:	str	x19, [sp, #16]
  4100cc:	mov	x19, x0
  4100d0:	bl	402780 <strlen@plt>
  4100d4:	add	x1, x0, #0x1
  4100d8:	mov	x0, x19
  4100dc:	bl	41008c <ferror@plt+0xd24c>
  4100e0:	ldr	x19, [sp, #16]
  4100e4:	ldp	x29, x30, [sp], #32
  4100e8:	ret
  4100ec:	stp	x29, x30, [sp, #-32]!
  4100f0:	mov	x29, sp
  4100f4:	str	x19, [sp, #16]
  4100f8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4100fc:	ldr	w19, [x0, #1216]
  410100:	mov	w2, #0x5                   	// #5
  410104:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  410108:	add	x1, x1, #0xd98
  41010c:	mov	x0, #0x0                   	// #0
  410110:	bl	402d20 <dcgettext@plt>
  410114:	mov	x3, x0
  410118:	adrp	x2, 412000 <_obstack_memory_used@@Base+0xa28>
  41011c:	add	x2, x2, #0x250
  410120:	mov	w1, #0x0                   	// #0
  410124:	mov	w0, w19
  410128:	bl	4027b0 <error@plt>
  41012c:	bl	402a80 <abort@plt>
  410130:	stp	x29, x30, [sp, #-64]!
  410134:	mov	x29, sp
  410138:	stp	x19, x20, [sp, #16]
  41013c:	stp	x21, x22, [sp, #32]
  410140:	stp	x23, x24, [sp, #48]
  410144:	mov	w19, w0
  410148:	mov	x20, x1
  41014c:	mov	x23, x2
  410150:	mov	x21, x3
  410154:	mov	x22, x4
  410158:	mov	w2, #0x5                   	// #5
  41015c:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  410160:	add	x1, x1, #0xdb0
  410164:	mov	x0, #0x0                   	// #0
  410168:	bl	402d20 <dcgettext@plt>
  41016c:	mov	x2, x0
  410170:	mov	w1, w19
  410174:	mov	w0, #0x0                   	// #0
  410178:	bl	4027b0 <error@plt>
  41017c:	mov	w2, #0x5                   	// #5
  410180:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  410184:	add	x1, x1, #0xdd0
  410188:	mov	x0, #0x0                   	// #0
  41018c:	bl	402d20 <dcgettext@plt>
  410190:	mov	x2, x0
  410194:	mov	w1, #0x0                   	// #0
  410198:	mov	w0, #0x0                   	// #0
  41019c:	bl	4027b0 <error@plt>
  4101a0:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4101a4:	ldr	w24, [x0, #1216]
  4101a8:	mov	w2, #0x5                   	// #5
  4101ac:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  4101b0:	add	x1, x1, #0xe00
  4101b4:	mov	x0, #0x0                   	// #0
  4101b8:	bl	402d20 <dcgettext@plt>
  4101bc:	mov	x19, x0
  4101c0:	mov	x3, x23
  4101c4:	mov	x2, x20
  4101c8:	mov	w1, #0x8                   	// #8
  4101cc:	mov	w0, #0x0                   	// #0
  4101d0:	bl	40e3a0 <ferror@plt+0xb560>
  4101d4:	mov	x20, x0
  4101d8:	mov	x3, x22
  4101dc:	mov	x2, x21
  4101e0:	mov	w1, #0x8                   	// #8
  4101e4:	mov	w0, #0x1                   	// #1
  4101e8:	bl	40e3a0 <ferror@plt+0xb560>
  4101ec:	mov	x4, x0
  4101f0:	mov	x3, x20
  4101f4:	mov	x2, x19
  4101f8:	mov	w1, #0x0                   	// #0
  4101fc:	mov	w0, w24
  410200:	bl	4027b0 <error@plt>
  410204:	ldp	x19, x20, [sp, #16]
  410208:	ldp	x21, x22, [sp, #32]
  41020c:	ldp	x23, x24, [sp, #48]
  410210:	ldp	x29, x30, [sp], #64
  410214:	ret
  410218:	stp	x29, x30, [sp, #-64]!
  41021c:	mov	x29, sp
  410220:	stp	x19, x20, [sp, #16]
  410224:	stp	x21, x22, [sp, #32]
  410228:	str	x23, [sp, #48]
  41022c:	mov	x20, x0
  410230:	mov	x21, x1
  410234:	mov	x22, x2
  410238:	mov	x23, x3
  41023c:	bl	411928 <_obstack_memory_used@@Base+0x350>
  410240:	mov	w19, w0
  410244:	bl	402db0 <__errno_location@plt>
  410248:	ldr	w0, [x0]
  41024c:	cbnz	w0, 410268 <ferror@plt+0xd428>
  410250:	mov	w0, w19
  410254:	ldp	x19, x20, [sp, #16]
  410258:	ldp	x21, x22, [sp, #32]
  41025c:	ldr	x23, [sp, #48]
  410260:	ldp	x29, x30, [sp], #64
  410264:	ret
  410268:	mov	x4, x23
  41026c:	mov	x3, x22
  410270:	mov	x2, x21
  410274:	mov	x1, x20
  410278:	bl	410130 <ferror@plt+0xd2f0>
  41027c:	b	410250 <ferror@plt+0xd410>
  410280:	stp	x29, x30, [sp, #-64]!
  410284:	mov	x29, sp
  410288:	stp	x19, x20, [sp, #16]
  41028c:	stp	x21, x22, [sp, #32]
  410290:	str	x23, [sp, #48]
  410294:	mov	x20, x0
  410298:	mov	x21, x1
  41029c:	mov	x22, x2
  4102a0:	mov	x23, x3
  4102a4:	bl	4119c4 <_obstack_memory_used@@Base+0x3ec>
  4102a8:	mov	w19, w0
  4102ac:	bl	402db0 <__errno_location@plt>
  4102b0:	ldr	w0, [x0]
  4102b4:	cbnz	w0, 4102d0 <ferror@plt+0xd490>
  4102b8:	mov	w0, w19
  4102bc:	ldp	x19, x20, [sp, #16]
  4102c0:	ldp	x21, x22, [sp, #32]
  4102c4:	ldr	x23, [sp, #48]
  4102c8:	ldp	x29, x30, [sp], #64
  4102cc:	ret
  4102d0:	sub	x4, x23, #0x1
  4102d4:	mov	x3, x22
  4102d8:	sub	x2, x21, #0x1
  4102dc:	mov	x1, x20
  4102e0:	bl	410130 <ferror@plt+0xd2f0>
  4102e4:	b	4102b8 <ferror@plt+0xd478>
  4102e8:	stp	x29, x30, [sp, #-48]!
  4102ec:	mov	x29, sp
  4102f0:	str	x19, [sp, #16]
  4102f4:	bl	411680 <_obstack_memory_used@@Base+0xa8>
  4102f8:	stp	x0, x1, [sp, #32]
  4102fc:	bl	402db0 <__errno_location@plt>
  410300:	mov	x19, x0
  410304:	str	wzr, [x19]
  410308:	mov	x1, #0x0                   	// #0
  41030c:	add	x0, sp, #0x20
  410310:	bl	41119c <ferror@plt+0xe35c>
  410314:	cbz	w0, 410328 <ferror@plt+0xd4e8>
  410318:	ldr	w0, [x19]
  41031c:	tst	w0, #0xfffffffb
  410320:	b.eq	410304 <ferror@plt+0xd4c4>  // b.none
  410324:	mov	w0, #0xffffffff            	// #-1
  410328:	ldr	x19, [sp, #16]
  41032c:	ldp	x29, x30, [sp], #48
  410330:	ret
  410334:	mov	x6, x0
  410338:	sub	w3, w2, #0x1
  41033c:	cbz	w2, 41038c <ferror@plt+0xd54c>
  410340:	ldr	x2, [x0]
  410344:	mov	w0, #0x0                   	// #0
  410348:	sxtw	x1, w1
  41034c:	mov	w7, #0x1                   	// #1
  410350:	mov	w5, #0x0                   	// #0
  410354:	b	410370 <ferror@plt+0xd530>
  410358:	mul	x2, x2, x1
  41035c:	mov	w4, w5
  410360:	orr	w0, w0, w4
  410364:	sub	w3, w3, #0x1
  410368:	cmn	w3, #0x1
  41036c:	b.eq	410384 <ferror@plt+0xd544>  // b.none
  410370:	umulh	x4, x2, x1
  410374:	cbz	x4, 410358 <ferror@plt+0xd518>
  410378:	mov	x2, #0xffffffffffffffff    	// #-1
  41037c:	mov	w4, w7
  410380:	b	410360 <ferror@plt+0xd520>
  410384:	str	x2, [x6]
  410388:	ret
  41038c:	mov	w0, #0x0                   	// #0
  410390:	b	410388 <ferror@plt+0xd548>
  410394:	stp	x29, x30, [sp, #-96]!
  410398:	mov	x29, sp
  41039c:	stp	x19, x20, [sp, #16]
  4103a0:	stp	x21, x22, [sp, #32]
  4103a4:	stp	x23, x24, [sp, #48]
  4103a8:	stp	x25, x26, [sp, #64]
  4103ac:	cmp	w2, #0x24
  4103b0:	b.hi	4103f0 <ferror@plt+0xd5b0>  // b.pmore
  4103b4:	mov	x25, x0
  4103b8:	mov	w24, w2
  4103bc:	mov	x23, x3
  4103c0:	mov	x21, x4
  4103c4:	cmp	x1, #0x0
  4103c8:	add	x0, sp, #0x58
  4103cc:	csel	x20, x0, x1, eq  // eq = none
  4103d0:	bl	402db0 <__errno_location@plt>
  4103d4:	mov	x26, x0
  4103d8:	str	wzr, [x0]
  4103dc:	ldrb	w19, [x25]
  4103e0:	bl	402b60 <__ctype_b_loc@plt>
  4103e4:	ldr	x2, [x0]
  4103e8:	mov	x0, x25
  4103ec:	b	410414 <ferror@plt+0xd5d4>
  4103f0:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x2a28>
  4103f4:	add	x3, x3, #0xe60
  4103f8:	mov	w2, #0x54                  	// #84
  4103fc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  410400:	add	x1, x1, #0xe28
  410404:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  410408:	add	x0, x0, #0xe38
  41040c:	bl	402da0 <__assert_fail@plt>
  410410:	ldrb	w19, [x0, #1]!
  410414:	and	x1, x19, #0xff
  410418:	ldrh	w1, [x2, x1, lsl #1]
  41041c:	tbnz	w1, #13, 410410 <ferror@plt+0xd5d0>
  410420:	mov	w22, #0x4                   	// #4
  410424:	cmp	w19, #0x2d
  410428:	b.eq	41056c <ferror@plt+0xd72c>  // b.none
  41042c:	mov	w2, w24
  410430:	mov	x1, x20
  410434:	mov	x0, x25
  410438:	bl	402770 <strtoul@plt>
  41043c:	str	x0, [sp, #80]
  410440:	ldr	x24, [x20]
  410444:	cmp	x24, x25
  410448:	b.eq	410468 <ferror@plt+0xd628>  // b.none
  41044c:	ldr	w1, [x26]
  410450:	cbz	w1, 410554 <ferror@plt+0xd714>
  410454:	mov	w22, #0x4                   	// #4
  410458:	cmp	w1, #0x22
  41045c:	b.ne	41056c <ferror@plt+0xd72c>  // b.any
  410460:	mov	w22, #0x1                   	// #1
  410464:	b	410558 <ferror@plt+0xd718>
  410468:	cbz	x21, 410760 <ferror@plt+0xd920>
  41046c:	ldrb	w1, [x25]
  410470:	cbz	w1, 41056c <ferror@plt+0xd72c>
  410474:	mov	x0, x21
  410478:	bl	402c00 <strchr@plt>
  41047c:	cbz	x0, 410768 <ferror@plt+0xd928>
  410480:	mov	x0, #0x1                   	// #1
  410484:	str	x0, [sp, #80]
  410488:	ldrb	w19, [x24]
  41048c:	mov	w22, #0x0                   	// #0
  410490:	mov	w1, w19
  410494:	mov	x0, x21
  410498:	bl	402c00 <strchr@plt>
  41049c:	cbz	x0, 410590 <ferror@plt+0xd750>
  4104a0:	sub	w0, w19, #0x45
  4104a4:	and	w0, w0, #0xff
  4104a8:	cmp	w0, #0x2f
  4104ac:	b.hi	4105b8 <ferror@plt+0xd778>  // b.pmore
  4104b0:	mov	x2, #0x1                   	// #1
  4104b4:	lsl	x0, x2, x0
  4104b8:	mov	w25, #0x1                   	// #1
  4104bc:	mov	w1, #0x400                 	// #1024
  4104c0:	mov	x2, #0x8945                	// #35141
  4104c4:	movk	x2, #0x30, lsl #16
  4104c8:	movk	x2, #0x8144, lsl #32
  4104cc:	tst	x0, x2
  4104d0:	b.eq	410510 <ferror@plt+0xd6d0>  // b.none
  4104d4:	mov	w1, #0x30                  	// #48
  4104d8:	mov	x0, x21
  4104dc:	bl	402c00 <strchr@plt>
  4104e0:	cbz	x0, 4105c4 <ferror@plt+0xd784>
  4104e4:	ldrb	w0, [x24, #1]
  4104e8:	cmp	w0, #0x44
  4104ec:	b.eq	4105d0 <ferror@plt+0xd790>  // b.none
  4104f0:	cmp	w0, #0x69
  4104f4:	b.eq	4105a0 <ferror@plt+0xd760>  // b.none
  4104f8:	cmp	w0, #0x42
  4104fc:	mov	w25, #0x2                   	// #2
  410500:	csinc	w25, w25, wzr, eq  // eq = none
  410504:	mov	w1, #0x400                 	// #1024
  410508:	mov	w0, #0x3e8                 	// #1000
  41050c:	csel	w1, w1, w0, ne  // ne = any
  410510:	cmp	w19, #0x5a
  410514:	b.eq	410718 <ferror@plt+0xd8d8>  // b.none
  410518:	b.hi	410638 <ferror@plt+0xd7f8>  // b.pmore
  41051c:	cmp	w19, #0x4d
  410520:	b.eq	4106b8 <ferror@plt+0xd878>  // b.none
  410524:	b.hi	410600 <ferror@plt+0xd7c0>  // b.pmore
  410528:	cmp	w19, #0x45
  41052c:	b.eq	4106e8 <ferror@plt+0xd8a8>  // b.none
  410530:	b.ls	4105dc <ferror@plt+0xd79c>  // b.plast
  410534:	cmp	w19, #0x47
  410538:	b.eq	41067c <ferror@plt+0xd83c>  // b.none
  41053c:	cmp	w19, #0x4b
  410540:	b.ne	410728 <ferror@plt+0xd8e8>  // b.any
  410544:	mov	w2, #0x1                   	// #1
  410548:	add	x0, sp, #0x50
  41054c:	bl	410334 <ferror@plt+0xd4f4>
  410550:	b	41073c <ferror@plt+0xd8fc>
  410554:	mov	w22, #0x0                   	// #0
  410558:	cbz	x21, 410588 <ferror@plt+0xd748>
  41055c:	ldrb	w19, [x24]
  410560:	cbnz	w19, 410490 <ferror@plt+0xd650>
  410564:	ldr	x0, [sp, #80]
  410568:	str	x0, [x23]
  41056c:	mov	w0, w22
  410570:	ldp	x19, x20, [sp, #16]
  410574:	ldp	x21, x22, [sp, #32]
  410578:	ldp	x23, x24, [sp, #48]
  41057c:	ldp	x25, x26, [sp, #64]
  410580:	ldp	x29, x30, [sp], #96
  410584:	ret
  410588:	str	x0, [x23]
  41058c:	b	41056c <ferror@plt+0xd72c>
  410590:	ldr	x0, [sp, #80]
  410594:	str	x0, [x23]
  410598:	orr	w22, w22, #0x2
  41059c:	b	41056c <ferror@plt+0xd72c>
  4105a0:	ldrb	w0, [x24, #2]
  4105a4:	cmp	w0, #0x42
  4105a8:	mov	w25, #0x3                   	// #3
  4105ac:	csinc	w25, w25, wzr, eq  // eq = none
  4105b0:	mov	w1, #0x400                 	// #1024
  4105b4:	b	410510 <ferror@plt+0xd6d0>
  4105b8:	mov	w25, #0x1                   	// #1
  4105bc:	mov	w1, #0x400                 	// #1024
  4105c0:	b	410510 <ferror@plt+0xd6d0>
  4105c4:	mov	w25, #0x1                   	// #1
  4105c8:	mov	w1, #0x400                 	// #1024
  4105cc:	b	410510 <ferror@plt+0xd6d0>
  4105d0:	mov	w25, #0x2                   	// #2
  4105d4:	mov	w1, #0x3e8                 	// #1000
  4105d8:	b	410510 <ferror@plt+0xd6d0>
  4105dc:	cmp	w19, #0x42
  4105e0:	b.ne	410728 <ferror@plt+0xd8e8>  // b.any
  4105e4:	ldr	x0, [sp, #80]
  4105e8:	cmp	xzr, x0, lsr #54
  4105ec:	b.ne	4106d8 <ferror@plt+0xd898>  // b.any
  4105f0:	lsl	x0, x0, #10
  4105f4:	str	x0, [sp, #80]
  4105f8:	mov	w0, #0x0                   	// #0
  4105fc:	b	41073c <ferror@plt+0xd8fc>
  410600:	cmp	w19, #0x54
  410604:	b.eq	4106f8 <ferror@plt+0xd8b8>  // b.none
  410608:	cmp	w19, #0x59
  41060c:	b.ne	410620 <ferror@plt+0xd7e0>  // b.any
  410610:	mov	w2, #0x8                   	// #8
  410614:	add	x0, sp, #0x50
  410618:	bl	410334 <ferror@plt+0xd4f4>
  41061c:	b	41073c <ferror@plt+0xd8fc>
  410620:	cmp	w19, #0x50
  410624:	b.ne	410728 <ferror@plt+0xd8e8>  // b.any
  410628:	mov	w2, #0x5                   	// #5
  41062c:	add	x0, sp, #0x50
  410630:	bl	410334 <ferror@plt+0xd4f4>
  410634:	b	41073c <ferror@plt+0xd8fc>
  410638:	cmp	w19, #0x6b
  41063c:	b.eq	410544 <ferror@plt+0xd704>  // b.none
  410640:	b.ls	41066c <ferror@plt+0xd82c>  // b.plast
  410644:	cmp	w19, #0x74
  410648:	b.eq	4106f8 <ferror@plt+0xd8b8>  // b.none
  41064c:	cmp	w19, #0x77
  410650:	b.ne	4106b0 <ferror@plt+0xd870>  // b.any
  410654:	ldr	x0, [sp, #80]
  410658:	tbnz	x0, #63, 410708 <ferror@plt+0xd8c8>
  41065c:	lsl	x0, x0, #1
  410660:	str	x0, [sp, #80]
  410664:	mov	w0, #0x0                   	// #0
  410668:	b	41073c <ferror@plt+0xd8fc>
  41066c:	cmp	w19, #0x63
  410670:	b.eq	410738 <ferror@plt+0xd8f8>  // b.none
  410674:	cmp	w19, #0x67
  410678:	b.ne	41068c <ferror@plt+0xd84c>  // b.any
  41067c:	mov	w2, #0x3                   	// #3
  410680:	add	x0, sp, #0x50
  410684:	bl	410334 <ferror@plt+0xd4f4>
  410688:	b	41073c <ferror@plt+0xd8fc>
  41068c:	cmp	w19, #0x62
  410690:	b.ne	410728 <ferror@plt+0xd8e8>  // b.any
  410694:	ldr	x0, [sp, #80]
  410698:	cmp	xzr, x0, lsr #55
  41069c:	b.ne	4106c8 <ferror@plt+0xd888>  // b.any
  4106a0:	lsl	x0, x0, #9
  4106a4:	str	x0, [sp, #80]
  4106a8:	mov	w0, #0x0                   	// #0
  4106ac:	b	41073c <ferror@plt+0xd8fc>
  4106b0:	cmp	w19, #0x6d
  4106b4:	b.ne	410728 <ferror@plt+0xd8e8>  // b.any
  4106b8:	mov	w2, #0x2                   	// #2
  4106bc:	add	x0, sp, #0x50
  4106c0:	bl	410334 <ferror@plt+0xd4f4>
  4106c4:	b	41073c <ferror@plt+0xd8fc>
  4106c8:	mov	x0, #0xffffffffffffffff    	// #-1
  4106cc:	str	x0, [sp, #80]
  4106d0:	mov	w0, #0x1                   	// #1
  4106d4:	b	41073c <ferror@plt+0xd8fc>
  4106d8:	mov	x0, #0xffffffffffffffff    	// #-1
  4106dc:	str	x0, [sp, #80]
  4106e0:	mov	w0, #0x1                   	// #1
  4106e4:	b	41073c <ferror@plt+0xd8fc>
  4106e8:	mov	w2, #0x6                   	// #6
  4106ec:	add	x0, sp, #0x50
  4106f0:	bl	410334 <ferror@plt+0xd4f4>
  4106f4:	b	41073c <ferror@plt+0xd8fc>
  4106f8:	mov	w2, #0x4                   	// #4
  4106fc:	add	x0, sp, #0x50
  410700:	bl	410334 <ferror@plt+0xd4f4>
  410704:	b	41073c <ferror@plt+0xd8fc>
  410708:	mov	x0, #0xffffffffffffffff    	// #-1
  41070c:	str	x0, [sp, #80]
  410710:	mov	w0, #0x1                   	// #1
  410714:	b	41073c <ferror@plt+0xd8fc>
  410718:	mov	w2, #0x7                   	// #7
  41071c:	add	x0, sp, #0x50
  410720:	bl	410334 <ferror@plt+0xd4f4>
  410724:	b	41073c <ferror@plt+0xd8fc>
  410728:	ldr	x0, [sp, #80]
  41072c:	str	x0, [x23]
  410730:	orr	w22, w22, #0x2
  410734:	b	41056c <ferror@plt+0xd72c>
  410738:	mov	w0, #0x0                   	// #0
  41073c:	orr	w22, w22, w0
  410740:	ldr	x0, [x20]
  410744:	add	x1, x0, w25, sxtw
  410748:	str	x1, [x20]
  41074c:	ldrb	w1, [x0, w25, sxtw]
  410750:	orr	w0, w22, #0x2
  410754:	cmp	w1, #0x0
  410758:	csel	w22, w0, w22, ne  // ne = any
  41075c:	b	410564 <ferror@plt+0xd724>
  410760:	mov	w22, #0x4                   	// #4
  410764:	b	41056c <ferror@plt+0xd72c>
  410768:	mov	w22, #0x4                   	// #4
  41076c:	b	41056c <ferror@plt+0xd72c>
  410770:	stp	x29, x30, [sp, #-64]!
  410774:	mov	x29, sp
  410778:	stp	x19, x20, [sp, #16]
  41077c:	stp	x21, x22, [sp, #32]
  410780:	mov	w6, w1
  410784:	and	w2, w2, #0xff
  410788:	mov	x20, x4
  41078c:	adrp	x1, 428000 <_obstack_memory_used@@Base+0x16a28>
  410790:	ldr	w21, [x1, #1216]
  410794:	cmp	w0, #0x3
  410798:	b.hi	4107f4 <ferror@plt+0xd9b4>  // b.pmore
  41079c:	cmp	w0, #0x1
  4107a0:	b.hi	41080c <ferror@plt+0xd9cc>  // b.pmore
  4107a4:	cmp	w0, #0x1
  4107a8:	b.ne	410808 <ferror@plt+0xd9c8>  // b.any
  4107ac:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  4107b0:	add	x1, x0, #0xe98
  4107b4:	tbnz	w6, #31, 410818 <ferror@plt+0xd9d8>
  4107b8:	sbfiz	x6, x6, #5, #32
  4107bc:	ldr	x22, [x3, x6]
  4107c0:	adrp	x6, 414000 <_obstack_memory_used@@Base+0x2a28>
  4107c4:	add	x19, x6, #0xed8
  4107c8:	mov	w2, #0x5                   	// #5
  4107cc:	mov	x0, #0x0                   	// #0
  4107d0:	bl	402d20 <dcgettext@plt>
  4107d4:	mov	x5, x20
  4107d8:	mov	x4, x22
  4107dc:	mov	x3, x19
  4107e0:	mov	x2, x0
  4107e4:	mov	w1, #0x0                   	// #0
  4107e8:	mov	w0, w21
  4107ec:	bl	4027b0 <error@plt>
  4107f0:	bl	402a80 <abort@plt>
  4107f4:	cmp	w0, #0x4
  4107f8:	b.ne	410808 <ferror@plt+0xd9c8>  // b.any
  4107fc:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  410800:	add	x1, x0, #0xeb8
  410804:	b	4107b4 <ferror@plt+0xd974>
  410808:	bl	402a80 <abort@plt>
  41080c:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  410810:	add	x1, x0, #0xe70
  410814:	b	4107b4 <ferror@plt+0xd974>
  410818:	adrp	x19, 414000 <_obstack_memory_used@@Base+0x2a28>
  41081c:	add	x19, x19, #0xed8
  410820:	sub	x19, x19, w6, sxtw
  410824:	strb	w2, [sp, #56]
  410828:	strb	wzr, [sp, #57]
  41082c:	add	x22, sp, #0x38
  410830:	b	4107c8 <ferror@plt+0xd988>
  410834:	mov	x6, x0
  410838:	sub	w3, w2, #0x1
  41083c:	cbz	w2, 41088c <ferror@plt+0xda4c>
  410840:	ldr	x2, [x0]
  410844:	mov	w0, #0x0                   	// #0
  410848:	sxtw	x1, w1
  41084c:	mov	w7, #0x1                   	// #1
  410850:	mov	w5, #0x0                   	// #0
  410854:	b	410870 <ferror@plt+0xda30>
  410858:	mul	x2, x2, x1
  41085c:	mov	w4, w5
  410860:	orr	w0, w0, w4
  410864:	sub	w3, w3, #0x1
  410868:	cmn	w3, #0x1
  41086c:	b.eq	410884 <ferror@plt+0xda44>  // b.none
  410870:	umulh	x4, x2, x1
  410874:	cbz	x4, 410858 <ferror@plt+0xda18>
  410878:	mov	x2, #0xffffffffffffffff    	// #-1
  41087c:	mov	w4, w7
  410880:	b	410860 <ferror@plt+0xda20>
  410884:	str	x2, [x6]
  410888:	ret
  41088c:	mov	w0, #0x0                   	// #0
  410890:	b	410888 <ferror@plt+0xda48>
  410894:	stp	x29, x30, [sp, #-96]!
  410898:	mov	x29, sp
  41089c:	stp	x19, x20, [sp, #16]
  4108a0:	stp	x21, x22, [sp, #32]
  4108a4:	stp	x23, x24, [sp, #48]
  4108a8:	stp	x25, x26, [sp, #64]
  4108ac:	cmp	w2, #0x24
  4108b0:	b.hi	4108f0 <ferror@plt+0xdab0>  // b.pmore
  4108b4:	mov	x25, x0
  4108b8:	mov	w24, w2
  4108bc:	mov	x23, x3
  4108c0:	mov	x21, x4
  4108c4:	cmp	x1, #0x0
  4108c8:	add	x0, sp, #0x58
  4108cc:	csel	x20, x0, x1, eq  // eq = none
  4108d0:	bl	402db0 <__errno_location@plt>
  4108d4:	mov	x26, x0
  4108d8:	str	wzr, [x0]
  4108dc:	ldrb	w19, [x25]
  4108e0:	bl	402b60 <__ctype_b_loc@plt>
  4108e4:	ldr	x2, [x0]
  4108e8:	mov	x0, x25
  4108ec:	b	410914 <ferror@plt+0xdad4>
  4108f0:	adrp	x3, 414000 <_obstack_memory_used@@Base+0x2a28>
  4108f4:	add	x3, x3, #0xee0
  4108f8:	mov	w2, #0x54                  	// #84
  4108fc:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  410900:	add	x1, x1, #0xe28
  410904:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  410908:	add	x0, x0, #0xe38
  41090c:	bl	402da0 <__assert_fail@plt>
  410910:	ldrb	w19, [x0, #1]!
  410914:	and	x1, x19, #0xff
  410918:	ldrh	w1, [x2, x1, lsl #1]
  41091c:	tbnz	w1, #13, 410910 <ferror@plt+0xdad0>
  410920:	mov	w22, #0x4                   	// #4
  410924:	cmp	w19, #0x2d
  410928:	b.eq	410a70 <ferror@plt+0xdc30>  // b.none
  41092c:	mov	w3, #0x0                   	// #0
  410930:	mov	w2, w24
  410934:	mov	x1, x20
  410938:	mov	x0, x25
  41093c:	bl	4029c0 <__strtoul_internal@plt>
  410940:	str	x0, [sp, #80]
  410944:	ldr	x24, [x20]
  410948:	cmp	x24, x25
  41094c:	b.eq	41096c <ferror@plt+0xdb2c>  // b.none
  410950:	ldr	w1, [x26]
  410954:	cbz	w1, 410a58 <ferror@plt+0xdc18>
  410958:	mov	w22, #0x4                   	// #4
  41095c:	cmp	w1, #0x22
  410960:	b.ne	410a70 <ferror@plt+0xdc30>  // b.any
  410964:	mov	w22, #0x1                   	// #1
  410968:	b	410a5c <ferror@plt+0xdc1c>
  41096c:	cbz	x21, 410c64 <ferror@plt+0xde24>
  410970:	ldrb	w1, [x25]
  410974:	cbz	w1, 410a70 <ferror@plt+0xdc30>
  410978:	mov	x0, x21
  41097c:	bl	402c00 <strchr@plt>
  410980:	cbz	x0, 410c6c <ferror@plt+0xde2c>
  410984:	mov	x0, #0x1                   	// #1
  410988:	str	x0, [sp, #80]
  41098c:	ldrb	w19, [x24]
  410990:	mov	w22, #0x0                   	// #0
  410994:	mov	w1, w19
  410998:	mov	x0, x21
  41099c:	bl	402c00 <strchr@plt>
  4109a0:	cbz	x0, 410a94 <ferror@plt+0xdc54>
  4109a4:	sub	w0, w19, #0x45
  4109a8:	and	w0, w0, #0xff
  4109ac:	cmp	w0, #0x2f
  4109b0:	b.hi	410abc <ferror@plt+0xdc7c>  // b.pmore
  4109b4:	mov	x2, #0x1                   	// #1
  4109b8:	lsl	x0, x2, x0
  4109bc:	mov	w25, #0x1                   	// #1
  4109c0:	mov	w1, #0x400                 	// #1024
  4109c4:	mov	x2, #0x8945                	// #35141
  4109c8:	movk	x2, #0x30, lsl #16
  4109cc:	movk	x2, #0x8144, lsl #32
  4109d0:	tst	x0, x2
  4109d4:	b.eq	410a14 <ferror@plt+0xdbd4>  // b.none
  4109d8:	mov	w1, #0x30                  	// #48
  4109dc:	mov	x0, x21
  4109e0:	bl	402c00 <strchr@plt>
  4109e4:	cbz	x0, 410ac8 <ferror@plt+0xdc88>
  4109e8:	ldrb	w0, [x24, #1]
  4109ec:	cmp	w0, #0x44
  4109f0:	b.eq	410ad4 <ferror@plt+0xdc94>  // b.none
  4109f4:	cmp	w0, #0x69
  4109f8:	b.eq	410aa4 <ferror@plt+0xdc64>  // b.none
  4109fc:	cmp	w0, #0x42
  410a00:	mov	w25, #0x2                   	// #2
  410a04:	csinc	w25, w25, wzr, eq  // eq = none
  410a08:	mov	w1, #0x400                 	// #1024
  410a0c:	mov	w0, #0x3e8                 	// #1000
  410a10:	csel	w1, w1, w0, ne  // ne = any
  410a14:	cmp	w19, #0x5a
  410a18:	b.eq	410c1c <ferror@plt+0xdddc>  // b.none
  410a1c:	b.hi	410b3c <ferror@plt+0xdcfc>  // b.pmore
  410a20:	cmp	w19, #0x4d
  410a24:	b.eq	410bbc <ferror@plt+0xdd7c>  // b.none
  410a28:	b.hi	410b04 <ferror@plt+0xdcc4>  // b.pmore
  410a2c:	cmp	w19, #0x45
  410a30:	b.eq	410bec <ferror@plt+0xddac>  // b.none
  410a34:	b.ls	410ae0 <ferror@plt+0xdca0>  // b.plast
  410a38:	cmp	w19, #0x47
  410a3c:	b.eq	410b80 <ferror@plt+0xdd40>  // b.none
  410a40:	cmp	w19, #0x4b
  410a44:	b.ne	410c2c <ferror@plt+0xddec>  // b.any
  410a48:	mov	w2, #0x1                   	// #1
  410a4c:	add	x0, sp, #0x50
  410a50:	bl	410834 <ferror@plt+0xd9f4>
  410a54:	b	410c40 <ferror@plt+0xde00>
  410a58:	mov	w22, #0x0                   	// #0
  410a5c:	cbz	x21, 410a8c <ferror@plt+0xdc4c>
  410a60:	ldrb	w19, [x24]
  410a64:	cbnz	w19, 410994 <ferror@plt+0xdb54>
  410a68:	ldr	x0, [sp, #80]
  410a6c:	str	x0, [x23]
  410a70:	mov	w0, w22
  410a74:	ldp	x19, x20, [sp, #16]
  410a78:	ldp	x21, x22, [sp, #32]
  410a7c:	ldp	x23, x24, [sp, #48]
  410a80:	ldp	x25, x26, [sp, #64]
  410a84:	ldp	x29, x30, [sp], #96
  410a88:	ret
  410a8c:	str	x0, [x23]
  410a90:	b	410a70 <ferror@plt+0xdc30>
  410a94:	ldr	x0, [sp, #80]
  410a98:	str	x0, [x23]
  410a9c:	orr	w22, w22, #0x2
  410aa0:	b	410a70 <ferror@plt+0xdc30>
  410aa4:	ldrb	w0, [x24, #2]
  410aa8:	cmp	w0, #0x42
  410aac:	mov	w25, #0x3                   	// #3
  410ab0:	csinc	w25, w25, wzr, eq  // eq = none
  410ab4:	mov	w1, #0x400                 	// #1024
  410ab8:	b	410a14 <ferror@plt+0xdbd4>
  410abc:	mov	w25, #0x1                   	// #1
  410ac0:	mov	w1, #0x400                 	// #1024
  410ac4:	b	410a14 <ferror@plt+0xdbd4>
  410ac8:	mov	w25, #0x1                   	// #1
  410acc:	mov	w1, #0x400                 	// #1024
  410ad0:	b	410a14 <ferror@plt+0xdbd4>
  410ad4:	mov	w25, #0x2                   	// #2
  410ad8:	mov	w1, #0x3e8                 	// #1000
  410adc:	b	410a14 <ferror@plt+0xdbd4>
  410ae0:	cmp	w19, #0x42
  410ae4:	b.ne	410c2c <ferror@plt+0xddec>  // b.any
  410ae8:	ldr	x0, [sp, #80]
  410aec:	cmp	xzr, x0, lsr #54
  410af0:	b.ne	410bdc <ferror@plt+0xdd9c>  // b.any
  410af4:	lsl	x0, x0, #10
  410af8:	str	x0, [sp, #80]
  410afc:	mov	w0, #0x0                   	// #0
  410b00:	b	410c40 <ferror@plt+0xde00>
  410b04:	cmp	w19, #0x54
  410b08:	b.eq	410bfc <ferror@plt+0xddbc>  // b.none
  410b0c:	cmp	w19, #0x59
  410b10:	b.ne	410b24 <ferror@plt+0xdce4>  // b.any
  410b14:	mov	w2, #0x8                   	// #8
  410b18:	add	x0, sp, #0x50
  410b1c:	bl	410834 <ferror@plt+0xd9f4>
  410b20:	b	410c40 <ferror@plt+0xde00>
  410b24:	cmp	w19, #0x50
  410b28:	b.ne	410c2c <ferror@plt+0xddec>  // b.any
  410b2c:	mov	w2, #0x5                   	// #5
  410b30:	add	x0, sp, #0x50
  410b34:	bl	410834 <ferror@plt+0xd9f4>
  410b38:	b	410c40 <ferror@plt+0xde00>
  410b3c:	cmp	w19, #0x6b
  410b40:	b.eq	410a48 <ferror@plt+0xdc08>  // b.none
  410b44:	b.ls	410b70 <ferror@plt+0xdd30>  // b.plast
  410b48:	cmp	w19, #0x74
  410b4c:	b.eq	410bfc <ferror@plt+0xddbc>  // b.none
  410b50:	cmp	w19, #0x77
  410b54:	b.ne	410bb4 <ferror@plt+0xdd74>  // b.any
  410b58:	ldr	x0, [sp, #80]
  410b5c:	tbnz	x0, #63, 410c0c <ferror@plt+0xddcc>
  410b60:	lsl	x0, x0, #1
  410b64:	str	x0, [sp, #80]
  410b68:	mov	w0, #0x0                   	// #0
  410b6c:	b	410c40 <ferror@plt+0xde00>
  410b70:	cmp	w19, #0x63
  410b74:	b.eq	410c3c <ferror@plt+0xddfc>  // b.none
  410b78:	cmp	w19, #0x67
  410b7c:	b.ne	410b90 <ferror@plt+0xdd50>  // b.any
  410b80:	mov	w2, #0x3                   	// #3
  410b84:	add	x0, sp, #0x50
  410b88:	bl	410834 <ferror@plt+0xd9f4>
  410b8c:	b	410c40 <ferror@plt+0xde00>
  410b90:	cmp	w19, #0x62
  410b94:	b.ne	410c2c <ferror@plt+0xddec>  // b.any
  410b98:	ldr	x0, [sp, #80]
  410b9c:	cmp	xzr, x0, lsr #55
  410ba0:	b.ne	410bcc <ferror@plt+0xdd8c>  // b.any
  410ba4:	lsl	x0, x0, #9
  410ba8:	str	x0, [sp, #80]
  410bac:	mov	w0, #0x0                   	// #0
  410bb0:	b	410c40 <ferror@plt+0xde00>
  410bb4:	cmp	w19, #0x6d
  410bb8:	b.ne	410c2c <ferror@plt+0xddec>  // b.any
  410bbc:	mov	w2, #0x2                   	// #2
  410bc0:	add	x0, sp, #0x50
  410bc4:	bl	410834 <ferror@plt+0xd9f4>
  410bc8:	b	410c40 <ferror@plt+0xde00>
  410bcc:	mov	x0, #0xffffffffffffffff    	// #-1
  410bd0:	str	x0, [sp, #80]
  410bd4:	mov	w0, #0x1                   	// #1
  410bd8:	b	410c40 <ferror@plt+0xde00>
  410bdc:	mov	x0, #0xffffffffffffffff    	// #-1
  410be0:	str	x0, [sp, #80]
  410be4:	mov	w0, #0x1                   	// #1
  410be8:	b	410c40 <ferror@plt+0xde00>
  410bec:	mov	w2, #0x6                   	// #6
  410bf0:	add	x0, sp, #0x50
  410bf4:	bl	410834 <ferror@plt+0xd9f4>
  410bf8:	b	410c40 <ferror@plt+0xde00>
  410bfc:	mov	w2, #0x4                   	// #4
  410c00:	add	x0, sp, #0x50
  410c04:	bl	410834 <ferror@plt+0xd9f4>
  410c08:	b	410c40 <ferror@plt+0xde00>
  410c0c:	mov	x0, #0xffffffffffffffff    	// #-1
  410c10:	str	x0, [sp, #80]
  410c14:	mov	w0, #0x1                   	// #1
  410c18:	b	410c40 <ferror@plt+0xde00>
  410c1c:	mov	w2, #0x7                   	// #7
  410c20:	add	x0, sp, #0x50
  410c24:	bl	410834 <ferror@plt+0xd9f4>
  410c28:	b	410c40 <ferror@plt+0xde00>
  410c2c:	ldr	x0, [sp, #80]
  410c30:	str	x0, [x23]
  410c34:	orr	w22, w22, #0x2
  410c38:	b	410a70 <ferror@plt+0xdc30>
  410c3c:	mov	w0, #0x0                   	// #0
  410c40:	orr	w22, w22, w0
  410c44:	ldr	x0, [x20]
  410c48:	add	x1, x0, w25, sxtw
  410c4c:	str	x1, [x20]
  410c50:	ldrb	w1, [x0, w25, sxtw]
  410c54:	orr	w0, w22, #0x2
  410c58:	cmp	w1, #0x0
  410c5c:	csel	w22, w0, w22, ne  // ne = any
  410c60:	b	410a68 <ferror@plt+0xdc28>
  410c64:	mov	w22, #0x4                   	// #4
  410c68:	b	410a70 <ferror@plt+0xdc30>
  410c6c:	mov	w22, #0x4                   	// #4
  410c70:	b	410a70 <ferror@plt+0xdc30>
  410c74:	stp	x29, x30, [sp, #-48]!
  410c78:	mov	x29, sp
  410c7c:	stp	x19, x20, [sp, #16]
  410c80:	mov	x19, x0
  410c84:	bl	402880 <fileno@plt>
  410c88:	tbnz	w0, #31, 410ce4 <ferror@plt+0xdea4>
  410c8c:	mov	x0, x19
  410c90:	bl	402d50 <__freading@plt>
  410c94:	cbz	w0, 410cb4 <ferror@plt+0xde74>
  410c98:	mov	x0, x19
  410c9c:	bl	402880 <fileno@plt>
  410ca0:	mov	w2, #0x1                   	// #1
  410ca4:	mov	x1, #0x0                   	// #0
  410ca8:	bl	402850 <lseek@plt>
  410cac:	cmn	x0, #0x1
  410cb0:	b.eq	410d00 <ferror@plt+0xdec0>  // b.none
  410cb4:	mov	x0, x19
  410cb8:	bl	411030 <ferror@plt+0xe1f0>
  410cbc:	cbz	w0, 410d00 <ferror@plt+0xdec0>
  410cc0:	str	x21, [sp, #32]
  410cc4:	bl	402db0 <__errno_location@plt>
  410cc8:	mov	x20, x0
  410ccc:	ldr	w21, [x0]
  410cd0:	mov	x0, x19
  410cd4:	bl	4028a0 <fclose@plt>
  410cd8:	cbnz	w21, 410cf0 <ferror@plt+0xdeb0>
  410cdc:	ldr	x21, [sp, #32]
  410ce0:	b	410d08 <ferror@plt+0xdec8>
  410ce4:	mov	x0, x19
  410ce8:	bl	4028a0 <fclose@plt>
  410cec:	b	410d08 <ferror@plt+0xdec8>
  410cf0:	str	w21, [x20]
  410cf4:	mov	w0, #0xffffffff            	// #-1
  410cf8:	ldr	x21, [sp, #32]
  410cfc:	b	410d08 <ferror@plt+0xdec8>
  410d00:	mov	x0, x19
  410d04:	bl	4028a0 <fclose@plt>
  410d08:	ldp	x19, x20, [sp, #16]
  410d0c:	ldp	x29, x30, [sp], #48
  410d10:	ret
  410d14:	stp	x29, x30, [sp, #-112]!
  410d18:	mov	x29, sp
  410d1c:	stp	x19, x20, [sp, #16]
  410d20:	mov	w19, w0
  410d24:	str	x2, [sp, #80]
  410d28:	str	x3, [sp, #88]
  410d2c:	str	x4, [sp, #96]
  410d30:	str	x5, [sp, #104]
  410d34:	add	x0, sp, #0x70
  410d38:	str	x0, [sp, #48]
  410d3c:	str	x0, [sp, #56]
  410d40:	add	x0, sp, #0x50
  410d44:	str	x0, [sp, #64]
  410d48:	mov	w0, #0xffffffe0            	// #-32
  410d4c:	str	w0, [sp, #72]
  410d50:	str	wzr, [sp, #76]
  410d54:	cbz	w1, 410d98 <ferror@plt+0xdf58>
  410d58:	cmp	w1, #0x406
  410d5c:	b.eq	410e00 <ferror@plt+0xdfc0>  // b.none
  410d60:	cmp	w1, #0xb
  410d64:	b.gt	410f60 <ferror@plt+0xe120>
  410d68:	tbz	w1, #31, 410f3c <ferror@plt+0xe0fc>
  410d6c:	ldr	w2, [sp, #72]
  410d70:	ldr	x0, [sp, #48]
  410d74:	tbnz	w2, #31, 410ff4 <ferror@plt+0xe1b4>
  410d78:	add	x2, x0, #0xf
  410d7c:	and	x2, x2, #0xfffffffffffffff8
  410d80:	str	x2, [sp, #48]
  410d84:	ldr	x2, [x0]
  410d88:	mov	w0, w19
  410d8c:	bl	402c50 <fcntl@plt>
  410d90:	mov	w20, w0
  410d94:	b	410dc4 <ferror@plt+0xdf84>
  410d98:	ldr	w1, [sp, #72]
  410d9c:	ldr	x0, [sp, #48]
  410da0:	tbnz	w1, #31, 410dd4 <ferror@plt+0xdf94>
  410da4:	add	x1, x0, #0xb
  410da8:	and	x1, x1, #0xfffffffffffffff8
  410dac:	str	x1, [sp, #48]
  410db0:	ldr	w2, [x0]
  410db4:	mov	w1, #0x0                   	// #0
  410db8:	mov	w0, w19
  410dbc:	bl	402c50 <fcntl@plt>
  410dc0:	mov	w20, w0
  410dc4:	mov	w0, w20
  410dc8:	ldp	x19, x20, [sp, #16]
  410dcc:	ldp	x29, x30, [sp], #112
  410dd0:	ret
  410dd4:	add	w2, w1, #0x8
  410dd8:	str	w2, [sp, #72]
  410ddc:	cmp	w2, #0x0
  410de0:	b.le	410df4 <ferror@plt+0xdfb4>
  410de4:	add	x1, x0, #0xb
  410de8:	and	x1, x1, #0xfffffffffffffff8
  410dec:	str	x1, [sp, #48]
  410df0:	b	410db0 <ferror@plt+0xdf70>
  410df4:	ldr	x0, [sp, #56]
  410df8:	add	x0, x0, w1, sxtw
  410dfc:	b	410db0 <ferror@plt+0xdf70>
  410e00:	str	x21, [sp, #32]
  410e04:	ldr	w1, [sp, #72]
  410e08:	ldr	x0, [sp, #48]
  410e0c:	tbnz	w1, #31, 410e58 <ferror@plt+0xe018>
  410e10:	add	x1, x0, #0xb
  410e14:	and	x1, x1, #0xfffffffffffffff8
  410e18:	str	x1, [sp, #48]
  410e1c:	ldr	w21, [x0]
  410e20:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  410e24:	ldr	w0, [x0, #3312]
  410e28:	tbnz	w0, #31, 410ee8 <ferror@plt+0xe0a8>
  410e2c:	mov	w2, w21
  410e30:	mov	w1, #0x406                 	// #1030
  410e34:	mov	w0, w19
  410e38:	bl	402c50 <fcntl@plt>
  410e3c:	mov	w20, w0
  410e40:	tbnz	w0, #31, 410e84 <ferror@plt+0xe044>
  410e44:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  410e48:	mov	w1, #0x1                   	// #1
  410e4c:	str	w1, [x0, #3312]
  410e50:	ldr	x21, [sp, #32]
  410e54:	b	410dc4 <ferror@plt+0xdf84>
  410e58:	add	w2, w1, #0x8
  410e5c:	str	w2, [sp, #72]
  410e60:	cmp	w2, #0x0
  410e64:	b.le	410e78 <ferror@plt+0xe038>
  410e68:	add	x1, x0, #0xb
  410e6c:	and	x1, x1, #0xfffffffffffffff8
  410e70:	str	x1, [sp, #48]
  410e74:	b	410e1c <ferror@plt+0xdfdc>
  410e78:	ldr	x0, [sp, #56]
  410e7c:	add	x0, x0, w1, sxtw
  410e80:	b	410e1c <ferror@plt+0xdfdc>
  410e84:	bl	402db0 <__errno_location@plt>
  410e88:	ldr	w0, [x0]
  410e8c:	cmp	w0, #0x16
  410e90:	b.ne	410e44 <ferror@plt+0xe004>  // b.any
  410e94:	mov	w2, w21
  410e98:	mov	w1, #0x0                   	// #0
  410e9c:	mov	w0, w19
  410ea0:	bl	402c50 <fcntl@plt>
  410ea4:	mov	w20, w0
  410ea8:	tbnz	w0, #31, 411020 <ferror@plt+0xe1e0>
  410eac:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  410eb0:	mov	w1, #0xffffffff            	// #-1
  410eb4:	str	w1, [x0, #3312]
  410eb8:	mov	w1, #0x1                   	// #1
  410ebc:	mov	w0, w20
  410ec0:	bl	402c50 <fcntl@plt>
  410ec4:	tbnz	w0, #31, 410f18 <ferror@plt+0xe0d8>
  410ec8:	orr	w2, w0, #0x1
  410ecc:	mov	w1, #0x2                   	// #2
  410ed0:	mov	w0, w20
  410ed4:	bl	402c50 <fcntl@plt>
  410ed8:	cmn	w0, #0x1
  410edc:	b.eq	410f18 <ferror@plt+0xe0d8>  // b.none
  410ee0:	ldr	x21, [sp, #32]
  410ee4:	b	410dc4 <ferror@plt+0xdf84>
  410ee8:	mov	w2, w21
  410eec:	mov	w1, #0x0                   	// #0
  410ef0:	mov	w0, w19
  410ef4:	bl	402c50 <fcntl@plt>
  410ef8:	mov	w20, w0
  410efc:	tbnz	w0, #31, 411028 <ferror@plt+0xe1e8>
  410f00:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  410f04:	ldr	w0, [x0, #3312]
  410f08:	cmn	w0, #0x1
  410f0c:	b.eq	410eb8 <ferror@plt+0xe078>  // b.none
  410f10:	ldr	x21, [sp, #32]
  410f14:	b	410dc4 <ferror@plt+0xdf84>
  410f18:	bl	402db0 <__errno_location@plt>
  410f1c:	mov	x19, x0
  410f20:	ldr	w21, [x0]
  410f24:	mov	w0, w20
  410f28:	bl	402a10 <close@plt>
  410f2c:	str	w21, [x19]
  410f30:	mov	w20, #0xffffffff            	// #-1
  410f34:	ldr	x21, [sp, #32]
  410f38:	b	410dc4 <ferror@plt+0xdf84>
  410f3c:	mov	x2, #0x1                   	// #1
  410f40:	lsl	x2, x2, x1
  410f44:	mov	x0, #0x515                 	// #1301
  410f48:	tst	x2, x0
  410f4c:	b.ne	410f9c <ferror@plt+0xe15c>  // b.any
  410f50:	mov	x0, #0xa0a                 	// #2570
  410f54:	tst	x2, x0
  410f58:	b.ne	410f8c <ferror@plt+0xe14c>  // b.any
  410f5c:	b	410d6c <ferror@plt+0xdf2c>
  410f60:	sub	w0, w1, #0x400
  410f64:	cmp	w0, #0xa
  410f68:	b.hi	410d6c <ferror@plt+0xdf2c>  // b.pmore
  410f6c:	mov	x2, #0x1                   	// #1
  410f70:	lsl	x2, x2, x0
  410f74:	mov	x0, #0x2c5                 	// #709
  410f78:	tst	x2, x0
  410f7c:	b.ne	410f9c <ferror@plt+0xe15c>  // b.any
  410f80:	mov	x0, #0x502                 	// #1282
  410f84:	tst	x2, x0
  410f88:	b.eq	410d6c <ferror@plt+0xdf2c>  // b.none
  410f8c:	mov	w0, w19
  410f90:	bl	402c50 <fcntl@plt>
  410f94:	mov	w20, w0
  410f98:	b	410dc4 <ferror@plt+0xdf84>
  410f9c:	ldr	w2, [sp, #72]
  410fa0:	ldr	x0, [sp, #48]
  410fa4:	tbnz	w2, #31, 410fc8 <ferror@plt+0xe188>
  410fa8:	add	x2, x0, #0xb
  410fac:	and	x2, x2, #0xfffffffffffffff8
  410fb0:	str	x2, [sp, #48]
  410fb4:	ldr	w2, [x0]
  410fb8:	mov	w0, w19
  410fbc:	bl	402c50 <fcntl@plt>
  410fc0:	mov	w20, w0
  410fc4:	b	410dc4 <ferror@plt+0xdf84>
  410fc8:	add	w3, w2, #0x8
  410fcc:	str	w3, [sp, #72]
  410fd0:	cmp	w3, #0x0
  410fd4:	b.le	410fe8 <ferror@plt+0xe1a8>
  410fd8:	add	x2, x0, #0xb
  410fdc:	and	x2, x2, #0xfffffffffffffff8
  410fe0:	str	x2, [sp, #48]
  410fe4:	b	410fb4 <ferror@plt+0xe174>
  410fe8:	ldr	x0, [sp, #56]
  410fec:	add	x0, x0, w2, sxtw
  410ff0:	b	410fb4 <ferror@plt+0xe174>
  410ff4:	add	w3, w2, #0x8
  410ff8:	str	w3, [sp, #72]
  410ffc:	cmp	w3, #0x0
  411000:	b.le	411014 <ferror@plt+0xe1d4>
  411004:	add	x2, x0, #0xf
  411008:	and	x2, x2, #0xfffffffffffffff8
  41100c:	str	x2, [sp, #48]
  411010:	b	410d84 <ferror@plt+0xdf44>
  411014:	ldr	x0, [sp, #56]
  411018:	add	x0, x0, w2, sxtw
  41101c:	b	410d84 <ferror@plt+0xdf44>
  411020:	ldr	x21, [sp, #32]
  411024:	b	410dc4 <ferror@plt+0xdf84>
  411028:	ldr	x21, [sp, #32]
  41102c:	b	410dc4 <ferror@plt+0xdf84>
  411030:	stp	x29, x30, [sp, #-32]!
  411034:	mov	x29, sp
  411038:	str	x19, [sp, #16]
  41103c:	mov	x19, x0
  411040:	cbz	x0, 41104c <ferror@plt+0xe20c>
  411044:	bl	402d50 <__freading@plt>
  411048:	cbnz	w0, 411060 <ferror@plt+0xe220>
  41104c:	mov	x0, x19
  411050:	bl	402c80 <fflush@plt>
  411054:	ldr	x19, [sp, #16]
  411058:	ldp	x29, x30, [sp], #32
  41105c:	ret
  411060:	ldr	w0, [x19]
  411064:	tbnz	w0, #8, 411074 <ferror@plt+0xe234>
  411068:	mov	x0, x19
  41106c:	bl	402c80 <fflush@plt>
  411070:	b	411054 <ferror@plt+0xe214>
  411074:	mov	w2, #0x1                   	// #1
  411078:	mov	x1, #0x0                   	// #0
  41107c:	mov	x0, x19
  411080:	bl	411088 <ferror@plt+0xe248>
  411084:	b	411068 <ferror@plt+0xe228>
  411088:	stp	x29, x30, [sp, #-48]!
  41108c:	mov	x29, sp
  411090:	stp	x19, x20, [sp, #16]
  411094:	str	x21, [sp, #32]
  411098:	mov	x19, x0
  41109c:	mov	x20, x1
  4110a0:	mov	w21, w2
  4110a4:	ldr	x1, [x0, #16]
  4110a8:	ldr	x0, [x0, #8]
  4110ac:	cmp	x1, x0
  4110b0:	b.eq	4110d4 <ferror@plt+0xe294>  // b.none
  4110b4:	mov	w2, w21
  4110b8:	mov	x1, x20
  4110bc:	mov	x0, x19
  4110c0:	bl	402b80 <fseeko@plt>
  4110c4:	ldp	x19, x20, [sp, #16]
  4110c8:	ldr	x21, [sp, #32]
  4110cc:	ldp	x29, x30, [sp], #48
  4110d0:	ret
  4110d4:	ldr	x1, [x19, #40]
  4110d8:	ldr	x0, [x19, #32]
  4110dc:	cmp	x1, x0
  4110e0:	b.ne	4110b4 <ferror@plt+0xe274>  // b.any
  4110e4:	ldr	x0, [x19, #72]
  4110e8:	cbnz	x0, 4110b4 <ferror@plt+0xe274>
  4110ec:	mov	x0, x19
  4110f0:	bl	402880 <fileno@plt>
  4110f4:	mov	w2, w21
  4110f8:	mov	x1, x20
  4110fc:	bl	402850 <lseek@plt>
  411100:	cmn	x0, #0x1
  411104:	b.eq	411120 <ferror@plt+0xe2e0>  // b.none
  411108:	ldr	w1, [x19]
  41110c:	and	w1, w1, #0xffffffef
  411110:	str	w1, [x19]
  411114:	str	x0, [x19, #144]
  411118:	mov	w0, #0x0                   	// #0
  41111c:	b	4110c4 <ferror@plt+0xe284>
  411120:	mov	w0, #0xffffffff            	// #-1
  411124:	b	4110c4 <ferror@plt+0xe284>
  411128:	stp	x29, x30, [sp, #-64]!
  41112c:	mov	x29, sp
  411130:	stp	x19, x20, [sp, #16]
  411134:	stp	x21, x22, [sp, #32]
  411138:	mov	x19, x0
  41113c:	mov	x22, x1
  411140:	mov	x21, x2
  411144:	cmp	x0, #0x0
  411148:	add	x0, sp, #0x3c
  41114c:	csel	x19, x0, x19, eq  // eq = none
  411150:	mov	x0, x19
  411154:	bl	402710 <mbrtowc@plt>
  411158:	mov	x20, x0
  41115c:	cmp	x21, #0x0
  411160:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  411164:	b.hi	41117c <ferror@plt+0xe33c>  // b.pmore
  411168:	mov	x0, x20
  41116c:	ldp	x19, x20, [sp, #16]
  411170:	ldp	x21, x22, [sp, #32]
  411174:	ldp	x29, x30, [sp], #64
  411178:	ret
  41117c:	mov	w0, #0x0                   	// #0
  411180:	bl	40b190 <ferror@plt+0x8350>
  411184:	and	w0, w0, #0xff
  411188:	cbnz	w0, 411168 <ferror@plt+0xe328>
  41118c:	ldrb	w0, [x22]
  411190:	str	w0, [x19]
  411194:	mov	x20, #0x1                   	// #1
  411198:	b	411168 <ferror@plt+0xe328>
  41119c:	stp	x29, x30, [sp, #-64]!
  4111a0:	mov	x29, sp
  4111a4:	str	x21, [sp, #32]
  4111a8:	mov	x21, x1
  4111ac:	ldr	x1, [x0, #8]
  4111b0:	mov	x2, #0xc9ff                	// #51711
  4111b4:	movk	x2, #0x3b9a, lsl #16
  4111b8:	cmp	x1, x2
  4111bc:	b.hi	411224 <ferror@plt+0xe3e4>  // b.pmore
  4111c0:	stp	x19, x20, [sp, #16]
  4111c4:	ldr	x19, [x0]
  4111c8:	str	x1, [sp, #56]
  4111cc:	mov	x0, #0xa400                	// #41984
  4111d0:	movk	x0, #0x1f, lsl #16
  4111d4:	cmp	x19, x0
  4111d8:	b.le	411204 <ferror@plt+0xe3c4>
  4111dc:	mov	x20, x0
  4111e0:	str	x20, [sp, #48]
  4111e4:	mov	x1, x21
  4111e8:	add	x0, sp, #0x30
  4111ec:	bl	402be0 <nanosleep@plt>
  4111f0:	sub	x19, x19, x20
  4111f4:	cbnz	w0, 411238 <ferror@plt+0xe3f8>
  4111f8:	str	xzr, [sp, #56]
  4111fc:	cmp	x19, x20
  411200:	b.gt	4111e0 <ferror@plt+0xe3a0>
  411204:	str	x19, [sp, #48]
  411208:	mov	x1, x21
  41120c:	add	x0, sp, #0x30
  411210:	bl	402be0 <nanosleep@plt>
  411214:	ldp	x19, x20, [sp, #16]
  411218:	ldr	x21, [sp, #32]
  41121c:	ldp	x29, x30, [sp], #64
  411220:	ret
  411224:	bl	402db0 <__errno_location@plt>
  411228:	mov	w1, #0x16                  	// #22
  41122c:	str	w1, [x0]
  411230:	mov	w0, #0xffffffff            	// #-1
  411234:	b	411218 <ferror@plt+0xe3d8>
  411238:	cbz	x21, 411250 <ferror@plt+0xe410>
  41123c:	ldr	x1, [x21]
  411240:	add	x19, x1, x19
  411244:	str	x19, [x21]
  411248:	ldp	x19, x20, [sp, #16]
  41124c:	b	411218 <ferror@plt+0xe3d8>
  411250:	ldp	x19, x20, [sp, #16]
  411254:	b	411218 <ferror@plt+0xe3d8>
  411258:	stp	x29, x30, [sp, #-16]!
  41125c:	mov	x29, sp
  411260:	mov	x2, x0
  411264:	ldrb	w0, [x0, #80]
  411268:	tbz	w0, #0, 411280 <ferror@plt+0xe440>
  41126c:	ldr	x3, [x2, #56]
  411270:	ldr	x0, [x2, #72]
  411274:	blr	x3
  411278:	ldp	x29, x30, [sp], #16
  41127c:	ret
  411280:	ldr	x2, [x2, #56]
  411284:	mov	x0, x1
  411288:	blr	x2
  41128c:	b	411278 <ferror@plt+0xe438>
  411290:	stp	x29, x30, [sp, #-16]!
  411294:	mov	x29, sp
  411298:	mov	x2, x0
  41129c:	ldrb	w0, [x0, #80]
  4112a0:	tbz	w0, #0, 4112b8 <ferror@plt+0xe478>
  4112a4:	ldr	x3, [x2, #64]
  4112a8:	ldr	x0, [x2, #72]
  4112ac:	blr	x3
  4112b0:	ldp	x29, x30, [sp], #16
  4112b4:	ret
  4112b8:	ldr	x2, [x2, #64]
  4112bc:	mov	x0, x1
  4112c0:	blr	x2
  4112c4:	b	4112b0 <ferror@plt+0xe470>
  4112c8:	stp	x29, x30, [sp, #-48]!
  4112cc:	mov	x29, sp
  4112d0:	stp	x19, x20, [sp, #16]
  4112d4:	str	x21, [sp, #32]
  4112d8:	mov	x19, x0
  4112dc:	cmp	x2, #0x0
  4112e0:	mov	x0, #0x10                  	// #16
  4112e4:	csel	x20, x2, x0, ne  // ne = any
  4112e8:	cmp	x1, #0x0
  4112ec:	mov	x0, #0xfe0                 	// #4064
  4112f0:	csel	x1, x1, x0, ne  // ne = any
  4112f4:	str	x1, [x19]
  4112f8:	sub	x21, x20, #0x1
  4112fc:	str	x21, [x19, #48]
  411300:	mov	x0, x19
  411304:	bl	411258 <ferror@plt+0xe418>
  411308:	str	x0, [x19, #8]
  41130c:	cbz	x0, 41135c <ferror@plt+0xe51c>
  411310:	add	x2, x0, #0x10
  411314:	add	x2, x2, x21
  411318:	neg	x20, x20
  41131c:	and	x20, x2, x20
  411320:	str	x20, [x19, #16]
  411324:	str	x20, [x19, #24]
  411328:	ldr	x1, [x19]
  41132c:	add	x1, x0, x1
  411330:	str	x1, [x0]
  411334:	str	x1, [x19, #32]
  411338:	str	xzr, [x0, #8]
  41133c:	ldrb	w0, [x19, #80]
  411340:	and	w0, w0, #0xfffffff9
  411344:	strb	w0, [x19, #80]
  411348:	mov	w0, #0x1                   	// #1
  41134c:	ldp	x19, x20, [sp, #16]
  411350:	ldr	x21, [sp, #32]
  411354:	ldp	x29, x30, [sp], #48
  411358:	ret
  41135c:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  411360:	ldr	x0, [x0, #1312]
  411364:	blr	x0
  411368:	stp	x29, x30, [sp, #-32]!
  41136c:	mov	x29, sp
  411370:	str	x19, [sp, #16]
  411374:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  411378:	ldr	x19, [x0, #1328]
  41137c:	mov	w2, #0x5                   	// #5
  411380:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  411384:	add	x1, x1, #0xd98
  411388:	mov	x0, #0x0                   	// #0
  41138c:	bl	402d20 <dcgettext@plt>
  411390:	mov	x3, x0
  411394:	adrp	x2, 414000 <_obstack_memory_used@@Base+0x2a28>
  411398:	add	x2, x2, #0xa60
  41139c:	mov	w1, #0x1                   	// #1
  4113a0:	mov	x0, x19
  4113a4:	bl	402b30 <__fprintf_chk@plt>
  4113a8:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  4113ac:	ldr	w0, [x0, #1216]
  4113b0:	bl	402790 <exit@plt>

00000000004113b4 <_obstack_begin@@Base>:
  4113b4:	stp	x29, x30, [sp, #-16]!
  4113b8:	mov	x29, sp
  4113bc:	str	x3, [x0, #56]
  4113c0:	str	x4, [x0, #64]
  4113c4:	ldrb	w3, [x0, #80]
  4113c8:	and	w3, w3, #0xfffffffe
  4113cc:	strb	w3, [x0, #80]
  4113d0:	bl	4112c8 <ferror@plt+0xe488>
  4113d4:	ldp	x29, x30, [sp], #16
  4113d8:	ret

00000000004113dc <_obstack_begin_1@@Base>:
  4113dc:	stp	x29, x30, [sp, #-16]!
  4113e0:	mov	x29, sp
  4113e4:	str	x3, [x0, #56]
  4113e8:	str	x4, [x0, #64]
  4113ec:	str	x5, [x0, #72]
  4113f0:	ldrb	w3, [x0, #80]
  4113f4:	orr	w3, w3, #0x1
  4113f8:	strb	w3, [x0, #80]
  4113fc:	bl	4112c8 <ferror@plt+0xe488>
  411400:	ldp	x29, x30, [sp], #16
  411404:	ret

0000000000411408 <_obstack_newchunk@@Base>:
  411408:	stp	x29, x30, [sp, #-64]!
  41140c:	mov	x29, sp
  411410:	stp	x19, x20, [sp, #16]
  411414:	stp	x21, x22, [sp, #32]
  411418:	str	x23, [sp, #48]
  41141c:	mov	x19, x0
  411420:	ldr	x22, [x0, #8]
  411424:	ldr	x21, [x0, #24]
  411428:	ldr	x0, [x0, #16]
  41142c:	sub	x21, x21, x0
  411430:	add	x1, x21, x1
  411434:	ldr	x0, [x19, #48]
  411438:	add	x0, x1, x0
  41143c:	lsr	x20, x21, #3
  411440:	add	x20, x20, #0x64
  411444:	add	x20, x20, x0
  411448:	ldr	x2, [x19]
  41144c:	cmp	x2, x0
  411450:	csel	x2, x2, x0, cs  // cs = hs, nlast
  411454:	cmp	x2, x20
  411458:	csel	x20, x2, x20, cs  // cs = hs, nlast
  41145c:	cmp	x21, x1
  411460:	ccmp	x1, x0, #0x2, ls  // ls = plast
  411464:	b.hi	411500 <_obstack_newchunk@@Base+0xf8>  // b.pmore
  411468:	mov	x1, x20
  41146c:	mov	x0, x19
  411470:	bl	411258 <ferror@plt+0xe418>
  411474:	mov	x23, x0
  411478:	cbz	x0, 411500 <_obstack_newchunk@@Base+0xf8>
  41147c:	str	x0, [x19, #8]
  411480:	str	x22, [x0, #8]
  411484:	add	x2, x0, x20
  411488:	str	x2, [x19, #32]
  41148c:	mov	x1, x0
  411490:	str	x2, [x1], #16
  411494:	ldr	x20, [x19, #48]
  411498:	add	x1, x1, x20
  41149c:	bic	x20, x1, x20
  4114a0:	mov	x2, x21
  4114a4:	ldr	x1, [x19, #16]
  4114a8:	mov	x0, x20
  4114ac:	bl	402720 <memcpy@plt>
  4114b0:	ldrb	w0, [x19, #80]
  4114b4:	tbnz	w0, #1, 4114d4 <_obstack_newchunk@@Base+0xcc>
  4114b8:	ldr	x0, [x19, #48]
  4114bc:	add	x1, x22, #0x10
  4114c0:	add	x1, x1, x0
  4114c4:	bic	x0, x1, x0
  4114c8:	ldr	x1, [x19, #16]
  4114cc:	cmp	x1, x0
  4114d0:	b.eq	41150c <_obstack_newchunk@@Base+0x104>  // b.none
  4114d4:	str	x20, [x19, #16]
  4114d8:	add	x20, x20, x21
  4114dc:	str	x20, [x19, #24]
  4114e0:	ldrb	w0, [x19, #80]
  4114e4:	and	w0, w0, #0xfffffffd
  4114e8:	strb	w0, [x19, #80]
  4114ec:	ldp	x19, x20, [sp, #16]
  4114f0:	ldp	x21, x22, [sp, #32]
  4114f4:	ldr	x23, [sp, #48]
  4114f8:	ldp	x29, x30, [sp], #64
  4114fc:	ret
  411500:	adrp	x0, 428000 <_obstack_memory_used@@Base+0x16a28>
  411504:	ldr	x0, [x0, #1312]
  411508:	blr	x0
  41150c:	ldr	x0, [x22, #8]
  411510:	str	x0, [x23, #8]
  411514:	mov	x1, x22
  411518:	mov	x0, x19
  41151c:	bl	411290 <ferror@plt+0xe450>
  411520:	b	4114d4 <_obstack_newchunk@@Base+0xcc>

0000000000411524 <_obstack_allocated_p@@Base>:
  411524:	ldr	x0, [x0, #8]
  411528:	cbnz	x0, 411538 <_obstack_allocated_p@@Base+0x14>
  41152c:	b	41154c <_obstack_allocated_p@@Base+0x28>
  411530:	ldr	x0, [x0, #8]
  411534:	cbz	x0, 41154c <_obstack_allocated_p@@Base+0x28>
  411538:	cmp	x1, x0
  41153c:	b.ls	411530 <_obstack_allocated_p@@Base+0xc>  // b.plast
  411540:	ldr	x2, [x0]
  411544:	cmp	x2, x1
  411548:	b.cc	411530 <_obstack_allocated_p@@Base+0xc>  // b.lo, b.ul, b.last
  41154c:	cmp	x0, #0x0
  411550:	cset	w0, ne  // ne = any
  411554:	ret

0000000000411558 <_obstack_free@@Base>:
  411558:	stp	x29, x30, [sp, #-48]!
  41155c:	mov	x29, sp
  411560:	stp	x19, x20, [sp, #16]
  411564:	str	x21, [sp, #32]
  411568:	mov	x19, x0
  41156c:	mov	x21, x1
  411570:	ldr	x1, [x0, #8]
  411574:	cbnz	x1, 4115a0 <_obstack_free@@Base+0x48>
  411578:	cbz	x21, 4115c8 <_obstack_free@@Base+0x70>
  41157c:	bl	402a80 <abort@plt>
  411580:	ldr	x20, [x1, #8]
  411584:	mov	x0, x19
  411588:	bl	411290 <ferror@plt+0xe450>
  41158c:	ldrb	w2, [x19, #80]
  411590:	orr	w2, w2, #0x2
  411594:	strb	w2, [x19, #80]
  411598:	cbz	x20, 411578 <_obstack_free@@Base+0x20>
  41159c:	mov	x1, x20
  4115a0:	cmp	x21, x1
  4115a4:	b.ls	411580 <_obstack_free@@Base+0x28>  // b.plast
  4115a8:	ldr	x0, [x1]
  4115ac:	cmp	x0, x21
  4115b0:	b.cc	411580 <_obstack_free@@Base+0x28>  // b.lo, b.ul, b.last
  4115b4:	str	x21, [x19, #24]
  4115b8:	str	x21, [x19, #16]
  4115bc:	ldr	x0, [x1]
  4115c0:	str	x0, [x19, #32]
  4115c4:	str	x1, [x19, #8]
  4115c8:	ldp	x19, x20, [sp, #16]
  4115cc:	ldr	x21, [sp, #32]
  4115d0:	ldp	x29, x30, [sp], #48
  4115d4:	ret

00000000004115d8 <_obstack_memory_used@@Base>:
  4115d8:	ldr	x1, [x0, #8]
  4115dc:	cbz	x1, 4115fc <_obstack_memory_used@@Base+0x24>
  4115e0:	mov	x0, #0x0                   	// #0
  4115e4:	ldr	x2, [x1]
  4115e8:	sub	x2, x2, x1
  4115ec:	add	x0, x0, x2
  4115f0:	ldr	x1, [x1, #8]
  4115f4:	cbnz	x1, 4115e4 <_obstack_memory_used@@Base+0xc>
  4115f8:	ret
  4115fc:	mov	x0, #0x0                   	// #0
  411600:	b	4115f8 <_obstack_memory_used@@Base+0x20>
  411604:	stp	x29, x30, [sp, #-48]!
  411608:	mov	x29, sp
  41160c:	stp	x19, x20, [sp, #16]
  411610:	str	x21, [sp, #32]
  411614:	mov	x19, x0
  411618:	bl	402860 <__fpending@plt>
  41161c:	mov	x21, x0
  411620:	ldr	w20, [x19]
  411624:	and	w20, w20, #0x20
  411628:	mov	x0, x19
  41162c:	bl	410c74 <ferror@plt+0xde34>
  411630:	cbnz	w20, 41165c <_obstack_memory_used@@Base+0x84>
  411634:	cbz	w0, 41164c <_obstack_memory_used@@Base+0x74>
  411638:	cbnz	x21, 411670 <_obstack_memory_used@@Base+0x98>
  41163c:	bl	402db0 <__errno_location@plt>
  411640:	ldr	w0, [x0]
  411644:	cmp	w0, #0x9
  411648:	csetm	w0, ne  // ne = any
  41164c:	ldp	x19, x20, [sp, #16]
  411650:	ldr	x21, [sp, #32]
  411654:	ldp	x29, x30, [sp], #48
  411658:	ret
  41165c:	cbnz	w0, 411678 <_obstack_memory_used@@Base+0xa0>
  411660:	bl	402db0 <__errno_location@plt>
  411664:	str	wzr, [x0]
  411668:	mov	w0, #0xffffffff            	// #-1
  41166c:	b	41164c <_obstack_memory_used@@Base+0x74>
  411670:	mov	w0, #0xffffffff            	// #-1
  411674:	b	41164c <_obstack_memory_used@@Base+0x74>
  411678:	mov	w0, #0xffffffff            	// #-1
  41167c:	b	41164c <_obstack_memory_used@@Base+0x74>
  411680:	mov	x0, #0xc3e0000000000000    	// #-4332462841530417152
  411684:	fmov	d1, x0
  411688:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  41168c:	mov	x1, #0x0                   	// #0
  411690:	fcmpe	d0, d1
  411694:	b.le	4116b4 <_obstack_memory_used@@Base+0xdc>
  411698:	mov	x0, #0x43e0000000000000    	// #4890909195324358656
  41169c:	fmov	d1, x0
  4116a0:	fcmpe	d0, d1
  4116a4:	b.mi	4116b8 <_obstack_memory_used@@Base+0xe0>  // b.first
  4116a8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4116ac:	mov	x1, #0xc9ff                	// #51711
  4116b0:	movk	x1, #0x3b9a, lsl #16
  4116b4:	ret
  4116b8:	fcvtzs	d1, d0
  4116bc:	scvtf	d2, d1
  4116c0:	fsub	d0, d0, d2
  4116c4:	mov	x0, #0xcd6500000000        	// #225833675390976
  4116c8:	movk	x0, #0x41cd, lsl #48
  4116cc:	fmov	d2, x0
  4116d0:	fmul	d0, d0, d2
  4116d4:	fcvtzs	x1, d0
  4116d8:	scvtf	d2, x1
  4116dc:	fcmpe	d2, d0
  4116e0:	cinc	x2, x1, mi  // mi = first
  4116e4:	mov	x1, #0x94b3                	// #38067
  4116e8:	movk	x1, #0x26d6, lsl #16
  4116ec:	movk	x1, #0xbe8, lsl #32
  4116f0:	movk	x1, #0x112e, lsl #48
  4116f4:	smulh	x1, x2, x1
  4116f8:	asr	x1, x1, #26
  4116fc:	sub	x1, x1, x2, asr #63
  411700:	fmov	x0, d1
  411704:	add	x0, x1, x0
  411708:	mov	x3, #0xca00                	// #51712
  41170c:	movk	x3, #0x3b9a, lsl #16
  411710:	msub	x1, x1, x3, x2
  411714:	tbz	x1, #63, 4116b4 <_obstack_memory_used@@Base+0xdc>
  411718:	sub	x0, x0, #0x1
  41171c:	add	x1, x1, x3
  411720:	b	4116b4 <_obstack_memory_used@@Base+0xdc>
  411724:	stp	x29, x30, [sp, #-48]!
  411728:	mov	x29, sp
  41172c:	stp	x19, x20, [sp, #16]
  411730:	mov	w19, w0
  411734:	cmp	w0, #0x2
  411738:	b.ls	41174c <_obstack_memory_used@@Base+0x174>  // b.plast
  41173c:	mov	w0, w19
  411740:	ldp	x19, x20, [sp, #16]
  411744:	ldp	x29, x30, [sp], #48
  411748:	ret
  41174c:	stp	x21, x22, [sp, #32]
  411750:	bl	41177c <_obstack_memory_used@@Base+0x1a4>
  411754:	mov	w21, w0
  411758:	bl	402db0 <__errno_location@plt>
  41175c:	mov	x20, x0
  411760:	ldr	w22, [x0]
  411764:	mov	w0, w19
  411768:	bl	402a10 <close@plt>
  41176c:	str	w22, [x20]
  411770:	mov	w19, w21
  411774:	ldp	x21, x22, [sp, #32]
  411778:	b	41173c <_obstack_memory_used@@Base+0x164>
  41177c:	stp	x29, x30, [sp, #-16]!
  411780:	mov	x29, sp
  411784:	ands	w1, w1, #0x80000
  411788:	mov	w2, #0x3                   	// #3
  41178c:	mov	w3, #0x406                 	// #1030
  411790:	csel	w1, w1, w3, eq  // eq = none
  411794:	bl	410d14 <ferror@plt+0xded4>
  411798:	ldp	x29, x30, [sp], #16
  41179c:	ret
  4117a0:	stp	x29, x30, [sp, #-48]!
  4117a4:	mov	x29, sp
  4117a8:	stp	x19, x20, [sp, #16]
  4117ac:	mov	x20, x1
  4117b0:	bl	4028d0 <fopen@plt>
  4117b4:	mov	x19, x0
  4117b8:	cbz	x0, 4117c8 <_obstack_memory_used@@Base+0x1f0>
  4117bc:	bl	402880 <fileno@plt>
  4117c0:	cmp	w0, #0x2
  4117c4:	b.ls	4117d8 <_obstack_memory_used@@Base+0x200>  // b.plast
  4117c8:	mov	x0, x19
  4117cc:	ldp	x19, x20, [sp, #16]
  4117d0:	ldp	x29, x30, [sp], #48
  4117d4:	ret
  4117d8:	str	x21, [sp, #32]
  4117dc:	bl	411a40 <_obstack_memory_used@@Base+0x468>
  4117e0:	mov	w21, w0
  4117e4:	tbnz	w0, #31, 411810 <_obstack_memory_used@@Base+0x238>
  4117e8:	mov	x0, x19
  4117ec:	bl	410c74 <ferror@plt+0xde34>
  4117f0:	cbnz	w0, 411834 <_obstack_memory_used@@Base+0x25c>
  4117f4:	mov	x1, x20
  4117f8:	mov	w0, w21
  4117fc:	bl	4029a0 <fdopen@plt>
  411800:	mov	x19, x0
  411804:	cbz	x0, 411834 <_obstack_memory_used@@Base+0x25c>
  411808:	ldr	x21, [sp, #32]
  41180c:	b	4117c8 <_obstack_memory_used@@Base+0x1f0>
  411810:	bl	402db0 <__errno_location@plt>
  411814:	mov	x20, x0
  411818:	ldr	w21, [x0]
  41181c:	mov	x0, x19
  411820:	bl	410c74 <ferror@plt+0xde34>
  411824:	str	w21, [x20]
  411828:	mov	x19, #0x0                   	// #0
  41182c:	ldr	x21, [sp, #32]
  411830:	b	4117c8 <_obstack_memory_used@@Base+0x1f0>
  411834:	bl	402db0 <__errno_location@plt>
  411838:	mov	x19, x0
  41183c:	ldr	w20, [x0]
  411840:	mov	w0, w21
  411844:	bl	402a10 <close@plt>
  411848:	str	w20, [x19]
  41184c:	mov	x19, #0x0                   	// #0
  411850:	ldr	x21, [sp, #32]
  411854:	b	4117c8 <_obstack_memory_used@@Base+0x1f0>
  411858:	stp	x29, x30, [sp, #-16]!
  41185c:	mov	x29, sp
  411860:	mov	w0, #0xe                   	// #14
  411864:	bl	4028c0 <nl_langinfo@plt>
  411868:	cbz	x0, 411888 <_obstack_memory_used@@Base+0x2b0>
  41186c:	ldrb	w2, [x0]
  411870:	adrp	x1, 414000 <_obstack_memory_used@@Base+0x2a28>
  411874:	add	x1, x1, #0xef0
  411878:	cmp	w2, #0x0
  41187c:	csel	x0, x1, x0, eq  // eq = none
  411880:	ldp	x29, x30, [sp], #16
  411884:	ret
  411888:	adrp	x0, 414000 <_obstack_memory_used@@Base+0x2a28>
  41188c:	add	x0, x0, #0xef0
  411890:	b	411880 <_obstack_memory_used@@Base+0x2a8>
  411894:	stp	x29, x30, [sp, #-64]!
  411898:	mov	x29, sp
  41189c:	stp	x19, x20, [sp, #16]
  4118a0:	stp	x21, x22, [sp, #32]
  4118a4:	stp	x23, x24, [sp, #48]
  4118a8:	mov	x21, x0
  4118ac:	mov	x23, x1
  4118b0:	mov	x20, x2
  4118b4:	mov	x22, x3
  4118b8:	bl	402db0 <__errno_location@plt>
  4118bc:	mov	x24, x0
  4118c0:	str	wzr, [x24]
  4118c4:	mov	x1, x20
  4118c8:	mov	x0, x21
  4118cc:	bl	402d40 <strcoll@plt>
  4118d0:	cbnz	w0, 411914 <_obstack_memory_used@@Base+0x33c>
  4118d4:	mov	x0, x21
  4118d8:	bl	402780 <strlen@plt>
  4118dc:	add	x19, x0, #0x1
  4118e0:	mov	x0, x20
  4118e4:	bl	402780 <strlen@plt>
  4118e8:	add	x0, x0, #0x1
  4118ec:	add	x21, x21, x19
  4118f0:	add	x20, x20, x0
  4118f4:	sub	x22, x22, x0
  4118f8:	subs	x23, x23, x19
  4118fc:	b.eq	41190c <_obstack_memory_used@@Base+0x334>  // b.none
  411900:	cbnz	x22, 4118c0 <_obstack_memory_used@@Base+0x2e8>
  411904:	mov	w0, #0x1                   	// #1
  411908:	b	411914 <_obstack_memory_used@@Base+0x33c>
  41190c:	cmp	x22, #0x0
  411910:	csetm	w0, ne  // ne = any
  411914:	ldp	x19, x20, [sp, #16]
  411918:	ldp	x21, x22, [sp, #32]
  41191c:	ldp	x23, x24, [sp, #48]
  411920:	ldp	x29, x30, [sp], #64
  411924:	ret
  411928:	stp	x29, x30, [sp, #-80]!
  41192c:	mov	x29, sp
  411930:	stp	x19, x20, [sp, #16]
  411934:	stp	x21, x22, [sp, #32]
  411938:	stp	x23, x24, [sp, #48]
  41193c:	mov	x23, x0
  411940:	mov	x19, x1
  411944:	mov	x21, x2
  411948:	mov	x20, x3
  41194c:	cmp	x1, x3
  411950:	b.ne	411974 <_obstack_memory_used@@Base+0x39c>  // b.any
  411954:	mov	x2, x1
  411958:	mov	x1, x21
  41195c:	bl	402b00 <memcmp@plt>
  411960:	mov	w22, w0
  411964:	cbnz	w0, 411974 <_obstack_memory_used@@Base+0x39c>
  411968:	bl	402db0 <__errno_location@plt>
  41196c:	str	wzr, [x0]
  411970:	b	4119ac <_obstack_memory_used@@Base+0x3d4>
  411974:	str	x25, [sp, #64]
  411978:	ldrb	w25, [x23, x19]
  41197c:	ldrb	w24, [x21, x20]
  411980:	strb	wzr, [x23, x19]
  411984:	strb	wzr, [x21, x20]
  411988:	add	x3, x20, #0x1
  41198c:	mov	x2, x21
  411990:	add	x1, x19, #0x1
  411994:	mov	x0, x23
  411998:	bl	411894 <_obstack_memory_used@@Base+0x2bc>
  41199c:	mov	w22, w0
  4119a0:	strb	w25, [x23, x19]
  4119a4:	strb	w24, [x21, x20]
  4119a8:	ldr	x25, [sp, #64]
  4119ac:	mov	w0, w22
  4119b0:	ldp	x19, x20, [sp, #16]
  4119b4:	ldp	x21, x22, [sp, #32]
  4119b8:	ldp	x23, x24, [sp, #48]
  4119bc:	ldp	x29, x30, [sp], #80
  4119c0:	ret
  4119c4:	stp	x29, x30, [sp, #-64]!
  4119c8:	mov	x29, sp
  4119cc:	stp	x19, x20, [sp, #16]
  4119d0:	stp	x21, x22, [sp, #32]
  4119d4:	str	x23, [sp, #48]
  4119d8:	mov	x22, x0
  4119dc:	mov	x20, x1
  4119e0:	mov	x23, x2
  4119e4:	mov	x21, x3
  4119e8:	cmp	x1, x3
  4119ec:	b.ne	411a10 <_obstack_memory_used@@Base+0x438>  // b.any
  4119f0:	mov	x2, x1
  4119f4:	mov	x1, x23
  4119f8:	bl	402b00 <memcmp@plt>
  4119fc:	mov	w19, w0
  411a00:	cbnz	w0, 411a10 <_obstack_memory_used@@Base+0x438>
  411a04:	bl	402db0 <__errno_location@plt>
  411a08:	str	wzr, [x0]
  411a0c:	b	411a28 <_obstack_memory_used@@Base+0x450>
  411a10:	mov	x3, x21
  411a14:	mov	x2, x23
  411a18:	mov	x1, x20
  411a1c:	mov	x0, x22
  411a20:	bl	411894 <_obstack_memory_used@@Base+0x2bc>
  411a24:	mov	w19, w0
  411a28:	mov	w0, w19
  411a2c:	ldp	x19, x20, [sp, #16]
  411a30:	ldp	x21, x22, [sp, #32]
  411a34:	ldr	x23, [sp, #48]
  411a38:	ldp	x29, x30, [sp], #64
  411a3c:	ret
  411a40:	stp	x29, x30, [sp, #-16]!
  411a44:	mov	x29, sp
  411a48:	mov	w2, #0x3                   	// #3
  411a4c:	mov	w1, #0x0                   	// #0
  411a50:	bl	410d14 <ferror@plt+0xded4>
  411a54:	ldp	x29, x30, [sp], #16
  411a58:	ret
  411a5c:	stp	x29, x30, [sp, #-32]!
  411a60:	mov	x29, sp
  411a64:	str	q0, [sp, #16]
  411a68:	ldr	x5, [sp, #16]
  411a6c:	ldr	x0, [sp, #24]
  411a70:	str	q1, [sp, #16]
  411a74:	ldr	x6, [sp, #16]
  411a78:	ldr	x2, [sp, #24]
  411a7c:	mrs	x1, fpcr
  411a80:	mov	x10, x5
  411a84:	ubfx	x7, x0, #0, #48
  411a88:	ubfx	x3, x0, #48, #15
  411a8c:	lsr	x0, x0, #63
  411a90:	and	w1, w0, #0xff
  411a94:	mov	x9, x6
  411a98:	ubfx	x8, x2, #0, #48
  411a9c:	ubfx	x4, x2, #48, #15
  411aa0:	lsr	x0, x2, #63
  411aa4:	and	w2, w0, #0xff
  411aa8:	mov	x0, #0x7fff                	// #32767
  411aac:	cmp	x3, x0
  411ab0:	b.eq	411ad4 <_obstack_memory_used@@Base+0x4fc>  // b.none
  411ab4:	mov	x0, #0x7fff                	// #32767
  411ab8:	cmp	x4, x0
  411abc:	b.eq	411af0 <_obstack_memory_used@@Base+0x518>  // b.none
  411ac0:	mov	w0, #0x1                   	// #1
  411ac4:	cmp	x3, x4
  411ac8:	b.eq	411b20 <_obstack_memory_used@@Base+0x548>  // b.none
  411acc:	ldp	x29, x30, [sp], #32
  411ad0:	ret
  411ad4:	orr	x0, x7, x5
  411ad8:	cbnz	x0, 411b58 <_obstack_memory_used@@Base+0x580>
  411adc:	mov	x0, #0x7fff                	// #32767
  411ae0:	cmp	x4, x0
  411ae4:	b.eq	411af0 <_obstack_memory_used@@Base+0x518>  // b.none
  411ae8:	mov	w0, #0x1                   	// #1
  411aec:	b	411acc <_obstack_memory_used@@Base+0x4f4>
  411af0:	orr	x0, x8, x9
  411af4:	cbz	x0, 411ac0 <_obstack_memory_used@@Base+0x4e8>
  411af8:	mov	x0, #0x7fff                	// #32767
  411afc:	cmp	x3, x0
  411b00:	b.eq	411b50 <_obstack_memory_used@@Base+0x578>  // b.none
  411b04:	mov	w0, #0x1                   	// #1
  411b08:	tst	x8, #0x800000000000
  411b0c:	b.ne	411acc <_obstack_memory_used@@Base+0x4f4>  // b.any
  411b10:	mov	w0, #0x1                   	// #1
  411b14:	bl	411e90 <_obstack_memory_used@@Base+0x8b8>
  411b18:	mov	w0, #0x1                   	// #1
  411b1c:	b	411acc <_obstack_memory_used@@Base+0x4f4>
  411b20:	cmp	x7, x8
  411b24:	ccmp	x5, x6, #0x0, eq  // eq = none
  411b28:	b.ne	411acc <_obstack_memory_used@@Base+0x4f4>  // b.any
  411b2c:	mov	w0, #0x0                   	// #0
  411b30:	cmp	w1, w2
  411b34:	b.eq	411acc <_obstack_memory_used@@Base+0x4f4>  // b.none
  411b38:	mov	w0, #0x1                   	// #1
  411b3c:	cbnz	x3, 411acc <_obstack_memory_used@@Base+0x4f4>
  411b40:	orr	x7, x7, x10
  411b44:	cmp	x7, #0x0
  411b48:	cset	w0, ne  // ne = any
  411b4c:	b	411acc <_obstack_memory_used@@Base+0x4f4>
  411b50:	orr	x10, x7, x10
  411b54:	cbz	x10, 411b70 <_obstack_memory_used@@Base+0x598>
  411b58:	tst	x7, #0x800000000000
  411b5c:	b.eq	411b10 <_obstack_memory_used@@Base+0x538>  // b.none
  411b60:	mov	w0, #0x1                   	// #1
  411b64:	mov	x1, #0x7fff                	// #32767
  411b68:	cmp	x4, x1
  411b6c:	b.ne	411acc <_obstack_memory_used@@Base+0x4f4>  // b.any
  411b70:	orr	x9, x8, x9
  411b74:	mov	w0, #0x1                   	// #1
  411b78:	cbz	x9, 411acc <_obstack_memory_used@@Base+0x4f4>
  411b7c:	b	411b04 <_obstack_memory_used@@Base+0x52c>
  411b80:	stp	x29, x30, [sp, #-32]!
  411b84:	mov	x29, sp
  411b88:	str	q0, [sp, #16]
  411b8c:	ldr	x7, [sp, #16]
  411b90:	ldr	x1, [sp, #24]
  411b94:	str	q1, [sp, #16]
  411b98:	ldr	x8, [sp, #16]
  411b9c:	ldr	x0, [sp, #24]
  411ba0:	mrs	x2, fpcr
  411ba4:	mov	x5, x7
  411ba8:	ubfx	x9, x1, #0, #48
  411bac:	ubfx	x4, x1, #48, #15
  411bb0:	lsr	x1, x1, #63
  411bb4:	and	w2, w1, #0xff
  411bb8:	mov	x6, x8
  411bbc:	ubfx	x10, x0, #0, #48
  411bc0:	ubfx	x3, x0, #48, #15
  411bc4:	lsr	x0, x0, #63
  411bc8:	and	w1, w0, #0xff
  411bcc:	mov	x0, #0x7fff                	// #32767
  411bd0:	cmp	x4, x0
  411bd4:	b.eq	411c14 <_obstack_memory_used@@Base+0x63c>  // b.none
  411bd8:	mov	x0, #0x7fff                	// #32767
  411bdc:	cmp	x3, x0
  411be0:	b.eq	411c30 <_obstack_memory_used@@Base+0x658>  // b.none
  411be4:	mov	w0, #0x0                   	// #0
  411be8:	cbnz	x4, 411bf8 <_obstack_memory_used@@Base+0x620>
  411bec:	orr	x5, x5, x9
  411bf0:	cmp	x5, #0x0
  411bf4:	cset	w0, eq  // eq = none
  411bf8:	cbnz	x3, 411c40 <_obstack_memory_used@@Base+0x668>
  411bfc:	orr	x6, x10, x6
  411c00:	cbnz	x6, 411c40 <_obstack_memory_used@@Base+0x668>
  411c04:	cbz	w0, 411c54 <_obstack_memory_used@@Base+0x67c>
  411c08:	mov	w0, #0x0                   	// #0
  411c0c:	ldp	x29, x30, [sp], #32
  411c10:	ret
  411c14:	orr	x0, x7, x9
  411c18:	cbnz	x0, 411cdc <_obstack_memory_used@@Base+0x704>
  411c1c:	mov	x0, #0x7fff                	// #32767
  411c20:	cmp	x3, x0
  411c24:	b.eq	411c30 <_obstack_memory_used@@Base+0x658>  // b.none
  411c28:	mov	w0, #0x0                   	// #0
  411c2c:	b	411bf8 <_obstack_memory_used@@Base+0x620>
  411c30:	orr	x0, x10, x6
  411c34:	cbnz	x0, 411cdc <_obstack_memory_used@@Base+0x704>
  411c38:	mov	w0, #0x0                   	// #0
  411c3c:	cbz	x4, 411bec <_obstack_memory_used@@Base+0x614>
  411c40:	and	x1, x1, #0xff
  411c44:	cbz	w0, 411cec <_obstack_memory_used@@Base+0x714>
  411c48:	cmp	x1, #0x0
  411c4c:	csinv	w0, w0, wzr, ne  // ne = any
  411c50:	b	411c0c <_obstack_memory_used@@Base+0x634>
  411c54:	mov	w0, #0x1                   	// #1
  411c58:	cmp	w2, #0x0
  411c5c:	cneg	w0, w0, ne  // ne = any
  411c60:	b	411c0c <_obstack_memory_used@@Base+0x634>
  411c64:	cmp	x4, x3
  411c68:	b.le	411c7c <_obstack_memory_used@@Base+0x6a4>
  411c6c:	mov	w0, #0x1                   	// #1
  411c70:	cmp	x5, #0x0
  411c74:	cneg	w0, w0, ne  // ne = any
  411c78:	b	411c0c <_obstack_memory_used@@Base+0x634>
  411c7c:	b.ge	411c90 <_obstack_memory_used@@Base+0x6b8>  // b.tcont
  411c80:	mov	w0, #0xffffffff            	// #-1
  411c84:	cmp	x5, #0x0
  411c88:	cneg	w0, w0, ne  // ne = any
  411c8c:	b	411c0c <_obstack_memory_used@@Base+0x634>
  411c90:	cmp	x9, x10
  411c94:	b.hi	411ca8 <_obstack_memory_used@@Base+0x6d0>  // b.pmore
  411c98:	cset	w1, eq  // eq = none
  411c9c:	cmp	w1, #0x0
  411ca0:	ccmp	x7, x8, #0x0, ne  // ne = any
  411ca4:	b.ls	411cb8 <_obstack_memory_used@@Base+0x6e0>  // b.plast
  411ca8:	mov	w0, #0x1                   	// #1
  411cac:	cmp	x5, #0x0
  411cb0:	cneg	w0, w0, ne  // ne = any
  411cb4:	b	411c0c <_obstack_memory_used@@Base+0x634>
  411cb8:	cmp	x9, x10
  411cbc:	b.cc	411ccc <_obstack_memory_used@@Base+0x6f4>  // b.lo, b.ul, b.last
  411cc0:	cmp	w1, #0x0
  411cc4:	ccmp	x7, x8, #0x2, ne  // ne = any
  411cc8:	b.cs	411c0c <_obstack_memory_used@@Base+0x634>  // b.hs, b.nlast
  411ccc:	mov	w0, #0xffffffff            	// #-1
  411cd0:	cmp	x5, #0x0
  411cd4:	cneg	w0, w0, ne  // ne = any
  411cd8:	b	411c0c <_obstack_memory_used@@Base+0x634>
  411cdc:	mov	w0, #0x1                   	// #1
  411ce0:	bl	411e90 <_obstack_memory_used@@Base+0x8b8>
  411ce4:	mov	w0, #0xfffffffe            	// #-2
  411ce8:	b	411c0c <_obstack_memory_used@@Base+0x634>
  411cec:	and	x5, x2, #0xff
  411cf0:	cmp	x1, w2, uxtb
  411cf4:	b.eq	411c64 <_obstack_memory_used@@Base+0x68c>  // b.none
  411cf8:	mov	w0, #0x1                   	// #1
  411cfc:	cmp	x5, #0x0
  411d00:	cneg	w0, w0, ne  // ne = any
  411d04:	b	411c0c <_obstack_memory_used@@Base+0x634>
  411d08:	stp	x29, x30, [sp, #-32]!
  411d0c:	mov	x29, sp
  411d10:	str	q0, [sp, #16]
  411d14:	ldr	x7, [sp, #16]
  411d18:	ldr	x1, [sp, #24]
  411d1c:	str	q1, [sp, #16]
  411d20:	ldr	x8, [sp, #16]
  411d24:	ldr	x0, [sp, #24]
  411d28:	mrs	x2, fpcr
  411d2c:	mov	x5, x7
  411d30:	ubfx	x9, x1, #0, #48
  411d34:	ubfx	x3, x1, #48, #15
  411d38:	lsr	x1, x1, #63
  411d3c:	and	w2, w1, #0xff
  411d40:	mov	x6, x8
  411d44:	ubfx	x10, x0, #0, #48
  411d48:	ubfx	x4, x0, #48, #15
  411d4c:	lsr	x0, x0, #63
  411d50:	and	w1, w0, #0xff
  411d54:	mov	x0, #0x7fff                	// #32767
  411d58:	cmp	x3, x0
  411d5c:	b.eq	411d9c <_obstack_memory_used@@Base+0x7c4>  // b.none
  411d60:	mov	x0, #0x7fff                	// #32767
  411d64:	cmp	x4, x0
  411d68:	b.eq	411db8 <_obstack_memory_used@@Base+0x7e0>  // b.none
  411d6c:	mov	w0, #0x0                   	// #0
  411d70:	cbnz	x3, 411d80 <_obstack_memory_used@@Base+0x7a8>
  411d74:	orr	x5, x5, x9
  411d78:	cmp	x5, #0x0
  411d7c:	cset	w0, eq  // eq = none
  411d80:	cbnz	x4, 411dc8 <_obstack_memory_used@@Base+0x7f0>
  411d84:	orr	x6, x10, x6
  411d88:	cbnz	x6, 411dc8 <_obstack_memory_used@@Base+0x7f0>
  411d8c:	cbz	w0, 411ddc <_obstack_memory_used@@Base+0x804>
  411d90:	mov	w0, #0x0                   	// #0
  411d94:	ldp	x29, x30, [sp], #32
  411d98:	ret
  411d9c:	orr	x0, x7, x9
  411da0:	cbnz	x0, 411e64 <_obstack_memory_used@@Base+0x88c>
  411da4:	mov	x0, #0x7fff                	// #32767
  411da8:	cmp	x4, x0
  411dac:	b.eq	411db8 <_obstack_memory_used@@Base+0x7e0>  // b.none
  411db0:	mov	w0, #0x0                   	// #0
  411db4:	b	411d80 <_obstack_memory_used@@Base+0x7a8>
  411db8:	orr	x0, x10, x6
  411dbc:	cbnz	x0, 411e64 <_obstack_memory_used@@Base+0x88c>
  411dc0:	mov	w0, #0x0                   	// #0
  411dc4:	cbz	x3, 411d74 <_obstack_memory_used@@Base+0x79c>
  411dc8:	and	x1, x1, #0xff
  411dcc:	cbz	w0, 411e74 <_obstack_memory_used@@Base+0x89c>
  411dd0:	cmp	x1, #0x0
  411dd4:	csinv	w0, w0, wzr, ne  // ne = any
  411dd8:	b	411d94 <_obstack_memory_used@@Base+0x7bc>
  411ddc:	mov	w0, #0x1                   	// #1
  411de0:	cmp	w2, #0x0
  411de4:	cneg	w0, w0, ne  // ne = any
  411de8:	b	411d94 <_obstack_memory_used@@Base+0x7bc>
  411dec:	cmp	x3, x4
  411df0:	b.le	411e04 <_obstack_memory_used@@Base+0x82c>
  411df4:	mov	w0, #0x1                   	// #1
  411df8:	cmp	x5, #0x0
  411dfc:	cneg	w0, w0, ne  // ne = any
  411e00:	b	411d94 <_obstack_memory_used@@Base+0x7bc>
  411e04:	b.ge	411e18 <_obstack_memory_used@@Base+0x840>  // b.tcont
  411e08:	mov	w0, #0xffffffff            	// #-1
  411e0c:	cmp	x5, #0x0
  411e10:	cneg	w0, w0, ne  // ne = any
  411e14:	b	411d94 <_obstack_memory_used@@Base+0x7bc>
  411e18:	cmp	x9, x10
  411e1c:	b.hi	411e30 <_obstack_memory_used@@Base+0x858>  // b.pmore
  411e20:	cset	w1, eq  // eq = none
  411e24:	cmp	w1, #0x0
  411e28:	ccmp	x7, x8, #0x0, ne  // ne = any
  411e2c:	b.ls	411e40 <_obstack_memory_used@@Base+0x868>  // b.plast
  411e30:	mov	w0, #0x1                   	// #1
  411e34:	cmp	x5, #0x0
  411e38:	cneg	w0, w0, ne  // ne = any
  411e3c:	b	411d94 <_obstack_memory_used@@Base+0x7bc>
  411e40:	cmp	x9, x10
  411e44:	b.cc	411e54 <_obstack_memory_used@@Base+0x87c>  // b.lo, b.ul, b.last
  411e48:	cmp	w1, #0x0
  411e4c:	ccmp	x7, x8, #0x2, ne  // ne = any
  411e50:	b.cs	411d94 <_obstack_memory_used@@Base+0x7bc>  // b.hs, b.nlast
  411e54:	mov	w0, #0xffffffff            	// #-1
  411e58:	cmp	x5, #0x0
  411e5c:	cneg	w0, w0, ne  // ne = any
  411e60:	b	411d94 <_obstack_memory_used@@Base+0x7bc>
  411e64:	mov	w0, #0x1                   	// #1
  411e68:	bl	411e90 <_obstack_memory_used@@Base+0x8b8>
  411e6c:	mov	w0, #0x2                   	// #2
  411e70:	b	411d94 <_obstack_memory_used@@Base+0x7bc>
  411e74:	and	x5, x2, #0xff
  411e78:	cmp	x1, w2, uxtb
  411e7c:	b.eq	411dec <_obstack_memory_used@@Base+0x814>  // b.none
  411e80:	mov	w0, #0x1                   	// #1
  411e84:	cmp	x5, #0x0
  411e88:	cneg	w0, w0, ne  // ne = any
  411e8c:	b	411d94 <_obstack_memory_used@@Base+0x7bc>
  411e90:	tbz	w0, #0, 411ea0 <_obstack_memory_used@@Base+0x8c8>
  411e94:	movi	v1.2s, #0x0
  411e98:	fdiv	s0, s1, s1
  411e9c:	mrs	x1, fpsr
  411ea0:	tbz	w0, #1, 411eb4 <_obstack_memory_used@@Base+0x8dc>
  411ea4:	fmov	s1, #1.000000000000000000e+00
  411ea8:	movi	v2.2s, #0x0
  411eac:	fdiv	s0, s1, s2
  411eb0:	mrs	x1, fpsr
  411eb4:	tbz	w0, #2, 411ed4 <_obstack_memory_used@@Base+0x8fc>
  411eb8:	mov	w1, #0x7f7fffff            	// #2139095039
  411ebc:	fmov	s1, w1
  411ec0:	mov	w1, #0xc5ae                	// #50606
  411ec4:	movk	w1, #0x749d, lsl #16
  411ec8:	fmov	s2, w1
  411ecc:	fadd	s0, s1, s2
  411ed0:	mrs	x1, fpsr
  411ed4:	tbz	w0, #3, 411ee4 <_obstack_memory_used@@Base+0x90c>
  411ed8:	movi	v1.2s, #0x80, lsl #16
  411edc:	fmul	s0, s1, s1
  411ee0:	mrs	x1, fpsr
  411ee4:	tbz	w0, #4, 411efc <_obstack_memory_used@@Base+0x924>
  411ee8:	mov	w0, #0x7f7fffff            	// #2139095039
  411eec:	fmov	s1, w0
  411ef0:	fmov	s2, #1.000000000000000000e+00
  411ef4:	fsub	s0, s1, s2
  411ef8:	mrs	x0, fpsr
  411efc:	ret
  411f00:	stp	x29, x30, [sp, #-64]!
  411f04:	mov	x29, sp
  411f08:	stp	x19, x20, [sp, #16]
  411f0c:	adrp	x20, 427000 <_obstack_memory_used@@Base+0x15a28>
  411f10:	add	x20, x20, #0xde0
  411f14:	stp	x21, x22, [sp, #32]
  411f18:	adrp	x21, 427000 <_obstack_memory_used@@Base+0x15a28>
  411f1c:	add	x21, x21, #0xdd8
  411f20:	sub	x20, x20, x21
  411f24:	mov	w22, w0
  411f28:	stp	x23, x24, [sp, #48]
  411f2c:	mov	x23, x1
  411f30:	mov	x24, x2
  411f34:	bl	4026d8 <mbrtowc@plt-0x38>
  411f38:	cmp	xzr, x20, asr #3
  411f3c:	b.eq	411f68 <_obstack_memory_used@@Base+0x990>  // b.none
  411f40:	asr	x20, x20, #3
  411f44:	mov	x19, #0x0                   	// #0
  411f48:	ldr	x3, [x21, x19, lsl #3]
  411f4c:	mov	x2, x24
  411f50:	add	x19, x19, #0x1
  411f54:	mov	x1, x23
  411f58:	mov	w0, w22
  411f5c:	blr	x3
  411f60:	cmp	x20, x19
  411f64:	b.ne	411f48 <_obstack_memory_used@@Base+0x970>  // b.any
  411f68:	ldp	x19, x20, [sp, #16]
  411f6c:	ldp	x21, x22, [sp, #32]
  411f70:	ldp	x23, x24, [sp, #48]
  411f74:	ldp	x29, x30, [sp], #64
  411f78:	ret
  411f7c:	nop
  411f80:	ret
  411f84:	nop
  411f88:	adrp	x2, 428000 <_obstack_memory_used@@Base+0x16a28>
  411f8c:	mov	x1, #0x0                   	// #0
  411f90:	ldr	x2, [x2, #936]
  411f94:	b	4027f0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000411f98 <.fini>:
  411f98:	stp	x29, x30, [sp, #-16]!
  411f9c:	mov	x29, sp
  411fa0:	ldp	x29, x30, [sp], #16
  411fa4:	ret
