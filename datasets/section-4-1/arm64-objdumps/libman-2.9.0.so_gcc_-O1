
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libman-2.9.0.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000a268 <.init>:
    a268:	stp	x29, x30, [sp, #-16]!
    a26c:	mov	x29, sp
    a270:	bl	b010 <xgetcwd@plt+0x10>
    a274:	ldp	x29, x30, [sp], #16
    a278:	ret

Disassembly of section .plt:

000000000000a280 <base_len@plt-0x20>:
    a280:	stp	x16, x30, [sp, #-16]!
    a284:	adrp	x16, 46000 <vasnprintf@@Base+0x1b378>
    a288:	ldr	x17, [x16, #4088]
    a28c:	add	x16, x16, #0xff8
    a290:	br	x17
    a294:	nop
    a298:	nop
    a29c:	nop

000000000000a2a0 <base_len@plt>:
    a2a0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a2a4:	ldr	x17, [x16]
    a2a8:	add	x16, x16, #0x0
    a2ac:	br	x17

000000000000a2b0 <mbrtowc@plt>:
    a2b0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a2b4:	ldr	x17, [x16, #8]
    a2b8:	add	x16, x16, #0x8
    a2bc:	br	x17

000000000000a2c0 <memcpy@plt>:
    a2c0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a2c4:	ldr	x17, [x16, #16]
    a2c8:	add	x16, x16, #0x10
    a2cc:	br	x17

000000000000a2d0 <memmove@plt>:
    a2d0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a2d4:	ldr	x17, [x16, #24]
    a2d8:	add	x16, x16, #0x18
    a2dc:	br	x17

000000000000a2e0 <pthread_rwlockattr_init@plt>:
    a2e0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a2e4:	ldr	x17, [x16, #32]
    a2e8:	add	x16, x16, #0x20
    a2ec:	br	x17

000000000000a2f0 <_exit@plt>:
    a2f0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a2f4:	ldr	x17, [x16, #40]
    a2f8:	add	x16, x16, #0x28
    a2fc:	br	x17

000000000000a300 <getcwd@plt>:
    a300:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a304:	ldr	x17, [x16, #48]
    a308:	add	x16, x16, #0x30
    a30c:	br	x17

000000000000a310 <same_nameat@plt>:
    a310:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a314:	ldr	x17, [x16, #56]
    a318:	add	x16, x16, #0x38
    a31c:	br	x17

000000000000a320 <fwrite_unlocked@plt>:
    a320:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a324:	ldr	x17, [x16, #64]
    a328:	add	x16, x16, #0x40
    a32c:	br	x17

000000000000a330 <get_canonical_charset_name@plt>:
    a330:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a334:	ldr	x17, [x16, #72]
    a338:	add	x16, x16, #0x48
    a33c:	br	x17

000000000000a340 <strlen@plt>:
    a340:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a344:	ldr	x17, [x16, #80]
    a348:	add	x16, x16, #0x50
    a34c:	br	x17

000000000000a350 <exit@plt>:
    a350:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a354:	ldr	x17, [x16, #88]
    a358:	add	x16, x16, #0x58
    a35c:	br	x17

000000000000a360 <error@plt>:
    a360:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a364:	ldr	x17, [x16, #96]
    a368:	add	x16, x16, #0x60
    a36c:	br	x17

000000000000a370 <pthread_mutexattr_settype@plt>:
    a370:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a374:	ldr	x17, [x16, #104]
    a378:	add	x16, x16, #0x68
    a37c:	br	x17

000000000000a380 <fchdir@plt>:
    a380:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a384:	ldr	x17, [x16, #112]
    a388:	add	x16, x16, #0x70
    a38c:	br	x17

000000000000a390 <perror@plt>:
    a390:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a394:	ldr	x17, [x16, #120]
    a398:	add	x16, x16, #0x78
    a39c:	br	x17

000000000000a3a0 <flockfile@plt>:
    a3a0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a3a4:	ldr	x17, [x16, #128]
    a3a8:	add	x16, x16, #0x80
    a3ac:	br	x17

000000000000a3b0 <getegid@plt>:
    a3b0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a3b4:	ldr	x17, [x16, #136]
    a3b8:	add	x16, x16, #0x88
    a3bc:	br	x17

000000000000a3c0 <wctype@plt>:
    a3c0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a3c4:	ldr	x17, [x16, #144]
    a3c8:	add	x16, x16, #0x90
    a3cc:	br	x17

000000000000a3d0 <sigprocmask@plt>:
    a3d0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a3d4:	ldr	x17, [x16, #152]
    a3d8:	add	x16, x16, #0x98
    a3dc:	br	x17

000000000000a3e0 <rpl_mbrtowc@plt>:
    a3e0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a3e4:	ldr	x17, [x16, #160]
    a3e8:	add	x16, x16, #0xa0
    a3ec:	br	x17

000000000000a3f0 <geteuid@plt>:
    a3f0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a3f4:	ldr	x17, [x16, #168]
    a3f8:	add	x16, x16, #0xa8
    a3fc:	br	x17

000000000000a400 <get_roff_encoding@plt>:
    a400:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a404:	ldr	x17, [x16, #176]
    a408:	add	x16, x16, #0xb0
    a40c:	br	x17

000000000000a410 <pthread_rwlock_init@plt>:
    a410:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a414:	ldr	x17, [x16, #184]
    a418:	add	x16, x16, #0xb8
    a41c:	br	x17

000000000000a420 <getresuid@plt>:
    a420:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a424:	ldr	x17, [x16, #192]
    a428:	add	x16, x16, #0xc0
    a42c:	br	x17

000000000000a430 <pthread_rwlockattr_setkind_np@plt>:
    a430:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a434:	ldr	x17, [x16, #200]
    a438:	add	x16, x16, #0xc8
    a43c:	br	x17

000000000000a440 <chdir_long@plt>:
    a440:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a444:	ldr	x17, [x16, #208]
    a448:	add	x16, x16, #0xd0
    a44c:	br	x17

000000000000a450 <hash_insert@plt>:
    a450:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a454:	ldr	x17, [x16, #216]
    a458:	add	x16, x16, #0xd8
    a45c:	br	x17

000000000000a460 <setenv@plt>:
    a460:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a464:	ldr	x17, [x16, #224]
    a468:	add	x16, x16, #0xe0
    a46c:	br	x17

000000000000a470 <readlink@plt>:
    a470:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a474:	ldr	x17, [x16, #232]
    a478:	add	x16, x16, #0xe8
    a47c:	br	x17

000000000000a480 <__cxa_finalize@plt>:
    a480:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a484:	ldr	x17, [x16, #240]
    a488:	add	x16, x16, #0xf0
    a48c:	br	x17

000000000000a490 <sprintf@plt>:
    a490:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a494:	ldr	x17, [x16, #248]
    a498:	add	x16, x16, #0xf8
    a49c:	br	x17

000000000000a4a0 <getuid@plt>:
    a4a0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a4a4:	ldr	x17, [x16, #256]
    a4a8:	add	x16, x16, #0x100
    a4ac:	br	x17

000000000000a4b0 <pipe@plt>:
    a4b0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a4b4:	ldr	x17, [x16, #264]
    a4b8:	add	x16, x16, #0x108
    a4bc:	br	x17

000000000000a4c0 <opendir@plt>:
    a4c0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a4c4:	ldr	x17, [x16, #272]
    a4c8:	add	x16, x16, #0x110
    a4cc:	br	x17

000000000000a4d0 <__cxa_atexit@plt>:
    a4d0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a4d4:	ldr	x17, [x16, #280]
    a4d8:	add	x16, x16, #0x118
    a4dc:	br	x17

000000000000a4e0 <fputc@plt>:
    a4e0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a4e4:	ldr	x17, [x16, #288]
    a4e8:	add	x16, x16, #0x120
    a4ec:	br	x17

000000000000a4f0 <clock_gettime@plt>:
    a4f0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a4f4:	ldr	x17, [x16, #296]
    a4f8:	add	x16, x16, #0x128
    a4fc:	br	x17

000000000000a500 <qsort@plt>:
    a500:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a504:	ldr	x17, [x16, #304]
    a508:	add	x16, x16, #0x130
    a50c:	br	x17

000000000000a510 <kill@plt>:
    a510:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a514:	ldr	x17, [x16, #312]
    a518:	add	x16, x16, #0x138
    a51c:	br	x17

000000000000a520 <_argp_fmtstream_update@plt>:
    a520:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a524:	ldr	x17, [x16, #320]
    a528:	add	x16, x16, #0x140
    a52c:	br	x17

000000000000a530 <__ctype_tolower_loc@plt>:
    a530:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a534:	ldr	x17, [x16, #328]
    a538:	add	x16, x16, #0x148
    a53c:	br	x17

000000000000a540 <snprintf@plt>:
    a540:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a544:	ldr	x17, [x16, #336]
    a548:	add	x16, x16, #0x150
    a54c:	br	x17

000000000000a550 <mdir_name@plt>:
    a550:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a554:	ldr	x17, [x16, #344]
    a558:	add	x16, x16, #0x158
    a55c:	br	x17

000000000000a560 <triple_free@plt>:
    a560:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a564:	ldr	x17, [x16, #352]
    a568:	add	x16, x16, #0x160
    a56c:	br	x17

000000000000a570 <debug@plt>:
    a570:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a574:	ldr	x17, [x16, #360]
    a578:	add	x16, x16, #0x168
    a57c:	br	x17

000000000000a580 <hash_free@plt>:
    a580:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a584:	ldr	x17, [x16, #368]
    a588:	add	x16, x16, #0x170
    a58c:	br	x17

000000000000a590 <fclose@plt>:
    a590:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a594:	ldr	x17, [x16, #376]
    a598:	add	x16, x16, #0x178
    a59c:	br	x17

000000000000a5a0 <rpl_regcomp@plt>:
    a5a0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a5a4:	ldr	x17, [x16, #384]
    a5a8:	add	x16, x16, #0x180
    a5ac:	br	x17

000000000000a5b0 <getpid@plt>:
    a5b0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a5b4:	ldr	x17, [x16, #392]
    a5b8:	add	x16, x16, #0x188
    a5bc:	br	x17

000000000000a5c0 <nl_langinfo@plt>:
    a5c0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a5c4:	ldr	x17, [x16, #400]
    a5c8:	add	x16, x16, #0x190
    a5cc:	br	x17

000000000000a5d0 <fopen@plt>:
    a5d0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a5d4:	ldr	x17, [x16, #408]
    a5d8:	add	x16, x16, #0x198
    a5dc:	br	x17

000000000000a5e0 <iswctype@plt>:
    a5e0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a5e4:	ldr	x17, [x16, #416]
    a5e8:	add	x16, x16, #0x1a0
    a5ec:	br	x17

000000000000a5f0 <malloc@plt>:
    a5f0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a5f4:	ldr	x17, [x16, #424]
    a5f8:	add	x16, x16, #0x1a8
    a5fc:	br	x17

000000000000a600 <record_file@plt>:
    a600:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a604:	ldr	x17, [x16, #432]
    a608:	add	x16, x16, #0x1b0
    a60c:	br	x17

000000000000a610 <futimesat@plt>:
    a610:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a614:	ldr	x17, [x16, #440]
    a618:	add	x16, x16, #0x1b8
    a61c:	br	x17

000000000000a620 <funlockfile@plt>:
    a620:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a624:	ldr	x17, [x16, #448]
    a628:	add	x16, x16, #0x1c0
    a62c:	br	x17

000000000000a630 <stdopen@plt>:
    a630:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a634:	ldr	x17, [x16, #456]
    a638:	add	x16, x16, #0x1c8
    a63c:	br	x17

000000000000a640 <open@plt>:
    a640:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a644:	ldr	x17, [x16, #464]
    a648:	add	x16, x16, #0x1d0
    a64c:	br	x17

000000000000a650 <argp_failure@plt>:
    a650:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a654:	ldr	x17, [x16, #472]
    a658:	add	x16, x16, #0x1d8
    a65c:	br	x17

000000000000a660 <xrealloc@plt>:
    a660:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a664:	ldr	x17, [x16, #480]
    a668:	add	x16, x16, #0x1e0
    a66c:	br	x17

000000000000a670 <dir_name@plt>:
    a670:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a674:	ldr	x17, [x16, #488]
    a678:	add	x16, x16, #0x1e8
    a67c:	br	x17

000000000000a680 <idpriv_temp_drop@plt>:
    a680:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a684:	ldr	x17, [x16, #496]
    a688:	add	x16, x16, #0x1f0
    a68c:	br	x17

000000000000a690 <sigemptyset@plt>:
    a690:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a694:	ldr	x17, [x16, #504]
    a698:	add	x16, x16, #0x1f8
    a69c:	br	x17

000000000000a6a0 <get_groff_preconv@plt>:
    a6a0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a6a4:	ldr	x17, [x16, #512]
    a6a8:	add	x16, x16, #0x200
    a6ac:	br	x17

000000000000a6b0 <futimens@plt>:
    a6b0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a6b4:	ldr	x17, [x16, #520]
    a6b8:	add	x16, x16, #0x208
    a6bc:	br	x17

000000000000a6c0 <strncmp@plt>:
    a6c0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a6c4:	ldr	x17, [x16, #528]
    a6c8:	add	x16, x16, #0x210
    a6cc:	br	x17

000000000000a6d0 <bindtextdomain@plt>:
    a6d0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a6d4:	ldr	x17, [x16, #536]
    a6d8:	add	x16, x16, #0x218
    a6dc:	br	x17

000000000000a6e0 <fstatfs@plt>:
    a6e0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a6e4:	ldr	x17, [x16, #544]
    a6e8:	add	x16, x16, #0x220
    a6ec:	br	x17

000000000000a6f0 <memset@plt>:
    a6f0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a6f4:	ldr	x17, [x16, #552]
    a6f8:	add	x16, x16, #0x228
    a6fc:	br	x17

000000000000a700 <gettimeofday@plt>:
    a700:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a704:	ldr	x17, [x16, #560]
    a708:	add	x16, x16, #0x230
    a70c:	br	x17

000000000000a710 <xmalloc@plt>:
    a710:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a714:	ldr	x17, [x16, #568]
    a718:	add	x16, x16, #0x238
    a71c:	br	x17

000000000000a720 <getpwnam@plt>:
    a720:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a724:	ldr	x17, [x16, #576]
    a728:	add	x16, x16, #0x240
    a72c:	br	x17

000000000000a730 <xstrdup@plt>:
    a730:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a734:	ldr	x17, [x16, #584]
    a738:	add	x16, x16, #0x248
    a73c:	br	x17

000000000000a740 <sleep@plt>:
    a740:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a744:	ldr	x17, [x16, #592]
    a748:	add	x16, x16, #0x250
    a74c:	br	x17

000000000000a750 <same_name@plt>:
    a750:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a754:	ldr	x17, [x16, #600]
    a758:	add	x16, x16, #0x258
    a75c:	br	x17

000000000000a760 <strerror_r@plt>:
    a760:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a764:	ldr	x17, [x16, #608]
    a768:	add	x16, x16, #0x260
    a76c:	br	x17

000000000000a770 <calloc@plt>:
    a770:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a774:	ldr	x17, [x16, #616]
    a778:	add	x16, x16, #0x268
    a77c:	br	x17

000000000000a780 <last_component@plt>:
    a780:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a784:	ldr	x17, [x16, #624]
    a788:	add	x16, x16, #0x270
    a78c:	br	x17

000000000000a790 <hard_locale@plt>:
    a790:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a794:	ldr	x17, [x16, #632]
    a798:	add	x16, x16, #0x278
    a79c:	br	x17

000000000000a7a0 <hash_insert_if_absent@plt>:
    a7a0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a7a4:	ldr	x17, [x16, #640]
    a7a8:	add	x16, x16, #0x280
    a7ac:	br	x17

000000000000a7b0 <hash_get_n_buckets_used@plt>:
    a7b0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a7b4:	ldr	x17, [x16, #648]
    a7b8:	add	x16, x16, #0x288
    a7bc:	br	x17

000000000000a7c0 <strcasecmp@plt>:
    a7c0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a7c4:	ldr	x17, [x16, #656]
    a7c8:	add	x16, x16, #0x290
    a7cc:	br	x17

000000000000a7d0 <readdir@plt>:
    a7d0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a7d4:	ldr	x17, [x16, #664]
    a7d8:	add	x16, x16, #0x298
    a7dc:	br	x17

000000000000a7e0 <realloc@plt>:
    a7e0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a7e4:	ldr	x17, [x16, #672]
    a7e8:	add	x16, x16, #0x2a0
    a7ec:	br	x17

000000000000a7f0 <__ctype_toupper_loc@plt>:
    a7f0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a7f4:	ldr	x17, [x16, #680]
    a7f8:	add	x16, x16, #0x2a8
    a7fc:	br	x17

000000000000a800 <hash_initialize@plt>:
    a800:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a804:	ldr	x17, [x16, #688]
    a808:	add	x16, x16, #0x2b0
    a80c:	br	x17

000000000000a810 <try_tempname@plt>:
    a810:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a814:	ldr	x17, [x16, #696]
    a818:	add	x16, x16, #0x2b8
    a81c:	br	x17

000000000000a820 <closedir@plt>:
    a820:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a824:	ldr	x17, [x16, #704]
    a828:	add	x16, x16, #0x2c0
    a82c:	br	x17

000000000000a830 <strerror@plt>:
    a830:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a834:	ldr	x17, [x16, #712]
    a838:	add	x16, x16, #0x2c8
    a83c:	br	x17

000000000000a840 <pthread_mutex_init@plt>:
    a840:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a844:	ldr	x17, [x16, #720]
    a848:	add	x16, x16, #0x2d0
    a84c:	br	x17

000000000000a850 <close@plt>:
    a850:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a854:	ldr	x17, [x16, #728]
    a858:	add	x16, x16, #0x2d8
    a85c:	br	x17

000000000000a860 <sigaction@plt>:
    a860:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a864:	ldr	x17, [x16, #736]
    a868:	add	x16, x16, #0x2e0
    a86c:	br	x17

000000000000a870 <hash_lookup@plt>:
    a870:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a874:	ldr	x17, [x16, #744]
    a878:	add	x16, x16, #0x2e8
    a87c:	br	x17

000000000000a880 <strrchr@plt>:
    a880:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a884:	ldr	x17, [x16, #752]
    a888:	add	x16, x16, #0x2f0
    a88c:	br	x17

000000000000a890 <xalloc_die@plt>:
    a890:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a894:	ldr	x17, [x16, #760]
    a898:	add	x16, x16, #0x2f8
    a89c:	br	x17

000000000000a8a0 <memmem@plt>:
    a8a0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a8a4:	ldr	x17, [x16, #768]
    a8a8:	add	x16, x16, #0x300
    a8ac:	br	x17

000000000000a8b0 <__gmon_start__@plt>:
    a8b0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a8b4:	ldr	x17, [x16, #776]
    a8b8:	add	x16, x16, #0x308
    a8bc:	br	x17

000000000000a8c0 <drop_effective_privs@plt>:
    a8c0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a8c4:	ldr	x17, [x16, #784]
    a8c8:	add	x16, x16, #0x310
    a8cc:	br	x17

000000000000a8d0 <btowc@plt>:
    a8d0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a8d4:	ldr	x17, [x16, #792]
    a8d8:	add	x16, x16, #0x318
    a8dc:	br	x17

000000000000a8e0 <mkdtemp@plt>:
    a8e0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a8e4:	ldr	x17, [x16, #800]
    a8e8:	add	x16, x16, #0x320
    a8ec:	br	x17

000000000000a8f0 <argp_fmtstream_printf@plt>:
    a8f0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a8f4:	ldr	x17, [x16, #808]
    a8f8:	add	x16, x16, #0x328
    a8fc:	br	x17

000000000000a900 <abort@plt>:
    a900:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a904:	ldr	x17, [x16, #816]
    a908:	add	x16, x16, #0x330
    a90c:	br	x17

000000000000a910 <_getopt_long_only_r@plt>:
    a910:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a914:	ldr	x17, [x16, #824]
    a918:	add	x16, x16, #0x338
    a91c:	br	x17

000000000000a920 <hash_rehash@plt>:
    a920:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a924:	ldr	x17, [x16, #832]
    a928:	add	x16, x16, #0x340
    a92c:	br	x17

000000000000a930 <mbsinit@plt>:
    a930:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a934:	ldr	x17, [x16, #840]
    a938:	add	x16, x16, #0x348
    a93c:	br	x17

000000000000a940 <__overflow@plt>:
    a940:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a944:	ldr	x17, [x16, #848]
    a948:	add	x16, x16, #0x350
    a94c:	br	x17

000000000000a950 <access@plt>:
    a950:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a954:	ldr	x17, [x16, #856]
    a958:	add	x16, x16, #0x358
    a95c:	br	x17

000000000000a960 <fdutimens@plt>:
    a960:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a964:	ldr	x17, [x16, #864]
    a968:	add	x16, x16, #0x360
    a96c:	br	x17

000000000000a970 <memcmp@plt>:
    a970:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a974:	ldr	x17, [x16, #872]
    a978:	add	x16, x16, #0x368
    a97c:	br	x17

000000000000a980 <hash_pjw_bare@plt>:
    a980:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a984:	ldr	x17, [x16, #880]
    a988:	add	x16, x16, #0x370
    a98c:	br	x17

000000000000a990 <textdomain@plt>:
    a990:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a994:	ldr	x17, [x16, #888]
    a998:	add	x16, x16, #0x378
    a99c:	br	x17

000000000000a9a0 <strsep@plt>:
    a9a0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a9a4:	ldr	x17, [x16, #896]
    a9a8:	add	x16, x16, #0x380
    a9ac:	br	x17

000000000000a9b0 <strcmp@plt>:
    a9b0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a9b4:	ldr	x17, [x16, #904]
    a9b8:	add	x16, x16, #0x388
    a9bc:	br	x17

000000000000a9c0 <_getopt_long_r@plt>:
    a9c0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a9c4:	ldr	x17, [x16, #912]
    a9c8:	add	x16, x16, #0x390
    a9cc:	br	x17

000000000000a9d0 <__ctype_b_loc@plt>:
    a9d0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a9d4:	ldr	x17, [x16, #920]
    a9d8:	add	x16, x16, #0x398
    a9dc:	br	x17

000000000000a9e0 <rmdir@plt>:
    a9e0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a9e4:	ldr	x17, [x16, #928]
    a9e8:	add	x16, x16, #0x3a0
    a9ec:	br	x17

000000000000a9f0 <seen_file@plt>:
    a9f0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    a9f4:	ldr	x17, [x16, #936]
    a9f8:	add	x16, x16, #0x3a8
    a9fc:	br	x17

000000000000aa00 <strtol@plt>:
    aa00:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aa04:	ldr	x17, [x16, #944]
    aa08:	add	x16, x16, #0x3b0
    aa0c:	br	x17

000000000000aa10 <hash_get_max_bucket_length@plt>:
    aa10:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aa14:	ldr	x17, [x16, #952]
    aa18:	add	x16, x16, #0x3b8
    aa1c:	br	x17

000000000000aa20 <dir_len@plt>:
    aa20:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aa24:	ldr	x17, [x16, #960]
    aa28:	add	x16, x16, #0x3c0
    aa2c:	br	x17

000000000000aa30 <chdir@plt>:
    aa30:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aa34:	ldr	x17, [x16, #968]
    aa38:	add	x16, x16, #0x3c8
    aa3c:	br	x17

000000000000aa40 <dup_safer@plt>:
    aa40:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aa44:	ldr	x17, [x16, #976]
    aa48:	add	x16, x16, #0x3d0
    aa4c:	br	x17

000000000000aa50 <free@plt>:
    aa50:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aa54:	ldr	x17, [x16, #984]
    aa58:	add	x16, x16, #0x3d8
    aa5c:	br	x17

000000000000aa60 <renameat2@plt>:
    aa60:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aa64:	ldr	x17, [x16, #992]
    aa68:	add	x16, x16, #0x3e0
    aa6c:	br	x17

000000000000aa70 <argp_make_fmtstream@plt>:
    aa70:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aa74:	ldr	x17, [x16, #1000]
    aa78:	add	x16, x16, #0x3e8
    aa7c:	br	x17

000000000000aa80 <__ctype_get_mb_cur_max@plt>:
    aa80:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aa84:	ldr	x17, [x16, #1008]
    aa88:	add	x16, x16, #0x3f0
    aa8c:	br	x17

000000000000aa90 <getgid@plt>:
    aa90:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aa94:	ldr	x17, [x16, #1016]
    aa98:	add	x16, x16, #0x3f8
    aa9c:	br	x17

000000000000aaa0 <renameat@plt>:
    aaa0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aaa4:	ldr	x17, [x16, #1024]
    aaa8:	add	x16, x16, #0x400
    aaac:	br	x17

000000000000aab0 <mempcpy@plt>:
    aab0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aab4:	ldr	x17, [x16, #1032]
    aab8:	add	x16, x16, #0x408
    aabc:	br	x17

000000000000aac0 <xasprintf@plt>:
    aac0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aac4:	ldr	x17, [x16, #1040]
    aac8:	add	x16, x16, #0x410
    aacc:	br	x17

000000000000aad0 <vasnprintf@plt>:
    aad0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aad4:	ldr	x17, [x16, #1048]
    aad8:	add	x16, x16, #0x418
    aadc:	br	x17

000000000000aae0 <printf_fetchargs@plt>:
    aae0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aae4:	ldr	x17, [x16, #1056]
    aae8:	add	x16, x16, #0x420
    aaec:	br	x17

000000000000aaf0 <hash_get_n_buckets@plt>:
    aaf0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aaf4:	ldr	x17, [x16, #1064]
    aaf8:	add	x16, x16, #0x428
    aafc:	br	x17

000000000000ab00 <nanosleep@plt>:
    ab00:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ab04:	ldr	x17, [x16, #1072]
    ab08:	add	x16, x16, #0x430
    ab0c:	br	x17

000000000000ab10 <vasprintf@plt>:
    ab10:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ab14:	ldr	x17, [x16, #1080]
    ab18:	add	x16, x16, #0x438
    ab1c:	br	x17

000000000000ab20 <rpl_getopt_internal@plt>:
    ab20:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ab24:	ldr	x17, [x16, #1088]
    ab28:	add	x16, x16, #0x440
    ab2c:	br	x17

000000000000ab30 <strndup@plt>:
    ab30:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ab34:	ldr	x17, [x16, #1096]
    ab38:	add	x16, x16, #0x448
    ab3c:	br	x17

000000000000ab40 <strspn@plt>:
    ab40:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ab44:	ldr	x17, [x16, #1104]
    ab48:	add	x16, x16, #0x450
    ab4c:	br	x17

000000000000ab50 <rpl_ioctl@plt>:
    ab50:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ab54:	ldr	x17, [x16, #1112]
    ab58:	add	x16, x16, #0x458
    ab5c:	br	x17

000000000000ab60 <strchr@plt>:
    ab60:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ab64:	ldr	x17, [x16, #1120]
    ab68:	add	x16, x16, #0x460
    ab6c:	br	x17

000000000000ab70 <areadlink_with_size@plt>:
    ab70:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ab74:	ldr	x17, [x16, #1128]
    ab78:	add	x16, x16, #0x468
    ab7c:	br	x17

000000000000ab80 <argp_error@plt>:
    ab80:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ab84:	ldr	x17, [x16, #1136]
    ab88:	add	x16, x16, #0x470
    ab8c:	br	x17

000000000000ab90 <memrchr@plt>:
    ab90:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ab94:	ldr	x17, [x16, #1144]
    ab98:	add	x16, x16, #0x478
    ab9c:	br	x17

000000000000aba0 <utimensat@plt>:
    aba0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aba4:	ldr	x17, [x16, #1152]
    aba8:	add	x16, x16, #0x480
    abac:	br	x17

000000000000abb0 <pipeline_peekline@plt>:
    abb0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    abb4:	ldr	x17, [x16, #1160]
    abb8:	add	x16, x16, #0x488
    abbc:	br	x17

000000000000abc0 <do_cleanups_sigsafe@plt>:
    abc0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    abc4:	ldr	x17, [x16, #1168]
    abc8:	add	x16, x16, #0x490
    abcc:	br	x17

000000000000abd0 <fwrite@plt>:
    abd0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    abd4:	ldr	x17, [x16, #1176]
    abd8:	add	x16, x16, #0x498
    abdc:	br	x17

000000000000abe0 <rpl_fcntl@plt>:
    abe0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    abe4:	ldr	x17, [x16, #1184]
    abe8:	add	x16, x16, #0x4a0
    abec:	br	x17

000000000000abf0 <fnmatch@plt>:
    abf0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    abf4:	ldr	x17, [x16, #1192]
    abf8:	add	x16, x16, #0x4a8
    abfc:	br	x17

000000000000ac00 <fcntl@plt>:
    ac00:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ac04:	ldr	x17, [x16, #1200]
    ac08:	add	x16, x16, #0x4b0
    ac0c:	br	x17

000000000000ac10 <idpriv_drop@plt>:
    ac10:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ac14:	ldr	x17, [x16, #1208]
    ac18:	add	x16, x16, #0x4b8
    ac1c:	br	x17

000000000000ac20 <rpl_regerror@plt>:
    ac20:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ac24:	ldr	x17, [x16, #1216]
    ac28:	add	x16, x16, #0x4c0
    ac2c:	br	x17

000000000000ac30 <pthread_mutex_destroy@plt>:
    ac30:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ac34:	ldr	x17, [x16, #1224]
    ac38:	add	x16, x16, #0x4c8
    ac3c:	br	x17

000000000000ac40 <strcpy@plt>:
    ac40:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ac44:	ldr	x17, [x16, #1232]
    ac48:	add	x16, x16, #0x4d0
    ac4c:	br	x17

000000000000ac50 <hash_pjw@plt>:
    ac50:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ac54:	ldr	x17, [x16, #1240]
    ac58:	add	x16, x16, #0x4d8
    ac5c:	br	x17

000000000000ac60 <_argp_input@plt>:
    ac60:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ac64:	ldr	x17, [x16, #1248]
    ac68:	add	x16, x16, #0x4e0
    ac6c:	br	x17

000000000000ac70 <__lxstat@plt>:
    ac70:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ac74:	ldr	x17, [x16, #1256]
    ac78:	add	x16, x16, #0x4e8
    ac7c:	br	x17

000000000000ac80 <dup_safer_flag@plt>:
    ac80:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ac84:	ldr	x17, [x16, #1264]
    ac88:	add	x16, x16, #0x4f0
    ac8c:	br	x17

000000000000ac90 <memchr@plt>:
    ac90:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ac94:	ldr	x17, [x16, #1272]
    ac98:	add	x16, x16, #0x4f8
    ac9c:	br	x17

000000000000aca0 <idpriv_temp_restore@plt>:
    aca0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aca4:	ldr	x17, [x16, #1280]
    aca8:	add	x16, x16, #0x500
    acac:	br	x17

000000000000acb0 <new_string_list@plt>:
    acb0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    acb4:	ldr	x17, [x16, #1288]
    acb8:	add	x16, x16, #0x508
    acbc:	br	x17

000000000000acc0 <getresgid@plt>:
    acc0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    acc4:	ldr	x17, [x16, #1296]
    acc8:	add	x16, x16, #0x510
    accc:	br	x17

000000000000acd0 <isatty@plt>:
    acd0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    acd4:	ldr	x17, [x16, #1304]
    acd8:	add	x16, x16, #0x518
    acdc:	br	x17

000000000000ace0 <xzalloc@plt>:
    ace0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ace4:	ldr	x17, [x16, #1312]
    ace8:	add	x16, x16, #0x520
    acec:	br	x17

000000000000acf0 <xstrndup@plt>:
    acf0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    acf4:	ldr	x17, [x16, #1320]
    acf8:	add	x16, x16, #0x528
    acfc:	br	x17

000000000000ad00 <pthread_mutexattr_init@plt>:
    ad00:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ad04:	ldr	x17, [x16, #1328]
    ad08:	add	x16, x16, #0x530
    ad0c:	br	x17

000000000000ad10 <setresuid@plt>:
    ad10:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ad14:	ldr	x17, [x16, #1336]
    ad18:	add	x16, x16, #0x538
    ad1c:	br	x17

000000000000ad20 <utimes@plt>:
    ad20:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ad24:	ldr	x17, [x16, #1344]
    ad28:	add	x16, x16, #0x540
    ad2c:	br	x17

000000000000ad30 <iswalnum@plt>:
    ad30:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ad34:	ldr	x17, [x16, #1352]
    ad38:	add	x16, x16, #0x548
    ad3c:	br	x17

000000000000ad40 <__fxstat@plt>:
    ad40:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ad44:	ldr	x17, [x16, #1360]
    ad48:	add	x16, x16, #0x550
    ad4c:	br	x17

000000000000ad50 <pthread_mutexattr_destroy@plt>:
    ad50:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ad54:	ldr	x17, [x16, #1368]
    ad58:	add	x16, x16, #0x558
    ad5c:	br	x17

000000000000ad60 <strchrnul@plt>:
    ad60:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ad64:	ldr	x17, [x16, #1376]
    ad68:	add	x16, x16, #0x560
    ad6c:	br	x17

000000000000ad70 <strstr@plt>:
    ad70:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ad74:	ldr	x17, [x16, #1384]
    ad78:	add	x16, x16, #0x568
    ad7c:	br	x17

000000000000ad80 <_argp_fmtstream_ensure@plt>:
    ad80:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ad84:	ldr	x17, [x16, #1392]
    ad88:	add	x16, x16, #0x570
    ad8c:	br	x17

000000000000ad90 <argp_state_help@plt>:
    ad90:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ad94:	ldr	x17, [x16, #1400]
    ad98:	add	x16, x16, #0x578
    ad9c:	br	x17

000000000000ada0 <dcgettext@plt>:
    ada0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ada4:	ldr	x17, [x16, #1408]
    ada8:	add	x16, x16, #0x580
    adac:	br	x17

000000000000adb0 <pthread_rwlockattr_destroy@plt>:
    adb0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    adb4:	ldr	x17, [x16, #1416]
    adb8:	add	x16, x16, #0x588
    adbc:	br	x17

000000000000adc0 <vsnprintf@plt>:
    adc0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    adc4:	ldr	x17, [x16, #1424]
    adc8:	add	x16, x16, #0x590
    adcc:	br	x17

000000000000add0 <argp_fmtstream_free@plt>:
    add0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    add4:	ldr	x17, [x16, #1432]
    add8:	add	x16, x16, #0x598
    addc:	br	x17

000000000000ade0 <get_locale_charset@plt>:
    ade0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ade4:	ldr	x17, [x16, #1440]
    ade8:	add	x16, x16, #0x5a0
    adec:	br	x17

000000000000adf0 <xvasprintf@plt>:
    adf0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    adf4:	ldr	x17, [x16, #1448]
    adf8:	add	x16, x16, #0x5a8
    adfc:	br	x17

000000000000ae00 <fputs_unlocked@plt>:
    ae00:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ae04:	ldr	x17, [x16, #1456]
    ae08:	add	x16, x16, #0x5b0
    ae0c:	br	x17

000000000000ae10 <sigaddset@plt>:
    ae10:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ae14:	ldr	x17, [x16, #1464]
    ae18:	add	x16, x16, #0x5b8
    ae1c:	br	x17

000000000000ae20 <pathsearch_executable@plt>:
    ae20:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ae24:	ldr	x17, [x16, #1472]
    ae28:	add	x16, x16, #0x5c0
    ae2c:	br	x17

000000000000ae30 <towupper@plt>:
    ae30:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ae34:	ldr	x17, [x16, #1480]
    ae38:	add	x16, x16, #0x5c8
    ae3c:	br	x17

000000000000ae40 <fd_safer_flag@plt>:
    ae40:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ae44:	ldr	x17, [x16, #1488]
    ae48:	add	x16, x16, #0x5d0
    ae4c:	br	x17

000000000000ae50 <xmemdup@plt>:
    ae50:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ae54:	ldr	x17, [x16, #1496]
    ae58:	add	x16, x16, #0x5d8
    ae5c:	br	x17

000000000000ae60 <strcspn@plt>:
    ae60:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ae64:	ldr	x17, [x16, #1504]
    ae68:	add	x16, x16, #0x5e0
    ae6c:	br	x17

000000000000ae70 <_getopt_internal_r@plt>:
    ae70:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ae74:	ldr	x17, [x16, #1512]
    ae78:	add	x16, x16, #0x5e8
    ae7c:	br	x17

000000000000ae80 <vfprintf@plt>:
    ae80:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ae84:	ldr	x17, [x16, #1520]
    ae88:	add	x16, x16, #0x5f0
    ae8c:	br	x17

000000000000ae90 <openat@plt>:
    ae90:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    ae94:	ldr	x17, [x16, #1528]
    ae98:	add	x16, x16, #0x5f8
    ae9c:	br	x17

000000000000aea0 <__assert_fail@plt>:
    aea0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aea4:	ldr	x17, [x16, #1536]
    aea8:	add	x16, x16, #0x600
    aeac:	br	x17

000000000000aeb0 <__errno_location@plt>:
    aeb0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aeb4:	ldr	x17, [x16, #1544]
    aeb8:	add	x16, x16, #0x608
    aebc:	br	x17

000000000000aec0 <setresgid@plt>:
    aec0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aec4:	ldr	x17, [x16, #1552]
    aec8:	add	x16, x16, #0x610
    aecc:	br	x17

000000000000aed0 <getenv@plt>:
    aed0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aed4:	ldr	x17, [x16, #1560]
    aed8:	add	x16, x16, #0x618
    aedc:	br	x17

000000000000aee0 <locale_charset@plt>:
    aee0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aee4:	ldr	x17, [x16, #1568]
    aee8:	add	x16, x16, #0x620
    aeec:	br	x17

000000000000aef0 <__xstat@plt>:
    aef0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aef4:	ldr	x17, [x16, #1576]
    aef8:	add	x16, x16, #0x628
    aefc:	br	x17

000000000000af00 <pthread_mutex_lock@plt>:
    af00:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    af04:	ldr	x17, [x16, #1584]
    af08:	add	x16, x16, #0x630
    af0c:	br	x17

000000000000af10 <__getdelim@plt>:
    af10:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    af14:	ldr	x17, [x16, #1592]
    af18:	add	x16, x16, #0x638
    af1c:	br	x17

000000000000af20 <printf_parse@plt>:
    af20:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    af24:	ldr	x17, [x16, #1600]
    af28:	add	x16, x16, #0x640
    af2c:	br	x17

000000000000af30 <fd_safer@plt>:
    af30:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    af34:	ldr	x17, [x16, #1608]
    af38:	add	x16, x16, #0x648
    af3c:	br	x17

000000000000af40 <pthread_mutex_unlock@plt>:
    af40:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    af44:	ldr	x17, [x16, #1616]
    af48:	add	x16, x16, #0x650
    af4c:	br	x17

000000000000af50 <unlink@plt>:
    af50:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    af54:	ldr	x17, [x16, #1624]
    af58:	add	x16, x16, #0x658
    af5c:	br	x17

000000000000af60 <mkdir@plt>:
    af60:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    af64:	ldr	x17, [x16, #1632]
    af68:	add	x16, x16, #0x660
    af6c:	br	x17

000000000000af70 <towlower@plt>:
    af70:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    af74:	ldr	x17, [x16, #1640]
    af78:	add	x16, x16, #0x668
    af7c:	br	x17

000000000000af80 <gettime@plt>:
    af80:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    af84:	ldr	x17, [x16, #1648]
    af88:	add	x16, x16, #0x670
    af8c:	br	x17

000000000000af90 <rpl_re_compile_fastmap@plt>:
    af90:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    af94:	ldr	x17, [x16, #1656]
    af98:	add	x16, x16, #0x678
    af9c:	br	x17

000000000000afa0 <fprintf@plt>:
    afa0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    afa4:	ldr	x17, [x16, #1664]
    afa8:	add	x16, x16, #0x680
    afac:	br	x17

000000000000afb0 <hash_get_n_entries@plt>:
    afb0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    afb4:	ldr	x17, [x16, #1672]
    afb8:	add	x16, x16, #0x688
    afbc:	br	x17

000000000000afc0 <ioctl@plt>:
    afc0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    afc4:	ldr	x17, [x16, #1680]
    afc8:	add	x16, x16, #0x690
    afcc:	br	x17

000000000000afd0 <setlocale@plt>:
    afd0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    afd4:	ldr	x17, [x16, #1688]
    afd8:	add	x16, x16, #0x698
    afdc:	br	x17

000000000000afe0 <__fxstatat@plt>:
    afe0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    afe4:	ldr	x17, [x16, #1696]
    afe8:	add	x16, x16, #0x6a0
    afec:	br	x17

000000000000aff0 <wcrtomb@plt>:
    aff0:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    aff4:	ldr	x17, [x16, #1704]
    aff8:	add	x16, x16, #0x6a8
    affc:	br	x17

000000000000b000 <xgetcwd@plt>:
    b000:	adrp	x16, 47000 <base_len@@Base+0x331a8>
    b004:	ldr	x17, [x16, #1712]
    b008:	add	x16, x16, #0x6b0
    b00c:	br	x17

Disassembly of section .text:

000000000000b010 <appendstr@@Base-0x108>:
    b010:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    b014:	ldr	x0, [x0, #3904]
    b018:	cbz	x0, b020 <xgetcwd@plt+0x20>
    b01c:	b	a8b0 <__gmon_start__@plt>
    b020:	ret
    b024:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b028:	add	x0, x0, #0x210
    b02c:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b030:	add	x1, x1, #0x210
    b034:	cmp	x0, x1
    b038:	b.eq	b064 <xgetcwd@plt+0x64>  // b.none
    b03c:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
    b040:	ldr	x1, [x1, #3776]
    b044:	cbz	x1, b064 <xgetcwd@plt+0x64>
    b048:	stp	x29, x30, [sp, #-16]!
    b04c:	mov	x29, sp
    b050:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b054:	add	x0, x0, #0x210
    b058:	blr	x1
    b05c:	ldp	x29, x30, [sp], #16
    b060:	ret
    b064:	ret
    b068:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b06c:	add	x0, x0, #0x210
    b070:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b074:	add	x1, x1, #0x210
    b078:	sub	x0, x0, x1
    b07c:	lsr	x1, x0, #63
    b080:	add	x0, x1, x0, asr #3
    b084:	cmp	xzr, x0, asr #1
    b088:	b.eq	b0b8 <xgetcwd@plt+0xb8>  // b.none
    b08c:	asr	x1, x0, #1
    b090:	adrp	x2, 46000 <vasnprintf@@Base+0x1b378>
    b094:	ldr	x2, [x2, #4024]
    b098:	cbz	x2, b0b8 <xgetcwd@plt+0xb8>
    b09c:	stp	x29, x30, [sp, #-16]!
    b0a0:	mov	x29, sp
    b0a4:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b0a8:	add	x0, x0, #0x210
    b0ac:	blr	x2
    b0b0:	ldp	x29, x30, [sp], #16
    b0b4:	ret
    b0b8:	ret
    b0bc:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b0c0:	ldrb	w0, [x0, #528]
    b0c4:	cbnz	w0, b100 <xgetcwd@plt+0x100>
    b0c8:	stp	x29, x30, [sp, #-16]!
    b0cc:	mov	x29, sp
    b0d0:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    b0d4:	ldr	x0, [x0, #3800]
    b0d8:	cbz	x0, b0e8 <xgetcwd@plt+0xe8>
    b0dc:	adrp	x0, 47000 <base_len@@Base+0x331a8>
    b0e0:	ldr	x0, [x0, #1720]
    b0e4:	bl	a480 <__cxa_finalize@plt>
    b0e8:	bl	b024 <xgetcwd@plt+0x24>
    b0ec:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b0f0:	mov	w1, #0x1                   	// #1
    b0f4:	strb	w1, [x0, #528]
    b0f8:	ldp	x29, x30, [sp], #16
    b0fc:	ret
    b100:	ret
    b104:	stp	x29, x30, [sp, #-16]!
    b108:	mov	x29, sp
    b10c:	bl	b068 <xgetcwd@plt+0x68>
    b110:	ldp	x29, x30, [sp], #16
    b114:	ret

000000000000b118 <appendstr@@Base>:
    b118:	stp	x29, x30, [sp, #-144]!
    b11c:	mov	x29, sp
    b120:	stp	x19, x20, [sp, #16]
    b124:	stp	x21, x22, [sp, #32]
    b128:	mov	x21, x0
    b12c:	str	x1, [sp, #88]
    b130:	str	x2, [sp, #96]
    b134:	str	x3, [sp, #104]
    b138:	str	x4, [sp, #112]
    b13c:	str	x5, [sp, #120]
    b140:	str	x6, [sp, #128]
    b144:	str	x7, [sp, #136]
    b148:	mov	x20, #0x0                   	// #0
    b14c:	cbz	x0, b158 <appendstr@@Base+0x40>
    b150:	bl	a340 <strlen@plt>
    b154:	mov	x20, x0
    b158:	add	x0, sp, #0x90
    b15c:	str	x0, [sp, #48]
    b160:	str	x0, [sp, #56]
    b164:	add	x0, sp, #0x50
    b168:	str	x0, [sp, #64]
    b16c:	mov	w0, #0xffffffc8            	// #-56
    b170:	str	w0, [sp, #72]
    b174:	str	wzr, [sp, #76]
    b178:	add	x19, x20, #0x1
    b17c:	add	x22, sp, #0x90
    b180:	b	b1b0 <appendstr@@Base+0x98>
    b184:	add	w0, w2, #0x8
    b188:	str	w0, [sp, #72]
    b18c:	cmp	w0, #0x0
    b190:	b.le	b1cc <appendstr@@Base+0xb4>
    b194:	add	x0, x1, #0xf
    b198:	and	x0, x0, #0xfffffffffffffff8
    b19c:	str	x0, [sp, #48]
    b1a0:	ldr	x0, [x1]
    b1a4:	cbz	x0, b1d4 <appendstr@@Base+0xbc>
    b1a8:	bl	a340 <strlen@plt>
    b1ac:	add	x19, x19, x0
    b1b0:	ldr	w2, [sp, #72]
    b1b4:	ldr	x1, [sp, #48]
    b1b8:	tbnz	w2, #31, b184 <appendstr@@Base+0x6c>
    b1bc:	add	x2, x1, #0xf
    b1c0:	and	x2, x2, #0xfffffffffffffff8
    b1c4:	str	x2, [sp, #48]
    b1c8:	b	b1a0 <appendstr@@Base+0x88>
    b1cc:	add	x1, x22, w2, sxtw
    b1d0:	b	b1a0 <appendstr@@Base+0x88>
    b1d4:	mov	x1, x19
    b1d8:	mov	x0, x21
    b1dc:	bl	a660 <xrealloc@plt>
    b1e0:	mov	x21, x0
    b1e4:	add	x20, x0, x20
    b1e8:	add	x0, sp, #0x90
    b1ec:	str	x0, [sp, #48]
    b1f0:	str	x0, [sp, #56]
    b1f4:	add	x0, sp, #0x50
    b1f8:	str	x0, [sp, #64]
    b1fc:	mov	w0, #0xffffffc8            	// #-56
    b200:	str	w0, [sp, #72]
    b204:	str	wzr, [sp, #76]
    b208:	b	b248 <appendstr@@Base+0x130>
    b20c:	add	w0, w2, #0x8
    b210:	str	w0, [sp, #72]
    b214:	cmp	w0, #0x0
    b218:	b.le	b264 <appendstr@@Base+0x14c>
    b21c:	add	x0, x1, #0xf
    b220:	and	x0, x0, #0xfffffffffffffff8
    b224:	str	x0, [sp, #48]
    b228:	ldr	x19, [x1]
    b22c:	cbz	x19, b270 <appendstr@@Base+0x158>
    b230:	mov	x1, x19
    b234:	mov	x0, x20
    b238:	bl	ac40 <strcpy@plt>
    b23c:	mov	x0, x19
    b240:	bl	a340 <strlen@plt>
    b244:	add	x20, x20, x0
    b248:	ldr	w2, [sp, #72]
    b24c:	ldr	x1, [sp, #48]
    b250:	tbnz	w2, #31, b20c <appendstr@@Base+0xf4>
    b254:	add	x2, x1, #0xf
    b258:	and	x2, x2, #0xfffffffffffffff8
    b25c:	str	x2, [sp, #48]
    b260:	b	b228 <appendstr@@Base+0x110>
    b264:	ldr	x1, [sp, #56]
    b268:	add	x1, x1, w2, sxtw
    b26c:	b	b228 <appendstr@@Base+0x110>
    b270:	mov	x0, x21
    b274:	ldp	x19, x20, [sp, #16]
    b278:	ldp	x21, x22, [sp, #32]
    b27c:	ldp	x29, x30, [sp], #144
    b280:	ret
    b284:	stp	x29, x30, [sp, #-192]!
    b288:	mov	x29, sp
    b28c:	stp	x19, x20, [sp, #16]
    b290:	mov	w19, w0
    b294:	mov	x20, x1
    b298:	add	x2, sp, #0x28
    b29c:	mov	x1, #0x0                   	// #0
    b2a0:	bl	a860 <sigaction@plt>
    b2a4:	cbnz	w0, b2dc <appendstr@@Base+0x1c4>
    b2a8:	adrp	x2, b000 <xgetcwd@plt>
    b2ac:	add	x2, x2, #0x4c8
    b2b0:	ldr	x1, [sp, #40]
    b2b4:	cmp	x1, x2
    b2b8:	b.eq	b2c8 <appendstr@@Base+0x1b0>  // b.none
    b2bc:	ldp	x19, x20, [sp, #16]
    b2c0:	ldp	x29, x30, [sp], #192
    b2c4:	ret
    b2c8:	mov	x2, #0x0                   	// #0
    b2cc:	mov	x1, x20
    b2d0:	mov	w0, w19
    b2d4:	bl	a860 <sigaction@plt>
    b2d8:	b	b2bc <appendstr@@Base+0x1a4>
    b2dc:	mov	w0, #0xffffffff            	// #-1
    b2e0:	b	b2bc <appendstr@@Base+0x1a4>
    b2e4:	stp	x29, x30, [sp, #-32]!
    b2e8:	mov	x29, sp
    b2ec:	stp	x19, x20, [sp, #16]
    b2f0:	adrp	x20, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b2f4:	add	x20, x20, #0x218
    b2f8:	mov	x1, x20
    b2fc:	mov	w0, #0x1                   	// #1
    b300:	bl	b284 <appendstr@@Base+0x16c>
    b304:	mov	w19, w0
    b308:	add	x1, x20, #0x98
    b30c:	mov	w0, #0x2                   	// #2
    b310:	bl	b284 <appendstr@@Base+0x16c>
    b314:	orr	w19, w19, w0
    b318:	add	x1, x20, #0x130
    b31c:	mov	w0, #0xf                   	// #15
    b320:	bl	b284 <appendstr@@Base+0x16c>
    b324:	orr	w19, w19, w0
    b328:	cmp	w19, #0x0
    b32c:	csetm	w0, ne  // ne = any
    b330:	ldp	x19, x20, [sp, #16]
    b334:	ldp	x29, x30, [sp], #32
    b338:	ret
    b33c:	stp	x29, x30, [sp, #-208]!
    b340:	mov	x29, sp
    b344:	stp	x19, x20, [sp, #16]
    b348:	mov	w20, w0
    b34c:	mov	x19, x1
    b350:	mov	x2, x1
    b354:	mov	x1, #0x0                   	// #0
    b358:	bl	a860 <sigaction@plt>
    b35c:	cbnz	w0, b3d0 <appendstr@@Base+0x2b8>
    b360:	ldr	x1, [x19]
    b364:	cbz	x1, b374 <appendstr@@Base+0x25c>
    b368:	ldp	x19, x20, [sp, #16]
    b36c:	ldp	x29, x30, [sp], #208
    b370:	ret
    b374:	str	x21, [sp, #32]
    b378:	add	x21, sp, #0x38
    b37c:	add	x0, sp, #0x40
    b380:	stp	xzr, xzr, [sp, #64]
    b384:	stp	xzr, xzr, [x0, #16]
    b388:	stp	xzr, xzr, [x0, #32]
    b38c:	stp	xzr, xzr, [x0, #48]
    b390:	stp	xzr, xzr, [x0, #64]
    b394:	stp	xzr, xzr, [x0, #80]
    b398:	stp	xzr, xzr, [x0, #96]
    b39c:	stp	xzr, xzr, [x0, #112]
    b3a0:	stp	xzr, xzr, [x0, #128]
    b3a4:	adrp	x1, b000 <xgetcwd@plt>
    b3a8:	add	x1, x1, #0x4c8
    b3ac:	str	x1, [sp, #56]
    b3b0:	bl	a690 <sigemptyset@plt>
    b3b4:	str	wzr, [sp, #192]
    b3b8:	mov	x2, x19
    b3bc:	mov	x1, x21
    b3c0:	mov	w0, w20
    b3c4:	bl	a860 <sigaction@plt>
    b3c8:	ldr	x21, [sp, #32]
    b3cc:	b	b368 <appendstr@@Base+0x250>
    b3d0:	mov	w0, #0xffffffff            	// #-1
    b3d4:	b	b368 <appendstr@@Base+0x250>

000000000000b3d8 <do_cleanups_sigsafe@@Base>:
    b3d8:	stp	x29, x30, [sp, #-48]!
    b3dc:	mov	x29, sp
    b3e0:	str	x21, [sp, #32]
    b3e4:	mov	w21, w0
    b3e8:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b3ec:	add	x0, x0, #0x218
    b3f0:	ldr	w1, [x0, #456]
    b3f4:	ldr	w0, [x0, #460]
    b3f8:	cmp	w1, w0
    b3fc:	b.hi	b420 <do_cleanups_sigsafe@@Base+0x48>  // b.pmore
    b400:	cbz	w1, b480 <do_cleanups_sigsafe@@Base+0xa8>
    b404:	stp	x19, x20, [sp, #16]
    b408:	sub	w1, w1, #0x1
    b40c:	add	x1, x1, x1, lsl #1
    b410:	lsl	x19, x1, #3
    b414:	adrp	x20, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b418:	add	x20, x20, #0x218
    b41c:	b	b464 <do_cleanups_sigsafe@@Base+0x8c>
    b420:	stp	x19, x20, [sp, #16]
    b424:	adrp	x3, 2b000 <vasnprintf@@Base+0x378>
    b428:	add	x3, x3, #0xf50
    b42c:	mov	w2, #0xa9                  	// #169
    b430:	adrp	x1, 2b000 <vasnprintf@@Base+0x378>
    b434:	add	x1, x1, #0xf18
    b438:	adrp	x0, 2b000 <vasnprintf@@Base+0x378>
    b43c:	add	x0, x0, #0xf28
    b440:	bl	aea0 <__assert_fail@plt>
    b444:	ldr	x1, [x20, #464]
    b448:	add	x0, x1, x19
    b44c:	ldr	x1, [x1, x19]
    b450:	ldr	x0, [x0, #8]
    b454:	blr	x1
    b458:	sub	x19, x19, #0x18
    b45c:	cmn	x19, #0x18
    b460:	b.eq	b47c <do_cleanups_sigsafe@@Base+0xa4>  // b.none
    b464:	cbz	w21, b444 <do_cleanups_sigsafe@@Base+0x6c>
    b468:	ldr	x1, [x20, #464]
    b46c:	add	x1, x1, x19
    b470:	ldr	w0, [x1, #16]
    b474:	cbz	w0, b458 <do_cleanups_sigsafe@@Base+0x80>
    b478:	b	b444 <do_cleanups_sigsafe@@Base+0x6c>
    b47c:	ldp	x19, x20, [sp, #16]
    b480:	ldr	x21, [sp, #32]
    b484:	ldp	x29, x30, [sp], #48
    b488:	ret

000000000000b48c <do_cleanups@@Base>:
    b48c:	stp	x29, x30, [sp, #-32]!
    b490:	mov	x29, sp
    b494:	str	x19, [sp, #16]
    b498:	mov	w0, #0x0                   	// #0
    b49c:	bl	abc0 <do_cleanups_sigsafe@plt>
    b4a0:	adrp	x19, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b4a4:	add	x19, x19, #0x218
    b4a8:	str	wzr, [x19, #456]
    b4ac:	str	wzr, [x19, #460]
    b4b0:	ldr	x0, [x19, #464]
    b4b4:	bl	aa50 <free@plt>
    b4b8:	str	xzr, [x19, #464]
    b4bc:	ldr	x19, [sp, #16]
    b4c0:	ldp	x29, x30, [sp], #32
    b4c4:	ret
    b4c8:	stp	x29, x30, [sp, #-320]!
    b4cc:	mov	x29, sp
    b4d0:	stp	x19, x20, [sp, #16]
    b4d4:	mov	w20, w0
    b4d8:	mov	w0, #0x1                   	// #1
    b4dc:	bl	abc0 <do_cleanups_sigsafe@plt>
    b4e0:	add	x19, sp, #0xa8
    b4e4:	stp	xzr, xzr, [sp, #168]
    b4e8:	stp	xzr, xzr, [sp, #184]
    b4ec:	stp	xzr, xzr, [sp, #200]
    b4f0:	stp	xzr, xzr, [sp, #216]
    b4f4:	stp	xzr, xzr, [sp, #232]
    b4f8:	stp	xzr, xzr, [sp, #248]
    b4fc:	add	x0, sp, #0x200
    b500:	stp	xzr, xzr, [x0, #-248]
    b504:	stp	xzr, xzr, [x0, #-232]
    b508:	stp	xzr, xzr, [x0, #-216]
    b50c:	str	xzr, [sp, #312]
    b510:	add	x0, sp, #0xb0
    b514:	bl	a690 <sigemptyset@plt>
    b518:	str	wzr, [sp, #304]
    b51c:	mov	x2, #0x0                   	// #0
    b520:	mov	x1, x19
    b524:	mov	w0, w20
    b528:	bl	a860 <sigaction@plt>
    b52c:	cbz	w0, b538 <do_cleanups@@Base+0xac>
    b530:	mov	w0, #0x2                   	// #2
    b534:	bl	a2f0 <_exit@plt>
    b538:	add	x0, sp, #0x28
    b53c:	bl	a690 <sigemptyset@plt>
    b540:	cbnz	w0, b554 <do_cleanups@@Base+0xc8>
    b544:	mov	w1, w20
    b548:	add	x0, sp, #0x28
    b54c:	bl	ae10 <sigaddset@plt>
    b550:	cbz	w0, b55c <do_cleanups@@Base+0xd0>
    b554:	mov	w0, #0x2                   	// #2
    b558:	bl	a2f0 <_exit@plt>
    b55c:	mov	x2, #0x0                   	// #0
    b560:	add	x1, sp, #0x28
    b564:	mov	w0, #0x1                   	// #1
    b568:	bl	a3d0 <sigprocmask@plt>
    b56c:	cbnz	w0, b554 <do_cleanups@@Base+0xc8>
    b570:	bl	a5b0 <getpid@plt>
    b574:	mov	w1, w20
    b578:	bl	a510 <kill@plt>
    b57c:	bl	a900 <abort@plt>

000000000000b580 <push_cleanup@@Base>:
    b580:	stp	x29, x30, [sp, #-64]!
    b584:	mov	x29, sp
    b588:	stp	x19, x20, [sp, #16]
    b58c:	stp	x21, x22, [sp, #32]
    b590:	str	x23, [sp, #48]
    b594:	mov	x22, x0
    b598:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b59c:	add	x0, x0, #0x218
    b5a0:	ldr	w23, [x0, #456]
    b5a4:	ldr	w19, [x0, #460]
    b5a8:	cmp	w23, w19
    b5ac:	b.hi	b66c <push_cleanup@@Base+0xec>  // b.pmore
    b5b0:	mov	x21, x1
    b5b4:	mov	w20, w2
    b5b8:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b5bc:	ldr	w0, [x0, #1008]
    b5c0:	cbz	w0, b690 <push_cleanup@@Base+0x110>
    b5c4:	cmp	w23, w19
    b5c8:	b.eq	b6b0 <push_cleanup@@Base+0x130>  // b.none
    b5cc:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b5d0:	add	x0, x0, #0x218
    b5d4:	ldr	w3, [x0, #456]
    b5d8:	ldr	w0, [x0, #460]
    b5dc:	cmp	w3, w0
    b5e0:	b.cs	b700 <push_cleanup@@Base+0x180>  // b.hs, b.nlast
    b5e4:	adrp	x4, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b5e8:	add	x1, x4, #0x218
    b5ec:	ubfiz	x4, x3, #1, #32
    b5f0:	add	x4, x4, w3, uxtw
    b5f4:	lsl	x4, x4, #3
    b5f8:	ldr	x2, [x1, #464]
    b5fc:	add	x0, x2, x4
    b600:	str	x22, [x2, x4]
    b604:	str	x21, [x0, #8]
    b608:	str	w20, [x0, #16]
    b60c:	add	w3, w3, #0x1
    b610:	str	w3, [x1, #456]
    b614:	mov	w0, #0x1                   	// #1
    b618:	bl	b33c <appendstr@@Base+0x224>
    b61c:	mov	w20, w0
    b620:	cbnz	w0, b734 <push_cleanup@@Base+0x1b4>
    b624:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b628:	add	x1, x1, #0x218
    b62c:	add	x1, x1, #0x98
    b630:	mov	w0, #0x2                   	// #2
    b634:	bl	b33c <appendstr@@Base+0x224>
    b638:	mov	w19, w0
    b63c:	cbnz	w0, b73c <push_cleanup@@Base+0x1bc>
    b640:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b644:	add	x1, x1, #0x218
    b648:	add	x1, x1, #0x130
    b64c:	mov	w0, #0xf                   	// #15
    b650:	bl	b33c <appendstr@@Base+0x224>
    b654:	mov	w0, w19
    b658:	ldp	x19, x20, [sp, #16]
    b65c:	ldp	x21, x22, [sp, #32]
    b660:	ldr	x23, [sp, #48]
    b664:	ldp	x29, x30, [sp], #64
    b668:	ret
    b66c:	adrp	x3, 2b000 <vasnprintf@@Base+0x378>
    b670:	add	x3, x3, #0xf50
    b674:	add	x3, x3, #0x18
    b678:	mov	w2, #0xc8                  	// #200
    b67c:	adrp	x1, 2b000 <vasnprintf@@Base+0x378>
    b680:	add	x1, x1, #0xf18
    b684:	adrp	x0, 2b000 <vasnprintf@@Base+0x378>
    b688:	add	x0, x0, #0xf28
    b68c:	bl	aea0 <__assert_fail@plt>
    b690:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    b694:	ldr	x0, [x0, #3840]
    b698:	bl	2bef8 <vasnprintf@@Base+0x1270>
    b69c:	cbnz	w0, b724 <push_cleanup@@Base+0x1a4>
    b6a0:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b6a4:	mov	w1, #0x1                   	// #1
    b6a8:	str	w1, [x0, #1008]
    b6ac:	b	b5c4 <push_cleanup@@Base+0x44>
    b6b0:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b6b4:	ldr	x0, [x0, #1000]
    b6b8:	cbz	x0, b6ec <push_cleanup@@Base+0x16c>
    b6bc:	add	w19, w19, #0x1
    b6c0:	add	x19, x19, x19, lsl #1
    b6c4:	lsl	x1, x19, #3
    b6c8:	bl	a660 <xrealloc@plt>
    b6cc:	cbz	x0, b72c <push_cleanup@@Base+0x1ac>
    b6d0:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b6d4:	add	x1, x1, #0x218
    b6d8:	str	x0, [x1, #464]
    b6dc:	ldr	w0, [x1, #460]
    b6e0:	add	w0, w0, #0x1
    b6e4:	str	w0, [x1, #460]
    b6e8:	b	b5cc <push_cleanup@@Base+0x4c>
    b6ec:	add	w19, w19, #0x1
    b6f0:	add	x19, x19, x19, lsl #1
    b6f4:	lsl	x0, x19, #3
    b6f8:	bl	a710 <xmalloc@plt>
    b6fc:	b	b6cc <push_cleanup@@Base+0x14c>
    b700:	adrp	x3, 2b000 <vasnprintf@@Base+0x378>
    b704:	add	x3, x3, #0xf50
    b708:	add	x3, x3, #0x18
    b70c:	mov	w2, #0xe0                  	// #224
    b710:	adrp	x1, 2b000 <vasnprintf@@Base+0x378>
    b714:	add	x1, x1, #0xf18
    b718:	adrp	x0, 2b000 <vasnprintf@@Base+0x378>
    b71c:	add	x0, x0, #0xf38
    b720:	bl	aea0 <__assert_fail@plt>
    b724:	mov	w19, #0xffffffff            	// #-1
    b728:	b	b654 <push_cleanup@@Base+0xd4>
    b72c:	mov	w19, #0xffffffff            	// #-1
    b730:	b	b654 <push_cleanup@@Base+0xd4>
    b734:	mov	w19, #0x0                   	// #0
    b738:	b	b654 <push_cleanup@@Base+0xd4>
    b73c:	mov	w19, w20
    b740:	b	b654 <push_cleanup@@Base+0xd4>

000000000000b744 <pop_cleanup@@Base>:
    b744:	stp	x29, x30, [sp, #-16]!
    b748:	mov	x29, sp
    b74c:	adrp	x2, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b750:	ldr	w7, [x2, #992]
    b754:	cbz	w7, b778 <pop_cleanup@@Base+0x34>
    b758:	adrp	x2, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b75c:	ldr	x8, [x2, #1000]
    b760:	sub	w6, w7, #0x1
    b764:	ubfiz	x3, x6, #1, #32
    b768:	add	x3, x3, w6, uxtw
    b76c:	add	x3, x8, x3, lsl #3
    b770:	mov	w2, w7
    b774:	b	b7a4 <pop_cleanup@@Base+0x60>
    b778:	adrp	x3, 2b000 <vasnprintf@@Base+0x378>
    b77c:	add	x3, x3, #0xf50
    b780:	add	x3, x3, #0x28
    b784:	mov	w2, #0xf5                  	// #245
    b788:	adrp	x1, 2b000 <vasnprintf@@Base+0x378>
    b78c:	add	x1, x1, #0xf18
    b790:	adrp	x0, 2b000 <vasnprintf@@Base+0x378>
    b794:	add	x0, x0, #0xf48
    b798:	bl	aea0 <__assert_fail@plt>
    b79c:	sub	x3, x3, #0x18
    b7a0:	cbz	w2, b814 <pop_cleanup@@Base+0xd0>
    b7a4:	mov	w5, w2
    b7a8:	sub	w2, w2, #0x1
    b7ac:	ldr	x4, [x3]
    b7b0:	cmp	x4, x0
    b7b4:	b.ne	b79c <pop_cleanup@@Base+0x58>  // b.any
    b7b8:	ldr	x4, [x3, #8]
    b7bc:	cmp	x4, x1
    b7c0:	b.ne	b79c <pop_cleanup@@Base+0x58>  // b.any
    b7c4:	cmp	w7, w5
    b7c8:	b.ls	b804 <pop_cleanup@@Base+0xc0>  // b.plast
    b7cc:	ubfiz	x0, x5, #1, #32
    b7d0:	add	x0, x0, w5, uxtw
    b7d4:	add	x0, x8, x0, lsl #3
    b7d8:	ubfiz	x1, x2, #1, #32
    b7dc:	add	x1, x1, w2, uxtw
    b7e0:	add	x1, x8, x1, lsl #3
    b7e4:	ldp	x4, x5, [x0]
    b7e8:	stp	x4, x5, [x1]
    b7ec:	ldr	x3, [x0, #16]
    b7f0:	str	x3, [x1, #16]
    b7f4:	add	w2, w2, #0x1
    b7f8:	add	x0, x0, #0x18
    b7fc:	cmp	w2, w6
    b800:	b.ne	b7d8 <pop_cleanup@@Base+0x94>  // b.any
    b804:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b808:	str	w6, [x0, #992]
    b80c:	cbnz	w6, b814 <pop_cleanup@@Base+0xd0>
    b810:	bl	b2e4 <appendstr@@Base+0x1cc>
    b814:	ldp	x29, x30, [sp], #16
    b818:	ret

000000000000b81c <pop_all_cleanups@@Base>:
    b81c:	stp	x29, x30, [sp, #-16]!
    b820:	mov	x29, sp
    b824:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b828:	str	wzr, [x0, #992]
    b82c:	bl	b2e4 <appendstr@@Base+0x1cc>
    b830:	ldp	x29, x30, [sp], #16
    b834:	ret

000000000000b838 <init_debug@@Base>:
    b838:	stp	x29, x30, [sp, #-16]!
    b83c:	mov	x29, sp
    b840:	adrp	x0, 2b000 <vasnprintf@@Base+0x378>
    b844:	add	x0, x0, #0xf88
    b848:	bl	aed0 <getenv@plt>
    b84c:	cbz	x0, b870 <init_debug@@Base+0x38>
    b850:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
    b854:	add	x1, x1, #0xf78
    b858:	bl	a9b0 <strcmp@plt>
    b85c:	cbnz	w0, b870 <init_debug@@Base+0x38>
    b860:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    b864:	ldr	x0, [x0, #3808]
    b868:	mov	w1, #0x1                   	// #1
    b86c:	strb	w1, [x0]
    b870:	ldp	x29, x30, [sp], #16
    b874:	ret

000000000000b878 <debug@@Base>:
    b878:	stp	x29, x30, [sp, #-304]!
    b87c:	mov	x29, sp
    b880:	str	x1, [sp, #248]
    b884:	str	x2, [sp, #256]
    b888:	str	x3, [sp, #264]
    b88c:	str	x4, [sp, #272]
    b890:	str	x5, [sp, #280]
    b894:	str	x6, [sp, #288]
    b898:	str	x7, [sp, #296]
    b89c:	str	q0, [sp, #112]
    b8a0:	str	q1, [sp, #128]
    b8a4:	str	q2, [sp, #144]
    b8a8:	str	q3, [sp, #160]
    b8ac:	str	q4, [sp, #176]
    b8b0:	str	q5, [sp, #192]
    b8b4:	str	q6, [sp, #208]
    b8b8:	str	q7, [sp, #224]
    b8bc:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
    b8c0:	ldr	x1, [x1, #3808]
    b8c4:	ldrb	w1, [x1]
    b8c8:	cbnz	w1, b8d4 <debug@@Base+0x5c>
    b8cc:	ldp	x29, x30, [sp], #304
    b8d0:	ret
    b8d4:	add	x1, sp, #0x130
    b8d8:	str	x1, [sp, #48]
    b8dc:	str	x1, [sp, #56]
    b8e0:	add	x1, sp, #0xf0
    b8e4:	str	x1, [sp, #64]
    b8e8:	mov	w1, #0xffffffc8            	// #-56
    b8ec:	str	w1, [sp, #72]
    b8f0:	mov	w1, #0xffffff80            	// #-128
    b8f4:	str	w1, [sp, #76]
    b8f8:	ldp	x2, x3, [sp, #48]
    b8fc:	stp	x2, x3, [sp, #80]
    b900:	ldp	x2, x3, [sp, #64]
    b904:	stp	x2, x3, [sp, #96]
    b908:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
    b90c:	ldr	x1, [x1, #3808]
    b910:	ldrb	w1, [x1]
    b914:	cbz	w1, b8cc <debug@@Base+0x54>
    b918:	ldp	x2, x3, [sp, #80]
    b91c:	stp	x2, x3, [sp, #16]
    b920:	ldp	x2, x3, [sp, #96]
    b924:	stp	x2, x3, [sp, #32]
    b928:	add	x2, sp, #0x10
    b92c:	mov	x1, x0
    b930:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    b934:	ldr	x0, [x0, #3816]
    b938:	ldr	x0, [x0]
    b93c:	bl	ae80 <vfprintf@plt>
    b940:	b	b8cc <debug@@Base+0x54>

000000000000b944 <debug_error@@Base>:
    b944:	stp	x29, x30, [sp, #-304]!
    b948:	mov	x29, sp
    b94c:	str	x1, [sp, #248]
    b950:	str	x2, [sp, #256]
    b954:	str	x3, [sp, #264]
    b958:	str	x4, [sp, #272]
    b95c:	str	x5, [sp, #280]
    b960:	str	x6, [sp, #288]
    b964:	str	x7, [sp, #296]
    b968:	str	q0, [sp, #112]
    b96c:	str	q1, [sp, #128]
    b970:	str	q2, [sp, #144]
    b974:	str	q3, [sp, #160]
    b978:	str	q4, [sp, #176]
    b97c:	str	q5, [sp, #192]
    b980:	str	q6, [sp, #208]
    b984:	str	q7, [sp, #224]
    b988:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
    b98c:	ldr	x1, [x1, #3808]
    b990:	ldrb	w1, [x1]
    b994:	cbnz	w1, b9a0 <debug_error@@Base+0x5c>
    b998:	ldp	x29, x30, [sp], #304
    b99c:	ret
    b9a0:	add	x1, sp, #0x130
    b9a4:	str	x1, [sp, #48]
    b9a8:	str	x1, [sp, #56]
    b9ac:	add	x1, sp, #0xf0
    b9b0:	str	x1, [sp, #64]
    b9b4:	mov	w1, #0xffffffc8            	// #-56
    b9b8:	str	w1, [sp, #72]
    b9bc:	mov	w1, #0xffffff80            	// #-128
    b9c0:	str	w1, [sp, #76]
    b9c4:	ldp	x2, x3, [sp, #48]
    b9c8:	stp	x2, x3, [sp, #80]
    b9cc:	ldp	x2, x3, [sp, #64]
    b9d0:	stp	x2, x3, [sp, #96]
    b9d4:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
    b9d8:	ldr	x1, [x1, #3808]
    b9dc:	ldrb	w1, [x1]
    b9e0:	cbnz	w1, ba04 <debug_error@@Base+0xc0>
    b9e4:	bl	aeb0 <__errno_location@plt>
    b9e8:	ldr	w0, [x0]
    b9ec:	bl	a830 <strerror@plt>
    b9f0:	mov	x1, x0
    b9f4:	adrp	x0, 2b000 <vasnprintf@@Base+0x378>
    b9f8:	add	x0, x0, #0xf98
    b9fc:	bl	a570 <debug@plt>
    ba00:	b	b998 <debug_error@@Base+0x54>
    ba04:	ldp	x2, x3, [sp, #80]
    ba08:	stp	x2, x3, [sp, #16]
    ba0c:	ldp	x2, x3, [sp, #96]
    ba10:	stp	x2, x3, [sp, #32]
    ba14:	add	x2, sp, #0x10
    ba18:	mov	x1, x0
    ba1c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    ba20:	ldr	x0, [x0, #3816]
    ba24:	ldr	x0, [x0]
    ba28:	bl	ae80 <vfprintf@plt>
    ba2c:	b	b9e4 <debug_error@@Base+0xa0>

000000000000ba30 <get_groff_preconv@@Base>:
    ba30:	stp	x29, x30, [sp, #-32]!
    ba34:	mov	x29, sp
    ba38:	str	x19, [sp, #16]
    ba3c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    ba40:	ldr	x0, [x0, #3832]
    ba44:	ldr	x19, [x0]
    ba48:	cbz	x19, ba68 <get_groff_preconv@@Base+0x38>
    ba4c:	ldrb	w0, [x19]
    ba50:	cmp	w0, #0x0
    ba54:	csel	x19, x19, xzr, ne  // ne = any
    ba58:	mov	x0, x19
    ba5c:	ldr	x19, [sp, #16]
    ba60:	ldp	x29, x30, [sp], #32
    ba64:	ret
    ba68:	adrp	x0, 2b000 <vasnprintf@@Base+0x378>
    ba6c:	add	x0, x0, #0xfa0
    ba70:	bl	ae20 <pathsearch_executable@plt>
    ba74:	and	w0, w0, #0xff
    ba78:	cbz	w0, baa0 <get_groff_preconv@@Base+0x70>
    ba7c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    ba80:	ldr	x0, [x0, #3832]
    ba84:	adrp	x1, 2b000 <vasnprintf@@Base+0x378>
    ba88:	add	x1, x1, #0xfa0
    ba8c:	str	x1, [x0]
    ba90:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    ba94:	ldr	x0, [x0, #3832]
    ba98:	ldr	x19, [x0]
    ba9c:	b	ba58 <get_groff_preconv@@Base+0x28>
    baa0:	adrp	x0, 2b000 <vasnprintf@@Base+0x378>
    baa4:	add	x0, x0, #0xfb0
    baa8:	bl	ae20 <pathsearch_executable@plt>
    baac:	and	w0, w0, #0xff
    bab0:	cbz	w0, bacc <get_groff_preconv@@Base+0x9c>
    bab4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    bab8:	ldr	x0, [x0, #3832]
    babc:	adrp	x1, 2b000 <vasnprintf@@Base+0x378>
    bac0:	add	x1, x1, #0xfb0
    bac4:	str	x1, [x0]
    bac8:	b	ba90 <get_groff_preconv@@Base+0x60>
    bacc:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    bad0:	ldr	x0, [x0, #3832]
    bad4:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
    bad8:	add	x1, x1, #0xab8
    badc:	str	x1, [x0]
    bae0:	b	ba58 <get_groff_preconv@@Base+0x28>

000000000000bae4 <get_source_encoding@@Base>:
    bae4:	stp	x29, x30, [sp, #-48]!
    bae8:	mov	x29, sp
    baec:	str	x21, [sp, #32]
    baf0:	cbz	x0, bb00 <get_source_encoding@@Base+0x1c>
    baf4:	mov	x21, x0
    baf8:	ldrb	w0, [x0]
    bafc:	cbnz	w0, bb14 <get_source_encoding@@Base+0x30>
    bb00:	mov	x1, #0x0                   	// #0
    bb04:	mov	w0, #0x5                   	// #5
    bb08:	bl	afd0 <setlocale@plt>
    bb0c:	mov	x21, x0
    bb10:	cbz	x0, bb70 <get_source_encoding@@Base+0x8c>
    bb14:	stp	x19, x20, [sp, #16]
    bb18:	adrp	x0, 47000 <base_len@@Base+0x331a8>
    bb1c:	ldr	x19, [x0, #1728]
    bb20:	cbz	x19, bb7c <get_source_encoding@@Base+0x98>
    bb24:	add	x20, x0, #0x6c0
    bb28:	mov	x0, x19
    bb2c:	bl	a340 <strlen@plt>
    bb30:	mov	x2, x0
    bb34:	mov	x1, x21
    bb38:	mov	x0, x19
    bb3c:	bl	a6c0 <strncmp@plt>
    bb40:	cbz	w0, bb5c <get_source_encoding@@Base+0x78>
    bb44:	ldr	x19, [x20, #16]!
    bb48:	cbnz	x19, bb28 <get_source_encoding@@Base+0x44>
    bb4c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    bb50:	add	x0, x0, #0x920
    bb54:	ldp	x19, x20, [sp, #16]
    bb58:	b	bb64 <get_source_encoding@@Base+0x80>
    bb5c:	ldr	x0, [x20, #8]
    bb60:	ldp	x19, x20, [sp, #16]
    bb64:	ldr	x21, [sp, #32]
    bb68:	ldp	x29, x30, [sp], #48
    bb6c:	ret
    bb70:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    bb74:	add	x0, x0, #0x920
    bb78:	b	bb64 <get_source_encoding@@Base+0x80>
    bb7c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    bb80:	add	x0, x0, #0x920
    bb84:	ldp	x19, x20, [sp, #16]
    bb88:	b	bb64 <get_source_encoding@@Base+0x80>

000000000000bb8c <get_canonical_charset_name@@Base>:
    bb8c:	stp	x29, x30, [sp, #-48]!
    bb90:	mov	x29, sp
    bb94:	stp	x19, x20, [sp, #16]
    bb98:	str	x21, [sp, #32]
    bb9c:	mov	x21, x0
    bba0:	bl	a730 <xstrdup@plt>
    bba4:	mov	x20, x0
    bba8:	ldrb	w19, [x0]
    bbac:	cbz	w19, bbd0 <get_canonical_charset_name@@Base+0x44>
    bbb0:	bl	a7f0 <__ctype_toupper_loc@plt>
    bbb4:	ldr	x2, [x0]
    bbb8:	mov	x1, x20
    bbbc:	and	x19, x19, #0xff
    bbc0:	ldr	w0, [x2, x19, lsl #2]
    bbc4:	strb	w0, [x1]
    bbc8:	ldrb	w19, [x1, #1]!
    bbcc:	cbnz	w19, bbbc <get_canonical_charset_name@@Base+0x30>
    bbd0:	adrp	x0, 47000 <base_len@@Base+0x331a8>
    bbd4:	ldr	x0, [x0, #2464]
    bbd8:	cbz	x0, bbfc <get_canonical_charset_name@@Base+0x70>
    bbdc:	adrp	x19, 47000 <base_len@@Base+0x331a8>
    bbe0:	add	x19, x19, #0x6c0
    bbe4:	add	x19, x19, #0x2e0
    bbe8:	mov	x1, x20
    bbec:	bl	a9b0 <strcmp@plt>
    bbf0:	cbz	w0, bc18 <get_canonical_charset_name@@Base+0x8c>
    bbf4:	ldr	x0, [x19, #16]!
    bbf8:	cbnz	x0, bbe8 <get_canonical_charset_name@@Base+0x5c>
    bbfc:	mov	x0, x20
    bc00:	bl	aa50 <free@plt>
    bc04:	mov	x0, x21
    bc08:	ldp	x19, x20, [sp, #16]
    bc0c:	ldr	x21, [sp, #32]
    bc10:	ldp	x29, x30, [sp], #48
    bc14:	ret
    bc18:	mov	x0, x20
    bc1c:	bl	aa50 <free@plt>
    bc20:	ldr	x0, [x19, #8]
    bc24:	b	bc08 <get_canonical_charset_name@@Base+0x7c>

000000000000bc28 <get_page_encoding@@Base>:
    bc28:	stp	x29, x30, [sp, #-48]!
    bc2c:	mov	x29, sp
    bc30:	stp	x19, x20, [sp, #16]
    bc34:	cbz	x0, bc44 <get_page_encoding@@Base+0x1c>
    bc38:	mov	x20, x0
    bc3c:	ldrb	w0, [x0]
    bc40:	cbnz	w0, bc58 <get_page_encoding@@Base+0x30>
    bc44:	mov	x1, #0x0                   	// #0
    bc48:	mov	w0, #0x5                   	// #5
    bc4c:	bl	afd0 <setlocale@plt>
    bc50:	mov	x20, x0
    bc54:	cbz	x0, bcb8 <get_page_encoding@@Base+0x90>
    bc58:	mov	w1, #0x2e                  	// #46
    bc5c:	mov	x0, x20
    bc60:	bl	ab60 <strchr@plt>
    bc64:	cbnz	x0, bccc <get_page_encoding@@Base+0xa4>
    bc68:	str	x21, [sp, #32]
    bc6c:	adrp	x0, 47000 <base_len@@Base+0x331a8>
    bc70:	ldr	x19, [x0, #1728]
    bc74:	add	x21, x0, #0x6c0
    bc78:	cbz	x19, bca0 <get_page_encoding@@Base+0x78>
    bc7c:	mov	x0, x19
    bc80:	bl	a340 <strlen@plt>
    bc84:	mov	x2, x0
    bc88:	mov	x1, x20
    bc8c:	mov	x0, x19
    bc90:	bl	a6c0 <strncmp@plt>
    bc94:	cbz	w0, bd14 <get_page_encoding@@Base+0xec>
    bc98:	ldr	x19, [x21, #16]!
    bc9c:	cbnz	x19, bc7c <get_page_encoding@@Base+0x54>
    bca0:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    bca4:	add	x0, x0, #0x920
    bca8:	bl	a730 <xstrdup@plt>
    bcac:	mov	x19, x0
    bcb0:	ldr	x21, [sp, #32]
    bcb4:	b	bd04 <get_page_encoding@@Base+0xdc>
    bcb8:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    bcbc:	add	x0, x0, #0x920
    bcc0:	bl	a730 <xstrdup@plt>
    bcc4:	mov	x19, x0
    bcc8:	b	bd04 <get_page_encoding@@Base+0xdc>
    bccc:	add	x19, x0, #0x1
    bcd0:	adrp	x1, 2b000 <vasnprintf@@Base+0x378>
    bcd4:	add	x1, x1, #0xfb8
    bcd8:	mov	x0, x19
    bcdc:	bl	ae60 <strcspn@plt>
    bce0:	mov	x1, x0
    bce4:	mov	x0, x19
    bce8:	bl	acf0 <xstrndup@plt>
    bcec:	mov	x20, x0
    bcf0:	bl	a330 <get_canonical_charset_name@plt>
    bcf4:	bl	a730 <xstrdup@plt>
    bcf8:	mov	x19, x0
    bcfc:	mov	x0, x20
    bd00:	bl	aa50 <free@plt>
    bd04:	mov	x0, x19
    bd08:	ldp	x19, x20, [sp, #16]
    bd0c:	ldp	x29, x30, [sp], #48
    bd10:	ret
    bd14:	ldr	x0, [x21, #8]
    bd18:	bl	a730 <xstrdup@plt>
    bd1c:	mov	x19, x0
    bd20:	ldr	x21, [sp, #32]
    bd24:	b	bd04 <get_page_encoding@@Base+0xdc>

000000000000bd28 <get_locale_charset@@Base>:
    bd28:	stp	x29, x30, [sp, #-32]!
    bd2c:	mov	x29, sp
    bd30:	stp	x19, x20, [sp, #16]
    bd34:	mov	x1, #0x0                   	// #0
    bd38:	mov	w0, #0x0                   	// #0
    bd3c:	bl	afd0 <setlocale@plt>
    bd40:	mov	x20, x0
    bd44:	cbz	x0, bd50 <get_locale_charset@@Base+0x28>
    bd48:	bl	a730 <xstrdup@plt>
    bd4c:	mov	x20, x0
    bd50:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
    bd54:	add	x1, x1, #0xab8
    bd58:	mov	w0, #0x0                   	// #0
    bd5c:	bl	afd0 <setlocale@plt>
    bd60:	bl	aee0 <locale_charset@plt>
    bd64:	mov	x19, x0
    bd68:	mov	x1, x20
    bd6c:	mov	w0, #0x0                   	// #0
    bd70:	bl	afd0 <setlocale@plt>
    bd74:	mov	x0, x20
    bd78:	bl	aa50 <free@plt>
    bd7c:	cbz	x19, bd94 <get_locale_charset@@Base+0x6c>
    bd80:	ldrb	w0, [x19]
    bd84:	cbz	w0, bda4 <get_locale_charset@@Base+0x7c>
    bd88:	mov	x0, x19
    bd8c:	bl	a330 <get_canonical_charset_name@plt>
    bd90:	mov	x19, x0
    bd94:	mov	x0, x19
    bd98:	ldp	x19, x20, [sp, #16]
    bd9c:	ldp	x29, x30, [sp], #32
    bda0:	ret
    bda4:	mov	x19, #0x0                   	// #0
    bda8:	b	bd94 <get_locale_charset@@Base+0x6c>

000000000000bdac <find_charset_locale@@Base>:
    bdac:	stp	x29, x30, [sp, #-144]!
    bdb0:	mov	x29, sp
    bdb4:	stp	x19, x20, [sp, #16]
    bdb8:	stp	x23, x24, [sp, #48]
    bdbc:	mov	x19, x0
    bdc0:	bl	a330 <get_canonical_charset_name@plt>
    bdc4:	mov	x23, x0
    bdc8:	adrp	x1, 2b000 <vasnprintf@@Base+0x378>
    bdcc:	add	x1, x1, #0xfe0
    bdd0:	ldp	x2, x3, [x1]
    bdd4:	stp	x2, x3, [sp, #112]
    bdd8:	ldr	x0, [x1, #16]
    bddc:	str	x0, [sp, #128]
    bde0:	ldrh	w0, [x1, #24]
    bde4:	strh	w0, [sp, #136]
    bde8:	str	xzr, [sp, #104]
    bdec:	str	xzr, [sp, #96]
    bdf0:	bl	ade0 <get_locale_charset@plt>
    bdf4:	mov	x1, x0
    bdf8:	mov	x0, x19
    bdfc:	bl	a9b0 <strcmp@plt>
    be00:	mov	x19, #0x0                   	// #0
    be04:	cbz	w0, bfa8 <find_charset_locale@@Base+0x1fc>
    be08:	stp	x21, x22, [sp, #32]
    be0c:	str	x27, [sp, #80]
    be10:	mov	x1, #0x0                   	// #0
    be14:	mov	w0, #0x0                   	// #0
    be18:	bl	afd0 <setlocale@plt>
    be1c:	mov	x27, x0
    be20:	cbz	x0, be2c <find_charset_locale@@Base+0x80>
    be24:	bl	a730 <xstrdup@plt>
    be28:	mov	x27, x0
    be2c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    be30:	add	x1, x1, #0xa20
    be34:	add	x0, sp, #0x70
    be38:	bl	a5d0 <fopen@plt>
    be3c:	mov	x22, x0
    be40:	cbz	x0, bfbc <find_charset_locale@@Base+0x210>
    be44:	stp	x25, x26, [sp, #64]
    be48:	add	x25, sp, #0x60
    be4c:	add	x24, sp, #0x68
    be50:	mov	w21, #0xa                   	// #10
    be54:	mov	w26, #0x20                  	// #32
    be58:	b	be9c <find_charset_locale@@Base+0xf0>
    be5c:	mov	x0, x20
    be60:	bl	aa50 <free@plt>
    be64:	ldr	x0, [sp, #104]
    be68:	bl	aa50 <free@plt>
    be6c:	mov	x1, x27
    be70:	mov	w0, #0x0                   	// #0
    be74:	bl	afd0 <setlocale@plt>
    be78:	mov	x0, x27
    be7c:	bl	aa50 <free@plt>
    be80:	ldp	x25, x26, [sp, #64]
    be84:	b	bf98 <find_charset_locale@@Base+0x1ec>
    be88:	mov	x0, x20
    be8c:	bl	aa50 <free@plt>
    be90:	ldr	x0, [sp, #104]
    be94:	bl	aa50 <free@plt>
    be98:	str	xzr, [sp, #104]
    be9c:	mov	x3, x22
    bea0:	mov	w2, w21
    bea4:	mov	x1, x25
    bea8:	mov	x0, x24
    beac:	bl	af10 <__getdelim@plt>
    beb0:	tbnz	x0, #63, bf64 <find_charset_locale@@Base+0x1b8>
    beb4:	mov	w1, w26
    beb8:	ldr	x0, [sp, #104]
    bebc:	bl	ab60 <strchr@plt>
    bec0:	mov	x19, x0
    bec4:	cbz	x0, be90 <find_charset_locale@@Base+0xe4>
    bec8:	add	x0, x0, #0x1
    becc:	bl	a730 <xstrdup@plt>
    bed0:	mov	x20, x0
    bed4:	mov	w1, w21
    bed8:	bl	ab60 <strchr@plt>
    bedc:	cbz	x0, bee4 <find_charset_locale@@Base+0x138>
    bee0:	strb	wzr, [x0]
    bee4:	mov	x0, x20
    bee8:	bl	a330 <get_canonical_charset_name@plt>
    beec:	mov	x1, x0
    bef0:	mov	x0, x23
    bef4:	bl	a9b0 <strcmp@plt>
    bef8:	cbnz	w0, be88 <find_charset_locale@@Base+0xdc>
    befc:	ldr	x0, [sp, #104]
    bf00:	sub	x1, x19, x0
    bf04:	bl	acf0 <xstrndup@plt>
    bf08:	mov	x19, x0
    bf0c:	mov	x1, x0
    bf10:	mov	w0, #0x0                   	// #0
    bf14:	bl	afd0 <setlocale@plt>
    bf18:	cbnz	x0, be5c <find_charset_locale@@Base+0xb0>
    bf1c:	mov	x0, x19
    bf20:	bl	aa50 <free@plt>
    bf24:	b	be88 <find_charset_locale@@Base+0xdc>
    bf28:	mov	x0, x19
    bf2c:	bl	aa50 <free@plt>
    bf30:	adrp	x0, 2b000 <vasnprintf@@Base+0x378>
    bf34:	add	x0, x0, #0xfc8
    bf38:	bl	a730 <xstrdup@plt>
    bf3c:	mov	x19, x0
    bf40:	mov	x1, x0
    bf44:	mov	w0, #0x0                   	// #0
    bf48:	bl	afd0 <setlocale@plt>
    bf4c:	mov	x20, x0
    bf50:	cbnz	x0, c05c <find_charset_locale@@Base+0x2b0>
    bf54:	mov	x0, x19
    bf58:	bl	aa50 <free@plt>
    bf5c:	mov	x19, x20
    bf60:	b	c05c <find_charset_locale@@Base+0x2b0>
    bf64:	mov	x0, x23
    bf68:	bl	a340 <strlen@plt>
    bf6c:	cmp	x0, #0x4
    bf70:	b.hi	bff8 <find_charset_locale@@Base+0x24c>  // b.pmore
    bf74:	ldr	x0, [sp, #104]
    bf78:	bl	aa50 <free@plt>
    bf7c:	mov	x1, x27
    bf80:	mov	w0, #0x0                   	// #0
    bf84:	bl	afd0 <setlocale@plt>
    bf88:	mov	x0, x27
    bf8c:	bl	aa50 <free@plt>
    bf90:	mov	x19, #0x0                   	// #0
    bf94:	ldp	x25, x26, [sp, #64]
    bf98:	mov	x0, x22
    bf9c:	bl	a590 <fclose@plt>
    bfa0:	ldp	x21, x22, [sp, #32]
    bfa4:	ldr	x27, [sp, #80]
    bfa8:	mov	x0, x19
    bfac:	ldp	x19, x20, [sp, #16]
    bfb0:	ldp	x23, x24, [sp, #48]
    bfb4:	ldp	x29, x30, [sp], #144
    bfb8:	ret
    bfbc:	mov	x0, x23
    bfc0:	bl	a340 <strlen@plt>
    bfc4:	cmp	x0, #0x4
    bfc8:	b.hi	c088 <find_charset_locale@@Base+0x2dc>  // b.pmore
    bfcc:	ldr	x0, [sp, #104]
    bfd0:	bl	aa50 <free@plt>
    bfd4:	mov	x1, x27
    bfd8:	mov	w0, #0x0                   	// #0
    bfdc:	bl	afd0 <setlocale@plt>
    bfe0:	mov	x0, x27
    bfe4:	bl	aa50 <free@plt>
    bfe8:	mov	x19, x22
    bfec:	ldp	x21, x22, [sp, #32]
    bff0:	ldr	x27, [sp, #80]
    bff4:	b	bfa8 <find_charset_locale@@Base+0x1fc>
    bff8:	mov	x2, #0x5                   	// #5
    bffc:	adrp	x1, 2b000 <vasnprintf@@Base+0x378>
    c000:	add	x1, x1, #0xfd8
    c004:	mov	x0, x23
    c008:	bl	a6c0 <strncmp@plt>
    c00c:	cbz	w0, c038 <find_charset_locale@@Base+0x28c>
    c010:	ldr	x0, [sp, #104]
    c014:	bl	aa50 <free@plt>
    c018:	mov	x1, x27
    c01c:	mov	w0, #0x0                   	// #0
    c020:	bl	afd0 <setlocale@plt>
    c024:	mov	x0, x27
    c028:	bl	aa50 <free@plt>
    c02c:	mov	x19, #0x0                   	// #0
    c030:	ldp	x25, x26, [sp, #64]
    c034:	b	bf98 <find_charset_locale@@Base+0x1ec>
    c038:	ldp	x25, x26, [sp, #64]
    c03c:	adrp	x0, 2b000 <vasnprintf@@Base+0x378>
    c040:	add	x0, x0, #0xfc0
    c044:	bl	a730 <xstrdup@plt>
    c048:	mov	x19, x0
    c04c:	mov	x1, x0
    c050:	mov	w0, #0x0                   	// #0
    c054:	bl	afd0 <setlocale@plt>
    c058:	cbz	x0, bf28 <find_charset_locale@@Base+0x17c>
    c05c:	ldr	x0, [sp, #104]
    c060:	bl	aa50 <free@plt>
    c064:	mov	x1, x27
    c068:	mov	w0, #0x0                   	// #0
    c06c:	bl	afd0 <setlocale@plt>
    c070:	mov	x0, x27
    c074:	bl	aa50 <free@plt>
    c078:	cbnz	x22, bf98 <find_charset_locale@@Base+0x1ec>
    c07c:	ldp	x21, x22, [sp, #32]
    c080:	ldr	x27, [sp, #80]
    c084:	b	bfa8 <find_charset_locale@@Base+0x1fc>
    c088:	mov	x2, #0x5                   	// #5
    c08c:	adrp	x1, 2b000 <vasnprintf@@Base+0x378>
    c090:	add	x1, x1, #0xfd8
    c094:	mov	x0, x23
    c098:	bl	a6c0 <strncmp@plt>
    c09c:	cbz	w0, c03c <find_charset_locale@@Base+0x290>
    c0a0:	ldr	x0, [sp, #104]
    c0a4:	bl	aa50 <free@plt>
    c0a8:	mov	x1, x27
    c0ac:	mov	w0, #0x0                   	// #0
    c0b0:	bl	afd0 <setlocale@plt>
    c0b4:	mov	x0, x27
    c0b8:	bl	aa50 <free@plt>
    c0bc:	mov	x19, x22
    c0c0:	ldp	x21, x22, [sp, #32]
    c0c4:	ldr	x27, [sp, #80]
    c0c8:	b	bfa8 <find_charset_locale@@Base+0x1fc>

000000000000c0cc <is_roff_device@@Base>:
    c0cc:	stp	x29, x30, [sp, #-32]!
    c0d0:	mov	x29, sp
    c0d4:	stp	x19, x20, [sp, #16]
    c0d8:	mov	x20, x0
    c0dc:	adrp	x0, 47000 <base_len@@Base+0x331a8>
    c0e0:	ldr	x0, [x0, #3168]
    c0e4:	cbz	x0, c10c <is_roff_device@@Base+0x40>
    c0e8:	adrp	x19, 47000 <base_len@@Base+0x331a8>
    c0ec:	add	x19, x19, #0x6c0
    c0f0:	add	x19, x19, #0x5a0
    c0f4:	mov	x1, x20
    c0f8:	bl	a9b0 <strcmp@plt>
    c0fc:	cbz	w0, c114 <is_roff_device@@Base+0x48>
    c100:	ldr	x0, [x19, #24]!
    c104:	cbnz	x0, c0f4 <is_roff_device@@Base+0x28>
    c108:	b	c118 <is_roff_device@@Base+0x4c>
    c10c:	mov	w0, #0x0                   	// #0
    c110:	b	c118 <is_roff_device@@Base+0x4c>
    c114:	mov	w0, #0x1                   	// #1
    c118:	ldp	x19, x20, [sp, #16]
    c11c:	ldp	x29, x30, [sp], #32
    c120:	ret

000000000000c124 <get_roff_encoding@@Base>:
    c124:	stp	x29, x30, [sp, #-48]!
    c128:	mov	x29, sp
    c12c:	stp	x19, x20, [sp, #16]
    c130:	cbz	x0, c298 <get_roff_encoding@@Base+0x174>
    c134:	str	x21, [sp, #32]
    c138:	mov	x20, x0
    c13c:	mov	x21, x1
    c140:	adrp	x0, 47000 <base_len@@Base+0x331a8>
    c144:	ldr	x0, [x0, #3168]
    c148:	cbz	x0, c16c <get_roff_encoding@@Base+0x48>
    c14c:	adrp	x19, 47000 <base_len@@Base+0x331a8>
    c150:	add	x19, x19, #0x6c0
    c154:	add	x19, x19, #0x5a0
    c158:	mov	x1, x20
    c15c:	bl	a9b0 <strcmp@plt>
    c160:	cbz	w0, c194 <get_roff_encoding@@Base+0x70>
    c164:	ldr	x0, [x19, #24]!
    c168:	cbnz	x0, c158 <get_roff_encoding@@Base+0x34>
    c16c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c170:	add	x1, x1, #0x0
    c174:	mov	x0, x20
    c178:	bl	a9b0 <strcmp@plt>
    c17c:	cbz	w0, c1c8 <get_roff_encoding@@Base+0xa4>
    c180:	adrp	x19, 2c000 <vasnprintf@@Base+0x1378>
    c184:	add	x19, x19, #0x920
    c188:	add	x19, x19, #0x10
    c18c:	ldr	x21, [sp, #32]
    c190:	b	c1b8 <get_roff_encoding@@Base+0x94>
    c194:	ldr	x19, [x19, #8]
    c198:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c19c:	add	x1, x1, #0x0
    c1a0:	mov	x0, x20
    c1a4:	bl	a9b0 <strcmp@plt>
    c1a8:	cbz	w0, c1d4 <get_roff_encoding@@Base+0xb0>
    c1ac:	cmp	x19, #0x0
    c1b0:	csel	x19, x19, x21, ne  // ne = any
    c1b4:	ldr	x21, [sp, #32]
    c1b8:	mov	x0, x19
    c1bc:	ldp	x19, x20, [sp, #16]
    c1c0:	ldp	x29, x30, [sp], #48
    c1c4:	ret
    c1c8:	adrp	x19, 2c000 <vasnprintf@@Base+0x1378>
    c1cc:	add	x19, x19, #0x920
    c1d0:	add	x19, x19, #0x10
    c1d4:	bl	a6a0 <get_groff_preconv@plt>
    c1d8:	cbnz	x0, c1ac <get_roff_encoding@@Base+0x88>
    c1dc:	bl	ade0 <get_locale_charset@plt>
    c1e0:	adrp	x1, 2b000 <vasnprintf@@Base+0x378>
    c1e4:	add	x1, x1, #0xfd8
    c1e8:	bl	a9b0 <strcmp@plt>
    c1ec:	cbnz	w0, c1ac <get_roff_encoding@@Base+0x88>
    c1f0:	mov	x1, #0x0                   	// #0
    c1f4:	bl	afd0 <setlocale@plt>
    c1f8:	mov	x20, x0
    c1fc:	mov	x2, #0x5                   	// #5
    c200:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c204:	add	x1, x1, #0x8
    c208:	bl	a6c0 <strncmp@plt>
    c20c:	cbz	w0, c2a8 <get_roff_encoding@@Base+0x184>
    c210:	mov	x2, #0x5                   	// #5
    c214:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c218:	add	x1, x1, #0x10
    c21c:	mov	x0, x20
    c220:	bl	a6c0 <strncmp@plt>
    c224:	cbz	w0, c2b8 <get_roff_encoding@@Base+0x194>
    c228:	mov	x2, #0x5                   	// #5
    c22c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c230:	add	x1, x1, #0x18
    c234:	mov	x0, x20
    c238:	bl	a6c0 <strncmp@plt>
    c23c:	cbz	w0, c2c8 <get_roff_encoding@@Base+0x1a4>
    c240:	mov	x2, #0x5                   	// #5
    c244:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c248:	add	x1, x1, #0x20
    c24c:	mov	x0, x20
    c250:	bl	a6c0 <strncmp@plt>
    c254:	cbz	w0, c2d8 <get_roff_encoding@@Base+0x1b4>
    c258:	mov	x2, #0x5                   	// #5
    c25c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c260:	add	x1, x1, #0x28
    c264:	mov	x0, x20
    c268:	bl	a6c0 <strncmp@plt>
    c26c:	cbz	w0, c2e8 <get_roff_encoding@@Base+0x1c4>
    c270:	mov	x2, #0x5                   	// #5
    c274:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c278:	add	x1, x1, #0x30
    c27c:	mov	x0, x20
    c280:	bl	a6c0 <strncmp@plt>
    c284:	cbnz	w0, c1ac <get_roff_encoding@@Base+0x88>
    c288:	adrp	x19, 2b000 <vasnprintf@@Base+0x378>
    c28c:	add	x19, x19, #0xfd8
    c290:	ldr	x21, [sp, #32]
    c294:	b	c1b8 <get_roff_encoding@@Base+0x94>
    c298:	adrp	x19, 2c000 <vasnprintf@@Base+0x1378>
    c29c:	add	x19, x19, #0x920
    c2a0:	add	x19, x19, #0x10
    c2a4:	b	c1b8 <get_roff_encoding@@Base+0x94>
    c2a8:	adrp	x19, 2b000 <vasnprintf@@Base+0x378>
    c2ac:	add	x19, x19, #0xfd8
    c2b0:	ldr	x21, [sp, #32]
    c2b4:	b	c1b8 <get_roff_encoding@@Base+0x94>
    c2b8:	adrp	x19, 2b000 <vasnprintf@@Base+0x378>
    c2bc:	add	x19, x19, #0xfd8
    c2c0:	ldr	x21, [sp, #32]
    c2c4:	b	c1b8 <get_roff_encoding@@Base+0x94>
    c2c8:	adrp	x19, 2b000 <vasnprintf@@Base+0x378>
    c2cc:	add	x19, x19, #0xfd8
    c2d0:	ldr	x21, [sp, #32]
    c2d4:	b	c1b8 <get_roff_encoding@@Base+0x94>
    c2d8:	adrp	x19, 2b000 <vasnprintf@@Base+0x378>
    c2dc:	add	x19, x19, #0xfd8
    c2e0:	ldr	x21, [sp, #32]
    c2e4:	b	c1b8 <get_roff_encoding@@Base+0x94>
    c2e8:	adrp	x19, 2b000 <vasnprintf@@Base+0x378>
    c2ec:	add	x19, x19, #0xfd8
    c2f0:	ldr	x21, [sp, #32]
    c2f4:	b	c1b8 <get_roff_encoding@@Base+0x94>

000000000000c2f8 <get_default_device@@Base>:
    c2f8:	stp	x29, x30, [sp, #-80]!
    c2fc:	mov	x29, sp
    c300:	stp	x19, x20, [sp, #16]
    c304:	stp	x21, x22, [sp, #32]
    c308:	mov	x20, x0
    c30c:	mov	x21, x1
    c310:	bl	a6a0 <get_groff_preconv@plt>
    c314:	cbz	x0, c354 <get_default_device@@Base+0x5c>
    c318:	cbz	x20, c4b4 <get_default_device@@Base+0x1bc>
    c31c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c320:	add	x1, x1, #0x48
    c324:	mov	x0, x20
    c328:	bl	a9b0 <strcmp@plt>
    c32c:	adrp	x2, 2c000 <vasnprintf@@Base+0x1378>
    c330:	add	x2, x2, #0x38
    c334:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c338:	add	x1, x1, #0x0
    c33c:	cmp	w0, #0x0
    c340:	csel	x0, x1, x2, ne  // ne = any
    c344:	ldp	x19, x20, [sp, #16]
    c348:	ldp	x21, x22, [sp, #32]
    c34c:	ldp	x29, x30, [sp], #80
    c350:	ret
    c354:	cbz	x20, c4c0 <get_default_device@@Base+0x1c8>
    c358:	adrp	x0, 47000 <base_len@@Base+0x331a8>
    c35c:	ldr	x0, [x0, #3528]
    c360:	cbz	x0, c4cc <get_default_device@@Base+0x1d4>
    c364:	stp	x23, x24, [sp, #48]
    c368:	str	x25, [sp, #64]
    c36c:	adrp	x19, 47000 <base_len@@Base+0x331a8>
    c370:	add	x19, x19, #0x6c0
    c374:	add	x19, x19, #0x708
    c378:	adrp	x24, 2c000 <vasnprintf@@Base+0x1378>
    c37c:	add	x24, x24, #0x48
    c380:	adrp	x23, 2b000 <vasnprintf@@Base+0x378>
    c384:	add	x23, x23, #0xfd8
    c388:	adrp	x25, 2c000 <vasnprintf@@Base+0x1378>
    c38c:	b	c3a8 <get_default_device@@Base+0xb0>
    c390:	mov	x1, x23
    c394:	mov	x0, x22
    c398:	bl	a9b0 <strcmp@plt>
    c39c:	cbz	w0, c490 <get_default_device@@Base+0x198>
    c3a0:	ldr	x0, [x19, #16]!
    c3a4:	cbz	x0, c4a0 <get_default_device@@Base+0x1a8>
    c3a8:	mov	x1, x20
    c3ac:	bl	a9b0 <strcmp@plt>
    c3b0:	cbnz	w0, c3a0 <get_default_device@@Base+0xa8>
    c3b4:	mov	x1, x21
    c3b8:	ldr	x0, [x19, #8]
    c3bc:	bl	a400 <get_roff_encoding@plt>
    c3c0:	mov	x22, x0
    c3c4:	mov	x1, x0
    c3c8:	mov	x0, x21
    c3cc:	bl	a9b0 <strcmp@plt>
    c3d0:	cbz	w0, c490 <get_default_device@@Base+0x198>
    c3d4:	mov	x1, x24
    c3d8:	mov	x0, x21
    c3dc:	bl	a9b0 <strcmp@plt>
    c3e0:	cbz	w0, c490 <get_default_device@@Base+0x198>
    c3e4:	mov	x1, x23
    c3e8:	mov	x0, x21
    c3ec:	bl	a9b0 <strcmp@plt>
    c3f0:	cbz	w0, c490 <get_default_device@@Base+0x198>
    c3f4:	mov	x1, x24
    c3f8:	mov	x0, x22
    c3fc:	bl	a9b0 <strcmp@plt>
    c400:	cbz	w0, c490 <get_default_device@@Base+0x198>
    c404:	add	x1, x25, #0x58
    c408:	mov	x0, x21
    c40c:	bl	a9b0 <strcmp@plt>
    c410:	cbz	w0, c390 <get_default_device@@Base+0x98>
    c414:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c418:	add	x1, x1, #0x60
    c41c:	mov	x0, x21
    c420:	bl	a9b0 <strcmp@plt>
    c424:	cbz	w0, c390 <get_default_device@@Base+0x98>
    c428:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c42c:	add	x1, x1, #0x70
    c430:	mov	x0, x21
    c434:	bl	a9b0 <strcmp@plt>
    c438:	cbz	w0, c390 <get_default_device@@Base+0x98>
    c43c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c440:	add	x1, x1, #0x78
    c444:	mov	x0, x21
    c448:	bl	a9b0 <strcmp@plt>
    c44c:	cbz	w0, c390 <get_default_device@@Base+0x98>
    c450:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c454:	add	x1, x1, #0x80
    c458:	mov	x0, x21
    c45c:	bl	a9b0 <strcmp@plt>
    c460:	cbz	w0, c390 <get_default_device@@Base+0x98>
    c464:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c468:	add	x1, x1, #0x88
    c46c:	mov	x0, x21
    c470:	bl	a9b0 <strcmp@plt>
    c474:	cbz	w0, c390 <get_default_device@@Base+0x98>
    c478:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c47c:	add	x1, x1, #0x90
    c480:	mov	x0, x21
    c484:	bl	a9b0 <strcmp@plt>
    c488:	cbnz	w0, c3a0 <get_default_device@@Base+0xa8>
    c48c:	b	c390 <get_default_device@@Base+0x98>
    c490:	ldr	x0, [x19, #8]
    c494:	ldp	x23, x24, [sp, #48]
    c498:	ldr	x25, [sp, #64]
    c49c:	b	c344 <get_default_device@@Base+0x4c>
    c4a0:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    c4a4:	add	x0, x0, #0x40
    c4a8:	ldp	x23, x24, [sp, #48]
    c4ac:	ldr	x25, [sp, #64]
    c4b0:	b	c344 <get_default_device@@Base+0x4c>
    c4b4:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    c4b8:	add	x0, x0, #0x0
    c4bc:	b	c344 <get_default_device@@Base+0x4c>
    c4c0:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    c4c4:	add	x0, x0, #0x40
    c4c8:	b	c344 <get_default_device@@Base+0x4c>
    c4cc:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    c4d0:	add	x0, x0, #0x40
    c4d4:	b	c344 <get_default_device@@Base+0x4c>

000000000000c4d8 <get_output_encoding@@Base>:
    c4d8:	stp	x29, x30, [sp, #-32]!
    c4dc:	mov	x29, sp
    c4e0:	stp	x19, x20, [sp, #16]
    c4e4:	mov	x20, x0
    c4e8:	adrp	x0, 47000 <base_len@@Base+0x331a8>
    c4ec:	ldr	x0, [x0, #3168]
    c4f0:	cbz	x0, c51c <get_output_encoding@@Base+0x44>
    c4f4:	adrp	x19, 47000 <base_len@@Base+0x331a8>
    c4f8:	add	x19, x19, #0x6c0
    c4fc:	add	x19, x19, #0x5a0
    c500:	mov	x1, x20
    c504:	bl	a9b0 <strcmp@plt>
    c508:	cbz	w0, c518 <get_output_encoding@@Base+0x40>
    c50c:	ldr	x0, [x19, #24]!
    c510:	cbnz	x0, c500 <get_output_encoding@@Base+0x28>
    c514:	b	c51c <get_output_encoding@@Base+0x44>
    c518:	ldr	x0, [x19, #16]
    c51c:	ldp	x19, x20, [sp, #16]
    c520:	ldp	x29, x30, [sp], #32
    c524:	ret

000000000000c528 <get_less_charset@@Base>:
    c528:	cbz	x0, c588 <get_less_charset@@Base+0x60>
    c52c:	stp	x29, x30, [sp, #-32]!
    c530:	mov	x29, sp
    c534:	stp	x19, x20, [sp, #16]
    c538:	mov	x20, x0
    c53c:	adrp	x0, 47000 <base_len@@Base+0x331a8>
    c540:	ldr	x0, [x0, #3688]
    c544:	cbz	x0, c598 <get_less_charset@@Base+0x70>
    c548:	adrp	x19, 47000 <base_len@@Base+0x331a8>
    c54c:	add	x19, x19, #0x6c0
    c550:	add	x19, x19, #0x7a8
    c554:	mov	x1, x20
    c558:	bl	a9b0 <strcmp@plt>
    c55c:	cbz	w0, c578 <get_less_charset@@Base+0x50>
    c560:	ldr	x0, [x19, #24]!
    c564:	cbnz	x0, c554 <get_less_charset@@Base+0x2c>
    c568:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    c56c:	add	x0, x0, #0x920
    c570:	add	x0, x0, #0x20
    c574:	b	c57c <get_less_charset@@Base+0x54>
    c578:	ldr	x0, [x19, #8]
    c57c:	ldp	x19, x20, [sp, #16]
    c580:	ldp	x29, x30, [sp], #32
    c584:	ret
    c588:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    c58c:	add	x0, x0, #0x920
    c590:	add	x0, x0, #0x20
    c594:	ret
    c598:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    c59c:	add	x0, x0, #0x920
    c5a0:	add	x0, x0, #0x20
    c5a4:	b	c57c <get_less_charset@@Base+0x54>

000000000000c5a8 <get_jless_charset@@Base>:
    c5a8:	stp	x29, x30, [sp, #-32]!
    c5ac:	mov	x29, sp
    c5b0:	stp	x19, x20, [sp, #16]
    c5b4:	mov	x20, x0
    c5b8:	cbz	x0, c5f0 <get_jless_charset@@Base+0x48>
    c5bc:	adrp	x0, 47000 <base_len@@Base+0x331a8>
    c5c0:	ldr	x0, [x0, #3688]
    c5c4:	cbz	x0, c5f0 <get_jless_charset@@Base+0x48>
    c5c8:	adrp	x19, 47000 <base_len@@Base+0x331a8>
    c5cc:	add	x19, x19, #0x6c0
    c5d0:	add	x19, x19, #0x7a8
    c5d4:	mov	x1, x20
    c5d8:	bl	a9b0 <strcmp@plt>
    c5dc:	cbz	w0, c5ec <get_jless_charset@@Base+0x44>
    c5e0:	ldr	x0, [x19, #24]!
    c5e4:	cbnz	x0, c5d4 <get_jless_charset@@Base+0x2c>
    c5e8:	b	c5f0 <get_jless_charset@@Base+0x48>
    c5ec:	ldr	x0, [x19, #16]
    c5f0:	ldp	x19, x20, [sp, #16]
    c5f4:	ldp	x29, x30, [sp], #32
    c5f8:	ret

000000000000c5fc <check_preprocessor_encoding@@Base>:
    c5fc:	stp	x29, x30, [sp, #-96]!
    c600:	mov	x29, sp
    c604:	stp	x21, x22, [sp, #32]
    c608:	stp	x23, x24, [sp, #48]
    c60c:	mov	x23, x1
    c610:	mov	x24, x2
    c614:	bl	abb0 <pipeline_peekline@plt>
    c618:	mov	x22, x0
    c61c:	cbz	x0, c8d4 <check_preprocessor_encoding@@Base+0x2d8>
    c620:	mov	x2, #0x4                   	// #4
    c624:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c628:	add	x1, x1, #0x98
    c62c:	bl	a6c0 <strncmp@plt>
    c630:	cbz	w0, c64c <check_preprocessor_encoding@@Base+0x50>
    c634:	mov	x2, #0x4                   	// #4
    c638:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c63c:	add	x1, x1, #0xa0
    c640:	mov	x0, x22
    c644:	bl	a6c0 <strncmp@plt>
    c648:	cbnz	w0, c8b0 <check_preprocessor_encoding@@Base+0x2b4>
    c64c:	stp	x19, x20, [sp, #16]
    c650:	stp	x25, x26, [sp, #64]
    c654:	mov	w1, #0xa                   	// #10
    c658:	mov	x0, x22
    c65c:	bl	ab60 <strchr@plt>
    c660:	mov	x20, x0
    c664:	add	x19, x22, #0x4
    c668:	cbz	x0, c6a0 <check_preprocessor_encoding@@Base+0xa4>
    c66c:	mov	x3, #0x3                   	// #3
    c670:	adrp	x2, 2c000 <vasnprintf@@Base+0x1378>
    c674:	add	x2, x2, #0xa8
    c678:	sub	x1, x20, x19
    c67c:	mov	x0, x19
    c680:	bl	a8a0 <memmem@plt>
    c684:	cbz	x0, c8b8 <check_preprocessor_encoding@@Base+0x2bc>
    c688:	add	x19, x0, #0x3
    c68c:	mov	x25, #0x7                   	// #7
    c690:	mov	w26, #0x3b                  	// #59
    c694:	adrp	x21, 2c000 <vasnprintf@@Base+0x1378>
    c698:	add	x21, x21, #0xb0
    c69c:	b	c6f0 <check_preprocessor_encoding@@Base+0xf4>
    c6a0:	mov	x0, x19
    c6a4:	bl	a340 <strlen@plt>
    c6a8:	add	x20, x19, x0
    c6ac:	b	c66c <check_preprocessor_encoding@@Base+0x70>
    c6b0:	ldrb	w3, [x19, #1]!
    c6b4:	cmp	w3, #0x20
    c6b8:	b.eq	c6b0 <check_preprocessor_encoding@@Base+0xb4>  // b.none
    c6bc:	mov	x2, x25
    c6c0:	mov	x1, x21
    c6c4:	mov	x0, x19
    c6c8:	bl	a6c0 <strncmp@plt>
    c6cc:	cbz	w0, c710 <check_preprocessor_encoding@@Base+0x114>
    c6d0:	sub	x2, x20, x19
    c6d4:	mov	w1, w26
    c6d8:	mov	x0, x19
    c6dc:	bl	ac90 <memchr@plt>
    c6e0:	cmp	x0, #0x0
    c6e4:	cset	w3, ne  // ne = any
    c6e8:	mov	w3, w3
    c6ec:	add	x19, x0, x3
    c6f0:	cmp	x19, #0x0
    c6f4:	ccmp	x19, x20, #0x2, ne  // ne = any
    c6f8:	b.cs	c8c8 <check_preprocessor_encoding@@Base+0x2cc>  // b.hs, b.nlast
    c6fc:	ldrb	w0, [x19]
    c700:	cbz	w0, c8e8 <check_preprocessor_encoding@@Base+0x2ec>
    c704:	cmp	w0, #0x20
    c708:	b.eq	c6b0 <check_preprocessor_encoding@@Base+0xb4>  // b.none
    c70c:	b	c6bc <check_preprocessor_encoding@@Base+0xc0>
    c710:	add	x21, x19, #0x7
    c714:	ldrb	w0, [x19, #7]
    c718:	cmp	w0, #0x20
    c71c:	b.ne	c72c <check_preprocessor_encoding@@Base+0x130>  // b.any
    c720:	ldrb	w0, [x21, #1]!
    c724:	cmp	w0, #0x20
    c728:	b.eq	c720 <check_preprocessor_encoding@@Base+0x124>  // b.none
    c72c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c730:	add	x1, x1, #0xb8
    c734:	mov	x0, x21
    c738:	bl	ab40 <strspn@plt>
    c73c:	mov	x26, x0
    c740:	mov	x1, x0
    c744:	mov	x0, x21
    c748:	bl	acf0 <xstrndup@plt>
    c74c:	mov	x25, x0
    c750:	bl	a340 <strlen@plt>
    c754:	mov	x19, x0
    c758:	cmp	x0, #0x4
    c75c:	b.ls	c79c <check_preprocessor_encoding@@Base+0x1a0>  // b.plast
    c760:	stp	x27, x28, [sp, #80]
    c764:	sub	x28, x0, #0x4
    c768:	add	x27, x25, x28
    c76c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c770:	add	x1, x1, #0x100
    c774:	mov	x0, x27
    c778:	bl	a7c0 <strcasecmp@plt>
    c77c:	cbnz	w0, c784 <check_preprocessor_encoding@@Base+0x188>
    c780:	strb	wzr, [x25, x28]
    c784:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c788:	add	x1, x1, #0x160
    c78c:	mov	x0, x27
    c790:	bl	a7c0 <strcasecmp@plt>
    c794:	cbz	w0, c7f0 <check_preprocessor_encoding@@Base+0x1f4>
    c798:	ldp	x27, x28, [sp, #80]
    c79c:	cmp	x19, #0x5
    c7a0:	b.ls	c7c0 <check_preprocessor_encoding@@Base+0x1c4>  // b.plast
    c7a4:	sub	x19, x19, #0x5
    c7a8:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c7ac:	add	x1, x1, #0x108
    c7b0:	add	x0, x25, x19
    c7b4:	bl	a7c0 <strcasecmp@plt>
    c7b8:	cbnz	w0, c7c0 <check_preprocessor_encoding@@Base+0x1c4>
    c7bc:	strb	wzr, [x25, x19]
    c7c0:	adrp	x0, 47000 <base_len@@Base+0x331a8>
    c7c4:	ldr	x0, [x0, #3880]
    c7c8:	cbz	x0, c810 <check_preprocessor_encoding@@Base+0x214>
    c7cc:	adrp	x19, 47000 <base_len@@Base+0x331a8>
    c7d0:	add	x19, x19, #0x6c0
    c7d4:	add	x19, x19, #0x868
    c7d8:	mov	x1, x25
    c7dc:	bl	a7c0 <strcasecmp@plt>
    c7e0:	cbz	w0, c7fc <check_preprocessor_encoding@@Base+0x200>
    c7e4:	ldr	x0, [x19, #16]!
    c7e8:	cbnz	x0, c7d8 <check_preprocessor_encoding@@Base+0x1dc>
    c7ec:	b	c810 <check_preprocessor_encoding@@Base+0x214>
    c7f0:	strb	wzr, [x27]
    c7f4:	ldp	x27, x28, [sp, #80]
    c7f8:	b	c79c <check_preprocessor_encoding@@Base+0x1a0>
    c7fc:	mov	x0, x25
    c800:	bl	aa50 <free@plt>
    c804:	ldr	x0, [x19, #8]
    c808:	bl	a730 <xstrdup@plt>
    c80c:	mov	x25, x0
    c810:	mov	x1, x25
    c814:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    c818:	add	x0, x0, #0x110
    c81c:	bl	a570 <debug@plt>
    c820:	cmp	x23, #0x0
    c824:	ccmp	x24, #0x0, #0x4, ne  // ne = any
    c828:	ccmp	x25, #0x0, #0x4, ne  // ne = any
    c82c:	b.eq	c878 <check_preprocessor_encoding@@Base+0x27c>  // b.none
    c830:	mov	x1, x23
    c834:	mov	x0, x25
    c838:	bl	a7c0 <strcasecmp@plt>
    c83c:	cbz	w0, c8f8 <check_preprocessor_encoding@@Base+0x2fc>
    c840:	cbz	x20, c888 <check_preprocessor_encoding@@Base+0x28c>
    c844:	add	x5, x21, x26
    c848:	sub	w4, w20, w5
    c84c:	mov	x3, x23
    c850:	mov	x2, x22
    c854:	sub	w1, w21, w22
    c858:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    c85c:	add	x0, x0, #0x150
    c860:	bl	aac0 <xasprintf@plt>
    c864:	str	x0, [x24]
    c868:	mov	x22, x25
    c86c:	ldp	x19, x20, [sp, #16]
    c870:	ldp	x25, x26, [sp, #64]
    c874:	b	c8d4 <check_preprocessor_encoding@@Base+0x2d8>
    c878:	mov	x22, x25
    c87c:	ldp	x19, x20, [sp, #16]
    c880:	ldp	x25, x26, [sp, #64]
    c884:	b	c8d4 <check_preprocessor_encoding@@Base+0x2d8>
    c888:	stp	x27, x28, [sp, #80]
    c88c:	adrp	x3, 2c000 <vasnprintf@@Base+0x1378>
    c890:	add	x3, x3, #0x920
    c894:	add	x3, x3, #0x28
    c898:	mov	w2, #0x39a                 	// #922
    c89c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    c8a0:	add	x1, x1, #0x130
    c8a4:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    c8a8:	add	x0, x0, #0x140
    c8ac:	bl	aea0 <__assert_fail@plt>
    c8b0:	mov	x22, #0x0                   	// #0
    c8b4:	b	c8d4 <check_preprocessor_encoding@@Base+0x2d8>
    c8b8:	mov	x22, x0
    c8bc:	ldp	x19, x20, [sp, #16]
    c8c0:	ldp	x25, x26, [sp, #64]
    c8c4:	b	c8d4 <check_preprocessor_encoding@@Base+0x2d8>
    c8c8:	mov	x22, #0x0                   	// #0
    c8cc:	ldp	x19, x20, [sp, #16]
    c8d0:	ldp	x25, x26, [sp, #64]
    c8d4:	mov	x0, x22
    c8d8:	ldp	x21, x22, [sp, #32]
    c8dc:	ldp	x23, x24, [sp, #48]
    c8e0:	ldp	x29, x30, [sp], #96
    c8e4:	ret
    c8e8:	mov	x22, #0x0                   	// #0
    c8ec:	ldp	x19, x20, [sp, #16]
    c8f0:	ldp	x25, x26, [sp, #64]
    c8f4:	b	c8d4 <check_preprocessor_encoding@@Base+0x2d8>
    c8f8:	mov	x22, x25
    c8fc:	ldp	x19, x20, [sp, #16]
    c900:	ldp	x25, x26, [sp, #64]
    c904:	b	c8d4 <check_preprocessor_encoding@@Base+0x2d8>

000000000000c908 <string_equals@@Base>:
    c908:	stp	x29, x30, [sp, #-16]!
    c90c:	mov	x29, sp
    c910:	bl	a9b0 <strcmp@plt>
    c914:	cmp	w0, #0x0
    c918:	cset	w0, eq  // eq = none
    c91c:	ldp	x29, x30, [sp], #16
    c920:	ret

000000000000c924 <string_hash@@Base>:
    c924:	stp	x29, x30, [sp, #-32]!
    c928:	mov	x29, sp
    c92c:	str	x19, [sp, #16]
    c930:	mov	x19, x0
    c934:	bl	a340 <strlen@plt>
    c938:	mov	x1, x0
    c93c:	mov	x0, x19
    c940:	bl	a980 <hash_pjw_bare@plt>
    c944:	ldr	x19, [sp, #16]
    c948:	ldp	x29, x30, [sp], #32
    c94c:	ret

000000000000c950 <plain_free@@Base>:
    c950:	stp	x29, x30, [sp, #-16]!
    c954:	mov	x29, sp
    c958:	bl	aa50 <free@plt>
    c95c:	ldp	x29, x30, [sp], #16
    c960:	ret

000000000000c964 <new_string_list@@Base>:
    c964:	stp	x29, x30, [sp, #-16]!
    c968:	mov	x29, sp
    c96c:	ldr	x5, [x0]
    c970:	mov	w4, w1
    c974:	adrp	x3, 46000 <vasnprintf@@Base+0x1b378>
    c978:	ldr	x3, [x3, #4000]
    c97c:	adrp	x2, 46000 <vasnprintf@@Base+0x1b378>
    c980:	ldr	x2, [x2, #3864]
    c984:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
    c988:	ldr	x1, [x1, #3824]
    c98c:	blr	x5
    c990:	cbz	x0, c99c <new_string_list@@Base+0x38>
    c994:	ldp	x29, x30, [sp], #16
    c998:	ret
    c99c:	bl	a890 <xalloc_die@plt>

000000000000c9a0 <new_string_map@@Base>:
    c9a0:	stp	x29, x30, [sp, #-16]!
    c9a4:	mov	x29, sp
    c9a8:	ldr	x5, [x0]
    c9ac:	mov	x4, x1
    c9b0:	adrp	x3, 46000 <vasnprintf@@Base+0x1b378>
    c9b4:	ldr	x3, [x3, #4000]
    c9b8:	adrp	x2, 46000 <vasnprintf@@Base+0x1b378>
    c9bc:	ldr	x2, [x2, #3864]
    c9c0:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
    c9c4:	ldr	x1, [x1, #3824]
    c9c8:	blr	x5
    c9cc:	cbz	x0, c9d8 <new_string_map@@Base+0x38>
    c9d0:	ldp	x29, x30, [sp], #16
    c9d4:	ret
    c9d8:	bl	a890 <xalloc_die@plt>

000000000000c9dc <new_string_set@@Base>:
    c9dc:	stp	x29, x30, [sp, #-16]!
    c9e0:	mov	x29, sp
    c9e4:	ldr	x4, [x0]
    c9e8:	adrp	x3, 46000 <vasnprintf@@Base+0x1b378>
    c9ec:	ldr	x3, [x3, #4000]
    c9f0:	adrp	x2, 46000 <vasnprintf@@Base+0x1b378>
    c9f4:	ldr	x2, [x2, #3864]
    c9f8:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
    c9fc:	ldr	x1, [x1, #3824]
    ca00:	blr	x4
    ca04:	cbz	x0, ca10 <new_string_set@@Base+0x34>
    ca08:	ldp	x29, x30, [sp], #16
    ca0c:	ret
    ca10:	bl	a890 <xalloc_die@plt>

000000000000ca14 <get_line_length@@Base>:
    ca14:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    ca18:	ldr	w0, [x0, #456]
    ca1c:	cmn	w0, #0x1
    ca20:	b.eq	ca28 <get_line_length@@Base+0x14>  // b.none
    ca24:	ret
    ca28:	stp	x29, x30, [sp, #-48]!
    ca2c:	mov	x29, sp
    ca30:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    ca34:	mov	w1, #0x50                  	// #80
    ca38:	str	w1, [x0, #456]
    ca3c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    ca40:	add	x0, x0, #0x968
    ca44:	bl	aed0 <getenv@plt>
    ca48:	cbz	x0, ca60 <get_line_length@@Base+0x4c>
    ca4c:	mov	w2, #0xa                   	// #10
    ca50:	mov	x1, #0x0                   	// #0
    ca54:	bl	aa00 <strtol@plt>
    ca58:	cmp	w0, #0x0
    ca5c:	b.gt	cadc <get_line_length@@Base+0xc8>
    ca60:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    ca64:	add	x0, x0, #0x978
    ca68:	bl	aed0 <getenv@plt>
    ca6c:	cbz	x0, ca84 <get_line_length@@Base+0x70>
    ca70:	mov	w2, #0xa                   	// #10
    ca74:	mov	x1, #0x0                   	// #0
    ca78:	bl	aa00 <strtol@plt>
    ca7c:	cmp	w0, #0x0
    ca80:	b.gt	cae8 <get_line_length@@Base+0xd4>
    ca84:	stp	x19, x20, [sp, #16]
    ca88:	mov	w1, #0x0                   	// #0
    ca8c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    ca90:	add	x0, x0, #0x980
    ca94:	bl	a640 <open@plt>
    ca98:	mov	w19, w0
    ca9c:	tbnz	w0, #31, caf4 <get_line_length@@Base+0xe0>
    caa0:	add	x2, sp, #0x28
    caa4:	mov	w1, #0x5413                	// #21523
    caa8:	bl	ab50 <rpl_ioctl@plt>
    caac:	mov	w20, w0
    cab0:	mov	w0, w19
    cab4:	bl	a850 <close@plt>
    cab8:	cbnz	w20, cb30 <get_line_length@@Base+0x11c>
    cabc:	ldrh	w1, [sp, #42]
    cac0:	cbnz	w1, cb40 <get_line_length@@Base+0x12c>
    cac4:	mov	w0, #0x50                  	// #80
    cac8:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    cacc:	str	w0, [x1, #456]
    cad0:	ldp	x19, x20, [sp, #16]
    cad4:	ldp	x29, x30, [sp], #48
    cad8:	ret
    cadc:	adrp	x2, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    cae0:	str	w0, [x2, #456]
    cae4:	b	cad4 <get_line_length@@Base+0xc0>
    cae8:	adrp	x2, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    caec:	str	w0, [x2, #456]
    caf0:	b	cad4 <get_line_length@@Base+0xc0>
    caf4:	mov	w0, #0x1                   	// #1
    caf8:	bl	acd0 <isatty@plt>
    cafc:	mov	w19, w0
    cb00:	cbz	w0, cb20 <get_line_length@@Base+0x10c>
    cb04:	mov	w19, #0x1                   	// #1
    cb08:	add	x2, sp, #0x28
    cb0c:	mov	w1, #0x5413                	// #21523
    cb10:	mov	w0, w19
    cb14:	bl	ab50 <rpl_ioctl@plt>
    cb18:	mov	w20, w0
    cb1c:	b	cab8 <get_line_length@@Base+0xa4>
    cb20:	mov	w0, #0x0                   	// #0
    cb24:	bl	acd0 <isatty@plt>
    cb28:	cbnz	w0, cb08 <get_line_length@@Base+0xf4>
    cb2c:	b	cac4 <get_line_length@@Base+0xb0>
    cb30:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    cb34:	add	x0, x0, #0x990
    cb38:	bl	a390 <perror@plt>
    cb3c:	b	cac4 <get_line_length@@Base+0xb0>
    cb40:	mov	w0, w1
    cb44:	adrp	x2, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    cb48:	str	w1, [x2, #456]
    cb4c:	ldp	x19, x20, [sp, #16]
    cb50:	b	cad4 <get_line_length@@Base+0xc0>
    cb54:	stp	x29, x30, [sp, #-64]!
    cb58:	mov	x29, sp
    cb5c:	stp	x19, x20, [sp, #16]
    cb60:	stp	x21, x22, [sp, #32]
    cb64:	mov	x4, x0
    cb68:	mov	x21, x1
    cb6c:	adrp	x20, 46000 <vasnprintf@@Base+0x1b378>
    cb70:	ldr	x20, [x20, #3984]
    cb74:	ldr	x0, [x20]
    cb78:	str	xzr, [sp, #56]
    cb7c:	add	x19, sp, #0x38
    cb80:	ldr	x1, [x0]
    cb84:	ldr	x3, [x1, #16]
    cb88:	mov	x2, x19
    cb8c:	mov	x1, x4
    cb90:	blr	x3
    cb94:	ldr	x22, [sp, #56]
    cb98:	ldr	x0, [x20]
    cb9c:	str	xzr, [sp, #56]
    cba0:	ldr	x1, [x0]
    cba4:	ldr	x3, [x1, #16]
    cba8:	mov	x2, x19
    cbac:	mov	x1, x21
    cbb0:	blr	x3
    cbb4:	ldr	x0, [sp, #56]
    cbb8:	cbz	x22, cbf0 <get_line_length@@Base+0x1dc>
    cbbc:	ldr	x2, [x22]
    cbc0:	mov	x1, #0xffffffffffffffff    	// #-1
    cbc4:	cbz	x0, cbcc <get_line_length@@Base+0x1b8>
    cbc8:	ldr	x1, [x0]
    cbcc:	mov	w0, #0xffffffff            	// #-1
    cbd0:	cmp	x1, x2
    cbd4:	b.hi	cbe0 <get_line_length@@Base+0x1cc>  // b.pmore
    cbd8:	cmp	x2, x1
    cbdc:	cset	w0, hi  // hi = pmore
    cbe0:	ldp	x19, x20, [sp, #16]
    cbe4:	ldp	x21, x22, [sp, #32]
    cbe8:	ldp	x29, x30, [sp], #64
    cbec:	ret
    cbf0:	mov	x2, #0xffffffffffffffff    	// #-1
    cbf4:	mov	x1, x2
    cbf8:	cbnz	x0, cbc8 <get_line_length@@Base+0x1b4>
    cbfc:	b	cbd8 <get_line_length@@Base+0x1c4>

000000000000cc00 <order_files@@Base>:
    cc00:	stp	x29, x30, [sp, #-400]!
    cc04:	mov	x29, sp
    cc08:	stp	x25, x26, [sp, #64]
    cc0c:	str	x1, [sp, #104]
    cc10:	ldr	x26, [x1]
    cc14:	mov	w1, #0x4000                	// #16384
    cc18:	movk	w1, #0x20, lsl #16
    cc1c:	bl	a640 <open@plt>
    cc20:	tbnz	w0, #31, ce34 <order_files@@Base+0x234>
    cc24:	stp	x21, x22, [sp, #32]
    cc28:	mov	w21, w0
    cc2c:	add	x1, sp, #0x118
    cc30:	bl	a6e0 <fstatfs@plt>
    cc34:	tbnz	w0, #31, ccc4 <order_files@@Base+0xc4>
    cc38:	stp	x19, x20, [sp, #16]
    cc3c:	stp	x23, x24, [sp, #48]
    cc40:	stp	x27, x28, [sp, #80]
    cc44:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    cc48:	ldr	x0, [x0, #3912]
    cc4c:	ldr	x5, [x0]
    cc50:	adrp	x4, 46000 <vasnprintf@@Base+0x1b378>
    cc54:	ldr	x4, [x4, #4000]
    cc58:	mov	x3, #0x0                   	// #0
    cc5c:	adrp	x2, 46000 <vasnprintf@@Base+0x1b378>
    cc60:	ldr	x2, [x2, #3864]
    cc64:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
    cc68:	ldr	x1, [x1, #3824]
    cc6c:	blr	x5
    cc70:	cbz	x0, ccd4 <order_files@@Base+0xd4>
    cc74:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
    cc78:	ldr	x1, [x1, #3984]
    cc7c:	str	x0, [x1]
    cc80:	mov	w1, #0x0                   	// #0
    cc84:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    cc88:	ldr	x0, [x0, #3896]
    cc8c:	bl	acb0 <new_string_list@plt>
    cc90:	mov	x22, x0
    cc94:	ldr	x0, [x26]
    cc98:	add	x8, sp, #0x80
    cc9c:	ldr	x1, [x0, #160]
    cca0:	mov	x0, x26
    cca4:	blr	x1
    cca8:	add	x25, sp, #0x70
    ccac:	add	x24, sp, #0x110
    ccb0:	add	x23, sp, #0x80
    ccb4:	add	x20, sp, #0xb8
    ccb8:	mov	w27, #0x660b                	// #26123
    ccbc:	movk	w27, #0xc020, lsl #16
    ccc0:	b	cd0c <order_files@@Base+0x10c>
    ccc4:	mov	w0, w21
    ccc8:	bl	a850 <close@plt>
    cccc:	ldp	x21, x22, [sp, #32]
    ccd0:	b	ce34 <order_files@@Base+0x234>
    ccd4:	bl	a890 <xalloc_die@plt>
    ccd8:	tbnz	w0, #31, cdd0 <order_files@@Base+0x1d0>
    ccdc:	mov	w0, w19
    cce0:	bl	a850 <close@plt>
    cce4:	ldr	x0, [sp, #272]
    cce8:	bl	a730 <xstrdup@plt>
    ccec:	ldr	x1, [x22]
    ccf0:	ldr	x3, [x1, #224]
    ccf4:	mov	x2, x0
    ccf8:	adrp	x1, c000 <find_charset_locale@@Base+0x254>
    ccfc:	add	x1, x1, #0xb54
    cd00:	mov	x0, x22
    cd04:	blr	x3
    cd08:	cbz	x0, cdd4 <order_files@@Base+0x1d4>
    cd0c:	ldr	x0, [sp, #128]
    cd10:	ldr	x3, [x0, #176]
    cd14:	mov	x2, x25
    cd18:	mov	x1, x24
    cd1c:	mov	x0, x23
    cd20:	blr	x3
    cd24:	and	w0, w0, #0xff
    cd28:	cbz	w0, cdd8 <order_files@@Base+0x1d8>
    cd2c:	mov	w2, #0x0                   	// #0
    cd30:	ldr	x1, [sp, #272]
    cd34:	mov	w0, w21
    cd38:	bl	ae90 <openat@plt>
    cd3c:	mov	w19, w0
    cd40:	tbnz	w0, #31, cd0c <order_files@@Base+0x10c>
    cd44:	stp	xzr, xzr, [x20]
    cd48:	stp	xzr, xzr, [x20, #16]
    cd4c:	stp	xzr, xzr, [x20, #32]
    cd50:	stp	xzr, xzr, [x20, #48]
    cd54:	stp	xzr, xzr, [x20, #64]
    cd58:	str	xzr, [x20, #80]
    cd5c:	ldr	x0, [sp, #288]
    cd60:	str	x0, [sp, #192]
    cd64:	mov	w0, #0x1                   	// #1
    cd68:	str	w0, [sp, #208]
    cd6c:	mov	x2, x20
    cd70:	mov	w1, w27
    cd74:	mov	w0, w19
    cd78:	bl	ab50 <rpl_ioctl@plt>
    cd7c:	cbnz	w0, ccdc <order_files@@Base+0xdc>
    cd80:	mov	x0, #0x8                   	// #8
    cd84:	bl	a710 <xmalloc@plt>
    cd88:	mov	x2, x0
    cd8c:	ldr	x0, [sp, #224]
    cd90:	str	x0, [x2]
    cd94:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    cd98:	ldr	x0, [x0, #3984]
    cd9c:	ldr	x28, [x0]
    cda0:	ldr	x0, [x28]
    cda4:	ldr	x4, [x0, #24]
    cda8:	add	x3, sp, #0x78
    cdac:	ldr	x1, [sp, #272]
    cdb0:	mov	x0, x28
    cdb4:	blr	x4
    cdb8:	cbnz	w0, ccd8 <order_files@@Base+0xd8>
    cdbc:	ldr	x1, [x28, #24]
    cdc0:	cbz	x1, ccdc <order_files@@Base+0xdc>
    cdc4:	ldr	x0, [sp, #120]
    cdc8:	blr	x1
    cdcc:	b	ccdc <order_files@@Base+0xdc>
    cdd0:	bl	a890 <xalloc_die@plt>
    cdd4:	bl	a890 <xalloc_die@plt>
    cdd8:	ldr	x0, [sp, #128]
    cddc:	ldr	x1, [x0, #184]
    cde0:	add	x0, sp, #0x80
    cde4:	blr	x1
    cde8:	adrp	x19, 46000 <vasnprintf@@Base+0x1b378>
    cdec:	ldr	x19, [x19, #3984]
    cdf0:	ldr	x0, [x19]
    cdf4:	ldr	x1, [x0]
    cdf8:	ldr	x1, [x1, #40]
    cdfc:	blr	x1
    ce00:	str	xzr, [x19]
    ce04:	mov	w0, w21
    ce08:	bl	a850 <close@plt>
    ce0c:	ldr	x0, [x26]
    ce10:	ldr	x1, [x0, #152]
    ce14:	mov	x0, x26
    ce18:	blr	x1
    ce1c:	ldr	x0, [sp, #104]
    ce20:	str	x22, [x0]
    ce24:	ldp	x19, x20, [sp, #16]
    ce28:	ldp	x21, x22, [sp, #32]
    ce2c:	ldp	x23, x24, [sp, #48]
    ce30:	ldp	x27, x28, [sp, #80]
    ce34:	ldp	x25, x26, [sp, #64]
    ce38:	ldp	x29, x30, [sp], #400
    ce3c:	ret

000000000000ce40 <pathsearch_executable@@Base>:
    ce40:	stp	x29, x30, [sp, #-224]!
    ce44:	mov	x29, sp
    ce48:	stp	x19, x20, [sp, #16]
    ce4c:	stp	x21, x22, [sp, #32]
    ce50:	mov	x21, x0
    ce54:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    ce58:	add	x0, x0, #0x9a8
    ce5c:	bl	aed0 <getenv@plt>
    ce60:	cbz	x0, cfd8 <pathsearch_executable@@Base+0x198>
    ce64:	mov	x20, x0
    ce68:	mov	w1, #0x2f                  	// #47
    ce6c:	mov	x0, x21
    ce70:	bl	ab60 <strchr@plt>
    ce74:	mov	x19, x0
    ce78:	cbz	x0, ceb8 <pathsearch_executable@@Base+0x78>
    ce7c:	add	x2, sp, #0x60
    ce80:	mov	x1, x21
    ce84:	mov	w0, #0x0                   	// #0
    ce88:	bl	aef0 <__xstat@plt>
    ce8c:	mov	w20, #0x0                   	// #0
    ce90:	cmn	w0, #0x1
    ce94:	b.eq	cfb8 <pathsearch_executable@@Base+0x178>  // b.none
    ce98:	ldr	w0, [sp, #112]
    ce9c:	and	w1, w0, #0xf000
    cea0:	cmp	w1, #0x8, lsl #12
    cea4:	b.ne	cfb8 <pathsearch_executable@@Base+0x178>  // b.any
    cea8:	mov	w1, #0x49                  	// #73
    ceac:	tst	w0, w1
    ceb0:	cset	w20, ne  // ne = any
    ceb4:	b	cfb8 <pathsearch_executable@@Base+0x178>
    ceb8:	stp	x25, x26, [sp, #64]
    cebc:	mov	x0, x20
    cec0:	bl	a730 <xstrdup@plt>
    cec4:	mov	x25, x0
    cec8:	str	x0, [sp, #88]
    cecc:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    ced0:	add	x1, x1, #0x9b0
    ced4:	add	x0, sp, #0x58
    ced8:	bl	a9a0 <strsep@plt>
    cedc:	mov	x1, x0
    cee0:	cbz	x0, cfcc <pathsearch_executable@@Base+0x18c>
    cee4:	stp	x23, x24, [sp, #48]
    cee8:	adrp	x23, 2c000 <vasnprintf@@Base+0x1378>
    ceec:	add	x23, x23, #0x9b8
    cef0:	add	x26, sp, #0x60
    cef4:	adrp	x22, 2c000 <vasnprintf@@Base+0x1378>
    cef8:	add	x22, x22, #0x9b0
    cefc:	add	x24, sp, #0x58
    cf00:	b	cf58 <pathsearch_executable@@Base+0x118>
    cf04:	mov	x2, x21
    cf08:	mov	x0, x23
    cf0c:	bl	aac0 <xasprintf@plt>
    cf10:	mov	x20, x0
    cf14:	mov	x2, x26
    cf18:	mov	x1, x0
    cf1c:	mov	w0, #0x0                   	// #0
    cf20:	bl	aef0 <__xstat@plt>
    cf24:	cmn	w0, #0x1
    cf28:	b.eq	cf78 <pathsearch_executable@@Base+0x138>  // b.none
    cf2c:	mov	x0, x20
    cf30:	bl	aa50 <free@plt>
    cf34:	ldr	w0, [sp, #112]
    cf38:	and	w1, w0, #0xf000
    cf3c:	cmp	w1, #0x8, lsl #12
    cf40:	b.eq	cf84 <pathsearch_executable@@Base+0x144>  // b.none
    cf44:	mov	x1, x22
    cf48:	mov	x0, x24
    cf4c:	bl	a9a0 <strsep@plt>
    cf50:	mov	x1, x0
    cf54:	cbz	x0, cf9c <pathsearch_executable@@Base+0x15c>
    cf58:	ldrb	w0, [x1]
    cf5c:	cbnz	w0, cf04 <pathsearch_executable@@Base+0xc4>
    cf60:	mov	x1, x19
    cf64:	cbnz	x19, cf04 <pathsearch_executable@@Base+0xc4>
    cf68:	bl	b000 <xgetcwd@plt>
    cf6c:	mov	x19, x0
    cf70:	mov	x1, x0
    cf74:	b	cf04 <pathsearch_executable@@Base+0xc4>
    cf78:	mov	x0, x20
    cf7c:	bl	aa50 <free@plt>
    cf80:	b	cf44 <pathsearch_executable@@Base+0x104>
    cf84:	mov	w1, #0x49                  	// #73
    cf88:	tst	w0, w1
    cf8c:	b.eq	cf44 <pathsearch_executable@@Base+0x104>  // b.none
    cf90:	mov	w20, #0x1                   	// #1
    cf94:	ldp	x23, x24, [sp, #48]
    cf98:	b	cfa4 <pathsearch_executable@@Base+0x164>
    cf9c:	mov	w20, #0x0                   	// #0
    cfa0:	ldp	x23, x24, [sp, #48]
    cfa4:	mov	x0, x25
    cfa8:	bl	aa50 <free@plt>
    cfac:	mov	x0, x19
    cfb0:	bl	aa50 <free@plt>
    cfb4:	ldp	x25, x26, [sp, #64]
    cfb8:	mov	w0, w20
    cfbc:	ldp	x19, x20, [sp, #16]
    cfc0:	ldp	x21, x22, [sp, #32]
    cfc4:	ldp	x29, x30, [sp], #224
    cfc8:	ret
    cfcc:	mov	x19, x0
    cfd0:	mov	w20, #0x0                   	// #0
    cfd4:	b	cfa4 <pathsearch_executable@@Base+0x164>
    cfd8:	mov	w20, #0x0                   	// #0
    cfdc:	b	cfb8 <pathsearch_executable@@Base+0x178>

000000000000cfe0 <directory_on_path@@Base>:
    cfe0:	stp	x29, x30, [sp, #-80]!
    cfe4:	mov	x29, sp
    cfe8:	stp	x19, x20, [sp, #16]
    cfec:	mov	x20, x0
    cff0:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    cff4:	add	x0, x0, #0x9a8
    cff8:	bl	aed0 <getenv@plt>
    cffc:	cbz	x0, d0b8 <directory_on_path@@Base+0xd8>
    d000:	stp	x21, x22, [sp, #32]
    d004:	bl	a730 <xstrdup@plt>
    d008:	mov	x22, x0
    d00c:	str	x0, [sp, #72]
    d010:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    d014:	add	x1, x1, #0x9b0
    d018:	add	x0, sp, #0x48
    d01c:	bl	a9a0 <strsep@plt>
    d020:	cbz	x0, d080 <directory_on_path@@Base+0xa0>
    d024:	str	x23, [sp, #48]
    d028:	mov	x19, #0x0                   	// #0
    d02c:	adrp	x21, 2c000 <vasnprintf@@Base+0x1378>
    d030:	add	x21, x21, #0x9b0
    d034:	add	x23, sp, #0x48
    d038:	b	d058 <directory_on_path@@Base+0x78>
    d03c:	mov	x1, x20
    d040:	bl	a9b0 <strcmp@plt>
    d044:	cbz	w0, d08c <directory_on_path@@Base+0xac>
    d048:	mov	x1, x21
    d04c:	mov	x0, x23
    d050:	bl	a9a0 <strsep@plt>
    d054:	cbz	x0, d074 <directory_on_path@@Base+0x94>
    d058:	ldrb	w1, [x0]
    d05c:	cbnz	w1, d03c <directory_on_path@@Base+0x5c>
    d060:	mov	x0, x19
    d064:	cbnz	x19, d03c <directory_on_path@@Base+0x5c>
    d068:	bl	b000 <xgetcwd@plt>
    d06c:	mov	x19, x0
    d070:	b	d03c <directory_on_path@@Base+0x5c>
    d074:	mov	w20, #0x0                   	// #0
    d078:	ldr	x23, [sp, #48]
    d07c:	b	d094 <directory_on_path@@Base+0xb4>
    d080:	mov	x19, x0
    d084:	mov	w20, #0x0                   	// #0
    d088:	b	d094 <directory_on_path@@Base+0xb4>
    d08c:	mov	w20, #0x1                   	// #1
    d090:	ldr	x23, [sp, #48]
    d094:	mov	x0, x22
    d098:	bl	aa50 <free@plt>
    d09c:	mov	x0, x19
    d0a0:	bl	aa50 <free@plt>
    d0a4:	ldp	x21, x22, [sp, #32]
    d0a8:	mov	w0, w20
    d0ac:	ldp	x19, x20, [sp, #16]
    d0b0:	ldp	x29, x30, [sp], #80
    d0b4:	ret
    d0b8:	mov	w20, #0x0                   	// #0
    d0bc:	b	d0a8 <directory_on_path@@Base+0xc8>

000000000000d0c0 <sandbox_init@@Base>:
    d0c0:	stp	x29, x30, [sp, #-16]!
    d0c4:	mov	x29, sp
    d0c8:	mov	x0, #0x1                   	// #1
    d0cc:	bl	ace0 <xzalloc@plt>
    d0d0:	strb	wzr, [x0]
    d0d4:	ldp	x29, x30, [sp], #16
    d0d8:	ret

000000000000d0dc <sandbox_load@@Base>:
    d0dc:	ret

000000000000d0e0 <sandbox_load_permissive@@Base>:
    d0e0:	ret

000000000000d0e4 <sandbox_free@@Base>:
    d0e4:	stp	x29, x30, [sp, #-16]!
    d0e8:	mov	x29, sp
    d0ec:	bl	aa50 <free@plt>
    d0f0:	ldp	x29, x30, [sp], #16
    d0f4:	ret
    d0f8:	stp	x29, x30, [sp, #-32]!
    d0fc:	mov	x29, sp
    d100:	str	x19, [sp, #16]
    d104:	bl	aeb0 <__errno_location@plt>
    d108:	ldr	w19, [x0]
    d10c:	mov	w2, #0x5                   	// #5
    d110:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    d114:	add	x1, x1, #0x9c0
    d118:	mov	x0, #0x0                   	// #0
    d11c:	bl	ada0 <dcgettext@plt>
    d120:	mov	x2, x0
    d124:	mov	w1, w19
    d128:	mov	w0, #0x2                   	// #2
    d12c:	bl	a360 <error@plt>
    d130:	ldr	x19, [sp, #16]
    d134:	ldp	x29, x30, [sp], #32
    d138:	ret

000000000000d13c <running_setuid@@Base>:
    d13c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d140:	ldr	x0, [x0, #4064]
    d144:	ldr	w1, [x0]
    d148:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d14c:	ldr	x0, [x0, #3784]
    d150:	ldr	w0, [x0]
    d154:	cmp	w1, w0
    d158:	cset	w0, ne  // ne = any
    d15c:	ret

000000000000d160 <get_man_owner@@Base>:
    d160:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    d164:	ldr	x0, [x0, #1032]
    d168:	cbz	x0, d170 <get_man_owner@@Base+0x10>
    d16c:	ret
    d170:	stp	x29, x30, [sp, #-16]!
    d174:	mov	x29, sp
    d178:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d17c:	add	x0, x0, #0x9d8
    d180:	bl	a720 <getpwnam@plt>
    d184:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    d188:	str	x0, [x1, #1032]
    d18c:	cbz	x0, d198 <get_man_owner@@Base+0x38>
    d190:	ldp	x29, x30, [sp], #16
    d194:	ret
    d198:	mov	w2, #0x5                   	// #5
    d19c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    d1a0:	add	x1, x1, #0x9e0
    d1a4:	bl	ada0 <dcgettext@plt>
    d1a8:	adrp	x3, 2c000 <vasnprintf@@Base+0x1378>
    d1ac:	add	x3, x3, #0x9d8
    d1b0:	mov	x2, x0
    d1b4:	mov	w1, #0x0                   	// #0
    d1b8:	mov	w0, #0x1                   	// #1
    d1bc:	bl	a360 <error@plt>
    d1c0:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    d1c4:	ldr	x0, [x0, #1032]
    d1c8:	cbnz	x0, d190 <get_man_owner@@Base+0x30>
    d1cc:	adrp	x3, 2c000 <vasnprintf@@Base+0x1378>
    d1d0:	add	x3, x3, #0xac0
    d1d4:	mov	w2, #0x78                  	// #120
    d1d8:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    d1dc:	add	x1, x1, #0xa08
    d1e0:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d1e4:	add	x0, x0, #0xa18
    d1e8:	bl	aea0 <__assert_fail@plt>

000000000000d1ec <drop_effective_privs@@Base>:
    d1ec:	stp	x29, x30, [sp, #-16]!
    d1f0:	mov	x29, sp
    d1f4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d1f8:	ldr	x0, [x0, #3952]
    d1fc:	ldr	w1, [x0]
    d200:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d204:	ldr	x0, [x0, #4064]
    d208:	ldr	w0, [x0]
    d20c:	cmp	w1, w0
    d210:	b.ne	d23c <drop_effective_privs@@Base+0x50>  // b.any
    d214:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    d218:	add	x0, x0, #0x408
    d21c:	ldr	w1, [x0, #8]
    d220:	add	w1, w1, #0x1
    d224:	str	w1, [x0, #8]
    d228:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d22c:	add	x0, x0, #0xa40
    d230:	bl	a570 <debug@plt>
    d234:	ldp	x29, x30, [sp], #16
    d238:	ret
    d23c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d240:	add	x0, x0, #0xa28
    d244:	bl	a570 <debug@plt>
    d248:	bl	a680 <idpriv_temp_drop@plt>
    d24c:	cbnz	w0, d284 <drop_effective_privs@@Base+0x98>
    d250:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d254:	ldr	x0, [x0, #4064]
    d258:	ldr	w1, [x0]
    d25c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d260:	ldr	x0, [x0, #3952]
    d264:	str	w1, [x0]
    d268:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d26c:	ldr	x0, [x0, #3960]
    d270:	ldr	w1, [x0]
    d274:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d278:	ldr	x0, [x0, #3792]
    d27c:	str	w1, [x0]
    d280:	b	d214 <drop_effective_privs@@Base+0x28>
    d284:	bl	d0f8 <sandbox_free@@Base+0x14>
    d288:	b	d250 <drop_effective_privs@@Base+0x64>

000000000000d28c <init_security@@Base>:
    d28c:	stp	x29, x30, [sp, #-32]!
    d290:	mov	x29, sp
    d294:	str	x19, [sp, #16]
    d298:	bl	a4a0 <getuid@plt>
    d29c:	adrp	x19, 46000 <vasnprintf@@Base+0x1b378>
    d2a0:	ldr	x19, [x19, #4064]
    d2a4:	str	w0, [x19]
    d2a8:	bl	a3f0 <geteuid@plt>
    d2ac:	mov	w2, w0
    d2b0:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d2b4:	ldr	x0, [x0, #3784]
    d2b8:	str	w2, [x0]
    d2bc:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d2c0:	ldr	x0, [x0, #3952]
    d2c4:	str	w2, [x0]
    d2c8:	ldr	w1, [x19]
    d2cc:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d2d0:	add	x0, x0, #0xa58
    d2d4:	bl	a570 <debug@plt>
    d2d8:	bl	aa90 <getgid@plt>
    d2dc:	adrp	x19, 46000 <vasnprintf@@Base+0x1b378>
    d2e0:	ldr	x19, [x19, #3960]
    d2e4:	str	w0, [x19]
    d2e8:	bl	a3b0 <getegid@plt>
    d2ec:	mov	w2, w0
    d2f0:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d2f4:	ldr	x0, [x0, #3760]
    d2f8:	str	w2, [x0]
    d2fc:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d300:	ldr	x0, [x0, #3792]
    d304:	str	w2, [x0]
    d308:	ldr	w1, [x19]
    d30c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d310:	add	x0, x0, #0xa70
    d314:	bl	a570 <debug@plt>
    d318:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    d31c:	str	wzr, [x0, #1040]
    d320:	bl	a8c0 <drop_effective_privs@plt>
    d324:	ldr	x19, [sp, #16]
    d328:	ldp	x29, x30, [sp], #32
    d32c:	ret

000000000000d330 <regain_effective_privs@@Base>:
    d330:	stp	x29, x30, [sp, #-32]!
    d334:	mov	x29, sp
    d338:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    d33c:	ldr	w1, [x0, #1040]
    d340:	cbnz	w1, d36c <regain_effective_privs@@Base+0x3c>
    d344:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d348:	ldr	x0, [x0, #3952]
    d34c:	ldr	w1, [x0]
    d350:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d354:	ldr	x0, [x0, #3784]
    d358:	ldr	w0, [x0]
    d35c:	cmp	w1, w0
    d360:	b.ne	d39c <regain_effective_privs@@Base+0x6c>  // b.any
    d364:	ldp	x29, x30, [sp], #32
    d368:	ret
    d36c:	str	x19, [sp, #16]
    d370:	sub	w1, w1, #0x1
    d374:	adrp	x19, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    d378:	add	x19, x19, #0x408
    d37c:	str	w1, [x19, #8]
    d380:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d384:	add	x0, x0, #0xa88
    d388:	bl	a570 <debug@plt>
    d38c:	ldr	w0, [x19, #8]
    d390:	cbnz	w0, d3ec <regain_effective_privs@@Base+0xbc>
    d394:	ldr	x19, [sp, #16]
    d398:	b	d344 <regain_effective_privs@@Base+0x14>
    d39c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d3a0:	add	x0, x0, #0xaa0
    d3a4:	bl	a570 <debug@plt>
    d3a8:	bl	aca0 <idpriv_temp_restore@plt>
    d3ac:	cbnz	w0, d3e4 <regain_effective_privs@@Base+0xb4>
    d3b0:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d3b4:	ldr	x0, [x0, #3784]
    d3b8:	ldr	w1, [x0]
    d3bc:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d3c0:	ldr	x0, [x0, #3952]
    d3c4:	str	w1, [x0]
    d3c8:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d3cc:	ldr	x0, [x0, #3760]
    d3d0:	ldr	w1, [x0]
    d3d4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
    d3d8:	ldr	x0, [x0, #3792]
    d3dc:	str	w1, [x0]
    d3e0:	b	d364 <regain_effective_privs@@Base+0x34>
    d3e4:	bl	d0f8 <sandbox_free@@Base+0x14>
    d3e8:	b	d3b0 <regain_effective_privs@@Base+0x80>
    d3ec:	ldr	x19, [sp, #16]
    d3f0:	b	d364 <regain_effective_privs@@Base+0x34>

000000000000d3f4 <drop_privs@@Base>:
    d3f4:	stp	x29, x30, [sp, #-16]!
    d3f8:	mov	x29, sp
    d3fc:	bl	ac10 <idpriv_drop@plt>
    d400:	cbnz	w0, d40c <drop_privs@@Base+0x18>
    d404:	ldp	x29, x30, [sp], #16
    d408:	ret
    d40c:	bl	d0f8 <sandbox_free@@Base+0x14>
    d410:	b	d404 <drop_privs@@Base+0x10>

000000000000d414 <create_tempdir@@Base>:
    d414:	stp	x29, x30, [sp, #-32]!
    d418:	mov	x29, sp
    d41c:	stp	x19, x20, [sp, #16]
    d420:	mov	x20, x0
    d424:	bl	a4a0 <getuid@plt>
    d428:	mov	w19, w0
    d42c:	bl	a3f0 <geteuid@plt>
    d430:	cmp	w19, w0
    d434:	b.eq	d470 <create_tempdir@@Base+0x5c>  // b.none
    d438:	mov	w1, #0x2                   	// #2
    d43c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d440:	add	x0, x0, #0xad0
    d444:	bl	a950 <access@plt>
    d448:	cbz	w0, d4c8 <create_tempdir@@Base+0xb4>
    d44c:	mov	w1, #0x2                   	// #2
    d450:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d454:	add	x0, x0, #0xad0
    d458:	bl	a950 <access@plt>
    d45c:	adrp	x19, 2c000 <vasnprintf@@Base+0x1378>
    d460:	add	x19, x19, #0xad0
    d464:	cbz	w0, d4d0 <create_tempdir@@Base+0xbc>
    d468:	mov	x19, #0x0                   	// #0
    d46c:	b	d4f4 <create_tempdir@@Base+0xe0>
    d470:	bl	aa90 <getgid@plt>
    d474:	mov	w19, w0
    d478:	bl	a3b0 <getegid@plt>
    d47c:	cmp	w19, w0
    d480:	b.ne	d438 <create_tempdir@@Base+0x24>  // b.any
    d484:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d488:	add	x0, x0, #0xad8
    d48c:	bl	aed0 <getenv@plt>
    d490:	mov	x19, x0
    d494:	cbz	x0, d4a4 <create_tempdir@@Base+0x90>
    d498:	mov	w1, #0x2                   	// #2
    d49c:	bl	a950 <access@plt>
    d4a0:	cbz	w0, d4d0 <create_tempdir@@Base+0xbc>
    d4a4:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d4a8:	add	x0, x0, #0xae0
    d4ac:	bl	aed0 <getenv@plt>
    d4b0:	mov	x19, x0
    d4b4:	cbz	x0, d438 <create_tempdir@@Base+0x24>
    d4b8:	mov	w1, #0x2                   	// #2
    d4bc:	bl	a950 <access@plt>
    d4c0:	cbz	w0, d4d0 <create_tempdir@@Base+0xbc>
    d4c4:	b	d438 <create_tempdir@@Base+0x24>
    d4c8:	adrp	x19, 2c000 <vasnprintf@@Base+0x1378>
    d4cc:	add	x19, x19, #0xad0
    d4d0:	mov	x2, x20
    d4d4:	mov	x1, x19
    d4d8:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d4dc:	add	x0, x0, #0xae8
    d4e0:	bl	aac0 <xasprintf@plt>
    d4e4:	mov	x19, x0
    d4e8:	bl	a8e0 <mkdtemp@plt>
    d4ec:	cmp	x0, #0x0
    d4f0:	csel	x19, x19, x0, ne  // ne = any
    d4f4:	mov	x0, x19
    d4f8:	ldp	x19, x20, [sp, #16]
    d4fc:	ldp	x29, x30, [sp], #32
    d500:	ret

000000000000d504 <is_changed@@Base>:
    d504:	stp	x29, x30, [sp, #-304]!
    d508:	mov	x29, sp
    d50c:	stp	x19, x20, [sp, #16]
    d510:	str	x21, [sp, #32]
    d514:	mov	x19, x0
    d518:	mov	x21, x1
    d51c:	mov	x2, x1
    d520:	mov	x1, x0
    d524:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d528:	add	x0, x0, #0xaf8
    d52c:	bl	a570 <debug@plt>
    d530:	add	x2, sp, #0xb0
    d534:	mov	x1, x19
    d538:	mov	w0, #0x0                   	// #0
    d53c:	bl	aef0 <__xstat@plt>
    d540:	mov	w19, w0
    d544:	cmp	w0, #0x0
    d548:	cset	w20, ne  // ne = any
    d54c:	add	x2, sp, #0x30
    d550:	mov	x1, x21
    d554:	mov	w0, #0x0                   	// #0
    d558:	bl	aef0 <__xstat@plt>
    d55c:	cbz	w0, d57c <is_changed@@Base+0x78>
    d560:	orr	w20, w20, #0x2
    d564:	neg	w19, w20
    d568:	mov	w1, w19
    d56c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d570:	add	x0, x0, #0xb10
    d574:	bl	a570 <debug@plt>
    d578:	b	d5dc <is_changed@@Base+0xd8>
    d57c:	cbnz	w19, d564 <is_changed@@Base+0x60>
    d580:	ldr	x0, [sp, #224]
    d584:	cmp	x0, #0x0
    d588:	mov	w0, #0x2                   	// #2
    d58c:	csel	w19, w19, w0, ne  // ne = any
    d590:	orr	w0, w19, #0x4
    d594:	ldr	x1, [sp, #96]
    d598:	cmp	x1, #0x0
    d59c:	csel	w19, w0, w19, eq  // eq = none
    d5a0:	ldr	x2, [sp, #264]
    d5a4:	ldr	x0, [sp, #272]
    d5a8:	ldr	x1, [sp, #136]
    d5ac:	ldr	x3, [sp, #144]
    d5b0:	cmp	x2, x1
    d5b4:	b.lt	d5f0 <is_changed@@Base+0xec>  // b.tstop
    d5b8:	sub	w0, w0, w3
    d5bc:	csinc	w0, w0, wzr, le
    d5c0:	cmp	w0, #0x0
    d5c4:	cset	w0, ne  // ne = any
    d5c8:	orr	w19, w0, w19
    d5cc:	mov	w1, w19
    d5d0:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d5d4:	add	x0, x0, #0xb10
    d5d8:	bl	a570 <debug@plt>
    d5dc:	mov	w0, w19
    d5e0:	ldp	x19, x20, [sp, #16]
    d5e4:	ldr	x21, [sp, #32]
    d5e8:	ldp	x29, x30, [sp], #304
    d5ec:	ret
    d5f0:	mov	w0, #0xffffffff            	// #-1
    d5f4:	b	d5c0 <is_changed@@Base+0xbc>

000000000000d5f8 <is_directory@@Base>:
    d5f8:	stp	x29, x30, [sp, #-144]!
    d5fc:	mov	x29, sp
    d600:	add	x2, sp, #0x10
    d604:	mov	x1, x0
    d608:	mov	w0, #0x0                   	// #0
    d60c:	bl	aef0 <__xstat@plt>
    d610:	cbnz	w0, d61c <is_directory@@Base+0x24>
    d614:	ldr	w0, [sp, #32]
    d618:	ubfx	x0, x0, #14, #1
    d61c:	ldp	x29, x30, [sp], #144
    d620:	ret

000000000000d624 <escape_shell@@Base>:
    d624:	stp	x29, x30, [sp, #-64]!
    d628:	mov	x29, sp
    d62c:	stp	x21, x22, [sp, #32]
    d630:	stp	x23, x24, [sp, #48]
    d634:	mov	x21, x0
    d638:	cbz	x0, d6e0 <escape_shell@@Base+0xbc>
    d63c:	stp	x19, x20, [sp, #16]
    d640:	bl	a340 <strlen@plt>
    d644:	lsl	x0, x0, #1
    d648:	add	x0, x0, #0x1
    d64c:	bl	a710 <xmalloc@plt>
    d650:	mov	x23, x0
    d654:	ldrb	w20, [x21]
    d658:	cbz	w20, d6c0 <escape_shell@@Base+0x9c>
    d65c:	mov	x19, x0
    d660:	adrp	x22, 2c000 <vasnprintf@@Base+0x1378>
    d664:	add	x22, x22, #0xb18
    d668:	mov	w24, #0x5c                  	// #92
    d66c:	b	d67c <escape_shell@@Base+0x58>
    d670:	strb	w20, [x19], #1
    d674:	ldrb	w20, [x21, #1]!
    d678:	cbz	w20, d6c4 <escape_shell@@Base+0xa0>
    d67c:	and	w1, w20, #0xffffffdf
    d680:	sub	w1, w1, #0x41
    d684:	and	w1, w1, #0xff
    d688:	sub	w2, w20, #0x30
    d68c:	and	w2, w2, #0xff
    d690:	cmp	w1, #0x19
    d694:	ccmp	w2, #0x9, #0x0, hi  // hi = pmore
    d698:	b.ls	d670 <escape_shell@@Base+0x4c>  // b.plast
    d69c:	mov	w1, w20
    d6a0:	mov	x0, x22
    d6a4:	bl	ab60 <strchr@plt>
    d6a8:	cbnz	x0, d670 <escape_shell@@Base+0x4c>
    d6ac:	mov	x0, x19
    d6b0:	strb	w24, [x0], #2
    d6b4:	strb	w20, [x19, #1]
    d6b8:	mov	x19, x0
    d6bc:	b	d674 <escape_shell@@Base+0x50>
    d6c0:	mov	x19, x0
    d6c4:	strb	wzr, [x19]
    d6c8:	ldp	x19, x20, [sp, #16]
    d6cc:	mov	x0, x23
    d6d0:	ldp	x21, x22, [sp, #32]
    d6d4:	ldp	x23, x24, [sp, #48]
    d6d8:	ldp	x29, x30, [sp], #64
    d6dc:	ret
    d6e0:	mov	x23, x0
    d6e4:	b	d6cc <escape_shell@@Base+0xa8>

000000000000d6e8 <remove_directory@@Base>:
    d6e8:	stp	x29, x30, [sp, #-208]!
    d6ec:	mov	x29, sp
    d6f0:	stp	x23, x24, [sp, #48]
    d6f4:	mov	x23, x0
    d6f8:	mov	w24, w1
    d6fc:	bl	a4c0 <opendir@plt>
    d700:	cbz	x0, d858 <remove_directory@@Base+0x170>
    d704:	stp	x19, x20, [sp, #16]
    d708:	stp	x21, x22, [sp, #32]
    d70c:	str	x25, [sp, #64]
    d710:	mov	x20, x0
    d714:	adrp	x21, 2c000 <vasnprintf@@Base+0x1378>
    d718:	add	x21, x21, #0xb20
    d71c:	adrp	x22, 2c000 <vasnprintf@@Base+0x1378>
    d720:	add	x22, x22, #0xb28
    d724:	add	x25, sp, #0x50
    d728:	b	d768 <remove_directory@@Base+0x80>
    d72c:	mov	x0, x19
    d730:	bl	aa50 <free@plt>
    d734:	mov	x0, x20
    d738:	bl	a820 <closedir@plt>
    d73c:	mov	w0, #0xffffffff            	// #-1
    d740:	ldp	x19, x20, [sp, #16]
    d744:	ldp	x21, x22, [sp, #32]
    d748:	ldr	x25, [sp, #64]
    d74c:	b	d84c <remove_directory@@Base+0x164>
    d750:	ldr	w0, [sp, #96]
    d754:	and	w0, w0, #0xf000
    d758:	cmp	w0, #0x8, lsl #12
    d75c:	b.eq	d804 <remove_directory@@Base+0x11c>  // b.none
    d760:	mov	x0, x19
    d764:	bl	aa50 <free@plt>
    d768:	mov	x0, x20
    d76c:	bl	a7d0 <readdir@plt>
    d770:	cbz	x0, d828 <remove_directory@@Base+0x140>
    d774:	add	x19, x0, #0x13
    d778:	mov	x1, x21
    d77c:	mov	x0, x19
    d780:	bl	a9b0 <strcmp@plt>
    d784:	cbz	w0, d768 <remove_directory@@Base+0x80>
    d788:	mov	x1, x22
    d78c:	mov	x0, x19
    d790:	bl	a9b0 <strcmp@plt>
    d794:	cbz	w0, d768 <remove_directory@@Base+0x80>
    d798:	mov	x2, x19
    d79c:	mov	x1, x23
    d7a0:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d7a4:	add	x0, x0, #0x9b8
    d7a8:	bl	aac0 <xasprintf@plt>
    d7ac:	mov	x19, x0
    d7b0:	mov	x2, x25
    d7b4:	mov	x1, x0
    d7b8:	mov	w0, #0x0                   	// #0
    d7bc:	bl	aef0 <__xstat@plt>
    d7c0:	cmn	w0, #0x1
    d7c4:	b.eq	d72c <remove_directory@@Base+0x44>  // b.none
    d7c8:	cbz	w24, d750 <remove_directory@@Base+0x68>
    d7cc:	ldr	w0, [sp, #96]
    d7d0:	and	w0, w0, #0xf000
    d7d4:	cmp	w0, #0x4, lsl #12
    d7d8:	b.ne	d750 <remove_directory@@Base+0x68>  // b.any
    d7dc:	mov	w1, w24
    d7e0:	mov	x0, x19
    d7e4:	bl	d6e8 <remove_directory@@Base>
    d7e8:	cmn	w0, #0x1
    d7ec:	b.ne	d760 <remove_directory@@Base+0x78>  // b.any
    d7f0:	mov	x0, x19
    d7f4:	bl	aa50 <free@plt>
    d7f8:	mov	x0, x20
    d7fc:	bl	a820 <closedir@plt>
    d800:	b	d73c <remove_directory@@Base+0x54>
    d804:	mov	x0, x19
    d808:	bl	af50 <unlink@plt>
    d80c:	cmn	w0, #0x1
    d810:	b.ne	d760 <remove_directory@@Base+0x78>  // b.any
    d814:	mov	x0, x19
    d818:	bl	aa50 <free@plt>
    d81c:	mov	x0, x20
    d820:	bl	a820 <closedir@plt>
    d824:	b	d73c <remove_directory@@Base+0x54>
    d828:	mov	x0, x20
    d82c:	bl	a820 <closedir@plt>
    d830:	mov	x0, x23
    d834:	bl	a9e0 <rmdir@plt>
    d838:	cmn	w0, #0x1
    d83c:	csetm	w0, eq  // eq = none
    d840:	ldp	x19, x20, [sp, #16]
    d844:	ldp	x21, x22, [sp, #32]
    d848:	ldr	x25, [sp, #64]
    d84c:	ldp	x23, x24, [sp, #48]
    d850:	ldp	x29, x30, [sp], #208
    d854:	ret
    d858:	mov	w0, #0xffffffff            	// #-1
    d85c:	b	d84c <remove_directory@@Base+0x164>

000000000000d860 <trim_spaces@@Base>:
    d860:	stp	x29, x30, [sp, #-32]!
    d864:	mov	x29, sp
    d868:	str	x19, [sp, #16]
    d86c:	mov	x19, x0
    d870:	ldrb	w0, [x0]
    d874:	cmp	w0, #0x20
    d878:	b.ne	d888 <trim_spaces@@Base+0x28>  // b.any
    d87c:	ldrb	w0, [x19, #1]!
    d880:	cmp	w0, #0x20
    d884:	b.eq	d87c <trim_spaces@@Base+0x1c>  // b.none
    d888:	mov	x0, x19
    d88c:	bl	a340 <strlen@plt>
    d890:	mov	w1, w0
    d894:	cbz	w0, d8bc <trim_spaces@@Base+0x5c>
    d898:	sxtw	x2, w0
    d89c:	sub	x3, x19, #0x1
    d8a0:	mov	w1, w2
    d8a4:	ldrb	w0, [x3, x2]
    d8a8:	cmp	w0, #0x20
    d8ac:	b.ne	d8bc <trim_spaces@@Base+0x5c>  // b.any
    d8b0:	sub	x2, x2, #0x1
    d8b4:	mov	w1, w2
    d8b8:	cbnz	w2, d8a0 <trim_spaces@@Base+0x40>
    d8bc:	sxtw	x1, w1
    d8c0:	mov	x0, x19
    d8c4:	bl	acf0 <xstrndup@plt>
    d8c8:	ldr	x19, [sp, #16]
    d8cc:	ldp	x29, x30, [sp], #32
    d8d0:	ret

000000000000d8d4 <lang_dir@@Base>:
    d8d4:	stp	x29, x30, [sp, #-48]!
    d8d8:	mov	x29, sp
    d8dc:	stp	x19, x20, [sp, #16]
    d8e0:	str	x21, [sp, #32]
    d8e4:	mov	x19, x0
    d8e8:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
    d8ec:	add	x0, x0, #0xab8
    d8f0:	bl	a730 <xstrdup@plt>
    d8f4:	mov	x21, x0
    d8f8:	cbz	x19, d9b0 <lang_dir@@Base+0xdc>
    d8fc:	mov	x2, #0x4                   	// #4
    d900:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    d904:	add	x1, x1, #0xb30
    d908:	mov	x0, x19
    d90c:	bl	a6c0 <strncmp@plt>
    d910:	cbz	w0, d92c <lang_dir@@Base+0x58>
    d914:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    d918:	add	x1, x1, #0xb38
    d91c:	mov	x0, x19
    d920:	bl	ad70 <strstr@plt>
    d924:	add	x19, x0, #0x1
    d928:	cbz	x0, d9b0 <lang_dir@@Base+0xdc>
    d92c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    d930:	add	x1, x1, #0xb70
    d934:	add	x0, x19, #0x2
    d938:	bl	ad70 <strstr@plt>
    d93c:	mov	x20, x0
    d940:	cbz	x0, d9b0 <lang_dir@@Base+0xdc>
    d944:	ldrb	w0, [x20, #5]
    d948:	cmp	w0, #0x2f
    d94c:	b.ne	d9b0 <lang_dir@@Base+0xdc>  // b.any
    d950:	ldrb	w1, [x20, #4]
    d954:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d958:	add	x0, x0, #0xb40
    d95c:	bl	ab60 <strchr@plt>
    d960:	cbz	x0, d9b0 <lang_dir@@Base+0xdc>
    d964:	add	x0, x19, #0x3
    d968:	cmp	x20, x0
    d96c:	b.eq	d9c4 <lang_dir@@Base+0xf0>  // b.none
    d970:	add	x19, x19, #0x4
    d974:	mov	w1, #0x2f                  	// #47
    d978:	mov	x0, x19
    d97c:	bl	ab60 <strchr@plt>
    d980:	mov	x20, x0
    d984:	cbz	x0, d9b0 <lang_dir@@Base+0xdc>
    d988:	mov	x0, x21
    d98c:	bl	aa50 <free@plt>
    d990:	sub	x1, x20, x19
    d994:	mov	x0, x19
    d998:	bl	acf0 <xstrndup@plt>
    d99c:	mov	x21, x0
    d9a0:	mov	x1, x0
    d9a4:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d9a8:	add	x0, x0, #0xb50
    d9ac:	bl	a570 <debug@plt>
    d9b0:	mov	x0, x21
    d9b4:	ldp	x19, x20, [sp, #16]
    d9b8:	ldr	x21, [sp, #32]
    d9bc:	ldp	x29, x30, [sp], #48
    d9c0:	ret
    d9c4:	mov	x0, x21
    d9c8:	bl	aa50 <free@plt>
    d9cc:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    d9d0:	add	x0, x0, #0x7c0
    d9d4:	bl	a730 <xstrdup@plt>
    d9d8:	mov	x21, x0
    d9dc:	b	d9b0 <lang_dir@@Base+0xdc>

000000000000d9e0 <init_locale@@Base>:
    d9e0:	stp	x29, x30, [sp, #-32]!
    d9e4:	mov	x29, sp
    d9e8:	stp	x19, x20, [sp, #16]
    d9ec:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
    d9f0:	add	x1, x1, #0xab8
    d9f4:	mov	w0, #0x6                   	// #6
    d9f8:	bl	afd0 <setlocale@plt>
    d9fc:	cbz	x0, da58 <init_locale@@Base+0x78>
    da00:	mov	w2, #0x1                   	// #1
    da04:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
    da08:	add	x1, x1, #0xf78
    da0c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    da10:	add	x0, x0, #0xb78
    da14:	bl	a460 <setenv@plt>
    da18:	adrp	x20, 2c000 <vasnprintf@@Base+0x1378>
    da1c:	add	x20, x20, #0xbe8
    da20:	adrp	x19, 2c000 <vasnprintf@@Base+0x1378>
    da24:	add	x19, x19, #0xc00
    da28:	mov	x1, x20
    da2c:	mov	x0, x19
    da30:	bl	a6d0 <bindtextdomain@plt>
    da34:	mov	x1, x20
    da38:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    da3c:	add	x0, x0, #0xc08
    da40:	bl	a6d0 <bindtextdomain@plt>
    da44:	mov	x0, x19
    da48:	bl	a990 <textdomain@plt>
    da4c:	ldp	x19, x20, [sp, #16]
    da50:	ldp	x29, x30, [sp], #32
    da54:	ret
    da58:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    da5c:	add	x0, x0, #0xb78
    da60:	bl	aed0 <getenv@plt>
    da64:	cbnz	x0, da00 <init_locale@@Base+0x20>
    da68:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    da6c:	add	x0, x0, #0xb90
    da70:	bl	aed0 <getenv@plt>
    da74:	cbnz	x0, da00 <init_locale@@Base+0x20>
    da78:	adrp	x2, 2c000 <vasnprintf@@Base+0x1378>
    da7c:	add	x2, x2, #0xba8
    da80:	mov	w1, #0x0                   	// #0
    da84:	bl	a360 <error@plt>
    da88:	b	da00 <init_locale@@Base+0x20>

000000000000da8c <word_fnmatch@@Base>:
    da8c:	stp	x29, x30, [sp, #-64]!
    da90:	mov	x29, sp
    da94:	stp	x19, x20, [sp, #16]
    da98:	stp	x21, x22, [sp, #32]
    da9c:	stp	x23, x24, [sp, #48]
    daa0:	mov	x23, x0
    daa4:	mov	x0, x1
    daa8:	bl	a730 <xstrdup@plt>
    daac:	mov	x22, x0
    dab0:	ldrb	w19, [x0]
    dab4:	cbz	w19, db30 <word_fnmatch@@Base+0xa4>
    dab8:	bl	a9d0 <__ctype_b_loc@plt>
    dabc:	mov	x21, x0
    dac0:	mov	x20, x22
    dac4:	mov	x1, x22
    dac8:	mov	w24, #0x10                  	// #16
    dacc:	b	daf0 <word_fnmatch@@Base+0x64>
    dad0:	strb	wzr, [x20]
    dad4:	mov	w2, w24
    dad8:	mov	x0, x23
    dadc:	bl	abf0 <fnmatch@plt>
    dae0:	cbz	w0, db20 <word_fnmatch@@Base+0x94>
    dae4:	add	x1, x20, #0x1
    dae8:	ldrb	w19, [x20, #1]!
    daec:	cbz	w19, db30 <word_fnmatch@@Base+0xa4>
    daf0:	and	x3, x19, #0xff
    daf4:	ldr	x2, [x21]
    daf8:	ldrh	w2, [x2, x3, lsl #1]
    dafc:	and	w2, w2, #0x400
    db00:	cmp	w19, #0x5f
    db04:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    db08:	b.ne	dae8 <word_fnmatch@@Base+0x5c>  // b.any
    db0c:	add	x0, x1, #0x1
    db10:	cmp	x0, x20
    db14:	b.cc	dad0 <word_fnmatch@@Base+0x44>  // b.lo, b.ul, b.last
    db18:	mov	x1, x0
    db1c:	b	dae8 <word_fnmatch@@Base+0x5c>
    db20:	mov	x0, x22
    db24:	bl	aa50 <free@plt>
    db28:	mov	w0, #0x1                   	// #1
    db2c:	b	db3c <word_fnmatch@@Base+0xb0>
    db30:	mov	x0, x22
    db34:	bl	aa50 <free@plt>
    db38:	mov	w0, #0x0                   	// #0
    db3c:	ldp	x19, x20, [sp, #16]
    db40:	ldp	x21, x22, [sp, #32]
    db44:	ldp	x23, x24, [sp, #48]
    db48:	ldp	x29, x30, [sp], #64
    db4c:	ret

000000000000db50 <xregcomp@@Base>:
    db50:	stp	x29, x30, [sp, #-64]!
    db54:	mov	x29, sp
    db58:	stp	x19, x20, [sp, #16]
    db5c:	stp	x21, x22, [sp, #32]
    db60:	mov	x20, x0
    db64:	mov	x21, x1
    db68:	bl	a5a0 <rpl_regcomp@plt>
    db6c:	cbnz	w0, db80 <xregcomp@@Base+0x30>
    db70:	ldp	x19, x20, [sp, #16]
    db74:	ldp	x21, x22, [sp, #32]
    db78:	ldp	x29, x30, [sp], #64
    db7c:	ret
    db80:	str	x23, [sp, #48]
    db84:	mov	w19, w0
    db88:	mov	x3, #0x0                   	// #0
    db8c:	mov	x2, #0x0                   	// #0
    db90:	mov	x1, x20
    db94:	bl	ac20 <rpl_regerror@plt>
    db98:	mov	x23, x0
    db9c:	bl	a710 <xmalloc@plt>
    dba0:	mov	x22, x0
    dba4:	mov	x3, x23
    dba8:	mov	x2, x0
    dbac:	mov	x1, x20
    dbb0:	mov	w0, w19
    dbb4:	bl	ac20 <rpl_regerror@plt>
    dbb8:	mov	w2, #0x5                   	// #5
    dbbc:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    dbc0:	add	x1, x1, #0xc18
    dbc4:	mov	x0, #0x0                   	// #0
    dbc8:	bl	ada0 <dcgettext@plt>
    dbcc:	mov	x4, x22
    dbd0:	mov	x3, x21
    dbd4:	mov	x2, x0
    dbd8:	mov	w1, #0x0                   	// #0
    dbdc:	mov	w0, #0x2                   	// #2
    dbe0:	bl	a360 <error@plt>
    dbe4:	ldr	x23, [sp, #48]
    dbe8:	b	db70 <xregcomp@@Base+0x20>

000000000000dbec <areadlink_with_size@@Base>:
    dbec:	stp	x29, x30, [sp, #-224]!
    dbf0:	mov	x29, sp
    dbf4:	stp	x19, x20, [sp, #16]
    dbf8:	stp	x21, x22, [sp, #32]
    dbfc:	stp	x23, x24, [sp, #48]
    dc00:	stp	x25, x26, [sp, #64]
    dc04:	str	x27, [sp, #80]
    dc08:	mov	x24, x0
    dc0c:	mov	x23, x1
    dc10:	mov	x19, #0x80                  	// #128
    dc14:	cbz	x1, dc24 <areadlink_with_size@@Base+0x38>
    dc18:	cmp	x1, #0x401
    dc1c:	mov	x19, #0x401                 	// #1025
    dc20:	csinc	x19, x19, x1, cs  // cs = hs, nlast
    dc24:	add	x26, sp, #0x60
    dc28:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
    dc2c:	mov	x27, #0x7ffffffffffffffe    	// #9223372036854775806
    dc30:	b	dc70 <areadlink_with_size@@Base+0x84>
    dc34:	mov	x22, #0x0                   	// #0
    dc38:	mov	x21, x26
    dc3c:	mov	x2, x19
    dc40:	mov	x1, x21
    dc44:	mov	x0, x24
    dc48:	bl	a470 <readlink@plt>
    dc4c:	mov	x20, x0
    dc50:	tbnz	x0, #63, dc94 <areadlink_with_size@@Base+0xa8>
    dc54:	cmp	x19, x20
    dc58:	b.hi	dcb4 <areadlink_with_size@@Base+0xc8>  // b.pmore
    dc5c:	mov	x0, x22
    dc60:	bl	aa50 <free@plt>
    dc64:	cmp	x19, x25
    dc68:	b.hi	dd04 <areadlink_with_size@@Base+0x118>  // b.pmore
    dc6c:	lsl	x19, x19, #1
    dc70:	cmp	x19, #0x80
    dc74:	ccmp	x23, #0x0, #0x0, eq  // eq = none
    dc78:	b.eq	dc34 <areadlink_with_size@@Base+0x48>  // b.none
    dc7c:	mov	x0, x19
    dc80:	bl	a5f0 <malloc@plt>
    dc84:	mov	x21, x0
    dc88:	cbz	x0, dd44 <areadlink_with_size@@Base+0x158>
    dc8c:	mov	x22, x0
    dc90:	b	dc3c <areadlink_with_size@@Base+0x50>
    dc94:	bl	aeb0 <__errno_location@plt>
    dc98:	ldr	w0, [x0]
    dc9c:	cmp	w0, #0x22
    dca0:	b.eq	dc54 <areadlink_with_size@@Base+0x68>  // b.none
    dca4:	mov	x0, x22
    dca8:	bl	aa50 <free@plt>
    dcac:	mov	x22, #0x0                   	// #0
    dcb0:	b	dd24 <areadlink_with_size@@Base+0x138>
    dcb4:	strb	wzr, [x21, x20]
    dcb8:	cbz	x22, dcdc <areadlink_with_size@@Base+0xf0>
    dcbc:	add	x1, x20, #0x1
    dcc0:	cmp	x1, x19
    dcc4:	b.cs	dd24 <areadlink_with_size@@Base+0x138>  // b.hs, b.nlast
    dcc8:	mov	x0, x22
    dccc:	bl	a7e0 <realloc@plt>
    dcd0:	cmp	x0, #0x0
    dcd4:	csel	x22, x22, x0, eq  // eq = none
    dcd8:	b	dd24 <areadlink_with_size@@Base+0x138>
    dcdc:	add	x20, x20, #0x1
    dce0:	mov	x0, x20
    dce4:	bl	a5f0 <malloc@plt>
    dce8:	mov	x22, x0
    dcec:	cbz	x0, dd24 <areadlink_with_size@@Base+0x138>
    dcf0:	mov	x2, x20
    dcf4:	mov	x1, x21
    dcf8:	bl	a2c0 <memcpy@plt>
    dcfc:	mov	x22, x0
    dd00:	b	dd24 <areadlink_with_size@@Base+0x138>
    dd04:	cmp	x19, x27
    dd08:	b.hi	dd14 <areadlink_with_size@@Base+0x128>  // b.pmore
    dd0c:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
    dd10:	b	dc70 <areadlink_with_size@@Base+0x84>
    dd14:	bl	aeb0 <__errno_location@plt>
    dd18:	mov	w1, #0xc                   	// #12
    dd1c:	str	w1, [x0]
    dd20:	mov	x22, #0x0                   	// #0
    dd24:	mov	x0, x22
    dd28:	ldp	x19, x20, [sp, #16]
    dd2c:	ldp	x21, x22, [sp, #32]
    dd30:	ldp	x23, x24, [sp, #48]
    dd34:	ldp	x25, x26, [sp, #64]
    dd38:	ldr	x27, [sp, #80]
    dd3c:	ldp	x29, x30, [sp], #224
    dd40:	ret
    dd44:	mov	x22, x0
    dd48:	b	dd24 <areadlink_with_size@@Base+0x138>

000000000000dd4c <argp_make_fmtstream@@Base>:
    dd4c:	stp	x29, x30, [sp, #-64]!
    dd50:	mov	x29, sp
    dd54:	stp	x19, x20, [sp, #16]
    dd58:	stp	x21, x22, [sp, #32]
    dd5c:	str	x23, [sp, #48]
    dd60:	mov	x23, x0
    dd64:	mov	x22, x1
    dd68:	mov	x21, x2
    dd6c:	mov	x20, x3
    dd70:	mov	x0, #0x48                  	// #72
    dd74:	bl	a5f0 <malloc@plt>
    dd78:	mov	x19, x0
    dd7c:	cbz	x0, ddb8 <argp_make_fmtstream@@Base+0x6c>
    dd80:	str	x23, [x0]
    dd84:	str	x22, [x0, #8]
    dd88:	str	x21, [x0, #16]
    dd8c:	str	x20, [x0, #24]
    dd90:	str	xzr, [x0, #40]
    dd94:	str	xzr, [x0, #32]
    dd98:	mov	x0, #0xc8                  	// #200
    dd9c:	bl	a5f0 <malloc@plt>
    dda0:	mov	x20, x0
    dda4:	str	x0, [x19, #48]
    dda8:	cbz	x0, ddd0 <argp_make_fmtstream@@Base+0x84>
    ddac:	str	x0, [x19, #56]
    ddb0:	add	x20, x0, #0xc8
    ddb4:	str	x20, [x19, #64]
    ddb8:	mov	x0, x19
    ddbc:	ldp	x19, x20, [sp, #16]
    ddc0:	ldp	x21, x22, [sp, #32]
    ddc4:	ldr	x23, [sp, #48]
    ddc8:	ldp	x29, x30, [sp], #64
    ddcc:	ret
    ddd0:	mov	x0, x19
    ddd4:	bl	aa50 <free@plt>
    ddd8:	mov	x19, x20
    dddc:	b	ddb8 <argp_make_fmtstream@@Base+0x6c>

000000000000dde0 <_argp_fmtstream_update@@Base>:
    dde0:	stp	x29, x30, [sp, #-96]!
    dde4:	mov	x29, sp
    dde8:	stp	x19, x20, [sp, #16]
    ddec:	mov	x19, x0
    ddf0:	ldr	x20, [x0, #48]
    ddf4:	ldr	x0, [x0, #32]
    ddf8:	add	x20, x20, x0
    ddfc:	ldr	x2, [x19, #56]
    de00:	cmp	x20, x2
    de04:	b.cs	e294 <_argp_fmtstream_update@@Base+0x4b4>  // b.hs, b.nlast
    de08:	stp	x21, x22, [sp, #32]
    de0c:	stp	x23, x24, [sp, #48]
    de10:	stp	x25, x26, [sp, #64]
    de14:	stp	x27, x28, [sp, #80]
    de18:	mov	w28, #0xa                   	// #10
    de1c:	mov	w26, #0x20                  	// #32
    de20:	b	def4 <_argp_fmtstream_update@@Base+0x114>
    de24:	mov	x22, #0x0                   	// #0
    de28:	ldr	x0, [x19]
    de2c:	ldr	x1, [x0, #40]
    de30:	ldr	x2, [x0, #48]
    de34:	cmp	x1, x2
    de38:	b.cs	df4c <_argp_fmtstream_update@@Base+0x16c>  // b.hs, b.nlast
    de3c:	add	x2, x1, #0x1
    de40:	str	x2, [x0, #40]
    de44:	strb	w26, [x1]
    de48:	add	x22, x22, #0x1
    de4c:	cmp	x21, x22
    de50:	b.ne	de28 <_argp_fmtstream_update@@Base+0x48>  // b.any
    de54:	str	x21, [x19, #40]
    de58:	ldr	x24, [x19, #56]
    de5c:	sub	x25, x24, x20
    de60:	mov	x2, x25
    de64:	mov	w1, w28
    de68:	mov	x0, x20
    de6c:	bl	ac90 <memchr@plt>
    de70:	mov	x21, x0
    de74:	ldr	x0, [x19, #40]
    de78:	tbz	x0, #63, de80 <_argp_fmtstream_update@@Base+0xa0>
    de7c:	str	xzr, [x19, #40]
    de80:	cbz	x21, df58 <_argp_fmtstream_update@@Base+0x178>
    de84:	ldr	x0, [x19, #40]
    de88:	ldr	x23, [x19, #16]
    de8c:	sub	x1, x21, x20
    de90:	add	x1, x1, x0
    de94:	cmp	x1, x23
    de98:	b.lt	e004 <_argp_fmtstream_update@@Base+0x224>  // b.tstop
    de9c:	sub	x22, x23, #0x1
    dea0:	ldr	x27, [x19, #24]
    dea4:	tbz	x27, #63, df7c <_argp_fmtstream_update@@Base+0x19c>
    dea8:	cmp	x21, x24
    deac:	b.cs	e010 <_argp_fmtstream_update@@Base+0x230>  // b.hs, b.nlast
    deb0:	sub	x0, x22, x0
    deb4:	sub	x2, x24, x21
    deb8:	mov	x1, x21
    debc:	add	x0, x20, x0
    dec0:	bl	a2d0 <memmove@plt>
    dec4:	ldr	x0, [x19, #40]
    dec8:	sub	x22, x22, x0
    decc:	add	x22, x20, x22
    ded0:	sub	x21, x22, x21
    ded4:	ldr	x0, [x19, #56]
    ded8:	sub	x21, x0, x21
    dedc:	str	x21, [x19, #56]
    dee0:	str	xzr, [x19, #40]
    dee4:	add	x20, x20, x23
    dee8:	ldr	x2, [x19, #56]
    deec:	cmp	x2, x20
    def0:	b.ls	e284 <_argp_fmtstream_update@@Base+0x4a4>  // b.plast
    def4:	ldr	x0, [x19, #40]
    def8:	cbnz	x0, de58 <_argp_fmtstream_update@@Base+0x78>
    defc:	ldr	x21, [x19, #8]
    df00:	cbz	x21, e2b8 <_argp_fmtstream_update@@Base+0x4d8>
    df04:	add	x0, x2, x21
    df08:	ldr	x1, [x19, #64]
    df0c:	cmp	x1, x0
    df10:	b.ls	de24 <_argp_fmtstream_update@@Base+0x44>  // b.plast
    df14:	add	x22, x20, x21
    df18:	sub	x2, x2, x20
    df1c:	mov	x1, x20
    df20:	mov	x0, x22
    df24:	bl	a2d0 <memmove@plt>
    df28:	ldr	x0, [x19, #56]
    df2c:	add	x0, x0, x21
    df30:	str	x0, [x19, #56]
    df34:	mov	x2, x21
    df38:	mov	w1, #0x20                  	// #32
    df3c:	mov	x0, x20
    df40:	bl	a6f0 <memset@plt>
    df44:	mov	x20, x22
    df48:	b	de54 <_argp_fmtstream_update@@Base+0x74>
    df4c:	mov	w1, #0x20                  	// #32
    df50:	bl	a940 <__overflow@plt>
    df54:	b	de48 <_argp_fmtstream_update@@Base+0x68>
    df58:	ldr	x0, [x19, #40]
    df5c:	add	x0, x25, x0
    df60:	ldr	x22, [x19, #16]
    df64:	cmp	x0, x22
    df68:	b.cc	dfec <_argp_fmtstream_update@@Base+0x20c>  // b.lo, b.ul, b.last
    df6c:	sub	x22, x22, #0x1
    df70:	ldr	x27, [x19, #24]
    df74:	tbnz	x27, #63, e010 <_argp_fmtstream_update@@Base+0x230>
    df78:	mov	x21, x24
    df7c:	ldr	x0, [x19, #40]
    df80:	mov	x1, #0x1                   	// #1
    df84:	sub	x0, x1, x0
    df88:	add	x22, x0, x22
    df8c:	adds	x22, x20, x22
    df90:	b.cs	e2b0 <_argp_fmtstream_update@@Base+0x4d0>  // b.hs, b.nlast
    df94:	bl	a9d0 <__ctype_b_loc@plt>
    df98:	ldr	x2, [x0]
    df9c:	mov	x0, x22
    dfa0:	ldrb	w1, [x0]
    dfa4:	ldrh	w1, [x2, x1, lsl #1]
    dfa8:	tbnz	w1, #0, e03c <_argp_fmtstream_update@@Base+0x25c>
    dfac:	sub	x0, x0, #0x1
    dfb0:	cmp	x0, x20
    dfb4:	b.cs	dfa0 <_argp_fmtstream_update@@Base+0x1c0>  // b.hs, b.nlast
    dfb8:	add	x23, x0, #0x1
    dfbc:	cmp	x23, x20
    dfc0:	b.hi	e068 <_argp_fmtstream_update@@Base+0x288>  // b.pmore
    dfc4:	cmp	x21, x22
    dfc8:	b.hi	e0fc <_argp_fmtstream_update@@Base+0x31c>  // b.pmore
    dfcc:	b.eq	e120 <_argp_fmtstream_update@@Base+0x340>  // b.none
    dfd0:	bl	a9d0 <__ctype_b_loc@plt>
    dfd4:	ldr	x1, [x0]
    dfd8:	mov	x23, x22
    dfdc:	ldrb	w0, [x23, #1]!
    dfe0:	ldrh	w0, [x1, x0, lsl #1]
    dfe4:	tbnz	w0, #0, dfdc <_argp_fmtstream_update@@Base+0x1fc>
    dfe8:	b	e06c <_argp_fmtstream_update@@Base+0x28c>
    dfec:	str	x0, [x19, #40]
    dff0:	ldp	x21, x22, [sp, #32]
    dff4:	ldp	x23, x24, [sp, #48]
    dff8:	ldp	x25, x26, [sp, #64]
    dffc:	ldp	x27, x28, [sp, #80]
    e000:	b	e294 <_argp_fmtstream_update@@Base+0x4b4>
    e004:	str	xzr, [x19, #40]
    e008:	add	x20, x21, #0x1
    e00c:	b	dee8 <_argp_fmtstream_update@@Base+0x108>
    e010:	ldr	x0, [x19, #40]
    e014:	add	x25, x25, x0
    e018:	str	x25, [x19, #40]
    e01c:	sub	x25, x22, x25
    e020:	add	x24, x24, x25
    e024:	str	x24, [x19, #56]
    e028:	ldp	x21, x22, [sp, #32]
    e02c:	ldp	x23, x24, [sp, #48]
    e030:	ldp	x25, x26, [sp, #64]
    e034:	ldp	x27, x28, [sp, #80]
    e038:	b	e294 <_argp_fmtstream_update@@Base+0x4b4>
    e03c:	add	x23, x0, #0x1
    e040:	cmp	x23, x20
    e044:	b.ls	dfc4 <_argp_fmtstream_update@@Base+0x1e4>  // b.plast
    e048:	cmp	x20, x0
    e04c:	b.hi	e068 <_argp_fmtstream_update@@Base+0x288>  // b.pmore
    e050:	sub	x0, x0, #0x1
    e054:	cmp	x0, x20
    e058:	b.cc	e068 <_argp_fmtstream_update@@Base+0x288>  // b.lo, b.ul, b.last
    e05c:	ldrb	w1, [x0]
    e060:	ldrh	w1, [x2, x1, lsl #1]
    e064:	tbnz	w1, #0, e050 <_argp_fmtstream_update@@Base+0x270>
    e068:	add	x22, x0, #0x1
    e06c:	add	x0, x25, #0x1
    e070:	add	x0, x20, x0
    e074:	cmp	x23, x0
    e078:	b.eq	e12c <_argp_fmtstream_update@@Base+0x34c>  // b.none
    e07c:	add	x0, x22, #0x1
    e080:	sub	x0, x23, x0
    e084:	cmp	x0, x27
    e088:	b.ge	e13c <_argp_fmtstream_update@@Base+0x35c>  // b.tcont
    e08c:	cmp	x23, x24
    e090:	b.cs	e13c <_argp_fmtstream_update@@Base+0x35c>  // b.hs, b.nlast
    e094:	ldr	x0, [x19, #64]
    e098:	sub	x0, x0, x24
    e09c:	add	x1, x27, #0x1
    e0a0:	cmp	x0, x1
    e0a4:	b.gt	e1e4 <_argp_fmtstream_update@@Base+0x404>
    e0a8:	ldr	x0, [x19, #48]
    e0ac:	cmp	x0, x22
    e0b0:	b.cs	e0c4 <_argp_fmtstream_update@@Base+0x2e4>  // b.hs, b.nlast
    e0b4:	ldr	x3, [x19]
    e0b8:	sub	x2, x22, x0
    e0bc:	mov	x1, #0x1                   	// #1
    e0c0:	bl	a320 <fwrite_unlocked@plt>
    e0c4:	ldr	x0, [x19]
    e0c8:	ldr	x1, [x0, #40]
    e0cc:	ldr	x2, [x0, #48]
    e0d0:	cmp	x1, x2
    e0d4:	b.cs	e224 <_argp_fmtstream_update@@Base+0x444>  // b.hs, b.nlast
    e0d8:	add	x2, x1, #0x1
    e0dc:	str	x2, [x0, #40]
    e0e0:	mov	w0, #0xa                   	// #10
    e0e4:	strb	w0, [x1]
    e0e8:	ldr	x21, [x19, #48]
    e0ec:	sub	x20, x20, x21
    e0f0:	add	x25, x25, x20
    e0f4:	mov	x20, x21
    e0f8:	b	e14c <_argp_fmtstream_update@@Base+0x36c>
    e0fc:	add	x22, x22, #0x1
    e100:	cmp	x21, x22
    e104:	b.eq	e120 <_argp_fmtstream_update@@Base+0x340>  // b.none
    e108:	bl	a9d0 <__ctype_b_loc@plt>
    e10c:	ldrb	w1, [x22]
    e110:	ldr	x0, [x0]
    e114:	ldrh	w0, [x0, x1, lsl #1]
    e118:	tbz	w0, #0, e0fc <_argp_fmtstream_update@@Base+0x31c>
    e11c:	b	dfd0 <_argp_fmtstream_update@@Base+0x1f0>
    e120:	str	xzr, [x19, #40]
    e124:	add	x20, x21, #0x1
    e128:	b	dee8 <_argp_fmtstream_update@@Base+0x108>
    e12c:	ldr	x0, [x19, #64]
    e130:	sub	x0, x0, x22
    e134:	cmp	x0, x27
    e138:	b.le	e08c <_argp_fmtstream_update@@Base+0x2ac>
    e13c:	mov	w0, #0xa                   	// #10
    e140:	strb	w0, [x22], #1
    e144:	mov	x21, x20
    e148:	mov	x20, x22
    e14c:	ldr	x1, [x19, #24]
    e150:	sub	x0, x23, x20
    e154:	cmp	x0, x1
    e158:	b.ge	e230 <_argp_fmtstream_update@@Base+0x450>  // b.tcont
    e15c:	add	x0, x25, #0x1
    e160:	add	x0, x21, x0
    e164:	cmp	x23, x0
    e168:	b.ne	e17c <_argp_fmtstream_update@@Base+0x39c>  // b.any
    e16c:	ldr	x0, [x19, #64]
    e170:	sub	x0, x0, x23
    e174:	cmp	x1, x0
    e178:	b.le	e230 <_argp_fmtstream_update@@Base+0x450>
    e17c:	mov	x22, #0x0                   	// #0
    e180:	cmp	x1, #0x0
    e184:	b.le	e1b8 <_argp_fmtstream_update@@Base+0x3d8>
    e188:	ldr	x0, [x19]
    e18c:	ldr	x1, [x0, #40]
    e190:	ldr	x2, [x0, #48]
    e194:	cmp	x1, x2
    e198:	b.cs	e260 <_argp_fmtstream_update@@Base+0x480>  // b.hs, b.nlast
    e19c:	add	x2, x1, #0x1
    e1a0:	str	x2, [x0, #40]
    e1a4:	strb	w26, [x1]
    e1a8:	add	x22, x22, #0x1
    e1ac:	ldr	x0, [x19, #24]
    e1b0:	cmp	x0, x22
    e1b4:	b.gt	e188 <_argp_fmtstream_update@@Base+0x3a8>
    e1b8:	cmp	x20, x23
    e1bc:	b.cc	e26c <_argp_fmtstream_update@@Base+0x48c>  // b.lo, b.ul, b.last
    e1c0:	sub	x23, x23, x21
    e1c4:	sub	x25, x25, x23
    e1c8:	add	x25, x20, x25
    e1cc:	str	x25, [x19, #56]
    e1d0:	ldr	x0, [x19, #24]
    e1d4:	cmp	x0, #0x0
    e1d8:	csinv	x0, x0, xzr, ne  // ne = any
    e1dc:	str	x0, [x19, #40]
    e1e0:	b	dee8 <_argp_fmtstream_update@@Base+0x108>
    e1e4:	sub	x24, x24, x23
    e1e8:	mov	x0, x1
    e1ec:	mov	x2, x24
    e1f0:	mov	x1, x23
    e1f4:	add	x0, x22, x0
    e1f8:	bl	a2d0 <memmove@plt>
    e1fc:	ldr	x23, [x19, #24]
    e200:	add	x23, x23, #0x1
    e204:	add	x23, x22, x23
    e208:	add	x24, x23, x24
    e20c:	sub	x25, x24, x20
    e210:	mov	w0, #0xa                   	// #10
    e214:	strb	w0, [x22], #1
    e218:	mov	x21, x20
    e21c:	mov	x20, x22
    e220:	b	e14c <_argp_fmtstream_update@@Base+0x36c>
    e224:	mov	w1, w28
    e228:	bl	a940 <__overflow@plt>
    e22c:	b	e0e8 <_argp_fmtstream_update@@Base+0x308>
    e230:	add	x0, x20, #0x1
    e234:	mvn	x3, x20
    e238:	cmp	x1, #0x0
    e23c:	b.le	e1b8 <_argp_fmtstream_update@@Base+0x3d8>
    e240:	mov	x20, x0
    e244:	sturb	w26, [x0, #-1]
    e248:	add	x0, x0, #0x1
    e24c:	add	x1, x3, x0
    e250:	ldr	x2, [x19, #24]
    e254:	cmp	x2, x1
    e258:	b.gt	e240 <_argp_fmtstream_update@@Base+0x460>
    e25c:	b	e1b8 <_argp_fmtstream_update@@Base+0x3d8>
    e260:	mov	w1, #0x20                  	// #32
    e264:	bl	a940 <__overflow@plt>
    e268:	b	e1a8 <_argp_fmtstream_update@@Base+0x3c8>
    e26c:	add	x2, x21, x25
    e270:	sub	x2, x2, x23
    e274:	mov	x1, x23
    e278:	mov	x0, x20
    e27c:	bl	a2d0 <memmove@plt>
    e280:	b	e1c0 <_argp_fmtstream_update@@Base+0x3e0>
    e284:	ldp	x21, x22, [sp, #32]
    e288:	ldp	x23, x24, [sp, #48]
    e28c:	ldp	x25, x26, [sp, #64]
    e290:	ldp	x27, x28, [sp, #80]
    e294:	ldr	x0, [x19, #56]
    e298:	ldr	x1, [x19, #48]
    e29c:	sub	x0, x0, x1
    e2a0:	str	x0, [x19, #32]
    e2a4:	ldp	x19, x20, [sp, #16]
    e2a8:	ldp	x29, x30, [sp], #96
    e2ac:	ret
    e2b0:	mov	x0, x22
    e2b4:	b	dfb8 <_argp_fmtstream_update@@Base+0x1d8>
    e2b8:	ldr	x24, [x19, #56]
    e2bc:	sub	x25, x24, x20
    e2c0:	mov	x2, x25
    e2c4:	mov	w1, w28
    e2c8:	mov	x0, x20
    e2cc:	bl	ac90 <memchr@plt>
    e2d0:	mov	x21, x0
    e2d4:	b	de80 <_argp_fmtstream_update@@Base+0xa0>

000000000000e2d8 <argp_fmtstream_free@@Base>:
    e2d8:	stp	x29, x30, [sp, #-32]!
    e2dc:	mov	x29, sp
    e2e0:	str	x19, [sp, #16]
    e2e4:	mov	x19, x0
    e2e8:	bl	a520 <_argp_fmtstream_update@plt>
    e2ec:	ldr	x2, [x19, #56]
    e2f0:	ldr	x0, [x19, #48]
    e2f4:	cmp	x2, x0
    e2f8:	b.ls	e30c <argp_fmtstream_free@@Base+0x34>  // b.plast
    e2fc:	ldr	x3, [x19]
    e300:	sub	x2, x2, x0
    e304:	mov	x1, #0x1                   	// #1
    e308:	bl	a320 <fwrite_unlocked@plt>
    e30c:	ldr	x0, [x19, #48]
    e310:	bl	aa50 <free@plt>
    e314:	mov	x0, x19
    e318:	bl	aa50 <free@plt>
    e31c:	ldr	x19, [sp, #16]
    e320:	ldp	x29, x30, [sp], #32
    e324:	ret

000000000000e328 <_argp_fmtstream_ensure@@Base>:
    e328:	stp	x29, x30, [sp, #-32]!
    e32c:	mov	x29, sp
    e330:	stp	x19, x20, [sp, #16]
    e334:	mov	x19, x0
    e338:	mov	x20, x1
    e33c:	ldr	x0, [x0, #64]
    e340:	ldr	x1, [x19, #56]
    e344:	sub	x0, x0, x1
    e348:	cmp	x0, x20
    e34c:	b.cc	e360 <_argp_fmtstream_ensure@@Base+0x38>  // b.lo, b.ul, b.last
    e350:	mov	w0, #0x1                   	// #1
    e354:	ldp	x19, x20, [sp, #16]
    e358:	ldp	x29, x30, [sp], #32
    e35c:	ret
    e360:	mov	x0, x19
    e364:	bl	a520 <_argp_fmtstream_update@plt>
    e368:	ldr	x0, [x19, #48]
    e36c:	ldr	x2, [x19, #56]
    e370:	ldr	x3, [x19]
    e374:	sub	x2, x2, x0
    e378:	mov	x1, #0x1                   	// #1
    e37c:	bl	a320 <fwrite_unlocked@plt>
    e380:	mov	x1, x0
    e384:	ldr	x2, [x19, #56]
    e388:	ldr	x0, [x19, #48]
    e38c:	sub	x3, x2, x0
    e390:	cmp	x3, x1
    e394:	b.ne	e3b8 <_argp_fmtstream_ensure@@Base+0x90>  // b.any
    e398:	str	x0, [x19, #56]
    e39c:	str	xzr, [x19, #32]
    e3a0:	ldr	x1, [x19, #64]
    e3a4:	sub	x1, x1, x0
    e3a8:	cmp	x1, x20
    e3ac:	b.cc	e3e0 <_argp_fmtstream_ensure@@Base+0xb8>  // b.lo, b.ul, b.last
    e3b0:	mov	w0, #0x1                   	// #1
    e3b4:	b	e354 <_argp_fmtstream_ensure@@Base+0x2c>
    e3b8:	sub	x2, x2, x1
    e3bc:	str	x2, [x19, #56]
    e3c0:	ldr	x3, [x19, #32]
    e3c4:	sub	x3, x3, x1
    e3c8:	str	x3, [x19, #32]
    e3cc:	sub	x2, x2, x0
    e3d0:	add	x1, x0, x1
    e3d4:	bl	a2d0 <memmove@plt>
    e3d8:	mov	w0, #0x0                   	// #0
    e3dc:	b	e354 <_argp_fmtstream_ensure@@Base+0x2c>
    e3e0:	adds	x20, x1, x20
    e3e4:	b.cc	e3fc <_argp_fmtstream_ensure@@Base+0xd4>  // b.lo, b.ul, b.last
    e3e8:	bl	aeb0 <__errno_location@plt>
    e3ec:	mov	w1, #0xc                   	// #12
    e3f0:	str	w1, [x0]
    e3f4:	mov	w0, #0x0                   	// #0
    e3f8:	b	e354 <_argp_fmtstream_ensure@@Base+0x2c>
    e3fc:	mov	x1, x20
    e400:	bl	a7e0 <realloc@plt>
    e404:	cbz	x0, e3e8 <_argp_fmtstream_ensure@@Base+0xc0>
    e408:	str	x0, [x19, #48]
    e40c:	add	x20, x0, x20
    e410:	str	x20, [x19, #64]
    e414:	str	x0, [x19, #56]
    e418:	mov	w0, #0x1                   	// #1
    e41c:	b	e354 <_argp_fmtstream_ensure@@Base+0x2c>

000000000000e420 <argp_fmtstream_printf@@Base>:
    e420:	stp	x29, x30, [sp, #-320]!
    e424:	mov	x29, sp
    e428:	stp	x19, x20, [sp, #16]
    e42c:	stp	x21, x22, [sp, #32]
    e430:	stp	x23, x24, [sp, #48]
    e434:	str	x25, [sp, #64]
    e438:	mov	x19, x0
    e43c:	mov	x21, x1
    e440:	str	x2, [sp, #272]
    e444:	str	x3, [sp, #280]
    e448:	str	x4, [sp, #288]
    e44c:	str	x5, [sp, #296]
    e450:	str	x6, [sp, #304]
    e454:	str	x7, [sp, #312]
    e458:	str	q0, [sp, #144]
    e45c:	str	q1, [sp, #160]
    e460:	str	q2, [sp, #176]
    e464:	str	q3, [sp, #192]
    e468:	str	q4, [sp, #208]
    e46c:	str	q5, [sp, #224]
    e470:	str	q6, [sp, #240]
    e474:	str	q7, [sp, #256]
    e478:	mov	x1, #0x96                  	// #150
    e47c:	add	x24, sp, #0x110
    e480:	mov	w23, #0xffffffd0            	// #-48
    e484:	mov	w22, #0xffffff80            	// #-128
    e488:	add	x20, sp, #0x50
    e48c:	mov	x0, x19
    e490:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e494:	cbz	w0, e4f4 <argp_fmtstream_printf@@Base+0xd4>
    e498:	add	x0, sp, #0x140
    e49c:	str	x0, [sp, #112]
    e4a0:	str	x0, [sp, #120]
    e4a4:	str	x24, [sp, #128]
    e4a8:	str	w23, [sp, #136]
    e4ac:	str	w22, [sp, #140]
    e4b0:	ldr	x0, [x19, #56]
    e4b4:	ldr	x25, [x19, #64]
    e4b8:	sub	x25, x25, x0
    e4bc:	ldp	x2, x3, [sp, #112]
    e4c0:	stp	x2, x3, [x20]
    e4c4:	ldp	x2, x3, [sp, #128]
    e4c8:	stp	x2, x3, [x20, #16]
    e4cc:	mov	x3, x20
    e4d0:	mov	x2, x21
    e4d4:	mov	x1, x25
    e4d8:	bl	adc0 <vsnprintf@plt>
    e4dc:	sxtw	x1, w0
    e4e0:	cmp	x25, w0, sxtw
    e4e4:	b.hi	e510 <argp_fmtstream_printf@@Base+0xf0>  // b.pmore
    e4e8:	add	w0, w0, #0x1
    e4ec:	sxtw	x1, w0
    e4f0:	b	e48c <argp_fmtstream_printf@@Base+0x6c>
    e4f4:	mov	x0, #0xffffffffffffffff    	// #-1
    e4f8:	ldp	x19, x20, [sp, #16]
    e4fc:	ldp	x21, x22, [sp, #32]
    e500:	ldp	x23, x24, [sp, #48]
    e504:	ldr	x25, [sp, #64]
    e508:	ldp	x29, x30, [sp], #320
    e50c:	ret
    e510:	ldr	x2, [x19, #56]
    e514:	add	x1, x2, x1
    e518:	str	x1, [x19, #56]
    e51c:	sxtw	x0, w0
    e520:	b	e4f8 <argp_fmtstream_printf@@Base+0xd8>

000000000000e524 <argp_fmtstream_write@@Base>:
    e524:	stp	x29, x30, [sp, #-48]!
    e528:	mov	x29, sp
    e52c:	stp	x19, x20, [sp, #16]
    e530:	str	x21, [sp, #32]
    e534:	mov	x19, x0
    e538:	mov	x21, x1
    e53c:	mov	x20, x2
    e540:	ldr	x0, [x0, #56]
    e544:	add	x0, x0, x2
    e548:	ldr	x1, [x19, #64]
    e54c:	cmp	x1, x0
    e550:	b.cs	e56c <argp_fmtstream_write@@Base+0x48>  // b.hs, b.nlast
    e554:	mov	x1, x2
    e558:	mov	x0, x19
    e55c:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e560:	mov	w1, w0
    e564:	mov	x0, #0x0                   	// #0
    e568:	cbz	w1, e58c <argp_fmtstream_write@@Base+0x68>
    e56c:	mov	x2, x20
    e570:	mov	x1, x21
    e574:	ldr	x0, [x19, #56]
    e578:	bl	a2c0 <memcpy@plt>
    e57c:	ldr	x0, [x19, #56]
    e580:	add	x0, x0, x20
    e584:	str	x0, [x19, #56]
    e588:	mov	x0, x20
    e58c:	ldp	x19, x20, [sp, #16]
    e590:	ldr	x21, [sp, #32]
    e594:	ldp	x29, x30, [sp], #48
    e598:	ret

000000000000e59c <argp_fmtstream_puts@@Base>:
    e59c:	stp	x29, x30, [sp, #-48]!
    e5a0:	mov	x29, sp
    e5a4:	stp	x19, x20, [sp, #16]
    e5a8:	str	x21, [sp, #32]
    e5ac:	mov	x20, x0
    e5b0:	mov	x21, x1
    e5b4:	mov	x0, x1
    e5b8:	bl	a340 <strlen@plt>
    e5bc:	cbnz	x0, e5d4 <argp_fmtstream_puts@@Base+0x38>
    e5c0:	mov	w0, #0x0                   	// #0
    e5c4:	ldp	x19, x20, [sp, #16]
    e5c8:	ldr	x21, [sp, #32]
    e5cc:	ldp	x29, x30, [sp], #48
    e5d0:	ret
    e5d4:	mov	x19, x0
    e5d8:	ldr	x0, [x20, #56]
    e5dc:	add	x0, x0, x19
    e5e0:	ldr	x1, [x20, #64]
    e5e4:	cmp	x1, x0
    e5e8:	b.cs	e600 <argp_fmtstream_puts@@Base+0x64>  // b.hs, b.nlast
    e5ec:	mov	x1, x19
    e5f0:	mov	x0, x20
    e5f4:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e5f8:	mov	x1, #0x0                   	// #0
    e5fc:	cbz	w0, e620 <argp_fmtstream_puts@@Base+0x84>
    e600:	mov	x2, x19
    e604:	mov	x1, x21
    e608:	ldr	x0, [x20, #56]
    e60c:	bl	a2c0 <memcpy@plt>
    e610:	ldr	x0, [x20, #56]
    e614:	add	x0, x0, x19
    e618:	str	x0, [x20, #56]
    e61c:	mov	x1, x19
    e620:	cmp	x19, x1
    e624:	csetm	w0, ne  // ne = any
    e628:	b	e5c4 <argp_fmtstream_puts@@Base+0x28>

000000000000e62c <argp_fmtstream_putc@@Base>:
    e62c:	stp	x29, x30, [sp, #-32]!
    e630:	mov	x29, sp
    e634:	stp	x19, x20, [sp, #16]
    e638:	mov	x19, x0
    e63c:	mov	w20, w1
    e640:	ldr	x1, [x0, #56]
    e644:	ldr	x0, [x0, #64]
    e648:	cmp	x1, x0
    e64c:	b.cs	e670 <argp_fmtstream_putc@@Base+0x44>  // b.hs, b.nlast
    e650:	ldr	x0, [x19, #56]
    e654:	add	x1, x0, #0x1
    e658:	str	x1, [x19, #56]
    e65c:	strb	w20, [x0]
    e660:	and	w0, w20, #0xff
    e664:	ldp	x19, x20, [sp, #16]
    e668:	ldp	x29, x30, [sp], #32
    e66c:	ret
    e670:	mov	x1, #0x1                   	// #1
    e674:	mov	x0, x19
    e678:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e67c:	cbnz	w0, e650 <argp_fmtstream_putc@@Base+0x24>
    e680:	mov	w0, #0xffffffff            	// #-1
    e684:	b	e664 <argp_fmtstream_putc@@Base+0x38>

000000000000e688 <argp_fmtstream_set_lmargin@@Base>:
    e688:	stp	x29, x30, [sp, #-32]!
    e68c:	mov	x29, sp
    e690:	stp	x19, x20, [sp, #16]
    e694:	mov	x19, x0
    e698:	mov	x20, x1
    e69c:	ldr	x0, [x0, #56]
    e6a0:	ldr	x1, [x19, #48]
    e6a4:	sub	x0, x0, x1
    e6a8:	ldr	x1, [x19, #32]
    e6ac:	cmp	x0, x1
    e6b0:	b.hi	e6c8 <argp_fmtstream_set_lmargin@@Base+0x40>  // b.pmore
    e6b4:	ldr	x0, [x19, #8]
    e6b8:	str	x20, [x19, #8]
    e6bc:	ldp	x19, x20, [sp, #16]
    e6c0:	ldp	x29, x30, [sp], #32
    e6c4:	ret
    e6c8:	mov	x0, x19
    e6cc:	bl	a520 <_argp_fmtstream_update@plt>
    e6d0:	b	e6b4 <argp_fmtstream_set_lmargin@@Base+0x2c>

000000000000e6d4 <argp_fmtstream_set_rmargin@@Base>:
    e6d4:	stp	x29, x30, [sp, #-32]!
    e6d8:	mov	x29, sp
    e6dc:	stp	x19, x20, [sp, #16]
    e6e0:	mov	x19, x0
    e6e4:	mov	x20, x1
    e6e8:	ldr	x0, [x0, #56]
    e6ec:	ldr	x1, [x19, #48]
    e6f0:	sub	x0, x0, x1
    e6f4:	ldr	x1, [x19, #32]
    e6f8:	cmp	x0, x1
    e6fc:	b.hi	e714 <argp_fmtstream_set_rmargin@@Base+0x40>  // b.pmore
    e700:	ldr	x0, [x19, #16]
    e704:	str	x20, [x19, #16]
    e708:	ldp	x19, x20, [sp, #16]
    e70c:	ldp	x29, x30, [sp], #32
    e710:	ret
    e714:	mov	x0, x19
    e718:	bl	a520 <_argp_fmtstream_update@plt>
    e71c:	b	e700 <argp_fmtstream_set_rmargin@@Base+0x2c>

000000000000e720 <argp_fmtstream_set_wmargin@@Base>:
    e720:	stp	x29, x30, [sp, #-32]!
    e724:	mov	x29, sp
    e728:	stp	x19, x20, [sp, #16]
    e72c:	mov	x19, x0
    e730:	mov	x20, x1
    e734:	ldr	x0, [x0, #56]
    e738:	ldr	x1, [x19, #48]
    e73c:	sub	x0, x0, x1
    e740:	ldr	x1, [x19, #32]
    e744:	cmp	x0, x1
    e748:	b.hi	e760 <argp_fmtstream_set_wmargin@@Base+0x40>  // b.pmore
    e74c:	ldr	x0, [x19, #24]
    e750:	str	x20, [x19, #24]
    e754:	ldp	x19, x20, [sp, #16]
    e758:	ldp	x29, x30, [sp], #32
    e75c:	ret
    e760:	mov	x0, x19
    e764:	bl	a520 <_argp_fmtstream_update@plt>
    e768:	b	e74c <argp_fmtstream_set_wmargin@@Base+0x2c>

000000000000e76c <argp_fmtstream_point@@Base>:
    e76c:	stp	x29, x30, [sp, #-32]!
    e770:	mov	x29, sp
    e774:	str	x19, [sp, #16]
    e778:	mov	x19, x0
    e77c:	ldr	x0, [x0, #56]
    e780:	ldr	x1, [x19, #48]
    e784:	sub	x0, x0, x1
    e788:	ldr	x1, [x19, #32]
    e78c:	cmp	x0, x1
    e790:	b.hi	e7ac <argp_fmtstream_point@@Base+0x40>  // b.pmore
    e794:	ldr	x0, [x19, #40]
    e798:	cmp	x0, #0x0
    e79c:	csel	x0, x0, xzr, ge  // ge = tcont
    e7a0:	ldr	x19, [sp, #16]
    e7a4:	ldp	x29, x30, [sp], #32
    e7a8:	ret
    e7ac:	mov	x0, x19
    e7b0:	bl	a520 <_argp_fmtstream_update@plt>
    e7b4:	b	e794 <argp_fmtstream_point@@Base+0x28>
    e7b8:	ldr	x1, [x0]
    e7bc:	ldr	w0, [x0, #8]
    e7c0:	cbz	w0, e800 <argp_fmtstream_point@@Base+0x94>
    e7c4:	sub	w0, w0, #0x1
    e7c8:	add	x2, x0, #0x1
    e7cc:	add	x2, x2, x2, lsl #1
    e7d0:	add	x2, x1, x2, lsl #4
    e7d4:	b	e7e4 <argp_fmtstream_point@@Base+0x78>
    e7d8:	add	x1, x1, #0x30
    e7dc:	cmp	x1, x2
    e7e0:	b.eq	e7f8 <argp_fmtstream_point@@Base+0x8c>  // b.none
    e7e4:	ldr	x0, [x1]
    e7e8:	cbz	x0, e7d8 <argp_fmtstream_point@@Base+0x6c>
    e7ec:	ldr	w3, [x1, #24]
    e7f0:	tbnz	w3, #1, e7d8 <argp_fmtstream_point@@Base+0x6c>
    e7f4:	b	e7fc <argp_fmtstream_point@@Base+0x90>
    e7f8:	mov	x0, #0x0                   	// #0
    e7fc:	ret
    e800:	mov	x0, #0x0                   	// #0
    e804:	b	e7fc <argp_fmtstream_point@@Base+0x90>
    e808:	cmp	w0, w1
    e80c:	b.eq	e82c <argp_fmtstream_point@@Base+0xc0>  // b.none
    e810:	mvn	w3, w1
    e814:	lsr	w3, w3, #31
    e818:	sub	w2, w0, w1
    e81c:	sub	w1, w1, w0
    e820:	cmp	w3, w0, lsr #31
    e824:	csel	w0, w1, w2, eq  // eq = none
    e828:	ret
    e82c:	mov	w0, w2
    e830:	b	e828 <argp_fmtstream_point@@Base+0xbc>
    e834:	ldr	x2, [x0, #16]
    e838:	cbz	x2, e844 <argp_fmtstream_point@@Base+0xd8>
    e83c:	mov	w0, #0x0                   	// #0
    e840:	ret
    e844:	ldr	x2, [x1, #16]
    e848:	cbnz	x2, e83c <argp_fmtstream_point@@Base+0xd0>
    e84c:	ldr	w2, [x0, #24]
    e850:	ldr	w1, [x1, #24]
    e854:	orr	w1, w2, w1
    e858:	tbnz	w1, #4, e83c <argp_fmtstream_point@@Base+0xd0>
    e85c:	ldr	w1, [x0, #8]
    e860:	ldr	x0, [x3]
    e864:	add	x2, x0, #0x1
    e868:	str	x2, [x3]
    e86c:	strb	w1, [x0]
    e870:	b	e83c <argp_fmtstream_point@@Base+0xd0>
    e874:	stp	x29, x30, [sp, #-48]!
    e878:	mov	x29, sp
    e87c:	str	x21, [sp, #32]
    e880:	mov	x5, x0
    e884:	mov	x21, x1
    e888:	ldr	x1, [x0, #16]
    e88c:	cbz	x1, e8c4 <argp_fmtstream_point@@Base+0x158>
    e890:	stp	x19, x20, [sp, #16]
    e894:	mov	x20, x2
    e898:	mov	x0, x3
    e89c:	mov	x19, x4
    e8a0:	ldr	w2, [x5, #24]
    e8a4:	tbz	w2, #0, e8d0 <argp_fmtstream_point@@Base+0x164>
    e8a8:	mov	w2, #0x5                   	// #5
    e8ac:	bl	ada0 <dcgettext@plt>
    e8b0:	mov	x2, x0
    e8b4:	mov	x1, x20
    e8b8:	mov	x0, x19
    e8bc:	bl	a8f0 <argp_fmtstream_printf@plt>
    e8c0:	ldp	x19, x20, [sp, #16]
    e8c4:	ldr	x21, [sp, #32]
    e8c8:	ldp	x29, x30, [sp], #48
    e8cc:	ret
    e8d0:	mov	w2, #0x5                   	// #5
    e8d4:	bl	ada0 <dcgettext@plt>
    e8d8:	mov	x2, x0
    e8dc:	mov	x1, x21
    e8e0:	mov	x0, x19
    e8e4:	bl	a8f0 <argp_fmtstream_printf@plt>
    e8e8:	ldp	x19, x20, [sp, #16]
    e8ec:	b	e8c4 <argp_fmtstream_point@@Base+0x158>
    e8f0:	stp	x29, x30, [sp, #-32]!
    e8f4:	mov	x29, sp
    e8f8:	str	x19, [sp, #16]
    e8fc:	mov	x19, x0
    e900:	bl	a9d0 <__ctype_b_loc@plt>
    e904:	mov	x3, x0
    e908:	ldr	x1, [x19]
    e90c:	ldrb	w2, [x1]
    e910:	and	x4, x2, #0xff
    e914:	ldr	x0, [x3]
    e918:	ldrh	w0, [x0, x4, lsl #1]
    e91c:	tbz	w0, #13, e92c <argp_fmtstream_point@@Base+0x1c0>
    e920:	add	x1, x1, #0x1
    e924:	str	x1, [x19]
    e928:	b	e908 <argp_fmtstream_point@@Base+0x19c>
    e92c:	cmp	w2, #0x2d
    e930:	cset	w0, ne  // ne = any
    e934:	cbz	w2, e958 <argp_fmtstream_point@@Base+0x1ec>
    e938:	add	x1, x1, #0x1
    e93c:	and	x2, x2, #0xff
    e940:	ldr	x4, [x3]
    e944:	ldrh	w2, [x4, x2, lsl #1]
    e948:	tbnz	w2, #3, e958 <argp_fmtstream_point@@Base+0x1ec>
    e94c:	str	x1, [x19]
    e950:	ldrb	w2, [x1], #1
    e954:	cbnz	w2, e93c <argp_fmtstream_point@@Base+0x1d0>
    e958:	ldr	x19, [sp, #16]
    e95c:	ldp	x29, x30, [sp], #32
    e960:	ret
    e964:	stp	x29, x30, [sp, #-32]!
    e968:	mov	x29, sp
    e96c:	stp	x19, x20, [sp, #16]
    e970:	mov	x20, x0
    e974:	ldr	x19, [x0, #24]
    e978:	cbz	x19, e98c <argp_fmtstream_point@@Base+0x220>
    e97c:	mov	x0, x19
    e980:	ldr	x19, [x19, #40]
    e984:	bl	aa50 <free@plt>
    e988:	cbnz	x19, e97c <argp_fmtstream_point@@Base+0x210>
    e98c:	ldr	w0, [x20, #8]
    e990:	cbnz	w0, e9a8 <argp_fmtstream_point@@Base+0x23c>
    e994:	mov	x0, x20
    e998:	bl	aa50 <free@plt>
    e99c:	ldp	x19, x20, [sp, #16]
    e9a0:	ldp	x29, x30, [sp], #32
    e9a4:	ret
    e9a8:	ldr	x0, [x20]
    e9ac:	bl	aa50 <free@plt>
    e9b0:	ldr	x0, [x20, #16]
    e9b4:	bl	aa50 <free@plt>
    e9b8:	b	e994 <argp_fmtstream_point@@Base+0x228>
    e9bc:	stp	x29, x30, [sp, #-64]!
    e9c0:	mov	x29, sp
    e9c4:	stp	x21, x22, [sp, #32]
    e9c8:	mov	x21, x1
    e9cc:	ldr	x22, [x0]
    e9d0:	ldr	w1, [x0, #8]
    e9d4:	cbz	w1, ea7c <argp_fmtstream_point@@Base+0x310>
    e9d8:	stp	x19, x20, [sp, #16]
    e9dc:	str	x23, [sp, #48]
    e9e0:	sub	w0, w1, #0x1
    e9e4:	mov	w0, w0
    e9e8:	add	x0, x0, #0x1
    e9ec:	lsl	x23, x0, #3
    e9f0:	sub	x0, x23, x0
    e9f4:	add	x23, x22, x0, lsl #3
    e9f8:	b	ea48 <argp_fmtstream_point@@Base+0x2dc>
    e9fc:	add	x19, x19, #0x30
    ea00:	cmp	x19, x20
    ea04:	b.eq	ea3c <argp_fmtstream_point@@Base+0x2d0>  // b.none
    ea08:	ldr	x0, [x19]
    ea0c:	cbz	x0, e9fc <argp_fmtstream_point@@Base+0x290>
    ea10:	ldr	w1, [x19, #24]
    ea14:	tbnz	w1, #1, e9fc <argp_fmtstream_point@@Base+0x290>
    ea18:	mov	x1, x21
    ea1c:	bl	a9b0 <strcmp@plt>
    ea20:	cbnz	w0, e9fc <argp_fmtstream_point@@Base+0x290>
    ea24:	ldp	x19, x20, [sp, #16]
    ea28:	ldr	x23, [sp, #48]
    ea2c:	mov	x0, x22
    ea30:	ldp	x21, x22, [sp, #32]
    ea34:	ldp	x29, x30, [sp], #64
    ea38:	ret
    ea3c:	add	x22, x22, #0x38
    ea40:	cmp	x22, x23
    ea44:	b.eq	ea6c <argp_fmtstream_point@@Base+0x300>  // b.none
    ea48:	ldr	x19, [x22]
    ea4c:	ldr	w0, [x22, #8]
    ea50:	sub	w20, w0, #0x1
    ea54:	cbz	w0, ea3c <argp_fmtstream_point@@Base+0x2d0>
    ea58:	mov	w20, w20
    ea5c:	add	x20, x20, #0x1
    ea60:	add	x20, x20, x20, lsl #1
    ea64:	add	x20, x19, x20, lsl #4
    ea68:	b	ea08 <argp_fmtstream_point@@Base+0x29c>
    ea6c:	mov	x22, #0x0                   	// #0
    ea70:	ldp	x19, x20, [sp, #16]
    ea74:	ldr	x23, [sp, #48]
    ea78:	b	ea2c <argp_fmtstream_point@@Base+0x2c0>
    ea7c:	mov	x22, #0x0                   	// #0
    ea80:	b	ea2c <argp_fmtstream_point@@Base+0x2c0>
    ea84:	stp	x29, x30, [sp, #-32]!
    ea88:	mov	x29, sp
    ea8c:	stp	x19, x20, [sp, #16]
    ea90:	ldr	x20, [x0, #32]
    ea94:	ldr	x0, [x0, #16]
    ea98:	mov	x19, #0x0                   	// #0
    ea9c:	cbz	x0, eab0 <argp_fmtstream_point@@Base+0x344>
    eaa0:	mov	w1, #0xa                   	// #10
    eaa4:	bl	ab60 <strchr@plt>
    eaa8:	cmp	x0, #0x0
    eaac:	cset	x19, ne  // ne = any
    eab0:	cbz	x20, eacc <argp_fmtstream_point@@Base+0x360>
    eab4:	ldr	x0, [x20]
    eab8:	cbz	x0, eacc <argp_fmtstream_point@@Base+0x360>
    eabc:	bl	ea84 <argp_fmtstream_point@@Base+0x318>
    eac0:	add	x19, x19, x0
    eac4:	ldr	x0, [x20, #32]!
    eac8:	cbnz	x0, eabc <argp_fmtstream_point@@Base+0x350>
    eacc:	mov	x0, x19
    ead0:	ldp	x19, x20, [sp, #16]
    ead4:	ldp	x29, x30, [sp], #32
    ead8:	ret
    eadc:	stp	x29, x30, [sp, #-48]!
    eae0:	mov	x29, sp
    eae4:	stp	x19, x20, [sp, #16]
    eae8:	mov	x19, x0
    eaec:	cbz	x2, eb2c <argp_fmtstream_point@@Base+0x3c0>
    eaf0:	str	x21, [sp, #32]
    eaf4:	mov	w21, w1
    eaf8:	mov	x20, x2
    eafc:	ldr	x0, [x2, #40]
    eb00:	cbz	x0, eb3c <argp_fmtstream_point@@Base+0x3d0>
    eb04:	mov	x1, x3
    eb08:	mov	x0, x2
    eb0c:	bl	ac60 <_argp_input@plt>
    eb10:	ldr	x3, [x20, #40]
    eb14:	mov	x2, x0
    eb18:	mov	x1, x19
    eb1c:	mov	w0, w21
    eb20:	blr	x3
    eb24:	mov	x19, x0
    eb28:	ldr	x21, [sp, #32]
    eb2c:	mov	x0, x19
    eb30:	ldp	x19, x20, [sp, #16]
    eb34:	ldp	x29, x30, [sp], #48
    eb38:	ret
    eb3c:	ldr	x21, [sp, #32]
    eb40:	b	eb2c <argp_fmtstream_point@@Base+0x3c0>
    eb44:	stp	x29, x30, [sp, #-112]!
    eb48:	mov	x29, sp
    eb4c:	stp	x19, x20, [sp, #16]
    eb50:	stp	x21, x22, [sp, #32]
    eb54:	stp	x23, x24, [sp, #48]
    eb58:	str	x2, [sp, #104]
    eb5c:	ldr	x19, [x0]
    eb60:	ldr	x24, [x0, #16]
    eb64:	ldr	w21, [x0, #8]
    eb68:	cbz	w21, ec20 <argp_fmtstream_point@@Base+0x4b4>
    eb6c:	stp	x25, x26, [sp, #64]
    eb70:	stp	x27, x28, [sp, #80]
    eb74:	mov	x27, x1
    eb78:	mov	x28, x3
    eb7c:	mov	x26, x19
    eb80:	mov	w25, #0x0                   	// #0
    eb84:	b	eb9c <argp_fmtstream_point@@Base+0x430>
    eb88:	mov	w22, w25
    eb8c:	add	x19, x19, #0x30
    eb90:	subs	w21, w21, #0x1
    eb94:	ccmp	w22, #0x0, #0x0, ne  // ne = any
    eb98:	b.ne	ec00 <argp_fmtstream_point@@Base+0x494>  // b.any
    eb9c:	ldr	w20, [x19, #24]
    eba0:	and	w22, w20, #0x8
    eba4:	tbnz	w20, #3, eb88 <argp_fmtstream_point@@Base+0x41c>
    eba8:	ldr	w23, [x19, #8]
    ebac:	sub	w0, w23, #0x1
    ebb0:	cmp	w0, #0xfe
    ebb4:	b.hi	eb8c <argp_fmtstream_point@@Base+0x420>  // b.pmore
    ebb8:	bl	a9d0 <__ctype_b_loc@plt>
    ebbc:	ldr	x0, [x0]
    ebc0:	ldrh	w0, [x0, w23, sxtw #1]
    ebc4:	tbz	w0, #14, eb8c <argp_fmtstream_point@@Base+0x420>
    ebc8:	ldrb	w0, [x24]
    ebcc:	cmp	w0, w23
    ebd0:	b.ne	eb8c <argp_fmtstream_point@@Base+0x420>  // b.any
    ebd4:	tst	x20, #0x4
    ebd8:	csel	x26, x26, x19, ne  // ne = any
    ebdc:	tbnz	w20, #1, ebf8 <argp_fmtstream_point@@Base+0x48c>
    ebe0:	mov	x3, x28
    ebe4:	ldr	x2, [sp, #104]
    ebe8:	mov	x1, x26
    ebec:	mov	x0, x19
    ebf0:	blr	x27
    ebf4:	mov	w22, w0
    ebf8:	add	x24, x24, #0x1
    ebfc:	b	eb8c <argp_fmtstream_point@@Base+0x420>
    ec00:	ldp	x25, x26, [sp, #64]
    ec04:	ldp	x27, x28, [sp, #80]
    ec08:	mov	w0, w22
    ec0c:	ldp	x19, x20, [sp, #16]
    ec10:	ldp	x21, x22, [sp, #32]
    ec14:	ldp	x23, x24, [sp, #48]
    ec18:	ldp	x29, x30, [sp], #112
    ec1c:	ret
    ec20:	mov	w22, #0x0                   	// #0
    ec24:	b	ec08 <argp_fmtstream_point@@Base+0x49c>
    ec28:	stp	x29, x30, [sp, #-128]!
    ec2c:	mov	x29, sp
    ec30:	stp	x19, x20, [sp, #16]
    ec34:	stp	x21, x22, [sp, #32]
    ec38:	stp	x23, x24, [sp, #48]
    ec3c:	stp	x25, x26, [sp, #64]
    ec40:	stp	x27, x28, [sp, #80]
    ec44:	ldr	w21, [x0, #8]
    ec48:	cbz	w21, ee38 <argp_fmtstream_point@@Base+0x6cc>
    ec4c:	mov	x20, x0
    ec50:	mov	x24, x1
    ec54:	ldr	x0, [x0, #16]
    ec58:	bl	a340 <strlen@plt>
    ec5c:	add	x0, x0, #0x10
    ec60:	and	x0, x0, #0xfffffffffffffff0
    ec64:	sub	sp, sp, x0
    ec68:	mov	x23, sp
    ec6c:	str	x23, [x29, #120]
    ec70:	ldr	x19, [x20]
    ec74:	sub	w21, w21, #0x1
    ec78:	add	x0, x21, #0x1
    ec7c:	lsl	x21, x0, #3
    ec80:	sub	x21, x21, x0
    ec84:	add	x21, x19, x21, lsl #3
    ec88:	add	x25, x29, #0x78
    ec8c:	adrp	x22, e000 <_argp_fmtstream_update@@Base+0x220>
    ec90:	add	x22, x22, #0x834
    ec94:	ldr	x1, [x19, #40]
    ec98:	mov	x3, x25
    ec9c:	ldr	x2, [x1, #48]
    eca0:	mov	x1, x22
    eca4:	mov	x0, x19
    eca8:	bl	eb44 <argp_fmtstream_point@@Base+0x3d8>
    ecac:	add	x19, x19, #0x38
    ecb0:	cmp	x19, x21
    ecb4:	b.ne	ec94 <argp_fmtstream_point@@Base+0x528>  // b.any
    ecb8:	ldr	x0, [x29, #120]
    ecbc:	cmp	x0, x23
    ecc0:	b.hi	ed48 <argp_fmtstream_point@@Base+0x5dc>  // b.pmore
    ecc4:	ldr	x19, [x20]
    ecc8:	ldr	w0, [x20, #8]
    eccc:	cbz	w0, ee38 <argp_fmtstream_point@@Base+0x6cc>
    ecd0:	sub	w0, w0, #0x1
    ecd4:	add	x0, x0, #0x1
    ecd8:	lsl	x21, x0, #3
    ecdc:	sub	x21, x21, x0
    ece0:	add	x21, x19, x21, lsl #3
    ece4:	adrp	x22, f000 <argp_fmtstream_point@@Base+0x894>
    ece8:	add	x22, x22, #0x30
    ecec:	ldr	x1, [x19, #40]
    ecf0:	mov	x3, x24
    ecf4:	ldr	x2, [x1, #48]
    ecf8:	mov	x1, x22
    ecfc:	mov	x0, x19
    ed00:	bl	eb44 <argp_fmtstream_point@@Base+0x3d8>
    ed04:	add	x19, x19, #0x38
    ed08:	cmp	x21, x19
    ed0c:	b.ne	ecec <argp_fmtstream_point@@Base+0x580>  // b.any
    ed10:	ldr	x23, [x20]
    ed14:	ldr	w0, [x20, #8]
    ed18:	cbz	w0, ee38 <argp_fmtstream_point@@Base+0x6cc>
    ed1c:	sub	w0, w0, #0x1
    ed20:	add	x0, x0, #0x1
    ed24:	lsl	x27, x0, #3
    ed28:	sub	x0, x27, x0
    ed2c:	add	x27, x23, x0, lsl #3
    ed30:	adrp	x28, 2c000 <vasnprintf@@Base+0x1378>
    ed34:	add	x28, x28, #0xc38
    ed38:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    ed3c:	add	x0, x0, #0xc48
    ed40:	str	x0, [x29, #104]
    ed44:	b	ee08 <argp_fmtstream_point@@Base+0x69c>
    ed48:	add	x1, x0, #0x1
    ed4c:	str	x1, [x29, #120]
    ed50:	strb	wzr, [x0]
    ed54:	mov	x2, x23
    ed58:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    ed5c:	add	x1, x1, #0xc30
    ed60:	mov	x0, x24
    ed64:	bl	a8f0 <argp_fmtstream_printf@plt>
    ed68:	b	ecc4 <argp_fmtstream_point@@Base+0x558>
    ed6c:	tbnz	w20, #4, ed9c <argp_fmtstream_point@@Base+0x630>
    ed70:	ldr	x1, [x22, #16]
    ed74:	cbnz	x1, edd4 <argp_fmtstream_point@@Base+0x668>
    ed78:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    ed7c:	add	x1, x1, #0xc58
    ed80:	mov	x0, x24
    ed84:	bl	a8f0 <argp_fmtstream_printf@plt>
    ed88:	b	ed9c <argp_fmtstream_point@@Base+0x630>
    ed8c:	ldr	x2, [x19]
    ed90:	ldr	x1, [x29, #104]
    ed94:	mov	x0, x24
    ed98:	bl	a8f0 <argp_fmtstream_printf@plt>
    ed9c:	add	x19, x19, #0x30
    eda0:	cmp	x21, x19
    eda4:	b.eq	edfc <argp_fmtstream_point@@Base+0x690>  // b.none
    eda8:	ldr	x2, [x19]
    edac:	cbz	x2, ed9c <argp_fmtstream_point@@Base+0x630>
    edb0:	ldr	w20, [x19, #24]
    edb4:	tst	x20, #0x4
    edb8:	csel	x22, x22, x19, ne  // ne = any
    edbc:	tbnz	w20, #1, ed9c <argp_fmtstream_point@@Base+0x630>
    edc0:	ldr	x1, [x19, #16]
    edc4:	ldr	w0, [x22, #24]
    edc8:	orr	w20, w20, w0
    edcc:	cbz	x1, ed6c <argp_fmtstream_point@@Base+0x600>
    edd0:	tbnz	w20, #4, ed9c <argp_fmtstream_point@@Base+0x630>
    edd4:	mov	w2, w26
    edd8:	mov	x0, x25
    eddc:	bl	ada0 <dcgettext@plt>
    ede0:	mov	x3, x0
    ede4:	tbz	w20, #0, ed8c <argp_fmtstream_point@@Base+0x620>
    ede8:	ldr	x2, [x19]
    edec:	mov	x1, x28
    edf0:	mov	x0, x24
    edf4:	bl	a8f0 <argp_fmtstream_printf@plt>
    edf8:	b	ed9c <argp_fmtstream_point@@Base+0x630>
    edfc:	add	x23, x23, #0x38
    ee00:	cmp	x23, x27
    ee04:	b.eq	ee38 <argp_fmtstream_point@@Base+0x6cc>  // b.none
    ee08:	ldr	x0, [x23, #40]
    ee0c:	ldr	x25, [x0, #48]
    ee10:	ldr	x19, [x23]
    ee14:	ldr	w0, [x23, #8]
    ee18:	cbz	w0, edfc <argp_fmtstream_point@@Base+0x690>
    ee1c:	sub	w0, w0, #0x1
    ee20:	add	x21, x0, #0x1
    ee24:	add	x21, x21, x21, lsl #1
    ee28:	add	x21, x19, x21, lsl #4
    ee2c:	mov	x22, x19
    ee30:	mov	w26, #0x5                   	// #5
    ee34:	b	eda8 <argp_fmtstream_point@@Base+0x63c>
    ee38:	mov	sp, x29
    ee3c:	ldp	x19, x20, [sp, #16]
    ee40:	ldp	x21, x22, [sp, #32]
    ee44:	ldp	x23, x24, [sp, #48]
    ee48:	ldp	x25, x26, [sp, #64]
    ee4c:	ldp	x27, x28, [sp, #80]
    ee50:	ldp	x29, x30, [sp], #128
    ee54:	ret
    ee58:	stp	x29, x30, [sp, #-48]!
    ee5c:	mov	x29, sp
    ee60:	stp	x19, x20, [sp, #16]
    ee64:	mov	x19, x0
    ee68:	mov	w20, w1
    ee6c:	ldr	x0, [x0, #56]
    ee70:	ldr	x1, [x19, #48]
    ee74:	sub	x0, x0, x1
    ee78:	ldr	x1, [x19, #32]
    ee7c:	cmp	x0, x1
    ee80:	b.hi	eeb0 <argp_fmtstream_point@@Base+0x744>  // b.pmore
    ee84:	ldr	x0, [x19, #40]
    ee88:	cmp	x0, #0x0
    ee8c:	csel	x0, x0, xzr, ge  // ge = tcont
    ee90:	sub	w0, w20, w0
    ee94:	sub	w20, w0, #0x1
    ee98:	cmp	w0, #0x0
    ee9c:	b.le	ef00 <argp_fmtstream_point@@Base+0x794>
    eea0:	stp	x21, x22, [sp, #32]
    eea4:	mov	w21, #0x20                  	// #32
    eea8:	mov	x22, #0x1                   	// #1
    eeac:	b	eed8 <argp_fmtstream_point@@Base+0x76c>
    eeb0:	mov	x0, x19
    eeb4:	bl	a520 <_argp_fmtstream_update@plt>
    eeb8:	b	ee84 <argp_fmtstream_point@@Base+0x718>
    eebc:	ldr	x0, [x19, #56]
    eec0:	add	x1, x0, #0x1
    eec4:	str	x1, [x19, #56]
    eec8:	strb	w21, [x0]
    eecc:	sub	w20, w20, #0x1
    eed0:	cmn	w20, #0x1
    eed4:	b.eq	eefc <argp_fmtstream_point@@Base+0x790>  // b.none
    eed8:	ldr	x1, [x19, #56]
    eedc:	ldr	x0, [x19, #64]
    eee0:	cmp	x1, x0
    eee4:	b.cc	eebc <argp_fmtstream_point@@Base+0x750>  // b.lo, b.ul, b.last
    eee8:	mov	x1, x22
    eeec:	mov	x0, x19
    eef0:	bl	ad80 <_argp_fmtstream_ensure@plt>
    eef4:	cbnz	w0, eebc <argp_fmtstream_point@@Base+0x750>
    eef8:	b	eecc <argp_fmtstream_point@@Base+0x760>
    eefc:	ldp	x21, x22, [sp, #32]
    ef00:	ldp	x19, x20, [sp, #16]
    ef04:	ldp	x29, x30, [sp], #48
    ef08:	ret
    ef0c:	stp	x29, x30, [sp, #-32]!
    ef10:	mov	x29, sp
    ef14:	stp	x19, x20, [sp, #16]
    ef18:	ldr	w1, [x0, #24]
    ef1c:	mov	w19, #0x0                   	// #0
    ef20:	tbnz	w1, #3, ef4c <argp_fmtstream_point@@Base+0x7e0>
    ef24:	and	w19, w1, #0x8
    ef28:	ldr	w20, [x0, #8]
    ef2c:	sub	w0, w20, #0x1
    ef30:	cmp	w0, #0xfe
    ef34:	b.hi	ef4c <argp_fmtstream_point@@Base+0x7e0>  // b.pmore
    ef38:	bl	a9d0 <__ctype_b_loc@plt>
    ef3c:	ldr	x0, [x0]
    ef40:	ldrh	w0, [x0, w20, sxtw #1]
    ef44:	tst	x0, #0x4000
    ef48:	csel	w19, w19, w20, eq  // eq = none
    ef4c:	mov	w0, w19
    ef50:	ldp	x19, x20, [sp, #16]
    ef54:	ldp	x29, x30, [sp], #32
    ef58:	ret
    ef5c:	stp	x29, x30, [sp, #-32]!
    ef60:	mov	x29, sp
    ef64:	stp	x19, x20, [sp, #16]
    ef68:	mov	x19, x0
    ef6c:	mov	x20, x1
    ef70:	ldr	x0, [x0, #56]
    ef74:	ldr	x1, [x19, #48]
    ef78:	sub	x0, x0, x1
    ef7c:	ldr	x1, [x19, #32]
    ef80:	cmp	x0, x1
    ef84:	b.hi	efd4 <argp_fmtstream_point@@Base+0x868>  // b.pmore
    ef88:	ldr	x0, [x19, #40]
    ef8c:	cmp	x0, #0x0
    ef90:	csel	x0, x0, xzr, ge  // ge = tcont
    ef94:	add	x0, x0, x20
    ef98:	ldr	x1, [x19, #16]
    ef9c:	cmp	x0, x1
    efa0:	b.cc	eff4 <argp_fmtstream_point@@Base+0x888>  // b.lo, b.ul, b.last
    efa4:	ldr	x1, [x19, #56]
    efa8:	ldr	x0, [x19, #64]
    efac:	cmp	x1, x0
    efb0:	b.cs	efe0 <argp_fmtstream_point@@Base+0x874>  // b.hs, b.nlast
    efb4:	ldr	x0, [x19, #56]
    efb8:	add	x1, x0, #0x1
    efbc:	str	x1, [x19, #56]
    efc0:	mov	w1, #0xa                   	// #10
    efc4:	strb	w1, [x0]
    efc8:	ldp	x19, x20, [sp, #16]
    efcc:	ldp	x29, x30, [sp], #32
    efd0:	ret
    efd4:	mov	x0, x19
    efd8:	bl	a520 <_argp_fmtstream_update@plt>
    efdc:	b	ef88 <argp_fmtstream_point@@Base+0x81c>
    efe0:	mov	x1, #0x1                   	// #1
    efe4:	mov	x0, x19
    efe8:	bl	ad80 <_argp_fmtstream_ensure@plt>
    efec:	cbnz	w0, efb4 <argp_fmtstream_point@@Base+0x848>
    eff0:	b	efc8 <argp_fmtstream_point@@Base+0x85c>
    eff4:	ldr	x1, [x19, #56]
    eff8:	ldr	x0, [x19, #64]
    effc:	cmp	x1, x0
    f000:	b.cs	f01c <argp_fmtstream_point@@Base+0x8b0>  // b.hs, b.nlast
    f004:	ldr	x0, [x19, #56]
    f008:	add	x1, x0, #0x1
    f00c:	str	x1, [x19, #56]
    f010:	mov	w1, #0x20                  	// #32
    f014:	strb	w1, [x0]
    f018:	b	efc8 <argp_fmtstream_point@@Base+0x85c>
    f01c:	mov	x1, #0x1                   	// #1
    f020:	mov	x0, x19
    f024:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f028:	cbnz	w0, f004 <argp_fmtstream_point@@Base+0x898>
    f02c:	b	efc8 <argp_fmtstream_point@@Base+0x85c>
    f030:	stp	x29, x30, [sp, #-48]!
    f034:	mov	x29, sp
    f038:	stp	x19, x20, [sp, #16]
    f03c:	stp	x21, x22, [sp, #32]
    f040:	mov	x19, x0
    f044:	mov	x0, x2
    f048:	mov	x21, x3
    f04c:	ldr	x4, [x19, #16]
    f050:	cbz	x4, f078 <argp_fmtstream_point@@Base+0x90c>
    f054:	ldr	w20, [x19, #24]
    f058:	ldr	w1, [x1, #24]
    f05c:	orr	w20, w20, w1
    f060:	tbz	w20, #4, f084 <argp_fmtstream_point@@Base+0x918>
    f064:	mov	w0, #0x0                   	// #0
    f068:	ldp	x19, x20, [sp, #16]
    f06c:	ldp	x21, x22, [sp, #32]
    f070:	ldp	x29, x30, [sp], #48
    f074:	ret
    f078:	ldr	x4, [x1, #16]
    f07c:	cbz	x4, f064 <argp_fmtstream_point@@Base+0x8f8>
    f080:	b	f054 <argp_fmtstream_point@@Base+0x8e8>
    f084:	mov	w2, #0x5                   	// #5
    f088:	mov	x1, x4
    f08c:	bl	ada0 <dcgettext@plt>
    f090:	mov	x22, x0
    f094:	tbz	w20, #0, f0b4 <argp_fmtstream_point@@Base+0x948>
    f098:	mov	x3, x0
    f09c:	ldr	w2, [x19, #8]
    f0a0:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    f0a4:	add	x1, x1, #0xc60
    f0a8:	mov	x0, x21
    f0ac:	bl	a8f0 <argp_fmtstream_printf@plt>
    f0b0:	b	f064 <argp_fmtstream_point@@Base+0x8f8>
    f0b4:	bl	a340 <strlen@plt>
    f0b8:	add	x1, x0, #0x6
    f0bc:	mov	x0, x21
    f0c0:	bl	ef5c <argp_fmtstream_point@@Base+0x7f0>
    f0c4:	mov	x3, x22
    f0c8:	ldr	w2, [x19, #8]
    f0cc:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    f0d0:	add	x1, x1, #0xc70
    f0d4:	mov	x0, x21
    f0d8:	bl	a8f0 <argp_fmtstream_printf@plt>
    f0dc:	b	f064 <argp_fmtstream_point@@Base+0x8f8>
    f0e0:	stp	x29, x30, [sp, #-112]!
    f0e4:	mov	x29, sp
    f0e8:	stp	x19, x20, [sp, #16]
    f0ec:	stp	x21, x22, [sp, #32]
    f0f0:	stp	x23, x24, [sp, #48]
    f0f4:	stp	x25, x26, [sp, #64]
    f0f8:	stp	x27, x28, [sp, #80]
    f0fc:	mov	x19, x0
    f100:	str	x1, [sp, #96]
    f104:	mov	x25, x2
    f108:	mov	w20, w3
    f10c:	mov	x21, x4
    f110:	ldr	x0, [x2]
    f114:	str	x0, [sp, #104]
    f118:	ldr	x24, [x19, #32]
    f11c:	ldr	x27, [x19, #16]
    f120:	cbz	x27, f138 <argp_fmtstream_point@@Base+0x9cc>
    f124:	mov	w2, #0x5                   	// #5
    f128:	mov	x1, x27
    f12c:	ldr	x0, [x19, #48]
    f130:	bl	ada0 <dcgettext@plt>
    f134:	mov	x27, x0
    f138:	ldr	x3, [sp, #96]
    f13c:	mov	x2, x19
    f140:	mov	w1, #0x6                   	// #6
    f144:	movk	w1, #0x200, lsl #16
    f148:	mov	x0, x27
    f14c:	bl	eadc <argp_fmtstream_point@@Base+0x370>
    f150:	mov	x26, x0
    f154:	cbz	x0, f2b8 <argp_fmtstream_point@@Base+0xb4c>
    f158:	mov	w1, #0xa                   	// #10
    f15c:	bl	ad60 <strchrnul@plt>
    f160:	mov	x19, x0
    f164:	ldrb	w0, [x0]
    f168:	cbz	w0, f1b8 <argp_fmtstream_point@@Base+0xa4c>
    f16c:	ldr	x0, [sp, #104]
    f170:	ldrb	w28, [x0]
    f174:	cbz	w28, f1b0 <argp_fmtstream_point@@Base+0xa44>
    f178:	mov	w22, #0x0                   	// #0
    f17c:	add	x23, x19, #0x1
    f180:	mov	w1, #0xa                   	// #10
    f184:	mov	x0, x23
    f188:	bl	ad60 <strchrnul@plt>
    f18c:	mov	x19, x0
    f190:	add	w22, w22, #0x1
    f194:	cmp	w22, w28
    f198:	b.ne	f17c <argp_fmtstream_point@@Base+0xa10>  // b.any
    f19c:	ldr	x0, [x25]
    f1a0:	add	x0, x0, #0x1
    f1a4:	str	x0, [x25]
    f1a8:	mov	w28, #0x1                   	// #1
    f1ac:	b	f1c0 <argp_fmtstream_point@@Base+0xa54>
    f1b0:	mov	x23, x26
    f1b4:	b	f19c <argp_fmtstream_point@@Base+0xa30>
    f1b8:	mov	x23, x26
    f1bc:	mov	w28, #0x0                   	// #0
    f1c0:	add	x1, x19, #0x1
    f1c4:	sub	x1, x1, x23
    f1c8:	mov	x0, x21
    f1cc:	bl	ef5c <argp_fmtstream_point@@Base+0x7f0>
    f1d0:	sub	x22, x19, x23
    f1d4:	ldr	x0, [x21, #56]
    f1d8:	add	x0, x0, x22
    f1dc:	ldr	x1, [x21, #64]
    f1e0:	cmp	x1, x0
    f1e4:	b.cs	f1f8 <argp_fmtstream_point@@Base+0xa8c>  // b.hs, b.nlast
    f1e8:	mov	x1, x22
    f1ec:	mov	x0, x21
    f1f0:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f1f4:	cbz	w0, f214 <argp_fmtstream_point@@Base+0xaa8>
    f1f8:	mov	x2, x22
    f1fc:	mov	x1, x23
    f200:	ldr	x0, [x21, #56]
    f204:	bl	a2c0 <memcpy@plt>
    f208:	ldr	x0, [x21, #56]
    f20c:	add	x22, x0, x22
    f210:	str	x22, [x21, #56]
    f214:	cmp	x27, x26
    f218:	b.ne	f298 <argp_fmtstream_point@@Base+0xb2c>  // b.any
    f21c:	cbz	x24, f24c <argp_fmtstream_point@@Base+0xae0>
    f220:	ldr	x0, [x24]
    f224:	cbz	x0, f24c <argp_fmtstream_point@@Base+0xae0>
    f228:	mov	x4, x21
    f22c:	mov	w3, w20
    f230:	mov	x2, x25
    f234:	ldr	x1, [sp, #96]
    f238:	bl	f0e0 <argp_fmtstream_point@@Base+0x974>
    f23c:	cmp	w0, #0x0
    f240:	cset	w20, eq  // eq = none
    f244:	ldr	x0, [x24, #32]!
    f248:	cbnz	x0, f228 <argp_fmtstream_point@@Base+0xabc>
    f24c:	cmp	w20, #0x0
    f250:	ccmp	w28, #0x0, #0x4, ne  // ne = any
    f254:	b.eq	f274 <argp_fmtstream_point@@Base+0xb08>  // b.none
    f258:	ldrb	w0, [x19]
    f25c:	cbz	w0, f2a4 <argp_fmtstream_point@@Base+0xb38>
    f260:	ldr	x1, [sp, #104]
    f264:	ldrb	w0, [x1]
    f268:	add	w0, w0, #0x1
    f26c:	strb	w0, [x1]
    f270:	mov	w20, #0x0                   	// #0
    f274:	cmp	w20, #0x0
    f278:	cset	w0, eq  // eq = none
    f27c:	ldp	x19, x20, [sp, #16]
    f280:	ldp	x21, x22, [sp, #32]
    f284:	ldp	x23, x24, [sp, #48]
    f288:	ldp	x25, x26, [sp, #64]
    f28c:	ldp	x27, x28, [sp, #80]
    f290:	ldp	x29, x30, [sp], #112
    f294:	ret
    f298:	mov	x0, x26
    f29c:	bl	aa50 <free@plt>
    f2a0:	b	f21c <argp_fmtstream_point@@Base+0xab0>
    f2a4:	ldr	x1, [sp, #104]
    f2a8:	ldrb	w0, [x1]
    f2ac:	cbz	w0, f274 <argp_fmtstream_point@@Base+0xb08>
    f2b0:	strb	wzr, [x1]
    f2b4:	b	f274 <argp_fmtstream_point@@Base+0xb08>
    f2b8:	mov	x19, x0
    f2bc:	mov	w28, #0x0                   	// #0
    f2c0:	cbnz	x24, f220 <argp_fmtstream_point@@Base+0xab4>
    f2c4:	b	f274 <argp_fmtstream_point@@Base+0xb08>
    f2c8:	stp	x29, x30, [sp, #-64]!
    f2cc:	mov	x29, sp
    f2d0:	stp	x19, x20, [sp, #16]
    f2d4:	stp	x21, x22, [sp, #32]
    f2d8:	mov	x21, x0
    f2dc:	mov	x20, x1
    f2e0:	mov	x19, x2
    f2e4:	cbz	x0, f4dc <argp_fmtstream_point@@Base+0xd70>
    f2e8:	mov	w2, #0x5                   	// #5
    f2ec:	mov	x1, x0
    f2f0:	ldr	x0, [x20, #48]
    f2f4:	bl	ada0 <dcgettext@plt>
    f2f8:	mov	x21, x0
    f2fc:	ldr	x3, [x19, #32]
    f300:	mov	x2, x20
    f304:	mov	w1, #0x3                   	// #3
    f308:	movk	w1, #0x200, lsl #16
    f30c:	bl	eadc <argp_fmtstream_point@@Base+0x370>
    f310:	mov	x20, x0
    f314:	cbz	x0, f424 <argp_fmtstream_point@@Base+0xcb8>
    f318:	ldrb	w0, [x20]
    f31c:	cbz	w0, f418 <argp_fmtstream_point@@Base+0xcac>
    f320:	str	x23, [sp, #48]
    f324:	ldr	x0, [x19, #16]
    f328:	ldr	x0, [x0]
    f32c:	cbz	x0, f358 <argp_fmtstream_point@@Base+0xbec>
    f330:	ldr	x22, [x19, #8]
    f334:	ldr	x1, [x22, #56]
    f338:	ldr	x0, [x22, #64]
    f33c:	cmp	x1, x0
    f340:	b.cs	f444 <argp_fmtstream_point@@Base+0xcd8>  // b.hs, b.nlast
    f344:	ldr	x0, [x22, #56]
    f348:	add	x1, x0, #0x1
    f34c:	str	x1, [x22, #56]
    f350:	mov	w1, #0xa                   	// #10
    f354:	strb	w1, [x0]
    f358:	adrp	x23, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    f35c:	add	x23, x23, #0x1d0
    f360:	ldr	w1, [x23, #24]
    f364:	ldr	x0, [x19, #8]
    f368:	bl	ee58 <argp_fmtstream_point@@Base+0x6ec>
    f36c:	ldr	x22, [x19, #8]
    f370:	ldrsw	x23, [x23, #24]
    f374:	ldr	x0, [x22, #56]
    f378:	ldr	x1, [x22, #48]
    f37c:	sub	x0, x0, x1
    f380:	ldr	x1, [x22, #32]
    f384:	cmp	x0, x1
    f388:	b.hi	f458 <argp_fmtstream_point@@Base+0xcec>  // b.pmore
    f38c:	str	x23, [x22, #8]
    f390:	ldr	x22, [x19, #8]
    f394:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    f398:	ldr	w23, [x0, #488]
    f39c:	ldr	x0, [x22, #56]
    f3a0:	ldr	x1, [x22, #48]
    f3a4:	sub	x0, x0, x1
    f3a8:	ldr	x1, [x22, #32]
    f3ac:	cmp	x0, x1
    f3b0:	b.hi	f464 <argp_fmtstream_point@@Base+0xcf8>  // b.pmore
    f3b4:	sxtw	x23, w23
    f3b8:	str	x23, [x22, #24]
    f3bc:	mov	x0, x20
    f3c0:	bl	a340 <strlen@plt>
    f3c4:	mov	x22, x0
    f3c8:	cbnz	x0, f470 <argp_fmtstream_point@@Base+0xd04>
    f3cc:	ldr	x22, [x19, #8]
    f3d0:	ldr	x0, [x22, #56]
    f3d4:	ldr	x1, [x22, #48]
    f3d8:	sub	x0, x0, x1
    f3dc:	ldr	x1, [x22, #32]
    f3e0:	cmp	x0, x1
    f3e4:	b.hi	f4b8 <argp_fmtstream_point@@Base+0xd4c>  // b.pmore
    f3e8:	str	xzr, [x22, #8]
    f3ec:	ldr	x22, [x19, #8]
    f3f0:	ldr	x1, [x22, #56]
    f3f4:	ldr	x0, [x22, #64]
    f3f8:	cmp	x1, x0
    f3fc:	b.cs	f4c4 <argp_fmtstream_point@@Base+0xd58>  // b.hs, b.nlast
    f400:	ldr	x0, [x22, #56]
    f404:	add	x1, x0, #0x1
    f408:	str	x1, [x22, #56]
    f40c:	mov	w1, #0xa                   	// #10
    f410:	strb	w1, [x0]
    f414:	ldr	x23, [sp, #48]
    f418:	ldr	x0, [x19, #16]
    f41c:	mov	w1, #0x1                   	// #1
    f420:	str	w1, [x0, #8]
    f424:	cmp	x20, x21
    f428:	b.eq	f434 <argp_fmtstream_point@@Base+0xcc8>  // b.none
    f42c:	mov	x0, x20
    f430:	bl	aa50 <free@plt>
    f434:	ldp	x19, x20, [sp, #16]
    f438:	ldp	x21, x22, [sp, #32]
    f43c:	ldp	x29, x30, [sp], #64
    f440:	ret
    f444:	mov	x1, #0x1                   	// #1
    f448:	mov	x0, x22
    f44c:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f450:	cbnz	w0, f344 <argp_fmtstream_point@@Base+0xbd8>
    f454:	b	f358 <argp_fmtstream_point@@Base+0xbec>
    f458:	mov	x0, x22
    f45c:	bl	a520 <_argp_fmtstream_update@plt>
    f460:	b	f38c <argp_fmtstream_point@@Base+0xc20>
    f464:	mov	x0, x22
    f468:	bl	a520 <_argp_fmtstream_update@plt>
    f46c:	b	f3b4 <argp_fmtstream_point@@Base+0xc48>
    f470:	ldr	x23, [x19, #8]
    f474:	ldr	x0, [x23, #56]
    f478:	add	x0, x0, x22
    f47c:	ldr	x1, [x23, #64]
    f480:	cmp	x1, x0
    f484:	b.cs	f498 <argp_fmtstream_point@@Base+0xd2c>  // b.hs, b.nlast
    f488:	mov	x1, x22
    f48c:	mov	x0, x23
    f490:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f494:	cbz	w0, f3cc <argp_fmtstream_point@@Base+0xc60>
    f498:	mov	x2, x22
    f49c:	mov	x1, x20
    f4a0:	ldr	x0, [x23, #56]
    f4a4:	bl	a2c0 <memcpy@plt>
    f4a8:	ldr	x0, [x23, #56]
    f4ac:	add	x22, x0, x22
    f4b0:	str	x22, [x23, #56]
    f4b4:	b	f3cc <argp_fmtstream_point@@Base+0xc60>
    f4b8:	mov	x0, x22
    f4bc:	bl	a520 <_argp_fmtstream_update@plt>
    f4c0:	b	f3e8 <argp_fmtstream_point@@Base+0xc7c>
    f4c4:	mov	x1, #0x1                   	// #1
    f4c8:	mov	x0, x22
    f4cc:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f4d0:	cbnz	w0, f400 <argp_fmtstream_point@@Base+0xc94>
    f4d4:	ldr	x23, [sp, #48]
    f4d8:	b	f418 <argp_fmtstream_point@@Base+0xcac>
    f4dc:	ldr	x3, [x2, #32]
    f4e0:	mov	x2, x1
    f4e4:	mov	w1, #0x3                   	// #3
    f4e8:	movk	w1, #0x200, lsl #16
    f4ec:	mov	x0, #0x0                   	// #0
    f4f0:	bl	eadc <argp_fmtstream_point@@Base+0x370>
    f4f4:	mov	x20, x0
    f4f8:	cbnz	x0, f318 <argp_fmtstream_point@@Base+0xbac>
    f4fc:	b	f434 <argp_fmtstream_point@@Base+0xcc8>
    f500:	stp	x29, x30, [sp, #-64]!
    f504:	mov	x29, sp
    f508:	stp	x19, x20, [sp, #16]
    f50c:	stp	x21, x22, [sp, #32]
    f510:	mov	w21, w0
    f514:	mov	x19, x1
    f518:	ldr	w1, [x1, #24]
    f51c:	cbz	w1, f640 <argp_fmtstream_point@@Base+0xed4>
    f520:	ldr	x1, [x19, #16]
    f524:	ldr	x22, [x1]
    f528:	ldr	x0, [x19]
    f52c:	ldr	x20, [x0, #32]
    f530:	ldr	w1, [x1, #8]
    f534:	cmp	w1, #0x0
    f538:	ccmp	x22, #0x0, #0x4, ne  // ne = any
    f53c:	b.ne	f5d8 <argp_fmtstream_point@@Base+0xe6c>  // b.any
    f540:	cbz	x20, f5b8 <argp_fmtstream_point@@Base+0xe4c>
    f544:	ldr	x0, [x20]
    f548:	cbz	x0, f5b8 <argp_fmtstream_point@@Base+0xe4c>
    f54c:	ldrb	w1, [x0]
    f550:	cbz	w1, f5b8 <argp_fmtstream_point@@Base+0xe4c>
    f554:	cbz	x22, f580 <argp_fmtstream_point@@Base+0xe14>
    f558:	ldr	x1, [x22, #32]
    f55c:	cmp	x1, x20
    f560:	b.eq	f5b8 <argp_fmtstream_point@@Base+0xe4c>  // b.none
    f564:	cbz	x1, f580 <argp_fmtstream_point@@Base+0xe14>
    f568:	ldr	x1, [x1, #16]
    f56c:	cmp	x1, #0x0
    f570:	ccmp	x20, x1, #0x4, ne  // ne = any
    f574:	b.ne	f568 <argp_fmtstream_point@@Base+0xdfc>  // b.any
    f578:	cmp	x20, x1
    f57c:	b.eq	f5b8 <argp_fmtstream_point@@Base+0xe4c>  // b.none
    f580:	ldr	x1, [x19, #8]
    f584:	ldr	x22, [x1, #24]
    f588:	mov	x2, x19
    f58c:	ldr	x1, [x20, #24]
    f590:	bl	f2c8 <argp_fmtstream_point@@Base+0xb5c>
    f594:	ldr	x20, [x19, #8]
    f598:	ldr	x0, [x20, #56]
    f59c:	ldr	x1, [x20, #48]
    f5a0:	sub	x0, x0, x1
    f5a4:	ldr	x1, [x20, #32]
    f5a8:	cmp	x0, x1
    f5ac:	b.hi	f634 <argp_fmtstream_point@@Base+0xec8>  // b.pmore
    f5b0:	sxtw	x22, w22
    f5b4:	str	x22, [x20, #24]
    f5b8:	str	wzr, [x19, #24]
    f5bc:	mov	w1, w21
    f5c0:	ldr	x0, [x19, #8]
    f5c4:	bl	ee58 <argp_fmtstream_point@@Base+0x6ec>
    f5c8:	ldp	x19, x20, [sp, #16]
    f5cc:	ldp	x21, x22, [sp, #32]
    f5d0:	ldp	x29, x30, [sp], #64
    f5d4:	ret
    f5d8:	ldr	w1, [x0, #24]
    f5dc:	ldr	w0, [x22, #24]
    f5e0:	cmp	w1, w0
    f5e4:	b.eq	f540 <argp_fmtstream_point@@Base+0xdd4>  // b.none
    f5e8:	str	x23, [sp, #48]
    f5ec:	ldr	x23, [x19, #8]
    f5f0:	ldr	x1, [x23, #56]
    f5f4:	ldr	x0, [x23, #64]
    f5f8:	cmp	x1, x0
    f5fc:	b.cs	f61c <argp_fmtstream_point@@Base+0xeb0>  // b.hs, b.nlast
    f600:	ldr	x0, [x23, #56]
    f604:	add	x1, x0, #0x1
    f608:	str	x1, [x23, #56]
    f60c:	mov	w1, #0xa                   	// #10
    f610:	strb	w1, [x0]
    f614:	ldr	x23, [sp, #48]
    f618:	b	f540 <argp_fmtstream_point@@Base+0xdd4>
    f61c:	mov	x1, #0x1                   	// #1
    f620:	mov	x0, x23
    f624:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f628:	cbnz	w0, f600 <argp_fmtstream_point@@Base+0xe94>
    f62c:	ldr	x23, [sp, #48]
    f630:	b	f540 <argp_fmtstream_point@@Base+0xdd4>
    f634:	mov	x0, x20
    f638:	bl	a520 <_argp_fmtstream_update@plt>
    f63c:	b	f5b0 <argp_fmtstream_point@@Base+0xe44>
    f640:	ldr	x20, [x19, #8]
    f644:	ldr	x0, [x20, #56]
    f648:	add	x0, x0, #0x2
    f64c:	ldr	x1, [x20, #64]
    f650:	cmp	x1, x0
    f654:	b.cs	f668 <argp_fmtstream_point@@Base+0xefc>  // b.hs, b.nlast
    f658:	mov	x1, #0x2                   	// #2
    f65c:	mov	x0, x20
    f660:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f664:	cbz	w0, f5bc <argp_fmtstream_point@@Base+0xe50>
    f668:	ldr	x0, [x20, #56]
    f66c:	mov	w1, #0x202c                	// #8236
    f670:	strh	w1, [x0]
    f674:	ldr	x0, [x20, #56]
    f678:	add	x0, x0, #0x2
    f67c:	str	x0, [x20, #56]
    f680:	b	f5bc <argp_fmtstream_point@@Base+0xe50>
    f684:	stp	x29, x30, [sp, #-112]!
    f688:	mov	x29, sp
    f68c:	stp	x19, x20, [sp, #16]
    f690:	stp	x21, x22, [sp, #32]
    f694:	stp	x23, x24, [sp, #48]
    f698:	stp	x25, x26, [sp, #64]
    f69c:	stp	x27, x28, [sp, #80]
    f6a0:	mov	x21, x0
    f6a4:	str	x1, [sp, #96]
    f6a8:	mov	w25, w2
    f6ac:	mov	w26, w3
    f6b0:	mov	w27, w4
    f6b4:	mov	x19, x5
    f6b8:	ldr	x1, [x0, #24]
    f6bc:	cbz	x1, f71c <argp_fmtstream_point@@Base+0xfb0>
    f6c0:	mov	w2, #0x5                   	// #5
    f6c4:	ldr	x0, [x0, #48]
    f6c8:	bl	ada0 <dcgettext@plt>
    f6cc:	mov	x23, x0
    f6d0:	ldr	x22, [x21, #32]
    f6d4:	cbz	x0, f720 <argp_fmtstream_point@@Base+0xfb4>
    f6d8:	mov	w1, #0xb                   	// #11
    f6dc:	bl	ab60 <strchr@plt>
    f6e0:	cbz	w25, f7d0 <argp_fmtstream_point@@Base+0x1064>
    f6e4:	cmp	x0, #0x0
    f6e8:	cinc	x24, x0, ne  // ne = any
    f6ec:	ldr	x0, [x21, #40]
    f6f0:	cbz	x0, fb20 <argp_fmtstream_point@@Base+0x13b4>
    f6f4:	ldr	x1, [sp, #96]
    f6f8:	mov	x0, x21
    f6fc:	bl	ac60 <_argp_input@plt>
    f700:	str	x0, [sp, #104]
    f704:	ldr	x3, [x21, #40]
    f708:	mov	x23, x24
    f70c:	mov	x28, #0x0                   	// #0
    f710:	mov	w0, #0x2                   	// #2
    f714:	movk	w0, #0x200, lsl #16
    f718:	b	f764 <argp_fmtstream_point@@Base+0xff8>
    f71c:	ldr	x22, [x0, #32]
    f720:	ldr	x0, [x21, #40]
    f724:	mov	x23, #0x0                   	// #0
    f728:	mov	x24, #0x0                   	// #0
    f72c:	cbz	x0, fb24 <argp_fmtstream_point@@Base+0x13b8>
    f730:	ldr	x1, [sp, #96]
    f734:	mov	x0, x21
    f738:	bl	ac60 <_argp_input@plt>
    f73c:	str	x0, [sp, #104]
    f740:	ldr	x3, [x21, #40]
    f744:	mov	x28, #0x0                   	// #0
    f748:	mov	x23, #0x0                   	// #0
    f74c:	cmp	w25, #0x0
    f750:	mov	w0, #0x2                   	// #2
    f754:	movk	w0, #0x200, lsl #16
    f758:	mov	w1, #0x1                   	// #1
    f75c:	movk	w1, #0x200, lsl #16
    f760:	csel	w0, w0, w1, ne  // ne = any
    f764:	ldr	x2, [sp, #104]
    f768:	mov	x1, x23
    f76c:	blr	x3
    f770:	mov	x24, x0
    f774:	mov	w20, #0x0                   	// #0
    f778:	cbz	x0, f8a8 <argp_fmtstream_point@@Base+0x113c>
    f77c:	cbnz	w26, f820 <argp_fmtstream_point@@Base+0x10b4>
    f780:	cmp	x28, #0x0
    f784:	ccmp	x24, x23, #0x0, ne  // ne = any
    f788:	b.ne	f85c <argp_fmtstream_point@@Base+0x10f0>  // b.any
    f78c:	ldr	x0, [x19, #56]
    f790:	add	x0, x0, x28
    f794:	ldr	x1, [x19, #64]
    f798:	cmp	x1, x0
    f79c:	b.cs	f7b0 <argp_fmtstream_point@@Base+0x1044>  // b.hs, b.nlast
    f7a0:	mov	x1, x28
    f7a4:	mov	x0, x19
    f7a8:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f7ac:	cbz	w0, f86c <argp_fmtstream_point@@Base+0x1100>
    f7b0:	mov	x2, x28
    f7b4:	mov	x1, x23
    f7b8:	ldr	x0, [x19, #56]
    f7bc:	bl	a2c0 <memcpy@plt>
    f7c0:	ldr	x0, [x19, #56]
    f7c4:	add	x0, x0, x28
    f7c8:	str	x0, [x19, #56]
    f7cc:	b	f86c <argp_fmtstream_point@@Base+0x1100>
    f7d0:	cbz	x0, fb3c <argp_fmtstream_point@@Base+0x13d0>
    f7d4:	sub	x28, x0, x23
    f7d8:	ldr	x0, [x21, #40]
    f7dc:	cbz	x0, f814 <argp_fmtstream_point@@Base+0x10a8>
    f7e0:	cbz	x28, f7f4 <argp_fmtstream_point@@Base+0x1088>
    f7e4:	mov	x1, x28
    f7e8:	mov	x0, x23
    f7ec:	bl	ab30 <strndup@plt>
    f7f0:	mov	x23, x0
    f7f4:	ldr	x1, [sp, #96]
    f7f8:	mov	x0, x21
    f7fc:	bl	ac60 <_argp_input@plt>
    f800:	str	x0, [sp, #104]
    f804:	ldr	x3, [x21, #40]
    f808:	mov	w0, #0x1                   	// #1
    f80c:	movk	w0, #0x200, lsl #16
    f810:	b	f764 <argp_fmtstream_point@@Base+0xff8>
    f814:	mov	x24, x23
    f818:	str	xzr, [sp, #104]
    f81c:	b	f77c <argp_fmtstream_point@@Base+0x1010>
    f820:	ldr	x1, [x19, #56]
    f824:	ldr	x0, [x19, #64]
    f828:	cmp	x1, x0
    f82c:	b.cs	f848 <argp_fmtstream_point@@Base+0x10dc>  // b.hs, b.nlast
    f830:	ldr	x0, [x19, #56]
    f834:	add	x1, x0, #0x1
    f838:	str	x1, [x19, #56]
    f83c:	mov	w1, #0xa                   	// #10
    f840:	strb	w1, [x0]
    f844:	b	f780 <argp_fmtstream_point@@Base+0x1014>
    f848:	mov	x1, #0x1                   	// #1
    f84c:	mov	x0, x19
    f850:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f854:	cbnz	w0, f830 <argp_fmtstream_point@@Base+0x10c4>
    f858:	b	f780 <argp_fmtstream_point@@Base+0x1014>
    f85c:	mov	x0, x24
    f860:	bl	a340 <strlen@plt>
    f864:	mov	x20, x0
    f868:	cbnz	x0, f9b8 <argp_fmtstream_point@@Base+0x124c>
    f86c:	ldr	x0, [x19, #56]
    f870:	ldr	x1, [x19, #48]
    f874:	sub	x0, x0, x1
    f878:	ldr	x1, [x19, #32]
    f87c:	cmp	x0, x1
    f880:	b.hi	f9fc <argp_fmtstream_point@@Base+0x1290>  // b.pmore
    f884:	ldr	x0, [x19, #40]
    f888:	cmp	x0, #0x0
    f88c:	csel	x0, x0, xzr, ge  // ge = tcont
    f890:	ldr	x1, [x19, #8]
    f894:	cmp	x1, x0
    f898:	b.cc	fa08 <argp_fmtstream_point@@Base+0x129c>  // b.lo, b.ul, b.last
    f89c:	mov	w20, #0x1                   	// #1
    f8a0:	cmp	x24, x23
    f8a4:	b.ne	fa44 <argp_fmtstream_point@@Base+0x12d8>  // b.any
    f8a8:	cmp	x23, #0x0
    f8ac:	ccmp	x28, #0x0, #0x4, ne  // ne = any
    f8b0:	b.eq	f8c4 <argp_fmtstream_point@@Base+0x1158>  // b.none
    f8b4:	ldr	x0, [x21, #40]
    f8b8:	cbz	x0, f940 <argp_fmtstream_point@@Base+0x11d4>
    f8bc:	mov	x0, x23
    f8c0:	bl	aa50 <free@plt>
    f8c4:	cbz	w25, f940 <argp_fmtstream_point@@Base+0x11d4>
    f8c8:	ldr	x3, [x21, #40]
    f8cc:	cbz	x3, f940 <argp_fmtstream_point@@Base+0x11d4>
    f8d0:	ldr	x2, [sp, #104]
    f8d4:	mov	x1, #0x0                   	// #0
    f8d8:	mov	w0, #0x4                   	// #4
    f8dc:	movk	w0, #0x200, lsl #16
    f8e0:	blr	x3
    f8e4:	mov	x21, x0
    f8e8:	cbz	x0, f940 <argp_fmtstream_point@@Base+0x11d4>
    f8ec:	orr	w20, w26, w20
    f8f0:	cbnz	w20, fa50 <argp_fmtstream_point@@Base+0x12e4>
    f8f4:	mov	x0, x21
    f8f8:	bl	a340 <strlen@plt>
    f8fc:	mov	x20, x0
    f900:	cbnz	x0, fa8c <argp_fmtstream_point@@Base+0x1320>
    f904:	mov	x0, x21
    f908:	bl	aa50 <free@plt>
    f90c:	ldr	x0, [x19, #56]
    f910:	ldr	x1, [x19, #48]
    f914:	sub	x0, x0, x1
    f918:	ldr	x1, [x19, #32]
    f91c:	cmp	x0, x1
    f920:	b.hi	fad0 <argp_fmtstream_point@@Base+0x1364>  // b.pmore
    f924:	ldr	x0, [x19, #40]
    f928:	cmp	x0, #0x0
    f92c:	csel	x0, x0, xzr, ge  // ge = tcont
    f930:	ldr	x1, [x19, #8]
    f934:	mov	w20, #0x1                   	// #1
    f938:	cmp	x1, x0
    f93c:	b.cc	fadc <argp_fmtstream_point@@Base+0x1370>  // b.lo, b.ul, b.last
    f940:	cbz	x22, f998 <argp_fmtstream_point@@Base+0x122c>
    f944:	ldr	x0, [x22]
    f948:	cbz	x0, f998 <argp_fmtstream_point@@Base+0x122c>
    f94c:	cmp	w27, #0x0
    f950:	cset	w21, eq  // eq = none
    f954:	cmp	w20, #0x0
    f958:	ccmp	w21, #0x0, #0x0, ne  // ne = any
    f95c:	b.eq	f998 <argp_fmtstream_point@@Base+0x122c>  // b.none
    f960:	orr	w1, w26, w20
    f964:	cmp	w1, #0x0
    f968:	mov	x5, x19
    f96c:	mov	w4, w27
    f970:	cset	w3, ne  // ne = any
    f974:	mov	w2, w25
    f978:	ldr	x1, [sp, #96]
    f97c:	bl	f684 <argp_fmtstream_point@@Base+0xf18>
    f980:	orr	w20, w20, w0
    f984:	ldr	x0, [x22, #32]!
    f988:	cbz	x0, f998 <argp_fmtstream_point@@Base+0x122c>
    f98c:	cmp	w20, #0x0
    f990:	ccmp	w21, #0x0, #0x0, ne  // ne = any
    f994:	b.ne	f960 <argp_fmtstream_point@@Base+0x11f4>  // b.any
    f998:	mov	w0, w20
    f99c:	ldp	x19, x20, [sp, #16]
    f9a0:	ldp	x21, x22, [sp, #32]
    f9a4:	ldp	x23, x24, [sp, #48]
    f9a8:	ldp	x25, x26, [sp, #64]
    f9ac:	ldp	x27, x28, [sp, #80]
    f9b0:	ldp	x29, x30, [sp], #112
    f9b4:	ret
    f9b8:	ldr	x0, [x19, #56]
    f9bc:	add	x0, x0, x20
    f9c0:	ldr	x1, [x19, #64]
    f9c4:	cmp	x1, x0
    f9c8:	b.cs	f9dc <argp_fmtstream_point@@Base+0x1270>  // b.hs, b.nlast
    f9cc:	mov	x1, x20
    f9d0:	mov	x0, x19
    f9d4:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f9d8:	cbz	w0, f86c <argp_fmtstream_point@@Base+0x1100>
    f9dc:	mov	x2, x20
    f9e0:	mov	x1, x24
    f9e4:	ldr	x0, [x19, #56]
    f9e8:	bl	a2c0 <memcpy@plt>
    f9ec:	ldr	x0, [x19, #56]
    f9f0:	add	x20, x0, x20
    f9f4:	str	x20, [x19, #56]
    f9f8:	b	f86c <argp_fmtstream_point@@Base+0x1100>
    f9fc:	mov	x0, x19
    fa00:	bl	a520 <_argp_fmtstream_update@plt>
    fa04:	b	f884 <argp_fmtstream_point@@Base+0x1118>
    fa08:	ldr	x1, [x19, #56]
    fa0c:	ldr	x0, [x19, #64]
    fa10:	cmp	x1, x0
    fa14:	b.cs	fa30 <argp_fmtstream_point@@Base+0x12c4>  // b.hs, b.nlast
    fa18:	ldr	x0, [x19, #56]
    fa1c:	add	x1, x0, #0x1
    fa20:	str	x1, [x19, #56]
    fa24:	mov	w1, #0xa                   	// #10
    fa28:	strb	w1, [x0]
    fa2c:	b	f89c <argp_fmtstream_point@@Base+0x1130>
    fa30:	mov	x1, #0x1                   	// #1
    fa34:	mov	x0, x19
    fa38:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fa3c:	cbnz	w0, fa18 <argp_fmtstream_point@@Base+0x12ac>
    fa40:	b	f89c <argp_fmtstream_point@@Base+0x1130>
    fa44:	mov	x0, x24
    fa48:	bl	aa50 <free@plt>
    fa4c:	b	f8a8 <argp_fmtstream_point@@Base+0x113c>
    fa50:	ldr	x1, [x19, #56]
    fa54:	ldr	x0, [x19, #64]
    fa58:	cmp	x1, x0
    fa5c:	b.cs	fa78 <argp_fmtstream_point@@Base+0x130c>  // b.hs, b.nlast
    fa60:	ldr	x0, [x19, #56]
    fa64:	add	x1, x0, #0x1
    fa68:	str	x1, [x19, #56]
    fa6c:	mov	w1, #0xa                   	// #10
    fa70:	strb	w1, [x0]
    fa74:	b	f8f4 <argp_fmtstream_point@@Base+0x1188>
    fa78:	mov	x1, #0x1                   	// #1
    fa7c:	mov	x0, x19
    fa80:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fa84:	cbnz	w0, fa60 <argp_fmtstream_point@@Base+0x12f4>
    fa88:	b	f8f4 <argp_fmtstream_point@@Base+0x1188>
    fa8c:	ldr	x0, [x19, #56]
    fa90:	add	x0, x0, x20
    fa94:	ldr	x1, [x19, #64]
    fa98:	cmp	x1, x0
    fa9c:	b.cs	fab0 <argp_fmtstream_point@@Base+0x1344>  // b.hs, b.nlast
    faa0:	mov	x1, x20
    faa4:	mov	x0, x19
    faa8:	bl	ad80 <_argp_fmtstream_ensure@plt>
    faac:	cbz	w0, f904 <argp_fmtstream_point@@Base+0x1198>
    fab0:	mov	x2, x20
    fab4:	mov	x1, x21
    fab8:	ldr	x0, [x19, #56]
    fabc:	bl	a2c0 <memcpy@plt>
    fac0:	ldr	x0, [x19, #56]
    fac4:	add	x20, x0, x20
    fac8:	str	x20, [x19, #56]
    facc:	b	f904 <argp_fmtstream_point@@Base+0x1198>
    fad0:	mov	x0, x19
    fad4:	bl	a520 <_argp_fmtstream_update@plt>
    fad8:	b	f924 <argp_fmtstream_point@@Base+0x11b8>
    fadc:	ldr	x1, [x19, #56]
    fae0:	ldr	x0, [x19, #64]
    fae4:	cmp	x1, x0
    fae8:	b.cs	fb08 <argp_fmtstream_point@@Base+0x139c>  // b.hs, b.nlast
    faec:	ldr	x0, [x19, #56]
    faf0:	add	x1, x0, #0x1
    faf4:	str	x1, [x19, #56]
    faf8:	mov	w1, #0xa                   	// #10
    fafc:	strb	w1, [x0]
    fb00:	mov	w20, #0x1                   	// #1
    fb04:	b	f940 <argp_fmtstream_point@@Base+0x11d4>
    fb08:	mov	x1, #0x1                   	// #1
    fb0c:	mov	x0, x19
    fb10:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fb14:	cbnz	w0, faec <argp_fmtstream_point@@Base+0x1380>
    fb18:	mov	w20, #0x1                   	// #1
    fb1c:	b	f940 <argp_fmtstream_point@@Base+0x11d4>
    fb20:	mov	x23, x24
    fb24:	mov	x28, #0x0                   	// #0
    fb28:	str	xzr, [sp, #104]
    fb2c:	cbnz	x24, f77c <argp_fmtstream_point@@Base+0x1010>
    fb30:	str	x24, [sp, #104]
    fb34:	mov	w20, #0x0                   	// #0
    fb38:	b	f8c4 <argp_fmtstream_point@@Base+0x1158>
    fb3c:	ldr	x0, [x21, #40]
    fb40:	mov	x24, x23
    fb44:	cbz	x0, fb24 <argp_fmtstream_point@@Base+0x13b8>
    fb48:	ldr	x1, [sp, #96]
    fb4c:	mov	x0, x21
    fb50:	bl	ac60 <_argp_input@plt>
    fb54:	str	x0, [sp, #104]
    fb58:	ldr	x3, [x21, #40]
    fb5c:	mov	x28, #0x0                   	// #0
    fb60:	mov	w0, #0x1                   	// #1
    fb64:	movk	w0, #0x200, lsl #16
    fb68:	b	f764 <argp_fmtstream_point@@Base+0xff8>
    fb6c:	stp	x29, x30, [sp, #-80]!
    fb70:	mov	x29, sp
    fb74:	stp	x19, x20, [sp, #16]
    fb78:	mov	x20, x0
    fb7c:	mov	x19, x1
    fb80:	ldr	w0, [x0, #24]
    fb84:	ldr	w1, [x1, #24]
    fb88:	ldr	x2, [x20, #32]
    fb8c:	ldr	x3, [x19, #32]
    fb90:	cmp	x2, x3
    fb94:	b.eq	fc4c <argp_fmtstream_point@@Base+0x14e0>  // b.none
    fb98:	cbz	x2, fc14 <argp_fmtstream_point@@Base+0x14a8>
    fb9c:	cbz	x3, fc30 <argp_fmtstream_point@@Base+0x14c4>
    fba0:	ldr	w0, [x2, #32]
    fba4:	ldr	w1, [x3, #32]
    fba8:	cmp	w1, w0
    fbac:	b.ge	fbc0 <argp_fmtstream_point@@Base+0x1454>  // b.tcont
    fbb0:	ldr	x2, [x2, #16]
    fbb4:	ldr	w0, [x2, #32]
    fbb8:	cmp	w1, w0
    fbbc:	b.lt	fbb0 <argp_fmtstream_point@@Base+0x1444>  // b.tstop
    fbc0:	cmp	w1, w0
    fbc4:	b.le	fbd8 <argp_fmtstream_point@@Base+0x146c>
    fbc8:	ldr	x3, [x3, #16]
    fbcc:	ldr	w1, [x3, #32]
    fbd0:	cmp	w1, w0
    fbd4:	b.gt	fbc8 <argp_fmtstream_point@@Base+0x145c>
    fbd8:	mov	x0, x2
    fbdc:	ldr	x2, [x2, #16]
    fbe0:	mov	x1, x3
    fbe4:	ldr	x3, [x3, #16]
    fbe8:	cmp	x2, x3
    fbec:	b.ne	fbd8 <argp_fmtstream_point@@Base+0x146c>  // b.any
    fbf0:	ldr	w3, [x1, #8]
    fbf4:	ldr	w2, [x0, #8]
    fbf8:	sub	w2, w3, w2
    fbfc:	ldr	w1, [x1, #12]
    fc00:	ldr	w0, [x0, #12]
    fc04:	bl	e808 <argp_fmtstream_point@@Base+0x9c>
    fc08:	ldp	x19, x20, [sp, #16]
    fc0c:	ldp	x29, x30, [sp], #80
    fc10:	ret
    fc14:	mov	x1, x3
    fc18:	ldr	x3, [x3, #16]
    fc1c:	cbnz	x3, fc14 <argp_fmtstream_point@@Base+0x14a8>
    fc20:	mov	w2, #0xffffffff            	// #-1
    fc24:	ldr	w1, [x1, #12]
    fc28:	bl	e808 <argp_fmtstream_point@@Base+0x9c>
    fc2c:	b	fc08 <argp_fmtstream_point@@Base+0x149c>
    fc30:	mov	x0, x2
    fc34:	ldr	x2, [x2, #16]
    fc38:	cbnz	x2, fc30 <argp_fmtstream_point@@Base+0x14c4>
    fc3c:	mov	w2, #0x1                   	// #1
    fc40:	ldr	w0, [x0, #12]
    fc44:	bl	e808 <argp_fmtstream_point@@Base+0x9c>
    fc48:	b	fc08 <argp_fmtstream_point@@Base+0x149c>
    fc4c:	cmp	w0, w1
    fc50:	b.eq	fc60 <argp_fmtstream_point@@Base+0x14f4>  // b.none
    fc54:	mov	w2, #0x0                   	// #0
    fc58:	bl	e808 <argp_fmtstream_point@@Base+0x9c>
    fc5c:	b	fc08 <argp_fmtstream_point@@Base+0x149c>
    fc60:	stp	x21, x22, [sp, #32]
    fc64:	stp	x23, x24, [sp, #48]
    fc68:	ldr	x0, [x20, #40]
    fc6c:	adrp	x21, e000 <_argp_fmtstream_update@@Base+0x220>
    fc70:	add	x21, x21, #0xf0c
    fc74:	mov	x3, #0x0                   	// #0
    fc78:	ldr	x2, [x0, #48]
    fc7c:	mov	x1, x21
    fc80:	mov	x0, x20
    fc84:	bl	eb44 <argp_fmtstream_point@@Base+0x3d8>
    fc88:	mov	w23, w0
    fc8c:	ldr	x0, [x19, #40]
    fc90:	mov	x3, #0x0                   	// #0
    fc94:	ldr	x2, [x0, #48]
    fc98:	mov	x1, x21
    fc9c:	mov	x0, x19
    fca0:	bl	eb44 <argp_fmtstream_point@@Base+0x3d8>
    fca4:	mov	w21, w0
    fca8:	ldr	x0, [x20]
    fcac:	ldr	w24, [x0, #24]
    fcb0:	and	w24, w24, #0x8
    fcb4:	ldr	x0, [x19]
    fcb8:	ldr	w0, [x0, #24]
    fcbc:	and	w22, w0, #0x8
    fcc0:	mov	x0, x20
    fcc4:	bl	e7b8 <argp_fmtstream_point@@Base+0x4c>
    fcc8:	mov	x20, x0
    fccc:	str	x0, [sp, #64]
    fcd0:	mov	x0, x19
    fcd4:	bl	e7b8 <argp_fmtstream_point@@Base+0x4c>
    fcd8:	str	x0, [sp, #72]
    fcdc:	cbz	w24, fd60 <argp_fmtstream_point@@Base+0x15f4>
    fce0:	cbz	x20, fd60 <argp_fmtstream_point@@Base+0x15f4>
    fce4:	add	x0, sp, #0x40
    fce8:	bl	e8f0 <argp_fmtstream_point@@Base+0x184>
    fcec:	cmp	w0, #0x0
    fcf0:	cset	w19, ne  // ne = any
    fcf4:	cbz	w22, fdbc <argp_fmtstream_point@@Base+0x1650>
    fcf8:	ldr	x0, [sp, #72]
    fcfc:	mov	w22, #0x0                   	// #0
    fd00:	cbz	x0, fdbc <argp_fmtstream_point@@Base+0x1650>
    fd04:	b	fdac <argp_fmtstream_point@@Base+0x1640>
    fd08:	cbz	w23, fd4c <argp_fmtstream_point@@Base+0x15e0>
    fd0c:	cbnz	w21, fd1c <argp_fmtstream_point@@Base+0x15b0>
    fd10:	ldr	x0, [sp, #72]
    fd14:	cbz	x0, fd1c <argp_fmtstream_point@@Base+0x15b0>
    fd18:	ldrb	w21, [x0]
    fd1c:	bl	a530 <__ctype_tolower_loc@plt>
    fd20:	ldr	x1, [x0]
    fd24:	and	x0, x23, #0xff
    fd28:	and	x2, x21, #0xff
    fd2c:	ldr	w0, [x1, x0, lsl #2]
    fd30:	ldr	w1, [x1, x2, lsl #2]
    fd34:	sub	w19, w21, w23
    fd38:	subs	w0, w0, w1
    fd3c:	csel	w0, w19, w0, eq  // eq = none
    fd40:	ldp	x21, x22, [sp, #32]
    fd44:	ldp	x23, x24, [sp, #48]
    fd48:	b	fc08 <argp_fmtstream_point@@Base+0x149c>
    fd4c:	ldr	x0, [sp, #64]
    fd50:	cbnz	x0, fd98 <argp_fmtstream_point@@Base+0x162c>
    fd54:	b	fd0c <argp_fmtstream_point@@Base+0x15a0>
    fd58:	mov	w23, w1
    fd5c:	b	fd0c <argp_fmtstream_point@@Base+0x15a0>
    fd60:	cbnz	w22, fda0 <argp_fmtstream_point@@Base+0x1634>
    fd64:	and	w23, w23, #0xff
    fd68:	and	w21, w21, #0xff
    fd6c:	orr	w1, w21, w23
    fd70:	cbnz	w1, fd08 <argp_fmtstream_point@@Base+0x159c>
    fd74:	ldr	x0, [sp, #64]
    fd78:	cbz	x0, fd58 <argp_fmtstream_point@@Base+0x15ec>
    fd7c:	ldr	x1, [sp, #72]
    fd80:	cbz	x1, fd94 <argp_fmtstream_point@@Base+0x1628>
    fd84:	bl	a7c0 <strcasecmp@plt>
    fd88:	ldp	x21, x22, [sp, #32]
    fd8c:	ldp	x23, x24, [sp, #48]
    fd90:	b	fc08 <argp_fmtstream_point@@Base+0x149c>
    fd94:	ldr	x0, [sp, #64]
    fd98:	ldrb	w23, [x0]
    fd9c:	b	fd0c <argp_fmtstream_point@@Base+0x15a0>
    fda0:	ldr	x0, [sp, #72]
    fda4:	mov	w19, #0x0                   	// #0
    fda8:	cbz	x0, fd64 <argp_fmtstream_point@@Base+0x15f8>
    fdac:	add	x0, sp, #0x48
    fdb0:	bl	e8f0 <argp_fmtstream_point@@Base+0x184>
    fdb4:	cmp	w0, #0x0
    fdb8:	cset	w22, ne  // ne = any
    fdbc:	cmp	w22, w19
    fdc0:	b.eq	fd64 <argp_fmtstream_point@@Base+0x15f8>  // b.none
    fdc4:	sub	w0, w19, w22
    fdc8:	ldp	x21, x22, [sp, #32]
    fdcc:	ldp	x23, x24, [sp, #48]
    fdd0:	b	fc08 <argp_fmtstream_point@@Base+0x149c>
    fdd4:	stp	x29, x30, [sp, #-176]!
    fdd8:	mov	x29, sp
    fddc:	stp	x19, x20, [sp, #16]
    fde0:	stp	x21, x22, [sp, #32]
    fde4:	stp	x23, x24, [sp, #48]
    fde8:	stp	x25, x26, [sp, #64]
    fdec:	stp	x27, x28, [sp, #80]
    fdf0:	mov	x26, x0
    fdf4:	mov	x27, x1
    fdf8:	ldr	x23, [x0, #32]
    fdfc:	ldr	x20, [x0]
    fe00:	mov	x0, #0x20                  	// #32
    fe04:	bl	a5f0 <malloc@plt>
    fe08:	cbz	x0, fe30 <argp_fmtstream_point@@Base+0x16c4>
    fe0c:	mov	x19, x0
    fe10:	str	wzr, [x0, #8]
    fe14:	str	xzr, [x0, #24]
    fe18:	cbz	x20, ffac <argp_fmtstream_point@@Base+0x1840>
    fe1c:	ldr	w0, [x20, #24]
    fe20:	tbnz	w0, #2, fe50 <argp_fmtstream_point@@Base+0x16e4>
    fe24:	mov	x21, x20
    fe28:	mov	w22, #0x0                   	// #0
    fe2c:	b	fe74 <argp_fmtstream_point@@Base+0x1708>
    fe30:	adrp	x3, 2c000 <vasnprintf@@Base+0x1378>
    fe34:	add	x3, x3, #0xef8
    fe38:	mov	w2, #0x1c3                 	// #451
    fe3c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    fe40:	add	x1, x1, #0xc80
    fe44:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    fe48:	add	x0, x0, #0xc90
    fe4c:	bl	aea0 <__assert_fail@plt>
    fe50:	adrp	x3, 2c000 <vasnprintf@@Base+0x1378>
    fe54:	add	x3, x3, #0xef8
    fe58:	mov	w2, #0x1cd                 	// #461
    fe5c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    fe60:	add	x1, x1, #0xc80
    fe64:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    fe68:	add	x0, x0, #0xc98
    fe6c:	bl	aea0 <__assert_fail@plt>
    fe70:	add	x21, x21, #0x30
    fe74:	ldr	w0, [x21, #8]
    fe78:	cbnz	w0, fe84 <argp_fmtstream_point@@Base+0x1718>
    fe7c:	ldr	x0, [x21]
    fe80:	cbz	x0, fec8 <argp_fmtstream_point@@Base+0x175c>
    fe84:	ldr	w0, [x21, #24]
    fe88:	tbnz	w0, #2, fe98 <argp_fmtstream_point@@Base+0x172c>
    fe8c:	ldr	w0, [x19, #8]
    fe90:	add	w0, w0, #0x1
    fe94:	str	w0, [x19, #8]
    fe98:	ldr	w0, [x21, #24]
    fe9c:	tbnz	w0, #3, fe70 <argp_fmtstream_point@@Base+0x1704>
    fea0:	ldr	w24, [x21, #8]
    fea4:	sub	w0, w24, #0x1
    fea8:	cmp	w0, #0xfe
    feac:	b.hi	fe70 <argp_fmtstream_point@@Base+0x1704>  // b.pmore
    feb0:	bl	a9d0 <__ctype_b_loc@plt>
    feb4:	ldr	x0, [x0]
    feb8:	ldrh	w0, [x0, w24, sxtw #1]
    febc:	ubfx	x0, x0, #14, #1
    fec0:	add	w22, w22, w0
    fec4:	b	fe70 <argp_fmtstream_point@@Base+0x1704>
    fec8:	ldr	x0, [x21, #32]
    fecc:	cbnz	x0, fe84 <argp_fmtstream_point@@Base+0x1718>
    fed0:	ldr	w25, [x21, #40]
    fed4:	cbnz	w25, fe84 <argp_fmtstream_point@@Base+0x1718>
    fed8:	ldr	w1, [x19, #8]
    fedc:	lsl	x0, x1, #3
    fee0:	sub	x0, x0, x1
    fee4:	lsl	x0, x0, #3
    fee8:	bl	a5f0 <malloc@plt>
    feec:	mov	x21, x0
    fef0:	str	x0, [x19]
    fef4:	add	w0, w22, #0x1
    fef8:	bl	a5f0 <malloc@plt>
    fefc:	mov	x28, x0
    ff00:	str	x0, [x19, #16]
    ff04:	cmp	x0, #0x0
    ff08:	mov	x22, x0
    ff0c:	ccmp	x21, #0x0, #0x4, ne  // ne = any
    ff10:	b.ne	ff5c <argp_fmtstream_point@@Base+0x17f0>  // b.any
    ff14:	adrp	x3, 2c000 <vasnprintf@@Base+0x1378>
    ff18:	add	x3, x3, #0xef8
    ff1c:	mov	w2, #0x1db                 	// #475
    ff20:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
    ff24:	add	x1, x1, #0xc80
    ff28:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
    ff2c:	add	x0, x0, #0xca8
    ff30:	bl	aea0 <__assert_fail@plt>
    ff34:	mov	w25, w0
    ff38:	str	w25, [x21, #24]
    ff3c:	str	x27, [x21, #32]
    ff40:	str	x26, [x21, #40]
    ff44:	b	10300 <argp_fmtstream_point@@Base+0x1b94>
    ff48:	ldr	x0, [x20, #32]
    ff4c:	cbnz	x0, 102f8 <argp_fmtstream_point@@Base+0x1b8c>
    ff50:	ldr	w0, [x20, #40]
    ff54:	cbnz	w0, 102f8 <argp_fmtstream_point@@Base+0x1b8c>
    ff58:	add	x21, x21, #0x38
    ff5c:	ldr	w0, [x20, #8]
    ff60:	cbnz	w0, ff6c <argp_fmtstream_point@@Base+0x1800>
    ff64:	ldr	x0, [x20]
    ff68:	cbz	x0, ff98 <argp_fmtstream_point@@Base+0x182c>
    ff6c:	str	x20, [x21]
    ff70:	str	wzr, [x21, #8]
    ff74:	str	x22, [x21, #16]
    ff78:	ldr	w0, [x20, #40]
    ff7c:	cbnz	w0, ff34 <argp_fmtstream_point@@Base+0x17c8>
    ff80:	ldr	x0, [x20]
    ff84:	cbnz	x0, ff38 <argp_fmtstream_point@@Base+0x17cc>
    ff88:	ldr	w0, [x20, #8]
    ff8c:	cmp	w0, #0x0
    ff90:	cinc	w25, w25, eq  // eq = none
    ff94:	b	ff38 <argp_fmtstream_point@@Base+0x17cc>
    ff98:	ldr	x0, [x20, #32]
    ff9c:	cbnz	x0, ff6c <argp_fmtstream_point@@Base+0x1800>
    ffa0:	ldr	w0, [x20, #40]
    ffa4:	cbnz	w0, ff6c <argp_fmtstream_point@@Base+0x1800>
    ffa8:	strb	wzr, [x22]
    ffac:	cbz	x23, 10338 <argp_fmtstream_point@@Base+0x1bcc>
    ffb0:	ldr	x0, [x23]
    ffb4:	cbz	x0, 10338 <argp_fmtstream_point@@Base+0x1bcc>
    ffb8:	str	x27, [sp, #144]
    ffbc:	add	x0, x19, #0x18
    ffc0:	str	x0, [sp, #168]
    ffc4:	b	fff8 <argp_fmtstream_point@@Base+0x188c>
    ffc8:	ldr	x1, [sp, #168]
    ffcc:	b	10084 <argp_fmtstream_point@@Base+0x1918>
    ffd0:	str	w21, [x19, #8]
    ffd4:	ldr	x0, [x22]
    ffd8:	str	x0, [x19]
    ffdc:	ldr	x0, [x22, #16]
    ffe0:	str	x0, [x19, #16]
    ffe4:	str	wzr, [x22, #8]
    ffe8:	mov	x0, x22
    ffec:	bl	e964 <argp_fmtstream_point@@Base+0x1f8>
    fff0:	ldr	x0, [x23, #32]!
    fff4:	cbz	x0, 10338 <argp_fmtstream_point@@Base+0x1bcc>
    fff8:	ldr	w21, [x23, #24]
    fffc:	cbnz	w21, 1000c <argp_fmtstream_point@@Base+0x18a0>
   10000:	ldr	x0, [x23, #16]
   10004:	ldr	x1, [sp, #144]
   10008:	cbz	x0, 10060 <argp_fmtstream_point@@Base+0x18f4>
   1000c:	ldr	x22, [x23, #16]
   10010:	ldr	x20, [x26, #32]
   10014:	sub	x20, x23, x20
   10018:	asr	x20, x20, #5
   1001c:	mov	x0, #0x30                  	// #48
   10020:	bl	a5f0 <malloc@plt>
   10024:	mov	x1, x0
   10028:	cbz	x0, 10060 <argp_fmtstream_point@@Base+0x18f4>
   1002c:	str	w21, [x0, #12]
   10030:	str	x22, [x0]
   10034:	str	w20, [x0, #8]
   10038:	str	x27, [x0, #16]
   1003c:	str	x26, [x0, #24]
   10040:	mov	w0, #0x0                   	// #0
   10044:	cbz	x27, 10050 <argp_fmtstream_point@@Base+0x18e4>
   10048:	ldr	w0, [x27, #32]
   1004c:	add	w0, w0, #0x1
   10050:	str	w0, [x1, #32]
   10054:	ldr	x0, [x19, #24]
   10058:	str	x0, [x1, #40]
   1005c:	str	x1, [x19, #24]
   10060:	ldr	x0, [x23]
   10064:	bl	fdd4 <argp_fmtstream_point@@Base+0x1668>
   10068:	mov	x22, x0
   1006c:	ldr	x0, [x19, #24]
   10070:	cbz	x0, ffc8 <argp_fmtstream_point@@Base+0x185c>
   10074:	mov	x1, x0
   10078:	ldr	x0, [x0, #40]
   1007c:	cbnz	x0, 10074 <argp_fmtstream_point@@Base+0x1908>
   10080:	add	x1, x1, #0x28
   10084:	ldr	x0, [x22, #24]
   10088:	str	x0, [x1]
   1008c:	str	xzr, [x22, #24]
   10090:	ldr	w21, [x22, #8]
   10094:	cbz	w21, ffe8 <argp_fmtstream_point@@Base+0x187c>
   10098:	ldr	w20, [x19, #8]
   1009c:	cbz	w20, ffd0 <argp_fmtstream_point@@Base+0x1864>
   100a0:	add	w0, w21, w20
   100a4:	str	w0, [sp, #156]
   100a8:	add	w1, w21, w20
   100ac:	lsl	x0, x1, #3
   100b0:	sub	x0, x0, x1
   100b4:	lsl	x0, x0, #3
   100b8:	bl	a5f0 <malloc@plt>
   100bc:	str	x0, [sp, #136]
   100c0:	ldr	x25, [x19, #16]
   100c4:	mov	x0, x25
   100c8:	bl	a340 <strlen@plt>
   100cc:	mov	w24, w0
   100d0:	str	x24, [sp, #104]
   100d4:	ldr	x28, [x22, #16]
   100d8:	mov	x0, x28
   100dc:	bl	a340 <strlen@plt>
   100e0:	add	x0, x0, #0x1
   100e4:	add	x0, x0, x24
   100e8:	bl	a5f0 <malloc@plt>
   100ec:	mov	x24, x0
   100f0:	ldr	x0, [sp, #136]
   100f4:	cmp	x0, #0x0
   100f8:	ccmp	x24, #0x0, #0x4, ne  // ne = any
   100fc:	b.eq	101a0 <argp_fmtstream_point@@Base+0x1a34>  // b.none
   10100:	ldr	x1, [x19]
   10104:	str	x1, [sp, #160]
   10108:	ubfiz	x2, x20, #3, #32
   1010c:	sub	x2, x2, w20, uxtw
   10110:	lsl	x2, x2, #3
   10114:	ldr	x0, [sp, #136]
   10118:	bl	aab0 <mempcpy@plt>
   1011c:	ubfiz	x2, x21, #3, #32
   10120:	sub	x2, x2, w21, uxtw
   10124:	lsl	x2, x2, #3
   10128:	ldr	x1, [x22]
   1012c:	bl	a2c0 <memcpy@plt>
   10130:	ldr	x2, [sp, #104]
   10134:	mov	x1, x25
   10138:	mov	x0, x24
   1013c:	bl	a2c0 <memcpy@plt>
   10140:	sub	w20, w20, #0x1
   10144:	add	x20, x20, #0x1
   10148:	lsl	x0, x20, #3
   1014c:	sub	x20, x0, x20
   10150:	ldr	x1, [sp, #136]
   10154:	add	x20, x1, x20, lsl #3
   10158:	ldr	x0, [x1, #16]
   1015c:	sub	x0, x0, x25
   10160:	add	x0, x24, x0
   10164:	str	x0, [x1, #16]
   10168:	add	x1, x1, #0x38
   1016c:	cmp	x1, x20
   10170:	b.ne	10158 <argp_fmtstream_point@@Base+0x19ec>  // b.any
   10174:	ldr	x0, [sp, #104]
   10178:	add	x1, x24, x0
   1017c:	str	x1, [sp, #112]
   10180:	sub	w21, w21, #0x1
   10184:	add	x21, x21, #0x1
   10188:	lsl	x0, x21, #3
   1018c:	sub	x21, x0, x21
   10190:	add	x0, x20, x21, lsl #3
   10194:	str	x0, [sp, #128]
   10198:	str	x1, [sp, #104]
   1019c:	b	10214 <argp_fmtstream_point@@Base+0x1aa8>
   101a0:	adrp	x3, 2c000 <vasnprintf@@Base+0x1378>
   101a4:	add	x3, x3, #0xef8
   101a8:	add	x3, x3, #0x10
   101ac:	mov	w2, #0x370                 	// #880
   101b0:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   101b4:	add	x1, x1, #0xc80
   101b8:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   101bc:	add	x0, x0, #0xcd0
   101c0:	bl	aea0 <__assert_fail@plt>
   101c4:	ldr	x0, [sp, #112]
   101c8:	cmp	x24, x0
   101cc:	b.cs	101f0 <argp_fmtstream_point@@Base+0x1a84>  // b.hs, b.nlast
   101d0:	mov	x0, x24
   101d4:	ldrb	w2, [x0]
   101d8:	cmp	w2, w1
   101dc:	b.eq	101fc <argp_fmtstream_point@@Base+0x1a90>  // b.none
   101e0:	add	x0, x0, #0x1
   101e4:	ldr	x2, [sp, #112]
   101e8:	cmp	x2, x0
   101ec:	b.ne	101d4 <argp_fmtstream_point@@Base+0x1a68>  // b.any
   101f0:	ldr	x0, [sp, #104]
   101f4:	strb	w1, [x0], #1
   101f8:	str	x0, [sp, #104]
   101fc:	add	x28, x28, #0x1
   10200:	b	1027c <argp_fmtstream_point@@Base+0x1b10>
   10204:	add	x20, x20, #0x38
   10208:	ldr	x0, [sp, #128]
   1020c:	cmp	x0, x20
   10210:	b.eq	10240 <argp_fmtstream_point@@Base+0x1ad4>  // b.none
   10214:	ldr	x0, [sp, #104]
   10218:	str	x0, [x20, #16]
   1021c:	ldr	w0, [x20, #8]
   10220:	ldr	x21, [x20]
   10224:	cbz	w0, 10204 <argp_fmtstream_point@@Base+0x1a98>
   10228:	sub	w0, w0, #0x1
   1022c:	add	x0, x0, #0x1
   10230:	add	x0, x0, x0, lsl #1
   10234:	add	x0, x21, x0, lsl #4
   10238:	str	x0, [sp, #120]
   1023c:	b	1028c <argp_fmtstream_point@@Base+0x1b20>
   10240:	ldr	x0, [sp, #104]
   10244:	strb	wzr, [x0]
   10248:	ldr	x0, [sp, #160]
   1024c:	bl	aa50 <free@plt>
   10250:	ldr	x0, [x19, #16]
   10254:	bl	aa50 <free@plt>
   10258:	ldr	x0, [sp, #136]
   1025c:	str	x0, [x19]
   10260:	ldr	w0, [sp, #156]
   10264:	str	w0, [x19, #8]
   10268:	str	x24, [x19, #16]
   1026c:	b	ffe8 <argp_fmtstream_point@@Base+0x187c>
   10270:	ldrb	w1, [x28]
   10274:	cmp	w1, w25
   10278:	b.eq	101c4 <argp_fmtstream_point@@Base+0x1a58>  // b.none
   1027c:	add	x21, x21, #0x30
   10280:	ldr	x0, [sp, #120]
   10284:	cmp	x21, x0
   10288:	b.eq	10204 <argp_fmtstream_point@@Base+0x1a98>  // b.none
   1028c:	ldr	w0, [x21, #24]
   10290:	tbnz	w0, #3, 1027c <argp_fmtstream_point@@Base+0x1b10>
   10294:	ldr	w25, [x21, #8]
   10298:	sub	w0, w25, #0x1
   1029c:	cmp	w0, #0xfe
   102a0:	b.hi	1027c <argp_fmtstream_point@@Base+0x1b10>  // b.pmore
   102a4:	bl	a9d0 <__ctype_b_loc@plt>
   102a8:	ldr	x0, [x0]
   102ac:	ldrh	w0, [x0, w25, sxtw #1]
   102b0:	tbnz	w0, #14, 10270 <argp_fmtstream_point@@Base+0x1b04>
   102b4:	b	1027c <argp_fmtstream_point@@Base+0x1b10>
   102b8:	and	w24, w24, #0xff
   102bc:	mov	x0, x28
   102c0:	cmp	x28, x22
   102c4:	b.cs	102e0 <argp_fmtstream_point@@Base+0x1b74>  // b.hs, b.nlast
   102c8:	ldrb	w1, [x0]
   102cc:	cmp	w1, w24
   102d0:	b.eq	102e4 <argp_fmtstream_point@@Base+0x1b78>  // b.none
   102d4:	add	x0, x0, #0x1
   102d8:	cmp	x22, x0
   102dc:	b.ne	102c8 <argp_fmtstream_point@@Base+0x1b5c>  // b.any
   102e0:	strb	w24, [x22], #1
   102e4:	add	x20, x20, #0x30
   102e8:	ldr	w0, [x20, #8]
   102ec:	cbnz	w0, 102f8 <argp_fmtstream_point@@Base+0x1b8c>
   102f0:	ldr	x0, [x20]
   102f4:	cbz	x0, ff48 <argp_fmtstream_point@@Base+0x17dc>
   102f8:	ldr	w0, [x20, #24]
   102fc:	tbz	w0, #2, ff58 <argp_fmtstream_point@@Base+0x17ec>
   10300:	ldr	w0, [x21, #8]
   10304:	add	w0, w0, #0x1
   10308:	str	w0, [x21, #8]
   1030c:	ldr	w0, [x20, #24]
   10310:	tbnz	w0, #3, 102e4 <argp_fmtstream_point@@Base+0x1b78>
   10314:	ldr	w24, [x20, #8]
   10318:	sub	w0, w24, #0x1
   1031c:	cmp	w0, #0xfe
   10320:	b.hi	102e4 <argp_fmtstream_point@@Base+0x1b78>  // b.pmore
   10324:	bl	a9d0 <__ctype_b_loc@plt>
   10328:	ldr	x0, [x0]
   1032c:	ldrh	w0, [x0, w24, sxtw #1]
   10330:	tbnz	w0, #14, 102b8 <argp_fmtstream_point@@Base+0x1b4c>
   10334:	b	102e4 <argp_fmtstream_point@@Base+0x1b78>
   10338:	mov	x0, x19
   1033c:	ldp	x19, x20, [sp, #16]
   10340:	ldp	x21, x22, [sp, #32]
   10344:	ldp	x23, x24, [sp, #48]
   10348:	ldp	x25, x26, [sp, #64]
   1034c:	ldp	x27, x28, [sp, #80]
   10350:	ldp	x29, x30, [sp], #176
   10354:	ret

0000000000010358 <argp_failure@@Base>:
   10358:	stp	x29, x30, [sp, #-464]!
   1035c:	mov	x29, sp
   10360:	stp	x19, x20, [sp, #16]
   10364:	stp	x21, x22, [sp, #32]
   10368:	str	x23, [sp, #48]
   1036c:	mov	x20, x0
   10370:	mov	w23, w1
   10374:	mov	w22, w2
   10378:	mov	x21, x3
   1037c:	str	x4, [sp, #432]
   10380:	str	x5, [sp, #440]
   10384:	str	x6, [sp, #448]
   10388:	str	x7, [sp, #456]
   1038c:	str	q0, [sp, #304]
   10390:	str	q1, [sp, #320]
   10394:	str	q2, [sp, #336]
   10398:	str	q3, [sp, #352]
   1039c:	str	q4, [sp, #368]
   103a0:	str	q5, [sp, #384]
   103a4:	str	q6, [sp, #400]
   103a8:	str	q7, [sp, #416]
   103ac:	cbz	x0, 10508 <argp_failure@@Base+0x1b0>
   103b0:	ldr	w0, [x0, #28]
   103b4:	tbnz	w0, #1, 104f4 <argp_failure@@Base+0x19c>
   103b8:	ldr	x19, [x20, #72]
   103bc:	cbz	x19, 104f4 <argp_failure@@Base+0x19c>
   103c0:	mov	x0, x19
   103c4:	bl	a3a0 <flockfile@plt>
   103c8:	ldr	x0, [x20, #64]
   103cc:	mov	x1, x19
   103d0:	bl	ae00 <fputs_unlocked@plt>
   103d4:	cbz	x21, 1045c <argp_failure@@Base+0x104>
   103d8:	add	x0, sp, #0x1d0
   103dc:	str	x0, [sp, #104]
   103e0:	str	x0, [sp, #112]
   103e4:	add	x0, sp, #0x1b0
   103e8:	str	x0, [sp, #120]
   103ec:	mov	w0, #0xffffffe0            	// #-32
   103f0:	str	w0, [sp, #128]
   103f4:	mov	w0, #0xffffff80            	// #-128
   103f8:	str	w0, [sp, #132]
   103fc:	ldr	x0, [x19, #40]
   10400:	ldr	x1, [x19, #48]
   10404:	cmp	x0, x1
   10408:	b.cs	10530 <argp_failure@@Base+0x1d8>  // b.hs, b.nlast
   1040c:	add	x1, x0, #0x1
   10410:	str	x1, [x19, #40]
   10414:	mov	w1, #0x3a                  	// #58
   10418:	strb	w1, [x0]
   1041c:	ldr	x0, [x19, #40]
   10420:	ldr	x1, [x19, #48]
   10424:	cmp	x0, x1
   10428:	b.cs	10540 <argp_failure@@Base+0x1e8>  // b.hs, b.nlast
   1042c:	add	x1, x0, #0x1
   10430:	str	x1, [x19, #40]
   10434:	mov	w1, #0x20                  	// #32
   10438:	strb	w1, [x0]
   1043c:	ldp	x0, x1, [sp, #104]
   10440:	stp	x0, x1, [sp, #64]
   10444:	ldp	x0, x1, [sp, #120]
   10448:	stp	x0, x1, [sp, #80]
   1044c:	add	x2, sp, #0x40
   10450:	mov	x1, x21
   10454:	mov	x0, x19
   10458:	bl	ae80 <vfprintf@plt>
   1045c:	cbz	w22, 104bc <argp_failure@@Base+0x164>
   10460:	ldr	x0, [x19, #40]
   10464:	ldr	x1, [x19, #48]
   10468:	cmp	x0, x1
   1046c:	b.cs	10550 <argp_failure@@Base+0x1f8>  // b.hs, b.nlast
   10470:	add	x1, x0, #0x1
   10474:	str	x1, [x19, #40]
   10478:	mov	w1, #0x3a                  	// #58
   1047c:	strb	w1, [x0]
   10480:	ldr	x0, [x19, #40]
   10484:	ldr	x1, [x19, #48]
   10488:	cmp	x0, x1
   1048c:	b.cs	10560 <argp_failure@@Base+0x208>  // b.hs, b.nlast
   10490:	add	x1, x0, #0x1
   10494:	str	x1, [x19, #40]
   10498:	mov	w1, #0x20                  	// #32
   1049c:	strb	w1, [x0]
   104a0:	mov	x2, #0xc8                  	// #200
   104a4:	add	x1, sp, #0x68
   104a8:	mov	w0, w22
   104ac:	bl	a760 <strerror_r@plt>
   104b0:	cbz	x0, 10570 <argp_failure@@Base+0x218>
   104b4:	mov	x1, x19
   104b8:	bl	ae00 <fputs_unlocked@plt>
   104bc:	ldr	x0, [x19, #40]
   104c0:	ldr	x1, [x19, #48]
   104c4:	cmp	x0, x1
   104c8:	b.cs	10598 <argp_failure@@Base+0x240>  // b.hs, b.nlast
   104cc:	add	x1, x0, #0x1
   104d0:	str	x1, [x19, #40]
   104d4:	mov	w1, #0xa                   	// #10
   104d8:	strb	w1, [x0]
   104dc:	mov	x0, x19
   104e0:	bl	a620 <funlockfile@plt>
   104e4:	cbz	w23, 104f4 <argp_failure@@Base+0x19c>
   104e8:	cbz	x20, 105a8 <argp_failure@@Base+0x250>
   104ec:	ldr	w0, [x20, #28]
   104f0:	tbz	w0, #5, 105a8 <argp_failure@@Base+0x250>
   104f4:	ldp	x19, x20, [sp, #16]
   104f8:	ldp	x21, x22, [sp, #32]
   104fc:	ldr	x23, [sp, #48]
   10500:	ldp	x29, x30, [sp], #464
   10504:	ret
   10508:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   1050c:	ldr	x0, [x0, #3816]
   10510:	ldr	x19, [x0]
   10514:	cbz	x19, 104f4 <argp_failure@@Base+0x19c>
   10518:	mov	x0, x19
   1051c:	bl	a3a0 <flockfile@plt>
   10520:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   10524:	ldr	x0, [x0, #4008]
   10528:	ldr	x0, [x0]
   1052c:	b	103cc <argp_failure@@Base+0x74>
   10530:	mov	w1, #0x3a                  	// #58
   10534:	mov	x0, x19
   10538:	bl	a940 <__overflow@plt>
   1053c:	b	1041c <argp_failure@@Base+0xc4>
   10540:	mov	w1, #0x20                  	// #32
   10544:	mov	x0, x19
   10548:	bl	a940 <__overflow@plt>
   1054c:	b	1043c <argp_failure@@Base+0xe4>
   10550:	mov	w1, #0x3a                  	// #58
   10554:	mov	x0, x19
   10558:	bl	a940 <__overflow@plt>
   1055c:	b	10480 <argp_failure@@Base+0x128>
   10560:	mov	w1, #0x20                  	// #32
   10564:	mov	x0, x19
   10568:	bl	a940 <__overflow@plt>
   1056c:	b	104a0 <argp_failure@@Base+0x148>
   10570:	mov	w0, w22
   10574:	bl	a830 <strerror@plt>
   10578:	cbnz	x0, 104b4 <argp_failure@@Base+0x15c>
   1057c:	mov	w2, #0x5                   	// #5
   10580:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   10584:	add	x1, x1, #0xcf0
   10588:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1058c:	add	x0, x0, #0xc08
   10590:	bl	ada0 <dcgettext@plt>
   10594:	b	104b4 <argp_failure@@Base+0x15c>
   10598:	mov	w1, #0xa                   	// #10
   1059c:	mov	x0, x19
   105a0:	bl	a940 <__overflow@plt>
   105a4:	b	104dc <argp_failure@@Base+0x184>
   105a8:	mov	w0, w23
   105ac:	bl	a350 <exit@plt>
   105b0:	stp	x29, x30, [sp, #-256]!
   105b4:	mov	x29, sp
   105b8:	stp	x19, x20, [sp, #16]
   105bc:	stp	x21, x22, [sp, #32]
   105c0:	stp	x23, x24, [sp, #48]
   105c4:	stp	x25, x26, [sp, #64]
   105c8:	stp	x27, x28, [sp, #80]
   105cc:	str	x0, [x29, #184]
   105d0:	str	x2, [x29, #128]
   105d4:	cbz	x2, 11580 <argp_failure@@Base+0x1228>
   105d8:	mov	x22, x1
   105dc:	mov	w24, w3
   105e0:	mov	x27, x4
   105e4:	mov	x0, x2
   105e8:	bl	a3a0 <flockfile@plt>
   105ec:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   105f0:	ldr	w28, [x0, #500]
   105f4:	cbz	w28, 10698 <argp_failure@@Base+0x340>
   105f8:	mov	x3, #0x0                   	// #0
   105fc:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   10600:	ldrsw	x2, [x0, #496]
   10604:	mov	x1, #0x0                   	// #0
   10608:	ldr	x0, [x29, #128]
   1060c:	bl	aa70 <argp_make_fmtstream@plt>
   10610:	mov	x19, x0
   10614:	cbz	x0, 10a54 <argp_failure@@Base+0x6fc>
   10618:	mov	x28, #0x0                   	// #0
   1061c:	mov	w0, #0xb                   	// #11
   10620:	tst	w24, w0
   10624:	b.ne	10a60 <argp_failure@@Base+0x708>  // b.any
   10628:	mov	w20, #0x0                   	// #0
   1062c:	tst	x24, #0x3
   10630:	b.ne	10ae8 <argp_failure@@Base+0x790>  // b.any
   10634:	tbnz	w24, #4, 10d3c <argp_failure@@Base+0x9e4>
   10638:	tbnz	w24, #2, 10d60 <argp_failure@@Base+0xa08>
   1063c:	tbz	w24, #3, 11518 <argp_failure@@Base+0x11c0>
   10640:	ldr	w0, [x28, #8]
   10644:	cbz	w0, 11518 <argp_failure@@Base+0x11c0>
   10648:	cbnz	w20, 10d94 <argp_failure@@Base+0xa3c>
   1064c:	str	xzr, [x29, #200]
   10650:	str	wzr, [x29, #208]
   10654:	str	wzr, [x29, #212]
   10658:	ldr	x20, [x28]
   1065c:	ldr	w0, [x28, #8]
   10660:	cbz	w0, 11514 <argp_failure@@Base+0x11bc>
   10664:	sub	w0, w0, #0x1
   10668:	add	x0, x0, #0x1
   1066c:	lsl	x1, x0, #3
   10670:	sub	x0, x1, x0
   10674:	add	x0, x20, x0, lsl #3
   10678:	str	x0, [x29, #112]
   1067c:	add	x0, x29, #0xc8
   10680:	str	x0, [x29, #104]
   10684:	adrp	x27, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   10688:	add	x27, x27, #0x1d0
   1068c:	add	x0, x29, #0xd8
   10690:	str	x0, [x29, #168]
   10694:	b	113a8 <argp_failure@@Base+0x1050>
   10698:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1069c:	add	x0, x0, #0xd08
   106a0:	bl	aed0 <getenv@plt>
   106a4:	mov	x20, x0
   106a8:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   106ac:	add	x0, x0, #0x1d0
   106b0:	ldp	x2, x3, [x0]
   106b4:	stp	x2, x3, [x29, #216]
   106b8:	ldp	x2, x3, [x0, #16]
   106bc:	stp	x2, x3, [x29, #232]
   106c0:	ldr	x0, [x0, #32]
   106c4:	str	x0, [x29, #248]
   106c8:	cbz	x20, 105f8 <argp_failure@@Base+0x2a0>
   106cc:	ldrb	w0, [x20]
   106d0:	cbz	w0, 10714 <argp_failure@@Base+0x3bc>
   106d4:	cmp	x22, #0x0
   106d8:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   106dc:	add	x0, x0, #0xc08
   106e0:	csel	x0, x0, xzr, ne  // ne = any
   106e4:	str	x0, [x29, #152]
   106e8:	bl	a9d0 <__ctype_b_loc@plt>
   106ec:	mov	x26, x0
   106f0:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   106f4:	add	x0, x0, #0xef8
   106f8:	str	x0, [x29, #160]
   106fc:	add	x25, x0, #0xb0
   10700:	add	x0, x29, #0xd8
   10704:	str	x0, [x29, #144]
   10708:	b	10928 <argp_failure@@Base+0x5d0>
   1070c:	tbnz	w1, #10, 107a0 <argp_failure@@Base+0x448>
   10710:	cbnz	w3, 109ec <argp_failure@@Base+0x694>
   10714:	ldr	w3, [x29, #248]
   10718:	adrp	x19, 2c000 <vasnprintf@@Base+0x1378>
   1071c:	add	x19, x19, #0xef8
   10720:	add	x19, x19, #0x20
   10724:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   10728:	add	x1, x1, #0xef8
   1072c:	add	x1, x1, #0xb0
   10730:	add	x2, x29, #0xd8
   10734:	add	x19, x19, #0x10
   10738:	cmp	x19, x1
   1073c:	b.eq	10a28 <argp_failure@@Base+0x6d0>  // b.none
   10740:	ldrb	w0, [x19, #14]
   10744:	cbnz	w0, 10734 <argp_failure@@Base+0x3dc>
   10748:	ldrb	w0, [x19, #15]
   1074c:	cmp	w0, #0x20
   10750:	b.eq	10734 <argp_failure@@Base+0x3dc>  // b.none
   10754:	and	x0, x0, #0xff
   10758:	ldr	w0, [x2, x0]
   1075c:	cmp	w0, w3
   10760:	b.lt	10734 <argp_failure@@Base+0x3dc>  // b.tstop
   10764:	mov	w2, #0x5                   	// #5
   10768:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   1076c:	add	x1, x1, #0xd90
   10770:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   10774:	add	x0, x0, #0xc08
   10778:	bl	ada0 <dcgettext@plt>
   1077c:	mov	x5, x19
   10780:	adrp	x4, 2c000 <vasnprintf@@Base+0x1378>
   10784:	add	x4, x4, #0xdc8
   10788:	mov	x3, x0
   1078c:	mov	w2, #0x0                   	// #0
   10790:	mov	w1, #0x0                   	// #0
   10794:	mov	x0, x22
   10798:	bl	a650 <argp_failure@plt>
   1079c:	b	105f8 <argp_failure@@Base+0x2a0>
   107a0:	and	w1, w1, #0x8
   107a4:	cmp	w3, #0x5f
   107a8:	mov	w2, #0x2d                  	// #45
   107ac:	ccmp	w3, w2, #0x4, ne  // ne = any
   107b0:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   107b4:	b.eq	11740 <argp_failure@@Base+0x13e8>  // b.none
   107b8:	mov	x19, x20
   107bc:	mov	w4, w2
   107c0:	ldrb	w2, [x19, #1]!
   107c4:	and	x1, x2, #0xff
   107c8:	ldrh	w1, [x0, x1, lsl #1]
   107cc:	and	w1, w1, #0x8
   107d0:	cmp	w2, #0x5f
   107d4:	ccmp	w2, w4, #0x4, ne  // ne = any
   107d8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   107dc:	b.ne	107c0 <argp_failure@@Base+0x468>  // b.any
   107e0:	sub	x23, x19, x20
   107e4:	mov	w1, w2
   107e8:	and	x2, x2, #0xff
   107ec:	ldrh	w2, [x0, x2, lsl #1]
   107f0:	tbz	w2, #13, 10804 <argp_failure@@Base+0x4ac>
   107f4:	ldrb	w1, [x19, #1]!
   107f8:	and	x2, x1, #0xff
   107fc:	ldrh	w2, [x0, x2, lsl #1]
   10800:	tbnz	w2, #13, 107f4 <argp_failure@@Base+0x49c>
   10804:	cmp	w1, #0x2c
   10808:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   1080c:	b.eq	1085c <argp_failure@@Base+0x504>  // b.none
   10810:	cmp	w1, #0x3d
   10814:	b.eq	10838 <argp_failure@@Base+0x4e0>  // b.none
   10818:	ldrb	w1, [x19]
   1081c:	ldrh	w0, [x0, x1, lsl #1]
   10820:	str	w28, [x29, #176]
   10824:	str	w28, [x29, #168]
   10828:	tbnz	w0, #11, 108a0 <argp_failure@@Base+0x548>
   1082c:	ldr	x0, [x29, #160]
   10830:	add	x21, x0, #0x20
   10834:	b	10950 <argp_failure@@Base+0x5f8>
   10838:	add	x1, x19, #0x1
   1083c:	ldrb	w2, [x19, #1]
   10840:	ldrh	w2, [x0, x2, lsl #1]
   10844:	tbz	w2, #13, 10898 <argp_failure@@Base+0x540>
   10848:	ldrb	w2, [x1, #1]!
   1084c:	ldrh	w2, [x0, x2, lsl #1]
   10850:	tbnz	w2, #13, 10848 <argp_failure@@Base+0x4f0>
   10854:	mov	x19, x1
   10858:	b	10818 <argp_failure@@Base+0x4c0>
   1085c:	mov	w0, #0x1                   	// #1
   10860:	str	w0, [x29, #176]
   10864:	str	w0, [x29, #168]
   10868:	cmp	w3, #0x6e
   1086c:	b.ne	1082c <argp_failure@@Base+0x4d4>  // b.any
   10870:	ldrb	w0, [x20, #1]
   10874:	cmp	w0, #0x6f
   10878:	b.ne	1082c <argp_failure@@Base+0x4d4>  // b.any
   1087c:	ldrb	w0, [x20, #2]
   10880:	cmp	w0, #0x2d
   10884:	b.ne	1082c <argp_failure@@Base+0x4d4>  // b.any
   10888:	add	x20, x20, #0x3
   1088c:	sub	x23, x23, #0x3
   10890:	str	w28, [x29, #168]
   10894:	b	1082c <argp_failure@@Base+0x4d4>
   10898:	mov	x19, x1
   1089c:	b	10818 <argp_failure@@Base+0x4c0>
   108a0:	mov	w2, #0xa                   	// #10
   108a4:	mov	x1, #0x0                   	// #0
   108a8:	mov	x0, x19
   108ac:	bl	aa00 <strtol@plt>
   108b0:	str	w0, [x29, #168]
   108b4:	ldr	x0, [x26]
   108b8:	ldrb	w1, [x19]
   108bc:	ldrh	w1, [x0, x1, lsl #1]
   108c0:	tbz	w1, #11, 108d0 <argp_failure@@Base+0x578>
   108c4:	ldrb	w1, [x19, #1]!
   108c8:	ldrh	w1, [x0, x1, lsl #1]
   108cc:	tbnz	w1, #11, 108c4 <argp_failure@@Base+0x56c>
   108d0:	ldrb	w1, [x19]
   108d4:	ldrh	w1, [x0, x1, lsl #1]
   108d8:	tbz	w1, #13, 108f0 <argp_failure@@Base+0x598>
   108dc:	ldrb	w1, [x19, #1]!
   108e0:	ldrh	w1, [x0, x1, lsl #1]
   108e4:	tbnz	w1, #13, 108dc <argp_failure@@Base+0x584>
   108e8:	str	w28, [x29, #176]
   108ec:	b	1082c <argp_failure@@Base+0x4d4>
   108f0:	str	w28, [x29, #176]
   108f4:	b	1082c <argp_failure@@Base+0x4d4>
   108f8:	ldrb	w0, [x21, #15]
   108fc:	ldr	x1, [x29, #144]
   10900:	ldr	w2, [x29, #168]
   10904:	str	w2, [x1, x0]
   10908:	cmp	x21, x25
   1090c:	b.eq	109b8 <argp_failure@@Base+0x660>  // b.none
   10910:	ldrb	w0, [x19]
   10914:	cmp	w0, #0x2c
   10918:	cset	w0, eq  // eq = none
   1091c:	cinc	x20, x19, eq  // eq = none
   10920:	ldrb	w0, [x19, w0, uxtw]
   10924:	cbz	w0, 10714 <argp_failure@@Base+0x3bc>
   10928:	ldr	x0, [x26]
   1092c:	ldrb	w3, [x20]
   10930:	and	x1, x3, #0xff
   10934:	ldrh	w1, [x0, x1, lsl #1]
   10938:	tbz	w1, #13, 1070c <argp_failure@@Base+0x3b4>
   1093c:	add	x20, x20, #0x1
   10940:	b	1092c <argp_failure@@Base+0x5d4>
   10944:	add	x21, x21, #0x10
   10948:	cmp	x21, x25
   1094c:	b.eq	109b8 <argp_failure@@Base+0x660>  // b.none
   10950:	mov	x0, x21
   10954:	bl	a340 <strlen@plt>
   10958:	cmp	x0, x23
   1095c:	b.ne	10944 <argp_failure@@Base+0x5ec>  // b.any
   10960:	mov	x2, x23
   10964:	mov	x1, x21
   10968:	mov	x0, x20
   1096c:	bl	a6c0 <strncmp@plt>
   10970:	cbnz	w0, 10944 <argp_failure@@Base+0x5ec>
   10974:	ldr	w0, [x29, #176]
   10978:	cbz	w0, 108f8 <argp_failure@@Base+0x5a0>
   1097c:	ldrb	w0, [x21, #14]
   10980:	cbnz	w0, 108f8 <argp_failure@@Base+0x5a0>
   10984:	mov	w2, #0x5                   	// #5
   10988:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   1098c:	add	x1, x1, #0xd18
   10990:	ldr	x0, [x29, #152]
   10994:	bl	ada0 <dcgettext@plt>
   10998:	mov	x5, x20
   1099c:	mov	w4, w23
   109a0:	mov	x3, x0
   109a4:	mov	w2, #0x0                   	// #0
   109a8:	mov	w1, #0x0                   	// #0
   109ac:	mov	x0, x22
   109b0:	bl	a650 <argp_failure@plt>
   109b4:	b	10908 <argp_failure@@Base+0x5b0>
   109b8:	mov	w2, #0x5                   	// #5
   109bc:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   109c0:	add	x1, x1, #0xd48
   109c4:	ldr	x0, [x29, #152]
   109c8:	bl	ada0 <dcgettext@plt>
   109cc:	mov	x5, x20
   109d0:	mov	w4, w23
   109d4:	mov	x3, x0
   109d8:	mov	w2, #0x0                   	// #0
   109dc:	mov	w1, #0x0                   	// #0
   109e0:	mov	x0, x22
   109e4:	bl	a650 <argp_failure@plt>
   109e8:	b	10910 <argp_failure@@Base+0x5b8>
   109ec:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   109f0:	add	x0, x0, #0xc08
   109f4:	cmp	x22, #0x0
   109f8:	mov	w2, #0x5                   	// #5
   109fc:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   10a00:	add	x1, x1, #0xd70
   10a04:	csel	x0, x0, x22, ne  // ne = any
   10a08:	bl	ada0 <dcgettext@plt>
   10a0c:	mov	x4, x20
   10a10:	mov	x3, x0
   10a14:	mov	w2, #0x0                   	// #0
   10a18:	mov	w1, #0x0                   	// #0
   10a1c:	mov	x0, x22
   10a20:	bl	a650 <argp_failure@plt>
   10a24:	b	10714 <argp_failure@@Base+0x3bc>
   10a28:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   10a2c:	add	x0, x0, #0x1d0
   10a30:	ldp	x2, x3, [x29, #216]
   10a34:	stp	x2, x3, [x0]
   10a38:	ldp	x2, x3, [x29, #232]
   10a3c:	stp	x2, x3, [x0, #16]
   10a40:	ldr	x1, [x29, #248]
   10a44:	str	x1, [x0, #32]
   10a48:	mov	w1, #0x1                   	// #1
   10a4c:	str	w1, [x0, #36]
   10a50:	b	105f8 <argp_failure@@Base+0x2a0>
   10a54:	ldr	x0, [x29, #128]
   10a58:	bl	a620 <funlockfile@plt>
   10a5c:	b	11580 <argp_failure@@Base+0x1228>
   10a60:	mov	x1, #0x0                   	// #0
   10a64:	ldr	x0, [x29, #184]
   10a68:	bl	fdd4 <argp_fmtstream_point@@Base+0x1668>
   10a6c:	mov	x28, x0
   10a70:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   10a74:	add	x1, x1, #0xdd0
   10a78:	bl	e9bc <argp_fmtstream_point@@Base+0x250>
   10a7c:	cbz	x0, 10a88 <argp_failure@@Base+0x730>
   10a80:	mov	w1, #0xffffffff            	// #-1
   10a84:	str	w1, [x0, #24]
   10a88:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   10a8c:	add	x1, x1, #0xdd8
   10a90:	mov	x0, x28
   10a94:	bl	e9bc <argp_fmtstream_point@@Base+0x250>
   10a98:	cbz	x0, 10aa4 <argp_failure@@Base+0x74c>
   10a9c:	mov	w1, #0xffffffff            	// #-1
   10aa0:	str	w1, [x0, #24]
   10aa4:	ldr	w0, [x28, #8]
   10aa8:	cbz	w0, 10628 <argp_failure@@Base+0x2d0>
   10aac:	ldr	x2, [x28]
   10ab0:	mov	w0, #0x0                   	// #0
   10ab4:	str	w0, [x2, #48]
   10ab8:	add	w0, w0, #0x1
   10abc:	add	x2, x2, #0x38
   10ac0:	ldr	w1, [x28, #8]
   10ac4:	cmp	w0, w1
   10ac8:	b.cc	10ab4 <argp_failure@@Base+0x75c>  // b.lo, b.ul, b.last
   10acc:	adrp	x3, f000 <argp_fmtstream_point@@Base+0x894>
   10ad0:	add	x3, x3, #0xb6c
   10ad4:	mov	x2, #0x38                  	// #56
   10ad8:	mov	w1, w1
   10adc:	ldr	x0, [x28]
   10ae0:	bl	a500 <qsort@plt>
   10ae4:	b	10628 <argp_failure@@Base+0x2d0>
   10ae8:	ldr	x0, [x29, #184]
   10aec:	bl	ea84 <argp_fmtstream_point@@Base+0x318>
   10af0:	mov	x2, x0
   10af4:	add	x0, x0, #0xf
   10af8:	and	x0, x0, #0xfffffffffffffff0
   10afc:	sub	sp, sp, x0
   10b00:	mov	x26, sp
   10b04:	mov	w1, #0x0                   	// #0
   10b08:	mov	x0, x26
   10b0c:	bl	a6f0 <memset@plt>
   10b10:	mov	w21, #0x1                   	// #1
   10b14:	adrp	x25, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   10b18:	add	x25, x25, #0x1d0
   10b1c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   10b20:	add	x0, x0, #0xdf0
   10b24:	str	x0, [x29, #168]
   10b28:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   10b2c:	add	x0, x0, #0xc08
   10b30:	str	x0, [x29, #176]
   10b34:	b	10c14 <argp_failure@@Base+0x8bc>
   10b38:	mov	x0, x19
   10b3c:	bl	a520 <_argp_fmtstream_update@plt>
   10b40:	b	10c30 <argp_failure@@Base+0x8d8>
   10b44:	mov	w2, #0x5                   	// #5
   10b48:	ldr	x1, [x29, #168]
   10b4c:	ldr	x0, [x29, #176]
   10b50:	bl	ada0 <dcgettext@plt>
   10b54:	mov	x3, x27
   10b58:	mov	x2, x0
   10b5c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   10b60:	add	x1, x1, #0xde8
   10b64:	mov	x0, x19
   10b68:	bl	a8f0 <argp_fmtstream_printf@plt>
   10b6c:	b	10c70 <argp_failure@@Base+0x918>
   10b70:	mov	x0, x19
   10b74:	bl	a520 <_argp_fmtstream_update@plt>
   10b78:	b	10c8c <argp_failure@@Base+0x934>
   10b7c:	mov	x1, x19
   10b80:	mov	x0, x28
   10b84:	bl	ec28 <argp_fmtstream_point@@Base+0x4bc>
   10b88:	orr	w24, w24, #0x2
   10b8c:	mov	x4, x19
   10b90:	mov	w3, #0x1                   	// #1
   10b94:	add	x2, x29, #0xd8
   10b98:	mov	x1, x22
   10b9c:	ldr	x0, [x29, #184]
   10ba0:	bl	f0e0 <argp_fmtstream_point@@Base+0x974>
   10ba4:	mov	w20, w0
   10ba8:	ldr	x0, [x19, #56]
   10bac:	ldr	x1, [x19, #48]
   10bb0:	sub	x0, x0, x1
   10bb4:	ldr	x1, [x19, #32]
   10bb8:	cmp	x0, x1
   10bbc:	b.hi	10d08 <argp_failure@@Base+0x9b0>  // b.pmore
   10bc0:	sxtw	x23, w23
   10bc4:	str	x23, [x19, #24]
   10bc8:	sxtw	x21, w21
   10bcc:	ldr	x0, [x19, #56]
   10bd0:	ldr	x1, [x19, #48]
   10bd4:	sub	x0, x0, x1
   10bd8:	ldr	x1, [x19, #32]
   10bdc:	cmp	x0, x1
   10be0:	b.hi	10d14 <argp_failure@@Base+0x9bc>  // b.pmore
   10be4:	str	x21, [x19, #8]
   10be8:	ldr	x1, [x19, #56]
   10bec:	ldr	x0, [x19, #64]
   10bf0:	cmp	x1, x0
   10bf4:	b.cs	10d20 <argp_failure@@Base+0x9c8>  // b.hs, b.nlast
   10bf8:	ldr	x0, [x19, #56]
   10bfc:	add	x1, x0, #0x1
   10c00:	str	x1, [x19, #56]
   10c04:	mov	w1, #0xa                   	// #10
   10c08:	strb	w1, [x0]
   10c0c:	mov	w21, #0x0                   	// #0
   10c10:	cbz	w20, 10d34 <argp_failure@@Base+0x9dc>
   10c14:	ldr	w20, [x25, #28]
   10c18:	ldr	x0, [x19, #56]
   10c1c:	ldr	x1, [x19, #48]
   10c20:	sub	x0, x0, x1
   10c24:	ldr	x1, [x19, #32]
   10c28:	cmp	x0, x1
   10c2c:	b.hi	10b38 <argp_failure@@Base+0x7e0>  // b.pmore
   10c30:	ldr	x23, [x19, #24]
   10c34:	sxtw	x20, w20
   10c38:	str	x20, [x19, #24]
   10c3c:	str	x26, [x29, #216]
   10c40:	cbz	w21, 10b44 <argp_failure@@Base+0x7ec>
   10c44:	mov	w2, #0x5                   	// #5
   10c48:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   10c4c:	add	x1, x1, #0xde0
   10c50:	ldr	x0, [x29, #176]
   10c54:	bl	ada0 <dcgettext@plt>
   10c58:	mov	x3, x27
   10c5c:	mov	x2, x0
   10c60:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   10c64:	add	x1, x1, #0xde8
   10c68:	mov	x0, x19
   10c6c:	bl	a8f0 <argp_fmtstream_printf@plt>
   10c70:	ldrsw	x20, [x25, #28]
   10c74:	ldr	x0, [x19, #56]
   10c78:	ldr	x1, [x19, #48]
   10c7c:	sub	x0, x0, x1
   10c80:	ldr	x1, [x19, #32]
   10c84:	cmp	x0, x1
   10c88:	b.hi	10b70 <argp_failure@@Base+0x818>  // b.pmore
   10c8c:	ldr	x21, [x19, #8]
   10c90:	str	x20, [x19, #8]
   10c94:	tbz	w24, #1, 10b7c <argp_failure@@Base+0x824>
   10c98:	ldr	w0, [x28, #8]
   10c9c:	cbz	w0, 10b8c <argp_failure@@Base+0x834>
   10ca0:	mov	w2, #0x5                   	// #5
   10ca4:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   10ca8:	add	x1, x1, #0xdf8
   10cac:	ldr	x0, [x29, #176]
   10cb0:	bl	ada0 <dcgettext@plt>
   10cb4:	str	x0, [x29, #160]
   10cb8:	bl	a340 <strlen@plt>
   10cbc:	mov	x20, x0
   10cc0:	cbz	x0, 10b8c <argp_failure@@Base+0x834>
   10cc4:	ldr	x0, [x19, #56]
   10cc8:	add	x0, x0, x20
   10ccc:	ldr	x1, [x19, #64]
   10cd0:	cmp	x1, x0
   10cd4:	b.cs	10ce8 <argp_failure@@Base+0x990>  // b.hs, b.nlast
   10cd8:	mov	x1, x20
   10cdc:	mov	x0, x19
   10ce0:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10ce4:	cbz	w0, 10b8c <argp_failure@@Base+0x834>
   10ce8:	mov	x2, x20
   10cec:	ldr	x1, [x29, #160]
   10cf0:	ldr	x0, [x19, #56]
   10cf4:	bl	a2c0 <memcpy@plt>
   10cf8:	ldr	x0, [x19, #56]
   10cfc:	add	x20, x0, x20
   10d00:	str	x20, [x19, #56]
   10d04:	b	10b8c <argp_failure@@Base+0x834>
   10d08:	mov	x0, x19
   10d0c:	bl	a520 <_argp_fmtstream_update@plt>
   10d10:	b	10bc0 <argp_failure@@Base+0x868>
   10d14:	mov	x0, x19
   10d18:	bl	a520 <_argp_fmtstream_update@plt>
   10d1c:	b	10be4 <argp_failure@@Base+0x88c>
   10d20:	mov	x1, #0x1                   	// #1
   10d24:	mov	x0, x19
   10d28:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10d2c:	cbnz	w0, 10bf8 <argp_failure@@Base+0x8a0>
   10d30:	b	10c0c <argp_failure@@Base+0x8b4>
   10d34:	mov	w20, #0x1                   	// #1
   10d38:	b	10634 <argp_failure@@Base+0x2dc>
   10d3c:	mov	x5, x19
   10d40:	mov	w4, #0x1                   	// #1
   10d44:	mov	w3, #0x0                   	// #0
   10d48:	mov	w2, #0x0                   	// #0
   10d4c:	mov	x1, x22
   10d50:	ldr	x0, [x29, #184]
   10d54:	bl	f684 <argp_fmtstream_point@@Base+0xf18>
   10d58:	orr	w20, w20, w0
   10d5c:	b	10638 <argp_failure@@Base+0x2e0>
   10d60:	mov	w2, #0x5                   	// #5
   10d64:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   10d68:	add	x1, x1, #0xe08
   10d6c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   10d70:	add	x0, x0, #0xc08
   10d74:	bl	ada0 <dcgettext@plt>
   10d78:	mov	x3, x27
   10d7c:	mov	x2, x27
   10d80:	mov	x1, x0
   10d84:	mov	x0, x19
   10d88:	bl	a8f0 <argp_fmtstream_printf@plt>
   10d8c:	mov	w20, #0x1                   	// #1
   10d90:	b	1063c <argp_failure@@Base+0x2e4>
   10d94:	ldr	x1, [x19, #56]
   10d98:	ldr	x0, [x19, #64]
   10d9c:	cmp	x1, x0
   10da0:	b.cs	10dbc <argp_failure@@Base+0xa64>  // b.hs, b.nlast
   10da4:	ldr	x0, [x19, #56]
   10da8:	add	x1, x0, #0x1
   10dac:	str	x1, [x19, #56]
   10db0:	mov	w1, #0xa                   	// #10
   10db4:	strb	w1, [x0]
   10db8:	b	1064c <argp_failure@@Base+0x2f4>
   10dbc:	mov	x1, #0x1                   	// #1
   10dc0:	mov	x0, x19
   10dc4:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10dc8:	cbnz	w0, 10da4 <argp_failure@@Base+0xa4c>
   10dcc:	b	1064c <argp_failure@@Base+0x2f4>
   10dd0:	mov	x0, x19
   10dd4:	bl	a520 <_argp_fmtstream_update@plt>
   10dd8:	b	113c8 <argp_failure@@Base+0x1070>
   10ddc:	add	x0, x0, #0x30
   10de0:	cmp	x0, x1
   10de4:	b.eq	10e08 <argp_failure@@Base+0xab0>  // b.none
   10de8:	ldr	x2, [x0]
   10dec:	cbz	x2, 10ddc <argp_failure@@Base+0xa84>
   10df0:	ldr	w2, [x0, #24]
   10df4:	tbnz	w2, #1, 10ddc <argp_failure@@Base+0xa84>
   10df8:	mov	w0, #0x1                   	// #1
   10dfc:	str	w0, [x29, #152]
   10e00:	b	10e08 <argp_failure@@Base+0xab0>
   10e04:	str	wzr, [x29, #152]
   10e08:	ldr	w23, [x27, #8]
   10e0c:	ldr	x0, [x19, #56]
   10e10:	ldr	x1, [x19, #48]
   10e14:	sub	x0, x0, x1
   10e18:	ldr	x1, [x19, #32]
   10e1c:	cmp	x0, x1
   10e20:	b.hi	10e5c <argp_failure@@Base+0xb04>  // b.pmore
   10e24:	sxtw	x23, w23
   10e28:	str	x23, [x19, #24]
   10e2c:	ldr	w0, [x20, #8]
   10e30:	cbz	w0, 10f44 <argp_failure@@Base+0xbec>
   10e34:	sub	w0, w0, #0x1
   10e38:	add	x0, x0, #0x1
   10e3c:	add	x0, x0, x0, lsl #1
   10e40:	add	x0, x21, x0, lsl #4
   10e44:	str	x0, [x29, #160]
   10e48:	mov	x23, x21
   10e4c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   10e50:	add	x0, x0, #0xe40
   10e54:	str	x0, [x29, #120]
   10e58:	b	11710 <argp_failure@@Base+0x13b8>
   10e5c:	mov	x0, x19
   10e60:	bl	a520 <_argp_fmtstream_update@plt>
   10e64:	b	10e24 <argp_failure@@Base+0xacc>
   10e68:	ldr	x0, [x29, #176]
   10e6c:	tbz	w0, #1, 10e78 <argp_failure@@Base+0xb20>
   10e70:	add	x26, x26, #0x1
   10e74:	b	11700 <argp_failure@@Base+0x13a8>
   10e78:	ldr	x1, [x29, #168]
   10e7c:	ldr	w0, [x27, #8]
   10e80:	bl	f500 <argp_fmtstream_point@@Base+0xd94>
   10e84:	ldr	x1, [x19, #56]
   10e88:	ldr	x0, [x19, #64]
   10e8c:	cmp	x1, x0
   10e90:	b.cs	10f08 <argp_failure@@Base+0xbb0>  // b.hs, b.nlast
   10e94:	ldr	x0, [x19, #56]
   10e98:	add	x1, x0, #0x1
   10e9c:	str	x1, [x19, #56]
   10ea0:	mov	w1, #0x2d                  	// #45
   10ea4:	strb	w1, [x0]
   10ea8:	ldrb	w25, [x26]
   10eac:	ldr	x1, [x19, #56]
   10eb0:	ldr	x0, [x19, #64]
   10eb4:	cmp	x1, x0
   10eb8:	b.cs	10f1c <argp_failure@@Base+0xbc4>  // b.hs, b.nlast
   10ebc:	ldr	x0, [x19, #56]
   10ec0:	add	x1, x0, #0x1
   10ec4:	str	x1, [x19, #56]
   10ec8:	strb	w25, [x0]
   10ecc:	ldr	w0, [x29, #152]
   10ed0:	cbz	w0, 10edc <argp_failure@@Base+0xb84>
   10ed4:	ldr	w0, [x27]
   10ed8:	cbz	w0, 10f30 <argp_failure@@Base+0xbd8>
   10edc:	mov	x3, x22
   10ee0:	cbz	x22, 10eec <argp_failure@@Base+0xb94>
   10ee4:	ldr	x0, [x20, #40]
   10ee8:	ldr	x3, [x0, #48]
   10eec:	mov	x4, x19
   10ef0:	ldr	x2, [x29, #120]
   10ef4:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   10ef8:	add	x1, x1, #0xdc0
   10efc:	mov	x0, x21
   10f00:	bl	e874 <argp_fmtstream_point@@Base+0x108>
   10f04:	b	10e70 <argp_failure@@Base+0xb18>
   10f08:	mov	x1, #0x1                   	// #1
   10f0c:	mov	x0, x19
   10f10:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10f14:	cbnz	w0, 10e94 <argp_failure@@Base+0xb3c>
   10f18:	b	10ea8 <argp_failure@@Base+0xb50>
   10f1c:	mov	x1, #0x1                   	// #1
   10f20:	mov	x0, x19
   10f24:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10f28:	cbnz	w0, 10ebc <argp_failure@@Base+0xb64>
   10f2c:	b	10ecc <argp_failure@@Base+0xb74>
   10f30:	ldr	x0, [x21, #16]
   10f34:	cbz	x0, 10e70 <argp_failure@@Base+0xb18>
   10f38:	mov	w0, #0x1                   	// #1
   10f3c:	str	w0, [x29, #212]
   10f40:	b	10e70 <argp_failure@@Base+0xb18>
   10f44:	ldr	w0, [x21, #24]
   10f48:	tbz	w0, #3, 11038 <argp_failure@@Base+0xce0>
   10f4c:	ldr	w23, [x27, #16]
   10f50:	ldr	x0, [x19, #56]
   10f54:	ldr	x1, [x19, #48]
   10f58:	sub	x0, x0, x1
   10f5c:	ldr	x1, [x19, #32]
   10f60:	cmp	x0, x1
   10f64:	b.hi	10f94 <argp_failure@@Base+0xc3c>  // b.pmore
   10f68:	sxtw	x23, w23
   10f6c:	str	x23, [x19, #24]
   10f70:	ldr	w0, [x20, #8]
   10f74:	cbz	w0, 110f8 <argp_failure@@Base+0xda0>
   10f78:	sub	w26, w0, #0x1
   10f7c:	add	x26, x26, #0x1
   10f80:	add	x26, x26, x26, lsl #1
   10f84:	add	x26, x21, x26, lsl #4
   10f88:	mov	x23, x21
   10f8c:	str	x22, [x29, #176]
   10f90:	b	10fc8 <argp_failure@@Base+0xc70>
   10f94:	mov	x0, x19
   10f98:	bl	a520 <_argp_fmtstream_update@plt>
   10f9c:	b	10f68 <argp_failure@@Base+0xc10>
   10fa0:	mov	x2, x25
   10fa4:	ldr	x1, [x29, #160]
   10fa8:	ldr	x0, [x19, #56]
   10fac:	bl	a2c0 <memcpy@plt>
   10fb0:	ldr	x0, [x19, #56]
   10fb4:	add	x25, x0, x25
   10fb8:	str	x25, [x19, #56]
   10fbc:	add	x23, x23, #0x30
   10fc0:	cmp	x23, x26
   10fc4:	b.eq	110f8 <argp_failure@@Base+0xda0>  // b.none
   10fc8:	ldr	x0, [x23]
   10fcc:	cbz	x0, 10fbc <argp_failure@@Base+0xc64>
   10fd0:	ldr	w0, [x23, #24]
   10fd4:	tbnz	w0, #1, 10fbc <argp_failure@@Base+0xc64>
   10fd8:	ldr	x1, [x29, #168]
   10fdc:	ldr	w0, [x27, #16]
   10fe0:	bl	f500 <argp_fmtstream_point@@Base+0xd94>
   10fe4:	ldr	x0, [x29, #176]
   10fe8:	cbz	x22, 10ff4 <argp_failure@@Base+0xc9c>
   10fec:	ldr	x0, [x20, #40]
   10ff0:	ldr	x0, [x0, #48]
   10ff4:	mov	w2, #0x5                   	// #5
   10ff8:	ldr	x1, [x23]
   10ffc:	bl	ada0 <dcgettext@plt>
   11000:	str	x0, [x29, #160]
   11004:	bl	a340 <strlen@plt>
   11008:	mov	x25, x0
   1100c:	cbz	x0, 10fbc <argp_failure@@Base+0xc64>
   11010:	ldr	x0, [x19, #56]
   11014:	add	x0, x0, x25
   11018:	ldr	x1, [x19, #64]
   1101c:	cmp	x1, x0
   11020:	b.cs	10fa0 <argp_failure@@Base+0xc48>  // b.hs, b.nlast
   11024:	mov	x1, x25
   11028:	mov	x0, x19
   1102c:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11030:	cbz	w0, 10fbc <argp_failure@@Base+0xc64>
   11034:	b	10fa0 <argp_failure@@Base+0xc48>
   11038:	ldr	w23, [x27, #12]
   1103c:	ldr	x0, [x19, #56]
   11040:	ldr	x1, [x19, #48]
   11044:	sub	x0, x0, x1
   11048:	ldr	x1, [x19, #32]
   1104c:	cmp	x0, x1
   11050:	b.hi	11084 <argp_failure@@Base+0xd2c>  // b.pmore
   11054:	sxtw	x23, w23
   11058:	str	x23, [x19, #24]
   1105c:	ldr	w0, [x20, #8]
   11060:	cbz	w0, 110f8 <argp_failure@@Base+0xda0>
   11064:	sub	w25, w0, #0x1
   11068:	add	x25, x25, #0x1
   1106c:	add	x25, x25, x25, lsl #1
   11070:	add	x25, x21, x25, lsl #4
   11074:	mov	x23, x21
   11078:	adrp	x26, 2c000 <vasnprintf@@Base+0x1378>
   1107c:	add	x26, x26, #0xe48
   11080:	b	110c0 <argp_failure@@Base+0xd68>
   11084:	mov	x0, x19
   11088:	bl	a520 <_argp_fmtstream_update@plt>
   1108c:	b	11054 <argp_failure@@Base+0xcfc>
   11090:	ldr	x0, [x20, #40]
   11094:	ldr	x3, [x0, #48]
   11098:	mov	x4, x19
   1109c:	adrp	x2, 2c000 <vasnprintf@@Base+0x1378>
   110a0:	add	x2, x2, #0xe50
   110a4:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   110a8:	add	x1, x1, #0xe58
   110ac:	mov	x0, x21
   110b0:	bl	e874 <argp_fmtstream_point@@Base+0x108>
   110b4:	add	x23, x23, #0x30
   110b8:	cmp	x23, x25
   110bc:	b.eq	110f8 <argp_failure@@Base+0xda0>  // b.none
   110c0:	ldr	x0, [x23]
   110c4:	cbz	x0, 110b4 <argp_failure@@Base+0xd5c>
   110c8:	ldr	w0, [x23, #24]
   110cc:	tbnz	w0, #1, 110b4 <argp_failure@@Base+0xd5c>
   110d0:	ldr	x1, [x29, #168]
   110d4:	ldr	w0, [x27, #12]
   110d8:	bl	f500 <argp_fmtstream_point@@Base+0xd94>
   110dc:	ldr	x2, [x23]
   110e0:	mov	x1, x26
   110e4:	mov	x0, x19
   110e8:	bl	a8f0 <argp_fmtstream_printf@plt>
   110ec:	mov	x3, x22
   110f0:	cbnz	x22, 11090 <argp_failure@@Base+0xd38>
   110f4:	b	11098 <argp_failure@@Base+0xd40>
   110f8:	ldr	x0, [x19, #56]
   110fc:	ldr	x1, [x19, #48]
   11100:	sub	x0, x0, x1
   11104:	ldr	x1, [x19, #32]
   11108:	cmp	x0, x1
   1110c:	b.hi	11160 <argp_failure@@Base+0xe08>  // b.pmore
   11110:	str	xzr, [x19, #8]
   11114:	ldr	w0, [x29, #240]
   11118:	cbz	w0, 1116c <argp_failure@@Base+0xe14>
   1111c:	ldr	w0, [x21, #24]
   11120:	tbnz	w0, #3, 11144 <argp_failure@@Base+0xdec>
   11124:	ldr	w23, [x21, #8]
   11128:	sub	w0, w23, #0x1
   1112c:	cmp	w0, #0xfe
   11130:	b.hi	11144 <argp_failure@@Base+0xdec>  // b.pmore
   11134:	bl	a9d0 <__ctype_b_loc@plt>
   11138:	ldr	x0, [x0]
   1113c:	ldrh	w0, [x0, w23, sxtw #1]
   11140:	tbnz	w0, #14, 11358 <argp_failure@@Base+0x1000>
   11144:	ldr	x0, [x21]
   11148:	cbnz	x0, 11358 <argp_failure@@Base+0x1000>
   1114c:	ldr	x2, [x29, #168]
   11150:	ldr	x1, [x20, #40]
   11154:	ldr	x0, [x21, #32]
   11158:	bl	f2c8 <argp_fmtstream_point@@Base+0xb5c>
   1115c:	b	11354 <argp_failure@@Base+0xffc>
   11160:	mov	x0, x19
   11164:	bl	a520 <_argp_fmtstream_update@plt>
   11168:	b	11110 <argp_failure@@Base+0xdb8>
   1116c:	ldr	x23, [x21, #32]
   11170:	cbz	x23, 11194 <argp_failure@@Base+0xe3c>
   11174:	mov	x0, x22
   11178:	cbz	x22, 11184 <argp_failure@@Base+0xe2c>
   1117c:	ldr	x0, [x20, #40]
   11180:	ldr	x0, [x0, #48]
   11184:	mov	w2, #0x5                   	// #5
   11188:	mov	x1, x23
   1118c:	bl	ada0 <dcgettext@plt>
   11190:	mov	x23, x0
   11194:	mov	x3, x22
   11198:	ldr	x2, [x20, #40]
   1119c:	ldr	w1, [x21, #8]
   111a0:	mov	x0, x23
   111a4:	bl	eadc <argp_fmtstream_point@@Base+0x370>
   111a8:	mov	x21, x0
   111ac:	cbz	x0, 11314 <argp_failure@@Base+0xfbc>
   111b0:	ldrb	w0, [x0]
   111b4:	cbz	w0, 1130c <argp_failure@@Base+0xfb4>
   111b8:	ldr	x0, [x19, #56]
   111bc:	ldr	x1, [x19, #48]
   111c0:	sub	x0, x0, x1
   111c4:	ldr	x1, [x19, #32]
   111c8:	cmp	x0, x1
   111cc:	b.hi	11270 <argp_failure@@Base+0xf18>  // b.pmore
   111d0:	ldr	x25, [x19, #40]
   111d4:	cmp	x25, #0x0
   111d8:	csel	x25, x25, xzr, ge  // ge = tcont
   111dc:	ldrsw	x26, [x27, #20]
   111e0:	str	x26, [x19, #8]
   111e4:	ldr	w26, [x27, #20]
   111e8:	ldr	x0, [x19, #56]
   111ec:	ldr	x1, [x19, #48]
   111f0:	sub	x0, x0, x1
   111f4:	ldr	x1, [x19, #32]
   111f8:	cmp	x0, x1
   111fc:	b.hi	112ac <argp_failure@@Base+0xf54>  // b.pmore
   11200:	sxtw	x26, w26
   11204:	str	x26, [x19, #24]
   11208:	ldr	w1, [x27, #20]
   1120c:	add	w0, w1, #0x3
   11210:	cmp	w25, w0
   11214:	b.hi	112b8 <argp_failure@@Base+0xf60>  // b.pmore
   11218:	cmp	w25, w1
   1121c:	b.cc	112f4 <argp_failure@@Base+0xf9c>  // b.lo, b.ul, b.last
   11220:	ldr	x0, [x19, #56]
   11224:	add	x0, x0, #0x3
   11228:	ldr	x1, [x19, #64]
   1122c:	cmp	x1, x0
   11230:	b.cs	11244 <argp_failure@@Base+0xeec>  // b.hs, b.nlast
   11234:	mov	x1, #0x3                   	// #3
   11238:	mov	x0, x19
   1123c:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11240:	cbz	w0, 112fc <argp_failure@@Base+0xfa4>
   11244:	ldr	x1, [x19, #56]
   11248:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1124c:	add	x0, x0, #0xe60
   11250:	ldrh	w2, [x0]
   11254:	strh	w2, [x1]
   11258:	ldrb	w0, [x0, #2]
   1125c:	strb	w0, [x1, #2]
   11260:	ldr	x0, [x19, #56]
   11264:	add	x0, x0, #0x3
   11268:	str	x0, [x19, #56]
   1126c:	b	112fc <argp_failure@@Base+0xfa4>
   11270:	mov	x0, x19
   11274:	bl	a520 <_argp_fmtstream_update@plt>
   11278:	ldr	x25, [x19, #40]
   1127c:	cmp	x25, #0x0
   11280:	csel	x25, x25, xzr, ge  // ge = tcont
   11284:	ldrsw	x26, [x27, #20]
   11288:	ldr	x0, [x19, #56]
   1128c:	ldr	x1, [x19, #48]
   11290:	sub	x0, x0, x1
   11294:	ldr	x1, [x19, #32]
   11298:	cmp	x0, x1
   1129c:	b.ls	111e0 <argp_failure@@Base+0xe88>  // b.plast
   112a0:	mov	x0, x19
   112a4:	bl	a520 <_argp_fmtstream_update@plt>
   112a8:	b	111e0 <argp_failure@@Base+0xe88>
   112ac:	mov	x0, x19
   112b0:	bl	a520 <_argp_fmtstream_update@plt>
   112b4:	b	11200 <argp_failure@@Base+0xea8>
   112b8:	ldr	x1, [x19, #56]
   112bc:	ldr	x0, [x19, #64]
   112c0:	cmp	x1, x0
   112c4:	b.cs	112e0 <argp_failure@@Base+0xf88>  // b.hs, b.nlast
   112c8:	ldr	x0, [x19, #56]
   112cc:	add	x1, x0, #0x1
   112d0:	str	x1, [x19, #56]
   112d4:	mov	w1, #0xa                   	// #10
   112d8:	strb	w1, [x0]
   112dc:	b	112fc <argp_failure@@Base+0xfa4>
   112e0:	mov	x1, #0x1                   	// #1
   112e4:	mov	x0, x19
   112e8:	bl	ad80 <_argp_fmtstream_ensure@plt>
   112ec:	cbnz	w0, 112c8 <argp_failure@@Base+0xf70>
   112f0:	b	112fc <argp_failure@@Base+0xfa4>
   112f4:	mov	x0, x19
   112f8:	bl	ee58 <argp_fmtstream_point@@Base+0x6ec>
   112fc:	mov	x0, x21
   11300:	bl	a340 <strlen@plt>
   11304:	mov	x25, x0
   11308:	cbnz	x0, 11428 <argp_failure@@Base+0x10d0>
   1130c:	cmp	x23, x21
   11310:	b.ne	1146c <argp_failure@@Base+0x1114>  // b.any
   11314:	ldr	x0, [x19, #56]
   11318:	ldr	x1, [x19, #48]
   1131c:	sub	x0, x0, x1
   11320:	ldr	x1, [x19, #32]
   11324:	cmp	x0, x1
   11328:	b.hi	11478 <argp_failure@@Base+0x1120>  // b.pmore
   1132c:	str	xzr, [x19, #8]
   11330:	ldr	x1, [x19, #56]
   11334:	ldr	x0, [x19, #64]
   11338:	cmp	x1, x0
   1133c:	b.cs	11484 <argp_failure@@Base+0x112c>  // b.hs, b.nlast
   11340:	ldr	x0, [x19, #56]
   11344:	add	x1, x0, #0x1
   11348:	str	x1, [x19, #56]
   1134c:	mov	w1, #0xa                   	// #10
   11350:	strb	w1, [x0]
   11354:	str	x20, [x29, #200]
   11358:	ldrsw	x21, [x29, #144]
   1135c:	ldr	x0, [x19, #56]
   11360:	ldr	x1, [x19, #48]
   11364:	sub	x0, x0, x1
   11368:	ldr	x1, [x19, #32]
   1136c:	cmp	x0, x1
   11370:	b.hi	11498 <argp_failure@@Base+0x1140>  // b.pmore
   11374:	str	x21, [x19, #8]
   11378:	ldr	x0, [x19, #56]
   1137c:	ldr	x1, [x19, #48]
   11380:	sub	x0, x0, x1
   11384:	ldr	x1, [x19, #32]
   11388:	cmp	x0, x1
   1138c:	b.hi	114a4 <argp_failure@@Base+0x114c>  // b.pmore
   11390:	ldrsw	x0, [x29, #136]
   11394:	str	x0, [x19, #24]
   11398:	add	x20, x20, #0x38
   1139c:	ldr	x0, [x29, #112]
   113a0:	cmp	x0, x20
   113a4:	b.eq	114b0 <argp_failure@@Base+0x1158>  // b.none
   113a8:	ldr	x21, [x20]
   113ac:	ldr	x26, [x20, #16]
   113b0:	ldr	x0, [x19, #56]
   113b4:	ldr	x1, [x19, #48]
   113b8:	sub	x0, x0, x1
   113bc:	ldr	x1, [x19, #32]
   113c0:	cmp	x0, x1
   113c4:	b.hi	10dd0 <argp_failure@@Base+0xa78>  // b.pmore
   113c8:	ldr	x0, [x19, #8]
   113cc:	str	x0, [x29, #144]
   113d0:	str	xzr, [x19, #8]
   113d4:	ldr	x0, [x19, #24]
   113d8:	str	x0, [x29, #136]
   113dc:	str	x20, [x29, #216]
   113e0:	str	x19, [x29, #224]
   113e4:	ldr	x0, [x29, #104]
   113e8:	str	x0, [x29, #232]
   113ec:	mov	w0, #0x1                   	// #1
   113f0:	str	w0, [x29, #240]
   113f4:	str	x22, [x29, #248]
   113f8:	ldr	w0, [x21, #24]
   113fc:	and	w1, w0, #0x8
   11400:	str	w1, [x29, #152]
   11404:	tbnz	w0, #3, 10e04 <argp_failure@@Base+0xaac>
   11408:	ldr	w0, [x20, #8]
   1140c:	cbz	w0, 10e08 <argp_failure@@Base+0xab0>
   11410:	sub	w1, w0, #0x1
   11414:	add	x1, x1, #0x1
   11418:	add	x1, x1, x1, lsl #1
   1141c:	add	x1, x21, x1, lsl #4
   11420:	mov	x0, x21
   11424:	b	10de8 <argp_failure@@Base+0xa90>
   11428:	ldr	x0, [x19, #56]
   1142c:	add	x0, x0, x25
   11430:	ldr	x1, [x19, #64]
   11434:	cmp	x1, x0
   11438:	b.cs	1144c <argp_failure@@Base+0x10f4>  // b.hs, b.nlast
   1143c:	mov	x1, x25
   11440:	mov	x0, x19
   11444:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11448:	cbz	w0, 1130c <argp_failure@@Base+0xfb4>
   1144c:	mov	x2, x25
   11450:	mov	x1, x21
   11454:	ldr	x0, [x19, #56]
   11458:	bl	a2c0 <memcpy@plt>
   1145c:	ldr	x0, [x19, #56]
   11460:	add	x25, x0, x25
   11464:	str	x25, [x19, #56]
   11468:	b	1130c <argp_failure@@Base+0xfb4>
   1146c:	mov	x0, x21
   11470:	bl	aa50 <free@plt>
   11474:	b	11314 <argp_failure@@Base+0xfbc>
   11478:	mov	x0, x19
   1147c:	bl	a520 <_argp_fmtstream_update@plt>
   11480:	b	1132c <argp_failure@@Base+0xfd4>
   11484:	mov	x1, #0x1                   	// #1
   11488:	mov	x0, x19
   1148c:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11490:	cbnz	w0, 11340 <argp_failure@@Base+0xfe8>
   11494:	b	11354 <argp_failure@@Base+0xffc>
   11498:	mov	x0, x19
   1149c:	bl	a520 <_argp_fmtstream_update@plt>
   114a0:	b	11374 <argp_failure@@Base+0x101c>
   114a4:	mov	x0, x19
   114a8:	bl	a520 <_argp_fmtstream_update@plt>
   114ac:	b	11390 <argp_failure@@Base+0x1038>
   114b0:	ldr	w0, [x29, #212]
   114b4:	cbz	w0, 11514 <argp_failure@@Base+0x11bc>
   114b8:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   114bc:	ldr	w0, [x0, #468]
   114c0:	cbz	w0, 11514 <argp_failure@@Base+0x11bc>
   114c4:	cbz	x22, 116d4 <argp_failure@@Base+0x137c>
   114c8:	mov	w2, #0x5                   	// #5
   114cc:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   114d0:	add	x1, x1, #0xe80
   114d4:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   114d8:	add	x0, x0, #0xc08
   114dc:	bl	ada0 <dcgettext@plt>
   114e0:	mov	x21, x0
   114e4:	ldr	x2, [x22]
   114e8:	mov	x3, x22
   114ec:	mov	w1, #0x5                   	// #5
   114f0:	movk	w1, #0x200, lsl #16
   114f4:	mov	x0, x21
   114f8:	bl	eadc <argp_fmtstream_point@@Base+0x370>
   114fc:	mov	x20, x0
   11500:	cbz	x0, 11514 <argp_failure@@Base+0x11bc>
   11504:	ldrb	w0, [x0]
   11508:	cbnz	w0, 115a0 <argp_failure@@Base+0x1248>
   1150c:	cmp	x20, x21
   11510:	b.ne	11668 <argp_failure@@Base+0x1310>  // b.any
   11514:	mov	w20, #0x1                   	// #1
   11518:	tbnz	w24, #5, 11674 <argp_failure@@Base+0x131c>
   1151c:	tbz	w24, #6, 11564 <argp_failure@@Base+0x120c>
   11520:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   11524:	ldr	x0, [x0, #3968]
   11528:	ldr	x0, [x0]
   1152c:	cbz	x0, 11564 <argp_failure@@Base+0x120c>
   11530:	cbnz	w20, 11698 <argp_failure@@Base+0x1340>
   11534:	mov	w2, #0x5                   	// #5
   11538:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   1153c:	add	x1, x1, #0xe68
   11540:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   11544:	add	x0, x0, #0xc08
   11548:	bl	ada0 <dcgettext@plt>
   1154c:	adrp	x2, 46000 <vasnprintf@@Base+0x1b378>
   11550:	ldr	x2, [x2, #3968]
   11554:	ldr	x2, [x2]
   11558:	mov	x1, x0
   1155c:	mov	x0, x19
   11560:	bl	a8f0 <argp_fmtstream_printf@plt>
   11564:	ldr	x0, [x29, #128]
   11568:	bl	a620 <funlockfile@plt>
   1156c:	cbz	x28, 11578 <argp_failure@@Base+0x1220>
   11570:	mov	x0, x28
   11574:	bl	e964 <argp_fmtstream_point@@Base+0x1f8>
   11578:	mov	x0, x19
   1157c:	bl	add0 <argp_fmtstream_free@plt>
   11580:	mov	sp, x29
   11584:	ldp	x19, x20, [sp, #16]
   11588:	ldp	x21, x22, [sp, #32]
   1158c:	ldp	x23, x24, [sp, #48]
   11590:	ldp	x25, x26, [sp, #64]
   11594:	ldp	x27, x28, [sp, #80]
   11598:	ldp	x29, x30, [sp], #256
   1159c:	ret
   115a0:	ldr	x1, [x19, #56]
   115a4:	ldr	x0, [x19, #64]
   115a8:	cmp	x1, x0
   115ac:	b.cs	115fc <argp_failure@@Base+0x12a4>  // b.hs, b.nlast
   115b0:	ldr	x0, [x19, #56]
   115b4:	add	x1, x0, #0x1
   115b8:	str	x1, [x19, #56]
   115bc:	mov	w1, #0xa                   	// #10
   115c0:	strb	w1, [x0]
   115c4:	mov	x0, x20
   115c8:	bl	a340 <strlen@plt>
   115cc:	mov	x23, x0
   115d0:	cbnz	x0, 11610 <argp_failure@@Base+0x12b8>
   115d4:	ldr	x1, [x19, #56]
   115d8:	ldr	x0, [x19, #64]
   115dc:	cmp	x1, x0
   115e0:	b.cs	11654 <argp_failure@@Base+0x12fc>  // b.hs, b.nlast
   115e4:	ldr	x0, [x19, #56]
   115e8:	add	x1, x0, #0x1
   115ec:	str	x1, [x19, #56]
   115f0:	mov	w1, #0xa                   	// #10
   115f4:	strb	w1, [x0]
   115f8:	b	1150c <argp_failure@@Base+0x11b4>
   115fc:	mov	x1, #0x1                   	// #1
   11600:	mov	x0, x19
   11604:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11608:	cbnz	w0, 115b0 <argp_failure@@Base+0x1258>
   1160c:	b	115c4 <argp_failure@@Base+0x126c>
   11610:	ldr	x0, [x19, #56]
   11614:	add	x0, x0, x23
   11618:	ldr	x1, [x19, #64]
   1161c:	cmp	x1, x0
   11620:	b.cs	11634 <argp_failure@@Base+0x12dc>  // b.hs, b.nlast
   11624:	mov	x1, x23
   11628:	mov	x0, x19
   1162c:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11630:	cbz	w0, 115d4 <argp_failure@@Base+0x127c>
   11634:	mov	x2, x23
   11638:	mov	x1, x20
   1163c:	ldr	x0, [x19, #56]
   11640:	bl	a2c0 <memcpy@plt>
   11644:	ldr	x0, [x19, #56]
   11648:	add	x23, x0, x23
   1164c:	str	x23, [x19, #56]
   11650:	b	115d4 <argp_failure@@Base+0x127c>
   11654:	mov	x1, #0x1                   	// #1
   11658:	mov	x0, x19
   1165c:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11660:	cbnz	w0, 115e4 <argp_failure@@Base+0x128c>
   11664:	b	1150c <argp_failure@@Base+0x11b4>
   11668:	mov	x0, x20
   1166c:	bl	aa50 <free@plt>
   11670:	b	11514 <argp_failure@@Base+0x11bc>
   11674:	mov	x5, x19
   11678:	mov	w4, #0x0                   	// #0
   1167c:	mov	w3, w20
   11680:	mov	w2, #0x1                   	// #1
   11684:	mov	x1, x22
   11688:	ldr	x0, [x29, #184]
   1168c:	bl	f684 <argp_fmtstream_point@@Base+0xf18>
   11690:	orr	w20, w20, w0
   11694:	b	1151c <argp_failure@@Base+0x11c4>
   11698:	ldr	x1, [x19, #56]
   1169c:	ldr	x0, [x19, #64]
   116a0:	cmp	x1, x0
   116a4:	b.cs	116c0 <argp_failure@@Base+0x1368>  // b.hs, b.nlast
   116a8:	ldr	x0, [x19, #56]
   116ac:	add	x1, x0, #0x1
   116b0:	str	x1, [x19, #56]
   116b4:	mov	w1, #0xa                   	// #10
   116b8:	strb	w1, [x0]
   116bc:	b	11534 <argp_failure@@Base+0x11dc>
   116c0:	mov	x1, #0x1                   	// #1
   116c4:	mov	x0, x19
   116c8:	bl	ad80 <_argp_fmtstream_ensure@plt>
   116cc:	cbnz	w0, 116a8 <argp_failure@@Base+0x1350>
   116d0:	b	11534 <argp_failure@@Base+0x11dc>
   116d4:	mov	w2, #0x5                   	// #5
   116d8:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   116dc:	add	x1, x1, #0xe80
   116e0:	mov	x0, #0x0                   	// #0
   116e4:	bl	ada0 <dcgettext@plt>
   116e8:	mov	x21, x0
   116ec:	mov	x2, x22
   116f0:	b	114e8 <argp_failure@@Base+0x1190>
   116f4:	ldrb	w0, [x26]
   116f8:	cmp	w0, w25
   116fc:	b.eq	10e68 <argp_failure@@Base+0xb10>  // b.none
   11700:	add	x23, x23, #0x30
   11704:	ldr	x0, [x29, #160]
   11708:	cmp	x23, x0
   1170c:	b.eq	10f44 <argp_failure@@Base+0xbec>  // b.none
   11710:	ldr	w0, [x23, #24]
   11714:	str	w0, [x29, #176]
   11718:	tbnz	w0, #3, 11700 <argp_failure@@Base+0x13a8>
   1171c:	ldr	w25, [x23, #8]
   11720:	sub	w0, w25, #0x1
   11724:	cmp	w0, #0xfe
   11728:	b.hi	11700 <argp_failure@@Base+0x13a8>  // b.pmore
   1172c:	bl	a9d0 <__ctype_b_loc@plt>
   11730:	ldr	x0, [x0]
   11734:	ldrh	w0, [x0, w25, sxtw #1]
   11738:	tbnz	w0, #14, 116f4 <argp_failure@@Base+0x139c>
   1173c:	b	11700 <argp_failure@@Base+0x13a8>
   11740:	ldrb	w1, [x20]
   11744:	mov	x19, x20
   11748:	mov	x23, #0x0                   	// #0
   1174c:	b	10804 <argp_failure@@Base+0x4ac>

0000000000011750 <argp_help@@Base>:
   11750:	stp	x29, x30, [sp, #-16]!
   11754:	mov	x29, sp
   11758:	mov	x4, x3
   1175c:	mov	w3, w2
   11760:	mov	x2, x1
   11764:	mov	x1, #0x0                   	// #0
   11768:	bl	105b0 <argp_failure@@Base+0x258>
   1176c:	ldp	x29, x30, [sp], #16
   11770:	ret

0000000000011774 <argp_state_help@@Base>:
   11774:	stp	x29, x30, [sp, #-32]!
   11778:	mov	x29, sp
   1177c:	stp	x19, x20, [sp, #16]
   11780:	mov	w20, w2
   11784:	cbz	x0, 117a0 <argp_state_help@@Base+0x2c>
   11788:	mov	x19, x0
   1178c:	ldr	w0, [x0, #28]
   11790:	tbz	w0, #1, 117d8 <argp_state_help@@Base+0x64>
   11794:	ldp	x19, x20, [sp, #16]
   11798:	ldp	x29, x30, [sp], #32
   1179c:	ret
   117a0:	cbz	x1, 11794 <argp_state_help@@Base+0x20>
   117a4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   117a8:	ldr	x0, [x0, #4008]
   117ac:	ldr	x4, [x0]
   117b0:	mov	w3, w2
   117b4:	mov	x2, x1
   117b8:	mov	x1, #0x0                   	// #0
   117bc:	mov	x0, #0x0                   	// #0
   117c0:	bl	105b0 <argp_failure@@Base+0x258>
   117c4:	b	1180c <argp_state_help@@Base+0x98>
   117c8:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   117cc:	ldr	x0, [x0, #4048]
   117d0:	ldr	w0, [x0]
   117d4:	bl	a350 <exit@plt>
   117d8:	cbz	x1, 11794 <argp_state_help@@Base+0x20>
   117dc:	ldr	w2, [x19, #28]
   117e0:	orr	w0, w20, #0x80
   117e4:	tst	x2, #0x40
   117e8:	csel	w20, w0, w20, ne  // ne = any
   117ec:	ldr	x4, [x19, #64]
   117f0:	mov	w3, w20
   117f4:	mov	x2, x1
   117f8:	mov	x1, x19
   117fc:	ldr	x0, [x19]
   11800:	bl	105b0 <argp_failure@@Base+0x258>
   11804:	ldr	w0, [x19, #28]
   11808:	tbnz	w0, #5, 11794 <argp_state_help@@Base+0x20>
   1180c:	tbnz	w20, #8, 117c8 <argp_state_help@@Base+0x54>
   11810:	tbz	w20, #9, 11794 <argp_state_help@@Base+0x20>
   11814:	mov	w0, #0x0                   	// #0
   11818:	bl	a350 <exit@plt>

000000000001181c <argp_error@@Base>:
   1181c:	stp	x29, x30, [sp, #-288]!
   11820:	mov	x29, sp
   11824:	stp	x19, x20, [sp, #16]
   11828:	str	x21, [sp, #32]
   1182c:	mov	x20, x0
   11830:	mov	x21, x1
   11834:	str	x2, [sp, #240]
   11838:	str	x3, [sp, #248]
   1183c:	str	x4, [sp, #256]
   11840:	str	x5, [sp, #264]
   11844:	str	x6, [sp, #272]
   11848:	str	x7, [sp, #280]
   1184c:	str	q0, [sp, #112]
   11850:	str	q1, [sp, #128]
   11854:	str	q2, [sp, #144]
   11858:	str	q3, [sp, #160]
   1185c:	str	q4, [sp, #176]
   11860:	str	q5, [sp, #192]
   11864:	str	q6, [sp, #208]
   11868:	str	q7, [sp, #224]
   1186c:	cbz	x0, 11960 <argp_error@@Base+0x144>
   11870:	ldr	w0, [x0, #28]
   11874:	tbnz	w0, #1, 11950 <argp_error@@Base+0x134>
   11878:	ldr	x19, [x20, #72]
   1187c:	cbz	x19, 11950 <argp_error@@Base+0x134>
   11880:	mov	x0, x19
   11884:	bl	a3a0 <flockfile@plt>
   11888:	add	x0, sp, #0x120
   1188c:	str	x0, [sp, #80]
   11890:	str	x0, [sp, #88]
   11894:	add	x0, sp, #0xf0
   11898:	str	x0, [sp, #96]
   1189c:	mov	w0, #0xffffffd0            	// #-48
   118a0:	str	w0, [sp, #104]
   118a4:	mov	w0, #0xffffff80            	// #-128
   118a8:	str	w0, [sp, #108]
   118ac:	ldr	x0, [x20, #64]
   118b0:	mov	x1, x19
   118b4:	bl	ae00 <fputs_unlocked@plt>
   118b8:	ldr	x0, [x19, #40]
   118bc:	ldr	x1, [x19, #48]
   118c0:	cmp	x0, x1
   118c4:	b.cs	119ac <argp_error@@Base+0x190>  // b.hs, b.nlast
   118c8:	add	x1, x0, #0x1
   118cc:	str	x1, [x19, #40]
   118d0:	mov	w1, #0x3a                  	// #58
   118d4:	strb	w1, [x0]
   118d8:	ldr	x0, [x19, #40]
   118dc:	ldr	x1, [x19, #48]
   118e0:	cmp	x0, x1
   118e4:	b.cs	119bc <argp_error@@Base+0x1a0>  // b.hs, b.nlast
   118e8:	add	x1, x0, #0x1
   118ec:	str	x1, [x19, #40]
   118f0:	mov	w1, #0x20                  	// #32
   118f4:	strb	w1, [x0]
   118f8:	ldp	x0, x1, [sp, #80]
   118fc:	stp	x0, x1, [sp, #48]
   11900:	ldp	x0, x1, [sp, #96]
   11904:	stp	x0, x1, [sp, #64]
   11908:	add	x2, sp, #0x30
   1190c:	mov	x1, x21
   11910:	mov	x0, x19
   11914:	bl	ae80 <vfprintf@plt>
   11918:	ldr	x0, [x19, #40]
   1191c:	ldr	x1, [x19, #48]
   11920:	cmp	x0, x1
   11924:	b.cs	119cc <argp_error@@Base+0x1b0>  // b.hs, b.nlast
   11928:	add	x1, x0, #0x1
   1192c:	str	x1, [x19, #40]
   11930:	mov	w1, #0xa                   	// #10
   11934:	strb	w1, [x0]
   11938:	mov	w2, #0x104                 	// #260
   1193c:	mov	x1, x19
   11940:	mov	x0, x20
   11944:	bl	ad90 <argp_state_help@plt>
   11948:	mov	x0, x19
   1194c:	bl	a620 <funlockfile@plt>
   11950:	ldp	x19, x20, [sp, #16]
   11954:	ldr	x21, [sp, #32]
   11958:	ldp	x29, x30, [sp], #288
   1195c:	ret
   11960:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   11964:	ldr	x0, [x0, #3816]
   11968:	ldr	x19, [x0]
   1196c:	cbz	x19, 11950 <argp_error@@Base+0x134>
   11970:	mov	x0, x19
   11974:	bl	a3a0 <flockfile@plt>
   11978:	add	x0, sp, #0x120
   1197c:	str	x0, [sp, #80]
   11980:	str	x0, [sp, #88]
   11984:	add	x0, sp, #0xf0
   11988:	str	x0, [sp, #96]
   1198c:	mov	w0, #0xffffffd0            	// #-48
   11990:	str	w0, [sp, #104]
   11994:	mov	w0, #0xffffff80            	// #-128
   11998:	str	w0, [sp, #108]
   1199c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   119a0:	ldr	x0, [x0, #4008]
   119a4:	ldr	x0, [x0]
   119a8:	b	118b0 <argp_error@@Base+0x94>
   119ac:	mov	w1, #0x3a                  	// #58
   119b0:	mov	x0, x19
   119b4:	bl	a940 <__overflow@plt>
   119b8:	b	118d8 <argp_error@@Base+0xbc>
   119bc:	mov	w1, #0x20                  	// #32
   119c0:	mov	x0, x19
   119c4:	bl	a940 <__overflow@plt>
   119c8:	b	118f8 <argp_error@@Base+0xdc>
   119cc:	mov	w1, #0xa                   	// #10
   119d0:	mov	x0, x19
   119d4:	bl	a940 <__overflow@plt>
   119d8:	b	11938 <argp_error@@Base+0x11c>
   119dc:	stp	x29, x30, [sp, #-32]!
   119e0:	mov	x29, sp
   119e4:	stp	x19, x20, [sp, #16]
   119e8:	mov	x19, x0
   119ec:	mov	w0, w2
   119f0:	ldr	x2, [x19]
   119f4:	cbz	x2, 11a40 <argp_error@@Base+0x224>
   119f8:	mov	x20, x1
   119fc:	mov	x1, x3
   11a00:	ldr	x2, [x19, #64]
   11a04:	str	x2, [x20, #56]
   11a08:	ldr	x2, [x19, #48]
   11a0c:	str	x2, [x20, #40]
   11a10:	ldr	x2, [x19, #56]
   11a14:	str	x2, [x20, #48]
   11a18:	ldr	w2, [x19, #24]
   11a1c:	str	w2, [x20, #32]
   11a20:	ldr	x3, [x19]
   11a24:	mov	x2, x20
   11a28:	blr	x3
   11a2c:	ldr	x1, [x20, #56]
   11a30:	str	x1, [x19, #64]
   11a34:	ldp	x19, x20, [sp, #16]
   11a38:	ldp	x29, x30, [sp], #32
   11a3c:	ret
   11a40:	mov	w0, #0x7                   	// #7
   11a44:	b	11a34 <argp_error@@Base+0x218>
   11a48:	stp	x29, x30, [sp, #-32]!
   11a4c:	mov	x29, sp
   11a50:	stp	x19, x20, [sp, #16]
   11a54:	mov	x19, x1
   11a58:	ldr	x20, [x0, #32]
   11a5c:	ldr	x2, [x0]
   11a60:	cbz	x2, 11a78 <argp_error@@Base+0x25c>
   11a64:	ldr	x0, [x1, #16]
   11a68:	add	x0, x0, #0x1
   11a6c:	str	x0, [x1, #16]
   11a70:	mov	w0, #0x0                   	// #0
   11a74:	b	11a94 <argp_error@@Base+0x278>
   11a78:	ldr	x0, [x0, #8]
   11a7c:	cbz	x0, 11ad4 <argp_error@@Base+0x2b8>
   11a80:	ldr	x0, [x1, #16]
   11a84:	add	x0, x0, #0x1
   11a88:	str	x0, [x1, #16]
   11a8c:	b	11ad4 <argp_error@@Base+0x2b8>
   11a90:	add	w0, w0, #0x1
   11a94:	add	x2, x2, #0x30
   11a98:	ldur	w3, [x2, #-40]
   11a9c:	cbnz	w3, 11a90 <argp_error@@Base+0x274>
   11aa0:	ldur	x3, [x2, #-48]
   11aa4:	cbnz	x3, 11a90 <argp_error@@Base+0x274>
   11aa8:	ldur	x1, [x2, #-16]
   11aac:	cbnz	x1, 11a90 <argp_error@@Base+0x274>
   11ab0:	ldur	w1, [x2, #-8]
   11ab4:	cbnz	w1, 11a90 <argp_error@@Base+0x274>
   11ab8:	add	w1, w0, w0, lsl #1
   11abc:	ldr	x2, [x19]
   11ac0:	add	x1, x2, w1, sxtw
   11ac4:	str	x1, [x19]
   11ac8:	ldr	x1, [x19, #8]
   11acc:	add	x0, x1, w0, sxtw
   11ad0:	str	x0, [x19, #8]
   11ad4:	cbz	x20, 11afc <argp_error@@Base+0x2e0>
   11ad8:	ldr	x0, [x20]
   11adc:	cbz	x0, 11afc <argp_error@@Base+0x2e0>
   11ae0:	mov	x1, x19
   11ae4:	bl	11a48 <argp_error@@Base+0x22c>
   11ae8:	ldr	x0, [x19, #24]
   11aec:	add	x0, x0, #0x1
   11af0:	str	x0, [x19, #24]
   11af4:	ldr	x0, [x20, #32]!
   11af8:	cbnz	x0, 11ae0 <argp_error@@Base+0x2c4>
   11afc:	ldp	x19, x20, [sp, #16]
   11b00:	ldp	x29, x30, [sp], #32
   11b04:	ret
   11b08:	cmp	w0, #0x56
   11b0c:	b.eq	11b18 <argp_error@@Base+0x2fc>  // b.none
   11b10:	mov	w0, #0x7                   	// #7
   11b14:	ret
   11b18:	stp	x29, x30, [sp, #-32]!
   11b1c:	mov	x29, sp
   11b20:	str	x19, [sp, #16]
   11b24:	mov	x19, x2
   11b28:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   11b2c:	ldr	x0, [x0, #4056]
   11b30:	ldr	x2, [x0]
   11b34:	cbz	x2, 11b5c <argp_error@@Base+0x340>
   11b38:	mov	x1, x19
   11b3c:	ldr	x0, [x19, #80]
   11b40:	blr	x2
   11b44:	ldr	w1, [x19, #28]
   11b48:	mov	w0, #0x0                   	// #0
   11b4c:	tbz	w1, #5, 11bb0 <argp_error@@Base+0x394>
   11b50:	ldr	x19, [sp, #16]
   11b54:	ldp	x29, x30, [sp], #32
   11b58:	ret
   11b5c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   11b60:	ldr	x0, [x0, #3936]
   11b64:	ldr	x2, [x0]
   11b68:	cbz	x2, 11b80 <argp_error@@Base+0x364>
   11b6c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   11b70:	add	x1, x1, #0xfa8
   11b74:	ldr	x0, [x19, #80]
   11b78:	bl	afa0 <fprintf@plt>
   11b7c:	b	11b44 <argp_error@@Base+0x328>
   11b80:	mov	w2, #0x5                   	// #5
   11b84:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   11b88:	add	x1, x1, #0xfb0
   11b8c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   11b90:	add	x0, x0, #0xc08
   11b94:	bl	ada0 <dcgettext@plt>
   11b98:	mov	x2, x0
   11b9c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   11ba0:	add	x1, x1, #0xfd8
   11ba4:	mov	x0, x19
   11ba8:	bl	ab80 <argp_error@plt>
   11bac:	b	11b44 <argp_error@@Base+0x328>
   11bb0:	bl	a350 <exit@plt>
   11bb4:	stp	x29, x30, [sp, #-32]!
   11bb8:	mov	x29, sp
   11bbc:	stp	x19, x20, [sp, #16]
   11bc0:	mov	x20, x1
   11bc4:	mov	x19, x2
   11bc8:	cmn	w0, #0x2
   11bcc:	b.eq	11c34 <argp_error@@Base+0x418>  // b.none
   11bd0:	mov	w3, w0
   11bd4:	cmn	w0, #0x1
   11bd8:	b.ge	11c08 <argp_error@@Base+0x3ec>  // b.tcont
   11bdc:	cmn	w0, #0x4
   11be0:	b.eq	11c7c <argp_error@@Base+0x460>  // b.none
   11be4:	mov	w0, #0x7                   	// #7
   11be8:	cmn	w3, #0x3
   11bec:	b.ne	11c28 <argp_error@@Base+0x40c>  // b.any
   11bf0:	mov	w2, #0x201                 	// #513
   11bf4:	ldr	x1, [x19, #80]
   11bf8:	mov	x0, x19
   11bfc:	bl	ad90 <argp_state_help@plt>
   11c00:	mov	w0, #0x0                   	// #0
   11c04:	b	11c28 <argp_error@@Base+0x40c>
   11c08:	mov	w0, #0x7                   	// #7
   11c0c:	cmp	w3, #0x3f
   11c10:	b.ne	11c28 <argp_error@@Base+0x40c>  // b.any
   11c14:	mov	w2, #0x27a                 	// #634
   11c18:	ldr	x1, [x19, #80]
   11c1c:	mov	x0, x19
   11c20:	bl	ad90 <argp_state_help@plt>
   11c24:	mov	w0, #0x0                   	// #0
   11c28:	ldp	x19, x20, [sp, #16]
   11c2c:	ldp	x29, x30, [sp], #32
   11c30:	ret
   11c34:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   11c38:	ldr	x0, [x0, #3768]
   11c3c:	str	x1, [x0]
   11c40:	mov	x0, x1
   11c44:	bl	a780 <last_component@plt>
   11c48:	str	x0, [x19, #64]
   11c4c:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
   11c50:	ldr	x1, [x1, #4008]
   11c54:	str	x0, [x1]
   11c58:	ldr	w1, [x19, #28]
   11c5c:	and	w1, w1, #0x3
   11c60:	mov	w0, #0x0                   	// #0
   11c64:	cmp	w1, #0x1
   11c68:	b.ne	11c28 <argp_error@@Base+0x40c>  // b.any
   11c6c:	ldr	x0, [x19, #16]
   11c70:	str	x20, [x0]
   11c74:	mov	w0, #0x0                   	// #0
   11c78:	b	11c28 <argp_error@@Base+0x40c>
   11c7c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   11c80:	add	x0, x0, #0xfe0
   11c84:	cmp	x1, #0x0
   11c88:	mov	w2, #0xa                   	// #10
   11c8c:	mov	x1, #0x0                   	// #0
   11c90:	csel	x0, x0, x20, eq  // eq = none
   11c94:	bl	aa00 <strtol@plt>
   11c98:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   11c9c:	str	w0, [x1, #1068]
   11ca0:	ldr	w0, [x1, #1068]
   11ca4:	sub	w2, w0, #0x1
   11ca8:	str	w2, [x1, #1068]
   11cac:	cmp	w0, #0x0
   11cb0:	b.le	11ce0 <argp_error@@Base+0x4c4>
   11cb4:	mov	w20, #0x1                   	// #1
   11cb8:	add	x19, x1, #0x42c
   11cbc:	mov	w0, w20
   11cc0:	bl	a740 <sleep@plt>
   11cc4:	ldr	w0, [x19]
   11cc8:	sub	w1, w0, #0x1
   11ccc:	str	w1, [x19]
   11cd0:	cmp	w0, #0x0
   11cd4:	b.gt	11cbc <argp_error@@Base+0x4a0>
   11cd8:	mov	w0, #0x0                   	// #0
   11cdc:	b	11c28 <argp_error@@Base+0x40c>
   11ce0:	mov	w0, #0x0                   	// #0
   11ce4:	b	11c28 <argp_error@@Base+0x40c>
   11ce8:	stp	x29, x30, [sp, #-128]!
   11cec:	mov	x29, sp
   11cf0:	stp	x19, x20, [sp, #16]
   11cf4:	stp	x21, x22, [sp, #32]
   11cf8:	stp	x25, x26, [sp, #64]
   11cfc:	stp	x27, x28, [sp, #80]
   11d00:	str	x0, [sp, #104]
   11d04:	str	x1, [sp, #112]
   11d08:	str	w2, [sp, #124]
   11d0c:	mov	x26, x3
   11d10:	mov	x22, x4
   11d14:	ldr	x20, [x0]
   11d18:	ldr	x27, [x0, #32]
   11d1c:	cbz	x20, 11d30 <argp_error@@Base+0x514>
   11d20:	stp	x23, x24, [sp, #48]
   11d24:	mov	x19, x20
   11d28:	mov	w28, #0x3a                  	// #58
   11d2c:	b	11d68 <argp_error@@Base+0x54c>
   11d30:	ldr	x0, [sp, #104]
   11d34:	ldr	x0, [x0, #8]
   11d38:	cbnz	x0, 11eb4 <argp_error@@Base+0x698>
   11d3c:	mov	x26, x20
   11d40:	b	11f24 <argp_error@@Base+0x708>
   11d44:	ldr	x0, [x21, #32]!
   11d48:	cbz	x0, 11e18 <argp_error@@Base+0x5fc>
   11d4c:	mov	x1, x23
   11d50:	bl	a9b0 <strcmp@plt>
   11d54:	cbnz	w0, 11d44 <argp_error@@Base+0x528>
   11d58:	sub	x21, x21, x25
   11d5c:	asr	x21, x21, #5
   11d60:	tbnz	w21, #31, 11e18 <argp_error@@Base+0x5fc>
   11d64:	add	x19, x19, #0x30
   11d68:	ldr	w21, [x19, #8]
   11d6c:	cbnz	w21, 11d78 <argp_error@@Base+0x55c>
   11d70:	ldr	x0, [x19]
   11d74:	cbz	x0, 11ea0 <argp_error@@Base+0x684>
   11d78:	ldr	w1, [x19, #24]
   11d7c:	tst	x1, #0x4
   11d80:	csel	x20, x20, x19, ne  // ne = any
   11d84:	ldr	w0, [x20, #24]
   11d88:	and	w24, w0, #0x8
   11d8c:	tbnz	w0, #3, 11d64 <argp_error@@Base+0x548>
   11d90:	tbnz	w1, #3, 11df8 <argp_error@@Base+0x5dc>
   11d94:	sub	w0, w21, #0x1
   11d98:	cmp	w0, #0xfe
   11d9c:	b.hi	11df8 <argp_error@@Base+0x5dc>  // b.pmore
   11da0:	bl	a9d0 <__ctype_b_loc@plt>
   11da4:	ldr	x0, [x0]
   11da8:	ldrh	w0, [x0, w21, sxtw #1]
   11dac:	tbz	w0, #14, 11df8 <argp_error@@Base+0x5dc>
   11db0:	ldr	x0, [x22, #8]
   11db4:	add	x1, x0, #0x1
   11db8:	str	x1, [x22, #8]
   11dbc:	strb	w21, [x0]
   11dc0:	ldr	x0, [x20, #16]
   11dc4:	cbz	x0, 11df0 <argp_error@@Base+0x5d4>
   11dc8:	ldr	x0, [x22, #8]
   11dcc:	add	x1, x0, #0x1
   11dd0:	str	x1, [x22, #8]
   11dd4:	strb	w28, [x0]
   11dd8:	ldr	w0, [x20, #24]
   11ddc:	tbz	w0, #0, 11df0 <argp_error@@Base+0x5d4>
   11de0:	ldr	x0, [x22, #8]
   11de4:	add	x1, x0, #0x1
   11de8:	str	x1, [x22, #8]
   11dec:	strb	w28, [x0]
   11df0:	ldr	x0, [x22, #8]
   11df4:	strb	wzr, [x0]
   11df8:	ldr	x23, [x19]
   11dfc:	cbz	x23, 11d64 <argp_error@@Base+0x548>
   11e00:	ldr	x0, [x22]
   11e04:	ldr	x25, [x0, #16]
   11e08:	ldr	x0, [x25]
   11e0c:	cbz	x0, 11e18 <argp_error@@Base+0x5fc>
   11e10:	mov	x21, x25
   11e14:	b	11d4c <argp_error@@Base+0x530>
   11e18:	ldr	x0, [x22, #16]
   11e1c:	str	x23, [x0]
   11e20:	ldr	x0, [x20, #16]
   11e24:	cbz	x0, 11e34 <argp_error@@Base+0x618>
   11e28:	ldr	w24, [x20, #24]
   11e2c:	and	w24, w24, #0x1
   11e30:	add	w24, w24, #0x1
   11e34:	ldr	x0, [x22, #16]
   11e38:	str	w24, [x0, #8]
   11e3c:	ldr	x0, [x22, #16]
   11e40:	str	xzr, [x0, #16]
   11e44:	ldr	w0, [x19, #8]
   11e48:	and	w1, w0, #0xffffff
   11e4c:	cbnz	w0, 11e58 <argp_error@@Base+0x63c>
   11e50:	ldr	w0, [x20, #8]
   11e54:	and	w1, w0, #0xffffff
   11e58:	ldr	x2, [x22, #16]
   11e5c:	ldr	x0, [x22]
   11e60:	ldr	x0, [x0, #80]
   11e64:	sub	x0, x26, x0
   11e68:	asr	x0, x0, #3
   11e6c:	mov	x3, #0x8e39                	// #36409
   11e70:	movk	x3, #0x38e3, lsl #16
   11e74:	movk	x3, #0xe38e, lsl #32
   11e78:	movk	x3, #0x8e38, lsl #48
   11e7c:	mul	x0, x0, x3
   11e80:	add	w0, w0, #0x1
   11e84:	add	w0, w1, w0, lsl #24
   11e88:	str	w0, [x2, #24]
   11e8c:	ldr	x0, [x22, #16]
   11e90:	add	x1, x0, #0x20
   11e94:	str	x1, [x22, #16]
   11e98:	str	xzr, [x0, #32]
   11e9c:	b	11d64 <argp_error@@Base+0x548>
   11ea0:	ldr	x0, [x19, #32]
   11ea4:	cbnz	x0, 11d78 <argp_error@@Base+0x55c>
   11ea8:	ldr	w0, [x19, #40]
   11eac:	cbnz	w0, 11d78 <argp_error@@Base+0x55c>
   11eb0:	ldp	x23, x24, [sp, #48]
   11eb4:	ldr	x1, [sp, #104]
   11eb8:	ldr	x0, [x1, #8]
   11ebc:	str	x0, [x26]
   11ec0:	str	x1, [x26, #8]
   11ec4:	ldr	x0, [x22, #8]
   11ec8:	str	x0, [x26, #16]
   11ecc:	str	wzr, [x26, #24]
   11ed0:	ldr	x0, [sp, #112]
   11ed4:	str	x0, [x26, #32]
   11ed8:	ldr	w0, [sp, #124]
   11edc:	str	w0, [x26, #40]
   11ee0:	str	xzr, [x26, #48]
   11ee4:	str	xzr, [x26, #64]
   11ee8:	str	xzr, [x26, #56]
   11eec:	cbz	x27, 11f20 <argp_error@@Base+0x704>
   11ef0:	ldr	x0, [x27]
   11ef4:	cbz	x0, 11f70 <argp_error@@Base+0x754>
   11ef8:	mov	w0, #0x0                   	// #0
   11efc:	add	w0, w0, #0x1
   11f00:	mov	w2, w0
   11f04:	ubfiz	x1, x0, #5, #32
   11f08:	ldr	x1, [x27, x1]
   11f0c:	cbnz	x1, 11efc <argp_error@@Base+0x6e0>
   11f10:	ldr	x0, [x22, #24]
   11f14:	str	x0, [x26, #56]
   11f18:	add	x2, x0, x2, lsl #3
   11f1c:	str	x2, [x22, #24]
   11f20:	add	x3, x26, #0x48
   11f24:	cbz	x27, 11f54 <argp_error@@Base+0x738>
   11f28:	ldr	x0, [x27]
   11f2c:	cbz	x0, 11f54 <argp_error@@Base+0x738>
   11f30:	mov	w19, #0x0                   	// #0
   11f34:	mov	w2, w19
   11f38:	mov	x4, x22
   11f3c:	add	w19, w19, #0x1
   11f40:	mov	x1, x26
   11f44:	bl	11ce8 <argp_error@@Base+0x4cc>
   11f48:	mov	x3, x0
   11f4c:	ldr	x0, [x27, #32]!
   11f50:	cbnz	x0, 11f34 <argp_error@@Base+0x718>
   11f54:	mov	x0, x3
   11f58:	ldp	x19, x20, [sp, #16]
   11f5c:	ldp	x21, x22, [sp, #32]
   11f60:	ldp	x25, x26, [sp, #64]
   11f64:	ldp	x27, x28, [sp, #80]
   11f68:	ldp	x29, x30, [sp], #128
   11f6c:	ret
   11f70:	mov	x2, #0x0                   	// #0
   11f74:	b	11f10 <argp_error@@Base+0x6f4>

0000000000011f78 <argp_parse@@Base>:
   11f78:	stp	x29, x30, [sp, #-464]!
   11f7c:	mov	x29, sp
   11f80:	stp	x19, x20, [sp, #16]
   11f84:	stp	x21, x22, [sp, #32]
   11f88:	stp	x23, x24, [sp, #48]
   11f8c:	stp	x25, x26, [sp, #64]
   11f90:	stp	x27, x28, [sp, #80]
   11f94:	mov	x23, x0
   11f98:	str	w1, [x29, #124]
   11f9c:	mov	x25, x2
   11fa0:	mov	w21, w3
   11fa4:	str	x4, [x29, #96]
   11fa8:	str	x5, [x29, #104]
   11fac:	tbnz	w21, #0, 11fd0 <argp_parse@@Base+0x58>
   11fb0:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   11fb4:	ldr	x0, [x0, #3768]
   11fb8:	ldr	x0, [x0]
   11fbc:	cbz	x0, 12008 <argp_parse@@Base+0x90>
   11fc0:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   11fc4:	ldr	x0, [x0, #4008]
   11fc8:	ldr	x0, [x0]
   11fcc:	cbz	x0, 1201c <argp_parse@@Base+0xa4>
   11fd0:	tbz	w21, #4, 12034 <argp_parse@@Base+0xbc>
   11fd4:	str	w21, [x29, #112]
   11fd8:	stp	xzr, xzr, [x29, #192]
   11fdc:	stp	xzr, xzr, [x29, #208]
   11fe0:	stp	xzr, xzr, [x29, #224]
   11fe4:	str	xzr, [x29, #240]
   11fe8:	ands	w28, w21, #0x4
   11fec:	cset	x0, eq  // eq = none
   11ff0:	str	x0, [x29, #128]
   11ff4:	str	xzr, [x29, #136]
   11ff8:	str	xzr, [x29, #144]
   11ffc:	str	xzr, [x29, #152]
   12000:	cbz	x23, 120f4 <argp_parse@@Base+0x17c>
   12004:	b	120e8 <argp_parse@@Base+0x170>
   12008:	ldr	x1, [x2]
   1200c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   12010:	ldr	x0, [x0, #3768]
   12014:	str	x1, [x0]
   12018:	b	11fc0 <argp_parse@@Base+0x48>
   1201c:	ldr	x0, [x25]
   12020:	bl	a780 <last_component@plt>
   12024:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
   12028:	ldr	x1, [x1, #4008]
   1202c:	str	x0, [x1]
   12030:	b	11fd0 <argp_parse@@Base+0x58>
   12034:	sub	sp, sp, #0x80
   12038:	mov	x0, sp
   1203c:	sub	sp, sp, #0x40
   12040:	mov	x1, sp
   12044:	stp	xzr, xzr, [x1]
   12048:	stp	xzr, xzr, [x1, #16]
   1204c:	stp	xzr, xzr, [x1, #32]
   12050:	str	xzr, [x1, #48]
   12054:	str	x0, [x1, #32]
   12058:	stp	xzr, xzr, [x0]
   1205c:	stp	xzr, xzr, [x0, #16]
   12060:	stp	xzr, xzr, [x0, #32]
   12064:	stp	xzr, xzr, [x0, #48]
   12068:	stp	xzr, xzr, [x0, #64]
   1206c:	stp	xzr, xzr, [x0, #80]
   12070:	stp	xzr, xzr, [x0, #96]
   12074:	stp	xzr, xzr, [x0, #112]
   12078:	mov	x2, x0
   1207c:	cbz	x23, 12084 <argp_parse@@Base+0x10c>
   12080:	str	x23, [x2], #32
   12084:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   12088:	add	x0, x0, #0x798
   1208c:	str	x0, [x2]
   12090:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   12094:	ldr	x0, [x0, #3936]
   12098:	ldr	x0, [x0]
   1209c:	cbz	x0, 12280 <argp_parse@@Base+0x308>
   120a0:	add	x3, x2, #0x40
   120a4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   120a8:	add	x0, x0, #0x798
   120ac:	add	x0, x0, #0x38
   120b0:	str	x0, [x2, #32]
   120b4:	str	xzr, [x3]
   120b8:	str	w21, [x29, #112]
   120bc:	stp	xzr, xzr, [x29, #192]
   120c0:	stp	xzr, xzr, [x29, #208]
   120c4:	stp	xzr, xzr, [x29, #224]
   120c8:	str	xzr, [x29, #240]
   120cc:	ands	w28, w21, #0x4
   120d0:	cset	x0, eq  // eq = none
   120d4:	str	x0, [x29, #128]
   120d8:	str	xzr, [x29, #136]
   120dc:	str	xzr, [x29, #144]
   120e0:	str	xzr, [x29, #152]
   120e4:	mov	x23, x1
   120e8:	add	x1, x29, #0x80
   120ec:	mov	x0, x23
   120f0:	bl	11a48 <argp_error@@Base+0x22c>
   120f4:	ldr	x19, [x29, #144]
   120f8:	add	x19, x19, #0x1
   120fc:	add	x19, x19, x19, lsl #3
   12100:	lsl	x19, x19, #3
   12104:	ldr	x27, [x29, #152]
   12108:	lsl	x27, x27, #3
   1210c:	add	x24, x27, x19
   12110:	ldr	x22, [x29, #136]
   12114:	add	x22, x22, #0x1
   12118:	add	x22, x24, x22, lsl #5
   1211c:	ldr	x0, [x29, #128]
   12120:	add	x0, x0, #0x1
   12124:	add	x0, x0, x22
   12128:	bl	a5f0 <malloc@plt>
   1212c:	mov	x20, x0
   12130:	str	x0, [x29, #456]
   12134:	cbz	x0, 129b0 <argp_parse@@Base+0xa38>
   12138:	str	x0, [x29, #328]
   1213c:	add	x19, x0, x19
   12140:	str	x19, [x29, #344]
   12144:	add	x24, x0, x24
   12148:	str	x24, [x29, #264]
   1214c:	add	x26, x0, x22
   12150:	str	x26, [x29, #256]
   12154:	mov	w0, #0x1                   	// #1
   12158:	str	w0, [x29, #192]
   1215c:	str	w0, [x29, #196]
   12160:	ldp	x0, x1, [x29, #192]
   12164:	stp	x0, x1, [x29, #272]
   12168:	ldp	x0, x1, [x29, #208]
   1216c:	stp	x0, x1, [x29, #288]
   12170:	ldp	x0, x1, [x29, #224]
   12174:	stp	x0, x1, [x29, #304]
   12178:	ldr	x0, [x29, #240]
   1217c:	str	x0, [x29, #320]
   12180:	mov	x2, x27
   12184:	mov	w1, #0x0                   	// #0
   12188:	mov	x0, x19
   1218c:	bl	a6f0 <memset@plt>
   12190:	add	x0, x29, #0xf8
   12194:	str	x0, [x29, #160]
   12198:	str	x26, [x29, #168]
   1219c:	str	x24, [x29, #176]
   121a0:	str	x19, [x29, #184]
   121a4:	ldr	x0, [x29, #112]
   121a8:	tbz	w0, #3, 12298 <argp_parse@@Base+0x320>
   121ac:	add	x26, x26, #0x1
   121b0:	str	x26, [x29, #168]
   121b4:	mov	w0, #0x2d                  	// #45
   121b8:	strb	w0, [x20, x22]
   121bc:	ldr	x0, [x29, #168]
   121c0:	strb	wzr, [x0]
   121c4:	ldr	x0, [x29, #176]
   121c8:	str	xzr, [x0]
   121cc:	str	x23, [x29, #248]
   121d0:	cbz	x23, 122b0 <argp_parse@@Base+0x338>
   121d4:	add	x4, x29, #0xa0
   121d8:	ldr	x3, [x29, #328]
   121dc:	mov	w2, #0x0                   	// #0
   121e0:	mov	x1, #0x0                   	// #0
   121e4:	mov	x0, x23
   121e8:	bl	11ce8 <argp_error@@Base+0x4cc>
   121ec:	str	x0, [x29, #336]
   121f0:	add	x1, x29, #0xf8
   121f4:	stp	xzr, xzr, [x29, #368]
   121f8:	stp	xzr, xzr, [x29, #384]
   121fc:	stp	xzr, xzr, [x29, #400]
   12200:	stp	xzr, xzr, [x29, #416]
   12204:	ldr	x0, [x29, #248]
   12208:	str	x0, [x29, #360]
   1220c:	ldr	w0, [x29, #124]
   12210:	str	w0, [x29, #368]
   12214:	str	x25, [x29, #376]
   12218:	str	w21, [x29, #388]
   1221c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   12220:	ldr	x0, [x0, #3816]
   12224:	ldr	x0, [x0]
   12228:	str	x0, [x29, #432]
   1222c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   12230:	ldr	x0, [x0, #3872]
   12234:	ldr	x0, [x0]
   12238:	str	x0, [x29, #440]
   1223c:	str	x1, [x29, #448]
   12240:	mov	w0, #0x1                   	// #1
   12244:	str	w0, [x29, #352]
   12248:	ldr	x0, [x29, #328]
   1224c:	ldr	x1, [x29, #336]
   12250:	cmp	x0, x1
   12254:	b.cs	12344 <argp_parse@@Base+0x3cc>  // b.hs, b.nlast
   12258:	ldr	x1, [x29, #104]
   1225c:	str	x1, [x0, #48]
   12260:	ldr	x20, [x29, #328]
   12264:	ldr	x0, [x29, #336]
   12268:	cmp	x20, x0
   1226c:	b.cs	12344 <argp_parse@@Base+0x3cc>  // b.hs, b.nlast
   12270:	mov	w22, #0x3                   	// #3
   12274:	movk	w22, #0x100, lsl #16
   12278:	add	x21, x29, #0x168
   1227c:	b	122f8 <argp_parse@@Base+0x380>
   12280:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   12284:	ldr	x0, [x0, #4056]
   12288:	ldr	x0, [x0]
   1228c:	add	x3, x2, #0x20
   12290:	cbnz	x0, 120a0 <argp_parse@@Base+0x128>
   12294:	b	120b4 <argp_parse@@Base+0x13c>
   12298:	cbz	w28, 121bc <argp_parse@@Base+0x244>
   1229c:	add	x26, x26, #0x1
   122a0:	str	x26, [x29, #168]
   122a4:	mov	w0, #0x2b                  	// #43
   122a8:	strb	w0, [x20, x22]
   122ac:	b	121bc <argp_parse@@Base+0x244>
   122b0:	ldr	x0, [x29, #328]
   122b4:	str	x0, [x29, #336]
   122b8:	b	121f0 <argp_parse@@Base+0x278>
   122bc:	ldr	x0, [x20]
   122c0:	cbz	x0, 12314 <argp_parse@@Base+0x39c>
   122c4:	mov	x3, #0x0                   	// #0
   122c8:	mov	w2, w22
   122cc:	mov	x1, x21
   122d0:	mov	x0, x20
   122d4:	bl	119dc <argp_error@@Base+0x1c0>
   122d8:	mov	w19, w0
   122dc:	add	x20, x20, #0x48
   122e0:	ldr	x0, [x29, #336]
   122e4:	cmp	x20, x0
   122e8:	b.cs	12338 <argp_parse@@Base+0x3c0>  // b.hs, b.nlast
   122ec:	cmp	w19, #0x0
   122f0:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   122f4:	b.ne	128d0 <argp_parse@@Base+0x958>  // b.any
   122f8:	ldr	x0, [x20, #32]
   122fc:	cbz	x0, 122bc <argp_parse@@Base+0x344>
   12300:	ldr	w1, [x20, #40]
   12304:	ldr	x0, [x0, #56]
   12308:	ldr	x0, [x0, x1, lsl #3]
   1230c:	str	x0, [x20, #48]
   12310:	b	122bc <argp_parse@@Base+0x344>
   12314:	ldr	x0, [x20, #8]
   12318:	ldr	x0, [x0, #32]
   1231c:	cbz	x0, 122c4 <argp_parse@@Base+0x34c>
   12320:	ldr	x0, [x0]
   12324:	cbz	x0, 122c4 <argp_parse@@Base+0x34c>
   12328:	ldr	x0, [x20, #56]
   1232c:	ldr	x1, [x20, #48]
   12330:	str	x1, [x0]
   12334:	b	122c4 <argp_parse@@Base+0x34c>
   12338:	cmp	w19, #0x0
   1233c:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   12340:	b.ne	128d0 <argp_parse@@Base+0x958>  // b.any
   12344:	ldr	w0, [x29, #388]
   12348:	tbz	w0, #1, 12370 <argp_parse@@Base+0x3f8>
   1234c:	str	wzr, [x29, #276]
   12350:	tbz	w0, #0, 12378 <argp_parse@@Base+0x400>
   12354:	ldr	x0, [x29, #376]
   12358:	sub	x0, x0, #0x8
   1235c:	str	x0, [x29, #376]
   12360:	ldr	w0, [x29, #368]
   12364:	add	w0, w0, #0x1
   12368:	str	w0, [x29, #368]
   1236c:	b	12378 <argp_parse@@Base+0x400>
   12370:	mov	w0, #0x1                   	// #1
   12374:	str	w0, [x29, #276]
   12378:	ldr	x0, [x29, #376]
   1237c:	cmp	x25, x0
   12380:	b.eq	123ac <argp_parse@@Base+0x434>  // b.none
   12384:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   12388:	ldr	x0, [x0, #4008]
   1238c:	ldr	x0, [x0]
   12390:	str	x0, [x29, #424]
   12394:	mov	w26, #0xffffffff            	// #-1
   12398:	add	x25, x29, #0xf8
   1239c:	add	x22, x25, #0x70
   123a0:	mov	w24, #0x6                   	// #6
   123a4:	movk	w24, #0x100, lsl #16
   123a8:	b	1246c <argp_parse@@Base+0x4f4>
   123ac:	ldr	x0, [x25]
   123b0:	cbz	x0, 12384 <argp_parse@@Base+0x40c>
   123b4:	bl	a780 <last_component@plt>
   123b8:	str	x0, [x29, #424]
   123bc:	b	12394 <argp_parse@@Base+0x41c>
   123c0:	ldr	w0, [x29, #384]
   123c4:	str	w0, [x29, #272]
   123c8:	str	w26, [x29, #280]
   123cc:	ldr	w0, [x29, #388]
   123d0:	tbz	w0, #6, 124e0 <argp_parse@@Base+0x568>
   123d4:	add	x5, x25, #0x18
   123d8:	mov	x4, #0x0                   	// #0
   123dc:	ldr	x3, [x29, #264]
   123e0:	ldr	x2, [x29, #256]
   123e4:	ldr	x1, [x29, #376]
   123e8:	ldr	w0, [x29, #368]
   123ec:	bl	a910 <_getopt_long_only_r@plt>
   123f0:	mov	w20, w0
   123f4:	ldr	w19, [x29, #272]
   123f8:	str	w19, [x29, #384]
   123fc:	cmn	w20, #0x1
   12400:	b.eq	12504 <argp_parse@@Base+0x58c>  // b.none
   12404:	cmp	w20, #0x3f
   12408:	b.eq	12534 <argp_parse@@Base+0x5bc>  // b.none
   1240c:	cmp	w20, #0x1
   12410:	b.eq	124b8 <argp_parse@@Base+0x540>  // b.none
   12414:	ldr	x19, [x29, #288]
   12418:	asr	w0, w20, #24
   1241c:	cmp	wzr, w20, asr #24
   12420:	b.eq	12544 <argp_parse@@Base+0x5cc>  // b.none
   12424:	ands	w1, w20, #0x800000
   12428:	mov	w2, #0xff000000            	// #-16777216
   1242c:	csel	w1, w1, w2, eq  // eq = none
   12430:	and	w2, w20, #0xffffff
   12434:	sbfiz	x3, x0, #3, #32
   12438:	add	x0, x3, w0, sxtw
   1243c:	lsl	x0, x0, #3
   12440:	sub	x0, x0, #0x48
   12444:	mov	x3, x19
   12448:	orr	w2, w2, w1
   1244c:	mov	x1, x22
   12450:	ldr	x4, [x29, #328]
   12454:	add	x0, x4, x0
   12458:	bl	119dc <argp_error@@Base+0x1c0>
   1245c:	mov	w19, w0
   12460:	cmp	w0, #0x7
   12464:	b.eq	126dc <argp_parse@@Base+0x764>  // b.none
   12468:	cbnz	w19, 12830 <argp_parse@@Base+0x8b8>
   1246c:	ldr	w0, [x29, #396]
   12470:	cbz	w0, 12484 <argp_parse@@Base+0x50c>
   12474:	ldr	w1, [x29, #384]
   12478:	cmp	w0, w1
   1247c:	b.le	1248c <argp_parse@@Base+0x514>
   12480:	str	wzr, [x29, #396]
   12484:	ldr	w0, [x29, #352]
   12488:	cbnz	w0, 123c0 <argp_parse@@Base+0x448>
   1248c:	ldr	w0, [x29, #384]
   12490:	ldr	w1, [x29, #368]
   12494:	cmp	w0, w1
   12498:	b.ge	129a0 <argp_parse@@Base+0xa28>  // b.tcont
   1249c:	ldr	w1, [x29, #388]
   124a0:	tbnz	w1, #2, 129a8 <argp_parse@@Base+0xa30>
   124a4:	add	w1, w0, #0x1
   124a8:	str	w1, [x29, #384]
   124ac:	ldr	x1, [x29, #376]
   124b0:	ldr	x0, [x1, w0, sxtw #3]
   124b4:	str	x0, [x29, #288]
   124b8:	ldr	x23, [x29, #288]
   124bc:	ldr	w21, [x29, #384]
   124c0:	sub	w21, w21, #0x1
   124c4:	str	w21, [x29, #384]
   124c8:	ldr	x20, [x29, #328]
   124cc:	ldr	x0, [x29, #336]
   124d0:	cmp	x0, x20
   124d4:	b.hi	125ec <argp_parse@@Base+0x674>  // b.pmore
   124d8:	mov	w20, #0x1                   	// #1
   124dc:	b	1262c <argp_parse@@Base+0x6b4>
   124e0:	add	x5, x25, #0x18
   124e4:	mov	x4, #0x0                   	// #0
   124e8:	ldr	x3, [x29, #264]
   124ec:	ldr	x2, [x29, #256]
   124f0:	ldr	x1, [x29, #376]
   124f4:	ldr	w0, [x29, #368]
   124f8:	bl	a9c0 <_getopt_long_r@plt>
   124fc:	mov	w20, w0
   12500:	b	123f4 <argp_parse@@Base+0x47c>
   12504:	str	wzr, [x29, #352]
   12508:	cmp	w19, #0x1
   1250c:	b.le	1248c <argp_parse@@Base+0x514>
   12510:	ldr	x0, [x29, #376]
   12514:	add	x0, x0, w19, sxtw #3
   12518:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   1251c:	add	x1, x1, #0xff0
   12520:	ldur	x0, [x0, #-8]
   12524:	bl	a9b0 <strcmp@plt>
   12528:	cbnz	w0, 1248c <argp_parse@@Base+0x514>
   1252c:	str	w19, [x29, #396]
   12530:	b	1248c <argp_parse@@Base+0x514>
   12534:	ldr	w0, [x29, #280]
   12538:	cmn	w0, #0x1
   1253c:	b.ne	12998 <argp_parse@@Base+0xa20>  // b.any
   12540:	ldr	x19, [x29, #288]
   12544:	mov	w1, w20
   12548:	ldr	x0, [x29, #256]
   1254c:	bl	ab60 <strchr@plt>
   12550:	mov	x2, x0
   12554:	cbz	x0, 12580 <argp_parse@@Base+0x608>
   12558:	ldr	x0, [x29, #328]
   1255c:	ldr	x3, [x29, #336]
   12560:	cmp	x3, x0
   12564:	b.ls	12580 <argp_parse@@Base+0x608>  // b.plast
   12568:	ldr	x1, [x0, #16]
   1256c:	cmp	x2, x1
   12570:	b.cc	126bc <argp_parse@@Base+0x744>  // b.lo, b.ul, b.last
   12574:	add	x0, x0, #0x48
   12578:	cmp	x3, x0
   1257c:	b.hi	12568 <argp_parse@@Base+0x5f0>  // b.pmore
   12580:	mov	w2, #0x5                   	// #5
   12584:	adrp	x1, 2d000 <vasnprintf@@Base+0x2378>
   12588:	add	x1, x1, #0xe8
   1258c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   12590:	add	x0, x0, #0xc08
   12594:	bl	ada0 <dcgettext@plt>
   12598:	mov	x3, x0
   1259c:	mov	w2, w20
   125a0:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   125a4:	add	x1, x1, #0xff8
   125a8:	add	x0, x29, #0x168
   125ac:	bl	ab80 <argp_error@plt>
   125b0:	b	1262c <argp_parse@@Base+0x6b4>
   125b4:	ldr	w0, [x29, #384]
   125b8:	sub	w0, w0, #0x1
   125bc:	str	w0, [x29, #384]
   125c0:	mov	x3, #0x0                   	// #0
   125c4:	mov	w2, w24
   125c8:	mov	x1, x22
   125cc:	mov	x0, x20
   125d0:	bl	119dc <argp_error@@Base+0x1c0>
   125d4:	mov	w19, w0
   125d8:	add	x20, x20, #0x48
   125dc:	ldr	x0, [x29, #336]
   125e0:	cmp	x20, x0
   125e4:	ccmp	w19, #0x7, #0x0, cc  // cc = lo, ul, last
   125e8:	b.ne	129cc <argp_parse@@Base+0xa54>  // b.any
   125ec:	ldr	w0, [x29, #384]
   125f0:	add	w0, w0, #0x1
   125f4:	str	w0, [x29, #384]
   125f8:	mov	x3, x23
   125fc:	mov	w2, #0x0                   	// #0
   12600:	mov	x1, x22
   12604:	mov	x0, x20
   12608:	bl	119dc <argp_error@@Base+0x1c0>
   1260c:	mov	w19, w0
   12610:	cmp	w0, #0x7
   12614:	b.eq	125b4 <argp_parse@@Base+0x63c>  // b.none
   12618:	add	x20, x20, #0x48
   1261c:	cbz	w0, 129d8 <argp_parse@@Base+0xa60>
   12620:	cmp	w19, #0x7
   12624:	b.ne	12468 <argp_parse@@Base+0x4f0>  // b.any
   12628:	mov	w20, #0x1                   	// #1
   1262c:	add	w20, w20, #0x1
   12630:	tst	w20, #0xfffffffd
   12634:	cset	w0, eq  // eq = none
   12638:	cbz	w0, 12944 <argp_parse@@Base+0x9cc>
   1263c:	ldr	w0, [x29, #384]
   12640:	ldr	w1, [x29, #368]
   12644:	cmp	w0, w1
   12648:	b.eq	12758 <argp_parse@@Base+0x7e0>  // b.none
   1264c:	ldr	x1, [x29, #96]
   12650:	cbz	x1, 1290c <argp_parse@@Base+0x994>
   12654:	str	w0, [x1]
   12658:	ldr	x20, [x29, #336]
   1265c:	sub	x20, x20, #0x48
   12660:	ldr	x0, [x29, #328]
   12664:	cmp	x20, x0
   12668:	b.cc	1297c <argp_parse@@Base+0xa04>  // b.lo, b.ul, b.last
   1266c:	mov	w22, #0x4                   	// #4
   12670:	movk	w22, #0x100, lsl #16
   12674:	add	x21, x29, #0x168
   12678:	mov	x3, #0x0                   	// #0
   1267c:	mov	w2, w22
   12680:	mov	x1, x21
   12684:	mov	x0, x20
   12688:	bl	119dc <argp_error@@Base+0x1c0>
   1268c:	mov	w19, w0
   12690:	sub	x20, x20, #0x48
   12694:	ldr	x0, [x29, #328]
   12698:	cmp	x20, x0
   1269c:	b.cc	1295c <argp_parse@@Base+0x9e4>  // b.lo, b.ul, b.last
   126a0:	cmp	w19, #0x0
   126a4:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   126a8:	b.eq	12678 <argp_parse@@Base+0x700>  // b.none
   126ac:	b	12964 <argp_parse@@Base+0x9ec>
   126b0:	mov	w0, #0x1                   	// #1
   126b4:	str	w0, [x29, #352]
   126b8:	b	1246c <argp_parse@@Base+0x4f4>
   126bc:	mov	x3, x19
   126c0:	mov	w2, w20
   126c4:	mov	x1, x22
   126c8:	bl	119dc <argp_error@@Base+0x1c0>
   126cc:	mov	w19, w0
   126d0:	cmp	w0, #0x7
   126d4:	b.ne	12468 <argp_parse@@Base+0x4f0>  // b.any
   126d8:	b	12580 <argp_parse@@Base+0x608>
   126dc:	ldr	x0, [x29, #264]
   126e0:	ldr	w1, [x0, #24]
   126e4:	cmp	w1, w20
   126e8:	b.eq	12704 <argp_parse@@Base+0x78c>  // b.none
   126ec:	ldr	x1, [x0]
   126f0:	cbz	x1, 12740 <argp_parse@@Base+0x7c8>
   126f4:	add	x0, x0, #0x20
   126f8:	ldr	w1, [x0, #24]
   126fc:	cmp	w20, w1
   12700:	b.ne	126ec <argp_parse@@Base+0x774>  // b.any
   12704:	ldr	x19, [x0]
   12708:	cbz	x19, 1274c <argp_parse@@Base+0x7d4>
   1270c:	mov	w2, #0x5                   	// #5
   12710:	adrp	x1, 2d000 <vasnprintf@@Base+0x2378>
   12714:	add	x1, x1, #0xe8
   12718:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1271c:	add	x0, x0, #0xc08
   12720:	bl	ada0 <dcgettext@plt>
   12724:	mov	x3, x0
   12728:	mov	x2, x19
   1272c:	adrp	x1, 2d000 <vasnprintf@@Base+0x2378>
   12730:	add	x1, x1, #0x0
   12734:	add	x0, x29, #0x168
   12738:	bl	ab80 <argp_error@plt>
   1273c:	b	1262c <argp_parse@@Base+0x6b4>
   12740:	adrp	x19, 2c000 <vasnprintf@@Base+0x1378>
   12744:	add	x19, x19, #0xfe8
   12748:	b	1270c <argp_parse@@Base+0x794>
   1274c:	adrp	x19, 2c000 <vasnprintf@@Base+0x1378>
   12750:	add	x19, x19, #0xfe8
   12754:	b	1270c <argp_parse@@Base+0x794>
   12758:	ldr	x21, [x29, #328]
   1275c:	ldr	x20, [x29, #336]
   12760:	cmp	x20, x21
   12764:	b.ls	12984 <argp_parse@@Base+0xa0c>  // b.plast
   12768:	mov	w19, #0x0                   	// #0
   1276c:	mov	w23, #0x2                   	// #2
   12770:	movk	w23, #0x100, lsl #16
   12774:	add	x22, x29, #0x168
   12778:	b	12798 <argp_parse@@Base+0x820>
   1277c:	add	x21, x21, #0x48
   12780:	ldr	x20, [x29, #336]
   12784:	cmp	x21, x20
   12788:	b.cs	127bc <argp_parse@@Base+0x844>  // b.hs, b.nlast
   1278c:	cmp	w19, #0x0
   12790:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   12794:	b.ne	129b8 <argp_parse@@Base+0xa40>  // b.any
   12798:	ldr	w0, [x21, #24]
   1279c:	cbnz	w0, 1277c <argp_parse@@Base+0x804>
   127a0:	mov	x3, #0x0                   	// #0
   127a4:	mov	w2, w23
   127a8:	mov	x1, x22
   127ac:	mov	x0, x21
   127b0:	bl	119dc <argp_error@@Base+0x1c0>
   127b4:	mov	w19, w0
   127b8:	b	1277c <argp_parse@@Base+0x804>
   127bc:	sub	x20, x20, #0x48
   127c0:	ldr	x0, [x29, #328]
   127c4:	cmp	x0, x20
   127c8:	b.hi	128f4 <argp_parse@@Base+0x97c>  // b.pmore
   127cc:	cmp	w19, #0x0
   127d0:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   127d4:	b.ne	12818 <argp_parse@@Base+0x8a0>  // b.any
   127d8:	mov	w22, #0x1                   	// #1
   127dc:	movk	w22, #0x100, lsl #16
   127e0:	add	x21, x29, #0x168
   127e4:	mov	x3, #0x0                   	// #0
   127e8:	mov	w2, w22
   127ec:	mov	x1, x21
   127f0:	mov	x0, x20
   127f4:	bl	119dc <argp_error@@Base+0x1c0>
   127f8:	mov	w19, w0
   127fc:	sub	x20, x20, #0x48
   12800:	ldr	x0, [x29, #328]
   12804:	cmp	x20, x0
   12808:	b.cc	128f4 <argp_parse@@Base+0x97c>  // b.lo, b.ul, b.last
   1280c:	cmp	w19, #0x0
   12810:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   12814:	b.eq	127e4 <argp_parse@@Base+0x86c>  // b.none
   12818:	ldr	x0, [x29, #96]
   1281c:	cbz	x0, 1282c <argp_parse@@Base+0x8b4>
   12820:	ldr	w0, [x29, #384]
   12824:	ldr	x1, [x29, #96]
   12828:	str	w0, [x1]
   1282c:	cbz	w19, 12658 <argp_parse@@Base+0x6e0>
   12830:	cmp	w19, #0x7
   12834:	b.eq	12944 <argp_parse@@Base+0x9cc>  // b.none
   12838:	ldr	x20, [x29, #328]
   1283c:	ldr	x0, [x29, #336]
   12840:	cmp	x20, x0
   12844:	b.cs	12878 <argp_parse@@Base+0x900>  // b.hs, b.nlast
   12848:	mov	w22, #0x5                   	// #5
   1284c:	movk	w22, #0x100, lsl #16
   12850:	add	x21, x29, #0x168
   12854:	mov	x3, #0x0                   	// #0
   12858:	mov	w2, w22
   1285c:	mov	x1, x21
   12860:	mov	x0, x20
   12864:	bl	119dc <argp_error@@Base+0x1c0>
   12868:	add	x20, x20, #0x48
   1286c:	ldr	x0, [x29, #336]
   12870:	cmp	x20, x0
   12874:	b.cc	12854 <argp_parse@@Base+0x8dc>  // b.lo, b.ul, b.last
   12878:	ldr	x20, [x29, #336]
   1287c:	sub	x20, x20, #0x48
   12880:	ldr	x0, [x29, #328]
   12884:	cmp	x0, x20
   12888:	b.hi	128bc <argp_parse@@Base+0x944>  // b.pmore
   1288c:	mov	w22, #0x7                   	// #7
   12890:	movk	w22, #0x100, lsl #16
   12894:	add	x21, x29, #0x168
   12898:	mov	x3, #0x0                   	// #0
   1289c:	mov	w2, w22
   128a0:	mov	x1, x21
   128a4:	mov	x0, x20
   128a8:	bl	119dc <argp_error@@Base+0x1c0>
   128ac:	sub	x20, x20, #0x48
   128b0:	ldr	x0, [x29, #328]
   128b4:	cmp	x20, x0
   128b8:	b.cs	12898 <argp_parse@@Base+0x920>  // b.hs, b.nlast
   128bc:	cmp	w19, #0x7
   128c0:	mov	w0, #0x16                  	// #22
   128c4:	csel	w19, w19, w0, ne  // ne = any
   128c8:	ldr	x0, [x29, #456]
   128cc:	bl	aa50 <free@plt>
   128d0:	mov	w0, w19
   128d4:	mov	sp, x29
   128d8:	ldp	x19, x20, [sp, #16]
   128dc:	ldp	x21, x22, [sp, #32]
   128e0:	ldp	x23, x24, [sp, #48]
   128e4:	ldp	x25, x26, [sp, #64]
   128e8:	ldp	x27, x28, [sp, #80]
   128ec:	ldp	x29, x30, [sp], #464
   128f0:	ret
   128f4:	cmp	w19, #0x7
   128f8:	b.ne	12818 <argp_parse@@Base+0x8a0>  // b.any
   128fc:	mov	w19, #0x0                   	// #0
   12900:	ldr	x0, [x29, #96]
   12904:	cbnz	x0, 12820 <argp_parse@@Base+0x8a8>
   12908:	b	12658 <argp_parse@@Base+0x6e0>
   1290c:	ldr	w0, [x29, #388]
   12910:	tbnz	w0, #1, 12944 <argp_parse@@Base+0x9cc>
   12914:	ldr	x19, [x29, #432]
   12918:	cbz	x19, 12944 <argp_parse@@Base+0x9cc>
   1291c:	mov	w2, #0x5                   	// #5
   12920:	adrp	x1, 2d000 <vasnprintf@@Base+0x2378>
   12924:	add	x1, x1, #0x10
   12928:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1292c:	add	x0, x0, #0xc08
   12930:	bl	ada0 <dcgettext@plt>
   12934:	ldr	x2, [x29, #424]
   12938:	mov	x1, x0
   1293c:	mov	x0, x19
   12940:	bl	afa0 <fprintf@plt>
   12944:	mov	w2, #0x104                 	// #260
   12948:	ldr	x1, [x29, #432]
   1294c:	add	x0, x29, #0x168
   12950:	bl	ad90 <argp_state_help@plt>
   12954:	mov	w19, #0x7                   	// #7
   12958:	b	12838 <argp_parse@@Base+0x8c0>
   1295c:	cmp	w19, #0x7
   12960:	csel	w19, w19, wzr, ne  // ne = any
   12964:	ldr	x20, [x29, #336]
   12968:	sub	x20, x20, #0x48
   1296c:	ldr	x0, [x29, #328]
   12970:	cmp	x0, x20
   12974:	b.ls	1288c <argp_parse@@Base+0x914>  // b.plast
   12978:	b	128c8 <argp_parse@@Base+0x950>
   1297c:	mov	w19, #0x0                   	// #0
   12980:	b	128c8 <argp_parse@@Base+0x950>
   12984:	sub	x20, x20, #0x48
   12988:	mov	w19, #0x0                   	// #0
   1298c:	cmp	x21, x20
   12990:	b.ls	127d8 <argp_parse@@Base+0x860>  // b.plast
   12994:	b	12818 <argp_parse@@Base+0x8a0>
   12998:	mov	w0, #0x0                   	// #0
   1299c:	b	12638 <argp_parse@@Base+0x6c0>
   129a0:	mov	w0, #0x1                   	// #1
   129a4:	b	12638 <argp_parse@@Base+0x6c0>
   129a8:	mov	w0, #0x1                   	// #1
   129ac:	b	12638 <argp_parse@@Base+0x6c0>
   129b0:	mov	w19, #0xc                   	// #12
   129b4:	b	128d0 <argp_parse@@Base+0x958>
   129b8:	sub	x20, x20, #0x48
   129bc:	ldr	x0, [x29, #328]
   129c0:	cmp	x20, x0
   129c4:	b.cs	127cc <argp_parse@@Base+0x854>  // b.hs, b.nlast
   129c8:	b	12818 <argp_parse@@Base+0x8a0>
   129cc:	cbnz	w19, 12620 <argp_parse@@Base+0x6a8>
   129d0:	ldr	w0, [x29, #368]
   129d4:	str	w0, [x29, #384]
   129d8:	ldr	w0, [x29, #384]
   129dc:	cmp	w21, w0
   129e0:	b.ge	126b0 <argp_parse@@Base+0x738>  // b.tcont
   129e4:	sub	w21, w0, w21
   129e8:	ldur	w0, [x20, #-48]
   129ec:	add	w21, w0, w21
   129f0:	stur	w21, [x20, #-48]
   129f4:	b	1246c <argp_parse@@Base+0x4f4>

00000000000129f8 <_argp_input@@Base>:
   129f8:	cbz	x1, 12a38 <_argp_input@@Base+0x40>
   129fc:	ldr	x2, [x1, #88]
   12a00:	ldr	x1, [x2, #80]
   12a04:	ldr	x3, [x2, #88]
   12a08:	cmp	x1, x3
   12a0c:	b.cs	12a40 <_argp_input@@Base+0x48>  // b.hs, b.nlast
   12a10:	ldr	x2, [x1, #8]
   12a14:	cmp	x2, x0
   12a18:	b.eq	12a30 <_argp_input@@Base+0x38>  // b.none
   12a1c:	add	x1, x1, #0x48
   12a20:	cmp	x1, x3
   12a24:	b.cc	12a10 <_argp_input@@Base+0x18>  // b.lo, b.ul, b.last
   12a28:	mov	x0, #0x0                   	// #0
   12a2c:	b	12a34 <_argp_input@@Base+0x3c>
   12a30:	ldr	x0, [x1, #48]
   12a34:	ret
   12a38:	mov	x0, x1
   12a3c:	b	12a34 <_argp_input@@Base+0x3c>
   12a40:	mov	x0, #0x0                   	// #0
   12a44:	b	12a34 <_argp_input@@Base+0x3c>

0000000000012a48 <argp_usage@@Base>:
   12a48:	stp	x29, x30, [sp, #-16]!
   12a4c:	mov	x29, sp
   12a50:	mov	w2, #0x106                 	// #262
   12a54:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
   12a58:	ldr	x1, [x1, #3816]
   12a5c:	ldr	x1, [x1]
   12a60:	bl	ad90 <argp_state_help@plt>
   12a64:	ldp	x29, x30, [sp], #16
   12a68:	ret

0000000000012a6c <_option_is_short@@Base>:
   12a6c:	ldr	w2, [x0, #24]
   12a70:	tbnz	w2, #3, 12ab4 <_option_is_short@@Base+0x48>
   12a74:	stp	x29, x30, [sp, #-32]!
   12a78:	mov	x29, sp
   12a7c:	str	x19, [sp, #16]
   12a80:	mov	x1, x0
   12a84:	and	w0, w2, #0x8
   12a88:	ldr	w19, [x1, #8]
   12a8c:	sub	w1, w19, #0x1
   12a90:	cmp	w1, #0xfe
   12a94:	b.hi	12aa8 <_option_is_short@@Base+0x3c>  // b.pmore
   12a98:	bl	a9d0 <__ctype_b_loc@plt>
   12a9c:	ldr	x0, [x0]
   12aa0:	ldrh	w0, [x0, w19, sxtw #1]
   12aa4:	ubfx	x0, x0, #14, #1
   12aa8:	ldr	x19, [sp, #16]
   12aac:	ldp	x29, x30, [sp], #32
   12ab0:	ret
   12ab4:	mov	w0, #0x0                   	// #0
   12ab8:	ret

0000000000012abc <_option_is_end@@Base>:
   12abc:	mov	x1, x0
   12ac0:	ldr	w0, [x0, #8]
   12ac4:	cbnz	w0, 12ae8 <_option_is_end@@Base+0x2c>
   12ac8:	ldr	x2, [x1]
   12acc:	cbnz	x2, 12aec <_option_is_end@@Base+0x30>
   12ad0:	ldr	x2, [x1, #32]
   12ad4:	cbnz	x2, 12aec <_option_is_end@@Base+0x30>
   12ad8:	ldr	w0, [x1, #40]
   12adc:	cmp	w0, #0x0
   12ae0:	cset	w0, eq  // eq = none
   12ae4:	b	12aec <_option_is_end@@Base+0x30>
   12ae8:	mov	w0, #0x0                   	// #0
   12aec:	ret
   12af0:	ldr	x0, [x0, #48]
   12af4:	ret
   12af8:	ldr	x1, [x0, #48]
   12afc:	ldr	x2, [x0, #40]
   12b00:	ldr	x3, [x0]
   12b04:	str	x3, [x8]
   12b08:	str	x0, [x8, #8]
   12b0c:	str	x1, [x8, #16]
   12b10:	str	x2, [x8, #24]
   12b14:	add	x1, x2, x1, lsl #3
   12b18:	str	x1, [x8, #32]
   12b1c:	ret
   12b20:	ret
   12b24:	stp	x29, x30, [sp, #-64]!
   12b28:	mov	x29, sp
   12b2c:	stp	x19, x20, [sp, #16]
   12b30:	stp	x21, x22, [sp, #32]
   12b34:	stp	x23, x24, [sp, #48]
   12b38:	cmp	x2, x3
   12b3c:	b.hi	12b70 <_option_is_end@@Base+0xb4>  // b.pmore
   12b40:	mov	x22, x0
   12b44:	mov	x23, x1
   12b48:	mov	x21, x2
   12b4c:	mov	x20, x3
   12b50:	mov	x24, x4
   12b54:	ldr	x0, [x0, #48]
   12b58:	cmp	x0, x3
   12b5c:	b.cc	12b70 <_option_is_end@@Base+0xb4>  // b.lo, b.ul, b.last
   12b60:	cmp	x2, x3
   12b64:	b.cc	12b80 <_option_is_end@@Base+0xc4>  // b.lo, b.ul, b.last
   12b68:	mov	x0, #0xffffffffffffffff    	// #-1
   12b6c:	b	12c14 <_option_is_end@@Base+0x158>
   12b70:	bl	a900 <abort@plt>
   12b74:	add	x21, x19, #0x1
   12b78:	cmp	x21, x20
   12b7c:	b.cs	12c10 <_option_is_end@@Base+0x154>  // b.hs, b.nlast
   12b80:	sub	x19, x20, x21
   12b84:	add	x19, x21, x19, lsr #1
   12b88:	ldr	x3, [x22, #40]
   12b8c:	mov	x1, x24
   12b90:	ldr	x0, [x3, x19, lsl #3]
   12b94:	blr	x23
   12b98:	tbnz	w0, #31, 12b74 <_option_is_end@@Base+0xb8>
   12b9c:	cmp	w0, #0x0
   12ba0:	b.le	12bac <_option_is_end@@Base+0xf0>
   12ba4:	mov	x20, x19
   12ba8:	b	12b78 <_option_is_end@@Base+0xbc>
   12bac:	cmp	x21, x19
   12bb0:	b.cc	12bd4 <_option_is_end@@Base+0x118>  // b.lo, b.ul, b.last
   12bb4:	mov	x0, x21
   12bb8:	b	12c14 <_option_is_end@@Base+0x158>
   12bbc:	add	x21, x20, #0x1
   12bc0:	b	12bcc <_option_is_end@@Base+0x110>
   12bc4:	bl	a900 <abort@plt>
   12bc8:	sub	x19, x20, #0x1
   12bcc:	cmp	x21, x19
   12bd0:	b.cs	12c08 <_option_is_end@@Base+0x14c>  // b.hs, b.nlast
   12bd4:	sub	x20, x19, x21
   12bd8:	add	x20, x21, x20, lsr #1
   12bdc:	ldr	x0, [x22, #40]
   12be0:	mov	x1, x24
   12be4:	ldr	x0, [x0, x20, lsl #3]
   12be8:	blr	x23
   12bec:	tbnz	w0, #31, 12bbc <_option_is_end@@Base+0x100>
   12bf0:	cmp	w0, #0x0
   12bf4:	b.gt	12bc4 <_option_is_end@@Base+0x108>
   12bf8:	cmp	x20, x21
   12bfc:	b.ne	12bc8 <_option_is_end@@Base+0x10c>  // b.any
   12c00:	mov	x0, x21
   12c04:	b	12c14 <_option_is_end@@Base+0x158>
   12c08:	mov	x0, x21
   12c0c:	b	12c14 <_option_is_end@@Base+0x158>
   12c10:	mov	x0, #0xffffffffffffffff    	// #-1
   12c14:	ldp	x19, x20, [sp, #16]
   12c18:	ldp	x21, x22, [sp, #32]
   12c1c:	ldp	x23, x24, [sp, #48]
   12c20:	ldp	x29, x30, [sp], #64
   12c24:	ret
   12c28:	stp	x29, x30, [sp, #-16]!
   12c2c:	mov	x29, sp
   12c30:	mov	x4, x2
   12c34:	ldr	x3, [x0, #48]
   12c38:	mov	x2, #0x0                   	// #0
   12c3c:	bl	12b24 <_option_is_end@@Base+0x68>
   12c40:	ldp	x29, x30, [sp], #16
   12c44:	ret
   12c48:	stp	x29, x30, [sp, #-16]!
   12c4c:	mov	x29, sp
   12c50:	bl	12b24 <_option_is_end@@Base+0x68>
   12c54:	add	x0, x0, #0x1
   12c58:	ldp	x29, x30, [sp], #16
   12c5c:	ret
   12c60:	stp	x29, x30, [sp, #-16]!
   12c64:	mov	x29, sp
   12c68:	mov	x4, x2
   12c6c:	ldr	x3, [x0, #48]
   12c70:	mov	x2, #0x0                   	// #0
   12c74:	bl	12b24 <_option_is_end@@Base+0x68>
   12c78:	add	x0, x0, #0x1
   12c7c:	ldp	x29, x30, [sp], #16
   12c80:	ret
   12c84:	mov	x3, x0
   12c88:	ldr	x5, [x0, #8]
   12c8c:	ldr	x0, [x0, #16]
   12c90:	ldr	x4, [x5, #48]
   12c94:	cmp	x0, x4
   12c98:	b.eq	12cc8 <_option_is_end@@Base+0x20c>  // b.none
   12c9c:	add	x4, x4, #0x1
   12ca0:	cmp	x0, x4
   12ca4:	b.ne	12d0c <_option_is_end@@Base+0x250>  // b.any
   12ca8:	sub	x0, x0, #0x1
   12cac:	str	x0, [x3, #16]
   12cb0:	ldr	x0, [x3, #24]
   12cb4:	sub	x0, x0, #0x8
   12cb8:	str	x0, [x3, #24]
   12cbc:	ldr	x0, [x3, #32]
   12cc0:	sub	x0, x0, #0x8
   12cc4:	str	x0, [x3, #32]
   12cc8:	ldr	x4, [x3, #24]
   12ccc:	ldr	x6, [x3, #32]
   12cd0:	mov	w0, #0x0                   	// #0
   12cd4:	cmp	x4, x6
   12cd8:	b.cs	12d08 <_option_is_end@@Base+0x24c>  // b.hs, b.nlast
   12cdc:	ldr	x0, [x4]
   12ce0:	str	x0, [x1]
   12ce4:	cbz	x2, 12cfc <_option_is_end@@Base+0x240>
   12ce8:	ldr	x0, [x5, #40]
   12cec:	sub	x0, x4, x0
   12cf0:	asr	x0, x0, #3
   12cf4:	add	x0, x0, #0x1
   12cf8:	str	x0, [x2]
   12cfc:	add	x4, x4, #0x8
   12d00:	str	x4, [x3, #24]
   12d04:	mov	w0, #0x1                   	// #1
   12d08:	ret
   12d0c:	stp	x29, x30, [sp, #-16]!
   12d10:	mov	x29, sp
   12d14:	bl	a900 <abort@plt>
   12d18:	cmp	x1, x2
   12d1c:	b.hi	12d54 <_option_is_end@@Base+0x298>  // b.pmore
   12d20:	ldr	x4, [x0, #48]
   12d24:	cmp	x4, x2
   12d28:	b.cc	12d54 <_option_is_end@@Base+0x298>  // b.lo, b.ul, b.last
   12d2c:	ldr	x3, [x0, #40]
   12d30:	ldr	x5, [x0]
   12d34:	str	x5, [x8]
   12d38:	str	x0, [x8, #8]
   12d3c:	str	x4, [x8, #16]
   12d40:	add	x1, x3, x1, lsl #3
   12d44:	str	x1, [x8, #24]
   12d48:	add	x2, x3, x2, lsl #3
   12d4c:	str	x2, [x8, #32]
   12d50:	ret
   12d54:	stp	x29, x30, [sp, #-16]!
   12d58:	mov	x29, sp
   12d5c:	bl	a900 <abort@plt>
   12d60:	stp	x29, x30, [sp, #-48]!
   12d64:	mov	x29, sp
   12d68:	stp	x19, x20, [sp, #16]
   12d6c:	stp	x21, x22, [sp, #32]
   12d70:	ldr	x22, [x0, #48]
   12d74:	cmp	x22, x1
   12d78:	b.ls	12ddc <_option_is_end@@Base+0x320>  // b.plast
   12d7c:	mov	x21, x0
   12d80:	mov	x19, x1
   12d84:	ldr	x20, [x0, #40]
   12d88:	ldr	x1, [x0, #24]
   12d8c:	cbz	x1, 12d98 <_option_is_end@@Base+0x2dc>
   12d90:	ldr	x0, [x20, x19, lsl #3]
   12d94:	blr	x1
   12d98:	add	x0, x19, #0x1
   12d9c:	cmp	x22, x0
   12da0:	b.ls	12dc0 <_option_is_end@@Base+0x304>  // b.plast
   12da4:	add	x1, x20, x19, lsl #3
   12da8:	add	x3, x20, x22, lsl #3
   12dac:	sub	x3, x3, #0x8
   12db0:	ldr	x2, [x1, #8]
   12db4:	str	x2, [x1], #8
   12db8:	cmp	x1, x3
   12dbc:	b.ne	12db0 <_option_is_end@@Base+0x2f4>  // b.any
   12dc0:	sub	x22, x22, #0x1
   12dc4:	str	x22, [x21, #48]
   12dc8:	mov	w0, #0x1                   	// #1
   12dcc:	ldp	x19, x20, [sp, #16]
   12dd0:	ldp	x21, x22, [sp, #32]
   12dd4:	ldp	x29, x30, [sp], #48
   12dd8:	ret
   12ddc:	bl	a900 <abort@plt>
   12de0:	stp	x29, x30, [sp, #-32]!
   12de4:	mov	x29, sp
   12de8:	str	x19, [sp, #16]
   12dec:	mov	x19, x0
   12df0:	bl	12c28 <_option_is_end@@Base+0x16c>
   12df4:	cmn	x0, #0x1
   12df8:	b.ne	12e0c <_option_is_end@@Base+0x350>  // b.any
   12dfc:	mov	w0, #0x0                   	// #0
   12e00:	ldr	x19, [sp, #16]
   12e04:	ldp	x29, x30, [sp], #32
   12e08:	ret
   12e0c:	mov	x1, x0
   12e10:	mov	x0, x19
   12e14:	bl	12d60 <_option_is_end@@Base+0x2a4>
   12e18:	and	w0, w0, #0xff
   12e1c:	b	12e00 <_option_is_end@@Base+0x344>
   12e20:	stp	x29, x30, [sp, #-48]!
   12e24:	mov	x29, sp
   12e28:	stp	x19, x20, [sp, #16]
   12e2c:	stp	x21, x22, [sp, #32]
   12e30:	mov	x21, x0
   12e34:	ldr	x22, [x0, #48]
   12e38:	sub	x0, x1, #0x1
   12e3c:	cmp	x22, x0
   12e40:	b.ls	12e9c <_option_is_end@@Base+0x3e0>  // b.plast
   12e44:	mov	x19, x1
   12e48:	ldr	x20, [x21, #40]
   12e4c:	ldr	x1, [x21, #24]
   12e50:	cbz	x1, 12e5c <_option_is_end@@Base+0x3a0>
   12e54:	ldr	x0, [x20, x0, lsl #3]
   12e58:	blr	x1
   12e5c:	cmp	x19, x22
   12e60:	b.cs	12e80 <_option_is_end@@Base+0x3c4>  // b.hs, b.nlast
   12e64:	add	x1, x20, x19, lsl #3
   12e68:	add	x3, x20, x22, lsl #3
   12e6c:	ldr	x2, [x1]
   12e70:	stur	x2, [x1, #-8]
   12e74:	add	x1, x1, #0x8
   12e78:	cmp	x1, x3
   12e7c:	b.ne	12e6c <_option_is_end@@Base+0x3b0>  // b.any
   12e80:	sub	x22, x22, #0x1
   12e84:	str	x22, [x21, #48]
   12e88:	mov	w0, #0x1                   	// #1
   12e8c:	ldp	x19, x20, [sp, #16]
   12e90:	ldp	x21, x22, [sp, #32]
   12e94:	ldp	x29, x30, [sp], #48
   12e98:	ret
   12e9c:	bl	a900 <abort@plt>
   12ea0:	stp	x29, x30, [sp, #-64]!
   12ea4:	mov	x29, sp
   12ea8:	stp	x21, x22, [sp, #32]
   12eac:	mov	x21, x0
   12eb0:	ldr	x0, [x0, #48]
   12eb4:	cmp	x0, x2
   12eb8:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
   12ebc:	b.hi	12f18 <_option_is_end@@Base+0x45c>  // b.pmore
   12ec0:	stp	x19, x20, [sp, #16]
   12ec4:	mov	x19, x1
   12ec8:	mov	x20, x2
   12ecc:	mov	x22, x3
   12ed0:	mov	x0, #0xffffffffffffffff    	// #-1
   12ed4:	cmp	x1, x2
   12ed8:	b.cs	12f58 <_option_is_end@@Base+0x49c>  // b.hs, b.nlast
   12edc:	str	x23, [sp, #48]
   12ee0:	ldr	x23, [x21, #8]
   12ee4:	cbz	x23, 12f24 <_option_is_end@@Base+0x468>
   12ee8:	ldr	x0, [x21, #40]
   12eec:	ldr	x1, [x0, x19, lsl #3]
   12ef0:	mov	x0, x22
   12ef4:	blr	x23
   12ef8:	and	w0, w0, #0xff
   12efc:	cbnz	w0, 12f50 <_option_is_end@@Base+0x494>
   12f00:	add	x19, x19, #0x1
   12f04:	cmp	x20, x19
   12f08:	b.ne	12ee8 <_option_is_end@@Base+0x42c>  // b.any
   12f0c:	mov	x0, #0xffffffffffffffff    	// #-1
   12f10:	ldr	x23, [sp, #48]
   12f14:	b	12f58 <_option_is_end@@Base+0x49c>
   12f18:	stp	x19, x20, [sp, #16]
   12f1c:	str	x23, [sp, #48]
   12f20:	bl	a900 <abort@plt>
   12f24:	ldr	x2, [x21, #40]
   12f28:	mov	x0, x1
   12f2c:	ldr	x1, [x2, x0, lsl #3]
   12f30:	cmp	x1, x22
   12f34:	b.eq	12f68 <_option_is_end@@Base+0x4ac>  // b.none
   12f38:	add	x0, x0, #0x1
   12f3c:	cmp	x20, x0
   12f40:	b.ne	12f2c <_option_is_end@@Base+0x470>  // b.any
   12f44:	mov	x0, #0xffffffffffffffff    	// #-1
   12f48:	ldr	x23, [sp, #48]
   12f4c:	b	12f58 <_option_is_end@@Base+0x49c>
   12f50:	mov	x0, x19
   12f54:	ldr	x23, [sp, #48]
   12f58:	ldp	x19, x20, [sp, #16]
   12f5c:	ldp	x21, x22, [sp, #32]
   12f60:	ldp	x29, x30, [sp], #64
   12f64:	ret
   12f68:	ldr	x23, [sp, #48]
   12f6c:	b	12f58 <_option_is_end@@Base+0x49c>
   12f70:	stp	x29, x30, [sp, #-32]!
   12f74:	mov	x29, sp
   12f78:	str	x19, [sp, #16]
   12f7c:	mov	x19, x0
   12f80:	mov	x3, x1
   12f84:	ldr	x2, [x0, #48]
   12f88:	mov	x1, #0x0                   	// #0
   12f8c:	bl	12ea0 <_option_is_end@@Base+0x3e4>
   12f90:	cmn	x0, #0x1
   12f94:	b.ne	12fa8 <_option_is_end@@Base+0x4ec>  // b.any
   12f98:	mov	w0, #0x0                   	// #0
   12f9c:	ldr	x19, [sp, #16]
   12fa0:	ldp	x29, x30, [sp], #32
   12fa4:	ret
   12fa8:	mov	x1, x0
   12fac:	mov	x0, x19
   12fb0:	bl	12d60 <_option_is_end@@Base+0x2a4>
   12fb4:	and	w0, w0, #0xff
   12fb8:	b	12f9c <_option_is_end@@Base+0x4e0>
   12fbc:	stp	x29, x30, [sp, #-16]!
   12fc0:	mov	x29, sp
   12fc4:	bl	12ea0 <_option_is_end@@Base+0x3e4>
   12fc8:	add	x0, x0, #0x1
   12fcc:	ldp	x29, x30, [sp], #16
   12fd0:	ret
   12fd4:	ldr	x3, [x0, #48]
   12fd8:	cmp	x3, x1
   12fdc:	b.ls	12ff0 <_option_is_end@@Base+0x534>  // b.plast
   12fe0:	ldr	x0, [x0, #40]
   12fe4:	str	x2, [x0, x1, lsl #3]
   12fe8:	add	x0, x1, #0x1
   12fec:	ret
   12ff0:	stp	x29, x30, [sp, #-16]!
   12ff4:	mov	x29, sp
   12ff8:	bl	a900 <abort@plt>
   12ffc:	ldr	x2, [x0, #48]
   13000:	cmp	x2, x1
   13004:	b.ls	13014 <_option_is_end@@Base+0x558>  // b.plast
   13008:	ldr	x0, [x0, #40]
   1300c:	ldr	x0, [x0, x1, lsl #3]
   13010:	ret
   13014:	stp	x29, x30, [sp, #-16]!
   13018:	mov	x29, sp
   1301c:	bl	a900 <abort@plt>
   13020:	sub	x1, x1, #0x1
   13024:	ldr	x0, [x0, #48]
   13028:	cmp	x0, x1
   1302c:	b.ls	13038 <_option_is_end@@Base+0x57c>  // b.plast
   13030:	mov	x0, x1
   13034:	ret
   13038:	stp	x29, x30, [sp, #-16]!
   1303c:	mov	x29, sp
   13040:	bl	a900 <abort@plt>
   13044:	ldr	x0, [x0, #48]
   13048:	sub	x2, x1, #0x1
   1304c:	cmp	x0, x2
   13050:	b.ls	13060 <_option_is_end@@Base+0x5a4>  // b.plast
   13054:	cmp	x1, x0
   13058:	csinc	x0, xzr, x1, cs  // cs = hs, nlast
   1305c:	ret
   13060:	stp	x29, x30, [sp, #-16]!
   13064:	mov	x29, sp
   13068:	bl	a900 <abort@plt>
   1306c:	sub	x1, x1, #0x1
   13070:	ldr	x3, [x0, #48]
   13074:	cmp	x3, x1
   13078:	b.ls	1308c <_option_is_end@@Base+0x5d0>  // b.plast
   1307c:	ldr	x0, [x0, #40]
   13080:	str	x2, [x0, x1, lsl #3]
   13084:	mov	w0, #0x0                   	// #0
   13088:	ret
   1308c:	stp	x29, x30, [sp, #-16]!
   13090:	mov	x29, sp
   13094:	bl	a900 <abort@plt>
   13098:	sub	x1, x1, #0x1
   1309c:	ldr	x2, [x0, #48]
   130a0:	cmp	x2, x1
   130a4:	b.ls	130b4 <_option_is_end@@Base+0x5f8>  // b.plast
   130a8:	ldr	x0, [x0, #40]
   130ac:	ldr	x0, [x0, x1, lsl #3]
   130b0:	ret
   130b4:	stp	x29, x30, [sp, #-16]!
   130b8:	mov	x29, sp
   130bc:	bl	a900 <abort@plt>
   130c0:	stp	x29, x30, [sp, #-64]!
   130c4:	mov	x29, sp
   130c8:	stp	x19, x20, [sp, #16]
   130cc:	stp	x21, x22, [sp, #32]
   130d0:	mov	x20, x0
   130d4:	ldr	x21, [x0, #40]
   130d8:	cbz	x21, 13114 <_option_is_end@@Base+0x658>
   130dc:	ldr	x22, [x0, #24]
   130e0:	cbz	x22, 1310c <_option_is_end@@Base+0x650>
   130e4:	str	x23, [sp, #48]
   130e8:	ldr	x23, [x0, #48]
   130ec:	cbz	x23, 1312c <_option_is_end@@Base+0x670>
   130f0:	mov	x19, #0x0                   	// #0
   130f4:	ldr	x0, [x21, x19, lsl #3]
   130f8:	blr	x22
   130fc:	add	x19, x19, #0x1
   13100:	cmp	x23, x19
   13104:	b.ne	130f4 <_option_is_end@@Base+0x638>  // b.any
   13108:	ldr	x23, [sp, #48]
   1310c:	ldr	x0, [x20, #40]
   13110:	bl	aa50 <free@plt>
   13114:	mov	x0, x20
   13118:	bl	aa50 <free@plt>
   1311c:	ldp	x19, x20, [sp, #16]
   13120:	ldp	x21, x22, [sp, #32]
   13124:	ldp	x29, x30, [sp], #64
   13128:	ret
   1312c:	ldr	x23, [sp, #48]
   13130:	b	1310c <_option_is_end@@Base+0x650>
   13134:	stp	x29, x30, [sp, #-32]!
   13138:	mov	x29, sp
   1313c:	stp	x19, x20, [sp, #16]
   13140:	ldr	x19, [x0, #56]
   13144:	tbnz	x19, #63, 13188 <_option_is_end@@Base+0x6cc>
   13148:	mov	x20, x0
   1314c:	lsl	x19, x19, #1
   13150:	add	x19, x19, #0x1
   13154:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   13158:	cmp	x19, x0
   1315c:	b.hi	13190 <_option_is_end@@Base+0x6d4>  // b.pmore
   13160:	lsl	x1, x19, #3
   13164:	ldr	x0, [x20, #40]
   13168:	bl	a7e0 <realloc@plt>
   1316c:	cbz	x0, 13198 <_option_is_end@@Base+0x6dc>
   13170:	str	x0, [x20, #40]
   13174:	str	x19, [x20, #56]
   13178:	mov	w0, #0x0                   	// #0
   1317c:	ldp	x19, x20, [sp, #16]
   13180:	ldp	x29, x30, [sp], #32
   13184:	ret
   13188:	mov	w0, #0xffffffff            	// #-1
   1318c:	b	1317c <_option_is_end@@Base+0x6c0>
   13190:	mov	w0, #0xffffffff            	// #-1
   13194:	b	1317c <_option_is_end@@Base+0x6c0>
   13198:	mov	w0, #0xffffffff            	// #-1
   1319c:	b	1317c <_option_is_end@@Base+0x6c0>
   131a0:	stp	x29, x30, [sp, #-48]!
   131a4:	mov	x29, sp
   131a8:	stp	x19, x20, [sp, #16]
   131ac:	stp	x21, x22, [sp, #32]
   131b0:	ldr	x20, [x0, #48]
   131b4:	cmp	x20, x1
   131b8:	b.cc	13218 <_option_is_end@@Base+0x75c>  // b.lo, b.ul, b.last
   131bc:	mov	x21, x0
   131c0:	mov	x19, x1
   131c4:	mov	x22, x2
   131c8:	ldr	x0, [x0, #56]
   131cc:	cmp	x0, x20
   131d0:	b.eq	1321c <_option_is_end@@Base+0x760>  // b.none
   131d4:	ldr	x0, [x21, #40]
   131d8:	cmp	x20, x19
   131dc:	b.ls	131f8 <_option_is_end@@Base+0x73c>  // b.plast
   131e0:	add	x3, x0, x20, lsl #3
   131e4:	add	x1, x0, x19, lsl #3
   131e8:	ldur	x4, [x3, #-8]
   131ec:	str	x4, [x3], #-8
   131f0:	cmp	x3, x1
   131f4:	b.ne	131e8 <_option_is_end@@Base+0x72c>  // b.any
   131f8:	str	x22, [x0, x19, lsl #3]
   131fc:	add	x20, x20, #0x1
   13200:	str	x20, [x21, #48]
   13204:	add	x0, x19, #0x1
   13208:	ldp	x19, x20, [sp, #16]
   1320c:	ldp	x21, x22, [sp, #32]
   13210:	ldp	x29, x30, [sp], #48
   13214:	ret
   13218:	bl	a900 <abort@plt>
   1321c:	mov	x0, x21
   13220:	bl	13134 <_option_is_end@@Base+0x678>
   13224:	tbz	w0, #31, 131d4 <_option_is_end@@Base+0x718>
   13228:	mov	x0, #0x0                   	// #0
   1322c:	b	13208 <_option_is_end@@Base+0x74c>
   13230:	stp	x29, x30, [sp, #-64]!
   13234:	mov	x29, sp
   13238:	stp	x19, x20, [sp, #16]
   1323c:	stp	x21, x22, [sp, #32]
   13240:	stp	x23, x24, [sp, #48]
   13244:	mov	x22, x0
   13248:	mov	x23, x2
   1324c:	ldr	x21, [x0, #48]
   13250:	cbz	x21, 13298 <_option_is_end@@Base+0x7dc>
   13254:	mov	x24, x1
   13258:	mov	x20, #0x0                   	// #0
   1325c:	b	1326c <_option_is_end@@Base+0x7b0>
   13260:	add	x20, x19, #0x1
   13264:	cmp	x21, x20
   13268:	b.ls	132a4 <_option_is_end@@Base+0x7e8>  // b.plast
   1326c:	sub	x19, x21, x20
   13270:	add	x19, x20, x19, lsr #1
   13274:	ldr	x3, [x22, #40]
   13278:	mov	x1, x23
   1327c:	ldr	x0, [x3, x19, lsl #3]
   13280:	blr	x24
   13284:	tbnz	w0, #31, 13260 <_option_is_end@@Base+0x7a4>
   13288:	cmp	w0, #0x0
   1328c:	b.le	132a0 <_option_is_end@@Base+0x7e4>
   13290:	mov	x21, x19
   13294:	b	13264 <_option_is_end@@Base+0x7a8>
   13298:	mov	x20, x21
   1329c:	b	132a4 <_option_is_end@@Base+0x7e8>
   132a0:	mov	x20, x19
   132a4:	mov	x2, x23
   132a8:	mov	x1, x20
   132ac:	mov	x0, x22
   132b0:	bl	131a0 <_option_is_end@@Base+0x6e4>
   132b4:	ldp	x19, x20, [sp, #16]
   132b8:	ldp	x21, x22, [sp, #32]
   132bc:	ldp	x23, x24, [sp, #48]
   132c0:	ldp	x29, x30, [sp], #64
   132c4:	ret
   132c8:	stp	x29, x30, [sp, #-48]!
   132cc:	mov	x29, sp
   132d0:	stp	x19, x20, [sp, #16]
   132d4:	stp	x21, x22, [sp, #32]
   132d8:	mov	x21, x0
   132dc:	ldr	x20, [x0, #48]
   132e0:	sub	x0, x1, #0x1
   132e4:	cmp	x20, x0
   132e8:	b.ls	13344 <_option_is_end@@Base+0x888>  // b.plast
   132ec:	mov	x19, x1
   132f0:	mov	x22, x2
   132f4:	ldr	x0, [x21, #56]
   132f8:	cmp	x0, x20
   132fc:	b.eq	13348 <_option_is_end@@Base+0x88c>  // b.none
   13300:	ldr	x0, [x21, #40]
   13304:	cmp	x19, x20
   13308:	b.cs	13324 <_option_is_end@@Base+0x868>  // b.hs, b.nlast
   1330c:	add	x3, x0, x20, lsl #3
   13310:	add	x1, x0, x19, lsl #3
   13314:	ldur	x4, [x3, #-8]
   13318:	str	x4, [x3], #-8
   1331c:	cmp	x3, x1
   13320:	b.ne	13314 <_option_is_end@@Base+0x858>  // b.any
   13324:	str	x22, [x0, x19, lsl #3]
   13328:	add	x20, x20, #0x1
   1332c:	str	x20, [x21, #48]
   13330:	add	x0, x19, #0x1
   13334:	ldp	x19, x20, [sp, #16]
   13338:	ldp	x21, x22, [sp, #32]
   1333c:	ldp	x29, x30, [sp], #48
   13340:	ret
   13344:	bl	a900 <abort@plt>
   13348:	mov	x0, x21
   1334c:	bl	13134 <_option_is_end@@Base+0x678>
   13350:	tbz	w0, #31, 13300 <_option_is_end@@Base+0x844>
   13354:	mov	x0, #0x0                   	// #0
   13358:	b	13334 <_option_is_end@@Base+0x878>
   1335c:	stp	x29, x30, [sp, #-64]!
   13360:	mov	x29, sp
   13364:	stp	x19, x20, [sp, #16]
   13368:	stp	x21, x22, [sp, #32]
   1336c:	str	x23, [sp, #48]
   13370:	ldr	x20, [x0, #48]
   13374:	sub	x23, x1, #0x1
   13378:	cmp	x20, x23
   1337c:	b.ls	133dc <_option_is_end@@Base+0x920>  // b.plast
   13380:	mov	x21, x0
   13384:	mov	x19, x1
   13388:	mov	x22, x2
   1338c:	ldr	x0, [x0, #56]
   13390:	cmp	x0, x20
   13394:	b.eq	133e0 <_option_is_end@@Base+0x924>  // b.none
   13398:	ldr	x0, [x21, #40]
   1339c:	add	x3, x0, x20, lsl #3
   133a0:	add	x5, x0, x19, lsl #3
   133a4:	sub	x5, x5, #0x8
   133a8:	ldur	x4, [x3, #-8]
   133ac:	str	x4, [x3], #-8
   133b0:	cmp	x3, x5
   133b4:	b.ne	133a8 <_option_is_end@@Base+0x8ec>  // b.any
   133b8:	str	x22, [x0, x23, lsl #3]
   133bc:	add	x20, x20, #0x1
   133c0:	str	x20, [x21, #48]
   133c4:	mov	x0, x19
   133c8:	ldp	x19, x20, [sp, #16]
   133cc:	ldp	x21, x22, [sp, #32]
   133d0:	ldr	x23, [sp, #48]
   133d4:	ldp	x29, x30, [sp], #64
   133d8:	ret
   133dc:	bl	a900 <abort@plt>
   133e0:	mov	x0, x21
   133e4:	bl	13134 <_option_is_end@@Base+0x678>
   133e8:	tbz	w0, #31, 13398 <_option_is_end@@Base+0x8dc>
   133ec:	mov	x0, #0x0                   	// #0
   133f0:	b	133c8 <_option_is_end@@Base+0x90c>
   133f4:	stp	x29, x30, [sp, #-48]!
   133f8:	mov	x29, sp
   133fc:	stp	x19, x20, [sp, #16]
   13400:	str	x21, [sp, #32]
   13404:	mov	x20, x0
   13408:	mov	x21, x1
   1340c:	ldr	x19, [x0, #48]
   13410:	ldr	x0, [x0, #56]
   13414:	cmp	x0, x19
   13418:	b.eq	1343c <_option_is_end@@Base+0x980>  // b.none
   1341c:	ldr	x0, [x20, #40]
   13420:	str	x21, [x0, x19, lsl #3]
   13424:	add	x0, x19, #0x1
   13428:	str	x0, [x20, #48]
   1342c:	ldp	x19, x20, [sp, #16]
   13430:	ldr	x21, [sp, #32]
   13434:	ldp	x29, x30, [sp], #48
   13438:	ret
   1343c:	mov	x0, x20
   13440:	bl	13134 <_option_is_end@@Base+0x678>
   13444:	tbz	w0, #31, 1341c <_option_is_end@@Base+0x960>
   13448:	mov	x0, #0x0                   	// #0
   1344c:	b	1342c <_option_is_end@@Base+0x970>
   13450:	stp	x29, x30, [sp, #-48]!
   13454:	mov	x29, sp
   13458:	stp	x19, x20, [sp, #16]
   1345c:	str	x21, [sp, #32]
   13460:	mov	x19, x0
   13464:	mov	x21, x1
   13468:	ldr	x20, [x0, #48]
   1346c:	ldr	x0, [x0, #56]
   13470:	cmp	x0, x20
   13474:	b.eq	134b8 <_option_is_end@@Base+0x9fc>  // b.none
   13478:	ldr	x0, [x19, #40]
   1347c:	cbz	x20, 13498 <_option_is_end@@Base+0x9dc>
   13480:	add	x2, x0, x20, lsl #3
   13484:	mov	x4, x0
   13488:	ldur	x3, [x2, #-8]
   1348c:	str	x3, [x2], #-8
   13490:	cmp	x2, x4
   13494:	b.ne	13488 <_option_is_end@@Base+0x9cc>  // b.any
   13498:	str	x21, [x0]
   1349c:	add	x20, x20, #0x1
   134a0:	str	x20, [x19, #48]
   134a4:	mov	x0, #0x1                   	// #1
   134a8:	ldp	x19, x20, [sp, #16]
   134ac:	ldr	x21, [sp, #32]
   134b0:	ldp	x29, x30, [sp], #48
   134b4:	ret
   134b8:	mov	x0, x19
   134bc:	bl	13134 <_option_is_end@@Base+0x678>
   134c0:	tbz	w0, #31, 13478 <_option_is_end@@Base+0x9bc>
   134c4:	mov	x0, #0x0                   	// #0
   134c8:	b	134a8 <_option_is_end@@Base+0x9ec>
   134cc:	stp	x29, x30, [sp, #-64]!
   134d0:	mov	x29, sp
   134d4:	stp	x19, x20, [sp, #16]
   134d8:	stp	x21, x22, [sp, #32]
   134dc:	str	x23, [sp, #48]
   134e0:	mov	x22, x0
   134e4:	mov	x21, x1
   134e8:	mov	x20, x2
   134ec:	mov	x19, x3
   134f0:	and	w23, w4, #0xff
   134f4:	mov	x0, #0x40                  	// #64
   134f8:	bl	a5f0 <malloc@plt>
   134fc:	cbz	x0, 13520 <_option_is_end@@Base+0xa64>
   13500:	str	x22, [x0]
   13504:	str	x21, [x0, #8]
   13508:	str	x20, [x0, #16]
   1350c:	str	x19, [x0, #24]
   13510:	strb	w23, [x0, #32]
   13514:	str	xzr, [x0, #40]
   13518:	str	xzr, [x0, #48]
   1351c:	str	xzr, [x0, #56]
   13520:	ldp	x19, x20, [sp, #16]
   13524:	ldp	x21, x22, [sp, #32]
   13528:	ldr	x23, [sp, #48]
   1352c:	ldp	x29, x30, [sp], #64
   13530:	ret
   13534:	stp	x29, x30, [sp, #-80]!
   13538:	mov	x29, sp
   1353c:	stp	x19, x20, [sp, #16]
   13540:	stp	x21, x22, [sp, #32]
   13544:	stp	x23, x24, [sp, #48]
   13548:	stp	x25, x26, [sp, #64]
   1354c:	mov	x24, x0
   13550:	mov	x23, x1
   13554:	mov	x22, x2
   13558:	mov	x21, x3
   1355c:	and	w26, w4, #0xff
   13560:	mov	x20, x5
   13564:	mov	x25, x6
   13568:	mov	x0, #0x40                  	// #64
   1356c:	bl	a5f0 <malloc@plt>
   13570:	mov	x19, x0
   13574:	cbz	x0, 135cc <_option_is_end@@Base+0xb10>
   13578:	str	x24, [x0]
   1357c:	str	x23, [x0, #8]
   13580:	str	x22, [x0, #16]
   13584:	str	x21, [x0, #24]
   13588:	strb	w26, [x0, #32]
   1358c:	cbz	x20, 135c0 <_option_is_end@@Base+0xb04>
   13590:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   13594:	cmp	x20, x0
   13598:	b.hi	135e8 <_option_is_end@@Base+0xb2c>  // b.pmore
   1359c:	lsl	x21, x20, #3
   135a0:	mov	x0, x21
   135a4:	bl	a5f0 <malloc@plt>
   135a8:	str	x0, [x19, #40]
   135ac:	cbz	x0, 135e8 <_option_is_end@@Base+0xb2c>
   135b0:	mov	x2, x21
   135b4:	mov	x1, x25
   135b8:	bl	a2c0 <memcpy@plt>
   135bc:	b	135c4 <_option_is_end@@Base+0xb08>
   135c0:	str	xzr, [x0, #40]
   135c4:	str	x20, [x19, #48]
   135c8:	str	x20, [x19, #56]
   135cc:	mov	x0, x19
   135d0:	ldp	x19, x20, [sp, #16]
   135d4:	ldp	x21, x22, [sp, #32]
   135d8:	ldp	x23, x24, [sp, #48]
   135dc:	ldp	x25, x26, [sp, #64]
   135e0:	ldp	x29, x30, [sp], #80
   135e4:	ret
   135e8:	mov	x0, x19
   135ec:	bl	aa50 <free@plt>
   135f0:	mov	x19, #0x0                   	// #0
   135f4:	b	135cc <_option_is_end@@Base+0xb10>

00000000000135f8 <rotl64@@Base>:
   135f8:	neg	w1, w1
   135fc:	ror	x0, x0, x1
   13600:	ret

0000000000013604 <rotr64@@Base>:
   13604:	ror	x0, x0, x1
   13608:	ret

000000000001360c <rotl32@@Base>:
   1360c:	neg	w1, w1
   13610:	ror	w0, w0, w1
   13614:	ret

0000000000013618 <rotr32@@Base>:
   13618:	ror	w0, w0, w1
   1361c:	ret

0000000000013620 <rotl_sz@@Base>:
   13620:	neg	w1, w1
   13624:	ror	x0, x0, x1
   13628:	ret

000000000001362c <rotr_sz@@Base>:
   1362c:	ror	x0, x0, x1
   13630:	ret

0000000000013634 <rotl16@@Base>:
   13634:	and	w0, w0, #0xffff
   13638:	lsl	w2, w0, w1
   1363c:	neg	w1, w1
   13640:	and	w1, w1, #0xf
   13644:	lsr	w0, w0, w1
   13648:	orr	w0, w2, w0
   1364c:	ret

0000000000013650 <rotr16@@Base>:
   13650:	and	w0, w0, #0xffff
   13654:	lsr	w2, w0, w1
   13658:	neg	w1, w1
   1365c:	and	w1, w1, #0xf
   13660:	lsl	w0, w0, w1
   13664:	orr	w0, w2, w0
   13668:	ret

000000000001366c <rotl8@@Base>:
   1366c:	and	w0, w0, #0xff
   13670:	lsl	w2, w0, w1
   13674:	neg	w1, w1
   13678:	and	w1, w1, #0x7
   1367c:	lsr	w0, w0, w1
   13680:	orr	w0, w2, w0
   13684:	ret

0000000000013688 <rotr8@@Base>:
   13688:	and	w0, w0, #0xff
   1368c:	lsr	w2, w0, w1
   13690:	neg	w1, w1
   13694:	and	w1, w1, #0x7
   13698:	lsl	w0, w0, w1
   1369c:	orr	w0, w2, w0
   136a0:	ret

00000000000136a4 <canonicalize_filename_mode@@Base>:
   136a4:	stp	x29, x30, [sp, #-272]!
   136a8:	mov	x29, sp
   136ac:	stp	x23, x24, [sp, #48]
   136b0:	stp	x25, x26, [sp, #64]
   136b4:	stp	x27, x28, [sp, #80]
   136b8:	mov	x27, x0
   136bc:	and	w26, w1, #0x3
   136c0:	sub	w0, w26, #0x1
   136c4:	tst	w0, w26
   136c8:	b.ne	1374c <canonicalize_filename_mode@@Base+0xa8>  // b.any
   136cc:	mov	w25, w1
   136d0:	cbz	x27, 13760 <canonicalize_filename_mode@@Base+0xbc>
   136d4:	ldrb	w0, [x27]
   136d8:	cbz	w0, 13774 <canonicalize_filename_mode@@Base+0xd0>
   136dc:	stp	x21, x22, [sp, #32]
   136e0:	cmp	w0, #0x2f
   136e4:	b.eq	137a4 <canonicalize_filename_mode@@Base+0x100>  // b.none
   136e8:	bl	b000 <xgetcwd@plt>
   136ec:	mov	x23, x0
   136f0:	cbz	x0, 13c30 <canonicalize_filename_mode@@Base+0x58c>
   136f4:	bl	a340 <strlen@plt>
   136f8:	mov	x21, x0
   136fc:	cmp	x0, #0xfff
   13700:	b.le	13788 <canonicalize_filename_mode@@Base+0xe4>
   13704:	add	x21, x23, x0
   13708:	mov	x24, x21
   1370c:	ldrb	w0, [x27]
   13710:	cbz	w0, 13b64 <canonicalize_filename_mode@@Base+0x4c0>
   13714:	stp	x19, x20, [sp, #16]
   13718:	and	w25, w25, #0x4
   1371c:	mov	x19, x27
   13720:	str	xzr, [sp, #96]
   13724:	str	xzr, [sp, #112]
   13728:	str	xzr, [sp, #104]
   1372c:	add	x28, sp, #0x90
   13730:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   13734:	ldr	x0, [x0, #3848]
   13738:	str	x0, [sp, #120]
   1373c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   13740:	ldr	x0, [x0, #3928]
   13744:	str	x0, [sp, #128]
   13748:	b	138dc <canonicalize_filename_mode@@Base+0x238>
   1374c:	bl	aeb0 <__errno_location@plt>
   13750:	mov	w1, #0x16                  	// #22
   13754:	str	w1, [x0]
   13758:	mov	x23, #0x0                   	// #0
   1375c:	b	13c18 <canonicalize_filename_mode@@Base+0x574>
   13760:	bl	aeb0 <__errno_location@plt>
   13764:	mov	w1, #0x16                  	// #22
   13768:	str	w1, [x0]
   1376c:	mov	x23, x27
   13770:	b	13c18 <canonicalize_filename_mode@@Base+0x574>
   13774:	bl	aeb0 <__errno_location@plt>
   13778:	mov	w1, #0x2                   	// #2
   1377c:	str	w1, [x0]
   13780:	mov	x23, #0x0                   	// #0
   13784:	b	13c18 <canonicalize_filename_mode@@Base+0x574>
   13788:	mov	x1, #0x1000                	// #4096
   1378c:	mov	x0, x23
   13790:	bl	a660 <xrealloc@plt>
   13794:	mov	x23, x0
   13798:	add	x21, x0, x21
   1379c:	add	x24, x0, #0x1, lsl #12
   137a0:	b	1370c <canonicalize_filename_mode@@Base+0x68>
   137a4:	mov	x0, #0x1000                	// #4096
   137a8:	bl	a710 <xmalloc@plt>
   137ac:	mov	x23, x0
   137b0:	add	x24, x0, #0x1, lsl #12
   137b4:	mov	x21, x0
   137b8:	mov	w0, #0x2f                  	// #47
   137bc:	strb	w0, [x21], #1
   137c0:	ldrb	w0, [x27]
   137c4:	cbnz	w0, 13714 <canonicalize_filename_mode@@Base+0x70>
   137c8:	str	xzr, [sp, #96]
   137cc:	str	xzr, [sp, #104]
   137d0:	b	13b90 <canonicalize_filename_mode@@Base+0x4ec>
   137d4:	ldrb	w0, [x19, #1]
   137d8:	cmp	w0, #0x2e
   137dc:	b.ne	13944 <canonicalize_filename_mode@@Base+0x2a0>  // b.any
   137e0:	add	x0, x23, #0x1
   137e4:	mov	x19, x20
   137e8:	cmp	x21, x0
   137ec:	b.ls	138d4 <canonicalize_filename_mode@@Base+0x230>  // b.plast
   137f0:	sub	x21, x21, #0x1
   137f4:	cmp	x21, x23
   137f8:	b.ls	138d4 <canonicalize_filename_mode@@Base+0x230>  // b.plast
   137fc:	ldurb	w0, [x21, #-1]
   13800:	cmp	w0, #0x2f
   13804:	b.ne	13810 <canonicalize_filename_mode@@Base+0x16c>  // b.any
   13808:	mov	x19, x20
   1380c:	b	138d4 <canonicalize_filename_mode@@Base+0x230>
   13810:	sub	x21, x21, #0x1
   13814:	cmp	x21, x23
   13818:	b.ne	137fc <canonicalize_filename_mode@@Base+0x158>  // b.any
   1381c:	mov	x19, x20
   13820:	mov	x21, x23
   13824:	b	138d4 <canonicalize_filename_mode@@Base+0x230>
   13828:	cbz	w25, 13878 <canonicalize_filename_mode@@Base+0x1d4>
   1382c:	mov	x2, x28
   13830:	mov	x1, x23
   13834:	mov	w0, #0x0                   	// #0
   13838:	bl	aef0 <__xstat@plt>
   1383c:	cmp	w0, #0x0
   13840:	cset	w0, ne  // ne = any
   13844:	cbz	w0, 138b8 <canonicalize_filename_mode@@Base+0x214>
   13848:	bl	aeb0 <__errno_location@plt>
   1384c:	ldr	w19, [x0]
   13850:	cbz	w26, 13be4 <canonicalize_filename_mode@@Base+0x540>
   13854:	cmp	w26, #0x1
   13858:	b.eq	13894 <canonicalize_filename_mode@@Base+0x1f0>  // b.none
   1385c:	str	wzr, [sp, #160]
   13860:	ldrb	w0, [x20]
   13864:	cmp	w0, #0x0
   13868:	ccmp	w26, #0x2, #0x4, ne  // ne = any
   1386c:	b.eq	138d0 <canonicalize_filename_mode@@Base+0x22c>  // b.none
   13870:	mov	w19, #0x14                  	// #20
   13874:	b	13be4 <canonicalize_filename_mode@@Base+0x540>
   13878:	mov	x2, x28
   1387c:	mov	x1, x23
   13880:	mov	w0, #0x0                   	// #0
   13884:	bl	ac70 <__lxstat@plt>
   13888:	cmp	w0, #0x0
   1388c:	cset	w0, ne  // ne = any
   13890:	b	13844 <canonicalize_filename_mode@@Base+0x1a0>
   13894:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   13898:	add	x1, x1, #0xb00
   1389c:	mov	x0, x20
   138a0:	bl	ab40 <strspn@plt>
   138a4:	ldrb	w0, [x20, x0]
   138a8:	cmp	w0, #0x0
   138ac:	ccmp	w19, #0x2, #0x0, eq  // eq = none
   138b0:	b.eq	139ec <canonicalize_filename_mode@@Base+0x348>  // b.none
   138b4:	b	13be4 <canonicalize_filename_mode@@Base+0x540>
   138b8:	ldr	w0, [sp, #160]
   138bc:	and	w0, w0, #0xf000
   138c0:	cmp	w0, #0xa, lsl #12
   138c4:	b.eq	139c0 <canonicalize_filename_mode@@Base+0x31c>  // b.none
   138c8:	cmp	w0, #0x4, lsl #12
   138cc:	b.ne	13860 <canonicalize_filename_mode@@Base+0x1bc>  // b.any
   138d0:	mov	x19, x20
   138d4:	ldrb	w0, [x19]
   138d8:	cbz	w0, 13bd8 <canonicalize_filename_mode@@Base+0x534>
   138dc:	ldrb	w1, [x19]
   138e0:	cmp	w1, #0x2f
   138e4:	b.ne	138f4 <canonicalize_filename_mode@@Base+0x250>  // b.any
   138e8:	ldrb	w1, [x19, #1]!
   138ec:	cmp	w1, #0x2f
   138f0:	b.eq	138e8 <canonicalize_filename_mode@@Base+0x244>  // b.none
   138f4:	ldrb	w0, [x19]
   138f8:	cmp	w0, #0x2f
   138fc:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   13900:	b.eq	13b70 <canonicalize_filename_mode@@Base+0x4cc>  // b.none
   13904:	mov	x20, x19
   13908:	ldrb	w0, [x20, #1]!
   1390c:	cmp	w0, #0x2f
   13910:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   13914:	b.ne	13908 <canonicalize_filename_mode@@Base+0x264>  // b.any
   13918:	cmp	x20, x19
   1391c:	b.eq	13bd0 <canonicalize_filename_mode@@Base+0x52c>  // b.none
   13920:	sub	x22, x20, x19
   13924:	cmp	w1, #0x2e
   13928:	cset	w0, eq  // eq = none
   1392c:	cmp	w0, #0x0
   13930:	ccmp	x22, #0x1, #0x0, ne  // ne = any
   13934:	b.eq	13b5c <canonicalize_filename_mode@@Base+0x4b8>  // b.none
   13938:	cmp	w0, #0x0
   1393c:	ccmp	x22, #0x2, #0x0, ne  // ne = any
   13940:	b.eq	137d4 <canonicalize_filename_mode@@Base+0x130>  // b.none
   13944:	ldurb	w0, [x21, #-1]
   13948:	cmp	w0, #0x2f
   1394c:	b.eq	13958 <canonicalize_filename_mode@@Base+0x2b4>  // b.none
   13950:	mov	w0, #0x2f                  	// #47
   13954:	strb	w0, [x21], #1
   13958:	add	x0, x21, x22
   1395c:	cmp	x24, x0
   13960:	b.hi	13994 <canonicalize_filename_mode@@Base+0x2f0>  // b.pmore
   13964:	sub	x21, x21, x23
   13968:	sub	x0, x24, x23
   1396c:	add	x1, x22, x0
   13970:	add	x24, x0, #0x1, lsl #12
   13974:	cmp	x22, #0x1, lsl #12
   13978:	csinc	x24, x24, x1, lt  // lt = tstop
   1397c:	mov	x1, x24
   13980:	mov	x0, x23
   13984:	bl	a660 <xrealloc@plt>
   13988:	mov	x23, x0
   1398c:	add	x24, x0, x24
   13990:	add	x21, x0, x21
   13994:	mov	x2, x22
   13998:	mov	x1, x19
   1399c:	mov	x0, x21
   139a0:	bl	a2c0 <memcpy@plt>
   139a4:	add	x21, x0, x22
   139a8:	strb	wzr, [x0, x22]
   139ac:	cmp	w25, #0x0
   139b0:	ccmp	w26, #0x2, #0x0, ne  // ne = any
   139b4:	b.ne	13828 <canonicalize_filename_mode@@Base+0x184>  // b.any
   139b8:	str	wzr, [sp, #160]
   139bc:	b	138d0 <canonicalize_filename_mode@@Base+0x22c>
   139c0:	ldr	x0, [sp, #96]
   139c4:	cbz	x0, 139f4 <canonicalize_filename_mode@@Base+0x350>
   139c8:	mov	x2, x28
   139cc:	mov	x1, x27
   139d0:	ldr	x19, [sp, #96]
   139d4:	mov	x0, x19
   139d8:	bl	a9f0 <seen_file@plt>
   139dc:	and	w0, w0, #0xff
   139e0:	cbz	w0, 13a1c <canonicalize_filename_mode@@Base+0x378>
   139e4:	cmp	w26, #0x2
   139e8:	b.ne	13be0 <canonicalize_filename_mode@@Base+0x53c>  // b.any
   139ec:	mov	x19, x20
   139f0:	b	138d4 <canonicalize_filename_mode@@Base+0x230>
   139f4:	ldr	x4, [sp, #120]
   139f8:	ldr	x3, [sp, #128]
   139fc:	adrp	x2, 46000 <vasnprintf@@Base+0x1b378>
   13a00:	ldr	x2, [x2, #3888]
   13a04:	mov	x1, #0x0                   	// #0
   13a08:	mov	x0, #0x7                   	// #7
   13a0c:	bl	a800 <hash_initialize@plt>
   13a10:	str	x0, [sp, #96]
   13a14:	cbnz	x0, 139c8 <canonicalize_filename_mode@@Base+0x324>
   13a18:	bl	a890 <xalloc_die@plt>
   13a1c:	mov	x2, x28
   13a20:	mov	x1, x27
   13a24:	mov	x0, x19
   13a28:	bl	a600 <record_file@plt>
   13a2c:	ldr	x1, [sp, #192]
   13a30:	mov	x0, x23
   13a34:	bl	ab70 <areadlink_with_size@plt>
   13a38:	mov	x19, x0
   13a3c:	cbz	x0, 13ac4 <canonicalize_filename_mode@@Base+0x420>
   13a40:	bl	a340 <strlen@plt>
   13a44:	mov	x22, x0
   13a48:	mov	x0, x20
   13a4c:	bl	a340 <strlen@plt>
   13a50:	mov	x27, x0
   13a54:	ldr	x0, [sp, #112]
   13a58:	cbz	x0, 13ae8 <canonicalize_filename_mode@@Base+0x444>
   13a5c:	add	x0, x22, x27
   13a60:	add	x0, x0, #0x1
   13a64:	str	x0, [sp, #136]
   13a68:	ldr	x1, [sp, #112]
   13a6c:	cmp	x0, x1
   13a70:	b.hi	13b0c <canonicalize_filename_mode@@Base+0x468>  // b.pmore
   13a74:	add	x2, x27, #0x1
   13a78:	mov	x1, x20
   13a7c:	ldr	x20, [sp, #104]
   13a80:	add	x0, x20, x22
   13a84:	bl	a2d0 <memmove@plt>
   13a88:	mov	x2, x22
   13a8c:	mov	x1, x19
   13a90:	mov	x0, x20
   13a94:	bl	a2c0 <memcpy@plt>
   13a98:	mov	x27, x0
   13a9c:	ldrb	w0, [x19]
   13aa0:	cmp	w0, #0x2f
   13aa4:	b.eq	13b28 <canonicalize_filename_mode@@Base+0x484>  // b.none
   13aa8:	add	x0, x23, #0x1
   13aac:	cmp	x21, x0
   13ab0:	b.hi	13b34 <canonicalize_filename_mode@@Base+0x490>  // b.pmore
   13ab4:	mov	x0, x19
   13ab8:	bl	aa50 <free@plt>
   13abc:	mov	x20, x27
   13ac0:	b	138d0 <canonicalize_filename_mode@@Base+0x22c>
   13ac4:	cmp	w26, #0x2
   13ac8:	b.ne	13adc <canonicalize_filename_mode@@Base+0x438>  // b.any
   13acc:	bl	aeb0 <__errno_location@plt>
   13ad0:	ldr	w0, [x0]
   13ad4:	cmp	w0, #0xc
   13ad8:	b.ne	139ec <canonicalize_filename_mode@@Base+0x348>  // b.any
   13adc:	bl	aeb0 <__errno_location@plt>
   13ae0:	ldr	w19, [x0]
   13ae4:	b	13be4 <canonicalize_filename_mode@@Base+0x540>
   13ae8:	add	x0, x22, x27
   13aec:	add	x1, x0, #0x1
   13af0:	cmp	x1, #0x1, lsl #12
   13af4:	mov	x0, #0x1000                	// #4096
   13af8:	csel	x0, x1, x0, cs  // cs = hs, nlast
   13afc:	str	x0, [sp, #112]
   13b00:	bl	a710 <xmalloc@plt>
   13b04:	str	x0, [sp, #104]
   13b08:	b	13a74 <canonicalize_filename_mode@@Base+0x3d0>
   13b0c:	mov	x1, x0
   13b10:	ldr	x0, [sp, #104]
   13b14:	bl	a660 <xrealloc@plt>
   13b18:	str	x0, [sp, #104]
   13b1c:	ldr	x0, [sp, #136]
   13b20:	str	x0, [sp, #112]
   13b24:	b	13a74 <canonicalize_filename_mode@@Base+0x3d0>
   13b28:	mov	x21, x23
   13b2c:	strb	w0, [x21], #1
   13b30:	b	13ab4 <canonicalize_filename_mode@@Base+0x410>
   13b34:	sub	x21, x21, #0x1
   13b38:	cmp	x23, x21
   13b3c:	b.cs	13ab4 <canonicalize_filename_mode@@Base+0x410>  // b.hs, b.nlast
   13b40:	ldurb	w0, [x21, #-1]
   13b44:	cmp	w0, #0x2f
   13b48:	b.eq	13ab4 <canonicalize_filename_mode@@Base+0x410>  // b.none
   13b4c:	sub	x21, x21, #0x1
   13b50:	cmp	x23, x21
   13b54:	b.ne	13b40 <canonicalize_filename_mode@@Base+0x49c>  // b.any
   13b58:	b	13ab4 <canonicalize_filename_mode@@Base+0x410>
   13b5c:	mov	x19, x20
   13b60:	b	138d4 <canonicalize_filename_mode@@Base+0x230>
   13b64:	str	xzr, [sp, #96]
   13b68:	str	xzr, [sp, #104]
   13b6c:	b	13b74 <canonicalize_filename_mode@@Base+0x4d0>
   13b70:	ldp	x19, x20, [sp, #16]
   13b74:	add	x0, x23, #0x1
   13b78:	cmp	x21, x0
   13b7c:	b.ls	13b90 <canonicalize_filename_mode@@Base+0x4ec>  // b.plast
   13b80:	ldurb	w0, [x21, #-1]
   13b84:	cmp	w0, #0x2f
   13b88:	cset	x0, eq  // eq = none
   13b8c:	sub	x21, x21, x0
   13b90:	mov	x0, x21
   13b94:	strb	wzr, [x0], #1
   13b98:	cmp	x24, x0
   13b9c:	b.eq	13bb4 <canonicalize_filename_mode@@Base+0x510>  // b.none
   13ba0:	sub	x1, x21, x23
   13ba4:	add	x1, x1, #0x1
   13ba8:	mov	x0, x23
   13bac:	bl	a660 <xrealloc@plt>
   13bb0:	mov	x23, x0
   13bb4:	ldr	x0, [sp, #104]
   13bb8:	bl	aa50 <free@plt>
   13bbc:	ldr	x0, [sp, #96]
   13bc0:	cbz	x0, 13c38 <canonicalize_filename_mode@@Base+0x594>
   13bc4:	bl	a580 <hash_free@plt>
   13bc8:	ldp	x21, x22, [sp, #32]
   13bcc:	b	13c18 <canonicalize_filename_mode@@Base+0x574>
   13bd0:	ldp	x19, x20, [sp, #16]
   13bd4:	b	13b74 <canonicalize_filename_mode@@Base+0x4d0>
   13bd8:	ldp	x19, x20, [sp, #16]
   13bdc:	b	13b74 <canonicalize_filename_mode@@Base+0x4d0>
   13be0:	mov	w19, #0x28                  	// #40
   13be4:	ldr	x0, [sp, #104]
   13be8:	bl	aa50 <free@plt>
   13bec:	mov	x0, x23
   13bf0:	bl	aa50 <free@plt>
   13bf4:	ldr	x0, [sp, #96]
   13bf8:	cbz	x0, 13c04 <canonicalize_filename_mode@@Base+0x560>
   13bfc:	ldr	x0, [sp, #96]
   13c00:	bl	a580 <hash_free@plt>
   13c04:	bl	aeb0 <__errno_location@plt>
   13c08:	str	w19, [x0]
   13c0c:	mov	x23, #0x0                   	// #0
   13c10:	ldp	x19, x20, [sp, #16]
   13c14:	ldp	x21, x22, [sp, #32]
   13c18:	mov	x0, x23
   13c1c:	ldp	x23, x24, [sp, #48]
   13c20:	ldp	x25, x26, [sp, #64]
   13c24:	ldp	x27, x28, [sp, #80]
   13c28:	ldp	x29, x30, [sp], #272
   13c2c:	ret
   13c30:	ldp	x21, x22, [sp, #32]
   13c34:	b	13c18 <canonicalize_filename_mode@@Base+0x574>
   13c38:	ldp	x21, x22, [sp, #32]
   13c3c:	b	13c18 <canonicalize_filename_mode@@Base+0x574>

0000000000013c40 <set_cloexec_flag@@Base>:
   13c40:	stp	x29, x30, [sp, #-32]!
   13c44:	mov	x29, sp
   13c48:	stp	x19, x20, [sp, #16]
   13c4c:	mov	w19, w0
   13c50:	and	w20, w1, #0xff
   13c54:	mov	w2, #0x0                   	// #0
   13c58:	mov	w1, #0x1                   	// #1
   13c5c:	bl	abe0 <rpl_fcntl@plt>
   13c60:	tbnz	w0, #31, 13ca4 <set_cloexec_flag@@Base+0x64>
   13c64:	mov	w1, w0
   13c68:	orr	w0, w0, #0x1
   13c6c:	and	w2, w1, #0xfffffffe
   13c70:	cmp	w20, #0x0
   13c74:	csel	w2, w2, w0, eq  // eq = none
   13c78:	mov	w0, #0x0                   	// #0
   13c7c:	cmp	w2, w1
   13c80:	b.eq	13c98 <set_cloexec_flag@@Base+0x58>  // b.none
   13c84:	mov	w1, #0x2                   	// #2
   13c88:	mov	w0, w19
   13c8c:	bl	abe0 <rpl_fcntl@plt>
   13c90:	cmn	w0, #0x1
   13c94:	csetm	w0, eq  // eq = none
   13c98:	ldp	x19, x20, [sp, #16]
   13c9c:	ldp	x29, x30, [sp], #32
   13ca0:	ret
   13ca4:	mov	w0, #0xffffffff            	// #-1
   13ca8:	b	13c98 <set_cloexec_flag@@Base+0x58>

0000000000013cac <dup_cloexec@@Base>:
   13cac:	stp	x29, x30, [sp, #-16]!
   13cb0:	mov	x29, sp
   13cb4:	mov	w2, #0x0                   	// #0
   13cb8:	mov	w1, #0x406                 	// #1030
   13cbc:	bl	abe0 <rpl_fcntl@plt>
   13cc0:	ldp	x29, x30, [sp], #16
   13cc4:	ret

0000000000013cc8 <dir_name@@Base>:
   13cc8:	stp	x29, x30, [sp, #-16]!
   13ccc:	mov	x29, sp
   13cd0:	bl	a550 <mdir_name@plt>
   13cd4:	cbz	x0, 13ce0 <dir_name@@Base+0x18>
   13cd8:	ldp	x29, x30, [sp], #16
   13cdc:	ret
   13ce0:	bl	a890 <xalloc_die@plt>

0000000000013ce4 <base_name@@Base>:
   13ce4:	stp	x29, x30, [sp, #-32]!
   13ce8:	mov	x29, sp
   13cec:	stp	x19, x20, [sp, #16]
   13cf0:	mov	x20, x0
   13cf4:	bl	a780 <last_component@plt>
   13cf8:	mov	x19, x0
   13cfc:	ldrb	w0, [x0]
   13d00:	cbz	w0, 13d2c <base_name@@Base+0x48>
   13d04:	mov	x0, x19
   13d08:	bl	a2a0 <base_len@plt>
   13d0c:	ldrb	w1, [x19, x0]
   13d10:	cmp	w1, #0x2f
   13d14:	cinc	x1, x0, eq  // eq = none
   13d18:	mov	x0, x19
   13d1c:	bl	acf0 <xstrndup@plt>
   13d20:	ldp	x19, x20, [sp, #16]
   13d24:	ldp	x29, x30, [sp], #32
   13d28:	ret
   13d2c:	mov	x0, x20
   13d30:	bl	a2a0 <base_len@plt>
   13d34:	mov	x1, x0
   13d38:	mov	x0, x20
   13d3c:	bl	acf0 <xstrndup@plt>
   13d40:	b	13d20 <base_name@@Base+0x3c>

0000000000013d44 <dir_len@@Base>:
   13d44:	stp	x29, x30, [sp, #-32]!
   13d48:	mov	x29, sp
   13d4c:	stp	x19, x20, [sp, #16]
   13d50:	mov	x19, x0
   13d54:	ldrb	w1, [x0]
   13d58:	cmp	w1, #0x2f
   13d5c:	cset	x20, eq  // eq = none
   13d60:	bl	a780 <last_component@plt>
   13d64:	sub	x0, x0, x19
   13d68:	cmp	x0, x20
   13d6c:	b.ls	13d88 <dir_len@@Base+0x44>  // b.plast
   13d70:	sub	x1, x0, #0x1
   13d74:	ldrb	w2, [x19, x1]
   13d78:	cmp	w2, #0x2f
   13d7c:	b.ne	13d88 <dir_len@@Base+0x44>  // b.any
   13d80:	mov	x0, x1
   13d84:	b	13d68 <dir_len@@Base+0x24>
   13d88:	ldp	x19, x20, [sp, #16]
   13d8c:	ldp	x29, x30, [sp], #32
   13d90:	ret

0000000000013d94 <mdir_name@@Base>:
   13d94:	stp	x29, x30, [sp, #-48]!
   13d98:	mov	x29, sp
   13d9c:	stp	x19, x20, [sp, #16]
   13da0:	str	x21, [sp, #32]
   13da4:	mov	x21, x0
   13da8:	bl	aa20 <dir_len@plt>
   13dac:	mov	x19, x0
   13db0:	cmp	x0, #0x0
   13db4:	add	x0, x0, #0x1
   13db8:	cinc	x0, x0, eq  // eq = none
   13dbc:	bl	a5f0 <malloc@plt>
   13dc0:	mov	x20, x0
   13dc4:	cbz	x0, 13de8 <mdir_name@@Base+0x54>
   13dc8:	mov	x2, x19
   13dcc:	mov	x1, x21
   13dd0:	bl	a2c0 <memcpy@plt>
   13dd4:	cbnz	x19, 13de4 <mdir_name@@Base+0x50>
   13dd8:	mov	w0, #0x2e                  	// #46
   13ddc:	strb	w0, [x20]
   13de0:	mov	x19, #0x1                   	// #1
   13de4:	strb	wzr, [x20, x19]
   13de8:	mov	x0, x20
   13dec:	ldp	x19, x20, [sp, #16]
   13df0:	ldr	x21, [sp, #32]
   13df4:	ldp	x29, x30, [sp], #48
   13df8:	ret

0000000000013dfc <last_component@@Base>:
   13dfc:	ldrb	w1, [x0]
   13e00:	cmp	w1, #0x2f
   13e04:	b.ne	13e14 <last_component@@Base+0x18>  // b.any
   13e08:	ldrb	w1, [x0, #1]!
   13e0c:	cmp	w1, #0x2f
   13e10:	b.eq	13e08 <last_component@@Base+0xc>  // b.none
   13e14:	ldrb	w2, [x0]
   13e18:	cbz	w2, 13e54 <last_component@@Base+0x58>
   13e1c:	mov	x3, x0
   13e20:	mov	w1, #0x0                   	// #0
   13e24:	mov	w5, #0x1                   	// #1
   13e28:	mov	w4, #0x0                   	// #0
   13e2c:	b	13e44 <last_component@@Base+0x48>
   13e30:	cmp	w1, #0x0
   13e34:	csel	x0, x0, x3, eq  // eq = none
   13e38:	csel	w1, w1, w4, eq  // eq = none
   13e3c:	ldrb	w2, [x3, #1]!
   13e40:	cbz	w2, 13e54 <last_component@@Base+0x58>
   13e44:	cmp	w2, #0x2f
   13e48:	b.ne	13e30 <last_component@@Base+0x34>  // b.any
   13e4c:	mov	w1, w5
   13e50:	b	13e3c <last_component@@Base+0x40>
   13e54:	ret

0000000000013e58 <base_len@@Base>:
   13e58:	stp	x29, x30, [sp, #-32]!
   13e5c:	mov	x29, sp
   13e60:	str	x19, [sp, #16]
   13e64:	mov	x19, x0
   13e68:	bl	a340 <strlen@plt>
   13e6c:	cmp	x0, #0x1
   13e70:	b.ls	13e84 <base_len@@Base+0x2c>  // b.plast
   13e74:	sub	x1, x0, #0x1
   13e78:	ldrb	w2, [x19, x1]
   13e7c:	cmp	w2, #0x2f
   13e80:	b.eq	13e90 <base_len@@Base+0x38>  // b.none
   13e84:	ldr	x19, [sp, #16]
   13e88:	ldp	x29, x30, [sp], #32
   13e8c:	ret
   13e90:	mov	x0, x1
   13e94:	b	13e6c <base_len@@Base+0x14>

0000000000013e98 <strip_trailing_slashes@@Base>:
   13e98:	stp	x29, x30, [sp, #-32]!
   13e9c:	mov	x29, sp
   13ea0:	str	x19, [sp, #16]
   13ea4:	mov	x19, x0
   13ea8:	bl	a780 <last_component@plt>
   13eac:	ldrb	w1, [x0]
   13eb0:	cmp	w1, #0x0
   13eb4:	csel	x19, x19, x0, eq  // eq = none
   13eb8:	mov	x0, x19
   13ebc:	bl	a2a0 <base_len@plt>
   13ec0:	ldrb	w1, [x19, x0]
   13ec4:	cmp	w1, #0x0
   13ec8:	strb	wzr, [x19, x0]
   13ecc:	cset	w0, ne  // ne = any
   13ed0:	ldr	x19, [sp, #16]
   13ed4:	ldp	x29, x30, [sp], #32
   13ed8:	ret

0000000000013edc <fd_safer_flag@@Base>:
   13edc:	stp	x29, x30, [sp, #-48]!
   13ee0:	mov	x29, sp
   13ee4:	stp	x19, x20, [sp, #16]
   13ee8:	mov	w19, w0
   13eec:	cmp	w0, #0x2
   13ef0:	b.ls	13f04 <fd_safer_flag@@Base+0x28>  // b.plast
   13ef4:	mov	w0, w19
   13ef8:	ldp	x19, x20, [sp, #16]
   13efc:	ldp	x29, x30, [sp], #48
   13f00:	ret
   13f04:	stp	x21, x22, [sp, #32]
   13f08:	bl	ac80 <dup_safer_flag@plt>
   13f0c:	mov	w21, w0
   13f10:	bl	aeb0 <__errno_location@plt>
   13f14:	mov	x20, x0
   13f18:	ldr	w22, [x0]
   13f1c:	mov	w0, w19
   13f20:	bl	a850 <close@plt>
   13f24:	str	w22, [x20]
   13f28:	mov	w19, w21
   13f2c:	ldp	x21, x22, [sp, #32]
   13f30:	b	13ef4 <fd_safer_flag@@Base+0x18>

0000000000013f34 <dup_safer_flag@@Base>:
   13f34:	stp	x29, x30, [sp, #-16]!
   13f38:	mov	x29, sp
   13f3c:	ands	w1, w1, #0x80000
   13f40:	mov	w2, #0x3                   	// #3
   13f44:	mov	w3, #0x406                 	// #1030
   13f48:	csel	w1, w1, w3, eq  // eq = none
   13f4c:	bl	abe0 <rpl_fcntl@plt>
   13f50:	ldp	x29, x30, [sp], #16
   13f54:	ret

0000000000013f58 <record_file@@Base>:
   13f58:	cbz	x0, 13fd4 <record_file@@Base+0x7c>
   13f5c:	stp	x29, x30, [sp, #-48]!
   13f60:	mov	x29, sp
   13f64:	stp	x19, x20, [sp, #16]
   13f68:	stp	x21, x22, [sp, #32]
   13f6c:	mov	x20, x0
   13f70:	mov	x22, x1
   13f74:	mov	x21, x2
   13f78:	mov	x0, #0x18                  	// #24
   13f7c:	bl	a710 <xmalloc@plt>
   13f80:	mov	x19, x0
   13f84:	mov	x0, x22
   13f88:	bl	a730 <xstrdup@plt>
   13f8c:	str	x0, [x19]
   13f90:	ldr	x0, [x21, #8]
   13f94:	str	x0, [x19, #8]
   13f98:	ldr	x0, [x21]
   13f9c:	str	x0, [x19, #16]
   13fa0:	mov	x1, x19
   13fa4:	mov	x0, x20
   13fa8:	bl	a450 <hash_insert@plt>
   13fac:	cbz	x0, 13fd0 <record_file@@Base+0x78>
   13fb0:	cmp	x19, x0
   13fb4:	b.eq	13fc0 <record_file@@Base+0x68>  // b.none
   13fb8:	mov	x0, x19
   13fbc:	bl	a560 <triple_free@plt>
   13fc0:	ldp	x19, x20, [sp, #16]
   13fc4:	ldp	x21, x22, [sp, #32]
   13fc8:	ldp	x29, x30, [sp], #48
   13fcc:	ret
   13fd0:	bl	a890 <xalloc_die@plt>
   13fd4:	ret

0000000000013fd8 <seen_file@@Base>:
   13fd8:	cbz	x0, 14010 <seen_file@@Base+0x38>
   13fdc:	stp	x29, x30, [sp, #-48]!
   13fe0:	mov	x29, sp
   13fe4:	str	x1, [sp, #24]
   13fe8:	ldr	x1, [x2, #8]
   13fec:	str	x1, [sp, #32]
   13ff0:	ldr	x1, [x2]
   13ff4:	str	x1, [sp, #40]
   13ff8:	add	x1, sp, #0x18
   13ffc:	bl	a870 <hash_lookup@plt>
   14000:	cmp	x0, #0x0
   14004:	cset	w0, ne  // ne = any
   14008:	ldp	x29, x30, [sp], #48
   1400c:	ret
   14010:	mov	w0, #0x0                   	// #0
   14014:	ret

0000000000014018 <mfile_name_concat@@Base>:
   14018:	stp	x29, x30, [sp, #-80]!
   1401c:	mov	x29, sp
   14020:	stp	x19, x20, [sp, #16]
   14024:	stp	x21, x22, [sp, #32]
   14028:	stp	x23, x24, [sp, #48]
   1402c:	stp	x25, x26, [sp, #64]
   14030:	mov	x23, x0
   14034:	mov	x21, x1
   14038:	mov	x22, x2
   1403c:	bl	a780 <last_component@plt>
   14040:	mov	x19, x0
   14044:	bl	a2a0 <base_len@plt>
   14048:	mov	x20, x0
   1404c:	sub	x19, x19, x23
   14050:	add	x19, x19, x0
   14054:	mov	x0, x21
   14058:	bl	a340 <strlen@plt>
   1405c:	mov	x24, x0
   14060:	add	x0, x0, #0x1
   14064:	cbz	x20, 14090 <mfile_name_concat@@Base+0x78>
   14068:	add	x1, x23, x19
   1406c:	ldurb	w1, [x1, #-1]
   14070:	mov	w25, #0x0                   	// #0
   14074:	cmp	w1, #0x2f
   14078:	b.eq	140a0 <mfile_name_concat@@Base+0x88>  // b.none
   1407c:	ldrb	w1, [x21]
   14080:	cmp	w1, #0x2f
   14084:	mov	w25, #0x2f                  	// #47
   14088:	csel	w25, w25, wzr, ne  // ne = any
   1408c:	b	140a0 <mfile_name_concat@@Base+0x88>
   14090:	ldrb	w1, [x21]
   14094:	cmp	w1, #0x2f
   14098:	mov	w25, #0x2e                  	// #46
   1409c:	csel	w25, w25, wzr, eq  // eq = none
   140a0:	cmp	w25, #0x0
   140a4:	cset	x26, ne  // ne = any
   140a8:	cinc	x1, x19, ne  // ne = any
   140ac:	add	x0, x1, x0
   140b0:	bl	a5f0 <malloc@plt>
   140b4:	mov	x20, x0
   140b8:	cbz	x0, 140e8 <mfile_name_concat@@Base+0xd0>
   140bc:	mov	x2, x19
   140c0:	mov	x1, x23
   140c4:	bl	aab0 <mempcpy@plt>
   140c8:	strb	w25, [x0]
   140cc:	add	x0, x0, x26
   140d0:	cbz	x22, 140d8 <mfile_name_concat@@Base+0xc0>
   140d4:	str	x0, [x22]
   140d8:	mov	x2, x24
   140dc:	mov	x1, x21
   140e0:	bl	aab0 <mempcpy@plt>
   140e4:	strb	wzr, [x0]
   140e8:	mov	x0, x20
   140ec:	ldp	x19, x20, [sp, #16]
   140f0:	ldp	x21, x22, [sp, #32]
   140f4:	ldp	x23, x24, [sp, #48]
   140f8:	ldp	x25, x26, [sp, #64]
   140fc:	ldp	x29, x30, [sp], #80
   14100:	ret

0000000000014104 <getprogname@@Base>:
   14104:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   14108:	ldr	x0, [x0, #4008]
   1410c:	ldr	x0, [x0]
   14110:	ret

0000000000014114 <gettime@@Base>:
   14114:	stp	x29, x30, [sp, #-16]!
   14118:	mov	x29, sp
   1411c:	mov	x1, x0
   14120:	mov	w0, #0x0                   	// #0
   14124:	bl	a4f0 <clock_gettime@plt>
   14128:	ldp	x29, x30, [sp], #16
   1412c:	ret

0000000000014130 <current_timespec@@Base>:
   14130:	stp	x29, x30, [sp, #-32]!
   14134:	mov	x29, sp
   14138:	add	x0, sp, #0x10
   1413c:	bl	af80 <gettime@plt>
   14140:	ldp	x0, x1, [sp, #16]
   14144:	ldp	x29, x30, [sp], #32
   14148:	ret

000000000001414c <hard_locale@@Base>:
   1414c:	stp	x29, x30, [sp, #-32]!
   14150:	mov	x29, sp
   14154:	mov	x1, #0x0                   	// #0
   14158:	bl	afd0 <setlocale@plt>
   1415c:	mov	w1, #0x1                   	// #1
   14160:	cbz	x0, 1419c <hard_locale@@Base+0x50>
   14164:	str	x19, [sp, #16]
   14168:	mov	x19, x0
   1416c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   14170:	add	x1, x1, #0x7c0
   14174:	bl	a9b0 <strcmp@plt>
   14178:	mov	w1, #0x0                   	// #0
   1417c:	cbz	w0, 141a8 <hard_locale@@Base+0x5c>
   14180:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   14184:	add	x1, x1, #0x7c8
   14188:	mov	x0, x19
   1418c:	bl	a9b0 <strcmp@plt>
   14190:	cmp	w0, #0x0
   14194:	cset	w1, ne  // ne = any
   14198:	ldr	x19, [sp, #16]
   1419c:	mov	w0, w1
   141a0:	ldp	x29, x30, [sp], #32
   141a4:	ret
   141a8:	ldr	x19, [sp, #16]
   141ac:	b	1419c <hard_locale@@Base+0x50>
   141b0:	ror	x2, x0, #3
   141b4:	udiv	x0, x2, x1
   141b8:	msub	x0, x0, x1, x2
   141bc:	ret
   141c0:	cmp	x1, x0
   141c4:	cset	w0, eq  // eq = none
   141c8:	ret
   141cc:	mov	x1, x0
   141d0:	ldr	x2, [x0, #40]
   141d4:	adrp	x0, 2d000 <vasnprintf@@Base+0x2378>
   141d8:	add	x0, x0, #0x190
   141dc:	cmp	x2, x0
   141e0:	b.eq	14280 <hard_locale@@Base+0x134>  // b.none
   141e4:	ldr	s0, [x2, #8]
   141e8:	mov	w0, #0xcccd                	// #52429
   141ec:	movk	w0, #0x3dcc, lsl #16
   141f0:	fmov	s1, w0
   141f4:	fcmpe	s0, s1
   141f8:	b.le	1425c <hard_locale@@Base+0x110>
   141fc:	mov	w0, #0x6666                	// #26214
   14200:	movk	w0, #0x3f66, lsl #16
   14204:	fmov	s1, w0
   14208:	fcmpe	s0, s1
   1420c:	b.pl	1425c <hard_locale@@Base+0x110>  // b.nfrst
   14210:	mov	w0, #0xcccd                	// #52429
   14214:	movk	w0, #0x3f8c, lsl #16
   14218:	fmov	s1, w0
   1421c:	ldr	s2, [x2, #12]
   14220:	fcmpe	s2, s1
   14224:	b.le	1425c <hard_locale@@Base+0x110>
   14228:	ldr	s1, [x2]
   1422c:	fcmpe	s1, #0.0
   14230:	b.lt	1425c <hard_locale@@Base+0x110>  // b.tstop
   14234:	mov	w0, #0xcccd                	// #52429
   14238:	movk	w0, #0x3dcc, lsl #16
   1423c:	fmov	s2, w0
   14240:	fadd	s1, s1, s2
   14244:	ldr	s2, [x2, #4]
   14248:	fcmpe	s1, s2
   1424c:	b.pl	1425c <hard_locale@@Base+0x110>  // b.nfrst
   14250:	fmov	s3, #1.000000000000000000e+00
   14254:	fcmpe	s2, s3
   14258:	b.ls	14270 <hard_locale@@Base+0x124>  // b.plast
   1425c:	adrp	x0, 2d000 <vasnprintf@@Base+0x2378>
   14260:	add	x0, x0, #0x190
   14264:	str	x0, [x1, #40]
   14268:	mov	w0, #0x0                   	// #0
   1426c:	ret
   14270:	mov	w0, #0x1                   	// #1
   14274:	fcmpe	s0, s1
   14278:	b.le	1425c <hard_locale@@Base+0x110>
   1427c:	b	1426c <hard_locale@@Base+0x120>
   14280:	mov	w0, #0x1                   	// #1
   14284:	b	1426c <hard_locale@@Base+0x120>
   14288:	ldrb	w2, [x1, #16]
   1428c:	cbnz	w2, 142b4 <hard_locale@@Base+0x168>
   14290:	ucvtf	s0, x0
   14294:	ldr	s1, [x1, #8]
   14298:	fdiv	s0, s0, s1
   1429c:	mov	w0, #0x5f800000            	// #1602224128
   142a0:	fmov	s1, w0
   142a4:	mov	x0, #0x0                   	// #0
   142a8:	fcmpe	s0, s1
   142ac:	b.ge	1435c <hard_locale@@Base+0x210>  // b.tcont
   142b0:	fcvtzu	x0, s0
   142b4:	cmp	x0, #0xa
   142b8:	mov	x1, #0xa                   	// #10
   142bc:	csel	x0, x0, x1, cs  // cs = hs, nlast
   142c0:	orr	x0, x0, #0x1
   142c4:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   142c8:	movk	x5, #0xaaab
   142cc:	cmn	x0, #0x1
   142d0:	b.ne	142f8 <hard_locale@@Base+0x1ac>  // b.any
   142d4:	mov	x0, #0x0                   	// #0
   142d8:	b	1435c <hard_locale@@Base+0x210>
   142dc:	mov	x1, #0x3                   	// #3
   142e0:	udiv	x2, x0, x1
   142e4:	msub	x1, x2, x1, x0
   142e8:	cbnz	x1, 14344 <hard_locale@@Base+0x1f8>
   142ec:	add	x0, x0, #0x2
   142f0:	cmn	x0, #0x1
   142f4:	b.eq	14360 <hard_locale@@Base+0x214>  // b.none
   142f8:	cmp	x0, #0x9
   142fc:	b.ls	142dc <hard_locale@@Base+0x190>  // b.plast
   14300:	umulh	x1, x0, x5
   14304:	and	x2, x1, #0xfffffffffffffffe
   14308:	add	x1, x2, x1, lsr #1
   1430c:	cmp	x0, x1
   14310:	b.eq	142ec <hard_locale@@Base+0x1a0>  // b.none
   14314:	mov	x3, #0x10                  	// #16
   14318:	mov	x2, #0x9                   	// #9
   1431c:	mov	x1, #0x3                   	// #3
   14320:	add	x2, x2, x3
   14324:	add	x1, x1, #0x2
   14328:	cmp	x2, x0
   1432c:	b.cs	142e0 <hard_locale@@Base+0x194>  // b.hs, b.nlast
   14330:	add	x3, x3, #0x8
   14334:	udiv	x4, x0, x1
   14338:	msub	x4, x4, x1, x0
   1433c:	cbnz	x4, 14320 <hard_locale@@Base+0x1d4>
   14340:	b	142ec <hard_locale@@Base+0x1a0>
   14344:	cmp	xzr, x0, lsr #61
   14348:	cset	x1, ne  // ne = any
   1434c:	tst	x0, #0x1000000000000000
   14350:	csinc	w1, w1, wzr, eq  // eq = none
   14354:	cmp	w1, #0x0
   14358:	csel	x0, x0, xzr, eq  // eq = none
   1435c:	ret
   14360:	mov	x0, #0x0                   	// #0
   14364:	b	1435c <hard_locale@@Base+0x210>
   14368:	stp	x29, x30, [sp, #-32]!
   1436c:	mov	x29, sp
   14370:	str	x19, [sp, #16]
   14374:	mov	x19, x0
   14378:	mov	x0, x1
   1437c:	ldr	x2, [x19, #48]
   14380:	ldr	x1, [x19, #16]
   14384:	blr	x2
   14388:	ldr	x1, [x19, #16]
   1438c:	cmp	x1, x0
   14390:	b.ls	143a8 <hard_locale@@Base+0x25c>  // b.plast
   14394:	ldr	x1, [x19]
   14398:	add	x0, x1, x0, lsl #4
   1439c:	ldr	x19, [sp, #16]
   143a0:	ldp	x29, x30, [sp], #32
   143a4:	ret
   143a8:	bl	a900 <abort@plt>
   143ac:	stp	x29, x30, [sp, #-80]!
   143b0:	mov	x29, sp
   143b4:	stp	x21, x22, [sp, #32]
   143b8:	stp	x23, x24, [sp, #48]
   143bc:	mov	x21, x0
   143c0:	ldr	x22, [x1]
   143c4:	ldr	x0, [x1, #8]
   143c8:	cmp	x22, x0
   143cc:	b.cs	14500 <hard_locale@@Base+0x3b4>  // b.hs, b.nlast
   143d0:	stp	x19, x20, [sp, #16]
   143d4:	str	x25, [sp, #64]
   143d8:	mov	x23, x1
   143dc:	and	w24, w2, #0xff
   143e0:	mov	x25, #0x10                  	// #16
   143e4:	b	144a0 <hard_locale@@Base+0x354>
   143e8:	str	x20, [x0]
   143ec:	ldr	x0, [x21, #24]
   143f0:	add	x0, x0, #0x1
   143f4:	str	x0, [x21, #24]
   143f8:	str	xzr, [x2]
   143fc:	ldr	x0, [x21, #72]
   14400:	str	x0, [x2, #8]
   14404:	str	x2, [x21, #72]
   14408:	cbz	x19, 1443c <hard_locale@@Base+0x2f0>
   1440c:	ldr	x20, [x19]
   14410:	mov	x1, x20
   14414:	mov	x0, x21
   14418:	bl	14368 <hard_locale@@Base+0x21c>
   1441c:	mov	x2, x19
   14420:	ldr	x19, [x19, #8]
   14424:	ldr	x1, [x0]
   14428:	cbz	x1, 143e8 <hard_locale@@Base+0x29c>
   1442c:	ldr	x1, [x0, #8]
   14430:	str	x1, [x2, #8]
   14434:	str	x2, [x0, #8]
   14438:	b	14408 <hard_locale@@Base+0x2bc>
   1443c:	ldr	x20, [x22]
   14440:	str	xzr, [x22, #8]
   14444:	cbnz	w24, 14490 <hard_locale@@Base+0x344>
   14448:	mov	x1, x20
   1444c:	mov	x0, x21
   14450:	bl	14368 <hard_locale@@Base+0x21c>
   14454:	mov	x19, x0
   14458:	ldr	x0, [x0]
   1445c:	cbz	x0, 144cc <hard_locale@@Base+0x380>
   14460:	ldr	x0, [x21, #72]
   14464:	cbz	x0, 144b4 <hard_locale@@Base+0x368>
   14468:	ldr	x1, [x0, #8]
   1446c:	str	x1, [x21, #72]
   14470:	str	x20, [x0]
   14474:	ldr	x1, [x19, #8]
   14478:	str	x1, [x0, #8]
   1447c:	str	x0, [x19, #8]
   14480:	str	xzr, [x22]
   14484:	ldr	x0, [x23, #24]
   14488:	sub	x0, x0, #0x1
   1448c:	str	x0, [x23, #24]
   14490:	add	x22, x22, #0x10
   14494:	ldr	x0, [x23, #8]
   14498:	cmp	x0, x22
   1449c:	b.ls	144e0 <hard_locale@@Base+0x394>  // b.plast
   144a0:	ldr	x0, [x22]
   144a4:	cbz	x0, 14490 <hard_locale@@Base+0x344>
   144a8:	ldr	x19, [x22, #8]
   144ac:	cbnz	x19, 1440c <hard_locale@@Base+0x2c0>
   144b0:	b	1443c <hard_locale@@Base+0x2f0>
   144b4:	mov	x0, x25
   144b8:	bl	a5f0 <malloc@plt>
   144bc:	cbnz	x0, 14470 <hard_locale@@Base+0x324>
   144c0:	ldp	x19, x20, [sp, #16]
   144c4:	ldr	x25, [sp, #64]
   144c8:	b	144ec <hard_locale@@Base+0x3a0>
   144cc:	str	x20, [x19]
   144d0:	ldr	x0, [x21, #24]
   144d4:	add	x0, x0, #0x1
   144d8:	str	x0, [x21, #24]
   144dc:	b	14480 <hard_locale@@Base+0x334>
   144e0:	mov	w24, #0x1                   	// #1
   144e4:	ldp	x19, x20, [sp, #16]
   144e8:	ldr	x25, [sp, #64]
   144ec:	mov	w0, w24
   144f0:	ldp	x21, x22, [sp, #32]
   144f4:	ldp	x23, x24, [sp, #48]
   144f8:	ldp	x29, x30, [sp], #80
   144fc:	ret
   14500:	mov	w24, #0x1                   	// #1
   14504:	b	144ec <hard_locale@@Base+0x3a0>
   14508:	stp	x29, x30, [sp, #-64]!
   1450c:	mov	x29, sp
   14510:	stp	x19, x20, [sp, #16]
   14514:	stp	x21, x22, [sp, #32]
   14518:	str	x23, [sp, #48]
   1451c:	mov	x21, x0
   14520:	mov	x20, x1
   14524:	mov	x22, x2
   14528:	and	w23, w3, #0xff
   1452c:	bl	14368 <hard_locale@@Base+0x21c>
   14530:	mov	x19, x0
   14534:	str	x0, [x22]
   14538:	ldr	x0, [x0]
   1453c:	cbz	x0, 145d8 <hard_locale@@Base+0x48c>
   14540:	cmp	x0, x20
   14544:	b.eq	14598 <hard_locale@@Base+0x44c>  // b.none
   14548:	ldr	x2, [x21, #56]
   1454c:	mov	x1, x0
   14550:	mov	x0, x20
   14554:	blr	x2
   14558:	and	w0, w0, #0xff
   1455c:	cbnz	w0, 14598 <hard_locale@@Base+0x44c>
   14560:	ldr	x0, [x19, #8]
   14564:	cbz	x0, 145d8 <hard_locale@@Base+0x48c>
   14568:	ldr	x1, [x0]
   1456c:	cmp	x1, x20
   14570:	b.eq	145cc <hard_locale@@Base+0x480>  // b.none
   14574:	ldr	x2, [x21, #56]
   14578:	mov	x0, x20
   1457c:	blr	x2
   14580:	and	w0, w0, #0xff
   14584:	cbnz	w0, 145cc <hard_locale@@Base+0x480>
   14588:	ldr	x19, [x19, #8]
   1458c:	ldr	x0, [x19, #8]
   14590:	cbnz	x0, 14568 <hard_locale@@Base+0x41c>
   14594:	b	145d8 <hard_locale@@Base+0x48c>
   14598:	ldr	x0, [x19]
   1459c:	cbz	w23, 145d8 <hard_locale@@Base+0x48c>
   145a0:	ldr	x1, [x19, #8]
   145a4:	cbz	x1, 145c4 <hard_locale@@Base+0x478>
   145a8:	ldp	x2, x3, [x1]
   145ac:	stp	x2, x3, [x19]
   145b0:	str	xzr, [x1]
   145b4:	ldr	x2, [x21, #72]
   145b8:	str	x2, [x1, #8]
   145bc:	str	x1, [x21, #72]
   145c0:	b	145d8 <hard_locale@@Base+0x48c>
   145c4:	str	xzr, [x19]
   145c8:	b	145d8 <hard_locale@@Base+0x48c>
   145cc:	ldr	x1, [x19, #8]
   145d0:	ldr	x0, [x1]
   145d4:	cbnz	w23, 145ec <hard_locale@@Base+0x4a0>
   145d8:	ldp	x19, x20, [sp, #16]
   145dc:	ldp	x21, x22, [sp, #32]
   145e0:	ldr	x23, [sp, #48]
   145e4:	ldp	x29, x30, [sp], #64
   145e8:	ret
   145ec:	ldr	x2, [x1, #8]
   145f0:	str	x2, [x19, #8]
   145f4:	str	xzr, [x1]
   145f8:	ldr	x2, [x21, #72]
   145fc:	str	x2, [x1, #8]
   14600:	str	x1, [x21, #72]
   14604:	b	145d8 <hard_locale@@Base+0x48c>

0000000000014608 <hash_get_n_buckets@@Base>:
   14608:	ldr	x0, [x0, #16]
   1460c:	ret

0000000000014610 <hash_get_n_buckets_used@@Base>:
   14610:	ldr	x0, [x0, #24]
   14614:	ret

0000000000014618 <hash_get_n_entries@@Base>:
   14618:	ldr	x0, [x0, #32]
   1461c:	ret

0000000000014620 <hash_get_max_bucket_length@@Base>:
   14620:	ldr	x3, [x0]
   14624:	ldr	x4, [x0, #8]
   14628:	cmp	x3, x4
   1462c:	b.cs	14674 <hash_get_max_bucket_length@@Base+0x54>  // b.hs, b.nlast
   14630:	mov	x0, #0x0                   	// #0
   14634:	b	14650 <hash_get_max_bucket_length@@Base+0x30>
   14638:	mov	x2, #0x1                   	// #1
   1463c:	cmp	x0, x2
   14640:	csel	x0, x0, x2, cs  // cs = hs, nlast
   14644:	add	x3, x3, #0x10
   14648:	cmp	x3, x4
   1464c:	b.cs	14678 <hash_get_max_bucket_length@@Base+0x58>  // b.hs, b.nlast
   14650:	ldr	x1, [x3]
   14654:	cbz	x1, 14644 <hash_get_max_bucket_length@@Base+0x24>
   14658:	ldr	x1, [x3, #8]
   1465c:	cbz	x1, 14638 <hash_get_max_bucket_length@@Base+0x18>
   14660:	mov	x2, #0x1                   	// #1
   14664:	add	x2, x2, #0x1
   14668:	ldr	x1, [x1, #8]
   1466c:	cbnz	x1, 14664 <hash_get_max_bucket_length@@Base+0x44>
   14670:	b	1463c <hash_get_max_bucket_length@@Base+0x1c>
   14674:	mov	x0, #0x0                   	// #0
   14678:	ret

000000000001467c <hash_table_ok@@Base>:
   1467c:	mov	x6, x0
   14680:	ldr	x3, [x0]
   14684:	ldr	x4, [x0, #8]
   14688:	cmp	x3, x4
   1468c:	b.cs	146d0 <hash_table_ok@@Base+0x54>  // b.hs, b.nlast
   14690:	mov	x2, #0x0                   	// #0
   14694:	mov	x5, #0x0                   	// #0
   14698:	b	146a8 <hash_table_ok@@Base+0x2c>
   1469c:	add	x3, x3, #0x10
   146a0:	cmp	x3, x4
   146a4:	b.cs	146d8 <hash_table_ok@@Base+0x5c>  // b.hs, b.nlast
   146a8:	ldr	x1, [x3]
   146ac:	cbz	x1, 1469c <hash_table_ok@@Base+0x20>
   146b0:	add	x5, x5, #0x1
   146b4:	add	x2, x2, #0x1
   146b8:	ldr	x1, [x3, #8]
   146bc:	cbz	x1, 1469c <hash_table_ok@@Base+0x20>
   146c0:	add	x2, x2, #0x1
   146c4:	ldr	x1, [x1, #8]
   146c8:	cbnz	x1, 146c0 <hash_table_ok@@Base+0x44>
   146cc:	b	1469c <hash_table_ok@@Base+0x20>
   146d0:	mov	x2, #0x0                   	// #0
   146d4:	mov	x5, #0x0                   	// #0
   146d8:	ldr	x1, [x6, #24]
   146dc:	mov	w0, #0x0                   	// #0
   146e0:	cmp	x1, x5
   146e4:	b.eq	146ec <hash_table_ok@@Base+0x70>  // b.none
   146e8:	ret
   146ec:	ldr	x0, [x6, #32]
   146f0:	cmp	x0, x2
   146f4:	cset	w0, eq  // eq = none
   146f8:	b	146e8 <hash_table_ok@@Base+0x6c>

00000000000146fc <hash_print_statistics@@Base>:
   146fc:	stp	x29, x30, [sp, #-64]!
   14700:	mov	x29, sp
   14704:	stp	x19, x20, [sp, #16]
   14708:	stp	x21, x22, [sp, #32]
   1470c:	str	x23, [sp, #48]
   14710:	mov	x21, x0
   14714:	mov	x19, x1
   14718:	bl	afb0 <hash_get_n_entries@plt>
   1471c:	mov	x23, x0
   14720:	mov	x0, x21
   14724:	bl	aaf0 <hash_get_n_buckets@plt>
   14728:	mov	x20, x0
   1472c:	mov	x0, x21
   14730:	bl	a7b0 <hash_get_n_buckets_used@plt>
   14734:	mov	x22, x0
   14738:	mov	x0, x21
   1473c:	bl	aa10 <hash_get_max_bucket_length@plt>
   14740:	mov	x21, x0
   14744:	mov	x2, x23
   14748:	adrp	x1, 2d000 <vasnprintf@@Base+0x2378>
   1474c:	add	x1, x1, #0x120
   14750:	mov	x0, x19
   14754:	bl	afa0 <fprintf@plt>
   14758:	mov	x2, x20
   1475c:	adrp	x1, 2d000 <vasnprintf@@Base+0x2378>
   14760:	add	x1, x1, #0x138
   14764:	mov	x0, x19
   14768:	bl	afa0 <fprintf@plt>
   1476c:	ucvtf	d1, x22
   14770:	mov	x0, #0x4059000000000000    	// #4636737291354636288
   14774:	fmov	d0, x0
   14778:	fmul	d1, d1, d0
   1477c:	ucvtf	d0, x20
   14780:	fdiv	d0, d1, d0
   14784:	mov	x2, x22
   14788:	adrp	x1, 2d000 <vasnprintf@@Base+0x2378>
   1478c:	add	x1, x1, #0x150
   14790:	mov	x0, x19
   14794:	bl	afa0 <fprintf@plt>
   14798:	mov	x2, x21
   1479c:	adrp	x1, 2d000 <vasnprintf@@Base+0x2378>
   147a0:	add	x1, x1, #0x178
   147a4:	mov	x0, x19
   147a8:	bl	afa0 <fprintf@plt>
   147ac:	ldp	x19, x20, [sp, #16]
   147b0:	ldp	x21, x22, [sp, #32]
   147b4:	ldr	x23, [sp, #48]
   147b8:	ldp	x29, x30, [sp], #64
   147bc:	ret

00000000000147c0 <hash_lookup@@Base>:
   147c0:	stp	x29, x30, [sp, #-48]!
   147c4:	mov	x29, sp
   147c8:	stp	x19, x20, [sp, #16]
   147cc:	str	x21, [sp, #32]
   147d0:	mov	x21, x0
   147d4:	mov	x20, x1
   147d8:	bl	14368 <hard_locale@@Base+0x21c>
   147dc:	mov	x19, x0
   147e0:	ldr	x0, [x0]
   147e4:	cbz	x0, 1482c <hash_lookup@@Base+0x6c>
   147e8:	ldr	x1, [x19]
   147ec:	cmp	x1, x20
   147f0:	b.eq	14814 <hash_lookup@@Base+0x54>  // b.none
   147f4:	ldr	x2, [x21, #56]
   147f8:	mov	x0, x20
   147fc:	blr	x2
   14800:	and	w0, w0, #0xff
   14804:	cbnz	w0, 14814 <hash_lookup@@Base+0x54>
   14808:	ldr	x19, [x19, #8]
   1480c:	cbnz	x19, 147e8 <hash_lookup@@Base+0x28>
   14810:	b	14818 <hash_lookup@@Base+0x58>
   14814:	ldr	x19, [x19]
   14818:	mov	x0, x19
   1481c:	ldp	x19, x20, [sp, #16]
   14820:	ldr	x21, [sp, #32]
   14824:	ldp	x29, x30, [sp], #48
   14828:	ret
   1482c:	mov	x19, x0
   14830:	b	14818 <hash_lookup@@Base+0x58>

0000000000014834 <hash_get_first@@Base>:
   14834:	ldr	x1, [x0, #32]
   14838:	cbz	x1, 1486c <hash_get_first@@Base+0x38>
   1483c:	ldr	x1, [x0]
   14840:	ldr	x2, [x0, #8]
   14844:	cmp	x1, x2
   14848:	b.cs	14860 <hash_get_first@@Base+0x2c>  // b.hs, b.nlast
   1484c:	ldr	x0, [x1]
   14850:	cbnz	x0, 14870 <hash_get_first@@Base+0x3c>
   14854:	add	x1, x1, #0x10
   14858:	cmp	x1, x2
   1485c:	b.cc	1484c <hash_get_first@@Base+0x18>  // b.lo, b.ul, b.last
   14860:	stp	x29, x30, [sp, #-16]!
   14864:	mov	x29, sp
   14868:	bl	a900 <abort@plt>
   1486c:	mov	x0, #0x0                   	// #0
   14870:	ret

0000000000014874 <hash_get_next@@Base>:
   14874:	stp	x29, x30, [sp, #-32]!
   14878:	mov	x29, sp
   1487c:	stp	x19, x20, [sp, #16]
   14880:	mov	x20, x0
   14884:	mov	x19, x1
   14888:	bl	14368 <hard_locale@@Base+0x21c>
   1488c:	mov	x3, x0
   14890:	mov	x2, x0
   14894:	b	148a8 <hash_get_next@@Base+0x34>
   14898:	ldr	x0, [x1]
   1489c:	b	148dc <hash_get_next@@Base+0x68>
   148a0:	ldr	x2, [x2, #8]
   148a4:	cbz	x2, 148bc <hash_get_next@@Base+0x48>
   148a8:	ldr	x4, [x2]
   148ac:	cmp	x4, x19
   148b0:	b.ne	148a0 <hash_get_next@@Base+0x2c>  // b.any
   148b4:	ldr	x1, [x2, #8]
   148b8:	cbnz	x1, 14898 <hash_get_next@@Base+0x24>
   148bc:	ldr	x1, [x20, #8]
   148c0:	add	x3, x3, #0x10
   148c4:	cmp	x1, x3
   148c8:	b.ls	148d8 <hash_get_next@@Base+0x64>  // b.plast
   148cc:	ldr	x0, [x3]
   148d0:	cbz	x0, 148c0 <hash_get_next@@Base+0x4c>
   148d4:	b	148dc <hash_get_next@@Base+0x68>
   148d8:	mov	x0, #0x0                   	// #0
   148dc:	ldp	x19, x20, [sp, #16]
   148e0:	ldp	x29, x30, [sp], #32
   148e4:	ret

00000000000148e8 <hash_get_entries@@Base>:
   148e8:	mov	x6, x0
   148ec:	ldr	x5, [x0]
   148f0:	ldr	x0, [x0, #8]
   148f4:	cmp	x5, x0
   148f8:	b.cs	1494c <hash_get_entries@@Base+0x64>  // b.hs, b.nlast
   148fc:	mov	x0, #0x0                   	// #0
   14900:	sub	x4, x1, #0x8
   14904:	b	14918 <hash_get_entries@@Base+0x30>
   14908:	add	x5, x5, #0x10
   1490c:	ldr	x1, [x6, #8]
   14910:	cmp	x1, x5
   14914:	b.ls	14948 <hash_get_entries@@Base+0x60>  // b.plast
   14918:	ldr	x1, [x5]
   1491c:	cbz	x1, 14908 <hash_get_entries@@Base+0x20>
   14920:	cmp	x2, x0
   14924:	b.ls	14948 <hash_get_entries@@Base+0x60>  // b.plast
   14928:	mov	x1, x5
   1492c:	add	x0, x0, #0x1
   14930:	ldr	x3, [x1]
   14934:	str	x3, [x4, x0, lsl #3]
   14938:	ldr	x1, [x1, #8]
   1493c:	cbz	x1, 14908 <hash_get_entries@@Base+0x20>
   14940:	cmp	x2, x0
   14944:	b.ne	1492c <hash_get_entries@@Base+0x44>  // b.any
   14948:	ret
   1494c:	mov	x0, #0x0                   	// #0
   14950:	b	14948 <hash_get_entries@@Base+0x60>

0000000000014954 <hash_do_for_each@@Base>:
   14954:	stp	x29, x30, [sp, #-64]!
   14958:	mov	x29, sp
   1495c:	stp	x19, x20, [sp, #16]
   14960:	stp	x23, x24, [sp, #48]
   14964:	mov	x24, x0
   14968:	ldr	x23, [x0]
   1496c:	ldr	x0, [x0, #8]
   14970:	cmp	x23, x0
   14974:	b.cs	149d4 <hash_do_for_each@@Base+0x80>  // b.hs, b.nlast
   14978:	stp	x21, x22, [sp, #32]
   1497c:	mov	x21, x1
   14980:	mov	x22, x2
   14984:	mov	x20, #0x0                   	// #0
   14988:	b	1499c <hash_do_for_each@@Base+0x48>
   1498c:	add	x23, x23, #0x10
   14990:	ldr	x0, [x24, #8]
   14994:	cmp	x0, x23
   14998:	b.ls	149cc <hash_do_for_each@@Base+0x78>  // b.plast
   1499c:	ldr	x0, [x23]
   149a0:	cbz	x0, 1498c <hash_do_for_each@@Base+0x38>
   149a4:	mov	x19, x23
   149a8:	mov	x1, x22
   149ac:	ldr	x0, [x19]
   149b0:	blr	x21
   149b4:	and	w0, w0, #0xff
   149b8:	cbz	w0, 149dc <hash_do_for_each@@Base+0x88>
   149bc:	add	x20, x20, #0x1
   149c0:	ldr	x19, [x19, #8]
   149c4:	cbnz	x19, 149a8 <hash_do_for_each@@Base+0x54>
   149c8:	b	1498c <hash_do_for_each@@Base+0x38>
   149cc:	ldp	x21, x22, [sp, #32]
   149d0:	b	149e0 <hash_do_for_each@@Base+0x8c>
   149d4:	mov	x20, #0x0                   	// #0
   149d8:	b	149e0 <hash_do_for_each@@Base+0x8c>
   149dc:	ldp	x21, x22, [sp, #32]
   149e0:	mov	x0, x20
   149e4:	ldp	x19, x20, [sp, #16]
   149e8:	ldp	x23, x24, [sp, #48]
   149ec:	ldp	x29, x30, [sp], #64
   149f0:	ret

00000000000149f4 <hash_string@@Base>:
   149f4:	mov	x4, x0
   149f8:	ldrb	w2, [x0]
   149fc:	cbz	w2, 14a24 <hash_string@@Base+0x30>
   14a00:	mov	x0, #0x0                   	// #0
   14a04:	lsl	x3, x0, #5
   14a08:	sub	x0, x3, x0
   14a0c:	add	x2, x0, w2, uxtb
   14a10:	udiv	x0, x2, x1
   14a14:	msub	x0, x0, x1, x2
   14a18:	ldrb	w2, [x4, #1]!
   14a1c:	cbnz	w2, 14a04 <hash_string@@Base+0x10>
   14a20:	ret
   14a24:	mov	x0, #0x0                   	// #0
   14a28:	b	14a20 <hash_string@@Base+0x2c>

0000000000014a2c <hash_reset_tuning@@Base>:
   14a2c:	adrp	x1, 2d000 <vasnprintf@@Base+0x2378>
   14a30:	add	x1, x1, #0x190
   14a34:	ldp	x2, x3, [x1]
   14a38:	stp	x2, x3, [x0]
   14a3c:	ldr	w1, [x1, #16]
   14a40:	str	w1, [x0, #16]
   14a44:	ret

0000000000014a48 <hash_initialize@@Base>:
   14a48:	stp	x29, x30, [sp, #-64]!
   14a4c:	mov	x29, sp
   14a50:	stp	x19, x20, [sp, #16]
   14a54:	stp	x21, x22, [sp, #32]
   14a58:	stp	x23, x24, [sp, #48]
   14a5c:	mov	x24, x0
   14a60:	mov	x20, x1
   14a64:	mov	x23, x4
   14a68:	adrp	x1, 14000 <seen_file@@Base+0x28>
   14a6c:	add	x1, x1, #0x1b0
   14a70:	cmp	x2, #0x0
   14a74:	csel	x22, x1, x2, eq  // eq = none
   14a78:	adrp	x1, 14000 <seen_file@@Base+0x28>
   14a7c:	add	x1, x1, #0x1c0
   14a80:	cmp	x3, #0x0
   14a84:	csel	x21, x1, x3, eq  // eq = none
   14a88:	mov	x0, #0x50                  	// #80
   14a8c:	bl	a5f0 <malloc@plt>
   14a90:	mov	x19, x0
   14a94:	cbz	x0, 14b04 <hash_initialize@@Base+0xbc>
   14a98:	adrp	x0, 2d000 <vasnprintf@@Base+0x2378>
   14a9c:	add	x0, x0, #0x190
   14aa0:	cmp	x20, #0x0
   14aa4:	csel	x20, x0, x20, eq  // eq = none
   14aa8:	str	x20, [x19, #40]
   14aac:	mov	x0, x19
   14ab0:	bl	141cc <hard_locale@@Base+0x80>
   14ab4:	and	w0, w0, #0xff
   14ab8:	cbz	w0, 14b1c <hash_initialize@@Base+0xd4>
   14abc:	mov	x1, x20
   14ac0:	mov	x0, x24
   14ac4:	bl	14288 <hard_locale@@Base+0x13c>
   14ac8:	mov	x20, x0
   14acc:	str	x0, [x19, #16]
   14ad0:	cbz	x0, 14b1c <hash_initialize@@Base+0xd4>
   14ad4:	mov	x1, #0x10                  	// #16
   14ad8:	bl	a770 <calloc@plt>
   14adc:	str	x0, [x19]
   14ae0:	cbz	x0, 14b1c <hash_initialize@@Base+0xd4>
   14ae4:	add	x20, x0, x20, lsl #4
   14ae8:	str	x20, [x19, #8]
   14aec:	str	xzr, [x19, #24]
   14af0:	str	xzr, [x19, #32]
   14af4:	str	x22, [x19, #48]
   14af8:	str	x21, [x19, #56]
   14afc:	str	x23, [x19, #64]
   14b00:	str	xzr, [x19, #72]
   14b04:	mov	x0, x19
   14b08:	ldp	x19, x20, [sp, #16]
   14b0c:	ldp	x21, x22, [sp, #32]
   14b10:	ldp	x23, x24, [sp, #48]
   14b14:	ldp	x29, x30, [sp], #64
   14b18:	ret
   14b1c:	mov	x0, x19
   14b20:	bl	aa50 <free@plt>
   14b24:	mov	x19, #0x0                   	// #0
   14b28:	b	14b04 <hash_initialize@@Base+0xbc>

0000000000014b2c <hash_clear@@Base>:
   14b2c:	stp	x29, x30, [sp, #-48]!
   14b30:	mov	x29, sp
   14b34:	stp	x19, x20, [sp, #16]
   14b38:	str	x21, [sp, #32]
   14b3c:	mov	x20, x0
   14b40:	ldr	x21, [x0]
   14b44:	ldr	x0, [x0, #8]
   14b48:	cmp	x21, x0
   14b4c:	b.cc	14bc0 <hash_clear@@Base+0x94>  // b.lo, b.ul, b.last
   14b50:	str	xzr, [x20, #24]
   14b54:	str	xzr, [x20, #32]
   14b58:	ldp	x19, x20, [sp, #16]
   14b5c:	ldr	x21, [sp, #32]
   14b60:	ldp	x29, x30, [sp], #48
   14b64:	ret
   14b68:	str	xzr, [x19]
   14b6c:	ldr	x0, [x19, #8]
   14b70:	ldr	x1, [x20, #72]
   14b74:	str	x1, [x19, #8]
   14b78:	str	x19, [x20, #72]
   14b7c:	cbz	x0, 14b98 <hash_clear@@Base+0x6c>
   14b80:	mov	x19, x0
   14b84:	ldr	x1, [x20, #64]
   14b88:	cbz	x1, 14b68 <hash_clear@@Base+0x3c>
   14b8c:	ldr	x0, [x19]
   14b90:	blr	x1
   14b94:	b	14b68 <hash_clear@@Base+0x3c>
   14b98:	ldr	x1, [x20, #64]
   14b9c:	cbz	x1, 14ba8 <hash_clear@@Base+0x7c>
   14ba0:	ldr	x0, [x21]
   14ba4:	blr	x1
   14ba8:	str	xzr, [x21]
   14bac:	str	xzr, [x21, #8]
   14bb0:	add	x21, x21, #0x10
   14bb4:	ldr	x0, [x20, #8]
   14bb8:	cmp	x0, x21
   14bbc:	b.ls	14b50 <hash_clear@@Base+0x24>  // b.plast
   14bc0:	ldr	x0, [x21]
   14bc4:	cbz	x0, 14bb0 <hash_clear@@Base+0x84>
   14bc8:	ldr	x19, [x21, #8]
   14bcc:	cbnz	x19, 14b84 <hash_clear@@Base+0x58>
   14bd0:	b	14b98 <hash_clear@@Base+0x6c>

0000000000014bd4 <hash_free@@Base>:
   14bd4:	stp	x29, x30, [sp, #-48]!
   14bd8:	mov	x29, sp
   14bdc:	stp	x19, x20, [sp, #16]
   14be0:	str	x21, [sp, #32]
   14be4:	mov	x21, x0
   14be8:	ldr	x0, [x0, #64]
   14bec:	cbz	x0, 14c40 <hash_free@@Base+0x6c>
   14bf0:	ldr	x0, [x21, #32]
   14bf4:	cbz	x0, 14c40 <hash_free@@Base+0x6c>
   14bf8:	ldr	x20, [x21]
   14bfc:	ldr	x0, [x21, #8]
   14c00:	cmp	x20, x0
   14c04:	b.cc	14c1c <hash_free@@Base+0x48>  // b.lo, b.ul, b.last
   14c08:	b	14c50 <hash_free@@Base+0x7c>
   14c0c:	add	x20, x20, #0x10
   14c10:	ldr	x0, [x21, #8]
   14c14:	cmp	x0, x20
   14c18:	b.ls	14c40 <hash_free@@Base+0x6c>  // b.plast
   14c1c:	ldr	x0, [x20]
   14c20:	cbz	x0, 14c0c <hash_free@@Base+0x38>
   14c24:	mov	x19, x20
   14c28:	ldr	x1, [x21, #64]
   14c2c:	ldr	x0, [x19]
   14c30:	blr	x1
   14c34:	ldr	x19, [x19, #8]
   14c38:	cbnz	x19, 14c28 <hash_free@@Base+0x54>
   14c3c:	b	14c0c <hash_free@@Base+0x38>
   14c40:	ldr	x20, [x21]
   14c44:	ldr	x0, [x21, #8]
   14c48:	cmp	x20, x0
   14c4c:	b.cc	14c98 <hash_free@@Base+0xc4>  // b.lo, b.ul, b.last
   14c50:	ldr	x19, [x21, #72]
   14c54:	cbz	x19, 14c68 <hash_free@@Base+0x94>
   14c58:	mov	x0, x19
   14c5c:	ldr	x19, [x19, #8]
   14c60:	bl	aa50 <free@plt>
   14c64:	cbnz	x19, 14c58 <hash_free@@Base+0x84>
   14c68:	ldr	x0, [x21]
   14c6c:	bl	aa50 <free@plt>
   14c70:	mov	x0, x21
   14c74:	bl	aa50 <free@plt>
   14c78:	ldp	x19, x20, [sp, #16]
   14c7c:	ldr	x21, [sp, #32]
   14c80:	ldp	x29, x30, [sp], #48
   14c84:	ret
   14c88:	add	x20, x20, #0x10
   14c8c:	ldr	x0, [x21, #8]
   14c90:	cmp	x0, x20
   14c94:	b.ls	14c50 <hash_free@@Base+0x7c>  // b.plast
   14c98:	ldr	x19, [x20, #8]
   14c9c:	cbz	x19, 14c88 <hash_free@@Base+0xb4>
   14ca0:	mov	x0, x19
   14ca4:	ldr	x19, [x19, #8]
   14ca8:	bl	aa50 <free@plt>
   14cac:	cbnz	x19, 14ca0 <hash_free@@Base+0xcc>
   14cb0:	b	14c88 <hash_free@@Base+0xb4>

0000000000014cb4 <hash_rehash@@Base>:
   14cb4:	stp	x29, x30, [sp, #-128]!
   14cb8:	mov	x29, sp
   14cbc:	stp	x19, x20, [sp, #16]
   14cc0:	str	x21, [sp, #32]
   14cc4:	mov	x19, x0
   14cc8:	mov	x0, x1
   14ccc:	ldr	x21, [x19, #40]
   14cd0:	mov	x1, x21
   14cd4:	bl	14288 <hard_locale@@Base+0x13c>
   14cd8:	cbz	x0, 14dcc <hash_rehash@@Base+0x118>
   14cdc:	mov	x20, x0
   14ce0:	ldr	x0, [x19, #16]
   14ce4:	cmp	x0, x20
   14ce8:	b.eq	14de4 <hash_rehash@@Base+0x130>  // b.none
   14cec:	mov	x1, #0x10                  	// #16
   14cf0:	mov	x0, x20
   14cf4:	bl	a770 <calloc@plt>
   14cf8:	str	x0, [sp, #48]
   14cfc:	cbz	x0, 14dec <hash_rehash@@Base+0x138>
   14d00:	str	x20, [sp, #64]
   14d04:	add	x20, x0, x20, lsl #4
   14d08:	str	x20, [sp, #56]
   14d0c:	str	xzr, [sp, #72]
   14d10:	str	xzr, [sp, #80]
   14d14:	str	x21, [sp, #88]
   14d18:	ldr	x0, [x19, #48]
   14d1c:	str	x0, [sp, #96]
   14d20:	ldr	x0, [x19, #56]
   14d24:	str	x0, [sp, #104]
   14d28:	ldr	x0, [x19, #64]
   14d2c:	str	x0, [sp, #112]
   14d30:	ldr	x0, [x19, #72]
   14d34:	str	x0, [sp, #120]
   14d38:	mov	w2, #0x0                   	// #0
   14d3c:	mov	x1, x19
   14d40:	add	x0, sp, #0x30
   14d44:	bl	143ac <hard_locale@@Base+0x260>
   14d48:	ands	w20, w0, #0xff
   14d4c:	b.ne	14d94 <hash_rehash@@Base+0xe0>  // b.any
   14d50:	ldr	x0, [sp, #120]
   14d54:	str	x0, [x19, #72]
   14d58:	mov	w2, #0x1                   	// #1
   14d5c:	add	x1, sp, #0x30
   14d60:	mov	x0, x19
   14d64:	bl	143ac <hard_locale@@Base+0x260>
   14d68:	and	w0, w0, #0xff
   14d6c:	cbz	w0, 14dc8 <hash_rehash@@Base+0x114>
   14d70:	mov	w2, #0x0                   	// #0
   14d74:	add	x1, sp, #0x30
   14d78:	mov	x0, x19
   14d7c:	bl	143ac <hard_locale@@Base+0x260>
   14d80:	and	w0, w0, #0xff
   14d84:	cbz	w0, 14dc8 <hash_rehash@@Base+0x114>
   14d88:	ldr	x0, [sp, #48]
   14d8c:	bl	aa50 <free@plt>
   14d90:	b	14dd0 <hash_rehash@@Base+0x11c>
   14d94:	ldr	x0, [x19]
   14d98:	bl	aa50 <free@plt>
   14d9c:	ldr	x0, [sp, #48]
   14da0:	str	x0, [x19]
   14da4:	ldr	x0, [sp, #56]
   14da8:	str	x0, [x19, #8]
   14dac:	ldr	x0, [sp, #64]
   14db0:	str	x0, [x19, #16]
   14db4:	ldr	x0, [sp, #72]
   14db8:	str	x0, [x19, #24]
   14dbc:	ldr	x0, [sp, #120]
   14dc0:	str	x0, [x19, #72]
   14dc4:	b	14dd0 <hash_rehash@@Base+0x11c>
   14dc8:	bl	a900 <abort@plt>
   14dcc:	mov	w20, #0x0                   	// #0
   14dd0:	mov	w0, w20
   14dd4:	ldp	x19, x20, [sp, #16]
   14dd8:	ldr	x21, [sp, #32]
   14ddc:	ldp	x29, x30, [sp], #128
   14de0:	ret
   14de4:	mov	w20, #0x1                   	// #1
   14de8:	b	14dd0 <hash_rehash@@Base+0x11c>
   14dec:	mov	w20, #0x0                   	// #0
   14df0:	b	14dd0 <hash_rehash@@Base+0x11c>

0000000000014df4 <hash_insert_if_absent@@Base>:
   14df4:	stp	x29, x30, [sp, #-64]!
   14df8:	mov	x29, sp
   14dfc:	stp	x19, x20, [sp, #16]
   14e00:	str	x21, [sp, #32]
   14e04:	cbz	x1, 14e44 <hash_insert_if_absent@@Base+0x50>
   14e08:	mov	x19, x0
   14e0c:	mov	x20, x1
   14e10:	mov	x21, x2
   14e14:	mov	w3, #0x0                   	// #0
   14e18:	add	x2, sp, #0x38
   14e1c:	bl	14508 <hard_locale@@Base+0x3bc>
   14e20:	mov	x1, x0
   14e24:	cbz	x0, 14e48 <hash_insert_if_absent@@Base+0x54>
   14e28:	mov	w0, #0x0                   	// #0
   14e2c:	cbz	x21, 14e34 <hash_insert_if_absent@@Base+0x40>
   14e30:	str	x1, [x21]
   14e34:	ldp	x19, x20, [sp, #16]
   14e38:	ldr	x21, [sp, #32]
   14e3c:	ldp	x29, x30, [sp], #64
   14e40:	ret
   14e44:	bl	a900 <abort@plt>
   14e48:	ldr	x0, [x19, #24]
   14e4c:	ucvtf	s1, x0
   14e50:	ldr	x1, [x19, #40]
   14e54:	ldr	x0, [x19, #16]
   14e58:	ucvtf	s0, x0
   14e5c:	ldr	s2, [x1, #8]
   14e60:	fmul	s0, s0, s2
   14e64:	fcmpe	s1, s0
   14e68:	b.gt	14eb0 <hash_insert_if_absent@@Base+0xbc>
   14e6c:	ldr	x0, [sp, #56]
   14e70:	ldr	x1, [x0]
   14e74:	cbz	x1, 14f5c <hash_insert_if_absent@@Base+0x168>
   14e78:	ldr	x1, [x19, #72]
   14e7c:	cbz	x1, 14f44 <hash_insert_if_absent@@Base+0x150>
   14e80:	ldr	x0, [x1, #8]
   14e84:	str	x0, [x19, #72]
   14e88:	str	x20, [x1]
   14e8c:	ldr	x0, [sp, #56]
   14e90:	ldr	x2, [x0, #8]
   14e94:	str	x2, [x1, #8]
   14e98:	str	x1, [x0, #8]
   14e9c:	ldr	x0, [x19, #32]
   14ea0:	add	x0, x0, #0x1
   14ea4:	str	x0, [x19, #32]
   14ea8:	mov	w0, #0x1                   	// #1
   14eac:	b	14e34 <hash_insert_if_absent@@Base+0x40>
   14eb0:	mov	x0, x19
   14eb4:	bl	141cc <hard_locale@@Base+0x80>
   14eb8:	ldr	x1, [x19, #40]
   14ebc:	ldr	s2, [x1, #8]
   14ec0:	ldr	x0, [x19, #16]
   14ec4:	ucvtf	s0, x0
   14ec8:	ldr	x0, [x19, #24]
   14ecc:	ucvtf	s1, x0
   14ed0:	fmul	s3, s2, s0
   14ed4:	fcmpe	s1, s3
   14ed8:	b.le	14e6c <hash_insert_if_absent@@Base+0x78>
   14edc:	ldrb	w0, [x1, #16]
   14ee0:	cbz	w0, 14f34 <hash_insert_if_absent@@Base+0x140>
   14ee4:	ldr	s1, [x1, #12]
   14ee8:	fmul	s0, s0, s1
   14eec:	mov	w0, #0x5f800000            	// #1602224128
   14ef0:	fmov	s1, w0
   14ef4:	mov	w0, #0xffffffff            	// #-1
   14ef8:	fcmpe	s0, s1
   14efc:	b.ge	14e34 <hash_insert_if_absent@@Base+0x40>  // b.tcont
   14f00:	fcvtzu	x1, s0
   14f04:	mov	x0, x19
   14f08:	bl	a920 <hash_rehash@plt>
   14f0c:	and	w1, w0, #0xff
   14f10:	mov	w0, #0xffffffff            	// #-1
   14f14:	cbz	w1, 14e34 <hash_insert_if_absent@@Base+0x40>
   14f18:	mov	w3, #0x0                   	// #0
   14f1c:	add	x2, sp, #0x38
   14f20:	mov	x1, x20
   14f24:	mov	x0, x19
   14f28:	bl	14508 <hard_locale@@Base+0x3bc>
   14f2c:	cbz	x0, 14e6c <hash_insert_if_absent@@Base+0x78>
   14f30:	bl	a900 <abort@plt>
   14f34:	ldr	s1, [x1, #12]
   14f38:	fmul	s0, s0, s1
   14f3c:	fmul	s0, s0, s2
   14f40:	b	14eec <hash_insert_if_absent@@Base+0xf8>
   14f44:	mov	x0, #0x10                  	// #16
   14f48:	bl	a5f0 <malloc@plt>
   14f4c:	mov	x1, x0
   14f50:	mov	w0, #0xffffffff            	// #-1
   14f54:	cbz	x1, 14e34 <hash_insert_if_absent@@Base+0x40>
   14f58:	b	14e88 <hash_insert_if_absent@@Base+0x94>
   14f5c:	str	x20, [x0]
   14f60:	ldr	x0, [x19, #32]
   14f64:	add	x0, x0, #0x1
   14f68:	str	x0, [x19, #32]
   14f6c:	ldr	x0, [x19, #24]
   14f70:	add	x0, x0, #0x1
   14f74:	str	x0, [x19, #24]
   14f78:	mov	w0, #0x1                   	// #1
   14f7c:	b	14e34 <hash_insert_if_absent@@Base+0x40>

0000000000014f80 <hash_insert@@Base>:
   14f80:	stp	x29, x30, [sp, #-48]!
   14f84:	mov	x29, sp
   14f88:	str	x19, [sp, #16]
   14f8c:	mov	x19, x1
   14f90:	add	x2, sp, #0x28
   14f94:	bl	a7a0 <hash_insert_if_absent@plt>
   14f98:	cmn	w0, #0x1
   14f9c:	b.eq	14fb8 <hash_insert@@Base+0x38>  // b.none
   14fa0:	cmp	w0, #0x0
   14fa4:	ldr	x0, [sp, #40]
   14fa8:	csel	x0, x0, x19, eq  // eq = none
   14fac:	ldr	x19, [sp, #16]
   14fb0:	ldp	x29, x30, [sp], #48
   14fb4:	ret
   14fb8:	mov	x0, #0x0                   	// #0
   14fbc:	b	14fac <hash_insert@@Base+0x2c>

0000000000014fc0 <hash_delete@@Base>:
   14fc0:	stp	x29, x30, [sp, #-64]!
   14fc4:	mov	x29, sp
   14fc8:	stp	x19, x20, [sp, #16]
   14fcc:	mov	x19, x0
   14fd0:	mov	w3, #0x1                   	// #1
   14fd4:	add	x2, sp, #0x38
   14fd8:	bl	14508 <hard_locale@@Base+0x3bc>
   14fdc:	mov	x20, x0
   14fe0:	cbz	x0, 14ffc <hash_delete@@Base+0x3c>
   14fe4:	ldr	x0, [x19, #32]
   14fe8:	sub	x0, x0, #0x1
   14fec:	str	x0, [x19, #32]
   14ff0:	ldr	x0, [sp, #56]
   14ff4:	ldr	x0, [x0]
   14ff8:	cbz	x0, 1500c <hash_delete@@Base+0x4c>
   14ffc:	mov	x0, x20
   15000:	ldp	x19, x20, [sp, #16]
   15004:	ldp	x29, x30, [sp], #64
   15008:	ret
   1500c:	ldr	x0, [x19, #24]
   15010:	sub	x0, x0, #0x1
   15014:	str	x0, [x19, #24]
   15018:	ucvtf	s0, x0
   1501c:	ldr	x1, [x19, #40]
   15020:	ldr	x0, [x19, #16]
   15024:	ucvtf	s1, x0
   15028:	ldr	s2, [x1]
   1502c:	fmul	s1, s1, s2
   15030:	fcmpe	s0, s1
   15034:	b.pl	14ffc <hash_delete@@Base+0x3c>  // b.nfrst
   15038:	mov	x0, x19
   1503c:	bl	141cc <hard_locale@@Base+0x80>
   15040:	ldr	x1, [x19, #40]
   15044:	ldr	x0, [x19, #16]
   15048:	ucvtf	s0, x0
   1504c:	ldr	x0, [x19, #24]
   15050:	ucvtf	s2, x0
   15054:	ldr	s1, [x1]
   15058:	fmul	s1, s0, s1
   1505c:	fcmpe	s2, s1
   15060:	b.pl	14ffc <hash_delete@@Base+0x3c>  // b.nfrst
   15064:	ldrb	w0, [x1, #16]
   15068:	cbz	w0, 150b0 <hash_delete@@Base+0xf0>
   1506c:	ldr	s1, [x1, #4]
   15070:	fmul	s0, s0, s1
   15074:	fcvtzu	x1, s0
   15078:	mov	x0, x19
   1507c:	bl	a920 <hash_rehash@plt>
   15080:	and	w0, w0, #0xff
   15084:	cbnz	w0, 14ffc <hash_delete@@Base+0x3c>
   15088:	str	x21, [sp, #32]
   1508c:	ldr	x21, [x19, #72]
   15090:	cbz	x21, 150a4 <hash_delete@@Base+0xe4>
   15094:	mov	x0, x21
   15098:	ldr	x21, [x21, #8]
   1509c:	bl	aa50 <free@plt>
   150a0:	cbnz	x21, 15094 <hash_delete@@Base+0xd4>
   150a4:	str	xzr, [x19, #72]
   150a8:	ldr	x21, [sp, #32]
   150ac:	b	14ffc <hash_delete@@Base+0x3c>
   150b0:	ldr	s1, [x1, #4]
   150b4:	fmul	s0, s0, s1
   150b8:	ldr	s1, [x1, #8]
   150bc:	fmul	s0, s0, s1
   150c0:	fcvtzu	x1, s0
   150c4:	b	15078 <hash_delete@@Base+0xb8>
   150c8:	ldr	x0, [x0, #56]
   150cc:	ret
   150d0:	stp	x29, x30, [sp, #-64]!
   150d4:	mov	x29, sp
   150d8:	stp	x19, x20, [sp, #16]
   150dc:	stp	x21, x22, [sp, #32]
   150e0:	str	x23, [sp, #48]
   150e4:	mov	x19, x0
   150e8:	mov	x21, x1
   150ec:	mov	x23, x2
   150f0:	ldr	x1, [x0, #32]
   150f4:	mov	x20, x21
   150f8:	cbz	x1, 15108 <hash_delete@@Base+0x148>
   150fc:	mov	x0, x21
   15100:	blr	x1
   15104:	mov	x20, x0
   15108:	ldr	x22, [x19, #8]
   1510c:	ldr	x1, [x19, #48]
   15110:	udiv	x0, x20, x1
   15114:	msub	x0, x0, x1, x20
   15118:	ldr	x1, [x19, #40]
   1511c:	ldr	x19, [x1, x0, lsl #3]
   15120:	cbnz	x19, 15144 <hash_delete@@Base+0x184>
   15124:	mov	w0, #0x0                   	// #0
   15128:	b	15178 <hash_delete@@Base+0x1b8>
   1512c:	ldr	x0, [x19, #16]
   15130:	cmp	x0, x21
   15134:	cset	w0, eq  // eq = none
   15138:	cbnz	w0, 15168 <hash_delete@@Base+0x1a8>
   1513c:	ldr	x19, [x19]
   15140:	cbz	x19, 15174 <hash_delete@@Base+0x1b4>
   15144:	ldr	x3, [x19, #8]
   15148:	cmp	x3, x20
   1514c:	b.ne	1513c <hash_delete@@Base+0x17c>  // b.any
   15150:	cbz	x22, 1512c <hash_delete@@Base+0x16c>
   15154:	ldr	x1, [x19, #16]
   15158:	mov	x0, x21
   1515c:	blr	x22
   15160:	and	w0, w0, #0xff
   15164:	b	15138 <hash_delete@@Base+0x178>
   15168:	ldr	x1, [x19, #24]
   1516c:	str	x1, [x23]
   15170:	b	15178 <hash_delete@@Base+0x1b8>
   15174:	mov	w0, #0x0                   	// #0
   15178:	ldp	x19, x20, [sp, #16]
   1517c:	ldp	x21, x22, [sp, #32]
   15180:	ldr	x23, [sp, #48]
   15184:	ldp	x29, x30, [sp], #64
   15188:	ret
   1518c:	ldr	x1, [x0, #48]
   15190:	ldr	x2, [x0]
   15194:	str	x2, [x8]
   15198:	str	x0, [x8, #8]
   1519c:	str	xzr, [x8, #24]
   151a0:	str	xzr, [x8, #40]
   151a4:	str	x1, [x8, #48]
   151a8:	ret
   151ac:	ldr	x3, [x0, #24]
   151b0:	cbz	x3, 151d4 <hash_delete@@Base+0x214>
   151b4:	ldr	x4, [x3, #16]
   151b8:	str	x4, [x1]
   151bc:	ldr	x1, [x3, #24]
   151c0:	str	x1, [x2]
   151c4:	ldr	x1, [x3]
   151c8:	str	x1, [x0, #24]
   151cc:	mov	w0, #0x1                   	// #1
   151d0:	ret
   151d4:	ldr	x5, [x0, #48]
   151d8:	ldr	x3, [x0, #40]
   151dc:	cmp	x5, x3
   151e0:	b.ls	15204 <hash_delete@@Base+0x244>  // b.plast
   151e4:	ldr	x4, [x0, #8]
   151e8:	ldr	x6, [x4, #40]
   151ec:	sub	x6, x6, #0x8
   151f0:	add	x3, x3, #0x1
   151f4:	ldr	x4, [x6, x3, lsl #3]
   151f8:	cbnz	x4, 15210 <hash_delete@@Base+0x250>
   151fc:	cmp	x5, x3
   15200:	b.ne	151f0 <hash_delete@@Base+0x230>  // b.any
   15204:	str	x5, [x0, #40]
   15208:	mov	w0, #0x0                   	// #0
   1520c:	b	151d0 <hash_delete@@Base+0x210>
   15210:	ldr	x5, [x4, #16]
   15214:	str	x5, [x1]
   15218:	ldr	x1, [x4, #24]
   1521c:	str	x1, [x2]
   15220:	ldr	x1, [x4]
   15224:	str	x1, [x0, #24]
   15228:	str	x3, [x0, #40]
   1522c:	mov	w0, #0x1                   	// #1
   15230:	b	151d0 <hash_delete@@Base+0x210>
   15234:	ret
   15238:	stp	x29, x30, [sp, #-80]!
   1523c:	mov	x29, sp
   15240:	stp	x23, x24, [sp, #48]
   15244:	mov	x24, x0
   15248:	ldr	x0, [x0, #56]
   1524c:	cbz	x0, 152c4 <hash_delete@@Base+0x304>
   15250:	stp	x21, x22, [sp, #32]
   15254:	str	x25, [sp, #64]
   15258:	ldr	x22, [x24, #16]
   1525c:	ldr	x21, [x24, #24]
   15260:	ldr	x25, [x24, #40]
   15264:	ldr	x23, [x24, #48]
   15268:	cbz	x23, 152e0 <hash_delete@@Base+0x320>
   1526c:	stp	x19, x20, [sp, #16]
   15270:	b	152a8 <hash_delete@@Base+0x2e8>
   15274:	mov	x0, x20
   15278:	bl	aa50 <free@plt>
   1527c:	cbz	x19, 152a4 <hash_delete@@Base+0x2e4>
   15280:	mov	x20, x19
   15284:	ldr	x19, [x19]
   15288:	cbz	x21, 15294 <hash_delete@@Base+0x2d4>
   1528c:	ldr	x0, [x20, #24]
   15290:	blr	x21
   15294:	cbz	x22, 15274 <hash_delete@@Base+0x2b4>
   15298:	ldr	x0, [x20, #16]
   1529c:	blr	x22
   152a0:	b	15274 <hash_delete@@Base+0x2b4>
   152a4:	cbz	x23, 152b8 <hash_delete@@Base+0x2f8>
   152a8:	sub	x23, x23, #0x1
   152ac:	ldr	x19, [x25, x23, lsl #3]
   152b0:	cbnz	x19, 15280 <hash_delete@@Base+0x2c0>
   152b4:	b	152a4 <hash_delete@@Base+0x2e4>
   152b8:	ldp	x19, x20, [sp, #16]
   152bc:	ldp	x21, x22, [sp, #32]
   152c0:	ldr	x25, [sp, #64]
   152c4:	ldr	x0, [x24, #40]
   152c8:	bl	aa50 <free@plt>
   152cc:	mov	x0, x24
   152d0:	bl	aa50 <free@plt>
   152d4:	ldp	x23, x24, [sp, #48]
   152d8:	ldp	x29, x30, [sp], #80
   152dc:	ret
   152e0:	ldp	x21, x22, [sp, #32]
   152e4:	ldr	x25, [sp, #64]
   152e8:	b	152c4 <hash_delete@@Base+0x304>
   152ec:	stp	x29, x30, [sp, #-80]!
   152f0:	mov	x29, sp
   152f4:	stp	x19, x20, [sp, #16]
   152f8:	stp	x21, x22, [sp, #32]
   152fc:	stp	x23, x24, [sp, #48]
   15300:	stp	x25, x26, [sp, #64]
   15304:	mov	x25, x0
   15308:	mov	x23, x1
   1530c:	mov	x26, x2
   15310:	ldr	x1, [x0, #32]
   15314:	mov	x21, x23
   15318:	cbz	x1, 15328 <hash_delete@@Base+0x368>
   1531c:	mov	x0, x23
   15320:	blr	x1
   15324:	mov	x21, x0
   15328:	ldr	x24, [x25, #8]
   1532c:	ldr	x1, [x25, #48]
   15330:	udiv	x0, x21, x1
   15334:	msub	x0, x0, x1, x21
   15338:	ldr	x1, [x25, #40]
   1533c:	add	x20, x1, x0, lsl #3
   15340:	ldr	x19, [x1, x0, lsl #3]
   15344:	cbnz	x19, 1536c <hash_delete@@Base+0x3ac>
   15348:	mov	w22, #0x0                   	// #0
   1534c:	b	153cc <hash_delete@@Base+0x40c>
   15350:	ldr	x0, [x19, #16]
   15354:	cmp	x0, x23
   15358:	cset	w22, eq  // eq = none
   1535c:	cbnz	w22, 15390 <hash_delete@@Base+0x3d0>
   15360:	ldr	x20, [x20]
   15364:	ldr	x19, [x20]
   15368:	cbz	x19, 153c8 <hash_delete@@Base+0x408>
   1536c:	ldr	x3, [x19, #8]
   15370:	cmp	x3, x21
   15374:	b.ne	15360 <hash_delete@@Base+0x3a0>  // b.any
   15378:	cbz	x24, 15350 <hash_delete@@Base+0x390>
   1537c:	ldr	x1, [x19, #16]
   15380:	mov	x0, x23
   15384:	blr	x24
   15388:	and	w22, w0, #0xff
   1538c:	b	1535c <hash_delete@@Base+0x39c>
   15390:	ldr	x0, [x19, #24]
   15394:	str	x0, [x26]
   15398:	ldr	x0, [x19]
   1539c:	str	x0, [x20]
   153a0:	ldr	x0, [x25, #56]
   153a4:	sub	x0, x0, #0x1
   153a8:	str	x0, [x25, #56]
   153ac:	ldr	x1, [x25, #16]
   153b0:	cbz	x1, 153bc <hash_delete@@Base+0x3fc>
   153b4:	ldr	x0, [x19, #16]
   153b8:	blr	x1
   153bc:	mov	x0, x19
   153c0:	bl	aa50 <free@plt>
   153c4:	b	153cc <hash_delete@@Base+0x40c>
   153c8:	mov	w22, #0x0                   	// #0
   153cc:	mov	w0, w22
   153d0:	ldp	x19, x20, [sp, #16]
   153d4:	ldp	x21, x22, [sp, #32]
   153d8:	ldp	x23, x24, [sp, #48]
   153dc:	ldp	x25, x26, [sp, #64]
   153e0:	ldp	x29, x30, [sp], #80
   153e4:	ret
   153e8:	stp	x29, x30, [sp, #-80]!
   153ec:	mov	x29, sp
   153f0:	stp	x19, x20, [sp, #16]
   153f4:	stp	x21, x22, [sp, #32]
   153f8:	stp	x23, x24, [sp, #48]
   153fc:	stp	x25, x26, [sp, #64]
   15400:	mov	x21, x0
   15404:	mov	x22, x1
   15408:	mov	x25, x2
   1540c:	mov	x26, x3
   15410:	ldr	x1, [x0, #32]
   15414:	mov	x20, x22
   15418:	cbz	x1, 15428 <hash_delete@@Base+0x468>
   1541c:	mov	x0, x22
   15420:	blr	x1
   15424:	mov	x20, x0
   15428:	ldr	x23, [x21, #8]
   1542c:	ldr	x0, [x21, #48]
   15430:	udiv	x24, x20, x0
   15434:	msub	x24, x24, x0, x20
   15438:	ldr	x0, [x21, #40]
   1543c:	ldr	x19, [x0, x24, lsl #3]
   15440:	cbnz	x19, 154c4 <hash_delete@@Base+0x504>
   15444:	mov	x0, #0x20                  	// #32
   15448:	bl	a5f0 <malloc@plt>
   1544c:	cbz	x0, 155a4 <hash_delete@@Base+0x5e4>
   15450:	str	x22, [x0, #16]
   15454:	str	x25, [x0, #24]
   15458:	str	x20, [x0, #8]
   1545c:	ldr	x1, [x21, #40]
   15460:	ldr	x2, [x1, x24, lsl #3]
   15464:	str	x2, [x0]
   15468:	str	x0, [x1, x24, lsl #3]
   1546c:	ldr	x0, [x21, #56]
   15470:	add	x0, x0, #0x1
   15474:	str	x0, [x21, #56]
   15478:	add	x1, x0, x0, lsr #1
   1547c:	cmp	x0, x1
   15480:	csinv	x1, x1, xzr, ls  // ls = plast
   15484:	ldr	x20, [x21, #48]
   15488:	mov	w0, #0x1                   	// #1
   1548c:	cmp	x20, x1
   15490:	b.cc	154fc <hash_delete@@Base+0x53c>  // b.lo, b.ul, b.last
   15494:	ldp	x19, x20, [sp, #16]
   15498:	ldp	x21, x22, [sp, #32]
   1549c:	ldp	x23, x24, [sp, #48]
   154a0:	ldp	x25, x26, [sp, #64]
   154a4:	ldp	x29, x30, [sp], #80
   154a8:	ret
   154ac:	ldr	x0, [x19, #16]
   154b0:	cmp	x0, x22
   154b4:	cset	w4, eq  // eq = none
   154b8:	cbnz	w4, 154e8 <hash_delete@@Base+0x528>
   154bc:	ldr	x19, [x19]
   154c0:	cbz	x19, 15444 <hash_delete@@Base+0x484>
   154c4:	ldr	x4, [x19, #8]
   154c8:	cmp	x4, x20
   154cc:	b.ne	154bc <hash_delete@@Base+0x4fc>  // b.any
   154d0:	cbz	x23, 154ac <hash_delete@@Base+0x4ec>
   154d4:	ldr	x1, [x19, #16]
   154d8:	mov	x0, x22
   154dc:	blr	x23
   154e0:	and	w4, w0, #0xff
   154e4:	b	154b8 <hash_delete@@Base+0x4f8>
   154e8:	ldr	x0, [x19, #24]
   154ec:	str	x0, [x26]
   154f0:	str	x25, [x19, #24]
   154f4:	mov	w0, #0x0                   	// #0
   154f8:	b	15494 <hash_delete@@Base+0x4d4>
   154fc:	mov	x0, #0x0                   	// #0
   15500:	adrp	x2, 2d000 <vasnprintf@@Base+0x2378>
   15504:	add	x2, x2, #0x1a8
   15508:	ldr	x19, [x2, x0, lsl #3]
   1550c:	cmp	x1, x19
   15510:	b.ls	15528 <hash_delete@@Base+0x568>  // b.plast
   15514:	add	x0, x0, #0x1
   15518:	cmp	x0, #0xe8
   1551c:	b.ne	15508 <hash_delete@@Base+0x548>  // b.any
   15520:	mov	w0, #0x1                   	// #1
   15524:	b	15494 <hash_delete@@Base+0x4d4>
   15528:	mov	w0, #0x1                   	// #1
   1552c:	cmp	x20, x19
   15530:	b.cs	15494 <hash_delete@@Base+0x4d4>  // b.hs, b.nlast
   15534:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   15538:	cmp	x19, x1
   1553c:	b.hi	15494 <hash_delete@@Base+0x4d4>  // b.pmore
   15540:	ldr	x22, [x21, #40]
   15544:	mov	x1, #0x8                   	// #8
   15548:	mov	x0, x19
   1554c:	bl	a770 <calloc@plt>
   15550:	cbz	x0, 155ac <hash_delete@@Base+0x5ec>
   15554:	cbz	x20, 1558c <hash_delete@@Base+0x5cc>
   15558:	sub	x20, x20, #0x1
   1555c:	ldr	x2, [x22, x20, lsl #3]
   15560:	cbz	x2, 15588 <hash_delete@@Base+0x5c8>
   15564:	mov	x3, x2
   15568:	ldr	x2, [x2]
   1556c:	ldr	x4, [x3, #8]
   15570:	udiv	x1, x4, x19
   15574:	msub	x1, x1, x19, x4
   15578:	ldr	x4, [x0, x1, lsl #3]
   1557c:	str	x4, [x3]
   15580:	str	x3, [x0, x1, lsl #3]
   15584:	cbnz	x2, 15564 <hash_delete@@Base+0x5a4>
   15588:	cbnz	x20, 15558 <hash_delete@@Base+0x598>
   1558c:	str	x0, [x21, #40]
   15590:	str	x19, [x21, #48]
   15594:	mov	x0, x22
   15598:	bl	aa50 <free@plt>
   1559c:	mov	w0, #0x1                   	// #1
   155a0:	b	15494 <hash_delete@@Base+0x4d4>
   155a4:	mov	w0, #0xffffffff            	// #-1
   155a8:	b	15494 <hash_delete@@Base+0x4d4>
   155ac:	mov	w0, #0x1                   	// #1
   155b0:	b	15494 <hash_delete@@Base+0x4d4>
   155b4:	stp	x29, x30, [sp, #-64]!
   155b8:	mov	x29, sp
   155bc:	stp	x19, x20, [sp, #16]
   155c0:	stp	x21, x22, [sp, #32]
   155c4:	stp	x23, x24, [sp, #48]
   155c8:	mov	x23, x0
   155cc:	mov	x24, x1
   155d0:	mov	x20, x2
   155d4:	mov	x22, x3
   155d8:	mov	x21, x4
   155dc:	mov	x0, #0x40                  	// #64
   155e0:	bl	a5f0 <malloc@plt>
   155e4:	mov	x19, x0
   155e8:	cbz	x0, 15620 <hash_delete@@Base+0x660>
   155ec:	str	x23, [x0]
   155f0:	str	x24, [x0, #8]
   155f4:	str	x22, [x0, #16]
   155f8:	str	x21, [x0, #24]
   155fc:	str	x20, [x0, #32]
   15600:	mov	x0, #0xb                   	// #11
   15604:	str	x0, [x19, #48]
   15608:	mov	x1, #0x8                   	// #8
   1560c:	bl	a770 <calloc@plt>
   15610:	mov	x20, x0
   15614:	str	x0, [x19, #40]
   15618:	cbz	x0, 15638 <hash_delete@@Base+0x678>
   1561c:	str	xzr, [x19, #56]
   15620:	mov	x0, x19
   15624:	ldp	x19, x20, [sp, #16]
   15628:	ldp	x21, x22, [sp, #32]
   1562c:	ldp	x23, x24, [sp, #48]
   15630:	ldp	x29, x30, [sp], #64
   15634:	ret
   15638:	mov	x0, x19
   1563c:	bl	aa50 <free@plt>
   15640:	mov	x19, x20
   15644:	b	15620 <hash_delete@@Base+0x660>

0000000000015648 <hash_pjw@@Base>:
   15648:	ldrb	w3, [x0]
   1564c:	cbz	w3, 15670 <hash_pjw@@Base+0x28>
   15650:	mov	x2, #0x0                   	// #0
   15654:	ror	x2, x2, #55
   15658:	add	x2, x2, w3, uxtb
   1565c:	ldrb	w3, [x0, #1]!
   15660:	cbnz	w3, 15654 <hash_pjw@@Base+0xc>
   15664:	udiv	x0, x2, x1
   15668:	msub	x0, x0, x1, x2
   1566c:	ret
   15670:	mov	x2, #0x0                   	// #0
   15674:	b	15664 <hash_pjw@@Base+0x1c>

0000000000015678 <hash_pjw_bare@@Base>:
   15678:	mov	x4, x0
   1567c:	cbz	x1, 156ac <hash_pjw_bare@@Base+0x34>
   15680:	mov	w2, #0x0                   	// #0
   15684:	mov	x0, #0x0                   	// #0
   15688:	mov	x3, #0x0                   	// #0
   1568c:	ror	x0, x0, #55
   15690:	ldrb	w3, [x4, x3]
   15694:	add	x0, x3, x0
   15698:	add	w2, w2, #0x1
   1569c:	mov	w3, w2
   156a0:	cmp	x1, w2, uxtw
   156a4:	b.hi	1568c <hash_pjw_bare@@Base+0x14>  // b.pmore
   156a8:	ret
   156ac:	mov	x0, x1
   156b0:	b	156a8 <hash_pjw_bare@@Base+0x30>
   156b4:	ldr	x0, [x0, #48]
   156b8:	ret
   156bc:	stp	x29, x30, [sp, #-48]!
   156c0:	mov	x29, sp
   156c4:	stp	x19, x20, [sp, #16]
   156c8:	stp	x21, x22, [sp, #32]
   156cc:	mov	x19, x0
   156d0:	mov	x21, x1
   156d4:	ldr	x1, [x0, #24]
   156d8:	mov	x20, x21
   156dc:	cbz	x1, 156ec <hash_pjw_bare@@Base+0x74>
   156e0:	mov	x0, x21
   156e4:	blr	x1
   156e8:	mov	x20, x0
   156ec:	ldr	x22, [x19, #8]
   156f0:	ldr	x1, [x19, #40]
   156f4:	udiv	x0, x20, x1
   156f8:	msub	x0, x0, x1, x20
   156fc:	ldr	x1, [x19, #32]
   15700:	ldr	x19, [x1, x0, lsl #3]
   15704:	cbnz	x19, 15728 <hash_pjw_bare@@Base+0xb0>
   15708:	mov	w0, #0x0                   	// #0
   1570c:	b	15750 <hash_pjw_bare@@Base+0xd8>
   15710:	ldr	x0, [x19, #16]
   15714:	cmp	x0, x21
   15718:	cset	w0, eq  // eq = none
   1571c:	cbnz	w0, 15750 <hash_pjw_bare@@Base+0xd8>
   15720:	ldr	x19, [x19]
   15724:	cbz	x19, 1574c <hash_pjw_bare@@Base+0xd4>
   15728:	ldr	x2, [x19, #8]
   1572c:	cmp	x2, x20
   15730:	b.ne	15720 <hash_pjw_bare@@Base+0xa8>  // b.any
   15734:	cbz	x22, 15710 <hash_pjw_bare@@Base+0x98>
   15738:	ldr	x1, [x19, #16]
   1573c:	mov	x0, x21
   15740:	blr	x22
   15744:	and	w0, w0, #0xff
   15748:	b	1571c <hash_pjw_bare@@Base+0xa4>
   1574c:	mov	w0, #0x0                   	// #0
   15750:	ldp	x19, x20, [sp, #16]
   15754:	ldp	x21, x22, [sp, #32]
   15758:	ldp	x29, x30, [sp], #48
   1575c:	ret
   15760:	ldr	x1, [x0, #40]
   15764:	ldr	x2, [x0]
   15768:	str	x2, [x8]
   1576c:	str	x0, [x8, #8]
   15770:	str	xzr, [x8, #24]
   15774:	str	xzr, [x8, #40]
   15778:	str	x1, [x8, #48]
   1577c:	ret
   15780:	ldr	x2, [x0, #24]
   15784:	cbz	x2, 157a0 <hash_pjw_bare@@Base+0x128>
   15788:	ldr	x3, [x2, #16]
   1578c:	str	x3, [x1]
   15790:	ldr	x1, [x2]
   15794:	str	x1, [x0, #24]
   15798:	mov	w0, #0x1                   	// #1
   1579c:	ret
   157a0:	ldr	x4, [x0, #48]
   157a4:	ldr	x2, [x0, #40]
   157a8:	cmp	x4, x2
   157ac:	b.ls	157d0 <hash_pjw_bare@@Base+0x158>  // b.plast
   157b0:	ldr	x3, [x0, #8]
   157b4:	ldr	x5, [x3, #32]
   157b8:	sub	x5, x5, #0x8
   157bc:	add	x2, x2, #0x1
   157c0:	ldr	x3, [x5, x2, lsl #3]
   157c4:	cbnz	x3, 157dc <hash_pjw_bare@@Base+0x164>
   157c8:	cmp	x4, x2
   157cc:	b.ne	157bc <hash_pjw_bare@@Base+0x144>  // b.any
   157d0:	str	x4, [x0, #40]
   157d4:	mov	w0, #0x0                   	// #0
   157d8:	b	1579c <hash_pjw_bare@@Base+0x124>
   157dc:	ldr	x4, [x3, #16]
   157e0:	str	x4, [x1]
   157e4:	ldr	x1, [x3]
   157e8:	str	x1, [x0, #24]
   157ec:	str	x2, [x0, #40]
   157f0:	mov	w0, #0x1                   	// #1
   157f4:	b	1579c <hash_pjw_bare@@Base+0x124>
   157f8:	ret
   157fc:	stp	x29, x30, [sp, #-64]!
   15800:	mov	x29, sp
   15804:	stp	x23, x24, [sp, #48]
   15808:	mov	x23, x0
   1580c:	ldr	x0, [x0, #48]
   15810:	cbz	x0, 15870 <hash_pjw_bare@@Base+0x1f8>
   15814:	stp	x21, x22, [sp, #32]
   15818:	ldr	x21, [x23, #16]
   1581c:	ldr	x24, [x23, #32]
   15820:	ldr	x22, [x23, #40]
   15824:	cbz	x22, 1588c <hash_pjw_bare@@Base+0x214>
   15828:	stp	x19, x20, [sp, #16]
   1582c:	b	15858 <hash_pjw_bare@@Base+0x1e0>
   15830:	mov	x0, x20
   15834:	bl	aa50 <free@plt>
   15838:	cbz	x19, 15854 <hash_pjw_bare@@Base+0x1dc>
   1583c:	mov	x20, x19
   15840:	ldr	x19, [x19]
   15844:	cbz	x21, 15830 <hash_pjw_bare@@Base+0x1b8>
   15848:	ldr	x0, [x20, #16]
   1584c:	blr	x21
   15850:	b	15830 <hash_pjw_bare@@Base+0x1b8>
   15854:	cbz	x22, 15868 <hash_pjw_bare@@Base+0x1f0>
   15858:	sub	x22, x22, #0x1
   1585c:	ldr	x19, [x24, x22, lsl #3]
   15860:	cbnz	x19, 1583c <hash_pjw_bare@@Base+0x1c4>
   15864:	b	15854 <hash_pjw_bare@@Base+0x1dc>
   15868:	ldp	x19, x20, [sp, #16]
   1586c:	ldp	x21, x22, [sp, #32]
   15870:	ldr	x0, [x23, #32]
   15874:	bl	aa50 <free@plt>
   15878:	mov	x0, x23
   1587c:	bl	aa50 <free@plt>
   15880:	ldp	x23, x24, [sp, #48]
   15884:	ldp	x29, x30, [sp], #64
   15888:	ret
   1588c:	ldp	x21, x22, [sp, #32]
   15890:	b	15870 <hash_pjw_bare@@Base+0x1f8>
   15894:	stp	x29, x30, [sp, #-80]!
   15898:	mov	x29, sp
   1589c:	stp	x19, x20, [sp, #16]
   158a0:	stp	x21, x22, [sp, #32]
   158a4:	stp	x23, x24, [sp, #48]
   158a8:	str	x25, [sp, #64]
   158ac:	mov	x25, x0
   158b0:	mov	x23, x1
   158b4:	ldr	x1, [x0, #24]
   158b8:	mov	x21, x23
   158bc:	cbz	x1, 158cc <hash_pjw_bare@@Base+0x254>
   158c0:	mov	x0, x23
   158c4:	blr	x1
   158c8:	mov	x21, x0
   158cc:	ldr	x24, [x25, #8]
   158d0:	ldr	x1, [x25, #40]
   158d4:	udiv	x0, x21, x1
   158d8:	msub	x0, x0, x1, x21
   158dc:	ldr	x1, [x25, #32]
   158e0:	add	x20, x1, x0, lsl #3
   158e4:	ldr	x19, [x1, x0, lsl #3]
   158e8:	cbnz	x19, 15910 <hash_pjw_bare@@Base+0x298>
   158ec:	mov	w22, #0x0                   	// #0
   158f0:	b	15968 <hash_pjw_bare@@Base+0x2f0>
   158f4:	ldr	x0, [x19, #16]
   158f8:	cmp	x0, x23
   158fc:	cset	w22, eq  // eq = none
   15900:	cbnz	w22, 15934 <hash_pjw_bare@@Base+0x2bc>
   15904:	ldr	x20, [x20]
   15908:	ldr	x19, [x20]
   1590c:	cbz	x19, 15964 <hash_pjw_bare@@Base+0x2ec>
   15910:	ldr	x2, [x19, #8]
   15914:	cmp	x2, x21
   15918:	b.ne	15904 <hash_pjw_bare@@Base+0x28c>  // b.any
   1591c:	cbz	x24, 158f4 <hash_pjw_bare@@Base+0x27c>
   15920:	ldr	x1, [x19, #16]
   15924:	mov	x0, x23
   15928:	blr	x24
   1592c:	and	w22, w0, #0xff
   15930:	b	15900 <hash_pjw_bare@@Base+0x288>
   15934:	ldr	x0, [x19]
   15938:	str	x0, [x20]
   1593c:	ldr	x0, [x25, #48]
   15940:	sub	x0, x0, #0x1
   15944:	str	x0, [x25, #48]
   15948:	ldr	x1, [x25, #16]
   1594c:	cbz	x1, 15958 <hash_pjw_bare@@Base+0x2e0>
   15950:	ldr	x0, [x19, #16]
   15954:	blr	x1
   15958:	mov	x0, x19
   1595c:	bl	aa50 <free@plt>
   15960:	b	15968 <hash_pjw_bare@@Base+0x2f0>
   15964:	mov	w22, #0x0                   	// #0
   15968:	mov	w0, w22
   1596c:	ldp	x19, x20, [sp, #16]
   15970:	ldp	x21, x22, [sp, #32]
   15974:	ldp	x23, x24, [sp, #48]
   15978:	ldr	x25, [sp, #64]
   1597c:	ldp	x29, x30, [sp], #80
   15980:	ret
   15984:	stp	x29, x30, [sp, #-64]!
   15988:	mov	x29, sp
   1598c:	stp	x19, x20, [sp, #16]
   15990:	stp	x21, x22, [sp, #32]
   15994:	stp	x23, x24, [sp, #48]
   15998:	mov	x21, x0
   1599c:	mov	x22, x1
   159a0:	ldr	x1, [x0, #24]
   159a4:	mov	x20, x22
   159a8:	cbz	x1, 159b8 <hash_pjw_bare@@Base+0x340>
   159ac:	mov	x0, x22
   159b0:	blr	x1
   159b4:	mov	x20, x0
   159b8:	ldr	x23, [x21, #8]
   159bc:	ldr	x0, [x21, #40]
   159c0:	udiv	x24, x20, x0
   159c4:	msub	x24, x24, x0, x20
   159c8:	ldr	x0, [x21, #32]
   159cc:	ldr	x19, [x0, x24, lsl #3]
   159d0:	cbnz	x19, 15a4c <hash_pjw_bare@@Base+0x3d4>
   159d4:	mov	x0, #0x18                  	// #24
   159d8:	bl	a5f0 <malloc@plt>
   159dc:	cbz	x0, 15b20 <hash_pjw_bare@@Base+0x4a8>
   159e0:	str	x22, [x0, #16]
   159e4:	str	x20, [x0, #8]
   159e8:	ldr	x1, [x21, #32]
   159ec:	ldr	x2, [x1, x24, lsl #3]
   159f0:	str	x2, [x0]
   159f4:	str	x0, [x1, x24, lsl #3]
   159f8:	ldr	x0, [x21, #48]
   159fc:	add	x0, x0, #0x1
   15a00:	str	x0, [x21, #48]
   15a04:	add	x1, x0, x0, lsr #1
   15a08:	cmp	x0, x1
   15a0c:	csinv	x1, x1, xzr, ls  // ls = plast
   15a10:	ldr	x20, [x21, #40]
   15a14:	mov	w0, #0x1                   	// #1
   15a18:	cmp	x20, x1
   15a1c:	b.cc	15a70 <hash_pjw_bare@@Base+0x3f8>  // b.lo, b.ul, b.last
   15a20:	ldp	x19, x20, [sp, #16]
   15a24:	ldp	x21, x22, [sp, #32]
   15a28:	ldp	x23, x24, [sp, #48]
   15a2c:	ldp	x29, x30, [sp], #64
   15a30:	ret
   15a34:	ldr	x0, [x19, #16]
   15a38:	cmp	x0, x22
   15a3c:	cset	w2, eq  // eq = none
   15a40:	cbnz	w2, 15b18 <hash_pjw_bare@@Base+0x4a0>
   15a44:	ldr	x19, [x19]
   15a48:	cbz	x19, 159d4 <hash_pjw_bare@@Base+0x35c>
   15a4c:	ldr	x2, [x19, #8]
   15a50:	cmp	x2, x20
   15a54:	b.ne	15a44 <hash_pjw_bare@@Base+0x3cc>  // b.any
   15a58:	cbz	x23, 15a34 <hash_pjw_bare@@Base+0x3bc>
   15a5c:	ldr	x1, [x19, #16]
   15a60:	mov	x0, x22
   15a64:	blr	x23
   15a68:	and	w2, w0, #0xff
   15a6c:	b	15a40 <hash_pjw_bare@@Base+0x3c8>
   15a70:	mov	x0, #0x0                   	// #0
   15a74:	adrp	x2, 2d000 <vasnprintf@@Base+0x2378>
   15a78:	add	x2, x2, #0x8e8
   15a7c:	ldr	x19, [x2, x0, lsl #3]
   15a80:	cmp	x1, x19
   15a84:	b.ls	15a9c <hash_pjw_bare@@Base+0x424>  // b.plast
   15a88:	add	x0, x0, #0x1
   15a8c:	cmp	x0, #0xe8
   15a90:	b.ne	15a7c <hash_pjw_bare@@Base+0x404>  // b.any
   15a94:	mov	w0, #0x1                   	// #1
   15a98:	b	15a20 <hash_pjw_bare@@Base+0x3a8>
   15a9c:	mov	w0, #0x1                   	// #1
   15aa0:	cmp	x20, x19
   15aa4:	b.cs	15a20 <hash_pjw_bare@@Base+0x3a8>  // b.hs, b.nlast
   15aa8:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   15aac:	cmp	x19, x1
   15ab0:	b.hi	15a20 <hash_pjw_bare@@Base+0x3a8>  // b.pmore
   15ab4:	ldr	x22, [x21, #32]
   15ab8:	mov	x1, #0x8                   	// #8
   15abc:	mov	x0, x19
   15ac0:	bl	a770 <calloc@plt>
   15ac4:	cbz	x0, 15b28 <hash_pjw_bare@@Base+0x4b0>
   15ac8:	cbz	x20, 15b00 <hash_pjw_bare@@Base+0x488>
   15acc:	sub	x20, x20, #0x1
   15ad0:	ldr	x2, [x22, x20, lsl #3]
   15ad4:	cbz	x2, 15afc <hash_pjw_bare@@Base+0x484>
   15ad8:	mov	x3, x2
   15adc:	ldr	x2, [x2]
   15ae0:	ldr	x4, [x3, #8]
   15ae4:	udiv	x1, x4, x19
   15ae8:	msub	x1, x1, x19, x4
   15aec:	ldr	x4, [x0, x1, lsl #3]
   15af0:	str	x4, [x3]
   15af4:	str	x3, [x0, x1, lsl #3]
   15af8:	cbnz	x2, 15ad8 <hash_pjw_bare@@Base+0x460>
   15afc:	cbnz	x20, 15acc <hash_pjw_bare@@Base+0x454>
   15b00:	str	x0, [x21, #32]
   15b04:	str	x19, [x21, #40]
   15b08:	mov	x0, x22
   15b0c:	bl	aa50 <free@plt>
   15b10:	mov	w0, #0x1                   	// #1
   15b14:	b	15a20 <hash_pjw_bare@@Base+0x3a8>
   15b18:	mov	w0, #0x0                   	// #0
   15b1c:	b	15a20 <hash_pjw_bare@@Base+0x3a8>
   15b20:	mov	w0, #0xffffffff            	// #-1
   15b24:	b	15a20 <hash_pjw_bare@@Base+0x3a8>
   15b28:	mov	w0, #0x1                   	// #1
   15b2c:	b	15a20 <hash_pjw_bare@@Base+0x3a8>
   15b30:	stp	x29, x30, [sp, #-64]!
   15b34:	mov	x29, sp
   15b38:	stp	x19, x20, [sp, #16]
   15b3c:	stp	x21, x22, [sp, #32]
   15b40:	str	x23, [sp, #48]
   15b44:	mov	x23, x0
   15b48:	mov	x22, x1
   15b4c:	mov	x20, x2
   15b50:	mov	x21, x3
   15b54:	mov	x0, #0x38                  	// #56
   15b58:	bl	a5f0 <malloc@plt>
   15b5c:	mov	x19, x0
   15b60:	cbz	x0, 15b94 <hash_pjw_bare@@Base+0x51c>
   15b64:	str	x23, [x0]
   15b68:	str	x22, [x0, #8]
   15b6c:	str	x21, [x0, #16]
   15b70:	str	x20, [x0, #24]
   15b74:	mov	x0, #0xb                   	// #11
   15b78:	str	x0, [x19, #40]
   15b7c:	mov	x1, #0x8                   	// #8
   15b80:	bl	a770 <calloc@plt>
   15b84:	mov	x20, x0
   15b88:	str	x0, [x19, #32]
   15b8c:	cbz	x0, 15bac <hash_pjw_bare@@Base+0x534>
   15b90:	str	xzr, [x19, #48]
   15b94:	mov	x0, x19
   15b98:	ldp	x19, x20, [sp, #16]
   15b9c:	ldp	x21, x22, [sp, #32]
   15ba0:	ldr	x23, [sp, #48]
   15ba4:	ldp	x29, x30, [sp], #64
   15ba8:	ret
   15bac:	mov	x0, x19
   15bb0:	bl	aa50 <free@plt>
   15bb4:	mov	x19, x20
   15bb8:	b	15b94 <hash_pjw_bare@@Base+0x51c>

0000000000015bbc <triple_hash@@Base>:
   15bbc:	stp	x29, x30, [sp, #-32]!
   15bc0:	mov	x29, sp
   15bc4:	stp	x19, x20, [sp, #16]
   15bc8:	mov	x20, x0
   15bcc:	mov	x19, x1
   15bd0:	ldr	x0, [x0]
   15bd4:	bl	ac50 <hash_pjw@plt>
   15bd8:	ldr	x1, [x20, #8]
   15bdc:	eor	x0, x0, x1
   15be0:	udiv	x1, x0, x19
   15be4:	msub	x0, x1, x19, x0
   15be8:	ldp	x19, x20, [sp, #16]
   15bec:	ldp	x29, x30, [sp], #32
   15bf0:	ret

0000000000015bf4 <triple_hash_no_name@@Base>:
   15bf4:	ldr	x0, [x0, #8]
   15bf8:	udiv	x2, x0, x1
   15bfc:	msub	x0, x2, x1, x0
   15c00:	ret

0000000000015c04 <triple_compare@@Base>:
   15c04:	ldr	x3, [x0, #8]
   15c08:	ldr	x2, [x1, #8]
   15c0c:	cmp	x3, x2
   15c10:	b.eq	15c20 <triple_compare@@Base+0x1c>  // b.none
   15c14:	mov	w2, #0x0                   	// #0
   15c18:	and	w0, w2, #0x1
   15c1c:	ret
   15c20:	ldr	x4, [x0, #16]
   15c24:	ldr	x3, [x1, #16]
   15c28:	mov	w2, #0x0                   	// #0
   15c2c:	cmp	x4, x3
   15c30:	b.ne	15c18 <triple_compare@@Base+0x14>  // b.any
   15c34:	stp	x29, x30, [sp, #-16]!
   15c38:	mov	x29, sp
   15c3c:	ldr	x1, [x1]
   15c40:	ldr	x0, [x0]
   15c44:	bl	a750 <same_name@plt>
   15c48:	and	w2, w0, #0xff
   15c4c:	and	w0, w2, #0x1
   15c50:	ldp	x29, x30, [sp], #16
   15c54:	ret

0000000000015c58 <triple_compare_ino_str@@Base>:
   15c58:	mov	x2, x0
   15c5c:	ldr	x3, [x0, #8]
   15c60:	ldr	x0, [x1, #8]
   15c64:	cmp	x3, x0
   15c68:	b.eq	15c74 <triple_compare_ino_str@@Base+0x1c>  // b.none
   15c6c:	mov	w0, #0x0                   	// #0
   15c70:	ret
   15c74:	ldr	x4, [x2, #16]
   15c78:	ldr	x3, [x1, #16]
   15c7c:	mov	w0, #0x0                   	// #0
   15c80:	cmp	x4, x3
   15c84:	b.eq	15c8c <triple_compare_ino_str@@Base+0x34>  // b.none
   15c88:	ret
   15c8c:	stp	x29, x30, [sp, #-16]!
   15c90:	mov	x29, sp
   15c94:	ldr	x1, [x1]
   15c98:	ldr	x0, [x2]
   15c9c:	bl	a9b0 <strcmp@plt>
   15ca0:	cmp	w0, #0x0
   15ca4:	cset	w0, eq  // eq = none
   15ca8:	ldp	x29, x30, [sp], #16
   15cac:	ret

0000000000015cb0 <triple_free@@Base>:
   15cb0:	stp	x29, x30, [sp, #-32]!
   15cb4:	mov	x29, sp
   15cb8:	str	x19, [sp, #16]
   15cbc:	mov	x19, x0
   15cc0:	ldr	x0, [x0]
   15cc4:	bl	aa50 <free@plt>
   15cc8:	mov	x0, x19
   15ccc:	bl	aa50 <free@plt>
   15cd0:	ldr	x19, [sp, #16]
   15cd4:	ldp	x29, x30, [sp], #32
   15cd8:	ret

0000000000015cdc <idpriv_drop@@Base>:
   15cdc:	stp	x29, x30, [sp, #-48]!
   15ce0:	mov	x29, sp
   15ce4:	stp	x19, x20, [sp, #16]
   15ce8:	bl	a4a0 <getuid@plt>
   15cec:	mov	w19, w0
   15cf0:	bl	aa90 <getgid@plt>
   15cf4:	mov	w20, w0
   15cf8:	mov	w2, w0
   15cfc:	mov	w1, w0
   15d00:	bl	aec0 <setresgid@plt>
   15d04:	tbnz	w0, #31, 15da4 <idpriv_drop@@Base+0xc8>
   15d08:	mov	w2, w19
   15d0c:	mov	w1, w19
   15d10:	mov	w0, w19
   15d14:	bl	ad10 <setresuid@plt>
   15d18:	tbnz	w0, #31, 15dac <idpriv_drop@@Base+0xd0>
   15d1c:	add	x2, sp, #0x2c
   15d20:	add	x1, sp, #0x28
   15d24:	add	x0, sp, #0x24
   15d28:	bl	a420 <getresuid@plt>
   15d2c:	tbnz	w0, #31, 15d9c <idpriv_drop@@Base+0xc0>
   15d30:	ldr	w0, [sp, #36]
   15d34:	cmp	w19, w0
   15d38:	b.ne	15d9c <idpriv_drop@@Base+0xc0>  // b.any
   15d3c:	ldr	w0, [sp, #40]
   15d40:	cmp	w19, w0
   15d44:	b.ne	15d9c <idpriv_drop@@Base+0xc0>  // b.any
   15d48:	ldr	w0, [sp, #44]
   15d4c:	cmp	w19, w0
   15d50:	b.ne	15d9c <idpriv_drop@@Base+0xc0>  // b.any
   15d54:	add	x2, sp, #0x2c
   15d58:	add	x1, sp, #0x28
   15d5c:	add	x0, sp, #0x24
   15d60:	bl	acc0 <getresgid@plt>
   15d64:	tbnz	w0, #31, 15da0 <idpriv_drop@@Base+0xc4>
   15d68:	ldr	w0, [sp, #36]
   15d6c:	cmp	w20, w0
   15d70:	b.ne	15da0 <idpriv_drop@@Base+0xc4>  // b.any
   15d74:	ldr	w0, [sp, #40]
   15d78:	cmp	w20, w0
   15d7c:	b.ne	15da0 <idpriv_drop@@Base+0xc4>  // b.any
   15d80:	mov	w0, #0x0                   	// #0
   15d84:	ldr	w1, [sp, #44]
   15d88:	cmp	w20, w1
   15d8c:	b.ne	15da0 <idpriv_drop@@Base+0xc4>  // b.any
   15d90:	ldp	x19, x20, [sp, #16]
   15d94:	ldp	x29, x30, [sp], #48
   15d98:	ret
   15d9c:	bl	a900 <abort@plt>
   15da0:	bl	a900 <abort@plt>
   15da4:	mov	w0, #0xffffffff            	// #-1
   15da8:	b	15d90 <idpriv_drop@@Base+0xb4>
   15dac:	mov	w0, #0xffffffff            	// #-1
   15db0:	b	15d90 <idpriv_drop@@Base+0xb4>

0000000000015db4 <idpriv_temp_drop@@Base>:
   15db4:	stp	x29, x30, [sp, #-64]!
   15db8:	mov	x29, sp
   15dbc:	stp	x19, x20, [sp, #16]
   15dc0:	stp	x21, x22, [sp, #32]
   15dc4:	bl	a4a0 <getuid@plt>
   15dc8:	mov	w20, w0
   15dcc:	bl	aa90 <getgid@plt>
   15dd0:	mov	w19, w0
   15dd4:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   15dd8:	ldr	w0, [x0, #508]
   15ddc:	cmn	w0, #0x1
   15de0:	b.eq	15eb0 <idpriv_temp_drop@@Base+0xfc>  // b.none
   15de4:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   15de8:	ldr	w0, [x0, #512]
   15dec:	cmn	w0, #0x1
   15df0:	b.eq	15ec0 <idpriv_temp_drop@@Base+0x10c>  // b.none
   15df4:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   15df8:	ldr	w21, [x0, #512]
   15dfc:	mov	w2, w21
   15e00:	mov	w1, w19
   15e04:	mov	w0, #0xffffffff            	// #-1
   15e08:	bl	aec0 <setresgid@plt>
   15e0c:	tbnz	w0, #31, 15ed8 <idpriv_temp_drop@@Base+0x124>
   15e10:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   15e14:	ldr	w22, [x0, #508]
   15e18:	mov	w2, w22
   15e1c:	mov	w1, w20
   15e20:	mov	w0, #0xffffffff            	// #-1
   15e24:	bl	ad10 <setresuid@plt>
   15e28:	tbnz	w0, #31, 15ee0 <idpriv_temp_drop@@Base+0x12c>
   15e2c:	add	x2, sp, #0x3c
   15e30:	add	x1, sp, #0x38
   15e34:	add	x0, sp, #0x34
   15e38:	bl	a420 <getresuid@plt>
   15e3c:	tbnz	w0, #31, 15ed0 <idpriv_temp_drop@@Base+0x11c>
   15e40:	ldr	w0, [sp, #52]
   15e44:	cmp	w20, w0
   15e48:	b.ne	15ed0 <idpriv_temp_drop@@Base+0x11c>  // b.any
   15e4c:	ldr	w0, [sp, #56]
   15e50:	cmp	w20, w0
   15e54:	b.ne	15ed0 <idpriv_temp_drop@@Base+0x11c>  // b.any
   15e58:	ldr	w0, [sp, #60]
   15e5c:	cmp	w22, w0
   15e60:	b.ne	15ed0 <idpriv_temp_drop@@Base+0x11c>  // b.any
   15e64:	add	x2, sp, #0x3c
   15e68:	add	x1, sp, #0x38
   15e6c:	add	x0, sp, #0x34
   15e70:	bl	acc0 <getresgid@plt>
   15e74:	tbnz	w0, #31, 15ed4 <idpriv_temp_drop@@Base+0x120>
   15e78:	ldr	w0, [sp, #52]
   15e7c:	cmp	w19, w0
   15e80:	b.ne	15ed4 <idpriv_temp_drop@@Base+0x120>  // b.any
   15e84:	ldr	w0, [sp, #56]
   15e88:	cmp	w19, w0
   15e8c:	b.ne	15ed4 <idpriv_temp_drop@@Base+0x120>  // b.any
   15e90:	mov	w0, #0x0                   	// #0
   15e94:	ldr	w1, [sp, #60]
   15e98:	cmp	w21, w1
   15e9c:	b.ne	15ed4 <idpriv_temp_drop@@Base+0x120>  // b.any
   15ea0:	ldp	x19, x20, [sp, #16]
   15ea4:	ldp	x21, x22, [sp, #32]
   15ea8:	ldp	x29, x30, [sp], #64
   15eac:	ret
   15eb0:	bl	a3f0 <geteuid@plt>
   15eb4:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   15eb8:	str	w0, [x1, #508]
   15ebc:	b	15de4 <idpriv_temp_drop@@Base+0x30>
   15ec0:	bl	a3b0 <getegid@plt>
   15ec4:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   15ec8:	str	w0, [x1, #512]
   15ecc:	b	15df4 <idpriv_temp_drop@@Base+0x40>
   15ed0:	bl	a900 <abort@plt>
   15ed4:	bl	a900 <abort@plt>
   15ed8:	mov	w0, #0xffffffff            	// #-1
   15edc:	b	15ea0 <idpriv_temp_drop@@Base+0xec>
   15ee0:	mov	w0, #0xffffffff            	// #-1
   15ee4:	b	15ea0 <idpriv_temp_drop@@Base+0xec>

0000000000015ee8 <idpriv_temp_restore@@Base>:
   15ee8:	stp	x29, x30, [sp, #-64]!
   15eec:	mov	x29, sp
   15ef0:	stp	x19, x20, [sp, #16]
   15ef4:	stp	x21, x22, [sp, #32]
   15ef8:	bl	a4a0 <getuid@plt>
   15efc:	mov	w22, w0
   15f00:	bl	aa90 <getgid@plt>
   15f04:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   15f08:	ldr	w19, [x1, #508]
   15f0c:	cmn	w19, #0x1
   15f10:	b.eq	15fd4 <idpriv_temp_restore@@Base+0xec>  // b.none
   15f14:	mov	w21, w0
   15f18:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   15f1c:	ldr	w20, [x1, #512]
   15f20:	cmn	w20, #0x1
   15f24:	b.eq	15fd4 <idpriv_temp_restore@@Base+0xec>  // b.none
   15f28:	mov	w2, #0xffffffff            	// #-1
   15f2c:	mov	w1, w19
   15f30:	mov	w0, w2
   15f34:	bl	ad10 <setresuid@plt>
   15f38:	tbnz	w0, #31, 15fe0 <idpriv_temp_restore@@Base+0xf8>
   15f3c:	mov	w2, #0xffffffff            	// #-1
   15f40:	mov	w1, w20
   15f44:	mov	w0, w2
   15f48:	bl	aec0 <setresgid@plt>
   15f4c:	tbnz	w0, #31, 15fe8 <idpriv_temp_restore@@Base+0x100>
   15f50:	add	x2, sp, #0x3c
   15f54:	add	x1, sp, #0x38
   15f58:	add	x0, sp, #0x34
   15f5c:	bl	a420 <getresuid@plt>
   15f60:	tbnz	w0, #31, 15fd8 <idpriv_temp_restore@@Base+0xf0>
   15f64:	ldr	w0, [sp, #52]
   15f68:	cmp	w22, w0
   15f6c:	b.ne	15fd8 <idpriv_temp_restore@@Base+0xf0>  // b.any
   15f70:	ldr	w0, [sp, #56]
   15f74:	cmp	w19, w0
   15f78:	b.ne	15fd8 <idpriv_temp_restore@@Base+0xf0>  // b.any
   15f7c:	ldr	w0, [sp, #60]
   15f80:	cmp	w19, w0
   15f84:	b.ne	15fd8 <idpriv_temp_restore@@Base+0xf0>  // b.any
   15f88:	add	x2, sp, #0x3c
   15f8c:	add	x1, sp, #0x38
   15f90:	add	x0, sp, #0x34
   15f94:	bl	acc0 <getresgid@plt>
   15f98:	tbnz	w0, #31, 15fdc <idpriv_temp_restore@@Base+0xf4>
   15f9c:	ldr	w0, [sp, #52]
   15fa0:	cmp	w21, w0
   15fa4:	b.ne	15fdc <idpriv_temp_restore@@Base+0xf4>  // b.any
   15fa8:	ldr	w0, [sp, #56]
   15fac:	cmp	w20, w0
   15fb0:	b.ne	15fdc <idpriv_temp_restore@@Base+0xf4>  // b.any
   15fb4:	mov	w0, #0x0                   	// #0
   15fb8:	ldr	w1, [sp, #60]
   15fbc:	cmp	w20, w1
   15fc0:	b.ne	15fdc <idpriv_temp_restore@@Base+0xf4>  // b.any
   15fc4:	ldp	x19, x20, [sp, #16]
   15fc8:	ldp	x21, x22, [sp, #32]
   15fcc:	ldp	x29, x30, [sp], #64
   15fd0:	ret
   15fd4:	bl	a900 <abort@plt>
   15fd8:	bl	a900 <abort@plt>
   15fdc:	bl	a900 <abort@plt>
   15fe0:	mov	w0, #0xffffffff            	// #-1
   15fe4:	b	15fc4 <idpriv_temp_restore@@Base+0xdc>
   15fe8:	mov	w0, #0xffffffff            	// #-1
   15fec:	b	15fc4 <idpriv_temp_restore@@Base+0xdc>
   15ff0:	ldr	x4, [x1, #8]
   15ff4:	ldr	x3, [x0, #48]
   15ff8:	udiv	x2, x4, x3
   15ffc:	msub	x2, x2, x3, x4
   16000:	ldr	x3, [x0, #40]
   16004:	ldr	x3, [x3, x2, lsl #3]
   16008:	str	x3, [x1]
   1600c:	ldr	x0, [x0, #40]
   16010:	str	x1, [x0, x2, lsl #3]
   16014:	ret
   16018:	ldr	x0, [x0, #96]
   1601c:	ret
   16020:	ldr	x0, [x1, #32]
   16024:	ret
   16028:	ldr	x1, [x1, #16]
   1602c:	add	x0, x0, #0x38
   16030:	cmp	x1, x0
   16034:	csel	x0, x1, xzr, ne  // ne = any
   16038:	ret
   1603c:	ldr	x1, [x1, #24]
   16040:	add	x0, x0, #0x38
   16044:	cmp	x1, x0
   16048:	csel	x0, x1, xzr, ne  // ne = any
   1604c:	ret
   16050:	ldr	x1, [x0, #72]
   16054:	ldr	x2, [x0]
   16058:	str	x2, [x8]
   1605c:	str	x0, [x8, #8]
   16060:	str	x1, [x8, #24]
   16064:	add	x0, x0, #0x38
   16068:	str	x0, [x8, #32]
   1606c:	ret
   16070:	ldr	x3, [x0, #24]
   16074:	ldr	x4, [x0, #32]
   16078:	cmp	x3, x4
   1607c:	b.eq	160a0 <idpriv_temp_restore@@Base+0x1b8>  // b.none
   16080:	ldr	x4, [x3, #32]
   16084:	str	x4, [x1]
   16088:	cbz	x2, 16090 <idpriv_temp_restore@@Base+0x1a8>
   1608c:	str	x3, [x2]
   16090:	ldr	x1, [x3, #16]
   16094:	str	x1, [x0, #24]
   16098:	mov	w0, #0x1                   	// #1
   1609c:	ret
   160a0:	mov	w0, #0x0                   	// #0
   160a4:	b	1609c <idpriv_temp_restore@@Base+0x1b4>
   160a8:	ret
   160ac:	stp	x29, x30, [sp, #-48]!
   160b0:	mov	x29, sp
   160b4:	stp	x19, x20, [sp, #16]
   160b8:	stp	x21, x22, [sp, #32]
   160bc:	mov	x22, x1
   160c0:	mov	x21, x2
   160c4:	ldr	x19, [x0, #72]
   160c8:	add	x20, x0, #0x38
   160cc:	cmp	x19, x20
   160d0:	b.eq	16100 <idpriv_temp_restore@@Base+0x218>  // b.none
   160d4:	mov	x1, x21
   160d8:	ldr	x0, [x19, #32]
   160dc:	blr	x22
   160e0:	cmp	w0, #0x0
   160e4:	b.gt	16108 <idpriv_temp_restore@@Base+0x220>
   160e8:	cbz	w0, 1610c <idpriv_temp_restore@@Base+0x224>
   160ec:	ldr	x19, [x19, #16]
   160f0:	cmp	x19, x20
   160f4:	b.ne	160d4 <idpriv_temp_restore@@Base+0x1ec>  // b.any
   160f8:	mov	x19, #0x0                   	// #0
   160fc:	b	1610c <idpriv_temp_restore@@Base+0x224>
   16100:	mov	x19, #0x0                   	// #0
   16104:	b	1610c <idpriv_temp_restore@@Base+0x224>
   16108:	mov	x19, #0x0                   	// #0
   1610c:	mov	x0, x19
   16110:	ldp	x19, x20, [sp, #16]
   16114:	ldp	x21, x22, [sp, #32]
   16118:	ldp	x29, x30, [sp], #48
   1611c:	ret
   16120:	stp	x29, x30, [sp, #-64]!
   16124:	mov	x29, sp
   16128:	stp	x19, x20, [sp, #16]
   1612c:	stp	x21, x22, [sp, #32]
   16130:	ldr	x19, [x0, #72]
   16134:	add	x21, x0, #0x38
   16138:	cmp	x19, x21
   1613c:	b.eq	16184 <idpriv_temp_restore@@Base+0x29c>  // b.none
   16140:	str	x23, [sp, #48]
   16144:	mov	x22, x1
   16148:	mov	x23, x2
   1614c:	mov	x20, #0x0                   	// #0
   16150:	mov	x1, x23
   16154:	ldr	x0, [x19, #32]
   16158:	blr	x22
   1615c:	cmp	w0, #0x0
   16160:	b.gt	1618c <idpriv_temp_restore@@Base+0x2a4>
   16164:	cbz	w0, 161a8 <idpriv_temp_restore@@Base+0x2c0>
   16168:	ldr	x19, [x19, #16]
   1616c:	add	x20, x20, #0x1
   16170:	cmp	x19, x21
   16174:	b.ne	16150 <idpriv_temp_restore@@Base+0x268>  // b.any
   16178:	mov	x20, #0xffffffffffffffff    	// #-1
   1617c:	ldr	x23, [sp, #48]
   16180:	b	16194 <idpriv_temp_restore@@Base+0x2ac>
   16184:	mov	x20, #0xffffffffffffffff    	// #-1
   16188:	b	16194 <idpriv_temp_restore@@Base+0x2ac>
   1618c:	mov	x20, #0xffffffffffffffff    	// #-1
   16190:	ldr	x23, [sp, #48]
   16194:	mov	x0, x20
   16198:	ldp	x19, x20, [sp, #16]
   1619c:	ldp	x21, x22, [sp, #32]
   161a0:	ldp	x29, x30, [sp], #64
   161a4:	ret
   161a8:	ldr	x23, [sp, #48]
   161ac:	b	16194 <idpriv_temp_restore@@Base+0x2ac>
   161b0:	stp	x29, x30, [sp, #-64]!
   161b4:	mov	x29, sp
   161b8:	stp	x19, x20, [sp, #16]
   161bc:	stp	x21, x22, [sp, #32]
   161c0:	str	x23, [sp, #48]
   161c4:	mov	x22, x1
   161c8:	ldr	x1, [x0, #96]
   161cc:	cmp	x1, x3
   161d0:	ccmp	x2, x3, #0x2, cs  // cs = hs, nlast
   161d4:	b.hi	16248 <idpriv_temp_restore@@Base+0x360>  // b.pmore
   161d8:	mov	x5, x0
   161dc:	mov	x20, x2
   161e0:	mov	x23, x4
   161e4:	mov	x0, #0xffffffffffffffff    	// #-1
   161e8:	subs	x3, x3, x2
   161ec:	b.eq	16270 <idpriv_temp_restore@@Base+0x388>  // b.none
   161f0:	add	x0, x1, x0
   161f4:	cmp	x2, x0, lsr #1
   161f8:	b.hi	1624c <idpriv_temp_restore@@Base+0x364>  // b.pmore
   161fc:	ldr	x19, [x5, #72]
   16200:	cbz	x2, 16214 <idpriv_temp_restore@@Base+0x32c>
   16204:	mov	x0, x2
   16208:	ldr	x19, [x19, #16]
   1620c:	subs	x0, x0, #0x1
   16210:	b.ne	16208 <idpriv_temp_restore@@Base+0x320>  // b.any
   16214:	add	x21, x3, x20
   16218:	mov	x1, x23
   1621c:	ldr	x0, [x19, #32]
   16220:	blr	x22
   16224:	cmp	w0, #0x0
   16228:	b.gt	1626c <idpriv_temp_restore@@Base+0x384>
   1622c:	cbz	w0, 16284 <idpriv_temp_restore@@Base+0x39c>
   16230:	ldr	x19, [x19, #16]
   16234:	add	x20, x20, #0x1
   16238:	cmp	x21, x20
   1623c:	b.ne	16218 <idpriv_temp_restore@@Base+0x330>  // b.any
   16240:	mov	x0, #0xffffffffffffffff    	// #-1
   16244:	b	16270 <idpriv_temp_restore@@Base+0x388>
   16248:	bl	a900 <abort@plt>
   1624c:	mvn	x0, x2
   16250:	ldr	x19, [x5, #80]
   16254:	adds	x0, x0, x1
   16258:	b.eq	16214 <idpriv_temp_restore@@Base+0x32c>  // b.none
   1625c:	ldr	x19, [x19, #24]
   16260:	subs	x0, x0, #0x1
   16264:	b.ne	1625c <idpriv_temp_restore@@Base+0x374>  // b.any
   16268:	b	16214 <idpriv_temp_restore@@Base+0x32c>
   1626c:	mov	x0, #0xffffffffffffffff    	// #-1
   16270:	ldp	x19, x20, [sp, #16]
   16274:	ldp	x21, x22, [sp, #32]
   16278:	ldr	x23, [sp, #48]
   1627c:	ldp	x29, x30, [sp], #64
   16280:	ret
   16284:	mov	x0, x20
   16288:	b	16270 <idpriv_temp_restore@@Base+0x388>
   1628c:	stp	x29, x30, [sp, #-48]!
   16290:	mov	x29, sp
   16294:	stp	x19, x20, [sp, #16]
   16298:	stp	x21, x22, [sp, #32]
   1629c:	mov	x21, x1
   162a0:	ldr	x1, [x0, #96]
   162a4:	cmp	x1, x3
   162a8:	ccmp	x2, x3, #0x2, cs  // cs = hs, nlast
   162ac:	b.hi	1630c <idpriv_temp_restore@@Base+0x424>  // b.pmore
   162b0:	mov	x22, x4
   162b4:	mov	x19, #0x0                   	// #0
   162b8:	subs	x20, x3, x2
   162bc:	b.eq	16334 <idpriv_temp_restore@@Base+0x44c>  // b.none
   162c0:	sub	x3, x1, #0x1
   162c4:	cmp	x2, x3, lsr #1
   162c8:	b.hi	16310 <idpriv_temp_restore@@Base+0x428>  // b.pmore
   162cc:	ldr	x19, [x0, #72]
   162d0:	cbz	x2, 162e0 <idpriv_temp_restore@@Base+0x3f8>
   162d4:	ldr	x19, [x19, #16]
   162d8:	subs	x2, x2, #0x1
   162dc:	b.ne	162d4 <idpriv_temp_restore@@Base+0x3ec>  // b.any
   162e0:	mov	x1, x22
   162e4:	ldr	x0, [x19, #32]
   162e8:	blr	x21
   162ec:	cmp	w0, #0x0
   162f0:	b.gt	16330 <idpriv_temp_restore@@Base+0x448>
   162f4:	cbz	w0, 16334 <idpriv_temp_restore@@Base+0x44c>
   162f8:	ldr	x19, [x19, #16]
   162fc:	subs	x20, x20, #0x1
   16300:	b.ne	162e0 <idpriv_temp_restore@@Base+0x3f8>  // b.any
   16304:	mov	x19, #0x0                   	// #0
   16308:	b	16334 <idpriv_temp_restore@@Base+0x44c>
   1630c:	bl	a900 <abort@plt>
   16310:	mvn	x2, x2
   16314:	ldr	x19, [x0, #80]
   16318:	adds	x2, x2, x1
   1631c:	b.eq	162e0 <idpriv_temp_restore@@Base+0x3f8>  // b.none
   16320:	ldr	x19, [x19, #24]
   16324:	subs	x2, x2, #0x1
   16328:	b.ne	16320 <idpriv_temp_restore@@Base+0x438>  // b.any
   1632c:	b	162e0 <idpriv_temp_restore@@Base+0x3f8>
   16330:	mov	x19, #0x0                   	// #0
   16334:	mov	x0, x19
   16338:	ldp	x19, x20, [sp, #16]
   1633c:	ldp	x21, x22, [sp, #32]
   16340:	ldp	x29, x30, [sp], #48
   16344:	ret
   16348:	cmp	x1, x2
   1634c:	b.hi	163b4 <idpriv_temp_restore@@Base+0x4cc>  // b.pmore
   16350:	ldr	x3, [x0, #96]
   16354:	cmp	x3, x2
   16358:	b.cc	163b4 <idpriv_temp_restore@@Base+0x4cc>  // b.lo, b.ul, b.last
   1635c:	ldr	x5, [x0]
   16360:	sub	x4, x2, x1
   16364:	sub	x2, x3, x2
   16368:	cmp	x4, x2
   1636c:	csel	x3, x4, x2, cs  // cs = hs, nlast
   16370:	cmp	x1, x3
   16374:	b.ls	163c0 <idpriv_temp_restore@@Base+0x4d8>  // b.plast
   16378:	add	x1, x0, #0x38
   1637c:	cbz	x2, 1638c <idpriv_temp_restore@@Base+0x4a4>
   16380:	ldr	x1, [x1, #24]
   16384:	subs	x2, x2, #0x1
   16388:	b.ne	16380 <idpriv_temp_restore@@Base+0x498>  // b.any
   1638c:	cbz	x4, 16420 <idpriv_temp_restore@@Base+0x538>
   16390:	mov	x3, x1
   16394:	ldr	x3, [x3, #24]
   16398:	subs	x4, x4, #0x1
   1639c:	b.ne	16394 <idpriv_temp_restore@@Base+0x4ac>  // b.any
   163a0:	str	x5, [x8]
   163a4:	str	x0, [x8, #8]
   163a8:	str	x3, [x8, #24]
   163ac:	str	x1, [x8, #32]
   163b0:	ret
   163b4:	stp	x29, x30, [sp, #-16]!
   163b8:	mov	x29, sp
   163bc:	bl	a900 <abort@plt>
   163c0:	cmp	x4, x2
   163c4:	b.ls	163f4 <idpriv_temp_restore@@Base+0x50c>  // b.plast
   163c8:	ldr	x3, [x0, #72]
   163cc:	cbz	x1, 163dc <idpriv_temp_restore@@Base+0x4f4>
   163d0:	ldr	x3, [x3, #16]
   163d4:	subs	x1, x1, #0x1
   163d8:	b.ne	163d0 <idpriv_temp_restore@@Base+0x4e8>  // b.any
   163dc:	add	x1, x0, #0x38
   163e0:	cbz	x2, 163a0 <idpriv_temp_restore@@Base+0x4b8>
   163e4:	ldr	x1, [x1, #24]
   163e8:	subs	x2, x2, #0x1
   163ec:	b.ne	163e4 <idpriv_temp_restore@@Base+0x4fc>  // b.any
   163f0:	b	163a0 <idpriv_temp_restore@@Base+0x4b8>
   163f4:	ldr	x3, [x0, #72]
   163f8:	cbz	x1, 16408 <idpriv_temp_restore@@Base+0x520>
   163fc:	ldr	x3, [x3, #16]
   16400:	subs	x1, x1, #0x1
   16404:	b.ne	163fc <idpriv_temp_restore@@Base+0x514>  // b.any
   16408:	cbz	x4, 16428 <idpriv_temp_restore@@Base+0x540>
   1640c:	mov	x1, x3
   16410:	ldr	x1, [x1, #16]
   16414:	subs	x4, x4, #0x1
   16418:	b.ne	16410 <idpriv_temp_restore@@Base+0x528>  // b.any
   1641c:	b	163a0 <idpriv_temp_restore@@Base+0x4b8>
   16420:	mov	x3, x1
   16424:	b	163a0 <idpriv_temp_restore@@Base+0x4b8>
   16428:	mov	x1, x3
   1642c:	b	163a0 <idpriv_temp_restore@@Base+0x4b8>
   16430:	ldr	x4, [x1, #8]
   16434:	ldr	x3, [x0, #48]
   16438:	udiv	x2, x4, x3
   1643c:	msub	x2, x2, x3, x4
   16440:	ldr	x0, [x0, #40]
   16444:	add	x4, x0, x2, lsl #3
   16448:	ldr	x0, [x0, x2, lsl #3]
   1644c:	mov	x3, x1
   16450:	cmp	x0, x1
   16454:	b.ne	16460 <idpriv_temp_restore@@Base+0x578>  // b.any
   16458:	b	16474 <idpriv_temp_restore@@Base+0x58c>
   1645c:	mov	x0, x2
   16460:	cbz	x0, 16480 <idpriv_temp_restore@@Base+0x598>
   16464:	ldr	x2, [x0]
   16468:	cmp	x2, x3
   1646c:	b.ne	1645c <idpriv_temp_restore@@Base+0x574>  // b.any
   16470:	mov	x4, x0
   16474:	ldr	x0, [x1]
   16478:	str	x0, [x4]
   1647c:	ret
   16480:	stp	x29, x30, [sp, #-16]!
   16484:	mov	x29, sp
   16488:	bl	a900 <abort@plt>
   1648c:	stp	x29, x30, [sp, #-48]!
   16490:	mov	x29, sp
   16494:	stp	x21, x22, [sp, #32]
   16498:	mov	x21, x0
   1649c:	ldr	x0, [x1, #32]
   164a0:	cmp	x0, x2
   164a4:	b.eq	164e0 <idpriv_temp_restore@@Base+0x5f8>  // b.none
   164a8:	stp	x19, x20, [sp, #16]
   164ac:	mov	x19, x1
   164b0:	mov	x20, x2
   164b4:	ldr	x1, [x21, #16]
   164b8:	mov	x22, x2
   164bc:	cbz	x1, 164cc <idpriv_temp_restore@@Base+0x5e4>
   164c0:	mov	x0, x2
   164c4:	blr	x1
   164c8:	mov	x22, x0
   164cc:	ldr	x0, [x19, #8]
   164d0:	cmp	x0, x22
   164d4:	b.ne	164f0 <idpriv_temp_restore@@Base+0x608>  // b.any
   164d8:	str	x20, [x19, #32]
   164dc:	ldp	x19, x20, [sp, #16]
   164e0:	mov	w0, #0x0                   	// #0
   164e4:	ldp	x21, x22, [sp, #32]
   164e8:	ldp	x29, x30, [sp], #48
   164ec:	ret
   164f0:	mov	x1, x19
   164f4:	mov	x0, x21
   164f8:	bl	16430 <idpriv_temp_restore@@Base+0x548>
   164fc:	str	x20, [x19, #32]
   16500:	str	x22, [x19, #8]
   16504:	mov	x1, x19
   16508:	mov	x0, x21
   1650c:	bl	15ff0 <idpriv_temp_restore@@Base+0x108>
   16510:	ldp	x19, x20, [sp, #16]
   16514:	b	164e0 <idpriv_temp_restore@@Base+0x5f8>
   16518:	stp	x29, x30, [sp, #-80]!
   1651c:	mov	x29, sp
   16520:	stp	x19, x20, [sp, #16]
   16524:	stp	x21, x22, [sp, #32]
   16528:	stp	x23, x24, [sp, #48]
   1652c:	stp	x25, x26, [sp, #64]
   16530:	mov	x22, x0
   16534:	ldr	x0, [x0, #96]
   16538:	cmp	x0, x2
   1653c:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
   16540:	b.hi	16594 <idpriv_temp_restore@@Base+0x6ac>  // b.pmore
   16544:	mov	x23, x1
   16548:	mov	x24, x2
   1654c:	mov	x26, x3
   16550:	ldr	x1, [x22, #16]
   16554:	mov	x21, x3
   16558:	cbz	x1, 16568 <idpriv_temp_restore@@Base+0x680>
   1655c:	mov	x0, x3
   16560:	blr	x1
   16564:	mov	x21, x0
   16568:	ldr	x1, [x22, #48]
   1656c:	udiv	x0, x21, x1
   16570:	msub	x0, x0, x1, x21
   16574:	ldr	x25, [x22, #8]
   16578:	ldrb	w1, [x22, #32]
   1657c:	cbnz	w1, 165d4 <idpriv_temp_restore@@Base+0x6ec>
   16580:	ldr	x1, [x22, #40]
   16584:	ldr	x20, [x1, x0, lsl #3]
   16588:	cbnz	x20, 165b0 <idpriv_temp_restore@@Base+0x6c8>
   1658c:	mov	x0, #0xffffffffffffffff    	// #-1
   16590:	b	16664 <idpriv_temp_restore@@Base+0x77c>
   16594:	bl	a900 <abort@plt>
   16598:	ldr	x0, [x20, #32]
   1659c:	cmp	x0, x26
   165a0:	cset	w0, eq  // eq = none
   165a4:	cbnz	w0, 16634 <idpriv_temp_restore@@Base+0x74c>
   165a8:	ldr	x20, [x20]
   165ac:	cbz	x20, 1658c <idpriv_temp_restore@@Base+0x6a4>
   165b0:	ldr	x0, [x20, #8]
   165b4:	cmp	x0, x21
   165b8:	b.ne	165a8 <idpriv_temp_restore@@Base+0x6c0>  // b.any
   165bc:	cbz	x25, 16598 <idpriv_temp_restore@@Base+0x6b0>
   165c0:	ldr	x1, [x20, #32]
   165c4:	mov	x0, x26
   165c8:	blr	x25
   165cc:	and	w0, w0, #0xff
   165d0:	b	165a4 <idpriv_temp_restore@@Base+0x6bc>
   165d4:	ldr	x1, [x22, #40]
   165d8:	ldr	x19, [x1, x0, lsl #3]
   165dc:	cbz	x19, 166d0 <idpriv_temp_restore@@Base+0x7e8>
   165e0:	mov	x20, #0x0                   	// #0
   165e4:	b	16600 <idpriv_temp_restore@@Base+0x718>
   165e8:	ldr	x0, [x19, #32]
   165ec:	cmp	x0, x26
   165f0:	cset	w0, eq  // eq = none
   165f4:	b	16620 <idpriv_temp_restore@@Base+0x738>
   165f8:	ldr	x19, [x19]
   165fc:	cbz	x19, 16630 <idpriv_temp_restore@@Base+0x748>
   16600:	ldr	x0, [x19, #8]
   16604:	cmp	x0, x21
   16608:	b.ne	165f8 <idpriv_temp_restore@@Base+0x710>  // b.any
   1660c:	cbz	x25, 165e8 <idpriv_temp_restore@@Base+0x700>
   16610:	ldr	x1, [x19, #32]
   16614:	mov	x0, x26
   16618:	blr	x25
   1661c:	and	w0, w0, #0xff
   16620:	cbz	w0, 165f8 <idpriv_temp_restore@@Base+0x710>
   16624:	cbnz	x20, 166e8 <idpriv_temp_restore@@Base+0x800>
   16628:	mov	x20, x19
   1662c:	b	165f8 <idpriv_temp_restore@@Base+0x710>
   16630:	cbz	x20, 166d8 <idpriv_temp_restore@@Base+0x7f0>
   16634:	ldr	x3, [x20, #24]
   16638:	add	x22, x22, #0x38
   1663c:	cmp	x3, x22
   16640:	b.eq	166c8 <idpriv_temp_restore@@Base+0x7e0>  // b.none
   16644:	mov	x0, #0x0                   	// #0
   16648:	add	x0, x0, #0x1
   1664c:	ldr	x3, [x3, #24]
   16650:	cmp	x3, x22
   16654:	b.ne	16648 <idpriv_temp_restore@@Base+0x760>  // b.any
   16658:	cmp	x23, x0
   1665c:	ccmp	x24, x0, #0x0, ls  // ls = plast
   16660:	csinv	x0, x0, xzr, hi  // hi = pmore
   16664:	ldp	x19, x20, [sp, #16]
   16668:	ldp	x21, x22, [sp, #32]
   1666c:	ldp	x23, x24, [sp, #48]
   16670:	ldp	x25, x26, [sp, #64]
   16674:	ldp	x29, x30, [sp], #80
   16678:	ret
   1667c:	ldr	x0, [x19, #32]
   16680:	cmp	x0, x26
   16684:	cset	w0, eq  // eq = none
   16688:	cbnz	w0, 166e0 <idpriv_temp_restore@@Base+0x7f8>
   1668c:	ldr	x19, [x19, #16]
   16690:	add	x23, x23, #0x1
   16694:	cmp	x24, x23
   16698:	b.eq	166c0 <idpriv_temp_restore@@Base+0x7d8>  // b.none
   1669c:	ldr	x0, [x19, #8]
   166a0:	cmp	x0, x21
   166a4:	b.ne	1668c <idpriv_temp_restore@@Base+0x7a4>  // b.any
   166a8:	cbz	x25, 1667c <idpriv_temp_restore@@Base+0x794>
   166ac:	ldr	x1, [x19, #32]
   166b0:	mov	x0, x26
   166b4:	blr	x25
   166b8:	and	w0, w0, #0xff
   166bc:	b	16688 <idpriv_temp_restore@@Base+0x7a0>
   166c0:	mov	x0, #0xffffffffffffffff    	// #-1
   166c4:	b	16664 <idpriv_temp_restore@@Base+0x77c>
   166c8:	mov	x0, #0x0                   	// #0
   166cc:	b	16658 <idpriv_temp_restore@@Base+0x770>
   166d0:	mov	x0, #0xffffffffffffffff    	// #-1
   166d4:	b	16664 <idpriv_temp_restore@@Base+0x77c>
   166d8:	mov	x0, #0xffffffffffffffff    	// #-1
   166dc:	b	16664 <idpriv_temp_restore@@Base+0x77c>
   166e0:	mov	x0, x23
   166e4:	b	16664 <idpriv_temp_restore@@Base+0x77c>
   166e8:	ldr	x19, [x22, #72]
   166ec:	mov	x0, x23
   166f0:	cbz	x23, 16700 <idpriv_temp_restore@@Base+0x818>
   166f4:	ldr	x19, [x19, #16]
   166f8:	subs	x0, x0, #0x1
   166fc:	b.ne	166f4 <idpriv_temp_restore@@Base+0x80c>  // b.any
   16700:	cmp	x23, x24
   16704:	b.cc	1669c <idpriv_temp_restore@@Base+0x7b4>  // b.lo, b.ul, b.last
   16708:	mov	x0, #0xffffffffffffffff    	// #-1
   1670c:	b	16664 <idpriv_temp_restore@@Base+0x77c>
   16710:	stp	x29, x30, [sp, #-80]!
   16714:	mov	x29, sp
   16718:	stp	x19, x20, [sp, #16]
   1671c:	stp	x21, x22, [sp, #32]
   16720:	stp	x23, x24, [sp, #48]
   16724:	stp	x25, x26, [sp, #64]
   16728:	ldr	x20, [x0, #96]
   1672c:	cmp	x1, x2
   16730:	ccmp	x20, x2, #0x0, ls  // ls = plast
   16734:	b.cc	167e8 <idpriv_temp_restore@@Base+0x900>  // b.lo, b.ul, b.last
   16738:	mov	x25, x0
   1673c:	mov	x22, x1
   16740:	mov	x26, x2
   16744:	mov	x24, x3
   16748:	ldr	x1, [x0, #16]
   1674c:	mov	x21, x3
   16750:	cbz	x1, 16760 <idpriv_temp_restore@@Base+0x878>
   16754:	mov	x0, x3
   16758:	blr	x1
   1675c:	mov	x21, x0
   16760:	ldr	x1, [x25, #48]
   16764:	udiv	x0, x21, x1
   16768:	msub	x0, x0, x1, x21
   1676c:	ldr	x23, [x25, #8]
   16770:	ldrb	w1, [x25, #32]
   16774:	cbnz	w1, 16828 <idpriv_temp_restore@@Base+0x940>
   16778:	ldr	x1, [x25, #40]
   1677c:	ldr	x19, [x1, x0, lsl #3]
   16780:	cbnz	x19, 16804 <idpriv_temp_restore@@Base+0x91c>
   16784:	cbz	x22, 167b0 <idpriv_temp_restore@@Base+0x8c8>
   16788:	ldr	x0, [x25, #72]
   1678c:	cmp	x19, x0
   16790:	b.eq	1692c <idpriv_temp_restore@@Base+0xa44>  // b.none
   16794:	subs	x22, x22, #0x1
   16798:	b.eq	167b0 <idpriv_temp_restore@@Base+0x8c8>  // b.none
   1679c:	ldr	x0, [x0, #16]
   167a0:	cmp	x19, x0
   167a4:	b.eq	16934 <idpriv_temp_restore@@Base+0xa4c>  // b.none
   167a8:	subs	x22, x22, #0x1
   167ac:	b.ne	1679c <idpriv_temp_restore@@Base+0x8b4>  // b.any
   167b0:	cmp	x20, x26
   167b4:	b.ls	168c8 <idpriv_temp_restore@@Base+0x9e0>  // b.plast
   167b8:	mvn	x26, x26
   167bc:	ldr	x0, [x25, #80]
   167c0:	cmp	x19, x0
   167c4:	b.eq	1693c <idpriv_temp_restore@@Base+0xa54>  // b.none
   167c8:	adds	x20, x26, x20
   167cc:	b.eq	168c8 <idpriv_temp_restore@@Base+0x9e0>  // b.none
   167d0:	ldr	x0, [x0, #24]
   167d4:	cmp	x19, x0
   167d8:	b.eq	16944 <idpriv_temp_restore@@Base+0xa5c>  // b.none
   167dc:	subs	x20, x20, #0x1
   167e0:	b.ne	167d0 <idpriv_temp_restore@@Base+0x8e8>  // b.any
   167e4:	b	168c8 <idpriv_temp_restore@@Base+0x9e0>
   167e8:	bl	a900 <abort@plt>
   167ec:	ldr	x0, [x19, #32]
   167f0:	cmp	x0, x24
   167f4:	cset	w0, eq  // eq = none
   167f8:	cbnz	w0, 16784 <idpriv_temp_restore@@Base+0x89c>
   167fc:	ldr	x19, [x19]
   16800:	cbz	x19, 16784 <idpriv_temp_restore@@Base+0x89c>
   16804:	ldr	x4, [x19, #8]
   16808:	cmp	x4, x21
   1680c:	b.ne	167fc <idpriv_temp_restore@@Base+0x914>  // b.any
   16810:	cbz	x23, 167ec <idpriv_temp_restore@@Base+0x904>
   16814:	ldr	x1, [x19, #32]
   16818:	mov	x0, x24
   1681c:	blr	x23
   16820:	and	w0, w0, #0xff
   16824:	b	167f8 <idpriv_temp_restore@@Base+0x910>
   16828:	ldr	x1, [x25, #40]
   1682c:	ldr	x20, [x1, x0, lsl #3]
   16830:	cbz	x20, 16964 <idpriv_temp_restore@@Base+0xa7c>
   16834:	mov	x19, #0x0                   	// #0
   16838:	b	16854 <idpriv_temp_restore@@Base+0x96c>
   1683c:	ldr	x0, [x20, #32]
   16840:	cmp	x0, x24
   16844:	cset	w0, eq  // eq = none
   16848:	b	16874 <idpriv_temp_restore@@Base+0x98c>
   1684c:	ldr	x20, [x20]
   16850:	cbz	x20, 16968 <idpriv_temp_restore@@Base+0xa80>
   16854:	ldr	x4, [x20, #8]
   16858:	cmp	x4, x21
   1685c:	b.ne	1684c <idpriv_temp_restore@@Base+0x964>  // b.any
   16860:	cbz	x23, 1683c <idpriv_temp_restore@@Base+0x954>
   16864:	ldr	x1, [x20, #32]
   16868:	mov	x0, x24
   1686c:	blr	x23
   16870:	and	w0, w0, #0xff
   16874:	cbz	w0, 1684c <idpriv_temp_restore@@Base+0x964>
   16878:	cbnz	x19, 169a8 <idpriv_temp_restore@@Base+0xac0>
   1687c:	mov	x19, x20
   16880:	b	1684c <idpriv_temp_restore@@Base+0x964>
   16884:	ldr	x0, [x19, #32]
   16888:	cmp	x0, x24
   1688c:	cset	w0, eq  // eq = none
   16890:	cbnz	w0, 168c8 <idpriv_temp_restore@@Base+0x9e0>
   16894:	ldr	x19, [x19, #16]
   16898:	subs	x26, x26, #0x1
   1689c:	b.eq	168c4 <idpriv_temp_restore@@Base+0x9dc>  // b.none
   168a0:	ldr	x0, [x19, #8]
   168a4:	cmp	x0, x21
   168a8:	b.ne	16894 <idpriv_temp_restore@@Base+0x9ac>  // b.any
   168ac:	cbz	x23, 16884 <idpriv_temp_restore@@Base+0x99c>
   168b0:	ldr	x1, [x19, #32]
   168b4:	mov	x0, x24
   168b8:	blr	x23
   168bc:	and	w0, w0, #0xff
   168c0:	b	16890 <idpriv_temp_restore@@Base+0x9a8>
   168c4:	mov	x19, #0x0                   	// #0
   168c8:	mov	x0, x19
   168cc:	ldp	x19, x20, [sp, #16]
   168d0:	ldp	x21, x22, [sp, #32]
   168d4:	ldp	x23, x24, [sp, #48]
   168d8:	ldp	x25, x26, [sp, #64]
   168dc:	ldp	x29, x30, [sp], #80
   168e0:	ret
   168e4:	ldr	x0, [x25, #72]
   168e8:	add	x1, x25, #0x38
   168ec:	cmp	x0, x1
   168f0:	b.eq	1696c <idpriv_temp_restore@@Base+0xa84>  // b.none
   168f4:	cmp	x0, x19
   168f8:	b.eq	1694c <idpriv_temp_restore@@Base+0xa64>  // b.none
   168fc:	subs	x22, x22, #0x1
   16900:	b.eq	1696c <idpriv_temp_restore@@Base+0xa84>  // b.none
   16904:	ldr	x0, [x0, #16]
   16908:	cmp	x0, x1
   1690c:	b.eq	1696c <idpriv_temp_restore@@Base+0xa84>  // b.none
   16910:	cmp	x0, x19
   16914:	b.eq	16954 <idpriv_temp_restore@@Base+0xa6c>  // b.none
   16918:	subs	x22, x22, #0x1
   1691c:	b.ne	16904 <idpriv_temp_restore@@Base+0xa1c>  // b.any
   16920:	b	1696c <idpriv_temp_restore@@Base+0xa84>
   16924:	mov	x19, #0x0                   	// #0
   16928:	b	168c8 <idpriv_temp_restore@@Base+0x9e0>
   1692c:	mov	x19, #0x0                   	// #0
   16930:	b	168c8 <idpriv_temp_restore@@Base+0x9e0>
   16934:	mov	x19, #0x0                   	// #0
   16938:	b	168c8 <idpriv_temp_restore@@Base+0x9e0>
   1693c:	mov	x19, #0x0                   	// #0
   16940:	b	168c8 <idpriv_temp_restore@@Base+0x9e0>
   16944:	mov	x19, #0x0                   	// #0
   16948:	b	168c8 <idpriv_temp_restore@@Base+0x9e0>
   1694c:	mov	x19, #0x0                   	// #0
   16950:	b	168c8 <idpriv_temp_restore@@Base+0x9e0>
   16954:	mov	x19, #0x0                   	// #0
   16958:	b	168c8 <idpriv_temp_restore@@Base+0x9e0>
   1695c:	mov	x19, #0x0                   	// #0
   16960:	b	168c8 <idpriv_temp_restore@@Base+0x9e0>
   16964:	mov	x19, x20
   16968:	cbnz	x22, 168e4 <idpriv_temp_restore@@Base+0x9fc>
   1696c:	ldr	x0, [x25, #96]
   16970:	cmp	x0, x26
   16974:	b.ls	168c8 <idpriv_temp_restore@@Base+0x9e0>  // b.plast
   16978:	mvn	x20, x26
   1697c:	ldr	x1, [x25, #80]
   16980:	cmp	x1, x19
   16984:	b.eq	1695c <idpriv_temp_restore@@Base+0xa74>  // b.none
   16988:	adds	x0, x0, x20
   1698c:	b.eq	168c8 <idpriv_temp_restore@@Base+0x9e0>  // b.none
   16990:	ldr	x1, [x1, #24]
   16994:	cmp	x1, x19
   16998:	b.eq	16924 <idpriv_temp_restore@@Base+0xa3c>  // b.none
   1699c:	subs	x0, x0, #0x1
   169a0:	b.ne	16990 <idpriv_temp_restore@@Base+0xaa8>  // b.any
   169a4:	b	168c8 <idpriv_temp_restore@@Base+0x9e0>
   169a8:	sub	x26, x26, x22
   169ac:	ldr	x19, [x25, #72]
   169b0:	cbz	x22, 169c0 <idpriv_temp_restore@@Base+0xad8>
   169b4:	ldr	x19, [x19, #16]
   169b8:	subs	x22, x22, #0x1
   169bc:	b.ne	169b4 <idpriv_temp_restore@@Base+0xacc>  // b.any
   169c0:	cbnz	x26, 168a0 <idpriv_temp_restore@@Base+0x9b8>
   169c4:	mov	x19, #0x0                   	// #0
   169c8:	b	168c8 <idpriv_temp_restore@@Base+0x9e0>
   169cc:	stp	x29, x30, [sp, #-48]!
   169d0:	mov	x29, sp
   169d4:	stp	x19, x20, [sp, #16]
   169d8:	stp	x21, x22, [sp, #32]
   169dc:	mov	x20, x0
   169e0:	ldr	x0, [x0, #96]
   169e4:	cmp	x0, x1
   169e8:	b.ls	16a58 <idpriv_temp_restore@@Base+0xb70>  // b.plast
   169ec:	mov	x21, x2
   169f0:	sub	x2, x0, #0x1
   169f4:	cmp	x1, x2, lsr #1
   169f8:	b.hi	16a5c <idpriv_temp_restore@@Base+0xb74>  // b.pmore
   169fc:	ldr	x19, [x20, #72]
   16a00:	cbz	x1, 16a10 <idpriv_temp_restore@@Base+0xb28>
   16a04:	ldr	x19, [x19, #16]
   16a08:	subs	x1, x1, #0x1
   16a0c:	b.ne	16a04 <idpriv_temp_restore@@Base+0xb1c>  // b.any
   16a10:	ldr	x0, [x19, #32]
   16a14:	cmp	x0, x21
   16a18:	b.eq	16a44 <idpriv_temp_restore@@Base+0xb5c>  // b.none
   16a1c:	ldr	x1, [x20, #16]
   16a20:	mov	x22, x21
   16a24:	cbz	x1, 16a34 <idpriv_temp_restore@@Base+0xb4c>
   16a28:	mov	x0, x21
   16a2c:	blr	x1
   16a30:	mov	x22, x0
   16a34:	ldr	x0, [x19, #8]
   16a38:	cmp	x0, x22
   16a3c:	b.ne	16a7c <idpriv_temp_restore@@Base+0xb94>  // b.any
   16a40:	str	x21, [x19, #32]
   16a44:	mov	x0, x19
   16a48:	ldp	x19, x20, [sp, #16]
   16a4c:	ldp	x21, x22, [sp, #32]
   16a50:	ldp	x29, x30, [sp], #48
   16a54:	ret
   16a58:	bl	a900 <abort@plt>
   16a5c:	mvn	x1, x1
   16a60:	ldr	x19, [x20, #80]
   16a64:	adds	x1, x1, x0
   16a68:	b.eq	16a10 <idpriv_temp_restore@@Base+0xb28>  // b.none
   16a6c:	ldr	x19, [x19, #24]
   16a70:	subs	x1, x1, #0x1
   16a74:	b.ne	16a6c <idpriv_temp_restore@@Base+0xb84>  // b.any
   16a78:	b	16a10 <idpriv_temp_restore@@Base+0xb28>
   16a7c:	mov	x1, x19
   16a80:	mov	x0, x20
   16a84:	bl	16430 <idpriv_temp_restore@@Base+0x548>
   16a88:	str	x21, [x19, #32]
   16a8c:	str	x22, [x19, #8]
   16a90:	mov	x1, x19
   16a94:	mov	x0, x20
   16a98:	bl	15ff0 <idpriv_temp_restore@@Base+0x108>
   16a9c:	b	16a44 <idpriv_temp_restore@@Base+0xb5c>
   16aa0:	ldr	x2, [x0, #96]
   16aa4:	cmp	x2, x1
   16aa8:	b.ls	16ad4 <idpriv_temp_restore@@Base+0xbec>  // b.plast
   16aac:	sub	x3, x2, #0x1
   16ab0:	cmp	x1, x3, lsr #1
   16ab4:	b.hi	16ae0 <idpriv_temp_restore@@Base+0xbf8>  // b.pmore
   16ab8:	ldr	x0, [x0, #72]
   16abc:	cbz	x1, 16acc <idpriv_temp_restore@@Base+0xbe4>
   16ac0:	ldr	x0, [x0, #16]
   16ac4:	subs	x1, x1, #0x1
   16ac8:	b.ne	16ac0 <idpriv_temp_restore@@Base+0xbd8>  // b.any
   16acc:	ldr	x0, [x0, #32]
   16ad0:	ret
   16ad4:	stp	x29, x30, [sp, #-16]!
   16ad8:	mov	x29, sp
   16adc:	bl	a900 <abort@plt>
   16ae0:	mvn	x1, x1
   16ae4:	ldr	x0, [x0, #80]
   16ae8:	adds	x1, x1, x2
   16aec:	b.eq	16acc <idpriv_temp_restore@@Base+0xbe4>  // b.none
   16af0:	ldr	x0, [x0, #24]
   16af4:	subs	x1, x1, #0x1
   16af8:	b.ne	16af0 <idpriv_temp_restore@@Base+0xc08>  // b.any
   16afc:	b	16acc <idpriv_temp_restore@@Base+0xbe4>
   16b00:	stp	x29, x30, [sp, #-64]!
   16b04:	mov	x29, sp
   16b08:	stp	x19, x20, [sp, #16]
   16b0c:	stp	x21, x22, [sp, #32]
   16b10:	str	x23, [sp, #48]
   16b14:	mov	x23, x0
   16b18:	ldr	x21, [x0, #24]
   16b1c:	ldr	x19, [x0, #72]
   16b20:	add	x22, x0, #0x38
   16b24:	cmp	x19, x22
   16b28:	b.ne	16b60 <idpriv_temp_restore@@Base+0xc78>  // b.any
   16b2c:	ldr	x0, [x23, #40]
   16b30:	bl	aa50 <free@plt>
   16b34:	mov	x0, x23
   16b38:	bl	aa50 <free@plt>
   16b3c:	ldp	x19, x20, [sp, #16]
   16b40:	ldp	x21, x22, [sp, #32]
   16b44:	ldr	x23, [sp, #48]
   16b48:	ldp	x29, x30, [sp], #64
   16b4c:	ret
   16b50:	mov	x0, x20
   16b54:	bl	aa50 <free@plt>
   16b58:	cmp	x19, x22
   16b5c:	b.eq	16b2c <idpriv_temp_restore@@Base+0xc44>  // b.none
   16b60:	mov	x20, x19
   16b64:	ldr	x19, [x19, #16]
   16b68:	cbz	x21, 16b50 <idpriv_temp_restore@@Base+0xc68>
   16b6c:	ldr	x0, [x20, #32]
   16b70:	blr	x21
   16b74:	b	16b50 <idpriv_temp_restore@@Base+0xc68>
   16b78:	stp	x29, x30, [sp, #-32]!
   16b7c:	mov	x29, sp
   16b80:	stp	x19, x20, [sp, #16]
   16b84:	mov	x19, x0
   16b88:	ldr	x0, [x0, #96]
   16b8c:	cmp	x0, x1
   16b90:	b.ls	16c04 <idpriv_temp_restore@@Base+0xd1c>  // b.plast
   16b94:	sub	x2, x0, #0x1
   16b98:	cmp	x1, x2, lsr #1
   16b9c:	b.hi	16c08 <idpriv_temp_restore@@Base+0xd20>  // b.pmore
   16ba0:	add	x2, x19, #0x38
   16ba4:	cbz	x1, 16bb4 <idpriv_temp_restore@@Base+0xccc>
   16ba8:	ldr	x2, [x2, #16]
   16bac:	subs	x1, x1, #0x1
   16bb0:	b.ne	16ba8 <idpriv_temp_restore@@Base+0xcc0>  // b.any
   16bb4:	ldr	x20, [x2, #16]
   16bb8:	ldr	x0, [x20, #16]
   16bbc:	str	x0, [x2, #16]
   16bc0:	str	x2, [x0, #24]
   16bc4:	mov	x1, x20
   16bc8:	mov	x0, x19
   16bcc:	bl	16430 <idpriv_temp_restore@@Base+0x548>
   16bd0:	ldr	x0, [x19, #96]
   16bd4:	sub	x0, x0, #0x1
   16bd8:	str	x0, [x19, #96]
   16bdc:	ldr	x1, [x19, #24]
   16be0:	cbz	x1, 16bec <idpriv_temp_restore@@Base+0xd04>
   16be4:	ldr	x0, [x20, #32]
   16be8:	blr	x1
   16bec:	mov	x0, x20
   16bf0:	bl	aa50 <free@plt>
   16bf4:	mov	w0, #0x1                   	// #1
   16bf8:	ldp	x19, x20, [sp, #16]
   16bfc:	ldp	x29, x30, [sp], #32
   16c00:	ret
   16c04:	bl	a900 <abort@plt>
   16c08:	mvn	x1, x1
   16c0c:	add	x2, x19, #0x38
   16c10:	adds	x1, x1, x0
   16c14:	b.eq	16c24 <idpriv_temp_restore@@Base+0xd3c>  // b.none
   16c18:	ldr	x2, [x2, #24]
   16c1c:	subs	x1, x1, #0x1
   16c20:	b.ne	16c18 <idpriv_temp_restore@@Base+0xd30>  // b.any
   16c24:	ldr	x20, [x2, #24]
   16c28:	ldr	x0, [x20, #24]
   16c2c:	str	x0, [x2, #24]
   16c30:	str	x2, [x0, #16]
   16c34:	b	16bc4 <idpriv_temp_restore@@Base+0xcdc>
   16c38:	stp	x29, x30, [sp, #-32]!
   16c3c:	mov	x29, sp
   16c40:	stp	x19, x20, [sp, #16]
   16c44:	mov	x20, x0
   16c48:	mov	x19, x1
   16c4c:	bl	16430 <idpriv_temp_restore@@Base+0x548>
   16c50:	ldr	x1, [x19, #24]
   16c54:	ldr	x0, [x19, #16]
   16c58:	str	x0, [x1, #16]
   16c5c:	str	x1, [x0, #24]
   16c60:	ldr	x0, [x20, #96]
   16c64:	sub	x0, x0, #0x1
   16c68:	str	x0, [x20, #96]
   16c6c:	ldr	x1, [x20, #24]
   16c70:	cbz	x1, 16c7c <idpriv_temp_restore@@Base+0xd94>
   16c74:	ldr	x0, [x19, #32]
   16c78:	blr	x1
   16c7c:	mov	x0, x19
   16c80:	bl	aa50 <free@plt>
   16c84:	mov	w0, #0x1                   	// #1
   16c88:	ldp	x19, x20, [sp, #16]
   16c8c:	ldp	x29, x30, [sp], #32
   16c90:	ret
   16c94:	stp	x29, x30, [sp, #-64]!
   16c98:	mov	x29, sp
   16c9c:	stp	x19, x20, [sp, #16]
   16ca0:	stp	x21, x22, [sp, #32]
   16ca4:	str	x23, [sp, #48]
   16ca8:	mov	x23, x0
   16cac:	mov	x21, x1
   16cb0:	mov	x20, x2
   16cb4:	ldr	x19, [x0, #72]
   16cb8:	add	x22, x0, #0x38
   16cbc:	cmp	x19, x22
   16cc0:	b.eq	16d04 <idpriv_temp_restore@@Base+0xe1c>  // b.none
   16cc4:	mov	x1, x20
   16cc8:	ldr	x0, [x19, #32]
   16ccc:	blr	x21
   16cd0:	cmp	w0, #0x0
   16cd4:	b.gt	16d0c <idpriv_temp_restore@@Base+0xe24>
   16cd8:	cbz	w0, 16cf0 <idpriv_temp_restore@@Base+0xe08>
   16cdc:	ldr	x19, [x19, #16]
   16ce0:	cmp	x19, x22
   16ce4:	b.ne	16cc4 <idpriv_temp_restore@@Base+0xddc>  // b.any
   16ce8:	mov	w0, #0x0                   	// #0
   16cec:	b	16d10 <idpriv_temp_restore@@Base+0xe28>
   16cf0:	mov	x1, x19
   16cf4:	mov	x0, x23
   16cf8:	bl	16c38 <idpriv_temp_restore@@Base+0xd50>
   16cfc:	and	w0, w0, #0xff
   16d00:	b	16d10 <idpriv_temp_restore@@Base+0xe28>
   16d04:	mov	w0, #0x0                   	// #0
   16d08:	b	16d10 <idpriv_temp_restore@@Base+0xe28>
   16d0c:	mov	w0, #0x0                   	// #0
   16d10:	ldp	x19, x20, [sp, #16]
   16d14:	ldp	x21, x22, [sp, #32]
   16d18:	ldr	x23, [sp, #48]
   16d1c:	ldp	x29, x30, [sp], #64
   16d20:	ret
   16d24:	stp	x29, x30, [sp, #-32]!
   16d28:	mov	x29, sp
   16d2c:	str	x19, [sp, #16]
   16d30:	mov	x19, x0
   16d34:	mov	x3, x1
   16d38:	ldr	x2, [x0, #96]
   16d3c:	mov	x1, #0x0                   	// #0
   16d40:	bl	16710 <idpriv_temp_restore@@Base+0x828>
   16d44:	cbz	x0, 16d64 <idpriv_temp_restore@@Base+0xe7c>
   16d48:	mov	x1, x0
   16d4c:	mov	x0, x19
   16d50:	bl	16c38 <idpriv_temp_restore@@Base+0xd50>
   16d54:	and	w0, w0, #0xff
   16d58:	ldr	x19, [sp, #16]
   16d5c:	ldp	x29, x30, [sp], #32
   16d60:	ret
   16d64:	mov	w0, #0x0                   	// #0
   16d68:	b	16d58 <idpriv_temp_restore@@Base+0xe70>
   16d6c:	stp	x29, x30, [sp, #-48]!
   16d70:	mov	x29, sp
   16d74:	stp	x19, x20, [sp, #16]
   16d78:	mov	x19, x0
   16d7c:	ldr	x0, [x0, #96]
   16d80:	add	x1, x0, x0, lsr #1
   16d84:	cmp	x0, x1
   16d88:	csinv	x1, x1, xzr, ls  // ls = plast
   16d8c:	ldr	x20, [x19, #48]
   16d90:	cmp	x20, x1
   16d94:	b.cc	16da4 <idpriv_temp_restore@@Base+0xebc>  // b.lo, b.ul, b.last
   16d98:	ldp	x19, x20, [sp, #16]
   16d9c:	ldp	x29, x30, [sp], #48
   16da0:	ret
   16da4:	stp	x21, x22, [sp, #32]
   16da8:	mov	x0, #0x0                   	// #0
   16dac:	adrp	x2, 2e000 <vasnprintf@@Base+0x3378>
   16db0:	add	x2, x2, #0x28
   16db4:	ldr	x21, [x2, x0, lsl #3]
   16db8:	cmp	x1, x21
   16dbc:	b.ls	16dd4 <idpriv_temp_restore@@Base+0xeec>  // b.plast
   16dc0:	add	x0, x0, #0x1
   16dc4:	cmp	x0, #0xe8
   16dc8:	b.ne	16db4 <idpriv_temp_restore@@Base+0xecc>  // b.any
   16dcc:	ldp	x21, x22, [sp, #32]
   16dd0:	b	16d98 <idpriv_temp_restore@@Base+0xeb0>
   16dd4:	cmp	x20, x21
   16dd8:	b.cc	16de4 <idpriv_temp_restore@@Base+0xefc>  // b.lo, b.ul, b.last
   16ddc:	ldp	x21, x22, [sp, #32]
   16de0:	b	16d98 <idpriv_temp_restore@@Base+0xeb0>
   16de4:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   16de8:	cmp	x21, x0
   16dec:	b.hi	16e58 <idpriv_temp_restore@@Base+0xf70>  // b.pmore
   16df0:	ldr	x22, [x19, #40]
   16df4:	mov	x1, #0x8                   	// #8
   16df8:	mov	x0, x21
   16dfc:	bl	a770 <calloc@plt>
   16e00:	cbz	x0, 16e60 <idpriv_temp_restore@@Base+0xf78>
   16e04:	cbnz	x20, 16e48 <idpriv_temp_restore@@Base+0xf60>
   16e08:	str	x0, [x19, #40]
   16e0c:	str	x21, [x19, #48]
   16e10:	mov	x0, x22
   16e14:	bl	aa50 <free@plt>
   16e18:	ldp	x21, x22, [sp, #32]
   16e1c:	b	16d98 <idpriv_temp_restore@@Base+0xeb0>
   16e20:	mov	x3, x1
   16e24:	ldr	x1, [x1]
   16e28:	ldr	x4, [x3, #8]
   16e2c:	udiv	x2, x4, x21
   16e30:	msub	x2, x2, x21, x4
   16e34:	ldr	x4, [x0, x2, lsl #3]
   16e38:	str	x4, [x3]
   16e3c:	str	x3, [x0, x2, lsl #3]
   16e40:	cbnz	x1, 16e20 <idpriv_temp_restore@@Base+0xf38>
   16e44:	cbz	x20, 16e08 <idpriv_temp_restore@@Base+0xf20>
   16e48:	sub	x20, x20, #0x1
   16e4c:	ldr	x1, [x22, x20, lsl #3]
   16e50:	cbnz	x1, 16e20 <idpriv_temp_restore@@Base+0xf38>
   16e54:	b	16e44 <idpriv_temp_restore@@Base+0xf5c>
   16e58:	ldp	x21, x22, [sp, #32]
   16e5c:	b	16d98 <idpriv_temp_restore@@Base+0xeb0>
   16e60:	ldp	x21, x22, [sp, #32]
   16e64:	b	16d98 <idpriv_temp_restore@@Base+0xeb0>
   16e68:	stp	x29, x30, [sp, #-64]!
   16e6c:	mov	x29, sp
   16e70:	stp	x19, x20, [sp, #16]
   16e74:	stp	x21, x22, [sp, #32]
   16e78:	str	x23, [sp, #48]
   16e7c:	ldr	x20, [x0, #96]
   16e80:	cmp	x20, x1
   16e84:	b.cc	16f24 <idpriv_temp_restore@@Base+0x103c>  // b.lo, b.ul, b.last
   16e88:	mov	x22, x0
   16e8c:	mov	x19, x1
   16e90:	mov	x23, x2
   16e94:	mov	x0, #0x28                  	// #40
   16e98:	bl	a5f0 <malloc@plt>
   16e9c:	mov	x21, x0
   16ea0:	cbz	x0, 16f0c <idpriv_temp_restore@@Base+0x1024>
   16ea4:	str	x23, [x0, #32]
   16ea8:	ldr	x1, [x22, #16]
   16eac:	mov	x0, x23
   16eb0:	cbz	x1, 16eb8 <idpriv_temp_restore@@Base+0xfd0>
   16eb4:	blr	x1
   16eb8:	str	x0, [x21, #8]
   16ebc:	mov	x1, x21
   16ec0:	mov	x0, x22
   16ec4:	bl	15ff0 <idpriv_temp_restore@@Base+0x108>
   16ec8:	cmp	x19, x20, lsr #1
   16ecc:	b.hi	16f28 <idpriv_temp_restore@@Base+0x1040>  // b.pmore
   16ed0:	add	x1, x22, #0x38
   16ed4:	cbz	x19, 16ee4 <idpriv_temp_restore@@Base+0xffc>
   16ed8:	ldr	x1, [x1, #16]
   16edc:	subs	x19, x19, #0x1
   16ee0:	b.ne	16ed8 <idpriv_temp_restore@@Base+0xff0>  // b.any
   16ee4:	str	x1, [x21, #24]
   16ee8:	ldr	x0, [x1, #16]
   16eec:	str	x0, [x21, #16]
   16ef0:	str	x21, [x0, #24]
   16ef4:	str	x21, [x1, #16]
   16ef8:	ldr	x0, [x22, #96]
   16efc:	add	x0, x0, #0x1
   16f00:	str	x0, [x22, #96]
   16f04:	mov	x0, x22
   16f08:	bl	16d6c <idpriv_temp_restore@@Base+0xe84>
   16f0c:	mov	x0, x21
   16f10:	ldp	x19, x20, [sp, #16]
   16f14:	ldp	x21, x22, [sp, #32]
   16f18:	ldr	x23, [sp, #48]
   16f1c:	ldp	x29, x30, [sp], #64
   16f20:	ret
   16f24:	bl	a900 <abort@plt>
   16f28:	add	x1, x22, #0x38
   16f2c:	subs	x19, x20, x19
   16f30:	b.eq	16f40 <idpriv_temp_restore@@Base+0x1058>  // b.none
   16f34:	ldr	x1, [x1, #24]
   16f38:	subs	x19, x19, #0x1
   16f3c:	b.ne	16f34 <idpriv_temp_restore@@Base+0x104c>  // b.any
   16f40:	str	x1, [x21, #16]
   16f44:	ldr	x0, [x1, #24]
   16f48:	str	x0, [x21, #24]
   16f4c:	str	x21, [x0, #16]
   16f50:	str	x21, [x1, #24]
   16f54:	b	16ef8 <idpriv_temp_restore@@Base+0x1010>
   16f58:	stp	x29, x30, [sp, #-48]!
   16f5c:	mov	x29, sp
   16f60:	stp	x19, x20, [sp, #16]
   16f64:	stp	x21, x22, [sp, #32]
   16f68:	mov	x20, x0
   16f6c:	mov	x21, x1
   16f70:	mov	x22, x2
   16f74:	mov	x0, #0x28                  	// #40
   16f78:	bl	a5f0 <malloc@plt>
   16f7c:	mov	x19, x0
   16f80:	cbz	x0, 16fd0 <idpriv_temp_restore@@Base+0x10e8>
   16f84:	str	x22, [x0, #32]
   16f88:	ldr	x1, [x20, #16]
   16f8c:	mov	x0, x22
   16f90:	cbz	x1, 16f98 <idpriv_temp_restore@@Base+0x10b0>
   16f94:	blr	x1
   16f98:	str	x0, [x19, #8]
   16f9c:	mov	x1, x19
   16fa0:	mov	x0, x20
   16fa4:	bl	15ff0 <idpriv_temp_restore@@Base+0x108>
   16fa8:	str	x21, [x19, #24]
   16fac:	ldr	x0, [x21, #16]
   16fb0:	str	x0, [x19, #16]
   16fb4:	str	x19, [x0, #24]
   16fb8:	str	x19, [x21, #16]
   16fbc:	ldr	x0, [x20, #96]
   16fc0:	add	x0, x0, #0x1
   16fc4:	str	x0, [x20, #96]
   16fc8:	mov	x0, x20
   16fcc:	bl	16d6c <idpriv_temp_restore@@Base+0xe84>
   16fd0:	mov	x0, x19
   16fd4:	ldp	x19, x20, [sp, #16]
   16fd8:	ldp	x21, x22, [sp, #32]
   16fdc:	ldp	x29, x30, [sp], #48
   16fe0:	ret
   16fe4:	stp	x29, x30, [sp, #-48]!
   16fe8:	mov	x29, sp
   16fec:	stp	x19, x20, [sp, #16]
   16ff0:	stp	x21, x22, [sp, #32]
   16ff4:	mov	x20, x0
   16ff8:	mov	x21, x1
   16ffc:	mov	x22, x2
   17000:	mov	x0, #0x28                  	// #40
   17004:	bl	a5f0 <malloc@plt>
   17008:	mov	x19, x0
   1700c:	cbz	x0, 1705c <idpriv_temp_restore@@Base+0x1174>
   17010:	str	x22, [x0, #32]
   17014:	ldr	x1, [x20, #16]
   17018:	mov	x0, x22
   1701c:	cbz	x1, 17024 <idpriv_temp_restore@@Base+0x113c>
   17020:	blr	x1
   17024:	str	x0, [x19, #8]
   17028:	mov	x1, x19
   1702c:	mov	x0, x20
   17030:	bl	15ff0 <idpriv_temp_restore@@Base+0x108>
   17034:	str	x21, [x19, #16]
   17038:	ldr	x0, [x21, #24]
   1703c:	str	x0, [x19, #24]
   17040:	str	x19, [x0, #16]
   17044:	str	x19, [x21, #24]
   17048:	ldr	x0, [x20, #96]
   1704c:	add	x0, x0, #0x1
   17050:	str	x0, [x20, #96]
   17054:	mov	x0, x20
   17058:	bl	16d6c <idpriv_temp_restore@@Base+0xe84>
   1705c:	mov	x0, x19
   17060:	ldp	x19, x20, [sp, #16]
   17064:	ldp	x21, x22, [sp, #32]
   17068:	ldp	x29, x30, [sp], #48
   1706c:	ret
   17070:	stp	x29, x30, [sp, #-48]!
   17074:	mov	x29, sp
   17078:	stp	x19, x20, [sp, #16]
   1707c:	str	x21, [sp, #32]
   17080:	mov	x20, x0
   17084:	mov	x21, x1
   17088:	mov	x0, #0x28                  	// #40
   1708c:	bl	a5f0 <malloc@plt>
   17090:	mov	x19, x0
   17094:	cbz	x0, 170e8 <idpriv_temp_restore@@Base+0x1200>
   17098:	str	x21, [x0, #32]
   1709c:	ldr	x1, [x20, #16]
   170a0:	mov	x0, x21
   170a4:	cbz	x1, 170ac <idpriv_temp_restore@@Base+0x11c4>
   170a8:	blr	x1
   170ac:	str	x0, [x19, #8]
   170b0:	mov	x1, x19
   170b4:	mov	x0, x20
   170b8:	bl	15ff0 <idpriv_temp_restore@@Base+0x108>
   170bc:	add	x0, x20, #0x38
   170c0:	str	x0, [x19, #16]
   170c4:	ldr	x0, [x20, #80]
   170c8:	str	x0, [x19, #24]
   170cc:	str	x19, [x0, #16]
   170d0:	str	x19, [x20, #80]
   170d4:	ldr	x0, [x20, #96]
   170d8:	add	x0, x0, #0x1
   170dc:	str	x0, [x20, #96]
   170e0:	mov	x0, x20
   170e4:	bl	16d6c <idpriv_temp_restore@@Base+0xe84>
   170e8:	mov	x0, x19
   170ec:	ldp	x19, x20, [sp, #16]
   170f0:	ldr	x21, [sp, #32]
   170f4:	ldp	x29, x30, [sp], #48
   170f8:	ret
   170fc:	stp	x29, x30, [sp, #-64]!
   17100:	mov	x29, sp
   17104:	stp	x19, x20, [sp, #16]
   17108:	stp	x21, x22, [sp, #32]
   1710c:	str	x23, [sp, #48]
   17110:	mov	x23, x0
   17114:	mov	x21, x1
   17118:	mov	x20, x2
   1711c:	ldr	x19, [x0, #72]
   17120:	add	x22, x0, #0x38
   17124:	cmp	x19, x22
   17128:	b.eq	17148 <idpriv_temp_restore@@Base+0x1260>  // b.none
   1712c:	mov	x1, x20
   17130:	ldr	x0, [x19, #32]
   17134:	blr	x21
   17138:	tbz	w0, #31, 17168 <idpriv_temp_restore@@Base+0x1280>
   1713c:	ldr	x19, [x19, #16]
   17140:	cmp	x19, x22
   17144:	b.ne	1712c <idpriv_temp_restore@@Base+0x1244>  // b.any
   17148:	mov	x1, x20
   1714c:	mov	x0, x23
   17150:	bl	17070 <idpriv_temp_restore@@Base+0x1188>
   17154:	ldp	x19, x20, [sp, #16]
   17158:	ldp	x21, x22, [sp, #32]
   1715c:	ldr	x23, [sp, #48]
   17160:	ldp	x29, x30, [sp], #64
   17164:	ret
   17168:	mov	x2, x20
   1716c:	mov	x1, x19
   17170:	mov	x0, x23
   17174:	bl	16fe4 <idpriv_temp_restore@@Base+0x10fc>
   17178:	b	17154 <idpriv_temp_restore@@Base+0x126c>
   1717c:	stp	x29, x30, [sp, #-48]!
   17180:	mov	x29, sp
   17184:	stp	x19, x20, [sp, #16]
   17188:	str	x21, [sp, #32]
   1718c:	mov	x20, x0
   17190:	mov	x21, x1
   17194:	mov	x0, #0x28                  	// #40
   17198:	bl	a5f0 <malloc@plt>
   1719c:	mov	x19, x0
   171a0:	cbz	x0, 171f4 <idpriv_temp_restore@@Base+0x130c>
   171a4:	str	x21, [x0, #32]
   171a8:	ldr	x1, [x20, #16]
   171ac:	mov	x0, x21
   171b0:	cbz	x1, 171b8 <idpriv_temp_restore@@Base+0x12d0>
   171b4:	blr	x1
   171b8:	str	x0, [x19, #8]
   171bc:	mov	x1, x19
   171c0:	mov	x0, x20
   171c4:	bl	15ff0 <idpriv_temp_restore@@Base+0x108>
   171c8:	add	x0, x20, #0x38
   171cc:	str	x0, [x19, #24]
   171d0:	ldr	x0, [x20, #72]
   171d4:	str	x0, [x19, #16]
   171d8:	str	x19, [x0, #24]
   171dc:	str	x19, [x20, #72]
   171e0:	ldr	x0, [x20, #96]
   171e4:	add	x0, x0, #0x1
   171e8:	str	x0, [x20, #96]
   171ec:	mov	x0, x20
   171f0:	bl	16d6c <idpriv_temp_restore@@Base+0xe84>
   171f4:	mov	x0, x19
   171f8:	ldp	x19, x20, [sp, #16]
   171fc:	ldr	x21, [sp, #32]
   17200:	ldp	x29, x30, [sp], #48
   17204:	ret
   17208:	stp	x29, x30, [sp, #-64]!
   1720c:	mov	x29, sp
   17210:	stp	x19, x20, [sp, #16]
   17214:	stp	x21, x22, [sp, #32]
   17218:	stp	x23, x24, [sp, #48]
   1721c:	mov	x23, x0
   17220:	mov	x22, x1
   17224:	mov	x21, x2
   17228:	mov	x20, x3
   1722c:	and	w24, w4, #0xff
   17230:	mov	x0, #0x68                  	// #104
   17234:	bl	a5f0 <malloc@plt>
   17238:	mov	x19, x0
   1723c:	cbz	x0, 17280 <idpriv_temp_restore@@Base+0x1398>
   17240:	str	x23, [x0]
   17244:	str	x22, [x0, #8]
   17248:	str	x21, [x0, #16]
   1724c:	str	x20, [x0, #24]
   17250:	strb	w24, [x0, #32]
   17254:	mov	x0, #0xb                   	// #11
   17258:	str	x0, [x19, #48]
   1725c:	mov	x1, #0x8                   	// #8
   17260:	bl	a770 <calloc@plt>
   17264:	mov	x20, x0
   17268:	str	x0, [x19, #40]
   1726c:	cbz	x0, 17298 <idpriv_temp_restore@@Base+0x13b0>
   17270:	add	x0, x19, #0x38
   17274:	str	x0, [x19, #72]
   17278:	str	x0, [x19, #80]
   1727c:	str	xzr, [x19, #96]
   17280:	mov	x0, x19
   17284:	ldp	x19, x20, [sp, #16]
   17288:	ldp	x21, x22, [sp, #32]
   1728c:	ldp	x23, x24, [sp, #48]
   17290:	ldp	x29, x30, [sp], #64
   17294:	ret
   17298:	mov	x0, x19
   1729c:	bl	aa50 <free@plt>
   172a0:	mov	x19, x20
   172a4:	b	17280 <idpriv_temp_restore@@Base+0x1398>
   172a8:	stp	x29, x30, [sp, #-80]!
   172ac:	mov	x29, sp
   172b0:	stp	x19, x20, [sp, #16]
   172b4:	stp	x21, x22, [sp, #32]
   172b8:	stp	x23, x24, [sp, #48]
   172bc:	stp	x25, x26, [sp, #64]
   172c0:	mov	x25, x0
   172c4:	mov	x22, x1
   172c8:	mov	x20, x2
   172cc:	mov	x19, x3
   172d0:	and	w26, w4, #0xff
   172d4:	mov	x23, x5
   172d8:	mov	x24, x6
   172dc:	mov	x0, #0x68                  	// #104
   172e0:	bl	a5f0 <malloc@plt>
   172e4:	mov	x21, x0
   172e8:	cbz	x0, 17418 <idpriv_temp_restore@@Base+0x1530>
   172ec:	str	x25, [x0]
   172f0:	str	x22, [x0, #8]
   172f4:	str	x20, [x0, #16]
   172f8:	str	x19, [x0, #24]
   172fc:	strb	w26, [x0, #32]
   17300:	add	x0, x23, x23, lsr #1
   17304:	mov	x3, #0xffffffffffffffff    	// #-1
   17308:	cmp	x23, x0
   1730c:	b.hi	1731c <idpriv_temp_restore@@Base+0x1434>  // b.pmore
   17310:	cmp	x0, #0xa
   17314:	mov	x3, #0xa                   	// #10
   17318:	csel	x3, x0, x3, cs  // cs = hs, nlast
   1731c:	mov	x1, #0x0                   	// #0
   17320:	adrp	x2, 2e000 <vasnprintf@@Base+0x3378>
   17324:	add	x2, x2, #0x28
   17328:	ldr	x0, [x2, x1, lsl #3]
   1732c:	cmp	x3, x0
   17330:	b.ls	17350 <idpriv_temp_restore@@Base+0x1468>  // b.plast
   17334:	add	x1, x1, #0x1
   17338:	cmp	x1, #0xe8
   1733c:	b.ne	17328 <idpriv_temp_restore@@Base+0x1440>  // b.any
   17340:	mov	x0, x21
   17344:	bl	aa50 <free@plt>
   17348:	mov	x21, #0x0                   	// #0
   1734c:	b	17418 <idpriv_temp_restore@@Base+0x1530>
   17350:	str	x0, [x21, #48]
   17354:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   17358:	cmp	x0, x1
   1735c:	b.hi	17340 <idpriv_temp_restore@@Base+0x1458>  // b.pmore
   17360:	mov	x1, #0x8                   	// #8
   17364:	bl	a770 <calloc@plt>
   17368:	str	x0, [x21, #40]
   1736c:	cbz	x0, 17340 <idpriv_temp_restore@@Base+0x1458>
   17370:	str	x23, [x21, #96]
   17374:	add	x26, x21, #0x38
   17378:	cbz	x23, 1740c <idpriv_temp_restore@@Base+0x1524>
   1737c:	mov	x19, x26
   17380:	mov	x20, #0x0                   	// #0
   17384:	mov	x25, #0x28                  	// #40
   17388:	b	173d8 <idpriv_temp_restore@@Base+0x14f0>
   1738c:	cmp	x26, x22
   17390:	b.eq	173a8 <idpriv_temp_restore@@Base+0x14c0>  // b.none
   17394:	mov	x0, x22
   17398:	ldr	x22, [x22, #24]
   1739c:	bl	aa50 <free@plt>
   173a0:	cmp	x26, x22
   173a4:	b.ne	17394 <idpriv_temp_restore@@Base+0x14ac>  // b.any
   173a8:	ldr	x0, [x21, #40]
   173ac:	bl	aa50 <free@plt>
   173b0:	b	17340 <idpriv_temp_restore@@Base+0x1458>
   173b4:	str	x1, [x19, #8]
   173b8:	mov	x1, x19
   173bc:	mov	x0, x21
   173c0:	bl	15ff0 <idpriv_temp_restore@@Base+0x108>
   173c4:	str	x22, [x19, #24]
   173c8:	str	x19, [x22, #16]
   173cc:	add	x20, x20, #0x1
   173d0:	cmp	x20, x23
   173d4:	b.eq	17410 <idpriv_temp_restore@@Base+0x1528>  // b.none
   173d8:	mov	x22, x19
   173dc:	mov	x0, x25
   173e0:	bl	a5f0 <malloc@plt>
   173e4:	mov	x19, x0
   173e8:	cbz	x0, 1738c <idpriv_temp_restore@@Base+0x14a4>
   173ec:	ldr	x0, [x24, x20, lsl #3]
   173f0:	str	x0, [x19, #32]
   173f4:	ldr	x2, [x21, #16]
   173f8:	mov	x1, x0
   173fc:	cbz	x2, 173b4 <idpriv_temp_restore@@Base+0x14cc>
   17400:	blr	x2
   17404:	mov	x1, x0
   17408:	b	173b4 <idpriv_temp_restore@@Base+0x14cc>
   1740c:	mov	x19, x26
   17410:	str	x26, [x19, #16]
   17414:	str	x19, [x21, #80]
   17418:	mov	x0, x21
   1741c:	ldp	x19, x20, [sp, #16]
   17420:	ldp	x21, x22, [sp, #32]
   17424:	ldp	x23, x24, [sp, #48]
   17428:	ldp	x25, x26, [sp, #64]
   1742c:	ldp	x29, x30, [sp], #80
   17430:	ret

0000000000017434 <gl_list_nx_create_empty@@Base>:
   17434:	stp	x29, x30, [sp, #-16]!
   17438:	mov	x29, sp
   1743c:	ldr	x5, [x0]
   17440:	blr	x5
   17444:	ldp	x29, x30, [sp], #16
   17448:	ret

000000000001744c <gl_list_nx_create@@Base>:
   1744c:	stp	x29, x30, [sp, #-16]!
   17450:	mov	x29, sp
   17454:	ldr	x7, [x0, #8]
   17458:	blr	x7
   1745c:	ldp	x29, x30, [sp], #16
   17460:	ret

0000000000017464 <gl_list_size@@Base>:
   17464:	stp	x29, x30, [sp, #-16]!
   17468:	mov	x29, sp
   1746c:	ldr	x1, [x0]
   17470:	ldr	x1, [x1, #16]
   17474:	blr	x1
   17478:	ldp	x29, x30, [sp], #16
   1747c:	ret

0000000000017480 <gl_list_node_value@@Base>:
   17480:	stp	x29, x30, [sp, #-16]!
   17484:	mov	x29, sp
   17488:	ldr	x2, [x0]
   1748c:	ldr	x2, [x2, #24]
   17490:	blr	x2
   17494:	ldp	x29, x30, [sp], #16
   17498:	ret

000000000001749c <gl_list_node_nx_set_value@@Base>:
   1749c:	stp	x29, x30, [sp, #-16]!
   174a0:	mov	x29, sp
   174a4:	ldr	x3, [x0]
   174a8:	ldr	x3, [x3, #32]
   174ac:	blr	x3
   174b0:	ldp	x29, x30, [sp], #16
   174b4:	ret

00000000000174b8 <gl_list_next_node@@Base>:
   174b8:	stp	x29, x30, [sp, #-16]!
   174bc:	mov	x29, sp
   174c0:	ldr	x2, [x0]
   174c4:	ldr	x2, [x2, #40]
   174c8:	blr	x2
   174cc:	ldp	x29, x30, [sp], #16
   174d0:	ret

00000000000174d4 <gl_list_previous_node@@Base>:
   174d4:	stp	x29, x30, [sp, #-16]!
   174d8:	mov	x29, sp
   174dc:	ldr	x2, [x0]
   174e0:	ldr	x2, [x2, #48]
   174e4:	blr	x2
   174e8:	ldp	x29, x30, [sp], #16
   174ec:	ret

00000000000174f0 <gl_list_get_at@@Base>:
   174f0:	stp	x29, x30, [sp, #-16]!
   174f4:	mov	x29, sp
   174f8:	ldr	x2, [x0]
   174fc:	ldr	x2, [x2, #56]
   17500:	blr	x2
   17504:	ldp	x29, x30, [sp], #16
   17508:	ret

000000000001750c <gl_list_nx_set_at@@Base>:
   1750c:	stp	x29, x30, [sp, #-16]!
   17510:	mov	x29, sp
   17514:	ldr	x3, [x0]
   17518:	ldr	x3, [x3, #64]
   1751c:	blr	x3
   17520:	ldp	x29, x30, [sp], #16
   17524:	ret

0000000000017528 <gl_list_search@@Base>:
   17528:	stp	x29, x30, [sp, #-32]!
   1752c:	mov	x29, sp
   17530:	stp	x19, x20, [sp, #16]
   17534:	mov	x19, x0
   17538:	mov	x20, x1
   1753c:	ldr	x1, [x0]
   17540:	ldr	x1, [x1, #16]
   17544:	blr	x1
   17548:	ldr	x1, [x19]
   1754c:	ldr	x4, [x1, #72]
   17550:	mov	x3, x20
   17554:	mov	x2, x0
   17558:	mov	x1, #0x0                   	// #0
   1755c:	mov	x0, x19
   17560:	blr	x4
   17564:	ldp	x19, x20, [sp, #16]
   17568:	ldp	x29, x30, [sp], #32
   1756c:	ret

0000000000017570 <gl_list_search_from@@Base>:
   17570:	stp	x29, x30, [sp, #-48]!
   17574:	mov	x29, sp
   17578:	stp	x19, x20, [sp, #16]
   1757c:	str	x21, [sp, #32]
   17580:	mov	x19, x0
   17584:	mov	x20, x1
   17588:	mov	x21, x2
   1758c:	ldr	x1, [x0]
   17590:	ldr	x1, [x1, #16]
   17594:	blr	x1
   17598:	ldr	x1, [x19]
   1759c:	ldr	x4, [x1, #72]
   175a0:	mov	x3, x21
   175a4:	mov	x2, x0
   175a8:	mov	x1, x20
   175ac:	mov	x0, x19
   175b0:	blr	x4
   175b4:	ldp	x19, x20, [sp, #16]
   175b8:	ldr	x21, [sp, #32]
   175bc:	ldp	x29, x30, [sp], #48
   175c0:	ret

00000000000175c4 <gl_list_search_from_to@@Base>:
   175c4:	stp	x29, x30, [sp, #-16]!
   175c8:	mov	x29, sp
   175cc:	ldr	x4, [x0]
   175d0:	ldr	x4, [x4, #72]
   175d4:	blr	x4
   175d8:	ldp	x29, x30, [sp], #16
   175dc:	ret

00000000000175e0 <gl_list_indexof@@Base>:
   175e0:	stp	x29, x30, [sp, #-32]!
   175e4:	mov	x29, sp
   175e8:	stp	x19, x20, [sp, #16]
   175ec:	mov	x19, x0
   175f0:	mov	x20, x1
   175f4:	ldr	x1, [x0]
   175f8:	ldr	x1, [x1, #16]
   175fc:	blr	x1
   17600:	ldr	x1, [x19]
   17604:	ldr	x4, [x1, #80]
   17608:	mov	x3, x20
   1760c:	mov	x2, x0
   17610:	mov	x1, #0x0                   	// #0
   17614:	mov	x0, x19
   17618:	blr	x4
   1761c:	ldp	x19, x20, [sp, #16]
   17620:	ldp	x29, x30, [sp], #32
   17624:	ret

0000000000017628 <gl_list_indexof_from@@Base>:
   17628:	stp	x29, x30, [sp, #-48]!
   1762c:	mov	x29, sp
   17630:	stp	x19, x20, [sp, #16]
   17634:	str	x21, [sp, #32]
   17638:	mov	x19, x0
   1763c:	mov	x20, x1
   17640:	mov	x21, x2
   17644:	ldr	x1, [x0]
   17648:	ldr	x1, [x1, #16]
   1764c:	blr	x1
   17650:	ldr	x1, [x19]
   17654:	ldr	x4, [x1, #80]
   17658:	mov	x3, x21
   1765c:	mov	x2, x0
   17660:	mov	x1, x20
   17664:	mov	x0, x19
   17668:	blr	x4
   1766c:	ldp	x19, x20, [sp, #16]
   17670:	ldr	x21, [sp, #32]
   17674:	ldp	x29, x30, [sp], #48
   17678:	ret

000000000001767c <gl_list_indexof_from_to@@Base>:
   1767c:	stp	x29, x30, [sp, #-16]!
   17680:	mov	x29, sp
   17684:	ldr	x4, [x0]
   17688:	ldr	x4, [x4, #80]
   1768c:	blr	x4
   17690:	ldp	x29, x30, [sp], #16
   17694:	ret

0000000000017698 <gl_list_nx_add_first@@Base>:
   17698:	stp	x29, x30, [sp, #-16]!
   1769c:	mov	x29, sp
   176a0:	ldr	x2, [x0]
   176a4:	ldr	x2, [x2, #88]
   176a8:	blr	x2
   176ac:	ldp	x29, x30, [sp], #16
   176b0:	ret

00000000000176b4 <gl_list_nx_add_last@@Base>:
   176b4:	stp	x29, x30, [sp, #-16]!
   176b8:	mov	x29, sp
   176bc:	ldr	x2, [x0]
   176c0:	ldr	x2, [x2, #96]
   176c4:	blr	x2
   176c8:	ldp	x29, x30, [sp], #16
   176cc:	ret

00000000000176d0 <gl_list_nx_add_before@@Base>:
   176d0:	stp	x29, x30, [sp, #-16]!
   176d4:	mov	x29, sp
   176d8:	ldr	x3, [x0]
   176dc:	ldr	x3, [x3, #104]
   176e0:	blr	x3
   176e4:	ldp	x29, x30, [sp], #16
   176e8:	ret

00000000000176ec <gl_list_nx_add_after@@Base>:
   176ec:	stp	x29, x30, [sp, #-16]!
   176f0:	mov	x29, sp
   176f4:	ldr	x3, [x0]
   176f8:	ldr	x3, [x3, #112]
   176fc:	blr	x3
   17700:	ldp	x29, x30, [sp], #16
   17704:	ret

0000000000017708 <gl_list_nx_add_at@@Base>:
   17708:	stp	x29, x30, [sp, #-16]!
   1770c:	mov	x29, sp
   17710:	ldr	x3, [x0]
   17714:	ldr	x3, [x3, #120]
   17718:	blr	x3
   1771c:	ldp	x29, x30, [sp], #16
   17720:	ret

0000000000017724 <gl_list_remove_node@@Base>:
   17724:	stp	x29, x30, [sp, #-16]!
   17728:	mov	x29, sp
   1772c:	ldr	x2, [x0]
   17730:	ldr	x2, [x2, #128]
   17734:	blr	x2
   17738:	ldp	x29, x30, [sp], #16
   1773c:	ret

0000000000017740 <gl_list_remove_at@@Base>:
   17740:	stp	x29, x30, [sp, #-16]!
   17744:	mov	x29, sp
   17748:	ldr	x2, [x0]
   1774c:	ldr	x2, [x2, #136]
   17750:	blr	x2
   17754:	ldp	x29, x30, [sp], #16
   17758:	ret

000000000001775c <gl_list_remove@@Base>:
   1775c:	stp	x29, x30, [sp, #-16]!
   17760:	mov	x29, sp
   17764:	ldr	x2, [x0]
   17768:	ldr	x2, [x2, #144]
   1776c:	blr	x2
   17770:	ldp	x29, x30, [sp], #16
   17774:	ret

0000000000017778 <gl_list_free@@Base>:
   17778:	stp	x29, x30, [sp, #-16]!
   1777c:	mov	x29, sp
   17780:	ldr	x1, [x0]
   17784:	ldr	x1, [x1, #152]
   17788:	blr	x1
   1778c:	ldp	x29, x30, [sp], #16
   17790:	ret

0000000000017794 <gl_list_iterator@@Base>:
   17794:	stp	x29, x30, [sp, #-16]!
   17798:	mov	x29, sp
   1779c:	ldr	x1, [x0]
   177a0:	ldr	x1, [x1, #160]
   177a4:	blr	x1
   177a8:	ldp	x29, x30, [sp], #16
   177ac:	ret

00000000000177b0 <gl_list_iterator_from_to@@Base>:
   177b0:	stp	x29, x30, [sp, #-16]!
   177b4:	mov	x29, sp
   177b8:	ldr	x3, [x0]
   177bc:	ldr	x3, [x3, #168]
   177c0:	blr	x3
   177c4:	ldp	x29, x30, [sp], #16
   177c8:	ret

00000000000177cc <gl_list_iterator_next@@Base>:
   177cc:	stp	x29, x30, [sp, #-16]!
   177d0:	mov	x29, sp
   177d4:	ldr	x3, [x0]
   177d8:	ldr	x3, [x3, #176]
   177dc:	blr	x3
   177e0:	ldp	x29, x30, [sp], #16
   177e4:	ret

00000000000177e8 <gl_list_iterator_free@@Base>:
   177e8:	stp	x29, x30, [sp, #-16]!
   177ec:	mov	x29, sp
   177f0:	ldr	x1, [x0]
   177f4:	ldr	x1, [x1, #184]
   177f8:	blr	x1
   177fc:	ldp	x29, x30, [sp], #16
   17800:	ret

0000000000017804 <gl_sortedlist_search@@Base>:
   17804:	stp	x29, x30, [sp, #-16]!
   17808:	mov	x29, sp
   1780c:	ldr	x3, [x0]
   17810:	ldr	x3, [x3, #192]
   17814:	blr	x3
   17818:	ldp	x29, x30, [sp], #16
   1781c:	ret

0000000000017820 <gl_sortedlist_search_from_to@@Base>:
   17820:	stp	x29, x30, [sp, #-16]!
   17824:	mov	x29, sp
   17828:	ldr	x5, [x0]
   1782c:	ldr	x5, [x5, #200]
   17830:	blr	x5
   17834:	ldp	x29, x30, [sp], #16
   17838:	ret

000000000001783c <gl_sortedlist_indexof@@Base>:
   1783c:	stp	x29, x30, [sp, #-16]!
   17840:	mov	x29, sp
   17844:	ldr	x3, [x0]
   17848:	ldr	x3, [x3, #208]
   1784c:	blr	x3
   17850:	ldp	x29, x30, [sp], #16
   17854:	ret

0000000000017858 <gl_sortedlist_indexof_from_to@@Base>:
   17858:	stp	x29, x30, [sp, #-16]!
   1785c:	mov	x29, sp
   17860:	ldr	x5, [x0]
   17864:	ldr	x5, [x5, #216]
   17868:	blr	x5
   1786c:	ldp	x29, x30, [sp], #16
   17870:	ret

0000000000017874 <gl_sortedlist_nx_add@@Base>:
   17874:	stp	x29, x30, [sp, #-16]!
   17878:	mov	x29, sp
   1787c:	ldr	x3, [x0]
   17880:	ldr	x3, [x3, #224]
   17884:	blr	x3
   17888:	ldp	x29, x30, [sp], #16
   1788c:	ret

0000000000017890 <gl_sortedlist_remove@@Base>:
   17890:	stp	x29, x30, [sp, #-16]!
   17894:	mov	x29, sp
   17898:	ldr	x3, [x0]
   1789c:	ldr	x3, [x3, #232]
   178a0:	blr	x3
   178a4:	ldp	x29, x30, [sp], #16
   178a8:	ret

00000000000178ac <locale_charset@@Base>:
   178ac:	stp	x29, x30, [sp, #-16]!
   178b0:	mov	x29, sp
   178b4:	mov	w0, #0xe                   	// #14
   178b8:	bl	a5c0 <nl_langinfo@plt>
   178bc:	cbz	x0, 178dc <locale_charset@@Base+0x30>
   178c0:	ldrb	w2, [x0]
   178c4:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   178c8:	add	x1, x1, #0x660
   178cc:	cmp	w2, #0x0
   178d0:	csel	x0, x1, x0, eq  // eq = none
   178d4:	ldp	x29, x30, [sp], #16
   178d8:	ret
   178dc:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   178e0:	add	x0, x0, #0x660
   178e4:	b	178d4 <locale_charset@@Base+0x28>

00000000000178e8 <glthread_rwlock_init_for_glibc@@Base>:
   178e8:	stp	x29, x30, [sp, #-48]!
   178ec:	mov	x29, sp
   178f0:	stp	x19, x20, [sp, #16]
   178f4:	mov	x20, x0
   178f8:	add	x0, sp, #0x28
   178fc:	bl	a2e0 <pthread_rwlockattr_init@plt>
   17900:	mov	w19, w0
   17904:	cbz	w0, 17918 <glthread_rwlock_init_for_glibc@@Base+0x30>
   17908:	mov	w0, w19
   1790c:	ldp	x19, x20, [sp, #16]
   17910:	ldp	x29, x30, [sp], #48
   17914:	ret
   17918:	mov	w1, #0x2                   	// #2
   1791c:	add	x0, sp, #0x28
   17920:	bl	a430 <pthread_rwlockattr_setkind_np@plt>
   17924:	mov	w19, w0
   17928:	cbz	w0, 17938 <glthread_rwlock_init_for_glibc@@Base+0x50>
   1792c:	add	x0, sp, #0x28
   17930:	bl	adb0 <pthread_rwlockattr_destroy@plt>
   17934:	b	17908 <glthread_rwlock_init_for_glibc@@Base+0x20>
   17938:	add	x1, sp, #0x28
   1793c:	mov	x0, x20
   17940:	bl	a410 <pthread_rwlock_init@plt>
   17944:	mov	w19, w0
   17948:	b	1792c <glthread_rwlock_init_for_glibc@@Base+0x44>

000000000001794c <glthread_recursive_lock_init_multithreaded@@Base>:
   1794c:	stp	x29, x30, [sp, #-48]!
   17950:	mov	x29, sp
   17954:	stp	x19, x20, [sp, #16]
   17958:	mov	x20, x0
   1795c:	add	x0, sp, #0x28
   17960:	bl	ad00 <pthread_mutexattr_init@plt>
   17964:	mov	w19, w0
   17968:	cbz	w0, 1797c <glthread_recursive_lock_init_multithreaded@@Base+0x30>
   1796c:	mov	w0, w19
   17970:	ldp	x19, x20, [sp, #16]
   17974:	ldp	x29, x30, [sp], #48
   17978:	ret
   1797c:	mov	w1, #0x1                   	// #1
   17980:	add	x0, sp, #0x28
   17984:	bl	a370 <pthread_mutexattr_settype@plt>
   17988:	mov	w19, w0
   1798c:	cbnz	w0, 179b4 <glthread_recursive_lock_init_multithreaded@@Base+0x68>
   17990:	add	x1, sp, #0x28
   17994:	mov	x0, x20
   17998:	bl	a840 <pthread_mutex_init@plt>
   1799c:	mov	w19, w0
   179a0:	cbnz	w0, 179c0 <glthread_recursive_lock_init_multithreaded@@Base+0x74>
   179a4:	add	x0, sp, #0x28
   179a8:	bl	ad50 <pthread_mutexattr_destroy@plt>
   179ac:	mov	w19, w0
   179b0:	b	1796c <glthread_recursive_lock_init_multithreaded@@Base+0x20>
   179b4:	add	x0, sp, #0x28
   179b8:	bl	ad50 <pthread_mutexattr_destroy@plt>
   179bc:	b	1796c <glthread_recursive_lock_init_multithreaded@@Base+0x20>
   179c0:	add	x0, sp, #0x28
   179c4:	bl	ad50 <pthread_mutexattr_destroy@plt>
   179c8:	b	1796c <glthread_recursive_lock_init_multithreaded@@Base+0x20>

00000000000179cc <glthread_once_singlethreaded@@Base>:
   179cc:	ldrb	w1, [x0]
   179d0:	cbnz	w1, 179e4 <glthread_once_singlethreaded@@Base+0x18>
   179d4:	mov	w1, #0xffffffff            	// #-1
   179d8:	strb	w1, [x0]
   179dc:	mov	w0, #0x1                   	// #1
   179e0:	ret
   179e4:	mov	w0, #0x0                   	// #0
   179e8:	b	179e0 <glthread_once_singlethreaded@@Base+0x14>

00000000000179ec <mmalloca@@Base>:
   179ec:	adds	x0, x0, #0x20
   179f0:	b.cs	17a24 <mmalloca@@Base+0x38>  // b.hs, b.nlast
   179f4:	stp	x29, x30, [sp, #-16]!
   179f8:	mov	x29, sp
   179fc:	bl	a5f0 <malloc@plt>
   17a00:	mov	x2, x0
   17a04:	cbz	x0, 17a1c <mmalloca@@Base+0x30>
   17a08:	add	x1, x0, #0x10
   17a0c:	and	x1, x1, #0xffffffffffffffe0
   17a10:	add	x0, x1, #0x10
   17a14:	sub	x2, x0, x2
   17a18:	sturb	w2, [x0, #-1]
   17a1c:	ldp	x29, x30, [sp], #16
   17a20:	ret
   17a24:	mov	x0, #0x0                   	// #0
   17a28:	ret

0000000000017a2c <freea@@Base>:
   17a2c:	stp	x29, x30, [sp, #-16]!
   17a30:	mov	x29, sp
   17a34:	tst	x0, #0xf
   17a38:	b.ne	17a48 <freea@@Base+0x1c>  // b.any
   17a3c:	tbnz	w0, #4, 17a4c <freea@@Base+0x20>
   17a40:	ldp	x29, x30, [sp], #16
   17a44:	ret
   17a48:	bl	a900 <abort@plt>
   17a4c:	ldurb	w1, [x0, #-1]
   17a50:	sub	x0, x0, x1
   17a54:	bl	aa50 <free@plt>
   17a58:	b	17a40 <freea@@Base+0x14>

0000000000017a5c <gl_map_nx_create_empty@@Base>:
   17a5c:	stp	x29, x30, [sp, #-16]!
   17a60:	mov	x29, sp
   17a64:	ldr	x5, [x0]
   17a68:	blr	x5
   17a6c:	ldp	x29, x30, [sp], #16
   17a70:	ret

0000000000017a74 <gl_map_size@@Base>:
   17a74:	stp	x29, x30, [sp, #-16]!
   17a78:	mov	x29, sp
   17a7c:	ldr	x1, [x0]
   17a80:	ldr	x1, [x1, #8]
   17a84:	blr	x1
   17a88:	ldp	x29, x30, [sp], #16
   17a8c:	ret

0000000000017a90 <gl_map_search@@Base>:
   17a90:	stp	x29, x30, [sp, #-16]!
   17a94:	mov	x29, sp
   17a98:	ldr	x3, [x0]
   17a9c:	ldr	x3, [x3, #16]
   17aa0:	blr	x3
   17aa4:	ldp	x29, x30, [sp], #16
   17aa8:	ret

0000000000017aac <gl_map_nx_getput@@Base>:
   17aac:	stp	x29, x30, [sp, #-16]!
   17ab0:	mov	x29, sp
   17ab4:	ldr	x4, [x0]
   17ab8:	ldr	x4, [x4, #24]
   17abc:	blr	x4
   17ac0:	ldp	x29, x30, [sp], #16
   17ac4:	ret

0000000000017ac8 <gl_map_getremove@@Base>:
   17ac8:	stp	x29, x30, [sp, #-16]!
   17acc:	mov	x29, sp
   17ad0:	ldr	x3, [x0]
   17ad4:	ldr	x3, [x3, #32]
   17ad8:	blr	x3
   17adc:	ldp	x29, x30, [sp], #16
   17ae0:	ret

0000000000017ae4 <gl_map_free@@Base>:
   17ae4:	stp	x29, x30, [sp, #-16]!
   17ae8:	mov	x29, sp
   17aec:	ldr	x1, [x0]
   17af0:	ldr	x1, [x1, #40]
   17af4:	blr	x1
   17af8:	ldp	x29, x30, [sp], #16
   17afc:	ret

0000000000017b00 <gl_map_iterator@@Base>:
   17b00:	stp	x29, x30, [sp, #-16]!
   17b04:	mov	x29, sp
   17b08:	ldr	x1, [x0]
   17b0c:	ldr	x1, [x1, #48]
   17b10:	blr	x1
   17b14:	ldp	x29, x30, [sp], #16
   17b18:	ret

0000000000017b1c <gl_map_iterator_next@@Base>:
   17b1c:	stp	x29, x30, [sp, #-16]!
   17b20:	mov	x29, sp
   17b24:	ldr	x3, [x0]
   17b28:	ldr	x3, [x3, #56]
   17b2c:	blr	x3
   17b30:	ldp	x29, x30, [sp], #16
   17b34:	ret

0000000000017b38 <gl_map_iterator_free@@Base>:
   17b38:	stp	x29, x30, [sp, #-16]!
   17b3c:	mov	x29, sp
   17b40:	ldr	x1, [x0]
   17b44:	ldr	x1, [x1, #64]
   17b48:	blr	x1
   17b4c:	ldp	x29, x30, [sp], #16
   17b50:	ret

0000000000017b54 <gl_map_get@@Base>:
   17b54:	stp	x29, x30, [sp, #-32]!
   17b58:	mov	x29, sp
   17b5c:	str	xzr, [sp, #24]
   17b60:	ldr	x2, [x0]
   17b64:	ldr	x3, [x2, #16]
   17b68:	add	x2, sp, #0x18
   17b6c:	blr	x3
   17b70:	ldr	x0, [sp, #24]
   17b74:	ldp	x29, x30, [sp], #32
   17b78:	ret

0000000000017b7c <gl_map_nx_put@@Base>:
   17b7c:	stp	x29, x30, [sp, #-48]!
   17b80:	mov	x29, sp
   17b84:	stp	x19, x20, [sp, #16]
   17b88:	mov	x20, x0
   17b8c:	ldr	x3, [x0]
   17b90:	ldr	x4, [x3, #24]
   17b94:	add	x3, sp, #0x28
   17b98:	blr	x4
   17b9c:	mov	w19, w0
   17ba0:	cbnz	w0, 17bb4 <gl_map_nx_put@@Base+0x38>
   17ba4:	ldr	x1, [x20, #24]
   17ba8:	cbz	x1, 17bb4 <gl_map_nx_put@@Base+0x38>
   17bac:	ldr	x0, [sp, #40]
   17bb0:	blr	x1
   17bb4:	mov	w0, w19
   17bb8:	ldp	x19, x20, [sp, #16]
   17bbc:	ldp	x29, x30, [sp], #48
   17bc0:	ret

0000000000017bc4 <gl_map_remove@@Base>:
   17bc4:	stp	x29, x30, [sp, #-48]!
   17bc8:	mov	x29, sp
   17bcc:	stp	x19, x20, [sp, #16]
   17bd0:	mov	x19, x0
   17bd4:	ldr	x2, [x0]
   17bd8:	ldr	x3, [x2, #32]
   17bdc:	add	x2, sp, #0x28
   17be0:	blr	x3
   17be4:	mov	w20, w0
   17be8:	tst	w0, #0xff
   17bec:	b.eq	17c00 <gl_map_remove@@Base+0x3c>  // b.none
   17bf0:	ldr	x1, [x19, #24]
   17bf4:	cbz	x1, 17c00 <gl_map_remove@@Base+0x3c>
   17bf8:	ldr	x0, [sp, #40]
   17bfc:	blr	x1
   17c00:	mov	w0, w20
   17c04:	ldp	x19, x20, [sp, #16]
   17c08:	ldp	x29, x30, [sp], #48
   17c0c:	ret

0000000000017c10 <get_nonblocking_flag@@Base>:
   17c10:	stp	x29, x30, [sp, #-16]!
   17c14:	mov	x29, sp
   17c18:	mov	w2, #0x0                   	// #0
   17c1c:	mov	w1, #0x3                   	// #3
   17c20:	bl	ac00 <fcntl@plt>
   17c24:	ubfx	x1, x0, #11, #1
   17c28:	cmp	w0, #0x0
   17c2c:	csinv	w0, w1, wzr, ge  // ge = tcont
   17c30:	ldp	x29, x30, [sp], #16
   17c34:	ret

0000000000017c38 <set_nonblocking_flag@@Base>:
   17c38:	stp	x29, x30, [sp, #-32]!
   17c3c:	mov	x29, sp
   17c40:	stp	x19, x20, [sp, #16]
   17c44:	mov	w19, w0
   17c48:	and	w20, w1, #0xff
   17c4c:	mov	w2, #0x0                   	// #0
   17c50:	mov	w1, #0x3                   	// #3
   17c54:	bl	ac00 <fcntl@plt>
   17c58:	tbnz	w0, #31, 17c98 <set_nonblocking_flag@@Base+0x60>
   17c5c:	mov	w1, w0
   17c60:	ubfx	x2, x1, #11, #1
   17c64:	mov	w0, #0x0                   	// #0
   17c68:	cmp	w2, w20
   17c6c:	b.eq	17c8c <set_nonblocking_flag@@Base+0x54>  // b.none
   17c70:	orr	w2, w1, #0x800
   17c74:	and	w1, w1, #0xfffff7ff
   17c78:	cmp	w20, #0x0
   17c7c:	csel	w2, w1, w2, eq  // eq = none
   17c80:	mov	w1, #0x4                   	// #4
   17c84:	mov	w0, w19
   17c88:	bl	ac00 <fcntl@plt>
   17c8c:	ldp	x19, x20, [sp, #16]
   17c90:	ldp	x29, x30, [sp], #32
   17c94:	ret
   17c98:	mov	w0, #0xffffffff            	// #-1
   17c9c:	b	17c8c <set_nonblocking_flag@@Base+0x54>

0000000000017ca0 <openat_save_fail@@Base>:
   17ca0:	stp	x29, x30, [sp, #-32]!
   17ca4:	mov	x29, sp
   17ca8:	stp	x19, x20, [sp, #16]
   17cac:	mov	w19, w0
   17cb0:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   17cb4:	ldr	x0, [x0, #3976]
   17cb8:	ldr	w20, [x0]
   17cbc:	mov	w2, #0x5                   	// #5
   17cc0:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   17cc4:	add	x1, x1, #0x768
   17cc8:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   17ccc:	add	x0, x0, #0xc08
   17cd0:	bl	ada0 <dcgettext@plt>
   17cd4:	mov	x2, x0
   17cd8:	mov	w1, w19
   17cdc:	mov	w0, w20
   17ce0:	bl	a360 <error@plt>
   17ce4:	bl	a900 <abort@plt>

0000000000017ce8 <openat_restore_fail@@Base>:
   17ce8:	stp	x29, x30, [sp, #-32]!
   17cec:	mov	x29, sp
   17cf0:	stp	x19, x20, [sp, #16]
   17cf4:	mov	w19, w0
   17cf8:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   17cfc:	ldr	x0, [x0, #3976]
   17d00:	ldr	w20, [x0]
   17d04:	mov	w2, #0x5                   	// #5
   17d08:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   17d0c:	add	x1, x1, #0x798
   17d10:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   17d14:	add	x0, x0, #0xc08
   17d18:	bl	ada0 <dcgettext@plt>
   17d1c:	mov	x2, x0
   17d20:	mov	w1, w19
   17d24:	mov	w0, w20
   17d28:	bl	a360 <error@plt>
   17d2c:	bl	a900 <abort@plt>

0000000000017d30 <set_program_name@@Base>:
   17d30:	stp	x29, x30, [sp, #-48]!
   17d34:	mov	x29, sp
   17d38:	cbz	x0, 17db4 <set_program_name@@Base+0x84>
   17d3c:	stp	x19, x20, [sp, #16]
   17d40:	mov	x19, x0
   17d44:	mov	w1, #0x2f                  	// #47
   17d48:	bl	a880 <strrchr@plt>
   17d4c:	mov	x20, x0
   17d50:	cbz	x0, 17dec <set_program_name@@Base+0xbc>
   17d54:	str	x21, [sp, #32]
   17d58:	add	x21, x0, #0x1
   17d5c:	sub	x0, x21, x19
   17d60:	cmp	x0, #0x6
   17d64:	b.le	17de0 <set_program_name@@Base+0xb0>
   17d68:	mov	x2, #0x7                   	// #7
   17d6c:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   17d70:	add	x1, x1, #0x800
   17d74:	sub	x0, x20, #0x6
   17d78:	bl	a6c0 <strncmp@plt>
   17d7c:	cbnz	w0, 17de8 <set_program_name@@Base+0xb8>
   17d80:	mov	x2, #0x3                   	// #3
   17d84:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   17d88:	add	x1, x1, #0x808
   17d8c:	mov	x0, x21
   17d90:	bl	a6c0 <strncmp@plt>
   17d94:	mov	x19, x21
   17d98:	cbnz	w0, 17e10 <set_program_name@@Base+0xe0>
   17d9c:	add	x19, x20, #0x4
   17da0:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   17da4:	ldr	x0, [x0, #4008]
   17da8:	str	x19, [x0]
   17dac:	ldr	x21, [sp, #32]
   17db0:	b	17dec <set_program_name@@Base+0xbc>
   17db4:	stp	x19, x20, [sp, #16]
   17db8:	str	x21, [sp, #32]
   17dbc:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   17dc0:	ldr	x0, [x0, #3816]
   17dc4:	ldr	x3, [x0]
   17dc8:	mov	x2, #0x37                  	// #55
   17dcc:	mov	x1, #0x1                   	// #1
   17dd0:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   17dd4:	add	x0, x0, #0x7c8
   17dd8:	bl	abd0 <fwrite@plt>
   17ddc:	bl	a900 <abort@plt>
   17de0:	ldr	x21, [sp, #32]
   17de4:	b	17dec <set_program_name@@Base+0xbc>
   17de8:	ldr	x21, [sp, #32]
   17dec:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   17df0:	ldr	x0, [x0, #3992]
   17df4:	str	x19, [x0]
   17df8:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   17dfc:	ldr	x0, [x0, #3768]
   17e00:	str	x19, [x0]
   17e04:	ldp	x19, x20, [sp, #16]
   17e08:	ldp	x29, x30, [sp], #48
   17e0c:	ret
   17e10:	ldr	x21, [sp, #32]
   17e14:	b	17dec <set_program_name@@Base+0xbc>
   17e18:	mov	x2, x0
   17e1c:	mov	x0, x1
   17e20:	ldr	x1, [x2]
   17e24:	ldr	x3, [x0]
   17e28:	ldr	x5, [x0, #8]
   17e2c:	str	x3, [x2, #8]
   17e30:	str	x2, [x0]
   17e34:	ldr	x4, [x2, #16]
   17e38:	str	x4, [x0, #16]
   17e3c:	str	x0, [x2, #16]
   17e40:	cbz	x3, 17e84 <set_program_name@@Base+0x154>
   17e44:	str	x2, [x3, #16]
   17e48:	cbz	x1, 17e7c <set_program_name@@Base+0x14c>
   17e4c:	ldr	x1, [x1, #32]
   17e50:	add	x4, x1, #0x1
   17e54:	ldr	x1, [x3, #32]
   17e58:	add	x1, x1, x4
   17e5c:	str	x1, [x2, #32]
   17e60:	mov	x2, #0x0                   	// #0
   17e64:	cbz	x5, 17e6c <set_program_name@@Base+0x13c>
   17e68:	ldr	x2, [x5, #32]
   17e6c:	add	x1, x1, #0x1
   17e70:	add	x1, x1, x2
   17e74:	str	x1, [x0, #32]
   17e78:	ret
   17e7c:	mov	x4, #0x1                   	// #1
   17e80:	b	17e54 <set_program_name@@Base+0x124>
   17e84:	mov	x4, #0x1                   	// #1
   17e88:	cbz	x1, 17e58 <set_program_name@@Base+0x128>
   17e8c:	ldr	x1, [x1, #32]
   17e90:	add	x4, x1, #0x1
   17e94:	mov	x1, #0x0                   	// #0
   17e98:	b	17e58 <set_program_name@@Base+0x128>
   17e9c:	ldr	x4, [x0]
   17ea0:	ldr	x3, [x0, #8]
   17ea4:	ldr	x5, [x1, #8]
   17ea8:	str	x3, [x1]
   17eac:	str	x1, [x0, #8]
   17eb0:	ldr	x2, [x1, #16]
   17eb4:	str	x2, [x0, #16]
   17eb8:	str	x0, [x1, #16]
   17ebc:	mov	x2, #0x1                   	// #1
   17ec0:	cbz	x3, 17ed0 <set_program_name@@Base+0x1a0>
   17ec4:	str	x1, [x3, #16]
   17ec8:	ldr	x2, [x3, #32]
   17ecc:	add	x2, x2, #0x1
   17ed0:	mov	x3, #0x0                   	// #0
   17ed4:	cbz	x5, 17edc <set_program_name@@Base+0x1ac>
   17ed8:	ldr	x3, [x5, #32]
   17edc:	add	x2, x2, x3
   17ee0:	str	x2, [x1, #32]
   17ee4:	mov	x1, #0x1                   	// #1
   17ee8:	cbz	x4, 17ef4 <set_program_name@@Base+0x1c4>
   17eec:	ldr	x1, [x4, #32]
   17ef0:	add	x1, x1, #0x1
   17ef4:	add	x2, x2, x1
   17ef8:	str	x2, [x0, #32]
   17efc:	ret
   17f00:	ldr	x0, [x0, #40]
   17f04:	cbz	x0, 17f10 <set_program_name@@Base+0x1e0>
   17f08:	ldr	x0, [x0, #32]
   17f0c:	ret
   17f10:	mov	x0, #0x0                   	// #0
   17f14:	b	17f0c <set_program_name@@Base+0x1dc>
   17f18:	ldr	x0, [x1, #40]
   17f1c:	ret
   17f20:	str	x2, [x1, #40]
   17f24:	mov	w0, #0x0                   	// #0
   17f28:	ret
   17f2c:	ldr	x2, [x1, #8]
   17f30:	cbz	x2, 17f44 <set_program_name@@Base+0x214>
   17f34:	mov	x0, x2
   17f38:	ldr	x2, [x2]
   17f3c:	cbnz	x2, 17f34 <set_program_name@@Base+0x204>
   17f40:	ret
   17f44:	mov	x0, x1
   17f48:	ldr	x1, [x1, #16]
   17f4c:	cbz	x1, 17f64 <set_program_name@@Base+0x234>
   17f50:	ldr	x2, [x1, #8]
   17f54:	cmp	x2, x0
   17f58:	b.eq	17f44 <set_program_name@@Base+0x214>  // b.none
   17f5c:	mov	x0, x1
   17f60:	b	17f40 <set_program_name@@Base+0x210>
   17f64:	mov	x0, x1
   17f68:	b	17f40 <set_program_name@@Base+0x210>
   17f6c:	ldr	x2, [x1]
   17f70:	cbz	x2, 17f84 <set_program_name@@Base+0x254>
   17f74:	mov	x0, x2
   17f78:	ldr	x2, [x2, #8]
   17f7c:	cbnz	x2, 17f74 <set_program_name@@Base+0x244>
   17f80:	ret
   17f84:	mov	x0, x1
   17f88:	ldr	x1, [x1, #16]
   17f8c:	cbz	x1, 17fa4 <set_program_name@@Base+0x274>
   17f90:	ldr	x2, [x1]
   17f94:	cmp	x2, x0
   17f98:	b.eq	17f84 <set_program_name@@Base+0x254>  // b.none
   17f9c:	mov	x0, x1
   17fa0:	b	17f80 <set_program_name@@Base+0x250>
   17fa4:	mov	x0, x1
   17fa8:	b	17f80 <set_program_name@@Base+0x250>
   17fac:	b	17fc4 <set_program_name@@Base+0x294>
   17fb0:	mov	x0, x2
   17fb4:	b	17fc4 <set_program_name@@Base+0x294>
   17fb8:	cbz	x1, 17fe0 <set_program_name@@Base+0x2b0>
   17fbc:	sub	x1, x1, #0x1
   17fc0:	ldr	x0, [x0, #8]
   17fc4:	ldr	x2, [x0]
   17fc8:	cbz	x2, 17fb8 <set_program_name@@Base+0x288>
   17fcc:	ldr	x3, [x2, #32]
   17fd0:	cmp	x3, x1
   17fd4:	b.hi	17fb0 <set_program_name@@Base+0x280>  // b.pmore
   17fd8:	sub	x1, x1, x3
   17fdc:	b	17fb8 <set_program_name@@Base+0x288>
   17fe0:	ret
   17fe4:	ldr	x3, [x0]
   17fe8:	ldr	x1, [x0, #40]
   17fec:	mov	x2, x1
   17ff0:	cbz	x1, 18000 <set_program_name@@Base+0x2d0>
   17ff4:	mov	x2, x1
   17ff8:	ldr	x1, [x1]
   17ffc:	cbnz	x1, 17ff4 <set_program_name@@Base+0x2c4>
   18000:	str	x3, [x8]
   18004:	str	x0, [x8, #8]
   18008:	str	x2, [x8, #24]
   1800c:	str	xzr, [x8, #32]
   18010:	ret
   18014:	ldr	x3, [x0, #24]
   18018:	ldr	x4, [x0, #32]
   1801c:	cmp	x3, x4
   18020:	b.eq	18070 <set_program_name@@Base+0x340>  // b.none
   18024:	ldr	x4, [x3, #40]
   18028:	str	x4, [x1]
   1802c:	cbz	x2, 18034 <set_program_name@@Base+0x304>
   18030:	str	x3, [x2]
   18034:	ldr	x1, [x3, #8]
   18038:	cbz	x1, 18054 <set_program_name@@Base+0x324>
   1803c:	mov	x3, x1
   18040:	ldr	x1, [x1]
   18044:	cbnz	x1, 1803c <set_program_name@@Base+0x30c>
   18048:	str	x3, [x0, #24]
   1804c:	mov	w0, #0x1                   	// #1
   18050:	ret
   18054:	mov	x1, x3
   18058:	ldr	x3, [x3, #16]
   1805c:	cbz	x3, 18048 <set_program_name@@Base+0x318>
   18060:	ldr	x2, [x3, #8]
   18064:	cmp	x2, x1
   18068:	b.eq	18054 <set_program_name@@Base+0x324>  // b.none
   1806c:	b	18048 <set_program_name@@Base+0x318>
   18070:	mov	w0, #0x0                   	// #0
   18074:	b	18050 <set_program_name@@Base+0x320>
   18078:	ret
   1807c:	stp	x29, x30, [sp, #-64]!
   18080:	mov	x29, sp
   18084:	stp	x19, x20, [sp, #16]
   18088:	stp	x21, x22, [sp, #32]
   1808c:	str	x23, [sp, #48]
   18090:	mov	x19, x0
   18094:	mov	x20, x1
   18098:	ldr	x23, [x0]
   1809c:	mov	w21, #0x0                   	// #0
   180a0:	cbz	x23, 180b4 <set_program_name@@Base+0x384>
   180a4:	mov	x1, x0
   180a8:	mov	x0, x23
   180ac:	bl	1807c <set_program_name@@Base+0x34c>
   180b0:	mov	w21, w0
   180b4:	ldr	x22, [x19, #8]
   180b8:	mov	w0, #0x0                   	// #0
   180bc:	cbz	x22, 180cc <set_program_name@@Base+0x39c>
   180c0:	mov	x1, x19
   180c4:	mov	x0, x22
   180c8:	bl	1807c <set_program_name@@Base+0x34c>
   180cc:	ldr	x1, [x19, #16]
   180d0:	cmp	x1, x20
   180d4:	b.ne	18140 <set_program_name@@Base+0x410>  // b.any
   180d8:	ldr	x3, [x19, #32]
   180dc:	mov	x2, #0x1                   	// #1
   180e0:	cbz	x23, 180ec <set_program_name@@Base+0x3bc>
   180e4:	ldr	x2, [x23, #32]
   180e8:	add	x2, x2, #0x1
   180ec:	mov	x1, #0x0                   	// #0
   180f0:	cbz	x22, 180f8 <set_program_name@@Base+0x3c8>
   180f4:	ldr	x1, [x22, #32]
   180f8:	add	x2, x2, x1
   180fc:	cmp	x3, x2
   18100:	b.ne	18144 <set_program_name@@Base+0x414>  // b.any
   18104:	ldr	w1, [x19, #24]
   18108:	cmp	w1, #0x1
   1810c:	b.hi	18148 <set_program_name@@Base+0x418>  // b.pmore
   18110:	cmp	w1, #0x0
   18114:	ccmp	x20, #0x0, #0x0, ne  // ne = any
   18118:	b.eq	1814c <set_program_name@@Base+0x41c>  // b.none
   1811c:	cmp	w21, w0
   18120:	b.ne	18150 <set_program_name@@Base+0x420>  // b.any
   18124:	cmp	w1, #0x0
   18128:	cinc	w0, w21, eq  // eq = none
   1812c:	ldp	x19, x20, [sp, #16]
   18130:	ldp	x21, x22, [sp, #32]
   18134:	ldr	x23, [sp, #48]
   18138:	ldp	x29, x30, [sp], #64
   1813c:	ret
   18140:	bl	a900 <abort@plt>
   18144:	bl	a900 <abort@plt>
   18148:	bl	a900 <abort@plt>
   1814c:	bl	a900 <abort@plt>
   18150:	bl	a900 <abort@plt>
   18154:	stp	x29, x30, [sp, #-80]!
   18158:	mov	x29, sp
   1815c:	cmp	x2, x3
   18160:	b.hi	181a4 <set_program_name@@Base+0x474>  // b.pmore
   18164:	stp	x19, x20, [sp, #16]
   18168:	stp	x21, x22, [sp, #32]
   1816c:	stp	x25, x26, [sp, #64]
   18170:	mov	x25, x1
   18174:	mov	x21, x2
   18178:	mov	x22, x3
   1817c:	mov	x26, x4
   18180:	ldr	x20, [x0, #40]
   18184:	cbz	x20, 182f0 <set_program_name@@Base+0x5c0>
   18188:	stp	x23, x24, [sp, #48]
   1818c:	ldr	x0, [x20, #32]
   18190:	mov	x23, #0x0                   	// #0
   18194:	mov	x24, #0x0                   	// #0
   18198:	cmp	x3, x0
   1819c:	b.ls	1828c <set_program_name@@Base+0x55c>  // b.plast
   181a0:	bl	a900 <abort@plt>
   181a4:	stp	x19, x20, [sp, #16]
   181a8:	stp	x21, x22, [sp, #32]
   181ac:	stp	x23, x24, [sp, #48]
   181b0:	stp	x25, x26, [sp, #64]
   181b4:	b	181a0 <set_program_name@@Base+0x470>
   181b8:	stp	x23, x24, [sp, #48]
   181bc:	b	181a0 <set_program_name@@Base+0x470>
   181c0:	cmp	x19, x22
   181c4:	b.cs	18284 <set_program_name@@Base+0x554>  // b.hs, b.nlast
   181c8:	mov	x1, x26
   181cc:	ldr	x0, [x20, #40]
   181d0:	blr	x25
   181d4:	tbnz	w0, #31, 181e8 <set_program_name@@Base+0x4b8>
   181d8:	cmp	w0, #0x0
   181dc:	b.le	18204 <set_program_name@@Base+0x4d4>
   181e0:	ldr	x20, [x20]
   181e4:	b	18288 <set_program_name@@Base+0x558>
   181e8:	sub	x22, x22, #0x1
   181ec:	sub	x22, x22, x19
   181f0:	add	x23, x23, #0x1
   181f4:	add	x23, x19, x23
   181f8:	ldr	x20, [x20, #8]
   181fc:	mov	x21, x24
   18200:	b	18288 <set_program_name@@Base+0x558>
   18204:	ldr	x19, [x20]
   18208:	cbz	x19, 182e4 <set_program_name@@Base+0x5b4>
   1820c:	ldr	x22, [x19, #32]
   18210:	add	x22, x23, x22
   18214:	mov	x24, #0x0                   	// #0
   18218:	b	18240 <set_program_name@@Base+0x510>
   1821c:	mov	x1, x26
   18220:	ldr	x0, [x19, #40]
   18224:	blr	x25
   18228:	tbnz	w0, #31, 18268 <set_program_name@@Base+0x538>
   1822c:	cmp	w0, #0x0
   18230:	b.gt	18278 <set_program_name@@Base+0x548>
   18234:	add	x22, x20, x23
   18238:	ldr	x19, [x19]
   1823c:	cbz	x19, 1827c <set_program_name@@Base+0x54c>
   18240:	ldr	x0, [x19]
   18244:	mov	x20, x24
   18248:	cbz	x0, 18250 <set_program_name@@Base+0x520>
   1824c:	ldr	x20, [x0, #32]
   18250:	cmp	x20, x21
   18254:	b.cs	1821c <set_program_name@@Base+0x4ec>  // b.hs, b.nlast
   18258:	sub	x21, x21, #0x1
   1825c:	sub	x21, x21, x20
   18260:	ldr	x19, [x19, #8]
   18264:	b	1823c <set_program_name@@Base+0x50c>
   18268:	add	x23, x23, #0x1
   1826c:	add	x23, x20, x23
   18270:	ldr	x19, [x19, #8]
   18274:	b	1823c <set_program_name@@Base+0x50c>
   18278:	bl	a900 <abort@plt>
   1827c:	ldp	x23, x24, [sp, #48]
   18280:	b	182cc <set_program_name@@Base+0x59c>
   18284:	mov	x20, x0
   18288:	cbz	x20, 182c4 <set_program_name@@Base+0x594>
   1828c:	ldr	x0, [x20]
   18290:	mov	x19, x24
   18294:	cbz	x0, 1829c <set_program_name@@Base+0x56c>
   18298:	ldr	x19, [x0, #32]
   1829c:	cmp	x19, x21
   182a0:	b.cs	181c0 <set_program_name@@Base+0x490>  // b.hs, b.nlast
   182a4:	sub	x21, x21, #0x1
   182a8:	sub	x21, x21, x19
   182ac:	sub	x22, x22, #0x1
   182b0:	sub	x22, x22, x19
   182b4:	add	x23, x23, #0x1
   182b8:	add	x23, x19, x23
   182bc:	ldr	x20, [x20, #8]
   182c0:	b	18288 <set_program_name@@Base+0x558>
   182c4:	mov	x22, #0xffffffffffffffff    	// #-1
   182c8:	ldp	x23, x24, [sp, #48]
   182cc:	mov	x0, x22
   182d0:	ldp	x19, x20, [sp, #16]
   182d4:	ldp	x21, x22, [sp, #32]
   182d8:	ldp	x25, x26, [sp, #64]
   182dc:	ldp	x29, x30, [sp], #80
   182e0:	ret
   182e4:	mov	x22, x23
   182e8:	ldp	x23, x24, [sp, #48]
   182ec:	b	182cc <set_program_name@@Base+0x59c>
   182f0:	cbnz	x3, 181b8 <set_program_name@@Base+0x488>
   182f4:	mov	x22, #0xffffffffffffffff    	// #-1
   182f8:	b	182cc <set_program_name@@Base+0x59c>
   182fc:	stp	x29, x30, [sp, #-64]!
   18300:	mov	x29, sp
   18304:	stp	x19, x20, [sp, #16]
   18308:	stp	x23, x24, [sp, #48]
   1830c:	ldr	x19, [x0, #40]
   18310:	cbz	x19, 183f4 <set_program_name@@Base+0x6c4>
   18314:	stp	x21, x22, [sp, #32]
   18318:	mov	x21, x1
   1831c:	mov	x22, x2
   18320:	mov	x20, #0x0                   	// #0
   18324:	b	18344 <set_program_name@@Base+0x614>
   18328:	ldr	x0, [x19]
   1832c:	cbz	x0, 18338 <set_program_name@@Base+0x608>
   18330:	ldr	x0, [x0, #32]
   18334:	add	x20, x20, x0
   18338:	add	x20, x20, #0x1
   1833c:	ldr	x19, [x19, #8]
   18340:	cbz	x19, 183d8 <set_program_name@@Base+0x6a8>
   18344:	mov	x1, x22
   18348:	ldr	x0, [x19, #40]
   1834c:	blr	x21
   18350:	tbnz	w0, #31, 18328 <set_program_name@@Base+0x5f8>
   18354:	cmp	w0, #0x0
   18358:	b.le	18364 <set_program_name@@Base+0x634>
   1835c:	ldr	x19, [x19]
   18360:	b	18340 <set_program_name@@Base+0x610>
   18364:	ldr	x19, [x19]
   18368:	cbz	x19, 183fc <set_program_name@@Base+0x6cc>
   1836c:	ldr	x0, [x19, #32]
   18370:	add	x23, x20, x0
   18374:	mov	x24, #0x0                   	// #0
   18378:	b	183a4 <set_program_name@@Base+0x674>
   1837c:	ldr	x0, [x19]
   18380:	cbz	x0, 1838c <set_program_name@@Base+0x65c>
   18384:	ldr	x0, [x0, #32]
   18388:	add	x20, x20, x0
   1838c:	add	x20, x20, #0x1
   18390:	ldr	x19, [x19, #8]
   18394:	b	183a0 <set_program_name@@Base+0x670>
   18398:	bl	a900 <abort@plt>
   1839c:	add	x23, x0, x20
   183a0:	cbz	x19, 183d0 <set_program_name@@Base+0x6a0>
   183a4:	mov	x1, x22
   183a8:	ldr	x0, [x19, #40]
   183ac:	blr	x21
   183b0:	tbnz	w0, #31, 1837c <set_program_name@@Base+0x64c>
   183b4:	cmp	w0, #0x0
   183b8:	b.gt	18398 <set_program_name@@Base+0x668>
   183bc:	ldr	x19, [x19]
   183c0:	mov	x0, x24
   183c4:	cbz	x19, 1839c <set_program_name@@Base+0x66c>
   183c8:	ldr	x0, [x19, #32]
   183cc:	b	1839c <set_program_name@@Base+0x66c>
   183d0:	ldp	x21, x22, [sp, #32]
   183d4:	b	183e0 <set_program_name@@Base+0x6b0>
   183d8:	mov	x23, #0xffffffffffffffff    	// #-1
   183dc:	ldp	x21, x22, [sp, #32]
   183e0:	mov	x0, x23
   183e4:	ldp	x19, x20, [sp, #16]
   183e8:	ldp	x23, x24, [sp, #48]
   183ec:	ldp	x29, x30, [sp], #64
   183f0:	ret
   183f4:	mov	x23, #0xffffffffffffffff    	// #-1
   183f8:	b	183e0 <set_program_name@@Base+0x6b0>
   183fc:	mov	x23, x20
   18400:	ldp	x21, x22, [sp, #32]
   18404:	b	183e0 <set_program_name@@Base+0x6b0>
   18408:	stp	x29, x30, [sp, #-80]!
   1840c:	mov	x29, sp
   18410:	stp	x19, x20, [sp, #16]
   18414:	stp	x21, x22, [sp, #32]
   18418:	stp	x23, x24, [sp, #48]
   1841c:	str	x25, [sp, #64]
   18420:	cmp	x2, x3
   18424:	b.hi	18450 <set_program_name@@Base+0x720>  // b.pmore
   18428:	mov	x24, x1
   1842c:	mov	x21, x2
   18430:	mov	x22, x3
   18434:	mov	x25, x4
   18438:	ldr	x20, [x0, #40]
   1843c:	cbz	x20, 18534 <set_program_name@@Base+0x804>
   18440:	ldr	x0, [x20, #32]
   18444:	mov	x23, #0x0                   	// #0
   18448:	cmp	x3, x0
   1844c:	b.ls	18504 <set_program_name@@Base+0x7d4>  // b.plast
   18450:	bl	a900 <abort@plt>
   18454:	cmp	x19, x22
   18458:	b.cs	184fc <set_program_name@@Base+0x7cc>  // b.hs, b.nlast
   1845c:	mov	x1, x25
   18460:	ldr	x0, [x20, #40]
   18464:	blr	x24
   18468:	tbnz	w0, #31, 1847c <set_program_name@@Base+0x74c>
   1846c:	cmp	w0, #0x0
   18470:	b.le	18490 <set_program_name@@Base+0x760>
   18474:	ldr	x20, [x20]
   18478:	b	18500 <set_program_name@@Base+0x7d0>
   1847c:	sub	x22, x22, #0x1
   18480:	sub	x22, x22, x19
   18484:	ldr	x20, [x20, #8]
   18488:	mov	x21, x23
   1848c:	b	18500 <set_program_name@@Base+0x7d0>
   18490:	ldr	x19, [x20]
   18494:	cbz	x19, 18538 <set_program_name@@Base+0x808>
   18498:	mov	x22, #0x0                   	// #0
   1849c:	b	184c4 <set_program_name@@Base+0x794>
   184a0:	mov	x1, x25
   184a4:	ldr	x0, [x19, #40]
   184a8:	blr	x24
   184ac:	tbnz	w0, #31, 184ec <set_program_name@@Base+0x7bc>
   184b0:	cmp	w0, #0x0
   184b4:	b.gt	184f8 <set_program_name@@Base+0x7c8>
   184b8:	mov	x20, x19
   184bc:	ldr	x19, [x19]
   184c0:	cbz	x19, 18538 <set_program_name@@Base+0x808>
   184c4:	ldr	x1, [x19]
   184c8:	mov	x0, x22
   184cc:	cbz	x1, 184d4 <set_program_name@@Base+0x7a4>
   184d0:	ldr	x0, [x1, #32]
   184d4:	cmp	x0, x21
   184d8:	b.cs	184a0 <set_program_name@@Base+0x770>  // b.hs, b.nlast
   184dc:	sub	x21, x21, #0x1
   184e0:	sub	x21, x21, x0
   184e4:	ldr	x19, [x19, #8]
   184e8:	b	184c0 <set_program_name@@Base+0x790>
   184ec:	ldr	x19, [x19, #8]
   184f0:	mov	x21, x22
   184f4:	b	184c0 <set_program_name@@Base+0x790>
   184f8:	bl	a900 <abort@plt>
   184fc:	mov	x20, x0
   18500:	cbz	x20, 18538 <set_program_name@@Base+0x808>
   18504:	ldr	x0, [x20]
   18508:	mov	x19, x23
   1850c:	cbz	x0, 18514 <set_program_name@@Base+0x7e4>
   18510:	ldr	x19, [x0, #32]
   18514:	cmp	x19, x21
   18518:	b.cs	18454 <set_program_name@@Base+0x724>  // b.hs, b.nlast
   1851c:	sub	x21, x21, #0x1
   18520:	sub	x21, x21, x19
   18524:	sub	x22, x22, #0x1
   18528:	sub	x22, x22, x19
   1852c:	ldr	x20, [x20, #8]
   18530:	b	18500 <set_program_name@@Base+0x7d0>
   18534:	cbnz	x3, 18450 <set_program_name@@Base+0x720>
   18538:	mov	x0, x20
   1853c:	ldp	x19, x20, [sp, #16]
   18540:	ldp	x21, x22, [sp, #32]
   18544:	ldp	x23, x24, [sp, #48]
   18548:	ldr	x25, [sp, #64]
   1854c:	ldp	x29, x30, [sp], #80
   18550:	ret
   18554:	stp	x29, x30, [sp, #-48]!
   18558:	mov	x29, sp
   1855c:	stp	x19, x20, [sp, #16]
   18560:	stp	x21, x22, [sp, #32]
   18564:	mov	x20, x1
   18568:	mov	x21, x2
   1856c:	ldr	x19, [x0, #40]
   18570:	cbnz	x19, 18590 <set_program_name@@Base+0x860>
   18574:	mov	x0, x19
   18578:	ldp	x19, x20, [sp, #16]
   1857c:	ldp	x21, x22, [sp, #32]
   18580:	ldp	x29, x30, [sp], #48
   18584:	ret
   18588:	ldr	x19, [x19, #8]
   1858c:	cbz	x19, 18574 <set_program_name@@Base+0x844>
   18590:	mov	x1, x21
   18594:	ldr	x0, [x19, #40]
   18598:	blr	x20
   1859c:	tbnz	w0, #31, 18588 <set_program_name@@Base+0x858>
   185a0:	cmp	w0, #0x0
   185a4:	b.le	185b0 <set_program_name@@Base+0x880>
   185a8:	ldr	x19, [x19]
   185ac:	b	1858c <set_program_name@@Base+0x85c>
   185b0:	ldr	x22, [x19]
   185b4:	cbnz	x22, 185c4 <set_program_name@@Base+0x894>
   185b8:	b	18574 <set_program_name@@Base+0x844>
   185bc:	ldr	x22, [x22, #8]
   185c0:	cbz	x22, 18574 <set_program_name@@Base+0x844>
   185c4:	mov	x1, x21
   185c8:	ldr	x0, [x22, #40]
   185cc:	blr	x20
   185d0:	tbnz	w0, #31, 185bc <set_program_name@@Base+0x88c>
   185d4:	cmp	w0, #0x0
   185d8:	b.gt	185e8 <set_program_name@@Base+0x8b8>
   185dc:	mov	x19, x22
   185e0:	ldr	x22, [x22]
   185e4:	b	185c0 <set_program_name@@Base+0x890>
   185e8:	bl	a900 <abort@plt>
   185ec:	stp	x29, x30, [sp, #-80]!
   185f0:	mov	x29, sp
   185f4:	stp	x19, x20, [sp, #16]
   185f8:	stp	x21, x22, [sp, #32]
   185fc:	stp	x23, x24, [sp, #48]
   18600:	str	x25, [sp, #64]
   18604:	mov	x19, x8
   18608:	mov	x22, x0
   1860c:	mov	x21, x2
   18610:	ldr	x20, [x0, #40]
   18614:	cbz	x20, 18690 <set_program_name@@Base+0x960>
   18618:	ldr	x24, [x20, #32]
   1861c:	cmp	x1, x2
   18620:	ccmp	x24, x2, #0x0, ls  // ls = plast
   18624:	b.cc	18684 <set_program_name@@Base+0x954>  // b.lo, b.ul, b.last
   18628:	ldr	x25, [x0]
   1862c:	mov	x23, #0x0                   	// #0
   18630:	cmp	x24, x1
   18634:	b.ls	18644 <set_program_name@@Base+0x914>  // b.plast
   18638:	mov	x0, x20
   1863c:	bl	17fac <set_program_name@@Base+0x27c>
   18640:	mov	x23, x0
   18644:	cmp	x24, x21
   18648:	b.ls	18688 <set_program_name@@Base+0x958>  // b.plast
   1864c:	mov	x1, x21
   18650:	mov	x0, x20
   18654:	bl	17fac <set_program_name@@Base+0x27c>
   18658:	mov	x20, x0
   1865c:	str	x25, [x19]
   18660:	str	x22, [x19, #8]
   18664:	str	x23, [x19, #24]
   18668:	str	x20, [x19, #32]
   1866c:	ldp	x19, x20, [sp, #16]
   18670:	ldp	x21, x22, [sp, #32]
   18674:	ldp	x23, x24, [sp, #48]
   18678:	ldr	x25, [sp, #64]
   1867c:	ldp	x29, x30, [sp], #80
   18680:	ret
   18684:	bl	a900 <abort@plt>
   18688:	mov	x20, #0x0                   	// #0
   1868c:	b	1865c <set_program_name@@Base+0x92c>
   18690:	cmp	x2, #0x0
   18694:	ccmp	x1, x2, #0x2, eq  // eq = none
   18698:	b.hi	18684 <set_program_name@@Base+0x954>  // b.pmore
   1869c:	ldr	x25, [x22]
   186a0:	mov	x23, x20
   186a4:	b	1865c <set_program_name@@Base+0x92c>
   186a8:	stp	x29, x30, [sp, #-64]!
   186ac:	mov	x29, sp
   186b0:	stp	x19, x20, [sp, #16]
   186b4:	stp	x21, x22, [sp, #32]
   186b8:	str	x23, [sp, #48]
   186bc:	mov	x19, x2
   186c0:	add	x23, x0, #0x28
   186c4:	mov	w22, #0x1                   	// #1
   186c8:	b	18820 <set_program_name@@Base+0xaf0>
   186cc:	bl	a900 <abort@plt>
   186d0:	ldr	x20, [x19, #8]
   186d4:	ldr	w0, [x20, #24]
   186d8:	cmp	w0, #0x1
   186dc:	b.eq	18718 <set_program_name@@Base+0x9e8>  // b.none
   186e0:	ldr	x0, [x20, #8]
   186e4:	cbz	x0, 186f4 <set_program_name@@Base+0x9c4>
   186e8:	ldr	w0, [x0, #24]
   186ec:	cmp	w0, #0x1
   186f0:	b.eq	1873c <set_program_name@@Base+0xa0c>  // b.none
   186f4:	ldr	x0, [x20]
   186f8:	cbz	x0, 18708 <set_program_name@@Base+0x9d8>
   186fc:	ldr	w1, [x0, #24]
   18700:	cmp	w1, #0x1
   18704:	b.eq	18764 <set_program_name@@Base+0xa34>  // b.none
   18708:	ldr	w0, [x19, #24]
   1870c:	cbnz	w0, 187a8 <set_program_name@@Base+0xa78>
   18710:	str	w22, [x20, #24]
   18714:	b	18810 <set_program_name@@Base+0xae0>
   18718:	mov	x1, x20
   1871c:	mov	x0, x19
   18720:	bl	17e18 <set_program_name@@Base+0xe8>
   18724:	str	x0, [x21]
   18728:	str	w22, [x19, #24]
   1872c:	str	wzr, [x20, #24]
   18730:	mov	x21, x20
   18734:	ldr	x20, [x19, #8]
   18738:	b	186e0 <set_program_name@@Base+0x9b0>
   1873c:	mov	x1, x20
   18740:	mov	x0, x19
   18744:	bl	17e18 <set_program_name@@Base+0xe8>
   18748:	str	x0, [x21]
   1874c:	ldr	w0, [x19, #24]
   18750:	str	w0, [x20, #24]
   18754:	str	wzr, [x19, #24]
   18758:	ldr	x0, [x20, #8]
   1875c:	str	wzr, [x0, #24]
   18760:	b	188e8 <set_program_name@@Base+0xbb8>
   18764:	mov	x1, x20
   18768:	bl	17e9c <set_program_name@@Base+0x16c>
   1876c:	str	x0, [x19, #8]
   18770:	mov	w0, #0x1                   	// #1
   18774:	str	w0, [x20, #24]
   18778:	ldr	x20, [x19, #8]
   1877c:	str	wzr, [x20, #24]
   18780:	mov	x1, x20
   18784:	mov	x0, x19
   18788:	bl	17e18 <set_program_name@@Base+0xe8>
   1878c:	str	x0, [x21]
   18790:	ldr	w0, [x19, #24]
   18794:	str	w0, [x20, #24]
   18798:	str	wzr, [x19, #24]
   1879c:	ldr	x0, [x20, #8]
   187a0:	str	wzr, [x0, #24]
   187a4:	b	188e8 <set_program_name@@Base+0xbb8>
   187a8:	str	wzr, [x19, #24]
   187ac:	mov	w0, #0x1                   	// #1
   187b0:	str	w0, [x20, #24]
   187b4:	b	188e8 <set_program_name@@Base+0xbb8>
   187b8:	mov	x1, x19
   187bc:	mov	x0, x20
   187c0:	bl	17e9c <set_program_name@@Base+0x16c>
   187c4:	str	x0, [x21]
   187c8:	str	w22, [x19, #24]
   187cc:	str	wzr, [x20, #24]
   187d0:	add	x21, x20, #0x8
   187d4:	ldr	x20, [x19]
   187d8:	b	18870 <set_program_name@@Base+0xb40>
   187dc:	mov	x1, x19
   187e0:	mov	x0, x20
   187e4:	bl	17e9c <set_program_name@@Base+0x16c>
   187e8:	str	x0, [x21]
   187ec:	ldr	w0, [x19, #24]
   187f0:	str	w0, [x20, #24]
   187f4:	str	wzr, [x19, #24]
   187f8:	ldr	x0, [x20]
   187fc:	str	wzr, [x0, #24]
   18800:	b	188e8 <set_program_name@@Base+0xbb8>
   18804:	ldr	w0, [x19, #24]
   18808:	cbnz	w0, 188dc <set_program_name@@Base+0xbac>
   1880c:	str	w22, [x20, #24]
   18810:	ldr	x2, [x19, #16]
   18814:	mov	x1, x19
   18818:	cbz	x2, 188e8 <set_program_name@@Base+0xbb8>
   1881c:	mov	x19, x2
   18820:	ldr	x2, [x19, #16]
   18824:	mov	x21, x23
   18828:	cbz	x2, 1884c <set_program_name@@Base+0xb1c>
   1882c:	ldr	x0, [x2]
   18830:	mov	x21, x2
   18834:	cmp	x0, x19
   18838:	b.eq	1884c <set_program_name@@Base+0xb1c>  // b.none
   1883c:	ldr	x0, [x2, #8]
   18840:	cmp	x0, x19
   18844:	b.ne	186cc <set_program_name@@Base+0x99c>  // b.any
   18848:	add	x21, x2, #0x8
   1884c:	ldr	x20, [x19]
   18850:	cmp	x20, x1
   18854:	b.eq	186d0 <set_program_name@@Base+0x9a0>  // b.none
   18858:	ldr	x0, [x19, #8]
   1885c:	cmp	x0, x1
   18860:	b.ne	188fc <set_program_name@@Base+0xbcc>  // b.any
   18864:	ldr	w0, [x20, #24]
   18868:	cmp	w0, #0x1
   1886c:	b.eq	187b8 <set_program_name@@Base+0xa88>  // b.none
   18870:	ldr	x1, [x20]
   18874:	cbz	x1, 18884 <set_program_name@@Base+0xb54>
   18878:	ldr	w0, [x1, #24]
   1887c:	cmp	w0, #0x1
   18880:	b.eq	187dc <set_program_name@@Base+0xaac>  // b.none
   18884:	ldr	x1, [x20, #8]
   18888:	cbz	x1, 18804 <set_program_name@@Base+0xad4>
   1888c:	ldr	w0, [x1, #24]
   18890:	cmp	w0, #0x1
   18894:	b.ne	18804 <set_program_name@@Base+0xad4>  // b.any
   18898:	mov	x0, x20
   1889c:	bl	17e18 <set_program_name@@Base+0xe8>
   188a0:	str	x0, [x19]
   188a4:	mov	w0, #0x1                   	// #1
   188a8:	str	w0, [x20, #24]
   188ac:	ldr	x20, [x19]
   188b0:	str	wzr, [x20, #24]
   188b4:	mov	x1, x19
   188b8:	mov	x0, x20
   188bc:	bl	17e9c <set_program_name@@Base+0x16c>
   188c0:	str	x0, [x21]
   188c4:	ldr	w0, [x19, #24]
   188c8:	str	w0, [x20, #24]
   188cc:	str	wzr, [x19, #24]
   188d0:	ldr	x0, [x20]
   188d4:	str	wzr, [x0, #24]
   188d8:	b	188e8 <set_program_name@@Base+0xbb8>
   188dc:	str	wzr, [x19, #24]
   188e0:	mov	w0, #0x1                   	// #1
   188e4:	str	w0, [x20, #24]
   188e8:	ldp	x19, x20, [sp, #16]
   188ec:	ldp	x21, x22, [sp, #32]
   188f0:	ldr	x23, [sp, #48]
   188f4:	ldp	x29, x30, [sp], #64
   188f8:	ret
   188fc:	bl	a900 <abort@plt>
   18900:	stp	x29, x30, [sp, #-48]!
   18904:	mov	x29, sp
   18908:	stp	x19, x20, [sp, #16]
   1890c:	stp	x21, x22, [sp, #32]
   18910:	mov	x21, x1
   18914:	mov	x19, x2
   18918:	mov	w4, #0x1                   	// #1
   1891c:	b	18958 <set_program_name@@Base+0xc28>
   18920:	mov	w0, #0x1                   	// #1
   18924:	str	w0, [x21, #24]
   18928:	b	189e8 <set_program_name@@Base+0xcb8>
   1892c:	ldr	x2, [x20, #8]
   18930:	cbz	x2, 18988 <set_program_name@@Base+0xc58>
   18934:	ldr	w1, [x2, #24]
   18938:	cmp	w1, #0x1
   1893c:	b.ne	18988 <set_program_name@@Base+0xc58>  // b.any
   18940:	str	w4, [x21, #24]
   18944:	str	wzr, [x2, #24]
   18948:	str	wzr, [x19, #24]
   1894c:	ldr	x19, [x20, #16]
   18950:	cbz	x19, 18a64 <set_program_name@@Base+0xd34>
   18954:	mov	x21, x20
   18958:	ldr	w1, [x19, #24]
   1895c:	cbz	w1, 18920 <set_program_name@@Base+0xbf0>
   18960:	ldr	x20, [x19, #16]
   18964:	ldr	x3, [x20]
   18968:	cmp	x3, x19
   1896c:	b.eq	1892c <set_program_name@@Base+0xbfc>  // b.none
   18970:	ldr	x1, [x20, #8]
   18974:	cmp	x1, x19
   18978:	b.ne	18984 <set_program_name@@Base+0xc54>  // b.any
   1897c:	mov	x2, x3
   18980:	b	18930 <set_program_name@@Base+0xc00>
   18984:	bl	a900 <abort@plt>
   18988:	ldr	x1, [x20, #16]
   1898c:	add	x22, x0, #0x28
   18990:	cbz	x1, 189b4 <set_program_name@@Base+0xc84>
   18994:	ldr	x0, [x1]
   18998:	mov	x22, x1
   1899c:	cmp	x0, x20
   189a0:	b.eq	189b4 <set_program_name@@Base+0xc84>  // b.none
   189a4:	ldr	x0, [x1, #8]
   189a8:	cmp	x0, x20
   189ac:	b.ne	189f8 <set_program_name@@Base+0xcc8>  // b.any
   189b0:	add	x22, x1, #0x8
   189b4:	cmp	x3, x19
   189b8:	b.eq	189fc <set_program_name@@Base+0xccc>  // b.none
   189bc:	ldr	x0, [x19]
   189c0:	cmp	x0, x21
   189c4:	b.eq	18a48 <set_program_name@@Base+0xd18>  // b.none
   189c8:	mov	x1, x19
   189cc:	mov	x0, x20
   189d0:	bl	17e18 <set_program_name@@Base+0xe8>
   189d4:	str	x0, [x22]
   189d8:	str	wzr, [x19, #24]
   189dc:	mov	w0, #0x1                   	// #1
   189e0:	str	w0, [x20, #24]
   189e4:	str	w0, [x21, #24]
   189e8:	ldp	x19, x20, [sp, #16]
   189ec:	ldp	x21, x22, [sp, #32]
   189f0:	ldp	x29, x30, [sp], #48
   189f4:	ret
   189f8:	bl	a900 <abort@plt>
   189fc:	ldr	x0, [x19, #8]
   18a00:	cmp	x0, x21
   18a04:	b.eq	18a2c <set_program_name@@Base+0xcfc>  // b.none
   18a08:	mov	x1, x20
   18a0c:	mov	x0, x19
   18a10:	bl	17e9c <set_program_name@@Base+0x16c>
   18a14:	str	x0, [x22]
   18a18:	str	wzr, [x19, #24]
   18a1c:	mov	w0, #0x1                   	// #1
   18a20:	str	w0, [x20, #24]
   18a24:	str	w0, [x21, #24]
   18a28:	b	189e8 <set_program_name@@Base+0xcb8>
   18a2c:	mov	x1, x21
   18a30:	mov	x0, x19
   18a34:	bl	17e18 <set_program_name@@Base+0xe8>
   18a38:	str	x0, [x20]
   18a3c:	mov	x21, x19
   18a40:	mov	x19, x0
   18a44:	b	18a08 <set_program_name@@Base+0xcd8>
   18a48:	mov	x1, x19
   18a4c:	mov	x0, x21
   18a50:	bl	17e9c <set_program_name@@Base+0x16c>
   18a54:	str	x0, [x20, #8]
   18a58:	mov	x21, x19
   18a5c:	mov	x19, x0
   18a60:	b	189c8 <set_program_name@@Base+0xc98>
   18a64:	str	wzr, [x20, #24]
   18a68:	b	189e8 <set_program_name@@Base+0xcb8>
   18a6c:	sub	sp, sp, #0x7a0
   18a70:	stp	x29, x30, [sp]
   18a74:	mov	x29, sp
   18a78:	stp	x19, x20, [sp, #16]
   18a7c:	stp	x21, x22, [sp, #32]
   18a80:	stp	x23, x24, [sp, #48]
   18a84:	stp	x25, x26, [sp, #64]
   18a88:	stp	x27, x28, [sp, #80]
   18a8c:	cmp	x1, x2
   18a90:	b.hi	18af0 <set_program_name@@Base+0xdc0>  // b.pmore
   18a94:	mov	x20, x1
   18a98:	mov	x23, x2
   18a9c:	mov	x25, x3
   18aa0:	ldr	x1, [x0, #40]
   18aa4:	mov	x2, #0x0                   	// #0
   18aa8:	cbz	x1, 18ab0 <set_program_name@@Base+0xd80>
   18aac:	ldr	x2, [x1, #32]
   18ab0:	cmp	x2, x23
   18ab4:	b.cc	18af0 <set_program_name@@Base+0xdc0>  // b.lo, b.ul, b.last
   18ab8:	ldr	x27, [x0, #8]
   18abc:	cbz	x20, 18af4 <set_program_name@@Base+0xdc4>
   18ac0:	mov	x24, #0x0                   	// #0
   18ac4:	add	x19, sp, #0x60
   18ac8:	mov	x21, x19
   18acc:	cbz	x1, 18b74 <set_program_name@@Base+0xe44>
   18ad0:	ldr	x0, [x1, #32]
   18ad4:	cmp	x0, x20
   18ad8:	b.ls	18b74 <set_program_name@@Base+0xe44>  // b.plast
   18adc:	str	x1, [x19]
   18ae0:	str	xzr, [x19, #8]
   18ae4:	ldr	x1, [x1]
   18ae8:	add	x19, x19, #0x10
   18aec:	b	18acc <set_program_name@@Base+0xd9c>
   18af0:	bl	a900 <abort@plt>
   18af4:	add	x19, sp, #0x60
   18af8:	mov	x22, x19
   18afc:	mov	x24, #0x1                   	// #1
   18b00:	cbz	x1, 18b1c <set_program_name@@Base+0xdec>
   18b04:	str	x1, [x19]
   18b08:	str	xzr, [x19, #8]
   18b0c:	ldr	x1, [x1]
   18b10:	add	x19, x19, #0x10
   18b14:	b	18b00 <set_program_name@@Base+0xdd0>
   18b18:	mov	x19, x21
   18b1c:	cmp	x19, x22
   18b20:	b.eq	18c0c <set_program_name@@Base+0xedc>  // b.none
   18b24:	sub	x21, x19, #0x10
   18b28:	ldur	x0, [x19, #-8]
   18b2c:	cbnz	x0, 18b18 <set_program_name@@Base+0xde8>
   18b30:	ldr	x26, [x21]
   18b34:	cbz	x27, 18b64 <set_program_name@@Base+0xe34>
   18b38:	ldr	x1, [x26, #40]
   18b3c:	mov	x0, x25
   18b40:	blr	x27
   18b44:	and	w0, w0, #0xff
   18b48:	cbnz	w0, 18c34 <set_program_name@@Base+0xf04>
   18b4c:	add	x20, x20, #0x1
   18b50:	cmp	x23, x20
   18b54:	b.ls	18c3c <set_program_name@@Base+0xf0c>  // b.plast
   18b58:	str	x24, [x21, #8]
   18b5c:	ldr	x1, [x26, #8]
   18b60:	b	18b00 <set_program_name@@Base+0xdd0>
   18b64:	ldr	x0, [x26, #40]
   18b68:	cmp	x0, x25
   18b6c:	cset	w0, eq  // eq = none
   18b70:	b	18b48 <set_program_name@@Base+0xe18>
   18b74:	cmp	x19, x21
   18b78:	b.eq	18c44 <set_program_name@@Base+0xf14>  // b.none
   18b7c:	mov	x22, x19
   18b80:	sub	x19, x19, #0x10
   18b84:	ldr	x0, [x19, #8]
   18b88:	cbz	x0, 18ba0 <set_program_name@@Base+0xe70>
   18b8c:	add	x20, x20, x0
   18b90:	cmp	x19, x21
   18b94:	b.ne	18b7c <set_program_name@@Base+0xe4c>  // b.any
   18b98:	mov	x24, #0xffffffffffffffff    	// #-1
   18b9c:	b	18c10 <set_program_name@@Base+0xee0>
   18ba0:	ldr	x28, [x19]
   18ba4:	ldr	x0, [x28]
   18ba8:	mov	x26, #0x1                   	// #1
   18bac:	cbz	x0, 18bb8 <set_program_name@@Base+0xe88>
   18bb0:	ldr	x26, [x0, #32]
   18bb4:	add	x26, x26, #0x1
   18bb8:	cmp	x26, x20
   18bbc:	b.ls	18bdc <set_program_name@@Base+0xeac>  // b.plast
   18bc0:	cbz	x27, 18bfc <set_program_name@@Base+0xecc>
   18bc4:	ldr	x1, [x28, #40]
   18bc8:	mov	x0, x25
   18bcc:	blr	x27
   18bd0:	and	w0, w0, #0xff
   18bd4:	cbnz	w0, 18c10 <set_program_name@@Base+0xee0>
   18bd8:	mov	x20, x26
   18bdc:	add	x24, x24, #0x1
   18be0:	cmp	x23, x24
   18be4:	b.ls	18c4c <set_program_name@@Base+0xf1c>  // b.plast
   18be8:	sub	x20, x20, x26
   18bec:	str	x26, [x19, #8]
   18bf0:	ldr	x1, [x28, #8]
   18bf4:	mov	x19, x22
   18bf8:	b	18acc <set_program_name@@Base+0xd9c>
   18bfc:	ldr	x0, [x28, #40]
   18c00:	cmp	x0, x25
   18c04:	cset	w0, eq  // eq = none
   18c08:	b	18bd4 <set_program_name@@Base+0xea4>
   18c0c:	mov	x24, #0xffffffffffffffff    	// #-1
   18c10:	mov	x0, x24
   18c14:	ldp	x19, x20, [sp, #16]
   18c18:	ldp	x21, x22, [sp, #32]
   18c1c:	ldp	x23, x24, [sp, #48]
   18c20:	ldp	x25, x26, [sp, #64]
   18c24:	ldp	x27, x28, [sp, #80]
   18c28:	ldp	x29, x30, [sp]
   18c2c:	add	sp, sp, #0x7a0
   18c30:	ret
   18c34:	mov	x24, x20
   18c38:	b	18c10 <set_program_name@@Base+0xee0>
   18c3c:	mov	x24, #0xffffffffffffffff    	// #-1
   18c40:	b	18c10 <set_program_name@@Base+0xee0>
   18c44:	mov	x24, #0xffffffffffffffff    	// #-1
   18c48:	b	18c10 <set_program_name@@Base+0xee0>
   18c4c:	mov	x24, #0xffffffffffffffff    	// #-1
   18c50:	b	18c10 <set_program_name@@Base+0xee0>
   18c54:	sub	sp, sp, #0x7a0
   18c58:	stp	x29, x30, [sp]
   18c5c:	mov	x29, sp
   18c60:	stp	x19, x20, [sp, #16]
   18c64:	stp	x21, x22, [sp, #32]
   18c68:	stp	x23, x24, [sp, #48]
   18c6c:	stp	x25, x26, [sp, #64]
   18c70:	stp	x27, x28, [sp, #80]
   18c74:	cmp	x1, x2
   18c78:	b.hi	18cd8 <set_program_name@@Base+0xfa8>  // b.pmore
   18c7c:	mov	x20, x1
   18c80:	mov	x24, x2
   18c84:	mov	x25, x3
   18c88:	ldr	x21, [x0, #40]
   18c8c:	mov	x1, #0x0                   	// #0
   18c90:	cbz	x21, 18c98 <set_program_name@@Base+0xf68>
   18c94:	ldr	x1, [x21, #32]
   18c98:	cmp	x1, x24
   18c9c:	b.cc	18cd8 <set_program_name@@Base+0xfa8>  // b.lo, b.ul, b.last
   18ca0:	ldr	x27, [x0, #8]
   18ca4:	cbz	x20, 18cdc <set_program_name@@Base+0xfac>
   18ca8:	mov	x28, #0x0                   	// #0
   18cac:	add	x19, sp, #0x60
   18cb0:	mov	x22, x19
   18cb4:	cbz	x21, 18d5c <set_program_name@@Base+0x102c>
   18cb8:	ldr	x0, [x21, #32]
   18cbc:	cmp	x0, x20
   18cc0:	b.ls	18d5c <set_program_name@@Base+0x102c>  // b.plast
   18cc4:	str	x21, [x19]
   18cc8:	str	xzr, [x19, #8]
   18ccc:	ldr	x21, [x21]
   18cd0:	add	x19, x19, #0x10
   18cd4:	b	18cb4 <set_program_name@@Base+0xf84>
   18cd8:	bl	a900 <abort@plt>
   18cdc:	add	x19, sp, #0x60
   18ce0:	mov	x23, x19
   18ce4:	mov	x26, #0x1                   	// #1
   18ce8:	cbz	x21, 18d04 <set_program_name@@Base+0xfd4>
   18cec:	str	x21, [x19]
   18cf0:	str	xzr, [x19, #8]
   18cf4:	ldr	x21, [x21]
   18cf8:	add	x19, x19, #0x10
   18cfc:	b	18ce8 <set_program_name@@Base+0xfb8>
   18d00:	mov	x19, x22
   18d04:	cmp	x19, x23
   18d08:	b.eq	18d84 <set_program_name@@Base+0x1054>  // b.none
   18d0c:	sub	x22, x19, #0x10
   18d10:	ldur	x0, [x19, #-8]
   18d14:	cbnz	x0, 18d00 <set_program_name@@Base+0xfd0>
   18d18:	ldr	x28, [x22]
   18d1c:	cbz	x27, 18d4c <set_program_name@@Base+0x101c>
   18d20:	ldr	x1, [x28, #40]
   18d24:	mov	x0, x25
   18d28:	blr	x27
   18d2c:	and	w0, w0, #0xff
   18d30:	cbnz	w0, 18e14 <set_program_name@@Base+0x10e4>
   18d34:	add	x20, x20, #0x1
   18d38:	cmp	x24, x20
   18d3c:	b.ls	18d84 <set_program_name@@Base+0x1054>  // b.plast
   18d40:	str	x26, [x22, #8]
   18d44:	ldr	x21, [x28, #8]
   18d48:	b	18ce8 <set_program_name@@Base+0xfb8>
   18d4c:	ldr	x0, [x28, #40]
   18d50:	cmp	x0, x25
   18d54:	cset	w0, eq  // eq = none
   18d58:	b	18d30 <set_program_name@@Base+0x1000>
   18d5c:	cmp	x19, x22
   18d60:	b.eq	18e1c <set_program_name@@Base+0x10ec>  // b.none
   18d64:	mov	x23, x19
   18d68:	sub	x19, x19, #0x10
   18d6c:	ldr	x0, [x19, #8]
   18d70:	cbz	x0, 18da8 <set_program_name@@Base+0x1078>
   18d74:	add	x20, x20, x0
   18d78:	cmp	x19, x22
   18d7c:	b.ne	18d64 <set_program_name@@Base+0x1034>  // b.any
   18d80:	mov	x21, #0x0                   	// #0
   18d84:	mov	x0, x21
   18d88:	ldp	x19, x20, [sp, #16]
   18d8c:	ldp	x21, x22, [sp, #32]
   18d90:	ldp	x23, x24, [sp, #48]
   18d94:	ldp	x25, x26, [sp, #64]
   18d98:	ldp	x27, x28, [sp, #80]
   18d9c:	ldp	x29, x30, [sp]
   18da0:	add	sp, sp, #0x7a0
   18da4:	ret
   18da8:	ldr	x21, [x19]
   18dac:	ldr	x0, [x21]
   18db0:	mov	x26, #0x1                   	// #1
   18db4:	cbz	x0, 18dc0 <set_program_name@@Base+0x1090>
   18db8:	ldr	x26, [x0, #32]
   18dbc:	add	x26, x26, #0x1
   18dc0:	cmp	x26, x20
   18dc4:	b.ls	18de4 <set_program_name@@Base+0x10b4>  // b.plast
   18dc8:	cbz	x27, 18e04 <set_program_name@@Base+0x10d4>
   18dcc:	ldr	x1, [x21, #40]
   18dd0:	mov	x0, x25
   18dd4:	blr	x27
   18dd8:	and	w0, w0, #0xff
   18ddc:	cbnz	w0, 18d84 <set_program_name@@Base+0x1054>
   18de0:	mov	x20, x26
   18de4:	add	x28, x28, #0x1
   18de8:	cmp	x24, x28
   18dec:	b.ls	18e24 <set_program_name@@Base+0x10f4>  // b.plast
   18df0:	sub	x20, x20, x26
   18df4:	str	x26, [x19, #8]
   18df8:	ldr	x21, [x21, #8]
   18dfc:	mov	x19, x23
   18e00:	b	18cb4 <set_program_name@@Base+0xf84>
   18e04:	ldr	x0, [x21, #40]
   18e08:	cmp	x0, x25
   18e0c:	cset	w0, eq  // eq = none
   18e10:	b	18ddc <set_program_name@@Base+0x10ac>
   18e14:	mov	x21, x28
   18e18:	b	18d84 <set_program_name@@Base+0x1054>
   18e1c:	mov	x21, #0x0                   	// #0
   18e20:	b	18d84 <set_program_name@@Base+0x1054>
   18e24:	mov	x21, #0x0                   	// #0
   18e28:	b	18d84 <set_program_name@@Base+0x1054>
   18e2c:	stp	x29, x30, [sp, #-32]!
   18e30:	mov	x29, sp
   18e34:	str	x19, [sp, #16]
   18e38:	ldr	x0, [x0, #40]
   18e3c:	cbz	x0, 18e64 <set_program_name@@Base+0x1134>
   18e40:	mov	x19, x2
   18e44:	ldr	x2, [x0, #32]
   18e48:	cmp	x2, x1
   18e4c:	b.ls	18e64 <set_program_name@@Base+0x1134>  // b.plast
   18e50:	bl	17fac <set_program_name@@Base+0x27c>
   18e54:	str	x19, [x0, #40]
   18e58:	ldr	x19, [sp, #16]
   18e5c:	ldp	x29, x30, [sp], #32
   18e60:	ret
   18e64:	bl	a900 <abort@plt>
   18e68:	stp	x29, x30, [sp, #-16]!
   18e6c:	mov	x29, sp
   18e70:	ldr	x0, [x0, #40]
   18e74:	cbz	x0, 18e94 <set_program_name@@Base+0x1164>
   18e78:	ldr	x2, [x0, #32]
   18e7c:	cmp	x2, x1
   18e80:	b.ls	18e94 <set_program_name@@Base+0x1164>  // b.plast
   18e84:	bl	17fac <set_program_name@@Base+0x27c>
   18e88:	ldr	x0, [x0, #40]
   18e8c:	ldp	x29, x30, [sp], #16
   18e90:	ret
   18e94:	bl	a900 <abort@plt>
   18e98:	sub	sp, sp, #0x780
   18e9c:	stp	x29, x30, [sp]
   18ea0:	mov	x29, sp
   18ea4:	stp	x19, x20, [sp, #16]
   18ea8:	stp	x21, x22, [sp, #32]
   18eac:	str	x23, [sp, #48]
   18eb0:	mov	x21, x0
   18eb4:	ldr	x1, [x0, #40]
   18eb8:	add	x19, sp, #0x40
   18ebc:	mov	x22, x19
   18ec0:	mov	x23, #0x1                   	// #1
   18ec4:	cbz	x1, 18edc <set_program_name@@Base+0x11ac>
   18ec8:	str	x1, [x19]
   18ecc:	str	xzr, [x19, #8]
   18ed0:	ldr	x1, [x1]
   18ed4:	add	x19, x19, #0x10
   18ed8:	b	18ec4 <set_program_name@@Base+0x1194>
   18edc:	cmp	x19, x22
   18ee0:	b.ne	18f14 <set_program_name@@Base+0x11e4>  // b.any
   18ee4:	mov	x0, x21
   18ee8:	bl	aa50 <free@plt>
   18eec:	ldp	x19, x20, [sp, #16]
   18ef0:	ldp	x21, x22, [sp, #32]
   18ef4:	ldr	x23, [sp, #48]
   18ef8:	ldp	x29, x30, [sp]
   18efc:	add	sp, sp, #0x780
   18f00:	ret
   18f04:	mov	x0, x20
   18f08:	bl	aa50 <free@plt>
   18f0c:	cmp	x19, x22
   18f10:	b.eq	18ee4 <set_program_name@@Base+0x11b4>  // b.none
   18f14:	mov	x0, x19
   18f18:	ldr	x20, [x19, #-16]!
   18f1c:	ldr	x1, [x19, #8]
   18f20:	cbz	x1, 18f38 <set_program_name@@Base+0x1208>
   18f24:	ldr	x1, [x21, #24]
   18f28:	cbz	x1, 18f04 <set_program_name@@Base+0x11d4>
   18f2c:	ldr	x0, [x20, #40]
   18f30:	blr	x1
   18f34:	b	18f04 <set_program_name@@Base+0x11d4>
   18f38:	str	x23, [x19, #8]
   18f3c:	ldr	x1, [x20, #8]
   18f40:	mov	x19, x0
   18f44:	b	18ec4 <set_program_name@@Base+0x1194>
   18f48:	stp	x29, x30, [sp, #-32]!
   18f4c:	mov	x29, sp
   18f50:	stp	x19, x20, [sp, #16]
   18f54:	mov	x20, x0
   18f58:	mov	x19, x1
   18f5c:	ldr	x3, [x1, #16]
   18f60:	ldr	x1, [x1]
   18f64:	cbz	x1, 19048 <set_program_name@@Base+0x1318>
   18f68:	ldr	x0, [x19, #8]
   18f6c:	cbz	x0, 190b0 <set_program_name@@Base+0x1380>
   18f70:	mov	x2, x1
   18f74:	ldr	x1, [x1, #8]
   18f78:	cbnz	x1, 18f70 <set_program_name@@Base+0x1240>
   18f7c:	ldr	x5, [x2, #16]
   18f80:	ldr	x1, [x2]
   18f84:	ldr	w6, [x2, #24]
   18f88:	cmp	x19, x5
   18f8c:	b.eq	18f9c <set_program_name@@Base+0x126c>  // b.none
   18f90:	cbz	x1, 18f98 <set_program_name@@Base+0x1268>
   18f94:	str	x5, [x1, #16]
   18f98:	str	x1, [x5, #8]
   18f9c:	mov	x4, x5
   18fa0:	ldr	x0, [x4, #32]
   18fa4:	sub	x0, x0, #0x1
   18fa8:	str	x0, [x4, #32]
   18fac:	ldr	x4, [x4, #16]
   18fb0:	cbnz	x4, 18fa0 <set_program_name@@Base+0x1270>
   18fb4:	cmp	x19, x5
   18fb8:	b.eq	18fc8 <set_program_name@@Base+0x1298>  // b.none
   18fbc:	ldr	x0, [x19]
   18fc0:	str	x0, [x2]
   18fc4:	str	x2, [x0, #16]
   18fc8:	ldr	x0, [x19, #8]
   18fcc:	str	x0, [x2, #8]
   18fd0:	str	x2, [x0, #16]
   18fd4:	ldr	w0, [x19, #24]
   18fd8:	str	w0, [x2, #24]
   18fdc:	ldr	x0, [x19, #32]
   18fe0:	str	x0, [x2, #32]
   18fe4:	str	x3, [x2, #16]
   18fe8:	cbz	x3, 190f4 <set_program_name@@Base+0x13c4>
   18fec:	ldr	x0, [x3]
   18ff0:	cmp	x19, x0
   18ff4:	b.eq	190fc <set_program_name@@Base+0x13cc>  // b.none
   18ff8:	str	x2, [x3, #8]
   18ffc:	cbnz	w6, 19020 <set_program_name@@Base+0x12f0>
   19000:	cbz	x1, 19010 <set_program_name@@Base+0x12e0>
   19004:	ldr	w0, [x1, #24]
   19008:	cmp	w0, #0x1
   1900c:	b.eq	19104 <set_program_name@@Base+0x13d4>  // b.none
   19010:	cmp	x19, x5
   19014:	csel	x2, x5, x2, ne  // ne = any
   19018:	mov	x0, x20
   1901c:	bl	186a8 <set_program_name@@Base+0x978>
   19020:	ldr	x1, [x20, #24]
   19024:	cbz	x1, 19030 <set_program_name@@Base+0x1300>
   19028:	ldr	x0, [x19, #40]
   1902c:	blr	x1
   19030:	mov	x0, x19
   19034:	bl	aa50 <free@plt>
   19038:	mov	w0, #0x1                   	// #1
   1903c:	ldp	x19, x20, [sp, #16]
   19040:	ldp	x29, x30, [sp], #32
   19044:	ret
   19048:	ldr	x2, [x19, #8]
   1904c:	cbz	x2, 19058 <set_program_name@@Base+0x1328>
   19050:	str	x3, [x2, #16]
   19054:	str	wzr, [x2, #24]
   19058:	cbz	x3, 190a0 <set_program_name@@Base+0x1370>
   1905c:	ldr	x0, [x3]
   19060:	cmp	x19, x0
   19064:	b.eq	190a8 <set_program_name@@Base+0x1378>  // b.none
   19068:	str	x2, [x3, #8]
   1906c:	mov	x1, x3
   19070:	ldr	x0, [x1, #32]
   19074:	sub	x0, x0, #0x1
   19078:	str	x0, [x1, #32]
   1907c:	ldr	x1, [x1, #16]
   19080:	cbnz	x1, 19070 <set_program_name@@Base+0x1340>
   19084:	cbnz	x2, 19020 <set_program_name@@Base+0x12f0>
   19088:	ldr	w0, [x19, #24]
   1908c:	cbnz	w0, 19020 <set_program_name@@Base+0x12f0>
   19090:	mov	x2, x3
   19094:	mov	x0, x20
   19098:	bl	186a8 <set_program_name@@Base+0x978>
   1909c:	b	19020 <set_program_name@@Base+0x12f0>
   190a0:	str	x2, [x20, #40]
   190a4:	b	19020 <set_program_name@@Base+0x12f0>
   190a8:	str	x2, [x3]
   190ac:	b	1906c <set_program_name@@Base+0x133c>
   190b0:	str	x3, [x1, #16]
   190b4:	str	wzr, [x1, #24]
   190b8:	cbz	x3, 190e4 <set_program_name@@Base+0x13b4>
   190bc:	ldr	x0, [x3]
   190c0:	cmp	x19, x0
   190c4:	b.eq	190ec <set_program_name@@Base+0x13bc>  // b.none
   190c8:	str	x1, [x3, #8]
   190cc:	ldr	x0, [x3, #32]
   190d0:	sub	x0, x0, #0x1
   190d4:	str	x0, [x3, #32]
   190d8:	ldr	x3, [x3, #16]
   190dc:	cbnz	x3, 190cc <set_program_name@@Base+0x139c>
   190e0:	b	19020 <set_program_name@@Base+0x12f0>
   190e4:	str	x1, [x20, #40]
   190e8:	b	19020 <set_program_name@@Base+0x12f0>
   190ec:	str	x1, [x3]
   190f0:	b	190cc <set_program_name@@Base+0x139c>
   190f4:	str	x2, [x20, #40]
   190f8:	b	18ffc <set_program_name@@Base+0x12cc>
   190fc:	str	x2, [x3]
   19100:	b	18ffc <set_program_name@@Base+0x12cc>
   19104:	str	wzr, [x1, #24]
   19108:	b	19020 <set_program_name@@Base+0x12f0>
   1910c:	stp	x29, x30, [sp, #-32]!
   19110:	mov	x29, sp
   19114:	str	x19, [sp, #16]
   19118:	mov	x19, x0
   1911c:	bl	18554 <set_program_name@@Base+0x824>
   19120:	cbz	x0, 19140 <set_program_name@@Base+0x1410>
   19124:	mov	x1, x0
   19128:	mov	x0, x19
   1912c:	bl	18f48 <set_program_name@@Base+0x1218>
   19130:	and	w0, w0, #0xff
   19134:	ldr	x19, [sp, #16]
   19138:	ldp	x29, x30, [sp], #32
   1913c:	ret
   19140:	mov	w0, #0x0                   	// #0
   19144:	b	19134 <set_program_name@@Base+0x1404>
   19148:	stp	x29, x30, [sp, #-32]!
   1914c:	mov	x29, sp
   19150:	str	x19, [sp, #16]
   19154:	mov	x19, x0
   19158:	ldr	x0, [x0, #40]
   1915c:	cbz	x0, 19190 <set_program_name@@Base+0x1460>
   19160:	mov	x3, x1
   19164:	ldr	x2, [x0, #32]
   19168:	mov	x1, #0x0                   	// #0
   1916c:	mov	x0, x19
   19170:	bl	18c54 <set_program_name@@Base+0xf24>
   19174:	mov	x1, x0
   19178:	mov	w0, #0x0                   	// #0
   1917c:	cbz	x1, 19194 <set_program_name@@Base+0x1464>
   19180:	mov	x0, x19
   19184:	bl	18f48 <set_program_name@@Base+0x1218>
   19188:	and	w0, w0, #0xff
   1918c:	b	19194 <set_program_name@@Base+0x1464>
   19190:	mov	w0, #0x0                   	// #0
   19194:	ldr	x19, [sp, #16]
   19198:	ldp	x29, x30, [sp], #32
   1919c:	ret
   191a0:	stp	x29, x30, [sp, #-32]!
   191a4:	mov	x29, sp
   191a8:	str	x19, [sp, #16]
   191ac:	mov	x19, x0
   191b0:	ldr	x0, [x0, #40]
   191b4:	cbz	x0, 191e0 <set_program_name@@Base+0x14b0>
   191b8:	ldr	x2, [x0, #32]
   191bc:	cmp	x2, x1
   191c0:	b.ls	191e0 <set_program_name@@Base+0x14b0>  // b.plast
   191c4:	bl	17fac <set_program_name@@Base+0x27c>
   191c8:	mov	x1, x0
   191cc:	mov	x0, x19
   191d0:	bl	18f48 <set_program_name@@Base+0x1218>
   191d4:	ldr	x19, [sp, #16]
   191d8:	ldp	x29, x30, [sp], #32
   191dc:	ret
   191e0:	bl	a900 <abort@plt>
   191e4:	stp	x29, x30, [sp, #-32]!
   191e8:	mov	x29, sp
   191ec:	str	x19, [sp, #16]
   191f0:	mov	x19, x0
   191f4:	ldr	x0, [x0]
   191f8:	cbz	x0, 19200 <set_program_name@@Base+0x14d0>
   191fc:	bl	191e4 <set_program_name@@Base+0x14b4>
   19200:	ldr	x0, [x19, #8]
   19204:	cbz	x0, 1920c <set_program_name@@Base+0x14dc>
   19208:	bl	191e4 <set_program_name@@Base+0x14b4>
   1920c:	mov	x0, x19
   19210:	bl	aa50 <free@plt>
   19214:	ldr	x19, [sp, #16]
   19218:	ldp	x29, x30, [sp], #32
   1921c:	ret
   19220:	stp	x29, x30, [sp, #-48]!
   19224:	mov	x29, sp
   19228:	stp	x19, x20, [sp, #16]
   1922c:	stp	x21, x22, [sp, #32]
   19230:	mov	x21, x0
   19234:	mov	x19, x1
   19238:	mov	x22, x2
   1923c:	mov	x0, #0x30                  	// #48
   19240:	bl	a5f0 <malloc@plt>
   19244:	mov	x20, x0
   19248:	cbz	x0, 192a4 <set_program_name@@Base+0x1574>
   1924c:	str	xzr, [x0]
   19250:	str	xzr, [x0, #8]
   19254:	mov	x0, #0x1                   	// #1
   19258:	str	x0, [x20, #32]
   1925c:	str	x22, [x20, #40]
   19260:	ldr	x2, [x19, #8]
   19264:	cbz	x2, 192b8 <set_program_name@@Base+0x1588>
   19268:	mov	x19, x2
   1926c:	ldr	x2, [x2]
   19270:	cbnz	x2, 19268 <set_program_name@@Base+0x1538>
   19274:	str	x20, [x19]
   19278:	str	x19, [x20, #16]
   1927c:	mov	x2, x19
   19280:	ldr	x3, [x2, #32]
   19284:	add	x3, x3, #0x1
   19288:	str	x3, [x2, #32]
   1928c:	ldr	x2, [x2, #16]
   19290:	cbnz	x2, 19280 <set_program_name@@Base+0x1550>
   19294:	mov	x2, x19
   19298:	mov	x1, x20
   1929c:	mov	x0, x21
   192a0:	bl	18900 <set_program_name@@Base+0xbd0>
   192a4:	mov	x0, x20
   192a8:	ldp	x19, x20, [sp, #16]
   192ac:	ldp	x21, x22, [sp, #32]
   192b0:	ldp	x29, x30, [sp], #48
   192b4:	ret
   192b8:	str	x20, [x19, #8]
   192bc:	b	19278 <set_program_name@@Base+0x1548>
   192c0:	stp	x29, x30, [sp, #-48]!
   192c4:	mov	x29, sp
   192c8:	stp	x19, x20, [sp, #16]
   192cc:	stp	x21, x22, [sp, #32]
   192d0:	mov	x21, x0
   192d4:	mov	x19, x1
   192d8:	mov	x22, x2
   192dc:	mov	x0, #0x30                  	// #48
   192e0:	bl	a5f0 <malloc@plt>
   192e4:	mov	x20, x0
   192e8:	cbz	x0, 19344 <set_program_name@@Base+0x1614>
   192ec:	str	xzr, [x0]
   192f0:	str	xzr, [x0, #8]
   192f4:	mov	x0, #0x1                   	// #1
   192f8:	str	x0, [x20, #32]
   192fc:	str	x22, [x20, #40]
   19300:	ldr	x2, [x19]
   19304:	cbz	x2, 19358 <set_program_name@@Base+0x1628>
   19308:	mov	x19, x2
   1930c:	ldr	x2, [x2, #8]
   19310:	cbnz	x2, 19308 <set_program_name@@Base+0x15d8>
   19314:	str	x20, [x19, #8]
   19318:	str	x19, [x20, #16]
   1931c:	mov	x2, x19
   19320:	ldr	x3, [x2, #32]
   19324:	add	x3, x3, #0x1
   19328:	str	x3, [x2, #32]
   1932c:	ldr	x2, [x2, #16]
   19330:	cbnz	x2, 19320 <set_program_name@@Base+0x15f0>
   19334:	mov	x2, x19
   19338:	mov	x1, x20
   1933c:	mov	x0, x21
   19340:	bl	18900 <set_program_name@@Base+0xbd0>
   19344:	mov	x0, x20
   19348:	ldp	x19, x20, [sp, #16]
   1934c:	ldp	x21, x22, [sp, #32]
   19350:	ldp	x29, x30, [sp], #48
   19354:	ret
   19358:	str	x20, [x19]
   1935c:	b	19318 <set_program_name@@Base+0x15e8>
   19360:	stp	x29, x30, [sp, #-48]!
   19364:	mov	x29, sp
   19368:	stp	x19, x20, [sp, #16]
   1936c:	str	x21, [sp, #32]
   19370:	mov	x20, x0
   19374:	mov	x21, x1
   19378:	mov	x0, #0x30                  	// #48
   1937c:	bl	a5f0 <malloc@plt>
   19380:	mov	x19, x0
   19384:	cbz	x0, 193dc <set_program_name@@Base+0x16ac>
   19388:	str	xzr, [x0]
   1938c:	str	xzr, [x0, #8]
   19390:	mov	x0, #0x1                   	// #1
   19394:	str	x0, [x19, #32]
   19398:	str	x21, [x19, #40]
   1939c:	ldr	x1, [x20, #40]
   193a0:	cbz	x1, 193f0 <set_program_name@@Base+0x16c0>
   193a4:	mov	x2, x1
   193a8:	ldr	x1, [x1, #8]
   193ac:	cbnz	x1, 193a4 <set_program_name@@Base+0x1674>
   193b0:	str	x19, [x2, #8]
   193b4:	str	x2, [x19, #16]
   193b8:	mov	x1, x2
   193bc:	ldr	x3, [x1, #32]
   193c0:	add	x3, x3, #0x1
   193c4:	str	x3, [x1, #32]
   193c8:	ldr	x1, [x1, #16]
   193cc:	cbnz	x1, 193bc <set_program_name@@Base+0x168c>
   193d0:	mov	x1, x19
   193d4:	mov	x0, x20
   193d8:	bl	18900 <set_program_name@@Base+0xbd0>
   193dc:	mov	x0, x19
   193e0:	ldp	x19, x20, [sp, #16]
   193e4:	ldr	x21, [sp, #32]
   193e8:	ldp	x29, x30, [sp], #48
   193ec:	ret
   193f0:	str	wzr, [x19, #24]
   193f4:	str	x19, [x20, #40]
   193f8:	str	xzr, [x19, #16]
   193fc:	b	193dc <set_program_name@@Base+0x16ac>
   19400:	stp	x29, x30, [sp, #-32]!
   19404:	mov	x29, sp
   19408:	stp	x19, x20, [sp, #16]
   1940c:	mov	x19, x0
   19410:	mov	x20, x2
   19414:	ldr	x0, [x0, #40]
   19418:	mov	x2, #0x0                   	// #0
   1941c:	cbz	x0, 19424 <set_program_name@@Base+0x16f4>
   19420:	ldr	x2, [x0, #32]
   19424:	cmp	x2, x1
   19428:	b.cc	19450 <set_program_name@@Base+0x1720>  // b.lo, b.ul, b.last
   1942c:	b.eq	19454 <set_program_name@@Base+0x1724>  // b.none
   19430:	bl	17fac <set_program_name@@Base+0x27c>
   19434:	mov	x2, x20
   19438:	mov	x1, x0
   1943c:	mov	x0, x19
   19440:	bl	192c0 <set_program_name@@Base+0x1590>
   19444:	ldp	x19, x20, [sp, #16]
   19448:	ldp	x29, x30, [sp], #32
   1944c:	ret
   19450:	bl	a900 <abort@plt>
   19454:	mov	x1, x20
   19458:	mov	x0, x19
   1945c:	bl	19360 <set_program_name@@Base+0x1630>
   19460:	b	19444 <set_program_name@@Base+0x1714>
   19464:	stp	x29, x30, [sp, #-48]!
   19468:	mov	x29, sp
   1946c:	stp	x19, x20, [sp, #16]
   19470:	str	x21, [sp, #32]
   19474:	mov	x20, x0
   19478:	mov	x21, x1
   1947c:	mov	x0, #0x30                  	// #48
   19480:	bl	a5f0 <malloc@plt>
   19484:	mov	x19, x0
   19488:	cbz	x0, 194e0 <set_program_name@@Base+0x17b0>
   1948c:	str	xzr, [x0]
   19490:	str	xzr, [x0, #8]
   19494:	mov	x0, #0x1                   	// #1
   19498:	str	x0, [x19, #32]
   1949c:	str	x21, [x19, #40]
   194a0:	ldr	x1, [x20, #40]
   194a4:	cbz	x1, 194f4 <set_program_name@@Base+0x17c4>
   194a8:	mov	x2, x1
   194ac:	ldr	x1, [x1]
   194b0:	cbnz	x1, 194a8 <set_program_name@@Base+0x1778>
   194b4:	str	x19, [x2]
   194b8:	str	x2, [x19, #16]
   194bc:	mov	x1, x2
   194c0:	ldr	x3, [x1, #32]
   194c4:	add	x3, x3, #0x1
   194c8:	str	x3, [x1, #32]
   194cc:	ldr	x1, [x1, #16]
   194d0:	cbnz	x1, 194c0 <set_program_name@@Base+0x1790>
   194d4:	mov	x1, x19
   194d8:	mov	x0, x20
   194dc:	bl	18900 <set_program_name@@Base+0xbd0>
   194e0:	mov	x0, x19
   194e4:	ldp	x19, x20, [sp, #16]
   194e8:	ldr	x21, [sp, #32]
   194ec:	ldp	x29, x30, [sp], #48
   194f0:	ret
   194f4:	str	wzr, [x19, #24]
   194f8:	str	x19, [x20, #40]
   194fc:	str	xzr, [x19, #16]
   19500:	b	194e0 <set_program_name@@Base+0x17b0>
   19504:	stp	x29, x30, [sp, #-48]!
   19508:	mov	x29, sp
   1950c:	stp	x19, x20, [sp, #16]
   19510:	stp	x21, x22, [sp, #32]
   19514:	mov	x22, x0
   19518:	mov	x21, x1
   1951c:	mov	x20, x2
   19520:	ldr	x19, [x0, #40]
   19524:	cbnz	x19, 19540 <set_program_name@@Base+0x1810>
   19528:	mov	x1, x2
   1952c:	bl	19464 <set_program_name@@Base+0x1734>
   19530:	b	19598 <set_program_name@@Base+0x1868>
   19534:	ldr	x3, [x19, #8]
   19538:	cbz	x3, 19574 <set_program_name@@Base+0x1844>
   1953c:	mov	x19, x3
   19540:	mov	x1, x20
   19544:	ldr	x0, [x19, #40]
   19548:	blr	x21
   1954c:	tbnz	w0, #31, 19534 <set_program_name@@Base+0x1804>
   19550:	cmp	w0, #0x0
   19554:	b.le	19588 <set_program_name@@Base+0x1858>
   19558:	ldr	x3, [x19]
   1955c:	cbnz	x3, 1953c <set_program_name@@Base+0x180c>
   19560:	mov	x2, x20
   19564:	mov	x1, x19
   19568:	mov	x0, x22
   1956c:	bl	192c0 <set_program_name@@Base+0x1590>
   19570:	b	19598 <set_program_name@@Base+0x1868>
   19574:	mov	x2, x20
   19578:	mov	x1, x19
   1957c:	mov	x0, x22
   19580:	bl	19220 <set_program_name@@Base+0x14f0>
   19584:	b	19598 <set_program_name@@Base+0x1868>
   19588:	mov	x2, x20
   1958c:	mov	x1, x19
   19590:	mov	x0, x22
   19594:	bl	192c0 <set_program_name@@Base+0x1590>
   19598:	ldp	x19, x20, [sp, #16]
   1959c:	ldp	x21, x22, [sp, #32]
   195a0:	ldp	x29, x30, [sp], #48
   195a4:	ret
   195a8:	stp	x29, x30, [sp, #-64]!
   195ac:	mov	x29, sp
   195b0:	stp	x19, x20, [sp, #16]
   195b4:	stp	x21, x22, [sp, #32]
   195b8:	stp	x23, x24, [sp, #48]
   195bc:	mov	w22, w0
   195c0:	mov	x20, x1
   195c4:	mov	x21, x2
   195c8:	sub	x24, x1, #0x1
   195cc:	mov	x0, #0x30                  	// #48
   195d0:	bl	a5f0 <malloc@plt>
   195d4:	mov	x19, x0
   195d8:	cbz	x0, 19614 <set_program_name@@Base+0x18e4>
   195dc:	lsr	x23, x24, #1
   195e0:	cmp	x24, #0x1
   195e4:	b.hi	1962c <set_program_name@@Base+0x18fc>  // b.pmore
   195e8:	str	xzr, [x0]
   195ec:	lsl	x2, x23, #3
   195f0:	ldr	x0, [x21, x23, lsl #3]
   195f4:	str	x0, [x19, #40]
   195f8:	cmp	x20, #0x1
   195fc:	b.hi	1964c <set_program_name@@Base+0x191c>  // b.pmore
   19600:	str	xzr, [x19, #8]
   19604:	cmp	w22, #0x0
   19608:	cset	w0, eq  // eq = none
   1960c:	str	w0, [x19, #24]
   19610:	str	x20, [x19, #32]
   19614:	mov	x0, x19
   19618:	ldp	x19, x20, [sp, #16]
   1961c:	ldp	x21, x22, [sp, #32]
   19620:	ldp	x23, x24, [sp, #48]
   19624:	ldp	x29, x30, [sp], #64
   19628:	ret
   1962c:	mov	x2, x21
   19630:	mov	x1, x23
   19634:	sub	w0, w22, #0x1
   19638:	bl	195a8 <set_program_name@@Base+0x1878>
   1963c:	str	x0, [x19]
   19640:	cbz	x0, 1967c <set_program_name@@Base+0x194c>
   19644:	str	x19, [x0, #16]
   19648:	b	195ec <set_program_name@@Base+0x18bc>
   1964c:	add	x2, x2, #0x8
   19650:	add	x2, x21, x2
   19654:	lsr	x1, x20, #1
   19658:	sub	w0, w22, #0x1
   1965c:	bl	195a8 <set_program_name@@Base+0x1878>
   19660:	str	x0, [x19, #8]
   19664:	cbz	x0, 19670 <set_program_name@@Base+0x1940>
   19668:	str	x19, [x0, #16]
   1966c:	b	19604 <set_program_name@@Base+0x18d4>
   19670:	ldr	x0, [x19]
   19674:	cbz	x0, 1967c <set_program_name@@Base+0x194c>
   19678:	bl	191e4 <set_program_name@@Base+0x14b4>
   1967c:	mov	x0, x19
   19680:	bl	aa50 <free@plt>
   19684:	mov	x19, #0x0                   	// #0
   19688:	b	19614 <set_program_name@@Base+0x18e4>
   1968c:	stp	x29, x30, [sp, #-80]!
   19690:	mov	x29, sp
   19694:	stp	x19, x20, [sp, #16]
   19698:	stp	x21, x22, [sp, #32]
   1969c:	stp	x23, x24, [sp, #48]
   196a0:	stp	x25, x26, [sp, #64]
   196a4:	mov	x24, x0
   196a8:	mov	x23, x1
   196ac:	mov	x22, x2
   196b0:	mov	x21, x3
   196b4:	and	w26, w4, #0xff
   196b8:	mov	x20, x5
   196bc:	mov	x25, x6
   196c0:	mov	x0, #0x30                  	// #48
   196c4:	bl	a5f0 <malloc@plt>
   196c8:	mov	x19, x0
   196cc:	cbz	x0, 19744 <set_program_name@@Base+0x1a14>
   196d0:	str	x24, [x0]
   196d4:	str	x23, [x0, #8]
   196d8:	str	x22, [x0, #16]
   196dc:	str	x21, [x0, #24]
   196e0:	strb	w26, [x0, #32]
   196e4:	cbz	x20, 19740 <set_program_name@@Base+0x1a10>
   196e8:	add	x1, x20, #0x1
   196ec:	cmp	x1, #0x1
   196f0:	b.ls	19728 <set_program_name@@Base+0x19f8>  // b.plast
   196f4:	mov	w0, #0x0                   	// #0
   196f8:	add	w0, w0, #0x1
   196fc:	lsr	x1, x1, #1
   19700:	cmp	x1, #0x1
   19704:	b.hi	196f8 <set_program_name@@Base+0x19c8>  // b.pmore
   19708:	mov	x2, x25
   1970c:	mov	x1, x20
   19710:	bl	195a8 <set_program_name@@Base+0x1878>
   19714:	mov	x20, x0
   19718:	str	x0, [x19, #40]
   1971c:	cbz	x0, 19730 <set_program_name@@Base+0x1a00>
   19720:	str	xzr, [x0, #16]
   19724:	b	19744 <set_program_name@@Base+0x1a14>
   19728:	mov	w0, #0x0                   	// #0
   1972c:	b	19708 <set_program_name@@Base+0x19d8>
   19730:	mov	x0, x19
   19734:	bl	aa50 <free@plt>
   19738:	mov	x19, x20
   1973c:	b	19744 <set_program_name@@Base+0x1a14>
   19740:	str	xzr, [x0, #40]
   19744:	mov	x0, x19
   19748:	ldp	x19, x20, [sp, #16]
   1974c:	ldp	x21, x22, [sp, #32]
   19750:	ldp	x23, x24, [sp, #48]
   19754:	ldp	x25, x26, [sp, #64]
   19758:	ldp	x29, x30, [sp], #80
   1975c:	ret
   19760:	stp	x29, x30, [sp, #-64]!
   19764:	mov	x29, sp
   19768:	stp	x19, x20, [sp, #16]
   1976c:	stp	x21, x22, [sp, #32]
   19770:	str	x23, [sp, #48]
   19774:	mov	x22, x0
   19778:	mov	x21, x1
   1977c:	mov	x20, x2
   19780:	mov	x19, x3
   19784:	and	w23, w4, #0xff
   19788:	mov	x0, #0x30                  	// #48
   1978c:	bl	a5f0 <malloc@plt>
   19790:	cbz	x0, 197ac <set_program_name@@Base+0x1a7c>
   19794:	str	x22, [x0]
   19798:	str	x21, [x0, #8]
   1979c:	str	x20, [x0, #16]
   197a0:	str	x19, [x0, #24]
   197a4:	strb	w23, [x0, #32]
   197a8:	str	xzr, [x0, #40]
   197ac:	ldp	x19, x20, [sp, #16]
   197b0:	ldp	x21, x22, [sp, #32]
   197b4:	ldr	x23, [sp, #48]
   197b8:	ldp	x29, x30, [sp], #64
   197bc:	ret

00000000000197c0 <gl_rbtree_list_check_invariants@@Base>:
   197c0:	ldr	x0, [x0, #40]
   197c4:	cbz	x0, 197e0 <gl_rbtree_list_check_invariants@@Base+0x20>
   197c8:	stp	x29, x30, [sp, #-16]!
   197cc:	mov	x29, sp
   197d0:	mov	x1, #0x0                   	// #0
   197d4:	bl	1807c <set_program_name@@Base+0x34c>
   197d8:	ldp	x29, x30, [sp], #16
   197dc:	ret
   197e0:	ret

00000000000197e4 <renameatu@@Base>:
   197e4:	stp	x29, x30, [sp, #-336]!
   197e8:	mov	x29, sp
   197ec:	stp	x19, x20, [sp, #16]
   197f0:	stp	x23, x24, [sp, #48]
   197f4:	stp	x25, x26, [sp, #64]
   197f8:	mov	w25, w0
   197fc:	mov	x23, x1
   19800:	mov	w24, w2
   19804:	mov	x26, x3
   19808:	mov	w20, w4
   1980c:	bl	aa60 <renameat2@plt>
   19810:	mov	w19, w0
   19814:	tbz	w0, #31, 19a20 <renameatu@@Base+0x23c>
   19818:	stp	x21, x22, [sp, #32]
   1981c:	bl	aeb0 <__errno_location@plt>
   19820:	mov	x21, x0
   19824:	ldr	w0, [x0]
   19828:	sub	w1, w0, #0x16
   1982c:	tst	w1, #0xffffffef
   19830:	cset	w22, ne  // ne = any
   19834:	cmp	w0, #0x5f
   19838:	csel	w22, w22, wzr, ne  // ne = any
   1983c:	cbnz	w22, 19a1c <renameatu@@Base+0x238>
   19840:	cbz	w20, 19884 <renameatu@@Base+0xa0>
   19844:	tst	w20, #0xfffffffe
   19848:	b.ne	19918 <renameatu@@Base+0x134>  // b.any
   1984c:	mov	w4, #0x100                 	// #256
   19850:	add	x3, sp, #0xd0
   19854:	mov	x2, x26
   19858:	mov	w1, w24
   1985c:	mov	w0, #0x0                   	// #0
   19860:	bl	afe0 <__fxstatat@plt>
   19864:	cbz	w0, 1992c <renameatu@@Base+0x148>
   19868:	ldr	w0, [x21]
   1986c:	cmp	w0, #0x4b
   19870:	b.eq	1992c <renameatu@@Base+0x148>  // b.none
   19874:	mov	w19, #0xffffffff            	// #-1
   19878:	cmp	w0, #0x2
   1987c:	b.ne	19a38 <renameatu@@Base+0x254>  // b.any
   19880:	mov	w22, #0x1                   	// #1
   19884:	mov	x0, x23
   19888:	bl	a340 <strlen@plt>
   1988c:	mov	x19, x0
   19890:	mov	x0, x26
   19894:	bl	a340 <strlen@plt>
   19898:	cmp	x19, #0x0
   1989c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   198a0:	b.eq	19940 <renameatu@@Base+0x15c>  // b.none
   198a4:	add	x19, x23, x19
   198a8:	ldurb	w2, [x19, #-1]
   198ac:	add	x0, x26, x0
   198b0:	ldurb	w1, [x0, #-1]
   198b4:	cmp	w2, #0x2f
   198b8:	mov	w0, #0x2f                  	// #47
   198bc:	ccmp	w1, w0, #0x4, ne  // ne = any
   198c0:	b.ne	19960 <renameatu@@Base+0x17c>  // b.any
   198c4:	mov	w4, #0x100                 	// #256
   198c8:	add	x3, sp, #0x50
   198cc:	mov	x2, x23
   198d0:	mov	w1, w25
   198d4:	mov	w0, #0x0                   	// #0
   198d8:	bl	afe0 <__fxstatat@plt>
   198dc:	mov	w19, #0xffffffff            	// #-1
   198e0:	cbnz	w0, 19a40 <renameatu@@Base+0x25c>
   198e4:	cbz	w22, 19990 <renameatu@@Base+0x1ac>
   198e8:	ldr	w0, [sp, #96]
   198ec:	and	w0, w0, #0xf000
   198f0:	cmp	w0, #0x4, lsl #12
   198f4:	b.ne	19980 <renameatu@@Base+0x19c>  // b.any
   198f8:	mov	x3, x26
   198fc:	mov	w2, w24
   19900:	mov	x1, x23
   19904:	mov	w0, w25
   19908:	bl	aaa0 <renameat@plt>
   1990c:	mov	w19, w0
   19910:	ldp	x21, x22, [sp, #32]
   19914:	b	19a20 <renameatu@@Base+0x23c>
   19918:	mov	w0, #0x5f                  	// #95
   1991c:	str	w0, [x21]
   19920:	mov	w19, #0xffffffff            	// #-1
   19924:	ldp	x21, x22, [sp, #32]
   19928:	b	19a20 <renameatu@@Base+0x23c>
   1992c:	mov	w0, #0x11                  	// #17
   19930:	str	w0, [x21]
   19934:	mov	w19, #0xffffffff            	// #-1
   19938:	ldp	x21, x22, [sp, #32]
   1993c:	b	19a20 <renameatu@@Base+0x23c>
   19940:	mov	x3, x26
   19944:	mov	w2, w24
   19948:	mov	x1, x23
   1994c:	mov	w0, w25
   19950:	bl	aaa0 <renameat@plt>
   19954:	mov	w19, w0
   19958:	ldp	x21, x22, [sp, #32]
   1995c:	b	19a20 <renameatu@@Base+0x23c>
   19960:	mov	x3, x26
   19964:	mov	w2, w24
   19968:	mov	x1, x23
   1996c:	mov	w0, w25
   19970:	bl	aaa0 <renameat@plt>
   19974:	mov	w19, w0
   19978:	ldp	x21, x22, [sp, #32]
   1997c:	b	19a20 <renameatu@@Base+0x23c>
   19980:	mov	w0, #0x2                   	// #2
   19984:	str	w0, [x21]
   19988:	ldp	x21, x22, [sp, #32]
   1998c:	b	19a20 <renameatu@@Base+0x23c>
   19990:	mov	w4, #0x100                 	// #256
   19994:	add	x3, sp, #0xd0
   19998:	mov	x2, x26
   1999c:	mov	w1, w24
   199a0:	mov	w0, #0x0                   	// #0
   199a4:	bl	afe0 <__fxstatat@plt>
   199a8:	cbz	w0, 199d4 <renameatu@@Base+0x1f0>
   199ac:	ldr	w0, [x21]
   199b0:	mov	w19, #0xffffffff            	// #-1
   199b4:	cmp	w0, #0x2
   199b8:	b.ne	19a48 <renameatu@@Base+0x264>  // b.any
   199bc:	ldr	w0, [sp, #96]
   199c0:	and	w0, w0, #0xf000
   199c4:	cmp	w0, #0x4, lsl #12
   199c8:	b.eq	198f8 <renameatu@@Base+0x114>  // b.none
   199cc:	ldp	x21, x22, [sp, #32]
   199d0:	b	19a20 <renameatu@@Base+0x23c>
   199d4:	ldr	w0, [sp, #224]
   199d8:	and	w0, w0, #0xf000
   199dc:	cmp	w0, #0x4, lsl #12
   199e0:	b.ne	19a08 <renameatu@@Base+0x224>  // b.any
   199e4:	ldr	w0, [sp, #96]
   199e8:	and	w0, w0, #0xf000
   199ec:	cmp	w0, #0x4, lsl #12
   199f0:	b.eq	198f8 <renameatu@@Base+0x114>  // b.none
   199f4:	mov	w0, #0x15                  	// #21
   199f8:	str	w0, [x21]
   199fc:	mov	w19, #0xffffffff            	// #-1
   19a00:	ldp	x21, x22, [sp, #32]
   19a04:	b	19a20 <renameatu@@Base+0x23c>
   19a08:	mov	w0, #0x14                  	// #20
   19a0c:	str	w0, [x21]
   19a10:	mov	w19, #0xffffffff            	// #-1
   19a14:	ldp	x21, x22, [sp, #32]
   19a18:	b	19a20 <renameatu@@Base+0x23c>
   19a1c:	ldp	x21, x22, [sp, #32]
   19a20:	mov	w0, w19
   19a24:	ldp	x19, x20, [sp, #16]
   19a28:	ldp	x23, x24, [sp, #48]
   19a2c:	ldp	x25, x26, [sp, #64]
   19a30:	ldp	x29, x30, [sp], #336
   19a34:	ret
   19a38:	ldp	x21, x22, [sp, #32]
   19a3c:	b	19a20 <renameatu@@Base+0x23c>
   19a40:	ldp	x21, x22, [sp, #32]
   19a44:	b	19a20 <renameatu@@Base+0x23c>
   19a48:	ldp	x21, x22, [sp, #32]
   19a4c:	b	19a20 <renameatu@@Base+0x23c>

0000000000019a50 <same_nameat@@Base>:
   19a50:	stp	x29, x30, [sp, #-336]!
   19a54:	mov	x29, sp
   19a58:	stp	x19, x20, [sp, #16]
   19a5c:	stp	x21, x22, [sp, #32]
   19a60:	stp	x23, x24, [sp, #48]
   19a64:	str	x25, [sp, #64]
   19a68:	mov	w25, w0
   19a6c:	mov	x22, x1
   19a70:	mov	w24, w2
   19a74:	mov	x21, x3
   19a78:	mov	x0, x1
   19a7c:	bl	a780 <last_component@plt>
   19a80:	mov	x19, x0
   19a84:	mov	x0, x21
   19a88:	bl	a780 <last_component@plt>
   19a8c:	mov	x20, x0
   19a90:	mov	x0, x19
   19a94:	bl	a2a0 <base_len@plt>
   19a98:	mov	x23, x0
   19a9c:	mov	x0, x20
   19aa0:	bl	a2a0 <base_len@plt>
   19aa4:	cmp	x23, x0
   19aa8:	b.eq	19acc <same_nameat@@Base+0x7c>  // b.none
   19aac:	mov	w19, #0x0                   	// #0
   19ab0:	mov	w0, w19
   19ab4:	ldp	x19, x20, [sp, #16]
   19ab8:	ldp	x21, x22, [sp, #32]
   19abc:	ldp	x23, x24, [sp, #48]
   19ac0:	ldr	x25, [sp, #64]
   19ac4:	ldp	x29, x30, [sp], #336
   19ac8:	ret
   19acc:	mov	x2, x0
   19ad0:	mov	x1, x20
   19ad4:	mov	x0, x19
   19ad8:	bl	a970 <memcmp@plt>
   19adc:	mov	w19, w0
   19ae0:	cbz	w0, 19b40 <same_nameat@@Base+0xf0>
   19ae4:	mov	w19, #0x0                   	// #0
   19ae8:	b	19ab0 <same_nameat@@Base+0x60>
   19aec:	bl	aeb0 <__errno_location@plt>
   19af0:	mov	x3, x20
   19af4:	adrp	x2, 2c000 <vasnprintf@@Base+0x1378>
   19af8:	add	x2, x2, #0xfd8
   19afc:	ldr	w1, [x0]
   19b00:	mov	w0, #0x1                   	// #1
   19b04:	bl	a360 <error@plt>
   19b08:	b	19b68 <same_nameat@@Base+0x118>
   19b0c:	bl	aeb0 <__errno_location@plt>
   19b10:	mov	x3, x20
   19b14:	adrp	x2, 2c000 <vasnprintf@@Base+0x1378>
   19b18:	add	x2, x2, #0xfd8
   19b1c:	ldr	w1, [x0]
   19b20:	mov	w0, #0x1                   	// #1
   19b24:	bl	a360 <error@plt>
   19b28:	b	19b98 <same_nameat@@Base+0x148>
   19b2c:	ldr	x1, [sp, #80]
   19b30:	ldr	x0, [sp, #208]
   19b34:	cmp	x1, x0
   19b38:	cset	w19, eq  // eq = none
   19b3c:	b	19ba8 <same_nameat@@Base+0x158>
   19b40:	mov	x0, x22
   19b44:	bl	a670 <dir_name@plt>
   19b48:	mov	x20, x0
   19b4c:	mov	w4, #0x100                 	// #256
   19b50:	add	x3, sp, #0x50
   19b54:	mov	x2, x0
   19b58:	mov	w1, w25
   19b5c:	mov	w0, #0x0                   	// #0
   19b60:	bl	afe0 <__fxstatat@plt>
   19b64:	cbnz	w0, 19aec <same_nameat@@Base+0x9c>
   19b68:	mov	x0, x20
   19b6c:	bl	aa50 <free@plt>
   19b70:	mov	x0, x21
   19b74:	bl	a670 <dir_name@plt>
   19b78:	mov	x20, x0
   19b7c:	mov	w4, #0x100                 	// #256
   19b80:	add	x3, sp, #0xd0
   19b84:	mov	x2, x0
   19b88:	mov	w1, w24
   19b8c:	mov	w0, #0x0                   	// #0
   19b90:	bl	afe0 <__fxstatat@plt>
   19b94:	cbnz	w0, 19b0c <same_nameat@@Base+0xbc>
   19b98:	ldr	x1, [sp, #88]
   19b9c:	ldr	x0, [sp, #216]
   19ba0:	cmp	x1, x0
   19ba4:	b.eq	19b2c <same_nameat@@Base+0xdc>  // b.none
   19ba8:	and	w19, w19, #0x1
   19bac:	mov	x0, x20
   19bb0:	bl	aa50 <free@plt>
   19bb4:	b	19ab0 <same_nameat@@Base+0x60>

0000000000019bb8 <same_name@@Base>:
   19bb8:	stp	x29, x30, [sp, #-16]!
   19bbc:	mov	x29, sp
   19bc0:	mov	x3, x1
   19bc4:	mov	w2, #0xffffff9c            	// #-100
   19bc8:	mov	x1, x0
   19bcc:	mov	w0, w2
   19bd0:	bl	a310 <same_nameat@plt>
   19bd4:	ldp	x29, x30, [sp], #16
   19bd8:	ret

0000000000019bdc <save_cwd@@Base>:
   19bdc:	stp	x29, x30, [sp, #-32]!
   19be0:	mov	x29, sp
   19be4:	str	x19, [sp, #16]
   19be8:	mov	x19, x0
   19bec:	str	xzr, [x0, #8]
   19bf0:	mov	w1, #0x80000               	// #524288
   19bf4:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   19bf8:	add	x0, x0, #0xb20
   19bfc:	bl	a640 <open@plt>
   19c00:	str	w0, [x19]
   19c04:	mov	w1, #0x80000               	// #524288
   19c08:	bl	ae40 <fd_safer_flag@plt>
   19c0c:	str	w0, [x19]
   19c10:	tbnz	w0, #31, 19c24 <save_cwd@@Base+0x48>
   19c14:	mov	w0, #0x0                   	// #0
   19c18:	ldr	x19, [sp, #16]
   19c1c:	ldp	x29, x30, [sp], #32
   19c20:	ret
   19c24:	mov	x1, #0x0                   	// #0
   19c28:	mov	x0, #0x0                   	// #0
   19c2c:	bl	a300 <getcwd@plt>
   19c30:	str	x0, [x19, #8]
   19c34:	cmp	x0, #0x0
   19c38:	csetm	w0, eq  // eq = none
   19c3c:	b	19c18 <save_cwd@@Base+0x3c>

0000000000019c40 <restore_cwd@@Base>:
   19c40:	stp	x29, x30, [sp, #-16]!
   19c44:	mov	x29, sp
   19c48:	mov	x1, x0
   19c4c:	ldr	w0, [x0]
   19c50:	tbnz	w0, #31, 19c60 <restore_cwd@@Base+0x20>
   19c54:	bl	a380 <fchdir@plt>
   19c58:	ldp	x29, x30, [sp], #16
   19c5c:	ret
   19c60:	ldr	x0, [x1, #8]
   19c64:	bl	a440 <chdir_long@plt>
   19c68:	b	19c58 <restore_cwd@@Base+0x18>

0000000000019c6c <free_cwd@@Base>:
   19c6c:	stp	x29, x30, [sp, #-32]!
   19c70:	mov	x29, sp
   19c74:	str	x19, [sp, #16]
   19c78:	mov	x19, x0
   19c7c:	ldr	w0, [x0]
   19c80:	tbz	w0, #31, 19c98 <free_cwd@@Base+0x2c>
   19c84:	ldr	x0, [x19, #8]
   19c88:	bl	aa50 <free@plt>
   19c8c:	ldr	x19, [sp, #16]
   19c90:	ldp	x29, x30, [sp], #32
   19c94:	ret
   19c98:	bl	a850 <close@plt>
   19c9c:	b	19c84 <free_cwd@@Base+0x18>

0000000000019ca0 <gl_scratch_buffer_grow@@Base>:
   19ca0:	stp	x29, x30, [sp, #-48]!
   19ca4:	mov	x29, sp
   19ca8:	stp	x19, x20, [sp, #16]
   19cac:	str	x21, [sp, #32]
   19cb0:	mov	x19, x0
   19cb4:	ldr	x20, [x0, #8]
   19cb8:	lsl	x20, x20, #1
   19cbc:	mov	x21, x0
   19cc0:	ldr	x0, [x21], #16
   19cc4:	cmp	x0, x21
   19cc8:	b.eq	19cd0 <gl_scratch_buffer_grow@@Base+0x30>  // b.none
   19ccc:	bl	aa50 <free@plt>
   19cd0:	ldr	x0, [x19, #8]
   19cd4:	cmp	x0, x20
   19cd8:	b.hi	19d04 <gl_scratch_buffer_grow@@Base+0x64>  // b.pmore
   19cdc:	mov	x0, x20
   19ce0:	bl	a5f0 <malloc@plt>
   19ce4:	cbz	x0, 19d10 <gl_scratch_buffer_grow@@Base+0x70>
   19ce8:	str	x0, [x19]
   19cec:	str	x20, [x19, #8]
   19cf0:	mov	w0, #0x1                   	// #1
   19cf4:	ldp	x19, x20, [sp, #16]
   19cf8:	ldr	x21, [sp, #32]
   19cfc:	ldp	x29, x30, [sp], #48
   19d00:	ret
   19d04:	bl	aeb0 <__errno_location@plt>
   19d08:	mov	w1, #0xc                   	// #12
   19d0c:	str	w1, [x0]
   19d10:	str	x21, [x19]
   19d14:	mov	x0, #0x400                 	// #1024
   19d18:	str	x0, [x19, #8]
   19d1c:	mov	w0, #0x0                   	// #0
   19d20:	b	19cf4 <gl_scratch_buffer_grow@@Base+0x54>

0000000000019d24 <gl_scratch_buffer_grow_preserve@@Base>:
   19d24:	stp	x29, x30, [sp, #-64]!
   19d28:	mov	x29, sp
   19d2c:	stp	x19, x20, [sp, #16]
   19d30:	stp	x21, x22, [sp, #32]
   19d34:	str	x23, [sp, #48]
   19d38:	mov	x19, x0
   19d3c:	ldr	x23, [x0, #8]
   19d40:	lsl	x22, x23, #1
   19d44:	mov	x21, x0
   19d48:	ldr	x0, [x21], #16
   19d4c:	cmp	x0, x21
   19d50:	b.eq	19d8c <gl_scratch_buffer_grow_preserve@@Base+0x68>  // b.none
   19d54:	cmp	x23, x22
   19d58:	b.hi	19dac <gl_scratch_buffer_grow_preserve@@Base+0x88>  // b.pmore
   19d5c:	mov	x1, x22
   19d60:	bl	a7e0 <realloc@plt>
   19d64:	mov	x20, x0
   19d68:	cbz	x0, 19db8 <gl_scratch_buffer_grow_preserve@@Base+0x94>
   19d6c:	str	x20, [x19]
   19d70:	str	x22, [x19, #8]
   19d74:	mov	w0, #0x1                   	// #1
   19d78:	ldp	x19, x20, [sp, #16]
   19d7c:	ldp	x21, x22, [sp, #32]
   19d80:	ldr	x23, [sp, #48]
   19d84:	ldp	x29, x30, [sp], #64
   19d88:	ret
   19d8c:	mov	x0, x22
   19d90:	bl	a5f0 <malloc@plt>
   19d94:	mov	x20, x0
   19d98:	cbz	x0, 19dd4 <gl_scratch_buffer_grow_preserve@@Base+0xb0>
   19d9c:	mov	x2, x23
   19da0:	mov	x1, x21
   19da4:	bl	a2c0 <memcpy@plt>
   19da8:	b	19d6c <gl_scratch_buffer_grow_preserve@@Base+0x48>
   19dac:	bl	aeb0 <__errno_location@plt>
   19db0:	mov	w1, #0xc                   	// #12
   19db4:	str	w1, [x0]
   19db8:	ldr	x0, [x19]
   19dbc:	bl	aa50 <free@plt>
   19dc0:	str	x21, [x19]
   19dc4:	mov	x0, #0x400                 	// #1024
   19dc8:	str	x0, [x19, #8]
   19dcc:	mov	w0, #0x0                   	// #0
   19dd0:	b	19d78 <gl_scratch_buffer_grow_preserve@@Base+0x54>
   19dd4:	mov	w0, #0x0                   	// #0
   19dd8:	b	19d78 <gl_scratch_buffer_grow_preserve@@Base+0x54>

0000000000019ddc <gl_scratch_buffer_set_array_size@@Base>:
   19ddc:	stp	x29, x30, [sp, #-48]!
   19de0:	mov	x29, sp
   19de4:	stp	x19, x20, [sp, #16]
   19de8:	mov	x19, x0
   19dec:	mul	x20, x1, x2
   19df0:	orr	x0, x1, x2
   19df4:	cmp	xzr, x0, lsr #32
   19df8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   19dfc:	b.ne	19e50 <gl_scratch_buffer_set_array_size@@Base+0x74>  // b.any
   19e00:	ldr	x1, [x19, #8]
   19e04:	mov	w0, #0x1                   	// #1
   19e08:	cmp	x1, x20
   19e0c:	b.cs	19e44 <gl_scratch_buffer_set_array_size@@Base+0x68>  // b.hs, b.nlast
   19e10:	str	x21, [sp, #32]
   19e14:	mov	x21, x19
   19e18:	ldr	x0, [x21], #16
   19e1c:	cmp	x0, x21
   19e20:	b.eq	19e28 <gl_scratch_buffer_set_array_size@@Base+0x4c>  // b.none
   19e24:	bl	aa50 <free@plt>
   19e28:	mov	x0, x20
   19e2c:	bl	a5f0 <malloc@plt>
   19e30:	cbz	x0, 19e90 <gl_scratch_buffer_set_array_size@@Base+0xb4>
   19e34:	str	x0, [x19]
   19e38:	str	x20, [x19, #8]
   19e3c:	mov	w0, #0x1                   	// #1
   19e40:	ldr	x21, [sp, #32]
   19e44:	ldp	x19, x20, [sp, #16]
   19e48:	ldp	x29, x30, [sp], #48
   19e4c:	ret
   19e50:	udiv	x1, x20, x1
   19e54:	cmp	x1, x2
   19e58:	b.eq	19e00 <gl_scratch_buffer_set_array_size@@Base+0x24>  // b.none
   19e5c:	mov	x20, x19
   19e60:	ldr	x0, [x20], #16
   19e64:	cmp	x0, x20
   19e68:	b.eq	19e70 <gl_scratch_buffer_set_array_size@@Base+0x94>  // b.none
   19e6c:	bl	aa50 <free@plt>
   19e70:	str	x20, [x19]
   19e74:	mov	x0, #0x400                 	// #1024
   19e78:	str	x0, [x19, #8]
   19e7c:	bl	aeb0 <__errno_location@plt>
   19e80:	mov	w1, #0xc                   	// #12
   19e84:	str	w1, [x0]
   19e88:	mov	w0, #0x0                   	// #0
   19e8c:	b	19e44 <gl_scratch_buffer_set_array_size@@Base+0x68>
   19e90:	str	x21, [x19]
   19e94:	mov	x0, #0x400                 	// #1024
   19e98:	str	x0, [x19, #8]
   19e9c:	mov	w0, #0x0                   	// #0
   19ea0:	ldr	x21, [sp, #32]
   19ea4:	b	19e44 <gl_scratch_buffer_set_array_size@@Base+0x68>

0000000000019ea8 <gl_set_nx_create_empty@@Base>:
   19ea8:	stp	x29, x30, [sp, #-16]!
   19eac:	mov	x29, sp
   19eb0:	ldr	x4, [x0]
   19eb4:	blr	x4
   19eb8:	ldp	x29, x30, [sp], #16
   19ebc:	ret

0000000000019ec0 <gl_set_size@@Base>:
   19ec0:	stp	x29, x30, [sp, #-16]!
   19ec4:	mov	x29, sp
   19ec8:	ldr	x1, [x0]
   19ecc:	ldr	x1, [x1, #8]
   19ed0:	blr	x1
   19ed4:	ldp	x29, x30, [sp], #16
   19ed8:	ret

0000000000019edc <gl_set_search@@Base>:
   19edc:	stp	x29, x30, [sp, #-16]!
   19ee0:	mov	x29, sp
   19ee4:	ldr	x2, [x0]
   19ee8:	ldr	x2, [x2, #16]
   19eec:	blr	x2
   19ef0:	ldp	x29, x30, [sp], #16
   19ef4:	ret

0000000000019ef8 <gl_set_nx_add@@Base>:
   19ef8:	stp	x29, x30, [sp, #-16]!
   19efc:	mov	x29, sp
   19f00:	ldr	x2, [x0]
   19f04:	ldr	x2, [x2, #24]
   19f08:	blr	x2
   19f0c:	ldp	x29, x30, [sp], #16
   19f10:	ret

0000000000019f14 <gl_set_remove@@Base>:
   19f14:	stp	x29, x30, [sp, #-16]!
   19f18:	mov	x29, sp
   19f1c:	ldr	x2, [x0]
   19f20:	ldr	x2, [x2, #32]
   19f24:	blr	x2
   19f28:	ldp	x29, x30, [sp], #16
   19f2c:	ret

0000000000019f30 <gl_set_free@@Base>:
   19f30:	stp	x29, x30, [sp, #-16]!
   19f34:	mov	x29, sp
   19f38:	ldr	x1, [x0]
   19f3c:	ldr	x1, [x1, #40]
   19f40:	blr	x1
   19f44:	ldp	x29, x30, [sp], #16
   19f48:	ret

0000000000019f4c <gl_set_iterator@@Base>:
   19f4c:	stp	x29, x30, [sp, #-16]!
   19f50:	mov	x29, sp
   19f54:	ldr	x1, [x0]
   19f58:	ldr	x1, [x1, #48]
   19f5c:	blr	x1
   19f60:	ldp	x29, x30, [sp], #16
   19f64:	ret

0000000000019f68 <gl_set_iterator_next@@Base>:
   19f68:	stp	x29, x30, [sp, #-16]!
   19f6c:	mov	x29, sp
   19f70:	ldr	x2, [x0]
   19f74:	ldr	x2, [x2, #56]
   19f78:	blr	x2
   19f7c:	ldp	x29, x30, [sp], #16
   19f80:	ret

0000000000019f84 <gl_set_iterator_free@@Base>:
   19f84:	stp	x29, x30, [sp, #-16]!
   19f88:	mov	x29, sp
   19f8c:	ldr	x1, [x0]
   19f90:	ldr	x1, [x1, #64]
   19f94:	blr	x1
   19f98:	ldp	x29, x30, [sp], #16
   19f9c:	ret

0000000000019fa0 <get_handler@@Base>:
   19fa0:	ldr	x0, [x0]
   19fa4:	ret

0000000000019fa8 <gl_sockets_startup@@Base>:
   19fa8:	mov	w0, #0x0                   	// #0
   19fac:	ret

0000000000019fb0 <gl_sockets_cleanup@@Base>:
   19fb0:	mov	w0, #0x0                   	// #0
   19fb4:	ret

0000000000019fb8 <get_stat_atime_ns@@Base>:
   19fb8:	ldr	x0, [x0, #80]
   19fbc:	ret

0000000000019fc0 <get_stat_ctime_ns@@Base>:
   19fc0:	ldr	x0, [x0, #112]
   19fc4:	ret

0000000000019fc8 <get_stat_mtime_ns@@Base>:
   19fc8:	ldr	x0, [x0, #96]
   19fcc:	ret

0000000000019fd0 <get_stat_birthtime_ns@@Base>:
   19fd0:	mov	x0, #0x0                   	// #0
   19fd4:	ret

0000000000019fd8 <get_stat_atime@@Base>:
   19fd8:	ldp	x0, x1, [x0, #72]
   19fdc:	ret

0000000000019fe0 <get_stat_ctime@@Base>:
   19fe0:	ldp	x0, x1, [x0, #104]
   19fe4:	ret

0000000000019fe8 <get_stat_mtime@@Base>:
   19fe8:	ldp	x0, x1, [x0, #88]
   19fec:	ret

0000000000019ff0 <get_stat_birthtime@@Base>:
   19ff0:	mov	x1, #0xffffffffffffffff    	// #-1
   19ff4:	mov	x0, x1
   19ff8:	ret

0000000000019ffc <stat_time_normalize@@Base>:
   19ffc:	ret

000000000001a000 <statat@@Base>:
   1a000:	stp	x29, x30, [sp, #-16]!
   1a004:	mov	x29, sp
   1a008:	mov	w4, #0x0                   	// #0
   1a00c:	mov	x3, x2
   1a010:	mov	x2, x1
   1a014:	mov	w1, w0
   1a018:	mov	w0, #0x0                   	// #0
   1a01c:	bl	afe0 <__fxstatat@plt>
   1a020:	ldp	x29, x30, [sp], #16
   1a024:	ret

000000000001a028 <lstatat@@Base>:
   1a028:	stp	x29, x30, [sp, #-16]!
   1a02c:	mov	x29, sp
   1a030:	mov	w4, #0x100                 	// #256
   1a034:	mov	x3, x2
   1a038:	mov	x2, x1
   1a03c:	mov	w1, w0
   1a040:	mov	w0, #0x0                   	// #0
   1a044:	bl	afe0 <__fxstatat@plt>
   1a048:	ldp	x29, x30, [sp], #16
   1a04c:	ret

000000000001a050 <stdopen@@Base>:
   1a050:	stp	x29, x30, [sp, #-64]!
   1a054:	mov	x29, sp
   1a058:	stp	x19, x20, [sp, #16]
   1a05c:	stp	x21, x22, [sp, #32]
   1a060:	str	x23, [sp, #48]
   1a064:	mov	w19, #0x0                   	// #0
   1a068:	mov	w20, #0x1                   	// #1
   1a06c:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1a070:	add	x21, x0, #0x820
   1a074:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1a078:	add	x22, x0, #0x810
   1a07c:	b	1a0a4 <stdopen@@Base+0x54>
   1a080:	mov	w1, w23
   1a084:	mov	x0, x21
   1a088:	bl	a640 <open@plt>
   1a08c:	tbnz	w0, #31, 1a0e0 <stdopen@@Base+0x90>
   1a090:	cmp	w0, #0x2
   1a094:	b.gt	1a0ec <stdopen@@Base+0x9c>
   1a098:	add	w19, w19, #0x1
   1a09c:	cmp	w19, #0x3
   1a0a0:	b.eq	1a0f8 <stdopen@@Base+0xa8>  // b.none
   1a0a4:	mov	w1, w20
   1a0a8:	mov	w0, w19
   1a0ac:	bl	abe0 <rpl_fcntl@plt>
   1a0b0:	tbz	w0, #31, 1a098 <stdopen@@Base+0x48>
   1a0b4:	cmp	w19, #0x0
   1a0b8:	cset	w23, eq  // eq = none
   1a0bc:	cbnz	w19, 1a080 <stdopen@@Base+0x30>
   1a0c0:	mov	w1, w20
   1a0c4:	mov	x0, x22
   1a0c8:	bl	a640 <open@plt>
   1a0cc:	tbnz	w0, #31, 1a080 <stdopen@@Base+0x30>
   1a0d0:	cmp	w0, #0x2
   1a0d4:	b.gt	1a0ec <stdopen@@Base+0x9c>
   1a0d8:	add	w19, w19, #0x1
   1a0dc:	b	1a0a4 <stdopen@@Base+0x54>
   1a0e0:	bl	aeb0 <__errno_location@plt>
   1a0e4:	ldr	w0, [x0]
   1a0e8:	b	1a0fc <stdopen@@Base+0xac>
   1a0ec:	bl	a850 <close@plt>
   1a0f0:	mov	w0, #0x0                   	// #0
   1a0f4:	b	1a0fc <stdopen@@Base+0xac>
   1a0f8:	mov	w0, #0x0                   	// #0
   1a0fc:	ldp	x19, x20, [sp, #16]
   1a100:	ldp	x21, x22, [sp, #32]
   1a104:	ldr	x23, [sp, #48]
   1a108:	ldp	x29, x30, [sp], #64
   1a10c:	ret

000000000001a110 <strnlen1@@Base>:
   1a110:	stp	x29, x30, [sp, #-32]!
   1a114:	mov	x29, sp
   1a118:	stp	x19, x20, [sp, #16]
   1a11c:	mov	x19, x0
   1a120:	mov	x20, x1
   1a124:	mov	x2, x1
   1a128:	mov	w1, #0x0                   	// #0
   1a12c:	bl	ac90 <memchr@plt>
   1a130:	sub	x19, x0, x19
   1a134:	cmp	x0, #0x0
   1a138:	csinc	x0, x20, x19, eq  // eq = none
   1a13c:	ldp	x19, x20, [sp, #16]
   1a140:	ldp	x29, x30, [sp], #32
   1a144:	ret
   1a148:	stp	x29, x30, [sp, #-144]!
   1a14c:	mov	x29, sp
   1a150:	add	x2, sp, #0x10
   1a154:	mov	x1, x0
   1a158:	mov	w0, #0x0                   	// #0
   1a15c:	bl	ac70 <__lxstat@plt>
   1a160:	cbz	w0, 1a174 <strnlen1@@Base+0x64>
   1a164:	bl	aeb0 <__errno_location@plt>
   1a168:	ldr	w0, [x0]
   1a16c:	cmp	w0, #0x4b
   1a170:	b.ne	1a180 <strnlen1@@Base+0x70>  // b.any
   1a174:	bl	aeb0 <__errno_location@plt>
   1a178:	mov	w1, #0x11                  	// #17
   1a17c:	str	w1, [x0]
   1a180:	bl	aeb0 <__errno_location@plt>
   1a184:	ldr	w0, [x0]
   1a188:	cmp	w0, #0x2
   1a18c:	csetm	w0, ne  // ne = any
   1a190:	ldp	x29, x30, [sp], #144
   1a194:	ret
   1a198:	stp	x29, x30, [sp, #-16]!
   1a19c:	mov	x29, sp
   1a1a0:	mov	w1, #0x1c0                 	// #448
   1a1a4:	bl	af60 <mkdir@plt>
   1a1a8:	ldp	x29, x30, [sp], #16
   1a1ac:	ret
   1a1b0:	stp	x29, x30, [sp, #-16]!
   1a1b4:	mov	x29, sp
   1a1b8:	ldr	w1, [x1]
   1a1bc:	mov	w2, #0xffffff3c            	// #-196
   1a1c0:	and	w1, w1, w2
   1a1c4:	mov	w2, #0x180                 	// #384
   1a1c8:	mov	w3, #0xc2                  	// #194
   1a1cc:	orr	w1, w1, w3
   1a1d0:	bl	a640 <open@plt>
   1a1d4:	ldp	x29, x30, [sp], #16
   1a1d8:	ret

000000000001a1dc <try_tempname@@Base>:
   1a1dc:	stp	x29, x30, [sp, #-128]!
   1a1e0:	mov	x29, sp
   1a1e4:	stp	x19, x20, [sp, #16]
   1a1e8:	stp	x23, x24, [sp, #48]
   1a1ec:	stp	x25, x26, [sp, #64]
   1a1f0:	stp	x27, x28, [sp, #80]
   1a1f4:	mov	x24, x0
   1a1f8:	mov	w20, w1
   1a1fc:	mov	x26, x2
   1a200:	mov	x27, x3
   1a204:	bl	aeb0 <__errno_location@plt>
   1a208:	mov	x25, x0
   1a20c:	ldr	w0, [x0]
   1a210:	str	w0, [sp, #108]
   1a214:	mov	x0, x24
   1a218:	bl	a340 <strlen@plt>
   1a21c:	add	w1, w20, #0x5
   1a220:	cmp	w1, w0
   1a224:	b.ge	1a3b4 <try_tempname@@Base+0x1d8>  // b.tcont
   1a228:	sub	w19, w0, #0x6
   1a22c:	sub	w19, w19, w20
   1a230:	add	x19, x24, w19, sxtw
   1a234:	mov	x2, #0x6                   	// #6
   1a238:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1a23c:	add	x1, x1, #0x830
   1a240:	mov	x0, x19
   1a244:	bl	a970 <memcmp@plt>
   1a248:	cbnz	w0, 1a3b4 <try_tempname@@Base+0x1d8>
   1a24c:	stp	x21, x22, [sp, #32]
   1a250:	mov	x1, #0x0                   	// #0
   1a254:	add	x0, sp, #0x70
   1a258:	bl	a700 <gettimeofday@plt>
   1a25c:	ldr	x0, [sp, #120]
   1a260:	ldr	x20, [sp, #112]
   1a264:	eor	x20, x20, x0, lsl #16
   1a268:	bl	a5b0 <getpid@plt>
   1a26c:	adrp	x2, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1a270:	sxtw	x0, w0
   1a274:	eor	x0, x0, x20
   1a278:	ldr	x1, [x2, #1088]
   1a27c:	add	x0, x1, x0
   1a280:	str	x0, [x2, #1088]
   1a284:	mov	w23, #0xa2f8                	// #41720
   1a288:	movk	w23, #0x3, lsl #16
   1a28c:	mov	x22, x2
   1a290:	adrp	x20, 2e000 <vasnprintf@@Base+0x3378>
   1a294:	add	x20, x20, #0x870
   1a298:	mov	x21, #0x2109                	// #8457
   1a29c:	movk	x21, #0x1084, lsl #16
   1a2a0:	movk	x21, #0x842, lsl #32
   1a2a4:	movk	x21, #0x8421, lsl #48
   1a2a8:	mov	x28, #0x1e61                	// #7777
   1a2ac:	ldr	x2, [x22, #1088]
   1a2b0:	lsr	x0, x2, #1
   1a2b4:	umulh	x0, x0, x21
   1a2b8:	lsr	x4, x0, #4
   1a2bc:	lsl	x1, x4, #5
   1a2c0:	sub	x1, x1, x4
   1a2c4:	sub	x1, x2, x1, lsl #1
   1a2c8:	ldrb	w1, [x20, x1]
   1a2cc:	strb	w1, [x19]
   1a2d0:	lsr	x0, x0, #5
   1a2d4:	umulh	x0, x0, x21
   1a2d8:	lsr	x3, x0, #4
   1a2dc:	lsl	x2, x3, #5
   1a2e0:	sub	x2, x2, x3
   1a2e4:	sub	x2, x4, x2, lsl #1
   1a2e8:	ldrb	w1, [x20, x2]
   1a2ec:	strb	w1, [x19, #1]
   1a2f0:	lsr	x0, x0, #5
   1a2f4:	umulh	x0, x0, x21
   1a2f8:	lsr	x4, x0, #4
   1a2fc:	lsl	x1, x4, #5
   1a300:	sub	x1, x1, x4
   1a304:	sub	x1, x3, x1, lsl #1
   1a308:	ldrb	w1, [x20, x1]
   1a30c:	strb	w1, [x19, #2]
   1a310:	lsr	x0, x0, #5
   1a314:	umulh	x0, x0, x21
   1a318:	lsr	x3, x0, #4
   1a31c:	lsl	x2, x3, #5
   1a320:	sub	x2, x2, x3
   1a324:	sub	x2, x4, x2, lsl #1
   1a328:	ldrb	w1, [x20, x2]
   1a32c:	strb	w1, [x19, #3]
   1a330:	lsr	x0, x0, #5
   1a334:	umulh	x0, x0, x21
   1a338:	lsr	x2, x0, #4
   1a33c:	lsl	x1, x2, #5
   1a340:	sub	x1, x1, x2
   1a344:	sub	x1, x3, x1, lsl #1
   1a348:	ldrb	w1, [x20, x1]
   1a34c:	strb	w1, [x19, #4]
   1a350:	lsr	x0, x0, #5
   1a354:	umulh	x0, x0, x21
   1a358:	lsr	x0, x0, #4
   1a35c:	lsl	x1, x0, #5
   1a360:	sub	x0, x1, x0
   1a364:	sub	x0, x2, x0, lsl #1
   1a368:	ldrb	w0, [x20, x0]
   1a36c:	strb	w0, [x19, #5]
   1a370:	mov	x1, x26
   1a374:	mov	x0, x24
   1a378:	blr	x27
   1a37c:	tbz	w0, #31, 1a3c4 <try_tempname@@Base+0x1e8>
   1a380:	ldr	w0, [x25]
   1a384:	cmp	w0, #0x11
   1a388:	b.ne	1a3e8 <try_tempname@@Base+0x20c>  // b.any
   1a38c:	ldr	x0, [x22, #1088]
   1a390:	add	x0, x0, x28
   1a394:	str	x0, [x22, #1088]
   1a398:	subs	w23, w23, #0x1
   1a39c:	b.ne	1a2ac <try_tempname@@Base+0xd0>  // b.any
   1a3a0:	mov	w0, #0x11                  	// #17
   1a3a4:	str	w0, [x25]
   1a3a8:	mov	w0, #0xffffffff            	// #-1
   1a3ac:	ldp	x21, x22, [sp, #32]
   1a3b0:	b	1a3d0 <try_tempname@@Base+0x1f4>
   1a3b4:	mov	w0, #0x16                  	// #22
   1a3b8:	str	w0, [x25]
   1a3bc:	mov	w0, #0xffffffff            	// #-1
   1a3c0:	b	1a3d0 <try_tempname@@Base+0x1f4>
   1a3c4:	ldr	w1, [sp, #108]
   1a3c8:	str	w1, [x25]
   1a3cc:	ldp	x21, x22, [sp, #32]
   1a3d0:	ldp	x19, x20, [sp, #16]
   1a3d4:	ldp	x23, x24, [sp, #48]
   1a3d8:	ldp	x25, x26, [sp, #64]
   1a3dc:	ldp	x27, x28, [sp, #80]
   1a3e0:	ldp	x29, x30, [sp], #128
   1a3e4:	ret
   1a3e8:	mov	w0, #0xffffffff            	// #-1
   1a3ec:	ldp	x21, x22, [sp, #32]
   1a3f0:	b	1a3d0 <try_tempname@@Base+0x1f4>

000000000001a3f4 <gen_tempname@@Base>:
   1a3f4:	stp	x29, x30, [sp, #-32]!
   1a3f8:	mov	x29, sp
   1a3fc:	str	w2, [sp, #28]
   1a400:	cmp	w3, #0x1
   1a404:	b.eq	1a438 <gen_tempname@@Base+0x44>  // b.none
   1a408:	cmp	w3, #0x2
   1a40c:	b.eq	1a444 <gen_tempname@@Base+0x50>  // b.none
   1a410:	cbz	w3, 1a45c <gen_tempname@@Base+0x68>
   1a414:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   1a418:	add	x3, x3, #0x870
   1a41c:	add	x3, x3, #0x40
   1a420:	mov	w2, #0x13f                 	// #319
   1a424:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1a428:	add	x1, x1, #0x838
   1a42c:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1a430:	add	x0, x0, #0x848
   1a434:	bl	aea0 <__assert_fail@plt>
   1a438:	adrp	x3, 1a000 <statat@@Base>
   1a43c:	add	x3, x3, #0x198
   1a440:	b	1a44c <gen_tempname@@Base+0x58>
   1a444:	adrp	x3, 1a000 <statat@@Base>
   1a448:	add	x3, x3, #0x148
   1a44c:	add	x2, sp, #0x1c
   1a450:	bl	a810 <try_tempname@plt>
   1a454:	ldp	x29, x30, [sp], #32
   1a458:	ret
   1a45c:	adrp	x3, 1a000 <statat@@Base>
   1a460:	add	x3, x3, #0x1b0
   1a464:	b	1a44c <gen_tempname@@Base+0x58>

000000000001a468 <make_timespec@@Base>:
   1a468:	ret

000000000001a46c <timespec_cmp@@Base>:
   1a46c:	cmp	x0, x2
   1a470:	b.lt	1a480 <timespec_cmp@@Base+0x14>  // b.tstop
   1a474:	sub	w1, w1, w3
   1a478:	csinc	w0, w1, wzr, le
   1a47c:	ret
   1a480:	mov	w0, #0xffffffff            	// #-1
   1a484:	b	1a47c <timespec_cmp@@Base+0x10>

000000000001a488 <timespec_sign@@Base>:
   1a488:	tbnz	x0, #63, 1a49c <timespec_sign@@Base+0x14>
   1a48c:	orr	x0, x0, x1
   1a490:	cmp	x0, #0x0
   1a494:	cset	w0, ne  // ne = any
   1a498:	b	1a4a0 <timespec_sign@@Base+0x18>
   1a49c:	mov	w0, #0xffffffff            	// #-1
   1a4a0:	ret

000000000001a4a4 <timespectod@@Base>:
   1a4a4:	scvtf	d0, x1
   1a4a8:	mov	x1, #0xcd6500000000        	// #225833675390976
   1a4ac:	movk	x1, #0x41cd, lsl #48
   1a4b0:	fmov	d1, x1
   1a4b4:	fdiv	d0, d0, d1
   1a4b8:	scvtf	d1, x0
   1a4bc:	fadd	d0, d0, d1
   1a4c0:	ret

000000000001a4c4 <dup_safer@@Base>:
   1a4c4:	stp	x29, x30, [sp, #-16]!
   1a4c8:	mov	x29, sp
   1a4cc:	mov	w2, #0x3                   	// #3
   1a4d0:	mov	w1, #0x0                   	// #0
   1a4d4:	bl	abe0 <rpl_fcntl@plt>
   1a4d8:	ldp	x29, x30, [sp], #16
   1a4dc:	ret

000000000001a4e0 <fd_safer@@Base>:
   1a4e0:	stp	x29, x30, [sp, #-48]!
   1a4e4:	mov	x29, sp
   1a4e8:	stp	x19, x20, [sp, #16]
   1a4ec:	mov	w19, w0
   1a4f0:	cmp	w0, #0x2
   1a4f4:	b.ls	1a508 <fd_safer@@Base+0x28>  // b.plast
   1a4f8:	mov	w0, w19
   1a4fc:	ldp	x19, x20, [sp, #16]
   1a500:	ldp	x29, x30, [sp], #48
   1a504:	ret
   1a508:	stp	x21, x22, [sp, #32]
   1a50c:	bl	aa40 <dup_safer@plt>
   1a510:	mov	w21, w0
   1a514:	bl	aeb0 <__errno_location@plt>
   1a518:	mov	x20, x0
   1a51c:	ldr	w22, [x0]
   1a520:	mov	w0, w19
   1a524:	bl	a850 <close@plt>
   1a528:	str	w22, [x20]
   1a52c:	mov	w19, w21
   1a530:	ldp	x21, x22, [sp, #32]
   1a534:	b	1a4f8 <fd_safer@@Base+0x18>

000000000001a538 <pipe_safer@@Base>:
   1a538:	stp	x29, x30, [sp, #-48]!
   1a53c:	mov	x29, sp
   1a540:	stp	x19, x20, [sp, #16]
   1a544:	mov	x19, x0
   1a548:	bl	a4b0 <pipe@plt>
   1a54c:	cbnz	w0, 1a5c0 <pipe_safer@@Base+0x88>
   1a550:	mov	w20, w0
   1a554:	ldr	w0, [x19]
   1a558:	bl	af30 <fd_safer@plt>
   1a55c:	str	w0, [x19]
   1a560:	tbnz	w0, #31, 1a590 <pipe_safer@@Base+0x58>
   1a564:	ldr	w0, [x19, #4]
   1a568:	bl	af30 <fd_safer@plt>
   1a56c:	str	w0, [x19, #4]
   1a570:	tbnz	w0, #31, 1a584 <pipe_safer@@Base+0x4c>
   1a574:	mov	w0, w20
   1a578:	ldp	x19, x20, [sp, #16]
   1a57c:	ldp	x29, x30, [sp], #48
   1a580:	ret
   1a584:	stp	x21, x22, [sp, #32]
   1a588:	mov	w20, #0x1                   	// #1
   1a58c:	b	1a594 <pipe_safer@@Base+0x5c>
   1a590:	stp	x21, x22, [sp, #32]
   1a594:	bl	aeb0 <__errno_location@plt>
   1a598:	mov	x21, x0
   1a59c:	ldr	w22, [x0]
   1a5a0:	mov	w0, #0x1                   	// #1
   1a5a4:	sub	w20, w0, w20
   1a5a8:	ldr	w0, [x19, w20, sxtw #2]
   1a5ac:	bl	a850 <close@plt>
   1a5b0:	str	w22, [x21]
   1a5b4:	mov	w20, #0xffffffff            	// #-1
   1a5b8:	ldp	x21, x22, [sp, #32]
   1a5bc:	b	1a574 <pipe_safer@@Base+0x3c>
   1a5c0:	mov	w20, #0xffffffff            	// #-1
   1a5c4:	b	1a574 <pipe_safer@@Base+0x3c>
   1a5c8:	ldr	x4, [x0, #8]
   1a5cc:	mov	x1, #0xffffffffffff0002    	// #-65534
   1a5d0:	movk	x1, #0xc000, lsl #16
   1a5d4:	add	x1, x4, x1
   1a5d8:	cmp	x1, #0x1
   1a5dc:	mov	x2, #0xc9ff                	// #51711
   1a5e0:	movk	x2, #0x3b9a, lsl #16
   1a5e4:	ccmp	x4, x2, #0x0, hi  // hi = pmore
   1a5e8:	b.hi	1a634 <pipe_safer@@Base+0xfc>  // b.pmore
   1a5ec:	ldr	x5, [x0, #24]
   1a5f0:	mov	x2, #0xffffffffffff0002    	// #-65534
   1a5f4:	movk	x2, #0xc000, lsl #16
   1a5f8:	add	x2, x5, x2
   1a5fc:	cmp	x2, #0x1
   1a600:	mov	x3, #0xc9ff                	// #51711
   1a604:	movk	x3, #0x3b9a, lsl #16
   1a608:	ccmp	x5, x3, #0x0, hi  // hi = pmore
   1a60c:	b.hi	1a634 <pipe_safer@@Base+0xfc>  // b.pmore
   1a610:	mov	w6, #0x0                   	// #0
   1a614:	mov	w3, #0x0                   	// #0
   1a618:	cmp	x1, #0x1
   1a61c:	b.ls	1a654 <pipe_safer@@Base+0x11c>  // b.plast
   1a620:	cmp	x2, #0x1
   1a624:	b.ls	1a66c <pipe_safer@@Base+0x134>  // b.plast
   1a628:	cmp	w6, #0x1
   1a62c:	cinc	w0, w3, eq  // eq = none
   1a630:	ret
   1a634:	stp	x29, x30, [sp, #-16]!
   1a638:	mov	x29, sp
   1a63c:	bl	aeb0 <__errno_location@plt>
   1a640:	mov	w1, #0x16                  	// #22
   1a644:	str	w1, [x0]
   1a648:	mov	w0, #0xffffffff            	// #-1
   1a64c:	ldp	x29, x30, [sp], #16
   1a650:	ret
   1a654:	str	xzr, [x0]
   1a658:	mov	x1, #0x3ffffffe            	// #1073741822
   1a65c:	cmp	x4, x1
   1a660:	cset	w6, eq  // eq = none
   1a664:	mov	w3, #0x1                   	// #1
   1a668:	b	1a620 <pipe_safer@@Base+0xe8>
   1a66c:	str	xzr, [x0, #16]
   1a670:	mov	w3, #0x1                   	// #1
   1a674:	mov	x0, #0x3ffffffe            	// #1073741822
   1a678:	cmp	x5, x0
   1a67c:	b.ne	1a628 <pipe_safer@@Base+0xf0>  // b.any
   1a680:	add	w6, w6, w3
   1a684:	b	1a628 <pipe_safer@@Base+0xf0>
   1a688:	stp	x29, x30, [sp, #-32]!
   1a68c:	mov	x29, sp
   1a690:	stp	x19, x20, [sp, #16]
   1a694:	mov	x20, x0
   1a698:	ldr	x19, [x1]
   1a69c:	ldr	x0, [x19, #8]
   1a6a0:	mov	x2, #0x3ffffffe            	// #1073741822
   1a6a4:	cmp	x0, x2
   1a6a8:	b.eq	1a6e4 <pipe_safer@@Base+0x1ac>  // b.none
   1a6ac:	mov	x2, #0x3fffffff            	// #1073741823
   1a6b0:	cmp	x0, x2
   1a6b4:	b.eq	1a70c <pipe_safer@@Base+0x1d4>  // b.none
   1a6b8:	ldr	x1, [x19, #24]
   1a6bc:	mov	x0, #0x3ffffffe            	// #1073741822
   1a6c0:	cmp	x1, x0
   1a6c4:	b.eq	1a734 <pipe_safer@@Base+0x1fc>  // b.none
   1a6c8:	mov	w0, #0x0                   	// #0
   1a6cc:	mov	x2, #0x3fffffff            	// #1073741823
   1a6d0:	cmp	x1, x2
   1a6d4:	b.eq	1a74c <pipe_safer@@Base+0x214>  // b.none
   1a6d8:	ldp	x19, x20, [sp, #16]
   1a6dc:	ldp	x29, x30, [sp], #32
   1a6e0:	ret
   1a6e4:	ldr	x2, [x19, #24]
   1a6e8:	mov	w0, #0x1                   	// #1
   1a6ec:	mov	x1, #0x3ffffffe            	// #1073741822
   1a6f0:	cmp	x2, x1
   1a6f4:	b.eq	1a6d8 <pipe_safer@@Base+0x1a0>  // b.none
   1a6f8:	ldr	x1, [x20, #72]
   1a6fc:	ldr	x0, [x20, #80]
   1a700:	str	x1, [x19]
   1a704:	str	x0, [x19, #8]
   1a708:	b	1a6b8 <pipe_safer@@Base+0x180>
   1a70c:	ldr	x2, [x19, #24]
   1a710:	mov	x0, #0x3fffffff            	// #1073741823
   1a714:	cmp	x2, x0
   1a718:	b.eq	1a728 <pipe_safer@@Base+0x1f0>  // b.none
   1a71c:	mov	x0, x19
   1a720:	bl	af80 <gettime@plt>
   1a724:	b	1a6b8 <pipe_safer@@Base+0x180>
   1a728:	str	xzr, [x1]
   1a72c:	mov	w0, #0x0                   	// #0
   1a730:	b	1a6d8 <pipe_safer@@Base+0x1a0>
   1a734:	ldr	x1, [x20, #88]
   1a738:	ldr	x0, [x20, #96]
   1a73c:	str	x1, [x19, #16]
   1a740:	str	x0, [x19, #24]
   1a744:	mov	w0, #0x0                   	// #0
   1a748:	b	1a6d8 <pipe_safer@@Base+0x1a0>
   1a74c:	add	x0, x19, #0x10
   1a750:	bl	af80 <gettime@plt>
   1a754:	mov	w0, #0x0                   	// #0
   1a758:	b	1a6d8 <pipe_safer@@Base+0x1a0>

000000000001a75c <fdutimens@@Base>:
   1a75c:	stp	x29, x30, [sp, #-304]!
   1a760:	mov	x29, sp
   1a764:	stp	x19, x20, [sp, #16]
   1a768:	stp	x21, x22, [sp, #32]
   1a76c:	mov	w19, w0
   1a770:	mov	x21, x1
   1a774:	cbz	x2, 1ab28 <fdutimens@@Base+0x3cc>
   1a778:	add	x0, sp, #0x110
   1a77c:	str	x0, [sp, #264]
   1a780:	ldp	x4, x5, [x2]
   1a784:	stp	x4, x5, [sp, #272]
   1a788:	ldp	x2, x3, [x2, #16]
   1a78c:	stp	x2, x3, [sp, #288]
   1a790:	bl	1a5c8 <pipe_safer@@Base+0x90>
   1a794:	mov	w22, w0
   1a798:	tbnz	w0, #31, 1aaec <fdutimens@@Base+0x390>
   1a79c:	cmp	w19, #0x0
   1a7a0:	ccmp	x21, #0x0, #0x0, lt  // lt = tstop
   1a7a4:	b.eq	1a8f0 <fdutimens@@Base+0x194>  // b.none
   1a7a8:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1a7ac:	ldr	w1, [x1, #1096]
   1a7b0:	tbnz	w1, #31, 1a7f4 <fdutimens@@Base+0x98>
   1a7b4:	cmp	w22, #0x2
   1a7b8:	b.eq	1a904 <fdutimens@@Base+0x1a8>  // b.none
   1a7bc:	tbnz	w19, #31, 1a994 <fdutimens@@Base+0x238>
   1a7c0:	ldr	x1, [sp, #264]
   1a7c4:	mov	w0, w19
   1a7c8:	bl	a6b0 <futimens@plt>
   1a7cc:	mov	w20, w0
   1a7d0:	cmp	w0, #0x0
   1a7d4:	b.le	1a9e8 <fdutimens@@Base+0x28c>
   1a7d8:	bl	aeb0 <__errno_location@plt>
   1a7dc:	mov	w1, #0x26                  	// #38
   1a7e0:	str	w1, [x0]
   1a7e4:	bl	aeb0 <__errno_location@plt>
   1a7e8:	ldr	w0, [x0]
   1a7ec:	cmp	w0, #0x26
   1a7f0:	b.ne	1a9ec <fdutimens@@Base+0x290>  // b.any
   1a7f4:	adrp	x2, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1a7f8:	add	x3, x2, #0x448
   1a7fc:	mov	w1, #0xffffffff            	// #-1
   1a800:	str	w1, [x2, #1096]
   1a804:	str	w1, [x3, #4]
   1a808:	cbz	w22, 1a854 <fdutimens@@Base+0xf8>
   1a80c:	cmp	w22, #0x3
   1a810:	b.eq	1a834 <fdutimens@@Base+0xd8>  // b.none
   1a814:	tbnz	w19, #31, 1a9fc <fdutimens@@Base+0x2a0>
   1a818:	add	x2, sp, #0x88
   1a81c:	mov	w1, w19
   1a820:	mov	w0, #0x0                   	// #0
   1a824:	bl	ad40 <__fxstat@plt>
   1a828:	cmp	w0, #0x0
   1a82c:	cset	w0, ne  // ne = any
   1a830:	cbnz	w0, 1aae4 <fdutimens@@Base+0x388>
   1a834:	ldr	x22, [sp, #264]
   1a838:	cbz	x22, 1a8a8 <fdutimens@@Base+0x14c>
   1a83c:	add	x1, sp, #0x108
   1a840:	add	x0, sp, #0x88
   1a844:	bl	1a688 <pipe_safer@@Base+0x150>
   1a848:	and	w0, w0, #0xff
   1a84c:	mov	w20, #0x0                   	// #0
   1a850:	cbnz	w0, 1a8dc <fdutimens@@Base+0x180>
   1a854:	ldr	x22, [sp, #264]
   1a858:	cbz	x22, 1a8a8 <fdutimens@@Base+0x14c>
   1a85c:	ldr	x0, [x22]
   1a860:	str	x0, [sp, #72]
   1a864:	ldr	x1, [x22, #8]
   1a868:	mov	x0, #0xf7cf                	// #63439
   1a86c:	movk	x0, #0xe353, lsl #16
   1a870:	movk	x0, #0x9ba5, lsl #32
   1a874:	movk	x0, #0x20c4, lsl #48
   1a878:	smulh	x2, x1, x0
   1a87c:	asr	x2, x2, #7
   1a880:	sub	x1, x2, x1, asr #63
   1a884:	str	x1, [sp, #80]
   1a888:	ldr	x1, [x22, #16]
   1a88c:	str	x1, [sp, #88]
   1a890:	ldr	x1, [x22, #24]
   1a894:	smulh	x0, x1, x0
   1a898:	asr	x0, x0, #7
   1a89c:	sub	x0, x0, x1, asr #63
   1a8a0:	str	x0, [sp, #96]
   1a8a4:	add	x22, sp, #0x48
   1a8a8:	tbnz	w19, #31, 1aa18 <fdutimens@@Base+0x2bc>
   1a8ac:	mov	x2, x22
   1a8b0:	mov	x1, #0x0                   	// #0
   1a8b4:	mov	w0, w19
   1a8b8:	bl	a610 <futimesat@plt>
   1a8bc:	mov	w20, w0
   1a8c0:	cbz	w0, 1aa30 <fdutimens@@Base+0x2d4>
   1a8c4:	mov	w20, #0xffffffff            	// #-1
   1a8c8:	cbz	x21, 1a8dc <fdutimens@@Base+0x180>
   1a8cc:	mov	x1, x22
   1a8d0:	mov	x0, x21
   1a8d4:	bl	ad20 <utimes@plt>
   1a8d8:	mov	w20, w0
   1a8dc:	mov	w0, w20
   1a8e0:	ldp	x19, x20, [sp, #16]
   1a8e4:	ldp	x21, x22, [sp, #32]
   1a8e8:	ldp	x29, x30, [sp], #304
   1a8ec:	ret
   1a8f0:	bl	aeb0 <__errno_location@plt>
   1a8f4:	mov	w1, #0x9                   	// #9
   1a8f8:	str	w1, [x0]
   1a8fc:	mov	w20, #0xffffffff            	// #-1
   1a900:	b	1a8dc <fdutimens@@Base+0x180>
   1a904:	tbnz	w19, #31, 1a950 <fdutimens@@Base+0x1f4>
   1a908:	add	x2, sp, #0x88
   1a90c:	mov	w1, w19
   1a910:	mov	w0, #0x0                   	// #0
   1a914:	bl	ad40 <__fxstat@plt>
   1a918:	cmp	w0, #0x0
   1a91c:	cset	w0, ne  // ne = any
   1a920:	cbnz	w0, 1aadc <fdutimens@@Base+0x380>
   1a924:	ldr	x0, [sp, #264]
   1a928:	ldr	x2, [x0, #8]
   1a92c:	mov	x1, #0x3ffffffe            	// #1073741822
   1a930:	cmp	x2, x1
   1a934:	b.eq	1a96c <fdutimens@@Base+0x210>  // b.none
   1a938:	ldr	x2, [x0, #24]
   1a93c:	mov	x1, #0x3ffffffe            	// #1073741822
   1a940:	cmp	x2, x1
   1a944:	b.eq	1a980 <fdutimens@@Base+0x224>  // b.none
   1a948:	mov	w22, #0x3                   	// #3
   1a94c:	b	1a7bc <fdutimens@@Base+0x60>
   1a950:	add	x2, sp, #0x88
   1a954:	mov	x1, x21
   1a958:	mov	w0, #0x0                   	// #0
   1a95c:	bl	aef0 <__xstat@plt>
   1a960:	cmp	w0, #0x0
   1a964:	cset	w0, ne  // ne = any
   1a968:	b	1a920 <fdutimens@@Base+0x1c4>
   1a96c:	ldr	x1, [sp, #216]
   1a970:	ldr	x2, [sp, #208]
   1a974:	str	x2, [x0]
   1a978:	str	x1, [x0, #8]
   1a97c:	b	1a948 <fdutimens@@Base+0x1ec>
   1a980:	ldr	x1, [sp, #232]
   1a984:	ldr	x2, [sp, #224]
   1a988:	str	x2, [x0, #16]
   1a98c:	str	x1, [x0, #24]
   1a990:	b	1a948 <fdutimens@@Base+0x1ec>
   1a994:	mov	w3, #0x0                   	// #0
   1a998:	ldr	x2, [sp, #264]
   1a99c:	mov	x1, x21
   1a9a0:	mov	w0, #0xffffff9c            	// #-100
   1a9a4:	bl	aba0 <utimensat@plt>
   1a9a8:	mov	w20, w0
   1a9ac:	cmp	w0, #0x0
   1a9b0:	b.le	1a9d4 <fdutimens@@Base+0x278>
   1a9b4:	bl	aeb0 <__errno_location@plt>
   1a9b8:	mov	w1, #0x26                  	// #38
   1a9bc:	str	w1, [x0]
   1a9c0:	bl	aeb0 <__errno_location@plt>
   1a9c4:	ldr	w0, [x0]
   1a9c8:	cmp	w0, #0x26
   1a9cc:	b.eq	1a7f4 <fdutimens@@Base+0x98>  // b.none
   1a9d0:	b	1a9d8 <fdutimens@@Base+0x27c>
   1a9d4:	cbnz	w0, 1a9c0 <fdutimens@@Base+0x264>
   1a9d8:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1a9dc:	mov	w1, #0x1                   	// #1
   1a9e0:	str	w1, [x0, #1096]
   1a9e4:	b	1a8dc <fdutimens@@Base+0x180>
   1a9e8:	cbnz	w20, 1a7e4 <fdutimens@@Base+0x88>
   1a9ec:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1a9f0:	mov	w1, #0x1                   	// #1
   1a9f4:	str	w1, [x0, #1096]
   1a9f8:	b	1a8dc <fdutimens@@Base+0x180>
   1a9fc:	add	x2, sp, #0x88
   1aa00:	mov	x1, x21
   1aa04:	mov	w0, #0x0                   	// #0
   1aa08:	bl	aef0 <__xstat@plt>
   1aa0c:	cmp	w0, #0x0
   1aa10:	cset	w0, ne  // ne = any
   1aa14:	b	1a830 <fdutimens@@Base+0xd4>
   1aa18:	mov	x2, x22
   1aa1c:	mov	x1, x21
   1aa20:	mov	w0, #0xffffff9c            	// #-100
   1aa24:	bl	a610 <futimesat@plt>
   1aa28:	mov	w20, w0
   1aa2c:	b	1a8dc <fdutimens@@Base+0x180>
   1aa30:	cbz	x22, 1a8dc <fdutimens@@Base+0x180>
   1aa34:	stp	x23, x24, [sp, #48]
   1aa38:	ldr	x1, [x22, #8]
   1aa3c:	mov	x0, #0xa11f                	// #41247
   1aa40:	movk	x0, #0x7, lsl #16
   1aa44:	cmp	x1, x0
   1aa48:	cset	w21, gt
   1aa4c:	ldr	x1, [x22, #24]
   1aa50:	cmp	x1, x0
   1aa54:	cset	w23, gt
   1aa58:	cmp	w21, #0x0
   1aa5c:	ccmp	w23, #0x0, #0x0, eq  // eq = none
   1aa60:	b.ne	1aa6c <fdutimens@@Base+0x310>  // b.any
   1aa64:	ldp	x23, x24, [sp, #48]
   1aa68:	b	1a8dc <fdutimens@@Base+0x180>
   1aa6c:	add	x2, sp, #0x88
   1aa70:	mov	w1, w19
   1aa74:	mov	w0, #0x0                   	// #0
   1aa78:	bl	ad40 <__fxstat@plt>
   1aa7c:	mov	w24, w0
   1aa80:	cbnz	w0, 1ab34 <fdutimens@@Base+0x3d8>
   1aa84:	ldr	x1, [x22]
   1aa88:	ldr	x0, [sp, #208]
   1aa8c:	sub	x0, x0, x1
   1aa90:	ldr	x2, [x22, #16]
   1aa94:	ldr	x1, [sp, #224]
   1aa98:	sub	x1, x1, x2
   1aa9c:	ldp	x2, x3, [x22]
   1aaa0:	stp	x2, x3, [sp, #104]
   1aaa4:	ldp	x2, x3, [x22, #16]
   1aaa8:	stp	x2, x3, [sp, #120]
   1aaac:	cmp	w21, #0x0
   1aab0:	ccmp	x0, #0x1, #0x0, ne  // ne = any
   1aab4:	b.ne	1aaf4 <fdutimens@@Base+0x398>  // b.any
   1aab8:	ldr	x0, [sp, #216]
   1aabc:	cbnz	x0, 1aaf4 <fdutimens@@Base+0x398>
   1aac0:	str	xzr, [sp, #112]
   1aac4:	cmp	w23, #0x0
   1aac8:	ccmp	x1, #0x1, #0x0, ne  // ne = any
   1aacc:	b.ne	1ab0c <fdutimens@@Base+0x3b0>  // b.any
   1aad0:	ldr	x0, [sp, #232]
   1aad4:	cbnz	x0, 1ab0c <fdutimens@@Base+0x3b0>
   1aad8:	b	1ab08 <fdutimens@@Base+0x3ac>
   1aadc:	mov	w20, #0xffffffff            	// #-1
   1aae0:	b	1a8dc <fdutimens@@Base+0x180>
   1aae4:	mov	w20, #0xffffffff            	// #-1
   1aae8:	b	1a8dc <fdutimens@@Base+0x180>
   1aaec:	mov	w20, #0xffffffff            	// #-1
   1aaf0:	b	1a8dc <fdutimens@@Base+0x180>
   1aaf4:	cmp	w23, #0x0
   1aaf8:	ccmp	x1, #0x1, #0x0, ne  // ne = any
   1aafc:	b.ne	1ab1c <fdutimens@@Base+0x3c0>  // b.any
   1ab00:	ldr	x0, [sp, #232]
   1ab04:	cbnz	x0, 1ab1c <fdutimens@@Base+0x3c0>
   1ab08:	str	xzr, [sp, #128]
   1ab0c:	add	x2, sp, #0x68
   1ab10:	mov	x1, #0x0                   	// #0
   1ab14:	mov	w0, w19
   1ab18:	bl	a610 <futimesat@plt>
   1ab1c:	mov	w20, w24
   1ab20:	ldp	x23, x24, [sp, #48]
   1ab24:	b	1a8dc <fdutimens@@Base+0x180>
   1ab28:	str	xzr, [sp, #264]
   1ab2c:	mov	w22, #0x0                   	// #0
   1ab30:	b	1a79c <fdutimens@@Base+0x40>
   1ab34:	ldp	x23, x24, [sp, #48]
   1ab38:	b	1a8dc <fdutimens@@Base+0x180>

000000000001ab3c <utimens@@Base>:
   1ab3c:	stp	x29, x30, [sp, #-16]!
   1ab40:	mov	x29, sp
   1ab44:	mov	x2, x1
   1ab48:	mov	x1, x0
   1ab4c:	mov	w0, #0xffffffff            	// #-1
   1ab50:	bl	a960 <fdutimens@plt>
   1ab54:	ldp	x29, x30, [sp], #16
   1ab58:	ret

000000000001ab5c <lutimens@@Base>:
   1ab5c:	stp	x29, x30, [sp, #-224]!
   1ab60:	mov	x29, sp
   1ab64:	stp	x19, x20, [sp, #16]
   1ab68:	str	x21, [sp, #32]
   1ab6c:	mov	x20, x0
   1ab70:	cbz	x1, 1ac78 <lutimens@@Base+0x11c>
   1ab74:	add	x0, sp, #0xc0
   1ab78:	str	x0, [sp, #184]
   1ab7c:	ldp	x2, x3, [x1]
   1ab80:	stp	x2, x3, [sp, #192]
   1ab84:	ldp	x2, x3, [x1, #16]
   1ab88:	stp	x2, x3, [sp, #208]
   1ab8c:	bl	1a5c8 <pipe_safer@@Base+0x90>
   1ab90:	mov	w21, w0
   1ab94:	tbnz	w0, #31, 1ac70 <lutimens@@Base+0x114>
   1ab98:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1ab9c:	ldr	w0, [x0, #1100]
   1aba0:	tbnz	w0, #31, 1acc8 <lutimens@@Base+0x16c>
   1aba4:	cmp	w21, #0x2
   1aba8:	b.ne	1ac8c <lutimens@@Base+0x130>  // b.any
   1abac:	add	x2, sp, #0x38
   1abb0:	mov	x1, x20
   1abb4:	mov	w0, #0x0                   	// #0
   1abb8:	bl	ac70 <__lxstat@plt>
   1abbc:	cbnz	w0, 1ac60 <lutimens@@Base+0x104>
   1abc0:	ldr	x0, [sp, #184]
   1abc4:	ldr	x2, [x0, #8]
   1abc8:	mov	x1, #0x3ffffffe            	// #1073741822
   1abcc:	cmp	x2, x1
   1abd0:	b.eq	1abec <lutimens@@Base+0x90>  // b.none
   1abd4:	ldr	x2, [x0, #24]
   1abd8:	mov	x1, #0x3ffffffe            	// #1073741822
   1abdc:	cmp	x2, x1
   1abe0:	b.eq	1ac00 <lutimens@@Base+0xa4>  // b.none
   1abe4:	mov	w21, #0x3                   	// #3
   1abe8:	b	1ac8c <lutimens@@Base+0x130>
   1abec:	ldr	x1, [sp, #136]
   1abf0:	ldr	x2, [sp, #128]
   1abf4:	str	x2, [x0]
   1abf8:	str	x1, [x0, #8]
   1abfc:	b	1abe4 <lutimens@@Base+0x88>
   1ac00:	ldr	x1, [sp, #152]
   1ac04:	ldr	x2, [sp, #144]
   1ac08:	str	x2, [x0, #16]
   1ac0c:	str	x1, [x0, #24]
   1ac10:	b	1abe4 <lutimens@@Base+0x88>
   1ac14:	cbnz	w0, 1acb8 <lutimens@@Base+0x15c>
   1ac18:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1ac1c:	add	x2, x1, #0x448
   1ac20:	mov	w0, #0x1                   	// #1
   1ac24:	str	w0, [x1, #1096]
   1ac28:	str	w0, [x2, #4]
   1ac2c:	b	1ad48 <lutimens@@Base+0x1ec>
   1ac30:	add	x2, sp, #0x38
   1ac34:	mov	x1, x20
   1ac38:	mov	w0, #0x0                   	// #0
   1ac3c:	bl	ac70 <__lxstat@plt>
   1ac40:	cbz	w0, 1ace0 <lutimens@@Base+0x184>
   1ac44:	mov	w19, #0xffffffff            	// #-1
   1ac48:	b	1ad48 <lutimens@@Base+0x1ec>
   1ac4c:	bl	aeb0 <__errno_location@plt>
   1ac50:	mov	w1, #0x26                  	// #38
   1ac54:	str	w1, [x0]
   1ac58:	mov	w19, #0xffffffff            	// #-1
   1ac5c:	b	1ad48 <lutimens@@Base+0x1ec>
   1ac60:	mov	w19, #0xffffffff            	// #-1
   1ac64:	b	1ad48 <lutimens@@Base+0x1ec>
   1ac68:	mov	w19, #0xffffffff            	// #-1
   1ac6c:	b	1ad48 <lutimens@@Base+0x1ec>
   1ac70:	mov	w19, #0xffffffff            	// #-1
   1ac74:	b	1ad48 <lutimens@@Base+0x1ec>
   1ac78:	str	xzr, [sp, #184]
   1ac7c:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1ac80:	ldr	w0, [x0, #1100]
   1ac84:	mov	w21, #0x0                   	// #0
   1ac88:	tbnz	w0, #31, 1ad04 <lutimens@@Base+0x1a8>
   1ac8c:	mov	w3, #0x100                 	// #256
   1ac90:	ldr	x2, [sp, #184]
   1ac94:	mov	x1, x20
   1ac98:	mov	w0, #0xffffff9c            	// #-100
   1ac9c:	bl	aba0 <utimensat@plt>
   1aca0:	mov	w19, w0
   1aca4:	cmp	w0, #0x0
   1aca8:	b.le	1ac14 <lutimens@@Base+0xb8>
   1acac:	bl	aeb0 <__errno_location@plt>
   1acb0:	mov	w1, #0x26                  	// #38
   1acb4:	str	w1, [x0]
   1acb8:	bl	aeb0 <__errno_location@plt>
   1acbc:	ldr	w0, [x0]
   1acc0:	cmp	w0, #0x26
   1acc4:	b.ne	1ac18 <lutimens@@Base+0xbc>  // b.any
   1acc8:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1accc:	mov	w0, #0xffffffff            	// #-1
   1acd0:	str	w0, [x1, #1100]
   1acd4:	cbz	w21, 1ad10 <lutimens@@Base+0x1b4>
   1acd8:	cmp	w21, #0x3
   1acdc:	b.ne	1ac30 <lutimens@@Base+0xd4>  // b.any
   1ace0:	ldr	x0, [sp, #184]
   1ace4:	cbz	x0, 1ad24 <lutimens@@Base+0x1c8>
   1ace8:	add	x1, sp, #0xb8
   1acec:	add	x0, sp, #0x38
   1acf0:	bl	1a688 <pipe_safer@@Base+0x150>
   1acf4:	and	w0, w0, #0xff
   1acf8:	mov	w19, #0x0                   	// #0
   1acfc:	cbz	w0, 1ad24 <lutimens@@Base+0x1c8>
   1ad00:	b	1ad48 <lutimens@@Base+0x1ec>
   1ad04:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1ad08:	mov	w1, #0xffffffff            	// #-1
   1ad0c:	str	w1, [x0, #1100]
   1ad10:	add	x2, sp, #0x38
   1ad14:	mov	x1, x20
   1ad18:	mov	w0, #0x0                   	// #0
   1ad1c:	bl	ac70 <__lxstat@plt>
   1ad20:	cbnz	w0, 1ac68 <lutimens@@Base+0x10c>
   1ad24:	ldr	w1, [sp, #72]
   1ad28:	and	w1, w1, #0xf000
   1ad2c:	cmp	w1, #0xa, lsl #12
   1ad30:	b.eq	1ac4c <lutimens@@Base+0xf0>  // b.none
   1ad34:	ldr	x2, [sp, #184]
   1ad38:	mov	x1, x20
   1ad3c:	mov	w0, #0xffffffff            	// #-1
   1ad40:	bl	a960 <fdutimens@plt>
   1ad44:	mov	w19, w0
   1ad48:	mov	w0, w19
   1ad4c:	ldp	x19, x20, [sp, #16]
   1ad50:	ldr	x21, [sp, #32]
   1ad54:	ldp	x29, x30, [sp], #224
   1ad58:	ret

000000000001ad5c <xmalloc@@Base>:
   1ad5c:	stp	x29, x30, [sp, #-32]!
   1ad60:	mov	x29, sp
   1ad64:	str	x19, [sp, #16]
   1ad68:	mov	x19, x0
   1ad6c:	bl	a5f0 <malloc@plt>
   1ad70:	cmp	x0, #0x0
   1ad74:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   1ad78:	b.ne	1ad88 <xmalloc@@Base+0x2c>  // b.any
   1ad7c:	ldr	x19, [sp, #16]
   1ad80:	ldp	x29, x30, [sp], #32
   1ad84:	ret
   1ad88:	bl	a890 <xalloc_die@plt>

000000000001ad8c <xnmalloc@@Base>:
   1ad8c:	stp	x29, x30, [sp, #-16]!
   1ad90:	mov	x29, sp
   1ad94:	mul	x3, x0, x1
   1ad98:	umulh	x2, x0, x1
   1ad9c:	cmp	x2, #0x0
   1ada0:	cset	x2, ne  // ne = any
   1ada4:	cmp	x3, #0x0
   1ada8:	csinc	x2, x2, xzr, ge  // ge = tcont
   1adac:	cbnz	w2, 1adc0 <xnmalloc@@Base+0x34>
   1adb0:	mul	x0, x0, x1
   1adb4:	bl	a710 <xmalloc@plt>
   1adb8:	ldp	x29, x30, [sp], #16
   1adbc:	ret
   1adc0:	bl	a890 <xalloc_die@plt>

000000000001adc4 <xcharalloc@@Base>:
   1adc4:	stp	x29, x30, [sp, #-16]!
   1adc8:	mov	x29, sp
   1adcc:	bl	a710 <xmalloc@plt>
   1add0:	ldp	x29, x30, [sp], #16
   1add4:	ret

000000000001add8 <xrealloc@@Base>:
   1add8:	stp	x29, x30, [sp, #-32]!
   1addc:	mov	x29, sp
   1ade0:	cmp	x1, #0x0
   1ade4:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   1ade8:	b.ne	1ae10 <xrealloc@@Base+0x38>  // b.any
   1adec:	str	x19, [sp, #16]
   1adf0:	mov	x19, x1
   1adf4:	bl	a7e0 <realloc@plt>
   1adf8:	cmp	x0, #0x0
   1adfc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   1ae00:	b.ne	1ae1c <xrealloc@@Base+0x44>  // b.any
   1ae04:	ldr	x19, [sp, #16]
   1ae08:	ldp	x29, x30, [sp], #32
   1ae0c:	ret
   1ae10:	bl	aa50 <free@plt>
   1ae14:	mov	x0, #0x0                   	// #0
   1ae18:	b	1ae08 <xrealloc@@Base+0x30>
   1ae1c:	bl	a890 <xalloc_die@plt>

000000000001ae20 <xnrealloc@@Base>:
   1ae20:	stp	x29, x30, [sp, #-16]!
   1ae24:	mov	x29, sp
   1ae28:	mul	x4, x1, x2
   1ae2c:	umulh	x3, x1, x2
   1ae30:	cmp	x3, #0x0
   1ae34:	cset	x3, ne  // ne = any
   1ae38:	cmp	x4, #0x0
   1ae3c:	csinc	x3, x3, xzr, ge  // ge = tcont
   1ae40:	cbnz	w3, 1ae54 <xnrealloc@@Base+0x34>
   1ae44:	mul	x1, x1, x2
   1ae48:	bl	a660 <xrealloc@plt>
   1ae4c:	ldp	x29, x30, [sp], #16
   1ae50:	ret
   1ae54:	bl	a890 <xalloc_die@plt>

000000000001ae58 <x2nrealloc@@Base>:
   1ae58:	stp	x29, x30, [sp, #-16]!
   1ae5c:	mov	x29, sp
   1ae60:	ldr	x3, [x1]
   1ae64:	cbz	x0, 1ae98 <x2nrealloc@@Base+0x40>
   1ae68:	mov	x4, #0x5555555555555555    	// #6148914691236517205
   1ae6c:	movk	x4, #0x5554
   1ae70:	udiv	x4, x4, x2
   1ae74:	cmp	x4, x3
   1ae78:	b.ls	1aecc <x2nrealloc@@Base+0x74>  // b.plast
   1ae7c:	add	x4, x3, #0x1
   1ae80:	add	x3, x4, x3, lsr #1
   1ae84:	str	x3, [x1]
   1ae88:	mul	x1, x3, x2
   1ae8c:	bl	a660 <xrealloc@plt>
   1ae90:	ldp	x29, x30, [sp], #16
   1ae94:	ret
   1ae98:	cbnz	x3, 1aeac <x2nrealloc@@Base+0x54>
   1ae9c:	mov	x3, #0x80                  	// #128
   1aea0:	udiv	x3, x3, x2
   1aea4:	cmp	x2, #0x80
   1aea8:	cinc	x3, x3, hi  // hi = pmore
   1aeac:	mul	x5, x3, x2
   1aeb0:	umulh	x4, x3, x2
   1aeb4:	cmp	x4, #0x0
   1aeb8:	cset	x4, ne  // ne = any
   1aebc:	cmp	x5, #0x0
   1aec0:	csinc	x4, x4, xzr, ge  // ge = tcont
   1aec4:	cbz	w4, 1ae84 <x2nrealloc@@Base+0x2c>
   1aec8:	bl	a890 <xalloc_die@plt>
   1aecc:	bl	a890 <xalloc_die@plt>

000000000001aed0 <x2realloc@@Base>:
   1aed0:	stp	x29, x30, [sp, #-16]!
   1aed4:	mov	x29, sp
   1aed8:	mov	x2, x1
   1aedc:	ldr	x1, [x1]
   1aee0:	cbz	x0, 1af0c <x2realloc@@Base+0x3c>
   1aee4:	mov	x3, #0x5555555555555555    	// #6148914691236517205
   1aee8:	movk	x3, #0x5553
   1aeec:	cmp	x1, x3
   1aef0:	b.hi	1af18 <x2realloc@@Base+0x48>  // b.pmore
   1aef4:	add	x3, x1, #0x1
   1aef8:	add	x1, x3, x1, lsr #1
   1aefc:	str	x1, [x2]
   1af00:	bl	a660 <xrealloc@plt>
   1af04:	ldp	x29, x30, [sp], #16
   1af08:	ret
   1af0c:	cbz	x1, 1af1c <x2realloc@@Base+0x4c>
   1af10:	tbz	x1, #63, 1aefc <x2realloc@@Base+0x2c>
   1af14:	bl	a890 <xalloc_die@plt>
   1af18:	bl	a890 <xalloc_die@plt>
   1af1c:	mov	x1, #0x80                  	// #128
   1af20:	b	1aefc <x2realloc@@Base+0x2c>

000000000001af24 <xzalloc@@Base>:
   1af24:	stp	x29, x30, [sp, #-32]!
   1af28:	mov	x29, sp
   1af2c:	str	x19, [sp, #16]
   1af30:	mov	x19, x0
   1af34:	bl	a710 <xmalloc@plt>
   1af38:	mov	x2, x19
   1af3c:	mov	w1, #0x0                   	// #0
   1af40:	bl	a6f0 <memset@plt>
   1af44:	ldr	x19, [sp, #16]
   1af48:	ldp	x29, x30, [sp], #32
   1af4c:	ret

000000000001af50 <xcalloc@@Base>:
   1af50:	stp	x29, x30, [sp, #-16]!
   1af54:	mov	x29, sp
   1af58:	mul	x3, x0, x1
   1af5c:	umulh	x2, x0, x1
   1af60:	cmp	x2, #0x0
   1af64:	cset	x2, ne  // ne = any
   1af68:	cmp	x3, #0x0
   1af6c:	csinc	x2, x2, xzr, ge  // ge = tcont
   1af70:	cbnz	w2, 1af84 <xcalloc@@Base+0x34>
   1af74:	bl	a770 <calloc@plt>
   1af78:	cbz	x0, 1af84 <xcalloc@@Base+0x34>
   1af7c:	ldp	x29, x30, [sp], #16
   1af80:	ret
   1af84:	bl	a890 <xalloc_die@plt>

000000000001af88 <xmemdup@@Base>:
   1af88:	stp	x29, x30, [sp, #-32]!
   1af8c:	mov	x29, sp
   1af90:	stp	x19, x20, [sp, #16]
   1af94:	mov	x20, x0
   1af98:	mov	x19, x1
   1af9c:	mov	x0, x1
   1afa0:	bl	a710 <xmalloc@plt>
   1afa4:	mov	x2, x19
   1afa8:	mov	x1, x20
   1afac:	bl	a2c0 <memcpy@plt>
   1afb0:	ldp	x19, x20, [sp, #16]
   1afb4:	ldp	x29, x30, [sp], #32
   1afb8:	ret

000000000001afbc <xstrdup@@Base>:
   1afbc:	stp	x29, x30, [sp, #-32]!
   1afc0:	mov	x29, sp
   1afc4:	str	x19, [sp, #16]
   1afc8:	mov	x19, x0
   1afcc:	bl	a340 <strlen@plt>
   1afd0:	add	x1, x0, #0x1
   1afd4:	mov	x0, x19
   1afd8:	bl	ae50 <xmemdup@plt>
   1afdc:	ldr	x19, [sp, #16]
   1afe0:	ldp	x29, x30, [sp], #32
   1afe4:	ret

000000000001afe8 <xalloc_die@@Base>:
   1afe8:	stp	x29, x30, [sp, #-32]!
   1afec:	mov	x29, sp
   1aff0:	str	x19, [sp, #16]
   1aff4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   1aff8:	ldr	x0, [x0, #3976]
   1affc:	ldr	w19, [x0]
   1b000:	mov	w2, #0x5                   	// #5
   1b004:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1b008:	add	x1, x1, #0x8c0
   1b00c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1b010:	add	x0, x0, #0xc08
   1b014:	bl	ada0 <dcgettext@plt>
   1b018:	mov	x3, x0
   1b01c:	adrp	x2, 2c000 <vasnprintf@@Base+0x1378>
   1b020:	add	x2, x2, #0xfd8
   1b024:	mov	w1, #0x0                   	// #0
   1b028:	mov	w0, w19
   1b02c:	bl	a360 <error@plt>
   1b030:	bl	a900 <abort@plt>

000000000001b034 <xgetcwd@@Base>:
   1b034:	stp	x29, x30, [sp, #-32]!
   1b038:	mov	x29, sp
   1b03c:	str	x19, [sp, #16]
   1b040:	mov	x1, #0x0                   	// #0
   1b044:	mov	x0, #0x0                   	// #0
   1b048:	bl	a300 <getcwd@plt>
   1b04c:	mov	x19, x0
   1b050:	cbz	x0, 1b064 <xgetcwd@@Base+0x30>
   1b054:	mov	x0, x19
   1b058:	ldr	x19, [sp, #16]
   1b05c:	ldp	x29, x30, [sp], #32
   1b060:	ret
   1b064:	bl	aeb0 <__errno_location@plt>
   1b068:	ldr	w0, [x0]
   1b06c:	cmp	w0, #0xc
   1b070:	b.ne	1b054 <xgetcwd@@Base+0x20>  // b.any
   1b074:	bl	a890 <xalloc_die@plt>

000000000001b078 <gl_list_create_empty@@Base>:
   1b078:	stp	x29, x30, [sp, #-16]!
   1b07c:	mov	x29, sp
   1b080:	ldr	x5, [x0]
   1b084:	blr	x5
   1b088:	cbz	x0, 1b094 <gl_list_create_empty@@Base+0x1c>
   1b08c:	ldp	x29, x30, [sp], #16
   1b090:	ret
   1b094:	bl	a890 <xalloc_die@plt>

000000000001b098 <gl_list_create@@Base>:
   1b098:	stp	x29, x30, [sp, #-16]!
   1b09c:	mov	x29, sp
   1b0a0:	ldr	x7, [x0, #8]
   1b0a4:	blr	x7
   1b0a8:	cbz	x0, 1b0b4 <gl_list_create@@Base+0x1c>
   1b0ac:	ldp	x29, x30, [sp], #16
   1b0b0:	ret
   1b0b4:	bl	a890 <xalloc_die@plt>

000000000001b0b8 <gl_list_node_set_value@@Base>:
   1b0b8:	stp	x29, x30, [sp, #-16]!
   1b0bc:	mov	x29, sp
   1b0c0:	ldr	x3, [x0]
   1b0c4:	ldr	x3, [x3, #32]
   1b0c8:	blr	x3
   1b0cc:	tbnz	w0, #31, 1b0d8 <gl_list_node_set_value@@Base+0x20>
   1b0d0:	ldp	x29, x30, [sp], #16
   1b0d4:	ret
   1b0d8:	bl	a890 <xalloc_die@plt>

000000000001b0dc <gl_list_set_at@@Base>:
   1b0dc:	stp	x29, x30, [sp, #-16]!
   1b0e0:	mov	x29, sp
   1b0e4:	ldr	x3, [x0]
   1b0e8:	ldr	x3, [x3, #64]
   1b0ec:	blr	x3
   1b0f0:	cbz	x0, 1b0fc <gl_list_set_at@@Base+0x20>
   1b0f4:	ldp	x29, x30, [sp], #16
   1b0f8:	ret
   1b0fc:	bl	a890 <xalloc_die@plt>

000000000001b100 <gl_list_add_first@@Base>:
   1b100:	stp	x29, x30, [sp, #-16]!
   1b104:	mov	x29, sp
   1b108:	ldr	x2, [x0]
   1b10c:	ldr	x2, [x2, #88]
   1b110:	blr	x2
   1b114:	cbz	x0, 1b120 <gl_list_add_first@@Base+0x20>
   1b118:	ldp	x29, x30, [sp], #16
   1b11c:	ret
   1b120:	bl	a890 <xalloc_die@plt>

000000000001b124 <gl_list_add_last@@Base>:
   1b124:	stp	x29, x30, [sp, #-16]!
   1b128:	mov	x29, sp
   1b12c:	ldr	x2, [x0]
   1b130:	ldr	x2, [x2, #96]
   1b134:	blr	x2
   1b138:	cbz	x0, 1b144 <gl_list_add_last@@Base+0x20>
   1b13c:	ldp	x29, x30, [sp], #16
   1b140:	ret
   1b144:	bl	a890 <xalloc_die@plt>

000000000001b148 <gl_list_add_before@@Base>:
   1b148:	stp	x29, x30, [sp, #-16]!
   1b14c:	mov	x29, sp
   1b150:	ldr	x3, [x0]
   1b154:	ldr	x3, [x3, #104]
   1b158:	blr	x3
   1b15c:	cbz	x0, 1b168 <gl_list_add_before@@Base+0x20>
   1b160:	ldp	x29, x30, [sp], #16
   1b164:	ret
   1b168:	bl	a890 <xalloc_die@plt>

000000000001b16c <gl_list_add_after@@Base>:
   1b16c:	stp	x29, x30, [sp, #-16]!
   1b170:	mov	x29, sp
   1b174:	ldr	x3, [x0]
   1b178:	ldr	x3, [x3, #112]
   1b17c:	blr	x3
   1b180:	cbz	x0, 1b18c <gl_list_add_after@@Base+0x20>
   1b184:	ldp	x29, x30, [sp], #16
   1b188:	ret
   1b18c:	bl	a890 <xalloc_die@plt>

000000000001b190 <gl_list_add_at@@Base>:
   1b190:	stp	x29, x30, [sp, #-16]!
   1b194:	mov	x29, sp
   1b198:	ldr	x3, [x0]
   1b19c:	ldr	x3, [x3, #120]
   1b1a0:	blr	x3
   1b1a4:	cbz	x0, 1b1b0 <gl_list_add_at@@Base+0x20>
   1b1a8:	ldp	x29, x30, [sp], #16
   1b1ac:	ret
   1b1b0:	bl	a890 <xalloc_die@plt>

000000000001b1b4 <gl_sortedlist_add@@Base>:
   1b1b4:	stp	x29, x30, [sp, #-16]!
   1b1b8:	mov	x29, sp
   1b1bc:	ldr	x3, [x0]
   1b1c0:	ldr	x3, [x3, #224]
   1b1c4:	blr	x3
   1b1c8:	cbz	x0, 1b1d4 <gl_sortedlist_add@@Base+0x20>
   1b1cc:	ldp	x29, x30, [sp], #16
   1b1d0:	ret
   1b1d4:	bl	a890 <xalloc_die@plt>

000000000001b1d8 <gl_map_create_empty@@Base>:
   1b1d8:	stp	x29, x30, [sp, #-16]!
   1b1dc:	mov	x29, sp
   1b1e0:	ldr	x5, [x0]
   1b1e4:	blr	x5
   1b1e8:	cbz	x0, 1b1f4 <gl_map_create_empty@@Base+0x1c>
   1b1ec:	ldp	x29, x30, [sp], #16
   1b1f0:	ret
   1b1f4:	bl	a890 <xalloc_die@plt>

000000000001b1f8 <gl_map_put@@Base>:
   1b1f8:	stp	x29, x30, [sp, #-48]!
   1b1fc:	mov	x29, sp
   1b200:	stp	x19, x20, [sp, #16]
   1b204:	mov	x20, x0
   1b208:	ldr	x3, [x0]
   1b20c:	ldr	x4, [x3, #24]
   1b210:	add	x3, sp, #0x28
   1b214:	blr	x4
   1b218:	mov	w19, w0
   1b21c:	cbnz	w0, 1b234 <gl_map_put@@Base+0x3c>
   1b220:	ldr	x1, [x20, #24]
   1b224:	cbz	x1, 1b238 <gl_map_put@@Base+0x40>
   1b228:	ldr	x0, [sp, #40]
   1b22c:	blr	x1
   1b230:	b	1b238 <gl_map_put@@Base+0x40>
   1b234:	tbnz	w0, #31, 1b24c <gl_map_put@@Base+0x54>
   1b238:	cmp	w19, #0x0
   1b23c:	cset	w0, ne  // ne = any
   1b240:	ldp	x19, x20, [sp, #16]
   1b244:	ldp	x29, x30, [sp], #48
   1b248:	ret
   1b24c:	bl	a890 <xalloc_die@plt>

000000000001b250 <gl_map_getput@@Base>:
   1b250:	stp	x29, x30, [sp, #-16]!
   1b254:	mov	x29, sp
   1b258:	ldr	x4, [x0]
   1b25c:	ldr	x4, [x4, #24]
   1b260:	blr	x4
   1b264:	tbnz	w0, #31, 1b278 <gl_map_getput@@Base+0x28>
   1b268:	cmp	w0, #0x0
   1b26c:	cset	w0, ne  // ne = any
   1b270:	ldp	x29, x30, [sp], #16
   1b274:	ret
   1b278:	bl	a890 <xalloc_die@plt>

000000000001b27c <gl_set_create_empty@@Base>:
   1b27c:	stp	x29, x30, [sp, #-16]!
   1b280:	mov	x29, sp
   1b284:	ldr	x4, [x0]
   1b288:	blr	x4
   1b28c:	cbz	x0, 1b298 <gl_set_create_empty@@Base+0x1c>
   1b290:	ldp	x29, x30, [sp], #16
   1b294:	ret
   1b298:	bl	a890 <xalloc_die@plt>

000000000001b29c <gl_set_add@@Base>:
   1b29c:	stp	x29, x30, [sp, #-16]!
   1b2a0:	mov	x29, sp
   1b2a4:	ldr	x2, [x0]
   1b2a8:	ldr	x2, [x2, #24]
   1b2ac:	blr	x2
   1b2b0:	tbnz	w0, #31, 1b2c4 <gl_set_add@@Base+0x28>
   1b2b4:	cmp	w0, #0x0
   1b2b8:	cset	w0, ne  // ne = any
   1b2bc:	ldp	x29, x30, [sp], #16
   1b2c0:	ret
   1b2c4:	bl	a890 <xalloc_die@plt>

000000000001b2c8 <xsum@@Base>:
   1b2c8:	adds	x0, x0, x1
   1b2cc:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   1b2d0:	ret

000000000001b2d4 <xsum3@@Base>:
   1b2d4:	adds	x0, x0, x1
   1b2d8:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   1b2dc:	adds	x0, x2, x0
   1b2e0:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   1b2e4:	ret

000000000001b2e8 <xsum4@@Base>:
   1b2e8:	adds	x0, x0, x1
   1b2ec:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   1b2f0:	adds	x2, x2, x0
   1b2f4:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
   1b2f8:	adds	x0, x3, x2
   1b2fc:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   1b300:	ret

000000000001b304 <xmax@@Base>:
   1b304:	cmp	x0, x1
   1b308:	csel	x0, x0, x1, cs  // cs = hs, nlast
   1b30c:	ret

000000000001b310 <xstdopen@@Base>:
   1b310:	stp	x29, x30, [sp, #-32]!
   1b314:	mov	x29, sp
   1b318:	bl	a630 <stdopen@plt>
   1b31c:	cbnz	w0, 1b328 <xstdopen@@Base+0x18>
   1b320:	ldp	x29, x30, [sp], #32
   1b324:	ret
   1b328:	stp	x19, x20, [sp, #16]
   1b32c:	mov	w19, w0
   1b330:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   1b334:	ldr	x0, [x0, #3976]
   1b338:	ldr	w20, [x0]
   1b33c:	mov	w2, #0x5                   	// #5
   1b340:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1b344:	add	x1, x1, #0x8d8
   1b348:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1b34c:	add	x0, x0, #0xc08
   1b350:	bl	ada0 <dcgettext@plt>
   1b354:	mov	x2, x0
   1b358:	mov	w1, w19
   1b35c:	mov	w0, w20
   1b360:	bl	a360 <error@plt>
   1b364:	ldp	x19, x20, [sp, #16]
   1b368:	b	1b320 <xstdopen@@Base+0x10>

000000000001b36c <xstrndup@@Base>:
   1b36c:	stp	x29, x30, [sp, #-16]!
   1b370:	mov	x29, sp
   1b374:	bl	ab30 <strndup@plt>
   1b378:	cbz	x0, 1b384 <xstrndup@@Base+0x18>
   1b37c:	ldp	x29, x30, [sp], #16
   1b380:	ret
   1b384:	bl	a890 <xalloc_die@plt>
   1b388:	stp	x29, x30, [sp, #-112]!
   1b38c:	mov	x29, sp
   1b390:	stp	x19, x20, [sp, #16]
   1b394:	stp	x21, x22, [sp, #32]
   1b398:	stp	x23, x24, [sp, #48]
   1b39c:	stp	x25, x26, [sp, #64]
   1b3a0:	mov	x21, x0
   1b3a4:	mov	x24, x1
   1b3a8:	ldr	x22, [x1]
   1b3ac:	ldr	w23, [x1, #24]
   1b3b0:	ldp	x0, x1, [x1]
   1b3b4:	stp	x0, x1, [sp, #80]
   1b3b8:	ldp	x0, x1, [x24, #16]
   1b3bc:	stp	x0, x1, [sp, #96]
   1b3c0:	cbz	x21, 1b4b0 <xstrndup@@Base+0x144>
   1b3c4:	ldr	x26, [sp, #88]
   1b3c8:	mov	x20, x21
   1b3cc:	mov	x19, #0x0                   	// #0
   1b3d0:	mov	x25, #0xffffffffffffffff    	// #-1
   1b3d4:	b	1b40c <xstrndup@@Base+0xa0>
   1b3d8:	add	w2, w1, #0x8
   1b3dc:	str	w2, [sp, #104]
   1b3e0:	cmp	w2, #0x0
   1b3e4:	b.le	1b428 <xstrndup@@Base+0xbc>
   1b3e8:	add	x1, x0, #0xf
   1b3ec:	and	x1, x1, #0xfffffffffffffff8
   1b3f0:	str	x1, [sp, #80]
   1b3f4:	ldr	x0, [x0]
   1b3f8:	bl	a340 <strlen@plt>
   1b3fc:	adds	x0, x0, x19
   1b400:	csel	x19, x0, x25, cc  // cc = lo, ul, last
   1b404:	subs	x20, x20, #0x1
   1b408:	b.eq	1b4e0 <xstrndup@@Base+0x174>  // b.none
   1b40c:	ldr	w1, [sp, #104]
   1b410:	ldr	x0, [sp, #80]
   1b414:	tbnz	w1, #31, 1b3d8 <xstrndup@@Base+0x6c>
   1b418:	add	x1, x0, #0xf
   1b41c:	and	x1, x1, #0xfffffffffffffff8
   1b420:	str	x1, [sp, #80]
   1b424:	b	1b3f4 <xstrndup@@Base+0x88>
   1b428:	add	x0, x26, w1, sxtw
   1b42c:	b	1b3f4 <xstrndup@@Base+0x88>
   1b430:	bl	aeb0 <__errno_location@plt>
   1b434:	mov	w1, #0x4b                  	// #75
   1b438:	str	w1, [x0]
   1b43c:	mov	x26, #0x0                   	// #0
   1b440:	b	1b4c4 <xstrndup@@Base+0x158>
   1b444:	add	w0, w23, #0x8
   1b448:	cmp	w0, #0x0
   1b44c:	b.le	1b4a0 <xstrndup@@Base+0x134>
   1b450:	add	x2, x22, #0xf
   1b454:	mov	w23, w0
   1b458:	mov	x1, x22
   1b45c:	and	x22, x2, #0xfffffffffffffff8
   1b460:	ldr	x25, [x1]
   1b464:	mov	x0, x25
   1b468:	bl	a340 <strlen@plt>
   1b46c:	mov	x19, x0
   1b470:	mov	x2, x0
   1b474:	mov	x1, x25
   1b478:	mov	x0, x20
   1b47c:	bl	a2c0 <memcpy@plt>
   1b480:	add	x20, x20, x19
   1b484:	subs	x21, x21, #0x1
   1b488:	b.eq	1b4c0 <xstrndup@@Base+0x154>  // b.none
   1b48c:	tbnz	w23, #31, 1b444 <xstrndup@@Base+0xd8>
   1b490:	add	x0, x22, #0xf
   1b494:	mov	x1, x22
   1b498:	and	x22, x0, #0xfffffffffffffff8
   1b49c:	b	1b460 <xstrndup@@Base+0xf4>
   1b4a0:	ldr	x1, [x24, #8]
   1b4a4:	add	x1, x1, w23, sxtw
   1b4a8:	mov	w23, w0
   1b4ac:	b	1b460 <xstrndup@@Base+0xf4>
   1b4b0:	mov	x0, #0x1                   	// #1
   1b4b4:	bl	a710 <xmalloc@plt>
   1b4b8:	mov	x20, x0
   1b4bc:	mov	x26, x0
   1b4c0:	strb	wzr, [x20]
   1b4c4:	mov	x0, x26
   1b4c8:	ldp	x19, x20, [sp, #16]
   1b4cc:	ldp	x21, x22, [sp, #32]
   1b4d0:	ldp	x23, x24, [sp, #48]
   1b4d4:	ldp	x25, x26, [sp, #64]
   1b4d8:	ldp	x29, x30, [sp], #112
   1b4dc:	ret
   1b4e0:	mov	x0, #0x7fffffff            	// #2147483647
   1b4e4:	cmp	x19, x0
   1b4e8:	b.hi	1b430 <xstrndup@@Base+0xc4>  // b.pmore
   1b4ec:	add	x0, x19, #0x1
   1b4f0:	bl	a710 <xmalloc@plt>
   1b4f4:	mov	x26, x0
   1b4f8:	mov	x20, x0
   1b4fc:	b	1b48c <xstrndup@@Base+0x120>

000000000001b500 <xvasprintf@@Base>:
   1b500:	stp	x29, x30, [sp, #-64]!
   1b504:	mov	x29, sp
   1b508:	mov	x4, x0
   1b50c:	ldrb	w2, [x0]
   1b510:	mov	x3, x0
   1b514:	mov	x0, #0x0                   	// #0
   1b518:	cbz	w2, 1b53c <xvasprintf@@Base+0x3c>
   1b51c:	cmp	w2, #0x25
   1b520:	b.ne	1b558 <xvasprintf@@Base+0x58>  // b.any
   1b524:	ldrb	w2, [x3, #1]
   1b528:	cmp	w2, #0x73
   1b52c:	b.ne	1b558 <xvasprintf@@Base+0x58>  // b.any
   1b530:	add	x0, x0, #0x1
   1b534:	ldrb	w2, [x3, #2]!
   1b538:	cbnz	w2, 1b51c <xvasprintf@@Base+0x1c>
   1b53c:	ldp	x2, x3, [x1]
   1b540:	stp	x2, x3, [sp, #16]
   1b544:	ldp	x2, x3, [x1, #16]
   1b548:	stp	x2, x3, [sp, #32]
   1b54c:	add	x1, sp, #0x10
   1b550:	bl	1b388 <xstrndup@@Base+0x1c>
   1b554:	b	1b580 <xvasprintf@@Base+0x80>
   1b558:	ldp	x2, x3, [x1]
   1b55c:	stp	x2, x3, [sp, #16]
   1b560:	ldp	x0, x1, [x1, #16]
   1b564:	stp	x0, x1, [sp, #32]
   1b568:	add	x2, sp, #0x10
   1b56c:	mov	x1, x4
   1b570:	add	x0, sp, #0x38
   1b574:	bl	ab10 <vasprintf@plt>
   1b578:	tbnz	w0, #31, 1b588 <xvasprintf@@Base+0x88>
   1b57c:	ldr	x0, [sp, #56]
   1b580:	ldp	x29, x30, [sp], #64
   1b584:	ret
   1b588:	bl	aeb0 <__errno_location@plt>
   1b58c:	ldr	w1, [x0]
   1b590:	mov	x0, #0x0                   	// #0
   1b594:	cmp	w1, #0xc
   1b598:	b.ne	1b580 <xvasprintf@@Base+0x80>  // b.any
   1b59c:	bl	a890 <xalloc_die@plt>

000000000001b5a0 <xasprintf@@Base>:
   1b5a0:	stp	x29, x30, [sp, #-272]!
   1b5a4:	mov	x29, sp
   1b5a8:	str	x1, [sp, #216]
   1b5ac:	str	x2, [sp, #224]
   1b5b0:	str	x3, [sp, #232]
   1b5b4:	str	x4, [sp, #240]
   1b5b8:	str	x5, [sp, #248]
   1b5bc:	str	x6, [sp, #256]
   1b5c0:	str	x7, [sp, #264]
   1b5c4:	str	q0, [sp, #80]
   1b5c8:	str	q1, [sp, #96]
   1b5cc:	str	q2, [sp, #112]
   1b5d0:	str	q3, [sp, #128]
   1b5d4:	str	q4, [sp, #144]
   1b5d8:	str	q5, [sp, #160]
   1b5dc:	str	q6, [sp, #176]
   1b5e0:	str	q7, [sp, #192]
   1b5e4:	add	x1, sp, #0x110
   1b5e8:	str	x1, [sp, #48]
   1b5ec:	str	x1, [sp, #56]
   1b5f0:	add	x1, sp, #0xd0
   1b5f4:	str	x1, [sp, #64]
   1b5f8:	mov	w1, #0xffffffc8            	// #-56
   1b5fc:	str	w1, [sp, #72]
   1b600:	mov	w1, #0xffffff80            	// #-128
   1b604:	str	w1, [sp, #76]
   1b608:	ldp	x2, x3, [sp, #48]
   1b60c:	stp	x2, x3, [sp, #16]
   1b610:	ldp	x2, x3, [sp, #64]
   1b614:	stp	x2, x3, [sp, #32]
   1b618:	add	x1, sp, #0x10
   1b61c:	bl	adf0 <xvasprintf@plt>
   1b620:	ldp	x29, x30, [sp], #272
   1b624:	ret

000000000001b628 <asnprintf@@Base>:
   1b628:	stp	x29, x30, [sp, #-256]!
   1b62c:	mov	x29, sp
   1b630:	str	x3, [sp, #216]
   1b634:	str	x4, [sp, #224]
   1b638:	str	x5, [sp, #232]
   1b63c:	str	x6, [sp, #240]
   1b640:	str	x7, [sp, #248]
   1b644:	str	q0, [sp, #80]
   1b648:	str	q1, [sp, #96]
   1b64c:	str	q2, [sp, #112]
   1b650:	str	q3, [sp, #128]
   1b654:	str	q4, [sp, #144]
   1b658:	str	q5, [sp, #160]
   1b65c:	str	q6, [sp, #176]
   1b660:	str	q7, [sp, #192]
   1b664:	add	x3, sp, #0x100
   1b668:	str	x3, [sp, #48]
   1b66c:	str	x3, [sp, #56]
   1b670:	add	x3, sp, #0xd0
   1b674:	str	x3, [sp, #64]
   1b678:	mov	w3, #0xffffffd8            	// #-40
   1b67c:	str	w3, [sp, #72]
   1b680:	mov	w3, #0xffffff80            	// #-128
   1b684:	str	w3, [sp, #76]
   1b688:	ldp	x4, x5, [sp, #48]
   1b68c:	stp	x4, x5, [sp, #16]
   1b690:	ldp	x4, x5, [sp, #64]
   1b694:	stp	x4, x5, [sp, #32]
   1b698:	add	x3, sp, #0x10
   1b69c:	bl	aad0 <vasnprintf@plt>
   1b6a0:	ldp	x29, x30, [sp], #256
   1b6a4:	ret
   1b6a8:	ldr	w0, [x0]
   1b6ac:	tbz	w0, #31, 1b6b4 <asnprintf@@Base+0x8c>
   1b6b0:	ret
   1b6b4:	stp	x29, x30, [sp, #-16]!
   1b6b8:	mov	x29, sp
   1b6bc:	bl	a850 <close@plt>
   1b6c0:	cbnz	w0, 1b6cc <asnprintf@@Base+0xa4>
   1b6c4:	ldp	x29, x30, [sp], #16
   1b6c8:	ret
   1b6cc:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   1b6d0:	add	x3, x3, #0x968
   1b6d4:	mov	w2, #0x40                  	// #64
   1b6d8:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1b6dc:	add	x1, x1, #0x8f8
   1b6e0:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1b6e4:	add	x0, x0, #0x908
   1b6e8:	bl	aea0 <__assert_fail@plt>
   1b6ec:	stp	x29, x30, [sp, #-32]!
   1b6f0:	mov	x29, sp
   1b6f4:	stp	x19, x20, [sp, #16]
   1b6f8:	mov	x19, x0
   1b6fc:	mov	w2, #0x4900                	// #18688
   1b700:	ldr	w0, [x0]
   1b704:	bl	ae90 <openat@plt>
   1b708:	tbnz	w0, #31, 1b72c <asnprintf@@Base+0x104>
   1b70c:	mov	w20, w0
   1b710:	mov	x0, x19
   1b714:	bl	1b6a8 <asnprintf@@Base+0x80>
   1b718:	str	w20, [x19]
   1b71c:	mov	w0, #0x0                   	// #0
   1b720:	ldp	x19, x20, [sp, #16]
   1b724:	ldp	x29, x30, [sp], #32
   1b728:	ret
   1b72c:	mov	w0, #0xffffffff            	// #-1
   1b730:	b	1b720 <asnprintf@@Base+0xf8>

000000000001b734 <chdir_long@@Base>:
   1b734:	stp	x29, x30, [sp, #-96]!
   1b738:	mov	x29, sp
   1b73c:	stp	x19, x20, [sp, #16]
   1b740:	stp	x21, x22, [sp, #32]
   1b744:	mov	x21, x0
   1b748:	bl	aa30 <chdir@plt>
   1b74c:	mov	w19, w0
   1b750:	cbz	w0, 1b768 <chdir_long@@Base+0x34>
   1b754:	bl	aeb0 <__errno_location@plt>
   1b758:	mov	x22, x0
   1b75c:	ldr	w0, [x0]
   1b760:	cmp	w0, #0x24
   1b764:	b.eq	1b77c <chdir_long@@Base+0x48>  // b.none
   1b768:	mov	w0, w19
   1b76c:	ldp	x19, x20, [sp, #16]
   1b770:	ldp	x21, x22, [sp, #32]
   1b774:	ldp	x29, x30, [sp], #96
   1b778:	ret
   1b77c:	stp	x23, x24, [sp, #48]
   1b780:	mov	x0, x21
   1b784:	bl	a340 <strlen@plt>
   1b788:	mov	x23, x0
   1b78c:	mov	w0, #0xffffff9c            	// #-100
   1b790:	str	w0, [sp, #88]
   1b794:	cbz	x23, 1b89c <chdir_long@@Base+0x168>
   1b798:	cmp	x23, #0xfff
   1b79c:	b.ls	1b8c4 <chdir_long@@Base+0x190>  // b.plast
   1b7a0:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1b7a4:	add	x1, x1, #0xb00
   1b7a8:	mov	x0, x21
   1b7ac:	bl	ab40 <strspn@plt>
   1b7b0:	mov	x19, x0
   1b7b4:	cmp	x0, #0x2
   1b7b8:	b.eq	1b8ec <chdir_long@@Base+0x1b8>  // b.none
   1b7bc:	mov	x20, x21
   1b7c0:	cbnz	x0, 1b950 <chdir_long@@Base+0x21c>
   1b7c4:	ldrb	w0, [x20]
   1b7c8:	cmp	w0, #0x2f
   1b7cc:	b.eq	1b96c <chdir_long@@Base+0x238>  // b.none
   1b7d0:	add	x21, x21, x23
   1b7d4:	cmp	x20, x21
   1b7d8:	b.hi	1b994 <chdir_long@@Base+0x260>  // b.pmore
   1b7dc:	sub	x0, x21, x20
   1b7e0:	cmp	x0, #0xfff
   1b7e4:	b.le	1b864 <chdir_long@@Base+0x130>
   1b7e8:	stp	x25, x26, [sp, #64]
   1b7ec:	mov	x25, #0x1000                	// #4096
   1b7f0:	mov	w24, #0x2f                  	// #47
   1b7f4:	add	x26, sp, #0x58
   1b7f8:	adrp	x23, 2e000 <vasnprintf@@Base+0x3378>
   1b7fc:	add	x23, x23, #0xb00
   1b800:	mov	x2, x25
   1b804:	mov	w1, w24
   1b808:	mov	x0, x20
   1b80c:	bl	ab90 <memrchr@plt>
   1b810:	mov	x19, x0
   1b814:	cbz	x0, 1b9bc <chdir_long@@Base+0x288>
   1b818:	strb	wzr, [x0]
   1b81c:	sub	x0, x0, x20
   1b820:	cmp	x0, #0xfff
   1b824:	b.gt	1b9d4 <chdir_long@@Base+0x2a0>
   1b828:	mov	x1, x20
   1b82c:	mov	x0, x26
   1b830:	bl	1b6ec <asnprintf@@Base+0xc4>
   1b834:	mov	w1, #0x2f                  	// #47
   1b838:	strb	w1, [x19]
   1b83c:	cbnz	w0, 1b9f8 <chdir_long@@Base+0x2c4>
   1b840:	add	x19, x19, #0x1
   1b844:	mov	x1, x23
   1b848:	mov	x0, x19
   1b84c:	bl	ab40 <strspn@plt>
   1b850:	add	x20, x19, x0
   1b854:	sub	x0, x21, x20
   1b858:	cmp	x0, #0xfff
   1b85c:	b.gt	1b800 <chdir_long@@Base+0xcc>
   1b860:	ldp	x25, x26, [sp, #64]
   1b864:	cmp	x21, x20
   1b868:	b.ls	1b87c <chdir_long@@Base+0x148>  // b.plast
   1b86c:	mov	x1, x20
   1b870:	add	x0, sp, #0x58
   1b874:	bl	1b6ec <asnprintf@@Base+0xc4>
   1b878:	cbnz	w0, 1b9fc <chdir_long@@Base+0x2c8>
   1b87c:	ldr	w0, [sp, #88]
   1b880:	bl	a380 <fchdir@plt>
   1b884:	mov	w19, w0
   1b888:	cbnz	w0, 1b9fc <chdir_long@@Base+0x2c8>
   1b88c:	add	x0, sp, #0x58
   1b890:	bl	1b6a8 <asnprintf@@Base+0x80>
   1b894:	ldp	x23, x24, [sp, #48]
   1b898:	b	1b768 <chdir_long@@Base+0x34>
   1b89c:	stp	x25, x26, [sp, #64]
   1b8a0:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   1b8a4:	add	x3, x3, #0x968
   1b8a8:	add	x3, x3, #0x10
   1b8ac:	mov	w2, #0x7e                  	// #126
   1b8b0:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1b8b4:	add	x1, x1, #0x8f8
   1b8b8:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1b8bc:	add	x0, x0, #0x918
   1b8c0:	bl	aea0 <__assert_fail@plt>
   1b8c4:	stp	x25, x26, [sp, #64]
   1b8c8:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   1b8cc:	add	x3, x3, #0x968
   1b8d0:	add	x3, x3, #0x10
   1b8d4:	mov	w2, #0x7f                  	// #127
   1b8d8:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1b8dc:	add	x1, x1, #0x8f8
   1b8e0:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1b8e4:	add	x0, x0, #0x920
   1b8e8:	bl	aea0 <__assert_fail@plt>
   1b8ec:	sub	x2, x23, #0x3
   1b8f0:	mov	w1, #0x2f                  	// #47
   1b8f4:	add	x0, x21, #0x3
   1b8f8:	bl	ac90 <memchr@plt>
   1b8fc:	mov	x19, x0
   1b900:	cbz	x0, 1b93c <chdir_long@@Base+0x208>
   1b904:	strb	wzr, [x0]
   1b908:	mov	x1, x21
   1b90c:	add	x0, sp, #0x58
   1b910:	bl	1b6ec <asnprintf@@Base+0xc4>
   1b914:	mov	w1, #0x2f                  	// #47
   1b918:	strb	w1, [x19]
   1b91c:	cbnz	w0, 1b9fc <chdir_long@@Base+0x2c8>
   1b920:	add	x19, x19, #0x1
   1b924:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1b928:	add	x1, x1, #0xb00
   1b92c:	mov	x0, x19
   1b930:	bl	ab40 <strspn@plt>
   1b934:	add	x20, x19, x0
   1b938:	b	1b7c4 <chdir_long@@Base+0x90>
   1b93c:	mov	w0, #0x24                  	// #36
   1b940:	str	w0, [x22]
   1b944:	mov	w19, #0xffffffff            	// #-1
   1b948:	ldp	x23, x24, [sp, #48]
   1b94c:	b	1b768 <chdir_long@@Base+0x34>
   1b950:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1b954:	add	x1, x1, #0xb00
   1b958:	add	x0, sp, #0x58
   1b95c:	bl	1b6ec <asnprintf@@Base+0xc4>
   1b960:	cbnz	w0, 1b9fc <chdir_long@@Base+0x2c8>
   1b964:	add	x20, x21, x19
   1b968:	b	1b7c4 <chdir_long@@Base+0x90>
   1b96c:	stp	x25, x26, [sp, #64]
   1b970:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   1b974:	add	x3, x3, #0x968
   1b978:	add	x3, x3, #0x10
   1b97c:	mov	w2, #0xa2                  	// #162
   1b980:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1b984:	add	x1, x1, #0x8f8
   1b988:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1b98c:	add	x0, x0, #0x930
   1b990:	bl	aea0 <__assert_fail@plt>
   1b994:	stp	x25, x26, [sp, #64]
   1b998:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   1b99c:	add	x3, x3, #0x968
   1b9a0:	add	x3, x3, #0x10
   1b9a4:	mov	w2, #0xa3                  	// #163
   1b9a8:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1b9ac:	add	x1, x1, #0x8f8
   1b9b0:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1b9b4:	add	x0, x0, #0x940
   1b9b8:	bl	aea0 <__assert_fail@plt>
   1b9bc:	mov	w0, #0x24                  	// #36
   1b9c0:	str	w0, [x22]
   1b9c4:	mov	w19, #0xffffffff            	// #-1
   1b9c8:	ldp	x23, x24, [sp, #48]
   1b9cc:	ldp	x25, x26, [sp, #64]
   1b9d0:	b	1b768 <chdir_long@@Base+0x34>
   1b9d4:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   1b9d8:	add	x3, x3, #0x968
   1b9dc:	add	x3, x3, #0x10
   1b9e0:	mov	w2, #0xb3                  	// #179
   1b9e4:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1b9e8:	add	x1, x1, #0x8f8
   1b9ec:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1b9f0:	add	x0, x0, #0x950
   1b9f4:	bl	aea0 <__assert_fail@plt>
   1b9f8:	ldp	x25, x26, [sp, #64]
   1b9fc:	ldr	w19, [x22]
   1ba00:	add	x0, sp, #0x58
   1ba04:	bl	1b6a8 <asnprintf@@Base+0x80>
   1ba08:	str	w19, [x22]
   1ba0c:	mov	w19, #0xffffffff            	// #-1
   1ba10:	ldp	x23, x24, [sp, #48]
   1ba14:	b	1b768 <chdir_long@@Base+0x34>

000000000001ba18 <rpl_fcntl@@Base>:
   1ba18:	stp	x29, x30, [sp, #-112]!
   1ba1c:	mov	x29, sp
   1ba20:	stp	x19, x20, [sp, #16]
   1ba24:	mov	w19, w0
   1ba28:	str	x2, [sp, #80]
   1ba2c:	str	x3, [sp, #88]
   1ba30:	str	x4, [sp, #96]
   1ba34:	str	x5, [sp, #104]
   1ba38:	add	x0, sp, #0x70
   1ba3c:	str	x0, [sp, #48]
   1ba40:	str	x0, [sp, #56]
   1ba44:	add	x0, sp, #0x50
   1ba48:	str	x0, [sp, #64]
   1ba4c:	mov	w0, #0xffffffe0            	// #-32
   1ba50:	str	w0, [sp, #72]
   1ba54:	str	wzr, [sp, #76]
   1ba58:	cbz	w1, 1ba9c <rpl_fcntl@@Base+0x84>
   1ba5c:	cmp	w1, #0x406
   1ba60:	b.eq	1bb04 <rpl_fcntl@@Base+0xec>  // b.none
   1ba64:	cmp	w1, #0xb
   1ba68:	b.gt	1bc64 <rpl_fcntl@@Base+0x24c>
   1ba6c:	tbz	w1, #31, 1bc40 <rpl_fcntl@@Base+0x228>
   1ba70:	ldr	w2, [sp, #72]
   1ba74:	ldr	x0, [sp, #48]
   1ba78:	tbnz	w2, #31, 1bcf8 <rpl_fcntl@@Base+0x2e0>
   1ba7c:	add	x2, x0, #0xf
   1ba80:	and	x2, x2, #0xfffffffffffffff8
   1ba84:	str	x2, [sp, #48]
   1ba88:	ldr	x2, [x0]
   1ba8c:	mov	w0, w19
   1ba90:	bl	ac00 <fcntl@plt>
   1ba94:	mov	w20, w0
   1ba98:	b	1bac8 <rpl_fcntl@@Base+0xb0>
   1ba9c:	ldr	w1, [sp, #72]
   1baa0:	ldr	x0, [sp, #48]
   1baa4:	tbnz	w1, #31, 1bad8 <rpl_fcntl@@Base+0xc0>
   1baa8:	add	x1, x0, #0xb
   1baac:	and	x1, x1, #0xfffffffffffffff8
   1bab0:	str	x1, [sp, #48]
   1bab4:	ldr	w2, [x0]
   1bab8:	mov	w1, #0x0                   	// #0
   1babc:	mov	w0, w19
   1bac0:	bl	ac00 <fcntl@plt>
   1bac4:	mov	w20, w0
   1bac8:	mov	w0, w20
   1bacc:	ldp	x19, x20, [sp, #16]
   1bad0:	ldp	x29, x30, [sp], #112
   1bad4:	ret
   1bad8:	add	w2, w1, #0x8
   1badc:	str	w2, [sp, #72]
   1bae0:	cmp	w2, #0x0
   1bae4:	b.le	1baf8 <rpl_fcntl@@Base+0xe0>
   1bae8:	add	x1, x0, #0xb
   1baec:	and	x1, x1, #0xfffffffffffffff8
   1baf0:	str	x1, [sp, #48]
   1baf4:	b	1bab4 <rpl_fcntl@@Base+0x9c>
   1baf8:	ldr	x0, [sp, #56]
   1bafc:	add	x0, x0, w1, sxtw
   1bb00:	b	1bab4 <rpl_fcntl@@Base+0x9c>
   1bb04:	str	x21, [sp, #32]
   1bb08:	ldr	w1, [sp, #72]
   1bb0c:	ldr	x0, [sp, #48]
   1bb10:	tbnz	w1, #31, 1bb5c <rpl_fcntl@@Base+0x144>
   1bb14:	add	x1, x0, #0xb
   1bb18:	and	x1, x1, #0xfffffffffffffff8
   1bb1c:	str	x1, [sp, #48]
   1bb20:	ldr	w21, [x0]
   1bb24:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1bb28:	ldr	w0, [x0, #1104]
   1bb2c:	tbnz	w0, #31, 1bbec <rpl_fcntl@@Base+0x1d4>
   1bb30:	mov	w2, w21
   1bb34:	mov	w1, #0x406                 	// #1030
   1bb38:	mov	w0, w19
   1bb3c:	bl	ac00 <fcntl@plt>
   1bb40:	mov	w20, w0
   1bb44:	tbnz	w0, #31, 1bb88 <rpl_fcntl@@Base+0x170>
   1bb48:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1bb4c:	mov	w1, #0x1                   	// #1
   1bb50:	str	w1, [x0, #1104]
   1bb54:	ldr	x21, [sp, #32]
   1bb58:	b	1bac8 <rpl_fcntl@@Base+0xb0>
   1bb5c:	add	w2, w1, #0x8
   1bb60:	str	w2, [sp, #72]
   1bb64:	cmp	w2, #0x0
   1bb68:	b.le	1bb7c <rpl_fcntl@@Base+0x164>
   1bb6c:	add	x1, x0, #0xb
   1bb70:	and	x1, x1, #0xfffffffffffffff8
   1bb74:	str	x1, [sp, #48]
   1bb78:	b	1bb20 <rpl_fcntl@@Base+0x108>
   1bb7c:	ldr	x0, [sp, #56]
   1bb80:	add	x0, x0, w1, sxtw
   1bb84:	b	1bb20 <rpl_fcntl@@Base+0x108>
   1bb88:	bl	aeb0 <__errno_location@plt>
   1bb8c:	ldr	w0, [x0]
   1bb90:	cmp	w0, #0x16
   1bb94:	b.ne	1bb48 <rpl_fcntl@@Base+0x130>  // b.any
   1bb98:	mov	w2, w21
   1bb9c:	mov	w1, #0x0                   	// #0
   1bba0:	mov	w0, w19
   1bba4:	bl	ac00 <fcntl@plt>
   1bba8:	mov	w20, w0
   1bbac:	tbnz	w0, #31, 1bd24 <rpl_fcntl@@Base+0x30c>
   1bbb0:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1bbb4:	mov	w1, #0xffffffff            	// #-1
   1bbb8:	str	w1, [x0, #1104]
   1bbbc:	mov	w1, #0x1                   	// #1
   1bbc0:	mov	w0, w20
   1bbc4:	bl	ac00 <fcntl@plt>
   1bbc8:	tbnz	w0, #31, 1bc1c <rpl_fcntl@@Base+0x204>
   1bbcc:	orr	w2, w0, #0x1
   1bbd0:	mov	w1, #0x2                   	// #2
   1bbd4:	mov	w0, w20
   1bbd8:	bl	ac00 <fcntl@plt>
   1bbdc:	cmn	w0, #0x1
   1bbe0:	b.eq	1bc1c <rpl_fcntl@@Base+0x204>  // b.none
   1bbe4:	ldr	x21, [sp, #32]
   1bbe8:	b	1bac8 <rpl_fcntl@@Base+0xb0>
   1bbec:	mov	w2, w21
   1bbf0:	mov	w1, #0x0                   	// #0
   1bbf4:	mov	w0, w19
   1bbf8:	bl	ac00 <fcntl@plt>
   1bbfc:	mov	w20, w0
   1bc00:	tbnz	w0, #31, 1bd2c <rpl_fcntl@@Base+0x314>
   1bc04:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1bc08:	ldr	w0, [x0, #1104]
   1bc0c:	cmn	w0, #0x1
   1bc10:	b.eq	1bbbc <rpl_fcntl@@Base+0x1a4>  // b.none
   1bc14:	ldr	x21, [sp, #32]
   1bc18:	b	1bac8 <rpl_fcntl@@Base+0xb0>
   1bc1c:	bl	aeb0 <__errno_location@plt>
   1bc20:	mov	x19, x0
   1bc24:	ldr	w21, [x0]
   1bc28:	mov	w0, w20
   1bc2c:	bl	a850 <close@plt>
   1bc30:	str	w21, [x19]
   1bc34:	mov	w20, #0xffffffff            	// #-1
   1bc38:	ldr	x21, [sp, #32]
   1bc3c:	b	1bac8 <rpl_fcntl@@Base+0xb0>
   1bc40:	mov	x2, #0x1                   	// #1
   1bc44:	lsl	x2, x2, x1
   1bc48:	mov	x0, #0x515                 	// #1301
   1bc4c:	tst	x2, x0
   1bc50:	b.ne	1bca0 <rpl_fcntl@@Base+0x288>  // b.any
   1bc54:	mov	x0, #0xa0a                 	// #2570
   1bc58:	tst	x2, x0
   1bc5c:	b.ne	1bc90 <rpl_fcntl@@Base+0x278>  // b.any
   1bc60:	b	1ba70 <rpl_fcntl@@Base+0x58>
   1bc64:	sub	w0, w1, #0x400
   1bc68:	cmp	w0, #0xa
   1bc6c:	b.hi	1ba70 <rpl_fcntl@@Base+0x58>  // b.pmore
   1bc70:	mov	x2, #0x1                   	// #1
   1bc74:	lsl	x2, x2, x0
   1bc78:	mov	x0, #0x2c5                 	// #709
   1bc7c:	tst	x2, x0
   1bc80:	b.ne	1bca0 <rpl_fcntl@@Base+0x288>  // b.any
   1bc84:	mov	x0, #0x502                 	// #1282
   1bc88:	tst	x2, x0
   1bc8c:	b.eq	1ba70 <rpl_fcntl@@Base+0x58>  // b.none
   1bc90:	mov	w0, w19
   1bc94:	bl	ac00 <fcntl@plt>
   1bc98:	mov	w20, w0
   1bc9c:	b	1bac8 <rpl_fcntl@@Base+0xb0>
   1bca0:	ldr	w2, [sp, #72]
   1bca4:	ldr	x0, [sp, #48]
   1bca8:	tbnz	w2, #31, 1bccc <rpl_fcntl@@Base+0x2b4>
   1bcac:	add	x2, x0, #0xb
   1bcb0:	and	x2, x2, #0xfffffffffffffff8
   1bcb4:	str	x2, [sp, #48]
   1bcb8:	ldr	w2, [x0]
   1bcbc:	mov	w0, w19
   1bcc0:	bl	ac00 <fcntl@plt>
   1bcc4:	mov	w20, w0
   1bcc8:	b	1bac8 <rpl_fcntl@@Base+0xb0>
   1bccc:	add	w3, w2, #0x8
   1bcd0:	str	w3, [sp, #72]
   1bcd4:	cmp	w3, #0x0
   1bcd8:	b.le	1bcec <rpl_fcntl@@Base+0x2d4>
   1bcdc:	add	x2, x0, #0xb
   1bce0:	and	x2, x2, #0xfffffffffffffff8
   1bce4:	str	x2, [sp, #48]
   1bce8:	b	1bcb8 <rpl_fcntl@@Base+0x2a0>
   1bcec:	ldr	x0, [sp, #56]
   1bcf0:	add	x0, x0, w2, sxtw
   1bcf4:	b	1bcb8 <rpl_fcntl@@Base+0x2a0>
   1bcf8:	add	w3, w2, #0x8
   1bcfc:	str	w3, [sp, #72]
   1bd00:	cmp	w3, #0x0
   1bd04:	b.le	1bd18 <rpl_fcntl@@Base+0x300>
   1bd08:	add	x2, x0, #0xf
   1bd0c:	and	x2, x2, #0xfffffffffffffff8
   1bd10:	str	x2, [sp, #48]
   1bd14:	b	1ba88 <rpl_fcntl@@Base+0x70>
   1bd18:	ldr	x0, [sp, #56]
   1bd1c:	add	x0, x0, w2, sxtw
   1bd20:	b	1ba88 <rpl_fcntl@@Base+0x70>
   1bd24:	ldr	x21, [sp, #32]
   1bd28:	b	1bac8 <rpl_fcntl@@Base+0xb0>
   1bd2c:	ldr	x21, [sp, #32]
   1bd30:	b	1bac8 <rpl_fcntl@@Base+0xb0>
   1bd34:	ldr	w8, [x1, #44]
   1bd38:	ldr	w9, [x1, #48]
   1bd3c:	ldr	w10, [x1]
   1bd40:	cmp	w9, w10
   1bd44:	ccmp	w8, w9, #0x0, lt  // lt = tstop
   1bd48:	b.ge	1bdf8 <rpl_fcntl@@Base+0x3e0>  // b.tcont
   1bd4c:	add	x13, x0, #0x8
   1bd50:	sxtw	x12, w9
   1bd54:	b	1bda4 <rpl_fcntl@@Base+0x38c>
   1bd58:	cmp	w7, #0x0
   1bd5c:	b.le	1bd94 <rpl_fcntl@@Base+0x37c>
   1bd60:	add	x4, x0, w8, sxtw #3
   1bd64:	sxtw	x3, w7
   1bd68:	neg	x3, x3, lsl #3
   1bd6c:	add	x3, x3, w10, sxtw #3
   1bd70:	add	x3, x0, x3
   1bd74:	mov	x2, #0x0                   	// #0
   1bd78:	ldr	x5, [x4, x2, lsl #3]
   1bd7c:	ldr	x6, [x3, x2, lsl #3]
   1bd80:	str	x6, [x4, x2, lsl #3]
   1bd84:	str	x5, [x3, x2, lsl #3]
   1bd88:	add	x2, x2, #0x1
   1bd8c:	cmp	w7, w2
   1bd90:	b.gt	1bd78 <rpl_fcntl@@Base+0x360>
   1bd94:	sub	w10, w10, w7
   1bd98:	cmp	w10, w9
   1bd9c:	ccmp	w9, w8, #0x4, gt
   1bda0:	b.le	1bdf8 <rpl_fcntl@@Base+0x3e0>
   1bda4:	sub	w11, w10, w9
   1bda8:	sub	w7, w9, w8
   1bdac:	cmp	w11, w7
   1bdb0:	b.gt	1bd58 <rpl_fcntl@@Base+0x340>
   1bdb4:	cmp	w11, #0x0
   1bdb8:	b.le	1bdf0 <rpl_fcntl@@Base+0x3d8>
   1bdbc:	sxtw	x3, w8
   1bdc0:	add	x2, x0, w8, sxtw #3
   1bdc4:	sub	w6, w11, #0x1
   1bdc8:	add	x6, x6, x3
   1bdcc:	add	x6, x13, x6, lsl #3
   1bdd0:	sub	x3, x12, x3
   1bdd4:	ldr	x4, [x2]
   1bdd8:	ldr	x5, [x2, x3, lsl #3]
   1bddc:	str	x5, [x2]
   1bde0:	str	x4, [x2, x3, lsl #3]
   1bde4:	add	x2, x2, #0x8
   1bde8:	cmp	x2, x6
   1bdec:	b.ne	1bdd4 <rpl_fcntl@@Base+0x3bc>  // b.any
   1bdf0:	add	w8, w8, w11
   1bdf4:	b	1bd98 <rpl_fcntl@@Base+0x380>
   1bdf8:	ldr	w3, [x1]
   1bdfc:	ldr	w0, [x1, #48]
   1be00:	sub	w2, w3, w0
   1be04:	ldr	w0, [x1, #44]
   1be08:	add	w0, w0, w2
   1be0c:	str	w0, [x1, #44]
   1be10:	str	w3, [x1, #48]
   1be14:	ret
   1be18:	stp	x29, x30, [sp, #-176]!
   1be1c:	mov	x29, sp
   1be20:	stp	x19, x20, [sp, #16]
   1be24:	stp	x21, x22, [sp, #32]
   1be28:	stp	x23, x24, [sp, #48]
   1be2c:	stp	x25, x26, [sp, #64]
   1be30:	stp	x27, x28, [sp, #80]
   1be34:	str	w0, [sp, #156]
   1be38:	str	x1, [sp, #128]
   1be3c:	str	x2, [sp, #144]
   1be40:	str	x3, [sp, #104]
   1be44:	str	x4, [sp, #120]
   1be48:	str	w5, [sp, #112]
   1be4c:	mov	x25, x6
   1be50:	str	w7, [sp, #116]
   1be54:	ldr	x23, [x6, #32]
   1be58:	ldrb	w28, [x23]
   1be5c:	cmp	w28, #0x3d
   1be60:	ccmp	w28, #0x0, #0x4, ne  // ne = any
   1be64:	b.eq	1be98 <rpl_fcntl@@Base+0x480>  // b.none
   1be68:	mov	x22, x23
   1be6c:	ldrb	w0, [x22, #1]!
   1be70:	cmp	w0, #0x3d
   1be74:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   1be78:	b.ne	1be6c <rpl_fcntl@@Base+0x454>  // b.any
   1be7c:	sub	x21, x22, x23
   1be80:	ldr	x19, [sp, #104]
   1be84:	ldr	x24, [x19]
   1be88:	cbz	x24, 1c340 <rpl_fcntl@@Base+0x928>
   1be8c:	mov	x26, x24
   1be90:	mov	w20, #0x0                   	// #0
   1be94:	b	1beac <rpl_fcntl@@Base+0x494>
   1be98:	mov	x22, x23
   1be9c:	b	1be7c <rpl_fcntl@@Base+0x464>
   1bea0:	add	w20, w20, #0x1
   1bea4:	ldr	x26, [x19, #32]!
   1bea8:	cbz	x26, 1c344 <rpl_fcntl@@Base+0x92c>
   1beac:	mov	x2, x21
   1beb0:	mov	x1, x23
   1beb4:	mov	x0, x26
   1beb8:	bl	a6c0 <strncmp@plt>
   1bebc:	cbnz	w0, 1bea0 <rpl_fcntl@@Base+0x488>
   1bec0:	mov	x0, x26
   1bec4:	bl	a340 <strlen@plt>
   1bec8:	cmp	x0, x21
   1becc:	b.ne	1bea0 <rpl_fcntl@@Base+0x488>  // b.any
   1bed0:	cbz	x19, 1c348 <rpl_fcntl@@Base+0x930>
   1bed4:	ldr	w0, [x25]
   1bed8:	add	w1, w0, #0x1
   1bedc:	str	w1, [x25]
   1bee0:	str	xzr, [x25, #32]
   1bee4:	ldrb	w2, [x22]
   1bee8:	cbz	w2, 1c290 <rpl_fcntl@@Base+0x878>
   1beec:	ldr	w0, [x19, #8]
   1bef0:	cbz	w0, 1c234 <rpl_fcntl@@Base+0x81c>
   1bef4:	add	x22, x22, #0x1
   1bef8:	str	x22, [x25, #16]
   1befc:	ldr	x0, [sp, #120]
   1bf00:	cbz	x0, 1bf08 <rpl_fcntl@@Base+0x4f0>
   1bf04:	str	w20, [x0]
   1bf08:	ldr	x0, [x19, #16]
   1bf0c:	cbz	x0, 1c330 <rpl_fcntl@@Base+0x918>
   1bf10:	ldr	w1, [x19, #24]
   1bf14:	str	w1, [x0]
   1bf18:	mov	w0, #0x0                   	// #0
   1bf1c:	ldp	x19, x20, [sp, #16]
   1bf20:	ldp	x21, x22, [sp, #32]
   1bf24:	ldp	x23, x24, [sp, #48]
   1bf28:	ldp	x25, x26, [sp, #64]
   1bf2c:	ldp	x27, x28, [sp, #80]
   1bf30:	ldp	x29, x30, [sp], #176
   1bf34:	ret
   1bf38:	ldr	x1, [x19, #16]
   1bf3c:	ldr	x0, [x27, #16]
   1bf40:	cmp	x1, x0
   1bf44:	b.ne	1bff8 <rpl_fcntl@@Base+0x5e0>  // b.any
   1bf48:	ldr	w1, [x19, #24]
   1bf4c:	ldr	w0, [x27, #24]
   1bf50:	cmp	w1, w0
   1bf54:	b.ne	1bff8 <rpl_fcntl@@Base+0x5e0>  // b.any
   1bf58:	b	1bfb8 <rpl_fcntl@@Base+0x5a0>
   1bf5c:	ldr	x0, [sp, #168]
   1bf60:	bl	a5f0 <malloc@plt>
   1bf64:	str	x0, [sp, #136]
   1bf68:	cbz	x0, 1c020 <rpl_fcntl@@Base+0x608>
   1bf6c:	ldr	x2, [sp, #168]
   1bf70:	mov	w1, #0x0                   	// #0
   1bf74:	ldr	x24, [sp, #136]
   1bf78:	mov	x0, x24
   1bf7c:	bl	a6f0 <memset@plt>
   1bf80:	ldr	w1, [sp, #160]
   1bf84:	mov	w2, #0x1                   	// #1
   1bf88:	strb	w2, [x24, w1, sxtw]
   1bf8c:	mov	w0, #0x1                   	// #1
   1bf90:	str	w0, [sp, #164]
   1bf94:	b	1c010 <rpl_fcntl@@Base+0x5f8>
   1bf98:	mov	w0, #0x1                   	// #1
   1bf9c:	str	w0, [sp, #152]
   1bfa0:	ldr	x0, [sp, #136]
   1bfa4:	cbz	x0, 1bfb8 <rpl_fcntl@@Base+0x5a0>
   1bfa8:	b	1c010 <rpl_fcntl@@Base+0x5f8>
   1bfac:	ldr	w0, [sp, #100]
   1bfb0:	str	w0, [sp, #160]
   1bfb4:	mov	x19, x27
   1bfb8:	ldr	x24, [x27, #32]!
   1bfbc:	add	x26, x26, #0x1
   1bfc0:	cbz	x24, 1c02c <rpl_fcntl@@Base+0x614>
   1bfc4:	str	w26, [sp, #100]
   1bfc8:	mov	x2, x21
   1bfcc:	mov	x1, x23
   1bfd0:	mov	x0, x24
   1bfd4:	bl	a6c0 <strncmp@plt>
   1bfd8:	cbnz	w0, 1bfb8 <rpl_fcntl@@Base+0x5a0>
   1bfdc:	cbz	x19, 1bfac <rpl_fcntl@@Base+0x594>
   1bfe0:	ldr	w0, [sp, #112]
   1bfe4:	cbnz	w0, 1bff8 <rpl_fcntl@@Base+0x5e0>
   1bfe8:	ldr	w1, [x19, #8]
   1bfec:	ldr	w0, [x27, #8]
   1bff0:	cmp	w1, w0
   1bff4:	b.eq	1bf38 <rpl_fcntl@@Base+0x520>  // b.none
   1bff8:	ldr	w0, [sp, #152]
   1bffc:	cbnz	w0, 1bfb8 <rpl_fcntl@@Base+0x5a0>
   1c000:	ldr	w0, [sp, #116]
   1c004:	cbz	w0, 1bf98 <rpl_fcntl@@Base+0x580>
   1c008:	ldr	x0, [sp, #136]
   1c00c:	cbz	x0, 1bf5c <rpl_fcntl@@Base+0x544>
   1c010:	ldr	x0, [sp, #136]
   1c014:	mov	w1, #0x1                   	// #1
   1c018:	strb	w1, [x0, x26]
   1c01c:	b	1bfb8 <rpl_fcntl@@Base+0x5a0>
   1c020:	mov	w0, #0x1                   	// #1
   1c024:	str	w0, [sp, #152]
   1c028:	b	1bfb8 <rpl_fcntl@@Base+0x5a0>
   1c02c:	ldr	x0, [sp, #136]
   1c030:	cmp	x0, #0x0
   1c034:	ldr	w0, [sp, #152]
   1c038:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   1c03c:	b.ne	1c098 <rpl_fcntl@@Base+0x680>  // b.any
   1c040:	cbnz	x19, 1c22c <rpl_fcntl@@Base+0x814>
   1c044:	ldr	w0, [sp, #112]
   1c048:	cbz	w0, 1c074 <rpl_fcntl@@Base+0x65c>
   1c04c:	ldrsw	x0, [x25]
   1c050:	ldr	x1, [sp, #128]
   1c054:	ldr	x0, [x1, x0, lsl #3]
   1c058:	ldrb	w0, [x0, #1]
   1c05c:	cmp	w0, #0x2d
   1c060:	b.eq	1c074 <rpl_fcntl@@Base+0x65c>  // b.none
   1c064:	mov	w1, w28
   1c068:	ldr	x0, [sp, #144]
   1c06c:	bl	ab60 <strchr@plt>
   1c070:	cbnz	x0, 1c338 <rpl_fcntl@@Base+0x920>
   1c074:	ldr	w0, [sp, #116]
   1c078:	cbnz	w0, 1c1e8 <rpl_fcntl@@Base+0x7d0>
   1c07c:	str	xzr, [x25, #32]
   1c080:	ldr	w0, [x25]
   1c084:	add	w0, w0, #0x1
   1c088:	str	w0, [x25]
   1c08c:	str	wzr, [x25, #8]
   1c090:	mov	w0, #0x3f                  	// #63
   1c094:	b	1bf1c <rpl_fcntl@@Base+0x504>
   1c098:	ldr	w0, [sp, #116]
   1c09c:	cbz	w0, 1c0e8 <rpl_fcntl@@Base+0x6d0>
   1c0a0:	ldr	w0, [sp, #152]
   1c0a4:	cbz	w0, 1c11c <rpl_fcntl@@Base+0x704>
   1c0a8:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   1c0ac:	ldr	x0, [x0, #3816]
   1c0b0:	ldr	x19, [x0]
   1c0b4:	mov	w2, #0x5                   	// #5
   1c0b8:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1c0bc:	add	x1, x1, #0x988
   1c0c0:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1c0c4:	add	x0, x0, #0xc08
   1c0c8:	bl	ada0 <dcgettext@plt>
   1c0cc:	ldr	x4, [x25, #32]
   1c0d0:	ldr	x3, [sp, #176]
   1c0d4:	ldr	x1, [sp, #128]
   1c0d8:	ldr	x2, [x1]
   1c0dc:	mov	x1, x0
   1c0e0:	mov	x0, x19
   1c0e4:	bl	afa0 <fprintf@plt>
   1c0e8:	ldr	w0, [sp, #164]
   1c0ec:	cbnz	w0, 1c1dc <rpl_fcntl@@Base+0x7c4>
   1c0f0:	ldr	x19, [x25, #32]
   1c0f4:	mov	x0, x19
   1c0f8:	bl	a340 <strlen@plt>
   1c0fc:	add	x19, x19, x0
   1c100:	str	x19, [x25, #32]
   1c104:	ldr	w0, [x25]
   1c108:	add	w0, w0, #0x1
   1c10c:	str	w0, [x25]
   1c110:	str	wzr, [x25, #8]
   1c114:	mov	w0, #0x3f                  	// #63
   1c118:	b	1bf1c <rpl_fcntl@@Base+0x504>
   1c11c:	adrp	x19, 46000 <vasnprintf@@Base+0x1b378>
   1c120:	ldr	x19, [x19, #3816]
   1c124:	ldr	x0, [x19]
   1c128:	bl	a3a0 <flockfile@plt>
   1c12c:	ldr	x19, [x19]
   1c130:	mov	w2, #0x5                   	// #5
   1c134:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1c138:	add	x1, x1, #0x9a8
   1c13c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1c140:	add	x0, x0, #0xc08
   1c144:	bl	ada0 <dcgettext@plt>
   1c148:	ldr	x4, [x25, #32]
   1c14c:	ldr	x3, [sp, #176]
   1c150:	ldr	x1, [sp, #128]
   1c154:	ldr	x2, [x1]
   1c158:	mov	x1, x0
   1c15c:	mov	x0, x19
   1c160:	bl	afa0 <fprintf@plt>
   1c164:	cmp	w20, #0x0
   1c168:	b.le	1c1bc <rpl_fcntl@@Base+0x7a4>
   1c16c:	mov	x19, #0x0                   	// #0
   1c170:	adrp	x22, 2e000 <vasnprintf@@Base+0x3378>
   1c174:	add	x22, x22, #0x9d8
   1c178:	adrp	x21, 46000 <vasnprintf@@Base+0x1b378>
   1c17c:	ldr	x21, [x21, #3816]
   1c180:	b	1c190 <rpl_fcntl@@Base+0x778>
   1c184:	add	x19, x19, #0x1
   1c188:	cmp	w20, w19
   1c18c:	b.le	1c1bc <rpl_fcntl@@Base+0x7a4>
   1c190:	ldr	x0, [sp, #136]
   1c194:	ldrb	w0, [x0, x19]
   1c198:	cbz	w0, 1c184 <rpl_fcntl@@Base+0x76c>
   1c19c:	lsl	x0, x19, #5
   1c1a0:	ldr	x1, [sp, #104]
   1c1a4:	ldr	x3, [x1, x0]
   1c1a8:	ldr	x2, [sp, #176]
   1c1ac:	mov	x1, x22
   1c1b0:	ldr	x0, [x21]
   1c1b4:	bl	afa0 <fprintf@plt>
   1c1b8:	b	1c184 <rpl_fcntl@@Base+0x76c>
   1c1bc:	adrp	x19, 46000 <vasnprintf@@Base+0x1b378>
   1c1c0:	ldr	x19, [x19, #3816]
   1c1c4:	ldr	x1, [x19]
   1c1c8:	mov	w0, #0xa                   	// #10
   1c1cc:	bl	a4e0 <fputc@plt>
   1c1d0:	ldr	x0, [x19]
   1c1d4:	bl	a620 <funlockfile@plt>
   1c1d8:	b	1c0e8 <rpl_fcntl@@Base+0x6d0>
   1c1dc:	ldr	x0, [sp, #136]
   1c1e0:	bl	aa50 <free@plt>
   1c1e4:	b	1c0f0 <rpl_fcntl@@Base+0x6d8>
   1c1e8:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   1c1ec:	ldr	x0, [x0, #3816]
   1c1f0:	ldr	x19, [x0]
   1c1f4:	mov	w2, #0x5                   	// #5
   1c1f8:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1c1fc:	add	x1, x1, #0x9e0
   1c200:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1c204:	add	x0, x0, #0xc08
   1c208:	bl	ada0 <dcgettext@plt>
   1c20c:	ldr	x4, [x25, #32]
   1c210:	ldr	x3, [sp, #176]
   1c214:	ldr	x1, [sp, #128]
   1c218:	ldr	x2, [x1]
   1c21c:	mov	x1, x0
   1c220:	mov	x0, x19
   1c224:	bl	afa0 <fprintf@plt>
   1c228:	b	1c07c <rpl_fcntl@@Base+0x664>
   1c22c:	ldr	w20, [sp, #160]
   1c230:	b	1bed4 <rpl_fcntl@@Base+0x4bc>
   1c234:	ldr	w0, [sp, #116]
   1c238:	cbnz	w0, 1c24c <rpl_fcntl@@Base+0x834>
   1c23c:	ldr	w0, [x19, #24]
   1c240:	str	w0, [x25, #8]
   1c244:	mov	w0, #0x3f                  	// #63
   1c248:	b	1bf1c <rpl_fcntl@@Base+0x504>
   1c24c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   1c250:	ldr	x0, [x0, #3816]
   1c254:	ldr	x20, [x0]
   1c258:	mov	w2, #0x5                   	// #5
   1c25c:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1c260:	add	x1, x1, #0xa00
   1c264:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1c268:	add	x0, x0, #0xc08
   1c26c:	bl	ada0 <dcgettext@plt>
   1c270:	ldr	x4, [x19]
   1c274:	ldr	x3, [sp, #176]
   1c278:	ldr	x1, [sp, #128]
   1c27c:	ldr	x2, [x1]
   1c280:	mov	x1, x0
   1c284:	mov	x0, x20
   1c288:	bl	afa0 <fprintf@plt>
   1c28c:	b	1c23c <rpl_fcntl@@Base+0x824>
   1c290:	ldr	w2, [x19, #8]
   1c294:	cmp	w2, #0x1
   1c298:	b.ne	1befc <rpl_fcntl@@Base+0x4e4>  // b.any
   1c29c:	ldr	w2, [sp, #156]
   1c2a0:	cmp	w1, w2
   1c2a4:	b.ge	1c2c0 <rpl_fcntl@@Base+0x8a8>  // b.tcont
   1c2a8:	add	w0, w0, #0x2
   1c2ac:	str	w0, [x25]
   1c2b0:	ldr	x0, [sp, #128]
   1c2b4:	ldr	x0, [x0, w1, sxtw #3]
   1c2b8:	str	x0, [x25, #16]
   1c2bc:	b	1befc <rpl_fcntl@@Base+0x4e4>
   1c2c0:	ldr	w0, [sp, #116]
   1c2c4:	cbnz	w0, 1c2ec <rpl_fcntl@@Base+0x8d4>
   1c2c8:	ldr	w0, [x19, #24]
   1c2cc:	str	w0, [x25, #8]
   1c2d0:	ldr	x0, [sp, #144]
   1c2d4:	ldrb	w0, [x0]
   1c2d8:	cmp	w0, #0x3a
   1c2dc:	mov	w0, #0x3a                  	// #58
   1c2e0:	mov	w1, #0x3f                  	// #63
   1c2e4:	csel	w0, w0, w1, eq  // eq = none
   1c2e8:	b	1bf1c <rpl_fcntl@@Base+0x504>
   1c2ec:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   1c2f0:	ldr	x0, [x0, #3816]
   1c2f4:	ldr	x20, [x0]
   1c2f8:	mov	w2, #0x5                   	// #5
   1c2fc:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1c300:	add	x1, x1, #0xa30
   1c304:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1c308:	add	x0, x0, #0xc08
   1c30c:	bl	ada0 <dcgettext@plt>
   1c310:	ldr	x4, [x19]
   1c314:	ldr	x3, [sp, #176]
   1c318:	ldr	x1, [sp, #128]
   1c31c:	ldr	x2, [x1]
   1c320:	mov	x1, x0
   1c324:	mov	x0, x20
   1c328:	bl	afa0 <fprintf@plt>
   1c32c:	b	1c2c8 <rpl_fcntl@@Base+0x8b0>
   1c330:	ldr	w0, [x19, #24]
   1c334:	b	1bf1c <rpl_fcntl@@Base+0x504>
   1c338:	mov	w0, #0xffffffff            	// #-1
   1c33c:	b	1bf1c <rpl_fcntl@@Base+0x504>
   1c340:	mov	w20, #0x0                   	// #0
   1c344:	cbz	x24, 1c044 <rpl_fcntl@@Base+0x62c>
   1c348:	ldr	x27, [sp, #104]
   1c34c:	mov	x26, #0x0                   	// #0
   1c350:	mov	w0, #0xffffffff            	// #-1
   1c354:	str	w0, [sp, #160]
   1c358:	str	wzr, [sp, #152]
   1c35c:	str	wzr, [sp, #164]
   1c360:	str	xzr, [sp, #136]
   1c364:	mov	x19, #0x0                   	// #0
   1c368:	sxtw	x0, w20
   1c36c:	str	x0, [sp, #168]
   1c370:	b	1bfc4 <rpl_fcntl@@Base+0x5ac>

000000000001c374 <_getopt_internal_r@@Base>:
   1c374:	sub	sp, sp, #0x80
   1c378:	stp	x29, x30, [sp, #16]
   1c37c:	add	x29, sp, #0x10
   1c380:	stp	x25, x26, [sp, #80]
   1c384:	str	x4, [sp, #120]
   1c388:	ldr	w25, [x6, #4]
   1c38c:	cmp	w0, #0x0
   1c390:	b.le	1c930 <_getopt_internal_r@@Base+0x5bc>
   1c394:	stp	x19, x20, [sp, #32]
   1c398:	stp	x21, x22, [sp, #48]
   1c39c:	stp	x23, x24, [sp, #64]
   1c3a0:	mov	w20, w0
   1c3a4:	mov	x21, x1
   1c3a8:	mov	x22, x2
   1c3ac:	mov	x24, x3
   1c3b0:	mov	w26, w5
   1c3b4:	mov	x19, x6
   1c3b8:	str	xzr, [x6, #16]
   1c3bc:	ldr	w0, [x6]
   1c3c0:	cbz	w0, 1c3e4 <_getopt_internal_r@@Base+0x70>
   1c3c4:	ldr	w0, [x6, #24]
   1c3c8:	cbz	w0, 1c3ec <_getopt_internal_r@@Base+0x78>
   1c3cc:	ldrb	w0, [x2]
   1c3d0:	sub	w0, w0, #0x2b
   1c3d4:	and	w0, w0, #0xfffffffd
   1c3d8:	tst	w0, #0xff
   1c3dc:	cinc	x22, x2, eq  // eq = none
   1c3e0:	b	1c420 <_getopt_internal_r@@Base+0xac>
   1c3e4:	mov	w0, #0x1                   	// #1
   1c3e8:	str	w0, [x6]
   1c3ec:	ldr	w0, [x19]
   1c3f0:	str	w0, [x19, #48]
   1c3f4:	str	w0, [x19, #44]
   1c3f8:	str	xzr, [x19, #32]
   1c3fc:	ldrb	w0, [x22]
   1c400:	cmp	w0, #0x2d
   1c404:	b.eq	1c4f0 <_getopt_internal_r@@Base+0x17c>  // b.none
   1c408:	cmp	w0, #0x2b
   1c40c:	b.eq	1c500 <_getopt_internal_r@@Base+0x18c>  // b.none
   1c410:	cbz	w7, 1c50c <_getopt_internal_r@@Base+0x198>
   1c414:	str	wzr, [x19, #40]
   1c418:	mov	w0, #0x1                   	// #1
   1c41c:	str	w0, [x19, #24]
   1c420:	ldrb	w0, [x22]
   1c424:	cmp	w0, #0x3a
   1c428:	csel	w25, w25, wzr, ne  // ne = any
   1c42c:	ldr	x0, [x19, #32]
   1c430:	cbz	x0, 1c43c <_getopt_internal_r@@Base+0xc8>
   1c434:	ldrb	w0, [x0]
   1c438:	cbnz	w0, 1c6a0 <_getopt_internal_r@@Base+0x32c>
   1c43c:	ldr	w0, [x19]
   1c440:	ldr	w1, [x19, #48]
   1c444:	cmp	w1, w0
   1c448:	b.le	1c450 <_getopt_internal_r@@Base+0xdc>
   1c44c:	str	w0, [x19, #48]
   1c450:	ldr	w1, [x19, #44]
   1c454:	cmp	w0, w1
   1c458:	b.ge	1c460 <_getopt_internal_r@@Base+0xec>  // b.tcont
   1c45c:	str	w0, [x19, #44]
   1c460:	ldr	w1, [x19, #40]
   1c464:	cmp	w1, #0x1
   1c468:	b.eq	1c528 <_getopt_internal_r@@Base+0x1b4>  // b.none
   1c46c:	ldr	w23, [x19]
   1c470:	cmp	w23, w20
   1c474:	b.eq	1c4c8 <_getopt_internal_r@@Base+0x154>  // b.none
   1c478:	stp	x27, x28, [sp, #96]
   1c47c:	sxtw	x28, w23
   1c480:	ldr	x27, [x21, x28, lsl #3]
   1c484:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   1c488:	add	x1, x1, #0xff0
   1c48c:	mov	x0, x27
   1c490:	bl	a9b0 <strcmp@plt>
   1c494:	cbnz	w0, 1c964 <_getopt_internal_r@@Base+0x5f0>
   1c498:	add	w23, w23, #0x1
   1c49c:	str	w23, [x19]
   1c4a0:	ldr	w1, [x19, #44]
   1c4a4:	ldr	w0, [x19, #48]
   1c4a8:	cmp	w1, w0
   1c4ac:	ccmp	w23, w0, #0x4, ne  // ne = any
   1c4b0:	b.ne	1c5a8 <_getopt_internal_r@@Base+0x234>  // b.any
   1c4b4:	cmp	w1, w0
   1c4b8:	b.eq	1c5b8 <_getopt_internal_r@@Base+0x244>  // b.none
   1c4bc:	str	w20, [x19, #48]
   1c4c0:	str	w20, [x19]
   1c4c4:	ldp	x27, x28, [sp, #96]
   1c4c8:	ldr	w0, [x19, #44]
   1c4cc:	ldr	w1, [x19, #48]
   1c4d0:	cmp	w0, w1
   1c4d4:	b.eq	1c950 <_getopt_internal_r@@Base+0x5dc>  // b.none
   1c4d8:	str	w0, [x19]
   1c4dc:	mov	w0, #0xffffffff            	// #-1
   1c4e0:	ldp	x19, x20, [sp, #32]
   1c4e4:	ldp	x21, x22, [sp, #48]
   1c4e8:	ldp	x23, x24, [sp, #64]
   1c4ec:	b	1c99c <_getopt_internal_r@@Base+0x628>
   1c4f0:	mov	w0, #0x2                   	// #2
   1c4f4:	str	w0, [x19, #40]
   1c4f8:	add	x22, x22, #0x1
   1c4fc:	b	1c418 <_getopt_internal_r@@Base+0xa4>
   1c500:	str	wzr, [x19, #40]
   1c504:	add	x22, x22, #0x1
   1c508:	b	1c418 <_getopt_internal_r@@Base+0xa4>
   1c50c:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1c510:	add	x0, x0, #0xa58
   1c514:	bl	aed0 <getenv@plt>
   1c518:	cbnz	x0, 1c414 <_getopt_internal_r@@Base+0xa0>
   1c51c:	mov	w0, #0x1                   	// #1
   1c520:	str	w0, [x19, #40]
   1c524:	b	1c418 <_getopt_internal_r@@Base+0xa4>
   1c528:	ldr	w1, [x19, #48]
   1c52c:	ldr	w2, [x19, #44]
   1c530:	cmp	w2, w1
   1c534:	ccmp	w0, w1, #0x4, ne  // ne = any
   1c538:	b.ne	1c55c <_getopt_internal_r@@Base+0x1e8>  // b.any
   1c53c:	cmp	w0, w1
   1c540:	b.eq	1c548 <_getopt_internal_r@@Base+0x1d4>  // b.none
   1c544:	str	w0, [x19, #44]
   1c548:	ldr	w1, [x19]
   1c54c:	cmp	w20, w1
   1c550:	b.le	1c5a0 <_getopt_internal_r@@Base+0x22c>
   1c554:	sxtw	x0, w1
   1c558:	b	1c580 <_getopt_internal_r@@Base+0x20c>
   1c55c:	mov	x1, x19
   1c560:	mov	x0, x21
   1c564:	bl	1bd34 <rpl_fcntl@@Base+0x31c>
   1c568:	b	1c548 <_getopt_internal_r@@Base+0x1d4>
   1c56c:	add	w1, w4, #0x1
   1c570:	str	w1, [x19]
   1c574:	add	x0, x0, #0x1
   1c578:	cmp	w20, w0
   1c57c:	b.le	1c5a0 <_getopt_internal_r@@Base+0x22c>
   1c580:	mov	w4, w0
   1c584:	mov	w1, w0
   1c588:	ldr	x2, [x21, x0, lsl #3]
   1c58c:	ldrb	w3, [x2]
   1c590:	cmp	w3, #0x2d
   1c594:	b.ne	1c56c <_getopt_internal_r@@Base+0x1f8>  // b.any
   1c598:	ldrb	w2, [x2, #1]
   1c59c:	cbz	w2, 1c56c <_getopt_internal_r@@Base+0x1f8>
   1c5a0:	str	w1, [x19, #48]
   1c5a4:	b	1c46c <_getopt_internal_r@@Base+0xf8>
   1c5a8:	mov	x1, x19
   1c5ac:	mov	x0, x21
   1c5b0:	bl	1bd34 <rpl_fcntl@@Base+0x31c>
   1c5b4:	b	1c4bc <_getopt_internal_r@@Base+0x148>
   1c5b8:	str	w23, [x19, #44]
   1c5bc:	b	1c4bc <_getopt_internal_r@@Base+0x148>
   1c5c0:	ldrb	w1, [x27, #1]
   1c5c4:	cbz	w1, 1c970 <_getopt_internal_r@@Base+0x5fc>
   1c5c8:	cbz	x24, 1c5ec <_getopt_internal_r@@Base+0x278>
   1c5cc:	cmp	w1, #0x2d
   1c5d0:	b.eq	1c600 <_getopt_internal_r@@Base+0x28c>  // b.none
   1c5d4:	cbz	w26, 1c5ec <_getopt_internal_r@@Base+0x278>
   1c5d8:	ldrb	w0, [x27, #2]
   1c5dc:	cbnz	w0, 1c64c <_getopt_internal_r@@Base+0x2d8>
   1c5e0:	mov	x0, x22
   1c5e4:	bl	ab60 <strchr@plt>
   1c5e8:	cbz	x0, 1c64c <_getopt_internal_r@@Base+0x2d8>
   1c5ec:	ldrsw	x0, [x19]
   1c5f0:	ldr	x0, [x21, x0, lsl #3]
   1c5f4:	add	x0, x0, #0x1
   1c5f8:	str	x0, [x19, #32]
   1c5fc:	b	1c6a4 <_getopt_internal_r@@Base+0x330>
   1c600:	add	x27, x27, #0x2
   1c604:	str	x27, [x19, #32]
   1c608:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1c60c:	add	x0, x0, #0xff0
   1c610:	str	x0, [sp]
   1c614:	mov	w7, w25
   1c618:	mov	x6, x19
   1c61c:	mov	w5, w26
   1c620:	ldr	x4, [sp, #120]
   1c624:	mov	x3, x24
   1c628:	mov	x2, x22
   1c62c:	mov	x1, x21
   1c630:	mov	w0, w20
   1c634:	bl	1be18 <rpl_fcntl@@Base+0x400>
   1c638:	ldp	x19, x20, [sp, #32]
   1c63c:	ldp	x21, x22, [sp, #48]
   1c640:	ldp	x23, x24, [sp, #64]
   1c644:	ldp	x27, x28, [sp, #96]
   1c648:	b	1c99c <_getopt_internal_r@@Base+0x628>
   1c64c:	add	x27, x27, #0x1
   1c650:	str	x27, [x19, #32]
   1c654:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1c658:	add	x0, x0, #0xa68
   1c65c:	str	x0, [sp]
   1c660:	mov	w7, w25
   1c664:	mov	x6, x19
   1c668:	mov	w5, w26
   1c66c:	ldr	x4, [sp, #120]
   1c670:	mov	x3, x24
   1c674:	mov	x2, x22
   1c678:	mov	x1, x21
   1c67c:	mov	w0, w20
   1c680:	bl	1be18 <rpl_fcntl@@Base+0x400>
   1c684:	cmn	w0, #0x1
   1c688:	b.eq	1c5ec <_getopt_internal_r@@Base+0x278>  // b.none
   1c68c:	ldp	x19, x20, [sp, #32]
   1c690:	ldp	x21, x22, [sp, #48]
   1c694:	ldp	x23, x24, [sp, #64]
   1c698:	ldp	x27, x28, [sp, #96]
   1c69c:	b	1c99c <_getopt_internal_r@@Base+0x628>
   1c6a0:	stp	x27, x28, [sp, #96]
   1c6a4:	ldr	x26, [x19, #32]
   1c6a8:	add	x27, x26, #0x1
   1c6ac:	str	x27, [x19, #32]
   1c6b0:	ldrb	w23, [x26]
   1c6b4:	mov	w28, w23
   1c6b8:	mov	w1, w23
   1c6bc:	mov	x0, x22
   1c6c0:	bl	ab60 <strchr@plt>
   1c6c4:	ldrb	w1, [x26, #1]
   1c6c8:	cbnz	w1, 1c6d8 <_getopt_internal_r@@Base+0x364>
   1c6cc:	ldr	w1, [x19]
   1c6d0:	add	w1, w1, #0x1
   1c6d4:	str	w1, [x19]
   1c6d8:	sub	w1, w23, #0x3a
   1c6dc:	and	w1, w1, #0xff
   1c6e0:	cmp	x0, #0x0
   1c6e4:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   1c6e8:	b.ls	1c71c <_getopt_internal_r@@Base+0x3a8>  // b.plast
   1c6ec:	ldrb	w1, [x0]
   1c6f0:	cmp	w1, #0x57
   1c6f4:	b.eq	1c778 <_getopt_internal_r@@Base+0x404>  // b.none
   1c6f8:	ldrb	w1, [x0, #1]
   1c6fc:	cmp	w1, #0x3a
   1c700:	b.eq	1c864 <_getopt_internal_r@@Base+0x4f0>  // b.none
   1c704:	mov	w0, w23
   1c708:	ldp	x19, x20, [sp, #32]
   1c70c:	ldp	x21, x22, [sp, #48]
   1c710:	ldp	x23, x24, [sp, #64]
   1c714:	ldp	x27, x28, [sp, #96]
   1c718:	b	1c99c <_getopt_internal_r@@Base+0x628>
   1c71c:	cbnz	w25, 1c73c <_getopt_internal_r@@Base+0x3c8>
   1c720:	str	w28, [x19, #8]
   1c724:	mov	w0, #0x3f                  	// #63
   1c728:	ldp	x19, x20, [sp, #32]
   1c72c:	ldp	x21, x22, [sp, #48]
   1c730:	ldp	x23, x24, [sp, #64]
   1c734:	ldp	x27, x28, [sp, #96]
   1c738:	b	1c99c <_getopt_internal_r@@Base+0x628>
   1c73c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   1c740:	ldr	x0, [x0, #3816]
   1c744:	ldr	x20, [x0]
   1c748:	mov	w2, #0x5                   	// #5
   1c74c:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1c750:	add	x1, x1, #0xa70
   1c754:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1c758:	add	x0, x0, #0xc08
   1c75c:	bl	ada0 <dcgettext@plt>
   1c760:	mov	w3, w28
   1c764:	ldr	x2, [x21]
   1c768:	mov	x1, x0
   1c76c:	mov	x0, x20
   1c770:	bl	afa0 <fprintf@plt>
   1c774:	b	1c720 <_getopt_internal_r@@Base+0x3ac>
   1c778:	ldrb	w1, [x0, #1]
   1c77c:	cmp	w1, #0x3b
   1c780:	ccmp	x24, #0x0, #0x4, eq  // eq = none
   1c784:	b.eq	1c6f8 <_getopt_internal_r@@Base+0x384>  // b.none
   1c788:	ldrb	w0, [x26, #1]
   1c78c:	cbnz	w0, 1c7f4 <_getopt_internal_r@@Base+0x480>
   1c790:	ldr	w0, [x19]
   1c794:	cmp	w0, w20
   1c798:	b.eq	1c7fc <_getopt_internal_r@@Base+0x488>  // b.none
   1c79c:	ldr	x0, [x21, w0, sxtw #3]
   1c7a0:	str	x0, [x19, #16]
   1c7a4:	ldr	x0, [x19, #16]
   1c7a8:	str	x0, [x19, #32]
   1c7ac:	str	xzr, [x19, #16]
   1c7b0:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1c7b4:	add	x0, x0, #0xac0
   1c7b8:	str	x0, [sp]
   1c7bc:	mov	w7, w25
   1c7c0:	mov	x6, x19
   1c7c4:	mov	w5, #0x0                   	// #0
   1c7c8:	ldr	x4, [sp, #120]
   1c7cc:	mov	x3, x24
   1c7d0:	mov	x2, x22
   1c7d4:	mov	x1, x21
   1c7d8:	mov	w0, w20
   1c7dc:	bl	1be18 <rpl_fcntl@@Base+0x400>
   1c7e0:	ldp	x19, x20, [sp, #32]
   1c7e4:	ldp	x21, x22, [sp, #48]
   1c7e8:	ldp	x23, x24, [sp, #64]
   1c7ec:	ldp	x27, x28, [sp, #96]
   1c7f0:	b	1c99c <_getopt_internal_r@@Base+0x628>
   1c7f4:	str	x27, [x19, #16]
   1c7f8:	b	1c7a4 <_getopt_internal_r@@Base+0x430>
   1c7fc:	cbnz	w25, 1c828 <_getopt_internal_r@@Base+0x4b4>
   1c800:	str	w28, [x19, #8]
   1c804:	ldrb	w0, [x22]
   1c808:	cmp	w0, #0x3a
   1c80c:	mov	w23, #0x3f                  	// #63
   1c810:	csel	w0, w0, w23, eq  // eq = none
   1c814:	ldp	x19, x20, [sp, #32]
   1c818:	ldp	x21, x22, [sp, #48]
   1c81c:	ldp	x23, x24, [sp, #64]
   1c820:	ldp	x27, x28, [sp, #96]
   1c824:	b	1c99c <_getopt_internal_r@@Base+0x628>
   1c828:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   1c82c:	ldr	x0, [x0, #3816]
   1c830:	ldr	x20, [x0]
   1c834:	mov	w2, #0x5                   	// #5
   1c838:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1c83c:	add	x1, x1, #0xa90
   1c840:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1c844:	add	x0, x0, #0xc08
   1c848:	bl	ada0 <dcgettext@plt>
   1c84c:	mov	w3, w28
   1c850:	ldr	x2, [x21]
   1c854:	mov	x1, x0
   1c858:	mov	x0, x20
   1c85c:	bl	afa0 <fprintf@plt>
   1c860:	b	1c800 <_getopt_internal_r@@Base+0x48c>
   1c864:	ldrb	w0, [x0, #2]
   1c868:	cmp	w0, #0x3a
   1c86c:	b.eq	1c890 <_getopt_internal_r@@Base+0x51c>  // b.none
   1c870:	ldrb	w0, [x26, #1]
   1c874:	cbz	w0, 1c8b8 <_getopt_internal_r@@Base+0x544>
   1c878:	str	x27, [x19, #16]
   1c87c:	ldr	w0, [x19]
   1c880:	add	w0, w0, #0x1
   1c884:	str	w0, [x19]
   1c888:	str	xzr, [x19, #32]
   1c88c:	b	1c704 <_getopt_internal_r@@Base+0x390>
   1c890:	ldrb	w0, [x26, #1]
   1c894:	cbz	w0, 1c8b0 <_getopt_internal_r@@Base+0x53c>
   1c898:	str	x27, [x19, #16]
   1c89c:	ldr	w0, [x19]
   1c8a0:	add	w0, w0, #0x1
   1c8a4:	str	w0, [x19]
   1c8a8:	str	xzr, [x19, #32]
   1c8ac:	b	1c704 <_getopt_internal_r@@Base+0x390>
   1c8b0:	str	xzr, [x19, #16]
   1c8b4:	b	1c8a8 <_getopt_internal_r@@Base+0x534>
   1c8b8:	ldr	w0, [x19]
   1c8bc:	cmp	w0, w20
   1c8c0:	b.eq	1c8d8 <_getopt_internal_r@@Base+0x564>  // b.none
   1c8c4:	add	w1, w0, #0x1
   1c8c8:	str	w1, [x19]
   1c8cc:	ldr	x0, [x21, w0, sxtw #3]
   1c8d0:	str	x0, [x19, #16]
   1c8d4:	b	1c888 <_getopt_internal_r@@Base+0x514>
   1c8d8:	cbnz	w25, 1c8f4 <_getopt_internal_r@@Base+0x580>
   1c8dc:	str	w28, [x19, #8]
   1c8e0:	ldrb	w23, [x22]
   1c8e4:	cmp	w23, #0x3a
   1c8e8:	mov	w0, #0x3f                  	// #63
   1c8ec:	csel	w23, w23, w0, eq  // eq = none
   1c8f0:	b	1c888 <_getopt_internal_r@@Base+0x514>
   1c8f4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   1c8f8:	ldr	x0, [x0, #3816]
   1c8fc:	ldr	x20, [x0]
   1c900:	mov	w2, #0x5                   	// #5
   1c904:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1c908:	add	x1, x1, #0xa90
   1c90c:	adrp	x0, 2c000 <vasnprintf@@Base+0x1378>
   1c910:	add	x0, x0, #0xc08
   1c914:	bl	ada0 <dcgettext@plt>
   1c918:	mov	w3, w28
   1c91c:	ldr	x2, [x21]
   1c920:	mov	x1, x0
   1c924:	mov	x0, x20
   1c928:	bl	afa0 <fprintf@plt>
   1c92c:	b	1c8dc <_getopt_internal_r@@Base+0x568>
   1c930:	mov	w0, #0xffffffff            	// #-1
   1c934:	b	1c99c <_getopt_internal_r@@Base+0x628>
   1c938:	mov	w0, #0xffffffff            	// #-1
   1c93c:	ldp	x19, x20, [sp, #32]
   1c940:	ldp	x21, x22, [sp, #48]
   1c944:	ldp	x23, x24, [sp, #64]
   1c948:	ldp	x27, x28, [sp, #96]
   1c94c:	b	1c99c <_getopt_internal_r@@Base+0x628>
   1c950:	mov	w0, #0xffffffff            	// #-1
   1c954:	ldp	x19, x20, [sp, #32]
   1c958:	ldp	x21, x22, [sp, #48]
   1c95c:	ldp	x23, x24, [sp, #64]
   1c960:	b	1c99c <_getopt_internal_r@@Base+0x628>
   1c964:	ldrb	w0, [x27]
   1c968:	cmp	w0, #0x2d
   1c96c:	b.eq	1c5c0 <_getopt_internal_r@@Base+0x24c>  // b.none
   1c970:	ldr	w0, [x19, #40]
   1c974:	cbz	w0, 1c938 <_getopt_internal_r@@Base+0x5c4>
   1c978:	add	w23, w23, #0x1
   1c97c:	str	w23, [x19]
   1c980:	ldr	x0, [x21, x28, lsl #3]
   1c984:	str	x0, [x19, #16]
   1c988:	mov	w0, #0x1                   	// #1
   1c98c:	ldp	x19, x20, [sp, #32]
   1c990:	ldp	x21, x22, [sp, #48]
   1c994:	ldp	x23, x24, [sp, #64]
   1c998:	ldp	x27, x28, [sp, #96]
   1c99c:	ldp	x25, x26, [sp, #80]
   1c9a0:	ldp	x29, x30, [sp, #16]
   1c9a4:	add	sp, sp, #0x80
   1c9a8:	ret

000000000001c9ac <rpl_getopt_internal@@Base>:
   1c9ac:	stp	x29, x30, [sp, #-48]!
   1c9b0:	mov	x29, sp
   1c9b4:	stp	x19, x20, [sp, #16]
   1c9b8:	str	x21, [sp, #32]
   1c9bc:	adrp	x21, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1c9c0:	add	x19, x21, #0x458
   1c9c4:	adrp	x20, 46000 <vasnprintf@@Base+0x1b378>
   1c9c8:	ldr	x20, [x20, #4032]
   1c9cc:	ldr	w7, [x20]
   1c9d0:	str	w7, [x21, #1112]
   1c9d4:	adrp	x8, 46000 <vasnprintf@@Base+0x1b378>
   1c9d8:	ldr	x8, [x8, #3856]
   1c9dc:	ldr	w7, [x8]
   1c9e0:	str	w7, [x19, #4]
   1c9e4:	mov	w7, w6
   1c9e8:	mov	x6, x19
   1c9ec:	bl	ae70 <_getopt_internal_r@plt>
   1c9f0:	ldr	w1, [x21, #1112]
   1c9f4:	str	w1, [x20]
   1c9f8:	ldr	x2, [x19, #16]
   1c9fc:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
   1ca00:	ldr	x1, [x1, #4016]
   1ca04:	str	x2, [x1]
   1ca08:	ldr	w2, [x19, #8]
   1ca0c:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
   1ca10:	ldr	x1, [x1, #3880]
   1ca14:	str	w2, [x1]
   1ca18:	ldp	x19, x20, [sp, #16]
   1ca1c:	ldr	x21, [sp, #32]
   1ca20:	ldp	x29, x30, [sp], #48
   1ca24:	ret

000000000001ca28 <rpl_getopt@@Base>:
   1ca28:	stp	x29, x30, [sp, #-16]!
   1ca2c:	mov	x29, sp
   1ca30:	mov	w6, #0x1                   	// #1
   1ca34:	mov	w5, #0x0                   	// #0
   1ca38:	mov	x4, #0x0                   	// #0
   1ca3c:	mov	x3, #0x0                   	// #0
   1ca40:	bl	ab20 <rpl_getopt_internal@plt>
   1ca44:	ldp	x29, x30, [sp], #16
   1ca48:	ret

000000000001ca4c <rpl_getopt_long@@Base>:
   1ca4c:	stp	x29, x30, [sp, #-16]!
   1ca50:	mov	x29, sp
   1ca54:	mov	w6, #0x0                   	// #0
   1ca58:	mov	w5, #0x0                   	// #0
   1ca5c:	bl	ab20 <rpl_getopt_internal@plt>
   1ca60:	ldp	x29, x30, [sp], #16
   1ca64:	ret

000000000001ca68 <_getopt_long_r@@Base>:
   1ca68:	stp	x29, x30, [sp, #-16]!
   1ca6c:	mov	x29, sp
   1ca70:	mov	w7, #0x0                   	// #0
   1ca74:	mov	x6, x5
   1ca78:	mov	w5, #0x0                   	// #0
   1ca7c:	bl	ae70 <_getopt_internal_r@plt>
   1ca80:	ldp	x29, x30, [sp], #16
   1ca84:	ret

000000000001ca88 <rpl_getopt_long_only@@Base>:
   1ca88:	stp	x29, x30, [sp, #-16]!
   1ca8c:	mov	x29, sp
   1ca90:	mov	w6, #0x0                   	// #0
   1ca94:	mov	w5, #0x1                   	// #1
   1ca98:	bl	ab20 <rpl_getopt_internal@plt>
   1ca9c:	ldp	x29, x30, [sp], #16
   1caa0:	ret

000000000001caa4 <_getopt_long_only_r@@Base>:
   1caa4:	stp	x29, x30, [sp, #-16]!
   1caa8:	mov	x29, sp
   1caac:	mov	w7, #0x0                   	// #0
   1cab0:	mov	x6, x5
   1cab4:	mov	w5, #0x1                   	// #1
   1cab8:	bl	ae70 <_getopt_internal_r@plt>
   1cabc:	ldp	x29, x30, [sp], #16
   1cac0:	ret

000000000001cac4 <rpl_ioctl@@Base>:
   1cac4:	stp	x29, x30, [sp, #-64]!
   1cac8:	mov	x29, sp
   1cacc:	str	x2, [sp, #56]
   1cad0:	add	x2, sp, #0x40
   1cad4:	str	x2, [sp, #16]
   1cad8:	str	x2, [sp, #24]
   1cadc:	add	x2, sp, #0x30
   1cae0:	str	x2, [sp, #32]
   1cae4:	str	wzr, [sp, #44]
   1cae8:	str	wzr, [sp, #40]
   1caec:	ldr	x2, [sp, #24]
   1caf0:	sub	x2, x2, #0x8
   1caf4:	ldr	x2, [x2]
   1caf8:	mov	w1, w1
   1cafc:	bl	afc0 <ioctl@plt>
   1cb00:	ldp	x29, x30, [sp], #64
   1cb04:	ret

000000000001cb08 <rpl_mbrtowc@@Base>:
   1cb08:	stp	x29, x30, [sp, #-64]!
   1cb0c:	mov	x29, sp
   1cb10:	stp	x19, x20, [sp, #16]
   1cb14:	stp	x21, x22, [sp, #32]
   1cb18:	mov	x19, x0
   1cb1c:	mov	x22, x1
   1cb20:	mov	x21, x2
   1cb24:	cmp	x0, #0x0
   1cb28:	add	x0, sp, #0x3c
   1cb2c:	csel	x19, x0, x19, eq  // eq = none
   1cb30:	mov	x0, x19
   1cb34:	bl	a2b0 <mbrtowc@plt>
   1cb38:	mov	x20, x0
   1cb3c:	cmp	x21, #0x0
   1cb40:	ccmn	x0, #0x3, #0x0, ne  // ne = any
   1cb44:	b.hi	1cb5c <rpl_mbrtowc@@Base+0x54>  // b.pmore
   1cb48:	mov	x0, x20
   1cb4c:	ldp	x19, x20, [sp, #16]
   1cb50:	ldp	x21, x22, [sp, #32]
   1cb54:	ldp	x29, x30, [sp], #64
   1cb58:	ret
   1cb5c:	mov	w0, #0x0                   	// #0
   1cb60:	bl	a790 <hard_locale@plt>
   1cb64:	and	w0, w0, #0xff
   1cb68:	cbnz	w0, 1cb48 <rpl_mbrtowc@@Base+0x40>
   1cb6c:	ldrb	w0, [x22]
   1cb70:	str	w0, [x19]
   1cb74:	mov	x20, #0x1                   	// #1
   1cb78:	b	1cb48 <rpl_mbrtowc@@Base+0x40>

000000000001cb7c <rpl_nanosleep@@Base>:
   1cb7c:	stp	x29, x30, [sp, #-64]!
   1cb80:	mov	x29, sp
   1cb84:	stp	x21, x22, [sp, #32]
   1cb88:	mov	x21, x1
   1cb8c:	ldr	x1, [x0, #8]
   1cb90:	mov	x2, #0xc9ff                	// #51711
   1cb94:	movk	x2, #0x3b9a, lsl #16
   1cb98:	cmp	x1, x2
   1cb9c:	b.hi	1cc08 <rpl_nanosleep@@Base+0x8c>  // b.pmore
   1cba0:	stp	x19, x20, [sp, #16]
   1cba4:	ldr	x19, [x0]
   1cba8:	str	x1, [sp, #56]
   1cbac:	mov	x0, #0xa400                	// #41984
   1cbb0:	movk	x0, #0x1f, lsl #16
   1cbb4:	cmp	x19, x0
   1cbb8:	b.le	1cbe8 <rpl_nanosleep@@Base+0x6c>
   1cbbc:	mov	x20, x0
   1cbc0:	add	x22, sp, #0x30
   1cbc4:	str	x20, [sp, #48]
   1cbc8:	mov	x1, x21
   1cbcc:	mov	x0, x22
   1cbd0:	bl	ab00 <nanosleep@plt>
   1cbd4:	sub	x19, x19, x20
   1cbd8:	cbnz	w0, 1cc1c <rpl_nanosleep@@Base+0xa0>
   1cbdc:	str	xzr, [sp, #56]
   1cbe0:	cmp	x19, x20
   1cbe4:	b.gt	1cbc4 <rpl_nanosleep@@Base+0x48>
   1cbe8:	str	x19, [sp, #48]
   1cbec:	mov	x1, x21
   1cbf0:	add	x0, sp, #0x30
   1cbf4:	bl	ab00 <nanosleep@plt>
   1cbf8:	ldp	x19, x20, [sp, #16]
   1cbfc:	ldp	x21, x22, [sp, #32]
   1cc00:	ldp	x29, x30, [sp], #64
   1cc04:	ret
   1cc08:	bl	aeb0 <__errno_location@plt>
   1cc0c:	mov	w1, #0x16                  	// #22
   1cc10:	str	w1, [x0]
   1cc14:	mov	w0, #0xffffffff            	// #-1
   1cc18:	b	1cbfc <rpl_nanosleep@@Base+0x80>
   1cc1c:	cbz	x21, 1cc34 <rpl_nanosleep@@Base+0xb8>
   1cc20:	ldr	x1, [x21]
   1cc24:	add	x19, x1, x19
   1cc28:	str	x19, [x21]
   1cc2c:	ldp	x19, x20, [sp, #16]
   1cc30:	b	1cbfc <rpl_nanosleep@@Base+0x80>
   1cc34:	ldp	x19, x20, [sp, #16]
   1cc38:	b	1cbfc <rpl_nanosleep@@Base+0x80>

000000000001cc3c <openat_proc_name@@Base>:
   1cc3c:	stp	x29, x30, [sp, #-96]!
   1cc40:	mov	x29, sp
   1cc44:	stp	x19, x20, [sp, #16]
   1cc48:	mov	x19, x0
   1cc4c:	ldrb	w0, [x2]
   1cc50:	cbz	w0, 1cccc <openat_proc_name@@Base+0x90>
   1cc54:	stp	x21, x22, [sp, #32]
   1cc58:	mov	w21, w1
   1cc5c:	mov	x20, x2
   1cc60:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1cc64:	ldr	w0, [x0, #1168]
   1cc68:	cbz	w0, 1ccd8 <openat_proc_name@@Base+0x9c>
   1cc6c:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1cc70:	ldr	w0, [x0, #1168]
   1cc74:	tbnz	w0, #31, 1cd54 <openat_proc_name@@Base+0x118>
   1cc78:	mov	x0, x20
   1cc7c:	bl	a340 <strlen@plt>
   1cc80:	add	x0, x0, #0x1b
   1cc84:	cmp	x0, #0xfc0
   1cc88:	b.ls	1cc98 <openat_proc_name@@Base+0x5c>  // b.plast
   1cc8c:	bl	a5f0 <malloc@plt>
   1cc90:	mov	x19, x0
   1cc94:	cbz	x0, 1cd60 <openat_proc_name@@Base+0x124>
   1cc98:	mov	w2, w21
   1cc9c:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1cca0:	add	x1, x1, #0xaf0
   1cca4:	mov	x0, x19
   1cca8:	bl	a490 <sprintf@plt>
   1ccac:	mov	x1, x20
   1ccb0:	add	x0, x19, w0, sxtw
   1ccb4:	bl	ac40 <strcpy@plt>
   1ccb8:	mov	x0, x19
   1ccbc:	ldp	x21, x22, [sp, #32]
   1ccc0:	ldp	x19, x20, [sp, #16]
   1ccc4:	ldp	x29, x30, [sp], #96
   1ccc8:	ret
   1cccc:	strb	wzr, [x19]
   1ccd0:	mov	x0, x19
   1ccd4:	b	1ccc0 <openat_proc_name@@Base+0x84>
   1ccd8:	mov	w1, #0x4900                	// #18688
   1ccdc:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1cce0:	add	x0, x0, #0xac8
   1cce4:	bl	a640 <open@plt>
   1cce8:	mov	w22, w0
   1ccec:	tbz	w0, #31, 1cd08 <openat_proc_name@@Base+0xcc>
   1ccf0:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1ccf4:	mov	w1, #0xffffffff            	// #-1
   1ccf8:	str	w1, [x0, #1168]
   1ccfc:	mov	x0, #0x0                   	// #0
   1cd00:	ldp	x21, x22, [sp, #32]
   1cd04:	b	1ccc0 <openat_proc_name@@Base+0x84>
   1cd08:	str	x23, [sp, #48]
   1cd0c:	add	x23, sp, #0x40
   1cd10:	mov	w2, w0
   1cd14:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   1cd18:	add	x1, x1, #0xad8
   1cd1c:	mov	x0, x23
   1cd20:	bl	a490 <sprintf@plt>
   1cd24:	mov	w1, #0x0                   	// #0
   1cd28:	mov	x0, x23
   1cd2c:	bl	a950 <access@plt>
   1cd30:	mov	w1, #0x1                   	// #1
   1cd34:	cmp	w0, #0x0
   1cd38:	cneg	w1, w1, ne  // ne = any
   1cd3c:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1cd40:	str	w1, [x0, #1168]
   1cd44:	mov	w0, w22
   1cd48:	bl	a850 <close@plt>
   1cd4c:	ldr	x23, [sp, #48]
   1cd50:	b	1cc6c <openat_proc_name@@Base+0x30>
   1cd54:	mov	x0, #0x0                   	// #0
   1cd58:	ldp	x21, x22, [sp, #32]
   1cd5c:	b	1ccc0 <openat_proc_name@@Base+0x84>
   1cd60:	ldp	x21, x22, [sp, #32]
   1cd64:	b	1ccc0 <openat_proc_name@@Base+0x84>

000000000001cd68 <printf_fetchargs@@Base>:
   1cd68:	ldr	x4, [x0]
   1cd6c:	ldr	x10, [x0, #8]
   1cd70:	ldr	x11, [x0, #16]
   1cd74:	ldr	w5, [x0, #24]
   1cd78:	ldr	w9, [x0, #28]
   1cd7c:	ldr	x2, [x1, #8]
   1cd80:	ldr	x0, [x1]
   1cd84:	cbz	x0, 1d420 <printf_fetchargs@@Base+0x6b8>
   1cd88:	mov	x3, #0x0                   	// #0
   1cd8c:	adrp	x6, 2e000 <vasnprintf@@Base+0x3378>
   1cd90:	add	x6, x6, #0xb10
   1cd94:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1cd98:	add	x8, x0, #0xb40
   1cd9c:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   1cda0:	add	x7, x0, #0xb08
   1cda4:	b	1cdd4 <printf_fetchargs@@Base+0x6c>
   1cda8:	tbnz	w5, #31, 1cdf4 <printf_fetchargs@@Base+0x8c>
   1cdac:	add	x12, x4, #0xb
   1cdb0:	mov	x0, x4
   1cdb4:	and	x4, x12, #0xfffffffffffffff8
   1cdb8:	ldr	w0, [x0]
   1cdbc:	strb	w0, [x2, #16]
   1cdc0:	add	x3, x3, #0x1
   1cdc4:	add	x2, x2, #0x20
   1cdc8:	ldr	x0, [x1]
   1cdcc:	cmp	x0, x3
   1cdd0:	b.ls	1d418 <printf_fetchargs@@Base+0x6b0>  // b.plast
   1cdd4:	ldr	w0, [x2]
   1cdd8:	sub	w0, w0, #0x1
   1cddc:	cmp	w0, #0x15
   1cde0:	b.hi	1d428 <printf_fetchargs@@Base+0x6c0>  // b.pmore
   1cde4:	ldrh	w0, [x6, w0, uxtw #1]
   1cde8:	adr	x12, 1cdf4 <printf_fetchargs@@Base+0x8c>
   1cdec:	add	x0, x12, w0, sxth #2
   1cdf0:	br	x0
   1cdf4:	add	w12, w5, #0x8
   1cdf8:	cmp	w12, #0x0
   1cdfc:	b.le	1ce14 <printf_fetchargs@@Base+0xac>
   1ce00:	add	x13, x4, #0xb
   1ce04:	mov	w5, w12
   1ce08:	mov	x0, x4
   1ce0c:	and	x4, x13, #0xfffffffffffffff8
   1ce10:	b	1cdb8 <printf_fetchargs@@Base+0x50>
   1ce14:	add	x0, x10, w5, sxtw
   1ce18:	mov	w5, w12
   1ce1c:	b	1cdb8 <printf_fetchargs@@Base+0x50>
   1ce20:	tbnz	w5, #31, 1ce3c <printf_fetchargs@@Base+0xd4>
   1ce24:	add	x12, x4, #0xb
   1ce28:	mov	x0, x4
   1ce2c:	and	x4, x12, #0xfffffffffffffff8
   1ce30:	ldr	w0, [x0]
   1ce34:	strb	w0, [x2, #16]
   1ce38:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1ce3c:	add	w12, w5, #0x8
   1ce40:	cmp	w12, #0x0
   1ce44:	b.le	1ce5c <printf_fetchargs@@Base+0xf4>
   1ce48:	add	x13, x4, #0xb
   1ce4c:	mov	w5, w12
   1ce50:	mov	x0, x4
   1ce54:	and	x4, x13, #0xfffffffffffffff8
   1ce58:	b	1ce30 <printf_fetchargs@@Base+0xc8>
   1ce5c:	add	x0, x10, w5, sxtw
   1ce60:	mov	w5, w12
   1ce64:	b	1ce30 <printf_fetchargs@@Base+0xc8>
   1ce68:	tbnz	w5, #31, 1ce84 <printf_fetchargs@@Base+0x11c>
   1ce6c:	add	x12, x4, #0xb
   1ce70:	mov	x0, x4
   1ce74:	and	x4, x12, #0xfffffffffffffff8
   1ce78:	ldr	w0, [x0]
   1ce7c:	strh	w0, [x2, #16]
   1ce80:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1ce84:	add	w12, w5, #0x8
   1ce88:	cmp	w12, #0x0
   1ce8c:	b.le	1cea4 <printf_fetchargs@@Base+0x13c>
   1ce90:	add	x13, x4, #0xb
   1ce94:	mov	w5, w12
   1ce98:	mov	x0, x4
   1ce9c:	and	x4, x13, #0xfffffffffffffff8
   1cea0:	b	1ce78 <printf_fetchargs@@Base+0x110>
   1cea4:	add	x0, x10, w5, sxtw
   1cea8:	mov	w5, w12
   1ceac:	b	1ce78 <printf_fetchargs@@Base+0x110>
   1ceb0:	tbnz	w5, #31, 1cecc <printf_fetchargs@@Base+0x164>
   1ceb4:	add	x12, x4, #0xb
   1ceb8:	mov	x0, x4
   1cebc:	and	x4, x12, #0xfffffffffffffff8
   1cec0:	ldr	w0, [x0]
   1cec4:	strh	w0, [x2, #16]
   1cec8:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1cecc:	add	w12, w5, #0x8
   1ced0:	cmp	w12, #0x0
   1ced4:	b.le	1ceec <printf_fetchargs@@Base+0x184>
   1ced8:	add	x13, x4, #0xb
   1cedc:	mov	w5, w12
   1cee0:	mov	x0, x4
   1cee4:	and	x4, x13, #0xfffffffffffffff8
   1cee8:	b	1cec0 <printf_fetchargs@@Base+0x158>
   1ceec:	add	x0, x10, w5, sxtw
   1cef0:	mov	w5, w12
   1cef4:	b	1cec0 <printf_fetchargs@@Base+0x158>
   1cef8:	tbnz	w5, #31, 1cf14 <printf_fetchargs@@Base+0x1ac>
   1cefc:	add	x12, x4, #0xb
   1cf00:	mov	x0, x4
   1cf04:	and	x4, x12, #0xfffffffffffffff8
   1cf08:	ldr	w0, [x0]
   1cf0c:	str	w0, [x2, #16]
   1cf10:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1cf14:	add	w12, w5, #0x8
   1cf18:	cmp	w12, #0x0
   1cf1c:	b.le	1cf34 <printf_fetchargs@@Base+0x1cc>
   1cf20:	add	x13, x4, #0xb
   1cf24:	mov	w5, w12
   1cf28:	mov	x0, x4
   1cf2c:	and	x4, x13, #0xfffffffffffffff8
   1cf30:	b	1cf08 <printf_fetchargs@@Base+0x1a0>
   1cf34:	add	x0, x10, w5, sxtw
   1cf38:	mov	w5, w12
   1cf3c:	b	1cf08 <printf_fetchargs@@Base+0x1a0>
   1cf40:	tbnz	w5, #31, 1cf5c <printf_fetchargs@@Base+0x1f4>
   1cf44:	add	x12, x4, #0xb
   1cf48:	mov	x0, x4
   1cf4c:	and	x4, x12, #0xfffffffffffffff8
   1cf50:	ldr	w0, [x0]
   1cf54:	str	w0, [x2, #16]
   1cf58:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1cf5c:	add	w12, w5, #0x8
   1cf60:	cmp	w12, #0x0
   1cf64:	b.le	1cf7c <printf_fetchargs@@Base+0x214>
   1cf68:	add	x13, x4, #0xb
   1cf6c:	mov	w5, w12
   1cf70:	mov	x0, x4
   1cf74:	and	x4, x13, #0xfffffffffffffff8
   1cf78:	b	1cf50 <printf_fetchargs@@Base+0x1e8>
   1cf7c:	add	x0, x10, w5, sxtw
   1cf80:	mov	w5, w12
   1cf84:	b	1cf50 <printf_fetchargs@@Base+0x1e8>
   1cf88:	tbnz	w5, #31, 1cfa4 <printf_fetchargs@@Base+0x23c>
   1cf8c:	add	x12, x4, #0xf
   1cf90:	mov	x0, x4
   1cf94:	and	x4, x12, #0xfffffffffffffff8
   1cf98:	ldr	x0, [x0]
   1cf9c:	str	x0, [x2, #16]
   1cfa0:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1cfa4:	add	w12, w5, #0x8
   1cfa8:	cmp	w12, #0x0
   1cfac:	b.le	1cfc4 <printf_fetchargs@@Base+0x25c>
   1cfb0:	add	x13, x4, #0xf
   1cfb4:	mov	w5, w12
   1cfb8:	mov	x0, x4
   1cfbc:	and	x4, x13, #0xfffffffffffffff8
   1cfc0:	b	1cf98 <printf_fetchargs@@Base+0x230>
   1cfc4:	add	x0, x10, w5, sxtw
   1cfc8:	mov	w5, w12
   1cfcc:	b	1cf98 <printf_fetchargs@@Base+0x230>
   1cfd0:	tbnz	w5, #31, 1cfec <printf_fetchargs@@Base+0x284>
   1cfd4:	add	x12, x4, #0xf
   1cfd8:	mov	x0, x4
   1cfdc:	and	x4, x12, #0xfffffffffffffff8
   1cfe0:	ldr	x0, [x0]
   1cfe4:	str	x0, [x2, #16]
   1cfe8:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1cfec:	add	w12, w5, #0x8
   1cff0:	cmp	w12, #0x0
   1cff4:	b.le	1d00c <printf_fetchargs@@Base+0x2a4>
   1cff8:	add	x13, x4, #0xf
   1cffc:	mov	w5, w12
   1d000:	mov	x0, x4
   1d004:	and	x4, x13, #0xfffffffffffffff8
   1d008:	b	1cfe0 <printf_fetchargs@@Base+0x278>
   1d00c:	add	x0, x10, w5, sxtw
   1d010:	mov	w5, w12
   1d014:	b	1cfe0 <printf_fetchargs@@Base+0x278>
   1d018:	tbnz	w5, #31, 1d034 <printf_fetchargs@@Base+0x2cc>
   1d01c:	add	x12, x4, #0xf
   1d020:	mov	x0, x4
   1d024:	and	x4, x12, #0xfffffffffffffff8
   1d028:	ldr	x0, [x0]
   1d02c:	str	x0, [x2, #16]
   1d030:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d034:	add	w12, w5, #0x8
   1d038:	cmp	w12, #0x0
   1d03c:	b.le	1d054 <printf_fetchargs@@Base+0x2ec>
   1d040:	add	x13, x4, #0xf
   1d044:	mov	w5, w12
   1d048:	mov	x0, x4
   1d04c:	and	x4, x13, #0xfffffffffffffff8
   1d050:	b	1d028 <printf_fetchargs@@Base+0x2c0>
   1d054:	add	x0, x10, w5, sxtw
   1d058:	mov	w5, w12
   1d05c:	b	1d028 <printf_fetchargs@@Base+0x2c0>
   1d060:	tbnz	w5, #31, 1d07c <printf_fetchargs@@Base+0x314>
   1d064:	add	x12, x4, #0xf
   1d068:	mov	x0, x4
   1d06c:	and	x4, x12, #0xfffffffffffffff8
   1d070:	ldr	x0, [x0]
   1d074:	str	x0, [x2, #16]
   1d078:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d07c:	add	w12, w5, #0x8
   1d080:	cmp	w12, #0x0
   1d084:	b.le	1d09c <printf_fetchargs@@Base+0x334>
   1d088:	add	x13, x4, #0xf
   1d08c:	mov	w5, w12
   1d090:	mov	x0, x4
   1d094:	and	x4, x13, #0xfffffffffffffff8
   1d098:	b	1d070 <printf_fetchargs@@Base+0x308>
   1d09c:	add	x0, x10, w5, sxtw
   1d0a0:	mov	w5, w12
   1d0a4:	b	1d070 <printf_fetchargs@@Base+0x308>
   1d0a8:	tbnz	w9, #31, 1d0c4 <printf_fetchargs@@Base+0x35c>
   1d0ac:	add	x12, x4, #0xf
   1d0b0:	mov	x0, x4
   1d0b4:	and	x4, x12, #0xfffffffffffffff8
   1d0b8:	ldr	d0, [x0]
   1d0bc:	str	d0, [x2, #16]
   1d0c0:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d0c4:	add	w12, w9, #0x10
   1d0c8:	cmp	w12, #0x0
   1d0cc:	b.le	1d0e4 <printf_fetchargs@@Base+0x37c>
   1d0d0:	add	x13, x4, #0xf
   1d0d4:	mov	w9, w12
   1d0d8:	mov	x0, x4
   1d0dc:	and	x4, x13, #0xfffffffffffffff8
   1d0e0:	b	1d0b8 <printf_fetchargs@@Base+0x350>
   1d0e4:	add	x0, x11, w9, sxtw
   1d0e8:	mov	w9, w12
   1d0ec:	b	1d0b8 <printf_fetchargs@@Base+0x350>
   1d0f0:	tbnz	w9, #31, 1d10c <printf_fetchargs@@Base+0x3a4>
   1d0f4:	add	x0, x4, #0xf
   1d0f8:	and	x0, x0, #0xfffffffffffffff0
   1d0fc:	add	x4, x0, #0x10
   1d100:	ldr	q0, [x0]
   1d104:	str	q0, [x2, #16]
   1d108:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d10c:	add	w12, w9, #0x10
   1d110:	cmp	w12, #0x0
   1d114:	b.le	1d12c <printf_fetchargs@@Base+0x3c4>
   1d118:	add	x0, x4, #0xf
   1d11c:	and	x0, x0, #0xfffffffffffffff0
   1d120:	add	x4, x0, #0x10
   1d124:	mov	w9, w12
   1d128:	b	1d100 <printf_fetchargs@@Base+0x398>
   1d12c:	add	x0, x11, w9, sxtw
   1d130:	mov	w9, w12
   1d134:	b	1d100 <printf_fetchargs@@Base+0x398>
   1d138:	tbnz	w5, #31, 1d154 <printf_fetchargs@@Base+0x3ec>
   1d13c:	add	x12, x4, #0xb
   1d140:	mov	x0, x4
   1d144:	and	x4, x12, #0xfffffffffffffff8
   1d148:	ldr	w0, [x0]
   1d14c:	str	w0, [x2, #16]
   1d150:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d154:	add	w12, w5, #0x8
   1d158:	cmp	w12, #0x0
   1d15c:	b.le	1d174 <printf_fetchargs@@Base+0x40c>
   1d160:	add	x13, x4, #0xb
   1d164:	mov	w5, w12
   1d168:	mov	x0, x4
   1d16c:	and	x4, x13, #0xfffffffffffffff8
   1d170:	b	1d148 <printf_fetchargs@@Base+0x3e0>
   1d174:	add	x0, x10, w5, sxtw
   1d178:	mov	w5, w12
   1d17c:	b	1d148 <printf_fetchargs@@Base+0x3e0>
   1d180:	tbnz	w5, #31, 1d19c <printf_fetchargs@@Base+0x434>
   1d184:	add	x12, x4, #0xb
   1d188:	mov	x0, x4
   1d18c:	and	x4, x12, #0xfffffffffffffff8
   1d190:	ldr	w0, [x0]
   1d194:	str	w0, [x2, #16]
   1d198:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d19c:	add	w12, w5, #0x8
   1d1a0:	cmp	w12, #0x0
   1d1a4:	b.le	1d1bc <printf_fetchargs@@Base+0x454>
   1d1a8:	add	x13, x4, #0xb
   1d1ac:	mov	w5, w12
   1d1b0:	mov	x0, x4
   1d1b4:	and	x4, x13, #0xfffffffffffffff8
   1d1b8:	b	1d190 <printf_fetchargs@@Base+0x428>
   1d1bc:	add	x0, x10, w5, sxtw
   1d1c0:	mov	w5, w12
   1d1c4:	b	1d190 <printf_fetchargs@@Base+0x428>
   1d1c8:	tbnz	w5, #31, 1d1ec <printf_fetchargs@@Base+0x484>
   1d1cc:	add	x12, x4, #0xf
   1d1d0:	mov	x0, x4
   1d1d4:	and	x4, x12, #0xfffffffffffffff8
   1d1d8:	ldr	x0, [x0]
   1d1dc:	cmp	x0, #0x0
   1d1e0:	csel	x0, x7, x0, eq  // eq = none
   1d1e4:	str	x0, [x2, #16]
   1d1e8:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d1ec:	add	w12, w5, #0x8
   1d1f0:	cmp	w12, #0x0
   1d1f4:	b.le	1d20c <printf_fetchargs@@Base+0x4a4>
   1d1f8:	add	x13, x4, #0xf
   1d1fc:	mov	w5, w12
   1d200:	mov	x0, x4
   1d204:	and	x4, x13, #0xfffffffffffffff8
   1d208:	b	1d1d8 <printf_fetchargs@@Base+0x470>
   1d20c:	add	x0, x10, w5, sxtw
   1d210:	mov	w5, w12
   1d214:	b	1d1d8 <printf_fetchargs@@Base+0x470>
   1d218:	tbnz	w5, #31, 1d23c <printf_fetchargs@@Base+0x4d4>
   1d21c:	add	x12, x4, #0xf
   1d220:	mov	x0, x4
   1d224:	and	x4, x12, #0xfffffffffffffff8
   1d228:	ldr	x0, [x0]
   1d22c:	cmp	x0, #0x0
   1d230:	csel	x0, x8, x0, eq  // eq = none
   1d234:	str	x0, [x2, #16]
   1d238:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d23c:	add	w12, w5, #0x8
   1d240:	cmp	w12, #0x0
   1d244:	b.le	1d25c <printf_fetchargs@@Base+0x4f4>
   1d248:	add	x13, x4, #0xf
   1d24c:	mov	w5, w12
   1d250:	mov	x0, x4
   1d254:	and	x4, x13, #0xfffffffffffffff8
   1d258:	b	1d228 <printf_fetchargs@@Base+0x4c0>
   1d25c:	add	x0, x10, w5, sxtw
   1d260:	mov	w5, w12
   1d264:	b	1d228 <printf_fetchargs@@Base+0x4c0>
   1d268:	tbnz	w5, #31, 1d284 <printf_fetchargs@@Base+0x51c>
   1d26c:	add	x12, x4, #0xf
   1d270:	mov	x0, x4
   1d274:	and	x4, x12, #0xfffffffffffffff8
   1d278:	ldr	x0, [x0]
   1d27c:	str	x0, [x2, #16]
   1d280:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d284:	add	w12, w5, #0x8
   1d288:	cmp	w12, #0x0
   1d28c:	b.le	1d2a4 <printf_fetchargs@@Base+0x53c>
   1d290:	add	x13, x4, #0xf
   1d294:	mov	w5, w12
   1d298:	mov	x0, x4
   1d29c:	and	x4, x13, #0xfffffffffffffff8
   1d2a0:	b	1d278 <printf_fetchargs@@Base+0x510>
   1d2a4:	add	x0, x10, w5, sxtw
   1d2a8:	mov	w5, w12
   1d2ac:	b	1d278 <printf_fetchargs@@Base+0x510>
   1d2b0:	tbnz	w5, #31, 1d2cc <printf_fetchargs@@Base+0x564>
   1d2b4:	add	x12, x4, #0xf
   1d2b8:	mov	x0, x4
   1d2bc:	and	x4, x12, #0xfffffffffffffff8
   1d2c0:	ldr	x0, [x0]
   1d2c4:	str	x0, [x2, #16]
   1d2c8:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d2cc:	add	w12, w5, #0x8
   1d2d0:	cmp	w12, #0x0
   1d2d4:	b.le	1d2ec <printf_fetchargs@@Base+0x584>
   1d2d8:	add	x13, x4, #0xf
   1d2dc:	mov	w5, w12
   1d2e0:	mov	x0, x4
   1d2e4:	and	x4, x13, #0xfffffffffffffff8
   1d2e8:	b	1d2c0 <printf_fetchargs@@Base+0x558>
   1d2ec:	add	x0, x10, w5, sxtw
   1d2f0:	mov	w5, w12
   1d2f4:	b	1d2c0 <printf_fetchargs@@Base+0x558>
   1d2f8:	tbnz	w5, #31, 1d314 <printf_fetchargs@@Base+0x5ac>
   1d2fc:	add	x12, x4, #0xf
   1d300:	mov	x0, x4
   1d304:	and	x4, x12, #0xfffffffffffffff8
   1d308:	ldr	x0, [x0]
   1d30c:	str	x0, [x2, #16]
   1d310:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d314:	add	w12, w5, #0x8
   1d318:	cmp	w12, #0x0
   1d31c:	b.le	1d334 <printf_fetchargs@@Base+0x5cc>
   1d320:	add	x13, x4, #0xf
   1d324:	mov	w5, w12
   1d328:	mov	x0, x4
   1d32c:	and	x4, x13, #0xfffffffffffffff8
   1d330:	b	1d308 <printf_fetchargs@@Base+0x5a0>
   1d334:	add	x0, x10, w5, sxtw
   1d338:	mov	w5, w12
   1d33c:	b	1d308 <printf_fetchargs@@Base+0x5a0>
   1d340:	tbnz	w5, #31, 1d35c <printf_fetchargs@@Base+0x5f4>
   1d344:	add	x12, x4, #0xf
   1d348:	mov	x0, x4
   1d34c:	and	x4, x12, #0xfffffffffffffff8
   1d350:	ldr	x0, [x0]
   1d354:	str	x0, [x2, #16]
   1d358:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d35c:	add	w12, w5, #0x8
   1d360:	cmp	w12, #0x0
   1d364:	b.le	1d37c <printf_fetchargs@@Base+0x614>
   1d368:	add	x13, x4, #0xf
   1d36c:	mov	w5, w12
   1d370:	mov	x0, x4
   1d374:	and	x4, x13, #0xfffffffffffffff8
   1d378:	b	1d350 <printf_fetchargs@@Base+0x5e8>
   1d37c:	add	x0, x10, w5, sxtw
   1d380:	mov	w5, w12
   1d384:	b	1d350 <printf_fetchargs@@Base+0x5e8>
   1d388:	tbnz	w5, #31, 1d3a4 <printf_fetchargs@@Base+0x63c>
   1d38c:	add	x12, x4, #0xf
   1d390:	mov	x0, x4
   1d394:	and	x4, x12, #0xfffffffffffffff8
   1d398:	ldr	x0, [x0]
   1d39c:	str	x0, [x2, #16]
   1d3a0:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d3a4:	add	w12, w5, #0x8
   1d3a8:	cmp	w12, #0x0
   1d3ac:	b.le	1d3c4 <printf_fetchargs@@Base+0x65c>
   1d3b0:	add	x13, x4, #0xf
   1d3b4:	mov	w5, w12
   1d3b8:	mov	x0, x4
   1d3bc:	and	x4, x13, #0xfffffffffffffff8
   1d3c0:	b	1d398 <printf_fetchargs@@Base+0x630>
   1d3c4:	add	x0, x10, w5, sxtw
   1d3c8:	mov	w5, w12
   1d3cc:	b	1d398 <printf_fetchargs@@Base+0x630>
   1d3d0:	tbnz	w5, #31, 1d3ec <printf_fetchargs@@Base+0x684>
   1d3d4:	add	x12, x4, #0xf
   1d3d8:	mov	x0, x4
   1d3dc:	and	x4, x12, #0xfffffffffffffff8
   1d3e0:	ldr	x0, [x0]
   1d3e4:	str	x0, [x2, #16]
   1d3e8:	b	1cdc0 <printf_fetchargs@@Base+0x58>
   1d3ec:	add	w12, w5, #0x8
   1d3f0:	cmp	w12, #0x0
   1d3f4:	b.le	1d40c <printf_fetchargs@@Base+0x6a4>
   1d3f8:	add	x13, x4, #0xf
   1d3fc:	mov	w5, w12
   1d400:	mov	x0, x4
   1d404:	and	x4, x13, #0xfffffffffffffff8
   1d408:	b	1d3e0 <printf_fetchargs@@Base+0x678>
   1d40c:	add	x0, x10, w5, sxtw
   1d410:	mov	w5, w12
   1d414:	b	1d3e0 <printf_fetchargs@@Base+0x678>
   1d418:	mov	w0, #0x0                   	// #0
   1d41c:	ret
   1d420:	mov	w0, #0x0                   	// #0
   1d424:	b	1d41c <printf_fetchargs@@Base+0x6b4>
   1d428:	mov	w0, #0xffffffff            	// #-1
   1d42c:	b	1d41c <printf_fetchargs@@Base+0x6b4>

000000000001d430 <printf_parse@@Base>:
   1d430:	stp	x29, x30, [sp, #-160]!
   1d434:	mov	x29, sp
   1d438:	stp	x21, x22, [sp, #32]
   1d43c:	stp	x23, x24, [sp, #48]
   1d440:	stp	x25, x26, [sp, #64]
   1d444:	stp	x27, x28, [sp, #80]
   1d448:	mov	x21, x0
   1d44c:	mov	x23, x1
   1d450:	mov	x22, x2
   1d454:	mov	x0, x1
   1d458:	str	xzr, [x0], #32
   1d45c:	str	x0, [sp, #128]
   1d460:	str	x0, [x1, #8]
   1d464:	mov	x27, x2
   1d468:	str	xzr, [x27], #16
   1d46c:	str	x27, [x2, #8]
   1d470:	str	xzr, [sp, #104]
   1d474:	str	xzr, [sp, #96]
   1d478:	mov	x25, #0x7                   	// #7
   1d47c:	str	x25, [sp, #112]
   1d480:	str	xzr, [sp, #120]
   1d484:	mov	x26, #0xffffffffffffffff    	// #-1
   1d488:	str	x26, [sp, #144]
   1d48c:	ldrb	w1, [x21]
   1d490:	cbz	w1, 1dd64 <printf_parse@@Base+0x934>
   1d494:	add	x0, x21, #0x1
   1d498:	cmp	w1, #0x25
   1d49c:	b.eq	1d4a8 <printf_parse@@Base+0x78>  // b.none
   1d4a0:	mov	x21, x0
   1d4a4:	b	1d48c <printf_parse@@Base+0x5c>
   1d4a8:	stp	x19, x20, [sp, #16]
   1d4ac:	ldr	x2, [x23]
   1d4b0:	add	x1, x2, x2, lsl #1
   1d4b4:	lsl	x1, x1, #2
   1d4b8:	sub	x1, x1, x2
   1d4bc:	ldr	x2, [x23, #8]
   1d4c0:	add	x20, x2, x1, lsl #3
   1d4c4:	str	x21, [x2, x1, lsl #3]
   1d4c8:	str	wzr, [x20, #16]
   1d4cc:	str	xzr, [x20, #24]
   1d4d0:	str	xzr, [x20, #32]
   1d4d4:	str	x26, [x20, #40]
   1d4d8:	str	xzr, [x20, #48]
   1d4dc:	str	xzr, [x20, #56]
   1d4e0:	str	x26, [x20, #64]
   1d4e4:	str	x26, [x20, #80]
   1d4e8:	ldrb	w2, [x21, #1]
   1d4ec:	sub	w1, w2, #0x30
   1d4f0:	and	w1, w1, #0xff
   1d4f4:	str	x26, [sp, #136]
   1d4f8:	cmp	w1, #0x9
   1d4fc:	b.hi	1d540 <printf_parse@@Base+0x110>  // b.pmore
   1d500:	mov	x4, x0
   1d504:	ldrb	w3, [x4, #1]!
   1d508:	sub	w1, w3, #0x30
   1d50c:	and	w1, w1, #0xff
   1d510:	cmp	w1, #0x9
   1d514:	b.ls	1d504 <printf_parse@@Base+0xd4>  // b.plast
   1d518:	str	x26, [sp, #136]
   1d51c:	cmp	w3, #0x24
   1d520:	b.ne	1d540 <printf_parse@@Base+0x110>  // b.any
   1d524:	mov	x3, x0
   1d528:	mov	x28, #0x0                   	// #0
   1d52c:	b	1dea4 <printf_parse@@Base+0xa74>
   1d530:	ldr	w1, [x20, #16]
   1d534:	orr	w1, w1, #0x1
   1d538:	str	w1, [x20, #16]
   1d53c:	add	x0, x0, #0x1
   1d540:	mov	x19, x0
   1d544:	ldrb	w1, [x0]
   1d548:	cmp	w1, #0x27
   1d54c:	b.eq	1d530 <printf_parse@@Base+0x100>  // b.none
   1d550:	cmp	w1, #0x2d
   1d554:	b.eq	1d590 <printf_parse@@Base+0x160>  // b.none
   1d558:	cmp	w1, #0x2b
   1d55c:	b.eq	1d5a0 <printf_parse@@Base+0x170>  // b.none
   1d560:	cmp	w1, #0x20
   1d564:	b.eq	1d5b0 <printf_parse@@Base+0x180>  // b.none
   1d568:	cmp	w1, #0x23
   1d56c:	b.eq	1d5c0 <printf_parse@@Base+0x190>  // b.none
   1d570:	cmp	w1, #0x30
   1d574:	b.eq	1d5d0 <printf_parse@@Base+0x1a0>  // b.none
   1d578:	cmp	w1, #0x49
   1d57c:	b.ne	1d5e0 <printf_parse@@Base+0x1b0>  // b.any
   1d580:	ldr	w1, [x20, #16]
   1d584:	orr	w1, w1, #0x40
   1d588:	str	w1, [x20, #16]
   1d58c:	b	1d53c <printf_parse@@Base+0x10c>
   1d590:	ldr	w1, [x20, #16]
   1d594:	orr	w1, w1, #0x2
   1d598:	str	w1, [x20, #16]
   1d59c:	b	1d53c <printf_parse@@Base+0x10c>
   1d5a0:	ldr	w1, [x20, #16]
   1d5a4:	orr	w1, w1, #0x4
   1d5a8:	str	w1, [x20, #16]
   1d5ac:	b	1d53c <printf_parse@@Base+0x10c>
   1d5b0:	ldr	w1, [x20, #16]
   1d5b4:	orr	w1, w1, #0x8
   1d5b8:	str	w1, [x20, #16]
   1d5bc:	b	1d53c <printf_parse@@Base+0x10c>
   1d5c0:	ldr	w1, [x20, #16]
   1d5c4:	orr	w1, w1, #0x10
   1d5c8:	str	w1, [x20, #16]
   1d5cc:	b	1d53c <printf_parse@@Base+0x10c>
   1d5d0:	ldr	w1, [x20, #16]
   1d5d4:	orr	w1, w1, #0x20
   1d5d8:	str	w1, [x20, #16]
   1d5dc:	b	1d53c <printf_parse@@Base+0x10c>
   1d5e0:	cmp	w1, #0x2a
   1d5e4:	b.eq	1d614 <printf_parse@@Base+0x1e4>  // b.none
   1d5e8:	sub	w0, w1, #0x30
   1d5ec:	and	w0, w0, #0xff
   1d5f0:	cmp	w0, #0x9
   1d5f4:	b.ls	1d75c <printf_parse@@Base+0x32c>  // b.plast
   1d5f8:	ldrb	w0, [x19]
   1d5fc:	cmp	w0, #0x2e
   1d600:	b.eq	1d7b4 <printf_parse@@Base+0x384>  // b.none
   1d604:	mov	x0, x19
   1d608:	mov	w1, #0x0                   	// #0
   1d60c:	mov	w3, #0x1                   	// #1
   1d610:	b	1d9c8 <printf_parse@@Base+0x598>
   1d614:	str	x0, [x20, #24]
   1d618:	add	x1, x0, #0x1
   1d61c:	str	x1, [x20, #32]
   1d620:	ldr	x0, [sp, #96]
   1d624:	cmp	x0, #0x0
   1d628:	csinc	x0, x0, xzr, ne  // ne = any
   1d62c:	str	x0, [sp, #96]
   1d630:	ldrb	w2, [x19, #1]
   1d634:	sub	w0, w2, #0x30
   1d638:	and	w0, w0, #0xff
   1d63c:	cmp	w0, #0x9
   1d640:	b.ls	1d704 <printf_parse@@Base+0x2d4>  // b.plast
   1d644:	ldr	x2, [sp, #120]
   1d648:	add	x0, x2, #0x1
   1d64c:	str	x2, [x20, #40]
   1d650:	cmn	x2, #0x1
   1d654:	b.eq	1dcec <printf_parse@@Base+0x8bc>  // b.none
   1d658:	mov	x19, x1
   1d65c:	str	x0, [sp, #120]
   1d660:	ldr	x21, [x20, #40]
   1d664:	cmp	x25, x21
   1d668:	b.hi	1d6bc <printf_parse@@Base+0x28c>  // b.pmore
   1d66c:	tbnz	x25, #63, 1d8f8 <printf_parse@@Base+0x4c8>
   1d670:	lsl	x25, x25, #1
   1d674:	cmp	x21, x25
   1d678:	b.cc	1d684 <printf_parse@@Base+0x254>  // b.lo, b.ul, b.last
   1d67c:	adds	x25, x21, #0x1
   1d680:	b.cs	1d8f8 <printf_parse@@Base+0x4c8>  // b.hs, b.nlast
   1d684:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   1d688:	cmp	x25, x0
   1d68c:	b.hi	1d8f8 <printf_parse@@Base+0x4c8>  // b.pmore
   1d690:	lsl	x1, x25, #5
   1d694:	ldr	x0, [x22, #8]
   1d698:	cmp	x27, x0
   1d69c:	b.eq	1d72c <printf_parse@@Base+0x2fc>  // b.none
   1d6a0:	bl	a7e0 <realloc@plt>
   1d6a4:	mov	x24, x0
   1d6a8:	cbz	x24, 1d8f8 <printf_parse@@Base+0x4c8>
   1d6ac:	ldr	x1, [x22, #8]
   1d6b0:	cmp	x27, x1
   1d6b4:	b.eq	1d73c <printf_parse@@Base+0x30c>  // b.none
   1d6b8:	str	x24, [x22, #8]
   1d6bc:	ldr	x0, [x22]
   1d6c0:	cmp	x21, x0
   1d6c4:	b.cc	1d6e8 <printf_parse@@Base+0x2b8>  // b.lo, b.ul, b.last
   1d6c8:	ldr	x1, [x22, #8]
   1d6cc:	add	x2, x0, #0x1
   1d6d0:	str	x2, [x22]
   1d6d4:	lsl	x0, x0, #5
   1d6d8:	str	wzr, [x1, x0]
   1d6dc:	ldr	x0, [x22]
   1d6e0:	cmp	x0, x21
   1d6e4:	b.ls	1d6c8 <printf_parse@@Base+0x298>  // b.plast
   1d6e8:	lsl	x21, x21, #5
   1d6ec:	ldr	x1, [x22, #8]
   1d6f0:	ldr	w0, [x1, x21]
   1d6f4:	cbnz	w0, 1d750 <printf_parse@@Base+0x320>
   1d6f8:	mov	w0, #0x5                   	// #5
   1d6fc:	str	w0, [x1, x21]
   1d700:	b	1d5f8 <printf_parse@@Base+0x1c8>
   1d704:	mov	x4, x1
   1d708:	ldrb	w3, [x4, #1]!
   1d70c:	sub	w0, w3, #0x30
   1d710:	and	w0, w0, #0xff
   1d714:	cmp	w0, #0x9
   1d718:	b.ls	1d708 <printf_parse@@Base+0x2d8>  // b.plast
   1d71c:	cmp	w3, #0x24
   1d720:	b.ne	1d644 <printf_parse@@Base+0x214>  // b.any
   1d724:	mov	x0, #0x0                   	// #0
   1d728:	b	1de34 <printf_parse@@Base+0xa04>
   1d72c:	mov	x0, x1
   1d730:	bl	a5f0 <malloc@plt>
   1d734:	mov	x24, x0
   1d738:	b	1d6a8 <printf_parse@@Base+0x278>
   1d73c:	ldr	x2, [x22]
   1d740:	lsl	x2, x2, #5
   1d744:	mov	x0, x24
   1d748:	bl	a2c0 <memcpy@plt>
   1d74c:	b	1d6b8 <printf_parse@@Base+0x288>
   1d750:	cmp	w0, #0x5
   1d754:	b.eq	1d5f8 <printf_parse@@Base+0x1c8>  // b.none
   1d758:	b	1dcec <printf_parse@@Base+0x8bc>
   1d75c:	str	x19, [x20, #24]
   1d760:	ldrb	w0, [x19]
   1d764:	sub	w0, w0, #0x30
   1d768:	and	w0, w0, #0xff
   1d76c:	cmp	w0, #0x9
   1d770:	b.hi	1d7ac <printf_parse@@Base+0x37c>  // b.pmore
   1d774:	mov	x1, x19
   1d778:	ldrb	w0, [x1, #1]!
   1d77c:	sub	w0, w0, #0x30
   1d780:	and	w0, w0, #0xff
   1d784:	cmp	w0, #0x9
   1d788:	b.ls	1d778 <printf_parse@@Base+0x348>  // b.plast
   1d78c:	str	x1, [x20, #32]
   1d790:	sub	x19, x1, x19
   1d794:	ldr	x0, [sp, #96]
   1d798:	cmp	x0, x19
   1d79c:	csel	x0, x0, x19, cs  // cs = hs, nlast
   1d7a0:	str	x0, [sp, #96]
   1d7a4:	mov	x19, x1
   1d7a8:	b	1d5f8 <printf_parse@@Base+0x1c8>
   1d7ac:	mov	x1, x19
   1d7b0:	b	1d78c <printf_parse@@Base+0x35c>
   1d7b4:	ldrb	w0, [x19, #1]
   1d7b8:	cmp	w0, #0x2a
   1d7bc:	b.ne	1d968 <printf_parse@@Base+0x538>  // b.any
   1d7c0:	str	x19, [x20, #48]
   1d7c4:	add	x28, x19, #0x2
   1d7c8:	str	x28, [x20, #56]
   1d7cc:	ldr	x1, [sp, #104]
   1d7d0:	cmp	x1, #0x2
   1d7d4:	mov	x0, #0x2                   	// #2
   1d7d8:	csel	x0, x1, x0, cs  // cs = hs, nlast
   1d7dc:	str	x0, [sp, #104]
   1d7e0:	ldrb	w1, [x19, #2]
   1d7e4:	sub	w0, w1, #0x30
   1d7e8:	and	w0, w0, #0xff
   1d7ec:	cmp	w0, #0x9
   1d7f0:	b.ls	1d8a8 <printf_parse@@Base+0x478>  // b.plast
   1d7f4:	ldr	x0, [x20, #64]
   1d7f8:	cmn	x0, #0x1
   1d7fc:	b.eq	1d8d4 <printf_parse@@Base+0x4a4>  // b.none
   1d800:	ldr	x19, [x20, #64]
   1d804:	cmp	x25, x19
   1d808:	b.hi	1d85c <printf_parse@@Base+0x42c>  // b.pmore
   1d80c:	tbnz	x25, #63, 1d8f8 <printf_parse@@Base+0x4c8>
   1d810:	lsl	x25, x25, #1
   1d814:	cmp	x19, x25
   1d818:	b.cs	1d8f0 <printf_parse@@Base+0x4c0>  // b.hs, b.nlast
   1d81c:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   1d820:	cmp	x25, x0
   1d824:	b.hi	1d8f8 <printf_parse@@Base+0x4c8>  // b.pmore
   1d828:	lsl	x0, x25, #5
   1d82c:	ldr	x21, [x22, #8]
   1d830:	cmp	x27, x21
   1d834:	b.eq	1d934 <printf_parse@@Base+0x504>  // b.none
   1d838:	mov	x1, x0
   1d83c:	mov	x0, x21
   1d840:	bl	a7e0 <realloc@plt>
   1d844:	mov	x24, x0
   1d848:	cbz	x0, 1d8f8 <printf_parse@@Base+0x4c8>
   1d84c:	ldr	x21, [x22, #8]
   1d850:	cmp	x27, x21
   1d854:	b.eq	1d940 <printf_parse@@Base+0x510>  // b.none
   1d858:	str	x24, [x22, #8]
   1d85c:	ldr	x0, [x22]
   1d860:	cmp	x19, x0
   1d864:	b.cc	1d888 <printf_parse@@Base+0x458>  // b.lo, b.ul, b.last
   1d868:	ldr	x1, [x22, #8]
   1d86c:	add	x2, x0, #0x1
   1d870:	str	x2, [x22]
   1d874:	lsl	x0, x0, #5
   1d878:	str	wzr, [x1, x0]
   1d87c:	ldr	x0, [x22]
   1d880:	cmp	x0, x19
   1d884:	b.ls	1d868 <printf_parse@@Base+0x438>  // b.plast
   1d888:	lsl	x19, x19, #5
   1d88c:	ldr	x1, [x22, #8]
   1d890:	ldr	w0, [x1, x19]
   1d894:	cbnz	w0, 1d958 <printf_parse@@Base+0x528>
   1d898:	mov	w0, #0x5                   	// #5
   1d89c:	str	w0, [x1, x19]
   1d8a0:	mov	x19, x28
   1d8a4:	b	1d604 <printf_parse@@Base+0x1d4>
   1d8a8:	mov	x3, x28
   1d8ac:	ldrb	w2, [x3, #1]!
   1d8b0:	sub	w0, w2, #0x30
   1d8b4:	and	w0, w0, #0xff
   1d8b8:	cmp	w0, #0x9
   1d8bc:	b.ls	1d8ac <printf_parse@@Base+0x47c>  // b.plast
   1d8c0:	cmp	w2, #0x24
   1d8c4:	b.ne	1d7f4 <printf_parse@@Base+0x3c4>  // b.any
   1d8c8:	add	x19, x19, #0x2
   1d8cc:	mov	x0, #0x0                   	// #0
   1d8d0:	b	1ddc4 <printf_parse@@Base+0x994>
   1d8d4:	ldr	x1, [sp, #120]
   1d8d8:	add	x0, x1, #0x1
   1d8dc:	str	x1, [x20, #64]
   1d8e0:	cmn	x1, #0x1
   1d8e4:	b.eq	1dcec <printf_parse@@Base+0x8bc>  // b.none
   1d8e8:	str	x0, [sp, #120]
   1d8ec:	b	1d800 <printf_parse@@Base+0x3d0>
   1d8f0:	adds	x25, x19, #0x1
   1d8f4:	b.cc	1d81c <printf_parse@@Base+0x3ec>  // b.lo, b.ul, b.last
   1d8f8:	ldr	x0, [x22, #8]
   1d8fc:	cmp	x27, x0
   1d900:	b.eq	1d908 <printf_parse@@Base+0x4d8>  // b.none
   1d904:	bl	aa50 <free@plt>
   1d908:	ldr	x0, [x23, #8]
   1d90c:	ldr	x1, [sp, #128]
   1d910:	cmp	x1, x0
   1d914:	b.eq	1d91c <printf_parse@@Base+0x4ec>  // b.none
   1d918:	bl	aa50 <free@plt>
   1d91c:	bl	aeb0 <__errno_location@plt>
   1d920:	mov	w1, #0xc                   	// #12
   1d924:	str	w1, [x0]
   1d928:	mov	w0, #0xffffffff            	// #-1
   1d92c:	ldp	x19, x20, [sp, #16]
   1d930:	b	1dd90 <printf_parse@@Base+0x960>
   1d934:	bl	a5f0 <malloc@plt>
   1d938:	mov	x24, x0
   1d93c:	cbz	x0, 1d908 <printf_parse@@Base+0x4d8>
   1d940:	ldr	x2, [x22]
   1d944:	lsl	x2, x2, #5
   1d948:	mov	x1, x21
   1d94c:	mov	x0, x24
   1d950:	bl	a2c0 <memcpy@plt>
   1d954:	b	1d858 <printf_parse@@Base+0x428>
   1d958:	cmp	w0, #0x5
   1d95c:	b.ne	1dcec <printf_parse@@Base+0x8bc>  // b.any
   1d960:	mov	x19, x28
   1d964:	b	1d604 <printf_parse@@Base+0x1d4>
   1d968:	add	x1, x19, #0x1
   1d96c:	str	x19, [x20, #48]
   1d970:	ldrb	w0, [x19, #1]
   1d974:	sub	w0, w0, #0x30
   1d978:	and	w0, w0, #0xff
   1d97c:	cmp	w0, #0x9
   1d980:	b.hi	1d998 <printf_parse@@Base+0x568>  // b.pmore
   1d984:	ldrb	w0, [x1, #1]!
   1d988:	sub	w0, w0, #0x30
   1d98c:	and	w0, w0, #0xff
   1d990:	cmp	w0, #0x9
   1d994:	b.ls	1d984 <printf_parse@@Base+0x554>  // b.plast
   1d998:	str	x1, [x20, #56]
   1d99c:	sub	x19, x1, x19
   1d9a0:	ldr	x0, [sp, #104]
   1d9a4:	cmp	x0, x19
   1d9a8:	csel	x0, x0, x19, cs  // cs = hs, nlast
   1d9ac:	str	x0, [sp, #104]
   1d9b0:	mov	x19, x1
   1d9b4:	b	1d604 <printf_parse@@Base+0x1d4>
   1d9b8:	and	w2, w1, #0x1
   1d9bc:	lsl	w2, w3, w2
   1d9c0:	orr	w1, w1, w2
   1d9c4:	add	x0, x0, #0x1
   1d9c8:	ldrb	w19, [x0]
   1d9cc:	cmp	w19, #0x68
   1d9d0:	b.eq	1d9b8 <printf_parse@@Base+0x588>  // b.none
   1d9d4:	cmp	w19, #0x4c
   1d9d8:	b.eq	1da04 <printf_parse@@Base+0x5d4>  // b.none
   1d9dc:	cmp	w19, #0x6c
   1d9e0:	b.eq	1da0c <printf_parse@@Base+0x5dc>  // b.none
   1d9e4:	cmp	w19, #0x6a
   1d9e8:	b.eq	1da14 <printf_parse@@Base+0x5e4>  // b.none
   1d9ec:	and	w2, w19, #0xffffffdf
   1d9f0:	and	w2, w2, #0xff
   1d9f4:	cmp	w2, #0x5a
   1d9f8:	b.ne	1da1c <printf_parse@@Base+0x5ec>  // b.any
   1d9fc:	add	w1, w1, #0x8
   1da00:	b	1d9c4 <printf_parse@@Base+0x594>
   1da04:	orr	w1, w1, #0x4
   1da08:	b	1d9c4 <printf_parse@@Base+0x594>
   1da0c:	add	w1, w1, #0x8
   1da10:	b	1d9c4 <printf_parse@@Base+0x594>
   1da14:	add	w1, w1, #0x8
   1da18:	b	1d9c4 <printf_parse@@Base+0x594>
   1da1c:	cmp	w19, #0x74
   1da20:	b.ne	1da2c <printf_parse@@Base+0x5fc>  // b.any
   1da24:	add	w1, w1, #0x8
   1da28:	b	1d9c4 <printf_parse@@Base+0x594>
   1da2c:	add	x21, x0, #0x1
   1da30:	sub	w0, w19, #0x25
   1da34:	cmp	w0, #0x53
   1da38:	b.hi	1dcec <printf_parse@@Base+0x8bc>  // b.pmore
   1da3c:	adrp	x2, 2e000 <vasnprintf@@Base+0x3378>
   1da40:	add	x2, x2, #0xb5c
   1da44:	ldrh	w0, [x2, w0, uxtw #1]
   1da48:	adr	x2, 1da54 <printf_parse@@Base+0x624>
   1da4c:	add	x0, x2, w0, sxth #2
   1da50:	br	x0
   1da54:	mov	w28, #0x10                  	// #16
   1da58:	mov	w19, #0x73                  	// #115
   1da5c:	b	1daf4 <printf_parse@@Base+0x6c4>
   1da60:	mov	w28, #0x9                   	// #9
   1da64:	cmp	w1, #0xf
   1da68:	b.gt	1daf4 <printf_parse@@Base+0x6c4>
   1da6c:	tbnz	w1, #2, 1daf4 <printf_parse@@Base+0x6c4>
   1da70:	mov	w28, #0x7                   	// #7
   1da74:	cmp	w1, w28
   1da78:	b.gt	1daf4 <printf_parse@@Base+0x6c4>
   1da7c:	mov	w28, #0x1                   	// #1
   1da80:	tbnz	w1, #1, 1daf4 <printf_parse@@Base+0x6c4>
   1da84:	tst	x1, #0x1
   1da88:	mov	w1, #0x3                   	// #3
   1da8c:	mov	w0, #0x5                   	// #5
   1da90:	csel	w28, w1, w0, ne  // ne = any
   1da94:	b	1daf4 <printf_parse@@Base+0x6c4>
   1da98:	mov	w28, #0xa                   	// #10
   1da9c:	cmp	w1, #0xf
   1daa0:	b.gt	1daf4 <printf_parse@@Base+0x6c4>
   1daa4:	tbnz	w1, #2, 1daf4 <printf_parse@@Base+0x6c4>
   1daa8:	mov	w28, #0x8                   	// #8
   1daac:	cmp	w1, #0x7
   1dab0:	b.gt	1daf4 <printf_parse@@Base+0x6c4>
   1dab4:	mov	w28, #0x2                   	// #2
   1dab8:	tbnz	w1, #1, 1daf4 <printf_parse@@Base+0x6c4>
   1dabc:	tst	x1, #0x1
   1dac0:	mov	w1, #0x4                   	// #4
   1dac4:	mov	w0, #0x6                   	// #6
   1dac8:	csel	w28, w1, w0, ne  // ne = any
   1dacc:	b	1daf4 <printf_parse@@Base+0x6c4>
   1dad0:	mov	w28, #0xc                   	// #12
   1dad4:	cmp	w1, #0xf
   1dad8:	b.gt	1daf4 <printf_parse@@Base+0x6c4>
   1dadc:	ubfx	x1, x1, #2, #1
   1dae0:	add	w28, w1, #0xb
   1dae4:	b	1daf4 <printf_parse@@Base+0x6c4>
   1dae8:	cmp	w1, #0x7
   1daec:	cset	w0, gt
   1daf0:	add	w28, w0, #0xd
   1daf4:	ldr	x0, [sp, #136]
   1daf8:	cmn	x0, #0x1
   1dafc:	b.eq	1dc94 <printf_parse@@Base+0x864>  // b.none
   1db00:	str	x0, [x20, #80]
   1db04:	ldr	x24, [x20, #80]
   1db08:	cmp	x25, x24
   1db0c:	b.hi	1db64 <printf_parse@@Base+0x734>  // b.pmore
   1db10:	tbnz	x25, #63, 1d8f8 <printf_parse@@Base+0x4c8>
   1db14:	lsl	x25, x25, #1
   1db18:	cmp	x24, x25
   1db1c:	b.cs	1dcb0 <printf_parse@@Base+0x880>  // b.hs, b.nlast
   1db20:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   1db24:	cmp	x25, x0
   1db28:	b.hi	1d8f8 <printf_parse@@Base+0x4c8>  // b.pmore
   1db2c:	lsl	x1, x25, #5
   1db30:	ldr	x0, [x22, #8]
   1db34:	str	x0, [sp, #136]
   1db38:	cmp	x27, x0
   1db3c:	b.eq	1dcbc <printf_parse@@Base+0x88c>  // b.none
   1db40:	bl	a7e0 <realloc@plt>
   1db44:	str	x0, [sp, #152]
   1db48:	cbz	x0, 1d8f8 <printf_parse@@Base+0x4c8>
   1db4c:	ldr	x0, [x22, #8]
   1db50:	str	x0, [sp, #136]
   1db54:	cmp	x27, x0
   1db58:	b.eq	1dccc <printf_parse@@Base+0x89c>  // b.none
   1db5c:	ldr	x0, [sp, #152]
   1db60:	str	x0, [x22, #8]
   1db64:	ldr	x0, [x22]
   1db68:	cmp	x24, x0
   1db6c:	b.cc	1db90 <printf_parse@@Base+0x760>  // b.lo, b.ul, b.last
   1db70:	ldr	x1, [x22, #8]
   1db74:	add	x2, x0, #0x1
   1db78:	str	x2, [x22]
   1db7c:	lsl	x0, x0, #5
   1db80:	str	wzr, [x1, x0]
   1db84:	ldr	x0, [x22]
   1db88:	cmp	x0, x24
   1db8c:	b.ls	1db70 <printf_parse@@Base+0x740>  // b.plast
   1db90:	lsl	x24, x24, #5
   1db94:	ldr	x1, [x22, #8]
   1db98:	ldr	w0, [x1, x24]
   1db9c:	cbnz	w0, 1dce4 <printf_parse@@Base+0x8b4>
   1dba0:	str	w28, [x1, x24]
   1dba4:	strb	w19, [x20, #72]
   1dba8:	str	x21, [x20, #8]
   1dbac:	ldr	x0, [x23]
   1dbb0:	add	x0, x0, #0x1
   1dbb4:	str	x0, [x23]
   1dbb8:	ldr	x1, [sp, #112]
   1dbbc:	cmp	x1, x0
   1dbc0:	b.hi	1dd5c <printf_parse@@Base+0x92c>  // b.pmore
   1dbc4:	mov	x0, x1
   1dbc8:	tbnz	x1, #63, 1d8f8 <printf_parse@@Base+0x4c8>
   1dbcc:	lsl	x24, x1, #1
   1dbd0:	mov	x1, #0xe8ba                	// #59578
   1dbd4:	movk	x1, #0x8ba2, lsl #16
   1dbd8:	movk	x1, #0xba2e, lsl #32
   1dbdc:	movk	x1, #0x2e8, lsl #48
   1dbe0:	cmp	x1, x0, lsl #1
   1dbe4:	b.cc	1d8f8 <printf_parse@@Base+0x4c8>  // b.lo, b.ul, b.last
   1dbe8:	add	x1, x0, x0, lsl #1
   1dbec:	lsl	x1, x1, #2
   1dbf0:	sub	x1, x1, x0
   1dbf4:	lsl	x1, x1, #4
   1dbf8:	ldr	x19, [x23, #8]
   1dbfc:	ldr	x0, [sp, #128]
   1dc00:	cmp	x0, x19
   1dc04:	b.eq	1dd28 <printf_parse@@Base+0x8f8>  // b.none
   1dc08:	mov	x0, x19
   1dc0c:	bl	a7e0 <realloc@plt>
   1dc10:	mov	x20, x0
   1dc14:	cbz	x0, 1d8f8 <printf_parse@@Base+0x4c8>
   1dc18:	ldr	x19, [x23, #8]
   1dc1c:	ldr	x0, [sp, #128]
   1dc20:	cmp	x0, x19
   1dc24:	b.eq	1dd38 <printf_parse@@Base+0x908>  // b.none
   1dc28:	str	x20, [x23, #8]
   1dc2c:	str	x24, [sp, #112]
   1dc30:	ldp	x19, x20, [sp, #16]
   1dc34:	b	1d48c <printf_parse@@Base+0x5c>
   1dc38:	cmp	w1, #0x7
   1dc3c:	cset	w0, gt
   1dc40:	add	w28, w0, #0xf
   1dc44:	b	1daf4 <printf_parse@@Base+0x6c4>
   1dc48:	mov	w28, #0x16                  	// #22
   1dc4c:	cmp	w1, #0xf
   1dc50:	b.gt	1daf4 <printf_parse@@Base+0x6c4>
   1dc54:	tbnz	w1, #2, 1daf4 <printf_parse@@Base+0x6c4>
   1dc58:	mov	w28, #0x15                  	// #21
   1dc5c:	cmp	w1, #0x7
   1dc60:	b.gt	1daf4 <printf_parse@@Base+0x6c4>
   1dc64:	and	w2, w1, #0x1
   1dc68:	mov	w0, #0x14                  	// #20
   1dc6c:	sub	w0, w0, w2
   1dc70:	tst	x1, #0x2
   1dc74:	mov	w1, #0x12                  	// #18
   1dc78:	csel	w28, w0, w1, eq  // eq = none
   1dc7c:	b	1daf4 <printf_parse@@Base+0x6c4>
   1dc80:	mov	w28, #0xe                   	// #14
   1dc84:	mov	w19, #0x63                  	// #99
   1dc88:	b	1daf4 <printf_parse@@Base+0x6c4>
   1dc8c:	mov	w28, #0x11                  	// #17
   1dc90:	b	1daf4 <printf_parse@@Base+0x6c4>
   1dc94:	ldr	x1, [sp, #120]
   1dc98:	add	x0, x1, #0x1
   1dc9c:	str	x1, [x20, #80]
   1dca0:	cmn	x1, #0x1
   1dca4:	b.eq	1dcec <printf_parse@@Base+0x8bc>  // b.none
   1dca8:	str	x0, [sp, #120]
   1dcac:	b	1db04 <printf_parse@@Base+0x6d4>
   1dcb0:	adds	x25, x24, #0x1
   1dcb4:	b.cc	1db20 <printf_parse@@Base+0x6f0>  // b.lo, b.ul, b.last
   1dcb8:	b	1d8f8 <printf_parse@@Base+0x4c8>
   1dcbc:	mov	x0, x1
   1dcc0:	bl	a5f0 <malloc@plt>
   1dcc4:	str	x0, [sp, #152]
   1dcc8:	cbz	x0, 1d908 <printf_parse@@Base+0x4d8>
   1dccc:	ldr	x2, [x22]
   1dcd0:	lsl	x2, x2, #5
   1dcd4:	ldr	x1, [sp, #136]
   1dcd8:	ldr	x0, [sp, #152]
   1dcdc:	bl	a2c0 <memcpy@plt>
   1dce0:	b	1db5c <printf_parse@@Base+0x72c>
   1dce4:	cmp	w0, w28
   1dce8:	b.eq	1dba4 <printf_parse@@Base+0x774>  // b.none
   1dcec:	ldr	x0, [x22, #8]
   1dcf0:	cmp	x27, x0
   1dcf4:	b.eq	1dcfc <printf_parse@@Base+0x8cc>  // b.none
   1dcf8:	bl	aa50 <free@plt>
   1dcfc:	ldr	x0, [x23, #8]
   1dd00:	ldr	x1, [sp, #128]
   1dd04:	cmp	x1, x0
   1dd08:	b.eq	1dd10 <printf_parse@@Base+0x8e0>  // b.none
   1dd0c:	bl	aa50 <free@plt>
   1dd10:	bl	aeb0 <__errno_location@plt>
   1dd14:	mov	w1, #0x16                  	// #22
   1dd18:	str	w1, [x0]
   1dd1c:	mov	w0, #0xffffffff            	// #-1
   1dd20:	ldp	x19, x20, [sp, #16]
   1dd24:	b	1dd90 <printf_parse@@Base+0x960>
   1dd28:	mov	x0, x1
   1dd2c:	bl	a5f0 <malloc@plt>
   1dd30:	mov	x20, x0
   1dd34:	cbz	x0, 1def8 <printf_parse@@Base+0xac8>
   1dd38:	ldr	x0, [x23]
   1dd3c:	add	x2, x0, x0, lsl #1
   1dd40:	lsl	x2, x2, #2
   1dd44:	sub	x2, x2, x0
   1dd48:	lsl	x2, x2, #3
   1dd4c:	mov	x1, x19
   1dd50:	mov	x0, x20
   1dd54:	bl	a2c0 <memcpy@plt>
   1dd58:	b	1dc28 <printf_parse@@Base+0x7f8>
   1dd5c:	ldp	x19, x20, [sp, #16]
   1dd60:	b	1d48c <printf_parse@@Base+0x5c>
   1dd64:	ldr	x1, [x23]
   1dd68:	ldr	x2, [x23, #8]
   1dd6c:	add	x0, x1, x1, lsl #1
   1dd70:	lsl	x0, x0, #2
   1dd74:	sub	x0, x0, x1
   1dd78:	str	x21, [x2, x0, lsl #3]
   1dd7c:	ldr	x0, [sp, #96]
   1dd80:	str	x0, [x23, #16]
   1dd84:	ldr	x0, [sp, #104]
   1dd88:	str	x0, [x23, #24]
   1dd8c:	mov	w0, #0x0                   	// #0
   1dd90:	ldp	x21, x22, [sp, #32]
   1dd94:	ldp	x23, x24, [sp, #48]
   1dd98:	ldp	x25, x26, [sp, #64]
   1dd9c:	ldp	x27, x28, [sp, #80]
   1dda0:	ldp	x29, x30, [sp], #160
   1dda4:	ret
   1dda8:	ldrb	w1, [x19, #1]
   1ddac:	sub	w0, w1, #0x30
   1ddb0:	and	w0, w0, #0xff
   1ddb4:	cmp	w0, #0x9
   1ddb8:	b.hi	1dcec <printf_parse@@Base+0x8bc>  // b.pmore
   1ddbc:	ldr	x0, [sp, #144]
   1ddc0:	add	x19, x19, #0x1
   1ddc4:	add	x2, x0, x0, lsl #2
   1ddc8:	lsl	x2, x2, #1
   1ddcc:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   1ddd0:	movk	x4, #0x1999, lsl #48
   1ddd4:	cmp	x0, x4
   1ddd8:	csel	x2, x2, x26, ls  // ls = plast
   1dddc:	sub	w0, w1, #0x30
   1dde0:	add	x0, x2, w0, sxtw
   1dde4:	cmp	x2, x0
   1dde8:	b.hi	1dda8 <printf_parse@@Base+0x978>  // b.pmore
   1ddec:	ldrb	w1, [x19, #1]
   1ddf0:	sub	w2, w1, #0x30
   1ddf4:	and	w2, w2, #0xff
   1ddf8:	cmp	w2, #0x9
   1ddfc:	b.ls	1ddc0 <printf_parse@@Base+0x990>  // b.plast
   1de00:	sub	x0, x0, #0x1
   1de04:	cmn	x0, #0x3
   1de08:	b.hi	1dcec <printf_parse@@Base+0x8bc>  // b.pmore
   1de0c:	str	x0, [x20, #64]
   1de10:	add	x28, x19, #0x2
   1de14:	b	1d800 <printf_parse@@Base+0x3d0>
   1de18:	ldrb	w2, [x1, #1]
   1de1c:	sub	w0, w2, #0x30
   1de20:	and	w0, w0, #0xff
   1de24:	cmp	w0, #0x9
   1de28:	b.hi	1dcec <printf_parse@@Base+0x8bc>  // b.pmore
   1de2c:	ldr	x0, [sp, #144]
   1de30:	add	x1, x1, #0x1
   1de34:	add	x3, x0, x0, lsl #2
   1de38:	lsl	x3, x3, #1
   1de3c:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   1de40:	movk	x4, #0x1999, lsl #48
   1de44:	cmp	x0, x4
   1de48:	csel	x3, x3, x26, ls  // ls = plast
   1de4c:	sub	w0, w2, #0x30
   1de50:	add	x0, x3, w0, sxtw
   1de54:	cmp	x3, x0
   1de58:	b.hi	1de18 <printf_parse@@Base+0x9e8>  // b.pmore
   1de5c:	ldrb	w2, [x1, #1]
   1de60:	sub	w3, w2, #0x30
   1de64:	and	w3, w3, #0xff
   1de68:	cmp	w3, #0x9
   1de6c:	b.ls	1de30 <printf_parse@@Base+0xa00>  // b.plast
   1de70:	sub	x0, x0, #0x1
   1de74:	cmn	x0, #0x3
   1de78:	b.hi	1dcec <printf_parse@@Base+0x8bc>  // b.pmore
   1de7c:	str	x0, [x20, #40]
   1de80:	add	x19, x1, #0x2
   1de84:	b	1d660 <printf_parse@@Base+0x230>
   1de88:	ldrb	w2, [x3, #1]
   1de8c:	sub	w0, w2, #0x30
   1de90:	and	w0, w0, #0xff
   1de94:	cmp	w0, #0x9
   1de98:	b.hi	1dcec <printf_parse@@Base+0x8bc>  // b.pmore
   1de9c:	ldr	x28, [sp, #144]
   1dea0:	add	x3, x3, #0x1
   1dea4:	add	x1, x28, x28, lsl #2
   1dea8:	lsl	x1, x1, #1
   1deac:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   1deb0:	movk	x4, #0x1999, lsl #48
   1deb4:	cmp	x28, x4
   1deb8:	csel	x1, x1, x26, ls  // ls = plast
   1debc:	sub	w2, w2, #0x30
   1dec0:	add	x28, x1, w2, sxtw
   1dec4:	cmp	x1, x28
   1dec8:	b.hi	1de88 <printf_parse@@Base+0xa58>  // b.pmore
   1decc:	ldrb	w2, [x3, #1]
   1ded0:	sub	w1, w2, #0x30
   1ded4:	and	w1, w1, #0xff
   1ded8:	cmp	w1, #0x9
   1dedc:	b.ls	1dea0 <printf_parse@@Base+0xa70>  // b.plast
   1dee0:	sub	x1, x28, #0x1
   1dee4:	str	x1, [sp, #136]
   1dee8:	cmn	x1, #0x3
   1deec:	b.hi	1dcec <printf_parse@@Base+0x8bc>  // b.pmore
   1def0:	add	x0, x3, #0x2
   1def4:	b	1d540 <printf_parse@@Base+0x110>
   1def8:	ldr	x0, [x22, #8]
   1defc:	cmp	x27, x0
   1df00:	b.ne	1d904 <printf_parse@@Base+0x4d4>  // b.any
   1df04:	b	1d91c <printf_parse@@Base+0x4ec>
   1df08:	mov	x2, x0
   1df0c:	ldr	w0, [x0, #144]
   1df10:	cmp	w0, #0x1
   1df14:	b.eq	1df4c <printf_parse@@Base+0xb1c>  // b.none
   1df18:	add	x1, x1, #0x1
   1df1c:	ldr	x3, [x2, #48]
   1df20:	cmp	x1, x3
   1df24:	b.ge	1df50 <printf_parse@@Base+0xb20>  // b.tcont
   1df28:	ldr	x4, [x2, #16]
   1df2c:	mov	w0, #0x1                   	// #1
   1df30:	ldr	w2, [x4, x1, lsl #2]
   1df34:	cmn	w2, #0x1
   1df38:	b.ne	1df4c <printf_parse@@Base+0xb1c>  // b.any
   1df3c:	add	w0, w0, #0x1
   1df40:	add	x1, x1, #0x1
   1df44:	cmp	x3, x1
   1df48:	b.ne	1df30 <printf_parse@@Base+0xb00>  // b.any
   1df4c:	ret
   1df50:	mov	w0, #0x1                   	// #1
   1df54:	b	1df4c <printf_parse@@Base+0xb1c>
   1df58:	ldr	w2, [x0, #144]
   1df5c:	cmp	w2, #0x1
   1df60:	b.eq	1df70 <printf_parse@@Base+0xb40>  // b.none
   1df64:	ldr	x0, [x0, #16]
   1df68:	ldr	w0, [x0, x1, lsl #2]
   1df6c:	ret
   1df70:	ldr	x0, [x0, #8]
   1df74:	ldrb	w0, [x0, x1]
   1df78:	b	1df6c <printf_parse@@Base+0xb3c>
   1df7c:	ldr	x1, [x0, #88]
   1df80:	ldr	x4, [x0, #64]
   1df84:	cmp	x4, x1
   1df88:	csel	x4, x4, x1, le
   1df8c:	ldr	x1, [x0, #48]
   1df90:	cmp	x4, x1
   1df94:	b.le	1dfd0 <printf_parse@@Base+0xba0>
   1df98:	ldr	x2, [x0]
   1df9c:	ldr	x3, [x0, #40]
   1dfa0:	add	x2, x2, x1
   1dfa4:	ldrb	w2, [x2, x3]
   1dfa8:	ldr	x3, [x0, #120]
   1dfac:	ldrb	w3, [x3, x2]
   1dfb0:	ldr	x2, [x0, #8]
   1dfb4:	strb	w3, [x2, x1]
   1dfb8:	add	x1, x1, #0x1
   1dfbc:	cmp	x4, x1
   1dfc0:	b.ne	1df98 <printf_parse@@Base+0xb68>  // b.any
   1dfc4:	str	x4, [x0, #48]
   1dfc8:	str	x4, [x0, #56]
   1dfcc:	ret
   1dfd0:	mov	x4, x1
   1dfd4:	b	1dfc4 <printf_parse@@Base+0xb94>
   1dfd8:	mov	x3, x0
   1dfdc:	cmp	x0, #0x0
   1dfe0:	cset	w0, eq  // eq = none
   1dfe4:	cmp	x1, #0x0
   1dfe8:	csinc	w0, w0, wzr, ne  // ne = any
   1dfec:	cbnz	w0, 1e02c <printf_parse@@Base+0xbfc>
   1dff0:	ldr	x2, [x3, #8]
   1dff4:	ldr	x4, [x1, #8]
   1dff8:	cmp	x2, x4
   1dffc:	b.ne	1e030 <printf_parse@@Base+0xc00>  // b.any
   1e000:	subs	x2, x2, #0x1
   1e004:	b.mi	1e024 <printf_parse@@Base+0xbf4>  // b.first
   1e008:	ldr	x5, [x3, #16]
   1e00c:	ldr	x4, [x1, #16]
   1e010:	ldr	x5, [x5, x2, lsl #3]
   1e014:	ldr	x4, [x4, x2, lsl #3]
   1e018:	cmp	x5, x4
   1e01c:	b.eq	1e000 <printf_parse@@Base+0xbd0>  // b.none
   1e020:	b	1e030 <printf_parse@@Base+0xc00>
   1e024:	mov	w0, #0x1                   	// #1
   1e028:	b	1e030 <printf_parse@@Base+0xc00>
   1e02c:	mov	w0, #0x0                   	// #0
   1e030:	ret
   1e034:	ldr	x3, [x0, #8]
   1e038:	cmp	x3, #0x0
   1e03c:	b.le	1e08c <printf_parse@@Base+0xc5c>
   1e040:	sub	x3, x3, #0x1
   1e044:	mov	x4, #0x0                   	// #0
   1e048:	cmp	x3, x4
   1e04c:	b.ls	1e078 <printf_parse@@Base+0xc48>  // b.plast
   1e050:	add	x2, x3, x4
   1e054:	lsr	x2, x2, #1
   1e058:	ldr	x5, [x0, #16]
   1e05c:	ldr	x5, [x5, x2, lsl #3]
   1e060:	cmp	x5, x1
   1e064:	b.lt	1e070 <printf_parse@@Base+0xc40>  // b.tstop
   1e068:	mov	x3, x2
   1e06c:	b	1e048 <printf_parse@@Base+0xc18>
   1e070:	add	x4, x2, #0x1
   1e074:	b	1e048 <printf_parse@@Base+0xc18>
   1e078:	ldr	x0, [x0, #16]
   1e07c:	ldr	x0, [x0, x4, lsl #3]
   1e080:	cmp	x0, x1
   1e084:	csinc	x0, xzr, x4, ne  // ne = any
   1e088:	ret
   1e08c:	mov	x0, #0x0                   	// #0
   1e090:	b	1e088 <printf_parse@@Base+0xc58>
   1e094:	tbnz	x1, #63, 1e0dc <printf_parse@@Base+0xcac>
   1e098:	ldr	x2, [x0, #8]
   1e09c:	cmp	x2, x1
   1e0a0:	b.le	1e0dc <printf_parse@@Base+0xcac>
   1e0a4:	sub	x2, x2, #0x1
   1e0a8:	str	x2, [x0, #8]
   1e0ac:	cmp	x2, x1
   1e0b0:	b.le	1e0dc <printf_parse@@Base+0xcac>
   1e0b4:	add	x2, x1, #0x1
   1e0b8:	lsl	x2, x2, #3
   1e0bc:	ldr	x3, [x0, #16]
   1e0c0:	ldr	x4, [x3, x2]
   1e0c4:	str	x4, [x3, x1, lsl #3]
   1e0c8:	add	x1, x1, #0x1
   1e0cc:	add	x2, x2, #0x8
   1e0d0:	ldr	x3, [x0, #8]
   1e0d4:	cmp	x3, x1
   1e0d8:	b.gt	1e0bc <printf_parse@@Base+0xc8c>
   1e0dc:	ret
   1e0e0:	ldrb	w2, [x1, #48]
   1e0e4:	cmp	w2, #0x4
   1e0e8:	b.eq	1e0fc <printf_parse@@Base+0xccc>  // b.none
   1e0ec:	cmp	w2, #0x11
   1e0f0:	b.eq	1e12c <printf_parse@@Base+0xcfc>  // b.none
   1e0f4:	mov	w0, #0x0                   	// #0
   1e0f8:	ret
   1e0fc:	ldr	x2, [x0, #224]
   1e100:	cbz	x2, 1e0f4 <printf_parse@@Base+0xcc4>
   1e104:	ldrsw	x3, [x1, #40]
   1e108:	ldr	x2, [x2, x3, lsl #3]
   1e10c:	str	x2, [x1, #40]
   1e110:	mov	w1, #0x1                   	// #1
   1e114:	lsl	w1, w1, w2
   1e118:	sxtw	x1, w1
   1e11c:	ldr	x2, [x0, #160]
   1e120:	orr	x1, x2, x1
   1e124:	str	x1, [x0, #160]
   1e128:	b	1e0f4 <printf_parse@@Base+0xcc4>
   1e12c:	ldr	x2, [x1, #8]
   1e130:	cbz	x2, 1e0f4 <printf_parse@@Base+0xcc4>
   1e134:	ldrb	w3, [x2, #48]
   1e138:	cmp	w3, #0x11
   1e13c:	b.ne	1e0f4 <printf_parse@@Base+0xcc4>  // b.any
   1e140:	ldr	x3, [x2, #40]
   1e144:	ldr	x2, [x2, #8]
   1e148:	str	x2, [x1, #8]
   1e14c:	cbz	x2, 1e154 <printf_parse@@Base+0xd24>
   1e150:	str	x1, [x2]
   1e154:	ldr	x2, [x0, #224]
   1e158:	ldr	x1, [x1, #40]
   1e15c:	ldr	x1, [x2, x1, lsl #3]
   1e160:	str	x1, [x2, x3, lsl #3]
   1e164:	cmp	x3, #0x3f
   1e168:	b.gt	1e0f4 <printf_parse@@Base+0xcc4>
   1e16c:	mov	x1, #0x1                   	// #1
   1e170:	lsl	x1, x1, x3
   1e174:	ldr	x2, [x0, #160]
   1e178:	bic	x1, x2, x1
   1e17c:	str	x1, [x0, #160]
   1e180:	b	1e0f4 <printf_parse@@Base+0xcc4>
   1e184:	ldrb	w0, [x1, #48]
   1e188:	cmp	w0, #0xb
   1e18c:	b.eq	1e1bc <printf_parse@@Base+0xd8c>  // b.none
   1e190:	cmp	w0, #0x10
   1e194:	b.eq	1e1cc <printf_parse@@Base+0xd9c>  // b.none
   1e198:	ldr	x0, [x1, #8]
   1e19c:	cbz	x0, 1e1a8 <printf_parse@@Base+0xd78>
   1e1a0:	ldr	x2, [x1, #32]
   1e1a4:	str	x2, [x0, #32]
   1e1a8:	ldr	x0, [x1, #16]
   1e1ac:	cbz	x0, 1e1c4 <printf_parse@@Base+0xd94>
   1e1b0:	ldr	x1, [x1, #32]
   1e1b4:	str	x1, [x0, #32]
   1e1b8:	b	1e1c4 <printf_parse@@Base+0xd94>
   1e1bc:	ldr	x0, [x1, #8]
   1e1c0:	str	x1, [x0, #32]
   1e1c4:	mov	w0, #0x0                   	// #0
   1e1c8:	ret
   1e1cc:	ldr	x0, [x1, #8]
   1e1d0:	ldr	x2, [x1, #16]
   1e1d4:	ldr	x2, [x2, #24]
   1e1d8:	str	x2, [x0, #32]
   1e1dc:	ldr	x0, [x1, #16]
   1e1e0:	ldr	x1, [x1, #32]
   1e1e4:	str	x1, [x0, #32]
   1e1e8:	b	1e1c4 <printf_parse@@Base+0xd94>
   1e1ec:	ldr	x3, [x1, #72]
   1e1f0:	ldr	x4, [x1, #104]
   1e1f4:	cmp	x4, x3
   1e1f8:	b.le	1e264 <printf_parse@@Base+0xe34>
   1e1fc:	ldr	x4, [x1, #8]
   1e200:	ldrb	w3, [x4, x3]
   1e204:	strb	w3, [x0]
   1e208:	ldr	w4, [x1, #144]
   1e20c:	cmp	w4, #0x1
   1e210:	b.le	1e234 <printf_parse@@Base+0xe04>
   1e214:	ldr	x4, [x1, #72]
   1e218:	ldr	x5, [x1, #48]
   1e21c:	cmp	x4, x5
   1e220:	b.eq	1e234 <printf_parse@@Base+0xe04>  // b.none
   1e224:	ldr	x5, [x1, #16]
   1e228:	ldr	w4, [x5, x4, lsl #2]
   1e22c:	cmn	w4, #0x1
   1e230:	b.eq	1e274 <printf_parse@@Base+0xe44>  // b.none
   1e234:	cmp	w3, #0x5c
   1e238:	b.eq	1e284 <printf_parse@@Base+0xe54>  // b.none
   1e23c:	cmp	w3, #0x5b
   1e240:	b.eq	1e2cc <printf_parse@@Base+0xe9c>  // b.none
   1e244:	cmp	w3, #0x5d
   1e248:	b.eq	1e36c <printf_parse@@Base+0xf3c>  // b.none
   1e24c:	cmp	w3, #0x5e
   1e250:	b.ne	1e354 <printf_parse@@Base+0xf24>  // b.any
   1e254:	mov	w1, #0x19                  	// #25
   1e258:	strb	w1, [x0, #8]
   1e25c:	mov	w0, #0x1                   	// #1
   1e260:	b	1e270 <printf_parse@@Base+0xe40>
   1e264:	mov	w1, #0x2                   	// #2
   1e268:	strb	w1, [x0, #8]
   1e26c:	mov	w0, #0x0                   	// #0
   1e270:	ret
   1e274:	mov	w1, #0x1                   	// #1
   1e278:	strb	w1, [x0, #8]
   1e27c:	mov	w0, #0x1                   	// #1
   1e280:	b	1e270 <printf_parse@@Base+0xe40>
   1e284:	tbz	w2, #0, 1e29c <printf_parse@@Base+0xe6c>
   1e288:	ldr	x2, [x1, #72]
   1e28c:	add	x2, x2, #0x1
   1e290:	ldr	x3, [x1, #88]
   1e294:	cmp	x2, x3
   1e298:	b.lt	1e2ac <printf_parse@@Base+0xe7c>  // b.tstop
   1e29c:	mov	w1, #0x1                   	// #1
   1e2a0:	strb	w1, [x0, #8]
   1e2a4:	mov	w0, #0x1                   	// #1
   1e2a8:	b	1e270 <printf_parse@@Base+0xe40>
   1e2ac:	str	x2, [x1, #72]
   1e2b0:	ldr	x1, [x1, #8]
   1e2b4:	ldrb	w1, [x1, x2]
   1e2b8:	strb	w1, [x0]
   1e2bc:	mov	w1, #0x1                   	// #1
   1e2c0:	strb	w1, [x0, #8]
   1e2c4:	mov	w0, #0x1                   	// #1
   1e2c8:	b	1e270 <printf_parse@@Base+0xe40>
   1e2cc:	ldr	x3, [x1, #72]
   1e2d0:	add	x5, x3, #0x1
   1e2d4:	ldr	x4, [x1, #88]
   1e2d8:	cmp	x5, x4
   1e2dc:	b.ge	1e308 <printf_parse@@Base+0xed8>  // b.tcont
   1e2e0:	ldr	x1, [x1, #8]
   1e2e4:	add	x3, x1, x3
   1e2e8:	ldrb	w1, [x3, #1]
   1e2ec:	strb	w1, [x0]
   1e2f0:	cmp	w1, #0x3a
   1e2f4:	b.eq	1e340 <printf_parse@@Base+0xf10>  // b.none
   1e2f8:	cmp	w1, #0x3d
   1e2fc:	b.eq	1e330 <printf_parse@@Base+0xf00>  // b.none
   1e300:	cmp	w1, #0x2e
   1e304:	b.eq	1e320 <printf_parse@@Base+0xef0>  // b.none
   1e308:	mov	w1, #0x1                   	// #1
   1e30c:	strb	w1, [x0, #8]
   1e310:	mov	w1, #0x5b                  	// #91
   1e314:	strb	w1, [x0]
   1e318:	mov	w0, #0x1                   	// #1
   1e31c:	b	1e270 <printf_parse@@Base+0xe40>
   1e320:	mov	w1, #0x1a                  	// #26
   1e324:	strb	w1, [x0, #8]
   1e328:	mov	w0, #0x2                   	// #2
   1e32c:	b	1e270 <printf_parse@@Base+0xe40>
   1e330:	mov	w1, #0x1c                  	// #28
   1e334:	strb	w1, [x0, #8]
   1e338:	mov	w0, #0x2                   	// #2
   1e33c:	b	1e270 <printf_parse@@Base+0xe40>
   1e340:	tbz	w2, #2, 1e308 <printf_parse@@Base+0xed8>
   1e344:	mov	w1, #0x1e                  	// #30
   1e348:	strb	w1, [x0, #8]
   1e34c:	mov	w0, #0x2                   	// #2
   1e350:	b	1e270 <printf_parse@@Base+0xe40>
   1e354:	cmp	w3, #0x2d
   1e358:	b.ne	1e29c <printf_parse@@Base+0xe6c>  // b.any
   1e35c:	mov	w1, #0x16                  	// #22
   1e360:	strb	w1, [x0, #8]
   1e364:	mov	w0, #0x1                   	// #1
   1e368:	b	1e270 <printf_parse@@Base+0xe40>
   1e36c:	mov	w1, #0x15                  	// #21
   1e370:	strb	w1, [x0, #8]
   1e374:	mov	w0, #0x1                   	// #1
   1e378:	b	1e270 <printf_parse@@Base+0xe40>
   1e37c:	ldrb	w2, [x1, #48]
   1e380:	cmp	w2, #0x11
   1e384:	b.eq	1e390 <printf_parse@@Base+0xf60>  // b.none
   1e388:	mov	w0, #0x0                   	// #0
   1e38c:	ret
   1e390:	ldr	x2, [x1, #40]
   1e394:	cmp	x0, x2
   1e398:	b.ne	1e388 <printf_parse@@Base+0xf58>  // b.any
   1e39c:	ldrb	w0, [x1, #50]
   1e3a0:	orr	w0, w0, #0x8
   1e3a4:	strb	w0, [x1, #50]
   1e3a8:	b	1e388 <printf_parse@@Base+0xf58>
   1e3ac:	stp	x29, x30, [sp, #-144]!
   1e3b0:	mov	x29, sp
   1e3b4:	stp	x21, x22, [sp, #32]
   1e3b8:	stp	x23, x24, [sp, #48]
   1e3bc:	stp	x27, x28, [sp, #80]
   1e3c0:	mov	x27, x0
   1e3c4:	str	w1, [sp, #104]
   1e3c8:	ldr	x23, [x0, #152]
   1e3cc:	add	x22, x3, x3, lsl #1
   1e3d0:	ldr	x0, [x23, #48]
   1e3d4:	add	x22, x0, x22, lsl #3
   1e3d8:	ldr	x0, [x22, #8]
   1e3dc:	cmp	x0, #0x0
   1e3e0:	b.le	1e570 <printf_parse@@Base+0x1140>
   1e3e4:	stp	x19, x20, [sp, #16]
   1e3e8:	stp	x25, x26, [sp, #64]
   1e3ec:	mov	x24, x2
   1e3f0:	mov	x26, x3
   1e3f4:	mov	x25, x4
   1e3f8:	add	x0, x4, x4, lsl #2
   1e3fc:	lsl	x0, x0, #3
   1e400:	str	x0, [sp, #136]
   1e404:	mov	x0, #0x1                   	// #1
   1e408:	lsl	x0, x0, x2
   1e40c:	str	x0, [sp, #120]
   1e410:	mvn	w0, w0
   1e414:	and	w0, w0, #0xffff
   1e418:	str	w0, [sp, #132]
   1e41c:	mov	x19, #0x0                   	// #0
   1e420:	and	w0, w1, #0x1
   1e424:	str	w0, [sp, #128]
   1e428:	and	w28, w1, #0x2
   1e42c:	b	1e4f4 <printf_parse@@Base+0x10c4>
   1e430:	ldr	x0, [x23, #40]
   1e434:	ldr	x1, [sp, #112]
   1e438:	add	x0, x0, x1
   1e43c:	ldr	x0, [x0, #16]
   1e440:	ldr	x3, [x0]
   1e444:	cmp	x26, x3
   1e448:	b.eq	1e4bc <printf_parse@@Base+0x108c>  // b.none
   1e44c:	mov	x4, x25
   1e450:	mov	x2, x24
   1e454:	ldr	w1, [sp, #104]
   1e458:	mov	x0, x27
   1e45c:	bl	1e3ac <printf_parse@@Base+0xf7c>
   1e460:	cmn	w0, #0x1
   1e464:	b.eq	1e59c <printf_parse@@Base+0x116c>  // b.none
   1e468:	cbnz	w0, 1e470 <printf_parse@@Base+0x1040>
   1e46c:	cbnz	w28, 1e5a8 <printf_parse@@Base+0x1178>
   1e470:	cmp	x24, #0x3f
   1e474:	b.gt	1e488 <printf_parse@@Base+0x1058>
   1e478:	ldrh	w0, [x20, #34]
   1e47c:	ldr	w1, [sp, #132]
   1e480:	and	w0, w1, w0
   1e484:	strh	w0, [x20, #34]
   1e488:	add	x20, x20, #0x28
   1e48c:	ldurb	w0, [x20, #-8]
   1e490:	cbz	w0, 1e4e4 <printf_parse@@Base+0x10b4>
   1e494:	ldr	x0, [x20]
   1e498:	cmp	x0, x21
   1e49c:	b.ne	1e488 <printf_parse@@Base+0x1058>  // b.any
   1e4a0:	cmp	x24, #0x3f
   1e4a4:	b.gt	1e430 <printf_parse@@Base+0x1000>
   1e4a8:	ldrh	w0, [x20, #34]
   1e4ac:	ldr	x1, [sp, #120]
   1e4b0:	tst	x0, x1
   1e4b4:	b.ne	1e430 <printf_parse@@Base+0x1000>  // b.any
   1e4b8:	b	1e488 <printf_parse@@Base+0x1058>
   1e4bc:	ldr	x0, [sp, #104]
   1e4c0:	sbfx	x0, x0, #0, #1
   1e4c4:	ldp	x19, x20, [sp, #16]
   1e4c8:	ldp	x25, x26, [sp, #64]
   1e4cc:	b	1e578 <printf_parse@@Base+0x1148>
   1e4d0:	ldr	w0, [sp, #128]
   1e4d4:	cbz	w0, 1e4e4 <printf_parse@@Base+0x10b4>
   1e4d8:	ldr	x0, [x2, x1]
   1e4dc:	cmp	x0, x24
   1e4e0:	b.eq	1e58c <printf_parse@@Base+0x115c>  // b.none
   1e4e4:	add	x19, x19, #0x1
   1e4e8:	ldr	x0, [x22, #8]
   1e4ec:	cmp	x0, x19
   1e4f0:	b.le	1e568 <printf_parse@@Base+0x1138>
   1e4f4:	ldr	x0, [x22, #16]
   1e4f8:	ldr	x21, [x0, x19, lsl #3]
   1e4fc:	lsl	x1, x21, #4
   1e500:	ldr	x2, [x23]
   1e504:	add	x0, x2, x1
   1e508:	ldrb	w0, [x0, #8]
   1e50c:	cmp	w0, #0x8
   1e510:	b.eq	1e4d0 <printf_parse@@Base+0x10a0>  // b.none
   1e514:	cmp	w0, #0x9
   1e518:	b.eq	1e548 <printf_parse@@Base+0x1118>  // b.none
   1e51c:	cmp	w0, #0x4
   1e520:	b.ne	1e4e4 <printf_parse@@Base+0x10b4>  // b.any
   1e524:	cmn	x25, #0x1
   1e528:	b.eq	1e4e4 <printf_parse@@Base+0x10b4>  // b.none
   1e52c:	ldr	x20, [x27, #216]
   1e530:	ldr	x0, [sp, #136]
   1e534:	add	x20, x20, x0
   1e538:	add	x0, x21, x21, lsl #1
   1e53c:	lsl	x0, x0, #3
   1e540:	str	x0, [sp, #112]
   1e544:	b	1e494 <printf_parse@@Base+0x1064>
   1e548:	cbz	w28, 1e4e4 <printf_parse@@Base+0x10b4>
   1e54c:	ldr	x0, [x2, x1]
   1e550:	cmp	x0, x24
   1e554:	b.ne	1e4e4 <printf_parse@@Base+0x10b4>  // b.any
   1e558:	mov	w0, #0x0                   	// #0
   1e55c:	ldp	x19, x20, [sp, #16]
   1e560:	ldp	x25, x26, [sp, #64]
   1e564:	b	1e578 <printf_parse@@Base+0x1148>
   1e568:	ldp	x19, x20, [sp, #16]
   1e56c:	ldp	x25, x26, [sp, #64]
   1e570:	ldr	x0, [sp, #104]
   1e574:	ubfx	x0, x0, #1, #1
   1e578:	ldp	x21, x22, [sp, #32]
   1e57c:	ldp	x23, x24, [sp, #48]
   1e580:	ldp	x27, x28, [sp, #80]
   1e584:	ldp	x29, x30, [sp], #144
   1e588:	ret
   1e58c:	mov	w0, #0xffffffff            	// #-1
   1e590:	ldp	x19, x20, [sp, #16]
   1e594:	ldp	x25, x26, [sp, #64]
   1e598:	b	1e578 <printf_parse@@Base+0x1148>
   1e59c:	ldp	x19, x20, [sp, #16]
   1e5a0:	ldp	x25, x26, [sp, #64]
   1e5a4:	b	1e578 <printf_parse@@Base+0x1148>
   1e5a8:	ldp	x19, x20, [sp, #16]
   1e5ac:	ldp	x25, x26, [sp, #64]
   1e5b0:	b	1e578 <printf_parse@@Base+0x1148>
   1e5b4:	mov	x7, x0
   1e5b8:	mov	x6, x4
   1e5bc:	add	x1, x1, x1, lsl #2
   1e5c0:	ldr	x0, [x0, #216]
   1e5c4:	add	x1, x0, x1, lsl #3
   1e5c8:	ldr	x4, [x1, #16]
   1e5cc:	cmp	x4, x6
   1e5d0:	b.gt	1e604 <printf_parse@@Base+0x11d4>
   1e5d4:	ldr	x8, [x1, #24]
   1e5d8:	mov	w0, #0x1                   	// #1
   1e5dc:	cmp	x8, x6
   1e5e0:	b.lt	1e600 <printf_parse@@Base+0x11d0>  // b.tstop
   1e5e4:	cmp	x4, x6
   1e5e8:	cset	w1, eq  // eq = none
   1e5ec:	cmp	x8, x6
   1e5f0:	b.eq	1e60c <printf_parse@@Base+0x11dc>  // b.none
   1e5f4:	mov	w0, #0x0                   	// #0
   1e5f8:	cmp	x4, x6
   1e5fc:	b.eq	1e610 <printf_parse@@Base+0x11e0>  // b.none
   1e600:	ret
   1e604:	mov	w0, #0xffffffff            	// #-1
   1e608:	ret
   1e60c:	orr	w1, w1, #0x2
   1e610:	stp	x29, x30, [sp, #-16]!
   1e614:	mov	x29, sp
   1e618:	mov	x4, x5
   1e61c:	mov	x0, x7
   1e620:	bl	1e3ac <printf_parse@@Base+0xf7c>
   1e624:	ldp	x29, x30, [sp], #16
   1e628:	ret
   1e62c:	mov	x6, x0
   1e630:	ldr	x7, [x0, #200]
   1e634:	mov	x4, x7
   1e638:	mov	x0, #0x0                   	// #0
   1e63c:	cmp	x4, x0
   1e640:	b.le	1e678 <printf_parse@@Base+0x1248>
   1e644:	add	x2, x4, x0
   1e648:	add	x2, x2, x2, lsr #63
   1e64c:	asr	x2, x2, #1
   1e650:	ldr	x5, [x6, #216]
   1e654:	add	x3, x2, x2, lsl #2
   1e658:	add	x3, x5, x3, lsl #3
   1e65c:	ldr	x3, [x3, #8]
   1e660:	cmp	x3, x1
   1e664:	b.lt	1e670 <printf_parse@@Base+0x1240>  // b.tstop
   1e668:	mov	x4, x2
   1e66c:	b	1e63c <printf_parse@@Base+0x120c>
   1e670:	add	x0, x2, #0x1
   1e674:	b	1e63c <printf_parse@@Base+0x120c>
   1e678:	cmp	x7, x0
   1e67c:	b.le	1e69c <printf_parse@@Base+0x126c>
   1e680:	ldr	x3, [x6, #216]
   1e684:	add	x2, x0, x0, lsl #2
   1e688:	add	x2, x3, x2, lsl #3
   1e68c:	ldr	x2, [x2, #8]
   1e690:	cmp	x2, x1
   1e694:	csinv	x0, x0, xzr, eq  // eq = none
   1e698:	ret
   1e69c:	mov	x0, #0xffffffffffffffff    	// #-1
   1e6a0:	b	1e698 <printf_parse@@Base+0x1268>
   1e6a4:	stp	x29, x30, [sp, #-112]!
   1e6a8:	mov	x29, sp
   1e6ac:	stp	x19, x20, [sp, #16]
   1e6b0:	stp	x21, x22, [sp, #32]
   1e6b4:	stp	x23, x24, [sp, #48]
   1e6b8:	stp	x25, x26, [sp, #64]
   1e6bc:	stp	x27, x28, [sp, #80]
   1e6c0:	mov	x19, x0
   1e6c4:	mov	x20, x1
   1e6c8:	mov	x25, x2
   1e6cc:	mov	x22, x3
   1e6d0:	mov	x26, x4
   1e6d4:	mov	x23, x5
   1e6d8:	ldr	x28, [x0, #152]
   1e6dc:	mov	x1, x3
   1e6e0:	bl	1e62c <printf_parse@@Base+0x11fc>
   1e6e4:	str	x0, [sp, #96]
   1e6e8:	mov	x1, x23
   1e6ec:	mov	x0, x19
   1e6f0:	bl	1e62c <printf_parse@@Base+0x11fc>
   1e6f4:	str	x0, [sp, #104]
   1e6f8:	ldr	x0, [x20, #8]
   1e6fc:	cmp	x0, #0x0
   1e700:	b.le	1e7a4 <printf_parse@@Base+0x1374>
   1e704:	mov	x24, #0x0                   	// #0
   1e708:	ldr	x0, [x20, #16]
   1e70c:	ldr	x1, [x0, x24, lsl #3]
   1e710:	ldr	x0, [x19, #216]
   1e714:	add	x2, x1, x1, lsl #2
   1e718:	ldr	x0, [x0, x2, lsl #3]
   1e71c:	ldr	x2, [x28]
   1e720:	lsl	x0, x0, #4
   1e724:	ldr	x27, [x2, x0]
   1e728:	ldr	x5, [sp, #96]
   1e72c:	mov	x4, x22
   1e730:	mov	x3, x25
   1e734:	mov	x2, x27
   1e738:	mov	x0, x19
   1e73c:	bl	1e5b4 <printf_parse@@Base+0x1184>
   1e740:	mov	w21, w0
   1e744:	ldr	x0, [x20, #16]
   1e748:	ldr	x5, [sp, #104]
   1e74c:	mov	x4, x23
   1e750:	mov	x3, x26
   1e754:	mov	x2, x27
   1e758:	ldr	x1, [x0, x24, lsl #3]
   1e75c:	mov	x0, x19
   1e760:	bl	1e5b4 <printf_parse@@Base+0x1184>
   1e764:	cmp	w21, w0
   1e768:	b.eq	1e78c <printf_parse@@Base+0x135c>  // b.none
   1e76c:	mov	w0, #0x1                   	// #1
   1e770:	ldp	x19, x20, [sp, #16]
   1e774:	ldp	x21, x22, [sp, #32]
   1e778:	ldp	x23, x24, [sp, #48]
   1e77c:	ldp	x25, x26, [sp, #64]
   1e780:	ldp	x27, x28, [sp, #80]
   1e784:	ldp	x29, x30, [sp], #112
   1e788:	ret
   1e78c:	add	x24, x24, #0x1
   1e790:	ldr	x0, [x20, #8]
   1e794:	cmp	x0, x24
   1e798:	b.gt	1e708 <printf_parse@@Base+0x12d8>
   1e79c:	mov	w0, #0x0                   	// #0
   1e7a0:	b	1e770 <printf_parse@@Base+0x1340>
   1e7a4:	mov	w0, #0x0                   	// #0
   1e7a8:	b	1e770 <printf_parse@@Base+0x1340>
   1e7ac:	stp	x29, x30, [sp, #-96]!
   1e7b0:	mov	x29, sp
   1e7b4:	stp	x19, x20, [sp, #16]
   1e7b8:	stp	x21, x22, [sp, #32]
   1e7bc:	stp	x23, x24, [sp, #48]
   1e7c0:	stp	x25, x26, [sp, #64]
   1e7c4:	mov	x20, x0
   1e7c8:	mov	x19, x1
   1e7cc:	mov	x23, x2
   1e7d0:	mov	w22, w3
   1e7d4:	mov	x24, x5
   1e7d8:	and	w26, w6, #0xff
   1e7dc:	ldr	x25, [x1, #72]
   1e7e0:	mov	x1, x25
   1e7e4:	mov	x0, x19
   1e7e8:	bl	1df08 <printf_parse@@Base+0xad8>
   1e7ec:	cmp	w0, #0x1
   1e7f0:	b.gt	1e834 <printf_parse@@Base+0x1404>
   1e7f4:	add	x3, x25, w22, sxtw
   1e7f8:	str	x3, [x19, #72]
   1e7fc:	ldrb	w1, [x23, #8]
   1e800:	and	w0, w1, #0xfffffffb
   1e804:	and	w0, w0, #0xff
   1e808:	cmp	w0, #0x1a
   1e80c:	ccmp	w1, #0x1c, #0x4, ne  // ne = any
   1e810:	b.eq	1e878 <printf_parse@@Base+0x1448>  // b.none
   1e814:	cmp	w26, #0x0
   1e818:	ccmp	w1, #0x16, #0x0, eq  // eq = none
   1e81c:	b.eq	1ea1c <printf_parse@@Base+0x15ec>  // b.none
   1e820:	str	wzr, [x20]
   1e824:	ldrb	w0, [x23]
   1e828:	strb	w0, [x20, #8]
   1e82c:	mov	w0, #0x0                   	// #0
   1e830:	b	1e860 <printf_parse@@Base+0x1430>
   1e834:	mov	w21, w0
   1e838:	mov	w0, #0x1                   	// #1
   1e83c:	str	w0, [x20]
   1e840:	ldr	x1, [x19, #72]
   1e844:	mov	x0, x19
   1e848:	bl	1df58 <printf_parse@@Base+0xb28>
   1e84c:	str	w0, [x20, #8]
   1e850:	ldr	x0, [x19, #72]
   1e854:	add	x21, x0, w21, sxtw
   1e858:	str	x21, [x19, #72]
   1e85c:	mov	w0, #0x0                   	// #0
   1e860:	ldp	x19, x20, [sp, #16]
   1e864:	ldp	x21, x22, [sp, #32]
   1e868:	ldp	x23, x24, [sp, #48]
   1e86c:	ldp	x25, x26, [sp, #64]
   1e870:	ldp	x29, x30, [sp], #96
   1e874:	ret
   1e878:	ldr	x1, [x19, #104]
   1e87c:	mov	w0, #0x7                   	// #7
   1e880:	cmp	x3, x1
   1e884:	b.ge	1e860 <printf_parse@@Base+0x1430>  // b.tcont
   1e888:	ldrb	w24, [x23]
   1e88c:	mov	x21, #0x0                   	// #0
   1e890:	b	1e970 <printf_parse@@Base+0x1540>
   1e894:	ldrb	w0, [x19, #139]
   1e898:	cbnz	w0, 1e8b4 <printf_parse@@Base+0x1484>
   1e89c:	ldr	x1, [x19, #8]
   1e8a0:	ldr	x0, [x19, #72]
   1e8a4:	add	x2, x0, #0x1
   1e8a8:	str	x2, [x19, #72]
   1e8ac:	ldrb	w22, [x1, x0]
   1e8b0:	b	1e994 <printf_parse@@Base+0x1564>
   1e8b4:	ldrb	w0, [x19, #140]
   1e8b8:	cbz	w0, 1e93c <printf_parse@@Base+0x150c>
   1e8bc:	ldr	x26, [x19, #72]
   1e8c0:	ldr	x0, [x19, #48]
   1e8c4:	cmp	x26, x0
   1e8c8:	b.eq	1e8dc <printf_parse@@Base+0x14ac>  // b.none
   1e8cc:	ldr	x0, [x19, #16]
   1e8d0:	ldr	w0, [x0, x26, lsl #2]
   1e8d4:	cmn	w0, #0x1
   1e8d8:	b.eq	1e910 <printf_parse@@Base+0x14e0>  // b.none
   1e8dc:	ldr	x1, [x19, #24]
   1e8e0:	ldr	x0, [x19]
   1e8e4:	ldr	x2, [x1, x26, lsl #3]
   1e8e8:	ldr	x1, [x19, #40]
   1e8ec:	add	x0, x0, x2
   1e8f0:	ldrb	w22, [x0, x1]
   1e8f4:	tst	w22, #0xffffff80
   1e8f8:	b.eq	1e924 <printf_parse@@Base+0x14f4>  // b.none
   1e8fc:	ldr	x0, [x19, #8]
   1e900:	add	x1, x26, #0x1
   1e904:	str	x1, [x19, #72]
   1e908:	ldrb	w22, [x0, x26]
   1e90c:	b	1e994 <printf_parse@@Base+0x1564>
   1e910:	ldr	x0, [x19, #8]
   1e914:	add	x1, x26, #0x1
   1e918:	str	x1, [x19, #72]
   1e91c:	ldrb	w22, [x0, x26]
   1e920:	b	1e994 <printf_parse@@Base+0x1564>
   1e924:	mov	x1, x26
   1e928:	mov	x0, x19
   1e92c:	bl	1df08 <printf_parse@@Base+0xad8>
   1e930:	add	x26, x26, w0, sxtw
   1e934:	str	x26, [x19, #72]
   1e938:	b	1e994 <printf_parse@@Base+0x1564>
   1e93c:	ldr	x0, [x19]
   1e940:	ldr	x2, [x19, #40]
   1e944:	ldr	x1, [x19, #72]
   1e948:	add	x3, x1, #0x1
   1e94c:	str	x3, [x19, #72]
   1e950:	add	x0, x0, x2
   1e954:	ldrb	w22, [x0, x1]
   1e958:	b	1e994 <printf_parse@@Base+0x1564>
   1e95c:	ldr	x0, [x20, #8]
   1e960:	strb	w22, [x0, x21]
   1e964:	add	x21, x21, #0x1
   1e968:	cmp	x21, #0x20
   1e96c:	b.eq	1ea48 <printf_parse@@Base+0x1618>  // b.none
   1e970:	mov	w25, w21
   1e974:	ldrb	w0, [x23, #8]
   1e978:	cmp	w0, #0x1e
   1e97c:	b.eq	1e894 <printf_parse@@Base+0x1464>  // b.none
   1e980:	ldr	x1, [x19, #8]
   1e984:	ldr	x0, [x19, #72]
   1e988:	add	x2, x0, #0x1
   1e98c:	str	x2, [x19, #72]
   1e990:	ldrb	w22, [x1, x0]
   1e994:	ldr	x0, [x19, #72]
   1e998:	ldr	x1, [x19, #104]
   1e99c:	cmp	x1, x0
   1e9a0:	b.le	1ea40 <printf_parse@@Base+0x1610>
   1e9a4:	cmp	w24, w22
   1e9a8:	b.ne	1e95c <printf_parse@@Base+0x152c>  // b.any
   1e9ac:	ldr	x1, [x19, #8]
   1e9b0:	ldrb	w1, [x1, x0]
   1e9b4:	cmp	w1, #0x5d
   1e9b8:	b.ne	1e95c <printf_parse@@Base+0x152c>  // b.any
   1e9bc:	add	x0, x0, #0x1
   1e9c0:	str	x0, [x19, #72]
   1e9c4:	ldr	x0, [x20, #8]
   1e9c8:	strb	wzr, [x0, w25, sxtw]
   1e9cc:	ldrb	w1, [x23, #8]
   1e9d0:	cmp	w1, #0x1c
   1e9d4:	b.eq	1e9fc <printf_parse@@Base+0x15cc>  // b.none
   1e9d8:	cmp	w1, #0x1e
   1e9dc:	b.eq	1ea0c <printf_parse@@Base+0x15dc>  // b.none
   1e9e0:	mov	w0, #0x0                   	// #0
   1e9e4:	cmp	w1, #0x1a
   1e9e8:	b.ne	1e860 <printf_parse@@Base+0x1430>  // b.any
   1e9ec:	mov	w0, #0x3                   	// #3
   1e9f0:	str	w0, [x20]
   1e9f4:	mov	w0, #0x0                   	// #0
   1e9f8:	b	1e860 <printf_parse@@Base+0x1430>
   1e9fc:	mov	w0, #0x2                   	// #2
   1ea00:	str	w0, [x20]
   1ea04:	mov	w0, #0x0                   	// #0
   1ea08:	b	1e860 <printf_parse@@Base+0x1430>
   1ea0c:	mov	w0, #0x4                   	// #4
   1ea10:	str	w0, [x20]
   1ea14:	mov	w0, #0x0                   	// #0
   1ea18:	b	1e860 <printf_parse@@Base+0x1430>
   1ea1c:	mov	x2, x24
   1ea20:	mov	x1, x19
   1ea24:	add	x0, sp, #0x50
   1ea28:	bl	1e1ec <printf_parse@@Base+0xdbc>
   1ea2c:	ldrb	w0, [sp, #88]
   1ea30:	cmp	w0, #0x15
   1ea34:	b.eq	1e820 <printf_parse@@Base+0x13f0>  // b.none
   1ea38:	mov	w0, #0xb                   	// #11
   1ea3c:	b	1e860 <printf_parse@@Base+0x1430>
   1ea40:	mov	w0, #0x7                   	// #7
   1ea44:	b	1e860 <printf_parse@@Base+0x1430>
   1ea48:	mov	w0, #0x7                   	// #7
   1ea4c:	b	1e860 <printf_parse@@Base+0x1430>
   1ea50:	stp	x29, x30, [sp, #-48]!
   1ea54:	mov	x29, sp
   1ea58:	stp	x19, x20, [sp, #16]
   1ea5c:	str	x21, [sp, #32]
   1ea60:	mov	x19, x0
   1ea64:	mov	x21, x1
   1ea68:	mov	x20, x2
   1ea6c:	b	1eaa0 <printf_parse@@Base+0x1670>
   1ea70:	mov	x19, x4
   1ea74:	mov	x1, x19
   1ea78:	mov	x0, x20
   1ea7c:	blr	x21
   1ea80:	cbnz	w0, 1eab4 <printf_parse@@Base+0x1684>
   1ea84:	ldr	x4, [x19]
   1ea88:	cbz	x4, 1eab4 <printf_parse@@Base+0x1684>
   1ea8c:	ldr	x3, [x4, #16]
   1ea90:	cmp	x3, #0x0
   1ea94:	ccmp	x3, x19, #0x4, ne  // ne = any
   1ea98:	b.eq	1ea70 <printf_parse@@Base+0x1640>  // b.none
   1ea9c:	mov	x19, x3
   1eaa0:	ldr	x3, [x19, #8]
   1eaa4:	cbnz	x3, 1ea9c <printf_parse@@Base+0x166c>
   1eaa8:	ldr	x3, [x19, #16]
   1eaac:	cbnz	x3, 1ea9c <printf_parse@@Base+0x166c>
   1eab0:	b	1ea74 <printf_parse@@Base+0x1644>
   1eab4:	ldp	x19, x20, [sp, #16]
   1eab8:	ldr	x21, [sp, #32]
   1eabc:	ldp	x29, x30, [sp], #48
   1eac0:	ret
   1eac4:	stp	x29, x30, [sp, #-48]!
   1eac8:	mov	x29, sp
   1eacc:	stp	x19, x20, [sp, #16]
   1ead0:	str	x21, [sp, #32]
   1ead4:	mov	x19, x0
   1ead8:	mov	x21, x1
   1eadc:	mov	x20, x2
   1eae0:	b	1eaec <printf_parse@@Base+0x16bc>
   1eae4:	mov	x3, x4
   1eae8:	mov	x19, x3
   1eaec:	mov	x1, x19
   1eaf0:	mov	x0, x20
   1eaf4:	blr	x21
   1eaf8:	cbnz	w0, 1eb28 <printf_parse@@Base+0x16f8>
   1eafc:	ldr	x3, [x19, #8]
   1eb00:	cbnz	x3, 1eae8 <printf_parse@@Base+0x16b8>
   1eb04:	ldr	x4, [x19, #16]
   1eb08:	cmp	x4, #0x0
   1eb0c:	ccmp	x4, x3, #0x4, ne  // ne = any
   1eb10:	b.ne	1eae4 <printf_parse@@Base+0x16b4>  // b.any
   1eb14:	ldr	x4, [x19]
   1eb18:	mov	x3, x19
   1eb1c:	cbz	x4, 1eb28 <printf_parse@@Base+0x16f8>
   1eb20:	mov	x19, x4
   1eb24:	b	1eb04 <printf_parse@@Base+0x16d4>
   1eb28:	ldp	x19, x20, [sp, #16]
   1eb2c:	ldr	x21, [sp, #32]
   1eb30:	ldp	x29, x30, [sp], #48
   1eb34:	ret
   1eb38:	stp	x29, x30, [sp, #-32]!
   1eb3c:	mov	x29, sp
   1eb40:	stp	x19, x20, [sp, #16]
   1eb44:	mov	x19, x0
   1eb48:	mov	x20, x1
   1eb4c:	ldr	w0, [x0, #144]
   1eb50:	cmp	w0, #0x1
   1eb54:	b.le	1eb90 <printf_parse@@Base+0x1760>
   1eb58:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   1eb5c:	cmp	x1, x0
   1eb60:	b.hi	1ebc4 <printf_parse@@Base+0x1794>  // b.pmore
   1eb64:	lsl	x1, x1, #2
   1eb68:	ldr	x0, [x19, #16]
   1eb6c:	bl	a7e0 <realloc@plt>
   1eb70:	cbz	x0, 1ebcc <printf_parse@@Base+0x179c>
   1eb74:	str	x0, [x19, #16]
   1eb78:	ldr	x0, [x19, #24]
   1eb7c:	cbz	x0, 1eb90 <printf_parse@@Base+0x1760>
   1eb80:	lsl	x1, x20, #3
   1eb84:	bl	a7e0 <realloc@plt>
   1eb88:	cbz	x0, 1ebd4 <printf_parse@@Base+0x17a4>
   1eb8c:	str	x0, [x19, #24]
   1eb90:	ldrb	w0, [x19, #139]
   1eb94:	cbnz	w0, 1ebac <printf_parse@@Base+0x177c>
   1eb98:	str	x20, [x19, #64]
   1eb9c:	mov	w0, #0x0                   	// #0
   1eba0:	ldp	x19, x20, [sp, #16]
   1eba4:	ldp	x29, x30, [sp], #32
   1eba8:	ret
   1ebac:	mov	x1, x20
   1ebb0:	ldr	x0, [x19, #8]
   1ebb4:	bl	a7e0 <realloc@plt>
   1ebb8:	cbz	x0, 1ebdc <printf_parse@@Base+0x17ac>
   1ebbc:	str	x0, [x19, #8]
   1ebc0:	b	1eb98 <printf_parse@@Base+0x1768>
   1ebc4:	mov	w0, #0xc                   	// #12
   1ebc8:	b	1eba0 <printf_parse@@Base+0x1770>
   1ebcc:	mov	w0, #0xc                   	// #12
   1ebd0:	b	1eba0 <printf_parse@@Base+0x1770>
   1ebd4:	mov	w0, #0xc                   	// #12
   1ebd8:	b	1eba0 <printf_parse@@Base+0x1770>
   1ebdc:	mov	w0, #0xc                   	// #12
   1ebe0:	b	1eba0 <printf_parse@@Base+0x1770>
   1ebe4:	stp	x29, x30, [sp, #-32]!
   1ebe8:	mov	x29, sp
   1ebec:	stp	x19, x20, [sp, #16]
   1ebf0:	mov	x19, x0
   1ebf4:	mov	x20, x1
   1ebf8:	ldr	x0, [x0]
   1ebfc:	ldr	x2, [x19, #8]
   1ec00:	cmp	x0, x2
   1ec04:	b.eq	1ec2c <printf_parse@@Base+0x17fc>  // b.none
   1ec08:	ldr	x1, [x19, #16]
   1ec0c:	ldr	x0, [x19, #8]
   1ec10:	add	x2, x0, #0x1
   1ec14:	str	x2, [x19, #8]
   1ec18:	str	x20, [x1, x0, lsl #3]
   1ec1c:	mov	w0, #0x1                   	// #1
   1ec20:	ldp	x19, x20, [sp, #16]
   1ec24:	ldp	x29, x30, [sp], #32
   1ec28:	ret
   1ec2c:	add	x0, x0, #0x1
   1ec30:	lsl	x1, x0, #1
   1ec34:	str	x1, [x19]
   1ec38:	lsl	x1, x0, #4
   1ec3c:	ldr	x0, [x19, #16]
   1ec40:	bl	a7e0 <realloc@plt>
   1ec44:	cbz	x0, 1ec50 <printf_parse@@Base+0x1820>
   1ec48:	str	x0, [x19, #16]
   1ec4c:	b	1ec08 <printf_parse@@Base+0x17d8>
   1ec50:	mov	w0, #0x0                   	// #0
   1ec54:	b	1ec20 <printf_parse@@Base+0x17f0>
   1ec58:	stp	x29, x30, [sp, #-48]!
   1ec5c:	mov	x29, sp
   1ec60:	stp	x19, x20, [sp, #16]
   1ec64:	stp	x21, x22, [sp, #32]
   1ec68:	mov	x19, x0
   1ec6c:	mov	x21, x1
   1ec70:	mov	x20, x2
   1ec74:	mov	x22, x3
   1ec78:	ldr	w0, [x0, #128]
   1ec7c:	cmp	w0, #0xf
   1ec80:	b.eq	1ecf4 <printf_parse@@Base+0x18c4>  // b.none
   1ec84:	ldr	x4, [x19, #112]
   1ec88:	ldr	w5, [x19, #128]
   1ec8c:	add	w0, w5, #0x1
   1ec90:	str	w0, [x19, #128]
   1ec94:	sbfiz	x5, x5, #6, #32
   1ec98:	add	x0, x5, #0x8
   1ec9c:	add	x0, x4, x0
   1eca0:	add	x4, x4, x5
   1eca4:	str	xzr, [x4, #8]
   1eca8:	str	x21, [x4, #16]
   1ecac:	str	x20, [x4, #24]
   1ecb0:	ldp	x2, x3, [x22]
   1ecb4:	stp	x2, x3, [x4, #48]
   1ecb8:	ldrb	w1, [x4, #58]
   1ecbc:	and	w1, w1, #0xfffffff3
   1ecc0:	strb	w1, [x4, #58]
   1ecc4:	str	xzr, [x4, #32]
   1ecc8:	str	xzr, [x4, #40]
   1eccc:	mov	x1, #0xffffffffffffffff    	// #-1
   1ecd0:	str	x1, [x4, #64]
   1ecd4:	cbz	x21, 1ecdc <printf_parse@@Base+0x18ac>
   1ecd8:	str	x0, [x21]
   1ecdc:	cbz	x20, 1ece4 <printf_parse@@Base+0x18b4>
   1ece0:	str	x0, [x20]
   1ece4:	ldp	x19, x20, [sp, #16]
   1ece8:	ldp	x21, x22, [sp, #32]
   1ecec:	ldp	x29, x30, [sp], #48
   1ecf0:	ret
   1ecf4:	mov	x0, #0x3c8                 	// #968
   1ecf8:	bl	a5f0 <malloc@plt>
   1ecfc:	cbz	x0, 1ece4 <printf_parse@@Base+0x18b4>
   1ed00:	ldr	x1, [x19, #112]
   1ed04:	str	x1, [x0]
   1ed08:	str	x0, [x19, #112]
   1ed0c:	str	wzr, [x19, #128]
   1ed10:	b	1ec84 <printf_parse@@Base+0x1854>
   1ed14:	stp	x29, x30, [sp, #-64]!
   1ed18:	mov	x29, sp
   1ed1c:	stp	x19, x20, [sp, #16]
   1ed20:	stp	x21, x22, [sp, #32]
   1ed24:	mov	x19, x0
   1ed28:	mov	x22, x1
   1ed2c:	ldr	x20, [x0]
   1ed30:	add	x21, sp, #0x38
   1ed34:	add	x3, x19, #0x28
   1ed38:	mov	x2, #0x0                   	// #0
   1ed3c:	mov	x1, #0x0                   	// #0
   1ed40:	mov	x0, x22
   1ed44:	bl	1ec58 <printf_parse@@Base+0x1828>
   1ed48:	str	x0, [x21]
   1ed4c:	cbz	x0, 1ed80 <printf_parse@@Base+0x1950>
   1ed50:	str	x20, [x0]
   1ed54:	ldr	x1, [x21]
   1ed58:	ldrb	w0, [x1, #50]
   1ed5c:	orr	w0, w0, #0x4
   1ed60:	strb	w0, [x1, #50]
   1ed64:	ldr	x20, [x21]
   1ed68:	ldr	x0, [x19, #8]
   1ed6c:	cbz	x0, 1ed90 <printf_parse@@Base+0x1960>
   1ed70:	add	x21, x20, #0x8
   1ed74:	mov	x19, x0
   1ed78:	b	1ed34 <printf_parse@@Base+0x1904>
   1ed7c:	ldr	x0, [sp, #56]
   1ed80:	ldp	x19, x20, [sp, #16]
   1ed84:	ldp	x21, x22, [sp, #32]
   1ed88:	ldp	x29, x30, [sp], #64
   1ed8c:	ret
   1ed90:	ldr	x2, [x19, #16]
   1ed94:	cmp	x2, #0x0
   1ed98:	ccmp	x2, x0, #0x4, ne  // ne = any
   1ed9c:	b.ne	1edb8 <printf_parse@@Base+0x1988>  // b.any
   1eda0:	ldr	x2, [x19]
   1eda4:	ldr	x20, [x20]
   1eda8:	mov	x0, x19
   1edac:	cbz	x2, 1ed7c <printf_parse@@Base+0x194c>
   1edb0:	mov	x19, x2
   1edb4:	b	1ed90 <printf_parse@@Base+0x1960>
   1edb8:	add	x21, x20, #0x10
   1edbc:	mov	x19, x2
   1edc0:	b	1ed34 <printf_parse@@Base+0x1904>
   1edc4:	stp	x29, x30, [sp, #-32]!
   1edc8:	mov	x29, sp
   1edcc:	strb	w3, [sp, #24]
   1edd0:	add	x3, sp, #0x10
   1edd4:	bl	1ec58 <printf_parse@@Base+0x1828>
   1edd8:	ldp	x29, x30, [sp], #32
   1eddc:	ret
   1ede0:	stp	x29, x30, [sp, #-80]!
   1ede4:	mov	x29, sp
   1ede8:	stp	x19, x20, [sp, #16]
   1edec:	stp	x21, x22, [sp, #32]
   1edf0:	stp	x23, x24, [sp, #48]
   1edf4:	str	x25, [sp, #64]
   1edf8:	mov	x24, x0
   1edfc:	mov	x20, x2
   1ee00:	ldr	x25, [x1]
   1ee04:	ldr	x19, [x2, #8]
   1ee08:	ldrb	w0, [x1, #56]
   1ee0c:	tst	x0, #0x10
   1ee10:	ccmp	x19, #0x0, #0x4, ne  // ne = any
   1ee14:	b.ne	1ee54 <printf_parse@@Base+0x1a24>  // b.any
   1ee18:	mov	w3, #0x8                   	// #8
   1ee1c:	mov	x2, #0x0                   	// #0
   1ee20:	mov	x1, #0x0                   	// #0
   1ee24:	mov	x0, x25
   1ee28:	bl	1edc4 <printf_parse@@Base+0x1994>
   1ee2c:	mov	x21, x0
   1ee30:	mov	w3, #0x9                   	// #9
   1ee34:	mov	x2, #0x0                   	// #0
   1ee38:	mov	x1, #0x0                   	// #0
   1ee3c:	mov	x0, x25
   1ee40:	bl	1edc4 <printf_parse@@Base+0x1994>
   1ee44:	mov	x22, x0
   1ee48:	mov	x23, x0
   1ee4c:	cbz	x19, 1eeb4 <printf_parse@@Base+0x1a84>
   1ee50:	b	1ee9c <printf_parse@@Base+0x1a6c>
   1ee54:	ldr	x0, [x2, #40]
   1ee58:	cmp	x0, #0x3f
   1ee5c:	b.gt	1ef10 <printf_parse@@Base+0x1ae0>
   1ee60:	ldr	x1, [x25, #160]
   1ee64:	lsr	x0, x1, x0
   1ee68:	tbz	w0, #0, 1ef10 <printf_parse@@Base+0x1ae0>
   1ee6c:	mov	w3, #0x8                   	// #8
   1ee70:	mov	x2, #0x0                   	// #0
   1ee74:	mov	x1, #0x0                   	// #0
   1ee78:	mov	x0, x25
   1ee7c:	bl	1edc4 <printf_parse@@Base+0x1994>
   1ee80:	mov	x21, x0
   1ee84:	mov	w3, #0x9                   	// #9
   1ee88:	mov	x2, #0x0                   	// #0
   1ee8c:	mov	x1, #0x0                   	// #0
   1ee90:	mov	x0, x25
   1ee94:	bl	1edc4 <printf_parse@@Base+0x1994>
   1ee98:	mov	x23, x0
   1ee9c:	mov	w3, #0x10                  	// #16
   1eea0:	mov	x2, x23
   1eea4:	mov	x1, x19
   1eea8:	mov	x0, x25
   1eeac:	bl	1edc4 <printf_parse@@Base+0x1994>
   1eeb0:	mov	x22, x0
   1eeb4:	mov	w3, #0x10                  	// #16
   1eeb8:	mov	x2, x22
   1eebc:	mov	x1, x21
   1eec0:	mov	x0, x25
   1eec4:	bl	1edc4 <printf_parse@@Base+0x1994>
   1eec8:	mov	x19, x0
   1eecc:	cmp	x0, #0x0
   1eed0:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   1eed4:	b.eq	1ef2c <printf_parse@@Base+0x1afc>  // b.none
   1eed8:	cmp	x21, #0x0
   1eedc:	ccmp	x23, #0x0, #0x4, ne  // ne = any
   1eee0:	b.eq	1ef2c <printf_parse@@Base+0x1afc>  // b.none
   1eee4:	ldr	x0, [x20, #40]
   1eee8:	str	x0, [x23, #40]
   1eeec:	str	x0, [x21, #40]
   1eef0:	ldrb	w0, [x20, #50]
   1eef4:	ubfx	x0, x0, #3, #1
   1eef8:	ldrb	w1, [x23, #50]
   1eefc:	bfi	w1, w0, #3, #1
   1ef00:	strb	w1, [x23, #50]
   1ef04:	ldrb	w1, [x21, #50]
   1ef08:	bfi	w1, w0, #3, #1
   1ef0c:	strb	w1, [x21, #50]
   1ef10:	mov	x0, x19
   1ef14:	ldp	x19, x20, [sp, #16]
   1ef18:	ldp	x21, x22, [sp, #32]
   1ef1c:	ldp	x23, x24, [sp, #48]
   1ef20:	ldr	x25, [sp, #64]
   1ef24:	ldp	x29, x30, [sp], #80
   1ef28:	ret
   1ef2c:	mov	w0, #0xc                   	// #12
   1ef30:	str	w0, [x24]
   1ef34:	mov	x19, #0x0                   	// #0
   1ef38:	b	1ef10 <printf_parse@@Base+0x1ae0>
   1ef3c:	stp	x29, x30, [sp, #-48]!
   1ef40:	mov	x29, sp
   1ef44:	stp	x19, x20, [sp, #16]
   1ef48:	mov	x20, x0
   1ef4c:	mov	x19, x1
   1ef50:	str	wzr, [sp, #44]
   1ef54:	ldr	x2, [x1, #8]
   1ef58:	cbz	x2, 1ef68 <printf_parse@@Base+0x1b38>
   1ef5c:	ldrb	w0, [x2, #48]
   1ef60:	cmp	w0, #0x11
   1ef64:	b.eq	1ef8c <printf_parse@@Base+0x1b5c>  // b.none
   1ef68:	ldr	x2, [x19, #16]
   1ef6c:	cbz	x2, 1ef7c <printf_parse@@Base+0x1b4c>
   1ef70:	ldrb	w0, [x2, #48]
   1ef74:	cmp	w0, #0x11
   1ef78:	b.eq	1efa8 <printf_parse@@Base+0x1b78>  // b.none
   1ef7c:	ldr	w0, [sp, #44]
   1ef80:	ldp	x19, x20, [sp, #16]
   1ef84:	ldp	x29, x30, [sp], #48
   1ef88:	ret
   1ef8c:	mov	x1, x20
   1ef90:	add	x0, sp, #0x2c
   1ef94:	bl	1ede0 <printf_parse@@Base+0x19b0>
   1ef98:	str	x0, [x19, #8]
   1ef9c:	cbz	x0, 1ef68 <printf_parse@@Base+0x1b38>
   1efa0:	str	x19, [x0]
   1efa4:	b	1ef68 <printf_parse@@Base+0x1b38>
   1efa8:	mov	x1, x20
   1efac:	add	x0, sp, #0x2c
   1efb0:	bl	1ede0 <printf_parse@@Base+0x19b0>
   1efb4:	str	x0, [x19, #16]
   1efb8:	cbz	x0, 1ef7c <printf_parse@@Base+0x1b4c>
   1efbc:	str	x19, [x0]
   1efc0:	b	1ef7c <printf_parse@@Base+0x1b4c>
   1efc4:	stp	x29, x30, [sp, #-32]!
   1efc8:	mov	x29, sp
   1efcc:	stp	x19, x20, [sp, #16]
   1efd0:	mov	x19, x0
   1efd4:	mov	x20, x1
   1efd8:	mov	x0, #0x1                   	// #1
   1efdc:	str	x0, [x19]
   1efe0:	str	x0, [x19, #8]
   1efe4:	mov	x0, #0x8                   	// #8
   1efe8:	bl	a5f0 <malloc@plt>
   1efec:	str	x0, [x19, #16]
   1eff0:	cbz	x0, 1f008 <printf_parse@@Base+0x1bd8>
   1eff4:	str	x20, [x0]
   1eff8:	mov	w0, #0x0                   	// #0
   1effc:	ldp	x19, x20, [sp, #16]
   1f000:	ldp	x29, x30, [sp], #32
   1f004:	ret
   1f008:	str	xzr, [x19, #8]
   1f00c:	str	xzr, [x19]
   1f010:	mov	w0, #0xc                   	// #12
   1f014:	b	1effc <printf_parse@@Base+0x1bcc>
   1f018:	stp	x29, x30, [sp, #-32]!
   1f01c:	mov	x29, sp
   1f020:	stp	x19, x20, [sp, #16]
   1f024:	mov	x19, x0
   1f028:	mov	x20, x1
   1f02c:	ldr	x1, [x0]
   1f030:	cbz	x1, 1f060 <printf_parse@@Base+0x1c30>
   1f034:	ldr	x0, [x0, #8]
   1f038:	cbnz	x0, 1f074 <printf_parse@@Base+0x1c44>
   1f03c:	ldr	x0, [x19, #16]
   1f040:	str	x20, [x0]
   1f044:	ldr	x0, [x19, #8]
   1f048:	add	x0, x0, #0x1
   1f04c:	str	x0, [x19, #8]
   1f050:	mov	w0, #0x1                   	// #1
   1f054:	ldp	x19, x20, [sp, #16]
   1f058:	ldp	x29, x30, [sp], #32
   1f05c:	ret
   1f060:	mov	x1, x20
   1f064:	bl	1efc4 <printf_parse@@Base+0x1b94>
   1f068:	cmp	w0, #0x0
   1f06c:	cset	w0, eq  // eq = none
   1f070:	b	1f054 <printf_parse@@Base+0x1c24>
   1f074:	cmp	x1, x0
   1f078:	b.eq	1f0d4 <printf_parse@@Base+0x1ca4>  // b.none
   1f07c:	ldr	x3, [x19, #16]
   1f080:	ldr	x0, [x3]
   1f084:	cmp	x0, x20
   1f088:	b.le	1f0f4 <printf_parse@@Base+0x1cc4>
   1f08c:	ldr	x0, [x19, #8]
   1f090:	cmp	x0, #0x0
   1f094:	b.le	1f0b8 <printf_parse@@Base+0x1c88>
   1f098:	lsl	x1, x0, #3
   1f09c:	sub	x1, x1, #0x8
   1f0a0:	ldr	x2, [x19, #16]
   1f0a4:	ldr	x3, [x2, x1]
   1f0a8:	str	x3, [x2, x0, lsl #3]
   1f0ac:	sub	x1, x1, #0x8
   1f0b0:	subs	x0, x0, #0x1
   1f0b4:	b.ne	1f0a0 <printf_parse@@Base+0x1c70>  // b.any
   1f0b8:	ldr	x1, [x19, #16]
   1f0bc:	str	x20, [x1, x0, lsl #3]
   1f0c0:	ldr	x0, [x19, #8]
   1f0c4:	add	x0, x0, #0x1
   1f0c8:	str	x0, [x19, #8]
   1f0cc:	mov	w0, #0x1                   	// #1
   1f0d0:	b	1f054 <printf_parse@@Base+0x1c24>
   1f0d4:	lsl	x0, x1, #1
   1f0d8:	str	x0, [x19]
   1f0dc:	lsl	x1, x1, #4
   1f0e0:	ldr	x0, [x19, #16]
   1f0e4:	bl	a7e0 <realloc@plt>
   1f0e8:	cbz	x0, 1f130 <printf_parse@@Base+0x1d00>
   1f0ec:	str	x0, [x19, #16]
   1f0f0:	b	1f07c <printf_parse@@Base+0x1c4c>
   1f0f4:	ldr	x0, [x19, #8]
   1f0f8:	lsl	x2, x0, #3
   1f0fc:	add	x1, x3, x2
   1f100:	ldur	x1, [x1, #-8]
   1f104:	cmp	x20, x1
   1f108:	b.ge	1f0b8 <printf_parse@@Base+0x1c88>  // b.tcont
   1f10c:	str	x1, [x3, x2]
   1f110:	sub	x0, x0, #0x1
   1f114:	ldr	x3, [x19, #16]
   1f118:	add	x1, x3, x2
   1f11c:	sub	x2, x2, #0x8
   1f120:	ldur	x1, [x1, #-16]
   1f124:	cmp	x1, x20
   1f128:	b.gt	1f10c <printf_parse@@Base+0x1cdc>
   1f12c:	b	1f0b8 <printf_parse@@Base+0x1c88>
   1f130:	mov	w0, #0x0                   	// #0
   1f134:	b	1f054 <printf_parse@@Base+0x1c24>
   1f138:	stp	x29, x30, [sp, #-64]!
   1f13c:	mov	x29, sp
   1f140:	stp	x19, x20, [sp, #16]
   1f144:	stp	x21, x22, [sp, #32]
   1f148:	stp	x23, x24, [sp, #48]
   1f14c:	mov	x21, x0
   1f150:	mov	x22, x1
   1f154:	mov	x20, x2
   1f158:	mov	x24, x3
   1f15c:	mov	w23, w4
   1f160:	b	1f1a8 <printf_parse@@Base+0x1d78>
   1f164:	mov	x1, x20
   1f168:	mov	x0, x22
   1f16c:	bl	1f018 <printf_parse@@Base+0x1be8>
   1f170:	and	w0, w0, #0xff
   1f174:	cbz	w0, 1f234 <printf_parse@@Base+0x1e04>
   1f178:	add	x19, x19, x19, lsl #1
   1f17c:	lsl	x19, x19, #3
   1f180:	ldr	x0, [x21, #40]
   1f184:	add	x0, x0, x19
   1f188:	ldr	x1, [x0, #8]
   1f18c:	cbz	x1, 1f24c <printf_parse@@Base+0x1e1c>
   1f190:	cmp	x1, #0x2
   1f194:	b.eq	1f208 <printf_parse@@Base+0x1dd8>  // b.none
   1f198:	ldr	x0, [x21, #40]
   1f19c:	add	x19, x0, x19
   1f1a0:	ldr	x0, [x19, #16]
   1f1a4:	ldr	x20, [x0]
   1f1a8:	mov	x1, x20
   1f1ac:	mov	x0, x22
   1f1b0:	bl	1e034 <printf_parse@@Base+0xc04>
   1f1b4:	cbnz	x0, 1f22c <printf_parse@@Base+0x1dfc>
   1f1b8:	mov	x19, x20
   1f1bc:	lsl	x0, x20, #4
   1f1c0:	ldr	x1, [x21]
   1f1c4:	add	x2, x1, x0
   1f1c8:	ldrb	w2, [x2, #8]
   1f1cc:	cmp	w2, w23
   1f1d0:	b.ne	1f164 <printf_parse@@Base+0x1d34>  // b.any
   1f1d4:	ldr	x0, [x1, x0]
   1f1d8:	cmp	x0, x24
   1f1dc:	b.ne	1f164 <printf_parse@@Base+0x1d34>  // b.any
   1f1e0:	mov	w0, #0x0                   	// #0
   1f1e4:	cmp	w23, #0x9
   1f1e8:	b.ne	1f238 <printf_parse@@Base+0x1e08>  // b.any
   1f1ec:	mov	x1, x20
   1f1f0:	mov	x0, x22
   1f1f4:	bl	1f018 <printf_parse@@Base+0x1be8>
   1f1f8:	ands	w0, w0, #0xff
   1f1fc:	mov	w0, #0xc                   	// #12
   1f200:	csel	w0, w0, wzr, eq  // eq = none
   1f204:	b	1f238 <printf_parse@@Base+0x1e08>
   1f208:	ldr	x0, [x0, #16]
   1f20c:	mov	w4, w23
   1f210:	mov	x3, x24
   1f214:	ldr	x2, [x0, #8]
   1f218:	mov	x1, x22
   1f21c:	mov	x0, x21
   1f220:	bl	1f138 <printf_parse@@Base+0x1d08>
   1f224:	cbz	w0, 1f198 <printf_parse@@Base+0x1d68>
   1f228:	b	1f238 <printf_parse@@Base+0x1e08>
   1f22c:	mov	w0, #0x0                   	// #0
   1f230:	b	1f238 <printf_parse@@Base+0x1e08>
   1f234:	mov	w0, #0xc                   	// #12
   1f238:	ldp	x19, x20, [sp, #16]
   1f23c:	ldp	x21, x22, [sp, #32]
   1f240:	ldp	x23, x24, [sp, #48]
   1f244:	ldp	x29, x30, [sp], #64
   1f248:	ret
   1f24c:	mov	w0, #0x0                   	// #0
   1f250:	b	1f238 <printf_parse@@Base+0x1e08>
   1f254:	stp	x29, x30, [sp, #-32]!
   1f258:	mov	x29, sp
   1f25c:	str	x19, [sp, #16]
   1f260:	mov	x19, x0
   1f264:	str	x1, [x0]
   1f268:	str	xzr, [x0, #8]
   1f26c:	lsl	x0, x1, #3
   1f270:	bl	a5f0 <malloc@plt>
   1f274:	str	x0, [x19, #16]
   1f278:	cmp	x0, #0x0
   1f27c:	mov	w0, #0xc                   	// #12
   1f280:	csel	w0, w0, wzr, eq  // eq = none
   1f284:	ldr	x19, [sp, #16]
   1f288:	ldp	x29, x30, [sp], #32
   1f28c:	ret
   1f290:	stp	x29, x30, [sp, #-64]!
   1f294:	mov	x29, sp
   1f298:	stp	x19, x20, [sp, #16]
   1f29c:	stp	x21, x22, [sp, #32]
   1f2a0:	stp	x23, x24, [sp, #48]
   1f2a4:	mov	x21, x0
   1f2a8:	mov	x20, x1
   1f2ac:	mov	x22, x2
   1f2b0:	mov	x23, x1
   1f2b4:	str	x2, [x23], #32
   1f2b8:	ldr	x1, [x1, #16]
   1f2bc:	mov	x0, x23
   1f2c0:	bl	1f254 <printf_parse@@Base+0x1e24>
   1f2c4:	cbnz	w0, 1f398 <printf_parse@@Base+0x1f68>
   1f2c8:	mov	w24, w0
   1f2cc:	ldr	x0, [x20, #16]
   1f2d0:	cmp	x0, #0x0
   1f2d4:	b.le	1f320 <printf_parse@@Base+0x1ef0>
   1f2d8:	mov	x19, #0x0                   	// #0
   1f2dc:	b	1f2f0 <printf_parse@@Base+0x1ec0>
   1f2e0:	add	x19, x19, #0x1
   1f2e4:	ldr	x0, [x20, #16]
   1f2e8:	cmp	x0, x19
   1f2ec:	b.le	1f320 <printf_parse@@Base+0x1ef0>
   1f2f0:	ldr	x0, [x20, #24]
   1f2f4:	ldr	x1, [x0, x19, lsl #3]
   1f2f8:	ldr	x3, [x21]
   1f2fc:	add	x3, x3, x1, lsl #4
   1f300:	ldrb	w3, [x3, #8]
   1f304:	tbnz	w3, #3, 1f2e0 <printf_parse@@Base+0x1eb0>
   1f308:	mov	x0, x23
   1f30c:	bl	1ebe4 <printf_parse@@Base+0x17b4>
   1f310:	and	w0, w0, #0xff
   1f314:	cbnz	w0, 1f2e0 <printf_parse@@Base+0x1eb0>
   1f318:	mov	w24, #0xc                   	// #12
   1f31c:	b	1f35c <printf_parse@@Base+0x1f2c>
   1f320:	ldr	x19, [x21, #136]
   1f324:	and	x22, x22, x19
   1f328:	add	x22, x22, x22, lsl #1
   1f32c:	lsl	x19, x22, #3
   1f330:	ldr	x21, [x21, #64]
   1f334:	add	x22, x21, x19
   1f338:	ldr	x0, [x21, x19]
   1f33c:	ldr	x1, [x22, #8]
   1f340:	cmp	x1, x0
   1f344:	b.le	1f374 <printf_parse@@Base+0x1f44>
   1f348:	ldr	x1, [x22, #16]
   1f34c:	ldr	x0, [x21, x19]
   1f350:	add	x2, x0, #0x1
   1f354:	str	x2, [x21, x19]
   1f358:	str	x20, [x1, x0, lsl #3]
   1f35c:	mov	w0, w24
   1f360:	ldp	x19, x20, [sp, #16]
   1f364:	ldp	x21, x22, [sp, #32]
   1f368:	ldp	x23, x24, [sp, #48]
   1f36c:	ldp	x29, x30, [sp], #64
   1f370:	ret
   1f374:	add	x0, x0, #0x1
   1f378:	lsl	x23, x0, #1
   1f37c:	lsl	x1, x0, #4
   1f380:	ldr	x0, [x22, #16]
   1f384:	bl	a7e0 <realloc@plt>
   1f388:	cbz	x0, 1f3a0 <printf_parse@@Base+0x1f70>
   1f38c:	str	x0, [x22, #16]
   1f390:	str	x23, [x22, #8]
   1f394:	b	1f348 <printf_parse@@Base+0x1f18>
   1f398:	mov	w24, #0xc                   	// #12
   1f39c:	b	1f35c <printf_parse@@Base+0x1f2c>
   1f3a0:	mov	w24, #0xc                   	// #12
   1f3a4:	b	1f35c <printf_parse@@Base+0x1f2c>
   1f3a8:	stp	x29, x30, [sp, #-96]!
   1f3ac:	mov	x29, sp
   1f3b0:	stp	x21, x22, [sp, #32]
   1f3b4:	stp	x23, x24, [sp, #48]
   1f3b8:	mov	x23, x0
   1f3bc:	ldr	x22, [x0, #152]
   1f3c0:	ldr	x0, [x1, #8]
   1f3c4:	cmp	x0, #0x0
   1f3c8:	b.le	1f4d0 <printf_parse@@Base+0x20a0>
   1f3cc:	stp	x19, x20, [sp, #16]
   1f3d0:	stp	x25, x26, [sp, #64]
   1f3d4:	mov	x20, x1
   1f3d8:	mov	x24, x2
   1f3dc:	mov	x19, #0x0                   	// #0
   1f3e0:	mov	x26, #0x30                  	// #48
   1f3e4:	mov	x25, #0x1                   	// #1
   1f3e8:	b	1f41c <printf_parse@@Base+0x1fec>
   1f3ec:	lsl	x27, x1, #1
   1f3f0:	lsl	x1, x1, #4
   1f3f4:	ldr	x0, [x23, #248]
   1f3f8:	bl	a7e0 <realloc@plt>
   1f3fc:	cbz	x0, 1f4d8 <printf_parse@@Base+0x20a8>
   1f400:	str	x0, [x23, #248]
   1f404:	str	x27, [x23, #240]
   1f408:	b	1f468 <printf_parse@@Base+0x2038>
   1f40c:	add	x19, x19, #0x1
   1f410:	ldr	x0, [x20, #8]
   1f414:	cmp	x0, x19
   1f418:	b.le	1f4b4 <printf_parse@@Base+0x2084>
   1f41c:	ldr	x0, [x20, #16]
   1f420:	ldr	x21, [x0, x19, lsl #3]
   1f424:	lsl	x3, x21, #4
   1f428:	ldr	x4, [x22]
   1f42c:	add	x0, x4, x3
   1f430:	ldrb	w0, [x0, #8]
   1f434:	cmp	w0, #0x8
   1f438:	b.ne	1f40c <printf_parse@@Base+0x1fdc>  // b.any
   1f43c:	ldr	x0, [x4, x3]
   1f440:	cmp	x0, #0x3f
   1f444:	b.gt	1f40c <printf_parse@@Base+0x1fdc>
   1f448:	ldr	x1, [x22, #160]
   1f44c:	lsr	x0, x1, x0
   1f450:	tbz	w0, #0, 1f40c <printf_parse@@Base+0x1fdc>
   1f454:	stp	x27, x28, [sp, #80]
   1f458:	ldr	x1, [x23, #240]
   1f45c:	ldr	x0, [x23, #232]
   1f460:	cmp	x0, x1
   1f464:	b.eq	1f3ec <printf_parse@@Base+0x1fbc>  // b.none
   1f468:	ldr	x28, [x23, #232]
   1f46c:	ldr	x27, [x23, #248]
   1f470:	mov	x1, x26
   1f474:	mov	x0, x25
   1f478:	bl	a770 <calloc@plt>
   1f47c:	str	x0, [x27, x28, lsl #3]
   1f480:	ldr	x1, [x23, #232]
   1f484:	ldr	x0, [x23, #248]
   1f488:	ldr	x0, [x0, x1, lsl #3]
   1f48c:	cbz	x0, 1f4d8 <printf_parse@@Base+0x20a8>
   1f490:	str	x21, [x0, #8]
   1f494:	ldr	x1, [x23, #248]
   1f498:	ldr	x0, [x23, #232]
   1f49c:	add	x2, x0, #0x1
   1f4a0:	str	x2, [x23, #232]
   1f4a4:	ldr	x0, [x1, x0, lsl #3]
   1f4a8:	str	x24, [x0]
   1f4ac:	ldp	x27, x28, [sp, #80]
   1f4b0:	b	1f40c <printf_parse@@Base+0x1fdc>
   1f4b4:	mov	w0, #0x0                   	// #0
   1f4b8:	ldp	x19, x20, [sp, #16]
   1f4bc:	ldp	x25, x26, [sp, #64]
   1f4c0:	ldp	x21, x22, [sp, #32]
   1f4c4:	ldp	x23, x24, [sp, #48]
   1f4c8:	ldp	x29, x30, [sp], #96
   1f4cc:	ret
   1f4d0:	mov	w0, #0x0                   	// #0
   1f4d4:	b	1f4c0 <printf_parse@@Base+0x2090>
   1f4d8:	mov	w0, #0xc                   	// #12
   1f4dc:	ldp	x19, x20, [sp, #16]
   1f4e0:	ldp	x25, x26, [sp, #64]
   1f4e4:	ldp	x27, x28, [sp, #80]
   1f4e8:	b	1f4c0 <printf_parse@@Base+0x2090>
   1f4ec:	stp	x29, x30, [sp, #-48]!
   1f4f0:	mov	x29, sp
   1f4f4:	stp	x19, x20, [sp, #16]
   1f4f8:	str	x21, [sp, #32]
   1f4fc:	mov	x20, x0
   1f500:	ldr	x0, [x0, #88]
   1f504:	ldr	x21, [x20, #64]
   1f508:	cmp	x21, x0
   1f50c:	csel	x21, x21, x0, le
   1f510:	ldr	x19, [x20, #48]
   1f514:	cmp	x21, x19
   1f518:	b.le	1f57c <printf_parse@@Base+0x214c>
   1f51c:	bl	a7f0 <__ctype_toupper_loc@plt>
   1f520:	ldr	x1, [x20]
   1f524:	ldr	x2, [x20, #40]
   1f528:	add	x1, x1, x19
   1f52c:	ldrb	w1, [x1, x2]
   1f530:	ldr	x2, [x20, #120]
   1f534:	cbnz	x2, 1f570 <printf_parse@@Base+0x2140>
   1f538:	ldr	x2, [x20, #8]
   1f53c:	and	x1, x1, #0xff
   1f540:	ldr	x3, [x0]
   1f544:	ldr	w1, [x3, x1, lsl #2]
   1f548:	strb	w1, [x2, x19]
   1f54c:	add	x19, x19, #0x1
   1f550:	cmp	x21, x19
   1f554:	b.ne	1f520 <printf_parse@@Base+0x20f0>  // b.any
   1f558:	str	x21, [x20, #48]
   1f55c:	str	x21, [x20, #56]
   1f560:	ldp	x19, x20, [sp, #16]
   1f564:	ldr	x21, [sp, #32]
   1f568:	ldp	x29, x30, [sp], #48
   1f56c:	ret
   1f570:	and	x1, x1, #0xff
   1f574:	ldrb	w1, [x2, x1]
   1f578:	b	1f538 <printf_parse@@Base+0x2108>
   1f57c:	mov	x21, x19
   1f580:	b	1f558 <printf_parse@@Base+0x2128>
   1f584:	stp	x29, x30, [sp, #-176]!
   1f588:	mov	x29, sp
   1f58c:	stp	x19, x20, [sp, #16]
   1f590:	stp	x21, x22, [sp, #32]
   1f594:	stp	x25, x26, [sp, #64]
   1f598:	mov	x19, x0
   1f59c:	ldr	x0, [x0, #88]
   1f5a0:	ldr	x21, [x19, #64]
   1f5a4:	cmp	x21, x0
   1f5a8:	csel	x21, x21, x0, le
   1f5ac:	ldr	x26, [x19, #48]
   1f5b0:	cmp	x21, x26
   1f5b4:	b.le	1f728 <printf_parse@@Base+0x22f8>
   1f5b8:	stp	x23, x24, [sp, #48]
   1f5bc:	str	x27, [sp, #80]
   1f5c0:	add	x24, sp, #0x70
   1f5c4:	mov	x25, #0x1                   	// #1
   1f5c8:	add	x23, x19, #0x20
   1f5cc:	add	x22, sp, #0x6c
   1f5d0:	mov	w20, #0xffffffff            	// #-1
   1f5d4:	b	1f6cc <printf_parse@@Base+0x229c>
   1f5d8:	ldr	w0, [x19, #144]
   1f5dc:	cmp	w0, #0x0
   1f5e0:	b.le	1f654 <printf_parse@@Base+0x2224>
   1f5e4:	cmp	x2, #0x0
   1f5e8:	b.le	1f65c <printf_parse@@Base+0x222c>
   1f5ec:	mov	x4, x2
   1f5f0:	mov	x1, x25
   1f5f4:	b	1f5fc <printf_parse@@Base+0x21cc>
   1f5f8:	mov	x1, x0
   1f5fc:	ldr	x0, [x19]
   1f600:	ldr	x3, [x19, #40]
   1f604:	add	x0, x0, x26
   1f608:	add	x0, x0, x1
   1f60c:	add	x0, x0, x3
   1f610:	ldurb	w0, [x0, #-1]
   1f614:	ldr	x3, [x19, #120]
   1f618:	ldrb	w3, [x3, x0]
   1f61c:	ldr	x0, [x19, #8]
   1f620:	add	x0, x0, x26
   1f624:	add	x0, x0, x1
   1f628:	sturb	w3, [x0, #-1]
   1f62c:	add	x0, x1, x24
   1f630:	sturb	w3, [x0, #-1]
   1f634:	ldr	w0, [x19, #144]
   1f638:	cmp	w0, w1
   1f63c:	b.le	1f664 <printf_parse@@Base+0x2234>
   1f640:	add	x0, x1, #0x1
   1f644:	cmp	x1, x4
   1f648:	b.ne	1f5f8 <printf_parse@@Base+0x21c8>  // b.any
   1f64c:	mov	x1, x24
   1f650:	b	1f6ec <printf_parse@@Base+0x22bc>
   1f654:	mov	x1, x24
   1f658:	b	1f6ec <printf_parse@@Base+0x22bc>
   1f65c:	mov	x1, x24
   1f660:	b	1f6ec <printf_parse@@Base+0x22bc>
   1f664:	mov	x1, x24
   1f668:	b	1f6ec <printf_parse@@Base+0x22bc>
   1f66c:	ldr	x0, [x19]
   1f670:	ldr	x1, [x19, #40]
   1f674:	add	x0, x0, x26
   1f678:	ldrb	w0, [x0, x1]
   1f67c:	str	w0, [sp, #108]
   1f680:	ldr	x1, [x19, #120]
   1f684:	cbnz	x1, 1f744 <printf_parse@@Base+0x2314>
   1f688:	str	x27, [x19, #32]
   1f68c:	mov	x0, x25
   1f690:	add	x1, x26, #0x1
   1f694:	ldr	x2, [x19, #16]
   1f698:	ldr	w3, [sp, #108]
   1f69c:	str	w3, [x2, x26, lsl #2]
   1f6a0:	add	x0, x26, x0
   1f6a4:	cmp	x1, x0
   1f6a8:	b.ge	1f754 <printf_parse@@Base+0x2324>  // b.tcont
   1f6ac:	ldr	x2, [x19, #16]
   1f6b0:	str	w20, [x2, x1, lsl #2]
   1f6b4:	add	x1, x1, #0x1
   1f6b8:	cmp	x0, x1
   1f6bc:	b.ne	1f6ac <printf_parse@@Base+0x227c>  // b.any
   1f6c0:	mov	x26, x0
   1f6c4:	cmp	x26, x21
   1f6c8:	b.ge	1f75c <printf_parse@@Base+0x232c>  // b.tcont
   1f6cc:	sub	x2, x21, x26
   1f6d0:	ldr	x27, [x19, #32]
   1f6d4:	ldr	x0, [x19, #120]
   1f6d8:	cbnz	x0, 1f5d8 <printf_parse@@Base+0x21a8>
   1f6dc:	ldr	x1, [x19, #40]
   1f6e0:	add	x0, x26, x1
   1f6e4:	ldr	x1, [x19]
   1f6e8:	add	x1, x1, x0
   1f6ec:	mov	x3, x23
   1f6f0:	mov	x0, x22
   1f6f4:	bl	a3e0 <rpl_mbrtowc@plt>
   1f6f8:	sub	x1, x0, #0x1
   1f6fc:	cmn	x1, #0x3
   1f700:	b.hi	1f66c <printf_parse@@Base+0x223c>  // b.pmore
   1f704:	cmn	x0, #0x2
   1f708:	b.ne	1f690 <printf_parse@@Base+0x2260>  // b.any
   1f70c:	ldr	x1, [x19, #64]
   1f710:	ldr	x0, [x19, #88]
   1f714:	cmp	x1, x0
   1f718:	b.ge	1f66c <printf_parse@@Base+0x223c>  // b.tcont
   1f71c:	str	x27, [x19, #32]
   1f720:	ldp	x23, x24, [sp, #48]
   1f724:	ldr	x27, [sp, #80]
   1f728:	str	x26, [x19, #48]
   1f72c:	str	x26, [x19, #56]
   1f730:	ldp	x19, x20, [sp, #16]
   1f734:	ldp	x21, x22, [sp, #32]
   1f738:	ldp	x25, x26, [sp, #64]
   1f73c:	ldp	x29, x30, [sp], #176
   1f740:	ret
   1f744:	and	x0, x0, #0xff
   1f748:	ldrb	w0, [x1, x0]
   1f74c:	str	w0, [sp, #108]
   1f750:	b	1f688 <printf_parse@@Base+0x2258>
   1f754:	mov	x26, x1
   1f758:	b	1f6c4 <printf_parse@@Base+0x2294>
   1f75c:	ldp	x23, x24, [sp, #48]
   1f760:	ldr	x27, [sp, #80]
   1f764:	b	1f728 <printf_parse@@Base+0x22f8>
   1f768:	stp	x29, x30, [sp, #-192]!
   1f76c:	mov	x29, sp
   1f770:	stp	x19, x20, [sp, #16]
   1f774:	stp	x21, x22, [sp, #32]
   1f778:	mov	x20, x0
   1f77c:	ldr	x19, [x0, #48]
   1f780:	ldr	x0, [x0, #88]
   1f784:	ldr	x22, [x20, #64]
   1f788:	cmp	x22, x0
   1f78c:	csel	x22, x22, x0, le
   1f790:	ldrb	w0, [x20, #138]
   1f794:	cbnz	w0, 1f7a0 <printf_parse@@Base+0x2370>
   1f798:	ldr	x0, [x20, #120]
   1f79c:	cbz	x0, 1f7c8 <printf_parse@@Base+0x2398>
   1f7a0:	ldr	x21, [x20, #56]
   1f7a4:	cmp	x22, x19
   1f7a8:	b.gt	1f9e0 <printf_parse@@Base+0x25b0>
   1f7ac:	str	x19, [x20, #48]
   1f7b0:	str	x21, [x20, #56]
   1f7b4:	mov	w0, #0x0                   	// #0
   1f7b8:	ldp	x19, x20, [sp, #16]
   1f7bc:	ldp	x21, x22, [sp, #32]
   1f7c0:	ldp	x29, x30, [sp], #192
   1f7c4:	ret
   1f7c8:	ldrb	w0, [x20, #140]
   1f7cc:	cbnz	w0, 1f7a0 <printf_parse@@Base+0x2370>
   1f7d0:	cmp	x19, x22
   1f7d4:	b.ge	1f9d0 <printf_parse@@Base+0x25a0>  // b.tcont
   1f7d8:	stp	x23, x24, [sp, #48]
   1f7dc:	stp	x25, x26, [sp, #64]
   1f7e0:	stp	x27, x28, [sp, #80]
   1f7e4:	add	x27, x20, #0x20
   1f7e8:	add	x0, sp, #0x74
   1f7ec:	str	x0, [sp, #96]
   1f7f0:	mov	w23, #0xffffffff            	// #-1
   1f7f4:	add	x0, sp, #0xb8
   1f7f8:	str	x0, [sp, #104]
   1f7fc:	add	x28, sp, #0x78
   1f800:	b	1f880 <printf_parse@@Base+0x2450>
   1f804:	bl	a7f0 <__ctype_toupper_loc@plt>
   1f808:	ldr	x1, [x20, #8]
   1f80c:	and	x25, x25, #0xff
   1f810:	ldr	x0, [x0]
   1f814:	ldr	w0, [x0, x25, lsl #2]
   1f818:	strb	w0, [x1, x19]
   1f81c:	ldr	x0, [x20, #16]
   1f820:	ldr	x1, [x20, #8]
   1f824:	ldrb	w1, [x1, x19]
   1f828:	str	w1, [x0, x19, lsl #2]
   1f82c:	add	x19, x19, #0x1
   1f830:	b	1f878 <printf_parse@@Base+0x2448>
   1f834:	ldr	x0, [x20, #8]
   1f838:	mov	x2, x21
   1f83c:	mov	x1, x28
   1f840:	add	x0, x0, x19
   1f844:	bl	a2c0 <memcpy@plt>
   1f848:	add	x19, x19, #0x1
   1f84c:	ldr	x0, [x20, #16]
   1f850:	str	w24, [x0, x25, lsl #2]
   1f854:	add	x21, x25, x21
   1f858:	cmp	x19, x21
   1f85c:	b.ge	1f878 <printf_parse@@Base+0x2448>  // b.tcont
   1f860:	ldr	x1, [x20, #16]
   1f864:	str	w23, [x1, x19, lsl #2]
   1f868:	add	x19, x19, #0x1
   1f86c:	cmp	x21, x19
   1f870:	b.ne	1f860 <printf_parse@@Base+0x2430>  // b.any
   1f874:	mov	x19, x21
   1f878:	cmp	x19, x22
   1f87c:	b.ge	1f9c4 <printf_parse@@Base+0x2594>  // b.tcont
   1f880:	ldr	x24, [x20]
   1f884:	ldr	x21, [x20, #40]
   1f888:	add	x0, x24, x21
   1f88c:	ldrb	w25, [x0, x19]
   1f890:	tst	w25, #0xffffff80
   1f894:	b.ne	1f8a4 <printf_parse@@Base+0x2474>  // b.any
   1f898:	mov	x0, x27
   1f89c:	bl	a930 <mbsinit@plt>
   1f8a0:	cbnz	w0, 1f804 <printf_parse@@Base+0x23d4>
   1f8a4:	ldr	x0, [x20, #32]
   1f8a8:	str	x0, [sp, #184]
   1f8ac:	mov	x25, x19
   1f8b0:	add	x1, x21, x19
   1f8b4:	mov	x3, x27
   1f8b8:	sub	x2, x22, x19
   1f8bc:	add	x1, x24, x1
   1f8c0:	ldr	x0, [sp, #96]
   1f8c4:	bl	a3e0 <rpl_mbrtowc@plt>
   1f8c8:	mov	x21, x0
   1f8cc:	sub	x0, x0, #0x1
   1f8d0:	cmn	x0, #0x4
   1f8d4:	b.hi	1f934 <printf_parse@@Base+0x2504>  // b.pmore
   1f8d8:	ldr	w26, [sp, #116]
   1f8dc:	mov	w0, w26
   1f8e0:	bl	ae30 <towupper@plt>
   1f8e4:	mov	w24, w0
   1f8e8:	cmp	w26, w0
   1f8ec:	b.eq	1f910 <printf_parse@@Base+0x24e0>  // b.none
   1f8f0:	ldr	x2, [sp, #104]
   1f8f4:	mov	w1, w0
   1f8f8:	mov	x0, x28
   1f8fc:	bl	aff0 <wcrtomb@plt>
   1f900:	cmp	x21, x0
   1f904:	b.eq	1f834 <printf_parse@@Base+0x2404>  // b.none
   1f908:	mov	x21, x19
   1f90c:	b	1f9ec <printf_parse@@Base+0x25bc>
   1f910:	ldr	x0, [x20, #8]
   1f914:	ldr	x1, [x20, #40]
   1f918:	add	x1, x19, x1
   1f91c:	ldr	x3, [x20]
   1f920:	mov	x2, x21
   1f924:	add	x1, x3, x1
   1f928:	add	x0, x0, x19
   1f92c:	bl	a2c0 <memcpy@plt>
   1f930:	b	1f848 <printf_parse@@Base+0x2418>
   1f934:	cmn	x0, #0x3
   1f938:	b.hi	1f974 <printf_parse@@Base+0x2544>  // b.pmore
   1f93c:	ldr	x1, [x20, #64]
   1f940:	ldr	x0, [x20, #88]
   1f944:	cmp	x1, x0
   1f948:	b.lt	1f9ac <printf_parse@@Base+0x257c>  // b.tstop
   1f94c:	ldr	x0, [x20]
   1f950:	ldr	x1, [x20, #40]
   1f954:	add	x0, x0, x19
   1f958:	ldrb	w0, [x0, x1]
   1f95c:	ldr	x1, [x20, #8]
   1f960:	strb	w0, [x1, x19]
   1f964:	add	x19, x19, #0x1
   1f968:	ldr	x1, [x20, #16]
   1f96c:	str	w0, [x1, x25, lsl #2]
   1f970:	b	1f878 <printf_parse@@Base+0x2448>
   1f974:	ldr	x0, [x20]
   1f978:	ldr	x1, [x20, #40]
   1f97c:	add	x0, x0, x19
   1f980:	ldrb	w0, [x0, x1]
   1f984:	ldr	x1, [x20, #8]
   1f988:	strb	w0, [x1, x19]
   1f98c:	add	x19, x19, #0x1
   1f990:	ldr	x1, [x20, #16]
   1f994:	str	w0, [x1, x25, lsl #2]
   1f998:	cmn	x21, #0x1
   1f99c:	b.ne	1f878 <printf_parse@@Base+0x2448>  // b.any
   1f9a0:	ldr	x0, [sp, #184]
   1f9a4:	str	x0, [x20, #32]
   1f9a8:	b	1f878 <printf_parse@@Base+0x2448>
   1f9ac:	ldr	x0, [sp, #184]
   1f9b0:	str	x0, [x20, #32]
   1f9b4:	ldp	x23, x24, [sp, #48]
   1f9b8:	ldp	x25, x26, [sp, #64]
   1f9bc:	ldp	x27, x28, [sp, #80]
   1f9c0:	b	1f9d0 <printf_parse@@Base+0x25a0>
   1f9c4:	ldp	x23, x24, [sp, #48]
   1f9c8:	ldp	x25, x26, [sp, #64]
   1f9cc:	ldp	x27, x28, [sp, #80]
   1f9d0:	str	x19, [x20, #48]
   1f9d4:	str	x19, [x20, #56]
   1f9d8:	mov	w0, #0x0                   	// #0
   1f9dc:	b	1f7b8 <printf_parse@@Base+0x2388>
   1f9e0:	stp	x23, x24, [sp, #48]
   1f9e4:	stp	x25, x26, [sp, #64]
   1f9e8:	stp	x27, x28, [sp, #80]
   1f9ec:	sub	x2, x22, x19
   1f9f0:	ldr	x0, [x20, #32]
   1f9f4:	str	x0, [sp, #184]
   1f9f8:	ldr	x1, [x20, #120]
   1f9fc:	cbnz	x1, 1fac4 <printf_parse@@Base+0x2694>
   1fa00:	ldr	x0, [x20, #40]
   1fa04:	add	x0, x21, x0
   1fa08:	ldr	x25, [x20]
   1fa0c:	add	x25, x25, x0
   1fa10:	add	x3, x20, #0x20
   1fa14:	mov	x1, x25
   1fa18:	add	x0, sp, #0x74
   1fa1c:	bl	a3e0 <rpl_mbrtowc@plt>
   1fa20:	mov	x23, x0
   1fa24:	sub	x27, x0, #0x1
   1fa28:	cmn	x27, #0x4
   1fa2c:	b.hi	1fce0 <printf_parse@@Base+0x28b0>  // b.pmore
   1fa30:	ldr	w26, [sp, #116]
   1fa34:	mov	w0, w26
   1fa38:	bl	ae30 <towupper@plt>
   1fa3c:	mov	w24, w0
   1fa40:	cmp	w26, w0
   1fa44:	b.eq	1fca0 <printf_parse@@Base+0x2870>  // b.none
   1fa48:	add	x2, sp, #0xb8
   1fa4c:	mov	w1, w0
   1fa50:	add	x0, sp, #0x78
   1fa54:	bl	aff0 <wcrtomb@plt>
   1fa58:	mov	x26, x0
   1fa5c:	cmp	x23, x0
   1fa60:	b.ne	1fb44 <printf_parse@@Base+0x2714>  // b.any
   1fa64:	ldr	x0, [x20, #8]
   1fa68:	mov	x2, x26
   1fa6c:	add	x1, sp, #0x78
   1fa70:	add	x0, x0, x19
   1fa74:	bl	a2c0 <memcpy@plt>
   1fa78:	ldrb	w0, [x20, #140]
   1fa7c:	cbnz	w0, 1fcb8 <printf_parse@@Base+0x2888>
   1fa80:	add	x21, x21, x23
   1fa84:	add	x0, x19, #0x1
   1fa88:	ldr	x1, [x20, #16]
   1fa8c:	str	w24, [x1, x19, lsl #2]
   1fa90:	add	x19, x19, x23
   1fa94:	cmp	x0, x19
   1fa98:	b.ge	1fd94 <printf_parse@@Base+0x2964>  // b.tcont
   1fa9c:	mov	w2, #0xffffffff            	// #-1
   1faa0:	ldr	x1, [x20, #16]
   1faa4:	str	w2, [x1, x0, lsl #2]
   1faa8:	add	x0, x0, #0x1
   1faac:	cmp	x19, x0
   1fab0:	b.ne	1faa0 <printf_parse@@Base+0x2670>  // b.any
   1fab4:	ldp	x23, x24, [sp, #48]
   1fab8:	ldp	x25, x26, [sp, #64]
   1fabc:	ldp	x27, x28, [sp, #80]
   1fac0:	b	1f7a4 <printf_parse@@Base+0x2374>
   1fac4:	ldr	w6, [x20, #144]
   1fac8:	cmp	w6, #0x0
   1facc:	b.le	1fb2c <printf_parse@@Base+0x26fc>
   1fad0:	cmp	x2, #0x0
   1fad4:	b.le	1fb34 <printf_parse@@Base+0x2704>
   1fad8:	ldr	x5, [x20]
   1fadc:	ldr	x3, [x20, #40]
   1fae0:	add	x3, x21, x3
   1fae4:	mov	x8, x2
   1fae8:	mov	x0, #0x1                   	// #1
   1faec:	sub	x3, x3, #0x1
   1faf0:	add	x5, x5, x3
   1faf4:	add	x7, sp, #0x78
   1faf8:	b	1fb00 <printf_parse@@Base+0x26d0>
   1fafc:	mov	x0, x3
   1fb00:	ldrb	w3, [x5, x0]
   1fb04:	ldrb	w4, [x1, x3]
   1fb08:	add	x3, x0, x7
   1fb0c:	sturb	w4, [x3, #-1]
   1fb10:	cmp	w6, w0
   1fb14:	b.le	1fb3c <printf_parse@@Base+0x270c>
   1fb18:	add	x3, x0, #0x1
   1fb1c:	cmp	x0, x8
   1fb20:	b.ne	1fafc <printf_parse@@Base+0x26cc>  // b.any
   1fb24:	add	x25, sp, #0x78
   1fb28:	b	1fa10 <printf_parse@@Base+0x25e0>
   1fb2c:	add	x25, sp, #0x78
   1fb30:	b	1fa10 <printf_parse@@Base+0x25e0>
   1fb34:	add	x25, sp, #0x78
   1fb38:	b	1fa10 <printf_parse@@Base+0x25e0>
   1fb3c:	add	x25, sp, #0x78
   1fb40:	b	1fa10 <printf_parse@@Base+0x25e0>
   1fb44:	cmn	x0, #0x1
   1fb48:	b.eq	1fc88 <printf_parse@@Base+0x2858>  // b.none
   1fb4c:	mov	x22, x19
   1fb50:	add	x25, x19, x0
   1fb54:	ldr	x0, [x20, #64]
   1fb58:	cmp	x25, x0
   1fb5c:	b.ls	1fb78 <printf_parse@@Base+0x2748>  // b.plast
   1fb60:	ldr	x0, [sp, #184]
   1fb64:	str	x0, [x20, #32]
   1fb68:	ldp	x23, x24, [sp, #48]
   1fb6c:	ldp	x25, x26, [sp, #64]
   1fb70:	ldp	x27, x28, [sp, #80]
   1fb74:	b	1f7ac <printf_parse@@Base+0x237c>
   1fb78:	ldr	x1, [x20, #24]
   1fb7c:	cbz	x1, 1fc64 <printf_parse@@Base+0x2834>
   1fb80:	ldrb	w0, [x20, #140]
   1fb84:	cbnz	w0, 1fbac <printf_parse@@Base+0x277c>
   1fb88:	cbz	x22, 1fba4 <printf_parse@@Base+0x2774>
   1fb8c:	mov	x0, #0x0                   	// #0
   1fb90:	ldr	x1, [x20, #24]
   1fb94:	str	x0, [x1, x0, lsl #3]
   1fb98:	add	x0, x0, #0x1
   1fb9c:	cmp	x22, x0
   1fba0:	b.ne	1fb90 <printf_parse@@Base+0x2760>  // b.any
   1fba4:	mov	w0, #0x1                   	// #1
   1fba8:	strb	w0, [x20, #140]
   1fbac:	ldr	x0, [x20, #8]
   1fbb0:	mov	x2, x26
   1fbb4:	add	x1, sp, #0x78
   1fbb8:	add	x0, x0, x22
   1fbbc:	bl	a2c0 <memcpy@plt>
   1fbc0:	lsl	x0, x22, #2
   1fbc4:	ldr	x1, [x20, #16]
   1fbc8:	str	w24, [x1, x22, lsl #2]
   1fbcc:	ldr	x1, [x20, #24]
   1fbd0:	str	x21, [x1, x22, lsl #3]
   1fbd4:	cmp	x26, #0x1
   1fbd8:	b.ls	1fc18 <printf_parse@@Base+0x27e8>  // b.plast
   1fbdc:	add	x0, x0, #0x4
   1fbe0:	mov	x1, #0x1                   	// #1
   1fbe4:	mov	w3, #0xffffffff            	// #-1
   1fbe8:	cmp	x23, x1
   1fbec:	csel	x2, x27, x1, ls  // ls = plast
   1fbf0:	ldr	x5, [x20, #24]
   1fbf4:	lsl	x4, x0, #1
   1fbf8:	add	x2, x21, x2
   1fbfc:	str	x2, [x5, x4]
   1fc00:	ldr	x2, [x20, #16]
   1fc04:	str	w3, [x2, x0]
   1fc08:	add	x1, x1, #0x1
   1fc0c:	add	x0, x0, #0x4
   1fc10:	cmp	x26, x1
   1fc14:	b.ne	1fbe8 <printf_parse@@Base+0x27b8>  // b.any
   1fc18:	sub	x26, x26, x23
   1fc1c:	ldr	x0, [x20, #88]
   1fc20:	add	x0, x26, x0
   1fc24:	str	x0, [x20, #88]
   1fc28:	ldr	x1, [x20, #96]
   1fc2c:	cmp	x21, x1
   1fc30:	b.ge	1fc40 <printf_parse@@Base+0x2810>  // b.tcont
   1fc34:	ldr	x1, [x20, #104]
   1fc38:	add	x26, x1, x26
   1fc3c:	str	x26, [x20, #104]
   1fc40:	ldr	x22, [x20, #64]
   1fc44:	cmp	x22, x0
   1fc48:	csel	x22, x22, x0, le
   1fc4c:	mov	x19, x25
   1fc50:	add	x21, x21, x23
   1fc54:	ldp	x23, x24, [sp, #48]
   1fc58:	ldp	x25, x26, [sp, #64]
   1fc5c:	ldp	x27, x28, [sp, #80]
   1fc60:	b	1f7a4 <printf_parse@@Base+0x2374>
   1fc64:	lsl	x0, x0, #3
   1fc68:	bl	a5f0 <malloc@plt>
   1fc6c:	str	x0, [x20, #24]
   1fc70:	cbnz	x0, 1fb80 <printf_parse@@Base+0x2750>
   1fc74:	mov	w0, #0xc                   	// #12
   1fc78:	ldp	x23, x24, [sp, #48]
   1fc7c:	ldp	x25, x26, [sp, #64]
   1fc80:	ldp	x27, x28, [sp, #80]
   1fc84:	b	1f7b8 <printf_parse@@Base+0x2388>
   1fc88:	ldr	x0, [x20, #8]
   1fc8c:	mov	x2, x23
   1fc90:	mov	x1, x25
   1fc94:	add	x0, x0, x19
   1fc98:	bl	a2c0 <memcpy@plt>
   1fc9c:	b	1fa78 <printf_parse@@Base+0x2648>
   1fca0:	ldr	x0, [x20, #8]
   1fca4:	mov	x2, x23
   1fca8:	mov	x1, x25
   1fcac:	add	x0, x0, x19
   1fcb0:	bl	a2c0 <memcpy@plt>
   1fcb4:	b	1fa78 <printf_parse@@Base+0x2648>
   1fcb8:	lsl	x1, x19, #3
   1fcbc:	mov	x0, x21
   1fcc0:	add	x3, x23, x21
   1fcc4:	ldr	x2, [x20, #24]
   1fcc8:	str	x0, [x2, x1]
   1fccc:	add	x1, x1, #0x8
   1fcd0:	add	x0, x0, #0x1
   1fcd4:	cmp	x0, x3
   1fcd8:	b.ne	1fcc4 <printf_parse@@Base+0x2894>  // b.any
   1fcdc:	b	1fa80 <printf_parse@@Base+0x2650>
   1fce0:	cmn	x27, #0x3
   1fce4:	b.hi	1fcf8 <printf_parse@@Base+0x28c8>  // b.pmore
   1fce8:	ldr	x1, [x20, #64]
   1fcec:	ldr	x0, [x20, #88]
   1fcf0:	cmp	x1, x0
   1fcf4:	b.lt	1fd7c <printf_parse@@Base+0x294c>  // b.tstop
   1fcf8:	ldr	x0, [x20]
   1fcfc:	ldr	x1, [x20, #40]
   1fd00:	add	x0, x0, x21
   1fd04:	ldrb	w0, [x0, x1]
   1fd08:	ldr	x1, [x20, #120]
   1fd0c:	cbnz	x1, 1fd4c <printf_parse@@Base+0x291c>
   1fd10:	mov	x2, x19
   1fd14:	ldr	x1, [x20, #8]
   1fd18:	strb	w0, [x1, x19]
   1fd1c:	ldrb	w1, [x20, #140]
   1fd20:	cbnz	w1, 1fd58 <printf_parse@@Base+0x2928>
   1fd24:	add	x21, x21, #0x1
   1fd28:	add	x19, x19, #0x1
   1fd2c:	ldr	x1, [x20, #16]
   1fd30:	str	w0, [x1, x2, lsl #2]
   1fd34:	cmn	x23, #0x1
   1fd38:	b.eq	1fd64 <printf_parse@@Base+0x2934>  // b.none
   1fd3c:	ldp	x23, x24, [sp, #48]
   1fd40:	ldp	x25, x26, [sp, #64]
   1fd44:	ldp	x27, x28, [sp, #80]
   1fd48:	b	1f7a4 <printf_parse@@Base+0x2374>
   1fd4c:	and	x0, x0, #0xff
   1fd50:	ldrb	w0, [x1, x0]
   1fd54:	b	1fd10 <printf_parse@@Base+0x28e0>
   1fd58:	ldr	x1, [x20, #24]
   1fd5c:	str	x21, [x1, x19, lsl #3]
   1fd60:	b	1fd24 <printf_parse@@Base+0x28f4>
   1fd64:	ldr	x0, [sp, #184]
   1fd68:	str	x0, [x20, #32]
   1fd6c:	ldp	x23, x24, [sp, #48]
   1fd70:	ldp	x25, x26, [sp, #64]
   1fd74:	ldp	x27, x28, [sp, #80]
   1fd78:	b	1f7a4 <printf_parse@@Base+0x2374>
   1fd7c:	ldr	x0, [sp, #184]
   1fd80:	str	x0, [x20, #32]
   1fd84:	ldp	x23, x24, [sp, #48]
   1fd88:	ldp	x25, x26, [sp, #64]
   1fd8c:	ldp	x27, x28, [sp, #80]
   1fd90:	b	1f7ac <printf_parse@@Base+0x237c>
   1fd94:	mov	x19, x0
   1fd98:	ldp	x23, x24, [sp, #48]
   1fd9c:	ldp	x25, x26, [sp, #64]
   1fda0:	ldp	x27, x28, [sp, #80]
   1fda4:	b	1f7a4 <printf_parse@@Base+0x2374>
   1fda8:	stp	x29, x30, [sp, #-32]!
   1fdac:	mov	x29, sp
   1fdb0:	stp	x19, x20, [sp, #16]
   1fdb4:	mov	x19, x0
   1fdb8:	ldr	x0, [x0, #64]
   1fdbc:	mov	x2, #0xffffffffffffffe     	// #1152921504606846974
   1fdc0:	cmp	x0, x2
   1fdc4:	b.hi	1fe7c <printf_parse@@Base+0x2a4c>  // b.pmore
   1fdc8:	lsl	x0, x0, #1
   1fdcc:	ldr	x2, [x19, #88]
   1fdd0:	cmp	x0, x2
   1fdd4:	csel	x0, x0, x2, le
   1fdd8:	sxtw	x1, w1
   1fddc:	cmp	x0, x1
   1fde0:	csel	x1, x0, x1, ge  // ge = tcont
   1fde4:	mov	x0, x19
   1fde8:	bl	1eb38 <printf_parse@@Base+0x1708>
   1fdec:	mov	w20, w0
   1fdf0:	cbnz	w0, 1fe34 <printf_parse@@Base+0x2a04>
   1fdf4:	ldr	x0, [x19, #184]
   1fdf8:	cbz	x0, 1fe14 <printf_parse@@Base+0x29e4>
   1fdfc:	ldr	x1, [x19, #64]
   1fe00:	add	x1, x1, #0x1
   1fe04:	lsl	x1, x1, #3
   1fe08:	bl	a7e0 <realloc@plt>
   1fe0c:	cbz	x0, 1fe84 <printf_parse@@Base+0x2a54>
   1fe10:	str	x0, [x19, #184]
   1fe14:	ldrb	w0, [x19, #136]
   1fe18:	cbz	w0, 1fe50 <printf_parse@@Base+0x2a20>
   1fe1c:	ldr	w0, [x19, #144]
   1fe20:	cmp	w0, #0x1
   1fe24:	b.le	1fe44 <printf_parse@@Base+0x2a14>
   1fe28:	mov	x0, x19
   1fe2c:	bl	1f768 <printf_parse@@Base+0x2338>
   1fe30:	mov	w20, w0
   1fe34:	mov	w0, w20
   1fe38:	ldp	x19, x20, [sp, #16]
   1fe3c:	ldp	x29, x30, [sp], #32
   1fe40:	ret
   1fe44:	mov	x0, x19
   1fe48:	bl	1f4ec <printf_parse@@Base+0x20bc>
   1fe4c:	b	1fe34 <printf_parse@@Base+0x2a04>
   1fe50:	ldr	w0, [x19, #144]
   1fe54:	cmp	w0, #0x1
   1fe58:	b.gt	1fe70 <printf_parse@@Base+0x2a40>
   1fe5c:	ldr	x0, [x19, #120]
   1fe60:	cbz	x0, 1fe34 <printf_parse@@Base+0x2a04>
   1fe64:	mov	x0, x19
   1fe68:	bl	1df7c <printf_parse@@Base+0xb4c>
   1fe6c:	b	1fe34 <printf_parse@@Base+0x2a04>
   1fe70:	mov	x0, x19
   1fe74:	bl	1f584 <printf_parse@@Base+0x2154>
   1fe78:	b	1fe34 <printf_parse@@Base+0x2a04>
   1fe7c:	mov	w20, #0xc                   	// #12
   1fe80:	b	1fe34 <printf_parse@@Base+0x2a04>
   1fe84:	mov	w20, #0xc                   	// #12
   1fe88:	b	1fe34 <printf_parse@@Base+0x2a04>
   1fe8c:	stp	x29, x30, [sp, #-48]!
   1fe90:	mov	x29, sp
   1fe94:	stp	x19, x20, [sp, #16]
   1fe98:	str	x21, [sp, #32]
   1fe9c:	mov	x19, x0
   1fea0:	mov	x20, x1
   1fea4:	ldr	x21, [x0, #192]
   1fea8:	ldr	x0, [x0, #64]
   1feac:	cmp	x0, x1
   1feb0:	b.gt	1fec0 <printf_parse@@Base+0x2a90>
   1feb4:	ldr	x1, [x19, #88]
   1feb8:	cmp	x0, x1
   1febc:	b.lt	1fed8 <printf_parse@@Base+0x2aa8>  // b.tstop
   1fec0:	ldr	x0, [x19, #48]
   1fec4:	cmp	x0, x20
   1fec8:	b.gt	1fee8 <printf_parse@@Base+0x2ab8>
   1fecc:	ldr	x1, [x19, #88]
   1fed0:	cmp	x0, x1
   1fed4:	b.ge	1fee8 <printf_parse@@Base+0x2ab8>  // b.tcont
   1fed8:	add	w1, w20, #0x1
   1fedc:	mov	x0, x19
   1fee0:	bl	1fda8 <printf_parse@@Base+0x2978>
   1fee4:	cbnz	w0, 1fef4 <printf_parse@@Base+0x2ac4>
   1fee8:	mov	w0, #0x0                   	// #0
   1feec:	cmp	x21, x20
   1fef0:	b.lt	1ff04 <printf_parse@@Base+0x2ad4>  // b.tstop
   1fef4:	ldp	x19, x20, [sp, #16]
   1fef8:	ldr	x21, [sp, #32]
   1fefc:	ldp	x29, x30, [sp], #48
   1ff00:	ret
   1ff04:	sub	x2, x20, x21
   1ff08:	add	x21, x21, #0x1
   1ff0c:	ldr	x0, [x19, #184]
   1ff10:	lsl	x2, x2, #3
   1ff14:	mov	w1, #0x0                   	// #0
   1ff18:	add	x0, x0, x21, lsl #3
   1ff1c:	bl	a6f0 <memset@plt>
   1ff20:	str	x20, [x19, #192]
   1ff24:	mov	w0, #0x0                   	// #0
   1ff28:	b	1fef4 <printf_parse@@Base+0x2ac4>
   1ff2c:	cbz	x1, 200cc <printf_parse@@Base+0x2c9c>
   1ff30:	stp	x29, x30, [sp, #-48]!
   1ff34:	mov	x29, sp
   1ff38:	stp	x19, x20, [sp, #16]
   1ff3c:	str	x21, [sp, #32]
   1ff40:	mov	x19, x0
   1ff44:	mov	x21, x1
   1ff48:	ldr	x1, [x1, #8]
   1ff4c:	mov	w0, #0x0                   	// #0
   1ff50:	cbz	x1, 200bc <printf_parse@@Base+0x2c8c>
   1ff54:	ldr	x2, [x19]
   1ff58:	ldr	x0, [x19, #8]
   1ff5c:	add	x0, x0, x1, lsl #1
   1ff60:	cmp	x2, x0
   1ff64:	b.lt	1ffb8 <printf_parse@@Base+0x2b88>  // b.tstop
   1ff68:	ldr	x0, [x19, #8]
   1ff6c:	cbz	x0, 1ffdc <printf_parse@@Base+0x2bac>
   1ff70:	ldr	x2, [x21, #8]
   1ff74:	add	x20, x0, x2, lsl #1
   1ff78:	sub	x0, x0, #0x1
   1ff7c:	subs	x2, x2, #0x1
   1ff80:	ccmp	x0, #0x0, #0x1, pl  // pl = nfrst
   1ff84:	b.ge	20014 <printf_parse@@Base+0x2be4>  // b.tcont
   1ff88:	tbz	x2, #63, 20048 <printf_parse@@Base+0x2c18>
   1ff8c:	ldr	x1, [x19, #8]
   1ff90:	ldr	x2, [x21, #8]
   1ff94:	add	x2, x1, x2, lsl #1
   1ff98:	sub	x5, x2, #0x1
   1ff9c:	mov	w0, #0x0                   	// #0
   1ffa0:	subs	x2, x2, x20
   1ffa4:	b.eq	200bc <printf_parse@@Base+0x2c8c>  // b.none
   1ffa8:	sub	x3, x1, #0x1
   1ffac:	add	x1, x1, x2
   1ffb0:	str	x1, [x19, #8]
   1ffb4:	b	20078 <printf_parse@@Base+0x2c48>
   1ffb8:	add	x1, x1, x2
   1ffbc:	lsl	x20, x1, #1
   1ffc0:	lsl	x1, x1, #4
   1ffc4:	ldr	x0, [x19, #16]
   1ffc8:	bl	a7e0 <realloc@plt>
   1ffcc:	cbz	x0, 200d4 <printf_parse@@Base+0x2ca4>
   1ffd0:	str	x0, [x19, #16]
   1ffd4:	str	x20, [x19]
   1ffd8:	b	1ff68 <printf_parse@@Base+0x2b38>
   1ffdc:	ldr	x0, [x21, #8]
   1ffe0:	str	x0, [x19, #8]
   1ffe4:	ldr	x2, [x21, #8]
   1ffe8:	lsl	x2, x2, #3
   1ffec:	ldr	x1, [x21, #16]
   1fff0:	ldr	x0, [x19, #16]
   1fff4:	bl	a2c0 <memcpy@plt>
   1fff8:	mov	w0, #0x0                   	// #0
   1fffc:	b	200bc <printf_parse@@Base+0x2c8c>
   20000:	sub	x2, x2, #0x1
   20004:	sub	x0, x0, #0x1
   20008:	cmp	x2, #0x0
   2000c:	ccmp	x0, #0x0, #0x1, ge  // ge = tcont
   20010:	b.lt	1ff88 <printf_parse@@Base+0x2b58>  // b.tstop
   20014:	ldr	x1, [x19, #16]
   20018:	ldr	x4, [x1, x0, lsl #3]
   2001c:	ldr	x3, [x21, #16]
   20020:	ldr	x3, [x3, x2, lsl #3]
   20024:	cmp	x4, x3
   20028:	b.eq	20000 <printf_parse@@Base+0x2bd0>  // b.none
   2002c:	b.ge	20040 <printf_parse@@Base+0x2c10>  // b.tcont
   20030:	sub	x2, x2, #0x1
   20034:	sub	x20, x20, #0x1
   20038:	str	x3, [x1, x20, lsl #3]
   2003c:	b	20008 <printf_parse@@Base+0x2bd8>
   20040:	sub	x0, x0, #0x1
   20044:	b	20008 <printf_parse@@Base+0x2bd8>
   20048:	add	x2, x2, #0x1
   2004c:	sub	x20, x20, x2
   20050:	ldr	x0, [x19, #16]
   20054:	lsl	x2, x2, #3
   20058:	ldr	x1, [x21, #16]
   2005c:	add	x0, x0, x20, lsl #3
   20060:	bl	a2c0 <memcpy@plt>
   20064:	b	1ff8c <printf_parse@@Base+0x2b5c>
   20068:	add	x4, x3, x2
   2006c:	str	x0, [x1, x4, lsl #3]
   20070:	subs	x3, x3, #0x1
   20074:	b.mi	200a8 <printf_parse@@Base+0x2c78>  // b.first
   20078:	ldr	x1, [x19, #16]
   2007c:	ldr	x4, [x1, x5, lsl #3]
   20080:	ldr	x0, [x1, x3, lsl #3]
   20084:	cmp	x4, x0
   20088:	b.le	20068 <printf_parse@@Base+0x2c38>
   2008c:	sub	x5, x5, #0x1
   20090:	add	x0, x3, x2
   20094:	str	x4, [x1, x0, lsl #3]
   20098:	subs	x2, x2, #0x1
   2009c:	b.ne	20078 <printf_parse@@Base+0x2c48>  // b.any
   200a0:	mov	w0, #0x0                   	// #0
   200a4:	b	200bc <printf_parse@@Base+0x2c8c>
   200a8:	ldr	x0, [x19, #16]
   200ac:	lsl	x2, x2, #3
   200b0:	add	x1, x0, x20, lsl #3
   200b4:	bl	a2c0 <memcpy@plt>
   200b8:	mov	w0, #0x0                   	// #0
   200bc:	ldp	x19, x20, [sp, #16]
   200c0:	ldr	x21, [sp, #32]
   200c4:	ldp	x29, x30, [sp], #48
   200c8:	ret
   200cc:	mov	w0, #0x0                   	// #0
   200d0:	ret
   200d4:	mov	w0, #0xc                   	// #12
   200d8:	b	200bc <printf_parse@@Base+0x2c8c>
   200dc:	stp	x29, x30, [sp, #-32]!
   200e0:	mov	x29, sp
   200e4:	stp	x19, x20, [sp, #16]
   200e8:	mov	x19, x0
   200ec:	ldr	x0, [x1, #8]
   200f0:	str	x0, [x19, #8]
   200f4:	cmp	x0, #0x0
   200f8:	b.le	20144 <printf_parse@@Base+0x2d14>
   200fc:	mov	x20, x1
   20100:	str	x0, [x19]
   20104:	lsl	x0, x0, #3
   20108:	bl	a5f0 <malloc@plt>
   2010c:	str	x0, [x19, #16]
   20110:	cbz	x0, 20134 <printf_parse@@Base+0x2d04>
   20114:	ldr	x2, [x20, #8]
   20118:	lsl	x2, x2, #3
   2011c:	ldr	x1, [x20, #16]
   20120:	bl	a2c0 <memcpy@plt>
   20124:	mov	w0, #0x0                   	// #0
   20128:	ldp	x19, x20, [sp, #16]
   2012c:	ldp	x29, x30, [sp], #32
   20130:	ret
   20134:	str	xzr, [x19, #8]
   20138:	str	xzr, [x19]
   2013c:	mov	w0, #0xc                   	// #12
   20140:	b	20128 <printf_parse@@Base+0x2cf8>
   20144:	stp	xzr, xzr, [x19]
   20148:	str	xzr, [x19, #16]
   2014c:	mov	w0, #0x0                   	// #0
   20150:	b	20128 <printf_parse@@Base+0x2cf8>
   20154:	stp	x29, x30, [sp, #-64]!
   20158:	mov	x29, sp
   2015c:	stp	x19, x20, [sp, #16]
   20160:	stp	x21, x22, [sp, #32]
   20164:	mov	x21, x0
   20168:	mov	x19, x2
   2016c:	cbz	x1, 2018c <printf_parse@@Base+0x2d5c>
   20170:	mov	x20, x1
   20174:	ldr	x0, [x1, #8]
   20178:	cmp	x0, #0x0
   2017c:	ccmp	x2, #0x0, #0x4, gt
   20180:	b.ne	201b8 <printf_parse@@Base+0x2d88>  // b.any
   20184:	cmp	x0, #0x0
   20188:	b.gt	201c4 <printf_parse@@Base+0x2d94>
   2018c:	cbz	x19, 2019c <printf_parse@@Base+0x2d6c>
   20190:	ldr	x0, [x19, #8]
   20194:	cmp	x0, #0x0
   20198:	b.gt	20244 <printf_parse@@Base+0x2e14>
   2019c:	stp	xzr, xzr, [x21]
   201a0:	str	xzr, [x21, #16]
   201a4:	mov	w0, #0x0                   	// #0
   201a8:	ldp	x19, x20, [sp, #16]
   201ac:	ldp	x21, x22, [sp, #32]
   201b0:	ldp	x29, x30, [sp], #64
   201b4:	ret
   201b8:	ldr	x1, [x2, #8]
   201bc:	cmp	x1, #0x0
   201c0:	b.gt	201d4 <printf_parse@@Base+0x2da4>
   201c4:	mov	x1, x20
   201c8:	mov	x0, x21
   201cc:	bl	200dc <printf_parse@@Base+0x2cac>
   201d0:	b	201a8 <printf_parse@@Base+0x2d78>
   201d4:	add	x0, x0, x1
   201d8:	str	x0, [x21]
   201dc:	lsl	x0, x0, #3
   201e0:	bl	a5f0 <malloc@plt>
   201e4:	str	x0, [x21, #16]
   201e8:	cbz	x0, 202f4 <printf_parse@@Base+0x2ec4>
   201ec:	stp	x23, x24, [sp, #48]
   201f0:	ldr	x2, [x20, #8]
   201f4:	mov	x0, #0x0                   	// #0
   201f8:	mov	x22, #0x0                   	// #0
   201fc:	mov	x23, #0x0                   	// #0
   20200:	mov	x24, #0x0                   	// #0
   20204:	cmp	x2, #0x0
   20208:	b.gt	20274 <printf_parse@@Base+0x2e44>
   2020c:	ldr	x1, [x19, #8]
   20210:	cmp	x1, x22
   20214:	b.le	202e4 <printf_parse@@Base+0x2eb4>
   20218:	ldr	x0, [x21, #16]
   2021c:	sub	x2, x1, x22
   20220:	ldr	x1, [x19, #16]
   20224:	lsl	x2, x2, #3
   20228:	add	x1, x1, x22, lsl #3
   2022c:	add	x0, x0, x24, lsl #3
   20230:	bl	a2c0 <memcpy@plt>
   20234:	ldr	x0, [x19, #8]
   20238:	sub	x22, x0, x22
   2023c:	add	x24, x24, x22
   20240:	b	202e4 <printf_parse@@Base+0x2eb4>
   20244:	mov	x1, x19
   20248:	mov	x0, x21
   2024c:	bl	200dc <printf_parse@@Base+0x2cac>
   20250:	b	201a8 <printf_parse@@Base+0x2d78>
   20254:	add	x22, x22, #0x1
   20258:	add	x24, x0, #0x1
   2025c:	ldr	x1, [x21, #16]
   20260:	str	x2, [x1, x0, lsl #3]
   20264:	ldr	x2, [x20, #8]
   20268:	add	x0, x0, #0x1
   2026c:	cmp	x23, x2
   20270:	b.ge	2020c <printf_parse@@Base+0x2ddc>  // b.tcont
   20274:	mov	x24, x0
   20278:	ldr	x1, [x19, #8]
   2027c:	cmp	x1, x22
   20280:	b.le	202b4 <printf_parse@@Base+0x2e84>
   20284:	ldr	x1, [x20, #16]
   20288:	ldr	x1, [x1, x23, lsl #3]
   2028c:	ldr	x2, [x19, #16]
   20290:	ldr	x2, [x2, x22, lsl #3]
   20294:	cmp	x1, x2
   20298:	b.gt	20254 <printf_parse@@Base+0x2e24>
   2029c:	cinc	x22, x22, eq  // eq = none
   202a0:	add	x23, x23, #0x1
   202a4:	add	x24, x0, #0x1
   202a8:	ldr	x2, [x21, #16]
   202ac:	str	x1, [x2, x0, lsl #3]
   202b0:	b	20264 <printf_parse@@Base+0x2e34>
   202b4:	cmp	x2, x23
   202b8:	b.le	202e4 <printf_parse@@Base+0x2eb4>
   202bc:	ldr	x3, [x21, #16]
   202c0:	sub	x2, x2, x23
   202c4:	ldr	x1, [x20, #16]
   202c8:	lsl	x2, x2, #3
   202cc:	add	x1, x1, x23, lsl #3
   202d0:	add	x0, x3, x0, lsl #3
   202d4:	bl	a2c0 <memcpy@plt>
   202d8:	ldr	x0, [x20, #8]
   202dc:	sub	x23, x0, x23
   202e0:	add	x24, x24, x23
   202e4:	str	x24, [x21, #8]
   202e8:	mov	w0, #0x0                   	// #0
   202ec:	ldp	x23, x24, [sp, #48]
   202f0:	b	201a8 <printf_parse@@Base+0x2d78>
   202f4:	mov	w0, #0xc                   	// #12
   202f8:	b	201a8 <printf_parse@@Base+0x2d78>
   202fc:	stp	x29, x30, [sp, #-48]!
   20300:	mov	x29, sp
   20304:	stp	x19, x20, [sp, #16]
   20308:	mov	x19, x1
   2030c:	ldr	x1, [x1, #8]
   20310:	cbz	x1, 20498 <printf_parse@@Base+0x3068>
   20314:	stp	x21, x22, [sp, #32]
   20318:	mov	x21, x0
   2031c:	mov	x20, x2
   20320:	ldr	x2, [x2, #8]
   20324:	mov	w0, #0x0                   	// #0
   20328:	cbz	x2, 204ac <printf_parse@@Base+0x307c>
   2032c:	add	x1, x1, x2
   20330:	ldr	x22, [x21]
   20334:	ldr	x0, [x21, #8]
   20338:	add	x0, x1, x0
   2033c:	cmp	x0, x22
   20340:	b.gt	20368 <printf_parse@@Base+0x2f38>
   20344:	ldr	x3, [x21, #8]
   20348:	ldr	x5, [x19, #8]
   2034c:	ldr	x6, [x20, #8]
   20350:	add	x1, x3, x5
   20354:	add	x1, x1, x6
   20358:	sub	x5, x5, #0x1
   2035c:	sub	x6, x6, #0x1
   20360:	sub	x3, x3, #0x1
   20364:	b	203e0 <printf_parse@@Base+0x2fb0>
   20368:	add	x22, x1, x22
   2036c:	lsl	x1, x22, #3
   20370:	ldr	x0, [x21, #16]
   20374:	bl	a7e0 <realloc@plt>
   20378:	cbz	x0, 204a0 <printf_parse@@Base+0x3070>
   2037c:	str	x0, [x21, #16]
   20380:	str	x22, [x21]
   20384:	b	20344 <printf_parse@@Base+0x2f14>
   20388:	tbnz	x3, #63, 203a8 <printf_parse@@Base+0x2f78>
   2038c:	ldr	x2, [x21, #16]
   20390:	ldr	x0, [x2, x3, lsl #3]
   20394:	cmp	x4, x0
   20398:	b.ge	203c8 <printf_parse@@Base+0x2f98>  // b.tcont
   2039c:	sub	x3, x3, #0x1
   203a0:	cmn	x3, #0x1
   203a4:	b.ne	20390 <printf_parse@@Base+0x2f60>  // b.any
   203a8:	sub	x1, x1, #0x1
   203ac:	ldr	x0, [x21, #16]
   203b0:	str	x4, [x0, x1, lsl #3]
   203b4:	subs	x5, x5, #0x1
   203b8:	b.mi	20404 <printf_parse@@Base+0x2fd4>  // b.first
   203bc:	subs	x6, x6, #0x1
   203c0:	b.pl	203e0 <printf_parse@@Base+0x2fb0>  // b.nfrst
   203c4:	b	20404 <printf_parse@@Base+0x2fd4>
   203c8:	tbnz	x3, #63, 203a8 <printf_parse@@Base+0x2f78>
   203cc:	cmp	x4, x0
   203d0:	b.ne	203a8 <printf_parse@@Base+0x2f78>  // b.any
   203d4:	b	203b4 <printf_parse@@Base+0x2f84>
   203d8:	subs	x5, x5, #0x1
   203dc:	b.mi	20404 <printf_parse@@Base+0x2fd4>  // b.first
   203e0:	ldr	x0, [x19, #16]
   203e4:	ldr	x4, [x0, x5, lsl #3]
   203e8:	ldr	x0, [x20, #16]
   203ec:	ldr	x0, [x0, x6, lsl #3]
   203f0:	cmp	x4, x0
   203f4:	b.eq	20388 <printf_parse@@Base+0x2f58>  // b.none
   203f8:	b.ge	203d8 <printf_parse@@Base+0x2fa8>  // b.tcont
   203fc:	subs	x6, x6, #0x1
   20400:	b.pl	203e0 <printf_parse@@Base+0x2fb0>  // b.nfrst
   20404:	ldr	x0, [x21, #8]
   20408:	sub	x3, x0, #0x1
   2040c:	ldr	x2, [x19, #8]
   20410:	add	x2, x0, x2
   20414:	ldr	x4, [x20, #8]
   20418:	add	x2, x2, x4
   2041c:	sub	x6, x2, #0x1
   20420:	sub	x2, x2, x1
   20424:	add	x0, x0, x2
   20428:	str	x0, [x21, #8]
   2042c:	cmp	x2, #0x0
   20430:	ccmp	x3, #0x0, #0x1, gt
   20434:	b.ge	2046c <printf_parse@@Base+0x303c>  // b.tcont
   20438:	ldr	x0, [x21, #16]
   2043c:	lsl	x2, x2, #3
   20440:	add	x1, x0, x1, lsl #3
   20444:	bl	a2c0 <memcpy@plt>
   20448:	mov	w0, #0x0                   	// #0
   2044c:	ldp	x21, x22, [sp, #32]
   20450:	ldp	x19, x20, [sp, #16]
   20454:	ldp	x29, x30, [sp], #48
   20458:	ret
   2045c:	add	x5, x3, x2
   20460:	str	x4, [x0, x5, lsl #3]
   20464:	subs	x3, x3, #0x1
   20468:	b.mi	20438 <printf_parse@@Base+0x3008>  // b.first
   2046c:	ldr	x0, [x21, #16]
   20470:	ldr	x5, [x0, x6, lsl #3]
   20474:	ldr	x4, [x0, x3, lsl #3]
   20478:	cmp	x5, x4
   2047c:	b.le	2045c <printf_parse@@Base+0x302c>
   20480:	sub	x6, x6, #0x1
   20484:	add	x4, x3, x2
   20488:	str	x5, [x0, x4, lsl #3]
   2048c:	subs	x2, x2, #0x1
   20490:	b.ne	2046c <printf_parse@@Base+0x303c>  // b.any
   20494:	b	20438 <printf_parse@@Base+0x3008>
   20498:	mov	w0, #0x0                   	// #0
   2049c:	b	20450 <printf_parse@@Base+0x3020>
   204a0:	mov	w0, #0xc                   	// #12
   204a4:	ldp	x21, x22, [sp, #32]
   204a8:	b	20450 <printf_parse@@Base+0x3020>
   204ac:	ldp	x21, x22, [sp, #32]
   204b0:	b	20450 <printf_parse@@Base+0x3020>
   204b4:	stp	x29, x30, [sp, #-32]!
   204b8:	mov	x29, sp
   204bc:	stp	x19, x20, [sp, #16]
   204c0:	mov	x20, x0
   204c4:	tbnz	x1, #63, 2050c <printf_parse@@Base+0x30dc>
   204c8:	ldr	x0, [x0, #88]
   204cc:	cmp	x0, x1
   204d0:	b.eq	20514 <printf_parse@@Base+0x30e4>  // b.none
   204d4:	ldr	w0, [x20, #144]
   204d8:	cmp	w0, #0x1
   204dc:	b.le	20570 <printf_parse@@Base+0x3140>
   204e0:	ldr	x0, [x20, #16]
   204e4:	ldr	w19, [x0, x1, lsl #2]
   204e8:	cmn	w19, #0x1
   204ec:	b.ne	20528 <printf_parse@@Base+0x30f8>  // b.any
   204f0:	sub	x1, x1, #0x1
   204f4:	cmn	x1, #0x1
   204f8:	b.ne	204e4 <printf_parse@@Base+0x30b4>  // b.any
   204fc:	ldr	w0, [x20, #112]
   20500:	ldp	x19, x20, [sp, #16]
   20504:	ldp	x29, x30, [sp], #32
   20508:	ret
   2050c:	ldr	w0, [x0, #112]
   20510:	b	20500 <printf_parse@@Base+0x30d0>
   20514:	tst	x2, #0x2
   20518:	mov	w0, #0x8                   	// #8
   2051c:	mov	w1, #0xa                   	// #10
   20520:	csel	w0, w0, w1, ne  // ne = any
   20524:	b	20500 <printf_parse@@Base+0x30d0>
   20528:	ldrb	w0, [x20, #142]
   2052c:	cbnz	w0, 20550 <printf_parse@@Base+0x3120>
   20530:	mov	w0, #0x0                   	// #0
   20534:	cmp	w19, #0xa
   20538:	b.ne	20500 <printf_parse@@Base+0x30d0>  // b.any
   2053c:	ldrb	w0, [x20, #141]
   20540:	cmp	w0, #0x0
   20544:	cset	w0, ne  // ne = any
   20548:	lsl	w0, w0, #1
   2054c:	b	20500 <printf_parse@@Base+0x30d0>
   20550:	mov	w0, w19
   20554:	bl	ad30 <iswalnum@plt>
   20558:	mov	w1, w0
   2055c:	cmp	w19, #0x5f
   20560:	mov	w0, #0x1                   	// #1
   20564:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   20568:	b.ne	20500 <printf_parse@@Base+0x30d0>  // b.any
   2056c:	b	20530 <printf_parse@@Base+0x3100>
   20570:	ldr	x0, [x20, #8]
   20574:	ldrb	w2, [x0, x1]
   20578:	ubfx	x1, x2, #6, #2
   2057c:	ldr	x0, [x20, #128]
   20580:	ldr	x1, [x0, x1, lsl #3]
   20584:	lsr	x1, x1, x2
   20588:	mov	w0, #0x1                   	// #1
   2058c:	tbnz	w1, #0, 20500 <printf_parse@@Base+0x30d0>
   20590:	mov	w0, #0x0                   	// #0
   20594:	cmp	w2, #0xa
   20598:	b.ne	20500 <printf_parse@@Base+0x30d0>  // b.any
   2059c:	ldrb	w0, [x20, #141]
   205a0:	cmp	w0, #0x0
   205a4:	cset	w0, ne  // ne = any
   205a8:	lsl	w0, w0, #1
   205ac:	b	20500 <printf_parse@@Base+0x30d0>
   205b0:	stp	x29, x30, [sp, #-32]!
   205b4:	mov	x29, sp
   205b8:	str	x19, [sp, #16]
   205bc:	mov	x4, x0
   205c0:	mov	x19, x1
   205c4:	mov	x1, x2
   205c8:	ldr	x0, [x0, #8]
   205cc:	ldrb	w2, [x0, x2]
   205d0:	ldrb	w3, [x19, #8]
   205d4:	cmp	w3, #0x5
   205d8:	b.eq	20660 <printf_parse@@Base+0x3230>  // b.none
   205dc:	b.hi	2064c <printf_parse@@Base+0x321c>  // b.pmore
   205e0:	cmp	w3, #0x1
   205e4:	b.eq	20680 <printf_parse@@Base+0x3250>  // b.none
   205e8:	mov	w0, #0x0                   	// #0
   205ec:	cmp	w3, #0x3
   205f0:	b.ne	206c8 <printf_parse@@Base+0x3298>  // b.any
   205f4:	ubfx	x3, x2, #6, #2
   205f8:	ldr	x0, [x19]
   205fc:	ldr	x0, [x0, x3, lsl #3]
   20600:	lsr	x2, x0, x2
   20604:	mov	w0, #0x0                   	// #0
   20608:	tbz	w2, #0, 206c8 <printf_parse@@Base+0x3298>
   2060c:	ldr	w2, [x19, #8]
   20610:	mov	w0, #0x1                   	// #1
   20614:	tst	w2, #0x3ff00
   20618:	b.eq	206c8 <printf_parse@@Base+0x3298>  // b.none
   2061c:	ldr	w2, [x4, #160]
   20620:	mov	x0, x4
   20624:	bl	204b4 <printf_parse@@Base+0x3084>
   20628:	mov	w1, w0
   2062c:	ldr	w0, [x19, #8]
   20630:	ubfx	x2, x0, #8, #10
   20634:	tbz	w0, #10, 206a8 <printf_parse@@Base+0x3278>
   20638:	mov	w0, #0x0                   	// #0
   2063c:	tbz	w1, #0, 206c8 <printf_parse@@Base+0x3298>
   20640:	mov	w0, #0x0                   	// #0
   20644:	tbz	w2, #3, 206b0 <printf_parse@@Base+0x3280>
   20648:	b	206c8 <printf_parse@@Base+0x3298>
   2064c:	mov	w0, #0x0                   	// #0
   20650:	cmp	w3, #0x7
   20654:	b.ne	206c8 <printf_parse@@Base+0x3298>  // b.any
   20658:	mov	w0, #0x0                   	// #0
   2065c:	tbnz	w2, #7, 206c8 <printf_parse@@Base+0x3298>
   20660:	cmp	w2, #0xa
   20664:	b.eq	20694 <printf_parse@@Base+0x3264>  // b.none
   20668:	cbnz	w2, 2060c <printf_parse@@Base+0x31dc>
   2066c:	ldr	x0, [x4, #152]
   20670:	ldr	x2, [x0, #216]
   20674:	mov	w0, #0x0                   	// #0
   20678:	tbz	w2, #7, 2060c <printf_parse@@Base+0x31dc>
   2067c:	b	206c8 <printf_parse@@Base+0x3298>
   20680:	ldrb	w3, [x19]
   20684:	mov	w0, #0x0                   	// #0
   20688:	cmp	w3, w2
   2068c:	b.ne	206c8 <printf_parse@@Base+0x3298>  // b.any
   20690:	b	2060c <printf_parse@@Base+0x31dc>
   20694:	ldr	x0, [x4, #152]
   20698:	ldr	x2, [x0, #216]
   2069c:	mov	w0, #0x0                   	// #0
   206a0:	tbnz	w2, #6, 2060c <printf_parse@@Base+0x31dc>
   206a4:	b	206c8 <printf_parse@@Base+0x3298>
   206a8:	tbz	w2, #3, 206b0 <printf_parse@@Base+0x3280>
   206ac:	tbnz	w1, #0, 206d4 <printf_parse@@Base+0x32a4>
   206b0:	tbz	w2, #5, 206bc <printf_parse@@Base+0x328c>
   206b4:	mov	w0, #0x0                   	// #0
   206b8:	tbz	w1, #1, 206c8 <printf_parse@@Base+0x3298>
   206bc:	ubfx	x0, x1, #3, #1
   206c0:	tst	x2, #0x80
   206c4:	csinc	w0, w0, wzr, ne  // ne = any
   206c8:	ldr	x19, [sp, #16]
   206cc:	ldp	x29, x30, [sp], #32
   206d0:	ret
   206d4:	mov	w0, #0x0                   	// #0
   206d8:	b	206c8 <printf_parse@@Base+0x3298>
   206dc:	stp	x29, x30, [sp, #-32]!
   206e0:	mov	x29, sp
   206e4:	stp	x19, x20, [sp, #16]
   206e8:	mov	x19, x0
   206ec:	mov	x20, x1
   206f0:	mov	x1, x2
   206f4:	ldr	w2, [x0, #160]
   206f8:	bl	204b4 <printf_parse@@Base+0x3084>
   206fc:	ldr	x4, [x20, #16]
   20700:	cmp	x4, #0x0
   20704:	b.le	2074c <printf_parse@@Base+0x331c>
   20708:	ldr	x6, [x20, #24]
   2070c:	ldr	x1, [x19, #152]
   20710:	ldr	x5, [x1]
   20714:	mov	x2, #0x0                   	// #0
   20718:	and	w9, w0, #0x8
   2071c:	and	w8, w0, #0x2
   20720:	and	w7, w0, #0x1
   20724:	b	20760 <printf_parse@@Base+0x3330>
   20728:	tbz	w1, #3, 20730 <printf_parse@@Base+0x3300>
   2072c:	cbnz	w7, 20754 <printf_parse@@Base+0x3324>
   20730:	tbz	w1, #5, 20738 <printf_parse@@Base+0x3308>
   20734:	cbz	w8, 20754 <printf_parse@@Base+0x3324>
   20738:	tbz	w1, #7, 20740 <printf_parse@@Base+0x3310>
   2073c:	cbz	w9, 20754 <printf_parse@@Base+0x3324>
   20740:	ldp	x19, x20, [sp, #16]
   20744:	ldp	x29, x30, [sp], #32
   20748:	ret
   2074c:	mov	x0, #0x0                   	// #0
   20750:	b	20740 <printf_parse@@Base+0x3310>
   20754:	add	x2, x2, #0x1
   20758:	cmp	x4, x2
   2075c:	b.eq	20790 <printf_parse@@Base+0x3360>  // b.none
   20760:	ldr	x0, [x6, x2, lsl #3]
   20764:	add	x3, x5, x0, lsl #4
   20768:	ldr	w1, [x3, #8]
   2076c:	ubfx	x1, x1, #8, #10
   20770:	ldrb	w3, [x3, #8]
   20774:	cmp	w3, #0x2
   20778:	b.ne	20754 <printf_parse@@Base+0x3324>  // b.any
   2077c:	cbz	w1, 20740 <printf_parse@@Base+0x3310>
   20780:	tbz	w1, #2, 20728 <printf_parse@@Base+0x32f8>
   20784:	cbz	w7, 20754 <printf_parse@@Base+0x3324>
   20788:	tbz	w1, #3, 20730 <printf_parse@@Base+0x3300>
   2078c:	b	20754 <printf_parse@@Base+0x3324>
   20790:	mov	x0, #0x0                   	// #0
   20794:	b	20740 <printf_parse@@Base+0x3310>
   20798:	stp	x29, x30, [sp, #-80]!
   2079c:	mov	x29, sp
   207a0:	stp	x19, x20, [sp, #16]
   207a4:	stp	x21, x22, [sp, #32]
   207a8:	mov	x21, x0
   207ac:	mov	x19, x1
   207b0:	ldr	x1, [x1, #72]
   207b4:	ldr	x3, [x19, #104]
   207b8:	cmp	x3, x1
   207bc:	b.le	208a4 <printf_parse@@Base+0x3474>
   207c0:	mov	x22, x2
   207c4:	ldr	x0, [x19, #8]
   207c8:	ldrb	w20, [x0, x1]
   207cc:	strb	w20, [x21]
   207d0:	ldrb	w1, [x21, #10]
   207d4:	and	w1, w1, #0xffffff9f
   207d8:	strb	w1, [x21, #10]
   207dc:	ldr	w0, [x19, #144]
   207e0:	cmp	w0, #0x1
   207e4:	b.le	20808 <printf_parse@@Base+0x33d8>
   207e8:	ldr	x1, [x19, #72]
   207ec:	ldr	x2, [x19, #48]
   207f0:	cmp	x1, x2
   207f4:	b.eq	20808 <printf_parse@@Base+0x33d8>  // b.none
   207f8:	ldr	x2, [x19, #16]
   207fc:	ldr	w1, [x2, x1, lsl #2]
   20800:	cmn	w1, #0x1
   20804:	b.eq	208c0 <printf_parse@@Base+0x3490>  // b.none
   20808:	cmp	w20, #0x5c
   2080c:	b.eq	208dc <printf_parse@@Base+0x34ac>  // b.none
   20810:	mov	w0, #0x1                   	// #1
   20814:	strb	w0, [x21, #8]
   20818:	ldr	w0, [x19, #144]
   2081c:	cmp	w0, #0x1
   20820:	b.le	20c4c <printf_parse@@Base+0x381c>
   20824:	str	x23, [sp, #48]
   20828:	ldr	x1, [x19, #72]
   2082c:	mov	x0, x19
   20830:	bl	1df58 <printf_parse@@Base+0xb28>
   20834:	mov	w23, w0
   20838:	bl	ad30 <iswalnum@plt>
   2083c:	cmp	w23, #0x5f
   20840:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   20844:	cset	w1, ne  // ne = any
   20848:	ldrb	w0, [x21, #10]
   2084c:	bfi	w0, w1, #6, #1
   20850:	strb	w0, [x21, #10]
   20854:	ldr	x23, [sp, #48]
   20858:	cmp	w20, #0x2e
   2085c:	b.eq	20e08 <printf_parse@@Base+0x39d8>  // b.none
   20860:	b.ls	20c7c <printf_parse@@Base+0x384c>  // b.plast
   20864:	cmp	w20, #0x7b
   20868:	b.eq	20dc0 <printf_parse@@Base+0x3990>  // b.none
   2086c:	b.ls	20d08 <printf_parse@@Base+0x38d8>  // b.plast
   20870:	cmp	w20, #0x7c
   20874:	b.eq	20d8c <printf_parse@@Base+0x395c>  // b.none
   20878:	mov	w0, #0x1                   	// #1
   2087c:	cmp	w20, #0x7d
   20880:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20884:	mov	w0, #0x1                   	// #1
   20888:	mov	x1, #0x1200                	// #4608
   2088c:	bics	xzr, x1, x22
   20890:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20894:	mov	w0, #0x18                  	// #24
   20898:	strb	w0, [x21, #8]
   2089c:	mov	w0, #0x1                   	// #1
   208a0:	b	208b0 <printf_parse@@Base+0x3480>
   208a4:	mov	w0, #0x2                   	// #2
   208a8:	strb	w0, [x21, #8]
   208ac:	mov	w0, #0x0                   	// #0
   208b0:	ldp	x19, x20, [sp, #16]
   208b4:	ldp	x21, x22, [sp, #32]
   208b8:	ldp	x29, x30, [sp], #80
   208bc:	ret
   208c0:	mov	w0, #0x1                   	// #1
   208c4:	strb	w0, [x21, #8]
   208c8:	ldrb	w0, [x21, #10]
   208cc:	orr	w0, w0, #0x20
   208d0:	strb	w0, [x21, #10]
   208d4:	mov	w0, #0x1                   	// #1
   208d8:	b	208b0 <printf_parse@@Base+0x3480>
   208dc:	ldr	x2, [x19, #72]
   208e0:	add	x1, x2, #0x1
   208e4:	ldr	x3, [x19, #88]
   208e8:	cmp	x1, x3
   208ec:	b.lt	20900 <printf_parse@@Base+0x34d0>  // b.tstop
   208f0:	mov	w0, #0x24                  	// #36
   208f4:	strb	w0, [x21, #8]
   208f8:	mov	w0, #0x1                   	// #1
   208fc:	b	208b0 <printf_parse@@Base+0x3480>
   20900:	ldrb	w3, [x19, #139]
   20904:	cbnz	w3, 2097c <printf_parse@@Base+0x354c>
   20908:	ldr	x0, [x19, #8]
   2090c:	ldrb	w20, [x0, x1]
   20910:	strb	w20, [x21]
   20914:	mov	w0, #0x1                   	// #1
   20918:	strb	w0, [x21, #8]
   2091c:	ldr	w0, [x19, #144]
   20920:	cmp	w0, #0x1
   20924:	b.le	209f8 <printf_parse@@Base+0x35c8>
   20928:	ldr	x1, [x19, #72]
   2092c:	add	x1, x1, #0x1
   20930:	mov	x0, x19
   20934:	bl	1df58 <printf_parse@@Base+0xb28>
   20938:	mov	w19, w0
   2093c:	bl	ad30 <iswalnum@plt>
   20940:	cmp	w19, #0x5f
   20944:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   20948:	cset	w1, ne  // ne = any
   2094c:	ldrb	w0, [x21, #10]
   20950:	bfi	w0, w1, #6, #1
   20954:	strb	w0, [x21, #10]
   20958:	sub	w0, w20, #0x27
   2095c:	cmp	w0, #0x56
   20960:	b.hi	20e84 <printf_parse@@Base+0x3a54>  // b.pmore
   20964:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   20968:	add	x1, x1, #0xc08
   2096c:	ldrh	w0, [x1, w0, uxtw #1]
   20970:	adr	x1, 2097c <printf_parse@@Base+0x354c>
   20974:	add	x0, x1, w0, sxth #2
   20978:	br	x0
   2097c:	cmp	w0, #0x1
   20980:	b.le	209b8 <printf_parse@@Base+0x3588>
   20984:	ldr	x0, [x19, #16]
   20988:	lsl	x4, x1, #2
   2098c:	ldr	w3, [x0, x1, lsl #2]
   20990:	cmn	w3, #0x1
   20994:	b.eq	209ec <printf_parse@@Base+0x35bc>  // b.none
   20998:	add	x2, x2, #0x2
   2099c:	ldr	x3, [x19, #48]
   209a0:	cmp	x3, x2
   209a4:	b.eq	209b8 <printf_parse@@Base+0x3588>  // b.none
   209a8:	add	x0, x0, x4
   209ac:	ldr	w0, [x0, #4]
   209b0:	cmn	w0, #0x1
   209b4:	b.eq	209ec <printf_parse@@Base+0x35bc>  // b.none
   209b8:	ldrb	w0, [x19, #140]
   209bc:	cbz	w0, 20e8c <printf_parse@@Base+0x3a5c>
   209c0:	ldr	x2, [x19, #24]
   209c4:	ldr	x0, [x19]
   209c8:	ldr	x3, [x2, x1, lsl #3]
   209cc:	ldr	x2, [x19, #40]
   209d0:	add	x0, x0, x3
   209d4:	ldrb	w20, [x0, x2]
   209d8:	tst	w20, #0xffffff80
   209dc:	b.eq	20910 <printf_parse@@Base+0x34e0>  // b.none
   209e0:	ldr	x0, [x19, #8]
   209e4:	ldrb	w20, [x0, x1]
   209e8:	b	20910 <printf_parse@@Base+0x34e0>
   209ec:	ldr	x0, [x19, #8]
   209f0:	ldrb	w20, [x0, x1]
   209f4:	b	20910 <printf_parse@@Base+0x34e0>
   209f8:	bl	a9d0 <__ctype_b_loc@plt>
   209fc:	and	x1, x20, #0xff
   20a00:	ldr	x0, [x0]
   20a04:	ldrh	w0, [x0, x1, lsl #1]
   20a08:	and	w0, w0, #0x8
   20a0c:	cmp	w20, #0x5f
   20a10:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   20a14:	cset	w1, ne  // ne = any
   20a18:	ldrb	w0, [x21, #10]
   20a1c:	bfi	w0, w1, #6, #1
   20a20:	strb	w0, [x21, #10]
   20a24:	b	20958 <printf_parse@@Base+0x3528>
   20a28:	mov	w0, #0x2                   	// #2
   20a2c:	mov	x1, #0x8400                	// #33792
   20a30:	tst	x22, x1
   20a34:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20a38:	mov	w0, #0xa                   	// #10
   20a3c:	strb	w0, [x21, #8]
   20a40:	mov	w0, #0x2                   	// #2
   20a44:	b	208b0 <printf_parse@@Base+0x3480>
   20a48:	mov	w0, #0x2                   	// #2
   20a4c:	tbnz	w22, #14, 208b0 <printf_parse@@Base+0x3480>
   20a50:	mov	w0, #0x4                   	// #4
   20a54:	strb	w0, [x21, #8]
   20a58:	sub	w0, w20, #0x31
   20a5c:	sxtw	x0, w0
   20a60:	str	x0, [x21]
   20a64:	mov	w0, #0x2                   	// #2
   20a68:	b	208b0 <printf_parse@@Base+0x3480>
   20a6c:	mov	w0, #0x2                   	// #2
   20a70:	tbnz	w22, #19, 208b0 <printf_parse@@Base+0x3480>
   20a74:	mov	w0, #0xc                   	// #12
   20a78:	strb	w0, [x21, #8]
   20a7c:	mov	w0, #0x6                   	// #6
   20a80:	str	w0, [x21]
   20a84:	mov	w0, #0x2                   	// #2
   20a88:	b	208b0 <printf_parse@@Base+0x3480>
   20a8c:	mov	w0, #0x2                   	// #2
   20a90:	tbnz	w22, #19, 208b0 <printf_parse@@Base+0x3480>
   20a94:	mov	w0, #0xc                   	// #12
   20a98:	strb	w0, [x21, #8]
   20a9c:	mov	w0, #0x9                   	// #9
   20aa0:	str	w0, [x21]
   20aa4:	mov	w0, #0x2                   	// #2
   20aa8:	b	208b0 <printf_parse@@Base+0x3480>
   20aac:	mov	w0, #0x2                   	// #2
   20ab0:	tbnz	w22, #19, 208b0 <printf_parse@@Base+0x3480>
   20ab4:	mov	w0, #0xc                   	// #12
   20ab8:	strb	w0, [x21, #8]
   20abc:	mov	w0, #0x100                 	// #256
   20ac0:	str	w0, [x21]
   20ac4:	mov	w0, #0x2                   	// #2
   20ac8:	b	208b0 <printf_parse@@Base+0x3480>
   20acc:	mov	w0, #0x2                   	// #2
   20ad0:	tbnz	w22, #19, 208b0 <printf_parse@@Base+0x3480>
   20ad4:	mov	w0, #0xc                   	// #12
   20ad8:	strb	w0, [x21, #8]
   20adc:	mov	w0, #0x200                 	// #512
   20ae0:	str	w0, [x21]
   20ae4:	mov	w0, #0x2                   	// #2
   20ae8:	b	208b0 <printf_parse@@Base+0x3480>
   20aec:	mov	w0, #0x2                   	// #2
   20af0:	tbnz	w22, #19, 208b0 <printf_parse@@Base+0x3480>
   20af4:	mov	w0, #0x20                  	// #32
   20af8:	strb	w0, [x21, #8]
   20afc:	mov	w0, #0x2                   	// #2
   20b00:	b	208b0 <printf_parse@@Base+0x3480>
   20b04:	mov	w0, #0x2                   	// #2
   20b08:	tbnz	w22, #19, 208b0 <printf_parse@@Base+0x3480>
   20b0c:	mov	w0, #0x21                  	// #33
   20b10:	strb	w0, [x21, #8]
   20b14:	mov	w0, #0x2                   	// #2
   20b18:	b	208b0 <printf_parse@@Base+0x3480>
   20b1c:	mov	w0, #0x2                   	// #2
   20b20:	tbnz	w22, #19, 208b0 <printf_parse@@Base+0x3480>
   20b24:	mov	w0, #0x22                  	// #34
   20b28:	strb	w0, [x21, #8]
   20b2c:	mov	w0, #0x2                   	// #2
   20b30:	b	208b0 <printf_parse@@Base+0x3480>
   20b34:	mov	w0, #0x2                   	// #2
   20b38:	tbnz	w22, #19, 208b0 <printf_parse@@Base+0x3480>
   20b3c:	mov	w0, #0x23                  	// #35
   20b40:	strb	w0, [x21, #8]
   20b44:	mov	w0, #0x2                   	// #2
   20b48:	b	208b0 <printf_parse@@Base+0x3480>
   20b4c:	mov	w0, #0x2                   	// #2
   20b50:	tbnz	w22, #19, 208b0 <printf_parse@@Base+0x3480>
   20b54:	mov	w0, #0xc                   	// #12
   20b58:	strb	w0, [x21, #8]
   20b5c:	mov	w0, #0x40                  	// #64
   20b60:	str	w0, [x21]
   20b64:	mov	w0, #0x2                   	// #2
   20b68:	b	208b0 <printf_parse@@Base+0x3480>
   20b6c:	mov	w0, #0x2                   	// #2
   20b70:	tbnz	w22, #19, 208b0 <printf_parse@@Base+0x3480>
   20b74:	mov	w0, #0xc                   	// #12
   20b78:	strb	w0, [x21, #8]
   20b7c:	mov	w0, #0x80                  	// #128
   20b80:	str	w0, [x21]
   20b84:	mov	w0, #0x2                   	// #2
   20b88:	b	208b0 <printf_parse@@Base+0x3480>
   20b8c:	mov	w0, #0x2                   	// #2
   20b90:	tbnz	w22, #13, 208b0 <printf_parse@@Base+0x3480>
   20b94:	mov	w0, #0x8                   	// #8
   20b98:	strb	w0, [x21, #8]
   20b9c:	mov	w0, #0x2                   	// #2
   20ba0:	b	208b0 <printf_parse@@Base+0x3480>
   20ba4:	mov	w0, #0x2                   	// #2
   20ba8:	tbnz	w22, #13, 208b0 <printf_parse@@Base+0x3480>
   20bac:	mov	w0, #0x9                   	// #9
   20bb0:	strb	w0, [x21, #8]
   20bb4:	mov	w0, #0x2                   	// #2
   20bb8:	b	208b0 <printf_parse@@Base+0x3480>
   20bbc:	mov	x2, #0x402                 	// #1026
   20bc0:	and	x2, x22, x2
   20bc4:	mov	w0, #0x2                   	// #2
   20bc8:	cmp	x2, #0x2
   20bcc:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20bd0:	mov	w0, #0x12                  	// #18
   20bd4:	strb	w0, [x21, #8]
   20bd8:	mov	w0, #0x2                   	// #2
   20bdc:	b	208b0 <printf_parse@@Base+0x3480>
   20be0:	mov	x2, #0x402                 	// #1026
   20be4:	and	x2, x22, x2
   20be8:	mov	w0, #0x2                   	// #2
   20bec:	cmp	x2, #0x2
   20bf0:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20bf4:	mov	w0, #0x13                  	// #19
   20bf8:	strb	w0, [x21, #8]
   20bfc:	mov	w0, #0x2                   	// #2
   20c00:	b	208b0 <printf_parse@@Base+0x3480>
   20c04:	mov	x2, #0x1200                	// #4608
   20c08:	and	x2, x22, x2
   20c0c:	mov	w0, #0x2                   	// #2
   20c10:	cmp	x2, #0x200
   20c14:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20c18:	mov	w0, #0x17                  	// #23
   20c1c:	strb	w0, [x21, #8]
   20c20:	mov	w0, #0x2                   	// #2
   20c24:	b	208b0 <printf_parse@@Base+0x3480>
   20c28:	mov	x2, #0x1200                	// #4608
   20c2c:	and	x2, x22, x2
   20c30:	mov	w0, #0x2                   	// #2
   20c34:	cmp	x2, #0x200
   20c38:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20c3c:	mov	w0, #0x18                  	// #24
   20c40:	strb	w0, [x21, #8]
   20c44:	mov	w0, #0x2                   	// #2
   20c48:	b	208b0 <printf_parse@@Base+0x3480>
   20c4c:	bl	a9d0 <__ctype_b_loc@plt>
   20c50:	and	x1, x20, #0xff
   20c54:	ldr	x0, [x0]
   20c58:	ldrh	w0, [x0, x1, lsl #1]
   20c5c:	and	w0, w0, #0x8
   20c60:	cmp	w20, #0x5f
   20c64:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   20c68:	cset	w1, ne  // ne = any
   20c6c:	ldrb	w0, [x21, #10]
   20c70:	bfi	w0, w1, #6, #1
   20c74:	strb	w0, [x21, #10]
   20c78:	b	20858 <printf_parse@@Base+0x3428>
   20c7c:	cmp	w20, #0x29
   20c80:	b.eq	20de0 <printf_parse@@Base+0x39b0>  // b.none
   20c84:	b.ls	20cbc <printf_parse@@Base+0x388c>  // b.plast
   20c88:	cmp	w20, #0x2a
   20c8c:	b.eq	20db0 <printf_parse@@Base+0x3980>  // b.none
   20c90:	mov	w0, #0x1                   	// #1
   20c94:	cmp	w20, #0x2b
   20c98:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20c9c:	mov	w0, #0x1                   	// #1
   20ca0:	mov	x1, #0x402                 	// #1026
   20ca4:	tst	x22, x1
   20ca8:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20cac:	mov	w0, #0x12                  	// #18
   20cb0:	strb	w0, [x21, #8]
   20cb4:	mov	w0, #0x1                   	// #1
   20cb8:	b	208b0 <printf_parse@@Base+0x3480>
   20cbc:	cmp	w20, #0x24
   20cc0:	b.eq	20e18 <printf_parse@@Base+0x39e8>  // b.none
   20cc4:	cmp	w20, #0x28
   20cc8:	b.ne	20ce4 <printf_parse@@Base+0x38b4>  // b.any
   20ccc:	mov	w0, #0x1                   	// #1
   20cd0:	tbz	w22, #13, 208b0 <printf_parse@@Base+0x3480>
   20cd4:	mov	w0, #0x8                   	// #8
   20cd8:	strb	w0, [x21, #8]
   20cdc:	mov	w0, #0x1                   	// #1
   20ce0:	b	208b0 <printf_parse@@Base+0x3480>
   20ce4:	mov	w0, #0x1                   	// #1
   20ce8:	cmp	w20, #0xa
   20cec:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20cf0:	mov	w0, #0x1                   	// #1
   20cf4:	tbz	w22, #11, 208b0 <printf_parse@@Base+0x3480>
   20cf8:	mov	w0, #0xa                   	// #10
   20cfc:	strb	w0, [x21, #8]
   20d00:	mov	w0, #0x1                   	// #1
   20d04:	b	208b0 <printf_parse@@Base+0x3480>
   20d08:	cmp	w20, #0x5b
   20d0c:	b.eq	20df8 <printf_parse@@Base+0x39c8>  // b.none
   20d10:	cmp	w20, #0x5e
   20d14:	b.ne	20d60 <printf_parse@@Base+0x3930>  // b.any
   20d18:	and	x0, x22, #0xfffff8
   20d1c:	and	x0, x0, #0xffffffffff80000f
   20d20:	cbnz	x0, 20d48 <printf_parse@@Base+0x3918>
   20d24:	ldr	x0, [x19, #72]
   20d28:	cbz	x0, 20d48 <printf_parse@@Base+0x3918>
   20d2c:	ldr	x1, [x19, #8]
   20d30:	add	x0, x1, x0
   20d34:	ldurb	w1, [x0, #-1]
   20d38:	tst	x22, #0x800
   20d3c:	mov	w0, #0x1                   	// #1
   20d40:	ccmp	w1, #0xa, #0x0, ne  // ne = any
   20d44:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20d48:	mov	w0, #0xc                   	// #12
   20d4c:	strb	w0, [x21, #8]
   20d50:	mov	w0, #0x10                  	// #16
   20d54:	str	w0, [x21]
   20d58:	mov	w0, #0x1                   	// #1
   20d5c:	b	208b0 <printf_parse@@Base+0x3480>
   20d60:	mov	w0, #0x1                   	// #1
   20d64:	cmp	w20, #0x3f
   20d68:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20d6c:	mov	w0, #0x1                   	// #1
   20d70:	mov	x1, #0x402                 	// #1026
   20d74:	tst	x22, x1
   20d78:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20d7c:	mov	w0, #0x13                  	// #19
   20d80:	strb	w0, [x21, #8]
   20d84:	mov	w0, #0x1                   	// #1
   20d88:	b	208b0 <printf_parse@@Base+0x3480>
   20d8c:	mov	x2, #0x8400                	// #33792
   20d90:	and	x2, x22, x2
   20d94:	mov	w0, #0x1                   	// #1
   20d98:	cmp	x2, #0x8, lsl #12
   20d9c:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20da0:	mov	w0, #0xa                   	// #10
   20da4:	strb	w0, [x21, #8]
   20da8:	mov	w0, #0x1                   	// #1
   20dac:	b	208b0 <printf_parse@@Base+0x3480>
   20db0:	mov	w0, #0xb                   	// #11
   20db4:	strb	w0, [x21, #8]
   20db8:	mov	w0, #0x1                   	// #1
   20dbc:	b	208b0 <printf_parse@@Base+0x3480>
   20dc0:	mov	w0, #0x1                   	// #1
   20dc4:	mov	x1, #0x1200                	// #4608
   20dc8:	bics	xzr, x1, x22
   20dcc:	b.ne	208b0 <printf_parse@@Base+0x3480>  // b.any
   20dd0:	mov	w0, #0x17                  	// #23
   20dd4:	strb	w0, [x21, #8]
   20dd8:	mov	w0, #0x1                   	// #1
   20ddc:	b	208b0 <printf_parse@@Base+0x3480>
   20de0:	mov	w0, #0x1                   	// #1
   20de4:	tbz	w22, #13, 208b0 <printf_parse@@Base+0x3480>
   20de8:	mov	w0, #0x9                   	// #9
   20dec:	strb	w0, [x21, #8]
   20df0:	mov	w0, #0x1                   	// #1
   20df4:	b	208b0 <printf_parse@@Base+0x3480>
   20df8:	mov	w0, #0x14                  	// #20
   20dfc:	strb	w0, [x21, #8]
   20e00:	mov	w0, #0x1                   	// #1
   20e04:	b	208b0 <printf_parse@@Base+0x3480>
   20e08:	mov	w0, #0x5                   	// #5
   20e0c:	strb	w0, [x21, #8]
   20e10:	mov	w0, #0x1                   	// #1
   20e14:	b	208b0 <printf_parse@@Base+0x3480>
   20e18:	tbnz	w22, #3, 20e30 <printf_parse@@Base+0x3a00>
   20e1c:	ldr	x0, [x19, #72]
   20e20:	add	x0, x0, #0x1
   20e24:	ldr	x1, [x19, #88]
   20e28:	cmp	x0, x1
   20e2c:	b.ne	20e48 <printf_parse@@Base+0x3a18>  // b.any
   20e30:	mov	w0, #0xc                   	// #12
   20e34:	strb	w0, [x21, #8]
   20e38:	mov	w0, #0x20                  	// #32
   20e3c:	str	w0, [x21]
   20e40:	mov	w0, #0x1                   	// #1
   20e44:	b	208b0 <printf_parse@@Base+0x3480>
   20e48:	str	x0, [x19, #72]
   20e4c:	mov	x2, x22
   20e50:	mov	x1, x19
   20e54:	add	x0, sp, #0x40
   20e58:	bl	20798 <printf_parse@@Base+0x3368>
   20e5c:	ldr	x0, [x19, #72]
   20e60:	sub	x0, x0, #0x1
   20e64:	str	x0, [x19, #72]
   20e68:	ldrb	w1, [sp, #72]
   20e6c:	sub	w1, w1, #0x9
   20e70:	and	w1, w1, #0xff
   20e74:	mov	w0, #0x1                   	// #1
   20e78:	cmp	w1, w0
   20e7c:	b.hi	208b0 <printf_parse@@Base+0x3480>  // b.pmore
   20e80:	b	20e30 <printf_parse@@Base+0x3a00>
   20e84:	mov	w0, #0x2                   	// #2
   20e88:	b	208b0 <printf_parse@@Base+0x3480>
   20e8c:	ldr	x0, [x19]
   20e90:	ldr	x2, [x19, #40]
   20e94:	add	x1, x0, x1
   20e98:	ldrb	w20, [x1, x2]
   20e9c:	b	20910 <printf_parse@@Base+0x34e0>
   20ea0:	stp	x29, x30, [sp, #-32]!
   20ea4:	mov	x29, sp
   20ea8:	str	x19, [sp, #16]
   20eac:	mov	x19, x1
   20eb0:	bl	20798 <printf_parse@@Base+0x3368>
   20eb4:	ldr	x1, [x19, #72]
   20eb8:	add	x0, x1, w0, sxtw
   20ebc:	str	x0, [x19, #72]
   20ec0:	ldr	x19, [sp, #16]
   20ec4:	ldp	x29, x30, [sp], #32
   20ec8:	ret
   20ecc:	stp	x29, x30, [sp, #-64]!
   20ed0:	mov	x29, sp
   20ed4:	stp	x19, x20, [sp, #16]
   20ed8:	stp	x21, x22, [sp, #32]
   20edc:	stp	x23, x24, [sp, #48]
   20ee0:	mov	x22, x0
   20ee4:	mov	x19, x1
   20ee8:	mov	x21, x2
   20eec:	mov	x20, #0xffffffffffffffff    	// #-1
   20ef0:	mov	x24, #0x8030                	// #32816
   20ef4:	mov	x23, #0xfffffffffffffffe    	// #-2
   20ef8:	b	20f00 <printf_parse@@Base+0x3ad0>
   20efc:	mov	x20, x23
   20f00:	mov	x2, x21
   20f04:	mov	x1, x22
   20f08:	mov	x0, x19
   20f0c:	bl	20ea0 <printf_parse@@Base+0x3a70>
   20f10:	ldrb	w1, [x19]
   20f14:	ldrb	w3, [x19, #8]
   20f18:	cmp	w3, #0x2
   20f1c:	b.eq	20f80 <printf_parse@@Base+0x3b50>  // b.none
   20f20:	cmp	w1, #0x2c
   20f24:	ccmp	w3, #0x18, #0x4, ne  // ne = any
   20f28:	b.eq	20f84 <printf_parse@@Base+0x3b54>  // b.none
   20f2c:	cmp	w3, #0x1
   20f30:	b.ne	20efc <printf_parse@@Base+0x3acc>  // b.any
   20f34:	sub	w0, w1, #0x30
   20f38:	and	w0, w0, #0xff
   20f3c:	cmp	w0, #0x9
   20f40:	ccmn	x20, #0x2, #0x4, ls  // ls = plast
   20f44:	b.ne	20f50 <printf_parse@@Base+0x3b20>  // b.any
   20f48:	mov	x20, x23
   20f4c:	b	20f00 <printf_parse@@Base+0x3ad0>
   20f50:	cmn	x20, #0x1
   20f54:	b.eq	20f74 <printf_parse@@Base+0x3b44>  // b.none
   20f58:	add	x20, x20, x20, lsl #2
   20f5c:	and	x1, x1, #0xff
   20f60:	add	x1, x1, x20, lsl #1
   20f64:	cmp	x1, x24
   20f68:	csel	x1, x1, x24, le
   20f6c:	sub	x20, x1, #0x30
   20f70:	b	20f00 <printf_parse@@Base+0x3ad0>
   20f74:	sub	w1, w1, #0x30
   20f78:	sxtw	x20, w1
   20f7c:	b	20f00 <printf_parse@@Base+0x3ad0>
   20f80:	mov	x20, #0xfffffffffffffffe    	// #-2
   20f84:	mov	x0, x20
   20f88:	ldp	x19, x20, [sp, #16]
   20f8c:	ldp	x21, x22, [sp, #32]
   20f90:	ldp	x23, x24, [sp, #48]
   20f94:	ldp	x29, x30, [sp], #64
   20f98:	ret
   20f9c:	stp	x29, x30, [sp, #-32]!
   20fa0:	mov	x29, sp
   20fa4:	str	x19, [sp, #16]
   20fa8:	mov	x19, x0
   20fac:	ldr	x0, [x0]
   20fb0:	bl	aa50 <free@plt>
   20fb4:	ldr	x0, [x19, #8]
   20fb8:	bl	aa50 <free@plt>
   20fbc:	ldr	x0, [x19, #16]
   20fc0:	bl	aa50 <free@plt>
   20fc4:	ldr	x0, [x19, #24]
   20fc8:	bl	aa50 <free@plt>
   20fcc:	mov	x0, x19
   20fd0:	bl	aa50 <free@plt>
   20fd4:	ldr	x19, [sp, #16]
   20fd8:	ldp	x29, x30, [sp], #32
   20fdc:	ret
   20fe0:	stp	x29, x30, [sp, #-16]!
   20fe4:	mov	x29, sp
   20fe8:	ldr	w1, [x0, #8]
   20fec:	and	w1, w1, #0x7ffff
   20ff0:	and	w1, w1, #0xfffc00ff
   20ff4:	cmp	w1, #0x6
   20ff8:	b.eq	2100c <printf_parse@@Base+0x3bdc>  // b.none
   20ffc:	cmp	w1, #0x3
   21000:	b.eq	21018 <printf_parse@@Base+0x3be8>  // b.none
   21004:	ldp	x29, x30, [sp], #16
   21008:	ret
   2100c:	ldr	x0, [x0]
   21010:	bl	20f9c <printf_parse@@Base+0x3b6c>
   21014:	b	21004 <printf_parse@@Base+0x3bd4>
   21018:	ldr	x0, [x0]
   2101c:	bl	aa50 <free@plt>
   21020:	b	21004 <printf_parse@@Base+0x3bd4>
   21024:	stp	x29, x30, [sp, #-16]!
   21028:	mov	x29, sp
   2102c:	add	x0, x1, #0x28
   21030:	bl	20fe0 <printf_parse@@Base+0x3bb0>
   21034:	mov	w0, #0x0                   	// #0
   21038:	ldp	x29, x30, [sp], #16
   2103c:	ret
   21040:	stp	x29, x30, [sp, #-96]!
   21044:	mov	x29, sp
   21048:	stp	x19, x20, [sp, #16]
   2104c:	stp	x21, x22, [sp, #32]
   21050:	stp	x23, x24, [sp, #48]
   21054:	mov	x19, x0
   21058:	mov	x21, x1
   2105c:	mov	x20, x2
   21060:	and	w22, w2, #0xff
   21064:	ldr	x23, [x0, #8]
   21068:	ldr	x0, [x0, #16]
   2106c:	cmp	x0, x23
   21070:	b.cs	2112c <printf_parse@@Base+0x3cfc>  // b.hs, b.nlast
   21074:	ldr	x0, [x19, #16]
   21078:	ldr	x1, [x19]
   2107c:	lsl	x0, x0, #4
   21080:	add	x2, x1, x0
   21084:	str	x21, [x1, x0]
   21088:	str	x20, [x2, #8]
   2108c:	ldr	x0, [x19, #16]
   21090:	ldr	x1, [x19]
   21094:	add	x0, x1, x0, lsl #4
   21098:	ldr	w1, [x0, #8]
   2109c:	and	w1, w1, #0xfffc00ff
   210a0:	str	w1, [x0, #8]
   210a4:	cmp	w22, #0x5
   210a8:	b.eq	21210 <printf_parse@@Base+0x3de0>  // b.none
   210ac:	cmp	w22, #0x6
   210b0:	cset	w2, eq  // eq = none
   210b4:	ldr	x0, [x19, #16]
   210b8:	ldr	x1, [x19]
   210bc:	add	x0, x1, x0, lsl #4
   210c0:	ldrb	w1, [x0, #10]
   210c4:	bfi	w1, w2, #4, #1
   210c8:	strb	w1, [x0, #10]
   210cc:	ldr	x1, [x19, #16]
   210d0:	ldr	x0, [x19, #24]
   210d4:	mov	x2, #0xffffffffffffffff    	// #-1
   210d8:	str	x2, [x0, x1, lsl #3]
   210dc:	ldr	x0, [x19, #16]
   210e0:	add	x0, x0, x0, lsl #1
   210e4:	ldr	x1, [x19, #40]
   210e8:	add	x0, x1, x0, lsl #3
   210ec:	stp	xzr, xzr, [x0]
   210f0:	str	xzr, [x0, #16]
   210f4:	ldr	x0, [x19, #16]
   210f8:	add	x0, x0, x0, lsl #1
   210fc:	ldr	x1, [x19, #48]
   21100:	add	x0, x1, x0, lsl #3
   21104:	stp	xzr, xzr, [x0]
   21108:	str	xzr, [x0, #16]
   2110c:	ldr	x0, [x19, #16]
   21110:	add	x1, x0, #0x1
   21114:	str	x1, [x19, #16]
   21118:	ldp	x19, x20, [sp, #16]
   2111c:	ldp	x21, x22, [sp, #32]
   21120:	ldp	x23, x24, [sp, #48]
   21124:	ldp	x29, x30, [sp], #96
   21128:	ret
   2112c:	lsl	x24, x23, #1
   21130:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   21134:	movk	x0, #0xaaa, lsl #48
   21138:	cmp	x0, x23, lsl #1
   2113c:	b.cc	21224 <printf_parse@@Base+0x3df4>  // b.lo, b.ul, b.last
   21140:	lsl	x1, x23, #5
   21144:	ldr	x0, [x19]
   21148:	bl	a7e0 <realloc@plt>
   2114c:	cbz	x0, 2122c <printf_parse@@Base+0x3dfc>
   21150:	stp	x25, x26, [sp, #64]
   21154:	str	x27, [sp, #80]
   21158:	str	x0, [x19]
   2115c:	lsl	x25, x23, #4
   21160:	mov	x1, x25
   21164:	ldr	x0, [x19, #24]
   21168:	bl	a7e0 <realloc@plt>
   2116c:	mov	x26, x0
   21170:	mov	x1, x25
   21174:	ldr	x0, [x19, #32]
   21178:	bl	a7e0 <realloc@plt>
   2117c:	mov	x25, x0
   21180:	add	x23, x23, x23, lsl #1
   21184:	lsl	x23, x23, #4
   21188:	mov	x1, x23
   2118c:	ldr	x0, [x19, #40]
   21190:	bl	a7e0 <realloc@plt>
   21194:	mov	x27, x0
   21198:	mov	x1, x23
   2119c:	ldr	x0, [x19, #48]
   211a0:	bl	a7e0 <realloc@plt>
   211a4:	mov	x23, x0
   211a8:	cmp	x26, #0x0
   211ac:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   211b0:	b.eq	211e0 <printf_parse@@Base+0x3db0>  // b.none
   211b4:	cmp	x27, #0x0
   211b8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   211bc:	b.eq	211e0 <printf_parse@@Base+0x3db0>  // b.none
   211c0:	str	x26, [x19, #24]
   211c4:	str	x25, [x19, #32]
   211c8:	str	x27, [x19, #40]
   211cc:	str	x0, [x19, #48]
   211d0:	str	x24, [x19, #8]
   211d4:	ldp	x25, x26, [sp, #64]
   211d8:	ldr	x27, [sp, #80]
   211dc:	b	21074 <printf_parse@@Base+0x3c44>
   211e0:	mov	x0, x26
   211e4:	bl	aa50 <free@plt>
   211e8:	mov	x0, x25
   211ec:	bl	aa50 <free@plt>
   211f0:	mov	x0, x27
   211f4:	bl	aa50 <free@plt>
   211f8:	mov	x0, x23
   211fc:	bl	aa50 <free@plt>
   21200:	mov	x0, #0xffffffffffffffff    	// #-1
   21204:	ldp	x25, x26, [sp, #64]
   21208:	ldr	x27, [sp, #80]
   2120c:	b	21118 <printf_parse@@Base+0x3ce8>
   21210:	ldr	w0, [x19, #180]
   21214:	mov	w2, #0x1                   	// #1
   21218:	cmp	w0, w2
   2121c:	b.gt	210b4 <printf_parse@@Base+0x3c84>
   21220:	b	210ac <printf_parse@@Base+0x3c7c>
   21224:	mov	x0, #0xffffffffffffffff    	// #-1
   21228:	b	21118 <printf_parse@@Base+0x3ce8>
   2122c:	mov	x0, #0xffffffffffffffff    	// #-1
   21230:	b	21118 <printf_parse@@Base+0x3ce8>
   21234:	stp	x29, x30, [sp, #-32]!
   21238:	mov	x29, sp
   2123c:	stp	x19, x20, [sp, #16]
   21240:	mov	x20, x0
   21244:	mov	x19, x1
   21248:	ldrb	w0, [x1, #48]
   2124c:	cmp	w0, #0x10
   21250:	b.ne	21278 <printf_parse@@Base+0x3e48>  // b.any
   21254:	ldr	x0, [x1, #8]
   21258:	ldr	x1, [x0, #24]
   2125c:	str	x1, [x19, #24]
   21260:	ldr	x0, [x0, #56]
   21264:	str	x0, [x19, #56]
   21268:	mov	w0, #0x0                   	// #0
   2126c:	ldp	x19, x20, [sp, #16]
   21270:	ldp	x29, x30, [sp], #32
   21274:	ret
   21278:	str	x1, [x19, #24]
   2127c:	ldp	x1, x2, [x1, #40]
   21280:	mov	x0, x20
   21284:	bl	21040 <printf_parse@@Base+0x3c10>
   21288:	mov	x1, x0
   2128c:	str	x0, [x19, #56]
   21290:	cmn	x0, #0x1
   21294:	b.eq	212c8 <printf_parse@@Base+0x3e98>  // b.none
   21298:	ldrb	w2, [x19, #48]
   2129c:	mov	w0, #0x0                   	// #0
   212a0:	cmp	w2, #0xc
   212a4:	b.ne	2126c <printf_parse@@Base+0x3e3c>  // b.any
   212a8:	ldr	x0, [x20]
   212ac:	add	x1, x0, x1, lsl #4
   212b0:	ldr	w0, [x1, #8]
   212b4:	ldr	w2, [x19, #40]
   212b8:	bfi	w0, w2, #8, #10
   212bc:	str	w0, [x1, #8]
   212c0:	mov	w0, #0x0                   	// #0
   212c4:	b	2126c <printf_parse@@Base+0x3e3c>
   212c8:	mov	w0, #0xc                   	// #12
   212cc:	b	2126c <printf_parse@@Base+0x3e3c>
   212d0:	stp	x29, x30, [sp, #-48]!
   212d4:	mov	x29, sp
   212d8:	stp	x19, x20, [sp, #16]
   212dc:	stp	x21, x22, [sp, #32]
   212e0:	mov	x19, x0
   212e4:	mov	x20, x1
   212e8:	mov	w22, w2
   212ec:	lsl	x21, x1, #4
   212f0:	ldr	x1, [x0]
   212f4:	add	x1, x1, x21
   212f8:	ldp	x2, x3, [x1]
   212fc:	mov	x1, x2
   21300:	mov	x2, x3
   21304:	bl	21040 <printf_parse@@Base+0x3c10>
   21308:	cmn	x0, #0x1
   2130c:	b.eq	2136c <printf_parse@@Base+0x3f3c>  // b.none
   21310:	lsl	x3, x0, #4
   21314:	ldr	x1, [x19]
   21318:	add	x1, x1, x3
   2131c:	ldr	w2, [x1, #8]
   21320:	bfi	w2, w22, #8, #10
   21324:	str	w2, [x1, #8]
   21328:	ldr	x1, [x19]
   2132c:	add	x5, x1, x3
   21330:	add	x1, x1, x21
   21334:	ldr	w4, [x1, #8]
   21338:	ubfx	x4, x4, #8, #10
   2133c:	ldr	w2, [x5, #8]
   21340:	ubfx	x1, x2, #8, #10
   21344:	orr	w4, w4, w1
   21348:	bfi	w2, w4, #8, #10
   2134c:	str	w2, [x5, #8]
   21350:	ldr	x1, [x19]
   21354:	add	x3, x1, x3
   21358:	ldrb	w1, [x3, #10]
   2135c:	orr	w1, w1, #0x4
   21360:	strb	w1, [x3, #10]
   21364:	ldr	x1, [x19, #32]
   21368:	str	x20, [x1, x0, lsl #3]
   2136c:	ldp	x19, x20, [sp, #16]
   21370:	ldp	x21, x22, [sp, #32]
   21374:	ldp	x29, x30, [sp], #48
   21378:	ret
   2137c:	stp	x29, x30, [sp, #-80]!
   21380:	mov	x29, sp
   21384:	stp	x19, x20, [sp, #16]
   21388:	stp	x21, x22, [sp, #32]
   2138c:	stp	x23, x24, [sp, #48]
   21390:	stp	x25, x26, [sp, #64]
   21394:	mov	x20, x0
   21398:	mov	x21, x1
   2139c:	mov	x19, x2
   213a0:	mov	x25, x3
   213a4:	mov	w23, w4
   213a8:	b	2155c <printf_parse@@Base+0x412c>
   213ac:	lsl	x26, x21, #3
   213b0:	ldr	x0, [x20, #24]
   213b4:	ldr	x21, [x0, x21, lsl #3]
   213b8:	mov	x24, x19
   213bc:	add	x19, x19, x19, lsl #1
   213c0:	lsl	x22, x19, #3
   213c4:	ldr	x0, [x20, #40]
   213c8:	add	x0, x0, x22
   213cc:	str	xzr, [x0, #8]
   213d0:	mov	w2, w23
   213d4:	mov	x1, x21
   213d8:	mov	x0, x20
   213dc:	bl	212d0 <printf_parse@@Base+0x3ea0>
   213e0:	mov	x19, x0
   213e4:	cmn	x0, #0x1
   213e8:	b.eq	2163c <printf_parse@@Base+0x420c>  // b.none
   213ec:	ldr	x0, [x20, #24]
   213f0:	ldr	x1, [x0, x26]
   213f4:	str	x1, [x0, x24, lsl #3]
   213f8:	ldr	x0, [x20, #40]
   213fc:	mov	x1, x19
   21400:	add	x0, x0, x22
   21404:	bl	1f018 <printf_parse@@Base+0x1be8>
   21408:	and	w0, w0, #0xff
   2140c:	cbnz	w0, 2155c <printf_parse@@Base+0x412c>
   21410:	mov	w0, #0xc                   	// #12
   21414:	b	21668 <printf_parse@@Base+0x4238>
   21418:	ldr	x0, [x20, #24]
   2141c:	ldr	x1, [x0, x21, lsl #3]
   21420:	str	x1, [x0, x19, lsl #3]
   21424:	mov	w0, #0x0                   	// #0
   21428:	b	21668 <printf_parse@@Base+0x4238>
   2142c:	ldr	x0, [x2, #16]
   21430:	ldr	x24, [x0]
   21434:	add	x22, x19, x19, lsl #1
   21438:	lsl	x22, x22, #3
   2143c:	add	x1, x1, x22
   21440:	str	xzr, [x1, #8]
   21444:	cmp	x21, x25
   21448:	ccmp	x21, x19, #0x4, eq  // eq = none
   2144c:	b.ne	214a0 <printf_parse@@Base+0x4070>  // b.any
   21450:	ldr	x0, [x20]
   21454:	add	x3, x0, x3
   21458:	ldr	w0, [x3, #8]
   2145c:	ubfx	x0, x0, #8, #10
   21460:	orr	w23, w23, w0
   21464:	mov	w2, w23
   21468:	mov	x1, x24
   2146c:	mov	x0, x20
   21470:	bl	212d0 <printf_parse@@Base+0x3ea0>
   21474:	mov	x19, x0
   21478:	cmn	x0, #0x1
   2147c:	b.eq	21644 <printf_parse@@Base+0x4214>  // b.none
   21480:	ldr	x0, [x20, #40]
   21484:	mov	x1, x19
   21488:	add	x0, x0, x22
   2148c:	bl	1f018 <printf_parse@@Base+0x1be8>
   21490:	and	w0, w0, #0xff
   21494:	cbz	w0, 214c0 <printf_parse@@Base+0x4090>
   21498:	mov	x21, x24
   2149c:	b	2155c <printf_parse@@Base+0x412c>
   214a0:	ldr	x2, [x20, #40]
   214a4:	mov	x1, x24
   214a8:	add	x0, x2, x22
   214ac:	bl	1f018 <printf_parse@@Base+0x1be8>
   214b0:	ands	w0, w0, #0xff
   214b4:	mov	w0, #0xc                   	// #12
   214b8:	csel	w0, w0, wzr, eq  // eq = none
   214bc:	b	21668 <printf_parse@@Base+0x4238>
   214c0:	mov	w0, #0xc                   	// #12
   214c4:	b	21668 <printf_parse@@Base+0x4238>
   214c8:	sub	x1, x1, #0x1
   214cc:	add	x2, x2, x5
   214d0:	ldrb	w0, [x2, #10]
   214d4:	tst	x0, #0x4
   214d8:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   214dc:	b.le	215e0 <printf_parse@@Base+0x41b0>
   214e0:	ldr	x0, [x3, x1, lsl #3]
   214e4:	cmp	x21, x0
   214e8:	b.ne	214c8 <printf_parse@@Base+0x4098>  // b.any
   214ec:	ldr	w0, [x2, #8]
   214f0:	ubfx	x0, x0, #8, #10
   214f4:	cmp	w23, w0
   214f8:	b.ne	214c8 <printf_parse@@Base+0x4098>  // b.any
   214fc:	cmn	x1, #0x1
   21500:	b.eq	215e0 <printf_parse@@Base+0x41b0>  // b.none
   21504:	ldr	x0, [x20, #40]
   21508:	add	x0, x0, x24
   2150c:	bl	1f018 <printf_parse@@Base+0x1be8>
   21510:	and	w0, w0, #0xff
   21514:	cbz	w0, 2165c <printf_parse@@Base+0x422c>
   21518:	ldr	x0, [x20, #40]
   2151c:	add	x22, x0, x22
   21520:	ldr	x0, [x22, #16]
   21524:	ldr	x21, [x0, #8]
   21528:	mov	w2, w23
   2152c:	mov	x1, x21
   21530:	mov	x0, x20
   21534:	bl	212d0 <printf_parse@@Base+0x3ea0>
   21538:	mov	x19, x0
   2153c:	cmn	x0, #0x1
   21540:	b.eq	21664 <printf_parse@@Base+0x4234>  // b.none
   21544:	ldr	x0, [x20, #40]
   21548:	mov	x1, x19
   2154c:	add	x0, x0, x24
   21550:	bl	1f018 <printf_parse@@Base+0x1be8>
   21554:	and	w0, w0, #0xff
   21558:	cbz	w0, 21634 <printf_parse@@Base+0x4204>
   2155c:	lsl	x3, x21, #4
   21560:	ldr	x0, [x20]
   21564:	add	x0, x0, x3
   21568:	ldrb	w0, [x0, #8]
   2156c:	cmp	w0, #0x4
   21570:	b.eq	213ac <printf_parse@@Base+0x3f7c>  // b.none
   21574:	ldr	x1, [x20, #40]
   21578:	add	x22, x21, x21, lsl #1
   2157c:	lsl	x22, x22, #3
   21580:	add	x2, x1, x22
   21584:	ldr	x0, [x2, #8]
   21588:	cbz	x0, 21418 <printf_parse@@Base+0x3fe8>
   2158c:	cmp	x0, #0x1
   21590:	b.eq	2142c <printf_parse@@Base+0x3ffc>  // b.none
   21594:	ldr	x0, [x2, #16]
   21598:	ldr	x21, [x0]
   2159c:	add	x19, x19, x19, lsl #1
   215a0:	lsl	x24, x19, #3
   215a4:	add	x1, x1, x24
   215a8:	str	xzr, [x1, #8]
   215ac:	ldr	x5, [x20, #16]
   215b0:	sub	x1, x5, #0x1
   215b4:	ldr	x0, [x20]
   215b8:	add	x2, x0, x1, lsl #4
   215bc:	ldrb	w3, [x2, #10]
   215c0:	tst	x3, #0x4
   215c4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   215c8:	b.le	215e0 <printf_parse@@Base+0x41b0>
   215cc:	ldr	x3, [x20, #32]
   215d0:	add	x5, x0, x5, lsl #4
   215d4:	sub	x5, x5, x2
   215d8:	sub	x5, x5, #0x20
   215dc:	b	214e0 <printf_parse@@Base+0x40b0>
   215e0:	mov	w2, w23
   215e4:	mov	x1, x21
   215e8:	mov	x0, x20
   215ec:	bl	212d0 <printf_parse@@Base+0x3ea0>
   215f0:	mov	x19, x0
   215f4:	cmn	x0, #0x1
   215f8:	b.eq	2164c <printf_parse@@Base+0x421c>  // b.none
   215fc:	ldr	x0, [x20, #40]
   21600:	mov	x1, x19
   21604:	add	x0, x0, x24
   21608:	bl	1f018 <printf_parse@@Base+0x1be8>
   2160c:	and	w0, w0, #0xff
   21610:	cbz	w0, 21654 <printf_parse@@Base+0x4224>
   21614:	mov	w4, w23
   21618:	mov	x3, x25
   2161c:	mov	x2, x19
   21620:	mov	x1, x21
   21624:	mov	x0, x20
   21628:	bl	2137c <printf_parse@@Base+0x3f4c>
   2162c:	cbz	w0, 21518 <printf_parse@@Base+0x40e8>
   21630:	b	21668 <printf_parse@@Base+0x4238>
   21634:	mov	w0, #0xc                   	// #12
   21638:	b	21668 <printf_parse@@Base+0x4238>
   2163c:	mov	w0, #0xc                   	// #12
   21640:	b	21668 <printf_parse@@Base+0x4238>
   21644:	mov	w0, #0xc                   	// #12
   21648:	b	21668 <printf_parse@@Base+0x4238>
   2164c:	mov	w0, #0xc                   	// #12
   21650:	b	21668 <printf_parse@@Base+0x4238>
   21654:	mov	w0, #0xc                   	// #12
   21658:	b	21668 <printf_parse@@Base+0x4238>
   2165c:	mov	w0, #0xc                   	// #12
   21660:	b	21668 <printf_parse@@Base+0x4238>
   21664:	mov	w0, #0xc                   	// #12
   21668:	ldp	x19, x20, [sp, #16]
   2166c:	ldp	x21, x22, [sp, #32]
   21670:	ldp	x23, x24, [sp, #48]
   21674:	ldp	x25, x26, [sp, #64]
   21678:	ldp	x29, x30, [sp], #80
   2167c:	ret
   21680:	stp	x29, x30, [sp, #-160]!
   21684:	mov	x29, sp
   21688:	stp	x19, x20, [sp, #16]
   2168c:	stp	x23, x24, [sp, #48]
   21690:	stp	x25, x26, [sp, #64]
   21694:	stp	x27, x28, [sp, #80]
   21698:	str	x0, [sp, #104]
   2169c:	mov	x19, x1
   216a0:	mov	x24, x2
   216a4:	and	w28, w3, #0xff
   216a8:	add	x23, x2, x2, lsl #1
   216ac:	lsl	x23, x23, #3
   216b0:	ldr	x0, [x1, #40]
   216b4:	add	x0, x0, x23
   216b8:	ldr	x1, [x0, #8]
   216bc:	add	x1, x1, #0x1
   216c0:	add	x0, sp, #0x88
   216c4:	bl	1f254 <printf_parse@@Base+0x1e24>
   216c8:	mov	w25, w0
   216cc:	cbnz	w0, 2187c <printf_parse@@Base+0x444c>
   216d0:	mov	x26, x23
   216d4:	ldr	x0, [x19, #48]
   216d8:	add	x0, x0, x23
   216dc:	mov	x1, #0xffffffffffffffff    	// #-1
   216e0:	str	x1, [x0, #8]
   216e4:	ldr	x0, [x19]
   216e8:	lsl	x20, x24, #4
   216ec:	add	x2, x0, x20
   216f0:	ldr	w1, [x2, #8]
   216f4:	tst	w1, #0x3ff00
   216f8:	b.eq	21720 <printf_parse@@Base+0x42f0>  // b.none
   216fc:	ldr	x1, [x19, #40]
   21700:	add	x1, x1, x23
   21704:	ldr	x3, [x1, #8]
   21708:	cbz	x3, 218ac <printf_parse@@Base+0x447c>
   2170c:	ldr	x1, [x1, #16]
   21710:	ldr	x1, [x1]
   21714:	add	x0, x0, x1, lsl #4
   21718:	ldrb	w0, [x0, #10]
   2171c:	tbz	w0, #2, 2175c <printf_parse@@Base+0x432c>
   21720:	ldr	x0, [x19]
   21724:	add	x0, x0, x20
   21728:	ldrb	w0, [x0, #8]
   2172c:	tbz	w0, #3, 218ac <printf_parse@@Base+0x447c>
   21730:	ldr	x0, [x19, #40]
   21734:	add	x0, x0, x23
   21738:	ldr	x1, [x0, #8]
   2173c:	cmp	x1, #0x0
   21740:	b.le	218ac <printf_parse@@Base+0x447c>
   21744:	stp	x21, x22, [sp, #32]
   21748:	str	wzr, [sp, #100]
   2174c:	mov	x21, #0x0                   	// #0
   21750:	add	x22, sp, #0x70
   21754:	add	x27, sp, #0x88
   21758:	b	217d8 <printf_parse@@Base+0x43a8>
   2175c:	ldr	w4, [x2, #8]
   21760:	ubfx	x4, x4, #8, #10
   21764:	mov	x3, x24
   21768:	mov	x2, x24
   2176c:	mov	x1, x24
   21770:	mov	x0, x19
   21774:	bl	2137c <printf_parse@@Base+0x3f4c>
   21778:	cbz	w0, 21720 <printf_parse@@Base+0x42f0>
   2177c:	mov	w25, w0
   21780:	b	2187c <printf_parse@@Base+0x444c>
   21784:	mov	w0, #0x1                   	// #1
   21788:	str	w0, [sp, #100]
   2178c:	b	217c0 <printf_parse@@Base+0x4390>
   21790:	mov	w3, #0x0                   	// #0
   21794:	mov	x1, x19
   21798:	mov	x0, x22
   2179c:	bl	21680 <printf_parse@@Base+0x4250>
   217a0:	cbz	w0, 21810 <printf_parse@@Base+0x43e0>
   217a4:	mov	w25, w0
   217a8:	ldp	x21, x22, [sp, #32]
   217ac:	b	2187c <printf_parse@@Base+0x444c>
   217b0:	ldr	x0, [sp, #128]
   217b4:	bl	aa50 <free@plt>
   217b8:	mov	w0, #0x1                   	// #1
   217bc:	str	w0, [sp, #100]
   217c0:	add	x21, x21, #0x1
   217c4:	ldr	x0, [x19, #40]
   217c8:	add	x0, x0, x26
   217cc:	ldr	x1, [x0, #8]
   217d0:	cmp	x1, x21
   217d4:	b.le	21834 <printf_parse@@Base+0x4404>
   217d8:	ldr	x0, [x0, #16]
   217dc:	ldr	x2, [x0, x21, lsl #3]
   217e0:	add	x20, x2, x2, lsl #1
   217e4:	lsl	x20, x20, #3
   217e8:	ldr	x0, [x19, #48]
   217ec:	add	x0, x0, x20
   217f0:	ldr	x1, [x0, #8]
   217f4:	cmn	x1, #0x1
   217f8:	b.eq	21784 <printf_parse@@Base+0x4354>  // b.none
   217fc:	cbz	x1, 21790 <printf_parse@@Base+0x4360>
   21800:	ldp	x2, x3, [x0]
   21804:	stp	x2, x3, [x22]
   21808:	ldr	x0, [x0, #16]
   2180c:	str	x0, [x22, #16]
   21810:	mov	x1, x22
   21814:	mov	x0, x27
   21818:	bl	1ff2c <printf_parse@@Base+0x2afc>
   2181c:	cbnz	w0, 217a4 <printf_parse@@Base+0x4374>
   21820:	ldr	x0, [x19, #48]
   21824:	add	x20, x0, x20
   21828:	ldr	x0, [x20, #8]
   2182c:	cbnz	x0, 217c0 <printf_parse@@Base+0x4390>
   21830:	b	217b0 <printf_parse@@Base+0x4380>
   21834:	mov	x1, x24
   21838:	add	x0, sp, #0x88
   2183c:	bl	1f018 <printf_parse@@Base+0x1be8>
   21840:	and	w0, w0, #0xff
   21844:	cbz	w0, 218a0 <printf_parse@@Base+0x4470>
   21848:	eor	w28, w28, #0x1
   2184c:	ldr	w0, [sp, #100]
   21850:	tst	w0, w28
   21854:	b.eq	21898 <printf_parse@@Base+0x4468>  // b.none
   21858:	ldr	x0, [x19, #48]
   2185c:	add	x23, x0, x23
   21860:	str	xzr, [x23, #8]
   21864:	ldp	x21, x22, [sp, #32]
   21868:	ldp	x0, x1, [sp, #136]
   2186c:	ldr	x2, [sp, #104]
   21870:	stp	x0, x1, [x2]
   21874:	ldr	x0, [sp, #152]
   21878:	str	x0, [x2, #16]
   2187c:	mov	w0, w25
   21880:	ldp	x19, x20, [sp, #16]
   21884:	ldp	x23, x24, [sp, #48]
   21888:	ldp	x25, x26, [sp, #64]
   2188c:	ldp	x27, x28, [sp, #80]
   21890:	ldp	x29, x30, [sp], #160
   21894:	ret
   21898:	ldp	x21, x22, [sp, #32]
   2189c:	b	218c0 <printf_parse@@Base+0x4490>
   218a0:	mov	w25, #0xc                   	// #12
   218a4:	ldp	x21, x22, [sp, #32]
   218a8:	b	2187c <printf_parse@@Base+0x444c>
   218ac:	mov	x1, x24
   218b0:	add	x0, sp, #0x88
   218b4:	bl	1f018 <printf_parse@@Base+0x1be8>
   218b8:	and	w0, w0, #0xff
   218bc:	cbz	w0, 218dc <printf_parse@@Base+0x44ac>
   218c0:	ldr	x0, [x19, #48]
   218c4:	add	x23, x0, x23
   218c8:	ldp	x0, x1, [sp, #136]
   218cc:	stp	x0, x1, [x23]
   218d0:	ldr	x0, [sp, #152]
   218d4:	str	x0, [x23, #16]
   218d8:	b	21868 <printf_parse@@Base+0x4438>
   218dc:	mov	w25, #0xc                   	// #12
   218e0:	b	2187c <printf_parse@@Base+0x444c>
   218e4:	stp	x29, x30, [sp, #-32]!
   218e8:	mov	x29, sp
   218ec:	str	x19, [sp, #16]
   218f0:	mov	x19, x0
   218f4:	ldr	x0, [x0, #48]
   218f8:	bl	aa50 <free@plt>
   218fc:	ldr	x0, [x19, #72]
   21900:	bl	aa50 <free@plt>
   21904:	ldr	x0, [x19, #80]
   21908:	add	x1, x19, #0x8
   2190c:	cmp	x0, x1
   21910:	b.eq	21924 <printf_parse@@Base+0x44f4>  // b.none
   21914:	ldr	x0, [x0, #16]
   21918:	bl	aa50 <free@plt>
   2191c:	ldr	x0, [x19, #80]
   21920:	bl	aa50 <free@plt>
   21924:	ldr	x0, [x19, #24]
   21928:	bl	aa50 <free@plt>
   2192c:	ldr	x0, [x19, #96]
   21930:	bl	aa50 <free@plt>
   21934:	ldr	x0, [x19, #88]
   21938:	bl	aa50 <free@plt>
   2193c:	mov	x0, x19
   21940:	bl	aa50 <free@plt>
   21944:	ldr	x19, [sp, #16]
   21948:	ldp	x29, x30, [sp], #32
   2194c:	ret
   21950:	stp	x29, x30, [sp, #-112]!
   21954:	mov	x29, sp
   21958:	stp	x19, x20, [sp, #16]
   2195c:	stp	x21, x22, [sp, #32]
   21960:	str	x0, [sp, #104]
   21964:	mov	x22, x2
   21968:	ldr	x2, [x2, #8]
   2196c:	cbz	x2, 219d4 <printf_parse@@Base+0x45a4>
   21970:	stp	x23, x24, [sp, #48]
   21974:	stp	x25, x26, [sp, #64]
   21978:	mov	x24, x1
   2197c:	mov	w25, w3
   21980:	add	x23, x2, w3, uxtw
   21984:	cmp	x2, #0x0
   21988:	b.le	219a4 <printf_parse@@Base+0x4574>
   2198c:	ldr	x0, [x22, #16]
   21990:	add	x2, x0, x2, lsl #3
   21994:	ldr	x1, [x0], #8
   21998:	add	x23, x23, x1
   2199c:	cmp	x2, x0
   219a0:	b.ne	21994 <printf_parse@@Base+0x4564>  // b.any
   219a4:	ldr	x0, [x24, #136]
   219a8:	and	x0, x23, x0
   219ac:	add	x0, x0, x0, lsl #1
   219b0:	lsl	x0, x0, #3
   219b4:	ldr	x1, [x24, #64]
   219b8:	add	x2, x1, x0
   219bc:	ldr	x21, [x1, x0]
   219c0:	cmp	x21, #0x0
   219c4:	b.le	21a2c <printf_parse@@Base+0x45fc>
   219c8:	ldr	x26, [x2, #16]
   219cc:	mov	x19, #0x0                   	// #0
   219d0:	b	219ec <printf_parse@@Base+0x45bc>
   219d4:	str	wzr, [x0]
   219d8:	mov	x20, #0x0                   	// #0
   219dc:	b	21bfc <printf_parse@@Base+0x47cc>
   219e0:	add	x19, x19, #0x1
   219e4:	cmp	x19, x21
   219e8:	b.eq	21a2c <printf_parse@@Base+0x45fc>  // b.none
   219ec:	ldr	x20, [x26, x19, lsl #3]
   219f0:	ldr	x0, [x20]
   219f4:	cmp	x0, x23
   219f8:	b.ne	219e0 <printf_parse@@Base+0x45b0>  // b.any
   219fc:	ldrb	w0, [x20, #104]
   21a00:	and	w0, w0, #0xf
   21a04:	cmp	w0, w25
   21a08:	b.ne	219e0 <printf_parse@@Base+0x45b0>  // b.any
   21a0c:	mov	x1, x22
   21a10:	ldr	x0, [x20, #80]
   21a14:	bl	1dfd8 <printf_parse@@Base+0xba8>
   21a18:	and	w0, w0, #0xff
   21a1c:	cbz	w0, 219e0 <printf_parse@@Base+0x45b0>
   21a20:	ldp	x23, x24, [sp, #48]
   21a24:	ldp	x25, x26, [sp, #64]
   21a28:	b	21bfc <printf_parse@@Base+0x47cc>
   21a2c:	mov	x1, #0x1                   	// #1
   21a30:	mov	x0, #0x70                  	// #112
   21a34:	bl	a770 <calloc@plt>
   21a38:	mov	x20, x0
   21a3c:	cbz	x0, 21afc <printf_parse@@Base+0x46cc>
   21a40:	stp	x27, x28, [sp, #80]
   21a44:	add	x27, x0, #0x8
   21a48:	mov	x1, x22
   21a4c:	mov	x0, x27
   21a50:	bl	200dc <printf_parse@@Base+0x2cac>
   21a54:	cbnz	w0, 21a90 <printf_parse@@Base+0x4660>
   21a58:	ldrb	w0, [x20, #104]
   21a5c:	bfxil	w0, w25, #0, #4
   21a60:	strb	w0, [x20, #104]
   21a64:	str	x27, [x20, #80]
   21a68:	ldr	x0, [x22, #8]
   21a6c:	cmp	x0, #0x0
   21a70:	b.le	21bdc <printf_parse@@Base+0x47ac>
   21a74:	mov	x26, #0x0                   	// #0
   21a78:	mov	x21, #0x0                   	// #0
   21a7c:	and	w0, w25, #0x4
   21a80:	str	w0, [sp, #100]
   21a84:	and	w28, w25, #0x2
   21a88:	and	w25, w25, #0x1
   21a8c:	b	21b64 <printf_parse@@Base+0x4734>
   21a90:	mov	x0, x20
   21a94:	bl	aa50 <free@plt>
   21a98:	ldp	x27, x28, [sp, #80]
   21a9c:	b	21afc <printf_parse@@Base+0x46cc>
   21aa0:	and	x0, x0, #0xff
   21aa4:	orr	w0, w0, #0x10
   21aa8:	strb	w0, [x20, #104]
   21aac:	b	21bbc <printf_parse@@Base+0x478c>
   21ab0:	ldrb	w0, [x20, #104]
   21ab4:	orr	w0, w0, #0x40
   21ab8:	strb	w0, [x20, #104]
   21abc:	b	21bbc <printf_parse@@Base+0x478c>
   21ac0:	mov	x0, #0x18                  	// #24
   21ac4:	bl	a5f0 <malloc@plt>
   21ac8:	cbz	x0, 21af0 <printf_parse@@Base+0x46c0>
   21acc:	str	x0, [x20, #80]
   21ad0:	mov	x1, x22
   21ad4:	bl	200dc <printf_parse@@Base+0x2cac>
   21ad8:	cbnz	w0, 21b18 <printf_parse@@Base+0x46e8>
   21adc:	ldrb	w0, [x20, #104]
   21ae0:	orr	w0, w0, #0xffffff80
   21ae4:	strb	w0, [x20, #104]
   21ae8:	mov	x26, #0x0                   	// #0
   21aec:	b	21bcc <printf_parse@@Base+0x479c>
   21af0:	mov	x0, x20
   21af4:	bl	218e4 <printf_parse@@Base+0x44b4>
   21af8:	ldp	x27, x28, [sp, #80]
   21afc:	mov	w0, #0xc                   	// #12
   21b00:	ldr	x1, [sp, #104]
   21b04:	str	w0, [x1]
   21b08:	mov	x20, #0x0                   	// #0
   21b0c:	ldp	x23, x24, [sp, #48]
   21b10:	ldp	x25, x26, [sp, #64]
   21b14:	b	21bfc <printf_parse@@Base+0x47cc>
   21b18:	mov	x0, x20
   21b1c:	bl	218e4 <printf_parse@@Base+0x44b4>
   21b20:	ldp	x27, x28, [sp, #80]
   21b24:	b	21afc <printf_parse@@Base+0x46cc>
   21b28:	tbz	w19, #1, 21b30 <printf_parse@@Base+0x4700>
   21b2c:	cbnz	w25, 21b44 <printf_parse@@Base+0x4714>
   21b30:	tbz	w19, #4, 21b38 <printf_parse@@Base+0x4708>
   21b34:	cbz	w28, 21b44 <printf_parse@@Base+0x4714>
   21b38:	tbz	w19, #6, 21b54 <printf_parse@@Base+0x4724>
   21b3c:	ldr	w0, [sp, #100]
   21b40:	cbnz	w0, 21b54 <printf_parse@@Base+0x4724>
   21b44:	sub	x1, x21, x26
   21b48:	mov	x0, x27
   21b4c:	bl	1e094 <printf_parse@@Base+0xc64>
   21b50:	add	x26, x26, #0x1
   21b54:	add	x21, x21, #0x1
   21b58:	ldr	x0, [x22, #8]
   21b5c:	cmp	x21, x0
   21b60:	b.ge	21bdc <printf_parse@@Base+0x47ac>  // b.tcont
   21b64:	ldr	x0, [x22, #16]
   21b68:	ldr	x0, [x0, x21, lsl #3]
   21b6c:	ldr	x1, [x24]
   21b70:	add	x0, x1, x0, lsl #4
   21b74:	ldrb	w2, [x0, #8]
   21b78:	ldr	w19, [x0, #8]
   21b7c:	ubfx	x19, x19, #8, #10
   21b80:	cmp	w19, #0x0
   21b84:	ccmp	w2, #0x1, #0x0, eq  // eq = none
   21b88:	b.eq	21b54 <printf_parse@@Base+0x4724>  // b.none
   21b8c:	ldrb	w1, [x20, #104]
   21b90:	ubfx	x3, x1, #5, #1
   21b94:	ldrb	w0, [x0, #10]
   21b98:	ubfx	x0, x0, #4, #1
   21b9c:	orr	w3, w3, w0
   21ba0:	mov	w0, w1
   21ba4:	bfi	w0, w3, #5, #1
   21ba8:	strb	w0, [x20, #104]
   21bac:	cmp	w2, #0x2
   21bb0:	b.eq	21aa0 <printf_parse@@Base+0x4670>  // b.none
   21bb4:	cmp	w2, #0x4
   21bb8:	b.eq	21ab0 <printf_parse@@Base+0x4680>  // b.none
   21bbc:	cbz	w19, 21b54 <printf_parse@@Base+0x4724>
   21bc0:	ldr	x0, [x20, #80]
   21bc4:	cmp	x27, x0
   21bc8:	b.eq	21ac0 <printf_parse@@Base+0x4690>  // b.none
   21bcc:	tbz	w19, #0, 21b28 <printf_parse@@Base+0x46f8>
   21bd0:	cbz	w25, 21b44 <printf_parse@@Base+0x4714>
   21bd4:	tbnz	w19, #1, 21b44 <printf_parse@@Base+0x4714>
   21bd8:	b	21b30 <printf_parse@@Base+0x4700>
   21bdc:	mov	x2, x23
   21be0:	mov	x1, x20
   21be4:	mov	x0, x24
   21be8:	bl	1f290 <printf_parse@@Base+0x1e60>
   21bec:	cbnz	w0, 21c10 <printf_parse@@Base+0x47e0>
   21bf0:	ldp	x23, x24, [sp, #48]
   21bf4:	ldp	x25, x26, [sp, #64]
   21bf8:	ldp	x27, x28, [sp, #80]
   21bfc:	mov	x0, x20
   21c00:	ldp	x19, x20, [sp, #16]
   21c04:	ldp	x21, x22, [sp, #32]
   21c08:	ldp	x29, x30, [sp], #112
   21c0c:	ret
   21c10:	mov	x0, x20
   21c14:	bl	218e4 <printf_parse@@Base+0x44b4>
   21c18:	ldp	x27, x28, [sp, #80]
   21c1c:	b	21afc <printf_parse@@Base+0x46cc>
   21c20:	stp	x29, x30, [sp, #-32]!
   21c24:	mov	x29, sp
   21c28:	stp	x19, x20, [sp, #16]
   21c2c:	ldr	x20, [x0]
   21c30:	ldr	x19, [x20, #112]
   21c34:	cbz	x19, 21c48 <printf_parse@@Base+0x4818>
   21c38:	mov	x0, x19
   21c3c:	ldr	x19, [x19]
   21c40:	bl	aa50 <free@plt>
   21c44:	cbnz	x19, 21c38 <printf_parse@@Base+0x4808>
   21c48:	str	xzr, [x20, #112]
   21c4c:	mov	w0, #0xf                   	// #15
   21c50:	str	w0, [x20, #128]
   21c54:	str	xzr, [x20, #104]
   21c58:	ldr	x0, [x20, #32]
   21c5c:	bl	aa50 <free@plt>
   21c60:	str	xzr, [x20, #32]
   21c64:	ldp	x19, x20, [sp, #16]
   21c68:	ldp	x29, x30, [sp], #32
   21c6c:	ret
   21c70:	stp	x29, x30, [sp, #-32]!
   21c74:	mov	x29, sp
   21c78:	str	x19, [sp, #16]
   21c7c:	mov	x19, x0
   21c80:	ldr	x0, [x0, #16]
   21c84:	bl	aa50 <free@plt>
   21c88:	ldr	x0, [x19, #24]
   21c8c:	bl	aa50 <free@plt>
   21c90:	ldrb	w0, [x19, #139]
   21c94:	cbnz	w0, 21ca4 <printf_parse@@Base+0x4874>
   21c98:	ldr	x19, [sp, #16]
   21c9c:	ldp	x29, x30, [sp], #32
   21ca0:	ret
   21ca4:	ldr	x0, [x19, #8]
   21ca8:	bl	aa50 <free@plt>
   21cac:	b	21c98 <printf_parse@@Base+0x4868>
   21cb0:	stp	x29, x30, [sp, #-64]!
   21cb4:	mov	x29, sp
   21cb8:	stp	x19, x20, [sp, #16]
   21cbc:	stp	x21, x22, [sp, #32]
   21cc0:	mov	x21, x0
   21cc4:	ldr	x0, [x0]
   21cc8:	cbz	x0, 21cf4 <printf_parse@@Base+0x48c4>
   21ccc:	ldr	x0, [x21, #16]
   21cd0:	cbz	x0, 21cf4 <printf_parse@@Base+0x48c4>
   21cd4:	mov	x19, #0x0                   	// #0
   21cd8:	ldr	x0, [x21]
   21cdc:	add	x0, x0, x19, lsl #4
   21ce0:	bl	20fe0 <printf_parse@@Base+0x3bb0>
   21ce4:	add	x19, x19, #0x1
   21ce8:	ldr	x0, [x21, #16]
   21cec:	cmp	x0, x19
   21cf0:	b.hi	21cd8 <printf_parse@@Base+0x48a8>  // b.pmore
   21cf4:	ldr	x0, [x21, #24]
   21cf8:	bl	aa50 <free@plt>
   21cfc:	ldr	x0, [x21, #16]
   21d00:	cbz	x0, 21d64 <printf_parse@@Base+0x4934>
   21d04:	mov	x19, #0x0                   	// #0
   21d08:	mov	x20, #0x0                   	// #0
   21d0c:	b	21d30 <printf_parse@@Base+0x4900>
   21d10:	add	x0, x0, x19
   21d14:	ldr	x0, [x0, #16]
   21d18:	bl	aa50 <free@plt>
   21d1c:	add	x20, x20, #0x1
   21d20:	add	x19, x19, #0x18
   21d24:	ldr	x0, [x21, #16]
   21d28:	cmp	x0, x20
   21d2c:	b.ls	21d64 <printf_parse@@Base+0x4934>  // b.plast
   21d30:	ldr	x0, [x21, #48]
   21d34:	cbz	x0, 21d44 <printf_parse@@Base+0x4914>
   21d38:	add	x0, x0, x19
   21d3c:	ldr	x0, [x0, #16]
   21d40:	bl	aa50 <free@plt>
   21d44:	ldr	x0, [x21, #56]
   21d48:	cbz	x0, 21d58 <printf_parse@@Base+0x4928>
   21d4c:	add	x0, x0, x19
   21d50:	ldr	x0, [x0, #16]
   21d54:	bl	aa50 <free@plt>
   21d58:	ldr	x0, [x21, #40]
   21d5c:	cbnz	x0, 21d10 <printf_parse@@Base+0x48e0>
   21d60:	b	21d1c <printf_parse@@Base+0x48ec>
   21d64:	ldr	x0, [x21, #40]
   21d68:	bl	aa50 <free@plt>
   21d6c:	ldr	x0, [x21, #48]
   21d70:	bl	aa50 <free@plt>
   21d74:	ldr	x0, [x21, #56]
   21d78:	bl	aa50 <free@plt>
   21d7c:	ldr	x0, [x21]
   21d80:	bl	aa50 <free@plt>
   21d84:	ldr	x0, [x21, #64]
   21d88:	cbz	x0, 21df4 <printf_parse@@Base+0x49c4>
   21d8c:	str	x23, [sp, #48]
   21d90:	mov	x22, #0x0                   	// #0
   21d94:	mov	x23, #0x0                   	// #0
   21d98:	b	21db8 <printf_parse@@Base+0x4988>
   21d9c:	ldr	x0, [x20, #16]
   21da0:	bl	aa50 <free@plt>
   21da4:	add	x23, x23, #0x1
   21da8:	add	x22, x22, #0x18
   21dac:	ldr	x0, [x21, #136]
   21db0:	cmp	x0, x23
   21db4:	b.cc	21df0 <printf_parse@@Base+0x49c0>  // b.lo, b.ul, b.last
   21db8:	ldr	x0, [x21, #64]
   21dbc:	add	x20, x0, x22
   21dc0:	ldr	x0, [x0, x22]
   21dc4:	cmp	x0, #0x0
   21dc8:	b.le	21d9c <printf_parse@@Base+0x496c>
   21dcc:	mov	x19, #0x0                   	// #0
   21dd0:	ldr	x1, [x20, #16]
   21dd4:	ldr	x0, [x1, x19, lsl #3]
   21dd8:	bl	218e4 <printf_parse@@Base+0x44b4>
   21ddc:	add	x19, x19, #0x1
   21de0:	ldr	x1, [x20]
   21de4:	cmp	x1, x19
   21de8:	b.gt	21dd0 <printf_parse@@Base+0x49a0>
   21dec:	b	21d9c <printf_parse@@Base+0x496c>
   21df0:	ldr	x23, [sp, #48]
   21df4:	ldr	x0, [x21, #64]
   21df8:	bl	aa50 <free@plt>
   21dfc:	ldr	x0, [x21, #120]
   21e00:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   21e04:	add	x1, x1, #0xcb8
   21e08:	cmp	x0, x1
   21e0c:	b.eq	21e14 <printf_parse@@Base+0x49e4>  // b.none
   21e10:	bl	aa50 <free@plt>
   21e14:	ldr	x0, [x21, #224]
   21e18:	bl	aa50 <free@plt>
   21e1c:	mov	x0, x21
   21e20:	bl	aa50 <free@plt>
   21e24:	ldp	x19, x20, [sp, #16]
   21e28:	ldp	x21, x22, [sp, #32]
   21e2c:	ldp	x29, x30, [sp], #64
   21e30:	ret
   21e34:	stp	x29, x30, [sp, #-112]!
   21e38:	mov	x29, sp
   21e3c:	stp	x19, x20, [sp, #16]
   21e40:	stp	x21, x22, [sp, #32]
   21e44:	stp	x23, x24, [sp, #48]
   21e48:	stp	x25, x26, [sp, #64]
   21e4c:	mov	x20, x0
   21e50:	mov	x21, x1
   21e54:	mov	x22, x2
   21e58:	mov	w23, w3
   21e5c:	ldr	x1, [x1, #8]
   21e60:	add	x0, sp, #0x58
   21e64:	bl	1f254 <printf_parse@@Base+0x1e24>
   21e68:	mov	w25, w0
   21e6c:	cbnz	w0, 21f48 <printf_parse@@Base+0x4b18>
   21e70:	ldr	x0, [x21, #8]
   21e74:	cmp	x0, #0x0
   21e78:	b.le	21f64 <printf_parse@@Base+0x4b34>
   21e7c:	mov	x19, #0x0                   	// #0
   21e80:	add	x24, sp, #0x58
   21e84:	b	21eec <printf_parse@@Base+0x4abc>
   21e88:	add	x4, x4, #0x1
   21e8c:	cmp	x3, x4
   21e90:	b.eq	21f1c <printf_parse@@Base+0x4aec>  // b.none
   21e94:	ldr	x6, [x8, x4, lsl #3]
   21e98:	lsl	x0, x6, #4
   21e9c:	add	x7, x5, x0
   21ea0:	ldrb	w7, [x7, #8]
   21ea4:	cmp	w23, w7
   21ea8:	b.ne	21e88 <printf_parse@@Base+0x4a58>  // b.any
   21eac:	ldr	x0, [x5, x0]
   21eb0:	cmp	x22, x0
   21eb4:	b.ne	21e88 <printf_parse@@Base+0x4a58>  // b.any
   21eb8:	cmn	x6, #0x1
   21ebc:	b.eq	21f1c <printf_parse@@Base+0x4aec>  // b.none
   21ec0:	mov	w4, w23
   21ec4:	mov	x3, x22
   21ec8:	mov	x1, x24
   21ecc:	mov	x0, x20
   21ed0:	bl	1f138 <printf_parse@@Base+0x1d08>
   21ed4:	mov	w26, w0
   21ed8:	cbnz	w0, 21f3c <printf_parse@@Base+0x4b0c>
   21edc:	add	x19, x19, #0x1
   21ee0:	ldr	x0, [x21, #8]
   21ee4:	cmp	x0, x19
   21ee8:	b.le	21f64 <printf_parse@@Base+0x4b34>
   21eec:	ldr	x0, [x21, #16]
   21ef0:	ldr	x2, [x0, x19, lsl #3]
   21ef4:	add	x1, x2, x2, lsl #1
   21ef8:	ldr	x0, [x20, #48]
   21efc:	add	x1, x0, x1, lsl #3
   21f00:	ldr	x3, [x1, #8]
   21f04:	cmp	x3, #0x0
   21f08:	b.le	21f1c <printf_parse@@Base+0x4aec>
   21f0c:	ldr	x8, [x1, #16]
   21f10:	ldr	x5, [x20]
   21f14:	mov	x4, #0x0                   	// #0
   21f18:	b	21e94 <printf_parse@@Base+0x4a64>
   21f1c:	mov	x0, x24
   21f20:	bl	1ff2c <printf_parse@@Base+0x2afc>
   21f24:	mov	w26, w0
   21f28:	cbz	w0, 21edc <printf_parse@@Base+0x4aac>
   21f2c:	ldr	x0, [sp, #104]
   21f30:	bl	aa50 <free@plt>
   21f34:	mov	w25, w26
   21f38:	b	21f48 <printf_parse@@Base+0x4b18>
   21f3c:	ldr	x0, [sp, #104]
   21f40:	bl	aa50 <free@plt>
   21f44:	mov	w25, w26
   21f48:	mov	w0, w25
   21f4c:	ldp	x19, x20, [sp, #16]
   21f50:	ldp	x21, x22, [sp, #32]
   21f54:	ldp	x23, x24, [sp, #48]
   21f58:	ldp	x25, x26, [sp, #64]
   21f5c:	ldp	x29, x30, [sp], #112
   21f60:	ret
   21f64:	ldr	x0, [x21, #16]
   21f68:	bl	aa50 <free@plt>
   21f6c:	ldp	x0, x1, [sp, #88]
   21f70:	stp	x0, x1, [x21]
   21f74:	ldr	x0, [sp, #104]
   21f78:	str	x0, [x21, #16]
   21f7c:	b	21f48 <printf_parse@@Base+0x4b18>
   21f80:	stp	x29, x30, [sp, #-128]!
   21f84:	mov	x29, sp
   21f88:	stp	x19, x20, [sp, #16]
   21f8c:	stp	x21, x22, [sp, #32]
   21f90:	mov	x22, x0
   21f94:	add	x21, x1, x1, lsl #1
   21f98:	ldr	x0, [x0, #56]
   21f9c:	add	x21, x0, x21, lsl #3
   21fa0:	stp	xzr, xzr, [sp, #104]
   21fa4:	str	xzr, [sp, #120]
   21fa8:	ldr	x0, [x21, #8]
   21fac:	cmp	x0, #0x0
   21fb0:	b.le	22054 <printf_parse@@Base+0x4c24>
   21fb4:	stp	x23, x24, [sp, #48]
   21fb8:	stp	x25, x26, [sp, #64]
   21fbc:	stp	x27, x28, [sp, #80]
   21fc0:	mov	x23, x1
   21fc4:	mov	x24, x2
   21fc8:	mov	x25, x3
   21fcc:	mov	x20, #0x0                   	// #0
   21fd0:	add	x26, sp, #0x68
   21fd4:	b	220d0 <printf_parse@@Base+0x4ca0>
   21fd8:	ldr	x0, [sp, #120]
   21fdc:	bl	aa50 <free@plt>
   21fe0:	ldp	x23, x24, [sp, #48]
   21fe4:	ldp	x25, x26, [sp, #64]
   21fe8:	ldp	x27, x28, [sp, #80]
   21fec:	b	22060 <printf_parse@@Base+0x4c30>
   21ff0:	cmp	x0, #0x0
   21ff4:	b.le	22074 <printf_parse@@Base+0x4c44>
   21ff8:	mov	x19, #0x0                   	// #0
   21ffc:	add	x22, sp, #0x68
   22000:	b	2202c <printf_parse@@Base+0x4bfc>
   22004:	mov	x1, x20
   22008:	mov	x0, x24
   2200c:	bl	1e034 <printf_parse@@Base+0xc04>
   22010:	sub	x1, x0, #0x1
   22014:	mov	x0, x24
   22018:	bl	1e094 <printf_parse@@Base+0xc64>
   2201c:	add	x19, x19, #0x1
   22020:	ldr	x0, [x21, #8]
   22024:	cmp	x0, x19
   22028:	b.le	22048 <printf_parse@@Base+0x4c18>
   2202c:	ldr	x0, [x21, #16]
   22030:	ldr	x20, [x0, x19, lsl #3]
   22034:	mov	x1, x20
   22038:	mov	x0, x22
   2203c:	bl	1e034 <printf_parse@@Base+0xc04>
   22040:	cbnz	x0, 2201c <printf_parse@@Base+0x4bec>
   22044:	b	22004 <printf_parse@@Base+0x4bd4>
   22048:	ldp	x23, x24, [sp, #48]
   2204c:	ldp	x25, x26, [sp, #64]
   22050:	ldp	x27, x28, [sp, #80]
   22054:	ldr	x0, [sp, #120]
   22058:	bl	aa50 <free@plt>
   2205c:	mov	w19, #0x0                   	// #0
   22060:	mov	w0, w19
   22064:	ldp	x19, x20, [sp, #16]
   22068:	ldp	x21, x22, [sp, #32]
   2206c:	ldp	x29, x30, [sp], #128
   22070:	ret
   22074:	ldp	x23, x24, [sp, #48]
   22078:	ldp	x25, x26, [sp, #64]
   2207c:	ldp	x27, x28, [sp, #80]
   22080:	b	22054 <printf_parse@@Base+0x4c24>
   22084:	mov	x1, x27
   22088:	mov	x0, x21
   2208c:	bl	1e034 <printf_parse@@Base+0xc04>
   22090:	cbnz	x0, 220c0 <printf_parse@@Base+0x4c90>
   22094:	mov	x1, x27
   22098:	mov	x0, x24
   2209c:	bl	1e034 <printf_parse@@Base+0xc04>
   220a0:	cbz	x0, 220c0 <printf_parse@@Base+0x4c90>
   220a4:	ldr	x2, [x22, #56]
   220a8:	add	x2, x2, x19
   220ac:	mov	x1, x25
   220b0:	mov	x0, x26
   220b4:	bl	202fc <printf_parse@@Base+0x2ecc>
   220b8:	mov	w19, w0
   220bc:	cbnz	w0, 21fd8 <printf_parse@@Base+0x4ba8>
   220c0:	add	x20, x20, #0x1
   220c4:	ldr	x0, [x21, #8]
   220c8:	cmp	x0, x20
   220cc:	b.le	21ff0 <printf_parse@@Base+0x4bc0>
   220d0:	ldr	x0, [x21, #16]
   220d4:	ldr	x4, [x0, x20, lsl #3]
   220d8:	cmp	x23, x4
   220dc:	b.eq	220c0 <printf_parse@@Base+0x4c90>  // b.none
   220e0:	ldr	x0, [x22]
   220e4:	add	x0, x0, x4, lsl #4
   220e8:	ldrb	w0, [x0, #8]
   220ec:	tbz	w0, #3, 220c0 <printf_parse@@Base+0x4c90>
   220f0:	add	x4, x4, x4, lsl #1
   220f4:	lsl	x19, x4, #3
   220f8:	ldr	x0, [x22, #40]
   220fc:	add	x0, x0, x19
   22100:	ldr	x1, [x0, #16]
   22104:	ldr	x27, [x1]
   22108:	ldr	x0, [x0, #8]
   2210c:	cmp	x0, #0x1
   22110:	b.le	22084 <printf_parse@@Base+0x4c54>
   22114:	ldr	x28, [x1, #8]
   22118:	mov	x1, x27
   2211c:	mov	x0, x21
   22120:	bl	1e034 <printf_parse@@Base+0xc04>
   22124:	cbnz	x0, 22138 <printf_parse@@Base+0x4d08>
   22128:	mov	x1, x27
   2212c:	mov	x0, x24
   22130:	bl	1e034 <printf_parse@@Base+0xc04>
   22134:	cbnz	x0, 220a4 <printf_parse@@Base+0x4c74>
   22138:	cmp	x28, #0x0
   2213c:	b.le	220c0 <printf_parse@@Base+0x4c90>
   22140:	mov	x1, x28
   22144:	mov	x0, x21
   22148:	bl	1e034 <printf_parse@@Base+0xc04>
   2214c:	cbnz	x0, 220c0 <printf_parse@@Base+0x4c90>
   22150:	mov	x1, x28
   22154:	mov	x0, x24
   22158:	bl	1e034 <printf_parse@@Base+0xc04>
   2215c:	cbz	x0, 220c0 <printf_parse@@Base+0x4c90>
   22160:	b	220a4 <printf_parse@@Base+0x4c74>
   22164:	stp	x29, x30, [sp, #-64]!
   22168:	mov	x29, sp
   2216c:	str	x23, [sp, #48]
   22170:	mov	x23, x0
   22174:	ldr	x0, [x0, #232]
   22178:	cmp	x0, #0x0
   2217c:	b.le	22214 <printf_parse@@Base+0x4de4>
   22180:	stp	x19, x20, [sp, #16]
   22184:	stp	x21, x22, [sp, #32]
   22188:	mov	x22, #0x0                   	// #0
   2218c:	b	221a8 <printf_parse@@Base+0x4d78>
   22190:	mov	x0, x21
   22194:	bl	aa50 <free@plt>
   22198:	add	x22, x22, #0x1
   2219c:	ldr	x0, [x23, #232]
   221a0:	cmp	x0, x22
   221a4:	b.le	2220c <printf_parse@@Base+0x4ddc>
   221a8:	ldr	x0, [x23, #248]
   221ac:	ldr	x21, [x0, x22, lsl #3]
   221b0:	ldr	x0, [x21, #32]
   221b4:	cmp	x0, #0x0
   221b8:	b.le	221e8 <printf_parse@@Base+0x4db8>
   221bc:	mov	x19, #0x0                   	// #0
   221c0:	ldr	x1, [x21, #40]
   221c4:	ldr	x20, [x1, x19, lsl #3]
   221c8:	ldr	x0, [x20, #32]
   221cc:	bl	aa50 <free@plt>
   221d0:	mov	x0, x20
   221d4:	bl	aa50 <free@plt>
   221d8:	add	x19, x19, #0x1
   221dc:	ldr	x1, [x21, #32]
   221e0:	cmp	x1, x19
   221e4:	b.gt	221c0 <printf_parse@@Base+0x4d90>
   221e8:	ldr	x0, [x21, #40]
   221ec:	bl	aa50 <free@plt>
   221f0:	ldr	x0, [x21, #16]
   221f4:	cbz	x0, 22190 <printf_parse@@Base+0x4d60>
   221f8:	ldr	x0, [x0, #16]
   221fc:	bl	aa50 <free@plt>
   22200:	ldr	x0, [x21, #16]
   22204:	bl	aa50 <free@plt>
   22208:	b	22190 <printf_parse@@Base+0x4d60>
   2220c:	ldp	x19, x20, [sp, #16]
   22210:	ldp	x21, x22, [sp, #32]
   22214:	str	xzr, [x23, #232]
   22218:	str	xzr, [x23, #200]
   2221c:	ldr	x23, [sp, #48]
   22220:	ldp	x29, x30, [sp], #64
   22224:	ret
   22228:	cbz	x0, 222a4 <printf_parse@@Base+0x4e74>
   2222c:	stp	x29, x30, [sp, #-48]!
   22230:	mov	x29, sp
   22234:	stp	x19, x20, [sp, #16]
   22238:	mov	x20, x0
   2223c:	ldr	x0, [x0]
   22240:	cmp	x0, #0x0
   22244:	b.le	2228c <printf_parse@@Base+0x4e5c>
   22248:	str	x21, [sp, #32]
   2224c:	mov	x19, #0x0                   	// #0
   22250:	mov	x21, #0x0                   	// #0
   22254:	ldr	x1, [x20, #16]
   22258:	add	x1, x1, x19
   2225c:	ldr	x0, [x1, #40]
   22260:	bl	aa50 <free@plt>
   22264:	ldr	x1, [x20, #16]
   22268:	add	x1, x1, x19
   2226c:	ldr	x0, [x1, #16]
   22270:	bl	aa50 <free@plt>
   22274:	add	x21, x21, #0x1
   22278:	add	x19, x19, #0x30
   2227c:	ldr	x0, [x20]
   22280:	cmp	x0, x21
   22284:	b.gt	22254 <printf_parse@@Base+0x4e24>
   22288:	ldr	x21, [sp, #32]
   2228c:	ldr	x0, [x20, #16]
   22290:	bl	aa50 <free@plt>
   22294:	mov	w0, #0x0                   	// #0
   22298:	ldp	x19, x20, [sp, #16]
   2229c:	ldp	x29, x30, [sp], #48
   222a0:	ret
   222a4:	mov	w0, #0x0                   	// #0
   222a8:	ret
   222ac:	stp	x29, x30, [sp, #-48]!
   222b0:	mov	x29, sp
   222b4:	mov	x3, x0
   222b8:	ldr	x5, [x1, #56]
   222bc:	ldrb	w2, [x1, #48]
   222c0:	cmp	w2, #0xb
   222c4:	b.hi	22348 <printf_parse@@Base+0x4f18>  // b.pmore
   222c8:	cmp	w2, #0x9
   222cc:	b.hi	22364 <printf_parse@@Base+0x4f34>  // b.pmore
   222d0:	cmp	w2, #0x4
   222d4:	b.eq	22488 <printf_parse@@Base+0x5058>  // b.none
   222d8:	b.ls	22308 <printf_parse@@Base+0x4ed8>  // b.plast
   222dc:	sub	w4, w2, #0x8
   222e0:	and	w4, w4, #0xff
   222e4:	cmp	w4, #0x1
   222e8:	b.hi	224c4 <printf_parse@@Base+0x5094>  // b.pmore
   222ec:	ldr	x1, [x1, #32]
   222f0:	add	x5, x5, x5, lsl #1
   222f4:	ldr	x0, [x3, #40]
   222f8:	ldr	x1, [x1, #56]
   222fc:	add	x0, x0, x5, lsl #3
   22300:	bl	1efc4 <printf_parse@@Base+0x1b94>
   22304:	b	2235c <printf_parse@@Base+0x4f2c>
   22308:	cmp	w2, #0x2
   2230c:	b.ne	224f4 <printf_parse@@Base+0x50c4>  // b.any
   22310:	ldr	x1, [x1, #32]
   22314:	mov	w0, #0x0                   	// #0
   22318:	cbz	x1, 2235c <printf_parse@@Base+0x4f2c>
   2231c:	stp	x19, x20, [sp, #16]
   22320:	str	x21, [sp, #32]
   22324:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   22328:	add	x3, x3, #0xcb8
   2232c:	add	x3, x3, #0x20
   22330:	mov	w2, #0x59f                 	// #1439
   22334:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   22338:	add	x1, x1, #0xf48
   2233c:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   22340:	add	x0, x0, #0xf58
   22344:	bl	aea0 <__assert_fail@plt>
   22348:	cmp	w2, #0xc
   2234c:	b.eq	222ec <printf_parse@@Base+0x4ebc>  // b.none
   22350:	mov	w0, #0x0                   	// #0
   22354:	cmp	w2, #0x10
   22358:	b.ne	224c4 <printf_parse@@Base+0x5094>  // b.any
   2235c:	ldp	x29, x30, [sp], #48
   22360:	ret
   22364:	stp	x19, x20, [sp, #16]
   22368:	str	x21, [sp, #32]
   2236c:	ldrb	w0, [x0, #176]
   22370:	orr	w0, w0, #0x1
   22374:	strb	w0, [x3, #176]
   22378:	ldr	x0, [x1, #8]
   2237c:	cbz	x0, 223f4 <printf_parse@@Base+0x4fc4>
   22380:	ldr	x0, [x0, #24]
   22384:	ldr	x19, [x0, #56]
   22388:	ldr	x0, [x1, #16]
   2238c:	cbz	x0, 22400 <printf_parse@@Base+0x4fd0>
   22390:	ldr	x0, [x0, #24]
   22394:	ldr	x20, [x0, #56]
   22398:	tbnz	x19, #63, 2240c <printf_parse@@Base+0x4fdc>
   2239c:	tbnz	x20, #63, 22430 <printf_parse@@Base+0x5000>
   223a0:	add	x5, x5, x5, lsl #1
   223a4:	lsl	x5, x5, #3
   223a8:	ldr	x0, [x3, #40]
   223ac:	add	x21, x0, x5
   223b0:	mov	x1, #0x2                   	// #2
   223b4:	str	x1, [x0, x5]
   223b8:	mov	x0, #0x10                  	// #16
   223bc:	bl	a5f0 <malloc@plt>
   223c0:	str	x0, [x21, #16]
   223c4:	cbz	x0, 2250c <printf_parse@@Base+0x50dc>
   223c8:	cmp	x19, x20
   223cc:	b.eq	22454 <printf_parse@@Base+0x5024>  // b.none
   223d0:	mov	x1, #0x2                   	// #2
   223d4:	str	x1, [x21, #8]
   223d8:	b.ge	22470 <printf_parse@@Base+0x5040>  // b.tcont
   223dc:	str	x19, [x0]
   223e0:	str	x20, [x0, #8]
   223e4:	mov	w0, #0x0                   	// #0
   223e8:	ldp	x19, x20, [sp, #16]
   223ec:	ldr	x21, [sp, #32]
   223f0:	b	2235c <printf_parse@@Base+0x4f2c>
   223f4:	ldr	x0, [x1, #32]
   223f8:	ldr	x19, [x0, #56]
   223fc:	b	22388 <printf_parse@@Base+0x4f58>
   22400:	ldr	x0, [x1, #32]
   22404:	ldr	x20, [x0, #56]
   22408:	b	22398 <printf_parse@@Base+0x4f68>
   2240c:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   22410:	add	x3, x3, #0xcb8
   22414:	add	x3, x3, #0x20
   22418:	mov	w2, #0x5af                 	// #1455
   2241c:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   22420:	add	x1, x1, #0xf48
   22424:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   22428:	add	x0, x0, #0xf70
   2242c:	bl	aea0 <__assert_fail@plt>
   22430:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   22434:	add	x3, x3, #0xcb8
   22438:	add	x3, x3, #0x20
   2243c:	mov	w2, #0x5b0                 	// #1456
   22440:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   22444:	add	x1, x1, #0xf48
   22448:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   2244c:	add	x0, x0, #0xf80
   22450:	bl	aea0 <__assert_fail@plt>
   22454:	mov	x1, #0x1                   	// #1
   22458:	str	x1, [x21, #8]
   2245c:	str	x19, [x0]
   22460:	mov	w0, #0x0                   	// #0
   22464:	ldp	x19, x20, [sp, #16]
   22468:	ldr	x21, [sp, #32]
   2246c:	b	2235c <printf_parse@@Base+0x4f2c>
   22470:	str	x20, [x0]
   22474:	str	x19, [x0, #8]
   22478:	mov	w0, #0x0                   	// #0
   2247c:	ldp	x19, x20, [sp, #16]
   22480:	ldr	x21, [sp, #32]
   22484:	b	2235c <printf_parse@@Base+0x4f2c>
   22488:	ldr	x0, [x1, #32]
   2248c:	ldr	x2, [x0, #56]
   22490:	ldr	x0, [x3, #24]
   22494:	str	x2, [x0, x5, lsl #3]
   22498:	ldrb	w1, [x1, #48]
   2249c:	mov	w0, #0x0                   	// #0
   224a0:	cmp	w1, #0x4
   224a4:	b.ne	2235c <printf_parse@@Base+0x4f2c>  // b.any
   224a8:	ldr	x1, [x3, #24]
   224ac:	add	x2, x5, x5, lsl #1
   224b0:	ldr	x0, [x3, #40]
   224b4:	ldr	x1, [x1, x5, lsl #3]
   224b8:	add	x0, x0, x2, lsl #3
   224bc:	bl	1efc4 <printf_parse@@Base+0x1b94>
   224c0:	b	2235c <printf_parse@@Base+0x4f2c>
   224c4:	tbz	w2, #3, 224f4 <printf_parse@@Base+0x50c4>
   224c8:	stp	x19, x20, [sp, #16]
   224cc:	str	x21, [sp, #32]
   224d0:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   224d4:	add	x3, x3, #0xcb8
   224d8:	add	x3, x3, #0x20
   224dc:	mov	w2, #0x5c2                 	// #1474
   224e0:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   224e4:	add	x1, x1, #0xf48
   224e8:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   224ec:	add	x0, x0, #0xf90
   224f0:	bl	aea0 <__assert_fail@plt>
   224f4:	ldr	x0, [x1, #32]
   224f8:	ldr	x1, [x0, #56]
   224fc:	ldr	x0, [x3, #24]
   22500:	str	x1, [x0, x5, lsl #3]
   22504:	mov	w0, #0x0                   	// #0
   22508:	b	2235c <printf_parse@@Base+0x4f2c>
   2250c:	mov	w0, #0xc                   	// #12
   22510:	ldp	x19, x20, [sp, #16]
   22514:	ldr	x21, [sp, #32]
   22518:	b	2235c <printf_parse@@Base+0x4f2c>
   2251c:	stp	x29, x30, [sp, #-48]!
   22520:	mov	x29, sp
   22524:	stp	x19, x20, [sp, #16]
   22528:	str	x21, [sp, #32]
   2252c:	mov	x20, x0
   22530:	ldr	x19, [x0]
   22534:	sub	x19, x19, #0x1
   22538:	str	x19, [x0]
   2253c:	tbnz	x19, #63, 225bc <printf_parse@@Base+0x518c>
   22540:	mov	x0, x3
   22544:	mov	x21, x4
   22548:	add	x19, x19, x19, lsl #1
   2254c:	lsl	x19, x19, #4
   22550:	ldr	x3, [x20, #16]
   22554:	ldr	x3, [x3, x19]
   22558:	str	x3, [x1]
   2255c:	ldr	x1, [x20, #16]
   22560:	add	x1, x1, x19
   22564:	lsl	x2, x2, #4
   22568:	ldr	x1, [x1, #16]
   2256c:	bl	a2c0 <memcpy@plt>
   22570:	ldr	x0, [x21, #16]
   22574:	bl	aa50 <free@plt>
   22578:	ldr	x0, [x20, #16]
   2257c:	add	x0, x0, x19
   22580:	ldr	x0, [x0, #16]
   22584:	bl	aa50 <free@plt>
   22588:	ldr	x0, [x20, #16]
   2258c:	add	x0, x0, x19
   22590:	ldp	x2, x3, [x0, #24]
   22594:	stp	x2, x3, [x21]
   22598:	ldr	x0, [x0, #40]
   2259c:	str	x0, [x21, #16]
   225a0:	ldr	x0, [x20, #16]
   225a4:	add	x19, x0, x19
   225a8:	ldr	x0, [x19, #8]
   225ac:	ldp	x19, x20, [sp, #16]
   225b0:	ldr	x21, [sp, #32]
   225b4:	ldp	x29, x30, [sp], #48
   225b8:	ret
   225bc:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   225c0:	add	x3, x3, #0xcb8
   225c4:	add	x3, x3, #0x30
   225c8:	mov	w2, #0x555                 	// #1365
   225cc:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   225d0:	add	x1, x1, #0xfb8
   225d4:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   225d8:	add	x0, x0, #0xfc8
   225dc:	bl	aea0 <__assert_fail@plt>
   225e0:	stp	x29, x30, [sp, #-64]!
   225e4:	mov	x29, sp
   225e8:	stp	x19, x20, [sp, #16]
   225ec:	stp	x21, x22, [sp, #32]
   225f0:	stp	x23, x24, [sp, #48]
   225f4:	mov	x21, x0
   225f8:	mov	x19, x1
   225fc:	mov	x20, x2
   22600:	mov	x23, x3
   22604:	mov	x22, x4
   22608:	tbz	w5, #22, 22640 <printf_parse@@Base+0x5210>
   2260c:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   22610:	add	x1, x1, #0xfe0
   22614:	mov	x0, x4
   22618:	bl	a9b0 <strcmp@plt>
   2261c:	cbz	w0, 22698 <printf_parse@@Base+0x5268>
   22620:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   22624:	add	x1, x1, #0xfe8
   22628:	mov	x0, x22
   2262c:	bl	a9b0 <strcmp@plt>
   22630:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   22634:	add	x1, x1, #0xfd8
   22638:	cmp	w0, #0x0
   2263c:	csel	x22, x1, x22, eq  // eq = none
   22640:	ldr	x0, [x20, #72]
   22644:	ldr	x1, [x23]
   22648:	cmp	x1, x0
   2264c:	b.eq	226a4 <printf_parse@@Base+0x5274>  // b.none
   22650:	ldr	x24, [x20, #24]
   22654:	ldr	x23, [x20, #72]
   22658:	add	x0, x23, #0x1
   2265c:	str	x0, [x20, #72]
   22660:	mov	x0, x22
   22664:	bl	a3c0 <wctype@plt>
   22668:	str	x0, [x24, x23, lsl #3]
   2266c:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   22670:	add	x1, x1, #0xff0
   22674:	mov	x0, x22
   22678:	bl	a9b0 <strcmp@plt>
   2267c:	mov	w20, w0
   22680:	cbnz	w0, 2275c <printf_parse@@Base+0x532c>
   22684:	cbnz	x21, 226c8 <printf_parse@@Base+0x5298>
   22688:	bl	a9d0 <__ctype_b_loc@plt>
   2268c:	mov	x2, #0x0                   	// #0
   22690:	mov	x6, #0x1                   	// #1
   22694:	b	2271c <printf_parse@@Base+0x52ec>
   22698:	adrp	x22, 2e000 <vasnprintf@@Base+0x3378>
   2269c:	add	x22, x22, #0xfd8
   226a0:	b	22640 <printf_parse@@Base+0x5210>
   226a4:	lsl	x0, x0, #1
   226a8:	add	x24, x0, #0x1
   226ac:	lsl	x1, x24, #3
   226b0:	ldr	x0, [x20, #24]
   226b4:	bl	a7e0 <realloc@plt>
   226b8:	cbz	x0, 22fc4 <printf_parse@@Base+0x5b94>
   226bc:	str	x0, [x20, #24]
   226c0:	str	x24, [x23]
   226c4:	b	22650 <printf_parse@@Base+0x5220>
   226c8:	bl	a9d0 <__ctype_b_loc@plt>
   226cc:	mov	x4, x0
   226d0:	mov	x1, #0x0                   	// #0
   226d4:	mov	x5, #0x1                   	// #1
   226d8:	b	226e8 <printf_parse@@Base+0x52b8>
   226dc:	add	x1, x1, #0x1
   226e0:	cmp	x1, #0x100
   226e4:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   226e8:	ldr	x0, [x4]
   226ec:	ldrh	w2, [x0, x1, lsl #1]
   226f0:	tbz	w2, #3, 226dc <printf_parse@@Base+0x52ac>
   226f4:	ldrb	w2, [x21, x1]
   226f8:	ubfx	x0, x2, #6, #2
   226fc:	lsl	x2, x5, x2
   22700:	ldr	x3, [x19, x0, lsl #3]
   22704:	orr	x2, x3, x2
   22708:	str	x2, [x19, x0, lsl #3]
   2270c:	b	226dc <printf_parse@@Base+0x52ac>
   22710:	add	x2, x2, #0x1
   22714:	cmp	x2, #0x100
   22718:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   2271c:	ldr	x1, [x0]
   22720:	ldrh	w1, [x1, x2, lsl #1]
   22724:	tbz	w1, #3, 22710 <printf_parse@@Base+0x52e0>
   22728:	add	x3, x2, #0x3f
   2272c:	cmp	x2, #0x0
   22730:	csel	x3, x3, x2, lt  // lt = tstop
   22734:	asr	x3, x3, #6
   22738:	negs	x5, x2
   2273c:	and	x4, x2, #0x3f
   22740:	and	x5, x5, #0x3f
   22744:	csneg	x4, x4, x5, mi  // mi = first
   22748:	lsl	x4, x6, x4
   2274c:	ldr	x1, [x19, x3, lsl #3]
   22750:	orr	x4, x1, x4
   22754:	str	x4, [x19, x3, lsl #3]
   22758:	b	22710 <printf_parse@@Base+0x52e0>
   2275c:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   22760:	add	x1, x1, #0xff8
   22764:	mov	x0, x22
   22768:	bl	a9b0 <strcmp@plt>
   2276c:	mov	w20, w0
   22770:	cbnz	w0, 2281c <printf_parse@@Base+0x53ec>
   22774:	cbnz	x21, 22788 <printf_parse@@Base+0x5358>
   22778:	bl	a9d0 <__ctype_b_loc@plt>
   2277c:	mov	x1, #0x0                   	// #0
   22780:	mov	x5, #0x1                   	// #1
   22784:	b	227dc <printf_parse@@Base+0x53ac>
   22788:	bl	a9d0 <__ctype_b_loc@plt>
   2278c:	mov	x4, x0
   22790:	mov	x1, #0x0                   	// #0
   22794:	mov	x5, #0x1                   	// #1
   22798:	b	227a8 <printf_parse@@Base+0x5378>
   2279c:	add	x1, x1, #0x1
   227a0:	cmp	x1, #0x100
   227a4:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   227a8:	ldr	x0, [x4]
   227ac:	ldrh	w0, [x0, x1, lsl #1]
   227b0:	tbz	w0, #1, 2279c <printf_parse@@Base+0x536c>
   227b4:	ldrb	w0, [x21, x1]
   227b8:	ubfx	x3, x0, #6, #2
   227bc:	lsl	x0, x5, x0
   227c0:	ldr	x2, [x19, x3, lsl #3]
   227c4:	orr	x0, x2, x0
   227c8:	str	x0, [x19, x3, lsl #3]
   227cc:	b	2279c <printf_parse@@Base+0x536c>
   227d0:	add	x1, x1, #0x1
   227d4:	cmp	x1, #0x100
   227d8:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   227dc:	ldr	x2, [x0]
   227e0:	ldrh	w2, [x2, x1, lsl #1]
   227e4:	tbz	w2, #1, 227d0 <printf_parse@@Base+0x53a0>
   227e8:	add	x2, x1, #0x3f
   227ec:	cmp	x1, #0x0
   227f0:	csel	x2, x2, x1, lt  // lt = tstop
   227f4:	asr	x2, x2, #6
   227f8:	negs	x4, x1
   227fc:	and	x3, x1, #0x3f
   22800:	and	x4, x4, #0x3f
   22804:	csneg	x3, x3, x4, mi  // mi = first
   22808:	lsl	x3, x5, x3
   2280c:	ldr	x4, [x19, x2, lsl #3]
   22810:	orr	x3, x4, x3
   22814:	str	x3, [x19, x2, lsl #3]
   22818:	b	227d0 <printf_parse@@Base+0x53a0>
   2281c:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   22820:	add	x1, x1, #0xfe8
   22824:	mov	x0, x22
   22828:	bl	a9b0 <strcmp@plt>
   2282c:	mov	w20, w0
   22830:	cbnz	w0, 228e0 <printf_parse@@Base+0x54b0>
   22834:	cbnz	x21, 2284c <printf_parse@@Base+0x541c>
   22838:	bl	a9d0 <__ctype_b_loc@plt>
   2283c:	mov	x4, x0
   22840:	mov	x0, #0x0                   	// #0
   22844:	mov	x5, #0x1                   	// #1
   22848:	b	228a0 <printf_parse@@Base+0x5470>
   2284c:	bl	a9d0 <__ctype_b_loc@plt>
   22850:	mov	x4, x0
   22854:	mov	x0, #0x0                   	// #0
   22858:	mov	x5, #0x1                   	// #1
   2285c:	b	2286c <printf_parse@@Base+0x543c>
   22860:	add	x0, x0, #0x1
   22864:	cmp	x0, #0x100
   22868:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   2286c:	ldr	x1, [x4]
   22870:	ldrh	w1, [x1, x0, lsl #1]
   22874:	tbz	w1, #9, 22860 <printf_parse@@Base+0x5430>
   22878:	ldrb	w1, [x21, x0]
   2287c:	ubfx	x3, x1, #6, #2
   22880:	lsl	x1, x5, x1
   22884:	ldr	x2, [x19, x3, lsl #3]
   22888:	orr	x1, x2, x1
   2288c:	str	x1, [x19, x3, lsl #3]
   22890:	b	22860 <printf_parse@@Base+0x5430>
   22894:	add	x0, x0, #0x1
   22898:	cmp	x0, #0x100
   2289c:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   228a0:	ldr	x1, [x4]
   228a4:	ldrh	w1, [x1, x0, lsl #1]
   228a8:	tbz	w1, #9, 22894 <printf_parse@@Base+0x5464>
   228ac:	add	x1, x0, #0x3f
   228b0:	cmp	x0, #0x0
   228b4:	csel	x1, x1, x0, lt  // lt = tstop
   228b8:	asr	x1, x1, #6
   228bc:	negs	x3, x0
   228c0:	and	x2, x0, #0x3f
   228c4:	and	x3, x3, #0x3f
   228c8:	csneg	x2, x2, x3, mi  // mi = first
   228cc:	lsl	x2, x5, x2
   228d0:	ldr	x3, [x19, x1, lsl #3]
   228d4:	orr	x2, x3, x2
   228d8:	str	x2, [x19, x1, lsl #3]
   228dc:	b	22894 <printf_parse@@Base+0x5464>
   228e0:	adrp	x1, 2f000 <vasnprintf@@Base+0x4378>
   228e4:	add	x1, x1, #0x0
   228e8:	mov	x0, x22
   228ec:	bl	a9b0 <strcmp@plt>
   228f0:	mov	w20, w0
   228f4:	cbnz	w0, 229a4 <printf_parse@@Base+0x5574>
   228f8:	cbnz	x21, 22910 <printf_parse@@Base+0x54e0>
   228fc:	bl	a9d0 <__ctype_b_loc@plt>
   22900:	mov	x4, x0
   22904:	mov	x0, #0x0                   	// #0
   22908:	mov	x5, #0x1                   	// #1
   2290c:	b	22964 <printf_parse@@Base+0x5534>
   22910:	bl	a9d0 <__ctype_b_loc@plt>
   22914:	mov	x4, x0
   22918:	mov	x0, #0x0                   	// #0
   2291c:	mov	x5, #0x1                   	// #1
   22920:	b	22930 <printf_parse@@Base+0x5500>
   22924:	add	x0, x0, #0x1
   22928:	cmp	x0, #0x100
   2292c:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22930:	ldr	x1, [x4]
   22934:	ldrh	w1, [x1, x0, lsl #1]
   22938:	tbz	w1, #13, 22924 <printf_parse@@Base+0x54f4>
   2293c:	ldrb	w1, [x21, x0]
   22940:	ubfx	x3, x1, #6, #2
   22944:	lsl	x1, x5, x1
   22948:	ldr	x2, [x19, x3, lsl #3]
   2294c:	orr	x1, x2, x1
   22950:	str	x1, [x19, x3, lsl #3]
   22954:	b	22924 <printf_parse@@Base+0x54f4>
   22958:	add	x0, x0, #0x1
   2295c:	cmp	x0, #0x100
   22960:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22964:	ldr	x1, [x4]
   22968:	ldrh	w1, [x1, x0, lsl #1]
   2296c:	tbz	w1, #13, 22958 <printf_parse@@Base+0x5528>
   22970:	add	x1, x0, #0x3f
   22974:	cmp	x0, #0x0
   22978:	csel	x1, x1, x0, lt  // lt = tstop
   2297c:	asr	x1, x1, #6
   22980:	negs	x3, x0
   22984:	and	x2, x0, #0x3f
   22988:	and	x3, x3, #0x3f
   2298c:	csneg	x2, x2, x3, mi  // mi = first
   22990:	lsl	x2, x5, x2
   22994:	ldr	x3, [x19, x1, lsl #3]
   22998:	orr	x2, x3, x2
   2299c:	str	x2, [x19, x1, lsl #3]
   229a0:	b	22958 <printf_parse@@Base+0x5528>
   229a4:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   229a8:	add	x1, x1, #0xfd8
   229ac:	mov	x0, x22
   229b0:	bl	a9b0 <strcmp@plt>
   229b4:	mov	w20, w0
   229b8:	cbnz	w0, 22a68 <printf_parse@@Base+0x5638>
   229bc:	cbnz	x21, 229d4 <printf_parse@@Base+0x55a4>
   229c0:	bl	a9d0 <__ctype_b_loc@plt>
   229c4:	mov	x4, x0
   229c8:	mov	x0, #0x0                   	// #0
   229cc:	mov	x5, #0x1                   	// #1
   229d0:	b	22a28 <printf_parse@@Base+0x55f8>
   229d4:	bl	a9d0 <__ctype_b_loc@plt>
   229d8:	mov	x3, x0
   229dc:	mov	x0, #0x0                   	// #0
   229e0:	mov	x5, #0x1                   	// #1
   229e4:	b	229f4 <printf_parse@@Base+0x55c4>
   229e8:	add	x0, x0, #0x1
   229ec:	cmp	x0, #0x100
   229f0:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   229f4:	ldr	x1, [x3]
   229f8:	ldrh	w1, [x1, x0, lsl #1]
   229fc:	tbz	w1, #10, 229e8 <printf_parse@@Base+0x55b8>
   22a00:	ldrb	w1, [x21, x0]
   22a04:	ubfx	x4, x1, #6, #2
   22a08:	lsl	x1, x5, x1
   22a0c:	ldr	x2, [x19, x4, lsl #3]
   22a10:	orr	x1, x2, x1
   22a14:	str	x1, [x19, x4, lsl #3]
   22a18:	b	229e8 <printf_parse@@Base+0x55b8>
   22a1c:	add	x0, x0, #0x1
   22a20:	cmp	x0, #0x100
   22a24:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22a28:	ldr	x1, [x4]
   22a2c:	ldrh	w1, [x1, x0, lsl #1]
   22a30:	tbz	w1, #10, 22a1c <printf_parse@@Base+0x55ec>
   22a34:	add	x1, x0, #0x3f
   22a38:	cmp	x0, #0x0
   22a3c:	csel	x1, x1, x0, lt  // lt = tstop
   22a40:	asr	x1, x1, #6
   22a44:	negs	x3, x0
   22a48:	and	x2, x0, #0x3f
   22a4c:	and	x3, x3, #0x3f
   22a50:	csneg	x2, x2, x3, mi  // mi = first
   22a54:	lsl	x2, x5, x2
   22a58:	ldr	x3, [x19, x1, lsl #3]
   22a5c:	orr	x2, x3, x2
   22a60:	str	x2, [x19, x1, lsl #3]
   22a64:	b	22a1c <printf_parse@@Base+0x55ec>
   22a68:	adrp	x1, 2f000 <vasnprintf@@Base+0x4378>
   22a6c:	add	x1, x1, #0x8
   22a70:	mov	x0, x22
   22a74:	bl	a9b0 <strcmp@plt>
   22a78:	mov	w20, w0
   22a7c:	cbnz	w0, 22b2c <printf_parse@@Base+0x56fc>
   22a80:	cbnz	x21, 22a98 <printf_parse@@Base+0x5668>
   22a84:	bl	a9d0 <__ctype_b_loc@plt>
   22a88:	mov	x4, x0
   22a8c:	mov	x0, #0x0                   	// #0
   22a90:	mov	x5, #0x1                   	// #1
   22a94:	b	22aec <printf_parse@@Base+0x56bc>
   22a98:	bl	a9d0 <__ctype_b_loc@plt>
   22a9c:	mov	x1, x0
   22aa0:	mov	x0, #0x0                   	// #0
   22aa4:	mov	x5, #0x1                   	// #1
   22aa8:	b	22ab8 <printf_parse@@Base+0x5688>
   22aac:	add	x0, x0, #0x1
   22ab0:	cmp	x0, #0x100
   22ab4:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22ab8:	ldr	x2, [x1]
   22abc:	ldrh	w2, [x2, x0, lsl #1]
   22ac0:	tbz	w2, #11, 22aac <printf_parse@@Base+0x567c>
   22ac4:	ldrb	w2, [x21, x0]
   22ac8:	ubfx	x4, x2, #6, #2
   22acc:	lsl	x2, x5, x2
   22ad0:	ldr	x3, [x19, x4, lsl #3]
   22ad4:	orr	x2, x3, x2
   22ad8:	str	x2, [x19, x4, lsl #3]
   22adc:	b	22aac <printf_parse@@Base+0x567c>
   22ae0:	add	x0, x0, #0x1
   22ae4:	cmp	x0, #0x100
   22ae8:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22aec:	ldr	x1, [x4]
   22af0:	ldrh	w1, [x1, x0, lsl #1]
   22af4:	tbz	w1, #11, 22ae0 <printf_parse@@Base+0x56b0>
   22af8:	add	x1, x0, #0x3f
   22afc:	cmp	x0, #0x0
   22b00:	csel	x1, x1, x0, lt  // lt = tstop
   22b04:	asr	x1, x1, #6
   22b08:	negs	x3, x0
   22b0c:	and	x2, x0, #0x3f
   22b10:	and	x3, x3, #0x3f
   22b14:	csneg	x2, x2, x3, mi  // mi = first
   22b18:	lsl	x2, x5, x2
   22b1c:	ldr	x3, [x19, x1, lsl #3]
   22b20:	orr	x2, x3, x2
   22b24:	str	x2, [x19, x1, lsl #3]
   22b28:	b	22ae0 <printf_parse@@Base+0x56b0>
   22b2c:	adrp	x1, 2f000 <vasnprintf@@Base+0x4378>
   22b30:	add	x1, x1, #0x10
   22b34:	mov	x0, x22
   22b38:	bl	a9b0 <strcmp@plt>
   22b3c:	mov	w20, w0
   22b40:	cbnz	w0, 22bf0 <printf_parse@@Base+0x57c0>
   22b44:	cbnz	x21, 22b5c <printf_parse@@Base+0x572c>
   22b48:	bl	a9d0 <__ctype_b_loc@plt>
   22b4c:	mov	x4, x0
   22b50:	mov	x0, #0x0                   	// #0
   22b54:	mov	x5, #0x1                   	// #1
   22b58:	b	22bb0 <printf_parse@@Base+0x5780>
   22b5c:	bl	a9d0 <__ctype_b_loc@plt>
   22b60:	mov	x2, x0
   22b64:	mov	x0, #0x0                   	// #0
   22b68:	mov	x5, #0x1                   	// #1
   22b6c:	b	22b7c <printf_parse@@Base+0x574c>
   22b70:	add	x0, x0, #0x1
   22b74:	cmp	x0, #0x100
   22b78:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22b7c:	ldr	x1, [x2]
   22b80:	ldrh	w1, [x1, x0, lsl #1]
   22b84:	tbz	w1, #14, 22b70 <printf_parse@@Base+0x5740>
   22b88:	ldrb	w1, [x21, x0]
   22b8c:	ubfx	x4, x1, #6, #2
   22b90:	lsl	x1, x5, x1
   22b94:	ldr	x3, [x19, x4, lsl #3]
   22b98:	orr	x1, x3, x1
   22b9c:	str	x1, [x19, x4, lsl #3]
   22ba0:	b	22b70 <printf_parse@@Base+0x5740>
   22ba4:	add	x0, x0, #0x1
   22ba8:	cmp	x0, #0x100
   22bac:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22bb0:	ldr	x1, [x4]
   22bb4:	ldrh	w1, [x1, x0, lsl #1]
   22bb8:	tbz	w1, #14, 22ba4 <printf_parse@@Base+0x5774>
   22bbc:	add	x1, x0, #0x3f
   22bc0:	cmp	x0, #0x0
   22bc4:	csel	x1, x1, x0, lt  // lt = tstop
   22bc8:	asr	x1, x1, #6
   22bcc:	negs	x2, x0
   22bd0:	and	x3, x0, #0x3f
   22bd4:	and	x2, x2, #0x3f
   22bd8:	csneg	x2, x3, x2, mi  // mi = first
   22bdc:	lsl	x2, x5, x2
   22be0:	ldr	x3, [x19, x1, lsl #3]
   22be4:	orr	x2, x3, x2
   22be8:	str	x2, [x19, x1, lsl #3]
   22bec:	b	22ba4 <printf_parse@@Base+0x5774>
   22bf0:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   22bf4:	add	x1, x1, #0xfe0
   22bf8:	mov	x0, x22
   22bfc:	bl	a9b0 <strcmp@plt>
   22c00:	mov	w20, w0
   22c04:	cbnz	w0, 22cb4 <printf_parse@@Base+0x5884>
   22c08:	cbnz	x21, 22c20 <printf_parse@@Base+0x57f0>
   22c0c:	bl	a9d0 <__ctype_b_loc@plt>
   22c10:	mov	x4, x0
   22c14:	mov	x0, #0x0                   	// #0
   22c18:	mov	x5, #0x1                   	// #1
   22c1c:	b	22c74 <printf_parse@@Base+0x5844>
   22c20:	bl	a9d0 <__ctype_b_loc@plt>
   22c24:	mov	x2, x0
   22c28:	mov	x0, #0x0                   	// #0
   22c2c:	mov	x5, #0x1                   	// #1
   22c30:	b	22c40 <printf_parse@@Base+0x5810>
   22c34:	add	x0, x0, #0x1
   22c38:	cmp	x0, #0x100
   22c3c:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22c40:	ldr	x1, [x2]
   22c44:	ldrh	w1, [x1, x0, lsl #1]
   22c48:	tbz	w1, #8, 22c34 <printf_parse@@Base+0x5804>
   22c4c:	ldrb	w1, [x21, x0]
   22c50:	ubfx	x4, x1, #6, #2
   22c54:	lsl	x1, x5, x1
   22c58:	ldr	x3, [x19, x4, lsl #3]
   22c5c:	orr	x1, x3, x1
   22c60:	str	x1, [x19, x4, lsl #3]
   22c64:	b	22c34 <printf_parse@@Base+0x5804>
   22c68:	add	x0, x0, #0x1
   22c6c:	cmp	x0, #0x100
   22c70:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22c74:	ldr	x1, [x4]
   22c78:	ldrh	w1, [x1, x0, lsl #1]
   22c7c:	tbz	w1, #8, 22c68 <printf_parse@@Base+0x5838>
   22c80:	add	x1, x0, #0x3f
   22c84:	cmp	x0, #0x0
   22c88:	csel	x1, x1, x0, lt  // lt = tstop
   22c8c:	asr	x1, x1, #6
   22c90:	negs	x2, x0
   22c94:	and	x3, x0, #0x3f
   22c98:	and	x2, x2, #0x3f
   22c9c:	csneg	x2, x3, x2, mi  // mi = first
   22ca0:	lsl	x2, x5, x2
   22ca4:	ldr	x3, [x19, x1, lsl #3]
   22ca8:	orr	x2, x3, x2
   22cac:	str	x2, [x19, x1, lsl #3]
   22cb0:	b	22c68 <printf_parse@@Base+0x5838>
   22cb4:	adrp	x1, 2f000 <vasnprintf@@Base+0x4378>
   22cb8:	add	x1, x1, #0x18
   22cbc:	mov	x0, x22
   22cc0:	bl	a9b0 <strcmp@plt>
   22cc4:	mov	w20, w0
   22cc8:	cbnz	w0, 22d78 <printf_parse@@Base+0x5948>
   22ccc:	cbnz	x21, 22ce4 <printf_parse@@Base+0x58b4>
   22cd0:	bl	a9d0 <__ctype_b_loc@plt>
   22cd4:	mov	x3, x0
   22cd8:	mov	x0, #0x0                   	// #0
   22cdc:	mov	x5, #0x1                   	// #1
   22ce0:	b	22d38 <printf_parse@@Base+0x5908>
   22ce4:	bl	a9d0 <__ctype_b_loc@plt>
   22ce8:	mov	x2, x0
   22cec:	mov	x0, #0x0                   	// #0
   22cf0:	mov	x5, #0x1                   	// #1
   22cf4:	b	22d04 <printf_parse@@Base+0x58d4>
   22cf8:	add	x0, x0, #0x1
   22cfc:	cmp	x0, #0x100
   22d00:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22d04:	ldr	x1, [x2]
   22d08:	ldrh	w1, [x1, x0, lsl #1]
   22d0c:	tbz	w1, #0, 22cf8 <printf_parse@@Base+0x58c8>
   22d10:	ldrb	w1, [x21, x0]
   22d14:	ubfx	x4, x1, #6, #2
   22d18:	lsl	x1, x5, x1
   22d1c:	ldr	x3, [x19, x4, lsl #3]
   22d20:	orr	x1, x3, x1
   22d24:	str	x1, [x19, x4, lsl #3]
   22d28:	b	22cf8 <printf_parse@@Base+0x58c8>
   22d2c:	add	x0, x0, #0x1
   22d30:	cmp	x0, #0x100
   22d34:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22d38:	ldr	x1, [x3]
   22d3c:	ldrh	w1, [x1, x0, lsl #1]
   22d40:	tbz	w1, #0, 22d2c <printf_parse@@Base+0x58fc>
   22d44:	add	x1, x0, #0x3f
   22d48:	cmp	x0, #0x0
   22d4c:	csel	x1, x1, x0, lt  // lt = tstop
   22d50:	asr	x1, x1, #6
   22d54:	negs	x2, x0
   22d58:	and	x4, x0, #0x3f
   22d5c:	and	x2, x2, #0x3f
   22d60:	csneg	x2, x4, x2, mi  // mi = first
   22d64:	lsl	x2, x5, x2
   22d68:	ldr	x4, [x19, x1, lsl #3]
   22d6c:	orr	x2, x4, x2
   22d70:	str	x2, [x19, x1, lsl #3]
   22d74:	b	22d2c <printf_parse@@Base+0x58fc>
   22d78:	adrp	x1, 2f000 <vasnprintf@@Base+0x4378>
   22d7c:	add	x1, x1, #0x20
   22d80:	mov	x0, x22
   22d84:	bl	a9b0 <strcmp@plt>
   22d88:	mov	w20, w0
   22d8c:	cbnz	w0, 22e3c <printf_parse@@Base+0x5a0c>
   22d90:	cbnz	x21, 22da8 <printf_parse@@Base+0x5978>
   22d94:	bl	a9d0 <__ctype_b_loc@plt>
   22d98:	mov	x3, x0
   22d9c:	mov	x0, #0x0                   	// #0
   22da0:	mov	x5, #0x1                   	// #1
   22da4:	b	22dfc <printf_parse@@Base+0x59cc>
   22da8:	bl	a9d0 <__ctype_b_loc@plt>
   22dac:	mov	x2, x0
   22db0:	mov	x0, #0x0                   	// #0
   22db4:	mov	x5, #0x1                   	// #1
   22db8:	b	22dc8 <printf_parse@@Base+0x5998>
   22dbc:	add	x0, x0, #0x1
   22dc0:	cmp	x0, #0x100
   22dc4:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22dc8:	ldr	x1, [x2]
   22dcc:	ldrsh	w1, [x1, x0, lsl #1]
   22dd0:	tbz	w1, #31, 22dbc <printf_parse@@Base+0x598c>
   22dd4:	ldrb	w1, [x21, x0]
   22dd8:	ubfx	x4, x1, #6, #2
   22ddc:	lsl	x1, x5, x1
   22de0:	ldr	x3, [x19, x4, lsl #3]
   22de4:	orr	x1, x3, x1
   22de8:	str	x1, [x19, x4, lsl #3]
   22dec:	b	22dbc <printf_parse@@Base+0x598c>
   22df0:	add	x0, x0, #0x1
   22df4:	cmp	x0, #0x100
   22df8:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22dfc:	ldr	x1, [x3]
   22e00:	ldrsh	w1, [x1, x0, lsl #1]
   22e04:	tbz	w1, #31, 22df0 <printf_parse@@Base+0x59c0>
   22e08:	add	x1, x0, #0x3f
   22e0c:	cmp	x0, #0x0
   22e10:	csel	x1, x1, x0, lt  // lt = tstop
   22e14:	asr	x1, x1, #6
   22e18:	negs	x2, x0
   22e1c:	and	x4, x0, #0x3f
   22e20:	and	x2, x2, #0x3f
   22e24:	csneg	x2, x4, x2, mi  // mi = first
   22e28:	lsl	x2, x5, x2
   22e2c:	ldr	x4, [x19, x1, lsl #3]
   22e30:	orr	x2, x4, x2
   22e34:	str	x2, [x19, x1, lsl #3]
   22e38:	b	22df0 <printf_parse@@Base+0x59c0>
   22e3c:	adrp	x1, 2f000 <vasnprintf@@Base+0x4378>
   22e40:	add	x1, x1, #0x28
   22e44:	mov	x0, x22
   22e48:	bl	a9b0 <strcmp@plt>
   22e4c:	mov	w20, w0
   22e50:	cbnz	w0, 22f00 <printf_parse@@Base+0x5ad0>
   22e54:	cbnz	x21, 22e6c <printf_parse@@Base+0x5a3c>
   22e58:	bl	a9d0 <__ctype_b_loc@plt>
   22e5c:	mov	x3, x0
   22e60:	mov	x0, #0x0                   	// #0
   22e64:	mov	x5, #0x1                   	// #1
   22e68:	b	22ec0 <printf_parse@@Base+0x5a90>
   22e6c:	bl	a9d0 <__ctype_b_loc@plt>
   22e70:	mov	x2, x0
   22e74:	mov	x0, #0x0                   	// #0
   22e78:	mov	x5, #0x1                   	// #1
   22e7c:	b	22e8c <printf_parse@@Base+0x5a5c>
   22e80:	add	x0, x0, #0x1
   22e84:	cmp	x0, #0x100
   22e88:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22e8c:	ldr	x1, [x2]
   22e90:	ldrh	w1, [x1, x0, lsl #1]
   22e94:	tbz	w1, #2, 22e80 <printf_parse@@Base+0x5a50>
   22e98:	ldrb	w1, [x21, x0]
   22e9c:	ubfx	x4, x1, #6, #2
   22ea0:	lsl	x1, x5, x1
   22ea4:	ldr	x3, [x19, x4, lsl #3]
   22ea8:	orr	x1, x3, x1
   22eac:	str	x1, [x19, x4, lsl #3]
   22eb0:	b	22e80 <printf_parse@@Base+0x5a50>
   22eb4:	add	x0, x0, #0x1
   22eb8:	cmp	x0, #0x100
   22ebc:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22ec0:	ldr	x1, [x3]
   22ec4:	ldrh	w1, [x1, x0, lsl #1]
   22ec8:	tbz	w1, #2, 22eb4 <printf_parse@@Base+0x5a84>
   22ecc:	add	x1, x0, #0x3f
   22ed0:	cmp	x0, #0x0
   22ed4:	csel	x1, x1, x0, lt  // lt = tstop
   22ed8:	asr	x1, x1, #6
   22edc:	negs	x2, x0
   22ee0:	and	x4, x0, #0x3f
   22ee4:	and	x2, x2, #0x3f
   22ee8:	csneg	x2, x4, x2, mi  // mi = first
   22eec:	lsl	x2, x5, x2
   22ef0:	ldr	x4, [x19, x1, lsl #3]
   22ef4:	orr	x2, x4, x2
   22ef8:	str	x2, [x19, x1, lsl #3]
   22efc:	b	22eb4 <printf_parse@@Base+0x5a84>
   22f00:	adrp	x1, 2f000 <vasnprintf@@Base+0x4378>
   22f04:	add	x1, x1, #0x30
   22f08:	mov	x0, x22
   22f0c:	bl	a9b0 <strcmp@plt>
   22f10:	mov	w20, w0
   22f14:	cbnz	w0, 22fe0 <printf_parse@@Base+0x5bb0>
   22f18:	cbnz	x21, 22f30 <printf_parse@@Base+0x5b00>
   22f1c:	bl	a9d0 <__ctype_b_loc@plt>
   22f20:	mov	x3, x0
   22f24:	mov	x0, #0x0                   	// #0
   22f28:	mov	x5, #0x1                   	// #1
   22f2c:	b	22f84 <printf_parse@@Base+0x5b54>
   22f30:	bl	a9d0 <__ctype_b_loc@plt>
   22f34:	mov	x2, x0
   22f38:	mov	x0, #0x0                   	// #0
   22f3c:	mov	x5, #0x1                   	// #1
   22f40:	b	22f50 <printf_parse@@Base+0x5b20>
   22f44:	add	x0, x0, #0x1
   22f48:	cmp	x0, #0x100
   22f4c:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22f50:	ldr	x1, [x2]
   22f54:	ldrh	w1, [x1, x0, lsl #1]
   22f58:	tbz	w1, #12, 22f44 <printf_parse@@Base+0x5b14>
   22f5c:	ldrb	w1, [x21, x0]
   22f60:	ubfx	x4, x1, #6, #2
   22f64:	lsl	x1, x5, x1
   22f68:	ldr	x3, [x19, x4, lsl #3]
   22f6c:	orr	x1, x3, x1
   22f70:	str	x1, [x19, x4, lsl #3]
   22f74:	b	22f44 <printf_parse@@Base+0x5b14>
   22f78:	add	x0, x0, #0x1
   22f7c:	cmp	x0, #0x100
   22f80:	b.eq	22fc8 <printf_parse@@Base+0x5b98>  // b.none
   22f84:	ldr	x1, [x3]
   22f88:	ldrh	w1, [x1, x0, lsl #1]
   22f8c:	tbz	w1, #12, 22f78 <printf_parse@@Base+0x5b48>
   22f90:	add	x1, x0, #0x3f
   22f94:	cmp	x0, #0x0
   22f98:	csel	x1, x1, x0, lt  // lt = tstop
   22f9c:	asr	x1, x1, #6
   22fa0:	negs	x2, x0
   22fa4:	and	x4, x0, #0x3f
   22fa8:	and	x2, x2, #0x3f
   22fac:	csneg	x2, x4, x2, mi  // mi = first
   22fb0:	lsl	x2, x5, x2
   22fb4:	ldr	x4, [x19, x1, lsl #3]
   22fb8:	orr	x2, x4, x2
   22fbc:	str	x2, [x19, x1, lsl #3]
   22fc0:	b	22f78 <printf_parse@@Base+0x5b48>
   22fc4:	mov	w20, #0xc                   	// #12
   22fc8:	mov	w0, w20
   22fcc:	ldp	x19, x20, [sp, #16]
   22fd0:	ldp	x21, x22, [sp, #32]
   22fd4:	ldp	x23, x24, [sp, #48]
   22fd8:	ldp	x29, x30, [sp], #64
   22fdc:	ret
   22fe0:	mov	w20, #0x4                   	// #4
   22fe4:	b	22fc8 <printf_parse@@Base+0x5b98>
   22fe8:	stp	x29, x30, [sp, #-112]!
   22fec:	mov	x29, sp
   22ff0:	stp	x19, x20, [sp, #16]
   22ff4:	stp	x21, x22, [sp, #32]
   22ff8:	stp	x23, x24, [sp, #48]
   22ffc:	stp	x25, x26, [sp, #64]
   23000:	mov	x21, x0
   23004:	mov	x25, x1
   23008:	mov	x26, x2
   2300c:	mov	x20, x3
   23010:	and	w24, w4, #0xff
   23014:	mov	x23, x5
   23018:	str	xzr, [sp, #104]
   2301c:	mov	x1, #0x1                   	// #1
   23020:	mov	x0, #0x20                  	// #32
   23024:	bl	a770 <calloc@plt>
   23028:	mov	x19, x0
   2302c:	cbz	x0, 23184 <printf_parse@@Base+0x5d54>
   23030:	mov	x1, #0x1                   	// #1
   23034:	mov	x0, #0x50                  	// #80
   23038:	bl	a770 <calloc@plt>
   2303c:	mov	x22, x0
   23040:	cbz	x0, 23194 <printf_parse@@Base+0x5d64>
   23044:	ldrb	w0, [x0, #32]
   23048:	bfxil	w0, w24, #0, #1
   2304c:	strb	w0, [x22, #32]
   23050:	mov	x5, #0x0                   	// #0
   23054:	mov	x4, x26
   23058:	add	x3, sp, #0x68
   2305c:	mov	x2, x22
   23060:	mov	x1, x19
   23064:	mov	x0, x25
   23068:	bl	225e0 <printf_parse@@Base+0x51b0>
   2306c:	mov	w25, w0
   23070:	cbnz	w0, 231ac <printf_parse@@Base+0x5d7c>
   23074:	ldrb	w1, [x20]
   23078:	mov	x3, #0x1                   	// #1
   2307c:	cbz	w1, 2309c <printf_parse@@Base+0x5c6c>
   23080:	ubfx	x0, x1, #6, #2
   23084:	lsl	x1, x3, x1
   23088:	ldr	x2, [x19, x0, lsl #3]
   2308c:	orr	x1, x2, x1
   23090:	str	x1, [x19, x0, lsl #3]
   23094:	ldrb	w1, [x20, #1]!
   23098:	cbnz	w1, 23080 <printf_parse@@Base+0x5c50>
   2309c:	cbz	w24, 230bc <printf_parse@@Base+0x5c8c>
   230a0:	mov	x0, #0x0                   	// #0
   230a4:	ldr	x1, [x19, x0, lsl #3]
   230a8:	mvn	x1, x1
   230ac:	str	x1, [x19, x0, lsl #3]
   230b0:	add	x0, x0, #0x1
   230b4:	cmp	x0, #0x4
   230b8:	b.ne	230a4 <printf_parse@@Base+0x5c74>  // b.any
   230bc:	ldr	w0, [x21, #180]
   230c0:	cmp	w0, #0x1
   230c4:	b.le	230ec <printf_parse@@Base+0x5cbc>
   230c8:	ldr	x3, [x21, #120]
   230cc:	mov	x0, #0x0                   	// #0
   230d0:	ldr	x1, [x19, x0]
   230d4:	ldr	x2, [x3, x0]
   230d8:	and	x1, x1, x2
   230dc:	str	x1, [x19, x0]
   230e0:	add	x0, x0, #0x8
   230e4:	cmp	x0, #0x20
   230e8:	b.ne	230d0 <printf_parse@@Base+0x5ca0>  // b.any
   230ec:	mov	w0, #0x3                   	// #3
   230f0:	strb	w0, [sp, #96]
   230f4:	str	x19, [sp, #88]
   230f8:	add	x3, sp, #0x58
   230fc:	mov	x2, #0x0                   	// #0
   23100:	mov	x1, #0x0                   	// #0
   23104:	mov	x0, x21
   23108:	bl	1ec58 <printf_parse@@Base+0x1828>
   2310c:	mov	x20, x0
   23110:	cbz	x0, 231d4 <printf_parse@@Base+0x5da4>
   23114:	ldr	w0, [x21, #180]
   23118:	cmp	w0, #0x1
   2311c:	b.le	231c8 <printf_parse@@Base+0x5d98>
   23120:	mov	w0, #0x6                   	// #6
   23124:	strb	w0, [sp, #96]
   23128:	str	x22, [sp, #88]
   2312c:	ldrb	w0, [x21, #176]
   23130:	orr	w0, w0, #0x2
   23134:	strb	w0, [x21, #176]
   23138:	add	x3, sp, #0x58
   2313c:	mov	x2, #0x0                   	// #0
   23140:	mov	x1, #0x0                   	// #0
   23144:	mov	x0, x21
   23148:	bl	1ec58 <printf_parse@@Base+0x1828>
   2314c:	mov	x2, x0
   23150:	cbz	x0, 231d4 <printf_parse@@Base+0x5da4>
   23154:	mov	w3, #0xa                   	// #10
   23158:	mov	x1, x20
   2315c:	mov	x0, x21
   23160:	bl	1edc4 <printf_parse@@Base+0x1994>
   23164:	mov	x20, x0
   23168:	mov	x0, x20
   2316c:	ldp	x19, x20, [sp, #16]
   23170:	ldp	x21, x22, [sp, #32]
   23174:	ldp	x23, x24, [sp, #48]
   23178:	ldp	x25, x26, [sp, #64]
   2317c:	ldp	x29, x30, [sp], #112
   23180:	ret
   23184:	mov	w0, #0xc                   	// #12
   23188:	str	w0, [x23]
   2318c:	mov	x20, x19
   23190:	b	23168 <printf_parse@@Base+0x5d38>
   23194:	mov	x0, x19
   23198:	bl	aa50 <free@plt>
   2319c:	mov	w0, #0xc                   	// #12
   231a0:	str	w0, [x23]
   231a4:	mov	x20, x22
   231a8:	b	23168 <printf_parse@@Base+0x5d38>
   231ac:	mov	x0, x19
   231b0:	bl	aa50 <free@plt>
   231b4:	mov	x0, x22
   231b8:	bl	20f9c <printf_parse@@Base+0x3b6c>
   231bc:	str	w25, [x23]
   231c0:	mov	x20, #0x0                   	// #0
   231c4:	b	23168 <printf_parse@@Base+0x5d38>
   231c8:	mov	x0, x22
   231cc:	bl	20f9c <printf_parse@@Base+0x3b6c>
   231d0:	b	23168 <printf_parse@@Base+0x5d38>
   231d4:	mov	x0, x19
   231d8:	bl	aa50 <free@plt>
   231dc:	mov	x0, x22
   231e0:	bl	20f9c <printf_parse@@Base+0x3b6c>
   231e4:	mov	w0, #0xc                   	// #12
   231e8:	str	w0, [x23]
   231ec:	mov	x20, #0x0                   	// #0
   231f0:	b	23168 <printf_parse@@Base+0x5d38>
   231f4:	stp	x29, x30, [sp, #-400]!
   231f8:	mov	x29, sp
   231fc:	stp	x21, x22, [sp, #32]
   23200:	stp	x23, x24, [sp, #48]
   23204:	stp	x25, x26, [sp, #64]
   23208:	stp	x27, x28, [sp, #80]
   2320c:	str	x0, [sp, #120]
   23210:	mov	x28, x1
   23214:	mov	x22, x2
   23218:	ldr	x26, [x0]
   2321c:	ldr	w0, [x26, #180]
   23220:	mov	w24, #0x0                   	// #0
   23224:	cmp	w0, #0x1
   23228:	b.eq	23258 <printf_parse@@Base+0x5e28>  // b.none
   2322c:	ldr	x0, [x28, #16]
   23230:	cmp	x0, #0x0
   23234:	b.le	23598 <printf_parse@@Base+0x6168>
   23238:	stp	x19, x20, [sp, #16]
   2323c:	mov	x25, #0x0                   	// #0
   23240:	add	x0, sp, #0x90
   23244:	str	x0, [sp, #96]
   23248:	add	x0, sp, #0x88
   2324c:	str	x0, [sp, #104]
   23250:	mov	w23, #0x1                   	// #1
   23254:	b	232ac <printf_parse@@Base+0x5e7c>
   23258:	ldr	x0, [sp, #120]
   2325c:	ldr	x24, [x0, #24]
   23260:	ubfx	w24, w24, #22, #1
   23264:	b	2322c <printf_parse@@Base+0x5dfc>
   23268:	ldrb	w20, [x1, x27]
   2326c:	strb	w23, [x22, x20]
   23270:	cbz	w24, 23284 <printf_parse@@Base+0x5e54>
   23274:	bl	a530 <__ctype_tolower_loc@plt>
   23278:	ldr	x0, [x0]
   2327c:	ldrsw	x0, [x0, x20, lsl #2]
   23280:	strb	w23, [x22, x0]
   23284:	ldr	x0, [sp, #120]
   23288:	ldr	x0, [x0, #24]
   2328c:	tbz	w0, #22, 2329c <printf_parse@@Base+0x5e6c>
   23290:	ldr	w0, [x26, #180]
   23294:	cmp	w0, #0x1
   23298:	b.gt	23314 <printf_parse@@Base+0x5ee4>
   2329c:	add	x25, x25, #0x1
   232a0:	ldr	x0, [x28, #16]
   232a4:	cmp	x0, x25
   232a8:	b.le	23594 <printf_parse@@Base+0x6164>
   232ac:	ldr	x0, [x28, #24]
   232b0:	ldr	x19, [x0, x25, lsl #3]
   232b4:	lsl	x27, x19, #4
   232b8:	ldr	x1, [x26]
   232bc:	add	x0, x1, x27
   232c0:	ldrb	w0, [x0, #8]
   232c4:	mov	w20, w0
   232c8:	cmp	w0, #0x1
   232cc:	b.eq	23268 <printf_parse@@Base+0x5e38>  // b.none
   232d0:	cmp	w0, #0x3
   232d4:	b.eq	233dc <printf_parse@@Base+0x5fac>  // b.none
   232d8:	cmp	w0, #0x6
   232dc:	b.eq	23458 <printf_parse@@Base+0x6028>  // b.none
   232e0:	and	w1, w0, #0xfffffffd
   232e4:	and	w1, w1, #0xff
   232e8:	cmp	w1, #0x5
   232ec:	ccmp	w0, #0x2, #0x4, ne  // ne = any
   232f0:	b.ne	2329c <printf_parse@@Base+0x5e6c>  // b.any
   232f4:	mov	x2, #0x100                 	// #256
   232f8:	mov	w1, #0x1                   	// #1
   232fc:	mov	x0, x22
   23300:	bl	a6f0 <memset@plt>
   23304:	cmp	w20, #0x2
   23308:	b.eq	2357c <printf_parse@@Base+0x614c>  // b.none
   2330c:	ldp	x19, x20, [sp, #16]
   23310:	b	23598 <printf_parse@@Base+0x6168>
   23314:	ldr	x0, [x26]
   23318:	ldrb	w0, [x0, x27]
   2331c:	strb	w0, [sp, #144]
   23320:	add	x19, x19, #0x1
   23324:	ldr	x0, [x26, #16]
   23328:	ldr	x1, [sp, #96]
   2332c:	add	x3, x1, #0x1
   23330:	cmp	x19, x0
   23334:	b.cs	233d0 <printf_parse@@Base+0x5fa0>  // b.hs, b.nlast
   23338:	mov	w5, #0xff                  	// #255
   2333c:	movk	w5, #0x20, lsl #16
   23340:	mov	w4, #0x1                   	// #1
   23344:	movk	w4, #0x20, lsl #16
   23348:	lsl	x1, x19, #4
   2334c:	ldr	x2, [x26]
   23350:	add	x0, x2, x1
   23354:	ldr	w0, [x0, #8]
   23358:	and	w0, w0, w5
   2335c:	cmp	w0, w4
   23360:	b.ne	2337c <printf_parse@@Base+0x5f4c>  // b.any
   23364:	ldrb	w0, [x2, x1]
   23368:	strb	w0, [x3], #1
   2336c:	add	x19, x19, #0x1
   23370:	ldr	x0, [x26, #16]
   23374:	cmp	x0, x19
   23378:	b.hi	23348 <printf_parse@@Base+0x5f18>  // b.pmore
   2337c:	ldr	x0, [sp, #104]
   23380:	str	xzr, [x0]
   23384:	ldr	x1, [sp, #96]
   23388:	sub	x19, x3, x1
   2338c:	mov	x3, x0
   23390:	mov	x2, x19
   23394:	add	x0, sp, #0x84
   23398:	bl	a3e0 <rpl_mbrtowc@plt>
   2339c:	cmp	x19, x0
   233a0:	b.ne	2329c <printf_parse@@Base+0x5e6c>  // b.any
   233a4:	ldr	w0, [sp, #132]
   233a8:	bl	af70 <towlower@plt>
   233ac:	ldr	x2, [sp, #104]
   233b0:	mov	w1, w0
   233b4:	ldr	x0, [sp, #96]
   233b8:	bl	aff0 <wcrtomb@plt>
   233bc:	cmn	x0, #0x1
   233c0:	b.eq	2329c <printf_parse@@Base+0x5e6c>  // b.none
   233c4:	ldrb	w0, [sp, #144]
   233c8:	strb	w23, [x22, x0]
   233cc:	b	2329c <printf_parse@@Base+0x5e6c>
   233d0:	ldr	x0, [sp, #96]
   233d4:	add	x3, x0, #0x1
   233d8:	b	2337c <printf_parse@@Base+0x5f4c>
   233dc:	str	xzr, [sp, #112]
   233e0:	b	2343c <printf_parse@@Base+0x600c>
   233e4:	strb	w23, [x22, w2, sxtw]
   233e8:	add	w20, w20, #0x1
   233ec:	add	x19, x19, #0x1
   233f0:	cmp	w20, #0x40
   233f4:	b.eq	23428 <printf_parse@@Base+0x5ff8>  // b.none
   233f8:	mov	w2, w19
   233fc:	lsr	x0, x21, x20
   23400:	tbz	w0, #0, 233e8 <printf_parse@@Base+0x5fb8>
   23404:	strb	w23, [x22, x19]
   23408:	cbz	w24, 233e8 <printf_parse@@Base+0x5fb8>
   2340c:	add	w1, w19, #0x80
   23410:	cmp	w1, #0x17f
   23414:	b.hi	233e4 <printf_parse@@Base+0x5fb4>  // b.pmore
   23418:	bl	a530 <__ctype_tolower_loc@plt>
   2341c:	ldr	x0, [x0]
   23420:	ldr	w2, [x0, x19, lsl #2]
   23424:	b	233e4 <printf_parse@@Base+0x5fb4>
   23428:	ldr	x0, [sp, #112]
   2342c:	add	x0, x0, #0x8
   23430:	str	x0, [sp, #112]
   23434:	cmp	x0, #0x20
   23438:	b.eq	2329c <printf_parse@@Base+0x5e6c>  // b.none
   2343c:	ldr	x0, [x26]
   23440:	ldr	x0, [x0, x27]
   23444:	ldr	x1, [sp, #112]
   23448:	ldr	x21, [x0, x1]
   2344c:	lsl	x19, x1, #3
   23450:	mov	w20, #0x0                   	// #0
   23454:	b	233f8 <printf_parse@@Base+0x5fc8>
   23458:	ldr	x20, [x1, x27]
   2345c:	ldr	w0, [x26, #180]
   23460:	cmp	w0, #0x1
   23464:	b.le	2348c <printf_parse@@Base+0x605c>
   23468:	ldr	x0, [x20, #72]
   2346c:	cbnz	x0, 23480 <printf_parse@@Base+0x6050>
   23470:	ldrb	w0, [x20, #32]
   23474:	tbnz	w0, #0, 23480 <printf_parse@@Base+0x6050>
   23478:	ldr	x0, [x20, #64]
   2347c:	cbz	x0, 2348c <printf_parse@@Base+0x605c>
   23480:	strb	wzr, [sp, #136]
   23484:	mov	x19, #0x1                   	// #1
   23488:	b	234b4 <printf_parse@@Base+0x6084>
   2348c:	ldr	x0, [x20, #40]
   23490:	mov	x19, #0x0                   	// #0
   23494:	cmp	x0, #0x0
   23498:	b.gt	234f4 <printf_parse@@Base+0x60c4>
   2349c:	b	2329c <printf_parse@@Base+0x5e6c>
   234a0:	ldrb	w0, [sp, #136]
   234a4:	add	w0, w0, #0x1
   234a8:	and	w0, w0, #0xff
   234ac:	strb	w0, [sp, #136]
   234b0:	cbz	w0, 2329c <printf_parse@@Base+0x5e6c>
   234b4:	ldr	x0, [sp, #96]
   234b8:	str	xzr, [x0]
   234bc:	mov	x3, x0
   234c0:	mov	x2, x19
   234c4:	ldr	x1, [sp, #104]
   234c8:	mov	x0, #0x0                   	// #0
   234cc:	bl	a3e0 <rpl_mbrtowc@plt>
   234d0:	cmn	x0, #0x2
   234d4:	b.ne	234a0 <printf_parse@@Base+0x6070>  // b.any
   234d8:	ldrb	w0, [sp, #136]
   234dc:	strb	w23, [x22, x0]
   234e0:	b	234a0 <printf_parse@@Base+0x6070>
   234e4:	add	x19, x19, #0x1
   234e8:	ldr	x0, [x20, #40]
   234ec:	cmp	x0, x19
   234f0:	b.le	2329c <printf_parse@@Base+0x5e6c>
   234f4:	ldr	x2, [sp, #104]
   234f8:	str	xzr, [x2]
   234fc:	lsl	x27, x19, #2
   23500:	ldr	x0, [x20]
   23504:	ldr	w1, [x0, x19, lsl #2]
   23508:	ldr	x0, [sp, #96]
   2350c:	bl	aff0 <wcrtomb@plt>
   23510:	cmn	x0, #0x1
   23514:	b.eq	23534 <printf_parse@@Base+0x6104>  // b.none
   23518:	ldrb	w21, [sp, #144]
   2351c:	strb	w23, [x22, x21]
   23520:	cbz	w24, 23534 <printf_parse@@Base+0x6104>
   23524:	bl	a530 <__ctype_tolower_loc@plt>
   23528:	ldr	x0, [x0]
   2352c:	ldrsw	x0, [x0, x21, lsl #2]
   23530:	strb	w23, [x22, x0]
   23534:	ldr	x0, [sp, #120]
   23538:	ldr	x0, [x0, #24]
   2353c:	tbz	w0, #22, 234e4 <printf_parse@@Base+0x60b4>
   23540:	ldr	w0, [x26, #180]
   23544:	cmp	w0, #0x1
   23548:	b.le	234e4 <printf_parse@@Base+0x60b4>
   2354c:	ldr	x0, [x20]
   23550:	ldr	w0, [x0, x27]
   23554:	bl	af70 <towlower@plt>
   23558:	ldr	x2, [sp, #104]
   2355c:	mov	w1, w0
   23560:	ldr	x0, [sp, #96]
   23564:	bl	aff0 <wcrtomb@plt>
   23568:	cmn	x0, #0x1
   2356c:	b.eq	234e4 <printf_parse@@Base+0x60b4>  // b.none
   23570:	ldrb	w0, [sp, #144]
   23574:	strb	w23, [x22, x0]
   23578:	b	234e4 <printf_parse@@Base+0x60b4>
   2357c:	ldr	x1, [sp, #120]
   23580:	ldrb	w0, [x1, #56]
   23584:	orr	w0, w0, #0x1
   23588:	strb	w0, [x1, #56]
   2358c:	ldp	x19, x20, [sp, #16]
   23590:	b	23598 <printf_parse@@Base+0x6168>
   23594:	ldp	x19, x20, [sp, #16]
   23598:	ldp	x21, x22, [sp, #32]
   2359c:	ldp	x23, x24, [sp, #48]
   235a0:	ldp	x25, x26, [sp, #64]
   235a4:	ldp	x27, x28, [sp, #80]
   235a8:	ldp	x29, x30, [sp], #400
   235ac:	ret
   235b0:	stp	x29, x30, [sp, #-144]!
   235b4:	mov	x29, sp
   235b8:	stp	x19, x20, [sp, #16]
   235bc:	stp	x21, x22, [sp, #32]
   235c0:	mov	x19, x0
   235c4:	mov	x21, x1
   235c8:	mov	w22, w2
   235cc:	ldr	x20, [x0, #40]
   235d0:	cmp	x20, x1
   235d4:	b.le	236d8 <printf_parse@@Base+0x62a8>
   235d8:	ldr	w0, [x0, #144]
   235dc:	cmp	w0, #0x1
   235e0:	b.gt	236e0 <printf_parse@@Base+0x62b0>
   235e4:	ldr	x0, [x19, #80]
   235e8:	str	x0, [x19, #88]
   235ec:	ldr	x0, [x19, #96]
   235f0:	str	x0, [x19, #104]
   235f4:	str	xzr, [x19, #48]
   235f8:	str	xzr, [x19, #40]
   235fc:	str	xzr, [x19, #56]
   23600:	strb	wzr, [x19, #140]
   23604:	tst	x22, #0x1
   23608:	mov	w0, #0x4                   	// #4
   2360c:	mov	w1, #0x6                   	// #6
   23610:	csel	w0, w0, w1, ne  // ne = any
   23614:	str	w0, [x19, #112]
   23618:	ldrb	w0, [x19, #139]
   2361c:	mov	x20, x21
   23620:	cbnz	w0, 2362c <printf_parse@@Base+0x61fc>
   23624:	ldr	x0, [x19]
   23628:	str	x0, [x19, #8]
   2362c:	cbz	x20, 23698 <printf_parse@@Base+0x6268>
   23630:	ldr	x0, [x19, #56]
   23634:	cmp	x0, x20
   23638:	b.le	238ec <printf_parse@@Base+0x64bc>
   2363c:	ldrb	w0, [x19, #140]
   23640:	cbnz	w0, 236e8 <printf_parse@@Base+0x62b8>
   23644:	mov	w2, w22
   23648:	sub	x1, x20, #0x1
   2364c:	mov	x0, x19
   23650:	bl	204b4 <printf_parse@@Base+0x3084>
   23654:	str	w0, [x19, #112]
   23658:	ldr	w0, [x19, #144]
   2365c:	cmp	w0, #0x1
   23660:	b.gt	238b8 <printf_parse@@Base+0x6488>
   23664:	ldrb	w0, [x19, #139]
   23668:	cbnz	w0, 238d4 <printf_parse@@Base+0x64a4>
   2366c:	ldr	x0, [x19, #48]
   23670:	sub	x0, x0, x20
   23674:	str	x0, [x19, #48]
   23678:	ldr	x0, [x19, #56]
   2367c:	sub	x0, x0, x20
   23680:	str	x0, [x19, #56]
   23684:	ldrb	w0, [x19, #139]
   23688:	cbnz	w0, 23698 <printf_parse@@Base+0x6268>
   2368c:	ldr	x0, [x19, #8]
   23690:	add	x0, x0, x20
   23694:	str	x0, [x19, #8]
   23698:	str	x21, [x19, #40]
   2369c:	ldr	x0, [x19, #88]
   236a0:	sub	x0, x0, x20
   236a4:	str	x0, [x19, #88]
   236a8:	ldr	x1, [x19, #104]
   236ac:	sub	x20, x1, x20
   236b0:	str	x20, [x19, #104]
   236b4:	ldr	w1, [x19, #144]
   236b8:	cmp	w1, #0x1
   236bc:	b.le	23c28 <printf_parse@@Base+0x67f8>
   236c0:	ldrb	w0, [x19, #136]
   236c4:	cbz	w0, 23c1c <printf_parse@@Base+0x67ec>
   236c8:	mov	x0, x19
   236cc:	bl	1f768 <printf_parse@@Base+0x2338>
   236d0:	cbz	w0, 23c34 <printf_parse@@Base+0x6804>
   236d4:	b	23c3c <printf_parse@@Base+0x680c>
   236d8:	sub	x20, x1, x20
   236dc:	b	2362c <printf_parse@@Base+0x61fc>
   236e0:	str	xzr, [x19, #32]
   236e4:	b	235e4 <printf_parse@@Base+0x61b4>
   236e8:	stp	x23, x24, [sp, #48]
   236ec:	stp	x25, x26, [sp, #64]
   236f0:	ldr	x25, [x19, #48]
   236f4:	ldr	x24, [x19, #24]
   236f8:	mov	x1, x25
   236fc:	mov	x2, #0x0                   	// #0
   23700:	b	23710 <printf_parse@@Base+0x62e0>
   23704:	mov	x1, x23
   23708:	cmp	x2, x1
   2370c:	b.ge	23734 <printf_parse@@Base+0x6304>  // b.tcont
   23710:	add	x23, x2, x1
   23714:	add	x23, x23, x23, lsr #63
   23718:	asr	x23, x23, #1
   2371c:	ldr	x0, [x24, x23, lsl #3]
   23720:	cmp	x0, x20
   23724:	b.gt	23704 <printf_parse@@Base+0x62d4>
   23728:	b.ge	2373c <printf_parse@@Base+0x630c>  // b.tcont
   2372c:	add	x2, x23, #0x1
   23730:	b	23708 <printf_parse@@Base+0x62d8>
   23734:	cmp	x0, x20
   23738:	cinc	x23, x23, lt  // lt = tstop
   2373c:	mov	w2, w22
   23740:	sub	x1, x23, #0x1
   23744:	mov	x0, x19
   23748:	bl	204b4 <printf_parse@@Base+0x3084>
   2374c:	str	w0, [x19, #112]
   23750:	cmp	x20, x25
   23754:	ccmp	x20, x23, #0x0, lt  // lt = tstop
   23758:	b.eq	237dc <printf_parse@@Base+0x63ac>  // b.none
   2375c:	ldr	x0, [x19, #80]
   23760:	sub	x0, x0, x21
   23764:	add	x0, x0, x20
   23768:	str	x0, [x19, #88]
   2376c:	ldr	x0, [x19, #96]
   23770:	sub	x0, x0, x21
   23774:	add	x0, x0, x20
   23778:	str	x0, [x19, #104]
   2377c:	strb	wzr, [x19, #140]
   23780:	sub	x1, x24, #0x8
   23784:	cmp	x23, #0x0
   23788:	b.le	237a0 <printf_parse@@Base+0x6370>
   2378c:	ldr	x0, [x1, x23, lsl #3]
   23790:	cmp	x0, x20
   23794:	b.ne	237a0 <printf_parse@@Base+0x6370>  // b.any
   23798:	subs	x23, x23, #0x1
   2379c:	b.ne	2378c <printf_parse@@Base+0x635c>  // b.any
   237a0:	cmp	x23, x25
   237a4:	b.ge	23868 <printf_parse@@Base+0x6438>  // b.tcont
   237a8:	ldr	x1, [x19, #16]
   237ac:	ldr	w0, [x1, x23, lsl #2]
   237b0:	cmn	w0, #0x1
   237b4:	b.ne	23868 <printf_parse@@Base+0x6438>  // b.any
   237b8:	add	x23, x23, #0x1
   237bc:	cmp	x25, x23
   237c0:	b.ne	237ac <printf_parse@@Base+0x637c>  // b.any
   237c4:	str	xzr, [x19, #48]
   237c8:	ldr	x0, [x19, #48]
   237cc:	str	x0, [x19, #56]
   237d0:	ldp	x23, x24, [sp, #48]
   237d4:	ldp	x25, x26, [sp, #64]
   237d8:	b	23684 <printf_parse@@Base+0x6254>
   237dc:	ldr	x0, [x24, x23, lsl #3]
   237e0:	cmp	x0, x20
   237e4:	b.ne	2375c <printf_parse@@Base+0x632c>  // b.any
   237e8:	ldr	x0, [x19, #16]
   237ec:	sub	x2, x25, x20
   237f0:	lsl	x2, x2, #2
   237f4:	add	x1, x0, x20, lsl #2
   237f8:	bl	a2d0 <memmove@plt>
   237fc:	ldr	x0, [x19, #8]
   23800:	ldr	x2, [x19, #48]
   23804:	sub	x2, x2, x20
   23808:	add	x1, x0, x20
   2380c:	bl	a2d0 <memmove@plt>
   23810:	ldr	x0, [x19, #48]
   23814:	sub	x0, x0, x20
   23818:	str	x0, [x19, #48]
   2381c:	ldr	x1, [x19, #56]
   23820:	sub	x1, x1, x20
   23824:	str	x1, [x19, #56]
   23828:	cmp	x0, #0x0
   2382c:	b.le	23c10 <printf_parse@@Base+0x67e0>
   23830:	lsl	x2, x20, #3
   23834:	mov	x0, #0x0                   	// #0
   23838:	ldr	x3, [x19, #24]
   2383c:	ldr	x1, [x3, x2]
   23840:	sub	x1, x1, x20
   23844:	str	x1, [x3, x0, lsl #3]
   23848:	add	x0, x0, #0x1
   2384c:	add	x2, x2, #0x8
   23850:	ldr	x1, [x19, #48]
   23854:	cmp	x1, x0
   23858:	b.gt	23838 <printf_parse@@Base+0x6408>
   2385c:	ldp	x23, x24, [sp, #48]
   23860:	ldp	x25, x26, [sp, #64]
   23864:	b	23684 <printf_parse@@Base+0x6254>
   23868:	cmp	x23, x25
   2386c:	b.eq	237c4 <printf_parse@@Base+0x6394>  // b.none
   23870:	ldr	x2, [x24, x23, lsl #3]
   23874:	sub	x2, x2, x20
   23878:	str	x2, [x19, #48]
   2387c:	cbz	x2, 237c8 <printf_parse@@Base+0x6398>
   23880:	cmp	x2, #0x0
   23884:	b.le	238a8 <printf_parse@@Base+0x6478>
   23888:	mov	x0, #0x0                   	// #0
   2388c:	mov	w3, #0xffffffff            	// #-1
   23890:	ldr	x1, [x19, #16]
   23894:	str	w3, [x1, x0, lsl #2]
   23898:	add	x0, x0, #0x1
   2389c:	ldr	x2, [x19, #48]
   238a0:	cmp	x2, x0
   238a4:	b.gt	23890 <printf_parse@@Base+0x6460>
   238a8:	mov	w1, #0xff                  	// #255
   238ac:	ldr	x0, [x19, #8]
   238b0:	bl	a6f0 <memset@plt>
   238b4:	b	237c8 <printf_parse@@Base+0x6398>
   238b8:	ldr	x0, [x19, #16]
   238bc:	ldr	x2, [x19, #48]
   238c0:	sub	x2, x2, x20
   238c4:	lsl	x2, x2, #2
   238c8:	add	x1, x0, x20, lsl #2
   238cc:	bl	a2d0 <memmove@plt>
   238d0:	b	23664 <printf_parse@@Base+0x6234>
   238d4:	ldr	x0, [x19, #8]
   238d8:	ldr	x2, [x19, #48]
   238dc:	sub	x2, x2, x20
   238e0:	add	x1, x0, x20
   238e4:	bl	a2d0 <memmove@plt>
   238e8:	b	2366c <printf_parse@@Base+0x623c>
   238ec:	stp	x25, x26, [sp, #64]
   238f0:	ldr	x26, [x19, #48]
   238f4:	ldrb	w0, [x19, #140]
   238f8:	cbnz	w0, 239f8 <printf_parse@@Base+0x65c8>
   238fc:	str	xzr, [x19, #48]
   23900:	ldr	w0, [x19, #144]
   23904:	cmp	w0, #0x1
   23908:	b.le	23ba4 <printf_parse@@Base+0x6774>
   2390c:	stp	x23, x24, [sp, #48]
   23910:	ldrb	w1, [x19, #137]
   23914:	cbz	w1, 23964 <printf_parse@@Base+0x6534>
   23918:	ldr	x1, [x19]
   2391c:	ldr	x24, [x19, #40]
   23920:	add	x24, x1, x24
   23924:	sub	x0, x20, w0, sxtw
   23928:	add	x0, x24, x0
   2392c:	cmp	x1, x0
   23930:	csel	x1, x1, x0, cs  // cs = hs, nlast
   23934:	mov	x25, x20
   23938:	sub	x23, x20, #0x1
   2393c:	add	x23, x24, x23
   23940:	cmp	x1, x23
   23944:	b.hi	23964 <printf_parse@@Base+0x6534>  // b.pmore
   23948:	ldrb	w0, [x23]
   2394c:	and	w0, w0, #0xc0
   23950:	cmp	w0, #0x80
   23954:	b.ne	23a20 <printf_parse@@Base+0x65f0>  // b.any
   23958:	sub	x23, x23, #0x1
   2395c:	cmp	x1, x23
   23960:	b.ls	23948 <printf_parse@@Base+0x6518>  // b.plast
   23964:	ldr	x0, [x19, #40]
   23968:	ldr	x1, [x19, #56]
   2396c:	add	x0, x0, x1
   23970:	cmp	x21, x0
   23974:	b.le	23c74 <printf_parse@@Base+0x6844>
   23978:	stp	x27, x28, [sp, #80]
   2397c:	add	x27, x19, #0x20
   23980:	add	x1, sp, #0x88
   23984:	str	x1, [sp, #104]
   23988:	ldr	x23, [x19, #80]
   2398c:	sub	x23, x23, x0
   23990:	ldr	x28, [x19, #32]
   23994:	mov	x25, x0
   23998:	ldr	x1, [x19]
   2399c:	mov	x3, x27
   239a0:	mov	x2, x23
   239a4:	add	x1, x1, x0
   239a8:	ldr	x0, [sp, #104]
   239ac:	bl	a3e0 <rpl_mbrtowc@plt>
   239b0:	sub	x1, x0, #0x1
   239b4:	cmn	x1, #0x4
   239b8:	b.hi	23b08 <printf_parse@@Base+0x66d8>  // b.pmore
   239bc:	ldr	w24, [sp, #136]
   239c0:	add	x0, x25, x0
   239c4:	cmp	x21, x0
   239c8:	b.gt	23988 <printf_parse@@Base+0x6558>
   239cc:	sub	x0, x0, x21
   239d0:	str	x0, [x19, #48]
   239d4:	cmn	w24, #0x1
   239d8:	b.ne	23b2c <printf_parse@@Base+0x66fc>  // b.any
   239dc:	ldp	x27, x28, [sp, #80]
   239e0:	mov	w2, w22
   239e4:	sub	x1, x26, #0x1
   239e8:	mov	x0, x19
   239ec:	bl	204b4 <printf_parse@@Base+0x3084>
   239f0:	str	w0, [x19, #112]
   239f4:	b	23a8c <printf_parse@@Base+0x665c>
   239f8:	ldr	x0, [x19, #80]
   239fc:	sub	x0, x0, x21
   23a00:	add	x0, x0, x20
   23a04:	str	x0, [x19, #88]
   23a08:	ldr	x0, [x19, #96]
   23a0c:	sub	x0, x0, x21
   23a10:	add	x0, x0, x20
   23a14:	str	x0, [x19, #104]
   23a18:	strb	wzr, [x19, #140]
   23a1c:	b	238fc <printf_parse@@Base+0x64cc>
   23a20:	ldr	x2, [x19, #88]
   23a24:	add	x2, x24, x2
   23a28:	sub	x2, x2, x23
   23a2c:	ldr	x3, [x19, #120]
   23a30:	mov	x1, x23
   23a34:	cbnz	x3, 23aa8 <printf_parse@@Base+0x6678>
   23a38:	str	xzr, [sp, #136]
   23a3c:	add	x3, sp, #0x88
   23a40:	add	x0, sp, #0x7c
   23a44:	bl	a3e0 <rpl_mbrtowc@plt>
   23a48:	add	x24, x24, x25
   23a4c:	sub	x23, x24, x23
   23a50:	cmp	x23, x0
   23a54:	ccmn	x0, #0x3, #0x2, ls  // ls = plast
   23a58:	b.hi	23964 <printf_parse@@Base+0x6534>  // b.pmore
   23a5c:	str	xzr, [x19, #32]
   23a60:	sub	x23, x0, x23
   23a64:	str	x23, [x19, #48]
   23a68:	ldr	w24, [sp, #124]
   23a6c:	cmn	w24, #0x1
   23a70:	b.eq	23964 <printf_parse@@Base+0x6534>  // b.none
   23a74:	ldrb	w0, [x19, #142]
   23a78:	cbnz	w0, 23b34 <printf_parse@@Base+0x6704>
   23a7c:	mov	w1, #0x0                   	// #0
   23a80:	cmp	w24, #0xa
   23a84:	b.eq	23b50 <printf_parse@@Base+0x6720>  // b.none
   23a88:	str	w1, [x19, #112]
   23a8c:	ldr	x2, [x19, #48]
   23a90:	cbnz	x2, 23b64 <printf_parse@@Base+0x6734>
   23a94:	ldr	x0, [x19, #48]
   23a98:	str	x0, [x19, #56]
   23a9c:	ldp	x23, x24, [sp, #48]
   23aa0:	ldp	x25, x26, [sp, #64]
   23aa4:	b	23684 <printf_parse@@Base+0x6254>
   23aa8:	cmp	x2, #0x6
   23aac:	mov	x1, #0x6                   	// #6
   23ab0:	csel	x1, x2, x1, le
   23ab4:	cmp	w1, #0x0
   23ab8:	b.le	23b00 <printf_parse@@Base+0x66d0>
   23abc:	sub	w0, w1, #0x2
   23ac0:	sxtw	x0, w0
   23ac4:	sxtw	x5, w1
   23ac8:	sub	x5, x5, #0x3
   23acc:	sub	w1, w1, #0x1
   23ad0:	sub	x5, x5, x1
   23ad4:	add	x7, x23, #0x1
   23ad8:	add	x6, sp, #0x80
   23adc:	ldrb	w1, [x7, x0]
   23ae0:	ldrb	w4, [x3, x1]
   23ae4:	add	x1, x0, x6
   23ae8:	strb	w4, [x1, #1]
   23aec:	sub	x0, x0, #0x1
   23af0:	cmp	x0, x5
   23af4:	b.ne	23adc <printf_parse@@Base+0x66ac>  // b.any
   23af8:	add	x1, sp, #0x80
   23afc:	b	23a38 <printf_parse@@Base+0x6608>
   23b00:	add	x1, sp, #0x80
   23b04:	b	23a38 <printf_parse@@Base+0x6608>
   23b08:	cmp	x0, #0x0
   23b0c:	mov	w24, #0x0                   	// #0
   23b10:	ccmp	x23, #0x0, #0x4, ne  // ne = any
   23b14:	b.eq	23b20 <printf_parse@@Base+0x66f0>  // b.none
   23b18:	ldr	x0, [x19]
   23b1c:	ldrb	w24, [x0, x25]
   23b20:	str	x28, [x19, #32]
   23b24:	mov	x0, #0x1                   	// #1
   23b28:	b	239c0 <printf_parse@@Base+0x6590>
   23b2c:	ldp	x27, x28, [sp, #80]
   23b30:	b	23a74 <printf_parse@@Base+0x6644>
   23b34:	mov	w0, w24
   23b38:	bl	ad30 <iswalnum@plt>
   23b3c:	cmp	w24, #0x5f
   23b40:	mov	w1, #0x1                   	// #1
   23b44:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   23b48:	b.ne	23a88 <printf_parse@@Base+0x6658>  // b.any
   23b4c:	b	23a7c <printf_parse@@Base+0x664c>
   23b50:	ldrb	w0, [x19, #141]
   23b54:	cmp	w0, #0x0
   23b58:	cset	w1, ne  // ne = any
   23b5c:	lsl	w1, w1, #1
   23b60:	b	23a88 <printf_parse@@Base+0x6658>
   23b64:	cmp	x2, #0x0
   23b68:	b.le	23b8c <printf_parse@@Base+0x675c>
   23b6c:	mov	x0, #0x0                   	// #0
   23b70:	mov	w3, #0xffffffff            	// #-1
   23b74:	ldr	x1, [x19, #16]
   23b78:	str	w3, [x1, x0, lsl #2]
   23b7c:	add	x0, x0, #0x1
   23b80:	ldr	x2, [x19, #48]
   23b84:	cmp	x2, x0
   23b88:	b.gt	23b74 <printf_parse@@Base+0x6744>
   23b8c:	ldrb	w0, [x19, #139]
   23b90:	cbz	w0, 23a94 <printf_parse@@Base+0x6664>
   23b94:	mov	w1, #0xff                  	// #255
   23b98:	ldr	x0, [x19, #8]
   23b9c:	bl	a6f0 <memset@plt>
   23ba0:	b	23a94 <printf_parse@@Base+0x6664>
   23ba4:	ldr	x0, [x19]
   23ba8:	ldr	x1, [x19, #40]
   23bac:	add	x0, x0, x20
   23bb0:	add	x0, x0, x1
   23bb4:	ldurb	w0, [x0, #-1]
   23bb8:	str	xzr, [x19, #56]
   23bbc:	ldr	x1, [x19, #120]
   23bc0:	cbz	x1, 23bcc <printf_parse@@Base+0x679c>
   23bc4:	and	x0, x0, #0xff
   23bc8:	ldrb	w0, [x1, x0]
   23bcc:	ubfx	x1, x0, #6, #2
   23bd0:	ldr	x2, [x19, #128]
   23bd4:	ldr	x1, [x2, x1, lsl #3]
   23bd8:	lsr	x1, x1, x0
   23bdc:	mov	w2, #0x1                   	// #1
   23be0:	tbnz	w1, #0, 23bf0 <printf_parse@@Base+0x67c0>
   23be4:	mov	w2, #0x0                   	// #0
   23be8:	cmp	w0, #0xa
   23bec:	b.eq	23bfc <printf_parse@@Base+0x67cc>  // b.none
   23bf0:	str	w2, [x19, #112]
   23bf4:	ldp	x25, x26, [sp, #64]
   23bf8:	b	23684 <printf_parse@@Base+0x6254>
   23bfc:	ldrb	w0, [x19, #141]
   23c00:	cmp	w0, #0x0
   23c04:	cset	w2, ne  // ne = any
   23c08:	lsl	w2, w2, #1
   23c0c:	b	23bf0 <printf_parse@@Base+0x67c0>
   23c10:	ldp	x23, x24, [sp, #48]
   23c14:	ldp	x25, x26, [sp, #64]
   23c18:	b	23684 <printf_parse@@Base+0x6254>
   23c1c:	mov	x0, x19
   23c20:	bl	1f584 <printf_parse@@Base+0x2154>
   23c24:	b	23c34 <printf_parse@@Base+0x6804>
   23c28:	ldrb	w1, [x19, #139]
   23c2c:	cbnz	w1, 23c4c <printf_parse@@Base+0x681c>
   23c30:	str	x0, [x19, #48]
   23c34:	str	xzr, [x19, #72]
   23c38:	mov	w0, #0x0                   	// #0
   23c3c:	ldp	x19, x20, [sp, #16]
   23c40:	ldp	x21, x22, [sp, #32]
   23c44:	ldp	x29, x30, [sp], #144
   23c48:	ret
   23c4c:	ldrb	w0, [x19, #136]
   23c50:	cbnz	w0, 23c68 <printf_parse@@Base+0x6838>
   23c54:	ldr	x0, [x19, #120]
   23c58:	cbz	x0, 23c34 <printf_parse@@Base+0x6804>
   23c5c:	mov	x0, x19
   23c60:	bl	1df7c <printf_parse@@Base+0xb4c>
   23c64:	b	23c34 <printf_parse@@Base+0x6804>
   23c68:	mov	x0, x19
   23c6c:	bl	1f4ec <printf_parse@@Base+0x20bc>
   23c70:	b	23c34 <printf_parse@@Base+0x6804>
   23c74:	sub	x0, x0, x21
   23c78:	str	x0, [x19, #48]
   23c7c:	b	239e0 <printf_parse@@Base+0x65b0>
   23c80:	stp	x29, x30, [sp, #-80]!
   23c84:	mov	x29, sp
   23c88:	stp	x19, x20, [sp, #16]
   23c8c:	stp	x21, x22, [sp, #32]
   23c90:	stp	x23, x24, [sp, #48]
   23c94:	mov	x24, x2
   23c98:	mov	x20, x3
   23c9c:	lsl	x21, x1, #4
   23ca0:	ldr	x23, [x0]
   23ca4:	add	x1, x23, x21
   23ca8:	ldrb	w22, [x1, #8]
   23cac:	cmp	w22, #0x7
   23cb0:	b.eq	23d00 <printf_parse@@Base+0x68d0>  // b.none
   23cb4:	str	x25, [sp, #64]
   23cb8:	mov	x25, x0
   23cbc:	mov	x1, x3
   23cc0:	mov	x0, x2
   23cc4:	bl	1df08 <printf_parse@@Base+0xad8>
   23cc8:	mov	w19, w0
   23ccc:	cmp	w22, #0x5
   23cd0:	b.eq	23e08 <printf_parse@@Base+0x69d8>  // b.none
   23cd4:	cmp	w22, #0x6
   23cd8:	ccmp	w0, #0x1, #0x4, eq  // eq = none
   23cdc:	b.gt	23e44 <printf_parse@@Base+0x6a14>
   23ce0:	mov	w19, #0x0                   	// #0
   23ce4:	ldr	x25, [sp, #64]
   23ce8:	mov	w0, w19
   23cec:	ldp	x19, x20, [sp, #16]
   23cf0:	ldp	x21, x22, [sp, #32]
   23cf4:	ldp	x23, x24, [sp, #48]
   23cf8:	ldp	x29, x30, [sp], #80
   23cfc:	ret
   23d00:	ldr	x0, [x2, #8]
   23d04:	add	x2, x0, x3
   23d08:	ldrb	w1, [x0, x3]
   23d0c:	mov	w19, #0x0                   	// #0
   23d10:	cmp	w1, #0xc1
   23d14:	b.ls	23ce8 <printf_parse@@Base+0x68b8>  // b.plast
   23d18:	ldr	x4, [x24, #88]
   23d1c:	add	x3, x3, #0x1
   23d20:	cmp	x3, x4
   23d24:	b.ge	23ce8 <printf_parse@@Base+0x68b8>  // b.tcont
   23d28:	ldrb	w0, [x2, #1]
   23d2c:	cmp	w1, #0xdf
   23d30:	b.ls	23d8c <printf_parse@@Base+0x695c>  // b.plast
   23d34:	cmp	w1, #0xef
   23d38:	b.hi	23da4 <printf_parse@@Base+0x6974>  // b.pmore
   23d3c:	cmp	w1, #0xe0
   23d40:	mov	w19, #0x0                   	// #0
   23d44:	mov	w1, #0x9f                  	// #159
   23d48:	ccmp	w0, w1, #0x2, eq  // eq = none
   23d4c:	b.ls	23ce8 <printf_parse@@Base+0x68b8>  // b.plast
   23d50:	mov	w19, #0x3                   	// #3
   23d54:	sxtw	x3, w19
   23d58:	add	x20, x3, x20
   23d5c:	cmp	x4, x20
   23d60:	b.lt	23f44 <printf_parse@@Base+0x6b14>  // b.tstop
   23d64:	mov	x1, #0x1                   	// #1
   23d68:	ldrb	w0, [x2, x1]
   23d6c:	sub	w0, w0, #0x80
   23d70:	and	w0, w0, #0xff
   23d74:	cmp	w0, #0x3f
   23d78:	b.hi	23f4c <printf_parse@@Base+0x6b1c>  // b.pmore
   23d7c:	add	x1, x1, #0x1
   23d80:	cmp	x3, x1
   23d84:	b.gt	23d68 <printf_parse@@Base+0x6938>
   23d88:	b	23ce8 <printf_parse@@Base+0x68b8>
   23d8c:	sub	w0, w0, #0x80
   23d90:	and	w0, w0, #0xff
   23d94:	cmp	w0, #0x40
   23d98:	cset	w19, cc  // cc = lo, ul, last
   23d9c:	lsl	w19, w19, #1
   23da0:	b	23ce8 <printf_parse@@Base+0x68b8>
   23da4:	cmp	w1, #0xf7
   23da8:	b.hi	23dc8 <printf_parse@@Base+0x6998>  // b.pmore
   23dac:	cmp	w1, #0xf0
   23db0:	mov	w19, #0x0                   	// #0
   23db4:	mov	w1, #0x8f                  	// #143
   23db8:	ccmp	w0, w1, #0x2, eq  // eq = none
   23dbc:	b.ls	23ce8 <printf_parse@@Base+0x68b8>  // b.plast
   23dc0:	mov	w19, #0x4                   	// #4
   23dc4:	b	23d54 <printf_parse@@Base+0x6924>
   23dc8:	cmp	w1, #0xfb
   23dcc:	b.hi	23de8 <printf_parse@@Base+0x69b8>  // b.pmore
   23dd0:	cmp	w1, #0xf8
   23dd4:	mov	w1, #0x87                  	// #135
   23dd8:	ccmp	w0, w1, #0x2, eq  // eq = none
   23ddc:	b.ls	23f2c <printf_parse@@Base+0x6afc>  // b.plast
   23de0:	mov	w19, #0x5                   	// #5
   23de4:	b	23d54 <printf_parse@@Base+0x6924>
   23de8:	cmp	w1, #0xfd
   23dec:	b.hi	23f34 <printf_parse@@Base+0x6b04>  // b.pmore
   23df0:	cmp	w1, #0xfc
   23df4:	mov	w1, #0x83                  	// #131
   23df8:	ccmp	w0, w1, #0x2, eq  // eq = none
   23dfc:	b.ls	23f3c <printf_parse@@Base+0x6b0c>  // b.plast
   23e00:	mov	w19, #0x6                   	// #6
   23e04:	b	23d54 <printf_parse@@Base+0x6924>
   23e08:	cmp	w0, #0x1
   23e0c:	b.le	23f54 <printf_parse@@Base+0x6b24>
   23e10:	ldr	x0, [x25, #216]
   23e14:	tbnz	w0, #6, 23e28 <printf_parse@@Base+0x69f8>
   23e18:	ldr	x1, [x24, #8]
   23e1c:	ldrb	w1, [x1, x20]
   23e20:	cmp	w1, #0xa
   23e24:	b.eq	23f60 <printf_parse@@Base+0x6b30>  // b.none
   23e28:	tbz	w0, #7, 23fb0 <printf_parse@@Base+0x6b80>
   23e2c:	ldr	x0, [x24, #8]
   23e30:	ldrb	w0, [x0, x20]
   23e34:	cmp	w0, #0x0
   23e38:	csel	w19, w19, wzr, ne  // ne = any
   23e3c:	ldr	x25, [sp, #64]
   23e40:	b	23ce8 <printf_parse@@Base+0x68b8>
   23e44:	ldr	x22, [x23, x21]
   23e48:	ldr	x0, [x22, #64]
   23e4c:	cbnz	x0, 23e68 <printf_parse@@Base+0x6a38>
   23e50:	ldr	x0, [x22, #72]
   23e54:	cbnz	x0, 23e68 <printf_parse@@Base+0x6a38>
   23e58:	ldr	x0, [x22, #40]
   23e5c:	cbnz	x0, 23f90 <printf_parse@@Base+0x6b60>
   23e60:	mov	w20, #0x0                   	// #0
   23e64:	b	23ed8 <printf_parse@@Base+0x6aa8>
   23e68:	mov	x1, x20
   23e6c:	mov	x0, x24
   23e70:	bl	1df58 <printf_parse@@Base+0xb28>
   23e74:	mov	w20, w0
   23e78:	ldr	x2, [x22, #40]
   23e7c:	cmp	x2, #0x0
   23e80:	b.le	23ea4 <printf_parse@@Base+0x6a74>
   23e84:	ldr	x3, [x22]
   23e88:	mov	x1, #0x0                   	// #0
   23e8c:	ldr	w0, [x3, x1, lsl #2]
   23e90:	cmp	w0, w20
   23e94:	b.eq	23f18 <printf_parse@@Base+0x6ae8>  // b.none
   23e98:	add	x1, x1, #0x1
   23e9c:	cmp	x2, x1
   23ea0:	b.ne	23e8c <printf_parse@@Base+0x6a5c>  // b.any
   23ea4:	ldr	x0, [x22, #72]
   23ea8:	cmp	x0, #0x0
   23eac:	b.le	23ed8 <printf_parse@@Base+0x6aa8>
   23eb0:	mov	x21, #0x0                   	// #0
   23eb4:	ldr	x0, [x22, #24]
   23eb8:	ldr	x1, [x0, x21, lsl #3]
   23ebc:	mov	w0, w20
   23ec0:	bl	a5e0 <iswctype@plt>
   23ec4:	cbnz	w0, 23f18 <printf_parse@@Base+0x6ae8>
   23ec8:	add	x21, x21, #0x1
   23ecc:	ldr	x0, [x22, #72]
   23ed0:	cmp	x0, x21
   23ed4:	b.gt	23eb4 <printf_parse@@Base+0x6a84>
   23ed8:	ldr	x2, [x22, #64]
   23edc:	cmp	x2, #0x0
   23ee0:	b.le	23f78 <printf_parse@@Base+0x6b48>
   23ee4:	ldr	x3, [x22, #8]
   23ee8:	mov	x0, #0x0                   	// #0
   23eec:	b	23efc <printf_parse@@Base+0x6acc>
   23ef0:	add	x0, x0, #0x1
   23ef4:	cmp	x2, x0
   23ef8:	b.eq	23f78 <printf_parse@@Base+0x6b48>  // b.none
   23efc:	ldr	w1, [x3, x0, lsl #2]
   23f00:	cmp	w20, w1
   23f04:	b.cc	23ef0 <printf_parse@@Base+0x6ac0>  // b.lo, b.ul, b.last
   23f08:	ldr	x1, [x22, #16]
   23f0c:	ldr	w1, [x1, x0, lsl #2]
   23f10:	cmp	w20, w1
   23f14:	b.hi	23ef0 <printf_parse@@Base+0x6ac0>  // b.pmore
   23f18:	ldrb	w0, [x22, #32]
   23f1c:	tst	x0, #0x1
   23f20:	csel	w19, w19, wzr, eq  // eq = none
   23f24:	ldr	x25, [sp, #64]
   23f28:	b	23ce8 <printf_parse@@Base+0x68b8>
   23f2c:	mov	w19, #0x0                   	// #0
   23f30:	b	23ce8 <printf_parse@@Base+0x68b8>
   23f34:	mov	w19, #0x0                   	// #0
   23f38:	b	23ce8 <printf_parse@@Base+0x68b8>
   23f3c:	mov	w19, #0x0                   	// #0
   23f40:	b	23ce8 <printf_parse@@Base+0x68b8>
   23f44:	mov	w19, #0x0                   	// #0
   23f48:	b	23ce8 <printf_parse@@Base+0x68b8>
   23f4c:	mov	w19, #0x0                   	// #0
   23f50:	b	23ce8 <printf_parse@@Base+0x68b8>
   23f54:	mov	w19, #0x0                   	// #0
   23f58:	ldr	x25, [sp, #64]
   23f5c:	b	23ce8 <printf_parse@@Base+0x68b8>
   23f60:	mov	w19, #0x0                   	// #0
   23f64:	ldr	x25, [sp, #64]
   23f68:	b	23ce8 <printf_parse@@Base+0x68b8>
   23f6c:	mov	w19, #0x0                   	// #0
   23f70:	ldr	x25, [sp, #64]
   23f74:	b	23ce8 <printf_parse@@Base+0x68b8>
   23f78:	ldrb	w0, [x22, #32]
   23f7c:	tbz	w0, #0, 23f6c <printf_parse@@Base+0x6b3c>
   23f80:	cmp	w19, #0x0
   23f84:	csinc	w19, w19, wzr, gt
   23f88:	ldr	x25, [sp, #64]
   23f8c:	b	23ce8 <printf_parse@@Base+0x68b8>
   23f90:	mov	x1, x20
   23f94:	mov	x0, x24
   23f98:	bl	1df58 <printf_parse@@Base+0xb28>
   23f9c:	mov	w20, w0
   23fa0:	ldr	x2, [x22, #40]
   23fa4:	cmp	x2, #0x0
   23fa8:	b.gt	23e84 <printf_parse@@Base+0x6a54>
   23fac:	b	23ed8 <printf_parse@@Base+0x6aa8>
   23fb0:	ldr	x25, [sp, #64]
   23fb4:	b	23ce8 <printf_parse@@Base+0x68b8>
   23fb8:	stp	x29, x30, [sp, #-320]!
   23fbc:	mov	x29, sp
   23fc0:	stp	x23, x24, [sp, #48]
   23fc4:	stp	x27, x28, [sp, #80]
   23fc8:	mov	x24, x0
   23fcc:	mov	x28, x1
   23fd0:	mov	x0, #0x3800                	// #14336
   23fd4:	bl	a5f0 <malloc@plt>
   23fd8:	str	x0, [sp, #144]
   23fdc:	cbz	x0, 249a8 <printf_parse@@Base+0x7578>
   23fe0:	stp	x19, x20, [sp, #16]
   23fe4:	str	x0, [sp, #152]
   23fe8:	add	x0, x0, #0x1, lsl #12
   23fec:	add	x0, x0, #0x800
   23ff0:	str	x0, [sp, #104]
   23ff4:	str	xzr, [x28, #88]
   23ff8:	str	xzr, [x28, #96]
   23ffc:	stp	xzr, xzr, [sp, #160]
   24000:	stp	xzr, xzr, [sp, #176]
   24004:	ldr	x0, [x28, #16]
   24008:	cmp	x0, #0x0
   2400c:	b.le	249b0 <printf_parse@@Base+0x7580>
   24010:	stp	x21, x22, [sp, #32]
   24014:	stp	x25, x26, [sp, #64]
   24018:	mov	x19, #0x0                   	// #0
   2401c:	str	xzr, [sp, #128]
   24020:	add	x27, sp, #0xc0
   24024:	add	x0, sp, #0xe0
   24028:	str	x0, [sp, #112]
   2402c:	b	243e0 <printf_parse@@Base+0x6fb0>
   24030:	ldrb	w2, [x2, x1]
   24034:	add	x3, sp, #0xa0
   24038:	ubfx	x4, x2, #6, #2
   2403c:	mov	x1, #0x1                   	// #1
   24040:	lsl	x2, x1, x2
   24044:	ldr	x1, [x3, x4, lsl #3]
   24048:	orr	x1, x1, x2
   2404c:	str	x1, [x3, x4, lsl #3]
   24050:	cbz	w0, 2410c <printf_parse@@Base+0x6cdc>
   24054:	tbnz	w0, #5, 241cc <printf_parse@@Base+0x6d9c>
   24058:	tbnz	w0, #7, 241e8 <printf_parse@@Base+0x6db8>
   2405c:	tbz	w0, #2, 240b4 <printf_parse@@Base+0x6c84>
   24060:	cmp	w25, #0x1
   24064:	b.eq	241f4 <printf_parse@@Base+0x6dc4>  // b.none
   24068:	ldr	w1, [x24, #180]
   2406c:	cmp	w1, #0x1
   24070:	b.le	24208 <printf_parse@@Base+0x6dd8>
   24074:	ldr	x7, [x24, #120]
   24078:	add	x4, sp, #0xa0
   2407c:	mov	x3, #0x0                   	// #0
   24080:	mov	x2, #0x0                   	// #0
   24084:	add	x6, x24, #0xb8
   24088:	ldr	x1, [x7, x2, lsl #3]
   2408c:	ldr	x5, [x6, x2, lsl #3]
   24090:	orn	x1, x5, x1
   24094:	ldr	x5, [x4]
   24098:	and	x1, x1, x5
   2409c:	str	x1, [x4], #8
   240a0:	orr	x3, x3, x1
   240a4:	add	x2, x2, #0x1
   240a8:	cmp	x2, #0x4
   240ac:	b.ne	24088 <printf_parse@@Base+0x6c58>  // b.any
   240b0:	cbz	x3, 243c4 <printf_parse@@Base+0x6f94>
   240b4:	tbz	w0, #3, 2410c <printf_parse@@Base+0x6cdc>
   240b8:	cmp	w25, #0x1
   240bc:	b.eq	2423c <printf_parse@@Base+0x6e0c>  // b.none
   240c0:	ldr	w0, [x24, #180]
   240c4:	cmp	w0, #0x1
   240c8:	b.le	24250 <printf_parse@@Base+0x6e20>
   240cc:	ldr	x6, [x24, #120]
   240d0:	add	x3, sp, #0xa0
   240d4:	mov	x2, #0x0                   	// #0
   240d8:	mov	x1, #0x0                   	// #0
   240dc:	add	x5, x24, #0xb8
   240e0:	ldr	x0, [x5, x1, lsl #3]
   240e4:	ldr	x4, [x6, x1, lsl #3]
   240e8:	and	x0, x0, x4
   240ec:	ldr	x4, [x3]
   240f0:	bic	x0, x4, x0
   240f4:	str	x0, [x3], #8
   240f8:	orr	x2, x2, x0
   240fc:	add	x1, x1, #0x1
   24100:	cmp	x1, #0x4
   24104:	b.ne	240e0 <printf_parse@@Base+0x6cb0>  // b.any
   24108:	cbz	x2, 243c4 <printf_parse@@Base+0x6f94>
   2410c:	cmp	x19, #0x0
   24110:	b.le	2445c <printf_parse@@Base+0x702c>
   24114:	ldr	x23, [sp, #144]
   24118:	add	x21, x23, #0x1, lsl #12
   2411c:	add	x21, x21, #0x7f8
   24120:	mov	x20, #0x0                   	// #0
   24124:	add	x0, sp, #0xa0
   24128:	str	x0, [sp, #120]
   2412c:	b	242d8 <printf_parse@@Base+0x6ea8>
   24130:	ldr	x5, [x2, x1]
   24134:	add	x3, sp, #0xa0
   24138:	mov	x1, #0x0                   	// #0
   2413c:	ldr	x2, [x3]
   24140:	ldr	x4, [x5, x1]
   24144:	orr	x2, x2, x4
   24148:	str	x2, [x3], #8
   2414c:	add	x1, x1, #0x8
   24150:	cmp	x1, #0x20
   24154:	b.ne	2413c <printf_parse@@Base+0x6d0c>  // b.any
   24158:	b	24050 <printf_parse@@Base+0x6c20>
   2415c:	ldr	w1, [x24, #180]
   24160:	cmp	w1, #0x1
   24164:	b.le	24194 <printf_parse@@Base+0x6d64>
   24168:	ldr	x5, [x24, #120]
   2416c:	add	x3, sp, #0xa0
   24170:	mov	x1, #0x0                   	// #0
   24174:	ldr	x2, [x3]
   24178:	ldr	x4, [x5, x1]
   2417c:	orr	x2, x2, x4
   24180:	str	x2, [x3], #8
   24184:	add	x1, x1, #0x8
   24188:	cmp	x1, #0x20
   2418c:	b.ne	24174 <printf_parse@@Base+0x6d44>  // b.any
   24190:	b	241a4 <printf_parse@@Base+0x6d74>
   24194:	mov	x2, #0xffffffffffffffff    	// #-1
   24198:	mov	x3, #0xffffffffffffffff    	// #-1
   2419c:	stp	x2, x3, [sp, #160]
   241a0:	stp	x2, x3, [sp, #176]
   241a4:	ldr	x1, [x24, #216]
   241a8:	tbnz	w1, #6, 241b8 <printf_parse@@Base+0x6d88>
   241ac:	ldr	x2, [sp, #160]
   241b0:	and	x2, x2, #0xfffffffffffffbff
   241b4:	str	x2, [sp, #160]
   241b8:	tbz	w1, #7, 24050 <printf_parse@@Base+0x6c20>
   241bc:	ldr	x1, [sp, #160]
   241c0:	and	x1, x1, #0xfffffffffffffffe
   241c4:	str	x1, [sp, #160]
   241c8:	b	24050 <printf_parse@@Base+0x6c20>
   241cc:	ldr	x1, [sp, #160]
   241d0:	stp	xzr, xzr, [sp, #160]
   241d4:	stp	xzr, xzr, [sp, #176]
   241d8:	tbz	w1, #10, 243c4 <printf_parse@@Base+0x6f94>
   241dc:	mov	x1, #0x400                 	// #1024
   241e0:	str	x1, [sp, #160]
   241e4:	b	24058 <printf_parse@@Base+0x6c28>
   241e8:	stp	xzr, xzr, [sp, #160]
   241ec:	stp	xzr, xzr, [sp, #176]
   241f0:	b	243c4 <printf_parse@@Base+0x6f94>
   241f4:	ldrb	w1, [x26, #10]
   241f8:	tbnz	w1, #6, 24068 <printf_parse@@Base+0x6c38>
   241fc:	stp	xzr, xzr, [sp, #160]
   24200:	stp	xzr, xzr, [sp, #176]
   24204:	b	243c4 <printf_parse@@Base+0x6f94>
   24208:	add	x4, sp, #0xa0
   2420c:	mov	x3, #0x0                   	// #0
   24210:	mov	x2, #0x0                   	// #0
   24214:	add	x6, x24, #0xb8
   24218:	ldr	x1, [x6, x2, lsl #3]
   2421c:	ldr	x5, [x4]
   24220:	and	x1, x1, x5
   24224:	str	x1, [x4], #8
   24228:	orr	x3, x3, x1
   2422c:	add	x2, x2, #0x1
   24230:	cmp	x2, #0x4
   24234:	b.ne	24218 <printf_parse@@Base+0x6de8>  // b.any
   24238:	b	240b0 <printf_parse@@Base+0x6c80>
   2423c:	ldrb	w0, [x26, #10]
   24240:	tbz	w0, #6, 240c0 <printf_parse@@Base+0x6c90>
   24244:	stp	xzr, xzr, [sp, #160]
   24248:	stp	xzr, xzr, [sp, #176]
   2424c:	b	243c4 <printf_parse@@Base+0x6f94>
   24250:	add	x3, sp, #0xa0
   24254:	mov	x2, #0x0                   	// #0
   24258:	mov	x1, #0x0                   	// #0
   2425c:	add	x5, x24, #0xb8
   24260:	ldr	x0, [x5, x1, lsl #3]
   24264:	ldr	x4, [x3]
   24268:	bic	x0, x4, x0
   2426c:	str	x0, [x3], #8
   24270:	orr	x2, x2, x0
   24274:	add	x1, x1, #0x1
   24278:	cmp	x1, #0x4
   2427c:	b.ne	24260 <printf_parse@@Base+0x6e30>  // b.any
   24280:	b	24108 <printf_parse@@Base+0x6cd8>
   24284:	mov	x0, #0x1                   	// #1
   24288:	mov	x3, #0x0                   	// #0
   2428c:	mov	x6, x21
   24290:	lsl	x2, x0, #3
   24294:	ldr	x1, [sp, #120]
   24298:	add	x1, x2, x1
   2429c:	ldur	x1, [x1, #-8]
   242a0:	ldr	x4, [x21, x0, lsl #3]
   242a4:	and	x1, x1, x4
   242a8:	add	x2, x2, x27
   242ac:	stur	x1, [x2, #-8]
   242b0:	orr	x3, x3, x1
   242b4:	add	x0, x0, #0x1
   242b8:	cmp	x0, #0x5
   242bc:	b.ne	24290 <printf_parse@@Base+0x6e60>  // b.any
   242c0:	cbnz	x3, 2430c <printf_parse@@Base+0x6edc>
   242c4:	add	x20, x20, #0x1
   242c8:	add	x21, x21, #0x20
   242cc:	add	x23, x23, #0x18
   242d0:	cmp	x20, x19
   242d4:	b.ge	243bc <printf_parse@@Base+0x6f8c>  // b.tcont
   242d8:	cmp	w25, #0x1
   242dc:	b.ne	24284 <printf_parse@@Base+0x6e54>  // b.any
   242e0:	ldrb	w2, [x26]
   242e4:	ubfx	x0, x2, #6, #2
   242e8:	lsl	x1, x20, #5
   242ec:	add	x0, x1, x0, lsl #3
   242f0:	ldr	x1, [sp, #104]
   242f4:	ldr	x1, [x1, x0]
   242f8:	lsr	x1, x1, x2
   242fc:	and	x0, x1, #0x1
   24300:	mov	x3, #0x0                   	// #0
   24304:	tbz	w1, #0, 242c4 <printf_parse@@Base+0x6e94>
   24308:	b	2428c <printf_parse@@Base+0x6e5c>
   2430c:	add	x2, sp, #0xa0
   24310:	mov	x1, #0x1                   	// #1
   24314:	mov	x22, #0x0                   	// #0
   24318:	mov	x5, #0x0                   	// #0
   2431c:	ldr	x3, [x2]
   24320:	ldr	x0, [x6, x1, lsl #3]
   24324:	bic	x4, x0, x3
   24328:	ldr	x7, [sp, #112]
   2432c:	add	x7, x7, x1, lsl #3
   24330:	stur	x4, [x7, #-8]
   24334:	orr	x5, x5, x4
   24338:	bic	x0, x3, x0
   2433c:	str	x0, [x2], #8
   24340:	orr	x22, x22, x0
   24344:	add	x1, x1, #0x1
   24348:	cmp	x1, #0x5
   2434c:	b.ne	2431c <printf_parse@@Base+0x6eec>  // b.any
   24350:	cbz	x5, 2439c <printf_parse@@Base+0x6f6c>
   24354:	ldr	x0, [sp, #104]
   24358:	add	x0, x0, x19, lsl #5
   2435c:	ldr	x1, [sp, #112]
   24360:	ldp	x2, x3, [x1]
   24364:	stp	x2, x3, [x0]
   24368:	ldp	x2, x3, [x1, #16]
   2436c:	stp	x2, x3, [x0, #16]
   24370:	ldp	x0, x1, [x27]
   24374:	stp	x0, x1, [x6, #8]
   24378:	ldp	x0, x1, [x27, #16]
   2437c:	stp	x0, x1, [x6, #24]
   24380:	add	x0, x19, x19, lsl #1
   24384:	mov	x1, x23
   24388:	ldr	x2, [sp, #152]
   2438c:	add	x0, x2, x0, lsl #3
   24390:	bl	200dc <printf_parse@@Base+0x2cac>
   24394:	cbnz	w0, 244ac <printf_parse@@Base+0x707c>
   24398:	add	x19, x19, #0x1
   2439c:	ldr	x0, [x28, #24]
   243a0:	ldr	x1, [sp, #136]
   243a4:	ldr	x1, [x0, x1]
   243a8:	mov	x0, x23
   243ac:	bl	1f018 <printf_parse@@Base+0x1be8>
   243b0:	and	w0, w0, #0xff
   243b4:	cbz	w0, 244ac <printf_parse@@Base+0x707c>
   243b8:	cbnz	x22, 242c4 <printf_parse@@Base+0x6e94>
   243bc:	cmp	x19, x20
   243c0:	b.eq	24464 <printf_parse@@Base+0x7034>  // b.none
   243c4:	ldr	x0, [sp, #128]
   243c8:	add	x0, x0, #0x1
   243cc:	mov	x1, x0
   243d0:	str	x0, [sp, #128]
   243d4:	ldr	x0, [x28, #16]
   243d8:	cmp	x1, x0
   243dc:	b.ge	244fc <printf_parse@@Base+0x70cc>  // b.tcont
   243e0:	ldr	x1, [sp, #128]
   243e4:	lsl	x0, x1, #3
   243e8:	str	x0, [sp, #136]
   243ec:	ldr	x0, [x28, #24]
   243f0:	ldr	x1, [x0, x1, lsl #3]
   243f4:	lsl	x1, x1, #4
   243f8:	ldr	x2, [x24]
   243fc:	add	x26, x2, x1
   24400:	ldrb	w25, [x26, #8]
   24404:	ldr	w0, [x26, #8]
   24408:	ubfx	x0, x0, #8, #10
   2440c:	cmp	w25, #0x1
   24410:	b.eq	24030 <printf_parse@@Base+0x6c00>  // b.none
   24414:	cmp	w25, #0x3
   24418:	b.eq	24130 <printf_parse@@Base+0x6d00>  // b.none
   2441c:	cmp	w25, #0x5
   24420:	b.eq	2415c <printf_parse@@Base+0x6d2c>  // b.none
   24424:	cmp	w25, #0x7
   24428:	b.ne	243c4 <printf_parse@@Base+0x6f94>  // b.any
   2442c:	mov	x2, #0xffffffffffffffff    	// #-1
   24430:	mov	x3, #0xffffffffffffffff    	// #-1
   24434:	stp	x2, x3, [sp, #160]
   24438:	ldr	x1, [x24, #216]
   2443c:	tbnz	w1, #6, 24448 <printf_parse@@Base+0x7018>
   24440:	mov	x2, #0xfffffffffffffbff    	// #-1025
   24444:	str	x2, [sp, #160]
   24448:	tbz	w1, #7, 24050 <printf_parse@@Base+0x6c20>
   2444c:	ldr	x1, [sp, #160]
   24450:	and	x1, x1, #0xfffffffffffffffe
   24454:	str	x1, [sp, #160]
   24458:	b	24050 <printf_parse@@Base+0x6c20>
   2445c:	mov	x20, #0x0                   	// #0
   24460:	b	243bc <printf_parse@@Base+0x6f8c>
   24464:	ldr	x0, [sp, #104]
   24468:	add	x0, x0, x19, lsl #5
   2446c:	ldp	x2, x3, [sp, #160]
   24470:	stp	x2, x3, [x0]
   24474:	ldp	x2, x3, [sp, #176]
   24478:	stp	x2, x3, [x0, #16]
   2447c:	ldr	x1, [x28, #24]
   24480:	add	x0, x19, x19, lsl #1
   24484:	ldr	x2, [sp, #136]
   24488:	ldr	x1, [x1, x2]
   2448c:	ldr	x2, [sp, #152]
   24490:	add	x0, x2, x0, lsl #3
   24494:	bl	1efc4 <printf_parse@@Base+0x1b94>
   24498:	cbnz	w0, 244ac <printf_parse@@Base+0x707c>
   2449c:	add	x19, x19, #0x1
   244a0:	stp	xzr, xzr, [sp, #160]
   244a4:	stp	xzr, xzr, [sp, #176]
   244a8:	b	243c4 <printf_parse@@Base+0x6f94>
   244ac:	cmp	x19, #0x0
   244b0:	b.le	249b8 <printf_parse@@Base+0x7588>
   244b4:	ldr	x0, [sp, #144]
   244b8:	mov	x20, x0
   244bc:	add	x19, x19, x19, lsl #1
   244c0:	add	x19, x0, x19, lsl #3
   244c4:	ldr	x0, [x20, #16]
   244c8:	bl	aa50 <free@plt>
   244cc:	add	x20, x20, #0x18
   244d0:	cmp	x20, x19
   244d4:	b.ne	244c4 <printf_parse@@Base+0x7094>  // b.any
   244d8:	mov	x19, #0xffffffffffffffff    	// #-1
   244dc:	ldp	x21, x22, [sp, #32]
   244e0:	ldp	x25, x26, [sp, #64]
   244e4:	ldr	x0, [sp, #144]
   244e8:	bl	aa50 <free@plt>
   244ec:	mov	w0, #0x0                   	// #0
   244f0:	cbz	x19, 24598 <printf_parse@@Base+0x7168>
   244f4:	ldp	x19, x20, [sp, #16]
   244f8:	b	24648 <printf_parse@@Base+0x7218>
   244fc:	cmp	x19, #0x0
   24500:	b.le	2458c <printf_parse@@Base+0x715c>
   24504:	add	x1, x19, #0x1
   24508:	add	x0, sp, #0x120
   2450c:	bl	1f254 <printf_parse@@Base+0x1e24>
   24510:	str	w0, [sp, #316]
   24514:	cbnz	w0, 24604 <printf_parse@@Base+0x71d4>
   24518:	mov	x0, #0xa855                	// #43093
   2451c:	movk	x0, #0xaaaa, lsl #16
   24520:	movk	x0, #0xaaaa, lsl #32
   24524:	movk	x0, #0xaaa, lsl #48
   24528:	cmp	x19, x0
   2452c:	b.hi	24604 <printf_parse@@Base+0x71d4>  // b.pmore
   24530:	add	x0, x19, x19, lsl #1
   24534:	lsl	x0, x0, #3
   24538:	str	x0, [sp, #136]
   2453c:	bl	a5f0 <malloc@plt>
   24540:	mov	x23, x0
   24544:	cbz	x0, 24604 <printf_parse@@Base+0x71d4>
   24548:	lsl	x0, x19, #3
   2454c:	add	x1, x23, x0
   24550:	str	x1, [sp, #112]
   24554:	add	x0, x1, x0
   24558:	str	x0, [sp, #120]
   2455c:	stp	xzr, xzr, [sp, #256]
   24560:	stp	xzr, xzr, [sp, #272]
   24564:	ldr	x0, [sp, #144]
   24568:	add	x26, x0, #0x8
   2456c:	add	x25, x0, #0x1, lsl #12
   24570:	add	x25, x25, #0x7f8
   24574:	str	wzr, [sp, #128]
   24578:	mov	x27, #0x0                   	// #0
   2457c:	add	x22, sp, #0x120
   24580:	add	x0, sp, #0x13c
   24584:	str	x0, [sp, #104]
   24588:	b	246cc <printf_parse@@Base+0x729c>
   2458c:	ldp	x21, x22, [sp, #32]
   24590:	ldp	x25, x26, [sp, #64]
   24594:	b	244e4 <printf_parse@@Base+0x70b4>
   24598:	mov	x1, #0x100                 	// #256
   2459c:	mov	x0, #0x8                   	// #8
   245a0:	bl	a770 <calloc@plt>
   245a4:	str	x0, [x28, #88]
   245a8:	cmp	x0, #0x0
   245ac:	cset	w0, ne  // ne = any
   245b0:	ldp	x19, x20, [sp, #16]
   245b4:	b	24648 <printf_parse@@Base+0x7218>
   245b8:	add	x20, x20, #0x1
   245bc:	ldr	x0, [x21]
   245c0:	cmp	x0, x20
   245c4:	b.le	24658 <printf_parse@@Base+0x7228>
   245c8:	ldr	x0, [x21, #8]
   245cc:	ldr	x1, [x0, x20, lsl #3]
   245d0:	ldr	x0, [x24, #24]
   245d4:	ldr	x1, [x0, x1, lsl #3]
   245d8:	cmn	x1, #0x1
   245dc:	b.eq	245b8 <printf_parse@@Base+0x7188>  // b.none
   245e0:	add	x1, x1, x1, lsl #1
   245e4:	ldr	x0, [x24, #48]
   245e8:	add	x1, x0, x1, lsl #3
   245ec:	mov	x0, x22
   245f0:	bl	1ff2c <printf_parse@@Base+0x2afc>
   245f4:	str	w0, [sp, #316]
   245f8:	cbz	w0, 245b8 <printf_parse@@Base+0x7188>
   245fc:	mov	x0, x23
   24600:	bl	aa50 <free@plt>
   24604:	ldr	x0, [sp, #304]
   24608:	bl	aa50 <free@plt>
   2460c:	ldr	x0, [sp, #144]
   24610:	mov	x20, x0
   24614:	add	x19, x19, x19, lsl #1
   24618:	add	x19, x0, x19, lsl #3
   2461c:	ldr	x0, [x20, #16]
   24620:	bl	aa50 <free@plt>
   24624:	add	x20, x20, #0x18
   24628:	cmp	x19, x20
   2462c:	b.ne	2461c <printf_parse@@Base+0x71ec>  // b.any
   24630:	ldr	x0, [sp, #144]
   24634:	bl	aa50 <free@plt>
   24638:	mov	w0, #0x0                   	// #0
   2463c:	ldp	x19, x20, [sp, #16]
   24640:	ldp	x21, x22, [sp, #32]
   24644:	ldp	x25, x26, [sp, #64]
   24648:	ldp	x23, x24, [sp, #48]
   2464c:	ldp	x27, x28, [sp, #80]
   24650:	ldp	x29, x30, [sp], #320
   24654:	ret
   24658:	mov	w3, #0x0                   	// #0
   2465c:	mov	x2, x22
   24660:	mov	x1, x24
   24664:	ldr	x0, [sp, #104]
   24668:	bl	21950 <printf_parse@@Base+0x4520>
   2466c:	mov	x20, x27
   24670:	str	x0, [x23, x27, lsl #3]
   24674:	cbz	x0, 246e8 <printf_parse@@Base+0x72b8>
   24678:	ldrsb	w1, [x0, #104]
   2467c:	tbnz	w1, #31, 246f4 <printf_parse@@Base+0x72c4>
   24680:	ldr	x1, [sp, #112]
   24684:	str	x0, [x1, x20, lsl #3]
   24688:	ldr	x1, [sp, #120]
   2468c:	str	x0, [x1, x20, lsl #3]
   24690:	add	x20, sp, #0x100
   24694:	mov	x2, x20
   24698:	mov	x0, #0x1                   	// #1
   2469c:	ldr	x1, [x2]
   246a0:	ldr	x3, [x25, x0, lsl #3]
   246a4:	orr	x1, x1, x3
   246a8:	str	x1, [x2], #8
   246ac:	add	x0, x0, #0x1
   246b0:	cmp	x0, #0x5
   246b4:	b.ne	2469c <printf_parse@@Base+0x726c>  // b.any
   246b8:	add	x27, x27, #0x1
   246bc:	add	x26, x26, #0x18
   246c0:	add	x25, x25, #0x20
   246c4:	cmp	x27, x19
   246c8:	b.eq	2476c <printf_parse@@Base+0x733c>  // b.none
   246cc:	str	xzr, [sp, #296]
   246d0:	mov	x21, x26
   246d4:	ldr	x0, [x26]
   246d8:	cmp	x0, #0x0
   246dc:	b.le	24658 <printf_parse@@Base+0x7228>
   246e0:	mov	x20, #0x0                   	// #0
   246e4:	b	245c8 <printf_parse@@Base+0x7198>
   246e8:	ldr	w1, [sp, #316]
   246ec:	cbz	w1, 24678 <printf_parse@@Base+0x7248>
   246f0:	b	245fc <printf_parse@@Base+0x71cc>
   246f4:	mov	w3, #0x1                   	// #1
   246f8:	mov	x2, x22
   246fc:	mov	x1, x24
   24700:	ldr	x0, [sp, #104]
   24704:	bl	21950 <printf_parse@@Base+0x4520>
   24708:	ldr	x1, [sp, #112]
   2470c:	str	x0, [x1, x20, lsl #3]
   24710:	cbz	x0, 24760 <printf_parse@@Base+0x7330>
   24714:	ldr	x1, [x23, x20, lsl #3]
   24718:	cmp	x0, x1
   2471c:	b.eq	24734 <printf_parse@@Base+0x7304>  // b.none
   24720:	ldr	w0, [x24, #180]
   24724:	cmp	w0, #0x2
   24728:	ldr	w0, [sp, #128]
   2472c:	csinc	w0, w0, wzr, lt  // lt = tstop
   24730:	str	w0, [sp, #128]
   24734:	mov	w3, #0x2                   	// #2
   24738:	mov	x2, x22
   2473c:	mov	x1, x24
   24740:	ldr	x0, [sp, #104]
   24744:	bl	21950 <printf_parse@@Base+0x4520>
   24748:	ldr	x1, [sp, #120]
   2474c:	str	x0, [x1, x20, lsl #3]
   24750:	cbnz	x0, 24690 <printf_parse@@Base+0x7260>
   24754:	ldr	w0, [sp, #316]
   24758:	cbz	w0, 24690 <printf_parse@@Base+0x7260>
   2475c:	b	245fc <printf_parse@@Base+0x71cc>
   24760:	ldr	w1, [sp, #316]
   24764:	cbz	w1, 24714 <printf_parse@@Base+0x72e4>
   24768:	b	245fc <printf_parse@@Base+0x71cc>
   2476c:	ldr	w0, [sp, #128]
   24770:	cbnz	w0, 248cc <printf_parse@@Base+0x749c>
   24774:	mov	x1, #0x100                 	// #256
   24778:	mov	x0, #0x8                   	// #8
   2477c:	bl	a770 <calloc@plt>
   24780:	mov	x10, x0
   24784:	str	x0, [x28, #88]
   24788:	cbz	x0, 245fc <printf_parse@@Base+0x71cc>
   2478c:	mov	x9, x0
   24790:	mov	x7, #0x1800                	// #6144
   24794:	ldr	x0, [sp, #144]
   24798:	add	x8, x0, x7
   2479c:	sub	x12, sp, #0x1, lsl #12
   247a0:	sub	x12, x12, #0x700
   247a4:	sub	x24, x24, #0x1, lsl #12
   247a8:	sub	x24, x24, #0x748
   247ac:	mov	x13, #0x0                   	// #0
   247b0:	mov	x11, #0x1820                	// #6176
   247b4:	ldr	x0, [x7, x12]
   247b8:	cbz	x0, 247d8 <printf_parse@@Base+0x73a8>
   247bc:	mov	x3, x9
   247c0:	mov	x2, #0x1                   	// #1
   247c4:	tbnz	w0, #0, 24870 <printf_parse@@Base+0x7440>
   247c8:	lsl	x2, x2, #1
   247cc:	lsr	x0, x0, #1
   247d0:	add	x3, x3, #0x8
   247d4:	cbnz	x0, 247c4 <printf_parse@@Base+0x7394>
   247d8:	add	x9, x9, #0x200
   247dc:	add	x8, x8, #0x8
   247e0:	add	x7, x7, #0x8
   247e4:	cmp	x7, x11
   247e8:	b.ne	247b4 <printf_parse@@Base+0x7384>  // b.any
   247ec:	ldr	x0, [sp, #256]
   247f0:	tbz	w0, #10, 24820 <printf_parse@@Base+0x73f0>
   247f4:	mov	x0, #0x0                   	// #0
   247f8:	ldr	x1, [sp, #144]
   247fc:	add	x3, x1, #0x1, lsl #12
   24800:	add	x3, x3, #0x800
   24804:	mov	x2, x0
   24808:	lsl	x1, x0, #5
   2480c:	ldr	x1, [x3, x1]
   24810:	tbnz	w1, #10, 2498c <printf_parse@@Base+0x755c>
   24814:	add	x0, x0, #0x1
   24818:	cmp	x0, x19
   2481c:	b.ne	24804 <printf_parse@@Base+0x73d4>  // b.any
   24820:	mov	x0, x23
   24824:	bl	aa50 <free@plt>
   24828:	ldr	x0, [sp, #304]
   2482c:	bl	aa50 <free@plt>
   24830:	ldr	x0, [sp, #144]
   24834:	mov	x20, x0
   24838:	ldr	x1, [sp, #136]
   2483c:	add	x19, x0, x1
   24840:	ldr	x0, [x20, #16]
   24844:	bl	aa50 <free@plt>
   24848:	add	x20, x20, #0x18
   2484c:	cmp	x19, x20
   24850:	b.ne	24840 <printf_parse@@Base+0x7410>  // b.any
   24854:	ldr	x0, [sp, #144]
   24858:	bl	aa50 <free@plt>
   2485c:	mov	w0, #0x1                   	// #1
   24860:	ldp	x19, x20, [sp, #16]
   24864:	ldp	x21, x22, [sp, #32]
   24868:	ldp	x25, x26, [sp, #64]
   2486c:	b	24648 <printf_parse@@Base+0x7218>
   24870:	mov	x6, x8
   24874:	ldr	x1, [x8]
   24878:	tst	x2, x1
   2487c:	b.ne	248b8 <printf_parse@@Base+0x7488>  // b.any
   24880:	mov	x1, #0x0                   	// #0
   24884:	add	x1, x1, #0x1
   24888:	mov	x5, x1
   2488c:	lsl	x4, x1, #5
   24890:	ldr	x4, [x6, x4]
   24894:	tst	x2, x4
   24898:	b.eq	24884 <printf_parse@@Base+0x7454>  // b.none
   2489c:	ldr	x1, [x24, x7]
   248a0:	tst	x2, x1
   248a4:	b.eq	248c0 <printf_parse@@Base+0x7490>  // b.none
   248a8:	ldr	x1, [sp, #112]
   248ac:	ldr	x1, [x1, x5, lsl #3]
   248b0:	str	x1, [x3]
   248b4:	b	247c8 <printf_parse@@Base+0x7398>
   248b8:	mov	x5, x13
   248bc:	b	2489c <printf_parse@@Base+0x746c>
   248c0:	ldr	x1, [x23, x5, lsl #3]
   248c4:	str	x1, [x3]
   248c8:	b	247c8 <printf_parse@@Base+0x7398>
   248cc:	mov	x1, #0x200                 	// #512
   248d0:	mov	x0, #0x8                   	// #8
   248d4:	bl	a770 <calloc@plt>
   248d8:	mov	x10, x0
   248dc:	str	x0, [x28, #96]
   248e0:	cbz	x0, 245fc <printf_parse@@Base+0x71cc>
   248e4:	add	x9, x0, #0x800
   248e8:	ldr	x0, [sp, #144]
   248ec:	add	x7, x0, #0x1, lsl #12
   248f0:	add	x7, x7, #0x800
   248f4:	mov	w8, #0x0                   	// #0
   248f8:	mov	x11, #0x0                   	// #0
   248fc:	ldr	x0, [x20]
   24900:	cbz	x0, 24920 <printf_parse@@Base+0x74f0>
   24904:	mov	x3, x9
   24908:	mov	x2, #0x1                   	// #1
   2490c:	tbnz	w0, #0, 2493c <printf_parse@@Base+0x750c>
   24910:	lsl	x2, x2, #1
   24914:	lsr	x0, x0, #1
   24918:	add	x3, x3, #0x8
   2491c:	cbnz	x0, 2490c <printf_parse@@Base+0x74dc>
   24920:	add	x20, x20, #0x8
   24924:	add	w8, w8, #0x40
   24928:	add	x9, x9, #0x200
   2492c:	add	x7, x7, #0x8
   24930:	cmp	w8, #0x100
   24934:	b.ne	248fc <printf_parse@@Base+0x74cc>  // b.any
   24938:	b	247ec <printf_parse@@Base+0x73bc>
   2493c:	mov	x6, x7
   24940:	ldr	x1, [x7]
   24944:	tst	x2, x1
   24948:	b.ne	24984 <printf_parse@@Base+0x7554>  // b.any
   2494c:	mov	x1, #0x0                   	// #0
   24950:	add	x1, x1, #0x1
   24954:	mov	x5, x1
   24958:	lsl	x4, x1, #5
   2495c:	ldr	x4, [x6, x4]
   24960:	tst	x2, x4
   24964:	b.eq	24950 <printf_parse@@Base+0x7520>  // b.none
   24968:	sub	x1, x3, #0x8, lsl #12
   2496c:	ldr	x4, [x23, x5, lsl #3]
   24970:	str	x4, [x1, #30720]
   24974:	ldr	x1, [sp, #112]
   24978:	ldr	x1, [x1, x5, lsl #3]
   2497c:	str	x1, [x3]
   24980:	b	24910 <printf_parse@@Base+0x74e0>
   24984:	mov	x5, x11
   24988:	b	24968 <printf_parse@@Base+0x7538>
   2498c:	ldr	x0, [sp, #120]
   24990:	ldr	x0, [x0, x2, lsl #3]
   24994:	str	x0, [x10, #80]
   24998:	ldr	w1, [sp, #128]
   2499c:	cbz	w1, 24820 <printf_parse@@Base+0x73f0>
   249a0:	str	x0, [x10, #2128]
   249a4:	b	24820 <printf_parse@@Base+0x73f0>
   249a8:	mov	w0, #0x0                   	// #0
   249ac:	b	24648 <printf_parse@@Base+0x7218>
   249b0:	mov	x19, #0x0                   	// #0
   249b4:	b	244e4 <printf_parse@@Base+0x70b4>
   249b8:	mov	x19, #0xffffffffffffffff    	// #-1
   249bc:	ldp	x21, x22, [sp, #32]
   249c0:	ldp	x25, x26, [sp, #64]
   249c4:	b	244e4 <printf_parse@@Base+0x70b4>
   249c8:	stp	x29, x30, [sp, #-224]!
   249cc:	mov	x29, sp
   249d0:	stp	x19, x20, [sp, #16]
   249d4:	stp	x21, x22, [sp, #32]
   249d8:	stp	x23, x24, [sp, #48]
   249dc:	stp	x25, x26, [sp, #64]
   249e0:	stp	x27, x28, [sp, #80]
   249e4:	mov	x21, x1
   249e8:	str	x2, [x29, #136]
   249ec:	mov	x22, x3
   249f0:	ldr	x0, [x0]
   249f4:	str	x0, [x29, #152]
   249f8:	str	xzr, [x29, #168]
   249fc:	mov	x0, #0x2                   	// #2
   24a00:	str	x0, [x29, #176]
   24a04:	str	xzr, [x29, #184]
   24a08:	tst	w4, #0xff
   24a0c:	b.eq	24a88 <printf_parse@@Base+0x7658>  // b.none
   24a10:	mov	x0, #0x60                  	// #96
   24a14:	bl	a5f0 <malloc@plt>
   24a18:	str	x0, [x29, #184]
   24a1c:	cbz	x0, 24f98 <printf_parse@@Base+0x7b68>
   24a20:	add	x26, x29, #0xa8
   24a24:	ldr	x0, [x29, #152]
   24a28:	ldr	x19, [x0, #144]
   24a2c:	stp	xzr, xzr, [x29, #192]
   24a30:	str	xzr, [x29, #208]
   24a34:	ldr	x0, [x29, #136]
   24a38:	lsl	x0, x0, #4
   24a3c:	str	x0, [x29, #120]
   24a40:	cmp	x0, #0xfbf
   24a44:	b.hi	24a90 <printf_parse@@Base+0x7660>  // b.pmore
   24a48:	sub	sp, sp, x0
   24a4c:	mov	x0, sp
   24a50:	str	x0, [x29, #104]
   24a54:	str	wzr, [x29, #100]
   24a58:	ldr	x2, [x29, #120]
   24a5c:	mov	x1, x22
   24a60:	ldr	x0, [x29, #104]
   24a64:	bl	a2c0 <memcpy@plt>
   24a68:	ldr	x0, [x22]
   24a6c:	str	x0, [x29, #216]
   24a70:	ldr	x25, [x29, #136]
   24a74:	add	x0, x29, #0xc0
   24a78:	str	x0, [x29, #128]
   24a7c:	add	x0, x29, #0xd8
   24a80:	str	x0, [x29, #112]
   24a84:	b	24de4 <printf_parse@@Base+0x79b4>
   24a88:	mov	x26, #0x0                   	// #0
   24a8c:	b	24a24 <printf_parse@@Base+0x75f4>
   24a90:	ldr	x0, [x29, #120]
   24a94:	bl	a5f0 <malloc@plt>
   24a98:	str	x0, [x29, #104]
   24a9c:	mov	w1, #0x1                   	// #1
   24aa0:	str	w1, [x29, #100]
   24aa4:	cbnz	x0, 24a58 <printf_parse@@Base+0x7628>
   24aa8:	mov	x0, x26
   24aac:	bl	22228 <printf_parse@@Base+0x4df8>
   24ab0:	mov	w0, #0xc                   	// #12
   24ab4:	b	24f6c <printf_parse@@Base+0x7b3c>
   24ab8:	ldr	x0, [x2, x1]
   24abc:	add	x0, x0, #0x1
   24ac0:	ldr	x1, [x29, #136]
   24ac4:	cmp	x1, x0
   24ac8:	b.le	24e1c <printf_parse@@Base+0x79ec>
   24acc:	lsl	x0, x0, #4
   24ad0:	add	x1, x22, x0
   24ad4:	str	x20, [x22, x0]
   24ad8:	mov	x0, #0xffffffffffffffff    	// #-1
   24adc:	str	x0, [x1, #8]
   24ae0:	b	24e1c <printf_parse@@Base+0x79ec>
   24ae4:	ldr	x0, [x2, x1]
   24ae8:	add	x0, x0, #0x1
   24aec:	ldr	x1, [x29, #136]
   24af0:	cmp	x1, x0
   24af4:	b.le	24e1c <printf_parse@@Base+0x79ec>
   24af8:	lsl	x0, x0, #4
   24afc:	add	x2, x22, x0
   24b00:	ldr	x1, [x22, x0]
   24b04:	cmp	x20, x1
   24b08:	b.gt	24b2c <printf_parse@@Base+0x76fc>
   24b0c:	ldrb	w1, [x3, #10]
   24b10:	tbz	w1, #3, 24b24 <printf_parse@@Base+0x76f4>
   24b14:	ldr	x1, [x29, #104]
   24b18:	ldr	x0, [x1, x0]
   24b1c:	cmn	x0, #0x1
   24b20:	b.ne	24b44 <printf_parse@@Base+0x7714>  // b.any
   24b24:	str	x20, [x2, #8]
   24b28:	b	24e1c <printf_parse@@Base+0x79ec>
   24b2c:	str	x20, [x2, #8]
   24b30:	ldr	x2, [x29, #120]
   24b34:	mov	x1, x22
   24b38:	ldr	x0, [x29, #104]
   24b3c:	bl	a2c0 <memcpy@plt>
   24b40:	b	24e1c <printf_parse@@Base+0x79ec>
   24b44:	ldr	x2, [x29, #120]
   24b48:	mov	x0, x22
   24b4c:	bl	a2c0 <memcpy@plt>
   24b50:	b	24e1c <printf_parse@@Base+0x79ec>
   24b54:	cbz	x26, 24be4 <printf_parse@@Base+0x77b4>
   24b58:	ldr	x0, [x29, #136]
   24b5c:	cbz	x0, 24bbc <printf_parse@@Base+0x778c>
   24b60:	mov	x0, x22
   24b64:	mov	x1, #0x0                   	// #0
   24b68:	b	24b7c <printf_parse@@Base+0x774c>
   24b6c:	add	x1, x1, #0x1
   24b70:	add	x0, x0, #0x10
   24b74:	cmp	x25, x1
   24b78:	b.eq	24bbc <printf_parse@@Base+0x778c>  // b.none
   24b7c:	ldr	x2, [x0]
   24b80:	tbnz	x2, #63, 24b6c <printf_parse@@Base+0x773c>
   24b84:	ldr	x2, [x0, #8]
   24b88:	cmn	x2, #0x1
   24b8c:	b.ne	24b6c <printf_parse@@Base+0x773c>  // b.any
   24b90:	ldr	x0, [x29, #136]
   24b94:	cmp	x0, x1
   24b98:	b.eq	24bbc <printf_parse@@Base+0x778c>  // b.none
   24b9c:	ldr	x4, [x29, #128]
   24ba0:	mov	x3, x22
   24ba4:	mov	x2, x25
   24ba8:	ldr	x1, [x29, #112]
   24bac:	mov	x0, x26
   24bb0:	bl	2251c <printf_parse@@Base+0x50ec>
   24bb4:	mov	x19, x0
   24bb8:	b	24e34 <printf_parse@@Base+0x7a04>
   24bbc:	ldr	x0, [x29, #208]
   24bc0:	bl	aa50 <free@plt>
   24bc4:	ldr	w0, [x29, #100]
   24bc8:	cbnz	w0, 24bd8 <printf_parse@@Base+0x77a8>
   24bcc:	mov	x0, x26
   24bd0:	bl	22228 <printf_parse@@Base+0x4df8>
   24bd4:	b	24f6c <printf_parse@@Base+0x7b3c>
   24bd8:	ldr	x0, [x29, #104]
   24bdc:	bl	aa50 <free@plt>
   24be0:	b	24bcc <printf_parse@@Base+0x779c>
   24be4:	ldr	x0, [x29, #208]
   24be8:	bl	aa50 <free@plt>
   24bec:	mov	w0, #0x0                   	// #0
   24bf0:	ldr	w1, [x29, #100]
   24bf4:	cbz	w1, 24f6c <printf_parse@@Base+0x7b3c>
   24bf8:	ldr	x0, [x29, #104]
   24bfc:	bl	aa50 <free@plt>
   24c00:	mov	w0, #0x0                   	// #0
   24c04:	b	24f6c <printf_parse@@Base+0x7b3c>
   24c08:	ldr	x0, [x21, #184]
   24c0c:	ldr	x1, [x29, #216]
   24c10:	ldr	x24, [x0, x1, lsl #3]
   24c14:	add	x24, x24, #0x8
   24c18:	add	x20, x19, x19, lsl #1
   24c1c:	ldr	x0, [x23, #40]
   24c20:	add	x20, x0, x20, lsl #3
   24c24:	mov	x1, x19
   24c28:	ldr	x0, [x29, #128]
   24c2c:	bl	1f018 <printf_parse@@Base+0x1be8>
   24c30:	and	w0, w0, #0xff
   24c34:	cbz	w0, 24cec <printf_parse@@Base+0x78bc>
   24c38:	ldr	x27, [x20, #8]
   24c3c:	cmp	x27, #0x0
   24c40:	b.le	24fa0 <printf_parse@@Base+0x7b70>
   24c44:	ldr	x28, [x20, #16]
   24c48:	mov	x19, #0xffffffffffffffff    	// #-1
   24c4c:	mov	x20, #0x0                   	// #0
   24c50:	b	24d40 <printf_parse@@Base+0x7910>
   24c54:	mov	x1, x19
   24c58:	ldr	x0, [x29, #128]
   24c5c:	bl	1e034 <printf_parse@@Base+0xc04>
   24c60:	cbnz	x0, 24f1c <printf_parse@@Base+0x7aec>
   24c64:	cbz	x26, 24de0 <printf_parse@@Base+0x79b0>
   24c68:	ldr	x20, [x29, #216]
   24c6c:	ldr	x24, [x26]
   24c70:	add	x0, x24, #0x1
   24c74:	str	x0, [x26]
   24c78:	ldr	x1, [x26, #8]
   24c7c:	cmp	x0, x1
   24c80:	b.eq	24d0c <printf_parse@@Base+0x78dc>  // b.none
   24c84:	add	x24, x24, x24, lsl #1
   24c88:	lsl	x24, x24, #4
   24c8c:	ldr	x0, [x26, #16]
   24c90:	str	x20, [x0, x24]
   24c94:	ldr	x0, [x26, #16]
   24c98:	add	x0, x0, x24
   24c9c:	str	x23, [x0, #8]
   24ca0:	ldr	x20, [x26, #16]
   24ca4:	add	x20, x20, x24
   24ca8:	ldr	x23, [x29, #120]
   24cac:	mov	x0, x23
   24cb0:	bl	a5f0 <malloc@plt>
   24cb4:	str	x0, [x20, #16]
   24cb8:	ldr	x0, [x26, #16]
   24cbc:	add	x0, x0, x24
   24cc0:	ldr	x0, [x0, #16]
   24cc4:	cbz	x0, 24cec <printf_parse@@Base+0x78bc>
   24cc8:	mov	x2, x23
   24ccc:	mov	x1, x22
   24cd0:	bl	a2c0 <memcpy@plt>
   24cd4:	ldr	x0, [x26, #16]
   24cd8:	add	x0, x0, x24
   24cdc:	ldr	x1, [x29, #128]
   24ce0:	add	x0, x0, #0x18
   24ce4:	bl	200dc <printf_parse@@Base+0x2cac>
   24ce8:	cbz	w0, 24de0 <printf_parse@@Base+0x79b0>
   24cec:	ldr	x0, [x29, #208]
   24cf0:	bl	aa50 <free@plt>
   24cf4:	ldr	w0, [x29, #100]
   24cf8:	cbnz	w0, 24f24 <printf_parse@@Base+0x7af4>
   24cfc:	mov	x0, x26
   24d00:	bl	22228 <printf_parse@@Base+0x4df8>
   24d04:	mov	w0, #0xc                   	// #12
   24d08:	b	24f6c <printf_parse@@Base+0x7b3c>
   24d0c:	add	x1, x1, x1, lsl #1
   24d10:	lsl	x1, x1, #5
   24d14:	ldr	x0, [x26, #16]
   24d18:	bl	a7e0 <realloc@plt>
   24d1c:	cbz	x0, 24cec <printf_parse@@Base+0x78bc>
   24d20:	ldr	x1, [x26, #8]
   24d24:	lsl	x1, x1, #1
   24d28:	str	x1, [x26, #8]
   24d2c:	str	x0, [x26, #16]
   24d30:	b	24c84 <printf_parse@@Base+0x7854>
   24d34:	add	x20, x20, #0x1
   24d38:	cmp	x27, x20
   24d3c:	b.eq	24de0 <printf_parse@@Base+0x79b0>  // b.none
   24d40:	ldr	x23, [x28, x20, lsl #3]
   24d44:	mov	x1, x23
   24d48:	mov	x0, x24
   24d4c:	bl	1e034 <printf_parse@@Base+0xc04>
   24d50:	cbz	x0, 24d34 <printf_parse@@Base+0x7904>
   24d54:	cmn	x19, #0x1
   24d58:	b.ne	24c54 <printf_parse@@Base+0x7824>  // b.any
   24d5c:	mov	x19, x23
   24d60:	b	24d34 <printf_parse@@Base+0x7904>
   24d64:	ldr	x3, [x29, #216]
   24d68:	mov	x2, x21
   24d6c:	mov	x1, x19
   24d70:	mov	x0, x23
   24d74:	bl	23c80 <printf_parse@@Base+0x6850>
   24d78:	sxtw	x20, w0
   24d7c:	cbnz	w0, 24ebc <printf_parse@@Base+0x7a8c>
   24d80:	ldr	x20, [x29, #216]
   24d84:	ldr	x1, [x23]
   24d88:	mov	x2, x20
   24d8c:	add	x1, x1, x24
   24d90:	mov	x0, x21
   24d94:	bl	205b0 <printf_parse@@Base+0x3180>
   24d98:	and	w0, w0, #0xff
   24d9c:	cbz	w0, 24fa0 <printf_parse@@Base+0x7b70>
   24da0:	ldr	x0, [x23, #24]
   24da4:	ldr	x19, [x0, x27, lsl #3]
   24da8:	add	x20, x20, #0x1
   24dac:	str	x20, [x29, #216]
   24db0:	cbz	x26, 24ddc <printf_parse@@Base+0x79ac>
   24db4:	ldr	x0, [x21, #168]
   24db8:	cmp	x20, x0
   24dbc:	b.gt	24fa0 <printf_parse@@Base+0x7b70>
   24dc0:	ldr	x0, [x21, #184]
   24dc4:	ldr	x0, [x0, x20, lsl #3]
   24dc8:	cbz	x0, 24fa0 <printf_parse@@Base+0x7b70>
   24dcc:	mov	x1, x19
   24dd0:	add	x0, x0, #0x8
   24dd4:	bl	1e034 <printf_parse@@Base+0xc04>
   24dd8:	cbz	x0, 24fa0 <printf_parse@@Base+0x7b70>
   24ddc:	str	xzr, [x29, #200]
   24de0:	tbnz	x19, #63, 24fa4 <printf_parse@@Base+0x7b74>
   24de4:	ldr	x20, [x29, #216]
   24de8:	ldr	x0, [x22, #8]
   24dec:	cmp	x0, x20
   24df0:	b.lt	24f54 <printf_parse@@Base+0x7b24>  // b.tstop
   24df4:	str	x25, [x29, #144]
   24df8:	lsl	x1, x19, #4
   24dfc:	ldr	x0, [x29, #152]
   24e00:	ldr	x2, [x0]
   24e04:	add	x3, x2, x1
   24e08:	ldrb	w0, [x3, #8]
   24e0c:	cmp	w0, #0x8
   24e10:	b.eq	24ab8 <printf_parse@@Base+0x7688>  // b.none
   24e14:	cmp	w0, #0x9
   24e18:	b.eq	24ae4 <printf_parse@@Base+0x76b4>  // b.none
   24e1c:	ldr	x0, [x22, #8]
   24e20:	cmp	x0, x20
   24e24:	b.ne	24e34 <printf_parse@@Base+0x7a04>  // b.any
   24e28:	ldr	x0, [x21, #176]
   24e2c:	cmp	x0, x19
   24e30:	b.eq	24b54 <printf_parse@@Base+0x7724>  // b.none
   24e34:	ldr	x23, [x21, #152]
   24e38:	mov	x27, x19
   24e3c:	lsl	x24, x19, #4
   24e40:	ldr	x2, [x23]
   24e44:	add	x0, x2, x24
   24e48:	ldrb	w1, [x0, #8]
   24e4c:	tbnz	w1, #3, 24c08 <printf_parse@@Base+0x77d8>
   24e50:	ldrb	w0, [x0, #10]
   24e54:	tbnz	w0, #4, 24d64 <printf_parse@@Base+0x7934>
   24e58:	cmp	w1, #0x4
   24e5c:	b.ne	24d80 <printf_parse@@Base+0x7950>  // b.any
   24e60:	ldr	x0, [x2, x24]
   24e64:	add	x0, x0, #0x1
   24e68:	lsl	x0, x0, #4
   24e6c:	add	x1, x22, x0
   24e70:	ldr	x1, [x1, #8]
   24e74:	ldr	x0, [x22, x0]
   24e78:	sub	x20, x1, x0
   24e7c:	cbz	x26, 24ed0 <printf_parse@@Base+0x7aa0>
   24e80:	cmn	x1, #0x1
   24e84:	ccmn	x0, #0x1, #0x4, ne  // ne = any
   24e88:	b.eq	24fa0 <printf_parse@@Base+0x7b70>  // b.none
   24e8c:	cbz	x20, 24ed4 <printf_parse@@Base+0x7aa4>
   24e90:	ldr	x3, [x21, #8]
   24e94:	ldr	x1, [x29, #216]
   24e98:	ldr	x2, [x21, #48]
   24e9c:	sub	x2, x2, x1
   24ea0:	cmp	x20, x2
   24ea4:	b.gt	24fa0 <printf_parse@@Base+0x7b70>
   24ea8:	mov	x2, x20
   24eac:	add	x1, x3, x1
   24eb0:	add	x0, x3, x0
   24eb4:	bl	a970 <memcmp@plt>
   24eb8:	cbnz	w0, 24fa0 <printf_parse@@Base+0x7b70>
   24ebc:	ldr	x0, [x23, #24]
   24ec0:	ldr	x19, [x0, x27, lsl #3]
   24ec4:	ldr	x0, [x29, #216]
   24ec8:	add	x20, x20, x0
   24ecc:	b	24dac <printf_parse@@Base+0x797c>
   24ed0:	cbnz	x20, 24ebc <printf_parse@@Base+0x7a8c>
   24ed4:	mov	x1, x19
   24ed8:	ldr	x0, [x29, #128]
   24edc:	bl	1f018 <printf_parse@@Base+0x1be8>
   24ee0:	and	w0, w0, #0xff
   24ee4:	cbz	w0, 24cec <printf_parse@@Base+0x78bc>
   24ee8:	ldr	x1, [x23, #40]
   24eec:	add	x0, x27, x27, lsl #1
   24ef0:	add	x0, x1, x0, lsl #3
   24ef4:	ldr	x0, [x0, #16]
   24ef8:	ldr	x19, [x0]
   24efc:	ldr	x0, [x21, #184]
   24f00:	ldr	x1, [x29, #216]
   24f04:	ldr	x0, [x0, x1, lsl #3]
   24f08:	mov	x1, x19
   24f0c:	add	x0, x0, #0x8
   24f10:	bl	1e034 <printf_parse@@Base+0xc04>
   24f14:	cbz	x0, 24d80 <printf_parse@@Base+0x7950>
   24f18:	b	24de0 <printf_parse@@Base+0x79b0>
   24f1c:	mov	x19, x23
   24f20:	b	24de0 <printf_parse@@Base+0x79b0>
   24f24:	ldr	x0, [x29, #104]
   24f28:	bl	aa50 <free@plt>
   24f2c:	b	24cfc <printf_parse@@Base+0x78cc>
   24f30:	ldr	x0, [x29, #208]
   24f34:	bl	aa50 <free@plt>
   24f38:	mov	w0, #0x1                   	// #1
   24f3c:	ldr	w1, [x29, #100]
   24f40:	cbz	w1, 24f6c <printf_parse@@Base+0x7b3c>
   24f44:	ldr	x0, [x29, #104]
   24f48:	bl	aa50 <free@plt>
   24f4c:	mov	w0, #0x1                   	// #1
   24f50:	b	24f6c <printf_parse@@Base+0x7b3c>
   24f54:	ldr	x0, [x29, #208]
   24f58:	bl	aa50 <free@plt>
   24f5c:	ldr	w0, [x29, #100]
   24f60:	cbnz	w0, 24f8c <printf_parse@@Base+0x7b5c>
   24f64:	mov	x0, x26
   24f68:	bl	22228 <printf_parse@@Base+0x4df8>
   24f6c:	mov	sp, x29
   24f70:	ldp	x19, x20, [sp, #16]
   24f74:	ldp	x21, x22, [sp, #32]
   24f78:	ldp	x23, x24, [sp, #48]
   24f7c:	ldp	x25, x26, [sp, #64]
   24f80:	ldp	x27, x28, [sp, #80]
   24f84:	ldp	x29, x30, [sp], #224
   24f88:	ret
   24f8c:	ldr	x0, [x29, #104]
   24f90:	bl	aa50 <free@plt>
   24f94:	b	24f64 <printf_parse@@Base+0x7b34>
   24f98:	mov	w0, #0xc                   	// #12
   24f9c:	b	24f6c <printf_parse@@Base+0x7b3c>
   24fa0:	mov	x19, #0xffffffffffffffff    	// #-1
   24fa4:	cmn	x19, #0x2
   24fa8:	b.eq	24cec <printf_parse@@Base+0x78bc>  // b.none
   24fac:	cbz	x26, 24f30 <printf_parse@@Base+0x7b00>
   24fb0:	ldr	x4, [x29, #128]
   24fb4:	mov	x3, x22
   24fb8:	ldr	x2, [x29, #144]
   24fbc:	ldr	x1, [x29, #112]
   24fc0:	mov	x0, x26
   24fc4:	bl	2251c <printf_parse@@Base+0x50ec>
   24fc8:	mov	x19, x0
   24fcc:	b	24de4 <printf_parse@@Base+0x79b4>
   24fd0:	stp	x29, x30, [sp, #-336]!
   24fd4:	mov	x29, sp
   24fd8:	stp	x19, x20, [sp, #16]
   24fdc:	stp	x23, x24, [sp, #48]
   24fe0:	stp	x25, x26, [sp, #64]
   24fe4:	stp	x27, x28, [sp, #80]
   24fe8:	mov	x26, x0
   24fec:	mov	x19, x1
   24ff0:	mov	x24, x2
   24ff4:	mov	x27, x3
   24ff8:	mov	x20, x4
   24ffc:	mov	x28, x5
   25000:	ldr	x23, [x1]
   25004:	ldrb	w0, [x2, #8]
   25008:	cmp	w0, #0x13
   2500c:	b.hi	25208 <printf_parse@@Base+0x7dd8>  // b.pmore
   25010:	cmp	w0, #0x11
   25014:	b.hi	25c10 <printf_parse@@Base+0x87e0>  // b.pmore
   25018:	cmp	w0, #0x8
   2501c:	b.eq	25390 <printf_parse@@Base+0x7f60>  // b.none
   25020:	b.ls	250e0 <printf_parse@@Base+0x7cb0>  // b.plast
   25024:	cmp	w0, #0xb
   25028:	b.eq	25c10 <printf_parse@@Base+0x87e0>  // b.none
   2502c:	cmp	w0, #0xc
   25030:	b.ne	251e8 <printf_parse@@Base+0x7db8>  // b.any
   25034:	ldr	w1, [x2]
   25038:	mov	w0, #0x30f                 	// #783
   2503c:	tst	w1, w0
   25040:	b.eq	2504c <printf_parse@@Base+0x7c1c>  // b.none
   25044:	ldrb	w0, [x23, #176]
   25048:	tbz	w0, #4, 25c84 <printf_parse@@Base+0x8854>
   2504c:	ldr	w0, [x24]
   25050:	sub	w1, w0, #0x100
   25054:	tst	w1, #0xfffffeff
   25058:	b.ne	25d94 <printf_parse@@Base+0x8964>  // b.any
   2505c:	cmp	w0, #0x100
   25060:	b.eq	25d58 <printf_parse@@Base+0x8928>  // b.none
   25064:	mov	w0, #0x5                   	// #5
   25068:	str	w0, [x24]
   2506c:	mov	x3, x24
   25070:	mov	x2, #0x0                   	// #0
   25074:	mov	x1, #0x0                   	// #0
   25078:	mov	x0, x23
   2507c:	bl	1ec58 <printf_parse@@Base+0x1828>
   25080:	mov	x20, x0
   25084:	mov	w0, #0xa                   	// #10
   25088:	str	w0, [x24]
   2508c:	mov	x3, x24
   25090:	mov	x2, #0x0                   	// #0
   25094:	mov	x1, #0x0                   	// #0
   25098:	mov	x0, x23
   2509c:	bl	1ec58 <printf_parse@@Base+0x1828>
   250a0:	mov	x19, x0
   250a4:	mov	w3, #0xa                   	// #10
   250a8:	mov	x2, x0
   250ac:	mov	x1, x20
   250b0:	mov	x0, x23
   250b4:	bl	1edc4 <printf_parse@@Base+0x1994>
   250b8:	mov	x25, x0
   250bc:	cmp	x20, #0x0
   250c0:	ccmp	x19, #0x0, #0x4, ne  // ne = any
   250c4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   250c8:	b.eq	25d84 <printf_parse@@Base+0x8954>  // b.none
   250cc:	mov	x2, x27
   250d0:	mov	x1, x26
   250d4:	mov	x0, x24
   250d8:	bl	20ea0 <printf_parse@@Base+0x3a70>
   250dc:	b	26228 <printf_parse@@Base+0x8df8>
   250e0:	cmp	w0, #0x4
   250e4:	b.eq	25b90 <printf_parse@@Base+0x8760>  // b.none
   250e8:	cmp	w0, #0x5
   250ec:	b.ne	25128 <printf_parse@@Base+0x7cf8>  // b.any
   250f0:	mov	x3, x2
   250f4:	mov	x2, #0x0                   	// #0
   250f8:	mov	x1, #0x0                   	// #0
   250fc:	mov	x0, x23
   25100:	bl	1ec58 <printf_parse@@Base+0x1828>
   25104:	mov	x25, x0
   25108:	cbz	x0, 25dbc <printf_parse@@Base+0x898c>
   2510c:	ldr	w0, [x23, #180]
   25110:	cmp	w0, #0x1
   25114:	b.le	2524c <printf_parse@@Base+0x7e1c>
   25118:	ldrb	w0, [x23, #176]
   2511c:	orr	w0, w0, #0x2
   25120:	strb	w0, [x23, #176]
   25124:	b	2524c <printf_parse@@Base+0x7e1c>
   25128:	mov	x25, #0x0                   	// #0
   2512c:	cmp	w0, #0x1
   25130:	b.ne	26228 <printf_parse@@Base+0x8df8>  // b.any
   25134:	mov	x3, x2
   25138:	mov	x2, #0x0                   	// #0
   2513c:	mov	x1, #0x0                   	// #0
   25140:	mov	x0, x23
   25144:	bl	1ec58 <printf_parse@@Base+0x1828>
   25148:	mov	x25, x0
   2514c:	cbz	x0, 25384 <printf_parse@@Base+0x7f54>
   25150:	ldr	w0, [x23, #180]
   25154:	mov	w20, #0x10                  	// #16
   25158:	cmp	w0, #0x1
   2515c:	b.le	2524c <printf_parse@@Base+0x7e1c>
   25160:	ldr	x0, [x26, #72]
   25164:	ldr	x1, [x26, #104]
   25168:	cmp	x1, x0
   2516c:	b.le	2524c <printf_parse@@Base+0x7e1c>
   25170:	ldr	x1, [x26, #48]
   25174:	cmp	x0, x1
   25178:	b.eq	2524c <printf_parse@@Base+0x7e1c>  // b.none
   2517c:	ldr	x1, [x26, #16]
   25180:	ldr	w0, [x1, x0, lsl #2]
   25184:	cmn	w0, #0x1
   25188:	b.ne	2524c <printf_parse@@Base+0x7e1c>  // b.any
   2518c:	mov	x2, x27
   25190:	mov	x1, x26
   25194:	mov	x0, x24
   25198:	bl	20ea0 <printf_parse@@Base+0x3a70>
   2519c:	mov	x3, x24
   251a0:	mov	x2, #0x0                   	// #0
   251a4:	mov	x1, #0x0                   	// #0
   251a8:	mov	x0, x23
   251ac:	bl	1ec58 <printf_parse@@Base+0x1828>
   251b0:	mov	x19, x0
   251b4:	mov	w3, w20
   251b8:	mov	x2, x0
   251bc:	mov	x1, x25
   251c0:	mov	x0, x23
   251c4:	bl	1edc4 <printf_parse@@Base+0x1994>
   251c8:	mov	x25, x0
   251cc:	cmp	x19, #0x0
   251d0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   251d4:	b.ne	25160 <printf_parse@@Base+0x7d30>  // b.any
   251d8:	mov	w0, #0xc                   	// #12
   251dc:	str	w0, [x28]
   251e0:	mov	x25, #0x0                   	// #0
   251e4:	b	26228 <printf_parse@@Base+0x8df8>
   251e8:	mov	x25, #0x0                   	// #0
   251ec:	cmp	w0, #0x9
   251f0:	b.ne	26228 <printf_parse@@Base+0x8df8>  // b.any
   251f4:	tbnz	w27, #17, 25228 <printf_parse@@Base+0x7df8>
   251f8:	mov	w0, #0x10                  	// #16
   251fc:	str	w0, [x28]
   25200:	mov	x25, #0x0                   	// #0
   25204:	b	26228 <printf_parse@@Base+0x8df8>
   25208:	cmp	w0, #0x21
   2520c:	b.hi	25360 <printf_parse@@Base+0x7f30>  // b.pmore
   25210:	cmp	w0, #0x1f
   25214:	b.hi	25dc8 <printf_parse@@Base+0x8998>  // b.pmore
   25218:	cmp	w0, #0x17
   2521c:	b.eq	25c0c <printf_parse@@Base+0x87dc>  // b.none
   25220:	cmp	w0, #0x18
   25224:	b.ne	252a0 <printf_parse@@Base+0x7e70>  // b.any
   25228:	mov	w0, #0x1                   	// #1
   2522c:	strb	w0, [x24, #8]
   25230:	mov	x3, x24
   25234:	mov	x2, #0x0                   	// #0
   25238:	mov	x1, #0x0                   	// #0
   2523c:	mov	x0, x23
   25240:	bl	1ec58 <printf_parse@@Base+0x1828>
   25244:	mov	x25, x0
   25248:	cbz	x0, 25c78 <printf_parse@@Base+0x8848>
   2524c:	mov	x2, x27
   25250:	mov	x1, x26
   25254:	mov	x0, x24
   25258:	bl	20ea0 <printf_parse@@Base+0x3a70>
   2525c:	ldrb	w1, [x24, #8]
   25260:	cmp	w1, #0x12
   25264:	cset	w19, eq  // eq = none
   25268:	sub	w0, w1, #0x12
   2526c:	and	w0, w0, #0xff
   25270:	cmp	w1, #0xb
   25274:	ccmp	w1, #0x17, #0x4, ne  // ne = any
   25278:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   2527c:	b.hi	26228 <printf_parse@@Base+0x8df8>  // b.pmore
   25280:	stp	x21, x22, [sp, #32]
   25284:	adrp	x0, 1e000 <printf_parse@@Base+0xbd0>
   25288:	add	x0, x0, #0x37c
   2528c:	str	x0, [sp, #120]
   25290:	adrp	x0, 21000 <printf_parse@@Base+0x3bd0>
   25294:	add	x0, x0, #0x24
   25298:	str	x0, [sp, #128]
   2529c:	b	26098 <printf_parse@@Base+0x8c68>
   252a0:	mov	x25, #0x0                   	// #0
   252a4:	cmp	w0, #0x14
   252a8:	b.ne	26228 <printf_parse@@Base+0x8df8>  // b.any
   252ac:	stp	x21, x22, [sp, #32]
   252b0:	str	xzr, [sp, #216]
   252b4:	mov	x1, #0x1                   	// #1
   252b8:	mov	x0, #0x20                  	// #32
   252bc:	bl	a770 <calloc@plt>
   252c0:	mov	x20, x0
   252c4:	mov	x1, #0x1                   	// #1
   252c8:	mov	x0, #0x50                  	// #80
   252cc:	bl	a770 <calloc@plt>
   252d0:	mov	x21, x0
   252d4:	cmp	x20, #0x0
   252d8:	cset	w0, eq  // eq = none
   252dc:	cmp	x21, #0x0
   252e0:	csinc	w0, w0, wzr, ne  // ne = any
   252e4:	str	w0, [sp, #96]
   252e8:	cbnz	w0, 25470 <printf_parse@@Base+0x8040>
   252ec:	mov	x2, x27
   252f0:	mov	x1, x26
   252f4:	mov	x0, x24
   252f8:	bl	1e1ec <printf_parse@@Base+0xdbc>
   252fc:	mov	w19, w0
   25300:	ldrb	w0, [x24, #8]
   25304:	cmp	w0, #0x2
   25308:	b.eq	2548c <printf_parse@@Base+0x805c>  // b.none
   2530c:	ldr	w1, [sp, #96]
   25310:	str	w1, [sp, #200]
   25314:	cmp	w0, #0x19
   25318:	b.eq	25494 <printf_parse@@Base+0x8064>  // b.none
   2531c:	ldrb	w0, [x24, #8]
   25320:	cmp	w0, #0x15
   25324:	b.eq	254ec <printf_parse@@Base+0x80bc>  // b.none
   25328:	str	xzr, [sp, #160]
   2532c:	mov	w6, #0x1                   	// #1
   25330:	str	xzr, [sp, #144]
   25334:	add	x0, sp, #0x110
   25338:	str	x0, [sp, #120]
   2533c:	add	x0, sp, #0xe0
   25340:	str	x0, [sp, #128]
   25344:	add	x0, sp, #0xd8
   25348:	str	x0, [sp, #176]
   2534c:	add	x0, sp, #0x100
   25350:	str	x0, [sp, #184]
   25354:	add	x0, sp, #0x130
   25358:	str	x0, [sp, #192]
   2535c:	b	258a4 <printf_parse@@Base+0x8474>
   25360:	cmp	w0, #0x23
   25364:	b.ls	25e08 <printf_parse@@Base+0x89d8>  // b.plast
   25368:	mov	x25, #0x0                   	// #0
   2536c:	cmp	w0, #0x24
   25370:	b.ne	26228 <printf_parse@@Base+0x8df8>  // b.any
   25374:	mov	w0, #0x5                   	// #5
   25378:	str	w0, [x5]
   2537c:	mov	x25, #0x0                   	// #0
   25380:	b	26228 <printf_parse@@Base+0x8df8>
   25384:	mov	w0, #0xc                   	// #12
   25388:	str	w0, [x28]
   2538c:	b	26228 <printf_parse@@Base+0x8df8>
   25390:	stp	x21, x22, [sp, #32]
   25394:	ldr	x21, [x1, #48]
   25398:	add	x0, x21, #0x1
   2539c:	str	x0, [x1, #48]
   253a0:	orr	x2, x3, #0x800000
   253a4:	mov	x1, x26
   253a8:	mov	x0, x24
   253ac:	bl	20ea0 <printf_parse@@Base+0x3a70>
   253b0:	ldrb	w1, [x24, #8]
   253b4:	mov	x0, #0x0                   	// #0
   253b8:	cmp	w1, #0x9
   253bc:	b.ne	25408 <printf_parse@@Base+0x7fd8>  // b.any
   253c0:	cmp	x21, #0x8
   253c4:	b.hi	253e0 <printf_parse@@Base+0x7fb0>  // b.pmore
   253c8:	mov	w1, #0x1                   	// #1
   253cc:	lsl	w1, w1, w21
   253d0:	sxtw	x1, w1
   253d4:	ldr	x2, [x23, #168]
   253d8:	orr	x1, x2, x1
   253dc:	str	x1, [x23, #168]
   253e0:	mov	w3, #0x11                  	// #17
   253e4:	mov	x2, #0x0                   	// #0
   253e8:	mov	x1, x0
   253ec:	mov	x0, x23
   253f0:	bl	1edc4 <printf_parse@@Base+0x1994>
   253f4:	mov	x25, x0
   253f8:	cbz	x0, 25464 <printf_parse@@Base+0x8034>
   253fc:	str	x21, [x0, #40]
   25400:	ldp	x21, x22, [sp, #32]
   25404:	b	2524c <printf_parse@@Base+0x7e1c>
   25408:	mov	x5, x28
   2540c:	add	x4, x20, #0x1
   25410:	mov	x3, x27
   25414:	mov	x2, x24
   25418:	mov	x1, x19
   2541c:	mov	x0, x26
   25420:	bl	2645c <printf_parse@@Base+0x902c>
   25424:	ldr	w1, [x28]
   25428:	cbz	w1, 25438 <printf_parse@@Base+0x8008>
   2542c:	mov	x25, #0x0                   	// #0
   25430:	ldp	x21, x22, [sp, #32]
   25434:	b	26228 <printf_parse@@Base+0x8df8>
   25438:	ldrb	w1, [x24, #8]
   2543c:	cmp	w1, #0x9
   25440:	b.eq	253c0 <printf_parse@@Base+0x7f90>  // b.none
   25444:	cbz	x0, 25458 <printf_parse@@Base+0x8028>
   25448:	mov	x2, #0x0                   	// #0
   2544c:	adrp	x1, 21000 <printf_parse@@Base+0x3bd0>
   25450:	add	x1, x1, #0x24
   25454:	bl	1ea50 <printf_parse@@Base+0x1620>
   25458:	mov	w0, #0x8                   	// #8
   2545c:	str	w0, [x28]
   25460:	b	2542c <printf_parse@@Base+0x7ffc>
   25464:	mov	w0, #0xc                   	// #12
   25468:	str	w0, [x28]
   2546c:	b	2542c <printf_parse@@Base+0x7ffc>
   25470:	mov	x0, x20
   25474:	bl	aa50 <free@plt>
   25478:	mov	x0, x21
   2547c:	bl	aa50 <free@plt>
   25480:	mov	w0, #0xc                   	// #12
   25484:	str	w0, [x28]
   25488:	b	2550c <printf_parse@@Base+0x80dc>
   2548c:	str	w0, [x28]
   25490:	b	254fc <printf_parse@@Base+0x80cc>
   25494:	ldrb	w0, [x21, #32]
   25498:	orr	w0, w0, #0x1
   2549c:	strb	w0, [x21, #32]
   254a0:	tbz	w27, #8, 254b0 <printf_parse@@Base+0x8080>
   254a4:	ldr	x0, [x20]
   254a8:	orr	x0, x0, #0x400
   254ac:	str	x0, [x20]
   254b0:	ldr	x0, [x26, #72]
   254b4:	add	x19, x0, w19, sxtw
   254b8:	str	x19, [x26, #72]
   254bc:	mov	x2, x27
   254c0:	mov	x1, x26
   254c4:	mov	x0, x24
   254c8:	bl	1e1ec <printf_parse@@Base+0xdbc>
   254cc:	mov	w19, w0
   254d0:	ldrb	w0, [x24, #8]
   254d4:	mov	w1, #0x1                   	// #1
   254d8:	str	w1, [sp, #200]
   254dc:	cmp	w0, #0x2
   254e0:	b.ne	2531c <printf_parse@@Base+0x7eec>  // b.any
   254e4:	str	w0, [x28]
   254e8:	b	254fc <printf_parse@@Base+0x80cc>
   254ec:	mov	w0, #0x1                   	// #1
   254f0:	strb	w0, [x24, #8]
   254f4:	b	25328 <printf_parse@@Base+0x7ef8>
   254f8:	str	w0, [x28]
   254fc:	mov	x0, x20
   25500:	bl	aa50 <free@plt>
   25504:	mov	x0, x21
   25508:	bl	20f9c <printf_parse@@Base+0x3b6c>
   2550c:	ldr	w0, [x28]
   25510:	cbnz	w0, 2624c <printf_parse@@Base+0x8e1c>
   25514:	mov	x25, #0x0                   	// #0
   25518:	ldp	x21, x22, [sp, #32]
   2551c:	b	2524c <printf_parse@@Base+0x7e1c>
   25520:	mov	w0, #0x7                   	// #7
   25524:	str	w0, [x28]
   25528:	b	254fc <printf_parse@@Base+0x80cc>
   2552c:	ldr	x0, [x26, #72]
   25530:	add	x0, x0, w19, sxtw
   25534:	str	x0, [x26, #72]
   25538:	mov	x2, x27
   2553c:	mov	x1, x26
   25540:	ldr	x0, [sp, #184]
   25544:	bl	1e1ec <printf_parse@@Base+0xdbc>
   25548:	mov	w3, w0
   2554c:	ldrb	w0, [sp, #264]
   25550:	cmp	w0, #0x2
   25554:	b.eq	2557c <printf_parse@@Base+0x814c>  // b.none
   25558:	cmp	w0, #0x15
   2555c:	b.ne	25588 <printf_parse@@Base+0x8158>  // b.any
   25560:	neg	w0, w19
   25564:	ldr	x1, [x26, #72]
   25568:	add	x0, x1, w0, sxtw
   2556c:	str	x0, [x26, #72]
   25570:	mov	w0, #0x1                   	// #1
   25574:	strb	w0, [x24, #8]
   25578:	b	2590c <printf_parse@@Base+0x84dc>
   2557c:	mov	w0, #0x7                   	// #7
   25580:	str	w0, [x28]
   25584:	b	254fc <printf_parse@@Base+0x80cc>
   25588:	ldr	x0, [sp, #192]
   2558c:	str	x0, [sp, #248]
   25590:	mov	w0, #0x3                   	// #3
   25594:	str	w0, [sp, #240]
   25598:	mov	w6, #0x1                   	// #1
   2559c:	mov	x5, x27
   255a0:	mov	x4, x23
   255a4:	ldr	x2, [sp, #184]
   255a8:	mov	x1, x26
   255ac:	add	x0, sp, #0xf0
   255b0:	bl	1e7ac <printf_parse@@Base+0x137c>
   255b4:	cbnz	w0, 256c8 <printf_parse@@Base+0x8298>
   255b8:	mov	x2, x27
   255bc:	mov	x1, x26
   255c0:	mov	x0, x24
   255c4:	bl	1e1ec <printf_parse@@Base+0xdbc>
   255c8:	mov	w19, w0
   255cc:	ldr	w0, [x23, #180]
   255d0:	cmp	w0, #0x2
   255d4:	csel	x0, x21, xzr, ge  // ge = tcont
   255d8:	str	x0, [sp, #136]
   255dc:	ldr	w1, [sp, #224]
   255e0:	str	w1, [sp, #168]
   255e4:	sub	w0, w1, #0x2
   255e8:	tst	w0, #0xfffffffd
   255ec:	b.eq	26270 <printf_parse@@Base+0x8e40>  // b.none
   255f0:	ldr	w0, [sp, #240]
   255f4:	str	w0, [sp, #152]
   255f8:	sub	w0, w0, #0x2
   255fc:	tst	w0, #0xfffffffd
   25600:	b.eq	26278 <printf_parse@@Base+0x8e48>  // b.none
   25604:	cmp	w1, #0x3
   25608:	cset	w0, eq  // eq = none
   2560c:	str	w0, [sp, #204]
   25610:	b.eq	256d0 <printf_parse@@Base+0x82a0>  // b.none
   25614:	ldr	w0, [sp, #152]
   25618:	cmp	w0, #0x3
   2561c:	b.eq	256f8 <printf_parse@@Base+0x82c8>  // b.none
   25620:	ldr	w0, [sp, #168]
   25624:	mov	w22, #0x0                   	// #0
   25628:	cbnz	w0, 25630 <printf_parse@@Base+0x8200>
   2562c:	ldrb	w22, [sp, #232]
   25630:	ldr	w0, [sp, #152]
   25634:	cbnz	w0, 25724 <printf_parse@@Base+0x82f4>
   25638:	ldrb	w25, [sp, #248]
   2563c:	ldr	w0, [sp, #168]
   25640:	cmp	w0, #0x0
   25644:	ldr	w0, [sp, #204]
   25648:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   2564c:	b.ne	25740 <printf_parse@@Base+0x8310>  // b.any
   25650:	ldr	w22, [sp, #232]
   25654:	ldr	w0, [sp, #152]
   25658:	cmp	w0, #0x0
   2565c:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   25660:	b.eq	25768 <printf_parse@@Base+0x8338>  // b.none
   25664:	ldr	w25, [sp, #248]
   25668:	cmn	w22, #0x1
   2566c:	ccmn	w25, #0x1, #0x4, ne  // ne = any
   25670:	b.eq	26294 <printf_parse@@Base+0x8e64>  // b.none
   25674:	tst	x27, #0x10000
   25678:	ccmp	w25, w22, #0x2, ne  // ne = any
   2567c:	b.cc	2629c <printf_parse@@Base+0x8e6c>  // b.lo, b.ul, b.last
   25680:	ldr	x0, [sp, #136]
   25684:	cbz	x0, 256bc <printf_parse@@Base+0x828c>
   25688:	ldr	x0, [x0, #64]
   2568c:	ldr	x1, [sp, #160]
   25690:	cmp	x0, x1
   25694:	b.eq	25780 <printf_parse@@Base+0x8350>  // b.none
   25698:	ldr	x3, [sp, #136]
   2569c:	ldr	x1, [x3, #64]
   256a0:	ldr	x0, [x3, #8]
   256a4:	str	w22, [x0, x1, lsl #2]
   256a8:	ldr	x1, [x3, #16]
   256ac:	ldr	x0, [x3, #64]
   256b0:	add	x2, x0, #0x1
   256b4:	str	x2, [x3, #64]
   256b8:	str	w25, [x1, x0, lsl #2]
   256bc:	mov	x0, #0x0                   	// #0
   256c0:	mov	x4, #0x1                   	// #1
   256c4:	b	25828 <printf_parse@@Base+0x83f8>
   256c8:	str	w0, [x28]
   256cc:	b	254fc <printf_parse@@Base+0x80cc>
   256d0:	ldr	x0, [sp, #232]
   256d4:	bl	a340 <strlen@plt>
   256d8:	cmp	x0, #0x1
   256dc:	b.hi	26284 <printf_parse@@Base+0x8e54>  // b.pmore
   256e0:	ldr	w0, [sp, #152]
   256e4:	cmp	w0, #0x3
   256e8:	b.eq	262d0 <printf_parse@@Base+0x8ea0>  // b.none
   256ec:	ldr	x0, [sp, #232]
   256f0:	ldrb	w22, [x0]
   256f4:	b	25630 <printf_parse@@Base+0x8200>
   256f8:	ldr	x0, [sp, #248]
   256fc:	bl	a340 <strlen@plt>
   25700:	cmp	x0, #0x1
   25704:	b.hi	2628c <printf_parse@@Base+0x8e5c>  // b.pmore
   25708:	ldr	w0, [sp, #168]
   2570c:	cbz	w0, 2562c <printf_parse@@Base+0x81fc>
   25710:	ldr	w0, [sp, #168]
   25714:	cmp	w0, #0x3
   25718:	b.eq	256ec <printf_parse@@Base+0x82bc>  // b.none
   2571c:	mov	w22, #0x0                   	// #0
   25720:	b	25630 <printf_parse@@Base+0x8200>
   25724:	mov	w25, #0x0                   	// #0
   25728:	ldr	w0, [sp, #152]
   2572c:	cmp	w0, #0x3
   25730:	b.ne	2563c <printf_parse@@Base+0x820c>  // b.any
   25734:	ldr	x0, [sp, #248]
   25738:	ldrb	w25, [x0]
   2573c:	b	2563c <printf_parse@@Base+0x820c>
   25740:	ldr	x0, [sp, #136]
   25744:	cbz	x0, 262bc <printf_parse@@Base+0x8e8c>
   25748:	mov	w0, w22
   2574c:	bl	a8d0 <btowc@plt>
   25750:	mov	w22, w0
   25754:	ldr	w0, [sp, #240]
   25758:	cmp	w0, #0x0
   2575c:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   25760:	b.ne	25664 <printf_parse@@Base+0x8234>  // b.any
   25764:	b	25770 <printf_parse@@Base+0x8340>
   25768:	ldr	x0, [sp, #136]
   2576c:	cbz	x0, 25668 <printf_parse@@Base+0x8238>
   25770:	mov	w0, w25
   25774:	bl	a8d0 <btowc@plt>
   25778:	mov	w25, w0
   2577c:	b	25668 <printf_parse@@Base+0x8238>
   25780:	lsl	x0, x1, #1
   25784:	add	x0, x0, #0x1
   25788:	str	x0, [sp, #160]
   2578c:	lsl	x0, x0, #2
   25790:	str	x0, [sp, #168]
   25794:	mov	x1, x0
   25798:	ldr	x2, [sp, #136]
   2579c:	ldr	x0, [x2, #8]
   257a0:	bl	a7e0 <realloc@plt>
   257a4:	str	x0, [sp, #152]
   257a8:	ldr	x1, [sp, #168]
   257ac:	ldr	x2, [sp, #136]
   257b0:	ldr	x0, [x2, #16]
   257b4:	bl	a7e0 <realloc@plt>
   257b8:	str	x0, [sp, #168]
   257bc:	ldr	x1, [sp, #152]
   257c0:	cmp	x1, #0x0
   257c4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   257c8:	b.eq	257e4 <printf_parse@@Base+0x83b4>  // b.none
   257cc:	ldr	x0, [sp, #136]
   257d0:	ldr	x1, [sp, #152]
   257d4:	str	x1, [x0, #8]
   257d8:	ldr	x1, [sp, #168]
   257dc:	str	x1, [x0, #16]
   257e0:	b	25698 <printf_parse@@Base+0x8268>
   257e4:	mov	x0, x1
   257e8:	bl	aa50 <free@plt>
   257ec:	ldr	x0, [sp, #168]
   257f0:	bl	aa50 <free@plt>
   257f4:	mov	w0, #0xc                   	// #12
   257f8:	b	2627c <printf_parse@@Base+0x8e4c>
   257fc:	add	x1, x0, #0x3f
   25800:	cmp	x0, #0x0
   25804:	csel	x1, x1, x0, lt  // lt = tstop
   25808:	asr	x1, x1, #6
   2580c:	lsl	x2, x4, x0
   25810:	ldr	x3, [x20, x1, lsl #3]
   25814:	orr	x2, x3, x2
   25818:	str	x2, [x20, x1, lsl #3]
   2581c:	add	x0, x0, #0x1
   25820:	cmp	x0, #0x100
   25824:	b.eq	262a4 <printf_parse@@Base+0x8e74>  // b.none
   25828:	cmp	w0, w22
   2582c:	ccmp	w25, w0, #0x0, cs  // cs = hs, nlast
   25830:	b.cc	2581c <printf_parse@@Base+0x83ec>  // b.lo, b.ul, b.last
   25834:	b	257fc <printf_parse@@Base+0x83cc>
   25838:	cmp	w0, #0x3
   2583c:	b.eq	259a4 <printf_parse@@Base+0x8574>  // b.none
   25840:	cmp	w0, #0x4
   25844:	b.ne	259d8 <printf_parse@@Base+0x85a8>  // b.any
   25848:	mov	x5, x27
   2584c:	ldr	x4, [sp, #232]
   25850:	ldr	x3, [sp, #176]
   25854:	mov	x2, x21
   25858:	mov	x1, x20
   2585c:	ldr	x0, [x26, #120]
   25860:	bl	225e0 <printf_parse@@Base+0x51b0>
   25864:	str	w0, [x28]
   25868:	cbz	w0, 2588c <printf_parse@@Base+0x845c>
   2586c:	b	254fc <printf_parse@@Base+0x80cc>
   25870:	ldrb	w1, [sp, #232]
   25874:	ubfx	x2, x1, #6, #2
   25878:	mov	x0, #0x1                   	// #1
   2587c:	lsl	x1, x0, x1
   25880:	ldr	x0, [x20, x2, lsl #3]
   25884:	orr	x0, x0, x1
   25888:	str	x0, [x20, x2, lsl #3]
   2588c:	ldrb	w0, [x24, #8]
   25890:	cmp	w0, #0x2
   25894:	b.eq	259fc <printf_parse@@Base+0x85cc>  // b.none
   25898:	cmp	w0, #0x15
   2589c:	b.eq	25a08 <printf_parse@@Base+0x85d8>  // b.none
   258a0:	ldr	w6, [sp, #96]
   258a4:	ldr	x0, [sp, #120]
   258a8:	str	x0, [sp, #232]
   258ac:	mov	w0, #0x3                   	// #3
   258b0:	str	w0, [sp, #224]
   258b4:	mov	x5, x27
   258b8:	mov	x4, x23
   258bc:	mov	w3, w19
   258c0:	mov	x2, x24
   258c4:	mov	x1, x26
   258c8:	ldr	x0, [sp, #128]
   258cc:	bl	1e7ac <printf_parse@@Base+0x137c>
   258d0:	cbnz	w0, 254f8 <printf_parse@@Base+0x80c8>
   258d4:	mov	x2, x27
   258d8:	mov	x1, x26
   258dc:	mov	x0, x24
   258e0:	bl	1e1ec <printf_parse@@Base+0xdbc>
   258e4:	mov	w19, w0
   258e8:	ldr	w0, [sp, #224]
   258ec:	sub	w0, w0, #0x2
   258f0:	tst	w0, #0xfffffffd
   258f4:	b.eq	2590c <printf_parse@@Base+0x84dc>  // b.none
   258f8:	ldrb	w0, [x24, #8]
   258fc:	cmp	w0, #0x2
   25900:	b.eq	25520 <printf_parse@@Base+0x80f0>  // b.none
   25904:	cmp	w0, #0x16
   25908:	b.eq	2552c <printf_parse@@Base+0x80fc>  // b.none
   2590c:	ldr	w0, [sp, #224]
   25910:	cmp	w0, #0x2
   25914:	b.eq	25970 <printf_parse@@Base+0x8540>  // b.none
   25918:	b.hi	25838 <printf_parse@@Base+0x8408>  // b.pmore
   2591c:	cbz	w0, 25870 <printf_parse@@Base+0x8440>
   25920:	ldr	x0, [x21, #40]
   25924:	ldr	x1, [sp, #144]
   25928:	cmp	x0, x1
   2592c:	b.eq	2594c <printf_parse@@Base+0x851c>  // b.none
   25930:	ldr	x1, [x21]
   25934:	ldr	x0, [x21, #40]
   25938:	add	x2, x0, #0x1
   2593c:	str	x2, [x21, #40]
   25940:	ldr	w2, [sp, #232]
   25944:	str	w2, [x1, x0, lsl #2]
   25948:	b	2588c <printf_parse@@Base+0x845c>
   2594c:	lsl	x0, x1, #1
   25950:	add	x0, x0, #0x1
   25954:	str	x0, [sp, #144]
   25958:	lsl	x1, x0, #2
   2595c:	ldr	x0, [x21]
   25960:	bl	a7e0 <realloc@plt>
   25964:	cbz	x0, 25b84 <printf_parse@@Base+0x8754>
   25968:	str	x0, [x21]
   2596c:	b	25930 <printf_parse@@Base+0x8500>
   25970:	ldr	x22, [sp, #232]
   25974:	mov	x0, x22
   25978:	bl	a340 <strlen@plt>
   2597c:	cmp	x0, #0x1
   25980:	b.ne	26258 <printf_parse@@Base+0x8e28>  // b.any
   25984:	ldrb	w1, [x22]
   25988:	ubfx	x2, x1, #6, #2
   2598c:	lsl	x1, x0, x1
   25990:	ldr	x0, [x20, x2, lsl #3]
   25994:	orr	x0, x0, x1
   25998:	str	x0, [x20, x2, lsl #3]
   2599c:	str	wzr, [x28]
   259a0:	b	2588c <printf_parse@@Base+0x845c>
   259a4:	ldr	x22, [sp, #232]
   259a8:	mov	x0, x22
   259ac:	bl	a340 <strlen@plt>
   259b0:	cmp	x0, #0x1
   259b4:	b.ne	26264 <printf_parse@@Base+0x8e34>  // b.any
   259b8:	ldrb	w1, [x22]
   259bc:	ubfx	x2, x1, #6, #2
   259c0:	lsl	x1, x0, x1
   259c4:	ldr	x0, [x20, x2, lsl #3]
   259c8:	orr	x0, x0, x1
   259cc:	str	x0, [x20, x2, lsl #3]
   259d0:	str	wzr, [x28]
   259d4:	b	2588c <printf_parse@@Base+0x845c>
   259d8:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   259dc:	add	x3, x3, #0xcb8
   259e0:	add	x3, x3, #0x40
   259e4:	mov	w2, #0xced                 	// #3309
   259e8:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   259ec:	add	x1, x1, #0xf48
   259f0:	adrp	x0, 2f000 <vasnprintf@@Base+0x4378>
   259f4:	add	x0, x0, #0x38
   259f8:	bl	aea0 <__assert_fail@plt>
   259fc:	mov	w0, #0x7                   	// #7
   25a00:	str	w0, [x28]
   25a04:	b	254fc <printf_parse@@Base+0x80cc>
   25a08:	ldr	x0, [x26, #72]
   25a0c:	add	x19, x0, w19, sxtw
   25a10:	str	x19, [x26, #72]
   25a14:	ldr	w0, [sp, #200]
   25a18:	cbz	w0, 25a38 <printf_parse@@Base+0x8608>
   25a1c:	mov	x0, #0x0                   	// #0
   25a20:	ldr	x1, [x20, x0, lsl #3]
   25a24:	mvn	x1, x1
   25a28:	str	x1, [x20, x0, lsl #3]
   25a2c:	add	x0, x0, #0x1
   25a30:	cmp	x0, #0x4
   25a34:	b.ne	25a20 <printf_parse@@Base+0x85f0>  // b.any
   25a38:	ldr	w2, [x23, #180]
   25a3c:	cmp	w2, #0x1
   25a40:	b.le	25a68 <printf_parse@@Base+0x8638>
   25a44:	ldr	x3, [x23, #120]
   25a48:	mov	x0, #0x0                   	// #0
   25a4c:	ldr	x1, [x20, x0]
   25a50:	ldr	x4, [x3, x0]
   25a54:	and	x1, x1, x4
   25a58:	str	x1, [x20, x0]
   25a5c:	add	x0, x0, #0x8
   25a60:	cmp	x0, #0x20
   25a64:	b.ne	25a4c <printf_parse@@Base+0x861c>  // b.any
   25a68:	ldr	x0, [x21, #40]
   25a6c:	cbnz	x0, 25aa0 <printf_parse@@Base+0x8670>
   25a70:	ldr	x0, [x21, #48]
   25a74:	cbnz	x0, 25aa0 <printf_parse@@Base+0x8670>
   25a78:	ldr	x0, [x21, #56]
   25a7c:	cbnz	x0, 25aa0 <printf_parse@@Base+0x8670>
   25a80:	ldr	x0, [x21, #64]
   25a84:	cbnz	x0, 25aa0 <printf_parse@@Base+0x8670>
   25a88:	cmp	w2, #0x1
   25a8c:	b.le	25b4c <printf_parse@@Base+0x871c>
   25a90:	ldr	x0, [x21, #72]
   25a94:	cbnz	x0, 25aa0 <printf_parse@@Base+0x8670>
   25a98:	ldrb	w0, [x21, #32]
   25a9c:	tbz	w0, #0, 25b4c <printf_parse@@Base+0x871c>
   25aa0:	ldrb	w0, [x23, #176]
   25aa4:	orr	w0, w0, #0x2
   25aa8:	strb	w0, [x23, #176]
   25aac:	mov	w0, #0x6                   	// #6
   25ab0:	strb	w0, [sp, #312]
   25ab4:	str	x21, [sp, #304]
   25ab8:	add	x3, sp, #0x130
   25abc:	mov	x2, #0x0                   	// #0
   25ac0:	mov	x1, #0x0                   	// #0
   25ac4:	mov	x0, x23
   25ac8:	bl	1ec58 <printf_parse@@Base+0x1828>
   25acc:	mov	x25, x0
   25ad0:	cbz	x0, 25b84 <printf_parse@@Base+0x8754>
   25ad4:	mov	x0, #0x0                   	// #0
   25ad8:	ldr	x2, [x20, x0, lsl #3]
   25adc:	cbnz	x2, 25afc <printf_parse@@Base+0x86cc>
   25ae0:	add	x0, x0, #0x1
   25ae4:	cmp	x0, #0x4
   25ae8:	b.ne	25ad8 <printf_parse@@Base+0x86a8>  // b.any
   25aec:	mov	x0, x20
   25af0:	bl	aa50 <free@plt>
   25af4:	ldp	x21, x22, [sp, #32]
   25af8:	b	2524c <printf_parse@@Base+0x7e1c>
   25afc:	cmp	w0, #0x3
   25b00:	b.gt	25aec <printf_parse@@Base+0x86bc>
   25b04:	mov	w0, #0x3                   	// #3
   25b08:	strb	w0, [sp, #312]
   25b0c:	str	x20, [sp, #304]
   25b10:	add	x3, sp, #0x130
   25b14:	mov	x2, #0x0                   	// #0
   25b18:	mov	x1, #0x0                   	// #0
   25b1c:	mov	x0, x23
   25b20:	bl	1ec58 <printf_parse@@Base+0x1828>
   25b24:	mov	x1, x0
   25b28:	cbz	x0, 25b84 <printf_parse@@Base+0x8754>
   25b2c:	mov	w3, #0xa                   	// #10
   25b30:	mov	x2, x25
   25b34:	mov	x0, x23
   25b38:	bl	1edc4 <printf_parse@@Base+0x1994>
   25b3c:	mov	x25, x0
   25b40:	cbz	x0, 25b84 <printf_parse@@Base+0x8754>
   25b44:	ldp	x21, x22, [sp, #32]
   25b48:	b	2524c <printf_parse@@Base+0x7e1c>
   25b4c:	mov	x0, x21
   25b50:	bl	20f9c <printf_parse@@Base+0x3b6c>
   25b54:	mov	w0, #0x3                   	// #3
   25b58:	strb	w0, [sp, #312]
   25b5c:	str	x20, [sp, #304]
   25b60:	add	x3, sp, #0x130
   25b64:	mov	x2, #0x0                   	// #0
   25b68:	mov	x1, #0x0                   	// #0
   25b6c:	mov	x0, x23
   25b70:	bl	1ec58 <printf_parse@@Base+0x1828>
   25b74:	mov	x25, x0
   25b78:	cbz	x0, 25b84 <printf_parse@@Base+0x8754>
   25b7c:	ldp	x21, x22, [sp, #32]
   25b80:	b	2524c <printf_parse@@Base+0x7e1c>
   25b84:	mov	w0, #0xc                   	// #12
   25b88:	str	w0, [x28]
   25b8c:	b	254fc <printf_parse@@Base+0x80cc>
   25b90:	ldr	x1, [x2]
   25b94:	mov	w0, #0x1                   	// #1
   25b98:	lsl	w0, w0, w1
   25b9c:	sxtw	x0, w0
   25ba0:	ldr	x1, [x23, #168]
   25ba4:	tst	x0, x1
   25ba8:	b.eq	25bf0 <printf_parse@@Base+0x87c0>  // b.none
   25bac:	ldr	x1, [x23, #160]
   25bb0:	orr	x0, x1, x0
   25bb4:	str	x0, [x23, #160]
   25bb8:	mov	x3, x2
   25bbc:	mov	x2, #0x0                   	// #0
   25bc0:	mov	x1, #0x0                   	// #0
   25bc4:	mov	x0, x23
   25bc8:	bl	1ec58 <printf_parse@@Base+0x1828>
   25bcc:	mov	x25, x0
   25bd0:	cbz	x0, 25c00 <printf_parse@@Base+0x87d0>
   25bd4:	ldr	x0, [x23, #152]
   25bd8:	add	x0, x0, #0x1
   25bdc:	str	x0, [x23, #152]
   25be0:	ldrb	w0, [x23, #176]
   25be4:	orr	w0, w0, #0x2
   25be8:	strb	w0, [x23, #176]
   25bec:	b	2524c <printf_parse@@Base+0x7e1c>
   25bf0:	mov	w0, #0x6                   	// #6
   25bf4:	str	w0, [x5]
   25bf8:	mov	x25, #0x0                   	// #0
   25bfc:	b	26228 <printf_parse@@Base+0x8df8>
   25c00:	mov	w0, #0xc                   	// #12
   25c04:	str	w0, [x28]
   25c08:	b	26228 <printf_parse@@Base+0x8df8>
   25c0c:	tbnz	w3, #24, 25c24 <printf_parse@@Base+0x87f4>
   25c10:	tbnz	w27, #5, 25c34 <printf_parse@@Base+0x8804>
   25c14:	tbnz	w27, #4, 25c44 <printf_parse@@Base+0x8814>
   25c18:	cmp	w0, #0x9
   25c1c:	b.ne	25228 <printf_parse@@Base+0x7df8>  // b.any
   25c20:	b	251f4 <printf_parse@@Base+0x7dc4>
   25c24:	mov	w0, #0xd                   	// #13
   25c28:	str	w0, [x5]
   25c2c:	mov	x25, #0x0                   	// #0
   25c30:	b	26228 <printf_parse@@Base+0x8df8>
   25c34:	mov	w0, #0xd                   	// #13
   25c38:	str	w0, [x28]
   25c3c:	mov	x25, #0x0                   	// #0
   25c40:	b	26228 <printf_parse@@Base+0x8df8>
   25c44:	mov	x2, x27
   25c48:	mov	x1, x26
   25c4c:	mov	x0, x24
   25c50:	bl	20ea0 <printf_parse@@Base+0x3a70>
   25c54:	mov	x5, x28
   25c58:	mov	x4, x20
   25c5c:	mov	x3, x27
   25c60:	mov	x2, x24
   25c64:	mov	x1, x19
   25c68:	mov	x0, x26
   25c6c:	bl	24fd0 <printf_parse@@Base+0x7ba0>
   25c70:	mov	x25, x0
   25c74:	b	26228 <printf_parse@@Base+0x8df8>
   25c78:	mov	w0, #0xc                   	// #12
   25c7c:	str	w0, [x28]
   25c80:	b	26228 <printf_parse@@Base+0x8df8>
   25c84:	ldrb	w0, [x23, #176]
   25c88:	orr	w0, w0, #0x10
   25c8c:	strb	w0, [x23, #176]
   25c90:	tbnz	w0, #3, 25cc8 <printf_parse@@Base+0x8898>
   25c94:	mov	x0, #0x3ff000000000000     	// #287948901175001088
   25c98:	str	x0, [x23, #184]
   25c9c:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
   25ca0:	movk	x0, #0x87ff, lsl #16
   25ca4:	str	x0, [x23, #192]
   25ca8:	ldrb	w0, [x23, #176]
   25cac:	tbz	w0, #2, 25cb8 <printf_parse@@Base+0x8888>
   25cb0:	stp	xzr, xzr, [x23, #200]
   25cb4:	b	2504c <printf_parse@@Base+0x7c1c>
   25cb8:	stp	x21, x22, [sp, #32]
   25cbc:	mov	w20, #0x80                  	// #128
   25cc0:	mov	w19, #0x2                   	// #2
   25cc4:	b	25cd4 <printf_parse@@Base+0x88a4>
   25cc8:	stp	x21, x22, [sp, #32]
   25ccc:	mov	w20, #0x0                   	// #0
   25cd0:	mov	w19, #0x0                   	// #0
   25cd4:	sxtw	x19, w19
   25cd8:	sbfiz	x21, x20, #1, #32
   25cdc:	bl	a9d0 <__ctype_b_loc@plt>
   25ce0:	mov	x5, x0
   25ce4:	add	x4, x23, #0xb8
   25ce8:	mov	x6, #0x1                   	// #1
   25cec:	b	25d44 <printf_parse@@Base+0x8914>
   25cf0:	add	w0, w0, #0x1
   25cf4:	add	x3, x3, #0x2
   25cf8:	cmp	w0, #0x40
   25cfc:	b.eq	25d30 <printf_parse@@Base+0x8900>  // b.none
   25d00:	add	w2, w20, w0
   25d04:	ldr	x1, [x5]
   25d08:	ldrh	w1, [x1, x3]
   25d0c:	and	w1, w1, #0x8
   25d10:	cmp	w2, #0x5f
   25d14:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   25d18:	b.eq	25cf0 <printf_parse@@Base+0x88c0>  // b.none
   25d1c:	lsl	x1, x6, x0
   25d20:	ldr	x2, [x4, x19, lsl #3]
   25d24:	orr	x1, x2, x1
   25d28:	str	x1, [x4, x19, lsl #3]
   25d2c:	b	25cf0 <printf_parse@@Base+0x88c0>
   25d30:	add	w20, w20, #0x40
   25d34:	add	x19, x19, #0x1
   25d38:	add	x21, x21, #0x80
   25d3c:	cmp	w19, #0x3
   25d40:	b.gt	25d50 <printf_parse@@Base+0x8920>
   25d44:	mov	x3, x21
   25d48:	mov	w0, #0x0                   	// #0
   25d4c:	b	25d00 <printf_parse@@Base+0x88d0>
   25d50:	ldp	x21, x22, [sp, #32]
   25d54:	b	2504c <printf_parse@@Base+0x7c1c>
   25d58:	mov	w0, #0x6                   	// #6
   25d5c:	str	w0, [x24]
   25d60:	mov	x3, x24
   25d64:	mov	x2, #0x0                   	// #0
   25d68:	mov	x1, #0x0                   	// #0
   25d6c:	mov	x0, x23
   25d70:	bl	1ec58 <printf_parse@@Base+0x1828>
   25d74:	mov	x20, x0
   25d78:	mov	w0, #0x9                   	// #9
   25d7c:	str	w0, [x24]
   25d80:	b	2508c <printf_parse@@Base+0x7c5c>
   25d84:	mov	w0, #0xc                   	// #12
   25d88:	str	w0, [x28]
   25d8c:	mov	x25, #0x0                   	// #0
   25d90:	b	26228 <printf_parse@@Base+0x8df8>
   25d94:	mov	x3, x24
   25d98:	mov	x2, #0x0                   	// #0
   25d9c:	mov	x1, #0x0                   	// #0
   25da0:	mov	x0, x23
   25da4:	bl	1ec58 <printf_parse@@Base+0x1828>
   25da8:	mov	x25, x0
   25dac:	cbnz	x0, 250cc <printf_parse@@Base+0x7c9c>
   25db0:	mov	w0, #0xc                   	// #12
   25db4:	str	w0, [x28]
   25db8:	b	26228 <printf_parse@@Base+0x8df8>
   25dbc:	mov	w0, #0xc                   	// #12
   25dc0:	str	w0, [x28]
   25dc4:	b	26228 <printf_parse@@Base+0x8df8>
   25dc8:	cmp	w0, #0x21
   25dcc:	cset	w4, eq  // eq = none
   25dd0:	adrp	x3, 2f000 <vasnprintf@@Base+0x4378>
   25dd4:	add	x3, x3, #0x40
   25dd8:	adrp	x2, 2e000 <vasnprintf@@Base+0x3378>
   25ddc:	add	x2, x2, #0xff0
   25de0:	ldr	x1, [x26, #120]
   25de4:	mov	x0, x23
   25de8:	bl	22fe8 <printf_parse@@Base+0x5bb8>
   25dec:	mov	x25, x0
   25df0:	ldr	w0, [x28]
   25df4:	cmp	w0, #0x0
   25df8:	ccmp	x25, #0x0, #0x0, ne  // ne = any
   25dfc:	b.ne	2524c <printf_parse@@Base+0x7e1c>  // b.any
   25e00:	mov	x25, #0x0                   	// #0
   25e04:	b	26228 <printf_parse@@Base+0x8df8>
   25e08:	cset	w4, eq  // eq = none
   25e0c:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   25e10:	add	x3, x3, #0xab8
   25e14:	adrp	x2, 2f000 <vasnprintf@@Base+0x4378>
   25e18:	add	x2, x2, #0x0
   25e1c:	ldr	x1, [x26, #120]
   25e20:	mov	x0, x23
   25e24:	bl	22fe8 <printf_parse@@Base+0x5bb8>
   25e28:	mov	x25, x0
   25e2c:	ldr	w0, [x28]
   25e30:	cmp	w0, #0x0
   25e34:	ccmp	x25, #0x0, #0x0, ne  // ne = any
   25e38:	b.ne	2524c <printf_parse@@Base+0x7e1c>  // b.any
   25e3c:	mov	x25, #0x0                   	// #0
   25e40:	b	26228 <printf_parse@@Base+0x8df8>
   25e44:	mov	x2, x27
   25e48:	mov	x1, x24
   25e4c:	mov	x0, x26
   25e50:	bl	20ecc <printf_parse@@Base+0x3a9c>
   25e54:	mov	x21, x0
   25e58:	cmn	x0, #0x1
   25e5c:	b.eq	25e9c <printf_parse@@Base+0x8a6c>  // b.none
   25e60:	cmn	x0, #0x2
   25e64:	b.eq	25e7c <printf_parse@@Base+0x8a4c>  // b.none
   25e68:	ldrb	w0, [x24, #8]
   25e6c:	cmp	w0, #0x18
   25e70:	b.eq	25f90 <printf_parse@@Base+0x8b60>  // b.none
   25e74:	cmp	w0, #0x1
   25e78:	b.eq	25ef4 <printf_parse@@Base+0x8ac4>  // b.none
   25e7c:	tbnz	w27, #21, 25ec8 <printf_parse@@Base+0x8a98>
   25e80:	ldrb	w0, [x24, #8]
   25e84:	cmp	w0, #0x2
   25e88:	b.ne	25f80 <printf_parse@@Base+0x8b50>  // b.any
   25e8c:	mov	w0, #0x9                   	// #9
   25e90:	str	w0, [x28]
   25e94:	mov	x0, #0x0                   	// #0
   25e98:	b	2604c <printf_parse@@Base+0x8c1c>
   25e9c:	ldrb	w0, [x24, #8]
   25ea0:	cmp	w0, #0x1
   25ea4:	b.ne	25ee4 <printf_parse@@Base+0x8ab4>  // b.any
   25ea8:	ldrb	w0, [x24]
   25eac:	mov	x22, #0x0                   	// #0
   25eb0:	cmp	w0, #0x2c
   25eb4:	b.ne	25ee4 <printf_parse@@Base+0x8ab4>  // b.any
   25eb8:	ldrb	w0, [x24]
   25ebc:	cmp	w0, #0x2c
   25ec0:	b.eq	25efc <printf_parse@@Base+0x8acc>  // b.none
   25ec4:	tbz	w27, #21, 25f80 <printf_parse@@Base+0x8b50>
   25ec8:	str	x20, [x26, #72]
   25ecc:	ldp	x0, x1, [sp, #96]
   25ed0:	stp	x0, x1, [x24]
   25ed4:	mov	w0, #0x1                   	// #1
   25ed8:	strb	w0, [x24, #8]
   25edc:	mov	x0, x25
   25ee0:	b	2604c <printf_parse@@Base+0x8c1c>
   25ee4:	mov	w0, #0xa                   	// #10
   25ee8:	str	w0, [x28]
   25eec:	mov	x0, #0x0                   	// #0
   25ef0:	b	2604c <printf_parse@@Base+0x8c1c>
   25ef4:	mov	x22, x21
   25ef8:	b	25eb8 <printf_parse@@Base+0x8a88>
   25efc:	mov	x2, x27
   25f00:	mov	x1, x24
   25f04:	mov	x0, x26
   25f08:	bl	20ecc <printf_parse@@Base+0x3a9c>
   25f0c:	mov	x21, x0
   25f10:	cmn	x22, #0x2
   25f14:	ccmn	x0, #0x2, #0x4, ne  // ne = any
   25f18:	b.eq	25e7c <printf_parse@@Base+0x8a4c>  // b.none
   25f1c:	cmp	x0, x22
   25f20:	ccmn	x0, #0x1, #0x4, lt  // lt = tstop
   25f24:	b.ne	25f98 <printf_parse@@Base+0x8b68>  // b.any
   25f28:	ldrb	w0, [x24, #8]
   25f2c:	cmp	w0, #0x18
   25f30:	b.ne	25f98 <printf_parse@@Base+0x8b68>  // b.any
   25f34:	cmn	x21, #0x1
   25f38:	b.eq	25fa8 <printf_parse@@Base+0x8b78>  // b.none
   25f3c:	mov	x0, #0x7fff                	// #32767
   25f40:	cmp	x21, x0
   25f44:	cset	x0, gt
   25f48:	cbnz	x0, 25fb8 <printf_parse@@Base+0x8b88>
   25f4c:	mov	x2, x27
   25f50:	mov	x1, x26
   25f54:	mov	x0, x24
   25f58:	bl	20ea0 <printf_parse@@Base+0x3a70>
   25f5c:	cbz	x25, 261c4 <printf_parse@@Base+0x8d94>
   25f60:	orr	x0, x21, x22
   25f64:	cbnz	x0, 25fc8 <printf_parse@@Base+0x8b98>
   25f68:	mov	x2, #0x0                   	// #0
   25f6c:	ldr	x1, [sp, #128]
   25f70:	mov	x0, x25
   25f74:	bl	1ea50 <printf_parse@@Base+0x1620>
   25f78:	mov	x0, #0x0                   	// #0
   25f7c:	b	2604c <printf_parse@@Base+0x8c1c>
   25f80:	mov	w0, #0xa                   	// #10
   25f84:	str	w0, [x28]
   25f88:	mov	x0, #0x0                   	// #0
   25f8c:	b	2604c <printf_parse@@Base+0x8c1c>
   25f90:	mov	x22, x21
   25f94:	b	25f28 <printf_parse@@Base+0x8af8>
   25f98:	mov	w0, #0xa                   	// #10
   25f9c:	str	w0, [x28]
   25fa0:	mov	x0, #0x0                   	// #0
   25fa4:	b	2604c <printf_parse@@Base+0x8c1c>
   25fa8:	mov	x0, #0x7fff                	// #32767
   25fac:	cmp	x22, x0
   25fb0:	cset	x0, gt
   25fb4:	b	25f48 <printf_parse@@Base+0x8b18>
   25fb8:	mov	w0, #0xf                   	// #15
   25fbc:	str	w0, [x28]
   25fc0:	mov	x0, #0x0                   	// #0
   25fc4:	b	2604c <printf_parse@@Base+0x8c1c>
   25fc8:	cmp	x22, #0x0
   25fcc:	b.le	261a4 <printf_parse@@Base+0x8d74>
   25fd0:	cmp	x22, #0x1
   25fd4:	b.le	26190 <printf_parse@@Base+0x8d60>
   25fd8:	str	x25, [sp, #96]
   25fdc:	mov	x19, x25
   25fe0:	mov	x20, #0x2                   	// #2
   25fe4:	mov	x1, x23
   25fe8:	mov	x0, x19
   25fec:	bl	1ed14 <printf_parse@@Base+0x18e4>
   25ff0:	mov	x19, x0
   25ff4:	mov	w3, #0x10                  	// #16
   25ff8:	mov	x2, x0
   25ffc:	ldr	x1, [sp, #96]
   26000:	mov	x0, x23
   26004:	bl	1edc4 <printf_parse@@Base+0x1994>
   26008:	str	x0, [sp, #96]
   2600c:	cmp	x19, #0x0
   26010:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   26014:	b.eq	26040 <printf_parse@@Base+0x8c10>  // b.none
   26018:	add	x20, x20, #0x1
   2601c:	cmp	x20, x22
   26020:	b.le	25fe4 <printf_parse@@Base+0x8bb4>
   26024:	cmp	x21, x22
   26028:	b.eq	262b4 <printf_parse@@Base+0x8e84>  // b.none
   2602c:	mov	x1, x23
   26030:	mov	x0, x19
   26034:	bl	1ed14 <printf_parse@@Base+0x18e4>
   26038:	mov	x19, x0
   2603c:	cbnz	x0, 260dc <printf_parse@@Base+0x8cac>
   26040:	mov	w0, #0xc                   	// #12
   26044:	str	w0, [x28]
   26048:	mov	x0, #0x0                   	// #0
   2604c:	ldr	w1, [x28]
   26050:	cmp	w1, #0x0
   26054:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   26058:	b.eq	261dc <printf_parse@@Base+0x8dac>  // b.none
   2605c:	mov	x25, x0
   26060:	tbz	w27, #24, 26074 <printf_parse@@Base+0x8c44>
   26064:	ldrb	w0, [x24, #8]
   26068:	cmp	w0, #0xb
   2606c:	ccmp	w0, #0x17, #0x4, ne  // ne = any
   26070:	b.eq	26200 <printf_parse@@Base+0x8dd0>  // b.none
   26074:	ldrb	w1, [x24, #8]
   26078:	cmp	w1, #0x12
   2607c:	cset	w19, eq  // eq = none
   26080:	sub	w0, w1, #0x12
   26084:	and	w0, w0, #0xff
   26088:	cmp	w1, #0x17
   2608c:	ccmp	w1, #0xb, #0x4, ne  // ne = any
   26090:	ccmp	w0, #0x1, #0x0, ne  // ne = any
   26094:	b.hi	26244 <printf_parse@@Base+0x8e14>  // b.pmore
   26098:	ldr	x20, [x26, #72]
   2609c:	ldp	x2, x3, [x24]
   260a0:	stp	x2, x3, [sp, #96]
   260a4:	cmp	w1, #0x17
   260a8:	b.eq	25e44 <printf_parse@@Base+0x8a14>  // b.none
   260ac:	and	x22, x19, #0xff
   260b0:	mov	x21, #0xffffffffffffffff    	// #-1
   260b4:	cmp	w1, #0x13
   260b8:	cneg	x21, x21, eq  // eq = none
   260bc:	mov	x2, x27
   260c0:	mov	x1, x26
   260c4:	mov	x0, x24
   260c8:	bl	20ea0 <printf_parse@@Base+0x3a70>
   260cc:	cbz	x25, 261d4 <printf_parse@@Base+0x8da4>
   260d0:	cbnz	w19, 26190 <printf_parse@@Base+0x8d60>
   260d4:	mov	x19, x25
   260d8:	str	xzr, [sp, #96]
   260dc:	ldrb	w0, [x19, #48]
   260e0:	cmp	w0, #0x11
   260e4:	b.eq	261b0 <printf_parse@@Base+0x8d80>  // b.none
   260e8:	cmn	x21, #0x1
   260ec:	cset	w3, eq  // eq = none
   260f0:	add	w3, w3, #0xa
   260f4:	mov	x2, #0x0                   	// #0
   260f8:	mov	x1, x19
   260fc:	mov	x0, x23
   26100:	bl	1edc4 <printf_parse@@Base+0x1994>
   26104:	mov	x20, x0
   26108:	cbz	x0, 26040 <printf_parse@@Base+0x8c10>
   2610c:	add	x22, x22, #0x2
   26110:	cmp	x21, x22
   26114:	b.lt	26170 <printf_parse@@Base+0x8d40>  // b.tstop
   26118:	mov	x1, x23
   2611c:	mov	x0, x19
   26120:	bl	1ed14 <printf_parse@@Base+0x18e4>
   26124:	mov	x19, x0
   26128:	mov	w3, #0x10                  	// #16
   2612c:	mov	x2, x0
   26130:	mov	x1, x20
   26134:	mov	x0, x23
   26138:	bl	1edc4 <printf_parse@@Base+0x1994>
   2613c:	mov	x1, x0
   26140:	cmp	x19, #0x0
   26144:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   26148:	b.eq	26040 <printf_parse@@Base+0x8c10>  // b.none
   2614c:	mov	w3, #0xa                   	// #10
   26150:	mov	x2, #0x0                   	// #0
   26154:	mov	x0, x23
   26158:	bl	1edc4 <printf_parse@@Base+0x1994>
   2615c:	mov	x20, x0
   26160:	cbz	x0, 26040 <printf_parse@@Base+0x8c10>
   26164:	add	x22, x22, #0x1
   26168:	cmp	x21, x22
   2616c:	b.ge	26118 <printf_parse@@Base+0x8ce8>  // b.tcont
   26170:	ldr	x0, [sp, #96]
   26174:	cbz	x0, 262ac <printf_parse@@Base+0x8e7c>
   26178:	mov	w3, #0x10                  	// #16
   2617c:	mov	x2, x20
   26180:	ldr	x1, [sp, #96]
   26184:	mov	x0, x23
   26188:	bl	1edc4 <printf_parse@@Base+0x1994>
   2618c:	b	2604c <printf_parse@@Base+0x8c1c>
   26190:	cmp	x22, x21
   26194:	b.eq	261cc <printf_parse@@Base+0x8d9c>  // b.none
   26198:	mov	x19, x25
   2619c:	str	x25, [sp, #96]
   261a0:	b	2602c <printf_parse@@Base+0x8bfc>
   261a4:	mov	x19, x25
   261a8:	str	xzr, [sp, #96]
   261ac:	b	260dc <printf_parse@@Base+0x8cac>
   261b0:	ldr	x2, [x19, #40]
   261b4:	ldr	x1, [sp, #120]
   261b8:	mov	x0, x19
   261bc:	bl	1ea50 <printf_parse@@Base+0x1620>
   261c0:	b	260e8 <printf_parse@@Base+0x8cb8>
   261c4:	mov	x0, x25
   261c8:	b	2604c <printf_parse@@Base+0x8c1c>
   261cc:	mov	x0, x25
   261d0:	b	2604c <printf_parse@@Base+0x8c1c>
   261d4:	mov	x0, x25
   261d8:	b	2604c <printf_parse@@Base+0x8c1c>
   261dc:	cbz	x25, 262e8 <printf_parse@@Base+0x8eb8>
   261e0:	mov	x2, #0x0                   	// #0
   261e4:	adrp	x1, 21000 <printf_parse@@Base+0x3bd0>
   261e8:	add	x1, x1, #0x24
   261ec:	mov	x0, x25
   261f0:	bl	1ea50 <printf_parse@@Base+0x1620>
   261f4:	mov	x25, #0x0                   	// #0
   261f8:	ldp	x21, x22, [sp, #32]
   261fc:	b	26228 <printf_parse@@Base+0x8df8>
   26200:	cbz	x25, 26218 <printf_parse@@Base+0x8de8>
   26204:	mov	x2, #0x0                   	// #0
   26208:	adrp	x1, 21000 <printf_parse@@Base+0x3bd0>
   2620c:	add	x1, x1, #0x24
   26210:	mov	x0, x25
   26214:	bl	1ea50 <printf_parse@@Base+0x1620>
   26218:	mov	w0, #0xd                   	// #13
   2621c:	str	w0, [x28]
   26220:	mov	x25, #0x0                   	// #0
   26224:	ldp	x21, x22, [sp, #32]
   26228:	mov	x0, x25
   2622c:	ldp	x19, x20, [sp, #16]
   26230:	ldp	x23, x24, [sp, #48]
   26234:	ldp	x25, x26, [sp, #64]
   26238:	ldp	x27, x28, [sp, #80]
   2623c:	ldp	x29, x30, [sp], #336
   26240:	ret
   26244:	ldp	x21, x22, [sp, #32]
   26248:	b	26228 <printf_parse@@Base+0x8df8>
   2624c:	mov	x25, #0x0                   	// #0
   26250:	ldp	x21, x22, [sp, #32]
   26254:	b	26228 <printf_parse@@Base+0x8df8>
   26258:	mov	w0, #0x3                   	// #3
   2625c:	str	w0, [x28]
   26260:	b	254fc <printf_parse@@Base+0x80cc>
   26264:	mov	w0, #0x3                   	// #3
   26268:	str	w0, [x28]
   2626c:	b	254fc <printf_parse@@Base+0x80cc>
   26270:	mov	w0, #0xb                   	// #11
   26274:	b	2627c <printf_parse@@Base+0x8e4c>
   26278:	mov	w0, #0xb                   	// #11
   2627c:	str	w0, [x28]
   26280:	b	254fc <printf_parse@@Base+0x80cc>
   26284:	mov	w0, #0x3                   	// #3
   26288:	b	2627c <printf_parse@@Base+0x8e4c>
   2628c:	mov	w0, #0x3                   	// #3
   26290:	b	2627c <printf_parse@@Base+0x8e4c>
   26294:	mov	w0, #0x3                   	// #3
   26298:	b	2627c <printf_parse@@Base+0x8e4c>
   2629c:	mov	w0, #0xb                   	// #11
   262a0:	b	2627c <printf_parse@@Base+0x8e4c>
   262a4:	str	wzr, [x28]
   262a8:	b	2588c <printf_parse@@Base+0x845c>
   262ac:	mov	x25, x20
   262b0:	b	26060 <printf_parse@@Base+0x8c30>
   262b4:	ldr	x25, [sp, #96]
   262b8:	b	26060 <printf_parse@@Base+0x8c30>
   262bc:	ldr	w0, [sp, #152]
   262c0:	cmp	w0, #0x0
   262c4:	ccmp	w0, #0x3, #0x4, ne  // ne = any
   262c8:	b.ne	25664 <printf_parse@@Base+0x8234>  // b.any
   262cc:	b	25668 <printf_parse@@Base+0x8238>
   262d0:	ldr	x0, [sp, #248]
   262d4:	bl	a340 <strlen@plt>
   262d8:	cmp	x0, #0x1
   262dc:	b.ls	256ec <printf_parse@@Base+0x82bc>  // b.plast
   262e0:	mov	w0, #0x3                   	// #3
   262e4:	b	2627c <printf_parse@@Base+0x8e4c>
   262e8:	ldp	x21, x22, [sp, #32]
   262ec:	b	26228 <printf_parse@@Base+0x8df8>
   262f0:	stp	x29, x30, [sp, #-96]!
   262f4:	mov	x29, sp
   262f8:	stp	x19, x20, [sp, #16]
   262fc:	stp	x21, x22, [sp, #32]
   26300:	stp	x23, x24, [sp, #48]
   26304:	stp	x25, x26, [sp, #64]
   26308:	stp	x27, x28, [sp, #80]
   2630c:	mov	x26, x0
   26310:	mov	x25, x1
   26314:	mov	x22, x2
   26318:	mov	x27, x3
   2631c:	mov	x23, x4
   26320:	mov	x21, x5
   26324:	ldr	x28, [x1]
   26328:	bl	24fd0 <printf_parse@@Base+0x7ba0>
   2632c:	mov	x20, x0
   26330:	ldr	w0, [x21]
   26334:	cmp	w0, #0x0
   26338:	ccmp	x20, #0x0, #0x0, ne  // ne = any
   2633c:	b.eq	26454 <printf_parse@@Base+0x9024>  // b.none
   26340:	ldrb	w1, [x22, #8]
   26344:	and	w0, w1, #0xfffffff7
   26348:	and	w0, w0, #0xff
   2634c:	cmp	w0, #0x2
   26350:	b.ne	263ac <printf_parse@@Base+0x8f7c>  // b.any
   26354:	b	26434 <printf_parse@@Base+0x9004>
   26358:	cbz	x20, 26434 <printf_parse@@Base+0x9004>
   2635c:	mov	x2, #0x0                   	// #0
   26360:	adrp	x1, 21000 <printf_parse@@Base+0x3bd0>
   26364:	add	x1, x1, #0x24
   26368:	mov	x0, x20
   2636c:	bl	1ea50 <printf_parse@@Base+0x1620>
   26370:	mov	x20, #0x0                   	// #0
   26374:	b	26434 <printf_parse@@Base+0x9004>
   26378:	mov	w3, #0x10                  	// #16
   2637c:	mov	x2, x19
   26380:	mov	x1, x20
   26384:	mov	x0, x28
   26388:	bl	1edc4 <printf_parse@@Base+0x1994>
   2638c:	mov	x24, x0
   26390:	cbz	x0, 26400 <printf_parse@@Base+0x8fd0>
   26394:	mov	x20, x0
   26398:	ldrb	w1, [x22, #8]
   2639c:	and	w0, w1, #0xfffffff7
   263a0:	and	w0, w0, #0xff
   263a4:	cmp	w0, #0x2
   263a8:	b.eq	26434 <printf_parse@@Base+0x9004>  // b.none
   263ac:	cmp	x23, #0x0
   263b0:	ccmp	w1, #0x9, #0x0, ne  // ne = any
   263b4:	b.eq	26434 <printf_parse@@Base+0x9004>  // b.none
   263b8:	mov	x5, x21
   263bc:	mov	x4, x23
   263c0:	mov	x3, x27
   263c4:	mov	x2, x22
   263c8:	mov	x1, x25
   263cc:	mov	x0, x26
   263d0:	bl	24fd0 <printf_parse@@Base+0x7ba0>
   263d4:	mov	x19, x0
   263d8:	ldr	w0, [x21]
   263dc:	cmp	w0, #0x0
   263e0:	ccmp	x19, #0x0, #0x0, ne  // ne = any
   263e4:	b.eq	26358 <printf_parse@@Base+0x8f28>  // b.none
   263e8:	cmp	x20, #0x0
   263ec:	ccmp	x19, #0x0, #0x4, ne  // ne = any
   263f0:	b.ne	26378 <printf_parse@@Base+0x8f48>  // b.any
   263f4:	cmp	x20, #0x0
   263f8:	csel	x20, x20, x19, ne  // ne = any
   263fc:	b	26398 <printf_parse@@Base+0x8f68>
   26400:	adrp	x22, 21000 <printf_parse@@Base+0x3bd0>
   26404:	add	x22, x22, #0x24
   26408:	mov	x2, #0x0                   	// #0
   2640c:	mov	x1, x22
   26410:	mov	x0, x19
   26414:	bl	1ea50 <printf_parse@@Base+0x1620>
   26418:	mov	x2, #0x0                   	// #0
   2641c:	mov	x1, x22
   26420:	mov	x0, x20
   26424:	bl	1ea50 <printf_parse@@Base+0x1620>
   26428:	mov	w0, #0xc                   	// #12
   2642c:	str	w0, [x21]
   26430:	mov	x20, x24
   26434:	mov	x0, x20
   26438:	ldp	x19, x20, [sp, #16]
   2643c:	ldp	x21, x22, [sp, #32]
   26440:	ldp	x23, x24, [sp, #48]
   26444:	ldp	x25, x26, [sp, #64]
   26448:	ldp	x27, x28, [sp, #80]
   2644c:	ldp	x29, x30, [sp], #96
   26450:	ret
   26454:	mov	x20, #0x0                   	// #0
   26458:	b	26434 <printf_parse@@Base+0x9004>
   2645c:	stp	x29, x30, [sp, #-112]!
   26460:	mov	x29, sp
   26464:	stp	x19, x20, [sp, #16]
   26468:	stp	x21, x22, [sp, #32]
   2646c:	stp	x23, x24, [sp, #48]
   26470:	stp	x25, x26, [sp, #64]
   26474:	stp	x27, x28, [sp, #80]
   26478:	mov	x22, x0
   2647c:	str	x1, [sp, #96]
   26480:	mov	x20, x2
   26484:	mov	x25, x3
   26488:	str	x3, [sp, #104]
   2648c:	mov	x24, x4
   26490:	mov	x23, x5
   26494:	ldr	x21, [x1]
   26498:	ldr	x28, [x21, #168]
   2649c:	bl	262f0 <printf_parse@@Base+0x8ec0>
   264a0:	mov	x19, x0
   264a4:	ldr	w0, [x23]
   264a8:	cmp	w0, #0x0
   264ac:	ccmp	x19, #0x0, #0x0, ne  // ne = any
   264b0:	b.eq	265b0 <printf_parse@@Base+0x9180>  // b.none
   264b4:	orr	x25, x25, #0x800000
   264b8:	mov	w26, #0xa                   	// #10
   264bc:	b	264fc <printf_parse@@Base+0x90cc>
   264c0:	cbz	x19, 26590 <printf_parse@@Base+0x9160>
   264c4:	mov	x2, #0x0                   	// #0
   264c8:	adrp	x1, 21000 <printf_parse@@Base+0x3bd0>
   264cc:	add	x1, x1, #0x24
   264d0:	mov	x0, x19
   264d4:	bl	1ea50 <printf_parse@@Base+0x1620>
   264d8:	mov	x19, #0x0                   	// #0
   264dc:	b	26590 <printf_parse@@Base+0x9160>
   264e0:	mov	x2, #0x0                   	// #0
   264e4:	mov	w3, w26
   264e8:	mov	x1, x19
   264ec:	mov	x0, x21
   264f0:	bl	1edc4 <printf_parse@@Base+0x1994>
   264f4:	mov	x19, x0
   264f8:	cbz	x0, 26588 <printf_parse@@Base+0x9158>
   264fc:	ldrb	w0, [x20, #8]
   26500:	cmp	w0, #0xa
   26504:	b.ne	26590 <printf_parse@@Base+0x9160>  // b.any
   26508:	mov	x2, x25
   2650c:	mov	x1, x22
   26510:	mov	x0, x20
   26514:	bl	20ea0 <printf_parse@@Base+0x3a70>
   26518:	ldrb	w1, [x20, #8]
   2651c:	and	w0, w1, #0xfffffff7
   26520:	and	w0, w0, #0xff
   26524:	cmp	w0, #0x2
   26528:	b.eq	264e0 <printf_parse@@Base+0x90b0>  // b.none
   2652c:	cmp	x24, #0x0
   26530:	ccmp	w1, #0x9, #0x0, ne  // ne = any
   26534:	b.eq	26580 <printf_parse@@Base+0x9150>  // b.none
   26538:	ldr	x27, [x21, #168]
   2653c:	str	x28, [x21, #168]
   26540:	mov	x5, x23
   26544:	mov	x4, x24
   26548:	ldr	x3, [sp, #104]
   2654c:	mov	x2, x20
   26550:	ldr	x1, [sp, #96]
   26554:	mov	x0, x22
   26558:	bl	262f0 <printf_parse@@Base+0x8ec0>
   2655c:	mov	x2, x0
   26560:	ldr	w0, [x23]
   26564:	cmp	w0, #0x0
   26568:	ccmp	x2, #0x0, #0x0, ne  // ne = any
   2656c:	b.eq	264c0 <printf_parse@@Base+0x9090>  // b.none
   26570:	ldr	x0, [x21, #168]
   26574:	orr	x27, x0, x27
   26578:	str	x27, [x21, #168]
   2657c:	b	264e4 <printf_parse@@Base+0x90b4>
   26580:	mov	x2, #0x0                   	// #0
   26584:	b	264e4 <printf_parse@@Base+0x90b4>
   26588:	mov	w0, #0xc                   	// #12
   2658c:	str	w0, [x23]
   26590:	mov	x0, x19
   26594:	ldp	x19, x20, [sp, #16]
   26598:	ldp	x21, x22, [sp, #32]
   2659c:	ldp	x23, x24, [sp, #48]
   265a0:	ldp	x25, x26, [sp, #64]
   265a4:	ldp	x27, x28, [sp, #80]
   265a8:	ldp	x29, x30, [sp], #112
   265ac:	ret
   265b0:	mov	x19, #0x0                   	// #0
   265b4:	b	26590 <printf_parse@@Base+0x9160>
   265b8:	stp	x29, x30, [sp, #-80]!
   265bc:	mov	x29, sp
   265c0:	stp	x19, x20, [sp, #16]
   265c4:	stp	x21, x22, [sp, #32]
   265c8:	stp	x23, x24, [sp, #48]
   265cc:	mov	x23, x0
   265d0:	mov	x22, x1
   265d4:	ldr	x1, [x2, #8]
   265d8:	cbz	x1, 26638 <printf_parse@@Base+0x9208>
   265dc:	stp	x25, x26, [sp, #64]
   265e0:	mov	x25, x2
   265e4:	mov	x21, x1
   265e8:	cmp	x1, #0x0
   265ec:	b.le	26608 <printf_parse@@Base+0x91d8>
   265f0:	ldr	x3, [x2, #16]
   265f4:	add	x1, x3, x1, lsl #3
   265f8:	ldr	x0, [x3], #8
   265fc:	add	x21, x21, x0
   26600:	cmp	x3, x1
   26604:	b.ne	265f8 <printf_parse@@Base+0x91c8>  // b.any
   26608:	ldr	x0, [x22, #136]
   2660c:	and	x0, x21, x0
   26610:	add	x0, x0, x0, lsl #1
   26614:	lsl	x0, x0, #3
   26618:	ldr	x1, [x22, #64]
   2661c:	add	x2, x1, x0
   26620:	ldr	x24, [x1, x0]
   26624:	cmp	x24, #0x0
   26628:	b.le	2667c <printf_parse@@Base+0x924c>
   2662c:	ldr	x26, [x2, #16]
   26630:	mov	x20, #0x0                   	// #0
   26634:	b	26650 <printf_parse@@Base+0x9220>
   26638:	str	wzr, [x0]
   2663c:	mov	x19, #0x0                   	// #0
   26640:	b	267b0 <printf_parse@@Base+0x9380>
   26644:	add	x20, x20, #0x1
   26648:	cmp	x24, x20
   2664c:	b.eq	2667c <printf_parse@@Base+0x924c>  // b.none
   26650:	ldr	x19, [x26, x20, lsl #3]
   26654:	ldr	x0, [x19]
   26658:	cmp	x21, x0
   2665c:	b.ne	26644 <printf_parse@@Base+0x9214>  // b.any
   26660:	mov	x1, x25
   26664:	add	x0, x19, #0x8
   26668:	bl	1dfd8 <printf_parse@@Base+0xba8>
   2666c:	and	w0, w0, #0xff
   26670:	cbz	w0, 26644 <printf_parse@@Base+0x9214>
   26674:	ldp	x25, x26, [sp, #64]
   26678:	b	267b0 <printf_parse@@Base+0x9380>
   2667c:	mov	x1, #0x1                   	// #1
   26680:	mov	x0, #0x70                  	// #112
   26684:	bl	a770 <calloc@plt>
   26688:	mov	x19, x0
   2668c:	cbz	x0, 266cc <printf_parse@@Base+0x929c>
   26690:	add	x20, x0, #0x8
   26694:	mov	x1, x25
   26698:	mov	x0, x20
   2669c:	bl	200dc <printf_parse@@Base+0x2cac>
   266a0:	cbnz	w0, 266c4 <printf_parse@@Base+0x9294>
   266a4:	str	x20, [x19, #80]
   266a8:	ldr	x6, [x25, #8]
   266ac:	cmp	x6, #0x0
   266b0:	b.le	26798 <printf_parse@@Base+0x9368>
   266b4:	ldr	x7, [x22]
   266b8:	ldr	x0, [x25, #16]
   266bc:	add	x6, x0, x6, lsl #3
   266c0:	b	26730 <printf_parse@@Base+0x9300>
   266c4:	mov	x0, x19
   266c8:	bl	aa50 <free@plt>
   266cc:	mov	w0, #0xc                   	// #12
   266d0:	str	w0, [x23]
   266d4:	mov	x19, #0x0                   	// #0
   266d8:	ldp	x25, x26, [sp, #64]
   266dc:	b	267b0 <printf_parse@@Base+0x9380>
   266e0:	ldr	w1, [x2, #8]
   266e4:	tst	w1, #0x3ff00
   266e8:	b.eq	26724 <printf_parse@@Base+0x92f4>  // b.none
   266ec:	ldrb	w1, [x19, #104]
   266f0:	ubfx	x3, x1, #5, #1
   266f4:	ldrb	w4, [x2, #10]
   266f8:	ubfx	x4, x4, #4, #1
   266fc:	orr	w3, w3, w4
   26700:	bfi	w1, w3, #5, #1
   26704:	strb	w1, [x19, #104]
   26708:	ldr	w1, [x2, #8]
   2670c:	tst	w1, #0x3ff00
   26710:	b.eq	26724 <printf_parse@@Base+0x92f4>  // b.none
   26714:	b	26788 <printf_parse@@Base+0x9358>
   26718:	and	x1, x1, #0xff
   2671c:	orr	w1, w1, #0x10
   26720:	strb	w1, [x19, #104]
   26724:	add	x0, x0, #0x8
   26728:	cmp	x6, x0
   2672c:	b.eq	26798 <printf_parse@@Base+0x9368>  // b.none
   26730:	ldr	x2, [x0]
   26734:	add	x2, x7, x2, lsl #4
   26738:	ldrb	w3, [x2, #8]
   2673c:	cmp	w3, #0x1
   26740:	b.eq	266e0 <printf_parse@@Base+0x92b0>  // b.none
   26744:	ldrb	w1, [x19, #104]
   26748:	ubfx	x4, x1, #5, #1
   2674c:	ldrb	w5, [x2, #10]
   26750:	ubfx	x5, x5, #4, #1
   26754:	orr	w4, w4, w5
   26758:	bfi	w1, w4, #5, #1
   2675c:	strb	w1, [x19, #104]
   26760:	cmp	w3, #0x2
   26764:	b.eq	26718 <printf_parse@@Base+0x92e8>  // b.none
   26768:	cmp	w3, #0x4
   2676c:	b.ne	26780 <printf_parse@@Base+0x9350>  // b.any
   26770:	ldrb	w1, [x19, #104]
   26774:	orr	w1, w1, #0x40
   26778:	strb	w1, [x19, #104]
   2677c:	b	26724 <printf_parse@@Base+0x92f4>
   26780:	cmp	w3, #0xc
   26784:	b.ne	26708 <printf_parse@@Base+0x92d8>  // b.any
   26788:	ldrb	w1, [x19, #104]
   2678c:	orr	w1, w1, #0xffffff80
   26790:	strb	w1, [x19, #104]
   26794:	b	26724 <printf_parse@@Base+0x92f4>
   26798:	mov	x2, x21
   2679c:	mov	x1, x19
   267a0:	mov	x0, x22
   267a4:	bl	1f290 <printf_parse@@Base+0x1e60>
   267a8:	cbnz	w0, 267c8 <printf_parse@@Base+0x9398>
   267ac:	ldp	x25, x26, [sp, #64]
   267b0:	mov	x0, x19
   267b4:	ldp	x19, x20, [sp, #16]
   267b8:	ldp	x21, x22, [sp, #32]
   267bc:	ldp	x23, x24, [sp, #48]
   267c0:	ldp	x29, x30, [sp], #80
   267c4:	ret
   267c8:	mov	x0, x19
   267cc:	bl	218e4 <printf_parse@@Base+0x44b4>
   267d0:	b	266cc <printf_parse@@Base+0x929c>
   267d4:	stp	x29, x30, [sp, #-160]!
   267d8:	mov	x29, sp
   267dc:	stp	x21, x22, [sp, #32]
   267e0:	stp	x23, x24, [sp, #48]
   267e4:	mov	x24, x0
   267e8:	mov	x23, x1
   267ec:	mov	x22, x2
   267f0:	str	x3, [sp, #112]
   267f4:	str	w4, [sp, #124]
   267f8:	mov	x1, x2
   267fc:	bl	1e62c <printf_parse@@Base+0x11fc>
   26800:	cmn	x0, #0x1
   26804:	b.eq	26a04 <printf_parse@@Base+0x95d4>  // b.none
   26808:	stp	x19, x20, [sp, #16]
   2680c:	stp	x25, x26, [sp, #64]
   26810:	stp	x27, x28, [sp, #80]
   26814:	ldr	x25, [x24, #152]
   26818:	add	x0, x0, x0, lsl #2
   2681c:	lsl	x0, x0, #3
   26820:	str	x0, [sp, #104]
   26824:	add	x26, sp, #0x80
   26828:	add	x28, sp, #0x9c
   2682c:	b	268a4 <printf_parse@@Base+0x9474>
   26830:	ldr	x0, [x25, #40]
   26834:	add	x21, x21, x21, lsl #1
   26838:	add	x21, x0, x21, lsl #3
   2683c:	ldr	x0, [x21, #16]
   26840:	ldr	x20, [x0]
   26844:	mov	x1, x20
   26848:	mov	x0, x23
   2684c:	bl	1e034 <printf_parse@@Base+0xc04>
   26850:	cbnz	x0, 26910 <printf_parse@@Base+0x94e0>
   26854:	mov	x1, x20
   26858:	mov	x0, x26
   2685c:	bl	1efc4 <printf_parse@@Base+0x1b94>
   26860:	str	w0, [sp, #156]
   26864:	ldr	w3, [sp, #124]
   26868:	ldr	x2, [sp, #112]
   2686c:	mov	x1, x26
   26870:	mov	x0, x25
   26874:	bl	21e34 <printf_parse@@Base+0x4a04>
   26878:	mov	w19, w0
   2687c:	mov	x1, x26
   26880:	mov	x0, x23
   26884:	bl	1ff2c <printf_parse@@Base+0x2afc>
   26888:	mov	w20, w0
   2688c:	ldr	x0, [sp, #144]
   26890:	bl	aa50 <free@plt>
   26894:	ldr	w0, [sp, #156]
   26898:	orr	w1, w19, w20
   2689c:	orr	w1, w1, w0
   268a0:	cbnz	w1, 268b4 <printf_parse@@Base+0x9484>
   268a4:	ldr	x19, [x24, #216]
   268a8:	ldr	x0, [sp, #104]
   268ac:	add	x19, x19, x0
   268b0:	b	2691c <printf_parse@@Base+0x94ec>
   268b4:	cbnz	w0, 26a0c <printf_parse@@Base+0x95dc>
   268b8:	cmp	w19, #0x0
   268bc:	csel	w0, w19, w20, ne  // ne = any
   268c0:	ldp	x19, x20, [sp, #16]
   268c4:	ldp	x25, x26, [sp, #64]
   268c8:	ldp	x27, x28, [sp, #80]
   268cc:	b	269f4 <printf_parse@@Base+0x95c4>
   268d0:	mov	x1, x27
   268d4:	mov	x0, x26
   268d8:	bl	1efc4 <printf_parse@@Base+0x1b94>
   268dc:	str	w0, [sp, #156]
   268e0:	cbnz	w0, 26a1c <printf_parse@@Base+0x95ec>
   268e4:	ldr	x21, [x24, #184]
   268e8:	mov	x2, x26
   268ec:	mov	x1, x25
   268f0:	mov	x0, x28
   268f4:	bl	265b8 <printf_parse@@Base+0x9188>
   268f8:	str	x0, [x21, x20, lsl #3]
   268fc:	ldr	x0, [sp, #144]
   26900:	bl	aa50 <free@plt>
   26904:	ldr	x0, [x24, #184]
   26908:	ldr	x0, [x0, x20, lsl #3]
   2690c:	cbz	x0, 269d0 <printf_parse@@Base+0x95a0>
   26910:	add	x19, x19, #0x28
   26914:	ldurb	w0, [x19, #-8]
   26918:	cbz	w0, 269e8 <printf_parse@@Base+0x95b8>
   2691c:	ldr	x21, [x19]
   26920:	mov	x1, x21
   26924:	mov	x0, x23
   26928:	bl	1e034 <printf_parse@@Base+0xc04>
   2692c:	cbz	x0, 26910 <printf_parse@@Base+0x94e0>
   26930:	ldr	x20, [x19, #24]
   26934:	add	x20, x22, x20
   26938:	ldr	x0, [x19, #16]
   2693c:	sub	x20, x20, x0
   26940:	cmp	x22, x20
   26944:	b.eq	26830 <printf_parse@@Base+0x9400>  // b.none
   26948:	ldr	x0, [x25, #24]
   2694c:	ldr	x27, [x0, x21, lsl #3]
   26950:	ldr	x0, [x24, #184]
   26954:	ldr	x21, [x0, x20, lsl #3]
   26958:	cbz	x21, 268d0 <printf_parse@@Base+0x94a0>
   2695c:	add	x21, x21, #0x8
   26960:	mov	x1, x27
   26964:	mov	x0, x21
   26968:	bl	1e034 <printf_parse@@Base+0xc04>
   2696c:	cbnz	x0, 26910 <printf_parse@@Base+0x94e0>
   26970:	mov	x1, x21
   26974:	mov	x0, x26
   26978:	bl	200dc <printf_parse@@Base+0x2cac>
   2697c:	str	w0, [sp, #156]
   26980:	mov	x1, x27
   26984:	mov	x0, x26
   26988:	bl	1f018 <printf_parse@@Base+0x1be8>
   2698c:	and	w0, w0, #0xff
   26990:	ldr	w1, [sp, #156]
   26994:	cmp	w1, #0x0
   26998:	cset	w1, ne  // ne = any
   2699c:	eor	w0, w0, #0x1
   269a0:	orr	w0, w1, w0
   269a4:	cbz	w0, 268e4 <printf_parse@@Base+0x94b4>
   269a8:	ldr	x0, [sp, #144]
   269ac:	bl	aa50 <free@plt>
   269b0:	ldr	w0, [sp, #156]
   269b4:	cmp	w0, #0x0
   269b8:	mov	w1, #0xc                   	// #12
   269bc:	csel	w0, w0, w1, ne  // ne = any
   269c0:	ldp	x19, x20, [sp, #16]
   269c4:	ldp	x25, x26, [sp, #64]
   269c8:	ldp	x27, x28, [sp, #80]
   269cc:	b	269f4 <printf_parse@@Base+0x95c4>
   269d0:	ldr	w0, [sp, #156]
   269d4:	cbz	w0, 26910 <printf_parse@@Base+0x94e0>
   269d8:	ldp	x19, x20, [sp, #16]
   269dc:	ldp	x25, x26, [sp, #64]
   269e0:	ldp	x27, x28, [sp, #80]
   269e4:	b	269f4 <printf_parse@@Base+0x95c4>
   269e8:	ldp	x19, x20, [sp, #16]
   269ec:	ldp	x25, x26, [sp, #64]
   269f0:	ldp	x27, x28, [sp, #80]
   269f4:	ldp	x21, x22, [sp, #32]
   269f8:	ldp	x23, x24, [sp, #48]
   269fc:	ldp	x29, x30, [sp], #160
   26a00:	ret
   26a04:	mov	w0, #0x0                   	// #0
   26a08:	b	269f4 <printf_parse@@Base+0x95c4>
   26a0c:	ldp	x19, x20, [sp, #16]
   26a10:	ldp	x25, x26, [sp, #64]
   26a14:	ldp	x27, x28, [sp, #80]
   26a18:	b	269f4 <printf_parse@@Base+0x95c4>
   26a1c:	ldp	x19, x20, [sp, #16]
   26a20:	ldp	x25, x26, [sp, #64]
   26a24:	ldp	x27, x28, [sp, #80]
   26a28:	b	269f4 <printf_parse@@Base+0x95c4>
   26a2c:	cmp	x3, #0x0
   26a30:	b.le	26aec <printf_parse@@Base+0x96bc>
   26a34:	stp	x29, x30, [sp, #-112]!
   26a38:	mov	x29, sp
   26a3c:	stp	x19, x20, [sp, #16]
   26a40:	stp	x21, x22, [sp, #32]
   26a44:	stp	x23, x24, [sp, #48]
   26a48:	stp	x25, x26, [sp, #64]
   26a4c:	mov	x25, x0
   26a50:	mov	x20, x1
   26a54:	mov	x23, x2
   26a58:	mov	x21, x3
   26a5c:	mov	x19, #0x0                   	// #0
   26a60:	add	x24, sp, #0x50
   26a64:	add	x26, sp, #0x6c
   26a68:	b	26a80 <printf_parse@@Base+0x9650>
   26a6c:	ldr	x0, [x23, x19, lsl #3]
   26a70:	str	x0, [x20, x19, lsl #3]
   26a74:	add	x19, x19, #0x1
   26a78:	cmp	x21, x19
   26a7c:	b.eq	26ad0 <printf_parse@@Base+0x96a0>  // b.none
   26a80:	ldr	x1, [x20, x19, lsl #3]
   26a84:	cbz	x1, 26a6c <printf_parse@@Base+0x963c>
   26a88:	ldr	x2, [x23, x19, lsl #3]
   26a8c:	cbz	x2, 26a74 <printf_parse@@Base+0x9644>
   26a90:	add	x2, x2, #0x8
   26a94:	add	x1, x1, #0x8
   26a98:	mov	x0, x24
   26a9c:	bl	20154 <printf_parse@@Base+0x2d24>
   26aa0:	str	w0, [sp, #108]
   26aa4:	cbnz	w0, 26ad4 <printf_parse@@Base+0x96a4>
   26aa8:	mov	x2, x24
   26aac:	mov	x1, x25
   26ab0:	mov	x0, x26
   26ab4:	bl	265b8 <printf_parse@@Base+0x9188>
   26ab8:	str	x0, [x20, x19, lsl #3]
   26abc:	ldr	x0, [sp, #96]
   26ac0:	bl	aa50 <free@plt>
   26ac4:	ldr	w0, [sp, #108]
   26ac8:	cbz	w0, 26a74 <printf_parse@@Base+0x9644>
   26acc:	b	26ad4 <printf_parse@@Base+0x96a4>
   26ad0:	mov	w0, #0x0                   	// #0
   26ad4:	ldp	x19, x20, [sp, #16]
   26ad8:	ldp	x21, x22, [sp, #32]
   26adc:	ldp	x23, x24, [sp, #48]
   26ae0:	ldp	x25, x26, [sp, #64]
   26ae4:	ldp	x29, x30, [sp], #112
   26ae8:	ret
   26aec:	mov	w0, #0x0                   	// #0
   26af0:	ret
   26af4:	stp	x29, x30, [sp, #-272]!
   26af8:	mov	x29, sp
   26afc:	stp	x19, x20, [sp, #16]
   26b00:	stp	x21, x22, [sp, #32]
   26b04:	stp	x23, x24, [sp, #48]
   26b08:	mov	x19, x0
   26b0c:	mov	x7, x1
   26b10:	str	x1, [sp, #176]
   26b14:	mov	x20, x2
   26b18:	mov	x23, x3
   26b1c:	str	x4, [sp, #200]
   26b20:	str	x5, [sp, #136]
   26b24:	str	w6, [sp, #156]
   26b28:	ldr	x0, [x0, #152]
   26b2c:	str	x0, [sp, #128]
   26b30:	str	wzr, [sp, #268]
   26b34:	ldr	x1, [x0]
   26b38:	lsl	x0, x2, #4
   26b3c:	ldr	x0, [x1, x0]
   26b40:	str	x0, [sp, #144]
   26b44:	ldrsw	x22, [x19, #224]
   26b48:	add	x22, x22, x5
   26b4c:	ldr	x21, [x7, #8]
   26b50:	cmp	x22, x21
   26b54:	b.ge	26c40 <printf_parse@@Base+0x9810>  // b.tcont
   26b58:	ldr	x0, [sp, #176]
   26b5c:	ldr	x22, [x0]
   26b60:	cbz	x22, 2707c <printf_parse@@Base+0x9c4c>
   26b64:	ldr	x1, [x19, #184]
   26b68:	str	x1, [sp, #192]
   26b6c:	ldr	x1, [x19, #72]
   26b70:	str	x1, [sp, #184]
   26b74:	ldr	x21, [x0, #16]
   26b78:	str	x21, [x19, #184]
   26b7c:	str	x22, [x19, #72]
   26b80:	str	x19, [sp, #112]
   26b84:	ldr	w2, [x19, #160]
   26b88:	sub	x1, x22, #0x1
   26b8c:	mov	x0, x19
   26b90:	bl	204b4 <printf_parse@@Base+0x3084>
   26b94:	mov	w24, w0
   26b98:	cmp	x22, x23
   26b9c:	b.eq	270b4 <printf_parse@@Base+0x9c84>  // b.none
   26ba0:	ldr	x21, [x21, x22, lsl #3]
   26ba4:	cbz	x21, 270f8 <printf_parse@@Base+0x9cc8>
   26ba8:	ldrb	w0, [x21, #104]
   26bac:	tbnz	w0, #6, 26c9c <printf_parse@@Base+0x986c>
   26bb0:	stp	xzr, xzr, [sp, #240]
   26bb4:	str	xzr, [sp, #256]
   26bb8:	ldrb	w0, [x21, #104]
   26bbc:	tbz	w0, #6, 26c0c <printf_parse@@Base+0x97dc>
   26bc0:	ldr	x0, [sp, #248]
   26bc4:	cbz	x0, 26be8 <printf_parse@@Base+0x97b8>
   26bc8:	ldr	w4, [sp, #156]
   26bcc:	ldr	x3, [sp, #144]
   26bd0:	mov	x2, x22
   26bd4:	add	x1, sp, #0xf0
   26bd8:	mov	x0, x19
   26bdc:	bl	267d4 <printf_parse@@Base+0x93a4>
   26be0:	str	w0, [sp, #268]
   26be4:	cbnz	w0, 26cb4 <printf_parse@@Base+0x9884>
   26be8:	mov	w3, w24
   26bec:	add	x2, sp, #0xf0
   26bf0:	ldr	x1, [sp, #128]
   26bf4:	add	x0, sp, #0x10c
   26bf8:	bl	21950 <printf_parse@@Base+0x4520>
   26bfc:	mov	x21, x0
   26c00:	cbz	x0, 26cc4 <printf_parse@@Base+0x9894>
   26c04:	ldr	x0, [x19, #184]
   26c08:	str	x21, [x0, x22, lsl #3]
   26c0c:	ldr	x0, [sp, #136]
   26c10:	cmp	x22, x0
   26c14:	b.ge	26fdc <printf_parse@@Base+0x9bac>  // b.tcont
   26c18:	stp	x25, x26, [sp, #64]
   26c1c:	stp	x27, x28, [sp, #80]
   26c20:	add	x24, x22, #0x1
   26c24:	str	xzr, [sp, #104]
   26c28:	add	x27, sp, #0xf0
   26c2c:	add	x0, sp, #0xd4
   26c30:	str	x0, [sp, #168]
   26c34:	add	x0, sp, #0x10c
   26c38:	str	x0, [sp, #160]
   26c3c:	b	26e94 <printf_parse@@Base+0x9a64>
   26c40:	add	x22, x22, #0x1
   26c44:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   26c48:	sub	x0, x0, x21
   26c4c:	cmp	x0, x22
   26c50:	b.lt	27034 <printf_parse@@Base+0x9c04>  // b.tstop
   26c54:	add	x24, x21, x22
   26c58:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   26c5c:	cmp	x24, x0
   26c60:	b.hi	2703c <printf_parse@@Base+0x9c0c>  // b.pmore
   26c64:	stp	x25, x26, [sp, #64]
   26c68:	lsl	x1, x24, #3
   26c6c:	mov	x25, x7
   26c70:	ldr	x0, [x7, #16]
   26c74:	bl	a7e0 <realloc@plt>
   26c78:	cbz	x0, 27044 <printf_parse@@Base+0x9c14>
   26c7c:	str	x0, [x25, #16]
   26c80:	str	x24, [x25, #8]
   26c84:	lsl	x2, x22, #3
   26c88:	mov	w1, #0x0                   	// #0
   26c8c:	add	x0, x0, x21, lsl #3
   26c90:	bl	a6f0 <memset@plt>
   26c94:	ldp	x25, x26, [sp, #64]
   26c98:	b	26b58 <printf_parse@@Base+0x9728>
   26c9c:	add	x1, x21, #0x8
   26ca0:	add	x0, sp, #0xf0
   26ca4:	bl	200dc <printf_parse@@Base+0x2cac>
   26ca8:	str	w0, [sp, #268]
   26cac:	cbz	w0, 26bb8 <printf_parse@@Base+0x9788>
   26cb0:	b	26cf0 <printf_parse@@Base+0x98c0>
   26cb4:	ldr	x0, [sp, #256]
   26cb8:	bl	aa50 <free@plt>
   26cbc:	ldr	w0, [sp, #268]
   26cc0:	b	26cf0 <printf_parse@@Base+0x98c0>
   26cc4:	ldr	w0, [sp, #268]
   26cc8:	cbz	w0, 26c04 <printf_parse@@Base+0x97d4>
   26ccc:	ldr	x0, [sp, #256]
   26cd0:	bl	aa50 <free@plt>
   26cd4:	ldr	w0, [sp, #268]
   26cd8:	b	26cf0 <printf_parse@@Base+0x98c0>
   26cdc:	ldr	x0, [sp, #256]
   26ce0:	bl	aa50 <free@plt>
   26ce4:	ldr	w0, [sp, #268]
   26ce8:	ldp	x25, x26, [sp, #64]
   26cec:	ldp	x27, x28, [sp, #80]
   26cf0:	ldp	x19, x20, [sp, #16]
   26cf4:	ldp	x21, x22, [sp, #32]
   26cf8:	ldp	x23, x24, [sp, #48]
   26cfc:	ldp	x29, x30, [sp], #272
   26d00:	ret
   26d04:	mov	x3, x22
   26d08:	ldr	x2, [sp, #112]
   26d0c:	mov	x1, x25
   26d10:	mov	x0, x23
   26d14:	bl	23c80 <printf_parse@@Base+0x6850>
   26d18:	cmp	w0, #0x1
   26d1c:	b.le	26f28 <printf_parse@@Base+0x9af8>
   26d20:	ldr	x1, [x23, #24]
   26d24:	ldr	x28, [x1, x25, lsl #3]
   26d28:	add	x20, x22, w0, sxtw
   26d2c:	ldr	x0, [x19, #184]
   26d30:	ldr	x1, [x0, x20, lsl #3]
   26d34:	str	xzr, [sp, #224]
   26d38:	cbz	x1, 26d50 <printf_parse@@Base+0x9920>
   26d3c:	add	x1, x1, #0x8
   26d40:	ldr	x0, [sp, #96]
   26d44:	bl	1ff2c <printf_parse@@Base+0x2afc>
   26d48:	str	w0, [sp, #212]
   26d4c:	cbnz	w0, 26dec <printf_parse@@Base+0x99bc>
   26d50:	mov	x1, x28
   26d54:	ldr	x0, [sp, #96]
   26d58:	bl	1f018 <printf_parse@@Base+0x1be8>
   26d5c:	and	w0, w0, #0xff
   26d60:	cbz	w0, 26f04 <printf_parse@@Base+0x9ad4>
   26d64:	ldr	x28, [x19, #184]
   26d68:	ldr	x2, [sp, #96]
   26d6c:	mov	x1, x23
   26d70:	ldr	x0, [sp, #168]
   26d74:	bl	265b8 <printf_parse@@Base+0x9188>
   26d78:	str	x0, [x28, x20, lsl #3]
   26d7c:	ldr	x0, [x19, #184]
   26d80:	ldr	x0, [x0, x20, lsl #3]
   26d84:	cbz	x0, 26f10 <printf_parse@@Base+0x9ae0>
   26d88:	ldr	x0, [x23, #24]
   26d8c:	ldr	x1, [x0, x25, lsl #3]
   26d90:	mov	x0, x27
   26d94:	bl	1f018 <printf_parse@@Base+0x1be8>
   26d98:	and	w0, w0, #0xff
   26d9c:	cbz	w0, 26f30 <printf_parse@@Base+0x9b00>
   26da0:	add	x26, x26, #0x1
   26da4:	ldr	x0, [x21, #40]
   26da8:	cmp	x26, x0
   26dac:	b.ge	26f58 <printf_parse@@Base+0x9b28>  // b.tcont
   26db0:	ldr	x0, [x21, #48]
   26db4:	ldr	x25, [x0, x26, lsl #3]
   26db8:	lsl	x28, x25, #4
   26dbc:	ldr	x0, [x23]
   26dc0:	add	x0, x0, x28
   26dc4:	ldrb	w0, [x0, #10]
   26dc8:	tbnz	w0, #4, 26d04 <printf_parse@@Base+0x98d4>
   26dcc:	ldr	x1, [x23]
   26dd0:	mov	x2, x22
   26dd4:	add	x1, x1, x28
   26dd8:	mov	x0, x19
   26ddc:	bl	205b0 <printf_parse@@Base+0x3180>
   26de0:	and	w0, w0, #0xff
   26de4:	cbz	w0, 26da0 <printf_parse@@Base+0x9970>
   26de8:	b	26d88 <printf_parse@@Base+0x9958>
   26dec:	ldr	x0, [sp, #232]
   26df0:	bl	aa50 <free@plt>
   26df4:	ldr	w0, [sp, #212]
   26df8:	str	w0, [sp, #268]
   26dfc:	cbnz	w0, 26f40 <printf_parse@@Base+0x9b10>
   26e00:	mov	x20, x24
   26e04:	ldr	x0, [sp, #248]
   26e08:	cbz	x0, 26e48 <printf_parse@@Base+0x9a18>
   26e0c:	ldr	w3, [sp, #156]
   26e10:	ldr	x2, [sp, #144]
   26e14:	mov	x1, x27
   26e18:	ldr	x0, [sp, #128]
   26e1c:	bl	21e34 <printf_parse@@Base+0x4a04>
   26e20:	str	w0, [sp, #268]
   26e24:	cbnz	w0, 26f68 <printf_parse@@Base+0x9b38>
   26e28:	ldr	w4, [sp, #156]
   26e2c:	ldr	x3, [sp, #144]
   26e30:	mov	x2, x24
   26e34:	mov	x1, x27
   26e38:	mov	x0, x19
   26e3c:	bl	267d4 <printf_parse@@Base+0x93a4>
   26e40:	str	w0, [sp, #268]
   26e44:	cbnz	w0, 26f80 <printf_parse@@Base+0x9b50>
   26e48:	ldr	w2, [x19, #160]
   26e4c:	mov	x1, x22
   26e50:	ldr	x0, [sp, #112]
   26e54:	bl	204b4 <printf_parse@@Base+0x3084>
   26e58:	mov	w3, w0
   26e5c:	mov	x2, x27
   26e60:	ldr	x1, [sp, #128]
   26e64:	ldr	x0, [sp, #160]
   26e68:	bl	21950 <printf_parse@@Base+0x4520>
   26e6c:	mov	x21, x0
   26e70:	cbz	x0, 26f98 <printf_parse@@Base+0x9b68>
   26e74:	ldr	x0, [x19, #184]
   26e78:	ldr	x1, [sp, #120]
   26e7c:	str	x21, [x0, x1]
   26e80:	str	xzr, [sp, #104]
   26e84:	add	x24, x24, #0x1
   26e88:	ldr	x0, [sp, #136]
   26e8c:	cmp	x0, x20
   26e90:	b.le	27024 <printf_parse@@Base+0x9bf4>
   26e94:	sub	x22, x24, #0x1
   26e98:	ldrsw	x0, [x19, #224]
   26e9c:	ldr	x1, [sp, #104]
   26ea0:	cmp	x1, x0
   26ea4:	b.gt	26fd4 <printf_parse@@Base+0x9ba4>
   26ea8:	str	xzr, [sp, #248]
   26eac:	lsl	x0, x24, #3
   26eb0:	str	x0, [sp, #120]
   26eb4:	ldr	x0, [x19, #184]
   26eb8:	ldr	x1, [x0, x24, lsl #3]
   26ebc:	cbz	x1, 27070 <printf_parse@@Base+0x9c40>
   26ec0:	add	x1, x1, #0x8
   26ec4:	mov	x0, x27
   26ec8:	bl	1ff2c <printf_parse@@Base+0x2afc>
   26ecc:	str	w0, [sp, #268]
   26ed0:	cbnz	w0, 26cdc <printf_parse@@Base+0x98ac>
   26ed4:	cbz	x21, 26e00 <printf_parse@@Base+0x99d0>
   26ed8:	ldr	x23, [x19, #152]
   26edc:	str	wzr, [sp, #212]
   26ee0:	stp	xzr, xzr, [sp, #216]
   26ee4:	str	xzr, [sp, #232]
   26ee8:	ldr	x0, [x21, #40]
   26eec:	cmp	x0, #0x0
   26ef0:	b.le	26f58 <printf_parse@@Base+0x9b28>
   26ef4:	mov	x26, #0x0                   	// #0
   26ef8:	add	x0, sp, #0xd8
   26efc:	str	x0, [sp, #96]
   26f00:	b	26db0 <printf_parse@@Base+0x9980>
   26f04:	ldr	x0, [sp, #232]
   26f08:	bl	aa50 <free@plt>
   26f0c:	b	26f38 <printf_parse@@Base+0x9b08>
   26f10:	ldr	w0, [sp, #212]
   26f14:	cbz	w0, 26d88 <printf_parse@@Base+0x9958>
   26f18:	ldr	x0, [sp, #232]
   26f1c:	bl	aa50 <free@plt>
   26f20:	ldr	w0, [sp, #212]
   26f24:	b	26df8 <printf_parse@@Base+0x99c8>
   26f28:	cbz	w0, 26dcc <printf_parse@@Base+0x999c>
   26f2c:	b	26d88 <printf_parse@@Base+0x9958>
   26f30:	ldr	x0, [sp, #232]
   26f34:	bl	aa50 <free@plt>
   26f38:	mov	w0, #0xc                   	// #12
   26f3c:	str	w0, [sp, #268]
   26f40:	ldr	x0, [sp, #256]
   26f44:	bl	aa50 <free@plt>
   26f48:	ldr	w0, [sp, #268]
   26f4c:	ldp	x25, x26, [sp, #64]
   26f50:	ldp	x27, x28, [sp, #80]
   26f54:	b	26cf0 <printf_parse@@Base+0x98c0>
   26f58:	ldr	x0, [sp, #232]
   26f5c:	bl	aa50 <free@plt>
   26f60:	str	wzr, [sp, #268]
   26f64:	b	26e00 <printf_parse@@Base+0x99d0>
   26f68:	ldr	x0, [sp, #256]
   26f6c:	bl	aa50 <free@plt>
   26f70:	ldr	w0, [sp, #268]
   26f74:	ldp	x25, x26, [sp, #64]
   26f78:	ldp	x27, x28, [sp, #80]
   26f7c:	b	26cf0 <printf_parse@@Base+0x98c0>
   26f80:	ldr	x0, [sp, #256]
   26f84:	bl	aa50 <free@plt>
   26f88:	ldr	w0, [sp, #268]
   26f8c:	ldp	x25, x26, [sp, #64]
   26f90:	ldp	x27, x28, [sp, #80]
   26f94:	b	26cf0 <printf_parse@@Base+0x98c0>
   26f98:	ldr	w0, [sp, #268]
   26f9c:	cbnz	w0, 26fbc <printf_parse@@Base+0x9b8c>
   26fa0:	ldr	x0, [x19, #184]
   26fa4:	ldr	x1, [sp, #120]
   26fa8:	str	xzr, [x0, x1]
   26fac:	ldr	x0, [sp, #104]
   26fb0:	add	x0, x0, #0x1
   26fb4:	str	x0, [sp, #104]
   26fb8:	b	26e84 <printf_parse@@Base+0x9a54>
   26fbc:	ldr	x0, [sp, #256]
   26fc0:	bl	aa50 <free@plt>
   26fc4:	ldr	w0, [sp, #268]
   26fc8:	ldp	x25, x26, [sp, #64]
   26fcc:	ldp	x27, x28, [sp, #80]
   26fd0:	b	26cf0 <printf_parse@@Base+0x98c0>
   26fd4:	ldp	x25, x26, [sp, #64]
   26fd8:	ldp	x27, x28, [sp, #80]
   26fdc:	ldr	x0, [sp, #256]
   26fe0:	bl	aa50 <free@plt>
   26fe4:	ldr	x0, [x19, #184]
   26fe8:	ldr	x1, [sp, #136]
   26fec:	ldr	x0, [x0, x1, lsl #3]
   26ff0:	cbz	x0, 27050 <printf_parse@@Base+0x9c20>
   26ff4:	ldr	x1, [sp, #176]
   26ff8:	str	x22, [x1]
   26ffc:	ldr	x1, [sp, #192]
   27000:	str	x1, [x19, #184]
   27004:	ldr	x1, [sp, #184]
   27008:	str	x1, [x19, #72]
   2700c:	ldr	x1, [sp, #200]
   27010:	add	x0, x0, #0x8
   27014:	bl	1e034 <printf_parse@@Base+0xc04>
   27018:	cmp	x0, #0x0
   2701c:	cset	w0, eq  // eq = none
   27020:	b	26cf0 <printf_parse@@Base+0x98c0>
   27024:	mov	x22, x20
   27028:	ldp	x25, x26, [sp, #64]
   2702c:	ldp	x27, x28, [sp, #80]
   27030:	b	26fdc <printf_parse@@Base+0x9bac>
   27034:	mov	w0, #0xc                   	// #12
   27038:	b	26cf0 <printf_parse@@Base+0x98c0>
   2703c:	mov	w0, #0xc                   	// #12
   27040:	b	26cf0 <printf_parse@@Base+0x98c0>
   27044:	mov	w0, #0xc                   	// #12
   27048:	ldp	x25, x26, [sp, #64]
   2704c:	b	26cf0 <printf_parse@@Base+0x98c0>
   27050:	ldr	x0, [sp, #176]
   27054:	str	x22, [x0]
   27058:	ldr	x0, [sp, #192]
   2705c:	str	x0, [x19, #184]
   27060:	ldr	x0, [sp, #184]
   27064:	str	x0, [x19, #72]
   27068:	mov	w0, #0x1                   	// #1
   2706c:	b	26cf0 <printf_parse@@Base+0x98c0>
   27070:	cbnz	x21, 26ed8 <printf_parse@@Base+0x9aa8>
   27074:	mov	x20, x24
   27078:	b	26e48 <printf_parse@@Base+0x9a18>
   2707c:	ldr	x0, [x19, #184]
   27080:	str	x0, [sp, #192]
   27084:	ldr	x0, [x19, #72]
   27088:	str	x0, [sp, #184]
   2708c:	ldr	x0, [sp, #176]
   27090:	ldr	x0, [x0, #16]
   27094:	str	x0, [x19, #184]
   27098:	str	x23, [x19, #72]
   2709c:	str	x19, [sp, #112]
   270a0:	ldr	w2, [x19, #160]
   270a4:	sub	x1, x23, #0x1
   270a8:	mov	x0, x19
   270ac:	bl	204b4 <printf_parse@@Base+0x3084>
   270b0:	mov	w24, w0
   270b4:	mov	x1, x20
   270b8:	add	x0, sp, #0xf0
   270bc:	bl	1efc4 <printf_parse@@Base+0x1b94>
   270c0:	str	w0, [sp, #268]
   270c4:	cbnz	w0, 26cf0 <printf_parse@@Base+0x98c0>
   270c8:	ldr	w3, [sp, #156]
   270cc:	ldr	x2, [sp, #144]
   270d0:	add	x1, sp, #0xf0
   270d4:	ldr	x0, [sp, #128]
   270d8:	bl	21e34 <printf_parse@@Base+0x4a04>
   270dc:	str	w0, [sp, #268]
   270e0:	mov	x22, x23
   270e4:	cbz	w0, 26bc0 <printf_parse@@Base+0x9790>
   270e8:	ldr	x0, [sp, #256]
   270ec:	bl	aa50 <free@plt>
   270f0:	ldr	w0, [sp, #268]
   270f4:	b	26cf0 <printf_parse@@Base+0x98c0>
   270f8:	stp	xzr, xzr, [sp, #240]
   270fc:	str	xzr, [sp, #256]
   27100:	b	26c0c <printf_parse@@Base+0x97dc>
   27104:	stp	x29, x30, [sp, #-80]!
   27108:	mov	x29, sp
   2710c:	stp	x19, x20, [sp, #16]
   27110:	stp	x21, x22, [sp, #32]
   27114:	stp	x23, x24, [sp, #48]
   27118:	mov	x19, x0
   2711c:	mov	x23, x1
   27120:	mov	x22, x2
   27124:	mov	x21, x3
   27128:	mov	x20, x4
   2712c:	mov	x1, x2
   27130:	mov	w6, #0x8                   	// #8
   27134:	mov	x5, x4
   27138:	mov	x4, x3
   2713c:	ldr	x3, [x2, #8]
   27140:	ldr	x2, [x1], #16
   27144:	bl	26af4 <printf_parse@@Base+0x96c4>
   27148:	cbz	w0, 27160 <printf_parse@@Base+0x9d30>
   2714c:	ldp	x19, x20, [sp, #16]
   27150:	ldp	x21, x22, [sp, #32]
   27154:	ldp	x23, x24, [sp, #48]
   27158:	ldp	x29, x30, [sp], #80
   2715c:	ret
   27160:	str	x25, [sp, #64]
   27164:	ldr	x25, [x23]
   27168:	ldr	x24, [x22, #8]
   2716c:	ldr	x1, [x19, #208]
   27170:	ldr	x0, [x19, #200]
   27174:	cmp	x0, x1
   27178:	b.ge	27264 <printf_parse@@Base+0x9e34>  // b.tcont
   2717c:	ldr	x0, [x19, #200]
   27180:	cmp	x0, #0x0
   27184:	b.le	271a8 <printf_parse@@Base+0x9d78>
   27188:	add	x0, x0, x0, lsl #2
   2718c:	lsl	x0, x0, #3
   27190:	sub	x0, x0, #0x28
   27194:	ldr	x1, [x19, #216]
   27198:	add	x0, x1, x0
   2719c:	ldr	x1, [x0, #8]
   271a0:	cmp	x20, x1
   271a4:	b.eq	272c0 <printf_parse@@Base+0x9e90>  // b.none
   271a8:	ldr	x0, [x19, #200]
   271ac:	ldr	x1, [x19, #216]
   271b0:	add	x0, x0, x0, lsl #2
   271b4:	str	x21, [x1, x0, lsl #3]
   271b8:	ldr	x0, [x19, #200]
   271bc:	ldr	x1, [x19, #216]
   271c0:	add	x0, x0, x0, lsl #2
   271c4:	add	x0, x1, x0, lsl #3
   271c8:	str	x20, [x0, #8]
   271cc:	ldr	x0, [x19, #200]
   271d0:	ldr	x1, [x19, #216]
   271d4:	add	x0, x0, x0, lsl #2
   271d8:	add	x0, x1, x0, lsl #3
   271dc:	str	x25, [x0, #16]
   271e0:	ldr	x0, [x19, #200]
   271e4:	ldr	x1, [x19, #216]
   271e8:	add	x0, x0, x0, lsl #2
   271ec:	add	x0, x1, x0, lsl #3
   271f0:	str	x24, [x0, #24]
   271f4:	ldr	x0, [x19, #200]
   271f8:	ldr	x1, [x19, #216]
   271fc:	add	x0, x0, x0, lsl #2
   27200:	add	x0, x1, x0, lsl #3
   27204:	cmp	x25, x24
   27208:	csetm	w1, eq  // eq = none
   2720c:	strh	w1, [x0, #34]
   27210:	ldr	x1, [x19, #216]
   27214:	ldr	x0, [x19, #200]
   27218:	add	x2, x0, #0x1
   2721c:	str	x2, [x19, #200]
   27220:	add	x0, x0, x0, lsl #2
   27224:	add	x0, x1, x0, lsl #3
   27228:	strb	wzr, [x0, #32]
   2722c:	ldrsw	x1, [x19, #224]
   27230:	sub	x0, x24, x25
   27234:	cmp	x1, x0
   27238:	b.ge	27244 <printf_parse@@Base+0x9e14>  // b.tcont
   2723c:	sub	w24, w24, w25
   27240:	str	w24, [x19, #224]
   27244:	ldr	x1, [x22, #8]
   27248:	add	x20, x20, x1
   2724c:	ldr	x1, [x23]
   27250:	sub	x1, x20, x1
   27254:	mov	x0, x19
   27258:	bl	1fe8c <printf_parse@@Base+0x2a5c>
   2725c:	ldr	x25, [sp, #64]
   27260:	b	2714c <printf_parse@@Base+0x9d1c>
   27264:	add	x1, x1, x1, lsl #2
   27268:	lsl	x1, x1, #4
   2726c:	ldr	x0, [x19, #216]
   27270:	bl	a7e0 <realloc@plt>
   27274:	cbz	x0, 272ac <printf_parse@@Base+0x9e7c>
   27278:	str	x0, [x19, #216]
   2727c:	ldr	x2, [x19, #208]
   27280:	add	x2, x2, x2, lsl #2
   27284:	ldr	x1, [x19, #200]
   27288:	add	x3, x1, x1, lsl #2
   2728c:	lsl	x2, x2, #3
   27290:	mov	w1, #0x0                   	// #0
   27294:	add	x0, x0, x3, lsl #3
   27298:	bl	a6f0 <memset@plt>
   2729c:	ldr	x0, [x19, #208]
   272a0:	lsl	x0, x0, #1
   272a4:	str	x0, [x19, #208]
   272a8:	b	2717c <printf_parse@@Base+0x9d4c>
   272ac:	ldr	x0, [x19, #216]
   272b0:	bl	aa50 <free@plt>
   272b4:	mov	w0, #0xc                   	// #12
   272b8:	ldr	x25, [sp, #64]
   272bc:	b	2714c <printf_parse@@Base+0x9d1c>
   272c0:	mov	w1, #0x1                   	// #1
   272c4:	strb	w1, [x0, #32]
   272c8:	b	271a8 <printf_parse@@Base+0x9d78>
   272cc:	stp	x29, x30, [sp, #-224]!
   272d0:	mov	x29, sp
   272d4:	stp	x19, x20, [sp, #16]
   272d8:	stp	x27, x28, [sp, #80]
   272dc:	mov	x19, x0
   272e0:	mov	x28, x1
   272e4:	ldr	x27, [x0, #152]
   272e8:	ldr	x0, [x0, #72]
   272ec:	mov	x1, x0
   272f0:	str	x0, [sp, #104]
   272f4:	ldr	x0, [x28, #8]
   272f8:	cmp	x0, #0x0
   272fc:	b.le	27964 <printf_parse@@Base+0xa534>
   27300:	stp	x21, x22, [sp, #32]
   27304:	stp	x23, x24, [sp, #48]
   27308:	stp	x25, x26, [sp, #64]
   2730c:	lsl	x0, x1, #3
   27310:	str	x0, [sp, #128]
   27314:	str	xzr, [sp, #96]
   27318:	add	x0, sp, #0xc0
   2731c:	str	x0, [sp, #136]
   27320:	add	x0, sp, #0xdc
   27324:	str	x0, [sp, #144]
   27328:	mov	x0, x28
   2732c:	mov	x28, x27
   27330:	mov	x27, x0
   27334:	b	2736c <printf_parse@@Base+0x9f3c>
   27338:	tbz	w1, #3, 27340 <printf_parse@@Base+0x9f10>
   2733c:	tbnz	w0, #0, 27350 <printf_parse@@Base+0x9f20>
   27340:	tbz	w1, #5, 27348 <printf_parse@@Base+0x9f18>
   27344:	tbz	w0, #1, 27350 <printf_parse@@Base+0x9f20>
   27348:	tbz	w1, #7, 273c4 <printf_parse@@Base+0x9f94>
   2734c:	tbnz	w0, #3, 273c4 <printf_parse@@Base+0x9f94>
   27350:	ldr	x0, [sp, #96]
   27354:	add	x0, x0, #0x1
   27358:	mov	x1, x0
   2735c:	str	x0, [sp, #96]
   27360:	ldr	x0, [x27, #8]
   27364:	cmp	x0, x1
   27368:	b.le	27958 <printf_parse@@Base+0xa528>
   2736c:	ldr	x0, [x27, #16]
   27370:	ldr	x1, [sp, #96]
   27374:	ldr	x21, [x0, x1, lsl #3]
   27378:	lsl	x22, x21, #4
   2737c:	ldr	x20, [x28]
   27380:	add	x20, x20, x22
   27384:	ldrb	w0, [x20, #8]
   27388:	cmp	w0, #0x4
   2738c:	b.ne	27350 <printf_parse@@Base+0x9f20>  // b.any
   27390:	ldr	w0, [x20, #8]
   27394:	tst	w0, #0x3ff00
   27398:	b.eq	273c4 <printf_parse@@Base+0x9f94>  // b.none
   2739c:	ldr	w2, [x19, #160]
   273a0:	ldr	x1, [sp, #104]
   273a4:	mov	x0, x19
   273a8:	bl	204b4 <printf_parse@@Base+0x3084>
   273ac:	ldr	w2, [x20, #8]
   273b0:	ubfx	x1, x2, #8, #10
   273b4:	tbz	w2, #10, 27338 <printf_parse@@Base+0x9f08>
   273b8:	tbz	w0, #0, 27350 <printf_parse@@Base+0x9f20>
   273bc:	tbz	w1, #3, 27340 <printf_parse@@Base+0x9f10>
   273c0:	b	27350 <printf_parse@@Base+0x9f20>
   273c4:	ldr	x20, [x19, #200]
   273c8:	ldr	x1, [sp, #104]
   273cc:	mov	x0, x19
   273d0:	bl	1e62c <printf_parse@@Base+0x11fc>
   273d4:	cmn	x0, #0x1
   273d8:	b.eq	27400 <printf_parse@@Base+0x9fd0>  // b.none
   273dc:	add	x0, x0, x0, lsl #2
   273e0:	ldr	x1, [x19, #216]
   273e4:	add	x0, x1, x0, lsl #3
   273e8:	ldr	x1, [x0]
   273ec:	cmp	x21, x1
   273f0:	b.eq	27738 <printf_parse@@Base+0xa308>  // b.none
   273f4:	add	x0, x0, #0x28
   273f8:	ldurb	w1, [x0, #-8]
   273fc:	cbnz	w1, 273e8 <printf_parse@@Base+0x9fb8>
   27400:	ldr	x0, [x19, #152]
   27404:	str	x0, [sp, #112]
   27408:	ldr	x0, [x0]
   2740c:	ldr	x0, [x0, x22]
   27410:	str	x0, [sp, #120]
   27414:	ldr	x0, [x19, #232]
   27418:	cmp	x0, #0x0
   2741c:	b.le	27738 <printf_parse@@Base+0xa308>
   27420:	ldr	x0, [x19, #8]
   27424:	mov	x1, #0x0                   	// #0
   27428:	str	x28, [sp, #168]
   2742c:	str	x21, [sp, #152]
   27430:	str	x20, [sp, #176]
   27434:	mov	x28, x1
   27438:	str	x27, [sp, #184]
   2743c:	mov	x27, x0
   27440:	b	27524 <printf_parse@@Base+0xa0f4>
   27444:	mov	x2, x21
   27448:	add	x1, x27, x26
   2744c:	add	x0, x27, x24
   27450:	bl	a970 <memcmp@plt>
   27454:	cbnz	w0, 27504 <printf_parse@@Base+0xa0d4>
   27458:	add	x24, x24, x21
   2745c:	ldr	x4, [sp, #104]
   27460:	mov	x3, x28
   27464:	mov	x2, x25
   27468:	mov	x1, x20
   2746c:	mov	x0, x19
   27470:	bl	27104 <printf_parse@@Base+0x9cd4>
   27474:	ldr	x27, [x19, #8]
   27478:	cmp	w0, #0x1
   2747c:	b.hi	27994 <printf_parse@@Base+0xa564>  // b.pmore
   27480:	add	x22, x22, #0x1
   27484:	ldr	x0, [x20, #32]
   27488:	cmp	x22, x0
   2748c:	b.ge	274dc <printf_parse@@Base+0xa0ac>  // b.tcont
   27490:	ldr	x0, [x20, #40]
   27494:	ldr	x25, [x0, x22, lsl #3]
   27498:	mov	x26, x23
   2749c:	ldr	x23, [x25, #8]
   274a0:	sub	x21, x23, x26
   274a4:	cmp	x21, #0x0
   274a8:	b.le	27458 <printf_parse@@Base+0xa028>
   274ac:	add	x1, x21, x24
   274b0:	ldr	x0, [x19, #48]
   274b4:	cmp	x1, x0
   274b8:	b.le	27444 <printf_parse@@Base+0xa014>
   274bc:	ldr	x0, [x19, #88]
   274c0:	cmp	x1, x0
   274c4:	b.gt	27504 <printf_parse@@Base+0xa0d4>
   274c8:	mov	x0, x19
   274cc:	bl	1fe8c <printf_parse@@Base+0x2a5c>
   274d0:	cbnz	w0, 27980 <printf_parse@@Base+0xa550>
   274d4:	ldr	x27, [x19, #8]
   274d8:	b	27444 <printf_parse@@Base+0xa014>
   274dc:	ldr	x28, [sp, #160]
   274e0:	cmp	x22, #0x0
   274e4:	cinc	x23, x23, gt
   274e8:	ldr	x0, [sp, #104]
   274ec:	cmp	x0, x23
   274f0:	b.lt	27514 <printf_parse@@Base+0xa0e4>  // b.tstop
   274f4:	mov	x25, x0
   274f8:	ldr	x26, [sp, #112]
   274fc:	ldr	x22, [sp, #120]
   27500:	b	27680 <printf_parse@@Base+0xa250>
   27504:	ldr	x28, [sp, #160]
   27508:	ldr	x0, [x20, #32]
   2750c:	cmp	x0, x22
   27510:	b.le	27570 <printf_parse@@Base+0xa140>
   27514:	add	x28, x28, #0x1
   27518:	ldr	x0, [x19, #232]
   2751c:	cmp	x28, x0
   27520:	b.ge	27728 <printf_parse@@Base+0xa2f8>  // b.tcont
   27524:	ldr	x0, [x19, #248]
   27528:	ldr	x20, [x0, x28, lsl #3]
   2752c:	ldr	x0, [x20, #8]
   27530:	ldr	x1, [sp, #112]
   27534:	ldr	x1, [x1]
   27538:	lsl	x0, x0, #4
   2753c:	ldr	x0, [x1, x0]
   27540:	ldr	x1, [sp, #120]
   27544:	cmp	x1, x0
   27548:	b.ne	27514 <printf_parse@@Base+0xa0e4>  // b.any
   2754c:	ldr	x23, [x20]
   27550:	ldr	x0, [x20, #32]
   27554:	cmp	x0, #0x0
   27558:	b.le	27578 <printf_parse@@Base+0xa148>
   2755c:	ldr	x24, [sp, #104]
   27560:	mov	x22, #0x0                   	// #0
   27564:	str	x28, [sp, #160]
   27568:	ldr	x28, [sp, #152]
   2756c:	b	27490 <printf_parse@@Base+0xa060>
   27570:	mov	x23, x26
   27574:	b	274e0 <printf_parse@@Base+0xa0b0>
   27578:	ldr	x24, [sp, #104]
   2757c:	b	274e8 <printf_parse@@Base+0xa0b8>
   27580:	ldr	x0, [x19, #88]
   27584:	cmp	x0, x24
   27588:	b.le	27514 <printf_parse@@Base+0xa0e4>
   2758c:	add	w1, w24, #0x1
   27590:	mov	x0, x19
   27594:	bl	1fda8 <printf_parse@@Base+0x2978>
   27598:	cbnz	w0, 27980 <printf_parse@@Base+0xa550>
   2759c:	ldr	x27, [x19, #8]
   275a0:	b	2769c <printf_parse@@Base+0xa26c>
   275a4:	add	x0, x0, #0x1
   275a8:	cmp	x4, x0
   275ac:	b.eq	27674 <printf_parse@@Base+0xa244>  // b.none
   275b0:	ldr	x21, [x5, x0, lsl #3]
   275b4:	lsl	x1, x21, #4
   275b8:	add	x2, x3, x1
   275bc:	ldrb	w2, [x2, #8]
   275c0:	cmp	w2, #0x9
   275c4:	b.ne	275a4 <printf_parse@@Base+0xa174>  // b.any
   275c8:	ldr	x1, [x3, x1]
   275cc:	cmp	x22, x1
   275d0:	b.ne	275a4 <printf_parse@@Base+0xa174>  // b.any
   275d4:	cmn	x21, #0x1
   275d8:	b.eq	27674 <printf_parse@@Base+0xa244>  // b.none
   275dc:	ldr	x0, [x20, #16]
   275e0:	cbz	x0, 276e0 <printf_parse@@Base+0xa2b0>
   275e4:	mov	w6, #0x9                   	// #9
   275e8:	mov	x5, x23
   275ec:	mov	x4, x21
   275f0:	ldr	x3, [x20]
   275f4:	ldr	x2, [x20, #8]
   275f8:	ldr	x1, [x20, #16]
   275fc:	mov	x0, x19
   27600:	bl	26af4 <printf_parse@@Base+0x96c4>
   27604:	cmp	w0, #0x1
   27608:	b.eq	27674 <printf_parse@@Base+0xa244>  // b.none
   2760c:	cbnz	w0, 27980 <printf_parse@@Base+0xa550>
   27610:	ldr	x0, [x20, #24]
   27614:	ldr	x1, [x20, #32]
   27618:	cmp	x1, x0
   2761c:	b.eq	27704 <printf_parse@@Base+0xa2d4>  // b.none
   27620:	mov	x1, #0x28                  	// #40
   27624:	mov	x0, #0x1                   	// #1
   27628:	bl	a770 <calloc@plt>
   2762c:	mov	x2, x0
   27630:	cbz	x0, 2797c <printf_parse@@Base+0xa54c>
   27634:	ldr	x1, [x20, #32]
   27638:	ldr	x0, [x20, #40]
   2763c:	str	x2, [x0, x1, lsl #3]
   27640:	str	x21, [x2]
   27644:	str	x23, [x2, #8]
   27648:	ldr	x0, [x20, #32]
   2764c:	add	x0, x0, #0x1
   27650:	str	x0, [x20, #32]
   27654:	mov	x4, x25
   27658:	ldr	x3, [sp, #152]
   2765c:	mov	x1, x20
   27660:	mov	x0, x19
   27664:	bl	27104 <printf_parse@@Base+0x9cd4>
   27668:	ldr	x27, [x19, #8]
   2766c:	cmp	w0, #0x1
   27670:	b.hi	27994 <printf_parse@@Base+0xa564>  // b.pmore
   27674:	add	x23, x23, #0x1
   27678:	cmp	x25, x23
   2767c:	b.lt	27514 <printf_parse@@Base+0xa0e4>  // b.tstop
   27680:	ldr	x0, [x20]
   27684:	sub	x0, x23, x0
   27688:	cmp	x0, #0x0
   2768c:	b.le	276b8 <printf_parse@@Base+0xa288>
   27690:	ldr	x0, [x19, #48]
   27694:	cmp	x0, x24
   27698:	b.le	27580 <printf_parse@@Base+0xa150>
   2769c:	add	x1, x24, #0x1
   276a0:	add	x0, x27, x23
   276a4:	ldrb	w2, [x27, x24]
   276a8:	ldurb	w0, [x0, #-1]
   276ac:	cmp	w2, w0
   276b0:	b.ne	27514 <printf_parse@@Base+0xa0e4>  // b.any
   276b4:	mov	x24, x1
   276b8:	ldr	x0, [x19, #184]
   276bc:	ldr	x0, [x0, x23, lsl #3]
   276c0:	cbz	x0, 27674 <printf_parse@@Base+0xa244>
   276c4:	ldr	x4, [x0, #16]
   276c8:	cmp	x4, #0x0
   276cc:	b.le	27674 <printf_parse@@Base+0xa244>
   276d0:	ldr	x5, [x0, #24]
   276d4:	ldr	x3, [x26]
   276d8:	mov	x0, #0x0                   	// #0
   276dc:	b	275b0 <printf_parse@@Base+0xa180>
   276e0:	ldr	x1, [x20]
   276e4:	sub	x1, x23, x1
   276e8:	add	x1, x1, #0x1
   276ec:	mov	x0, #0x18                  	// #24
   276f0:	bl	a770 <calloc@plt>
   276f4:	str	x0, [x20, #16]
   276f8:	cbnz	x0, 275e4 <printf_parse@@Base+0xa1b4>
   276fc:	mov	w0, #0xc                   	// #12
   27700:	b	27980 <printf_parse@@Base+0xa550>
   27704:	lsl	x0, x0, #1
   27708:	add	x27, x0, #0x1
   2770c:	lsl	x1, x27, #3
   27710:	ldr	x0, [x20, #40]
   27714:	bl	a7e0 <realloc@plt>
   27718:	cbz	x0, 2797c <printf_parse@@Base+0xa54c>
   2771c:	str	x0, [x20, #40]
   27720:	str	x27, [x20, #24]
   27724:	b	27620 <printf_parse@@Base+0xa1f0>
   27728:	ldr	x28, [sp, #168]
   2772c:	ldr	x21, [sp, #152]
   27730:	ldr	x20, [sp, #176]
   27734:	ldr	x27, [sp, #184]
   27738:	str	wzr, [sp, #220]
   2773c:	ldr	x0, [x19, #200]
   27740:	cmp	x0, x20
   27744:	b.le	27350 <printf_parse@@Base+0x9f20>
   27748:	lsl	x0, x21, #3
   2774c:	str	x0, [sp, #160]
   27750:	add	x0, x21, x21, lsl #1
   27754:	lsl	x0, x0, #3
   27758:	str	x0, [sp, #152]
   2775c:	add	x22, x20, x20, lsl #2
   27760:	lsl	x22, x22, #3
   27764:	ldr	x26, [sp, #104]
   27768:	str	x27, [sp, #168]
   2776c:	b	2781c <printf_parse@@Base+0xa3ec>
   27770:	ldr	x1, [x28, #24]
   27774:	ldr	x2, [sp, #160]
   27778:	ldr	x24, [x1, x2]
   2777c:	add	x24, x24, x24, lsl #1
   27780:	ldr	x1, [x28, #48]
   27784:	add	x24, x1, x24, lsl #3
   27788:	b	2786c <printf_parse@@Base+0xa43c>
   2778c:	ldr	w3, [sp, #120]
   27790:	mov	x2, x24
   27794:	mov	x1, x28
   27798:	ldr	x0, [sp, #144]
   2779c:	bl	21950 <printf_parse@@Base+0x4520>
   277a0:	str	x0, [x25, x23, lsl #3]
   277a4:	ldr	x0, [x19, #184]
   277a8:	ldr	x0, [x0, x23, lsl #3]
   277ac:	cbnz	x0, 278f4 <printf_parse@@Base+0xa4c4>
   277b0:	ldr	w0, [sp, #220]
   277b4:	cbz	w0, 278f4 <printf_parse@@Base+0xa4c4>
   277b8:	ldp	x21, x22, [sp, #32]
   277bc:	ldp	x23, x24, [sp, #48]
   277c0:	ldp	x25, x26, [sp, #64]
   277c4:	b	277dc <printf_parse@@Base+0xa3ac>
   277c8:	ldr	x0, [sp, #208]
   277cc:	bl	aa50 <free@plt>
   277d0:	ldp	x21, x22, [sp, #32]
   277d4:	ldp	x23, x24, [sp, #48]
   277d8:	ldp	x25, x26, [sp, #64]
   277dc:	ldr	w0, [sp, #220]
   277e0:	ldp	x19, x20, [sp, #16]
   277e4:	ldp	x27, x28, [sp, #80]
   277e8:	ldp	x29, x30, [sp], #224
   277ec:	ret
   277f0:	ldr	w0, [sp, #220]
   277f4:	cbz	w0, 278f4 <printf_parse@@Base+0xa4c4>
   277f8:	ldp	x21, x22, [sp, #32]
   277fc:	ldp	x23, x24, [sp, #48]
   27800:	ldp	x25, x26, [sp, #64]
   27804:	b	277dc <printf_parse@@Base+0xa3ac>
   27808:	add	x20, x20, #0x1
   2780c:	add	x22, x22, #0x28
   27810:	ldr	x0, [x19, #200]
   27814:	cmp	x0, x20
   27818:	b.le	27950 <printf_parse@@Base+0xa520>
   2781c:	ldr	x0, [x19, #216]
   27820:	add	x1, x0, x22
   27824:	ldr	x0, [x0, x22]
   27828:	cmp	x0, x21
   2782c:	b.ne	27808 <printf_parse@@Base+0xa3d8>  // b.any
   27830:	ldr	x0, [x1, #8]
   27834:	cmp	x0, x26
   27838:	b.ne	27808 <printf_parse@@Base+0xa3d8>  // b.any
   2783c:	ldr	x0, [x1, #24]
   27840:	ldr	x23, [x1, #16]
   27844:	subs	x27, x0, x23
   27848:	b.ne	27770 <printf_parse@@Base+0xa340>  // b.any
   2784c:	ldr	x1, [x28, #40]
   27850:	ldr	x2, [sp, #152]
   27854:	add	x1, x1, x2
   27858:	ldr	x1, [x1, #16]
   2785c:	ldr	x24, [x1]
   27860:	add	x24, x24, x24, lsl #1
   27864:	ldr	x1, [x28, #48]
   27868:	add	x24, x1, x24, lsl #3
   2786c:	add	x0, x0, x26
   27870:	sub	x23, x0, x23
   27874:	ldr	w2, [x19, #160]
   27878:	sub	x1, x23, #0x1
   2787c:	mov	x0, x19
   27880:	bl	204b4 <printf_parse@@Base+0x3084>
   27884:	str	w0, [sp, #120]
   27888:	ldr	x25, [x19, #184]
   2788c:	ldr	x0, [x25, x23, lsl #3]
   27890:	ldr	x1, [sp, #128]
   27894:	ldr	x1, [x25, x1]
   27898:	str	xzr, [sp, #112]
   2789c:	cbz	x1, 278a8 <printf_parse@@Base+0xa478>
   278a0:	ldr	x1, [x1, #16]
   278a4:	str	x1, [sp, #112]
   278a8:	cbz	x0, 2778c <printf_parse@@Base+0xa35c>
   278ac:	mov	x2, x24
   278b0:	ldr	x1, [x0, #80]
   278b4:	ldr	x0, [sp, #136]
   278b8:	bl	20154 <printf_parse@@Base+0x2d24>
   278bc:	str	w0, [sp, #220]
   278c0:	cbnz	w0, 277c8 <printf_parse@@Base+0xa398>
   278c4:	ldr	x25, [x19, #184]
   278c8:	ldr	w3, [sp, #120]
   278cc:	ldr	x2, [sp, #136]
   278d0:	mov	x1, x28
   278d4:	ldr	x0, [sp, #144]
   278d8:	bl	21950 <printf_parse@@Base+0x4520>
   278dc:	str	x0, [x25, x23, lsl #3]
   278e0:	ldr	x0, [sp, #208]
   278e4:	bl	aa50 <free@plt>
   278e8:	ldr	x0, [x19, #184]
   278ec:	ldr	x0, [x0, x23, lsl #3]
   278f0:	cbz	x0, 277f0 <printf_parse@@Base+0xa3c0>
   278f4:	cbnz	x27, 27808 <printf_parse@@Base+0xa3d8>
   278f8:	ldr	x0, [x19, #184]
   278fc:	ldr	x1, [sp, #128]
   27900:	ldr	x0, [x0, x1]
   27904:	ldr	x0, [x0, #16]
   27908:	ldr	x1, [sp, #112]
   2790c:	cmp	x0, x1
   27910:	b.le	27808 <printf_parse@@Base+0xa3d8>
   27914:	mov	x2, x26
   27918:	mov	x1, x24
   2791c:	mov	x0, x19
   27920:	bl	1f3a8 <printf_parse@@Base+0x1f78>
   27924:	str	w0, [sp, #220]
   27928:	cbnz	w0, 2796c <printf_parse@@Base+0xa53c>
   2792c:	mov	x1, x24
   27930:	mov	x0, x19
   27934:	bl	272cc <printf_parse@@Base+0x9e9c>
   27938:	str	w0, [sp, #220]
   2793c:	cbz	w0, 27808 <printf_parse@@Base+0xa3d8>
   27940:	ldp	x21, x22, [sp, #32]
   27944:	ldp	x23, x24, [sp, #48]
   27948:	ldp	x25, x26, [sp, #64]
   2794c:	b	277dc <printf_parse@@Base+0xa3ac>
   27950:	ldr	x27, [sp, #168]
   27954:	b	27350 <printf_parse@@Base+0x9f20>
   27958:	ldp	x21, x22, [sp, #32]
   2795c:	ldp	x23, x24, [sp, #48]
   27960:	ldp	x25, x26, [sp, #64]
   27964:	str	wzr, [sp, #220]
   27968:	b	277dc <printf_parse@@Base+0xa3ac>
   2796c:	ldp	x21, x22, [sp, #32]
   27970:	ldp	x23, x24, [sp, #48]
   27974:	ldp	x25, x26, [sp, #64]
   27978:	b	277dc <printf_parse@@Base+0xa3ac>
   2797c:	mov	w0, #0xc                   	// #12
   27980:	str	w0, [sp, #220]
   27984:	ldp	x21, x22, [sp, #32]
   27988:	ldp	x23, x24, [sp, #48]
   2798c:	ldp	x25, x26, [sp, #64]
   27990:	b	277dc <printf_parse@@Base+0xa3ac>
   27994:	str	w0, [sp, #220]
   27998:	ldp	x21, x22, [sp, #32]
   2799c:	ldp	x23, x24, [sp, #48]
   279a0:	ldp	x25, x26, [sp, #64]
   279a4:	b	277dc <printf_parse@@Base+0xa3ac>
   279a8:	stp	x29, x30, [sp, #-112]!
   279ac:	mov	x29, sp
   279b0:	stp	x19, x20, [sp, #16]
   279b4:	stp	x21, x22, [sp, #32]
   279b8:	stp	x23, x24, [sp, #48]
   279bc:	mov	x23, x0
   279c0:	mov	x20, x1
   279c4:	mov	x19, x2
   279c8:	ldr	x22, [x1, #152]
   279cc:	ldr	x21, [x1, #72]
   279d0:	ldr	x1, [x1, #192]
   279d4:	cmp	x1, x21
   279d8:	b.ge	27a10 <printf_parse@@Base+0xa5e0>  // b.tcont
   279dc:	ldr	x0, [x20, #184]
   279e0:	str	x2, [x0, x21, lsl #3]
   279e4:	str	x21, [x20, #192]
   279e8:	ldr	x0, [x22, #152]
   279ec:	cmp	x0, #0x0
   279f0:	ccmp	x19, #0x0, #0x4, ne  // ne = any
   279f4:	b.ne	27adc <printf_parse@@Base+0xa6ac>  // b.any
   279f8:	mov	x0, x19
   279fc:	ldp	x19, x20, [sp, #16]
   27a00:	ldp	x21, x22, [sp, #32]
   27a04:	ldp	x23, x24, [sp, #48]
   27a08:	ldp	x29, x30, [sp], #112
   27a0c:	ret
   27a10:	ldr	x24, [x20, #184]
   27a14:	ldr	x0, [x24, x21, lsl #3]
   27a18:	cbz	x0, 27a8c <printf_parse@@Base+0xa65c>
   27a1c:	ldr	x2, [x0, #80]
   27a20:	cbz	x19, 27a94 <printf_parse@@Base+0xa664>
   27a24:	ldr	x24, [x19, #80]
   27a28:	mov	x1, x24
   27a2c:	add	x0, sp, #0x58
   27a30:	bl	20154 <printf_parse@@Base+0x2d24>
   27a34:	str	w0, [x23]
   27a38:	mov	x19, #0x0                   	// #0
   27a3c:	cbnz	w0, 279f8 <printf_parse@@Base+0xa5c8>
   27a40:	str	x25, [sp, #64]
   27a44:	ldr	x1, [x20, #72]
   27a48:	ldr	w2, [x20, #160]
   27a4c:	sub	x1, x1, #0x1
   27a50:	mov	x0, x20
   27a54:	bl	204b4 <printf_parse@@Base+0x3084>
   27a58:	ldr	x25, [x20, #184]
   27a5c:	mov	w3, w0
   27a60:	add	x2, sp, #0x58
   27a64:	mov	x1, x22
   27a68:	mov	x0, x23
   27a6c:	bl	21950 <printf_parse@@Base+0x4520>
   27a70:	mov	x19, x0
   27a74:	str	x0, [x25, x21, lsl #3]
   27a78:	cbz	x24, 27ad4 <printf_parse@@Base+0xa6a4>
   27a7c:	ldr	x0, [sp, #104]
   27a80:	bl	aa50 <free@plt>
   27a84:	ldr	x25, [sp, #64]
   27a88:	b	279e8 <printf_parse@@Base+0xa5b8>
   27a8c:	str	x2, [x24, x21, lsl #3]
   27a90:	b	279e8 <printf_parse@@Base+0xa5b8>
   27a94:	ldp	x0, x1, [x2]
   27a98:	stp	x0, x1, [sp, #88]
   27a9c:	ldr	x0, [x2, #16]
   27aa0:	str	x0, [sp, #104]
   27aa4:	ldr	w2, [x20, #160]
   27aa8:	sub	x1, x21, #0x1
   27aac:	mov	x0, x20
   27ab0:	bl	204b4 <printf_parse@@Base+0x3084>
   27ab4:	mov	w3, w0
   27ab8:	add	x2, sp, #0x58
   27abc:	mov	x1, x22
   27ac0:	mov	x0, x23
   27ac4:	bl	21950 <printf_parse@@Base+0x4520>
   27ac8:	mov	x19, x0
   27acc:	str	x0, [x24, x21, lsl #3]
   27ad0:	b	279e8 <printf_parse@@Base+0xa5b8>
   27ad4:	ldr	x25, [sp, #64]
   27ad8:	b	279e8 <printf_parse@@Base+0xa5b8>
   27adc:	add	x22, x19, #0x8
   27ae0:	mov	x2, x21
   27ae4:	mov	x1, x22
   27ae8:	mov	x0, x20
   27aec:	bl	1f3a8 <printf_parse@@Base+0x1f78>
   27af0:	str	w0, [x23]
   27af4:	cbnz	w0, 27b20 <printf_parse@@Base+0xa6f0>
   27af8:	ldrb	w0, [x19, #104]
   27afc:	tbz	w0, #6, 279f8 <printf_parse@@Base+0xa5c8>
   27b00:	mov	x1, x22
   27b04:	mov	x0, x20
   27b08:	bl	272cc <printf_parse@@Base+0x9e9c>
   27b0c:	str	w0, [x23]
   27b10:	cbnz	w0, 27b28 <printf_parse@@Base+0xa6f8>
   27b14:	ldr	x0, [x20, #184]
   27b18:	ldr	x19, [x0, x21, lsl #3]
   27b1c:	b	279f8 <printf_parse@@Base+0xa5c8>
   27b20:	mov	x19, #0x0                   	// #0
   27b24:	b	279f8 <printf_parse@@Base+0xa5c8>
   27b28:	mov	x19, #0x0                   	// #0
   27b2c:	b	279f8 <printf_parse@@Base+0xa5c8>
   27b30:	stp	x29, x30, [sp, #-240]!
   27b34:	mov	x29, sp
   27b38:	stp	x19, x20, [sp, #16]
   27b3c:	stp	x21, x22, [sp, #32]
   27b40:	stp	x23, x24, [sp, #48]
   27b44:	stp	x25, x26, [sp, #64]
   27b48:	mov	x22, x0
   27b4c:	mov	x20, x1
   27b50:	mov	x19, x2
   27b54:	mov	x24, x3
   27b58:	ldr	x25, [x0, #152]
   27b5c:	str	wzr, [sp, #236]
   27b60:	lsl	x0, x2, #3
   27b64:	str	x0, [sp, #104]
   27b68:	ldr	x0, [x22, #184]
   27b6c:	ldr	x23, [x0, x2, lsl #3]
   27b70:	cbz	x23, 27c50 <printf_parse@@Base+0xa820>
   27b74:	add	x23, x23, #0x8
   27b78:	ldr	x0, [x3, #8]
   27b7c:	cbz	x0, 27c58 <printf_parse@@Base+0xa828>
   27b80:	str	wzr, [sp, #176]
   27b84:	mov	x2, x3
   27b88:	mov	x1, x25
   27b8c:	add	x0, sp, #0xb0
   27b90:	bl	265b8 <printf_parse@@Base+0x9188>
   27b94:	mov	x26, x0
   27b98:	ldr	w21, [sp, #176]
   27b9c:	cbnz	w21, 27c7c <printf_parse@@Base+0xa84c>
   27ba0:	ldr	x21, [x0, #56]
   27ba4:	cbnz	x21, 27c08 <printf_parse@@Base+0xa7d8>
   27ba8:	stp	x27, x28, [sp, #80]
   27bac:	add	x27, x0, #0x38
   27bb0:	ldr	x1, [x24, #8]
   27bb4:	mov	x0, x27
   27bb8:	bl	1f254 <printf_parse@@Base+0x1e24>
   27bbc:	str	w0, [sp, #176]
   27bc0:	cbnz	w0, 28160 <printf_parse@@Base+0xad30>
   27bc4:	ldr	x0, [x24, #8]
   27bc8:	cmp	x0, #0x0
   27bcc:	b.le	27c98 <printf_parse@@Base+0xa868>
   27bd0:	ldr	x0, [x24, #16]
   27bd4:	ldr	x1, [x0, x21, lsl #3]
   27bd8:	add	x1, x1, x1, lsl #1
   27bdc:	ldr	x0, [x25, #56]
   27be0:	add	x1, x0, x1, lsl #3
   27be4:	mov	x0, x27
   27be8:	bl	1ff2c <printf_parse@@Base+0x2afc>
   27bec:	str	w0, [sp, #176]
   27bf0:	cbnz	w0, 2816c <printf_parse@@Base+0xad3c>
   27bf4:	add	x21, x21, #0x1
   27bf8:	ldr	x0, [x24, #8]
   27bfc:	cmp	x21, x0
   27c00:	b.lt	27bd0 <printf_parse@@Base+0xa7a0>  // b.tstop
   27c04:	ldp	x27, x28, [sp, #80]
   27c08:	add	x2, x26, #0x38
   27c0c:	mov	x1, x23
   27c10:	mov	x0, x24
   27c14:	bl	202fc <printf_parse@@Base+0x2ecc>
   27c18:	mov	w21, w0
   27c1c:	str	w0, [sp, #236]
   27c20:	cbnz	w0, 27c7c <printf_parse@@Base+0xa84c>
   27c24:	ldr	x0, [x20, #40]
   27c28:	cbnz	x0, 27ca0 <printf_parse@@Base+0xa870>
   27c2c:	ldr	x21, [x20]
   27c30:	mov	x2, x24
   27c34:	mov	x1, x25
   27c38:	add	x0, sp, #0xec
   27c3c:	bl	265b8 <printf_parse@@Base+0x9188>
   27c40:	str	x0, [x21, x19, lsl #3]
   27c44:	ldr	w21, [sp, #236]
   27c48:	cbz	w21, 27c68 <printf_parse@@Base+0xa838>
   27c4c:	b	27c7c <printf_parse@@Base+0xa84c>
   27c50:	ldr	x0, [x3, #8]
   27c54:	cbnz	x0, 27eb4 <printf_parse@@Base+0xaa84>
   27c58:	ldr	x0, [x20]
   27c5c:	str	xzr, [x0, x19, lsl #3]
   27c60:	mov	w21, #0x0                   	// #0
   27c64:	cbz	x23, 27c7c <printf_parse@@Base+0xa84c>
   27c68:	ldr	x0, [x22, #184]
   27c6c:	ldr	x0, [x0, x19, lsl #3]
   27c70:	ldrb	w0, [x0, #104]
   27c74:	mov	w21, #0x0                   	// #0
   27c78:	tbnz	w0, #6, 27ed4 <printf_parse@@Base+0xaaa4>
   27c7c:	mov	w0, w21
   27c80:	ldp	x19, x20, [sp, #16]
   27c84:	ldp	x21, x22, [sp, #32]
   27c88:	ldp	x23, x24, [sp, #48]
   27c8c:	ldp	x25, x26, [sp, #64]
   27c90:	ldp	x29, x30, [sp], #240
   27c94:	ret
   27c98:	ldp	x27, x28, [sp, #80]
   27c9c:	b	27c08 <printf_parse@@Base+0xa7d8>
   27ca0:	ldr	x0, [x22, #216]
   27ca4:	str	x0, [sp, #112]
   27ca8:	ldr	x0, [x20, #40]
   27cac:	cmp	x0, #0x0
   27cb0:	b.le	27eac <printf_parse@@Base+0xaa7c>
   27cb4:	stp	x27, x28, [sp, #80]
   27cb8:	mov	x27, #0x0                   	// #0
   27cbc:	b	27d4c <printf_parse@@Base+0xa91c>
   27cc0:	ldr	x6, [x24, #8]
   27cc4:	cmp	x6, #0x0
   27cc8:	b.le	27d3c <printf_parse@@Base+0xa90c>
   27ccc:	ldr	x0, [x24, #16]
   27cd0:	add	x6, x0, x6, lsl #3
   27cd4:	mov	x1, #0xffffffffffffffff    	// #-1
   27cd8:	str	x1, [sp, #96]
   27cdc:	b	27cf8 <printf_parse@@Base+0xa8c8>
   27ce0:	ldr	x2, [x5, x4]
   27ce4:	cmp	x28, x2
   27ce8:	csel	x1, x1, x3, ne  // ne = any
   27cec:	add	x0, x0, #0x8
   27cf0:	cmp	x0, x6
   27cf4:	b.eq	27d30 <printf_parse@@Base+0xa900>  // b.none
   27cf8:	ldr	x3, [x0]
   27cfc:	lsl	x4, x3, #4
   27d00:	add	x2, x5, x4
   27d04:	ldrb	w2, [x2, #8]
   27d08:	cmp	w2, #0x8
   27d0c:	b.eq	27ce0 <printf_parse@@Base+0xa8b0>  // b.none
   27d10:	cmp	w2, #0x9
   27d14:	b.ne	27cec <printf_parse@@Base+0xa8bc>  // b.any
   27d18:	ldr	x2, [x5, x4]
   27d1c:	cmp	x28, x2
   27d20:	ldr	x2, [sp, #96]
   27d24:	csel	x2, x2, x3, ne  // ne = any
   27d28:	str	x2, [sp, #96]
   27d2c:	b	27cec <printf_parse@@Base+0xa8bc>
   27d30:	tbz	x1, #63, 27da8 <printf_parse@@Base+0xa978>
   27d34:	ldr	x0, [sp, #96]
   27d38:	tbz	x0, #63, 27dd4 <printf_parse@@Base+0xa9a4>
   27d3c:	add	x27, x27, #0x1
   27d40:	ldr	x0, [x20, #40]
   27d44:	cmp	x27, x0
   27d48:	b.ge	27ea8 <printf_parse@@Base+0xaa78>  // b.tcont
   27d4c:	ldr	x0, [x20, #48]
   27d50:	ldr	x0, [x0, x27, lsl #3]
   27d54:	add	x0, x0, x0, lsl #2
   27d58:	ldr	x3, [sp, #112]
   27d5c:	add	x1, x3, x0, lsl #3
   27d60:	ldr	x2, [x1, #16]
   27d64:	cmp	x19, x2
   27d68:	b.le	27d3c <printf_parse@@Base+0xa90c>
   27d6c:	ldr	x2, [x1, #8]
   27d70:	cmp	x19, x2
   27d74:	b.gt	27d3c <printf_parse@@Base+0xa90c>
   27d78:	ldr	x5, [x25]
   27d7c:	ldr	x0, [x3, x0, lsl #3]
   27d80:	lsl	x0, x0, #4
   27d84:	ldr	x28, [x5, x0]
   27d88:	ldr	x0, [x1, #24]
   27d8c:	cmp	x19, x0
   27d90:	b.eq	27cc0 <printf_parse@@Base+0xa890>  // b.none
   27d94:	ldr	x0, [x24, #8]
   27d98:	mov	x26, #0x0                   	// #0
   27d9c:	cmp	x0, #0x0
   27da0:	b.gt	27e58 <printf_parse@@Base+0xaa28>
   27da4:	b	27d3c <printf_parse@@Base+0xa90c>
   27da8:	mov	x3, x23
   27dac:	mov	x2, x24
   27db0:	mov	x0, x25
   27db4:	bl	21f80 <printf_parse@@Base+0x4b50>
   27db8:	mov	w21, w0
   27dbc:	cbnz	w0, 28178 <printf_parse@@Base+0xad48>
   27dc0:	ldr	x0, [sp, #96]
   27dc4:	tbnz	x0, #63, 27d3c <printf_parse@@Base+0xa90c>
   27dc8:	ldr	x0, [x24, #8]
   27dcc:	cmp	x0, #0x0
   27dd0:	b.le	27d3c <printf_parse@@Base+0xa90c>
   27dd4:	mov	x26, #0x0                   	// #0
   27dd8:	b	27dec <printf_parse@@Base+0xa9bc>
   27ddc:	add	x26, x26, #0x1
   27de0:	ldr	x0, [x24, #8]
   27de4:	cmp	x26, x0
   27de8:	b.ge	27d3c <printf_parse@@Base+0xa90c>  // b.tcont
   27dec:	ldr	x0, [x24, #16]
   27df0:	ldr	x21, [x0, x26, lsl #3]
   27df4:	add	x28, x21, x21, lsl #1
   27df8:	lsl	x28, x28, #3
   27dfc:	ldr	x0, [x25, #56]
   27e00:	ldr	x1, [sp, #96]
   27e04:	add	x0, x0, x28
   27e08:	bl	1e034 <printf_parse@@Base+0xc04>
   27e0c:	cbnz	x0, 27ddc <printf_parse@@Base+0xa9ac>
   27e10:	ldr	x0, [x25, #48]
   27e14:	ldr	x1, [sp, #96]
   27e18:	add	x0, x0, x28
   27e1c:	bl	1e034 <printf_parse@@Base+0xc04>
   27e20:	cbnz	x0, 27ddc <printf_parse@@Base+0xa9ac>
   27e24:	mov	x3, x23
   27e28:	mov	x2, x24
   27e2c:	mov	x1, x21
   27e30:	mov	x0, x25
   27e34:	bl	21f80 <printf_parse@@Base+0x4b50>
   27e38:	mov	w21, w0
   27e3c:	cbnz	w0, 28180 <printf_parse@@Base+0xad50>
   27e40:	sub	x26, x26, #0x1
   27e44:	b	27ddc <printf_parse@@Base+0xa9ac>
   27e48:	add	x26, x26, #0x1
   27e4c:	ldr	x0, [x24, #8]
   27e50:	cmp	x26, x0
   27e54:	b.ge	27d3c <printf_parse@@Base+0xa90c>  // b.tcont
   27e58:	ldr	x0, [x24, #16]
   27e5c:	ldr	x1, [x0, x26, lsl #3]
   27e60:	lsl	x2, x1, #4
   27e64:	ldr	x3, [x25]
   27e68:	add	x0, x3, x2
   27e6c:	ldrb	w0, [x0, #8]
   27e70:	sub	w0, w0, #0x8
   27e74:	cmp	w0, #0x1
   27e78:	b.hi	27e48 <printf_parse@@Base+0xaa18>  // b.pmore
   27e7c:	ldr	x0, [x3, x2]
   27e80:	cmp	x28, x0
   27e84:	b.ne	27e48 <printf_parse@@Base+0xaa18>  // b.any
   27e88:	mov	x3, x23
   27e8c:	mov	x2, x24
   27e90:	mov	x0, x25
   27e94:	bl	21f80 <printf_parse@@Base+0x4b50>
   27e98:	mov	w21, w0
   27e9c:	cbz	w0, 27e48 <printf_parse@@Base+0xaa18>
   27ea0:	ldp	x27, x28, [sp, #80]
   27ea4:	b	27c7c <printf_parse@@Base+0xa84c>
   27ea8:	ldp	x27, x28, [sp, #80]
   27eac:	str	wzr, [sp, #236]
   27eb0:	b	27c2c <printf_parse@@Base+0xa7fc>
   27eb4:	ldr	x20, [x1]
   27eb8:	mov	x2, x3
   27ebc:	mov	x1, x25
   27ec0:	add	x0, sp, #0xec
   27ec4:	bl	265b8 <printf_parse@@Base+0x9188>
   27ec8:	str	x0, [x20, x19, lsl #3]
   27ecc:	ldr	w21, [sp, #236]
   27ed0:	b	27c7c <printf_parse@@Base+0xa84c>
   27ed4:	mov	x1, x19
   27ed8:	mov	x0, x22
   27edc:	bl	1e62c <printf_parse@@Base+0x11fc>
   27ee0:	mov	x1, x0
   27ee4:	str	x0, [sp, #160]
   27ee8:	cmn	x0, #0x1
   27eec:	b.eq	27c7c <printf_parse@@Base+0xa84c>  // b.none
   27ef0:	stp	x27, x28, [sp, #80]
   27ef4:	ldr	x28, [x22, #152]
   27ef8:	str	xzr, [sp, #176]
   27efc:	ldr	x0, [x23, #8]
   27f00:	cmp	x0, #0x0
   27f04:	b.le	28154 <printf_parse@@Base+0xad24>
   27f08:	add	x0, x1, x1, lsl #2
   27f0c:	lsl	x0, x0, #3
   27f10:	str	x0, [sp, #168]
   27f14:	mov	x27, #0x0                   	// #0
   27f18:	add	x0, sp, #0xb0
   27f1c:	str	x0, [sp, #144]
   27f20:	add	x1, x20, #0x20
   27f24:	str	x1, [sp, #136]
   27f28:	add	x0, sp, #0xd0
   27f2c:	str	x0, [sp, #128]
   27f30:	b	27f4c <printf_parse@@Base+0xab1c>
   27f34:	cmp	w1, #0x4
   27f38:	b.eq	27f7c <printf_parse@@Base+0xab4c>  // b.none
   27f3c:	add	x27, x27, #0x1
   27f40:	ldr	x0, [x23, #8]
   27f44:	cmp	x27, x0
   27f48:	b.ge	28130 <printf_parse@@Base+0xad00>  // b.tcont
   27f4c:	ldr	x0, [x23, #16]
   27f50:	ldr	x24, [x0, x27, lsl #3]
   27f54:	ldr	x0, [x28]
   27f58:	add	x0, x0, x24, lsl #4
   27f5c:	ldrb	w1, [x0, #8]
   27f60:	ldr	x0, [x20, #16]
   27f64:	cmp	x24, x0
   27f68:	b.ne	27f34 <printf_parse@@Base+0xab04>  // b.any
   27f6c:	ldr	x0, [x20, #24]
   27f70:	cmp	x19, x0
   27f74:	b.ne	27f34 <printf_parse@@Base+0xab04>  // b.any
   27f78:	b	27f3c <printf_parse@@Base+0xab0c>
   27f7c:	ldr	x21, [x22, #216]
   27f80:	ldr	x0, [sp, #168]
   27f84:	add	x21, x21, x0
   27f88:	add	x0, x24, x24, lsl #1
   27f8c:	lsl	x0, x0, #3
   27f90:	str	x0, [sp, #120]
   27f94:	lsl	x0, x24, #3
   27f98:	str	x0, [sp, #112]
   27f9c:	ldr	x25, [sp, #160]
   27fa0:	add	x0, x19, #0x1
   27fa4:	str	x0, [sp, #152]
   27fa8:	b	2804c <printf_parse@@Base+0xac1c>
   27fac:	ldr	x0, [x28, #40]
   27fb0:	ldr	x1, [sp, #120]
   27fb4:	add	x0, x0, x1
   27fb8:	ldr	x0, [x0, #16]
   27fbc:	ldr	x0, [x0]
   27fc0:	str	x0, [sp, #96]
   27fc4:	b	2807c <printf_parse@@Base+0xac4c>
   27fc8:	ldp	x0, x1, [x20]
   27fcc:	ldr	x2, [sp, #144]
   27fd0:	stp	x0, x1, [x2]
   27fd4:	ldp	x0, x1, [x20, #16]
   27fd8:	stp	x0, x1, [x2, #16]
   27fdc:	ldp	x0, x1, [x20, #32]
   27fe0:	stp	x0, x1, [x2, #32]
   27fe4:	ldr	x0, [x20, #48]
   27fe8:	str	x0, [x2, #48]
   27fec:	ldr	x1, [sp, #136]
   27ff0:	ldr	x0, [sp, #128]
   27ff4:	bl	200dc <printf_parse@@Base+0x2cac>
   27ff8:	mov	w21, w0
   27ffc:	cbz	w0, 280d0 <printf_parse@@Base+0xaca0>
   28000:	b	2813c <printf_parse@@Base+0xad0c>
   28004:	ldr	x0, [sp, #176]
   28008:	ldr	x1, [sp, #104]
   2800c:	str	x26, [x0, x1]
   28010:	mov	x1, x25
   28014:	ldr	x21, [sp, #128]
   28018:	mov	x0, x21
   2801c:	bl	1e034 <printf_parse@@Base+0xc04>
   28020:	sub	x1, x0, #0x1
   28024:	mov	x0, x21
   28028:	bl	1e094 <printf_parse@@Base+0xc64>
   2802c:	add	x21, x25, x25, lsl #2
   28030:	ldr	x0, [x22, #216]
   28034:	add	x21, x0, x21, lsl #3
   28038:	add	x25, x25, #0x1
   2803c:	add	x1, x21, #0x28
   28040:	ldrb	w0, [x21, #32]
   28044:	cbz	w0, 27f3c <printf_parse@@Base+0xab0c>
   28048:	mov	x21, x1
   2804c:	ldr	x0, [x21]
   28050:	cmp	x24, x0
   28054:	b.ne	28038 <printf_parse@@Base+0xac08>  // b.any
   28058:	ldr	x0, [x21, #24]
   2805c:	ldr	x1, [x21, #16]
   28060:	sub	x0, x0, x1
   28064:	add	x26, x19, x0
   28068:	cbz	x0, 27fac <printf_parse@@Base+0xab7c>
   2806c:	ldr	x0, [x28, #24]
   28070:	ldr	x1, [sp, #112]
   28074:	ldr	x0, [x0, x1]
   28078:	str	x0, [sp, #96]
   2807c:	ldr	x0, [x20, #24]
   28080:	cmp	x26, x0
   28084:	b.gt	28038 <printf_parse@@Base+0xac08>
   28088:	ldr	x0, [x20]
   2808c:	ldr	x0, [x0, x26, lsl #3]
   28090:	cbz	x0, 28038 <printf_parse@@Base+0xac08>
   28094:	ldr	x1, [sp, #96]
   28098:	add	x0, x0, #0x8
   2809c:	bl	1e034 <printf_parse@@Base+0xc04>
   280a0:	cbz	x0, 28038 <printf_parse@@Base+0xac08>
   280a4:	mov	x5, x26
   280a8:	ldr	x4, [sp, #96]
   280ac:	mov	x3, x19
   280b0:	mov	x2, x24
   280b4:	ldr	x1, [sp, #136]
   280b8:	mov	x0, x22
   280bc:	bl	1e6a4 <printf_parse@@Base+0x1274>
   280c0:	and	w0, w0, #0xff
   280c4:	cbnz	w0, 28038 <printf_parse@@Base+0xac08>
   280c8:	ldr	x0, [sp, #176]
   280cc:	cbz	x0, 27fc8 <printf_parse@@Base+0xab98>
   280d0:	str	x24, [sp, #192]
   280d4:	str	x19, [sp, #200]
   280d8:	mov	x1, x25
   280dc:	ldr	x0, [sp, #128]
   280e0:	bl	1f018 <printf_parse@@Base+0x1be8>
   280e4:	and	w0, w0, #0xff
   280e8:	cbz	w0, 28138 <printf_parse@@Base+0xad08>
   280ec:	ldr	x0, [sp, #176]
   280f0:	ldr	x1, [sp, #104]
   280f4:	ldr	x26, [x0, x1]
   280f8:	ldr	x1, [sp, #144]
   280fc:	mov	x0, x22
   28100:	bl	28190 <printf_parse@@Base+0xad60>
   28104:	mov	w21, w0
   28108:	cbnz	w0, 2813c <printf_parse@@Base+0xad0c>
   2810c:	ldr	x1, [x20, #8]
   28110:	cbz	x1, 28004 <printf_parse@@Base+0xabd4>
   28114:	ldr	x3, [sp, #152]
   28118:	ldr	x2, [sp, #176]
   2811c:	mov	x0, x28
   28120:	bl	26a2c <printf_parse@@Base+0x95fc>
   28124:	mov	w21, w0
   28128:	cbz	w0, 28004 <printf_parse@@Base+0xabd4>
   2812c:	b	2813c <printf_parse@@Base+0xad0c>
   28130:	mov	w21, #0x0                   	// #0
   28134:	b	2813c <printf_parse@@Base+0xad0c>
   28138:	mov	w21, #0xc                   	// #12
   2813c:	ldr	x0, [sp, #176]
   28140:	cbz	x0, 28188 <printf_parse@@Base+0xad58>
   28144:	ldr	x0, [sp, #224]
   28148:	bl	aa50 <free@plt>
   2814c:	ldp	x27, x28, [sp, #80]
   28150:	b	27c7c <printf_parse@@Base+0xa84c>
   28154:	mov	w21, #0x0                   	// #0
   28158:	ldp	x27, x28, [sp, #80]
   2815c:	b	27c7c <printf_parse@@Base+0xa84c>
   28160:	mov	w21, #0xc                   	// #12
   28164:	ldp	x27, x28, [sp, #80]
   28168:	b	27c7c <printf_parse@@Base+0xa84c>
   2816c:	mov	w21, #0xc                   	// #12
   28170:	ldp	x27, x28, [sp, #80]
   28174:	b	27c7c <printf_parse@@Base+0xa84c>
   28178:	ldp	x27, x28, [sp, #80]
   2817c:	b	27c7c <printf_parse@@Base+0xa84c>
   28180:	ldp	x27, x28, [sp, #80]
   28184:	b	27c7c <printf_parse@@Base+0xa84c>
   28188:	ldp	x27, x28, [sp, #80]
   2818c:	b	27c7c <printf_parse@@Base+0xa84c>
   28190:	stp	x29, x30, [sp, #-176]!
   28194:	mov	x29, sp
   28198:	stp	x19, x20, [sp, #16]
   2819c:	stp	x21, x22, [sp, #32]
   281a0:	stp	x23, x24, [sp, #48]
   281a4:	mov	x20, x0
   281a8:	mov	x23, x1
   281ac:	ldr	x19, [x1, #24]
   281b0:	ldr	x1, [x1, #16]
   281b4:	add	x0, sp, #0x98
   281b8:	bl	1efc4 <printf_parse@@Base+0x1b94>
   281bc:	mov	w21, w0
   281c0:	cbnz	w0, 283f4 <printf_parse@@Base+0xafc4>
   281c4:	add	x3, sp, #0x98
   281c8:	mov	x2, x19
   281cc:	mov	x1, x23
   281d0:	mov	x0, x20
   281d4:	bl	27b30 <printf_parse@@Base+0xa700>
   281d8:	str	w0, [sp, #140]
   281dc:	cbnz	w0, 283d8 <printf_parse@@Base+0xafa8>
   281e0:	stp	x25, x26, [sp, #64]
   281e4:	stp	x27, x28, [sp, #80]
   281e8:	mov	w27, w0
   281ec:	str	w0, [sp, #136]
   281f0:	add	x0, sp, #0x98
   281f4:	str	x0, [sp, #104]
   281f8:	add	x0, x23, #0x20
   281fc:	str	x0, [sp, #128]
   28200:	b	28364 <printf_parse@@Base+0xaf34>
   28204:	ldr	x2, [sp, #96]
   28208:	mov	w1, #0x0                   	// #0
   2820c:	bl	a6f0 <memset@plt>
   28210:	ldr	x0, [sp, #168]
   28214:	bl	aa50 <free@plt>
   28218:	ldr	w21, [sp, #140]
   2821c:	ldp	x25, x26, [sp, #64]
   28220:	ldp	x27, x28, [sp, #80]
   28224:	b	283f4 <printf_parse@@Base+0xafc4>
   28228:	ldr	x0, [x23, #24]
   2822c:	str	x0, [sp, #112]
   28230:	ldr	x0, [x20, #152]
   28234:	mov	x3, x19
   28238:	mov	x2, x20
   2823c:	mov	x1, x22
   28240:	str	x0, [sp, #120]
   28244:	bl	23c80 <printf_parse@@Base+0x6850>
   28248:	mov	w21, w0
   2824c:	cmp	w0, #0x0
   28250:	b.le	28340 <printf_parse@@Base+0xaf10>
   28254:	add	x0, x19, w0, sxtw
   28258:	ldr	x2, [sp, #112]
   2825c:	cmp	x2, x0
   28260:	b.lt	28288 <printf_parse@@Base+0xae58>  // b.tstop
   28264:	ldr	x1, [x23]
   28268:	ldr	x0, [x1, x0, lsl #3]
   2826c:	cbz	x0, 282f8 <printf_parse@@Base+0xaec8>
   28270:	ldr	x1, [sp, #120]
   28274:	ldr	x1, [x1, #24]
   28278:	ldr	x1, [x1, x22, lsl #3]
   2827c:	add	x0, x0, #0x8
   28280:	bl	1e034 <printf_parse@@Base+0xc04>
   28284:	cbz	x0, 282f8 <printf_parse@@Base+0xaec8>
   28288:	ldr	x0, [x23, #40]
   2828c:	cbz	x0, 282b8 <printf_parse@@Base+0xae88>
   28290:	ldr	x0, [x24, #24]
   28294:	mov	x5, x19
   28298:	mov	x4, x22
   2829c:	add	x3, x19, w21, sxtw
   282a0:	ldr	x2, [x0, x22, lsl #3]
   282a4:	ldr	x1, [sp, #128]
   282a8:	mov	x0, x20
   282ac:	bl	1e6a4 <printf_parse@@Base+0x1274>
   282b0:	and	w0, w0, #0xff
   282b4:	cbnz	w0, 282cc <printf_parse@@Base+0xae9c>
   282b8:	mov	x1, x22
   282bc:	ldr	x0, [sp, #104]
   282c0:	bl	1f018 <printf_parse@@Base+0x1be8>
   282c4:	and	w0, w0, #0xff
   282c8:	cbz	w0, 283e0 <printf_parse@@Base+0xafb0>
   282cc:	add	x25, x25, #0x1
   282d0:	ldr	x0, [x26, #40]
   282d4:	cmp	x25, x0
   282d8:	b.ge	28348 <printf_parse@@Base+0xaf18>  // b.tcont
   282dc:	ldr	x0, [x26, #48]
   282e0:	ldr	x22, [x0, x25, lsl #3]
   282e4:	lsl	x28, x22, #4
   282e8:	ldr	x0, [x24]
   282ec:	add	x0, x0, x28
   282f0:	ldrb	w0, [x0, #10]
   282f4:	tbnz	w0, #4, 28228 <printf_parse@@Base+0xadf8>
   282f8:	ldr	x1, [x24]
   282fc:	mov	x2, x19
   28300:	add	x1, x1, x28
   28304:	mov	x0, x20
   28308:	bl	205b0 <printf_parse@@Base+0x3180>
   2830c:	and	w0, w0, #0xff
   28310:	cbz	w0, 282cc <printf_parse@@Base+0xae9c>
   28314:	ldr	x0, [x23]
   28318:	ldr	x1, [sp, #96]
   2831c:	ldr	x0, [x0, x1]
   28320:	cbz	x0, 282cc <printf_parse@@Base+0xae9c>
   28324:	ldr	x1, [x24, #24]
   28328:	ldr	x1, [x1, x22, lsl #3]
   2832c:	add	x0, x0, #0x8
   28330:	bl	1e034 <printf_parse@@Base+0xc04>
   28334:	cbz	x0, 282cc <printf_parse@@Base+0xae9c>
   28338:	mov	w21, #0x1                   	// #1
   2833c:	b	28288 <printf_parse@@Base+0xae58>
   28340:	cbz	w0, 282f8 <printf_parse@@Base+0xaec8>
   28344:	b	28288 <printf_parse@@Base+0xae58>
   28348:	ldr	x3, [sp, #104]
   2834c:	mov	x2, x19
   28350:	mov	x1, x23
   28354:	mov	x0, x20
   28358:	bl	27b30 <printf_parse@@Base+0xa700>
   2835c:	mov	w21, w0
   28360:	cbnz	w0, 2840c <printf_parse@@Base+0xafdc>
   28364:	cmp	x19, #0x0
   28368:	b.le	283c8 <printf_parse@@Base+0xaf98>
   2836c:	ldr	x0, [x23]
   28370:	lsl	x1, x19, #3
   28374:	str	x1, [sp, #96]
   28378:	ldr	x1, [x0, x19, lsl #3]
   2837c:	cmp	x1, #0x0
   28380:	ldr	w1, [sp, #136]
   28384:	csinc	w27, w1, w27, ne  // ne = any
   28388:	ldr	w1, [x20, #224]
   2838c:	cmp	w1, w27
   28390:	b.lt	28204 <printf_parse@@Base+0xadd4>  // b.tstop
   28394:	str	xzr, [sp, #160]
   28398:	sub	x19, x19, #0x1
   2839c:	ldr	x0, [x20, #184]
   283a0:	ldr	x1, [sp, #96]
   283a4:	add	x0, x0, x1
   283a8:	ldur	x26, [x0, #-8]
   283ac:	cbz	x26, 28348 <printf_parse@@Base+0xaf18>
   283b0:	ldr	x24, [x20, #152]
   283b4:	ldr	x0, [x26, #40]
   283b8:	cmp	x0, #0x0
   283bc:	b.le	28348 <printf_parse@@Base+0xaf18>
   283c0:	mov	x25, #0x0                   	// #0
   283c4:	b	282dc <printf_parse@@Base+0xaeac>
   283c8:	ldr	w21, [sp, #140]
   283cc:	ldp	x25, x26, [sp, #64]
   283d0:	ldp	x27, x28, [sp, #80]
   283d4:	b	283ec <printf_parse@@Base+0xafbc>
   283d8:	ldr	w21, [sp, #140]
   283dc:	b	283ec <printf_parse@@Base+0xafbc>
   283e0:	mov	w21, #0xc                   	// #12
   283e4:	ldp	x25, x26, [sp, #64]
   283e8:	ldp	x27, x28, [sp, #80]
   283ec:	ldr	x0, [sp, #168]
   283f0:	bl	aa50 <free@plt>
   283f4:	mov	w0, w21
   283f8:	ldp	x19, x20, [sp, #16]
   283fc:	ldp	x21, x22, [sp, #32]
   28400:	ldp	x23, x24, [sp, #48]
   28404:	ldp	x29, x30, [sp], #176
   28408:	ret
   2840c:	ldp	x25, x26, [sp, #64]
   28410:	ldp	x27, x28, [sp, #80]
   28414:	b	283ec <printf_parse@@Base+0xafbc>
   28418:	sub	sp, sp, #0x270
   2841c:	stp	x29, x30, [sp]
   28420:	mov	x29, sp
   28424:	stp	x19, x20, [sp, #16]
   28428:	stp	x21, x22, [sp, #32]
   2842c:	stp	x25, x26, [sp, #64]
   28430:	stp	x27, x28, [sp, #80]
   28434:	mov	x25, x0
   28438:	str	x1, [sp, #192]
   2843c:	str	x2, [sp, #176]
   28440:	mov	x19, x3
   28444:	mov	x21, x4
   28448:	mov	x22, x5
   2844c:	str	x6, [sp, #184]
   28450:	str	x7, [sp, #280]
   28454:	ldr	w0, [sp, #624]
   28458:	str	w0, [sp, #144]
   2845c:	ldr	x27, [x25]
   28460:	mov	x2, #0x100                 	// #256
   28464:	mov	w1, #0x0                   	// #0
   28468:	add	x0, sp, #0x168
   2846c:	bl	a6f0 <memset@plt>
   28470:	str	x27, [sp, #512]
   28474:	ldr	x0, [x25, #32]
   28478:	str	x0, [sp, #112]
   2847c:	cbz	x0, 28494 <printf_parse@@Base+0xb064>
   28480:	ldrb	w0, [x25, #56]
   28484:	tst	x0, #0x8
   28488:	ccmp	x19, x21, #0x4, ne  // ne = any
   2848c:	b.ne	287a0 <printf_parse@@Base+0xb370>  // b.any
   28490:	str	xzr, [sp, #112]
   28494:	ldr	x1, [x25, #48]
   28498:	ldr	x2, [sp, #184]
   2849c:	sub	x0, x2, #0x1
   284a0:	sub	x0, x0, x1
   284a4:	cmp	x1, x2
   284a8:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
   284ac:	str	x0, [sp, #240]
   284b0:	ldr	x0, [x25, #16]
   284b4:	cbz	x0, 29294 <printf_parse@@Base+0xbe64>
   284b8:	ldr	x0, [x27, #72]
   284bc:	cbz	x0, 292a0 <printf_parse@@Base+0xbe70>
   284c0:	ldr	x1, [x27, #80]
   284c4:	cbz	x1, 292ac <printf_parse@@Base+0xbe7c>
   284c8:	ldr	x2, [x27, #88]
   284cc:	cbz	x2, 292b8 <printf_parse@@Base+0xbe88>
   284d0:	ldr	x3, [x27, #96]
   284d4:	cbz	x3, 292c4 <printf_parse@@Base+0xbe94>
   284d8:	ldr	x0, [x0, #16]
   284dc:	cbnz	x0, 2850c <printf_parse@@Base+0xb0dc>
   284e0:	ldr	x0, [x1, #16]
   284e4:	cbnz	x0, 2850c <printf_parse@@Base+0xb0dc>
   284e8:	ldr	x1, [x2, #16]
   284ec:	cbz	x1, 284f8 <printf_parse@@Base+0xb0c8>
   284f0:	ldrsb	w1, [x25, #56]
   284f4:	tbnz	w1, #31, 2850c <printf_parse@@Base+0xb0dc>
   284f8:	cmp	x19, #0x0
   284fc:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   28500:	b.ne	292d0 <printf_parse@@Base+0xbea0>  // b.any
   28504:	mov	x21, x0
   28508:	mov	x19, x0
   2850c:	mov	w20, #0x1                   	// #1
   28510:	ldr	x0, [sp, #184]
   28514:	ldr	x1, [sp, #240]
   28518:	subs	x0, x0, x1
   2851c:	str	x0, [sp, #232]
   28520:	b.ne	28530 <printf_parse@@Base+0xb100>  // b.any
   28524:	ldr	x0, [x27, #152]
   28528:	cmp	x0, #0x0
   2852c:	cset	w20, ne  // ne = any
   28530:	ldr	x5, [x25, #40]
   28534:	str	x5, [sp, #248]
   28538:	ldr	x0, [x25, #24]
   2853c:	ldr	w3, [x27, #180]
   28540:	ldr	x1, [x27, #16]
   28544:	add	x1, x1, #0x1
   28548:	sxtw	x2, w3
   2854c:	cmp	x1, x2
   28550:	csel	x1, x1, x2, ge  // ge = tcont
   28554:	ldr	x4, [sp, #176]
   28558:	add	x2, x4, #0x1
   2855c:	cmp	x1, x2
   28560:	csel	x1, x1, x2, le
   28564:	ldr	x2, [sp, #192]
   28568:	str	x2, [sp, #360]
   2856c:	str	x4, [sp, #448]
   28570:	str	x4, [sp, #440]
   28574:	str	x5, [sp, #480]
   28578:	and	x2, x0, #0x400000
   2857c:	ubfx	w0, w0, #22, #1
   28580:	strb	w0, [sp, #496]
   28584:	orr	x0, x2, x5
   28588:	cmp	x0, #0x0
   2858c:	cset	w0, ne  // ne = any
   28590:	strb	w0, [sp, #499]
   28594:	str	w3, [sp, #504]
   28598:	ldrb	w0, [x27, #176]
   2859c:	ubfx	x2, x0, #2, #1
   285a0:	strb	w2, [sp, #497]
   285a4:	ubfx	x0, x0, #3, #1
   285a8:	strb	w0, [sp, #498]
   285ac:	str	x4, [sp, #464]
   285b0:	str	x4, [sp, #456]
   285b4:	add	x0, sp, #0x168
   285b8:	bl	1eb38 <printf_parse@@Base+0x1708>
   285bc:	str	w0, [sp, #212]
   285c0:	cbnz	w0, 291f4 <printf_parse@@Base+0xbdc4>
   285c4:	stp	x23, x24, [sp, #48]
   285c8:	add	x0, x27, #0xb8
   285cc:	str	x0, [sp, #488]
   285d0:	ldrb	w0, [x27, #176]
   285d4:	ubfx	x0, x0, #4, #1
   285d8:	strb	w0, [sp, #502]
   285dc:	ldrb	w0, [sp, #499]
   285e0:	cbz	w0, 29330 <printf_parse@@Base+0xbf00>
   285e4:	mov	x0, #0x0                   	// #0
   285e8:	str	x0, [sp, #408]
   285ec:	str	x0, [sp, #416]
   285f0:	str	x22, [sp, #464]
   285f4:	str	x22, [sp, #456]
   285f8:	ldrb	w0, [x25, #56]
   285fc:	ubfx	x0, x0, #7, #1
   28600:	strb	w0, [sp, #501]
   28604:	ldr	x0, [x27, #152]
   28608:	lsl	x22, x0, #1
   2860c:	ldr	w1, [sp, #144]
   28610:	str	w1, [sp, #520]
   28614:	mov	x1, #0xffffffffffffffff    	// #-1
   28618:	str	x1, [sp, #528]
   2861c:	cmp	xzr, x0, lsl #1
   28620:	b.ge	28660 <printf_parse@@Base+0xb230>  // b.tcont
   28624:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   28628:	movk	x0, #0x666, lsl #48
   2862c:	cmp	x22, x0
   28630:	b.hi	29320 <printf_parse@@Base+0xbef0>  // b.pmore
   28634:	add	x0, x22, x22, lsl #2
   28638:	lsl	x0, x0, #3
   2863c:	bl	a5f0 <malloc@plt>
   28640:	mov	x23, x0
   28644:	str	x0, [sp, #576]
   28648:	lsl	x0, x22, #3
   2864c:	bl	a5f0 <malloc@plt>
   28650:	str	x0, [sp, #608]
   28654:	cmp	x23, #0x0
   28658:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2865c:	b.eq	29320 <printf_parse@@Base+0xbef0>  // b.none
   28660:	str	x22, [sp, #568]
   28664:	mov	w0, #0x1                   	// #1
   28668:	str	w0, [sp, #584]
   2866c:	str	x22, [sp, #600]
   28670:	ldr	x0, [sp, #232]
   28674:	cmp	x0, #0x1
   28678:	b.ls	287b4 <printf_parse@@Base+0xb384>  // b.plast
   2867c:	ldr	x0, [sp, #424]
   28680:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
   28684:	cmp	x0, x1
   28688:	b.hi	29200 <printf_parse@@Base+0xbdd0>  // b.pmore
   2868c:	add	x0, x0, #0x1
   28690:	lsl	x0, x0, #3
   28694:	bl	a5f0 <malloc@plt>
   28698:	str	x0, [sp, #544]
   2869c:	cbz	x0, 29210 <printf_parse@@Base+0xbde0>
   286a0:	str	x19, [sp, #616]
   286a4:	ldr	x0, [sp, #144]
   286a8:	tst	x0, #0x1
   286ac:	mov	w0, #0x4                   	// #4
   286b0:	mov	w1, #0x6                   	// #6
   286b4:	csel	w0, w0, w1, ne  // ne = any
   286b8:	str	w0, [sp, #472]
   286bc:	mov	w0, #0x1                   	// #1
   286c0:	cmp	x19, x21
   286c4:	cneg	w0, w0, gt
   286c8:	str	w0, [sp, #224]
   286cc:	csel	x0, x19, x21, le
   286d0:	str	x0, [sp, #160]
   286d4:	csel	x0, x19, x21, ge  // ge = tcont
   286d8:	str	x0, [sp, #120]
   286dc:	ldr	w0, [x27, #180]
   286e0:	str	w0, [sp, #264]
   286e4:	mov	w1, #0x8                   	// #8
   286e8:	str	w1, [sp, #208]
   286ec:	ldr	x1, [sp, #112]
   286f0:	cbz	x1, 28744 <printf_parse@@Base+0xb314>
   286f4:	mov	w2, #0x4                   	// #4
   286f8:	cmp	w0, #0x1
   286fc:	b.eq	2871c <printf_parse@@Base+0xb2ec>  // b.none
   28700:	ldr	x0, [x25, #24]
   28704:	and	x0, x0, #0x400000
   28708:	ldr	x1, [sp, #248]
   2870c:	orr	x0, x1, x0
   28710:	cmp	x0, #0x0
   28714:	ldr	w0, [sp, #212]
   28718:	csel	w2, w0, w2, ne  // ne = any
   2871c:	cmp	x19, x21
   28720:	mov	w0, #0x2                   	// #2
   28724:	ldr	w1, [sp, #212]
   28728:	csel	w0, w1, w0, gt
   2872c:	ldr	x1, [sp, #248]
   28730:	cmp	x1, #0x0
   28734:	cset	w1, ne  // ne = any
   28738:	orr	w1, w1, w2
   2873c:	orr	w0, w1, w0
   28740:	str	w0, [sp, #208]
   28744:	ldr	x0, [sp, #160]
   28748:	cmp	x19, x0
   2874c:	cset	w1, lt  // lt = tstop
   28750:	ldr	x0, [sp, #120]
   28754:	cmp	x19, x0
   28758:	cset	w0, gt
   2875c:	orr	w0, w1, w0
   28760:	str	w0, [sp, #228]
   28764:	cbnz	w0, 29220 <printf_parse@@Base+0xbdf0>
   28768:	str	w20, [sp, #152]
   2876c:	cmp	x19, x21
   28770:	add	x0, sp, #0x268
   28774:	csel	x0, x0, xzr, le
   28778:	str	x0, [sp, #272]
   2877c:	cmp	x0, #0x0
   28780:	cset	w0, ne  // ne = any
   28784:	str	w0, [sp, #268]
   28788:	add	x26, sp, #0x168
   2878c:	add	x0, sp, #0x12c
   28790:	str	x0, [sp, #168]
   28794:	str	x27, [sp, #200]
   28798:	str	x25, [sp, #256]
   2879c:	b	29394 <printf_parse@@Base+0xbf64>
   287a0:	tst	x0, #0x1
   287a4:	ldr	x0, [sp, #112]
   287a8:	csel	x0, x0, xzr, eq  // eq = none
   287ac:	str	x0, [sp, #112]
   287b0:	b	28494 <printf_parse@@Base+0xb064>
   287b4:	ldrb	w0, [x27, #176]
   287b8:	tbnz	w0, #1, 2867c <printf_parse@@Base+0xb24c>
   287bc:	str	xzr, [sp, #544]
   287c0:	b	286a0 <printf_parse@@Base+0xb270>
   287c4:	cmp	w0, #0x3
   287c8:	b.gt	28884 <printf_parse@@Base+0xb454>
   287cc:	ldr	w20, [sp, #212]
   287d0:	ldrsw	x21, [sp, #224]
   287d4:	ldr	x27, [sp, #112]
   287d8:	ldr	x23, [sp, #160]
   287dc:	ldr	x24, [sp, #120]
   287e0:	ldr	x22, [sp, #176]
   287e4:	b	28ac4 <printf_parse@@Base+0xb694>
   287e8:	ldr	x0, [sp, #616]
   287ec:	ldr	w2, [sp, #228]
   287f0:	mov	w3, #0x1                   	// #1
   287f4:	ldr	x1, [sp, #120]
   287f8:	cmp	x1, x0
   287fc:	b.le	288d4 <printf_parse@@Base+0xb4a4>
   28800:	ldr	x27, [sp, #112]
   28804:	ldr	x4, [sp, #248]
   28808:	ldr	x6, [sp, #120]
   2880c:	ldr	x5, [sp, #192]
   28810:	ldrb	w1, [x5, x0]
   28814:	ldrb	w1, [x4, x1]
   28818:	ldrb	w1, [x27, x1]
   2881c:	cbnz	w1, 288cc <printf_parse@@Base+0xb49c>
   28820:	add	x0, x0, #0x1
   28824:	mov	w2, w3
   28828:	cmp	x0, x6
   2882c:	b.ne	28810 <printf_parse@@Base+0xb3e0>  // b.any
   28830:	ldr	x0, [sp, #120]
   28834:	str	x0, [sp, #616]
   28838:	ldr	x0, [sp, #616]
   2883c:	ldr	w1, [sp, #212]
   28840:	ldr	x2, [sp, #176]
   28844:	cmp	x2, x0
   28848:	b.le	28854 <printf_parse@@Base+0xb424>
   2884c:	ldr	x1, [sp, #192]
   28850:	ldrb	w1, [x1, x0]
   28854:	sxtw	x0, w1
   28858:	ldr	x2, [sp, #248]
   2885c:	cbz	x2, 28864 <printf_parse@@Base+0xb434>
   28860:	ldrb	w0, [x2, w1, sxtw]
   28864:	ldr	x1, [sp, #112]
   28868:	ldrb	w0, [x1, x0]
   2886c:	cbnz	w0, 288e4 <printf_parse@@Base+0xb4b4>
   28870:	ldr	x27, [sp, #200]
   28874:	mov	w0, #0x1                   	// #1
   28878:	str	w0, [sp, #156]
   2887c:	ldp	x23, x24, [sp, #48]
   28880:	b	28a20 <printf_parse@@Base+0xb5f0>
   28884:	ldr	x0, [sp, #616]
   28888:	ldr	x1, [sp, #160]
   2888c:	cmp	x1, x0
   28890:	b.gt	288b8 <printf_parse@@Base+0xb488>
   28894:	ldr	w3, [sp, #228]
   28898:	ldr	w4, [sp, #212]
   2889c:	mov	w5, #0x1                   	// #1
   288a0:	ldr	x27, [sp, #112]
   288a4:	ldr	x6, [sp, #248]
   288a8:	ldr	x8, [sp, #160]
   288ac:	ldr	x9, [sp, #192]
   288b0:	ldr	x7, [sp, #176]
   288b4:	b	289f8 <printf_parse@@Base+0xb5c8>
   288b8:	ldr	x27, [sp, #200]
   288bc:	mov	w0, #0x1                   	// #1
   288c0:	str	w0, [sp, #156]
   288c4:	ldp	x23, x24, [sp, #48]
   288c8:	b	28a20 <printf_parse@@Base+0xb5f0>
   288cc:	cbz	w2, 288e4 <printf_parse@@Base+0xb4b4>
   288d0:	str	x0, [sp, #616]
   288d4:	ldr	x0, [sp, #616]
   288d8:	ldr	x1, [sp, #120]
   288dc:	cmp	x0, x1
   288e0:	b.eq	2883c <printf_parse@@Base+0xb40c>  // b.none
   288e4:	ldr	w2, [sp, #144]
   288e8:	ldr	x1, [sp, #616]
   288ec:	mov	x0, x26
   288f0:	bl	235b0 <printf_parse@@Base+0x6180>
   288f4:	str	w0, [sp, #156]
   288f8:	cbnz	w0, 29254 <printf_parse@@Base+0xbe24>
   288fc:	ldr	w0, [sp, #264]
   28900:	cmp	w0, #0x1
   28904:	b.eq	28920 <printf_parse@@Base+0xb4f0>  // b.none
   28908:	ldr	x0, [sp, #408]
   2890c:	cbz	x0, 28920 <printf_parse@@Base+0xb4f0>
   28910:	ldr	x0, [sp, #376]
   28914:	ldr	w0, [x0]
   28918:	cmn	w0, #0x1
   2891c:	b.eq	29370 <printf_parse@@Base+0xbf40>  // b.none
   28920:	str	wzr, [sp, #584]
   28924:	str	xzr, [sp, #560]
   28928:	str	xzr, [sp, #552]
   2892c:	ldr	x19, [sp, #512]
   28930:	ldr	x0, [sp, #432]
   28934:	mov	x1, x0
   28938:	str	x0, [sp, #136]
   2893c:	str	wzr, [sp, #296]
   28940:	ldr	x20, [x19, #72]
   28944:	ldrsb	w0, [x20, #104]
   28948:	tbz	w0, #31, 28b08 <printf_parse@@Base+0xb6d8>
   2894c:	ldr	w2, [sp, #520]
   28950:	sub	x1, x1, #0x1
   28954:	mov	x0, x26
   28958:	bl	204b4 <printf_parse@@Base+0x3084>
   2895c:	tbnz	w0, #0, 28b00 <printf_parse@@Base+0xb6d0>
   28960:	cbz	w0, 28b08 <printf_parse@@Base+0xb6d8>
   28964:	and	w1, w0, #0x6
   28968:	cmp	w1, #0x6
   2896c:	b.eq	28b64 <printf_parse@@Base+0xb734>  // b.none
   28970:	tbnz	w0, #1, 28b6c <printf_parse@@Base+0xb73c>
   28974:	tbz	w0, #2, 28b08 <printf_parse@@Base+0xb6d8>
   28978:	mov	w3, w0
   2897c:	ldr	x2, [x20, #80]
   28980:	mov	x1, x19
   28984:	add	x0, sp, #0x128
   28988:	bl	21950 <printf_parse@@Base+0x4520>
   2898c:	mov	x20, x0
   28990:	cbnz	x0, 28b08 <printf_parse@@Base+0xb6d8>
   28994:	ldr	x27, [sp, #200]
   28998:	ldr	w0, [sp, #296]
   2899c:	cmp	w0, #0xc
   289a0:	b.eq	29308 <printf_parse@@Base+0xbed8>  // b.none
   289a4:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   289a8:	add	x3, x3, #0xcb8
   289ac:	add	x3, x3, #0x58
   289b0:	mov	w2, #0x435                 	// #1077
   289b4:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   289b8:	add	x1, x1, #0xfb8
   289bc:	adrp	x0, 2f000 <vasnprintf@@Base+0x4378>
   289c0:	add	x0, x0, #0x48
   289c4:	bl	aea0 <__assert_fail@plt>
   289c8:	cbz	w2, 288e4 <printf_parse@@Base+0xb4b4>
   289cc:	str	x0, [sp, #616]
   289d0:	b	288d4 <printf_parse@@Base+0xb4a4>
   289d4:	sxtw	x2, w1
   289d8:	cbz	x6, 289e0 <printf_parse@@Base+0xb5b0>
   289dc:	ldrb	w2, [x6, w1, sxtw]
   289e0:	ldrb	w1, [x27, x2]
   289e4:	cbnz	w1, 28a58 <printf_parse@@Base+0xb628>
   289e8:	sub	x0, x0, #0x1
   289ec:	mov	w3, w5
   289f0:	cmp	x0, x8
   289f4:	b.lt	28a0c <printf_parse@@Base+0xb5dc>  // b.tstop
   289f8:	mov	w1, w4
   289fc:	cmp	x7, x0
   28a00:	b.le	289d4 <printf_parse@@Base+0xb5a4>
   28a04:	ldrb	w1, [x9, x0]
   28a08:	b	289d4 <printf_parse@@Base+0xb5a4>
   28a0c:	ldr	x27, [sp, #200]
   28a10:	str	x0, [sp, #616]
   28a14:	mov	w0, #0x1                   	// #1
   28a18:	str	w0, [sp, #156]
   28a1c:	ldp	x23, x24, [sp, #48]
   28a20:	ldr	x0, [sp, #544]
   28a24:	bl	aa50 <free@plt>
   28a28:	ldr	x0, [x27, #152]
   28a2c:	cbnz	x0, 29278 <printf_parse@@Base+0xbe48>
   28a30:	add	x0, sp, #0x168
   28a34:	bl	21c70 <printf_parse@@Base+0x4840>
   28a38:	ldr	w0, [sp, #156]
   28a3c:	ldp	x19, x20, [sp, #16]
   28a40:	ldp	x21, x22, [sp, #32]
   28a44:	ldp	x25, x26, [sp, #64]
   28a48:	ldp	x27, x28, [sp, #80]
   28a4c:	ldp	x29, x30, [sp]
   28a50:	add	sp, sp, #0x270
   28a54:	ret
   28a58:	cbz	w3, 28a60 <printf_parse@@Base+0xb630>
   28a5c:	str	x0, [sp, #616]
   28a60:	ldr	x1, [sp, #160]
   28a64:	cmp	x1, x0
   28a68:	b.le	288e4 <printf_parse@@Base+0xb4b4>
   28a6c:	ldr	x27, [sp, #200]
   28a70:	mov	w0, #0x1                   	// #1
   28a74:	str	w0, [sp, #156]
   28a78:	ldp	x23, x24, [sp, #48]
   28a7c:	b	28a20 <printf_parse@@Base+0xb5f0>
   28a80:	ldr	w2, [sp, #144]
   28a84:	mov	x1, x19
   28a88:	mov	x0, x26
   28a8c:	bl	235b0 <printf_parse@@Base+0x6180>
   28a90:	cbnz	w0, 29244 <printf_parse@@Base+0xbe14>
   28a94:	ldr	x0, [sp, #400]
   28a98:	sub	x0, x19, x0
   28a9c:	b	28adc <printf_parse@@Base+0xb6ac>
   28aa0:	ldr	x1, [sp, #368]
   28aa4:	ldrb	w1, [x1, x0]
   28aa8:	ldrb	w0, [x27, w1, sxtw]
   28aac:	cbnz	w0, 288e4 <printf_parse@@Base+0xb4b4>
   28ab0:	add	x19, x21, x19
   28ab4:	str	x19, [sp, #616]
   28ab8:	cmp	x19, x23
   28abc:	ccmp	x19, x24, #0x0, ge  // ge = tcont
   28ac0:	b.gt	28aec <printf_parse@@Base+0xb6bc>
   28ac4:	ldr	x19, [sp, #616]
   28ac8:	ldr	x0, [sp, #400]
   28acc:	sub	x0, x19, x0
   28ad0:	ldr	x1, [sp, #416]
   28ad4:	cmp	x1, x0
   28ad8:	b.ls	28a80 <printf_parse@@Base+0xb650>  // b.plast
   28adc:	mov	w1, w20
   28ae0:	cmp	x19, x22
   28ae4:	b.ge	28aa8 <printf_parse@@Base+0xb678>  // b.tcont
   28ae8:	b	28aa0 <printf_parse@@Base+0xb670>
   28aec:	ldr	x27, [sp, #200]
   28af0:	mov	w0, #0x1                   	// #1
   28af4:	str	w0, [sp, #156]
   28af8:	ldp	x23, x24, [sp, #48]
   28afc:	b	28a20 <printf_parse@@Base+0xb5f0>
   28b00:	ldr	x20, [x19, #80]
   28b04:	cbz	x20, 289a4 <printf_parse@@Base+0xb574>
   28b08:	ldr	x0, [sp, #544]
   28b0c:	cbz	x0, 28bc8 <printf_parse@@Base+0xb798>
   28b10:	ldr	x1, [sp, #136]
   28b14:	str	x20, [x0, x1, lsl #3]
   28b18:	ldr	x0, [x19, #152]
   28b1c:	ldr	w1, [sp, #268]
   28b20:	mov	w22, w1
   28b24:	cbnz	x0, 28b74 <printf_parse@@Base+0xb744>
   28b28:	ldrb	w0, [x20, #104]
   28b2c:	mov	x28, #0xffffffffffffffff    	// #-1
   28b30:	mov	x25, #0x0                   	// #0
   28b34:	tbnz	w0, #4, 28bd4 <printf_parse@@Base+0xb7a4>
   28b38:	ldr	x21, [sp, #432]
   28b3c:	ldr	x0, [sp, #272]
   28b40:	str	x0, [sp, #128]
   28b44:	ldr	x0, [sp, #464]
   28b48:	cmp	x0, x21
   28b4c:	b.le	28fbc <printf_parse@@Base+0xbb8c>
   28b50:	add	x0, sp, #0x130
   28b54:	str	x0, [sp, #216]
   28b58:	str	x0, [sp, #104]
   28b5c:	mov	w27, w22
   28b60:	b	28f2c <printf_parse@@Base+0xbafc>
   28b64:	ldr	x20, [x19, #96]
   28b68:	b	28b04 <printf_parse@@Base+0xb6d4>
   28b6c:	ldr	x20, [x19, #88]
   28b70:	b	28b04 <printf_parse@@Base+0xb6d4>
   28b74:	add	x19, x20, #0x8
   28b78:	mov	x2, #0x0                   	// #0
   28b7c:	mov	x1, x19
   28b80:	mov	x0, x26
   28b84:	bl	1f3a8 <printf_parse@@Base+0x1f78>
   28b88:	str	w0, [sp, #296]
   28b8c:	sxtw	x28, w0
   28b90:	cbnz	w0, 29560 <printf_parse@@Base+0xc130>
   28b94:	ldrb	w0, [x20, #104]
   28b98:	ldr	w1, [sp, #228]
   28b9c:	mov	w22, w1
   28ba0:	tbz	w0, #6, 28b28 <printf_parse@@Base+0xb6f8>
   28ba4:	mov	x1, x19
   28ba8:	mov	x0, x26
   28bac:	bl	272cc <printf_parse@@Base+0x9e9c>
   28bb0:	str	w0, [sp, #296]
   28bb4:	ldr	w1, [sp, #228]
   28bb8:	mov	w22, w1
   28bbc:	sxtw	x28, w0
   28bc0:	cbz	w0, 28b28 <printf_parse@@Base+0xb6f8>
   28bc4:	b	29560 <printf_parse@@Base+0xc130>
   28bc8:	ldr	w0, [sp, #268]
   28bcc:	mov	w22, w0
   28bd0:	b	28b28 <printf_parse@@Base+0xb6f8>
   28bd4:	ldrsb	w0, [x20, #104]
   28bd8:	tbnz	w0, #31, 28bf0 <printf_parse@@Base+0xb7c0>
   28bdc:	ldr	x28, [sp, #136]
   28be0:	mov	x25, #0x1                   	// #1
   28be4:	ldr	w0, [sp, #152]
   28be8:	cbnz	w0, 28b38 <printf_parse@@Base+0xb708>
   28bec:	b	29560 <printf_parse@@Base+0xc130>
   28bf0:	ldr	x2, [sp, #136]
   28bf4:	mov	x1, x20
   28bf8:	mov	x0, x26
   28bfc:	bl	206dc <printf_parse@@Base+0x32ac>
   28c00:	mov	x25, x0
   28c04:	cbnz	x0, 28bdc <printf_parse@@Base+0xb7ac>
   28c08:	mov	x28, #0xffffffffffffffff    	// #-1
   28c0c:	b	28b38 <printf_parse@@Base+0xb708>
   28c10:	ldr	x1, [sp, #448]
   28c14:	cmp	x0, x1
   28c18:	b.ge	28f3c <printf_parse@@Base+0xbb0c>  // b.tcont
   28c1c:	add	w1, w21, #0x1
   28c20:	mov	x0, x26
   28c24:	bl	1fda8 <printf_parse@@Base+0x2978>
   28c28:	str	w0, [sp, #296]
   28c2c:	cbz	w0, 28f48 <printf_parse@@Base+0xbb18>
   28c30:	ldr	x27, [sp, #200]
   28c34:	cmp	w0, #0xc
   28c38:	b.eq	29308 <printf_parse@@Base+0xbed8>  // b.none
   28c3c:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   28c40:	add	x3, x3, #0xcb8
   28c44:	add	x3, x3, #0x58
   28c48:	mov	w2, #0x46c                 	// #1132
   28c4c:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   28c50:	add	x1, x1, #0xfb8
   28c54:	adrp	x0, 2f000 <vasnprintf@@Base+0x4378>
   28c58:	add	x0, x0, #0x48
   28c5c:	bl	aea0 <__assert_fail@plt>
   28c60:	ldr	x1, [sp, #448]
   28c64:	cmp	x0, x1
   28c68:	b.ge	28f48 <printf_parse@@Base+0xbb18>  // b.tcont
   28c6c:	b	28c1c <printf_parse@@Base+0xb7ec>
   28c70:	ldr	x22, [sp, #512]
   28c74:	ldr	x0, [x20, #16]
   28c78:	cmp	x0, #0x0
   28c7c:	b.le	29318 <printf_parse@@Base+0xbee8>
   28c80:	mov	x23, #0x0                   	// #0
   28c84:	b	28d68 <printf_parse@@Base+0xb938>
   28c88:	tbz	w1, #3, 28c90 <printf_parse@@Base+0xb860>
   28c8c:	tbnz	w0, #0, 28d58 <printf_parse@@Base+0xb928>
   28c90:	tbz	w1, #5, 28c98 <printf_parse@@Base+0xb868>
   28c94:	tbz	w0, #1, 28d58 <printf_parse@@Base+0xb928>
   28c98:	tbz	w1, #7, 28ca0 <printf_parse@@Base+0xb870>
   28c9c:	tbz	w0, #3, 28d58 <printf_parse@@Base+0xb928>
   28ca0:	ldr	x3, [sp, #432]
   28ca4:	mov	x2, x26
   28ca8:	mov	x1, x24
   28cac:	mov	x0, x22
   28cb0:	bl	23c80 <printf_parse@@Base+0x6850>
   28cb4:	cbz	w0, 28d58 <printf_parse@@Base+0xb928>
   28cb8:	ldr	x19, [sp, #432]
   28cbc:	add	x19, x19, w0, sxtw
   28cc0:	ldr	w1, [sp, #584]
   28cc4:	cmp	w1, w0
   28cc8:	csel	w0, w1, w0, ge  // ge = tcont
   28ccc:	str	w0, [sp, #584]
   28cd0:	mov	x1, x19
   28cd4:	mov	x0, x26
   28cd8:	bl	1fe8c <printf_parse@@Base+0x2a5c>
   28cdc:	str	w0, [sp, #300]
   28ce0:	cbnz	w0, 28dfc <printf_parse@@Base+0xb9cc>
   28ce4:	ldr	x0, [x22, #24]
   28ce8:	ldr	x2, [x0, x24, lsl #3]
   28cec:	add	x2, x2, x2, lsl #1
   28cf0:	ldr	x0, [x22, #48]
   28cf4:	add	x2, x0, x2, lsl #3
   28cf8:	ldr	x24, [sp, #544]
   28cfc:	ldr	x0, [x24, x19, lsl #3]
   28d00:	cbz	x0, 28db4 <printf_parse@@Base+0xb984>
   28d04:	ldr	x1, [x0, #80]
   28d08:	ldr	x0, [sp, #104]
   28d0c:	bl	20154 <printf_parse@@Base+0x2d24>
   28d10:	str	w0, [sp, #300]
   28d14:	cbnz	w0, 28dfc <printf_parse@@Base+0xb9cc>
   28d18:	ldr	w2, [sp, #520]
   28d1c:	sub	x1, x19, #0x1
   28d20:	mov	x0, x26
   28d24:	bl	204b4 <printf_parse@@Base+0x3084>
   28d28:	ldr	x24, [sp, #544]
   28d2c:	mov	w3, w0
   28d30:	ldr	x2, [sp, #104]
   28d34:	mov	x1, x22
   28d38:	ldr	x0, [sp, #168]
   28d3c:	bl	21950 <printf_parse@@Base+0x4520>
   28d40:	str	x0, [x24, x19, lsl #3]
   28d44:	ldr	x0, [sp, #320]
   28d48:	bl	aa50 <free@plt>
   28d4c:	ldr	x0, [sp, #544]
   28d50:	ldr	x0, [x0, x19, lsl #3]
   28d54:	cbz	x0, 28df4 <printf_parse@@Base+0xb9c4>
   28d58:	add	x23, x23, #0x1
   28d5c:	ldr	x0, [x20, #16]
   28d60:	cmp	x23, x0
   28d64:	b.ge	29318 <printf_parse@@Base+0xbee8>  // b.tcont
   28d68:	ldr	x0, [x20, #24]
   28d6c:	ldr	x24, [x0, x23, lsl #3]
   28d70:	ldr	x19, [x22]
   28d74:	add	x19, x19, x24, lsl #4
   28d78:	ldrb	w0, [x19, #10]
   28d7c:	tbz	w0, #4, 28d58 <printf_parse@@Base+0xb928>
   28d80:	ldr	w0, [x19, #8]
   28d84:	tst	w0, #0x3ff00
   28d88:	b.eq	28ca0 <printf_parse@@Base+0xb870>  // b.none
   28d8c:	ldr	w2, [sp, #520]
   28d90:	ldr	x1, [sp, #432]
   28d94:	mov	x0, x26
   28d98:	bl	204b4 <printf_parse@@Base+0x3084>
   28d9c:	ldr	w2, [x19, #8]
   28da0:	ubfx	x1, x2, #8, #10
   28da4:	tbz	w2, #10, 28c88 <printf_parse@@Base+0xb858>
   28da8:	tbz	w0, #0, 28d58 <printf_parse@@Base+0xb928>
   28dac:	tbz	w1, #3, 28c90 <printf_parse@@Base+0xb860>
   28db0:	b	28d58 <printf_parse@@Base+0xb928>
   28db4:	ldp	x0, x1, [x2]
   28db8:	ldr	x3, [sp, #216]
   28dbc:	stp	x0, x1, [x3]
   28dc0:	ldr	x0, [x2, #16]
   28dc4:	str	x0, [x3, #16]
   28dc8:	ldr	w2, [sp, #520]
   28dcc:	sub	x1, x19, #0x1
   28dd0:	mov	x0, x26
   28dd4:	bl	204b4 <printf_parse@@Base+0x3084>
   28dd8:	mov	w3, w0
   28ddc:	ldr	x2, [sp, #104]
   28de0:	mov	x1, x22
   28de4:	ldr	x0, [sp, #168]
   28de8:	bl	21950 <printf_parse@@Base+0x4520>
   28dec:	str	x0, [x24, x19, lsl #3]
   28df0:	b	28d4c <printf_parse@@Base+0xb91c>
   28df4:	ldr	w0, [sp, #300]
   28df8:	cbz	w0, 28d58 <printf_parse@@Base+0xb928>
   28dfc:	str	w0, [sp, #296]
   28e00:	ldr	x0, [sp, #544]
   28e04:	cbz	x0, 29540 <printf_parse@@Base+0xc110>
   28e08:	mov	x19, #0x0                   	// #0
   28e0c:	b	28f7c <printf_parse@@Base+0xbb4c>
   28e10:	ldr	x22, [x20, #96]
   28e14:	cbz	x22, 28e48 <printf_parse@@Base+0xba18>
   28e18:	ldr	w2, [sp, #520]
   28e1c:	ldr	x1, [sp, #432]
   28e20:	sub	x1, x1, #0x1
   28e24:	mov	x0, x26
   28e28:	bl	204b4 <printf_parse@@Base+0x3084>
   28e2c:	tbz	w0, #0, 28e3c <printf_parse@@Base+0xba0c>
   28e30:	add	x19, x22, w19, uxtb #3
   28e34:	ldr	x19, [x19, #2048]
   28e38:	b	28f74 <printf_parse@@Base+0xbb44>
   28e3c:	and	x19, x19, #0xff
   28e40:	ldr	x19, [x22, x19, lsl #3]
   28e44:	b	28f74 <printf_parse@@Base+0xbb44>
   28e48:	mov	x1, x20
   28e4c:	ldr	x0, [sp, #512]
   28e50:	bl	23fb8 <printf_parse@@Base+0x6b88>
   28e54:	and	w0, w0, #0xff
   28e58:	cbnz	w0, 28f64 <printf_parse@@Base+0xbb34>
   28e5c:	mov	w0, #0xc                   	// #12
   28e60:	str	w0, [sp, #296]
   28e64:	b	28e00 <printf_parse@@Base+0xb9d0>
   28e68:	ldr	w0, [sp, #296]
   28e6c:	cbnz	w0, 29304 <printf_parse@@Base+0xbed4>
   28e70:	ldr	x0, [sp, #544]
   28e74:	cbz	x0, 29548 <printf_parse@@Base+0xc118>
   28e78:	cmp	x25, #0x0
   28e7c:	ldr	w0, [sp, #152]
   28e80:	eor	w0, w0, #0x1
   28e84:	csel	w0, w0, wzr, ne  // ne = any
   28e88:	cbnz	w0, 29548 <printf_parse@@Base+0xc118>
   28e8c:	add	x22, sp, #0x128
   28e90:	ldr	x3, [sp, #552]
   28e94:	ldr	x0, [sp, #432]
   28e98:	ldr	x2, [sp, #544]
   28e9c:	add	x0, x0, #0x1
   28ea0:	cmp	x3, x0
   28ea4:	b.lt	29548 <printf_parse@@Base+0xc118>  // b.tstop
   28ea8:	ldr	x1, [sp, #432]
   28eac:	add	x1, x1, #0x1
   28eb0:	str	x1, [sp, #432]
   28eb4:	ldr	x1, [x2, x0, lsl #3]
   28eb8:	cbz	x1, 28e9c <printf_parse@@Base+0xba6c>
   28ebc:	mov	x2, #0x0                   	// #0
   28ec0:	mov	x1, x26
   28ec4:	mov	x0, x22
   28ec8:	bl	279a8 <printf_parse@@Base+0xa578>
   28ecc:	ldr	w1, [sp, #296]
   28ed0:	cmp	w1, #0x0
   28ed4:	ccmp	x0, #0x0, #0x0, eq  // eq = none
   28ed8:	b.eq	28e90 <printf_parse@@Base+0xba60>  // b.none
   28edc:	mov	x19, x0
   28ee0:	cbnz	x0, 28f94 <printf_parse@@Base+0xbb64>
   28ee4:	b	29548 <printf_parse@@Base+0xc118>
   28ee8:	cmp	x20, x19
   28eec:	ldr	w0, [sp, #228]
   28ef0:	csel	w27, w27, w0, eq  // eq = none
   28ef4:	ldr	x0, [sp, #136]
   28ef8:	csel	x0, x21, x0, eq  // eq = none
   28efc:	str	x0, [sp, #136]
   28f00:	b	28f98 <printf_parse@@Base+0xbb68>
   28f04:	ldr	x28, [sp, #432]
   28f08:	ldr	w0, [sp, #152]
   28f0c:	cbz	w0, 29560 <printf_parse@@Base+0xc130>
   28f10:	mov	x25, #0x1                   	// #1
   28f14:	str	xzr, [sp, #128]
   28f18:	ldr	x21, [sp, #432]
   28f1c:	ldr	x0, [sp, #464]
   28f20:	cmp	x21, x0
   28f24:	b.ge	29548 <printf_parse@@Base+0xc118>  // b.tcont
   28f28:	mov	x20, x19
   28f2c:	add	x21, x21, #0x1
   28f30:	ldr	x0, [sp, #424]
   28f34:	cmp	x21, x0
   28f38:	b.ge	28c10 <printf_parse@@Base+0xb7e0>  // b.tcont
   28f3c:	ldr	x0, [sp, #408]
   28f40:	cmp	x21, x0
   28f44:	b.ge	28c60 <printf_parse@@Base+0xb830>  // b.tcont
   28f48:	ldrb	w0, [x20, #104]
   28f4c:	tbnz	w0, #5, 28c70 <printf_parse@@Base+0xb840>
   28f50:	ldr	x0, [sp, #432]
   28f54:	add	x1, x0, #0x1
   28f58:	str	x1, [sp, #432]
   28f5c:	ldr	x1, [sp, #368]
   28f60:	ldrb	w19, [x1, x0]
   28f64:	ldr	x0, [x20, #88]
   28f68:	cbz	x0, 28e10 <printf_parse@@Base+0xb9e0>
   28f6c:	and	x19, x19, #0xff
   28f70:	ldr	x19, [x0, x19, lsl #3]
   28f74:	ldr	x0, [sp, #544]
   28f78:	cbz	x0, 28f90 <printf_parse@@Base+0xbb60>
   28f7c:	mov	x2, x19
   28f80:	mov	x1, x26
   28f84:	add	x0, sp, #0x128
   28f88:	bl	279a8 <printf_parse@@Base+0xa578>
   28f8c:	mov	x19, x0
   28f90:	cbz	x19, 28e68 <printf_parse@@Base+0xba38>
   28f94:	cbnz	w27, 28ee8 <printf_parse@@Base+0xbab8>
   28f98:	ldrb	w0, [x19, #104]
   28f9c:	tbz	w0, #4, 28f18 <printf_parse@@Base+0xbae8>
   28fa0:	tbz	w0, #7, 28f04 <printf_parse@@Base+0xbad4>
   28fa4:	ldr	x2, [sp, #432]
   28fa8:	mov	x1, x19
   28fac:	mov	x0, x26
   28fb0:	bl	206dc <printf_parse@@Base+0x32ac>
   28fb4:	cbz	x0, 28f18 <printf_parse@@Base+0xbae8>
   28fb8:	b	28f04 <printf_parse@@Base+0xbad4>
   28fbc:	ldr	x0, [sp, #272]
   28fc0:	str	x0, [sp, #128]
   28fc4:	b	29548 <printf_parse@@Base+0xc118>
   28fc8:	sub	x28, x28, #0x1
   28fcc:	cmn	x28, #0x1
   28fd0:	b.eq	2942c <printf_parse@@Base+0xbffc>  // b.none
   28fd4:	ldr	x1, [x2, x28, lsl #3]
   28fd8:	cbz	x1, 28fc8 <printf_parse@@Base+0xbb98>
   28fdc:	ldrb	w0, [x1, #104]
   28fe0:	tbz	w0, #4, 28fc8 <printf_parse@@Base+0xbb98>
   28fe4:	mov	x2, x28
   28fe8:	mov	x0, x26
   28fec:	bl	206dc <printf_parse@@Base+0x32ac>
   28ff0:	mov	x22, x0
   28ff4:	b	294d8 <printf_parse@@Base+0xc0a8>
   28ff8:	mov	x3, x21
   28ffc:	ldr	w21, [sp, #104]
   29000:	mov	x2, x20
   29004:	mov	x1, x19
   29008:	mov	x0, x25
   2900c:	bl	26a2c <printf_parse@@Base+0x95fc>
   29010:	mov	w23, w0
   29014:	mov	x0, x20
   29018:	bl	aa50 <free@plt>
   2901c:	cbz	w23, 29064 <printf_parse@@Base+0xbc34>
   29020:	mov	x20, #0x0                   	// #0
   29024:	b	29350 <printf_parse@@Base+0xbf20>
   29028:	str	x19, [sp, #304]
   2902c:	str	xzr, [sp, #312]
   29030:	str	x22, [sp, #320]
   29034:	str	x28, [sp, #328]
   29038:	add	x1, sp, #0x130
   2903c:	stp	xzr, xzr, [sp, #336]
   29040:	str	xzr, [x1, #48]
   29044:	mov	x0, x26
   29048:	bl	28190 <printf_parse@@Base+0xad60>
   2904c:	mov	w23, w0
   29050:	ldr	x0, [sp, #352]
   29054:	bl	aa50 <free@plt>
   29058:	cbnz	w23, 2934c <printf_parse@@Base+0xbf1c>
   2905c:	ldr	x20, [x19]
   29060:	cbz	x20, 2942c <printf_parse@@Base+0xbffc>
   29064:	ldr	x27, [sp, #200]
   29068:	ldr	x25, [sp, #256]
   2906c:	ldr	x0, [sp, #544]
   29070:	bl	aa50 <free@plt>
   29074:	str	x19, [sp, #544]
   29078:	str	x22, [sp, #536]
   2907c:	str	x28, [sp, #528]
   29080:	b	295a0 <printf_parse@@Base+0xc170>
   29084:	ldr	x27, [sp, #200]
   29088:	mov	w0, #0x1                   	// #1
   2908c:	str	w0, [sp, #156]
   29090:	ldp	x23, x24, [sp, #48]
   29094:	b	28a20 <printf_parse@@Base+0xb5f0>
   29098:	ldr	x27, [sp, #200]
   2909c:	ldr	x25, [sp, #256]
   290a0:	b	295a0 <printf_parse@@Base+0xc170>
   290a4:	ldrb	w0, [x27, #176]
   290a8:	ldr	w4, [sp, #156]
   290ac:	tbz	w0, #0, 290bc <printf_parse@@Base+0xbc8c>
   290b0:	ldr	x0, [x27, #152]
   290b4:	cmp	x0, #0x0
   290b8:	cset	w4, gt
   290bc:	and	w4, w4, #0x1
   290c0:	ldr	x3, [sp, #280]
   290c4:	ldr	x2, [sp, #232]
   290c8:	add	x1, sp, #0x168
   290cc:	mov	x0, x25
   290d0:	bl	249c8 <printf_parse@@Base+0x7598>
   290d4:	cbz	w0, 295f0 <printf_parse@@Base+0xc1c0>
   290d8:	str	w0, [sp, #156]
   290dc:	ldp	x23, x24, [sp, #48]
   290e0:	b	28a20 <printf_parse@@Base+0xb5f0>
   290e4:	str	x3, [x2, #8]
   290e8:	ldr	x3, [x2]
   290ec:	add	x3, x3, x4
   290f0:	str	x3, [x2]
   290f4:	ldr	x3, [x2, #8]
   290f8:	add	x3, x3, x4
   290fc:	str	x3, [x2, #8]
   29100:	add	x1, x1, #0x10
   29104:	cmp	x1, x5
   29108:	b.eq	2914c <printf_parse@@Base+0xbd1c>  // b.none
   2910c:	mov	x2, x1
   29110:	ldr	x3, [x1]
   29114:	cmn	x3, #0x1
   29118:	b.eq	29100 <printf_parse@@Base+0xbcd0>  // b.none
   2911c:	cbz	w6, 290e8 <printf_parse@@Base+0xbcb8>
   29120:	mov	x10, x7
   29124:	cmp	x3, x8
   29128:	b.eq	29130 <printf_parse@@Base+0xbd00>  // b.none
   2912c:	ldr	x10, [x9, x3, lsl #3]
   29130:	str	x10, [x2]
   29134:	ldr	x10, [x2, #8]
   29138:	mov	x3, x7
   2913c:	cmp	x8, x10
   29140:	b.eq	290e4 <printf_parse@@Base+0xbcb4>  // b.none
   29144:	ldr	x3, [x9, x10, lsl #3]
   29148:	b	290e4 <printf_parse@@Base+0xbcb4>
   2914c:	ldr	x1, [sp, #240]
   29150:	cmp	x1, #0x0
   29154:	b.le	29180 <printf_parse@@Base+0xbd50>
   29158:	ldr	x1, [sp, #280]
   2915c:	add	x0, x1, x0
   29160:	ldr	x2, [sp, #184]
   29164:	add	x2, x1, x2, lsl #4
   29168:	mov	x1, #0xffffffffffffffff    	// #-1
   2916c:	str	x1, [x0]
   29170:	str	x1, [x0, #8]
   29174:	add	x0, x0, #0x10
   29178:	cmp	x2, x0
   2917c:	b.ne	2916c <printf_parse@@Base+0xbd3c>  // b.any
   29180:	ldr	x0, [x27, #224]
   29184:	cbz	x0, 29268 <printf_parse@@Base+0xbe38>
   29188:	ldr	x0, [sp, #232]
   2918c:	cmp	x0, #0x1
   29190:	b.ls	29270 <printf_parse@@Base+0xbe40>  // b.plast
   29194:	ldr	x4, [sp, #280]
   29198:	add	x2, x4, #0x10
   2919c:	sub	x3, x0, #0x1
   291a0:	mov	x0, #0x0                   	// #0
   291a4:	b	291b8 <printf_parse@@Base+0xbd88>
   291a8:	add	x0, x0, #0x1
   291ac:	add	x2, x2, #0x10
   291b0:	cmp	x3, x0
   291b4:	b.eq	291ec <printf_parse@@Base+0xbdbc>  // b.none
   291b8:	ldr	x1, [x27, #224]
   291bc:	ldr	x1, [x1, x0, lsl #3]
   291c0:	cmp	x1, x0
   291c4:	b.eq	291a8 <printf_parse@@Base+0xbd78>  // b.none
   291c8:	add	x1, x4, x1, lsl #4
   291cc:	ldr	x1, [x1, #16]
   291d0:	str	x1, [x2]
   291d4:	ldr	x1, [x27, #224]
   291d8:	ldr	x1, [x1, x0, lsl #3]
   291dc:	add	x1, x4, x1, lsl #4
   291e0:	ldr	x1, [x1, #24]
   291e4:	str	x1, [x2, #8]
   291e8:	b	291a8 <printf_parse@@Base+0xbd78>
   291ec:	ldp	x23, x24, [sp, #48]
   291f0:	b	28a20 <printf_parse@@Base+0xb5f0>
   291f4:	ldr	w0, [sp, #212]
   291f8:	str	w0, [sp, #156]
   291fc:	b	28a20 <printf_parse@@Base+0xb5f0>
   29200:	mov	w0, #0xc                   	// #12
   29204:	str	w0, [sp, #156]
   29208:	ldp	x23, x24, [sp, #48]
   2920c:	b	28a20 <printf_parse@@Base+0xb5f0>
   29210:	mov	w0, #0xc                   	// #12
   29214:	str	w0, [sp, #156]
   29218:	ldp	x23, x24, [sp, #48]
   2921c:	b	28a20 <printf_parse@@Base+0xb5f0>
   29220:	mov	w0, #0x1                   	// #1
   29224:	str	w0, [sp, #156]
   29228:	ldp	x23, x24, [sp, #48]
   2922c:	b	28a20 <printf_parse@@Base+0xb5f0>
   29230:	ldr	x27, [sp, #200]
   29234:	mov	w0, #0xc                   	// #12
   29238:	str	w0, [sp, #156]
   2923c:	ldp	x23, x24, [sp, #48]
   29240:	b	28a20 <printf_parse@@Base+0xb5f0>
   29244:	ldr	x27, [sp, #200]
   29248:	str	w0, [sp, #156]
   2924c:	ldp	x23, x24, [sp, #48]
   29250:	b	28a20 <printf_parse@@Base+0xb5f0>
   29254:	ldr	x27, [sp, #200]
   29258:	ldp	x23, x24, [sp, #48]
   2925c:	b	28a20 <printf_parse@@Base+0xb5f0>
   29260:	ldp	x23, x24, [sp, #48]
   29264:	b	28a20 <printf_parse@@Base+0xb5f0>
   29268:	ldp	x23, x24, [sp, #48]
   2926c:	b	28a20 <printf_parse@@Base+0xb5f0>
   29270:	ldp	x23, x24, [sp, #48]
   29274:	b	28a20 <printf_parse@@Base+0xb5f0>
   29278:	add	x0, sp, #0x168
   2927c:	bl	22164 <printf_parse@@Base+0x4d34>
   29280:	ldr	x0, [sp, #608]
   29284:	bl	aa50 <free@plt>
   29288:	ldr	x0, [sp, #576]
   2928c:	bl	aa50 <free@plt>
   29290:	b	28a30 <printf_parse@@Base+0xb600>
   29294:	mov	w0, #0x1                   	// #1
   29298:	str	w0, [sp, #156]
   2929c:	b	28a38 <printf_parse@@Base+0xb608>
   292a0:	mov	w0, #0x1                   	// #1
   292a4:	str	w0, [sp, #156]
   292a8:	b	28a38 <printf_parse@@Base+0xb608>
   292ac:	mov	w0, #0x1                   	// #1
   292b0:	str	w0, [sp, #156]
   292b4:	b	28a38 <printf_parse@@Base+0xb608>
   292b8:	mov	w0, #0x1                   	// #1
   292bc:	str	w0, [sp, #156]
   292c0:	b	28a38 <printf_parse@@Base+0xb608>
   292c4:	mov	w0, #0x1                   	// #1
   292c8:	str	w0, [sp, #156]
   292cc:	b	28a38 <printf_parse@@Base+0xb608>
   292d0:	mov	w0, #0x1                   	// #1
   292d4:	str	w0, [sp, #156]
   292d8:	b	28a38 <printf_parse@@Base+0xb608>
   292dc:	ldr	x1, [sp, #280]
   292e0:	str	xzr, [x1]
   292e4:	ldr	x0, [sp, #528]
   292e8:	str	x0, [x1, #8]
   292ec:	b	295f0 <printf_parse@@Base+0xc1c0>
   292f0:	ldr	x27, [sp, #200]
   292f4:	mov	w0, #0xc                   	// #12
   292f8:	str	w0, [sp, #156]
   292fc:	ldp	x23, x24, [sp, #48]
   29300:	b	28a20 <printf_parse@@Base+0xb5f0>
   29304:	ldr	x27, [sp, #200]
   29308:	mov	w0, #0xc                   	// #12
   2930c:	str	w0, [sp, #156]
   29310:	ldp	x23, x24, [sp, #48]
   29314:	b	28a20 <printf_parse@@Base+0xb5f0>
   29318:	str	wzr, [sp, #296]
   2931c:	b	28f50 <printf_parse@@Base+0xbb20>
   29320:	mov	w0, #0xc                   	// #12
   29324:	str	w0, [sp, #156]
   29328:	ldp	x23, x24, [sp, #48]
   2932c:	b	28a20 <printf_parse@@Base+0xb5f0>
   29330:	ldr	x0, [sp, #192]
   29334:	str	x0, [sp, #368]
   29338:	ldr	w0, [x27, #180]
   2933c:	cmp	w0, #0x2
   29340:	ldr	x0, [sp, #176]
   29344:	csel	x0, x0, xzr, lt  // lt = tstop
   29348:	b	285e8 <printf_parse@@Base+0xb1b8>
   2934c:	mov	x20, #0x0                   	// #0
   29350:	mov	x0, x19
   29354:	bl	aa50 <free@plt>
   29358:	mov	x0, x20
   2935c:	bl	aa50 <free@plt>
   29360:	cmp	w23, #0x1
   29364:	b.ne	29404 <printf_parse@@Base+0xbfd4>  // b.any
   29368:	mov	x0, x26
   2936c:	bl	22164 <printf_parse@@Base+0x4d34>
   29370:	ldr	x0, [sp, #616]
   29374:	ldr	w1, [sp, #224]
   29378:	add	x0, x0, w1, sxtw
   2937c:	str	x0, [sp, #616]
   29380:	ldr	x1, [sp, #160]
   29384:	cmp	x0, x1
   29388:	ldr	x1, [sp, #120]
   2938c:	ccmp	x0, x1, #0x0, ge  // ge = tcont
   29390:	b.gt	29084 <printf_parse@@Base+0xbc54>
   29394:	ldr	w0, [sp, #208]
   29398:	cmp	w0, #0x7
   2939c:	b.eq	287e8 <printf_parse@@Base+0xb3b8>  // b.none
   293a0:	b.gt	288e4 <printf_parse@@Base+0xb4b4>
   293a4:	cmp	w0, #0x5
   293a8:	b.le	287c4 <printf_parse@@Base+0xb394>
   293ac:	ldr	w0, [sp, #208]
   293b0:	cmp	w0, #0x6
   293b4:	b.ne	287cc <printf_parse@@Base+0xb39c>  // b.any
   293b8:	ldr	x0, [sp, #616]
   293bc:	ldr	w2, [sp, #228]
   293c0:	mov	w3, #0x1                   	// #1
   293c4:	ldr	x1, [sp, #120]
   293c8:	cmp	x1, x0
   293cc:	b.le	288d4 <printf_parse@@Base+0xb4a4>
   293d0:	ldr	x27, [sp, #112]
   293d4:	ldr	x5, [sp, #120]
   293d8:	ldr	x4, [sp, #192]
   293dc:	ldrb	w1, [x4, x0]
   293e0:	ldrb	w1, [x27, x1]
   293e4:	cbnz	w1, 289c8 <printf_parse@@Base+0xb598>
   293e8:	add	x0, x0, #0x1
   293ec:	mov	w2, w3
   293f0:	cmp	x0, x5
   293f4:	b.ne	293dc <printf_parse@@Base+0xbfac>  // b.any
   293f8:	ldr	x0, [sp, #120]
   293fc:	str	x0, [sp, #616]
   29400:	b	28838 <printf_parse@@Base+0xb408>
   29404:	mov	w0, w23
   29408:	ldr	x27, [sp, #200]
   2940c:	str	w0, [sp, #156]
   29410:	ldp	x23, x24, [sp, #48]
   29414:	b	28a20 <printf_parse@@Base+0xb5f0>
   29418:	ldr	x27, [sp, #200]
   2941c:	mov	x0, x19
   29420:	bl	aa50 <free@plt>
   29424:	mov	w0, #0xc                   	// #12
   29428:	b	2940c <printf_parse@@Base+0xbfdc>
   2942c:	mov	x0, x19
   29430:	bl	aa50 <free@plt>
   29434:	mov	x0, x20
   29438:	bl	aa50 <free@plt>
   2943c:	b	29368 <printf_parse@@Base+0xbf38>
   29440:	mov	x2, x28
   29444:	ldr	x0, [sp, #544]
   29448:	ldr	x1, [x0, x28, lsl #3]
   2944c:	mov	x0, x26
   29450:	bl	206dc <printf_parse@@Base+0x32ac>
   29454:	str	x0, [sp, #536]
   29458:	ldr	x0, [sp, #200]
   2945c:	ldrb	w0, [x0, #176]
   29460:	tbnz	w0, #0, 2948c <printf_parse@@Base+0xc05c>
   29464:	b	29480 <printf_parse@@Base+0xc050>
   29468:	mov	x2, x28
   2946c:	ldr	x0, [sp, #544]
   29470:	ldr	x1, [x0, x28, lsl #3]
   29474:	mov	x0, x26
   29478:	bl	206dc <printf_parse@@Base+0x32ac>
   2947c:	str	x0, [sp, #536]
   29480:	ldr	x0, [sp, #200]
   29484:	ldr	x0, [x0, #152]
   29488:	cbz	x0, 29098 <printf_parse@@Base+0xbc68>
   2948c:	ldr	x25, [sp, #512]
   29490:	ldr	x22, [sp, #536]
   29494:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
   29498:	cmp	x28, x0
   2949c:	b.hi	292f0 <printf_parse@@Base+0xbec0>  // b.pmore
   294a0:	add	x20, x28, #0x1
   294a4:	lsl	x20, x20, #3
   294a8:	mov	x0, x20
   294ac:	bl	a5f0 <malloc@plt>
   294b0:	mov	x19, x0
   294b4:	cbz	x0, 29418 <printf_parse@@Base+0xbfe8>
   294b8:	ldr	x0, [x25, #152]
   294bc:	cbz	x0, 29028 <printf_parse@@Base+0xbbf8>
   294c0:	mov	x0, x20
   294c4:	bl	a5f0 <malloc@plt>
   294c8:	mov	x20, x0
   294cc:	cbz	x0, 29418 <printf_parse@@Base+0xbfe8>
   294d0:	add	x24, sp, #0x130
   294d4:	str	w21, [sp, #104]
   294d8:	add	x21, x28, #0x1
   294dc:	lsl	x2, x21, #3
   294e0:	mov	w1, #0x0                   	// #0
   294e4:	mov	x0, x20
   294e8:	bl	a6f0 <memset@plt>
   294ec:	str	x19, [sp, #304]
   294f0:	str	x20, [sp, #312]
   294f4:	str	x22, [sp, #320]
   294f8:	str	x28, [sp, #328]
   294fc:	stp	xzr, xzr, [x24, #32]
   29500:	str	xzr, [x24, #48]
   29504:	mov	x1, x24
   29508:	mov	x0, x26
   2950c:	bl	28190 <printf_parse@@Base+0xad60>
   29510:	mov	w23, w0
   29514:	ldr	x0, [sp, #352]
   29518:	bl	aa50 <free@plt>
   2951c:	cbnz	w23, 29350 <printf_parse@@Base+0xbf20>
   29520:	ldr	x0, [x19]
   29524:	cbnz	x0, 28ff8 <printf_parse@@Base+0xbbc8>
   29528:	ldr	x0, [x20]
   2952c:	cbnz	x0, 28ff8 <printf_parse@@Base+0xbbc8>
   29530:	subs	x28, x28, #0x1
   29534:	b.mi	2942c <printf_parse@@Base+0xbffc>  // b.first
   29538:	ldr	x2, [sp, #544]
   2953c:	b	28fd4 <printf_parse@@Base+0xbba4>
   29540:	ldr	w0, [sp, #296]
   29544:	cbnz	w0, 29618 <printf_parse@@Base+0xc1e8>
   29548:	ldr	x1, [sp, #128]
   2954c:	cbz	x1, 29560 <printf_parse@@Base+0xc130>
   29550:	ldr	x0, [x1]
   29554:	ldr	x2, [sp, #136]
   29558:	add	x0, x0, x2
   2955c:	str	x0, [x1]
   29560:	cmn	x28, #0x1
   29564:	b.eq	29368 <printf_parse@@Base+0xbf38>  // b.none
   29568:	cmn	x28, #0x2
   2956c:	b.eq	29230 <printf_parse@@Base+0xbe00>  // b.none
   29570:	str	x28, [sp, #528]
   29574:	ldr	x0, [sp, #232]
   29578:	cmp	x0, #0x1
   2957c:	cset	w21, hi  // hi = pmore
   29580:	ldr	x25, [sp, #256]
   29584:	ldrb	w0, [x25, #56]
   29588:	tst	x0, #0x10
   2958c:	ccmp	w21, #0x0, #0x4, eq  // eq = none
   29590:	b.ne	29440 <printf_parse@@Base+0xc010>  // b.any
   29594:	ldr	x27, [sp, #200]
   29598:	ldr	x0, [x27, #152]
   2959c:	cbnz	x0, 29468 <printf_parse@@Base+0xc038>
   295a0:	ldr	x1, [sp, #232]
   295a4:	cbz	x1, 29260 <printf_parse@@Base+0xbe30>
   295a8:	cmp	x1, #0x1
   295ac:	b.ls	292dc <printf_parse@@Base+0xbeac>  // b.plast
   295b0:	ldr	x2, [sp, #280]
   295b4:	add	x0, x2, #0x10
   295b8:	add	x2, x2, x1, lsl #4
   295bc:	mov	x1, #0xffffffffffffffff    	// #-1
   295c0:	str	x1, [x0, #8]
   295c4:	str	x1, [x0], #16
   295c8:	cmp	x0, x2
   295cc:	b.ne	295c0 <printf_parse@@Base+0xc190>  // b.any
   295d0:	ldr	x1, [sp, #280]
   295d4:	str	xzr, [x1]
   295d8:	ldr	x0, [sp, #528]
   295dc:	str	x0, [x1, #8]
   295e0:	ldrb	w0, [x25, #56]
   295e4:	tst	x0, #0x10
   295e8:	ccmp	w21, #0x0, #0x4, eq  // eq = none
   295ec:	b.ne	290a4 <printf_parse@@Base+0xbc74>  // b.any
   295f0:	ldrb	w6, [sp, #500]
   295f4:	ldr	x8, [sp, #408]
   295f8:	ldr	x9, [sp, #384]
   295fc:	ldr	x4, [sp, #616]
   29600:	ldr	x0, [sp, #232]
   29604:	lsl	x0, x0, #4
   29608:	ldr	x1, [sp, #280]
   2960c:	add	x5, x0, x1
   29610:	ldr	x7, [sp, #416]
   29614:	b	2910c <printf_parse@@Base+0xbcdc>
   29618:	ldr	x27, [sp, #200]
   2961c:	b	29308 <printf_parse@@Base+0xbed8>
   29620:	stp	x29, x30, [sp, #-304]!
   29624:	mov	x29, sp
   29628:	stp	x19, x20, [sp, #16]
   2962c:	stp	x21, x22, [sp, #32]
   29630:	stp	x23, x24, [sp, #48]
   29634:	mov	x20, x0
   29638:	mov	x23, x1
   2963c:	mov	x21, x2
   29640:	mov	x22, x3
   29644:	str	wzr, [sp, #300]
   29648:	ldrb	w0, [x0, #56]
   2964c:	str	x3, [x20, #24]
   29650:	str	xzr, [x20, #16]
   29654:	str	xzr, [x20, #48]
   29658:	mov	w1, #0xffffff90            	// #-112
   2965c:	and	w0, w0, w1
   29660:	strb	w0, [x20, #56]
   29664:	ldr	x19, [x20]
   29668:	ldr	x0, [x20, #8]
   2966c:	cmp	x0, #0x117
   29670:	b.ls	29920 <printf_parse@@Base+0xc4f0>  // b.plast
   29674:	mov	x2, #0x118                 	// #280
   29678:	str	x2, [x20, #16]
   2967c:	mov	w1, #0x0                   	// #0
   29680:	mov	x0, x19
   29684:	bl	a6f0 <memset@plt>
   29688:	mov	w0, #0xf                   	// #15
   2968c:	str	w0, [x19, #128]
   29690:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   29694:	movk	x0, #0x555, lsl #48
   29698:	cmp	x21, x0
   2969c:	b.cs	2a178 <printf_parse@@Base+0xcd48>  // b.hs, b.nlast
   296a0:	add	x0, x21, #0x1
   296a4:	str	x0, [x19, #8]
   296a8:	lsl	x0, x0, #4
   296ac:	bl	a5f0 <malloc@plt>
   296b0:	str	x0, [x19]
   296b4:	cbz	x21, 29944 <printf_parse@@Base+0xc514>
   296b8:	mov	x24, #0x1                   	// #1
   296bc:	lsl	x24, x24, #1
   296c0:	cmp	x21, x24
   296c4:	b.cs	296bc <printf_parse@@Base+0xc28c>  // b.hs, b.nlast
   296c8:	mov	x1, x24
   296cc:	mov	x0, #0x18                  	// #24
   296d0:	bl	a770 <calloc@plt>
   296d4:	str	x0, [x19, #64]
   296d8:	sub	x24, x24, #0x1
   296dc:	str	x24, [x19, #136]
   296e0:	bl	aa80 <__ctype_get_mb_cur_max@plt>
   296e4:	str	w0, [x19, #180]
   296e8:	mov	w0, #0xe                   	// #14
   296ec:	bl	a5c0 <nl_langinfo@plt>
   296f0:	ldrb	w1, [x0]
   296f4:	and	w1, w1, #0xffffffdf
   296f8:	and	w1, w1, #0xff
   296fc:	cmp	w1, #0x55
   29700:	b.ne	2975c <printf_parse@@Base+0xc32c>  // b.any
   29704:	ldrb	w1, [x0, #1]
   29708:	and	w1, w1, #0xffffffdf
   2970c:	and	w1, w1, #0xff
   29710:	cmp	w1, #0x54
   29714:	b.ne	2975c <printf_parse@@Base+0xc32c>  // b.any
   29718:	ldrb	w1, [x0, #2]
   2971c:	and	w1, w1, #0xffffffdf
   29720:	and	w1, w1, #0xff
   29724:	cmp	w1, #0x46
   29728:	b.ne	2975c <printf_parse@@Base+0xc32c>  // b.any
   2972c:	ldrb	w1, [x0, #3]
   29730:	cmp	w1, #0x2d
   29734:	cset	x2, eq  // eq = none
   29738:	add	x2, x2, #0x3
   2973c:	adrp	x1, 2c000 <vasnprintf@@Base+0x1378>
   29740:	add	x1, x1, #0x718
   29744:	add	x0, x0, x2
   29748:	bl	a9b0 <strcmp@plt>
   2974c:	cbnz	w0, 2975c <printf_parse@@Base+0xc32c>
   29750:	ldrb	w0, [x19, #176]
   29754:	orr	w0, w0, #0x4
   29758:	strb	w0, [x19, #176]
   2975c:	ldrb	w0, [x19, #176]
   29760:	and	w0, w0, #0xfffffff7
   29764:	strb	w0, [x19, #176]
   29768:	ldr	w0, [x19, #180]
   2976c:	cmp	w0, #0x1
   29770:	b.le	29788 <printf_parse@@Base+0xc358>
   29774:	ldrb	w0, [x19, #176]
   29778:	tbz	w0, #2, 2994c <printf_parse@@Base+0xc51c>
   2977c:	adrp	x0, 2e000 <vasnprintf@@Base+0x3378>
   29780:	add	x0, x0, #0xcb8
   29784:	str	x0, [x19, #120]
   29788:	ldr	x0, [x19]
   2978c:	cbz	x0, 2a178 <printf_parse@@Base+0xcd48>
   29790:	ldr	x0, [x19, #64]
   29794:	cbz	x0, 2a178 <printf_parse@@Base+0xcd48>
   29798:	stp	x25, x26, [sp, #64]
   2979c:	stp	x27, x28, [sp, #80]
   297a0:	str	wzr, [sp, #300]
   297a4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   297a8:	ldr	x0, [x0, #3944]
   297ac:	cmp	x0, #0x0
   297b0:	cset	w0, ne  // ne = any
   297b4:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
   297b8:	ldr	x1, [x1, #4040]
   297bc:	cmp	x1, #0x0
   297c0:	cset	w1, ne  // ne = any
   297c4:	orr	w0, w0, w1
   297c8:	ands	w0, w0, #0xff
   297cc:	str	w0, [sp, #108]
   297d0:	b.eq	297ec <printf_parse@@Base+0xc3bc>  // b.none
   297d4:	mov	x1, #0x0                   	// #0
   297d8:	add	x0, x19, #0xe8
   297dc:	bl	a840 <pthread_mutex_init@plt>
   297e0:	cbnz	w0, 29998 <printf_parse@@Base+0xc568>
   297e4:	ldr	w0, [sp, #300]
   297e8:	cbnz	w0, 299ac <printf_parse@@Base+0xc57c>
   297ec:	mov	x26, x21
   297f0:	ldr	x1, [x20, #40]
   297f4:	ands	x25, x22, #0x400000
   297f8:	orr	x24, x1, x25
   297fc:	add	x0, sp, #0x98
   29800:	stp	xzr, xzr, [sp, #152]
   29804:	stp	xzr, xzr, [sp, #168]
   29808:	stp	xzr, xzr, [sp, #184]
   2980c:	stp	xzr, xzr, [sp, #200]
   29810:	stp	xzr, xzr, [sp, #216]
   29814:	stp	xzr, xzr, [sp, #232]
   29818:	stp	xzr, xzr, [sp, #248]
   2981c:	stp	xzr, xzr, [x0, #112]
   29820:	stp	xzr, xzr, [x0, #128]
   29824:	str	x23, [sp, #144]
   29828:	str	x21, [sp, #232]
   2982c:	str	x21, [sp, #224]
   29830:	str	x1, [sp, #264]
   29834:	cset	w0, ne  // ne = any
   29838:	strb	w0, [sp, #280]
   2983c:	cmp	x24, #0x0
   29840:	cset	w0, ne  // ne = any
   29844:	strb	w0, [sp, #283]
   29848:	ldr	w0, [x19, #180]
   2984c:	str	w0, [sp, #288]
   29850:	ldrb	w0, [x19, #176]
   29854:	ubfx	x1, x0, #2, #1
   29858:	strb	w1, [sp, #281]
   2985c:	ubfx	x0, x0, #3, #1
   29860:	strb	w0, [sp, #282]
   29864:	str	x21, [sp, #248]
   29868:	str	x21, [sp, #240]
   2986c:	cmp	x21, #0x0
   29870:	b.gt	299b8 <printf_parse@@Base+0xc588>
   29874:	ldrb	w0, [sp, #283]
   29878:	cmp	w0, #0x0
   2987c:	ldr	x0, [sp, #152]
   29880:	csel	x23, x0, x23, ne  // ne = any
   29884:	str	x23, [sp, #152]
   29888:	cbz	x25, 299d8 <printf_parse@@Base+0xc5a8>
   2988c:	ldr	w0, [x19, #180]
   29890:	cmp	w0, #0x1
   29894:	b.le	299cc <printf_parse@@Base+0xc59c>
   29898:	add	x21, sp, #0x90
   2989c:	mov	x0, x21
   298a0:	bl	1f768 <printf_parse@@Base+0x2338>
   298a4:	cbnz	w0, 298dc <printf_parse@@Base+0xc4ac>
   298a8:	ldr	x0, [sp, #200]
   298ac:	cmp	x26, x0
   298b0:	b.le	299fc <printf_parse@@Base+0xc5cc>
   298b4:	ldr	x1, [sp, #208]
   298b8:	ldrsw	x0, [x19, #180]
   298bc:	ldr	x2, [sp, #192]
   298c0:	add	x0, x0, x2
   298c4:	cmp	x1, x0
   298c8:	b.gt	299fc <printf_parse@@Base+0xc5cc>
   298cc:	lsl	x1, x1, #1
   298d0:	mov	x0, x21
   298d4:	bl	1eb38 <printf_parse@@Base+0x1708>
   298d8:	cbz	w0, 2989c <printf_parse@@Base+0xc46c>
   298dc:	str	w0, [sp, #300]
   298e0:	mov	x0, x20
   298e4:	bl	21c20 <printf_parse@@Base+0x47f0>
   298e8:	add	x0, sp, #0x90
   298ec:	bl	21c70 <printf_parse@@Base+0x4840>
   298f0:	ldr	w0, [sp, #108]
   298f4:	cbz	w0, 29900 <printf_parse@@Base+0xc4d0>
   298f8:	add	x0, x19, #0xe8
   298fc:	bl	ac30 <pthread_mutex_destroy@plt>
   29900:	mov	x0, x19
   29904:	bl	21cb0 <printf_parse@@Base+0x4880>
   29908:	str	xzr, [x20]
   2990c:	str	xzr, [x20, #8]
   29910:	ldr	w0, [sp, #300]
   29914:	ldp	x25, x26, [sp, #64]
   29918:	ldp	x27, x28, [sp, #80]
   2991c:	b	2a05c <printf_parse@@Base+0xcc2c>
   29920:	mov	x1, #0x118                 	// #280
   29924:	mov	x0, x19
   29928:	bl	a7e0 <realloc@plt>
   2992c:	mov	x19, x0
   29930:	cbz	x0, 2a114 <printf_parse@@Base+0xcce4>
   29934:	mov	x0, #0x118                 	// #280
   29938:	str	x0, [x20, #8]
   2993c:	str	x19, [x20]
   29940:	b	29674 <printf_parse@@Base+0xc244>
   29944:	mov	x24, #0x1                   	// #1
   29948:	b	296c8 <printf_parse@@Base+0xc298>
   2994c:	mov	x1, #0x1                   	// #1
   29950:	mov	x0, #0x20                  	// #32
   29954:	bl	a770 <calloc@plt>
   29958:	str	x0, [x19, #120]
   2995c:	cbz	x0, 2a178 <printf_parse@@Base+0xcd48>
   29960:	stp	x25, x26, [sp, #64]
   29964:	stp	x27, x28, [sp, #80]
   29968:	mov	x25, #0x0                   	// #0
   2996c:	mov	x27, #0x1                   	// #1
   29970:	b	29980 <printf_parse@@Base+0xc550>
   29974:	add	x25, x25, #0x8
   29978:	cmp	x25, #0x20
   2997c:	b.eq	2998c <printf_parse@@Base+0xc55c>  // b.none
   29980:	lsl	w24, w25, #3
   29984:	mov	w26, #0x0                   	// #0
   29988:	b	2a1bc <printf_parse@@Base+0xcd8c>
   2998c:	ldp	x25, x26, [sp, #64]
   29990:	ldp	x27, x28, [sp, #80]
   29994:	b	29788 <printf_parse@@Base+0xc358>
   29998:	mov	w0, #0xc                   	// #12
   2999c:	str	w0, [sp, #300]
   299a0:	ldp	x25, x26, [sp, #64]
   299a4:	ldp	x27, x28, [sp, #80]
   299a8:	b	2a180 <printf_parse@@Base+0xcd50>
   299ac:	ldp	x25, x26, [sp, #64]
   299b0:	ldp	x27, x28, [sp, #80]
   299b4:	b	2a180 <printf_parse@@Base+0xcd50>
   299b8:	add	x1, x21, #0x1
   299bc:	add	x0, sp, #0x90
   299c0:	bl	1eb38 <printf_parse@@Base+0x1708>
   299c4:	cbz	w0, 29874 <printf_parse@@Base+0xc444>
   299c8:	b	298dc <printf_parse@@Base+0xc4ac>
   299cc:	add	x0, sp, #0x90
   299d0:	bl	1f4ec <printf_parse@@Base+0x20bc>
   299d4:	b	299fc <printf_parse@@Base+0xc5cc>
   299d8:	ldr	w0, [x19, #180]
   299dc:	cmp	w0, #0x1
   299e0:	b.gt	299f4 <printf_parse@@Base+0xc5c4>
   299e4:	cbz	x24, 29bf8 <printf_parse@@Base+0xc7c8>
   299e8:	add	x0, sp, #0x90
   299ec:	bl	1df7c <printf_parse@@Base+0xb4c>
   299f0:	b	299fc <printf_parse@@Base+0xc5cc>
   299f4:	add	x0, sp, #0x90
   299f8:	bl	1f584 <printf_parse@@Base+0x2154>
   299fc:	str	wzr, [sp, #300]
   29a00:	str	xzr, [x20, #48]
   29a04:	ldr	x23, [x20]
   29a08:	str	x22, [x23, #216]
   29a0c:	add	x21, sp, #0x90
   29a10:	add	x24, sp, #0x78
   29a14:	orr	x2, x22, #0x800000
   29a18:	mov	x1, x21
   29a1c:	mov	x0, x24
   29a20:	bl	20ea0 <printf_parse@@Base+0x3a70>
   29a24:	add	x5, sp, #0x12c
   29a28:	mov	x4, #0x0                   	// #0
   29a2c:	mov	x3, x22
   29a30:	mov	x2, x24
   29a34:	mov	x1, x20
   29a38:	mov	x0, x21
   29a3c:	bl	2645c <printf_parse@@Base+0x902c>
   29a40:	mov	x21, x0
   29a44:	ldr	w0, [sp, #300]
   29a48:	cmp	w0, #0x0
   29a4c:	ccmp	x21, #0x0, #0x0, ne  // ne = any
   29a50:	b.eq	29c10 <printf_parse@@Base+0xc7e0>  // b.none
   29a54:	mov	w3, #0x2                   	// #2
   29a58:	mov	x2, #0x0                   	// #0
   29a5c:	mov	x1, #0x0                   	// #0
   29a60:	mov	x0, x23
   29a64:	bl	1edc4 <printf_parse@@Base+0x1994>
   29a68:	mov	x22, x0
   29a6c:	cbz	x21, 29a84 <printf_parse@@Base+0xc654>
   29a70:	mov	w3, #0x10                  	// #16
   29a74:	mov	x2, x0
   29a78:	mov	x1, x21
   29a7c:	mov	x0, x23
   29a80:	bl	1edc4 <printf_parse@@Base+0x1994>
   29a84:	cmp	x22, #0x0
   29a88:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   29a8c:	b.eq	29c08 <printf_parse@@Base+0xc7d8>  // b.none
   29a90:	str	x0, [x19, #104]
   29a94:	ldr	x21, [x20]
   29a98:	ldr	x22, [x21, #8]
   29a9c:	lsl	x24, x22, #3
   29aa0:	mov	x0, x24
   29aa4:	bl	a5f0 <malloc@plt>
   29aa8:	mov	x23, x0
   29aac:	str	x0, [x21, #24]
   29ab0:	mov	x0, x24
   29ab4:	bl	a5f0 <malloc@plt>
   29ab8:	mov	x24, x0
   29abc:	str	x0, [x21, #32]
   29ac0:	add	x22, x22, x22, lsl #1
   29ac4:	lsl	x22, x22, #3
   29ac8:	mov	x0, x22
   29acc:	bl	a5f0 <malloc@plt>
   29ad0:	mov	x26, x0
   29ad4:	str	x0, [x21, #40]
   29ad8:	mov	x0, x22
   29adc:	bl	a5f0 <malloc@plt>
   29ae0:	str	x0, [x21, #48]
   29ae4:	cmp	x24, #0x0
   29ae8:	ccmp	x23, #0x0, #0x4, ne  // ne = any
   29aec:	cset	w24, eq  // eq = none
   29af0:	cmp	x26, #0x0
   29af4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   29af8:	csinc	w24, w24, wzr, ne  // ne = any
   29afc:	cbnz	w24, 2a16c <printf_parse@@Base+0xcd3c>
   29b00:	ldr	x0, [x20, #48]
   29b04:	lsl	x0, x0, #3
   29b08:	bl	a5f0 <malloc@plt>
   29b0c:	str	x0, [x21, #224]
   29b10:	cbz	x0, 29b88 <printf_parse@@Base+0xc758>
   29b14:	ldr	x0, [x20, #48]
   29b18:	cbz	x0, 29b38 <printf_parse@@Base+0xc708>
   29b1c:	mov	x0, #0x0                   	// #0
   29b20:	ldr	x1, [x21, #224]
   29b24:	str	x0, [x1, x0, lsl #3]
   29b28:	add	x0, x0, #0x1
   29b2c:	ldr	x1, [x20, #48]
   29b30:	cmp	x1, x0
   29b34:	b.hi	29b20 <printf_parse@@Base+0xc6f0>  // b.pmore
   29b38:	mov	x2, x21
   29b3c:	adrp	x1, 1e000 <printf_parse@@Base+0xbd0>
   29b40:	add	x1, x1, #0xe0
   29b44:	ldr	x0, [x21, #104]
   29b48:	bl	1eac4 <printf_parse@@Base+0x1694>
   29b4c:	ldr	x3, [x20, #48]
   29b50:	cbz	x3, 29c18 <printf_parse@@Base+0xc7e8>
   29b54:	ldr	x5, [x21, #224]
   29b58:	mov	x4, x3
   29b5c:	mov	x0, #0x0                   	// #0
   29b60:	mov	x1, x0
   29b64:	ldr	x2, [x5, x0, lsl #3]
   29b68:	cmp	x0, x2
   29b6c:	b.ne	29b80 <printf_parse@@Base+0xc750>  // b.any
   29b70:	add	x0, x0, #0x1
   29b74:	mov	x1, x0
   29b78:	cmp	x4, x0
   29b7c:	b.ne	29b60 <printf_parse@@Base+0xc730>  // b.any
   29b80:	cmp	x1, x3
   29b84:	b.eq	29c18 <printf_parse@@Base+0xc7e8>  // b.none
   29b88:	mov	x2, x20
   29b8c:	adrp	x1, 1e000 <printf_parse@@Base+0xbd0>
   29b90:	add	x1, x1, #0xf3c
   29b94:	ldr	x0, [x21, #104]
   29b98:	bl	1ea50 <printf_parse@@Base+0x1620>
   29b9c:	cbnz	w0, 2a170 <printf_parse@@Base+0xcd40>
   29ba0:	mov	x2, x21
   29ba4:	adrp	x1, 21000 <printf_parse@@Base+0x3bd0>
   29ba8:	add	x1, x1, #0x234
   29bac:	ldr	x0, [x21, #104]
   29bb0:	bl	1ea50 <printf_parse@@Base+0x1620>
   29bb4:	cbnz	w0, 2a170 <printf_parse@@Base+0xcd40>
   29bb8:	mov	x2, x21
   29bbc:	adrp	x1, 1e000 <printf_parse@@Base+0xbd0>
   29bc0:	add	x1, x1, #0x184
   29bc4:	ldr	x0, [x21, #104]
   29bc8:	bl	1eac4 <printf_parse@@Base+0x1694>
   29bcc:	mov	x2, x21
   29bd0:	adrp	x1, 22000 <printf_parse@@Base+0x4bd0>
   29bd4:	add	x1, x1, #0x2ac
   29bd8:	ldr	x0, [x21, #104]
   29bdc:	bl	1eac4 <printf_parse@@Base+0x1694>
   29be0:	cbnz	w0, 2a170 <printf_parse@@Base+0xcd40>
   29be4:	mov	w26, w24
   29be8:	mov	x22, #0x0                   	// #0
   29bec:	add	x28, sp, #0x78
   29bf0:	mov	w27, #0x1                   	// #1
   29bf4:	b	29c48 <printf_parse@@Base+0xc818>
   29bf8:	ldr	x0, [sp, #208]
   29bfc:	str	x0, [sp, #192]
   29c00:	str	x0, [sp, #200]
   29c04:	b	299fc <printf_parse@@Base+0xc5cc>
   29c08:	mov	w0, #0xc                   	// #12
   29c0c:	str	w0, [sp, #300]
   29c10:	str	xzr, [x19, #104]
   29c14:	b	298e0 <printf_parse@@Base+0xc4b0>
   29c18:	ldr	x0, [x21, #224]
   29c1c:	bl	aa50 <free@plt>
   29c20:	str	xzr, [x21, #224]
   29c24:	b	29b88 <printf_parse@@Base+0xc758>
   29c28:	cbz	w26, 29c98 <printf_parse@@Base+0xc868>
   29c2c:	mov	w26, w24
   29c30:	mov	x22, #0x0                   	// #0
   29c34:	b	29c54 <printf_parse@@Base+0xc824>
   29c38:	ldr	x0, [sp, #136]
   29c3c:	bl	aa50 <free@plt>
   29c40:	mov	w26, #0x1                   	// #1
   29c44:	add	x22, x22, #0x1
   29c48:	ldr	x0, [x21, #16]
   29c4c:	cmp	x0, x22
   29c50:	b.eq	29c28 <printf_parse@@Base+0xc7f8>  // b.none
   29c54:	add	x23, x22, x22, lsl #1
   29c58:	lsl	x23, x23, #3
   29c5c:	ldr	x0, [x21, #48]
   29c60:	add	x0, x0, x23
   29c64:	ldr	x0, [x0, #8]
   29c68:	cbnz	x0, 29c44 <printf_parse@@Base+0xc814>
   29c6c:	mov	w3, w27
   29c70:	mov	x2, x22
   29c74:	mov	x1, x21
   29c78:	mov	x0, x28
   29c7c:	bl	21680 <printf_parse@@Base+0x4250>
   29c80:	cbnz	w0, 2a170 <printf_parse@@Base+0xcd40>
   29c84:	ldr	x0, [x21, #48]
   29c88:	add	x23, x0, x23
   29c8c:	ldr	x0, [x23, #8]
   29c90:	cbnz	x0, 29c44 <printf_parse@@Base+0xc814>
   29c94:	b	29c38 <printf_parse@@Base+0xc808>
   29c98:	ldrb	w0, [x20, #56]
   29c9c:	tbz	w0, #4, 29dd0 <printf_parse@@Base+0xc9a0>
   29ca0:	ldr	x0, [x21, #152]
   29ca4:	cbz	x0, 29d64 <printf_parse@@Base+0xc934>
   29ca8:	ldr	x22, [x21, #16]
   29cac:	add	x0, x22, x22, lsl #1
   29cb0:	lsl	x0, x0, #3
   29cb4:	bl	a5f0 <malloc@plt>
   29cb8:	str	x0, [x21, #56]
   29cbc:	cbz	x0, 2a15c <printf_parse@@Base+0xcd2c>
   29cc0:	cbz	x22, 29d64 <printf_parse@@Base+0xc934>
   29cc4:	mov	x2, #0x0                   	// #0
   29cc8:	mov	x1, #0x0                   	// #0
   29ccc:	ldr	x0, [x21, #56]
   29cd0:	add	x0, x0, x2
   29cd4:	stp	xzr, xzr, [x0]
   29cd8:	str	xzr, [x0, #16]
   29cdc:	add	x1, x1, #0x1
   29ce0:	ldr	x0, [x21, #16]
   29ce4:	add	x2, x2, #0x18
   29ce8:	cmp	x1, x0
   29cec:	b.cc	29ccc <printf_parse@@Base+0xc89c>  // b.lo, b.ul, b.last
   29cf0:	cbz	x0, 29d64 <printf_parse@@Base+0xc934>
   29cf4:	mov	x23, #0x0                   	// #0
   29cf8:	mov	x24, #0x0                   	// #0
   29cfc:	ldr	x0, [x21, #48]
   29d00:	add	x0, x0, x23
   29d04:	ldr	x27, [x0, #16]
   29d08:	ldr	x0, [x0, #8]
   29d0c:	cmp	x0, #0x0
   29d10:	b.le	29d50 <printf_parse@@Base+0xc920>
   29d14:	mov	x22, #0x0                   	// #0
   29d18:	ldr	x0, [x27, x22, lsl #3]
   29d1c:	add	x0, x0, x0, lsl #1
   29d20:	ldr	x2, [x21, #56]
   29d24:	mov	x1, x24
   29d28:	add	x0, x2, x0, lsl #3
   29d2c:	bl	1ebe4 <printf_parse@@Base+0x17b4>
   29d30:	and	w0, w0, #0xff
   29d34:	cbz	w0, 2a164 <printf_parse@@Base+0xcd34>
   29d38:	add	x22, x22, #0x1
   29d3c:	ldr	x0, [x21, #48]
   29d40:	add	x0, x0, x23
   29d44:	ldr	x0, [x0, #8]
   29d48:	cmp	x22, x0
   29d4c:	b.lt	29d18 <printf_parse@@Base+0xc8e8>  // b.tstop
   29d50:	add	x24, x24, #0x1
   29d54:	add	x23, x23, #0x18
   29d58:	ldr	x0, [x21, #16]
   29d5c:	cmp	x24, x0
   29d60:	b.cc	29cfc <printf_parse@@Base+0xc8cc>  // b.lo, b.ul, b.last
   29d64:	str	wzr, [sp, #300]
   29d68:	ldrb	w1, [x19, #176]
   29d6c:	ubfx	x1, x1, #2, #1
   29d70:	cmp	x25, #0x0
   29d74:	csel	w1, w1, wzr, eq  // eq = none
   29d78:	cbnz	w1, 29de4 <printf_parse@@Base+0xc9b4>
   29d7c:	ldr	x0, [x19, #104]
   29d80:	ldr	x0, [x0, #24]
   29d84:	ldr	x1, [x0, #56]
   29d88:	str	x1, [x19, #144]
   29d8c:	add	x1, x1, x1, lsl #1
   29d90:	ldr	x0, [x19, #48]
   29d94:	add	x1, x0, x1, lsl #3
   29d98:	add	x0, sp, #0x78
   29d9c:	bl	200dc <printf_parse@@Base+0x2cac>
   29da0:	mov	w22, w0
   29da4:	str	w0, [sp, #116]
   29da8:	cbnz	w0, 2a034 <printf_parse@@Base+0xcc04>
   29dac:	ldr	x0, [x19, #152]
   29db0:	cmp	x0, #0x0
   29db4:	b.le	29ffc <printf_parse@@Base+0xcbcc>
   29db8:	ldr	x0, [sp, #128]
   29dbc:	cmp	x0, #0x0
   29dc0:	b.le	29ffc <printf_parse@@Base+0xcbcc>
   29dc4:	mov	x21, #0x0                   	// #0
   29dc8:	add	x23, sp, #0x78
   29dcc:	b	29fa8 <printf_parse@@Base+0xcb78>
   29dd0:	ldr	x0, [x20, #48]
   29dd4:	cbz	x0, 29ca0 <printf_parse@@Base+0xc870>
   29dd8:	ldrb	w0, [x21, #176]
   29ddc:	tbnz	w0, #0, 29ca8 <printf_parse@@Base+0xc878>
   29de0:	b	29ca0 <printf_parse@@Base+0xc870>
   29de4:	ldr	x0, [x20, #40]
   29de8:	cbnz	x0, 29d7c <printf_parse@@Base+0xc94c>
   29dec:	ldr	x6, [x19, #16]
   29df0:	cbz	x6, 29f2c <printf_parse@@Base+0xcafc>
   29df4:	ldr	x4, [x19]
   29df8:	mov	w8, w26
   29dfc:	mov	x5, #0x0                   	// #0
   29e00:	mov	w9, w1
   29e04:	mov	x3, #0x1                   	// #1
   29e08:	mov	w2, #0x10001               	// #65537
   29e0c:	movk	x2, #0x1, lsl #48
   29e10:	b	29e2c <printf_parse@@Base+0xc9fc>
   29e14:	cmp	w0, #0x2
   29e18:	b.ne	29e7c <printf_parse@@Base+0xca4c>  // b.any
   29e1c:	add	x5, x5, #0x1
   29e20:	add	x4, x4, #0x10
   29e24:	cmp	x6, x5
   29e28:	b.eq	2a11c <printf_parse@@Base+0xccec>  // b.none
   29e2c:	ldrb	w0, [x4, #8]
   29e30:	cmp	w0, #0x5
   29e34:	b.eq	29ed4 <printf_parse@@Base+0xcaa4>  // b.none
   29e38:	b.hi	29e64 <printf_parse@@Base+0xca34>  // b.pmore
   29e3c:	cmp	w0, #0x3
   29e40:	b.eq	29ebc <printf_parse@@Base+0xca8c>  // b.none
   29e44:	cmp	w0, #0x3
   29e48:	b.hi	29e1c <printf_parse@@Base+0xc9ec>  // b.pmore
   29e4c:	cmp	w0, #0x1
   29e50:	b.ne	29e14 <printf_parse@@Base+0xc9e4>  // b.any
   29e54:	ldrsb	w0, [x4]
   29e58:	cmp	w0, #0x0
   29e5c:	csel	w26, w26, w1, ge  // ge = tcont
   29e60:	b	29e1c <printf_parse@@Base+0xc9ec>
   29e64:	cmp	w0, #0xb
   29e68:	b.hi	29e80 <printf_parse@@Base+0xca50>  // b.pmore
   29e6c:	cmp	w0, #0x7
   29e70:	b.hi	29e1c <printf_parse@@Base+0xc9ec>  // b.pmore
   29e74:	cmp	w0, #0x6
   29e78:	b.eq	29d7c <printf_parse@@Base+0xc94c>  // b.none
   29e7c:	bl	a900 <abort@plt>
   29e80:	cmp	w0, #0xc
   29e84:	b.ne	29e7c <printf_parse@@Base+0xca4c>  // b.any
   29e88:	ldr	w0, [x4]
   29e8c:	cmp	w0, #0x40
   29e90:	b.hi	29eb0 <printf_parse@@Base+0xca80>  // b.pmore
   29e94:	cmp	w0, #0xf
   29e98:	b.ls	29d7c <printf_parse@@Base+0xc94c>  // b.plast
   29e9c:	sub	w0, w0, #0x10
   29ea0:	lsl	x0, x3, x0
   29ea4:	tst	x0, x2
   29ea8:	b.eq	29d7c <printf_parse@@Base+0xc94c>  // b.none
   29eac:	b	29e1c <printf_parse@@Base+0xc9ec>
   29eb0:	cmp	w0, #0x80
   29eb4:	b.eq	29e1c <printf_parse@@Base+0xc9ec>  // b.none
   29eb8:	b	29d7c <printf_parse@@Base+0xc94c>
   29ebc:	ldr	x0, [x4]
   29ec0:	ldr	x7, [x0, #16]
   29ec4:	cbnz	x7, 29d7c <printf_parse@@Base+0xc94c>
   29ec8:	ldr	x0, [x0, #24]
   29ecc:	cbz	x0, 29e1c <printf_parse@@Base+0xc9ec>
   29ed0:	b	29d7c <printf_parse@@Base+0xc94c>
   29ed4:	mov	w8, w9
   29ed8:	b	29e1c <printf_parse@@Base+0xc9ec>
   29edc:	ldrsb	w1, [x4, x3]
   29ee0:	tbnz	w1, #31, 29f1c <printf_parse@@Base+0xcaec>
   29ee4:	add	x0, x0, #0x1
   29ee8:	ldr	x1, [x19, #16]
   29eec:	cmp	x0, x1
   29ef0:	b.cs	2a130 <printf_parse@@Base+0xcd00>  // b.hs, b.nlast
   29ef4:	lsl	x3, x0, #4
   29ef8:	ldr	x4, [x19]
   29efc:	add	x2, x4, x3
   29f00:	ldrb	w1, [x2, #8]
   29f04:	cmp	w1, #0x1
   29f08:	b.eq	29edc <printf_parse@@Base+0xcaac>  // b.none
   29f0c:	cmp	w1, #0x5
   29f10:	b.ne	29ee4 <printf_parse@@Base+0xcab4>  // b.any
   29f14:	strb	w5, [x2, #8]
   29f18:	b	29ee4 <printf_parse@@Base+0xcab4>
   29f1c:	ldrb	w1, [x2, #10]
   29f20:	and	w1, w1, #0xffffffdf
   29f24:	strb	w1, [x2, #10]
   29f28:	b	29ee4 <printf_parse@@Base+0xcab4>
   29f2c:	mov	w8, w26
   29f30:	b	2a130 <printf_parse@@Base+0xcd00>
   29f34:	add	x2, x2, #0x1
   29f38:	cmp	x0, x2
   29f3c:	b.eq	29f98 <printf_parse@@Base+0xcb68>  // b.none
   29f40:	ldr	x3, [x5, x2, lsl #3]
   29f44:	lsl	x3, x3, #4
   29f48:	add	x7, x4, x3
   29f4c:	ldrb	w7, [x7, #8]
   29f50:	cmp	w7, #0x9
   29f54:	b.ne	29f34 <printf_parse@@Base+0xcb04>  // b.any
   29f58:	ldr	x7, [x4, x3]
   29f5c:	ldr	x3, [x6]
   29f60:	cmp	x7, x3
   29f64:	b.ne	29f34 <printf_parse@@Base+0xcb04>  // b.any
   29f68:	cmp	x2, x0
   29f6c:	b.eq	29f98 <printf_parse@@Base+0xcb68>  // b.none
   29f70:	ldr	x0, [x19, #40]
   29f74:	add	x1, x1, x1, lsl #1
   29f78:	add	x1, x0, x1, lsl #3
   29f7c:	ldr	x0, [x1, #16]
   29f80:	ldr	x25, [x0]
   29f84:	mov	x1, x25
   29f88:	mov	x0, x23
   29f8c:	bl	1e034 <printf_parse@@Base+0xc04>
   29f90:	mov	x24, x0
   29f94:	cbz	x0, 29fdc <printf_parse@@Base+0xcbac>
   29f98:	add	x21, x21, #0x1
   29f9c:	ldr	x0, [sp, #128]
   29fa0:	cmp	x0, x21
   29fa4:	b.le	29ffc <printf_parse@@Base+0xcbcc>
   29fa8:	ldr	x5, [sp, #136]
   29fac:	ldr	x4, [x19]
   29fb0:	ldr	x1, [x5, x21, lsl #3]
   29fb4:	add	x6, x4, x1, lsl #4
   29fb8:	ldrb	w2, [x6, #8]
   29fbc:	cmp	w2, #0x4
   29fc0:	b.ne	29f98 <printf_parse@@Base+0xcb68>  // b.any
   29fc4:	cmp	x0, #0x0
   29fc8:	b.le	29fd4 <printf_parse@@Base+0xcba4>
   29fcc:	mov	x2, #0x0                   	// #0
   29fd0:	b	29f40 <printf_parse@@Base+0xcb10>
   29fd4:	mov	x2, #0x0                   	// #0
   29fd8:	b	29f68 <printf_parse@@Base+0xcb38>
   29fdc:	add	x25, x25, x25, lsl #1
   29fe0:	ldr	x1, [x19, #48]
   29fe4:	add	x1, x1, x25, lsl #3
   29fe8:	mov	x0, x23
   29fec:	bl	1ff2c <printf_parse@@Base+0x2afc>
   29ff0:	cbnz	w0, 2a0e8 <printf_parse@@Base+0xccb8>
   29ff4:	mov	x21, x24
   29ff8:	b	29f98 <printf_parse@@Base+0xcb68>
   29ffc:	mov	w3, #0x0                   	// #0
   2a000:	add	x2, sp, #0x78
   2a004:	mov	x1, x19
   2a008:	add	x0, sp, #0x74
   2a00c:	bl	21950 <printf_parse@@Base+0x4520>
   2a010:	str	x0, [x19, #72]
   2a014:	cbz	x0, 2a070 <printf_parse@@Base+0xcc40>
   2a018:	ldrsb	w1, [x0, #104]
   2a01c:	tbnz	w1, #31, 2a078 <printf_parse@@Base+0xcc48>
   2a020:	str	x0, [x19, #96]
   2a024:	str	x0, [x19, #88]
   2a028:	str	x0, [x19, #80]
   2a02c:	ldr	x0, [sp, #136]
   2a030:	bl	aa50 <free@plt>
   2a034:	str	w22, [sp, #300]
   2a038:	mov	x0, x20
   2a03c:	bl	21c20 <printf_parse@@Base+0x47f0>
   2a040:	add	x0, sp, #0x90
   2a044:	bl	21c70 <printf_parse@@Base+0x4840>
   2a048:	ldr	w0, [sp, #300]
   2a04c:	cbnz	w0, 2a0f0 <printf_parse@@Base+0xccc0>
   2a050:	ldr	w0, [sp, #300]
   2a054:	ldp	x25, x26, [sp, #64]
   2a058:	ldp	x27, x28, [sp, #80]
   2a05c:	ldp	x19, x20, [sp, #16]
   2a060:	ldp	x21, x22, [sp, #32]
   2a064:	ldp	x23, x24, [sp, #48]
   2a068:	ldp	x29, x30, [sp], #304
   2a06c:	ret
   2a070:	ldr	w22, [sp, #116]
   2a074:	b	2a034 <printf_parse@@Base+0xcc04>
   2a078:	add	x23, sp, #0x78
   2a07c:	add	x21, sp, #0x74
   2a080:	mov	w3, #0x1                   	// #1
   2a084:	mov	x2, x23
   2a088:	mov	x1, x19
   2a08c:	mov	x0, x21
   2a090:	bl	21950 <printf_parse@@Base+0x4520>
   2a094:	str	x0, [x19, #80]
   2a098:	mov	w3, #0x2                   	// #2
   2a09c:	mov	x2, x23
   2a0a0:	mov	x1, x19
   2a0a4:	mov	x0, x21
   2a0a8:	bl	21950 <printf_parse@@Base+0x4520>
   2a0ac:	str	x0, [x19, #88]
   2a0b0:	mov	w3, #0x6                   	// #6
   2a0b4:	mov	x2, x23
   2a0b8:	mov	x1, x19
   2a0bc:	mov	x0, x21
   2a0c0:	bl	21950 <printf_parse@@Base+0x4520>
   2a0c4:	str	x0, [x19, #96]
   2a0c8:	ldr	x1, [x19, #80]
   2a0cc:	cbz	x1, 2a0e0 <printf_parse@@Base+0xccb0>
   2a0d0:	ldr	x1, [x19, #88]
   2a0d4:	cmp	x1, #0x0
   2a0d8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2a0dc:	b.ne	2a02c <printf_parse@@Base+0xcbfc>  // b.any
   2a0e0:	ldr	w22, [sp, #116]
   2a0e4:	b	2a034 <printf_parse@@Base+0xcc04>
   2a0e8:	mov	w22, w0
   2a0ec:	b	2a034 <printf_parse@@Base+0xcc04>
   2a0f0:	ldr	w0, [sp, #108]
   2a0f4:	cbz	w0, 2a100 <printf_parse@@Base+0xccd0>
   2a0f8:	add	x0, x19, #0xe8
   2a0fc:	bl	ac30 <pthread_mutex_destroy@plt>
   2a100:	mov	x0, x19
   2a104:	bl	21cb0 <printf_parse@@Base+0x4880>
   2a108:	str	xzr, [x20]
   2a10c:	str	xzr, [x20, #8]
   2a110:	b	2a050 <printf_parse@@Base+0xcc20>
   2a114:	mov	w0, #0xc                   	// #12
   2a118:	b	2a05c <printf_parse@@Base+0xcc2c>
   2a11c:	cmp	w26, #0x0
   2a120:	mov	x0, #0x0                   	// #0
   2a124:	ccmp	w8, #0x0, #0x0, eq  // eq = none
   2a128:	mov	w5, #0x7                   	// #7
   2a12c:	b.ne	29ef4 <printf_parse@@Base+0xcac4>  // b.any
   2a130:	mov	w0, #0x1                   	// #1
   2a134:	str	w0, [x19, #180]
   2a138:	ldrb	w0, [x19, #176]
   2a13c:	ldr	x1, [x19, #152]
   2a140:	cmp	x1, #0x0
   2a144:	ccmp	w8, #0x0, #0x0, le
   2a148:	cset	w1, ne  // ne = any
   2a14c:	and	w0, w0, #0xfffffffb
   2a150:	bfi	w0, w1, #1, #1
   2a154:	strb	w0, [x19, #176]
   2a158:	b	29d7c <printf_parse@@Base+0xc94c>
   2a15c:	mov	w0, #0xc                   	// #12
   2a160:	b	2a170 <printf_parse@@Base+0xcd40>
   2a164:	mov	w0, #0xc                   	// #12
   2a168:	b	2a170 <printf_parse@@Base+0xcd40>
   2a16c:	mov	w0, #0xc                   	// #12
   2a170:	str	w0, [sp, #300]
   2a174:	b	298e0 <printf_parse@@Base+0xc4b0>
   2a178:	mov	w0, #0xc                   	// #12
   2a17c:	str	w0, [sp, #300]
   2a180:	mov	x0, x19
   2a184:	bl	21cb0 <printf_parse@@Base+0x4880>
   2a188:	str	xzr, [x20]
   2a18c:	str	xzr, [x20, #8]
   2a190:	ldr	w0, [sp, #300]
   2a194:	b	2a05c <printf_parse@@Base+0xcc2c>
   2a198:	tst	w24, #0xffffff80
   2a19c:	b.ne	2a1ac <printf_parse@@Base+0xcd7c>  // b.any
   2a1a0:	ldrb	w0, [x19, #176]
   2a1a4:	orr	w0, w0, #0x8
   2a1a8:	strb	w0, [x19, #176]
   2a1ac:	add	w26, w26, #0x1
   2a1b0:	add	w24, w24, #0x1
   2a1b4:	cmp	w26, #0x40
   2a1b8:	b.eq	29974 <printf_parse@@Base+0xc544>  // b.none
   2a1bc:	mov	w0, w24
   2a1c0:	bl	a8d0 <btowc@plt>
   2a1c4:	cmn	w0, #0x1
   2a1c8:	b.eq	2a198 <printf_parse@@Base+0xcd68>  // b.none
   2a1cc:	ldr	x3, [x19, #120]
   2a1d0:	lsl	x1, x27, x26
   2a1d4:	ldr	x2, [x3, x25]
   2a1d8:	orr	x1, x2, x1
   2a1dc:	str	x1, [x3, x25]
   2a1e0:	tst	w24, #0xffffff80
   2a1e4:	b.ne	2a1ac <printf_parse@@Base+0xcd7c>  // b.any
   2a1e8:	cmp	w0, w24
   2a1ec:	b.eq	2a1ac <printf_parse@@Base+0xcd7c>  // b.none
   2a1f0:	b	2a1a0 <printf_parse@@Base+0xcd70>

000000000002a1f4 <rpl_re_compile_pattern@@Base>:
   2a1f4:	stp	x29, x30, [sp, #-16]!
   2a1f8:	mov	x29, sp
   2a1fc:	mov	x4, x0
   2a200:	mov	x0, x2
   2a204:	adrp	x2, 46000 <vasnprintf@@Base+0x1b378>
   2a208:	ldr	x2, [x2, #3920]
   2a20c:	ldr	x3, [x2]
   2a210:	ubfx	w5, w3, #25, #1
   2a214:	ldrb	w2, [x0, #56]
   2a218:	bfi	w2, w5, #4, #1
   2a21c:	orr	w2, w2, #0xffffff80
   2a220:	strb	w2, [x0, #56]
   2a224:	mov	x2, x1
   2a228:	mov	x1, x4
   2a22c:	bl	29620 <printf_parse@@Base+0xc1f0>
   2a230:	cbz	w0, 2a260 <rpl_re_compile_pattern@@Base+0x6c>
   2a234:	adrp	x2, 2e000 <vasnprintf@@Base+0x3378>
   2a238:	add	x2, x2, #0xcb8
   2a23c:	add	x1, x2, #0x68
   2a240:	add	x2, x2, #0x1e8
   2a244:	ldr	x0, [x2, w0, sxtw #3]
   2a248:	mov	w2, #0x5                   	// #5
   2a24c:	add	x1, x1, x0
   2a250:	mov	x0, #0x0                   	// #0
   2a254:	bl	ada0 <dcgettext@plt>
   2a258:	ldp	x29, x30, [sp], #16
   2a25c:	ret
   2a260:	mov	x0, #0x0                   	// #0
   2a264:	b	2a258 <rpl_re_compile_pattern@@Base+0x64>

000000000002a268 <rpl_re_set_syntax@@Base>:
   2a268:	mov	x2, x0
   2a26c:	adrp	x1, 46000 <vasnprintf@@Base+0x1b378>
   2a270:	ldr	x1, [x1, #3920]
   2a274:	ldr	x0, [x1]
   2a278:	str	x2, [x1]
   2a27c:	ret

000000000002a280 <rpl_re_compile_fastmap@@Base>:
   2a280:	stp	x29, x30, [sp, #-48]!
   2a284:	mov	x29, sp
   2a288:	stp	x19, x20, [sp, #16]
   2a28c:	str	x21, [sp, #32]
   2a290:	mov	x19, x0
   2a294:	ldr	x20, [x0]
   2a298:	ldr	x21, [x0, #32]
   2a29c:	mov	x2, #0x100                 	// #256
   2a2a0:	mov	w1, #0x0                   	// #0
   2a2a4:	mov	x0, x21
   2a2a8:	bl	a6f0 <memset@plt>
   2a2ac:	mov	x2, x21
   2a2b0:	ldr	x1, [x20, #72]
   2a2b4:	mov	x0, x19
   2a2b8:	bl	231f4 <printf_parse@@Base+0x5dc4>
   2a2bc:	ldr	x1, [x20, #80]
   2a2c0:	ldr	x0, [x20, #72]
   2a2c4:	cmp	x0, x1
   2a2c8:	b.eq	2a2d8 <rpl_re_compile_fastmap@@Base+0x58>  // b.none
   2a2cc:	mov	x2, x21
   2a2d0:	mov	x0, x19
   2a2d4:	bl	231f4 <printf_parse@@Base+0x5dc4>
   2a2d8:	ldr	x1, [x20, #88]
   2a2dc:	ldr	x0, [x20, #72]
   2a2e0:	cmp	x0, x1
   2a2e4:	b.eq	2a2f4 <rpl_re_compile_fastmap@@Base+0x74>  // b.none
   2a2e8:	mov	x2, x21
   2a2ec:	mov	x0, x19
   2a2f0:	bl	231f4 <printf_parse@@Base+0x5dc4>
   2a2f4:	ldr	x1, [x20, #96]
   2a2f8:	ldr	x0, [x20, #72]
   2a2fc:	cmp	x0, x1
   2a300:	b.eq	2a310 <rpl_re_compile_fastmap@@Base+0x90>  // b.none
   2a304:	mov	x2, x21
   2a308:	mov	x0, x19
   2a30c:	bl	231f4 <printf_parse@@Base+0x5dc4>
   2a310:	ldrb	w0, [x19, #56]
   2a314:	orr	w0, w0, #0x8
   2a318:	strb	w0, [x19, #56]
   2a31c:	mov	w0, #0x0                   	// #0
   2a320:	ldp	x19, x20, [sp, #16]
   2a324:	ldr	x21, [sp, #32]
   2a328:	ldp	x29, x30, [sp], #48
   2a32c:	ret
   2a330:	sub	sp, sp, #0x90
   2a334:	stp	x29, x30, [sp, #16]
   2a338:	add	x29, sp, #0x10
   2a33c:	stp	x21, x22, [sp, #48]
   2a340:	stp	x25, x26, [sp, #80]
   2a344:	stp	x27, x28, [sp, #96]
   2a348:	str	x1, [sp, #112]
   2a34c:	str	x5, [sp, #120]
   2a350:	ldr	x27, [x0]
   2a354:	add	x25, x3, x4
   2a358:	cmp	x3, #0x0
   2a35c:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   2a360:	b.gt	2a6f8 <rpl_re_compile_fastmap@@Base+0x478>
   2a364:	stp	x19, x20, [sp, #32]
   2a368:	stp	x23, x24, [sp, #64]
   2a36c:	mov	x22, x0
   2a370:	mov	x26, x2
   2a374:	mov	x21, x3
   2a378:	mov	x20, x6
   2a37c:	and	w28, w7, #0xff
   2a380:	cmp	x25, x2
   2a384:	b.gt	2a4ac <rpl_re_compile_fastmap@@Base+0x22c>
   2a388:	cmp	x4, #0x0
   2a38c:	ccmp	x3, x25, #0x4, ge  // ge = tcont
   2a390:	b.gt	2a4b4 <rpl_re_compile_fastmap@@Base+0x234>
   2a394:	tbnz	x25, #63, 2a708 <rpl_re_compile_fastmap@@Base+0x488>
   2a398:	cmp	x4, #0x0
   2a39c:	ccmp	x3, x25, #0x0, lt  // lt = tstop
   2a3a0:	b.le	2a708 <rpl_re_compile_fastmap@@Base+0x488>
   2a3a4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   2a3a8:	ldr	x0, [x0, #3944]
   2a3ac:	cmp	x0, #0x0
   2a3b0:	cset	w23, ne  // ne = any
   2a3b4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   2a3b8:	ldr	x0, [x0, #4040]
   2a3bc:	cmp	x0, #0x0
   2a3c0:	cset	w0, ne  // ne = any
   2a3c4:	orr	w23, w23, w0
   2a3c8:	ands	w23, w23, #0xff
   2a3cc:	b.eq	2a3dc <rpl_re_compile_fastmap@@Base+0x15c>  // b.none
   2a3d0:	add	x0, x27, #0xe8
   2a3d4:	bl	af00 <pthread_mutex_lock@plt>
   2a3d8:	mov	w23, #0x1                   	// #1
   2a3dc:	ldrb	w0, [x22, #56]
   2a3e0:	ubfx	x1, x0, #5, #2
   2a3e4:	str	x1, [sp, #128]
   2a3e8:	cmp	x25, x21
   2a3ec:	b.le	2a3fc <rpl_re_compile_fastmap@@Base+0x17c>
   2a3f0:	ldr	x1, [x22, #32]
   2a3f4:	cbz	x1, 2a3fc <rpl_re_compile_fastmap@@Base+0x17c>
   2a3f8:	tbz	w0, #3, 2a4bc <rpl_re_compile_fastmap@@Base+0x23c>
   2a3fc:	ldrb	w0, [x22, #56]
   2a400:	tbnz	w0, #4, 2a4e8 <rpl_re_compile_fastmap@@Base+0x268>
   2a404:	mov	x19, #0x1                   	// #1
   2a408:	cbz	x20, 2a424 <rpl_re_compile_fastmap@@Base+0x1a4>
   2a40c:	ldrb	w0, [x22, #56]
   2a410:	and	w0, w0, #0x6
   2a414:	cmp	w0, #0x4
   2a418:	b.eq	2a4c8 <rpl_re_compile_fastmap@@Base+0x248>  // b.none
   2a41c:	ldr	x19, [x22, #48]
   2a420:	add	x19, x19, #0x1
   2a424:	str	x19, [sp, #136]
   2a428:	lsl	x0, x19, #4
   2a42c:	bl	a5f0 <malloc@plt>
   2a430:	mov	x24, x0
   2a434:	cbz	x0, 2a6f0 <rpl_re_compile_fastmap@@Base+0x470>
   2a438:	ldr	w0, [sp, #128]
   2a43c:	str	w0, [sp]
   2a440:	mov	x7, x24
   2a444:	mov	x6, x19
   2a448:	ldr	x5, [sp, #120]
   2a44c:	mov	x4, x25
   2a450:	mov	x3, x21
   2a454:	mov	x2, x26
   2a458:	ldr	x1, [sp, #112]
   2a45c:	mov	x0, x22
   2a460:	bl	28418 <printf_parse@@Base+0xafe8>
   2a464:	cbz	w0, 2a4f4 <rpl_re_compile_fastmap@@Base+0x274>
   2a468:	cmp	w0, #0x1
   2a46c:	cset	x21, eq  // eq = none
   2a470:	sub	x21, x21, #0x2
   2a474:	mov	x0, x24
   2a478:	bl	aa50 <free@plt>
   2a47c:	cbz	w23, 2a74c <rpl_re_compile_fastmap@@Base+0x4cc>
   2a480:	add	x0, x27, #0xe8
   2a484:	bl	af40 <pthread_mutex_unlock@plt>
   2a488:	ldp	x19, x20, [sp, #32]
   2a48c:	ldp	x23, x24, [sp, #64]
   2a490:	mov	x0, x21
   2a494:	ldp	x21, x22, [sp, #48]
   2a498:	ldp	x25, x26, [sp, #80]
   2a49c:	ldp	x27, x28, [sp, #96]
   2a4a0:	ldp	x29, x30, [sp, #16]
   2a4a4:	add	sp, sp, #0x90
   2a4a8:	ret
   2a4ac:	mov	x25, x2
   2a4b0:	b	2a3a4 <rpl_re_compile_fastmap@@Base+0x124>
   2a4b4:	mov	x25, x2
   2a4b8:	b	2a3a4 <rpl_re_compile_fastmap@@Base+0x124>
   2a4bc:	mov	x0, x22
   2a4c0:	bl	af90 <rpl_re_compile_fastmap@plt>
   2a4c4:	b	2a3fc <rpl_re_compile_fastmap@@Base+0x17c>
   2a4c8:	ldr	x0, [x20]
   2a4cc:	ldr	x1, [x22, #48]
   2a4d0:	cmp	x0, x1
   2a4d4:	b.hi	2a41c <rpl_re_compile_fastmap@@Base+0x19c>  // b.pmore
   2a4d8:	cmp	x0, #0x0
   2a4dc:	csel	x19, x0, x19, gt
   2a4e0:	csel	x20, x20, xzr, gt
   2a4e4:	b	2a424 <rpl_re_compile_fastmap@@Base+0x1a4>
   2a4e8:	mov	x19, #0x1                   	// #1
   2a4ec:	mov	x20, #0x0                   	// #0
   2a4f0:	b	2a424 <rpl_re_compile_fastmap@@Base+0x1a4>
   2a4f4:	cbz	x20, 2a5a8 <rpl_re_compile_fastmap@@Base+0x328>
   2a4f8:	ldrb	w25, [x22, #56]
   2a4fc:	ubfx	x25, x25, #1, #2
   2a500:	add	x26, x19, #0x1
   2a504:	cbz	w25, 2a5b4 <rpl_re_compile_fastmap@@Base+0x334>
   2a508:	cmp	w25, #0x1
   2a50c:	b.eq	2a5f8 <rpl_re_compile_fastmap@@Base+0x378>  // b.none
   2a510:	cmp	w25, #0x2
   2a514:	b.ne	2a654 <rpl_re_compile_fastmap@@Base+0x3d4>  // b.any
   2a518:	ldr	x0, [x20]
   2a51c:	ldr	x1, [sp, #136]
   2a520:	cmp	x1, x0
   2a524:	b.hi	2a678 <rpl_re_compile_fastmap@@Base+0x3f8>  // b.pmore
   2a528:	cmp	x19, #0x0
   2a52c:	b.le	2a69c <rpl_re_compile_fastmap@@Base+0x41c>
   2a530:	add	x1, x24, #0x8
   2a534:	ldr	x0, [sp, #136]
   2a538:	lsl	x2, x0, #3
   2a53c:	mov	x0, #0x0                   	// #0
   2a540:	ldur	x4, [x1, #-8]
   2a544:	ldr	x3, [x20, #8]
   2a548:	str	x4, [x3, x0]
   2a54c:	ldr	x4, [x1], #16
   2a550:	ldr	x3, [x20, #16]
   2a554:	str	x4, [x3, x0]
   2a558:	add	x0, x0, #0x8
   2a55c:	cmp	x2, x0
   2a560:	b.ne	2a540 <rpl_re_compile_fastmap@@Base+0x2c0>  // b.any
   2a564:	ldr	x0, [x20]
   2a568:	cmp	x19, x0
   2a56c:	b.cs	2a594 <rpl_re_compile_fastmap@@Base+0x314>  // b.hs, b.nlast
   2a570:	mov	x0, #0xffffffffffffffff    	// #-1
   2a574:	ldr	x1, [x20, #16]
   2a578:	str	x0, [x1, x19, lsl #3]
   2a57c:	ldr	x1, [x20, #8]
   2a580:	str	x0, [x1, x19, lsl #3]
   2a584:	add	x19, x19, #0x1
   2a588:	ldr	x1, [x20]
   2a58c:	cmp	x19, x1
   2a590:	b.cc	2a574 <rpl_re_compile_fastmap@@Base+0x2f4>  // b.lo, b.ul, b.last
   2a594:	ldrb	w0, [x22, #56]
   2a598:	bfi	w0, w25, #1, #2
   2a59c:	strb	w0, [x22, #56]
   2a5a0:	tst	w0, #0x6
   2a5a4:	b.eq	2a700 <rpl_re_compile_fastmap@@Base+0x480>  // b.none
   2a5a8:	cbnz	w28, 2a6b4 <rpl_re_compile_fastmap@@Base+0x434>
   2a5ac:	ldr	x21, [x24]
   2a5b0:	b	2a474 <rpl_re_compile_fastmap@@Base+0x1f4>
   2a5b4:	lsl	x25, x26, #3
   2a5b8:	mov	x0, x25
   2a5bc:	bl	a5f0 <malloc@plt>
   2a5c0:	str	x0, [sp, #112]
   2a5c4:	str	x0, [x20, #8]
   2a5c8:	cbz	x0, 2a6a4 <rpl_re_compile_fastmap@@Base+0x424>
   2a5cc:	mov	x0, x25
   2a5d0:	bl	a5f0 <malloc@plt>
   2a5d4:	str	x0, [x20, #16]
   2a5d8:	cbz	x0, 2a5e8 <rpl_re_compile_fastmap@@Base+0x368>
   2a5dc:	str	x26, [x20]
   2a5e0:	mov	w25, #0x1                   	// #1
   2a5e4:	b	2a528 <rpl_re_compile_fastmap@@Base+0x2a8>
   2a5e8:	ldr	x0, [sp, #112]
   2a5ec:	bl	aa50 <free@plt>
   2a5f0:	mov	w25, #0x0                   	// #0
   2a5f4:	b	2a594 <rpl_re_compile_fastmap@@Base+0x314>
   2a5f8:	ldr	x0, [x20]
   2a5fc:	cmp	x0, x26
   2a600:	b.cs	2a528 <rpl_re_compile_fastmap@@Base+0x2a8>  // b.hs, b.nlast
   2a604:	lsl	x0, x26, #3
   2a608:	str	x0, [sp, #120]
   2a60c:	mov	x1, x0
   2a610:	ldr	x0, [x20, #8]
   2a614:	bl	a7e0 <realloc@plt>
   2a618:	str	x0, [sp, #112]
   2a61c:	cbz	x0, 2a6ac <rpl_re_compile_fastmap@@Base+0x42c>
   2a620:	ldr	x1, [sp, #120]
   2a624:	ldr	x0, [x20, #16]
   2a628:	bl	a7e0 <realloc@plt>
   2a62c:	cbz	x0, 2a644 <rpl_re_compile_fastmap@@Base+0x3c4>
   2a630:	ldr	x1, [sp, #112]
   2a634:	str	x1, [x20, #8]
   2a638:	str	x0, [x20, #16]
   2a63c:	str	x26, [x20]
   2a640:	b	2a528 <rpl_re_compile_fastmap@@Base+0x2a8>
   2a644:	ldr	x0, [sp, #112]
   2a648:	bl	aa50 <free@plt>
   2a64c:	mov	w25, #0x0                   	// #0
   2a650:	b	2a594 <rpl_re_compile_fastmap@@Base+0x314>
   2a654:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   2a658:	add	x3, x3, #0xcb8
   2a65c:	add	x3, x3, #0x270
   2a660:	mov	w2, #0x1f9                 	// #505
   2a664:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   2a668:	add	x1, x1, #0xfb8
   2a66c:	adrp	x0, 2f000 <vasnprintf@@Base+0x4378>
   2a670:	add	x0, x0, #0x60
   2a674:	bl	aea0 <__assert_fail@plt>
   2a678:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   2a67c:	add	x3, x3, #0xcb8
   2a680:	add	x3, x3, #0x270
   2a684:	mov	w2, #0x1fb                 	// #507
   2a688:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   2a68c:	add	x1, x1, #0xfb8
   2a690:	adrp	x0, 2f000 <vasnprintf@@Base+0x4378>
   2a694:	add	x0, x0, #0x80
   2a698:	bl	aea0 <__assert_fail@plt>
   2a69c:	mov	x19, #0x0                   	// #0
   2a6a0:	b	2a564 <rpl_re_compile_fastmap@@Base+0x2e4>
   2a6a4:	mov	w25, #0x0                   	// #0
   2a6a8:	b	2a594 <rpl_re_compile_fastmap@@Base+0x314>
   2a6ac:	mov	w25, #0x0                   	// #0
   2a6b0:	b	2a594 <rpl_re_compile_fastmap@@Base+0x314>
   2a6b4:	ldr	x0, [x24]
   2a6b8:	cmp	x0, x21
   2a6bc:	b.ne	2a6cc <rpl_re_compile_fastmap@@Base+0x44c>  // b.any
   2a6c0:	ldr	x3, [x24, #8]
   2a6c4:	sub	x21, x3, x21
   2a6c8:	b	2a474 <rpl_re_compile_fastmap@@Base+0x1f4>
   2a6cc:	adrp	x3, 2e000 <vasnprintf@@Base+0x3378>
   2a6d0:	add	x3, x3, #0xcb8
   2a6d4:	add	x3, x3, #0x280
   2a6d8:	mov	w2, #0x1be                 	// #446
   2a6dc:	adrp	x1, 2e000 <vasnprintf@@Base+0x3378>
   2a6e0:	add	x1, x1, #0xfb8
   2a6e4:	adrp	x0, 2f000 <vasnprintf@@Base+0x4378>
   2a6e8:	add	x0, x0, #0x98
   2a6ec:	bl	aea0 <__assert_fail@plt>
   2a6f0:	mov	x21, #0xfffffffffffffffe    	// #-2
   2a6f4:	b	2a47c <rpl_re_compile_fastmap@@Base+0x1fc>
   2a6f8:	mov	x21, #0xffffffffffffffff    	// #-1
   2a6fc:	b	2a490 <rpl_re_compile_fastmap@@Base+0x210>
   2a700:	mov	x21, #0xfffffffffffffffe    	// #-2
   2a704:	b	2a474 <rpl_re_compile_fastmap@@Base+0x1f4>
   2a708:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   2a70c:	ldr	x0, [x0, #3944]
   2a710:	cmp	x0, #0x0
   2a714:	cset	w23, ne  // ne = any
   2a718:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   2a71c:	ldr	x0, [x0, #4040]
   2a720:	cmp	x0, #0x0
   2a724:	cset	w0, ne  // ne = any
   2a728:	orr	w23, w23, w0
   2a72c:	mov	x25, #0x0                   	// #0
   2a730:	ands	w23, w23, #0xff
   2a734:	b.ne	2a3d0 <rpl_re_compile_fastmap@@Base+0x150>  // b.any
   2a738:	ldrb	w0, [x22, #56]
   2a73c:	ubfx	x0, x0, #5, #2
   2a740:	str	x0, [sp, #128]
   2a744:	mov	x25, #0x0                   	// #0
   2a748:	b	2a3fc <rpl_re_compile_fastmap@@Base+0x17c>
   2a74c:	ldp	x19, x20, [sp, #32]
   2a750:	ldp	x23, x24, [sp, #64]
   2a754:	b	2a490 <rpl_re_compile_fastmap@@Base+0x210>
   2a758:	stp	x29, x30, [sp, #-112]!
   2a75c:	mov	x29, sp
   2a760:	stp	x19, x20, [sp, #16]
   2a764:	stp	x27, x28, [sp, #80]
   2a768:	str	x1, [sp, #104]
   2a76c:	ldr	x27, [sp, #112]
   2a770:	cmp	x4, #0x0
   2a774:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
   2a778:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
   2a77c:	b.lt	2a854 <rpl_re_compile_fastmap@@Base+0x5d4>  // b.tstop
   2a780:	stp	x21, x22, [sp, #32]
   2a784:	stp	x23, x24, [sp, #48]
   2a788:	stp	x25, x26, [sp, #64]
   2a78c:	mov	x22, x0
   2a790:	mov	x19, x2
   2a794:	mov	x21, x3
   2a798:	mov	x20, x4
   2a79c:	mov	x23, x5
   2a7a0:	mov	x24, x6
   2a7a4:	mov	x25, x7
   2a7a8:	adds	x28, x2, x4
   2a7ac:	b.vs	2a85c <rpl_re_compile_fastmap@@Base+0x5dc>
   2a7b0:	cmp	x4, #0x0
   2a7b4:	b.le	2a848 <rpl_re_compile_fastmap@@Base+0x5c8>
   2a7b8:	mov	x26, #0x0                   	// #0
   2a7bc:	cmp	x2, #0x0
   2a7c0:	b.gt	2a814 <rpl_re_compile_fastmap@@Base+0x594>
   2a7c4:	ldrb	w7, [sp, #120]
   2a7c8:	mov	x6, x25
   2a7cc:	mov	x5, x27
   2a7d0:	mov	x4, x24
   2a7d4:	mov	x3, x23
   2a7d8:	mov	x2, x28
   2a7dc:	mov	x1, x21
   2a7e0:	mov	x0, x22
   2a7e4:	bl	2a330 <rpl_re_compile_fastmap@@Base+0xb0>
   2a7e8:	mov	x19, x0
   2a7ec:	mov	x0, x26
   2a7f0:	bl	aa50 <free@plt>
   2a7f4:	ldp	x21, x22, [sp, #32]
   2a7f8:	ldp	x23, x24, [sp, #48]
   2a7fc:	ldp	x25, x26, [sp, #64]
   2a800:	mov	x0, x19
   2a804:	ldp	x19, x20, [sp, #16]
   2a808:	ldp	x27, x28, [sp, #80]
   2a80c:	ldp	x29, x30, [sp], #112
   2a810:	ret
   2a814:	mov	x0, x28
   2a818:	bl	a5f0 <malloc@plt>
   2a81c:	mov	x26, x0
   2a820:	cbz	x0, 2a870 <rpl_re_compile_fastmap@@Base+0x5f0>
   2a824:	mov	x2, x19
   2a828:	ldr	x1, [sp, #104]
   2a82c:	bl	a2c0 <memcpy@plt>
   2a830:	mov	x2, x20
   2a834:	mov	x1, x21
   2a838:	add	x0, x26, x19
   2a83c:	bl	a2c0 <memcpy@plt>
   2a840:	mov	x21, x26
   2a844:	b	2a7c4 <rpl_re_compile_fastmap@@Base+0x544>
   2a848:	ldr	x21, [sp, #104]
   2a84c:	mov	x26, #0x0                   	// #0
   2a850:	b	2a7c4 <rpl_re_compile_fastmap@@Base+0x544>
   2a854:	mov	x19, #0xfffffffffffffffe    	// #-2
   2a858:	b	2a800 <rpl_re_compile_fastmap@@Base+0x580>
   2a85c:	mov	x19, #0xfffffffffffffffe    	// #-2
   2a860:	ldp	x21, x22, [sp, #32]
   2a864:	ldp	x23, x24, [sp, #48]
   2a868:	ldp	x25, x26, [sp, #64]
   2a86c:	b	2a800 <rpl_re_compile_fastmap@@Base+0x580>
   2a870:	mov	x19, #0xfffffffffffffffe    	// #-2
   2a874:	ldp	x21, x22, [sp, #32]
   2a878:	ldp	x23, x24, [sp, #48]
   2a87c:	ldp	x25, x26, [sp, #64]
   2a880:	b	2a800 <rpl_re_compile_fastmap@@Base+0x580>

000000000002a884 <rpl_regcomp@@Base>:
   2a884:	stp	x29, x30, [sp, #-64]!
   2a888:	mov	x29, sp
   2a88c:	stp	x19, x20, [sp, #16]
   2a890:	stp	x21, x22, [sp, #32]
   2a894:	str	x23, [sp, #48]
   2a898:	mov	x19, x0
   2a89c:	mov	x22, x1
   2a8a0:	mov	w20, w2
   2a8a4:	tst	x20, #0x1
   2a8a8:	mov	x21, #0xb2fc                	// #45820
   2a8ac:	movk	x21, #0x3, lsl #16
   2a8b0:	mov	x23, #0x2c6                 	// #710
   2a8b4:	movk	x23, #0x101, lsl #16
   2a8b8:	csel	x23, x21, x23, ne  // ne = any
   2a8bc:	str	xzr, [x0]
   2a8c0:	str	xzr, [x0, #8]
   2a8c4:	str	xzr, [x0, #16]
   2a8c8:	mov	x0, #0x100                 	// #256
   2a8cc:	bl	a5f0 <malloc@plt>
   2a8d0:	str	x0, [x19, #32]
   2a8d4:	cbz	x0, 2a970 <rpl_regcomp@@Base+0xec>
   2a8d8:	sbfiz	x21, x20, #21, #32
   2a8dc:	and	x21, x21, #0x400000
   2a8e0:	orr	x21, x21, x23
   2a8e4:	mov	w1, #0x0                   	// #0
   2a8e8:	tbz	w20, #2, 2a8f8 <rpl_regcomp@@Base+0x74>
   2a8ec:	and	x21, x21, #0xffffffffffffffbf
   2a8f0:	orr	x21, x21, #0x100
   2a8f4:	mov	w1, #0x1                   	// #1
   2a8f8:	ldrb	w0, [x19, #56]
   2a8fc:	bfi	w0, w1, #7, #1
   2a900:	ubfx	x20, x20, #3, #1
   2a904:	bfi	w0, w20, #4, #1
   2a908:	strb	w0, [x19, #56]
   2a90c:	str	xzr, [x19, #40]
   2a910:	mov	x0, x22
   2a914:	bl	a340 <strlen@plt>
   2a918:	mov	x3, x21
   2a91c:	mov	x2, x0
   2a920:	mov	x1, x22
   2a924:	mov	x0, x19
   2a928:	bl	29620 <printf_parse@@Base+0xc1f0>
   2a92c:	mov	w20, w0
   2a930:	cmp	w0, #0x10
   2a934:	b.eq	2a95c <rpl_regcomp@@Base+0xd8>  // b.none
   2a938:	cbnz	w0, 2a960 <rpl_regcomp@@Base+0xdc>
   2a93c:	mov	x0, x19
   2a940:	bl	af90 <rpl_re_compile_fastmap@plt>
   2a944:	mov	w0, w20
   2a948:	ldp	x19, x20, [sp, #16]
   2a94c:	ldp	x21, x22, [sp, #32]
   2a950:	ldr	x23, [sp, #48]
   2a954:	ldp	x29, x30, [sp], #64
   2a958:	ret
   2a95c:	mov	w20, #0x8                   	// #8
   2a960:	ldr	x0, [x19, #32]
   2a964:	bl	aa50 <free@plt>
   2a968:	str	xzr, [x19, #32]
   2a96c:	b	2a944 <rpl_regcomp@@Base+0xc0>
   2a970:	mov	w20, #0xc                   	// #12
   2a974:	b	2a944 <rpl_regcomp@@Base+0xc0>

000000000002a978 <rpl_regerror@@Base>:
   2a978:	stp	x29, x30, [sp, #-48]!
   2a97c:	mov	x29, sp
   2a980:	stp	x19, x20, [sp, #16]
   2a984:	stp	x21, x22, [sp, #32]
   2a988:	cmp	w0, #0x10
   2a98c:	b.hi	2a9f8 <rpl_regerror@@Base+0x80>  // b.pmore
   2a990:	mov	x21, x2
   2a994:	mov	x20, x3
   2a998:	adrp	x4, 2e000 <vasnprintf@@Base+0x3378>
   2a99c:	add	x4, x4, #0xcb8
   2a9a0:	add	x1, x4, #0x68
   2a9a4:	add	x4, x4, #0x1e8
   2a9a8:	ldr	x0, [x4, w0, sxtw #3]
   2a9ac:	mov	w2, #0x5                   	// #5
   2a9b0:	add	x1, x1, x0
   2a9b4:	mov	x0, #0x0                   	// #0
   2a9b8:	bl	ada0 <dcgettext@plt>
   2a9bc:	mov	x22, x0
   2a9c0:	bl	a340 <strlen@plt>
   2a9c4:	add	x19, x0, #0x1
   2a9c8:	cbz	x20, 2a9e4 <rpl_regerror@@Base+0x6c>
   2a9cc:	mov	x2, x19
   2a9d0:	cmp	x19, x20
   2a9d4:	b.hi	2a9fc <rpl_regerror@@Base+0x84>  // b.pmore
   2a9d8:	mov	x1, x22
   2a9dc:	mov	x0, x21
   2a9e0:	bl	a2c0 <memcpy@plt>
   2a9e4:	mov	x0, x19
   2a9e8:	ldp	x19, x20, [sp, #16]
   2a9ec:	ldp	x21, x22, [sp, #32]
   2a9f0:	ldp	x29, x30, [sp], #48
   2a9f4:	ret
   2a9f8:	bl	a900 <abort@plt>
   2a9fc:	sub	x2, x20, #0x1
   2aa00:	strb	wzr, [x21, x2]
   2aa04:	b	2a9d8 <rpl_regerror@@Base+0x60>

000000000002aa08 <rpl_regfree@@Base>:
   2aa08:	stp	x29, x30, [sp, #-32]!
   2aa0c:	mov	x29, sp
   2aa10:	stp	x19, x20, [sp, #16]
   2aa14:	mov	x19, x0
   2aa18:	ldr	x20, [x0]
   2aa1c:	cbz	x20, 2aa4c <rpl_regfree@@Base+0x44>
   2aa20:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   2aa24:	ldr	x0, [x0, #3944]
   2aa28:	cmp	x0, #0x0
   2aa2c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   2aa30:	ldr	x0, [x0, #4040]
   2aa34:	ccmp	x0, #0x0, #0x0, eq  // eq = none
   2aa38:	b.eq	2aa44 <rpl_regfree@@Base+0x3c>  // b.none
   2aa3c:	add	x0, x20, #0xe8
   2aa40:	bl	ac30 <pthread_mutex_destroy@plt>
   2aa44:	mov	x0, x20
   2aa48:	bl	21cb0 <printf_parse@@Base+0x4880>
   2aa4c:	str	xzr, [x19]
   2aa50:	str	xzr, [x19, #8]
   2aa54:	ldr	x0, [x19, #32]
   2aa58:	bl	aa50 <free@plt>
   2aa5c:	str	xzr, [x19, #32]
   2aa60:	ldr	x0, [x19, #40]
   2aa64:	bl	aa50 <free@plt>
   2aa68:	str	xzr, [x19, #40]
   2aa6c:	ldp	x19, x20, [sp, #16]
   2aa70:	ldp	x29, x30, [sp], #32
   2aa74:	ret

000000000002aa78 <rpl_regexec@@Base>:
   2aa78:	tst	w4, #0xfffffff8
   2aa7c:	b.ne	2aba4 <rpl_regexec@@Base+0x12c>  // b.any
   2aa80:	sub	sp, sp, #0x70
   2aa84:	stp	x29, x30, [sp, #16]
   2aa88:	add	x29, sp, #0x10
   2aa8c:	stp	x19, x20, [sp, #32]
   2aa90:	stp	x21, x22, [sp, #48]
   2aa94:	stp	x23, x24, [sp, #64]
   2aa98:	stp	x25, x26, [sp, #80]
   2aa9c:	str	x27, [sp, #96]
   2aaa0:	mov	x21, x0
   2aaa4:	mov	x22, x1
   2aaa8:	mov	x25, x2
   2aaac:	mov	x23, x3
   2aab0:	mov	w19, w4
   2aab4:	tbz	w19, #2, 2ab60 <rpl_regexec@@Base+0xe8>
   2aab8:	ldr	x27, [x3]
   2aabc:	ldr	x24, [x3, #8]
   2aac0:	ldr	x26, [x21]
   2aac4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   2aac8:	ldr	x0, [x0, #3944]
   2aacc:	cmp	x0, #0x0
   2aad0:	cset	w4, ne  // ne = any
   2aad4:	adrp	x0, 46000 <vasnprintf@@Base+0x1b378>
   2aad8:	ldr	x0, [x0, #4040]
   2aadc:	cmp	x0, #0x0
   2aae0:	cset	w0, ne  // ne = any
   2aae4:	orr	w4, w4, w0
   2aae8:	ands	w20, w4, #0xff
   2aaec:	b.eq	2aaf8 <rpl_regexec@@Base+0x80>  // b.none
   2aaf0:	add	x0, x26, #0xe8
   2aaf4:	bl	af00 <pthread_mutex_lock@plt>
   2aaf8:	ldrb	w0, [x21, #56]
   2aafc:	tbz	w0, #4, 2ab74 <rpl_regexec@@Base+0xfc>
   2ab00:	str	w19, [sp]
   2ab04:	mov	x7, #0x0                   	// #0
   2ab08:	mov	x6, #0x0                   	// #0
   2ab0c:	mov	x5, x24
   2ab10:	mov	x4, x24
   2ab14:	mov	x3, x27
   2ab18:	mov	x2, x24
   2ab1c:	mov	x1, x22
   2ab20:	mov	x0, x21
   2ab24:	bl	28418 <printf_parse@@Base+0xafe8>
   2ab28:	mov	w19, w0
   2ab2c:	cbz	w20, 2ab38 <rpl_regexec@@Base+0xc0>
   2ab30:	add	x0, x26, #0xe8
   2ab34:	bl	af40 <pthread_mutex_unlock@plt>
   2ab38:	cmp	w19, #0x0
   2ab3c:	cset	w0, ne  // ne = any
   2ab40:	ldp	x19, x20, [sp, #32]
   2ab44:	ldp	x21, x22, [sp, #48]
   2ab48:	ldp	x23, x24, [sp, #64]
   2ab4c:	ldp	x25, x26, [sp, #80]
   2ab50:	ldr	x27, [sp, #96]
   2ab54:	ldp	x29, x30, [sp, #16]
   2ab58:	add	sp, sp, #0x70
   2ab5c:	ret
   2ab60:	mov	x0, x1
   2ab64:	bl	a340 <strlen@plt>
   2ab68:	mov	x24, x0
   2ab6c:	mov	x27, #0x0                   	// #0
   2ab70:	b	2aac0 <rpl_regexec@@Base+0x48>
   2ab74:	str	w19, [sp]
   2ab78:	mov	x7, x23
   2ab7c:	mov	x6, x25
   2ab80:	mov	x5, x24
   2ab84:	mov	x4, x24
   2ab88:	mov	x3, x27
   2ab8c:	mov	x2, x24
   2ab90:	mov	x1, x22
   2ab94:	mov	x0, x21
   2ab98:	bl	28418 <printf_parse@@Base+0xafe8>
   2ab9c:	mov	w19, w0
   2aba0:	b	2ab2c <rpl_regexec@@Base+0xb4>
   2aba4:	mov	w0, #0x2                   	// #2
   2aba8:	ret

000000000002abac <rpl_re_match@@Base>:
   2abac:	stp	x29, x30, [sp, #-16]!
   2abb0:	mov	x29, sp
   2abb4:	mov	x5, x2
   2abb8:	mov	w7, #0x1                   	// #1
   2abbc:	mov	x6, x4
   2abc0:	mov	x4, #0x0                   	// #0
   2abc4:	bl	2a330 <rpl_re_compile_fastmap@@Base+0xb0>
   2abc8:	ldp	x29, x30, [sp], #16
   2abcc:	ret

000000000002abd0 <rpl_re_search@@Base>:
   2abd0:	stp	x29, x30, [sp, #-16]!
   2abd4:	mov	x29, sp
   2abd8:	mov	w7, #0x0                   	// #0
   2abdc:	mov	x6, x5
   2abe0:	mov	x5, x2
   2abe4:	bl	2a330 <rpl_re_compile_fastmap@@Base+0xb0>
   2abe8:	ldp	x29, x30, [sp], #16
   2abec:	ret

000000000002abf0 <rpl_re_match_2@@Base>:
   2abf0:	sub	sp, sp, #0x20
   2abf4:	stp	x29, x30, [sp, #16]
   2abf8:	add	x29, sp, #0x10
   2abfc:	mov	w8, #0x1                   	// #1
   2ac00:	strb	w8, [sp, #8]
   2ac04:	str	x7, [sp]
   2ac08:	mov	x7, x6
   2ac0c:	mov	x6, #0x0                   	// #0
   2ac10:	bl	2a758 <rpl_re_compile_fastmap@@Base+0x4d8>
   2ac14:	ldp	x29, x30, [sp, #16]
   2ac18:	add	sp, sp, #0x20
   2ac1c:	ret

000000000002ac20 <rpl_re_search_2@@Base>:
   2ac20:	sub	sp, sp, #0x20
   2ac24:	stp	x29, x30, [sp, #16]
   2ac28:	add	x29, sp, #0x10
   2ac2c:	strb	wzr, [sp, #8]
   2ac30:	ldr	x8, [sp, #32]
   2ac34:	str	x8, [sp]
   2ac38:	bl	2a758 <rpl_re_compile_fastmap@@Base+0x4d8>
   2ac3c:	ldp	x29, x30, [sp, #16]
   2ac40:	add	sp, sp, #0x20
   2ac44:	ret

000000000002ac48 <rpl_re_set_registers@@Base>:
   2ac48:	cbz	x2, 2ac6c <rpl_re_set_registers@@Base+0x24>
   2ac4c:	ldrb	w5, [x0, #56]
   2ac50:	mov	w6, #0x1                   	// #1
   2ac54:	bfi	w5, w6, #1, #2
   2ac58:	strb	w5, [x0, #56]
   2ac5c:	str	x2, [x1]
   2ac60:	str	x3, [x1, #8]
   2ac64:	str	x4, [x1, #16]
   2ac68:	ret
   2ac6c:	ldrb	w2, [x0, #56]
   2ac70:	and	w2, w2, #0xfffffff9
   2ac74:	strb	w2, [x0, #56]
   2ac78:	str	xzr, [x1]
   2ac7c:	str	xzr, [x1, #16]
   2ac80:	str	xzr, [x1, #8]
   2ac84:	b	2ac68 <rpl_re_set_registers@@Base+0x20>

000000000002ac88 <vasnprintf@@Base>:
   2ac88:	sub	sp, sp, #0x450
   2ac8c:	stp	x29, x30, [sp]
   2ac90:	mov	x29, sp
   2ac94:	stp	x19, x20, [sp, #16]
   2ac98:	stp	x21, x22, [sp, #32]
   2ac9c:	stp	x23, x24, [sp, #48]
   2aca0:	stp	x25, x26, [sp, #64]
   2aca4:	stp	x27, x28, [sp, #80]
   2aca8:	str	x0, [x29, #136]
   2acac:	str	x1, [x29, #112]
   2acb0:	mov	x20, x2
   2acb4:	mov	x19, x3
   2acb8:	add	x2, x29, #0xd0
   2acbc:	add	x1, x29, #0x1c8
   2acc0:	mov	x0, x20
   2acc4:	bl	af20 <printf_parse@plt>
   2acc8:	tbnz	w0, #31, 2bdac <vasnprintf@@Base+0x1124>
   2accc:	ldp	x0, x1, [x19]
   2acd0:	stp	x0, x1, [x29, #160]
   2acd4:	ldp	x0, x1, [x19, #16]
   2acd8:	stp	x0, x1, [x29, #176]
   2acdc:	add	x1, x29, #0xd0
   2ace0:	add	x0, x29, #0xa0
   2ace4:	bl	aae0 <printf_fetchargs@plt>
   2ace8:	tbnz	w0, #31, 2ad30 <vasnprintf@@Base+0xa8>
   2acec:	ldr	x0, [x29, #480]
   2acf0:	ldr	x1, [x29, #472]
   2acf4:	adds	x1, x1, #0x7
   2acf8:	csinv	x1, x1, xzr, cc  // cc = lo, ul, last
   2acfc:	adds	x0, x0, x1
   2ad00:	b.cs	2bc8c <vasnprintf@@Base+0x1004>  // b.hs, b.nlast
   2ad04:	adds	x0, x0, #0x6
   2ad08:	b.cs	2bc8c <vasnprintf@@Base+0x1004>  // b.hs, b.nlast
   2ad0c:	cmp	x0, #0xf9f
   2ad10:	b.hi	2ad6c <vasnprintf@@Base+0xe4>  // b.pmore
   2ad14:	add	x0, x0, #0xf
   2ad18:	and	x0, x0, #0xfffffffffffffff0
   2ad1c:	sub	sp, sp, x0
   2ad20:	mov	x0, sp
   2ad24:	str	x0, [x29, #152]
   2ad28:	str	xzr, [x29, #104]
   2ad2c:	b	2ad84 <vasnprintf@@Base+0xfc>
   2ad30:	ldr	x0, [x29, #464]
   2ad34:	add	x1, x29, #0x1e8
   2ad38:	cmp	x0, x1
   2ad3c:	b.eq	2ad44 <vasnprintf@@Base+0xbc>  // b.none
   2ad40:	bl	aa50 <free@plt>
   2ad44:	ldr	x0, [x29, #216]
   2ad48:	add	x1, x29, #0xe0
   2ad4c:	cmp	x0, x1
   2ad50:	b.eq	2ad58 <vasnprintf@@Base+0xd0>  // b.none
   2ad54:	bl	aa50 <free@plt>
   2ad58:	bl	aeb0 <__errno_location@plt>
   2ad5c:	mov	w1, #0x16                  	// #22
   2ad60:	str	w1, [x0]
   2ad64:	mov	x22, #0x0                   	// #0
   2ad68:	b	2bcc4 <vasnprintf@@Base+0x103c>
   2ad6c:	cmn	x0, #0x1
   2ad70:	b.eq	2bc8c <vasnprintf@@Base+0x1004>  // b.none
   2ad74:	bl	a5f0 <malloc@plt>
   2ad78:	str	x0, [x29, #152]
   2ad7c:	cbz	x0, 2bc8c <vasnprintf@@Base+0x1004>
   2ad80:	str	x0, [x29, #104]
   2ad84:	mov	x19, #0x0                   	// #0
   2ad88:	ldr	x0, [x29, #136]
   2ad8c:	cbz	x0, 2ad98 <vasnprintf@@Base+0x110>
   2ad90:	ldr	x0, [x29, #112]
   2ad94:	ldr	x19, [x0]
   2ad98:	ldr	x26, [x29, #464]
   2ad9c:	ldr	x22, [x29, #136]
   2ada0:	mov	x24, #0x0                   	// #0
   2ada4:	str	xzr, [x29, #120]
   2ada8:	adrp	x0, 2f000 <vasnprintf@@Base+0x4378>
   2adac:	add	x0, x0, #0xb4
   2adb0:	str	x0, [x29, #128]
   2adb4:	add	x0, x29, #0xc4
   2adb8:	str	x0, [x29, #144]
   2adbc:	b	2b02c <vasnprintf@@Base+0x3a4>
   2adc0:	mov	x19, #0xc                   	// #12
   2adc4:	cmp	x19, x21
   2adc8:	csel	x19, x19, x21, cs  // cs = hs, nlast
   2adcc:	cmn	x19, #0x1
   2add0:	b.eq	2bc70 <vasnprintf@@Base+0xfe8>  // b.none
   2add4:	ldr	x0, [x29, #136]
   2add8:	cmp	x22, x0
   2addc:	cset	w27, eq  // eq = none
   2ade0:	cmp	x22, #0x0
   2ade4:	ccmp	w27, #0x0, #0x0, ne  // ne = any
   2ade8:	b.eq	2ae1c <vasnprintf@@Base+0x194>  // b.none
   2adec:	mov	x0, x19
   2adf0:	bl	a5f0 <malloc@plt>
   2adf4:	mov	x23, x0
   2adf8:	cbz	x0, 2bc70 <vasnprintf@@Base+0xfe8>
   2adfc:	cmp	x24, #0x0
   2ae00:	ccmp	w27, #0x0, #0x4, ne  // ne = any
   2ae04:	b.eq	2af60 <vasnprintf@@Base+0x2d8>  // b.none
   2ae08:	mov	x2, x24
   2ae0c:	mov	x1, x22
   2ae10:	bl	a2c0 <memcpy@plt>
   2ae14:	mov	x22, x23
   2ae18:	b	2ae30 <vasnprintf@@Base+0x1a8>
   2ae1c:	mov	x1, x19
   2ae20:	mov	x0, x22
   2ae24:	bl	a7e0 <realloc@plt>
   2ae28:	cbz	x0, 2bc70 <vasnprintf@@Base+0xfe8>
   2ae2c:	mov	x22, x0
   2ae30:	mov	x2, x25
   2ae34:	mov	x1, x20
   2ae38:	add	x0, x22, x24
   2ae3c:	bl	a2c0 <memcpy@plt>
   2ae40:	ldr	x0, [x29, #456]
   2ae44:	ldr	x1, [x29, #120]
   2ae48:	cmp	x0, x1
   2ae4c:	b.eq	2bcec <vasnprintf@@Base+0x1064>  // b.none
   2ae50:	ldrb	w1, [x26, #72]
   2ae54:	cmp	w1, #0x25
   2ae58:	b.eq	2af70 <vasnprintf@@Base+0x2e8>  // b.none
   2ae5c:	ldr	x0, [x26, #80]
   2ae60:	cmn	x0, #0x1
   2ae64:	b.eq	2b064 <vasnprintf@@Base+0x3dc>  // b.none
   2ae68:	cmp	w1, #0x6e
   2ae6c:	b.eq	2b068 <vasnprintf@@Base+0x3e0>  // b.none
   2ae70:	ldr	x23, [x29, #216]
   2ae74:	lsl	x0, x0, #5
   2ae78:	ldr	w27, [x23, x0]
   2ae7c:	ldr	w0, [x26, #16]
   2ae80:	mov	w1, #0x25                  	// #37
   2ae84:	ldr	x2, [x29, #152]
   2ae88:	strb	w1, [x2]
   2ae8c:	add	x25, x2, #0x1
   2ae90:	tbz	w0, #0, 2aea4 <vasnprintf@@Base+0x21c>
   2ae94:	ldr	x2, [x29, #152]
   2ae98:	add	x25, x2, #0x2
   2ae9c:	mov	w1, #0x27                  	// #39
   2aea0:	strb	w1, [x2, #1]
   2aea4:	tbz	w0, #1, 2aeb0 <vasnprintf@@Base+0x228>
   2aea8:	mov	w1, #0x2d                  	// #45
   2aeac:	strb	w1, [x25], #1
   2aeb0:	tbz	w0, #2, 2aebc <vasnprintf@@Base+0x234>
   2aeb4:	mov	w1, #0x2b                  	// #43
   2aeb8:	strb	w1, [x25], #1
   2aebc:	tbz	w0, #3, 2aec8 <vasnprintf@@Base+0x240>
   2aec0:	mov	w1, #0x20                  	// #32
   2aec4:	strb	w1, [x25], #1
   2aec8:	tbz	w0, #4, 2aed4 <vasnprintf@@Base+0x24c>
   2aecc:	mov	w1, #0x23                  	// #35
   2aed0:	strb	w1, [x25], #1
   2aed4:	tbz	w0, #6, 2aee0 <vasnprintf@@Base+0x258>
   2aed8:	mov	w1, #0x49                  	// #73
   2aedc:	strb	w1, [x25], #1
   2aee0:	tbz	w0, #5, 2aeec <vasnprintf@@Base+0x264>
   2aee4:	mov	w0, #0x30                  	// #48
   2aee8:	strb	w0, [x25], #1
   2aeec:	ldr	x1, [x26, #24]
   2aef0:	ldr	x20, [x26, #32]
   2aef4:	cmp	x1, x20
   2aef8:	b.eq	2af10 <vasnprintf@@Base+0x288>  // b.none
   2aefc:	sub	x20, x20, x1
   2af00:	mov	x2, x20
   2af04:	mov	x0, x25
   2af08:	bl	a2c0 <memcpy@plt>
   2af0c:	add	x25, x25, x20
   2af10:	ldr	x1, [x26, #48]
   2af14:	ldr	x20, [x26, #56]
   2af18:	cmp	x1, x20
   2af1c:	b.eq	2af34 <vasnprintf@@Base+0x2ac>  // b.none
   2af20:	sub	x20, x20, x1
   2af24:	mov	x2, x20
   2af28:	mov	x0, x25
   2af2c:	bl	a2c0 <memcpy@plt>
   2af30:	add	x25, x25, x20
   2af34:	cmp	w27, #0xc
   2af38:	b.eq	2b1a4 <vasnprintf@@Base+0x51c>  // b.none
   2af3c:	b.hi	2b18c <vasnprintf@@Base+0x504>  // b.pmore
   2af40:	cmp	w27, #0x8
   2af44:	b.ls	2b0fc <vasnprintf@@Base+0x474>  // b.plast
   2af48:	sub	w0, w27, #0x9
   2af4c:	cmp	w0, #0x1
   2af50:	b.hi	2b104 <vasnprintf@@Base+0x47c>  // b.pmore
   2af54:	mov	w0, #0x6c                  	// #108
   2af58:	strb	w0, [x25], #1
   2af5c:	b	2b198 <vasnprintf@@Base+0x510>
   2af60:	mov	x22, x0
   2af64:	b	2ae30 <vasnprintf@@Base+0x1a8>
   2af68:	mov	x21, x24
   2af6c:	b	2ae40 <vasnprintf@@Base+0x1b8>
   2af70:	ldr	x0, [x26, #80]
   2af74:	cmn	x0, #0x1
   2af78:	b.ne	2af9c <vasnprintf@@Base+0x314>  // b.any
   2af7c:	adds	x24, x21, #0x1
   2af80:	csel	x24, x24, x0, cc  // cc = lo, ul, last
   2af84:	cmp	x19, x24
   2af88:	b.cs	2b010 <vasnprintf@@Base+0x388>  // b.hs, b.nlast
   2af8c:	cbz	x19, 2afa0 <vasnprintf@@Base+0x318>
   2af90:	tbnz	x19, #63, 2bc70 <vasnprintf@@Base+0xfe8>
   2af94:	lsl	x19, x19, #1
   2af98:	b	2afa4 <vasnprintf@@Base+0x31c>
   2af9c:	bl	a900 <abort@plt>
   2afa0:	mov	x19, #0xc                   	// #12
   2afa4:	cmp	x19, x24
   2afa8:	csel	x19, x19, x24, cs  // cs = hs, nlast
   2afac:	cmn	x19, #0x1
   2afb0:	b.eq	2bc70 <vasnprintf@@Base+0xfe8>  // b.none
   2afb4:	ldr	x0, [x29, #136]
   2afb8:	cmp	x22, x0
   2afbc:	cset	w23, eq  // eq = none
   2afc0:	cmp	x22, #0x0
   2afc4:	ccmp	w23, #0x0, #0x0, ne  // ne = any
   2afc8:	b.eq	2affc <vasnprintf@@Base+0x374>  // b.none
   2afcc:	mov	x0, x19
   2afd0:	bl	a5f0 <malloc@plt>
   2afd4:	mov	x20, x0
   2afd8:	cbz	x0, 2bc70 <vasnprintf@@Base+0xfe8>
   2afdc:	cmp	x21, #0x0
   2afe0:	ccmp	w23, #0x0, #0x4, ne  // ne = any
   2afe4:	b.eq	2b05c <vasnprintf@@Base+0x3d4>  // b.none
   2afe8:	mov	x2, x21
   2afec:	mov	x1, x22
   2aff0:	bl	a2c0 <memcpy@plt>
   2aff4:	mov	x22, x20
   2aff8:	b	2b010 <vasnprintf@@Base+0x388>
   2affc:	mov	x1, x19
   2b000:	mov	x0, x22
   2b004:	bl	a7e0 <realloc@plt>
   2b008:	cbz	x0, 2bc70 <vasnprintf@@Base+0xfe8>
   2b00c:	mov	x22, x0
   2b010:	mov	w0, #0x25                  	// #37
   2b014:	strb	w0, [x22, x21]
   2b018:	ldr	x20, [x26, #8]
   2b01c:	ldr	x0, [x29, #120]
   2b020:	add	x0, x0, #0x1
   2b024:	str	x0, [x29, #120]
   2b028:	add	x26, x26, #0x58
   2b02c:	ldr	x25, [x26]
   2b030:	cmp	x25, x20
   2b034:	b.eq	2af68 <vasnprintf@@Base+0x2e0>  // b.none
   2b038:	sub	x25, x25, x20
   2b03c:	adds	x21, x24, x25
   2b040:	csinv	x21, x21, xzr, cc  // cc = lo, ul, last
   2b044:	cmp	x19, x21
   2b048:	b.cs	2ae30 <vasnprintf@@Base+0x1a8>  // b.hs, b.nlast
   2b04c:	cbz	x19, 2adc0 <vasnprintf@@Base+0x138>
   2b050:	tbnz	x19, #63, 2bc70 <vasnprintf@@Base+0xfe8>
   2b054:	lsl	x19, x19, #1
   2b058:	b	2adc4 <vasnprintf@@Base+0x13c>
   2b05c:	mov	x22, x0
   2b060:	b	2b010 <vasnprintf@@Base+0x388>
   2b064:	bl	a900 <abort@plt>
   2b068:	lsl	x0, x0, #5
   2b06c:	ldr	x1, [x29, #216]
   2b070:	add	x2, x1, x0
   2b074:	ldr	w0, [x1, x0]
   2b078:	cmp	w0, #0x14
   2b07c:	b.eq	2b0d8 <vasnprintf@@Base+0x450>  // b.none
   2b080:	cmp	w0, #0x14
   2b084:	b.hi	2b0a8 <vasnprintf@@Base+0x420>  // b.pmore
   2b088:	cmp	w0, #0x12
   2b08c:	b.eq	2b0c8 <vasnprintf@@Base+0x440>  // b.none
   2b090:	cmp	w0, #0x13
   2b094:	b.ne	2b0f8 <vasnprintf@@Base+0x470>  // b.any
   2b098:	ldr	x0, [x2, #16]
   2b09c:	strh	w21, [x0]
   2b0a0:	mov	x24, x21
   2b0a4:	b	2b018 <vasnprintf@@Base+0x390>
   2b0a8:	cmp	w0, #0x15
   2b0ac:	b.eq	2b0e8 <vasnprintf@@Base+0x460>  // b.none
   2b0b0:	cmp	w0, #0x16
   2b0b4:	b.ne	2b0f8 <vasnprintf@@Base+0x470>  // b.any
   2b0b8:	ldr	x0, [x2, #16]
   2b0bc:	str	x21, [x0]
   2b0c0:	mov	x24, x21
   2b0c4:	b	2b018 <vasnprintf@@Base+0x390>
   2b0c8:	ldr	x0, [x2, #16]
   2b0cc:	strb	w21, [x0]
   2b0d0:	mov	x24, x21
   2b0d4:	b	2b018 <vasnprintf@@Base+0x390>
   2b0d8:	ldr	x0, [x2, #16]
   2b0dc:	str	w21, [x0]
   2b0e0:	mov	x24, x21
   2b0e4:	b	2b018 <vasnprintf@@Base+0x390>
   2b0e8:	ldr	x0, [x2, #16]
   2b0ec:	str	x21, [x0]
   2b0f0:	mov	x24, x21
   2b0f4:	b	2b018 <vasnprintf@@Base+0x390>
   2b0f8:	bl	a900 <abort@plt>
   2b0fc:	cmp	w27, #0x6
   2b100:	b.hi	2b198 <vasnprintf@@Base+0x510>  // b.pmore
   2b104:	ldrb	w0, [x26, #72]
   2b108:	strb	w0, [x25]
   2b10c:	strb	wzr, [x25, #1]
   2b110:	ldr	x0, [x26, #40]
   2b114:	cmn	x0, #0x1
   2b118:	b.eq	2b1b4 <vasnprintf@@Base+0x52c>  // b.none
   2b11c:	lsl	x0, x0, #5
   2b120:	add	x1, x23, x0
   2b124:	ldr	w0, [x23, x0]
   2b128:	cmp	w0, #0x5
   2b12c:	b.ne	2b1b0 <vasnprintf@@Base+0x528>  // b.any
   2b130:	ldr	w0, [x1, #16]
   2b134:	str	w0, [x29, #200]
   2b138:	mov	w24, #0x1                   	// #1
   2b13c:	ldr	x0, [x26, #64]
   2b140:	cmn	x0, #0x1
   2b144:	b.eq	2b16c <vasnprintf@@Base+0x4e4>  // b.none
   2b148:	lsl	x0, x0, #5
   2b14c:	add	x1, x23, x0
   2b150:	ldr	w0, [x23, x0]
   2b154:	cmp	w0, #0x5
   2b158:	b.ne	2b1bc <vasnprintf@@Base+0x534>  // b.any
   2b15c:	ldr	w1, [x1, #16]
   2b160:	add	x0, x29, #0xc8
   2b164:	str	w1, [x0, w24, uxtw #2]
   2b168:	add	w24, w24, #0x1
   2b16c:	adds	x20, x21, #0x2
   2b170:	csinv	x0, x20, xzr, cc  // cc = lo, ul, last
   2b174:	cmp	x19, x0
   2b178:	b.cs	2b1f0 <vasnprintf@@Base+0x568>  // b.hs, b.nlast
   2b17c:	cbz	x19, 2be90 <vasnprintf@@Base+0x1208>
   2b180:	tbnz	x19, #63, 2bc70 <vasnprintf@@Base+0xfe8>
   2b184:	lsl	x19, x19, #1
   2b188:	b	2be94 <vasnprintf@@Base+0x120c>
   2b18c:	sub	w0, w27, #0xe
   2b190:	tst	w0, #0xfffffffd
   2b194:	b.ne	2b104 <vasnprintf@@Base+0x47c>  // b.any
   2b198:	mov	w0, #0x6c                  	// #108
   2b19c:	strb	w0, [x25], #1
   2b1a0:	b	2b104 <vasnprintf@@Base+0x47c>
   2b1a4:	mov	w0, #0x4c                  	// #76
   2b1a8:	strb	w0, [x25], #1
   2b1ac:	b	2b104 <vasnprintf@@Base+0x47c>
   2b1b0:	bl	a900 <abort@plt>
   2b1b4:	mov	w24, #0x0                   	// #0
   2b1b8:	b	2b13c <vasnprintf@@Base+0x4b4>
   2b1bc:	bl	a900 <abort@plt>
   2b1c0:	mov	x1, x20
   2b1c4:	mov	x0, x22
   2b1c8:	bl	a7e0 <realloc@plt>
   2b1cc:	mov	x23, x0
   2b1d0:	cbz	x0, 2bc70 <vasnprintf@@Base+0xfe8>
   2b1d4:	strb	wzr, [x23, x21]
   2b1d8:	bl	aeb0 <__errno_location@plt>
   2b1dc:	mov	x28, x0
   2b1e0:	ldr	w0, [x0]
   2b1e4:	str	w0, [x29, #100]
   2b1e8:	sub	w27, w27, #0x1
   2b1ec:	b	2bc14 <vasnprintf@@Base+0xf8c>
   2b1f0:	mov	x20, x19
   2b1f4:	mov	x23, x22
   2b1f8:	b	2b1d4 <vasnprintf@@Base+0x54c>
   2b1fc:	ldr	x0, [x26, #80]
   2b200:	ldr	x1, [x29, #216]
   2b204:	add	x0, x1, x0, lsl #5
   2b208:	ldrsb	w3, [x0, #16]
   2b20c:	cmp	w24, #0x1
   2b210:	b.eq	2b328 <vasnprintf@@Base+0x6a0>  // b.none
   2b214:	cmp	w24, #0x2
   2b218:	b.ne	2b240 <vasnprintf@@Base+0x5b8>  // b.any
   2b21c:	ldr	x6, [x29, #144]
   2b220:	mov	w5, w3
   2b224:	ldr	w4, [x29, #204]
   2b228:	ldr	w3, [x29, #200]
   2b22c:	ldr	x2, [x29, #152]
   2b230:	mov	x1, x19
   2b234:	add	x0, x23, x21
   2b238:	bl	a540 <snprintf@plt>
   2b23c:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b240:	cbnz	w24, 2b348 <vasnprintf@@Base+0x6c0>
   2b244:	ldr	x4, [x29, #144]
   2b248:	ldr	x2, [x29, #152]
   2b24c:	mov	x1, x19
   2b250:	add	x0, x23, x21
   2b254:	bl	a540 <snprintf@plt>
   2b258:	ldr	w1, [x29, #196]
   2b25c:	tbnz	w1, #31, 2bb84 <vasnprintf@@Base+0xefc>
   2b260:	cmp	x19, w1, uxtw
   2b264:	b.ls	2b274 <vasnprintf@@Base+0x5ec>  // b.plast
   2b268:	add	x2, x23, x21
   2b26c:	ldrb	w2, [x2, w1, sxtw]
   2b270:	cbnz	w2, 2bb80 <vasnprintf@@Base+0xef8>
   2b274:	cmp	w1, w0
   2b278:	b.ge	2b280 <vasnprintf@@Base+0x5f8>  // b.tcont
   2b27c:	str	w0, [x29, #196]
   2b280:	ldr	w0, [x29, #196]
   2b284:	add	w1, w0, #0x1
   2b288:	cmp	x1, x19
   2b28c:	b.cc	2bc4c <vasnprintf@@Base+0xfc4>  // b.lo, b.ul, b.last
   2b290:	mov	x1, #0x7ffffffe            	// #2147483646
   2b294:	cmp	x22, x1
   2b298:	b.hi	2bbac <vasnprintf@@Base+0xf24>  // b.pmore
   2b29c:	add	w0, w0, #0x2
   2b2a0:	adds	x0, x0, x21
   2b2a4:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   2b2a8:	lsl	x1, x20, #1
   2b2ac:	cmp	x20, #0x0
   2b2b0:	csinv	x1, x1, xzr, ge  // ge = tcont
   2b2b4:	cmp	x1, x0
   2b2b8:	csel	x0, x1, x0, cs  // cs = hs, nlast
   2b2bc:	cmp	x20, x0
   2b2c0:	b.cs	2bc14 <vasnprintf@@Base+0xf8c>  // b.hs, b.nlast
   2b2c4:	cmp	x20, #0x0
   2b2c8:	mov	x2, #0xc                   	// #12
   2b2cc:	csel	x1, x1, x2, ne  // ne = any
   2b2d0:	cmp	x1, x0
   2b2d4:	csel	x20, x1, x0, cs  // cs = hs, nlast
   2b2d8:	cmn	x20, #0x1
   2b2dc:	b.eq	2bc6c <vasnprintf@@Base+0xfe4>  // b.none
   2b2e0:	ldr	x0, [x29, #136]
   2b2e4:	cmp	x23, x0
   2b2e8:	cset	w22, eq  // eq = none
   2b2ec:	cmp	x23, #0x0
   2b2f0:	ccmp	w22, #0x0, #0x0, ne  // ne = any
   2b2f4:	b.eq	2bc00 <vasnprintf@@Base+0xf78>  // b.none
   2b2f8:	mov	x0, x20
   2b2fc:	bl	a5f0 <malloc@plt>
   2b300:	mov	x19, x0
   2b304:	cbz	x0, 2bc6c <vasnprintf@@Base+0xfe4>
   2b308:	cmp	x21, #0x0
   2b30c:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   2b310:	b.eq	2bc64 <vasnprintf@@Base+0xfdc>  // b.none
   2b314:	mov	x2, x21
   2b318:	mov	x1, x23
   2b31c:	bl	a2c0 <memcpy@plt>
   2b320:	mov	x23, x19
   2b324:	b	2bc14 <vasnprintf@@Base+0xf8c>
   2b328:	ldr	x5, [x29, #144]
   2b32c:	mov	w4, w3
   2b330:	ldr	w3, [x29, #200]
   2b334:	ldr	x2, [x29, #152]
   2b338:	mov	x1, x19
   2b33c:	add	x0, x23, x21
   2b340:	bl	a540 <snprintf@plt>
   2b344:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b348:	bl	a900 <abort@plt>
   2b34c:	ldr	x0, [x26, #80]
   2b350:	ldr	x1, [x29, #216]
   2b354:	add	x0, x1, x0, lsl #5
   2b358:	ldrb	w3, [x0, #16]
   2b35c:	cmp	w24, #0x1
   2b360:	b.eq	2b3ac <vasnprintf@@Base+0x724>  // b.none
   2b364:	cmp	w24, #0x2
   2b368:	b.ne	2b390 <vasnprintf@@Base+0x708>  // b.any
   2b36c:	ldr	x6, [x29, #144]
   2b370:	mov	w5, w3
   2b374:	ldr	w4, [x29, #204]
   2b378:	ldr	w3, [x29, #200]
   2b37c:	ldr	x2, [x29, #152]
   2b380:	mov	x1, x19
   2b384:	add	x0, x23, x21
   2b388:	bl	a540 <snprintf@plt>
   2b38c:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b390:	cbnz	w24, 2b3cc <vasnprintf@@Base+0x744>
   2b394:	ldr	x4, [x29, #144]
   2b398:	ldr	x2, [x29, #152]
   2b39c:	mov	x1, x19
   2b3a0:	add	x0, x23, x21
   2b3a4:	bl	a540 <snprintf@plt>
   2b3a8:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b3ac:	ldr	x5, [x29, #144]
   2b3b0:	mov	w4, w3
   2b3b4:	ldr	w3, [x29, #200]
   2b3b8:	ldr	x2, [x29, #152]
   2b3bc:	mov	x1, x19
   2b3c0:	add	x0, x23, x21
   2b3c4:	bl	a540 <snprintf@plt>
   2b3c8:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b3cc:	bl	a900 <abort@plt>
   2b3d0:	ldr	x0, [x26, #80]
   2b3d4:	ldr	x1, [x29, #216]
   2b3d8:	add	x0, x1, x0, lsl #5
   2b3dc:	ldrsh	w3, [x0, #16]
   2b3e0:	cmp	w24, #0x1
   2b3e4:	b.eq	2b430 <vasnprintf@@Base+0x7a8>  // b.none
   2b3e8:	cmp	w24, #0x2
   2b3ec:	b.ne	2b414 <vasnprintf@@Base+0x78c>  // b.any
   2b3f0:	ldr	x6, [x29, #144]
   2b3f4:	mov	w5, w3
   2b3f8:	ldr	w4, [x29, #204]
   2b3fc:	ldr	w3, [x29, #200]
   2b400:	ldr	x2, [x29, #152]
   2b404:	mov	x1, x19
   2b408:	add	x0, x23, x21
   2b40c:	bl	a540 <snprintf@plt>
   2b410:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b414:	cbnz	w24, 2b450 <vasnprintf@@Base+0x7c8>
   2b418:	ldr	x4, [x29, #144]
   2b41c:	ldr	x2, [x29, #152]
   2b420:	mov	x1, x19
   2b424:	add	x0, x23, x21
   2b428:	bl	a540 <snprintf@plt>
   2b42c:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b430:	ldr	x5, [x29, #144]
   2b434:	mov	w4, w3
   2b438:	ldr	w3, [x29, #200]
   2b43c:	ldr	x2, [x29, #152]
   2b440:	mov	x1, x19
   2b444:	add	x0, x23, x21
   2b448:	bl	a540 <snprintf@plt>
   2b44c:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b450:	bl	a900 <abort@plt>
   2b454:	ldr	x0, [x26, #80]
   2b458:	ldr	x1, [x29, #216]
   2b45c:	add	x0, x1, x0, lsl #5
   2b460:	ldrh	w3, [x0, #16]
   2b464:	cmp	w24, #0x1
   2b468:	b.eq	2b4b4 <vasnprintf@@Base+0x82c>  // b.none
   2b46c:	cmp	w24, #0x2
   2b470:	b.ne	2b498 <vasnprintf@@Base+0x810>  // b.any
   2b474:	ldr	x6, [x29, #144]
   2b478:	mov	w5, w3
   2b47c:	ldr	w4, [x29, #204]
   2b480:	ldr	w3, [x29, #200]
   2b484:	ldr	x2, [x29, #152]
   2b488:	mov	x1, x19
   2b48c:	add	x0, x23, x21
   2b490:	bl	a540 <snprintf@plt>
   2b494:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b498:	cbnz	w24, 2b4d4 <vasnprintf@@Base+0x84c>
   2b49c:	ldr	x4, [x29, #144]
   2b4a0:	ldr	x2, [x29, #152]
   2b4a4:	mov	x1, x19
   2b4a8:	add	x0, x23, x21
   2b4ac:	bl	a540 <snprintf@plt>
   2b4b0:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b4b4:	ldr	x5, [x29, #144]
   2b4b8:	mov	w4, w3
   2b4bc:	ldr	w3, [x29, #200]
   2b4c0:	ldr	x2, [x29, #152]
   2b4c4:	mov	x1, x19
   2b4c8:	add	x0, x23, x21
   2b4cc:	bl	a540 <snprintf@plt>
   2b4d0:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b4d4:	bl	a900 <abort@plt>
   2b4d8:	ldr	x0, [x26, #80]
   2b4dc:	ldr	x1, [x29, #216]
   2b4e0:	add	x0, x1, x0, lsl #5
   2b4e4:	ldr	w3, [x0, #16]
   2b4e8:	cmp	w24, #0x1
   2b4ec:	b.eq	2b538 <vasnprintf@@Base+0x8b0>  // b.none
   2b4f0:	cmp	w24, #0x2
   2b4f4:	b.ne	2b51c <vasnprintf@@Base+0x894>  // b.any
   2b4f8:	ldr	x6, [x29, #144]
   2b4fc:	mov	w5, w3
   2b500:	ldr	w4, [x29, #204]
   2b504:	ldr	w3, [x29, #200]
   2b508:	ldr	x2, [x29, #152]
   2b50c:	mov	x1, x19
   2b510:	add	x0, x23, x21
   2b514:	bl	a540 <snprintf@plt>
   2b518:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b51c:	cbnz	w24, 2b558 <vasnprintf@@Base+0x8d0>
   2b520:	ldr	x4, [x29, #144]
   2b524:	ldr	x2, [x29, #152]
   2b528:	mov	x1, x19
   2b52c:	add	x0, x23, x21
   2b530:	bl	a540 <snprintf@plt>
   2b534:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b538:	ldr	x5, [x29, #144]
   2b53c:	mov	w4, w3
   2b540:	ldr	w3, [x29, #200]
   2b544:	ldr	x2, [x29, #152]
   2b548:	mov	x1, x19
   2b54c:	add	x0, x23, x21
   2b550:	bl	a540 <snprintf@plt>
   2b554:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b558:	bl	a900 <abort@plt>
   2b55c:	ldr	x0, [x26, #80]
   2b560:	ldr	x1, [x29, #216]
   2b564:	add	x0, x1, x0, lsl #5
   2b568:	ldr	w3, [x0, #16]
   2b56c:	cmp	w24, #0x1
   2b570:	b.eq	2b5bc <vasnprintf@@Base+0x934>  // b.none
   2b574:	cmp	w24, #0x2
   2b578:	b.ne	2b5a0 <vasnprintf@@Base+0x918>  // b.any
   2b57c:	ldr	x6, [x29, #144]
   2b580:	mov	w5, w3
   2b584:	ldr	w4, [x29, #204]
   2b588:	ldr	w3, [x29, #200]
   2b58c:	ldr	x2, [x29, #152]
   2b590:	mov	x1, x19
   2b594:	add	x0, x23, x21
   2b598:	bl	a540 <snprintf@plt>
   2b59c:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b5a0:	cbnz	w24, 2b5dc <vasnprintf@@Base+0x954>
   2b5a4:	ldr	x4, [x29, #144]
   2b5a8:	ldr	x2, [x29, #152]
   2b5ac:	mov	x1, x19
   2b5b0:	add	x0, x23, x21
   2b5b4:	bl	a540 <snprintf@plt>
   2b5b8:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b5bc:	ldr	x5, [x29, #144]
   2b5c0:	mov	w4, w3
   2b5c4:	ldr	w3, [x29, #200]
   2b5c8:	ldr	x2, [x29, #152]
   2b5cc:	mov	x1, x19
   2b5d0:	add	x0, x23, x21
   2b5d4:	bl	a540 <snprintf@plt>
   2b5d8:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b5dc:	bl	a900 <abort@plt>
   2b5e0:	ldr	x0, [x26, #80]
   2b5e4:	ldr	x1, [x29, #216]
   2b5e8:	add	x0, x1, x0, lsl #5
   2b5ec:	ldr	x3, [x0, #16]
   2b5f0:	cmp	w24, #0x1
   2b5f4:	b.eq	2b640 <vasnprintf@@Base+0x9b8>  // b.none
   2b5f8:	cmp	w24, #0x2
   2b5fc:	b.ne	2b624 <vasnprintf@@Base+0x99c>  // b.any
   2b600:	ldr	x6, [x29, #144]
   2b604:	mov	x5, x3
   2b608:	ldr	w4, [x29, #204]
   2b60c:	ldr	w3, [x29, #200]
   2b610:	ldr	x2, [x29, #152]
   2b614:	mov	x1, x19
   2b618:	add	x0, x23, x21
   2b61c:	bl	a540 <snprintf@plt>
   2b620:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b624:	cbnz	w24, 2b660 <vasnprintf@@Base+0x9d8>
   2b628:	ldr	x4, [x29, #144]
   2b62c:	ldr	x2, [x29, #152]
   2b630:	mov	x1, x19
   2b634:	add	x0, x23, x21
   2b638:	bl	a540 <snprintf@plt>
   2b63c:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b640:	ldr	x5, [x29, #144]
   2b644:	mov	x4, x3
   2b648:	ldr	w3, [x29, #200]
   2b64c:	ldr	x2, [x29, #152]
   2b650:	mov	x1, x19
   2b654:	add	x0, x23, x21
   2b658:	bl	a540 <snprintf@plt>
   2b65c:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b660:	bl	a900 <abort@plt>
   2b664:	ldr	x0, [x26, #80]
   2b668:	ldr	x1, [x29, #216]
   2b66c:	add	x0, x1, x0, lsl #5
   2b670:	ldr	x3, [x0, #16]
   2b674:	cmp	w24, #0x1
   2b678:	b.eq	2b6c4 <vasnprintf@@Base+0xa3c>  // b.none
   2b67c:	cmp	w24, #0x2
   2b680:	b.ne	2b6a8 <vasnprintf@@Base+0xa20>  // b.any
   2b684:	ldr	x6, [x29, #144]
   2b688:	mov	x5, x3
   2b68c:	ldr	w4, [x29, #204]
   2b690:	ldr	w3, [x29, #200]
   2b694:	ldr	x2, [x29, #152]
   2b698:	mov	x1, x19
   2b69c:	add	x0, x23, x21
   2b6a0:	bl	a540 <snprintf@plt>
   2b6a4:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b6a8:	cbnz	w24, 2b6e4 <vasnprintf@@Base+0xa5c>
   2b6ac:	ldr	x4, [x29, #144]
   2b6b0:	ldr	x2, [x29, #152]
   2b6b4:	mov	x1, x19
   2b6b8:	add	x0, x23, x21
   2b6bc:	bl	a540 <snprintf@plt>
   2b6c0:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b6c4:	ldr	x5, [x29, #144]
   2b6c8:	mov	x4, x3
   2b6cc:	ldr	w3, [x29, #200]
   2b6d0:	ldr	x2, [x29, #152]
   2b6d4:	mov	x1, x19
   2b6d8:	add	x0, x23, x21
   2b6dc:	bl	a540 <snprintf@plt>
   2b6e0:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b6e4:	bl	a900 <abort@plt>
   2b6e8:	ldr	x0, [x26, #80]
   2b6ec:	ldr	x1, [x29, #216]
   2b6f0:	add	x0, x1, x0, lsl #5
   2b6f4:	ldr	x3, [x0, #16]
   2b6f8:	cmp	w24, #0x1
   2b6fc:	b.eq	2b748 <vasnprintf@@Base+0xac0>  // b.none
   2b700:	cmp	w24, #0x2
   2b704:	b.ne	2b72c <vasnprintf@@Base+0xaa4>  // b.any
   2b708:	ldr	x6, [x29, #144]
   2b70c:	mov	x5, x3
   2b710:	ldr	w4, [x29, #204]
   2b714:	ldr	w3, [x29, #200]
   2b718:	ldr	x2, [x29, #152]
   2b71c:	mov	x1, x19
   2b720:	add	x0, x23, x21
   2b724:	bl	a540 <snprintf@plt>
   2b728:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b72c:	cbnz	w24, 2b768 <vasnprintf@@Base+0xae0>
   2b730:	ldr	x4, [x29, #144]
   2b734:	ldr	x2, [x29, #152]
   2b738:	mov	x1, x19
   2b73c:	add	x0, x23, x21
   2b740:	bl	a540 <snprintf@plt>
   2b744:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b748:	ldr	x5, [x29, #144]
   2b74c:	mov	x4, x3
   2b750:	ldr	w3, [x29, #200]
   2b754:	ldr	x2, [x29, #152]
   2b758:	mov	x1, x19
   2b75c:	add	x0, x23, x21
   2b760:	bl	a540 <snprintf@plt>
   2b764:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b768:	bl	a900 <abort@plt>
   2b76c:	ldr	x0, [x26, #80]
   2b770:	ldr	x1, [x29, #216]
   2b774:	add	x0, x1, x0, lsl #5
   2b778:	ldr	x3, [x0, #16]
   2b77c:	cmp	w24, #0x1
   2b780:	b.eq	2b7cc <vasnprintf@@Base+0xb44>  // b.none
   2b784:	cmp	w24, #0x2
   2b788:	b.ne	2b7b0 <vasnprintf@@Base+0xb28>  // b.any
   2b78c:	ldr	x6, [x29, #144]
   2b790:	mov	x5, x3
   2b794:	ldr	w4, [x29, #204]
   2b798:	ldr	w3, [x29, #200]
   2b79c:	ldr	x2, [x29, #152]
   2b7a0:	mov	x1, x19
   2b7a4:	add	x0, x23, x21
   2b7a8:	bl	a540 <snprintf@plt>
   2b7ac:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b7b0:	cbnz	w24, 2b7ec <vasnprintf@@Base+0xb64>
   2b7b4:	ldr	x4, [x29, #144]
   2b7b8:	ldr	x2, [x29, #152]
   2b7bc:	mov	x1, x19
   2b7c0:	add	x0, x23, x21
   2b7c4:	bl	a540 <snprintf@plt>
   2b7c8:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b7cc:	ldr	x5, [x29, #144]
   2b7d0:	mov	x4, x3
   2b7d4:	ldr	w3, [x29, #200]
   2b7d8:	ldr	x2, [x29, #152]
   2b7dc:	mov	x1, x19
   2b7e0:	add	x0, x23, x21
   2b7e4:	bl	a540 <snprintf@plt>
   2b7e8:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b7ec:	bl	a900 <abort@plt>
   2b7f0:	ldr	x0, [x26, #80]
   2b7f4:	ldr	x1, [x29, #216]
   2b7f8:	add	x0, x1, x0, lsl #5
   2b7fc:	ldr	d0, [x0, #16]
   2b800:	cmp	w24, #0x1
   2b804:	b.eq	2b84c <vasnprintf@@Base+0xbc4>  // b.none
   2b808:	cmp	w24, #0x2
   2b80c:	b.ne	2b830 <vasnprintf@@Base+0xba8>  // b.any
   2b810:	ldr	x5, [x29, #144]
   2b814:	ldr	w4, [x29, #204]
   2b818:	ldr	w3, [x29, #200]
   2b81c:	ldr	x2, [x29, #152]
   2b820:	mov	x1, x19
   2b824:	add	x0, x23, x21
   2b828:	bl	a540 <snprintf@plt>
   2b82c:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b830:	cbnz	w24, 2b868 <vasnprintf@@Base+0xbe0>
   2b834:	ldr	x3, [x29, #144]
   2b838:	ldr	x2, [x29, #152]
   2b83c:	mov	x1, x19
   2b840:	add	x0, x23, x21
   2b844:	bl	a540 <snprintf@plt>
   2b848:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b84c:	ldr	x4, [x29, #144]
   2b850:	ldr	w3, [x29, #200]
   2b854:	ldr	x2, [x29, #152]
   2b858:	mov	x1, x19
   2b85c:	add	x0, x23, x21
   2b860:	bl	a540 <snprintf@plt>
   2b864:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b868:	bl	a900 <abort@plt>
   2b86c:	ldr	x0, [x26, #80]
   2b870:	ldr	x1, [x29, #216]
   2b874:	add	x0, x1, x0, lsl #5
   2b878:	ldr	q0, [x0, #16]
   2b87c:	cmp	w24, #0x1
   2b880:	b.eq	2b8c8 <vasnprintf@@Base+0xc40>  // b.none
   2b884:	cmp	w24, #0x2
   2b888:	b.ne	2b8ac <vasnprintf@@Base+0xc24>  // b.any
   2b88c:	ldr	x5, [x29, #144]
   2b890:	ldr	w4, [x29, #204]
   2b894:	ldr	w3, [x29, #200]
   2b898:	ldr	x2, [x29, #152]
   2b89c:	mov	x1, x19
   2b8a0:	add	x0, x23, x21
   2b8a4:	bl	a540 <snprintf@plt>
   2b8a8:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b8ac:	cbnz	w24, 2b8e4 <vasnprintf@@Base+0xc5c>
   2b8b0:	ldr	x3, [x29, #144]
   2b8b4:	ldr	x2, [x29, #152]
   2b8b8:	mov	x1, x19
   2b8bc:	add	x0, x23, x21
   2b8c0:	bl	a540 <snprintf@plt>
   2b8c4:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b8c8:	ldr	x4, [x29, #144]
   2b8cc:	ldr	w3, [x29, #200]
   2b8d0:	ldr	x2, [x29, #152]
   2b8d4:	mov	x1, x19
   2b8d8:	add	x0, x23, x21
   2b8dc:	bl	a540 <snprintf@plt>
   2b8e0:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b8e4:	bl	a900 <abort@plt>
   2b8e8:	ldr	x0, [x26, #80]
   2b8ec:	ldr	x1, [x29, #216]
   2b8f0:	add	x0, x1, x0, lsl #5
   2b8f4:	ldr	w3, [x0, #16]
   2b8f8:	cmp	w24, #0x1
   2b8fc:	b.eq	2b948 <vasnprintf@@Base+0xcc0>  // b.none
   2b900:	cmp	w24, #0x2
   2b904:	b.ne	2b92c <vasnprintf@@Base+0xca4>  // b.any
   2b908:	ldr	x6, [x29, #144]
   2b90c:	mov	w5, w3
   2b910:	ldr	w4, [x29, #204]
   2b914:	ldr	w3, [x29, #200]
   2b918:	ldr	x2, [x29, #152]
   2b91c:	mov	x1, x19
   2b920:	add	x0, x23, x21
   2b924:	bl	a540 <snprintf@plt>
   2b928:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b92c:	cbnz	w24, 2b968 <vasnprintf@@Base+0xce0>
   2b930:	ldr	x4, [x29, #144]
   2b934:	ldr	x2, [x29, #152]
   2b938:	mov	x1, x19
   2b93c:	add	x0, x23, x21
   2b940:	bl	a540 <snprintf@plt>
   2b944:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b948:	ldr	x5, [x29, #144]
   2b94c:	mov	w4, w3
   2b950:	ldr	w3, [x29, #200]
   2b954:	ldr	x2, [x29, #152]
   2b958:	mov	x1, x19
   2b95c:	add	x0, x23, x21
   2b960:	bl	a540 <snprintf@plt>
   2b964:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b968:	bl	a900 <abort@plt>
   2b96c:	ldr	x0, [x26, #80]
   2b970:	ldr	x1, [x29, #216]
   2b974:	add	x0, x1, x0, lsl #5
   2b978:	ldr	w3, [x0, #16]
   2b97c:	cmp	w24, #0x1
   2b980:	b.eq	2b9cc <vasnprintf@@Base+0xd44>  // b.none
   2b984:	cmp	w24, #0x2
   2b988:	b.ne	2b9b0 <vasnprintf@@Base+0xd28>  // b.any
   2b98c:	ldr	x6, [x29, #144]
   2b990:	mov	w5, w3
   2b994:	ldr	w4, [x29, #204]
   2b998:	ldr	w3, [x29, #200]
   2b99c:	ldr	x2, [x29, #152]
   2b9a0:	mov	x1, x19
   2b9a4:	add	x0, x23, x21
   2b9a8:	bl	a540 <snprintf@plt>
   2b9ac:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b9b0:	cbnz	w24, 2b9ec <vasnprintf@@Base+0xd64>
   2b9b4:	ldr	x4, [x29, #144]
   2b9b8:	ldr	x2, [x29, #152]
   2b9bc:	mov	x1, x19
   2b9c0:	add	x0, x23, x21
   2b9c4:	bl	a540 <snprintf@plt>
   2b9c8:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b9cc:	ldr	x5, [x29, #144]
   2b9d0:	mov	w4, w3
   2b9d4:	ldr	w3, [x29, #200]
   2b9d8:	ldr	x2, [x29, #152]
   2b9dc:	mov	x1, x19
   2b9e0:	add	x0, x23, x21
   2b9e4:	bl	a540 <snprintf@plt>
   2b9e8:	b	2b258 <vasnprintf@@Base+0x5d0>
   2b9ec:	bl	a900 <abort@plt>
   2b9f0:	ldr	x0, [x26, #80]
   2b9f4:	ldr	x1, [x29, #216]
   2b9f8:	add	x0, x1, x0, lsl #5
   2b9fc:	ldr	x3, [x0, #16]
   2ba00:	cmp	w24, #0x1
   2ba04:	b.eq	2ba50 <vasnprintf@@Base+0xdc8>  // b.none
   2ba08:	cmp	w24, #0x2
   2ba0c:	b.ne	2ba34 <vasnprintf@@Base+0xdac>  // b.any
   2ba10:	ldr	x6, [x29, #144]
   2ba14:	mov	x5, x3
   2ba18:	ldr	w4, [x29, #204]
   2ba1c:	ldr	w3, [x29, #200]
   2ba20:	ldr	x2, [x29, #152]
   2ba24:	mov	x1, x19
   2ba28:	add	x0, x23, x21
   2ba2c:	bl	a540 <snprintf@plt>
   2ba30:	b	2b258 <vasnprintf@@Base+0x5d0>
   2ba34:	cbnz	w24, 2ba70 <vasnprintf@@Base+0xde8>
   2ba38:	ldr	x4, [x29, #144]
   2ba3c:	ldr	x2, [x29, #152]
   2ba40:	mov	x1, x19
   2ba44:	add	x0, x23, x21
   2ba48:	bl	a540 <snprintf@plt>
   2ba4c:	b	2b258 <vasnprintf@@Base+0x5d0>
   2ba50:	ldr	x5, [x29, #144]
   2ba54:	mov	x4, x3
   2ba58:	ldr	w3, [x29, #200]
   2ba5c:	ldr	x2, [x29, #152]
   2ba60:	mov	x1, x19
   2ba64:	add	x0, x23, x21
   2ba68:	bl	a540 <snprintf@plt>
   2ba6c:	b	2b258 <vasnprintf@@Base+0x5d0>
   2ba70:	bl	a900 <abort@plt>
   2ba74:	ldr	x0, [x26, #80]
   2ba78:	ldr	x1, [x29, #216]
   2ba7c:	add	x0, x1, x0, lsl #5
   2ba80:	ldr	x3, [x0, #16]
   2ba84:	cmp	w24, #0x1
   2ba88:	b.eq	2bad4 <vasnprintf@@Base+0xe4c>  // b.none
   2ba8c:	cmp	w24, #0x2
   2ba90:	b.ne	2bab8 <vasnprintf@@Base+0xe30>  // b.any
   2ba94:	ldr	x6, [x29, #144]
   2ba98:	mov	x5, x3
   2ba9c:	ldr	w4, [x29, #204]
   2baa0:	ldr	w3, [x29, #200]
   2baa4:	ldr	x2, [x29, #152]
   2baa8:	mov	x1, x19
   2baac:	add	x0, x23, x21
   2bab0:	bl	a540 <snprintf@plt>
   2bab4:	b	2b258 <vasnprintf@@Base+0x5d0>
   2bab8:	cbnz	w24, 2baf4 <vasnprintf@@Base+0xe6c>
   2babc:	ldr	x4, [x29, #144]
   2bac0:	ldr	x2, [x29, #152]
   2bac4:	mov	x1, x19
   2bac8:	add	x0, x23, x21
   2bacc:	bl	a540 <snprintf@plt>
   2bad0:	b	2b258 <vasnprintf@@Base+0x5d0>
   2bad4:	ldr	x5, [x29, #144]
   2bad8:	mov	x4, x3
   2badc:	ldr	w3, [x29, #200]
   2bae0:	ldr	x2, [x29, #152]
   2bae4:	mov	x1, x19
   2bae8:	add	x0, x23, x21
   2baec:	bl	a540 <snprintf@plt>
   2baf0:	b	2b258 <vasnprintf@@Base+0x5d0>
   2baf4:	bl	a900 <abort@plt>
   2baf8:	ldr	x0, [x26, #80]
   2bafc:	ldr	x1, [x29, #216]
   2bb00:	add	x0, x1, x0, lsl #5
   2bb04:	ldr	x3, [x0, #16]
   2bb08:	cmp	w24, #0x1
   2bb0c:	b.eq	2bb58 <vasnprintf@@Base+0xed0>  // b.none
   2bb10:	cmp	w24, #0x2
   2bb14:	b.ne	2bb3c <vasnprintf@@Base+0xeb4>  // b.any
   2bb18:	ldr	x6, [x29, #144]
   2bb1c:	mov	x5, x3
   2bb20:	ldr	w4, [x29, #204]
   2bb24:	ldr	w3, [x29, #200]
   2bb28:	ldr	x2, [x29, #152]
   2bb2c:	mov	x1, x19
   2bb30:	add	x0, x23, x21
   2bb34:	bl	a540 <snprintf@plt>
   2bb38:	b	2b258 <vasnprintf@@Base+0x5d0>
   2bb3c:	cbnz	w24, 2bb78 <vasnprintf@@Base+0xef0>
   2bb40:	ldr	x4, [x29, #144]
   2bb44:	ldr	x2, [x29, #152]
   2bb48:	mov	x1, x19
   2bb4c:	add	x0, x23, x21
   2bb50:	bl	a540 <snprintf@plt>
   2bb54:	b	2b258 <vasnprintf@@Base+0x5d0>
   2bb58:	ldr	x5, [x29, #144]
   2bb5c:	mov	x4, x3
   2bb60:	ldr	w3, [x29, #200]
   2bb64:	ldr	x2, [x29, #152]
   2bb68:	mov	x1, x19
   2bb6c:	add	x0, x23, x21
   2bb70:	bl	a540 <snprintf@plt>
   2bb74:	b	2b258 <vasnprintf@@Base+0x5d0>
   2bb78:	bl	a900 <abort@plt>
   2bb7c:	bl	a900 <abort@plt>
   2bb80:	bl	a900 <abort@plt>
   2bb84:	ldrb	w1, [x25, #1]
   2bb88:	cbnz	w1, 2bb98 <vasnprintf@@Base+0xf10>
   2bb8c:	tbnz	w0, #31, 2be1c <vasnprintf@@Base+0x1194>
   2bb90:	str	w0, [x29, #196]
   2bb94:	b	2b280 <vasnprintf@@Base+0x5f8>
   2bb98:	strb	wzr, [x25, #1]
   2bb9c:	b	2bc14 <vasnprintf@@Base+0xf8c>
   2bba0:	mov	x0, x23
   2bba4:	bl	aa50 <free@plt>
   2bba8:	b	2be50 <vasnprintf@@Base+0x11c8>
   2bbac:	cmp	x23, #0x0
   2bbb0:	ldr	x0, [x29, #136]
   2bbb4:	ccmp	x23, x0, #0x4, ne  // ne = any
   2bbb8:	b.ne	2bd94 <vasnprintf@@Base+0x110c>  // b.any
   2bbbc:	ldr	x0, [x29, #104]
   2bbc0:	cbz	x0, 2bbc8 <vasnprintf@@Base+0xf40>
   2bbc4:	bl	aa50 <free@plt>
   2bbc8:	ldr	x0, [x29, #464]
   2bbcc:	add	x1, x29, #0x1e8
   2bbd0:	cmp	x0, x1
   2bbd4:	b.eq	2bbdc <vasnprintf@@Base+0xf54>  // b.none
   2bbd8:	bl	aa50 <free@plt>
   2bbdc:	ldr	x0, [x29, #216]
   2bbe0:	add	x1, x29, #0xe0
   2bbe4:	cmp	x0, x1
   2bbe8:	b.eq	2bbf0 <vasnprintf@@Base+0xf68>  // b.none
   2bbec:	bl	aa50 <free@plt>
   2bbf0:	mov	w0, #0x4b                  	// #75
   2bbf4:	str	w0, [x28]
   2bbf8:	mov	x22, #0x0                   	// #0
   2bbfc:	b	2bcc4 <vasnprintf@@Base+0x103c>
   2bc00:	mov	x1, x20
   2bc04:	mov	x0, x23
   2bc08:	bl	a7e0 <realloc@plt>
   2bc0c:	cbz	x0, 2bc6c <vasnprintf@@Base+0xfe4>
   2bc10:	mov	x23, x0
   2bc14:	mov	w0, #0xffffffff            	// #-1
   2bc18:	str	w0, [x29, #196]
   2bc1c:	sub	x22, x20, x21
   2bc20:	mov	x19, #0x7fffffff            	// #2147483647
   2bc24:	cmp	x22, x19
   2bc28:	csel	x19, x22, x19, ls  // ls = plast
   2bc2c:	str	wzr, [x28]
   2bc30:	cmp	w27, #0x10
   2bc34:	b.hi	2bb7c <vasnprintf@@Base+0xef4>  // b.pmore
   2bc38:	ldr	x0, [x29, #128]
   2bc3c:	ldrh	w0, [x0, w27, uxtw #1]
   2bc40:	adr	x1, 2bc4c <vasnprintf@@Base+0xfc4>
   2bc44:	add	x0, x1, w0, sxth #2
   2bc48:	br	x0
   2bc4c:	add	x24, x21, w0, sxtw
   2bc50:	ldr	w0, [x29, #100]
   2bc54:	str	w0, [x28]
   2bc58:	mov	x19, x20
   2bc5c:	mov	x22, x23
   2bc60:	b	2b018 <vasnprintf@@Base+0x390>
   2bc64:	mov	x23, x0
   2bc68:	b	2bc14 <vasnprintf@@Base+0xf8c>
   2bc6c:	mov	x22, x23
   2bc70:	cmp	x22, #0x0
   2bc74:	ldr	x0, [x29, #136]
   2bc78:	ccmp	x22, x0, #0x4, ne  // ne = any
   2bc7c:	b.ne	2bda0 <vasnprintf@@Base+0x1118>  // b.any
   2bc80:	ldr	x0, [x29, #104]
   2bc84:	cbz	x0, 2bc8c <vasnprintf@@Base+0x1004>
   2bc88:	bl	aa50 <free@plt>
   2bc8c:	ldr	x0, [x29, #464]
   2bc90:	add	x1, x29, #0x1e8
   2bc94:	cmp	x0, x1
   2bc98:	b.eq	2bca0 <vasnprintf@@Base+0x1018>  // b.none
   2bc9c:	bl	aa50 <free@plt>
   2bca0:	ldr	x0, [x29, #216]
   2bca4:	add	x1, x29, #0xe0
   2bca8:	cmp	x0, x1
   2bcac:	b.eq	2bcb4 <vasnprintf@@Base+0x102c>  // b.none
   2bcb0:	bl	aa50 <free@plt>
   2bcb4:	bl	aeb0 <__errno_location@plt>
   2bcb8:	mov	w1, #0xc                   	// #12
   2bcbc:	str	w1, [x0]
   2bcc0:	mov	x22, #0x0                   	// #0
   2bcc4:	mov	x0, x22
   2bcc8:	mov	sp, x29
   2bccc:	ldp	x19, x20, [sp, #16]
   2bcd0:	ldp	x21, x22, [sp, #32]
   2bcd4:	ldp	x23, x24, [sp, #48]
   2bcd8:	ldp	x25, x26, [sp, #64]
   2bcdc:	ldp	x27, x28, [sp, #80]
   2bce0:	ldp	x29, x30, [sp]
   2bce4:	add	sp, sp, #0x450
   2bce8:	ret
   2bcec:	adds	x20, x21, #0x1
   2bcf0:	csinv	x0, x20, xzr, cc  // cc = lo, ul, last
   2bcf4:	cmp	x19, x0
   2bcf8:	b.cs	2bd20 <vasnprintf@@Base+0x1098>  // b.hs, b.nlast
   2bcfc:	cbz	x19, 2bdb4 <vasnprintf@@Base+0x112c>
   2bd00:	tbnz	x19, #63, 2bc70 <vasnprintf@@Base+0xfe8>
   2bd04:	lsl	x19, x19, #1
   2bd08:	b	2bdb8 <vasnprintf@@Base+0x1130>
   2bd0c:	mov	x1, x19
   2bd10:	mov	x0, x22
   2bd14:	bl	a7e0 <realloc@plt>
   2bd18:	cbz	x0, 2bda0 <vasnprintf@@Base+0x1118>
   2bd1c:	mov	x22, x0
   2bd20:	strb	wzr, [x22, x21]
   2bd24:	ldr	x0, [x29, #136]
   2bd28:	cmp	x22, x0
   2bd2c:	ccmp	x19, x20, #0x0, ne  // ne = any
   2bd30:	b.hi	2bd7c <vasnprintf@@Base+0x10f4>  // b.pmore
   2bd34:	ldr	x0, [x29, #104]
   2bd38:	cbz	x0, 2bd40 <vasnprintf@@Base+0x10b8>
   2bd3c:	bl	aa50 <free@plt>
   2bd40:	ldr	x0, [x29, #464]
   2bd44:	add	x1, x29, #0x1e8
   2bd48:	cmp	x0, x1
   2bd4c:	b.eq	2bd54 <vasnprintf@@Base+0x10cc>  // b.none
   2bd50:	bl	aa50 <free@plt>
   2bd54:	ldr	x0, [x29, #216]
   2bd58:	add	x1, x29, #0xe0
   2bd5c:	cmp	x0, x1
   2bd60:	b.eq	2bd68 <vasnprintf@@Base+0x10e0>  // b.none
   2bd64:	bl	aa50 <free@plt>
   2bd68:	ldr	x0, [x29, #112]
   2bd6c:	str	x21, [x0]
   2bd70:	b	2bcc4 <vasnprintf@@Base+0x103c>
   2bd74:	mov	x22, x0
   2bd78:	b	2bd20 <vasnprintf@@Base+0x1098>
   2bd7c:	mov	x1, x20
   2bd80:	mov	x0, x22
   2bd84:	bl	a7e0 <realloc@plt>
   2bd88:	cmp	x0, #0x0
   2bd8c:	csel	x22, x22, x0, eq  // eq = none
   2bd90:	b	2bd34 <vasnprintf@@Base+0x10ac>
   2bd94:	mov	x0, x23
   2bd98:	bl	aa50 <free@plt>
   2bd9c:	b	2bbbc <vasnprintf@@Base+0xf34>
   2bda0:	mov	x0, x22
   2bda4:	bl	aa50 <free@plt>
   2bda8:	b	2bc80 <vasnprintf@@Base+0xff8>
   2bdac:	mov	x22, #0x0                   	// #0
   2bdb0:	b	2bcc4 <vasnprintf@@Base+0x103c>
   2bdb4:	mov	x19, #0xc                   	// #12
   2bdb8:	cmp	x0, x19
   2bdbc:	b.ls	2bdd4 <vasnprintf@@Base+0x114c>  // b.plast
   2bdc0:	cmp	x21, x20
   2bdc4:	b.hi	2bc70 <vasnprintf@@Base+0xfe8>  // b.pmore
   2bdc8:	cmn	x20, #0x1
   2bdcc:	b.eq	2bc70 <vasnprintf@@Base+0xfe8>  // b.none
   2bdd0:	mov	x19, x20
   2bdd4:	ldr	x0, [x29, #136]
   2bdd8:	cmp	x22, x0
   2bddc:	cset	w24, eq  // eq = none
   2bde0:	cmp	x22, #0x0
   2bde4:	ccmp	w24, #0x0, #0x0, ne  // ne = any
   2bde8:	b.eq	2bd0c <vasnprintf@@Base+0x1084>  // b.none
   2bdec:	mov	x0, x19
   2bdf0:	bl	a5f0 <malloc@plt>
   2bdf4:	mov	x23, x0
   2bdf8:	cbz	x0, 2bc70 <vasnprintf@@Base+0xfe8>
   2bdfc:	cmp	x21, #0x0
   2be00:	ccmp	w24, #0x0, #0x4, ne  // ne = any
   2be04:	b.eq	2bd74 <vasnprintf@@Base+0x10ec>  // b.none
   2be08:	mov	x2, x21
   2be0c:	mov	x1, x22
   2be10:	bl	a2c0 <memcpy@plt>
   2be14:	mov	x22, x23
   2be18:	b	2bd20 <vasnprintf@@Base+0x1098>
   2be1c:	ldr	w19, [x28]
   2be20:	cbnz	w19, 2be40 <vasnprintf@@Base+0x11b8>
   2be24:	ldrb	w0, [x26, #72]
   2be28:	and	w0, w0, #0xffffffef
   2be2c:	and	w0, w0, #0xff
   2be30:	cmp	w0, #0x63
   2be34:	mov	w19, #0x54                  	// #84
   2be38:	mov	w0, #0x16                  	// #22
   2be3c:	csel	w19, w19, w0, eq  // eq = none
   2be40:	cmp	x23, #0x0
   2be44:	ldr	x0, [x29, #136]
   2be48:	ccmp	x23, x0, #0x4, ne  // ne = any
   2be4c:	b.ne	2bba0 <vasnprintf@@Base+0xf18>  // b.any
   2be50:	ldr	x0, [x29, #104]
   2be54:	cbz	x0, 2be5c <vasnprintf@@Base+0x11d4>
   2be58:	bl	aa50 <free@plt>
   2be5c:	ldr	x0, [x29, #464]
   2be60:	add	x1, x29, #0x1e8
   2be64:	cmp	x0, x1
   2be68:	b.eq	2be70 <vasnprintf@@Base+0x11e8>  // b.none
   2be6c:	bl	aa50 <free@plt>
   2be70:	ldr	x0, [x29, #216]
   2be74:	add	x1, x29, #0xe0
   2be78:	cmp	x0, x1
   2be7c:	b.eq	2be84 <vasnprintf@@Base+0x11fc>  // b.none
   2be80:	bl	aa50 <free@plt>
   2be84:	str	w19, [x28]
   2be88:	mov	x22, #0x0                   	// #0
   2be8c:	b	2bcc4 <vasnprintf@@Base+0x103c>
   2be90:	mov	x19, #0xc                   	// #12
   2be94:	cmp	x0, x19
   2be98:	b.ls	2bef0 <vasnprintf@@Base+0x1268>  // b.plast
   2be9c:	cmp	x21, x20
   2bea0:	b.hi	2bc70 <vasnprintf@@Base+0xfe8>  // b.pmore
   2bea4:	cmn	x20, #0x1
   2bea8:	b.eq	2bc70 <vasnprintf@@Base+0xfe8>  // b.none
   2beac:	ldr	x0, [x29, #136]
   2beb0:	cmp	x22, x0
   2beb4:	cset	w19, eq  // eq = none
   2beb8:	cmp	x22, #0x0
   2bebc:	ccmp	w19, #0x0, #0x0, ne  // ne = any
   2bec0:	b.eq	2b1c0 <vasnprintf@@Base+0x538>  // b.none
   2bec4:	mov	x0, x20
   2bec8:	bl	a5f0 <malloc@plt>
   2becc:	mov	x23, x0
   2bed0:	cbz	x0, 2bc70 <vasnprintf@@Base+0xfe8>
   2bed4:	cmp	x21, #0x0
   2bed8:	ccmp	w19, #0x0, #0x4, ne  // ne = any
   2bedc:	b.eq	2b1d4 <vasnprintf@@Base+0x54c>  // b.none
   2bee0:	mov	x2, x21
   2bee4:	mov	x1, x22
   2bee8:	bl	a2c0 <memcpy@plt>
   2beec:	b	2b1d4 <vasnprintf@@Base+0x54c>
   2bef0:	mov	x20, x19
   2bef4:	b	2beac <vasnprintf@@Base+0x1224>
   2bef8:	adrp	x2, 47000 <base_len@@Base+0x331a8>
   2befc:	mov	x1, #0x0                   	// #0
   2bf00:	ldr	x2, [x2, #1720]
   2bf04:	b	a4d0 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000002bf08 <.fini>:
   2bf08:	stp	x29, x30, [sp, #-16]!
   2bf0c:	mov	x29, sp
   2bf10:	ldp	x29, x30, [sp], #16
   2bf14:	ret
