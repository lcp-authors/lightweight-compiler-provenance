
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-reply-password_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400db0 <_init>:
  400db0:	stp	x29, x30, [sp, #-16]!
  400db4:	mov	x29, sp
  400db8:	bl	400fe8 <call_weak_fn>
  400dbc:	ldp	x29, x30, [sp], #16
  400dc0:	ret

Disassembly of section .plt:

0000000000400dc8 <__libc_start_main@plt-0x20>:
  400dc8:	stp	x16, x30, [sp, #-16]!
  400dcc:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400dd0:	ldr	x17, [x16, #3872]
  400dd4:	add	x16, x16, #0xf20
  400dd8:	br	x17
  400ddc:	nop
  400de0:	nop
  400de4:	nop

0000000000400de8 <__libc_start_main@plt>:
  400de8:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400dec:	ldr	x17, [x16, #3880]
  400df0:	add	x16, x16, #0xf28
  400df4:	br	x17

0000000000400df8 <abort@plt>:
  400df8:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400dfc:	ldr	x17, [x16, #3888]
  400e00:	add	x16, x16, #0xf30
  400e04:	br	x17

0000000000400e08 <__gmon_start__@plt>:
  400e08:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400e0c:	ldr	x17, [x16, #3896]
  400e10:	add	x16, x16, #0xf38
  400e14:	br	x17

0000000000400e18 <ask_password_agent_close@plt>:
  400e18:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400e1c:	ldr	x17, [x16, #3904]
  400e20:	add	x16, x16, #0xf40
  400e24:	br	x17

0000000000400e28 <polkit_agent_close@plt>:
  400e28:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400e2c:	ldr	x17, [x16, #3912]
  400e30:	add	x16, x16, #0xf48
  400e34:	br	x17

0000000000400e38 <pager_close@plt>:
  400e38:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400e3c:	ldr	x17, [x16, #3920]
  400e40:	add	x16, x16, #0xf50
  400e44:	br	x17

0000000000400e48 <mac_selinux_finish@plt>:
  400e48:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400e4c:	ldr	x17, [x16, #3928]
  400e50:	add	x16, x16, #0xf58
  400e54:	br	x17

0000000000400e58 <log_setup_service@plt>:
  400e58:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400e5c:	ldr	x17, [x16, #3936]
  400e60:	add	x16, x16, #0xf60
  400e64:	br	x17

0000000000400e68 <log_get_max_level_realm@plt>:
  400e68:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400e6c:	ldr	x17, [x16, #3944]
  400e70:	add	x16, x16, #0xf68
  400e74:	br	x17

0000000000400e78 <log_internal_realm@plt>:
  400e78:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400e7c:	ldr	x17, [x16, #3952]
  400e80:	add	x16, x16, #0xf70
  400e84:	br	x17

0000000000400e88 <abs@plt>:
  400e88:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400e8c:	ldr	x17, [x16, #3960]
  400e90:	add	x16, x16, #0xf78
  400e94:	br	x17

0000000000400e98 <strcmp@plt>:
  400e98:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400e9c:	ldr	x17, [x16, #3968]
  400ea0:	add	x16, x16, #0xf80
  400ea4:	br	x17

0000000000400ea8 <strjoin_real@plt>:
  400ea8:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400eac:	ldr	x17, [x16, #3976]
  400eb0:	add	x16, x16, #0xf88
  400eb4:	br	x17

0000000000400eb8 <log_oom_internal@plt>:
  400eb8:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400ebc:	ldr	x17, [x16, #3984]
  400ec0:	add	x16, x16, #0xf90
  400ec4:	br	x17

0000000000400ec8 <strlen@plt>:
  400ec8:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400ecc:	ldr	x17, [x16, #3992]
  400ed0:	add	x16, x16, #0xf98
  400ed4:	br	x17

0000000000400ed8 <strdup@plt>:
  400ed8:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400edc:	ldr	x17, [x16, #4000]
  400ee0:	add	x16, x16, #0xfa0
  400ee4:	br	x17

0000000000400ee8 <socket@plt>:
  400ee8:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400eec:	ldr	x17, [x16, #4008]
  400ef0:	add	x16, x16, #0xfa8
  400ef4:	br	x17

0000000000400ef8 <__errno_location@plt>:
  400ef8:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400efc:	ldr	x17, [x16, #4016]
  400f00:	add	x16, x16, #0xfb0
  400f04:	br	x17

0000000000400f08 <malloc_usable_size@plt>:
  400f08:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400f0c:	ldr	x17, [x16, #4024]
  400f10:	add	x16, x16, #0xfb8
  400f14:	br	x17

0000000000400f18 <free@plt>:
  400f18:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400f1c:	ldr	x17, [x16, #4032]
  400f20:	add	x16, x16, #0xfc0
  400f24:	br	x17

0000000000400f28 <safe_close@plt>:
  400f28:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400f2c:	ldr	x17, [x16, #4040]
  400f30:	add	x16, x16, #0xfc8
  400f34:	br	x17

0000000000400f38 <read_line_full@plt>:
  400f38:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400f3c:	ldr	x17, [x16, #4048]
  400f40:	add	x16, x16, #0xfd0
  400f44:	br	x17

0000000000400f48 <memset@plt>:
  400f48:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400f4c:	ldr	x17, [x16, #4056]
  400f50:	add	x16, x16, #0xfd8
  400f54:	br	x17

0000000000400f58 <log_assert_failed_realm@plt>:
  400f58:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400f5c:	ldr	x17, [x16, #4064]
  400f60:	add	x16, x16, #0xfe0
  400f64:	br	x17

0000000000400f68 <sockaddr_un_set_path@plt>:
  400f68:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400f6c:	ldr	x17, [x16, #4072]
  400f70:	add	x16, x16, #0xfe8
  400f74:	br	x17

0000000000400f78 <sendto@plt>:
  400f78:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400f7c:	ldr	x17, [x16, #4080]
  400f80:	add	x16, x16, #0xff0
  400f84:	br	x17

0000000000400f88 <explicit_bzero@plt>:
  400f88:	adrp	x16, 41f000 <__FRAME_END__+0x1d1b8>
  400f8c:	ldr	x17, [x16, #4088]
  400f90:	add	x16, x16, #0xff8
  400f94:	br	x17

Disassembly of section .text:

0000000000400f98 <_start>:
  400f98:	mov	x29, #0x0                   	// #0
  400f9c:	mov	x30, #0x0                   	// #0
  400fa0:	mov	x5, x0
  400fa4:	ldr	x1, [sp]
  400fa8:	add	x2, sp, #0x8
  400fac:	mov	x6, sp
  400fb0:	movz	x0, #0x0, lsl #48
  400fb4:	movk	x0, #0x0, lsl #32
  400fb8:	movk	x0, #0x40, lsl #16
  400fbc:	movk	x0, #0x1160
  400fc0:	movz	x3, #0x0, lsl #48
  400fc4:	movk	x3, #0x0, lsl #32
  400fc8:	movk	x3, #0x40, lsl #16
  400fcc:	movk	x3, #0x1b40
  400fd0:	movz	x4, #0x0, lsl #48
  400fd4:	movk	x4, #0x0, lsl #32
  400fd8:	movk	x4, #0x40, lsl #16
  400fdc:	movk	x4, #0x1bc0
  400fe0:	bl	400de8 <__libc_start_main@plt>
  400fe4:	bl	400df8 <abort@plt>

0000000000400fe8 <call_weak_fn>:
  400fe8:	adrp	x0, 41f000 <__FRAME_END__+0x1d1b8>
  400fec:	ldr	x0, [x0, #3832]
  400ff0:	cbz	x0, 400ff8 <call_weak_fn+0x10>
  400ff4:	b	400e08 <__gmon_start__@plt>
  400ff8:	ret

0000000000400ffc <deregister_tm_clones>:
  400ffc:	stp	x29, x30, [sp, #-32]!
  401000:	mov	x29, sp
  401004:	adrp	x0, 420000 <completed.8445>
  401008:	add	x0, x0, #0x0
  40100c:	str	x0, [sp, #24]
  401010:	ldr	x0, [sp, #24]
  401014:	str	x0, [sp, #24]
  401018:	ldr	x1, [sp, #24]
  40101c:	adrp	x0, 420000 <completed.8445>
  401020:	add	x0, x0, #0x0
  401024:	cmp	x1, x0
  401028:	b.eq	401064 <deregister_tm_clones+0x68>  // b.none
  40102c:	adrp	x0, 401000 <deregister_tm_clones+0x4>
  401030:	add	x0, x0, #0xbd8
  401034:	ldr	x0, [x0]
  401038:	str	x0, [sp, #16]
  40103c:	ldr	x0, [sp, #16]
  401040:	str	x0, [sp, #16]
  401044:	ldr	x0, [sp, #16]
  401048:	cmp	x0, #0x0
  40104c:	b.eq	401068 <deregister_tm_clones+0x6c>  // b.none
  401050:	ldr	x1, [sp, #16]
  401054:	adrp	x0, 420000 <completed.8445>
  401058:	add	x0, x0, #0x0
  40105c:	blr	x1
  401060:	b	401068 <deregister_tm_clones+0x6c>
  401064:	nop
  401068:	ldp	x29, x30, [sp], #32
  40106c:	ret

0000000000401070 <register_tm_clones>:
  401070:	stp	x29, x30, [sp, #-48]!
  401074:	mov	x29, sp
  401078:	adrp	x0, 420000 <completed.8445>
  40107c:	add	x0, x0, #0x0
  401080:	str	x0, [sp, #40]
  401084:	ldr	x0, [sp, #40]
  401088:	str	x0, [sp, #40]
  40108c:	ldr	x1, [sp, #40]
  401090:	adrp	x0, 420000 <completed.8445>
  401094:	add	x0, x0, #0x0
  401098:	sub	x0, x1, x0
  40109c:	asr	x0, x0, #3
  4010a0:	lsr	x1, x0, #63
  4010a4:	add	x0, x1, x0
  4010a8:	asr	x0, x0, #1
  4010ac:	str	x0, [sp, #32]
  4010b0:	ldr	x0, [sp, #32]
  4010b4:	cmp	x0, #0x0
  4010b8:	b.eq	4010f8 <register_tm_clones+0x88>  // b.none
  4010bc:	adrp	x0, 401000 <deregister_tm_clones+0x4>
  4010c0:	add	x0, x0, #0xbe0
  4010c4:	ldr	x0, [x0]
  4010c8:	str	x0, [sp, #24]
  4010cc:	ldr	x0, [sp, #24]
  4010d0:	str	x0, [sp, #24]
  4010d4:	ldr	x0, [sp, #24]
  4010d8:	cmp	x0, #0x0
  4010dc:	b.eq	4010fc <register_tm_clones+0x8c>  // b.none
  4010e0:	ldr	x2, [sp, #24]
  4010e4:	ldr	x1, [sp, #32]
  4010e8:	adrp	x0, 420000 <completed.8445>
  4010ec:	add	x0, x0, #0x0
  4010f0:	blr	x2
  4010f4:	b	4010fc <register_tm_clones+0x8c>
  4010f8:	nop
  4010fc:	ldp	x29, x30, [sp], #48
  401100:	ret

0000000000401104 <__do_global_dtors_aux>:
  401104:	stp	x29, x30, [sp, #-16]!
  401108:	mov	x29, sp
  40110c:	adrp	x0, 420000 <completed.8445>
  401110:	add	x0, x0, #0x0
  401114:	ldrb	w0, [x0]
  401118:	and	x0, x0, #0xff
  40111c:	cmp	x0, #0x0
  401120:	b.ne	40113c <__do_global_dtors_aux+0x38>  // b.any
  401124:	bl	400ffc <deregister_tm_clones>
  401128:	adrp	x0, 420000 <completed.8445>
  40112c:	add	x0, x0, #0x0
  401130:	mov	w1, #0x1                   	// #1
  401134:	strb	w1, [x0]
  401138:	b	401140 <__do_global_dtors_aux+0x3c>
  40113c:	nop
  401140:	ldp	x29, x30, [sp], #16
  401144:	ret

0000000000401148 <frame_dummy>:
  401148:	stp	x29, x30, [sp, #-16]!
  40114c:	mov	x29, sp
  401150:	bl	401070 <register_tm_clones>
  401154:	nop
  401158:	ldp	x29, x30, [sp], #16
  40115c:	ret

0000000000401160 <main>:
  401160:	sub	sp, sp, #0x30
  401164:	stp	x29, x30, [sp, #32]
  401168:	add	x29, sp, #0x20
  40116c:	mov	w8, wzr
  401170:	mov	w9, #0x1                   	// #1
  401174:	stur	wzr, [x29, #-4]
  401178:	stur	w0, [x29, #-8]
  40117c:	str	x1, [sp, #16]
  401180:	ldur	w0, [x29, #-8]
  401184:	ldr	x1, [sp, #16]
  401188:	str	w8, [sp, #8]
  40118c:	str	w9, [sp, #4]
  401190:	bl	4011d8 <save_argc_argv>
  401194:	ldur	w0, [x29, #-8]
  401198:	ldr	x1, [sp, #16]
  40119c:	bl	40120c <run>
  4011a0:	str	w0, [sp, #12]
  4011a4:	bl	400e18 <ask_password_agent_close@plt>
  4011a8:	bl	400e28 <polkit_agent_close@plt>
  4011ac:	bl	400e38 <pager_close@plt>
  4011b0:	bl	400e48 <mac_selinux_finish@plt>
  4011b4:	bl	4016e4 <static_destruct>
  4011b8:	ldr	w8, [sp, #12]
  4011bc:	cmp	w8, #0x0
  4011c0:	ldr	w8, [sp, #4]
  4011c4:	ldr	w9, [sp, #8]
  4011c8:	csel	w0, w8, w9, lt  // lt = tstop
  4011cc:	ldp	x29, x30, [sp, #32]
  4011d0:	add	sp, sp, #0x30
  4011d4:	ret

00000000004011d8 <save_argc_argv>:
  4011d8:	sub	sp, sp, #0x10
  4011dc:	adrp	x8, 420000 <completed.8445>
  4011e0:	add	x8, x8, #0x8
  4011e4:	adrp	x9, 420000 <completed.8445>
  4011e8:	add	x9, x9, #0x10
  4011ec:	str	w0, [sp, #12]
  4011f0:	str	x1, [sp]
  4011f4:	ldr	w10, [sp, #12]
  4011f8:	str	w10, [x8]
  4011fc:	ldr	x8, [sp]
  401200:	str	x8, [x9]
  401204:	add	sp, sp, #0x10
  401208:	ret

000000000040120c <run>:
  40120c:	sub	sp, sp, #0xc0
  401210:	stp	x29, x30, [sp, #176]
  401214:	add	x29, sp, #0xb0
  401218:	mov	x8, xzr
  40121c:	mov	w9, #0xffffffff            	// #-1
  401220:	adrp	x10, 401000 <deregister_tm_clones+0x4>
  401224:	add	x10, x10, #0xbe8
  401228:	add	x10, x10, #0x3
  40122c:	adrp	x11, 401000 <deregister_tm_clones+0x4>
  401230:	add	x11, x11, #0xc0f
  401234:	stur	w0, [x29, #-8]
  401238:	stur	x1, [x29, #-16]
  40123c:	stur	x8, [x29, #-24]
  401240:	stur	w9, [x29, #-28]
  401244:	stur	xzr, [x29, #-40]
  401248:	str	x10, [sp, #32]
  40124c:	str	x11, [sp, #24]
  401250:	bl	400e58 <log_setup_service@plt>
  401254:	ldur	w9, [x29, #-8]
  401258:	cmp	w9, #0x3
  40125c:	b.eq	4012f0 <run+0xe4>  // b.none
  401260:	mov	w8, #0x3                   	// #3
  401264:	stur	w8, [x29, #-48]
  401268:	mov	w8, #0x16                  	// #22
  40126c:	movk	w8, #0x4000, lsl #16
  401270:	stur	w8, [x29, #-52]
  401274:	stur	wzr, [x29, #-56]
  401278:	ldur	w0, [x29, #-56]
  40127c:	bl	400e68 <log_get_max_level_realm@plt>
  401280:	ldur	w8, [x29, #-48]
  401284:	and	w8, w8, #0x7
  401288:	cmp	w0, w8
  40128c:	b.lt	4012c0 <run+0xb4>  // b.tstop
  401290:	ldur	w8, [x29, #-56]
  401294:	ldur	w9, [x29, #-48]
  401298:	orr	w0, w9, w8, lsl #10
  40129c:	ldur	w1, [x29, #-52]
  4012a0:	ldr	x2, [sp, #32]
  4012a4:	mov	w3, #0x2d                  	// #45
  4012a8:	ldr	x4, [sp, #24]
  4012ac:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  4012b0:	add	x5, x5, #0xc13
  4012b4:	bl	400e78 <log_internal_realm@plt>
  4012b8:	str	w0, [sp, #20]
  4012bc:	b	4012d4 <run+0xc8>
  4012c0:	ldur	w0, [x29, #-52]
  4012c4:	bl	400e88 <abs@plt>
  4012c8:	mov	w8, wzr
  4012cc:	subs	w8, w8, w0, uxtb
  4012d0:	str	w8, [sp, #20]
  4012d4:	ldr	w8, [sp, #20]
  4012d8:	stur	w8, [x29, #-60]
  4012dc:	ldur	w8, [x29, #-60]
  4012e0:	stur	w8, [x29, #-4]
  4012e4:	mov	w8, #0x1                   	// #1
  4012e8:	stur	w8, [x29, #-64]
  4012ec:	b	4016c4 <run+0x4b8>
  4012f0:	ldur	x8, [x29, #-16]
  4012f4:	ldr	x0, [x8, #8]
  4012f8:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  4012fc:	add	x1, x1, #0xc2e
  401300:	bl	400e98 <strcmp@plt>
  401304:	cbnz	w0, 4014e8 <run+0x2dc>
  401308:	sub	x2, x29, #0x48
  40130c:	mov	x8, xzr
  401310:	stur	x8, [x29, #-72]
  401314:	adrp	x8, 420000 <completed.8445>
  401318:	add	x8, x8, #0x18
  40131c:	ldr	x0, [x8]
  401320:	mov	x1, #0x100000              	// #1048576
  401324:	bl	4017e0 <read_line>
  401328:	stur	w0, [x29, #-44]
  40132c:	ldur	w9, [x29, #-44]
  401330:	cmp	w9, #0x0
  401334:	cset	w9, ge  // ge = tcont
  401338:	tbnz	w9, #0, 4013c8 <run+0x1bc>
  40133c:	mov	w8, #0x3                   	// #3
  401340:	stur	w8, [x29, #-76]
  401344:	ldur	w8, [x29, #-44]
  401348:	stur	w8, [x29, #-80]
  40134c:	stur	wzr, [x29, #-84]
  401350:	ldur	w0, [x29, #-84]
  401354:	bl	400e68 <log_get_max_level_realm@plt>
  401358:	ldur	w8, [x29, #-76]
  40135c:	and	w8, w8, #0x7
  401360:	cmp	w0, w8
  401364:	b.lt	401398 <run+0x18c>  // b.tstop
  401368:	ldur	w8, [x29, #-84]
  40136c:	ldur	w9, [x29, #-76]
  401370:	orr	w0, w9, w8, lsl #10
  401374:	ldur	w1, [x29, #-80]
  401378:	ldr	x2, [sp, #32]
  40137c:	mov	w3, #0x34                  	// #52
  401380:	ldr	x4, [sp, #24]
  401384:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  401388:	add	x5, x5, #0xc30
  40138c:	bl	400e78 <log_internal_realm@plt>
  401390:	str	w0, [sp, #16]
  401394:	b	4013ac <run+0x1a0>
  401398:	ldur	w0, [x29, #-80]
  40139c:	bl	400e88 <abs@plt>
  4013a0:	mov	w8, wzr
  4013a4:	subs	w8, w8, w0, uxtb
  4013a8:	str	w8, [sp, #16]
  4013ac:	ldr	w8, [sp, #16]
  4013b0:	str	w8, [sp, #88]
  4013b4:	ldr	w8, [sp, #88]
  4013b8:	stur	w8, [x29, #-4]
  4013bc:	mov	w8, #0x1                   	// #1
  4013c0:	stur	w8, [x29, #-64]
  4013c4:	b	4014c4 <run+0x2b8>
  4013c8:	ldur	w8, [x29, #-44]
  4013cc:	cbnz	w8, 401460 <run+0x254>
  4013d0:	mov	w8, #0x3                   	// #3
  4013d4:	str	w8, [sp, #84]
  4013d8:	mov	w8, #0x5                   	// #5
  4013dc:	movk	w8, #0x4000, lsl #16
  4013e0:	str	w8, [sp, #80]
  4013e4:	str	wzr, [sp, #76]
  4013e8:	ldr	w0, [sp, #76]
  4013ec:	bl	400e68 <log_get_max_level_realm@plt>
  4013f0:	ldr	w8, [sp, #84]
  4013f4:	and	w8, w8, #0x7
  4013f8:	cmp	w0, w8
  4013fc:	b.lt	401430 <run+0x224>  // b.tstop
  401400:	ldr	w8, [sp, #76]
  401404:	ldr	w9, [sp, #84]
  401408:	orr	w0, w9, w8, lsl #10
  40140c:	ldr	w1, [sp, #80]
  401410:	ldr	x2, [sp, #32]
  401414:	mov	w3, #0x37                  	// #55
  401418:	ldr	x4, [sp, #24]
  40141c:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  401420:	add	x5, x5, #0xc4c
  401424:	bl	400e78 <log_internal_realm@plt>
  401428:	str	w0, [sp, #12]
  40142c:	b	401444 <run+0x238>
  401430:	ldr	w0, [sp, #80]
  401434:	bl	400e88 <abs@plt>
  401438:	mov	w8, wzr
  40143c:	subs	w8, w8, w0, uxtb
  401440:	str	w8, [sp, #12]
  401444:	ldr	w8, [sp, #12]
  401448:	str	w8, [sp, #72]
  40144c:	ldr	w8, [sp, #72]
  401450:	stur	w8, [x29, #-4]
  401454:	mov	w8, #0x1                   	// #1
  401458:	stur	w8, [x29, #-64]
  40145c:	b	4014c4 <run+0x2b8>
  401460:	ldur	x1, [x29, #-72]
  401464:	adrp	x0, 401000 <deregister_tm_clones+0x4>
  401468:	add	x0, x0, #0xc6c
  40146c:	mov	x8, xzr
  401470:	mov	x2, x8
  401474:	bl	400ea8 <strjoin_real@plt>
  401478:	stur	x0, [x29, #-24]
  40147c:	ldur	x8, [x29, #-24]
  401480:	cbnz	x8, 4014ac <run+0x2a0>
  401484:	mov	w8, wzr
  401488:	mov	w0, w8
  40148c:	ldr	x1, [sp, #32]
  401490:	mov	w2, #0x3b                  	// #59
  401494:	ldr	x3, [sp, #24]
  401498:	bl	400eb8 <log_oom_internal@plt>
  40149c:	stur	w0, [x29, #-4]
  4014a0:	mov	w8, #0x1                   	// #1
  4014a4:	stur	w8, [x29, #-64]
  4014a8:	b	4014c4 <run+0x2b8>
  4014ac:	ldur	x0, [x29, #-72]
  4014b0:	bl	400ec8 <strlen@plt>
  4014b4:	add	x8, x0, #0x1
  4014b8:	add	x8, x8, #0x1
  4014bc:	stur	x8, [x29, #-40]
  4014c0:	stur	wzr, [x29, #-64]
  4014c4:	sub	x0, x29, #0x48
  4014c8:	bl	401764 <erase_and_freep>
  4014cc:	ldur	w8, [x29, #-64]
  4014d0:	cmp	w8, #0x0
  4014d4:	cset	w8, eq  // eq = none
  4014d8:	eor	w8, w8, #0x1
  4014dc:	tbnz	w8, #0, 4016c4 <run+0x4b8>
  4014e0:	b	4014e4 <run+0x2d8>
  4014e4:	b	4015e4 <run+0x3d8>
  4014e8:	ldur	x8, [x29, #-16]
  4014ec:	ldr	x0, [x8, #8]
  4014f0:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  4014f4:	add	x1, x1, #0xc6e
  4014f8:	bl	400e98 <strcmp@plt>
  4014fc:	cbnz	w0, 40154c <run+0x340>
  401500:	adrp	x0, 401000 <deregister_tm_clones+0x4>
  401504:	add	x0, x0, #0xc70
  401508:	bl	400ed8 <strdup@plt>
  40150c:	stur	x0, [x29, #-24]
  401510:	ldur	x8, [x29, #-24]
  401514:	cbnz	x8, 401540 <run+0x334>
  401518:	mov	w8, wzr
  40151c:	mov	w0, w8
  401520:	ldr	x1, [sp, #32]
  401524:	mov	w2, #0x42                  	// #66
  401528:	ldr	x3, [sp, #24]
  40152c:	bl	400eb8 <log_oom_internal@plt>
  401530:	stur	w0, [x29, #-4]
  401534:	mov	w8, #0x1                   	// #1
  401538:	stur	w8, [x29, #-64]
  40153c:	b	4016c4 <run+0x4b8>
  401540:	mov	x8, #0x1                   	// #1
  401544:	stur	x8, [x29, #-40]
  401548:	b	4015e4 <run+0x3d8>
  40154c:	mov	w8, #0x3                   	// #3
  401550:	str	w8, [sp, #68]
  401554:	mov	w8, #0x16                  	// #22
  401558:	movk	w8, #0x4000, lsl #16
  40155c:	str	w8, [sp, #64]
  401560:	str	wzr, [sp, #60]
  401564:	ldr	w0, [sp, #60]
  401568:	bl	400e68 <log_get_max_level_realm@plt>
  40156c:	ldr	w8, [sp, #68]
  401570:	and	w8, w8, #0x7
  401574:	cmp	w0, w8
  401578:	b.lt	4015b4 <run+0x3a8>  // b.tstop
  40157c:	ldr	w8, [sp, #60]
  401580:	ldr	w9, [sp, #68]
  401584:	orr	w0, w9, w8, lsl #10
  401588:	ldr	w1, [sp, #64]
  40158c:	ldur	x10, [x29, #-16]
  401590:	ldr	x6, [x10, #8]
  401594:	ldr	x2, [sp, #32]
  401598:	mov	w3, #0x48                  	// #72
  40159c:	ldr	x4, [sp, #24]
  4015a0:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  4015a4:	add	x5, x5, #0xc72
  4015a8:	bl	400e78 <log_internal_realm@plt>
  4015ac:	str	w0, [sp, #8]
  4015b0:	b	4015c8 <run+0x3bc>
  4015b4:	ldr	w0, [sp, #64]
  4015b8:	bl	400e88 <abs@plt>
  4015bc:	mov	w8, wzr
  4015c0:	subs	w8, w8, w0, uxtb
  4015c4:	str	w8, [sp, #8]
  4015c8:	ldr	w8, [sp, #8]
  4015cc:	str	w8, [sp, #56]
  4015d0:	ldr	w8, [sp, #56]
  4015d4:	stur	w8, [x29, #-4]
  4015d8:	mov	w8, #0x1                   	// #1
  4015dc:	stur	w8, [x29, #-64]
  4015e0:	b	4016c4 <run+0x4b8>
  4015e4:	mov	w0, #0x1                   	// #1
  4015e8:	mov	w1, #0x802                 	// #2050
  4015ec:	movk	w1, #0x8, lsl #16
  4015f0:	mov	w8, wzr
  4015f4:	mov	w2, w8
  4015f8:	bl	400ee8 <socket@plt>
  4015fc:	stur	w0, [x29, #-28]
  401600:	ldur	w8, [x29, #-28]
  401604:	cmp	w8, #0x0
  401608:	cset	w8, ge  // ge = tcont
  40160c:	tbnz	w8, #0, 4016a0 <run+0x494>
  401610:	mov	w8, #0x3                   	// #3
  401614:	str	w8, [sp, #52]
  401618:	bl	400ef8 <__errno_location@plt>
  40161c:	ldr	w8, [x0]
  401620:	str	w8, [sp, #48]
  401624:	str	wzr, [sp, #44]
  401628:	ldr	w0, [sp, #44]
  40162c:	bl	400e68 <log_get_max_level_realm@plt>
  401630:	ldr	w8, [sp, #52]
  401634:	and	w8, w8, #0x7
  401638:	cmp	w0, w8
  40163c:	b.lt	401670 <run+0x464>  // b.tstop
  401640:	ldr	w8, [sp, #44]
  401644:	ldr	w9, [sp, #52]
  401648:	orr	w0, w9, w8, lsl #10
  40164c:	ldr	w1, [sp, #48]
  401650:	ldr	x2, [sp, #32]
  401654:	mov	w3, #0x4c                  	// #76
  401658:	ldr	x4, [sp, #24]
  40165c:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  401660:	add	x5, x5, #0xc8c
  401664:	bl	400e78 <log_internal_realm@plt>
  401668:	str	w0, [sp, #4]
  40166c:	b	401684 <run+0x478>
  401670:	ldr	w0, [sp, #48]
  401674:	bl	400e88 <abs@plt>
  401678:	mov	w8, wzr
  40167c:	subs	w8, w8, w0, uxtb
  401680:	str	w8, [sp, #4]
  401684:	ldr	w8, [sp, #4]
  401688:	str	w8, [sp, #40]
  40168c:	ldr	w8, [sp, #40]
  401690:	stur	w8, [x29, #-4]
  401694:	mov	w8, #0x1                   	// #1
  401698:	stur	w8, [x29, #-64]
  40169c:	b	4016c4 <run+0x4b8>
  4016a0:	ldur	w0, [x29, #-28]
  4016a4:	ldur	x8, [x29, #-16]
  4016a8:	ldr	x1, [x8, #16]
  4016ac:	ldur	x2, [x29, #-24]
  4016b0:	ldur	x3, [x29, #-40]
  4016b4:	bl	40181c <send_on_socket>
  4016b8:	stur	w0, [x29, #-4]
  4016bc:	mov	w9, #0x1                   	// #1
  4016c0:	stur	w9, [x29, #-64]
  4016c4:	sub	x0, x29, #0x1c
  4016c8:	bl	4017b8 <closep>
  4016cc:	sub	x0, x29, #0x18
  4016d0:	bl	401764 <erase_and_freep>
  4016d4:	ldur	w0, [x29, #-4]
  4016d8:	ldp	x29, x30, [sp, #176]
  4016dc:	add	sp, sp, #0xc0
  4016e0:	ret

00000000004016e4 <static_destruct>:
  4016e4:	sub	sp, sp, #0x20
  4016e8:	stp	x29, x30, [sp, #16]
  4016ec:	add	x29, sp, #0x10
  4016f0:	adrp	x8, 41f000 <__FRAME_END__+0x1d1b8>
  4016f4:	ldr	x8, [x8, #3840]
  4016f8:	str	x8, [sp]
  4016fc:	cbnz	x8, 401704 <static_destruct+0x20>
  401700:	b	401758 <static_destruct+0x74>
  401704:	ldr	x0, [sp]
  401708:	mov	x1, #0x8                   	// #8
  40170c:	bl	401b10 <ALIGN_TO>
  401710:	str	x0, [sp, #8]
  401714:	ldr	x8, [sp, #8]
  401718:	adrp	x9, 41f000 <__FRAME_END__+0x1d1b8>
  40171c:	ldr	x9, [x9, #3848]
  401720:	cmp	x8, x9
  401724:	b.cs	401758 <static_destruct+0x74>  // b.hs, b.nlast
  401728:	ldr	x8, [sp, #8]
  40172c:	ldr	x8, [x8, #8]
  401730:	ldr	x9, [sp, #8]
  401734:	ldr	x0, [x9]
  401738:	blr	x8
  40173c:	ldr	x8, [sp, #8]
  401740:	add	x8, x8, #0x10
  401744:	mov	x0, x8
  401748:	mov	x1, #0x8                   	// #8
  40174c:	bl	401b10 <ALIGN_TO>
  401750:	str	x0, [sp, #8]
  401754:	b	401714 <static_destruct+0x30>
  401758:	ldp	x29, x30, [sp, #16]
  40175c:	add	sp, sp, #0x20
  401760:	ret

0000000000401764 <erase_and_freep>:
  401764:	sub	sp, sp, #0x30
  401768:	stp	x29, x30, [sp, #32]
  40176c:	add	x29, sp, #0x20
  401770:	stur	x0, [x29, #-8]
  401774:	ldur	x8, [x29, #-8]
  401778:	ldr	x8, [x8]
  40177c:	str	x8, [sp, #16]
  401780:	ldr	x8, [sp, #16]
  401784:	cbz	x8, 4017ac <erase_and_freep+0x48>
  401788:	ldr	x0, [sp, #16]
  40178c:	bl	400f08 <malloc_usable_size@plt>
  401790:	str	x0, [sp, #8]
  401794:	ldr	x0, [sp, #16]
  401798:	ldr	x1, [sp, #8]
  40179c:	bl	401ad0 <explicit_bzero_safe>
  4017a0:	ldr	x8, [sp, #16]
  4017a4:	mov	x0, x8
  4017a8:	bl	400f18 <free@plt>
  4017ac:	ldp	x29, x30, [sp, #32]
  4017b0:	add	sp, sp, #0x30
  4017b4:	ret

00000000004017b8 <closep>:
  4017b8:	sub	sp, sp, #0x20
  4017bc:	stp	x29, x30, [sp, #16]
  4017c0:	add	x29, sp, #0x10
  4017c4:	str	x0, [sp, #8]
  4017c8:	ldr	x8, [sp, #8]
  4017cc:	ldr	w0, [x8]
  4017d0:	bl	400f28 <safe_close@plt>
  4017d4:	ldp	x29, x30, [sp, #16]
  4017d8:	add	sp, sp, #0x20
  4017dc:	ret

00000000004017e0 <read_line>:
  4017e0:	sub	sp, sp, #0x30
  4017e4:	stp	x29, x30, [sp, #32]
  4017e8:	add	x29, sp, #0x20
  4017ec:	mov	w8, wzr
  4017f0:	stur	x0, [x29, #-8]
  4017f4:	str	x1, [sp, #16]
  4017f8:	str	x2, [sp, #8]
  4017fc:	ldur	x0, [x29, #-8]
  401800:	ldr	x1, [sp, #16]
  401804:	ldr	x3, [sp, #8]
  401808:	mov	w2, w8
  40180c:	bl	400f38 <read_line_full@plt>
  401810:	ldp	x29, x30, [sp, #32]
  401814:	add	sp, sp, #0x30
  401818:	ret

000000000040181c <send_on_socket>:
  40181c:	sub	sp, sp, #0x100
  401820:	stp	x29, x30, [sp, #240]
  401824:	add	x29, sp, #0xf0
  401828:	mov	x8, #0x80                  	// #128
  40182c:	mov	w9, wzr
  401830:	adrp	x10, 401000 <deregister_tm_clones+0x4>
  401834:	add	x10, x10, #0xbe8
  401838:	add	x10, x10, #0x3
  40183c:	adrp	x11, 401000 <deregister_tm_clones+0x4>
  401840:	add	x11, x11, #0xca8
  401844:	add	x12, sp, #0x50
  401848:	stur	w0, [x29, #-8]
  40184c:	stur	x1, [x29, #-16]
  401850:	stur	x2, [x29, #-24]
  401854:	stur	x3, [x29, #-32]
  401858:	mov	x0, x12
  40185c:	mov	w1, w9
  401860:	mov	x2, x8
  401864:	str	x10, [sp, #24]
  401868:	str	x11, [sp, #16]
  40186c:	bl	400f48 <memset@plt>
  401870:	ldur	w8, [x29, #-8]
  401874:	cmp	w8, #0x0
  401878:	cset	w8, ge  // ge = tcont
  40187c:	mov	w9, #0x1                   	// #1
  401880:	eor	w8, w8, #0x1
  401884:	eor	w8, w8, w9
  401888:	eor	w8, w8, w9
  40188c:	and	w8, w8, #0x1
  401890:	mov	w0, w8
  401894:	sxtw	x10, w0
  401898:	cbz	x10, 4018bc <send_on_socket+0xa0>
  40189c:	mov	w8, wzr
  4018a0:	mov	w0, w8
  4018a4:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  4018a8:	add	x1, x1, #0xca0
  4018ac:	ldr	x2, [sp, #24]
  4018b0:	mov	w3, #0x16                  	// #22
  4018b4:	ldr	x4, [sp, #16]
  4018b8:	bl	400f58 <log_assert_failed_realm@plt>
  4018bc:	ldur	x8, [x29, #-16]
  4018c0:	cmp	x8, #0x0
  4018c4:	cset	w9, ne  // ne = any
  4018c8:	mov	w10, #0x1                   	// #1
  4018cc:	eor	w9, w9, #0x1
  4018d0:	eor	w9, w9, w10
  4018d4:	eor	w9, w9, w10
  4018d8:	and	w9, w9, #0x1
  4018dc:	mov	w0, w9
  4018e0:	sxtw	x8, w0
  4018e4:	cbz	x8, 401908 <send_on_socket+0xec>
  4018e8:	mov	w8, wzr
  4018ec:	mov	w0, w8
  4018f0:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  4018f4:	add	x1, x1, #0xce4
  4018f8:	ldr	x2, [sp, #24]
  4018fc:	mov	w3, #0x17                  	// #23
  401900:	ldr	x4, [sp, #16]
  401904:	bl	400f58 <log_assert_failed_realm@plt>
  401908:	ldur	x8, [x29, #-24]
  40190c:	cmp	x8, #0x0
  401910:	cset	w9, ne  // ne = any
  401914:	mov	w10, #0x1                   	// #1
  401918:	eor	w9, w9, #0x1
  40191c:	eor	w9, w9, w10
  401920:	eor	w9, w9, w10
  401924:	and	w9, w9, #0x1
  401928:	mov	w0, w9
  40192c:	sxtw	x8, w0
  401930:	cbz	x8, 401954 <send_on_socket+0x138>
  401934:	mov	w8, wzr
  401938:	mov	w0, w8
  40193c:	adrp	x1, 401000 <deregister_tm_clones+0x4>
  401940:	add	x1, x1, #0xcf0
  401944:	ldr	x2, [sp, #24]
  401948:	mov	w3, #0x18                  	// #24
  40194c:	ldr	x4, [sp, #16]
  401950:	bl	400f58 <log_assert_failed_realm@plt>
  401954:	ldur	x1, [x29, #-16]
  401958:	add	x0, sp, #0x50
  40195c:	bl	400f68 <sockaddr_un_set_path@plt>
  401960:	str	w0, [sp, #76]
  401964:	ldr	w8, [sp, #76]
  401968:	cmp	w8, #0x0
  40196c:	cset	w8, ge  // ge = tcont
  401970:	tbnz	w8, #0, 401a00 <send_on_socket+0x1e4>
  401974:	mov	w8, #0x3                   	// #3
  401978:	str	w8, [sp, #72]
  40197c:	ldr	w8, [sp, #76]
  401980:	str	w8, [sp, #68]
  401984:	str	wzr, [sp, #64]
  401988:	ldr	w0, [sp, #64]
  40198c:	bl	400e68 <log_get_max_level_realm@plt>
  401990:	ldr	w8, [sp, #72]
  401994:	and	w8, w8, #0x7
  401998:	cmp	w0, w8
  40199c:	b.lt	4019d8 <send_on_socket+0x1bc>  // b.tstop
  4019a0:	ldr	w8, [sp, #64]
  4019a4:	ldr	w9, [sp, #72]
  4019a8:	orr	w0, w9, w8, lsl #10
  4019ac:	ldr	w1, [sp, #68]
  4019b0:	ldur	x6, [x29, #-16]
  4019b4:	ldr	x2, [sp, #24]
  4019b8:	mov	w3, #0x1c                  	// #28
  4019bc:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  4019c0:	add	x4, x4, #0xcf7
  4019c4:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  4019c8:	add	x5, x5, #0xd06
  4019cc:	bl	400e78 <log_internal_realm@plt>
  4019d0:	str	w0, [sp, #12]
  4019d4:	b	4019ec <send_on_socket+0x1d0>
  4019d8:	ldr	w0, [sp, #68]
  4019dc:	bl	400e88 <abs@plt>
  4019e0:	mov	w8, wzr
  4019e4:	subs	w8, w8, w0, uxtb
  4019e8:	str	w8, [sp, #12]
  4019ec:	ldr	w8, [sp, #12]
  4019f0:	str	w8, [sp, #60]
  4019f4:	ldr	w8, [sp, #60]
  4019f8:	stur	w8, [x29, #-4]
  4019fc:	b	401ac0 <send_on_socket+0x2a4>
  401a00:	ldur	w0, [x29, #-8]
  401a04:	ldur	x1, [x29, #-24]
  401a08:	ldur	x2, [x29, #-32]
  401a0c:	add	x8, sp, #0x50
  401a10:	str	x8, [sp, #48]
  401a14:	ldr	w5, [sp, #76]
  401a18:	ldr	x4, [sp, #48]
  401a1c:	mov	w3, #0x4000                	// #16384
  401a20:	bl	400f78 <sendto@plt>
  401a24:	cmp	x0, #0x0
  401a28:	cset	w9, ge  // ge = tcont
  401a2c:	tbnz	w9, #0, 401abc <send_on_socket+0x2a0>
  401a30:	mov	w8, #0x3                   	// #3
  401a34:	str	w8, [sp, #44]
  401a38:	bl	400ef8 <__errno_location@plt>
  401a3c:	ldr	w8, [x0]
  401a40:	str	w8, [sp, #40]
  401a44:	str	wzr, [sp, #36]
  401a48:	ldr	w0, [sp, #36]
  401a4c:	bl	400e68 <log_get_max_level_realm@plt>
  401a50:	ldr	w8, [sp, #44]
  401a54:	and	w8, w8, #0x7
  401a58:	cmp	w0, w8
  401a5c:	b.lt	401a94 <send_on_socket+0x278>  // b.tstop
  401a60:	ldr	w8, [sp, #36]
  401a64:	ldr	w9, [sp, #44]
  401a68:	orr	w0, w9, w8, lsl #10
  401a6c:	ldr	w1, [sp, #40]
  401a70:	ldr	x2, [sp, #24]
  401a74:	mov	w3, #0x1f                  	// #31
  401a78:	adrp	x4, 401000 <deregister_tm_clones+0x4>
  401a7c:	add	x4, x4, #0xcf7
  401a80:	adrp	x5, 401000 <deregister_tm_clones+0x4>
  401a84:	add	x5, x5, #0xd45
  401a88:	bl	400e78 <log_internal_realm@plt>
  401a8c:	str	w0, [sp, #8]
  401a90:	b	401aa8 <send_on_socket+0x28c>
  401a94:	ldr	w0, [sp, #40]
  401a98:	bl	400e88 <abs@plt>
  401a9c:	mov	w8, wzr
  401aa0:	subs	w8, w8, w0, uxtb
  401aa4:	str	w8, [sp, #8]
  401aa8:	ldr	w8, [sp, #8]
  401aac:	str	w8, [sp, #32]
  401ab0:	ldr	w8, [sp, #32]
  401ab4:	stur	w8, [x29, #-4]
  401ab8:	b	401ac0 <send_on_socket+0x2a4>
  401abc:	stur	wzr, [x29, #-4]
  401ac0:	ldur	w0, [x29, #-4]
  401ac4:	ldp	x29, x30, [sp, #240]
  401ac8:	add	sp, sp, #0x100
  401acc:	ret

0000000000401ad0 <explicit_bzero_safe>:
  401ad0:	sub	sp, sp, #0x20
  401ad4:	stp	x29, x30, [sp, #16]
  401ad8:	add	x29, sp, #0x10
  401adc:	str	x0, [sp, #8]
  401ae0:	str	x1, [sp]
  401ae4:	ldr	x8, [sp]
  401ae8:	cmp	x8, #0x0
  401aec:	cset	w9, ls  // ls = plast
  401af0:	tbnz	w9, #0, 401b00 <explicit_bzero_safe+0x30>
  401af4:	ldr	x0, [sp, #8]
  401af8:	ldr	x1, [sp]
  401afc:	bl	400f88 <explicit_bzero@plt>
  401b00:	ldr	x0, [sp, #8]
  401b04:	ldp	x29, x30, [sp, #16]
  401b08:	add	sp, sp, #0x20
  401b0c:	ret

0000000000401b10 <ALIGN_TO>:
  401b10:	sub	sp, sp, #0x10
  401b14:	str	x0, [sp, #8]
  401b18:	str	x1, [sp]
  401b1c:	ldr	x8, [sp, #8]
  401b20:	ldr	x9, [sp]
  401b24:	add	x8, x8, x9
  401b28:	subs	x8, x8, #0x1
  401b2c:	ldr	x9, [sp]
  401b30:	subs	x9, x9, #0x1
  401b34:	bic	x0, x8, x9
  401b38:	add	sp, sp, #0x10
  401b3c:	ret

0000000000401b40 <__libc_csu_init>:
  401b40:	stp	x29, x30, [sp, #-64]!
  401b44:	mov	x29, sp
  401b48:	stp	x19, x20, [sp, #16]
  401b4c:	adrp	x20, 41f000 <__FRAME_END__+0x1d1b8>
  401b50:	add	x20, x20, #0xcd0
  401b54:	stp	x21, x22, [sp, #32]
  401b58:	adrp	x21, 41f000 <__FRAME_END__+0x1d1b8>
  401b5c:	add	x21, x21, #0xcc8
  401b60:	sub	x20, x20, x21
  401b64:	mov	w22, w0
  401b68:	stp	x23, x24, [sp, #48]
  401b6c:	mov	x23, x1
  401b70:	mov	x24, x2
  401b74:	bl	400db0 <_init>
  401b78:	cmp	xzr, x20, asr #3
  401b7c:	b.eq	401ba8 <__libc_csu_init+0x68>  // b.none
  401b80:	asr	x20, x20, #3
  401b84:	mov	x19, #0x0                   	// #0
  401b88:	ldr	x3, [x21, x19, lsl #3]
  401b8c:	mov	x2, x24
  401b90:	add	x19, x19, #0x1
  401b94:	mov	x1, x23
  401b98:	mov	w0, w22
  401b9c:	blr	x3
  401ba0:	cmp	x20, x19
  401ba4:	b.ne	401b88 <__libc_csu_init+0x48>  // b.any
  401ba8:	ldp	x19, x20, [sp, #16]
  401bac:	ldp	x21, x22, [sp, #32]
  401bb0:	ldp	x23, x24, [sp, #48]
  401bb4:	ldp	x29, x30, [sp], #64
  401bb8:	ret
  401bbc:	nop

0000000000401bc0 <__libc_csu_fini>:
  401bc0:	ret

Disassembly of section .fini:

0000000000401bc4 <_fini>:
  401bc4:	stp	x29, x30, [sp, #-16]!
  401bc8:	mov	x29, sp
  401bcc:	ldp	x29, x30, [sp], #16
  401bd0:	ret
