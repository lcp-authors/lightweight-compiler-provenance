
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mtd_probe_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004008f8 <_init>:
  4008f8:	stp	x29, x30, [sp, #-16]!
  4008fc:	mov	x29, sp
  400900:	bl	400a90 <call_weak_fn>
  400904:	ldp	x29, x30, [sp], #16
  400908:	ret

Disassembly of section .plt:

0000000000400910 <__libc_start_main@plt-0x20>:
  400910:	stp	x16, x30, [sp, #-16]!
  400914:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400918:	ldr	x17, [x16, #3952]
  40091c:	add	x16, x16, #0xf70
  400920:	br	x17
  400924:	nop
  400928:	nop
  40092c:	nop

0000000000400930 <__libc_start_main@plt>:
  400930:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400934:	ldr	x17, [x16, #3960]
  400938:	add	x16, x16, #0xf78
  40093c:	br	x17

0000000000400940 <abort@plt>:
  400940:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400944:	ldr	x17, [x16, #3968]
  400948:	add	x16, x16, #0xf80
  40094c:	br	x17

0000000000400950 <__gmon_start__@plt>:
  400950:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400954:	ldr	x17, [x16, #3976]
  400958:	add	x16, x16, #0xf88
  40095c:	br	x17

0000000000400960 <printf@plt>:
  400960:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400964:	ldr	x17, [x16, #3984]
  400968:	add	x16, x16, #0xf90
  40096c:	br	x17

0000000000400970 <open64@plt>:
  400970:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400974:	ldr	x17, [x16, #3992]
  400978:	add	x16, x16, #0xf98
  40097c:	br	x17

0000000000400980 <__errno_location@plt>:
  400980:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400984:	ldr	x17, [x16, #4000]
  400988:	add	x16, x16, #0xfa0
  40098c:	br	x17

0000000000400990 <log_get_max_level_realm@plt>:
  400990:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400994:	ldr	x17, [x16, #4008]
  400998:	add	x16, x16, #0xfa8
  40099c:	br	x17

00000000004009a0 <log_internal_realm@plt>:
  4009a0:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  4009a4:	ldr	x17, [x16, #4016]
  4009a8:	add	x16, x16, #0xfb0
  4009ac:	br	x17

00000000004009b0 <abs@plt>:
  4009b0:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  4009b4:	ldr	x17, [x16, #4024]
  4009b8:	add	x16, x16, #0xfb8
  4009bc:	br	x17

00000000004009c0 <ioctl@plt>:
  4009c0:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  4009c4:	ldr	x17, [x16, #4032]
  4009c8:	add	x16, x16, #0xfc0
  4009cc:	br	x17

00000000004009d0 <safe_close@plt>:
  4009d0:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  4009d4:	ldr	x17, [x16, #4040]
  4009d8:	add	x16, x16, #0xfc8
  4009dc:	br	x17

00000000004009e0 <malloc@plt>:
  4009e0:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  4009e4:	ldr	x17, [x16, #4048]
  4009e8:	add	x16, x16, #0xfd0
  4009ec:	br	x17

00000000004009f0 <log_oom_internal@plt>:
  4009f0:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  4009f4:	ldr	x17, [x16, #4056]
  4009f8:	add	x16, x16, #0xfd8
  4009fc:	br	x17

0000000000400a00 <lseek64@plt>:
  400a00:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400a04:	ldr	x17, [x16, #4064]
  400a08:	add	x16, x16, #0xfe0
  400a0c:	br	x17

0000000000400a10 <read@plt>:
  400a10:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400a14:	ldr	x17, [x16, #4072]
  400a18:	add	x16, x16, #0xfe8
  400a1c:	br	x17

0000000000400a20 <memcmp@plt>:
  400a20:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400a24:	ldr	x17, [x16, #4080]
  400a28:	add	x16, x16, #0xff0
  400a2c:	br	x17

0000000000400a30 <free@plt>:
  400a30:	adrp	x16, 41f000 <__FRAME_END__+0x1da10>
  400a34:	ldr	x17, [x16, #4088]
  400a38:	add	x16, x16, #0xff8
  400a3c:	br	x17

Disassembly of section .text:

0000000000400a40 <_start>:
  400a40:	mov	x29, #0x0                   	// #0
  400a44:	mov	x30, #0x0                   	// #0
  400a48:	mov	x5, x0
  400a4c:	ldr	x1, [sp]
  400a50:	add	x2, sp, #0x8
  400a54:	mov	x6, sp
  400a58:	movz	x0, #0x0, lsl #48
  400a5c:	movk	x0, #0x0, lsl #32
  400a60:	movk	x0, #0x40, lsl #16
  400a64:	movk	x0, #0xc08
  400a68:	movz	x3, #0x0, lsl #48
  400a6c:	movk	x3, #0x0, lsl #32
  400a70:	movk	x3, #0x40, lsl #16
  400a74:	movk	x3, #0x12f0
  400a78:	movz	x4, #0x0, lsl #48
  400a7c:	movk	x4, #0x0, lsl #32
  400a80:	movk	x4, #0x40, lsl #16
  400a84:	movk	x4, #0x1370
  400a88:	bl	400930 <__libc_start_main@plt>
  400a8c:	bl	400940 <abort@plt>

0000000000400a90 <call_weak_fn>:
  400a90:	adrp	x0, 41f000 <__FRAME_END__+0x1da10>
  400a94:	ldr	x0, [x0, #3928]
  400a98:	cbz	x0, 400aa0 <call_weak_fn+0x10>
  400a9c:	b	400950 <__gmon_start__@plt>
  400aa0:	ret

0000000000400aa4 <deregister_tm_clones>:
  400aa4:	stp	x29, x30, [sp, #-32]!
  400aa8:	mov	x29, sp
  400aac:	adrp	x0, 420000 <completed.8445>
  400ab0:	add	x0, x0, #0x0
  400ab4:	str	x0, [sp, #24]
  400ab8:	ldr	x0, [sp, #24]
  400abc:	str	x0, [sp, #24]
  400ac0:	ldr	x1, [sp, #24]
  400ac4:	adrp	x0, 420000 <completed.8445>
  400ac8:	add	x0, x0, #0x0
  400acc:	cmp	x1, x0
  400ad0:	b.eq	400b0c <deregister_tm_clones+0x68>  // b.none
  400ad4:	adrp	x0, 401000 <probe_smart_media+0x1c0>
  400ad8:	add	x0, x0, #0x390
  400adc:	ldr	x0, [x0]
  400ae0:	str	x0, [sp, #16]
  400ae4:	ldr	x0, [sp, #16]
  400ae8:	str	x0, [sp, #16]
  400aec:	ldr	x0, [sp, #16]
  400af0:	cmp	x0, #0x0
  400af4:	b.eq	400b10 <deregister_tm_clones+0x6c>  // b.none
  400af8:	ldr	x1, [sp, #16]
  400afc:	adrp	x0, 420000 <completed.8445>
  400b00:	add	x0, x0, #0x0
  400b04:	blr	x1
  400b08:	b	400b10 <deregister_tm_clones+0x6c>
  400b0c:	nop
  400b10:	ldp	x29, x30, [sp], #32
  400b14:	ret

0000000000400b18 <register_tm_clones>:
  400b18:	stp	x29, x30, [sp, #-48]!
  400b1c:	mov	x29, sp
  400b20:	adrp	x0, 420000 <completed.8445>
  400b24:	add	x0, x0, #0x0
  400b28:	str	x0, [sp, #40]
  400b2c:	ldr	x0, [sp, #40]
  400b30:	str	x0, [sp, #40]
  400b34:	ldr	x1, [sp, #40]
  400b38:	adrp	x0, 420000 <completed.8445>
  400b3c:	add	x0, x0, #0x0
  400b40:	sub	x0, x1, x0
  400b44:	asr	x0, x0, #3
  400b48:	lsr	x1, x0, #63
  400b4c:	add	x0, x1, x0
  400b50:	asr	x0, x0, #1
  400b54:	str	x0, [sp, #32]
  400b58:	ldr	x0, [sp, #32]
  400b5c:	cmp	x0, #0x0
  400b60:	b.eq	400ba0 <register_tm_clones+0x88>  // b.none
  400b64:	adrp	x0, 401000 <probe_smart_media+0x1c0>
  400b68:	add	x0, x0, #0x398
  400b6c:	ldr	x0, [x0]
  400b70:	str	x0, [sp, #24]
  400b74:	ldr	x0, [sp, #24]
  400b78:	str	x0, [sp, #24]
  400b7c:	ldr	x0, [sp, #24]
  400b80:	cmp	x0, #0x0
  400b84:	b.eq	400ba4 <register_tm_clones+0x8c>  // b.none
  400b88:	ldr	x2, [sp, #24]
  400b8c:	ldr	x1, [sp, #32]
  400b90:	adrp	x0, 420000 <completed.8445>
  400b94:	add	x0, x0, #0x0
  400b98:	blr	x2
  400b9c:	b	400ba4 <register_tm_clones+0x8c>
  400ba0:	nop
  400ba4:	ldp	x29, x30, [sp], #48
  400ba8:	ret

0000000000400bac <__do_global_dtors_aux>:
  400bac:	stp	x29, x30, [sp, #-16]!
  400bb0:	mov	x29, sp
  400bb4:	adrp	x0, 420000 <completed.8445>
  400bb8:	add	x0, x0, #0x0
  400bbc:	ldrb	w0, [x0]
  400bc0:	and	x0, x0, #0xff
  400bc4:	cmp	x0, #0x0
  400bc8:	b.ne	400be4 <__do_global_dtors_aux+0x38>  // b.any
  400bcc:	bl	400aa4 <deregister_tm_clones>
  400bd0:	adrp	x0, 420000 <completed.8445>
  400bd4:	add	x0, x0, #0x0
  400bd8:	mov	w1, #0x1                   	// #1
  400bdc:	strb	w1, [x0]
  400be0:	b	400be8 <__do_global_dtors_aux+0x3c>
  400be4:	nop
  400be8:	ldp	x29, x30, [sp], #16
  400bec:	ret

0000000000400bf0 <frame_dummy>:
  400bf0:	stp	x29, x30, [sp, #-16]!
  400bf4:	mov	x29, sp
  400bf8:	bl	400b18 <register_tm_clones>
  400bfc:	nop
  400c00:	ldp	x29, x30, [sp], #16
  400c04:	ret

0000000000400c08 <main>:
  400c08:	sub	sp, sp, #0x80
  400c0c:	stp	x29, x30, [sp, #112]
  400c10:	add	x29, sp, #0x70
  400c14:	mov	w8, #0xffffffff            	// #-1
  400c18:	adrp	x9, 401000 <probe_smart_media+0x1c0>
  400c1c:	add	x9, x9, #0x3be
  400c20:	add	x9, x9, #0x3
  400c24:	stur	wzr, [x29, #-4]
  400c28:	stur	w0, [x29, #-8]
  400c2c:	stur	x1, [x29, #-16]
  400c30:	stur	w8, [x29, #-20]
  400c34:	ldur	w8, [x29, #-8]
  400c38:	cmp	w8, #0x2
  400c3c:	str	x9, [sp, #8]
  400c40:	b.eq	400c60 <main+0x58>  // b.none
  400c44:	adrp	x0, 401000 <probe_smart_media+0x1c0>
  400c48:	add	x0, x0, #0x3a0
  400c4c:	bl	400960 <printf@plt>
  400c50:	mov	w8, #0x1                   	// #1
  400c54:	stur	w8, [x29, #-4]
  400c58:	str	w8, [sp, #52]
  400c5c:	b	400e00 <main+0x1f8>
  400c60:	ldur	x8, [x29, #-16]
  400c64:	ldr	x0, [x8, #8]
  400c68:	mov	w1, #0x80000               	// #524288
  400c6c:	bl	400970 <open64@plt>
  400c70:	stur	w0, [x29, #-20]
  400c74:	ldur	w9, [x29, #-20]
  400c78:	cmp	w9, #0x0
  400c7c:	cset	w9, ge  // ge = tcont
  400c80:	tbnz	w9, #0, 400d18 <main+0x110>
  400c84:	mov	w8, #0x3                   	// #3
  400c88:	str	w8, [sp, #48]
  400c8c:	bl	400980 <__errno_location@plt>
  400c90:	ldr	w8, [x0]
  400c94:	str	w8, [sp, #44]
  400c98:	mov	w8, #0x1                   	// #1
  400c9c:	str	w8, [sp, #40]
  400ca0:	ldr	w0, [sp, #40]
  400ca4:	bl	400990 <log_get_max_level_realm@plt>
  400ca8:	ldr	w8, [sp, #48]
  400cac:	and	w8, w8, #0x7
  400cb0:	cmp	w0, w8
  400cb4:	b.lt	400cec <main+0xe4>  // b.tstop
  400cb8:	ldr	w8, [sp, #40]
  400cbc:	ldr	w9, [sp, #48]
  400cc0:	orr	w0, w9, w8, lsl #10
  400cc4:	ldr	w1, [sp, #44]
  400cc8:	ldr	x2, [sp, #8]
  400ccc:	mov	w3, #0x2e                  	// #46
  400cd0:	adrp	x4, 401000 <probe_smart_media+0x1c0>
  400cd4:	add	x4, x4, #0x3e0
  400cd8:	adrp	x5, 401000 <probe_smart_media+0x1c0>
  400cdc:	add	x5, x5, #0x3e5
  400ce0:	bl	4009a0 <log_internal_realm@plt>
  400ce4:	str	w0, [sp, #4]
  400ce8:	b	400d00 <main+0xf8>
  400cec:	ldr	w0, [sp, #44]
  400cf0:	bl	4009b0 <abs@plt>
  400cf4:	mov	w8, wzr
  400cf8:	subs	w8, w8, w0, uxtb
  400cfc:	str	w8, [sp, #4]
  400d00:	ldr	w8, [sp, #4]
  400d04:	str	w8, [sp, #36]
  400d08:	mov	w8, #0x1                   	// #1
  400d0c:	stur	w8, [x29, #-4]
  400d10:	str	w8, [sp, #52]
  400d14:	b	400e00 <main+0x1f8>
  400d18:	ldur	w0, [x29, #-20]
  400d1c:	mov	x1, #0x4d01                	// #19713
  400d20:	movk	x1, #0x8020, lsl #16
  400d24:	add	x2, sp, #0x38
  400d28:	bl	4009c0 <ioctl@plt>
  400d2c:	cmp	w0, #0x0
  400d30:	cset	w8, ge  // ge = tcont
  400d34:	tbnz	w8, #0, 400dcc <main+0x1c4>
  400d38:	mov	w8, #0x3                   	// #3
  400d3c:	str	w8, [sp, #32]
  400d40:	bl	400980 <__errno_location@plt>
  400d44:	ldr	w8, [x0]
  400d48:	str	w8, [sp, #28]
  400d4c:	mov	w8, #0x1                   	// #1
  400d50:	str	w8, [sp, #24]
  400d54:	ldr	w0, [sp, #24]
  400d58:	bl	400990 <log_get_max_level_realm@plt>
  400d5c:	ldr	w8, [sp, #32]
  400d60:	and	w8, w8, #0x7
  400d64:	cmp	w0, w8
  400d68:	b.lt	400da0 <main+0x198>  // b.tstop
  400d6c:	ldr	w8, [sp, #24]
  400d70:	ldr	w9, [sp, #32]
  400d74:	orr	w0, w9, w8, lsl #10
  400d78:	ldr	w1, [sp, #28]
  400d7c:	ldr	x2, [sp, #8]
  400d80:	mov	w3, #0x33                  	// #51
  400d84:	adrp	x4, 401000 <probe_smart_media+0x1c0>
  400d88:	add	x4, x4, #0x3e0
  400d8c:	adrp	x5, 401000 <probe_smart_media+0x1c0>
  400d90:	add	x5, x5, #0x3f8
  400d94:	bl	4009a0 <log_internal_realm@plt>
  400d98:	str	w0, [sp]
  400d9c:	b	400db4 <main+0x1ac>
  400da0:	ldr	w0, [sp, #28]
  400da4:	bl	4009b0 <abs@plt>
  400da8:	mov	w8, wzr
  400dac:	subs	w8, w8, w0, uxtb
  400db0:	str	w8, [sp]
  400db4:	ldr	w8, [sp]
  400db8:	str	w8, [sp, #20]
  400dbc:	mov	w8, #0x1                   	// #1
  400dc0:	stur	w8, [x29, #-4]
  400dc4:	str	w8, [sp, #52]
  400dc8:	b	400e00 <main+0x1f8>
  400dcc:	ldur	w0, [x29, #-20]
  400dd0:	add	x1, sp, #0x38
  400dd4:	bl	400e40 <probe_smart_media>
  400dd8:	cmp	w0, #0x0
  400ddc:	cset	w8, ge  // ge = tcont
  400de0:	tbnz	w8, #0, 400df4 <main+0x1ec>
  400de4:	mov	w8, #0x1                   	// #1
  400de8:	stur	w8, [x29, #-4]
  400dec:	str	w8, [sp, #52]
  400df0:	b	400e00 <main+0x1f8>
  400df4:	stur	wzr, [x29, #-4]
  400df8:	mov	w8, #0x1                   	// #1
  400dfc:	str	w8, [sp, #52]
  400e00:	sub	x0, x29, #0x14
  400e04:	bl	400e18 <closep>
  400e08:	ldur	w0, [x29, #-4]
  400e0c:	ldp	x29, x30, [sp, #112]
  400e10:	add	sp, sp, #0x80
  400e14:	ret

0000000000400e18 <closep>:
  400e18:	sub	sp, sp, #0x20
  400e1c:	stp	x29, x30, [sp, #16]
  400e20:	add	x29, sp, #0x10
  400e24:	str	x0, [sp, #8]
  400e28:	ldr	x8, [sp, #8]
  400e2c:	ldr	w0, [x8]
  400e30:	bl	4009d0 <safe_close@plt>
  400e34:	ldp	x29, x30, [sp, #16]
  400e38:	add	sp, sp, #0x20
  400e3c:	ret

0000000000400e40 <probe_smart_media>:
  400e40:	sub	sp, sp, #0xc0
  400e44:	stp	x29, x30, [sp, #176]
  400e48:	add	x29, sp, #0xb0
  400e4c:	mov	x8, xzr
  400e50:	mov	x9, #0x200                 	// #512
  400e54:	adrp	x10, 401000 <probe_smart_media+0x1c0>
  400e58:	add	x10, x10, #0x41d
  400e5c:	add	x10, x10, #0x3
  400e60:	adrp	x11, 401000 <probe_smart_media+0x1c0>
  400e64:	add	x11, x11, #0x446
  400e68:	stur	w0, [x29, #-8]
  400e6c:	stur	x1, [x29, #-16]
  400e70:	stur	x8, [x29, #-40]
  400e74:	stur	wzr, [x29, #-48]
  400e78:	mov	x0, x9
  400e7c:	str	x10, [sp, #48]
  400e80:	str	x11, [sp, #40]
  400e84:	bl	4009e0 <malloc@plt>
  400e88:	stur	x0, [x29, #-40]
  400e8c:	ldur	x8, [x29, #-40]
  400e90:	cbnz	x8, 400ec0 <probe_smart_media+0x80>
  400e94:	mov	w8, #0x1                   	// #1
  400e98:	mov	w0, w8
  400e9c:	ldr	x1, [sp, #48]
  400ea0:	mov	w2, #0x32                  	// #50
  400ea4:	ldr	x3, [sp, #40]
  400ea8:	str	w8, [sp, #36]
  400eac:	bl	4009f0 <log_oom_internal@plt>
  400eb0:	stur	w0, [x29, #-4]
  400eb4:	ldr	w8, [sp, #36]
  400eb8:	stur	w8, [x29, #-52]
  400ebc:	b	4012ac <probe_smart_media+0x46c>
  400ec0:	ldur	x8, [x29, #-16]
  400ec4:	ldrb	w9, [x8]
  400ec8:	cmp	w9, #0x4
  400ecc:	b.eq	400f64 <probe_smart_media+0x124>  // b.none
  400ed0:	mov	w8, #0x7                   	// #7
  400ed4:	stur	w8, [x29, #-56]
  400ed8:	mov	w8, #0x16                  	// #22
  400edc:	movk	w8, #0x4000, lsl #16
  400ee0:	stur	w8, [x29, #-60]
  400ee4:	mov	w8, #0x1                   	// #1
  400ee8:	stur	w8, [x29, #-64]
  400eec:	ldur	w0, [x29, #-64]
  400ef0:	bl	400990 <log_get_max_level_realm@plt>
  400ef4:	ldur	w8, [x29, #-56]
  400ef8:	and	w8, w8, #0x7
  400efc:	cmp	w0, w8
  400f00:	b.lt	400f34 <probe_smart_media+0xf4>  // b.tstop
  400f04:	ldur	w8, [x29, #-64]
  400f08:	ldur	w9, [x29, #-56]
  400f0c:	orr	w0, w9, w8, lsl #10
  400f10:	ldur	w1, [x29, #-60]
  400f14:	ldr	x2, [sp, #48]
  400f18:	mov	w3, #0x36                  	// #54
  400f1c:	ldr	x4, [sp, #40]
  400f20:	adrp	x5, 401000 <probe_smart_media+0x1c0>
  400f24:	add	x5, x5, #0x458
  400f28:	bl	4009a0 <log_internal_realm@plt>
  400f2c:	str	w0, [sp, #32]
  400f30:	b	400f48 <probe_smart_media+0x108>
  400f34:	ldur	w0, [x29, #-60]
  400f38:	bl	4009b0 <abs@plt>
  400f3c:	mov	w8, wzr
  400f40:	subs	w8, w8, w0, uxtb
  400f44:	str	w8, [sp, #32]
  400f48:	ldr	w8, [sp, #32]
  400f4c:	stur	w8, [x29, #-68]
  400f50:	ldur	w8, [x29, #-68]
  400f54:	stur	w8, [x29, #-4]
  400f58:	mov	w8, #0x1                   	// #1
  400f5c:	stur	w8, [x29, #-52]
  400f60:	b	4012ac <probe_smart_media+0x46c>
  400f64:	ldur	x8, [x29, #-16]
  400f68:	ldr	w9, [x8, #16]
  400f6c:	stur	w9, [x29, #-20]
  400f70:	ldur	x8, [x29, #-16]
  400f74:	ldr	w9, [x8, #12]
  400f78:	stur	w9, [x29, #-24]
  400f7c:	ldur	x8, [x29, #-16]
  400f80:	ldr	w9, [x8, #8]
  400f84:	mov	w10, #0x100000              	// #1048576
  400f88:	udiv	w9, w9, w10
  400f8c:	stur	w9, [x29, #-28]
  400f90:	mov	w9, #0x0                   	// #0
  400f94:	sturb	w9, [x29, #-69]
  400f98:	ldur	w9, [x29, #-20]
  400f9c:	cmp	w9, #0x100
  400fa0:	str	w9, [sp, #28]
  400fa4:	b.eq	400fc4 <probe_smart_media+0x184>  // b.none
  400fa8:	b	400fac <probe_smart_media+0x16c>
  400fac:	ldr	w8, [sp, #28]
  400fb0:	cmp	w8, #0x200
  400fb4:	cset	w9, eq  // eq = none
  400fb8:	eor	w9, w9, #0x1
  400fbc:	tbnz	w9, #0, 400fd0 <probe_smart_media+0x190>
  400fc0:	b	400fc4 <probe_smart_media+0x184>
  400fc4:	mov	w8, #0x1                   	// #1
  400fc8:	sturb	w8, [x29, #-69]
  400fcc:	b	400fd0 <probe_smart_media+0x190>
  400fd0:	ldurb	w8, [x29, #-69]
  400fd4:	and	w8, w8, #0x1
  400fd8:	sturb	w8, [x29, #-70]
  400fdc:	ldurb	w8, [x29, #-70]
  400fe0:	tbnz	w8, #0, 40107c <probe_smart_media+0x23c>
  400fe4:	mov	w8, #0x7                   	// #7
  400fe8:	stur	w8, [x29, #-76]
  400fec:	mov	w8, #0x16                  	// #22
  400ff0:	movk	w8, #0x4000, lsl #16
  400ff4:	stur	w8, [x29, #-80]
  400ff8:	mov	w8, #0x1                   	// #1
  400ffc:	stur	w8, [x29, #-84]
  401000:	ldur	w0, [x29, #-84]
  401004:	bl	400990 <log_get_max_level_realm@plt>
  401008:	ldur	w8, [x29, #-76]
  40100c:	and	w8, w8, #0x7
  401010:	cmp	w0, w8
  401014:	b.lt	40104c <probe_smart_media+0x20c>  // b.tstop
  401018:	ldur	w8, [x29, #-84]
  40101c:	ldur	w9, [x29, #-76]
  401020:	orr	w0, w9, w8, lsl #10
  401024:	ldur	w1, [x29, #-80]
  401028:	ldur	w6, [x29, #-20]
  40102c:	ldr	x2, [sp, #48]
  401030:	mov	w3, #0x3e                  	// #62
  401034:	ldr	x4, [sp, #40]
  401038:	adrp	x5, 401000 <probe_smart_media+0x1c0>
  40103c:	add	x5, x5, #0x472
  401040:	bl	4009a0 <log_internal_realm@plt>
  401044:	str	w0, [sp, #24]
  401048:	b	401060 <probe_smart_media+0x220>
  40104c:	ldur	w0, [x29, #-80]
  401050:	bl	4009b0 <abs@plt>
  401054:	mov	w8, wzr
  401058:	subs	w8, w8, w0, uxtb
  40105c:	str	w8, [sp, #24]
  401060:	ldr	w8, [sp, #24]
  401064:	str	w8, [sp, #88]
  401068:	ldr	w8, [sp, #88]
  40106c:	stur	w8, [x29, #-4]
  401070:	mov	w8, #0x1                   	// #1
  401074:	stur	w8, [x29, #-52]
  401078:	b	4012ac <probe_smart_media+0x46c>
  40107c:	ldur	w8, [x29, #-28]
  401080:	subs	w9, w8, #0x1
  401084:	cmp	w9, #0x1
  401088:	str	w8, [sp, #20]
  40108c:	b.ls	4010a4 <probe_smart_media+0x264>  // b.plast
  401090:	b	401094 <probe_smart_media+0x254>
  401094:	ldr	w8, [sp, #20]
  401098:	cmp	w8, #0x4
  40109c:	b.eq	4010b0 <probe_smart_media+0x270>  // b.none
  4010a0:	b	4010bc <probe_smart_media+0x27c>
  4010a4:	mov	w8, #0x6                   	// #6
  4010a8:	stur	w8, [x29, #-32]
  4010ac:	b	4010c4 <probe_smart_media+0x284>
  4010b0:	mov	w8, #0xc                   	// #12
  4010b4:	stur	w8, [x29, #-32]
  4010b8:	b	4010c4 <probe_smart_media+0x284>
  4010bc:	mov	w8, #0x18                  	// #24
  4010c0:	stur	w8, [x29, #-32]
  4010c4:	stur	wzr, [x29, #-44]
  4010c8:	ldur	w8, [x29, #-44]
  4010cc:	ldur	w9, [x29, #-24]
  4010d0:	ldur	w10, [x29, #-32]
  4010d4:	mul	w9, w9, w10
  4010d8:	cmp	w8, w9
  4010dc:	b.ge	401130 <probe_smart_media+0x2f0>  // b.tcont
  4010e0:	ldur	w0, [x29, #-8]
  4010e4:	ldur	w2, [x29, #-44]
  4010e8:	mov	x8, xzr
  4010ec:	mov	x1, x8
  4010f0:	bl	400a00 <lseek64@plt>
  4010f4:	ldur	w9, [x29, #-8]
  4010f8:	ldur	x1, [x29, #-40]
  4010fc:	mov	w0, w9
  401100:	mov	x2, #0x200                 	// #512
  401104:	bl	400a10 <read@plt>
  401108:	cmp	x0, #0x200
  40110c:	b.ne	40111c <probe_smart_media+0x2dc>  // b.any
  401110:	mov	w8, #0x1                   	// #1
  401114:	stur	w8, [x29, #-48]
  401118:	b	401130 <probe_smart_media+0x2f0>
  40111c:	ldur	w8, [x29, #-20]
  401120:	ldur	w9, [x29, #-44]
  401124:	add	w8, w9, w8
  401128:	stur	w8, [x29, #-44]
  40112c:	b	4010c8 <probe_smart_media+0x288>
  401130:	ldur	w8, [x29, #-48]
  401134:	cbnz	w8, 4011cc <probe_smart_media+0x38c>
  401138:	mov	w8, #0x7                   	// #7
  40113c:	str	w8, [sp, #84]
  401140:	mov	w8, #0x16                  	// #22
  401144:	movk	w8, #0x4000, lsl #16
  401148:	str	w8, [sp, #80]
  40114c:	mov	w8, #0x1                   	// #1
  401150:	str	w8, [sp, #76]
  401154:	ldr	w0, [sp, #76]
  401158:	bl	400990 <log_get_max_level_realm@plt>
  40115c:	ldr	w8, [sp, #84]
  401160:	and	w8, w8, #0x7
  401164:	cmp	w0, w8
  401168:	b.lt	40119c <probe_smart_media+0x35c>  // b.tstop
  40116c:	ldr	w8, [sp, #76]
  401170:	ldr	w9, [sp, #84]
  401174:	orr	w0, w9, w8, lsl #10
  401178:	ldr	w1, [sp, #80]
  40117c:	ldr	x2, [sp, #48]
  401180:	mov	w3, #0x58                  	// #88
  401184:	ldr	x4, [sp, #40]
  401188:	adrp	x5, 401000 <probe_smart_media+0x1c0>
  40118c:	add	x5, x5, #0x48d
  401190:	bl	4009a0 <log_internal_realm@plt>
  401194:	str	w0, [sp, #16]
  401198:	b	4011b0 <probe_smart_media+0x370>
  40119c:	ldr	w0, [sp, #80]
  4011a0:	bl	4009b0 <abs@plt>
  4011a4:	mov	w8, wzr
  4011a8:	subs	w8, w8, w0, uxtb
  4011ac:	str	w8, [sp, #16]
  4011b0:	ldr	w8, [sp, #16]
  4011b4:	str	w8, [sp, #72]
  4011b8:	ldr	w8, [sp, #72]
  4011bc:	stur	w8, [x29, #-4]
  4011c0:	mov	w8, #0x1                   	// #1
  4011c4:	stur	w8, [x29, #-52]
  4011c8:	b	4012ac <probe_smart_media+0x46c>
  4011cc:	ldur	x0, [x29, #-40]
  4011d0:	adrp	x1, 401000 <probe_smart_media+0x1c0>
  4011d4:	add	x1, x1, #0x4f0
  4011d8:	mov	x2, #0xa                   	// #10
  4011dc:	bl	400a20 <memcmp@plt>
  4011e0:	cbz	w0, 401294 <probe_smart_media+0x454>
  4011e4:	ldur	x8, [x29, #-40]
  4011e8:	add	x0, x8, #0x100
  4011ec:	adrp	x1, 401000 <probe_smart_media+0x1c0>
  4011f0:	add	x1, x1, #0x4f0
  4011f4:	mov	x2, #0xa                   	// #10
  4011f8:	bl	400a20 <memcmp@plt>
  4011fc:	cbz	w0, 401294 <probe_smart_media+0x454>
  401200:	mov	w8, #0x7                   	// #7
  401204:	str	w8, [sp, #68]
  401208:	mov	w8, #0x16                  	// #22
  40120c:	movk	w8, #0x4000, lsl #16
  401210:	str	w8, [sp, #64]
  401214:	mov	w8, #0x1                   	// #1
  401218:	str	w8, [sp, #60]
  40121c:	ldr	w0, [sp, #60]
  401220:	bl	400990 <log_get_max_level_realm@plt>
  401224:	ldr	w8, [sp, #68]
  401228:	and	w8, w8, #0x7
  40122c:	cmp	w0, w8
  401230:	b.lt	401264 <probe_smart_media+0x424>  // b.tstop
  401234:	ldr	w8, [sp, #60]
  401238:	ldr	w9, [sp, #68]
  40123c:	orr	w0, w9, w8, lsl #10
  401240:	ldr	w1, [sp, #64]
  401244:	ldr	x2, [sp, #48]
  401248:	mov	w3, #0x5d                  	// #93
  40124c:	ldr	x4, [sp, #40]
  401250:	adrp	x5, 401000 <probe_smart_media+0x1c0>
  401254:	add	x5, x5, #0x49b
  401258:	bl	4009a0 <log_internal_realm@plt>
  40125c:	str	w0, [sp, #12]
  401260:	b	401278 <probe_smart_media+0x438>
  401264:	ldr	w0, [sp, #64]
  401268:	bl	4009b0 <abs@plt>
  40126c:	mov	w8, wzr
  401270:	subs	w8, w8, w0, uxtb
  401274:	str	w8, [sp, #12]
  401278:	ldr	w8, [sp, #12]
  40127c:	str	w8, [sp, #56]
  401280:	ldr	w8, [sp, #56]
  401284:	stur	w8, [x29, #-4]
  401288:	mov	w8, #0x1                   	// #1
  40128c:	stur	w8, [x29, #-52]
  401290:	b	4012ac <probe_smart_media+0x46c>
  401294:	adrp	x0, 401000 <probe_smart_media+0x1c0>
  401298:	add	x0, x0, #0x4b6
  40129c:	bl	400960 <printf@plt>
  4012a0:	stur	wzr, [x29, #-4]
  4012a4:	mov	w8, #0x1                   	// #1
  4012a8:	stur	w8, [x29, #-52]
  4012ac:	sub	x0, x29, #0x28
  4012b0:	bl	4012c4 <freep>
  4012b4:	ldur	w0, [x29, #-4]
  4012b8:	ldp	x29, x30, [sp, #176]
  4012bc:	add	sp, sp, #0xc0
  4012c0:	ret

00000000004012c4 <freep>:
  4012c4:	sub	sp, sp, #0x20
  4012c8:	stp	x29, x30, [sp, #16]
  4012cc:	add	x29, sp, #0x10
  4012d0:	str	x0, [sp, #8]
  4012d4:	ldr	x8, [sp, #8]
  4012d8:	ldr	x0, [x8]
  4012dc:	bl	400a30 <free@plt>
  4012e0:	ldp	x29, x30, [sp, #16]
  4012e4:	add	sp, sp, #0x20
  4012e8:	ret
  4012ec:	udf	#0

00000000004012f0 <__libc_csu_init>:
  4012f0:	stp	x29, x30, [sp, #-64]!
  4012f4:	mov	x29, sp
  4012f8:	stp	x19, x20, [sp, #16]
  4012fc:	adrp	x20, 41f000 <__FRAME_END__+0x1da10>
  401300:	add	x20, x20, #0xd30
  401304:	stp	x21, x22, [sp, #32]
  401308:	adrp	x21, 41f000 <__FRAME_END__+0x1da10>
  40130c:	add	x21, x21, #0xd28
  401310:	sub	x20, x20, x21
  401314:	mov	w22, w0
  401318:	stp	x23, x24, [sp, #48]
  40131c:	mov	x23, x1
  401320:	mov	x24, x2
  401324:	bl	4008f8 <_init>
  401328:	cmp	xzr, x20, asr #3
  40132c:	b.eq	401358 <__libc_csu_init+0x68>  // b.none
  401330:	asr	x20, x20, #3
  401334:	mov	x19, #0x0                   	// #0
  401338:	ldr	x3, [x21, x19, lsl #3]
  40133c:	mov	x2, x24
  401340:	add	x19, x19, #0x1
  401344:	mov	x1, x23
  401348:	mov	w0, w22
  40134c:	blr	x3
  401350:	cmp	x20, x19
  401354:	b.ne	401338 <__libc_csu_init+0x48>  // b.any
  401358:	ldp	x19, x20, [sp, #16]
  40135c:	ldp	x21, x22, [sp, #32]
  401360:	ldp	x23, x24, [sp, #48]
  401364:	ldp	x29, x30, [sp], #64
  401368:	ret
  40136c:	nop

0000000000401370 <__libc_csu_fini>:
  401370:	ret

Disassembly of section .fini:

0000000000401374 <_fini>:
  401374:	stp	x29, x30, [sp, #-16]!
  401378:	mov	x29, sp
  40137c:	ldp	x29, x30, [sp], #16
  401380:	ret
