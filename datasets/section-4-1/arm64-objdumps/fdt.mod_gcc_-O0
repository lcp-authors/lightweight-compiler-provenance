
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fdt.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_fdt_load-0x68>:
       0:	sub	sp, sp, #0x10
       4:	str	w0, [sp, #12]
       8:	ldr	w0, [sp, #12]
       c:	rev	w0, w0
      10:	add	sp, sp, #0x10
      14:	ret
      18:	stp	x29, x30, [sp, #-48]!
      1c:	mov	x29, sp
      20:	str	x0, [sp, #40]
      24:	str	x1, [sp, #32]
      28:	str	x2, [sp, #24]
      2c:	str	x3, [sp, #16]
      30:	mov	w4, #0x0                   	// #0
      34:	ldr	x3, [sp, #16]
      38:	ldr	x2, [sp, #24]
      3c:	ldr	x1, [sp, #32]
      40:	ldr	x0, [sp, #40]
      44:	bl	0 <grub_register_command_prio>
      48:	ldp	x29, x30, [sp], #48
      4c:	ret
      50:	sub	sp, sp, #0x10
      54:	str	x0, [sp, #8]
      58:	ldr	x0, [sp, #8]
      5c:	ldr	x0, [x0, #64]
      60:	add	sp, sp, #0x10
      64:	ret

0000000000000068 <grub_fdt_load>:
      68:	stp	x29, x30, [sp, #-80]!
      6c:	mov	x29, sp
      70:	str	x19, [sp, #16]
      74:	str	x0, [sp, #40]
      78:	adrp	x0, 0 <grub_fdt_load-0x68>
      7c:	add	x0, x0, #0x0
      80:	ldr	x0, [x0]
      84:	ldr	x0, [x0]
      88:	cmp	x0, #0x0
      8c:	b.eq	d8 <grub_fdt_load+0x70>  // b.none
      90:	adrp	x0, 0 <grub_fdt_load-0x68>
      94:	add	x0, x0, #0x0
      98:	ldr	x0, [x0]
      9c:	ldr	x0, [x0]
      a0:	ldr	w0, [x0, #4]
      a4:	bl	0 <grub_fdt_load-0x68>
      a8:	add	w0, w0, #0xfff
      ac:	lsr	w0, w0, #12
      b0:	str	w0, [sp, #68]
      b4:	adrp	x0, 0 <grub_fdt_load-0x68>
      b8:	add	x0, x0, #0x0
      bc:	ldr	x0, [x0]
      c0:	ldr	x0, [x0]
      c4:	mov	x2, x0
      c8:	ldr	w0, [sp, #68]
      cc:	mov	x1, x0
      d0:	mov	x0, x2
      d4:	bl	0 <grub_efi_free_pages>
      d8:	adrp	x0, 0 <grub_fdt_load-0x68>
      dc:	add	x0, x0, #0x0
      e0:	ldr	x0, [x0]
      e4:	ldr	x0, [x0]
      e8:	cmp	x0, #0x0
      ec:	b.eq	108 <grub_fdt_load+0xa0>  // b.none
      f0:	adrp	x0, 0 <grub_fdt_load-0x68>
      f4:	add	x0, x0, #0x0
      f8:	ldr	x0, [x0]
      fc:	ldr	x0, [x0]
     100:	str	x0, [sp, #72]
     104:	b	110 <grub_fdt_load+0xa8>
     108:	bl	0 <grub_efi_get_firmware_fdt>
     10c:	str	x0, [sp, #72]
     110:	ldr	x0, [sp, #72]
     114:	cmp	x0, #0x0
     118:	b.eq	130 <grub_fdt_load+0xc8>  // b.none
     11c:	ldr	x0, [sp, #72]
     120:	ldr	w0, [x0, #4]
     124:	bl	0 <grub_fdt_load-0x68>
     128:	str	w0, [sp, #68]
     12c:	b	138 <grub_fdt_load+0xd0>
     130:	mov	w0, #0x83                  	// #131
     134:	str	w0, [sp, #68]
     138:	ldr	x0, [sp, #40]
     13c:	mov	w1, w0
     140:	ldr	w0, [sp, #68]
     144:	add	w0, w0, w1
     148:	str	w0, [sp, #68]
     14c:	ldr	w4, [sp, #68]
     150:	adrp	x0, 0 <grub_fdt_load-0x68>
     154:	add	x0, x0, #0x0
     158:	ldr	x3, [x0]
     15c:	adrp	x0, 0 <grub_fdt_load-0x68>
     160:	add	x0, x0, #0x0
     164:	ldr	x2, [x0]
     168:	mov	w1, #0x3e                  	// #62
     16c:	adrp	x0, 0 <grub_fdt_load-0x68>
     170:	add	x0, x0, #0x0
     174:	ldr	x0, [x0]
     178:	bl	0 <grub_real_dprintf>
     17c:	ldr	w0, [sp, #68]
     180:	add	w0, w0, #0xfff
     184:	lsr	w0, w0, #12
     188:	mov	w0, w0
     18c:	bl	0 <grub_efi_allocate_any_pages>
     190:	mov	x1, x0
     194:	adrp	x0, 0 <grub_fdt_load-0x68>
     198:	add	x0, x0, #0x0
     19c:	ldr	x0, [x0]
     1a0:	str	x1, [x0]
     1a4:	adrp	x0, 0 <grub_fdt_load-0x68>
     1a8:	add	x0, x0, #0x0
     1ac:	ldr	x0, [x0]
     1b0:	ldr	x0, [x0]
     1b4:	cmp	x0, #0x0
     1b8:	b.ne	1c4 <grub_fdt_load+0x15c>  // b.any
     1bc:	mov	x0, #0x0                   	// #0
     1c0:	b	2c4 <grub_fdt_load+0x25c>
     1c4:	ldr	x0, [sp, #72]
     1c8:	cmp	x0, #0x0
     1cc:	b.eq	21c <grub_fdt_load+0x1b4>  // b.none
     1d0:	adrp	x0, 0 <grub_fdt_load-0x68>
     1d4:	add	x0, x0, #0x0
     1d8:	ldr	x0, [x0]
     1dc:	ldr	x3, [x0]
     1e0:	ldr	w1, [sp, #68]
     1e4:	ldr	x0, [sp, #40]
     1e8:	sub	x0, x1, x0
     1ec:	mov	x2, x0
     1f0:	ldr	x1, [sp, #72]
     1f4:	mov	x0, x3
     1f8:	bl	0 <grub_memmove>
     1fc:	adrp	x0, 0 <grub_fdt_load-0x68>
     200:	add	x0, x0, #0x0
     204:	ldr	x0, [x0]
     208:	ldr	x19, [x0]
     20c:	ldr	w0, [sp, #68]
     210:	bl	0 <grub_fdt_load-0x68>
     214:	str	w0, [x19, #4]
     218:	b	2b4 <grub_fdt_load+0x24c>
     21c:	adrp	x0, 0 <grub_fdt_load-0x68>
     220:	add	x0, x0, #0x0
     224:	ldr	x0, [x0]
     228:	ldr	x0, [x0]
     22c:	ldr	w1, [sp, #68]
     230:	bl	1dd0 <grub_fdt_create_empty_tree>
     234:	mov	w0, #0x2                   	// #2
     238:	bl	0 <grub_fdt_load-0x68>
     23c:	str	w0, [sp, #64]
     240:	adrp	x0, 0 <grub_fdt_load-0x68>
     244:	add	x0, x0, #0x0
     248:	ldr	x0, [x0]
     24c:	ldr	x5, [x0]
     250:	add	x0, sp, #0x40
     254:	mov	w4, #0x4                   	// #4
     258:	mov	x3, x0
     25c:	adrp	x0, 0 <grub_fdt_load-0x68>
     260:	add	x0, x0, #0x0
     264:	ldr	x2, [x0]
     268:	mov	w1, #0x0                   	// #0
     26c:	mov	x0, x5
     270:	bl	19c8 <grub_fdt_set_prop>
     274:	mov	w0, #0x2                   	// #2
     278:	bl	0 <grub_fdt_load-0x68>
     27c:	str	w0, [sp, #60]
     280:	adrp	x0, 0 <grub_fdt_load-0x68>
     284:	add	x0, x0, #0x0
     288:	ldr	x0, [x0]
     28c:	ldr	x5, [x0]
     290:	add	x0, sp, #0x3c
     294:	mov	w4, #0x4                   	// #4
     298:	mov	x3, x0
     29c:	adrp	x0, 0 <grub_fdt_load-0x68>
     2a0:	add	x0, x0, #0x0
     2a4:	ldr	x2, [x0]
     2a8:	mov	w1, #0x0                   	// #0
     2ac:	mov	x0, x5
     2b0:	bl	19c8 <grub_fdt_set_prop>
     2b4:	adrp	x0, 0 <grub_fdt_load-0x68>
     2b8:	add	x0, x0, #0x0
     2bc:	ldr	x0, [x0]
     2c0:	ldr	x0, [x0]
     2c4:	ldr	x19, [sp, #16]
     2c8:	ldp	x29, x30, [sp], #80
     2cc:	ret
	...

0000000000000308 <grub_fdt_install>:
     308:	stp	x29, x30, [sp, #-48]!
     30c:	mov	x29, sp
     310:	mov	w0, #0x21d5                	// #8661
     314:	movk	w0, #0xb1b6, lsl #16
     318:	str	w0, [sp, #16]
     31c:	mov	w0, #0xfffff19c            	// #-3684
     320:	strh	w0, [sp, #20]
     324:	mov	w0, #0x41a5                	// #16805
     328:	strh	w0, [sp, #22]
     32c:	mov	x0, #0xb83                 	// #2947
     330:	movk	x0, #0x15d9, lsl #16
     334:	movk	x0, #0x692c, lsl #32
     338:	movk	x0, #0xe0aa, lsl #48
     33c:	str	x0, [sp, #24]
     340:	adrp	x0, 0 <grub_fdt_load-0x68>
     344:	add	x0, x0, #0x0
     348:	ldr	x0, [x0]
     34c:	ldr	x0, [x0]
     350:	ldr	x0, [x0, #96]
     354:	str	x0, [sp, #40]
     358:	ldr	x0, [sp, #40]
     35c:	ldr	x2, [x0, #192]
     360:	adrp	x0, 0 <grub_fdt_load-0x68>
     364:	add	x0, x0, #0x0
     368:	ldr	x0, [x0]
     36c:	ldr	x1, [x0]
     370:	add	x0, sp, #0x10
     374:	blr	x2
     378:	str	x0, [sp, #32]
     37c:	ldr	x0, [sp, #32]
     380:	cmp	x0, #0x0
     384:	b.eq	3a0 <grub_fdt_install+0x98>  // b.none
     388:	adrp	x0, 0 <grub_fdt_load-0x68>
     38c:	add	x0, x0, #0x0
     390:	ldr	x1, [x0]
     394:	mov	w0, #0x1d                  	// #29
     398:	bl	0 <grub_error>
     39c:	b	3e4 <grub_fdt_install+0xdc>
     3a0:	adrp	x0, 0 <grub_fdt_load-0x68>
     3a4:	add	x0, x0, #0x0
     3a8:	ldr	x0, [x0]
     3ac:	ldr	x0, [x0]
     3b0:	mov	x4, x0
     3b4:	adrp	x0, 0 <grub_fdt_load-0x68>
     3b8:	add	x0, x0, #0x0
     3bc:	ldr	x3, [x0]
     3c0:	adrp	x0, 0 <grub_fdt_load-0x68>
     3c4:	add	x0, x0, #0x0
     3c8:	ldr	x2, [x0]
     3cc:	mov	w1, #0x5d                  	// #93
     3d0:	adrp	x0, 0 <grub_fdt_load-0x68>
     3d4:	add	x0, x0, #0x0
     3d8:	ldr	x0, [x0]
     3dc:	bl	0 <grub_real_dprintf>
     3e0:	mov	w0, #0x0                   	// #0
     3e4:	ldp	x29, x30, [sp], #48
     3e8:	ret
     3ec:	nop
	...

0000000000000420 <grub_fdt_unload>:
     420:	stp	x29, x30, [sp, #-32]!
     424:	mov	x29, sp
     428:	str	x19, [sp, #16]
     42c:	adrp	x0, 0 <grub_fdt_load-0x68>
     430:	add	x0, x0, #0x0
     434:	ldr	x0, [x0]
     438:	ldr	x0, [x0]
     43c:	cmp	x0, #0x0
     440:	b.eq	49c <grub_fdt_unload+0x7c>  // b.none
     444:	adrp	x0, 0 <grub_fdt_load-0x68>
     448:	add	x0, x0, #0x0
     44c:	ldr	x0, [x0]
     450:	ldr	x0, [x0]
     454:	mov	x19, x0
     458:	adrp	x0, 0 <grub_fdt_load-0x68>
     45c:	add	x0, x0, #0x0
     460:	ldr	x0, [x0]
     464:	ldr	x0, [x0]
     468:	ldr	w0, [x0, #4]
     46c:	bl	0 <grub_fdt_load-0x68>
     470:	add	w0, w0, #0xfff
     474:	lsr	w0, w0, #12
     478:	mov	w0, w0
     47c:	mov	x1, x0
     480:	mov	x0, x19
     484:	bl	0 <grub_efi_free_pages>
     488:	adrp	x0, 0 <grub_fdt_load-0x68>
     48c:	add	x0, x0, #0x0
     490:	ldr	x0, [x0]
     494:	str	xzr, [x0]
     498:	b	4a0 <grub_fdt_unload+0x80>
     49c:	nop
     4a0:	ldr	x19, [sp, #16]
     4a4:	ldp	x29, x30, [sp], #32
     4a8:	ret
     4ac:	nop
	...
     4b8:	stp	x29, x30, [sp, #-80]!
     4bc:	mov	x29, sp
     4c0:	str	x0, [sp, #40]
     4c4:	str	w1, [sp, #36]
     4c8:	str	x2, [sp, #24]
     4cc:	str	xzr, [sp, #72]
     4d0:	adrp	x0, 0 <grub_fdt_load-0x68>
     4d4:	add	x0, x0, #0x0
     4d8:	ldr	x0, [x0]
     4dc:	ldr	x0, [x0]
     4e0:	cmp	x0, #0x0
     4e4:	b.eq	4fc <grub_fdt_unload+0xdc>  // b.none
     4e8:	adrp	x0, 0 <grub_fdt_load-0x68>
     4ec:	add	x0, x0, #0x0
     4f0:	ldr	x0, [x0]
     4f4:	ldr	x0, [x0]
     4f8:	bl	0 <grub_free>
     4fc:	adrp	x0, 0 <grub_fdt_load-0x68>
     500:	add	x0, x0, #0x0
     504:	ldr	x0, [x0]
     508:	str	xzr, [x0]
     50c:	ldr	w0, [sp, #36]
     510:	cmp	w0, #0x0
     514:	b.ne	520 <grub_fdt_unload+0x100>  // b.any
     518:	mov	w0, #0x0                   	// #0
     51c:	b	678 <grub_fdt_unload+0x258>
     520:	ldr	x0, [sp, #24]
     524:	ldr	x0, [x0]
     528:	mov	w1, #0x2a                  	// #42
     52c:	bl	0 <grub_file_open>
     530:	str	x0, [sp, #64]
     534:	ldr	x0, [sp, #64]
     538:	cmp	x0, #0x0
     53c:	b.eq	5f4 <grub_fdt_unload+0x1d4>  // b.none
     540:	ldr	x0, [sp, #64]
     544:	bl	50 <grub_fdt_load-0x18>
     548:	str	w0, [sp, #60]
     54c:	ldrsw	x0, [sp, #60]
     550:	bl	0 <grub_malloc>
     554:	str	x0, [sp, #72]
     558:	ldr	x0, [sp, #72]
     55c:	cmp	x0, #0x0
     560:	b.eq	5fc <grub_fdt_unload+0x1dc>  // b.none
     564:	ldrsw	x0, [sp, #60]
     568:	mov	x2, x0
     56c:	ldr	x1, [sp, #72]
     570:	ldr	x0, [sp, #64]
     574:	bl	0 <grub_file_read>
     578:	mov	x1, x0
     57c:	ldrsw	x0, [sp, #60]
     580:	cmp	x1, x0
     584:	b.ge	5c4 <grub_fdt_unload+0x1a4>  // b.tcont
     588:	adrp	x0, 0 <grub_fdt_load-0x68>
     58c:	add	x0, x0, #0x0
     590:	ldr	x0, [x0]
     594:	ldr	w0, [x0]
     598:	cmp	w0, #0x0
     59c:	b.ne	604 <grub_fdt_unload+0x1e4>  // b.any
     5a0:	ldr	x0, [sp, #24]
     5a4:	ldr	x0, [x0]
     5a8:	mov	x2, x0
     5ac:	adrp	x0, 0 <grub_fdt_load-0x68>
     5b0:	add	x0, x0, #0x0
     5b4:	ldr	x1, [x0]
     5b8:	mov	w0, #0x15                  	// #21
     5bc:	bl	0 <grub_error>
     5c0:	b	604 <grub_fdt_unload+0x1e4>
     5c4:	ldr	w0, [sp, #60]
     5c8:	mov	w1, w0
     5cc:	ldr	x0, [sp, #72]
     5d0:	bl	12c4 <grub_fdt_check_header>
     5d4:	cmp	w0, #0x0
     5d8:	b.eq	60c <grub_fdt_unload+0x1ec>  // b.none
     5dc:	adrp	x0, 0 <grub_fdt_load-0x68>
     5e0:	add	x0, x0, #0x0
     5e4:	ldr	x1, [x0]
     5e8:	mov	w0, #0x15                  	// #21
     5ec:	bl	0 <grub_error>
     5f0:	b	610 <grub_fdt_unload+0x1f0>
     5f4:	nop
     5f8:	b	610 <grub_fdt_unload+0x1f0>
     5fc:	nop
     600:	b	610 <grub_fdt_unload+0x1f0>
     604:	nop
     608:	b	610 <grub_fdt_unload+0x1f0>
     60c:	nop
     610:	ldr	x0, [sp, #64]
     614:	cmp	x0, #0x0
     618:	b.eq	624 <grub_fdt_unload+0x204>  // b.none
     61c:	ldr	x0, [sp, #64]
     620:	bl	0 <grub_file_close>
     624:	ldr	x0, [sp, #72]
     628:	cmp	x0, #0x0
     62c:	b.eq	668 <grub_fdt_unload+0x248>  // b.none
     630:	adrp	x0, 0 <grub_fdt_load-0x68>
     634:	add	x0, x0, #0x0
     638:	ldr	x0, [x0]
     63c:	ldr	w0, [x0]
     640:	cmp	w0, #0x0
     644:	b.ne	660 <grub_fdt_unload+0x240>  // b.any
     648:	adrp	x0, 0 <grub_fdt_load-0x68>
     64c:	add	x0, x0, #0x0
     650:	ldr	x0, [x0]
     654:	ldr	x1, [sp, #72]
     658:	str	x1, [x0]
     65c:	b	668 <grub_fdt_unload+0x248>
     660:	ldr	x0, [sp, #72]
     664:	bl	0 <grub_free>
     668:	adrp	x0, 0 <grub_fdt_load-0x68>
     66c:	add	x0, x0, #0x0
     670:	ldr	x0, [x0]
     674:	ldr	w0, [x0]
     678:	ldp	x29, x30, [sp], #80
     67c:	ret
	...

00000000000006a0 <grub_mod_init>:
     6a0:	stp	x29, x30, [sp, #-32]!
     6a4:	mov	x29, sp
     6a8:	str	x0, [sp, #24]
     6ac:	adrp	x0, 0 <grub_fdt_load-0x68>
     6b0:	add	x0, x0, #0x0
     6b4:	ldr	x3, [x0]
     6b8:	mov	x2, #0x0                   	// #0
     6bc:	adrp	x0, 0 <grub_fdt_load-0x68>
     6c0:	add	x0, x0, #0x0
     6c4:	ldr	x1, [x0]
     6c8:	adrp	x0, 0 <grub_fdt_load-0x68>
     6cc:	add	x0, x0, #0x0
     6d0:	ldr	x0, [x0]
     6d4:	bl	18 <grub_fdt_load-0x50>
     6d8:	mov	x1, x0
     6dc:	adrp	x0, 0 <grub_fdt_load-0x68>
     6e0:	add	x0, x0, #0x0
     6e4:	ldr	x0, [x0]
     6e8:	str	x1, [x0]
     6ec:	nop
     6f0:	ldp	x29, x30, [sp], #32
     6f4:	ret
	...

0000000000000718 <grub_mod_fini>:
     718:	stp	x29, x30, [sp, #-16]!
     71c:	mov	x29, sp
     720:	adrp	x0, 0 <grub_fdt_load-0x68>
     724:	add	x0, x0, #0x0
     728:	ldr	x0, [x0]
     72c:	ldr	x0, [x0]
     730:	bl	0 <grub_unregister_command>
     734:	nop
     738:	ldp	x29, x30, [sp], #16
     73c:	ret
	...
     748:	sub	sp, sp, #0x10
     74c:	str	w0, [sp, #12]
     750:	ldr	w0, [sp, #12]
     754:	rev	w0, w0
     758:	add	sp, sp, #0x10
     75c:	ret
     760:	stp	x29, x30, [sp, #-48]!
     764:	mov	x29, sp
     768:	str	x0, [sp, #40]
     76c:	str	x1, [sp, #32]
     770:	str	x2, [sp, #24]
     774:	ldr	x2, [sp, #24]
     778:	ldr	x1, [sp, #32]
     77c:	ldr	x0, [sp, #40]
     780:	bl	0 <grub_memmove>
     784:	ldp	x29, x30, [sp], #48
     788:	ret
     78c:	stp	x29, x30, [sp, #-64]!
     790:	mov	x29, sp
     794:	str	x19, [sp, #16]
     798:	str	x0, [sp, #40]
     79c:	str	x1, [sp, #32]
     7a0:	ldr	x0, [sp, #40]
     7a4:	ldr	w0, [x0, #8]
     7a8:	bl	748 <grub_mod_fini+0x30>
     7ac:	mov	w1, w0
     7b0:	ldr	x0, [sp, #40]
     7b4:	add	x19, x1, x0
     7b8:	ldr	x0, [sp, #40]
     7bc:	ldr	w0, [x0, #36]
     7c0:	bl	748 <grub_mod_fini+0x30>
     7c4:	mov	w0, w0
     7c8:	add	x0, x19, x0
     7cc:	str	x0, [sp, #48]
     7d0:	ldr	x1, [sp, #32]
     7d4:	ldr	x0, [sp, #48]
     7d8:	cmp	x1, x0
     7dc:	b.cc	800 <grub_mod_fini+0xe8>  // b.lo, b.ul, b.last
     7e0:	mov	x0, #0x0                   	// #0
     7e4:	b	928 <grub_mod_fini+0x210>
     7e8:	ldr	x1, [sp, #32]
     7ec:	ldr	x0, [sp, #48]
     7f0:	cmp	x1, x0
     7f4:	b.cc	800 <grub_mod_fini+0xe8>  // b.lo, b.ul, b.last
     7f8:	mov	x0, #0x0                   	// #0
     7fc:	b	928 <grub_mod_fini+0x210>
     800:	ldr	x0, [sp, #32]
     804:	add	x1, x0, #0x1
     808:	str	x1, [sp, #32]
     80c:	ldrb	w0, [x0]
     810:	cmp	w0, #0x0
     814:	b.ne	7e8 <grub_mod_fini+0xd0>  // b.any
     818:	ldr	x0, [sp, #32]
     81c:	add	x0, x0, #0x3
     820:	and	x0, x0, #0xfffffffffffffffc
     824:	str	x0, [sp, #56]
     828:	b	914 <grub_mod_fini+0x1fc>
     82c:	ldr	x0, [sp, #56]
     830:	ldr	w0, [x0]
     834:	bl	748 <grub_mod_fini+0x30>
     838:	cmp	w0, #0x4
     83c:	b.eq	8fc <grub_mod_fini+0x1e4>  // b.none
     840:	cmp	w0, #0x4
     844:	b.hi	90c <grub_mod_fini+0x1f4>  // b.pmore
     848:	cmp	w0, #0x3
     84c:	b.eq	8c4 <grub_mod_fini+0x1ac>  // b.none
     850:	cmp	w0, #0x3
     854:	b.hi	90c <grub_mod_fini+0x1f4>  // b.pmore
     858:	cmp	w0, #0x1
     85c:	b.eq	86c <grub_mod_fini+0x154>  // b.none
     860:	cmp	w0, #0x2
     864:	b.eq	898 <grub_mod_fini+0x180>  // b.none
     868:	b	90c <grub_mod_fini+0x1f4>
     86c:	ldr	x0, [sp, #56]
     870:	add	x0, x0, #0x4
     874:	mov	x1, x0
     878:	ldr	x0, [sp, #40]
     87c:	bl	78c <grub_mod_fini+0x74>
     880:	str	x0, [sp, #56]
     884:	ldr	x0, [sp, #56]
     888:	cmp	x0, #0x0
     88c:	b.ne	914 <grub_mod_fini+0x1fc>  // b.any
     890:	mov	x0, #0x0                   	// #0
     894:	b	928 <grub_mod_fini+0x210>
     898:	ldr	x0, [sp, #56]
     89c:	add	x0, x0, #0x4
     8a0:	str	x0, [sp, #56]
     8a4:	ldr	x1, [sp, #56]
     8a8:	ldr	x0, [sp, #48]
     8ac:	cmp	x1, x0
     8b0:	b.cc	8bc <grub_mod_fini+0x1a4>  // b.lo, b.ul, b.last
     8b4:	mov	x0, #0x0                   	// #0
     8b8:	b	928 <grub_mod_fini+0x210>
     8bc:	ldr	x0, [sp, #56]
     8c0:	b	928 <grub_mod_fini+0x210>
     8c4:	ldr	x0, [sp, #56]
     8c8:	add	x0, x0, #0x4
     8cc:	ldr	w0, [x0]
     8d0:	bl	748 <grub_mod_fini+0x30>
     8d4:	add	w0, w0, #0x3
     8d8:	mov	w0, w0
     8dc:	and	x0, x0, #0xfffffffc
     8e0:	add	x0, x0, #0xc
     8e4:	lsr	x0, x0, #2
     8e8:	lsl	x0, x0, #2
     8ec:	ldr	x1, [sp, #56]
     8f0:	add	x0, x1, x0
     8f4:	str	x0, [sp, #56]
     8f8:	b	914 <grub_mod_fini+0x1fc>
     8fc:	ldr	x0, [sp, #56]
     900:	add	x0, x0, #0x4
     904:	str	x0, [sp, #56]
     908:	b	914 <grub_mod_fini+0x1fc>
     90c:	mov	x0, #0x0                   	// #0
     910:	b	928 <grub_mod_fini+0x210>
     914:	ldr	x1, [sp, #56]
     918:	ldr	x0, [sp, #48]
     91c:	cmp	x1, x0
     920:	b.cc	82c <grub_mod_fini+0x114>  // b.lo, b.ul, b.last
     924:	mov	x0, #0x0                   	// #0
     928:	ldr	x19, [sp, #16]
     92c:	ldp	x29, x30, [sp], #64
     930:	ret
     934:	stp	x29, x30, [sp, #-48]!
     938:	mov	x29, sp
     93c:	str	x0, [sp, #24]
     940:	str	wzr, [sp, #44]
     944:	ldr	x0, [sp, #24]
     948:	ldr	w0, [x0, #16]
     94c:	bl	748 <grub_mod_fini+0x30>
     950:	mov	w1, w0
     954:	ldr	x0, [sp, #24]
     958:	add	x0, x1, x0
     95c:	str	x0, [sp, #32]
     960:	ldr	w0, [sp, #44]
     964:	add	w0, w0, #0x10
     968:	str	w0, [sp, #44]
     96c:	ldr	x0, [sp, #32]
     970:	ldr	x0, [x0]
     974:	cmp	x0, #0x0
     978:	b.ne	998 <grub_mod_fini+0x280>  // b.any
     97c:	ldr	x0, [sp, #32]
     980:	add	x0, x0, #0x8
     984:	ldr	x0, [x0]
     988:	cmp	x0, #0x0
     98c:	b.ne	998 <grub_mod_fini+0x280>  // b.any
     990:	ldr	w0, [sp, #44]
     994:	b	9d0 <grub_mod_fini+0x2b8>
     998:	ldr	x0, [sp, #32]
     99c:	add	x0, x0, #0x10
     9a0:	str	x0, [sp, #32]
     9a4:	ldr	x0, [sp, #24]
     9a8:	ldr	w0, [x0, #4]
     9ac:	bl	748 <grub_mod_fini+0x30>
     9b0:	mov	w1, w0
     9b4:	ldr	x0, [sp, #24]
     9b8:	add	x0, x1, x0
     9bc:	sub	x1, x0, #0x10
     9c0:	ldr	x0, [sp, #32]
     9c4:	cmp	x1, x0
     9c8:	b.cs	960 <grub_mod_fini+0x248>  // b.hs, b.nlast
     9cc:	mov	w0, #0xffffffff            	// #-1
     9d0:	ldp	x29, x30, [sp], #48
     9d4:	ret
     9d8:	stp	x29, x30, [sp, #-64]!
     9dc:	mov	x29, sp
     9e0:	str	x19, [sp, #16]
     9e4:	str	x0, [sp, #40]
     9e8:	ldr	x0, [sp, #40]
     9ec:	bl	934 <grub_mod_fini+0x21c>
     9f0:	str	w0, [sp, #60]
     9f4:	ldr	w0, [sp, #60]
     9f8:	cmp	w0, #0x0
     9fc:	b.ge	a08 <grub_mod_fini+0x2f0>  // b.tcont
     a00:	mov	w0, #0x0                   	// #0
     a04:	b	a44 <grub_mod_fini+0x32c>
     a08:	ldr	x0, [sp, #40]
     a0c:	ldr	w0, [x0, #4]
     a10:	bl	748 <grub_mod_fini+0x30>
     a14:	mov	w1, w0
     a18:	ldr	w0, [sp, #60]
     a1c:	sub	w19, w1, w0
     a20:	ldr	x0, [sp, #40]
     a24:	ldr	w0, [x0, #32]
     a28:	bl	748 <grub_mod_fini+0x30>
     a2c:	sub	w19, w19, w0
     a30:	ldr	x0, [sp, #40]
     a34:	ldr	w0, [x0, #36]
     a38:	bl	748 <grub_mod_fini+0x30>
     a3c:	sub	w0, w19, w0
     a40:	sub	w0, w0, #0x28
     a44:	ldr	x19, [sp, #16]
     a48:	ldp	x29, x30, [sp], #64
     a4c:	ret
     a50:	stp	x29, x30, [sp, #-96]!
     a54:	mov	x29, sp
     a58:	str	x19, [sp, #16]
     a5c:	str	x0, [sp, #56]
     a60:	str	w1, [sp, #52]
     a64:	str	x2, [sp, #40]
     a68:	ldr	x0, [sp, #56]
     a6c:	ldr	w0, [x0, #8]
     a70:	bl	748 <grub_mod_fini+0x30>
     a74:	mov	w1, w0
     a78:	ldr	x0, [sp, #56]
     a7c:	add	x1, x1, x0
     a80:	ldrsw	x0, [sp, #52]
     a84:	add	x0, x1, x0
     a88:	str	x0, [sp, #88]
     a8c:	ldr	x0, [sp, #56]
     a90:	ldr	w0, [x0, #8]
     a94:	bl	748 <grub_mod_fini+0x30>
     a98:	mov	w1, w0
     a9c:	ldr	x0, [sp, #56]
     aa0:	add	x19, x1, x0
     aa4:	ldr	x0, [sp, #56]
     aa8:	ldr	w0, [x0, #36]
     aac:	bl	748 <grub_mod_fini+0x30>
     ab0:	mov	w0, w0
     ab4:	add	x0, x19, x0
     ab8:	str	x0, [sp, #72]
     abc:	ldr	x0, [sp, #40]
     ac0:	bl	0 <grub_strlen>
     ac4:	add	w0, w0, #0x4
     ac8:	and	w0, w0, #0xfffffffc
     acc:	add	w0, w0, #0x8
     ad0:	str	w0, [sp, #68]
     ad4:	ldr	x0, [sp, #56]
     ad8:	ldr	w0, [x0, #36]
     adc:	bl	748 <grub_mod_fini+0x30>
     ae0:	str	w0, [sp, #64]
     ae4:	ldr	x0, [sp, #88]
     ae8:	add	x0, x0, #0x4
     aec:	str	x0, [sp, #80]
     af0:	b	b0c <grub_mod_fini+0x3f4>
     af4:	ldr	x0, [sp, #80]
     af8:	add	x1, x0, #0x1
     afc:	str	x1, [sp, #80]
     b00:	ldrb	w0, [x0]
     b04:	cmp	w0, #0x0
     b08:	b.eq	b20 <grub_mod_fini+0x408>  // b.none
     b0c:	ldr	x1, [sp, #80]
     b10:	ldr	x0, [sp, #72]
     b14:	cmp	x1, x0
     b18:	b.cc	af4 <grub_mod_fini+0x3dc>  // b.lo, b.ul, b.last
     b1c:	b	b24 <grub_mod_fini+0x40c>
     b20:	nop
     b24:	ldr	x0, [sp, #80]
     b28:	add	x0, x0, #0x3
     b2c:	and	x0, x0, #0xfffffffffffffffc
     b30:	str	x0, [sp, #88]
     b34:	ldr	x1, [sp, #88]
     b38:	ldr	x0, [sp, #72]
     b3c:	cmp	x1, x0
     b40:	b.cc	b4c <grub_mod_fini+0x434>  // b.lo, b.ul, b.last
     b44:	mov	w0, #0xffffffff            	// #-1
     b48:	b	cac <grub_mod_fini+0x594>
     b4c:	ldr	x0, [sp, #88]
     b50:	ldr	w0, [x0]
     b54:	bl	748 <grub_mod_fini+0x30>
     b58:	cmp	w0, #0x4
     b5c:	b.eq	bbc <grub_mod_fini+0x4a4>  // b.none
     b60:	cmp	w0, #0x4
     b64:	b.hi	bcc <grub_mod_fini+0x4b4>  // b.pmore
     b68:	cmp	w0, #0x2
     b6c:	b.hi	b7c <grub_mod_fini+0x464>  // b.pmore
     b70:	cmp	w0, #0x0
     b74:	b.ne	bd8 <grub_mod_fini+0x4c0>  // b.any
     b78:	b	bcc <grub_mod_fini+0x4b4>
     b7c:	cmp	w0, #0x3
     b80:	b.ne	bcc <grub_mod_fini+0x4b4>  // b.any
     b84:	ldr	x0, [sp, #88]
     b88:	add	x0, x0, #0x4
     b8c:	ldr	w0, [x0]
     b90:	bl	748 <grub_mod_fini+0x30>
     b94:	add	w0, w0, #0x3
     b98:	mov	w0, w0
     b9c:	and	x0, x0, #0xfffffffc
     ba0:	add	x0, x0, #0xc
     ba4:	lsr	x0, x0, #2
     ba8:	lsl	x0, x0, #2
     bac:	ldr	x1, [sp, #88]
     bb0:	add	x0, x1, x0
     bb4:	str	x0, [sp, #88]
     bb8:	b	bd4 <grub_mod_fini+0x4bc>
     bbc:	ldr	x0, [sp, #88]
     bc0:	add	x0, x0, #0x4
     bc4:	str	x0, [sp, #88]
     bc8:	b	bd4 <grub_mod_fini+0x4bc>
     bcc:	mov	w0, #0xffffffff            	// #-1
     bd0:	b	cac <grub_mod_fini+0x594>
     bd4:	b	b34 <grub_mod_fini+0x41c>
     bd8:	nop
     bdc:	ldr	w0, [sp, #68]
     be0:	lsr	w0, w0, #2
     be4:	mov	w0, w0
     be8:	lsl	x0, x0, #2
     bec:	ldr	x1, [sp, #88]
     bf0:	add	x3, x1, x0
     bf4:	ldr	x1, [sp, #72]
     bf8:	ldr	x0, [sp, #88]
     bfc:	sub	x0, x1, x0
     c00:	mov	x2, x0
     c04:	ldr	x1, [sp, #88]
     c08:	mov	x0, x3
     c0c:	bl	0 <grub_memmove>
     c10:	ldr	x0, [sp, #88]
     c14:	mov	w1, #0x1000000             	// #16777216
     c18:	str	w1, [x0]
     c1c:	ldr	w0, [sp, #68]
     c20:	lsr	w0, w0, #2
     c24:	mov	w0, w0
     c28:	lsl	x0, x0, #2
     c2c:	sub	x0, x0, #0x8
     c30:	ldr	x1, [sp, #88]
     c34:	add	x0, x1, x0
     c38:	str	wzr, [x0]
     c3c:	ldr	x0, [sp, #88]
     c40:	add	x0, x0, #0x4
     c44:	ldr	x1, [sp, #40]
     c48:	bl	0 <grub_strcpy>
     c4c:	ldr	w0, [sp, #68]
     c50:	lsr	w0, w0, #2
     c54:	mov	w0, w0
     c58:	lsl	x0, x0, #2
     c5c:	sub	x0, x0, #0x4
     c60:	ldr	x1, [sp, #88]
     c64:	add	x0, x1, x0
     c68:	mov	w1, #0x2000000             	// #33554432
     c6c:	str	w1, [x0]
     c70:	ldr	w1, [sp, #64]
     c74:	ldr	w0, [sp, #68]
     c78:	add	w0, w1, w0
     c7c:	bl	748 <grub_mod_fini+0x30>
     c80:	mov	w1, w0
     c84:	ldr	x0, [sp, #56]
     c88:	str	w1, [x0, #36]
     c8c:	ldr	x1, [sp, #88]
     c90:	ldr	x0, [sp, #56]
     c94:	sub	x0, x1, x0
     c98:	mov	w19, w0
     c9c:	ldr	x0, [sp, #56]
     ca0:	ldr	w0, [x0, #8]
     ca4:	bl	748 <grub_mod_fini+0x30>
     ca8:	sub	w0, w19, w0
     cac:	ldr	x19, [sp, #16]
     cb0:	ldp	x29, x30, [sp], #96
     cb4:	ret
     cb8:	stp	x29, x30, [sp, #-80]!
     cbc:	mov	x29, sp
     cc0:	stp	x19, x20, [sp, #16]
     cc4:	str	x0, [sp, #40]
     cc8:	str	w1, [sp, #36]
     ccc:	mov	w0, #0x28                  	// #40
     cd0:	str	w0, [sp, #76]
     cd4:	ldr	x0, [sp, #40]
     cd8:	bl	934 <grub_mod_fini+0x21c>
     cdc:	mov	w1, w0
     ce0:	ldr	w0, [sp, #76]
     ce4:	add	w0, w0, w1
     ce8:	str	w0, [sp, #72]
     cec:	ldr	x0, [sp, #40]
     cf0:	ldr	w0, [x0, #36]
     cf4:	bl	748 <grub_mod_fini+0x30>
     cf8:	mov	w1, w0
     cfc:	ldr	w0, [sp, #72]
     d00:	add	w0, w1, w0
     d04:	ldr	w1, [sp, #36]
     d08:	add	w0, w1, w0
     d0c:	str	w0, [sp, #68]
     d10:	ldr	x0, [sp, #40]
     d14:	str	x0, [sp, #56]
     d18:	ldr	x0, [sp, #40]
     d1c:	ldr	w0, [x0, #16]
     d20:	bl	748 <grub_mod_fini+0x30>
     d24:	mov	w1, w0
     d28:	ldr	w0, [sp, #76]
     d2c:	cmp	w0, w1
     d30:	b.ne	dcc <grub_mod_fini+0x6b4>  // b.any
     d34:	ldr	x0, [sp, #40]
     d38:	ldr	w0, [x0, #8]
     d3c:	bl	748 <grub_mod_fini+0x30>
     d40:	mov	w1, w0
     d44:	ldr	w0, [sp, #72]
     d48:	cmp	w0, w1
     d4c:	b.ne	dcc <grub_mod_fini+0x6b4>  // b.any
     d50:	ldr	x0, [sp, #40]
     d54:	ldr	w0, [x0, #12]
     d58:	bl	748 <grub_mod_fini+0x30>
     d5c:	mov	w1, w0
     d60:	ldr	w0, [sp, #68]
     d64:	cmp	w0, w1
     d68:	b.eq	dc4 <grub_mod_fini+0x6ac>  // b.none
     d6c:	ldr	w0, [sp, #68]
     d70:	ldr	x1, [sp, #56]
     d74:	add	x19, x1, x0
     d78:	ldr	x0, [sp, #40]
     d7c:	ldr	w0, [x0, #12]
     d80:	bl	748 <grub_mod_fini+0x30>
     d84:	mov	w0, w0
     d88:	ldr	x1, [sp, #56]
     d8c:	add	x20, x1, x0
     d90:	ldr	x0, [sp, #40]
     d94:	ldr	w0, [x0, #32]
     d98:	bl	748 <grub_mod_fini+0x30>
     d9c:	mov	w0, w0
     da0:	mov	x2, x0
     da4:	mov	x1, x20
     da8:	mov	x0, x19
     dac:	bl	0 <grub_memmove>
     db0:	ldr	w0, [sp, #68]
     db4:	bl	748 <grub_mod_fini+0x30>
     db8:	mov	w1, w0
     dbc:	ldr	x0, [sp, #40]
     dc0:	str	w1, [x0, #12]
     dc4:	mov	w0, #0x0                   	// #0
     dc8:	b	f4c <grub_mod_fini+0x834>
     dcc:	ldr	x0, [sp, #40]
     dd0:	ldr	w0, [x0, #4]
     dd4:	bl	748 <grub_mod_fini+0x30>
     dd8:	mov	w0, w0
     ddc:	bl	0 <grub_malloc>
     de0:	str	x0, [sp, #48]
     de4:	ldr	x0, [sp, #48]
     de8:	cmp	x0, #0x0
     dec:	b.ne	df8 <grub_mod_fini+0x6e0>  // b.any
     df0:	mov	w0, #0xffffffff            	// #-1
     df4:	b	f4c <grub_mod_fini+0x834>
     df8:	ldr	w0, [sp, #76]
     dfc:	ldr	x1, [sp, #48]
     e00:	add	x19, x1, x0
     e04:	ldr	x0, [sp, #40]
     e08:	ldr	w0, [x0, #16]
     e0c:	bl	748 <grub_mod_fini+0x30>
     e10:	mov	w0, w0
     e14:	ldr	x1, [sp, #56]
     e18:	add	x20, x1, x0
     e1c:	ldr	x0, [sp, #40]
     e20:	bl	934 <grub_mod_fini+0x21c>
     e24:	sxtw	x0, w0
     e28:	mov	x2, x0
     e2c:	mov	x1, x20
     e30:	mov	x0, x19
     e34:	bl	760 <grub_mod_fini+0x48>
     e38:	ldr	w0, [sp, #76]
     e3c:	bl	748 <grub_mod_fini+0x30>
     e40:	mov	w1, w0
     e44:	ldr	x0, [sp, #40]
     e48:	str	w1, [x0, #16]
     e4c:	ldr	w0, [sp, #72]
     e50:	ldr	x1, [sp, #48]
     e54:	add	x19, x1, x0
     e58:	ldr	x0, [sp, #40]
     e5c:	ldr	w0, [x0, #8]
     e60:	bl	748 <grub_mod_fini+0x30>
     e64:	mov	w0, w0
     e68:	ldr	x1, [sp, #56]
     e6c:	add	x20, x1, x0
     e70:	ldr	x0, [sp, #40]
     e74:	ldr	w0, [x0, #36]
     e78:	bl	748 <grub_mod_fini+0x30>
     e7c:	mov	w0, w0
     e80:	mov	x2, x0
     e84:	mov	x1, x20
     e88:	mov	x0, x19
     e8c:	bl	760 <grub_mod_fini+0x48>
     e90:	ldr	w0, [sp, #72]
     e94:	bl	748 <grub_mod_fini+0x30>
     e98:	mov	w1, w0
     e9c:	ldr	x0, [sp, #40]
     ea0:	str	w1, [x0, #8]
     ea4:	ldr	w0, [sp, #68]
     ea8:	ldr	x1, [sp, #48]
     eac:	add	x19, x1, x0
     eb0:	ldr	x0, [sp, #40]
     eb4:	ldr	w0, [x0, #12]
     eb8:	bl	748 <grub_mod_fini+0x30>
     ebc:	mov	w0, w0
     ec0:	ldr	x1, [sp, #56]
     ec4:	add	x20, x1, x0
     ec8:	ldr	x0, [sp, #40]
     ecc:	ldr	w0, [x0, #32]
     ed0:	bl	748 <grub_mod_fini+0x30>
     ed4:	mov	w0, w0
     ed8:	mov	x2, x0
     edc:	mov	x1, x20
     ee0:	mov	x0, x19
     ee4:	bl	760 <grub_mod_fini+0x48>
     ee8:	ldr	w0, [sp, #68]
     eec:	bl	748 <grub_mod_fini+0x30>
     ef0:	mov	w1, w0
     ef4:	ldr	x0, [sp, #40]
     ef8:	str	w1, [x0, #12]
     efc:	ldr	w0, [sp, #76]
     f00:	ldr	x1, [sp, #56]
     f04:	add	x19, x1, x0
     f08:	ldr	w0, [sp, #76]
     f0c:	ldr	x1, [sp, #48]
     f10:	add	x20, x1, x0
     f14:	ldr	x0, [sp, #40]
     f18:	ldr	w0, [x0, #4]
     f1c:	bl	748 <grub_mod_fini+0x30>
     f20:	mov	w1, w0
     f24:	ldr	w0, [sp, #76]
     f28:	sub	w0, w1, w0
     f2c:	mov	w0, w0
     f30:	mov	x2, x0
     f34:	mov	x1, x20
     f38:	mov	x0, x19
     f3c:	bl	760 <grub_mod_fini+0x48>
     f40:	ldr	x0, [sp, #48]
     f44:	bl	0 <grub_free>
     f48:	mov	w0, #0x0                   	// #0
     f4c:	ldp	x19, x20, [sp, #16]
     f50:	ldp	x29, x30, [sp], #80
     f54:	ret
     f58:	stp	x29, x30, [sp, #-96]!
     f5c:	mov	x29, sp
     f60:	str	x19, [sp, #16]
     f64:	str	x0, [sp, #56]
     f68:	str	w1, [sp, #52]
     f6c:	str	x2, [sp, #40]
     f70:	ldr	x0, [sp, #56]
     f74:	ldr	w0, [x0, #8]
     f78:	bl	748 <grub_mod_fini+0x30>
     f7c:	mov	w1, w0
     f80:	ldr	x0, [sp, #56]
     f84:	add	x1, x1, x0
     f88:	ldr	w0, [sp, #52]
     f8c:	add	x0, x1, x0
     f90:	str	x0, [sp, #88]
     f94:	ldr	x0, [sp, #56]
     f98:	ldr	w0, [x0, #8]
     f9c:	bl	748 <grub_mod_fini+0x30>
     fa0:	mov	w1, w0
     fa4:	ldr	x0, [sp, #56]
     fa8:	add	x19, x1, x0
     fac:	ldr	x0, [sp, #56]
     fb0:	ldr	w0, [x0, #36]
     fb4:	bl	748 <grub_mod_fini+0x30>
     fb8:	mov	w0, w0
     fbc:	add	x0, x19, x0
     fc0:	str	x0, [sp, #72]
     fc4:	ldr	x0, [sp, #88]
     fc8:	add	x0, x0, #0x4
     fcc:	str	x0, [sp, #80]
     fd0:	b	fec <grub_mod_fini+0x8d4>
     fd4:	ldr	x0, [sp, #80]
     fd8:	add	x1, x0, #0x1
     fdc:	str	x1, [sp, #80]
     fe0:	ldrb	w0, [x0]
     fe4:	cmp	w0, #0x0
     fe8:	b.eq	1000 <grub_mod_fini+0x8e8>  // b.none
     fec:	ldr	x1, [sp, #80]
     ff0:	ldr	x0, [sp, #72]
     ff4:	cmp	x1, x0
     ff8:	b.cc	fd4 <grub_mod_fini+0x8bc>  // b.lo, b.ul, b.last
     ffc:	b	1004 <grub_mod_fini+0x8ec>
    1000:	nop
    1004:	ldr	x0, [sp, #80]
    1008:	add	x0, x0, #0x3
    100c:	and	x0, x0, #0xfffffffffffffffc
    1010:	str	x0, [sp, #88]
    1014:	b	1144 <grub_mod_fini+0xa2c>
    1018:	ldr	x0, [sp, #88]
    101c:	ldr	w0, [x0]
    1020:	bl	748 <grub_mod_fini+0x30>
    1024:	cmp	w0, #0x3
    1028:	b.ne	1118 <grub_mod_fini+0xa00>  // b.any
    102c:	ldr	x0, [sp, #88]
    1030:	add	x0, x0, #0x8
    1034:	ldr	w0, [x0]
    1038:	bl	748 <grub_mod_fini+0x30>
    103c:	str	w0, [sp, #68]
    1040:	ldr	w19, [sp, #68]
    1044:	ldr	x0, [sp, #40]
    1048:	bl	0 <grub_strlen>
    104c:	add	x19, x19, x0
    1050:	ldr	x0, [sp, #56]
    1054:	ldr	w0, [x0, #32]
    1058:	bl	748 <grub_mod_fini+0x30>
    105c:	mov	w0, w0
    1060:	cmp	x19, x0
    1064:	b.cs	10e0 <grub_mod_fini+0x9c8>  // b.hs, b.nlast
    1068:	ldr	x0, [sp, #56]
    106c:	ldr	w0, [x0, #12]
    1070:	bl	748 <grub_mod_fini+0x30>
    1074:	mov	w1, w0
    1078:	ldr	w0, [sp, #68]
    107c:	add	x0, x1, x0
    1080:	ldr	x1, [sp, #56]
    1084:	add	x0, x1, x0
    1088:	mov	x1, x0
    108c:	ldr	x0, [sp, #40]
    1090:	bl	0 <grub_strcmp>
    1094:	cmp	w0, #0x0
    1098:	b.ne	10e0 <grub_mod_fini+0x9c8>  // b.any
    109c:	ldr	x0, [sp, #88]
    10a0:	add	x0, x0, #0x4
    10a4:	ldr	w0, [x0]
    10a8:	bl	748 <grub_mod_fini+0x30>
    10ac:	add	w0, w0, #0x3
    10b0:	mov	w0, w0
    10b4:	and	x0, x0, #0xfffffffc
    10b8:	add	x0, x0, #0xc
    10bc:	ldr	x1, [sp, #88]
    10c0:	add	x0, x1, x0
    10c4:	ldr	x1, [sp, #72]
    10c8:	cmp	x1, x0
    10cc:	b.hi	10d8 <grub_mod_fini+0x9c0>  // b.pmore
    10d0:	mov	x0, #0x0                   	// #0
    10d4:	b	115c <grub_mod_fini+0xa44>
    10d8:	ldr	x0, [sp, #88]
    10dc:	b	115c <grub_mod_fini+0xa44>
    10e0:	ldr	x0, [sp, #88]
    10e4:	add	x0, x0, #0x4
    10e8:	ldr	w0, [x0]
    10ec:	bl	748 <grub_mod_fini+0x30>
    10f0:	add	w0, w0, #0x3
    10f4:	mov	w0, w0
    10f8:	and	x0, x0, #0xfffffffc
    10fc:	add	x0, x0, #0xc
    1100:	lsr	x0, x0, #2
    1104:	lsl	x0, x0, #2
    1108:	ldr	x1, [sp, #88]
    110c:	add	x0, x1, x0
    1110:	str	x0, [sp, #88]
    1114:	b	1144 <grub_mod_fini+0xa2c>
    1118:	ldr	x0, [sp, #88]
    111c:	ldr	w0, [x0]
    1120:	bl	748 <grub_mod_fini+0x30>
    1124:	cmp	w0, #0x4
    1128:	b.ne	113c <grub_mod_fini+0xa24>  // b.any
    112c:	ldr	x0, [sp, #88]
    1130:	add	x0, x0, #0x4
    1134:	str	x0, [sp, #88]
    1138:	b	1144 <grub_mod_fini+0xa2c>
    113c:	mov	x0, #0x0                   	// #0
    1140:	b	115c <grub_mod_fini+0xa44>
    1144:	ldr	x0, [sp, #72]
    1148:	sub	x0, x0, #0x8
    114c:	ldr	x1, [sp, #88]
    1150:	cmp	x1, x0
    1154:	b.cc	1018 <grub_mod_fini+0x900>  // b.lo, b.ul, b.last
    1158:	mov	x0, #0x0                   	// #0
    115c:	ldr	x19, [sp, #16]
    1160:	ldp	x29, x30, [sp], #96
    1164:	ret

0000000000001168 <grub_fdt_check_header_nosize>:
    1168:	stp	x29, x30, [sp, #-48]!
    116c:	mov	x29, sp
    1170:	str	x19, [sp, #16]
    1174:	str	x0, [sp, #40]
    1178:	ldr	x0, [sp, #40]
    117c:	and	x0, x0, #0x3
    1180:	cmp	x0, #0x0
    1184:	b.ne	12ac <grub_fdt_check_header_nosize+0x144>  // b.any
    1188:	ldr	x0, [sp, #40]
    118c:	ldr	w0, [x0]
    1190:	bl	748 <grub_mod_fini+0x30>
    1194:	mov	w1, w0
    1198:	mov	w0, #0xfeed                	// #65261
    119c:	movk	w0, #0xd00d, lsl #16
    11a0:	cmp	w1, w0
    11a4:	b.ne	12ac <grub_fdt_check_header_nosize+0x144>  // b.any
    11a8:	ldr	x0, [sp, #40]
    11ac:	ldr	w0, [x0, #20]
    11b0:	bl	748 <grub_mod_fini+0x30>
    11b4:	cmp	w0, #0x10
    11b8:	b.ls	12ac <grub_fdt_check_header_nosize+0x144>  // b.plast
    11bc:	ldr	x0, [sp, #40]
    11c0:	ldr	w0, [x0, #24]
    11c4:	bl	748 <grub_mod_fini+0x30>
    11c8:	cmp	w0, #0x11
    11cc:	b.hi	12ac <grub_fdt_check_header_nosize+0x144>  // b.pmore
    11d0:	ldr	x0, [sp, #40]
    11d4:	ldr	w0, [x0, #8]
    11d8:	bl	748 <grub_mod_fini+0x30>
    11dc:	and	w0, w0, #0x3
    11e0:	cmp	w0, #0x0
    11e4:	b.ne	12ac <grub_fdt_check_header_nosize+0x144>  // b.any
    11e8:	ldr	x0, [sp, #40]
    11ec:	ldr	w0, [x0, #36]
    11f0:	bl	748 <grub_mod_fini+0x30>
    11f4:	and	w0, w0, #0x3
    11f8:	cmp	w0, #0x0
    11fc:	b.ne	12ac <grub_fdt_check_header_nosize+0x144>  // b.any
    1200:	ldr	x0, [sp, #40]
    1204:	ldr	w0, [x0, #8]
    1208:	bl	748 <grub_mod_fini+0x30>
    120c:	mov	w19, w0
    1210:	ldr	x0, [sp, #40]
    1214:	ldr	w0, [x0, #36]
    1218:	bl	748 <grub_mod_fini+0x30>
    121c:	add	w19, w19, w0
    1220:	ldr	x0, [sp, #40]
    1224:	ldr	w0, [x0, #4]
    1228:	bl	748 <grub_mod_fini+0x30>
    122c:	cmp	w19, w0
    1230:	b.hi	12ac <grub_fdt_check_header_nosize+0x144>  // b.pmore
    1234:	ldr	x0, [sp, #40]
    1238:	ldr	w0, [x0, #12]
    123c:	bl	748 <grub_mod_fini+0x30>
    1240:	mov	w19, w0
    1244:	ldr	x0, [sp, #40]
    1248:	ldr	w0, [x0, #32]
    124c:	bl	748 <grub_mod_fini+0x30>
    1250:	add	w19, w19, w0
    1254:	ldr	x0, [sp, #40]
    1258:	ldr	w0, [x0, #4]
    125c:	bl	748 <grub_mod_fini+0x30>
    1260:	cmp	w19, w0
    1264:	b.hi	12ac <grub_fdt_check_header_nosize+0x144>  // b.pmore
    1268:	ldr	x0, [sp, #40]
    126c:	ldr	w0, [x0, #16]
    1270:	bl	748 <grub_mod_fini+0x30>
    1274:	and	w0, w0, #0x7
    1278:	cmp	w0, #0x0
    127c:	b.ne	12ac <grub_fdt_check_header_nosize+0x144>  // b.any
    1280:	ldr	x0, [sp, #40]
    1284:	ldr	w0, [x0, #16]
    1288:	bl	748 <grub_mod_fini+0x30>
    128c:	mov	w19, w0
    1290:	ldr	x0, [sp, #40]
    1294:	ldr	w0, [x0, #4]
    1298:	bl	748 <grub_mod_fini+0x30>
    129c:	mov	w0, w0
    12a0:	sub	x0, x0, #0x10
    12a4:	cmp	x19, x0
    12a8:	b.ls	12b4 <grub_fdt_check_header_nosize+0x14c>  // b.plast
    12ac:	mov	w0, #0xffffffff            	// #-1
    12b0:	b	12b8 <grub_fdt_check_header_nosize+0x150>
    12b4:	mov	w0, #0x0                   	// #0
    12b8:	ldr	x19, [sp, #16]
    12bc:	ldp	x29, x30, [sp], #48
    12c0:	ret

00000000000012c4 <grub_fdt_check_header>:
    12c4:	stp	x29, x30, [sp, #-32]!
    12c8:	mov	x29, sp
    12cc:	str	x0, [sp, #24]
    12d0:	str	w1, [sp, #20]
    12d4:	ldr	w0, [sp, #20]
    12d8:	cmp	w0, #0x27
    12dc:	b.ls	130c <grub_fdt_check_header+0x48>  // b.plast
    12e0:	ldr	x0, [sp, #24]
    12e4:	ldr	w0, [x0, #4]
    12e8:	bl	748 <grub_mod_fini+0x30>
    12ec:	mov	w1, w0
    12f0:	ldr	w0, [sp, #20]
    12f4:	cmp	w0, w1
    12f8:	b.cc	130c <grub_fdt_check_header+0x48>  // b.lo, b.ul, b.last
    12fc:	ldr	x0, [sp, #24]
    1300:	bl	1168 <grub_fdt_check_header_nosize>
    1304:	cmn	w0, #0x1
    1308:	b.ne	1314 <grub_fdt_check_header+0x50>  // b.any
    130c:	mov	w0, #0xffffffff            	// #-1
    1310:	b	1318 <grub_fdt_check_header+0x54>
    1314:	mov	w0, #0x0                   	// #0
    1318:	ldp	x29, x30, [sp], #32
    131c:	ret
    1320:	stp	x29, x30, [sp, #-64]!
    1324:	mov	x29, sp
    1328:	str	x0, [sp, #40]
    132c:	str	x1, [sp, #32]
    1330:	str	x2, [sp, #24]
    1334:	str	w3, [sp, #20]
    1338:	b	1460 <grub_fdt_check_header+0x19c>
    133c:	ldr	x0, [sp, #32]
    1340:	ldr	w0, [x0]
    1344:	bl	748 <grub_mod_fini+0x30>
    1348:	cmp	w0, #0x4
    134c:	b.eq	1444 <grub_fdt_check_header+0x180>  // b.none
    1350:	cmp	w0, #0x4
    1354:	b.hi	1454 <grub_fdt_check_header+0x190>  // b.pmore
    1358:	cmp	w0, #0x1
    135c:	b.eq	136c <grub_fdt_check_header+0xa8>  // b.none
    1360:	cmp	w0, #0x3
    1364:	b.eq	13f0 <grub_fdt_check_header+0x12c>  // b.none
    1368:	b	1454 <grub_fdt_check_header+0x190>
    136c:	ldr	w0, [sp, #20]
    1370:	cmp	w0, #0x0
    1374:	b.eq	1394 <grub_fdt_check_header+0xd0>  // b.none
    1378:	ldr	x0, [sp, #32]
    137c:	add	x0, x0, #0x4
    1380:	mov	x1, x0
    1384:	ldr	x0, [sp, #40]
    1388:	bl	78c <grub_mod_fini+0x74>
    138c:	str	x0, [sp, #32]
    1390:	b	145c <grub_fdt_check_header+0x198>
    1394:	ldr	x0, [sp, #32]
    1398:	add	x0, x0, #0x4
    139c:	str	x0, [sp, #56]
    13a0:	b	13b0 <grub_fdt_check_header+0xec>
    13a4:	ldr	x0, [sp, #56]
    13a8:	add	x0, x0, #0x1
    13ac:	str	x0, [sp, #56]
    13b0:	ldr	x0, [sp, #56]
    13b4:	ldrb	w0, [x0]
    13b8:	cmp	w0, #0x0
    13bc:	b.eq	13d0 <grub_fdt_check_header+0x10c>  // b.none
    13c0:	ldr	x1, [sp, #56]
    13c4:	ldr	x0, [sp, #24]
    13c8:	cmp	x1, x0
    13cc:	b.cc	13a4 <grub_fdt_check_header+0xe0>  // b.lo, b.ul, b.last
    13d0:	ldr	x1, [sp, #56]
    13d4:	ldr	x0, [sp, #24]
    13d8:	cmp	x1, x0
    13dc:	b.cc	13e8 <grub_fdt_check_header+0x124>  // b.lo, b.ul, b.last
    13e0:	mov	x0, #0x0                   	// #0
    13e4:	b	1474 <grub_fdt_check_header+0x1b0>
    13e8:	ldr	x0, [sp, #32]
    13ec:	b	1474 <grub_fdt_check_header+0x1b0>
    13f0:	ldr	x0, [sp, #24]
    13f4:	sub	x0, x0, #0x4
    13f8:	ldr	x1, [sp, #32]
    13fc:	cmp	x1, x0
    1400:	b.cc	140c <grub_fdt_check_header+0x148>  // b.lo, b.ul, b.last
    1404:	mov	x0, #0x0                   	// #0
    1408:	b	1474 <grub_fdt_check_header+0x1b0>
    140c:	ldr	x0, [sp, #32]
    1410:	add	x0, x0, #0x4
    1414:	ldr	w0, [x0]
    1418:	bl	748 <grub_mod_fini+0x30>
    141c:	add	w0, w0, #0x3
    1420:	mov	w0, w0
    1424:	and	x0, x0, #0xfffffffc
    1428:	add	x0, x0, #0xc
    142c:	lsr	x0, x0, #2
    1430:	lsl	x0, x0, #2
    1434:	ldr	x1, [sp, #32]
    1438:	add	x0, x1, x0
    143c:	str	x0, [sp, #32]
    1440:	b	145c <grub_fdt_check_header+0x198>
    1444:	ldr	x0, [sp, #32]
    1448:	add	x0, x0, #0x4
    144c:	str	x0, [sp, #32]
    1450:	b	145c <grub_fdt_check_header+0x198>
    1454:	mov	x0, #0x0                   	// #0
    1458:	b	1474 <grub_fdt_check_header+0x1b0>
    145c:	str	wzr, [sp, #20]
    1460:	ldr	x1, [sp, #32]
    1464:	ldr	x0, [sp, #24]
    1468:	cmp	x1, x0
    146c:	b.cc	133c <grub_fdt_check_header+0x78>  // b.lo, b.ul, b.last
    1470:	mov	x0, #0x0                   	// #0
    1474:	ldp	x29, x30, [sp], #64
    1478:	ret

000000000000147c <grub_fdt_next_node>:
    147c:	stp	x29, x30, [sp, #-64]!
    1480:	mov	x29, sp
    1484:	str	x19, [sp, #16]
    1488:	str	x0, [sp, #40]
    148c:	str	w1, [sp, #36]
    1490:	ldr	x0, [sp, #40]
    1494:	ldr	w0, [x0, #8]
    1498:	bl	748 <grub_mod_fini+0x30>
    149c:	mov	w1, w0
    14a0:	ldr	w0, [sp, #36]
    14a4:	add	w0, w1, w0
    14a8:	lsr	w0, w0, #2
    14ac:	mov	w0, w0
    14b0:	lsl	x0, x0, #2
    14b4:	ldr	x1, [sp, #40]
    14b8:	add	x0, x1, x0
    14bc:	str	x0, [sp, #56]
    14c0:	ldr	x0, [sp, #40]
    14c4:	ldr	w0, [x0, #8]
    14c8:	bl	748 <grub_mod_fini+0x30>
    14cc:	mov	w1, w0
    14d0:	ldr	x0, [sp, #40]
    14d4:	add	x19, x1, x0
    14d8:	ldr	x0, [sp, #40]
    14dc:	ldr	w0, [x0, #36]
    14e0:	bl	748 <grub_mod_fini+0x30>
    14e4:	mov	w0, w0
    14e8:	add	x0, x19, x0
    14ec:	mov	w3, #0x1                   	// #1
    14f0:	mov	x2, x0
    14f4:	ldr	x1, [sp, #56]
    14f8:	ldr	x0, [sp, #40]
    14fc:	bl	1320 <grub_fdt_check_header+0x5c>
    1500:	str	x0, [sp, #56]
    1504:	ldr	x0, [sp, #56]
    1508:	cmp	x0, #0x0
    150c:	b.ne	1518 <grub_fdt_next_node+0x9c>  // b.any
    1510:	mov	w0, #0xffffffff            	// #-1
    1514:	b	1538 <grub_fdt_next_node+0xbc>
    1518:	ldr	x1, [sp, #56]
    151c:	ldr	x0, [sp, #40]
    1520:	sub	x0, x1, x0
    1524:	mov	w19, w0
    1528:	ldr	x0, [sp, #40]
    152c:	ldr	w0, [x0, #8]
    1530:	bl	748 <grub_mod_fini+0x30>
    1534:	sub	w0, w19, w0
    1538:	ldr	x19, [sp, #16]
    153c:	ldp	x29, x30, [sp], #64
    1540:	ret

0000000000001544 <grub_fdt_first_node>:
    1544:	stp	x29, x30, [sp, #-80]!
    1548:	mov	x29, sp
    154c:	str	x19, [sp, #16]
    1550:	str	x0, [sp, #40]
    1554:	str	w1, [sp, #36]
    1558:	ldr	w0, [sp, #36]
    155c:	and	w0, w0, #0x3
    1560:	cmp	w0, #0x0
    1564:	b.eq	1570 <grub_fdt_first_node+0x2c>  // b.none
    1568:	mov	w0, #0xffffffff            	// #-1
    156c:	b	168c <grub_fdt_first_node+0x148>
    1570:	ldr	x0, [sp, #40]
    1574:	ldr	w0, [x0, #8]
    1578:	bl	748 <grub_mod_fini+0x30>
    157c:	mov	w1, w0
    1580:	ldr	x0, [sp, #40]
    1584:	add	x1, x1, x0
    1588:	ldr	w0, [sp, #36]
    158c:	add	x0, x1, x0
    1590:	str	x0, [sp, #64]
    1594:	ldr	x0, [sp, #40]
    1598:	ldr	w0, [x0, #8]
    159c:	bl	748 <grub_mod_fini+0x30>
    15a0:	mov	w1, w0
    15a4:	ldr	x0, [sp, #40]
    15a8:	add	x19, x1, x0
    15ac:	ldr	x0, [sp, #40]
    15b0:	ldr	w0, [x0, #36]
    15b4:	bl	748 <grub_mod_fini+0x30>
    15b8:	mov	w0, w0
    15bc:	add	x0, x19, x0
    15c0:	str	x0, [sp, #56]
    15c4:	ldr	x1, [sp, #64]
    15c8:	ldr	x0, [sp, #56]
    15cc:	cmp	x1, x0
    15d0:	b.cs	15e8 <grub_fdt_first_node+0xa4>  // b.hs, b.nlast
    15d4:	ldr	x0, [sp, #64]
    15d8:	ldr	w0, [x0]
    15dc:	bl	748 <grub_mod_fini+0x30>
    15e0:	cmp	w0, #0x1
    15e4:	b.eq	15f0 <grub_fdt_first_node+0xac>  // b.none
    15e8:	mov	w0, #0xffffffff            	// #-1
    15ec:	b	168c <grub_fdt_first_node+0x148>
    15f0:	ldr	x0, [sp, #64]
    15f4:	add	x0, x0, #0x4
    15f8:	str	x0, [sp, #72]
    15fc:	b	1618 <grub_fdt_first_node+0xd4>
    1600:	ldr	x0, [sp, #72]
    1604:	add	x1, x0, #0x1
    1608:	str	x1, [sp, #72]
    160c:	ldrb	w0, [x0]
    1610:	cmp	w0, #0x0
    1614:	b.eq	162c <grub_fdt_first_node+0xe8>  // b.none
    1618:	ldr	x1, [sp, #72]
    161c:	ldr	x0, [sp, #56]
    1620:	cmp	x1, x0
    1624:	b.cc	1600 <grub_fdt_first_node+0xbc>  // b.lo, b.ul, b.last
    1628:	b	1630 <grub_fdt_first_node+0xec>
    162c:	nop
    1630:	ldr	x0, [sp, #72]
    1634:	add	x0, x0, #0x3
    1638:	and	x0, x0, #0xfffffffffffffffc
    163c:	str	x0, [sp, #64]
    1640:	mov	w3, #0x0                   	// #0
    1644:	ldr	x2, [sp, #56]
    1648:	ldr	x1, [sp, #64]
    164c:	ldr	x0, [sp, #40]
    1650:	bl	1320 <grub_fdt_check_header+0x5c>
    1654:	str	x0, [sp, #64]
    1658:	ldr	x0, [sp, #64]
    165c:	cmp	x0, #0x0
    1660:	b.ne	166c <grub_fdt_first_node+0x128>  // b.any
    1664:	mov	w0, #0xffffffff            	// #-1
    1668:	b	168c <grub_fdt_first_node+0x148>
    166c:	ldr	x1, [sp, #64]
    1670:	ldr	x0, [sp, #40]
    1674:	sub	x0, x1, x0
    1678:	mov	w19, w0
    167c:	ldr	x0, [sp, #40]
    1680:	ldr	w0, [x0, #8]
    1684:	bl	748 <grub_mod_fini+0x30>
    1688:	sub	w0, w19, w0
    168c:	ldr	x19, [sp, #16]
    1690:	ldp	x29, x30, [sp], #80
    1694:	ret

0000000000001698 <grub_fdt_find_subnode>:
    1698:	stp	x29, x30, [sp, #-96]!
    169c:	mov	x29, sp
    16a0:	str	x19, [sp, #16]
    16a4:	str	x0, [sp, #56]
    16a8:	str	w1, [sp, #52]
    16ac:	str	x2, [sp, #40]
    16b0:	str	wzr, [sp, #76]
    16b4:	ldr	w0, [sp, #52]
    16b8:	and	w0, w0, #0x3
    16bc:	cmp	w0, #0x0
    16c0:	b.eq	16cc <grub_fdt_find_subnode+0x34>  // b.none
    16c4:	mov	w0, #0xffffffff            	// #-1
    16c8:	b	1810 <grub_fdt_find_subnode+0x178>
    16cc:	ldr	x0, [sp, #56]
    16d0:	ldr	w0, [x0, #8]
    16d4:	bl	748 <grub_mod_fini+0x30>
    16d8:	mov	w1, w0
    16dc:	ldr	x0, [sp, #56]
    16e0:	add	x1, x1, x0
    16e4:	ldr	w0, [sp, #52]
    16e8:	add	x0, x1, x0
    16ec:	str	x0, [sp, #88]
    16f0:	ldr	x0, [sp, #56]
    16f4:	ldr	w0, [x0, #8]
    16f8:	bl	748 <grub_mod_fini+0x30>
    16fc:	mov	w1, w0
    1700:	ldr	x0, [sp, #56]
    1704:	add	x19, x1, x0
    1708:	ldr	x0, [sp, #56]
    170c:	ldr	w0, [x0, #36]
    1710:	bl	748 <grub_mod_fini+0x30>
    1714:	mov	w0, w0
    1718:	add	x0, x19, x0
    171c:	str	x0, [sp, #64]
    1720:	ldr	x1, [sp, #88]
    1724:	ldr	x0, [sp, #64]
    1728:	cmp	x1, x0
    172c:	b.cs	1744 <grub_fdt_find_subnode+0xac>  // b.hs, b.nlast
    1730:	ldr	x0, [sp, #88]
    1734:	ldr	w0, [x0]
    1738:	bl	748 <grub_mod_fini+0x30>
    173c:	cmp	w0, #0x1
    1740:	b.eq	174c <grub_fdt_find_subnode+0xb4>  // b.none
    1744:	mov	w0, #0xffffffff            	// #-1
    1748:	b	1810 <grub_fdt_find_subnode+0x178>
    174c:	ldr	x0, [sp, #88]
    1750:	add	x0, x0, #0x4
    1754:	str	x0, [sp, #80]
    1758:	b	1774 <grub_fdt_find_subnode+0xdc>
    175c:	ldr	x0, [sp, #80]
    1760:	add	x1, x0, #0x1
    1764:	str	x1, [sp, #80]
    1768:	ldrb	w0, [x0]
    176c:	cmp	w0, #0x0
    1770:	b.eq	1788 <grub_fdt_find_subnode+0xf0>  // b.none
    1774:	ldr	x1, [sp, #80]
    1778:	ldr	x0, [sp, #64]
    177c:	cmp	x1, x0
    1780:	b.cc	175c <grub_fdt_find_subnode+0xc4>  // b.lo, b.ul, b.last
    1784:	b	178c <grub_fdt_find_subnode+0xf4>
    1788:	nop
    178c:	ldr	x0, [sp, #80]
    1790:	add	x0, x0, #0x3
    1794:	and	x0, x0, #0xfffffffffffffffc
    1798:	str	x0, [sp, #88]
    179c:	ldr	w3, [sp, #76]
    17a0:	ldr	x2, [sp, #64]
    17a4:	ldr	x1, [sp, #88]
    17a8:	ldr	x0, [sp, #56]
    17ac:	bl	1320 <grub_fdt_check_header+0x5c>
    17b0:	str	x0, [sp, #88]
    17b4:	ldr	x0, [sp, #88]
    17b8:	cmp	x0, #0x0
    17bc:	b.ne	17c8 <grub_fdt_find_subnode+0x130>  // b.any
    17c0:	mov	w0, #0xffffffff            	// #-1
    17c4:	b	1810 <grub_fdt_find_subnode+0x178>
    17c8:	mov	w0, #0x1                   	// #1
    17cc:	str	w0, [sp, #76]
    17d0:	ldr	x0, [sp, #88]
    17d4:	add	x0, x0, #0x4
    17d8:	str	x0, [sp, #80]
    17dc:	ldr	x1, [sp, #40]
    17e0:	ldr	x0, [sp, #80]
    17e4:	bl	0 <grub_strcmp>
    17e8:	cmp	w0, #0x0
    17ec:	b.ne	179c <grub_fdt_find_subnode+0x104>  // b.any
    17f0:	ldr	x1, [sp, #88]
    17f4:	ldr	x0, [sp, #56]
    17f8:	sub	x0, x1, x0
    17fc:	mov	w19, w0
    1800:	ldr	x0, [sp, #56]
    1804:	ldr	w0, [x0, #8]
    1808:	bl	748 <grub_mod_fini+0x30>
    180c:	sub	w0, w19, w0
    1810:	ldr	x19, [sp, #16]
    1814:	ldp	x29, x30, [sp], #96
    1818:	ret

000000000000181c <grub_fdt_get_nodename>:
    181c:	stp	x29, x30, [sp, #-32]!
    1820:	mov	x29, sp
    1824:	str	x0, [sp, #24]
    1828:	str	w1, [sp, #20]
    182c:	ldr	x0, [sp, #24]
    1830:	ldr	w0, [x0, #8]
    1834:	bl	748 <grub_mod_fini+0x30>
    1838:	mov	w1, w0
    183c:	ldr	w0, [sp, #20]
    1840:	add	x0, x1, x0
    1844:	add	x0, x0, #0x4
    1848:	ldr	x1, [sp, #24]
    184c:	add	x0, x1, x0
    1850:	ldp	x29, x30, [sp], #32
    1854:	ret

0000000000001858 <grub_fdt_add_subnode>:
    1858:	stp	x29, x30, [sp, #-64]!
    185c:	mov	x29, sp
    1860:	str	x0, [sp, #40]
    1864:	str	w1, [sp, #36]
    1868:	str	x2, [sp, #24]
    186c:	ldr	x0, [sp, #24]
    1870:	bl	0 <grub_strlen>
    1874:	add	w0, w0, #0x4
    1878:	and	w0, w0, #0xfffffffc
    187c:	add	w0, w0, #0x8
    1880:	str	w0, [sp, #60]
    1884:	ldr	w0, [sp, #36]
    1888:	and	w0, w0, #0x3
    188c:	cmp	w0, #0x0
    1890:	b.ne	18ac <grub_fdt_add_subnode+0x54>  // b.any
    1894:	ldr	x0, [sp, #40]
    1898:	bl	9d8 <grub_mod_fini+0x2c0>
    189c:	mov	w1, w0
    18a0:	ldr	w0, [sp, #60]
    18a4:	cmp	w0, w1
    18a8:	b.ls	18b4 <grub_fdt_add_subnode+0x5c>  // b.plast
    18ac:	mov	w0, #0xffffffff            	// #-1
    18b0:	b	18e4 <grub_fdt_add_subnode+0x8c>
    18b4:	ldr	w1, [sp, #60]
    18b8:	ldr	x0, [sp, #40]
    18bc:	bl	cb8 <grub_mod_fini+0x5a0>
    18c0:	cmp	w0, #0x0
    18c4:	b.ge	18d0 <grub_fdt_add_subnode+0x78>  // b.tcont
    18c8:	mov	w0, #0xffffffff            	// #-1
    18cc:	b	18e4 <grub_fdt_add_subnode+0x8c>
    18d0:	ldr	w0, [sp, #36]
    18d4:	ldr	x2, [sp, #24]
    18d8:	mov	w1, w0
    18dc:	ldr	x0, [sp, #40]
    18e0:	bl	a50 <grub_mod_fini+0x338>
    18e4:	ldp	x29, x30, [sp], #64
    18e8:	ret

00000000000018ec <grub_fdt_get_prop>:
    18ec:	stp	x29, x30, [sp, #-64]!
    18f0:	mov	x29, sp
    18f4:	str	x0, [sp, #40]
    18f8:	str	w1, [sp, #36]
    18fc:	str	x2, [sp, #24]
    1900:	str	x3, [sp, #16]
    1904:	ldr	x0, [sp, #40]
    1908:	ldr	w0, [x0, #36]
    190c:	bl	748 <grub_mod_fini+0x30>
    1910:	mov	w1, w0
    1914:	ldr	w0, [sp, #36]
    1918:	cmp	w0, w1
    191c:	b.cs	1960 <grub_fdt_get_prop+0x74>  // b.hs, b.nlast
    1920:	ldr	w0, [sp, #36]
    1924:	and	w0, w0, #0x3
    1928:	cmp	w0, #0x0
    192c:	b.ne	1960 <grub_fdt_get_prop+0x74>  // b.any
    1930:	ldr	x0, [sp, #40]
    1934:	ldr	w0, [x0, #8]
    1938:	bl	748 <grub_mod_fini+0x30>
    193c:	mov	w1, w0
    1940:	ldr	x0, [sp, #40]
    1944:	add	x1, x1, x0
    1948:	ldr	w0, [sp, #36]
    194c:	add	x0, x1, x0
    1950:	ldr	w0, [x0]
    1954:	bl	748 <grub_mod_fini+0x30>
    1958:	cmp	w0, #0x1
    195c:	b.eq	1968 <grub_fdt_get_prop+0x7c>  // b.none
    1960:	mov	x0, #0x0                   	// #0
    1964:	b	19c0 <grub_fdt_get_prop+0xd4>
    1968:	ldr	x2, [sp, #24]
    196c:	ldr	w1, [sp, #36]
    1970:	ldr	x0, [sp, #40]
    1974:	bl	f58 <grub_mod_fini+0x840>
    1978:	str	x0, [sp, #56]
    197c:	ldr	x0, [sp, #56]
    1980:	cmp	x0, #0x0
    1984:	b.ne	1990 <grub_fdt_get_prop+0xa4>  // b.any
    1988:	mov	x0, #0x0                   	// #0
    198c:	b	19c0 <grub_fdt_get_prop+0xd4>
    1990:	ldr	x0, [sp, #16]
    1994:	cmp	x0, #0x0
    1998:	b.eq	19b8 <grub_fdt_get_prop+0xcc>  // b.none
    199c:	ldr	x0, [sp, #56]
    19a0:	add	x0, x0, #0x4
    19a4:	ldr	w0, [x0]
    19a8:	bl	748 <grub_mod_fini+0x30>
    19ac:	mov	w1, w0
    19b0:	ldr	x0, [sp, #16]
    19b4:	str	w1, [x0]
    19b8:	ldr	x0, [sp, #56]
    19bc:	add	x0, x0, #0xc
    19c0:	ldp	x29, x30, [sp], #64
    19c4:	ret

00000000000019c8 <grub_fdt_set_prop>:
    19c8:	stp	x29, x30, [sp, #-112]!
    19cc:	mov	x29, sp
    19d0:	stp	x19, x20, [sp, #16]
    19d4:	str	x0, [sp, #56]
    19d8:	str	w1, [sp, #52]
    19dc:	str	x2, [sp, #40]
    19e0:	str	x3, [sp, #32]
    19e4:	str	w4, [sp, #48]
    19e8:	str	wzr, [sp, #100]
    19ec:	str	wzr, [sp, #96]
    19f0:	ldr	x0, [sp, #56]
    19f4:	ldr	w0, [x0, #36]
    19f8:	bl	748 <grub_mod_fini+0x30>
    19fc:	mov	w1, w0
    1a00:	ldr	w0, [sp, #52]
    1a04:	cmp	w0, w1
    1a08:	b.cs	1a4c <grub_fdt_set_prop+0x84>  // b.hs, b.nlast
    1a0c:	ldr	w0, [sp, #52]
    1a10:	and	w0, w0, #0x3
    1a14:	cmp	w0, #0x0
    1a18:	b.ne	1a4c <grub_fdt_set_prop+0x84>  // b.any
    1a1c:	ldr	x0, [sp, #56]
    1a20:	ldr	w0, [x0, #8]
    1a24:	bl	748 <grub_mod_fini+0x30>
    1a28:	mov	w1, w0
    1a2c:	ldr	x0, [sp, #56]
    1a30:	add	x1, x1, x0
    1a34:	ldr	w0, [sp, #52]
    1a38:	add	x0, x1, x0
    1a3c:	ldr	w0, [x0]
    1a40:	bl	748 <grub_mod_fini+0x30>
    1a44:	cmp	w0, #0x1
    1a48:	b.eq	1a54 <grub_fdt_set_prop+0x8c>  // b.none
    1a4c:	mov	w0, #0xffffffff            	// #-1
    1a50:	b	1dc4 <grub_fdt_set_prop+0x3fc>
    1a54:	ldr	x2, [sp, #40]
    1a58:	ldr	w1, [sp, #52]
    1a5c:	ldr	x0, [sp, #56]
    1a60:	bl	f58 <grub_mod_fini+0x840>
    1a64:	str	x0, [sp, #104]
    1a68:	ldr	x0, [sp, #104]
    1a6c:	cmp	x0, #0x0
    1a70:	b.eq	1b38 <grub_fdt_set_prop+0x170>  // b.none
    1a74:	ldr	x0, [sp, #104]
    1a78:	add	x0, x0, #0x4
    1a7c:	ldr	w0, [x0]
    1a80:	bl	748 <grub_mod_fini+0x30>
    1a84:	add	w0, w0, #0x3
    1a88:	and	w0, w0, #0xfffffffc
    1a8c:	str	w0, [sp, #84]
    1a90:	mov	w0, #0x1                   	// #1
    1a94:	str	w0, [sp, #100]
    1a98:	str	wzr, [sp, #92]
    1a9c:	b	1ac8 <grub_fdt_set_prop+0x100>
    1aa0:	ldr	w0, [sp, #92]
    1aa4:	add	x0, x0, #0x3
    1aa8:	lsl	x0, x0, #2
    1aac:	ldr	x1, [sp, #104]
    1ab0:	add	x0, x1, x0
    1ab4:	mov	w1, #0x4000000             	// #67108864
    1ab8:	str	w1, [x0]
    1abc:	ldr	w0, [sp, #92]
    1ac0:	add	w0, w0, #0x1
    1ac4:	str	w0, [sp, #92]
    1ac8:	ldr	w0, [sp, #84]
    1acc:	lsr	w0, w0, #2
    1ad0:	ldr	w1, [sp, #92]
    1ad4:	cmp	w1, w0
    1ad8:	b.cc	1aa0 <grub_fdt_set_prop+0xd8>  // b.lo, b.ul, b.last
    1adc:	ldr	w0, [sp, #84]
    1ae0:	add	w0, w0, #0x3
    1ae4:	and	w0, w0, #0xfffffffc
    1ae8:	ldr	w1, [sp, #48]
    1aec:	cmp	w1, w0
    1af0:	b.ls	1b38 <grub_fdt_set_prop+0x170>  // b.plast
    1af4:	ldr	x0, [sp, #104]
    1af8:	add	x0, x0, #0x8
    1afc:	ldr	w0, [x0]
    1b00:	bl	748 <grub_mod_fini+0x30>
    1b04:	str	w0, [sp, #96]
    1b08:	ldr	x0, [sp, #104]
    1b0c:	add	x1, x0, #0x8
    1b10:	mov	w0, #0x4000000             	// #67108864
    1b14:	str	w0, [x1]
    1b18:	ldr	x0, [sp, #104]
    1b1c:	add	x0, x0, #0x4
    1b20:	ldr	w1, [x1]
    1b24:	str	w1, [x0]
    1b28:	ldr	w1, [x0]
    1b2c:	ldr	x0, [sp, #104]
    1b30:	str	w1, [x0]
    1b34:	str	xzr, [sp, #104]
    1b38:	ldr	x0, [sp, #104]
    1b3c:	cmp	x0, #0x0
    1b40:	b.eq	1b50 <grub_fdt_set_prop+0x188>  // b.none
    1b44:	ldr	w0, [sp, #100]
    1b48:	cmp	w0, #0x0
    1b4c:	b.ne	1bfc <grub_fdt_set_prop+0x234>  // b.any
    1b50:	str	wzr, [sp, #88]
    1b54:	ldr	x0, [sp, #104]
    1b58:	cmp	x0, #0x0
    1b5c:	b.ne	1b74 <grub_fdt_set_prop+0x1ac>  // b.any
    1b60:	ldr	w0, [sp, #48]
    1b64:	add	w0, w0, #0x3
    1b68:	and	w0, w0, #0xfffffffc
    1b6c:	add	w0, w0, #0xc
    1b70:	str	w0, [sp, #88]
    1b74:	ldr	w0, [sp, #100]
    1b78:	cmp	w0, #0x0
    1b7c:	b.ne	1b9c <grub_fdt_set_prop+0x1d4>  // b.any
    1b80:	ldr	x0, [sp, #40]
    1b84:	bl	0 <grub_strlen>
    1b88:	add	x0, x0, #0x1
    1b8c:	mov	w1, w0
    1b90:	ldr	w0, [sp, #88]
    1b94:	add	w0, w0, w1
    1b98:	str	w0, [sp, #88]
    1b9c:	ldr	x0, [sp, #56]
    1ba0:	bl	9d8 <grub_mod_fini+0x2c0>
    1ba4:	mov	w1, w0
    1ba8:	ldr	w0, [sp, #88]
    1bac:	cmp	w0, w1
    1bb0:	b.ls	1bbc <grub_fdt_set_prop+0x1f4>  // b.plast
    1bb4:	mov	w0, #0xffffffff            	// #-1
    1bb8:	b	1dc4 <grub_fdt_set_prop+0x3fc>
    1bbc:	ldr	x0, [sp, #104]
    1bc0:	cmp	x0, #0x0
    1bc4:	b.ne	1bdc <grub_fdt_set_prop+0x214>  // b.any
    1bc8:	ldr	w0, [sp, #48]
    1bcc:	add	w0, w0, #0x3
    1bd0:	and	w0, w0, #0xfffffffc
    1bd4:	add	w0, w0, #0xc
    1bd8:	b	1be0 <grub_fdt_set_prop+0x218>
    1bdc:	mov	w0, #0x0                   	// #0
    1be0:	mov	w1, w0
    1be4:	ldr	x0, [sp, #56]
    1be8:	bl	cb8 <grub_mod_fini+0x5a0>
    1bec:	cmp	w0, #0x0
    1bf0:	b.ge	1bfc <grub_fdt_set_prop+0x234>  // b.tcont
    1bf4:	mov	w0, #0xffffffff            	// #-1
    1bf8:	b	1dc4 <grub_fdt_set_prop+0x3fc>
    1bfc:	ldr	w0, [sp, #100]
    1c00:	cmp	w0, #0x0
    1c04:	b.ne	1c70 <grub_fdt_set_prop+0x2a8>  // b.any
    1c08:	ldr	x0, [sp, #56]
    1c0c:	ldr	w0, [x0, #32]
    1c10:	bl	748 <grub_mod_fini+0x30>
    1c14:	str	w0, [sp, #96]
    1c18:	ldr	x0, [sp, #56]
    1c1c:	ldr	w0, [x0, #12]
    1c20:	bl	748 <grub_mod_fini+0x30>
    1c24:	mov	w1, w0
    1c28:	ldr	w0, [sp, #96]
    1c2c:	add	x0, x1, x0
    1c30:	ldr	x1, [sp, #56]
    1c34:	add	x0, x1, x0
    1c38:	ldr	x1, [sp, #40]
    1c3c:	bl	0 <grub_strcpy>
    1c40:	ldr	x0, [sp, #56]
    1c44:	ldr	w0, [x0, #32]
    1c48:	bl	748 <grub_mod_fini+0x30>
    1c4c:	mov	w19, w0
    1c50:	ldr	x0, [sp, #40]
    1c54:	bl	0 <grub_strlen>
    1c58:	add	w0, w19, w0
    1c5c:	add	w0, w0, #0x1
    1c60:	bl	748 <grub_mod_fini+0x30>
    1c64:	mov	w1, w0
    1c68:	ldr	x0, [sp, #56]
    1c6c:	str	w1, [x0, #32]
    1c70:	ldr	x0, [sp, #104]
    1c74:	cmp	x0, #0x0
    1c78:	b.ne	1d74 <grub_fdt_set_prop+0x3ac>  // b.any
    1c7c:	ldr	x0, [sp, #56]
    1c80:	ldr	w0, [x0, #8]
    1c84:	bl	748 <grub_mod_fini+0x30>
    1c88:	mov	w1, w0
    1c8c:	ldr	x0, [sp, #56]
    1c90:	add	x1, x1, x0
    1c94:	ldr	w0, [sp, #52]
    1c98:	add	x0, x1, x0
    1c9c:	add	x0, x0, #0x4
    1ca0:	str	x0, [sp, #72]
    1ca4:	ldr	x0, [sp, #72]
    1ca8:	bl	0 <grub_strlen>
    1cac:	add	x0, x0, #0x4
    1cb0:	and	x0, x0, #0xfffffffffffffffc
    1cb4:	ldr	x1, [sp, #72]
    1cb8:	add	x0, x1, x0
    1cbc:	str	x0, [sp, #104]
    1cc0:	ldr	w0, [sp, #48]
    1cc4:	add	w0, w0, #0x3
    1cc8:	mov	w0, w0
    1ccc:	and	x0, x0, #0xfffffffc
    1cd0:	add	x0, x0, #0xc
    1cd4:	ldr	x1, [sp, #104]
    1cd8:	add	x20, x1, x0
    1cdc:	ldr	x0, [sp, #56]
    1ce0:	ldr	w0, [x0, #8]
    1ce4:	bl	748 <grub_mod_fini+0x30>
    1ce8:	mov	w1, w0
    1cec:	ldr	x0, [sp, #56]
    1cf0:	add	x19, x1, x0
    1cf4:	ldr	x0, [sp, #56]
    1cf8:	ldr	w0, [x0, #36]
    1cfc:	bl	748 <grub_mod_fini+0x30>
    1d00:	mov	w0, w0
    1d04:	add	x1, x19, x0
    1d08:	ldr	x0, [sp, #104]
    1d0c:	sub	x0, x1, x0
    1d10:	mov	x2, x0
    1d14:	ldr	x1, [sp, #104]
    1d18:	mov	x0, x20
    1d1c:	bl	0 <grub_memmove>
    1d20:	ldr	x0, [sp, #56]
    1d24:	ldr	w0, [x0, #36]
    1d28:	bl	748 <grub_mod_fini+0x30>
    1d2c:	mov	w1, w0
    1d30:	ldr	w0, [sp, #48]
    1d34:	add	w0, w0, #0x3
    1d38:	and	w0, w0, #0xfffffffc
    1d3c:	add	w0, w1, w0
    1d40:	add	w0, w0, #0xc
    1d44:	bl	748 <grub_mod_fini+0x30>
    1d48:	mov	w1, w0
    1d4c:	ldr	x0, [sp, #56]
    1d50:	str	w1, [x0, #36]
    1d54:	ldr	x0, [sp, #104]
    1d58:	mov	w1, #0x3000000             	// #50331648
    1d5c:	str	w1, [x0]
    1d60:	ldr	x0, [sp, #104]
    1d64:	add	x19, x0, #0x8
    1d68:	ldr	w0, [sp, #96]
    1d6c:	bl	748 <grub_mod_fini+0x30>
    1d70:	str	w0, [x19]
    1d74:	ldr	x0, [sp, #104]
    1d78:	add	x19, x0, #0x4
    1d7c:	ldr	w0, [sp, #48]
    1d80:	bl	748 <grub_mod_fini+0x30>
    1d84:	str	w0, [x19]
    1d88:	ldr	w0, [sp, #48]
    1d8c:	add	w0, w0, #0x3
    1d90:	mov	w0, w0
    1d94:	and	x0, x0, #0xfffffffc
    1d98:	add	x0, x0, #0x8
    1d9c:	ldr	x1, [sp, #104]
    1da0:	add	x0, x1, x0
    1da4:	str	wzr, [x0]
    1da8:	ldr	x0, [sp, #104]
    1dac:	add	x0, x0, #0xc
    1db0:	ldr	w1, [sp, #48]
    1db4:	mov	x2, x1
    1db8:	ldr	x1, [sp, #32]
    1dbc:	bl	760 <grub_mod_fini+0x48>
    1dc0:	mov	w0, #0x0                   	// #0
    1dc4:	ldp	x19, x20, [sp, #16]
    1dc8:	ldp	x29, x30, [sp], #112
    1dcc:	ret

0000000000001dd0 <grub_fdt_create_empty_tree>:
    1dd0:	stp	x29, x30, [sp, #-48]!
    1dd4:	mov	x29, sp
    1dd8:	str	x0, [sp, #24]
    1ddc:	str	w1, [sp, #20]
    1de0:	ldr	w0, [sp, #20]
    1de4:	cmp	w0, #0x47
    1de8:	b.hi	1df4 <grub_fdt_create_empty_tree+0x24>  // b.pmore
    1dec:	mov	w0, #0xffffffff            	// #-1
    1df0:	b	1ed4 <grub_fdt_create_empty_tree+0x104>
    1df4:	ldr	w0, [sp, #20]
    1df8:	mov	x2, x0
    1dfc:	mov	w1, #0x0                   	// #0
    1e00:	ldr	x0, [sp, #24]
    1e04:	bl	0 <grub_memset>
    1e08:	ldr	x0, [sp, #24]
    1e0c:	str	x0, [sp, #40]
    1e10:	ldr	x0, [sp, #40]
    1e14:	mov	w1, #0x9000000             	// #150994944
    1e18:	str	w1, [x0, #68]
    1e1c:	ldr	x0, [sp, #40]
    1e20:	mov	w1, #0x2000000             	// #33554432
    1e24:	str	w1, [x0, #64]
    1e28:	ldr	x0, [sp, #40]
    1e2c:	mov	w1, #0x1000000             	// #16777216
    1e30:	str	w1, [x0, #56]
    1e34:	ldr	x0, [sp, #24]
    1e38:	mov	w1, #0x28000000            	// #671088640
    1e3c:	str	w1, [x0, #16]
    1e40:	mov	w0, #0x48                  	// #72
    1e44:	bl	748 <grub_mod_fini+0x30>
    1e48:	mov	w1, w0
    1e4c:	ldr	x0, [sp, #24]
    1e50:	str	w1, [x0, #12]
    1e54:	mov	w0, #0x38                  	// #56
    1e58:	bl	748 <grub_mod_fini+0x30>
    1e5c:	mov	w1, w0
    1e60:	ldr	x0, [sp, #24]
    1e64:	str	w1, [x0, #8]
    1e68:	mov	w0, #0x11                  	// #17
    1e6c:	bl	748 <grub_mod_fini+0x30>
    1e70:	mov	w1, w0
    1e74:	ldr	x0, [sp, #24]
    1e78:	str	w1, [x0, #20]
    1e7c:	mov	w0, #0x11                  	// #17
    1e80:	bl	748 <grub_mod_fini+0x30>
    1e84:	mov	w1, w0
    1e88:	ldr	x0, [sp, #24]
    1e8c:	str	w1, [x0, #24]
    1e90:	mov	w0, #0x10                  	// #16
    1e94:	bl	748 <grub_mod_fini+0x30>
    1e98:	mov	w1, w0
    1e9c:	ldr	x0, [sp, #24]
    1ea0:	str	w1, [x0, #36]
    1ea4:	ldr	w0, [sp, #20]
    1ea8:	bl	748 <grub_mod_fini+0x30>
    1eac:	mov	w1, w0
    1eb0:	ldr	x0, [sp, #24]
    1eb4:	str	w1, [x0, #4]
    1eb8:	mov	w0, #0xfeed                	// #65261
    1ebc:	movk	w0, #0xd00d, lsl #16
    1ec0:	bl	748 <grub_mod_fini+0x30>
    1ec4:	mov	w1, w0
    1ec8:	ldr	x0, [sp, #24]
    1ecc:	str	w1, [x0]
    1ed0:	mov	w0, #0x0                   	// #0
    1ed4:	ldp	x29, x30, [sp], #48
    1ed8:	ret
