
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libelf-0.178.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003020 <.init>:
    3020:	stp	x29, x30, [sp, #-16]!
    3024:	mov	x29, sp
    3028:	bl	33c0 <*ABS*@plt+0x20>
    302c:	ldp	x29, x30, [sp], #16
    3030:	ret

Disassembly of section .plt:

0000000000003040 <memcpy@plt-0x20>:
    3040:	stp	x16, x30, [sp, #-16]!
    3044:	adrp	x16, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    3048:	ldr	x17, [x16, #4088]
    304c:	add	x16, x16, #0xff8
    3050:	br	x17
    3054:	nop
    3058:	nop
    305c:	nop

0000000000003060 <memcpy@plt>:
    3060:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3064:	ldr	x17, [x16]
    3068:	add	x16, x16, #0x0
    306c:	br	x17

0000000000003070 <memmove@plt>:
    3070:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3074:	ldr	x17, [x16, #8]
    3078:	add	x16, x16, #0x8
    307c:	br	x17

0000000000003080 <msync@plt>:
    3080:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3084:	ldr	x17, [x16, #16]
    3088:	add	x16, x16, #0x10
    308c:	br	x17

0000000000003090 <posix_fallocate@plt>:
    3090:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3094:	ldr	x17, [x16, #24]
    3098:	add	x16, x16, #0x18
    309c:	br	x17

00000000000030a0 <memccpy@plt>:
    30a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16, #32]
    30a8:	add	x16, x16, #0x20
    30ac:	br	x17

00000000000030b0 <inflate@plt>:
    30b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #40]
    30b8:	add	x16, x16, #0x28
    30bc:	br	x17

00000000000030c0 <mremap@plt>:
    30c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #48]
    30c8:	add	x16, x16, #0x30
    30cc:	br	x17

00000000000030d0 <elf32_getchdr@plt>:
    30d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #56]
    30d8:	add	x16, x16, #0x38
    30dc:	br	x17

00000000000030e0 <__cxa_finalize@plt>:
    30e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #64]
    30e8:	add	x16, x16, #0x40
    30ec:	br	x17

00000000000030f0 <qsort@plt>:
    30f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #72]
    30f8:	add	x16, x16, #0x48
    30fc:	br	x17

0000000000003100 <malloc@plt>:
    3100:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #80]
    3108:	add	x16, x16, #0x50
    310c:	br	x17

0000000000003110 <open@plt>:
    3110:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #88]
    3118:	add	x16, x16, #0x58
    311c:	br	x17

0000000000003120 <deflate@plt>:
    3120:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #96]
    3128:	add	x16, x16, #0x60
    312c:	br	x17

0000000000003130 <strncmp@plt>:
    3130:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #104]
    3138:	add	x16, x16, #0x68
    313c:	br	x17

0000000000003140 <memset@plt>:
    3140:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #112]
    3148:	add	x16, x16, #0x70
    314c:	br	x17

0000000000003150 <elf64_getshdr@plt>:
    3150:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #120]
    3158:	add	x16, x16, #0x78
    315c:	br	x17

0000000000003160 <fchmod@plt>:
    3160:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #128]
    3168:	add	x16, x16, #0x80
    316c:	br	x17

0000000000003170 <posix_memalign@plt>:
    3170:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3174:	ldr	x17, [x16, #136]
    3178:	add	x16, x16, #0x88
    317c:	br	x17

0000000000003180 <calloc@plt>:
    3180:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3184:	ldr	x17, [x16, #144]
    3188:	add	x16, x16, #0x90
    318c:	br	x17

0000000000003190 <gelf_xlatetof@plt>:
    3190:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3194:	ldr	x17, [x16, #152]
    3198:	add	x16, x16, #0x98
    319c:	br	x17

00000000000031a0 <realloc@plt>:
    31a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31a4:	ldr	x17, [x16, #160]
    31a8:	add	x16, x16, #0xa0
    31ac:	br	x17

00000000000031b0 <deflateInit_@plt>:
    31b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31b4:	ldr	x17, [x16, #168]
    31b8:	add	x16, x16, #0xa8
    31bc:	br	x17

00000000000031c0 <close@plt>:
    31c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31c4:	ldr	x17, [x16, #176]
    31c8:	add	x16, x16, #0xb0
    31cc:	br	x17

00000000000031d0 <elf64_getchdr@plt>:
    31d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31d4:	ldr	x17, [x16, #184]
    31d8:	add	x16, x16, #0xb8
    31dc:	br	x17

00000000000031e0 <__gmon_start__@plt>:
    31e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31e4:	ldr	x17, [x16, #192]
    31e8:	add	x16, x16, #0xc0
    31ec:	br	x17

00000000000031f0 <inflateEnd@plt>:
    31f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    31f4:	ldr	x17, [x16, #200]
    31f8:	add	x16, x16, #0xc8
    31fc:	br	x17

0000000000003200 <memcmp@plt>:
    3200:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3204:	ldr	x17, [x16, #208]
    3208:	add	x16, x16, #0xd0
    320c:	br	x17

0000000000003210 <strcmp@plt>:
    3210:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3214:	ldr	x17, [x16, #216]
    3218:	add	x16, x16, #0xd8
    321c:	br	x17

0000000000003220 <__ctype_b_loc@plt>:
    3220:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3224:	ldr	x17, [x16, #224]
    3228:	add	x16, x16, #0xe0
    322c:	br	x17

0000000000003230 <mmap@plt>:
    3230:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3234:	ldr	x17, [x16, #232]
    3238:	add	x16, x16, #0xe8
    323c:	br	x17

0000000000003240 <strtol@plt>:
    3240:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3244:	ldr	x17, [x16, #240]
    3248:	add	x16, x16, #0xf0
    324c:	br	x17

0000000000003250 <free@plt>:
    3250:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3254:	ldr	x17, [x16, #248]
    3258:	add	x16, x16, #0xf8
    325c:	br	x17

0000000000003260 <rawmemchr@plt>:
    3260:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3264:	ldr	x17, [x16, #256]
    3268:	add	x16, x16, #0x100
    326c:	br	x17

0000000000003270 <pwrite@plt>:
    3270:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3274:	ldr	x17, [x16, #264]
    3278:	add	x16, x16, #0x108
    327c:	br	x17

0000000000003280 <deflateEnd@plt>:
    3280:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3284:	ldr	x17, [x16, #272]
    3288:	add	x16, x16, #0x110
    328c:	br	x17

0000000000003290 <gelf_getchdr@plt>:
    3290:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3294:	ldr	x17, [x16, #280]
    3298:	add	x16, x16, #0x118
    329c:	br	x17

00000000000032a0 <pread@plt>:
    32a0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32a4:	ldr	x17, [x16, #288]
    32a8:	add	x16, x16, #0x120
    32ac:	br	x17

00000000000032b0 <memrchr@plt>:
    32b0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32b4:	ldr	x17, [x16, #296]
    32b8:	add	x16, x16, #0x128
    32bc:	br	x17

00000000000032c0 <inflateInit_@plt>:
    32c0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32c4:	ldr	x17, [x16, #304]
    32c8:	add	x16, x16, #0x130
    32cc:	br	x17

00000000000032d0 <fcntl@plt>:
    32d0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32d4:	ldr	x17, [x16, #312]
    32d8:	add	x16, x16, #0x138
    32dc:	br	x17

00000000000032e0 <elf32_getshdr@plt>:
    32e0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32e4:	ldr	x17, [x16, #320]
    32e8:	add	x16, x16, #0x140
    32ec:	br	x17

00000000000032f0 <munmap@plt>:
    32f0:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    32f4:	ldr	x17, [x16, #328]
    32f8:	add	x16, x16, #0x148
    32fc:	br	x17

0000000000003300 <gelf_getehdr@plt>:
    3300:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3304:	ldr	x17, [x16, #336]
    3308:	add	x16, x16, #0x150
    330c:	br	x17

0000000000003310 <memchr@plt>:
    3310:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3314:	ldr	x17, [x16, #344]
    3318:	add	x16, x16, #0x158
    331c:	br	x17

0000000000003320 <sysconf@plt>:
    3320:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3324:	ldr	x17, [x16, #352]
    3328:	add	x16, x16, #0x160
    332c:	br	x17

0000000000003330 <elf_getdata@plt>:
    3330:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3334:	ldr	x17, [x16, #360]
    3338:	add	x16, x16, #0x168
    333c:	br	x17

0000000000003340 <__fxstat@plt>:
    3340:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3344:	ldr	x17, [x16, #368]
    3348:	add	x16, x16, #0x170
    334c:	br	x17

0000000000003350 <dcgettext@plt>:
    3350:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3354:	ldr	x17, [x16, #376]
    3358:	add	x16, x16, #0x178
    335c:	br	x17

0000000000003360 <inflateReset@plt>:
    3360:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3364:	ldr	x17, [x16, #384]
    3368:	add	x16, x16, #0x180
    336c:	br	x17

0000000000003370 <ftruncate@plt>:
    3370:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3374:	ldr	x17, [x16, #392]
    3378:	add	x16, x16, #0x188
    337c:	br	x17

0000000000003380 <__assert_fail@plt>:
    3380:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3384:	ldr	x17, [x16, #400]
    3388:	add	x16, x16, #0x190
    338c:	br	x17

0000000000003390 <__errno_location@plt>:
    3390:	adrp	x16, 28000 <memcpy@GLIBC_2.17>
    3394:	ldr	x17, [x16, #408]
    3398:	add	x16, x16, #0x198
    339c:	br	x17

00000000000033a0 <*ABS*@plt>:
    33a0:	stp	x2, x3, [sp, #-16]!
    33a4:	adrp	x2, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    33a8:	adrp	x3, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    33ac:	ldr	x2, [x2, #4064]
    33b0:	add	x3, x3, #0xfe8
    33b4:	br	x2
    33b8:	nop
    33bc:	nop

Disassembly of section .text:

00000000000033c0 <elf_version@@ELFUTILS_1.0-0x108>:
    33c0:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    33c4:	ldr	x0, [x0, #4048]
    33c8:	cbz	x0, 33d0 <*ABS*@plt+0x30>
    33cc:	b	31e0 <__gmon_start__@plt>
    33d0:	ret
    33d4:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    33d8:	add	x0, x0, #0x1b8
    33dc:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    33e0:	add	x1, x1, #0x1b8
    33e4:	cmp	x0, x1
    33e8:	b.eq	3414 <*ABS*@plt+0x74>  // b.none
    33ec:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    33f0:	ldr	x1, [x1, #4032]
    33f4:	cbz	x1, 3414 <*ABS*@plt+0x74>
    33f8:	stp	x29, x30, [sp, #-16]!
    33fc:	mov	x29, sp
    3400:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    3404:	add	x0, x0, #0x1b8
    3408:	blr	x1
    340c:	ldp	x29, x30, [sp], #16
    3410:	ret
    3414:	ret
    3418:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    341c:	add	x0, x0, #0x1b8
    3420:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    3424:	add	x1, x1, #0x1b8
    3428:	sub	x0, x0, x1
    342c:	lsr	x1, x0, #63
    3430:	add	x0, x1, x0, asr #3
    3434:	cmp	xzr, x0, asr #1
    3438:	b.eq	3468 <*ABS*@plt+0xc8>  // b.none
    343c:	asr	x1, x0, #1
    3440:	adrp	x2, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    3444:	ldr	x2, [x2, #4056]
    3448:	cbz	x2, 3468 <*ABS*@plt+0xc8>
    344c:	stp	x29, x30, [sp, #-16]!
    3450:	mov	x29, sp
    3454:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    3458:	add	x0, x0, #0x1b8
    345c:	blr	x2
    3460:	ldp	x29, x30, [sp], #16
    3464:	ret
    3468:	ret
    346c:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    3470:	ldrb	w0, [x0, #440]
    3474:	cbnz	w0, 34b0 <*ABS*@plt+0x110>
    3478:	stp	x29, x30, [sp, #-16]!
    347c:	mov	x29, sp
    3480:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    3484:	ldr	x0, [x0, #4040]
    3488:	cbz	x0, 3498 <*ABS*@plt+0xf8>
    348c:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    3490:	ldr	x0, [x0, #432]
    3494:	bl	30e0 <__cxa_finalize@plt>
    3498:	bl	33d4 <*ABS*@plt+0x34>
    349c:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    34a0:	mov	w1, #0x1                   	// #1
    34a4:	strb	w1, [x0, #440]
    34a8:	ldp	x29, x30, [sp], #16
    34ac:	ret
    34b0:	ret
    34b4:	stp	x29, x30, [sp, #-16]!
    34b8:	mov	x29, sp
    34bc:	bl	3418 <*ABS*@plt+0x78>
    34c0:	ldp	x29, x30, [sp], #16
    34c4:	ret

00000000000034c8 <elf_version@@ELFUTILS_1.0>:
    34c8:	cbz	w0, 3500 <elf_version@@ELFUTILS_1.0+0x38>
    34cc:	cmp	w0, #0x1
    34d0:	b.ne	34e4 <elf_version@@ELFUTILS_1.0+0x1c>  // b.any
    34d4:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    34d8:	mov	w2, #0x1                   	// #1
    34dc:	str	w2, [x1, #444]
    34e0:	ret
    34e4:	stp	x29, x30, [sp, #-16]!
    34e8:	mov	x29, sp
    34ec:	mov	w0, #0x2                   	// #2
    34f0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    34f4:	mov	w0, #0x0                   	// #0
    34f8:	ldp	x29, x30, [sp], #16
    34fc:	ret
    3500:	mov	w0, #0x1                   	// #1
    3504:	ret

0000000000003508 <elf_hash@@ELFUTILS_1.0>:
    3508:	mov	x2, x0
    350c:	ldrb	w0, [x0]
    3510:	cbz	x0, 3580 <elf_hash@@ELFUTILS_1.0+0x78>
    3514:	ldrb	w1, [x2, #1]
    3518:	cbz	w1, 3580 <elf_hash@@ELFUTILS_1.0+0x78>
    351c:	and	x1, x1, #0xff
    3520:	add	x0, x1, x0, lsl #4
    3524:	ldrb	w1, [x2, #2]
    3528:	cbz	w1, 3580 <elf_hash@@ELFUTILS_1.0+0x78>
    352c:	and	x1, x1, #0xff
    3530:	add	x0, x1, x0, lsl #4
    3534:	ldrb	w1, [x2, #3]
    3538:	cbz	w1, 3580 <elf_hash@@ELFUTILS_1.0+0x78>
    353c:	and	x1, x1, #0xff
    3540:	add	x0, x1, x0, lsl #4
    3544:	ldrb	w1, [x2, #4]
    3548:	cbz	w1, 3580 <elf_hash@@ELFUTILS_1.0+0x78>
    354c:	and	x1, x1, #0xff
    3550:	add	x1, x1, x0, lsl #4
    3554:	add	x3, x2, #0x5
    3558:	ldrb	w0, [x2, #5]
    355c:	cbz	w0, 357c <elf_hash@@ELFUTILS_1.0+0x74>
    3560:	and	x0, x0, #0xff
    3564:	add	x0, x0, x1, lsl #4
    3568:	lsr	x1, x0, #24
    356c:	and	x1, x1, #0xf0
    3570:	eor	x1, x0, x1
    3574:	ldrb	w0, [x3, #1]!
    3578:	cbnz	w0, 3560 <elf_hash@@ELFUTILS_1.0+0x58>
    357c:	and	x0, x1, #0xfffffff
    3580:	ret

0000000000003584 <elf_errno@@ELFUTILS_1.0>:
    3584:	stp	x29, x30, [sp, #-16]!
    3588:	mov	x29, sp
    358c:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    3590:	ldr	x1, [x0, #416]
    3594:	add	x0, x0, #0x1a0
    3598:	blr	x1
    359c:	mrs	x1, tpidr_el0
    35a0:	ldr	w2, [x1, x0]
    35a4:	str	wzr, [x1, x0]
    35a8:	mov	w0, w2
    35ac:	ldp	x29, x30, [sp], #16
    35b0:	ret
    35b4:	stp	x29, x30, [sp, #-16]!
    35b8:	mov	x29, sp
    35bc:	cmp	w0, #0x33
    35c0:	csinc	w1, w0, wzr, cc  // cc = lo, ul, last
    35c4:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    35c8:	ldr	x2, [x0, #416]
    35cc:	add	x0, x0, #0x1a0
    35d0:	blr	x2
    35d4:	mrs	x2, tpidr_el0
    35d8:	str	w1, [x2, x0]
    35dc:	ldp	x29, x30, [sp], #16
    35e0:	ret

00000000000035e4 <elf_errmsg@@ELFUTILS_1.0>:
    35e4:	stp	x29, x30, [sp, #-16]!
    35e8:	mov	x29, sp
    35ec:	mov	w1, w0
    35f0:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    35f4:	ldr	x2, [x0, #416]
    35f8:	add	x0, x0, #0x1a0
    35fc:	blr	x2
    3600:	mrs	x2, tpidr_el0
    3604:	ldr	w2, [x2, x0]
    3608:	cbnz	w1, 3668 <elf_errmsg@@ELFUTILS_1.0+0x84>
    360c:	adrp	x0, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    3610:	add	x0, x0, #0xd48
    3614:	ldr	x3, [x0, w2, sxtw #3]
    3618:	cmp	x3, #0x4f1
    361c:	b.hi	364c <elf_errmsg@@ELFUTILS_1.0+0x68>  // b.pmore
    3620:	mov	x0, #0x0                   	// #0
    3624:	cbz	w2, 36b0 <elf_errmsg@@ELFUTILS_1.0+0xcc>
    3628:	adrp	x1, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    362c:	add	x1, x1, #0xd48
    3630:	mov	w2, #0x5                   	// #5
    3634:	add	x1, x1, #0x1a8
    3638:	add	x1, x1, x3
    363c:	adrp	x0, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    3640:	add	x0, x0, #0xcf8
    3644:	bl	3350 <dcgettext@plt>
    3648:	b	36b0 <elf_errmsg@@ELFUTILS_1.0+0xcc>
    364c:	add	x3, x0, #0x198
    3650:	mov	w2, #0x15b                 	// #347
    3654:	adrp	x1, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    3658:	add	x1, x1, #0xcc0
    365c:	adrp	x0, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    3660:	add	x0, x0, #0xcd0
    3664:	bl	3380 <__assert_fail@plt>
    3668:	add	w0, w1, #0x1
    366c:	cmp	w0, #0x33
    3670:	b.hi	36b8 <elf_errmsg@@ELFUTILS_1.0+0xd4>  // b.pmore
    3674:	cmn	w1, #0x1
    3678:	csel	w2, w2, w1, eq  // eq = none
    367c:	adrp	x0, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    3680:	add	x0, x0, #0xd48
    3684:	ldr	x1, [x0, w2, sxtw #3]
    3688:	cmp	x1, #0x4f1
    368c:	b.hi	36d8 <elf_errmsg@@ELFUTILS_1.0+0xf4>  // b.pmore
    3690:	adrp	x0, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    3694:	add	x0, x0, #0xd48
    3698:	mov	w2, #0x5                   	// #5
    369c:	add	x0, x0, #0x1a8
    36a0:	add	x1, x0, x1
    36a4:	adrp	x0, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    36a8:	add	x0, x0, #0xcf8
    36ac:	bl	3350 <dcgettext@plt>
    36b0:	ldp	x29, x30, [sp], #16
    36b4:	ret
    36b8:	mov	w2, #0x5                   	// #5
    36bc:	adrp	x1, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    36c0:	add	x1, x1, #0xd48
    36c4:	add	x1, x1, #0x1b1
    36c8:	adrp	x0, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    36cc:	add	x0, x0, #0xcf8
    36d0:	bl	3350 <dcgettext@plt>
    36d4:	b	36b0 <elf_errmsg@@ELFUTILS_1.0+0xcc>
    36d8:	add	x3, x0, #0x198
    36dc:	mov	w2, #0x161                 	// #353
    36e0:	adrp	x1, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    36e4:	add	x1, x1, #0xcc0
    36e8:	adrp	x0, 12000 <gelf_getchdr@@ELFUTILS_1.7+0x124>
    36ec:	add	x0, x0, #0xd08
    36f0:	bl	3380 <__assert_fail@plt>

00000000000036f4 <elf_fill@@ELFUTILS_1.0>:
    36f4:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    36f8:	str	w0, [x1, #448]
    36fc:	ret
    3700:	stp	x29, x30, [sp, #-192]!
    3704:	mov	x29, sp
    3708:	stp	x21, x22, [sp, #32]
    370c:	stp	x23, x24, [sp, #48]
    3710:	mov	w24, w0
    3714:	mov	x22, x1
    3718:	ldrb	w1, [x2, #4]
    371c:	sub	w0, w1, #0x1
    3720:	and	w0, w0, #0xff
    3724:	cmp	w0, #0x1
    3728:	b.hi	398c <elf_fill@@ELFUTILS_1.0+0x298>  // b.pmore
    372c:	stp	x19, x20, [sp, #16]
    3730:	stp	x25, x26, [sp, #64]
    3734:	mov	x19, x2
    3738:	mov	x20, x3
    373c:	mov	x21, x4
    3740:	mov	w23, w5
    3744:	mov	x25, x6
    3748:	ldrb	w2, [x2, #5]
    374c:	sub	w0, w2, #0x1
    3750:	and	w0, w0, #0xff
    3754:	cmp	w0, #0x1
    3758:	b.hi	3984 <elf_fill@@ELFUTILS_1.0+0x290>  // b.pmore
    375c:	stp	x27, x28, [sp, #80]
    3760:	cmp	w2, #0x1
    3764:	b.eq	399c <elf_fill@@ELFUTILS_1.0+0x2a8>  // b.none
    3768:	cmp	w1, #0x1
    376c:	b.eq	4190 <elf_fill@@ELFUTILS_1.0+0xa9c>  // b.none
    3770:	ldp	x0, x1, [x19]
    3774:	stp	x0, x1, [sp, #128]
    3778:	ldp	x0, x1, [x19, #16]
    377c:	stp	x0, x1, [sp, #144]
    3780:	ldp	x0, x1, [x19, #32]
    3784:	stp	x0, x1, [sp, #160]
    3788:	ldp	x0, x1, [x19, #48]
    378c:	stp	x0, x1, [sp, #176]
    3790:	ldrh	w0, [sp, #188]
    3794:	rev16	w0, w0
    3798:	strh	w0, [sp, #188]
    379c:	ldr	x0, [sp, #168]
    37a0:	rev	x0, x0
    37a4:	str	x0, [sp, #168]
    37a8:	add	x26, sp, #0x80
    37ac:	ldrh	w27, [x26, #60]
    37b0:	cbz	x27, 3b08 <elf_fill@@ELFUTILS_1.0+0x414>
    37b4:	ldr	x0, [x26, #40]
    37b8:	cmp	x21, x0
    37bc:	b.cs	3c34 <elf_fill@@ELFUTILS_1.0+0x540>  // b.hs, b.nlast
    37c0:	mov	x27, #0x0                   	// #0
    37c4:	ldrb	w26, [x19, #4]
    37c8:	cmp	w26, #0x1
    37cc:	b.eq	37e0 <elf_fill@@ELFUTILS_1.0+0xec>  // b.none
    37d0:	mov	x0, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
    37d4:	movk	x0, #0xf0, lsl #48
    37d8:	cmp	x27, x0
    37dc:	b.hi	3ca8 <elf_fill@@ELFUTILS_1.0+0x5b4>  // b.pmore
    37e0:	cbnz	x27, 3cc4 <elf_fill@@ELFUTILS_1.0+0x5d0>
    37e4:	cmp	w23, #0x2
    37e8:	ccmp	w23, #0x9, #0x4, ne  // ne = any
    37ec:	cset	x28, eq  // eq = none
    37f0:	lsl	x1, x28, #1
    37f4:	add	x1, x1, x28
    37f8:	add	x1, x28, x1, lsl #2
    37fc:	lsl	x1, x1, #4
    3800:	add	x1, x1, #0x108
    3804:	mov	x0, #0x1                   	// #1
    3808:	bl	3180 <calloc@plt>
    380c:	cbz	x0, 3d38 <elf_fill@@ELFUTILS_1.0+0x644>
    3810:	mov	w1, #0x3                   	// #3
    3814:	str	w1, [x0, #24]
    3818:	mov	w1, #0x1                   	// #1
    381c:	str	w1, [x0, #60]
    3820:	str	w23, [x0, #28]
    3824:	str	w24, [x0, #36]
    3828:	str	x20, [x0, #40]
    382c:	str	x21, [x0, #48]
    3830:	str	x22, [x0]
    3834:	str	x25, [x0, #8]
    3838:	mov	w1, w27
    383c:	str	w1, [x0, #200]
    3840:	str	w28, [x0, #204]
    3844:	mov	w1, #0xa                   	// #10
    3848:	str	w1, [x0, #112]
    384c:	str	w26, [x0, #32]
    3850:	cmp	w26, #0x1
    3854:	b.eq	3d54 <elf_fill@@ELFUTILS_1.0+0x660>  // b.none
    3858:	mov	x7, x20
    385c:	add	x20, x22, x20
    3860:	cbz	x22, 3f8c <elf_fill@@ELFUTILS_1.0+0x898>
    3864:	ldrb	w1, [x19, #5]
    3868:	cmp	w1, #0x1
    386c:	b.eq	3f78 <elf_fill@@ELFUTILS_1.0+0x884>  // b.none
    3870:	add	x1, x0, #0x88
    3874:	ldp	x2, x3, [x19]
    3878:	stp	x2, x3, [x0, #136]
    387c:	ldp	x2, x3, [x19, #16]
    3880:	stp	x2, x3, [x0, #152]
    3884:	ldp	x2, x3, [x19, #32]
    3888:	stp	x2, x3, [x0, #168]
    388c:	ldp	x2, x3, [x19, #48]
    3890:	stp	x2, x3, [x0, #184]
    3894:	str	x1, [x0, #72]
    3898:	ldrh	w1, [x0, #152]
    389c:	rev16	w1, w1
    38a0:	strh	w1, [x0, #152]
    38a4:	ldrh	w1, [x0, #154]
    38a8:	rev16	w1, w1
    38ac:	strh	w1, [x0, #154]
    38b0:	ldr	w1, [x0, #156]
    38b4:	rev	w1, w1
    38b8:	str	w1, [x0, #156]
    38bc:	ldr	x1, [x0, #160]
    38c0:	rev	x1, x1
    38c4:	str	x1, [x0, #160]
    38c8:	ldr	x1, [x0, #168]
    38cc:	rev	x1, x1
    38d0:	str	x1, [x0, #168]
    38d4:	ldr	x1, [x0, #176]
    38d8:	rev	x1, x1
    38dc:	str	x1, [x0, #176]
    38e0:	ldr	w1, [x0, #184]
    38e4:	rev	w1, w1
    38e8:	str	w1, [x0, #184]
    38ec:	ldrh	w1, [x0, #188]
    38f0:	rev16	w1, w1
    38f4:	strh	w1, [x0, #188]
    38f8:	ldrh	w1, [x0, #190]
    38fc:	rev16	w1, w1
    3900:	strh	w1, [x0, #190]
    3904:	ldrh	w1, [x0, #192]
    3908:	rev16	w1, w1
    390c:	strh	w1, [x0, #192]
    3910:	ldrh	w1, [x0, #194]
    3914:	rev16	w1, w1
    3918:	strh	w1, [x0, #194]
    391c:	ldrh	w1, [x0, #196]
    3920:	rev16	w1, w1
    3924:	strh	w1, [x0, #196]
    3928:	ldrh	w1, [x0, #198]
    392c:	rev16	w1, w1
    3930:	strh	w1, [x0, #198]
    3934:	add	x1, x0, #0x158
    3938:	mov	x2, #0x0                   	// #0
    393c:	add	x3, x0, #0xc8
    3940:	cbz	x27, 3960 <elf_fill@@ELFUTILS_1.0+0x26c>
    3944:	str	x2, [x1]
    3948:	str	x0, [x1, #8]
    394c:	str	x3, [x1, #72]
    3950:	add	x2, x2, #0x1
    3954:	add	x1, x1, #0xd0
    3958:	cmp	x2, x27
    395c:	b.ne	3944 <elf_fill@@ELFUTILS_1.0+0x250>  // b.any
    3960:	add	x1, x0, #0xc8
    3964:	str	x1, [x0, #96]
    3968:	ldp	x19, x20, [sp, #16]
    396c:	ldp	x25, x26, [sp, #64]
    3970:	ldp	x27, x28, [sp, #80]
    3974:	ldp	x21, x22, [sp, #32]
    3978:	ldp	x23, x24, [sp, #48]
    397c:	ldp	x29, x30, [sp], #192
    3980:	ret
    3984:	ldp	x19, x20, [sp, #16]
    3988:	ldp	x25, x26, [sp, #64]
    398c:	mov	w0, #0xa                   	// #10
    3990:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    3994:	mov	x0, #0x0                   	// #0
    3998:	b	3974 <elf_fill@@ELFUTILS_1.0+0x280>
    399c:	cmp	w1, #0x1
    39a0:	b.eq	4160 <elf_fill@@ELFUTILS_1.0+0xa6c>  // b.none
    39a4:	tst	x19, #0x7
    39a8:	b.eq	3b00 <elf_fill@@ELFUTILS_1.0+0x40c>  // b.none
    39ac:	ldp	x0, x1, [x19]
    39b0:	stp	x0, x1, [sp, #128]
    39b4:	ldp	x0, x1, [x19, #16]
    39b8:	stp	x0, x1, [sp, #144]
    39bc:	ldp	x0, x1, [x19, #32]
    39c0:	stp	x0, x1, [sp, #160]
    39c4:	ldp	x0, x1, [x19, #48]
    39c8:	stp	x0, x1, [sp, #176]
    39cc:	b	37a8 <elf_fill@@ELFUTILS_1.0+0xb4>
    39d0:	ldr	w0, [x26, #32]
    39d4:	cbz	w0, 37c4 <elf_fill@@ELFUTILS_1.0+0xd0>
    39d8:	mov	w1, w0
    39dc:	cmp	x21, w0, uxtw
    39e0:	b.ls	37c4 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.plast
    39e4:	sub	x3, x21, x1
    39e8:	cmp	x3, #0x27
    39ec:	b.ls	37c4 <elf_fill@@ELFUTILS_1.0+0xd0>  // b.plast
    39f0:	cmp	x22, #0x0
    39f4:	ccmp	w2, #0x1, #0x0, ne  // ne = any
    39f8:	b.eq	3a30 <elf_fill@@ELFUTILS_1.0+0x33c>  // b.none
    39fc:	cbz	x22, 3a48 <elf_fill@@ELFUTILS_1.0+0x354>
    3a00:	add	x0, x22, x1
    3a04:	add	x0, x0, x20
    3a08:	ldr	w0, [x0, #20]
    3a0c:	str	w0, [sp, #120]
    3a10:	ldrb	w0, [x19, #5]
    3a14:	cmp	w0, #0x1
    3a18:	b.eq	3a28 <elf_fill@@ELFUTILS_1.0+0x334>  // b.none
    3a1c:	ldr	w0, [sp, #120]
    3a20:	rev	w0, w0
    3a24:	str	w0, [sp, #120]
    3a28:	ldr	w27, [sp, #120]
    3a2c:	b	41d4 <elf_fill@@ELFUTILS_1.0+0xae0>
    3a30:	add	x0, x22, x1
    3a34:	tst	x0, #0x3
    3a38:	b.ne	3a00 <elf_fill@@ELFUTILS_1.0+0x30c>  // b.any
    3a3c:	add	x0, x0, x20
    3a40:	ldr	w27, [x0, #20]
    3a44:	b	41d4 <elf_fill@@ELFUTILS_1.0+0xae0>
    3a48:	add	x0, x20, w0, uxtw
    3a4c:	add	x0, x0, #0x14
    3a50:	str	x0, [sp, #96]
    3a54:	mov	x27, #0x0                   	// #0
    3a58:	add	x0, sp, #0x78
    3a5c:	str	x0, [sp, #104]
    3a60:	b	3a78 <elf_fill@@ELFUTILS_1.0+0x384>
    3a64:	cmp	x0, #0x0
    3a68:	b.le	3ab4 <elf_fill@@ELFUTILS_1.0+0x3c0>
    3a6c:	add	x27, x27, x0
    3a70:	cmp	x27, #0x3
    3a74:	b.hi	3ab8 <elf_fill@@ELFUTILS_1.0+0x3c4>  // b.pmore
    3a78:	ldr	x0, [sp, #96]
    3a7c:	add	x3, x0, x27
    3a80:	mov	x0, #0x4                   	// #4
    3a84:	sub	x2, x0, x27
    3a88:	ldr	x0, [sp, #104]
    3a8c:	add	x1, x0, x27
    3a90:	mov	w0, w24
    3a94:	bl	32a0 <pread@plt>
    3a98:	mov	x28, x0
    3a9c:	cmn	x0, #0x1
    3aa0:	b.ne	3a64 <elf_fill@@ELFUTILS_1.0+0x370>  // b.any
    3aa4:	bl	3390 <__errno_location@plt>
    3aa8:	ldr	w0, [x0]
    3aac:	cmp	w0, #0x4
    3ab0:	b.eq	3a78 <elf_fill@@ELFUTILS_1.0+0x384>  // b.none
    3ab4:	tbnz	x28, #63, 3ae0 <elf_fill@@ELFUTILS_1.0+0x3ec>
    3ab8:	cmp	x27, #0x4
    3abc:	b.eq	3a10 <elf_fill@@ELFUTILS_1.0+0x31c>  // b.none
    3ac0:	tbnz	x27, #63, 3ae0 <elf_fill@@ELFUTILS_1.0+0x3ec>
    3ac4:	mov	w0, #0xa                   	// #10
    3ac8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    3acc:	mov	x0, x22
    3ad0:	ldp	x19, x20, [sp, #16]
    3ad4:	ldp	x25, x26, [sp, #64]
    3ad8:	ldp	x27, x28, [sp, #80]
    3adc:	b	3974 <elf_fill@@ELFUTILS_1.0+0x280>
    3ae0:	mov	w0, #0x9                   	// #9
    3ae4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    3ae8:	b	3acc <elf_fill@@ELFUTILS_1.0+0x3d8>
    3aec:	sub	x0, x21, x0
    3af0:	add	x1, x27, x27, lsl #2
    3af4:	cmp	x0, x1, lsl #3
    3af8:	csel	x27, x27, xzr, cs  // cs = hs, nlast
    3afc:	b	37c4 <elf_fill@@ELFUTILS_1.0+0xd0>
    3b00:	mov	x26, x19
    3b04:	b	37ac <elf_fill@@ELFUTILS_1.0+0xb8>
    3b08:	ldr	x0, [x26, #40]
    3b0c:	cbz	x0, 3c48 <elf_fill@@ELFUTILS_1.0+0x554>
    3b10:	cmp	x21, x0
    3b14:	b.ls	3c4c <elf_fill@@ELFUTILS_1.0+0x558>  // b.plast
    3b18:	add	x1, x0, #0x40
    3b1c:	cmp	x21, x1
    3b20:	b.cc	3c4c <elf_fill@@ELFUTILS_1.0+0x558>  // b.lo, b.ul, b.last
    3b24:	cmp	x22, #0x0
    3b28:	ccmp	w2, #0x1, #0x0, ne  // ne = any
    3b2c:	b.eq	3b7c <elf_fill@@ELFUTILS_1.0+0x488>  // b.none
    3b30:	cbz	x22, 3b98 <elf_fill@@ELFUTILS_1.0+0x4a4>
    3b34:	add	x0, x22, x0
    3b38:	add	x0, x0, x20
    3b3c:	ldr	x0, [x0, #32]
    3b40:	str	x0, [sp, #120]
    3b44:	ldrb	w0, [x19, #5]
    3b48:	cmp	w0, #0x1
    3b4c:	b.eq	3b5c <elf_fill@@ELFUTILS_1.0+0x468>  // b.none
    3b50:	ldr	x0, [sp, #120]
    3b54:	rev	x0, x0
    3b58:	str	x0, [sp, #120]
    3b5c:	ldr	x27, [sp, #120]
    3b60:	mov	x0, #0xffffffff            	// #4294967295
    3b64:	cmp	x27, x0
    3b68:	b.ls	37b4 <elf_fill@@ELFUTILS_1.0+0xc0>  // b.plast
    3b6c:	mov	w0, #0xa                   	// #10
    3b70:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    3b74:	mov	x27, #0xffffffffffffffff    	// #-1
    3b78:	b	3c4c <elf_fill@@ELFUTILS_1.0+0x558>
    3b7c:	add	x1, x22, x0
    3b80:	tst	x1, #0x7
    3b84:	b.ne	3b34 <elf_fill@@ELFUTILS_1.0+0x440>  // b.any
    3b88:	add	x0, x1, x20
    3b8c:	ldr	x0, [x0, #32]
    3b90:	str	x0, [sp, #120]
    3b94:	b	3b5c <elf_fill@@ELFUTILS_1.0+0x468>
    3b98:	add	x1, x20, #0x20
    3b9c:	add	x0, x1, x0
    3ba0:	str	x0, [sp, #96]
    3ba4:	mov	x27, #0x0                   	// #0
    3ba8:	add	x0, sp, #0x78
    3bac:	str	x0, [sp, #104]
    3bb0:	b	3bc8 <elf_fill@@ELFUTILS_1.0+0x4d4>
    3bb4:	cmp	x0, #0x0
    3bb8:	b.le	3c04 <elf_fill@@ELFUTILS_1.0+0x510>
    3bbc:	add	x27, x27, x0
    3bc0:	cmp	x27, #0x7
    3bc4:	b.hi	3c08 <elf_fill@@ELFUTILS_1.0+0x514>  // b.pmore
    3bc8:	ldr	x0, [sp, #96]
    3bcc:	add	x3, x0, x27
    3bd0:	mov	x0, #0x8                   	// #8
    3bd4:	sub	x2, x0, x27
    3bd8:	ldr	x0, [sp, #104]
    3bdc:	add	x1, x0, x27
    3be0:	mov	w0, w24
    3be4:	bl	32a0 <pread@plt>
    3be8:	mov	x28, x0
    3bec:	cmn	x0, #0x1
    3bf0:	b.ne	3bb4 <elf_fill@@ELFUTILS_1.0+0x4c0>  // b.any
    3bf4:	bl	3390 <__errno_location@plt>
    3bf8:	ldr	w0, [x0]
    3bfc:	cmp	w0, #0x4
    3c00:	b.eq	3bc8 <elf_fill@@ELFUTILS_1.0+0x4d4>  // b.none
    3c04:	tbnz	x28, #63, 3c24 <elf_fill@@ELFUTILS_1.0+0x530>
    3c08:	cmp	x27, #0x8
    3c0c:	b.eq	3b44 <elf_fill@@ELFUTILS_1.0+0x450>  // b.none
    3c10:	tbnz	x27, #63, 3c24 <elf_fill@@ELFUTILS_1.0+0x530>
    3c14:	mov	w0, #0xa                   	// #10
    3c18:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    3c1c:	mov	x27, #0xffffffffffffffff    	// #-1
    3c20:	b	3c4c <elf_fill@@ELFUTILS_1.0+0x558>
    3c24:	mov	w0, #0x9                   	// #9
    3c28:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    3c2c:	mov	x27, #0xffffffffffffffff    	// #-1
    3c30:	b	3c4c <elf_fill@@ELFUTILS_1.0+0x558>
    3c34:	sub	x0, x21, x0
    3c38:	cmp	x0, x27, lsl #6
    3c3c:	b.cs	3c4c <elf_fill@@ELFUTILS_1.0+0x558>  // b.hs, b.nlast
    3c40:	mov	x27, #0x0                   	// #0
    3c44:	b	37c4 <elf_fill@@ELFUTILS_1.0+0xd0>
    3c48:	mov	x27, x0
    3c4c:	mov	x0, #0x0                   	// #0
    3c50:	cmn	x27, #0x1
    3c54:	b.ne	3c68 <elf_fill@@ELFUTILS_1.0+0x574>  // b.any
    3c58:	ldp	x19, x20, [sp, #16]
    3c5c:	ldp	x25, x26, [sp, #64]
    3c60:	ldp	x27, x28, [sp, #80]
    3c64:	b	3974 <elf_fill@@ELFUTILS_1.0+0x280>
    3c68:	ldrb	w26, [x19, #4]
    3c6c:	cmp	w26, #0x1
    3c70:	b.ne	37d0 <elf_fill@@ELFUTILS_1.0+0xdc>  // b.any
    3c74:	mov	x0, #0x842                 	// #2114
    3c78:	movk	x0, #0x8421, lsl #16
    3c7c:	movk	x0, #0x4210, lsl #32
    3c80:	movk	x0, #0x108, lsl #48
    3c84:	cmp	x27, x0
    3c88:	b.ls	37e0 <elf_fill@@ELFUTILS_1.0+0xec>  // b.plast
    3c8c:	mov	w0, #0xa                   	// #10
    3c90:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    3c94:	mov	x0, #0x0                   	// #0
    3c98:	ldp	x19, x20, [sp, #16]
    3c9c:	ldp	x25, x26, [sp, #64]
    3ca0:	ldp	x27, x28, [sp, #80]
    3ca4:	b	3974 <elf_fill@@ELFUTILS_1.0+0x280>
    3ca8:	mov	w0, #0xa                   	// #10
    3cac:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    3cb0:	mov	x0, #0x0                   	// #0
    3cb4:	ldp	x19, x20, [sp, #16]
    3cb8:	ldp	x25, x26, [sp, #64]
    3cbc:	ldp	x27, x28, [sp, #80]
    3cc0:	b	3974 <elf_fill@@ELFUTILS_1.0+0x280>
    3cc4:	add	x1, x27, x27, lsl #1
    3cc8:	add	x1, x27, x1, lsl #2
    3ccc:	lsl	x1, x1, #4
    3cd0:	add	x1, x1, #0x108
    3cd4:	mov	x0, #0x1                   	// #1
    3cd8:	bl	3180 <calloc@plt>
    3cdc:	cbz	x0, 3d38 <elf_fill@@ELFUTILS_1.0+0x644>
    3ce0:	mov	w1, #0x3                   	// #3
    3ce4:	str	w1, [x0, #24]
    3ce8:	mov	w1, #0x1                   	// #1
    3cec:	str	w1, [x0, #60]
    3cf0:	str	w23, [x0, #28]
    3cf4:	str	w24, [x0, #36]
    3cf8:	str	x20, [x0, #40]
    3cfc:	str	x21, [x0, #48]
    3d00:	str	x22, [x0]
    3d04:	str	x25, [x0, #8]
    3d08:	mov	w1, w27
    3d0c:	mov	x28, x27
    3d10:	tst	x27, #0xffffffff00000000
    3d14:	b.eq	383c <elf_fill@@ELFUTILS_1.0+0x148>  // b.none
    3d18:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    3d1c:	add	x3, x3, #0x4c8
    3d20:	mov	w2, #0x13f                 	// #319
    3d24:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    3d28:	add	x1, x1, #0x3e8
    3d2c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    3d30:	add	x0, x0, #0x3f8
    3d34:	bl	3380 <__assert_fail@plt>
    3d38:	mov	w0, #0x8                   	// #8
    3d3c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    3d40:	mov	x0, #0x0                   	// #0
    3d44:	ldp	x19, x20, [sp, #16]
    3d48:	ldp	x25, x26, [sp, #64]
    3d4c:	ldp	x27, x28, [sp, #80]
    3d50:	b	3974 <elf_fill@@ELFUTILS_1.0+0x280>
    3d54:	mov	x6, x20
    3d58:	add	x20, x22, x20
    3d5c:	cbz	x22, 3e88 <elf_fill@@ELFUTILS_1.0+0x794>
    3d60:	ldrb	w1, [x19, #5]
    3d64:	cmp	w1, #0x1
    3d68:	b.eq	3e74 <elf_fill@@ELFUTILS_1.0+0x780>  // b.none
    3d6c:	add	x1, x0, #0x88
    3d70:	ldp	x2, x3, [x19]
    3d74:	stp	x2, x3, [x0, #136]
    3d78:	ldp	x2, x3, [x19, #16]
    3d7c:	stp	x2, x3, [x0, #152]
    3d80:	ldp	x2, x3, [x19, #32]
    3d84:	stp	x2, x3, [x0, #168]
    3d88:	ldr	w2, [x19, #48]
    3d8c:	str	w2, [x0, #184]
    3d90:	str	x1, [x0, #72]
    3d94:	ldrh	w1, [x0, #152]
    3d98:	rev16	w1, w1
    3d9c:	strh	w1, [x0, #152]
    3da0:	ldrh	w1, [x0, #154]
    3da4:	rev16	w1, w1
    3da8:	strh	w1, [x0, #154]
    3dac:	ldr	w1, [x0, #156]
    3db0:	rev	w1, w1
    3db4:	str	w1, [x0, #156]
    3db8:	ldr	w1, [x0, #160]
    3dbc:	rev	w1, w1
    3dc0:	str	w1, [x0, #160]
    3dc4:	ldr	w1, [x0, #164]
    3dc8:	rev	w1, w1
    3dcc:	str	w1, [x0, #164]
    3dd0:	ldr	w1, [x0, #168]
    3dd4:	rev	w1, w1
    3dd8:	str	w1, [x0, #168]
    3ddc:	ldr	w1, [x0, #172]
    3de0:	rev	w1, w1
    3de4:	str	w1, [x0, #172]
    3de8:	ldrh	w1, [x0, #176]
    3dec:	rev16	w1, w1
    3df0:	strh	w1, [x0, #176]
    3df4:	ldrh	w1, [x0, #178]
    3df8:	rev16	w1, w1
    3dfc:	strh	w1, [x0, #178]
    3e00:	ldrh	w1, [x0, #180]
    3e04:	rev16	w1, w1
    3e08:	strh	w1, [x0, #180]
    3e0c:	ldrh	w1, [x0, #182]
    3e10:	rev16	w1, w1
    3e14:	strh	w1, [x0, #182]
    3e18:	ldrh	w1, [x0, #184]
    3e1c:	rev16	w1, w1
    3e20:	strh	w1, [x0, #184]
    3e24:	ldrh	w1, [x0, #186]
    3e28:	rev16	w1, w1
    3e2c:	strh	w1, [x0, #186]
    3e30:	add	x1, x0, #0x158
    3e34:	mov	x2, #0x0                   	// #0
    3e38:	add	x3, x0, #0xc8
    3e3c:	cbz	x27, 3e5c <elf_fill@@ELFUTILS_1.0+0x768>
    3e40:	str	x2, [x1]
    3e44:	str	x0, [x1, #8]
    3e48:	str	x3, [x1, #72]
    3e4c:	add	x2, x2, #0x1
    3e50:	add	x1, x1, #0xd0
    3e54:	cmp	x2, x27
    3e58:	b.ne	3e40 <elf_fill@@ELFUTILS_1.0+0x74c>  // b.any
    3e5c:	add	x1, x0, #0xc8
    3e60:	str	x1, [x0, #96]
    3e64:	ldp	x19, x20, [sp, #16]
    3e68:	ldp	x25, x26, [sp, #64]
    3e6c:	ldp	x27, x28, [sp, #80]
    3e70:	b	3974 <elf_fill@@ELFUTILS_1.0+0x280>
    3e74:	tst	x20, #0x3
    3e78:	b.ne	405c <elf_fill@@ELFUTILS_1.0+0x968>  // b.any
    3e7c:	str	x20, [x0, #72]
    3e80:	ldr	w1, [x20, #32]
    3e84:	b	408c <elf_fill@@ELFUTILS_1.0+0x998>
    3e88:	add	x1, x0, #0x88
    3e8c:	ldp	x2, x3, [x19]
    3e90:	stp	x2, x3, [x0, #136]
    3e94:	ldp	x2, x3, [x19, #16]
    3e98:	stp	x2, x3, [x0, #152]
    3e9c:	ldp	x2, x3, [x19, #32]
    3ea0:	stp	x2, x3, [x0, #168]
    3ea4:	ldr	w2, [x19, #48]
    3ea8:	str	w2, [x0, #184]
    3eac:	str	x1, [x0, #72]
    3eb0:	ldrb	w1, [x19, #5]
    3eb4:	cmp	w1, #0x1
    3eb8:	b.eq	3e30 <elf_fill@@ELFUTILS_1.0+0x73c>  // b.none
    3ebc:	b	3d94 <elf_fill@@ELFUTILS_1.0+0x6a0>
    3ec0:	bl	3250 <free@plt>
    3ec4:	mov	w0, #0xa                   	// #10
    3ec8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    3ecc:	mov	x0, #0x0                   	// #0
    3ed0:	ldp	x19, x20, [sp, #16]
    3ed4:	ldp	x25, x26, [sp, #64]
    3ed8:	ldp	x27, x28, [sp, #80]
    3edc:	b	3974 <elf_fill@@ELFUTILS_1.0+0x280>
    3ee0:	ldr	w1, [x7, #24]
    3ee4:	cmp	x27, w1, uxtw
    3ee8:	b.ls	3f68 <elf_fill@@ELFUTILS_1.0+0x874>  // b.plast
    3eec:	mov	w7, w1
    3ef0:	add	x1, x7, w1, uxtw #1
    3ef4:	add	x1, x7, x1, lsl #2
    3ef8:	add	x1, x0, x1, lsl #4
    3efc:	str	w5, [x1, #340]
    3f00:	b	3f68 <elf_fill@@ELFUTILS_1.0+0x874>
    3f04:	add	x5, x5, #0x1
    3f08:	add	x3, x3, #0xd0
    3f0c:	add	x2, x2, #0x28
    3f10:	cmp	x5, x27
    3f14:	b.eq	3e5c <elf_fill@@ELFUTILS_1.0+0x768>  // b.none
    3f18:	mov	x4, x3
    3f1c:	stur	x5, [x3, #4]
    3f20:	stur	x0, [x3, #12]
    3f24:	mov	x7, x2
    3f28:	stur	x2, [x3, #20]
    3f2c:	ldr	w1, [x2, #16]
    3f30:	cmp	x1, x21
    3f34:	b.cs	3f58 <elf_fill@@ELFUTILS_1.0+0x864>  // b.hs, b.nlast
    3f38:	ldr	w9, [x2, #20]
    3f3c:	sub	x8, x21, x1
    3f40:	cmp	x9, x8
    3f44:	b.hi	3f58 <elf_fill@@ELFUTILS_1.0+0x864>  // b.pmore
    3f48:	add	x1, x6, x1
    3f4c:	add	x1, x22, x1
    3f50:	stur	x1, [x3, #44]
    3f54:	stur	x1, [x3, #36]
    3f58:	stur	x10, [x4, #76]
    3f5c:	ldr	w1, [x7, #4]
    3f60:	cmp	w1, #0x12
    3f64:	b.eq	3ee0 <elf_fill@@ELFUTILS_1.0+0x7ec>  // b.none
    3f68:	ldr	w1, [x4]
    3f6c:	cbnz	w1, 3f04 <elf_fill@@ELFUTILS_1.0+0x810>
    3f70:	str	w11, [x4]
    3f74:	b	3f04 <elf_fill@@ELFUTILS_1.0+0x810>
    3f78:	tst	x20, #0x7
    3f7c:	b.ne	40e4 <elf_fill@@ELFUTILS_1.0+0x9f0>  // b.any
    3f80:	str	x20, [x0, #72]
    3f84:	ldr	x1, [x20, #40]
    3f88:	b	4110 <elf_fill@@ELFUTILS_1.0+0xa1c>
    3f8c:	add	x1, x0, #0x88
    3f90:	ldp	x2, x3, [x19]
    3f94:	stp	x2, x3, [x0, #136]
    3f98:	ldp	x2, x3, [x19, #16]
    3f9c:	stp	x2, x3, [x0, #152]
    3fa0:	ldp	x2, x3, [x19, #32]
    3fa4:	stp	x2, x3, [x0, #168]
    3fa8:	ldp	x2, x3, [x19, #48]
    3fac:	stp	x2, x3, [x0, #184]
    3fb0:	str	x1, [x0, #72]
    3fb4:	ldrb	w1, [x19, #5]
    3fb8:	cmp	w1, #0x1
    3fbc:	b.eq	3934 <elf_fill@@ELFUTILS_1.0+0x240>  // b.none
    3fc0:	b	3898 <elf_fill@@ELFUTILS_1.0+0x1a4>
    3fc4:	ldr	w1, [x8, #40]
    3fc8:	cmp	x27, w1, uxtw
    3fcc:	b.ls	404c <elf_fill@@ELFUTILS_1.0+0x958>  // b.plast
    3fd0:	mov	w6, w1
    3fd4:	add	x1, x6, w1, uxtw #1
    3fd8:	add	x1, x6, x1, lsl #2
    3fdc:	add	x1, x0, x1, lsl #4
    3fe0:	str	w5, [x1, #340]
    3fe4:	b	404c <elf_fill@@ELFUTILS_1.0+0x958>
    3fe8:	add	x5, x5, #0x1
    3fec:	add	x3, x3, #0xd0
    3ff0:	add	x2, x2, #0x40
    3ff4:	cmp	x5, x27
    3ff8:	b.eq	3960 <elf_fill@@ELFUTILS_1.0+0x26c>  // b.none
    3ffc:	mov	x4, x3
    4000:	stur	x5, [x3, #4]
    4004:	stur	x0, [x3, #12]
    4008:	mov	x8, x2
    400c:	stur	x2, [x3, #20]
    4010:	ldr	x1, [x2, #24]
    4014:	cmp	x1, x21
    4018:	b.cs	403c <elf_fill@@ELFUTILS_1.0+0x948>  // b.hs, b.nlast
    401c:	sub	x6, x21, x1
    4020:	ldr	x9, [x2, #32]
    4024:	cmp	x9, x6
    4028:	b.hi	403c <elf_fill@@ELFUTILS_1.0+0x948>  // b.pmore
    402c:	add	x1, x7, x1
    4030:	add	x1, x22, x1
    4034:	stur	x1, [x3, #44]
    4038:	stur	x1, [x3, #36]
    403c:	stur	x10, [x4, #76]
    4040:	ldr	w1, [x8, #4]
    4044:	cmp	w1, #0x12
    4048:	b.eq	3fc4 <elf_fill@@ELFUTILS_1.0+0x8d0>  // b.none
    404c:	ldr	w1, [x4]
    4050:	cbnz	w1, 3fe8 <elf_fill@@ELFUTILS_1.0+0x8f4>
    4054:	str	w11, [x4]
    4058:	b	3fe8 <elf_fill@@ELFUTILS_1.0+0x8f4>
    405c:	add	x2, x0, #0x88
    4060:	ldp	x4, x5, [x19]
    4064:	stp	x4, x5, [x0, #136]
    4068:	ldp	x4, x5, [x19, #16]
    406c:	stp	x4, x5, [x0, #152]
    4070:	ldr	x1, [x19, #32]
    4074:	ldr	x3, [x19, #40]
    4078:	str	x1, [x0, #168]
    407c:	str	x3, [x0, #176]
    4080:	ldr	w3, [x19, #48]
    4084:	str	w3, [x0, #184]
    4088:	str	x2, [x0, #72]
    408c:	ldrb	w2, [x19, #5]
    4090:	cmp	w2, #0x1
    4094:	ccmp	w23, #0x8, #0x4, eq  // eq = none
    4098:	b.eq	3e30 <elf_fill@@ELFUTILS_1.0+0x73c>  // b.none
    409c:	mov	w1, w1
    40a0:	add	x20, x20, x1
    40a4:	mov	x2, x20
    40a8:	ands	x5, x20, #0x3
    40ac:	b.ne	3e30 <elf_fill@@ELFUTILS_1.0+0x73c>  // b.any
    40b0:	cmp	x27, #0x0
    40b4:	ccmp	x1, x21, #0x0, ne  // ne = any
    40b8:	b.cs	3ec0 <elf_fill@@ELFUTILS_1.0+0x7cc>  // b.hs, b.nlast
    40bc:	sub	x1, x21, x1
    40c0:	add	x3, x27, x27, lsl #2
    40c4:	cmp	x1, x3, lsl #3
    40c8:	b.cc	3ec0 <elf_fill@@ELFUTILS_1.0+0x7cc>  // b.lo, b.ul, b.last
    40cc:	str	x20, [x0, #80]
    40d0:	cbz	x27, 3e5c <elf_fill@@ELFUTILS_1.0+0x768>
    40d4:	add	x3, x0, #0x154
    40d8:	add	x10, x0, #0xc8
    40dc:	mov	w11, #0xffffffff            	// #-1
    40e0:	b	3f18 <elf_fill@@ELFUTILS_1.0+0x824>
    40e4:	add	x1, x0, #0x88
    40e8:	ldp	x2, x3, [x19]
    40ec:	stp	x2, x3, [x0, #136]
    40f0:	ldp	x2, x3, [x19, #16]
    40f4:	stp	x2, x3, [x0, #152]
    40f8:	ldp	x2, x3, [x19, #32]
    40fc:	stp	x2, x3, [x0, #168]
    4100:	ldp	x2, x3, [x19, #48]
    4104:	stp	x2, x3, [x0, #184]
    4108:	str	x1, [x0, #72]
    410c:	ldr	x1, [x0, #176]
    4110:	ldrb	w2, [x19, #5]
    4114:	cmp	w2, #0x1
    4118:	ccmp	w23, #0x8, #0x4, eq  // eq = none
    411c:	b.eq	3934 <elf_fill@@ELFUTILS_1.0+0x240>  // b.none
    4120:	add	x20, x20, x1
    4124:	mov	x2, x20
    4128:	ands	x5, x20, #0x7
    412c:	b.ne	3934 <elf_fill@@ELFUTILS_1.0+0x240>  // b.any
    4130:	cmp	x27, #0x0
    4134:	ccmp	x21, x1, #0x2, ne  // ne = any
    4138:	b.ls	3ec0 <elf_fill@@ELFUTILS_1.0+0x7cc>  // b.plast
    413c:	sub	x1, x21, x1
    4140:	cmp	x1, x27, lsl #6
    4144:	b.cc	3ec0 <elf_fill@@ELFUTILS_1.0+0x7cc>  // b.lo, b.ul, b.last
    4148:	str	x20, [x0, #80]
    414c:	cbz	x27, 3960 <elf_fill@@ELFUTILS_1.0+0x26c>
    4150:	add	x3, x0, #0x154
    4154:	add	x10, x0, #0xc8
    4158:	mov	w11, #0xffffffff            	// #-1
    415c:	b	3ffc <elf_fill@@ELFUTILS_1.0+0x908>
    4160:	mov	x26, x19
    4164:	tst	x19, #0x3
    4168:	b.eq	41cc <elf_fill@@ELFUTILS_1.0+0xad8>  // b.none
    416c:	ldp	x0, x1, [x19]
    4170:	stp	x0, x1, [sp, #128]
    4174:	ldp	x0, x1, [x19, #16]
    4178:	stp	x0, x1, [sp, #144]
    417c:	ldp	x0, x1, [x19, #32]
    4180:	stp	x0, x1, [sp, #160]
    4184:	ldr	w0, [x19, #48]
    4188:	str	w0, [sp, #176]
    418c:	b	41c8 <elf_fill@@ELFUTILS_1.0+0xad4>
    4190:	ldp	x0, x1, [x19]
    4194:	stp	x0, x1, [sp, #128]
    4198:	ldp	x0, x1, [x19, #16]
    419c:	stp	x0, x1, [sp, #144]
    41a0:	ldr	x0, [x19, #32]
    41a4:	ldr	x1, [x19, #40]
    41a8:	str	x0, [sp, #160]
    41ac:	str	x1, [sp, #168]
    41b0:	ldr	w1, [x19, #48]
    41b4:	str	w1, [sp, #176]
    41b8:	rev16	w1, w1
    41bc:	strh	w1, [sp, #176]
    41c0:	rev	w0, w0
    41c4:	str	w0, [sp, #160]
    41c8:	add	x26, sp, #0x80
    41cc:	ldrh	w27, [x26, #48]
    41d0:	cbz	x27, 39d0 <elf_fill@@ELFUTILS_1.0+0x2dc>
    41d4:	ldr	w0, [x26, #32]
    41d8:	cmp	x21, x0
    41dc:	b.cs	3aec <elf_fill@@ELFUTILS_1.0+0x3f8>  // b.hs, b.nlast
    41e0:	mov	x27, #0x0                   	// #0
    41e4:	b	37c4 <elf_fill@@ELFUTILS_1.0+0xd0>
    41e8:	stp	x29, x30, [sp, #-80]!
    41ec:	mov	x29, sp
    41f0:	stp	x19, x20, [sp, #16]
    41f4:	stp	x21, x22, [sp, #32]
    41f8:	stp	x23, x24, [sp, #48]
    41fc:	str	x25, [sp, #64]
    4200:	mov	w23, w0
    4204:	mov	x22, x1
    4208:	mov	x20, x2
    420c:	mov	x21, x3
    4210:	mov	w25, w4
    4214:	mov	x24, x5
    4218:	add	x19, x1, x2
    421c:	cmp	x3, #0x7
    4220:	b.ls	423c <elf_fill@@ELFUTILS_1.0+0xb48>  // b.plast
    4224:	mov	x2, #0x8                   	// #8
    4228:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    422c:	add	x1, x1, #0x418
    4230:	mov	x0, x19
    4234:	bl	3200 <memcmp@plt>
    4238:	cbz	w0, 4318 <elf_fill@@ELFUTILS_1.0+0xc24>
    423c:	cmp	x21, #0xf
    4240:	b.ls	426c <elf_fill@@ELFUTILS_1.0+0xb78>  // b.plast
    4244:	mov	x2, #0x4                   	// #4
    4248:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    424c:	add	x1, x1, #0x428
    4250:	mov	x0, x19
    4254:	bl	3200 <memcmp@plt>
    4258:	cbnz	w0, 426c <elf_fill@@ELFUTILS_1.0+0xb78>
    425c:	ldrb	w0, [x19, #4]
    4260:	sub	w0, w0, #0x1
    4264:	cmp	w0, #0x1
    4268:	b.ls	42a8 <elf_fill@@ELFUTILS_1.0+0xbb4>  // b.plast
    426c:	mov	x1, #0x108                 	// #264
    4270:	mov	x0, #0x1                   	// #1
    4274:	bl	3180 <calloc@plt>
    4278:	mov	x19, x0
    427c:	cbz	x0, 430c <elf_fill@@ELFUTILS_1.0+0xc18>
    4280:	str	wzr, [x19, #24]
    4284:	mov	w0, #0x1                   	// #1
    4288:	str	w0, [x19, #60]
    428c:	str	w25, [x19, #28]
    4290:	str	w23, [x19, #36]
    4294:	str	x20, [x19, #40]
    4298:	str	x21, [x19, #48]
    429c:	str	x22, [x19]
    42a0:	str	x24, [x19, #8]
    42a4:	b	42e4 <elf_fill@@ELFUTILS_1.0+0xbf0>
    42a8:	ldrb	w0, [x19, #5]
    42ac:	sub	w0, w0, #0x1
    42b0:	ldrb	w1, [x19, #6]
    42b4:	cmp	w0, #0x1
    42b8:	ccmp	w1, #0x1, #0x0, ls  // ls = plast
    42bc:	b.ne	426c <elf_fill@@ELFUTILS_1.0+0xb78>  // b.any
    42c0:	mov	x6, x24
    42c4:	mov	w5, w25
    42c8:	mov	x4, x21
    42cc:	mov	x3, x20
    42d0:	mov	x2, x19
    42d4:	mov	x1, x22
    42d8:	mov	w0, w23
    42dc:	bl	3700 <elf_fill@@ELFUTILS_1.0+0xc>
    42e0:	mov	x19, x0
    42e4:	mov	x0, x19
    42e8:	ldp	x19, x20, [sp, #16]
    42ec:	ldp	x21, x22, [sp, #32]
    42f0:	ldp	x23, x24, [sp, #48]
    42f4:	ldr	x25, [sp, #64]
    42f8:	ldp	x29, x30, [sp], #80
    42fc:	ret
    4300:	mov	w0, #0x8                   	// #8
    4304:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4308:	b	42e4 <elf_fill@@ELFUTILS_1.0+0xbf0>
    430c:	mov	w0, #0x8                   	// #8
    4310:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4314:	b	42e4 <elf_fill@@ELFUTILS_1.0+0xbf0>
    4318:	mov	x1, #0x108                 	// #264
    431c:	mov	x0, #0x1                   	// #1
    4320:	bl	3180 <calloc@plt>
    4324:	mov	x19, x0
    4328:	cbz	x0, 4300 <elf_fill@@ELFUTILS_1.0+0xc0c>
    432c:	mov	w0, #0x1                   	// #1
    4330:	str	w0, [x19, #24]
    4334:	str	w0, [x19, #60]
    4338:	str	w25, [x19, #28]
    433c:	str	w23, [x19, #36]
    4340:	str	x20, [x19, #40]
    4344:	str	x21, [x19, #48]
    4348:	str	x22, [x19]
    434c:	str	x24, [x19, #8]
    4350:	add	x20, x20, #0x8
    4354:	str	x20, [x19, #112]
    4358:	add	x0, x19, #0xf4
    435c:	str	x0, [x19, #160]
    4360:	b	42e4 <elf_fill@@ELFUTILS_1.0+0xbf0>
    4364:	stp	x29, x30, [sp, #-224]!
    4368:	mov	x29, sp
    436c:	stp	x19, x20, [sp, #16]
    4370:	stp	x21, x22, [sp, #32]
    4374:	stp	x23, x24, [sp, #48]
    4378:	stp	x25, x26, [sp, #64]
    437c:	mov	w25, w0
    4380:	mov	x23, x1
    4384:	mov	x21, x2
    4388:	mov	w24, w3
    438c:	mov	x22, x4
    4390:	sub	w19, w3, #0x8
    4394:	cbz	x4, 43f0 <elf_fill@@ELFUTILS_1.0+0xcfc>
    4398:	cmn	x2, #0x1
    439c:	b.eq	4484 <elf_fill@@ELFUTILS_1.0+0xd90>  // b.none
    43a0:	cmp	w19, #0x3
    43a4:	b.hi	468c <elf_fill@@ELFUTILS_1.0+0xf98>  // b.pmore
    43a8:	ldr	x20, [x22]
    43ac:	cbz	x20, 4508 <elf_fill@@ELFUTILS_1.0+0xe14>
    43b0:	cmn	x20, #0x1
    43b4:	b.eq	44c0 <elf_fill@@ELFUTILS_1.0+0xdcc>  // b.none
    43b8:	mov	x5, x22
    43bc:	mov	w4, w24
    43c0:	mov	x3, x21
    43c4:	mov	x2, x23
    43c8:	mov	x1, x20
    43cc:	mov	w0, w25
    43d0:	bl	41e8 <elf_fill@@ELFUTILS_1.0+0xaf4>
    43d4:	mov	x19, x0
    43d8:	cbz	x0, 44e8 <elf_fill@@ELFUTILS_1.0+0xdf4>
    43dc:	cbnz	x22, 4608 <elf_fill@@ELFUTILS_1.0+0xf14>
    43e0:	ldr	w0, [x19, #56]
    43e4:	orr	w0, w0, #0x40
    43e8:	str	w0, [x19, #56]
    43ec:	b	4608 <elf_fill@@ELFUTILS_1.0+0xf14>
    43f0:	cmn	x2, #0x1
    43f4:	b.eq	4464 <elf_fill@@ELFUTILS_1.0+0xd70>  // b.none
    43f8:	cmp	w19, #0x3
    43fc:	b.hi	46a8 <elf_fill@@ELFUTILS_1.0+0xfb4>  // b.pmore
    4400:	cmp	w24, #0x8
    4404:	b.eq	44ac <elf_fill@@ELFUTILS_1.0+0xdb8>  // b.none
    4408:	mov	w2, #0x3                   	// #3
    440c:	cmp	w24, #0xb
    4410:	mov	w3, #0x2                   	// #2
    4414:	csinc	w3, w3, wzr, eq  // eq = none
    4418:	mov	x5, x23
    441c:	mov	w4, w25
    4420:	mov	x1, x21
    4424:	mov	x0, #0x0                   	// #0
    4428:	bl	3230 <mmap@plt>
    442c:	mov	x20, x0
    4430:	cmn	x0, #0x1
    4434:	b.eq	44b8 <elf_fill@@ELFUTILS_1.0+0xdc4>  // b.none
    4438:	cbz	x0, 4684 <elf_fill@@ELFUTILS_1.0+0xf90>
    443c:	mov	x5, x22
    4440:	mov	w4, w24
    4444:	mov	x3, x21
    4448:	mov	x2, x23
    444c:	mov	x1, x0
    4450:	mov	w0, w25
    4454:	bl	41e8 <elf_fill@@ELFUTILS_1.0+0xaf4>
    4458:	mov	x19, x0
    445c:	cbnz	x0, 43dc <elf_fill@@ELFUTILS_1.0+0xce8>
    4460:	b	44f4 <elf_fill@@ELFUTILS_1.0+0xe00>
    4464:	add	x2, sp, #0x60
    4468:	mov	w1, w0
    446c:	mov	w0, #0x0                   	// #0
    4470:	bl	3340 <__fxstat@plt>
    4474:	cmp	w0, #0x0
    4478:	ldr	x0, [sp, #144]
    447c:	csel	x21, x0, x21, eq  // eq = none
    4480:	b	43f8 <elf_fill@@ELFUTILS_1.0+0xd04>
    4484:	str	x27, [sp, #80]
    4488:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    448c:	add	x3, x3, #0x4c8
    4490:	add	x3, x3, #0x10
    4494:	mov	w2, #0x291                 	// #657
    4498:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    449c:	add	x1, x1, #0x3e8
    44a0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    44a4:	add	x0, x0, #0x430
    44a8:	bl	3380 <__assert_fail@plt>
    44ac:	mov	w2, #0x1                   	// #1
    44b0:	mov	w3, #0x2                   	// #2
    44b4:	b	4418 <elf_fill@@ELFUTILS_1.0+0xd24>
    44b8:	str	x27, [sp, #80]
    44bc:	b	4690 <elf_fill@@ELFUTILS_1.0+0xf9c>
    44c0:	str	x27, [sp, #80]
    44c4:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    44c8:	add	x3, x3, #0x4c8
    44cc:	add	x3, x3, #0x10
    44d0:	mov	w2, #0x2ad                 	// #685
    44d4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    44d8:	add	x1, x1, #0x3e8
    44dc:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    44e0:	add	x0, x0, #0x450
    44e4:	bl	3380 <__assert_fail@plt>
    44e8:	ldr	x0, [x22]
    44ec:	cmp	x0, x20
    44f0:	b.eq	4608 <elf_fill@@ELFUTILS_1.0+0xf14>  // b.none
    44f4:	mov	x1, x21
    44f8:	mov	x0, x20
    44fc:	bl	32f0 <munmap@plt>
    4500:	mov	x19, #0x0                   	// #0
    4504:	b	4608 <elf_fill@@ELFUTILS_1.0+0xf14>
    4508:	str	x27, [sp, #80]
    450c:	b	4690 <elf_fill@@ELFUTILS_1.0+0xf9c>
    4510:	cmp	x0, #0x0
    4514:	b.le	4554 <elf_fill@@ELFUTILS_1.0+0xe60>
    4518:	add	x19, x19, x0
    451c:	cmp	x26, x19
    4520:	b.ls	4558 <elf_fill@@ELFUTILS_1.0+0xe64>  // b.plast
    4524:	add	x3, x23, x19
    4528:	sub	x2, x26, x19
    452c:	add	x1, x27, x19
    4530:	mov	w0, w25
    4534:	bl	32a0 <pread@plt>
    4538:	mov	x20, x0
    453c:	cmn	x0, #0x1
    4540:	b.ne	4510 <elf_fill@@ELFUTILS_1.0+0xe1c>  // b.any
    4544:	bl	3390 <__errno_location@plt>
    4548:	ldr	w0, [x0]
    454c:	cmp	w0, #0x4
    4550:	b.eq	4524 <elf_fill@@ELFUTILS_1.0+0xe30>  // b.none
    4554:	tbnz	x20, #63, 46b0 <elf_fill@@ELFUTILS_1.0+0xfbc>
    4558:	cmn	x19, #0x1
    455c:	b.eq	4624 <elf_fill@@ELFUTILS_1.0+0xf30>  // b.none
    4560:	mov	x20, x19
    4564:	cmp	x19, #0x7
    4568:	b.hi	46b8 <elf_fill@@ELFUTILS_1.0+0xfc4>  // b.pmore
    456c:	cmp	x20, #0xf
    4570:	b.ls	45cc <elf_fill@@ELFUTILS_1.0+0xed8>  // b.plast
    4574:	mov	x2, #0x4                   	// #4
    4578:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    457c:	add	x1, x1, #0x428
    4580:	add	x0, sp, #0x60
    4584:	bl	3200 <memcmp@plt>
    4588:	cbnz	w0, 45cc <elf_fill@@ELFUTILS_1.0+0xed8>
    458c:	ldrb	w0, [sp, #100]
    4590:	sub	w1, w0, #0x1
    4594:	cmp	w1, #0x1
    4598:	b.hi	45cc <elf_fill@@ELFUTILS_1.0+0xed8>  // b.pmore
    459c:	ldrb	w1, [sp, #101]
    45a0:	sub	w1, w1, #0x1
    45a4:	ldrb	w2, [sp, #102]
    45a8:	cmp	w1, #0x1
    45ac:	ccmp	w2, #0x1, #0x0, ls  // ls = plast
    45b0:	b.ne	45cc <elf_fill@@ELFUTILS_1.0+0xed8>  // b.any
    45b4:	cmp	w0, #0x1
    45b8:	mov	x0, #0x34                  	// #52
    45bc:	mov	x1, #0x40                  	// #64
    45c0:	csel	x0, x0, x1, eq  // eq = none
    45c4:	cmp	x0, x20
    45c8:	b.ls	4648 <elf_fill@@ELFUTILS_1.0+0xf54>  // b.plast
    45cc:	mov	x1, #0x108                 	// #264
    45d0:	mov	x0, #0x1                   	// #1
    45d4:	bl	3180 <calloc@plt>
    45d8:	mov	x19, x0
    45dc:	cbz	x0, 4674 <elf_fill@@ELFUTILS_1.0+0xf80>
    45e0:	str	wzr, [x0, #24]
    45e4:	mov	w0, #0x1                   	// #1
    45e8:	str	w0, [x19, #60]
    45ec:	str	w24, [x19, #28]
    45f0:	str	w25, [x19, #36]
    45f4:	str	x23, [x19, #40]
    45f8:	str	x21, [x19, #48]
    45fc:	str	xzr, [x19]
    4600:	str	x22, [x19, #8]
    4604:	ldr	x27, [sp, #80]
    4608:	mov	x0, x19
    460c:	ldp	x19, x20, [sp, #16]
    4610:	ldp	x21, x22, [sp, #32]
    4614:	ldp	x23, x24, [sp, #48]
    4618:	ldp	x25, x26, [sp, #64]
    461c:	ldp	x29, x30, [sp], #224
    4620:	ret
    4624:	mov	w0, #0x9                   	// #9
    4628:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    462c:	mov	x19, #0x0                   	// #0
    4630:	ldr	x27, [sp, #80]
    4634:	b	4608 <elf_fill@@ELFUTILS_1.0+0xf14>
    4638:	mov	w0, #0x8                   	// #8
    463c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4640:	ldr	x27, [sp, #80]
    4644:	b	4608 <elf_fill@@ELFUTILS_1.0+0xf14>
    4648:	mov	x6, x22
    464c:	mov	w5, w24
    4650:	mov	x4, x21
    4654:	mov	x3, x23
    4658:	add	x2, sp, #0x60
    465c:	mov	x1, #0x0                   	// #0
    4660:	mov	w0, w25
    4664:	bl	3700 <elf_fill@@ELFUTILS_1.0+0xc>
    4668:	mov	x19, x0
    466c:	ldr	x27, [sp, #80]
    4670:	b	4608 <elf_fill@@ELFUTILS_1.0+0xf14>
    4674:	mov	w0, #0x8                   	// #8
    4678:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    467c:	ldr	x27, [sp, #80]
    4680:	b	4608 <elf_fill@@ELFUTILS_1.0+0xf14>
    4684:	str	x27, [sp, #80]
    4688:	b	4690 <elf_fill@@ELFUTILS_1.0+0xf9c>
    468c:	str	x27, [sp, #80]
    4690:	cmp	x21, #0x40
    4694:	mov	x26, #0x40                  	// #64
    4698:	csel	x26, x21, x26, ls  // ls = plast
    469c:	mov	x19, #0x0                   	// #0
    46a0:	add	x27, sp, #0x60
    46a4:	b	4524 <elf_fill@@ELFUTILS_1.0+0xe30>
    46a8:	str	x27, [sp, #80]
    46ac:	b	4690 <elf_fill@@ELFUTILS_1.0+0xf9c>
    46b0:	cmn	x20, #0x1
    46b4:	b.eq	4624 <elf_fill@@ELFUTILS_1.0+0xf30>  // b.none
    46b8:	mov	x2, #0x8                   	// #8
    46bc:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    46c0:	add	x1, x1, #0x418
    46c4:	add	x0, sp, #0x60
    46c8:	bl	3200 <memcmp@plt>
    46cc:	cbnz	w0, 456c <elf_fill@@ELFUTILS_1.0+0xe78>
    46d0:	mov	x1, #0x108                 	// #264
    46d4:	mov	x0, #0x1                   	// #1
    46d8:	bl	3180 <calloc@plt>
    46dc:	mov	x19, x0
    46e0:	cbz	x0, 4638 <elf_fill@@ELFUTILS_1.0+0xf44>
    46e4:	mov	w0, #0x1                   	// #1
    46e8:	str	w0, [x19, #24]
    46ec:	str	w0, [x19, #60]
    46f0:	str	w24, [x19, #28]
    46f4:	str	w25, [x19, #36]
    46f8:	str	x23, [x19, #40]
    46fc:	str	x21, [x19, #48]
    4700:	str	xzr, [x19]
    4704:	str	x22, [x19, #8]
    4708:	add	x23, x23, #0x8
    470c:	str	x23, [x19, #112]
    4710:	add	x0, x19, #0xf4
    4714:	str	x0, [x19, #160]
    4718:	ldr	x27, [sp, #80]
    471c:	b	4608 <elf_fill@@ELFUTILS_1.0+0xf14>
    4720:	stp	x29, x30, [sp, #-208]!
    4724:	mov	x29, sp
    4728:	stp	x19, x20, [sp, #16]
    472c:	stp	x21, x22, [sp, #32]
    4730:	mov	x20, x0
    4734:	ldr	x19, [x0]
    4738:	cbz	x19, 4804 <elf_fill@@ELFUTILS_1.0+0x1110>
    473c:	ldr	x1, [x0, #112]
    4740:	ldr	x0, [x0, #40]
    4744:	ldr	x2, [x20, #48]
    4748:	add	x0, x0, x2
    474c:	cmp	x1, x0
    4750:	b.hi	47f4 <elf_fill@@ELFUTILS_1.0+0x1100>  // b.pmore
    4754:	sub	x0, x0, x1
    4758:	add	x19, x19, x1
    475c:	cmp	x0, #0x3b
    4760:	b.ls	47f4 <elf_fill@@ELFUTILS_1.0+0x1100>  // b.plast
    4764:	mov	x2, #0x2                   	// #2
    4768:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    476c:	add	x1, x1, #0x470
    4770:	add	x0, x19, #0x3a
    4774:	bl	3200 <memcmp@plt>
    4778:	mov	w21, w0
    477c:	cbnz	w0, 4898 <elf_fill@@ELFUTILS_1.0+0x11a4>
    4780:	mov	x0, x19
    4784:	ldp	x2, x3, [x19]
    4788:	add	x1, x20, #0xf4
    478c:	stp	x2, x3, [x1]
    4790:	strb	wzr, [x20, #260]
    4794:	ldrb	w1, [x19]
    4798:	cmp	w1, #0x2f
    479c:	b.ne	4bd4 <elf_fill@@ELFUTILS_1.0+0x14e0>  // b.any
    47a0:	ldrb	w22, [x19, #1]
    47a4:	cmp	w22, #0x20
    47a8:	b.eq	48a8 <elf_fill@@ELFUTILS_1.0+0x11b4>  // b.none
    47ac:	cmp	w22, #0x53
    47b0:	b.eq	4918 <elf_fill@@ELFUTILS_1.0+0x1224>  // b.none
    47b4:	cmp	w22, #0x2f
    47b8:	b.ne	48bc <elf_fill@@ELFUTILS_1.0+0x11c8>  // b.any
    47bc:	mov	x2, #0x10                  	// #16
    47c0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    47c4:	add	x1, x1, #0x4a8
    47c8:	bl	3200 <memcmp@plt>
    47cc:	cbnz	w0, 48bc <elf_fill@@ELFUTILS_1.0+0x11c8>
    47d0:	add	x1, x20, #0xe4
    47d4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    47d8:	add	x0, x0, #0x4c0
    47dc:	ldrh	w2, [x0]
    47e0:	strh	w2, [x20, #228]
    47e4:	ldrb	w0, [x0, #2]
    47e8:	strb	w0, [x20, #230]
    47ec:	str	x1, [x20, #120]
    47f0:	b	4bf8 <elf_fill@@ELFUTILS_1.0+0x1504>
    47f4:	mov	w0, #0xe                   	// #14
    47f8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    47fc:	mov	w21, #0xffffffff            	// #-1
    4800:	b	4cd8 <elf_fill@@ELFUTILS_1.0+0x15e4>
    4804:	stp	x23, x24, [sp, #48]
    4808:	stp	x25, x26, [sp, #64]
    480c:	add	x19, x0, #0xa8
    4810:	ldr	w25, [x0, #36]
    4814:	ldr	x24, [x0, #112]
    4818:	mov	x21, #0x0                   	// #0
    481c:	mov	x23, #0x3c                  	// #60
    4820:	b	4838 <elf_fill@@ELFUTILS_1.0+0x1144>
    4824:	cmp	x0, #0x0
    4828:	b.le	4868 <elf_fill@@ELFUTILS_1.0+0x1174>
    482c:	add	x21, x21, x0
    4830:	cmp	x21, #0x3b
    4834:	b.hi	486c <elf_fill@@ELFUTILS_1.0+0x1178>  // b.pmore
    4838:	add	x3, x24, x21
    483c:	sub	x2, x23, x21
    4840:	add	x1, x19, x21
    4844:	mov	w0, w25
    4848:	bl	32a0 <pread@plt>
    484c:	mov	x22, x0
    4850:	cmn	x0, #0x1
    4854:	b.ne	4824 <elf_fill@@ELFUTILS_1.0+0x1130>  // b.any
    4858:	bl	3390 <__errno_location@plt>
    485c:	ldr	w0, [x0]
    4860:	cmp	w0, #0x4
    4864:	b.eq	4838 <elf_fill@@ELFUTILS_1.0+0x1144>  // b.none
    4868:	tbnz	x22, #63, 4880 <elf_fill@@ELFUTILS_1.0+0x118c>
    486c:	cmp	x21, #0x3c
    4870:	b.ne	4880 <elf_fill@@ELFUTILS_1.0+0x118c>  // b.any
    4874:	ldp	x23, x24, [sp, #48]
    4878:	ldp	x25, x26, [sp, #64]
    487c:	b	4764 <elf_fill@@ELFUTILS_1.0+0x1070>
    4880:	mov	w0, #0xe                   	// #14
    4884:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4888:	mov	w21, #0xffffffff            	// #-1
    488c:	ldp	x23, x24, [sp, #48]
    4890:	ldp	x25, x26, [sp, #64]
    4894:	b	4cd8 <elf_fill@@ELFUTILS_1.0+0x15e4>
    4898:	mov	w0, #0xf                   	// #15
    489c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    48a0:	mov	w21, #0xffffffff            	// #-1
    48a4:	b	4cd8 <elf_fill@@ELFUTILS_1.0+0x15e4>
    48a8:	mov	x2, #0x10                  	// #16
    48ac:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    48b0:	add	x1, x1, #0x478
    48b4:	bl	3200 <memcmp@plt>
    48b8:	cbz	w0, 4904 <elf_fill@@ELFUTILS_1.0+0x1210>
    48bc:	bl	3220 <__ctype_b_loc@plt>
    48c0:	and	x22, x22, #0xff
    48c4:	ldr	x0, [x0]
    48c8:	ldrh	w0, [x0, x22, lsl #1]
    48cc:	tbz	w0, #11, 4bc4 <elf_fill@@ELFUTILS_1.0+0x14d0>
    48d0:	ldr	x0, [x20, #96]
    48d4:	cbz	x0, 494c <elf_fill@@ELFUTILS_1.0+0x1258>
    48d8:	mov	w2, #0xa                   	// #10
    48dc:	mov	x1, #0x0                   	// #0
    48e0:	add	x0, x19, #0x1
    48e4:	bl	3240 <strtol@plt>
    48e8:	ldr	x1, [x20, #104]
    48ec:	cmp	x1, x0
    48f0:	b.ls	4bb4 <elf_fill@@ELFUTILS_1.0+0x14c0>  // b.plast
    48f4:	ldr	x1, [x20, #96]
    48f8:	add	x0, x1, x0
    48fc:	str	x0, [x20, #120]
    4900:	b	4bf8 <elf_fill@@ELFUTILS_1.0+0x1504>
    4904:	add	x0, x20, #0xe4
    4908:	mov	w1, #0x2f                  	// #47
    490c:	strh	w1, [x20, #228]
    4910:	str	x0, [x20, #120]
    4914:	b	4bf8 <elf_fill@@ELFUTILS_1.0+0x1504>
    4918:	mov	x2, #0x10                  	// #16
    491c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    4920:	add	x1, x1, #0x490
    4924:	bl	3200 <memcmp@plt>
    4928:	cbnz	w0, 48bc <elf_fill@@ELFUTILS_1.0+0x11c8>
    492c:	add	x0, x20, #0xe4
    4930:	mov	x1, #0x532f                	// #21295
    4934:	movk	x1, #0x4d59, lsl #16
    4938:	movk	x1, #0x3436, lsl #32
    493c:	movk	x1, #0x2f, lsl #48
    4940:	stur	x1, [x20, #228]
    4944:	str	x0, [x20, #120]
    4948:	b	4bf8 <elf_fill@@ELFUTILS_1.0+0x1504>
    494c:	stp	x23, x24, [sp, #48]
    4950:	stp	x25, x26, [sp, #64]
    4954:	stp	x27, x28, [sp, #80]
    4958:	mov	x24, #0x8                   	// #8
    495c:	add	x26, sp, #0x90
    4960:	add	x0, sp, #0x80
    4964:	str	x0, [sp, #112]
    4968:	str	x0, [sp, #120]
    496c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    4970:	add	x0, x0, #0x4a8
    4974:	str	x0, [sp, #104]
    4978:	b	4a40 <elf_fill@@ELFUTILS_1.0+0x134c>
    497c:	ldr	w28, [x20, #36]
    4980:	ldr	x25, [x20, #40]
    4984:	add	x25, x24, x25
    4988:	mov	x23, #0x0                   	// #0
    498c:	mov	x27, #0x3c                  	// #60
    4990:	b	49a8 <elf_fill@@ELFUTILS_1.0+0x12b4>
    4994:	cmp	x0, #0x0
    4998:	b.le	49d8 <elf_fill@@ELFUTILS_1.0+0x12e4>
    499c:	add	x23, x23, x0
    49a0:	cmp	x23, #0x3b
    49a4:	b.hi	49dc <elf_fill@@ELFUTILS_1.0+0x12e8>  // b.pmore
    49a8:	add	x3, x25, x23
    49ac:	sub	x2, x27, x23
    49b0:	add	x1, x26, x23
    49b4:	mov	w0, w28
    49b8:	bl	32a0 <pread@plt>
    49bc:	mov	x22, x0
    49c0:	cmn	x0, #0x1
    49c4:	b.ne	4994 <elf_fill@@ELFUTILS_1.0+0x12a0>  // b.any
    49c8:	bl	3390 <__errno_location@plt>
    49cc:	ldr	w0, [x0]
    49d0:	cmp	w0, #0x4
    49d4:	b.eq	49a8 <elf_fill@@ELFUTILS_1.0+0x12b4>  // b.none
    49d8:	tbnz	x22, #63, 4b78 <elf_fill@@ELFUTILS_1.0+0x1484>
    49dc:	cmp	x23, #0x3c
    49e0:	b.ne	4b78 <elf_fill@@ELFUTILS_1.0+0x1484>  // b.any
    49e4:	mov	x23, x26
    49e8:	b	4a64 <elf_fill@@ELFUTILS_1.0+0x1370>
    49ec:	ldr	x1, [x23, #48]
    49f0:	ldr	x2, [sp, #112]
    49f4:	str	x1, [x2]
    49f8:	ldrh	w0, [x0, #8]
    49fc:	strh	w0, [x2, #8]
    4a00:	strb	wzr, [x2, #10]
    4a04:	ldr	x0, [sp, #120]
    4a08:	mov	w2, #0xa                   	// #10
    4a0c:	mov	x1, #0x0                   	// #0
    4a10:	bl	3240 <strtol@plt>
    4a14:	mov	x22, x0
    4a18:	mov	x25, x0
    4a1c:	mov	x2, #0x10                  	// #16
    4a20:	ldr	x1, [sp, #104]
    4a24:	mov	x0, x23
    4a28:	bl	3200 <memcmp@plt>
    4a2c:	cbz	w0, 4a78 <elf_fill@@ELFUTILS_1.0+0x1384>
    4a30:	add	x22, x22, #0x1
    4a34:	and	x22, x22, #0xfffffffffffffffe
    4a38:	add	x24, x24, #0x3c
    4a3c:	add	x24, x22, x24
    4a40:	ldr	x23, [x20]
    4a44:	cbz	x23, 497c <elf_fill@@ELFUTILS_1.0+0x1288>
    4a48:	ldr	x0, [x20, #48]
    4a4c:	cmp	x0, x24
    4a50:	b.cc	4b78 <elf_fill@@ELFUTILS_1.0+0x1484>  // b.lo, b.ul, b.last
    4a54:	sub	x0, x0, x24
    4a58:	cmp	x0, #0x3b
    4a5c:	b.ls	4b78 <elf_fill@@ELFUTILS_1.0+0x1484>  // b.plast
    4a60:	add	x23, x23, x24
    4a64:	add	x0, x23, #0x30
    4a68:	ldrb	w1, [x23, #57]
    4a6c:	cmp	w1, #0x20
    4a70:	b.eq	4a08 <elf_fill@@ELFUTILS_1.0+0x1314>  // b.none
    4a74:	b	49ec <elf_fill@@ELFUTILS_1.0+0x12f8>
    4a78:	ldr	x23, [x20]
    4a7c:	cbz	x23, 4d84 <elf_fill@@ELFUTILS_1.0+0x1690>
    4a80:	mov	x22, x24
    4a84:	ldr	x0, [x20, #48]
    4a88:	sub	x0, x0, #0x3c
    4a8c:	sub	x24, x0, x24
    4a90:	cmp	x25, x24
    4a94:	b.hi	4b78 <elf_fill@@ELFUTILS_1.0+0x1484>  // b.pmore
    4a98:	mov	x0, x25
    4a9c:	bl	3100 <malloc@plt>
    4aa0:	mov	x26, x0
    4aa4:	cbz	x0, 4b78 <elf_fill@@ELFUTILS_1.0+0x1484>
    4aa8:	add	x1, x22, #0x3c
    4aac:	mov	x2, x25
    4ab0:	add	x1, x23, x1
    4ab4:	mov	x0, x26
    4ab8:	bl	3060 <memcpy@plt>
    4abc:	str	x0, [x20, #96]
    4ac0:	str	x25, [x20, #104]
    4ac4:	mov	x22, x26
    4ac8:	add	x25, x26, x25
    4acc:	mov	w24, #0x2f                  	// #47
    4ad0:	sub	x23, x25, x22
    4ad4:	mov	x2, x23
    4ad8:	mov	w1, w24
    4adc:	mov	x0, x22
    4ae0:	bl	3310 <memchr@plt>
    4ae4:	cbz	x0, 4b94 <elf_fill@@ELFUTILS_1.0+0x14a0>
    4ae8:	mov	x22, x0
    4aec:	strb	wzr, [x22], #1
    4af0:	cmp	x25, x22
    4af4:	b.hi	4ad0 <elf_fill@@ELFUTILS_1.0+0x13dc>  // b.pmore
    4af8:	ldp	x23, x24, [sp, #48]
    4afc:	ldp	x25, x26, [sp, #64]
    4b00:	ldp	x27, x28, [sp, #80]
    4b04:	b	48d8 <elf_fill@@ELFUTILS_1.0+0x11e4>
    4b08:	cmp	x0, #0x0
    4b0c:	b.le	4b4c <elf_fill@@ELFUTILS_1.0+0x1458>
    4b10:	add	x24, x24, x0
    4b14:	cmp	x25, x24
    4b18:	b.ls	4b64 <elf_fill@@ELFUTILS_1.0+0x1470>  // b.plast
    4b1c:	add	x3, x28, x24
    4b20:	sub	x2, x25, x24
    4b24:	add	x1, x26, x24
    4b28:	mov	w0, w27
    4b2c:	bl	32a0 <pread@plt>
    4b30:	mov	x23, x0
    4b34:	cmn	x0, #0x1
    4b38:	b.ne	4b08 <elf_fill@@ELFUTILS_1.0+0x1414>  // b.any
    4b3c:	bl	3390 <__errno_location@plt>
    4b40:	ldr	w0, [x0]
    4b44:	cmp	w0, #0x4
    4b48:	b.eq	4b1c <elf_fill@@ELFUTILS_1.0+0x1428>  // b.none
    4b4c:	cmp	x23, #0x0
    4b50:	csel	x23, x23, x24, lt  // lt = tstop
    4b54:	cmp	x22, x23
    4b58:	b.ne	4b6c <elf_fill@@ELFUTILS_1.0+0x1478>  // b.any
    4b5c:	str	x26, [x20, #96]
    4b60:	b	4ac0 <elf_fill@@ELFUTILS_1.0+0x13cc>
    4b64:	mov	x23, x24
    4b68:	b	4b54 <elf_fill@@ELFUTILS_1.0+0x1460>
    4b6c:	mov	x0, x26
    4b70:	bl	3250 <free@plt>
    4b74:	str	xzr, [x20, #96]
    4b78:	mov	w0, #0x10                  	// #16
    4b7c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4b80:	mov	w21, #0xffffffff            	// #-1
    4b84:	ldp	x23, x24, [sp, #48]
    4b88:	ldp	x25, x26, [sp, #64]
    4b8c:	ldp	x27, x28, [sp, #80]
    4b90:	b	4cd8 <elf_fill@@ELFUTILS_1.0+0x15e4>
    4b94:	mov	x2, x23
    4b98:	mov	w1, #0x0                   	// #0
    4b9c:	mov	x0, x22
    4ba0:	bl	3140 <memset@plt>
    4ba4:	ldp	x23, x24, [sp, #48]
    4ba8:	ldp	x25, x26, [sp, #64]
    4bac:	ldp	x27, x28, [sp, #80]
    4bb0:	b	48d8 <elf_fill@@ELFUTILS_1.0+0x11e4>
    4bb4:	mov	w0, #0x10                  	// #16
    4bb8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4bbc:	mov	w21, #0xffffffff            	// #-1
    4bc0:	b	4cd8 <elf_fill@@ELFUTILS_1.0+0x15e4>
    4bc4:	mov	w0, #0x10                  	// #16
    4bc8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4bcc:	mov	w21, #0xffffffff            	// #-1
    4bd0:	b	4cd8 <elf_fill@@ELFUTILS_1.0+0x15e4>
    4bd4:	add	x22, x20, #0xe4
    4bd8:	mov	x3, #0x10                  	// #16
    4bdc:	mov	w2, #0x2f                  	// #47
    4be0:	mov	x1, x19
    4be4:	mov	x0, x22
    4be8:	bl	30a0 <memccpy@plt>
    4bec:	cbz	x0, 4dac <elf_fill@@ELFUTILS_1.0+0x16b8>
    4bf0:	sturb	wzr, [x0, #-1]
    4bf4:	str	x22, [x20, #120]
    4bf8:	ldrb	w0, [x19, #48]
    4bfc:	cmp	w0, #0x20
    4c00:	b.eq	4cec <elf_fill@@ELFUTILS_1.0+0x15f8>  // b.none
    4c04:	add	x0, x19, #0x10
    4c08:	ldrb	w1, [x19, #27]
    4c0c:	cmp	w1, #0x20
    4c10:	b.ne	4cfc <elf_fill@@ELFUTILS_1.0+0x1608>  // b.any
    4c14:	mov	w2, #0xa                   	// #10
    4c18:	mov	x1, #0x0                   	// #0
    4c1c:	bl	3240 <strtol@plt>
    4c20:	str	x0, [x20, #128]
    4c24:	add	x0, x19, #0x1c
    4c28:	ldrb	w1, [x19, #33]
    4c2c:	cmp	w1, #0x20
    4c30:	b.ne	4d18 <elf_fill@@ELFUTILS_1.0+0x1624>  // b.any
    4c34:	mov	w2, #0xa                   	// #10
    4c38:	mov	x1, #0x0                   	// #0
    4c3c:	bl	3240 <strtol@plt>
    4c40:	str	w0, [x20, #136]
    4c44:	add	x0, x19, #0x22
    4c48:	ldrb	w1, [x19, #39]
    4c4c:	cmp	w1, #0x20
    4c50:	b.ne	4d34 <elf_fill@@ELFUTILS_1.0+0x1640>  // b.any
    4c54:	mov	w2, #0xa                   	// #10
    4c58:	mov	x1, #0x0                   	// #0
    4c5c:	bl	3240 <strtol@plt>
    4c60:	str	w0, [x20, #140]
    4c64:	ldrb	w0, [x19, #47]
    4c68:	cmp	w0, #0x20
    4c6c:	b.eq	4d50 <elf_fill@@ELFUTILS_1.0+0x165c>  // b.none
    4c70:	ldr	x0, [x19, #40]
    4c74:	str	x0, [sp, #144]
    4c78:	strb	wzr, [sp, #152]
    4c7c:	add	x0, sp, #0x90
    4c80:	mov	w2, #0xa                   	// #10
    4c84:	mov	x1, #0x0                   	// #0
    4c88:	bl	3240 <strtol@plt>
    4c8c:	str	w0, [x20, #144]
    4c90:	add	x0, x19, #0x30
    4c94:	ldrb	w1, [x19, #57]
    4c98:	cmp	w1, #0x20
    4c9c:	b.ne	4d58 <elf_fill@@ELFUTILS_1.0+0x1664>  // b.any
    4ca0:	mov	w2, #0xa                   	// #10
    4ca4:	mov	x1, #0x0                   	// #0
    4ca8:	bl	3240 <strtol@plt>
    4cac:	str	x0, [x20, #152]
    4cb0:	tbnz	x0, #63, 4d74 <elf_fill@@ELFUTILS_1.0+0x1680>
    4cb4:	ldr	x1, [x20, #40]
    4cb8:	ldr	x2, [x20, #112]
    4cbc:	sub	x1, x1, x2
    4cc0:	ldr	x2, [x20, #48]
    4cc4:	sub	x2, x2, #0x3c
    4cc8:	add	x1, x1, x2
    4ccc:	cmp	x0, x1
    4cd0:	b.ls	4cd8 <elf_fill@@ELFUTILS_1.0+0x15e4>  // b.plast
    4cd4:	str	x1, [x20, #152]
    4cd8:	mov	w0, w21
    4cdc:	ldp	x19, x20, [sp, #16]
    4ce0:	ldp	x21, x22, [sp, #32]
    4ce4:	ldp	x29, x30, [sp], #208
    4ce8:	ret
    4cec:	mov	w0, #0x10                  	// #16
    4cf0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4cf4:	mov	w21, #0xffffffff            	// #-1
    4cf8:	b	4cd8 <elf_fill@@ELFUTILS_1.0+0x15e4>
    4cfc:	ldr	x1, [x19, #16]
    4d00:	str	x1, [sp, #144]
    4d04:	ldr	w0, [x0, #8]
    4d08:	str	w0, [sp, #152]
    4d0c:	strb	wzr, [sp, #156]
    4d10:	add	x0, sp, #0x90
    4d14:	b	4c14 <elf_fill@@ELFUTILS_1.0+0x1520>
    4d18:	ldr	w1, [x19, #28]
    4d1c:	str	w1, [sp, #144]
    4d20:	ldrh	w0, [x0, #4]
    4d24:	strh	w0, [sp, #148]
    4d28:	strb	wzr, [sp, #150]
    4d2c:	add	x0, sp, #0x90
    4d30:	b	4c34 <elf_fill@@ELFUTILS_1.0+0x1540>
    4d34:	ldur	w1, [x19, #34]
    4d38:	str	w1, [sp, #144]
    4d3c:	ldrh	w0, [x0, #4]
    4d40:	strh	w0, [sp, #148]
    4d44:	strb	wzr, [sp, #150]
    4d48:	add	x0, sp, #0x90
    4d4c:	b	4c54 <elf_fill@@ELFUTILS_1.0+0x1560>
    4d50:	add	x0, x19, #0x28
    4d54:	b	4c80 <elf_fill@@ELFUTILS_1.0+0x158c>
    4d58:	ldr	x1, [x19, #48]
    4d5c:	str	x1, [sp, #144]
    4d60:	ldrh	w0, [x0, #8]
    4d64:	strh	w0, [sp, #152]
    4d68:	strb	wzr, [sp, #154]
    4d6c:	add	x0, sp, #0x90
    4d70:	b	4ca0 <elf_fill@@ELFUTILS_1.0+0x15ac>
    4d74:	mov	w0, #0x10                  	// #16
    4d78:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4d7c:	mov	w21, #0xffffffff            	// #-1
    4d80:	b	4cd8 <elf_fill@@ELFUTILS_1.0+0x15e4>
    4d84:	mov	x0, x22
    4d88:	bl	3100 <malloc@plt>
    4d8c:	mov	x26, x0
    4d90:	cbz	x0, 4b78 <elf_fill@@ELFUTILS_1.0+0x1484>
    4d94:	ldr	w27, [x20, #36]
    4d98:	ldr	x28, [x20, #40]
    4d9c:	add	x24, x24, x28
    4da0:	add	x28, x24, #0x3c
    4da4:	mov	x24, #0x0                   	// #0
    4da8:	b	4b1c <elf_fill@@ELFUTILS_1.0+0x1428>
    4dac:	strb	wzr, [x20, #243]
    4db0:	add	x0, x20, #0xf2
    4db4:	add	x2, x20, #0xe3
    4db8:	ldrb	w1, [x0]
    4dbc:	cmp	w1, #0x20
    4dc0:	b.ne	4bf4 <elf_fill@@ELFUTILS_1.0+0x1500>  // b.any
    4dc4:	strb	wzr, [x0], #-1
    4dc8:	cmp	x0, x2
    4dcc:	b.ne	4db8 <elf_fill@@ELFUTILS_1.0+0x16c4>  // b.any
    4dd0:	b	4bf4 <elf_fill@@ELFUTILS_1.0+0x1500>
    4dd4:	stp	x29, x30, [sp, #-48]!
    4dd8:	mov	x29, sp
    4ddc:	stp	x19, x20, [sp, #16]
    4de0:	stp	x21, x22, [sp, #32]
    4de4:	mov	w22, w1
    4de8:	mov	x19, x2
    4dec:	cmn	w0, #0x1
    4df0:	b.eq	4e50 <elf_fill@@ELFUTILS_1.0+0x175c>  // b.none
    4df4:	mov	w20, w0
    4df8:	ldr	w0, [x2, #36]
    4dfc:	cmp	w0, w20
    4e00:	ccmn	w0, #0x1, #0x4, ne  // ne = any
    4e04:	b.ne	4e58 <elf_fill@@ELFUTILS_1.0+0x1764>  // b.any
    4e08:	ldr	w0, [x19, #28]
    4e0c:	sub	w1, w0, #0x8
    4e10:	sub	w0, w0, #0x1
    4e14:	cmp	w1, #0x3
    4e18:	ccmp	w0, #0x2, #0x0, hi  // hi = pmore
    4e1c:	b.hi	4e68 <elf_fill@@ELFUTILS_1.0+0x1774>  // b.pmore
    4e20:	ldr	w0, [x19, #24]
    4e24:	cmp	w0, #0x1
    4e28:	b.eq	4e78 <elf_fill@@ELFUTILS_1.0+0x1784>  // b.none
    4e2c:	ldr	w0, [x19, #60]
    4e30:	add	w0, w0, #0x1
    4e34:	str	w0, [x19, #60]
    4e38:	mov	x21, x19
    4e3c:	mov	x0, x21
    4e40:	ldp	x19, x20, [sp, #16]
    4e44:	ldp	x21, x22, [sp, #32]
    4e48:	ldp	x29, x30, [sp], #48
    4e4c:	ret
    4e50:	ldr	w20, [x2, #36]
    4e54:	b	4e08 <elf_fill@@ELFUTILS_1.0+0x1714>
    4e58:	mov	w0, #0x1c                  	// #28
    4e5c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4e60:	mov	x21, #0x0                   	// #0
    4e64:	b	4e3c <elf_fill@@ELFUTILS_1.0+0x1748>
    4e68:	mov	w0, #0xb                   	// #11
    4e6c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4e70:	mov	x21, #0x0                   	// #0
    4e74:	b	4e3c <elf_fill@@ELFUTILS_1.0+0x1748>
    4e78:	ldr	x21, [x19, #120]
    4e7c:	cbz	x21, 4eb4 <elf_fill@@ELFUTILS_1.0+0x17c0>
    4e80:	ldr	x1, [x19, #112]
    4e84:	mov	x4, x19
    4e88:	mov	w3, w22
    4e8c:	ldr	x2, [x19, #152]
    4e90:	add	x1, x1, #0x3c
    4e94:	mov	w0, w20
    4e98:	bl	4364 <elf_fill@@ELFUTILS_1.0+0xc70>
    4e9c:	mov	x21, x0
    4ea0:	cbz	x0, 4e3c <elf_fill@@ELFUTILS_1.0+0x1748>
    4ea4:	ldr	x0, [x19, #72]
    4ea8:	str	x0, [x21, #16]
    4eac:	str	x21, [x19, #72]
    4eb0:	b	4e3c <elf_fill@@ELFUTILS_1.0+0x1748>
    4eb4:	mov	x0, x19
    4eb8:	bl	4720 <elf_fill@@ELFUTILS_1.0+0x102c>
    4ebc:	cbz	w0, 4e80 <elf_fill@@ELFUTILS_1.0+0x178c>
    4ec0:	b	4e3c <elf_fill@@ELFUTILS_1.0+0x1748>

0000000000004ec4 <elf_begin@@ELFUTILS_1.0>:
    4ec4:	stp	x29, x30, [sp, #-48]!
    4ec8:	mov	x29, sp
    4ecc:	stp	x19, x20, [sp, #16]
    4ed0:	mov	w19, w1
    4ed4:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    4ed8:	ldr	w1, [x1, #444]
    4edc:	cmp	w1, #0x1
    4ee0:	b.ne	4f2c <elf_begin@@ELFUTILS_1.0+0x68>  // b.any
    4ee4:	str	x21, [sp, #32]
    4ee8:	mov	w21, w0
    4eec:	mov	x20, x2
    4ef0:	cbz	x2, 4f3c <elf_begin@@ELFUTILS_1.0+0x78>
    4ef4:	cmp	w19, #0x3
    4ef8:	b.eq	5038 <elf_begin@@ELFUTILS_1.0+0x174>  // b.none
    4efc:	b.hi	5024 <elf_begin@@ELFUTILS_1.0+0x160>  // b.pmore
    4f00:	cmp	w19, #0x1
    4f04:	b.eq	509c <elf_begin@@ELFUTILS_1.0+0x1d8>  // b.none
    4f08:	cmp	w19, #0x2
    4f0c:	b.eq	50d4 <elf_begin@@ELFUTILS_1.0+0x210>  // b.none
    4f10:	mov	x20, #0x0                   	// #0
    4f14:	cbnz	w19, 50c0 <elf_begin@@ELFUTILS_1.0+0x1fc>
    4f18:	ldr	x21, [sp, #32]
    4f1c:	mov	x0, x20
    4f20:	ldp	x19, x20, [sp, #16]
    4f24:	ldp	x29, x30, [sp], #48
    4f28:	ret
    4f2c:	mov	w0, #0xc                   	// #12
    4f30:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4f34:	mov	x20, #0x0                   	// #0
    4f38:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>
    4f3c:	mov	w1, #0x1                   	// #1
    4f40:	bl	32d0 <fcntl@plt>
    4f44:	cmn	w0, #0x1
    4f48:	b.eq	4f78 <elf_begin@@ELFUTILS_1.0+0xb4>  // b.none
    4f4c:	cmp	w19, #0x9
    4f50:	b.eq	5108 <elf_begin@@ELFUTILS_1.0+0x244>  // b.none
    4f54:	b.hi	4ff0 <elf_begin@@ELFUTILS_1.0+0x12c>  // b.pmore
    4f58:	cmp	w19, #0x2
    4f5c:	b.eq	5108 <elf_begin@@ELFUTILS_1.0+0x244>  // b.none
    4f60:	b.ls	4fd8 <elf_begin@@ELFUTILS_1.0+0x114>  // b.plast
    4f64:	cmp	w19, #0x3
    4f68:	b.eq	5038 <elf_begin@@ELFUTILS_1.0+0x174>  // b.none
    4f6c:	cmp	w19, #0x8
    4f70:	b.ne	50c0 <elf_begin@@ELFUTILS_1.0+0x1fc>  // b.any
    4f74:	b	5000 <elf_begin@@ELFUTILS_1.0+0x13c>
    4f78:	bl	3390 <__errno_location@plt>
    4f7c:	ldr	w0, [x0]
    4f80:	cmp	w0, #0x9
    4f84:	b.ne	4f4c <elf_begin@@ELFUTILS_1.0+0x88>  // b.any
    4f88:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4f8c:	ldr	x21, [sp, #32]
    4f90:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>
    4f94:	ldr	w0, [x20, #28]
    4f98:	cmp	w0, #0xb
    4f9c:	b.eq	509c <elf_begin@@ELFUTILS_1.0+0x1d8>  // b.none
    4fa0:	mov	w0, #0xd                   	// #13
    4fa4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4fa8:	mov	x20, #0x0                   	// #0
    4fac:	ldr	x21, [sp, #32]
    4fb0:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>
    4fb4:	mov	w0, #0xd                   	// #13
    4fb8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4fbc:	mov	x20, #0x0                   	// #0
    4fc0:	ldr	x21, [sp, #32]
    4fc4:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>
    4fc8:	mov	w0, #0x8                   	// #8
    4fcc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    4fd0:	ldr	x21, [sp, #32]
    4fd4:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>
    4fd8:	cbnz	w19, 4fe4 <elf_begin@@ELFUTILS_1.0+0x120>
    4fdc:	ldr	x21, [sp, #32]
    4fe0:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>
    4fe4:	cmp	w19, #0x1
    4fe8:	b.ne	50c0 <elf_begin@@ELFUTILS_1.0+0x1fc>  // b.any
    4fec:	b	5000 <elf_begin@@ELFUTILS_1.0+0x13c>
    4ff0:	cmp	w19, #0xa
    4ff4:	b.eq	5038 <elf_begin@@ELFUTILS_1.0+0x174>  // b.none
    4ff8:	cmp	w19, #0xb
    4ffc:	b.ne	50c0 <elf_begin@@ELFUTILS_1.0+0x1fc>  // b.any
    5000:	mov	x4, #0x0                   	// #0
    5004:	mov	w3, w19
    5008:	mov	x2, #0xffffffffffffffff    	// #-1
    500c:	mov	x1, #0x0                   	// #0
    5010:	mov	w0, w21
    5014:	bl	4364 <elf_fill@@ELFUTILS_1.0+0xc70>
    5018:	mov	x20, x0
    501c:	ldr	x21, [sp, #32]
    5020:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>
    5024:	cmp	w19, #0x9
    5028:	b.eq	50d4 <elf_begin@@ELFUTILS_1.0+0x210>  // b.none
    502c:	b.ls	5094 <elf_begin@@ELFUTILS_1.0+0x1d0>  // b.plast
    5030:	cmp	w19, #0xa
    5034:	b.ne	50b8 <elf_begin@@ELFUTILS_1.0+0x1f4>  // b.any
    5038:	mov	x1, #0x928                 	// #2344
    503c:	mov	x0, #0x1                   	// #1
    5040:	bl	3180 <calloc@plt>
    5044:	mov	x20, x0
    5048:	cbz	x0, 4fc8 <elf_begin@@ELFUTILS_1.0+0x104>
    504c:	mov	w0, #0x3                   	// #3
    5050:	str	w0, [x20, #24]
    5054:	mov	w0, #0x1                   	// #1
    5058:	str	w0, [x20, #60]
    505c:	str	w19, [x20, #28]
    5060:	str	w21, [x20, #36]
    5064:	str	xzr, [x20, #40]
    5068:	str	xzr, [x20, #48]
    506c:	str	xzr, [x20]
    5070:	str	xzr, [x20, #8]
    5074:	str	w0, [x20, #56]
    5078:	mov	w0, #0xa                   	// #10
    507c:	str	w0, [x20, #112]
    5080:	add	x1, x20, #0xc8
    5084:	str	x1, [x20, #96]
    5088:	str	w0, [x20, #204]
    508c:	ldr	x21, [sp, #32]
    5090:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>
    5094:	cmp	w19, #0x8
    5098:	b.ne	50c0 <elf_begin@@ELFUTILS_1.0+0x1fc>  // b.any
    509c:	mov	x2, x20
    50a0:	mov	w1, w19
    50a4:	mov	w0, w21
    50a8:	bl	4dd4 <elf_fill@@ELFUTILS_1.0+0x16e0>
    50ac:	mov	x20, x0
    50b0:	ldr	x21, [sp, #32]
    50b4:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>
    50b8:	cmp	w19, #0xb
    50bc:	b.eq	4f94 <elf_begin@@ELFUTILS_1.0+0xd0>  // b.none
    50c0:	mov	w0, #0xd                   	// #13
    50c4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    50c8:	mov	x20, #0x0                   	// #0
    50cc:	ldr	x21, [sp, #32]
    50d0:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>
    50d4:	ldr	w0, [x20, #28]
    50d8:	sub	w1, w0, #0x2
    50dc:	sub	w0, w0, #0x9
    50e0:	cmp	w1, #0x1
    50e4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    50e8:	b.hi	4fb4 <elf_begin@@ELFUTILS_1.0+0xf0>  // b.pmore
    50ec:	mov	x2, x20
    50f0:	mov	w1, w19
    50f4:	mov	w0, w21
    50f8:	bl	4dd4 <elf_fill@@ELFUTILS_1.0+0x16e0>
    50fc:	mov	x20, x0
    5100:	ldr	x21, [sp, #32]
    5104:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>
    5108:	mov	x4, #0x0                   	// #0
    510c:	mov	w3, w19
    5110:	mov	x2, #0xffffffffffffffff    	// #-1
    5114:	mov	x1, #0x0                   	// #0
    5118:	mov	w0, w21
    511c:	bl	4364 <elf_fill@@ELFUTILS_1.0+0xc70>
    5120:	mov	x20, x0
    5124:	ldr	x21, [sp, #32]
    5128:	b	4f1c <elf_begin@@ELFUTILS_1.0+0x58>

000000000000512c <elf_next@@ELFUTILS_1.0>:
    512c:	cbz	x0, 51b8 <elf_next@@ELFUTILS_1.0+0x8c>
    5130:	stp	x29, x30, [sp, #-32]!
    5134:	mov	x29, sp
    5138:	stp	x19, x20, [sp, #16]
    513c:	mov	x20, x0
    5140:	ldr	x19, [x0, #8]
    5144:	cbz	x19, 51c0 <elf_next@@ELFUTILS_1.0+0x94>
    5148:	ldr	w0, [x19, #24]
    514c:	cmp	w0, #0x1
    5150:	b.ne	5198 <elf_next@@ELFUTILS_1.0+0x6c>  // b.any
    5154:	ldr	x1, [x19, #152]
    5158:	add	x1, x1, #0x1
    515c:	and	x1, x1, #0xfffffffffffffffe
    5160:	ldr	x0, [x19, #112]
    5164:	add	x0, x0, #0x3c
    5168:	add	x1, x1, x0
    516c:	str	x1, [x19, #112]
    5170:	mov	x0, x19
    5174:	bl	4720 <elf_fill@@ELFUTILS_1.0+0x102c>
    5178:	cbnz	w0, 5184 <elf_next@@ELFUTILS_1.0+0x58>
    517c:	ldr	w0, [x20, #28]
    5180:	cbnz	w0, 518c <elf_next@@ELFUTILS_1.0+0x60>
    5184:	str	xzr, [x19, #120]
    5188:	mov	w0, #0x0                   	// #0
    518c:	ldp	x19, x20, [sp, #16]
    5190:	ldp	x29, x30, [sp], #32
    5194:	ret
    5198:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    519c:	add	x3, x3, #0x518
    51a0:	mov	w2, #0x35                  	// #53
    51a4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    51a8:	add	x1, x1, #0x4e8
    51ac:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    51b0:	add	x0, x0, #0x4f8
    51b4:	bl	3380 <__assert_fail@plt>
    51b8:	mov	w0, #0x0                   	// #0
    51bc:	ret
    51c0:	mov	w0, #0x0                   	// #0
    51c4:	b	518c <elf_next@@ELFUTILS_1.0+0x60>

00000000000051c8 <elf_rand@@ELFUTILS_1.0>:
    51c8:	cbz	x0, 5228 <elf_rand@@ELFUTILS_1.0+0x60>
    51cc:	stp	x29, x30, [sp, #-32]!
    51d0:	mov	x29, sp
    51d4:	stp	x19, x20, [sp, #16]
    51d8:	mov	x19, x0
    51dc:	mov	x20, x1
    51e0:	ldr	w1, [x0, #24]
    51e4:	mov	x0, #0x0                   	// #0
    51e8:	cmp	w1, #0x1
    51ec:	b.eq	51fc <elf_rand@@ELFUTILS_1.0+0x34>  // b.none
    51f0:	ldp	x19, x20, [sp, #16]
    51f4:	ldp	x29, x30, [sp], #32
    51f8:	ret
    51fc:	ldr	x0, [x19, #40]
    5200:	add	x0, x0, x20
    5204:	str	x0, [x19, #112]
    5208:	mov	x0, x19
    520c:	bl	4720 <elf_fill@@ELFUTILS_1.0+0x102c>
    5210:	mov	w1, w0
    5214:	mov	x0, x20
    5218:	cbz	w1, 51f0 <elf_rand@@ELFUTILS_1.0+0x28>
    521c:	str	xzr, [x19, #120]
    5220:	mov	x0, #0x0                   	// #0
    5224:	b	51f0 <elf_rand@@ELFUTILS_1.0+0x28>
    5228:	mov	x0, #0x0                   	// #0
    522c:	ret

0000000000005230 <elf_end@@ELFUTILS_1.0>:
    5230:	cbz	x0, 54c8 <elf_end@@ELFUTILS_1.0+0x298>
    5234:	stp	x29, x30, [sp, #-80]!
    5238:	mov	x29, sp
    523c:	stp	x21, x22, [sp, #32]
    5240:	mov	x22, x0
    5244:	ldr	w0, [x0, #60]
    5248:	cbz	w0, 5258 <elf_end@@ELFUTILS_1.0+0x28>
    524c:	sub	w0, w0, #0x1
    5250:	str	w0, [x22, #60]
    5254:	cbnz	w0, 52c0 <elf_end@@ELFUTILS_1.0+0x90>
    5258:	str	x25, [sp, #64]
    525c:	ldr	w0, [x22, #24]
    5260:	cmp	w0, #0x1
    5264:	b.eq	52cc <elf_end@@ELFUTILS_1.0+0x9c>  // b.none
    5268:	ldr	x25, [x22, #8]
    526c:	cbz	x25, 553c <elf_end@@ELFUTILS_1.0+0x30c>
    5270:	ldr	x0, [x25, #72]
    5274:	cmp	x0, x22
    5278:	b.eq	5314 <elf_end@@ELFUTILS_1.0+0xe4>  // b.none
    527c:	mov	x1, x0
    5280:	ldr	x0, [x0, #16]
    5284:	cmp	x0, x22
    5288:	b.ne	527c <elf_end@@ELFUTILS_1.0+0x4c>  // b.any
    528c:	ldr	x0, [x22, #16]
    5290:	str	x0, [x1, #16]
    5294:	ldr	w0, [x22, #24]
    5298:	cmp	w0, #0x1
    529c:	b.eq	552c <elf_end@@ELFUTILS_1.0+0x2fc>  // b.none
    52a0:	cmp	w0, #0x3
    52a4:	b.eq	5320 <elf_end@@ELFUTILS_1.0+0xf0>  // b.none
    52a8:	mov	x0, x22
    52ac:	bl	3250 <free@plt>
    52b0:	ldr	w1, [x25, #60]
    52b4:	mov	w0, #0x0                   	// #0
    52b8:	cbz	w1, 54b8 <elf_end@@ELFUTILS_1.0+0x288>
    52bc:	ldr	x25, [sp, #64]
    52c0:	ldp	x21, x22, [sp, #32]
    52c4:	ldp	x29, x30, [sp], #80
    52c8:	ret
    52cc:	ldr	x0, [x22, #80]
    52d0:	cmn	x0, #0x1
    52d4:	b.eq	52dc <elf_end@@ELFUTILS_1.0+0xac>  // b.none
    52d8:	bl	3250 <free@plt>
    52dc:	str	xzr, [x22, #80]
    52e0:	ldr	x1, [x22, #72]
    52e4:	mov	w0, #0x0                   	// #0
    52e8:	cbz	x1, 52f4 <elf_end@@ELFUTILS_1.0+0xc4>
    52ec:	ldr	x25, [sp, #64]
    52f0:	b	52c0 <elf_end@@ELFUTILS_1.0+0x90>
    52f4:	ldr	x25, [x22, #8]
    52f8:	cbnz	x25, 5270 <elf_end@@ELFUTILS_1.0+0x40>
    52fc:	ldr	w0, [x22, #24]
    5300:	cmp	w0, #0x1
    5304:	b.ne	5540 <elf_end@@ELFUTILS_1.0+0x310>  // b.any
    5308:	ldr	x0, [x22, #96]
    530c:	cbnz	x0, 5534 <elf_end@@ELFUTILS_1.0+0x304>
    5310:	b	54f8 <elf_end@@ELFUTILS_1.0+0x2c8>
    5314:	ldr	x0, [x22, #16]
    5318:	str	x0, [x25, #72]
    531c:	b	5294 <elf_end@@ELFUTILS_1.0+0x64>
    5320:	stp	x19, x20, [sp, #16]
    5324:	stp	x23, x24, [sp, #48]
    5328:	ldr	x19, [x22, #104]
    532c:	cbnz	x19, 5348 <elf_end@@ELFUTILS_1.0+0x118>
    5330:	add	x24, x22, #0xc8
    5334:	mov	x23, x24
    5338:	b	5428 <elf_end@@ELFUTILS_1.0+0x1f8>
    533c:	mov	x0, x20
    5340:	bl	3250 <free@plt>
    5344:	cbz	x19, 5330 <elf_end@@ELFUTILS_1.0+0x100>
    5348:	mov	x20, x19
    534c:	ldr	x19, [x19, #48]
    5350:	ldr	w0, [x20, #204]
    5354:	tbz	w0, #7, 533c <elf_end@@ELFUTILS_1.0+0x10c>
    5358:	ldr	x0, [x20]
    535c:	bl	3250 <free@plt>
    5360:	b	533c <elf_end@@ELFUTILS_1.0+0x10c>
    5364:	ldur	x0, [x20, #-48]
    5368:	bl	3250 <free@plt>
    536c:	b	53a8 <elf_end@@ELFUTILS_1.0+0x178>
    5370:	bl	3250 <free@plt>
    5374:	cbz	x19, 538c <elf_end@@ELFUTILS_1.0+0x15c>
    5378:	mov	x0, x19
    537c:	ldr	x19, [x19, #48]
    5380:	ldr	w1, [x0, #56]
    5384:	tbz	w1, #7, 5374 <elf_end@@ELFUTILS_1.0+0x144>
    5388:	b	5370 <elf_end@@ELFUTILS_1.0+0x140>
    538c:	sub	x21, x21, #0x1
    5390:	sub	x20, x20, #0xd0
    5394:	cmn	x21, #0x1
    5398:	b.eq	5404 <elf_end@@ELFUTILS_1.0+0x1d4>  // b.none
    539c:	mov	x19, x20
    53a0:	ldur	w0, [x20, #-40]
    53a4:	tbnz	w0, #7, 5364 <elf_end@@ELFUTILS_1.0+0x134>
    53a8:	ldur	x0, [x19, #-16]
    53ac:	ldur	x1, [x19, #-32]
    53b0:	cmp	x0, x1
    53b4:	b.eq	53bc <elf_end@@ELFUTILS_1.0+0x18c>  // b.none
    53b8:	bl	3250 <free@plt>
    53bc:	ldur	x0, [x19, #-24]
    53c0:	ldur	x1, [x19, #-32]
    53c4:	cmp	x0, x1
    53c8:	b.eq	53d0 <elf_end@@ELFUTILS_1.0+0x1a0>  // b.none
    53cc:	bl	3250 <free@plt>
    53d0:	ldr	x0, [x22]
    53d4:	cbz	x0, 53f0 <elf_end@@ELFUTILS_1.0+0x1c0>
    53d8:	ldur	x1, [x19, #-32]
    53dc:	ldur	x0, [x19, #-16]
    53e0:	cmp	x1, x0
    53e4:	b.eq	53f0 <elf_end@@ELFUTILS_1.0+0x1c0>  // b.none
    53e8:	ldur	w0, [x19, #-36]
    53ec:	tbz	w0, #7, 53f8 <elf_end@@ELFUTILS_1.0+0x1c8>
    53f0:	ldur	x0, [x19, #-32]
    53f4:	bl	3250 <free@plt>
    53f8:	ldur	x19, [x19, #-144]
    53fc:	cbnz	x19, 5378 <elf_end@@ELFUTILS_1.0+0x148>
    5400:	b	538c <elf_end@@ELFUTILS_1.0+0x15c>
    5404:	ldr	x19, [x23, #8]
    5408:	cbz	x19, 54d0 <elf_end@@ELFUTILS_1.0+0x2a0>
    540c:	ldr	w1, [x23]
    5410:	ldr	w0, [x23, #4]
    5414:	cmp	w1, w0
    5418:	b.ne	5444 <elf_end@@ELFUTILS_1.0+0x214>  // b.any
    541c:	cmp	x23, x24
    5420:	b.ne	5520 <elf_end@@ELFUTILS_1.0+0x2f0>  // b.any
    5424:	mov	x23, x19
    5428:	ldr	w0, [x23, #4]
    542c:	sub	x21, x0, #0x1
    5430:	cbz	x0, 5404 <elf_end@@ELFUTILS_1.0+0x1d4>
    5434:	add	x20, x0, x0, lsl #1
    5438:	add	x0, x0, x20, lsl #2
    543c:	add	x20, x23, x0, lsl #4
    5440:	b	539c <elf_end@@ELFUTILS_1.0+0x16c>
    5444:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    5448:	add	x3, x3, #0x560
    544c:	mov	w2, #0xbd                  	// #189
    5450:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    5454:	add	x1, x1, #0x528
    5458:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    545c:	add	x0, x0, #0x538
    5460:	bl	3380 <__assert_fail@plt>
    5464:	ldr	x0, [x22, #80]
    5468:	bl	3250 <free@plt>
    546c:	b	54e8 <elf_end@@ELFUTILS_1.0+0x2b8>
    5470:	ldr	x0, [x22, #88]
    5474:	bl	3250 <free@plt>
    5478:	ldp	x19, x20, [sp, #16]
    547c:	ldp	x23, x24, [sp, #48]
    5480:	b	54f8 <elf_end@@ELFUTILS_1.0+0x2c8>
    5484:	ldr	w1, [x22, #56]
    5488:	tbnz	w1, #7, 54a4 <elf_end@@ELFUTILS_1.0+0x274>
    548c:	tbnz	w1, #6, 54ac <elf_end@@ELFUTILS_1.0+0x27c>
    5490:	mov	x0, x22
    5494:	bl	3250 <free@plt>
    5498:	mov	w0, #0x0                   	// #0
    549c:	ldr	x25, [sp, #64]
    54a0:	b	52c0 <elf_end@@ELFUTILS_1.0+0x90>
    54a4:	bl	3250 <free@plt>
    54a8:	b	5490 <elf_end@@ELFUTILS_1.0+0x260>
    54ac:	ldr	x1, [x22, #48]
    54b0:	bl	32f0 <munmap@plt>
    54b4:	b	5490 <elf_end@@ELFUTILS_1.0+0x260>
    54b8:	mov	x0, x25
    54bc:	bl	5230 <elf_end@@ELFUTILS_1.0>
    54c0:	ldr	x25, [sp, #64]
    54c4:	b	52c0 <elf_end@@ELFUTILS_1.0+0x90>
    54c8:	mov	w0, #0x0                   	// #0
    54cc:	ret
    54d0:	cmp	x23, x24
    54d4:	b.eq	54e0 <elf_end@@ELFUTILS_1.0+0x2b0>  // b.none
    54d8:	mov	x0, x23
    54dc:	bl	3250 <free@plt>
    54e0:	ldr	w0, [x22, #124]
    54e4:	cbnz	w0, 5464 <elf_end@@ELFUTILS_1.0+0x234>
    54e8:	ldr	w0, [x22, #120]
    54ec:	tbnz	w0, #7, 5470 <elf_end@@ELFUTILS_1.0+0x240>
    54f0:	ldp	x19, x20, [sp, #16]
    54f4:	ldp	x23, x24, [sp, #48]
    54f8:	ldr	x0, [x22]
    54fc:	cmp	x25, #0x0
    5500:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    5504:	b.ne	5484 <elf_end@@ELFUTILS_1.0+0x254>  // b.any
    5508:	mov	x0, x22
    550c:	bl	3250 <free@plt>
    5510:	cbnz	x25, 52b0 <elf_end@@ELFUTILS_1.0+0x80>
    5514:	mov	w0, #0x0                   	// #0
    5518:	ldr	x25, [sp, #64]
    551c:	b	52c0 <elf_end@@ELFUTILS_1.0+0x90>
    5520:	mov	x0, x23
    5524:	bl	3250 <free@plt>
    5528:	b	5424 <elf_end@@ELFUTILS_1.0+0x1f4>
    552c:	ldr	x0, [x22, #96]
    5530:	cbz	x0, 5508 <elf_end@@ELFUTILS_1.0+0x2d8>
    5534:	bl	3250 <free@plt>
    5538:	b	54f8 <elf_end@@ELFUTILS_1.0+0x2c8>
    553c:	ldr	w0, [x22, #24]
    5540:	cmp	w0, #0x3
    5544:	b.eq	5320 <elf_end@@ELFUTILS_1.0+0xf0>  // b.none
    5548:	ldr	x0, [x22]
    554c:	cmp	x25, #0x0
    5550:	ccmp	x0, #0x0, #0x4, eq  // eq = none
    5554:	b.ne	5484 <elf_end@@ELFUTILS_1.0+0x254>  // b.any
    5558:	mov	x0, x22
    555c:	bl	3250 <free@plt>
    5560:	mov	w0, #0x0                   	// #0
    5564:	ldr	x25, [sp, #64]
    5568:	b	52c0 <elf_end@@ELFUTILS_1.0+0x90>

000000000000556c <elf_kind@@ELFUTILS_1.0>:
    556c:	cbz	x0, 5578 <elf_kind@@ELFUTILS_1.0+0xc>
    5570:	ldr	w0, [x0, #24]
    5574:	ret
    5578:	mov	w0, #0x0                   	// #0
    557c:	b	5574 <elf_kind@@ELFUTILS_1.0+0x8>

0000000000005580 <gelf_getclass@@ELFUTILS_1.0>:
    5580:	mov	x1, x0
    5584:	mov	w0, #0x0                   	// #0
    5588:	cbz	x1, 559c <gelf_getclass@@ELFUTILS_1.0+0x1c>
    558c:	ldr	w2, [x1, #24]
    5590:	mov	w0, #0x0                   	// #0
    5594:	cmp	w2, #0x3
    5598:	b.eq	55a0 <gelf_getclass@@ELFUTILS_1.0+0x20>  // b.none
    559c:	ret
    55a0:	ldr	w0, [x1, #32]
    55a4:	b	559c <gelf_getclass@@ELFUTILS_1.0+0x1c>

00000000000055a8 <elf_getbase@@ELFUTILS_1.0>:
    55a8:	cbz	x0, 55b4 <elf_getbase@@ELFUTILS_1.0+0xc>
    55ac:	ldr	x0, [x0, #40]
    55b0:	ret
    55b4:	mov	x0, #0xffffffffffffffff    	// #-1
    55b8:	b	55b0 <elf_getbase@@ELFUTILS_1.0+0x8>

00000000000055bc <elf_getident@@ELFUTILS_1.0>:
    55bc:	cbz	x0, 55e0 <elf_getident@@ELFUTILS_1.0+0x24>
    55c0:	ldr	w2, [x0, #24]
    55c4:	cmp	w2, #0x3
    55c8:	b.ne	55e0 <elf_getident@@ELFUTILS_1.0+0x24>  // b.any
    55cc:	cbz	x1, 55d8 <elf_getident@@ELFUTILS_1.0+0x1c>
    55d0:	mov	x2, #0x10                  	// #16
    55d4:	str	x2, [x1]
    55d8:	ldr	x0, [x0, #72]
    55dc:	ret
    55e0:	mov	x0, x1
    55e4:	cbz	x1, 55dc <elf_getident@@ELFUTILS_1.0+0x20>
    55e8:	str	xzr, [x1]
    55ec:	mov	x0, #0x0                   	// #0
    55f0:	b	55dc <elf_getident@@ELFUTILS_1.0+0x20>

00000000000055f4 <elf32_fsize@@ELFUTILS_1.0>:
    55f4:	stp	x29, x30, [sp, #-16]!
    55f8:	mov	x29, sp
    55fc:	cmp	w2, #0x1
    5600:	b.ne	5624 <elf32_fsize@@ELFUTILS_1.0+0x30>  // b.any
    5604:	cmp	w0, #0x1a
    5608:	b.hi	5634 <elf32_fsize@@ELFUTILS_1.0+0x40>  // b.pmore
    560c:	adrp	x2, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    5610:	add	x2, x2, #0x568
    5614:	ldr	x0, [x2, w0, uxtw #3]
    5618:	mul	x0, x1, x0
    561c:	ldp	x29, x30, [sp], #16
    5620:	ret
    5624:	mov	w0, #0x2                   	// #2
    5628:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    562c:	mov	x0, #0x0                   	// #0
    5630:	b	561c <elf32_fsize@@ELFUTILS_1.0+0x28>
    5634:	mov	w0, #0x3                   	// #3
    5638:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    563c:	mov	x0, #0x0                   	// #0
    5640:	b	561c <elf32_fsize@@ELFUTILS_1.0+0x28>

0000000000005644 <elf64_fsize@@ELFUTILS_1.0>:
    5644:	stp	x29, x30, [sp, #-16]!
    5648:	mov	x29, sp
    564c:	cmp	w2, #0x1
    5650:	b.ne	5678 <elf64_fsize@@ELFUTILS_1.0+0x34>  // b.any
    5654:	cmp	w0, #0x1a
    5658:	b.hi	5688 <elf64_fsize@@ELFUTILS_1.0+0x44>  // b.pmore
    565c:	adrp	x2, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    5660:	add	x2, x2, #0x568
    5664:	add	x0, x2, w0, uxtw #3
    5668:	ldr	x0, [x0, #216]
    566c:	mul	x0, x1, x0
    5670:	ldp	x29, x30, [sp], #16
    5674:	ret
    5678:	mov	w0, #0x2                   	// #2
    567c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    5680:	mov	x0, #0x0                   	// #0
    5684:	b	5670 <elf64_fsize@@ELFUTILS_1.0+0x2c>
    5688:	mov	w0, #0x3                   	// #3
    568c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    5690:	mov	x0, #0x0                   	// #0
    5694:	b	5670 <elf64_fsize@@ELFUTILS_1.0+0x2c>

0000000000005698 <gelf_fsize@@ELFUTILS_1.0>:
    5698:	cbz	x0, 5708 <gelf_fsize@@ELFUTILS_1.0+0x70>
    569c:	stp	x29, x30, [sp, #-16]!
    56a0:	mov	x29, sp
    56a4:	cmp	w3, #0x1
    56a8:	b.ne	56e8 <gelf_fsize@@ELFUTILS_1.0+0x50>  // b.any
    56ac:	cmp	w1, #0x1a
    56b0:	b.hi	56f8 <gelf_fsize@@ELFUTILS_1.0+0x60>  // b.pmore
    56b4:	ldr	w0, [x0, #32]
    56b8:	sub	w3, w0, #0x1
    56bc:	lsl	x0, x3, #3
    56c0:	sub	x0, x0, x3
    56c4:	lsl	x0, x0, #2
    56c8:	sub	x0, x0, x3
    56cc:	add	x1, x0, w1, uxtw
    56d0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    56d4:	add	x0, x0, #0x568
    56d8:	ldr	x0, [x0, x1, lsl #3]
    56dc:	mul	x0, x2, x0
    56e0:	ldp	x29, x30, [sp], #16
    56e4:	ret
    56e8:	mov	w0, #0x2                   	// #2
    56ec:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    56f0:	mov	x0, #0x0                   	// #0
    56f4:	b	56e0 <gelf_fsize@@ELFUTILS_1.0+0x48>
    56f8:	mov	w0, #0x3                   	// #3
    56fc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    5700:	mov	x0, #0x0                   	// #0
    5704:	b	56e0 <gelf_fsize@@ELFUTILS_1.0+0x48>
    5708:	mov	x0, #0x0                   	// #0
    570c:	ret

0000000000005710 <elf32_xlatetof@@ELFUTILS_1.0>:
    5710:	stp	x29, x30, [sp, #-32]!
    5714:	mov	x29, sp
    5718:	stp	x19, x20, [sp, #16]
    571c:	mov	x19, x0
    5720:	mov	x20, x1
    5724:	mov	w0, w2
    5728:	ldr	w4, [x1, #8]
    572c:	ldr	x2, [x1, #16]
    5730:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    5734:	add	x1, x1, #0x568
    5738:	ldr	x3, [x1, w4, uxtw #3]
    573c:	udiv	x1, x2, x3
    5740:	msub	x1, x1, x3, x2
    5744:	cbnz	x1, 57a4 <elf32_xlatetof@@ELFUTILS_1.0+0x94>
    5748:	ldr	x1, [x19, #16]
    574c:	cmp	x2, x1
    5750:	b.hi	57b4 <elf32_xlatetof@@ELFUTILS_1.0+0xa4>  // b.pmore
    5754:	sub	w1, w0, #0x1
    5758:	cmp	w1, #0x1
    575c:	b.hi	57c4 <elf32_xlatetof@@ELFUTILS_1.0+0xb4>  // b.pmore
    5760:	cmp	w0, #0x1
    5764:	b.eq	57d4 <elf32_xlatetof@@ELFUTILS_1.0+0xc4>  // b.none
    5768:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    576c:	add	x0, x0, #0xbd8
    5770:	ldr	x4, [x0, w4, uxtw #3]
    5774:	mov	w3, #0x1                   	// #1
    5778:	ldr	x1, [x20]
    577c:	ldr	x0, [x19]
    5780:	blr	x4
    5784:	ldr	w0, [x20, #8]
    5788:	str	w0, [x19, #8]
    578c:	ldr	x0, [x20, #16]
    5790:	str	x0, [x19, #16]
    5794:	mov	x0, x19
    5798:	ldp	x19, x20, [sp, #16]
    579c:	ldp	x29, x30, [sp], #32
    57a0:	ret
    57a4:	mov	w0, #0x21                  	// #33
    57a8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    57ac:	mov	x0, #0x0                   	// #0
    57b0:	b	5798 <elf32_xlatetof@@ELFUTILS_1.0+0x88>
    57b4:	mov	w0, #0x6                   	// #6
    57b8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    57bc:	mov	x0, #0x0                   	// #0
    57c0:	b	5798 <elf32_xlatetof@@ELFUTILS_1.0+0x88>
    57c4:	mov	w0, #0x7                   	// #7
    57c8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    57cc:	mov	x0, #0x0                   	// #0
    57d0:	b	5798 <elf32_xlatetof@@ELFUTILS_1.0+0x88>
    57d4:	ldr	x1, [x20]
    57d8:	ldr	x0, [x19]
    57dc:	cmp	x1, x0
    57e0:	b.eq	5784 <elf32_xlatetof@@ELFUTILS_1.0+0x74>  // b.none
    57e4:	bl	3070 <memmove@plt>
    57e8:	b	5784 <elf32_xlatetof@@ELFUTILS_1.0+0x74>

00000000000057ec <elf32_xlatetom@@ELFUTILS_1.0>:
    57ec:	stp	x29, x30, [sp, #-32]!
    57f0:	mov	x29, sp
    57f4:	stp	x19, x20, [sp, #16]
    57f8:	mov	x19, x0
    57fc:	mov	x20, x1
    5800:	mov	w0, w2
    5804:	ldr	w1, [x1, #8]
    5808:	cmp	w1, #0x13
    580c:	ccmp	w1, #0x1a, #0x4, ne  // ne = any
    5810:	b.eq	5830 <elf32_xlatetom@@ELFUTILS_1.0+0x44>  // b.none
    5814:	ldr	x4, [x20, #16]
    5818:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    581c:	add	x3, x3, #0x568
    5820:	ldr	x3, [x3, w1, uxtw #3]
    5824:	udiv	x2, x4, x3
    5828:	msub	x2, x2, x3, x4
    582c:	cbnz	x2, 5890 <elf32_xlatetom@@ELFUTILS_1.0+0xa4>
    5830:	ldr	x2, [x20, #16]
    5834:	ldr	x3, [x19, #16]
    5838:	cmp	x2, x3
    583c:	b.hi	58a0 <elf32_xlatetom@@ELFUTILS_1.0+0xb4>  // b.pmore
    5840:	sub	w3, w0, #0x1
    5844:	cmp	w3, #0x1
    5848:	b.hi	58b0 <elf32_xlatetom@@ELFUTILS_1.0+0xc4>  // b.pmore
    584c:	cmp	w0, #0x1
    5850:	b.eq	58c0 <elf32_xlatetom@@ELFUTILS_1.0+0xd4>  // b.none
    5854:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    5858:	add	x0, x0, #0xbd8
    585c:	ldr	x4, [x0, w1, uxtw #3]
    5860:	mov	w3, #0x0                   	// #0
    5864:	ldr	x1, [x20]
    5868:	ldr	x0, [x19]
    586c:	blr	x4
    5870:	ldr	w0, [x20, #8]
    5874:	str	w0, [x19, #8]
    5878:	ldr	x0, [x20, #16]
    587c:	str	x0, [x19, #16]
    5880:	mov	x0, x19
    5884:	ldp	x19, x20, [sp, #16]
    5888:	ldp	x29, x30, [sp], #32
    588c:	ret
    5890:	mov	w0, #0x21                  	// #33
    5894:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    5898:	mov	x0, #0x0                   	// #0
    589c:	b	5884 <elf32_xlatetom@@ELFUTILS_1.0+0x98>
    58a0:	mov	w0, #0x6                   	// #6
    58a4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    58a8:	mov	x0, #0x0                   	// #0
    58ac:	b	5884 <elf32_xlatetom@@ELFUTILS_1.0+0x98>
    58b0:	mov	w0, #0x7                   	// #7
    58b4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    58b8:	mov	x0, #0x0                   	// #0
    58bc:	b	5884 <elf32_xlatetom@@ELFUTILS_1.0+0x98>
    58c0:	ldr	x1, [x20]
    58c4:	ldr	x0, [x19]
    58c8:	cmp	x1, x0
    58cc:	b.eq	5870 <elf32_xlatetom@@ELFUTILS_1.0+0x84>  // b.none
    58d0:	bl	3070 <memmove@plt>
    58d4:	b	5870 <elf32_xlatetom@@ELFUTILS_1.0+0x84>

00000000000058d8 <elf64_xlatetof@@ELFUTILS_1.0>:
    58d8:	stp	x29, x30, [sp, #-32]!
    58dc:	mov	x29, sp
    58e0:	stp	x19, x20, [sp, #16]
    58e4:	mov	x19, x0
    58e8:	mov	x20, x1
    58ec:	mov	w1, w2
    58f0:	ldr	w3, [x20, #8]
    58f4:	ldr	x2, [x20, #16]
    58f8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    58fc:	add	x0, x0, #0x568
    5900:	add	x0, x0, w3, uxtw #3
    5904:	ldr	x4, [x0, #216]
    5908:	udiv	x0, x2, x4
    590c:	msub	x0, x0, x4, x2
    5910:	cbnz	x0, 5974 <elf64_xlatetof@@ELFUTILS_1.0+0x9c>
    5914:	ldr	x0, [x19, #16]
    5918:	cmp	x2, x0
    591c:	b.hi	5984 <elf64_xlatetof@@ELFUTILS_1.0+0xac>  // b.pmore
    5920:	sub	w0, w1, #0x1
    5924:	cmp	w0, #0x1
    5928:	b.hi	5994 <elf64_xlatetof@@ELFUTILS_1.0+0xbc>  // b.pmore
    592c:	cmp	w1, #0x1
    5930:	b.eq	59a4 <elf64_xlatetof@@ELFUTILS_1.0+0xcc>  // b.none
    5934:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    5938:	add	x0, x0, #0xbd8
    593c:	add	x3, x0, w3, uxtw #3
    5940:	ldr	x4, [x3, #216]
    5944:	mov	w3, #0x1                   	// #1
    5948:	ldr	x1, [x20]
    594c:	ldr	x0, [x19]
    5950:	blr	x4
    5954:	ldr	w0, [x20, #8]
    5958:	str	w0, [x19, #8]
    595c:	ldr	x0, [x20, #16]
    5960:	str	x0, [x19, #16]
    5964:	mov	x0, x19
    5968:	ldp	x19, x20, [sp, #16]
    596c:	ldp	x29, x30, [sp], #32
    5970:	ret
    5974:	mov	w0, #0x21                  	// #33
    5978:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    597c:	mov	x0, #0x0                   	// #0
    5980:	b	5968 <elf64_xlatetof@@ELFUTILS_1.0+0x90>
    5984:	mov	w0, #0x6                   	// #6
    5988:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    598c:	mov	x0, #0x0                   	// #0
    5990:	b	5968 <elf64_xlatetof@@ELFUTILS_1.0+0x90>
    5994:	mov	w0, #0x7                   	// #7
    5998:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    599c:	mov	x0, #0x0                   	// #0
    59a0:	b	5968 <elf64_xlatetof@@ELFUTILS_1.0+0x90>
    59a4:	ldr	x1, [x20]
    59a8:	ldr	x0, [x19]
    59ac:	cmp	x1, x0
    59b0:	b.eq	5954 <elf64_xlatetof@@ELFUTILS_1.0+0x7c>  // b.none
    59b4:	bl	3070 <memmove@plt>
    59b8:	b	5954 <elf64_xlatetof@@ELFUTILS_1.0+0x7c>

00000000000059bc <elf64_xlatetom@@ELFUTILS_1.0>:
    59bc:	stp	x29, x30, [sp, #-32]!
    59c0:	mov	x29, sp
    59c4:	stp	x19, x20, [sp, #16]
    59c8:	mov	x19, x0
    59cc:	mov	x20, x1
    59d0:	mov	w1, w2
    59d4:	ldr	w0, [x20, #8]
    59d8:	cmp	w0, #0x13
    59dc:	ccmp	w0, #0x1a, #0x4, ne  // ne = any
    59e0:	b.eq	5a04 <elf64_xlatetom@@ELFUTILS_1.0+0x48>  // b.none
    59e4:	adrp	x2, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    59e8:	add	x2, x2, #0x568
    59ec:	add	x2, x2, w0, uxtw #3
    59f0:	ldr	x4, [x20, #16]
    59f4:	ldr	x3, [x2, #216]
    59f8:	udiv	x2, x4, x3
    59fc:	msub	x2, x2, x3, x4
    5a00:	cbnz	x2, 5a68 <elf64_xlatetom@@ELFUTILS_1.0+0xac>
    5a04:	ldr	x2, [x20, #16]
    5a08:	ldr	x3, [x19, #16]
    5a0c:	cmp	x2, x3
    5a10:	b.hi	5a78 <elf64_xlatetom@@ELFUTILS_1.0+0xbc>  // b.pmore
    5a14:	sub	w3, w1, #0x1
    5a18:	cmp	w3, #0x1
    5a1c:	b.hi	5a88 <elf64_xlatetom@@ELFUTILS_1.0+0xcc>  // b.pmore
    5a20:	cmp	w1, #0x1
    5a24:	b.eq	5a98 <elf64_xlatetom@@ELFUTILS_1.0+0xdc>  // b.none
    5a28:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    5a2c:	add	x1, x1, #0xbd8
    5a30:	add	x0, x1, w0, uxtw #3
    5a34:	ldr	x4, [x0, #216]
    5a38:	mov	w3, #0x0                   	// #0
    5a3c:	ldr	x1, [x20]
    5a40:	ldr	x0, [x19]
    5a44:	blr	x4
    5a48:	ldr	w0, [x20, #8]
    5a4c:	str	w0, [x19, #8]
    5a50:	ldr	x0, [x20, #16]
    5a54:	str	x0, [x19, #16]
    5a58:	mov	x0, x19
    5a5c:	ldp	x19, x20, [sp, #16]
    5a60:	ldp	x29, x30, [sp], #32
    5a64:	ret
    5a68:	mov	w0, #0x21                  	// #33
    5a6c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    5a70:	mov	x0, #0x0                   	// #0
    5a74:	b	5a5c <elf64_xlatetom@@ELFUTILS_1.0+0xa0>
    5a78:	mov	w0, #0x6                   	// #6
    5a7c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    5a80:	mov	x0, #0x0                   	// #0
    5a84:	b	5a5c <elf64_xlatetom@@ELFUTILS_1.0+0xa0>
    5a88:	mov	w0, #0x7                   	// #7
    5a8c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    5a90:	mov	x0, #0x0                   	// #0
    5a94:	b	5a5c <elf64_xlatetom@@ELFUTILS_1.0+0xa0>
    5a98:	ldr	x1, [x20]
    5a9c:	ldr	x0, [x19]
    5aa0:	cmp	x1, x0
    5aa4:	b.eq	5a48 <elf64_xlatetom@@ELFUTILS_1.0+0x8c>  // b.none
    5aa8:	bl	3070 <memmove@plt>
    5aac:	b	5a48 <elf64_xlatetom@@ELFUTILS_1.0+0x8c>
    5ab0:	cbnz	x2, 5ab8 <elf64_xlatetom@@ELFUTILS_1.0+0xfc>
    5ab4:	ret
    5ab8:	stp	x29, x30, [sp, #-16]!
    5abc:	mov	x29, sp
    5ac0:	bl	3070 <memmove@plt>
    5ac4:	ldp	x29, x30, [sp], #16
    5ac8:	ret
    5acc:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    5ad0:	movk	x3, #0xcccd
    5ad4:	umulh	x3, x2, x3
    5ad8:	lsr	x3, x3, #4
    5adc:	cmp	x2, #0x13
    5ae0:	b.ls	5b30 <elf64_xlatetom@@ELFUTILS_1.0+0x174>  // b.plast
    5ae4:	ldr	w2, [x1]
    5ae8:	rev	w2, w2
    5aec:	str	w2, [x0]
    5af0:	ldr	w2, [x1, #4]
    5af4:	rev	w2, w2
    5af8:	str	w2, [x0, #4]
    5afc:	ldr	w2, [x1, #8]
    5b00:	rev	w2, w2
    5b04:	str	w2, [x0, #8]
    5b08:	ldr	w2, [x1, #12]
    5b0c:	rev	w2, w2
    5b10:	str	w2, [x0, #12]
    5b14:	ldr	w2, [x1, #16]
    5b18:	rev	w2, w2
    5b1c:	str	w2, [x0, #16]
    5b20:	add	x0, x0, #0x14
    5b24:	add	x1, x1, #0x14
    5b28:	subs	x3, x3, #0x1
    5b2c:	b.ne	5ae4 <elf64_xlatetom@@ELFUTILS_1.0+0x128>  // b.any
    5b30:	ret
    5b34:	lsr	x4, x2, #2
    5b38:	cmp	x0, x1
    5b3c:	b.cs	5b68 <elf64_xlatetom@@ELFUTILS_1.0+0x1ac>  // b.hs, b.nlast
    5b40:	cmp	x2, #0x3
    5b44:	b.ls	5b64 <elf64_xlatetom@@ELFUTILS_1.0+0x1a8>  // b.plast
    5b48:	mov	x2, #0x0                   	// #0
    5b4c:	ldr	w3, [x1, x2, lsl #2]
    5b50:	rev	w3, w3
    5b54:	str	w3, [x0, x2, lsl #2]
    5b58:	add	x2, x2, #0x1
    5b5c:	cmp	x4, x2
    5b60:	b.ne	5b4c <elf64_xlatetom@@ELFUTILS_1.0+0x190>  // b.any
    5b64:	ret
    5b68:	sub	x3, x4, #0x1
    5b6c:	cmp	x2, #0x3
    5b70:	b.ls	5b64 <elf64_xlatetom@@ELFUTILS_1.0+0x1a8>  // b.plast
    5b74:	sub	x4, x2, x4, lsl #2
    5b78:	add	x2, x1, x4
    5b7c:	add	x1, x0, x4
    5b80:	ldr	w0, [x2, x3, lsl #2]
    5b84:	rev	w0, w0
    5b88:	str	w0, [x1, x3, lsl #2]
    5b8c:	sub	x3, x3, #0x1
    5b90:	cmn	x3, #0x1
    5b94:	b.ne	5b80 <elf64_xlatetom@@ELFUTILS_1.0+0x1c4>  // b.any
    5b98:	b	5b64 <elf64_xlatetom@@ELFUTILS_1.0+0x1a8>
    5b9c:	lsr	x4, x2, #2
    5ba0:	cmp	x0, x1
    5ba4:	b.cs	5bd0 <elf64_xlatetom@@ELFUTILS_1.0+0x214>  // b.hs, b.nlast
    5ba8:	cmp	x2, #0x3
    5bac:	b.ls	5bcc <elf64_xlatetom@@ELFUTILS_1.0+0x210>  // b.plast
    5bb0:	mov	x2, #0x0                   	// #0
    5bb4:	ldr	w3, [x1, x2, lsl #2]
    5bb8:	rev	w3, w3
    5bbc:	str	w3, [x0, x2, lsl #2]
    5bc0:	add	x2, x2, #0x1
    5bc4:	cmp	x4, x2
    5bc8:	b.ne	5bb4 <elf64_xlatetom@@ELFUTILS_1.0+0x1f8>  // b.any
    5bcc:	ret
    5bd0:	sub	x3, x4, #0x1
    5bd4:	cmp	x2, #0x3
    5bd8:	b.ls	5bcc <elf64_xlatetom@@ELFUTILS_1.0+0x210>  // b.plast
    5bdc:	sub	x4, x2, x4, lsl #2
    5be0:	add	x2, x1, x4
    5be4:	add	x1, x0, x4
    5be8:	ldr	w0, [x2, x3, lsl #2]
    5bec:	rev	w0, w0
    5bf0:	str	w0, [x1, x3, lsl #2]
    5bf4:	sub	x3, x3, #0x1
    5bf8:	cmn	x3, #0x1
    5bfc:	b.ne	5be8 <elf64_xlatetom@@ELFUTILS_1.0+0x22c>  // b.any
    5c00:	b	5bcc <elf64_xlatetom@@ELFUTILS_1.0+0x210>
    5c04:	cbz	x2, 5c70 <elf64_xlatetom@@ELFUTILS_1.0+0x2b4>
    5c08:	stp	x29, x30, [sp, #-48]!
    5c0c:	mov	x29, sp
    5c10:	stp	x19, x20, [sp, #16]
    5c14:	str	x21, [sp, #32]
    5c18:	mov	x20, x0
    5c1c:	mov	x21, x1
    5c20:	mov	x19, x2
    5c24:	cmp	x0, x1
    5c28:	b.eq	5c30 <elf64_xlatetom@@ELFUTILS_1.0+0x274>  // b.none
    5c2c:	bl	3070 <memmove@plt>
    5c30:	cmp	x19, #0xb
    5c34:	b.hi	5c48 <elf64_xlatetom@@ELFUTILS_1.0+0x28c>  // b.pmore
    5c38:	ldp	x19, x20, [sp, #16]
    5c3c:	ldr	x21, [sp, #32]
    5c40:	ldp	x29, x30, [sp], #48
    5c44:	ret
    5c48:	ldr	w0, [x21]
    5c4c:	rev	w0, w0
    5c50:	str	w0, [x20]
    5c54:	ldr	w0, [x21, #4]
    5c58:	rev	w0, w0
    5c5c:	str	w0, [x20, #4]
    5c60:	ldr	w0, [x21, #8]
    5c64:	rev	w0, w0
    5c68:	str	w0, [x20, #8]
    5c6c:	b	5c38 <elf64_xlatetom@@ELFUTILS_1.0+0x27c>
    5c70:	ret
    5c74:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    5c78:	movk	x3, #0xcccd
    5c7c:	umulh	x3, x2, x3
    5c80:	lsr	x3, x3, #4
    5c84:	cmp	x2, #0x13
    5c88:	b.ls	5cd8 <elf64_xlatetom@@ELFUTILS_1.0+0x31c>  // b.plast
    5c8c:	ldr	w2, [x1]
    5c90:	rev	w2, w2
    5c94:	str	w2, [x0]
    5c98:	ldr	w2, [x1, #4]
    5c9c:	rev	w2, w2
    5ca0:	str	w2, [x0, #4]
    5ca4:	ldr	w2, [x1, #8]
    5ca8:	rev	w2, w2
    5cac:	str	w2, [x0, #8]
    5cb0:	ldr	w2, [x1, #12]
    5cb4:	rev	w2, w2
    5cb8:	str	w2, [x0, #12]
    5cbc:	ldr	w2, [x1, #16]
    5cc0:	rev	w2, w2
    5cc4:	str	w2, [x0, #16]
    5cc8:	add	x0, x0, #0x14
    5ccc:	add	x1, x1, #0x14
    5cd0:	subs	x3, x3, #0x1
    5cd4:	b.ne	5c8c <elf64_xlatetom@@ELFUTILS_1.0+0x2d0>  // b.any
    5cd8:	ret
    5cdc:	lsr	x4, x2, #2
    5ce0:	cmp	x0, x1
    5ce4:	b.cs	5d10 <elf64_xlatetom@@ELFUTILS_1.0+0x354>  // b.hs, b.nlast
    5ce8:	cmp	x2, #0x3
    5cec:	b.ls	5d0c <elf64_xlatetom@@ELFUTILS_1.0+0x350>  // b.plast
    5cf0:	mov	x2, #0x0                   	// #0
    5cf4:	ldr	w3, [x1, x2, lsl #2]
    5cf8:	rev	w3, w3
    5cfc:	str	w3, [x0, x2, lsl #2]
    5d00:	add	x2, x2, #0x1
    5d04:	cmp	x4, x2
    5d08:	b.ne	5cf4 <elf64_xlatetom@@ELFUTILS_1.0+0x338>  // b.any
    5d0c:	ret
    5d10:	sub	x3, x4, #0x1
    5d14:	cmp	x2, #0x3
    5d18:	b.ls	5d0c <elf64_xlatetom@@ELFUTILS_1.0+0x350>  // b.plast
    5d1c:	sub	x4, x2, x4, lsl #2
    5d20:	add	x2, x1, x4
    5d24:	add	x1, x0, x4
    5d28:	ldr	w0, [x2, x3, lsl #2]
    5d2c:	rev	w0, w0
    5d30:	str	w0, [x1, x3, lsl #2]
    5d34:	sub	x3, x3, #0x1
    5d38:	cmn	x3, #0x1
    5d3c:	b.ne	5d28 <elf64_xlatetom@@ELFUTILS_1.0+0x36c>  // b.any
    5d40:	b	5d0c <elf64_xlatetom@@ELFUTILS_1.0+0x350>
    5d44:	lsr	x3, x2, #3
    5d48:	cmp	x2, #0x7
    5d4c:	b.ls	5d78 <elf64_xlatetom@@ELFUTILS_1.0+0x3bc>  // b.plast
    5d50:	ldr	w2, [x1]
    5d54:	rev	w2, w2
    5d58:	str	w2, [x0]
    5d5c:	ldr	w2, [x1, #4]
    5d60:	rev	w2, w2
    5d64:	str	w2, [x0, #4]
    5d68:	add	x0, x0, #0x8
    5d6c:	add	x1, x1, #0x8
    5d70:	subs	x3, x3, #0x1
    5d74:	b.ne	5d50 <elf64_xlatetom@@ELFUTILS_1.0+0x394>  // b.any
    5d78:	ret
    5d7c:	lsr	x3, x2, #3
    5d80:	cmp	x2, #0x7
    5d84:	b.ls	5db0 <elf64_xlatetom@@ELFUTILS_1.0+0x3f4>  // b.plast
    5d88:	ldr	w2, [x1]
    5d8c:	rev	w2, w2
    5d90:	str	w2, [x0]
    5d94:	ldr	w2, [x1, #4]
    5d98:	rev	w2, w2
    5d9c:	str	w2, [x0, #4]
    5da0:	add	x0, x0, #0x8
    5da4:	add	x1, x1, #0x8
    5da8:	subs	x3, x3, #0x1
    5dac:	b.ne	5d88 <elf64_xlatetom@@ELFUTILS_1.0+0x3cc>  // b.any
    5db0:	ret
    5db4:	lsr	x4, x2, #2
    5db8:	cmp	x0, x1
    5dbc:	b.cs	5de8 <elf64_xlatetom@@ELFUTILS_1.0+0x42c>  // b.hs, b.nlast
    5dc0:	cmp	x2, #0x3
    5dc4:	b.ls	5de4 <elf64_xlatetom@@ELFUTILS_1.0+0x428>  // b.plast
    5dc8:	mov	x2, #0x0                   	// #0
    5dcc:	ldr	w3, [x1, x2, lsl #2]
    5dd0:	rev	w3, w3
    5dd4:	str	w3, [x0, x2, lsl #2]
    5dd8:	add	x2, x2, #0x1
    5ddc:	cmp	x4, x2
    5de0:	b.ne	5dcc <elf64_xlatetom@@ELFUTILS_1.0+0x410>  // b.any
    5de4:	ret
    5de8:	sub	x3, x4, #0x1
    5dec:	cmp	x2, #0x3
    5df0:	b.ls	5de4 <elf64_xlatetom@@ELFUTILS_1.0+0x428>  // b.plast
    5df4:	sub	x4, x2, x4, lsl #2
    5df8:	add	x2, x1, x4
    5dfc:	add	x1, x0, x4
    5e00:	ldr	w0, [x2, x3, lsl #2]
    5e04:	rev	w0, w0
    5e08:	str	w0, [x1, x3, lsl #2]
    5e0c:	sub	x3, x3, #0x1
    5e10:	cmn	x3, #0x1
    5e14:	b.ne	5e00 <elf64_xlatetom@@ELFUTILS_1.0+0x444>  // b.any
    5e18:	b	5de4 <elf64_xlatetom@@ELFUTILS_1.0+0x428>
    5e1c:	lsr	x4, x2, #2
    5e20:	cmp	x0, x1
    5e24:	b.cs	5e50 <elf64_xlatetom@@ELFUTILS_1.0+0x494>  // b.hs, b.nlast
    5e28:	cmp	x2, #0x3
    5e2c:	b.ls	5e4c <elf64_xlatetom@@ELFUTILS_1.0+0x490>  // b.plast
    5e30:	mov	x2, #0x0                   	// #0
    5e34:	ldr	w3, [x1, x2, lsl #2]
    5e38:	rev	w3, w3
    5e3c:	str	w3, [x0, x2, lsl #2]
    5e40:	add	x2, x2, #0x1
    5e44:	cmp	x4, x2
    5e48:	b.ne	5e34 <elf64_xlatetom@@ELFUTILS_1.0+0x478>  // b.any
    5e4c:	ret
    5e50:	sub	x3, x4, #0x1
    5e54:	cmp	x2, #0x3
    5e58:	b.ls	5e4c <elf64_xlatetom@@ELFUTILS_1.0+0x490>  // b.plast
    5e5c:	sub	x4, x2, x4, lsl #2
    5e60:	add	x2, x1, x4
    5e64:	add	x1, x0, x4
    5e68:	ldr	w0, [x2, x3, lsl #2]
    5e6c:	rev	w0, w0
    5e70:	str	w0, [x1, x3, lsl #2]
    5e74:	sub	x3, x3, #0x1
    5e78:	cmn	x3, #0x1
    5e7c:	b.ne	5e68 <elf64_xlatetom@@ELFUTILS_1.0+0x4ac>  // b.any
    5e80:	b	5e4c <elf64_xlatetom@@ELFUTILS_1.0+0x490>
    5e84:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    5e88:	movk	x3, #0xaaab
    5e8c:	umulh	x3, x2, x3
    5e90:	lsr	x3, x3, #3
    5e94:	cmp	x2, #0xb
    5e98:	b.ls	5ed0 <elf64_xlatetom@@ELFUTILS_1.0+0x514>  // b.plast
    5e9c:	ldr	w2, [x1]
    5ea0:	rev	w2, w2
    5ea4:	str	w2, [x0]
    5ea8:	ldr	w2, [x1, #4]
    5eac:	rev	w2, w2
    5eb0:	str	w2, [x0, #4]
    5eb4:	ldr	w2, [x1, #8]
    5eb8:	rev	w2, w2
    5ebc:	str	w2, [x0, #8]
    5ec0:	add	x0, x0, #0xc
    5ec4:	add	x1, x1, #0xc
    5ec8:	subs	x3, x3, #0x1
    5ecc:	b.ne	5e9c <elf64_xlatetom@@ELFUTILS_1.0+0x4e0>  // b.any
    5ed0:	ret
    5ed4:	lsr	x3, x2, #3
    5ed8:	cmp	x2, #0x7
    5edc:	b.ls	5f08 <elf64_xlatetom@@ELFUTILS_1.0+0x54c>  // b.plast
    5ee0:	ldr	w2, [x1]
    5ee4:	rev	w2, w2
    5ee8:	str	w2, [x0]
    5eec:	ldr	w2, [x1, #4]
    5ef0:	rev	w2, w2
    5ef4:	str	w2, [x0, #4]
    5ef8:	add	x0, x0, #0x8
    5efc:	add	x1, x1, #0x8
    5f00:	subs	x3, x3, #0x1
    5f04:	b.ne	5ee0 <elf64_xlatetom@@ELFUTILS_1.0+0x524>  // b.any
    5f08:	ret
    5f0c:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
    5f10:	movk	x3, #0xcccd
    5f14:	umulh	x3, x2, x3
    5f18:	lsr	x3, x3, #5
    5f1c:	cmp	x2, #0x27
    5f20:	b.ls	5fac <elf64_xlatetom@@ELFUTILS_1.0+0x5f0>  // b.plast
    5f24:	ldr	w2, [x1]
    5f28:	rev	w2, w2
    5f2c:	str	w2, [x0]
    5f30:	ldr	w2, [x1, #4]
    5f34:	rev	w2, w2
    5f38:	str	w2, [x0, #4]
    5f3c:	ldr	w2, [x1, #8]
    5f40:	rev	w2, w2
    5f44:	str	w2, [x0, #8]
    5f48:	ldr	w2, [x1, #12]
    5f4c:	rev	w2, w2
    5f50:	str	w2, [x0, #12]
    5f54:	ldr	w2, [x1, #16]
    5f58:	rev	w2, w2
    5f5c:	str	w2, [x0, #16]
    5f60:	ldr	w2, [x1, #20]
    5f64:	rev	w2, w2
    5f68:	str	w2, [x0, #20]
    5f6c:	ldr	w2, [x1, #24]
    5f70:	rev	w2, w2
    5f74:	str	w2, [x0, #24]
    5f78:	ldr	w2, [x1, #28]
    5f7c:	rev	w2, w2
    5f80:	str	w2, [x0, #28]
    5f84:	ldr	w2, [x1, #32]
    5f88:	rev	w2, w2
    5f8c:	str	w2, [x0, #32]
    5f90:	ldr	w2, [x1, #36]
    5f94:	rev	w2, w2
    5f98:	str	w2, [x0, #36]
    5f9c:	add	x0, x0, #0x28
    5fa0:	add	x1, x1, #0x28
    5fa4:	subs	x3, x3, #0x1
    5fa8:	b.ne	5f24 <elf64_xlatetom@@ELFUTILS_1.0+0x568>  // b.any
    5fac:	ret
    5fb0:	lsr	x3, x2, #5
    5fb4:	cmp	x2, #0x1f
    5fb8:	b.ls	602c <elf64_xlatetom@@ELFUTILS_1.0+0x670>  // b.plast
    5fbc:	ldr	w2, [x1]
    5fc0:	rev	w2, w2
    5fc4:	str	w2, [x0]
    5fc8:	ldr	w2, [x1, #4]
    5fcc:	rev	w2, w2
    5fd0:	str	w2, [x0, #4]
    5fd4:	ldr	w2, [x1, #8]
    5fd8:	rev	w2, w2
    5fdc:	str	w2, [x0, #8]
    5fe0:	ldr	w2, [x1, #12]
    5fe4:	rev	w2, w2
    5fe8:	str	w2, [x0, #12]
    5fec:	ldr	w2, [x1, #16]
    5ff0:	rev	w2, w2
    5ff4:	str	w2, [x0, #16]
    5ff8:	ldr	w2, [x1, #20]
    5ffc:	rev	w2, w2
    6000:	str	w2, [x0, #20]
    6004:	ldr	w2, [x1, #24]
    6008:	rev	w2, w2
    600c:	str	w2, [x0, #24]
    6010:	ldr	w2, [x1, #28]
    6014:	rev	w2, w2
    6018:	str	w2, [x0, #28]
    601c:	add	x0, x0, #0x20
    6020:	add	x1, x1, #0x20
    6024:	subs	x3, x3, #0x1
    6028:	b.ne	5fbc <elf64_xlatetom@@ELFUTILS_1.0+0x600>  // b.any
    602c:	ret
    6030:	lsr	x4, x2, #2
    6034:	cmp	x0, x1
    6038:	b.cs	6064 <elf64_xlatetom@@ELFUTILS_1.0+0x6a8>  // b.hs, b.nlast
    603c:	cmp	x2, #0x3
    6040:	b.ls	6060 <elf64_xlatetom@@ELFUTILS_1.0+0x6a4>  // b.plast
    6044:	mov	x2, #0x0                   	// #0
    6048:	ldr	w3, [x1, x2, lsl #2]
    604c:	rev	w3, w3
    6050:	str	w3, [x0, x2, lsl #2]
    6054:	add	x2, x2, #0x1
    6058:	cmp	x4, x2
    605c:	b.ne	6048 <elf64_xlatetom@@ELFUTILS_1.0+0x68c>  // b.any
    6060:	ret
    6064:	sub	x3, x4, #0x1
    6068:	cmp	x2, #0x3
    606c:	b.ls	6060 <elf64_xlatetom@@ELFUTILS_1.0+0x6a4>  // b.plast
    6070:	sub	x4, x2, x4, lsl #2
    6074:	add	x2, x1, x4
    6078:	add	x1, x0, x4
    607c:	ldr	w0, [x2, x3, lsl #2]
    6080:	rev	w0, w0
    6084:	str	w0, [x1, x3, lsl #2]
    6088:	sub	x3, x3, #0x1
    608c:	cmn	x3, #0x1
    6090:	b.ne	607c <elf64_xlatetom@@ELFUTILS_1.0+0x6c0>  // b.any
    6094:	b	6060 <elf64_xlatetom@@ELFUTILS_1.0+0x6a4>
    6098:	cbz	x2, 6110 <elf64_xlatetom@@ELFUTILS_1.0+0x754>
    609c:	stp	x29, x30, [sp, #-48]!
    60a0:	mov	x29, sp
    60a4:	stp	x19, x20, [sp, #16]
    60a8:	str	x21, [sp, #32]
    60ac:	mov	x20, x0
    60b0:	mov	x21, x1
    60b4:	mov	x19, x2
    60b8:	cmp	x0, x1
    60bc:	b.eq	60c4 <elf64_xlatetom@@ELFUTILS_1.0+0x708>  // b.none
    60c0:	bl	3070 <memmove@plt>
    60c4:	cmp	x19, #0x17
    60c8:	b.hi	60dc <elf64_xlatetom@@ELFUTILS_1.0+0x720>  // b.pmore
    60cc:	ldp	x19, x20, [sp, #16]
    60d0:	ldr	x21, [sp, #32]
    60d4:	ldp	x29, x30, [sp], #48
    60d8:	ret
    60dc:	ldr	w0, [x21]
    60e0:	rev	w0, w0
    60e4:	str	w0, [x20]
    60e8:	ldr	w0, [x21, #4]
    60ec:	rev	w0, w0
    60f0:	str	w0, [x20, #4]
    60f4:	ldr	x0, [x21, #8]
    60f8:	rev	x0, x0
    60fc:	str	x0, [x20, #8]
    6100:	ldr	x0, [x21, #16]
    6104:	rev	x0, x0
    6108:	str	x0, [x20, #16]
    610c:	b	60cc <elf64_xlatetom@@ELFUTILS_1.0+0x710>
    6110:	ret
    6114:	lsr	x4, x2, #3
    6118:	cmp	x0, x1
    611c:	b.cs	6148 <elf64_xlatetom@@ELFUTILS_1.0+0x78c>  // b.hs, b.nlast
    6120:	cmp	x2, #0x7
    6124:	b.ls	6144 <elf64_xlatetom@@ELFUTILS_1.0+0x788>  // b.plast
    6128:	mov	x2, #0x0                   	// #0
    612c:	ldr	x3, [x1, x2, lsl #3]
    6130:	rev	x3, x3
    6134:	str	x3, [x0, x2, lsl #3]
    6138:	add	x2, x2, #0x1
    613c:	cmp	x4, x2
    6140:	b.ne	612c <elf64_xlatetom@@ELFUTILS_1.0+0x770>  // b.any
    6144:	ret
    6148:	sub	x3, x4, #0x1
    614c:	cmp	x2, #0x7
    6150:	b.ls	6144 <elf64_xlatetom@@ELFUTILS_1.0+0x788>  // b.plast
    6154:	sub	x4, x2, x4, lsl #3
    6158:	add	x2, x1, x4
    615c:	add	x1, x0, x4
    6160:	ldr	x0, [x2, x3, lsl #3]
    6164:	rev	x0, x0
    6168:	str	x0, [x1, x3, lsl #3]
    616c:	sub	x3, x3, #0x1
    6170:	cmn	x3, #0x1
    6174:	b.ne	6160 <elf64_xlatetom@@ELFUTILS_1.0+0x7a4>  // b.any
    6178:	b	6144 <elf64_xlatetom@@ELFUTILS_1.0+0x788>
    617c:	lsr	x3, x2, #4
    6180:	cmp	x2, #0xf
    6184:	b.ls	61b0 <elf64_xlatetom@@ELFUTILS_1.0+0x7f4>  // b.plast
    6188:	ldr	x2, [x1]
    618c:	rev	x2, x2
    6190:	str	x2, [x0]
    6194:	ldr	x2, [x1, #8]
    6198:	rev	x2, x2
    619c:	str	x2, [x0, #8]
    61a0:	add	x0, x0, #0x10
    61a4:	add	x1, x1, #0x10
    61a8:	subs	x3, x3, #0x1
    61ac:	b.ne	6188 <elf64_xlatetom@@ELFUTILS_1.0+0x7cc>  // b.any
    61b0:	ret
    61b4:	lsr	x3, x2, #4
    61b8:	cmp	x2, #0xf
    61bc:	b.ls	61e8 <elf64_xlatetom@@ELFUTILS_1.0+0x82c>  // b.plast
    61c0:	ldr	x2, [x1]
    61c4:	rev	x2, x2
    61c8:	str	x2, [x0]
    61cc:	ldr	x2, [x1, #8]
    61d0:	rev	x2, x2
    61d4:	str	x2, [x0, #8]
    61d8:	add	x0, x0, #0x10
    61dc:	add	x1, x1, #0x10
    61e0:	subs	x3, x3, #0x1
    61e4:	b.ne	61c0 <elf64_xlatetom@@ELFUTILS_1.0+0x804>  // b.any
    61e8:	ret
    61ec:	lsr	x3, x2, #4
    61f0:	cmp	x2, #0xf
    61f4:	b.ls	6220 <elf64_xlatetom@@ELFUTILS_1.0+0x864>  // b.plast
    61f8:	ldr	x2, [x1]
    61fc:	rev	x2, x2
    6200:	str	x2, [x0]
    6204:	ldr	x2, [x1, #8]
    6208:	rev	x2, x2
    620c:	str	x2, [x0, #8]
    6210:	add	x0, x0, #0x10
    6214:	add	x1, x1, #0x10
    6218:	subs	x3, x3, #0x1
    621c:	b.ne	61f8 <elf64_xlatetom@@ELFUTILS_1.0+0x83c>  // b.any
    6220:	ret
    6224:	lsr	x4, x2, #3
    6228:	cmp	x0, x1
    622c:	b.cs	6258 <elf64_xlatetom@@ELFUTILS_1.0+0x89c>  // b.hs, b.nlast
    6230:	cmp	x2, #0x7
    6234:	b.ls	6254 <elf64_xlatetom@@ELFUTILS_1.0+0x898>  // b.plast
    6238:	mov	x2, #0x0                   	// #0
    623c:	ldr	x3, [x1, x2, lsl #3]
    6240:	rev	x3, x3
    6244:	str	x3, [x0, x2, lsl #3]
    6248:	add	x2, x2, #0x1
    624c:	cmp	x4, x2
    6250:	b.ne	623c <elf64_xlatetom@@ELFUTILS_1.0+0x880>  // b.any
    6254:	ret
    6258:	sub	x3, x4, #0x1
    625c:	cmp	x2, #0x7
    6260:	b.ls	6254 <elf64_xlatetom@@ELFUTILS_1.0+0x898>  // b.plast
    6264:	sub	x4, x2, x4, lsl #3
    6268:	add	x2, x1, x4
    626c:	add	x1, x0, x4
    6270:	ldr	x0, [x2, x3, lsl #3]
    6274:	rev	x0, x0
    6278:	str	x0, [x1, x3, lsl #3]
    627c:	sub	x3, x3, #0x1
    6280:	cmn	x3, #0x1
    6284:	b.ne	6270 <elf64_xlatetom@@ELFUTILS_1.0+0x8b4>  // b.any
    6288:	b	6254 <elf64_xlatetom@@ELFUTILS_1.0+0x898>
    628c:	cmp	x2, #0x3
    6290:	b.ls	635c <elf64_xlatetom@@ELFUTILS_1.0+0x9a0>  // b.plast
    6294:	ldr	w4, [x1]
    6298:	rev	w4, w4
    629c:	str	w4, [x0]
    62a0:	sub	x4, x2, #0x4
    62a4:	mov	x2, #0x4                   	// #4
    62a8:	cmp	x4, #0x3
    62ac:	b.ls	635c <elf64_xlatetom@@ELFUTILS_1.0+0x9a0>  // b.plast
    62b0:	ldr	w5, [x1, x2]
    62b4:	rev	w5, w5
    62b8:	str	w5, [x0, x2]
    62bc:	sub	x4, x4, #0x4
    62c0:	add	x2, x2, #0x4
    62c4:	cmp	x2, #0x10
    62c8:	b.ne	62a8 <elf64_xlatetom@@ELFUTILS_1.0+0x8ec>  // b.any
    62cc:	cbz	w3, 6314 <elf64_xlatetom@@ELFUTILS_1.0+0x958>
    62d0:	ldr	w6, [x1, #8]
    62d4:	cbz	w6, 631c <elf64_xlatetom@@ELFUTILS_1.0+0x960>
    62d8:	cmp	x4, #0x7
    62dc:	b.ls	635c <elf64_xlatetom@@ELFUTILS_1.0+0x9a0>  // b.plast
    62e0:	sub	w5, w6, #0x1
    62e4:	add	x5, x5, #0x2
    62e8:	lsl	x5, x5, #3
    62ec:	ldr	x3, [x1, x2]
    62f0:	rev	x3, x3
    62f4:	str	x3, [x0, x2]
    62f8:	sub	x4, x4, #0x8
    62fc:	cmp	x5, x2
    6300:	b.eq	631c <elf64_xlatetom@@ELFUTILS_1.0+0x960>  // b.none
    6304:	add	x2, x2, #0x8
    6308:	cmp	x4, #0x7
    630c:	b.hi	62ec <elf64_xlatetom@@ELFUTILS_1.0+0x930>  // b.pmore
    6310:	b	635c <elf64_xlatetom@@ELFUTILS_1.0+0x9a0>
    6314:	ldr	w6, [x0, #8]
    6318:	b	62d4 <elf64_xlatetom@@ELFUTILS_1.0+0x918>
    631c:	ubfiz	x6, x6, #3, #32
    6320:	add	x6, x6, #0x10
    6324:	add	x2, x1, x6
    6328:	add	x1, x0, x6
    632c:	cmp	x4, #0x3
    6330:	b.ls	635c <elf64_xlatetom@@ELFUTILS_1.0+0x9a0>  // b.plast
    6334:	sub	x0, x4, #0x4
    6338:	and	x0, x0, #0xfffffffffffffffc
    633c:	add	x0, x0, #0x4
    6340:	mov	x3, #0x0                   	// #0
    6344:	ldr	w4, [x2, x3]
    6348:	rev	w4, w4
    634c:	str	w4, [x1, x3]
    6350:	add	x3, x3, #0x4
    6354:	cmp	x3, x0
    6358:	b.ne	6344 <elf64_xlatetom@@ELFUTILS_1.0+0x988>  // b.any
    635c:	ret
    6360:	lsr	x4, x2, #3
    6364:	cmp	x0, x1
    6368:	b.cs	6394 <elf64_xlatetom@@ELFUTILS_1.0+0x9d8>  // b.hs, b.nlast
    636c:	cmp	x2, #0x7
    6370:	b.ls	6390 <elf64_xlatetom@@ELFUTILS_1.0+0x9d4>  // b.plast
    6374:	mov	x2, #0x0                   	// #0
    6378:	ldr	x3, [x1, x2, lsl #3]
    637c:	rev	x3, x3
    6380:	str	x3, [x0, x2, lsl #3]
    6384:	add	x2, x2, #0x1
    6388:	cmp	x4, x2
    638c:	b.ne	6378 <elf64_xlatetom@@ELFUTILS_1.0+0x9bc>  // b.any
    6390:	ret
    6394:	sub	x3, x4, #0x1
    6398:	cmp	x2, #0x7
    639c:	b.ls	6390 <elf64_xlatetom@@ELFUTILS_1.0+0x9d4>  // b.plast
    63a0:	sub	x4, x2, x4, lsl #3
    63a4:	add	x2, x1, x4
    63a8:	add	x1, x0, x4
    63ac:	ldr	x0, [x2, x3, lsl #3]
    63b0:	rev	x0, x0
    63b4:	str	x0, [x1, x3, lsl #3]
    63b8:	sub	x3, x3, #0x1
    63bc:	cmn	x3, #0x1
    63c0:	b.ne	63ac <elf64_xlatetom@@ELFUTILS_1.0+0x9f0>  // b.any
    63c4:	b	6390 <elf64_xlatetom@@ELFUTILS_1.0+0x9d4>
    63c8:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    63cc:	movk	x3, #0xaaab
    63d0:	umulh	x3, x2, x3
    63d4:	lsr	x3, x3, #4
    63d8:	cmp	x2, #0x17
    63dc:	b.ls	6414 <elf64_xlatetom@@ELFUTILS_1.0+0xa58>  // b.plast
    63e0:	ldr	x2, [x1]
    63e4:	rev	x2, x2
    63e8:	str	x2, [x0]
    63ec:	ldr	x2, [x1, #8]
    63f0:	rev	x2, x2
    63f4:	str	x2, [x0, #8]
    63f8:	ldr	x2, [x1, #16]
    63fc:	rev	x2, x2
    6400:	str	x2, [x0, #16]
    6404:	add	x0, x0, #0x18
    6408:	add	x1, x1, #0x18
    640c:	subs	x3, x3, #0x1
    6410:	b.ne	63e0 <elf64_xlatetom@@ELFUTILS_1.0+0xa24>  // b.any
    6414:	ret
    6418:	lsr	x3, x2, #6
    641c:	cmp	x2, #0x3f
    6420:	b.ls	64ac <elf64_xlatetom@@ELFUTILS_1.0+0xaf0>  // b.plast
    6424:	ldr	w2, [x1]
    6428:	rev	w2, w2
    642c:	str	w2, [x0]
    6430:	ldr	w2, [x1, #4]
    6434:	rev	w2, w2
    6438:	str	w2, [x0, #4]
    643c:	ldr	x2, [x1, #8]
    6440:	rev	x2, x2
    6444:	str	x2, [x0, #8]
    6448:	ldr	x2, [x1, #16]
    644c:	rev	x2, x2
    6450:	str	x2, [x0, #16]
    6454:	ldr	x2, [x1, #24]
    6458:	rev	x2, x2
    645c:	str	x2, [x0, #24]
    6460:	ldr	x2, [x1, #32]
    6464:	rev	x2, x2
    6468:	str	x2, [x0, #32]
    646c:	ldr	w2, [x1, #40]
    6470:	rev	w2, w2
    6474:	str	w2, [x0, #40]
    6478:	ldr	w2, [x1, #44]
    647c:	rev	w2, w2
    6480:	str	w2, [x0, #44]
    6484:	ldr	x2, [x1, #48]
    6488:	rev	x2, x2
    648c:	str	x2, [x0, #48]
    6490:	ldr	x2, [x1, #56]
    6494:	rev	x2, x2
    6498:	str	x2, [x0, #56]
    649c:	add	x0, x0, #0x40
    64a0:	add	x1, x1, #0x40
    64a4:	subs	x3, x3, #0x1
    64a8:	b.ne	6424 <elf64_xlatetom@@ELFUTILS_1.0+0xa68>  // b.any
    64ac:	ret
    64b0:	lsr	x3, x2, #3
    64b4:	mov	x4, #0x2493                	// #9363
    64b8:	movk	x4, #0x9249, lsl #16
    64bc:	movk	x4, #0x4924, lsl #32
    64c0:	movk	x4, #0x2492, lsl #48
    64c4:	umulh	x3, x3, x4
    64c8:	cmp	x2, #0x37
    64cc:	b.ls	6540 <elf64_xlatetom@@ELFUTILS_1.0+0xb84>  // b.plast
    64d0:	ldr	w2, [x1]
    64d4:	rev	w2, w2
    64d8:	str	w2, [x0]
    64dc:	ldr	w2, [x1, #4]
    64e0:	rev	w2, w2
    64e4:	str	w2, [x0, #4]
    64e8:	ldr	x2, [x1, #8]
    64ec:	rev	x2, x2
    64f0:	str	x2, [x0, #8]
    64f4:	ldr	x2, [x1, #16]
    64f8:	rev	x2, x2
    64fc:	str	x2, [x0, #16]
    6500:	ldr	x2, [x1, #24]
    6504:	rev	x2, x2
    6508:	str	x2, [x0, #24]
    650c:	ldr	x2, [x1, #32]
    6510:	rev	x2, x2
    6514:	str	x2, [x0, #32]
    6518:	ldr	x2, [x1, #40]
    651c:	rev	x2, x2
    6520:	str	x2, [x0, #40]
    6524:	ldr	x2, [x1, #48]
    6528:	rev	x2, x2
    652c:	str	x2, [x0, #48]
    6530:	add	x0, x0, #0x38
    6534:	add	x1, x1, #0x38
    6538:	subs	x3, x3, #0x1
    653c:	b.ne	64d0 <elf64_xlatetom@@ELFUTILS_1.0+0xb14>  // b.any
    6540:	ret
    6544:	lsr	x4, x2, #3
    6548:	cmp	x0, x1
    654c:	b.cs	6578 <elf64_xlatetom@@ELFUTILS_1.0+0xbbc>  // b.hs, b.nlast
    6550:	cmp	x2, #0x7
    6554:	b.ls	6574 <elf64_xlatetom@@ELFUTILS_1.0+0xbb8>  // b.plast
    6558:	mov	x2, #0x0                   	// #0
    655c:	ldr	x3, [x1, x2, lsl #3]
    6560:	rev	x3, x3
    6564:	str	x3, [x0, x2, lsl #3]
    6568:	add	x2, x2, #0x1
    656c:	cmp	x4, x2
    6570:	b.ne	655c <elf64_xlatetom@@ELFUTILS_1.0+0xba0>  // b.any
    6574:	ret
    6578:	sub	x3, x4, #0x1
    657c:	cmp	x2, #0x7
    6580:	b.ls	6574 <elf64_xlatetom@@ELFUTILS_1.0+0xbb8>  // b.plast
    6584:	sub	x4, x2, x4, lsl #3
    6588:	add	x2, x1, x4
    658c:	add	x1, x0, x4
    6590:	ldr	x0, [x2, x3, lsl #3]
    6594:	rev	x0, x0
    6598:	str	x0, [x1, x3, lsl #3]
    659c:	sub	x3, x3, #0x1
    65a0:	cmn	x3, #0x1
    65a4:	b.ne	6590 <elf64_xlatetom@@ELFUTILS_1.0+0xbd4>  // b.any
    65a8:	b	6574 <elf64_xlatetom@@ELFUTILS_1.0+0xbb8>
    65ac:	lsr	x4, x2, #3
    65b0:	cmp	x0, x1
    65b4:	b.cs	65e0 <elf64_xlatetom@@ELFUTILS_1.0+0xc24>  // b.hs, b.nlast
    65b8:	cmp	x2, #0x7
    65bc:	b.ls	65dc <elf64_xlatetom@@ELFUTILS_1.0+0xc20>  // b.plast
    65c0:	mov	x2, #0x0                   	// #0
    65c4:	ldr	x3, [x1, x2, lsl #3]
    65c8:	rev	x3, x3
    65cc:	str	x3, [x0, x2, lsl #3]
    65d0:	add	x2, x2, #0x1
    65d4:	cmp	x4, x2
    65d8:	b.ne	65c4 <elf64_xlatetom@@ELFUTILS_1.0+0xc08>  // b.any
    65dc:	ret
    65e0:	sub	x3, x4, #0x1
    65e4:	cmp	x2, #0x7
    65e8:	b.ls	65dc <elf64_xlatetom@@ELFUTILS_1.0+0xc20>  // b.plast
    65ec:	sub	x4, x2, x4, lsl #3
    65f0:	add	x2, x1, x4
    65f4:	add	x1, x0, x4
    65f8:	ldr	x0, [x2, x3, lsl #3]
    65fc:	rev	x0, x0
    6600:	str	x0, [x1, x3, lsl #3]
    6604:	sub	x3, x3, #0x1
    6608:	cmn	x3, #0x1
    660c:	b.ne	65f8 <elf64_xlatetom@@ELFUTILS_1.0+0xc3c>  // b.any
    6610:	b	65dc <elf64_xlatetom@@ELFUTILS_1.0+0xc20>
    6614:	lsr	x4, x2, #3
    6618:	cmp	x0, x1
    661c:	b.cs	6648 <elf64_xlatetom@@ELFUTILS_1.0+0xc8c>  // b.hs, b.nlast
    6620:	cmp	x2, #0x7
    6624:	b.ls	6644 <elf64_xlatetom@@ELFUTILS_1.0+0xc88>  // b.plast
    6628:	mov	x2, #0x0                   	// #0
    662c:	ldr	x3, [x1, x2, lsl #3]
    6630:	rev	x3, x3
    6634:	str	x3, [x0, x2, lsl #3]
    6638:	add	x2, x2, #0x1
    663c:	cmp	x4, x2
    6640:	b.ne	662c <elf64_xlatetom@@ELFUTILS_1.0+0xc70>  // b.any
    6644:	ret
    6648:	sub	x3, x4, #0x1
    664c:	cmp	x2, #0x7
    6650:	b.ls	6644 <elf64_xlatetom@@ELFUTILS_1.0+0xc88>  // b.plast
    6654:	sub	x4, x2, x4, lsl #3
    6658:	add	x2, x1, x4
    665c:	add	x1, x0, x4
    6660:	ldr	x0, [x2, x3, lsl #3]
    6664:	rev	x0, x0
    6668:	str	x0, [x1, x3, lsl #3]
    666c:	sub	x3, x3, #0x1
    6670:	cmn	x3, #0x1
    6674:	b.ne	6660 <elf64_xlatetom@@ELFUTILS_1.0+0xca4>  // b.any
    6678:	b	6644 <elf64_xlatetom@@ELFUTILS_1.0+0xc88>
    667c:	lsr	x3, x2, #5
    6680:	cmp	x2, #0x1f
    6684:	b.ls	66d4 <elf64_xlatetom@@ELFUTILS_1.0+0xd18>  // b.plast
    6688:	ldr	x2, [x1]
    668c:	rev	x2, x2
    6690:	str	x2, [x0]
    6694:	ldr	x2, [x1, #8]
    6698:	rev	x2, x2
    669c:	str	x2, [x0, #8]
    66a0:	ldr	x2, [x1, #16]
    66a4:	rev	x2, x2
    66a8:	str	x2, [x0, #16]
    66ac:	ldrh	w2, [x1, #24]
    66b0:	rev16	w2, w2
    66b4:	strh	w2, [x0, #24]
    66b8:	ldrh	w2, [x1, #26]
    66bc:	rev16	w2, w2
    66c0:	strh	w2, [x0, #26]
    66c4:	add	x0, x0, #0x20
    66c8:	add	x1, x1, #0x20
    66cc:	subs	x3, x3, #0x1
    66d0:	b.ne	6688 <elf64_xlatetom@@ELFUTILS_1.0+0xccc>  // b.any
    66d4:	ret
    66d8:	lsr	x3, x2, #2
    66dc:	cmp	x2, #0x3
    66e0:	b.ls	670c <elf64_xlatetom@@ELFUTILS_1.0+0xd50>  // b.plast
    66e4:	ldrh	w2, [x1]
    66e8:	rev16	w2, w2
    66ec:	strh	w2, [x0]
    66f0:	ldrh	w2, [x1, #2]
    66f4:	rev16	w2, w2
    66f8:	strh	w2, [x0, #2]
    66fc:	add	x0, x0, #0x4
    6700:	add	x1, x1, #0x4
    6704:	subs	x3, x3, #0x1
    6708:	b.ne	66e4 <elf64_xlatetom@@ELFUTILS_1.0+0xd28>  // b.any
    670c:	ret
    6710:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    6714:	movk	x3, #0xaaab
    6718:	umulh	x3, x2, x3
    671c:	lsr	x3, x3, #4
    6720:	cmp	x2, #0x17
    6724:	b.ls	6778 <elf64_xlatetom@@ELFUTILS_1.0+0xdbc>  // b.plast
    6728:	ldr	w2, [x1]
    672c:	rev	w2, w2
    6730:	str	w2, [x0]
    6734:	ldrb	w2, [x1, #4]
    6738:	strb	w2, [x0, #4]
    673c:	ldrb	w2, [x1, #5]
    6740:	strb	w2, [x0, #5]
    6744:	ldrh	w2, [x1, #6]
    6748:	rev16	w2, w2
    674c:	strh	w2, [x0, #6]
    6750:	ldr	x2, [x1, #8]
    6754:	rev	x2, x2
    6758:	str	x2, [x0, #8]
    675c:	ldr	x2, [x1, #16]
    6760:	rev	x2, x2
    6764:	str	x2, [x0, #16]
    6768:	add	x0, x0, #0x18
    676c:	add	x1, x1, #0x18
    6770:	subs	x3, x3, #0x1
    6774:	b.ne	6728 <elf64_xlatetom@@ELFUTILS_1.0+0xd6c>  // b.any
    6778:	ret
    677c:	lsr	x4, x2, #1
    6780:	cmp	x0, x1
    6784:	b.cs	67b0 <elf64_xlatetom@@ELFUTILS_1.0+0xdf4>  // b.hs, b.nlast
    6788:	cmp	x2, #0x1
    678c:	b.ls	67ac <elf64_xlatetom@@ELFUTILS_1.0+0xdf0>  // b.plast
    6790:	mov	x2, #0x0                   	// #0
    6794:	ldrh	w3, [x1, x2, lsl #1]
    6798:	rev16	w3, w3
    679c:	strh	w3, [x0, x2, lsl #1]
    67a0:	add	x2, x2, #0x1
    67a4:	cmp	x4, x2
    67a8:	b.ne	6794 <elf64_xlatetom@@ELFUTILS_1.0+0xdd8>  // b.any
    67ac:	ret
    67b0:	sub	x3, x4, #0x1
    67b4:	cmp	x2, #0x1
    67b8:	b.ls	67ac <elf64_xlatetom@@ELFUTILS_1.0+0xdf0>  // b.plast
    67bc:	sub	x4, x2, x4, lsl #1
    67c0:	add	x2, x1, x4
    67c4:	add	x1, x0, x4
    67c8:	ldrh	w0, [x2, x3, lsl #1]
    67cc:	rev16	w0, w0
    67d0:	strh	w0, [x1, x3, lsl #1]
    67d4:	sub	x3, x3, #0x1
    67d8:	cmn	x3, #0x1
    67dc:	b.ne	67c8 <elf64_xlatetom@@ELFUTILS_1.0+0xe0c>  // b.any
    67e0:	b	67ac <elf64_xlatetom@@ELFUTILS_1.0+0xdf0>
    67e4:	lsr	x3, x2, #6
    67e8:	cmp	x2, #0x3f
    67ec:	b.ls	68a4 <elf64_xlatetom@@ELFUTILS_1.0+0xee8>  // b.plast
    67f0:	ldp	x4, x5, [x1]
    67f4:	stp	x4, x5, [x0]
    67f8:	ldrh	w2, [x1, #16]
    67fc:	rev16	w2, w2
    6800:	strh	w2, [x0, #16]
    6804:	ldrh	w2, [x1, #18]
    6808:	rev16	w2, w2
    680c:	strh	w2, [x0, #18]
    6810:	ldr	w2, [x1, #20]
    6814:	rev	w2, w2
    6818:	str	w2, [x0, #20]
    681c:	ldr	x2, [x1, #24]
    6820:	rev	x2, x2
    6824:	str	x2, [x0, #24]
    6828:	ldr	x2, [x1, #32]
    682c:	rev	x2, x2
    6830:	str	x2, [x0, #32]
    6834:	ldr	x2, [x1, #40]
    6838:	rev	x2, x2
    683c:	str	x2, [x0, #40]
    6840:	ldr	w2, [x1, #48]
    6844:	rev	w2, w2
    6848:	str	w2, [x0, #48]
    684c:	ldrh	w2, [x1, #52]
    6850:	rev16	w2, w2
    6854:	strh	w2, [x0, #52]
    6858:	ldrh	w2, [x1, #54]
    685c:	rev16	w2, w2
    6860:	strh	w2, [x0, #54]
    6864:	ldrh	w2, [x1, #56]
    6868:	rev16	w2, w2
    686c:	strh	w2, [x0, #56]
    6870:	ldrh	w2, [x1, #58]
    6874:	rev16	w2, w2
    6878:	strh	w2, [x0, #58]
    687c:	ldrh	w2, [x1, #60]
    6880:	rev16	w2, w2
    6884:	strh	w2, [x0, #60]
    6888:	ldrh	w2, [x1, #62]
    688c:	rev16	w2, w2
    6890:	strh	w2, [x0, #62]
    6894:	add	x0, x0, #0x40
    6898:	add	x1, x1, #0x40
    689c:	subs	x3, x3, #0x1
    68a0:	b.ne	67f0 <elf64_xlatetom@@ELFUTILS_1.0+0xe34>  // b.any
    68a4:	ret
    68a8:	mov	x3, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    68ac:	movk	x3, #0xaaab
    68b0:	umulh	x3, x2, x3
    68b4:	lsr	x3, x3, #4
    68b8:	cmp	x2, #0x17
    68bc:	b.ls	690c <elf64_xlatetom@@ELFUTILS_1.0+0xf50>  // b.plast
    68c0:	ldr	x2, [x1]
    68c4:	rev	x2, x2
    68c8:	str	x2, [x0]
    68cc:	ldr	x2, [x1, #8]
    68d0:	rev	x2, x2
    68d4:	str	x2, [x0, #8]
    68d8:	ldur	x2, [x1, #12]
    68dc:	rev	x2, x2
    68e0:	stur	x2, [x0, #12]
    68e4:	ldrh	w2, [x1, #16]
    68e8:	rev16	w2, w2
    68ec:	strh	w2, [x0, #16]
    68f0:	ldrh	w2, [x1, #18]
    68f4:	rev16	w2, w2
    68f8:	strh	w2, [x0, #18]
    68fc:	add	x0, x0, #0x18
    6900:	add	x1, x1, #0x18
    6904:	subs	x3, x3, #0x1
    6908:	b.ne	68c0 <elf64_xlatetom@@ELFUTILS_1.0+0xf04>  // b.any
    690c:	ret
    6910:	lsr	x3, x2, #2
    6914:	cmp	x2, #0x3
    6918:	b.ls	6944 <elf64_xlatetom@@ELFUTILS_1.0+0xf88>  // b.plast
    691c:	ldrh	w2, [x1]
    6920:	rev16	w2, w2
    6924:	strh	w2, [x0]
    6928:	ldrh	w2, [x1, #2]
    692c:	rev16	w2, w2
    6930:	strh	w2, [x0, #2]
    6934:	add	x0, x0, #0x4
    6938:	add	x1, x1, #0x4
    693c:	subs	x3, x3, #0x1
    6940:	b.ne	691c <elf64_xlatetom@@ELFUTILS_1.0+0xf60>  // b.any
    6944:	ret
    6948:	lsr	x3, x2, #4
    694c:	cmp	x2, #0xf
    6950:	b.ls	69a4 <elf64_xlatetom@@ELFUTILS_1.0+0xfe8>  // b.plast
    6954:	ldr	w2, [x1]
    6958:	rev	w2, w2
    695c:	str	w2, [x0]
    6960:	ldr	w2, [x1, #4]
    6964:	rev	w2, w2
    6968:	str	w2, [x0, #4]
    696c:	ldr	w2, [x1, #8]
    6970:	rev	w2, w2
    6974:	str	w2, [x0, #8]
    6978:	ldrb	w2, [x1, #12]
    697c:	strb	w2, [x0, #12]
    6980:	ldrb	w2, [x1, #13]
    6984:	strb	w2, [x0, #13]
    6988:	ldrh	w2, [x1, #14]
    698c:	rev16	w2, w2
    6990:	strh	w2, [x0, #14]
    6994:	add	x0, x0, #0x10
    6998:	add	x1, x1, #0x10
    699c:	subs	x3, x3, #0x1
    69a0:	b.ne	6954 <elf64_xlatetom@@ELFUTILS_1.0+0xf98>  // b.any
    69a4:	ret
    69a8:	lsr	x4, x2, #1
    69ac:	cmp	x0, x1
    69b0:	b.cs	69dc <elf64_xlatetom@@ELFUTILS_1.0+0x1020>  // b.hs, b.nlast
    69b4:	cmp	x2, #0x1
    69b8:	b.ls	69d8 <elf64_xlatetom@@ELFUTILS_1.0+0x101c>  // b.plast
    69bc:	mov	x2, #0x0                   	// #0
    69c0:	ldrh	w3, [x1, x2, lsl #1]
    69c4:	rev16	w3, w3
    69c8:	strh	w3, [x0, x2, lsl #1]
    69cc:	add	x2, x2, #0x1
    69d0:	cmp	x4, x2
    69d4:	b.ne	69c0 <elf64_xlatetom@@ELFUTILS_1.0+0x1004>  // b.any
    69d8:	ret
    69dc:	sub	x3, x4, #0x1
    69e0:	cmp	x2, #0x1
    69e4:	b.ls	69d8 <elf64_xlatetom@@ELFUTILS_1.0+0x101c>  // b.plast
    69e8:	sub	x4, x2, x4, lsl #1
    69ec:	add	x2, x1, x4
    69f0:	add	x1, x0, x4
    69f4:	ldrh	w0, [x2, x3, lsl #1]
    69f8:	rev16	w0, w0
    69fc:	strh	w0, [x1, x3, lsl #1]
    6a00:	sub	x3, x3, #0x1
    6a04:	cmn	x3, #0x1
    6a08:	b.ne	69f4 <elf64_xlatetom@@ELFUTILS_1.0+0x1038>  // b.any
    6a0c:	b	69d8 <elf64_xlatetom@@ELFUTILS_1.0+0x101c>
    6a10:	mov	x3, #0x4ec5                	// #20165
    6a14:	movk	x3, #0xc4ec, lsl #16
    6a18:	movk	x3, #0xec4e, lsl #32
    6a1c:	movk	x3, #0x4ec4, lsl #48
    6a20:	umulh	x3, x2, x3
    6a24:	lsr	x3, x3, #4
    6a28:	cmp	x2, #0x33
    6a2c:	b.ls	6ae4 <elf64_xlatetom@@ELFUTILS_1.0+0x1128>  // b.plast
    6a30:	ldp	x4, x5, [x1]
    6a34:	stp	x4, x5, [x0]
    6a38:	ldrh	w2, [x1, #16]
    6a3c:	rev16	w2, w2
    6a40:	strh	w2, [x0, #16]
    6a44:	ldrh	w2, [x1, #18]
    6a48:	rev16	w2, w2
    6a4c:	strh	w2, [x0, #18]
    6a50:	ldr	w2, [x1, #20]
    6a54:	rev	w2, w2
    6a58:	str	w2, [x0, #20]
    6a5c:	ldr	w2, [x1, #24]
    6a60:	rev	w2, w2
    6a64:	str	w2, [x0, #24]
    6a68:	ldr	w2, [x1, #28]
    6a6c:	rev	w2, w2
    6a70:	str	w2, [x0, #28]
    6a74:	ldr	w2, [x1, #32]
    6a78:	rev	w2, w2
    6a7c:	str	w2, [x0, #32]
    6a80:	ldr	w2, [x1, #36]
    6a84:	rev	w2, w2
    6a88:	str	w2, [x0, #36]
    6a8c:	ldrh	w2, [x1, #40]
    6a90:	rev16	w2, w2
    6a94:	strh	w2, [x0, #40]
    6a98:	ldrh	w2, [x1, #42]
    6a9c:	rev16	w2, w2
    6aa0:	strh	w2, [x0, #42]
    6aa4:	ldrh	w2, [x1, #44]
    6aa8:	rev16	w2, w2
    6aac:	strh	w2, [x0, #44]
    6ab0:	ldrh	w2, [x1, #46]
    6ab4:	rev16	w2, w2
    6ab8:	strh	w2, [x0, #46]
    6abc:	ldrh	w2, [x1, #48]
    6ac0:	rev16	w2, w2
    6ac4:	strh	w2, [x0, #48]
    6ac8:	ldrh	w2, [x1, #50]
    6acc:	rev16	w2, w2
    6ad0:	strh	w2, [x0, #50]
    6ad4:	add	x0, x0, #0x34
    6ad8:	add	x1, x1, #0x34
    6adc:	subs	x3, x3, #0x1
    6ae0:	b.ne	6a30 <elf64_xlatetom@@ELFUTILS_1.0+0x1074>  // b.any
    6ae4:	ret
    6ae8:	cbnz	x2, 6af0 <elf64_xlatetom@@ELFUTILS_1.0+0x1134>
    6aec:	ret
    6af0:	stp	x29, x30, [sp, #-48]!
    6af4:	mov	x29, sp
    6af8:	stp	x19, x20, [sp, #16]
    6afc:	stp	x21, x22, [sp, #32]
    6b00:	mov	x20, x0
    6b04:	mov	x21, x1
    6b08:	mov	x19, x2
    6b0c:	mov	w22, w3
    6b10:	bl	3070 <memmove@plt>
    6b14:	mov	x1, #0x0                   	// #0
    6b18:	sub	x0, x19, x1
    6b1c:	cmp	x0, #0xf
    6b20:	b.ls	6bd8 <elf64_xlatetom@@ELFUTILS_1.0+0x121c>  // b.plast
    6b24:	add	x7, x20, x1
    6b28:	add	x3, x21, x1
    6b2c:	cbnz	w22, 6b74 <elf64_xlatetom@@ELFUTILS_1.0+0x11b8>
    6b30:	ldrh	w0, [x21, x1]
    6b34:	rev16	w0, w0
    6b38:	strh	w0, [x20, x1]
    6b3c:	ldrh	w0, [x3, #2]
    6b40:	rev16	w0, w0
    6b44:	strh	w0, [x7, #2]
    6b48:	ldr	w0, [x3, #4]
    6b4c:	rev	w0, w0
    6b50:	str	w0, [x7, #4]
    6b54:	ldr	w4, [x3, #8]
    6b58:	rev	w4, w4
    6b5c:	str	w4, [x7, #8]
    6b60:	ldr	w0, [x3, #12]
    6b64:	rev	w0, w0
    6b68:	str	w0, [x7, #12]
    6b6c:	add	x4, x1, w4, uxtw
    6b70:	b	6c3c <elf64_xlatetom@@ELFUTILS_1.0+0x1280>
    6b74:	ldr	w4, [x3, #8]
    6b78:	add	x4, x4, x1
    6b7c:	b	6c3c <elf64_xlatetom@@ELFUTILS_1.0+0x1280>
    6b80:	cbz	w22, 6be8 <elf64_xlatetom@@ELFUTILS_1.0+0x122c>
    6b84:	ldr	w0, [x3, #12]
    6b88:	add	x1, x1, x0
    6b8c:	ldrh	w0, [x3]
    6b90:	rev16	w0, w0
    6b94:	strh	w0, [x7]
    6b98:	ldrh	w0, [x3, #2]
    6b9c:	rev16	w0, w0
    6ba0:	strh	w0, [x7, #2]
    6ba4:	ldr	w0, [x3, #4]
    6ba8:	rev	w0, w0
    6bac:	str	w0, [x7, #4]
    6bb0:	ldr	w0, [x3, #8]
    6bb4:	rev	w0, w0
    6bb8:	str	w0, [x7, #8]
    6bbc:	ldr	w0, [x3, #12]
    6bc0:	rev	w0, w0
    6bc4:	str	w0, [x7, #12]
    6bc8:	ldr	w0, [x3, #12]
    6bcc:	cbz	w0, 6bd8 <elf64_xlatetom@@ELFUTILS_1.0+0x121c>
    6bd0:	cmp	x1, x19
    6bd4:	b.ls	6b18 <elf64_xlatetom@@ELFUTILS_1.0+0x115c>  // b.plast
    6bd8:	ldp	x19, x20, [sp, #16]
    6bdc:	ldp	x21, x22, [sp, #32]
    6be0:	ldp	x29, x30, [sp], #48
    6be4:	ret
    6be8:	ldr	w0, [x7, #12]
    6bec:	add	x1, x1, x0
    6bf0:	b	6bc8 <elf64_xlatetom@@ELFUTILS_1.0+0x120c>
    6bf4:	ldr	w0, [x21, x4]
    6bf8:	rev	w0, w0
    6bfc:	str	w0, [x20, x4]
    6c00:	ldrh	w0, [x5, #4]
    6c04:	rev16	w0, w0
    6c08:	strh	w0, [x6, #4]
    6c0c:	ldrh	w0, [x5, #6]
    6c10:	rev16	w0, w0
    6c14:	strh	w0, [x6, #6]
    6c18:	ldr	w0, [x5, #8]
    6c1c:	rev	w0, w0
    6c20:	str	w0, [x6, #8]
    6c24:	ldr	w2, [x5, #12]
    6c28:	rev	w2, w2
    6c2c:	str	w2, [x6, #12]
    6c30:	add	x4, x4, w2, uxtw
    6c34:	ldr	w0, [x5, #12]
    6c38:	cbz	w0, 6b80 <elf64_xlatetom@@ELFUTILS_1.0+0x11c4>
    6c3c:	cmp	x4, x19
    6c40:	b.hi	6bd8 <elf64_xlatetom@@ELFUTILS_1.0+0x121c>  // b.pmore
    6c44:	sub	x0, x19, x4
    6c48:	cmp	x0, #0xf
    6c4c:	b.ls	6bd8 <elf64_xlatetom@@ELFUTILS_1.0+0x121c>  // b.plast
    6c50:	add	x6, x20, x4
    6c54:	add	x5, x21, x4
    6c58:	cbz	w22, 6bf4 <elf64_xlatetom@@ELFUTILS_1.0+0x1238>
    6c5c:	ldr	w0, [x5, #12]
    6c60:	add	x4, x4, x0
    6c64:	ldr	w0, [x5]
    6c68:	rev	w0, w0
    6c6c:	str	w0, [x6]
    6c70:	ldrh	w0, [x5, #4]
    6c74:	rev16	w0, w0
    6c78:	strh	w0, [x6, #4]
    6c7c:	ldrh	w0, [x5, #6]
    6c80:	rev16	w0, w0
    6c84:	strh	w0, [x6, #6]
    6c88:	ldr	w0, [x5, #8]
    6c8c:	rev	w0, w0
    6c90:	str	w0, [x6, #8]
    6c94:	ldr	w0, [x5, #12]
    6c98:	rev	w0, w0
    6c9c:	str	w0, [x6, #12]
    6ca0:	b	6c34 <elf64_xlatetom@@ELFUTILS_1.0+0x1278>
    6ca4:	cbnz	x2, 6cac <elf64_xlatetom@@ELFUTILS_1.0+0x12f0>
    6ca8:	ret
    6cac:	stp	x29, x30, [sp, #-48]!
    6cb0:	mov	x29, sp
    6cb4:	stp	x19, x20, [sp, #16]
    6cb8:	stp	x21, x22, [sp, #32]
    6cbc:	mov	x20, x0
    6cc0:	mov	x21, x1
    6cc4:	mov	x19, x2
    6cc8:	mov	w22, w3
    6ccc:	bl	3070 <memmove@plt>
    6cd0:	mov	x3, #0x0                   	// #0
    6cd4:	sub	x0, x19, x3
    6cd8:	cmp	x0, #0x13
    6cdc:	b.ls	6dc4 <elf64_xlatetom@@ELFUTILS_1.0+0x1408>  // b.plast
    6ce0:	add	x7, x20, x3
    6ce4:	add	x6, x21, x3
    6ce8:	cbnz	w22, 6d48 <elf64_xlatetom@@ELFUTILS_1.0+0x138c>
    6cec:	ldrh	w0, [x21, x3]
    6cf0:	rev16	w0, w0
    6cf4:	strh	w0, [x20, x3]
    6cf8:	ldrh	w0, [x6, #2]
    6cfc:	rev16	w0, w0
    6d00:	strh	w0, [x7, #2]
    6d04:	ldrh	w0, [x6, #4]
    6d08:	rev16	w0, w0
    6d0c:	strh	w0, [x7, #4]
    6d10:	ldrh	w0, [x6, #6]
    6d14:	rev16	w0, w0
    6d18:	strh	w0, [x7, #6]
    6d1c:	ldr	w0, [x6, #8]
    6d20:	rev	w0, w0
    6d24:	str	w0, [x7, #8]
    6d28:	ldr	w4, [x6, #12]
    6d2c:	rev	w4, w4
    6d30:	str	w4, [x7, #12]
    6d34:	ldr	w0, [x6, #16]
    6d38:	rev	w0, w0
    6d3c:	str	w0, [x7, #16]
    6d40:	add	x4, x3, w4, uxtw
    6d44:	b	6e04 <elf64_xlatetom@@ELFUTILS_1.0+0x1448>
    6d48:	ldr	w4, [x6, #12]
    6d4c:	add	x4, x4, x3
    6d50:	b	6e04 <elf64_xlatetom@@ELFUTILS_1.0+0x1448>
    6d54:	cbz	w22, 6dd4 <elf64_xlatetom@@ELFUTILS_1.0+0x1418>
    6d58:	ldr	w0, [x6, #16]
    6d5c:	add	x3, x3, x0
    6d60:	ldrh	w0, [x6]
    6d64:	rev16	w0, w0
    6d68:	strh	w0, [x7]
    6d6c:	ldrh	w0, [x6, #2]
    6d70:	rev16	w0, w0
    6d74:	strh	w0, [x7, #2]
    6d78:	ldrh	w0, [x6, #4]
    6d7c:	rev16	w0, w0
    6d80:	strh	w0, [x7, #4]
    6d84:	ldrh	w0, [x6, #6]
    6d88:	rev16	w0, w0
    6d8c:	strh	w0, [x7, #6]
    6d90:	ldr	w0, [x6, #8]
    6d94:	rev	w0, w0
    6d98:	str	w0, [x7, #8]
    6d9c:	ldr	w0, [x6, #12]
    6da0:	rev	w0, w0
    6da4:	str	w0, [x7, #12]
    6da8:	ldr	w0, [x6, #16]
    6dac:	rev	w0, w0
    6db0:	str	w0, [x7, #16]
    6db4:	ldr	w0, [x6, #16]
    6db8:	cbz	w0, 6dc4 <elf64_xlatetom@@ELFUTILS_1.0+0x1408>
    6dbc:	cmp	x3, x19
    6dc0:	b.ls	6cd4 <elf64_xlatetom@@ELFUTILS_1.0+0x1318>  // b.plast
    6dc4:	ldp	x19, x20, [sp, #16]
    6dc8:	ldp	x21, x22, [sp, #32]
    6dcc:	ldp	x29, x30, [sp], #48
    6dd0:	ret
    6dd4:	ldr	w0, [x7, #16]
    6dd8:	add	x3, x3, x0
    6ddc:	b	6db4 <elf64_xlatetom@@ELFUTILS_1.0+0x13f8>
    6de0:	ldr	w1, [x21, x4]
    6de4:	rev	w1, w1
    6de8:	str	w1, [x20, x4]
    6dec:	ldr	w2, [x5, #4]
    6df0:	rev	w2, w2
    6df4:	str	w2, [x0, #4]
    6df8:	add	x4, x4, w2, uxtw
    6dfc:	ldr	w0, [x5, #4]
    6e00:	cbz	w0, 6d54 <elf64_xlatetom@@ELFUTILS_1.0+0x1398>
    6e04:	cmp	x4, x19
    6e08:	b.hi	6dc4 <elf64_xlatetom@@ELFUTILS_1.0+0x1408>  // b.pmore
    6e0c:	sub	x0, x19, x4
    6e10:	cmp	x0, #0x7
    6e14:	b.ls	6dc4 <elf64_xlatetom@@ELFUTILS_1.0+0x1408>  // b.plast
    6e18:	add	x0, x20, x4
    6e1c:	add	x5, x21, x4
    6e20:	cbz	w22, 6de0 <elf64_xlatetom@@ELFUTILS_1.0+0x1424>
    6e24:	ldr	w1, [x5, #4]
    6e28:	add	x4, x4, x1
    6e2c:	ldr	w1, [x5]
    6e30:	rev	w1, w1
    6e34:	str	w1, [x0]
    6e38:	ldr	w1, [x5, #4]
    6e3c:	rev	w1, w1
    6e40:	str	w1, [x0, #4]
    6e44:	b	6dfc <elf64_xlatetom@@ELFUTILS_1.0+0x1440>
    6e48:	stp	x29, x30, [sp, #-64]!
    6e4c:	mov	x29, sp
    6e50:	stp	x19, x20, [sp, #16]
    6e54:	stp	x21, x22, [sp, #32]
    6e58:	stp	x23, x24, [sp, #48]
    6e5c:	mov	x20, x0
    6e60:	mov	x21, x1
    6e64:	mov	x22, x2
    6e68:	mov	w23, w3
    6e6c:	and	w24, w4, #0xff
    6e70:	cmp	x2, #0xb
    6e74:	b.hi	6f10 <elf64_xlatetom@@ELFUTILS_1.0+0x1554>  // b.pmore
    6e78:	b	6f64 <elf64_xlatetom@@ELFUTILS_1.0+0x15a8>
    6e7c:	add	x19, x19, #0xf
    6e80:	and	x0, x19, #0xfffffffc
    6e84:	cmp	x0, x22
    6e88:	ccmp	x0, #0xb, #0x0, ls  // ls = plast
    6e8c:	b.ls	6f58 <elf64_xlatetom@@ELFUTILS_1.0+0x159c>  // b.plast
    6e90:	ldr	w19, [x1, #4]
    6e94:	add	x19, x19, #0x3
    6e98:	add	x19, x19, x0
    6e9c:	and	x19, x19, #0xfffffffc
    6ea0:	b	6ed8 <elf64_xlatetom@@ELFUTILS_1.0+0x151c>
    6ea4:	sub	x22, x22, #0xc
    6ea8:	add	x21, x21, #0xc
    6eac:	add	x20, x20, #0xc
    6eb0:	b	6f64 <elf64_xlatetom@@ELFUTILS_1.0+0x15a8>
    6eb4:	mov	x2, x22
    6eb8:	mov	x1, x21
    6ebc:	mov	x0, x20
    6ec0:	bl	3060 <memcpy@plt>
    6ec4:	b	6f70 <elf64_xlatetom@@ELFUTILS_1.0+0x15b4>
    6ec8:	ldr	w19, [x1, #4]
    6ecc:	add	x19, x19, #0x7
    6ed0:	add	x19, x19, x0
    6ed4:	and	x19, x19, #0xfffffff8
    6ed8:	cmp	x19, x22
    6edc:	ccmp	x19, #0xb, #0x0, ls  // ls = plast
    6ee0:	b.ls	6ea4 <elf64_xlatetom@@ELFUTILS_1.0+0x14e8>  // b.plast
    6ee4:	add	x1, x21, #0xc
    6ee8:	add	x0, x20, #0xc
    6eec:	cmp	x1, x0
    6ef0:	b.eq	6efc <elf64_xlatetom@@ELFUTILS_1.0+0x1540>  // b.none
    6ef4:	sub	x2, x19, #0xc
    6ef8:	bl	3060 <memcpy@plt>
    6efc:	add	x21, x21, x19
    6f00:	add	x20, x20, x19
    6f04:	sub	x22, x22, x19
    6f08:	cmp	x22, #0xb
    6f0c:	b.ls	6f64 <elf64_xlatetom@@ELFUTILS_1.0+0x15a8>  // b.plast
    6f10:	ldr	w0, [x21]
    6f14:	rev	w0, w0
    6f18:	str	w0, [x20]
    6f1c:	ldr	w0, [x21, #4]
    6f20:	rev	w0, w0
    6f24:	str	w0, [x20, #4]
    6f28:	ldr	w0, [x21, #8]
    6f2c:	rev	w0, w0
    6f30:	str	w0, [x20, #8]
    6f34:	cmp	w23, #0x0
    6f38:	csel	x1, x21, x20, ne  // ne = any
    6f3c:	ldr	w19, [x1]
    6f40:	cbz	w24, 6e7c <elf64_xlatetom@@ELFUTILS_1.0+0x14c0>
    6f44:	add	x19, x19, #0x13
    6f48:	and	x0, x19, #0xfffffff8
    6f4c:	cmp	x0, #0xb
    6f50:	ccmp	x0, x22, #0x2, hi  // hi = pmore
    6f54:	b.ls	6ec8 <elf64_xlatetom@@ELFUTILS_1.0+0x150c>  // b.plast
    6f58:	sub	x22, x22, #0xc
    6f5c:	add	x21, x21, #0xc
    6f60:	add	x20, x20, #0xc
    6f64:	cmp	x22, #0x0
    6f68:	ccmp	x20, x21, #0x4, ne  // ne = any
    6f6c:	b.ne	6eb4 <elf64_xlatetom@@ELFUTILS_1.0+0x14f8>  // b.any
    6f70:	ldp	x19, x20, [sp, #16]
    6f74:	ldp	x21, x22, [sp, #32]
    6f78:	ldp	x23, x24, [sp, #48]
    6f7c:	ldp	x29, x30, [sp], #64
    6f80:	ret
    6f84:	stp	x29, x30, [sp, #-16]!
    6f88:	mov	x29, sp
    6f8c:	mov	w4, #0x1                   	// #1
    6f90:	bl	6e48 <elf64_xlatetom@@ELFUTILS_1.0+0x148c>
    6f94:	ldp	x29, x30, [sp], #16
    6f98:	ret
    6f9c:	stp	x29, x30, [sp, #-16]!
    6fa0:	mov	x29, sp
    6fa4:	mov	w4, #0x0                   	// #0
    6fa8:	bl	6e48 <elf64_xlatetom@@ELFUTILS_1.0+0x148c>
    6fac:	ldp	x29, x30, [sp], #16
    6fb0:	ret
    6fb4:	cbz	x0, 7020 <elf64_xlatetom@@ELFUTILS_1.0+0x1664>
    6fb8:	stp	x29, x30, [sp, #-16]!
    6fbc:	mov	x29, sp
    6fc0:	ldr	w2, [x0, #24]
    6fc4:	cmp	w2, #0x3
    6fc8:	b.ne	6ff0 <elf64_xlatetom@@ELFUTILS_1.0+0x1634>  // b.any
    6fcc:	ldr	w2, [x0, #32]
    6fd0:	mov	w3, #0x1                   	// #1
    6fd4:	cbnz	w2, 7008 <elf64_xlatetom@@ELFUTILS_1.0+0x164c>
    6fd8:	cbz	w1, 7000 <elf64_xlatetom@@ELFUTILS_1.0+0x1644>
    6fdc:	mov	w1, #0x1                   	// #1
    6fe0:	str	w1, [x0, #32]
    6fe4:	ldr	x0, [x0, #72]
    6fe8:	ldp	x29, x30, [sp], #16
    6fec:	ret
    6ff0:	mov	w0, #0x4                   	// #4
    6ff4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    6ff8:	mov	x0, #0x0                   	// #0
    6ffc:	b	6fe8 <elf64_xlatetom@@ELFUTILS_1.0+0x162c>
    7000:	mov	w1, w3
    7004:	b	6fd4 <elf64_xlatetom@@ELFUTILS_1.0+0x1618>
    7008:	cmp	w2, #0x1
    700c:	b.eq	6fe4 <elf64_xlatetom@@ELFUTILS_1.0+0x1628>  // b.none
    7010:	mov	w0, #0x15                  	// #21
    7014:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7018:	mov	x0, #0x0                   	// #0
    701c:	b	6fe8 <elf64_xlatetom@@ELFUTILS_1.0+0x162c>
    7020:	ret
    7024:	stp	x29, x30, [sp, #-16]!
    7028:	mov	x29, sp
    702c:	mov	w1, #0x1                   	// #1
    7030:	bl	6fb4 <elf64_xlatetom@@ELFUTILS_1.0+0x15f8>
    7034:	ldp	x29, x30, [sp], #16
    7038:	ret

000000000000703c <elf32_getehdr@@ELFUTILS_1.0>:
    703c:	cbz	x0, 7058 <elf32_getehdr@@ELFUTILS_1.0+0x1c>
    7040:	stp	x29, x30, [sp, #-16]!
    7044:	mov	x29, sp
    7048:	mov	w1, #0x0                   	// #0
    704c:	bl	6fb4 <elf64_xlatetom@@ELFUTILS_1.0+0x15f8>
    7050:	ldp	x29, x30, [sp], #16
    7054:	ret
    7058:	ret
    705c:	cbz	x0, 70c8 <elf32_getehdr@@ELFUTILS_1.0+0x8c>
    7060:	stp	x29, x30, [sp, #-16]!
    7064:	mov	x29, sp
    7068:	ldr	w2, [x0, #24]
    706c:	cmp	w2, #0x3
    7070:	b.ne	7098 <elf32_getehdr@@ELFUTILS_1.0+0x5c>  // b.any
    7074:	ldr	w2, [x0, #32]
    7078:	mov	w3, #0x1                   	// #1
    707c:	cbnz	w2, 70b0 <elf32_getehdr@@ELFUTILS_1.0+0x74>
    7080:	cbz	w1, 70a8 <elf32_getehdr@@ELFUTILS_1.0+0x6c>
    7084:	mov	w1, #0x2                   	// #2
    7088:	str	w1, [x0, #32]
    708c:	ldr	x0, [x0, #72]
    7090:	ldp	x29, x30, [sp], #16
    7094:	ret
    7098:	mov	w0, #0x4                   	// #4
    709c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    70a0:	mov	x0, #0x0                   	// #0
    70a4:	b	7090 <elf32_getehdr@@ELFUTILS_1.0+0x54>
    70a8:	mov	w1, w3
    70ac:	b	707c <elf32_getehdr@@ELFUTILS_1.0+0x40>
    70b0:	cmp	w2, #0x2
    70b4:	b.eq	708c <elf32_getehdr@@ELFUTILS_1.0+0x50>  // b.none
    70b8:	mov	w0, #0x15                  	// #21
    70bc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    70c0:	mov	x0, #0x0                   	// #0
    70c4:	b	7090 <elf32_getehdr@@ELFUTILS_1.0+0x54>
    70c8:	ret
    70cc:	stp	x29, x30, [sp, #-16]!
    70d0:	mov	x29, sp
    70d4:	mov	w1, #0x1                   	// #1
    70d8:	bl	705c <elf32_getehdr@@ELFUTILS_1.0+0x20>
    70dc:	ldp	x29, x30, [sp], #16
    70e0:	ret

00000000000070e4 <elf64_getehdr@@ELFUTILS_1.0>:
    70e4:	cbz	x0, 7100 <elf64_getehdr@@ELFUTILS_1.0+0x1c>
    70e8:	stp	x29, x30, [sp, #-16]!
    70ec:	mov	x29, sp
    70f0:	mov	w1, #0x0                   	// #0
    70f4:	bl	705c <elf32_getehdr@@ELFUTILS_1.0+0x20>
    70f8:	ldp	x29, x30, [sp], #16
    70fc:	ret
    7100:	ret
    7104:	stp	x29, x30, [sp, #-32]!
    7108:	mov	x29, sp
    710c:	str	x19, [sp, #16]
    7110:	cbz	x0, 71fc <elf64_getehdr@@ELFUTILS_1.0+0x118>
    7114:	ldr	w2, [x0, #24]
    7118:	cmp	w2, #0x3
    711c:	b.ne	7168 <elf64_getehdr@@ELFUTILS_1.0+0x84>  // b.any
    7120:	ldr	x19, [x0, #72]
    7124:	cbz	x19, 7178 <elf64_getehdr@@ELFUTILS_1.0+0x94>
    7128:	ldr	w0, [x0, #32]
    712c:	cmp	w0, #0x1
    7130:	b.eq	7184 <elf64_getehdr@@ELFUTILS_1.0+0xa0>  // b.none
    7134:	ldp	x2, x3, [x19]
    7138:	stp	x2, x3, [x1]
    713c:	ldp	x2, x3, [x19, #16]
    7140:	stp	x2, x3, [x1, #16]
    7144:	ldp	x2, x3, [x19, #32]
    7148:	stp	x2, x3, [x1, #32]
    714c:	ldp	x2, x3, [x19, #48]
    7150:	stp	x2, x3, [x1, #48]
    7154:	mov	x19, x1
    7158:	mov	x0, x19
    715c:	ldr	x19, [sp, #16]
    7160:	ldp	x29, x30, [sp], #32
    7164:	ret
    7168:	mov	w0, #0x4                   	// #4
    716c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7170:	mov	x19, #0x0                   	// #0
    7174:	b	7158 <elf64_getehdr@@ELFUTILS_1.0+0x74>
    7178:	mov	w0, #0x1a                  	// #26
    717c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7180:	b	7158 <elf64_getehdr@@ELFUTILS_1.0+0x74>
    7184:	ldp	x2, x3, [x19]
    7188:	stp	x2, x3, [x1]
    718c:	ldrh	w0, [x19, #16]
    7190:	strh	w0, [x1, #16]
    7194:	ldrh	w0, [x19, #18]
    7198:	strh	w0, [x1, #18]
    719c:	ldr	w0, [x19, #20]
    71a0:	str	w0, [x1, #20]
    71a4:	ldr	w0, [x19, #24]
    71a8:	str	x0, [x1, #24]
    71ac:	ldr	w0, [x19, #28]
    71b0:	str	x0, [x1, #32]
    71b4:	ldr	w0, [x19, #32]
    71b8:	str	x0, [x1, #40]
    71bc:	ldr	w0, [x19, #36]
    71c0:	str	w0, [x1, #48]
    71c4:	ldrh	w0, [x19, #40]
    71c8:	strh	w0, [x1, #52]
    71cc:	ldrh	w0, [x19, #42]
    71d0:	strh	w0, [x1, #54]
    71d4:	ldrh	w0, [x19, #44]
    71d8:	strh	w0, [x1, #56]
    71dc:	ldrh	w0, [x19, #46]
    71e0:	strh	w0, [x1, #58]
    71e4:	ldrh	w0, [x19, #48]
    71e8:	strh	w0, [x1, #60]
    71ec:	ldrh	w0, [x19, #50]
    71f0:	strh	w0, [x1, #62]
    71f4:	mov	x19, x1
    71f8:	b	7158 <elf64_getehdr@@ELFUTILS_1.0+0x74>
    71fc:	mov	x19, x0
    7200:	b	7158 <elf64_getehdr@@ELFUTILS_1.0+0x74>

0000000000007204 <gelf_getehdr@@ELFUTILS_1.0>:
    7204:	cbz	x0, 721c <gelf_getehdr@@ELFUTILS_1.0+0x18>
    7208:	stp	x29, x30, [sp, #-16]!
    720c:	mov	x29, sp
    7210:	bl	7104 <elf64_getehdr@@ELFUTILS_1.0+0x20>
    7214:	ldp	x29, x30, [sp], #16
    7218:	ret
    721c:	ret

0000000000007220 <elf32_newehdr@@ELFUTILS_1.0>:
    7220:	cbz	x0, 72ac <elf32_newehdr@@ELFUTILS_1.0+0x8c>
    7224:	stp	x29, x30, [sp, #-16]!
    7228:	mov	x29, sp
    722c:	ldr	w1, [x0, #24]
    7230:	cmp	w1, #0x3
    7234:	b.ne	725c <elf32_newehdr@@ELFUTILS_1.0+0x3c>  // b.any
    7238:	ldr	w1, [x0, #32]
    723c:	cbnz	w1, 726c <elf32_newehdr@@ELFUTILS_1.0+0x4c>
    7240:	mov	w1, #0x1                   	// #1
    7244:	str	w1, [x0, #32]
    7248:	ldr	x1, [x0, #72]
    724c:	cbz	x1, 7284 <elf32_newehdr@@ELFUTILS_1.0+0x64>
    7250:	ldr	x0, [x0, #72]
    7254:	ldp	x29, x30, [sp], #16
    7258:	ret
    725c:	mov	w0, #0x4                   	// #4
    7260:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7264:	mov	x0, #0x0                   	// #0
    7268:	b	7254 <elf32_newehdr@@ELFUTILS_1.0+0x34>
    726c:	cmp	w1, #0x1
    7270:	b.eq	7248 <elf32_newehdr@@ELFUTILS_1.0+0x28>  // b.none
    7274:	mov	w0, #0x15                  	// #21
    7278:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    727c:	mov	x0, #0x0                   	// #0
    7280:	b	7254 <elf32_newehdr@@ELFUTILS_1.0+0x34>
    7284:	add	x1, x0, #0x88
    7288:	str	x1, [x0, #72]
    728c:	stp	xzr, xzr, [x0, #136]
    7290:	stp	xzr, xzr, [x0, #152]
    7294:	stp	xzr, xzr, [x0, #168]
    7298:	str	wzr, [x0, #184]
    729c:	ldr	w1, [x0, #116]
    72a0:	orr	w1, w1, #0x1
    72a4:	str	w1, [x0, #116]
    72a8:	b	7250 <elf32_newehdr@@ELFUTILS_1.0+0x30>
    72ac:	ret

00000000000072b0 <elf64_newehdr@@ELFUTILS_1.0>:
    72b0:	cbz	x0, 733c <elf64_newehdr@@ELFUTILS_1.0+0x8c>
    72b4:	stp	x29, x30, [sp, #-16]!
    72b8:	mov	x29, sp
    72bc:	ldr	w1, [x0, #24]
    72c0:	cmp	w1, #0x3
    72c4:	b.ne	72ec <elf64_newehdr@@ELFUTILS_1.0+0x3c>  // b.any
    72c8:	ldr	w1, [x0, #32]
    72cc:	cbnz	w1, 72fc <elf64_newehdr@@ELFUTILS_1.0+0x4c>
    72d0:	mov	w1, #0x2                   	// #2
    72d4:	str	w1, [x0, #32]
    72d8:	ldr	x1, [x0, #72]
    72dc:	cbz	x1, 7314 <elf64_newehdr@@ELFUTILS_1.0+0x64>
    72e0:	ldr	x0, [x0, #72]
    72e4:	ldp	x29, x30, [sp], #16
    72e8:	ret
    72ec:	mov	w0, #0x4                   	// #4
    72f0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    72f4:	mov	x0, #0x0                   	// #0
    72f8:	b	72e4 <elf64_newehdr@@ELFUTILS_1.0+0x34>
    72fc:	cmp	w1, #0x2
    7300:	b.eq	72d8 <elf64_newehdr@@ELFUTILS_1.0+0x28>  // b.none
    7304:	mov	w0, #0x15                  	// #21
    7308:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    730c:	mov	x0, #0x0                   	// #0
    7310:	b	72e4 <elf64_newehdr@@ELFUTILS_1.0+0x34>
    7314:	add	x1, x0, #0x88
    7318:	str	x1, [x0, #72]
    731c:	stp	xzr, xzr, [x0, #136]
    7320:	stp	xzr, xzr, [x0, #152]
    7324:	stp	xzr, xzr, [x0, #168]
    7328:	stp	xzr, xzr, [x0, #184]
    732c:	ldr	w1, [x0, #116]
    7330:	orr	w1, w1, #0x1
    7334:	str	w1, [x0, #116]
    7338:	b	72e0 <elf64_newehdr@@ELFUTILS_1.0+0x30>
    733c:	ret

0000000000007340 <gelf_newehdr@@ELFUTILS_1.0>:
    7340:	stp	x29, x30, [sp, #-16]!
    7344:	mov	x29, sp
    7348:	cmp	w1, #0x1
    734c:	b.eq	735c <gelf_newehdr@@ELFUTILS_1.0+0x1c>  // b.none
    7350:	bl	72b0 <elf64_newehdr@@ELFUTILS_1.0>
    7354:	ldp	x29, x30, [sp], #16
    7358:	ret
    735c:	bl	7220 <elf32_newehdr@@ELFUTILS_1.0>
    7360:	b	7354 <gelf_newehdr@@ELFUTILS_1.0+0x14>

0000000000007364 <gelf_update_ehdr@@ELFUTILS_1.0>:
    7364:	cbz	x0, 74ac <gelf_update_ehdr@@ELFUTILS_1.0+0x148>
    7368:	stp	x29, x30, [sp, #-16]!
    736c:	mov	x29, sp
    7370:	ldr	w2, [x0, #24]
    7374:	cmp	w2, #0x3
    7378:	b.ne	73c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x64>  // b.any
    737c:	ldr	w2, [x0, #32]
    7380:	cmp	w2, #0x1
    7384:	b.eq	73d8 <gelf_update_ehdr@@ELFUTILS_1.0+0x74>  // b.none
    7388:	ldr	x2, [x0, #72]
    738c:	cbz	x2, 749c <gelf_update_ehdr@@ELFUTILS_1.0+0x138>
    7390:	ldp	x4, x5, [x1]
    7394:	stp	x4, x5, [x2]
    7398:	ldp	x4, x5, [x1, #16]
    739c:	stp	x4, x5, [x2, #16]
    73a0:	ldp	x4, x5, [x1, #32]
    73a4:	stp	x4, x5, [x2, #32]
    73a8:	ldp	x4, x5, [x1, #48]
    73ac:	stp	x4, x5, [x2, #48]
    73b0:	ldr	w1, [x0, #116]
    73b4:	orr	w1, w1, #0x1
    73b8:	str	w1, [x0, #116]
    73bc:	mov	w0, #0x1                   	// #1
    73c0:	ldp	x29, x30, [sp], #16
    73c4:	ret
    73c8:	mov	w0, #0x4                   	// #4
    73cc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    73d0:	mov	w0, #0x0                   	// #0
    73d4:	b	73c0 <gelf_update_ehdr@@ELFUTILS_1.0+0x5c>
    73d8:	ldr	x2, [x0, #72]
    73dc:	cbz	x2, 747c <gelf_update_ehdr@@ELFUTILS_1.0+0x118>
    73e0:	ldr	x4, [x1, #24]
    73e4:	mov	x3, #0xffffffff            	// #4294967295
    73e8:	cmp	x4, x3
    73ec:	b.hi	748c <gelf_update_ehdr@@ELFUTILS_1.0+0x128>  // b.pmore
    73f0:	ldr	x4, [x1, #32]
    73f4:	cmp	x4, x3
    73f8:	b.hi	748c <gelf_update_ehdr@@ELFUTILS_1.0+0x128>  // b.pmore
    73fc:	ldr	x4, [x1, #40]
    7400:	cmp	x4, x3
    7404:	b.hi	748c <gelf_update_ehdr@@ELFUTILS_1.0+0x128>  // b.pmore
    7408:	ldp	x4, x5, [x1]
    740c:	stp	x4, x5, [x2]
    7410:	ldrh	w3, [x1, #16]
    7414:	strh	w3, [x2, #16]
    7418:	ldrh	w3, [x1, #18]
    741c:	strh	w3, [x2, #18]
    7420:	ldr	w3, [x1, #20]
    7424:	str	w3, [x2, #20]
    7428:	ldr	x3, [x1, #24]
    742c:	str	w3, [x2, #24]
    7430:	ldr	x3, [x1, #32]
    7434:	str	w3, [x2, #28]
    7438:	ldr	x3, [x1, #40]
    743c:	str	w3, [x2, #32]
    7440:	ldr	w3, [x1, #48]
    7444:	str	w3, [x2, #36]
    7448:	ldrh	w3, [x1, #52]
    744c:	strh	w3, [x2, #40]
    7450:	ldrh	w3, [x1, #54]
    7454:	strh	w3, [x2, #42]
    7458:	ldrh	w3, [x1, #56]
    745c:	strh	w3, [x2, #44]
    7460:	ldrh	w3, [x1, #58]
    7464:	strh	w3, [x2, #46]
    7468:	ldrh	w3, [x1, #60]
    746c:	strh	w3, [x2, #48]
    7470:	ldrh	w1, [x1, #62]
    7474:	strh	w1, [x2, #50]
    7478:	b	73b0 <gelf_update_ehdr@@ELFUTILS_1.0+0x4c>
    747c:	mov	w0, #0x1a                  	// #26
    7480:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7484:	mov	w0, #0x0                   	// #0
    7488:	b	73c0 <gelf_update_ehdr@@ELFUTILS_1.0+0x5c>
    748c:	mov	w0, #0x21                  	// #33
    7490:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7494:	mov	w0, #0x0                   	// #0
    7498:	b	73c0 <gelf_update_ehdr@@ELFUTILS_1.0+0x5c>
    749c:	mov	w0, #0x1a                  	// #26
    74a0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    74a4:	mov	w0, #0x0                   	// #0
    74a8:	b	73c0 <gelf_update_ehdr@@ELFUTILS_1.0+0x5c>
    74ac:	mov	w0, #0x0                   	// #0
    74b0:	ret
    74b4:	stp	x29, x30, [sp, #-112]!
    74b8:	mov	x29, sp
    74bc:	stp	x19, x20, [sp, #16]
    74c0:	ldr	x20, [x0, #88]
    74c4:	cbz	x20, 74d8 <gelf_update_ehdr@@ELFUTILS_1.0+0x174>
    74c8:	mov	x0, x20
    74cc:	ldp	x19, x20, [sp, #16]
    74d0:	ldp	x29, x30, [sp], #112
    74d4:	ret
    74d8:	mov	x19, x0
    74dc:	ldr	w0, [x0, #32]
    74e0:	cbnz	w0, 7580 <gelf_update_ehdr@@ELFUTILS_1.0+0x21c>
    74e4:	stp	x23, x24, [sp, #48]
    74e8:	mov	w0, #0x1                   	// #1
    74ec:	str	w0, [x19, #32]
    74f0:	ldr	x23, [x19, #72]
    74f4:	add	x1, sp, #0x68
    74f8:	mov	x0, x19
    74fc:	bl	10e5c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>
    7500:	cbnz	w0, 78c4 <gelf_update_ehdr@@ELFUTILS_1.0+0x560>
    7504:	stp	x21, x22, [sp, #32]
    7508:	ldr	x22, [sp, #104]
    750c:	cbz	x22, 759c <gelf_update_ehdr@@ELFUTILS_1.0+0x238>
    7510:	ldr	w0, [x23, #28]
    7514:	cbz	w0, 759c <gelf_update_ehdr@@ELFUTILS_1.0+0x238>
    7518:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
    751c:	cmp	x22, x1
    7520:	b.hi	75b4 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>  // b.pmore
    7524:	mov	w2, w0
    7528:	ldr	x1, [x19, #48]
    752c:	cmp	x1, w0, uxtw
    7530:	b.cc	75b4 <gelf_update_ehdr@@ELFUTILS_1.0+0x250>  // b.lo, b.ul, b.last
    7534:	stp	x25, x26, [sp, #64]
    7538:	lsl	x25, x22, #5
    753c:	sub	x0, x1, x2
    7540:	cmp	x0, x22, lsl #5
    7544:	b.cc	75b0 <gelf_update_ehdr@@ELFUTILS_1.0+0x24c>  // b.lo, b.ul, b.last
    7548:	ldr	x24, [x19]
    754c:	cbz	x24, 7724 <gelf_update_ehdr@@ELFUTILS_1.0+0x3c0>
    7550:	cmp	x2, x1
    7554:	b.eq	75c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x264>  // b.none
    7558:	ldr	x0, [x19, #40]
    755c:	add	x2, x2, x0
    7560:	add	x24, x24, x2
    7564:	ldrb	w0, [x23, #5]
    7568:	cmp	w0, #0x1
    756c:	b.ne	75e0 <gelf_update_ehdr@@ELFUTILS_1.0+0x27c>  // b.any
    7570:	tst	x24, #0x3
    7574:	b.ne	75e0 <gelf_update_ehdr@@ELFUTILS_1.0+0x27c>  // b.any
    7578:	str	x24, [x19, #88]
    757c:	b	769c <gelf_update_ehdr@@ELFUTILS_1.0+0x338>
    7580:	cmp	w0, #0x1
    7584:	b.ne	7590 <gelf_update_ehdr@@ELFUTILS_1.0+0x22c>  // b.any
    7588:	stp	x23, x24, [sp, #48]
    758c:	b	74f0 <gelf_update_ehdr@@ELFUTILS_1.0+0x18c>
    7590:	mov	w0, #0x15                  	// #21
    7594:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7598:	b	74c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>
    759c:	mov	w0, #0x2a                  	// #42
    75a0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    75a4:	ldp	x21, x22, [sp, #32]
    75a8:	ldp	x23, x24, [sp, #48]
    75ac:	b	74c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>
    75b0:	ldp	x25, x26, [sp, #64]
    75b4:	mov	w0, #0x21                  	// #33
    75b8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    75bc:	ldp	x21, x22, [sp, #32]
    75c0:	ldp	x23, x24, [sp, #48]
    75c4:	b	74c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>
    75c8:	mov	w0, #0x29                  	// #41
    75cc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    75d0:	ldp	x21, x22, [sp, #32]
    75d4:	ldp	x23, x24, [sp, #48]
    75d8:	ldp	x25, x26, [sp, #64]
    75dc:	b	74c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>
    75e0:	mov	x0, x25
    75e4:	bl	3100 <malloc@plt>
    75e8:	mov	x21, x0
    75ec:	str	x0, [x19, #88]
    75f0:	cbz	x0, 76b0 <gelf_update_ehdr@@ELFUTILS_1.0+0x34c>
    75f4:	ldr	w0, [x19, #120]
    75f8:	mov	w1, #0x81                  	// #129
    75fc:	orr	w0, w0, w1
    7600:	str	w0, [x19, #120]
    7604:	ldrb	w0, [x23, #5]
    7608:	cmp	w0, #0x1
    760c:	b.eq	76c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x364>  // b.none
    7610:	ands	x23, x24, #0x3
    7614:	b.ne	76dc <gelf_update_ehdr@@ELFUTILS_1.0+0x378>  // b.any
    7618:	mov	x1, x24
    761c:	mov	x0, x21
    7620:	mov	x3, #0x0                   	// #0
    7624:	ldr	w2, [x1]
    7628:	rev	w2, w2
    762c:	str	w2, [x0]
    7630:	ldr	w2, [x1, #4]
    7634:	rev	w2, w2
    7638:	str	w2, [x0, #4]
    763c:	ldr	w2, [x1, #8]
    7640:	rev	w2, w2
    7644:	str	w2, [x0, #8]
    7648:	ldr	w2, [x1, #12]
    764c:	rev	w2, w2
    7650:	str	w2, [x0, #12]
    7654:	ldr	w2, [x1, #16]
    7658:	rev	w2, w2
    765c:	str	w2, [x0, #16]
    7660:	ldr	w2, [x1, #20]
    7664:	rev	w2, w2
    7668:	str	w2, [x0, #20]
    766c:	ldr	w2, [x1, #24]
    7670:	rev	w2, w2
    7674:	str	w2, [x0, #24]
    7678:	ldr	w2, [x1, #28]
    767c:	rev	w2, w2
    7680:	str	w2, [x0, #28]
    7684:	add	x3, x3, #0x1
    7688:	add	x1, x1, #0x20
    768c:	add	x0, x0, #0x20
    7690:	cmp	x22, x3
    7694:	b.hi	7624 <gelf_update_ehdr@@ELFUTILS_1.0+0x2c0>  // b.pmore
    7698:	cbnz	x23, 7718 <gelf_update_ehdr@@ELFUTILS_1.0+0x3b4>
    769c:	ldr	x20, [x19, #88]
    76a0:	ldp	x21, x22, [sp, #32]
    76a4:	ldp	x23, x24, [sp, #48]
    76a8:	ldp	x25, x26, [sp, #64]
    76ac:	b	74c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>
    76b0:	mov	w0, #0x8                   	// #8
    76b4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    76b8:	ldp	x21, x22, [sp, #32]
    76bc:	ldp	x23, x24, [sp, #48]
    76c0:	ldp	x25, x26, [sp, #64]
    76c4:	b	74c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>
    76c8:	mov	x2, x25
    76cc:	mov	x1, x24
    76d0:	mov	x0, x21
    76d4:	bl	3060 <memcpy@plt>
    76d8:	b	769c <gelf_update_ehdr@@ELFUTILS_1.0+0x338>
    76dc:	mov	x0, x25
    76e0:	bl	3100 <malloc@plt>
    76e4:	mov	x26, x0
    76e8:	cbz	x0, 7700 <gelf_update_ehdr@@ELFUTILS_1.0+0x39c>
    76ec:	mov	x2, x25
    76f0:	mov	x1, x24
    76f4:	bl	3060 <memcpy@plt>
    76f8:	mov	x24, x26
    76fc:	b	7618 <gelf_update_ehdr@@ELFUTILS_1.0+0x2b4>
    7700:	mov	w0, #0x8                   	// #8
    7704:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7708:	ldp	x21, x22, [sp, #32]
    770c:	ldp	x23, x24, [sp, #48]
    7710:	ldp	x25, x26, [sp, #64]
    7714:	b	74c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>
    7718:	mov	x0, x24
    771c:	bl	3250 <free@plt>
    7720:	b	769c <gelf_update_ehdr@@ELFUTILS_1.0+0x338>
    7724:	str	x27, [sp, #80]
    7728:	ldr	w27, [x19, #36]
    772c:	cmn	w27, #0x1
    7730:	b.eq	7898 <gelf_update_ehdr@@ELFUTILS_1.0+0x534>  // b.none
    7734:	mov	x0, x25
    7738:	bl	3100 <malloc@plt>
    773c:	mov	x24, x0
    7740:	str	x0, [x19, #88]
    7744:	cbz	x0, 7768 <gelf_update_ehdr@@ELFUTILS_1.0+0x404>
    7748:	ldr	w0, [x19, #120]
    774c:	orr	w0, w0, #0x80
    7750:	str	w0, [x19, #120]
    7754:	ldr	w26, [x23, #28]
    7758:	ldr	x0, [x19, #40]
    775c:	add	x26, x26, x0
    7760:	mov	x22, #0x0                   	// #0
    7764:	b	7798 <gelf_update_ehdr@@ELFUTILS_1.0+0x434>
    7768:	mov	w0, #0x8                   	// #8
    776c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7770:	ldp	x21, x22, [sp, #32]
    7774:	ldp	x23, x24, [sp, #48]
    7778:	ldp	x25, x26, [sp, #64]
    777c:	ldr	x27, [sp, #80]
    7780:	b	74c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>
    7784:	cmp	x0, #0x0
    7788:	b.le	77c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x464>
    778c:	add	x22, x22, x0
    7790:	cmp	x25, x22
    7794:	b.ls	77d0 <gelf_update_ehdr@@ELFUTILS_1.0+0x46c>  // b.plast
    7798:	add	x3, x26, x22
    779c:	sub	x2, x25, x22
    77a0:	add	x1, x24, x22
    77a4:	mov	w0, w27
    77a8:	bl	32a0 <pread@plt>
    77ac:	mov	x21, x0
    77b0:	cmn	x0, #0x1
    77b4:	b.ne	7784 <gelf_update_ehdr@@ELFUTILS_1.0+0x420>  // b.any
    77b8:	bl	3390 <__errno_location@plt>
    77bc:	ldr	w0, [x0]
    77c0:	cmp	w0, #0x4
    77c4:	b.eq	7798 <gelf_update_ehdr@@ELFUTILS_1.0+0x434>  // b.none
    77c8:	cmp	x21, #0x0
    77cc:	csel	x22, x22, x21, ge  // ge = tcont
    77d0:	cmp	x25, x22
    77d4:	b.ne	7870 <gelf_update_ehdr@@ELFUTILS_1.0+0x50c>  // b.any
    77d8:	ldrb	w0, [x23, #5]
    77dc:	cmp	w0, #0x1
    77e0:	b.eq	78b4 <gelf_update_ehdr@@ELFUTILS_1.0+0x550>  // b.none
    77e4:	ldr	x0, [x19, #88]
    77e8:	ldr	x1, [sp, #104]
    77ec:	cbz	x1, 78bc <gelf_update_ehdr@@ELFUTILS_1.0+0x558>
    77f0:	mov	x2, #0x0                   	// #0
    77f4:	ldr	w1, [x0]
    77f8:	rev	w1, w1
    77fc:	str	w1, [x0]
    7800:	ldr	w1, [x0, #4]
    7804:	rev	w1, w1
    7808:	str	w1, [x0, #4]
    780c:	ldr	w1, [x0, #8]
    7810:	rev	w1, w1
    7814:	str	w1, [x0, #8]
    7818:	ldr	w1, [x0, #12]
    781c:	rev	w1, w1
    7820:	str	w1, [x0, #12]
    7824:	ldr	w1, [x0, #16]
    7828:	rev	w1, w1
    782c:	str	w1, [x0, #16]
    7830:	ldr	w1, [x0, #20]
    7834:	rev	w1, w1
    7838:	str	w1, [x0, #20]
    783c:	ldr	w1, [x0, #24]
    7840:	rev	w1, w1
    7844:	str	w1, [x0, #24]
    7848:	ldr	w1, [x0, #28]
    784c:	rev	w1, w1
    7850:	str	w1, [x0, #28]
    7854:	add	x2, x2, #0x1
    7858:	add	x0, x0, #0x20
    785c:	ldr	x1, [sp, #104]
    7860:	cmp	x1, x2
    7864:	b.hi	77f4 <gelf_update_ehdr@@ELFUTILS_1.0+0x490>  // b.pmore
    7868:	ldr	x27, [sp, #80]
    786c:	b	769c <gelf_update_ehdr@@ELFUTILS_1.0+0x338>
    7870:	mov	w0, #0x13                  	// #19
    7874:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7878:	ldr	x0, [x19, #88]
    787c:	bl	3250 <free@plt>
    7880:	str	xzr, [x19, #88]
    7884:	ldp	x21, x22, [sp, #32]
    7888:	ldp	x23, x24, [sp, #48]
    788c:	ldp	x25, x26, [sp, #64]
    7890:	ldr	x27, [sp, #80]
    7894:	b	74c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>
    7898:	mov	w0, #0x1b                  	// #27
    789c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    78a0:	ldp	x21, x22, [sp, #32]
    78a4:	ldp	x23, x24, [sp, #48]
    78a8:	ldp	x25, x26, [sp, #64]
    78ac:	ldr	x27, [sp, #80]
    78b0:	b	74c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>
    78b4:	ldr	x27, [sp, #80]
    78b8:	b	769c <gelf_update_ehdr@@ELFUTILS_1.0+0x338>
    78bc:	ldr	x27, [sp, #80]
    78c0:	b	769c <gelf_update_ehdr@@ELFUTILS_1.0+0x338>
    78c4:	ldp	x23, x24, [sp, #48]
    78c8:	b	74c8 <gelf_update_ehdr@@ELFUTILS_1.0+0x164>

00000000000078cc <elf32_getphdr@@ELFUTILS_1.0>:
    78cc:	mov	x1, x0
    78d0:	cbz	x0, 7914 <elf32_getphdr@@ELFUTILS_1.0+0x48>
    78d4:	stp	x29, x30, [sp, #-16]!
    78d8:	mov	x29, sp
    78dc:	ldr	w0, [x0, #24]
    78e0:	cmp	w0, #0x3
    78e4:	b.ne	78f8 <elf32_getphdr@@ELFUTILS_1.0+0x2c>  // b.any
    78e8:	ldr	x0, [x1, #88]
    78ec:	cbz	x0, 7908 <elf32_getphdr@@ELFUTILS_1.0+0x3c>
    78f0:	ldp	x29, x30, [sp], #16
    78f4:	ret
    78f8:	mov	w0, #0x4                   	// #4
    78fc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7900:	mov	x0, #0x0                   	// #0
    7904:	b	78f0 <elf32_getphdr@@ELFUTILS_1.0+0x24>
    7908:	mov	x0, x1
    790c:	bl	74b4 <gelf_update_ehdr@@ELFUTILS_1.0+0x150>
    7910:	b	78f0 <elf32_getphdr@@ELFUTILS_1.0+0x24>
    7914:	ret
    7918:	stp	x29, x30, [sp, #-112]!
    791c:	mov	x29, sp
    7920:	stp	x19, x20, [sp, #16]
    7924:	ldr	x20, [x0, #88]
    7928:	cbz	x20, 793c <elf32_getphdr@@ELFUTILS_1.0+0x70>
    792c:	mov	x0, x20
    7930:	ldp	x19, x20, [sp, #16]
    7934:	ldp	x29, x30, [sp], #112
    7938:	ret
    793c:	mov	x19, x0
    7940:	ldr	w0, [x0, #32]
    7944:	cbnz	w0, 79f8 <elf32_getphdr@@ELFUTILS_1.0+0x12c>
    7948:	stp	x23, x24, [sp, #48]
    794c:	mov	w0, #0x2                   	// #2
    7950:	str	w0, [x19, #32]
    7954:	ldr	x23, [x19, #72]
    7958:	add	x1, sp, #0x68
    795c:	mov	x0, x19
    7960:	bl	10e5c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>
    7964:	cbnz	w0, 7d3c <elf32_getphdr@@ELFUTILS_1.0+0x470>
    7968:	stp	x21, x22, [sp, #32]
    796c:	ldr	x22, [sp, #104]
    7970:	cbz	x22, 7a14 <elf32_getphdr@@ELFUTILS_1.0+0x148>
    7974:	ldr	x0, [x23, #32]
    7978:	cbz	x0, 7a14 <elf32_getphdr@@ELFUTILS_1.0+0x148>
    797c:	mov	x1, #0x2492                	// #9362
    7980:	movk	x1, #0x9249, lsl #16
    7984:	movk	x1, #0x4924, lsl #32
    7988:	movk	x1, #0x492, lsl #48
    798c:	cmp	x22, x1
    7990:	b.hi	7a2c <elf32_getphdr@@ELFUTILS_1.0+0x160>  // b.pmore
    7994:	ldr	x1, [x19, #48]
    7998:	cmp	x0, x1
    799c:	b.hi	7a2c <elf32_getphdr@@ELFUTILS_1.0+0x160>  // b.pmore
    79a0:	stp	x25, x26, [sp, #64]
    79a4:	lsl	x24, x22, #3
    79a8:	sub	x24, x24, x22
    79ac:	lsl	x24, x24, #3
    79b0:	mov	x25, x24
    79b4:	sub	x2, x1, x0
    79b8:	cmp	x2, x24
    79bc:	b.cc	7a28 <elf32_getphdr@@ELFUTILS_1.0+0x15c>  // b.lo, b.ul, b.last
    79c0:	ldr	x2, [x19]
    79c4:	cbz	x2, 7b9c <elf32_getphdr@@ELFUTILS_1.0+0x2d0>
    79c8:	cmp	x0, x1
    79cc:	b.eq	7a40 <elf32_getphdr@@ELFUTILS_1.0+0x174>  // b.none
    79d0:	ldr	x1, [x19, #40]
    79d4:	add	x0, x0, x1
    79d8:	add	x25, x2, x0
    79dc:	ldrb	w0, [x23, #5]
    79e0:	cmp	w0, #0x1
    79e4:	b.ne	7a58 <elf32_getphdr@@ELFUTILS_1.0+0x18c>  // b.any
    79e8:	tst	x25, #0x7
    79ec:	b.ne	7a58 <elf32_getphdr@@ELFUTILS_1.0+0x18c>  // b.any
    79f0:	str	x25, [x19, #88]
    79f4:	b	7b14 <elf32_getphdr@@ELFUTILS_1.0+0x248>
    79f8:	cmp	w0, #0x2
    79fc:	b.ne	7a08 <elf32_getphdr@@ELFUTILS_1.0+0x13c>  // b.any
    7a00:	stp	x23, x24, [sp, #48]
    7a04:	b	7954 <elf32_getphdr@@ELFUTILS_1.0+0x88>
    7a08:	mov	w0, #0x15                  	// #21
    7a0c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7a10:	b	792c <elf32_getphdr@@ELFUTILS_1.0+0x60>
    7a14:	mov	w0, #0x2a                  	// #42
    7a18:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7a1c:	ldp	x21, x22, [sp, #32]
    7a20:	ldp	x23, x24, [sp, #48]
    7a24:	b	792c <elf32_getphdr@@ELFUTILS_1.0+0x60>
    7a28:	ldp	x25, x26, [sp, #64]
    7a2c:	mov	w0, #0x21                  	// #33
    7a30:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7a34:	ldp	x21, x22, [sp, #32]
    7a38:	ldp	x23, x24, [sp, #48]
    7a3c:	b	792c <elf32_getphdr@@ELFUTILS_1.0+0x60>
    7a40:	mov	w0, #0x29                  	// #41
    7a44:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7a48:	ldp	x21, x22, [sp, #32]
    7a4c:	ldp	x23, x24, [sp, #48]
    7a50:	ldp	x25, x26, [sp, #64]
    7a54:	b	792c <elf32_getphdr@@ELFUTILS_1.0+0x60>
    7a58:	mov	x0, x24
    7a5c:	bl	3100 <malloc@plt>
    7a60:	mov	x21, x0
    7a64:	str	x0, [x19, #88]
    7a68:	cbz	x0, 7b28 <elf32_getphdr@@ELFUTILS_1.0+0x25c>
    7a6c:	ldr	w0, [x19, #120]
    7a70:	mov	w1, #0x81                  	// #129
    7a74:	orr	w0, w0, w1
    7a78:	str	w0, [x19, #120]
    7a7c:	ldrb	w0, [x23, #5]
    7a80:	cmp	w0, #0x1
    7a84:	b.eq	7b40 <elf32_getphdr@@ELFUTILS_1.0+0x274>  // b.none
    7a88:	ands	x23, x25, #0x7
    7a8c:	b.ne	7b54 <elf32_getphdr@@ELFUTILS_1.0+0x288>  // b.any
    7a90:	mov	x1, x25
    7a94:	mov	x0, x21
    7a98:	mov	x3, #0x0                   	// #0
    7a9c:	ldr	w2, [x1]
    7aa0:	rev	w2, w2
    7aa4:	str	w2, [x0]
    7aa8:	ldr	x2, [x1, #8]
    7aac:	rev	x2, x2
    7ab0:	str	x2, [x0, #8]
    7ab4:	ldr	x2, [x1, #16]
    7ab8:	rev	x2, x2
    7abc:	str	x2, [x0, #16]
    7ac0:	ldr	x2, [x1, #24]
    7ac4:	rev	x2, x2
    7ac8:	str	x2, [x0, #24]
    7acc:	ldr	x2, [x1, #32]
    7ad0:	rev	x2, x2
    7ad4:	str	x2, [x0, #32]
    7ad8:	ldr	x2, [x1, #40]
    7adc:	rev	x2, x2
    7ae0:	str	x2, [x0, #40]
    7ae4:	ldr	w2, [x1, #4]
    7ae8:	rev	w2, w2
    7aec:	str	w2, [x0, #4]
    7af0:	ldr	x2, [x1, #48]
    7af4:	rev	x2, x2
    7af8:	str	x2, [x0, #48]
    7afc:	add	x3, x3, #0x1
    7b00:	add	x1, x1, #0x38
    7b04:	add	x0, x0, #0x38
    7b08:	cmp	x22, x3
    7b0c:	b.hi	7a9c <elf32_getphdr@@ELFUTILS_1.0+0x1d0>  // b.pmore
    7b10:	cbnz	x23, 7b90 <elf32_getphdr@@ELFUTILS_1.0+0x2c4>
    7b14:	ldr	x20, [x19, #88]
    7b18:	ldp	x21, x22, [sp, #32]
    7b1c:	ldp	x23, x24, [sp, #48]
    7b20:	ldp	x25, x26, [sp, #64]
    7b24:	b	792c <elf32_getphdr@@ELFUTILS_1.0+0x60>
    7b28:	mov	w0, #0x8                   	// #8
    7b2c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7b30:	ldp	x21, x22, [sp, #32]
    7b34:	ldp	x23, x24, [sp, #48]
    7b38:	ldp	x25, x26, [sp, #64]
    7b3c:	b	792c <elf32_getphdr@@ELFUTILS_1.0+0x60>
    7b40:	mov	x2, x24
    7b44:	mov	x1, x25
    7b48:	mov	x0, x21
    7b4c:	bl	3060 <memcpy@plt>
    7b50:	b	7b14 <elf32_getphdr@@ELFUTILS_1.0+0x248>
    7b54:	mov	x0, x24
    7b58:	bl	3100 <malloc@plt>
    7b5c:	mov	x26, x0
    7b60:	cbz	x0, 7b78 <elf32_getphdr@@ELFUTILS_1.0+0x2ac>
    7b64:	mov	x2, x24
    7b68:	mov	x1, x25
    7b6c:	bl	3060 <memcpy@plt>
    7b70:	mov	x25, x26
    7b74:	b	7a90 <elf32_getphdr@@ELFUTILS_1.0+0x1c4>
    7b78:	mov	w0, #0x8                   	// #8
    7b7c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7b80:	ldp	x21, x22, [sp, #32]
    7b84:	ldp	x23, x24, [sp, #48]
    7b88:	ldp	x25, x26, [sp, #64]
    7b8c:	b	792c <elf32_getphdr@@ELFUTILS_1.0+0x60>
    7b90:	mov	x0, x25
    7b94:	bl	3250 <free@plt>
    7b98:	b	7b14 <elf32_getphdr@@ELFUTILS_1.0+0x248>
    7b9c:	stp	x27, x28, [sp, #80]
    7ba0:	ldr	w28, [x19, #36]
    7ba4:	cmn	w28, #0x1
    7ba8:	b.eq	7d10 <elf32_getphdr@@ELFUTILS_1.0+0x444>  // b.none
    7bac:	mov	x0, x24
    7bb0:	bl	3100 <malloc@plt>
    7bb4:	mov	x26, x0
    7bb8:	str	x0, [x19, #88]
    7bbc:	cbz	x0, 7be0 <elf32_getphdr@@ELFUTILS_1.0+0x314>
    7bc0:	ldr	w0, [x19, #120]
    7bc4:	orr	w0, w0, #0x80
    7bc8:	str	w0, [x19, #120]
    7bcc:	ldr	x27, [x19, #40]
    7bd0:	ldr	x0, [x23, #32]
    7bd4:	add	x27, x27, x0
    7bd8:	mov	x22, #0x0                   	// #0
    7bdc:	b	7c10 <elf32_getphdr@@ELFUTILS_1.0+0x344>
    7be0:	mov	w0, #0x8                   	// #8
    7be4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7be8:	ldp	x21, x22, [sp, #32]
    7bec:	ldp	x23, x24, [sp, #48]
    7bf0:	ldp	x25, x26, [sp, #64]
    7bf4:	ldp	x27, x28, [sp, #80]
    7bf8:	b	792c <elf32_getphdr@@ELFUTILS_1.0+0x60>
    7bfc:	cmp	x0, #0x0
    7c00:	b.le	7c40 <elf32_getphdr@@ELFUTILS_1.0+0x374>
    7c04:	add	x22, x22, x0
    7c08:	cmp	x25, x22
    7c0c:	b.ls	7c48 <elf32_getphdr@@ELFUTILS_1.0+0x37c>  // b.plast
    7c10:	add	x3, x27, x22
    7c14:	sub	x2, x25, x22
    7c18:	add	x1, x26, x22
    7c1c:	mov	w0, w28
    7c20:	bl	32a0 <pread@plt>
    7c24:	mov	x21, x0
    7c28:	cmn	x0, #0x1
    7c2c:	b.ne	7bfc <elf32_getphdr@@ELFUTILS_1.0+0x330>  // b.any
    7c30:	bl	3390 <__errno_location@plt>
    7c34:	ldr	w0, [x0]
    7c38:	cmp	w0, #0x4
    7c3c:	b.eq	7c10 <elf32_getphdr@@ELFUTILS_1.0+0x344>  // b.none
    7c40:	cmp	x21, #0x0
    7c44:	csel	x22, x22, x21, ge  // ge = tcont
    7c48:	cmp	x24, x22
    7c4c:	b.ne	7ce8 <elf32_getphdr@@ELFUTILS_1.0+0x41c>  // b.any
    7c50:	ldrb	w0, [x23, #5]
    7c54:	cmp	w0, #0x1
    7c58:	b.eq	7d2c <elf32_getphdr@@ELFUTILS_1.0+0x460>  // b.none
    7c5c:	ldr	x0, [x19, #88]
    7c60:	ldr	x1, [sp, #104]
    7c64:	cbz	x1, 7d34 <elf32_getphdr@@ELFUTILS_1.0+0x468>
    7c68:	mov	x2, #0x0                   	// #0
    7c6c:	ldr	w1, [x0]
    7c70:	rev	w1, w1
    7c74:	str	w1, [x0]
    7c78:	ldr	x1, [x0, #8]
    7c7c:	rev	x1, x1
    7c80:	str	x1, [x0, #8]
    7c84:	ldr	x1, [x0, #16]
    7c88:	rev	x1, x1
    7c8c:	str	x1, [x0, #16]
    7c90:	ldr	x1, [x0, #24]
    7c94:	rev	x1, x1
    7c98:	str	x1, [x0, #24]
    7c9c:	ldr	x1, [x0, #32]
    7ca0:	rev	x1, x1
    7ca4:	str	x1, [x0, #32]
    7ca8:	ldr	x1, [x0, #40]
    7cac:	rev	x1, x1
    7cb0:	str	x1, [x0, #40]
    7cb4:	ldr	w1, [x0, #4]
    7cb8:	rev	w1, w1
    7cbc:	str	w1, [x0, #4]
    7cc0:	ldr	x1, [x0, #48]
    7cc4:	rev	x1, x1
    7cc8:	str	x1, [x0, #48]
    7ccc:	add	x2, x2, #0x1
    7cd0:	add	x0, x0, #0x38
    7cd4:	ldr	x1, [sp, #104]
    7cd8:	cmp	x1, x2
    7cdc:	b.hi	7c6c <elf32_getphdr@@ELFUTILS_1.0+0x3a0>  // b.pmore
    7ce0:	ldp	x27, x28, [sp, #80]
    7ce4:	b	7b14 <elf32_getphdr@@ELFUTILS_1.0+0x248>
    7ce8:	mov	w0, #0x13                  	// #19
    7cec:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7cf0:	ldr	x0, [x19, #88]
    7cf4:	bl	3250 <free@plt>
    7cf8:	str	xzr, [x19, #88]
    7cfc:	ldp	x21, x22, [sp, #32]
    7d00:	ldp	x23, x24, [sp, #48]
    7d04:	ldp	x25, x26, [sp, #64]
    7d08:	ldp	x27, x28, [sp, #80]
    7d0c:	b	792c <elf32_getphdr@@ELFUTILS_1.0+0x60>
    7d10:	mov	w0, #0x1b                  	// #27
    7d14:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7d18:	ldp	x21, x22, [sp, #32]
    7d1c:	ldp	x23, x24, [sp, #48]
    7d20:	ldp	x25, x26, [sp, #64]
    7d24:	ldp	x27, x28, [sp, #80]
    7d28:	b	792c <elf32_getphdr@@ELFUTILS_1.0+0x60>
    7d2c:	ldp	x27, x28, [sp, #80]
    7d30:	b	7b14 <elf32_getphdr@@ELFUTILS_1.0+0x248>
    7d34:	ldp	x27, x28, [sp, #80]
    7d38:	b	7b14 <elf32_getphdr@@ELFUTILS_1.0+0x248>
    7d3c:	ldp	x23, x24, [sp, #48]
    7d40:	b	792c <elf32_getphdr@@ELFUTILS_1.0+0x60>

0000000000007d44 <elf64_getphdr@@ELFUTILS_1.0>:
    7d44:	mov	x1, x0
    7d48:	cbz	x0, 7d8c <elf64_getphdr@@ELFUTILS_1.0+0x48>
    7d4c:	stp	x29, x30, [sp, #-16]!
    7d50:	mov	x29, sp
    7d54:	ldr	w0, [x0, #24]
    7d58:	cmp	w0, #0x3
    7d5c:	b.ne	7d70 <elf64_getphdr@@ELFUTILS_1.0+0x2c>  // b.any
    7d60:	ldr	x0, [x1, #88]
    7d64:	cbz	x0, 7d80 <elf64_getphdr@@ELFUTILS_1.0+0x3c>
    7d68:	ldp	x29, x30, [sp], #16
    7d6c:	ret
    7d70:	mov	w0, #0x4                   	// #4
    7d74:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7d78:	mov	x0, #0x0                   	// #0
    7d7c:	b	7d68 <elf64_getphdr@@ELFUTILS_1.0+0x24>
    7d80:	mov	x0, x1
    7d84:	bl	7918 <elf32_getphdr@@ELFUTILS_1.0+0x4c>
    7d88:	b	7d68 <elf64_getphdr@@ELFUTILS_1.0+0x24>
    7d8c:	ret

0000000000007d90 <gelf_getphdr@@ELFUTILS_1.0>:
    7d90:	stp	x29, x30, [sp, #-64]!
    7d94:	mov	x29, sp
    7d98:	stp	x19, x20, [sp, #16]
    7d9c:	stp	x21, x22, [sp, #32]
    7da0:	mov	x19, x0
    7da4:	cbz	x0, 7f18 <gelf_getphdr@@ELFUTILS_1.0+0x188>
    7da8:	mov	w22, w1
    7dac:	mov	x20, x2
    7db0:	ldr	w0, [x0, #24]
    7db4:	cmp	w0, #0x3
    7db8:	b.ne	7e38 <gelf_getphdr@@ELFUTILS_1.0+0xa8>  // b.any
    7dbc:	cbz	x2, 7e48 <gelf_getphdr@@ELFUTILS_1.0+0xb8>
    7dc0:	ldr	w0, [x19, #32]
    7dc4:	cmp	w0, #0x1
    7dc8:	b.eq	7e58 <gelf_getphdr@@ELFUTILS_1.0+0xc8>  // b.none
    7dcc:	ldr	x21, [x19, #88]
    7dd0:	cbz	x21, 7ef4 <gelf_getphdr@@ELFUTILS_1.0+0x164>
    7dd4:	add	x1, sp, #0x38
    7dd8:	mov	x0, x19
    7ddc:	bl	10f18 <gelf_update_verdaux@@ELFUTILS_1.0+0x13c>
    7de0:	cbnz	w0, 7f08 <gelf_getphdr@@ELFUTILS_1.0+0x178>
    7de4:	sxtw	x1, w22
    7de8:	ldr	x0, [sp, #56]
    7dec:	cmp	x0, w22, sxtw
    7df0:	b.ls	7f08 <gelf_getphdr@@ELFUTILS_1.0+0x178>  // b.plast
    7df4:	lsl	x0, x1, #3
    7df8:	sub	x0, x0, x1
    7dfc:	add	x21, x21, x0, lsl #3
    7e00:	ldp	x0, x1, [x21]
    7e04:	stp	x0, x1, [x20]
    7e08:	ldp	x0, x1, [x21, #16]
    7e0c:	stp	x0, x1, [x20, #16]
    7e10:	ldp	x0, x1, [x21, #32]
    7e14:	stp	x0, x1, [x20, #32]
    7e18:	ldr	x0, [x21, #48]
    7e1c:	str	x0, [x20, #48]
    7e20:	mov	x21, x20
    7e24:	mov	x0, x21
    7e28:	ldp	x19, x20, [sp, #16]
    7e2c:	ldp	x21, x22, [sp, #32]
    7e30:	ldp	x29, x30, [sp], #64
    7e34:	ret
    7e38:	mov	w0, #0x4                   	// #4
    7e3c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7e40:	mov	x21, #0x0                   	// #0
    7e44:	b	7e24 <gelf_getphdr@@ELFUTILS_1.0+0x94>
    7e48:	mov	w0, #0x17                  	// #23
    7e4c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7e50:	mov	x21, x20
    7e54:	b	7e24 <gelf_getphdr@@ELFUTILS_1.0+0x94>
    7e58:	ldr	x21, [x19, #88]
    7e5c:	cbz	x21, 7ed0 <gelf_getphdr@@ELFUTILS_1.0+0x140>
    7e60:	add	x1, sp, #0x38
    7e64:	mov	x0, x19
    7e68:	bl	10f18 <gelf_update_verdaux@@ELFUTILS_1.0+0x13c>
    7e6c:	cbnz	w0, 7ee4 <gelf_getphdr@@ELFUTILS_1.0+0x154>
    7e70:	sxtw	x1, w22
    7e74:	ldr	x0, [sp, #56]
    7e78:	cmp	x0, w22, sxtw
    7e7c:	b.ls	7ee4 <gelf_getphdr@@ELFUTILS_1.0+0x154>  // b.plast
    7e80:	lsl	x1, x1, #5
    7e84:	add	x0, x21, x1
    7e88:	ldr	w1, [x21, x1]
    7e8c:	str	w1, [x20]
    7e90:	ldr	w1, [x0, #4]
    7e94:	str	x1, [x20, #8]
    7e98:	ldr	w1, [x0, #8]
    7e9c:	str	x1, [x20, #16]
    7ea0:	ldr	w1, [x0, #12]
    7ea4:	str	x1, [x20, #24]
    7ea8:	ldr	w1, [x0, #16]
    7eac:	str	x1, [x20, #32]
    7eb0:	ldr	w1, [x0, #20]
    7eb4:	str	x1, [x20, #40]
    7eb8:	ldr	w1, [x0, #24]
    7ebc:	str	w1, [x20, #4]
    7ec0:	ldr	w0, [x0, #28]
    7ec4:	str	x0, [x20, #48]
    7ec8:	mov	x21, x20
    7ecc:	b	7e24 <gelf_getphdr@@ELFUTILS_1.0+0x94>
    7ed0:	mov	x0, x19
    7ed4:	bl	78cc <elf32_getphdr@@ELFUTILS_1.0>
    7ed8:	mov	x21, x0
    7edc:	cbnz	x0, 7e60 <gelf_getphdr@@ELFUTILS_1.0+0xd0>
    7ee0:	b	7e24 <gelf_getphdr@@ELFUTILS_1.0+0x94>
    7ee4:	mov	w0, #0x16                  	// #22
    7ee8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7eec:	mov	x21, #0x0                   	// #0
    7ef0:	b	7e24 <gelf_getphdr@@ELFUTILS_1.0+0x94>
    7ef4:	mov	x0, x19
    7ef8:	bl	7d44 <elf64_getphdr@@ELFUTILS_1.0>
    7efc:	mov	x21, x0
    7f00:	cbnz	x0, 7dd4 <gelf_getphdr@@ELFUTILS_1.0+0x44>
    7f04:	b	7e24 <gelf_getphdr@@ELFUTILS_1.0+0x94>
    7f08:	mov	w0, #0x16                  	// #22
    7f0c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7f10:	mov	x21, #0x0                   	// #0
    7f14:	b	7e24 <gelf_getphdr@@ELFUTILS_1.0+0x94>
    7f18:	mov	x21, x0
    7f1c:	b	7e24 <gelf_getphdr@@ELFUTILS_1.0+0x94>

0000000000007f20 <elf32_newphdr@@ELFUTILS_1.0>:
    7f20:	stp	x29, x30, [sp, #-48]!
    7f24:	mov	x29, sp
    7f28:	stp	x19, x20, [sp, #16]
    7f2c:	stp	x21, x22, [sp, #32]
    7f30:	mov	x19, x0
    7f34:	cbz	x0, 81b0 <elf32_newphdr@@ELFUTILS_1.0+0x290>
    7f38:	mov	x20, x1
    7f3c:	ldr	w0, [x0, #24]
    7f40:	cmp	w0, #0x3
    7f44:	b.ne	7fcc <elf32_newphdr@@ELFUTILS_1.0+0xac>  // b.any
    7f48:	tst	x1, #0xffffffff00000000
    7f4c:	b.ne	7fdc <elf32_newphdr@@ELFUTILS_1.0+0xbc>  // b.any
    7f50:	ldr	w0, [x19, #32]
    7f54:	cbnz	w0, 7fec <elf32_newphdr@@ELFUTILS_1.0+0xcc>
    7f58:	mov	w0, #0x1                   	// #1
    7f5c:	str	w0, [x19, #32]
    7f60:	ldr	x21, [x19, #72]
    7f64:	cbz	x21, 8004 <elf32_newphdr@@ELFUTILS_1.0+0xe4>
    7f68:	cbnz	x20, 801c <elf32_newphdr@@ELFUTILS_1.0+0xfc>
    7f6c:	ldr	x21, [x19, #88]
    7f70:	cbz	x21, 809c <elf32_newphdr@@ELFUTILS_1.0+0x17c>
    7f74:	ldr	w0, [x19, #120]
    7f78:	tbnz	w0, #7, 8010 <elf32_newphdr@@ELFUTILS_1.0+0xf0>
    7f7c:	str	xzr, [x19, #88]
    7f80:	ldr	x0, [x19, #72]
    7f84:	strh	wzr, [x0, #44]
    7f88:	ldr	w0, [x19, #200]
    7f8c:	cbz	w0, 7f98 <elf32_newphdr@@ELFUTILS_1.0+0x78>
    7f90:	ldr	x0, [x19, #360]
    7f94:	str	wzr, [x0, #28]
    7f98:	ldr	x0, [x19, #72]
    7f9c:	mov	w1, #0x20                  	// #32
    7fa0:	strh	w1, [x0, #42]
    7fa4:	ldr	w0, [x19, #120]
    7fa8:	orr	w0, w0, #0x1
    7fac:	str	w0, [x19, #120]
    7fb0:	ldr	w0, [x19, #56]
    7fb4:	orr	w0, w0, #0x1
    7fb8:	str	w0, [x19, #56]
    7fbc:	mov	w0, #0x0                   	// #0
    7fc0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7fc4:	mov	x21, #0x0                   	// #0
    7fc8:	b	809c <elf32_newphdr@@ELFUTILS_1.0+0x17c>
    7fcc:	mov	w0, #0x4                   	// #4
    7fd0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7fd4:	mov	x21, #0x0                   	// #0
    7fd8:	b	809c <elf32_newphdr@@ELFUTILS_1.0+0x17c>
    7fdc:	mov	w0, #0x17                  	// #23
    7fe0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7fe4:	mov	x21, #0x0                   	// #0
    7fe8:	b	809c <elf32_newphdr@@ELFUTILS_1.0+0x17c>
    7fec:	cmp	w0, #0x1
    7ff0:	b.eq	7f60 <elf32_newphdr@@ELFUTILS_1.0+0x40>  // b.none
    7ff4:	mov	w0, #0x15                  	// #21
    7ff8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    7ffc:	mov	x21, #0x0                   	// #0
    8000:	b	809c <elf32_newphdr@@ELFUTILS_1.0+0x17c>
    8004:	mov	w0, #0x1a                  	// #26
    8008:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    800c:	b	809c <elf32_newphdr@@ELFUTILS_1.0+0x17c>
    8010:	mov	x0, x21
    8014:	bl	3250 <free@plt>
    8018:	b	7f7c <elf32_newphdr@@ELFUTILS_1.0+0x5c>
    801c:	ldrh	w0, [x21, #44]
    8020:	cmp	x0, x20
    8024:	mov	x0, #0xffff                	// #65535
    8028:	ccmp	x20, x0, #0x4, eq  // eq = none
    802c:	b.ne	80b0 <elf32_newphdr@@ELFUTILS_1.0+0x190>  // b.any
    8030:	mov	x0, #0xfffe                	// #65534
    8034:	cmp	x20, x0
    8038:	b.hi	80f0 <elf32_newphdr@@ELFUTILS_1.0+0x1d0>  // b.pmore
    803c:	lsl	x22, x20, #5
    8040:	mov	x1, x22
    8044:	ldr	x0, [x19, #88]
    8048:	bl	31a0 <realloc@plt>
    804c:	mov	x21, x0
    8050:	cbz	x0, 814c <elf32_newphdr@@ELFUTILS_1.0+0x22c>
    8054:	str	x21, [x19, #88]
    8058:	ldr	x0, [x19, #72]
    805c:	strh	w20, [x0, #44]
    8060:	mov	x2, x22
    8064:	mov	w1, #0x0                   	// #0
    8068:	mov	x0, x21
    806c:	bl	3140 <memset@plt>
    8070:	ldr	x0, [x19, #72]
    8074:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8078:	ldr	x1, [x1, #1432]
    807c:	strh	w1, [x0, #42]
    8080:	ldr	w0, [x19, #120]
    8084:	mov	w1, #0x81                  	// #129
    8088:	orr	w0, w0, w1
    808c:	str	w0, [x19, #120]
    8090:	ldr	w0, [x19, #56]
    8094:	orr	w0, w0, #0x1
    8098:	str	w0, [x19, #56]
    809c:	mov	x0, x21
    80a0:	ldp	x19, x20, [sp, #16]
    80a4:	ldp	x21, x22, [sp, #32]
    80a8:	ldp	x29, x30, [sp], #48
    80ac:	ret
    80b0:	ldr	x22, [x19, #88]
    80b4:	cbz	x22, 8030 <elf32_newphdr@@ELFUTILS_1.0+0x110>
    80b8:	ldrh	w1, [x21, #42]
    80bc:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    80c0:	ldr	x0, [x0, #1432]
    80c4:	cmp	x1, x0
    80c8:	b.ne	8190 <elf32_newphdr@@ELFUTILS_1.0+0x270>  // b.any
    80cc:	ldr	w0, [x19, #120]
    80d0:	orr	w0, w0, #0x1
    80d4:	str	w0, [x19, #120]
    80d8:	lsl	x2, x20, #5
    80dc:	mov	w1, #0x0                   	// #0
    80e0:	mov	x0, x22
    80e4:	bl	3140 <memset@plt>
    80e8:	mov	x21, x22
    80ec:	b	809c <elf32_newphdr@@ELFUTILS_1.0+0x17c>
    80f0:	ldr	x21, [x19, #360]
    80f4:	cbz	x21, 8140 <elf32_newphdr@@ELFUTILS_1.0+0x220>
    80f8:	lsl	x22, x20, #5
    80fc:	mov	x1, x22
    8100:	ldr	x0, [x19, #88]
    8104:	bl	31a0 <realloc@plt>
    8108:	mov	x21, x0
    810c:	cbz	x0, 814c <elf32_newphdr@@ELFUTILS_1.0+0x22c>
    8110:	str	x21, [x19, #88]
    8114:	ldr	w0, [x19, #200]
    8118:	cbz	w0, 815c <elf32_newphdr@@ELFUTILS_1.0+0x23c>
    811c:	ldr	x1, [x19, #360]
    8120:	str	w20, [x1, #28]
    8124:	ldr	w1, [x19, #368]
    8128:	orr	w1, w1, #0x1
    812c:	str	w1, [x19, #368]
    8130:	ldr	x0, [x19, #72]
    8134:	mov	w1, #0xffffffff            	// #-1
    8138:	strh	w1, [x0, #44]
    813c:	b	8060 <elf32_newphdr@@ELFUTILS_1.0+0x140>
    8140:	mov	w0, #0x20                  	// #32
    8144:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8148:	b	809c <elf32_newphdr@@ELFUTILS_1.0+0x17c>
    814c:	mov	w0, #0x8                   	// #8
    8150:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8154:	mov	x21, #0x0                   	// #0
    8158:	b	809c <elf32_newphdr@@ELFUTILS_1.0+0x17c>
    815c:	ldr	w0, [x19, #204]
    8160:	cbz	w0, 8170 <elf32_newphdr@@ELFUTILS_1.0+0x250>
    8164:	mov	w0, #0x1                   	// #1
    8168:	str	w0, [x19, #200]
    816c:	b	811c <elf32_newphdr@@ELFUTILS_1.0+0x1fc>
    8170:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8174:	add	x3, x3, #0x7b8
    8178:	mov	w2, #0x97                  	// #151
    817c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8180:	add	x1, x1, #0x718
    8184:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8188:	add	x0, x0, #0x728
    818c:	bl	3380 <__assert_fail@plt>
    8190:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8194:	add	x3, x3, #0x7b8
    8198:	mov	w2, #0xb2                  	// #178
    819c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    81a0:	add	x1, x1, #0x718
    81a4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    81a8:	add	x0, x0, #0x758
    81ac:	bl	3380 <__assert_fail@plt>
    81b0:	mov	x21, x0
    81b4:	b	809c <elf32_newphdr@@ELFUTILS_1.0+0x17c>

00000000000081b8 <elf64_newphdr@@ELFUTILS_1.0>:
    81b8:	stp	x29, x30, [sp, #-48]!
    81bc:	mov	x29, sp
    81c0:	stp	x19, x20, [sp, #16]
    81c4:	stp	x21, x22, [sp, #32]
    81c8:	mov	x19, x0
    81cc:	cbz	x0, 8460 <elf64_newphdr@@ELFUTILS_1.0+0x2a8>
    81d0:	mov	x20, x1
    81d4:	ldr	w0, [x0, #24]
    81d8:	cmp	w0, #0x3
    81dc:	b.ne	8264 <elf64_newphdr@@ELFUTILS_1.0+0xac>  // b.any
    81e0:	tst	x1, #0xffffffff00000000
    81e4:	b.ne	8274 <elf64_newphdr@@ELFUTILS_1.0+0xbc>  // b.any
    81e8:	ldr	w0, [x19, #32]
    81ec:	cbnz	w0, 8284 <elf64_newphdr@@ELFUTILS_1.0+0xcc>
    81f0:	mov	w0, #0x2                   	// #2
    81f4:	str	w0, [x19, #32]
    81f8:	ldr	x21, [x19, #72]
    81fc:	cbz	x21, 829c <elf64_newphdr@@ELFUTILS_1.0+0xe4>
    8200:	cbnz	x20, 82b4 <elf64_newphdr@@ELFUTILS_1.0+0xfc>
    8204:	ldr	x21, [x19, #88]
    8208:	cbz	x21, 833c <elf64_newphdr@@ELFUTILS_1.0+0x184>
    820c:	ldr	w0, [x19, #120]
    8210:	tbnz	w0, #7, 82a8 <elf64_newphdr@@ELFUTILS_1.0+0xf0>
    8214:	str	xzr, [x19, #88]
    8218:	ldr	x0, [x19, #72]
    821c:	strh	wzr, [x0, #56]
    8220:	ldr	w0, [x19, #200]
    8224:	cbz	w0, 8230 <elf64_newphdr@@ELFUTILS_1.0+0x78>
    8228:	ldr	x0, [x19, #360]
    822c:	str	wzr, [x0, #44]
    8230:	ldr	x0, [x19, #72]
    8234:	mov	w1, #0x38                  	// #56
    8238:	strh	w1, [x0, #54]
    823c:	ldr	w0, [x19, #120]
    8240:	orr	w0, w0, #0x1
    8244:	str	w0, [x19, #120]
    8248:	ldr	w0, [x19, #56]
    824c:	orr	w0, w0, #0x1
    8250:	str	w0, [x19, #56]
    8254:	mov	w0, #0x0                   	// #0
    8258:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    825c:	mov	x21, #0x0                   	// #0
    8260:	b	833c <elf64_newphdr@@ELFUTILS_1.0+0x184>
    8264:	mov	w0, #0x4                   	// #4
    8268:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    826c:	mov	x21, #0x0                   	// #0
    8270:	b	833c <elf64_newphdr@@ELFUTILS_1.0+0x184>
    8274:	mov	w0, #0x17                  	// #23
    8278:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    827c:	mov	x21, #0x0                   	// #0
    8280:	b	833c <elf64_newphdr@@ELFUTILS_1.0+0x184>
    8284:	cmp	w0, #0x2
    8288:	b.eq	81f8 <elf64_newphdr@@ELFUTILS_1.0+0x40>  // b.none
    828c:	mov	w0, #0x15                  	// #21
    8290:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8294:	mov	x21, #0x0                   	// #0
    8298:	b	833c <elf64_newphdr@@ELFUTILS_1.0+0x184>
    829c:	mov	w0, #0x1a                  	// #26
    82a0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    82a4:	b	833c <elf64_newphdr@@ELFUTILS_1.0+0x184>
    82a8:	mov	x0, x21
    82ac:	bl	3250 <free@plt>
    82b0:	b	8214 <elf64_newphdr@@ELFUTILS_1.0+0x5c>
    82b4:	ldrh	w0, [x21, #56]
    82b8:	cmp	x0, x20
    82bc:	mov	x0, #0xffff                	// #65535
    82c0:	ccmp	x20, x0, #0x4, eq  // eq = none
    82c4:	b.ne	8350 <elf64_newphdr@@ELFUTILS_1.0+0x198>  // b.any
    82c8:	mov	x0, #0xfffe                	// #65534
    82cc:	cmp	x20, x0
    82d0:	b.hi	8398 <elf64_newphdr@@ELFUTILS_1.0+0x1e0>  // b.pmore
    82d4:	lsl	x1, x20, #3
    82d8:	sub	x1, x1, x20
    82dc:	lsl	x1, x1, #3
    82e0:	mov	x22, x1
    82e4:	ldr	x0, [x19, #88]
    82e8:	bl	31a0 <realloc@plt>
    82ec:	mov	x21, x0
    82f0:	cbz	x0, 83fc <elf64_newphdr@@ELFUTILS_1.0+0x244>
    82f4:	str	x21, [x19, #88]
    82f8:	ldr	x0, [x19, #72]
    82fc:	strh	w20, [x0, #56]
    8300:	mov	x2, x22
    8304:	mov	w1, #0x0                   	// #0
    8308:	mov	x0, x21
    830c:	bl	3140 <memset@plt>
    8310:	ldr	x0, [x19, #72]
    8314:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8318:	ldr	x1, [x1, #1648]
    831c:	strh	w1, [x0, #54]
    8320:	ldr	w0, [x19, #120]
    8324:	mov	w1, #0x81                  	// #129
    8328:	orr	w0, w0, w1
    832c:	str	w0, [x19, #120]
    8330:	ldr	w0, [x19, #56]
    8334:	orr	w0, w0, #0x1
    8338:	str	w0, [x19, #56]
    833c:	mov	x0, x21
    8340:	ldp	x19, x20, [sp, #16]
    8344:	ldp	x21, x22, [sp, #32]
    8348:	ldp	x29, x30, [sp], #48
    834c:	ret
    8350:	ldr	x22, [x19, #88]
    8354:	cbz	x22, 82c8 <elf64_newphdr@@ELFUTILS_1.0+0x110>
    8358:	ldrh	w1, [x21, #54]
    835c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8360:	ldr	x0, [x0, #1648]
    8364:	cmp	x1, x0
    8368:	b.ne	8440 <elf64_newphdr@@ELFUTILS_1.0+0x288>  // b.any
    836c:	ldr	w0, [x19, #120]
    8370:	orr	w0, w0, #0x1
    8374:	str	w0, [x19, #120]
    8378:	lsl	x2, x20, #3
    837c:	sub	x2, x2, x20
    8380:	lsl	x2, x2, #3
    8384:	mov	w1, #0x0                   	// #0
    8388:	mov	x0, x22
    838c:	bl	3140 <memset@plt>
    8390:	mov	x21, x22
    8394:	b	833c <elf64_newphdr@@ELFUTILS_1.0+0x184>
    8398:	ldr	x21, [x19, #360]
    839c:	cbz	x21, 83f0 <elf64_newphdr@@ELFUTILS_1.0+0x238>
    83a0:	lsl	x1, x20, #3
    83a4:	sub	x1, x1, x20
    83a8:	lsl	x1, x1, #3
    83ac:	mov	x22, x1
    83b0:	ldr	x0, [x19, #88]
    83b4:	bl	31a0 <realloc@plt>
    83b8:	mov	x21, x0
    83bc:	cbz	x0, 83fc <elf64_newphdr@@ELFUTILS_1.0+0x244>
    83c0:	str	x21, [x19, #88]
    83c4:	ldr	w0, [x19, #200]
    83c8:	cbz	w0, 840c <elf64_newphdr@@ELFUTILS_1.0+0x254>
    83cc:	ldr	x1, [x19, #360]
    83d0:	str	w20, [x1, #44]
    83d4:	ldr	w1, [x19, #368]
    83d8:	orr	w1, w1, #0x1
    83dc:	str	w1, [x19, #368]
    83e0:	ldr	x0, [x19, #72]
    83e4:	mov	w1, #0xffffffff            	// #-1
    83e8:	strh	w1, [x0, #56]
    83ec:	b	8300 <elf64_newphdr@@ELFUTILS_1.0+0x148>
    83f0:	mov	w0, #0x20                  	// #32
    83f4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    83f8:	b	833c <elf64_newphdr@@ELFUTILS_1.0+0x184>
    83fc:	mov	w0, #0x8                   	// #8
    8400:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8404:	mov	x21, #0x0                   	// #0
    8408:	b	833c <elf64_newphdr@@ELFUTILS_1.0+0x184>
    840c:	ldr	w0, [x19, #204]
    8410:	cbz	w0, 8420 <elf64_newphdr@@ELFUTILS_1.0+0x268>
    8414:	mov	w0, #0x1                   	// #1
    8418:	str	w0, [x19, #200]
    841c:	b	83cc <elf64_newphdr@@ELFUTILS_1.0+0x214>
    8420:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8424:	add	x3, x3, #0x7c8
    8428:	mov	w2, #0x97                  	// #151
    842c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8430:	add	x1, x1, #0x718
    8434:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8438:	add	x0, x0, #0x728
    843c:	bl	3380 <__assert_fail@plt>
    8440:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8444:	add	x3, x3, #0x7c8
    8448:	mov	w2, #0xb2                  	// #178
    844c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8450:	add	x1, x1, #0x718
    8454:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8458:	add	x0, x0, #0x758
    845c:	bl	3380 <__assert_fail@plt>
    8460:	mov	x21, x0
    8464:	b	833c <elf64_newphdr@@ELFUTILS_1.0+0x184>

0000000000008468 <gelf_newphdr@@ELFUTILS_1.0>:
    8468:	stp	x29, x30, [sp, #-16]!
    846c:	mov	x29, sp
    8470:	ldr	w2, [x0, #32]
    8474:	cmp	w2, #0x1
    8478:	b.eq	8488 <gelf_newphdr@@ELFUTILS_1.0+0x20>  // b.none
    847c:	bl	81b8 <elf64_newphdr@@ELFUTILS_1.0>
    8480:	ldp	x29, x30, [sp], #16
    8484:	ret
    8488:	bl	7f20 <elf32_newphdr@@ELFUTILS_1.0>
    848c:	b	8480 <gelf_newphdr@@ELFUTILS_1.0+0x18>

0000000000008490 <gelf_update_phdr@@ELFUTILS_1.0>:
    8490:	cbz	x0, 8690 <gelf_update_phdr@@ELFUTILS_1.0+0x200>
    8494:	stp	x29, x30, [sp, #-64]!
    8498:	mov	x29, sp
    849c:	stp	x19, x20, [sp, #16]
    84a0:	stp	x21, x22, [sp, #32]
    84a4:	mov	x19, x0
    84a8:	mov	w21, w1
    84ac:	mov	x20, x2
    84b0:	ldr	w0, [x0, #24]
    84b4:	cmp	w0, #0x3
    84b8:	b.ne	8554 <gelf_update_phdr@@ELFUTILS_1.0+0xc4>  // b.any
    84bc:	ldr	w0, [x19, #32]
    84c0:	cmp	w0, #0x1
    84c4:	b.eq	8564 <gelf_update_phdr@@ELFUTILS_1.0+0xd4>  // b.none
    84c8:	ldr	x22, [x19, #88]
    84cc:	cbz	x22, 866c <gelf_update_phdr@@ELFUTILS_1.0+0x1dc>
    84d0:	ldr	x0, [x19, #72]
    84d4:	ldrh	w0, [x0, #56]
    84d8:	cmp	w0, w21
    84dc:	b.gt	8508 <gelf_update_phdr@@ELFUTILS_1.0+0x78>
    84e0:	mov	w1, #0xffff                	// #65535
    84e4:	cmp	w0, w1
    84e8:	b.ne	8680 <gelf_update_phdr@@ELFUTILS_1.0+0x1f0>  // b.any
    84ec:	add	x1, sp, #0x38
    84f0:	mov	x0, x19
    84f4:	bl	10e5c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>
    84f8:	cbnz	w0, 8680 <gelf_update_phdr@@ELFUTILS_1.0+0x1f0>
    84fc:	ldr	x0, [sp, #56]
    8500:	cmp	x0, w21, sxtw
    8504:	b.ls	8680 <gelf_update_phdr@@ELFUTILS_1.0+0x1f0>  // b.plast
    8508:	sbfiz	x1, x21, #3, #32
    850c:	sub	x21, x1, w21, sxtw
    8510:	add	x21, x22, x21, lsl #3
    8514:	ldp	x0, x1, [x20]
    8518:	stp	x0, x1, [x21]
    851c:	ldp	x0, x1, [x20, #16]
    8520:	stp	x0, x1, [x21, #16]
    8524:	ldp	x0, x1, [x20, #32]
    8528:	stp	x0, x1, [x21, #32]
    852c:	ldr	x0, [x20, #48]
    8530:	str	x0, [x21, #48]
    8534:	ldr	w0, [x19, #120]
    8538:	orr	w0, w0, #0x1
    853c:	str	w0, [x19, #120]
    8540:	mov	w0, #0x1                   	// #1
    8544:	ldp	x19, x20, [sp, #16]
    8548:	ldp	x21, x22, [sp, #32]
    854c:	ldp	x29, x30, [sp], #64
    8550:	ret
    8554:	mov	w0, #0x4                   	// #4
    8558:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    855c:	mov	w0, #0x0                   	// #0
    8560:	b	8544 <gelf_update_phdr@@ELFUTILS_1.0+0xb4>
    8564:	ldr	x1, [x2, #8]
    8568:	mov	x0, #0xffffffff            	// #4294967295
    856c:	cmp	x1, x0
    8570:	b.hi	863c <gelf_update_phdr@@ELFUTILS_1.0+0x1ac>  // b.pmore
    8574:	ldr	x1, [x2, #16]
    8578:	cmp	x1, x0
    857c:	b.hi	863c <gelf_update_phdr@@ELFUTILS_1.0+0x1ac>  // b.pmore
    8580:	ldr	x1, [x2, #24]
    8584:	cmp	x1, x0
    8588:	b.hi	863c <gelf_update_phdr@@ELFUTILS_1.0+0x1ac>  // b.pmore
    858c:	ldr	x1, [x2, #32]
    8590:	cmp	x1, x0
    8594:	b.hi	863c <gelf_update_phdr@@ELFUTILS_1.0+0x1ac>  // b.pmore
    8598:	ldr	x1, [x2, #40]
    859c:	cmp	x1, x0
    85a0:	b.hi	863c <gelf_update_phdr@@ELFUTILS_1.0+0x1ac>  // b.pmore
    85a4:	ldr	x1, [x2, #48]
    85a8:	cmp	x1, x0
    85ac:	b.hi	863c <gelf_update_phdr@@ELFUTILS_1.0+0x1ac>  // b.pmore
    85b0:	ldr	x22, [x19, #88]
    85b4:	cbz	x22, 864c <gelf_update_phdr@@ELFUTILS_1.0+0x1bc>
    85b8:	ldr	x0, [x19, #72]
    85bc:	ldrh	w0, [x0, #44]
    85c0:	cmp	w0, w21
    85c4:	b.gt	85f0 <gelf_update_phdr@@ELFUTILS_1.0+0x160>
    85c8:	mov	w1, #0xffff                	// #65535
    85cc:	cmp	w0, w1
    85d0:	b.ne	8660 <gelf_update_phdr@@ELFUTILS_1.0+0x1d0>  // b.any
    85d4:	add	x1, sp, #0x38
    85d8:	mov	x0, x19
    85dc:	bl	10e5c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>
    85e0:	cbnz	w0, 8660 <gelf_update_phdr@@ELFUTILS_1.0+0x1d0>
    85e4:	ldr	x0, [sp, #56]
    85e8:	cmp	x0, w21, sxtw
    85ec:	b.ls	8660 <gelf_update_phdr@@ELFUTILS_1.0+0x1d0>  // b.plast
    85f0:	sbfiz	x21, x21, #5, #32
    85f4:	add	x2, x22, x21
    85f8:	ldr	w0, [x20]
    85fc:	str	w0, [x22, x21]
    8600:	ldr	x0, [x20, #8]
    8604:	str	w0, [x2, #4]
    8608:	ldr	x0, [x20, #16]
    860c:	str	w0, [x2, #8]
    8610:	ldr	x0, [x20, #24]
    8614:	str	w0, [x2, #12]
    8618:	ldr	x0, [x20, #32]
    861c:	str	w0, [x2, #16]
    8620:	ldr	x0, [x20, #40]
    8624:	str	w0, [x2, #20]
    8628:	ldr	w0, [x20, #4]
    862c:	str	w0, [x2, #24]
    8630:	ldr	x0, [x20, #48]
    8634:	str	w0, [x2, #28]
    8638:	b	8534 <gelf_update_phdr@@ELFUTILS_1.0+0xa4>
    863c:	mov	w0, #0x21                  	// #33
    8640:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8644:	mov	w0, #0x0                   	// #0
    8648:	b	8544 <gelf_update_phdr@@ELFUTILS_1.0+0xb4>
    864c:	mov	x0, x19
    8650:	bl	74b4 <gelf_update_ehdr@@ELFUTILS_1.0+0x150>
    8654:	mov	x22, x0
    8658:	cbnz	x0, 85b8 <gelf_update_phdr@@ELFUTILS_1.0+0x128>
    865c:	b	8644 <gelf_update_phdr@@ELFUTILS_1.0+0x1b4>
    8660:	mov	w0, #0x16                  	// #22
    8664:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8668:	b	8644 <gelf_update_phdr@@ELFUTILS_1.0+0x1b4>
    866c:	mov	x0, x19
    8670:	bl	7918 <elf32_getphdr@@ELFUTILS_1.0+0x4c>
    8674:	mov	x22, x0
    8678:	cbnz	x0, 84d0 <gelf_update_phdr@@ELFUTILS_1.0+0x40>
    867c:	b	8688 <gelf_update_phdr@@ELFUTILS_1.0+0x1f8>
    8680:	mov	w0, #0x16                  	// #22
    8684:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8688:	mov	w0, #0x0                   	// #0
    868c:	b	8544 <gelf_update_phdr@@ELFUTILS_1.0+0xb4>
    8690:	mov	w0, #0x0                   	// #0
    8694:	ret

0000000000008698 <elf_getarhdr@@ELFUTILS_1.0>:
    8698:	stp	x29, x30, [sp, #-32]!
    869c:	mov	x29, sp
    86a0:	stp	x19, x20, [sp, #16]
    86a4:	cbz	x0, 8724 <elf_getarhdr@@ELFUTILS_1.0+0x8c>
    86a8:	ldr	x19, [x0, #8]
    86ac:	cbz	x19, 86d8 <elf_getarhdr@@ELFUTILS_1.0+0x40>
    86b0:	ldr	x20, [x19, #120]
    86b4:	cbz	x20, 86e4 <elf_getarhdr@@ELFUTILS_1.0+0x4c>
    86b8:	ldr	w0, [x19, #24]
    86bc:	add	x19, x19, #0x78
    86c0:	cmp	w0, #0x1
    86c4:	b.ne	8704 <elf_getarhdr@@ELFUTILS_1.0+0x6c>  // b.any
    86c8:	mov	x0, x19
    86cc:	ldp	x19, x20, [sp, #16]
    86d0:	ldp	x29, x30, [sp], #32
    86d4:	ret
    86d8:	mov	w0, #0xb                   	// #11
    86dc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    86e0:	b	86c8 <elf_getarhdr@@ELFUTILS_1.0+0x30>
    86e4:	mov	x0, x19
    86e8:	bl	4720 <elf_fill@@ELFUTILS_1.0+0x102c>
    86ec:	cbz	w0, 86b8 <elf_getarhdr@@ELFUTILS_1.0+0x20>
    86f0:	mov	x0, x19
    86f4:	bl	4720 <elf_fill@@ELFUTILS_1.0+0x102c>
    86f8:	cbz	w0, 86b8 <elf_getarhdr@@ELFUTILS_1.0+0x20>
    86fc:	mov	x19, x20
    8700:	b	86c8 <elf_getarhdr@@ELFUTILS_1.0+0x30>
    8704:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8708:	add	x3, x3, #0x7e8
    870c:	mov	w2, #0x46                  	// #70
    8710:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8714:	add	x1, x1, #0x7d8
    8718:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    871c:	add	x0, x0, #0x4f8
    8720:	bl	3380 <__assert_fail@plt>
    8724:	mov	x19, x0
    8728:	b	86c8 <elf_getarhdr@@ELFUTILS_1.0+0x30>

000000000000872c <elf_getarsym@@ELFUTILS_1.0>:
    872c:	stp	x29, x30, [sp, #-176]!
    8730:	mov	x29, sp
    8734:	stp	x19, x20, [sp, #16]
    8738:	stp	x21, x22, [sp, #32]
    873c:	mov	x19, x0
    8740:	ldr	w0, [x0, #24]
    8744:	cmp	w0, #0x1
    8748:	b.ne	878c <elf_getarsym@@ELFUTILS_1.0+0x60>  // b.any
    874c:	mov	x20, x1
    8750:	cbz	x1, 875c <elf_getarsym@@ELFUTILS_1.0+0x30>
    8754:	ldr	x0, [x19, #88]
    8758:	str	x0, [x1]
    875c:	ldr	x21, [x19, #80]
    8760:	cmn	x21, #0x1
    8764:	b.eq	879c <elf_getarsym@@ELFUTILS_1.0+0x70>  // b.none
    8768:	cbz	x21, 87ac <elf_getarsym@@ELFUTILS_1.0+0x80>
    876c:	cbz	x20, 8778 <elf_getarsym@@ELFUTILS_1.0+0x4c>
    8770:	ldr	x0, [x19, #88]
    8774:	str	x0, [x20]
    8778:	mov	x0, x21
    877c:	ldp	x19, x20, [sp, #16]
    8780:	ldp	x21, x22, [sp, #32]
    8784:	ldp	x29, x30, [sp], #176
    8788:	ret
    878c:	mov	w0, #0x11                  	// #17
    8790:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8794:	mov	x21, #0x0                   	// #0
    8798:	b	8778 <elf_getarsym@@ELFUTILS_1.0+0x4c>
    879c:	mov	w0, #0x12                  	// #18
    87a0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    87a4:	mov	x21, #0x0                   	// #0
    87a8:	b	8778 <elf_getarsym@@ELFUTILS_1.0+0x4c>
    87ac:	stp	x23, x24, [sp, #48]
    87b0:	mov	x0, #0xffffffffffffffff    	// #-1
    87b4:	str	x0, [x19, #80]
    87b8:	ldr	x23, [x19]
    87bc:	cbz	x23, 88d0 <elf_getarsym@@ELFUTILS_1.0+0x1a4>
    87c0:	ldr	x0, [x19, #48]
    87c4:	cmp	x0, #0x43
    87c8:	b.ls	8990 <elf_getarsym@@ELFUTILS_1.0+0x264>  // b.plast
    87cc:	ldr	x22, [x19, #40]
    87d0:	add	x22, x22, #0x8
    87d4:	add	x22, x23, x22
    87d8:	mov	x2, #0x2                   	// #2
    87dc:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    87e0:	add	x1, x1, #0x470
    87e4:	add	x0, x22, #0x3a
    87e8:	bl	3200 <memcmp@plt>
    87ec:	cbnz	w0, 89a0 <elf_getarsym@@ELFUTILS_1.0+0x274>
    87f0:	stp	x25, x26, [sp, #64]
    87f4:	stp	x27, x28, [sp, #80]
    87f8:	mov	x2, #0x10                  	// #16
    87fc:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8800:	add	x1, x1, #0x478
    8804:	mov	x0, x22
    8808:	bl	3200 <memcmp@plt>
    880c:	cbz	w0, 8d9c <elf_getarsym@@ELFUTILS_1.0+0x670>
    8810:	mov	x2, #0x10                  	// #16
    8814:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8818:	add	x1, x1, #0x490
    881c:	mov	x0, x22
    8820:	bl	3200 <memcmp@plt>
    8824:	cbnz	w0, 89b0 <elf_getarsym@@ELFUTILS_1.0+0x284>
    8828:	ldr	x27, [x19, #40]
    882c:	add	x27, x27, #0x44
    8830:	mov	w28, #0x1                   	// #1
    8834:	mov	w0, #0x8                   	// #8
    8838:	str	w0, [sp, #120]
    883c:	mov	x26, #0x8                   	// #8
    8840:	ldr	x23, [x19]
    8844:	cbz	x23, 89c8 <elf_getarsym@@ELFUTILS_1.0+0x29c>
    8848:	ldr	x0, [x23, x27]
    884c:	str	x0, [sp, #152]
    8850:	cbz	w28, 8a54 <elf_getarsym@@ELFUTILS_1.0+0x328>
    8854:	ldr	x24, [sp, #152]
    8858:	rev	x24, x24
    885c:	ldr	x0, [x22, #48]
    8860:	str	x0, [sp, #152]
    8864:	ldrh	w0, [x22, #56]
    8868:	strh	w0, [sp, #160]
    886c:	strb	wzr, [sp, #162]
    8870:	mov	w2, #0xa                   	// #10
    8874:	mov	x1, #0x0                   	// #0
    8878:	add	x0, sp, #0x98
    887c:	bl	3240 <strtol@plt>
    8880:	mov	x22, x0
    8884:	ldr	x0, [x19, #48]
    8888:	cmp	x0, x22
    888c:	b.cc	88ac <elf_getarsym@@ELFUTILS_1.0+0x180>  // b.lo, b.ul, b.last
    8890:	sub	x0, x0, x22
    8894:	cmp	x0, #0x43
    8898:	b.ls	88ac <elf_getarsym@@ELFUTILS_1.0+0x180>  // b.plast
    889c:	ldrsw	x23, [sp, #120]
    88a0:	udiv	x0, x22, x23
    88a4:	cmp	x0, x24
    88a8:	b.cs	8a60 <elf_getarsym@@ELFUTILS_1.0+0x334>  // b.hs, b.nlast
    88ac:	mov	w0, #0x12                  	// #18
    88b0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    88b4:	mov	x23, x21
    88b8:	ldp	x25, x26, [sp, #64]
    88bc:	ldp	x27, x28, [sp, #80]
    88c0:	mov	x0, x23
    88c4:	bl	3250 <free@plt>
    88c8:	ldp	x23, x24, [sp, #48]
    88cc:	b	876c <elf_getarsym@@ELFUTILS_1.0+0x40>
    88d0:	stp	x25, x26, [sp, #64]
    88d4:	stp	x27, x28, [sp, #80]
    88d8:	ldr	w27, [x19, #36]
    88dc:	cmn	w27, #0x1
    88e0:	b.eq	88fc <elf_getarsym@@ELFUTILS_1.0+0x1d0>  // b.none
    88e4:	add	x22, x19, #0xa8
    88e8:	ldr	x26, [x19, #40]
    88ec:	add	x26, x26, #0x8
    88f0:	mov	x25, #0x0                   	// #0
    88f4:	mov	x28, #0x3c                  	// #60
    88f8:	b	8930 <elf_getarsym@@ELFUTILS_1.0+0x204>
    88fc:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8900:	add	x3, x3, #0x820
    8904:	mov	w2, #0x72                  	// #114
    8908:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    890c:	add	x1, x1, #0x7f8
    8910:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    8914:	add	x0, x0, #0x808
    8918:	bl	3380 <__assert_fail@plt>
    891c:	cmp	x0, #0x0
    8920:	b.le	8960 <elf_getarsym@@ELFUTILS_1.0+0x234>
    8924:	add	x25, x25, x0
    8928:	cmp	x25, #0x3b
    892c:	b.hi	8964 <elf_getarsym@@ELFUTILS_1.0+0x238>  // b.pmore
    8930:	add	x3, x26, x25
    8934:	sub	x2, x28, x25
    8938:	add	x1, x22, x25
    893c:	mov	w0, w27
    8940:	bl	32a0 <pread@plt>
    8944:	mov	x24, x0
    8948:	cmn	x0, #0x1
    894c:	b.ne	891c <elf_getarsym@@ELFUTILS_1.0+0x1f0>  // b.any
    8950:	bl	3390 <__errno_location@plt>
    8954:	ldr	w0, [x0]
    8958:	cmp	w0, #0x4
    895c:	b.eq	8930 <elf_getarsym@@ELFUTILS_1.0+0x204>  // b.none
    8960:	tbnz	x24, #63, 8978 <elf_getarsym@@ELFUTILS_1.0+0x24c>
    8964:	cmp	x25, #0x3c
    8968:	b.ne	8978 <elf_getarsym@@ELFUTILS_1.0+0x24c>  // b.any
    896c:	ldp	x25, x26, [sp, #64]
    8970:	ldp	x27, x28, [sp, #80]
    8974:	b	87d8 <elf_getarsym@@ELFUTILS_1.0+0xac>
    8978:	mov	w0, #0x13                  	// #19
    897c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8980:	mov	x21, x23
    8984:	ldp	x25, x26, [sp, #64]
    8988:	ldp	x27, x28, [sp, #80]
    898c:	b	88c0 <elf_getarsym@@ELFUTILS_1.0+0x194>
    8990:	mov	w0, #0x12                  	// #18
    8994:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8998:	mov	x23, x21
    899c:	b	88c0 <elf_getarsym@@ELFUTILS_1.0+0x194>
    89a0:	mov	w0, #0xf                   	// #15
    89a4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    89a8:	mov	x23, x21
    89ac:	b	88c0 <elf_getarsym@@ELFUTILS_1.0+0x194>
    89b0:	mov	w0, #0x12                  	// #18
    89b4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    89b8:	mov	x23, x21
    89bc:	ldp	x25, x26, [sp, #64]
    89c0:	ldp	x27, x28, [sp, #80]
    89c4:	b	88c0 <elf_getarsym@@ELFUTILS_1.0+0x194>
    89c8:	ldr	w0, [x19, #36]
    89cc:	str	w0, [sp, #96]
    89d0:	str	x27, [sp, #104]
    89d4:	mov	x25, #0x0                   	// #0
    89d8:	add	x0, sp, #0x98
    89dc:	str	x0, [sp, #112]
    89e0:	b	89f8 <elf_getarsym@@ELFUTILS_1.0+0x2cc>
    89e4:	cmp	x0, #0x0
    89e8:	b.le	8a30 <elf_getarsym@@ELFUTILS_1.0+0x304>
    89ec:	add	x25, x25, x0
    89f0:	cmp	x26, x25
    89f4:	b.ls	8a34 <elf_getarsym@@ELFUTILS_1.0+0x308>  // b.plast
    89f8:	ldr	x0, [sp, #104]
    89fc:	add	x3, x0, x25
    8a00:	sub	x2, x26, x25
    8a04:	ldr	x0, [sp, #112]
    8a08:	add	x1, x0, x25
    8a0c:	ldr	w0, [sp, #96]
    8a10:	bl	32a0 <pread@plt>
    8a14:	mov	x24, x0
    8a18:	cmn	x0, #0x1
    8a1c:	b.ne	89e4 <elf_getarsym@@ELFUTILS_1.0+0x2b8>  // b.any
    8a20:	bl	3390 <__errno_location@plt>
    8a24:	ldr	w0, [x0]
    8a28:	cmp	w0, #0x4
    8a2c:	b.eq	89f8 <elf_getarsym@@ELFUTILS_1.0+0x2cc>  // b.none
    8a30:	tbnz	x24, #63, 8a3c <elf_getarsym@@ELFUTILS_1.0+0x310>
    8a34:	cmp	x26, x25
    8a38:	b.eq	8850 <elf_getarsym@@ELFUTILS_1.0+0x124>  // b.none
    8a3c:	mov	w0, #0x12                  	// #18
    8a40:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8a44:	mov	x21, x23
    8a48:	ldp	x25, x26, [sp, #64]
    8a4c:	ldp	x27, x28, [sp, #80]
    8a50:	b	88c0 <elf_getarsym@@ELFUTILS_1.0+0x194>
    8a54:	ldr	w24, [sp, #152]
    8a58:	rev	w24, w24
    8a5c:	b	885c <elf_getarsym@@ELFUTILS_1.0+0x130>
    8a60:	add	x25, x24, #0x1
    8a64:	add	x0, x25, x25, lsl #1
    8a68:	lsl	x0, x0, #3
    8a6c:	str	x0, [sp, #112]
    8a70:	bl	3100 <malloc@plt>
    8a74:	str	x0, [sp, #120]
    8a78:	str	x0, [x19, #80]
    8a7c:	cbz	x0, 8d94 <elf_getarsym@@ELFUTILS_1.0+0x668>
    8a80:	add	x0, x26, x27
    8a84:	str	x0, [sp, #96]
    8a88:	mul	x26, x23, x24
    8a8c:	ldr	x0, [x19]
    8a90:	str	x0, [sp, #104]
    8a94:	cbz	x0, 8adc <elf_getarsym@@ELFUTILS_1.0+0x3b0>
    8a98:	ldr	x0, [sp, #104]
    8a9c:	ldr	x1, [sp, #96]
    8aa0:	add	x27, x0, x1
    8aa4:	neg	x0, x24
    8aa8:	tst	x27, x0
    8aac:	b.ne	8c5c <elf_getarsym@@ELFUTILS_1.0+0x530>  // b.any
    8ab0:	ldr	x0, [sp, #96]
    8ab4:	add	x26, x26, x0
    8ab8:	ldr	x0, [sp, #104]
    8abc:	add	x22, x0, x26
    8ac0:	mov	x23, x21
    8ac4:	ldr	x0, [x19, #80]
    8ac8:	str	x0, [sp, #96]
    8acc:	cbz	x24, 8d60 <elf_getarsym@@ELFUTILS_1.0+0x634>
    8ad0:	mov	x26, x0
    8ad4:	mov	x21, #0x0                   	// #0
    8ad8:	b	8cd4 <elf_getarsym@@ELFUTILS_1.0+0x5a8>
    8adc:	mov	x0, x26
    8ae0:	bl	3100 <malloc@plt>
    8ae4:	mov	x23, x0
    8ae8:	cbz	x0, 8b28 <elf_getarsym@@ELFUTILS_1.0+0x3fc>
    8aec:	sub	x0, x22, x26
    8af0:	str	x0, [sp, #136]
    8af4:	ldr	x1, [sp, #112]
    8af8:	add	x1, x0, x1
    8afc:	ldr	x0, [sp, #120]
    8b00:	bl	31a0 <realloc@plt>
    8b04:	mov	x21, x0
    8b08:	cbz	x0, 8b40 <elf_getarsym@@ELFUTILS_1.0+0x414>
    8b0c:	str	x0, [x19, #80]
    8b10:	ldr	w0, [x19, #36]
    8b14:	str	w0, [sp, #120]
    8b18:	ldr	x0, [sp, #96]
    8b1c:	str	x0, [sp, #128]
    8b20:	mov	x27, #0x0                   	// #0
    8b24:	b	8b74 <elf_getarsym@@ELFUTILS_1.0+0x448>
    8b28:	mov	w0, #0x8                   	// #8
    8b2c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8b30:	mov	x21, x23
    8b34:	ldp	x25, x26, [sp, #64]
    8b38:	ldp	x27, x28, [sp, #80]
    8b3c:	b	88c0 <elf_getarsym@@ELFUTILS_1.0+0x194>
    8b40:	ldr	x0, [sp, #120]
    8b44:	bl	3250 <free@plt>
    8b48:	str	xzr, [x19, #80]
    8b4c:	mov	w0, #0x8                   	// #8
    8b50:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8b54:	ldp	x25, x26, [sp, #64]
    8b58:	ldp	x27, x28, [sp, #80]
    8b5c:	b	88c0 <elf_getarsym@@ELFUTILS_1.0+0x194>
    8b60:	cmp	x0, #0x0
    8b64:	b.le	8ba8 <elf_getarsym@@ELFUTILS_1.0+0x47c>
    8b68:	add	x27, x27, x0
    8b6c:	cmp	x26, x27
    8b70:	b.ls	8bb0 <elf_getarsym@@ELFUTILS_1.0+0x484>  // b.plast
    8b74:	ldr	x0, [sp, #128]
    8b78:	add	x3, x0, x27
    8b7c:	sub	x2, x26, x27
    8b80:	add	x1, x23, x27
    8b84:	ldr	w0, [sp, #120]
    8b88:	bl	32a0 <pread@plt>
    8b8c:	mov	x22, x0
    8b90:	cmn	x0, #0x1
    8b94:	b.ne	8b60 <elf_getarsym@@ELFUTILS_1.0+0x434>  // b.any
    8b98:	bl	3390 <__errno_location@plt>
    8b9c:	ldr	w0, [x0]
    8ba0:	cmp	w0, #0x4
    8ba4:	b.eq	8b74 <elf_getarsym@@ELFUTILS_1.0+0x448>  // b.none
    8ba8:	cmp	x22, #0x0
    8bac:	csel	x27, x27, x22, ge  // ge = tcont
    8bb0:	cmp	x26, x27
    8bb4:	b.ne	8c38 <elf_getarsym@@ELFUTILS_1.0+0x50c>  // b.any
    8bb8:	ldr	x0, [sp, #112]
    8bbc:	add	x22, x21, x0
    8bc0:	ldr	w0, [x19, #36]
    8bc4:	str	w0, [sp, #120]
    8bc8:	ldr	x0, [sp, #96]
    8bcc:	add	x27, x26, x0
    8bd0:	mov	x21, #0x0                   	// #0
    8bd4:	b	8bf0 <elf_getarsym@@ELFUTILS_1.0+0x4c4>
    8bd8:	cmp	x0, #0x0
    8bdc:	b.le	8c24 <elf_getarsym@@ELFUTILS_1.0+0x4f8>
    8be0:	add	x21, x21, x0
    8be4:	ldr	x0, [sp, #136]
    8be8:	cmp	x0, x21
    8bec:	b.ls	8c2c <elf_getarsym@@ELFUTILS_1.0+0x500>  // b.plast
    8bf0:	add	x3, x27, x21
    8bf4:	ldr	x0, [sp, #136]
    8bf8:	sub	x2, x0, x21
    8bfc:	add	x1, x22, x21
    8c00:	ldr	w0, [sp, #120]
    8c04:	bl	32a0 <pread@plt>
    8c08:	mov	x26, x0
    8c0c:	cmn	x0, #0x1
    8c10:	b.ne	8bd8 <elf_getarsym@@ELFUTILS_1.0+0x4ac>  // b.any
    8c14:	bl	3390 <__errno_location@plt>
    8c18:	ldr	w0, [x0]
    8c1c:	cmp	w0, #0x4
    8c20:	b.eq	8bf0 <elf_getarsym@@ELFUTILS_1.0+0x4c4>  // b.none
    8c24:	cmp	x26, #0x0
    8c28:	csel	x21, x21, x26, ge  // ge = tcont
    8c2c:	ldr	x0, [sp, #136]
    8c30:	cmp	x0, x21
    8c34:	b.eq	8c98 <elf_getarsym@@ELFUTILS_1.0+0x56c>  // b.none
    8c38:	ldr	x0, [x19, #80]
    8c3c:	bl	3250 <free@plt>
    8c40:	str	xzr, [x19, #80]
    8c44:	mov	w0, #0x12                  	// #18
    8c48:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8c4c:	ldr	x21, [sp, #104]
    8c50:	ldp	x25, x26, [sp, #64]
    8c54:	ldp	x27, x28, [sp, #80]
    8c58:	b	88c0 <elf_getarsym@@ELFUTILS_1.0+0x194>
    8c5c:	mov	x0, x26
    8c60:	bl	3100 <malloc@plt>
    8c64:	mov	x21, x0
    8c68:	cbz	x0, 8c80 <elf_getarsym@@ELFUTILS_1.0+0x554>
    8c6c:	mov	x2, x26
    8c70:	mov	x1, x27
    8c74:	bl	3060 <memcpy@plt>
    8c78:	mov	x27, x0
    8c7c:	b	8ab0 <elf_getarsym@@ELFUTILS_1.0+0x384>
    8c80:	mov	w0, #0x8                   	// #8
    8c84:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8c88:	mov	x23, x21
    8c8c:	ldp	x25, x26, [sp, #64]
    8c90:	ldp	x27, x28, [sp, #80]
    8c94:	b	88c0 <elf_getarsym@@ELFUTILS_1.0+0x194>
    8c98:	mov	x27, x23
    8c9c:	b	8ac4 <elf_getarsym@@ELFUTILS_1.0+0x398>
    8ca0:	ldr	w0, [x27, x21, lsl #2]
    8ca4:	rev	w0, w0
    8ca8:	b	8ce8 <elf_getarsym@@ELFUTILS_1.0+0x5bc>
    8cac:	and	x0, x0, #0xfffffff
    8cb0:	str	x0, [x1, #16]
    8cb4:	mov	w1, #0x0                   	// #0
    8cb8:	mov	x0, x22
    8cbc:	bl	3260 <rawmemchr@plt>
    8cc0:	add	x22, x0, #0x1
    8cc4:	add	x21, x21, #0x1
    8cc8:	add	x26, x26, #0x18
    8ccc:	cmp	x21, x24
    8cd0:	b.eq	8d60 <elf_getarsym@@ELFUTILS_1.0+0x634>  // b.none
    8cd4:	mov	x1, x26
    8cd8:	str	x22, [x26]
    8cdc:	cbz	w28, 8ca0 <elf_getarsym@@ELFUTILS_1.0+0x574>
    8ce0:	ldr	x0, [x27, x21, lsl #3]
    8ce4:	rev	x0, x0
    8ce8:	str	x0, [x1, #8]
    8cec:	ldrb	w0, [x22]
    8cf0:	cbz	x0, 8cb0 <elf_getarsym@@ELFUTILS_1.0+0x584>
    8cf4:	ldrb	w2, [x22, #1]
    8cf8:	cbz	w2, 8cb0 <elf_getarsym@@ELFUTILS_1.0+0x584>
    8cfc:	and	x2, x2, #0xff
    8d00:	add	x0, x2, x0, lsl #4
    8d04:	ldrb	w2, [x22, #2]
    8d08:	cbz	w2, 8cb0 <elf_getarsym@@ELFUTILS_1.0+0x584>
    8d0c:	and	x2, x2, #0xff
    8d10:	add	x0, x2, x0, lsl #4
    8d14:	ldrb	w2, [x22, #3]
    8d18:	cbz	w2, 8cb0 <elf_getarsym@@ELFUTILS_1.0+0x584>
    8d1c:	and	x2, x2, #0xff
    8d20:	add	x0, x2, x0, lsl #4
    8d24:	ldrb	w2, [x22, #4]
    8d28:	cbz	w2, 8cb0 <elf_getarsym@@ELFUTILS_1.0+0x584>
    8d2c:	and	x2, x2, #0xff
    8d30:	add	x0, x2, x0, lsl #4
    8d34:	add	x3, x22, #0x5
    8d38:	ldrb	w2, [x22, #5]
    8d3c:	cbz	w2, 8cac <elf_getarsym@@ELFUTILS_1.0+0x580>
    8d40:	and	x2, x2, #0xff
    8d44:	add	x0, x2, x0, lsl #4
    8d48:	lsr	x2, x0, #24
    8d4c:	and	x2, x2, #0xf0
    8d50:	eor	x0, x0, x2
    8d54:	ldrb	w2, [x3, #1]!
    8d58:	cbnz	w2, 8d40 <elf_getarsym@@ELFUTILS_1.0+0x614>
    8d5c:	b	8cac <elf_getarsym@@ELFUTILS_1.0+0x580>
    8d60:	ldr	x0, [sp, #112]
    8d64:	sub	x0, x0, #0x18
    8d68:	ldr	x2, [sp, #96]
    8d6c:	add	x1, x2, x0
    8d70:	str	xzr, [x2, x0]
    8d74:	str	xzr, [x1, #8]
    8d78:	mov	x0, #0xffffffffffffffff    	// #-1
    8d7c:	str	x0, [x1, #16]
    8d80:	str	x25, [x19, #88]
    8d84:	ldr	x21, [x19, #80]
    8d88:	ldp	x25, x26, [sp, #64]
    8d8c:	ldp	x27, x28, [sp, #80]
    8d90:	b	88c0 <elf_getarsym@@ELFUTILS_1.0+0x194>
    8d94:	ldr	x23, [sp, #120]
    8d98:	b	8d84 <elf_getarsym@@ELFUTILS_1.0+0x658>
    8d9c:	ldr	x27, [x19, #40]
    8da0:	add	x27, x27, #0x44
    8da4:	mov	w28, #0x0                   	// #0
    8da8:	mov	w0, #0x4                   	// #4
    8dac:	str	w0, [sp, #120]
    8db0:	mov	x26, #0x4                   	// #4
    8db4:	b	8840 <elf_getarsym@@ELFUTILS_1.0+0x114>

0000000000008db8 <elf_rawfile@@ELFUTILS_1.0>:
    8db8:	stp	x29, x30, [sp, #-32]!
    8dbc:	mov	x29, sp
    8dc0:	stp	x19, x20, [sp, #16]
    8dc4:	mov	x20, x1
    8dc8:	cbz	x0, 8dfc <elf_rawfile@@ELFUTILS_1.0+0x44>
    8dcc:	mov	x19, x0
    8dd0:	ldr	x0, [x0]
    8dd4:	cbz	x0, 8e18 <elf_rawfile@@ELFUTILS_1.0+0x60>
    8dd8:	cbz	x20, 8de4 <elf_rawfile@@ELFUTILS_1.0+0x2c>
    8ddc:	ldr	x0, [x19, #48]
    8de0:	str	x0, [x20]
    8de4:	ldr	x0, [x19]
    8de8:	ldr	x1, [x19, #40]
    8dec:	add	x0, x0, x1
    8df0:	ldp	x19, x20, [sp, #16]
    8df4:	ldp	x29, x30, [sp], #32
    8df8:	ret
    8dfc:	mov	w0, #0x4                   	// #4
    8e00:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8e04:	mov	x0, x20
    8e08:	cbz	x20, 8df0 <elf_rawfile@@ELFUTILS_1.0+0x38>
    8e0c:	str	xzr, [x20]
    8e10:	mov	x0, #0x0                   	// #0
    8e14:	b	8df0 <elf_rawfile@@ELFUTILS_1.0+0x38>
    8e18:	mov	x0, x19
    8e1c:	bl	8f54 <elf_rawfile@@ELFUTILS_1.0+0x19c>
    8e20:	cbnz	x0, 8dd8 <elf_rawfile@@ELFUTILS_1.0+0x20>
    8e24:	b	8e04 <elf_rawfile@@ELFUTILS_1.0+0x4c>
    8e28:	ldr	w1, [x0, #24]
    8e2c:	cmp	w1, #0x1
    8e30:	b.eq	8e38 <elf_rawfile@@ELFUTILS_1.0+0x80>  // b.none
    8e34:	ret
    8e38:	stp	x29, x30, [sp, #-32]!
    8e3c:	mov	x29, sp
    8e40:	str	x19, [sp, #16]
    8e44:	ldr	x19, [x0, #72]
    8e48:	cbnz	x19, 8e68 <elf_rawfile@@ELFUTILS_1.0+0xb0>
    8e4c:	ldr	x19, [sp, #16]
    8e50:	ldp	x29, x30, [sp], #32
    8e54:	ret
    8e58:	mov	x0, x19
    8e5c:	bl	8e28 <elf_rawfile@@ELFUTILS_1.0+0x70>
    8e60:	ldr	x19, [x19, #16]
    8e64:	cbz	x19, 8e4c <elf_rawfile@@ELFUTILS_1.0+0x94>
    8e68:	ldr	w0, [x19, #60]
    8e6c:	cbz	w0, 8e60 <elf_rawfile@@ELFUTILS_1.0+0xa8>
    8e70:	b	8e58 <elf_rawfile@@ELFUTILS_1.0+0xa0>
    8e74:	ldr	w1, [x0, #24]
    8e78:	cmp	w1, #0x1
    8e7c:	b.eq	8e84 <elf_rawfile@@ELFUTILS_1.0+0xcc>  // b.none
    8e80:	ret
    8e84:	stp	x29, x30, [sp, #-32]!
    8e88:	mov	x29, sp
    8e8c:	str	x19, [sp, #16]
    8e90:	ldr	x19, [x0, #72]
    8e94:	cbnz	x19, 8eb4 <elf_rawfile@@ELFUTILS_1.0+0xfc>
    8e98:	ldr	x19, [sp, #16]
    8e9c:	ldp	x29, x30, [sp], #32
    8ea0:	ret
    8ea4:	mov	x0, x19
    8ea8:	bl	8e74 <elf_rawfile@@ELFUTILS_1.0+0xbc>
    8eac:	ldr	x19, [x19, #16]
    8eb0:	cbz	x19, 8e98 <elf_rawfile@@ELFUTILS_1.0+0xe0>
    8eb4:	ldr	w0, [x19, #60]
    8eb8:	cbz	w0, 8eac <elf_rawfile@@ELFUTILS_1.0+0xf4>
    8ebc:	b	8ea4 <elf_rawfile@@ELFUTILS_1.0+0xec>
    8ec0:	stp	x29, x30, [sp, #-48]!
    8ec4:	mov	x29, sp
    8ec8:	stp	x19, x20, [sp, #16]
    8ecc:	mov	x20, x0
    8ed0:	ldr	w0, [x0, #24]
    8ed4:	cmp	w0, #0x1
    8ed8:	b.eq	8ee8 <elf_rawfile@@ELFUTILS_1.0+0x130>  // b.none
    8edc:	ldp	x19, x20, [sp, #16]
    8ee0:	ldp	x29, x30, [sp], #48
    8ee4:	ret
    8ee8:	str	x21, [sp, #32]
    8eec:	mov	x21, x1
    8ef0:	ldr	x19, [x20, #72]
    8ef4:	cbnz	x19, 8f14 <elf_rawfile@@ELFUTILS_1.0+0x15c>
    8ef8:	ldr	x21, [sp, #32]
    8efc:	b	8edc <elf_rawfile@@ELFUTILS_1.0+0x124>
    8f00:	mov	x1, x21
    8f04:	mov	x0, x19
    8f08:	bl	8ec0 <elf_rawfile@@ELFUTILS_1.0+0x108>
    8f0c:	ldr	x19, [x19, #16]
    8f10:	cbz	x19, 8f4c <elf_rawfile@@ELFUTILS_1.0+0x194>
    8f14:	ldr	x0, [x19]
    8f18:	cbnz	x0, 8f0c <elf_rawfile@@ELFUTILS_1.0+0x154>
    8f1c:	ldr	x0, [x20]
    8f20:	str	x0, [x19]
    8f24:	ldr	x0, [x19, #40]
    8f28:	sub	x0, x0, x21
    8f2c:	str	x0, [x19, #40]
    8f30:	ldr	w0, [x19, #24]
    8f34:	cmp	w0, #0x1
    8f38:	b.ne	8f00 <elf_rawfile@@ELFUTILS_1.0+0x148>  // b.any
    8f3c:	ldr	x0, [x19, #112]
    8f40:	sub	x0, x0, x21
    8f44:	str	x0, [x19, #112]
    8f48:	b	8f00 <elf_rawfile@@ELFUTILS_1.0+0x148>
    8f4c:	ldr	x21, [sp, #32]
    8f50:	b	8edc <elf_rawfile@@ELFUTILS_1.0+0x124>
    8f54:	stp	x29, x30, [sp, #-208]!
    8f58:	mov	x29, sp
    8f5c:	stp	x19, x20, [sp, #16]
    8f60:	stp	x21, x22, [sp, #32]
    8f64:	mov	x19, x0
    8f68:	ldr	x22, [x0]
    8f6c:	cbz	x22, 8f88 <elf_rawfile@@ELFUTILS_1.0+0x1d0>
    8f70:	ldr	x22, [x19]
    8f74:	mov	x0, x22
    8f78:	ldp	x19, x20, [sp, #16]
    8f7c:	ldp	x21, x22, [sp, #32]
    8f80:	ldp	x29, x30, [sp], #208
    8f84:	ret
    8f88:	ldr	w20, [x0, #36]
    8f8c:	cmn	w20, #0x1
    8f90:	b.eq	8fd0 <elf_rawfile@@ELFUTILS_1.0+0x218>  // b.none
    8f94:	bl	8e28 <elf_rawfile@@ELFUTILS_1.0+0x70>
    8f98:	ldr	x0, [x19, #48]
    8f9c:	cmn	x0, #0x1
    8fa0:	b.eq	8fdc <elf_rawfile@@ELFUTILS_1.0+0x224>  // b.none
    8fa4:	stp	x23, x24, [sp, #48]
    8fa8:	ldr	x23, [x19, #48]
    8fac:	mov	x0, x23
    8fb0:	bl	3100 <malloc@plt>
    8fb4:	mov	x22, x0
    8fb8:	cbz	x0, 90c8 <elf_rawfile@@ELFUTILS_1.0+0x310>
    8fbc:	str	x25, [sp, #64]
    8fc0:	ldr	w25, [x19, #36]
    8fc4:	ldr	x24, [x19, #40]
    8fc8:	mov	x20, #0x0                   	// #0
    8fcc:	b	9014 <elf_rawfile@@ELFUTILS_1.0+0x25c>
    8fd0:	mov	w0, #0x4                   	// #4
    8fd4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    8fd8:	b	8f74 <elf_rawfile@@ELFUTILS_1.0+0x1bc>
    8fdc:	add	x2, sp, #0x50
    8fe0:	mov	w1, w20
    8fe4:	mov	w0, #0x0                   	// #0
    8fe8:	bl	3340 <__fxstat@plt>
    8fec:	tbnz	w0, #31, 90a0 <elf_rawfile@@ELFUTILS_1.0+0x2e8>
    8ff0:	stp	x23, x24, [sp, #48]
    8ff4:	ldr	x0, [sp, #128]
    8ff8:	str	x0, [x19, #48]
    8ffc:	b	8fa8 <elf_rawfile@@ELFUTILS_1.0+0x1f0>
    9000:	cmp	x0, #0x0
    9004:	b.le	9044 <elf_rawfile@@ELFUTILS_1.0+0x28c>
    9008:	add	x20, x20, x0
    900c:	cmp	x23, x20
    9010:	b.ls	904c <elf_rawfile@@ELFUTILS_1.0+0x294>  // b.plast
    9014:	add	x3, x24, x20
    9018:	sub	x2, x23, x20
    901c:	add	x1, x22, x20
    9020:	mov	w0, w25
    9024:	bl	32a0 <pread@plt>
    9028:	mov	x21, x0
    902c:	cmn	x0, #0x1
    9030:	b.ne	9000 <elf_rawfile@@ELFUTILS_1.0+0x248>  // b.any
    9034:	bl	3390 <__errno_location@plt>
    9038:	ldr	w0, [x0]
    903c:	cmp	w0, #0x4
    9040:	b.eq	9014 <elf_rawfile@@ELFUTILS_1.0+0x25c>  // b.none
    9044:	cmp	x21, #0x0
    9048:	csel	x20, x20, x21, ge  // ge = tcont
    904c:	ldr	x0, [x19, #48]
    9050:	cmp	x0, x20
    9054:	b.ne	9098 <elf_rawfile@@ELFUTILS_1.0+0x2e0>  // b.any
    9058:	str	x22, [x19]
    905c:	ldr	w0, [x19, #56]
    9060:	orr	w0, w0, #0x80
    9064:	str	w0, [x19, #56]
    9068:	ldr	x1, [x19, #40]
    906c:	mov	x0, x19
    9070:	bl	8ec0 <elf_rawfile@@ELFUTILS_1.0+0x108>
    9074:	ldr	w0, [x19, #24]
    9078:	cmp	w0, #0x1
    907c:	b.eq	90b4 <elf_rawfile@@ELFUTILS_1.0+0x2fc>  // b.none
    9080:	str	xzr, [x19, #40]
    9084:	ldp	x23, x24, [sp, #48]
    9088:	ldr	x25, [sp, #64]
    908c:	mov	x0, x19
    9090:	bl	8e74 <elf_rawfile@@ELFUTILS_1.0+0xbc>
    9094:	b	8f70 <elf_rawfile@@ELFUTILS_1.0+0x1b8>
    9098:	ldp	x23, x24, [sp, #48]
    909c:	ldr	x25, [sp, #64]
    90a0:	mov	w0, #0x13                  	// #19
    90a4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    90a8:	mov	x0, x22
    90ac:	bl	3250 <free@plt>
    90b0:	b	908c <elf_rawfile@@ELFUTILS_1.0+0x2d4>
    90b4:	ldr	x0, [x19, #112]
    90b8:	ldr	x1, [x19, #40]
    90bc:	sub	x0, x0, x1
    90c0:	str	x0, [x19, #112]
    90c4:	b	9080 <elf_rawfile@@ELFUTILS_1.0+0x2c8>
    90c8:	mov	w0, #0x8                   	// #8
    90cc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    90d0:	ldp	x23, x24, [sp, #48]
    90d4:	b	908c <elf_rawfile@@ELFUTILS_1.0+0x2d4>

00000000000090d8 <elf_cntl@@ELFUTILS_1.0>:
    90d8:	stp	x29, x30, [sp, #-32]!
    90dc:	mov	x29, sp
    90e0:	stp	x19, x20, [sp, #16]
    90e4:	cbz	x0, 915c <elf_cntl@@ELFUTILS_1.0+0x84>
    90e8:	mov	x19, x0
    90ec:	ldr	w20, [x0, #36]
    90f0:	cmn	w20, #0x1
    90f4:	b.eq	912c <elf_cntl@@ELFUTILS_1.0+0x54>  // b.none
    90f8:	cmp	w1, #0x6
    90fc:	b.eq	9110 <elf_cntl@@ELFUTILS_1.0+0x38>  // b.none
    9100:	cmp	w1, #0x7
    9104:	b.ne	914c <elf_cntl@@ELFUTILS_1.0+0x74>  // b.any
    9108:	ldr	x0, [x0]
    910c:	cbz	x0, 9138 <elf_cntl@@ELFUTILS_1.0+0x60>
    9110:	mov	w0, #0xffffffff            	// #-1
    9114:	str	w0, [x19, #36]
    9118:	mov	w20, #0x0                   	// #0
    911c:	mov	w0, w20
    9120:	ldp	x19, x20, [sp, #16]
    9124:	ldp	x29, x30, [sp], #32
    9128:	ret
    912c:	mov	w0, #0x4                   	// #4
    9130:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9134:	b	911c <elf_cntl@@ELFUTILS_1.0+0x44>
    9138:	mov	x0, x19
    913c:	bl	8f54 <elf_rawfile@@ELFUTILS_1.0+0x19c>
    9140:	cbnz	x0, 9110 <elf_cntl@@ELFUTILS_1.0+0x38>
    9144:	mov	w20, #0xffffffff            	// #-1
    9148:	b	911c <elf_cntl@@ELFUTILS_1.0+0x44>
    914c:	mov	w0, #0xd                   	// #13
    9150:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9154:	mov	w20, #0xffffffff            	// #-1
    9158:	b	911c <elf_cntl@@ELFUTILS_1.0+0x44>
    915c:	mov	w20, #0xffffffff            	// #-1
    9160:	b	911c <elf_cntl@@ELFUTILS_1.0+0x44>

0000000000009164 <elf_getscn@@ELFUTILS_1.0>:
    9164:	stp	x29, x30, [sp, #-48]!
    9168:	mov	x29, sp
    916c:	stp	x19, x20, [sp, #16]
    9170:	stp	x21, x22, [sp, #32]
    9174:	mov	x21, x0
    9178:	cbz	x0, 9294 <elf_getscn@@ELFUTILS_1.0+0x130>
    917c:	mov	x20, x1
    9180:	ldr	w0, [x0, #24]
    9184:	cmp	w0, #0x3
    9188:	b.ne	921c <elf_getscn@@ELFUTILS_1.0+0xb8>  // b.any
    918c:	add	x19, x21, #0xc8
    9190:	cbnz	x1, 91e8 <elf_getscn@@ELFUTILS_1.0+0x84>
    9194:	ldr	w0, [x21, #200]
    9198:	cbnz	w0, 91e8 <elf_getscn@@ELFUTILS_1.0+0x84>
    919c:	ldr	w0, [x21, #204]
    91a0:	cbz	w0, 91e8 <elf_getscn@@ELFUTILS_1.0+0x84>
    91a4:	ldr	w0, [x21, #32]
    91a8:	cmp	w0, #0x1
    91ac:	b.eq	922c <elf_getscn@@ELFUTILS_1.0+0xc8>  // b.none
    91b0:	mov	x1, #0x40                  	// #64
    91b4:	mov	x0, #0x1                   	// #1
    91b8:	bl	3180 <calloc@plt>
    91bc:	mov	x22, x0
    91c0:	str	x0, [x21, #360]
    91c4:	cbz	x0, 9254 <elf_getscn@@ELFUTILS_1.0+0xf0>
    91c8:	str	x21, [x21, #352]
    91cc:	mov	w1, #0x81                  	// #129
    91d0:	str	w1, [x21, #368]
    91d4:	ldr	x1, [x21, #96]
    91d8:	str	x1, [x21, #416]
    91dc:	mov	w1, #0x1                   	// #1
    91e0:	str	w1, [x21, #336]
    91e4:	str	w1, [x21, #200]
    91e8:	ldr	w0, [x19, #4]
    91ec:	cmp	x0, x20
    91f0:	b.hi	9264 <elf_getscn@@ELFUTILS_1.0+0x100>  // b.pmore
    91f4:	sub	x20, x20, x0
    91f8:	ldr	x19, [x19, #8]
    91fc:	cbnz	x19, 91e8 <elf_getscn@@ELFUTILS_1.0+0x84>
    9200:	mov	w0, #0x16                  	// #22
    9204:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9208:	mov	x0, x19
    920c:	ldp	x19, x20, [sp, #16]
    9210:	ldp	x21, x22, [sp, #32]
    9214:	ldp	x29, x30, [sp], #48
    9218:	ret
    921c:	mov	w0, #0x4                   	// #4
    9220:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9224:	mov	x19, #0x0                   	// #0
    9228:	b	9208 <elf_getscn@@ELFUTILS_1.0+0xa4>
    922c:	mov	x1, #0x28                  	// #40
    9230:	mov	x0, #0x1                   	// #1
    9234:	bl	3180 <calloc@plt>
    9238:	mov	x22, x0
    923c:	str	x0, [x21, #360]
    9240:	cbnz	x0, 91c8 <elf_getscn@@ELFUTILS_1.0+0x64>
    9244:	mov	w0, #0x8                   	// #8
    9248:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    924c:	mov	x19, x22
    9250:	b	9208 <elf_getscn@@ELFUTILS_1.0+0xa4>
    9254:	mov	w0, #0x8                   	// #8
    9258:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    925c:	mov	x19, x22
    9260:	b	9208 <elf_getscn@@ELFUTILS_1.0+0xa4>
    9264:	ldr	w0, [x19]
    9268:	cmp	x0, x20
    926c:	b.ls	9284 <elf_getscn@@ELFUTILS_1.0+0x120>  // b.plast
    9270:	add	x0, x20, x20, lsl #1
    9274:	add	x20, x20, x0, lsl #2
    9278:	add	x19, x19, x20, lsl #4
    927c:	add	x19, x19, #0x10
    9280:	b	9208 <elf_getscn@@ELFUTILS_1.0+0xa4>
    9284:	mov	w0, #0x16                  	// #22
    9288:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    928c:	mov	x19, #0x0                   	// #0
    9290:	b	9208 <elf_getscn@@ELFUTILS_1.0+0xa4>
    9294:	mov	x19, x0
    9298:	b	9208 <elf_getscn@@ELFUTILS_1.0+0xa4>

000000000000929c <elf_nextscn@@ELFUTILS_1.0>:
    929c:	cbz	x0, 932c <elf_nextscn@@ELFUTILS_1.0+0x90>
    92a0:	cbz	x1, 931c <elf_nextscn@@ELFUTILS_1.0+0x80>
    92a4:	ldr	x2, [x1, #200]
    92a8:	add	x0, x1, #0xd0
    92ac:	ldr	w3, [x2]
    92b0:	add	x1, x3, x3, lsl #1
    92b4:	add	x1, x3, x1, lsl #2
    92b8:	add	x1, x2, x1, lsl #4
    92bc:	add	x1, x1, #0x10
    92c0:	cmp	x0, x1
    92c4:	b.cc	932c <elf_nextscn@@ELFUTILS_1.0+0x90>  // b.lo, b.ul, b.last
    92c8:	ldr	w3, [x2, #4]
    92cc:	add	x1, x3, x3, lsl #1
    92d0:	add	x1, x3, x1, lsl #2
    92d4:	add	x1, x2, x1, lsl #4
    92d8:	add	x1, x1, #0x10
    92dc:	cmp	x0, x1
    92e0:	b.ne	9328 <elf_nextscn@@ELFUTILS_1.0+0x8c>  // b.any
    92e4:	ldr	x0, [x2, #8]
    92e8:	cbz	x0, 932c <elf_nextscn@@ELFUTILS_1.0+0x90>
    92ec:	ldr	w1, [x0], #16
    92f0:	cbnz	w1, 932c <elf_nextscn@@ELFUTILS_1.0+0x90>
    92f4:	stp	x29, x30, [sp, #-16]!
    92f8:	mov	x29, sp
    92fc:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9300:	add	x3, x3, #0x850
    9304:	mov	w2, #0x4b                  	// #75
    9308:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    930c:	add	x1, x1, #0x830
    9310:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9314:	add	x0, x0, #0x840
    9318:	bl	3380 <__assert_fail@plt>
    931c:	add	x2, x0, #0xc8
    9320:	add	x1, x0, #0xd8
    9324:	b	92a8 <elf_nextscn@@ELFUTILS_1.0+0xc>
    9328:	mov	x0, #0x0                   	// #0
    932c:	ret

0000000000009330 <elf_ndxscn@@ELFUTILS_1.0>:
    9330:	cbz	x0, 933c <elf_ndxscn@@ELFUTILS_1.0+0xc>
    9334:	ldr	x0, [x0, #128]
    9338:	ret
    933c:	mov	x0, #0x0                   	// #0
    9340:	b	9338 <elf_ndxscn@@ELFUTILS_1.0+0x8>

0000000000009344 <elf_newscn@@ELFUTILS_1.0>:
    9344:	stp	x29, x30, [sp, #-96]!
    9348:	mov	x29, sp
    934c:	stp	x19, x20, [sp, #16]
    9350:	mov	x20, x0
    9354:	cbz	x0, 957c <elf_newscn@@ELFUTILS_1.0+0x238>
    9358:	stp	x21, x22, [sp, #32]
    935c:	stp	x23, x24, [sp, #48]
    9360:	stp	x25, x26, [sp, #64]
    9364:	mov	x19, #0x0                   	// #0
    9368:	mov	x21, #0x1                   	// #1
    936c:	mov	w23, #0x0                   	// #0
    9370:	add	x25, x0, #0xc8
    9374:	mov	w22, #0x1                   	// #1
    9378:	mov	x24, #0x40                  	// #64
    937c:	ldr	x26, [x20, #96]
    9380:	ldr	w0, [x26]
    9384:	ldr	w1, [x26, #4]
    9388:	cmp	w0, w1
    938c:	b.cs	9420 <elf_newscn@@ELFUTILS_1.0+0xdc>  // b.hs, b.nlast
    9390:	mov	w1, w0
    9394:	add	x19, x1, w0, uxtw #1
    9398:	add	x19, x1, x19, lsl #2
    939c:	add	x19, x26, x19, lsl #4
    93a0:	add	x19, x19, #0x10
    93a4:	add	w1, w0, #0x1
    93a8:	str	w1, [x26]
    93ac:	cmp	w1, #0x1
    93b0:	b.eq	93e8 <elf_newscn@@ELFUTILS_1.0+0xa4>  // b.none
    93b4:	ldr	x1, [x20, #96]
    93b8:	ldr	w1, [x1]
    93bc:	cmp	w1, #0x1
    93c0:	b.ls	93fc <elf_newscn@@ELFUTILS_1.0+0xb8>  // b.plast
    93c4:	mov	w1, w0
    93c8:	add	x0, x1, w0, uxtw #1
    93cc:	add	x0, x1, x0, lsl #2
    93d0:	add	x0, x26, x0, lsl #4
    93d4:	ldur	x1, [x19, #-80]
    93d8:	add	x1, x1, #0x1
    93dc:	str	x1, [x0, #144]
    93e0:	mov	w26, w23
    93e4:	b	9498 <elf_newscn@@ELFUTILS_1.0+0x154>
    93e8:	ldr	x1, [x20, #96]
    93ec:	cmp	x1, x25
    93f0:	b.ne	93b4 <elf_newscn@@ELFUTILS_1.0+0x70>  // b.any
    93f4:	mov	w26, w22
    93f8:	b	9498 <elf_newscn@@ELFUTILS_1.0+0x154>
    93fc:	str	x27, [sp, #80]
    9400:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9404:	add	x3, x3, #0x8b8
    9408:	mov	w2, #0x4e                  	// #78
    940c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9410:	add	x1, x1, #0x860
    9414:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9418:	add	x0, x0, #0x870
    941c:	bl	3380 <__assert_fail@plt>
    9420:	str	x27, [sp, #80]
    9424:	ldr	w27, [x20, #112]
    9428:	cbz	w27, 94fc <elf_newscn@@ELFUTILS_1.0+0x1b8>
    942c:	lsl	w27, w27, #1
    9430:	str	w27, [x20, #112]
    9434:	mov	w1, w27
    9438:	add	x0, x1, x1, lsl #1
    943c:	add	x0, x1, x0, lsl #2
    9440:	lsl	x0, x0, #4
    9444:	mov	x1, x21
    9448:	add	x0, x0, #0x10
    944c:	bl	3180 <calloc@plt>
    9450:	cbz	x0, 951c <elf_newscn@@ELFUTILS_1.0+0x1d8>
    9454:	mov	x19, x0
    9458:	ldr	w1, [x19], #16
    945c:	add	w1, w1, #0x1
    9460:	str	w1, [x0]
    9464:	str	w27, [x0, #4]
    9468:	ldr	w1, [x26, #4]
    946c:	sub	w2, w1, #0x1
    9470:	add	x1, x2, x2, lsl #1
    9474:	add	x1, x2, x1, lsl #2
    9478:	add	x1, x26, x1, lsl #4
    947c:	ldr	x1, [x1, #144]
    9480:	add	x1, x1, #0x1
    9484:	str	x1, [x0, #144]
    9488:	str	x0, [x26, #8]
    948c:	str	x0, [x20, #96]
    9490:	mov	w26, w23
    9494:	ldr	x27, [sp, #80]
    9498:	ldr	w0, [x20, #32]
    949c:	cmp	w0, #0x1
    94a0:	b.eq	9538 <elf_newscn@@ELFUTILS_1.0+0x1f4>  // b.none
    94a4:	mov	x1, x24
    94a8:	mov	x0, x21
    94ac:	bl	3180 <calloc@plt>
    94b0:	str	x0, [x19, #144]
    94b4:	cbz	x0, 9564 <elf_newscn@@ELFUTILS_1.0+0x220>
    94b8:	str	x20, [x19, #136]
    94bc:	mov	w0, #0x81                  	// #129
    94c0:	str	w0, [x19, #152]
    94c4:	ldr	x0, [x20, #96]
    94c8:	str	x0, [x19, #200]
    94cc:	str	w22, [x19, #120]
    94d0:	cbnz	w26, 937c <elf_newscn@@ELFUTILS_1.0+0x38>
    94d4:	ldr	w0, [x19, #156]
    94d8:	orr	w0, w0, #0x1
    94dc:	str	w0, [x19, #156]
    94e0:	ldp	x21, x22, [sp, #32]
    94e4:	ldp	x23, x24, [sp, #48]
    94e8:	ldp	x25, x26, [sp, #64]
    94ec:	mov	x0, x19
    94f0:	ldp	x19, x20, [sp, #16]
    94f4:	ldp	x29, x30, [sp], #96
    94f8:	ret
    94fc:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9500:	add	x3, x3, #0x8b8
    9504:	mov	w2, #0x57                  	// #87
    9508:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    950c:	add	x1, x1, #0x860
    9510:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9514:	add	x0, x0, #0x898
    9518:	bl	3380 <__assert_fail@plt>
    951c:	mov	w0, #0x8                   	// #8
    9520:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9524:	ldp	x21, x22, [sp, #32]
    9528:	ldp	x23, x24, [sp, #48]
    952c:	ldp	x25, x26, [sp, #64]
    9530:	ldr	x27, [sp, #80]
    9534:	b	94ec <elf_newscn@@ELFUTILS_1.0+0x1a8>
    9538:	mov	x1, #0x28                  	// #40
    953c:	mov	x0, x21
    9540:	bl	3180 <calloc@plt>
    9544:	str	x0, [x19, #144]
    9548:	cbnz	x0, 94b8 <elf_newscn@@ELFUTILS_1.0+0x174>
    954c:	mov	w0, #0x8                   	// #8
    9550:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9554:	ldp	x21, x22, [sp, #32]
    9558:	ldp	x23, x24, [sp, #48]
    955c:	ldp	x25, x26, [sp, #64]
    9560:	b	94ec <elf_newscn@@ELFUTILS_1.0+0x1a8>
    9564:	mov	w0, #0x8                   	// #8
    9568:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    956c:	ldp	x21, x22, [sp, #32]
    9570:	ldp	x23, x24, [sp, #48]
    9574:	ldp	x25, x26, [sp, #64]
    9578:	b	94ec <elf_newscn@@ELFUTILS_1.0+0x1a8>
    957c:	mov	x19, x0
    9580:	b	94ec <elf_newscn@@ELFUTILS_1.0+0x1a8>
    9584:	cbz	x0, 95d4 <elf_newscn@@ELFUTILS_1.0+0x290>
    9588:	stp	x29, x30, [sp, #-16]!
    958c:	mov	x29, sp
    9590:	ldr	x0, [x0, #136]
    9594:	ldr	x1, [x0, #72]
    9598:	cbz	x1, 95b4 <elf_newscn@@ELFUTILS_1.0+0x270>
    959c:	ldr	w1, [x0, #32]
    95a0:	mov	w0, #0x1                   	// #1
    95a4:	cmp	w1, w0
    95a8:	b.ne	95c4 <elf_newscn@@ELFUTILS_1.0+0x280>  // b.any
    95ac:	ldp	x29, x30, [sp], #16
    95b0:	ret
    95b4:	mov	w0, #0x1a                  	// #26
    95b8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    95bc:	mov	w0, #0x0                   	// #0
    95c0:	b	95ac <elf_newscn@@ELFUTILS_1.0+0x268>
    95c4:	mov	w0, #0x15                  	// #21
    95c8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    95cc:	mov	w0, #0x0                   	// #0
    95d0:	b	95ac <elf_newscn@@ELFUTILS_1.0+0x268>
    95d4:	mov	w0, #0x0                   	// #0
    95d8:	ret
    95dc:	stp	x29, x30, [sp, #-128]!
    95e0:	mov	x29, sp
    95e4:	stp	x21, x22, [sp, #32]
    95e8:	ldr	x21, [x0, #144]
    95ec:	cbz	x21, 9600 <elf_newscn@@ELFUTILS_1.0+0x2bc>
    95f0:	mov	x0, x21
    95f4:	ldp	x21, x22, [sp, #32]
    95f8:	ldp	x29, x30, [sp], #128
    95fc:	ret
    9600:	stp	x19, x20, [sp, #16]
    9604:	stp	x27, x28, [sp, #80]
    9608:	mov	x20, x0
    960c:	ldr	x22, [x0, #136]
    9610:	ldr	x27, [x22, #72]
    9614:	add	x1, sp, #0x78
    9618:	mov	x0, x22
    961c:	bl	11010 <elf_getphdrnum@@ELFUTILS_1.6+0x3c>
    9620:	cbnz	w0, 9a40 <elf_newscn@@ELFUTILS_1.0+0x6fc>
    9624:	stp	x23, x24, [sp, #48]
    9628:	ldr	x23, [sp, #120]
    962c:	mov	x0, #0x6666666666666666    	// #7378697629483820646
    9630:	movk	x0, #0x666, lsl #48
    9634:	cmp	x23, x0
    9638:	b.ls	964c <elf_newscn@@ELFUTILS_1.0+0x308>  // b.plast
    963c:	ldp	x19, x20, [sp, #16]
    9640:	ldp	x23, x24, [sp, #48]
    9644:	ldp	x27, x28, [sp, #80]
    9648:	b	95f0 <elf_newscn@@ELFUTILS_1.0+0x2ac>
    964c:	stp	x25, x26, [sp, #64]
    9650:	add	x25, x23, x23, lsl #2
    9654:	lsl	x25, x25, #3
    9658:	mov	x26, x25
    965c:	mov	x0, x25
    9660:	bl	3100 <malloc@plt>
    9664:	mov	x19, x0
    9668:	str	x0, [x22, #80]
    966c:	cbz	x0, 96e4 <elf_newscn@@ELFUTILS_1.0+0x3a0>
    9670:	mov	w0, #0x1                   	// #1
    9674:	str	w0, [x22, #124]
    9678:	ldr	x24, [x22]
    967c:	cbz	x24, 98d8 <elf_newscn@@ELFUTILS_1.0+0x594>
    9680:	ldr	w0, [x27, #32]
    9684:	ldr	x1, [x22, #48]
    9688:	cmp	x0, x1
    968c:	b.cs	9704 <elf_newscn@@ELFUTILS_1.0+0x3c0>  // b.hs, b.nlast
    9690:	sub	x1, x1, x0
    9694:	cmp	x1, x25
    9698:	b.cc	9704 <elf_newscn@@ELFUTILS_1.0+0x3c0>  // b.lo, b.ul, b.last
    969c:	ldr	x1, [x22, #40]
    96a0:	add	x0, x0, x1
    96a4:	add	x24, x24, x0
    96a8:	ldr	w0, [x22, #56]
    96ac:	tbnz	w0, #7, 9750 <elf_newscn@@ELFUTILS_1.0+0x40c>
    96b0:	ldrb	w0, [x27, #5]
    96b4:	cmp	w0, #0x1
    96b8:	b.ne	975c <elf_newscn@@ELFUTILS_1.0+0x418>  // b.any
    96bc:	ldr	w0, [x22, #28]
    96c0:	cmp	w0, #0x8
    96c4:	b.eq	96d0 <elf_newscn@@ELFUTILS_1.0+0x38c>  // b.none
    96c8:	tst	x24, #0x3
    96cc:	b.eq	9730 <elf_newscn@@ELFUTILS_1.0+0x3ec>  // b.none
    96d0:	mov	x2, x25
    96d4:	mov	x1, x24
    96d8:	mov	x0, x19
    96dc:	bl	3060 <memcpy@plt>
    96e0:	b	9894 <elf_newscn@@ELFUTILS_1.0+0x550>
    96e4:	mov	w0, #0x8                   	// #8
    96e8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    96ec:	mov	x21, x19
    96f0:	ldp	x19, x20, [sp, #16]
    96f4:	ldp	x23, x24, [sp, #48]
    96f8:	ldp	x25, x26, [sp, #64]
    96fc:	ldp	x27, x28, [sp, #80]
    9700:	b	95f0 <elf_newscn@@ELFUTILS_1.0+0x2ac>
    9704:	mov	w0, #0x20                  	// #32
    9708:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    970c:	mov	x0, x19
    9710:	bl	3250 <free@plt>
    9714:	str	xzr, [x22, #80]
    9718:	str	wzr, [x22, #124]
    971c:	ldp	x19, x20, [sp, #16]
    9720:	ldp	x23, x24, [sp, #48]
    9724:	ldp	x25, x26, [sp, #64]
    9728:	ldp	x27, x28, [sp, #80]
    972c:	b	95f0 <elf_newscn@@ELFUTILS_1.0+0x2ac>
    9730:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9734:	add	x3, x3, #0x9b8
    9738:	mov	w2, #0x64                  	// #100
    973c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9740:	add	x1, x1, #0x8c8
    9744:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9748:	add	x0, x0, #0x8d8
    974c:	bl	3380 <__assert_fail@plt>
    9750:	ldrb	w0, [x27, #5]
    9754:	cmp	w0, #0x1
    9758:	b.eq	96d0 <elf_newscn@@ELFUTILS_1.0+0x38c>  // b.none
    975c:	ands	x26, x24, #0x3
    9760:	b.ne	977c <elf_newscn@@ELFUTILS_1.0+0x438>  // b.any
    9764:	cbz	x23, 98bc <elf_newscn@@ELFUTILS_1.0+0x578>
    9768:	mov	x0, x24
    976c:	add	x4, x22, #0x154
    9770:	mov	x5, #0x0                   	// #0
    9774:	mov	w6, #0xffffffff            	// #-1
    9778:	b	97f8 <elf_newscn@@ELFUTILS_1.0+0x4b4>
    977c:	mov	x0, x25
    9780:	bl	3100 <malloc@plt>
    9784:	mov	x21, x0
    9788:	cbz	x0, 97a4 <elf_newscn@@ELFUTILS_1.0+0x460>
    978c:	mov	x2, x25
    9790:	mov	x1, x24
    9794:	bl	3060 <memcpy@plt>
    9798:	cbz	x23, 9888 <elf_newscn@@ELFUTILS_1.0+0x544>
    979c:	mov	x24, x21
    97a0:	b	9768 <elf_newscn@@ELFUTILS_1.0+0x424>
    97a4:	mov	w0, #0x8                   	// #8
    97a8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    97ac:	ldp	x19, x20, [sp, #16]
    97b0:	ldp	x23, x24, [sp, #48]
    97b4:	ldp	x25, x26, [sp, #64]
    97b8:	ldp	x27, x28, [sp, #80]
    97bc:	b	95f0 <elf_newscn@@ELFUTILS_1.0+0x2ac>
    97c0:	cmp	x23, w1, uxtw
    97c4:	b.ls	9878 <elf_newscn@@ELFUTILS_1.0+0x534>  // b.plast
    97c8:	mov	w2, w1
    97cc:	add	x1, x2, w1, uxtw #1
    97d0:	add	x1, x2, x1, lsl #2
    97d4:	add	x1, x22, x1, lsl #4
    97d8:	str	w5, [x1, #340]
    97dc:	b	9878 <elf_newscn@@ELFUTILS_1.0+0x534>
    97e0:	add	x5, x5, #0x1
    97e4:	add	x0, x0, #0x28
    97e8:	add	x19, x19, #0x28
    97ec:	add	x4, x4, #0xd0
    97f0:	cmp	x23, x5
    97f4:	b.eq	9a34 <elf_newscn@@ELFUTILS_1.0+0x6f0>  // b.none
    97f8:	ldr	w1, [x0]
    97fc:	rev	w1, w1
    9800:	str	w1, [x19]
    9804:	ldr	w2, [x0, #4]
    9808:	rev	w2, w2
    980c:	str	w2, [x19, #4]
    9810:	ldr	w1, [x0, #8]
    9814:	rev	w1, w1
    9818:	str	w1, [x19, #8]
    981c:	ldr	w1, [x0, #12]
    9820:	rev	w1, w1
    9824:	str	w1, [x19, #12]
    9828:	ldr	w1, [x0, #16]
    982c:	rev	w1, w1
    9830:	str	w1, [x19, #16]
    9834:	ldr	w1, [x0, #20]
    9838:	rev	w1, w1
    983c:	str	w1, [x19, #20]
    9840:	ldr	w1, [x0, #24]
    9844:	rev	w1, w1
    9848:	str	w1, [x19, #24]
    984c:	ldr	w3, [x0, #28]
    9850:	rev	w3, w3
    9854:	str	w3, [x19, #28]
    9858:	ldr	w3, [x0, #32]
    985c:	rev	w3, w3
    9860:	str	w3, [x19, #32]
    9864:	ldr	w3, [x0, #36]
    9868:	rev	w3, w3
    986c:	str	w3, [x19, #36]
    9870:	cmp	w2, #0x12
    9874:	b.eq	97c0 <elf_newscn@@ELFUTILS_1.0+0x47c>  // b.none
    9878:	ldr	w1, [x4]
    987c:	cbnz	w1, 97e0 <elf_newscn@@ELFUTILS_1.0+0x49c>
    9880:	str	w6, [x4]
    9884:	b	97e0 <elf_newscn@@ELFUTILS_1.0+0x49c>
    9888:	mov	x24, x21
    988c:	mov	x0, x24
    9890:	bl	3250 <free@plt>
    9894:	ldr	x2, [sp, #120]
    9898:	cbz	x2, 98bc <elf_newscn@@ELFUTILS_1.0+0x578>
    989c:	ldr	x1, [x22, #80]
    98a0:	add	x22, x22, #0x168
    98a4:	mov	x0, #0x0                   	// #0
    98a8:	str	x1, [x22], #208
    98ac:	add	x0, x0, #0x1
    98b0:	add	x1, x1, #0x28
    98b4:	cmp	x2, x0
    98b8:	b.hi	98a8 <elf_newscn@@ELFUTILS_1.0+0x564>  // b.pmore
    98bc:	ldr	x21, [x20, #144]
    98c0:	cbz	x21, 9a14 <elf_newscn@@ELFUTILS_1.0+0x6d0>
    98c4:	ldp	x19, x20, [sp, #16]
    98c8:	ldp	x23, x24, [sp, #48]
    98cc:	ldp	x25, x26, [sp, #64]
    98d0:	ldp	x27, x28, [sp, #80]
    98d4:	b	95f0 <elf_newscn@@ELFUTILS_1.0+0x2ac>
    98d8:	ldr	w0, [x22, #36]
    98dc:	str	w0, [sp, #108]
    98e0:	cmn	w0, #0x1
    98e4:	b.eq	9a08 <elf_newscn@@ELFUTILS_1.0+0x6c4>  // b.none
    98e8:	ldr	w28, [x27, #32]
    98ec:	ldr	x0, [x22, #40]
    98f0:	add	x28, x28, x0
    98f4:	mov	x23, #0x0                   	// #0
    98f8:	b	9910 <elf_newscn@@ELFUTILS_1.0+0x5cc>
    98fc:	cmp	x0, #0x0
    9900:	b.le	9940 <elf_newscn@@ELFUTILS_1.0+0x5fc>
    9904:	add	x23, x23, x0
    9908:	cmp	x26, x23
    990c:	b.ls	9948 <elf_newscn@@ELFUTILS_1.0+0x604>  // b.plast
    9910:	add	x3, x28, x23
    9914:	sub	x2, x26, x23
    9918:	add	x1, x19, x23
    991c:	ldr	w0, [sp, #108]
    9920:	bl	32a0 <pread@plt>
    9924:	mov	x24, x0
    9928:	cmn	x0, #0x1
    992c:	b.ne	98fc <elf_newscn@@ELFUTILS_1.0+0x5b8>  // b.any
    9930:	bl	3390 <__errno_location@plt>
    9934:	ldr	w0, [x0]
    9938:	cmp	w0, #0x4
    993c:	b.eq	9910 <elf_newscn@@ELFUTILS_1.0+0x5cc>  // b.none
    9940:	cmp	x24, #0x0
    9944:	csel	x23, x23, x24, ge  // ge = tcont
    9948:	cmp	x25, x23
    994c:	b.ne	99fc <elf_newscn@@ELFUTILS_1.0+0x6b8>  // b.any
    9950:	ldrb	w0, [x27, #5]
    9954:	cmp	w0, #0x1
    9958:	b.eq	9894 <elf_newscn@@ELFUTILS_1.0+0x550>  // b.none
    995c:	ldr	x1, [sp, #120]
    9960:	cbz	x1, 98bc <elf_newscn@@ELFUTILS_1.0+0x578>
    9964:	mov	x0, x19
    9968:	add	x1, x1, x1, lsl #2
    996c:	add	x19, x19, x1, lsl #3
    9970:	ldr	w1, [x0]
    9974:	rev	w1, w1
    9978:	str	w1, [x0]
    997c:	ldr	w1, [x0, #4]
    9980:	rev	w1, w1
    9984:	str	w1, [x0, #4]
    9988:	ldr	w1, [x0, #8]
    998c:	rev	w1, w1
    9990:	str	w1, [x0, #8]
    9994:	ldr	w1, [x0, #12]
    9998:	rev	w1, w1
    999c:	str	w1, [x0, #12]
    99a0:	ldr	w1, [x0, #16]
    99a4:	rev	w1, w1
    99a8:	str	w1, [x0, #16]
    99ac:	ldr	w1, [x0, #20]
    99b0:	rev	w1, w1
    99b4:	str	w1, [x0, #20]
    99b8:	ldr	w1, [x0, #24]
    99bc:	rev	w1, w1
    99c0:	str	w1, [x0, #24]
    99c4:	ldr	w1, [x0, #28]
    99c8:	rev	w1, w1
    99cc:	str	w1, [x0, #28]
    99d0:	ldr	w1, [x0, #32]
    99d4:	rev	w1, w1
    99d8:	str	w1, [x0, #32]
    99dc:	ldr	w1, [x0, #36]
    99e0:	rev	w1, w1
    99e4:	str	w1, [x0, #36]
    99e8:	add	x0, x0, #0x28
    99ec:	cmp	x0, x19
    99f0:	b.ne	9970 <elf_newscn@@ELFUTILS_1.0+0x62c>  // b.any
    99f4:	ldr	x2, [sp, #120]
    99f8:	b	989c <elf_newscn@@ELFUTILS_1.0+0x558>
    99fc:	mov	w0, #0x13                  	// #19
    9a00:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9a04:	b	970c <elf_newscn@@ELFUTILS_1.0+0x3c8>
    9a08:	mov	w0, #0x1b                  	// #27
    9a0c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9a10:	b	970c <elf_newscn@@ELFUTILS_1.0+0x3c8>
    9a14:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9a18:	add	x3, x3, #0x9b8
    9a1c:	mov	w2, #0xdd                  	// #221
    9a20:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9a24:	add	x1, x1, #0x8c8
    9a28:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9a2c:	add	x0, x0, #0x9a8
    9a30:	bl	3380 <__assert_fail@plt>
    9a34:	cbnz	x26, 988c <elf_newscn@@ELFUTILS_1.0+0x548>
    9a38:	ldr	x2, [sp, #120]
    9a3c:	b	989c <elf_newscn@@ELFUTILS_1.0+0x558>
    9a40:	ldp	x19, x20, [sp, #16]
    9a44:	ldp	x27, x28, [sp, #80]
    9a48:	b	95f0 <elf_newscn@@ELFUTILS_1.0+0x2ac>
    9a4c:	stp	x29, x30, [sp, #-32]!
    9a50:	mov	x29, sp
    9a54:	str	x19, [sp, #16]
    9a58:	mov	x19, x0
    9a5c:	bl	9584 <elf_newscn@@ELFUTILS_1.0+0x240>
    9a60:	and	w1, w0, #0xff
    9a64:	cbz	w1, 9a88 <elf_newscn@@ELFUTILS_1.0+0x744>
    9a68:	ldr	x0, [x19, #144]
    9a6c:	cbz	x0, 9a7c <elf_newscn@@ELFUTILS_1.0+0x738>
    9a70:	ldr	x19, [sp, #16]
    9a74:	ldp	x29, x30, [sp], #32
    9a78:	ret
    9a7c:	mov	x0, x19
    9a80:	bl	95dc <elf_newscn@@ELFUTILS_1.0+0x298>
    9a84:	b	9a70 <elf_newscn@@ELFUTILS_1.0+0x72c>
    9a88:	mov	x0, #0x0                   	// #0
    9a8c:	b	9a70 <elf_newscn@@ELFUTILS_1.0+0x72c>
    9a90:	stp	x29, x30, [sp, #-32]!
    9a94:	mov	x29, sp
    9a98:	str	x19, [sp, #16]
    9a9c:	mov	x19, x0
    9aa0:	bl	9584 <elf_newscn@@ELFUTILS_1.0+0x240>
    9aa4:	and	w1, w0, #0xff
    9aa8:	cbz	w1, 9acc <elf_newscn@@ELFUTILS_1.0+0x788>
    9aac:	ldr	x0, [x19, #144]
    9ab0:	cbz	x0, 9ac0 <elf_newscn@@ELFUTILS_1.0+0x77c>
    9ab4:	ldr	x19, [sp, #16]
    9ab8:	ldp	x29, x30, [sp], #32
    9abc:	ret
    9ac0:	mov	x0, x19
    9ac4:	bl	95dc <elf_newscn@@ELFUTILS_1.0+0x298>
    9ac8:	b	9ab4 <elf_newscn@@ELFUTILS_1.0+0x770>
    9acc:	mov	x0, #0x0                   	// #0
    9ad0:	b	9ab4 <elf_newscn@@ELFUTILS_1.0+0x770>

0000000000009ad4 <elf32_getshdr@@ELFUTILS_1.0>:
    9ad4:	stp	x29, x30, [sp, #-32]!
    9ad8:	mov	x29, sp
    9adc:	str	x19, [sp, #16]
    9ae0:	mov	x19, x0
    9ae4:	bl	9584 <elf_newscn@@ELFUTILS_1.0+0x240>
    9ae8:	and	w1, w0, #0xff
    9aec:	mov	x0, #0x0                   	// #0
    9af0:	cbz	w1, 9afc <elf32_getshdr@@ELFUTILS_1.0+0x28>
    9af4:	mov	x0, x19
    9af8:	bl	9a4c <elf_newscn@@ELFUTILS_1.0+0x708>
    9afc:	ldr	x19, [sp, #16]
    9b00:	ldp	x29, x30, [sp], #32
    9b04:	ret
    9b08:	cbz	x0, 9b58 <elf32_getshdr@@ELFUTILS_1.0+0x84>
    9b0c:	stp	x29, x30, [sp, #-16]!
    9b10:	mov	x29, sp
    9b14:	ldr	x0, [x0, #136]
    9b18:	ldr	x1, [x0, #72]
    9b1c:	cbz	x1, 9b38 <elf32_getshdr@@ELFUTILS_1.0+0x64>
    9b20:	ldr	w1, [x0, #32]
    9b24:	mov	w0, #0x1                   	// #1
    9b28:	cmp	w1, #0x2
    9b2c:	b.ne	9b48 <elf32_getshdr@@ELFUTILS_1.0+0x74>  // b.any
    9b30:	ldp	x29, x30, [sp], #16
    9b34:	ret
    9b38:	mov	w0, #0x1a                  	// #26
    9b3c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9b40:	mov	w0, #0x0                   	// #0
    9b44:	b	9b30 <elf32_getshdr@@ELFUTILS_1.0+0x5c>
    9b48:	mov	w0, #0x15                  	// #21
    9b4c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9b50:	mov	w0, #0x0                   	// #0
    9b54:	b	9b30 <elf32_getshdr@@ELFUTILS_1.0+0x5c>
    9b58:	mov	w0, #0x0                   	// #0
    9b5c:	ret
    9b60:	stp	x29, x30, [sp, #-112]!
    9b64:	mov	x29, sp
    9b68:	stp	x21, x22, [sp, #32]
    9b6c:	ldr	x21, [x0, #144]
    9b70:	cbz	x21, 9b84 <elf32_getshdr@@ELFUTILS_1.0+0xb0>
    9b74:	mov	x0, x21
    9b78:	ldp	x21, x22, [sp, #32]
    9b7c:	ldp	x29, x30, [sp], #112
    9b80:	ret
    9b84:	stp	x19, x20, [sp, #16]
    9b88:	stp	x25, x26, [sp, #64]
    9b8c:	mov	x20, x0
    9b90:	ldr	x22, [x0, #136]
    9b94:	ldr	x25, [x22, #72]
    9b98:	add	x1, sp, #0x68
    9b9c:	mov	x0, x22
    9ba0:	bl	11010 <elf_getphdrnum@@ELFUTILS_1.6+0x3c>
    9ba4:	cbnz	w0, 9fc8 <elf32_getshdr@@ELFUTILS_1.0+0x4f4>
    9ba8:	stp	x23, x24, [sp, #48]
    9bac:	ldr	x23, [sp, #104]
    9bb0:	mov	x0, #0x3ffffffffffffff     	// #288230376151711743
    9bb4:	cmp	x23, x0
    9bb8:	b.ls	9bcc <elf32_getshdr@@ELFUTILS_1.0+0xf8>  // b.plast
    9bbc:	ldp	x19, x20, [sp, #16]
    9bc0:	ldp	x23, x24, [sp, #48]
    9bc4:	ldp	x25, x26, [sp, #64]
    9bc8:	b	9b74 <elf32_getshdr@@ELFUTILS_1.0+0xa0>
    9bcc:	lsl	x26, x23, #6
    9bd0:	mov	x0, x26
    9bd4:	bl	3100 <malloc@plt>
    9bd8:	mov	x19, x0
    9bdc:	str	x0, [x22, #80]
    9be0:	cbz	x0, 9c58 <elf32_getshdr@@ELFUTILS_1.0+0x184>
    9be4:	mov	w0, #0x1                   	// #1
    9be8:	str	w0, [x22, #124]
    9bec:	ldr	x24, [x22]
    9bf0:	cbz	x24, 9e4c <elf32_getshdr@@ELFUTILS_1.0+0x378>
    9bf4:	ldr	x0, [x25, #40]
    9bf8:	ldr	x1, [x22, #48]
    9bfc:	cmp	x0, x1
    9c00:	b.cs	9c74 <elf32_getshdr@@ELFUTILS_1.0+0x1a0>  // b.hs, b.nlast
    9c04:	sub	x1, x1, x0
    9c08:	cmp	x1, x26
    9c0c:	b.cc	9c74 <elf32_getshdr@@ELFUTILS_1.0+0x1a0>  // b.lo, b.ul, b.last
    9c10:	ldr	x1, [x22, #40]
    9c14:	add	x0, x0, x1
    9c18:	add	x24, x24, x0
    9c1c:	ldr	w0, [x22, #56]
    9c20:	tbnz	w0, #7, 9cc0 <elf32_getshdr@@ELFUTILS_1.0+0x1ec>
    9c24:	ldrb	w0, [x25, #5]
    9c28:	cmp	w0, #0x1
    9c2c:	b.ne	9ccc <elf32_getshdr@@ELFUTILS_1.0+0x1f8>  // b.any
    9c30:	ldr	w0, [x22, #28]
    9c34:	cmp	w0, #0x8
    9c38:	b.eq	9c44 <elf32_getshdr@@ELFUTILS_1.0+0x170>  // b.none
    9c3c:	tst	x24, #0x7
    9c40:	b.eq	9c9c <elf32_getshdr@@ELFUTILS_1.0+0x1c8>  // b.none
    9c44:	mov	x2, x26
    9c48:	mov	x1, x24
    9c4c:	mov	x0, x19
    9c50:	bl	3060 <memcpy@plt>
    9c54:	b	9e04 <elf32_getshdr@@ELFUTILS_1.0+0x330>
    9c58:	mov	w0, #0x8                   	// #8
    9c5c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9c60:	mov	x21, x19
    9c64:	ldp	x19, x20, [sp, #16]
    9c68:	ldp	x23, x24, [sp, #48]
    9c6c:	ldp	x25, x26, [sp, #64]
    9c70:	b	9b74 <elf32_getshdr@@ELFUTILS_1.0+0xa0>
    9c74:	mov	w0, #0x20                  	// #32
    9c78:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9c7c:	mov	x0, x19
    9c80:	bl	3250 <free@plt>
    9c84:	str	xzr, [x22, #80]
    9c88:	str	wzr, [x22, #124]
    9c8c:	ldp	x19, x20, [sp, #16]
    9c90:	ldp	x23, x24, [sp, #48]
    9c94:	ldp	x25, x26, [sp, #64]
    9c98:	b	9b74 <elf32_getshdr@@ELFUTILS_1.0+0xa0>
    9c9c:	stp	x27, x28, [sp, #80]
    9ca0:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9ca4:	add	x3, x3, #0x9d0
    9ca8:	mov	w2, #0x64                  	// #100
    9cac:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9cb0:	add	x1, x1, #0x8c8
    9cb4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9cb8:	add	x0, x0, #0x8d8
    9cbc:	bl	3380 <__assert_fail@plt>
    9cc0:	ldrb	w0, [x25, #5]
    9cc4:	cmp	w0, #0x1
    9cc8:	b.eq	9c44 <elf32_getshdr@@ELFUTILS_1.0+0x170>  // b.none
    9ccc:	ands	x25, x24, #0x7
    9cd0:	b.ne	9cf0 <elf32_getshdr@@ELFUTILS_1.0+0x21c>  // b.any
    9cd4:	cbz	x23, 9e2c <elf32_getshdr@@ELFUTILS_1.0+0x358>
    9cd8:	mov	x0, x24
    9cdc:	mov	x1, x19
    9ce0:	add	x5, x22, #0x154
    9ce4:	mov	x6, #0x0                   	// #0
    9ce8:	mov	w7, #0xffffffff            	// #-1
    9cec:	b	9d68 <elf32_getshdr@@ELFUTILS_1.0+0x294>
    9cf0:	mov	x0, x26
    9cf4:	bl	3100 <malloc@plt>
    9cf8:	mov	x21, x0
    9cfc:	cbz	x0, 9d18 <elf32_getshdr@@ELFUTILS_1.0+0x244>
    9d00:	mov	x2, x26
    9d04:	mov	x1, x24
    9d08:	bl	3060 <memcpy@plt>
    9d0c:	cbz	x23, 9df8 <elf32_getshdr@@ELFUTILS_1.0+0x324>
    9d10:	mov	x24, x21
    9d14:	b	9cd8 <elf32_getshdr@@ELFUTILS_1.0+0x204>
    9d18:	mov	w0, #0x8                   	// #8
    9d1c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9d20:	ldp	x19, x20, [sp, #16]
    9d24:	ldp	x23, x24, [sp, #48]
    9d28:	ldp	x25, x26, [sp, #64]
    9d2c:	b	9b74 <elf32_getshdr@@ELFUTILS_1.0+0xa0>
    9d30:	cmp	x23, w2, uxtw
    9d34:	b.ls	9de8 <elf32_getshdr@@ELFUTILS_1.0+0x314>  // b.plast
    9d38:	mov	w3, w2
    9d3c:	add	x2, x3, w2, uxtw #1
    9d40:	add	x2, x3, x2, lsl #2
    9d44:	add	x2, x22, x2, lsl #4
    9d48:	str	w6, [x2, #340]
    9d4c:	b	9de8 <elf32_getshdr@@ELFUTILS_1.0+0x314>
    9d50:	add	x6, x6, #0x1
    9d54:	add	x0, x0, #0x40
    9d58:	add	x1, x1, #0x40
    9d5c:	add	x5, x5, #0xd0
    9d60:	cmp	x23, x6
    9d64:	b.eq	9fbc <elf32_getshdr@@ELFUTILS_1.0+0x4e8>  // b.none
    9d68:	ldr	w2, [x0]
    9d6c:	rev	w2, w2
    9d70:	str	w2, [x1]
    9d74:	ldr	w3, [x0, #4]
    9d78:	rev	w3, w3
    9d7c:	str	w3, [x1, #4]
    9d80:	ldr	x2, [x0, #8]
    9d84:	rev	x2, x2
    9d88:	str	x2, [x1, #8]
    9d8c:	ldr	x2, [x0, #16]
    9d90:	rev	x2, x2
    9d94:	str	x2, [x1, #16]
    9d98:	ldr	x2, [x0, #24]
    9d9c:	rev	x2, x2
    9da0:	str	x2, [x1, #24]
    9da4:	ldr	x2, [x0, #32]
    9da8:	rev	x2, x2
    9dac:	str	x2, [x1, #32]
    9db0:	ldr	w2, [x0, #40]
    9db4:	rev	w2, w2
    9db8:	str	w2, [x1, #40]
    9dbc:	ldr	w4, [x0, #44]
    9dc0:	rev	w4, w4
    9dc4:	str	w4, [x1, #44]
    9dc8:	ldr	x4, [x0, #48]
    9dcc:	rev	x4, x4
    9dd0:	str	x4, [x1, #48]
    9dd4:	ldr	x4, [x0, #56]
    9dd8:	rev	x4, x4
    9ddc:	str	x4, [x1, #56]
    9de0:	cmp	w3, #0x12
    9de4:	b.eq	9d30 <elf32_getshdr@@ELFUTILS_1.0+0x25c>  // b.none
    9de8:	ldr	w2, [x5]
    9dec:	cbnz	w2, 9d50 <elf32_getshdr@@ELFUTILS_1.0+0x27c>
    9df0:	str	w7, [x5]
    9df4:	b	9d50 <elf32_getshdr@@ELFUTILS_1.0+0x27c>
    9df8:	mov	x24, x21
    9dfc:	mov	x0, x24
    9e00:	bl	3250 <free@plt>
    9e04:	ldr	x2, [sp, #104]
    9e08:	cbz	x2, 9e2c <elf32_getshdr@@ELFUTILS_1.0+0x358>
    9e0c:	ldr	x1, [x22, #80]
    9e10:	add	x22, x22, #0x168
    9e14:	mov	x0, #0x0                   	// #0
    9e18:	str	x1, [x22], #208
    9e1c:	add	x0, x0, #0x1
    9e20:	add	x1, x1, #0x40
    9e24:	cmp	x2, x0
    9e28:	b.hi	9e18 <elf32_getshdr@@ELFUTILS_1.0+0x344>  // b.pmore
    9e2c:	ldr	x21, [x20, #144]
    9e30:	cbz	x21, 9f98 <elf32_getshdr@@ELFUTILS_1.0+0x4c4>
    9e34:	ldp	x19, x20, [sp, #16]
    9e38:	ldp	x23, x24, [sp, #48]
    9e3c:	ldp	x25, x26, [sp, #64]
    9e40:	b	9b74 <elf32_getshdr@@ELFUTILS_1.0+0xa0>
    9e44:	ldp	x27, x28, [sp, #80]
    9e48:	b	9e04 <elf32_getshdr@@ELFUTILS_1.0+0x330>
    9e4c:	stp	x27, x28, [sp, #80]
    9e50:	ldr	w28, [x22, #36]
    9e54:	cmn	w28, #0x1
    9e58:	b.eq	9f80 <elf32_getshdr@@ELFUTILS_1.0+0x4ac>  // b.none
    9e5c:	ldr	x27, [x22, #40]
    9e60:	ldr	x0, [x25, #40]
    9e64:	add	x27, x27, x0
    9e68:	mov	x23, #0x0                   	// #0
    9e6c:	b	9e84 <elf32_getshdr@@ELFUTILS_1.0+0x3b0>
    9e70:	cmp	x0, #0x0
    9e74:	b.le	9eb4 <elf32_getshdr@@ELFUTILS_1.0+0x3e0>
    9e78:	add	x23, x23, x0
    9e7c:	cmp	x26, x23
    9e80:	b.ls	9ebc <elf32_getshdr@@ELFUTILS_1.0+0x3e8>  // b.plast
    9e84:	add	x3, x27, x23
    9e88:	sub	x2, x26, x23
    9e8c:	add	x1, x19, x23
    9e90:	mov	w0, w28
    9e94:	bl	32a0 <pread@plt>
    9e98:	mov	x24, x0
    9e9c:	cmn	x0, #0x1
    9ea0:	b.ne	9e70 <elf32_getshdr@@ELFUTILS_1.0+0x39c>  // b.any
    9ea4:	bl	3390 <__errno_location@plt>
    9ea8:	ldr	w0, [x0]
    9eac:	cmp	w0, #0x4
    9eb0:	b.eq	9e84 <elf32_getshdr@@ELFUTILS_1.0+0x3b0>  // b.none
    9eb4:	cmp	x24, #0x0
    9eb8:	csel	x23, x23, x24, ge  // ge = tcont
    9ebc:	cmp	x26, x23
    9ec0:	b.ne	9f70 <elf32_getshdr@@ELFUTILS_1.0+0x49c>  // b.any
    9ec4:	ldrb	w0, [x25, #5]
    9ec8:	cmp	w0, #0x1
    9ecc:	b.eq	9e44 <elf32_getshdr@@ELFUTILS_1.0+0x370>  // b.none
    9ed0:	ldr	x1, [sp, #104]
    9ed4:	cbz	x1, 9f90 <elf32_getshdr@@ELFUTILS_1.0+0x4bc>
    9ed8:	mov	x0, x19
    9edc:	add	x19, x19, x1, lsl #6
    9ee0:	ldr	w1, [x0]
    9ee4:	rev	w1, w1
    9ee8:	str	w1, [x0]
    9eec:	ldr	w1, [x0, #4]
    9ef0:	rev	w1, w1
    9ef4:	str	w1, [x0, #4]
    9ef8:	ldr	x1, [x0, #8]
    9efc:	rev	x1, x1
    9f00:	str	x1, [x0, #8]
    9f04:	ldr	x1, [x0, #16]
    9f08:	rev	x1, x1
    9f0c:	str	x1, [x0, #16]
    9f10:	ldr	x1, [x0, #24]
    9f14:	rev	x1, x1
    9f18:	str	x1, [x0, #24]
    9f1c:	ldr	x1, [x0, #32]
    9f20:	rev	x1, x1
    9f24:	str	x1, [x0, #32]
    9f28:	ldr	w1, [x0, #40]
    9f2c:	rev	w1, w1
    9f30:	str	w1, [x0, #40]
    9f34:	ldr	w1, [x0, #44]
    9f38:	rev	w1, w1
    9f3c:	str	w1, [x0, #44]
    9f40:	ldr	x1, [x0, #48]
    9f44:	rev	x1, x1
    9f48:	str	x1, [x0, #48]
    9f4c:	ldr	x1, [x0, #56]
    9f50:	rev	x1, x1
    9f54:	str	x1, [x0, #56]
    9f58:	add	x0, x0, #0x40
    9f5c:	cmp	x0, x19
    9f60:	b.ne	9ee0 <elf32_getshdr@@ELFUTILS_1.0+0x40c>  // b.any
    9f64:	ldr	x2, [sp, #104]
    9f68:	ldp	x27, x28, [sp, #80]
    9f6c:	b	9e0c <elf32_getshdr@@ELFUTILS_1.0+0x338>
    9f70:	mov	w0, #0x13                  	// #19
    9f74:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9f78:	ldp	x27, x28, [sp, #80]
    9f7c:	b	9c7c <elf32_getshdr@@ELFUTILS_1.0+0x1a8>
    9f80:	mov	w0, #0x1b                  	// #27
    9f84:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    9f88:	ldp	x27, x28, [sp, #80]
    9f8c:	b	9c7c <elf32_getshdr@@ELFUTILS_1.0+0x1a8>
    9f90:	ldp	x27, x28, [sp, #80]
    9f94:	b	9e2c <elf32_getshdr@@ELFUTILS_1.0+0x358>
    9f98:	stp	x27, x28, [sp, #80]
    9f9c:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9fa0:	add	x3, x3, #0x9d0
    9fa4:	mov	w2, #0xdd                  	// #221
    9fa8:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9fac:	add	x1, x1, #0x8c8
    9fb0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    9fb4:	add	x0, x0, #0x9a8
    9fb8:	bl	3380 <__assert_fail@plt>
    9fbc:	cbnz	x25, 9dfc <elf32_getshdr@@ELFUTILS_1.0+0x328>
    9fc0:	ldr	x2, [sp, #104]
    9fc4:	b	9e0c <elf32_getshdr@@ELFUTILS_1.0+0x338>
    9fc8:	ldp	x19, x20, [sp, #16]
    9fcc:	ldp	x25, x26, [sp, #64]
    9fd0:	b	9b74 <elf32_getshdr@@ELFUTILS_1.0+0xa0>
    9fd4:	stp	x29, x30, [sp, #-32]!
    9fd8:	mov	x29, sp
    9fdc:	str	x19, [sp, #16]
    9fe0:	mov	x19, x0
    9fe4:	bl	9b08 <elf32_getshdr@@ELFUTILS_1.0+0x34>
    9fe8:	and	w1, w0, #0xff
    9fec:	cbz	w1, a010 <elf32_getshdr@@ELFUTILS_1.0+0x53c>
    9ff0:	ldr	x0, [x19, #144]
    9ff4:	cbz	x0, a004 <elf32_getshdr@@ELFUTILS_1.0+0x530>
    9ff8:	ldr	x19, [sp, #16]
    9ffc:	ldp	x29, x30, [sp], #32
    a000:	ret
    a004:	mov	x0, x19
    a008:	bl	9b60 <elf32_getshdr@@ELFUTILS_1.0+0x8c>
    a00c:	b	9ff8 <elf32_getshdr@@ELFUTILS_1.0+0x524>
    a010:	mov	x0, #0x0                   	// #0
    a014:	b	9ff8 <elf32_getshdr@@ELFUTILS_1.0+0x524>
    a018:	stp	x29, x30, [sp, #-32]!
    a01c:	mov	x29, sp
    a020:	str	x19, [sp, #16]
    a024:	mov	x19, x0
    a028:	bl	9b08 <elf32_getshdr@@ELFUTILS_1.0+0x34>
    a02c:	and	w1, w0, #0xff
    a030:	cbz	w1, a054 <elf32_getshdr@@ELFUTILS_1.0+0x580>
    a034:	ldr	x0, [x19, #144]
    a038:	cbz	x0, a048 <elf32_getshdr@@ELFUTILS_1.0+0x574>
    a03c:	ldr	x19, [sp, #16]
    a040:	ldp	x29, x30, [sp], #32
    a044:	ret
    a048:	mov	x0, x19
    a04c:	bl	9b60 <elf32_getshdr@@ELFUTILS_1.0+0x8c>
    a050:	b	a03c <elf32_getshdr@@ELFUTILS_1.0+0x568>
    a054:	mov	x0, #0x0                   	// #0
    a058:	b	a03c <elf32_getshdr@@ELFUTILS_1.0+0x568>

000000000000a05c <elf64_getshdr@@ELFUTILS_1.0>:
    a05c:	stp	x29, x30, [sp, #-32]!
    a060:	mov	x29, sp
    a064:	str	x19, [sp, #16]
    a068:	mov	x19, x0
    a06c:	bl	9b08 <elf32_getshdr@@ELFUTILS_1.0+0x34>
    a070:	and	w1, w0, #0xff
    a074:	mov	x0, #0x0                   	// #0
    a078:	cbz	w1, a084 <elf64_getshdr@@ELFUTILS_1.0+0x28>
    a07c:	mov	x0, x19
    a080:	bl	9fd4 <elf32_getshdr@@ELFUTILS_1.0+0x500>
    a084:	ldr	x19, [sp, #16]
    a088:	ldp	x29, x30, [sp], #32
    a08c:	ret

000000000000a090 <gelf_getshdr@@ELFUTILS_1.0>:
    a090:	stp	x29, x30, [sp, #-32]!
    a094:	mov	x29, sp
    a098:	stp	x19, x20, [sp, #16]
    a09c:	cbz	x0, a194 <gelf_getshdr@@ELFUTILS_1.0+0x104>
    a0a0:	mov	x19, x1
    a0a4:	cbz	x1, a0f4 <gelf_getshdr@@ELFUTILS_1.0+0x64>
    a0a8:	ldr	x1, [x0, #136]
    a0ac:	ldr	w1, [x1, #32]
    a0b0:	cmp	w1, #0x1
    a0b4:	b.eq	a104 <gelf_getshdr@@ELFUTILS_1.0+0x74>  // b.none
    a0b8:	ldr	x20, [x0, #144]
    a0bc:	cbz	x20, a17c <gelf_getshdr@@ELFUTILS_1.0+0xec>
    a0c0:	ldp	x0, x1, [x20]
    a0c4:	stp	x0, x1, [x19]
    a0c8:	ldp	x0, x1, [x20, #16]
    a0cc:	stp	x0, x1, [x19, #16]
    a0d0:	ldp	x0, x1, [x20, #32]
    a0d4:	stp	x0, x1, [x19, #32]
    a0d8:	ldp	x0, x1, [x20, #48]
    a0dc:	stp	x0, x1, [x19, #48]
    a0e0:	mov	x20, x19
    a0e4:	mov	x0, x20
    a0e8:	ldp	x19, x20, [sp, #16]
    a0ec:	ldp	x29, x30, [sp], #32
    a0f0:	ret
    a0f4:	mov	w0, #0x17                  	// #23
    a0f8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a0fc:	mov	x20, x19
    a100:	b	a0e4 <gelf_getshdr@@ELFUTILS_1.0+0x54>
    a104:	ldr	x20, [x0, #144]
    a108:	cbz	x20, a164 <gelf_getshdr@@ELFUTILS_1.0+0xd4>
    a10c:	ldr	w0, [x20]
    a110:	str	w0, [x19]
    a114:	ldr	w0, [x20, #4]
    a118:	str	w0, [x19, #4]
    a11c:	ldr	w0, [x20, #8]
    a120:	str	x0, [x19, #8]
    a124:	ldr	w0, [x20, #12]
    a128:	str	x0, [x19, #16]
    a12c:	ldr	w0, [x20, #16]
    a130:	str	x0, [x19, #24]
    a134:	ldr	w0, [x20, #20]
    a138:	str	x0, [x19, #32]
    a13c:	ldr	w0, [x20, #24]
    a140:	str	w0, [x19, #40]
    a144:	ldr	w0, [x20, #28]
    a148:	str	w0, [x19, #44]
    a14c:	ldr	w0, [x20, #32]
    a150:	str	x0, [x19, #48]
    a154:	ldr	w0, [x20, #36]
    a158:	str	x0, [x19, #56]
    a15c:	mov	x20, x19
    a160:	b	a0e4 <gelf_getshdr@@ELFUTILS_1.0+0x54>
    a164:	bl	9a4c <elf_newscn@@ELFUTILS_1.0+0x708>
    a168:	mov	x20, x0
    a16c:	cbnz	x0, a10c <gelf_getshdr@@ELFUTILS_1.0+0x7c>
    a170:	mov	w0, #0x17                  	// #23
    a174:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a178:	b	a0e4 <gelf_getshdr@@ELFUTILS_1.0+0x54>
    a17c:	bl	9fd4 <elf32_getshdr@@ELFUTILS_1.0+0x500>
    a180:	mov	x20, x0
    a184:	cbnz	x0, a0c0 <gelf_getshdr@@ELFUTILS_1.0+0x30>
    a188:	mov	w0, #0x17                  	// #23
    a18c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a190:	b	a0e4 <gelf_getshdr@@ELFUTILS_1.0+0x54>
    a194:	mov	x20, x0
    a198:	b	a0e4 <gelf_getshdr@@ELFUTILS_1.0+0x54>

000000000000a19c <gelf_update_shdr@@ELFUTILS_1.0>:
    a19c:	cmp	x0, #0x0
    a1a0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    a1a4:	b.eq	a304 <gelf_update_shdr@@ELFUTILS_1.0+0x168>  // b.none
    a1a8:	stp	x29, x30, [sp, #-32]!
    a1ac:	mov	x29, sp
    a1b0:	stp	x19, x20, [sp, #16]
    a1b4:	mov	x20, x0
    a1b8:	mov	x19, x1
    a1bc:	ldr	x0, [x0, #136]
    a1c0:	ldr	w0, [x0, #32]
    a1c4:	cmp	w0, #0x1
    a1c8:	b.eq	a210 <gelf_update_shdr@@ELFUTILS_1.0+0x74>  // b.none
    a1cc:	ldr	x1, [x20, #144]
    a1d0:	cbz	x1, a2e4 <gelf_update_shdr@@ELFUTILS_1.0+0x148>
    a1d4:	ldp	x2, x3, [x19]
    a1d8:	stp	x2, x3, [x1]
    a1dc:	ldp	x2, x3, [x19, #16]
    a1e0:	stp	x2, x3, [x1, #16]
    a1e4:	ldp	x2, x3, [x19, #32]
    a1e8:	stp	x2, x3, [x1, #32]
    a1ec:	ldp	x2, x3, [x19, #48]
    a1f0:	stp	x2, x3, [x1, #48]
    a1f4:	ldr	w0, [x20, #152]
    a1f8:	orr	w0, w0, #0x1
    a1fc:	str	w0, [x20, #152]
    a200:	mov	w0, #0x1                   	// #1
    a204:	ldp	x19, x20, [sp, #16]
    a208:	ldp	x29, x30, [sp], #32
    a20c:	ret
    a210:	ldr	x0, [x20, #144]
    a214:	cbz	x0, a2b8 <gelf_update_shdr@@ELFUTILS_1.0+0x11c>
    a218:	ldr	x2, [x19, #8]
    a21c:	mov	x1, #0xffffffff            	// #4294967295
    a220:	cmp	x2, x1
    a224:	b.hi	a2d4 <gelf_update_shdr@@ELFUTILS_1.0+0x138>  // b.pmore
    a228:	ldr	x2, [x19, #16]
    a22c:	cmp	x2, x1
    a230:	b.hi	a2d4 <gelf_update_shdr@@ELFUTILS_1.0+0x138>  // b.pmore
    a234:	ldr	x2, [x19, #24]
    a238:	cmp	x2, x1
    a23c:	b.hi	a2d4 <gelf_update_shdr@@ELFUTILS_1.0+0x138>  // b.pmore
    a240:	ldr	x2, [x19, #32]
    a244:	cmp	x2, x1
    a248:	b.hi	a2d4 <gelf_update_shdr@@ELFUTILS_1.0+0x138>  // b.pmore
    a24c:	ldr	x2, [x19, #48]
    a250:	cmp	x2, x1
    a254:	b.hi	a2d4 <gelf_update_shdr@@ELFUTILS_1.0+0x138>  // b.pmore
    a258:	ldr	x2, [x19, #56]
    a25c:	cmp	x2, x1
    a260:	b.hi	a2d4 <gelf_update_shdr@@ELFUTILS_1.0+0x138>  // b.pmore
    a264:	ldr	w1, [x19]
    a268:	str	w1, [x0]
    a26c:	ldr	w1, [x19, #4]
    a270:	str	w1, [x0, #4]
    a274:	ldr	x1, [x19, #8]
    a278:	str	w1, [x0, #8]
    a27c:	ldr	x1, [x19, #16]
    a280:	str	w1, [x0, #12]
    a284:	ldr	x1, [x19, #24]
    a288:	str	w1, [x0, #16]
    a28c:	ldr	x1, [x19, #32]
    a290:	str	w1, [x0, #20]
    a294:	ldr	w1, [x19, #40]
    a298:	str	w1, [x0, #24]
    a29c:	ldr	w1, [x19, #44]
    a2a0:	str	w1, [x0, #28]
    a2a4:	ldr	x1, [x19, #48]
    a2a8:	str	w1, [x0, #32]
    a2ac:	ldr	x1, [x19, #56]
    a2b0:	str	w1, [x0, #36]
    a2b4:	b	a1f4 <gelf_update_shdr@@ELFUTILS_1.0+0x58>
    a2b8:	mov	x0, x20
    a2bc:	bl	9a90 <elf_newscn@@ELFUTILS_1.0+0x74c>
    a2c0:	cbnz	x0, a218 <gelf_update_shdr@@ELFUTILS_1.0+0x7c>
    a2c4:	mov	w0, #0x17                  	// #23
    a2c8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a2cc:	mov	w0, #0x0                   	// #0
    a2d0:	b	a204 <gelf_update_shdr@@ELFUTILS_1.0+0x68>
    a2d4:	mov	w0, #0x21                  	// #33
    a2d8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a2dc:	mov	w0, #0x0                   	// #0
    a2e0:	b	a204 <gelf_update_shdr@@ELFUTILS_1.0+0x68>
    a2e4:	mov	x0, x20
    a2e8:	bl	a018 <elf32_getshdr@@ELFUTILS_1.0+0x544>
    a2ec:	mov	x1, x0
    a2f0:	cbnz	x0, a1d4 <gelf_update_shdr@@ELFUTILS_1.0+0x38>
    a2f4:	mov	w0, #0x17                  	// #23
    a2f8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a2fc:	mov	w0, #0x0                   	// #0
    a300:	b	a204 <gelf_update_shdr@@ELFUTILS_1.0+0x68>
    a304:	mov	w0, #0x0                   	// #0
    a308:	ret
    a30c:	stp	x29, x30, [sp, #-48]!
    a310:	mov	x29, sp
    a314:	str	x19, [sp, #16]
    a318:	mov	x19, x0
    a31c:	add	x2, sp, #0x20
    a320:	add	x1, sp, #0x28
    a324:	bl	124a0 <gelf_getchdr@@ELFUTILS_1.7+0x5c4>
    a328:	cbz	x0, a340 <gelf_update_shdr@@ELFUTILS_1.0+0x1a4>
    a32c:	str	x0, [x19, #176]
    a330:	ldr	x1, [sp, #40]
    a334:	str	x1, [x19, #184]
    a338:	ldr	x1, [sp, #32]
    a33c:	str	x1, [x19, #192]
    a340:	ldr	x19, [sp, #16]
    a344:	ldp	x29, x30, [sp], #48
    a348:	ret

000000000000a34c <elf_strptr@@ELFUTILS_1.0>:
    a34c:	stp	x29, x30, [sp, #-64]!
    a350:	mov	x29, sp
    a354:	stp	x19, x20, [sp, #16]
    a358:	cbz	x0, a6e0 <elf_strptr@@ELFUTILS_1.0+0x394>
    a35c:	stp	x21, x22, [sp, #32]
    a360:	mov	x20, x1
    a364:	mov	x21, x2
    a368:	ldr	w1, [x0, #24]
    a36c:	add	x19, x0, #0xc8
    a370:	cmp	w1, #0x3
    a374:	b.ne	a3ac <elf_strptr@@ELFUTILS_1.0+0x60>  // b.any
    a378:	ldr	w1, [x19, #4]
    a37c:	cmp	x1, x20
    a380:	b.hi	a3c0 <elf_strptr@@ELFUTILS_1.0+0x74>  // b.pmore
    a384:	sub	x20, x20, x1
    a388:	ldr	x19, [x19, #8]
    a38c:	cbnz	x19, a378 <elf_strptr@@ELFUTILS_1.0+0x2c>
    a390:	mov	w0, #0x16                  	// #22
    a394:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a398:	ldp	x21, x22, [sp, #32]
    a39c:	mov	x0, x19
    a3a0:	ldp	x19, x20, [sp, #16]
    a3a4:	ldp	x29, x30, [sp], #64
    a3a8:	ret
    a3ac:	mov	w0, #0x4                   	// #4
    a3b0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a3b4:	mov	x19, #0x0                   	// #0
    a3b8:	ldp	x21, x22, [sp, #32]
    a3bc:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a3c0:	ldr	w1, [x19]
    a3c4:	cmp	x1, x20
    a3c8:	b.ls	a494 <elf_strptr@@ELFUTILS_1.0+0x148>  // b.plast
    a3cc:	stp	x23, x24, [sp, #48]
    a3d0:	add	x22, x20, x20, lsl #1
    a3d4:	add	x22, x20, x22, lsl #2
    a3d8:	add	x22, x19, x22, lsl #4
    a3dc:	add	x22, x22, #0x10
    a3e0:	ldr	w0, [x0, #32]
    a3e4:	cmp	w0, #0x1
    a3e8:	b.eq	a4a8 <elf_strptr@@ELFUTILS_1.0+0x15c>  // b.none
    a3ec:	add	x0, x20, x20, lsl #1
    a3f0:	add	x0, x20, x0, lsl #2
    a3f4:	add	x0, x19, x0, lsl #4
    a3f8:	ldr	x0, [x0, #160]
    a3fc:	cbz	x0, a55c <elf_strptr@@ELFUTILS_1.0+0x210>
    a400:	ldr	w1, [x0, #4]
    a404:	cmp	w1, #0x3
    a408:	b.ne	a568 <elf_strptr@@ELFUTILS_1.0+0x21c>  // b.any
    a40c:	ldr	x1, [x0, #8]
    a410:	tbnz	w1, #11, a580 <elf_strptr@@ELFUTILS_1.0+0x234>
    a414:	ldr	x23, [x0, #32]
    a418:	cmp	x23, x21
    a41c:	b.ls	a5c4 <elf_strptr@@ELFUTILS_1.0+0x278>  // b.plast
    a420:	add	x0, x20, x20, lsl #1
    a424:	add	x0, x20, x0, lsl #2
    a428:	add	x0, x19, x0, lsl #4
    a42c:	ldr	x24, [x0, #176]
    a430:	cbz	x24, a5dc <elf_strptr@@ELFUTILS_1.0+0x290>
    a434:	add	x0, x20, x20, lsl #1
    a438:	add	x0, x20, x0, lsl #2
    a43c:	add	x0, x19, x0, lsl #4
    a440:	ldr	x0, [x0, #192]
    a444:	cbnz	x0, a60c <elf_strptr@@ELFUTILS_1.0+0x2c0>
    a448:	add	x0, x20, x20, lsl #1
    a44c:	add	x0, x20, x0, lsl #2
    a450:	add	x0, x19, x0, lsl #4
    a454:	ldr	x0, [x0, #80]
    a458:	cbnz	x0, a684 <elf_strptr@@ELFUTILS_1.0+0x338>
    a45c:	add	x0, x20, x20, lsl #1
    a460:	add	x20, x20, x0, lsl #2
    a464:	add	x19, x19, x20, lsl #4
    a468:	ldr	x19, [x19, #176]
    a46c:	add	x19, x19, x21
    a470:	sub	x2, x23, x21
    a474:	mov	w1, #0x0                   	// #0
    a478:	mov	x0, x19
    a47c:	bl	32b0 <memrchr@plt>
    a480:	mov	x20, x0
    a484:	cbz	x0, a64c <elf_strptr@@ELFUTILS_1.0+0x300>
    a488:	ldp	x21, x22, [sp, #32]
    a48c:	ldp	x23, x24, [sp, #48]
    a490:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a494:	mov	w0, #0x16                  	// #22
    a498:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a49c:	mov	x19, #0x0                   	// #0
    a4a0:	ldp	x21, x22, [sp, #32]
    a4a4:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a4a8:	add	x0, x20, x20, lsl #1
    a4ac:	add	x0, x20, x0, lsl #2
    a4b0:	add	x0, x19, x0, lsl #4
    a4b4:	ldr	x0, [x0, #160]
    a4b8:	cbz	x0, a4f4 <elf_strptr@@ELFUTILS_1.0+0x1a8>
    a4bc:	ldr	w1, [x0, #4]
    a4c0:	cmp	w1, #0x3
    a4c4:	b.ne	a500 <elf_strptr@@ELFUTILS_1.0+0x1b4>  // b.any
    a4c8:	ldr	w1, [x0, #8]
    a4cc:	tbnz	w1, #11, a518 <elf_strptr@@ELFUTILS_1.0+0x1cc>
    a4d0:	ldr	w23, [x0, #20]
    a4d4:	cmp	x23, x21
    a4d8:	b.hi	a420 <elf_strptr@@ELFUTILS_1.0+0xd4>  // b.pmore
    a4dc:	mov	w0, #0x1d                  	// #29
    a4e0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a4e4:	mov	x19, #0x0                   	// #0
    a4e8:	ldp	x21, x22, [sp, #32]
    a4ec:	ldp	x23, x24, [sp, #48]
    a4f0:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a4f4:	mov	x0, x22
    a4f8:	bl	9a4c <elf_newscn@@ELFUTILS_1.0+0x708>
    a4fc:	b	a4bc <elf_strptr@@ELFUTILS_1.0+0x170>
    a500:	mov	w0, #0x18                  	// #24
    a504:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a508:	mov	x19, #0x0                   	// #0
    a50c:	ldp	x21, x22, [sp, #32]
    a510:	ldp	x23, x24, [sp, #48]
    a514:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a518:	add	x0, x20, x20, lsl #1
    a51c:	add	x0, x20, x0, lsl #2
    a520:	add	x0, x19, x0, lsl #4
    a524:	ldr	x0, [x0, #192]
    a528:	cbz	x0, a540 <elf_strptr@@ELFUTILS_1.0+0x1f4>
    a52c:	add	x0, x20, x20, lsl #1
    a530:	add	x0, x20, x0, lsl #2
    a534:	add	x0, x19, x0, lsl #4
    a538:	ldr	x23, [x0, #200]
    a53c:	b	a4d4 <elf_strptr@@ELFUTILS_1.0+0x188>
    a540:	mov	x0, x22
    a544:	bl	a30c <gelf_update_shdr@@ELFUTILS_1.0+0x170>
    a548:	cbnz	x0, a52c <elf_strptr@@ELFUTILS_1.0+0x1e0>
    a54c:	mov	x19, x0
    a550:	ldp	x21, x22, [sp, #32]
    a554:	ldp	x23, x24, [sp, #48]
    a558:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a55c:	mov	x0, x22
    a560:	bl	9fd4 <elf32_getshdr@@ELFUTILS_1.0+0x500>
    a564:	b	a400 <elf_strptr@@ELFUTILS_1.0+0xb4>
    a568:	mov	w0, #0x18                  	// #24
    a56c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a570:	mov	x19, #0x0                   	// #0
    a574:	ldp	x21, x22, [sp, #32]
    a578:	ldp	x23, x24, [sp, #48]
    a57c:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a580:	add	x0, x20, x20, lsl #1
    a584:	add	x0, x20, x0, lsl #2
    a588:	add	x0, x19, x0, lsl #4
    a58c:	ldr	x0, [x0, #192]
    a590:	cbz	x0, a5a8 <elf_strptr@@ELFUTILS_1.0+0x25c>
    a594:	add	x0, x20, x20, lsl #1
    a598:	add	x0, x20, x0, lsl #2
    a59c:	add	x0, x19, x0, lsl #4
    a5a0:	ldr	x23, [x0, #200]
    a5a4:	b	a418 <elf_strptr@@ELFUTILS_1.0+0xcc>
    a5a8:	mov	x0, x22
    a5ac:	bl	a30c <gelf_update_shdr@@ELFUTILS_1.0+0x170>
    a5b0:	cbnz	x0, a594 <elf_strptr@@ELFUTILS_1.0+0x248>
    a5b4:	mov	x19, x0
    a5b8:	ldp	x21, x22, [sp, #32]
    a5bc:	ldp	x23, x24, [sp, #48]
    a5c0:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a5c4:	mov	w0, #0x1d                  	// #29
    a5c8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a5cc:	mov	x19, #0x0                   	// #0
    a5d0:	ldp	x21, x22, [sp, #32]
    a5d4:	ldp	x23, x24, [sp, #48]
    a5d8:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a5dc:	add	x0, x20, x20, lsl #1
    a5e0:	add	x0, x20, x0, lsl #2
    a5e4:	add	x0, x19, x0, lsl #4
    a5e8:	ldr	w0, [x0, #136]
    a5ec:	cbnz	w0, a434 <elf_strptr@@ELFUTILS_1.0+0xe8>
    a5f0:	mov	x0, x22
    a5f4:	bl	a834 <elf_rawdata@@ELFUTILS_1.0+0x14c>
    a5f8:	cbz	w0, a434 <elf_strptr@@ELFUTILS_1.0+0xe8>
    a5fc:	mov	x19, x24
    a600:	ldp	x21, x22, [sp, #32]
    a604:	ldp	x23, x24, [sp, #48]
    a608:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a60c:	add	x19, x0, x21
    a610:	sub	x2, x23, x21
    a614:	mov	w1, #0x0                   	// #0
    a618:	mov	x0, x19
    a61c:	bl	32b0 <memrchr@plt>
    a620:	mov	x20, x0
    a624:	cbz	x0, a634 <elf_strptr@@ELFUTILS_1.0+0x2e8>
    a628:	ldp	x21, x22, [sp, #32]
    a62c:	ldp	x23, x24, [sp, #48]
    a630:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a634:	mov	w0, #0x16                  	// #22
    a638:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a63c:	mov	x19, x20
    a640:	ldp	x21, x22, [sp, #32]
    a644:	ldp	x23, x24, [sp, #48]
    a648:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a64c:	mov	w0, #0x16                  	// #22
    a650:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a654:	mov	x19, x20
    a658:	ldp	x21, x22, [sp, #32]
    a65c:	ldp	x23, x24, [sp, #48]
    a660:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a664:	mov	w0, #0x16                  	// #22
    a668:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a66c:	mov	x19, x20
    a670:	ldp	x21, x22, [sp, #32]
    a674:	ldp	x23, x24, [sp, #48]
    a678:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a67c:	ldr	x22, [x22, #48]
    a680:	cbz	x22, a6d0 <elf_strptr@@ELFUTILS_1.0+0x384>
    a684:	ldr	x0, [x22, #24]
    a688:	cmp	x0, x21
    a68c:	b.hi	a67c <elf_strptr@@ELFUTILS_1.0+0x330>  // b.pmore
    a690:	ldr	x2, [x22, #16]
    a694:	add	x2, x0, x2
    a698:	cmp	x2, x21
    a69c:	b.ls	a67c <elf_strptr@@ELFUTILS_1.0+0x330>  // b.plast
    a6a0:	sub	x0, x21, x0
    a6a4:	ldr	x19, [x22]
    a6a8:	add	x19, x19, x0
    a6ac:	sub	x2, x2, x21
    a6b0:	mov	w1, #0x0                   	// #0
    a6b4:	mov	x0, x19
    a6b8:	bl	32b0 <memrchr@plt>
    a6bc:	mov	x20, x0
    a6c0:	cbz	x0, a664 <elf_strptr@@ELFUTILS_1.0+0x318>
    a6c4:	ldp	x21, x22, [sp, #32]
    a6c8:	ldp	x23, x24, [sp, #48]
    a6cc:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a6d0:	mov	x19, x22
    a6d4:	ldp	x21, x22, [sp, #32]
    a6d8:	ldp	x23, x24, [sp, #48]
    a6dc:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>
    a6e0:	mov	x19, x0
    a6e4:	b	a39c <elf_strptr@@ELFUTILS_1.0+0x50>

000000000000a6e8 <elf_rawdata@@ELFUTILS_1.0>:
    a6e8:	stp	x29, x30, [sp, #-32]!
    a6ec:	mov	x29, sp
    a6f0:	cbz	x0, a738 <elf_rawdata@@ELFUTILS_1.0+0x50>
    a6f4:	stp	x19, x20, [sp, #16]
    a6f8:	mov	x19, x0
    a6fc:	mov	x20, x1
    a700:	ldr	x0, [x0, #136]
    a704:	ldr	w0, [x0, #24]
    a708:	cmp	w0, #0x3
    a70c:	b.ne	a734 <elf_rawdata@@ELFUTILS_1.0+0x4c>  // b.any
    a710:	cbnz	x1, a748 <elf_rawdata@@ELFUTILS_1.0+0x60>
    a714:	ldr	w0, [x19, #120]
    a718:	cbz	w0, a75c <elf_rawdata@@ELFUTILS_1.0+0x74>
    a71c:	ldr	w0, [x19, #156]
    a720:	tbz	w0, #8, a748 <elf_rawdata@@ELFUTILS_1.0+0x60>
    a724:	add	x0, x19, #0x48
    a728:	ldp	x19, x20, [sp, #16]
    a72c:	ldp	x29, x30, [sp], #32
    a730:	ret
    a734:	ldp	x19, x20, [sp, #16]
    a738:	mov	w0, #0x4                   	// #4
    a73c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a740:	mov	x0, #0x0                   	// #0
    a744:	b	a72c <elf_rawdata@@ELFUTILS_1.0+0x44>
    a748:	mov	w0, #0x1f                  	// #31
    a74c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    a750:	mov	x0, #0x0                   	// #0
    a754:	ldp	x19, x20, [sp, #16]
    a758:	b	a72c <elf_rawdata@@ELFUTILS_1.0+0x44>
    a75c:	mov	x0, x19
    a760:	bl	ac04 <elf_rawdata@@ELFUTILS_1.0+0x51c>
    a764:	cbz	w0, a724 <elf_rawdata@@ELFUTILS_1.0+0x3c>
    a768:	mov	x0, x20
    a76c:	ldp	x19, x20, [sp, #16]
    a770:	b	a72c <elf_rawdata@@ELFUTILS_1.0+0x44>
    a774:	cmp	w1, #0x5
    a778:	b.ne	a7e8 <elf_rawdata@@ELFUTILS_1.0+0x100>  // b.any
    a77c:	mov	x3, x0
    a780:	ldr	w1, [x0, #32]
    a784:	mov	w0, #0xc                   	// #12
    a788:	cmp	w1, #0x2
    a78c:	b.eq	a794 <elf_rawdata@@ELFUTILS_1.0+0xac>  // b.none
    a790:	ret
    a794:	stp	x29, x30, [sp, #-80]!
    a798:	mov	x29, sp
    a79c:	add	x1, sp, #0x10
    a7a0:	mov	x0, x3
    a7a4:	bl	7104 <elf64_getehdr@@ELFUTILS_1.0+0x20>
    a7a8:	mov	x1, x0
    a7ac:	ldrh	w2, [x0, #18]
    a7b0:	mov	w0, #0xd                   	// #13
    a7b4:	mov	w3, #0x9026                	// #36902
    a7b8:	cmp	w2, w3
    a7bc:	b.eq	a7cc <elf_rawdata@@ELFUTILS_1.0+0xe4>  // b.none
    a7c0:	mov	w0, #0xc                   	// #12
    a7c4:	cmp	w2, #0x16
    a7c8:	b.eq	a7d4 <elf_rawdata@@ELFUTILS_1.0+0xec>  // b.none
    a7cc:	ldp	x29, x30, [sp], #80
    a7d0:	ret
    a7d4:	ldrb	w0, [x1, #4]
    a7d8:	cmp	w0, #0x2
    a7dc:	cset	w0, eq  // eq = none
    a7e0:	add	w0, w0, #0xc
    a7e4:	b	a7cc <elf_rawdata@@ELFUTILS_1.0+0xe4>
    a7e8:	cmp	w1, #0x12
    a7ec:	b.ls	a814 <elf_rawdata@@ELFUTILS_1.0+0x12c>  // b.plast
    a7f0:	mov	w3, #0xa                   	// #10
    a7f4:	movk	w3, #0x9000, lsl #16
    a7f8:	add	w3, w1, w3
    a7fc:	mov	w0, #0x0                   	// #0
    a800:	cmp	w3, #0x9
    a804:	b.hi	a790 <elf_rawdata@@ELFUTILS_1.0+0xa8>  // b.pmore
    a808:	mov	w0, #0x1d                  	// #29
    a80c:	movk	w0, #0x9000, lsl #16
    a810:	add	w1, w1, w0
    a814:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    a818:	add	x0, x0, #0x9e8
    a81c:	ldr	w0, [x0, w1, sxtw #2]
    a820:	cmp	w0, #0x13
    a824:	ccmp	x2, #0x8, #0x0, eq  // eq = none
    a828:	mov	w1, #0x1a                  	// #26
    a82c:	csel	w0, w0, w1, ne  // ne = any
    a830:	ret
    a834:	stp	x29, x30, [sp, #-192]!
    a838:	mov	x29, sp
    a83c:	stp	x19, x20, [sp, #16]
    a840:	stp	x23, x24, [sp, #48]
    a844:	stp	x25, x26, [sp, #64]
    a848:	stp	x27, x28, [sp, #80]
    a84c:	mov	x19, x0
    a850:	ldr	x24, [x0, #136]
    a854:	ldr	w0, [x24, #32]
    a858:	cmp	w0, #0x1
    a85c:	b.eq	a968 <elf_rawdata@@ELFUTILS_1.0+0x280>  // b.none
    a860:	ldr	x1, [x19, #144]
    a864:	cbz	x1, a9a0 <elf_rawdata@@ELFUTILS_1.0+0x2b8>
    a868:	ldr	x25, [x1, #24]
    a86c:	ldr	x23, [x1, #32]
    a870:	ldr	w26, [x1, #4]
    a874:	ldr	x20, [x1, #48]
    a878:	ldr	x28, [x1, #8]
    a87c:	cmp	w26, #0x8
    a880:	cset	w27, ne  // ne = any
    a884:	cmp	x23, #0x0
    a888:	ccmp	w27, #0x0, #0x4, ne  // ne = any
    a88c:	b.eq	a8fc <elf_rawdata@@ELFUTILS_1.0+0x214>  // b.none
    a890:	tbz	w28, #11, a9b8 <elf_rawdata@@ELFUTILS_1.0+0x2d0>
    a894:	adrp	x2, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    a898:	add	x2, x2, #0x9e8
    a89c:	ldr	w1, [x24, #32]
    a8a0:	sub	w1, w1, #0x1
    a8a4:	lsl	x0, x1, #3
    a8a8:	sub	x0, x0, x1
    a8ac:	add	x2, x2, #0x78
    a8b0:	add	x0, x2, x0, lsl #2
    a8b4:	sub	x0, x0, x1
    a8b8:	ldrb	w0, [x0, #25]
    a8bc:	and	x20, x0, #0xff
    a8c0:	cmp	w0, #0x0
    a8c4:	csinc	x20, x20, xzr, ne  // ne = any
    a8c8:	ldr	x0, [x24]
    a8cc:	cbz	x0, aad8 <elf_rawdata@@ELFUTILS_1.0+0x3f0>
    a8d0:	ldr	x1, [x24, #48]
    a8d4:	cmp	x1, x25
    a8d8:	b.cc	aac8 <elf_rawdata@@ELFUTILS_1.0+0x3e0>  // b.lo, b.ul, b.last
    a8dc:	sub	x1, x1, x25
    a8e0:	cmp	x1, x23
    a8e4:	b.cc	aac8 <elf_rawdata@@ELFUTILS_1.0+0x3e0>  // b.lo, b.ul, b.last
    a8e8:	ldr	x1, [x24, #40]
    a8ec:	add	x1, x25, x1
    a8f0:	add	x0, x0, x1
    a8f4:	str	x0, [x19, #72]
    a8f8:	str	x0, [x19, #160]
    a8fc:	str	x23, [x19, #88]
    a900:	tbz	w28, #11, abec <elf_rawdata@@ELFUTILS_1.0+0x504>
    a904:	mov	w0, #0x19                  	// #25
    a908:	str	w0, [x19, #80]
    a90c:	str	xzr, [x19, #96]
    a910:	cmp	x20, #0x0
    a914:	csinc	x20, x20, xzr, ne  // ne = any
    a918:	cmp	w27, #0x0
    a91c:	ccmp	x25, x20, #0x2, ne  // ne = any
    a920:	csel	x20, x20, x25, cs  // cs = hs, nlast
    a924:	str	x20, [x19, #104]
    a928:	ldr	x0, [x24, #72]
    a92c:	ldrb	w0, [x0, #6]
    a930:	str	w0, [x19, #84]
    a934:	str	x19, [x19, #112]
    a938:	mov	w0, #0x1                   	// #1
    a93c:	str	w0, [x19, #120]
    a940:	ldr	w0, [x19, #156]
    a944:	orr	w0, w0, #0x100
    a948:	str	w0, [x19, #156]
    a94c:	mov	w0, #0x0                   	// #0
    a950:	ldp	x19, x20, [sp, #16]
    a954:	ldp	x23, x24, [sp, #48]
    a958:	ldp	x25, x26, [sp, #64]
    a95c:	ldp	x27, x28, [sp, #80]
    a960:	ldp	x29, x30, [sp], #192
    a964:	ret
    a968:	ldr	x1, [x19, #144]
    a96c:	cbz	x1, a988 <elf_rawdata@@ELFUTILS_1.0+0x2a0>
    a970:	ldr	w25, [x1, #16]
    a974:	ldr	w23, [x1, #20]
    a978:	ldr	w26, [x1, #4]
    a97c:	ldr	w20, [x1, #32]
    a980:	ldr	w28, [x1, #8]
    a984:	b	a87c <elf_rawdata@@ELFUTILS_1.0+0x194>
    a988:	mov	x0, x19
    a98c:	bl	9a90 <elf_newscn@@ELFUTILS_1.0+0x74c>
    a990:	mov	x1, x0
    a994:	mov	w0, #0x1                   	// #1
    a998:	cbz	x1, a950 <elf_rawdata@@ELFUTILS_1.0+0x268>
    a99c:	b	a970 <elf_rawdata@@ELFUTILS_1.0+0x288>
    a9a0:	mov	x0, x19
    a9a4:	bl	a018 <elf32_getshdr@@ELFUTILS_1.0+0x544>
    a9a8:	mov	x1, x0
    a9ac:	mov	w0, #0x1                   	// #1
    a9b0:	cbz	x1, a950 <elf_rawdata@@ELFUTILS_1.0+0x268>
    a9b4:	b	a868 <elf_rawdata@@ELFUTILS_1.0+0x180>
    a9b8:	cmp	w26, #0x5
    a9bc:	b.eq	a9ec <elf_rawdata@@ELFUTILS_1.0+0x304>  // b.none
    a9c0:	cmp	w26, #0x12
    a9c4:	b.ls	aa2c <elf_rawdata@@ELFUTILS_1.0+0x344>  // b.plast
    a9c8:	mov	w0, #0xa                   	// #10
    a9cc:	movk	w0, #0x9000, lsl #16
    a9d0:	add	w0, w26, w0
    a9d4:	cmp	w0, #0x9
    a9d8:	b.hi	aa78 <elf_rawdata@@ELFUTILS_1.0+0x390>  // b.pmore
    a9dc:	mov	w1, #0x1d                  	// #29
    a9e0:	movk	w1, #0x9000, lsl #16
    a9e4:	add	w1, w26, w1
    a9e8:	b	aa30 <elf_rawdata@@ELFUTILS_1.0+0x348>
    a9ec:	add	x1, sp, #0x80
    a9f0:	mov	x0, x24
    a9f4:	bl	7104 <elf64_getehdr@@ELFUTILS_1.0+0x20>
    a9f8:	ldrh	w2, [x0, #18]
    a9fc:	mov	x1, #0x8                   	// #8
    aa00:	mov	w3, #0x9026                	// #36902
    aa04:	cmp	w2, w3
    aa08:	b.eq	aaa4 <elf_rawdata@@ELFUTILS_1.0+0x3bc>  // b.none
    aa0c:	mov	x1, #0x4                   	// #4
    aa10:	cmp	w2, #0x16
    aa14:	b.ne	aaa4 <elf_rawdata@@ELFUTILS_1.0+0x3bc>  // b.any
    aa18:	ldrb	w0, [x0, #4]
    aa1c:	cmp	w0, #0x2
    aa20:	mov	x0, #0x8                   	// #8
    aa24:	csel	x1, x1, x0, ne  // ne = any
    aa28:	b	aaa4 <elf_rawdata@@ELFUTILS_1.0+0x3bc>
    aa2c:	mov	w1, w26
    aa30:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    aa34:	add	x0, x0, #0x9e8
    aa38:	ldr	w0, [x0, w1, sxtw #2]
    aa3c:	cmp	w0, #0x13
    aa40:	ccmp	x20, #0x8, #0x0, eq  // eq = none
    aa44:	b.ne	aa50 <elf_rawdata@@ELFUTILS_1.0+0x368>  // b.any
    aa48:	mov	x20, #0x8                   	// #8
    aa4c:	b	a8c8 <elf_rawdata@@ELFUTILS_1.0+0x1e0>
    aa50:	sub	w1, w0, #0xf
    aa54:	tst	w1, #0xfffffffb
    aa58:	ccmp	w0, #0x1a, #0x4, ne  // ne = any
    aa5c:	b.eq	a8c8 <elf_rawdata@@ELFUTILS_1.0+0x1e0>  // b.none
    aa60:	cmp	w0, #0x17
    aa64:	b.ne	aa7c <elf_rawdata@@ELFUTILS_1.0+0x394>  // b.any
    aa68:	ldr	w1, [x24, #32]
    aa6c:	cmp	w1, #0x2
    aa70:	b.ne	aa7c <elf_rawdata@@ELFUTILS_1.0+0x394>  // b.any
    aa74:	b	a8c8 <elf_rawdata@@ELFUTILS_1.0+0x1e0>
    aa78:	mov	w0, #0x0                   	// #0
    aa7c:	ldr	w1, [x24, #32]
    aa80:	sub	w2, w1, #0x1
    aa84:	lsl	x1, x2, #3
    aa88:	sub	x1, x1, x2
    aa8c:	lsl	x1, x1, #2
    aa90:	sub	x1, x1, x2
    aa94:	add	x0, x1, w0, uxtw
    aa98:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    aa9c:	add	x1, x1, #0x568
    aaa0:	ldr	x1, [x1, x0, lsl #3]
    aaa4:	cmp	x1, #0x0
    aaa8:	csinc	x1, x1, xzr, ne  // ne = any
    aaac:	udiv	x0, x23, x1
    aab0:	msub	x1, x0, x1, x23
    aab4:	cbz	x1, a8c8 <elf_rawdata@@ELFUTILS_1.0+0x1e0>
    aab8:	mov	w0, #0x21                  	// #33
    aabc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    aac0:	mov	w0, #0x1                   	// #1
    aac4:	b	a950 <elf_rawdata@@ELFUTILS_1.0+0x268>
    aac8:	mov	w0, #0x20                  	// #32
    aacc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    aad0:	mov	w0, #0x1                   	// #1
    aad4:	b	a950 <elf_rawdata@@ELFUTILS_1.0+0x268>
    aad8:	ldr	w0, [x24, #36]
    aadc:	cmn	w0, #0x1
    aae0:	b.eq	abdc <elf_rawdata@@ELFUTILS_1.0+0x4f4>  // b.none
    aae4:	ldr	x0, [x24, #48]
    aae8:	cmp	x0, x25
    aaec:	b.cc	ab34 <elf_rawdata@@ELFUTILS_1.0+0x44c>  // b.lo, b.ul, b.last
    aaf0:	sub	x0, x0, x25
    aaf4:	cmp	x0, x23
    aaf8:	b.cc	ab34 <elf_rawdata@@ELFUTILS_1.0+0x44c>  // b.lo, b.ul, b.last
    aafc:	mov	x0, x23
    ab00:	bl	3100 <malloc@plt>
    ab04:	str	x0, [sp, #104]
    ab08:	str	x0, [x19, #72]
    ab0c:	str	x0, [x19, #160]
    ab10:	cbz	x0, ab44 <elf_rawdata@@ELFUTILS_1.0+0x45c>
    ab14:	stp	x21, x22, [sp, #32]
    ab18:	ldr	w0, [x24, #36]
    ab1c:	str	w0, [sp, #116]
    ab20:	ldr	x0, [x24, #40]
    ab24:	add	x0, x25, x0
    ab28:	str	x0, [sp, #120]
    ab2c:	mov	x21, #0x0                   	// #0
    ab30:	b	ab68 <elf_rawdata@@ELFUTILS_1.0+0x480>
    ab34:	mov	w0, #0x20                  	// #32
    ab38:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    ab3c:	mov	w0, #0x1                   	// #1
    ab40:	b	a950 <elf_rawdata@@ELFUTILS_1.0+0x268>
    ab44:	mov	w0, #0x8                   	// #8
    ab48:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    ab4c:	mov	w0, #0x1                   	// #1
    ab50:	b	a950 <elf_rawdata@@ELFUTILS_1.0+0x268>
    ab54:	cmp	x0, #0x0
    ab58:	b.le	aba0 <elf_rawdata@@ELFUTILS_1.0+0x4b8>
    ab5c:	add	x21, x21, x0
    ab60:	cmp	x23, x21
    ab64:	b.ls	aba8 <elf_rawdata@@ELFUTILS_1.0+0x4c0>  // b.plast
    ab68:	ldr	x0, [sp, #120]
    ab6c:	add	x3, x0, x21
    ab70:	sub	x2, x23, x21
    ab74:	ldr	x0, [sp, #104]
    ab78:	add	x1, x0, x21
    ab7c:	ldr	w0, [sp, #116]
    ab80:	bl	32a0 <pread@plt>
    ab84:	mov	x22, x0
    ab88:	cmn	x0, #0x1
    ab8c:	b.ne	ab54 <elf_rawdata@@ELFUTILS_1.0+0x46c>  // b.any
    ab90:	bl	3390 <__errno_location@plt>
    ab94:	ldr	w0, [x0]
    ab98:	cmp	w0, #0x4
    ab9c:	b.eq	ab68 <elf_rawdata@@ELFUTILS_1.0+0x480>  // b.none
    aba0:	cmp	x22, #0x0
    aba4:	csel	x21, x21, x22, ge  // ge = tcont
    aba8:	cmp	x23, x21
    abac:	b.ne	abb8 <elf_rawdata@@ELFUTILS_1.0+0x4d0>  // b.any
    abb0:	ldp	x21, x22, [sp, #32]
    abb4:	b	a8fc <elf_rawdata@@ELFUTILS_1.0+0x214>
    abb8:	ldr	x0, [x19, #72]
    abbc:	bl	3250 <free@plt>
    abc0:	str	xzr, [x19, #72]
    abc4:	str	xzr, [x19, #160]
    abc8:	mov	w0, #0x13                  	// #19
    abcc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    abd0:	mov	w0, #0x1                   	// #1
    abd4:	ldp	x21, x22, [sp, #32]
    abd8:	b	a950 <elf_rawdata@@ELFUTILS_1.0+0x268>
    abdc:	mov	w0, #0x1b                  	// #27
    abe0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    abe4:	mov	w0, #0x1                   	// #1
    abe8:	b	a950 <elf_rawdata@@ELFUTILS_1.0+0x268>
    abec:	mov	x2, x20
    abf0:	mov	w1, w26
    abf4:	mov	x0, x24
    abf8:	bl	a774 <elf_rawdata@@ELFUTILS_1.0+0x8c>
    abfc:	str	w0, [x19, #80]
    ac00:	b	a90c <elf_rawdata@@ELFUTILS_1.0+0x224>
    ac04:	cbz	x0, ac1c <elf_rawdata@@ELFUTILS_1.0+0x534>
    ac08:	stp	x29, x30, [sp, #-16]!
    ac0c:	mov	x29, sp
    ac10:	bl	a834 <elf_rawdata@@ELFUTILS_1.0+0x14c>
    ac14:	ldp	x29, x30, [sp], #16
    ac18:	ret
    ac1c:	mov	w0, #0x1                   	// #1
    ac20:	ret
    ac24:	stp	x29, x30, [sp, #-80]!
    ac28:	mov	x29, sp
    ac2c:	stp	x19, x20, [sp, #16]
    ac30:	mov	x19, x0
    ac34:	ldr	x0, [x0, #72]
    ac38:	cbz	x0, ae14 <elf_rawdata@@ELFUTILS_1.0+0x72c>
    ac3c:	stp	x21, x22, [sp, #32]
    ac40:	ldr	x21, [x19, #88]
    ac44:	cbz	x21, ae10 <elf_rawdata@@ELFUTILS_1.0+0x728>
    ac48:	cbnz	w1, ac5c <elf_rawdata@@ELFUTILS_1.0+0x574>
    ac4c:	ldr	x0, [x19, #64]
    ac50:	cbz	x0, ac5c <elf_rawdata@@ELFUTILS_1.0+0x574>
    ac54:	ldp	x21, x22, [sp, #32]
    ac58:	b	ae34 <elf_rawdata@@ELFUTILS_1.0+0x74c>
    ac5c:	str	x25, [sp, #64]
    ac60:	ldr	x2, [x19, #136]
    ac64:	ldr	w22, [x19, #80]
    ac68:	ldr	w20, [x2, #32]
    ac6c:	sub	w20, w20, #0x1
    ac70:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    ac74:	add	x1, x1, #0x9e8
    ac78:	sxtw	x3, w20
    ac7c:	sbfiz	x0, x20, #3, #32
    ac80:	sub	x0, x0, x3
    ac84:	add	x1, x1, #0x78
    ac88:	add	x0, x1, x0, lsl #2
    ac8c:	sub	x0, x0, x3
    ac90:	ldrb	w1, [x0, w22, uxtw]
    ac94:	ldrb	w0, [x0, w22, uxtw]
    ac98:	cmp	w1, #0x0
    ac9c:	csinc	w0, w0, wzr, ne  // ne = any
    aca0:	and	x25, x0, #0xff
    aca4:	ldr	x0, [x2, #72]
    aca8:	ldrb	w0, [x0, #5]
    acac:	cmp	w22, #0x0
    acb0:	ccmp	w0, #0x1, #0x4, ne  // ne = any
    acb4:	b.ne	ad38 <elf_rawdata@@ELFUTILS_1.0+0x650>  // b.any
    acb8:	ldr	x20, [x19, #160]
    acbc:	sub	x0, x25, #0x1
    acc0:	tst	x20, x0
    acc4:	b.ne	ad04 <elf_rawdata@@ELFUTILS_1.0+0x61c>  // b.any
    acc8:	str	x20, [x19, #168]
    accc:	ldr	x0, [x19, #168]
    acd0:	str	x0, [x19]
    acd4:	str	x21, [x19, #16]
    acd8:	str	w22, [x19, #8]
    acdc:	ldr	x0, [x19, #96]
    ace0:	str	x0, [x19, #24]
    ace4:	ldr	x0, [x19, #104]
    ace8:	str	x0, [x19, #32]
    acec:	ldr	w0, [x19, #84]
    acf0:	str	w0, [x19, #12]
    acf4:	str	x19, [x19, #40]
    acf8:	ldp	x21, x22, [sp, #32]
    acfc:	ldr	x25, [sp, #64]
    ad00:	b	ae30 <elf_rawdata@@ELFUTILS_1.0+0x748>
    ad04:	mov	x0, x21
    ad08:	bl	3100 <malloc@plt>
    ad0c:	str	x0, [x19, #168]
    ad10:	cbz	x0, ad24 <elf_rawdata@@ELFUTILS_1.0+0x63c>
    ad14:	mov	x2, x21
    ad18:	mov	x1, x20
    ad1c:	bl	3060 <memcpy@plt>
    ad20:	b	accc <elf_rawdata@@ELFUTILS_1.0+0x5e4>
    ad24:	mov	w0, #0x8                   	// #8
    ad28:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    ad2c:	ldp	x21, x22, [sp, #32]
    ad30:	ldr	x25, [sp, #64]
    ad34:	b	ae30 <elf_rawdata@@ELFUTILS_1.0+0x748>
    ad38:	stp	x23, x24, [sp, #48]
    ad3c:	mov	x0, x21
    ad40:	bl	3100 <malloc@plt>
    ad44:	mov	x23, x0
    ad48:	str	x0, [x19, #168]
    ad4c:	cbz	x0, adb4 <elf_rawdata@@ELFUTILS_1.0+0x6cc>
    ad50:	ldr	x24, [x19, #160]
    ad54:	sub	x0, x25, #0x1
    ad58:	tst	x24, x0
    ad5c:	b.ne	adcc <elf_rawdata@@ELFUTILS_1.0+0x6e4>  // b.any
    ad60:	sxtw	x0, w20
    ad64:	sbfiz	x1, x20, #3, #32
    ad68:	sub	x1, x1, x0
    ad6c:	lsl	x1, x1, #2
    ad70:	sub	x1, x1, x0
    ad74:	add	x1, x1, w22, uxtw
    ad78:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    ad7c:	add	x0, x0, #0xbd8
    ad80:	ldr	x4, [x0, x1, lsl #3]
    ad84:	mov	w3, #0x0                   	// #0
    ad88:	mov	x2, x21
    ad8c:	mov	x1, x24
    ad90:	mov	x0, x23
    ad94:	blr	x4
    ad98:	ldr	x0, [x19, #160]
    ad9c:	cmp	x24, x0
    ada0:	b.eq	ae08 <elf_rawdata@@ELFUTILS_1.0+0x720>  // b.none
    ada4:	mov	x0, x24
    ada8:	bl	3250 <free@plt>
    adac:	ldp	x23, x24, [sp, #48]
    adb0:	b	accc <elf_rawdata@@ELFUTILS_1.0+0x5e4>
    adb4:	mov	w0, #0x8                   	// #8
    adb8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    adbc:	ldp	x21, x22, [sp, #32]
    adc0:	ldp	x23, x24, [sp, #48]
    adc4:	ldr	x25, [sp, #64]
    adc8:	b	ae30 <elf_rawdata@@ELFUTILS_1.0+0x748>
    adcc:	mov	x0, x21
    add0:	bl	3100 <malloc@plt>
    add4:	mov	x25, x0
    add8:	cbz	x0, adf0 <elf_rawdata@@ELFUTILS_1.0+0x708>
    addc:	mov	x2, x21
    ade0:	mov	x1, x24
    ade4:	bl	3060 <memcpy@plt>
    ade8:	mov	x24, x25
    adec:	b	ad60 <elf_rawdata@@ELFUTILS_1.0+0x678>
    adf0:	mov	w0, #0x8                   	// #8
    adf4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    adf8:	ldp	x21, x22, [sp, #32]
    adfc:	ldp	x23, x24, [sp, #48]
    ae00:	ldr	x25, [sp, #64]
    ae04:	b	ae30 <elf_rawdata@@ELFUTILS_1.0+0x748>
    ae08:	ldp	x23, x24, [sp, #48]
    ae0c:	b	accc <elf_rawdata@@ELFUTILS_1.0+0x5e4>
    ae10:	ldp	x21, x22, [sp, #32]
    ae14:	ldp	x2, x3, [x19, #72]
    ae18:	stp	x2, x3, [x19]
    ae1c:	ldp	x2, x3, [x19, #88]
    ae20:	stp	x2, x3, [x19, #16]
    ae24:	ldr	x0, [x19, #104]
    ae28:	str	x0, [x19, #32]
    ae2c:	str	x19, [x19, #40]
    ae30:	str	x19, [x19, #64]
    ae34:	ldp	x19, x20, [sp, #16]
    ae38:	ldp	x29, x30, [sp], #80
    ae3c:	ret
    ae40:	stp	x29, x30, [sp, #-48]!
    ae44:	mov	x29, sp
    ae48:	stp	x19, x20, [sp, #16]
    ae4c:	str	x21, [sp, #32]
    ae50:	mov	x21, x0
    ae54:	cbz	x0, af20 <elf_rawdata@@ELFUTILS_1.0+0x838>
    ae58:	mov	x20, x1
    ae5c:	ldr	x0, [x0, #136]
    ae60:	ldr	w0, [x0, #24]
    ae64:	cmp	w0, #0x3
    ae68:	b.ne	aea8 <elf_rawdata@@ELFUTILS_1.0+0x7c0>  // b.any
    ae6c:	cbz	x1, aee4 <elf_rawdata@@ELFUTILS_1.0+0x7fc>
    ae70:	ldr	x0, [x21, #64]
    ae74:	cbz	x0, aeb8 <elf_rawdata@@ELFUTILS_1.0+0x7d0>
    ae78:	ldr	x0, [x1, #40]
    ae7c:	cmp	x0, x21
    ae80:	b.ne	aeb8 <elf_rawdata@@ELFUTILS_1.0+0x7d0>  // b.any
    ae84:	mov	x19, x21
    ae88:	cmp	x21, x1
    ae8c:	b.eq	aea0 <elf_rawdata@@ELFUTILS_1.0+0x7b8>  // b.none
    ae90:	ldr	x19, [x19, #48]
    ae94:	cbz	x19, aec8 <elf_rawdata@@ELFUTILS_1.0+0x7e0>
    ae98:	cmp	x19, x20
    ae9c:	b.ne	ae90 <elf_rawdata@@ELFUTILS_1.0+0x7a8>  // b.any
    aea0:	ldr	x19, [x19, #48]
    aea4:	b	aed0 <elf_rawdata@@ELFUTILS_1.0+0x7e8>
    aea8:	mov	w0, #0x4                   	// #4
    aeac:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    aeb0:	mov	x19, #0x0                   	// #0
    aeb4:	b	aed0 <elf_rawdata@@ELFUTILS_1.0+0x7e8>
    aeb8:	mov	w0, #0x1f                  	// #31
    aebc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    aec0:	mov	x19, #0x0                   	// #0
    aec4:	b	aed0 <elf_rawdata@@ELFUTILS_1.0+0x7e8>
    aec8:	mov	w0, #0x1f                  	// #31
    aecc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    aed0:	mov	x0, x19
    aed4:	ldp	x19, x20, [sp, #16]
    aed8:	ldr	x21, [sp, #32]
    aedc:	ldp	x29, x30, [sp], #48
    aee0:	ret
    aee4:	ldr	w0, [x21, #120]
    aee8:	mov	w1, #0x0                   	// #0
    aeec:	cbz	w0, af00 <elf_rawdata@@ELFUTILS_1.0+0x818>
    aef0:	ldr	x0, [x21, #64]
    aef4:	cbz	x0, af14 <elf_rawdata@@ELFUTILS_1.0+0x82c>
    aef8:	mov	x19, x21
    aefc:	b	aed0 <elf_rawdata@@ELFUTILS_1.0+0x7e8>
    af00:	mov	x0, x21
    af04:	bl	a834 <elf_rawdata@@ELFUTILS_1.0+0x14c>
    af08:	cbnz	w0, af28 <elf_rawdata@@ELFUTILS_1.0+0x840>
    af0c:	mov	w1, #0x1                   	// #1
    af10:	b	aef0 <elf_rawdata@@ELFUTILS_1.0+0x808>
    af14:	mov	x0, x21
    af18:	bl	ac24 <elf_rawdata@@ELFUTILS_1.0+0x53c>
    af1c:	b	aef8 <elf_rawdata@@ELFUTILS_1.0+0x810>
    af20:	mov	x19, x0
    af24:	b	aed0 <elf_rawdata@@ELFUTILS_1.0+0x7e8>
    af28:	mov	x19, x20
    af2c:	b	aed0 <elf_rawdata@@ELFUTILS_1.0+0x7e8>

000000000000af30 <elf_getdata@@ELFUTILS_1.0>:
    af30:	cbz	x0, af48 <elf_getdata@@ELFUTILS_1.0+0x18>
    af34:	stp	x29, x30, [sp, #-16]!
    af38:	mov	x29, sp
    af3c:	bl	ae40 <elf_rawdata@@ELFUTILS_1.0+0x758>
    af40:	ldp	x29, x30, [sp], #16
    af44:	ret
    af48:	ret

000000000000af4c <elf_newdata@@ELFUTILS_1.0>:
    af4c:	stp	x29, x30, [sp, #-32]!
    af50:	mov	x29, sp
    af54:	stp	x19, x20, [sp, #16]
    af58:	mov	x19, x0
    af5c:	cbz	x0, b048 <elf_newdata@@ELFUTILS_1.0+0xfc>
    af60:	ldr	x0, [x0, #128]
    af64:	cbz	x0, afd4 <elf_newdata@@ELFUTILS_1.0+0x88>
    af68:	ldr	x0, [x19, #136]
    af6c:	ldr	x20, [x0, #72]
    af70:	cbz	x20, afe4 <elf_newdata@@ELFUTILS_1.0+0x98>
    af74:	ldr	w0, [x19, #120]
    af78:	cbz	w0, b004 <elf_newdata@@ELFUTILS_1.0+0xb8>
    af7c:	ldr	x0, [x19, #160]
    af80:	cbz	x0, b024 <elf_newdata@@ELFUTILS_1.0+0xd8>
    af84:	ldr	x0, [x19, #64]
    af88:	cbz	x0, aff0 <elf_newdata@@ELFUTILS_1.0+0xa4>
    af8c:	mov	x1, #0x40                  	// #64
    af90:	mov	x0, #0x1                   	// #1
    af94:	bl	3180 <calloc@plt>
    af98:	mov	x20, x0
    af9c:	cbz	x0, b03c <elf_newdata@@ELFUTILS_1.0+0xf0>
    afa0:	mov	w0, #0x81                  	// #129
    afa4:	str	w0, [x20, #56]
    afa8:	mov	w0, #0x1                   	// #1
    afac:	str	w0, [x20, #12]
    afb0:	str	x19, [x20, #40]
    afb4:	ldr	x0, [x19, #64]
    afb8:	cbz	x0, afc0 <elf_newdata@@ELFUTILS_1.0+0x74>
    afbc:	str	x20, [x0, #48]
    afc0:	str	x20, [x19, #64]
    afc4:	mov	x0, x20
    afc8:	ldp	x19, x20, [sp, #16]
    afcc:	ldp	x29, x30, [sp], #32
    afd0:	ret
    afd4:	mov	w0, #0x1e                  	// #30
    afd8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    afdc:	mov	x20, #0x0                   	// #0
    afe0:	b	afc4 <elf_newdata@@ELFUTILS_1.0+0x78>
    afe4:	mov	w0, #0x1a                  	// #26
    afe8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    afec:	b	afc4 <elf_newdata@@ELFUTILS_1.0+0x78>
    aff0:	mov	w1, #0x1                   	// #1
    aff4:	mov	x0, x19
    aff8:	bl	ac24 <elf_rawdata@@ELFUTILS_1.0+0x53c>
    affc:	ldr	w0, [x19, #120]
    b000:	cbnz	w0, b024 <elf_newdata@@ELFUTILS_1.0+0xd8>
    b004:	mov	x0, x19
    b008:	bl	a834 <elf_rawdata@@ELFUTILS_1.0+0x14c>
    b00c:	mov	x20, #0x0                   	// #0
    b010:	cbnz	w0, afc4 <elf_newdata@@ELFUTILS_1.0+0x78>
    b014:	mov	w1, #0x1                   	// #1
    b018:	mov	x0, x19
    b01c:	bl	ac24 <elf_rawdata@@ELFUTILS_1.0+0x53c>
    b020:	b	af8c <elf_newdata@@ELFUTILS_1.0+0x40>
    b024:	ldr	x0, [x19, #64]
    b028:	cbnz	x0, af8c <elf_newdata@@ELFUTILS_1.0+0x40>
    b02c:	mov	x20, x19
    b030:	mov	w0, #0x1                   	// #1
    b034:	str	w0, [x19, #56]
    b038:	b	afa8 <elf_newdata@@ELFUTILS_1.0+0x5c>
    b03c:	mov	w0, #0x8                   	// #8
    b040:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b044:	b	afc4 <elf_newdata@@ELFUTILS_1.0+0x78>
    b048:	mov	x20, x0
    b04c:	b	afc4 <elf_newdata@@ELFUTILS_1.0+0x78>

000000000000b050 <elf_getdata_rawchunk@@ELFUTILS_1.3>:
    b050:	stp	x29, x30, [sp, #-96]!
    b054:	mov	x29, sp
    b058:	stp	x19, x20, [sp, #16]
    b05c:	mov	x20, x0
    b060:	cbz	x0, b340 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2f0>
    b064:	stp	x21, x22, [sp, #32]
    b068:	stp	x23, x24, [sp, #48]
    b06c:	mov	x22, x1
    b070:	mov	x21, x2
    b074:	mov	w23, w3
    b078:	ldr	w0, [x0, #24]
    b07c:	cmp	w0, #0x3
    b080:	b.ne	b13c <elf_getdata_rawchunk@@ELFUTILS_1.3+0xec>  // b.any
    b084:	tbnz	x1, #63, b154 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x104>
    b088:	ldr	x0, [x20, #48]
    b08c:	cmp	x0, x1
    b090:	b.cc	b154 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x104>  // b.lo, b.ul, b.last
    b094:	sub	x0, x0, x1
    b098:	cmp	x0, x2
    b09c:	b.cc	b154 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x104>  // b.lo, b.ul, b.last
    b0a0:	cmp	w3, #0x1a
    b0a4:	b.hi	b16c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x11c>  // b.pmore
    b0a8:	stp	x25, x26, [sp, #64]
    b0ac:	ldr	w0, [x20, #32]
    b0b0:	sub	w1, w0, #0x1
    b0b4:	lsl	x0, x1, #3
    b0b8:	sub	x0, x0, x1
    b0bc:	adrp	x2, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    b0c0:	add	x2, x2, #0xa60
    b0c4:	add	x0, x2, x0, lsl #2
    b0c8:	sub	x0, x0, x1
    b0cc:	ldrb	w1, [x0, w3, uxtw]
    b0d0:	ldrb	w24, [x0, w3, uxtw]
    b0d4:	cmp	w1, #0x0
    b0d8:	csinc	w24, w24, wzr, ne  // ne = any
    b0dc:	and	x24, x24, #0xff
    b0e0:	ldr	x19, [x20]
    b0e4:	cbz	x19, b25c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x20c>
    b0e8:	ldr	x1, [x20, #40]
    b0ec:	add	x22, x22, x1
    b0f0:	add	x19, x19, x22
    b0f4:	sub	x0, x24, #0x1
    b0f8:	tst	x19, x0
    b0fc:	b.ne	b184 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x134>  // b.any
    b100:	ldr	x0, [x20, #72]
    b104:	ldrb	w0, [x0, #5]
    b108:	cmp	w0, #0x1
    b10c:	b.eq	b348 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2f8>  // b.none
    b110:	mov	x0, x21
    b114:	bl	3100 <malloc@plt>
    b118:	mov	x25, x0
    b11c:	cbnz	x0, b1b4 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x164>
    b120:	mov	w0, #0x8                   	// #8
    b124:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b128:	mov	x19, #0x0                   	// #0
    b12c:	ldp	x21, x22, [sp, #32]
    b130:	ldp	x23, x24, [sp, #48]
    b134:	ldp	x25, x26, [sp, #64]
    b138:	b	b24c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1fc>
    b13c:	mov	w0, #0x4                   	// #4
    b140:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b144:	mov	x19, #0x0                   	// #0
    b148:	ldp	x21, x22, [sp, #32]
    b14c:	ldp	x23, x24, [sp, #48]
    b150:	b	b24c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1fc>
    b154:	mov	w0, #0xb                   	// #11
    b158:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b15c:	mov	x19, #0x0                   	// #0
    b160:	ldp	x21, x22, [sp, #32]
    b164:	ldp	x23, x24, [sp, #48]
    b168:	b	b24c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1fc>
    b16c:	mov	w0, #0x3                   	// #3
    b170:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b174:	mov	x19, #0x0                   	// #0
    b178:	ldp	x21, x22, [sp, #32]
    b17c:	ldp	x23, x24, [sp, #48]
    b180:	b	b24c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1fc>
    b184:	mov	x0, x21
    b188:	bl	3100 <malloc@plt>
    b18c:	mov	x25, x0
    b190:	cbz	x0, b120 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xd0>
    b194:	mov	x2, x21
    b198:	mov	x1, x19
    b19c:	bl	3060 <memcpy@plt>
    b1a0:	ldr	x0, [x20, #72]
    b1a4:	ldrb	w0, [x0, #5]
    b1a8:	cmp	w0, #0x1
    b1ac:	b.eq	b304 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2b4>  // b.none
    b1b0:	mov	x19, x25
    b1b4:	ldr	w0, [x20, #32]
    b1b8:	sub	w1, w0, #0x1
    b1bc:	lsl	x0, x1, #3
    b1c0:	sub	x0, x0, x1
    b1c4:	lsl	x0, x0, #2
    b1c8:	sub	x0, x0, x1
    b1cc:	add	x0, x0, w23, uxtw
    b1d0:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    b1d4:	add	x1, x1, #0xbd8
    b1d8:	ldr	x4, [x1, x0, lsl #3]
    b1dc:	mov	w3, #0x0                   	// #0
    b1e0:	mov	x2, x21
    b1e4:	mov	x1, x19
    b1e8:	mov	x0, x25
    b1ec:	blr	x4
    b1f0:	mov	x1, #0x100                 	// #256
    b1f4:	mov	x0, #0x1                   	// #1
    b1f8:	bl	3180 <calloc@plt>
    b1fc:	mov	x1, x0
    b200:	cbz	x0, b334 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x2e4>
    b204:	mov	w0, #0x80                  	// #128
    b208:	str	x20, [x1, #184]
    b20c:	str	w0, [x1, #204]
    b210:	add	x0, x1, #0x30
    b214:	str	x0, [x1, #40]
    b218:	str	x25, [x1]
    b21c:	str	x21, [x1, #16]
    b220:	str	w23, [x1, #8]
    b224:	str	x24, [x1, #32]
    b228:	mov	w0, #0x1                   	// #1
    b22c:	str	w0, [x1, #12]
    b230:	ldr	x0, [x20, #104]
    b234:	str	x0, [x1, #48]
    b238:	str	x1, [x20, #104]
    b23c:	mov	x19, x1
    b240:	ldp	x21, x22, [sp, #32]
    b244:	ldp	x23, x24, [sp, #48]
    b248:	ldp	x25, x26, [sp, #64]
    b24c:	mov	x0, x19
    b250:	ldp	x19, x20, [sp, #16]
    b254:	ldp	x29, x30, [sp], #96
    b258:	ret
    b25c:	mov	x0, x21
    b260:	bl	3100 <malloc@plt>
    b264:	mov	x25, x0
    b268:	cbz	x0, b120 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xd0>
    b26c:	stp	x27, x28, [sp, #80]
    b270:	ldr	w27, [x20, #36]
    b274:	ldr	x28, [x20, #40]
    b278:	add	x28, x22, x28
    b27c:	mov	x22, #0x0                   	// #0
    b280:	b	b298 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x248>
    b284:	cmp	x0, #0x0
    b288:	b.le	b2c8 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x278>
    b28c:	add	x22, x22, x0
    b290:	cmp	x21, x22
    b294:	b.ls	b2d0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x280>  // b.plast
    b298:	add	x3, x28, x22
    b29c:	sub	x2, x21, x22
    b2a0:	add	x1, x25, x22
    b2a4:	mov	w0, w27
    b2a8:	bl	32a0 <pread@plt>
    b2ac:	mov	x26, x0
    b2b0:	cmn	x0, #0x1
    b2b4:	b.ne	b284 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x234>  // b.any
    b2b8:	bl	3390 <__errno_location@plt>
    b2bc:	ldr	w0, [x0]
    b2c0:	cmp	w0, #0x4
    b2c4:	b.eq	b298 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x248>  // b.none
    b2c8:	cmp	x26, #0x0
    b2cc:	csel	x22, x22, x26, ge  // ge = tcont
    b2d0:	cmp	x21, x22
    b2d4:	b.ne	b2e0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x290>  // b.any
    b2d8:	ldp	x27, x28, [sp, #80]
    b2dc:	b	b1a0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x150>
    b2e0:	mov	x0, x25
    b2e4:	bl	3250 <free@plt>
    b2e8:	mov	w0, #0x13                  	// #19
    b2ec:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b2f0:	ldp	x21, x22, [sp, #32]
    b2f4:	ldp	x23, x24, [sp, #48]
    b2f8:	ldp	x25, x26, [sp, #64]
    b2fc:	ldp	x27, x28, [sp, #80]
    b300:	b	b24c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1fc>
    b304:	sub	x0, x24, #0x1
    b308:	tst	x25, x0
    b30c:	b.eq	b1f0 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1a0>  // b.none
    b310:	stp	x27, x28, [sp, #80]
    b314:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    b318:	add	x3, x3, #0xac0
    b31c:	mov	w2, #0x82                  	// #130
    b320:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    b324:	add	x1, x1, #0xa98
    b328:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    b32c:	add	x0, x0, #0xab0
    b330:	bl	3380 <__assert_fail@plt>
    b334:	mov	x0, x25
    b338:	bl	3250 <free@plt>
    b33c:	b	b120 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xd0>
    b340:	mov	x19, x0
    b344:	b	b24c <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1fc>
    b348:	mov	x1, #0x100                 	// #256
    b34c:	mov	x0, #0x1                   	// #1
    b350:	bl	3180 <calloc@plt>
    b354:	mov	x1, x0
    b358:	cbz	x0, b120 <elf_getdata_rawchunk@@ELFUTILS_1.3+0xd0>
    b35c:	mov	x25, x19
    b360:	mov	w0, #0x0                   	// #0
    b364:	b	b208 <elf_getdata_rawchunk@@ELFUTILS_1.3+0x1b8>

000000000000b368 <elf_flagelf@@ELFUTILS_1.0>:
    b368:	cbz	x0, b3e8 <elf_flagelf@@ELFUTILS_1.0+0x80>
    b36c:	stp	x29, x30, [sp, #-16]!
    b370:	mov	x29, sp
    b374:	mov	x3, x0
    b378:	ldr	w0, [x0, #24]
    b37c:	cmp	w0, #0x3
    b380:	b.ne	b3a8 <elf_flagelf@@ELFUTILS_1.0+0x40>  // b.any
    b384:	cmp	w1, #0x5
    b388:	b.ne	b3b8 <elf_flagelf@@ELFUTILS_1.0+0x50>  // b.any
    b38c:	mov	w0, #0xd                   	// #13
    b390:	and	w2, w2, w0
    b394:	ldr	w0, [x3, #56]
    b398:	orr	w0, w2, w0
    b39c:	str	w0, [x3, #56]
    b3a0:	ldp	x29, x30, [sp], #16
    b3a4:	ret
    b3a8:	mov	w0, #0x4                   	// #4
    b3ac:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b3b0:	mov	w0, #0x0                   	// #0
    b3b4:	b	b3a0 <elf_flagelf@@ELFUTILS_1.0+0x38>
    b3b8:	cmp	w1, #0x4
    b3bc:	b.ne	b3d8 <elf_flagelf@@ELFUTILS_1.0+0x70>  // b.any
    b3c0:	mov	w0, #0xd                   	// #13
    b3c4:	and	w2, w2, w0
    b3c8:	ldr	w0, [x3, #56]
    b3cc:	bic	w0, w0, w2
    b3d0:	str	w0, [x3, #56]
    b3d4:	b	b3a0 <elf_flagelf@@ELFUTILS_1.0+0x38>
    b3d8:	mov	w0, #0x19                  	// #25
    b3dc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b3e0:	mov	w0, #0x0                   	// #0
    b3e4:	b	b3a0 <elf_flagelf@@ELFUTILS_1.0+0x38>
    b3e8:	mov	w0, #0x0                   	// #0
    b3ec:	ret

000000000000b3f0 <elf_flagehdr@@ELFUTILS_1.0>:
    b3f0:	cbz	x0, b468 <elf_flagehdr@@ELFUTILS_1.0+0x78>
    b3f4:	stp	x29, x30, [sp, #-16]!
    b3f8:	mov	x29, sp
    b3fc:	mov	x3, x0
    b400:	ldr	w0, [x0, #24]
    b404:	cmp	w0, #0x3
    b408:	b.ne	b42c <elf_flagehdr@@ELFUTILS_1.0+0x3c>  // b.any
    b40c:	cmp	w1, #0x5
    b410:	b.ne	b43c <elf_flagehdr@@ELFUTILS_1.0+0x4c>  // b.any
    b414:	and	w2, w2, #0x1
    b418:	ldr	w0, [x3, #116]
    b41c:	orr	w0, w2, w0
    b420:	str	w0, [x3, #116]
    b424:	ldp	x29, x30, [sp], #16
    b428:	ret
    b42c:	mov	w0, #0x4                   	// #4
    b430:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b434:	mov	w0, #0x0                   	// #0
    b438:	b	b424 <elf_flagehdr@@ELFUTILS_1.0+0x34>
    b43c:	cmp	w1, #0x4
    b440:	b.ne	b458 <elf_flagehdr@@ELFUTILS_1.0+0x68>  // b.any
    b444:	and	w2, w2, #0x1
    b448:	ldr	w0, [x3, #116]
    b44c:	bic	w0, w0, w2
    b450:	str	w0, [x3, #116]
    b454:	b	b424 <elf_flagehdr@@ELFUTILS_1.0+0x34>
    b458:	mov	w0, #0x19                  	// #25
    b45c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b460:	mov	w0, #0x0                   	// #0
    b464:	b	b424 <elf_flagehdr@@ELFUTILS_1.0+0x34>
    b468:	mov	w0, #0x0                   	// #0
    b46c:	ret

000000000000b470 <elf_flagphdr@@ELFUTILS_1.0>:
    b470:	cbz	x0, b4e8 <elf_flagphdr@@ELFUTILS_1.0+0x78>
    b474:	stp	x29, x30, [sp, #-16]!
    b478:	mov	x29, sp
    b47c:	mov	x3, x0
    b480:	ldr	w0, [x0, #24]
    b484:	cmp	w0, #0x3
    b488:	b.ne	b4ac <elf_flagphdr@@ELFUTILS_1.0+0x3c>  // b.any
    b48c:	cmp	w1, #0x5
    b490:	b.ne	b4bc <elf_flagphdr@@ELFUTILS_1.0+0x4c>  // b.any
    b494:	and	w2, w2, #0x1
    b498:	ldr	w0, [x3, #120]
    b49c:	orr	w0, w2, w0
    b4a0:	str	w0, [x3, #120]
    b4a4:	ldp	x29, x30, [sp], #16
    b4a8:	ret
    b4ac:	mov	w0, #0x4                   	// #4
    b4b0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b4b4:	mov	w0, #0x0                   	// #0
    b4b8:	b	b4a4 <elf_flagphdr@@ELFUTILS_1.0+0x34>
    b4bc:	cmp	w1, #0x4
    b4c0:	b.ne	b4d8 <elf_flagphdr@@ELFUTILS_1.0+0x68>  // b.any
    b4c4:	and	w2, w2, #0x1
    b4c8:	ldr	w0, [x3, #120]
    b4cc:	bic	w0, w0, w2
    b4d0:	str	w0, [x3, #120]
    b4d4:	b	b4a4 <elf_flagphdr@@ELFUTILS_1.0+0x34>
    b4d8:	mov	w0, #0x19                  	// #25
    b4dc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b4e0:	mov	w0, #0x0                   	// #0
    b4e4:	b	b4a4 <elf_flagphdr@@ELFUTILS_1.0+0x34>
    b4e8:	mov	w0, #0x0                   	// #0
    b4ec:	ret

000000000000b4f0 <elf_flagscn@@ELFUTILS_1.0>:
    b4f0:	cbz	x0, b56c <elf_flagscn@@ELFUTILS_1.0+0x7c>
    b4f4:	stp	x29, x30, [sp, #-16]!
    b4f8:	mov	x29, sp
    b4fc:	mov	x3, x0
    b500:	ldr	x0, [x0, #136]
    b504:	ldr	w0, [x0, #24]
    b508:	cmp	w0, #0x3
    b50c:	b.ne	b530 <elf_flagscn@@ELFUTILS_1.0+0x40>  // b.any
    b510:	cmp	w1, #0x5
    b514:	b.ne	b540 <elf_flagscn@@ELFUTILS_1.0+0x50>  // b.any
    b518:	and	w2, w2, #0x1
    b51c:	ldr	w0, [x3, #156]
    b520:	orr	w0, w2, w0
    b524:	str	w0, [x3, #156]
    b528:	ldp	x29, x30, [sp], #16
    b52c:	ret
    b530:	mov	w0, #0x4                   	// #4
    b534:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b538:	mov	w0, #0x0                   	// #0
    b53c:	b	b528 <elf_flagscn@@ELFUTILS_1.0+0x38>
    b540:	cmp	w1, #0x4
    b544:	b.ne	b55c <elf_flagscn@@ELFUTILS_1.0+0x6c>  // b.any
    b548:	and	w2, w2, #0x1
    b54c:	ldr	w0, [x3, #156]
    b550:	bic	w0, w0, w2
    b554:	str	w0, [x3, #156]
    b558:	b	b528 <elf_flagscn@@ELFUTILS_1.0+0x38>
    b55c:	mov	w0, #0x19                  	// #25
    b560:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b564:	mov	w0, #0x0                   	// #0
    b568:	b	b528 <elf_flagscn@@ELFUTILS_1.0+0x38>
    b56c:	mov	w0, #0x0                   	// #0
    b570:	ret

000000000000b574 <elf_flagshdr@@ELFUTILS_1.0>:
    b574:	cbz	x0, b5f0 <elf_flagshdr@@ELFUTILS_1.0+0x7c>
    b578:	stp	x29, x30, [sp, #-16]!
    b57c:	mov	x29, sp
    b580:	mov	x3, x0
    b584:	ldr	x0, [x0, #136]
    b588:	ldr	w0, [x0, #24]
    b58c:	cmp	w0, #0x3
    b590:	b.ne	b5b4 <elf_flagshdr@@ELFUTILS_1.0+0x40>  // b.any
    b594:	cmp	w1, #0x5
    b598:	b.ne	b5c4 <elf_flagshdr@@ELFUTILS_1.0+0x50>  // b.any
    b59c:	and	w2, w2, #0x1
    b5a0:	ldr	w0, [x3, #152]
    b5a4:	orr	w0, w2, w0
    b5a8:	str	w0, [x3, #152]
    b5ac:	ldp	x29, x30, [sp], #16
    b5b0:	ret
    b5b4:	mov	w0, #0x4                   	// #4
    b5b8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b5bc:	mov	w0, #0x0                   	// #0
    b5c0:	b	b5ac <elf_flagshdr@@ELFUTILS_1.0+0x38>
    b5c4:	cmp	w1, #0x4
    b5c8:	b.ne	b5e0 <elf_flagshdr@@ELFUTILS_1.0+0x6c>  // b.any
    b5cc:	and	w2, w2, #0x1
    b5d0:	ldr	w0, [x3, #152]
    b5d4:	bic	w0, w0, w2
    b5d8:	str	w0, [x3, #152]
    b5dc:	b	b5ac <elf_flagshdr@@ELFUTILS_1.0+0x38>
    b5e0:	mov	w0, #0x19                  	// #25
    b5e4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b5e8:	mov	w0, #0x0                   	// #0
    b5ec:	b	b5ac <elf_flagshdr@@ELFUTILS_1.0+0x38>
    b5f0:	mov	w0, #0x0                   	// #0
    b5f4:	ret

000000000000b5f8 <elf_flagdata@@ELFUTILS_1.0>:
    b5f8:	cbz	x0, b674 <elf_flagdata@@ELFUTILS_1.0+0x7c>
    b5fc:	stp	x29, x30, [sp, #-16]!
    b600:	mov	x29, sp
    b604:	ldr	x3, [x0, #40]
    b608:	ldr	x0, [x3, #136]
    b60c:	ldr	w0, [x0, #24]
    b610:	cmp	w0, #0x3
    b614:	b.ne	b638 <elf_flagdata@@ELFUTILS_1.0+0x40>  // b.any
    b618:	cmp	w1, #0x5
    b61c:	b.ne	b648 <elf_flagdata@@ELFUTILS_1.0+0x50>  // b.any
    b620:	and	w2, w2, #0x1
    b624:	ldr	w0, [x3, #156]
    b628:	orr	w0, w2, w0
    b62c:	str	w0, [x3, #156]
    b630:	ldp	x29, x30, [sp], #16
    b634:	ret
    b638:	mov	w0, #0x4                   	// #4
    b63c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b640:	mov	w0, #0x0                   	// #0
    b644:	b	b630 <elf_flagdata@@ELFUTILS_1.0+0x38>
    b648:	cmp	w1, #0x4
    b64c:	b.ne	b664 <elf_flagdata@@ELFUTILS_1.0+0x6c>  // b.any
    b650:	and	w2, w2, #0x1
    b654:	ldr	w0, [x3, #156]
    b658:	bic	w0, w0, w2
    b65c:	str	w0, [x3, #156]
    b660:	b	b630 <elf_flagdata@@ELFUTILS_1.0+0x38>
    b664:	mov	w0, #0x19                  	// #25
    b668:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b66c:	mov	w0, #0x0                   	// #0
    b670:	b	b630 <elf_flagdata@@ELFUTILS_1.0+0x38>
    b674:	mov	w0, #0x0                   	// #0
    b678:	ret

000000000000b67c <elf_memory@@ELFUTILS_1.0>:
    b67c:	stp	x29, x30, [sp, #-32]!
    b680:	mov	x29, sp
    b684:	str	x19, [sp, #16]
    b688:	mov	x19, x0
    b68c:	cbz	x0, b6b8 <elf_memory@@ELFUTILS_1.0+0x3c>
    b690:	mov	x3, x1
    b694:	mov	x5, #0x0                   	// #0
    b698:	mov	w4, #0x1                   	// #1
    b69c:	mov	x2, #0x0                   	// #0
    b6a0:	mov	x1, x0
    b6a4:	mov	w0, #0xffffffff            	// #-1
    b6a8:	bl	41e8 <elf_fill@@ELFUTILS_1.0+0xaf4>
    b6ac:	ldr	x19, [sp, #16]
    b6b0:	ldp	x29, x30, [sp], #32
    b6b4:	ret
    b6b8:	mov	w0, #0x17                  	// #23
    b6bc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b6c0:	mov	x0, x19
    b6c4:	b	b6ac <elf_memory@@ELFUTILS_1.0+0x30>

000000000000b6c8 <elf_update@@ELFUTILS_1.0>:
    b6c8:	stp	x29, x30, [sp, #-208]!
    b6cc:	mov	x29, sp
    b6d0:	stp	x21, x22, [sp, #32]
    b6d4:	str	wzr, [sp, #204]
    b6d8:	cmp	w1, #0x0
    b6dc:	ccmp	w1, #0x3, #0x4, ne  // ne = any
    b6e0:	ccmp	w1, #0xa, #0x4, ne  // ne = any
    b6e4:	b.ne	b7fc <elf_update@@ELFUTILS_1.0+0x134>  // b.any
    b6e8:	stp	x19, x20, [sp, #16]
    b6ec:	mov	x19, x0
    b6f0:	mov	w20, w1
    b6f4:	cbz	x0, ba78 <elf_update@@ELFUTILS_1.0+0x3b0>
    b6f8:	ldr	w0, [x0, #24]
    b6fc:	cmp	w0, #0x3
    b700:	b.ne	b80c <elf_update@@ELFUTILS_1.0+0x144>  // b.any
    b704:	ldr	x0, [x19, #72]
    b708:	cbz	x0, b820 <elf_update@@ELFUTILS_1.0+0x158>
    b70c:	ldr	x2, [x19, #96]
    b710:	ldr	w0, [x2]
    b714:	mov	x22, #0x0                   	// #0
    b718:	cbz	w0, b734 <elf_update@@ELFUTILS_1.0+0x6c>
    b71c:	sub	w0, w0, #0x1
    b720:	add	x1, x0, x0, lsl #1
    b724:	add	x0, x0, x1, lsl #2
    b728:	add	x0, x2, x0, lsl #4
    b72c:	ldr	x22, [x0, #144]
    b730:	add	x22, x22, #0x1
    b734:	ldr	w0, [x19, #32]
    b738:	cmp	w0, #0x1
    b73c:	b.eq	b834 <elf_update@@ELFUTILS_1.0+0x16c>  // b.none
    b740:	mov	x2, x22
    b744:	add	x1, sp, #0xcc
    b748:	mov	x0, x19
    b74c:	bl	c38c <elf_update@@ELFUTILS_1.0+0xcc4>
    b750:	mov	x21, x0
    b754:	cmn	x21, #0x1
    b758:	b.eq	bad8 <elf_update@@ELFUTILS_1.0+0x410>  // b.none
    b75c:	cmp	w20, #0x3
    b760:	ccmp	w20, #0xa, #0x4, ne  // ne = any
    b764:	b.ne	bae0 <elf_update@@ELFUTILS_1.0+0x418>  // b.any
    b768:	ldr	w0, [x19, #28]
    b76c:	sub	w1, w0, #0x9
    b770:	sub	w0, w0, #0x2
    b774:	cmp	w1, #0x1
    b778:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    b77c:	b.hi	b84c <elf_update@@ELFUTILS_1.0+0x184>  // b.pmore
    b780:	ldr	w1, [x19, #36]
    b784:	cmn	w1, #0x1
    b788:	b.eq	b860 <elf_update@@ELFUTILS_1.0+0x198>  // b.none
    b78c:	stp	x23, x24, [sp, #48]
    b790:	ldr	w23, [sp, #204]
    b794:	ldr	w20, [x19, #32]
    b798:	add	x2, sp, #0x48
    b79c:	mov	w0, #0x0                   	// #0
    b7a0:	bl	3340 <__fxstat@plt>
    b7a4:	cbnz	w0, b874 <elf_update@@ELFUTILS_1.0+0x1ac>
    b7a8:	ldr	x0, [x19, #8]
    b7ac:	cbz	x0, b88c <elf_update@@ELFUTILS_1.0+0x1c4>
    b7b0:	ldr	x0, [x19]
    b7b4:	cbz	x0, ba98 <elf_update@@ELFUTILS_1.0+0x3d0>
    b7b8:	cmp	w20, #0x1
    b7bc:	b.eq	b9bc <elf_update@@ELFUTILS_1.0+0x2f4>  // b.none
    b7c0:	mov	x2, x22
    b7c4:	mov	w1, w23
    b7c8:	mov	x0, x19
    b7cc:	bl	e280 <elf_update@@ELFUTILS_1.0+0x2bb8>
    b7d0:	cmp	w0, #0x0
    b7d4:	cset	w0, ne  // ne = any
    b7d8:	cbnz	w0, bac8 <elf_update@@ELFUTILS_1.0+0x400>
    b7dc:	ldr	x0, [x19, #8]
    b7e0:	cbz	x0, b9f4 <elf_update@@ELFUTILS_1.0+0x32c>
    b7e4:	ldr	w1, [sp, #88]
    b7e8:	tst	w1, #0xc00
    b7ec:	b.ne	ba14 <elf_update@@ELFUTILS_1.0+0x34c>  // b.any
    b7f0:	ldp	x19, x20, [sp, #16]
    b7f4:	ldp	x23, x24, [sp, #48]
    b7f8:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    b7fc:	mov	w0, #0xd                   	// #13
    b800:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b804:	mov	x21, #0xffffffffffffffff    	// #-1
    b808:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    b80c:	mov	w0, #0x4                   	// #4
    b810:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b814:	mov	x21, #0xffffffffffffffff    	// #-1
    b818:	ldp	x19, x20, [sp, #16]
    b81c:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    b820:	mov	w0, #0x1a                  	// #26
    b824:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b828:	mov	x21, #0xffffffffffffffff    	// #-1
    b82c:	ldp	x19, x20, [sp, #16]
    b830:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    b834:	mov	x2, x22
    b838:	add	x1, sp, #0xcc
    b83c:	mov	x0, x19
    b840:	bl	baf4 <elf_update@@ELFUTILS_1.0+0x42c>
    b844:	mov	x21, x0
    b848:	b	b754 <elf_update@@ELFUTILS_1.0+0x8c>
    b84c:	mov	w0, #0x26                  	// #38
    b850:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b854:	mov	x21, #0xffffffffffffffff    	// #-1
    b858:	ldp	x19, x20, [sp, #16]
    b85c:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    b860:	mov	w0, #0x1b                  	// #27
    b864:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b868:	mov	x21, #0xffffffffffffffff    	// #-1
    b86c:	ldp	x19, x20, [sp, #16]
    b870:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    b874:	mov	w0, #0x14                  	// #20
    b878:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b87c:	mov	x21, #0xffffffffffffffff    	// #-1
    b880:	ldp	x19, x20, [sp, #16]
    b884:	ldp	x23, x24, [sp, #48]
    b888:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    b88c:	ldr	x0, [x19, #48]
    b890:	cmn	x0, #0x1
    b894:	b.eq	b8a0 <elf_update@@ELFUTILS_1.0+0x1d8>  // b.none
    b898:	cmp	x0, x21
    b89c:	b.cs	ba90 <elf_update@@ELFUTILS_1.0+0x3c8>  // b.hs, b.nlast
    b8a0:	mov	x1, x21
    b8a4:	ldr	w0, [x19, #36]
    b8a8:	bl	3370 <ftruncate@plt>
    b8ac:	cbnz	w0, b920 <elf_update@@ELFUTILS_1.0+0x258>
    b8b0:	ldr	x0, [x19]
    b8b4:	cbz	x0, ba98 <elf_update@@ELFUTILS_1.0+0x3d0>
    b8b8:	ldr	x0, [x19, #8]
    b8bc:	cbnz	x0, b7b8 <elf_update@@ELFUTILS_1.0+0xf0>
    b8c0:	ldr	x0, [x19, #48]
    b8c4:	cmn	x0, #0x1
    b8c8:	b.eq	b8d4 <elf_update@@ELFUTILS_1.0+0x20c>  // b.none
    b8cc:	cmp	x0, x21
    b8d0:	b.cs	b7b8 <elf_update@@ELFUTILS_1.0+0xf0>  // b.hs, b.nlast
    b8d4:	mov	x2, x21
    b8d8:	mov	x1, #0x0                   	// #0
    b8dc:	ldr	w0, [x19, #36]
    b8e0:	bl	3090 <posix_fallocate@plt>
    b8e4:	cbnz	w0, b97c <elf_update@@ELFUTILS_1.0+0x2b4>
    b8e8:	ldr	w0, [x19, #28]
    b8ec:	cmp	w0, #0x9
    b8f0:	b.ne	b7b8 <elf_update@@ELFUTILS_1.0+0xf0>  // b.any
    b8f4:	ldr	x1, [x19, #48]
    b8f8:	cmp	x1, x21
    b8fc:	b.cs	b7b8 <elf_update@@ELFUTILS_1.0+0xf0>  // b.hs, b.nlast
    b900:	mov	w3, #0x0                   	// #0
    b904:	mov	x2, x21
    b908:	ldr	x0, [x19]
    b90c:	bl	30c0 <mremap@plt>
    b910:	cmn	x0, #0x1
    b914:	b.eq	b9a4 <elf_update@@ELFUTILS_1.0+0x2dc>  // b.none
    b918:	str	x21, [x19, #48]
    b91c:	b	b7b8 <elf_update@@ELFUTILS_1.0+0xf0>
    b920:	mov	w0, #0x14                  	// #20
    b924:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b928:	mov	x21, #0xffffffffffffffff    	// #-1
    b92c:	ldp	x19, x20, [sp, #16]
    b930:	ldp	x23, x24, [sp, #48]
    b934:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    b938:	mov	x5, #0x0                   	// #0
    b93c:	ldr	w4, [x19, #36]
    b940:	mov	w3, #0x1                   	// #1
    b944:	mov	w2, #0x3                   	// #3
    b948:	mov	x1, x21
    b94c:	mov	x0, #0x0                   	// #0
    b950:	bl	3230 <mmap@plt>
    b954:	str	x0, [x19]
    b958:	cmn	x0, #0x1
    b95c:	b.eq	b974 <elf_update@@ELFUTILS_1.0+0x2ac>  // b.none
    b960:	ldr	w1, [x19, #56]
    b964:	orr	w1, w1, #0x40
    b968:	str	w1, [x19, #56]
    b96c:	cbz	x0, baa4 <elf_update@@ELFUTILS_1.0+0x3dc>
    b970:	b	b8b8 <elf_update@@ELFUTILS_1.0+0x1f0>
    b974:	str	xzr, [x19]
    b978:	b	baa4 <elf_update@@ELFUTILS_1.0+0x3dc>
    b97c:	bl	3390 <__errno_location@plt>
    b980:	ldr	w0, [x0]
    b984:	cmp	w0, #0x1c
    b988:	b.ne	b8e8 <elf_update@@ELFUTILS_1.0+0x220>  // b.any
    b98c:	mov	w0, #0x14                  	// #20
    b990:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b994:	mov	x21, #0xffffffffffffffff    	// #-1
    b998:	ldp	x19, x20, [sp, #16]
    b99c:	ldp	x23, x24, [sp, #48]
    b9a0:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    b9a4:	mov	w0, #0x14                  	// #20
    b9a8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    b9ac:	mov	x21, #0xffffffffffffffff    	// #-1
    b9b0:	ldp	x19, x20, [sp, #16]
    b9b4:	ldp	x23, x24, [sp, #48]
    b9b8:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    b9bc:	mov	x2, x22
    b9c0:	mov	w1, w23
    b9c4:	mov	x0, x19
    b9c8:	bl	cddc <elf_update@@ELFUTILS_1.0+0x1714>
    b9cc:	cmp	w0, #0x0
    b9d0:	cset	w0, ne  // ne = any
    b9d4:	b	b7d8 <elf_update@@ELFUTILS_1.0+0x110>
    b9d8:	mov	x2, x22
    b9dc:	mov	w1, w23
    b9e0:	mov	x0, x19
    b9e4:	bl	d824 <elf_update@@ELFUTILS_1.0+0x215c>
    b9e8:	cmp	w0, #0x0
    b9ec:	cset	w0, ne  // ne = any
    b9f0:	b	bac4 <elf_update@@ELFUTILS_1.0+0x3fc>
    b9f4:	ldr	x0, [x19, #48]
    b9f8:	cmn	x0, #0x1
    b9fc:	b.eq	ba08 <elf_update@@ELFUTILS_1.0+0x340>  // b.none
    ba00:	cmp	x0, x21
    ba04:	b.hi	ba38 <elf_update@@ELFUTILS_1.0+0x370>  // b.pmore
    ba08:	ldr	w1, [sp, #88]
    ba0c:	tst	w1, #0xc00
    ba10:	b.eq	ba5c <elf_update@@ELFUTILS_1.0+0x394>  // b.none
    ba14:	ldr	w0, [x19, #36]
    ba18:	bl	3160 <fchmod@plt>
    ba1c:	cbz	w0, ba54 <elf_update@@ELFUTILS_1.0+0x38c>
    ba20:	mov	w0, #0x14                  	// #20
    ba24:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    ba28:	mov	x21, #0xffffffffffffffff    	// #-1
    ba2c:	ldp	x19, x20, [sp, #16]
    ba30:	ldp	x23, x24, [sp, #48]
    ba34:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    ba38:	mov	x1, x21
    ba3c:	ldr	w0, [x19, #36]
    ba40:	bl	3370 <ftruncate@plt>
    ba44:	cbnz	w0, ba6c <elf_update@@ELFUTILS_1.0+0x3a4>
    ba48:	ldr	w1, [sp, #88]
    ba4c:	tst	w1, #0xc00
    ba50:	b.ne	ba14 <elf_update@@ELFUTILS_1.0+0x34c>  // b.any
    ba54:	ldr	x0, [x19, #8]
    ba58:	cbnz	x0, ba84 <elf_update@@ELFUTILS_1.0+0x3bc>
    ba5c:	str	x21, [x19, #48]
    ba60:	ldp	x19, x20, [sp, #16]
    ba64:	ldp	x23, x24, [sp, #48]
    ba68:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    ba6c:	mov	w0, #0x14                  	// #20
    ba70:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    ba74:	b	bac8 <elf_update@@ELFUTILS_1.0+0x400>
    ba78:	mov	x21, #0xffffffffffffffff    	// #-1
    ba7c:	ldp	x19, x20, [sp, #16]
    ba80:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    ba84:	ldp	x19, x20, [sp, #16]
    ba88:	ldp	x23, x24, [sp, #48]
    ba8c:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    ba90:	ldr	x0, [x19]
    ba94:	cbnz	x0, b8c0 <elf_update@@ELFUTILS_1.0+0x1f8>
    ba98:	ldr	w0, [x19, #28]
    ba9c:	cmp	w0, #0xa
    baa0:	b.eq	b938 <elf_update@@ELFUTILS_1.0+0x270>  // b.none
    baa4:	cmp	w20, #0x1
    baa8:	b.eq	b9d8 <elf_update@@ELFUTILS_1.0+0x310>  // b.none
    baac:	mov	x2, x22
    bab0:	mov	w1, w23
    bab4:	mov	x0, x19
    bab8:	bl	ece0 <elf_update@@ELFUTILS_1.0+0x3618>
    babc:	cmp	w0, #0x0
    bac0:	cset	w0, ne  // ne = any
    bac4:	cbz	w0, b7dc <elf_update@@ELFUTILS_1.0+0x114>
    bac8:	mov	x21, #0xffffffffffffffff    	// #-1
    bacc:	ldp	x19, x20, [sp, #16]
    bad0:	ldp	x23, x24, [sp, #48]
    bad4:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    bad8:	ldp	x19, x20, [sp, #16]
    badc:	b	bae4 <elf_update@@ELFUTILS_1.0+0x41c>
    bae0:	ldp	x19, x20, [sp, #16]
    bae4:	mov	x0, x21
    bae8:	ldp	x21, x22, [sp, #32]
    baec:	ldp	x29, x30, [sp], #208
    baf0:	ret
    baf4:	stp	x29, x30, [sp, #-144]!
    baf8:	mov	x29, sp
    bafc:	stp	x19, x20, [sp, #16]
    bb00:	stp	x21, x22, [sp, #32]
    bb04:	stp	x25, x26, [sp, #64]
    bb08:	mov	x19, x0
    bb0c:	mov	x21, x1
    bb10:	mov	x26, x2
    bb14:	bl	7024 <elf64_xlatetom@@ELFUTILS_1.0+0x1668>
    bb18:	mov	x20, x0
    bb1c:	mov	x2, #0x4                   	// #4
    bb20:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    bb24:	add	x1, x1, #0x428
    bb28:	bl	3200 <memcmp@plt>
    bb2c:	cbnz	w0, bc4c <elf_update@@ELFUTILS_1.0+0x584>
    bb30:	ldrb	w0, [x20, #4]
    bb34:	cmp	w0, #0x1
    bb38:	b.eq	bb50 <elf_update@@ELFUTILS_1.0+0x488>  // b.none
    bb3c:	mov	w0, #0x1                   	// #1
    bb40:	strb	w0, [x20, #4]
    bb44:	ldr	w0, [x19, #116]
    bb48:	orr	w0, w0, #0x1
    bb4c:	str	w0, [x19, #116]
    bb50:	ldrb	w0, [x20, #5]
    bb54:	cbz	w0, bc68 <elf_update@@ELFUTILS_1.0+0x5a0>
    bb58:	cmp	w0, #0x2
    bb5c:	b.hi	bc80 <elf_update@@ELFUTILS_1.0+0x5b8>  // b.pmore
    bb60:	cmp	w0, #0x1
    bb64:	cset	w0, ne  // ne = any
    bb68:	str	w0, [x21]
    bb6c:	ldrb	w0, [x20, #6]
    bb70:	cmp	w0, #0x1
    bb74:	b.eq	bb8c <elf_update@@ELFUTILS_1.0+0x4c4>  // b.none
    bb78:	mov	w0, #0x1                   	// #1
    bb7c:	strb	w0, [x20, #6]
    bb80:	ldr	w0, [x19, #116]
    bb84:	orr	w0, w0, #0x1
    bb88:	str	w0, [x19, #116]
    bb8c:	ldr	w0, [x20, #20]
    bb90:	cbz	w0, bc90 <elf_update@@ELFUTILS_1.0+0x5c8>
    bb94:	cmp	w0, #0x1
    bb98:	b.ne	bcac <elf_update@@ELFUTILS_1.0+0x5e4>  // b.any
    bb9c:	stp	x23, x24, [sp, #48]
    bba0:	mov	x0, #0xfeff                	// #65279
    bba4:	cmp	x26, x0
    bba8:	b.hi	bcb8 <elf_update@@ELFUTILS_1.0+0x5f0>  // b.pmore
    bbac:	ldrh	w0, [x20, #48]
    bbb0:	cmp	x26, x0
    bbb4:	b.eq	bbc8 <elf_update@@ELFUTILS_1.0+0x500>  // b.none
    bbb8:	strh	w26, [x20, #48]
    bbbc:	ldr	w0, [x19, #116]
    bbc0:	orr	w0, w0, #0x1
    bbc4:	str	w0, [x19, #116]
    bbc8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    bbcc:	ldr	x23, [x0, #1408]
    bbd0:	ldrh	w0, [x20, #40]
    bbd4:	cmp	x0, x23
    bbd8:	b.ne	bcd4 <elf_update@@ELFUTILS_1.0+0x60c>  // b.any
    bbdc:	ldrh	w0, [x20, #44]
    bbe0:	cbnz	w0, bbfc <elf_update@@ELFUTILS_1.0+0x534>
    bbe4:	ldr	w0, [x20, #28]
    bbe8:	cbz	w0, bbfc <elf_update@@ELFUTILS_1.0+0x534>
    bbec:	str	wzr, [x20, #28]
    bbf0:	ldr	w0, [x19, #116]
    bbf4:	orr	w0, w0, #0x1
    bbf8:	str	w0, [x19, #116]
    bbfc:	mov	w22, w23
    bc00:	ldr	x0, [x19, #88]
    bc04:	cbz	x0, bce8 <elf_update@@ELFUTILS_1.0+0x620>
    bc08:	add	x1, sp, #0x88
    bc0c:	mov	x0, x19
    bc10:	bl	10e5c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>
    bc14:	str	w0, [sp, #96]
    bc18:	cbnz	w0, be00 <elf_update@@ELFUTILS_1.0+0x738>
    bc1c:	ldr	w0, [x19, #56]
    bc20:	and	w1, w0, #0x4
    bc24:	tbz	w0, #2, be0c <elf_update@@ELFUTILS_1.0+0x744>
    bc28:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    bc2c:	ldr	x22, [x0, #1432]
    bc30:	ldr	w21, [x20, #28]
    bc34:	ldr	x0, [sp, #136]
    bc38:	madd	x22, x22, x0, x21
    bc3c:	and	x0, x23, #0xffffffff
    bc40:	cmp	x22, w23, uxtw
    bc44:	csel	x22, x22, x0, cs  // cs = hs, nlast
    bc48:	b	bcfc <elf_update@@ELFUTILS_1.0+0x634>
    bc4c:	mov	w0, #0x457f                	// #17791
    bc50:	movk	w0, #0x464c, lsl #16
    bc54:	str	w0, [x20]
    bc58:	ldr	w0, [x19, #116]
    bc5c:	orr	w0, w0, #0x1
    bc60:	str	w0, [x19, #116]
    bc64:	b	bb30 <elf_update@@ELFUTILS_1.0+0x468>
    bc68:	mov	w0, #0x1                   	// #1
    bc6c:	strb	w0, [x20, #5]
    bc70:	ldr	w0, [x19, #116]
    bc74:	orr	w0, w0, #0x1
    bc78:	str	w0, [x19, #116]
    bc7c:	b	bb6c <elf_update@@ELFUTILS_1.0+0x4a4>
    bc80:	mov	w0, #0x22                  	// #34
    bc84:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    bc88:	mov	x0, #0xffffffffffffffff    	// #-1
    bc8c:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    bc90:	stp	x23, x24, [sp, #48]
    bc94:	mov	w0, #0x1                   	// #1
    bc98:	str	w0, [x20, #20]
    bc9c:	ldr	w0, [x19, #116]
    bca0:	orr	w0, w0, #0x1
    bca4:	str	w0, [x19, #116]
    bca8:	b	bba0 <elf_update@@ELFUTILS_1.0+0x4d8>
    bcac:	mov	w0, #0x2                   	// #2
    bcb0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    bcb4:	b	bc88 <elf_update@@ELFUTILS_1.0+0x5c0>
    bcb8:	ldrh	w0, [x20, #48]
    bcbc:	cbz	w0, bbc8 <elf_update@@ELFUTILS_1.0+0x500>
    bcc0:	strh	wzr, [x20, #48]
    bcc4:	ldr	w0, [x19, #116]
    bcc8:	orr	w0, w0, #0x1
    bccc:	str	w0, [x19, #116]
    bcd0:	b	bbc8 <elf_update@@ELFUTILS_1.0+0x500>
    bcd4:	strh	w23, [x20, #40]
    bcd8:	ldr	w0, [x19, #116]
    bcdc:	orr	w0, w0, #0x1
    bce0:	str	w0, [x19, #116]
    bce4:	b	bbdc <elf_update@@ELFUTILS_1.0+0x514>
    bce8:	mov	x0, x19
    bcec:	bl	74b4 <gelf_update_ehdr@@ELFUTILS_1.0+0x150>
    bcf0:	ldr	x0, [x19, #88]
    bcf4:	str	wzr, [sp, #96]
    bcf8:	cbnz	x0, bc08 <elf_update@@ELFUTILS_1.0+0x540>
    bcfc:	cbz	x26, c310 <elf_update@@ELFUTILS_1.0+0xc48>
    bd00:	stp	x27, x28, [sp, #80]
    bd04:	ldr	w0, [x19, #200]
    bd08:	cbz	w0, be3c <elf_update@@ELFUTILS_1.0+0x774>
    bd0c:	mov	x0, #0xfeff                	// #65279
    bd10:	cmp	x26, x0
    bd14:	b.ls	bd38 <elf_update@@ELFUTILS_1.0+0x670>  // b.plast
    bd18:	ldr	x0, [x19, #360]
    bd1c:	ldr	w1, [x0, #20]
    bd20:	cmp	x1, x26
    bd24:	b.eq	bd38 <elf_update@@ELFUTILS_1.0+0x670>  // b.none
    bd28:	str	w26, [x0, #20]
    bd2c:	ldr	w0, [x19, #368]
    bd30:	orr	w0, w0, #0x1
    bd34:	str	w0, [x19, #368]
    bd38:	add	x0, x19, #0xc8
    bd3c:	str	x0, [sp, #104]
    bd40:	ldr	w0, [x19, #200]
    bd44:	cmp	w0, #0x1
    bd48:	b.ls	be5c <elf_update@@ELFUTILS_1.0+0x794>  // b.plast
    bd4c:	add	x0, x19, #0x1a8
    bd50:	ldr	x1, [x0, #144]
    bd54:	cbz	x1, be6c <elf_update@@ELFUTILS_1.0+0x7a4>
    bd58:	mov	w1, #0x1                   	// #1
    bd5c:	str	wzr, [sp, #100]
    bd60:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    bd64:	add	x0, x0, #0x568
    bd68:	str	x0, [sp, #112]
    bd6c:	and	x28, x1, #0xff
    bd70:	ldr	x3, [sp, #104]
    bd74:	ldr	w0, [x3]
    bd78:	mov	w2, w0
    bd7c:	cmp	x2, w1, uxtb
    bd80:	b.ls	c240 <elf_update@@ELFUTILS_1.0+0xb78>  // b.plast
    bd84:	lsl	x25, x28, #1
    bd88:	add	x25, x25, x28
    bd8c:	add	x25, x28, x25, lsl #2
    bd90:	add	x25, x3, x25, lsl #4
    bd94:	add	x25, x25, #0x10
    bd98:	mov	x24, x25
    bd9c:	ldr	x23, [x25, #144]
    bda0:	cbz	x23, be74 <elf_update@@ELFUTILS_1.0+0x7ac>
    bda4:	ldr	w1, [x23, #36]
    bda8:	ldr	w21, [x23, #32]
    bdac:	cmp	w21, #0x0
    bdb0:	csinc	w21, w21, wzr, ne  // ne = any
    bdb4:	sub	w0, w21, #0x1
    bdb8:	ands	w0, w0, w21
    bdbc:	str	w0, [sp, #120]
    bdc0:	b.ne	be94 <elf_update@@ELFUTILS_1.0+0x7cc>  // b.any
    bdc4:	ldr	w0, [x23, #4]
    bdc8:	cmp	w0, #0xb
    bdcc:	b.eq	c024 <elf_update@@ELFUTILS_1.0+0x95c>  // b.none
    bdd0:	cmp	w0, #0xb
    bdd4:	b.hi	bec8 <elf_update@@ELFUTILS_1.0+0x800>  // b.pmore
    bdd8:	cmp	w0, #0x5
    bddc:	b.eq	bfe0 <elf_update@@ELFUTILS_1.0+0x918>  // b.none
    bde0:	b.ls	beac <elf_update@@ELFUTILS_1.0+0x7e4>  // b.plast
    bde4:	cmp	w0, #0x6
    bde8:	b.eq	c018 <elf_update@@ELFUTILS_1.0+0x950>  // b.none
    bdec:	cmp	w0, #0x9
    bdf0:	b.ne	bf2c <elf_update@@ELFUTILS_1.0+0x864>  // b.any
    bdf4:	ldr	x0, [sp, #112]
    bdf8:	ldr	w0, [x0, #64]
    bdfc:	b	bf14 <elf_update@@ELFUTILS_1.0+0x84c>
    be00:	mov	x0, #0xffffffffffffffff    	// #-1
    be04:	ldp	x23, x24, [sp, #48]
    be08:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    be0c:	ldr	w0, [x20, #28]
    be10:	str	w1, [sp, #96]
    be14:	cmp	x0, x23
    be18:	b.eq	be28 <elf_update@@ELFUTILS_1.0+0x760>  // b.none
    be1c:	str	w23, [x20, #28]
    be20:	mov	w0, #0x1                   	// #1
    be24:	str	w0, [sp, #96]
    be28:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    be2c:	ldr	x22, [x0, #1432]
    be30:	ldr	x0, [sp, #136]
    be34:	madd	w22, w22, w0, w23
    be38:	b	bcfc <elf_update@@ELFUTILS_1.0+0x634>
    be3c:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    be40:	add	x3, x3, #0xb60
    be44:	mov	w2, #0xb4                  	// #180
    be48:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    be4c:	add	x1, x1, #0xad8
    be50:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    be54:	add	x0, x0, #0xaf0
    be58:	bl	3380 <__assert_fail@plt>
    be5c:	ldr	x0, [x19, #208]
    be60:	cbz	x0, bd58 <elf_update@@ELFUTILS_1.0+0x690>
    be64:	add	x0, x0, #0x10
    be68:	b	bd50 <elf_update@@ELFUTILS_1.0+0x688>
    be6c:	bl	9a90 <elf_newscn@@ELFUTILS_1.0+0x74c>
    be70:	b	bd58 <elf_update@@ELFUTILS_1.0+0x690>
    be74:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    be78:	add	x3, x3, #0xb60
    be7c:	mov	w2, #0xd6                  	// #214
    be80:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    be84:	add	x1, x1, #0xad8
    be88:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    be8c:	add	x0, x0, #0xb20
    be90:	bl	3380 <__assert_fail@plt>
    be94:	mov	w0, #0x24                  	// #36
    be98:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    be9c:	mov	x0, #0xffffffffffffffff    	// #-1
    bea0:	ldp	x23, x24, [sp, #48]
    bea4:	ldp	x27, x28, [sp, #80]
    bea8:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    beac:	cmp	w0, #0x2
    beb0:	b.eq	bfb0 <elf_update@@ELFUTILS_1.0+0x8e8>  // b.none
    beb4:	cmp	w0, #0x4
    beb8:	b.ne	bf2c <elf_update@@ELFUTILS_1.0+0x864>  // b.any
    bebc:	ldr	x0, [sp, #112]
    bec0:	ldr	w0, [x0, #56]
    bec4:	b	bf14 <elf_update@@ELFUTILS_1.0+0x84c>
    bec8:	mov	w2, #0xfffa                	// #65530
    becc:	movk	w2, #0x6fff, lsl #16
    bed0:	cmp	w0, w2
    bed4:	b.eq	c030 <elf_update@@ELFUTILS_1.0+0x968>  // b.none
    bed8:	cmp	w0, w2
    bedc:	b.ls	befc <elf_update@@ELFUTILS_1.0+0x834>  // b.plast
    bee0:	mov	w2, #0xfffc                	// #65532
    bee4:	movk	w2, #0x6fff, lsl #16
    bee8:	cmp	w0, w2
    beec:	b.ne	bf2c <elf_update@@ELFUTILS_1.0+0x864>  // b.any
    bef0:	ldr	x0, [sp, #112]
    bef4:	ldr	w0, [x0, #160]
    bef8:	b	bf14 <elf_update@@ELFUTILS_1.0+0x84c>
    befc:	cmp	w0, #0x11
    bf00:	b.eq	bfbc <elf_update@@ELFUTILS_1.0+0x8f4>  // b.none
    bf04:	cmp	w0, #0x12
    bf08:	b.ne	bf2c <elf_update@@ELFUTILS_1.0+0x864>  // b.any
    bf0c:	ldr	x0, [sp, #112]
    bf10:	ldr	w0, [x0, #96]
    bf14:	cmp	w0, w1
    bf18:	b.eq	bf2c <elf_update@@ELFUTILS_1.0+0x864>  // b.none
    bf1c:	str	w0, [x23, #36]
    bf20:	ldr	w0, [x24, #152]
    bf24:	orr	w0, w0, #0x1
    bf28:	str	w0, [x24, #152]
    bf2c:	ldr	w0, [x24, #120]
    bf30:	cbz	w0, c03c <elf_update@@ELFUTILS_1.0+0x974>
    bf34:	ldr	x0, [x24, #64]
    bf38:	cbnz	x0, c058 <elf_update@@ELFUTILS_1.0+0x990>
    bf3c:	ldr	x27, [x24, #88]
    bf40:	ldr	w0, [x19, #56]
    bf44:	and	w1, w0, #0x4
    bf48:	str	w1, [sp, #124]
    bf4c:	tbz	w0, #2, c154 <elf_update@@ELFUTILS_1.0+0xa8c>
    bf50:	ldr	w0, [x23, #4]
    bf54:	cmp	w0, #0x8
    bf58:	b.eq	bf6c <elf_update@@ELFUTILS_1.0+0x8a4>  // b.none
    bf5c:	ldr	w1, [x23, #16]
    bf60:	ldr	w0, [x23, #20]
    bf64:	add	w0, w1, w0
    bf68:	str	w0, [sp, #120]
    bf6c:	ldr	w0, [sp, #120]
    bf70:	cmp	w22, w0
    bf74:	csel	w22, w22, w0, cs  // cs = hs, nlast
    bf78:	ldr	w0, [x23, #32]
    bf7c:	sub	w1, w0, #0x1
    bf80:	tst	w1, w0
    bf84:	b.ne	bf98 <elf_update@@ELFUTILS_1.0+0x8d0>  // b.any
    bf88:	cmp	w0, #0x0
    bf8c:	csinc	w0, w0, wzr, ne  // ne = any
    bf90:	cmp	w21, w0
    bf94:	b.ls	c1f8 <elf_update@@ELFUTILS_1.0+0xb30>  // b.plast
    bf98:	mov	w0, #0x24                  	// #36
    bf9c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    bfa0:	mov	x0, #0xffffffffffffffff    	// #-1
    bfa4:	ldp	x23, x24, [sp, #48]
    bfa8:	ldp	x27, x28, [sp, #80]
    bfac:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    bfb0:	ldr	x0, [sp, #112]
    bfb4:	ldr	w0, [x0, #88]
    bfb8:	b	bf14 <elf_update@@ELFUTILS_1.0+0x84c>
    bfbc:	ldrh	w0, [x20, #16]
    bfc0:	cmp	w0, #0x1
    bfc4:	b.eq	bf0c <elf_update@@ELFUTILS_1.0+0x844>  // b.none
    bfc8:	mov	w0, #0x28                  	// #40
    bfcc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    bfd0:	mov	x0, #0xffffffffffffffff    	// #-1
    bfd4:	ldp	x23, x24, [sp, #48]
    bfd8:	ldp	x27, x28, [sp, #80]
    bfdc:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    bfe0:	ldrh	w2, [x20, #18]
    bfe4:	mov	w0, #0x8                   	// #8
    bfe8:	mov	w3, #0x9026                	// #36902
    bfec:	cmp	w2, w3
    bff0:	b.eq	bf14 <elf_update@@ELFUTILS_1.0+0x84c>  // b.none
    bff4:	mov	w0, #0x4                   	// #4
    bff8:	cmp	w2, #0x16
    bffc:	b.ne	bf14 <elf_update@@ELFUTILS_1.0+0x84c>  // b.any
    c000:	ldrb	w0, [x20, #4]
    c004:	cmp	w0, #0x2
    c008:	mov	w0, #0x4                   	// #4
    c00c:	mov	w2, #0x8                   	// #8
    c010:	csel	w0, w0, w2, ne  // ne = any
    c014:	b	bf14 <elf_update@@ELFUTILS_1.0+0x84c>
    c018:	ldr	x0, [sp, #112]
    c01c:	ldr	w0, [x0, #16]
    c020:	b	bf14 <elf_update@@ELFUTILS_1.0+0x84c>
    c024:	ldr	x0, [sp, #112]
    c028:	ldr	w0, [x0, #88]
    c02c:	b	bf14 <elf_update@@ELFUTILS_1.0+0x84c>
    c030:	ldr	x0, [sp, #112]
    c034:	ldr	w0, [x0, #168]
    c038:	b	bf14 <elf_update@@ELFUTILS_1.0+0x84c>
    c03c:	mov	x0, x24
    c040:	bl	a834 <elf_rawdata@@ELFUTILS_1.0+0x14c>
    c044:	cbz	w0, bf34 <elf_update@@ELFUTILS_1.0+0x86c>
    c048:	mov	x0, #0xffffffffffffffff    	// #-1
    c04c:	ldp	x23, x24, [sp, #48]
    c050:	ldp	x27, x28, [sp, #80]
    c054:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    c058:	add	x4, x25, #0x48
    c05c:	mov	x2, x24
    c060:	mov	x27, #0x0                   	// #0
    c064:	b	c0e8 <elf_update@@ELFUTILS_1.0+0xa20>
    c068:	ldr	x0, [x2]
    c06c:	cbnz	x0, c0f4 <elf_update@@ELFUTILS_1.0+0xa2c>
    c070:	ldr	x0, [x24, #72]
    c074:	cmp	x0, #0x0
    c078:	csel	x1, x2, x4, eq  // eq = none
    c07c:	b	c0f4 <elf_update@@ELFUTILS_1.0+0xa2c>
    c080:	mov	w0, #0x2                   	// #2
    c084:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c088:	mov	x0, #0xffffffffffffffff    	// #-1
    c08c:	ldp	x23, x24, [sp, #48]
    c090:	ldp	x27, x28, [sp, #80]
    c094:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    c098:	mov	w0, #0x24                  	// #36
    c09c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c0a0:	mov	x0, #0xffffffffffffffff    	// #-1
    c0a4:	ldp	x23, x24, [sp, #48]
    c0a8:	ldp	x27, x28, [sp, #80]
    c0ac:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    c0b0:	sub	x27, x27, #0x1
    c0b4:	add	x27, x27, x0
    c0b8:	neg	x0, x0
    c0bc:	and	x0, x27, x0
    c0c0:	ldr	x3, [x1, #24]
    c0c4:	cmp	x3, x0
    c0c8:	b.eq	c0d8 <elf_update@@ELFUTILS_1.0+0xa10>  // b.none
    c0cc:	str	x0, [x1, #24]
    c0d0:	mov	w3, #0x1                   	// #1
    c0d4:	str	w3, [sp, #100]
    c0d8:	ldr	x27, [x1, #16]
    c0dc:	add	x27, x0, x27
    c0e0:	ldr	x2, [x2, #48]
    c0e4:	cbz	x2, bf40 <elf_update@@ELFUTILS_1.0+0x878>
    c0e8:	mov	x1, x2
    c0ec:	cmp	x2, x24
    c0f0:	b.eq	c068 <elf_update@@ELFUTILS_1.0+0x9a0>  // b.none
    c0f4:	ldr	w0, [x1, #12]
    c0f8:	cmp	w0, #0x1
    c0fc:	b.ne	c080 <elf_update@@ELFUTILS_1.0+0x9b8>  // b.any
    c100:	ldr	x0, [x1, #32]
    c104:	sub	x3, x0, #0x1
    c108:	tst	x3, x0
    c10c:	b.ne	c098 <elf_update@@ELFUTILS_1.0+0x9d0>  // b.any
    c110:	mov	w21, w21
    c114:	cmp	x21, x0
    c118:	csel	x21, x21, x0, cs  // cs = hs, nlast
    c11c:	ldr	w3, [x19, #56]
    c120:	tbz	w3, #2, c0b0 <elf_update@@ELFUTILS_1.0+0x9e8>
    c124:	ldr	x0, [x1, #24]
    c128:	ldr	x1, [x1, #16]
    c12c:	add	w0, w0, w1
    c130:	ldr	w1, [x23, #20]
    c134:	cmp	w0, w1
    c138:	b.ls	c0e0 <elf_update@@ELFUTILS_1.0+0xa18>  // b.plast
    c13c:	mov	w0, #0x23                  	// #35
    c140:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c144:	mov	x0, #0xffffffffffffffff    	// #-1
    c148:	ldp	x23, x24, [sp, #48]
    c14c:	ldp	x27, x28, [sp, #80]
    c150:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    c154:	ldr	w0, [x23, #32]
    c158:	cmp	w0, w21
    c15c:	b.eq	c170 <elf_update@@ELFUTILS_1.0+0xaa8>  // b.none
    c160:	str	w21, [x23, #32]
    c164:	ldr	w0, [x24, #152]
    c168:	orr	w0, w0, #0x1
    c16c:	str	w0, [x24, #152]
    c170:	sub	w22, w22, #0x1
    c174:	add	w22, w22, w21
    c178:	neg	w21, w21
    c17c:	and	w22, w21, w22
    c180:	ldr	w0, [x23, #16]
    c184:	cmp	w0, w22
    c188:	b.eq	c27c <elf_update@@ELFUTILS_1.0+0xbb4>  // b.none
    c18c:	str	w22, [x23, #16]
    c190:	ldr	x1, [x24, #64]
    c194:	mov	w0, #0x1                   	// #1
    c198:	str	w0, [sp, #100]
    c19c:	cbz	x1, c264 <elf_update@@ELFUTILS_1.0+0xb9c>
    c1a0:	mov	w1, w27
    c1a4:	ldr	w2, [x23, #20]
    c1a8:	cmp	w2, w27
    c1ac:	b.eq	c1bc <elf_update@@ELFUTILS_1.0+0xaf4>  // b.none
    c1b0:	str	w27, [x23, #20]
    c1b4:	mov	w2, #0x1                   	// #1
    c1b8:	str	w2, [sp, #124]
    c1bc:	ldr	w2, [sp, #100]
    c1c0:	ldr	w4, [sp, #124]
    c1c4:	orr	w3, w2, w4
    c1c8:	str	w3, [sp, #100]
    c1cc:	ldr	w2, [x23, #4]
    c1d0:	add	w1, w22, w1
    c1d4:	cmp	w2, #0x8
    c1d8:	csel	w22, w1, w22, ne  // ne = any
    c1dc:	orr	w0, w4, w0
    c1e0:	ldr	w1, [x24, #152]
    c1e4:	orr	w0, w1, w0
    c1e8:	str	w0, [x24, #152]
    c1ec:	ldr	w0, [x24, #156]
    c1f0:	orr	w0, w0, w3
    c1f4:	str	w0, [x24, #156]
    c1f8:	ldr	w0, [x23, #36]
    c1fc:	cmp	w0, #0x1
    c200:	b.ls	c228 <elf_update@@ELFUTILS_1.0+0xb60>  // b.plast
    c204:	ldr	w0, [x19, #56]
    c208:	tbnz	w0, #3, c228 <elf_update@@ELFUTILS_1.0+0xb60>
    c20c:	ldr	w0, [x23, #8]
    c210:	tbnz	w0, #11, c284 <elf_update@@ELFUTILS_1.0+0xbbc>
    c214:	ldr	w2, [x23, #20]
    c218:	ldr	w1, [x23, #36]
    c21c:	udiv	w0, w2, w1
    c220:	msub	w0, w0, w1, w2
    c224:	cbnz	w0, c298 <elf_update@@ELFUTILS_1.0+0xbd0>
    c228:	add	x28, x28, #0x1
    c22c:	ldr	x0, [sp, #104]
    c230:	ldr	w0, [x0]
    c234:	add	x25, x25, #0xd0
    c238:	cmp	x28, w0, uxtw
    c23c:	b.cc	bd98 <elf_update@@ELFUTILS_1.0+0x6d0>  // b.lo, b.ul, b.last
    c240:	ldr	x3, [sp, #104]
    c244:	ldr	x2, [x3, #8]
    c248:	cbz	x2, c2d0 <elf_update@@ELFUTILS_1.0+0xc08>
    c24c:	mov	w1, #0x0                   	// #0
    c250:	ldr	w3, [x3, #4]
    c254:	cmp	w0, w3
    c258:	b.ne	c2b0 <elf_update@@ELFUTILS_1.0+0xbe8>  // b.any
    c25c:	str	x2, [sp, #104]
    c260:	b	bd6c <elf_update@@ELFUTILS_1.0+0x6a4>
    c264:	mov	x0, x24
    c268:	bl	ae40 <elf_rawdata@@ELFUTILS_1.0+0x758>
    c26c:	cbz	x0, c36c <elf_update@@ELFUTILS_1.0+0xca4>
    c270:	mov	w0, #0x1                   	// #1
    c274:	str	w0, [sp, #100]
    c278:	b	c1a0 <elf_update@@ELFUTILS_1.0+0xad8>
    c27c:	ldr	w0, [sp, #124]
    c280:	b	c1a0 <elf_update@@ELFUTILS_1.0+0xad8>
    c284:	mov	x0, x24
    c288:	bl	30d0 <elf32_getchdr@plt>
    c28c:	cbz	x0, c37c <elf_update@@ELFUTILS_1.0+0xcb4>
    c290:	ldr	w2, [x0, #4]
    c294:	b	c218 <elf_update@@ELFUTILS_1.0+0xb50>
    c298:	mov	w0, #0x25                  	// #37
    c29c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c2a0:	mov	x0, #0xffffffffffffffff    	// #-1
    c2a4:	ldp	x23, x24, [sp, #48]
    c2a8:	ldp	x27, x28, [sp, #80]
    c2ac:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    c2b0:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c2b4:	add	x3, x3, #0xb60
    c2b8:	mov	w2, #0x19b                 	// #411
    c2bc:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c2c0:	add	x1, x1, #0xad8
    c2c4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c2c8:	add	x0, x0, #0xb30
    c2cc:	bl	3380 <__assert_fail@plt>
    c2d0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c2d4:	ldr	x0, [x0, #1456]
    c2d8:	ldrh	w1, [x20, #46]
    c2dc:	cmp	x1, x0
    c2e0:	b.eq	c2f0 <elf_update@@ELFUTILS_1.0+0xc28>  // b.none
    c2e4:	strh	w0, [x20, #46]
    c2e8:	mov	w1, #0x1                   	// #1
    c2ec:	str	w1, [sp, #96]
    c2f0:	ldr	w1, [x19, #56]
    c2f4:	tbz	w1, #2, c33c <elf_update@@ELFUTILS_1.0+0xc74>
    c2f8:	ldr	w1, [x20, #32]
    c2fc:	madd	x0, x26, x0, x1
    c300:	mov	w1, w22
    c304:	cmp	x0, w22, uxtw
    c308:	csel	x22, x0, x1, cs  // cs = hs, nlast
    c30c:	ldp	x27, x28, [sp, #80]
    c310:	ldr	w0, [x19, #116]
    c314:	ldr	w1, [sp, #96]
    c318:	orr	w0, w0, w1
    c31c:	str	w0, [x19, #116]
    c320:	mov	w0, w22
    c324:	ldp	x23, x24, [sp, #48]
    c328:	ldp	x19, x20, [sp, #16]
    c32c:	ldp	x21, x22, [sp, #32]
    c330:	ldp	x25, x26, [sp, #64]
    c334:	ldp	x29, x30, [sp], #144
    c338:	ret
    c33c:	add	w22, w22, #0x3
    c340:	and	w22, w22, #0xfffffffc
    c344:	ldr	w1, [x20, #32]
    c348:	cmp	w1, w22
    c34c:	b.eq	c360 <elf_update@@ELFUTILS_1.0+0xc98>  // b.none
    c350:	str	w22, [x20, #32]
    c354:	ldr	w1, [x19, #56]
    c358:	orr	w1, w1, #0x1
    c35c:	str	w1, [x19, #56]
    c360:	madd	w22, w0, w26, w22
    c364:	ldp	x27, x28, [sp, #80]
    c368:	b	c310 <elf_update@@ELFUTILS_1.0+0xc48>
    c36c:	mov	x0, #0xffffffffffffffff    	// #-1
    c370:	ldp	x23, x24, [sp, #48]
    c374:	ldp	x27, x28, [sp, #80]
    c378:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    c37c:	mov	x0, #0xffffffffffffffff    	// #-1
    c380:	ldp	x23, x24, [sp, #48]
    c384:	ldp	x27, x28, [sp, #80]
    c388:	b	c328 <elf_update@@ELFUTILS_1.0+0xc60>
    c38c:	stp	x29, x30, [sp, #-160]!
    c390:	mov	x29, sp
    c394:	stp	x19, x20, [sp, #16]
    c398:	stp	x21, x22, [sp, #32]
    c39c:	stp	x25, x26, [sp, #64]
    c3a0:	mov	x19, x0
    c3a4:	mov	x21, x1
    c3a8:	mov	x26, x2
    c3ac:	bl	70cc <elf32_getehdr@@ELFUTILS_1.0+0x90>
    c3b0:	mov	x20, x0
    c3b4:	mov	x2, #0x4                   	// #4
    c3b8:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c3bc:	add	x1, x1, #0x428
    c3c0:	bl	3200 <memcmp@plt>
    c3c4:	cbnz	w0, c4d8 <elf_update@@ELFUTILS_1.0+0xe10>
    c3c8:	ldrb	w0, [x20, #4]
    c3cc:	cmp	w0, #0x2
    c3d0:	b.eq	c3e8 <elf_update@@ELFUTILS_1.0+0xd20>  // b.none
    c3d4:	mov	w0, #0x2                   	// #2
    c3d8:	strb	w0, [x20, #4]
    c3dc:	ldr	w0, [x19, #116]
    c3e0:	orr	w0, w0, #0x1
    c3e4:	str	w0, [x19, #116]
    c3e8:	ldrb	w0, [x20, #5]
    c3ec:	cbz	w0, c4f4 <elf_update@@ELFUTILS_1.0+0xe2c>
    c3f0:	cmp	w0, #0x2
    c3f4:	b.hi	c50c <elf_update@@ELFUTILS_1.0+0xe44>  // b.pmore
    c3f8:	cmp	w0, #0x1
    c3fc:	cset	w0, ne  // ne = any
    c400:	str	w0, [x21]
    c404:	ldrb	w0, [x20, #6]
    c408:	cmp	w0, #0x1
    c40c:	b.eq	c424 <elf_update@@ELFUTILS_1.0+0xd5c>  // b.none
    c410:	mov	w0, #0x1                   	// #1
    c414:	strb	w0, [x20, #6]
    c418:	ldr	w0, [x19, #116]
    c41c:	orr	w0, w0, #0x1
    c420:	str	w0, [x19, #116]
    c424:	ldr	w0, [x20, #20]
    c428:	cbz	w0, c51c <elf_update@@ELFUTILS_1.0+0xe54>
    c42c:	cmp	w0, #0x1
    c430:	b.ne	c534 <elf_update@@ELFUTILS_1.0+0xe6c>  // b.any
    c434:	mov	x0, #0xfeff                	// #65279
    c438:	cmp	x26, x0
    c43c:	b.hi	c540 <elf_update@@ELFUTILS_1.0+0xe78>  // b.pmore
    c440:	ldrh	w0, [x20, #60]
    c444:	cmp	x26, x0
    c448:	b.eq	c45c <elf_update@@ELFUTILS_1.0+0xd94>  // b.none
    c44c:	strh	w26, [x20, #60]
    c450:	ldr	w0, [x19, #116]
    c454:	orr	w0, w0, #0x1
    c458:	str	w0, [x19, #116]
    c45c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c460:	ldr	x22, [x0, #1624]
    c464:	ldrh	w0, [x20, #52]
    c468:	cmp	x0, x22
    c46c:	b.ne	c55c <elf_update@@ELFUTILS_1.0+0xe94>  // b.any
    c470:	ldrh	w0, [x20, #56]
    c474:	cbnz	w0, c490 <elf_update@@ELFUTILS_1.0+0xdc8>
    c478:	ldr	x0, [x20, #32]
    c47c:	cbz	x0, c490 <elf_update@@ELFUTILS_1.0+0xdc8>
    c480:	str	xzr, [x20, #32]
    c484:	ldr	w0, [x19, #116]
    c488:	orr	w0, w0, #0x1
    c48c:	str	w0, [x19, #116]
    c490:	ldr	x0, [x19, #88]
    c494:	cbz	x0, c570 <elf_update@@ELFUTILS_1.0+0xea8>
    c498:	add	x1, sp, #0x98
    c49c:	mov	x0, x19
    c4a0:	bl	10e5c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>
    c4a4:	str	w0, [sp, #108]
    c4a8:	cbnz	w0, c68c <elf_update@@ELFUTILS_1.0+0xfc4>
    c4ac:	ldr	w0, [x19, #56]
    c4b0:	and	w1, w0, #0x4
    c4b4:	tbz	w0, #2, c694 <elf_update@@ELFUTILS_1.0+0xfcc>
    c4b8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c4bc:	ldr	x0, [x0, #1648]
    c4c0:	ldr	x1, [x20, #32]
    c4c4:	ldr	x2, [sp, #152]
    c4c8:	madd	x0, x0, x2, x1
    c4cc:	cmp	x22, x0
    c4d0:	csel	x22, x22, x0, cs  // cs = hs, nlast
    c4d4:	b	c584 <elf_update@@ELFUTILS_1.0+0xebc>
    c4d8:	mov	w0, #0x457f                	// #17791
    c4dc:	movk	w0, #0x464c, lsl #16
    c4e0:	str	w0, [x20]
    c4e4:	ldr	w0, [x19, #116]
    c4e8:	orr	w0, w0, #0x1
    c4ec:	str	w0, [x19, #116]
    c4f0:	b	c3c8 <elf_update@@ELFUTILS_1.0+0xd00>
    c4f4:	mov	w0, #0x1                   	// #1
    c4f8:	strb	w0, [x20, #5]
    c4fc:	ldr	w0, [x19, #116]
    c500:	orr	w0, w0, #0x1
    c504:	str	w0, [x19, #116]
    c508:	b	c404 <elf_update@@ELFUTILS_1.0+0xd3c>
    c50c:	mov	w0, #0x22                  	// #34
    c510:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c514:	mov	x0, #0xffffffffffffffff    	// #-1
    c518:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    c51c:	mov	w0, #0x1                   	// #1
    c520:	str	w0, [x20, #20]
    c524:	ldr	w0, [x19, #116]
    c528:	orr	w0, w0, #0x1
    c52c:	str	w0, [x19, #116]
    c530:	b	c434 <elf_update@@ELFUTILS_1.0+0xd6c>
    c534:	mov	w0, #0x2                   	// #2
    c538:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c53c:	b	c514 <elf_update@@ELFUTILS_1.0+0xe4c>
    c540:	ldrh	w0, [x20, #60]
    c544:	cbz	w0, c45c <elf_update@@ELFUTILS_1.0+0xd94>
    c548:	strh	wzr, [x20, #60]
    c54c:	ldr	w0, [x19, #116]
    c550:	orr	w0, w0, #0x1
    c554:	str	w0, [x19, #116]
    c558:	b	c45c <elf_update@@ELFUTILS_1.0+0xd94>
    c55c:	strh	w22, [x20, #52]
    c560:	ldr	w0, [x19, #116]
    c564:	orr	w0, w0, #0x1
    c568:	str	w0, [x19, #116]
    c56c:	b	c470 <elf_update@@ELFUTILS_1.0+0xda8>
    c570:	mov	x0, x19
    c574:	bl	7918 <elf32_getphdr@@ELFUTILS_1.0+0x4c>
    c578:	ldr	x0, [x19, #88]
    c57c:	str	wzr, [sp, #108]
    c580:	cbnz	x0, c498 <elf_update@@ELFUTILS_1.0+0xdd0>
    c584:	cbz	x26, cb94 <elf_update@@ELFUTILS_1.0+0x14cc>
    c588:	stp	x23, x24, [sp, #48]
    c58c:	stp	x27, x28, [sp, #80]
    c590:	ldr	w0, [x19, #200]
    c594:	cbz	w0, c6c4 <elf_update@@ELFUTILS_1.0+0xffc>
    c598:	mov	x0, #0xfeff                	// #65279
    c59c:	cmp	x26, x0
    c5a0:	b.ls	c5c4 <elf_update@@ELFUTILS_1.0+0xefc>  // b.plast
    c5a4:	ldr	x0, [x19, #360]
    c5a8:	ldr	x1, [x0, #32]
    c5ac:	cmp	x1, x26
    c5b0:	b.eq	c5c4 <elf_update@@ELFUTILS_1.0+0xefc>  // b.none
    c5b4:	str	x26, [x0, #32]
    c5b8:	ldr	w0, [x19, #368]
    c5bc:	orr	w0, w0, #0x1
    c5c0:	str	w0, [x19, #368]
    c5c4:	add	x0, x19, #0xc8
    c5c8:	str	x0, [sp, #112]
    c5cc:	ldr	w0, [x19, #200]
    c5d0:	cmp	w0, #0x1
    c5d4:	b.ls	c6e4 <elf_update@@ELFUTILS_1.0+0x101c>  // b.plast
    c5d8:	add	x0, x19, #0x1a8
    c5dc:	ldr	x1, [x0, #144]
    c5e0:	cbz	x1, c6f4 <elf_update@@ELFUTILS_1.0+0x102c>
    c5e4:	mov	w1, #0x1                   	// #1
    c5e8:	str	wzr, [sp, #136]
    c5ec:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c5f0:	add	x0, x0, #0x568
    c5f4:	str	x0, [sp, #128]
    c5f8:	and	x28, x1, #0xff
    c5fc:	ldr	x3, [sp, #112]
    c600:	ldr	w0, [x3]
    c604:	mov	w2, w0
    c608:	cmp	x2, w1, uxtb
    c60c:	b.ls	cac4 <elf_update@@ELFUTILS_1.0+0x13fc>  // b.plast
    c610:	lsl	x25, x28, #1
    c614:	add	x25, x25, x28
    c618:	add	x25, x28, x25, lsl #2
    c61c:	add	x25, x3, x25, lsl #4
    c620:	add	x25, x25, #0x10
    c624:	mov	x24, x25
    c628:	ldr	x23, [x25, #144]
    c62c:	cbz	x23, c6fc <elf_update@@ELFUTILS_1.0+0x1034>
    c630:	ldr	x1, [x23, #56]
    c634:	ldr	x21, [x23, #48]
    c638:	cmp	x21, #0x0
    c63c:	csinc	x21, x21, xzr, ne  // ne = any
    c640:	sub	x0, x21, #0x1
    c644:	ands	x0, x0, x21
    c648:	str	x0, [sp, #120]
    c64c:	b.ne	c71c <elf_update@@ELFUTILS_1.0+0x1054>  // b.any
    c650:	ldr	w0, [x23, #4]
    c654:	cmp	w0, #0xb
    c658:	b.eq	c8ac <elf_update@@ELFUTILS_1.0+0x11e4>  // b.none
    c65c:	cmp	w0, #0xb
    c660:	b.hi	c750 <elf_update@@ELFUTILS_1.0+0x1088>  // b.pmore
    c664:	cmp	w0, #0x5
    c668:	b.eq	c868 <elf_update@@ELFUTILS_1.0+0x11a0>  // b.none
    c66c:	b.ls	c734 <elf_update@@ELFUTILS_1.0+0x106c>  // b.plast
    c670:	cmp	w0, #0x6
    c674:	b.eq	c8a0 <elf_update@@ELFUTILS_1.0+0x11d8>  // b.none
    c678:	cmp	w0, #0x9
    c67c:	b.ne	c7b4 <elf_update@@ELFUTILS_1.0+0x10ec>  // b.any
    c680:	ldr	x0, [sp, #128]
    c684:	ldr	x0, [x0, #280]
    c688:	b	c79c <elf_update@@ELFUTILS_1.0+0x10d4>
    c68c:	mov	x0, #0xffffffffffffffff    	// #-1
    c690:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    c694:	ldr	x0, [x20, #32]
    c698:	str	w1, [sp, #108]
    c69c:	cmp	x0, x22
    c6a0:	b.eq	c6b0 <elf_update@@ELFUTILS_1.0+0xfe8>  // b.none
    c6a4:	str	x22, [x20, #32]
    c6a8:	mov	w0, #0x1                   	// #1
    c6ac:	str	w0, [sp, #108]
    c6b0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c6b4:	ldr	x1, [x0, #1648]
    c6b8:	ldr	x0, [sp, #152]
    c6bc:	madd	x22, x1, x0, x22
    c6c0:	b	c584 <elf_update@@ELFUTILS_1.0+0xebc>
    c6c4:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c6c8:	add	x3, x3, #0xb80
    c6cc:	mov	w2, #0xb4                  	// #180
    c6d0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c6d4:	add	x1, x1, #0xad8
    c6d8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c6dc:	add	x0, x0, #0xaf0
    c6e0:	bl	3380 <__assert_fail@plt>
    c6e4:	ldr	x0, [x19, #208]
    c6e8:	cbz	x0, c5e4 <elf_update@@ELFUTILS_1.0+0xf1c>
    c6ec:	add	x0, x0, #0x10
    c6f0:	b	c5dc <elf_update@@ELFUTILS_1.0+0xf14>
    c6f4:	bl	a018 <elf32_getshdr@@ELFUTILS_1.0+0x544>
    c6f8:	b	c5e4 <elf_update@@ELFUTILS_1.0+0xf1c>
    c6fc:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c700:	add	x3, x3, #0xb80
    c704:	mov	w2, #0xd6                  	// #214
    c708:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c70c:	add	x1, x1, #0xad8
    c710:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    c714:	add	x0, x0, #0xb20
    c718:	bl	3380 <__assert_fail@plt>
    c71c:	mov	w0, #0x24                  	// #36
    c720:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c724:	mov	x0, #0xffffffffffffffff    	// #-1
    c728:	ldp	x23, x24, [sp, #48]
    c72c:	ldp	x27, x28, [sp, #80]
    c730:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    c734:	cmp	w0, #0x2
    c738:	b.eq	c838 <elf_update@@ELFUTILS_1.0+0x1170>  // b.none
    c73c:	cmp	w0, #0x4
    c740:	b.ne	c7b4 <elf_update@@ELFUTILS_1.0+0x10ec>  // b.any
    c744:	ldr	x0, [sp, #128]
    c748:	ldr	x0, [x0, #272]
    c74c:	b	c79c <elf_update@@ELFUTILS_1.0+0x10d4>
    c750:	mov	w2, #0xfffa                	// #65530
    c754:	movk	w2, #0x6fff, lsl #16
    c758:	cmp	w0, w2
    c75c:	b.eq	c8b8 <elf_update@@ELFUTILS_1.0+0x11f0>  // b.none
    c760:	cmp	w0, w2
    c764:	b.ls	c784 <elf_update@@ELFUTILS_1.0+0x10bc>  // b.plast
    c768:	mov	w2, #0xfffc                	// #65532
    c76c:	movk	w2, #0x6fff, lsl #16
    c770:	cmp	w0, w2
    c774:	b.ne	c7b4 <elf_update@@ELFUTILS_1.0+0x10ec>  // b.any
    c778:	ldr	x0, [sp, #128]
    c77c:	ldr	x0, [x0, #376]
    c780:	b	c79c <elf_update@@ELFUTILS_1.0+0x10d4>
    c784:	cmp	w0, #0x11
    c788:	b.eq	c844 <elf_update@@ELFUTILS_1.0+0x117c>  // b.none
    c78c:	cmp	w0, #0x12
    c790:	b.ne	c7b4 <elf_update@@ELFUTILS_1.0+0x10ec>  // b.any
    c794:	ldr	x0, [sp, #128]
    c798:	ldr	x0, [x0, #96]
    c79c:	cmp	x0, x1
    c7a0:	b.eq	c7b4 <elf_update@@ELFUTILS_1.0+0x10ec>  // b.none
    c7a4:	str	x0, [x23, #56]
    c7a8:	ldr	w0, [x24, #152]
    c7ac:	orr	w0, w0, #0x1
    c7b0:	str	w0, [x24, #152]
    c7b4:	ldr	w0, [x24, #120]
    c7b8:	cbz	w0, c8c4 <elf_update@@ELFUTILS_1.0+0x11fc>
    c7bc:	ldr	x0, [x24, #64]
    c7c0:	cbnz	x0, c8e0 <elf_update@@ELFUTILS_1.0+0x1218>
    c7c4:	ldr	x27, [x24, #88]
    c7c8:	ldr	w0, [x19, #56]
    c7cc:	and	w1, w0, #0x4
    c7d0:	str	w1, [sp, #140]
    c7d4:	tbz	w0, #2, c9d8 <elf_update@@ELFUTILS_1.0+0x1310>
    c7d8:	ldr	w0, [x23, #4]
    c7dc:	cmp	w0, #0x8
    c7e0:	b.eq	c7f4 <elf_update@@ELFUTILS_1.0+0x112c>  // b.none
    c7e4:	ldr	x1, [x23, #24]
    c7e8:	ldr	x0, [x23, #32]
    c7ec:	add	x0, x1, x0
    c7f0:	str	x0, [sp, #120]
    c7f4:	ldr	x0, [sp, #120]
    c7f8:	cmp	x22, x0
    c7fc:	csel	x22, x22, x0, cs  // cs = hs, nlast
    c800:	ldr	x0, [x23, #48]
    c804:	sub	x1, x0, #0x1
    c808:	tst	x1, x0
    c80c:	b.ne	c820 <elf_update@@ELFUTILS_1.0+0x1158>  // b.any
    c810:	cmp	x0, #0x0
    c814:	csinc	x0, x0, xzr, ne  // ne = any
    c818:	cmp	x21, x0
    c81c:	b.ls	ca7c <elf_update@@ELFUTILS_1.0+0x13b4>  // b.plast
    c820:	mov	w0, #0x24                  	// #36
    c824:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c828:	mov	x0, #0xffffffffffffffff    	// #-1
    c82c:	ldp	x23, x24, [sp, #48]
    c830:	ldp	x27, x28, [sp, #80]
    c834:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    c838:	ldr	x0, [sp, #128]
    c83c:	ldr	x0, [x0, #304]
    c840:	b	c79c <elf_update@@ELFUTILS_1.0+0x10d4>
    c844:	ldrh	w0, [x20, #16]
    c848:	cmp	w0, #0x1
    c84c:	b.eq	c794 <elf_update@@ELFUTILS_1.0+0x10cc>  // b.none
    c850:	mov	w0, #0x28                  	// #40
    c854:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c858:	mov	x0, #0xffffffffffffffff    	// #-1
    c85c:	ldp	x23, x24, [sp, #48]
    c860:	ldp	x27, x28, [sp, #80]
    c864:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    c868:	ldrh	w2, [x20, #18]
    c86c:	mov	x0, #0x8                   	// #8
    c870:	mov	w3, #0x9026                	// #36902
    c874:	cmp	w2, w3
    c878:	b.eq	c79c <elf_update@@ELFUTILS_1.0+0x10d4>  // b.none
    c87c:	mov	x0, #0x4                   	// #4
    c880:	cmp	w2, #0x16
    c884:	b.ne	c79c <elf_update@@ELFUTILS_1.0+0x10d4>  // b.any
    c888:	ldrb	w0, [x20, #4]
    c88c:	cmp	w0, #0x2
    c890:	mov	x0, #0x4                   	// #4
    c894:	mov	x2, #0x8                   	// #8
    c898:	csel	x0, x0, x2, ne  // ne = any
    c89c:	b	c79c <elf_update@@ELFUTILS_1.0+0x10d4>
    c8a0:	ldr	x0, [sp, #128]
    c8a4:	ldr	x0, [x0, #232]
    c8a8:	b	c79c <elf_update@@ELFUTILS_1.0+0x10d4>
    c8ac:	ldr	x0, [sp, #128]
    c8b0:	ldr	x0, [x0, #304]
    c8b4:	b	c79c <elf_update@@ELFUTILS_1.0+0x10d4>
    c8b8:	ldr	x0, [sp, #128]
    c8bc:	ldr	x0, [x0, #384]
    c8c0:	b	c79c <elf_update@@ELFUTILS_1.0+0x10d4>
    c8c4:	mov	x0, x24
    c8c8:	bl	a834 <elf_rawdata@@ELFUTILS_1.0+0x14c>
    c8cc:	cbz	w0, c7bc <elf_update@@ELFUTILS_1.0+0x10f4>
    c8d0:	mov	x0, #0xffffffffffffffff    	// #-1
    c8d4:	ldp	x23, x24, [sp, #48]
    c8d8:	ldp	x27, x28, [sp, #80]
    c8dc:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    c8e0:	add	x4, x25, #0x48
    c8e4:	mov	x2, x24
    c8e8:	mov	x27, #0x0                   	// #0
    c8ec:	b	c970 <elf_update@@ELFUTILS_1.0+0x12a8>
    c8f0:	ldr	x0, [x2]
    c8f4:	cbnz	x0, c97c <elf_update@@ELFUTILS_1.0+0x12b4>
    c8f8:	ldr	x0, [x24, #72]
    c8fc:	cmp	x0, #0x0
    c900:	csel	x1, x2, x4, eq  // eq = none
    c904:	b	c97c <elf_update@@ELFUTILS_1.0+0x12b4>
    c908:	mov	w0, #0x2                   	// #2
    c90c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c910:	mov	x0, #0xffffffffffffffff    	// #-1
    c914:	ldp	x23, x24, [sp, #48]
    c918:	ldp	x27, x28, [sp, #80]
    c91c:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    c920:	mov	w0, #0x24                  	// #36
    c924:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c928:	mov	x0, #0xffffffffffffffff    	// #-1
    c92c:	ldp	x23, x24, [sp, #48]
    c930:	ldp	x27, x28, [sp, #80]
    c934:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    c938:	sub	x27, x27, #0x1
    c93c:	add	x27, x27, x0
    c940:	neg	x0, x0
    c944:	and	x0, x27, x0
    c948:	ldr	x3, [x1, #24]
    c94c:	cmp	x3, x0
    c950:	b.eq	c960 <elf_update@@ELFUTILS_1.0+0x1298>  // b.none
    c954:	str	x0, [x1, #24]
    c958:	mov	w3, #0x1                   	// #1
    c95c:	str	w3, [sp, #136]
    c960:	ldr	x27, [x1, #16]
    c964:	add	x27, x0, x27
    c968:	ldr	x2, [x2, #48]
    c96c:	cbz	x2, c7c8 <elf_update@@ELFUTILS_1.0+0x1100>
    c970:	mov	x1, x2
    c974:	cmp	x2, x24
    c978:	b.eq	c8f0 <elf_update@@ELFUTILS_1.0+0x1228>  // b.none
    c97c:	ldr	w0, [x1, #12]
    c980:	cmp	w0, #0x1
    c984:	b.ne	c908 <elf_update@@ELFUTILS_1.0+0x1240>  // b.any
    c988:	ldr	x0, [x1, #32]
    c98c:	sub	x3, x0, #0x1
    c990:	tst	x3, x0
    c994:	b.ne	c920 <elf_update@@ELFUTILS_1.0+0x1258>  // b.any
    c998:	cmp	x21, x0
    c99c:	csel	x21, x21, x0, cs  // cs = hs, nlast
    c9a0:	ldr	w3, [x19, #56]
    c9a4:	tbz	w3, #2, c938 <elf_update@@ELFUTILS_1.0+0x1270>
    c9a8:	ldr	x0, [x1, #24]
    c9ac:	ldr	x1, [x1, #16]
    c9b0:	add	x0, x0, x1
    c9b4:	ldr	x1, [x23, #32]
    c9b8:	cmp	x0, x1
    c9bc:	b.ls	c968 <elf_update@@ELFUTILS_1.0+0x12a0>  // b.plast
    c9c0:	mov	w0, #0x23                  	// #35
    c9c4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    c9c8:	mov	x0, #0xffffffffffffffff    	// #-1
    c9cc:	ldp	x23, x24, [sp, #48]
    c9d0:	ldp	x27, x28, [sp, #80]
    c9d4:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    c9d8:	ldr	x0, [x23, #48]
    c9dc:	cmp	x0, x21
    c9e0:	b.eq	c9f4 <elf_update@@ELFUTILS_1.0+0x132c>  // b.none
    c9e4:	str	x21, [x23, #48]
    c9e8:	ldr	w0, [x24, #152]
    c9ec:	orr	w0, w0, #0x1
    c9f0:	str	w0, [x24, #152]
    c9f4:	sub	x22, x22, #0x1
    c9f8:	add	x22, x22, x21
    c9fc:	neg	x21, x21
    ca00:	and	x22, x21, x22
    ca04:	ldr	x0, [x23, #24]
    ca08:	cmp	x0, x22
    ca0c:	b.eq	cb00 <elf_update@@ELFUTILS_1.0+0x1438>  // b.none
    ca10:	str	x22, [x23, #24]
    ca14:	ldr	x1, [x24, #64]
    ca18:	mov	w0, #0x1                   	// #1
    ca1c:	str	w0, [sp, #136]
    ca20:	cbz	x1, cae8 <elf_update@@ELFUTILS_1.0+0x1420>
    ca24:	mov	x1, x27
    ca28:	ldr	x2, [x23, #32]
    ca2c:	cmp	x2, x27
    ca30:	b.eq	ca40 <elf_update@@ELFUTILS_1.0+0x1378>  // b.none
    ca34:	str	x27, [x23, #32]
    ca38:	mov	w2, #0x1                   	// #1
    ca3c:	str	w2, [sp, #140]
    ca40:	ldr	w2, [sp, #136]
    ca44:	ldr	w4, [sp, #140]
    ca48:	orr	w3, w2, w4
    ca4c:	str	w3, [sp, #136]
    ca50:	ldr	w2, [x23, #4]
    ca54:	add	x1, x22, x1
    ca58:	cmp	w2, #0x8
    ca5c:	csel	x22, x1, x22, ne  // ne = any
    ca60:	orr	w0, w4, w0
    ca64:	ldr	w1, [x24, #152]
    ca68:	orr	w0, w1, w0
    ca6c:	str	w0, [x24, #152]
    ca70:	ldr	w0, [x24, #156]
    ca74:	orr	w0, w0, w3
    ca78:	str	w0, [x24, #156]
    ca7c:	ldr	x0, [x23, #56]
    ca80:	cmp	x0, #0x1
    ca84:	b.ls	caac <elf_update@@ELFUTILS_1.0+0x13e4>  // b.plast
    ca88:	ldr	w0, [x19, #56]
    ca8c:	tbnz	w0, #3, caac <elf_update@@ELFUTILS_1.0+0x13e4>
    ca90:	ldr	x0, [x23, #8]
    ca94:	tbnz	w0, #11, cb08 <elf_update@@ELFUTILS_1.0+0x1440>
    ca98:	ldr	x2, [x23, #32]
    ca9c:	ldr	x1, [x23, #56]
    caa0:	udiv	x0, x2, x1
    caa4:	msub	x0, x0, x1, x2
    caa8:	cbnz	x0, cb1c <elf_update@@ELFUTILS_1.0+0x1454>
    caac:	add	x28, x28, #0x1
    cab0:	ldr	x0, [sp, #112]
    cab4:	ldr	w0, [x0]
    cab8:	add	x25, x25, #0xd0
    cabc:	cmp	x28, w0, uxtw
    cac0:	b.cc	c624 <elf_update@@ELFUTILS_1.0+0xf5c>  // b.lo, b.ul, b.last
    cac4:	ldr	x3, [sp, #112]
    cac8:	ldr	x2, [x3, #8]
    cacc:	cbz	x2, cb54 <elf_update@@ELFUTILS_1.0+0x148c>
    cad0:	mov	w1, #0x0                   	// #0
    cad4:	ldr	w3, [x3, #4]
    cad8:	cmp	w0, w3
    cadc:	b.ne	cb34 <elf_update@@ELFUTILS_1.0+0x146c>  // b.any
    cae0:	str	x2, [sp, #112]
    cae4:	b	c5f8 <elf_update@@ELFUTILS_1.0+0xf30>
    cae8:	mov	x0, x24
    caec:	bl	ae40 <elf_rawdata@@ELFUTILS_1.0+0x758>
    caf0:	cbz	x0, cbf0 <elf_update@@ELFUTILS_1.0+0x1528>
    caf4:	mov	w0, #0x1                   	// #1
    caf8:	str	w0, [sp, #136]
    cafc:	b	ca24 <elf_update@@ELFUTILS_1.0+0x135c>
    cb00:	ldr	w0, [sp, #140]
    cb04:	b	ca24 <elf_update@@ELFUTILS_1.0+0x135c>
    cb08:	mov	x0, x24
    cb0c:	bl	31d0 <elf64_getchdr@plt>
    cb10:	cbz	x0, cc00 <elf_update@@ELFUTILS_1.0+0x1538>
    cb14:	ldr	x2, [x0, #8]
    cb18:	b	ca9c <elf_update@@ELFUTILS_1.0+0x13d4>
    cb1c:	mov	w0, #0x25                  	// #37
    cb20:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    cb24:	mov	x0, #0xffffffffffffffff    	// #-1
    cb28:	ldp	x23, x24, [sp, #48]
    cb2c:	ldp	x27, x28, [sp, #80]
    cb30:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    cb34:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    cb38:	add	x3, x3, #0xb80
    cb3c:	mov	w2, #0x19b                 	// #411
    cb40:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    cb44:	add	x1, x1, #0xad8
    cb48:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    cb4c:	add	x0, x0, #0xb30
    cb50:	bl	3380 <__assert_fail@plt>
    cb54:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    cb58:	ldr	x0, [x0, #1672]
    cb5c:	ldrh	w1, [x20, #58]
    cb60:	cmp	x1, x0
    cb64:	b.eq	cb74 <elf_update@@ELFUTILS_1.0+0x14ac>  // b.none
    cb68:	strh	w0, [x20, #58]
    cb6c:	mov	w1, #0x1                   	// #1
    cb70:	str	w1, [sp, #108]
    cb74:	ldr	w1, [x19, #56]
    cb78:	tbz	w1, #2, cbbc <elf_update@@ELFUTILS_1.0+0x14f4>
    cb7c:	ldr	x1, [x20, #40]
    cb80:	madd	x0, x26, x0, x1
    cb84:	cmp	x22, x0
    cb88:	csel	x22, x22, x0, cs  // cs = hs, nlast
    cb8c:	ldp	x23, x24, [sp, #48]
    cb90:	ldp	x27, x28, [sp, #80]
    cb94:	ldr	w0, [x19, #116]
    cb98:	ldr	w1, [sp, #108]
    cb9c:	orr	w0, w0, w1
    cba0:	str	w0, [x19, #116]
    cba4:	mov	x0, x22
    cba8:	ldp	x19, x20, [sp, #16]
    cbac:	ldp	x21, x22, [sp, #32]
    cbb0:	ldp	x25, x26, [sp, #64]
    cbb4:	ldp	x29, x30, [sp], #160
    cbb8:	ret
    cbbc:	add	x22, x22, #0x7
    cbc0:	and	x22, x22, #0xfffffffffffffff8
    cbc4:	ldr	x1, [x20, #40]
    cbc8:	cmp	x1, x22
    cbcc:	b.eq	cbe0 <elf_update@@ELFUTILS_1.0+0x1518>  // b.none
    cbd0:	str	x22, [x20, #40]
    cbd4:	ldr	w1, [x19, #56]
    cbd8:	orr	w1, w1, #0x1
    cbdc:	str	w1, [x19, #56]
    cbe0:	madd	x22, x26, x0, x22
    cbe4:	ldp	x23, x24, [sp, #48]
    cbe8:	ldp	x27, x28, [sp, #80]
    cbec:	b	cb94 <elf_update@@ELFUTILS_1.0+0x14cc>
    cbf0:	mov	x0, #0xffffffffffffffff    	// #-1
    cbf4:	ldp	x23, x24, [sp, #48]
    cbf8:	ldp	x27, x28, [sp, #80]
    cbfc:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    cc00:	mov	x0, #0xffffffffffffffff    	// #-1
    cc04:	ldp	x23, x24, [sp, #48]
    cc08:	ldp	x27, x28, [sp, #80]
    cc0c:	b	cba8 <elf_update@@ELFUTILS_1.0+0x14e0>
    cc10:	ldr	x6, [x0]
    cc14:	ldr	x4, [x6, #144]
    cc18:	ldr	w2, [x4, #16]
    cc1c:	ldr	x5, [x1]
    cc20:	ldr	x3, [x5, #144]
    cc24:	ldr	w1, [x3, #16]
    cc28:	mov	w0, #0xffffffff            	// #-1
    cc2c:	cmp	w2, w1
    cc30:	b.cc	cc70 <elf_update@@ELFUTILS_1.0+0x15a8>  // b.lo, b.ul, b.last
    cc34:	mov	w0, #0x1                   	// #1
    cc38:	b.hi	cc70 <elf_update@@ELFUTILS_1.0+0x15a8>  // b.pmore
    cc3c:	ldr	w2, [x4, #20]
    cc40:	ldr	w1, [x3, #20]
    cc44:	mov	w0, #0xffffffff            	// #-1
    cc48:	cmp	w2, w1
    cc4c:	b.cc	cc70 <elf_update@@ELFUTILS_1.0+0x15a8>  // b.lo, b.ul, b.last
    cc50:	mov	w0, #0x1                   	// #1
    cc54:	b.hi	cc70 <elf_update@@ELFUTILS_1.0+0x15a8>  // b.pmore
    cc58:	ldr	x2, [x6, #128]
    cc5c:	ldr	x1, [x5, #128]
    cc60:	mov	w0, #0xffffffff            	// #-1
    cc64:	cmp	x2, x1
    cc68:	b.cc	cc70 <elf_update@@ELFUTILS_1.0+0x15a8>  // b.lo, b.ul, b.last
    cc6c:	cset	w0, hi  // hi = pmore
    cc70:	ret
    cc74:	stp	x29, x30, [sp, #-16]!
    cc78:	mov	x29, sp
    cc7c:	mov	x4, x0
    cc80:	b	cc8c <elf_update@@ELFUTILS_1.0+0x15c4>
    cc84:	ldr	x1, [x1, #8]
    cc88:	cbz	x1, ccb8 <elf_update@@ELFUTILS_1.0+0x15f0>
    cc8c:	ldr	w2, [x1]
    cc90:	cbz	w2, cc84 <elf_update@@ELFUTILS_1.0+0x15bc>
    cc94:	add	x3, x1, #0x10
    cc98:	mov	x2, #0x0                   	// #0
    cc9c:	str	x3, [x4], #8
    cca0:	add	x2, x2, #0x1
    cca4:	add	x3, x3, #0xd0
    cca8:	ldr	w5, [x1]
    ccac:	cmp	x5, x2
    ccb0:	b.hi	cc9c <elf_update@@ELFUTILS_1.0+0x15d4>  // b.pmore
    ccb4:	b	cc84 <elf_update@@ELFUTILS_1.0+0x15bc>
    ccb8:	sub	x1, x4, x0
    ccbc:	adrp	x3, c000 <elf_update@@ELFUTILS_1.0+0x938>
    ccc0:	add	x3, x3, #0xc10
    ccc4:	mov	x2, #0x8                   	// #8
    ccc8:	asr	x1, x1, #3
    cccc:	bl	30f0 <qsort@plt>
    ccd0:	ldp	x29, x30, [sp], #16
    ccd4:	ret
    ccd8:	stp	x29, x30, [sp, #-80]!
    ccdc:	mov	x29, sp
    cce0:	stp	x19, x20, [sp, #16]
    cce4:	stp	x21, x22, [sp, #32]
    cce8:	stp	x23, x24, [sp, #48]
    ccec:	stp	x25, x26, [sp, #64]
    ccf0:	mov	w26, w0
    ccf4:	mov	x23, x1
    ccf8:	mov	x22, x2
    ccfc:	mov	x25, x3
    cd00:	ldr	x24, [x4]
    cd04:	cmp	x2, #0x1, lsl #12
    cd08:	mov	x19, #0x1000                	// #4096
    cd0c:	csel	x19, x2, x19, ls  // ls = plast
    cd10:	cmp	x24, #0xfff
    cd14:	ccmp	x24, x19, #0x2, ls  // ls = plast
    cd18:	b.cs	cda0 <elf_update@@ELFUTILS_1.0+0x16d8>  // b.hs, b.nlast
    cd1c:	mov	x20, x4
    cd20:	sub	x2, x19, x24
    cd24:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    cd28:	ldr	w1, [x0, #448]
    cd2c:	add	x0, x3, x24
    cd30:	bl	3140 <memset@plt>
    cd34:	str	x19, [x20]
    cd38:	mov	x24, x19
    cd3c:	b	cda0 <elf_update@@ELFUTILS_1.0+0x16d8>
    cd40:	cmp	x0, #0x0
    cd44:	b.le	cd84 <elf_update@@ELFUTILS_1.0+0x16bc>
    cd48:	add	x19, x19, x0
    cd4c:	cmp	x21, x19
    cd50:	b.ls	cd8c <elf_update@@ELFUTILS_1.0+0x16c4>  // b.plast
    cd54:	add	x3, x23, x19
    cd58:	sub	x2, x21, x19
    cd5c:	add	x1, x25, x19
    cd60:	mov	w0, w26
    cd64:	bl	3270 <pwrite@plt>
    cd68:	mov	x20, x0
    cd6c:	cmn	x0, #0x1
    cd70:	b.ne	cd40 <elf_update@@ELFUTILS_1.0+0x1678>  // b.any
    cd74:	bl	3390 <__errno_location@plt>
    cd78:	ldr	w1, [x0]
    cd7c:	cmp	w1, #0x4
    cd80:	b.eq	cd54 <elf_update@@ELFUTILS_1.0+0x168c>  // b.none
    cd84:	cmp	x20, #0x0
    cd88:	csel	x19, x19, x20, ge  // ge = tcont
    cd8c:	cmp	x21, x19
    cd90:	b.ne	cdb0 <elf_update@@ELFUTILS_1.0+0x16e8>  // b.any
    cd94:	add	x23, x23, x21
    cd98:	subs	x22, x22, x21
    cd9c:	b.eq	cdd4 <elf_update@@ELFUTILS_1.0+0x170c>  // b.none
    cda0:	cmp	x22, x24
    cda4:	csel	x21, x22, x24, ls  // ls = plast
    cda8:	mov	x19, #0x0                   	// #0
    cdac:	b	cd54 <elf_update@@ELFUTILS_1.0+0x168c>
    cdb0:	mov	w0, #0x14                  	// #20
    cdb4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    cdb8:	mov	w0, #0x1                   	// #1
    cdbc:	ldp	x19, x20, [sp, #16]
    cdc0:	ldp	x21, x22, [sp, #32]
    cdc4:	ldp	x23, x24, [sp, #48]
    cdc8:	ldp	x25, x26, [sp, #64]
    cdcc:	ldp	x29, x30, [sp], #80
    cdd0:	ret
    cdd4:	mov	w0, #0x0                   	// #0
    cdd8:	b	cdbc <elf_update@@ELFUTILS_1.0+0x16f4>
    cddc:	stp	x29, x30, [sp, #-208]!
    cde0:	mov	x29, sp
    cde4:	stp	x23, x24, [sp, #48]
    cde8:	stp	x27, x28, [sp, #80]
    cdec:	mov	x24, x0
    cdf0:	str	w1, [sp, #152]
    cdf4:	str	x2, [sp, #144]
    cdf8:	ldr	x0, [x0, #72]
    cdfc:	str	x0, [sp, #136]
    ce00:	ldr	w0, [x24, #116]
    ce04:	ldr	w1, [x24, #56]
    ce08:	orr	w0, w0, w1
    ce0c:	tbz	w0, #0, cf64 <elf_update@@ELFUTILS_1.0+0x189c>
    ce10:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    ce14:	ldr	x0, [x0, #1408]
    ce18:	cmp	x0, #0x34
    ce1c:	b.ne	cf10 <elf_update@@ELFUTILS_1.0+0x1848>  // b.any
    ce20:	ldr	w0, [sp, #152]
    ce24:	cbnz	w0, cf3c <elf_update@@ELFUTILS_1.0+0x1874>
    ce28:	ldr	x0, [x24]
    ce2c:	ldr	x1, [x24, #40]
    ce30:	add	x0, x0, x1
    ce34:	ldr	x1, [sp, #136]
    ce38:	cmp	x0, x1
    ce3c:	b.eq	ce60 <elf_update@@ELFUTILS_1.0+0x1798>  // b.none
    ce40:	ldp	x2, x3, [x1]
    ce44:	stp	x2, x3, [x0]
    ce48:	ldp	x2, x3, [x1, #16]
    ce4c:	stp	x2, x3, [x0, #16]
    ce50:	ldp	x2, x3, [x1, #32]
    ce54:	stp	x2, x3, [x0, #32]
    ce58:	ldr	w1, [x1, #48]
    ce5c:	str	w1, [x0, #48]
    ce60:	ldr	w0, [x24, #116]
    ce64:	and	w0, w0, #0xfffffffe
    ce68:	str	w0, [x24, #116]
    ce6c:	ldr	x0, [x24, #88]
    ce70:	cmp	x0, #0x0
    ce74:	cset	w28, eq  // eq = none
    ce78:	add	x1, sp, #0xc0
    ce7c:	mov	x0, x24
    ce80:	bl	10e5c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>
    ce84:	str	w0, [sp, #156]
    ce88:	cbnz	w0, d808 <elf_update@@ELFUTILS_1.0+0x2140>
    ce8c:	ldr	x0, [x24, #88]
    ce90:	cbz	x0, cff4 <elf_update@@ELFUTILS_1.0+0x192c>
    ce94:	ldr	w0, [x24, #120]
    ce98:	ldr	w1, [x24, #56]
    ce9c:	orr	w0, w0, w1
    cea0:	tbz	w0, #0, cffc <elf_update@@ELFUTILS_1.0+0x1934>
    cea4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    cea8:	ldr	x0, [x0, #1432]
    ceac:	cmp	x0, #0x20
    ceb0:	b.ne	cf6c <elf_update@@ELFUTILS_1.0+0x18a4>  // b.any
    ceb4:	stp	x19, x20, [sp, #16]
    ceb8:	ldr	x0, [sp, #136]
    cebc:	ldr	w2, [x0, #28]
    cec0:	ldrh	w1, [x0, #40]
    cec4:	cmp	w2, w1
    cec8:	b.hi	cf98 <elf_update@@ELFUTILS_1.0+0x18d0>  // b.pmore
    cecc:	ldr	w0, [sp, #152]
    ced0:	cbnz	w0, cfbc <elf_update@@ELFUTILS_1.0+0x18f4>
    ced4:	ldr	x0, [sp, #136]
    ced8:	ldr	w0, [x0, #28]
    cedc:	ldr	x1, [x24, #40]
    cee0:	add	x0, x0, x1
    cee4:	ldr	x3, [x24]
    cee8:	ldr	x2, [sp, #192]
    ceec:	lsl	x2, x2, #5
    cef0:	ldr	x1, [x24, #88]
    cef4:	add	x0, x3, x0
    cef8:	bl	3070 <memmove@plt>
    cefc:	ldr	w0, [x24, #120]
    cf00:	and	w0, w0, #0xfffffffe
    cf04:	str	w0, [x24, #120]
    cf08:	mov	w28, #0x1                   	// #1
    cf0c:	b	d000 <elf_update@@ELFUTILS_1.0+0x1938>
    cf10:	stp	x19, x20, [sp, #16]
    cf14:	stp	x21, x22, [sp, #32]
    cf18:	stp	x25, x26, [sp, #64]
    cf1c:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    cf20:	add	x3, x3, #0xe18
    cf24:	mov	w2, #0x8c                  	// #140
    cf28:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    cf2c:	add	x1, x1, #0xba0
    cf30:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    cf34:	add	x0, x0, #0xbb8
    cf38:	bl	3380 <__assert_fail@plt>
    cf3c:	ldr	x5, [x24]
    cf40:	ldr	x0, [x24, #40]
    cf44:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    cf48:	ldr	x4, [x1, #3056]
    cf4c:	mov	w3, #0x1                   	// #1
    cf50:	mov	x2, #0x34                  	// #52
    cf54:	ldr	x1, [sp, #136]
    cf58:	add	x0, x5, x0
    cf5c:	blr	x4
    cf60:	b	ce60 <elf_update@@ELFUTILS_1.0+0x1798>
    cf64:	mov	w28, #0x0                   	// #0
    cf68:	b	ce78 <elf_update@@ELFUTILS_1.0+0x17b0>
    cf6c:	stp	x19, x20, [sp, #16]
    cf70:	stp	x21, x22, [sp, #32]
    cf74:	stp	x25, x26, [sp, #64]
    cf78:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    cf7c:	add	x3, x3, #0xe18
    cf80:	mov	w2, #0xaf                  	// #175
    cf84:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    cf88:	add	x1, x1, #0xba0
    cf8c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    cf90:	add	x0, x0, #0xc08
    cf94:	bl	3380 <__assert_fail@plt>
    cf98:	ldr	x0, [x24, #40]
    cf9c:	add	x0, x0, w1, uxth
    cfa0:	ldr	x3, [x24]
    cfa4:	sub	w2, w2, w1
    cfa8:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    cfac:	ldr	w1, [x1, #448]
    cfb0:	add	x0, x3, x0
    cfb4:	bl	3140 <memset@plt>
    cfb8:	b	cecc <elf_update@@ELFUTILS_1.0+0x1804>
    cfbc:	ldr	x0, [sp, #136]
    cfc0:	ldr	w0, [x0, #28]
    cfc4:	ldr	x1, [x24, #40]
    cfc8:	add	x0, x0, x1
    cfcc:	ldr	x5, [x24]
    cfd0:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    cfd4:	ldr	x4, [x1, #3080]
    cfd8:	mov	w3, #0x1                   	// #1
    cfdc:	ldr	x2, [sp, #192]
    cfe0:	lsl	x2, x2, #5
    cfe4:	ldr	x1, [x24, #88]
    cfe8:	add	x0, x5, x0
    cfec:	blr	x4
    cff0:	b	cefc <elf_update@@ELFUTILS_1.0+0x1834>
    cff4:	stp	x19, x20, [sp, #16]
    cff8:	b	d000 <elf_update@@ELFUTILS_1.0+0x1938>
    cffc:	stp	x19, x20, [sp, #16]
    d000:	ldr	x1, [sp, #144]
    d004:	cbz	x1, d798 <elf_update@@ELFUTILS_1.0+0x20d0>
    d008:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    d00c:	cmp	x1, x0
    d010:	b.hi	d814 <elf_update@@ELFUTILS_1.0+0x214c>  // b.pmore
    d014:	stp	x25, x26, [sp, #64]
    d018:	ldr	x26, [x24]
    d01c:	ldr	x25, [x24, #40]
    d020:	ldr	x0, [sp, #136]
    d024:	ldr	w0, [x0, #28]
    d028:	str	w0, [sp, #104]
    d02c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d030:	add	x0, x0, #0x568
    d034:	ldr	x2, [x0, #24]
    d038:	str	x2, [sp, #112]
    d03c:	ldr	x0, [x0, #48]
    d040:	str	x0, [sp, #168]
    d044:	ldr	x0, [sp, #192]
    d048:	str	x0, [sp, #176]
    d04c:	add	x20, x24, #0xc8
    d050:	lsl	x19, x1, #3
    d054:	mov	x0, x19
    d058:	bl	3100 <malloc@plt>
    d05c:	str	x0, [sp, #160]
    d060:	cbz	x0, d0a8 <elf_update@@ELFUTILS_1.0+0x19e0>
    d064:	stp	x21, x22, [sp, #32]
    d068:	ldr	x0, [sp, #136]
    d06c:	ldr	w27, [x0, #32]
    d070:	add	x27, x27, x25
    d074:	add	x27, x26, x27
    d078:	ldrh	w0, [x0, #46]
    d07c:	str	w0, [sp, #184]
    d080:	mov	x1, x20
    d084:	ldr	x20, [sp, #160]
    d088:	mov	x0, x20
    d08c:	bl	cc74 <elf_update@@ELFUTILS_1.0+0x15ac>
    d090:	str	x20, [sp, #128]
    d094:	add	x1, x19, x20
    d098:	str	x1, [sp, #120]
    d09c:	mov	x19, x20
    d0a0:	mov	x23, #0x28                  	// #40
    d0a4:	b	d174 <elf_update@@ELFUTILS_1.0+0x1aac>
    d0a8:	mov	w0, #0x8                   	// #8
    d0ac:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    d0b0:	mov	w0, #0xffffffff            	// #-1
    d0b4:	str	w0, [sp, #156]
    d0b8:	ldp	x19, x20, [sp, #16]
    d0bc:	ldp	x25, x26, [sp, #64]
    d0c0:	b	d7f4 <elf_update@@ELFUTILS_1.0+0x212c>
    d0c4:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d0c8:	add	x3, x3, #0xe18
    d0cc:	mov	w2, #0xf8                  	// #248
    d0d0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d0d4:	add	x1, x1, #0xba0
    d0d8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d0dc:	add	x0, x0, #0xc58
    d0e0:	bl	3380 <__assert_fail@plt>
    d0e4:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d0e8:	add	x3, x3, #0xe18
    d0ec:	mov	w2, #0xfa                  	// #250
    d0f0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d0f4:	add	x1, x1, #0xba0
    d0f8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d0fc:	add	x0, x0, #0xcb0
    d100:	bl	3380 <__assert_fail@plt>
    d104:	ldp	x2, x3, [x21]
    d108:	stp	x2, x3, [x0]
    d10c:	ldp	x2, x3, [x21, #16]
    d110:	stp	x2, x3, [x0, #16]
    d114:	ldr	x1, [x21, #32]
    d118:	str	x1, [x0, #32]
    d11c:	str	x0, [x20, #144]
    d120:	ldr	x0, [x24]
    d124:	ldr	x2, [x24, #40]
    d128:	ldr	x21, [x20]
    d12c:	add	x1, x0, x2
    d130:	cmp	x21, x1
    d134:	b.cc	d164 <elf_update@@ELFUTILS_1.0+0x1a9c>  // b.lo, b.ul, b.last
    d138:	ldr	x1, [x24, #48]
    d13c:	add	x1, x2, x1
    d140:	add	x1, x0, x1
    d144:	cmp	x21, x1
    d148:	b.cs	d164 <elf_update@@ELFUTILS_1.0+0x1a9c>  // b.hs, b.nlast
    d14c:	ldr	x1, [x20, #144]
    d150:	ldr	w1, [x1, #16]
    d154:	add	x2, x1, x2
    d158:	add	x0, x0, x2
    d15c:	cmp	x21, x0
    d160:	b.cc	d1fc <elf_update@@ELFUTILS_1.0+0x1b34>  // b.lo, b.ul, b.last
    d164:	add	x19, x19, #0x8
    d168:	ldr	x0, [sp, #120]
    d16c:	cmp	x19, x0
    d170:	b.eq	d24c <elf_update@@ELFUTILS_1.0+0x1b84>  // b.none
    d174:	ldr	x20, [x19]
    d178:	ldr	w0, [x24, #124]
    d17c:	cbnz	w0, d120 <elf_update@@ELFUTILS_1.0+0x1a58>
    d180:	ldr	w0, [x20, #152]
    d184:	tbnz	w0, #7, d120 <elf_update@@ELFUTILS_1.0+0x1a58>
    d188:	ldr	x21, [x20, #144]
    d18c:	ldr	x0, [x20, #128]
    d190:	add	x0, x0, x0, lsl #2
    d194:	add	x0, x27, x0, lsl #3
    d198:	cmp	x21, x0
    d19c:	b.eq	d120 <elf_update@@ELFUTILS_1.0+0x1a58>  // b.none
    d1a0:	ldr	x0, [x24]
    d1a4:	ldr	x1, [x24, #40]
    d1a8:	add	x2, x0, x1
    d1ac:	cmp	x21, x2
    d1b0:	b.ls	d0c4 <elf_update@@ELFUTILS_1.0+0x19fc>  // b.plast
    d1b4:	ldr	x2, [x24, #48]
    d1b8:	add	x1, x1, x2
    d1bc:	add	x0, x0, x1
    d1c0:	cmp	x21, x0
    d1c4:	b.cs	d0e4 <elf_update@@ELFUTILS_1.0+0x1a1c>  // b.hs, b.nlast
    d1c8:	mov	x0, x23
    d1cc:	bl	3100 <malloc@plt>
    d1d0:	cbnz	x0, d104 <elf_update@@ELFUTILS_1.0+0x1a3c>
    d1d4:	ldr	x0, [sp, #160]
    d1d8:	bl	3250 <free@plt>
    d1dc:	mov	w0, #0x8                   	// #8
    d1e0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    d1e4:	mov	w0, #0xffffffff            	// #-1
    d1e8:	str	w0, [sp, #156]
    d1ec:	ldp	x19, x20, [sp, #16]
    d1f0:	ldp	x21, x22, [sp, #32]
    d1f4:	ldp	x25, x26, [sp, #64]
    d1f8:	b	d7f4 <elf_update@@ELFUTILS_1.0+0x212c>
    d1fc:	ldr	x22, [x20, #16]
    d200:	mov	x0, x22
    d204:	bl	3100 <malloc@plt>
    d208:	cbz	x0, d224 <elf_update@@ELFUTILS_1.0+0x1b5c>
    d20c:	mov	x2, x22
    d210:	mov	x1, x21
    d214:	bl	3060 <memcpy@plt>
    d218:	str	x0, [x20, #168]
    d21c:	str	x0, [x20]
    d220:	b	d164 <elf_update@@ELFUTILS_1.0+0x1a9c>
    d224:	ldr	x0, [sp, #160]
    d228:	bl	3250 <free@plt>
    d22c:	mov	w0, #0x8                   	// #8
    d230:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    d234:	mov	w0, #0xffffffff            	// #-1
    d238:	str	w0, [sp, #156]
    d23c:	ldp	x19, x20, [sp, #16]
    d240:	ldp	x21, x22, [sp, #32]
    d244:	ldp	x25, x26, [sp, #64]
    d248:	b	d7f4 <elf_update@@ELFUTILS_1.0+0x212c>
    d24c:	ldr	x0, [sp, #168]
    d250:	ldr	x1, [sp, #176]
    d254:	madd	x20, x0, x1, x25
    d258:	ldr	w0, [sp, #104]
    d25c:	ldr	x1, [sp, #112]
    d260:	cmp	x0, x1
    d264:	csel	x0, x0, x1, cs  // cs = hs, nlast
    d268:	add	x0, x20, x0
    d26c:	add	x20, x26, x0
    d270:	ldrh	w0, [sp, #184]
    d274:	ldr	x1, [sp, #144]
    d278:	madd	x0, x0, x1, x27
    d27c:	str	x0, [sp, #104]
    d280:	ldr	x0, [sp, #160]
    d284:	str	x0, [sp, #112]
    d288:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d28c:	add	x0, x0, #0xa60
    d290:	str	x0, [sp, #176]
    d294:	add	x0, sp, #0xc8
    d298:	str	x0, [sp, #184]
    d29c:	b	d308 <elf_update@@ELFUTILS_1.0+0x1c40>
    d2a0:	ldr	x26, [x25, #144]
    d2a4:	ldr	w0, [x26, #4]
    d2a8:	cmp	w0, #0x8
    d2ac:	b.eq	d2e4 <elf_update@@ELFUTILS_1.0+0x1c1c>  // b.none
    d2b0:	ldr	w22, [x26, #16]
    d2b4:	ldr	x0, [x24, #40]
    d2b8:	add	x0, x22, x0
    d2bc:	ldr	x22, [x24]
    d2c0:	add	x22, x22, x0
    d2c4:	ldr	x0, [x25, #64]
    d2c8:	cbnz	x0, d340 <elf_update@@ELFUTILS_1.0+0x1c78>
    d2cc:	cmp	w28, #0x0
    d2d0:	ccmp	x20, x22, #0x2, ne  // ne = any
    d2d4:	b.cc	d604 <elf_update@@ELFUTILS_1.0+0x1f3c>  // b.lo, b.ul, b.last
    d2d8:	ldr	w20, [x26, #20]
    d2dc:	add	x20, x22, x20
    d2e0:	mov	w28, #0x0                   	// #0
    d2e4:	ldr	w0, [x25, #156]
    d2e8:	and	w0, w0, #0xfffffffe
    d2ec:	str	w0, [x25, #156]
    d2f0:	ldr	x0, [sp, #112]
    d2f4:	add	x0, x0, #0x8
    d2f8:	str	x0, [sp, #112]
    d2fc:	ldr	x1, [sp, #120]
    d300:	cmp	x0, x1
    d304:	b.eq	d664 <elf_update@@ELFUTILS_1.0+0x1f9c>  // b.none
    d308:	ldr	x0, [sp, #112]
    d30c:	ldr	x25, [x0]
    d310:	ldr	x0, [x25, #128]
    d314:	cbnz	x0, d2a0 <elf_update@@ELFUTILS_1.0+0x1bd8>
    d318:	ldr	w0, [x25, #156]
    d31c:	tbz	w0, #0, d2f0 <elf_update@@ELFUTILS_1.0+0x1c28>
    d320:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d324:	add	x3, x3, #0xe18
    d328:	mov	w2, #0x12f                 	// #303
    d32c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d330:	add	x1, x1, #0xba0
    d334:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d338:	add	x0, x0, #0xd20
    d33c:	bl	3380 <__assert_fail@plt>
    d340:	mov	x19, x25
    d344:	mov	w28, #0x0                   	// #0
    d348:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    d34c:	add	x0, x0, #0xbd8
    d350:	str	x0, [sp, #168]
    d354:	b	d500 <elf_update@@ELFUTILS_1.0+0x1e38>
    d358:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d35c:	add	x3, x3, #0xe18
    d360:	mov	w2, #0x13f                 	// #319
    d364:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d368:	add	x1, x1, #0xba0
    d36c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d370:	add	x0, x0, #0xd40
    d374:	bl	3380 <__assert_fail@plt>
    d378:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d37c:	add	x3, x3, #0xe18
    d380:	mov	w2, #0x140                 	// #320
    d384:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d388:	add	x1, x1, #0xba0
    d38c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d390:	add	x0, x0, #0xd58
    d394:	bl	3380 <__assert_fail@plt>
    d398:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d39c:	add	x3, x3, #0xe18
    d3a0:	mov	w2, #0x141                 	// #321
    d3a4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d3a8:	add	x1, x1, #0xba0
    d3ac:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d3b0:	add	x0, x0, #0xd88
    d3b4:	bl	3380 <__assert_fail@plt>
    d3b8:	cmp	x0, x22
    d3bc:	csel	x0, x0, x22, cs  // cs = hs, nlast
    d3c0:	sub	x2, x21, x0
    d3c4:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    d3c8:	ldr	w1, [x1, #448]
    d3cc:	bl	3140 <memset@plt>
    d3d0:	b	d590 <elf_update@@ELFUTILS_1.0+0x1ec8>
    d3d4:	ldr	x21, [x19, #16]
    d3d8:	mov	w28, #0x1                   	// #1
    d3dc:	cbz	x21, d4ec <elf_update@@ELFUTILS_1.0+0x1e24>
    d3e0:	ldr	w23, [x19, #8]
    d3e4:	cbz	w23, d5c4 <elf_update@@ELFUTILS_1.0+0x1efc>
    d3e8:	ldr	x1, [sp, #176]
    d3ec:	ldrb	w0, [x1, w23, uxtw]
    d3f0:	ldrb	w1, [x1, w23, uxtw]
    d3f4:	cmp	w0, #0x0
    d3f8:	csinc	w1, w1, wzr, ne  // ne = any
    d3fc:	and	x1, x1, #0xff
    d400:	sub	x0, x1, #0x1
    d404:	tst	x20, x0
    d408:	b.ne	d438 <elf_update@@ELFUTILS_1.0+0x1d70>  // b.any
    d40c:	ldr	x0, [sp, #168]
    d410:	ldr	x4, [x0, w23, uxtw #3]
    d414:	mov	w3, w28
    d418:	mov	x2, x21
    d41c:	ldr	x1, [x19]
    d420:	mov	x0, x20
    d424:	blr	x4
    d428:	ldr	x0, [x19, #16]
    d42c:	add	x20, x20, x0
    d430:	mov	w28, #0x1                   	// #1
    d434:	b	d4d4 <elf_update@@ELFUTILS_1.0+0x1e0c>
    d438:	cmp	x1, #0x7
    d43c:	b.hi	d488 <elf_update@@ELFUTILS_1.0+0x1dc0>  // b.pmore
    d440:	mov	x0, x21
    d444:	bl	3100 <malloc@plt>
    d448:	mov	x28, x0
    d44c:	cbz	x28, d4a0 <elf_update@@ELFUTILS_1.0+0x1dd8>
    d450:	ldr	x0, [sp, #168]
    d454:	ldr	x4, [x0, w23, uxtw #3]
    d458:	mov	w3, #0x1                   	// #1
    d45c:	mov	x2, x21
    d460:	ldr	x1, [x19]
    d464:	mov	x0, x28
    d468:	blr	x4
    d46c:	mov	x2, x21
    d470:	mov	x1, x28
    d474:	mov	x0, x20
    d478:	bl	3060 <memcpy@plt>
    d47c:	mov	x0, x28
    d480:	bl	3250 <free@plt>
    d484:	b	d428 <elf_update@@ELFUTILS_1.0+0x1d60>
    d488:	mov	x2, x21
    d48c:	ldr	x0, [sp, #184]
    d490:	bl	3170 <posix_memalign@plt>
    d494:	cbnz	w0, d4a0 <elf_update@@ELFUTILS_1.0+0x1dd8>
    d498:	ldr	x28, [sp, #200]
    d49c:	b	d44c <elf_update@@ELFUTILS_1.0+0x1d84>
    d4a0:	ldr	x0, [sp, #160]
    d4a4:	bl	3250 <free@plt>
    d4a8:	mov	w0, #0x8                   	// #8
    d4ac:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    d4b0:	mov	w0, #0x1                   	// #1
    d4b4:	str	w0, [sp, #156]
    d4b8:	ldp	x19, x20, [sp, #16]
    d4bc:	ldp	x21, x22, [sp, #32]
    d4c0:	ldp	x25, x26, [sp, #64]
    d4c4:	b	d7f4 <elf_update@@ELFUTILS_1.0+0x212c>
    d4c8:	mov	x20, x21
    d4cc:	ldr	x0, [x19, #16]
    d4d0:	add	x20, x20, x0
    d4d4:	ldr	x0, [x19, #24]
    d4d8:	ldr	x1, [x19, #16]
    d4dc:	add	x0, x0, x1
    d4e0:	add	x0, x22, x0
    d4e4:	cmp	x20, x0
    d4e8:	b.ne	d5e4 <elf_update@@ELFUTILS_1.0+0x1f1c>  // b.any
    d4ec:	ldr	w0, [x19, #56]
    d4f0:	and	w0, w0, #0xfffffffe
    d4f4:	str	w0, [x19, #56]
    d4f8:	ldr	x19, [x19, #48]
    d4fc:	cbz	x19, d2e4 <elf_update@@ELFUTILS_1.0+0x1c1c>
    d500:	ldr	x0, [x19, #24]
    d504:	tbnz	x0, #63, d358 <elf_update@@ELFUTILS_1.0+0x1c90>
    d508:	ldr	w1, [x26, #20]
    d50c:	cmp	x0, x1
    d510:	b.hi	d378 <elf_update@@ELFUTILS_1.0+0x1cb0>  // b.pmore
    d514:	sub	x1, x1, x0
    d518:	ldr	x2, [x19, #16]
    d51c:	cmp	x2, x1
    d520:	b.hi	d398 <elf_update@@ELFUTILS_1.0+0x1cd0>  // b.pmore
    d524:	add	x21, x22, x0
    d528:	cmp	x21, x20
    d52c:	b.ls	d590 <elf_update@@ELFUTILS_1.0+0x1ec8>  // b.plast
    d530:	cbz	x0, d54c <elf_update@@ELFUTILS_1.0+0x1e84>
    d534:	ldr	w0, [x25, #156]
    d538:	ldr	w1, [x24, #56]
    d53c:	orr	w0, w0, w1
    d540:	ldr	w1, [x19, #56]
    d544:	orr	w0, w0, w1
    d548:	tbz	w0, #0, d4c8 <elf_update@@ELFUTILS_1.0+0x1e00>
    d54c:	mov	x23, #0x0                   	// #0
    d550:	cmp	x20, x27
    d554:	b.cs	d57c <elf_update@@ELFUTILS_1.0+0x1eb4>  // b.hs, b.nlast
    d558:	sub	x0, x21, x20
    d55c:	sub	x23, x27, x20
    d560:	cmp	x21, x27
    d564:	csel	x23, x23, x0, cs  // cs = hs, nlast
    d568:	mov	x2, x23
    d56c:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    d570:	ldr	w1, [x0, #448]
    d574:	mov	x0, x20
    d578:	bl	3140 <memset@plt>
    d57c:	add	x20, x20, x23
    d580:	cmp	x20, x21
    d584:	ldr	x0, [sp, #104]
    d588:	ccmp	x21, x0, #0x0, ne  // ne = any
    d58c:	b.hi	d3b8 <elf_update@@ELFUTILS_1.0+0x1cf0>  // b.pmore
    d590:	ldr	x20, [x19, #24]
    d594:	add	x20, x22, x20
    d598:	ldr	w0, [x25, #156]
    d59c:	ldr	w1, [x24, #56]
    d5a0:	orr	w0, w0, w1
    d5a4:	ldr	w1, [x19, #56]
    d5a8:	orr	w0, w0, w1
    d5ac:	tbz	w0, #0, d4cc <elf_update@@ELFUTILS_1.0+0x1e04>
    d5b0:	ldr	w0, [sp, #152]
    d5b4:	cbnz	w0, d3d4 <elf_update@@ELFUTILS_1.0+0x1d0c>
    d5b8:	ldr	x21, [x19, #16]
    d5bc:	mov	w28, #0x1                   	// #1
    d5c0:	cbz	x21, d4ec <elf_update@@ELFUTILS_1.0+0x1e24>
    d5c4:	mov	x2, x21
    d5c8:	ldr	x1, [x19]
    d5cc:	mov	x0, x20
    d5d0:	bl	3070 <memmove@plt>
    d5d4:	ldr	x0, [x19, #16]
    d5d8:	add	x20, x20, x0
    d5dc:	mov	w28, #0x1                   	// #1
    d5e0:	b	d4d4 <elf_update@@ELFUTILS_1.0+0x1e0c>
    d5e4:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d5e8:	add	x3, x3, #0xe18
    d5ec:	mov	w2, #0x197                 	// #407
    d5f0:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d5f4:	add	x1, x1, #0xba0
    d5f8:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d5fc:	add	x0, x0, #0xdd0
    d600:	bl	3380 <__assert_fail@plt>
    d604:	mov	x19, #0x0                   	// #0
    d608:	cmp	x20, x27
    d60c:	b.cs	d634 <elf_update@@ELFUTILS_1.0+0x1f6c>  // b.hs, b.nlast
    d610:	sub	x0, x22, x20
    d614:	sub	x19, x27, x20
    d618:	cmp	x27, x22
    d61c:	csel	x19, x19, x0, ls  // ls = plast
    d620:	mov	x2, x19
    d624:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    d628:	ldr	w1, [x0, #448]
    d62c:	mov	x0, x20
    d630:	bl	3140 <memset@plt>
    d634:	add	x19, x20, x19
    d638:	cmp	x19, x22
    d63c:	ldr	x0, [sp, #104]
    d640:	ccmp	x0, x22, #0x2, ne  // ne = any
    d644:	b.cs	d2d8 <elf_update@@ELFUTILS_1.0+0x1c10>  // b.hs, b.nlast
    d648:	cmp	x0, x22
    d64c:	csel	x0, x0, x22, cs  // cs = hs, nlast
    d650:	sub	x2, x22, x0
    d654:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    d658:	ldr	w1, [x1, #448]
    d65c:	bl	3140 <memset@plt>
    d660:	b	d2d8 <elf_update@@ELFUTILS_1.0+0x1c10>
    d664:	ldr	w0, [x24, #56]
    d668:	tbz	w0, #0, d68c <elf_update@@ELFUTILS_1.0+0x1fc4>
    d66c:	ldr	x0, [sp, #136]
    d670:	ldr	w0, [x0, #32]
    d674:	ldr	x2, [x24, #40]
    d678:	add	x0, x0, x2
    d67c:	ldr	x2, [x24]
    d680:	add	x2, x2, x0
    d684:	cmp	x2, x20
    d688:	b.hi	d6a0 <elf_update@@ELFUTILS_1.0+0x1fd8>  // b.pmore
    d68c:	adrp	x20, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    d690:	add	x20, x20, #0xbd8
    d694:	mov	w21, #0x1                   	// #1
    d698:	mov	x22, #0x28                  	// #40
    d69c:	b	d700 <elf_update@@ELFUTILS_1.0+0x2038>
    d6a0:	sub	x2, x2, x20
    d6a4:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    d6a8:	ldr	w1, [x0, #448]
    d6ac:	mov	x0, x20
    d6b0:	bl	3140 <memset@plt>
    d6b4:	b	d68c <elf_update@@ELFUTILS_1.0+0x1fc4>
    d6b8:	ldr	x0, [x19, #128]
    d6bc:	add	x0, x0, x0, lsl #2
    d6c0:	ldr	x4, [x20, #72]
    d6c4:	mov	w3, w21
    d6c8:	mov	x2, x22
    d6cc:	ldr	x1, [x19, #144]
    d6d0:	add	x0, x27, x0, lsl #3
    d6d4:	blr	x4
    d6d8:	b	d748 <elf_update@@ELFUTILS_1.0+0x2080>
    d6dc:	ldr	w0, [x19, #152]
    d6e0:	and	w0, w0, #0xfffffffe
    d6e4:	str	w0, [x19, #152]
    d6e8:	ldr	x0, [sp, #128]
    d6ec:	add	x0, x0, #0x8
    d6f0:	str	x0, [sp, #128]
    d6f4:	ldr	x1, [sp, #120]
    d6f8:	cmp	x0, x1
    d6fc:	b.eq	d788 <elf_update@@ELFUTILS_1.0+0x20c0>  // b.none
    d700:	ldr	x0, [sp, #128]
    d704:	ldr	x19, [x0]
    d708:	ldr	w0, [x19, #152]
    d70c:	ldr	w1, [x24, #56]
    d710:	orr	w0, w0, w1
    d714:	tbz	w0, #0, d6e8 <elf_update@@ELFUTILS_1.0+0x2020>
    d718:	ldr	w0, [sp, #152]
    d71c:	cbnz	w0, d6b8 <elf_update@@ELFUTILS_1.0+0x1ff0>
    d720:	ldr	x0, [x19, #128]
    d724:	add	x0, x0, x0, lsl #2
    d728:	add	x0, x27, x0, lsl #3
    d72c:	ldr	x1, [x19, #144]
    d730:	ldp	x2, x3, [x1]
    d734:	stp	x2, x3, [x0]
    d738:	ldp	x2, x3, [x1, #16]
    d73c:	stp	x2, x3, [x0, #16]
    d740:	ldr	x1, [x1, #32]
    d744:	str	x1, [x0, #32]
    d748:	ldr	w0, [x24, #124]
    d74c:	cbnz	w0, d6dc <elf_update@@ELFUTILS_1.0+0x2014>
    d750:	ldr	w0, [x19, #152]
    d754:	tbnz	w0, #7, d6dc <elf_update@@ELFUTILS_1.0+0x2014>
    d758:	ldr	x0, [x19, #144]
    d75c:	ldr	x1, [x19, #128]
    d760:	add	x1, x1, x1, lsl #2
    d764:	add	x1, x27, x1, lsl #3
    d768:	cmp	x0, x1
    d76c:	b.eq	d6dc <elf_update@@ELFUTILS_1.0+0x2014>  // b.none
    d770:	bl	3250 <free@plt>
    d774:	ldr	x0, [x19, #128]
    d778:	add	x0, x0, x0, lsl #2
    d77c:	add	x0, x27, x0, lsl #3
    d780:	str	x0, [x19, #144]
    d784:	b	d6dc <elf_update@@ELFUTILS_1.0+0x2014>
    d788:	ldr	x0, [sp, #160]
    d78c:	bl	3250 <free@plt>
    d790:	ldp	x21, x22, [sp, #32]
    d794:	ldp	x25, x26, [sp, #64]
    d798:	ldr	w0, [x24, #56]
    d79c:	and	w0, w0, #0xfffffffe
    d7a0:	str	w0, [x24, #56]
    d7a4:	ldr	x19, [x24]
    d7a8:	ldr	x20, [x24, #40]
    d7ac:	mov	w0, #0x1e                  	// #30
    d7b0:	bl	3320 <sysconf@plt>
    d7b4:	neg	x0, x0
    d7b8:	and	x0, x0, x20
    d7bc:	add	x0, x19, x0
    d7c0:	ldr	x3, [sp, #136]
    d7c4:	ldr	w2, [x3, #32]
    d7c8:	ldr	x1, [x24, #40]
    d7cc:	add	x2, x2, x1
    d7d0:	ldrh	w1, [x3, #46]
    d7d4:	ldr	x3, [sp, #144]
    d7d8:	madd	x2, x1, x3, x2
    d7dc:	ldr	x1, [x24]
    d7e0:	add	x1, x1, x2
    d7e4:	mov	w2, #0x4                   	// #4
    d7e8:	sub	x1, x1, x0
    d7ec:	bl	3080 <msync@plt>
    d7f0:	ldp	x19, x20, [sp, #16]
    d7f4:	ldr	w0, [sp, #156]
    d7f8:	ldp	x23, x24, [sp, #48]
    d7fc:	ldp	x27, x28, [sp, #80]
    d800:	ldp	x29, x30, [sp], #208
    d804:	ret
    d808:	mov	w0, #0xffffffff            	// #-1
    d80c:	str	w0, [sp, #156]
    d810:	b	d7f4 <elf_update@@ELFUTILS_1.0+0x212c>
    d814:	mov	w0, #0x1                   	// #1
    d818:	str	w0, [sp, #156]
    d81c:	ldp	x19, x20, [sp, #16]
    d820:	b	d7f4 <elf_update@@ELFUTILS_1.0+0x212c>
    d824:	mov	x12, #0x90f0                	// #37104
    d828:	sub	sp, sp, x12
    d82c:	stp	x29, x30, [sp]
    d830:	mov	x29, sp
    d834:	stp	x19, x20, [sp, #16]
    d838:	stp	x21, x22, [sp, #32]
    d83c:	stp	x23, x24, [sp, #48]
    d840:	stp	x25, x26, [sp, #64]
    d844:	mov	x20, x0
    d848:	str	w1, [sp, #104]
    d84c:	str	x2, [sp, #120]
    d850:	add	x0, sp, #0x8, lsl #12
    d854:	add	x0, x0, #0x80
    d858:	str	xzr, [x0, #104]
    d85c:	ldr	x24, [x20, #72]
    d860:	ldr	w0, [x20, #116]
    d864:	ldr	w1, [x20, #56]
    d868:	orr	w0, w0, w1
    d86c:	and	w1, w0, #0x1
    d870:	str	w1, [sp, #216]
    d874:	tbz	w0, #0, d96c <elf_update@@ELFUTILS_1.0+0x22a4>
    d878:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d87c:	ldr	x0, [x0, #1408]
    d880:	cmp	x0, #0x34
    d884:	b.ne	d8a4 <elf_update@@ELFUTILS_1.0+0x21dc>  // b.any
    d888:	mov	x22, x24
    d88c:	ldr	w0, [sp, #104]
    d890:	cbnz	w0, d8cc <elf_update@@ELFUTILS_1.0+0x2204>
    d894:	ldr	w25, [x20, #36]
    d898:	mov	x19, #0x0                   	// #0
    d89c:	mov	x23, #0x34                  	// #52
    d8a0:	b	d904 <elf_update@@ELFUTILS_1.0+0x223c>
    d8a4:	stp	x27, x28, [sp, #80]
    d8a8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d8ac:	add	x3, x3, #0xe18
    d8b0:	add	x3, x3, #0x18
    d8b4:	mov	w2, #0x228                 	// #552
    d8b8:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d8bc:	add	x1, x1, #0xba0
    d8c0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d8c4:	add	x0, x0, #0xbb8
    d8c8:	bl	3380 <__assert_fail@plt>
    d8cc:	add	x22, sp, #0xe0
    d8d0:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    d8d4:	ldr	x4, [x0, #3056]
    d8d8:	mov	w3, #0x1                   	// #1
    d8dc:	mov	x2, #0x34                  	// #52
    d8e0:	mov	x1, x24
    d8e4:	mov	x0, x22
    d8e8:	blr	x4
    d8ec:	b	d894 <elf_update@@ELFUTILS_1.0+0x21cc>
    d8f0:	cmp	x0, #0x0
    d8f4:	b.le	d934 <elf_update@@ELFUTILS_1.0+0x226c>
    d8f8:	add	x19, x19, x0
    d8fc:	cmp	x19, #0x33
    d900:	b.hi	d938 <elf_update@@ELFUTILS_1.0+0x2270>  // b.pmore
    d904:	mov	x3, x19
    d908:	sub	x2, x23, x19
    d90c:	add	x1, x22, x19
    d910:	mov	w0, w25
    d914:	bl	3270 <pwrite@plt>
    d918:	mov	x21, x0
    d91c:	cmn	x0, #0x1
    d920:	b.ne	d8f0 <elf_update@@ELFUTILS_1.0+0x2228>  // b.any
    d924:	bl	3390 <__errno_location@plt>
    d928:	ldr	w0, [x0]
    d92c:	cmp	w0, #0x4
    d930:	b.eq	d904 <elf_update@@ELFUTILS_1.0+0x223c>  // b.none
    d934:	tbnz	x21, #63, d960 <elf_update@@ELFUTILS_1.0+0x2298>
    d938:	cmp	x19, #0x34
    d93c:	b.ne	d960 <elf_update@@ELFUTILS_1.0+0x2298>  // b.any
    d940:	ldr	w0, [x20, #116]
    d944:	and	w0, w0, #0xfffffffe
    d948:	str	w0, [x20, #116]
    d94c:	ldr	x0, [x20, #88]
    d950:	cmp	x0, #0x0
    d954:	cset	w0, eq  // eq = none
    d958:	str	w0, [sp, #108]
    d95c:	b	d970 <elf_update@@ELFUTILS_1.0+0x22a8>
    d960:	mov	w0, #0x14                  	// #20
    d964:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    d968:	b	e068 <elf_update@@ELFUTILS_1.0+0x29a0>
    d96c:	str	wzr, [sp, #108]
    d970:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d974:	ldr	x0, [x0, #1432]
    d978:	cmp	x0, #0x20
    d97c:	b.ne	d9f4 <elf_update@@ELFUTILS_1.0+0x232c>  // b.any
    d980:	add	x1, sp, #0x8, lsl #12
    d984:	add	x1, x1, #0xe0
    d988:	mov	x0, x20
    d98c:	bl	10e5c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>
    d990:	str	w0, [sp, #216]
    d994:	cbnz	w0, e098 <elf_update@@ELFUTILS_1.0+0x29d0>
    d998:	stp	x27, x28, [sp, #80]
    d99c:	ldr	x23, [x20, #88]
    d9a0:	cbz	x23, dc00 <elf_update@@ELFUTILS_1.0+0x2538>
    d9a4:	ldr	w0, [x20, #120]
    d9a8:	ldr	w1, [x20, #56]
    d9ac:	orr	w0, w0, w1
    d9b0:	and	w27, w0, #0x1
    d9b4:	tbz	w0, #0, db1c <elf_update@@ELFUTILS_1.0+0x2454>
    d9b8:	ldr	w2, [x24, #28]
    d9bc:	ldrh	w1, [x24, #40]
    d9c0:	cmp	w2, w1
    d9c4:	b.hi	da1c <elf_update@@ELFUTILS_1.0+0x2354>  // b.pmore
    d9c8:	mov	x28, #0x0                   	// #0
    d9cc:	ldr	w0, [sp, #104]
    d9d0:	cbnz	w0, da4c <elf_update@@ELFUTILS_1.0+0x2384>
    d9d4:	add	x0, sp, #0x8, lsl #12
    d9d8:	add	x0, x0, #0x80
    d9dc:	ldr	x22, [x0, #96]
    d9e0:	lsl	x22, x22, #5
    d9e4:	ldr	w26, [x20, #36]
    d9e8:	ldr	w25, [x24, #28]
    d9ec:	mov	x19, #0x0                   	// #0
    d9f0:	b	dab8 <elf_update@@ELFUTILS_1.0+0x23f0>
    d9f4:	stp	x27, x28, [sp, #80]
    d9f8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    d9fc:	add	x3, x3, #0xe18
    da00:	add	x3, x3, #0x18
    da04:	mov	w2, #0x24a                 	// #586
    da08:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    da0c:	add	x1, x1, #0xba0
    da10:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    da14:	add	x0, x0, #0xc08
    da18:	bl	3380 <__assert_fail@plt>
    da1c:	add	x4, sp, #0x8, lsl #12
    da20:	add	x4, x4, #0xe8
    da24:	add	x3, sp, #0x8, lsl #12
    da28:	add	x3, x3, #0xf0
    da2c:	sub	w2, w2, w1
    da30:	and	x1, x1, #0xffff
    da34:	ldr	w0, [x20, #36]
    da38:	bl	ccd8 <elf_update@@ELFUTILS_1.0+0x1610>
    da3c:	cbz	w0, d9c8 <elf_update@@ELFUTILS_1.0+0x2300>
    da40:	str	w27, [sp, #216]
    da44:	ldp	x27, x28, [sp, #80]
    da48:	b	e068 <elf_update@@ELFUTILS_1.0+0x29a0>
    da4c:	add	x0, sp, #0x8, lsl #12
    da50:	add	x0, x0, #0x80
    da54:	ldr	x19, [x0, #96]
    da58:	lsl	x19, x19, #5
    da5c:	mov	x0, x19
    da60:	bl	3100 <malloc@plt>
    da64:	mov	x28, x0
    da68:	cbz	x0, da90 <elf_update@@ELFUTILS_1.0+0x23c8>
    da6c:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    da70:	ldr	x4, [x0, #3080]
    da74:	mov	w3, #0x1                   	// #1
    da78:	mov	x2, x19
    da7c:	ldr	x1, [x20, #88]
    da80:	mov	x0, x28
    da84:	blr	x4
    da88:	mov	x23, x28
    da8c:	b	d9d4 <elf_update@@ELFUTILS_1.0+0x230c>
    da90:	mov	w0, #0x8                   	// #8
    da94:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    da98:	str	w27, [sp, #216]
    da9c:	ldp	x27, x28, [sp, #80]
    daa0:	b	e068 <elf_update@@ELFUTILS_1.0+0x29a0>
    daa4:	cmp	x0, #0x0
    daa8:	b.le	dae8 <elf_update@@ELFUTILS_1.0+0x2420>
    daac:	add	x19, x19, x0
    dab0:	cmp	x22, x19
    dab4:	b.ls	daf0 <elf_update@@ELFUTILS_1.0+0x2428>  // b.plast
    dab8:	add	x3, x25, x19
    dabc:	sub	x2, x22, x19
    dac0:	add	x1, x23, x19
    dac4:	mov	w0, w26
    dac8:	bl	3270 <pwrite@plt>
    dacc:	mov	x21, x0
    dad0:	cmn	x0, #0x1
    dad4:	b.ne	daa4 <elf_update@@ELFUTILS_1.0+0x23dc>  // b.any
    dad8:	bl	3390 <__errno_location@plt>
    dadc:	ldr	w0, [x0]
    dae0:	cmp	w0, #0x4
    dae4:	b.eq	dab8 <elf_update@@ELFUTILS_1.0+0x23f0>  // b.none
    dae8:	cmp	x21, #0x0
    daec:	csel	x19, x19, x21, ge  // ge = tcont
    daf0:	cmp	x22, x19
    daf4:	b.ne	dbec <elf_update@@ELFUTILS_1.0+0x2524>  // b.any
    daf8:	mov	x0, x28
    dafc:	bl	3250 <free@plt>
    db00:	ldr	w0, [x20, #120]
    db04:	and	w0, w0, #0xfffffffe
    db08:	str	w0, [x20, #120]
    db0c:	ldr	x0, [x20, #88]
    db10:	mov	w1, #0x1                   	// #1
    db14:	str	w1, [sp, #108]
    db18:	cbz	x0, dc00 <elf_update@@ELFUTILS_1.0+0x2538>
    db1c:	ldr	w0, [x24, #28]
    db20:	add	x1, sp, #0x8, lsl #12
    db24:	add	x1, x1, #0x80
    db28:	ldr	x21, [x1, #96]
    db2c:	add	x21, x0, x21, lsl #5
    db30:	ldr	x1, [sp, #120]
    db34:	cbz	x1, e058 <elf_update@@ELFUTILS_1.0+0x2990>
    db38:	mov	x0, #0x5555555555555555    	// #6148914691236517205
    db3c:	movk	x0, #0x555, lsl #48
    db40:	cmp	x1, x0
    db44:	b.hi	e0a4 <elf_update@@ELFUTILS_1.0+0x29dc>  // b.pmore
    db48:	ldr	x0, [x20, #40]
    db4c:	str	x0, [sp, #208]
    db50:	ldr	w0, [x24, #32]
    db54:	str	w0, [sp, #220]
    db58:	ldr	w0, [sp, #104]
    db5c:	cbnz	w0, db74 <elf_update@@ELFUTILS_1.0+0x24ac>
    db60:	ldr	x0, [x20, #80]
    db64:	str	x0, [sp, #136]
    db68:	cbz	x0, db74 <elf_update@@ELFUTILS_1.0+0x24ac>
    db6c:	ldr	w0, [x20, #56]
    db70:	tbz	w0, #0, dc24 <elf_update@@ELFUTILS_1.0+0x255c>
    db74:	ldr	x0, [sp, #120]
    db78:	add	x0, x0, x0, lsl #2
    db7c:	lsl	x0, x0, #3
    db80:	bl	3100 <malloc@plt>
    db84:	str	x0, [sp, #136]
    db88:	str	x0, [sp, #176]
    db8c:	cbz	x0, dc0c <elf_update@@ELFUTILS_1.0+0x2544>
    db90:	ldr	w0, [x20, #56]
    db94:	str	w0, [sp, #112]
    db98:	add	x22, x20, #0xc8
    db9c:	ldr	x0, [sp, #120]
    dba0:	lsl	x19, x0, #3
    dba4:	mov	x0, x19
    dba8:	bl	3100 <malloc@plt>
    dbac:	str	x0, [sp, #168]
    dbb0:	cbz	x0, dc2c <elf_update@@ELFUTILS_1.0+0x2564>
    dbb4:	mov	x1, x22
    dbb8:	ldr	x22, [sp, #168]
    dbbc:	mov	x0, x22
    dbc0:	bl	cc74 <elf_update@@ELFUTILS_1.0+0x15ac>
    dbc4:	mov	x28, x22
    dbc8:	add	x0, x22, x19
    dbcc:	str	x0, [sp, #128]
    dbd0:	add	x1, sp, #0xe0
    dbd4:	str	x1, [sp, #144]
    dbd8:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    dbdc:	add	x0, x0, #0xbd8
    dbe0:	str	x0, [sp, #184]
    dbe4:	str	x1, [sp, #192]
    dbe8:	b	df58 <elf_update@@ELFUTILS_1.0+0x2890>
    dbec:	mov	w0, #0x14                  	// #20
    dbf0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    dbf4:	str	w27, [sp, #216]
    dbf8:	ldp	x27, x28, [sp, #80]
    dbfc:	b	e068 <elf_update@@ELFUTILS_1.0+0x29a0>
    dc00:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    dc04:	ldr	x21, [x0, #1408]
    dc08:	b	db30 <elf_update@@ELFUTILS_1.0+0x2468>
    dc0c:	mov	w0, #0x8                   	// #8
    dc10:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    dc14:	mov	w0, #0xffffffff            	// #-1
    dc18:	str	w0, [sp, #216]
    dc1c:	ldp	x27, x28, [sp, #80]
    dc20:	b	e068 <elf_update@@ELFUTILS_1.0+0x29a0>
    dc24:	str	xzr, [sp, #176]
    dc28:	b	db90 <elf_update@@ELFUTILS_1.0+0x24c8>
    dc2c:	ldr	x0, [sp, #176]
    dc30:	bl	3250 <free@plt>
    dc34:	mov	w0, #0x8                   	// #8
    dc38:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    dc3c:	mov	w0, #0xffffffff            	// #-1
    dc40:	str	w0, [sp, #216]
    dc44:	ldp	x27, x28, [sp, #80]
    dc48:	b	e068 <elf_update@@ELFUTILS_1.0+0x29a0>
    dc4c:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    dc50:	add	x3, x3, #0xe18
    dc54:	add	x3, x3, #0x18
    dc58:	mov	w2, #0x2c3                 	// #707
    dc5c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    dc60:	add	x1, x1, #0xba0
    dc64:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    dc68:	add	x0, x0, #0xd20
    dc6c:	bl	3380 <__assert_fail@plt>
    dc70:	ldr	x19, [x24, #144]
    dc74:	ldr	w0, [x19, #4]
    dc78:	cmp	w0, #0x8
    dc7c:	b.eq	df6c <elf_update@@ELFUTILS_1.0+0x28a4>  // b.none
    dc80:	ldr	w25, [x19, #16]
    dc84:	ldr	x0, [x20, #40]
    dc88:	add	x25, x25, x0
    dc8c:	ldr	x0, [x24, #64]
    dc90:	cbnz	x0, dcb4 <elf_update@@ELFUTILS_1.0+0x25ec>
    dc94:	ldr	w0, [sp, #108]
    dc98:	cmp	w0, #0x0
    dc9c:	ccmp	x21, x25, #0x0, ne  // ne = any
    dca0:	b.lt	deb0 <elf_update@@ELFUTILS_1.0+0x27e8>  // b.tstop
    dca4:	ldr	w21, [x19, #20]
    dca8:	add	x21, x21, x25
    dcac:	str	wzr, [sp, #108]
    dcb0:	b	df6c <elf_update@@ELFUTILS_1.0+0x28a4>
    dcb4:	mov	x19, x24
    dcb8:	mov	w23, #0x0                   	// #0
    dcbc:	add	x0, sp, #0x8, lsl #12
    dcc0:	add	x0, x0, #0xe8
    dcc4:	str	x0, [sp, #152]
    dcc8:	add	x0, sp, #0x8, lsl #12
    dccc:	add	x0, x0, #0xf0
    dcd0:	str	x0, [sp, #160]
    dcd4:	mov	x1, x21
    dcd8:	str	x28, [sp, #200]
    dcdc:	b	ddc0 <elf_update@@ELFUTILS_1.0+0x26f8>
    dce0:	ldr	x21, [x19, #16]
    dce4:	ldr	x23, [sp, #192]
    dce8:	cmp	x21, #0x8, lsl #12
    dcec:	b.hi	dd18 <elf_update@@ELFUTILS_1.0+0x2650>  // b.pmore
    dcf0:	ldr	w0, [x19, #8]
    dcf4:	ldr	x1, [sp, #184]
    dcf8:	ldr	x4, [x1, x0, lsl #3]
    dcfc:	mov	w3, #0x1                   	// #1
    dd00:	mov	x2, x21
    dd04:	mov	x1, x26
    dd08:	mov	x0, x23
    dd0c:	blr	x4
    dd10:	mov	x26, x23
    dd14:	b	de3c <elf_update@@ELFUTILS_1.0+0x2774>
    dd18:	mov	x0, x21
    dd1c:	bl	3100 <malloc@plt>
    dd20:	mov	x23, x0
    dd24:	cbnz	x0, dcf0 <elf_update@@ELFUTILS_1.0+0x2628>
    dd28:	mov	w0, #0x8                   	// #8
    dd2c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    dd30:	b	de68 <elf_update@@ELFUTILS_1.0+0x27a0>
    dd34:	cmp	x0, #0x0
    dd38:	b.le	dd78 <elf_update@@ELFUTILS_1.0+0x26b0>
    dd3c:	add	x21, x21, x0
    dd40:	cmp	x27, x21
    dd44:	b.ls	dd80 <elf_update@@ELFUTILS_1.0+0x26b8>  // b.plast
    dd48:	add	x3, x22, x21
    dd4c:	sub	x2, x27, x21
    dd50:	add	x1, x26, x21
    dd54:	mov	w0, w28
    dd58:	bl	3270 <pwrite@plt>
    dd5c:	mov	x23, x0
    dd60:	cmn	x0, #0x1
    dd64:	b.ne	dd34 <elf_update@@ELFUTILS_1.0+0x266c>  // b.any
    dd68:	bl	3390 <__errno_location@plt>
    dd6c:	ldr	w0, [x0]
    dd70:	cmp	w0, #0x4
    dd74:	b.eq	dd48 <elf_update@@ELFUTILS_1.0+0x2680>  // b.none
    dd78:	cmp	x23, #0x0
    dd7c:	csel	x21, x21, x23, ge  // ge = tcont
    dd80:	ldr	x0, [x19, #16]
    dd84:	cmp	x0, x21
    dd88:	b.ne	de4c <elf_update@@ELFUTILS_1.0+0x2784>  // b.any
    dd8c:	ldr	x0, [x19]
    dd90:	cmp	x0, x26
    dd94:	ldr	x0, [sp, #144]
    dd98:	ccmp	x0, x26, #0x4, ne  // ne = any
    dd9c:	b.ne	de94 <elf_update@@ELFUTILS_1.0+0x27cc>  // b.any
    dda0:	mov	w23, #0x1                   	// #1
    dda4:	ldr	x1, [x19, #16]
    dda8:	add	x1, x22, x1
    ddac:	ldr	w0, [x19, #56]
    ddb0:	and	w0, w0, #0xfffffffe
    ddb4:	str	w0, [x19, #56]
    ddb8:	ldr	x19, [x19, #48]
    ddbc:	cbz	x19, dea0 <elf_update@@ELFUTILS_1.0+0x27d8>
    ddc0:	ldr	x0, [x19, #24]
    ddc4:	add	x22, x0, x25
    ddc8:	cmp	x22, x1
    ddcc:	b.le	de10 <elf_update@@ELFUTILS_1.0+0x2748>
    ddd0:	cmp	x0, #0x0
    ddd4:	ldr	w0, [sp, #108]
    ddd8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    dddc:	b.ne	ddf8 <elf_update@@ELFUTILS_1.0+0x2730>  // b.any
    dde0:	ldr	w0, [x24, #156]
    dde4:	ldr	w2, [x20, #56]
    dde8:	orr	w0, w0, w2
    ddec:	ldr	w2, [x19, #56]
    ddf0:	orr	w0, w0, w2
    ddf4:	tbz	w0, #0, dda4 <elf_update@@ELFUTILS_1.0+0x26dc>
    ddf8:	ldr	x4, [sp, #152]
    ddfc:	ldr	x3, [sp, #160]
    de00:	sub	x2, x22, x1
    de04:	ldr	w0, [x20, #36]
    de08:	bl	ccd8 <elf_update@@ELFUTILS_1.0+0x1610>
    de0c:	cbnz	w0, de68 <elf_update@@ELFUTILS_1.0+0x27a0>
    de10:	ldr	x22, [x19, #24]
    de14:	add	x22, x25, x22
    de18:	ldr	w0, [x24, #156]
    de1c:	ldr	w1, [x20, #56]
    de20:	orr	w0, w0, w1
    de24:	ldr	w1, [x19, #56]
    de28:	orr	w0, w0, w1
    de2c:	tbz	w0, #0, dda4 <elf_update@@ELFUTILS_1.0+0x26dc>
    de30:	ldr	x26, [x19]
    de34:	ldr	w0, [sp, #104]
    de38:	cbnz	w0, dce0 <elf_update@@ELFUTILS_1.0+0x2618>
    de3c:	ldr	w28, [x20, #36]
    de40:	ldr	x27, [x19, #16]
    de44:	mov	x21, #0x0                   	// #0
    de48:	b	dd48 <elf_update@@ELFUTILS_1.0+0x2680>
    de4c:	ldr	x0, [x19]
    de50:	cmp	x0, x26
    de54:	add	x0, sp, #0xe0
    de58:	ccmp	x0, x26, #0x4, ne  // ne = any
    de5c:	b.ne	de88 <elf_update@@ELFUTILS_1.0+0x27c0>  // b.any
    de60:	mov	w0, #0x14                  	// #20
    de64:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    de68:	ldr	x0, [sp, #176]
    de6c:	bl	3250 <free@plt>
    de70:	ldr	x0, [sp, #168]
    de74:	bl	3250 <free@plt>
    de78:	mov	w0, #0x1                   	// #1
    de7c:	str	w0, [sp, #216]
    de80:	ldp	x27, x28, [sp, #80]
    de84:	b	e068 <elf_update@@ELFUTILS_1.0+0x29a0>
    de88:	mov	x0, x26
    de8c:	bl	3250 <free@plt>
    de90:	b	de60 <elf_update@@ELFUTILS_1.0+0x2798>
    de94:	mov	x0, x26
    de98:	bl	3250 <free@plt>
    de9c:	b	dda0 <elf_update@@ELFUTILS_1.0+0x26d8>
    dea0:	mov	x21, x1
    dea4:	ldr	x28, [sp, #200]
    dea8:	str	w23, [sp, #108]
    deac:	b	df6c <elf_update@@ELFUTILS_1.0+0x28a4>
    deb0:	add	x4, sp, #0x8, lsl #12
    deb4:	add	x4, x4, #0xe8
    deb8:	add	x3, sp, #0x8, lsl #12
    debc:	add	x3, x3, #0xf0
    dec0:	sub	x2, x25, x21
    dec4:	mov	x1, x21
    dec8:	ldr	w0, [x20, #36]
    decc:	bl	ccd8 <elf_update@@ELFUTILS_1.0+0x1610>
    ded0:	cbz	w0, dca4 <elf_update@@ELFUTILS_1.0+0x25dc>
    ded4:	b	de68 <elf_update@@ELFUTILS_1.0+0x27a0>
    ded8:	ldr	x0, [x24, #128]
    dedc:	add	x0, x0, x0, lsl #2
    dee0:	ldr	x1, [sp, #184]
    dee4:	ldr	x4, [x1, #72]
    dee8:	mov	w3, #0x1                   	// #1
    deec:	mov	x2, #0x28                  	// #40
    def0:	ldr	x1, [x24, #144]
    def4:	ldr	x5, [sp, #136]
    def8:	add	x0, x5, x0, lsl #3
    defc:	blr	x4
    df00:	b	df30 <elf_update@@ELFUTILS_1.0+0x2868>
    df04:	ldr	x0, [x24, #128]
    df08:	add	x0, x0, x0, lsl #2
    df0c:	ldr	x1, [sp, #136]
    df10:	add	x0, x1, x0, lsl #3
    df14:	ldr	x1, [x24, #144]
    df18:	ldp	x2, x3, [x1]
    df1c:	stp	x2, x3, [x0]
    df20:	ldp	x2, x3, [x1, #16]
    df24:	stp	x2, x3, [x0, #16]
    df28:	ldr	x1, [x1, #32]
    df2c:	str	x1, [x0, #32]
    df30:	ldr	w0, [x24, #152]
    df34:	ldr	w1, [sp, #112]
    df38:	orr	w1, w1, w0
    df3c:	str	w1, [sp, #112]
    df40:	and	w0, w0, #0xfffffffe
    df44:	str	w0, [x24, #152]
    df48:	add	x28, x28, #0x8
    df4c:	ldr	x0, [sp, #128]
    df50:	cmp	x0, x28
    df54:	b.eq	df88 <elf_update@@ELFUTILS_1.0+0x28c0>  // b.none
    df58:	ldr	x24, [x28]
    df5c:	ldr	x0, [x24, #128]
    df60:	cbnz	x0, dc70 <elf_update@@ELFUTILS_1.0+0x25a8>
    df64:	ldr	w0, [x24, #156]
    df68:	tbnz	w0, #0, dc4c <elf_update@@ELFUTILS_1.0+0x2584>
    df6c:	ldr	w0, [sp, #104]
    df70:	cbnz	w0, ded8 <elf_update@@ELFUTILS_1.0+0x2810>
    df74:	ldr	x0, [x20, #80]
    df78:	cbz	x0, df04 <elf_update@@ELFUTILS_1.0+0x283c>
    df7c:	ldr	w0, [x20, #56]
    df80:	tbz	w0, #0, df30 <elf_update@@ELFUTILS_1.0+0x2868>
    df84:	b	df04 <elf_update@@ELFUTILS_1.0+0x283c>
    df88:	ldr	w0, [sp, #220]
    df8c:	ldr	x1, [sp, #208]
    df90:	add	x22, x1, w0, uxtw
    df94:	ldr	w0, [x20, #56]
    df98:	tst	x0, #0x1
    df9c:	ccmp	x21, x22, #0x0, ne  // ne = any
    dfa0:	b.lt	dfc8 <elf_update@@ELFUTILS_1.0+0x2900>  // b.tstop
    dfa4:	ldr	x0, [sp, #112]
    dfa8:	tbz	w0, #0, e048 <elf_update@@ELFUTILS_1.0+0x2980>
    dfac:	ldr	w23, [x20, #36]
    dfb0:	ldr	x0, [sp, #120]
    dfb4:	add	x25, x0, x0, lsl #2
    dfb8:	lsl	x25, x25, #3
    dfbc:	mov	x24, x25
    dfc0:	mov	x19, #0x0                   	// #0
    dfc4:	b	e004 <elf_update@@ELFUTILS_1.0+0x293c>
    dfc8:	add	x4, sp, #0x8, lsl #12
    dfcc:	add	x4, x4, #0xe8
    dfd0:	add	x3, sp, #0x8, lsl #12
    dfd4:	add	x3, x3, #0xf0
    dfd8:	sub	x2, x22, x21
    dfdc:	mov	x1, x21
    dfe0:	ldr	w0, [x20, #36]
    dfe4:	bl	ccd8 <elf_update@@ELFUTILS_1.0+0x1610>
    dfe8:	cbz	w0, dfa4 <elf_update@@ELFUTILS_1.0+0x28dc>
    dfec:	b	de68 <elf_update@@ELFUTILS_1.0+0x27a0>
    dff0:	cmp	x0, #0x0
    dff4:	b.le	e038 <elf_update@@ELFUTILS_1.0+0x2970>
    dff8:	add	x19, x19, x0
    dffc:	cmp	x24, x19
    e000:	b.ls	e040 <elf_update@@ELFUTILS_1.0+0x2978>  // b.plast
    e004:	add	x3, x22, x19
    e008:	sub	x2, x24, x19
    e00c:	ldr	x0, [sp, #136]
    e010:	add	x1, x0, x19
    e014:	mov	w0, w23
    e018:	bl	3270 <pwrite@plt>
    e01c:	mov	x21, x0
    e020:	cmn	x0, #0x1
    e024:	b.ne	dff0 <elf_update@@ELFUTILS_1.0+0x2928>  // b.any
    e028:	bl	3390 <__errno_location@plt>
    e02c:	ldr	w0, [x0]
    e030:	cmp	w0, #0x4
    e034:	b.eq	e004 <elf_update@@ELFUTILS_1.0+0x293c>  // b.none
    e038:	cmp	x21, #0x0
    e03c:	csel	x19, x19, x21, ge  // ge = tcont
    e040:	cmp	x25, x19
    e044:	b.ne	e08c <elf_update@@ELFUTILS_1.0+0x29c4>  // b.any
    e048:	ldr	x0, [sp, #176]
    e04c:	bl	3250 <free@plt>
    e050:	ldr	x0, [sp, #168]
    e054:	bl	3250 <free@plt>
    e058:	ldr	w0, [x20, #56]
    e05c:	and	w0, w0, #0xfffffffe
    e060:	str	w0, [x20, #56]
    e064:	ldp	x27, x28, [sp, #80]
    e068:	ldr	w0, [sp, #216]
    e06c:	ldp	x19, x20, [sp, #16]
    e070:	ldp	x21, x22, [sp, #32]
    e074:	ldp	x23, x24, [sp, #48]
    e078:	ldp	x25, x26, [sp, #64]
    e07c:	ldp	x29, x30, [sp]
    e080:	mov	x12, #0x90f0                	// #37104
    e084:	add	sp, sp, x12
    e088:	ret
    e08c:	mov	w0, #0x14                  	// #20
    e090:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    e094:	b	de68 <elf_update@@ELFUTILS_1.0+0x27a0>
    e098:	mov	w0, #0xffffffff            	// #-1
    e09c:	str	w0, [sp, #216]
    e0a0:	b	e068 <elf_update@@ELFUTILS_1.0+0x29a0>
    e0a4:	mov	w0, #0x1                   	// #1
    e0a8:	str	w0, [sp, #216]
    e0ac:	ldp	x27, x28, [sp, #80]
    e0b0:	b	e068 <elf_update@@ELFUTILS_1.0+0x29a0>
    e0b4:	ldr	x6, [x0]
    e0b8:	ldr	x4, [x6, #144]
    e0bc:	ldr	x2, [x4, #24]
    e0c0:	ldr	x5, [x1]
    e0c4:	ldr	x3, [x5, #144]
    e0c8:	ldr	x1, [x3, #24]
    e0cc:	mov	w0, #0xffffffff            	// #-1
    e0d0:	cmp	x2, x1
    e0d4:	b.cc	e114 <elf_update@@ELFUTILS_1.0+0x2a4c>  // b.lo, b.ul, b.last
    e0d8:	mov	w0, #0x1                   	// #1
    e0dc:	b.hi	e114 <elf_update@@ELFUTILS_1.0+0x2a4c>  // b.pmore
    e0e0:	ldr	x2, [x4, #32]
    e0e4:	ldr	x1, [x3, #32]
    e0e8:	mov	w0, #0xffffffff            	// #-1
    e0ec:	cmp	x2, x1
    e0f0:	b.cc	e114 <elf_update@@ELFUTILS_1.0+0x2a4c>  // b.lo, b.ul, b.last
    e0f4:	mov	w0, #0x1                   	// #1
    e0f8:	b.hi	e114 <elf_update@@ELFUTILS_1.0+0x2a4c>  // b.pmore
    e0fc:	ldr	x2, [x6, #128]
    e100:	ldr	x1, [x5, #128]
    e104:	mov	w0, #0xffffffff            	// #-1
    e108:	cmp	x2, x1
    e10c:	b.cc	e114 <elf_update@@ELFUTILS_1.0+0x2a4c>  // b.lo, b.ul, b.last
    e110:	cset	w0, hi  // hi = pmore
    e114:	ret
    e118:	stp	x29, x30, [sp, #-16]!
    e11c:	mov	x29, sp
    e120:	mov	x4, x0
    e124:	b	e130 <elf_update@@ELFUTILS_1.0+0x2a68>
    e128:	ldr	x1, [x1, #8]
    e12c:	cbz	x1, e15c <elf_update@@ELFUTILS_1.0+0x2a94>
    e130:	ldr	w2, [x1]
    e134:	cbz	w2, e128 <elf_update@@ELFUTILS_1.0+0x2a60>
    e138:	add	x3, x1, #0x10
    e13c:	mov	x2, #0x0                   	// #0
    e140:	str	x3, [x4], #8
    e144:	add	x2, x2, #0x1
    e148:	add	x3, x3, #0xd0
    e14c:	ldr	w5, [x1]
    e150:	cmp	x5, x2
    e154:	b.hi	e140 <elf_update@@ELFUTILS_1.0+0x2a78>  // b.pmore
    e158:	b	e128 <elf_update@@ELFUTILS_1.0+0x2a60>
    e15c:	sub	x1, x4, x0
    e160:	adrp	x3, e000 <elf_update@@ELFUTILS_1.0+0x2938>
    e164:	add	x3, x3, #0xb4
    e168:	mov	x2, #0x8                   	// #8
    e16c:	asr	x1, x1, #3
    e170:	bl	30f0 <qsort@plt>
    e174:	ldp	x29, x30, [sp], #16
    e178:	ret
    e17c:	stp	x29, x30, [sp, #-80]!
    e180:	mov	x29, sp
    e184:	stp	x19, x20, [sp, #16]
    e188:	stp	x21, x22, [sp, #32]
    e18c:	stp	x23, x24, [sp, #48]
    e190:	stp	x25, x26, [sp, #64]
    e194:	mov	w26, w0
    e198:	mov	x23, x1
    e19c:	mov	x22, x2
    e1a0:	mov	x25, x3
    e1a4:	ldr	x24, [x4]
    e1a8:	cmp	x2, #0x1, lsl #12
    e1ac:	mov	x19, #0x1000                	// #4096
    e1b0:	csel	x19, x2, x19, ls  // ls = plast
    e1b4:	cmp	x24, #0xfff
    e1b8:	ccmp	x24, x19, #0x2, ls  // ls = plast
    e1bc:	b.cs	e244 <elf_update@@ELFUTILS_1.0+0x2b7c>  // b.hs, b.nlast
    e1c0:	mov	x20, x4
    e1c4:	sub	x2, x19, x24
    e1c8:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    e1cc:	ldr	w1, [x0, #448]
    e1d0:	add	x0, x3, x24
    e1d4:	bl	3140 <memset@plt>
    e1d8:	str	x19, [x20]
    e1dc:	mov	x24, x19
    e1e0:	b	e244 <elf_update@@ELFUTILS_1.0+0x2b7c>
    e1e4:	cmp	x0, #0x0
    e1e8:	b.le	e228 <elf_update@@ELFUTILS_1.0+0x2b60>
    e1ec:	add	x19, x19, x0
    e1f0:	cmp	x21, x19
    e1f4:	b.ls	e230 <elf_update@@ELFUTILS_1.0+0x2b68>  // b.plast
    e1f8:	add	x3, x23, x19
    e1fc:	sub	x2, x21, x19
    e200:	add	x1, x25, x19
    e204:	mov	w0, w26
    e208:	bl	3270 <pwrite@plt>
    e20c:	mov	x20, x0
    e210:	cmn	x0, #0x1
    e214:	b.ne	e1e4 <elf_update@@ELFUTILS_1.0+0x2b1c>  // b.any
    e218:	bl	3390 <__errno_location@plt>
    e21c:	ldr	w1, [x0]
    e220:	cmp	w1, #0x4
    e224:	b.eq	e1f8 <elf_update@@ELFUTILS_1.0+0x2b30>  // b.none
    e228:	cmp	x20, #0x0
    e22c:	csel	x19, x19, x20, ge  // ge = tcont
    e230:	cmp	x21, x19
    e234:	b.ne	e254 <elf_update@@ELFUTILS_1.0+0x2b8c>  // b.any
    e238:	add	x23, x23, x21
    e23c:	subs	x22, x22, x21
    e240:	b.eq	e278 <elf_update@@ELFUTILS_1.0+0x2bb0>  // b.none
    e244:	cmp	x22, x24
    e248:	csel	x21, x22, x24, ls  // ls = plast
    e24c:	mov	x19, #0x0                   	// #0
    e250:	b	e1f8 <elf_update@@ELFUTILS_1.0+0x2b30>
    e254:	mov	w0, #0x14                  	// #20
    e258:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    e25c:	mov	w0, #0x1                   	// #1
    e260:	ldp	x19, x20, [sp, #16]
    e264:	ldp	x21, x22, [sp, #32]
    e268:	ldp	x23, x24, [sp, #48]
    e26c:	ldp	x25, x26, [sp, #64]
    e270:	ldp	x29, x30, [sp], #80
    e274:	ret
    e278:	mov	w0, #0x0                   	// #0
    e27c:	b	e260 <elf_update@@ELFUTILS_1.0+0x2b98>
    e280:	stp	x29, x30, [sp, #-208]!
    e284:	mov	x29, sp
    e288:	stp	x23, x24, [sp, #48]
    e28c:	stp	x27, x28, [sp, #80]
    e290:	mov	x24, x0
    e294:	str	w1, [sp, #152]
    e298:	str	x2, [sp, #144]
    e29c:	ldr	x0, [x0, #72]
    e2a0:	str	x0, [sp, #136]
    e2a4:	ldr	w0, [x24, #116]
    e2a8:	ldr	w1, [x24, #56]
    e2ac:	orr	w0, w0, w1
    e2b0:	tbz	w0, #0, e410 <elf_update@@ELFUTILS_1.0+0x2d48>
    e2b4:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e2b8:	ldr	x0, [x0, #1624]
    e2bc:	cmp	x0, #0x40
    e2c0:	b.ne	e3bc <elf_update@@ELFUTILS_1.0+0x2cf4>  // b.any
    e2c4:	ldr	w0, [sp, #152]
    e2c8:	cbnz	w0, e3e8 <elf_update@@ELFUTILS_1.0+0x2d20>
    e2cc:	ldr	x0, [x24]
    e2d0:	ldr	x1, [x24, #40]
    e2d4:	add	x0, x0, x1
    e2d8:	ldr	x1, [sp, #136]
    e2dc:	cmp	x0, x1
    e2e0:	b.eq	e304 <elf_update@@ELFUTILS_1.0+0x2c3c>  // b.none
    e2e4:	ldp	x2, x3, [x1]
    e2e8:	stp	x2, x3, [x0]
    e2ec:	ldp	x2, x3, [x1, #16]
    e2f0:	stp	x2, x3, [x0, #16]
    e2f4:	ldp	x2, x3, [x1, #32]
    e2f8:	stp	x2, x3, [x0, #32]
    e2fc:	ldp	x2, x3, [x1, #48]
    e300:	stp	x2, x3, [x0, #48]
    e304:	ldr	w0, [x24, #116]
    e308:	and	w0, w0, #0xfffffffe
    e30c:	str	w0, [x24, #116]
    e310:	ldr	x0, [x24, #88]
    e314:	cmp	x0, #0x0
    e318:	cset	w28, eq  // eq = none
    e31c:	add	x1, sp, #0xc0
    e320:	mov	x0, x24
    e324:	bl	10e5c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>
    e328:	str	w0, [sp, #156]
    e32c:	cbnz	w0, ecc4 <elf_update@@ELFUTILS_1.0+0x35fc>
    e330:	ldr	x0, [x24, #88]
    e334:	cbz	x0, e4a8 <elf_update@@ELFUTILS_1.0+0x2de0>
    e338:	ldr	w0, [x24, #120]
    e33c:	ldr	w1, [x24, #56]
    e340:	orr	w0, w0, w1
    e344:	tbz	w0, #0, e4b0 <elf_update@@ELFUTILS_1.0+0x2de8>
    e348:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e34c:	ldr	x0, [x0, #1648]
    e350:	cmp	x0, #0x38
    e354:	b.ne	e418 <elf_update@@ELFUTILS_1.0+0x2d50>  // b.any
    e358:	stp	x19, x20, [sp, #16]
    e35c:	ldr	x0, [sp, #136]
    e360:	ldr	x2, [x0, #32]
    e364:	ldrh	w1, [x0, #52]
    e368:	cmp	x2, x1
    e36c:	b.hi	e444 <elf_update@@ELFUTILS_1.0+0x2d7c>  // b.pmore
    e370:	ldr	w0, [sp, #152]
    e374:	cbnz	w0, e468 <elf_update@@ELFUTILS_1.0+0x2da0>
    e378:	ldr	x0, [sp, #192]
    e37c:	lsl	x2, x0, #3
    e380:	sub	x2, x2, x0
    e384:	ldr	x0, [x24, #40]
    e388:	ldr	x1, [sp, #136]
    e38c:	ldr	x1, [x1, #32]
    e390:	add	x0, x0, x1
    e394:	ldr	x3, [x24]
    e398:	lsl	x2, x2, #3
    e39c:	ldr	x1, [x24, #88]
    e3a0:	add	x0, x3, x0
    e3a4:	bl	3070 <memmove@plt>
    e3a8:	ldr	w0, [x24, #120]
    e3ac:	and	w0, w0, #0xfffffffe
    e3b0:	str	w0, [x24, #120]
    e3b4:	mov	w28, #0x1                   	// #1
    e3b8:	b	e4b4 <elf_update@@ELFUTILS_1.0+0x2dec>
    e3bc:	stp	x19, x20, [sp, #16]
    e3c0:	stp	x21, x22, [sp, #32]
    e3c4:	stp	x25, x26, [sp, #64]
    e3c8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e3cc:	add	x3, x3, #0xe48
    e3d0:	mov	w2, #0x8c                  	// #140
    e3d4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e3d8:	add	x1, x1, #0xba0
    e3dc:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e3e0:	add	x0, x0, #0xbb8
    e3e4:	bl	3380 <__assert_fail@plt>
    e3e8:	ldr	x5, [x24]
    e3ec:	ldr	x0, [x24, #40]
    e3f0:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    e3f4:	ldr	x4, [x1, #3272]
    e3f8:	mov	w3, #0x1                   	// #1
    e3fc:	mov	x2, #0x40                  	// #64
    e400:	ldr	x1, [sp, #136]
    e404:	add	x0, x5, x0
    e408:	blr	x4
    e40c:	b	e304 <elf_update@@ELFUTILS_1.0+0x2c3c>
    e410:	mov	w28, #0x0                   	// #0
    e414:	b	e31c <elf_update@@ELFUTILS_1.0+0x2c54>
    e418:	stp	x19, x20, [sp, #16]
    e41c:	stp	x21, x22, [sp, #32]
    e420:	stp	x25, x26, [sp, #64]
    e424:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e428:	add	x3, x3, #0xe48
    e42c:	mov	w2, #0xaf                  	// #175
    e430:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e434:	add	x1, x1, #0xba0
    e438:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e43c:	add	x0, x0, #0xc08
    e440:	bl	3380 <__assert_fail@plt>
    e444:	ldr	x0, [x24, #40]
    e448:	add	x0, x1, x0
    e44c:	ldr	x3, [x24]
    e450:	sub	x2, x2, x1
    e454:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    e458:	ldr	w1, [x1, #448]
    e45c:	add	x0, x3, x0
    e460:	bl	3140 <memset@plt>
    e464:	b	e370 <elf_update@@ELFUTILS_1.0+0x2ca8>
    e468:	ldr	x0, [sp, #192]
    e46c:	lsl	x2, x0, #3
    e470:	sub	x2, x2, x0
    e474:	ldr	x0, [x24, #40]
    e478:	ldr	x1, [sp, #136]
    e47c:	ldr	x1, [x1, #32]
    e480:	add	x0, x0, x1
    e484:	ldr	x5, [x24]
    e488:	adrp	x1, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    e48c:	ldr	x4, [x1, #3296]
    e490:	mov	w3, #0x1                   	// #1
    e494:	lsl	x2, x2, #3
    e498:	ldr	x1, [x24, #88]
    e49c:	add	x0, x5, x0
    e4a0:	blr	x4
    e4a4:	b	e3a8 <elf_update@@ELFUTILS_1.0+0x2ce0>
    e4a8:	stp	x19, x20, [sp, #16]
    e4ac:	b	e4b4 <elf_update@@ELFUTILS_1.0+0x2dec>
    e4b0:	stp	x19, x20, [sp, #16]
    e4b4:	ldr	x1, [sp, #144]
    e4b8:	cbz	x1, ec54 <elf_update@@ELFUTILS_1.0+0x358c>
    e4bc:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
    e4c0:	cmp	x1, x0
    e4c4:	b.hi	ecd0 <elf_update@@ELFUTILS_1.0+0x3608>  // b.pmore
    e4c8:	stp	x25, x26, [sp, #64]
    e4cc:	ldr	x26, [x24]
    e4d0:	ldr	x25, [x24, #40]
    e4d4:	ldr	x0, [sp, #136]
    e4d8:	ldr	x0, [x0, #32]
    e4dc:	str	x0, [sp, #104]
    e4e0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e4e4:	add	x0, x0, #0x568
    e4e8:	ldr	x2, [x0, #240]
    e4ec:	str	x2, [sp, #112]
    e4f0:	ldr	x0, [x0, #264]
    e4f4:	str	x0, [sp, #168]
    e4f8:	ldr	x0, [sp, #192]
    e4fc:	str	x0, [sp, #176]
    e500:	add	x20, x24, #0xc8
    e504:	lsl	x19, x1, #3
    e508:	mov	x0, x19
    e50c:	bl	3100 <malloc@plt>
    e510:	str	x0, [sp, #160]
    e514:	cbz	x0, e55c <elf_update@@ELFUTILS_1.0+0x2e94>
    e518:	stp	x21, x22, [sp, #32]
    e51c:	ldr	x0, [sp, #136]
    e520:	ldr	x27, [x0, #40]
    e524:	add	x27, x25, x27
    e528:	add	x27, x26, x27
    e52c:	ldrh	w0, [x0, #58]
    e530:	str	w0, [sp, #184]
    e534:	mov	x1, x20
    e538:	ldr	x20, [sp, #160]
    e53c:	mov	x0, x20
    e540:	bl	e118 <elf_update@@ELFUTILS_1.0+0x2a50>
    e544:	str	x20, [sp, #128]
    e548:	add	x1, x19, x20
    e54c:	str	x1, [sp, #120]
    e550:	mov	x19, x20
    e554:	mov	x23, #0x40                  	// #64
    e558:	b	e630 <elf_update@@ELFUTILS_1.0+0x2f68>
    e55c:	mov	w0, #0x8                   	// #8
    e560:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    e564:	mov	w0, #0xffffffff            	// #-1
    e568:	str	w0, [sp, #156]
    e56c:	ldp	x19, x20, [sp, #16]
    e570:	ldp	x25, x26, [sp, #64]
    e574:	b	ecb0 <elf_update@@ELFUTILS_1.0+0x35e8>
    e578:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e57c:	add	x3, x3, #0xe48
    e580:	mov	w2, #0xf8                  	// #248
    e584:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e588:	add	x1, x1, #0xba0
    e58c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e590:	add	x0, x0, #0xc58
    e594:	bl	3380 <__assert_fail@plt>
    e598:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e59c:	add	x3, x3, #0xe48
    e5a0:	mov	w2, #0xfa                  	// #250
    e5a4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e5a8:	add	x1, x1, #0xba0
    e5ac:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e5b0:	add	x0, x0, #0xcb0
    e5b4:	bl	3380 <__assert_fail@plt>
    e5b8:	ldp	x2, x3, [x21]
    e5bc:	stp	x2, x3, [x0]
    e5c0:	ldp	x2, x3, [x21, #16]
    e5c4:	stp	x2, x3, [x0, #16]
    e5c8:	ldp	x2, x3, [x21, #32]
    e5cc:	stp	x2, x3, [x0, #32]
    e5d0:	ldp	x2, x3, [x21, #48]
    e5d4:	stp	x2, x3, [x0, #48]
    e5d8:	str	x0, [x20, #144]
    e5dc:	ldr	x0, [x24]
    e5e0:	ldr	x1, [x24, #40]
    e5e4:	ldr	x21, [x20]
    e5e8:	add	x2, x0, x1
    e5ec:	cmp	x21, x2
    e5f0:	b.cc	e620 <elf_update@@ELFUTILS_1.0+0x2f58>  // b.lo, b.ul, b.last
    e5f4:	ldr	x2, [x24, #48]
    e5f8:	add	x2, x1, x2
    e5fc:	add	x2, x0, x2
    e600:	cmp	x21, x2
    e604:	b.cs	e620 <elf_update@@ELFUTILS_1.0+0x2f58>  // b.hs, b.nlast
    e608:	ldr	x2, [x20, #144]
    e60c:	ldr	x2, [x2, #24]
    e610:	add	x1, x1, x2
    e614:	add	x0, x0, x1
    e618:	cmp	x21, x0
    e61c:	b.cc	e6b4 <elf_update@@ELFUTILS_1.0+0x2fec>  // b.lo, b.ul, b.last
    e620:	add	x19, x19, #0x8
    e624:	ldr	x0, [sp, #120]
    e628:	cmp	x19, x0
    e62c:	b.eq	e704 <elf_update@@ELFUTILS_1.0+0x303c>  // b.none
    e630:	ldr	x20, [x19]
    e634:	ldr	w0, [x24, #124]
    e638:	cbnz	w0, e5dc <elf_update@@ELFUTILS_1.0+0x2f14>
    e63c:	ldr	w0, [x20, #152]
    e640:	tbnz	w0, #7, e5dc <elf_update@@ELFUTILS_1.0+0x2f14>
    e644:	ldr	x21, [x20, #144]
    e648:	ldr	x0, [x20, #128]
    e64c:	add	x0, x27, x0, lsl #6
    e650:	cmp	x21, x0
    e654:	b.eq	e5dc <elf_update@@ELFUTILS_1.0+0x2f14>  // b.none
    e658:	ldr	x0, [x24]
    e65c:	ldr	x1, [x24, #40]
    e660:	add	x2, x0, x1
    e664:	cmp	x21, x2
    e668:	b.ls	e578 <elf_update@@ELFUTILS_1.0+0x2eb0>  // b.plast
    e66c:	ldr	x2, [x24, #48]
    e670:	add	x1, x1, x2
    e674:	add	x0, x0, x1
    e678:	cmp	x21, x0
    e67c:	b.cs	e598 <elf_update@@ELFUTILS_1.0+0x2ed0>  // b.hs, b.nlast
    e680:	mov	x0, x23
    e684:	bl	3100 <malloc@plt>
    e688:	cbnz	x0, e5b8 <elf_update@@ELFUTILS_1.0+0x2ef0>
    e68c:	ldr	x0, [sp, #160]
    e690:	bl	3250 <free@plt>
    e694:	mov	w0, #0x8                   	// #8
    e698:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    e69c:	mov	w0, #0xffffffff            	// #-1
    e6a0:	str	w0, [sp, #156]
    e6a4:	ldp	x19, x20, [sp, #16]
    e6a8:	ldp	x21, x22, [sp, #32]
    e6ac:	ldp	x25, x26, [sp, #64]
    e6b0:	b	ecb0 <elf_update@@ELFUTILS_1.0+0x35e8>
    e6b4:	ldr	x22, [x20, #16]
    e6b8:	mov	x0, x22
    e6bc:	bl	3100 <malloc@plt>
    e6c0:	cbz	x0, e6dc <elf_update@@ELFUTILS_1.0+0x3014>
    e6c4:	mov	x2, x22
    e6c8:	mov	x1, x21
    e6cc:	bl	3060 <memcpy@plt>
    e6d0:	str	x0, [x20, #168]
    e6d4:	str	x0, [x20]
    e6d8:	b	e620 <elf_update@@ELFUTILS_1.0+0x2f58>
    e6dc:	ldr	x0, [sp, #160]
    e6e0:	bl	3250 <free@plt>
    e6e4:	mov	w0, #0x8                   	// #8
    e6e8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    e6ec:	mov	w0, #0xffffffff            	// #-1
    e6f0:	str	w0, [sp, #156]
    e6f4:	ldp	x19, x20, [sp, #16]
    e6f8:	ldp	x21, x22, [sp, #32]
    e6fc:	ldp	x25, x26, [sp, #64]
    e700:	b	ecb0 <elf_update@@ELFUTILS_1.0+0x35e8>
    e704:	ldr	x0, [sp, #168]
    e708:	ldr	x1, [sp, #176]
    e70c:	madd	x20, x0, x1, x25
    e710:	ldr	x0, [sp, #104]
    e714:	ldr	x1, [sp, #112]
    e718:	cmp	x0, x1
    e71c:	csel	x0, x0, x1, cs  // cs = hs, nlast
    e720:	add	x20, x20, x0
    e724:	add	x20, x26, x20
    e728:	ldrh	w0, [sp, #184]
    e72c:	ldr	x1, [sp, #144]
    e730:	madd	x0, x0, x1, x27
    e734:	str	x0, [sp, #104]
    e738:	ldr	x0, [sp, #160]
    e73c:	str	x0, [sp, #112]
    e740:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e744:	add	x0, x0, #0xa60
    e748:	str	x0, [sp, #176]
    e74c:	add	x0, sp, #0xc8
    e750:	str	x0, [sp, #184]
    e754:	b	e7c0 <elf_update@@ELFUTILS_1.0+0x30f8>
    e758:	ldr	x26, [x25, #144]
    e75c:	ldr	w0, [x26, #4]
    e760:	cmp	w0, #0x8
    e764:	b.eq	e79c <elf_update@@ELFUTILS_1.0+0x30d4>  // b.none
    e768:	ldr	x22, [x24, #40]
    e76c:	ldr	x0, [x26, #24]
    e770:	add	x0, x22, x0
    e774:	ldr	x22, [x24]
    e778:	add	x22, x22, x0
    e77c:	ldr	x0, [x25, #64]
    e780:	cbnz	x0, e7f8 <elf_update@@ELFUTILS_1.0+0x3130>
    e784:	cmp	w28, #0x0
    e788:	ccmp	x20, x22, #0x2, ne  // ne = any
    e78c:	b.cc	eac8 <elf_update@@ELFUTILS_1.0+0x3400>  // b.lo, b.ul, b.last
    e790:	ldr	x20, [x26, #32]
    e794:	add	x20, x22, x20
    e798:	mov	w28, #0x0                   	// #0
    e79c:	ldr	w0, [x25, #156]
    e7a0:	and	w0, w0, #0xfffffffe
    e7a4:	str	w0, [x25, #156]
    e7a8:	ldr	x0, [sp, #112]
    e7ac:	add	x0, x0, #0x8
    e7b0:	str	x0, [sp, #112]
    e7b4:	ldr	x1, [sp, #120]
    e7b8:	cmp	x0, x1
    e7bc:	b.eq	eb28 <elf_update@@ELFUTILS_1.0+0x3460>  // b.none
    e7c0:	ldr	x0, [sp, #112]
    e7c4:	ldr	x25, [x0]
    e7c8:	ldr	x0, [x25, #128]
    e7cc:	cbnz	x0, e758 <elf_update@@ELFUTILS_1.0+0x3090>
    e7d0:	ldr	w0, [x25, #156]
    e7d4:	tbz	w0, #0, e7a8 <elf_update@@ELFUTILS_1.0+0x30e0>
    e7d8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e7dc:	add	x3, x3, #0xe48
    e7e0:	mov	w2, #0x12f                 	// #303
    e7e4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e7e8:	add	x1, x1, #0xba0
    e7ec:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e7f0:	add	x0, x0, #0xd20
    e7f4:	bl	3380 <__assert_fail@plt>
    e7f8:	mov	x19, x25
    e7fc:	mov	w28, #0x0                   	// #0
    e800:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    e804:	add	x0, x0, #0xbd8
    e808:	str	x0, [sp, #168]
    e80c:	b	e9c4 <elf_update@@ELFUTILS_1.0+0x32fc>
    e810:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e814:	add	x3, x3, #0xe48
    e818:	mov	w2, #0x13f                 	// #319
    e81c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e820:	add	x1, x1, #0xba0
    e824:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e828:	add	x0, x0, #0xd40
    e82c:	bl	3380 <__assert_fail@plt>
    e830:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e834:	add	x3, x3, #0xe48
    e838:	mov	w2, #0x140                 	// #320
    e83c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e840:	add	x1, x1, #0xba0
    e844:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e848:	add	x0, x0, #0xd58
    e84c:	bl	3380 <__assert_fail@plt>
    e850:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e854:	add	x3, x3, #0xe48
    e858:	mov	w2, #0x141                 	// #321
    e85c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e860:	add	x1, x1, #0xba0
    e864:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    e868:	add	x0, x0, #0xd88
    e86c:	bl	3380 <__assert_fail@plt>
    e870:	cmp	x0, x22
    e874:	csel	x0, x0, x22, cs  // cs = hs, nlast
    e878:	sub	x2, x21, x0
    e87c:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    e880:	ldr	w1, [x1, #448]
    e884:	bl	3140 <memset@plt>
    e888:	b	ea54 <elf_update@@ELFUTILS_1.0+0x338c>
    e88c:	ldr	x21, [x19, #16]
    e890:	mov	w28, #0x1                   	// #1
    e894:	cbz	x21, e9b0 <elf_update@@ELFUTILS_1.0+0x32e8>
    e898:	ldr	w23, [x19, #8]
    e89c:	cbz	w23, ea88 <elf_update@@ELFUTILS_1.0+0x33c0>
    e8a0:	ldr	x0, [sp, #176]
    e8a4:	add	x0, x0, w23, uxtw
    e8a8:	ldrb	w2, [x0, #27]
    e8ac:	ldrb	w1, [x0, #27]
    e8b0:	cmp	w2, #0x0
    e8b4:	csinc	w1, w1, wzr, ne  // ne = any
    e8b8:	and	x1, x1, #0xff
    e8bc:	sub	x0, x1, #0x1
    e8c0:	tst	x20, x0
    e8c4:	b.ne	e8f8 <elf_update@@ELFUTILS_1.0+0x3230>  // b.any
    e8c8:	ldr	x0, [sp, #168]
    e8cc:	add	x23, x0, w23, uxtw #3
    e8d0:	ldr	x4, [x23, #216]
    e8d4:	mov	w3, w28
    e8d8:	mov	x2, x21
    e8dc:	ldr	x1, [x19]
    e8e0:	mov	x0, x20
    e8e4:	blr	x4
    e8e8:	ldr	x0, [x19, #16]
    e8ec:	add	x20, x20, x0
    e8f0:	mov	w28, #0x1                   	// #1
    e8f4:	b	e998 <elf_update@@ELFUTILS_1.0+0x32d0>
    e8f8:	cmp	x1, #0x7
    e8fc:	b.hi	e94c <elf_update@@ELFUTILS_1.0+0x3284>  // b.pmore
    e900:	mov	x0, x21
    e904:	bl	3100 <malloc@plt>
    e908:	mov	x28, x0
    e90c:	cbz	x28, e964 <elf_update@@ELFUTILS_1.0+0x329c>
    e910:	ldr	x0, [sp, #168]
    e914:	add	x23, x0, w23, uxtw #3
    e918:	ldr	x4, [x23, #216]
    e91c:	mov	w3, #0x1                   	// #1
    e920:	mov	x2, x21
    e924:	ldr	x1, [x19]
    e928:	mov	x0, x28
    e92c:	blr	x4
    e930:	mov	x2, x21
    e934:	mov	x1, x28
    e938:	mov	x0, x20
    e93c:	bl	3060 <memcpy@plt>
    e940:	mov	x0, x28
    e944:	bl	3250 <free@plt>
    e948:	b	e8e8 <elf_update@@ELFUTILS_1.0+0x3220>
    e94c:	mov	x2, x21
    e950:	ldr	x0, [sp, #184]
    e954:	bl	3170 <posix_memalign@plt>
    e958:	cbnz	w0, e964 <elf_update@@ELFUTILS_1.0+0x329c>
    e95c:	ldr	x28, [sp, #200]
    e960:	b	e90c <elf_update@@ELFUTILS_1.0+0x3244>
    e964:	ldr	x0, [sp, #160]
    e968:	bl	3250 <free@plt>
    e96c:	mov	w0, #0x8                   	// #8
    e970:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    e974:	mov	w0, #0x1                   	// #1
    e978:	str	w0, [sp, #156]
    e97c:	ldp	x19, x20, [sp, #16]
    e980:	ldp	x21, x22, [sp, #32]
    e984:	ldp	x25, x26, [sp, #64]
    e988:	b	ecb0 <elf_update@@ELFUTILS_1.0+0x35e8>
    e98c:	mov	x20, x21
    e990:	ldr	x0, [x19, #16]
    e994:	add	x20, x20, x0
    e998:	ldr	x0, [x19, #24]
    e99c:	ldr	x1, [x19, #16]
    e9a0:	add	x0, x0, x1
    e9a4:	add	x0, x22, x0
    e9a8:	cmp	x20, x0
    e9ac:	b.ne	eaa8 <elf_update@@ELFUTILS_1.0+0x33e0>  // b.any
    e9b0:	ldr	w0, [x19, #56]
    e9b4:	and	w0, w0, #0xfffffffe
    e9b8:	str	w0, [x19, #56]
    e9bc:	ldr	x19, [x19, #48]
    e9c0:	cbz	x19, e79c <elf_update@@ELFUTILS_1.0+0x30d4>
    e9c4:	ldr	x0, [x19, #24]
    e9c8:	tbnz	x0, #63, e810 <elf_update@@ELFUTILS_1.0+0x3148>
    e9cc:	ldr	x1, [x26, #32]
    e9d0:	cmp	x0, x1
    e9d4:	b.hi	e830 <elf_update@@ELFUTILS_1.0+0x3168>  // b.pmore
    e9d8:	sub	x1, x1, x0
    e9dc:	ldr	x2, [x19, #16]
    e9e0:	cmp	x2, x1
    e9e4:	b.hi	e850 <elf_update@@ELFUTILS_1.0+0x3188>  // b.pmore
    e9e8:	add	x21, x22, x0
    e9ec:	cmp	x21, x20
    e9f0:	b.ls	ea54 <elf_update@@ELFUTILS_1.0+0x338c>  // b.plast
    e9f4:	cbz	x0, ea10 <elf_update@@ELFUTILS_1.0+0x3348>
    e9f8:	ldr	w0, [x25, #156]
    e9fc:	ldr	w1, [x24, #56]
    ea00:	orr	w0, w0, w1
    ea04:	ldr	w1, [x19, #56]
    ea08:	orr	w0, w0, w1
    ea0c:	tbz	w0, #0, e98c <elf_update@@ELFUTILS_1.0+0x32c4>
    ea10:	mov	x23, #0x0                   	// #0
    ea14:	cmp	x20, x27
    ea18:	b.cs	ea40 <elf_update@@ELFUTILS_1.0+0x3378>  // b.hs, b.nlast
    ea1c:	sub	x0, x21, x20
    ea20:	sub	x23, x27, x20
    ea24:	cmp	x21, x27
    ea28:	csel	x23, x23, x0, cs  // cs = hs, nlast
    ea2c:	mov	x2, x23
    ea30:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    ea34:	ldr	w1, [x0, #448]
    ea38:	mov	x0, x20
    ea3c:	bl	3140 <memset@plt>
    ea40:	add	x20, x20, x23
    ea44:	cmp	x20, x21
    ea48:	ldr	x0, [sp, #104]
    ea4c:	ccmp	x21, x0, #0x0, ne  // ne = any
    ea50:	b.hi	e870 <elf_update@@ELFUTILS_1.0+0x31a8>  // b.pmore
    ea54:	ldr	x20, [x19, #24]
    ea58:	add	x20, x22, x20
    ea5c:	ldr	w0, [x25, #156]
    ea60:	ldr	w1, [x24, #56]
    ea64:	orr	w0, w0, w1
    ea68:	ldr	w1, [x19, #56]
    ea6c:	orr	w0, w0, w1
    ea70:	tbz	w0, #0, e990 <elf_update@@ELFUTILS_1.0+0x32c8>
    ea74:	ldr	w0, [sp, #152]
    ea78:	cbnz	w0, e88c <elf_update@@ELFUTILS_1.0+0x31c4>
    ea7c:	ldr	x21, [x19, #16]
    ea80:	mov	w28, #0x1                   	// #1
    ea84:	cbz	x21, e9b0 <elf_update@@ELFUTILS_1.0+0x32e8>
    ea88:	mov	x2, x21
    ea8c:	ldr	x1, [x19]
    ea90:	mov	x0, x20
    ea94:	bl	3070 <memmove@plt>
    ea98:	ldr	x0, [x19, #16]
    ea9c:	add	x20, x20, x0
    eaa0:	mov	w28, #0x1                   	// #1
    eaa4:	b	e998 <elf_update@@ELFUTILS_1.0+0x32d0>
    eaa8:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    eaac:	add	x3, x3, #0xe48
    eab0:	mov	w2, #0x197                 	// #407
    eab4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    eab8:	add	x1, x1, #0xba0
    eabc:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    eac0:	add	x0, x0, #0xdd0
    eac4:	bl	3380 <__assert_fail@plt>
    eac8:	mov	x19, #0x0                   	// #0
    eacc:	cmp	x20, x27
    ead0:	b.cs	eaf8 <elf_update@@ELFUTILS_1.0+0x3430>  // b.hs, b.nlast
    ead4:	sub	x0, x22, x20
    ead8:	sub	x19, x27, x20
    eadc:	cmp	x27, x22
    eae0:	csel	x19, x19, x0, ls  // ls = plast
    eae4:	mov	x2, x19
    eae8:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    eaec:	ldr	w1, [x0, #448]
    eaf0:	mov	x0, x20
    eaf4:	bl	3140 <memset@plt>
    eaf8:	add	x19, x20, x19
    eafc:	cmp	x19, x22
    eb00:	ldr	x0, [sp, #104]
    eb04:	ccmp	x0, x22, #0x2, ne  // ne = any
    eb08:	b.cs	e790 <elf_update@@ELFUTILS_1.0+0x30c8>  // b.hs, b.nlast
    eb0c:	cmp	x0, x22
    eb10:	csel	x0, x0, x22, cs  // cs = hs, nlast
    eb14:	sub	x2, x22, x0
    eb18:	adrp	x1, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    eb1c:	ldr	w1, [x1, #448]
    eb20:	bl	3140 <memset@plt>
    eb24:	b	e790 <elf_update@@ELFUTILS_1.0+0x30c8>
    eb28:	ldr	w0, [x24, #56]
    eb2c:	tbz	w0, #0, eb50 <elf_update@@ELFUTILS_1.0+0x3488>
    eb30:	ldr	x0, [x24, #40]
    eb34:	ldr	x1, [sp, #136]
    eb38:	ldr	x2, [x1, #40]
    eb3c:	add	x0, x0, x2
    eb40:	ldr	x2, [x24]
    eb44:	add	x2, x2, x0
    eb48:	cmp	x2, x20
    eb4c:	b.hi	eb64 <elf_update@@ELFUTILS_1.0+0x349c>  // b.pmore
    eb50:	adrp	x20, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    eb54:	add	x20, x20, #0xbd8
    eb58:	mov	w21, #0x1                   	// #1
    eb5c:	mov	x22, #0x40                  	// #64
    eb60:	b	ebc0 <elf_update@@ELFUTILS_1.0+0x34f8>
    eb64:	sub	x2, x2, x20
    eb68:	adrp	x0, 28000 <elf_compress_gnu@@ELFUTILS_1.7+0x15660>
    eb6c:	ldr	w1, [x0, #448]
    eb70:	mov	x0, x20
    eb74:	bl	3140 <memset@plt>
    eb78:	b	eb50 <elf_update@@ELFUTILS_1.0+0x3488>
    eb7c:	ldr	x0, [x19, #128]
    eb80:	ldr	x4, [x20, #288]
    eb84:	mov	w3, w21
    eb88:	mov	x2, x22
    eb8c:	ldr	x1, [x19, #144]
    eb90:	add	x0, x27, x0, lsl #6
    eb94:	blr	x4
    eb98:	b	ec0c <elf_update@@ELFUTILS_1.0+0x3544>
    eb9c:	ldr	w0, [x19, #152]
    eba0:	and	w0, w0, #0xfffffffe
    eba4:	str	w0, [x19, #152]
    eba8:	ldr	x0, [sp, #128]
    ebac:	add	x0, x0, #0x8
    ebb0:	str	x0, [sp, #128]
    ebb4:	ldr	x1, [sp, #120]
    ebb8:	cmp	x0, x1
    ebbc:	b.eq	ec44 <elf_update@@ELFUTILS_1.0+0x357c>  // b.none
    ebc0:	ldr	x0, [sp, #128]
    ebc4:	ldr	x19, [x0]
    ebc8:	ldr	w0, [x19, #152]
    ebcc:	ldr	w1, [x24, #56]
    ebd0:	orr	w0, w0, w1
    ebd4:	tbz	w0, #0, eba8 <elf_update@@ELFUTILS_1.0+0x34e0>
    ebd8:	ldr	w0, [sp, #152]
    ebdc:	cbnz	w0, eb7c <elf_update@@ELFUTILS_1.0+0x34b4>
    ebe0:	ldr	x0, [x19, #128]
    ebe4:	add	x0, x27, x0, lsl #6
    ebe8:	ldr	x1, [x19, #144]
    ebec:	ldp	x2, x3, [x1]
    ebf0:	stp	x2, x3, [x0]
    ebf4:	ldp	x2, x3, [x1, #16]
    ebf8:	stp	x2, x3, [x0, #16]
    ebfc:	ldp	x2, x3, [x1, #32]
    ec00:	stp	x2, x3, [x0, #32]
    ec04:	ldp	x2, x3, [x1, #48]
    ec08:	stp	x2, x3, [x0, #48]
    ec0c:	ldr	w0, [x24, #124]
    ec10:	cbnz	w0, eb9c <elf_update@@ELFUTILS_1.0+0x34d4>
    ec14:	ldr	w0, [x19, #152]
    ec18:	tbnz	w0, #7, eb9c <elf_update@@ELFUTILS_1.0+0x34d4>
    ec1c:	ldr	x0, [x19, #144]
    ec20:	ldr	x1, [x19, #128]
    ec24:	add	x1, x27, x1, lsl #6
    ec28:	cmp	x0, x1
    ec2c:	b.eq	eb9c <elf_update@@ELFUTILS_1.0+0x34d4>  // b.none
    ec30:	bl	3250 <free@plt>
    ec34:	ldr	x0, [x19, #128]
    ec38:	add	x0, x27, x0, lsl #6
    ec3c:	str	x0, [x19, #144]
    ec40:	b	eb9c <elf_update@@ELFUTILS_1.0+0x34d4>
    ec44:	ldr	x0, [sp, #160]
    ec48:	bl	3250 <free@plt>
    ec4c:	ldp	x21, x22, [sp, #32]
    ec50:	ldp	x25, x26, [sp, #64]
    ec54:	ldr	w0, [x24, #56]
    ec58:	and	w0, w0, #0xfffffffe
    ec5c:	str	w0, [x24, #56]
    ec60:	ldr	x19, [x24]
    ec64:	ldr	x20, [x24, #40]
    ec68:	mov	w0, #0x1e                  	// #30
    ec6c:	bl	3320 <sysconf@plt>
    ec70:	neg	x0, x0
    ec74:	and	x0, x0, x20
    ec78:	add	x0, x19, x0
    ec7c:	ldr	x2, [x24, #40]
    ec80:	ldr	x3, [sp, #136]
    ec84:	ldr	x1, [x3, #40]
    ec88:	add	x2, x2, x1
    ec8c:	ldrh	w1, [x3, #58]
    ec90:	ldr	x3, [sp, #144]
    ec94:	madd	x2, x1, x3, x2
    ec98:	ldr	x1, [x24]
    ec9c:	add	x1, x1, x2
    eca0:	mov	w2, #0x4                   	// #4
    eca4:	sub	x1, x1, x0
    eca8:	bl	3080 <msync@plt>
    ecac:	ldp	x19, x20, [sp, #16]
    ecb0:	ldr	w0, [sp, #156]
    ecb4:	ldp	x23, x24, [sp, #48]
    ecb8:	ldp	x27, x28, [sp, #80]
    ecbc:	ldp	x29, x30, [sp], #208
    ecc0:	ret
    ecc4:	mov	w0, #0xffffffff            	// #-1
    ecc8:	str	w0, [sp, #156]
    eccc:	b	ecb0 <elf_update@@ELFUTILS_1.0+0x35e8>
    ecd0:	mov	w0, #0x1                   	// #1
    ecd4:	str	w0, [sp, #156]
    ecd8:	ldp	x19, x20, [sp, #16]
    ecdc:	b	ecb0 <elf_update@@ELFUTILS_1.0+0x35e8>
    ece0:	mov	x12, #0x90f0                	// #37104
    ece4:	sub	sp, sp, x12
    ece8:	stp	x29, x30, [sp]
    ecec:	mov	x29, sp
    ecf0:	stp	x19, x20, [sp, #16]
    ecf4:	stp	x21, x22, [sp, #32]
    ecf8:	stp	x23, x24, [sp, #48]
    ecfc:	stp	x25, x26, [sp, #64]
    ed00:	mov	x20, x0
    ed04:	str	w1, [sp, #112]
    ed08:	str	x2, [sp, #120]
    ed0c:	add	x0, sp, #0x8, lsl #12
    ed10:	add	x0, x0, #0x80
    ed14:	str	xzr, [x0, #104]
    ed18:	ldr	x24, [x20, #72]
    ed1c:	ldr	w0, [x20, #116]
    ed20:	ldr	w1, [x20, #56]
    ed24:	orr	w0, w0, w1
    ed28:	and	w1, w0, #0x1
    ed2c:	str	w1, [sp, #116]
    ed30:	tbz	w0, #0, ee28 <elf_update@@ELFUTILS_1.0+0x3760>
    ed34:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    ed38:	ldr	x0, [x0, #1624]
    ed3c:	cmp	x0, #0x40
    ed40:	b.ne	ed60 <elf_update@@ELFUTILS_1.0+0x3698>  // b.any
    ed44:	mov	x22, x24
    ed48:	ldr	w0, [sp, #112]
    ed4c:	cbnz	w0, ed88 <elf_update@@ELFUTILS_1.0+0x36c0>
    ed50:	ldr	w25, [x20, #36]
    ed54:	mov	x19, #0x0                   	// #0
    ed58:	mov	x23, #0x40                  	// #64
    ed5c:	b	edc0 <elf_update@@ELFUTILS_1.0+0x36f8>
    ed60:	stp	x27, x28, [sp, #80]
    ed64:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    ed68:	add	x3, x3, #0xe48
    ed6c:	add	x3, x3, #0x18
    ed70:	mov	w2, #0x228                 	// #552
    ed74:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    ed78:	add	x1, x1, #0xba0
    ed7c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    ed80:	add	x0, x0, #0xbb8
    ed84:	bl	3380 <__assert_fail@plt>
    ed88:	add	x22, sp, #0xe0
    ed8c:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    ed90:	ldr	x4, [x0, #3272]
    ed94:	mov	w3, #0x1                   	// #1
    ed98:	mov	x2, #0x40                  	// #64
    ed9c:	mov	x1, x24
    eda0:	mov	x0, x22
    eda4:	blr	x4
    eda8:	b	ed50 <elf_update@@ELFUTILS_1.0+0x3688>
    edac:	cmp	x0, #0x0
    edb0:	b.le	edf0 <elf_update@@ELFUTILS_1.0+0x3728>
    edb4:	add	x19, x19, x0
    edb8:	cmp	x19, #0x3f
    edbc:	b.hi	edf4 <elf_update@@ELFUTILS_1.0+0x372c>  // b.pmore
    edc0:	mov	x3, x19
    edc4:	sub	x2, x23, x19
    edc8:	add	x1, x22, x19
    edcc:	mov	w0, w25
    edd0:	bl	3270 <pwrite@plt>
    edd4:	mov	x21, x0
    edd8:	cmn	x0, #0x1
    eddc:	b.ne	edac <elf_update@@ELFUTILS_1.0+0x36e4>  // b.any
    ede0:	bl	3390 <__errno_location@plt>
    ede4:	ldr	w0, [x0]
    ede8:	cmp	w0, #0x4
    edec:	b.eq	edc0 <elf_update@@ELFUTILS_1.0+0x36f8>  // b.none
    edf0:	tbnz	x21, #63, ee1c <elf_update@@ELFUTILS_1.0+0x3754>
    edf4:	cmp	x19, #0x40
    edf8:	b.ne	ee1c <elf_update@@ELFUTILS_1.0+0x3754>  // b.any
    edfc:	ldr	w0, [x20, #116]
    ee00:	and	w0, w0, #0xfffffffe
    ee04:	str	w0, [x20, #116]
    ee08:	ldr	x0, [x20, #88]
    ee0c:	cmp	x0, #0x0
    ee10:	cset	w0, eq  // eq = none
    ee14:	str	w0, [sp, #96]
    ee18:	b	ee2c <elf_update@@ELFUTILS_1.0+0x3764>
    ee1c:	mov	w0, #0x14                  	// #20
    ee20:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    ee24:	b	f548 <elf_update@@ELFUTILS_1.0+0x3e80>
    ee28:	str	wzr, [sp, #96]
    ee2c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    ee30:	ldr	x0, [x0, #1648]
    ee34:	cmp	x0, #0x38
    ee38:	b.ne	eec0 <elf_update@@ELFUTILS_1.0+0x37f8>  // b.any
    ee3c:	add	x1, sp, #0x8, lsl #12
    ee40:	add	x1, x1, #0xe0
    ee44:	mov	x0, x20
    ee48:	bl	10e5c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>
    ee4c:	str	w0, [sp, #116]
    ee50:	cbnz	w0, f578 <elf_update@@ELFUTILS_1.0+0x3eb0>
    ee54:	stp	x27, x28, [sp, #80]
    ee58:	ldr	x23, [x20, #88]
    ee5c:	cbz	x23, f0e0 <elf_update@@ELFUTILS_1.0+0x3a18>
    ee60:	ldr	w0, [x20, #120]
    ee64:	ldr	w1, [x20, #56]
    ee68:	orr	w0, w0, w1
    ee6c:	and	w28, w0, #0x1
    ee70:	tbz	w0, #0, eff0 <elf_update@@ELFUTILS_1.0+0x3928>
    ee74:	ldr	x0, [x24, #32]
    ee78:	ldrh	w1, [x24, #52]
    ee7c:	and	x2, x1, #0xffff
    ee80:	cmp	x0, w1, uxth
    ee84:	b.hi	eee8 <elf_update@@ELFUTILS_1.0+0x3820>  // b.pmore
    ee88:	str	xzr, [sp, #96]
    ee8c:	ldr	w0, [sp, #112]
    ee90:	cbnz	w0, ef18 <elf_update@@ELFUTILS_1.0+0x3850>
    ee94:	add	x0, sp, #0x8, lsl #12
    ee98:	add	x0, x0, #0x80
    ee9c:	ldr	x0, [x0, #96]
    eea0:	lsl	x27, x0, #3
    eea4:	sub	x27, x27, x0
    eea8:	lsl	x27, x27, #3
    eeac:	mov	x22, x27
    eeb0:	ldr	w26, [x20, #36]
    eeb4:	ldr	x25, [x24, #32]
    eeb8:	mov	x19, #0x0                   	// #0
    eebc:	b	ef8c <elf_update@@ELFUTILS_1.0+0x38c4>
    eec0:	stp	x27, x28, [sp, #80]
    eec4:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    eec8:	add	x3, x3, #0xe48
    eecc:	add	x3, x3, #0x18
    eed0:	mov	w2, #0x24a                 	// #586
    eed4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    eed8:	add	x1, x1, #0xba0
    eedc:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    eee0:	add	x0, x0, #0xc08
    eee4:	bl	3380 <__assert_fail@plt>
    eee8:	add	x4, sp, #0x8, lsl #12
    eeec:	add	x4, x4, #0xe8
    eef0:	add	x3, sp, #0x8, lsl #12
    eef4:	add	x3, x3, #0xf0
    eef8:	sub	x2, x0, x2
    eefc:	and	x1, x1, #0xffff
    ef00:	ldr	w0, [x20, #36]
    ef04:	bl	e17c <elf_update@@ELFUTILS_1.0+0x2ab4>
    ef08:	cbz	w0, ee88 <elf_update@@ELFUTILS_1.0+0x37c0>
    ef0c:	str	w28, [sp, #116]
    ef10:	ldp	x27, x28, [sp, #80]
    ef14:	b	f548 <elf_update@@ELFUTILS_1.0+0x3e80>
    ef18:	add	x0, sp, #0x8, lsl #12
    ef1c:	add	x0, x0, #0x80
    ef20:	ldr	x0, [x0, #96]
    ef24:	lsl	x19, x0, #3
    ef28:	sub	x19, x19, x0
    ef2c:	lsl	x19, x19, #3
    ef30:	mov	x0, x19
    ef34:	bl	3100 <malloc@plt>
    ef38:	str	x0, [sp, #96]
    ef3c:	cbz	x0, ef64 <elf_update@@ELFUTILS_1.0+0x389c>
    ef40:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    ef44:	ldr	x4, [x0, #3296]
    ef48:	mov	w3, #0x1                   	// #1
    ef4c:	mov	x2, x19
    ef50:	ldr	x1, [x20, #88]
    ef54:	ldr	x23, [sp, #96]
    ef58:	mov	x0, x23
    ef5c:	blr	x4
    ef60:	b	ee94 <elf_update@@ELFUTILS_1.0+0x37cc>
    ef64:	mov	w0, #0x8                   	// #8
    ef68:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    ef6c:	str	w28, [sp, #116]
    ef70:	ldp	x27, x28, [sp, #80]
    ef74:	b	f548 <elf_update@@ELFUTILS_1.0+0x3e80>
    ef78:	cmp	x0, #0x0
    ef7c:	b.le	efbc <elf_update@@ELFUTILS_1.0+0x38f4>
    ef80:	add	x19, x19, x0
    ef84:	cmp	x22, x19
    ef88:	b.ls	efc4 <elf_update@@ELFUTILS_1.0+0x38fc>  // b.plast
    ef8c:	add	x3, x25, x19
    ef90:	sub	x2, x22, x19
    ef94:	add	x1, x23, x19
    ef98:	mov	w0, w26
    ef9c:	bl	3270 <pwrite@plt>
    efa0:	mov	x21, x0
    efa4:	cmn	x0, #0x1
    efa8:	b.ne	ef78 <elf_update@@ELFUTILS_1.0+0x38b0>  // b.any
    efac:	bl	3390 <__errno_location@plt>
    efb0:	ldr	w0, [x0]
    efb4:	cmp	w0, #0x4
    efb8:	b.eq	ef8c <elf_update@@ELFUTILS_1.0+0x38c4>  // b.none
    efbc:	cmp	x21, #0x0
    efc0:	csel	x19, x19, x21, ge  // ge = tcont
    efc4:	cmp	x27, x19
    efc8:	b.ne	f0cc <elf_update@@ELFUTILS_1.0+0x3a04>  // b.any
    efcc:	ldr	x0, [sp, #96]
    efd0:	bl	3250 <free@plt>
    efd4:	ldr	w0, [x20, #120]
    efd8:	and	w0, w0, #0xfffffffe
    efdc:	str	w0, [x20, #120]
    efe0:	ldr	x0, [x20, #88]
    efe4:	mov	w1, #0x1                   	// #1
    efe8:	str	w1, [sp, #96]
    efec:	cbz	x0, f0e0 <elf_update@@ELFUTILS_1.0+0x3a18>
    eff0:	add	x0, sp, #0x8, lsl #12
    eff4:	add	x0, x0, #0x80
    eff8:	ldr	x0, [x0, #96]
    effc:	lsl	x21, x0, #3
    f000:	sub	x21, x21, x0
    f004:	ldr	x0, [x24, #32]
    f008:	add	x21, x0, x21, lsl #3
    f00c:	ldr	x1, [sp, #120]
    f010:	cbz	x1, f538 <elf_update@@ELFUTILS_1.0+0x3e70>
    f014:	mov	x0, #0xe38e                	// #58254
    f018:	movk	x0, #0x8e38, lsl #16
    f01c:	movk	x0, #0x38e3, lsl #32
    f020:	movk	x0, #0x38e, lsl #48
    f024:	cmp	x1, x0
    f028:	b.hi	f584 <elf_update@@ELFUTILS_1.0+0x3ebc>  // b.pmore
    f02c:	ldr	x0, [x20, #40]
    f030:	str	x0, [sp, #208]
    f034:	ldr	x0, [x24, #40]
    f038:	str	x0, [sp, #216]
    f03c:	ldr	w0, [sp, #112]
    f040:	cbnz	w0, f058 <elf_update@@ELFUTILS_1.0+0x3990>
    f044:	ldr	x0, [x20, #80]
    f048:	str	x0, [sp, #136]
    f04c:	cbz	x0, f058 <elf_update@@ELFUTILS_1.0+0x3990>
    f050:	ldr	w0, [x20, #56]
    f054:	tbz	w0, #0, f104 <elf_update@@ELFUTILS_1.0+0x3a3c>
    f058:	ldr	x0, [sp, #120]
    f05c:	lsl	x0, x0, #6
    f060:	bl	3100 <malloc@plt>
    f064:	str	x0, [sp, #136]
    f068:	str	x0, [sp, #176]
    f06c:	cbz	x0, f0ec <elf_update@@ELFUTILS_1.0+0x3a24>
    f070:	ldr	w0, [x20, #56]
    f074:	str	w0, [sp, #104]
    f078:	add	x22, x20, #0xc8
    f07c:	ldr	x0, [sp, #120]
    f080:	lsl	x19, x0, #3
    f084:	mov	x0, x19
    f088:	bl	3100 <malloc@plt>
    f08c:	str	x0, [sp, #168]
    f090:	cbz	x0, f10c <elf_update@@ELFUTILS_1.0+0x3a44>
    f094:	mov	x1, x22
    f098:	ldr	x22, [sp, #168]
    f09c:	mov	x0, x22
    f0a0:	bl	e118 <elf_update@@ELFUTILS_1.0+0x2a50>
    f0a4:	mov	x28, x22
    f0a8:	add	x0, x22, x19
    f0ac:	str	x0, [sp, #128]
    f0b0:	add	x1, sp, #0xe0
    f0b4:	str	x1, [sp, #144]
    f0b8:	adrp	x0, 27000 <elf_compress_gnu@@ELFUTILS_1.7+0x14660>
    f0bc:	add	x0, x0, #0xbd8
    f0c0:	str	x0, [sp, #184]
    f0c4:	str	x1, [sp, #192]
    f0c8:	b	f440 <elf_update@@ELFUTILS_1.0+0x3d78>
    f0cc:	mov	w0, #0x14                  	// #20
    f0d0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f0d4:	str	w28, [sp, #116]
    f0d8:	ldp	x27, x28, [sp, #80]
    f0dc:	b	f548 <elf_update@@ELFUTILS_1.0+0x3e80>
    f0e0:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    f0e4:	ldr	x21, [x0, #1624]
    f0e8:	b	f00c <elf_update@@ELFUTILS_1.0+0x3944>
    f0ec:	mov	w0, #0x8                   	// #8
    f0f0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f0f4:	mov	w0, #0xffffffff            	// #-1
    f0f8:	str	w0, [sp, #116]
    f0fc:	ldp	x27, x28, [sp, #80]
    f100:	b	f548 <elf_update@@ELFUTILS_1.0+0x3e80>
    f104:	str	xzr, [sp, #176]
    f108:	b	f070 <elf_update@@ELFUTILS_1.0+0x39a8>
    f10c:	ldr	x0, [sp, #176]
    f110:	bl	3250 <free@plt>
    f114:	mov	w0, #0x8                   	// #8
    f118:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f11c:	mov	w0, #0xffffffff            	// #-1
    f120:	str	w0, [sp, #116]
    f124:	ldp	x27, x28, [sp, #80]
    f128:	b	f548 <elf_update@@ELFUTILS_1.0+0x3e80>
    f12c:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    f130:	add	x3, x3, #0xe48
    f134:	add	x3, x3, #0x18
    f138:	mov	w2, #0x2c3                 	// #707
    f13c:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    f140:	add	x1, x1, #0xba0
    f144:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
    f148:	add	x0, x0, #0xd20
    f14c:	bl	3380 <__assert_fail@plt>
    f150:	ldr	x22, [x24, #144]
    f154:	ldr	w0, [x22, #4]
    f158:	cmp	w0, #0x8
    f15c:	b.eq	f454 <elf_update@@ELFUTILS_1.0+0x3d8c>  // b.none
    f160:	ldr	x19, [x20, #40]
    f164:	ldr	x0, [x22, #24]
    f168:	add	x19, x19, x0
    f16c:	mov	x27, x19
    f170:	ldr	x0, [x24, #64]
    f174:	cbnz	x0, f198 <elf_update@@ELFUTILS_1.0+0x3ad0>
    f178:	ldr	w0, [sp, #96]
    f17c:	cmp	w0, #0x0
    f180:	ccmp	x21, x19, #0x0, ne  // ne = any
    f184:	b.lt	f398 <elf_update@@ELFUTILS_1.0+0x3cd0>  // b.tstop
    f188:	ldr	x21, [x22, #32]
    f18c:	add	x21, x19, x21
    f190:	str	wzr, [sp, #96]
    f194:	b	f454 <elf_update@@ELFUTILS_1.0+0x3d8c>
    f198:	mov	x19, x24
    f19c:	mov	w23, #0x0                   	// #0
    f1a0:	add	x0, sp, #0x8, lsl #12
    f1a4:	add	x0, x0, #0xe8
    f1a8:	str	x0, [sp, #152]
    f1ac:	add	x0, sp, #0x8, lsl #12
    f1b0:	add	x0, x0, #0xf0
    f1b4:	str	x0, [sp, #160]
    f1b8:	mov	x1, x21
    f1bc:	str	x28, [sp, #200]
    f1c0:	b	f2a8 <elf_update@@ELFUTILS_1.0+0x3be0>
    f1c4:	ldr	x21, [x19, #16]
    f1c8:	ldr	x23, [sp, #192]
    f1cc:	cmp	x21, #0x8, lsl #12
    f1d0:	b.hi	f200 <elf_update@@ELFUTILS_1.0+0x3b38>  // b.pmore
    f1d4:	ldr	w0, [x19, #8]
    f1d8:	add	x0, x0, #0x1b
    f1dc:	ldr	x1, [sp, #184]
    f1e0:	ldr	x4, [x1, x0, lsl #3]
    f1e4:	mov	w3, #0x1                   	// #1
    f1e8:	mov	x2, x21
    f1ec:	mov	x1, x25
    f1f0:	mov	x0, x23
    f1f4:	blr	x4
    f1f8:	mov	x25, x23
    f1fc:	b	f324 <elf_update@@ELFUTILS_1.0+0x3c5c>
    f200:	mov	x0, x21
    f204:	bl	3100 <malloc@plt>
    f208:	mov	x23, x0
    f20c:	cbnz	x0, f1d4 <elf_update@@ELFUTILS_1.0+0x3b0c>
    f210:	mov	w0, #0x8                   	// #8
    f214:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f218:	b	f350 <elf_update@@ELFUTILS_1.0+0x3c88>
    f21c:	cmp	x0, #0x0
    f220:	b.le	f260 <elf_update@@ELFUTILS_1.0+0x3b98>
    f224:	add	x21, x21, x0
    f228:	cmp	x26, x21
    f22c:	b.ls	f268 <elf_update@@ELFUTILS_1.0+0x3ba0>  // b.plast
    f230:	add	x3, x22, x21
    f234:	sub	x2, x26, x21
    f238:	add	x1, x25, x21
    f23c:	mov	w0, w28
    f240:	bl	3270 <pwrite@plt>
    f244:	mov	x23, x0
    f248:	cmn	x0, #0x1
    f24c:	b.ne	f21c <elf_update@@ELFUTILS_1.0+0x3b54>  // b.any
    f250:	bl	3390 <__errno_location@plt>
    f254:	ldr	w0, [x0]
    f258:	cmp	w0, #0x4
    f25c:	b.eq	f230 <elf_update@@ELFUTILS_1.0+0x3b68>  // b.none
    f260:	cmp	x23, #0x0
    f264:	csel	x21, x21, x23, ge  // ge = tcont
    f268:	ldr	x0, [x19, #16]
    f26c:	cmp	x0, x21
    f270:	b.ne	f334 <elf_update@@ELFUTILS_1.0+0x3c6c>  // b.any
    f274:	ldr	x0, [x19]
    f278:	cmp	x0, x25
    f27c:	ldr	x0, [sp, #144]
    f280:	ccmp	x0, x25, #0x4, ne  // ne = any
    f284:	b.ne	f37c <elf_update@@ELFUTILS_1.0+0x3cb4>  // b.any
    f288:	mov	w23, #0x1                   	// #1
    f28c:	ldr	x1, [x19, #16]
    f290:	add	x1, x22, x1
    f294:	ldr	w0, [x19, #56]
    f298:	and	w0, w0, #0xfffffffe
    f29c:	str	w0, [x19, #56]
    f2a0:	ldr	x19, [x19, #48]
    f2a4:	cbz	x19, f388 <elf_update@@ELFUTILS_1.0+0x3cc0>
    f2a8:	ldr	x0, [x19, #24]
    f2ac:	add	x22, x0, x27
    f2b0:	cmp	x22, x1
    f2b4:	b.le	f2f8 <elf_update@@ELFUTILS_1.0+0x3c30>
    f2b8:	cmp	x0, #0x0
    f2bc:	ldr	w0, [sp, #96]
    f2c0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    f2c4:	b.ne	f2e0 <elf_update@@ELFUTILS_1.0+0x3c18>  // b.any
    f2c8:	ldr	w0, [x24, #156]
    f2cc:	ldr	w2, [x20, #56]
    f2d0:	orr	w0, w0, w2
    f2d4:	ldr	w2, [x19, #56]
    f2d8:	orr	w0, w0, w2
    f2dc:	tbz	w0, #0, f28c <elf_update@@ELFUTILS_1.0+0x3bc4>
    f2e0:	ldr	x4, [sp, #152]
    f2e4:	ldr	x3, [sp, #160]
    f2e8:	sub	x2, x22, x1
    f2ec:	ldr	w0, [x20, #36]
    f2f0:	bl	e17c <elf_update@@ELFUTILS_1.0+0x2ab4>
    f2f4:	cbnz	w0, f350 <elf_update@@ELFUTILS_1.0+0x3c88>
    f2f8:	ldr	x22, [x19, #24]
    f2fc:	add	x22, x27, x22
    f300:	ldr	w0, [x24, #156]
    f304:	ldr	w1, [x20, #56]
    f308:	orr	w0, w0, w1
    f30c:	ldr	w1, [x19, #56]
    f310:	orr	w0, w0, w1
    f314:	tbz	w0, #0, f28c <elf_update@@ELFUTILS_1.0+0x3bc4>
    f318:	ldr	x25, [x19]
    f31c:	ldr	w0, [sp, #112]
    f320:	cbnz	w0, f1c4 <elf_update@@ELFUTILS_1.0+0x3afc>
    f324:	ldr	w28, [x20, #36]
    f328:	ldr	x26, [x19, #16]
    f32c:	mov	x21, #0x0                   	// #0
    f330:	b	f230 <elf_update@@ELFUTILS_1.0+0x3b68>
    f334:	ldr	x0, [x19]
    f338:	cmp	x0, x25
    f33c:	add	x0, sp, #0xe0
    f340:	ccmp	x0, x25, #0x4, ne  // ne = any
    f344:	b.ne	f370 <elf_update@@ELFUTILS_1.0+0x3ca8>  // b.any
    f348:	mov	w0, #0x14                  	// #20
    f34c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f350:	ldr	x0, [sp, #176]
    f354:	bl	3250 <free@plt>
    f358:	ldr	x0, [sp, #168]
    f35c:	bl	3250 <free@plt>
    f360:	mov	w0, #0x1                   	// #1
    f364:	str	w0, [sp, #116]
    f368:	ldp	x27, x28, [sp, #80]
    f36c:	b	f548 <elf_update@@ELFUTILS_1.0+0x3e80>
    f370:	mov	x0, x25
    f374:	bl	3250 <free@plt>
    f378:	b	f348 <elf_update@@ELFUTILS_1.0+0x3c80>
    f37c:	mov	x0, x25
    f380:	bl	3250 <free@plt>
    f384:	b	f288 <elf_update@@ELFUTILS_1.0+0x3bc0>
    f388:	mov	x21, x1
    f38c:	ldr	x28, [sp, #200]
    f390:	str	w23, [sp, #96]
    f394:	b	f454 <elf_update@@ELFUTILS_1.0+0x3d8c>
    f398:	add	x4, sp, #0x8, lsl #12
    f39c:	add	x4, x4, #0xe8
    f3a0:	add	x3, sp, #0x8, lsl #12
    f3a4:	add	x3, x3, #0xf0
    f3a8:	sub	x2, x19, x21
    f3ac:	mov	x1, x21
    f3b0:	ldr	w0, [x20, #36]
    f3b4:	bl	e17c <elf_update@@ELFUTILS_1.0+0x2ab4>
    f3b8:	cbz	w0, f188 <elf_update@@ELFUTILS_1.0+0x3ac0>
    f3bc:	b	f350 <elf_update@@ELFUTILS_1.0+0x3c88>
    f3c0:	ldr	x0, [x24, #128]
    f3c4:	ldr	x1, [sp, #184]
    f3c8:	ldr	x4, [x1, #288]
    f3cc:	mov	w3, #0x1                   	// #1
    f3d0:	mov	x2, #0x40                  	// #64
    f3d4:	ldr	x1, [x24, #144]
    f3d8:	ldr	x5, [sp, #136]
    f3dc:	add	x0, x5, x0, lsl #6
    f3e0:	blr	x4
    f3e4:	b	f418 <elf_update@@ELFUTILS_1.0+0x3d50>
    f3e8:	ldr	x0, [x24, #128]
    f3ec:	ldr	x1, [sp, #136]
    f3f0:	add	x0, x1, x0, lsl #6
    f3f4:	ldr	x1, [x24, #144]
    f3f8:	ldp	x2, x3, [x1]
    f3fc:	stp	x2, x3, [x0]
    f400:	ldp	x2, x3, [x1, #16]
    f404:	stp	x2, x3, [x0, #16]
    f408:	ldp	x2, x3, [x1, #32]
    f40c:	stp	x2, x3, [x0, #32]
    f410:	ldp	x2, x3, [x1, #48]
    f414:	stp	x2, x3, [x0, #48]
    f418:	ldr	w0, [x24, #152]
    f41c:	ldr	w1, [sp, #104]
    f420:	orr	w1, w1, w0
    f424:	str	w1, [sp, #104]
    f428:	and	w0, w0, #0xfffffffe
    f42c:	str	w0, [x24, #152]
    f430:	add	x28, x28, #0x8
    f434:	ldr	x0, [sp, #128]
    f438:	cmp	x0, x28
    f43c:	b.eq	f470 <elf_update@@ELFUTILS_1.0+0x3da8>  // b.none
    f440:	ldr	x24, [x28]
    f444:	ldr	x0, [x24, #128]
    f448:	cbnz	x0, f150 <elf_update@@ELFUTILS_1.0+0x3a88>
    f44c:	ldr	w0, [x24, #156]
    f450:	tbnz	w0, #0, f12c <elf_update@@ELFUTILS_1.0+0x3a64>
    f454:	ldr	w0, [sp, #112]
    f458:	cbnz	w0, f3c0 <elf_update@@ELFUTILS_1.0+0x3cf8>
    f45c:	ldr	x0, [x20, #80]
    f460:	cbz	x0, f3e8 <elf_update@@ELFUTILS_1.0+0x3d20>
    f464:	ldr	w0, [x20, #56]
    f468:	tbz	w0, #0, f418 <elf_update@@ELFUTILS_1.0+0x3d50>
    f46c:	b	f3e8 <elf_update@@ELFUTILS_1.0+0x3d20>
    f470:	ldr	x0, [sp, #208]
    f474:	ldr	x1, [sp, #216]
    f478:	add	x22, x0, x1
    f47c:	ldr	w0, [x20, #56]
    f480:	tst	x0, #0x1
    f484:	ccmp	x21, x22, #0x0, ne  // ne = any
    f488:	b.lt	f4a8 <elf_update@@ELFUTILS_1.0+0x3de0>  // b.tstop
    f48c:	ldr	x0, [sp, #104]
    f490:	tbz	w0, #0, f528 <elf_update@@ELFUTILS_1.0+0x3e60>
    f494:	ldr	w23, [x20, #36]
    f498:	ldr	x0, [sp, #120]
    f49c:	lsl	x24, x0, #6
    f4a0:	mov	x19, #0x0                   	// #0
    f4a4:	b	f4e4 <elf_update@@ELFUTILS_1.0+0x3e1c>
    f4a8:	add	x4, sp, #0x8, lsl #12
    f4ac:	add	x4, x4, #0xe8
    f4b0:	add	x3, sp, #0x8, lsl #12
    f4b4:	add	x3, x3, #0xf0
    f4b8:	sub	x2, x22, x21
    f4bc:	mov	x1, x21
    f4c0:	ldr	w0, [x20, #36]
    f4c4:	bl	e17c <elf_update@@ELFUTILS_1.0+0x2ab4>
    f4c8:	cbz	w0, f48c <elf_update@@ELFUTILS_1.0+0x3dc4>
    f4cc:	b	f350 <elf_update@@ELFUTILS_1.0+0x3c88>
    f4d0:	cmp	x0, #0x0
    f4d4:	b.le	f518 <elf_update@@ELFUTILS_1.0+0x3e50>
    f4d8:	add	x19, x19, x0
    f4dc:	cmp	x24, x19
    f4e0:	b.ls	f520 <elf_update@@ELFUTILS_1.0+0x3e58>  // b.plast
    f4e4:	add	x3, x22, x19
    f4e8:	sub	x2, x24, x19
    f4ec:	ldr	x0, [sp, #136]
    f4f0:	add	x1, x0, x19
    f4f4:	mov	w0, w23
    f4f8:	bl	3270 <pwrite@plt>
    f4fc:	mov	x21, x0
    f500:	cmn	x0, #0x1
    f504:	b.ne	f4d0 <elf_update@@ELFUTILS_1.0+0x3e08>  // b.any
    f508:	bl	3390 <__errno_location@plt>
    f50c:	ldr	w0, [x0]
    f510:	cmp	w0, #0x4
    f514:	b.eq	f4e4 <elf_update@@ELFUTILS_1.0+0x3e1c>  // b.none
    f518:	cmp	x21, #0x0
    f51c:	csel	x19, x19, x21, ge  // ge = tcont
    f520:	cmp	x24, x19
    f524:	b.ne	f56c <elf_update@@ELFUTILS_1.0+0x3ea4>  // b.any
    f528:	ldr	x0, [sp, #176]
    f52c:	bl	3250 <free@plt>
    f530:	ldr	x0, [sp, #168]
    f534:	bl	3250 <free@plt>
    f538:	ldr	w0, [x20, #56]
    f53c:	and	w0, w0, #0xfffffffe
    f540:	str	w0, [x20, #56]
    f544:	ldp	x27, x28, [sp, #80]
    f548:	ldr	w0, [sp, #116]
    f54c:	ldp	x19, x20, [sp, #16]
    f550:	ldp	x21, x22, [sp, #32]
    f554:	ldp	x23, x24, [sp, #48]
    f558:	ldp	x25, x26, [sp, #64]
    f55c:	ldp	x29, x30, [sp]
    f560:	mov	x12, #0x90f0                	// #37104
    f564:	add	sp, sp, x12
    f568:	ret
    f56c:	mov	w0, #0x14                  	// #20
    f570:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f574:	b	f350 <elf_update@@ELFUTILS_1.0+0x3c88>
    f578:	mov	w0, #0xffffffff            	// #-1
    f57c:	str	w0, [sp, #116]
    f580:	b	f548 <elf_update@@ELFUTILS_1.0+0x3e80>
    f584:	mov	w0, #0x1                   	// #1
    f588:	str	w0, [sp, #116]
    f58c:	ldp	x27, x28, [sp, #80]
    f590:	b	f548 <elf_update@@ELFUTILS_1.0+0x3e80>

000000000000f594 <gelf_getsym@@ELFUTILS_1.0>:
    f594:	cbz	x0, f68c <gelf_getsym@@ELFUTILS_1.0+0xf8>
    f598:	stp	x29, x30, [sp, #-16]!
    f59c:	mov	x29, sp
    f5a0:	ldr	w3, [x0, #8]
    f5a4:	cmp	w3, #0xb
    f5a8:	b.ne	f608 <gelf_getsym@@ELFUTILS_1.0+0x74>  // b.any
    f5ac:	ldr	x3, [x0, #40]
    f5b0:	ldr	x3, [x3, #136]
    f5b4:	ldr	w3, [x3, #32]
    f5b8:	cmp	w3, #0x1
    f5bc:	b.eq	f618 <gelf_getsym@@ELFUTILS_1.0+0x84>  // b.none
    f5c0:	ldr	x3, [x0, #16]
    f5c4:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f5c8:	movk	x4, #0xaaab
    f5cc:	umulh	x3, x3, x4
    f5d0:	mov	w4, w1
    f5d4:	cmp	x4, x3, lsr #4
    f5d8:	b.cs	f67c <gelf_getsym@@ELFUTILS_1.0+0xe8>  // b.hs, b.nlast
    f5dc:	ldr	x0, [x0]
    f5e0:	sbfiz	x3, x1, #1, #32
    f5e4:	add	x1, x3, w1, sxtw
    f5e8:	add	x1, x0, x1, lsl #3
    f5ec:	ldp	x4, x5, [x1]
    f5f0:	stp	x4, x5, [x2]
    f5f4:	ldr	x0, [x1, #16]
    f5f8:	str	x0, [x2, #16]
    f5fc:	mov	x0, x2
    f600:	ldp	x29, x30, [sp], #16
    f604:	ret
    f608:	mov	w0, #0x4                   	// #4
    f60c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f610:	mov	x0, #0x0                   	// #0
    f614:	b	f600 <gelf_getsym@@ELFUTILS_1.0+0x6c>
    f618:	ldr	x4, [x0, #16]
    f61c:	mov	w3, w1
    f620:	cmp	x3, x4, lsr #4
    f624:	b.cs	f66c <gelf_getsym@@ELFUTILS_1.0+0xd8>  // b.hs, b.nlast
    f628:	sbfiz	x1, x1, #4, #32
    f62c:	ldr	x3, [x0]
    f630:	add	x0, x3, x1
    f634:	ldr	w1, [x3, x1]
    f638:	str	w1, [x2]
    f63c:	ldrb	w1, [x0, #12]
    f640:	strb	w1, [x2, #4]
    f644:	ldrb	w1, [x0, #13]
    f648:	strb	w1, [x2, #5]
    f64c:	ldrh	w1, [x0, #14]
    f650:	strh	w1, [x2, #6]
    f654:	ldr	w1, [x0, #4]
    f658:	str	x1, [x2, #8]
    f65c:	ldr	w0, [x0, #8]
    f660:	str	x0, [x2, #16]
    f664:	mov	x0, x2
    f668:	b	f600 <gelf_getsym@@ELFUTILS_1.0+0x6c>
    f66c:	mov	w0, #0x16                  	// #22
    f670:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f674:	mov	x0, #0x0                   	// #0
    f678:	b	f600 <gelf_getsym@@ELFUTILS_1.0+0x6c>
    f67c:	mov	w0, #0x16                  	// #22
    f680:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f684:	mov	x0, #0x0                   	// #0
    f688:	b	f600 <gelf_getsym@@ELFUTILS_1.0+0x6c>
    f68c:	ret

000000000000f690 <gelf_update_sym@@ELFUTILS_1.0>:
    f690:	cbz	x0, f7bc <gelf_update_sym@@ELFUTILS_1.0+0x12c>
    f694:	stp	x29, x30, [sp, #-16]!
    f698:	mov	x29, sp
    f69c:	ldr	w3, [x0, #8]
    f6a0:	cmp	w3, #0xb
    f6a4:	b.ne	f710 <gelf_update_sym@@ELFUTILS_1.0+0x80>  // b.any
    f6a8:	ldr	x3, [x0, #40]
    f6ac:	ldr	x4, [x3, #136]
    f6b0:	ldr	w4, [x4, #32]
    f6b4:	cmp	w4, #0x1
    f6b8:	b.eq	f720 <gelf_update_sym@@ELFUTILS_1.0+0x90>  // b.none
    f6bc:	ldr	x4, [x0, #16]
    f6c0:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    f6c4:	movk	x5, #0xaaab
    f6c8:	umulh	x4, x4, x5
    f6cc:	mov	w5, w1
    f6d0:	cmp	x5, x4, lsr #4
    f6d4:	b.cs	f7ac <gelf_update_sym@@ELFUTILS_1.0+0x11c>  // b.hs, b.nlast
    f6d8:	ldr	x0, [x0]
    f6dc:	sbfiz	x4, x1, #1, #32
    f6e0:	add	x1, x4, w1, sxtw
    f6e4:	add	x1, x0, x1, lsl #3
    f6e8:	ldp	x4, x5, [x2]
    f6ec:	stp	x4, x5, [x1]
    f6f0:	ldr	x0, [x2, #16]
    f6f4:	str	x0, [x1, #16]
    f6f8:	ldr	w0, [x3, #156]
    f6fc:	orr	w0, w0, #0x1
    f700:	str	w0, [x3, #156]
    f704:	mov	w0, #0x1                   	// #1
    f708:	ldp	x29, x30, [sp], #16
    f70c:	ret
    f710:	mov	w0, #0x1f                  	// #31
    f714:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f718:	mov	w0, #0x0                   	// #0
    f71c:	b	f708 <gelf_update_sym@@ELFUTILS_1.0+0x78>
    f720:	ldr	x5, [x2, #8]
    f724:	mov	x4, #0xffffffff            	// #4294967295
    f728:	cmp	x5, x4
    f72c:	b.hi	f78c <gelf_update_sym@@ELFUTILS_1.0+0xfc>  // b.pmore
    f730:	ldr	x5, [x2, #16]
    f734:	cmp	x5, x4
    f738:	b.hi	f78c <gelf_update_sym@@ELFUTILS_1.0+0xfc>  // b.pmore
    f73c:	ldr	x5, [x0, #16]
    f740:	mov	w4, w1
    f744:	cmp	x4, x5, lsr #4
    f748:	b.cs	f79c <gelf_update_sym@@ELFUTILS_1.0+0x10c>  // b.hs, b.nlast
    f74c:	sbfiz	x1, x1, #4, #32
    f750:	ldr	x4, [x0]
    f754:	add	x0, x4, x1
    f758:	ldr	w5, [x2]
    f75c:	str	w5, [x4, x1]
    f760:	ldr	x1, [x2, #8]
    f764:	str	w1, [x0, #4]
    f768:	ldr	x1, [x2, #16]
    f76c:	str	w1, [x0, #8]
    f770:	ldrb	w1, [x2, #4]
    f774:	strb	w1, [x0, #12]
    f778:	ldrb	w1, [x2, #5]
    f77c:	strb	w1, [x0, #13]
    f780:	ldrh	w1, [x2, #6]
    f784:	strh	w1, [x0, #14]
    f788:	b	f6f8 <gelf_update_sym@@ELFUTILS_1.0+0x68>
    f78c:	mov	w0, #0x21                  	// #33
    f790:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f794:	mov	w0, #0x0                   	// #0
    f798:	b	f708 <gelf_update_sym@@ELFUTILS_1.0+0x78>
    f79c:	mov	w0, #0x16                  	// #22
    f7a0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f7a4:	mov	w0, #0x0                   	// #0
    f7a8:	b	f708 <gelf_update_sym@@ELFUTILS_1.0+0x78>
    f7ac:	mov	w0, #0x16                  	// #22
    f7b0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f7b4:	mov	w0, #0x0                   	// #0
    f7b8:	b	f708 <gelf_update_sym@@ELFUTILS_1.0+0x78>
    f7bc:	mov	w0, #0x0                   	// #0
    f7c0:	ret

000000000000f7c4 <gelf_getversym@@ELFUTILS_1.0>:
    f7c4:	cbz	x0, f824 <gelf_getversym@@ELFUTILS_1.0+0x60>
    f7c8:	stp	x29, x30, [sp, #-16]!
    f7cc:	mov	x29, sp
    f7d0:	ldr	w3, [x0, #8]
    f7d4:	cmp	w3, #0x4
    f7d8:	b.ne	f804 <gelf_getversym@@ELFUTILS_1.0+0x40>  // b.any
    f7dc:	ldr	x4, [x0, #16]
    f7e0:	mov	w3, w1
    f7e4:	cmp	x3, x4, lsr #1
    f7e8:	b.cs	f814 <gelf_getversym@@ELFUTILS_1.0+0x50>  // b.hs, b.nlast
    f7ec:	ldr	x0, [x0]
    f7f0:	ldrh	w0, [x0, w1, sxtw #1]
    f7f4:	strh	w0, [x2]
    f7f8:	mov	x0, x2
    f7fc:	ldp	x29, x30, [sp], #16
    f800:	ret
    f804:	mov	w0, #0x4                   	// #4
    f808:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f80c:	mov	x0, #0x0                   	// #0
    f810:	b	f7fc <gelf_getversym@@ELFUTILS_1.0+0x38>
    f814:	mov	w0, #0x16                  	// #22
    f818:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f81c:	mov	x0, #0x0                   	// #0
    f820:	b	f7fc <gelf_getversym@@ELFUTILS_1.0+0x38>
    f824:	ret

000000000000f828 <gelf_getverneed@@ELFUTILS_1.0>:
    f828:	cbz	x0, f89c <gelf_getverneed@@ELFUTILS_1.0+0x74>
    f82c:	stp	x29, x30, [sp, #-16]!
    f830:	mov	x29, sp
    f834:	ldr	w3, [x0, #8]
    f838:	cmp	w3, #0x11
    f83c:	b.ne	f87c <gelf_getverneed@@ELFUTILS_1.0+0x54>  // b.any
    f840:	tbnz	w1, #31, f88c <gelf_getverneed@@ELFUTILS_1.0+0x64>
    f844:	sxtw	x3, w1
    f848:	add	x5, x3, #0x10
    f84c:	ldr	x4, [x0, #16]
    f850:	cmp	x5, x4
    f854:	b.hi	f88c <gelf_getverneed@@ELFUTILS_1.0+0x64>  // b.pmore
    f858:	tst	x1, #0xf
    f85c:	b.ne	f88c <gelf_getverneed@@ELFUTILS_1.0+0x64>  // b.any
    f860:	ldr	x0, [x0]
    f864:	add	x0, x0, x3
    f868:	ldp	x0, x1, [x0]
    f86c:	stp	x0, x1, [x2]
    f870:	mov	x0, x2
    f874:	ldp	x29, x30, [sp], #16
    f878:	ret
    f87c:	mov	w0, #0x4                   	// #4
    f880:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f884:	mov	x0, #0x0                   	// #0
    f888:	b	f874 <gelf_getverneed@@ELFUTILS_1.0+0x4c>
    f88c:	mov	w0, #0x1d                  	// #29
    f890:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f894:	mov	x0, #0x0                   	// #0
    f898:	b	f874 <gelf_getverneed@@ELFUTILS_1.0+0x4c>
    f89c:	ret

000000000000f8a0 <gelf_getvernaux@@ELFUTILS_1.0>:
    f8a0:	cbz	x0, f914 <gelf_getvernaux@@ELFUTILS_1.0+0x74>
    f8a4:	stp	x29, x30, [sp, #-16]!
    f8a8:	mov	x29, sp
    f8ac:	ldr	w3, [x0, #8]
    f8b0:	cmp	w3, #0x11
    f8b4:	b.ne	f8f4 <gelf_getvernaux@@ELFUTILS_1.0+0x54>  // b.any
    f8b8:	tbnz	w1, #31, f904 <gelf_getvernaux@@ELFUTILS_1.0+0x64>
    f8bc:	sxtw	x3, w1
    f8c0:	add	x5, x3, #0x10
    f8c4:	ldr	x4, [x0, #16]
    f8c8:	cmp	x5, x4
    f8cc:	b.hi	f904 <gelf_getvernaux@@ELFUTILS_1.0+0x64>  // b.pmore
    f8d0:	tst	x1, #0xf
    f8d4:	b.ne	f904 <gelf_getvernaux@@ELFUTILS_1.0+0x64>  // b.any
    f8d8:	ldr	x0, [x0]
    f8dc:	add	x0, x0, x3
    f8e0:	ldp	x0, x1, [x0]
    f8e4:	stp	x0, x1, [x2]
    f8e8:	mov	x0, x2
    f8ec:	ldp	x29, x30, [sp], #16
    f8f0:	ret
    f8f4:	mov	w0, #0x4                   	// #4
    f8f8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f8fc:	mov	x0, #0x0                   	// #0
    f900:	b	f8ec <gelf_getvernaux@@ELFUTILS_1.0+0x4c>
    f904:	mov	w0, #0x1d                  	// #29
    f908:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f90c:	mov	x0, #0x0                   	// #0
    f910:	b	f8ec <gelf_getvernaux@@ELFUTILS_1.0+0x4c>
    f914:	ret

000000000000f918 <gelf_getverdef@@ELFUTILS_1.0>:
    f918:	cbz	x0, f994 <gelf_getverdef@@ELFUTILS_1.0+0x7c>
    f91c:	stp	x29, x30, [sp, #-16]!
    f920:	mov	x29, sp
    f924:	ldr	w3, [x0, #8]
    f928:	cmp	w3, #0xf
    f92c:	b.ne	f974 <gelf_getverdef@@ELFUTILS_1.0+0x5c>  // b.any
    f930:	tbnz	w1, #31, f984 <gelf_getverdef@@ELFUTILS_1.0+0x6c>
    f934:	sxtw	x3, w1
    f938:	add	x5, x3, #0x14
    f93c:	ldr	x4, [x0, #16]
    f940:	cmp	x5, x4
    f944:	b.hi	f984 <gelf_getverdef@@ELFUTILS_1.0+0x6c>  // b.pmore
    f948:	tst	x1, #0x3
    f94c:	b.ne	f984 <gelf_getverdef@@ELFUTILS_1.0+0x6c>  // b.any
    f950:	ldr	x0, [x0]
    f954:	add	x0, x0, x3
    f958:	ldp	x4, x5, [x0]
    f95c:	stp	x4, x5, [x2]
    f960:	ldr	w0, [x0, #16]
    f964:	str	w0, [x2, #16]
    f968:	mov	x0, x2
    f96c:	ldp	x29, x30, [sp], #16
    f970:	ret
    f974:	mov	w0, #0x4                   	// #4
    f978:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f97c:	mov	x0, #0x0                   	// #0
    f980:	b	f96c <gelf_getverdef@@ELFUTILS_1.0+0x54>
    f984:	mov	w0, #0x1d                  	// #29
    f988:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f98c:	mov	x0, #0x0                   	// #0
    f990:	b	f96c <gelf_getverdef@@ELFUTILS_1.0+0x54>
    f994:	ret

000000000000f998 <gelf_getverdaux@@ELFUTILS_1.0>:
    f998:	cbz	x0, fa08 <gelf_getverdaux@@ELFUTILS_1.0+0x70>
    f99c:	stp	x29, x30, [sp, #-16]!
    f9a0:	mov	x29, sp
    f9a4:	ldr	w3, [x0, #8]
    f9a8:	cmp	w3, #0xf
    f9ac:	b.ne	f9e8 <gelf_getverdaux@@ELFUTILS_1.0+0x50>  // b.any
    f9b0:	tbnz	w1, #31, f9f8 <gelf_getverdaux@@ELFUTILS_1.0+0x60>
    f9b4:	sxtw	x3, w1
    f9b8:	add	x3, x3, #0x8
    f9bc:	ldr	x4, [x0, #16]
    f9c0:	cmp	x3, x4
    f9c4:	b.hi	f9f8 <gelf_getverdaux@@ELFUTILS_1.0+0x60>  // b.pmore
    f9c8:	tst	x1, #0x3
    f9cc:	b.ne	f9f8 <gelf_getverdaux@@ELFUTILS_1.0+0x60>  // b.any
    f9d0:	ldr	x0, [x0]
    f9d4:	ldr	x0, [x0, w1, sxtw]
    f9d8:	str	x0, [x2]
    f9dc:	mov	x0, x2
    f9e0:	ldp	x29, x30, [sp], #16
    f9e4:	ret
    f9e8:	mov	w0, #0x4                   	// #4
    f9ec:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    f9f0:	mov	x0, #0x0                   	// #0
    f9f4:	b	f9e0 <gelf_getverdaux@@ELFUTILS_1.0+0x48>
    f9f8:	mov	w0, #0x1d                  	// #29
    f9fc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fa00:	mov	x0, #0x0                   	// #0
    fa04:	b	f9e0 <gelf_getverdaux@@ELFUTILS_1.0+0x48>
    fa08:	ret

000000000000fa0c <gelf_getrel@@ELFUTILS_1.0>:
    fa0c:	cbz	x0, fad4 <gelf_getrel@@ELFUTILS_1.0+0xc8>
    fa10:	stp	x29, x30, [sp, #-16]!
    fa14:	mov	x29, sp
    fa18:	ldr	w3, [x0, #8]
    fa1c:	cmp	w3, #0x8
    fa20:	b.ne	fa64 <gelf_getrel@@ELFUTILS_1.0+0x58>  // b.any
    fa24:	ldr	x3, [x0, #40]
    fa28:	ldr	x3, [x3, #136]
    fa2c:	ldr	w3, [x3, #32]
    fa30:	cmp	w3, #0x1
    fa34:	b.eq	fa74 <gelf_getrel@@ELFUTILS_1.0+0x68>  // b.none
    fa38:	ldr	x4, [x0, #16]
    fa3c:	mov	w3, w1
    fa40:	cmp	x3, x4, lsr #4
    fa44:	b.cs	fac4 <gelf_getrel@@ELFUTILS_1.0+0xb8>  // b.hs, b.nlast
    fa48:	ldr	x0, [x0]
    fa4c:	add	x1, x0, w1, sxtw #4
    fa50:	ldp	x0, x1, [x1]
    fa54:	stp	x0, x1, [x2]
    fa58:	mov	x0, x2
    fa5c:	ldp	x29, x30, [sp], #16
    fa60:	ret
    fa64:	mov	w0, #0x4                   	// #4
    fa68:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fa6c:	mov	x0, #0x0                   	// #0
    fa70:	b	fa5c <gelf_getrel@@ELFUTILS_1.0+0x50>
    fa74:	ldr	x4, [x0, #16]
    fa78:	mov	w3, w1
    fa7c:	cmp	x3, x4, lsr #3
    fa80:	b.cs	fab4 <gelf_getrel@@ELFUTILS_1.0+0xa8>  // b.hs, b.nlast
    fa84:	sbfiz	x1, x1, #3, #32
    fa88:	ldr	x0, [x0]
    fa8c:	add	x3, x0, x1
    fa90:	ldr	w0, [x0, x1]
    fa94:	str	x0, [x2]
    fa98:	ldr	w0, [x3, #4]
    fa9c:	lsr	w1, w0, #8
    faa0:	and	x0, x0, #0xff
    faa4:	add	x0, x0, x1, lsl #32
    faa8:	str	x0, [x2, #8]
    faac:	mov	x0, x2
    fab0:	b	fa5c <gelf_getrel@@ELFUTILS_1.0+0x50>
    fab4:	mov	w0, #0x16                  	// #22
    fab8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fabc:	mov	x0, #0x0                   	// #0
    fac0:	b	fa5c <gelf_getrel@@ELFUTILS_1.0+0x50>
    fac4:	mov	w0, #0x16                  	// #22
    fac8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    facc:	mov	x0, #0x0                   	// #0
    fad0:	b	fa5c <gelf_getrel@@ELFUTILS_1.0+0x50>
    fad4:	ret

000000000000fad8 <gelf_getrela@@ELFUTILS_1.0>:
    fad8:	cbz	x0, fbd8 <gelf_getrela@@ELFUTILS_1.0+0x100>
    fadc:	stp	x29, x30, [sp, #-16]!
    fae0:	mov	x29, sp
    fae4:	ldr	w3, [x0, #8]
    fae8:	cmp	w3, #0x7
    faec:	b.ne	fb4c <gelf_getrela@@ELFUTILS_1.0+0x74>  // b.any
    faf0:	ldr	x3, [x0, #40]
    faf4:	ldr	x3, [x3, #136]
    faf8:	ldr	w3, [x3, #32]
    fafc:	cmp	w3, #0x1
    fb00:	b.eq	fb5c <gelf_getrela@@ELFUTILS_1.0+0x84>  // b.none
    fb04:	ldr	x3, [x0, #16]
    fb08:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    fb0c:	movk	x4, #0xaaab
    fb10:	umulh	x3, x3, x4
    fb14:	mov	w4, w1
    fb18:	cmp	x4, x3, lsr #4
    fb1c:	b.cs	fbc8 <gelf_getrela@@ELFUTILS_1.0+0xf0>  // b.hs, b.nlast
    fb20:	sbfiz	x3, x1, #1, #32
    fb24:	add	x1, x3, w1, sxtw
    fb28:	ldr	x0, [x0]
    fb2c:	add	x1, x0, x1, lsl #3
    fb30:	ldp	x4, x5, [x1]
    fb34:	stp	x4, x5, [x2]
    fb38:	ldr	x0, [x1, #16]
    fb3c:	str	x0, [x2, #16]
    fb40:	mov	x0, x2
    fb44:	ldp	x29, x30, [sp], #16
    fb48:	ret
    fb4c:	mov	w0, #0x4                   	// #4
    fb50:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fb54:	mov	x0, #0x0                   	// #0
    fb58:	b	fb44 <gelf_getrela@@ELFUTILS_1.0+0x6c>
    fb5c:	ldr	x3, [x0, #16]
    fb60:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    fb64:	movk	x4, #0xaaab
    fb68:	umulh	x3, x3, x4
    fb6c:	mov	w4, w1
    fb70:	cmp	x4, x3, lsr #3
    fb74:	b.cs	fbb8 <gelf_getrela@@ELFUTILS_1.0+0xe0>  // b.hs, b.nlast
    fb78:	sbfiz	x3, x1, #1, #32
    fb7c:	add	x1, x3, w1, sxtw
    fb80:	lsl	x1, x1, #2
    fb84:	ldr	x0, [x0]
    fb88:	add	x3, x0, x1
    fb8c:	ldr	w0, [x0, x1]
    fb90:	str	x0, [x2]
    fb94:	ldr	w0, [x3, #4]
    fb98:	lsr	w1, w0, #8
    fb9c:	and	x0, x0, #0xff
    fba0:	add	x0, x0, x1, lsl #32
    fba4:	str	x0, [x2, #8]
    fba8:	ldrsw	x0, [x3, #8]
    fbac:	str	x0, [x2, #16]
    fbb0:	mov	x0, x2
    fbb4:	b	fb44 <gelf_getrela@@ELFUTILS_1.0+0x6c>
    fbb8:	mov	w0, #0x16                  	// #22
    fbbc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fbc0:	mov	x0, #0x0                   	// #0
    fbc4:	b	fb44 <gelf_getrela@@ELFUTILS_1.0+0x6c>
    fbc8:	mov	w0, #0x16                  	// #22
    fbcc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fbd0:	mov	x0, #0x0                   	// #0
    fbd4:	b	fb44 <gelf_getrela@@ELFUTILS_1.0+0x6c>
    fbd8:	ret

000000000000fbdc <gelf_update_rel@@ELFUTILS_1.0>:
    fbdc:	cbz	x0, fce0 <gelf_update_rel@@ELFUTILS_1.0+0x104>
    fbe0:	stp	x29, x30, [sp, #-16]!
    fbe4:	mov	x29, sp
    fbe8:	ldr	w3, [x0, #8]
    fbec:	cmp	w3, #0x8
    fbf0:	b.ne	fc40 <gelf_update_rel@@ELFUTILS_1.0+0x64>  // b.any
    fbf4:	ldr	x3, [x0, #40]
    fbf8:	ldr	x4, [x3, #136]
    fbfc:	ldr	w4, [x4, #32]
    fc00:	cmp	w4, #0x1
    fc04:	b.eq	fc50 <gelf_update_rel@@ELFUTILS_1.0+0x74>  // b.none
    fc08:	ldr	x5, [x0, #16]
    fc0c:	mov	w4, w1
    fc10:	cmp	x4, x5, lsr #4
    fc14:	b.cs	fcd0 <gelf_update_rel@@ELFUTILS_1.0+0xf4>  // b.hs, b.nlast
    fc18:	ldr	x0, [x0]
    fc1c:	add	x1, x0, w1, sxtw #4
    fc20:	ldp	x4, x5, [x2]
    fc24:	stp	x4, x5, [x1]
    fc28:	ldr	w0, [x3, #156]
    fc2c:	orr	w0, w0, #0x1
    fc30:	str	w0, [x3, #156]
    fc34:	mov	w0, #0x1                   	// #1
    fc38:	ldp	x29, x30, [sp], #16
    fc3c:	ret
    fc40:	mov	w0, #0x1f                  	// #31
    fc44:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fc48:	mov	w0, #0x0                   	// #0
    fc4c:	b	fc38 <gelf_update_rel@@ELFUTILS_1.0+0x5c>
    fc50:	ldr	x4, [x2]
    fc54:	mov	x5, #0xffffffff            	// #4294967295
    fc58:	cmp	x4, x5
    fc5c:	b.hi	fcb0 <gelf_update_rel@@ELFUTILS_1.0+0xd4>  // b.pmore
    fc60:	ldr	x5, [x2, #8]
    fc64:	mov	x6, #0xffffff              	// #16777215
    fc68:	cmp	x6, x5, lsr #32
    fc6c:	b.cc	fcb0 <gelf_update_rel@@ELFUTILS_1.0+0xd4>  // b.lo, b.ul, b.last
    fc70:	tst	x5, #0xffffff00
    fc74:	b.ne	fcb0 <gelf_update_rel@@ELFUTILS_1.0+0xd4>  // b.any
    fc78:	ldr	x6, [x0, #16]
    fc7c:	mov	w5, w1
    fc80:	cmp	x5, x6, lsr #3
    fc84:	b.cs	fcc0 <gelf_update_rel@@ELFUTILS_1.0+0xe4>  // b.hs, b.nlast
    fc88:	sbfiz	x1, x1, #3, #32
    fc8c:	ldr	x0, [x0]
    fc90:	add	x5, x0, x1
    fc94:	str	w4, [x0, x1]
    fc98:	ldr	x0, [x2, #8]
    fc9c:	lsr	x1, x0, #32
    fca0:	and	w0, w0, #0xff
    fca4:	add	w0, w0, w1, lsl #8
    fca8:	str	w0, [x5, #4]
    fcac:	b	fc28 <gelf_update_rel@@ELFUTILS_1.0+0x4c>
    fcb0:	mov	w0, #0x21                  	// #33
    fcb4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fcb8:	mov	w0, #0x0                   	// #0
    fcbc:	b	fc38 <gelf_update_rel@@ELFUTILS_1.0+0x5c>
    fcc0:	mov	w0, #0x16                  	// #22
    fcc4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fcc8:	mov	w0, #0x0                   	// #0
    fccc:	b	fc38 <gelf_update_rel@@ELFUTILS_1.0+0x5c>
    fcd0:	mov	w0, #0x16                  	// #22
    fcd4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fcd8:	mov	w0, #0x0                   	// #0
    fcdc:	b	fc38 <gelf_update_rel@@ELFUTILS_1.0+0x5c>
    fce0:	mov	w0, #0x0                   	// #0
    fce4:	ret

000000000000fce8 <gelf_update_rela@@ELFUTILS_1.0>:
    fce8:	cbz	x0, fe3c <gelf_update_rela@@ELFUTILS_1.0+0x154>
    fcec:	stp	x29, x30, [sp, #-16]!
    fcf0:	mov	x29, sp
    fcf4:	ldr	w3, [x0, #8]
    fcf8:	cmp	w3, #0x7
    fcfc:	b.ne	fd68 <gelf_update_rela@@ELFUTILS_1.0+0x80>  // b.any
    fd00:	ldr	x3, [x0, #40]
    fd04:	ldr	x4, [x3, #136]
    fd08:	ldr	w4, [x4, #32]
    fd0c:	cmp	w4, #0x1
    fd10:	b.eq	fd78 <gelf_update_rela@@ELFUTILS_1.0+0x90>  // b.none
    fd14:	ldr	x4, [x0, #16]
    fd18:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    fd1c:	movk	x5, #0xaaab
    fd20:	umulh	x4, x4, x5
    fd24:	mov	w5, w1
    fd28:	cmp	x5, x4, lsr #4
    fd2c:	b.cs	fe2c <gelf_update_rela@@ELFUTILS_1.0+0x144>  // b.hs, b.nlast
    fd30:	ldr	x0, [x0]
    fd34:	sbfiz	x4, x1, #1, #32
    fd38:	add	x1, x4, w1, sxtw
    fd3c:	add	x1, x0, x1, lsl #3
    fd40:	ldp	x4, x5, [x2]
    fd44:	stp	x4, x5, [x1]
    fd48:	ldr	x0, [x2, #16]
    fd4c:	str	x0, [x1, #16]
    fd50:	ldr	w0, [x3, #156]
    fd54:	orr	w0, w0, #0x1
    fd58:	str	w0, [x3, #156]
    fd5c:	mov	w0, #0x1                   	// #1
    fd60:	ldp	x29, x30, [sp], #16
    fd64:	ret
    fd68:	mov	w0, #0x1f                  	// #31
    fd6c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fd70:	mov	w0, #0x0                   	// #0
    fd74:	b	fd60 <gelf_update_rela@@ELFUTILS_1.0+0x78>
    fd78:	ldr	x5, [x2]
    fd7c:	mov	x4, #0xffffffff            	// #4294967295
    fd80:	cmp	x5, x4
    fd84:	b.hi	fe0c <gelf_update_rela@@ELFUTILS_1.0+0x124>  // b.pmore
    fd88:	ldr	x4, [x2, #8]
    fd8c:	mov	x6, #0xffffff              	// #16777215
    fd90:	cmp	x6, x4, lsr #32
    fd94:	b.cc	fe0c <gelf_update_rela@@ELFUTILS_1.0+0x124>  // b.lo, b.ul, b.last
    fd98:	tst	x4, #0xffffff00
    fd9c:	b.ne	fe0c <gelf_update_rela@@ELFUTILS_1.0+0x124>  // b.any
    fda0:	ldr	x4, [x2, #16]
    fda4:	mov	x6, #0x80000000            	// #2147483648
    fda8:	add	x4, x4, x6
    fdac:	mov	x6, #0xffffffff            	// #4294967295
    fdb0:	cmp	x4, x6
    fdb4:	b.hi	fe0c <gelf_update_rela@@ELFUTILS_1.0+0x124>  // b.pmore
    fdb8:	ldr	x4, [x0, #16]
    fdbc:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    fdc0:	movk	x6, #0xaaab
    fdc4:	umulh	x4, x4, x6
    fdc8:	mov	w6, w1
    fdcc:	cmp	x6, x4, lsr #3
    fdd0:	b.cs	fe1c <gelf_update_rela@@ELFUTILS_1.0+0x134>  // b.hs, b.nlast
    fdd4:	sbfiz	x4, x1, #1, #32
    fdd8:	add	x1, x4, w1, sxtw
    fddc:	lsl	x1, x1, #2
    fde0:	ldr	x0, [x0]
    fde4:	add	x4, x0, x1
    fde8:	str	w5, [x0, x1]
    fdec:	ldr	x0, [x2, #8]
    fdf0:	lsr	x1, x0, #32
    fdf4:	and	w0, w0, #0xff
    fdf8:	add	w0, w0, w1, lsl #8
    fdfc:	str	w0, [x4, #4]
    fe00:	ldr	x0, [x2, #16]
    fe04:	str	w0, [x4, #8]
    fe08:	b	fd50 <gelf_update_rela@@ELFUTILS_1.0+0x68>
    fe0c:	mov	w0, #0x21                  	// #33
    fe10:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fe14:	mov	w0, #0x0                   	// #0
    fe18:	b	fd60 <gelf_update_rela@@ELFUTILS_1.0+0x78>
    fe1c:	mov	w0, #0x16                  	// #22
    fe20:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fe24:	mov	w0, #0x0                   	// #0
    fe28:	b	fd60 <gelf_update_rela@@ELFUTILS_1.0+0x78>
    fe2c:	mov	w0, #0x16                  	// #22
    fe30:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fe34:	mov	w0, #0x0                   	// #0
    fe38:	b	fd60 <gelf_update_rela@@ELFUTILS_1.0+0x78>
    fe3c:	mov	w0, #0x0                   	// #0
    fe40:	ret

000000000000fe44 <gelf_getdyn@@ELFUTILS_1.0>:
    fe44:	cbz	x0, ff00 <gelf_getdyn@@ELFUTILS_1.0+0xbc>
    fe48:	stp	x29, x30, [sp, #-16]!
    fe4c:	mov	x29, sp
    fe50:	ldr	w3, [x0, #8]
    fe54:	cmp	w3, #0x2
    fe58:	b.ne	fe9c <gelf_getdyn@@ELFUTILS_1.0+0x58>  // b.any
    fe5c:	ldr	x3, [x0, #40]
    fe60:	ldr	x3, [x3, #136]
    fe64:	ldr	w3, [x3, #32]
    fe68:	cmp	w3, #0x1
    fe6c:	b.eq	feac <gelf_getdyn@@ELFUTILS_1.0+0x68>  // b.none
    fe70:	ldr	x4, [x0, #16]
    fe74:	mov	w3, w1
    fe78:	cmp	x3, x4, lsr #4
    fe7c:	b.cs	fef0 <gelf_getdyn@@ELFUTILS_1.0+0xac>  // b.hs, b.nlast
    fe80:	ldr	x0, [x0]
    fe84:	add	x1, x0, w1, sxtw #4
    fe88:	ldp	x0, x1, [x1]
    fe8c:	stp	x0, x1, [x2]
    fe90:	mov	x0, x2
    fe94:	ldp	x29, x30, [sp], #16
    fe98:	ret
    fe9c:	mov	w0, #0x4                   	// #4
    fea0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fea4:	mov	x0, #0x0                   	// #0
    fea8:	b	fe94 <gelf_getdyn@@ELFUTILS_1.0+0x50>
    feac:	ldr	x4, [x0, #16]
    feb0:	mov	w3, w1
    feb4:	cmp	x3, x4, lsr #3
    feb8:	b.cs	fee0 <gelf_getdyn@@ELFUTILS_1.0+0x9c>  // b.hs, b.nlast
    febc:	sbfiz	x1, x1, #3, #32
    fec0:	ldr	x0, [x0]
    fec4:	add	x3, x0, x1
    fec8:	ldrsw	x0, [x0, x1]
    fecc:	str	x0, [x2]
    fed0:	ldr	w0, [x3, #4]
    fed4:	str	x0, [x2, #8]
    fed8:	mov	x0, x2
    fedc:	b	fe94 <gelf_getdyn@@ELFUTILS_1.0+0x50>
    fee0:	mov	w0, #0x16                  	// #22
    fee4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fee8:	mov	x0, #0x0                   	// #0
    feec:	b	fe94 <gelf_getdyn@@ELFUTILS_1.0+0x50>
    fef0:	mov	w0, #0x16                  	// #22
    fef4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fef8:	mov	x0, #0x0                   	// #0
    fefc:	b	fe94 <gelf_getdyn@@ELFUTILS_1.0+0x50>
    ff00:	ret

000000000000ff04 <gelf_update_dyn@@ELFUTILS_1.0>:
    ff04:	cbz	x0, fffc <gelf_update_dyn@@ELFUTILS_1.0+0xf8>
    ff08:	stp	x29, x30, [sp, #-16]!
    ff0c:	mov	x29, sp
    ff10:	ldr	w3, [x0, #8]
    ff14:	cmp	w3, #0x2
    ff18:	b.ne	ff68 <gelf_update_dyn@@ELFUTILS_1.0+0x64>  // b.any
    ff1c:	ldr	x3, [x0, #40]
    ff20:	ldr	x4, [x3, #136]
    ff24:	ldr	w4, [x4, #32]
    ff28:	cmp	w4, #0x1
    ff2c:	b.eq	ff78 <gelf_update_dyn@@ELFUTILS_1.0+0x74>  // b.none
    ff30:	ldr	x5, [x0, #16]
    ff34:	mov	w4, w1
    ff38:	cmp	x4, x5, lsr #4
    ff3c:	b.cs	ffec <gelf_update_dyn@@ELFUTILS_1.0+0xe8>  // b.hs, b.nlast
    ff40:	ldr	x0, [x0]
    ff44:	add	x1, x0, w1, sxtw #4
    ff48:	ldp	x4, x5, [x2]
    ff4c:	stp	x4, x5, [x1]
    ff50:	ldr	w0, [x3, #156]
    ff54:	orr	w0, w0, #0x1
    ff58:	str	w0, [x3, #156]
    ff5c:	mov	w0, #0x1                   	// #1
    ff60:	ldp	x29, x30, [sp], #16
    ff64:	ret
    ff68:	mov	w0, #0x1f                  	// #31
    ff6c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    ff70:	mov	w0, #0x0                   	// #0
    ff74:	b	ff60 <gelf_update_dyn@@ELFUTILS_1.0+0x5c>
    ff78:	ldr	x5, [x2]
    ff7c:	mov	x4, #0x80000000            	// #2147483648
    ff80:	add	x4, x5, x4
    ff84:	mov	x6, #0xffffffff            	// #4294967295
    ff88:	cmp	x4, x6
    ff8c:	b.hi	ffcc <gelf_update_dyn@@ELFUTILS_1.0+0xc8>  // b.pmore
    ff90:	ldr	x6, [x2, #8]
    ff94:	mov	x4, #0xffffffff            	// #4294967295
    ff98:	cmp	x6, x4
    ff9c:	b.hi	ffcc <gelf_update_dyn@@ELFUTILS_1.0+0xc8>  // b.pmore
    ffa0:	ldr	x6, [x0, #16]
    ffa4:	mov	w4, w1
    ffa8:	cmp	x4, x6, lsr #3
    ffac:	b.cs	ffdc <gelf_update_dyn@@ELFUTILS_1.0+0xd8>  // b.hs, b.nlast
    ffb0:	sbfiz	x1, x1, #3, #32
    ffb4:	ldr	x0, [x0]
    ffb8:	add	x4, x0, x1
    ffbc:	str	w5, [x0, x1]
    ffc0:	ldr	x0, [x2, #8]
    ffc4:	str	w0, [x4, #4]
    ffc8:	b	ff50 <gelf_update_dyn@@ELFUTILS_1.0+0x4c>
    ffcc:	mov	w0, #0x21                  	// #33
    ffd0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    ffd4:	mov	w0, #0x0                   	// #0
    ffd8:	b	ff60 <gelf_update_dyn@@ELFUTILS_1.0+0x5c>
    ffdc:	mov	w0, #0x16                  	// #22
    ffe0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    ffe4:	mov	w0, #0x0                   	// #0
    ffe8:	b	ff60 <gelf_update_dyn@@ELFUTILS_1.0+0x5c>
    ffec:	mov	w0, #0x16                  	// #22
    fff0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
    fff4:	mov	w0, #0x0                   	// #0
    fff8:	b	ff60 <gelf_update_dyn@@ELFUTILS_1.0+0x5c>
    fffc:	mov	w0, #0x0                   	// #0
   10000:	ret

0000000000010004 <gelf_getmove@@ELFUTILS_1.0>:
   10004:	cbz	x0, 10050 <gelf_getmove@@ELFUTILS_1.0+0x4c>
   10008:	stp	x29, x30, [sp, #-16]!
   1000c:	mov	x29, sp
   10010:	ldr	w0, [x0, #8]
   10014:	cmp	w0, #0x15
   10018:	b.ne	1003c <gelf_getmove@@ELFUTILS_1.0+0x38>  // b.any
   1001c:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   10020:	add	x3, x3, #0xeb8
   10024:	mov	w2, #0x39                  	// #57
   10028:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   1002c:	add	x1, x1, #0xe78
   10030:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   10034:	add	x0, x0, #0xe88
   10038:	bl	3380 <__assert_fail@plt>
   1003c:	mov	w0, #0x4                   	// #4
   10040:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10044:	mov	x0, #0x0                   	// #0
   10048:	ldp	x29, x30, [sp], #16
   1004c:	ret
   10050:	mov	x0, #0x0                   	// #0
   10054:	ret

0000000000010058 <gelf_update_move@@ELFUTILS_1.0>:
   10058:	cbnz	x0, 10064 <gelf_update_move@@ELFUTILS_1.0+0xc>
   1005c:	mov	w0, #0x0                   	// #0
   10060:	ret
   10064:	stp	x29, x30, [sp, #-16]!
   10068:	mov	x29, sp
   1006c:	adrp	x3, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   10070:	add	x3, x3, #0xee0
   10074:	mov	w2, #0x32                  	// #50
   10078:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   1007c:	add	x1, x1, #0xec8
   10080:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   10084:	add	x0, x0, #0xe88
   10088:	bl	3380 <__assert_fail@plt>

000000000001008c <gelf_getsyminfo@@ELFUTILS_1.0>:
   1008c:	cbz	x0, 100ec <gelf_getsyminfo@@ELFUTILS_1.0+0x60>
   10090:	stp	x29, x30, [sp, #-16]!
   10094:	mov	x29, sp
   10098:	ldr	w3, [x0, #8]
   1009c:	cmp	w3, #0x14
   100a0:	b.ne	100cc <gelf_getsyminfo@@ELFUTILS_1.0+0x40>  // b.any
   100a4:	ldr	x4, [x0, #16]
   100a8:	mov	w3, w1
   100ac:	cmp	x3, x4, lsr #2
   100b0:	b.cs	100dc <gelf_getsyminfo@@ELFUTILS_1.0+0x50>  // b.hs, b.nlast
   100b4:	ldr	x0, [x0]
   100b8:	ldr	w0, [x0, w1, sxtw #2]
   100bc:	str	w0, [x2]
   100c0:	mov	x0, x2
   100c4:	ldp	x29, x30, [sp], #16
   100c8:	ret
   100cc:	mov	w0, #0x4                   	// #4
   100d0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   100d4:	mov	x0, #0x0                   	// #0
   100d8:	b	100c4 <gelf_getsyminfo@@ELFUTILS_1.0+0x38>
   100dc:	mov	w0, #0x16                  	// #22
   100e0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   100e4:	mov	x0, #0x0                   	// #0
   100e8:	b	100c4 <gelf_getsyminfo@@ELFUTILS_1.0+0x38>
   100ec:	ret

00000000000100f0 <gelf_update_syminfo@@ELFUTILS_1.0>:
   100f0:	cbz	x0, 10160 <gelf_update_syminfo@@ELFUTILS_1.0+0x70>
   100f4:	stp	x29, x30, [sp, #-16]!
   100f8:	mov	x29, sp
   100fc:	ldr	w3, [x0, #8]
   10100:	cmp	w3, #0x14
   10104:	b.ne	10140 <gelf_update_syminfo@@ELFUTILS_1.0+0x50>  // b.any
   10108:	ldr	x3, [x0, #40]
   1010c:	ldr	x5, [x0, #16]
   10110:	mov	w4, w1
   10114:	cmp	x4, x5, lsr #2
   10118:	b.cs	10150 <gelf_update_syminfo@@ELFUTILS_1.0+0x60>  // b.hs, b.nlast
   1011c:	ldr	x0, [x0]
   10120:	ldr	w2, [x2]
   10124:	str	w2, [x0, w1, sxtw #2]
   10128:	ldr	w0, [x3, #156]
   1012c:	orr	w0, w0, #0x1
   10130:	str	w0, [x3, #156]
   10134:	mov	w0, #0x1                   	// #1
   10138:	ldp	x29, x30, [sp], #16
   1013c:	ret
   10140:	mov	w0, #0x1f                  	// #31
   10144:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10148:	mov	w0, #0x0                   	// #0
   1014c:	b	10138 <gelf_update_syminfo@@ELFUTILS_1.0+0x48>
   10150:	mov	w0, #0x16                  	// #22
   10154:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10158:	mov	w0, #0x0                   	// #0
   1015c:	b	10138 <gelf_update_syminfo@@ELFUTILS_1.0+0x48>
   10160:	mov	w0, #0x0                   	// #0
   10164:	ret

0000000000010168 <gelf_getauxv@@ELFUTILS_1.3>:
   10168:	cbz	x0, 1022c <gelf_getauxv@@ELFUTILS_1.3+0xc4>
   1016c:	stp	x29, x30, [sp, #-16]!
   10170:	mov	x29, sp
   10174:	ldr	w3, [x0, #8]
   10178:	cmp	w3, #0x18
   1017c:	b.ne	101c4 <gelf_getauxv@@ELFUTILS_1.3+0x5c>  // b.any
   10180:	ldr	x3, [x0, #40]
   10184:	ldr	x3, [x3, #136]
   10188:	ldr	w3, [x3, #32]
   1018c:	cmp	w3, #0x1
   10190:	b.eq	101d4 <gelf_getauxv@@ELFUTILS_1.3+0x6c>  // b.none
   10194:	add	w1, w1, #0x1
   10198:	sbfiz	x4, x1, #4, #32
   1019c:	ldr	x3, [x0, #16]
   101a0:	cmp	x3, w1, sxtw #4
   101a4:	b.cc	1021c <gelf_getauxv@@ELFUTILS_1.3+0xb4>  // b.lo, b.ul, b.last
   101a8:	ldr	x0, [x0]
   101ac:	add	x0, x0, x4
   101b0:	ldp	x0, x1, [x0, #-16]
   101b4:	stp	x0, x1, [x2]
   101b8:	mov	x0, x2
   101bc:	ldp	x29, x30, [sp], #16
   101c0:	ret
   101c4:	mov	w0, #0x4                   	// #4
   101c8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   101cc:	mov	x0, #0x0                   	// #0
   101d0:	b	101bc <gelf_getauxv@@ELFUTILS_1.3+0x54>
   101d4:	add	w1, w1, #0x1
   101d8:	sbfiz	x3, x1, #3, #32
   101dc:	ldr	x4, [x0, #16]
   101e0:	cmp	x4, w1, sxtw #3
   101e4:	b.cc	1020c <gelf_getauxv@@ELFUTILS_1.3+0xa4>  // b.lo, b.ul, b.last
   101e8:	sub	x1, x3, #0x8
   101ec:	ldr	x0, [x0]
   101f0:	add	x3, x0, x1
   101f4:	ldr	w0, [x0, x1]
   101f8:	str	x0, [x2]
   101fc:	ldr	w0, [x3, #4]
   10200:	str	x0, [x2, #8]
   10204:	mov	x0, x2
   10208:	b	101bc <gelf_getauxv@@ELFUTILS_1.3+0x54>
   1020c:	mov	w0, #0x16                  	// #22
   10210:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10214:	mov	x0, #0x0                   	// #0
   10218:	b	101bc <gelf_getauxv@@ELFUTILS_1.3+0x54>
   1021c:	mov	w0, #0x16                  	// #22
   10220:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10224:	mov	x0, #0x0                   	// #0
   10228:	b	101bc <gelf_getauxv@@ELFUTILS_1.3+0x54>
   1022c:	ret

0000000000010230 <gelf_update_auxv@@ELFUTILS_1.3>:
   10230:	cbz	x0, 10338 <gelf_update_auxv@@ELFUTILS_1.3+0x108>
   10234:	stp	x29, x30, [sp, #-16]!
   10238:	mov	x29, sp
   1023c:	tbnz	w1, #31, 1029c <gelf_update_auxv@@ELFUTILS_1.3+0x6c>
   10240:	ldr	w3, [x0, #8]
   10244:	cmp	w3, #0x18
   10248:	b.ne	102ac <gelf_update_auxv@@ELFUTILS_1.3+0x7c>  // b.any
   1024c:	ldr	x3, [x0, #40]
   10250:	ldr	x4, [x3, #136]
   10254:	ldr	w4, [x4, #32]
   10258:	cmp	w4, #0x1
   1025c:	b.eq	102bc <gelf_update_auxv@@ELFUTILS_1.3+0x8c>  // b.none
   10260:	add	w1, w1, #0x1
   10264:	sbfiz	x5, x1, #4, #32
   10268:	ldr	x4, [x0, #16]
   1026c:	cmp	x4, w1, sxtw #4
   10270:	b.cc	10328 <gelf_update_auxv@@ELFUTILS_1.3+0xf8>  // b.lo, b.ul, b.last
   10274:	ldr	x0, [x0]
   10278:	add	x0, x0, x5
   1027c:	ldp	x4, x5, [x2]
   10280:	stp	x4, x5, [x0, #-16]
   10284:	ldr	w0, [x3, #156]
   10288:	orr	w0, w0, #0x1
   1028c:	str	w0, [x3, #156]
   10290:	mov	w0, #0x1                   	// #1
   10294:	ldp	x29, x30, [sp], #16
   10298:	ret
   1029c:	mov	w0, #0x16                  	// #22
   102a0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   102a4:	mov	w0, #0x0                   	// #0
   102a8:	b	10294 <gelf_update_auxv@@ELFUTILS_1.3+0x64>
   102ac:	mov	w0, #0x1f                  	// #31
   102b0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   102b4:	mov	w0, #0x0                   	// #0
   102b8:	b	10294 <gelf_update_auxv@@ELFUTILS_1.3+0x64>
   102bc:	ldr	x5, [x2]
   102c0:	mov	x4, #0xffffffff            	// #4294967295
   102c4:	cmp	x5, x4
   102c8:	b.hi	10308 <gelf_update_auxv@@ELFUTILS_1.3+0xd8>  // b.pmore
   102cc:	ldr	x6, [x2, #8]
   102d0:	cmp	x6, x4
   102d4:	b.hi	10308 <gelf_update_auxv@@ELFUTILS_1.3+0xd8>  // b.pmore
   102d8:	add	w1, w1, #0x1
   102dc:	sbfiz	x4, x1, #3, #32
   102e0:	ldr	x6, [x0, #16]
   102e4:	cmp	x6, w1, sxtw #3
   102e8:	b.cc	10318 <gelf_update_auxv@@ELFUTILS_1.3+0xe8>  // b.lo, b.ul, b.last
   102ec:	sub	x1, x4, #0x8
   102f0:	ldr	x0, [x0]
   102f4:	add	x4, x0, x1
   102f8:	str	w5, [x0, x1]
   102fc:	ldr	x0, [x2, #8]
   10300:	str	w0, [x4, #4]
   10304:	b	10284 <gelf_update_auxv@@ELFUTILS_1.3+0x54>
   10308:	mov	w0, #0x21                  	// #33
   1030c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10310:	mov	w0, #0x0                   	// #0
   10314:	b	10294 <gelf_update_auxv@@ELFUTILS_1.3+0x64>
   10318:	mov	w0, #0x16                  	// #22
   1031c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10320:	mov	w0, #0x0                   	// #0
   10324:	b	10294 <gelf_update_auxv@@ELFUTILS_1.3+0x64>
   10328:	mov	w0, #0x16                  	// #22
   1032c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10330:	mov	w0, #0x0                   	// #0
   10334:	b	10294 <gelf_update_auxv@@ELFUTILS_1.3+0x64>
   10338:	mov	w0, #0x0                   	// #0
   1033c:	ret

0000000000010340 <gelf_getnote@@ELFUTILS_1.3>:
   10340:	cbz	x0, 10458 <gelf_getnote@@ELFUTILS_1.3+0x118>
   10344:	stp	x29, x30, [sp, #-16]!
   10348:	mov	x29, sp
   1034c:	mov	x5, x0
   10350:	ldr	w0, [x0, #8]
   10354:	cmp	w0, #0x13
   10358:	ccmp	w0, #0x1a, #0x4, ne  // ne = any
   1035c:	b.ne	1040c <gelf_getnote@@ELFUTILS_1.3+0xcc>  // b.any
   10360:	ldr	x6, [x5, #16]
   10364:	cmp	x6, x1
   10368:	b.cc	1041c <gelf_getnote@@ELFUTILS_1.3+0xdc>  // b.lo, b.ul, b.last
   1036c:	sub	x0, x6, x1
   10370:	cmp	x0, #0xb
   10374:	b.ls	1041c <gelf_getnote@@ELFUTILS_1.3+0xdc>  // b.plast
   10378:	add	x7, x1, #0xc
   1037c:	mov	x0, #0x0                   	// #0
   10380:	cmp	x6, x7
   10384:	b.cc	10428 <gelf_getnote@@ELFUTILS_1.3+0xe8>  // b.lo, b.ul, b.last
   10388:	ldr	x8, [x5]
   1038c:	add	x10, x8, x1
   10390:	str	x7, [x3]
   10394:	ldr	w3, [x8, x1]
   10398:	ldr	x6, [x5, #16]
   1039c:	cmp	x3, x6
   103a0:	b.hi	10428 <gelf_getnote@@ELFUTILS_1.3+0xe8>  // b.pmore
   103a4:	sub	x9, x6, x3
   103a8:	cmp	x9, x7
   103ac:	b.cc	10428 <gelf_getnote@@ELFUTILS_1.3+0xe8>  // b.lo, b.ul, b.last
   103b0:	add	x7, x3, x7
   103b4:	ldr	w0, [x5, #8]
   103b8:	cmp	w0, #0x1a
   103bc:	b.eq	10430 <gelf_getnote@@ELFUTILS_1.3+0xf0>  // b.none
   103c0:	ldr	w5, [x10, #4]
   103c4:	add	w5, w5, #0x3
   103c8:	and	w5, w5, #0xfffffffc
   103cc:	add	x3, x7, #0x3
   103d0:	and	x3, x3, #0xfffffffc
   103d4:	cmp	x6, x3
   103d8:	b.cc	10460 <gelf_getnote@@ELFUTILS_1.3+0x120>  // b.lo, b.ul, b.last
   103dc:	mov	w0, w5
   103e0:	sub	x6, x6, x3
   103e4:	cmp	x6, w5, uxtw
   103e8:	b.cc	10468 <gelf_getnote@@ELFUTILS_1.3+0x128>  // b.lo, b.ul, b.last
   103ec:	cbz	w5, 10448 <gelf_getnote@@ELFUTILS_1.3+0x108>
   103f0:	str	x3, [x4]
   103f4:	add	x0, x0, x3
   103f8:	ldr	x1, [x8, x1]
   103fc:	str	x1, [x2]
   10400:	ldr	w1, [x10, #8]
   10404:	str	w1, [x2, #8]
   10408:	b	10428 <gelf_getnote@@ELFUTILS_1.3+0xe8>
   1040c:	mov	w0, #0x4                   	// #4
   10410:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10414:	mov	x0, #0x0                   	// #0
   10418:	b	10428 <gelf_getnote@@ELFUTILS_1.3+0xe8>
   1041c:	mov	w0, #0x1d                  	// #29
   10420:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10424:	mov	x0, #0x0                   	// #0
   10428:	ldp	x29, x30, [sp], #16
   1042c:	ret
   10430:	ldr	w5, [x10, #4]
   10434:	add	w5, w5, #0x7
   10438:	and	w5, w5, #0xfffffff8
   1043c:	add	x3, x7, #0x7
   10440:	and	x3, x3, #0xfffffff8
   10444:	b	103d4 <gelf_getnote@@ELFUTILS_1.3+0x94>
   10448:	ldr	w5, [x10, #4]
   1044c:	cbz	w5, 103f0 <gelf_getnote@@ELFUTILS_1.3+0xb0>
   10450:	mov	x0, #0x0                   	// #0
   10454:	b	10428 <gelf_getnote@@ELFUTILS_1.3+0xe8>
   10458:	mov	x0, #0x0                   	// #0
   1045c:	ret
   10460:	mov	x0, #0x0                   	// #0
   10464:	b	10428 <gelf_getnote@@ELFUTILS_1.3+0xe8>
   10468:	mov	x0, #0x0                   	// #0
   1046c:	b	10428 <gelf_getnote@@ELFUTILS_1.3+0xe8>

0000000000010470 <gelf_xlatetof@@ELFUTILS_1.0>:
   10470:	mov	x4, x0
   10474:	cbz	x0, 104ac <gelf_xlatetof@@ELFUTILS_1.0+0x3c>
   10478:	stp	x29, x30, [sp, #-16]!
   1047c:	mov	x29, sp
   10480:	mov	x0, x1
   10484:	mov	x1, x2
   10488:	mov	w2, w3
   1048c:	ldr	w3, [x4, #32]
   10490:	cmp	w3, #0x1
   10494:	b.eq	104a4 <gelf_xlatetof@@ELFUTILS_1.0+0x34>  // b.none
   10498:	bl	58d8 <elf64_xlatetof@@ELFUTILS_1.0>
   1049c:	ldp	x29, x30, [sp], #16
   104a0:	ret
   104a4:	bl	5710 <elf32_xlatetof@@ELFUTILS_1.0>
   104a8:	b	1049c <gelf_xlatetof@@ELFUTILS_1.0+0x2c>
   104ac:	ret

00000000000104b0 <gelf_xlatetom@@ELFUTILS_1.0>:
   104b0:	mov	x4, x0
   104b4:	cbz	x0, 104ec <gelf_xlatetom@@ELFUTILS_1.0+0x3c>
   104b8:	stp	x29, x30, [sp, #-16]!
   104bc:	mov	x29, sp
   104c0:	mov	x0, x1
   104c4:	mov	x1, x2
   104c8:	mov	w2, w3
   104cc:	ldr	w3, [x4, #32]
   104d0:	cmp	w3, #0x1
   104d4:	b.eq	104e4 <gelf_xlatetom@@ELFUTILS_1.0+0x34>  // b.none
   104d8:	bl	59bc <elf64_xlatetom@@ELFUTILS_1.0>
   104dc:	ldp	x29, x30, [sp], #16
   104e0:	ret
   104e4:	bl	57ec <elf32_xlatetom@@ELFUTILS_1.0>
   104e8:	b	104dc <gelf_xlatetom@@ELFUTILS_1.0+0x2c>
   104ec:	ret
   104f0:	stp	x29, x30, [sp, #-80]!
   104f4:	mov	x29, sp
   104f8:	stp	x19, x20, [sp, #16]
   104fc:	stp	x21, x22, [sp, #32]
   10500:	stp	x23, x24, [sp, #48]
   10504:	mov	x23, x0
   10508:	mov	x22, x1
   1050c:	ldr	x24, [x0]
   10510:	udiv	x0, x1, x24
   10514:	msub	x0, x0, x24, x1
   10518:	add	x19, x0, #0x1
   1051c:	add	x0, x0, x0, lsl #2
   10520:	add	x0, x23, x0, lsl #3
   10524:	ldr	x1, [x0, #48]
   10528:	cbz	x1, 105cc <gelf_xlatetom@@ELFUTILS_1.0+0x11c>
   1052c:	stp	x25, x26, [sp, #64]
   10530:	mov	x25, x2
   10534:	cmp	x1, x22
   10538:	b.eq	10554 <gelf_xlatetom@@ELFUTILS_1.0+0xa4>  // b.none
   1053c:	sub	x0, x24, #0x2
   10540:	udiv	x21, x22, x0
   10544:	msub	x21, x21, x0, x22
   10548:	add	x21, x21, #0x1
   1054c:	sub	x24, x24, x21
   10550:	b	1057c <gelf_xlatetom@@ELFUTILS_1.0+0xcc>
   10554:	ldr	x1, [x0, #56]
   10558:	ldr	x0, [x2]
   1055c:	bl	3210 <strcmp@plt>
   10560:	cbnz	w0, 1053c <gelf_xlatetom@@ELFUTILS_1.0+0x8c>
   10564:	add	x19, x19, x19, lsl #2
   10568:	add	x0, x23, x19, lsl #3
   1056c:	add	x0, x0, #0x8
   10570:	ldp	x25, x26, [sp, #64]
   10574:	b	105d8 <gelf_xlatetom@@ELFUTILS_1.0+0x128>
   10578:	cbz	x20, 105c8 <gelf_xlatetom@@ELFUTILS_1.0+0x118>
   1057c:	add	x0, x19, x24
   10580:	sub	x1, x19, x21
   10584:	cmp	x19, x21
   10588:	csel	x19, x1, x0, hi  // hi = pmore
   1058c:	add	x3, x19, x19, lsl #2
   10590:	lsl	x3, x3, #3
   10594:	mov	x26, x3
   10598:	add	x3, x23, x3
   1059c:	ldr	x20, [x3, #8]
   105a0:	cmp	x20, x22
   105a4:	b.ne	10578 <gelf_xlatetom@@ELFUTILS_1.0+0xc8>  // b.any
   105a8:	ldr	x1, [x3, #16]
   105ac:	ldr	x0, [x25]
   105b0:	bl	3210 <strcmp@plt>
   105b4:	cbnz	w0, 10578 <gelf_xlatetom@@ELFUTILS_1.0+0xc8>
   105b8:	add	x0, x26, #0x8
   105bc:	add	x0, x23, x0
   105c0:	ldp	x25, x26, [sp, #64]
   105c4:	b	105d8 <gelf_xlatetom@@ELFUTILS_1.0+0x128>
   105c8:	ldp	x25, x26, [sp, #64]
   105cc:	add	x19, x19, x19, lsl #2
   105d0:	add	x0, x23, x19, lsl #3
   105d4:	add	x0, x0, #0x8
   105d8:	ldp	x19, x20, [sp, #16]
   105dc:	ldp	x21, x22, [sp, #32]
   105e0:	ldp	x23, x24, [sp, #48]
   105e4:	ldp	x29, x30, [sp], #80
   105e8:	ret

00000000000105ec <nlist@@ELFUTILS_1.0>:
   105ec:	stp	x29, x30, [sp, #-208]!
   105f0:	mov	x29, sp
   105f4:	stp	x19, x20, [sp, #16]
   105f8:	mov	x19, x1
   105fc:	mov	w1, #0x0                   	// #0
   10600:	bl	3110 <open@plt>
   10604:	cmn	w0, #0x1
   10608:	b.eq	1064c <nlist@@ELFUTILS_1.0+0x60>  // b.none
   1060c:	stp	x21, x22, [sp, #32]
   10610:	stp	x23, x24, [sp, #48]
   10614:	mov	w23, w0
   10618:	mov	w0, #0x1                   	// #1
   1061c:	bl	34c8 <elf_version@@ELFUTILS_1.0>
   10620:	mov	x2, #0x0                   	// #0
   10624:	mov	w1, #0x8                   	// #8
   10628:	mov	w0, w23
   1062c:	bl	4ec4 <elf_begin@@ELFUTILS_1.0>
   10630:	mov	x21, x0
   10634:	cbz	x0, 10768 <nlist@@ELFUTILS_1.0+0x17c>
   10638:	stp	x25, x26, [sp, #64]
   1063c:	mov	x24, #0x0                   	// #0
   10640:	mov	x22, #0x0                   	// #0
   10644:	add	x25, sp, #0x90
   10648:	b	10660 <nlist@@ELFUTILS_1.0+0x74>
   1064c:	mov	w0, #0x27                  	// #39
   10650:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10654:	b	10778 <nlist@@ELFUTILS_1.0+0x18c>
   10658:	cmp	w0, #0xb
   1065c:	csel	x24, x24, x22, ne  // ne = any
   10660:	mov	x1, x22
   10664:	mov	x0, x21
   10668:	bl	929c <elf_nextscn@@ELFUTILS_1.0>
   1066c:	mov	x22, x0
   10670:	cbz	x0, 108e4 <nlist@@ELFUTILS_1.0+0x2f8>
   10674:	mov	x1, x25
   10678:	mov	x0, x22
   1067c:	bl	a090 <gelf_getshdr@@ELFUTILS_1.0>
   10680:	mov	x20, x0
   10684:	cbz	x0, 1075c <nlist@@ELFUTILS_1.0+0x170>
   10688:	ldr	w0, [x0, #4]
   1068c:	cmp	w0, #0x2
   10690:	b.ne	10658 <nlist@@ELFUTILS_1.0+0x6c>  // b.any
   10694:	mov	x1, #0x0                   	// #0
   10698:	mov	x0, x22
   1069c:	bl	af30 <elf_getdata@@ELFUTILS_1.0>
   106a0:	mov	x25, x0
   106a4:	cbz	x0, 1075c <nlist@@ELFUTILS_1.0+0x170>
   106a8:	stp	x27, x28, [sp, #80]
   106ac:	ldr	x26, [x20, #32]
   106b0:	mov	w3, #0x1                   	// #1
   106b4:	mov	x2, #0x1                   	// #1
   106b8:	mov	w1, #0xb                   	// #11
   106bc:	mov	x0, x21
   106c0:	bl	5698 <gelf_fsize@@ELFUTILS_1.0>
   106c4:	mov	x22, x0
   106c8:	udiv	x28, x26, x0
   106cc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   106d0:	cmp	x28, x0
   106d4:	b.cs	10734 <nlist@@ELFUTILS_1.0+0x148>  // b.hs, b.nlast
   106d8:	add	x1, x28, x28, lsl #1
   106dc:	lsr	x2, x1, #1
   106e0:	cmp	x1, #0x15
   106e4:	mov	x0, #0xa                   	// #10
   106e8:	csel	x0, x2, x0, hi  // hi = pmore
   106ec:	bl	11818 <elf64_checksum@@ELFUTILS_1.0+0x218>
   106f0:	mov	x24, x0
   106f4:	add	x0, x0, #0x1
   106f8:	add	x0, x0, x0, lsl #2
   106fc:	lsl	x0, x0, #3
   10700:	mov	x1, #0x1                   	// #1
   10704:	add	x0, x0, #0x8
   10708:	bl	3180 <calloc@plt>
   1070c:	mov	x27, x0
   10710:	cbz	x0, 10740 <nlist@@ELFUTILS_1.0+0x154>
   10714:	str	x24, [x0]
   10718:	cmp	x26, x22
   1071c:	b.cc	10820 <nlist@@ELFUTILS_1.0+0x234>  // b.lo, b.ul, b.last
   10720:	mov	x22, #0x0                   	// #0
   10724:	add	x26, sp, #0x70
   10728:	add	x0, x26, #0x8
   1072c:	str	x0, [sp, #104]
   10730:	b	107b8 <nlist@@ELFUTILS_1.0+0x1cc>
   10734:	bl	3390 <__errno_location@plt>
   10738:	mov	w1, #0x16                  	// #22
   1073c:	str	w1, [x0]
   10740:	mov	w0, #0x8                   	// #8
   10744:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10748:	ldp	x27, x28, [sp, #80]
   1074c:	b	1075c <nlist@@ELFUTILS_1.0+0x170>
   10750:	mov	x0, x27
   10754:	bl	3250 <free@plt>
   10758:	ldp	x27, x28, [sp, #80]
   1075c:	mov	x0, x21
   10760:	bl	5230 <elf_end@@ELFUTILS_1.0>
   10764:	ldp	x25, x26, [sp, #64]
   10768:	mov	w0, w23
   1076c:	bl	31c0 <close@plt>
   10770:	ldp	x21, x22, [sp, #32]
   10774:	ldp	x23, x24, [sp, #48]
   10778:	ldr	x0, [x19]
   1077c:	cbz	x0, 1085c <nlist@@ELFUTILS_1.0+0x270>
   10780:	ldrb	w0, [x0]
   10784:	cbz	w0, 10864 <nlist@@ELFUTILS_1.0+0x278>
   10788:	str	xzr, [x19, #8]
   1078c:	strh	wzr, [x19, #16]
   10790:	strh	wzr, [x19, #18]
   10794:	strb	wzr, [x19, #20]
   10798:	strb	wzr, [x19, #21]
   1079c:	ldr	x0, [x19, #24]!
   107a0:	cbnz	x0, 10780 <nlist@@ELFUTILS_1.0+0x194>
   107a4:	mov	w0, #0xffffffff            	// #-1
   107a8:	b	10868 <nlist@@ELFUTILS_1.0+0x27c>
   107ac:	add	x22, x22, #0x1
   107b0:	cmp	x28, x22
   107b4:	b.ls	10820 <nlist@@ELFUTILS_1.0+0x234>  // b.plast
   107b8:	ldr	x2, [sp, #104]
   107bc:	mov	w1, w22
   107c0:	mov	x0, x25
   107c4:	bl	f594 <gelf_getsym@@ELFUTILS_1.0>
   107c8:	cbz	x0, 10750 <nlist@@ELFUTILS_1.0+0x164>
   107cc:	ldr	w2, [x0]
   107d0:	ldr	w1, [x20, #40]
   107d4:	mov	x0, x21
   107d8:	bl	a34c <elf_strptr@@ELFUTILS_1.0>
   107dc:	str	x0, [sp, #112]
   107e0:	cbz	x0, 10750 <nlist@@ELFUTILS_1.0+0x164>
   107e4:	ldrb	w1, [x0]
   107e8:	cbz	w1, 107ac <nlist@@ELFUTILS_1.0+0x1c0>
   107ec:	bl	3508 <elf_hash@@ELFUTILS_1.0>
   107f0:	mov	x24, x0
   107f4:	mov	x2, x26
   107f8:	mov	x1, x0
   107fc:	mov	x0, x27
   10800:	bl	104f0 <gelf_xlatetom@@ELFUTILS_1.0+0x40>
   10804:	mov	x1, x0
   10808:	str	x24, [x1], #8
   1080c:	ldp	x2, x3, [x26]
   10810:	stp	x2, x3, [x0, #8]
   10814:	ldp	x2, x3, [x26, #16]
   10818:	stp	x2, x3, [x1, #16]
   1081c:	b	107ac <nlist@@ELFUTILS_1.0+0x1c0>
   10820:	ldr	x0, [x19]
   10824:	add	x20, sp, #0x70
   10828:	cbnz	x0, 10890 <nlist@@ELFUTILS_1.0+0x2a4>
   1082c:	mov	x0, x27
   10830:	bl	3250 <free@plt>
   10834:	mov	x0, x21
   10838:	bl	5230 <elf_end@@ELFUTILS_1.0>
   1083c:	mov	w0, w23
   10840:	bl	31c0 <close@plt>
   10844:	mov	w0, #0x0                   	// #0
   10848:	ldp	x21, x22, [sp, #32]
   1084c:	ldp	x23, x24, [sp, #48]
   10850:	ldp	x25, x26, [sp, #64]
   10854:	ldp	x27, x28, [sp, #80]
   10858:	b	10868 <nlist@@ELFUTILS_1.0+0x27c>
   1085c:	mov	w0, #0xffffffff            	// #-1
   10860:	b	10868 <nlist@@ELFUTILS_1.0+0x27c>
   10864:	mov	w0, #0xffffffff            	// #-1
   10868:	ldp	x19, x20, [sp, #16]
   1086c:	ldp	x29, x30, [sp], #208
   10870:	ret
   10874:	str	xzr, [x19, #8]
   10878:	strh	wzr, [x19, #16]
   1087c:	strh	wzr, [x19, #18]
   10880:	strb	wzr, [x19, #20]
   10884:	strb	wzr, [x19, #21]
   10888:	ldr	x0, [x19, #24]!
   1088c:	cbz	x0, 1082c <nlist@@ELFUTILS_1.0+0x240>
   10890:	ldrb	w1, [x0]
   10894:	cbz	w1, 1082c <nlist@@ELFUTILS_1.0+0x240>
   10898:	str	x0, [sp, #112]
   1089c:	bl	3508 <elf_hash@@ELFUTILS_1.0>
   108a0:	mov	x2, x20
   108a4:	mov	x1, x0
   108a8:	mov	x0, x27
   108ac:	bl	104f0 <gelf_xlatetom@@ELFUTILS_1.0+0x40>
   108b0:	ldr	x1, [x0]
   108b4:	cbz	x1, 10874 <nlist@@ELFUTILS_1.0+0x288>
   108b8:	ldr	x1, [x0, #24]
   108bc:	str	x1, [x19, #8]
   108c0:	ldrh	w1, [x0, #22]
   108c4:	add	x0, x0, #0x8
   108c8:	strh	w1, [x19, #16]
   108cc:	ldrb	w0, [x0, #12]
   108d0:	and	w0, w0, #0xf
   108d4:	strh	w0, [x19, #18]
   108d8:	strb	wzr, [x19, #20]
   108dc:	strb	wzr, [x19, #21]
   108e0:	b	10888 <nlist@@ELFUTILS_1.0+0x29c>
   108e4:	cbz	x24, 1075c <nlist@@ELFUTILS_1.0+0x170>
   108e8:	add	x1, sp, #0x90
   108ec:	mov	x0, x24
   108f0:	bl	a090 <gelf_getshdr@@ELFUTILS_1.0>
   108f4:	mov	x20, x0
   108f8:	cbz	x0, 1075c <nlist@@ELFUTILS_1.0+0x170>
   108fc:	mov	x22, x24
   10900:	b	10694 <nlist@@ELFUTILS_1.0+0xa8>

0000000000010904 <gelf_getsymshndx@@ELFUTILS_1.0>:
   10904:	cbz	x0, 10a48 <gelf_getsymshndx@@ELFUTILS_1.0+0x144>
   10908:	stp	x29, x30, [sp, #-16]!
   1090c:	mov	x29, sp
   10910:	ldr	w5, [x0, #8]
   10914:	cmp	w5, #0xb
   10918:	b.ne	109a8 <gelf_getsymshndx@@ELFUTILS_1.0+0xa4>  // b.any
   1091c:	cbz	x1, 10a38 <gelf_getsymshndx@@ELFUTILS_1.0+0x134>
   10920:	ldr	w5, [x1, #8]
   10924:	cmp	w5, #0xc
   10928:	b.ne	109a8 <gelf_getsymshndx@@ELFUTILS_1.0+0xa4>  // b.any
   1092c:	ldr	x5, [x0, #40]
   10930:	ldr	x5, [x5, #136]
   10934:	ldr	x7, [x1, #16]
   10938:	mov	w6, w2
   1093c:	cmp	x6, x7, lsr #2
   10940:	b.cs	109b8 <gelf_getsymshndx@@ELFUTILS_1.0+0xb4>  // b.hs, b.nlast
   10944:	ldr	x1, [x1]
   10948:	ldr	w6, [x1, w2, sxtw #2]
   1094c:	ldr	w1, [x5, #32]
   10950:	cmp	w1, #0x1
   10954:	b.eq	109c8 <gelf_getsymshndx@@ELFUTILS_1.0+0xc4>  // b.none
   10958:	ldr	x1, [x0, #16]
   1095c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   10960:	movk	x5, #0xaaab
   10964:	umulh	x1, x1, x5
   10968:	mov	w5, w2
   1096c:	cmp	x5, x1, lsr #4
   10970:	b.cs	10a28 <gelf_getsymshndx@@ELFUTILS_1.0+0x124>  // b.hs, b.nlast
   10974:	ldr	x0, [x0]
   10978:	sbfiz	x1, x2, #1, #32
   1097c:	add	x2, x1, w2, sxtw
   10980:	add	x2, x0, x2, lsl #3
   10984:	ldp	x0, x1, [x2]
   10988:	stp	x0, x1, [x3]
   1098c:	ldr	x0, [x2, #16]
   10990:	str	x0, [x3, #16]
   10994:	mov	x0, x3
   10998:	cbz	x4, 109a0 <gelf_getsymshndx@@ELFUTILS_1.0+0x9c>
   1099c:	str	w6, [x4]
   109a0:	ldp	x29, x30, [sp], #16
   109a4:	ret
   109a8:	mov	w0, #0x4                   	// #4
   109ac:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   109b0:	mov	x0, #0x0                   	// #0
   109b4:	b	109a0 <gelf_getsymshndx@@ELFUTILS_1.0+0x9c>
   109b8:	mov	w0, #0x16                  	// #22
   109bc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   109c0:	mov	x0, #0x0                   	// #0
   109c4:	b	109a0 <gelf_getsymshndx@@ELFUTILS_1.0+0x9c>
   109c8:	ldr	x5, [x0, #16]
   109cc:	mov	w1, w2
   109d0:	cmp	x1, x5, lsr #4
   109d4:	b.cs	10a18 <gelf_getsymshndx@@ELFUTILS_1.0+0x114>  // b.hs, b.nlast
   109d8:	sbfiz	x2, x2, #4, #32
   109dc:	ldr	x1, [x0]
   109e0:	add	x0, x1, x2
   109e4:	ldr	w1, [x1, x2]
   109e8:	str	w1, [x3]
   109ec:	ldrb	w1, [x0, #12]
   109f0:	strb	w1, [x3, #4]
   109f4:	ldrb	w1, [x0, #13]
   109f8:	strb	w1, [x3, #5]
   109fc:	ldrh	w1, [x0, #14]
   10a00:	strh	w1, [x3, #6]
   10a04:	ldr	w1, [x0, #4]
   10a08:	str	x1, [x3, #8]
   10a0c:	ldr	w0, [x0, #8]
   10a10:	str	x0, [x3, #16]
   10a14:	b	10994 <gelf_getsymshndx@@ELFUTILS_1.0+0x90>
   10a18:	mov	w0, #0x16                  	// #22
   10a1c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10a20:	mov	x0, #0x0                   	// #0
   10a24:	b	109a0 <gelf_getsymshndx@@ELFUTILS_1.0+0x9c>
   10a28:	mov	w0, #0x16                  	// #22
   10a2c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10a30:	mov	x0, #0x0                   	// #0
   10a34:	b	109a0 <gelf_getsymshndx@@ELFUTILS_1.0+0x9c>
   10a38:	ldr	x1, [x0, #40]
   10a3c:	ldr	x5, [x1, #136]
   10a40:	mov	w6, #0x0                   	// #0
   10a44:	b	1094c <gelf_getsymshndx@@ELFUTILS_1.0+0x48>
   10a48:	ret

0000000000010a4c <gelf_update_symshndx@@ELFUTILS_1.0>:
   10a4c:	cbz	x0, 10bc8 <gelf_update_symshndx@@ELFUTILS_1.0+0x17c>
   10a50:	stp	x29, x30, [sp, #-16]!
   10a54:	mov	x29, sp
   10a58:	ldr	w5, [x0, #8]
   10a5c:	cmp	w5, #0xb
   10a60:	b.ne	10af8 <gelf_update_symshndx@@ELFUTILS_1.0+0xac>  // b.any
   10a64:	ldr	x5, [x0, #40]
   10a68:	ldr	x8, [x5, #136]
   10a6c:	cbz	x1, 10b18 <gelf_update_symshndx@@ELFUTILS_1.0+0xcc>
   10a70:	add	w7, w2, #0x1
   10a74:	sbfiz	x6, x7, #2, #32
   10a78:	ldr	x9, [x1, #16]
   10a7c:	cmp	x9, w7, sxtw #2
   10a80:	b.cc	10b08 <gelf_update_symshndx@@ELFUTILS_1.0+0xbc>  // b.lo, b.ul, b.last
   10a84:	sub	x6, x6, #0x4
   10a88:	ldr	x1, [x1]
   10a8c:	add	x1, x1, x6
   10a90:	ldr	w6, [x8, #32]
   10a94:	cmp	w6, #0x1
   10a98:	b.eq	10b2c <gelf_update_symshndx@@ELFUTILS_1.0+0xe0>  // b.none
   10a9c:	ldr	x6, [x0, #16]
   10aa0:	mov	x7, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   10aa4:	movk	x7, #0xaaab
   10aa8:	umulh	x6, x6, x7
   10aac:	mov	w7, w2
   10ab0:	cmp	x7, x6, lsr #4
   10ab4:	b.cs	10bb8 <gelf_update_symshndx@@ELFUTILS_1.0+0x16c>  // b.hs, b.nlast
   10ab8:	ldr	x0, [x0]
   10abc:	sbfiz	x6, x2, #1, #32
   10ac0:	add	x2, x6, w2, sxtw
   10ac4:	add	x2, x0, x2, lsl #3
   10ac8:	ldp	x6, x7, [x3]
   10acc:	stp	x6, x7, [x2]
   10ad0:	ldr	x0, [x3, #16]
   10ad4:	str	x0, [x2, #16]
   10ad8:	cbz	x1, 10ae0 <gelf_update_symshndx@@ELFUTILS_1.0+0x94>
   10adc:	str	w4, [x1]
   10ae0:	ldr	w0, [x5, #156]
   10ae4:	orr	w0, w0, #0x1
   10ae8:	str	w0, [x5, #156]
   10aec:	mov	w0, #0x1                   	// #1
   10af0:	ldp	x29, x30, [sp], #16
   10af4:	ret
   10af8:	mov	w0, #0x1f                  	// #31
   10afc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10b00:	mov	w0, #0x0                   	// #0
   10b04:	b	10af0 <gelf_update_symshndx@@ELFUTILS_1.0+0xa4>
   10b08:	mov	w0, #0x16                  	// #22
   10b0c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10b10:	mov	w0, #0x0                   	// #0
   10b14:	b	10af0 <gelf_update_symshndx@@ELFUTILS_1.0+0xa4>
   10b18:	cbz	w4, 10a90 <gelf_update_symshndx@@ELFUTILS_1.0+0x44>
   10b1c:	mov	w0, #0x16                  	// #22
   10b20:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10b24:	mov	w0, #0x0                   	// #0
   10b28:	b	10af0 <gelf_update_symshndx@@ELFUTILS_1.0+0xa4>
   10b2c:	ldr	x7, [x3, #8]
   10b30:	mov	x6, #0xffffffff            	// #4294967295
   10b34:	cmp	x7, x6
   10b38:	b.hi	10b98 <gelf_update_symshndx@@ELFUTILS_1.0+0x14c>  // b.pmore
   10b3c:	ldr	x7, [x3, #16]
   10b40:	cmp	x7, x6
   10b44:	b.hi	10b98 <gelf_update_symshndx@@ELFUTILS_1.0+0x14c>  // b.pmore
   10b48:	ldr	x7, [x0, #16]
   10b4c:	mov	w6, w2
   10b50:	cmp	x6, x7, lsr #4
   10b54:	b.cs	10ba8 <gelf_update_symshndx@@ELFUTILS_1.0+0x15c>  // b.hs, b.nlast
   10b58:	sbfiz	x2, x2, #4, #32
   10b5c:	ldr	x6, [x0]
   10b60:	add	x0, x6, x2
   10b64:	ldr	w7, [x3]
   10b68:	str	w7, [x6, x2]
   10b6c:	ldr	x2, [x3, #8]
   10b70:	str	w2, [x0, #4]
   10b74:	ldr	x2, [x3, #16]
   10b78:	str	w2, [x0, #8]
   10b7c:	ldrb	w2, [x3, #4]
   10b80:	strb	w2, [x0, #12]
   10b84:	ldrb	w2, [x3, #5]
   10b88:	strb	w2, [x0, #13]
   10b8c:	ldrh	w2, [x3, #6]
   10b90:	strh	w2, [x0, #14]
   10b94:	b	10ad8 <gelf_update_symshndx@@ELFUTILS_1.0+0x8c>
   10b98:	mov	w0, #0x21                  	// #33
   10b9c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10ba0:	mov	w0, #0x0                   	// #0
   10ba4:	b	10af0 <gelf_update_symshndx@@ELFUTILS_1.0+0xa4>
   10ba8:	mov	w0, #0x16                  	// #22
   10bac:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10bb0:	mov	w0, #0x0                   	// #0
   10bb4:	b	10af0 <gelf_update_symshndx@@ELFUTILS_1.0+0xa4>
   10bb8:	mov	w0, #0x16                  	// #22
   10bbc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10bc0:	mov	w0, #0x0                   	// #0
   10bc4:	b	10af0 <gelf_update_symshndx@@ELFUTILS_1.0+0xa4>
   10bc8:	mov	w0, #0x0                   	// #0
   10bcc:	ret

0000000000010bd0 <gelf_update_versym@@ELFUTILS_1.0>:
   10bd0:	cbz	x0, 10c40 <gelf_update_versym@@ELFUTILS_1.0+0x70>
   10bd4:	stp	x29, x30, [sp, #-16]!
   10bd8:	mov	x29, sp
   10bdc:	ldr	x4, [x0, #16]
   10be0:	mov	w3, w1
   10be4:	cmp	x3, x4, lsr #1
   10be8:	b.cs	10c20 <gelf_update_versym@@ELFUTILS_1.0+0x50>  // b.hs, b.nlast
   10bec:	ldr	w3, [x0, #8]
   10bf0:	cmp	w3, #0x4
   10bf4:	b.ne	10c30 <gelf_update_versym@@ELFUTILS_1.0+0x60>  // b.any
   10bf8:	ldrh	w3, [x2]
   10bfc:	ldr	x2, [x0]
   10c00:	strh	w3, [x2, w1, sxtw #1]
   10c04:	ldr	x1, [x0, #40]
   10c08:	ldr	w0, [x1, #156]
   10c0c:	orr	w0, w0, #0x1
   10c10:	str	w0, [x1, #156]
   10c14:	mov	w0, #0x1                   	// #1
   10c18:	ldp	x29, x30, [sp], #16
   10c1c:	ret
   10c20:	mov	w0, #0x16                  	// #22
   10c24:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10c28:	mov	w0, #0x0                   	// #0
   10c2c:	b	10c18 <gelf_update_versym@@ELFUTILS_1.0+0x48>
   10c30:	mov	w0, #0x1f                  	// #31
   10c34:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10c38:	mov	w0, #0x0                   	// #0
   10c3c:	b	10c18 <gelf_update_versym@@ELFUTILS_1.0+0x48>
   10c40:	mov	w0, #0x0                   	// #0
   10c44:	ret

0000000000010c48 <gelf_update_verneed@@ELFUTILS_1.0>:
   10c48:	cbz	x0, 10cc4 <gelf_update_verneed@@ELFUTILS_1.0+0x7c>
   10c4c:	stp	x29, x30, [sp, #-16]!
   10c50:	mov	x29, sp
   10c54:	tbnz	w1, #31, 10ca4 <gelf_update_verneed@@ELFUTILS_1.0+0x5c>
   10c58:	sxtw	x1, w1
   10c5c:	add	x4, x1, #0x10
   10c60:	ldr	x3, [x0, #16]
   10c64:	cmp	x4, x3
   10c68:	b.hi	10ca4 <gelf_update_verneed@@ELFUTILS_1.0+0x5c>  // b.pmore
   10c6c:	ldr	w3, [x0, #8]
   10c70:	cmp	w3, #0x11
   10c74:	b.ne	10cb4 <gelf_update_verneed@@ELFUTILS_1.0+0x6c>  // b.any
   10c78:	ldp	x4, x5, [x2]
   10c7c:	ldr	x2, [x0]
   10c80:	add	x1, x2, x1
   10c84:	stp	x4, x5, [x1]
   10c88:	ldr	x1, [x0, #40]
   10c8c:	ldr	w0, [x1, #156]
   10c90:	orr	w0, w0, #0x1
   10c94:	str	w0, [x1, #156]
   10c98:	mov	w0, #0x1                   	// #1
   10c9c:	ldp	x29, x30, [sp], #16
   10ca0:	ret
   10ca4:	mov	w0, #0x16                  	// #22
   10ca8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10cac:	mov	w0, #0x0                   	// #0
   10cb0:	b	10c9c <gelf_update_verneed@@ELFUTILS_1.0+0x54>
   10cb4:	mov	w0, #0x1f                  	// #31
   10cb8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10cbc:	mov	w0, #0x0                   	// #0
   10cc0:	b	10c9c <gelf_update_verneed@@ELFUTILS_1.0+0x54>
   10cc4:	mov	w0, #0x0                   	// #0
   10cc8:	ret

0000000000010ccc <gelf_update_vernaux@@ELFUTILS_1.0>:
   10ccc:	cbz	x0, 10d48 <gelf_update_vernaux@@ELFUTILS_1.0+0x7c>
   10cd0:	stp	x29, x30, [sp, #-16]!
   10cd4:	mov	x29, sp
   10cd8:	tbnz	w1, #31, 10d28 <gelf_update_vernaux@@ELFUTILS_1.0+0x5c>
   10cdc:	sxtw	x1, w1
   10ce0:	add	x4, x1, #0x10
   10ce4:	ldr	x3, [x0, #16]
   10ce8:	cmp	x4, x3
   10cec:	b.hi	10d28 <gelf_update_vernaux@@ELFUTILS_1.0+0x5c>  // b.pmore
   10cf0:	ldr	w3, [x0, #8]
   10cf4:	cmp	w3, #0x11
   10cf8:	b.ne	10d38 <gelf_update_vernaux@@ELFUTILS_1.0+0x6c>  // b.any
   10cfc:	ldp	x4, x5, [x2]
   10d00:	ldr	x2, [x0]
   10d04:	add	x1, x2, x1
   10d08:	stp	x4, x5, [x1]
   10d0c:	ldr	x1, [x0, #40]
   10d10:	ldr	w0, [x1, #156]
   10d14:	orr	w0, w0, #0x1
   10d18:	str	w0, [x1, #156]
   10d1c:	mov	w0, #0x1                   	// #1
   10d20:	ldp	x29, x30, [sp], #16
   10d24:	ret
   10d28:	mov	w0, #0x16                  	// #22
   10d2c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10d30:	mov	w0, #0x0                   	// #0
   10d34:	b	10d20 <gelf_update_vernaux@@ELFUTILS_1.0+0x54>
   10d38:	mov	w0, #0x1f                  	// #31
   10d3c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10d40:	mov	w0, #0x0                   	// #0
   10d44:	b	10d20 <gelf_update_vernaux@@ELFUTILS_1.0+0x54>
   10d48:	mov	w0, #0x0                   	// #0
   10d4c:	ret

0000000000010d50 <gelf_update_verdef@@ELFUTILS_1.0>:
   10d50:	cbz	x0, 10dd4 <gelf_update_verdef@@ELFUTILS_1.0+0x84>
   10d54:	stp	x29, x30, [sp, #-16]!
   10d58:	mov	x29, sp
   10d5c:	tbnz	w1, #31, 10db4 <gelf_update_verdef@@ELFUTILS_1.0+0x64>
   10d60:	sxtw	x1, w1
   10d64:	add	x4, x1, #0x14
   10d68:	ldr	x3, [x0, #16]
   10d6c:	cmp	x4, x3
   10d70:	b.hi	10db4 <gelf_update_verdef@@ELFUTILS_1.0+0x64>  // b.pmore
   10d74:	ldr	w3, [x0, #8]
   10d78:	cmp	w3, #0xf
   10d7c:	b.ne	10dc4 <gelf_update_verdef@@ELFUTILS_1.0+0x74>  // b.any
   10d80:	ldr	x3, [x0]
   10d84:	add	x1, x3, x1
   10d88:	ldp	x4, x5, [x2]
   10d8c:	stp	x4, x5, [x1]
   10d90:	ldr	w2, [x2, #16]
   10d94:	str	w2, [x1, #16]
   10d98:	ldr	x1, [x0, #40]
   10d9c:	ldr	w0, [x1, #156]
   10da0:	orr	w0, w0, #0x1
   10da4:	str	w0, [x1, #156]
   10da8:	mov	w0, #0x1                   	// #1
   10dac:	ldp	x29, x30, [sp], #16
   10db0:	ret
   10db4:	mov	w0, #0x16                  	// #22
   10db8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10dbc:	mov	w0, #0x0                   	// #0
   10dc0:	b	10dac <gelf_update_verdef@@ELFUTILS_1.0+0x5c>
   10dc4:	mov	w0, #0x1f                  	// #31
   10dc8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10dcc:	mov	w0, #0x0                   	// #0
   10dd0:	b	10dac <gelf_update_verdef@@ELFUTILS_1.0+0x5c>
   10dd4:	mov	w0, #0x0                   	// #0
   10dd8:	ret

0000000000010ddc <gelf_update_verdaux@@ELFUTILS_1.0>:
   10ddc:	cbz	x0, 10e54 <gelf_update_verdaux@@ELFUTILS_1.0+0x78>
   10de0:	stp	x29, x30, [sp, #-16]!
   10de4:	mov	x29, sp
   10de8:	tbnz	w1, #31, 10e34 <gelf_update_verdaux@@ELFUTILS_1.0+0x58>
   10dec:	sxtw	x3, w1
   10df0:	add	x3, x3, #0x8
   10df4:	ldr	x4, [x0, #16]
   10df8:	cmp	x3, x4
   10dfc:	b.hi	10e34 <gelf_update_verdaux@@ELFUTILS_1.0+0x58>  // b.pmore
   10e00:	ldr	w3, [x0, #8]
   10e04:	cmp	w3, #0xf
   10e08:	b.ne	10e44 <gelf_update_verdaux@@ELFUTILS_1.0+0x68>  // b.any
   10e0c:	ldr	x3, [x2]
   10e10:	ldr	x2, [x0]
   10e14:	str	x3, [x2, w1, sxtw]
   10e18:	ldr	x1, [x0, #40]
   10e1c:	ldr	w0, [x1, #156]
   10e20:	orr	w0, w0, #0x1
   10e24:	str	w0, [x1, #156]
   10e28:	mov	w0, #0x1                   	// #1
   10e2c:	ldp	x29, x30, [sp], #16
   10e30:	ret
   10e34:	mov	w0, #0x16                  	// #22
   10e38:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10e3c:	mov	w0, #0x0                   	// #0
   10e40:	b	10e2c <gelf_update_verdaux@@ELFUTILS_1.0+0x50>
   10e44:	mov	w0, #0x1f                  	// #31
   10e48:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10e4c:	mov	w0, #0x0                   	// #0
   10e50:	b	10e2c <gelf_update_verdaux@@ELFUTILS_1.0+0x50>
   10e54:	mov	w0, #0x0                   	// #0
   10e58:	ret
   10e5c:	mov	x2, x0
   10e60:	ldr	x0, [x0, #72]
   10e64:	cbz	x0, 10e90 <gelf_update_verdaux@@ELFUTILS_1.0+0xb4>
   10e68:	ldr	w3, [x2, #32]
   10e6c:	cmp	w3, #0x1
   10e70:	b.eq	10eac <gelf_update_verdaux@@ELFUTILS_1.0+0xd0>  // b.none
   10e74:	ldrh	w3, [x0, #56]
   10e78:	str	x3, [x1]
   10e7c:	mov	w0, #0x0                   	// #0
   10e80:	mov	x4, #0xffff                	// #65535
   10e84:	cmp	x3, x4
   10e88:	b.eq	10eb4 <gelf_update_verdaux@@ELFUTILS_1.0+0xd8>  // b.none
   10e8c:	ret
   10e90:	stp	x29, x30, [sp, #-16]!
   10e94:	mov	x29, sp
   10e98:	mov	w0, #0x1a                  	// #26
   10e9c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10ea0:	mov	w0, #0xffffffff            	// #-1
   10ea4:	ldp	x29, x30, [sp], #16
   10ea8:	ret
   10eac:	ldrh	w3, [x0, #44]
   10eb0:	b	10e78 <gelf_update_verdaux@@ELFUTILS_1.0+0x9c>
   10eb4:	ldr	w0, [x2, #32]
   10eb8:	cmp	w0, #0x1
   10ebc:	b.eq	10ee0 <gelf_update_verdaux@@ELFUTILS_1.0+0x104>  // b.none
   10ec0:	ldr	w0, [x2, #200]
   10ec4:	cbz	w0, 10f04 <gelf_update_verdaux@@ELFUTILS_1.0+0x128>
   10ec8:	ldr	x0, [x2, #360]
   10ecc:	cbz	x0, 10f10 <gelf_update_verdaux@@ELFUTILS_1.0+0x134>
   10ed0:	ldr	w0, [x0, #44]
   10ed4:	str	x0, [x1]
   10ed8:	mov	w0, #0x0                   	// #0
   10edc:	ret
   10ee0:	ldr	w0, [x2, #200]
   10ee4:	cbz	w0, 10f00 <gelf_update_verdaux@@ELFUTILS_1.0+0x124>
   10ee8:	ldr	x0, [x2, #360]
   10eec:	cbz	x0, 10f08 <gelf_update_verdaux@@ELFUTILS_1.0+0x12c>
   10ef0:	ldr	w0, [x0, #28]
   10ef4:	str	x0, [x1]
   10ef8:	mov	w0, #0x0                   	// #0
   10efc:	ret
   10f00:	ret
   10f04:	ret
   10f08:	mov	w0, #0x0                   	// #0
   10f0c:	ret
   10f10:	mov	w0, #0x0                   	// #0
   10f14:	ret
   10f18:	stp	x29, x30, [sp, #-32]!
   10f1c:	mov	x29, sp
   10f20:	stp	x19, x20, [sp, #16]
   10f24:	mov	x19, x0
   10f28:	mov	x20, x1
   10f2c:	bl	10e5c <gelf_update_verdaux@@ELFUTILS_1.0+0x80>
   10f30:	ldr	x2, [x19, #88]
   10f34:	cbz	x2, 10f44 <gelf_update_verdaux@@ELFUTILS_1.0+0x168>
   10f38:	ldp	x19, x20, [sp, #16]
   10f3c:	ldp	x29, x30, [sp], #32
   10f40:	ret
   10f44:	ldr	w2, [x19, #32]
   10f48:	cmp	w2, #0x1
   10f4c:	b.eq	10fa0 <gelf_update_verdaux@@ELFUTILS_1.0+0x1c4>  // b.none
   10f50:	ldr	x1, [x19, #72]
   10f54:	ldr	x4, [x1, #32]
   10f58:	cbz	x4, 10fac <gelf_update_verdaux@@ELFUTILS_1.0+0x1d0>
   10f5c:	ldr	x1, [x19, #48]
   10f60:	cmp	x1, x4
   10f64:	b.ls	10fb4 <gelf_update_verdaux@@ELFUTILS_1.0+0x1d8>  // b.plast
   10f68:	cmp	w2, #0x1
   10f6c:	mov	x2, #0x20                  	// #32
   10f70:	mov	x3, #0x38                  	// #56
   10f74:	csel	x2, x2, x3, eq  // eq = none
   10f78:	ldr	x3, [x20]
   10f7c:	umulh	x5, x3, x2
   10f80:	cbnz	x5, 10fc4 <gelf_update_verdaux@@ELFUTILS_1.0+0x1e8>
   10f84:	sub	x1, x1, x4
   10f88:	mul	x3, x3, x2
   10f8c:	cmp	x1, x3
   10f90:	b.cs	10f38 <gelf_update_verdaux@@ELFUTILS_1.0+0x15c>  // b.hs, b.nlast
   10f94:	udiv	x1, x1, x2
   10f98:	str	x1, [x20]
   10f9c:	b	10f38 <gelf_update_verdaux@@ELFUTILS_1.0+0x15c>
   10fa0:	ldr	x1, [x19, #72]
   10fa4:	ldr	w4, [x1, #28]
   10fa8:	b	10f58 <gelf_update_verdaux@@ELFUTILS_1.0+0x17c>
   10fac:	str	xzr, [x20]
   10fb0:	b	10f38 <gelf_update_verdaux@@ELFUTILS_1.0+0x15c>
   10fb4:	mov	w0, #0x21                  	// #33
   10fb8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10fbc:	mov	w0, #0xffffffff            	// #-1
   10fc0:	b	10f38 <gelf_update_verdaux@@ELFUTILS_1.0+0x15c>
   10fc4:	mov	w0, #0x21                  	// #33
   10fc8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   10fcc:	mov	w0, #0xffffffff            	// #-1
   10fd0:	b	10f38 <gelf_update_verdaux@@ELFUTILS_1.0+0x15c>

0000000000010fd4 <elf_getphdrnum@@ELFUTILS_1.6>:
   10fd4:	cbz	x0, 11008 <elf_getphdrnum@@ELFUTILS_1.6+0x34>
   10fd8:	stp	x29, x30, [sp, #-16]!
   10fdc:	mov	x29, sp
   10fe0:	ldr	w2, [x0, #24]
   10fe4:	cmp	w2, #0x3
   10fe8:	b.ne	10ff8 <elf_getphdrnum@@ELFUTILS_1.6+0x24>  // b.any
   10fec:	bl	10f18 <gelf_update_verdaux@@ELFUTILS_1.0+0x13c>
   10ff0:	ldp	x29, x30, [sp], #16
   10ff4:	ret
   10ff8:	mov	w0, #0x4                   	// #4
   10ffc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11000:	mov	w0, #0xffffffff            	// #-1
   11004:	b	10ff0 <elf_getphdrnum@@ELFUTILS_1.6+0x1c>
   11008:	mov	w0, #0xffffffff            	// #-1
   1100c:	ret
   11010:	cbz	x0, 11088 <elf_getphdrnum@@ELFUTILS_1.6+0xb4>
   11014:	mov	x2, x0
   11018:	ldr	w0, [x0, #24]
   1101c:	cmp	w0, #0x3
   11020:	b.ne	11064 <elf_getphdrnum@@ELFUTILS_1.6+0x90>  // b.any
   11024:	ldr	x3, [x2, #96]
   11028:	ldr	w0, [x3]
   1102c:	cbnz	w0, 1103c <elf_getphdrnum@@ELFUTILS_1.6+0x68>
   11030:	add	x2, x2, #0xc8
   11034:	cmp	x3, x2
   11038:	b.eq	11080 <elf_getphdrnum@@ELFUTILS_1.6+0xac>  // b.none
   1103c:	sub	w0, w0, #0x1
   11040:	sxtw	x2, w0
   11044:	add	x0, x2, w0, sxtw #1
   11048:	add	x0, x2, x0, lsl #2
   1104c:	add	x0, x3, x0, lsl #4
   11050:	ldr	x0, [x0, #144]
   11054:	add	x0, x0, #0x1
   11058:	str	x0, [x1]
   1105c:	mov	w0, #0x0                   	// #0
   11060:	ret
   11064:	stp	x29, x30, [sp, #-16]!
   11068:	mov	x29, sp
   1106c:	mov	w0, #0x4                   	// #4
   11070:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11074:	mov	w0, #0xffffffff            	// #-1
   11078:	ldp	x29, x30, [sp], #16
   1107c:	ret
   11080:	str	xzr, [x1]
   11084:	ret
   11088:	mov	w0, #0xffffffff            	// #-1
   1108c:	ret

0000000000011090 <elf_getshdrnum@@ELFUTILS_1.5>:
   11090:	cbz	x0, 110a8 <elf_getshdrnum@@ELFUTILS_1.5+0x18>
   11094:	stp	x29, x30, [sp, #-16]!
   11098:	mov	x29, sp
   1109c:	bl	11010 <elf_getphdrnum@@ELFUTILS_1.6+0x3c>
   110a0:	ldp	x29, x30, [sp], #16
   110a4:	ret
   110a8:	mov	w0, #0xffffffff            	// #-1
   110ac:	ret

00000000000110b0 <elf_getshdrstrndx@@ELFUTILS_1.5>:
   110b0:	cbz	x0, 113e8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x338>
   110b4:	stp	x29, x30, [sp, #-144]!
   110b8:	mov	x29, sp
   110bc:	stp	x19, x20, [sp, #16]
   110c0:	mov	x19, x0
   110c4:	mov	x20, x1
   110c8:	ldr	w0, [x0, #24]
   110cc:	cmp	w0, #0x3
   110d0:	b.ne	11110 <elf_getshdrstrndx@@ELFUTILS_1.5+0x60>  // b.any
   110d4:	ldr	x2, [x19, #72]
   110d8:	cbz	x2, 11120 <elf_getshdrstrndx@@ELFUTILS_1.5+0x70>
   110dc:	ldr	w0, [x19, #32]
   110e0:	cmp	w0, #0x1
   110e4:	b.eq	11130 <elf_getshdrstrndx@@ELFUTILS_1.5+0x80>  // b.none
   110e8:	ldrh	w0, [x2, #62]
   110ec:	mov	w1, #0xffff                	// #65535
   110f0:	cmp	w0, w1
   110f4:	b.eq	11298 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1e8>  // b.none
   110f8:	mov	w0, w0
   110fc:	str	x0, [x20]
   11100:	mov	w0, #0x0                   	// #0
   11104:	ldp	x19, x20, [sp, #16]
   11108:	ldp	x29, x30, [sp], #144
   1110c:	ret
   11110:	mov	w0, #0x4                   	// #4
   11114:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11118:	mov	w0, #0xffffffff            	// #-1
   1111c:	b	11104 <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   11120:	mov	w0, #0x1a                  	// #26
   11124:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11128:	mov	w0, #0xffffffff            	// #-1
   1112c:	b	11104 <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   11130:	ldrh	w0, [x2, #50]
   11134:	mov	w1, #0xffff                	// #65535
   11138:	cmp	w0, w1
   1113c:	b.ne	110f8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>  // b.any
   11140:	ldr	w0, [x19, #200]
   11144:	cbz	w0, 11158 <elf_getshdrstrndx@@ELFUTILS_1.5+0xa8>
   11148:	ldr	x0, [x19, #360]
   1114c:	cbz	x0, 11168 <elf_getshdrstrndx@@ELFUTILS_1.5+0xb8>
   11150:	ldr	w0, [x0, #24]
   11154:	b	110f8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   11158:	mov	w0, #0x20                  	// #32
   1115c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11160:	mov	w0, #0xffffffff            	// #-1
   11164:	b	11104 <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   11168:	stp	x23, x24, [sp, #48]
   1116c:	ldr	w23, [x2, #32]
   11170:	ldr	x0, [x19]
   11174:	cbz	x0, 11184 <elf_getshdrstrndx@@ELFUTILS_1.5+0xd4>
   11178:	ldrb	w1, [x2, #5]
   1117c:	cmp	w1, #0x1
   11180:	b.eq	111a4 <elf_getshdrstrndx@@ELFUTILS_1.5+0xf4>  // b.none
   11184:	stp	x21, x22, [sp, #32]
   11188:	stp	x25, x26, [sp, #64]
   1118c:	ldr	w26, [x19, #36]
   11190:	mov	w23, w23
   11194:	mov	x22, #0x0                   	// #0
   11198:	mov	x25, #0x28                  	// #40
   1119c:	add	x24, sp, #0x50
   111a0:	b	11200 <elf_getshdrstrndx@@ELFUTILS_1.5+0x150>
   111a4:	mov	w2, w23
   111a8:	ldr	x1, [x19, #40]
   111ac:	add	x1, x2, x1
   111b0:	add	x0, x0, x1
   111b4:	tst	x0, #0x3
   111b8:	b.ne	11184 <elf_getshdrstrndx@@ELFUTILS_1.5+0xd4>  // b.any
   111bc:	ldr	x1, [x19, #48]
   111c0:	sub	x2, x1, x2
   111c4:	cmp	x2, #0x27
   111c8:	b.ls	111d8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x128>  // b.plast
   111cc:	ldr	w0, [x0, #24]
   111d0:	ldp	x23, x24, [sp, #48]
   111d4:	b	110f8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   111d8:	mov	w0, #0x20                  	// #32
   111dc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   111e0:	mov	w0, #0xffffffff            	// #-1
   111e4:	ldp	x23, x24, [sp, #48]
   111e8:	b	11104 <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   111ec:	cmp	x0, #0x0
   111f0:	b.le	11230 <elf_getshdrstrndx@@ELFUTILS_1.5+0x180>
   111f4:	add	x22, x22, x0
   111f8:	cmp	x22, #0x27
   111fc:	b.hi	11234 <elf_getshdrstrndx@@ELFUTILS_1.5+0x184>  // b.pmore
   11200:	add	x3, x23, x22
   11204:	sub	x2, x25, x22
   11208:	add	x1, x24, x22
   1120c:	mov	w0, w26
   11210:	bl	32a0 <pread@plt>
   11214:	mov	x21, x0
   11218:	cmn	x0, #0x1
   1121c:	b.ne	111ec <elf_getshdrstrndx@@ELFUTILS_1.5+0x13c>  // b.any
   11220:	bl	3390 <__errno_location@plt>
   11224:	ldr	w0, [x0]
   11228:	cmp	w0, #0x4
   1122c:	b.eq	11200 <elf_getshdrstrndx@@ELFUTILS_1.5+0x150>  // b.none
   11230:	tbnz	x21, #63, 1128c <elf_getshdrstrndx@@ELFUTILS_1.5+0x1dc>
   11234:	cmp	x22, #0x28
   11238:	b.ne	1126c <elf_getshdrstrndx@@ELFUTILS_1.5+0x1bc>  // b.any
   1123c:	ldr	x0, [x19, #72]
   11240:	ldrb	w0, [x0, #5]
   11244:	cmp	w0, #0x1
   11248:	b.eq	11258 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1a8>  // b.none
   1124c:	ldr	w0, [sp, #104]
   11250:	rev	w0, w0
   11254:	str	w0, [sp, #104]
   11258:	ldr	w0, [sp, #104]
   1125c:	ldp	x21, x22, [sp, #32]
   11260:	ldp	x23, x24, [sp, #48]
   11264:	ldp	x25, x26, [sp, #64]
   11268:	b	110f8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   1126c:	tbnz	x22, #63, 1128c <elf_getshdrstrndx@@ELFUTILS_1.5+0x1dc>
   11270:	mov	w0, #0xa                   	// #10
   11274:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11278:	mov	w0, #0xffffffff            	// #-1
   1127c:	ldp	x21, x22, [sp, #32]
   11280:	ldp	x23, x24, [sp, #48]
   11284:	ldp	x25, x26, [sp, #64]
   11288:	b	11104 <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   1128c:	mov	w0, #0x9                   	// #9
   11290:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11294:	b	11278 <elf_getshdrstrndx@@ELFUTILS_1.5+0x1c8>
   11298:	ldr	w0, [x19, #200]
   1129c:	cbz	w0, 112b0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x200>
   112a0:	ldr	x0, [x19, #360]
   112a4:	cbz	x0, 112c0 <elf_getshdrstrndx@@ELFUTILS_1.5+0x210>
   112a8:	ldr	w0, [x0, #40]
   112ac:	b	110f8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   112b0:	mov	w0, #0x20                  	// #32
   112b4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   112b8:	mov	w0, #0xffffffff            	// #-1
   112bc:	b	11104 <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   112c0:	stp	x23, x24, [sp, #48]
   112c4:	ldr	x23, [x2, #40]
   112c8:	ldr	x0, [x19]
   112cc:	cbz	x0, 112dc <elf_getshdrstrndx@@ELFUTILS_1.5+0x22c>
   112d0:	ldrb	w1, [x2, #5]
   112d4:	cmp	w1, #0x1
   112d8:	b.eq	112f8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x248>  // b.none
   112dc:	stp	x21, x22, [sp, #32]
   112e0:	stp	x25, x26, [sp, #64]
   112e4:	ldr	w26, [x19, #36]
   112e8:	mov	x22, #0x0                   	// #0
   112ec:	mov	x25, #0x40                  	// #64
   112f0:	add	x24, sp, #0x50
   112f4:	b	11350 <elf_getshdrstrndx@@ELFUTILS_1.5+0x2a0>
   112f8:	ldr	x1, [x19, #40]
   112fc:	add	x1, x23, x1
   11300:	add	x0, x0, x1
   11304:	tst	x0, #0x7
   11308:	b.ne	112dc <elf_getshdrstrndx@@ELFUTILS_1.5+0x22c>  // b.any
   1130c:	ldr	x1, [x19, #48]
   11310:	sub	x23, x1, x23
   11314:	cmp	x23, #0x3f
   11318:	b.ls	11328 <elf_getshdrstrndx@@ELFUTILS_1.5+0x278>  // b.plast
   1131c:	ldr	w0, [x0, #40]
   11320:	ldp	x23, x24, [sp, #48]
   11324:	b	110f8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   11328:	mov	w0, #0x20                  	// #32
   1132c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11330:	mov	w0, #0xffffffff            	// #-1
   11334:	ldp	x23, x24, [sp, #48]
   11338:	b	11104 <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   1133c:	cmp	x0, #0x0
   11340:	b.le	11380 <elf_getshdrstrndx@@ELFUTILS_1.5+0x2d0>
   11344:	add	x22, x22, x0
   11348:	cmp	x22, #0x3f
   1134c:	b.hi	11384 <elf_getshdrstrndx@@ELFUTILS_1.5+0x2d4>  // b.pmore
   11350:	add	x3, x23, x22
   11354:	sub	x2, x25, x22
   11358:	add	x1, x24, x22
   1135c:	mov	w0, w26
   11360:	bl	32a0 <pread@plt>
   11364:	mov	x21, x0
   11368:	cmn	x0, #0x1
   1136c:	b.ne	1133c <elf_getshdrstrndx@@ELFUTILS_1.5+0x28c>  // b.any
   11370:	bl	3390 <__errno_location@plt>
   11374:	ldr	w0, [x0]
   11378:	cmp	w0, #0x4
   1137c:	b.eq	11350 <elf_getshdrstrndx@@ELFUTILS_1.5+0x2a0>  // b.none
   11380:	tbnz	x21, #63, 113dc <elf_getshdrstrndx@@ELFUTILS_1.5+0x32c>
   11384:	cmp	x22, #0x40
   11388:	b.ne	113bc <elf_getshdrstrndx@@ELFUTILS_1.5+0x30c>  // b.any
   1138c:	ldr	x0, [x19, #72]
   11390:	ldrb	w0, [x0, #5]
   11394:	cmp	w0, #0x1
   11398:	b.eq	113a8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x2f8>  // b.none
   1139c:	ldr	w0, [sp, #120]
   113a0:	rev	w0, w0
   113a4:	str	w0, [sp, #120]
   113a8:	ldr	w0, [sp, #120]
   113ac:	ldp	x21, x22, [sp, #32]
   113b0:	ldp	x23, x24, [sp, #48]
   113b4:	ldp	x25, x26, [sp, #64]
   113b8:	b	110f8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x48>
   113bc:	tbnz	x22, #63, 113dc <elf_getshdrstrndx@@ELFUTILS_1.5+0x32c>
   113c0:	mov	w0, #0xa                   	// #10
   113c4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   113c8:	mov	w0, #0xffffffff            	// #-1
   113cc:	ldp	x21, x22, [sp, #32]
   113d0:	ldp	x23, x24, [sp, #48]
   113d4:	ldp	x25, x26, [sp, #64]
   113d8:	b	11104 <elf_getshdrstrndx@@ELFUTILS_1.5+0x54>
   113dc:	mov	w0, #0x9                   	// #9
   113e0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   113e4:	b	113c8 <elf_getshdrstrndx@@ELFUTILS_1.5+0x318>
   113e8:	mov	w0, #0xffffffff            	// #-1
   113ec:	ret

00000000000113f0 <gelf_checksum@@ELFUTILS_1.0>:
   113f0:	cbz	x0, 1141c <gelf_checksum@@ELFUTILS_1.0+0x2c>
   113f4:	stp	x29, x30, [sp, #-16]!
   113f8:	mov	x29, sp
   113fc:	ldr	w1, [x0, #32]
   11400:	cmp	w1, #0x1
   11404:	b.eq	11414 <gelf_checksum@@ELFUTILS_1.0+0x24>  // b.none
   11408:	bl	11600 <elf64_checksum@@ELFUTILS_1.0>
   1140c:	ldp	x29, x30, [sp], #16
   11410:	ret
   11414:	bl	11424 <elf32_checksum@@ELFUTILS_1.0>
   11418:	b	1140c <gelf_checksum@@ELFUTILS_1.0+0x1c>
   1141c:	mov	x0, #0xffffffffffffffff    	// #-1
   11420:	ret

0000000000011424 <elf32_checksum@@ELFUTILS_1.0>:
   11424:	stp	x29, x30, [sp, #-176]!
   11428:	mov	x29, sp
   1142c:	stp	x19, x20, [sp, #16]
   11430:	cbz	x0, 115f8 <elf32_checksum@@ELFUTILS_1.0+0x1d4>
   11434:	stp	x23, x24, [sp, #48]
   11438:	mov	x23, x0
   1143c:	add	x1, sp, #0xa8
   11440:	bl	110b0 <elf_getshdrstrndx@@ELFUTILS_1.5>
   11444:	tbnz	w0, #31, 11478 <elf32_checksum@@ELFUTILS_1.0+0x54>
   11448:	stp	x21, x22, [sp, #32]
   1144c:	stp	x25, x26, [sp, #64]
   11450:	str	x27, [sp, #80]
   11454:	ldr	x25, [x23, #72]
   11458:	ldrb	w22, [x25, #5]
   1145c:	mov	x20, #0x0                   	// #0
   11460:	mov	x21, #0x0                   	// #0
   11464:	add	x24, sp, #0x68
   11468:	adrp	x26, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   1146c:	add	x26, x26, #0xef8
   11470:	mov	x27, #0xd                   	// #13
   11474:	b	114c4 <elf32_checksum@@ELFUTILS_1.0+0xa0>
   11478:	mov	w0, #0x4                   	// #4
   1147c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11480:	mov	x20, #0xffffffffffffffff    	// #-1
   11484:	ldp	x23, x24, [sp, #48]
   11488:	b	114a8 <elf32_checksum@@ELFUTILS_1.0+0x84>
   1148c:	mov	w0, #0x20                  	// #32
   11490:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11494:	mov	x20, #0xffffffffffffffff    	// #-1
   11498:	ldp	x21, x22, [sp, #32]
   1149c:	ldp	x23, x24, [sp, #48]
   114a0:	ldp	x25, x26, [sp, #64]
   114a4:	ldr	x27, [sp, #80]
   114a8:	mov	x0, x20
   114ac:	ldp	x19, x20, [sp, #16]
   114b0:	ldp	x29, x30, [sp], #176
   114b4:	ret
   114b8:	ldr	w0, [x19, #4]
   114bc:	cmp	w0, #0x8
   114c0:	b.ne	11540 <elf32_checksum@@ELFUTILS_1.0+0x11c>  // b.any
   114c4:	mov	x1, x21
   114c8:	mov	x0, x23
   114cc:	bl	929c <elf_nextscn@@ELFUTILS_1.0>
   114d0:	mov	x21, x0
   114d4:	cbz	x0, 115e4 <elf32_checksum@@ELFUTILS_1.0+0x1c0>
   114d8:	mov	x1, x24
   114dc:	mov	x0, x21
   114e0:	bl	a090 <gelf_getshdr@@ELFUTILS_1.0>
   114e4:	mov	x19, x0
   114e8:	cbz	x0, 1148c <elf32_checksum@@ELFUTILS_1.0+0x68>
   114ec:	ldr	x0, [x0, #8]
   114f0:	tbnz	w0, #1, 114b8 <elf32_checksum@@ELFUTILS_1.0+0x94>
   114f4:	ldr	w0, [x19, #4]
   114f8:	cmp	w0, #0x7
   114fc:	b.eq	11540 <elf32_checksum@@ELFUTILS_1.0+0x11c>  // b.none
   11500:	cmp	w0, #0x1
   11504:	b.ne	114c4 <elf32_checksum@@ELFUTILS_1.0+0xa0>  // b.any
   11508:	ldr	w2, [x19]
   1150c:	ldr	x1, [sp, #168]
   11510:	mov	x0, x23
   11514:	bl	a34c <elf_strptr@@ELFUTILS_1.0>
   11518:	cbz	x0, 114b8 <elf32_checksum@@ELFUTILS_1.0+0x94>
   1151c:	ldr	w2, [x19]
   11520:	ldr	x1, [sp, #168]
   11524:	mov	x0, x23
   11528:	bl	a34c <elf_strptr@@ELFUTILS_1.0>
   1152c:	mov	x2, x27
   11530:	mov	x1, x26
   11534:	bl	3130 <strncmp@plt>
   11538:	cbz	w0, 114b8 <elf32_checksum@@ELFUTILS_1.0+0x94>
   1153c:	b	114c4 <elf32_checksum@@ELFUTILS_1.0+0xa0>
   11540:	mov	x1, #0x0                   	// #0
   11544:	mov	x0, x21
   11548:	bl	a6e8 <elf_rawdata@@ELFUTILS_1.0>
   1154c:	mov	x19, x0
   11550:	cbz	x0, 11580 <elf32_checksum@@ELFUTILS_1.0+0x15c>
   11554:	ldr	x2, [x0, #16]
   11558:	ldr	x1, [x0]
   1155c:	mov	w0, w20
   11560:	bl	117dc <elf64_checksum@@ELFUTILS_1.0+0x1dc>
   11564:	mov	w20, w0
   11568:	b	11580 <elf32_checksum@@ELFUTILS_1.0+0x15c>
   1156c:	ldr	x2, [x19, #16]
   11570:	ldr	x1, [x19]
   11574:	mov	w0, w20
   11578:	bl	117dc <elf64_checksum@@ELFUTILS_1.0+0x1dc>
   1157c:	mov	w20, w0
   11580:	mov	x1, x19
   11584:	mov	x0, x21
   11588:	bl	af30 <elf_getdata@@ELFUTILS_1.0>
   1158c:	mov	x19, x0
   11590:	cbz	x0, 114c4 <elf32_checksum@@ELFUTILS_1.0+0xa0>
   11594:	cmp	w22, #0x1
   11598:	b.eq	1156c <elf32_checksum@@ELFUTILS_1.0+0x148>  // b.none
   1159c:	ldr	w0, [x19, #8]
   115a0:	cbz	w0, 1156c <elf32_checksum@@ELFUTILS_1.0+0x148>
   115a4:	ldrb	w2, [x25, #5]
   115a8:	mov	x1, x19
   115ac:	mov	x0, x19
   115b0:	bl	5710 <elf32_xlatetof@@ELFUTILS_1.0>
   115b4:	cbz	x0, 11494 <elf32_checksum@@ELFUTILS_1.0+0x70>
   115b8:	ldr	x2, [x19, #16]
   115bc:	ldr	x1, [x19]
   115c0:	mov	w0, w20
   115c4:	bl	117dc <elf64_checksum@@ELFUTILS_1.0+0x1dc>
   115c8:	mov	w20, w0
   115cc:	ldrb	w2, [x25, #5]
   115d0:	mov	x1, x19
   115d4:	mov	x0, x19
   115d8:	bl	57ec <elf32_xlatetom@@ELFUTILS_1.0>
   115dc:	cbnz	x0, 11580 <elf32_checksum@@ELFUTILS_1.0+0x15c>
   115e0:	b	11494 <elf32_checksum@@ELFUTILS_1.0+0x70>
   115e4:	ldp	x21, x22, [sp, #32]
   115e8:	ldp	x23, x24, [sp, #48]
   115ec:	ldp	x25, x26, [sp, #64]
   115f0:	ldr	x27, [sp, #80]
   115f4:	b	114a8 <elf32_checksum@@ELFUTILS_1.0+0x84>
   115f8:	mov	x20, #0xffffffffffffffff    	// #-1
   115fc:	b	114a8 <elf32_checksum@@ELFUTILS_1.0+0x84>

0000000000011600 <elf64_checksum@@ELFUTILS_1.0>:
   11600:	stp	x29, x30, [sp, #-176]!
   11604:	mov	x29, sp
   11608:	stp	x19, x20, [sp, #16]
   1160c:	cbz	x0, 117d4 <elf64_checksum@@ELFUTILS_1.0+0x1d4>
   11610:	stp	x23, x24, [sp, #48]
   11614:	mov	x23, x0
   11618:	add	x1, sp, #0xa8
   1161c:	bl	110b0 <elf_getshdrstrndx@@ELFUTILS_1.5>
   11620:	tbnz	w0, #31, 11654 <elf64_checksum@@ELFUTILS_1.0+0x54>
   11624:	stp	x21, x22, [sp, #32]
   11628:	stp	x25, x26, [sp, #64]
   1162c:	str	x27, [sp, #80]
   11630:	ldr	x25, [x23, #72]
   11634:	ldrb	w22, [x25, #5]
   11638:	mov	x20, #0x0                   	// #0
   1163c:	mov	x21, #0x0                   	// #0
   11640:	add	x24, sp, #0x68
   11644:	adrp	x26, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   11648:	add	x26, x26, #0xef8
   1164c:	mov	x27, #0xd                   	// #13
   11650:	b	116a0 <elf64_checksum@@ELFUTILS_1.0+0xa0>
   11654:	mov	w0, #0x4                   	// #4
   11658:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   1165c:	mov	x20, #0xffffffffffffffff    	// #-1
   11660:	ldp	x23, x24, [sp, #48]
   11664:	b	11684 <elf64_checksum@@ELFUTILS_1.0+0x84>
   11668:	mov	w0, #0x20                  	// #32
   1166c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11670:	mov	x20, #0xffffffffffffffff    	// #-1
   11674:	ldp	x21, x22, [sp, #32]
   11678:	ldp	x23, x24, [sp, #48]
   1167c:	ldp	x25, x26, [sp, #64]
   11680:	ldr	x27, [sp, #80]
   11684:	mov	x0, x20
   11688:	ldp	x19, x20, [sp, #16]
   1168c:	ldp	x29, x30, [sp], #176
   11690:	ret
   11694:	ldr	w0, [x19, #4]
   11698:	cmp	w0, #0x8
   1169c:	b.ne	1171c <elf64_checksum@@ELFUTILS_1.0+0x11c>  // b.any
   116a0:	mov	x1, x21
   116a4:	mov	x0, x23
   116a8:	bl	929c <elf_nextscn@@ELFUTILS_1.0>
   116ac:	mov	x21, x0
   116b0:	cbz	x0, 117c0 <elf64_checksum@@ELFUTILS_1.0+0x1c0>
   116b4:	mov	x1, x24
   116b8:	mov	x0, x21
   116bc:	bl	a090 <gelf_getshdr@@ELFUTILS_1.0>
   116c0:	mov	x19, x0
   116c4:	cbz	x0, 11668 <elf64_checksum@@ELFUTILS_1.0+0x68>
   116c8:	ldr	x0, [x0, #8]
   116cc:	tbnz	w0, #1, 11694 <elf64_checksum@@ELFUTILS_1.0+0x94>
   116d0:	ldr	w0, [x19, #4]
   116d4:	cmp	w0, #0x7
   116d8:	b.eq	1171c <elf64_checksum@@ELFUTILS_1.0+0x11c>  // b.none
   116dc:	cmp	w0, #0x1
   116e0:	b.ne	116a0 <elf64_checksum@@ELFUTILS_1.0+0xa0>  // b.any
   116e4:	ldr	w2, [x19]
   116e8:	ldr	x1, [sp, #168]
   116ec:	mov	x0, x23
   116f0:	bl	a34c <elf_strptr@@ELFUTILS_1.0>
   116f4:	cbz	x0, 11694 <elf64_checksum@@ELFUTILS_1.0+0x94>
   116f8:	ldr	w2, [x19]
   116fc:	ldr	x1, [sp, #168]
   11700:	mov	x0, x23
   11704:	bl	a34c <elf_strptr@@ELFUTILS_1.0>
   11708:	mov	x2, x27
   1170c:	mov	x1, x26
   11710:	bl	3130 <strncmp@plt>
   11714:	cbz	w0, 11694 <elf64_checksum@@ELFUTILS_1.0+0x94>
   11718:	b	116a0 <elf64_checksum@@ELFUTILS_1.0+0xa0>
   1171c:	mov	x1, #0x0                   	// #0
   11720:	mov	x0, x21
   11724:	bl	a6e8 <elf_rawdata@@ELFUTILS_1.0>
   11728:	mov	x19, x0
   1172c:	cbz	x0, 1175c <elf64_checksum@@ELFUTILS_1.0+0x15c>
   11730:	ldr	x2, [x0, #16]
   11734:	ldr	x1, [x0]
   11738:	mov	w0, w20
   1173c:	bl	117dc <elf64_checksum@@ELFUTILS_1.0+0x1dc>
   11740:	mov	w20, w0
   11744:	b	1175c <elf64_checksum@@ELFUTILS_1.0+0x15c>
   11748:	ldr	x2, [x19, #16]
   1174c:	ldr	x1, [x19]
   11750:	mov	w0, w20
   11754:	bl	117dc <elf64_checksum@@ELFUTILS_1.0+0x1dc>
   11758:	mov	w20, w0
   1175c:	mov	x1, x19
   11760:	mov	x0, x21
   11764:	bl	af30 <elf_getdata@@ELFUTILS_1.0>
   11768:	mov	x19, x0
   1176c:	cbz	x0, 116a0 <elf64_checksum@@ELFUTILS_1.0+0xa0>
   11770:	cmp	w22, #0x1
   11774:	b.eq	11748 <elf64_checksum@@ELFUTILS_1.0+0x148>  // b.none
   11778:	ldr	w0, [x19, #8]
   1177c:	cbz	w0, 11748 <elf64_checksum@@ELFUTILS_1.0+0x148>
   11780:	ldrb	w2, [x25, #5]
   11784:	mov	x1, x19
   11788:	mov	x0, x19
   1178c:	bl	58d8 <elf64_xlatetof@@ELFUTILS_1.0>
   11790:	cbz	x0, 11670 <elf64_checksum@@ELFUTILS_1.0+0x70>
   11794:	ldr	x2, [x19, #16]
   11798:	ldr	x1, [x19]
   1179c:	mov	w0, w20
   117a0:	bl	117dc <elf64_checksum@@ELFUTILS_1.0+0x1dc>
   117a4:	mov	w20, w0
   117a8:	ldrb	w2, [x25, #5]
   117ac:	mov	x1, x19
   117b0:	mov	x0, x19
   117b4:	bl	59bc <elf64_xlatetom@@ELFUTILS_1.0>
   117b8:	cbnz	x0, 1175c <elf64_checksum@@ELFUTILS_1.0+0x15c>
   117bc:	b	11670 <elf64_checksum@@ELFUTILS_1.0+0x70>
   117c0:	ldp	x21, x22, [sp, #32]
   117c4:	ldp	x23, x24, [sp, #48]
   117c8:	ldp	x25, x26, [sp, #64]
   117cc:	ldr	x27, [sp, #80]
   117d0:	b	11684 <elf64_checksum@@ELFUTILS_1.0+0x84>
   117d4:	mov	x20, #0xffffffffffffffff    	// #-1
   117d8:	b	11684 <elf64_checksum@@ELFUTILS_1.0+0x84>
   117dc:	mvn	w0, w0
   117e0:	add	x2, x1, x2
   117e4:	cmp	x1, x2
   117e8:	b.cs	11810 <elf64_checksum@@ELFUTILS_1.0+0x210>  // b.hs, b.nlast
   117ec:	adrp	x4, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   117f0:	add	x4, x4, #0xf08
   117f4:	ldrb	w3, [x1], #1
   117f8:	eor	w3, w3, w0
   117fc:	and	x3, x3, #0xff
   11800:	ldr	w3, [x4, x3, lsl #2]
   11804:	eor	w0, w3, w0, lsr #8
   11808:	cmp	x2, x1
   1180c:	b.ne	117f4 <elf64_checksum@@ELFUTILS_1.0+0x1f4>  // b.any
   11810:	mvn	w0, w0
   11814:	ret
   11818:	orr	x0, x0, #0x1
   1181c:	mov	x6, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   11820:	movk	x6, #0xaaab
   11824:	mov	x5, #0x19                  	// #25
   11828:	b	11840 <elf64_checksum@@ELFUTILS_1.0+0x240>
   1182c:	mov	x1, #0x3                   	// #3
   11830:	udiv	x2, x0, x1
   11834:	msub	x1, x2, x1, x0
   11838:	cbnz	x1, 11898 <elf64_checksum@@ELFUTILS_1.0+0x298>
   1183c:	add	x0, x0, #0x2
   11840:	cmp	x0, #0x9
   11844:	b.ls	1182c <elf64_checksum@@ELFUTILS_1.0+0x22c>  // b.plast
   11848:	umulh	x1, x0, x6
   1184c:	and	x3, x1, #0xfffffffffffffffe
   11850:	add	x3, x3, x1, lsr #1
   11854:	mov	x4, #0x18                  	// #24
   11858:	mov	x2, x5
   1185c:	mov	x1, #0x3                   	// #3
   11860:	cmp	x0, x3
   11864:	b.eq	1183c <elf64_checksum@@ELFUTILS_1.0+0x23c>  // b.none
   11868:	add	x1, x1, #0x2
   1186c:	cmp	x0, x2
   11870:	b.ls	11830 <elf64_checksum@@ELFUTILS_1.0+0x230>  // b.plast
   11874:	udiv	x3, x0, x1
   11878:	msub	x3, x3, x1, x0
   1187c:	cbz	x3, 1183c <elf64_checksum@@ELFUTILS_1.0+0x23c>
   11880:	add	x3, x4, x2
   11884:	add	x4, x4, #0x8
   11888:	cmp	x3, x2
   1188c:	b.cc	11898 <elf64_checksum@@ELFUTILS_1.0+0x298>  // b.lo, b.ul, b.last
   11890:	mov	x2, x3
   11894:	b	11868 <elf64_checksum@@ELFUTILS_1.0+0x268>
   11898:	ret

000000000001189c <elf_clone@@ELFUTILS_1.0>:
   1189c:	stp	x29, x30, [sp, #-96]!
   118a0:	mov	x29, sp
   118a4:	stp	x19, x20, [sp, #16]
   118a8:	cmp	x0, #0x0
   118ac:	ccmp	w1, #0xc, #0x0, ne  // ne = any
   118b0:	mov	x19, #0x0                   	// #0
   118b4:	b.ne	11964 <elf_clone@@ELFUTILS_1.0+0xc8>  // b.any
   118b8:	stp	x21, x22, [sp, #32]
   118bc:	stp	x23, x24, [sp, #48]
   118c0:	stp	x25, x26, [sp, #64]
   118c4:	stp	x27, x28, [sp, #80]
   118c8:	mov	x20, x0
   118cc:	ldr	w26, [x0, #36]
   118d0:	ldr	x23, [x0]
   118d4:	ldr	x25, [x0, #40]
   118d8:	ldr	x24, [x0, #48]
   118dc:	ldr	w27, [x0, #28]
   118e0:	ldr	x22, [x0, #8]
   118e4:	ldr	w28, [x0, #24]
   118e8:	ldr	w21, [x0, #204]
   118ec:	mov	w0, w21
   118f0:	add	x1, x0, w21, uxtw #1
   118f4:	add	x1, x0, x1, lsl #2
   118f8:	lsl	x1, x1, #4
   118fc:	add	x1, x1, #0x108
   11900:	mov	x0, #0x1                   	// #1
   11904:	bl	3180 <calloc@plt>
   11908:	mov	x19, x0
   1190c:	cbz	x0, 11974 <elf_clone@@ELFUTILS_1.0+0xd8>
   11910:	str	w28, [x0, #24]
   11914:	mov	w0, #0x1                   	// #1
   11918:	str	w0, [x19, #60]
   1191c:	str	w27, [x19, #28]
   11920:	str	w26, [x19, #36]
   11924:	str	x25, [x19, #40]
   11928:	str	x24, [x19, #48]
   1192c:	str	x23, [x19]
   11930:	str	x22, [x19, #8]
   11934:	str	w0, [x19, #56]
   11938:	mov	w0, #0xa                   	// #10
   1193c:	str	w0, [x19, #112]
   11940:	add	x0, x19, #0xc8
   11944:	str	x0, [x19, #96]
   11948:	str	w21, [x19, #204]
   1194c:	ldr	w0, [x20, #32]
   11950:	str	w0, [x19, #32]
   11954:	ldp	x21, x22, [sp, #32]
   11958:	ldp	x23, x24, [sp, #48]
   1195c:	ldp	x25, x26, [sp, #64]
   11960:	ldp	x27, x28, [sp, #80]
   11964:	mov	x0, x19
   11968:	ldp	x19, x20, [sp, #16]
   1196c:	ldp	x29, x30, [sp], #96
   11970:	ret
   11974:	mov	w0, #0x8                   	// #8
   11978:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   1197c:	ldp	x21, x22, [sp, #32]
   11980:	ldp	x23, x24, [sp, #48]
   11984:	ldp	x25, x26, [sp, #64]
   11988:	ldp	x27, x28, [sp, #80]
   1198c:	b	11964 <elf_clone@@ELFUTILS_1.0+0xc8>

0000000000011990 <gelf_getlib@@ELFUTILS_1.1>:
   11990:	cbz	x0, 11a10 <gelf_getlib@@ELFUTILS_1.1+0x80>
   11994:	stp	x29, x30, [sp, #-16]!
   11998:	mov	x29, sp
   1199c:	ldr	w3, [x0, #8]
   119a0:	cmp	w3, #0x16
   119a4:	b.ne	119f0 <gelf_getlib@@ELFUTILS_1.1+0x60>  // b.any
   119a8:	ldr	x3, [x0, #16]
   119ac:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   119b0:	movk	x4, #0xcccd
   119b4:	umulh	x3, x3, x4
   119b8:	mov	w4, w1
   119bc:	cmp	x4, x3, lsr #4
   119c0:	b.cs	11a00 <gelf_getlib@@ELFUTILS_1.1+0x70>  // b.hs, b.nlast
   119c4:	ldr	x0, [x0]
   119c8:	sbfiz	x3, x1, #2, #32
   119cc:	add	x1, x3, w1, sxtw
   119d0:	add	x1, x0, x1, lsl #2
   119d4:	ldp	x4, x5, [x1]
   119d8:	stp	x4, x5, [x2]
   119dc:	ldr	w0, [x1, #16]
   119e0:	str	w0, [x2, #16]
   119e4:	mov	x0, x2
   119e8:	ldp	x29, x30, [sp], #16
   119ec:	ret
   119f0:	mov	w0, #0x4                   	// #4
   119f4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   119f8:	mov	x0, #0x0                   	// #0
   119fc:	b	119e8 <gelf_getlib@@ELFUTILS_1.1+0x58>
   11a00:	mov	w0, #0x16                  	// #22
   11a04:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11a08:	mov	x0, #0x0                   	// #0
   11a0c:	b	119e8 <gelf_getlib@@ELFUTILS_1.1+0x58>
   11a10:	ret

0000000000011a14 <gelf_update_lib@@ELFUTILS_1.1>:
   11a14:	cbz	x0, 11aa4 <gelf_update_lib@@ELFUTILS_1.1+0x90>
   11a18:	stp	x29, x30, [sp, #-16]!
   11a1c:	mov	x29, sp
   11a20:	ldr	w3, [x0, #8]
   11a24:	cmp	w3, #0x16
   11a28:	b.ne	11a84 <gelf_update_lib@@ELFUTILS_1.1+0x70>  // b.any
   11a2c:	ldr	x4, [x0, #40]
   11a30:	ldr	x3, [x0, #16]
   11a34:	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
   11a38:	movk	x5, #0xcccd
   11a3c:	umulh	x3, x3, x5
   11a40:	mov	w5, w1
   11a44:	cmp	x5, x3, lsr #4
   11a48:	b.cs	11a94 <gelf_update_lib@@ELFUTILS_1.1+0x80>  // b.hs, b.nlast
   11a4c:	ldr	x0, [x0]
   11a50:	sbfiz	x3, x1, #2, #32
   11a54:	add	x1, x3, w1, sxtw
   11a58:	add	x1, x0, x1, lsl #2
   11a5c:	ldp	x6, x7, [x2]
   11a60:	stp	x6, x7, [x1]
   11a64:	ldr	w0, [x2, #16]
   11a68:	str	w0, [x1, #16]
   11a6c:	ldr	w0, [x4, #156]
   11a70:	orr	w0, w0, #0x1
   11a74:	str	w0, [x4, #156]
   11a78:	mov	w0, #0x1                   	// #1
   11a7c:	ldp	x29, x30, [sp], #16
   11a80:	ret
   11a84:	mov	w0, #0x1f                  	// #31
   11a88:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11a8c:	mov	w0, #0x0                   	// #0
   11a90:	b	11a7c <gelf_update_lib@@ELFUTILS_1.1+0x68>
   11a94:	mov	w0, #0x16                  	// #22
   11a98:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11a9c:	mov	w0, #0x0                   	// #0
   11aa0:	b	11a7c <gelf_update_lib@@ELFUTILS_1.1+0x68>
   11aa4:	mov	w0, #0x0                   	// #0
   11aa8:	ret

0000000000011aac <elf32_offscn@@ELFUTILS_1.1.1>:
   11aac:	cbz	x0, 11b9c <elf32_offscn@@ELFUTILS_1.1.1+0xf0>
   11ab0:	stp	x29, x30, [sp, #-48]!
   11ab4:	mov	x29, sp
   11ab8:	stp	x19, x20, [sp, #16]
   11abc:	mov	w19, w1
   11ac0:	ldr	w1, [x0, #24]
   11ac4:	cmp	w1, #0x3
   11ac8:	b.ne	11aec <elf32_offscn@@ELFUTILS_1.1.1+0x40>  // b.any
   11acc:	add	x20, x0, #0xc8
   11ad0:	ldr	w1, [x0, #200]
   11ad4:	cbz	w1, 11ae0 <elf32_offscn@@ELFUTILS_1.1.1+0x34>
   11ad8:	ldr	x1, [x0, #360]
   11adc:	cbz	x1, 11afc <elf32_offscn@@ELFUTILS_1.1.1+0x50>
   11ae0:	str	x21, [sp, #32]
   11ae4:	mov	x21, #0x0                   	// #0
   11ae8:	b	11b54 <elf32_offscn@@ELFUTILS_1.1.1+0xa8>
   11aec:	mov	w0, #0x4                   	// #4
   11af0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11af4:	mov	x0, #0x0                   	// #0
   11af8:	b	11b90 <elf32_offscn@@ELFUTILS_1.1.1+0xe4>
   11afc:	add	x0, x0, #0xd8
   11b00:	bl	32e0 <elf32_getshdr@plt>
   11b04:	cbnz	x0, 11ae0 <elf32_offscn@@ELFUTILS_1.1.1+0x34>
   11b08:	b	11b90 <elf32_offscn@@ELFUTILS_1.1.1+0xe4>
   11b0c:	mov	x21, x2
   11b10:	add	x2, x2, #0xd0
   11b14:	cmp	x2, x5
   11b18:	b.eq	11b4c <elf32_offscn@@ELFUTILS_1.1.1+0xa0>  // b.none
   11b1c:	mov	x0, x2
   11b20:	ldr	x3, [x2, #144]
   11b24:	ldr	w4, [x3, #16]
   11b28:	cmp	w4, w19
   11b2c:	b.ne	11b10 <elf32_offscn@@ELFUTILS_1.1.1+0x64>  // b.any
   11b30:	ldr	w1, [x3, #20]
   11b34:	cbz	w1, 11b0c <elf32_offscn@@ELFUTILS_1.1.1+0x60>
   11b38:	ldr	w1, [x3, #4]
   11b3c:	cmp	w1, #0x8
   11b40:	b.ne	11b8c <elf32_offscn@@ELFUTILS_1.1.1+0xe0>  // b.any
   11b44:	mov	x21, x2
   11b48:	b	11b10 <elf32_offscn@@ELFUTILS_1.1.1+0x64>
   11b4c:	ldr	x20, [x20, #8]
   11b50:	cbz	x20, 11b78 <elf32_offscn@@ELFUTILS_1.1.1+0xcc>
   11b54:	ldr	w5, [x20]
   11b58:	cbz	w5, 11b4c <elf32_offscn@@ELFUTILS_1.1.1+0xa0>
   11b5c:	add	x2, x20, #0x10
   11b60:	sub	w0, w5, #0x1
   11b64:	add	x5, x0, x0, lsl #1
   11b68:	add	x5, x0, x5, lsl #2
   11b6c:	add	x0, x20, #0xe0
   11b70:	add	x5, x0, x5, lsl #4
   11b74:	b	11b1c <elf32_offscn@@ELFUTILS_1.1.1+0x70>
   11b78:	mov	w0, #0x2b                  	// #43
   11b7c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11b80:	mov	x0, x21
   11b84:	ldr	x21, [sp, #32]
   11b88:	b	11b90 <elf32_offscn@@ELFUTILS_1.1.1+0xe4>
   11b8c:	ldr	x21, [sp, #32]
   11b90:	ldp	x19, x20, [sp, #16]
   11b94:	ldp	x29, x30, [sp], #48
   11b98:	ret
   11b9c:	ret

0000000000011ba0 <elf64_offscn@@ELFUTILS_1.1.1>:
   11ba0:	cbz	x0, 11c90 <elf64_offscn@@ELFUTILS_1.1.1+0xf0>
   11ba4:	stp	x29, x30, [sp, #-48]!
   11ba8:	mov	x29, sp
   11bac:	stp	x19, x20, [sp, #16]
   11bb0:	mov	x19, x1
   11bb4:	ldr	w1, [x0, #24]
   11bb8:	cmp	w1, #0x3
   11bbc:	b.ne	11be0 <elf64_offscn@@ELFUTILS_1.1.1+0x40>  // b.any
   11bc0:	add	x20, x0, #0xc8
   11bc4:	ldr	w1, [x0, #200]
   11bc8:	cbz	w1, 11bd4 <elf64_offscn@@ELFUTILS_1.1.1+0x34>
   11bcc:	ldr	x1, [x0, #360]
   11bd0:	cbz	x1, 11bf0 <elf64_offscn@@ELFUTILS_1.1.1+0x50>
   11bd4:	str	x21, [sp, #32]
   11bd8:	mov	x21, #0x0                   	// #0
   11bdc:	b	11c48 <elf64_offscn@@ELFUTILS_1.1.1+0xa8>
   11be0:	mov	w0, #0x4                   	// #4
   11be4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11be8:	mov	x0, #0x0                   	// #0
   11bec:	b	11c84 <elf64_offscn@@ELFUTILS_1.1.1+0xe4>
   11bf0:	add	x0, x0, #0xd8
   11bf4:	bl	3150 <elf64_getshdr@plt>
   11bf8:	cbnz	x0, 11bd4 <elf64_offscn@@ELFUTILS_1.1.1+0x34>
   11bfc:	b	11c84 <elf64_offscn@@ELFUTILS_1.1.1+0xe4>
   11c00:	mov	x21, x2
   11c04:	add	x2, x2, #0xd0
   11c08:	cmp	x2, x5
   11c0c:	b.eq	11c40 <elf64_offscn@@ELFUTILS_1.1.1+0xa0>  // b.none
   11c10:	mov	x0, x2
   11c14:	ldr	x3, [x2, #144]
   11c18:	ldr	x4, [x3, #24]
   11c1c:	cmp	x4, x19
   11c20:	b.ne	11c04 <elf64_offscn@@ELFUTILS_1.1.1+0x64>  // b.any
   11c24:	ldr	x1, [x3, #32]
   11c28:	cbz	x1, 11c00 <elf64_offscn@@ELFUTILS_1.1.1+0x60>
   11c2c:	ldr	w1, [x3, #4]
   11c30:	cmp	w1, #0x8
   11c34:	b.ne	11c80 <elf64_offscn@@ELFUTILS_1.1.1+0xe0>  // b.any
   11c38:	mov	x21, x2
   11c3c:	b	11c04 <elf64_offscn@@ELFUTILS_1.1.1+0x64>
   11c40:	ldr	x20, [x20, #8]
   11c44:	cbz	x20, 11c6c <elf64_offscn@@ELFUTILS_1.1.1+0xcc>
   11c48:	ldr	w5, [x20]
   11c4c:	cbz	w5, 11c40 <elf64_offscn@@ELFUTILS_1.1.1+0xa0>
   11c50:	add	x2, x20, #0x10
   11c54:	sub	w0, w5, #0x1
   11c58:	add	x5, x0, x0, lsl #1
   11c5c:	add	x5, x0, x5, lsl #2
   11c60:	add	x0, x20, #0xe0
   11c64:	add	x5, x0, x5, lsl #4
   11c68:	b	11c10 <elf64_offscn@@ELFUTILS_1.1.1+0x70>
   11c6c:	mov	w0, #0x2b                  	// #43
   11c70:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11c74:	mov	x0, x21
   11c78:	ldr	x21, [sp, #32]
   11c7c:	b	11c84 <elf64_offscn@@ELFUTILS_1.1.1+0xe4>
   11c80:	ldr	x21, [sp, #32]
   11c84:	ldp	x19, x20, [sp, #16]
   11c88:	ldp	x29, x30, [sp], #48
   11c8c:	ret
   11c90:	ret

0000000000011c94 <gelf_offscn@@ELFUTILS_1.1.1>:
   11c94:	stp	x29, x30, [sp, #-16]!
   11c98:	mov	x29, sp
   11c9c:	ldr	w2, [x0, #32]
   11ca0:	cmp	w2, #0x1
   11ca4:	b.ne	11cc8 <gelf_offscn@@ELFUTILS_1.1.1+0x34>  // b.any
   11ca8:	tst	x1, #0xffffffff00000000
   11cac:	b.ne	11cb8 <gelf_offscn@@ELFUTILS_1.1.1+0x24>  // b.any
   11cb0:	bl	11aac <elf32_offscn@@ELFUTILS_1.1.1>
   11cb4:	b	11ccc <gelf_offscn@@ELFUTILS_1.1.1+0x38>
   11cb8:	mov	w0, #0x2b                  	// #43
   11cbc:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11cc0:	mov	x0, #0x0                   	// #0
   11cc4:	b	11ccc <gelf_offscn@@ELFUTILS_1.1.1+0x38>
   11cc8:	bl	11ba0 <elf64_offscn@@ELFUTILS_1.1.1>
   11ccc:	ldp	x29, x30, [sp], #16
   11cd0:	ret

0000000000011cd4 <elf_getaroff@@ELFUTILS_1.1.1>:
   11cd4:	cbz	x0, 11d28 <elf_getaroff@@ELFUTILS_1.1.1+0x54>
   11cd8:	ldr	x1, [x0, #8]
   11cdc:	cbz	x1, 11d30 <elf_getaroff@@ELFUTILS_1.1.1+0x5c>
   11ce0:	ldr	w2, [x1, #24]
   11ce4:	cmp	w2, #0x1
   11ce8:	b.ne	11d00 <elf_getaroff@@ELFUTILS_1.1.1+0x2c>  // b.any
   11cec:	ldr	x0, [x0, #40]
   11cf0:	sub	x0, x0, #0x3c
   11cf4:	ldr	x1, [x1, #40]
   11cf8:	sub	x0, x0, x1
   11cfc:	ret
   11d00:	stp	x29, x30, [sp, #-16]!
   11d04:	mov	x29, sp
   11d08:	adrp	x3, 14000 <elf_compress_gnu@@ELFUTILS_1.7+0x1660>
   11d0c:	add	x3, x3, #0x318
   11d10:	mov	w2, #0x32                  	// #50
   11d14:	adrp	x1, 14000 <elf_compress_gnu@@ELFUTILS_1.7+0x1660>
   11d18:	add	x1, x1, #0x308
   11d1c:	adrp	x0, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   11d20:	add	x0, x0, #0x4f8
   11d24:	bl	3380 <__assert_fail@plt>
   11d28:	mov	x0, #0x0                   	// #0
   11d2c:	ret
   11d30:	mov	x0, #0x0                   	// #0
   11d34:	ret

0000000000011d38 <elf_gnu_hash@@ELFUTILS_1.2>:
   11d38:	ldrb	w2, [x0]
   11d3c:	cbz	w2, 11d5c <elf_gnu_hash@@ELFUTILS_1.2+0x24>
   11d40:	mov	x1, #0x1505                	// #5381
   11d44:	add	x1, x1, x1, lsl #5
   11d48:	add	x1, x1, w2, uxtb
   11d4c:	ldrb	w2, [x0, #1]!
   11d50:	cbnz	w2, 11d44 <elf_gnu_hash@@ELFUTILS_1.2+0xc>
   11d54:	mov	w0, w1
   11d58:	ret
   11d5c:	mov	x1, #0x1505                	// #5381
   11d60:	b	11d54 <elf_gnu_hash@@ELFUTILS_1.2+0x1c>

0000000000011d64 <elf_scnshndx@@ELFUTILS_1.4>:
   11d64:	stp	x29, x30, [sp, #-96]!
   11d68:	mov	x29, sp
   11d6c:	str	x19, [sp, #16]
   11d70:	mov	x19, x0
   11d74:	ldr	w0, [x0, #124]
   11d78:	cbz	w0, 11d8c <elf_scnshndx@@ELFUTILS_1.4+0x28>
   11d7c:	ldr	w0, [x19, #124]
   11d80:	ldr	x19, [sp, #16]
   11d84:	ldp	x29, x30, [sp], #96
   11d88:	ret
   11d8c:	add	x1, sp, #0x20
   11d90:	mov	x0, x19
   11d94:	bl	a090 <gelf_getshdr@@ELFUTILS_1.0>
   11d98:	b	11d7c <elf_scnshndx@@ELFUTILS_1.4+0x18>

0000000000011d9c <elf32_getchdr@@ELFUTILS_1.7>:
   11d9c:	stp	x29, x30, [sp, #-32]!
   11da0:	mov	x29, sp
   11da4:	str	x19, [sp, #16]
   11da8:	mov	x19, x0
   11dac:	bl	32e0 <elf32_getshdr@plt>
   11db0:	cbz	x0, 11df0 <elf32_getchdr@@ELFUTILS_1.7+0x54>
   11db4:	ldr	w1, [x0, #8]
   11db8:	tbnz	w1, #1, 11dfc <elf32_getchdr@@ELFUTILS_1.7+0x60>
   11dbc:	ldr	w0, [x0, #4]
   11dc0:	tst	w0, #0xfffffff7
   11dc4:	b.eq	11e0c <elf32_getchdr@@ELFUTILS_1.7+0x70>  // b.none
   11dc8:	tbz	w1, #11, 11e1c <elf32_getchdr@@ELFUTILS_1.7+0x80>
   11dcc:	mov	x1, #0x0                   	// #0
   11dd0:	mov	x0, x19
   11dd4:	bl	3330 <elf_getdata@plt>
   11dd8:	cbz	x0, 11df0 <elf32_getchdr@@ELFUTILS_1.7+0x54>
   11ddc:	ldr	x1, [x0, #16]
   11de0:	cmp	x1, #0xb
   11de4:	b.ls	11e2c <elf32_getchdr@@ELFUTILS_1.7+0x90>  // b.plast
   11de8:	ldr	x0, [x0]
   11dec:	cbz	x0, 11e2c <elf32_getchdr@@ELFUTILS_1.7+0x90>
   11df0:	ldr	x19, [sp, #16]
   11df4:	ldp	x29, x30, [sp], #32
   11df8:	ret
   11dfc:	mov	w0, #0x2d                  	// #45
   11e00:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11e04:	mov	x0, #0x0                   	// #0
   11e08:	b	11df0 <elf32_getchdr@@ELFUTILS_1.7+0x54>
   11e0c:	mov	w0, #0x2c                  	// #44
   11e10:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11e14:	mov	x0, #0x0                   	// #0
   11e18:	b	11df0 <elf32_getchdr@@ELFUTILS_1.7+0x54>
   11e1c:	mov	w0, #0x2e                  	// #46
   11e20:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11e24:	mov	x0, #0x0                   	// #0
   11e28:	b	11df0 <elf32_getchdr@@ELFUTILS_1.7+0x54>
   11e2c:	mov	w0, #0x21                  	// #33
   11e30:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11e34:	mov	x0, #0x0                   	// #0
   11e38:	b	11df0 <elf32_getchdr@@ELFUTILS_1.7+0x54>

0000000000011e3c <elf64_getchdr@@ELFUTILS_1.7>:
   11e3c:	stp	x29, x30, [sp, #-32]!
   11e40:	mov	x29, sp
   11e44:	str	x19, [sp, #16]
   11e48:	mov	x19, x0
   11e4c:	bl	3150 <elf64_getshdr@plt>
   11e50:	cbz	x0, 11e90 <elf64_getchdr@@ELFUTILS_1.7+0x54>
   11e54:	ldr	x1, [x0, #8]
   11e58:	tbnz	w1, #1, 11e9c <elf64_getchdr@@ELFUTILS_1.7+0x60>
   11e5c:	ldr	w0, [x0, #4]
   11e60:	tst	w0, #0xfffffff7
   11e64:	b.eq	11eac <elf64_getchdr@@ELFUTILS_1.7+0x70>  // b.none
   11e68:	tbz	w1, #11, 11ebc <elf64_getchdr@@ELFUTILS_1.7+0x80>
   11e6c:	mov	x1, #0x0                   	// #0
   11e70:	mov	x0, x19
   11e74:	bl	3330 <elf_getdata@plt>
   11e78:	cbz	x0, 11e90 <elf64_getchdr@@ELFUTILS_1.7+0x54>
   11e7c:	ldr	x1, [x0, #16]
   11e80:	cmp	x1, #0x17
   11e84:	b.ls	11ecc <elf64_getchdr@@ELFUTILS_1.7+0x90>  // b.plast
   11e88:	ldr	x0, [x0]
   11e8c:	cbz	x0, 11ecc <elf64_getchdr@@ELFUTILS_1.7+0x90>
   11e90:	ldr	x19, [sp, #16]
   11e94:	ldp	x29, x30, [sp], #32
   11e98:	ret
   11e9c:	mov	w0, #0x2d                  	// #45
   11ea0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11ea4:	mov	x0, #0x0                   	// #0
   11ea8:	b	11e90 <elf64_getchdr@@ELFUTILS_1.7+0x54>
   11eac:	mov	w0, #0x2c                  	// #44
   11eb0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11eb4:	mov	x0, #0x0                   	// #0
   11eb8:	b	11e90 <elf64_getchdr@@ELFUTILS_1.7+0x54>
   11ebc:	mov	w0, #0x2e                  	// #46
   11ec0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11ec4:	mov	x0, #0x0                   	// #0
   11ec8:	b	11e90 <elf64_getchdr@@ELFUTILS_1.7+0x54>
   11ecc:	mov	w0, #0x21                  	// #33
   11ed0:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11ed4:	mov	x0, #0x0                   	// #0
   11ed8:	b	11e90 <elf64_getchdr@@ELFUTILS_1.7+0x54>

0000000000011edc <gelf_getchdr@@ELFUTILS_1.7>:
   11edc:	cbz	x0, 11f64 <gelf_getchdr@@ELFUTILS_1.7+0x88>
   11ee0:	stp	x29, x30, [sp, #-32]!
   11ee4:	mov	x29, sp
   11ee8:	str	x19, [sp, #16]
   11eec:	mov	x19, x1
   11ef0:	cbz	x1, 11f2c <gelf_getchdr@@ELFUTILS_1.7+0x50>
   11ef4:	ldr	x1, [x0, #136]
   11ef8:	ldr	w1, [x1, #32]
   11efc:	cmp	w1, #0x1
   11f00:	b.eq	11f3c <gelf_getchdr@@ELFUTILS_1.7+0x60>  // b.none
   11f04:	bl	31d0 <elf64_getchdr@plt>
   11f08:	cbz	x0, 11f20 <gelf_getchdr@@ELFUTILS_1.7+0x44>
   11f0c:	ldp	x2, x3, [x0]
   11f10:	stp	x2, x3, [x19]
   11f14:	ldr	x0, [x0, #16]
   11f18:	str	x0, [x19, #16]
   11f1c:	mov	x0, x19
   11f20:	ldr	x19, [sp, #16]
   11f24:	ldp	x29, x30, [sp], #32
   11f28:	ret
   11f2c:	mov	w0, #0x17                  	// #23
   11f30:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   11f34:	mov	x0, x19
   11f38:	b	11f20 <gelf_getchdr@@ELFUTILS_1.7+0x44>
   11f3c:	bl	30d0 <elf32_getchdr@plt>
   11f40:	cbz	x0, 11f20 <gelf_getchdr@@ELFUTILS_1.7+0x44>
   11f44:	ldr	w1, [x0]
   11f48:	str	w1, [x19]
   11f4c:	ldr	w1, [x0, #4]
   11f50:	str	x1, [x19, #8]
   11f54:	ldr	w0, [x0, #8]
   11f58:	str	x0, [x19, #16]
   11f5c:	mov	x0, x19
   11f60:	b	11f20 <gelf_getchdr@@ELFUTILS_1.7+0x44>
   11f64:	ret
   11f68:	stp	x29, x30, [sp, #-304]!
   11f6c:	mov	x29, sp
   11f70:	stp	x19, x20, [sp, #16]
   11f74:	stp	x21, x22, [sp, #32]
   11f78:	stp	x23, x24, [sp, #48]
   11f7c:	stp	x25, x26, [sp, #64]
   11f80:	mov	x20, x0
   11f84:	str	x0, [sp, #120]
   11f88:	mov	x19, x1
   11f8c:	str	w2, [sp, #100]
   11f90:	mov	x26, x3
   11f94:	str	x4, [sp, #104]
   11f98:	str	x5, [sp, #136]
   11f9c:	and	w24, w6, #0xff
   11fa0:	mov	x1, #0x0                   	// #0
   11fa4:	bl	3330 <elf_getdata@plt>
   11fa8:	mov	x21, x0
   11fac:	cbz	x0, 122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   11fb0:	stp	x27, x28, [sp, #80]
   11fb4:	mov	x1, x0
   11fb8:	mov	x0, x20
   11fbc:	bl	3330 <elf_getdata@plt>
   11fc0:	mov	x28, x0
   11fc4:	eor	w24, w24, #0x1
   11fc8:	cmp	x0, #0x0
   11fcc:	ccmp	w24, #0x0, #0x4, eq  // eq = none
   11fd0:	b.eq	11fe4 <gelf_getchdr@@ELFUTILS_1.7+0x108>  // b.none
   11fd4:	add	x0, x19, #0xb
   11fd8:	ldr	x1, [x21, #16]
   11fdc:	cmp	x1, x0
   11fe0:	b.ls	12298 <gelf_getchdr@@ELFUTILS_1.7+0x3bc>  // b.plast
   11fe4:	ldr	x0, [x21, #32]
   11fe8:	ldr	x1, [sp, #104]
   11fec:	str	x0, [x1]
   11ff0:	ldr	x27, [x21, #16]
   11ff4:	str	x27, [x26]
   11ff8:	add	x27, x19, x27, lsr #3
   11ffc:	lsl	x20, x27, #1
   12000:	mov	x0, x20
   12004:	bl	3100 <malloc@plt>
   12008:	mov	x23, x0
   1200c:	cbz	x0, 12078 <gelf_getchdr@@ELFUTILS_1.7+0x19c>
   12010:	str	xzr, [sp, #256]
   12014:	str	xzr, [sp, #264]
   12018:	str	xzr, [sp, #272]
   1201c:	mov	w3, #0x70                  	// #112
   12020:	adrp	x2, 14000 <elf_compress_gnu@@ELFUTILS_1.7+0x1660>
   12024:	add	x2, x2, #0x328
   12028:	mov	w1, #0x9                   	// #9
   1202c:	add	x0, sp, #0xc0
   12030:	bl	31b0 <deflateInit_@plt>
   12034:	mov	w22, w0
   12038:	cbnz	w0, 1208c <gelf_getchdr@@ELFUTILS_1.7+0x1b0>
   1203c:	str	xzr, [sp, #152]
   12040:	add	x25, sp, #0xc0
   12044:	ldp	x0, x1, [x21]
   12048:	stp	x0, x1, [sp, #152]
   1204c:	ldp	x0, x1, [x21, #16]
   12050:	stp	x0, x1, [sp, #168]
   12054:	ldr	x0, [x21, #32]
   12058:	str	x0, [sp, #184]
   1205c:	ldr	w0, [sp, #100]
   12060:	cmp	w0, #0x1
   12064:	b.eq	120ec <gelf_getchdr@@ELFUTILS_1.7+0x210>  // b.none
   12068:	ldr	x0, [x21, #16]
   1206c:	cbnz	x0, 12324 <gelf_getchdr@@ELFUTILS_1.7+0x448>
   12070:	str	wzr, [sp, #112]
   12074:	b	120f0 <gelf_getchdr@@ELFUTILS_1.7+0x214>
   12078:	mov	w0, #0x8                   	// #8
   1207c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12080:	mov	x21, x23
   12084:	ldp	x27, x28, [sp, #80]
   12088:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   1208c:	mov	x0, x23
   12090:	bl	3250 <free@plt>
   12094:	mov	w0, #0x31                  	// #49
   12098:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   1209c:	mov	x21, #0x0                   	// #0
   120a0:	ldp	x27, x28, [sp, #80]
   120a4:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   120a8:	mov	w0, #0x8                   	// #8
   120ac:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   120b0:	add	x0, sp, #0xc0
   120b4:	bl	3280 <deflateEnd@plt>
   120b8:	mov	x0, x23
   120bc:	bl	3250 <free@plt>
   120c0:	ldr	x21, [sp, #112]
   120c4:	ldp	x27, x28, [sp, #80]
   120c8:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   120cc:	add	x0, sp, #0xc0
   120d0:	bl	3280 <deflateEnd@plt>
   120d4:	mov	x0, x23
   120d8:	bl	3250 <free@plt>
   120dc:	ldr	x0, [sp, #152]
   120e0:	bl	3250 <free@plt>
   120e4:	ldp	x27, x28, [sp, #80]
   120e8:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   120ec:	str	wzr, [sp, #112]
   120f0:	ldr	x0, [sp, #168]
   120f4:	str	w0, [sp, #200]
   120f8:	ldr	x0, [sp, #152]
   120fc:	str	x0, [sp, #192]
   12100:	cbz	x28, 12140 <gelf_getchdr@@ELFUTILS_1.7+0x264>
   12104:	ldr	x2, [sp, #104]
   12108:	ldr	x1, [x2]
   1210c:	ldr	x0, [x28, #32]
   12110:	cmp	x0, x1
   12114:	csel	x0, x0, x1, cs  // cs = hs, nlast
   12118:	str	x0, [x2]
   1211c:	ldr	x0, [x26]
   12120:	ldr	x1, [x28, #16]
   12124:	add	x0, x0, x1
   12128:	str	x0, [x26]
   1212c:	mov	x1, x28
   12130:	ldr	x0, [sp, #120]
   12134:	bl	3330 <elf_getdata@plt>
   12138:	str	x0, [sp, #128]
   1213c:	b	121b8 <gelf_getchdr@@ELFUTILS_1.7+0x2dc>
   12140:	str	x28, [sp, #128]
   12144:	mov	w22, #0x4                   	// #4
   12148:	b	121b8 <gelf_getchdr@@ELFUTILS_1.7+0x2dc>
   1214c:	mov	w0, #0x31                  	// #49
   12150:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12154:	ldr	w0, [sp, #112]
   12158:	cbnz	w0, 122a4 <gelf_getchdr@@ELFUTILS_1.7+0x3c8>
   1215c:	add	x0, sp, #0xc0
   12160:	bl	3280 <deflateEnd@plt>
   12164:	mov	x0, x23
   12168:	bl	3250 <free@plt>
   1216c:	mov	x21, #0x0                   	// #0
   12170:	ldp	x27, x28, [sp, #80]
   12174:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   12178:	ldr	w0, [sp, #112]
   1217c:	cbnz	w0, 122e0 <gelf_getchdr@@ELFUTILS_1.7+0x404>
   12180:	add	x0, sp, #0xc0
   12184:	bl	3280 <deflateEnd@plt>
   12188:	mov	x0, x23
   1218c:	bl	3250 <free@plt>
   12190:	mov	x21, #0xffffffffffffffff    	// #-1
   12194:	ldp	x27, x28, [sp, #80]
   12198:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   1219c:	add	x20, x20, x27
   121a0:	mov	x1, x20
   121a4:	mov	x0, x23
   121a8:	bl	31a0 <realloc@plt>
   121ac:	mov	x21, x0
   121b0:	cbz	x0, 1221c <gelf_getchdr@@ELFUTILS_1.7+0x340>
   121b4:	mov	x23, x21
   121b8:	sub	w0, w20, w19
   121bc:	str	w0, [sp, #224]
   121c0:	add	x19, x23, x19
   121c4:	str	x19, [sp, #216]
   121c8:	mov	w1, w22
   121cc:	mov	x0, x25
   121d0:	bl	3120 <deflate@plt>
   121d4:	cmn	w0, #0x2
   121d8:	b.eq	1214c <gelf_getchdr@@ELFUTILS_1.7+0x270>  // b.none
   121dc:	ldr	w0, [sp, #224]
   121e0:	sub	x19, x20, w0, uxtw
   121e4:	cmp	w24, #0x0
   121e8:	ccmp	w22, #0x4, #0x0, ne  // ne = any
   121ec:	b.ne	121fc <gelf_getchdr@@ELFUTILS_1.7+0x320>  // b.any
   121f0:	ldr	x1, [x26]
   121f4:	cmp	x1, x19
   121f8:	b.ls	12178 <gelf_getchdr@@ELFUTILS_1.7+0x29c>  // b.plast
   121fc:	cbz	w0, 1219c <gelf_getchdr@@ELFUTILS_1.7+0x2c0>
   12200:	ldr	w0, [sp, #112]
   12204:	cbnz	w0, 12244 <gelf_getchdr@@ELFUTILS_1.7+0x368>
   12208:	mov	x21, x28
   1220c:	cmp	w22, #0x4
   12210:	b.eq	12254 <gelf_getchdr@@ELFUTILS_1.7+0x378>  // b.none
   12214:	ldr	x28, [sp, #128]
   12218:	b	12044 <gelf_getchdr@@ELFUTILS_1.7+0x168>
   1221c:	mov	w0, #0x8                   	// #8
   12220:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12224:	ldr	w0, [sp, #112]
   12228:	cbnz	w0, 12304 <gelf_getchdr@@ELFUTILS_1.7+0x428>
   1222c:	add	x0, sp, #0xc0
   12230:	bl	3280 <deflateEnd@plt>
   12234:	mov	x0, x23
   12238:	bl	3250 <free@plt>
   1223c:	ldp	x27, x28, [sp, #80]
   12240:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   12244:	ldr	x0, [sp, #152]
   12248:	bl	3250 <free@plt>
   1224c:	str	xzr, [sp, #152]
   12250:	b	12208 <gelf_getchdr@@ELFUTILS_1.7+0x32c>
   12254:	add	x0, sp, #0xc0
   12258:	bl	3280 <deflateEnd@plt>
   1225c:	cbnz	w0, 12274 <gelf_getchdr@@ELFUTILS_1.7+0x398>
   12260:	ldr	x0, [sp, #136]
   12264:	str	x19, [x0]
   12268:	mov	x21, x23
   1226c:	ldp	x27, x28, [sp, #80]
   12270:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   12274:	mov	w0, #0x31                  	// #49
   12278:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   1227c:	add	x0, sp, #0xc0
   12280:	bl	3280 <deflateEnd@plt>
   12284:	mov	x0, x23
   12288:	bl	3250 <free@plt>
   1228c:	mov	x21, #0x0                   	// #0
   12290:	ldp	x27, x28, [sp, #80]
   12294:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   12298:	mov	x21, #0xffffffffffffffff    	// #-1
   1229c:	ldp	x27, x28, [sp, #80]
   122a0:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   122a4:	add	x0, sp, #0xc0
   122a8:	bl	3280 <deflateEnd@plt>
   122ac:	mov	x0, x23
   122b0:	bl	3250 <free@plt>
   122b4:	ldr	x0, [sp, #152]
   122b8:	bl	3250 <free@plt>
   122bc:	mov	x21, #0x0                   	// #0
   122c0:	ldp	x27, x28, [sp, #80]
   122c4:	mov	x0, x21
   122c8:	ldp	x19, x20, [sp, #16]
   122cc:	ldp	x21, x22, [sp, #32]
   122d0:	ldp	x23, x24, [sp, #48]
   122d4:	ldp	x25, x26, [sp, #64]
   122d8:	ldp	x29, x30, [sp], #304
   122dc:	ret
   122e0:	add	x0, sp, #0xc0
   122e4:	bl	3280 <deflateEnd@plt>
   122e8:	mov	x0, x23
   122ec:	bl	3250 <free@plt>
   122f0:	ldr	x0, [sp, #152]
   122f4:	bl	3250 <free@plt>
   122f8:	mov	x21, #0xffffffffffffffff    	// #-1
   122fc:	ldp	x27, x28, [sp, #80]
   12300:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   12304:	add	x0, sp, #0xc0
   12308:	bl	3280 <deflateEnd@plt>
   1230c:	mov	x0, x23
   12310:	bl	3250 <free@plt>
   12314:	ldr	x0, [sp, #152]
   12318:	bl	3250 <free@plt>
   1231c:	ldp	x27, x28, [sp, #80]
   12320:	b	122c4 <gelf_getchdr@@ELFUTILS_1.7+0x3e8>
   12324:	bl	3100 <malloc@plt>
   12328:	str	x0, [sp, #112]
   1232c:	str	x0, [sp, #152]
   12330:	cbz	x0, 120a8 <gelf_getchdr@@ELFUTILS_1.7+0x1cc>
   12334:	ldr	w3, [sp, #100]
   12338:	mov	x2, x21
   1233c:	add	x1, sp, #0x98
   12340:	ldr	x0, [sp, #120]
   12344:	ldr	x0, [x0, #136]
   12348:	bl	3190 <gelf_xlatetof@plt>
   1234c:	mov	x21, x0
   12350:	cbz	x0, 120cc <gelf_getchdr@@ELFUTILS_1.7+0x1f0>
   12354:	mov	w0, #0x1                   	// #1
   12358:	str	w0, [sp, #112]
   1235c:	b	120f0 <gelf_getchdr@@ELFUTILS_1.7+0x214>
   12360:	stp	x29, x30, [sp, #-160]!
   12364:	mov	x29, sp
   12368:	stp	x19, x20, [sp, #16]
   1236c:	stp	x21, x22, [sp, #32]
   12370:	mov	x21, x1
   12374:	mov	x1, #0x80ff                	// #33023
   12378:	movk	x1, #0xe03f, lsl #16
   1237c:	movk	x1, #0xf80f, lsl #32
   12380:	movk	x1, #0xfe03, lsl #48
   12384:	umulh	x1, x2, x1
   12388:	cmp	x21, x1, lsr #10
   1238c:	b.cc	1246c <gelf_getchdr@@ELFUTILS_1.7+0x590>  // b.lo, b.ul, b.last
   12390:	mov	x22, x0
   12394:	mov	x19, x2
   12398:	cmp	x2, #0x0
   1239c:	csinc	x0, x2, xzr, ne  // ne = any
   123a0:	bl	3100 <malloc@plt>
   123a4:	mov	x20, x0
   123a8:	cbz	x0, 1247c <gelf_getchdr@@ELFUTILS_1.7+0x5a0>
   123ac:	stp	xzr, xzr, [sp, #56]
   123b0:	stp	xzr, xzr, [sp, #72]
   123b4:	stp	xzr, xzr, [sp, #88]
   123b8:	stp	xzr, xzr, [sp, #104]
   123bc:	stp	xzr, xzr, [sp, #120]
   123c0:	stp	xzr, xzr, [sp, #136]
   123c4:	str	xzr, [sp, #152]
   123c8:	str	x22, [sp, #48]
   123cc:	str	w21, [sp, #56]
   123d0:	str	x0, [sp, #72]
   123d4:	str	w19, [sp, #80]
   123d8:	mov	w2, #0x70                  	// #112
   123dc:	adrp	x1, 14000 <elf_compress_gnu@@ELFUTILS_1.7+0x1660>
   123e0:	add	x1, x1, #0x328
   123e4:	add	x0, sp, #0x30
   123e8:	bl	32c0 <inflateInit_@plt>
   123ec:	ldr	w1, [sp, #56]
   123f0:	cmp	w1, #0x0
   123f4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   123f8:	b.ne	12440 <gelf_getchdr@@ELFUTILS_1.7+0x564>  // b.any
   123fc:	add	x21, sp, #0x30
   12400:	mov	w22, #0x4                   	// #4
   12404:	ldr	w1, [sp, #80]
   12408:	sub	x1, x19, x1
   1240c:	add	x1, x20, x1
   12410:	str	x1, [sp, #72]
   12414:	mov	w1, w22
   12418:	mov	x0, x21
   1241c:	bl	30b0 <inflate@plt>
   12420:	cmp	w0, #0x1
   12424:	b.ne	12488 <gelf_getchdr@@ELFUTILS_1.7+0x5ac>  // b.any
   12428:	mov	x0, x21
   1242c:	bl	3360 <inflateReset@plt>
   12430:	ldr	w1, [sp, #56]
   12434:	cmp	w1, #0x0
   12438:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   1243c:	b.eq	12404 <gelf_getchdr@@ELFUTILS_1.7+0x528>  // b.none
   12440:	cbnz	w0, 12488 <gelf_getchdr@@ELFUTILS_1.7+0x5ac>
   12444:	add	x0, sp, #0x30
   12448:	bl	31f0 <inflateEnd@plt>
   1244c:	ldr	w1, [sp, #80]
   12450:	orr	w0, w0, w1
   12454:	cbnz	w0, 12488 <gelf_getchdr@@ELFUTILS_1.7+0x5ac>
   12458:	mov	x0, x20
   1245c:	ldp	x19, x20, [sp, #16]
   12460:	ldp	x21, x22, [sp, #32]
   12464:	ldp	x29, x30, [sp], #160
   12468:	ret
   1246c:	mov	w0, #0x21                  	// #33
   12470:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12474:	mov	x20, #0x0                   	// #0
   12478:	b	12458 <gelf_getchdr@@ELFUTILS_1.7+0x57c>
   1247c:	mov	w0, #0x8                   	// #8
   12480:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12484:	b	12458 <gelf_getchdr@@ELFUTILS_1.7+0x57c>
   12488:	mov	x0, x20
   1248c:	bl	3250 <free@plt>
   12490:	mov	w0, #0x32                  	// #50
   12494:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12498:	mov	x20, #0x0                   	// #0
   1249c:	b	12458 <gelf_getchdr@@ELFUTILS_1.7+0x57c>
   124a0:	stp	x29, x30, [sp, #-80]!
   124a4:	mov	x29, sp
   124a8:	stp	x19, x20, [sp, #16]
   124ac:	str	x21, [sp, #32]
   124b0:	mov	x19, x0
   124b4:	mov	x20, x1
   124b8:	mov	x21, x2
   124bc:	add	x1, sp, #0x38
   124c0:	bl	3290 <gelf_getchdr@plt>
   124c4:	cbz	x0, 12534 <gelf_getchdr@@ELFUTILS_1.7+0x658>
   124c8:	ldr	w0, [sp, #56]
   124cc:	cmp	w0, #0x1
   124d0:	b.ne	12544 <gelf_getchdr@@ELFUTILS_1.7+0x668>  // b.any
   124d4:	ldr	x0, [sp, #72]
   124d8:	sub	x1, x0, #0x1
   124dc:	tst	x1, x0
   124e0:	b.ne	12554 <gelf_getchdr@@ELFUTILS_1.7+0x678>  // b.any
   124e4:	mov	x1, #0x0                   	// #0
   124e8:	mov	x0, x19
   124ec:	bl	3330 <elf_getdata@plt>
   124f0:	cbz	x0, 12534 <gelf_getchdr@@ELFUTILS_1.7+0x658>
   124f4:	ldr	x1, [x19, #136]
   124f8:	ldr	w1, [x1, #32]
   124fc:	cmp	w1, #0x1
   12500:	mov	x3, #0xc                   	// #12
   12504:	mov	x1, #0x18                  	// #24
   12508:	csel	x3, x3, x1, eq  // eq = none
   1250c:	ldr	x1, [x0, #16]
   12510:	ldr	x0, [x0]
   12514:	ldr	x2, [sp, #64]
   12518:	sub	x1, x1, x3
   1251c:	add	x0, x0, x3
   12520:	bl	12360 <gelf_getchdr@@ELFUTILS_1.7+0x484>
   12524:	ldr	x1, [sp, #64]
   12528:	str	x1, [x20]
   1252c:	ldr	x1, [sp, #72]
   12530:	str	x1, [x21]
   12534:	ldp	x19, x20, [sp, #16]
   12538:	ldr	x21, [sp, #32]
   1253c:	ldp	x29, x30, [sp], #80
   12540:	ret
   12544:	mov	w0, #0x30                  	// #48
   12548:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   1254c:	mov	x0, #0x0                   	// #0
   12550:	b	12534 <gelf_getchdr@@ELFUTILS_1.7+0x658>
   12554:	mov	w0, #0x24                  	// #36
   12558:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   1255c:	mov	x0, #0x0                   	// #0
   12560:	b	12534 <gelf_getchdr@@ELFUTILS_1.7+0x658>
   12564:	stp	x29, x30, [sp, #-32]!
   12568:	mov	x29, sp
   1256c:	stp	x19, x20, [sp, #16]
   12570:	mov	x19, x0
   12574:	mov	x20, x1
   12578:	str	xzr, [x0, #96]
   1257c:	mov	w0, #0x1                   	// #1
   12580:	str	w0, [x19, #84]
   12584:	str	x1, [x19, #72]
   12588:	str	x2, [x19, #88]
   1258c:	str	x3, [x19, #104]
   12590:	str	w4, [x19, #80]
   12594:	str	xzr, [x19, #64]
   12598:	ldr	x0, [x19, #168]
   1259c:	ldr	x1, [x19, #160]
   125a0:	cmp	x0, x1
   125a4:	b.eq	125ac <gelf_getchdr@@ELFUTILS_1.7+0x6d0>  // b.none
   125a8:	bl	3250 <free@plt>
   125ac:	str	xzr, [x19, #168]
   125b0:	ldr	x0, [x19, #136]
   125b4:	ldr	x0, [x0]
   125b8:	cbz	x0, 125d4 <gelf_getchdr@@ELFUTILS_1.7+0x6f8>
   125bc:	ldr	x1, [x19, #160]
   125c0:	ldr	x0, [x19, #176]
   125c4:	cmp	x1, x0
   125c8:	b.eq	125d4 <gelf_getchdr@@ELFUTILS_1.7+0x6f8>  // b.none
   125cc:	ldr	w0, [x19, #156]
   125d0:	tbz	w0, #7, 125dc <gelf_getchdr@@ELFUTILS_1.7+0x700>
   125d4:	ldr	x0, [x19, #160]
   125d8:	bl	3250 <free@plt>
   125dc:	str	x20, [x19, #160]
   125e0:	ldr	w0, [x19, #156]
   125e4:	mov	w1, #0x1                   	// #1
   125e8:	str	w1, [x19, #120]
   125ec:	orr	w0, w0, #0x180
   125f0:	str	w0, [x19, #156]
   125f4:	mov	x0, x19
   125f8:	bl	ac24 <elf_rawdata@@ELFUTILS_1.0+0x53c>
   125fc:	ldp	x19, x20, [sp, #16]
   12600:	ldp	x29, x30, [sp], #32
   12604:	ret

0000000000012608 <elf_compress@@ELFUTILS_1.7>:
   12608:	cbz	x0, 12964 <elf_compress@@ELFUTILS_1.7+0x35c>
   1260c:	stp	x29, x30, [sp, #-176]!
   12610:	mov	x29, sp
   12614:	stp	x19, x20, [sp, #16]
   12618:	stp	x21, x22, [sp, #32]
   1261c:	mov	x19, x0
   12620:	mov	w21, w1
   12624:	mov	w20, w2
   12628:	tst	w2, #0xfffffffe
   1262c:	b.ne	12708 <elf_compress@@ELFUTILS_1.7+0x100>  // b.any
   12630:	ldr	x22, [x0, #136]
   12634:	add	x1, sp, #0x70
   12638:	mov	x0, x22
   1263c:	bl	3300 <gelf_getehdr@plt>
   12640:	cbz	x0, 1296c <elf_compress@@ELFUTILS_1.7+0x364>
   12644:	stp	x23, x24, [sp, #48]
   12648:	stp	x25, x26, [sp, #64]
   1264c:	ldr	w23, [x22, #32]
   12650:	ldrb	w24, [sp, #117]
   12654:	cmp	w23, #0x1
   12658:	b.eq	12724 <elf_compress@@ELFUTILS_1.7+0x11c>  // b.none
   1265c:	mov	x0, x19
   12660:	bl	3150 <elf64_getshdr@plt>
   12664:	cbz	x0, 12984 <elf_compress@@ELFUTILS_1.7+0x37c>
   12668:	ldr	x1, [x0, #8]
   1266c:	ldr	w25, [x0, #4]
   12670:	ldr	x26, [x0, #48]
   12674:	tbnz	w1, #1, 12740 <elf_compress@@ELFUTILS_1.7+0x138>
   12678:	tst	w25, #0xfffffff7
   1267c:	b.eq	12758 <elf_compress@@ELFUTILS_1.7+0x150>  // b.none
   12680:	cmp	w21, #0x1
   12684:	b.eq	12770 <elf_compress@@ELFUTILS_1.7+0x168>  // b.none
   12688:	cbnz	w21, 1294c <elf_compress@@ELFUTILS_1.7+0x344>
   1268c:	tbz	w1, #11, 128d0 <elf_compress@@ELFUTILS_1.7+0x2c8>
   12690:	ldr	x0, [x19, #176]
   12694:	cbz	x0, 128e8 <elf_compress@@ELFUTILS_1.7+0x2e0>
   12698:	cmp	w23, #0x1
   1269c:	b.eq	12924 <elf_compress@@ELFUTILS_1.7+0x31c>  // b.none
   126a0:	mov	x0, x19
   126a4:	bl	3150 <elf64_getshdr@plt>
   126a8:	ldr	x1, [x19, #184]
   126ac:	str	x1, [x0, #32]
   126b0:	ldr	x1, [x19, #192]
   126b4:	str	x1, [x0, #48]
   126b8:	ldr	x1, [x0, #8]
   126bc:	and	x1, x1, #0xfffffffffffff7ff
   126c0:	str	x1, [x0, #8]
   126c4:	ldr	x21, [x19, #176]
   126c8:	ldr	x23, [x19, #184]
   126cc:	ldr	x20, [x19, #192]
   126d0:	mov	x2, x20
   126d4:	mov	w1, w25
   126d8:	mov	x0, x22
   126dc:	bl	a774 <elf_rawdata@@ELFUTILS_1.0+0x8c>
   126e0:	mov	w4, w0
   126e4:	mov	x3, x20
   126e8:	mov	x2, x23
   126ec:	mov	x1, x21
   126f0:	mov	x0, x19
   126f4:	bl	12564 <gelf_getchdr@@ELFUTILS_1.7+0x688>
   126f8:	mov	w0, #0x1                   	// #1
   126fc:	ldp	x23, x24, [sp, #48]
   12700:	ldp	x25, x26, [sp, #64]
   12704:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>
   12708:	mov	w0, #0x17                  	// #23
   1270c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12710:	mov	w0, #0xffffffff            	// #-1
   12714:	ldp	x19, x20, [sp, #16]
   12718:	ldp	x21, x22, [sp, #32]
   1271c:	ldp	x29, x30, [sp], #176
   12720:	ret
   12724:	mov	x0, x19
   12728:	bl	32e0 <elf32_getshdr@plt>
   1272c:	cbz	x0, 12974 <elf_compress@@ELFUTILS_1.7+0x36c>
   12730:	ldr	w1, [x0, #8]
   12734:	ldr	w25, [x0, #4]
   12738:	ldr	w26, [x0, #32]
   1273c:	b	12674 <elf_compress@@ELFUTILS_1.7+0x6c>
   12740:	mov	w0, #0x2d                  	// #45
   12744:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12748:	mov	w0, #0xffffffff            	// #-1
   1274c:	ldp	x23, x24, [sp, #48]
   12750:	ldp	x25, x26, [sp, #64]
   12754:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>
   12758:	mov	w0, #0x2c                  	// #44
   1275c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12760:	mov	w0, #0xffffffff            	// #-1
   12764:	ldp	x23, x24, [sp, #48]
   12768:	ldp	x25, x26, [sp, #64]
   1276c:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>
   12770:	cmp	w23, #0x1
   12774:	and	w6, w20, #0x1
   12778:	add	x5, sp, #0x68
   1277c:	add	x4, sp, #0x60
   12780:	add	x3, sp, #0x58
   12784:	mov	w2, w24
   12788:	mov	x1, #0xc                   	// #12
   1278c:	mov	x0, #0x18                  	// #24
   12790:	csel	x1, x1, x0, eq  // eq = none
   12794:	mov	x0, x19
   12798:	bl	11f68 <gelf_getchdr@@ELFUTILS_1.7+0x8c>
   1279c:	mov	x20, x0
   127a0:	cmn	x0, #0x1
   127a4:	b.eq	128c0 <elf_compress@@ELFUTILS_1.7+0x2b8>  // b.none
   127a8:	mov	w0, #0xffffffff            	// #-1
   127ac:	cbz	x20, 12994 <elf_compress@@ELFUTILS_1.7+0x38c>
   127b0:	cmp	w23, #0x1
   127b4:	b.eq	1284c <elf_compress@@ELFUTILS_1.7+0x244>  // b.none
   127b8:	ldr	x0, [sp, #88]
   127bc:	mov	w1, #0x1                   	// #1
   127c0:	cmp	w24, w1
   127c4:	b.eq	127d4 <elf_compress@@ELFUTILS_1.7+0x1cc>  // b.none
   127c8:	rev	x0, x0
   127cc:	rev	x26, x26
   127d0:	mov	w1, #0x1000000             	// #16777216
   127d4:	str	w1, [x20]
   127d8:	str	wzr, [x20, #4]
   127dc:	str	x0, [x20, #8]
   127e0:	str	x26, [x20, #16]
   127e4:	mov	x0, x19
   127e8:	bl	3150 <elf64_getshdr@plt>
   127ec:	ldr	x1, [sp, #104]
   127f0:	str	x1, [x0, #32]
   127f4:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   127f8:	add	x1, x1, #0xa60
   127fc:	ldrb	w2, [x1, #52]
   12800:	ldrb	w1, [x1, #52]
   12804:	cmp	w2, #0x0
   12808:	csinc	w1, w1, wzr, ne  // ne = any
   1280c:	and	x1, x1, #0xff
   12810:	str	x1, [x0, #48]
   12814:	ldr	x1, [x0, #8]
   12818:	orr	x1, x1, #0x800
   1281c:	str	x1, [x0, #8]
   12820:	mov	w4, #0x19                  	// #25
   12824:	mov	x3, #0x1                   	// #1
   12828:	ldr	x2, [sp, #104]
   1282c:	mov	x1, x20
   12830:	mov	x0, x19
   12834:	bl	12564 <gelf_getchdr@@ELFUTILS_1.7+0x688>
   12838:	str	xzr, [x19, #176]
   1283c:	mov	w0, w21
   12840:	ldp	x23, x24, [sp, #48]
   12844:	ldp	x25, x26, [sp, #64]
   12848:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>
   1284c:	ldr	x4, [sp, #88]
   12850:	mov	w1, w4
   12854:	ldr	x3, [sp, #96]
   12858:	mov	w0, w3
   1285c:	mov	w2, #0x1                   	// #1
   12860:	cmp	w24, w2
   12864:	b.eq	12874 <elf_compress@@ELFUTILS_1.7+0x26c>  // b.none
   12868:	rev	w1, w4
   1286c:	rev	w0, w3
   12870:	mov	w2, #0x1000000             	// #16777216
   12874:	str	w2, [x20]
   12878:	str	w1, [x20, #4]
   1287c:	str	w0, [x20, #8]
   12880:	mov	x0, x19
   12884:	bl	32e0 <elf32_getshdr@plt>
   12888:	ldr	x1, [sp, #104]
   1288c:	str	w1, [x0, #20]
   12890:	adrp	x1, 13000 <elf_compress_gnu@@ELFUTILS_1.7+0x660>
   12894:	add	x1, x1, #0xa60
   12898:	ldrb	w2, [x1, #25]
   1289c:	ldrb	w1, [x1, #25]
   128a0:	cmp	w2, #0x0
   128a4:	csinc	w1, w1, wzr, ne  // ne = any
   128a8:	and	w1, w1, #0xff
   128ac:	str	w1, [x0, #32]
   128b0:	ldr	w1, [x0, #8]
   128b4:	orr	w1, w1, #0x800
   128b8:	str	w1, [x0, #8]
   128bc:	b	12820 <elf_compress@@ELFUTILS_1.7+0x218>
   128c0:	mov	w0, #0x0                   	// #0
   128c4:	ldp	x23, x24, [sp, #48]
   128c8:	ldp	x25, x26, [sp, #64]
   128cc:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>
   128d0:	mov	w0, #0x2e                  	// #46
   128d4:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   128d8:	mov	w0, #0xffffffff            	// #-1
   128dc:	ldp	x23, x24, [sp, #48]
   128e0:	ldp	x25, x26, [sp, #64]
   128e4:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>
   128e8:	add	x2, sp, #0x68
   128ec:	add	x1, sp, #0x60
   128f0:	mov	x0, x19
   128f4:	bl	124a0 <gelf_getchdr@@ELFUTILS_1.7+0x5c4>
   128f8:	cbz	x0, 12914 <elf_compress@@ELFUTILS_1.7+0x30c>
   128fc:	str	x0, [x19, #176]
   12900:	ldr	x0, [sp, #96]
   12904:	str	x0, [x19, #184]
   12908:	ldr	x0, [sp, #104]
   1290c:	str	x0, [x19, #192]
   12910:	b	12698 <elf_compress@@ELFUTILS_1.7+0x90>
   12914:	mov	w0, #0xffffffff            	// #-1
   12918:	ldp	x23, x24, [sp, #48]
   1291c:	ldp	x25, x26, [sp, #64]
   12920:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>
   12924:	mov	x0, x19
   12928:	bl	32e0 <elf32_getshdr@plt>
   1292c:	ldr	x1, [x19, #184]
   12930:	str	w1, [x0, #20]
   12934:	ldr	x1, [x19, #192]
   12938:	str	w1, [x0, #32]
   1293c:	ldr	w1, [x0, #8]
   12940:	and	w1, w1, #0xfffff7ff
   12944:	str	w1, [x0, #8]
   12948:	b	126c4 <elf_compress@@ELFUTILS_1.7+0xbc>
   1294c:	mov	w0, #0x30                  	// #48
   12950:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12954:	mov	w0, #0xffffffff            	// #-1
   12958:	ldp	x23, x24, [sp, #48]
   1295c:	ldp	x25, x26, [sp, #64]
   12960:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>
   12964:	mov	w0, #0xffffffff            	// #-1
   12968:	ret
   1296c:	mov	w0, #0xffffffff            	// #-1
   12970:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>
   12974:	mov	w0, #0xffffffff            	// #-1
   12978:	ldp	x23, x24, [sp, #48]
   1297c:	ldp	x25, x26, [sp, #64]
   12980:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>
   12984:	mov	w0, #0xffffffff            	// #-1
   12988:	ldp	x23, x24, [sp, #48]
   1298c:	ldp	x25, x26, [sp, #64]
   12990:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>
   12994:	ldp	x23, x24, [sp, #48]
   12998:	ldp	x25, x26, [sp, #64]
   1299c:	b	12714 <elf_compress@@ELFUTILS_1.7+0x10c>

00000000000129a0 <elf_compress_gnu@@ELFUTILS_1.7>:
   129a0:	cbz	x0, 12c58 <elf_compress_gnu@@ELFUTILS_1.7+0x2b8>
   129a4:	stp	x29, x30, [sp, #-176]!
   129a8:	mov	x29, sp
   129ac:	stp	x19, x20, [sp, #16]
   129b0:	stp	x21, x22, [sp, #32]
   129b4:	mov	x19, x0
   129b8:	mov	w21, w1
   129bc:	mov	w20, w2
   129c0:	tst	w2, #0xfffffffe
   129c4:	b.ne	12ae4 <elf_compress_gnu@@ELFUTILS_1.7+0x144>  // b.any
   129c8:	ldr	x22, [x0, #136]
   129cc:	add	x1, sp, #0x70
   129d0:	mov	x0, x22
   129d4:	bl	3300 <gelf_getehdr@plt>
   129d8:	cbz	x0, 12c60 <elf_compress_gnu@@ELFUTILS_1.7+0x2c0>
   129dc:	stp	x23, x24, [sp, #48]
   129e0:	stp	x25, x26, [sp, #64]
   129e4:	ldr	w23, [x22, #32]
   129e8:	ldrb	w24, [sp, #117]
   129ec:	cmp	w23, #0x1
   129f0:	b.eq	12b00 <elf_compress_gnu@@ELFUTILS_1.7+0x160>  // b.none
   129f4:	mov	x0, x19
   129f8:	bl	3150 <elf64_getshdr@plt>
   129fc:	cbz	x0, 12c78 <elf_compress_gnu@@ELFUTILS_1.7+0x2d8>
   12a00:	ldr	x1, [x0, #8]
   12a04:	ldr	w25, [x0, #4]
   12a08:	ldr	x26, [x0, #48]
   12a0c:	mov	x0, #0x802                 	// #2050
   12a10:	tst	x1, x0
   12a14:	b.ne	12b1c <elf_compress_gnu@@ELFUTILS_1.7+0x17c>  // b.any
   12a18:	tst	w25, #0xfffffff7
   12a1c:	b.eq	12b34 <elf_compress_gnu@@ELFUTILS_1.7+0x194>  // b.none
   12a20:	cmp	w21, #0x1
   12a24:	b.eq	12b4c <elf_compress_gnu@@ELFUTILS_1.7+0x1ac>  // b.none
   12a28:	cbnz	w21, 12c40 <elf_compress_gnu@@ELFUTILS_1.7+0x2a0>
   12a2c:	mov	x1, #0x0                   	// #0
   12a30:	mov	x0, x19
   12a34:	bl	3330 <elf_getdata@plt>
   12a38:	cbz	x0, 12c88 <elf_compress_gnu@@ELFUTILS_1.7+0x2e8>
   12a3c:	ldr	x21, [x0, #16]
   12a40:	cmp	x21, #0xb
   12a44:	b.ls	12c00 <elf_compress_gnu@@ELFUTILS_1.7+0x260>  // b.plast
   12a48:	ldr	x24, [x0]
   12a4c:	mov	x2, #0x4                   	// #4
   12a50:	adrp	x1, 14000 <elf_compress_gnu@@ELFUTILS_1.7+0x1660>
   12a54:	add	x1, x1, #0x330
   12a58:	mov	x0, x24
   12a5c:	bl	3200 <memcmp@plt>
   12a60:	cbnz	w0, 12c00 <elf_compress_gnu@@ELFUTILS_1.7+0x260>
   12a64:	ldur	x20, [x24, #4]
   12a68:	rev	x20, x20
   12a6c:	add	x0, x20, #0x17
   12a70:	cmp	x21, x0
   12a74:	b.hi	12c18 <elf_compress_gnu@@ELFUTILS_1.7+0x278>  // b.pmore
   12a78:	mov	x2, x20
   12a7c:	sub	x1, x21, #0xc
   12a80:	add	x0, x24, #0xc
   12a84:	bl	12360 <gelf_getchdr@@ELFUTILS_1.7+0x484>
   12a88:	mov	x21, x0
   12a8c:	mov	w0, #0xffffffff            	// #-1
   12a90:	cbz	x21, 12ca4 <elf_compress_gnu@@ELFUTILS_1.7+0x304>
   12a94:	cmp	w23, #0x1
   12a98:	b.eq	12c30 <elf_compress_gnu@@ELFUTILS_1.7+0x290>  // b.none
   12a9c:	mov	x0, x19
   12aa0:	bl	3150 <elf64_getshdr@plt>
   12aa4:	str	x20, [x0, #32]
   12aa8:	mov	x2, x26
   12aac:	mov	w1, w25
   12ab0:	mov	x0, x22
   12ab4:	bl	a774 <elf_rawdata@@ELFUTILS_1.0+0x8c>
   12ab8:	mov	w4, w0
   12abc:	mov	x3, x26
   12ac0:	mov	x2, x20
   12ac4:	mov	x1, x21
   12ac8:	mov	x0, x19
   12acc:	bl	12564 <gelf_getchdr@@ELFUTILS_1.7+0x688>
   12ad0:	str	x21, [x19, #176]
   12ad4:	mov	w0, #0x1                   	// #1
   12ad8:	ldp	x23, x24, [sp, #48]
   12adc:	ldp	x25, x26, [sp, #64]
   12ae0:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12ae4:	mov	w0, #0x17                  	// #23
   12ae8:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12aec:	mov	w0, #0xffffffff            	// #-1
   12af0:	ldp	x19, x20, [sp, #16]
   12af4:	ldp	x21, x22, [sp, #32]
   12af8:	ldp	x29, x30, [sp], #176
   12afc:	ret
   12b00:	mov	x0, x19
   12b04:	bl	32e0 <elf32_getshdr@plt>
   12b08:	cbz	x0, 12c68 <elf_compress_gnu@@ELFUTILS_1.7+0x2c8>
   12b0c:	ldr	w1, [x0, #8]
   12b10:	ldr	w25, [x0, #4]
   12b14:	ldr	w26, [x0, #32]
   12b18:	b	12a0c <elf_compress_gnu@@ELFUTILS_1.7+0x6c>
   12b1c:	mov	w0, #0x2d                  	// #45
   12b20:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12b24:	mov	w0, #0xffffffff            	// #-1
   12b28:	ldp	x23, x24, [sp, #48]
   12b2c:	ldp	x25, x26, [sp, #64]
   12b30:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12b34:	mov	w0, #0x2c                  	// #44
   12b38:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12b3c:	mov	w0, #0xffffffff            	// #-1
   12b40:	ldp	x23, x24, [sp, #48]
   12b44:	ldp	x25, x26, [sp, #64]
   12b48:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12b4c:	and	w6, w20, #0x1
   12b50:	add	x5, sp, #0x60
   12b54:	add	x4, sp, #0x68
   12b58:	add	x3, sp, #0x58
   12b5c:	mov	w2, w24
   12b60:	mov	x1, #0xc                   	// #12
   12b64:	mov	x0, x19
   12b68:	bl	11f68 <gelf_getchdr@@ELFUTILS_1.7+0x8c>
   12b6c:	mov	x20, x0
   12b70:	cmn	x0, #0x1
   12b74:	b.eq	12bf0 <elf_compress_gnu@@ELFUTILS_1.7+0x250>  // b.none
   12b78:	mov	w0, #0xffffffff            	// #-1
   12b7c:	cbz	x20, 12c98 <elf_compress_gnu@@ELFUTILS_1.7+0x2f8>
   12b80:	ldr	x0, [sp, #88]
   12b84:	rev	x0, x0
   12b88:	mov	w1, #0x4c5a                	// #19546
   12b8c:	movk	w1, #0x4249, lsl #16
   12b90:	str	w1, [x20]
   12b94:	stur	x0, [x20, #4]
   12b98:	cmp	w23, #0x1
   12b9c:	b.eq	12bdc <elf_compress_gnu@@ELFUTILS_1.7+0x23c>  // b.none
   12ba0:	mov	x0, x19
   12ba4:	bl	3150 <elf64_getshdr@plt>
   12ba8:	ldr	x1, [sp, #96]
   12bac:	str	x1, [x0, #32]
   12bb0:	mov	w4, #0x0                   	// #0
   12bb4:	mov	x3, #0x1                   	// #1
   12bb8:	ldr	x2, [sp, #96]
   12bbc:	mov	x1, x20
   12bc0:	mov	x0, x19
   12bc4:	bl	12564 <gelf_getchdr@@ELFUTILS_1.7+0x688>
   12bc8:	str	xzr, [x19, #176]
   12bcc:	mov	w0, w21
   12bd0:	ldp	x23, x24, [sp, #48]
   12bd4:	ldp	x25, x26, [sp, #64]
   12bd8:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12bdc:	mov	x0, x19
   12be0:	bl	32e0 <elf32_getshdr@plt>
   12be4:	ldr	x1, [sp, #96]
   12be8:	str	w1, [x0, #20]
   12bec:	b	12bb0 <elf_compress_gnu@@ELFUTILS_1.7+0x210>
   12bf0:	mov	w0, #0x0                   	// #0
   12bf4:	ldp	x23, x24, [sp, #48]
   12bf8:	ldp	x25, x26, [sp, #64]
   12bfc:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12c00:	mov	w0, #0x2e                  	// #46
   12c04:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12c08:	mov	w0, #0xffffffff            	// #-1
   12c0c:	ldp	x23, x24, [sp, #48]
   12c10:	ldp	x25, x26, [sp, #64]
   12c14:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12c18:	mov	w0, #0x2e                  	// #46
   12c1c:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12c20:	mov	w0, #0xffffffff            	// #-1
   12c24:	ldp	x23, x24, [sp, #48]
   12c28:	ldp	x25, x26, [sp, #64]
   12c2c:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12c30:	mov	x0, x19
   12c34:	bl	32e0 <elf32_getshdr@plt>
   12c38:	str	w20, [x0, #20]
   12c3c:	b	12aa8 <elf_compress_gnu@@ELFUTILS_1.7+0x108>
   12c40:	mov	w0, #0x30                  	// #48
   12c44:	bl	35b4 <elf_errno@@ELFUTILS_1.0+0x30>
   12c48:	mov	w0, #0xffffffff            	// #-1
   12c4c:	ldp	x23, x24, [sp, #48]
   12c50:	ldp	x25, x26, [sp, #64]
   12c54:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12c58:	mov	w0, #0xffffffff            	// #-1
   12c5c:	ret
   12c60:	mov	w0, #0xffffffff            	// #-1
   12c64:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12c68:	mov	w0, #0xffffffff            	// #-1
   12c6c:	ldp	x23, x24, [sp, #48]
   12c70:	ldp	x25, x26, [sp, #64]
   12c74:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12c78:	mov	w0, #0xffffffff            	// #-1
   12c7c:	ldp	x23, x24, [sp, #48]
   12c80:	ldp	x25, x26, [sp, #64]
   12c84:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12c88:	mov	w0, #0xffffffff            	// #-1
   12c8c:	ldp	x23, x24, [sp, #48]
   12c90:	ldp	x25, x26, [sp, #64]
   12c94:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12c98:	ldp	x23, x24, [sp, #48]
   12c9c:	ldp	x25, x26, [sp, #64]
   12ca0:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>
   12ca4:	ldp	x23, x24, [sp, #48]
   12ca8:	ldp	x25, x26, [sp, #64]
   12cac:	b	12af0 <elf_compress_gnu@@ELFUTILS_1.7+0x150>

Disassembly of section .fini:

0000000000012cb0 <.fini>:
   12cb0:	stp	x29, x30, [sp, #-16]!
   12cb4:	mov	x29, sp
   12cb8:	ldp	x29, x30, [sp], #16
   12cbc:	ret
