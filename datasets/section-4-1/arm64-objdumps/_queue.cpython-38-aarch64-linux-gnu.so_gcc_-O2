
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_queue.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000011c0 <.init>:
    11c0:	stp	x29, x30, [sp, #-16]!
    11c4:	mov	x29, sp
    11c8:	bl	13f0 <PyObject_GC_UnTrack@plt+0x10>
    11cc:	ldp	x29, x30, [sp], #16
    11d0:	ret

Disassembly of section .plt:

00000000000011e0 <PyList_New@plt-0x20>:
    11e0:	stp	x16, x30, [sp, #-16]!
    11e4:	adrp	x16, 12000 <PyInit__queue@@Base+0x103c0>
    11e8:	ldr	x17, [x16, #4088]
    11ec:	add	x16, x16, #0xff8
    11f0:	br	x17
    11f4:	nop
    11f8:	nop
    11fc:	nop

0000000000001200 <PyList_New@plt>:
    1200:	adrp	x16, 13000 <PyList_New>
    1204:	ldr	x17, [x16]
    1208:	add	x16, x16, #0x0
    120c:	br	x17

0000000000001210 <PyObject_ClearWeakRefs@plt>:
    1210:	adrp	x16, 13000 <PyList_New>
    1214:	ldr	x17, [x16, #8]
    1218:	add	x16, x16, #0x8
    121c:	br	x17

0000000000001220 <PyEval_RestoreThread@plt>:
    1220:	adrp	x16, 13000 <PyList_New>
    1224:	ldr	x17, [x16, #16]
    1228:	add	x16, x16, #0x10
    122c:	br	x17

0000000000001230 <__cxa_finalize@plt>:
    1230:	adrp	x16, 13000 <PyList_New>
    1234:	ldr	x17, [x16, #24]
    1238:	add	x16, x16, #0x18
    123c:	br	x17

0000000000001240 <PyList_SetSlice@plt>:
    1240:	adrp	x16, 13000 <PyList_New>
    1244:	ldr	x17, [x16, #32]
    1248:	add	x16, x16, #0x20
    124c:	br	x17

0000000000001250 <_Py_Dealloc@plt>:
    1250:	adrp	x16, 13000 <PyList_New>
    1254:	ldr	x17, [x16, #40]
    1258:	add	x16, x16, #0x28
    125c:	br	x17

0000000000001260 <PyErr_NewExceptionWithDoc@plt>:
    1260:	adrp	x16, 13000 <PyList_New>
    1264:	ldr	x17, [x16, #48]
    1268:	add	x16, x16, #0x30
    126c:	br	x17

0000000000001270 <_PyArg_UnpackKeywords@plt>:
    1270:	adrp	x16, 13000 <PyList_New>
    1274:	ldr	x17, [x16, #56]
    1278:	add	x16, x16, #0x38
    127c:	br	x17

0000000000001280 <PyErr_SetString@plt>:
    1280:	adrp	x16, 13000 <PyList_New>
    1284:	ldr	x17, [x16, #64]
    1288:	add	x16, x16, #0x40
    128c:	br	x17

0000000000001290 <PyThread_acquire_lock_timed@plt>:
    1290:	adrp	x16, 13000 <PyList_New>
    1294:	ldr	x17, [x16, #72]
    1298:	add	x16, x16, #0x48
    129c:	br	x17

00000000000012a0 <PyErr_SetNone@plt>:
    12a0:	adrp	x16, 13000 <PyList_New>
    12a4:	ldr	x17, [x16, #80]
    12a8:	add	x16, x16, #0x50
    12ac:	br	x17

00000000000012b0 <_PyTime_FromSecondsObject@plt>:
    12b0:	adrp	x16, 13000 <PyList_New>
    12b4:	ldr	x17, [x16, #88]
    12b8:	add	x16, x16, #0x58
    12bc:	br	x17

00000000000012c0 <PyLong_FromSsize_t@plt>:
    12c0:	adrp	x16, 13000 <PyList_New>
    12c4:	ldr	x17, [x16, #96]
    12c8:	add	x16, x16, #0x60
    12cc:	br	x17

00000000000012d0 <PyType_Ready@plt>:
    12d0:	adrp	x16, 13000 <PyList_New>
    12d4:	ldr	x17, [x16, #104]
    12d8:	add	x16, x16, #0x68
    12dc:	br	x17

00000000000012e0 <PyBool_FromLong@plt>:
    12e0:	adrp	x16, 13000 <PyList_New>
    12e4:	ldr	x17, [x16, #112]
    12e8:	add	x16, x16, #0x70
    12ec:	br	x17

00000000000012f0 <_PyArg_NoPositional@plt>:
    12f0:	adrp	x16, 13000 <PyList_New>
    12f4:	ldr	x17, [x16, #120]
    12f8:	add	x16, x16, #0x78
    12fc:	br	x17

0000000000001300 <PyList_Append@plt>:
    1300:	adrp	x16, 13000 <PyList_New>
    1304:	ldr	x17, [x16, #128]
    1308:	add	x16, x16, #0x80
    130c:	br	x17

0000000000001310 <Py_MakePendingCalls@plt>:
    1310:	adrp	x16, 13000 <PyList_New>
    1314:	ldr	x17, [x16, #136]
    1318:	add	x16, x16, #0x88
    131c:	br	x17

0000000000001320 <__gmon_start__@plt>:
    1320:	adrp	x16, 13000 <PyList_New>
    1324:	ldr	x17, [x16, #144]
    1328:	add	x16, x16, #0x90
    132c:	br	x17

0000000000001330 <PyErr_Occurred@plt>:
    1330:	adrp	x16, 13000 <PyList_New>
    1334:	ldr	x17, [x16, #152]
    1338:	add	x16, x16, #0x98
    133c:	br	x17

0000000000001340 <PyModule_Create2@plt>:
    1340:	adrp	x16, 13000 <PyList_New>
    1344:	ldr	x17, [x16, #160]
    1348:	add	x16, x16, #0xa0
    134c:	br	x17

0000000000001350 <PyObject_IsTrue@plt>:
    1350:	adrp	x16, 13000 <PyList_New>
    1354:	ldr	x17, [x16, #168]
    1358:	add	x16, x16, #0xa8
    135c:	br	x17

0000000000001360 <PyThread_allocate_lock@plt>:
    1360:	adrp	x16, 13000 <PyList_New>
    1364:	ldr	x17, [x16, #176]
    1368:	add	x16, x16, #0xb0
    136c:	br	x17

0000000000001370 <PyThread_release_lock@plt>:
    1370:	adrp	x16, 13000 <PyList_New>
    1374:	ldr	x17, [x16, #184]
    1378:	add	x16, x16, #0xb8
    137c:	br	x17

0000000000001380 <PyEval_SaveThread@plt>:
    1380:	adrp	x16, 13000 <PyList_New>
    1384:	ldr	x17, [x16, #192]
    1388:	add	x16, x16, #0xc0
    138c:	br	x17

0000000000001390 <PyModule_AddObject@plt>:
    1390:	adrp	x16, 13000 <PyList_New>
    1394:	ldr	x17, [x16, #200]
    1398:	add	x16, x16, #0xc8
    139c:	br	x17

00000000000013a0 <_PyTime_AsMicroseconds@plt>:
    13a0:	adrp	x16, 13000 <PyList_New>
    13a4:	ldr	x17, [x16, #208]
    13a8:	add	x16, x16, #0xd0
    13ac:	br	x17

00000000000013b0 <_PyArg_NoKeywords@plt>:
    13b0:	adrp	x16, 13000 <PyList_New>
    13b4:	ldr	x17, [x16, #216]
    13b8:	add	x16, x16, #0xd8
    13bc:	br	x17

00000000000013c0 <_PyTime_GetMonotonicClock@plt>:
    13c0:	adrp	x16, 13000 <PyList_New>
    13c4:	ldr	x17, [x16, #224]
    13c8:	add	x16, x16, #0xe0
    13cc:	br	x17

00000000000013d0 <PyThread_free_lock@plt>:
    13d0:	adrp	x16, 13000 <PyList_New>
    13d4:	ldr	x17, [x16, #232]
    13d8:	add	x16, x16, #0xe8
    13dc:	br	x17

00000000000013e0 <PyObject_GC_UnTrack@plt>:
    13e0:	adrp	x16, 13000 <PyList_New>
    13e4:	ldr	x17, [x16, #240]
    13e8:	add	x16, x16, #0xf0
    13ec:	br	x17

Disassembly of section .text:

00000000000013f0 <PyInit__queue@@Base-0x850>:
    13f0:	adrp	x0, 12000 <PyInit__queue@@Base+0x103c0>
    13f4:	ldr	x0, [x0, #4040]
    13f8:	cbz	x0, 1400 <PyObject_GC_UnTrack@plt+0x20>
    13fc:	b	1320 <__gmon_start__@plt>
    1400:	ret
    1404:	nop
    1408:	adrp	x0, 13000 <PyInit__queue@@Base+0x113c0>
    140c:	add	x0, x0, #0x4a8
    1410:	adrp	x1, 13000 <PyInit__queue@@Base+0x113c0>
    1414:	add	x1, x1, #0x4a8
    1418:	cmp	x1, x0
    141c:	b.eq	1434 <PyObject_GC_UnTrack@plt+0x54>  // b.none
    1420:	adrp	x1, 12000 <PyInit__queue@@Base+0x103c0>
    1424:	ldr	x1, [x1, #4008]
    1428:	cbz	x1, 1434 <PyObject_GC_UnTrack@plt+0x54>
    142c:	mov	x16, x1
    1430:	br	x16
    1434:	ret
    1438:	adrp	x0, 13000 <PyInit__queue@@Base+0x113c0>
    143c:	add	x0, x0, #0x4a8
    1440:	adrp	x1, 13000 <PyInit__queue@@Base+0x113c0>
    1444:	add	x1, x1, #0x4a8
    1448:	sub	x1, x1, x0
    144c:	lsr	x2, x1, #63
    1450:	add	x1, x2, x1, asr #3
    1454:	cmp	xzr, x1, asr #1
    1458:	asr	x1, x1, #1
    145c:	b.eq	1474 <PyObject_GC_UnTrack@plt+0x94>  // b.none
    1460:	adrp	x2, 12000 <PyInit__queue@@Base+0x103c0>
    1464:	ldr	x2, [x2, #4064]
    1468:	cbz	x2, 1474 <PyObject_GC_UnTrack@plt+0x94>
    146c:	mov	x16, x2
    1470:	br	x16
    1474:	ret
    1478:	stp	x29, x30, [sp, #-32]!
    147c:	mov	x29, sp
    1480:	str	x19, [sp, #16]
    1484:	adrp	x19, 13000 <PyInit__queue@@Base+0x113c0>
    1488:	ldrb	w0, [x19, #1192]
    148c:	cbnz	w0, 14b4 <PyObject_GC_UnTrack@plt+0xd4>
    1490:	adrp	x0, 12000 <PyInit__queue@@Base+0x103c0>
    1494:	ldr	x0, [x0, #4016]
    1498:	cbz	x0, 14a8 <PyObject_GC_UnTrack@plt+0xc8>
    149c:	adrp	x0, 13000 <PyInit__queue@@Base+0x113c0>
    14a0:	ldr	x0, [x0, #248]
    14a4:	bl	1230 <__cxa_finalize@plt>
    14a8:	bl	1408 <PyObject_GC_UnTrack@plt+0x28>
    14ac:	mov	w0, #0x1                   	// #1
    14b0:	strb	w0, [x19, #1192]
    14b4:	ldr	x19, [sp, #16]
    14b8:	ldp	x29, x30, [sp], #32
    14bc:	ret
    14c0:	b	1438 <PyObject_GC_UnTrack@plt+0x58>
    14c4:	nop
    14c8:	ldr	x0, [x0, #32]
    14cc:	mov	x3, x1
    14d0:	mov	x1, x2
    14d4:	cbz	x0, 14e0 <PyObject_GC_UnTrack@plt+0x100>
    14d8:	mov	x16, x3
    14dc:	br	x16
    14e0:	mov	w0, #0x0                   	// #0
    14e4:	ret
    14e8:	stp	x29, x30, [sp, #-32]!
    14ec:	mov	x29, sp
    14f0:	stp	x19, x20, [sp, #16]
    14f4:	mov	x19, x0
    14f8:	adrp	x0, 13000 <PyInit__queue@@Base+0x113c0>
    14fc:	add	x0, x0, #0x100
    1500:	cmp	x19, x0
    1504:	b.eq	1568 <PyObject_GC_UnTrack@plt+0x188>  // b.none
    1508:	ldr	x2, [x19, #304]
    150c:	mov	x0, x19
    1510:	mov	x1, #0x0                   	// #0
    1514:	blr	x2
    1518:	mov	x19, x0
    151c:	cbz	x0, 1598 <PyObject_GC_UnTrack@plt+0x1b8>
    1520:	str	xzr, [x19, #48]
    1524:	mov	x0, #0x0                   	// #0
    1528:	bl	1200 <PyList_New@plt>
    152c:	str	x0, [x19, #32]
    1530:	bl	1360 <PyThread_allocate_lock@plt>
    1534:	str	x0, [x19, #16]
    1538:	str	xzr, [x19, #40]
    153c:	cbz	x0, 15ac <PyObject_GC_UnTrack@plt+0x1cc>
    1540:	ldr	x0, [x19, #32]
    1544:	cbnz	x0, 159c <PyObject_GC_UnTrack@plt+0x1bc>
    1548:	ldr	x0, [x19]
    154c:	sub	x0, x0, #0x1
    1550:	str	x0, [x19]
    1554:	cbnz	x0, 1598 <PyObject_GC_UnTrack@plt+0x1b8>
    1558:	mov	x0, x19
    155c:	mov	x19, #0x0                   	// #0
    1560:	bl	1250 <_Py_Dealloc@plt>
    1564:	b	159c <PyObject_GC_UnTrack@plt+0x1bc>
    1568:	mov	x20, x2
    156c:	cbz	x1, 1580 <PyObject_GC_UnTrack@plt+0x1a0>
    1570:	adrp	x0, 1000 <PyList_New@plt-0x200>
    1574:	add	x0, x0, #0xd10
    1578:	bl	12f0 <_PyArg_NoPositional@plt>
    157c:	cbz	w0, 1598 <PyObject_GC_UnTrack@plt+0x1b8>
    1580:	cbz	x20, 1508 <PyObject_GC_UnTrack@plt+0x128>
    1584:	adrp	x0, 1000 <PyList_New@plt-0x200>
    1588:	mov	x1, x20
    158c:	add	x0, x0, #0xd10
    1590:	bl	13b0 <_PyArg_NoKeywords@plt>
    1594:	cbnz	w0, 1508 <PyObject_GC_UnTrack@plt+0x128>
    1598:	mov	x19, #0x0                   	// #0
    159c:	mov	x0, x19
    15a0:	ldp	x19, x20, [sp, #16]
    15a4:	ldp	x29, x30, [sp], #32
    15a8:	ret
    15ac:	ldr	x0, [x19]
    15b0:	sub	x0, x0, #0x1
    15b4:	str	x0, [x19]
    15b8:	cbz	x0, 15dc <PyObject_GC_UnTrack@plt+0x1fc>
    15bc:	adrp	x0, 12000 <PyInit__queue@@Base+0x103c0>
    15c0:	adrp	x1, 1000 <PyList_New@plt-0x200>
    15c4:	mov	x19, #0x0                   	// #0
    15c8:	add	x1, x1, #0xd20
    15cc:	ldr	x0, [x0, #4024]
    15d0:	ldr	x0, [x0]
    15d4:	bl	1280 <PyErr_SetString@plt>
    15d8:	b	159c <PyObject_GC_UnTrack@plt+0x1bc>
    15dc:	mov	x0, x19
    15e0:	bl	1250 <_Py_Dealloc@plt>
    15e4:	b	15bc <PyObject_GC_UnTrack@plt+0x1dc>
    15e8:	stp	x29, x30, [sp, #-32]!
    15ec:	mov	x29, sp
    15f0:	ldp	x1, x0, [x0, #32]
    15f4:	str	x19, [sp, #16]
    15f8:	ldr	x19, [x1, #16]
    15fc:	sub	x19, x19, x0
    1600:	cmn	x19, #0x1
    1604:	b.eq	1618 <PyObject_GC_UnTrack@plt+0x238>  // b.none
    1608:	mov	x0, x19
    160c:	ldr	x19, [sp, #16]
    1610:	ldp	x29, x30, [sp], #32
    1614:	b	12c0 <PyLong_FromSsize_t@plt>
    1618:	bl	1330 <PyErr_Occurred@plt>
    161c:	cbz	x0, 1608 <PyObject_GC_UnTrack@plt+0x228>
    1620:	mov	x0, #0x0                   	// #0
    1624:	ldr	x19, [sp, #16]
    1628:	ldp	x29, x30, [sp], #32
    162c:	ret
    1630:	ldp	x1, x0, [x0, #32]
    1634:	ldr	x1, [x1, #16]
    1638:	cmp	x1, x0
    163c:	cset	x0, eq  // eq = none
    1640:	b	12e0 <PyBool_FromLong@plt>
    1644:	nop
    1648:	stp	x29, x30, [sp, #-32]!
    164c:	mov	x29, sp
    1650:	str	x19, [sp, #16]
    1654:	mov	x19, x0
    1658:	bl	13e0 <PyObject_GC_UnTrack@plt>
    165c:	ldr	x0, [x19, #16]
    1660:	cbz	x0, 1674 <PyObject_GC_UnTrack@plt+0x294>
    1664:	ldr	w1, [x19, #24]
    1668:	cmp	w1, #0x0
    166c:	b.gt	16b8 <PyObject_GC_UnTrack@plt+0x2d8>
    1670:	bl	13d0 <PyThread_free_lock@plt>
    1674:	ldr	x0, [x19, #32]
    1678:	cbz	x0, 168c <PyObject_GC_UnTrack@plt+0x2ac>
    167c:	ldr	x1, [x0]
    1680:	sub	x1, x1, #0x1
    1684:	str	x1, [x0]
    1688:	cbz	x1, 16c4 <PyObject_GC_UnTrack@plt+0x2e4>
    168c:	ldr	x0, [x19, #48]
    1690:	cbz	x0, 169c <PyObject_GC_UnTrack@plt+0x2bc>
    1694:	mov	x0, x19
    1698:	bl	1210 <PyObject_ClearWeakRefs@plt>
    169c:	ldr	x1, [x19, #8]
    16a0:	mov	x0, x19
    16a4:	ldr	x19, [sp, #16]
    16a8:	ldp	x29, x30, [sp], #32
    16ac:	ldr	x1, [x1, #320]
    16b0:	mov	x16, x1
    16b4:	br	x16
    16b8:	bl	1370 <PyThread_release_lock@plt>
    16bc:	ldr	x0, [x19, #16]
    16c0:	b	1670 <PyObject_GC_UnTrack@plt+0x290>
    16c4:	bl	1250 <_Py_Dealloc@plt>
    16c8:	b	168c <PyObject_GC_UnTrack@plt+0x2ac>
    16cc:	nop
    16d0:	stp	x29, x30, [sp, #-32]!
    16d4:	mov	x29, sp
    16d8:	str	x19, [sp, #16]
    16dc:	mov	x19, x0
    16e0:	ldr	x0, [x0, #32]
    16e4:	bl	1300 <PyList_Append@plt>
    16e8:	tbnz	w0, #31, 1728 <PyObject_GC_UnTrack@plt+0x348>
    16ec:	ldr	w0, [x19, #24]
    16f0:	cbnz	w0, 1718 <PyObject_GC_UnTrack@plt+0x338>
    16f4:	adrp	x1, 12000 <PyInit__queue@@Base+0x103c0>
    16f8:	ldr	x19, [sp, #16]
    16fc:	ldr	x1, [x1, #4056]
    1700:	mov	x0, x1
    1704:	ldr	x2, [x1]
    1708:	add	x2, x2, #0x1
    170c:	str	x2, [x1]
    1710:	ldp	x29, x30, [sp], #32
    1714:	ret
    1718:	ldr	x0, [x19, #16]
    171c:	str	wzr, [x19, #24]
    1720:	bl	1370 <PyThread_release_lock@plt>
    1724:	b	16f4 <PyObject_GC_UnTrack@plt+0x314>
    1728:	mov	x0, #0x0                   	// #0
    172c:	ldr	x19, [sp, #16]
    1730:	ldp	x29, x30, [sp], #32
    1734:	ret
    1738:	sub	sp, sp, #0x40
    173c:	cmp	x3, #0x0
    1740:	ccmp	x2, #0x1, #0x0, eq  // eq = none
    1744:	mov	x5, x1
    1748:	stp	x29, x30, [sp, #16]
    174c:	add	x29, sp, #0x10
    1750:	str	x19, [sp, #32]
    1754:	mov	x19, x0
    1758:	b.ne	177c <PyObject_GC_UnTrack@plt+0x39c>  // b.any
    175c:	cbz	x1, 177c <PyObject_GC_UnTrack@plt+0x39c>
    1760:	ldr	x1, [x5]
    1764:	mov	x0, x19
    1768:	bl	16d0 <PyObject_GC_UnTrack@plt+0x2f0>
    176c:	ldp	x29, x30, [sp, #16]
    1770:	ldr	x19, [sp, #32]
    1774:	add	sp, sp, #0x40
    1778:	ret
    177c:	add	x0, sp, #0x38
    1780:	str	x0, [sp]
    1784:	adrp	x4, 13000 <PyInit__queue@@Base+0x113c0>
    1788:	add	x4, x4, #0x100
    178c:	mov	x1, x2
    1790:	mov	x0, x5
    1794:	mov	w6, #0x1                   	// #1
    1798:	add	x4, x4, #0x1a0
    179c:	mov	w5, w6
    17a0:	mov	w7, #0x0                   	// #0
    17a4:	mov	x2, #0x0                   	// #0
    17a8:	bl	1270 <_PyArg_UnpackKeywords@plt>
    17ac:	mov	x5, x0
    17b0:	mov	x0, #0x0                   	// #0
    17b4:	cbnz	x5, 1760 <PyObject_GC_UnTrack@plt+0x380>
    17b8:	ldp	x29, x30, [sp, #16]
    17bc:	ldr	x19, [sp, #32]
    17c0:	add	sp, sp, #0x40
    17c4:	ret
    17c8:	sub	sp, sp, #0x50
    17cc:	stp	x29, x30, [sp, #16]
    17d0:	add	x29, sp, #0x10
    17d4:	stp	x19, x20, [sp, #32]
    17d8:	mov	x19, x0
    17dc:	mov	x0, x1
    17e0:	mov	x1, x2
    17e4:	cbz	x3, 1854 <PyObject_GC_UnTrack@plt+0x474>
    17e8:	ldr	x20, [x3, #16]
    17ec:	add	x20, x2, x20
    17f0:	add	x2, sp, #0x38
    17f4:	str	x2, [sp]
    17f8:	adrp	x4, 13000 <PyInit__queue@@Base+0x113c0>
    17fc:	add	x4, x4, #0x100
    1800:	add	x4, x4, #0x1e0
    1804:	mov	w7, #0x0                   	// #0
    1808:	mov	w6, #0x3                   	// #3
    180c:	mov	w5, #0x1                   	// #1
    1810:	mov	x2, #0x0                   	// #0
    1814:	bl	1270 <_PyArg_UnpackKeywords@plt>
    1818:	cbz	x0, 186c <PyObject_GC_UnTrack@plt+0x48c>
    181c:	cmp	x20, #0x1
    1820:	ldr	x20, [x0]
    1824:	b.eq	1838 <PyObject_GC_UnTrack@plt+0x458>  // b.none
    1828:	ldr	x0, [x0, #8]
    182c:	cbz	x0, 1838 <PyObject_GC_UnTrack@plt+0x458>
    1830:	bl	1350 <PyObject_IsTrue@plt>
    1834:	tbnz	w0, #31, 186c <PyObject_GC_UnTrack@plt+0x48c>
    1838:	mov	x1, x20
    183c:	mov	x0, x19
    1840:	bl	16d0 <PyObject_GC_UnTrack@plt+0x2f0>
    1844:	ldp	x29, x30, [sp, #16]
    1848:	ldp	x19, x20, [sp, #32]
    184c:	add	sp, sp, #0x50
    1850:	ret
    1854:	sub	x2, x2, #0x1
    1858:	mov	x20, x1
    185c:	cmp	x2, #0x2
    1860:	b.hi	17f0 <PyObject_GC_UnTrack@plt+0x410>  // b.pmore
    1864:	cbnz	x0, 181c <PyObject_GC_UnTrack@plt+0x43c>
    1868:	b	17f0 <PyObject_GC_UnTrack@plt+0x410>
    186c:	mov	x0, #0x0                   	// #0
    1870:	ldp	x29, x30, [sp, #16]
    1874:	ldp	x19, x20, [sp, #32]
    1878:	add	sp, sp, #0x50
    187c:	ret
    1880:	stp	x29, x30, [sp, #-80]!
    1884:	mov	x29, sp
    1888:	stp	x19, x20, [sp, #16]
    188c:	mov	x20, x0
    1890:	stp	x21, x22, [sp, #32]
    1894:	cbz	w1, 1998 <PyObject_GC_UnTrack@plt+0x5b8>
    1898:	adrp	x0, 12000 <PyInit__queue@@Base+0x103c0>
    189c:	ldr	x0, [x0, #4056]
    18a0:	cmp	x2, x0
    18a4:	b.eq	19a8 <PyObject_GC_UnTrack@plt+0x5c8>  // b.none
    18a8:	mov	x1, x2
    18ac:	add	x0, sp, #0x48
    18b0:	mov	w2, #0x1                   	// #1
    18b4:	bl	12b0 <_PyTime_FromSecondsObject@plt>
    18b8:	tbnz	w0, #31, 1980 <PyObject_GC_UnTrack@plt+0x5a0>
    18bc:	ldr	x0, [sp, #72]
    18c0:	tbnz	x0, #63, 1ab4 <PyObject_GC_UnTrack@plt+0x6d4>
    18c4:	mov	w1, #0x1                   	// #1
    18c8:	bl	13a0 <_PyTime_AsMicroseconds@plt>
    18cc:	mov	x21, x0
    18d0:	mov	x0, #0x53f6                	// #21494
    18d4:	movk	x0, #0xa5e3, lsl #16
    18d8:	movk	x0, #0xc49b, lsl #32
    18dc:	movk	x0, #0x20, lsl #48
    18e0:	cmp	x21, x0
    18e4:	b.gt	1a94 <PyObject_GC_UnTrack@plt+0x6b4>
    18e8:	stp	x23, x24, [sp, #48]
    18ec:	bl	13c0 <_PyTime_GetMonotonicClock@plt>
    18f0:	ldr	x1, [sp, #72]
    18f4:	add	x22, x0, x1
    18f8:	mov	w23, #0x1                   	// #1
    18fc:	b	1918 <PyObject_GC_UnTrack@plt+0x538>
    1900:	cmp	w19, #0x2
    1904:	b.eq	1974 <PyObject_GC_UnTrack@plt+0x594>  // b.none
    1908:	cbz	w19, 1a0c <PyObject_GC_UnTrack@plt+0x62c>
    190c:	str	w23, [x20, #24]
    1910:	cmp	x22, #0x0
    1914:	b.gt	1a34 <PyObject_GC_UnTrack@plt+0x654>
    1918:	ldp	x5, x3, [x20, #32]
    191c:	mov	w2, #0x0                   	// #0
    1920:	mov	x1, #0x0                   	// #0
    1924:	ldr	x4, [x5, #16]
    1928:	cmp	x3, x4
    192c:	b.ne	19b8 <PyObject_GC_UnTrack@plt+0x5d8>  // b.any
    1930:	ldr	x0, [x20, #16]
    1934:	bl	1290 <PyThread_acquire_lock_timed@plt>
    1938:	cmp	w0, #0x0
    193c:	mov	w19, w0
    1940:	ccmp	x21, #0x0, #0x4, eq  // eq = none
    1944:	b.eq	1900 <PyObject_GC_UnTrack@plt+0x520>  // b.none
    1948:	bl	1380 <PyEval_SaveThread@plt>
    194c:	mov	x24, x0
    1950:	ldr	x0, [x20, #16]
    1954:	mov	x1, x21
    1958:	mov	w2, #0x1                   	// #1
    195c:	bl	1290 <PyThread_acquire_lock_timed@plt>
    1960:	mov	w19, w0
    1964:	mov	x0, x24
    1968:	bl	1220 <PyEval_RestoreThread@plt>
    196c:	cmp	w19, #0x2
    1970:	b.ne	1908 <PyObject_GC_UnTrack@plt+0x528>  // b.any
    1974:	bl	1310 <Py_MakePendingCalls@plt>
    1978:	tbz	w0, #31, 190c <PyObject_GC_UnTrack@plt+0x52c>
    197c:	ldp	x23, x24, [sp, #48]
    1980:	mov	x19, #0x0                   	// #0
    1984:	mov	x0, x19
    1988:	ldp	x19, x20, [sp, #16]
    198c:	ldp	x21, x22, [sp, #32]
    1990:	ldp	x29, x30, [sp], #80
    1994:	ret
    1998:	mov	x21, #0x0                   	// #0
    199c:	mov	x22, #0x0                   	// #0
    19a0:	stp	x23, x24, [sp, #48]
    19a4:	b	18f8 <PyObject_GC_UnTrack@plt+0x518>
    19a8:	mov	x21, #0xffffffffffffffff    	// #-1
    19ac:	mov	x22, #0x0                   	// #0
    19b0:	stp	x23, x24, [sp, #48]
    19b4:	b	18f8 <PyObject_GC_UnTrack@plt+0x518>
    19b8:	adrp	x0, 12000 <PyInit__queue@@Base+0x103c0>
    19bc:	add	x2, x3, #0x1
    19c0:	ldr	x5, [x5, #24]
    19c4:	sub	x4, x4, x2
    19c8:	ldr	x0, [x0, #4056]
    19cc:	cmp	x2, x4
    19d0:	ldr	x19, [x5, x3, lsl #3]
    19d4:	ldr	x1, [x0]
    19d8:	add	x1, x1, #0x1
    19dc:	str	x1, [x0]
    19e0:	str	x0, [x5, x3, lsl #3]
    19e4:	str	x2, [x20, #40]
    19e8:	b.gt	1a50 <PyObject_GC_UnTrack@plt+0x670>
    19ec:	ldr	w0, [x20, #24]
    19f0:	cbnz	w0, 1a70 <PyObject_GC_UnTrack@plt+0x690>
    19f4:	ldp	x23, x24, [sp, #48]
    19f8:	mov	x0, x19
    19fc:	ldp	x19, x20, [sp, #16]
    1a00:	ldp	x21, x22, [sp, #32]
    1a04:	ldp	x29, x30, [sp], #80
    1a08:	ret
    1a0c:	adrp	x0, 13000 <PyInit__queue@@Base+0x113c0>
    1a10:	mov	x19, #0x0                   	// #0
    1a14:	ldr	x0, [x0, #1200]
    1a18:	bl	12a0 <PyErr_SetNone@plt>
    1a1c:	mov	x0, x19
    1a20:	ldp	x19, x20, [sp, #16]
    1a24:	ldp	x21, x22, [sp, #32]
    1a28:	ldp	x23, x24, [sp, #48]
    1a2c:	ldp	x29, x30, [sp], #80
    1a30:	ret
    1a34:	bl	13c0 <_PyTime_GetMonotonicClock@plt>
    1a38:	sub	x0, x22, x0
    1a3c:	mov	w1, #0x1                   	// #1
    1a40:	str	x0, [sp, #72]
    1a44:	bl	13a0 <_PyTime_AsMicroseconds@plt>
    1a48:	mov	x21, x0
    1a4c:	b	1918 <PyObject_GC_UnTrack@plt+0x538>
    1a50:	ldr	x0, [x20, #32]
    1a54:	mov	x3, #0x0                   	// #0
    1a58:	mov	x1, #0x0                   	// #0
    1a5c:	bl	1240 <PyList_SetSlice@plt>
    1a60:	cbnz	w0, 1ad4 <PyObject_GC_UnTrack@plt+0x6f4>
    1a64:	ldr	w0, [x20, #24]
    1a68:	str	xzr, [x20, #40]
    1a6c:	cbz	w0, 19f4 <PyObject_GC_UnTrack@plt+0x614>
    1a70:	ldr	x0, [x20, #16]
    1a74:	bl	1370 <PyThread_release_lock@plt>
    1a78:	ldp	x23, x24, [sp, #48]
    1a7c:	str	wzr, [x20, #24]
    1a80:	mov	x0, x19
    1a84:	ldp	x19, x20, [sp, #16]
    1a88:	ldp	x21, x22, [sp, #32]
    1a8c:	ldp	x29, x30, [sp], #80
    1a90:	ret
    1a94:	adrp	x0, 12000 <PyInit__queue@@Base+0x103c0>
    1a98:	adrp	x1, 1000 <PyList_New@plt-0x200>
    1a9c:	mov	x19, #0x0                   	// #0
    1aa0:	add	x1, x1, #0xd60
    1aa4:	ldr	x0, [x0, #4048]
    1aa8:	ldr	x0, [x0]
    1aac:	bl	1280 <PyErr_SetString@plt>
    1ab0:	b	19f8 <PyObject_GC_UnTrack@plt+0x618>
    1ab4:	adrp	x0, 12000 <PyInit__queue@@Base+0x103c0>
    1ab8:	adrp	x1, 1000 <PyList_New@plt-0x200>
    1abc:	mov	x19, #0x0                   	// #0
    1ac0:	add	x1, x1, #0xd38
    1ac4:	ldr	x0, [x0, #4032]
    1ac8:	ldr	x0, [x0]
    1acc:	bl	1280 <PyErr_SetString@plt>
    1ad0:	b	19f8 <PyObject_GC_UnTrack@plt+0x618>
    1ad4:	ldp	x1, x0, [x20, #32]
    1ad8:	ldr	x1, [x1, #24]
    1adc:	sub	x0, x0, #0x1
    1ae0:	str	x0, [x20, #40]
    1ae4:	str	x19, [x1, x0, lsl #3]
    1ae8:	mov	x19, #0x0                   	// #0
    1aec:	b	19ec <PyObject_GC_UnTrack@plt+0x60c>
    1af0:	adrp	x2, 12000 <PyInit__queue@@Base+0x103c0>
    1af4:	mov	w1, #0x0                   	// #0
    1af8:	ldr	x2, [x2, #4056]
    1afc:	b	1880 <PyObject_GC_UnTrack@plt+0x4a0>
    1b00:	sub	sp, sp, #0x60
    1b04:	stp	x29, x30, [sp, #16]
    1b08:	add	x29, sp, #0x10
    1b0c:	stp	x19, x20, [sp, #32]
    1b10:	mov	x19, x1
    1b14:	mov	x1, x2
    1b18:	str	x21, [sp, #48]
    1b1c:	mov	x2, x3
    1b20:	mov	x21, x0
    1b24:	cbz	x3, 1ba8 <PyObject_GC_UnTrack@plt+0x7c8>
    1b28:	ldr	x20, [x3, #16]
    1b2c:	add	x20, x1, x20
    1b30:	add	x0, sp, #0x50
    1b34:	str	x0, [sp]
    1b38:	adrp	x4, 13000 <PyInit__queue@@Base+0x113c0>
    1b3c:	add	x4, x4, #0x100
    1b40:	mov	x3, x2
    1b44:	mov	x0, x19
    1b48:	add	x4, x4, #0x220
    1b4c:	mov	w7, #0x0                   	// #0
    1b50:	mov	w6, #0x2                   	// #2
    1b54:	mov	w5, #0x0                   	// #0
    1b58:	mov	x2, #0x0                   	// #0
    1b5c:	bl	1270 <_PyArg_UnpackKeywords@plt>
    1b60:	mov	x19, x0
    1b64:	cbz	x0, 1bd8 <PyObject_GC_UnTrack@plt+0x7f8>
    1b68:	cbz	x20, 1bc0 <PyObject_GC_UnTrack@plt+0x7e0>
    1b6c:	ldr	x0, [x19]
    1b70:	cbz	x0, 1bd0 <PyObject_GC_UnTrack@plt+0x7f0>
    1b74:	bl	1350 <PyObject_IsTrue@plt>
    1b78:	mov	w1, w0
    1b7c:	tbnz	w0, #31, 1bd8 <PyObject_GC_UnTrack@plt+0x7f8>
    1b80:	cmp	x20, #0x1
    1b84:	b.eq	1bf0 <PyObject_GC_UnTrack@plt+0x810>  // b.none
    1b88:	ldr	x2, [x19, #8]
    1b8c:	mov	x0, x21
    1b90:	bl	1880 <PyObject_GC_UnTrack@plt+0x4a0>
    1b94:	ldp	x29, x30, [sp, #16]
    1b98:	ldp	x19, x20, [sp, #32]
    1b9c:	ldr	x21, [sp, #48]
    1ba0:	add	sp, sp, #0x60
    1ba4:	ret
    1ba8:	tbnz	x1, #63, 1bfc <PyObject_GC_UnTrack@plt+0x81c>
    1bac:	cmp	x19, #0x0
    1bb0:	mov	x20, x1
    1bb4:	ccmp	x1, #0x2, #0x0, ne  // ne = any
    1bb8:	b.gt	1b30 <PyObject_GC_UnTrack@plt+0x750>
    1bbc:	cbnz	x20, 1b6c <PyObject_GC_UnTrack@plt+0x78c>
    1bc0:	adrp	x2, 12000 <PyInit__queue@@Base+0x103c0>
    1bc4:	mov	w1, #0x1                   	// #1
    1bc8:	ldr	x2, [x2, #4056]
    1bcc:	b	1b8c <PyObject_GC_UnTrack@plt+0x7ac>
    1bd0:	mov	w1, #0x1                   	// #1
    1bd4:	b	1b88 <PyObject_GC_UnTrack@plt+0x7a8>
    1bd8:	mov	x0, #0x0                   	// #0
    1bdc:	ldp	x29, x30, [sp, #16]
    1be0:	ldp	x19, x20, [sp, #32]
    1be4:	ldr	x21, [sp, #48]
    1be8:	add	sp, sp, #0x60
    1bec:	ret
    1bf0:	adrp	x2, 12000 <PyInit__queue@@Base+0x103c0>
    1bf4:	ldr	x2, [x2, #4056]
    1bf8:	b	1b8c <PyObject_GC_UnTrack@plt+0x7ac>
    1bfc:	add	x0, sp, #0x50
    1c00:	str	x0, [sp]
    1c04:	adrp	x4, 13000 <PyInit__queue@@Base+0x113c0>
    1c08:	add	x4, x4, #0x100
    1c0c:	mov	x0, x19
    1c10:	add	x4, x4, #0x220
    1c14:	mov	w7, #0x0                   	// #0
    1c18:	mov	w6, #0x2                   	// #2
    1c1c:	mov	w5, #0x0                   	// #0
    1c20:	mov	x2, #0x0                   	// #0
    1c24:	str	x1, [sp, #72]
    1c28:	bl	1270 <_PyArg_UnpackKeywords@plt>
    1c2c:	mov	x19, x0
    1c30:	cbz	x0, 1bd8 <PyObject_GC_UnTrack@plt+0x7f8>
    1c34:	ldr	x1, [sp, #72]
    1c38:	mov	x20, x1
    1c3c:	b	1b6c <PyObject_GC_UnTrack@plt+0x78c>

0000000000001c40 <PyInit__queue@@Base>:
    1c40:	stp	x29, x30, [sp, #-48]!
    1c44:	mov	w1, #0x3f5                 	// #1013
    1c48:	mov	x29, sp
    1c4c:	stp	x19, x20, [sp, #16]
    1c50:	str	x21, [sp, #32]
    1c54:	adrp	x21, 13000 <PyInit__queue@@Base+0x113c0>
    1c58:	add	x20, x21, #0x100
    1c5c:	add	x0, x20, #0x260
    1c60:	bl	1340 <PyModule_Create2@plt>
    1c64:	cbz	x0, 1ce8 <PyInit__queue@@Base+0xa8>
    1c68:	mov	x2, #0x0                   	// #0
    1c6c:	mov	x19, x0
    1c70:	adrp	x1, 1000 <PyList_New@plt-0x200>
    1c74:	adrp	x0, 1000 <PyList_New@plt-0x200>
    1c78:	add	x1, x1, #0xd80
    1c7c:	add	x0, x0, #0xdb8
    1c80:	mov	x3, #0x0                   	// #0
    1c84:	bl	1260 <PyErr_NewExceptionWithDoc@plt>
    1c88:	adrp	x1, 13000 <PyInit__queue@@Base+0x113c0>
    1c8c:	mov	x2, x0
    1c90:	str	x0, [x1, #1200]
    1c94:	cbz	x0, 1ce8 <PyInit__queue@@Base+0xa8>
    1c98:	ldr	x3, [x2]
    1c9c:	adrp	x1, 1000 <PyList_New@plt-0x200>
    1ca0:	mov	x0, x19
    1ca4:	add	x1, x1, #0xdc8
    1ca8:	add	x3, x3, #0x1
    1cac:	str	x3, [x2]
    1cb0:	bl	1390 <PyModule_AddObject@plt>
    1cb4:	tbnz	w0, #31, 1ce8 <PyInit__queue@@Base+0xa8>
    1cb8:	mov	x0, x20
    1cbc:	bl	12d0 <PyType_Ready@plt>
    1cc0:	tbnz	w0, #31, 1ce8 <PyInit__queue@@Base+0xa8>
    1cc4:	ldr	x3, [x21, #256]
    1cc8:	adrp	x1, 1000 <PyList_New@plt-0x200>
    1ccc:	mov	x2, x20
    1cd0:	mov	x0, x19
    1cd4:	add	x3, x3, #0x1
    1cd8:	add	x1, x1, #0xd10
    1cdc:	str	x3, [x21, #256]
    1ce0:	bl	1390 <PyModule_AddObject@plt>
    1ce4:	tbz	w0, #31, 1cec <PyInit__queue@@Base+0xac>
    1ce8:	mov	x19, #0x0                   	// #0
    1cec:	mov	x0, x19
    1cf0:	ldp	x19, x20, [sp, #16]
    1cf4:	ldr	x21, [sp, #32]
    1cf8:	ldp	x29, x30, [sp], #48
    1cfc:	ret

Disassembly of section .fini:

0000000000001d00 <.fini>:
    1d00:	stp	x29, x30, [sp, #-16]!
    1d04:	mov	x29, sp
    1d08:	ldp	x29, x30, [sp], #16
    1d0c:	ret
