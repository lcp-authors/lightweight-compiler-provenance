
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//hfspluscomp.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x5f8>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	adrp	x1, 0 <grub_mod_init-0x5f8>
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	mov	w20, #0x0                   	// #0
  18:	ldr	x0, [x1]
  1c:	ldr	x1, [x19, #136]
  20:	ldp	x2, x3, [x0]
  24:	stp	x2, x3, [sp, #104]
  28:	ldrh	w2, [x0, #32]
  2c:	ldp	x4, x5, [x0, #16]
  30:	stp	x4, x5, [sp, #120]
  34:	strh	w2, [sp, #136]
  38:	cbz	x1, 4c <grub_mod_init-0x5ac>
  3c:	mov	w0, w20
  40:	ldp	x19, x20, [sp, #16]
  44:	ldp	x29, x30, [sp], #144
  48:	ret
  4c:	adrp	x1, 0 <grub_mod_init-0x5f8>
  50:	ldr	w6, [x19, #152]
  54:	str	w6, [sp, #80]
  58:	add	x6, sp, #0x68
  5c:	ldr	x2, [x1]
  60:	mov	x5, #0x11                  	// #17
  64:	ldr	x0, [x19]
  68:	add	x4, sp, #0x48
  6c:	add	x3, sp, #0x40
  70:	add	x1, sp, #0x50
  74:	add	x0, x0, #0x3c0
  78:	str	x6, [sp, #88]
  7c:	str	x5, [sp, #96]
  80:	bl	0 <grub_hfsplus_btree_search>
  84:	mov	w20, w0
  88:	cbnz	w0, 190 <grub_mod_init-0x468>
  8c:	ldr	x0, [sp, #64]
  90:	cbz	x0, 190 <grub_mod_init-0x468>
  94:	ldr	x1, [x19]
  98:	stp	x21, x22, [sp, #32]
  9c:	ldr	w2, [sp, #72]
  a0:	add	x2, x2, #0x1
  a4:	ldr	x3, [x1, #968]
  a8:	lsl	x2, x2, #1
  ac:	sub	x1, x2, #0x2
  b0:	cmp	x3, x2
  b4:	sub	x2, x3, #0x2
  b8:	csel	x1, x1, xzr, cs  // cs = hs, nlast
  bc:	sub	x3, x3, #0xe
  c0:	sub	x1, x2, x1
  c4:	ldrh	w21, [x0, x1]
  c8:	lsr	w1, w21, #8
  cc:	orr	w21, w1, w21, lsl #8
  d0:	cmp	x3, w21, uxth
  d4:	add	x21, x0, w21, uxth
  d8:	csel	x21, x21, x0, cs  // cs = hs, nlast
  dc:	add	x22, x21, #0x30
  e0:	ldrb	w1, [x21, #51]
  e4:	cmp	w1, #0x10
  e8:	b.ne	178 <grub_mod_init-0x480>  // b.any
  ec:	ldr	x1, [x22, #8]
  f0:	tst	x1, #0xf0ffffffffffffff
  f4:	b.eq	178 <grub_mod_init-0x480>  // b.none
  f8:	ldr	w2, [x21, #64]
  fc:	mov	w1, #0x7066                	// #28774
 100:	movk	w1, #0x636d, lsl #16
 104:	cmp	w2, w1
 108:	b.ne	178 <grub_mod_init-0x480>  // b.any
 10c:	ldp	w1, w2, [x21, #68]
 110:	str	x2, [x19, #136]
 114:	cmp	w1, #0x4
 118:	b.eq	1cc <grub_mod_init-0x42c>  // b.none
 11c:	cmp	w1, #0x3
 120:	b.ne	178 <grub_mod_init-0x480>  // b.any
 124:	mov	x0, x2
 128:	bl	0 <grub_malloc>
 12c:	str	x0, [x19, #168]
 130:	mov	x3, x0
 134:	cbz	x0, 250 <grub_mod_init-0x3a8>
 138:	ldr	x0, [x22, #8]
 13c:	mov	x2, #0x0                   	// #0
 140:	ldr	x4, [x19, #136]
 144:	rev	x0, x0
 148:	sub	x1, x0, #0x10
 14c:	add	x0, x21, #0x50
 150:	bl	0 <grub_zlib_decompress>
 154:	ldr	x1, [x19, #136]
 158:	cmp	x0, x1
 15c:	b.eq	264 <grub_mod_init-0x394>  // b.none
 160:	adrp	x0, 0 <grub_mod_init-0x5f8>
 164:	ldr	x19, [x0]
 168:	ldr	w20, [x19]
 16c:	cbz	w20, 1b0 <grub_mod_init-0x448>
 170:	ldp	x21, x22, [sp, #32]
 174:	b	3c <grub_mod_init-0x5bc>
 178:	bl	0 <grub_free>
 17c:	mov	w0, w20
 180:	ldp	x19, x20, [sp, #16]
 184:	ldp	x21, x22, [sp, #32]
 188:	ldp	x29, x30, [sp], #144
 18c:	ret
 190:	adrp	x0, 0 <grub_mod_init-0x5f8>
 194:	mov	w20, #0x0                   	// #0
 198:	ldr	x0, [x0]
 19c:	str	wzr, [x0]
 1a0:	mov	w0, w20
 1a4:	ldp	x19, x20, [sp, #16]
 1a8:	ldp	x29, x30, [sp], #144
 1ac:	ret
 1b0:	adrp	x1, 0 <grub_mod_init-0x5f8>
 1b4:	mov	w0, #0x1a                  	// #26
 1b8:	ldr	x1, [x1]
 1bc:	bl	0 <grub_error>
 1c0:	ldr	w20, [x19]
 1c4:	ldp	x21, x22, [sp, #32]
 1c8:	b	3c <grub_mod_init-0x5bc>
 1cc:	mov	w0, #0x2                   	// #2
 1d0:	str	w0, [x19, #160]
 1d4:	add	x5, sp, #0x3c
 1d8:	mov	x0, x19
 1dc:	mov	x4, #0x4                   	// #4
 1e0:	mov	x3, #0x104                 	// #260
 1e4:	mov	x2, #0x0                   	// #0
 1e8:	mov	x1, #0x0                   	// #0
 1ec:	bl	0 <grub_hfsplus_read_file>
 1f0:	cmp	x0, #0x4
 1f4:	b.eq	274 <grub_mod_init-0x384>  // b.none
 1f8:	ldr	x0, [sp, #64]
 1fc:	str	wzr, [x19, #160]
 200:	bl	0 <grub_free>
 204:	adrp	x0, 0 <grub_mod_init-0x5f8>
 208:	ldp	x21, x22, [sp, #32]
 20c:	ldr	x0, [x0]
 210:	str	wzr, [x0]
 214:	b	3c <grub_mod_init-0x5bc>
 218:	mov	w0, #0xffffffff            	// #-1
 21c:	str	w0, [x19, #192]
 220:	mov	x0, #0x10000               	// #65536
 224:	bl	0 <grub_malloc>
 228:	mov	x1, x0
 22c:	ldr	x0, [sp, #64]
 230:	str	x1, [x19, #168]
 234:	bl	0 <grub_free>
 238:	ldr	x0, [x19, #168]
 23c:	cbnz	x0, 170 <grub_mod_init-0x488>
 240:	ldr	x0, [x19, #184]
 244:	str	wzr, [x19, #160]
 248:	bl	0 <grub_free>
 24c:	nop
 250:	adrp	x0, 0 <grub_mod_init-0x5f8>
 254:	ldp	x21, x22, [sp, #32]
 258:	ldr	x0, [x0]
 25c:	ldr	w20, [x0]
 260:	b	3c <grub_mod_init-0x5bc>
 264:	mov	w0, #0x1                   	// #1
 268:	ldp	x21, x22, [sp, #32]
 26c:	str	w0, [x19, #160]
 270:	b	3c <grub_mod_init-0x5bc>
 274:	ldr	w0, [sp, #60]
 278:	str	w0, [x19, #196]
 27c:	ubfiz	x0, x0, #3, #32
 280:	bl	0 <grub_malloc>
 284:	str	x0, [x19, #184]
 288:	mov	x5, x0
 28c:	cbz	x0, 2cc <grub_mod_init-0x32c>
 290:	ldr	w4, [x19, #196]
 294:	mov	x1, #0x0                   	// #0
 298:	mov	x0, x19
 29c:	mov	x3, #0x108                 	// #264
 2a0:	mov	x2, #0x0                   	// #0
 2a4:	lsl	x4, x4, #3
 2a8:	bl	0 <grub_hfsplus_read_file>
 2ac:	ldr	w1, [x19, #196]
 2b0:	cmp	x0, x1, lsl #3
 2b4:	b.eq	218 <grub_mod_init-0x3e0>  // b.none
 2b8:	ldr	x0, [sp, #64]
 2bc:	str	wzr, [x19, #160]
 2c0:	bl	0 <grub_free>
 2c4:	ldr	x0, [x19, #184]
 2c8:	b	200 <grub_mod_init-0x3f8>
 2cc:	ldr	x0, [sp, #64]
 2d0:	b	244 <grub_mod_init-0x3b4>
 2d4:	nop
	...
 2f8:	stp	x29, x30, [sp, #-112]!
 2fc:	mov	x29, sp
 300:	stp	x19, x20, [sp, #16]
 304:	mov	x20, x1
 308:	stp	x21, x22, [sp, #32]
 30c:	mov	x22, x3
 310:	stp	x27, x28, [sp, #80]
 314:	mov	x28, x0
 318:	ldr	w0, [x0, #160]
 31c:	str	x2, [sp, #104]
 320:	cmp	w0, #0x1
 324:	b.eq	4f4 <grub_mod_init-0x104>  // b.none
 328:	stp	x23, x24, [sp, #48]
 32c:	mov	x21, x2
 330:	mov	x23, #0x0                   	// #0
 334:	stp	x25, x26, [sp, #64]
 338:	adrp	x26, 0 <grub_mod_init-0x5f8>
 33c:	cbnz	x2, 404 <grub_mod_init-0x1f4>
 340:	b	4a8 <grub_mod_init-0x150>
 344:	mov	w7, w25
 348:	ldr	w3, [x0]
 34c:	mov	x4, x7
 350:	mov	x5, x23
 354:	add	w3, w3, #0x104
 358:	mov	x0, x28
 35c:	mov	x2, #0x0                   	// #0
 360:	mov	x1, #0x0                   	// #0
 364:	str	x7, [sp, #96]
 368:	bl	0 <grub_hfsplus_read_file>
 36c:	ldr	x7, [sp, #96]
 370:	cmp	x0, x7
 374:	b.ne	480 <grub_mod_init-0x178>  // b.any
 378:	ldr	x4, [x28, #136]
 37c:	and	x0, x20, #0xfffffffffffeffff
 380:	sub	x4, x4, x0
 384:	mov	x0, #0xffff                	// #65535
 388:	mov	x25, x4
 38c:	cmp	x4, x0
 390:	b.ls	39c <grub_mod_init-0x25c>  // b.plast
 394:	mov	x25, #0x10000               	// #65536
 398:	mov	x4, x25
 39c:	ldr	x3, [x28, #168]
 3a0:	mov	x1, x7
 3a4:	mov	x0, x23
 3a8:	mov	x2, #0x0                   	// #0
 3ac:	bl	0 <grub_zlib_decompress>
 3b0:	cmp	x0, x25
 3b4:	b.ne	460 <grub_mod_init-0x198>  // b.any
 3b8:	str	w27, [x28, #192]
 3bc:	ldr	x1, [x28, #168]
 3c0:	mov	x2, x19
 3c4:	mov	x0, x22
 3c8:	add	x1, x1, x24
 3cc:	bl	0 <grub_memmove>
 3d0:	ldr	x0, [x26]
 3d4:	ldr	x4, [x0]
 3d8:	cbz	x4, 3f4 <grub_mod_init-0x204>
 3dc:	ldr	x3, [x28, #176]
 3e0:	cbz	x3, 3f4 <grub_mod_init-0x204>
 3e4:	mov	w2, w19
 3e8:	mov	w1, #0x0                   	// #0
 3ec:	mov	x0, #0x0                   	// #0
 3f0:	blr	x4
 3f4:	add	x22, x22, x19
 3f8:	add	x20, x20, x19
 3fc:	subs	x21, x21, x19
 400:	b.eq	4ac <grub_mod_init-0x14c>  // b.none
 404:	mov	x0, #0x10000               	// #65536
 408:	lsr	x27, x20, #16
 40c:	sub	x19, x0, w20, uxth
 410:	ldr	w0, [x28, #192]
 414:	cmp	x19, x21
 418:	and	x24, x20, #0xffff
 41c:	csel	x19, x19, x21, ls  // ls = plast
 420:	cmp	w27, w0
 424:	b.eq	3bc <grub_mod_init-0x23c>  // b.none
 428:	ldr	x0, [x28, #184]
 42c:	ubfiz	x1, x27, #3, #32
 430:	add	x0, x0, x1
 434:	ldr	w25, [x0, #4]
 438:	cbnz	x23, 344 <grub_mod_init-0x2b4>
 43c:	mov	x0, #0x10000               	// #65536
 440:	str	x1, [sp, #96]
 444:	bl	0 <grub_malloc>
 448:	mov	x23, x0
 44c:	cbz	x0, 4d4 <grub_mod_init-0x124>
 450:	ldr	x1, [sp, #96]
 454:	ldr	x0, [x28, #184]
 458:	add	x0, x0, x1
 45c:	b	344 <grub_mod_init-0x2b4>
 460:	adrp	x0, 0 <grub_mod_init-0x5f8>
 464:	ldr	x0, [x0]
 468:	ldr	w0, [x0]
 46c:	cbnz	w0, 480 <grub_mod_init-0x178>
 470:	adrp	x1, 0 <grub_mod_init-0x5f8>
 474:	mov	w0, #0x1a                  	// #26
 478:	ldr	x1, [x1]
 47c:	bl	0 <grub_error>
 480:	mov	x0, x23
 484:	bl	0 <grub_free>
 488:	mov	x0, #0xffffffffffffffff    	// #-1
 48c:	ldp	x19, x20, [sp, #16]
 490:	ldp	x21, x22, [sp, #32]
 494:	ldp	x23, x24, [sp, #48]
 498:	ldp	x25, x26, [sp, #64]
 49c:	ldp	x27, x28, [sp, #80]
 4a0:	ldp	x29, x30, [sp], #112
 4a4:	ret
 4a8:	mov	x23, x2
 4ac:	mov	x0, x23
 4b0:	bl	0 <grub_free>
 4b4:	ldp	x19, x20, [sp, #16]
 4b8:	ldp	x21, x22, [sp, #32]
 4bc:	ldp	x23, x24, [sp, #48]
 4c0:	ldp	x25, x26, [sp, #64]
 4c4:	ldp	x27, x28, [sp, #80]
 4c8:	ldr	x0, [sp, #104]
 4cc:	ldp	x29, x30, [sp], #112
 4d0:	ret
 4d4:	mov	x0, #0xffffffffffffffff    	// #-1
 4d8:	ldp	x19, x20, [sp, #16]
 4dc:	ldp	x21, x22, [sp, #32]
 4e0:	ldp	x23, x24, [sp, #48]
 4e4:	ldp	x25, x26, [sp, #64]
 4e8:	ldp	x27, x28, [sp, #80]
 4ec:	ldp	x29, x30, [sp], #112
 4f0:	ret
 4f4:	ldr	x1, [x28, #168]
 4f8:	mov	x0, x3
 4fc:	add	x1, x1, x20
 500:	bl	0 <grub_memmove>
 504:	adrp	x0, 0 <grub_mod_init-0x5f8>
 508:	ldr	x0, [x0]
 50c:	ldr	x4, [x0]
 510:	cbz	x4, 52c <grub_mod_init-0xcc>
 514:	ldr	x3, [x28, #176]
 518:	cbz	x3, 52c <grub_mod_init-0xcc>
 51c:	ldr	w2, [sp, #104]
 520:	mov	w1, #0x0                   	// #0
 524:	mov	x0, #0x0                   	// #0
 528:	blr	x4
 52c:	ldp	x19, x20, [sp, #16]
 530:	ldp	x21, x22, [sp, #32]
 534:	ldp	x27, x28, [sp, #80]
 538:	ldr	x0, [sp, #104]
 53c:	ldp	x29, x30, [sp], #112
 540:	ret
 544:	nop
	...
 560:	stp	x29, x30, [sp, #-32]!
 564:	mov	x29, sp
 568:	stp	x19, x20, [sp, #16]
 56c:	mov	x20, x0
 570:	ldr	w0, [x0, #4]
 574:	mov	x19, x1
 578:	ldr	w1, [x1]
 57c:	rev	w0, w0
 580:	cmp	w1, w0
 584:	b.cc	5dc <grub_mod_init-0x1c>  // b.lo, b.ul, b.last
 588:	b.hi	5ec <grub_mod_init-0xc>  // b.pmore
 58c:	ldrh	w3, [x20, #12]
 590:	add	x0, x20, #0xe
 594:	lsr	w1, w3, #8
 598:	orr	w3, w1, w3, lsl #8
 59c:	ldp	x1, x2, [x19, #8]
 5a0:	and	x4, x3, #0xffff
 5a4:	cmp	x2, w3, uxth
 5a8:	csel	x2, x2, x4, ls  // ls = plast
 5ac:	lsl	x2, x2, #1
 5b0:	bl	0 <grub_memcmp>
 5b4:	cbnz	w0, 5d0 <grub_mod_init-0x28>
 5b8:	ldrh	w2, [x20, #12]
 5bc:	ldr	x1, [x19, #16]
 5c0:	lsr	w0, w2, #8
 5c4:	orr	w0, w0, w2, lsl #8
 5c8:	and	w0, w0, #0xffff
 5cc:	sub	w0, w0, w1
 5d0:	ldp	x19, x20, [sp, #16]
 5d4:	ldp	x29, x30, [sp], #32
 5d8:	ret
 5dc:	mov	w0, #0x1                   	// #1
 5e0:	ldp	x19, x20, [sp, #16]
 5e4:	ldp	x29, x30, [sp], #32
 5e8:	ret
 5ec:	mov	w0, #0xffffffff            	// #-1
 5f0:	b	5d0 <grub_mod_init-0x28>
 5f4:	nop

00000000000005f8 <grub_mod_init>:
 5f8:	adrp	x2, 0 <grub_mod_init-0x5f8>
 5fc:	adrp	x0, 0 <grub_mod_init-0x5f8>
 600:	adrp	x3, 0 <grub_mod_init-0x5f8>
 604:	adrp	x1, 0 <grub_mod_init-0x5f8>
 608:	ldr	x2, [x2]
 60c:	ldr	x0, [x0]
 610:	ldr	x3, [x3]
 614:	str	x3, [x2]
 618:	ldr	x1, [x1]
 61c:	str	x1, [x0]
 620:	ret
 624:	nop
	...

0000000000000648 <grub_mod_fini>:
 648:	adrp	x1, 0 <grub_mod_init-0x5f8>
 64c:	adrp	x0, 0 <grub_mod_init-0x5f8>
 650:	ldr	x1, [x1]
 654:	ldr	x0, [x0]
 658:	str	xzr, [x1]
 65c:	str	xzr, [x0]
 660:	ret
 664:	nop
	...
