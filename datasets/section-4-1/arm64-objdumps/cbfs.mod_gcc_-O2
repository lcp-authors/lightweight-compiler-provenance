
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cbfs.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x5b0>:
   0:	ldr	x1, [x0, #40]
   4:	str	x1, [x0, #16]
   8:	ret
   c:	nop
  10:	stp	x29, x30, [sp, #-16]!
  14:	mov	x29, sp
  18:	ldr	x0, [x0, #80]
  1c:	bl	0 <grub_free>
  20:	adrp	x0, 0 <grub_mod_init-0x5b0>
  24:	ldp	x29, x30, [sp], #16
  28:	ldr	x0, [x0]
  2c:	ldr	w0, [x0]
  30:	ret
  34:	nop
	...
  40:	stp	x29, x30, [sp, #-32]!
  44:	mov	x3, x2
  48:	mov	x4, x1
  4c:	mov	x29, sp
  50:	stp	x19, x20, [sp, #16]
  54:	mov	x19, x2
  58:	mov	x1, #0x0                   	// #0
  5c:	ldp	x20, x7, [x0, #80]
  60:	ldr	x2, [x0, #24]
  64:	ldr	x5, [x0, #96]
  68:	ldr	x0, [x20]
  6c:	ldr	x6, [x20, #24]
  70:	stp	x7, x5, [x0, #48]
  74:	add	x2, x6, x2
  78:	bl	0 <grub_disk_read>
  7c:	cmp	w0, #0x0
  80:	ldr	x1, [x20]
  84:	csinv	x0, x19, xzr, eq  // eq = none
  88:	ldp	x19, x20, [sp, #16]
  8c:	str	xzr, [x1, #48]
  90:	ldp	x29, x30, [sp], #32
  94:	ret
  98:	stp	x29, x30, [sp, #-112]!
  9c:	mov	x29, sp
  a0:	stp	x19, x20, [sp, #16]
  a4:	mov	x19, x0
  a8:	stp	x21, x22, [sp, #32]
  ac:	mov	x21, x3
  b0:	ldr	x2, [x0, #16]
  b4:	str	x2, [x0, #8]
  b8:	ldr	x0, [x0, #48]
  bc:	cmp	x2, x0
  c0:	b.cs	1fc <grub_mod_init-0x3b4>  // b.hs, b.nlast
  c4:	mov	x20, x1
  c8:	adrp	x22, 0 <grub_mod_init-0x5b0>
  cc:	stp	x23, x24, [sp, #48]
  d0:	mov	w23, #0x80008000            	// #-2147450880
  d4:	str	x25, [sp, #64]
  d8:	ldr	x0, [x19]
  dc:	add	x4, sp, #0x58
  e0:	mov	x3, #0x18                  	// #24
  e4:	mov	x1, #0x0                   	// #0
  e8:	bl	0 <grub_disk_read>
  ec:	cbnz	w0, 214 <grub_mod_init-0x39c>
  f0:	ldr	x1, [x22]
  f4:	add	x0, sp, #0x58
  f8:	mov	x2, #0x8                   	// #8
  fc:	bl	0 <grub_memcmp>
 100:	cbnz	w0, 1f4 <grub_mod_init-0x3bc>
 104:	ldr	w4, [sp, #96]
 108:	ldr	w24, [sp, #108]
 10c:	rev	w4, w4
 110:	str	x4, [x19, #32]
 114:	rev	w0, w24
 118:	rev	w24, w24
 11c:	str	w23, [x21]
 120:	cmp	w0, #0x17
 124:	sub	x25, x24, #0x18
 128:	csel	x25, x25, x24, hi  // hi = pmore
 12c:	cbz	x25, 1c0 <grub_mod_init-0x3f0>
 130:	add	x0, x25, #0x1
 134:	bl	0 <grub_malloc>
 138:	str	x0, [x20]
 13c:	mov	x3, x25
 140:	mov	x4, x0
 144:	mov	x1, #0x0                   	// #0
 148:	cbz	x0, 214 <grub_mod_init-0x39c>
 14c:	ldp	x0, x2, [x19]
 150:	add	x2, x2, #0x18
 154:	bl	0 <grub_disk_read>
 158:	cbnz	w0, 20c <grub_mod_init-0x3a4>
 15c:	ldr	x1, [x20]
 160:	ldrb	w2, [x1]
 164:	cbz	w2, 1ac <grub_mod_init-0x404>
 168:	strb	wzr, [x1, x25]
 16c:	ldr	x2, [x19, #8]
 170:	ldr	x1, [x19, #32]
 174:	add	x24, x24, x2
 178:	ldr	x2, [x19, #56]
 17c:	sub	x3, x24, #0x1
 180:	ldr	x25, [sp, #64]
 184:	add	x1, x2, x1
 188:	add	x1, x1, x3
 18c:	neg	x2, x2
 190:	and	x1, x1, x2
 194:	stp	x1, x24, [x19, #16]
 198:	ldp	x23, x24, [sp, #48]
 19c:	ldp	x19, x20, [sp, #16]
 1a0:	ldp	x21, x22, [sp, #32]
 1a4:	ldp	x29, x30, [sp], #112
 1a8:	ret
 1ac:	mov	x0, x1
 1b0:	bl	0 <grub_free>
 1b4:	ldr	x4, [x19, #32]
 1b8:	str	xzr, [x20]
 1bc:	nop
 1c0:	ldr	x1, [x19, #8]
 1c4:	ldr	x0, [x19, #56]
 1c8:	add	x24, x24, x1
 1cc:	add	x2, x24, x4
 1d0:	str	x24, [x19, #24]
 1d4:	sub	x4, x0, #0x1
 1d8:	neg	x0, x0
 1dc:	add	x2, x2, x4
 1e0:	ldr	x1, [x19, #48]
 1e4:	and	x2, x2, x0
 1e8:	stp	x2, x2, [x19, #8]
 1ec:	cmp	x1, x2
 1f0:	b.hi	d8 <grub_mod_init-0x4d8>  // b.pmore
 1f4:	ldp	x23, x24, [sp, #48]
 1f8:	ldr	x25, [sp, #64]
 1fc:	mov	w1, #0xffffffff            	// #-1
 200:	mov	w0, #0x0                   	// #0
 204:	str	w1, [x21]
 208:	b	19c <grub_mod_init-0x414>
 20c:	ldr	x0, [x20]
 210:	bl	0 <grub_free>
 214:	adrp	x0, 0 <grub_mod_init-0x5b0>
 218:	ldp	x23, x24, [sp, #48]
 21c:	ldr	x0, [x0]
 220:	ldr	x25, [sp, #64]
 224:	ldr	w0, [x0]
 228:	b	19c <grub_mod_init-0x414>
 22c:	nop
	...
 240:	stp	x29, x30, [sp, #-112]!
 244:	mov	x29, sp
 248:	stp	x19, x20, [sp, #16]
 24c:	mov	x19, x0
 250:	bl	0 <grub_disk_get_size>
 254:	cmn	x0, #0x1
 258:	b.eq	2bc <grub_mod_init-0x2f4>  // b.none
 25c:	mov	x0, x19
 260:	bl	0 <grub_disk_get_size>
 264:	add	x4, sp, #0x34
 268:	sub	x1, x0, #0x1
 26c:	mov	x3, #0x4                   	// #4
 270:	mov	x0, x19
 274:	mov	x2, #0x1fc                 	// #508
 278:	bl	0 <grub_disk_read>
 27c:	cbnz	w0, 2bc <grub_mod_init-0x2f4>
 280:	mov	x0, x19
 284:	bl	0 <grub_disk_get_size>
 288:	ldrsw	x2, [sp, #52]
 28c:	mov	x5, x0
 290:	mov	x1, #0x0                   	// #0
 294:	add	x4, sp, #0x50
 298:	mov	x0, x19
 29c:	mov	x3, #0x20                  	// #32
 2a0:	add	x2, x2, x5, lsl #9
 2a4:	bl	0 <grub_disk_read>
 2a8:	ldr	w2, [sp, #80]
 2ac:	mov	w1, #0x524f                	// #21071
 2b0:	movk	w1, #0x4342, lsl #16
 2b4:	cmp	w2, w1
 2b8:	b.eq	2ec <grub_mod_init-0x2c4>  // b.none
 2bc:	mov	x20, #0x0                   	// #0
 2c0:	mov	x0, x20
 2c4:	bl	0 <grub_free>
 2c8:	adrp	x1, 0 <grub_mod_init-0x5b0>
 2cc:	mov	x20, #0x0                   	// #0
 2d0:	mov	w0, #0x9                   	// #9
 2d4:	ldr	x1, [x1]
 2d8:	bl	0 <grub_error>
 2dc:	mov	x0, x20
 2e0:	ldp	x19, x20, [sp, #16]
 2e4:	ldp	x29, x30, [sp], #112
 2e8:	ret
 2ec:	ldr	w1, [sp, #84]
 2f0:	mov	w2, #0xcecf                	// #52943
 2f4:	movk	w2, #0xcece, lsl #16
 2f8:	add	w1, w1, w2
 2fc:	and	w1, w1, #0xfeffffff
 300:	orr	w0, w1, w0
 304:	cbnz	w0, 2bc <grub_mod_init-0x2f4>
 308:	ldp	w3, w0, [sp, #88]
 30c:	rev	w1, w3
 310:	rev	w0, w0
 314:	cmp	w0, w1
 318:	b.cs	2bc <grub_mod_init-0x2f4>  // b.hs, b.nlast
 31c:	ldr	w2, [sp, #100]
 320:	rev	w2, w2
 324:	cmp	w1, w2
 328:	b.ls	2bc <grub_mod_init-0x2f4>  // b.plast
 32c:	add	w0, w0, w2
 330:	cmp	w1, w0
 334:	b.ls	2bc <grub_mod_init-0x2f4>  // b.plast
 338:	ldr	w0, [sp, #96]
 33c:	cbz	w0, 2bc <grub_mod_init-0x2f4>
 340:	sub	w1, w0, #0x1
 344:	str	x21, [sp, #32]
 348:	tst	w1, w0
 34c:	ccmp	w3, #0x0, #0x4, eq  // eq = none
 350:	b.ne	360 <grub_mod_init-0x250>  // b.any
 354:	nop
 358:	ldr	x21, [sp, #32]
 35c:	b	2bc <grub_mod_init-0x2f4>
 360:	mov	x0, #0x40                  	// #64
 364:	bl	0 <grub_zalloc>
 368:	mov	x20, x0
 36c:	cbz	x0, 358 <grub_mod_init-0x258>
 370:	mov	x0, x19
 374:	bl	0 <grub_disk_get_size>
 378:	ldr	w2, [sp, #88]
 37c:	mov	x1, x0
 380:	ldr	w3, [sp, #100]
 384:	mov	x0, x19
 388:	rev	w2, w2
 38c:	lsl	x1, x1, #9
 390:	rev	w3, w3
 394:	sub	w2, w2, w3
 398:	sub	x1, x1, x2
 39c:	str	x1, [x20, #40]
 3a0:	bl	0 <grub_disk_get_size>
 3a4:	mov	x1, x0
 3a8:	ldp	w3, w2, [sp, #92]
 3ac:	lsl	x1, x1, #9
 3b0:	ldr	x21, [x20, #40]
 3b4:	rev	w3, w3
 3b8:	sub	x1, x1, x3
 3bc:	rev	w2, w2
 3c0:	stp	x1, x2, [x20, #48]
 3c4:	mov	x0, x19
 3c8:	bl	0 <grub_disk_get_size>
 3cc:	cmp	x21, x0, lsl #9
 3d0:	b.cs	438 <grub_mod_init-0x178>  // b.hs, b.nlast
 3d4:	ldr	x21, [x20, #48]
 3d8:	mov	x0, x19
 3dc:	bl	0 <grub_disk_get_size>
 3e0:	cmp	x21, x0, lsl #9
 3e4:	b.hi	440 <grub_mod_init-0x170>  // b.pmore
 3e8:	ldr	x2, [x20, #40]
 3ec:	str	x2, [x20, #16]
 3f0:	add	x4, sp, #0x38
 3f4:	mov	x0, x19
 3f8:	mov	x3, #0x18                  	// #24
 3fc:	mov	x1, #0x0                   	// #0
 400:	bl	0 <grub_disk_read>
 404:	cbnz	w0, 438 <grub_mod_init-0x178>
 408:	adrp	x1, 0 <grub_mod_init-0x5b0>
 40c:	add	x0, sp, #0x38
 410:	mov	x2, #0x8                   	// #8
 414:	ldr	x1, [x1]
 418:	bl	0 <grub_memcmp>
 41c:	cbnz	w0, 438 <grub_mod_init-0x178>
 420:	ldr	x21, [sp, #32]
 424:	str	x19, [x20]
 428:	mov	x0, x20
 42c:	ldp	x19, x20, [sp, #16]
 430:	ldp	x29, x30, [sp], #112
 434:	ret
 438:	ldr	x21, [sp, #32]
 43c:	b	2c0 <grub_mod_init-0x2f0>
 440:	mov	x0, x19
 444:	bl	0 <grub_disk_get_size>
 448:	lsl	x0, x0, #9
 44c:	str	x0, [x20, #48]
 450:	b	3e8 <grub_mod_init-0x1c8>
 454:	nop
	...
 468:	stp	x29, x30, [sp, #-48]!
 46c:	mov	x29, sp
 470:	stp	x19, x20, [sp, #16]
 474:	mov	x20, x0
 478:	ldr	x0, [x0, #8]
 47c:	ldr	x0, [x0]
 480:	str	x21, [sp, #32]
 484:	mov	x21, x1
 488:	bl	240 <grub_mod_init-0x370>
 48c:	cbz	x0, 4e8 <grub_mod_init-0xc8>
 490:	adrp	x1, 0 <grub_mod_init-0x5b0>
 494:	mov	x2, x21
 498:	mov	x19, x0
 49c:	ldr	x1, [x1]
 4a0:	bl	0 <grub_archelp_open>
 4a4:	mov	w21, w0
 4a8:	cbnz	w0, 4cc <grub_mod_init-0xe4>
 4ac:	ldr	x0, [x19, #32]
 4b0:	str	x0, [x20, #64]
 4b4:	str	x19, [x20, #80]
 4b8:	mov	w0, w21
 4bc:	ldp	x19, x20, [sp, #16]
 4c0:	ldr	x21, [sp, #32]
 4c4:	ldp	x29, x30, [sp], #48
 4c8:	ret
 4cc:	mov	x0, x19
 4d0:	bl	0 <grub_free>
 4d4:	mov	w0, w21
 4d8:	ldp	x19, x20, [sp, #16]
 4dc:	ldr	x21, [sp, #32]
 4e0:	ldp	x29, x30, [sp], #48
 4e4:	ret
 4e8:	adrp	x0, 0 <grub_mod_init-0x5b0>
 4ec:	ldp	x19, x20, [sp, #16]
 4f0:	ldr	x0, [x0]
 4f4:	ldr	w21, [x0]
 4f8:	mov	w0, w21
 4fc:	ldr	x21, [sp, #32]
 500:	ldp	x29, x30, [sp], #48
 504:	ret
	...
 518:	stp	x29, x30, [sp, #-48]!
 51c:	mov	x29, sp
 520:	ldr	x0, [x0]
 524:	stp	x19, x20, [sp, #16]
 528:	mov	x20, x1
 52c:	stp	x21, x22, [sp, #32]
 530:	mov	x21, x2
 534:	mov	x22, x3
 538:	bl	240 <grub_mod_init-0x370>
 53c:	cbz	x0, 57c <grub_mod_init-0x34>
 540:	adrp	x1, 0 <grub_mod_init-0x5b0>
 544:	mov	x4, x22
 548:	mov	x3, x21
 54c:	mov	x2, x20
 550:	ldr	x1, [x1]
 554:	mov	x19, x0
 558:	bl	0 <grub_archelp_dir>
 55c:	mov	w20, w0
 560:	mov	x0, x19
 564:	bl	0 <grub_free>
 568:	mov	w0, w20
 56c:	ldp	x19, x20, [sp, #16]
 570:	ldp	x21, x22, [sp, #32]
 574:	ldp	x29, x30, [sp], #48
 578:	ret
 57c:	adrp	x0, 0 <grub_mod_init-0x5b0>
 580:	ldp	x21, x22, [sp, #32]
 584:	ldr	x0, [x0]
 588:	ldr	w20, [x0]
 58c:	mov	w0, w20
 590:	ldp	x19, x20, [sp, #16]
 594:	ldp	x29, x30, [sp], #48
 598:	ret
 59c:	nop
	...

00000000000005b0 <grub_mod_init>:
 5b0:	adrp	x0, 0 <grub_mod_init-0x5b0>
 5b4:	adrp	x1, 0 <grub_mod_init-0x5b0>
 5b8:	ldr	x0, [x0]
 5bc:	ldr	x1, [x1]
 5c0:	add	x1, x1, #0x18
 5c4:	b	0 <grub_list_push>
	...

00000000000005d8 <grub_mod_fini>:
 5d8:	adrp	x0, 0 <grub_mod_init-0x5b0>
 5dc:	ldr	x0, [x0]
 5e0:	add	x0, x0, #0x18
 5e4:	b	0 <grub_list_remove>
	...
