
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//make_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000406608 <.init>:
  406608:	stp	x29, x30, [sp, #-16]!
  40660c:	mov	x29, sp
  406610:	bl	4088e4 <_start@@Base+0x50>
  406614:	ldp	x29, x30, [sp], #16
  406618:	ret

Disassembly of section .plt:

0000000000406620 <memcpy@plt-0x20>:
  406620:	stp	x16, x30, [sp, #-16]!
  406624:	adrp	x16, 441000 <_IO_stdin_used@@Base+0x1ac20>
  406628:	ldr	x17, [x16, #4088]
  40662c:	add	x16, x16, #0xff8
  406630:	br	x17
  406634:	nop
  406638:	nop
  40663c:	nop

0000000000406640 <memcpy@plt>:
  406640:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406644:	ldr	x17, [x16]
  406648:	add	x16, x16, #0x0
  40664c:	br	x17

0000000000406650 <memmove@plt>:
  406650:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406654:	ldr	x17, [x16, #8]
  406658:	add	x16, x16, #0x8
  40665c:	br	x17

0000000000406660 <_exit@plt>:
  406660:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406664:	ldr	x17, [x16, #16]
  406668:	add	x16, x16, #0x10
  40666c:	br	x17

0000000000406670 <getcwd@plt>:
  406670:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406674:	ldr	x17, [x16, #24]
  406678:	add	x16, x16, #0x18
  40667c:	br	x17

0000000000406680 <strlen@plt>:
  406680:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406684:	ldr	x17, [x16, #32]
  406688:	add	x16, x16, #0x20
  40668c:	br	x17

0000000000406690 <fputs@plt>:
  406690:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406694:	ldr	x17, [x16, #40]
  406698:	add	x16, x16, #0x28
  40669c:	br	x17

00000000004066a0 <exit@plt>:
  4066a0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4066a4:	ldr	x17, [x16, #48]
  4066a8:	add	x16, x16, #0x30
  4066ac:	br	x17

00000000004066b0 <dup@plt>:
  4066b0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4066b4:	ldr	x17, [x16, #56]
  4066b8:	add	x16, x16, #0x38
  4066bc:	br	x17

00000000004066c0 <perror@plt>:
  4066c0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4066c4:	ldr	x17, [x16, #64]
  4066c8:	add	x16, x16, #0x40
  4066cc:	br	x17

00000000004066d0 <tmpfile@plt>:
  4066d0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4066d4:	ldr	x17, [x16, #72]
  4066d8:	add	x16, x16, #0x48
  4066dc:	br	x17

00000000004066e0 <sigprocmask@plt>:
  4066e0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4066e4:	ldr	x17, [x16, #80]
  4066e8:	add	x16, x16, #0x50
  4066ec:	br	x17

00000000004066f0 <strtod@plt>:
  4066f0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4066f4:	ldr	x17, [x16, #88]
  4066f8:	add	x16, x16, #0x58
  4066fc:	br	x17

0000000000406700 <remove@plt>:
  406700:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406704:	ldr	x17, [x16, #96]
  406708:	add	x16, x16, #0x60
  40670c:	br	x17

0000000000406710 <ttyname@plt>:
  406710:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406714:	ldr	x17, [x16, #104]
  406718:	add	x16, x16, #0x68
  40671c:	br	x17

0000000000406720 <readlink@plt>:
  406720:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406724:	ldr	x17, [x16, #112]
  406728:	add	x16, x16, #0x70
  40672c:	br	x17

0000000000406730 <sprintf@plt>:
  406730:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406734:	ldr	x17, [x16, #120]
  406738:	add	x16, x16, #0x78
  40673c:	br	x17

0000000000406740 <putc@plt>:
  406740:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406744:	ldr	x17, [x16, #128]
  406748:	add	x16, x16, #0x80
  40674c:	br	x17

0000000000406750 <pipe@plt>:
  406750:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406754:	ldr	x17, [x16, #136]
  406758:	add	x16, x16, #0x88
  40675c:	br	x17

0000000000406760 <opendir@plt>:
  406760:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406764:	ldr	x17, [x16, #144]
  406768:	add	x16, x16, #0x90
  40676c:	br	x17

0000000000406770 <getloadavg@plt>:
  406770:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406774:	ldr	x17, [x16, #152]
  406778:	add	x16, x16, #0x98
  40677c:	br	x17

0000000000406780 <__cxa_atexit@plt>:
  406780:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406784:	ldr	x17, [x16, #160]
  406788:	add	x16, x16, #0xa0
  40678c:	br	x17

0000000000406790 <fputc@plt>:
  406790:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406794:	ldr	x17, [x16, #168]
  406798:	add	x16, x16, #0xa8
  40679c:	br	x17

00000000004067a0 <clock_gettime@plt>:
  4067a0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4067a4:	ldr	x17, [x16, #176]
  4067a8:	add	x16, x16, #0xb0
  4067ac:	br	x17

00000000004067b0 <qsort@plt>:
  4067b0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4067b4:	ldr	x17, [x16, #184]
  4067b8:	add	x16, x16, #0xb8
  4067bc:	br	x17

00000000004067c0 <dlclose@plt>:
  4067c0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4067c4:	ldr	x17, [x16, #192]
  4067c8:	add	x16, x16, #0xc0
  4067cc:	br	x17

00000000004067d0 <ctime@plt>:
  4067d0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4067d4:	ldr	x17, [x16, #200]
  4067d8:	add	x16, x16, #0xc8
  4067dc:	br	x17

00000000004067e0 <kill@plt>:
  4067e0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4067e4:	ldr	x17, [x16, #208]
  4067e8:	add	x16, x16, #0xd0
  4067ec:	br	x17

00000000004067f0 <setvbuf@plt>:
  4067f0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4067f4:	ldr	x17, [x16, #216]
  4067f8:	add	x16, x16, #0xd8
  4067fc:	br	x17

0000000000406800 <lseek@plt>:
  406800:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406804:	ldr	x17, [x16, #224]
  406808:	add	x16, x16, #0xe0
  40680c:	br	x17

0000000000406810 <eaccess@plt>:
  406810:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406814:	ldr	x17, [x16, #232]
  406818:	add	x16, x16, #0xe8
  40681c:	br	x17

0000000000406820 <dlopen@plt>:
  406820:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406824:	ldr	x17, [x16, #240]
  406828:	add	x16, x16, #0xf0
  40682c:	br	x17

0000000000406830 <__ctype_tolower_loc@plt>:
  406830:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406834:	ldr	x17, [x16, #248]
  406838:	add	x16, x16, #0xf8
  40683c:	br	x17

0000000000406840 <stpcpy@plt>:
  406840:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406844:	ldr	x17, [x16, #256]
  406848:	add	x16, x16, #0x100
  40684c:	br	x17

0000000000406850 <fileno@plt>:
  406850:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406854:	ldr	x17, [x16, #264]
  406858:	add	x16, x16, #0x108
  40685c:	br	x17

0000000000406860 <localtime@plt>:
  406860:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406864:	ldr	x17, [x16, #272]
  406868:	add	x16, x16, #0x110
  40686c:	br	x17

0000000000406870 <posix_spawn_file_actions_adddup2@plt>:
  406870:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406874:	ldr	x17, [x16, #280]
  406878:	add	x16, x16, #0x118
  40687c:	br	x17

0000000000406880 <signal@plt>:
  406880:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406884:	ldr	x17, [x16, #288]
  406888:	add	x16, x16, #0x120
  40688c:	br	x17

0000000000406890 <fclose@plt>:
  406890:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406894:	ldr	x17, [x16, #296]
  406898:	add	x16, x16, #0x128
  40689c:	br	x17

00000000004068a0 <getpid@plt>:
  4068a0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4068a4:	ldr	x17, [x16, #304]
  4068a8:	add	x16, x16, #0x130
  4068ac:	br	x17

00000000004068b0 <fopen@plt>:
  4068b0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4068b4:	ldr	x17, [x16, #312]
  4068b8:	add	x16, x16, #0x138
  4068bc:	br	x17

00000000004068c0 <time@plt>:
  4068c0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4068c4:	ldr	x17, [x16, #320]
  4068c8:	add	x16, x16, #0x140
  4068cc:	br	x17

00000000004068d0 <malloc@plt>:
  4068d0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4068d4:	ldr	x17, [x16, #328]
  4068d8:	add	x16, x16, #0x148
  4068dc:	br	x17

00000000004068e0 <dlerror@plt>:
  4068e0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4068e4:	ldr	x17, [x16, #336]
  4068e8:	add	x16, x16, #0x150
  4068ec:	br	x17

00000000004068f0 <dlsym@plt>:
  4068f0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4068f4:	ldr	x17, [x16, #344]
  4068f8:	add	x16, x16, #0x158
  4068fc:	br	x17

0000000000406900 <open@plt>:
  406900:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406904:	ldr	x17, [x16, #352]
  406908:	add	x16, x16, #0x160
  40690c:	br	x17

0000000000406910 <sigemptyset@plt>:
  406910:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406914:	ldr	x17, [x16, #360]
  406918:	add	x16, x16, #0x168
  40691c:	br	x17

0000000000406920 <posix_spawnattr_destroy@plt>:
  406920:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406924:	ldr	x17, [x16, #368]
  406928:	add	x16, x16, #0x170
  40692c:	br	x17

0000000000406930 <strncmp@plt>:
  406930:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406934:	ldr	x17, [x16, #376]
  406938:	add	x16, x16, #0x178
  40693c:	br	x17

0000000000406940 <bindtextdomain@plt>:
  406940:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406944:	ldr	x17, [x16, #384]
  406948:	add	x16, x16, #0x180
  40694c:	br	x17

0000000000406950 <__libc_start_main@plt>:
  406950:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406954:	ldr	x17, [x16, #392]
  406958:	add	x16, x16, #0x188
  40695c:	br	x17

0000000000406960 <strcat@plt>:
  406960:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406964:	ldr	x17, [x16, #400]
  406968:	add	x16, x16, #0x190
  40696c:	br	x17

0000000000406970 <memset@plt>:
  406970:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406974:	ldr	x17, [x16, #408]
  406978:	add	x16, x16, #0x198
  40697c:	br	x17

0000000000406980 <fdopen@plt>:
  406980:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406984:	ldr	x17, [x16, #416]
  406988:	add	x16, x16, #0x1a0
  40698c:	br	x17

0000000000406990 <strpbrk@plt>:
  406990:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406994:	ldr	x17, [x16, #424]
  406998:	add	x16, x16, #0x1a8
  40699c:	br	x17

00000000004069a0 <gettimeofday@plt>:
  4069a0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4069a4:	ldr	x17, [x16, #432]
  4069a8:	add	x16, x16, #0x1b0
  4069ac:	br	x17

00000000004069b0 <getpwnam@plt>:
  4069b0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4069b4:	ldr	x17, [x16, #440]
  4069b8:	add	x16, x16, #0x1b8
  4069bc:	br	x17

00000000004069c0 <pselect@plt>:
  4069c0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4069c4:	ldr	x17, [x16, #448]
  4069c8:	add	x16, x16, #0x1c0
  4069cc:	br	x17

00000000004069d0 <calloc@plt>:
  4069d0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4069d4:	ldr	x17, [x16, #456]
  4069d8:	add	x16, x16, #0x1c8
  4069dc:	br	x17

00000000004069e0 <posix_spawn_file_actions_destroy@plt>:
  4069e0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4069e4:	ldr	x17, [x16, #464]
  4069e8:	add	x16, x16, #0x1d0
  4069ec:	br	x17

00000000004069f0 <readdir@plt>:
  4069f0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  4069f4:	ldr	x17, [x16, #472]
  4069f8:	add	x16, x16, #0x1d8
  4069fc:	br	x17

0000000000406a00 <realloc@plt>:
  406a00:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406a04:	ldr	x17, [x16, #480]
  406a08:	add	x16, x16, #0x1e0
  406a0c:	br	x17

0000000000406a10 <putenv@plt>:
  406a10:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406a14:	ldr	x17, [x16, #488]
  406a18:	add	x16, x16, #0x1e8
  406a1c:	br	x17

0000000000406a20 <strdup@plt>:
  406a20:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406a24:	ldr	x17, [x16, #496]
  406a28:	add	x16, x16, #0x1f0
  406a2c:	br	x17

0000000000406a30 <closedir@plt>:
  406a30:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406a34:	ldr	x17, [x16, #504]
  406a38:	add	x16, x16, #0x1f8
  406a3c:	br	x17

0000000000406a40 <strerror@plt>:
  406a40:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406a44:	ldr	x17, [x16, #512]
  406a48:	add	x16, x16, #0x200
  406a4c:	br	x17

0000000000406a50 <close@plt>:
  406a50:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406a54:	ldr	x17, [x16, #520]
  406a58:	add	x16, x16, #0x208
  406a5c:	br	x17

0000000000406a60 <sigaction@plt>:
  406a60:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406a64:	ldr	x17, [x16, #528]
  406a68:	add	x16, x16, #0x210
  406a6c:	br	x17

0000000000406a70 <strrchr@plt>:
  406a70:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406a74:	ldr	x17, [x16, #536]
  406a78:	add	x16, x16, #0x218
  406a7c:	br	x17

0000000000406a80 <__gmon_start__@plt>:
  406a80:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406a84:	ldr	x17, [x16, #544]
  406a88:	add	x16, x16, #0x220
  406a8c:	br	x17

0000000000406a90 <write@plt>:
  406a90:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406a94:	ldr	x17, [x16, #552]
  406a98:	add	x16, x16, #0x228
  406a9c:	br	x17

0000000000406aa0 <posix_spawnattr_setflags@plt>:
  406aa0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406aa4:	ldr	x17, [x16, #560]
  406aa8:	add	x16, x16, #0x230
  406aac:	br	x17

0000000000406ab0 <abort@plt>:
  406ab0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406ab4:	ldr	x17, [x16, #568]
  406ab8:	add	x16, x16, #0x238
  406abc:	br	x17

0000000000406ac0 <posix_spawnattr_setsigmask@plt>:
  406ac0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406ac4:	ldr	x17, [x16, #576]
  406ac8:	add	x16, x16, #0x240
  406acc:	br	x17

0000000000406ad0 <feof@plt>:
  406ad0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406ad4:	ldr	x17, [x16, #584]
  406ad8:	add	x16, x16, #0x248
  406adc:	br	x17

0000000000406ae0 <puts@plt>:
  406ae0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406ae4:	ldr	x17, [x16, #592]
  406ae8:	add	x16, x16, #0x250
  406aec:	br	x17

0000000000406af0 <posix_spawn_file_actions_init@plt>:
  406af0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406af4:	ldr	x17, [x16, #600]
  406af8:	add	x16, x16, #0x258
  406afc:	br	x17

0000000000406b00 <memcmp@plt>:
  406b00:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406b04:	ldr	x17, [x16, #608]
  406b08:	add	x16, x16, #0x260
  406b0c:	br	x17

0000000000406b10 <textdomain@plt>:
  406b10:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406b14:	ldr	x17, [x16, #616]
  406b18:	add	x16, x16, #0x268
  406b1c:	br	x17

0000000000406b20 <getopt_long@plt>:
  406b20:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406b24:	ldr	x17, [x16, #624]
  406b28:	add	x16, x16, #0x270
  406b2c:	br	x17

0000000000406b30 <execvp@plt>:
  406b30:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406b34:	ldr	x17, [x16, #632]
  406b38:	add	x16, x16, #0x278
  406b3c:	br	x17

0000000000406b40 <strcmp@plt>:
  406b40:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406b44:	ldr	x17, [x16, #640]
  406b48:	add	x16, x16, #0x280
  406b4c:	br	x17

0000000000406b50 <__ctype_b_loc@plt>:
  406b50:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406b54:	ldr	x17, [x16, #648]
  406b58:	add	x16, x16, #0x288
  406b5c:	br	x17

0000000000406b60 <strtol@plt>:
  406b60:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406b64:	ldr	x17, [x16, #656]
  406b68:	add	x16, x16, #0x290
  406b6c:	br	x17

0000000000406b70 <fread@plt>:
  406b70:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406b74:	ldr	x17, [x16, #664]
  406b78:	add	x16, x16, #0x298
  406b7c:	br	x17

0000000000406b80 <chdir@plt>:
  406b80:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406b84:	ldr	x17, [x16, #672]
  406b88:	add	x16, x16, #0x2a0
  406b8c:	br	x17

0000000000406b90 <free@plt>:
  406b90:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406b94:	ldr	x17, [x16, #680]
  406b98:	add	x16, x16, #0x2a8
  406b9c:	br	x17

0000000000406ba0 <strndup@plt>:
  406ba0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406ba4:	ldr	x17, [x16, #688]
  406ba8:	add	x16, x16, #0x2b0
  406bac:	br	x17

0000000000406bb0 <strchr@plt>:
  406bb0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406bb4:	ldr	x17, [x16, #696]
  406bb8:	add	x16, x16, #0x2b8
  406bbc:	br	x17

0000000000406bc0 <globfree@plt>:
  406bc0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406bc4:	ldr	x17, [x16, #704]
  406bc8:	add	x16, x16, #0x2c0
  406bcc:	br	x17

0000000000406bd0 <memrchr@plt>:
  406bd0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406bd4:	ldr	x17, [x16, #712]
  406bd8:	add	x16, x16, #0x2c8
  406bdc:	br	x17

0000000000406be0 <fwrite@plt>:
  406be0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406be4:	ldr	x17, [x16, #720]
  406be8:	add	x16, x16, #0x2d0
  406bec:	br	x17

0000000000406bf0 <fnmatch@plt>:
  406bf0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406bf4:	ldr	x17, [x16, #728]
  406bf8:	add	x16, x16, #0x2d8
  406bfc:	br	x17

0000000000406c00 <fcntl@plt>:
  406c00:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406c04:	ldr	x17, [x16, #736]
  406c08:	add	x16, x16, #0x2e0
  406c0c:	br	x17

0000000000406c10 <wait@plt>:
  406c10:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406c14:	ldr	x17, [x16, #744]
  406c18:	add	x16, x16, #0x2e8
  406c1c:	br	x17

0000000000406c20 <fflush@plt>:
  406c20:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406c24:	ldr	x17, [x16, #752]
  406c28:	add	x16, x16, #0x2f0
  406c2c:	br	x17

0000000000406c30 <strcpy@plt>:
  406c30:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406c34:	ldr	x17, [x16, #760]
  406c38:	add	x16, x16, #0x2f8
  406c3c:	br	x17

0000000000406c40 <posix_spawn@plt>:
  406c40:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406c44:	ldr	x17, [x16, #768]
  406c48:	add	x16, x16, #0x300
  406c4c:	br	x17

0000000000406c50 <vsprintf@plt>:
  406c50:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406c54:	ldr	x17, [x16, #776]
  406c58:	add	x16, x16, #0x308
  406c5c:	br	x17

0000000000406c60 <__lxstat@plt>:
  406c60:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406c64:	ldr	x17, [x16, #784]
  406c68:	add	x16, x16, #0x310
  406c6c:	br	x17

0000000000406c70 <posix_spawnattr_init@plt>:
  406c70:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406c74:	ldr	x17, [x16, #792]
  406c78:	add	x16, x16, #0x318
  406c7c:	br	x17

0000000000406c80 <read@plt>:
  406c80:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406c84:	ldr	x17, [x16, #800]
  406c88:	add	x16, x16, #0x320
  406c8c:	br	x17

0000000000406c90 <mkstemp@plt>:
  406c90:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406c94:	ldr	x17, [x16, #808]
  406c98:	add	x16, x16, #0x328
  406c9c:	br	x17

0000000000406ca0 <isatty@plt>:
  406ca0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406ca4:	ldr	x17, [x16, #816]
  406ca8:	add	x16, x16, #0x330
  406cac:	br	x17

0000000000406cb0 <__fxstat@plt>:
  406cb0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406cb4:	ldr	x17, [x16, #824]
  406cb8:	add	x16, x16, #0x338
  406cbc:	br	x17

0000000000406cc0 <strstr@plt>:
  406cc0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406cc4:	ldr	x17, [x16, #832]
  406cc8:	add	x16, x16, #0x340
  406ccc:	br	x17

0000000000406cd0 <dcgettext@plt>:
  406cd0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406cd4:	ldr	x17, [x16, #840]
  406cd8:	add	x16, x16, #0x348
  406cdc:	br	x17

0000000000406ce0 <realpath@plt>:
  406ce0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406ce4:	ldr	x17, [x16, #848]
  406ce8:	add	x16, x16, #0x350
  406cec:	br	x17

0000000000406cf0 <__isoc99_sscanf@plt>:
  406cf0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406cf4:	ldr	x17, [x16, #856]
  406cf8:	add	x16, x16, #0x358
  406cfc:	br	x17

0000000000406d00 <glob@plt>:
  406d00:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406d04:	ldr	x17, [x16, #864]
  406d08:	add	x16, x16, #0x360
  406d0c:	br	x17

0000000000406d10 <ftruncate@plt>:
  406d10:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406d14:	ldr	x17, [x16, #872]
  406d18:	add	x16, x16, #0x368
  406d1c:	br	x17

0000000000406d20 <strncpy@plt>:
  406d20:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406d24:	ldr	x17, [x16, #880]
  406d28:	add	x16, x16, #0x370
  406d2c:	br	x17

0000000000406d30 <strsignal@plt>:
  406d30:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406d34:	ldr	x17, [x16, #888]
  406d38:	add	x16, x16, #0x378
  406d3c:	br	x17

0000000000406d40 <sigaddset@plt>:
  406d40:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406d44:	ldr	x17, [x16, #896]
  406d48:	add	x16, x16, #0x380
  406d4c:	br	x17

0000000000406d50 <umask@plt>:
  406d50:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406d54:	ldr	x17, [x16, #904]
  406d58:	add	x16, x16, #0x388
  406d5c:	br	x17

0000000000406d60 <printf@plt>:
  406d60:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406d64:	ldr	x17, [x16, #912]
  406d68:	add	x16, x16, #0x390
  406d6c:	br	x17

0000000000406d70 <__errno_location@plt>:
  406d70:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406d74:	ldr	x17, [x16, #920]
  406d78:	add	x16, x16, #0x398
  406d7c:	br	x17

0000000000406d80 <getenv@plt>:
  406d80:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406d84:	ldr	x17, [x16, #928]
  406d88:	add	x16, x16, #0x3a0
  406d8c:	br	x17

0000000000406d90 <__xstat@plt>:
  406d90:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406d94:	ldr	x17, [x16, #936]
  406d98:	add	x16, x16, #0x3a8
  406d9c:	br	x17

0000000000406da0 <waitpid@plt>:
  406da0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406da4:	ldr	x17, [x16, #944]
  406da8:	add	x16, x16, #0x3b0
  406dac:	br	x17

0000000000406db0 <unlink@plt>:
  406db0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406db4:	ldr	x17, [x16, #952]
  406db8:	add	x16, x16, #0x3b8
  406dbc:	br	x17

0000000000406dc0 <getlogin@plt>:
  406dc0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406dc4:	ldr	x17, [x16, #960]
  406dc8:	add	x16, x16, #0x3c0
  406dcc:	br	x17

0000000000406dd0 <fprintf@plt>:
  406dd0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406dd4:	ldr	x17, [x16, #968]
  406dd8:	add	x16, x16, #0x3c8
  406ddc:	br	x17

0000000000406de0 <fgets@plt>:
  406de0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406de4:	ldr	x17, [x16, #976]
  406de8:	add	x16, x16, #0x3d0
  406dec:	br	x17

0000000000406df0 <setlocale@plt>:
  406df0:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406df4:	ldr	x17, [x16, #984]
  406df8:	add	x16, x16, #0x3d8
  406dfc:	br	x17

0000000000406e00 <ferror@plt>:
  406e00:	adrp	x16, 442000 <memcpy@GLIBC_2.17>
  406e04:	ldr	x17, [x16, #992]
  406e08:	add	x16, x16, #0x3e0
  406e0c:	br	x17

Disassembly of section .text:

0000000000406e10 <main@@Base>:
  406e10:	mov	x12, #0x18c0                	// #6336
  406e14:	sub	sp, sp, x12
  406e18:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  406e1c:	stp	x29, x30, [sp]
  406e20:	mov	x29, sp
  406e24:	stp	x19, x20, [sp, #16]
  406e28:	add	x20, x3, #0x440
  406e2c:	mov	w3, w0
  406e30:	stp	x23, x24, [sp, #48]
  406e34:	adrp	x23, 446000 <commands_started@@Base+0x1c8>
  406e38:	add	x23, x23, #0x7f0
  406e3c:	mov	x0, x23
  406e40:	stp	x21, x22, [sp, #32]
  406e44:	mov	x21, x2
  406e48:	stp	x25, x26, [sp, #64]
  406e4c:	add	x19, x20, #0x8
  406e50:	stp	x27, x28, [sp, #80]
  406e54:	str	w3, [x29, #144]
  406e58:	str	x1, [x29, #168]
  406e5c:	bl	4196d8 <output_init@@Base>
  406e60:	mov	x6, #0x400                 	// #1024
  406e64:	mov	w5, #0x40                  	// #64
  406e68:	movk	x6, #0x2000, lsl #16
  406e6c:	mov	w1, #0x100                 	// #256
  406e70:	mov	w8, #0x8                   	// #8
  406e74:	movk	x6, #0x2200, lsl #32
  406e78:	mov	w4, #0x20                  	// #32
  406e7c:	movk	w1, #0x80, lsl #16
  406e80:	mov	w3, #0x2000                	// #8192
  406e84:	mov	w0, #0x2                   	// #2
  406e88:	mov	w9, #0x1                   	// #1
  406e8c:	movk	w5, #0x10, lsl #16
  406e90:	mov	w2, #0x80                  	// #128
  406e94:	mov	w7, #0x800080              	// #8388736
  406e98:	movk	w8, #0x4000, lsl #16
  406e9c:	movk	x6, #0x8000, lsl #48
  406ea0:	stur	w8, [x20, #78]
  406ea4:	str	w7, [x20, #88]
  406ea8:	str	x6, [x20, #96]
  406eac:	str	w5, [x20, #124]
  406eb0:	str	w1, [x20, #256]
  406eb4:	strh	w9, [x20, #8]
  406eb8:	strh	w0, [x20, #26]
  406ebc:	strh	w0, [x20, #72]
  406ec0:	strh	w4, [x20, #130]
  406ec4:	strh	w3, [x20, #198]
  406ec8:	strh	w2, [x20, #254]
  406ecc:	bl	406b50 <__ctype_b_loc@plt>
  406ed0:	mov	x3, x19
  406ed4:	mov	x1, #0x2                   	// #2
  406ed8:	ldr	x4, [x0]
  406edc:	b	406efc <main@@Base+0xec>
  406ee0:	ldrh	w2, [x1, x3]
  406ee4:	tbnz	w2, #1, 406f04 <main@@Base+0xf4>
  406ee8:	orr	w2, w2, #0x4
  406eec:	strh	w2, [x1, x3]
  406ef0:	add	x1, x1, #0x2
  406ef4:	cmp	x1, #0x200
  406ef8:	b.eq	406f20 <main@@Base+0x110>  // b.none
  406efc:	ldrh	w0, [x4, x1]
  406f00:	tbnz	w0, #13, 406ee0 <main@@Base+0xd0>
  406f04:	tbz	w0, #3, 406ef0 <main@@Base+0xe0>
  406f08:	ldrh	w0, [x1, x3]
  406f0c:	orr	w0, w0, #0x2000
  406f10:	strh	w0, [x1, x3]
  406f14:	add	x1, x1, #0x2
  406f18:	cmp	x1, #0x200
  406f1c:	b.ne	406efc <main@@Base+0xec>  // b.any
  406f20:	adrp	x24, 42b000 <_IO_stdin_used@@Base+0x4c20>
  406f24:	add	x24, x24, #0x350
  406f28:	mov	x1, x24
  406f2c:	mov	w0, #0x6                   	// #6
  406f30:	bl	406df0 <setlocale@plt>
  406f34:	adrp	x25, 429000 <_IO_stdin_used@@Base+0x2c20>
  406f38:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  406f3c:	add	x1, x1, #0x660
  406f40:	add	x25, x25, #0x678
  406f44:	adrp	x22, 446000 <commands_started@@Base+0x1c8>
  406f48:	mov	x0, x25
  406f4c:	bl	406940 <bindtextdomain@plt>
  406f50:	mov	x0, x25
  406f54:	add	x22, x22, #0x808
  406f58:	bl	406b10 <textdomain@plt>
  406f5c:	adrp	x19, 40a000 <set_file_variables@@Base+0x698>
  406f60:	mov	x0, x22
  406f64:	add	x19, x19, #0x4b8
  406f68:	bl	406910 <sigemptyset@plt>
  406f6c:	mov	x1, x19
  406f70:	mov	w0, #0x1                   	// #1
  406f74:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  406f78:	cmp	x0, #0x1
  406f7c:	b.eq	407f0c <main@@Base+0x10fc>  // b.none
  406f80:	mov	x0, x22
  406f84:	mov	w1, #0x1                   	// #1
  406f88:	bl	406d40 <sigaddset@plt>
  406f8c:	mov	x1, x19
  406f90:	mov	w0, #0x3                   	// #3
  406f94:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  406f98:	cmp	x0, #0x1
  406f9c:	b.eq	407efc <main@@Base+0x10ec>  // b.none
  406fa0:	mov	x0, x22
  406fa4:	mov	w1, #0x3                   	// #3
  406fa8:	bl	406d40 <sigaddset@plt>
  406fac:	mov	x1, x19
  406fb0:	mov	w0, #0x2                   	// #2
  406fb4:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  406fb8:	cmp	x0, #0x1
  406fbc:	b.eq	407eec <main@@Base+0x10dc>  // b.none
  406fc0:	mov	x0, x22
  406fc4:	mov	w1, #0x2                   	// #2
  406fc8:	bl	406d40 <sigaddset@plt>
  406fcc:	mov	x1, x19
  406fd0:	mov	w0, #0xf                   	// #15
  406fd4:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  406fd8:	cmp	x0, #0x1
  406fdc:	b.eq	407edc <main@@Base+0x10cc>  // b.none
  406fe0:	mov	x0, x22
  406fe4:	mov	w1, #0xf                   	// #15
  406fe8:	bl	406d40 <sigaddset@plt>
  406fec:	mov	x1, x19
  406ff0:	mov	w0, #0x18                  	// #24
  406ff4:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  406ff8:	cmp	x0, #0x1
  406ffc:	b.eq	407ecc <main@@Base+0x10bc>  // b.none
  407000:	mov	x0, x22
  407004:	mov	w1, #0x18                  	// #24
  407008:	bl	406d40 <sigaddset@plt>
  40700c:	mov	x1, x19
  407010:	mov	w0, #0x19                  	// #25
  407014:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  407018:	cmp	x0, #0x1
  40701c:	b.eq	407ebc <main@@Base+0x10ac>  // b.none
  407020:	mov	x0, x22
  407024:	mov	w1, #0x19                  	// #25
  407028:	bl	406d40 <sigaddset@plt>
  40702c:	mov	x1, #0x0                   	// #0
  407030:	mov	w0, #0x11                  	// #17
  407034:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  407038:	mov	x0, #0x0                   	// #0
  40703c:	bl	4196d8 <output_init@@Base>
  407040:	ldr	x0, [x29, #168]
  407044:	ldr	x0, [x0]
  407048:	cbz	x0, 407074 <main@@Base+0x264>
  40704c:	ldrb	w1, [x0]
  407050:	cbz	w1, 40707c <main@@Base+0x26c>
  407054:	mov	w1, #0x2f                  	// #47
  407058:	bl	406a70 <strrchr@plt>
  40705c:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  407060:	str	x0, [x1, #2000]
  407064:	cbz	x0, 407f38 <main@@Base+0x1128>
  407068:	add	x0, x0, #0x1
  40706c:	str	x0, [x1, #2000]
  407070:	b	407084 <main@@Base+0x274>
  407074:	ldr	x0, [x29, #168]
  407078:	str	x24, [x0]
  40707c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  407080:	str	x25, [x0, #2000]
  407084:	bl	419098 <user_access@@Base>
  407088:	bl	422dc0 <init_hash_global_variable_set@@Base>
  40708c:	bl	422548 <strcache_init@@Base>
  407090:	bl	40e478 <init_hash_files@@Base>
  407094:	bl	40b790 <hash_init_directories@@Base>
  407098:	bl	4118c8 <hash_init_function_table@@Base>
  40709c:	add	x0, x29, #0x8b8
  4070a0:	mov	x1, #0x1000                	// #4096
  4070a4:	bl	406670 <getcwd@plt>
  4070a8:	cbz	x0, 407e94 <main@@Base+0x1084>
  4070ac:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  4070b0:	add	x0, x29, #0x8b8
  4070b4:	str	x19, [x29, #112]
  4070b8:	bl	418c60 <xstrdup@@Base>
  4070bc:	str	x0, [x19, #1912]
  4070c0:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  4070c4:	mov	x2, x24
  4070c8:	mov	x6, #0x0                   	// #0
  4070cc:	mov	w4, #0x0                   	// #0
  4070d0:	ldr	x5, [x22, #288]
  4070d4:	mov	w3, #0x0                   	// #0
  4070d8:	mov	x1, #0xa                   	// #10
  4070dc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4070e0:	add	x0, x0, #0x688
  4070e4:	str	wzr, [x29, #148]
  4070e8:	ldr	x5, [x5, #8]
  4070ec:	mov	w26, #0x0                   	// #0
  4070f0:	bl	422df0 <define_variable_in_set@@Base>
  4070f4:	mov	x1, x0
  4070f8:	ldr	x2, [x22, #288]
  4070fc:	mov	x6, #0x0                   	// #0
  407100:	ldrb	w7, [x1, #44]
  407104:	mov	w4, #0x0                   	// #0
  407108:	mov	w3, #0x0                   	// #0
  40710c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  407110:	ldr	x5, [x2, #8]
  407114:	orr	w7, w7, #0x10
  407118:	strb	w7, [x1, #44]
  40711c:	mov	x2, x24
  407120:	mov	x1, #0xd                   	// #13
  407124:	add	x0, x0, #0x698
  407128:	bl	422df0 <define_variable_in_set@@Base>
  40712c:	mov	x1, x0
  407130:	ldr	x3, [x22, #288]
  407134:	mov	x6, #0x0                   	// #0
  407138:	ldrb	w7, [x1, #44]
  40713c:	mov	w4, #0x0                   	// #0
  407140:	adrp	x2, 426000 <rpl_fcntl@@Base+0xf0>
  407144:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  407148:	ldr	x5, [x3, #8]
  40714c:	orr	w7, w7, #0x10
  407150:	strb	w7, [x1, #44]
  407154:	add	x2, x2, #0x968
  407158:	mov	w3, #0x0                   	// #0
  40715c:	mov	x1, #0xb                   	// #11
  407160:	add	x0, x0, #0x6a8
  407164:	bl	422df0 <define_variable_in_set@@Base>
  407168:	ldr	x1, [x22, #288]
  40716c:	mov	x2, x24
  407170:	mov	x6, #0x0                   	// #0
  407174:	mov	w4, #0x0                   	// #0
  407178:	mov	w3, #0x0                   	// #0
  40717c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  407180:	ldr	x5, [x1, #8]
  407184:	add	x0, x0, #0x1e0
  407188:	mov	x1, #0x7                   	// #7
  40718c:	bl	422df0 <define_variable_in_set@@Base>
  407190:	ldr	x0, [x22, #288]
  407194:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  407198:	add	x2, x2, #0x6b8
  40719c:	mov	x6, #0x0                   	// #0
  4071a0:	mov	w4, #0x0                   	// #0
  4071a4:	mov	w3, #0x0                   	// #0
  4071a8:	ldr	x5, [x0, #8]
  4071ac:	mov	x1, #0x9                   	// #9
  4071b0:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4071b4:	add	x0, x0, #0x768
  4071b8:	bl	422df0 <define_variable_in_set@@Base>
  4071bc:	mov	x0, #0x0                   	// #0
  4071c0:	bl	411920 <guile_gmake_setup@@Base>
  4071c4:	ldr	x0, [x21]
  4071c8:	cbz	x0, 40728c <main@@Base+0x47c>
  4071cc:	adrp	x28, 443000 <expanding_var@@Base+0x338>
  4071d0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4071d4:	add	x1, x1, #0x778
  4071d8:	mov	x5, x21
  4071dc:	mov	w27, w26
  4071e0:	str	x1, [x29, #136]
  4071e4:	add	x1, x28, #0xda8
  4071e8:	add	x28, x20, #0x8
  4071ec:	str	x1, [x29, #128]
  4071f0:	ldrb	w1, [x0]
  4071f4:	mov	x19, x0
  4071f8:	ldrh	w2, [x28, w1, sxtw #1]
  4071fc:	tbnz	w2, #5, 4076d8 <main@@Base+0x8c8>
  407200:	mov	x3, x19
  407204:	ldrb	w1, [x19, #1]!
  407208:	ldrh	w2, [x28, w1, sxtw #1]
  40720c:	tbz	w2, #5, 407200 <main@@Base+0x3f0>
  407210:	cbz	w1, 40727c <main@@Base+0x46c>
  407214:	sub	x4, x19, x0
  407218:	add	x25, x3, #0x2
  40721c:	cmp	x4, #0xd
  407220:	mov	w26, #0x0                   	// #0
  407224:	b.eq	407628 <main@@Base+0x818>  // b.none
  407228:	ldr	x2, [x22, #288]
  40722c:	mov	x1, x4
  407230:	ldr	x0, [x5]
  407234:	mov	w4, #0x1                   	// #1
  407238:	ldr	x5, [x2, #8]
  40723c:	mov	w3, w4
  407240:	mov	x2, x25
  407244:	mov	x6, #0x0                   	// #0
  407248:	bl	422df0 <define_variable_in_set@@Base>
  40724c:	mov	x19, x0
  407250:	ldr	x0, [x0]
  407254:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  407258:	add	x2, x2, #0xa30
  40725c:	cmp	x0, x2
  407260:	b.eq	40769c <main@@Base+0x88c>  // b.none
  407264:	ldrb	w1, [x0]
  407268:	cmp	w1, #0x53
  40726c:	b.eq	407680 <main@@Base+0x870>  // b.none
  407270:	ldrb	w0, [x19, #47]
  407274:	bfi	w0, w26, #5, #2
  407278:	strb	w0, [x19, #47]
  40727c:	add	w27, w27, #0x1
  407280:	add	x5, x21, w27, uxtw #3
  407284:	ldr	x0, [x21, w27, uxtw #3]
  407288:	cbnz	x0, 4071f0 <main@@Base+0x3e0>
  40728c:	adrp	x28, 426000 <rpl_fcntl@@Base+0xf0>
  407290:	add	x28, x28, #0xf60
  407294:	mov	x0, x28
  407298:	mov	x1, #0xc                   	// #12
  40729c:	bl	418608 <die@@Base+0xb98>
  4072a0:	ldr	x1, [x22, #288]
  4072a4:	mov	x2, x24
  4072a8:	mov	x6, #0x0                   	// #0
  4072ac:	mov	w4, #0x0                   	// #0
  4072b0:	mov	w3, #0x1                   	// #1
  4072b4:	mov	x0, x28
  4072b8:	ldr	x5, [x1, #8]
  4072bc:	mov	x1, #0xc                   	// #12
  4072c0:	bl	422df0 <define_variable_in_set@@Base>
  4072c4:	mov	x1, #0x9                   	// #9
  4072c8:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4072cc:	add	x0, x0, #0x3b8
  4072d0:	str	x0, [x29, #128]
  4072d4:	bl	418608 <die@@Base+0xb98>
  4072d8:	ldr	w0, [x20, #2208]
  4072dc:	mov	w1, #0xffffffff            	// #-1
  4072e0:	adrp	x4, 443000 <expanding_var@@Base+0x338>
  4072e4:	ldrb	w3, [x23, #8]
  4072e8:	add	w0, w0, w1
  4072ec:	mov	w2, #0x0                   	// #0
  4072f0:	cmp	w0, #0x1
  4072f4:	ldr	w19, [x4, #144]
  4072f8:	str	w1, [x4, #144]
  4072fc:	cset	w4, ls  // ls = plast
  407300:	ldr	w0, [x29, #144]
  407304:	bfxil	w3, w4, #0, #1
  407308:	strb	w3, [x23, #8]
  40730c:	ldr	x1, [x29, #168]
  407310:	tst	x3, #0x1
  407314:	csel	x3, x23, xzr, ne  // ne = any
  407318:	adrp	x4, 443000 <expanding_var@@Base+0x338>
  40731c:	str	x3, [x4, #3504]
  407320:	bl	417b60 <die@@Base+0xf0>
  407324:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407328:	ldr	w0, [x0, #144]
  40732c:	str	w0, [x29, #160]
  407330:	cmn	w0, #0x1
  407334:	b.ne	407340 <main@@Base+0x530>  // b.any
  407338:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40733c:	str	w19, [x0, #144]
  407340:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407344:	ldr	x0, [x0, #384]
  407348:	bl	406850 <fileno@plt>
  40734c:	bl	406ca0 <isatty@plt>
  407350:	cbnz	w0, 407988 <main@@Base+0xb78>
  407354:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407358:	ldr	x0, [x0, #360]
  40735c:	bl	406850 <fileno@plt>
  407360:	bl	406ca0 <isatty@plt>
  407364:	cbnz	w0, 407928 <main@@Base+0xb18>
  407368:	ldr	w0, [x20, #2208]
  40736c:	ldrb	w1, [x23, #8]
  407370:	sub	w0, w0, #0x1
  407374:	cmp	w0, #0x1
  407378:	cset	w0, hi  // hi = pmore
  40737c:	cset	w19, ls  // ls = plast
  407380:	tst	w0, w1
  407384:	b.ne	407f2c <main@@Base+0x111c>  // b.any
  407388:	ldrb	w2, [x23, #8]
  40738c:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  407390:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  407394:	mov	x1, #0x9                   	// #9
  407398:	add	x0, x0, #0x7a8
  40739c:	str	x0, [x29, #152]
  4073a0:	bfxil	w2, w19, #0, #1
  4073a4:	strb	w2, [x23, #8]
  4073a8:	tst	x2, #0x1
  4073ac:	csel	x2, x23, xzr, ne  // ne = any
  4073b0:	str	x2, [x3, #3504]
  4073b4:	bl	4231f0 <lookup_variable@@Base>
  4073b8:	cbz	x0, 4073d0 <main@@Base+0x5c0>
  4073bc:	ldr	x0, [x0, #8]
  4073c0:	ldrb	w1, [x0]
  4073c4:	cmp	w1, #0x2d
  4073c8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4073cc:	b.ne	408018 <main@@Base+0x1208>  // b.any
  4073d0:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  4073d4:	str	x0, [x29, #136]
  4073d8:	str	wzr, [x0, #2016]
  4073dc:	ldr	w0, [x20, #2224]
  4073e0:	ldr	w1, [x20, #588]
  4073e4:	cmp	w0, #0x0
  4073e8:	ldr	w0, [x29, #148]
  4073ec:	str	w1, [x29, #124]
  4073f0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4073f4:	cset	w0, eq  // eq = none
  4073f8:	str	w0, [x20, #2220]
  4073fc:	cbnz	w1, 4079e8 <main@@Base+0xbd8>
  407400:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407404:	ldr	w0, [x0, #1088]
  407408:	tbnz	w0, #0, 4076ec <main@@Base+0x8dc>
  40740c:	ldrb	w0, [x29, #2232]
  407410:	cbz	w0, 40745c <main@@Base+0x64c>
  407414:	ldr	x21, [x29, #168]
  407418:	ldr	x19, [x21]
  40741c:	cbz	x19, 40745c <main@@Base+0x64c>
  407420:	ldrb	w0, [x19]
  407424:	cmp	w0, #0x2f
  407428:	b.eq	40745c <main@@Base+0x64c>  // b.none
  40742c:	mov	x0, x19
  407430:	mov	w1, #0x2f                  	// #47
  407434:	bl	406bb0 <strchr@plt>
  407438:	cbz	x0, 40745c <main@@Base+0x64c>
  40743c:	mov	x3, x19
  407440:	add	x1, x29, #0x8b8
  407444:	adrp	x2, 427000 <_IO_stdin_used@@Base+0xc20>
  407448:	add	x2, x2, #0x8f0
  40744c:	mov	w0, #0x3                   	// #3
  407450:	bl	418ad8 <concat@@Base>
  407454:	bl	418c60 <xstrdup@@Base>
  407458:	str	x0, [x21]
  40745c:	adrp	x21, 446000 <commands_started@@Base+0x1c8>
  407460:	add	x1, x29, #0x8b8
  407464:	ldr	x0, [x20, #576]
  407468:	str	x1, [x21, #1976]
  40746c:	cbz	x0, 407494 <main@@Base+0x684>
  407470:	ldr	w1, [x29, #160]
  407474:	cmn	w1, #0x1
  407478:	b.eq	408070 <main@@Base+0x1260>  // b.none
  40747c:	ldr	w0, [x29, #148]
  407480:	cbz	w0, 408034 <main@@Base+0x1224>
  407484:	bl	425600 <jobserver_clear@@Base>
  407488:	ldr	x0, [x20, #576]
  40748c:	bl	406b90 <free@plt>
  407490:	str	xzr, [x20, #576]
  407494:	ldr	x1, [x22, #288]
  407498:	mov	x6, #0x0                   	// #0
  40749c:	ldr	x2, [x29, #168]
  4074a0:	mov	w4, #0x0                   	// #0
  4074a4:	ldr	x5, [x1, #8]
  4074a8:	mov	w3, #0x0                   	// #0
  4074ac:	ldr	x2, [x2]
  4074b0:	mov	x1, #0xc                   	// #12
  4074b4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4074b8:	add	x0, x0, #0x848
  4074bc:	bl	422df0 <define_variable_in_set@@Base>
  4074c0:	ldr	x1, [x22, #288]
  4074c4:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  4074c8:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4074cc:	add	x2, x2, #0x858
  4074d0:	add	x0, x0, #0x868
  4074d4:	mov	x6, #0x0                   	// #0
  4074d8:	ldr	x5, [x1, #8]
  4074dc:	mov	w4, #0x1                   	// #1
  4074e0:	mov	w3, #0x0                   	// #0
  4074e4:	mov	x1, #0x4                   	// #4
  4074e8:	bl	422df0 <define_variable_in_set@@Base>
  4074ec:	ldr	x19, [x20, #544]
  4074f0:	cbz	x19, 4075e4 <main@@Base+0x7d4>
  4074f4:	mov	x27, x19
  4074f8:	mov	x25, #0x0                   	// #0
  4074fc:	nop
  407500:	ldr	x26, [x27, #8]
  407504:	ldr	x0, [x26]
  407508:	bl	406680 <strlen@plt>
  40750c:	add	x25, x25, x0, lsl #1
  407510:	ldrb	w2, [x26, #44]
  407514:	ldr	x0, [x26, #8]
  407518:	tst	x2, #0x1
  40751c:	cinc	x25, x25, eq  // eq = none
  407520:	add	x25, x25, #0x2
  407524:	bl	406680 <strlen@plt>
  407528:	add	x25, x25, x0, lsl #1
  40752c:	ldr	x27, [x27]
  407530:	cbnz	x27, 407500 <main@@Base+0x6f0>
  407534:	add	x25, x25, #0xf
  407538:	mov	w8, #0x3a                  	// #58
  40753c:	and	x0, x25, #0xfffffffffffffff0
  407540:	mov	w9, #0x3d                  	// #61
  407544:	sub	sp, sp, x0
  407548:	mov	w7, #0x20                  	// #32
  40754c:	mov	x10, sp
  407550:	mov	x0, x10
  407554:	nop
  407558:	ldr	x11, [x19, #8]
  40755c:	ldr	x1, [x11]
  407560:	bl	416e40 <gmk_add_function@@Base+0x30>
  407564:	ldrb	w1, [x11, #44]
  407568:	tbnz	w1, #0, 407570 <main@@Base+0x760>
  40756c:	strb	w8, [x0], #1
  407570:	strb	w9, [x0], #1
  407574:	ldr	x1, [x11, #8]
  407578:	bl	416e40 <gmk_add_function@@Base+0x30>
  40757c:	mov	x1, x0
  407580:	strb	w7, [x0], #1
  407584:	ldr	x19, [x19]
  407588:	cbnz	x19, 407558 <main@@Base+0x748>
  40758c:	strb	wzr, [x1]
  407590:	mov	x2, x10
  407594:	mov	x6, #0x0                   	// #0
  407598:	mov	w4, #0x0                   	// #0
  40759c:	ldr	x5, [x22, #288]
  4075a0:	mov	w3, #0x6                   	// #6
  4075a4:	mov	x1, #0x17                  	// #23
  4075a8:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4075ac:	add	x0, x0, #0x3d8
  4075b0:	ldr	x5, [x5, #8]
  4075b4:	bl	422df0 <define_variable_in_set@@Base>
  4075b8:	ldr	x1, [x22, #288]
  4075bc:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  4075c0:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4075c4:	mov	w4, #0x1                   	// #1
  4075c8:	add	x2, x2, #0x870
  4075cc:	add	x0, x0, #0x3c8
  4075d0:	ldr	x5, [x1, #8]
  4075d4:	mov	w3, w4
  4075d8:	mov	x6, #0x0                   	// #0
  4075dc:	mov	x1, #0xd                   	// #13
  4075e0:	bl	422df0 <define_variable_in_set@@Base>
  4075e4:	ldr	x0, [x20, #2232]
  4075e8:	cbz	x0, 4076f4 <main@@Base+0x8e4>
  4075ec:	ldr	x0, [x0]
  4075f0:	ldr	x19, [x0]
  4075f4:	cbz	x19, 407f18 <main@@Base+0x1108>
  4075f8:	mov	w25, #0x0                   	// #0
  4075fc:	b	407614 <main@@Base+0x804>
  407600:	ldr	x0, [x20, #2232]
  407604:	add	w25, w25, #0x1
  407608:	ldr	x0, [x0]
  40760c:	ldr	x19, [x0, w25, uxtw #3]
  407610:	cbz	x19, 407f18 <main@@Base+0x1108>
  407614:	mov	x0, x19
  407618:	bl	406b80 <chdir@plt>
  40761c:	tbz	w0, #31, 407600 <main@@Base+0x7f0>
  407620:	mov	x0, x19
  407624:	bl	419828 <pfatal_with_name@@Base>
  407628:	ldr	x1, [x29, #136]
  40762c:	mov	x2, x4
  407630:	stp	x5, x4, [x29, #152]
  407634:	bl	406930 <strncmp@plt>
  407638:	ldp	x5, x4, [x29, #152]
  40763c:	cbnz	w0, 407228 <main@@Base+0x418>
  407640:	ldrb	w0, [x19, #1]
  407644:	cmp	w0, #0x2d
  407648:	b.ne	40765c <main@@Base+0x84c>  // b.any
  40764c:	ldr	x1, [x29, #128]
  407650:	add	x25, x19, #0x2
  407654:	mov	w0, #0x1                   	// #1
  407658:	str	w0, [x1]
  40765c:	mov	x0, x25
  407660:	mov	w2, #0xa                   	// #10
  407664:	mov	x1, #0x0                   	// #0
  407668:	stp	x5, x4, [x29, #152]
  40766c:	bl	406b60 <strtol@plt>
  407670:	mov	w26, #0x1                   	// #1
  407674:	str	w0, [x29, #148]
  407678:	ldp	x5, x4, [x29, #152]
  40767c:	b	407228 <main@@Base+0x418>
  407680:	add	x0, x0, #0x1
  407684:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  407688:	add	x1, x1, #0xa31
  40768c:	bl	406b40 <strcmp@plt>
  407690:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  407694:	add	x2, x1, #0xa30
  407698:	cbnz	w0, 407270 <main@@Base+0x460>
  40769c:	mov	x0, x2
  4076a0:	bl	418c60 <xstrdup@@Base>
  4076a4:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  4076a8:	mov	x3, x0
  4076ac:	add	x1, x2, #0x788
  4076b0:	mov	x0, x25
  4076b4:	str	x3, [x2, #1928]
  4076b8:	mov	w2, #0x5                   	// #5
  4076bc:	mov	w26, #0x1                   	// #1
  4076c0:	str	w2, [x1, #40]
  4076c4:	bl	418c60 <xstrdup@@Base>
  4076c8:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  4076cc:	add	x1, x1, #0x788
  4076d0:	str	x0, [x1, #8]
  4076d4:	b	407270 <main@@Base+0x460>
  4076d8:	cbz	w1, 40727c <main@@Base+0x46c>
  4076dc:	add	x25, x0, #0x1
  4076e0:	mov	x4, #0x0                   	// #0
  4076e4:	mov	w26, #0x0                   	// #0
  4076e8:	b	407228 <main@@Base+0x418>
  4076ec:	bl	416eb8 <gmk_add_function@@Base+0xa8>
  4076f0:	b	40740c <main@@Base+0x5fc>
  4076f4:	ldr	w0, [x20, #2216]
  4076f8:	cbz	w0, 407f54 <main@@Base+0x1144>
  4076fc:	ldr	w0, [x20, #2244]
  407700:	cbz	w0, 407708 <main@@Base+0x8f8>
  407704:	str	wzr, [x20, #2240]
  407708:	ldr	w0, [x20, #2248]
  40770c:	cbz	w0, 407718 <main@@Base+0x908>
  407710:	mov	w0, #0x1                   	// #1
  407714:	str	w0, [x20, #2252]
  407718:	ldr	x0, [x20, #2256]
  40771c:	cbz	x0, 407724 <main@@Base+0x914>
  407720:	ldr	x0, [x0]
  407724:	bl	41c2a0 <construct_include_path@@Base>
  407728:	ldr	x0, [x20, #2232]
  40772c:	cbz	x0, 407748 <main@@Base+0x938>
  407730:	add	x0, x29, #0x8b8
  407734:	mov	x1, #0x1000                	// #4096
  407738:	bl	406670 <getcwd@plt>
  40773c:	cbz	x0, 40848c <main@@Base+0x167c>
  407740:	add	x0, x29, #0x8b8
  407744:	str	x0, [x21, #1976]
  407748:	ldr	x1, [x22, #288]
  40774c:	add	x2, x29, #0x8b8
  407750:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  407754:	mov	x6, #0x0                   	// #0
  407758:	add	x0, x0, #0x890
  40775c:	mov	w4, #0x0                   	// #0
  407760:	ldr	x5, [x1, #8]
  407764:	mov	w3, #0x2                   	// #2
  407768:	mov	x1, #0x6                   	// #6
  40776c:	bl	422df0 <define_variable_in_set@@Base>
  407770:	ldr	x0, [x20, #2264]
  407774:	cbz	x0, 4079f4 <main@@Base+0xbe4>
  407778:	ldr	w1, [x0, #8]
  40777c:	cbz	w1, 4079f4 <main@@Base+0xbe4>
  407780:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  407784:	mov	w19, #0x0                   	// #0
  407788:	add	x1, x1, #0x8c8
  40778c:	str	x1, [x29, #104]
  407790:	b	4077a8 <main@@Base+0x998>
  407794:	ldr	x0, [x20, #2264]
  407798:	add	w19, w19, #0x1
  40779c:	ldr	w1, [x0, #8]
  4077a0:	cmp	w1, w19
  4077a4:	b.ls	4079f4 <main@@Base+0xbe4>  // b.plast
  4077a8:	ldr	x0, [x0]
  4077ac:	ubfiz	x26, x19, #3, #32
  4077b0:	ldr	x0, [x0, w19, uxtw #3]
  4077b4:	ldrb	w1, [x0]
  4077b8:	cmp	w1, #0x2d
  4077bc:	b.ne	407794 <main@@Base+0x984>  // b.any
  4077c0:	ldrb	w0, [x0, #1]
  4077c4:	cbnz	w0, 407794 <main@@Base+0x984>
  4077c8:	ldr	x0, [x20, #2272]
  4077cc:	cbnz	x0, 408734 <main@@Base+0x1924>
  4077d0:	ldr	x0, [x29, #104]
  4077d4:	bl	406d80 <getenv@plt>
  4077d8:	mov	x21, x0
  4077dc:	cbz	x0, 4077e8 <main@@Base+0x9d8>
  4077e0:	ldrb	w0, [x0]
  4077e4:	cbnz	w0, 4077f0 <main@@Base+0x9e0>
  4077e8:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x2c20>
  4077ec:	add	x21, x21, #0x658
  4077f0:	mov	x0, x21
  4077f4:	bl	406680 <strlen@plt>
  4077f8:	mov	x25, x0
  4077fc:	add	x0, x0, #0x19
  407800:	and	x0, x0, #0xfffffffffffffff0
  407804:	mov	x1, x21
  407808:	sub	sp, sp, x0
  40780c:	add	x2, x25, #0x1
  407810:	mov	x21, sp
  407814:	mov	x0, x21
  407818:	bl	406640 <memcpy@plt>
  40781c:	add	x0, x21, x25
  407820:	ldurb	w0, [x0, #-1]
  407824:	cmp	w0, #0x2f
  407828:	b.eq	407834 <main@@Base+0xa24>  // b.none
  40782c:	mov	w0, #0x2f                  	// #47
  407830:	strh	w0, [x21, x25]
  407834:	mov	x0, x21
  407838:	bl	406680 <strlen@plt>
  40783c:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  407840:	add	x2, x2, #0x8d0
  407844:	add	x3, x21, x0
  407848:	mov	x1, x21
  40784c:	ldr	x4, [x2]
  407850:	str	x4, [x21, x0]
  407854:	ldrb	w2, [x2, #8]
  407858:	add	x0, x20, #0x8e0
  40785c:	strb	w2, [x3, #8]
  407860:	bl	418fd8 <get_tmpfile@@Base>
  407864:	mov	x27, x0
  407868:	cbz	x0, 408720 <main@@Base+0x1910>
  40786c:	adrp	x25, 443000 <expanding_var@@Base+0x338>
  407870:	add	x25, x25, #0x188
  407874:	nop
  407878:	ldr	x0, [x25]
  40787c:	bl	406ad0 <feof@plt>
  407880:	cbnz	w0, 4078e0 <main@@Base+0xad0>
  407884:	ldr	x0, [x25]
  407888:	bl	406e00 <ferror@plt>
  40788c:	cbnz	w0, 4078e0 <main@@Base+0xad0>
  407890:	ldr	x3, [x25]
  407894:	add	x0, x29, #0xb8
  407898:	mov	x2, #0x800                 	// #2048
  40789c:	mov	x1, #0x1                   	// #1
  4078a0:	bl	406b70 <fread@plt>
  4078a4:	mov	x21, x0
  4078a8:	cbz	x0, 407878 <main@@Base+0xa68>
  4078ac:	mov	x2, x0
  4078b0:	mov	x3, x27
  4078b4:	add	x0, x29, #0xb8
  4078b8:	mov	x1, #0x1                   	// #1
  4078bc:	bl	406be0 <fwrite@plt>
  4078c0:	cmp	x0, x21
  4078c4:	b.eq	407878 <main@@Base+0xa68>  // b.none
  4078c8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4078cc:	add	x1, x1, #0x8f8
  4078d0:	mov	w2, #0x5                   	// #5
  4078d4:	mov	x0, #0x0                   	// #0
  4078d8:	bl	406cd0 <dcgettext@plt>
  4078dc:	bl	419828 <pfatal_with_name@@Base>
  4078e0:	mov	x0, x27
  4078e4:	bl	406890 <fclose@plt>
  4078e8:	ldr	x1, [x20, #2264]
  4078ec:	ldr	x0, [x20, #2272]
  4078f0:	ldr	x21, [x1]
  4078f4:	bl	422490 <strcache_add@@Base>
  4078f8:	str	x0, [x21, x26]
  4078fc:	ldr	x0, [x20, #2272]
  407900:	bl	422490 <strcache_add@@Base>
  407904:	bl	40c820 <enter_file@@Base>
  407908:	ldr	w1, [x0, #136]
  40790c:	mov	w3, #0xbbf0                	// #48112
  407910:	mov	w2, #0x40c                 	// #1036
  407914:	movk	w3, #0xfffe, lsl #16
  407918:	and	w1, w1, w3
  40791c:	orr	w1, w1, w2
  407920:	str	w1, [x0, #136]
  407924:	b	407794 <main@@Base+0x984>
  407928:	adrp	x19, 429000 <_IO_stdin_used@@Base+0x2c20>
  40792c:	add	x19, x19, #0x798
  407930:	mov	x0, x19
  407934:	mov	x1, #0xc                   	// #12
  407938:	bl	4231f0 <lookup_variable@@Base>
  40793c:	cbnz	x0, 407368 <main@@Base+0x558>
  407940:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407944:	ldr	x0, [x0, #360]
  407948:	bl	406850 <fileno@plt>
  40794c:	bl	406710 <ttyname@plt>
  407950:	mov	x2, x0
  407954:	cbz	x0, 408508 <main@@Base+0x16f8>
  407958:	ldr	x1, [x22, #288]
  40795c:	mov	x0, x19
  407960:	mov	x6, #0x0                   	// #0
  407964:	mov	w4, #0x0                   	// #0
  407968:	mov	w3, #0x0                   	// #0
  40796c:	ldr	x5, [x1, #8]
  407970:	mov	x1, #0xc                   	// #12
  407974:	bl	422df0 <define_variable_in_set@@Base>
  407978:	ldrb	w1, [x0, #47]
  40797c:	and	w1, w1, #0xffffff9f
  407980:	strb	w1, [x0, #47]
  407984:	b	407368 <main@@Base+0x558>
  407988:	adrp	x19, 429000 <_IO_stdin_used@@Base+0x2c20>
  40798c:	add	x19, x19, #0x788
  407990:	mov	x0, x19
  407994:	mov	x1, #0xc                   	// #12
  407998:	bl	4231f0 <lookup_variable@@Base>
  40799c:	cbnz	x0, 407354 <main@@Base+0x544>
  4079a0:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4079a4:	ldr	x0, [x0, #384]
  4079a8:	bl	406850 <fileno@plt>
  4079ac:	bl	406710 <ttyname@plt>
  4079b0:	mov	x2, x0
  4079b4:	cbz	x0, 408514 <main@@Base+0x1704>
  4079b8:	ldr	x1, [x22, #288]
  4079bc:	mov	x0, x19
  4079c0:	mov	x6, #0x0                   	// #0
  4079c4:	mov	w4, #0x0                   	// #0
  4079c8:	mov	w3, #0x0                   	// #0
  4079cc:	ldr	x5, [x1, #8]
  4079d0:	mov	x1, #0xc                   	// #12
  4079d4:	bl	422df0 <define_variable_in_set@@Base>
  4079d8:	ldrb	w1, [x0, #47]
  4079dc:	and	w1, w1, #0xffffff9f
  4079e0:	strb	w1, [x0, #47]
  4079e4:	b	407354 <main@@Base+0x544>
  4079e8:	bl	416eb8 <gmk_add_function@@Base+0xa8>
  4079ec:	mov	w0, #0x0                   	// #0
  4079f0:	bl	417a70 <die@@Base>
  4079f4:	adrp	x1, 414000 <is_bourne_compatible_shell@@Base+0x240>
  4079f8:	add	x1, x1, #0x858
  4079fc:	mov	w0, #0x11                  	// #17
  407a00:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  407a04:	add	x0, x29, #0xb8
  407a08:	bl	406910 <sigemptyset@plt>
  407a0c:	mov	w1, #0x11                  	// #17
  407a10:	add	x0, x29, #0xb8
  407a14:	bl	406d40 <sigaddset@plt>
  407a18:	add	x1, x29, #0xb8
  407a1c:	mov	x2, #0x0                   	// #0
  407a20:	mov	w0, #0x2                   	// #2
  407a24:	bl	4066e0 <sigprocmask@plt>
  407a28:	tbnz	w0, #31, 407f48 <main@@Base+0x1138>
  407a2c:	adrp	x1, 416000 <reap_children@@Base+0xca8>
  407a30:	add	x1, x1, #0xe28
  407a34:	mov	w0, #0xa                   	// #10
  407a38:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  407a3c:	bl	40a748 <set_default_suffixes@@Base>
  407a40:	bl	40a860 <install_default_suffix_rules@@Base>
  407a44:	bl	423728 <define_automatic_variables@@Base>
  407a48:	mov	w1, #0x0                   	// #0
  407a4c:	mov	w0, #0x0                   	// #0
  407a50:	bl	4170e0 <gmk_add_function@@Base+0x2d0>
  407a54:	ldrb	w1, [x0, #47]
  407a58:	and	w1, w1, #0xffffff9f
  407a5c:	strb	w1, [x0, #47]
  407a60:	bl	40a970 <define_default_variables@@Base>
  407a64:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  407a68:	add	x0, x0, #0x938
  407a6c:	bl	422490 <strcache_add@@Base>
  407a70:	bl	40c820 <enter_file@@Base>
  407a74:	ldr	x1, [x22, #288]
  407a78:	adrp	x3, 446000 <commands_started@@Base+0x1c8>
  407a7c:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  407a80:	mov	x6, #0x0                   	// #0
  407a84:	str	x0, [x3, #2024]
  407a88:	mov	w4, #0x0                   	// #0
  407a8c:	ldr	x5, [x1, #8]
  407a90:	add	x0, x2, #0x948
  407a94:	mov	x1, #0xd                   	// #13
  407a98:	mov	x2, x24
  407a9c:	mov	w3, #0x2                   	// #2
  407aa0:	bl	422df0 <define_variable_in_set@@Base>
  407aa4:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  407aa8:	ldr	x1, [x20, #528]
  407aac:	str	x0, [x2, #2008]
  407ab0:	cbz	x1, 407ba0 <main@@Base+0xd90>
  407ab4:	ldr	w0, [x1, #8]
  407ab8:	ubfiz	x19, x0, #3, #32
  407abc:	cbz	w0, 407b0c <main@@Base+0xcfc>
  407ac0:	mov	w25, #0x0                   	// #0
  407ac4:	nop
  407ac8:	ldr	x0, [x1]
  407acc:	ldr	x0, [x0, w25, uxtw #3]
  407ad0:	add	w25, w25, #0x1
  407ad4:	bl	418c60 <xstrdup@@Base>
  407ad8:	mov	x21, x0
  407adc:	bl	406680 <strlen@plt>
  407ae0:	mov	x2, x0
  407ae4:	mov	x1, #0x0                   	// #0
  407ae8:	mov	x0, x21
  407aec:	add	x19, x19, x2, lsl #1
  407af0:	bl	41e9c0 <eval_buffer@@Base>
  407af4:	mov	x0, x21
  407af8:	bl	406b90 <free@plt>
  407afc:	ldr	x1, [x20, #528]
  407b00:	ldr	w0, [x1, #8]
  407b04:	cmp	w0, w25
  407b08:	b.hi	407ac8 <main@@Base+0xcb8>  // b.pmore
  407b0c:	ldr	x1, [x20, #528]
  407b10:	add	x0, x19, #0xf
  407b14:	and	x0, x0, #0xfffffffffffffff0
  407b18:	sub	sp, sp, x0
  407b1c:	ldr	w0, [x1, #8]
  407b20:	mov	x10, sp
  407b24:	cbz	w0, 408760 <main@@Base+0x1950>
  407b28:	mov	x9, #0x2d2d                	// #11565
  407b2c:	mov	x0, x10
  407b30:	movk	x9, #0x7665, lsl #16
  407b34:	mov	w7, #0x0                   	// #0
  407b38:	movk	x9, #0x6c61, lsl #32
  407b3c:	mov	w8, #0x20                  	// #32
  407b40:	movk	x9, #0x3d, lsl #48
  407b44:	nop
  407b48:	str	x9, [x0], #7
  407b4c:	ldr	x1, [x20, #528]
  407b50:	ldr	x1, [x1]
  407b54:	ldr	x1, [x1, w7, uxtw #3]
  407b58:	add	w7, w7, #0x1
  407b5c:	bl	416e40 <gmk_add_function@@Base+0x30>
  407b60:	strb	w8, [x0], #1
  407b64:	ldr	x1, [x20, #528]
  407b68:	ldr	w1, [x1, #8]
  407b6c:	cmp	w1, w7
  407b70:	b.hi	407b48 <main@@Base+0xd38>  // b.pmore
  407b74:	sturb	wzr, [x0, #-1]
  407b78:	mov	x2, x10
  407b7c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  407b80:	mov	x6, #0x0                   	// #0
  407b84:	ldr	x5, [x22, #288]
  407b88:	add	x0, x0, #0x958
  407b8c:	mov	w4, #0x0                   	// #0
  407b90:	mov	w3, #0x6                   	// #6
  407b94:	mov	x1, #0x10                  	// #16
  407b98:	ldr	x5, [x5, #8]
  407b9c:	bl	422df0 <define_variable_in_set@@Base>
  407ba0:	ldr	x0, [x20, #2264]
  407ba4:	cbz	x0, 407bac <main@@Base+0xd9c>
  407ba8:	ldr	x0, [x0]
  407bac:	bl	41e720 <read_all_makefiles@@Base>
  407bb0:	mov	x27, x0
  407bb4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407bb8:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  407bbc:	mov	x1, #0xc                   	// #12
  407bc0:	ldr	w19, [x0, #144]
  407bc4:	mov	w0, #0xffffffff            	// #-1
  407bc8:	ldr	w25, [x20, #2248]
  407bcc:	str	w0, [x2, #144]
  407bd0:	mov	x0, x28
  407bd4:	ldr	w21, [x20, #2252]
  407bd8:	bl	418608 <die@@Base+0xb98>
  407bdc:	ldr	x1, [x22, #288]
  407be0:	mov	x2, x24
  407be4:	mov	x6, #0x0                   	// #0
  407be8:	mov	w4, #0x0                   	// #0
  407bec:	mov	w3, #0x5                   	// #5
  407bf0:	mov	x0, x28
  407bf4:	ldr	x5, [x1, #8]
  407bf8:	mov	x1, #0xc                   	// #12
  407bfc:	bl	422df0 <define_variable_in_set@@Base>
  407c00:	ldr	x0, [x29, #128]
  407c04:	mov	x1, #0x9                   	// #9
  407c08:	bl	418608 <die@@Base+0xb98>
  407c0c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407c10:	ldr	w0, [x0, #144]
  407c14:	cmn	w0, #0x1
  407c18:	ldr	w0, [x29, #160]
  407c1c:	ccmn	w0, #0x1, #0x0, ne  // ne = any
  407c20:	b.eq	408614 <main@@Base+0x1804>  // b.none
  407c24:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407c28:	str	w19, [x0, #144]
  407c2c:	ldr	w19, [x20, #2208]
  407c30:	ldrb	w0, [x23, #8]
  407c34:	sub	w19, w19, #0x1
  407c38:	cmp	w19, #0x1
  407c3c:	cset	w1, hi  // hi = pmore
  407c40:	cset	w28, ls  // ls = plast
  407c44:	tst	w1, w0
  407c48:	b.ne	408644 <main@@Base+0x1834>  // b.any
  407c4c:	ldrb	w0, [x23, #8]
  407c50:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  407c54:	ldr	w1, [x20, #2252]
  407c58:	bfxil	w0, w28, #0, #1
  407c5c:	strb	w0, [x23, #8]
  407c60:	tst	x0, #0x1
  407c64:	csel	x0, x23, xzr, ne  // ne = any
  407c68:	str	x0, [x2, #3504]
  407c6c:	cmp	w1, #0x0
  407c70:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  407c74:	b.eq	4085d8 <main@@Base+0x17c8>  // b.none
  407c78:	ldr	w0, [x20, #2248]
  407c7c:	cmp	w0, #0x0
  407c80:	ccmp	w25, #0x0, #0x0, ne  // ne = any
  407c84:	b.eq	408650 <main@@Base+0x1840>  // b.none
  407c88:	ldr	x0, [x20, #576]
  407c8c:	cbz	x0, 408448 <main@@Base+0x1638>
  407c90:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  407c94:	str	wzr, [x0, #2192]
  407c98:	mov	w1, #0x0                   	// #0
  407c9c:	mov	w0, #0x1                   	// #1
  407ca0:	bl	4170e0 <gmk_add_function@@Base+0x2d0>
  407ca4:	bl	40d640 <snap_deps@@Base>
  407ca8:	bl	421cb8 <convert_to_pattern@@Base>
  407cac:	bl	40a8f8 <install_default_implicit_rules@@Base>
  407cb0:	bl	4216c0 <snap_implicit_rules@@Base>
  407cb4:	bl	424f50 <build_vpath_lists@@Base>
  407cb8:	ldr	x0, [x20, #2280]
  407cbc:	cbz	x0, 407cf8 <main@@Base+0xee8>
  407cc0:	ldr	x22, [x0]
  407cc4:	ldr	x0, [x22]
  407cc8:	cbz	x0, 407cf8 <main@@Base+0xee8>
  407ccc:	mov	x25, #0x2                   	// #2
  407cd0:	mov	w21, #0xfffffbf0            	// #-1040
  407cd4:	mov	w19, #0x40c                 	// #1036
  407cd8:	bl	40c820 <enter_file@@Base>
  407cdc:	ldrh	w1, [x0, #136]
  407ce0:	stp	x25, x25, [x0, #112]
  407ce4:	and	w1, w1, w21
  407ce8:	orr	w1, w1, w19
  407cec:	strh	w1, [x0, #136]
  407cf0:	ldr	x0, [x22, #8]!
  407cf4:	cbnz	x0, 407cd8 <main@@Base+0xec8>
  407cf8:	ldr	w0, [x29, #148]
  407cfc:	cbnz	w0, 407f64 <main@@Base+0x1154>
  407d00:	ldr	x0, [x20, #2288]
  407d04:	cbz	x0, 407d28 <main@@Base+0xf18>
  407d08:	mov	x21, #0xffffffffffffffff    	// #-1
  407d0c:	ldr	x19, [x0]
  407d10:	b	407d20 <main@@Base+0xf10>
  407d14:	add	x19, x19, #0x8
  407d18:	bl	40c820 <enter_file@@Base>
  407d1c:	stp	x21, x21, [x0, #112]
  407d20:	ldr	x0, [x19]
  407d24:	cbnz	x0, 407d14 <main@@Base+0xf04>
  407d28:	bl	425c40 <remote_setup@@Base>
  407d2c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407d30:	str	xzr, [x0, #3504]
  407d34:	mov	x0, x23
  407d38:	bl	419790 <output_close@@Base>
  407d3c:	cbz	x27, 40877c <main@@Base+0x196c>
  407d40:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407d44:	ldr	w0, [x0, #1088]
  407d48:	tbnz	w0, #0, 4085b0 <main@@Base+0x17a0>
  407d4c:	mov	x28, x27
  407d50:	mov	w0, #0x0                   	// #0
  407d54:	nop
  407d58:	ldr	x28, [x28]
  407d5c:	add	w0, w0, #0x1
  407d60:	cbnz	x28, 407d58 <main@@Base+0xf48>
  407d64:	ubfiz	x0, x0, #3, #32
  407d68:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x2c20>
  407d6c:	add	x0, x0, #0xf
  407d70:	add	x22, x22, #0x9c8
  407d74:	and	x0, x0, #0xffffffff0
  407d78:	mov	x19, x27
  407d7c:	sub	sp, sp, x0
  407d80:	mov	w21, #0x0                   	// #0
  407d84:	mov	x23, sp
  407d88:	ldr	x0, [x27, #16]
  407d8c:	ldr	x25, [x0, #104]
  407d90:	cbnz	x25, 407da0 <main@@Base+0xf90>
  407d94:	b	407fc0 <main@@Base+0x11b0>
  407d98:	ldr	x25, [x25, #56]
  407d9c:	cbz	x25, 407fc0 <main@@Base+0x11b0>
  407da0:	ldr	x1, [x25, #24]
  407da4:	cbnz	x1, 407d98 <main@@Base+0xf88>
  407da8:	ldr	x1, [x25, #32]
  407dac:	cbz	x1, 407d98 <main@@Base+0xf88>
  407db0:	ldr	w0, [x20]
  407db4:	tbnz	w0, #1, 407fdc <main@@Base+0x11cc>
  407db8:	ldr	x1, [x27]
  407dbc:	cbz	x28, 408004 <main@@Base+0x11f4>
  407dc0:	str	x1, [x28]
  407dc4:	mov	x0, x27
  407dc8:	bl	406b90 <free@plt>
  407dcc:	ldr	x27, [x28]
  407dd0:	cbnz	x27, 407d88 <main@@Base+0xf78>
  407dd4:	mov	w1, #0x1                   	// #1
  407dd8:	mov	w0, w1
  407ddc:	bl	4170e0 <gmk_add_function@@Base+0x2d0>
  407de0:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407de4:	ldr	w21, [x0, #1088]
  407de8:	tbnz	w21, #8, 407df0 <main@@Base+0xfe0>
  407dec:	str	wzr, [x0, #1088]
  407df0:	mov	w1, #0x1                   	// #1
  407df4:	mov	x0, x19
  407df8:	str	w1, [x20, #2296]
  407dfc:	bl	420f90 <update_goal_chain@@Base>
  407e00:	str	wzr, [x20, #2296]
  407e04:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  407e08:	str	w21, [x1, #1088]
  407e0c:	cbz	w0, 4081cc <main@@Base+0x13bc>
  407e10:	cmp	w0, #0x3
  407e14:	b.eq	4080ac <main@@Base+0x129c>  // b.none
  407e18:	mov	w21, #0x0                   	// #0
  407e1c:	mov	w1, #0x0                   	// #0
  407e20:	mov	w0, #0x1                   	// #1
  407e24:	bl	4170e0 <gmk_add_function@@Base+0x2d0>
  407e28:	ldr	w0, [x20, #2224]
  407e2c:	str	w0, [x20, #2220]
  407e30:	ldr	w0, [x29, #148]
  407e34:	cbnz	w0, 407f94 <main@@Base+0x1184>
  407e38:	ldr	x0, [x20, #2272]
  407e3c:	cbz	x0, 407e48 <main@@Base+0x1038>
  407e40:	bl	406db0 <unlink@plt>
  407e44:	tbnz	w0, #31, 4084d0 <main@@Base+0x16c0>
  407e48:	ldr	x0, [x20, #552]
  407e4c:	cbz	x0, 408688 <main@@Base+0x1878>
  407e50:	ldr	x0, [x20, #560]
  407e54:	str	xzr, [x0]
  407e58:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407e5c:	ldr	w0, [x0, #1088]
  407e60:	tbnz	w0, #0, 4086f8 <main@@Base+0x18e8>
  407e64:	ldr	x0, [x20, #552]
  407e68:	bl	420f90 <update_goal_chain@@Base>
  407e6c:	cmp	w0, #0x2
  407e70:	b.eq	4086f0 <main@@Base+0x18e0>  // b.none
  407e74:	cmp	w0, #0x3
  407e78:	mov	w0, #0x2                   	// #2
  407e7c:	csel	w21, w21, w0, ne  // ne = any
  407e80:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  407e84:	ldr	w0, [x0, #2184]
  407e88:	cbnz	w0, 408660 <main@@Base+0x1850>
  407e8c:	mov	w0, w21
  407e90:	bl	417a70 <die@@Base>
  407e94:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  407e98:	mov	x19, x0
  407e9c:	mov	x1, x24
  407ea0:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  407ea4:	add	x0, x0, #0x680
  407ea8:	str	x19, [x29, #112]
  407eac:	bl	419f38 <perror_with_name@@Base>
  407eb0:	str	xzr, [x19, #1912]
  407eb4:	strb	wzr, [x29, #2232]
  407eb8:	b	4070c0 <main@@Base+0x2b0>
  407ebc:	mov	x1, x0
  407ec0:	mov	w0, #0x19                  	// #25
  407ec4:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  407ec8:	b	40702c <main@@Base+0x21c>
  407ecc:	mov	x1, x0
  407ed0:	mov	w0, #0x18                  	// #24
  407ed4:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  407ed8:	b	40700c <main@@Base+0x1fc>
  407edc:	mov	x1, x0
  407ee0:	mov	w0, #0xf                   	// #15
  407ee4:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  407ee8:	b	406fec <main@@Base+0x1dc>
  407eec:	mov	x1, x0
  407ef0:	mov	w0, #0x2                   	// #2
  407ef4:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  407ef8:	b	406fcc <main@@Base+0x1bc>
  407efc:	mov	x1, x0
  407f00:	mov	w0, #0x3                   	// #3
  407f04:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  407f08:	b	406fac <main@@Base+0x19c>
  407f0c:	mov	x1, x0
  407f10:	bl	416fd0 <gmk_add_function@@Base+0x1c0>
  407f14:	b	406f8c <main@@Base+0x17c>
  407f18:	ldr	w0, [x20, #2216]
  407f1c:	cbnz	w0, 4076fc <main@@Base+0x8ec>
  407f20:	mov	w0, #0x1                   	// #1
  407f24:	str	w0, [x20, #2240]
  407f28:	b	4076fc <main@@Base+0x8ec>
  407f2c:	mov	x0, x23
  407f30:	bl	419790 <output_close@@Base>
  407f34:	b	407388 <main@@Base+0x578>
  407f38:	ldr	x0, [x29, #168]
  407f3c:	ldr	x0, [x0]
  407f40:	str	x0, [x1, #2000]
  407f44:	b	407084 <main@@Base+0x274>
  407f48:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  407f4c:	add	x0, x0, #0x910
  407f50:	bl	419828 <pfatal_with_name@@Base>
  407f54:	ldr	x0, [x29, #136]
  407f58:	ldr	w0, [x0, #2016]
  407f5c:	cbnz	w0, 407f20 <main@@Base+0x1110>
  407f60:	b	4076fc <main@@Base+0x8ec>
  407f64:	bl	425c40 <remote_setup@@Base>
  407f68:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407f6c:	str	xzr, [x0, #3504]
  407f70:	mov	x0, x23
  407f74:	bl	419790 <output_close@@Base>
  407f78:	cbnz	x27, 407d40 <main@@Base+0xf30>
  407f7c:	mov	w1, #0x0                   	// #0
  407f80:	mov	w0, #0x1                   	// #1
  407f84:	bl	4170e0 <gmk_add_function@@Base+0x2d0>
  407f88:	mov	w21, #0x0                   	// #0
  407f8c:	ldr	w0, [x20, #2224]
  407f90:	str	w0, [x20, #2220]
  407f94:	ldr	x0, [x20, #2288]
  407f98:	cbz	x0, 407e38 <main@@Base+0x1028>
  407f9c:	mov	x22, #0xffffffffffffffff    	// #-1
  407fa0:	ldr	x19, [x0]
  407fa4:	b	407fb4 <main@@Base+0x11a4>
  407fa8:	add	x19, x19, #0x8
  407fac:	bl	40c820 <enter_file@@Base>
  407fb0:	stp	x22, x22, [x0, #112]
  407fb4:	ldr	x0, [x19]
  407fb8:	cbnz	x0, 407fa8 <main@@Base+0x1198>
  407fbc:	b	407e38 <main@@Base+0x1028>
  407fc0:	ldr	x1, [x0, #112]
  407fc4:	cbz	x1, 408060 <main@@Base+0x1250>
  407fc8:	mov	x28, x27
  407fcc:	str	x1, [x23, w21, uxtw #3]
  407fd0:	add	w21, w21, #0x1
  407fd4:	ldr	x27, [x27]
  407fd8:	b	407dd0 <main@@Base+0xfc0>
  407fdc:	mov	x1, x22
  407fe0:	mov	w2, #0x5                   	// #5
  407fe4:	mov	x0, #0x0                   	// #0
  407fe8:	bl	406cd0 <dcgettext@plt>
  407fec:	ldr	x1, [x25]
  407ff0:	bl	406d60 <printf@plt>
  407ff4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  407ff8:	ldr	x0, [x0, #384]
  407ffc:	bl	406c20 <fflush@plt>
  408000:	b	407db8 <main@@Base+0xfa8>
  408004:	mov	x0, x27
  408008:	mov	x27, x1
  40800c:	mov	x19, x27
  408010:	bl	406b90 <free@plt>
  408014:	b	407dd0 <main@@Base+0xfc0>
  408018:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  40801c:	mov	w2, #0xa                   	// #10
  408020:	mov	x1, #0x0                   	// #0
  408024:	str	x19, [x29, #136]
  408028:	bl	406b60 <strtol@plt>
  40802c:	str	w0, [x19, #2016]
  408030:	b	4073dc <main@@Base+0x5cc>
  408034:	mov	w2, #0x5                   	// #5
  408038:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  40803c:	mov	x0, #0x0                   	// #0
  408040:	add	x1, x1, #0x808
  408044:	bl	406cd0 <dcgettext@plt>
  408048:	mov	x2, x0
  40804c:	ldr	w3, [x29, #160]
  408050:	mov	x1, #0x14                  	// #20
  408054:	mov	x0, #0x0                   	// #0
  408058:	bl	419dc8 <error@@Base>
  40805c:	b	407484 <main@@Base+0x674>
  408060:	mov	w1, #0x0                   	// #0
  408064:	bl	41eef8 <f_mtime@@Base>
  408068:	mov	x1, x0
  40806c:	b	407fc8 <main@@Base+0x11b8>
  408070:	bl	425468 <jobserver_parse_auth@@Base>
  408074:	cbnz	w0, 407494 <main@@Base+0x684>
  408078:	mov	w2, #0x5                   	// #5
  40807c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  408080:	mov	x0, #0x0                   	// #0
  408084:	add	x1, x1, #0x7b8
  408088:	bl	406cd0 <dcgettext@plt>
  40808c:	mov	x2, x0
  408090:	mov	x1, #0x0                   	// #0
  408094:	mov	x0, #0x0                   	// #0
  408098:	bl	419dc8 <error@@Base>
  40809c:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  4080a0:	mov	w0, #0x1                   	// #1
  4080a4:	str	w0, [x1, #144]
  4080a8:	b	407484 <main@@Base+0x674>
  4080ac:	adrp	x28, 429000 <_IO_stdin_used@@Base+0x2c20>
  4080b0:	add	x28, x28, #0xa18
  4080b4:	adrp	x27, 429000 <_IO_stdin_used@@Base+0x2c20>
  4080b8:	mov	w22, #0x0                   	// #0
  4080bc:	add	x0, x27, #0xa40
  4080c0:	mov	w21, #0x0                   	// #0
  4080c4:	mov	w25, #0x0                   	// #0
  4080c8:	str	x0, [x29, #128]
  4080cc:	str	wzr, [x29, #160]
  4080d0:	cbz	x19, 40859c <main@@Base+0x178c>
  4080d4:	ldr	x0, [x19, #16]
  4080d8:	ldrb	w1, [x0, #137]
  4080dc:	tbz	w1, #2, 408110 <main@@Base+0x1300>
  4080e0:	ldrb	w1, [x0, #136]
  4080e4:	tst	x1, #0x3
  4080e8:	b.ne	408160 <main@@Base+0x1350>  // b.any
  4080ec:	ldr	x1, [x0, #112]
  4080f0:	cbz	x1, 408638 <main@@Base+0x1828>
  4080f4:	ldr	x0, [x23, w25, uxtw #3]
  4080f8:	cmp	x0, x1
  4080fc:	cset	w0, ne  // ne = any
  408100:	orr	w22, w22, w0
  408104:	add	w25, w25, #0x1
  408108:	ldr	x19, [x19]
  40810c:	b	4080d0 <main@@Base+0x12c0>
  408110:	ldrb	w1, [x19, #32]
  408114:	tbnz	w1, #2, 408104 <main@@Base+0x12f4>
  408118:	ldr	x26, [x19, #8]
  40811c:	cbz	x26, 408658 <main@@Base+0x1848>
  408120:	mov	x0, x26
  408124:	str	w1, [x29, #104]
  408128:	bl	406680 <strlen@plt>
  40812c:	mov	x27, x0
  408130:	ldr	w1, [x29, #104]
  408134:	tbz	w1, #1, 408434 <main@@Base+0x1624>
  408138:	mov	x1, x28
  40813c:	mov	w2, #0x5                   	// #5
  408140:	mov	x0, #0x0                   	// #0
  408144:	bl	406cd0 <dcgettext@plt>
  408148:	mov	x3, x26
  40814c:	mov	x2, x0
  408150:	mov	x1, x27
  408154:	mov	x0, #0x0                   	// #0
  408158:	bl	419dc8 <error@@Base>
  40815c:	b	408104 <main@@Base+0x12f4>
  408160:	ldrb	w1, [x19, #32]
  408164:	tbnz	w1, #2, 408104 <main@@Base+0x12f4>
  408168:	ldr	x0, [x0]
  40816c:	bl	406680 <strlen@plt>
  408170:	mov	x21, x0
  408174:	mov	w2, #0x5                   	// #5
  408178:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  40817c:	mov	x0, #0x0                   	// #0
  408180:	add	x1, x1, #0x9f8
  408184:	bl	406cd0 <dcgettext@plt>
  408188:	mov	x2, x0
  40818c:	ldr	x3, [x19, #16]
  408190:	mov	x1, x21
  408194:	mov	x0, #0x0                   	// #0
  408198:	ldr	x3, [x3]
  40819c:	bl	419dc8 <error@@Base>
  4081a0:	ldr	x0, [x19, #16]
  4081a4:	ldr	x1, [x0, #112]
  4081a8:	cbz	x1, 4087ec <main@@Base+0x19dc>
  4081ac:	cmp	x1, #0x1
  4081b0:	b.eq	4087c4 <main@@Base+0x19b4>  // b.none
  4081b4:	ldr	x0, [x23, w25, uxtw #3]
  4081b8:	cmp	x0, x1
  4081bc:	cset	w0, ne  // ne = any
  4081c0:	orr	w22, w22, w0
  4081c4:	mov	w21, #0x2                   	// #2
  4081c8:	b	408104 <main@@Base+0x12f4>
  4081cc:	mov	w0, #0x0                   	// #0
  4081d0:	bl	40cda0 <remove_intermediates@@Base>
  4081d4:	ldr	w0, [x20, #520]
  4081d8:	cbnz	w0, 408500 <main@@Base+0x16f0>
  4081dc:	mov	w0, #0x0                   	// #0
  4081e0:	bl	4179a0 <gmk_add_function@@Base+0xb90>
  4081e4:	ldr	x0, [x20, #2264]
  4081e8:	cbz	x0, 408250 <main@@Base+0x1440>
  4081ec:	ldr	w26, [x29, #124]
  4081f0:	adrp	x23, 429000 <_IO_stdin_used@@Base+0x2c20>
  4081f4:	ldr	w27, [x29, #144]
  4081f8:	add	x23, x23, #0xa60
  4081fc:	ldr	x22, [x29, #168]
  408200:	mov	w21, #0x1                   	// #1
  408204:	cmp	w21, w27
  408208:	b.ge	408250 <main@@Base+0x1440>  // b.tcont
  40820c:	ldr	x19, [x22, w21, sxtw #3]
  408210:	mov	x1, x23
  408214:	add	x25, x22, w21, sxtw #3
  408218:	mov	x2, #0x2                   	// #2
  40821c:	mov	x0, x19
  408220:	bl	406930 <strncmp@plt>
  408224:	cbnz	w0, 408248 <main@@Base+0x1438>
  408228:	ldr	x1, [x20, #2264]
  40822c:	ldrb	w0, [x19, #2]
  408230:	ldr	x1, [x1]
  408234:	ldr	x2, [x1, w26, sxtw #3]
  408238:	cbnz	w0, 408580 <main@@Base+0x1770>
  40823c:	add	w21, w21, #0x1
  408240:	add	w26, w26, #0x1
  408244:	str	x2, [x25, #8]
  408248:	add	w21, w21, #0x1
  40824c:	b	408204 <main@@Base+0x13f4>
  408250:	ldr	x0, [x20, #2272]
  408254:	cbz	x0, 4082a8 <main@@Base+0x1498>
  408258:	ldr	w0, [x29, #144]
  40825c:	add	w21, w0, #0x2
  408260:	sbfiz	x21, x21, #3, #32
  408264:	mov	x0, x21
  408268:	bl	418a50 <xmalloc@@Base>
  40826c:	ldr	x1, [x29, #168]
  408270:	sub	x19, x21, #0x10
  408274:	mov	x22, x0
  408278:	mov	x2, x19
  40827c:	add	x21, x0, x21
  408280:	bl	406640 <memcpy@plt>
  408284:	str	x22, [x29, #168]
  408288:	ldr	x2, [x20, #2272]
  40828c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  408290:	add	x1, x1, #0xa68
  408294:	mov	w0, #0x2                   	// #2
  408298:	bl	418ad8 <concat@@Base>
  40829c:	bl	418c60 <xstrdup@@Base>
  4082a0:	str	x0, [x22, x19]
  4082a4:	stur	xzr, [x21, #-8]
  4082a8:	ldr	x0, [x20, #2232]
  4082ac:	cbz	x0, 408300 <main@@Base+0x14f0>
  4082b0:	ldr	w0, [x0, #8]
  4082b4:	cbz	w0, 408300 <main@@Base+0x14f0>
  4082b8:	ldr	x0, [x29, #112]
  4082bc:	ldr	x0, [x0, #1912]
  4082c0:	cbz	x0, 4082dc <main@@Base+0x14cc>
  4082c4:	bl	406b80 <chdir@plt>
  4082c8:	tbz	w0, #31, 408300 <main@@Base+0x14f0>
  4082cc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4082d0:	mov	x1, x24
  4082d4:	add	x0, x0, #0xa70
  4082d8:	bl	419f38 <perror_with_name@@Base>
  4082dc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4082e0:	add	x1, x1, #0xa78
  4082e4:	mov	w2, #0x5                   	// #5
  4082e8:	mov	x0, #0x0                   	// #0
  4082ec:	bl	406cd0 <dcgettext@plt>
  4082f0:	mov	x1, #0x0                   	// #0
  4082f4:	mov	x2, x0
  4082f8:	mov	x0, #0x0                   	// #0
  4082fc:	bl	41a060 <fatal@@Base>
  408300:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  408304:	ldr	w1, [x29, #148]
  408308:	ldr	w0, [x0, #1088]
  40830c:	add	w21, w1, #0x1
  408310:	tbnz	w0, #0, 408520 <main@@Base+0x1710>
  408314:	adrp	x23, 443000 <expanding_var@@Base+0x338>
  408318:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x2c20>
  40831c:	ldr	x26, [x29, #136]
  408320:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x2c20>
  408324:	ldr	x19, [x23, #400]
  408328:	add	x20, x20, #0xac0
  40832c:	add	x22, x22, #0xad8
  408330:	ldr	x25, [x19]
  408334:	cbz	x25, 4083c8 <main@@Base+0x15b8>
  408338:	mov	x1, x20
  40833c:	mov	x0, x25
  408340:	mov	x2, #0xa                   	// #10
  408344:	bl	406930 <strncmp@plt>
  408348:	cbz	w0, 4083a0 <main@@Base+0x1590>
  40834c:	mov	x0, x25
  408350:	mov	x1, x22
  408354:	mov	x2, #0xe                   	// #14
  408358:	bl	406930 <strncmp@plt>
  40835c:	cbnz	w0, 408398 <main@@Base+0x1588>
  408360:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  408364:	sub	sp, sp, #0x30
  408368:	mov	x0, sp
  40836c:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  408370:	ldr	w1, [x1, #3496]
  408374:	add	x2, x2, #0x4c8
  408378:	str	x0, [x19]
  40837c:	mov	w3, w21
  408380:	cmp	w1, #0x0
  408384:	mov	w21, #0x0                   	// #0
  408388:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  40838c:	csel	x2, x2, x24, ne  // ne = any
  408390:	add	x1, x1, #0xae8
  408394:	bl	406730 <sprintf@plt>
  408398:	add	x19, x19, #0x8
  40839c:	b	408330 <main@@Base+0x1520>
  4083a0:	ldr	w3, [x26, #2016]
  4083a4:	sub	sp, sp, #0x30
  4083a8:	ldr	x2, [x29, #152]
  4083ac:	mov	x0, sp
  4083b0:	str	x0, [x19]
  4083b4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4083b8:	add	x19, x19, #0x8
  4083bc:	add	x1, x1, #0xad0
  4083c0:	bl	406730 <sprintf@plt>
  4083c4:	b	408330 <main@@Base+0x1520>
  4083c8:	cbz	w21, 408408 <main@@Base+0x15f8>
  4083cc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4083d0:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  4083d4:	add	x2, x2, #0x4c8
  4083d8:	sub	sp, sp, #0x30
  4083dc:	ldr	w0, [x0, #3496]
  4083e0:	mov	w3, w21
  4083e4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4083e8:	add	x1, x1, #0xae8
  4083ec:	cmp	w0, #0x0
  4083f0:	mov	x19, sp
  4083f4:	csel	x2, x2, x24, ne  // ne = any
  4083f8:	mov	x0, x19
  4083fc:	bl	406730 <sprintf@plt>
  408400:	mov	x0, x19
  408404:	bl	406a10 <putenv@plt>
  408408:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40840c:	ldr	x0, [x0, #384]
  408410:	bl	406c20 <fflush@plt>
  408414:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  408418:	ldr	x0, [x0, #360]
  40841c:	bl	406c20 <fflush@plt>
  408420:	mov	w0, #0x1                   	// #1
  408424:	bl	4259f8 <jobserver_pre_child@@Base>
  408428:	ldr	x1, [x23, #400]
  40842c:	ldr	x0, [x29, #168]
  408430:	bl	414c18 <exec_command@@Base>
  408434:	mov	w0, #0x1                   	// #1
  408438:	mov	w2, #0x5                   	// #5
  40843c:	str	w0, [x29, #160]
  408440:	ldr	x1, [x29, #128]
  408444:	b	408140 <main@@Base+0x1330>
  408448:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40844c:	ldr	w0, [x0, #144]
  408450:	cmn	w0, #0x1
  408454:	b.eq	4084a4 <main@@Base+0x1694>  // b.none
  408458:	adrp	x21, 446000 <commands_started@@Base+0x1c8>
  40845c:	cmp	w0, #0x1
  408460:	str	w0, [x21, #2192]
  408464:	b.ls	408474 <main@@Base+0x1664>  // b.plast
  408468:	sub	w0, w0, #0x1
  40846c:	bl	425ab8 <jobserver_setup@@Base>
  408470:	cbnz	w0, 408744 <main@@Base+0x1934>
  408474:	cmp	w19, #0x1
  408478:	b.hi	407c98 <main@@Base+0xe88>  // b.pmore
  40847c:	ldr	w0, [x21, #2192]
  408480:	cmp	w0, #0x1
  408484:	b.eq	4084b8 <main@@Base+0x16a8>  // b.none
  408488:	b	407c98 <main@@Base+0xe88>
  40848c:	mov	x1, x24
  408490:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  408494:	add	x0, x0, #0x680
  408498:	bl	419f38 <perror_with_name@@Base>
  40849c:	str	xzr, [x21, #1976]
  4084a0:	b	407748 <main@@Base+0x938>
  4084a4:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  4084a8:	mov	w1, #0x1                   	// #1
  4084ac:	cmp	w19, w1
  4084b0:	str	w1, [x0, #2192]
  4084b4:	b.hi	407c98 <main@@Base+0xe88>  // b.pmore
  4084b8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4084bc:	str	xzr, [x0, #3504]
  4084c0:	mov	x0, x23
  4084c4:	bl	419790 <output_close@@Base>
  4084c8:	str	wzr, [x20, #2208]
  4084cc:	b	407c98 <main@@Base+0xe88>
  4084d0:	bl	406d70 <__errno_location@plt>
  4084d4:	ldr	w0, [x0]
  4084d8:	cmp	w0, #0x2
  4084dc:	b.eq	407e48 <main@@Base+0x1038>  // b.none
  4084e0:	mov	w2, #0x5                   	// #5
  4084e4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4084e8:	mov	x0, #0x0                   	// #0
  4084ec:	add	x1, x1, #0xb00
  4084f0:	bl	406cd0 <dcgettext@plt>
  4084f4:	ldr	x1, [x20, #2272]
  4084f8:	bl	419f38 <perror_with_name@@Base>
  4084fc:	b	407e48 <main@@Base+0x1038>
  408500:	bl	417030 <gmk_add_function@@Base+0x220>
  408504:	b	4081dc <main@@Base+0x13cc>
  408508:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  40850c:	add	x2, x2, #0x650
  408510:	b	407958 <main@@Base+0xb48>
  408514:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  408518:	add	x2, x2, #0x650
  40851c:	b	4079b8 <main@@Base+0xba8>
  408520:	mov	w2, #0x5                   	// #5
  408524:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  408528:	mov	x0, #0x0                   	// #0
  40852c:	add	x1, x1, #0xaa8
  408530:	ldr	x19, [x29, #168]
  408534:	bl	406cd0 <dcgettext@plt>
  408538:	mov	w1, w21
  40853c:	adrp	x20, 427000 <_IO_stdin_used@@Base+0xc20>
  408540:	add	x20, x20, #0xd68
  408544:	bl	406d60 <printf@plt>
  408548:	b	408558 <main@@Base+0x1748>
  40854c:	add	x19, x19, #0x8
  408550:	mov	x0, x20
  408554:	bl	406d60 <printf@plt>
  408558:	ldr	x1, [x19]
  40855c:	cbnz	x1, 40854c <main@@Base+0x173c>
  408560:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  408564:	ldr	x1, [x0, #384]
  408568:	mov	w0, #0xa                   	// #10
  40856c:	bl	406740 <putc@plt>
  408570:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  408574:	ldr	x0, [x0, #384]
  408578:	bl	406c20 <fflush@plt>
  40857c:	b	408314 <main@@Base+0x1504>
  408580:	mov	x1, x23
  408584:	mov	w0, #0x2                   	// #2
  408588:	add	w26, w26, #0x1
  40858c:	bl	418ad8 <concat@@Base>
  408590:	bl	418c60 <xstrdup@@Base>
  408594:	str	x0, [x25]
  408598:	b	408248 <main@@Base+0x1438>
  40859c:	cbnz	w22, 4081cc <main@@Base+0x13bc>
  4085a0:	ldr	w0, [x29, #160]
  4085a4:	cbz	w0, 407e1c <main@@Base+0x100c>
  4085a8:	mov	w0, #0x2                   	// #2
  4085ac:	bl	417a70 <die@@Base>
  4085b0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4085b4:	add	x1, x1, #0x9b0
  4085b8:	mov	w2, #0x5                   	// #5
  4085bc:	mov	x0, #0x0                   	// #0
  4085c0:	bl	406cd0 <dcgettext@plt>
  4085c4:	bl	406d60 <printf@plt>
  4085c8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4085cc:	ldr	x0, [x0, #384]
  4085d0:	bl	406c20 <fflush@plt>
  4085d4:	b	407d4c <main@@Base+0xf3c>
  4085d8:	adrp	x21, 446000 <commands_started@@Base+0x1c8>
  4085dc:	ldr	x0, [x21, #2200]
  4085e0:	ldrb	w1, [x0, #136]
  4085e4:	tbnz	w1, #4, 408768 <main@@Base+0x1958>
  4085e8:	ldr	x1, [x22, #288]
  4085ec:	mov	x2, x24
  4085f0:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  4085f4:	mov	x6, #0x0                   	// #0
  4085f8:	mov	w4, #0x0                   	// #0
  4085fc:	mov	w3, #0x0                   	// #0
  408600:	ldr	x5, [x1, #8]
  408604:	add	x0, x0, #0x670
  408608:	mov	x1, #0x8                   	// #8
  40860c:	bl	422df0 <define_variable_in_set@@Base>
  408610:	b	407c78 <main@@Base+0xe68>
  408614:	ldr	x0, [x20, #576]
  408618:	cbz	x0, 407c2c <main@@Base+0xe1c>
  40861c:	ldr	w0, [x29, #148]
  408620:	cbz	w0, 4087f8 <main@@Base+0x19e8>
  408624:	bl	425600 <jobserver_clear@@Base>
  408628:	ldr	x0, [x20, #576]
  40862c:	bl	406b90 <free@plt>
  408630:	str	xzr, [x20, #576]
  408634:	b	407c2c <main@@Base+0xe1c>
  408638:	bl	41eef8 <f_mtime@@Base>
  40863c:	mov	x1, x0
  408640:	b	4080f4 <main@@Base+0x12e4>
  408644:	mov	x0, x23
  408648:	bl	419790 <output_close@@Base>
  40864c:	b	407c4c <main@@Base+0xe3c>
  408650:	bl	40a9f0 <undefine_default_variables@@Base>
  408654:	b	407c88 <main@@Base+0xe78>
  408658:	ldr	x26, [x0]
  40865c:	b	408120 <main@@Base+0x1310>
  408660:	mov	w2, #0x5                   	// #5
  408664:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  408668:	mov	x0, #0x0                   	// #0
  40866c:	add	x1, x1, #0xbc0
  408670:	bl	406cd0 <dcgettext@plt>
  408674:	mov	x2, x0
  408678:	mov	x1, #0x0                   	// #0
  40867c:	mov	x0, #0x0                   	// #0
  408680:	bl	419dc8 <error@@Base>
  408684:	b	407e8c <main@@Base+0x107c>
  408688:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  40868c:	ldr	x0, [x0, #2008]
  408690:	ldrb	w1, [x0, #44]
  408694:	ldr	x19, [x0, #8]
  408698:	tbz	w1, #0, 408798 <main@@Base+0x1988>
  40869c:	mov	x0, x19
  4086a0:	bl	40c1b8 <variable_expand@@Base>
  4086a4:	str	x0, [x29, #184]
  4086a8:	ldr	x0, [x29, #184]
  4086ac:	ldrb	w1, [x0]
  4086b0:	cbnz	w1, 4087cc <main@@Base+0x19bc>
  4086b4:	ldr	x0, [x20, #552]
  4086b8:	cbnz	x0, 407e58 <main@@Base+0x1048>
  4086bc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4086c0:	mov	x1, #0xd                   	// #13
  4086c4:	add	x0, x0, #0xb50
  4086c8:	bl	4231f0 <lookup_variable@@Base>
  4086cc:	cbz	x0, 4086e0 <main@@Base+0x18d0>
  4086d0:	ldr	x0, [x0, #8]
  4086d4:	cbz	x0, 4086e0 <main@@Base+0x18d0>
  4086d8:	ldrb	w0, [x0]
  4086dc:	cbnz	w0, 408884 <main@@Base+0x1a74>
  4086e0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4086e4:	mov	w2, #0x5                   	// #5
  4086e8:	add	x1, x1, #0xb70
  4086ec:	b	4082e8 <main@@Base+0x14d8>
  4086f0:	mov	w21, #0x1                   	// #1
  4086f4:	b	407e80 <main@@Base+0x1070>
  4086f8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4086fc:	add	x1, x1, #0xba0
  408700:	mov	w2, #0x5                   	// #5
  408704:	mov	x0, #0x0                   	// #0
  408708:	bl	406cd0 <dcgettext@plt>
  40870c:	bl	406d60 <printf@plt>
  408710:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  408714:	ldr	x0, [x0, #384]
  408718:	bl	406c20 <fflush@plt>
  40871c:	b	407e64 <main@@Base+0x1054>
  408720:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  408724:	add	x1, x1, #0x8e0
  408728:	mov	w2, #0x5                   	// #5
  40872c:	bl	406cd0 <dcgettext@plt>
  408730:	bl	419828 <pfatal_with_name@@Base>
  408734:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  408738:	mov	w2, #0x5                   	// #5
  40873c:	add	x1, x1, #0x898
  408740:	b	4082e8 <main@@Base+0x14d8>
  408744:	bl	4255a0 <jobserver_get_auth@@Base>
  408748:	str	x0, [x20, #576]
  40874c:	cbz	x0, 408474 <main@@Base+0x1664>
  408750:	ldr	w0, [x21, #2192]
  408754:	str	wzr, [x21, #2192]
  408758:	str	w0, [x20, #568]
  40875c:	b	407c98 <main@@Base+0xe88>
  408760:	mov	x0, x10
  408764:	b	407b74 <main@@Base+0xd64>
  408768:	ldr	x0, [x0, #24]
  40876c:	bl	418fa0 <free_ns_chain@@Base>
  408770:	ldr	x0, [x21, #2200]
  408774:	str	xzr, [x0, #24]
  408778:	b	4085e8 <main@@Base+0x17d8>
  40877c:	mov	w1, #0x0                   	// #0
  408780:	mov	w0, #0x1                   	// #1
  408784:	bl	4170e0 <gmk_add_function@@Base+0x2d0>
  408788:	mov	w21, #0x0                   	// #0
  40878c:	ldr	w0, [x20, #2224]
  408790:	str	w0, [x20, #2220]
  408794:	b	407e38 <main@@Base+0x1028>
  408798:	adrp	x22, 446000 <commands_started@@Base+0x1c8>
  40879c:	mov	x0, x19
  4087a0:	bl	406680 <strlen@plt>
  4087a4:	mov	x2, x0
  4087a8:	ldr	x0, [x22, #1904]
  4087ac:	mov	x1, x19
  4087b0:	bl	40b848 <variable_buffer_output@@Base>
  4087b4:	strb	wzr, [x0]
  4087b8:	ldr	x0, [x22, #1904]
  4087bc:	str	x0, [x29, #184]
  4087c0:	b	4086a8 <main@@Base+0x1898>
  4087c4:	mov	w0, #0x0                   	// #0
  4087c8:	b	4081c0 <main@@Base+0x13b0>
  4087cc:	bl	40c7a8 <lookup_file@@Base>
  4087d0:	mov	x19, x0
  4087d4:	cbz	x0, 408828 <main@@Base+0x1a18>
  4087d8:	mov	x0, #0x40                  	// #64
  4087dc:	bl	418a78 <xcalloc@@Base>
  4087e0:	str	x19, [x0, #16]
  4087e4:	str	x0, [x20, #552]
  4087e8:	b	4086b4 <main@@Base+0x18a4>
  4087ec:	bl	41eef8 <f_mtime@@Base>
  4087f0:	mov	x1, x0
  4087f4:	b	4081ac <main@@Base+0x139c>
  4087f8:	mov	w2, #0x5                   	// #5
  4087fc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  408800:	mov	x0, #0x0                   	// #0
  408804:	add	x1, x1, #0x970
  408808:	bl	406cd0 <dcgettext@plt>
  40880c:	mov	x2, x0
  408810:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  408814:	mov	x0, #0x0                   	// #0
  408818:	ldr	w3, [x1, #144]
  40881c:	mov	x1, #0x14                  	// #20
  408820:	bl	419dc8 <error@@Base>
  408824:	b	408624 <main@@Base+0x1814>
  408828:	add	x0, x29, #0xb8
  40882c:	mov	w4, #0x0                   	// #0
  408830:	mov	x3, #0x0                   	// #0
  408834:	mov	w2, #0x1                   	// #1
  408838:	mov	x1, #0x10                  	// #16
  40883c:	bl	41c510 <parse_file_seq@@Base>
  408840:	mov	x22, x0
  408844:	cbz	x0, 4086b4 <main@@Base+0x18a4>
  408848:	ldr	x0, [x0]
  40884c:	cbz	x0, 408860 <main@@Base+0x1a50>
  408850:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  408854:	mov	w2, #0x5                   	// #5
  408858:	add	x1, x1, #0xb20
  40885c:	b	4082e8 <main@@Base+0x14d8>
  408860:	ldr	x0, [x22, #8]
  408864:	bl	422490 <strcache_add@@Base>
  408868:	bl	40c820 <enter_file@@Base>
  40886c:	str	xzr, [x22, #8]
  408870:	mov	x19, x0
  408874:	mov	x0, x22
  408878:	bl	418fa0 <free_ns_chain@@Base>
  40887c:	cbz	x19, 4086b4 <main@@Base+0x18a4>
  408880:	b	4087d8 <main@@Base+0x19c8>
  408884:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  408888:	mov	w2, #0x5                   	// #5
  40888c:	add	x1, x1, #0xb60
  408890:	b	4082e8 <main@@Base+0x14d8>

0000000000408894 <_start@@Base>:
  408894:	mov	x29, #0x0                   	// #0
  408898:	mov	x30, #0x0                   	// #0
  40889c:	mov	x5, x0
  4088a0:	ldr	x1, [sp]
  4088a4:	add	x2, sp, #0x8
  4088a8:	mov	x6, sp
  4088ac:	movz	x0, #0x0, lsl #48
  4088b0:	movk	x0, #0x0, lsl #32
  4088b4:	movk	x0, #0x40, lsl #16
  4088b8:	movk	x0, #0x6e10
  4088bc:	movz	x3, #0x0, lsl #48
  4088c0:	movk	x3, #0x0, lsl #32
  4088c4:	movk	x3, #0x42, lsl #16
  4088c8:	movk	x3, #0x6318
  4088cc:	movz	x4, #0x0, lsl #48
  4088d0:	movk	x4, #0x0, lsl #32
  4088d4:	movk	x4, #0x42, lsl #16
  4088d8:	movk	x4, #0x6398
  4088dc:	bl	406950 <__libc_start_main@plt>
  4088e0:	bl	406ab0 <abort@plt>
  4088e4:	adrp	x0, 441000 <_IO_stdin_used@@Base+0x1ac20>
  4088e8:	ldr	x0, [x0, #4064]
  4088ec:	cbz	x0, 4088f4 <_start@@Base+0x60>
  4088f0:	b	406a80 <__gmon_start__@plt>
  4088f4:	ret
  4088f8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4088fc:	add	x0, x0, #0x168
  408900:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  408904:	add	x1, x1, #0x168
  408908:	cmp	x1, x0
  40890c:	b.eq	408924 <_start@@Base+0x90>  // b.none
  408910:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  408914:	ldr	x1, [x1, #1000]
  408918:	cbz	x1, 408924 <_start@@Base+0x90>
  40891c:	mov	x16, x1
  408920:	br	x16
  408924:	ret
  408928:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40892c:	add	x0, x0, #0x168
  408930:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  408934:	add	x1, x1, #0x168
  408938:	sub	x1, x1, x0
  40893c:	lsr	x2, x1, #63
  408940:	add	x1, x2, x1, asr #3
  408944:	cmp	xzr, x1, asr #1
  408948:	asr	x1, x1, #1
  40894c:	b.eq	408964 <_start@@Base+0xd0>  // b.none
  408950:	adrp	x2, 426000 <rpl_fcntl@@Base+0xf0>
  408954:	ldr	x2, [x2, #1008]
  408958:	cbz	x2, 408964 <_start@@Base+0xd0>
  40895c:	mov	x16, x2
  408960:	br	x16
  408964:	ret
  408968:	stp	x29, x30, [sp, #-32]!
  40896c:	mov	x29, sp
  408970:	str	x19, [sp, #16]
  408974:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  408978:	ldrb	w0, [x19, #412]
  40897c:	cbnz	w0, 40898c <_start@@Base+0xf8>
  408980:	bl	4088f8 <_start@@Base+0x64>
  408984:	mov	w0, #0x1                   	// #1
  408988:	strb	w0, [x19, #412]
  40898c:	ldr	x19, [sp, #16]
  408990:	ldp	x29, x30, [sp], #32
  408994:	ret
  408998:	b	408928 <_start@@Base+0x94>
  40899c:	nop
  4089a0:	stp	x29, x30, [sp, #-32]!
  4089a4:	mov	x29, sp
  4089a8:	ldr	x0, [sp, #48]
  4089ac:	str	x19, [sp, #16]
  4089b0:	mov	x19, x6
  4089b4:	bl	4093f8 <ar_name_equal@@Base>
  4089b8:	cmp	w0, #0x0
  4089bc:	csel	x0, x19, xzr, ne  // ne = any
  4089c0:	ldr	x19, [sp, #16]
  4089c4:	ldp	x29, x30, [sp], #32
  4089c8:	ret
  4089cc:	nop
  4089d0:	stp	x29, x30, [sp, #-32]!
  4089d4:	mov	w2, #0x5                   	// #5
  4089d8:	mov	x29, sp
  4089dc:	stp	x19, x20, [sp, #16]
  4089e0:	mov	x20, x1
  4089e4:	ldr	x19, [sp, #48]
  4089e8:	ldr	x0, [x19, #8]
  4089ec:	bl	406bf0 <fnmatch@plt>
  4089f0:	cbz	w0, 408a04 <_start@@Base+0x170>
  4089f4:	mov	x0, #0x0                   	// #0
  4089f8:	ldp	x19, x20, [sp, #16]
  4089fc:	ldp	x29, x30, [sp], #32
  408a00:	ret
  408a04:	ldr	x0, [x19, #16]
  408a08:	bl	418a78 <xcalloc@@Base>
  408a0c:	ldr	x1, [x19]
  408a10:	mov	x3, x20
  408a14:	adrp	x4, 42c000 <_IO_stdin_used@@Base+0x5c20>
  408a18:	adrp	x2, 426000 <rpl_fcntl@@Base+0xf0>
  408a1c:	add	x4, x4, #0x880
  408a20:	add	x2, x2, #0x3f8
  408a24:	mov	x20, x0
  408a28:	mov	w0, #0x4                   	// #4
  408a2c:	bl	418ad8 <concat@@Base>
  408a30:	bl	422490 <strcache_add@@Base>
  408a34:	ldr	x1, [x19, #24]
  408a38:	str	x1, [x20]
  408a3c:	ldr	w1, [x19, #32]
  408a40:	str	x0, [x20, #8]
  408a44:	mov	x0, #0x0                   	// #0
  408a48:	add	w1, w1, #0x1
  408a4c:	str	x20, [x19, #24]
  408a50:	str	w1, [x19, #32]
  408a54:	ldp	x19, x20, [sp, #16]
  408a58:	ldp	x29, x30, [sp], #32
  408a5c:	ret

0000000000408a60 <ar_name@@Base>:
  408a60:	stp	x29, x30, [sp, #-32]!
  408a64:	mov	w1, #0x28                  	// #40
  408a68:	mov	x29, sp
  408a6c:	stp	x19, x20, [sp, #16]
  408a70:	mov	x20, x0
  408a74:	bl	406bb0 <strchr@plt>
  408a78:	cmp	x0, #0x0
  408a7c:	ccmp	x20, x0, #0x4, ne  // ne = any
  408a80:	b.eq	408aa0 <ar_name@@Base+0x40>  // b.none
  408a84:	mov	x19, x0
  408a88:	bl	406680 <strlen@plt>
  408a8c:	sub	x0, x0, #0x1
  408a90:	add	x1, x19, x0
  408a94:	ldrb	w0, [x19, x0]
  408a98:	cmp	w0, #0x29
  408a9c:	b.eq	408ab0 <ar_name@@Base+0x50>  // b.none
  408aa0:	mov	w0, #0x0                   	// #0
  408aa4:	ldp	x19, x20, [sp, #16]
  408aa8:	ldp	x29, x30, [sp], #32
  408aac:	ret
  408ab0:	add	x0, x19, #0x1
  408ab4:	cmp	x1, x0
  408ab8:	b.eq	408aa0 <ar_name@@Base+0x40>  // b.none
  408abc:	ldrb	w2, [x19, #1]
  408ac0:	mov	w0, #0x1                   	// #1
  408ac4:	cmp	w2, #0x28
  408ac8:	b.ne	408aa4 <ar_name@@Base+0x44>  // b.any
  408acc:	ldurb	w1, [x1, #-1]
  408ad0:	cmp	w1, #0x29
  408ad4:	b.ne	408aa4 <ar_name@@Base+0x44>  // b.any
  408ad8:	mov	x0, x20
  408adc:	bl	406680 <strlen@plt>
  408ae0:	mov	w2, #0x5                   	// #5
  408ae4:	mov	x19, x0
  408ae8:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  408aec:	mov	x0, #0x0                   	// #0
  408af0:	add	x1, x1, #0x400
  408af4:	bl	406cd0 <dcgettext@plt>
  408af8:	mov	x3, x20
  408afc:	mov	x2, x0
  408b00:	mov	x1, x19
  408b04:	mov	x0, #0x0                   	// #0
  408b08:	bl	41a060 <fatal@@Base>
  408b0c:	nop

0000000000408b10 <ar_parse_name@@Base>:
  408b10:	stp	x29, x30, [sp, #-48]!
  408b14:	mov	x29, sp
  408b18:	stp	x19, x20, [sp, #16]
  408b1c:	mov	x19, x1
  408b20:	str	x21, [sp, #32]
  408b24:	mov	x21, x2
  408b28:	bl	418c60 <xstrdup@@Base>
  408b2c:	str	x0, [x19]
  408b30:	mov	w1, #0x28                  	// #40
  408b34:	bl	406bb0 <strchr@plt>
  408b38:	mov	x19, x0
  408b3c:	mov	x20, x0
  408b40:	strb	wzr, [x19], #1
  408b44:	mov	x0, x19
  408b48:	bl	406680 <strlen@plt>
  408b4c:	strb	wzr, [x20, x0]
  408b50:	str	x19, [x21]
  408b54:	ldp	x19, x20, [sp, #16]
  408b58:	ldr	x21, [sp, #32]
  408b5c:	ldp	x29, x30, [sp], #48
  408b60:	ret
  408b64:	nop

0000000000408b68 <ar_member_date@@Base>:
  408b68:	stp	x29, x30, [sp, #-48]!
  408b6c:	mov	x29, sp
  408b70:	add	x2, sp, #0x28
  408b74:	add	x1, sp, #0x20
  408b78:	str	x19, [sp, #16]
  408b7c:	bl	408b10 <ar_parse_name@@Base>
  408b80:	ldr	x0, [sp, #32]
  408b84:	bl	40c7a8 <lookup_file@@Base>
  408b88:	cbz	x0, 408bc4 <ar_member_date@@Base+0x5c>
  408b8c:	mov	w1, #0x0                   	// #0
  408b90:	bl	41eef8 <f_mtime@@Base>
  408b94:	ldp	x0, x2, [sp, #32]
  408b98:	adrp	x1, 408000 <main@@Base+0x11f0>
  408b9c:	add	x1, x1, #0x9a0
  408ba0:	bl	408ef8 <ar_scan@@Base>
  408ba4:	mov	x19, x0
  408ba8:	ldr	x0, [sp, #32]
  408bac:	bl	406b90 <free@plt>
  408bb0:	cmp	x19, #0x0
  408bb4:	csinv	x0, x19, xzr, gt
  408bb8:	ldr	x19, [sp, #16]
  408bbc:	ldp	x29, x30, [sp], #48
  408bc0:	ret
  408bc4:	ldr	x0, [sp, #32]
  408bc8:	bl	40b0b8 <file_exists_p@@Base>
  408bcc:	cbz	w0, 408b94 <ar_member_date@@Base+0x2c>
  408bd0:	ldr	x0, [sp, #32]
  408bd4:	bl	422490 <strcache_add@@Base>
  408bd8:	bl	40c820 <enter_file@@Base>
  408bdc:	cbz	x0, 408b94 <ar_member_date@@Base+0x2c>
  408be0:	b	408b8c <ar_member_date@@Base+0x24>
  408be4:	nop

0000000000408be8 <ar_touch@@Base>:
  408be8:	stp	x29, x30, [sp, #-64]!
  408bec:	mov	x29, sp
  408bf0:	add	x2, sp, #0x38
  408bf4:	add	x1, sp, #0x30
  408bf8:	stp	x19, x20, [sp, #16]
  408bfc:	mov	x20, x0
  408c00:	bl	408b10 <ar_parse_name@@Base>
  408c04:	ldr	x0, [sp, #48]
  408c08:	bl	422490 <strcache_add@@Base>
  408c0c:	bl	40c820 <enter_file@@Base>
  408c10:	mov	w1, #0x0                   	// #0
  408c14:	bl	41eef8 <f_mtime@@Base>
  408c18:	ldp	x0, x1, [sp, #48]
  408c1c:	bl	4094a0 <ar_member_touch@@Base>
  408c20:	cmn	w0, #0x1
  408c24:	b.eq	408d2c <ar_touch@@Base+0x144>  // b.none
  408c28:	mov	w19, w0
  408c2c:	cmp	w0, #0x0
  408c30:	b.lt	408ca0 <ar_touch@@Base+0xb8>  // b.tstop
  408c34:	b.eq	408c88 <ar_touch@@Base+0xa0>  // b.none
  408c38:	str	x21, [sp, #32]
  408c3c:	cmp	w0, #0x1
  408c40:	b.ne	408d6c <ar_touch@@Base+0x184>  // b.any
  408c44:	ldr	x0, [sp, #56]
  408c48:	bl	406680 <strlen@plt>
  408c4c:	mov	x21, x0
  408c50:	ldr	x0, [sp, #48]
  408c54:	bl	406680 <strlen@plt>
  408c58:	mov	x20, x0
  408c5c:	mov	w2, #0x5                   	// #5
  408c60:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  408c64:	mov	x0, #0x0                   	// #0
  408c68:	add	x1, x1, #0x488
  408c6c:	bl	406cd0 <dcgettext@plt>
  408c70:	mov	x2, x0
  408c74:	ldp	x4, x3, [sp, #48]
  408c78:	add	x1, x21, x20
  408c7c:	mov	x0, #0x0                   	// #0
  408c80:	bl	419dc8 <error@@Base>
  408c84:	ldr	x21, [sp, #32]
  408c88:	ldr	x0, [sp, #48]
  408c8c:	bl	406b90 <free@plt>
  408c90:	mov	w0, w19
  408c94:	ldp	x19, x20, [sp, #16]
  408c98:	ldp	x29, x30, [sp], #64
  408c9c:	ret
  408ca0:	cmn	w0, #0x3
  408ca4:	b.eq	408d00 <ar_touch@@Base+0x118>  // b.none
  408ca8:	cmn	w0, #0x2
  408cac:	b.ne	408d68 <ar_touch@@Base+0x180>  // b.any
  408cb0:	ldr	x0, [sp, #48]
  408cb4:	mov	w19, #0x1                   	// #1
  408cb8:	bl	406680 <strlen@plt>
  408cbc:	mov	x20, x0
  408cc0:	mov	w2, #0x5                   	// #5
  408cc4:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  408cc8:	mov	x0, #0x0                   	// #0
  408ccc:	add	x1, x1, #0x458
  408cd0:	bl	406cd0 <dcgettext@plt>
  408cd4:	mov	x2, x0
  408cd8:	ldr	x3, [sp, #48]
  408cdc:	mov	x1, x20
  408ce0:	mov	x0, #0x0                   	// #0
  408ce4:	bl	419dc8 <error@@Base>
  408ce8:	ldr	x0, [sp, #48]
  408cec:	bl	406b90 <free@plt>
  408cf0:	mov	w0, w19
  408cf4:	ldp	x19, x20, [sp, #16]
  408cf8:	ldp	x29, x30, [sp], #64
  408cfc:	ret
  408d00:	ldr	x1, [sp, #48]
  408d04:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  408d08:	add	x0, x0, #0x480
  408d0c:	mov	w19, #0x1                   	// #1
  408d10:	bl	419f38 <perror_with_name@@Base>
  408d14:	ldr	x0, [sp, #48]
  408d18:	bl	406b90 <free@plt>
  408d1c:	mov	w0, w19
  408d20:	ldp	x19, x20, [sp, #16]
  408d24:	ldp	x29, x30, [sp], #64
  408d28:	ret
  408d2c:	ldr	x0, [sp, #48]
  408d30:	mov	w19, #0x1                   	// #1
  408d34:	bl	406680 <strlen@plt>
  408d38:	mov	x20, x0
  408d3c:	mov	w2, #0x5                   	// #5
  408d40:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  408d44:	mov	x0, #0x0                   	// #0
  408d48:	add	x1, x1, #0x430
  408d4c:	bl	406cd0 <dcgettext@plt>
  408d50:	mov	x2, x0
  408d54:	ldr	x3, [sp, #48]
  408d58:	mov	x1, x20
  408d5c:	mov	x0, #0x0                   	// #0
  408d60:	bl	419dc8 <error@@Base>
  408d64:	b	408ce8 <ar_touch@@Base+0x100>
  408d68:	str	x21, [sp, #32]
  408d6c:	mov	x0, x20
  408d70:	bl	406680 <strlen@plt>
  408d74:	mov	w2, #0x5                   	// #5
  408d78:	mov	x21, x0
  408d7c:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  408d80:	mov	x0, #0x0                   	// #0
  408d84:	add	x1, x1, #0x4b8
  408d88:	bl	406cd0 <dcgettext@plt>
  408d8c:	mov	x3, x20
  408d90:	mov	x2, x0
  408d94:	mov	x1, x21
  408d98:	mov	x0, #0x0                   	// #0
  408d9c:	bl	419dc8 <error@@Base>
  408da0:	mov	w19, #0x1                   	// #1
  408da4:	ldr	x0, [sp, #48]
  408da8:	ldr	x21, [sp, #32]
  408dac:	bl	406b90 <free@plt>
  408db0:	mov	w0, w19
  408db4:	ldp	x19, x20, [sp, #16]
  408db8:	ldp	x29, x30, [sp], #64
  408dbc:	ret

0000000000408dc0 <ar_glob@@Base>:
  408dc0:	ldrb	w3, [x1]
  408dc4:	mov	x5, x1
  408dc8:	mov	x4, x1
  408dcc:	mov	x6, x2
  408dd0:	mov	w1, #0x0                   	// #0
  408dd4:	cbz	w3, 408ecc <ar_glob@@Base+0x10c>
  408dd8:	cmp	w3, #0x5c
  408ddc:	b.eq	408edc <ar_glob@@Base+0x11c>  // b.none
  408de0:	b.hi	408eb0 <ar_glob@@Base+0xf0>  // b.pmore
  408de4:	cmp	w3, #0x5b
  408de8:	b.eq	408ed4 <ar_glob@@Base+0x114>  // b.none
  408dec:	cmp	w3, #0x2a
  408df0:	b.eq	408dfc <ar_glob@@Base+0x3c>  // b.none
  408df4:	cmp	w3, #0x3f
  408df8:	b.ne	408ec0 <ar_glob@@Base+0x100>  // b.any
  408dfc:	stp	x29, x30, [sp, #-80]!
  408e00:	adrp	x1, 408000 <main@@Base+0x11f0>
  408e04:	add	x1, x1, #0x9d0
  408e08:	mov	x29, sp
  408e0c:	add	x2, x29, #0x28
  408e10:	str	x19, [sp, #16]
  408e14:	stp	x0, x5, [x29, #40]
  408e18:	stp	x6, xzr, [x29, #56]
  408e1c:	str	wzr, [x29, #72]
  408e20:	bl	408ef8 <ar_scan@@Base>
  408e24:	ldr	x2, [x29, #64]
  408e28:	cbz	x2, 408ee4 <ar_glob@@Base+0x124>
  408e2c:	ldr	w0, [x29, #72]
  408e30:	mov	w1, #0x0                   	// #0
  408e34:	lsl	x0, x0, #3
  408e38:	add	x0, x0, #0xf
  408e3c:	and	x0, x0, #0xffffffff0
  408e40:	sub	sp, sp, x0
  408e44:	mov	x19, sp
  408e48:	mov	w3, w1
  408e4c:	add	w1, w1, #0x1
  408e50:	ldr	x0, [x2, #8]
  408e54:	ldr	x2, [x2]
  408e58:	str	x0, [x19, w3, uxtw #3]
  408e5c:	cbnz	x2, 408e48 <ar_glob@@Base+0x88>
  408e60:	mov	x0, x19
  408e64:	adrp	x3, 418000 <die@@Base+0x590>
  408e68:	mov	x2, #0x8                   	// #8
  408e6c:	add	x3, x3, #0x7b0
  408e70:	bl	4067b0 <qsort@plt>
  408e74:	ldr	x0, [x29, #64]
  408e78:	cbz	x0, 408ee4 <ar_glob@@Base+0x124>
  408e7c:	mov	x1, x0
  408e80:	mov	w3, #0x0                   	// #0
  408e84:	nop
  408e88:	mov	w2, w3
  408e8c:	add	w3, w3, #0x1
  408e90:	ldr	x2, [x19, w2, uxtw #3]
  408e94:	str	x2, [x1, #8]
  408e98:	ldr	x1, [x1]
  408e9c:	cbnz	x1, 408e88 <ar_glob@@Base+0xc8>
  408ea0:	mov	sp, x29
  408ea4:	ldr	x19, [sp, #16]
  408ea8:	ldp	x29, x30, [sp], #80
  408eac:	ret
  408eb0:	cmp	w3, #0x5d
  408eb4:	b.ne	408ec0 <ar_glob@@Base+0x100>  // b.any
  408eb8:	cbnz	w1, 408dfc <ar_glob@@Base+0x3c>
  408ebc:	nop
  408ec0:	ldrb	w3, [x4, #1]
  408ec4:	add	x4, x4, #0x1
  408ec8:	cbnz	w3, 408dd8 <ar_glob@@Base+0x18>
  408ecc:	mov	x0, #0x0                   	// #0
  408ed0:	ret
  408ed4:	mov	w1, #0x1                   	// #1
  408ed8:	b	408ec0 <ar_glob@@Base+0x100>
  408edc:	add	x4, x4, #0x1
  408ee0:	b	408ec0 <ar_glob@@Base+0x100>
  408ee4:	mov	sp, x29
  408ee8:	mov	x0, #0x0                   	// #0
  408eec:	ldr	x19, [sp, #16]
  408ef0:	ldp	x29, x30, [sp], #80
  408ef4:	ret

0000000000408ef8 <ar_scan@@Base>:
  408ef8:	stp	x29, x30, [sp, #-240]!
  408efc:	mov	x29, sp
  408f00:	stp	x19, x20, [sp, #16]
  408f04:	stp	x21, x22, [sp, #32]
  408f08:	stp	x23, x24, [sp, #48]
  408f0c:	stp	x25, x26, [sp, #64]
  408f10:	stp	x27, x28, [sp, #80]
  408f14:	sub	sp, sp, #0x20
  408f18:	stp	x2, x1, [x29, #128]
  408f1c:	mov	w2, #0x0                   	// #0
  408f20:	mov	w1, #0x0                   	// #0
  408f24:	bl	406900 <open@plt>
  408f28:	tbnz	w0, #31, 4093f0 <ar_scan@@Base+0x4f8>
  408f2c:	mov	w20, w0
  408f30:	add	x1, x29, #0xb0
  408f34:	mov	x2, #0x8                   	// #8
  408f38:	bl	418e40 <readbuf@@Base>
  408f3c:	cmp	w0, #0x8
  408f40:	b.ne	4093a0 <ar_scan@@Base+0x4a8>  // b.any
  408f44:	mov	x0, #0x3c21                	// #15393
  408f48:	ldr	x1, [x29, #176]
  408f4c:	movk	x0, #0x7261, lsl #16
  408f50:	movk	x0, #0x6863, lsl #32
  408f54:	movk	x0, #0xa3e, lsl #48
  408f58:	cmp	x1, x0
  408f5c:	b.ne	4093a0 <ar_scan@@Base+0x4a8>  // b.any
  408f60:	add	x21, x29, #0x98
  408f64:	mov	x19, #0x8                   	// #8
  408f68:	mov	x22, #0x0                   	// #0
  408f6c:	str	wzr, [x29, #124]
  408f70:	b	408f84 <ar_scan@@Base+0x8c>
  408f74:	bl	406d70 <__errno_location@plt>
  408f78:	ldr	w0, [x0]
  408f7c:	cmp	w0, #0x4
  408f80:	b.ne	4093a0 <ar_scan@@Base+0x4a8>  // b.any
  408f84:	mov	x1, x19
  408f88:	mov	w0, w20
  408f8c:	mov	w2, #0x0                   	// #0
  408f90:	bl	406800 <lseek@plt>
  408f94:	cmn	x0, #0x1
  408f98:	b.eq	408f74 <ar_scan@@Base+0x7c>  // b.none
  408f9c:	tbnz	x0, #63, 4093a0 <ar_scan@@Base+0x4a8>
  408fa0:	add	x1, x29, #0xb0
  408fa4:	mov	w0, w20
  408fa8:	mov	x2, #0x3c                  	// #60
  408fac:	bl	418e40 <readbuf@@Base>
  408fb0:	cbz	w0, 4093d8 <ar_scan@@Base+0x4e0>
  408fb4:	cmp	w0, #0x3c
  408fb8:	b.ne	4093a0 <ar_scan@@Base+0x4a8>  // b.any
  408fbc:	ldrh	w0, [x29, #234]
  408fc0:	cmp	w0, #0xa60
  408fc4:	b.ne	4093a0 <ar_scan@@Base+0x4a8>  // b.any
  408fc8:	add	x0, x21, #0x10
  408fcc:	strb	wzr, [x29, #168]
  408fd0:	ldp	x2, x3, [x29, #176]
  408fd4:	stp	x2, x3, [x29, #152]
  408fd8:	ldrb	w1, [x0, #-1]!
  408fdc:	cmp	w1, #0x20
  408fe0:	b.ne	4091a8 <ar_scan@@Base+0x2b0>  // b.any
  408fe4:	strb	wzr, [x0]
  408fe8:	cmp	x0, x21
  408fec:	b.ne	408fd8 <ar_scan@@Base+0xe0>  // b.any
  408ff0:	ldrh	w1, [x21]
  408ff4:	mov	w0, #0x2f2f                	// #12079
  408ff8:	cmp	w1, w0
  408ffc:	b.eq	409114 <ar_scan@@Base+0x21c>  // b.none
  409000:	mov	x0, x21
  409004:	mov	x2, #0x5241                	// #21057
  409008:	ldr	x1, [x21]
  40900c:	movk	x2, #0x4946, lsl #16
  409010:	movk	x2, #0x454c, lsl #32
  409014:	movk	x2, #0x414e, lsl #48
  409018:	cmp	x1, x2
  40901c:	b.eq	409268 <ar_scan@@Base+0x370>  // b.none
  409020:	ldrb	w1, [x0]
  409024:	cmp	w1, #0x2f
  409028:	b.eq	409290 <ar_scan@@Base+0x398>  // b.none
  40902c:	ldrb	w0, [x29, #152]
  409030:	mov	w1, #0x2f                  	// #47
  409034:	mov	w27, #0x0                   	// #0
  409038:	cmp	w0, #0x20
  40903c:	ccmp	w0, w1, #0x4, ne  // ne = any
  409040:	ccmp	x22, #0x0, #0x4, eq  // eq = none
  409044:	b.ne	4092b0 <ar_scan@@Base+0x3b8>  // b.any
  409048:	cmp	w0, #0x23
  40904c:	mov	x26, x21
  409050:	mov	w25, #0x1                   	// #1
  409054:	b.eq	409134 <ar_scan@@Base+0x23c>  // b.none
  409058:	add	x2, x29, #0x94
  40905c:	add	x0, x29, #0xd8
  409060:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  409064:	add	x1, x1, #0x508
  409068:	bl	406cf0 <__isoc99_sscanf@plt>
  40906c:	mov	w2, #0xa                   	// #10
  409070:	mov	x1, #0x0                   	// #0
  409074:	add	x0, x29, #0xe0
  409078:	bl	406b60 <strtol@plt>
  40907c:	mov	w2, #0xa                   	// #10
  409080:	mov	x28, x0
  409084:	mov	x1, #0x0                   	// #0
  409088:	add	x0, x29, #0xc0
  40908c:	bl	406b60 <strtol@plt>
  409090:	mov	x23, x0
  409094:	mov	w2, #0xa                   	// #10
  409098:	mov	x1, #0x0                   	// #0
  40909c:	add	x0, x29, #0xcc
  4090a0:	bl	406b60 <strtol@plt>
  4090a4:	mov	w2, #0xa                   	// #10
  4090a8:	mov	x24, x0
  4090ac:	mov	x1, #0x0                   	// #0
  4090b0:	add	x0, x29, #0xd2
  4090b4:	bl	406b60 <strtol@plt>
  4090b8:	str	w0, [sp]
  4090bc:	ldr	x8, [x29, #136]
  4090c0:	mov	w7, w24
  4090c4:	ldr	w1, [x29, #148]
  4090c8:	mov	x6, x23
  4090cc:	ldr	x0, [x29, #128]
  4090d0:	str	w1, [sp, #8]
  4090d4:	str	x0, [sp, #16]
  4090d8:	mov	x1, x26
  4090dc:	mov	w2, w25
  4090e0:	mov	x5, x28
  4090e4:	add	x4, x19, #0x3c
  4090e8:	mov	x3, x19
  4090ec:	mov	w0, w20
  4090f0:	blr	x8
  4090f4:	mov	x1, x0
  4090f8:	cbnz	x0, 40938c <ar_scan@@Base+0x494>
  4090fc:	cbnz	w27, 4091dc <ar_scan@@Base+0x2e4>
  409100:	add	x28, x28, x19
  409104:	and	x19, x28, #0x1
  409108:	add	x19, x19, x28
  40910c:	add	x19, x19, #0x3c
  409110:	b	408f84 <ar_scan@@Base+0x8c>
  409114:	ldrb	w0, [x21, #2]
  409118:	cbnz	w0, 409000 <ar_scan@@Base+0x108>
  40911c:	ldrb	w0, [x29, #152]
  409120:	mov	x26, x21
  409124:	mov	w27, #0x1                   	// #1
  409128:	mov	w25, #0x1                   	// #1
  40912c:	cmp	w0, #0x23
  409130:	b.ne	409058 <ar_scan@@Base+0x160>  // b.any
  409134:	ldrb	w0, [x29, #153]
  409138:	cmp	w0, #0x31
  40913c:	b.ne	409058 <ar_scan@@Base+0x160>  // b.any
  409140:	ldrb	w0, [x29, #154]
  409144:	cmp	w0, #0x2f
  409148:	b.ne	409058 <ar_scan@@Base+0x160>  // b.any
  40914c:	add	x0, x21, #0x3
  409150:	mov	w2, #0xa                   	// #10
  409154:	mov	x1, #0x0                   	// #0
  409158:	bl	406b60 <strtol@plt>
  40915c:	mov	x28, x0
  409160:	cmp	w0, #0x0
  409164:	b.le	4093a0 <ar_scan@@Base+0x4a8>
  409168:	add	w1, w0, w25
  40916c:	sxtw	x23, w0
  409170:	mov	x2, x23
  409174:	mov	w0, w20
  409178:	sxtw	x1, w1
  40917c:	add	x1, x1, #0xf
  409180:	and	x1, x1, #0xfffffffffffffff0
  409184:	sub	sp, sp, x1
  409188:	add	x26, sp, #0x20
  40918c:	mov	x1, x26
  409190:	bl	418e40 <readbuf@@Base>
  409194:	cmp	w28, w0
  409198:	b.ne	4093a0 <ar_scan@@Base+0x4a8>  // b.any
  40919c:	mov	w25, #0x0                   	// #0
  4091a0:	strb	wzr, [x26, x23]
  4091a4:	b	409058 <ar_scan@@Base+0x160>
  4091a8:	ldrh	w2, [x21]
  4091ac:	mov	w1, #0x2f2f                	// #12079
  4091b0:	cmp	w2, w1
  4091b4:	b.ne	409004 <ar_scan@@Base+0x10c>  // b.any
  4091b8:	ldrb	w1, [x21, #2]
  4091bc:	cbnz	w1, 409004 <ar_scan@@Base+0x10c>
  4091c0:	ldrb	w1, [x0]
  4091c4:	cmp	w1, #0x2f
  4091c8:	b.ne	40911c <ar_scan@@Base+0x224>  // b.any
  4091cc:	strb	wzr, [x0]
  4091d0:	mov	w27, #0x1                   	// #1
  4091d4:	ldrb	w0, [x29, #152]
  4091d8:	b	409048 <ar_scan@@Base+0x150>
  4091dc:	mov	x0, #0x7fffffff            	// #2147483647
  4091e0:	cmp	x28, x0
  4091e4:	b.gt	4093a0 <ar_scan@@Base+0x4a8>
  4091e8:	add	x0, x28, #0x10
  4091ec:	mov	x2, x28
  4091f0:	and	x0, x0, #0xfffffffffffffff0
  4091f4:	sub	sp, sp, x0
  4091f8:	mov	w0, w20
  4091fc:	add	x22, sp, #0x20
  409200:	mov	x1, x22
  409204:	bl	418e40 <readbuf@@Base>
  409208:	cmp	x28, w0, sxtw
  40920c:	b.ne	4093a0 <ar_scan@@Base+0x4a8>  // b.any
  409210:	str	w28, [x29, #124]
  409214:	add	x2, x22, x28
  409218:	cmp	x22, x2
  40921c:	mov	x0, x22
  409220:	b.cc	409234 <ar_scan@@Base+0x33c>  // b.lo, b.ul, b.last
  409224:	b	409260 <ar_scan@@Base+0x368>
  409228:	add	x0, x0, #0x1
  40922c:	cmp	x2, x0
  409230:	b.eq	409260 <ar_scan@@Base+0x368>  // b.none
  409234:	ldrb	w1, [x0]
  409238:	cmp	w1, #0xa
  40923c:	b.ne	409228 <ar_scan@@Base+0x330>  // b.any
  409240:	ldurb	w1, [x0, #-1]
  409244:	strb	wzr, [x0]
  409248:	cmp	w1, #0x2f
  40924c:	b.ne	409228 <ar_scan@@Base+0x330>  // b.any
  409250:	sturb	wzr, [x0, #-1]
  409254:	add	x0, x0, #0x1
  409258:	cmp	x2, x0
  40925c:	b.ne	409234 <ar_scan@@Base+0x33c>  // b.any
  409260:	strb	wzr, [x2]
  409264:	b	409100 <ar_scan@@Base+0x208>
  409268:	ldr	w1, [x21, #8]
  40926c:	mov	w2, #0x454d                	// #17741
  409270:	movk	w2, #0x2f53, lsl #16
  409274:	cmp	w1, w2
  409278:	b.ne	409020 <ar_scan@@Base+0x128>  // b.any
  40927c:	ldrb	w1, [x21, #12]
  409280:	cbz	w1, 4091c0 <ar_scan@@Base+0x2c8>
  409284:	ldrb	w1, [x0]
  409288:	cmp	w1, #0x2f
  40928c:	b.ne	40902c <ar_scan@@Base+0x134>  // b.any
  409290:	strb	wzr, [x0]
  409294:	mov	w1, #0x2f                  	// #47
  409298:	mov	w27, #0x0                   	// #0
  40929c:	ldrb	w0, [x29, #152]
  4092a0:	cmp	w0, #0x20
  4092a4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4092a8:	ccmp	x22, #0x0, #0x4, eq  // eq = none
  4092ac:	b.eq	409048 <ar_scan@@Base+0x150>  // b.none
  4092b0:	mov	x1, #0x0                   	// #0
  4092b4:	add	x0, x21, #0x1
  4092b8:	mov	w2, #0xa                   	// #10
  4092bc:	bl	406b60 <strtol@plt>
  4092c0:	ldr	w1, [x29, #124]
  4092c4:	cmp	w0, #0x0
  4092c8:	ccmp	w1, w0, #0x4, ge  // ge = tcont
  4092cc:	b.le	4093a0 <ar_scan@@Base+0x4a8>
  4092d0:	add	x27, x22, w0, sxtw
  4092d4:	mov	x0, x27
  4092d8:	bl	406680 <strlen@plt>
  4092dc:	cmp	w0, #0x0
  4092e0:	b.le	4093a0 <ar_scan@@Base+0x4a8>
  4092e4:	add	x2, x29, #0x94
  4092e8:	add	x0, x29, #0xd8
  4092ec:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  4092f0:	add	x1, x1, #0x508
  4092f4:	bl	406cf0 <__isoc99_sscanf@plt>
  4092f8:	mov	w2, #0xa                   	// #10
  4092fc:	mov	x1, #0x0                   	// #0
  409300:	add	x0, x29, #0xe0
  409304:	bl	406b60 <strtol@plt>
  409308:	mov	w2, #0xa                   	// #10
  40930c:	mov	x28, x0
  409310:	mov	x1, #0x0                   	// #0
  409314:	add	x0, x29, #0xc0
  409318:	bl	406b60 <strtol@plt>
  40931c:	mov	x6, x0
  409320:	mov	w2, #0xa                   	// #10
  409324:	mov	x1, #0x0                   	// #0
  409328:	add	x0, x29, #0xcc
  40932c:	str	x6, [x29, #104]
  409330:	bl	406b60 <strtol@plt>
  409334:	mov	x7, x0
  409338:	mov	w2, #0xa                   	// #10
  40933c:	mov	x1, #0x0                   	// #0
  409340:	add	x0, x29, #0xd2
  409344:	str	x7, [x29, #112]
  409348:	bl	406b60 <strtol@plt>
  40934c:	str	w0, [sp]
  409350:	ldp	x6, x7, [x29, #104]
  409354:	mov	x5, x28
  409358:	ldr	x8, [x29, #136]
  40935c:	add	x4, x19, #0x3c
  409360:	ldr	w1, [x29, #148]
  409364:	mov	x3, x19
  409368:	ldr	x0, [x29, #128]
  40936c:	str	w1, [sp, #8]
  409370:	str	x0, [sp, #16]
  409374:	mov	x1, x27
  409378:	mov	w0, w20
  40937c:	mov	w2, #0x0                   	// #0
  409380:	blr	x8
  409384:	mov	x1, x0
  409388:	cbz	x0, 409100 <ar_scan@@Base+0x208>
  40938c:	mov	w0, w20
  409390:	str	x1, [x29, #136]
  409394:	bl	406a50 <close@plt>
  409398:	ldr	x1, [x29, #136]
  40939c:	b	4093b4 <ar_scan@@Base+0x4bc>
  4093a0:	mov	x1, #0xfffffffffffffffe    	// #-2
  4093a4:	mov	w0, w20
  4093a8:	str	x1, [x29, #136]
  4093ac:	bl	406a50 <close@plt>
  4093b0:	ldr	x1, [x29, #136]
  4093b4:	mov	sp, x29
  4093b8:	mov	x0, x1
  4093bc:	ldp	x19, x20, [sp, #16]
  4093c0:	ldp	x21, x22, [sp, #32]
  4093c4:	ldp	x23, x24, [sp, #48]
  4093c8:	ldp	x25, x26, [sp, #64]
  4093cc:	ldp	x27, x28, [sp, #80]
  4093d0:	ldp	x29, x30, [sp], #240
  4093d4:	ret
  4093d8:	mov	x1, #0x0                   	// #0
  4093dc:	mov	w0, w20
  4093e0:	str	x1, [x29, #136]
  4093e4:	bl	406a50 <close@plt>
  4093e8:	ldr	x1, [x29, #136]
  4093ec:	b	4093b4 <ar_scan@@Base+0x4bc>
  4093f0:	mov	x1, #0xffffffffffffffff    	// #-1
  4093f4:	b	4093b4 <ar_scan@@Base+0x4bc>

00000000004093f8 <ar_name_equal@@Base>:
  4093f8:	stp	x29, x30, [sp, #-48]!
  4093fc:	mov	x29, sp
  409400:	stp	x19, x20, [sp, #16]
  409404:	mov	x20, x1
  409408:	mov	x19, x0
  40940c:	mov	w1, #0x2f                  	// #47
  409410:	str	x21, [sp, #32]
  409414:	mov	w21, w2
  409418:	bl	406a70 <strrchr@plt>
  40941c:	cmp	x0, #0x0
  409420:	mov	x1, x20
  409424:	csinc	x19, x19, x0, eq  // eq = none
  409428:	mov	x0, x19
  40942c:	cbnz	w21, 40944c <ar_name_equal@@Base+0x54>
  409430:	bl	406b40 <strcmp@plt>
  409434:	cmp	w0, #0x0
  409438:	cset	w0, eq  // eq = none
  40943c:	ldp	x19, x20, [sp, #16]
  409440:	ldr	x21, [sp, #32]
  409444:	ldp	x29, x30, [sp], #48
  409448:	ret
  40944c:	mov	x2, #0xf                   	// #15
  409450:	bl	406930 <strncmp@plt>
  409454:	cmp	w0, #0x0
  409458:	cset	w0, eq  // eq = none
  40945c:	ldp	x19, x20, [sp, #16]
  409460:	ldr	x21, [sp, #32]
  409464:	ldp	x29, x30, [sp], #48
  409468:	ret
  40946c:	nop
  409470:	stp	x29, x30, [sp, #-32]!
  409474:	mov	x29, sp
  409478:	ldr	x0, [sp, #48]
  40947c:	str	x19, [sp, #16]
  409480:	mov	x19, x3
  409484:	bl	4093f8 <ar_name_equal@@Base>
  409488:	cmp	w0, #0x0
  40948c:	csel	x0, x19, xzr, ne  // ne = any
  409490:	ldr	x19, [sp, #16]
  409494:	ldp	x29, x30, [sp], #32
  409498:	ret
  40949c:	nop

00000000004094a0 <ar_member_touch@@Base>:
  4094a0:	stp	x29, x30, [sp, #-240]!
  4094a4:	mov	x2, x1
  4094a8:	adrp	x1, 409000 <ar_scan@@Base+0x108>
  4094ac:	mov	x29, sp
  4094b0:	add	x1, x1, #0x470
  4094b4:	stp	x19, x20, [sp, #16]
  4094b8:	mov	x19, x0
  4094bc:	stp	x21, x22, [sp, #32]
  4094c0:	bl	408ef8 <ar_scan@@Base>
  4094c4:	mov	x22, x0
  4094c8:	cmp	x0, #0x0
  4094cc:	b.lt	4094d8 <ar_member_touch@@Base+0x38>  // b.tstop
  4094d0:	mov	w0, #0x1                   	// #1
  4094d4:	b.ne	4094f8 <ar_member_touch@@Base+0x58>  // b.any
  4094d8:	ldp	x19, x20, [sp, #16]
  4094dc:	ldp	x21, x22, [sp, #32]
  4094e0:	ldp	x29, x30, [sp], #240
  4094e4:	ret
  4094e8:	bl	406d70 <__errno_location@plt>
  4094ec:	ldr	w1, [x0]
  4094f0:	cmp	w1, #0x4
  4094f4:	b.ne	409648 <ar_member_touch@@Base+0x1a8>  // b.any
  4094f8:	mov	x0, x19
  4094fc:	mov	w2, #0x1b6                 	// #438
  409500:	mov	w1, #0x2                   	// #2
  409504:	bl	406900 <open@plt>
  409508:	mov	w20, w0
  40950c:	cmn	w0, #0x1
  409510:	b.eq	4094e8 <ar_member_touch@@Base+0x48>  // b.none
  409514:	tbz	w0, #31, 409530 <ar_member_touch@@Base+0x90>
  409518:	b	409648 <ar_member_touch@@Base+0x1a8>
  40951c:	bl	406d70 <__errno_location@plt>
  409520:	ldr	w21, [x0]
  409524:	mov	x19, x0
  409528:	cmp	w21, #0x4
  40952c:	b.ne	409668 <ar_member_touch@@Base+0x1c8>  // b.any
  409530:	mov	x1, x22
  409534:	mov	w0, w20
  409538:	mov	w2, #0x0                   	// #0
  40953c:	bl	406800 <lseek@plt>
  409540:	cmn	x0, #0x1
  409544:	b.eq	40951c <ar_member_touch@@Base+0x7c>  // b.none
  409548:	tbnz	x0, #63, 40965c <ar_member_touch@@Base+0x1bc>
  40954c:	add	x1, sp, #0x30
  409550:	mov	w0, w20
  409554:	mov	x2, #0x3c                  	// #60
  409558:	bl	418e40 <readbuf@@Base>
  40955c:	cmp	w0, #0x3c
  409560:	b.eq	40957c <ar_member_touch@@Base+0xdc>  // b.none
  409564:	b	40965c <ar_member_touch@@Base+0x1bc>
  409568:	bl	406d70 <__errno_location@plt>
  40956c:	ldr	w21, [x0]
  409570:	mov	x19, x0
  409574:	cmp	w21, #0x4
  409578:	b.ne	409668 <ar_member_touch@@Base+0x1c8>  // b.any
  40957c:	add	x2, sp, #0x70
  409580:	mov	w1, w20
  409584:	mov	w0, #0x0                   	// #0
  409588:	bl	406cb0 <__fxstat@plt>
  40958c:	cmn	w0, #0x1
  409590:	b.eq	409568 <ar_member_touch@@Base+0xc8>  // b.none
  409594:	tbnz	w0, #31, 40965c <ar_member_touch@@Base+0x1bc>
  409598:	add	x1, sp, #0x30
  40959c:	mov	w19, #0x20                  	// #32
  4095a0:	add	x0, x1, #0xc
  4095a4:	nop
  4095a8:	strb	w19, [x1, #16]
  4095ac:	add	x1, x1, #0x1
  4095b0:	cmp	x1, x0
  4095b4:	b.ne	4095a8 <ar_member_touch@@Base+0x108>  // b.any
  4095b8:	ldr	x2, [sp, #200]
  4095bc:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  4095c0:	add	x1, x1, #0x510
  4095c4:	add	x21, sp, #0x40
  4095c8:	mov	x0, x21
  4095cc:	bl	406730 <sprintf@plt>
  4095d0:	mov	x0, x21
  4095d4:	bl	406680 <strlen@plt>
  4095d8:	add	x1, sp, #0x40
  4095dc:	strb	w19, [x1, x0]
  4095e0:	b	4095f8 <ar_member_touch@@Base+0x158>
  4095e4:	bl	406d70 <__errno_location@plt>
  4095e8:	ldr	w21, [x0]
  4095ec:	mov	x19, x0
  4095f0:	cmp	w21, #0x4
  4095f4:	b.ne	409668 <ar_member_touch@@Base+0x1c8>  // b.any
  4095f8:	mov	x1, x22
  4095fc:	mov	w0, w20
  409600:	mov	w2, #0x0                   	// #0
  409604:	bl	406800 <lseek@plt>
  409608:	cmn	x0, #0x1
  40960c:	b.eq	4095e4 <ar_member_touch@@Base+0x144>  // b.none
  409610:	tbnz	x0, #63, 40965c <ar_member_touch@@Base+0x1bc>
  409614:	add	x1, sp, #0x30
  409618:	mov	w0, w20
  40961c:	mov	x2, #0x3c                  	// #60
  409620:	bl	418da0 <writebuf@@Base>
  409624:	cmp	w0, #0x3c
  409628:	b.ne	40965c <ar_member_touch@@Base+0x1bc>  // b.any
  40962c:	mov	w0, w20
  409630:	bl	406a50 <close@plt>
  409634:	mov	w0, #0x0                   	// #0
  409638:	ldp	x19, x20, [sp, #16]
  40963c:	ldp	x21, x22, [sp, #32]
  409640:	ldp	x29, x30, [sp], #240
  409644:	ret
  409648:	mov	w0, #0xfffffffd            	// #-3
  40964c:	ldp	x19, x20, [sp, #16]
  409650:	ldp	x21, x22, [sp, #32]
  409654:	ldp	x29, x30, [sp], #240
  409658:	ret
  40965c:	bl	406d70 <__errno_location@plt>
  409660:	ldr	w21, [x0]
  409664:	mov	x19, x0
  409668:	mov	w0, w20
  40966c:	bl	406a50 <close@plt>
  409670:	mov	w0, #0xfffffffd            	// #-3
  409674:	str	w21, [x19]
  409678:	b	4094d8 <ar_member_touch@@Base+0x38>
  40967c:	nop
  409680:	mov	x0, #0x0                   	// #0
  409684:	ret
  409688:	mov	x3, x0
  40968c:	mov	x2, x1
  409690:	ldr	x0, [x0, #8]
  409694:	cbz	x0, 4096b0 <ar_member_touch@@Base+0x210>
  409698:	ldr	x1, [x2, #8]
  40969c:	cbz	x1, 4096a4 <ar_member_touch@@Base+0x204>
  4096a0:	b	406b40 <strcmp@plt>
  4096a4:	ldr	x1, [x2, #16]
  4096a8:	ldr	x1, [x1]
  4096ac:	b	406b40 <strcmp@plt>
  4096b0:	ldr	x0, [x3, #16]
  4096b4:	ldr	x0, [x0]
  4096b8:	b	409698 <ar_member_touch@@Base+0x1f8>
  4096bc:	nop
  4096c0:	stp	x29, x30, [sp, #-16]!
  4096c4:	mov	x1, x0
  4096c8:	mov	x29, sp
  4096cc:	ldr	x0, [x0, #8]
  4096d0:	cbz	x0, 4096e4 <ar_member_touch@@Base+0x244>
  4096d4:	bl	412278 <jhash_string@@Base>
  4096d8:	mov	w0, w0
  4096dc:	ldp	x29, x30, [sp], #16
  4096e0:	ret
  4096e4:	ldr	x0, [x1, #16]
  4096e8:	ldr	x0, [x0]
  4096ec:	bl	412278 <jhash_string@@Base>
  4096f0:	mov	w0, w0
  4096f4:	ldp	x29, x30, [sp], #16
  4096f8:	ret
  4096fc:	nop
  409700:	stp	x29, x30, [sp, #-176]!
  409704:	mov	w2, #0x2020                	// #8224
  409708:	mov	x29, sp
  40970c:	stp	x19, x20, [sp, #16]
  409710:	mov	x19, x0
  409714:	ldrh	w0, [x0, #136]
  409718:	tst	w2, w0
  40971c:	b.eq	40972c <ar_member_touch@@Base+0x28c>  // b.none
  409720:	ldp	x19, x20, [sp, #16]
  409724:	ldp	x29, x30, [sp], #176
  409728:	ret
  40972c:	ldr	x0, [x19]
  409730:	mov	x20, x1
  409734:	bl	408a60 <ar_name@@Base>
  409738:	cbz	w0, 409750 <ar_member_touch@@Base+0x2b0>
  40973c:	b	409814 <ar_member_touch@@Base+0x374>
  409740:	bl	406d70 <__errno_location@plt>
  409744:	ldr	w0, [x0]
  409748:	cmp	w0, #0x4
  40974c:	b.ne	409720 <ar_member_touch@@Base+0x280>  // b.any
  409750:	ldr	x1, [x19]
  409754:	add	x2, sp, #0x30
  409758:	mov	w0, #0x0                   	// #0
  40975c:	bl	406d90 <__xstat@plt>
  409760:	cmn	w0, #0x1
  409764:	b.eq	409740 <ar_member_touch@@Base+0x2a0>  // b.none
  409768:	cbnz	w0, 409720 <ar_member_touch@@Base+0x280>
  40976c:	ldr	w0, [sp, #64]
  409770:	and	w0, w0, #0xf000
  409774:	cmp	w0, #0x8, lsl #12
  409778:	b.ne	409720 <ar_member_touch@@Base+0x280>  // b.any
  40977c:	ldp	x1, x2, [sp, #136]
  409780:	ldr	x0, [x19]
  409784:	bl	40db28 <file_timestamp_cons@@Base>
  409788:	ldr	x1, [x19, #112]
  40978c:	cmp	x0, x1
  409790:	b.eq	409720 <ar_member_touch@@Base+0x280>  // b.none
  409794:	cbz	x20, 4098d0 <ar_member_touch@@Base+0x430>
  409798:	mov	x0, x20
  40979c:	stp	x21, x22, [sp, #32]
  4097a0:	bl	406680 <strlen@plt>
  4097a4:	mov	x22, x0
  4097a8:	ldr	x0, [x19]
  4097ac:	bl	406680 <strlen@plt>
  4097b0:	mov	x21, x0
  4097b4:	mov	w2, #0x5                   	// #5
  4097b8:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  4097bc:	mov	x0, #0x0                   	// #0
  4097c0:	add	x1, x1, #0x588
  4097c4:	bl	406cd0 <dcgettext@plt>
  4097c8:	mov	x2, x0
  4097cc:	ldr	x4, [x19]
  4097d0:	add	x1, x22, x21
  4097d4:	mov	x3, x20
  4097d8:	mov	x0, #0x0                   	// #0
  4097dc:	bl	419dc8 <error@@Base>
  4097e0:	ldp	x21, x22, [sp, #32]
  4097e4:	ldr	x0, [x19]
  4097e8:	bl	406db0 <unlink@plt>
  4097ec:	tbz	w0, #31, 409720 <ar_member_touch@@Base+0x280>
  4097f0:	bl	406d70 <__errno_location@plt>
  4097f4:	ldr	w0, [x0]
  4097f8:	cmp	w0, #0x2
  4097fc:	b.eq	409720 <ar_member_touch@@Base+0x280>  // b.none
  409800:	ldr	x1, [x19]
  409804:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  409808:	add	x0, x0, #0x5c0
  40980c:	bl	419f38 <perror_with_name@@Base>
  409810:	b	409720 <ar_member_touch@@Base+0x280>
  409814:	ldr	x1, [x19, #112]
  409818:	stp	x21, x22, [sp, #32]
  40981c:	sub	x21, x1, #0x3
  409820:	cmp	x1, #0x1
  409824:	ldr	x0, [x19]
  409828:	lsr	x21, x21, #30
  40982c:	csinv	x21, x21, xzr, ne  // ne = any
  409830:	bl	408b68 <ar_member_date@@Base>
  409834:	cmp	x0, x21
  409838:	b.eq	40988c <ar_member_touch@@Base+0x3ec>  // b.none
  40983c:	cbz	x20, 409894 <ar_member_touch@@Base+0x3f4>
  409840:	mov	x0, x20
  409844:	bl	406680 <strlen@plt>
  409848:	mov	x22, x0
  40984c:	ldr	x0, [x19]
  409850:	bl	406680 <strlen@plt>
  409854:	mov	x21, x0
  409858:	mov	w2, #0x5                   	// #5
  40985c:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  409860:	mov	x0, #0x0                   	// #0
  409864:	add	x1, x1, #0x518
  409868:	bl	406cd0 <dcgettext@plt>
  40986c:	mov	x2, x0
  409870:	ldr	x4, [x19]
  409874:	add	x1, x22, x21
  409878:	mov	x3, x20
  40987c:	mov	x0, #0x0                   	// #0
  409880:	bl	419dc8 <error@@Base>
  409884:	ldp	x21, x22, [sp, #32]
  409888:	b	409720 <ar_member_touch@@Base+0x280>
  40988c:	ldp	x21, x22, [sp, #32]
  409890:	b	409720 <ar_member_touch@@Base+0x280>
  409894:	ldr	x0, [x19]
  409898:	bl	406680 <strlen@plt>
  40989c:	mov	x20, x0
  4098a0:	mov	w2, #0x5                   	// #5
  4098a4:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  4098a8:	mov	x0, #0x0                   	// #0
  4098ac:	add	x1, x1, #0x550
  4098b0:	bl	406cd0 <dcgettext@plt>
  4098b4:	mov	x2, x0
  4098b8:	ldr	x3, [x19]
  4098bc:	mov	x1, x20
  4098c0:	mov	x0, #0x0                   	// #0
  4098c4:	bl	419dc8 <error@@Base>
  4098c8:	ldp	x21, x22, [sp, #32]
  4098cc:	b	409720 <ar_member_touch@@Base+0x280>
  4098d0:	ldr	x0, [x19]
  4098d4:	bl	406680 <strlen@plt>
  4098d8:	mov	x20, x0
  4098dc:	mov	w2, #0x5                   	// #5
  4098e0:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  4098e4:	mov	x0, #0x0                   	// #0
  4098e8:	add	x1, x1, #0x5a8
  4098ec:	bl	406cd0 <dcgettext@plt>
  4098f0:	mov	x2, x0
  4098f4:	ldr	x3, [x19]
  4098f8:	mov	x1, x20
  4098fc:	mov	x0, #0x0                   	// #0
  409900:	bl	419dc8 <error@@Base>
  409904:	b	4097e4 <ar_member_touch@@Base+0x344>
  409908:	stp	x29, x30, [sp, #-32]!
  40990c:	mov	x1, #0x0                   	// #0
  409910:	mov	x29, sp
  409914:	stp	x19, x20, [sp, #16]
  409918:	mov	x20, x0
  40991c:	ldr	x0, [x0, #40]
  409920:	bl	409700 <ar_member_touch@@Base+0x260>
  409924:	ldr	x1, [x20, #40]
  409928:	ldr	x19, [x1, #48]
  40992c:	cbnz	x19, 409938 <ar_member_touch@@Base+0x498>
  409930:	b	40994c <ar_member_touch@@Base+0x4ac>
  409934:	ldr	x1, [x20, #40]
  409938:	ldr	x1, [x1]
  40993c:	ldr	x0, [x19, #16]
  409940:	bl	409700 <ar_member_touch@@Base+0x260>
  409944:	ldr	x19, [x19]
  409948:	cbnz	x19, 409934 <ar_member_touch@@Base+0x494>
  40994c:	ldrb	w0, [x20, #80]
  409950:	orr	w0, w0, #0x8
  409954:	strb	w0, [x20, #80]
  409958:	ldp	x19, x20, [sp, #16]
  40995c:	ldp	x29, x30, [sp], #32
  409960:	ret
  409964:	nop

0000000000409968 <set_file_variables@@Base>:
  409968:	stp	x29, x30, [sp, #-208]!
  40996c:	mov	x29, sp
  409970:	stp	x21, x22, [sp, #32]
  409974:	mov	x21, x0
  409978:	ldr	x0, [x0]
  40997c:	stp	x19, x20, [sp, #16]
  409980:	stp	x23, x24, [sp, #48]
  409984:	stp	x25, x26, [sp, #64]
  409988:	stp	x27, x28, [sp, #80]
  40998c:	bl	408a60 <ar_name@@Base>
  409990:	cbnz	w0, 409ec0 <set_file_variables@@Base+0x558>
  409994:	ldr	x19, [x21, #40]
  409998:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40999c:	add	x22, x22, #0x350
  4099a0:	ldr	x23, [x21]
  4099a4:	cbz	x19, 409f34 <set_file_variables@@Base+0x5cc>
  4099a8:	ldr	x1, [x21, #24]
  4099ac:	cbz	x1, 4099e4 <set_file_variables@@Base+0x7c>
  4099b0:	mov	w3, #0x12                  	// #18
  4099b4:	b	4099c0 <set_file_variables@@Base+0x58>
  4099b8:	ldr	x1, [x1]
  4099bc:	cbz	x1, 4099e4 <set_file_variables@@Base+0x7c>
  4099c0:	ldrb	w2, [x1, #33]
  4099c4:	tst	w2, w3
  4099c8:	b.ne	4099b8 <set_file_variables@@Base+0x50>  // b.any
  4099cc:	tbnz	w2, #3, 4099e4 <set_file_variables@@Base+0x7c>
  4099d0:	ldr	x2, [x1, #8]
  4099d4:	cbnz	x2, 4099ec <set_file_variables@@Base+0x84>
  4099d8:	ldr	x0, [x1, #16]
  4099dc:	ldr	x2, [x0]
  4099e0:	b	4099ec <set_file_variables@@Base+0x84>
  4099e4:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4099e8:	add	x2, x2, #0x350
  4099ec:	ldr	x0, [x21, #32]
  4099f0:	cbz	x0, 409a08 <set_file_variables@@Base+0xa0>
  4099f4:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  4099f8:	ldr	x1, [x1, #2024]
  4099fc:	ldr	x1, [x1, #32]
  409a00:	cmp	x0, x1
  409a04:	csel	x2, x2, x23, ne  // ne = any
  409a08:	ldr	x1, [x21, #80]
  409a0c:	mov	x6, #0x0                   	// #0
  409a10:	mov	w4, #0x0                   	// #0
  409a14:	mov	w3, #0x6                   	// #6
  409a18:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  409a1c:	add	x0, x0, #0x320
  409a20:	ldr	x5, [x1, #8]
  409a24:	mov	x1, #0x1                   	// #1
  409a28:	bl	422df0 <define_variable_in_set@@Base>
  409a2c:	ldr	x1, [x21, #80]
  409a30:	mov	x2, x19
  409a34:	mov	x6, #0x0                   	// #0
  409a38:	mov	w4, #0x0                   	// #0
  409a3c:	mov	w3, #0x6                   	// #6
  409a40:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  409a44:	ldr	x5, [x1, #8]
  409a48:	add	x0, x0, #0x5e0
  409a4c:	mov	x1, #0x1                   	// #1
  409a50:	bl	422df0 <define_variable_in_set@@Base>
  409a54:	ldr	x1, [x21, #80]
  409a58:	mov	x2, x23
  409a5c:	mov	x6, #0x0                   	// #0
  409a60:	mov	w4, #0x0                   	// #0
  409a64:	mov	w3, #0x6                   	// #6
  409a68:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  409a6c:	ldr	x5, [x1, #8]
  409a70:	add	x0, x0, #0x7b8
  409a74:	mov	x1, #0x1                   	// #1
  409a78:	bl	422df0 <define_variable_in_set@@Base>
  409a7c:	ldr	x1, [x21, #80]
  409a80:	mov	x2, x22
  409a84:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  409a88:	mov	x6, #0x0                   	// #0
  409a8c:	add	x0, x0, #0x6f8
  409a90:	mov	w4, #0x0                   	// #0
  409a94:	ldr	x5, [x1, #8]
  409a98:	mov	w3, #0x6                   	// #6
  409a9c:	mov	x1, #0x1                   	// #1
  409aa0:	bl	422df0 <define_variable_in_set@@Base>
  409aa4:	ldr	x19, [x21, #24]
  409aa8:	cbz	x19, 40a024 <set_file_variables@@Base+0x6bc>
  409aac:	mov	x20, x19
  409ab0:	mov	x22, #0x0                   	// #0
  409ab4:	mov	x24, #0x0                   	// #0
  409ab8:	b	409ad4 <set_file_variables@@Base+0x16c>
  409abc:	cbz	x0, 409e9c <set_file_variables@@Base+0x534>
  409ac0:	add	x22, x22, #0x1
  409ac4:	bl	406680 <strlen@plt>
  409ac8:	add	x22, x0, x22
  409acc:	ldr	x20, [x20]
  409ad0:	cbz	x20, 409b00 <set_file_variables@@Base+0x198>
  409ad4:	ldrb	w1, [x20, #33]
  409ad8:	tst	w1, #0x18
  409adc:	b.ne	409acc <set_file_variables@@Base+0x164>  // b.any
  409ae0:	ldr	x0, [x20, #8]
  409ae4:	tbnz	w1, #1, 409abc <set_file_variables@@Base+0x154>
  409ae8:	cbz	x0, 409ea8 <set_file_variables@@Base+0x540>
  409aec:	bl	406680 <strlen@plt>
  409af0:	add	x24, x24, #0x1
  409af4:	ldr	x20, [x20]
  409af8:	add	x24, x0, x24
  409afc:	cbnz	x20, 409ad4 <set_file_variables@@Base+0x16c>
  409b00:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  409b04:	cmp	x22, #0x0
  409b08:	add	x23, x0, #0x1a0
  409b0c:	mov	x1, #0x1                   	// #1
  409b10:	ldr	x2, [x0, #416]
  409b14:	csel	x3, x22, x1, ne  // ne = any
  409b18:	cmp	x24, #0x0
  409b1c:	str	x3, [x29, #104]
  409b20:	csel	x1, x24, x1, ne  // ne = any
  409b24:	cmp	x1, x2
  409b28:	add	x24, x1, #0x1
  409b2c:	ldr	x28, [x23, #8]
  409b30:	b.hi	409ff8 <set_file_variables@@Base+0x690>  // b.pmore
  409b34:	adrp	x27, 443000 <expanding_var@@Base+0x338>
  409b38:	mov	w25, #0x1a                  	// #26
  409b3c:	add	x27, x27, #0xcec
  409b40:	mov	w26, #0x20                  	// #32
  409b44:	b	409b98 <set_file_variables@@Base+0x230>
  409b48:	bl	406bb0 <strchr@plt>
  409b4c:	add	x20, x0, #0x1
  409b50:	mov	x0, x20
  409b54:	bl	406680 <strlen@plt>
  409b58:	sub	x22, x0, #0x1
  409b5c:	mov	x0, x28
  409b60:	add	x28, x28, x22
  409b64:	mov	x1, x20
  409b68:	mov	x2, x22
  409b6c:	bl	406640 <memcpy@plt>
  409b70:	strb	w26, [x28], #1
  409b74:	sub	x0, x24, #0x1
  409b78:	sub	x0, x0, x22
  409b7c:	ldrb	w1, [x19, #33]
  409b80:	tbnz	w1, #0, 409b90 <set_file_variables@@Base+0x228>
  409b84:	ldr	w1, [x27]
  409b88:	cmp	w1, #0x0
  409b8c:	csel	x24, x0, x24, eq  // eq = none
  409b90:	ldr	x19, [x19]
  409b94:	cbz	x19, 409bdc <set_file_variables@@Base+0x274>
  409b98:	ldrb	w0, [x19, #33]
  409b9c:	tst	w25, w0
  409ba0:	b.ne	409b90 <set_file_variables@@Base+0x228>  // b.any
  409ba4:	ldr	x20, [x19, #8]
  409ba8:	cbz	x20, 409bd0 <set_file_variables@@Base+0x268>
  409bac:	mov	x0, x20
  409bb0:	bl	408a60 <ar_name@@Base>
  409bb4:	mov	w1, #0x28                  	// #40
  409bb8:	mov	w2, w0
  409bbc:	mov	x0, x20
  409bc0:	cbnz	w2, 409b48 <set_file_variables@@Base+0x1e0>
  409bc4:	bl	406680 <strlen@plt>
  409bc8:	mov	x22, x0
  409bcc:	b	409b5c <set_file_variables@@Base+0x1f4>
  409bd0:	ldr	x0, [x19, #16]
  409bd4:	ldr	x20, [x0]
  409bd8:	b	409bac <set_file_variables@@Base+0x244>
  409bdc:	ldr	x2, [x23, #8]
  409be0:	cmp	x28, x2
  409be4:	cset	x0, hi  // hi = pmore
  409be8:	sub	x28, x28, x0
  409bec:	strb	wzr, [x28]
  409bf0:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  409bf4:	mov	x6, #0x0                   	// #0
  409bf8:	add	x0, x0, #0x5e8
  409bfc:	ldr	x5, [x21, #80]
  409c00:	mov	w4, #0x0                   	// #0
  409c04:	mov	w3, #0x6                   	// #6
  409c08:	mov	x1, #0x1                   	// #1
  409c0c:	ldr	x5, [x5, #8]
  409c10:	bl	422df0 <define_variable_in_set@@Base>
  409c14:	ldp	x25, x0, [x23, #8]
  409c18:	cmp	x0, x24
  409c1c:	b.cc	409fd0 <set_file_variables@@Base+0x668>  // b.lo, b.ul, b.last
  409c20:	ldr	x24, [x23, #24]
  409c24:	ldp	x20, x0, [x23, #32]
  409c28:	ldr	x1, [x29, #104]
  409c2c:	cmp	x0, x1
  409c30:	b.cc	409fb8 <set_file_variables@@Base+0x650>  // b.lo, b.ul, b.last
  409c34:	add	x0, x29, #0x78
  409c38:	adrp	x4, 409000 <ar_scan@@Base+0x108>
  409c3c:	adrp	x3, 409000 <ar_scan@@Base+0x108>
  409c40:	add	x4, x4, #0x688
  409c44:	add	x3, x3, #0x680
  409c48:	adrp	x2, 409000 <ar_scan@@Base+0x108>
  409c4c:	mov	x1, #0x1f4                 	// #500
  409c50:	add	x2, x2, #0x6c0
  409c54:	bl	411928 <hash_init@@Base>
  409c58:	ldr	x19, [x21, #24]
  409c5c:	cbz	x19, 40a01c <set_file_variables@@Base+0x6b4>
  409c60:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  409c64:	b	409c98 <set_file_variables@@Base+0x330>
  409c68:	ldrb	w1, [x3, #33]
  409c6c:	ldrb	w0, [x19, #33]
  409c70:	and	w2, w1, #0xfffffffd
  409c74:	eor	w0, w0, w1
  409c78:	tbz	w0, #1, 409c90 <set_file_variables@@Base+0x328>
  409c7c:	strb	w2, [x3, #33]
  409c80:	ldrb	w0, [x19, #33]
  409c84:	and	w0, w0, #0xfffffffd
  409c88:	strb	w0, [x19, #33]
  409c8c:	nop
  409c90:	ldr	x19, [x19]
  409c94:	cbz	x19, 409cdc <set_file_variables@@Base+0x374>
  409c98:	ldrb	w2, [x19, #33]
  409c9c:	mov	x1, x19
  409ca0:	add	x0, x29, #0x78
  409ca4:	tst	w2, #0x18
  409ca8:	b.ne	409c90 <set_file_variables@@Base+0x328>  // b.any
  409cac:	bl	4119e0 <hash_find_slot@@Base>
  409cb0:	mov	x2, x0
  409cb4:	mov	x1, x19
  409cb8:	add	x0, x29, #0x78
  409cbc:	ldr	x3, [x2]
  409cc0:	cbz	x3, 409cd0 <set_file_variables@@Base+0x368>
  409cc4:	ldr	x4, [x22, #48]
  409cc8:	cmp	x3, x4
  409ccc:	b.ne	409c68 <set_file_variables@@Base+0x300>  // b.any
  409cd0:	bl	411b38 <hash_insert_at@@Base>
  409cd4:	ldr	x19, [x19]
  409cd8:	cbnz	x19, 409c98 <set_file_variables@@Base+0x330>
  409cdc:	ldr	x19, [x21, #24]
  409ce0:	cbz	x19, 40a01c <set_file_variables@@Base+0x6b4>
  409ce4:	adrp	x27, 443000 <expanding_var@@Base+0x338>
  409ce8:	mov	x22, x25
  409cec:	add	x27, x27, #0xcec
  409cf0:	mov	w26, #0x20                  	// #32
  409cf4:	b	409d00 <set_file_variables@@Base+0x398>
  409cf8:	ldr	x19, [x19]
  409cfc:	cbz	x19, 409d78 <set_file_variables@@Base+0x410>
  409d00:	ldrb	w0, [x19, #33]
  409d04:	tst	w0, #0x18
  409d08:	b.ne	409cf8 <set_file_variables@@Base+0x390>  // b.any
  409d0c:	mov	x1, x19
  409d10:	add	x0, x29, #0x78
  409d14:	bl	411b08 <hash_find_item@@Base>
  409d18:	cmp	x19, x0
  409d1c:	b.ne	409cf8 <set_file_variables@@Base+0x390>  // b.any
  409d20:	ldr	x28, [x19, #8]
  409d24:	cbz	x28, 409eb4 <set_file_variables@@Base+0x54c>
  409d28:	mov	x0, x28
  409d2c:	bl	408a60 <ar_name@@Base>
  409d30:	cbz	w0, 409e44 <set_file_variables@@Base+0x4dc>
  409d34:	mov	w1, #0x28                  	// #40
  409d38:	mov	x0, x28
  409d3c:	bl	406bb0 <strchr@plt>
  409d40:	add	x28, x0, #0x1
  409d44:	mov	x0, x28
  409d48:	bl	406680 <strlen@plt>
  409d4c:	sub	x2, x0, #0x1
  409d50:	ldrb	w0, [x19, #33]
  409d54:	tbz	w0, #1, 409e58 <set_file_variables@@Base+0x4f0>
  409d58:	mov	x0, x20
  409d5c:	add	x20, x20, x2
  409d60:	mov	x1, x28
  409d64:	bl	406640 <memcpy@plt>
  409d68:	strb	w26, [x20], #1
  409d6c:	ldr	x19, [x19]
  409d70:	cbnz	x19, 409d00 <set_file_variables@@Base+0x398>
  409d74:	nop
  409d78:	cmp	x22, x25
  409d7c:	cset	x0, hi  // hi = pmore
  409d80:	sub	x22, x22, x0
  409d84:	add	x0, x29, #0x78
  409d88:	mov	w1, #0x0                   	// #0
  409d8c:	bl	411e68 <hash_free@@Base>
  409d90:	strb	wzr, [x22]
  409d94:	mov	x2, x25
  409d98:	mov	x6, #0x0                   	// #0
  409d9c:	ldr	x5, [x21, #80]
  409da0:	mov	w4, #0x0                   	// #0
  409da4:	mov	w3, #0x6                   	// #6
  409da8:	mov	x1, #0x1                   	// #1
  409dac:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  409db0:	add	x0, x0, #0x5f0
  409db4:	ldr	x5, [x5, #8]
  409db8:	bl	422df0 <define_variable_in_set@@Base>
  409dbc:	ldr	x2, [x23, #24]
  409dc0:	mov	x6, #0x0                   	// #0
  409dc4:	mov	w4, #0x0                   	// #0
  409dc8:	mov	w3, #0x6                   	// #6
  409dcc:	cmp	x2, x24
  409dd0:	mov	x1, #0x1                   	// #1
  409dd4:	sbc	x24, x24, xzr
  409dd8:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  409ddc:	add	x0, x0, #0x5f8
  409de0:	strb	wzr, [x24]
  409de4:	ldr	x5, [x21, #80]
  409de8:	ldr	x5, [x5, #8]
  409dec:	bl	422df0 <define_variable_in_set@@Base>
  409df0:	ldr	x2, [x23, #32]
  409df4:	mov	x6, #0x0                   	// #0
  409df8:	mov	w4, #0x0                   	// #0
  409dfc:	mov	w3, #0x6                   	// #6
  409e00:	cmp	x2, x20
  409e04:	mov	x1, #0x1                   	// #1
  409e08:	sbc	x20, x20, xzr
  409e0c:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  409e10:	add	x0, x0, #0x600
  409e14:	strb	wzr, [x20]
  409e18:	ldr	x5, [x21, #80]
  409e1c:	ldr	x5, [x5, #8]
  409e20:	bl	422df0 <define_variable_in_set@@Base>
  409e24:	mov	sp, x29
  409e28:	ldp	x19, x20, [sp, #16]
  409e2c:	ldp	x21, x22, [sp, #32]
  409e30:	ldp	x23, x24, [sp, #48]
  409e34:	ldp	x25, x26, [sp, #64]
  409e38:	ldp	x27, x28, [sp, #80]
  409e3c:	ldp	x29, x30, [sp], #208
  409e40:	ret
  409e44:	mov	x0, x28
  409e48:	bl	406680 <strlen@plt>
  409e4c:	mov	x2, x0
  409e50:	ldrb	w0, [x19, #33]
  409e54:	tbnz	w0, #1, 409d58 <set_file_variables@@Base+0x3f0>
  409e58:	mov	x0, x22
  409e5c:	add	x22, x22, x2
  409e60:	mov	x1, x28
  409e64:	str	x2, [x29, #104]
  409e68:	bl	406640 <memcpy@plt>
  409e6c:	strb	w26, [x22], #1
  409e70:	ldr	x2, [x29, #104]
  409e74:	ldrb	w0, [x19, #33]
  409e78:	tbnz	w0, #0, 409e84 <set_file_variables@@Base+0x51c>
  409e7c:	ldr	w0, [x27]
  409e80:	cbz	w0, 409cf8 <set_file_variables@@Base+0x390>
  409e84:	mov	x0, x24
  409e88:	add	x24, x24, x2
  409e8c:	mov	x1, x28
  409e90:	bl	406640 <memcpy@plt>
  409e94:	strb	w26, [x24], #1
  409e98:	b	409cf8 <set_file_variables@@Base+0x390>
  409e9c:	ldr	x0, [x20, #16]
  409ea0:	ldr	x0, [x0]
  409ea4:	b	409ac0 <set_file_variables@@Base+0x158>
  409ea8:	ldr	x0, [x20, #16]
  409eac:	ldr	x0, [x0]
  409eb0:	b	409aec <set_file_variables@@Base+0x184>
  409eb4:	ldr	x0, [x19, #16]
  409eb8:	ldr	x28, [x0]
  409ebc:	b	409d28 <set_file_variables@@Base+0x3c0>
  409ec0:	ldr	x20, [x21]
  409ec4:	mov	w1, #0x28                  	// #40
  409ec8:	mov	x0, x20
  409ecc:	bl	406bb0 <strchr@plt>
  409ed0:	mov	x1, x20
  409ed4:	sub	x20, x0, x20
  409ed8:	add	x19, x0, #0x1
  409edc:	add	x0, x20, #0x10
  409ee0:	and	x0, x0, #0xfffffffffffffff0
  409ee4:	mov	x2, x20
  409ee8:	sub	sp, sp, x0
  409eec:	mov	x23, sp
  409ef0:	mov	x0, x23
  409ef4:	bl	406640 <memcpy@plt>
  409ef8:	mov	x0, x19
  409efc:	strb	wzr, [x23, x20]
  409f00:	bl	406680 <strlen@plt>
  409f04:	add	x2, x0, #0xf
  409f08:	mov	x1, x19
  409f0c:	sub	x19, x0, #0x1
  409f10:	and	x0, x2, #0xfffffffffffffff0
  409f14:	mov	x2, x19
  409f18:	sub	sp, sp, x0
  409f1c:	mov	x22, sp
  409f20:	mov	x0, x22
  409f24:	bl	406640 <memcpy@plt>
  409f28:	strb	wzr, [x22, x19]
  409f2c:	ldr	x19, [x21, #40]
  409f30:	cbnz	x19, 4099a8 <set_file_variables@@Base+0x40>
  409f34:	ldr	x0, [x21]
  409f38:	bl	408a60 <ar_name@@Base>
  409f3c:	cbz	w0, 40a04c <set_file_variables@@Base+0x6e4>
  409f40:	ldr	x0, [x21]
  409f44:	mov	w1, #0x28                  	// #40
  409f48:	bl	406bb0 <strchr@plt>
  409f4c:	add	x25, x0, #0x1
  409f50:	mov	x0, x25
  409f54:	bl	406680 <strlen@plt>
  409f58:	sub	x24, x0, #0x1
  409f5c:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  409f60:	add	x0, x0, #0x5d0
  409f64:	bl	422490 <strcache_add@@Base>
  409f68:	bl	40c820 <enter_file@@Base>
  409f6c:	ldr	x19, [x0, #24]
  409f70:	cbnz	x19, 409fa4 <set_file_variables@@Base+0x63c>
  409f74:	b	40a078 <set_file_variables@@Base+0x710>
  409f78:	mov	x0, x20
  409f7c:	bl	406680 <strlen@plt>
  409f80:	mov	x2, x0
  409f84:	mov	x0, x20
  409f88:	subs	x20, x24, x2
  409f8c:	b.ls	409f9c <set_file_variables@@Base+0x634>  // b.plast
  409f90:	add	x1, x25, x20
  409f94:	bl	406930 <strncmp@plt>
  409f98:	cbz	w0, 40a060 <set_file_variables@@Base+0x6f8>
  409f9c:	ldr	x19, [x19]
  409fa0:	cbz	x19, 40a078 <set_file_variables@@Base+0x710>
  409fa4:	ldr	x20, [x19, #8]
  409fa8:	cbnz	x20, 409f78 <set_file_variables@@Base+0x610>
  409fac:	ldr	x0, [x19, #16]
  409fb0:	ldr	x20, [x0]
  409fb4:	b	409f78 <set_file_variables@@Base+0x610>
  409fb8:	mov	x0, x20
  409fbc:	str	x1, [x23, #40]
  409fc0:	bl	418aa0 <xrealloc@@Base>
  409fc4:	mov	x20, x0
  409fc8:	str	x0, [x23, #32]
  409fcc:	b	409c34 <set_file_variables@@Base+0x2cc>
  409fd0:	ldr	x0, [x23, #24]
  409fd4:	mov	x1, x24
  409fd8:	str	x24, [x23, #16]
  409fdc:	bl	418aa0 <xrealloc@@Base>
  409fe0:	mov	x24, x0
  409fe4:	str	x0, [x23, #24]
  409fe8:	b	409c24 <set_file_variables@@Base+0x2bc>
  409fec:	mov	x1, #0x1                   	// #1
  409ff0:	mov	x24, #0x2                   	// #2
  409ff4:	str	x1, [x29, #104]
  409ff8:	str	x1, [x0, #416]
  409ffc:	mov	x0, x28
  40a000:	bl	418aa0 <xrealloc@@Base>
  40a004:	str	x0, [x23, #8]
  40a008:	ldr	x19, [x21, #24]
  40a00c:	mov	x28, x0
  40a010:	cbnz	x19, 409b34 <set_file_variables@@Base+0x1cc>
  40a014:	mov	x2, x0
  40a018:	b	409bec <set_file_variables@@Base+0x284>
  40a01c:	mov	x22, x25
  40a020:	b	409d84 <set_file_variables@@Base+0x41c>
  40a024:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40a028:	add	x23, x0, #0x1a0
  40a02c:	ldr	x1, [x0, #416]
  40a030:	ldr	x2, [x23, #8]
  40a034:	mov	x28, x2
  40a038:	cbz	x1, 409fec <set_file_variables@@Base+0x684>
  40a03c:	mov	x0, #0x1                   	// #1
  40a040:	mov	x24, #0x2                   	// #2
  40a044:	str	x0, [x29, #104]
  40a048:	b	409bec <set_file_variables@@Base+0x284>
  40a04c:	ldr	x25, [x21]
  40a050:	mov	x0, x25
  40a054:	bl	406680 <strlen@plt>
  40a058:	mov	x24, x0
  40a05c:	b	409f5c <set_file_variables@@Base+0x5f4>
  40a060:	mov	x1, x20
  40a064:	mov	x0, x25
  40a068:	bl	4224d0 <strcache_add_len@@Base>
  40a06c:	mov	x19, x0
  40a070:	str	x0, [x21, #40]
  40a074:	b	4099a8 <set_file_variables@@Base+0x40>
  40a078:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40a07c:	add	x0, x0, #0x350
  40a080:	mov	x19, x0
  40a084:	str	x0, [x21, #40]
  40a088:	b	4099a8 <set_file_variables@@Base+0x40>
  40a08c:	nop

000000000040a090 <chop_commands@@Base>:
  40a090:	cbz	x0, 40a3b8 <chop_commands@@Base+0x328>
  40a094:	stp	x29, x30, [sp, #-128]!
  40a098:	mov	x29, sp
  40a09c:	stp	x19, x20, [sp, #16]
  40a0a0:	mov	x20, x0
  40a0a4:	ldr	x0, [x0, #32]
  40a0a8:	cbz	x0, 40a0b8 <chop_commands@@Base+0x28>
  40a0ac:	ldp	x19, x20, [sp, #16]
  40a0b0:	ldp	x29, x30, [sp], #128
  40a0b4:	ret
  40a0b8:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  40a0bc:	stp	x21, x22, [sp, #32]
  40a0c0:	ldr	w0, [x0, #2044]
  40a0c4:	stp	x23, x24, [sp, #48]
  40a0c8:	stp	x25, x26, [sp, #64]
  40a0cc:	cbnz	w0, 40a27c <chop_commands@@Base+0x1ec>
  40a0d0:	mov	x0, #0x28                  	// #40
  40a0d4:	bl	418a50 <xmalloc@@Base>
  40a0d8:	ldr	x25, [x20, #24]
  40a0dc:	mov	x21, x0
  40a0e0:	mov	w23, #0x0                   	// #0
  40a0e4:	mov	w22, #0x5                   	// #5
  40a0e8:	ldrb	w0, [x25]
  40a0ec:	cbz	w0, 40a3e8 <chop_commands@@Base+0x358>
  40a0f0:	mov	x0, x25
  40a0f4:	mov	w1, #0xa                   	// #10
  40a0f8:	sub	x24, x25, #0x1
  40a0fc:	bl	406bb0 <strchr@plt>
  40a100:	mov	x19, x0
  40a104:	cbz	x0, 40a164 <chop_commands@@Base+0xd4>
  40a108:	cmp	x0, x25
  40a10c:	b.ls	40a170 <chop_commands@@Base+0xe0>  // b.plast
  40a110:	ldurb	w0, [x0, #-1]
  40a114:	cmp	w0, #0x5c
  40a118:	b.ne	40a170 <chop_commands@@Base+0xe0>  // b.any
  40a11c:	sub	x1, x19, #0x2
  40a120:	cmp	x1, x25
  40a124:	b.cc	40a150 <chop_commands@@Base+0xc0>  // b.lo, b.ul, b.last
  40a128:	mov	w2, #0x1                   	// #1
  40a12c:	b	40a13c <chop_commands@@Base+0xac>
  40a130:	eor	w2, w2, #0x1
  40a134:	cmp	x1, x24
  40a138:	b.eq	40a14c <chop_commands@@Base+0xbc>  // b.none
  40a13c:	ldrb	w3, [x1]
  40a140:	sub	x1, x1, #0x1
  40a144:	cmp	w3, #0x5c
  40a148:	b.eq	40a130 <chop_commands@@Base+0xa0>  // b.none
  40a14c:	cbz	w2, 40a170 <chop_commands@@Base+0xe0>
  40a150:	add	x0, x19, #0x1
  40a154:	mov	w1, #0xa                   	// #10
  40a158:	bl	406bb0 <strchr@plt>
  40a15c:	mov	x19, x0
  40a160:	cbnz	x0, 40a108 <chop_commands@@Base+0x78>
  40a164:	mov	x0, x25
  40a168:	bl	406680 <strlen@plt>
  40a16c:	add	x19, x25, x0
  40a170:	cmp	w23, w22
  40a174:	b.eq	40a3a0 <chop_commands@@Base+0x310>  // b.none
  40a178:	mov	w24, w23
  40a17c:	sub	x1, x19, x25
  40a180:	mov	x0, x25
  40a184:	bl	418c80 <xstrndup@@Base>
  40a188:	add	w23, w23, #0x1
  40a18c:	str	x0, [x21, x24, lsl #3]
  40a190:	and	w23, w23, #0xffff
  40a194:	ldrb	w0, [x19]
  40a198:	cbnz	w0, 40a35c <chop_commands@@Base+0x2cc>
  40a19c:	cmp	w22, w23
  40a1a0:	b.ne	40a3bc <chop_commands@@Base+0x32c>  // b.any
  40a1a4:	and	w23, w22, #0xffff
  40a1a8:	mov	w19, w22
  40a1ac:	ldrb	w1, [x20, #51]
  40a1b0:	mov	x0, x19
  40a1b4:	str	x21, [x20, #32]
  40a1b8:	and	w1, w1, #0xfffffffe
  40a1bc:	strh	w23, [x20, #48]
  40a1c0:	strb	w1, [x20, #51]
  40a1c4:	bl	418a50 <xmalloc@@Base>
  40a1c8:	str	x0, [x20, #40]
  40a1cc:	mov	x24, x0
  40a1d0:	cbz	w22, 40a3d8 <chop_commands@@Base+0x348>
  40a1d4:	stp	x27, x28, [sp, #80]
  40a1d8:	adrp	x23, 426000 <rpl_fcntl@@Base+0xf0>
  40a1dc:	adrp	x26, 443000 <expanding_var@@Base+0x338>
  40a1e0:	add	x0, x23, #0x608
  40a1e4:	add	x26, x26, #0x448
  40a1e8:	mov	w23, #0x0                   	// #0
  40a1ec:	mov	w27, #0x2b                  	// #43
  40a1f0:	str	x0, [sp, #112]
  40a1f4:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  40a1f8:	add	x0, x0, #0x610
  40a1fc:	str	x0, [sp, #120]
  40a200:	mov	w0, w23
  40a204:	mov	w19, #0x0                   	// #0
  40a208:	orr	w2, w19, #0x1
  40a20c:	and	x5, x23, #0xffff
  40a210:	and	w2, w2, #0xff
  40a214:	ldr	x25, [x21, x0, lsl #3]
  40a218:	ldrb	w1, [x25]
  40a21c:	ldrh	w0, [x26, w1, sxtw #1]
  40a220:	tbnz	w0, #1, 40a264 <chop_commands@@Base+0x1d4>
  40a224:	nop
  40a228:	cmp	w1, #0x2d
  40a22c:	b.eq	40a26c <chop_commands@@Base+0x1dc>  // b.none
  40a230:	cmp	w1, #0x40
  40a234:	ccmp	w1, w27, #0x4, ne  // ne = any
  40a238:	b.ne	40a2fc <chop_commands@@Base+0x26c>  // b.any
  40a23c:	cmp	w1, #0x40
  40a240:	b.eq	40a2ec <chop_commands@@Base+0x25c>  // b.none
  40a244:	cmp	w1, #0x2b
  40a248:	add	x25, x25, #0x1
  40a24c:	csel	w19, w2, w19, eq  // eq = none
  40a250:	ldrb	w1, [x25]
  40a254:	orr	w2, w19, #0x1
  40a258:	and	w2, w2, #0xff
  40a25c:	ldrh	w0, [x26, w1, sxtw #1]
  40a260:	tbz	w0, #1, 40a228 <chop_commands@@Base+0x198>
  40a264:	cmp	w1, #0x2d
  40a268:	b.ne	40a23c <chop_commands@@Base+0x1ac>  // b.any
  40a26c:	orr	w19, w19, #0x4
  40a270:	add	x25, x25, #0x1
  40a274:	and	w19, w19, #0xff
  40a278:	b	40a250 <chop_commands@@Base+0x1c0>
  40a27c:	ldr	x0, [x20, #24]
  40a280:	stp	x27, x28, [sp, #80]
  40a284:	bl	406680 <strlen@plt>
  40a288:	mov	x19, x0
  40a28c:	mov	x0, #0x8                   	// #8
  40a290:	bl	418a50 <xmalloc@@Base>
  40a294:	mov	x21, x0
  40a298:	ldr	x0, [x20, #24]
  40a29c:	bl	418c60 <xstrdup@@Base>
  40a2a0:	str	x0, [x21]
  40a2a4:	cbz	x19, 40a2bc <chop_commands@@Base+0x22c>
  40a2a8:	sub	x19, x19, #0x1
  40a2ac:	ldrb	w1, [x0, x19]
  40a2b0:	cmp	w1, #0xa
  40a2b4:	b.ne	40a2bc <chop_commands@@Base+0x22c>  // b.any
  40a2b8:	strb	wzr, [x0, x19]
  40a2bc:	ldrb	w1, [x20, #51]
  40a2c0:	mov	w2, #0x1                   	// #1
  40a2c4:	str	x21, [x20, #32]
  40a2c8:	mov	x0, #0x1                   	// #1
  40a2cc:	and	w1, w1, #0xfffffffe
  40a2d0:	strh	w2, [x20, #48]
  40a2d4:	strb	w1, [x20, #51]
  40a2d8:	mov	w22, #0x1                   	// #1
  40a2dc:	bl	418a50 <xmalloc@@Base>
  40a2e0:	mov	x24, x0
  40a2e4:	str	x0, [x20, #40]
  40a2e8:	b	40a1d8 <chop_commands@@Base+0x148>
  40a2ec:	orr	w19, w19, #0x2
  40a2f0:	add	x25, x25, #0x1
  40a2f4:	and	w19, w19, #0xff
  40a2f8:	b	40a250 <chop_commands@@Base+0x1c0>
  40a2fc:	and	w28, w19, #0x1
  40a300:	tbnz	w19, #0, 40a328 <chop_commands@@Base+0x298>
  40a304:	ldr	x1, [sp, #112]
  40a308:	mov	x0, x25
  40a30c:	str	x5, [sp, #104]
  40a310:	bl	406cc0 <strstr@plt>
  40a314:	ldr	x5, [sp, #104]
  40a318:	cbz	x0, 40a36c <chop_commands@@Base+0x2dc>
  40a31c:	orr	w28, w19, #0x1
  40a320:	and	w19, w28, #0xff
  40a324:	and	w28, w28, #0x1
  40a328:	strb	w19, [x24, x5]
  40a32c:	add	w1, w23, #0x1
  40a330:	and	w23, w1, #0xffff
  40a334:	ldrb	w0, [x20, #51]
  40a338:	cmp	w22, w1, uxth
  40a33c:	mov	w1, w0
  40a340:	ubfx	x0, x0, #0, #1
  40a344:	orr	w28, w28, w0
  40a348:	bfxil	w1, w28, #0, #1
  40a34c:	strb	w1, [x20, #51]
  40a350:	b.ls	40a384 <chop_commands@@Base+0x2f4>  // b.plast
  40a354:	ldr	x24, [x20, #40]
  40a358:	b	40a200 <chop_commands@@Base+0x170>
  40a35c:	ldrb	w0, [x19, #1]
  40a360:	add	x25, x19, #0x1
  40a364:	cbnz	w0, 40a0f0 <chop_commands@@Base+0x60>
  40a368:	b	40a19c <chop_commands@@Base+0x10c>
  40a36c:	ldr	x1, [sp, #120]
  40a370:	mov	x0, x25
  40a374:	bl	406cc0 <strstr@plt>
  40a378:	ldr	x5, [sp, #104]
  40a37c:	cbnz	x0, 40a31c <chop_commands@@Base+0x28c>
  40a380:	b	40a328 <chop_commands@@Base+0x298>
  40a384:	ldp	x19, x20, [sp, #16]
  40a388:	ldp	x21, x22, [sp, #32]
  40a38c:	ldp	x23, x24, [sp, #48]
  40a390:	ldp	x25, x26, [sp, #64]
  40a394:	ldp	x27, x28, [sp, #80]
  40a398:	ldp	x29, x30, [sp], #128
  40a39c:	ret
  40a3a0:	add	w22, w23, #0x2
  40a3a4:	mov	x0, x21
  40a3a8:	ubfiz	x1, x22, #3, #17
  40a3ac:	bl	418aa0 <xrealloc@@Base>
  40a3b0:	mov	x21, x0
  40a3b4:	b	40a178 <chop_commands@@Base+0xe8>
  40a3b8:	ret
  40a3bc:	ubfiz	x1, x23, #3, #16
  40a3c0:	and	x19, x23, #0xffff
  40a3c4:	mov	w22, w23
  40a3c8:	mov	x0, x21
  40a3cc:	bl	418aa0 <xrealloc@@Base>
  40a3d0:	mov	x21, x0
  40a3d4:	b	40a1ac <chop_commands@@Base+0x11c>
  40a3d8:	ldp	x21, x22, [sp, #32]
  40a3dc:	ldp	x23, x24, [sp, #48]
  40a3e0:	ldp	x25, x26, [sp, #64]
  40a3e4:	b	40a0ac <chop_commands@@Base+0x1c>
  40a3e8:	mov	x19, #0x0                   	// #0
  40a3ec:	mov	x1, #0x0                   	// #0
  40a3f0:	mov	w22, #0x0                   	// #0
  40a3f4:	b	40a3c8 <chop_commands@@Base+0x338>

000000000040a3f8 <execute_file_commands@@Base>:
  40a3f8:	stp	x29, x30, [sp, #-32]!
  40a3fc:	mov	x29, sp
  40a400:	str	x19, [sp, #16]
  40a404:	mov	x19, x0
  40a408:	ldr	x0, [x0, #32]
  40a40c:	ldr	x4, [x0, #24]
  40a410:	ldrb	w2, [x4]
  40a414:	cbz	w2, 40a44c <execute_file_commands@@Base+0x54>
  40a418:	adrp	x5, 443000 <expanding_var@@Base+0x338>
  40a41c:	add	x5, x5, #0x448
  40a420:	sub	w1, w2, #0x2b
  40a424:	ldrh	w3, [x5, w2, sxtw #1]
  40a428:	and	w1, w1, #0xfffffffd
  40a42c:	cmp	w2, #0x40
  40a430:	and	w1, w1, #0xff
  40a434:	and	w2, w3, #0x6
  40a438:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  40a43c:	ccmp	w2, #0x0, #0x0, ne  // ne = any
  40a440:	b.eq	40a474 <execute_file_commands@@Base+0x7c>  // b.none
  40a444:	ldrb	w2, [x4, #1]!
  40a448:	cbnz	w2, 40a420 <execute_file_commands@@Base+0x28>
  40a44c:	mov	x0, x19
  40a450:	mov	w1, #0x2                   	// #2
  40a454:	bl	40d9f0 <set_command_state@@Base>
  40a458:	ldrb	w1, [x19, #136]
  40a45c:	mov	x0, x19
  40a460:	and	w1, w1, #0xfffffffc
  40a464:	strb	w1, [x19, #136]
  40a468:	ldr	x19, [sp, #16]
  40a46c:	ldp	x29, x30, [sp], #32
  40a470:	b	41f620 <notice_finished_file@@Base>
  40a474:	mov	w1, #0x0                   	// #0
  40a478:	mov	x0, x19
  40a47c:	bl	424280 <initialize_file_variables@@Base>
  40a480:	mov	x0, x19
  40a484:	bl	409968 <set_file_variables@@Base>
  40a488:	ldrb	w0, [x19, #136]
  40a48c:	tbnz	w0, #6, 40a4a0 <execute_file_commands@@Base+0xa8>
  40a490:	mov	x0, x19
  40a494:	ldr	x19, [sp, #16]
  40a498:	ldp	x29, x30, [sp], #32
  40a49c:	b	416240 <new_job@@Base>
  40a4a0:	ldr	x0, [x19]
  40a4a4:	bl	416cd0 <unload_file@@Base>
  40a4a8:	mov	x0, x19
  40a4ac:	ldr	x19, [sp, #16]
  40a4b0:	ldp	x29, x30, [sp], #32
  40a4b4:	b	416240 <new_job@@Base>

000000000040a4b8 <fatal_error_signal@@Base>:
  40a4b8:	stp	x29, x30, [sp, #-48]!
  40a4bc:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40a4c0:	mov	w2, #0x1                   	// #1
  40a4c4:	mov	x29, sp
  40a4c8:	str	w2, [x1, #464]
  40a4cc:	mov	x1, #0x0                   	// #0
  40a4d0:	stp	x19, x20, [sp, #16]
  40a4d4:	mov	w20, w0
  40a4d8:	str	x21, [sp, #32]
  40a4dc:	bl	406880 <signal@plt>
  40a4e0:	cmp	w20, #0xf
  40a4e4:	b.eq	40a5d8 <fatal_error_signal@@Base+0x120>  // b.none
  40a4e8:	sub	w0, w20, #0x1
  40a4ec:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  40a4f0:	cmp	w0, #0x2
  40a4f4:	b.hi	40a5a4 <fatal_error_signal@@Base+0xec>  // b.pmore
  40a4f8:	ldr	x19, [x21, #928]
  40a4fc:	cbz	x19, 40a550 <fatal_error_signal@@Base+0x98>
  40a500:	ldrb	w1, [x19, #80]
  40a504:	tbz	w1, #0, 40a51c <fatal_error_signal@@Base+0x64>
  40a508:	ldr	w0, [x19, #76]
  40a50c:	cmp	w0, #0x0
  40a510:	b.le	40a51c <fatal_error_signal@@Base+0x64>
  40a514:	mov	w1, w20
  40a518:	bl	425c98 <remote_kill@@Base>
  40a51c:	ldr	x19, [x19, #32]
  40a520:	cbnz	x19, 40a500 <fatal_error_signal@@Base+0x48>
  40a524:	ldr	x19, [x21, #928]
  40a528:	cbz	x19, 40a550 <fatal_error_signal@@Base+0x98>
  40a52c:	nop
  40a530:	ldrb	w1, [x19, #80]
  40a534:	tbnz	w1, #3, 40a548 <fatal_error_signal@@Base+0x90>
  40a538:	ldr	w1, [x19, #76]
  40a53c:	tbnz	w1, #31, 40a548 <fatal_error_signal@@Base+0x90>
  40a540:	mov	x0, x19
  40a544:	bl	409908 <ar_member_touch@@Base+0x468>
  40a548:	ldr	x19, [x19, #32]
  40a54c:	cbnz	x19, 40a530 <fatal_error_signal@@Base+0x78>
  40a550:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40a554:	add	x19, x0, #0x414
  40a558:	ldr	w0, [x0, #1044]
  40a55c:	cbz	w0, 40a574 <fatal_error_signal@@Base+0xbc>
  40a560:	mov	w1, #0x0                   	// #0
  40a564:	mov	w0, #0x1                   	// #1
  40a568:	bl	415358 <reap_children@@Base>
  40a56c:	ldr	w1, [x19]
  40a570:	cbnz	w1, 40a560 <fatal_error_signal@@Base+0xa8>
  40a574:	mov	w0, #0x1                   	// #1
  40a578:	bl	40cda0 <remove_intermediates@@Base>
  40a57c:	cmp	w20, #0x3
  40a580:	b.eq	40a61c <fatal_error_signal@@Base+0x164>  // b.none
  40a584:	bl	4068a0 <getpid@plt>
  40a588:	mov	w1, w20
  40a58c:	bl	4067e0 <kill@plt>
  40a590:	tbnz	w0, #31, 40a610 <fatal_error_signal@@Base+0x158>
  40a594:	ldp	x19, x20, [sp, #16]
  40a598:	ldr	x21, [sp, #32]
  40a59c:	ldp	x29, x30, [sp], #48
  40a5a0:	ret
  40a5a4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40a5a8:	add	x19, x0, #0x414
  40a5ac:	ldr	w0, [x0, #1044]
  40a5b0:	cbz	w0, 40a5cc <fatal_error_signal@@Base+0x114>
  40a5b4:	nop
  40a5b8:	mov	w1, #0x1                   	// #1
  40a5bc:	mov	w0, w1
  40a5c0:	bl	415358 <reap_children@@Base>
  40a5c4:	ldr	w0, [x19]
  40a5c8:	cbnz	w0, 40a5b8 <fatal_error_signal@@Base+0x100>
  40a5cc:	mov	w0, #0x1                   	// #1
  40a5d0:	bl	40cda0 <remove_intermediates@@Base>
  40a5d4:	b	40a584 <fatal_error_signal@@Base+0xcc>
  40a5d8:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  40a5dc:	ldr	x19, [x21, #928]
  40a5e0:	cbz	x19, 40a550 <fatal_error_signal@@Base+0x98>
  40a5e4:	nop
  40a5e8:	ldrb	w0, [x19, #80]
  40a5ec:	tbnz	w0, #0, 40a604 <fatal_error_signal@@Base+0x14c>
  40a5f0:	ldr	w0, [x19, #76]
  40a5f4:	cmp	w0, #0x0
  40a5f8:	b.le	40a604 <fatal_error_signal@@Base+0x14c>
  40a5fc:	mov	w1, #0xf                   	// #15
  40a600:	bl	4067e0 <kill@plt>
  40a604:	ldr	x19, [x19, #32]
  40a608:	cbnz	x19, 40a5e8 <fatal_error_signal@@Base+0x130>
  40a60c:	b	40a4f8 <fatal_error_signal@@Base+0x40>
  40a610:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  40a614:	add	x0, x0, #0x618
  40a618:	bl	419828 <pfatal_with_name@@Base>
  40a61c:	mov	w0, #0x1                   	// #1
  40a620:	bl	4066a0 <exit@plt>
  40a624:	nop

000000000040a628 <delete_child_targets@@Base>:
  40a628:	ldrb	w2, [x0, #80]
  40a62c:	tbnz	w2, #3, 40a63c <delete_child_targets@@Base+0x14>
  40a630:	ldr	w1, [x0, #76]
  40a634:	tbnz	w1, #31, 40a63c <delete_child_targets@@Base+0x14>
  40a638:	b	409908 <ar_member_touch@@Base+0x468>
  40a63c:	ret

000000000040a640 <print_commands@@Base>:
  40a640:	stp	x29, x30, [sp, #-48]!
  40a644:	mov	w2, #0x5                   	// #5
  40a648:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  40a64c:	mov	x29, sp
  40a650:	add	x1, x1, #0x620
  40a654:	stp	x19, x20, [sp, #16]
  40a658:	mov	x19, x0
  40a65c:	mov	x0, #0x0                   	// #0
  40a660:	bl	406cd0 <dcgettext@plt>
  40a664:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40a668:	ldr	x1, [x1, #384]
  40a66c:	bl	406690 <fputs@plt>
  40a670:	ldr	x0, [x19]
  40a674:	cbz	x0, 40a72c <print_commands@@Base+0xec>
  40a678:	mov	w2, #0x5                   	// #5
  40a67c:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  40a680:	mov	x0, #0x0                   	// #0
  40a684:	add	x1, x1, #0x648
  40a688:	bl	406cd0 <dcgettext@plt>
  40a68c:	ldp	x1, x2, [x19]
  40a690:	bl	406d60 <printf@plt>
  40a694:	ldr	x3, [x19, #24]
  40a698:	ldrb	w0, [x3]
  40a69c:	cbz	w0, 40a720 <print_commands@@Base+0xe0>
  40a6a0:	adrp	x20, 426000 <rpl_fcntl@@Base+0xf0>
  40a6a4:	add	x20, x20, #0x668
  40a6a8:	str	x21, [sp, #32]
  40a6ac:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  40a6b0:	add	x21, x21, #0x94
  40a6b4:	nop
  40a6b8:	mov	x19, x3
  40a6bc:	mov	w1, #0x0                   	// #0
  40a6c0:	b	40a6d8 <print_commands@@Base+0x98>
  40a6c4:	cmp	w0, #0x5c
  40a6c8:	ldrb	w0, [x19, #1]!
  40a6cc:	cset	w1, eq  // eq = none
  40a6d0:	and	w1, w1, w2
  40a6d4:	cbz	w0, 40a6f4 <print_commands@@Base+0xb4>
  40a6d8:	eor	w2, w1, #0x1
  40a6dc:	cmp	w0, #0xa
  40a6e0:	b.ne	40a6c4 <print_commands@@Base+0x84>  // b.any
  40a6e4:	cbz	w1, 40a6f4 <print_commands@@Base+0xb4>
  40a6e8:	ldrb	w0, [x19, #1]!
  40a6ec:	mov	w1, #0x0                   	// #0
  40a6f0:	cbnz	w0, 40a6d8 <print_commands@@Base+0x98>
  40a6f4:	ldrb	w1, [x21]
  40a6f8:	sub	w2, w19, w3
  40a6fc:	mov	x0, x20
  40a700:	bl	406d60 <printf@plt>
  40a704:	ldrb	w0, [x19]
  40a708:	cmp	w0, #0xa
  40a70c:	cset	w0, eq  // eq = none
  40a710:	cinc	x3, x19, eq  // eq = none
  40a714:	ldrb	w0, [x19, w0, uxtw]
  40a718:	cbnz	w0, 40a6b8 <print_commands@@Base+0x78>
  40a71c:	ldr	x21, [sp, #32]
  40a720:	ldp	x19, x20, [sp, #16]
  40a724:	ldp	x29, x30, [sp], #48
  40a728:	ret
  40a72c:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  40a730:	add	x1, x1, #0x638
  40a734:	mov	w2, #0x5                   	// #5
  40a738:	bl	406cd0 <dcgettext@plt>
  40a73c:	bl	406ae0 <puts@plt>
  40a740:	b	40a694 <print_commands@@Base+0x54>
  40a744:	nop

000000000040a748 <set_default_suffixes@@Base>:
  40a748:	stp	x29, x30, [sp, #-64]!
  40a74c:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  40a750:	add	x0, x0, #0x5d0
  40a754:	mov	x29, sp
  40a758:	stp	x19, x20, [sp, #16]
  40a75c:	bl	422490 <strcache_add@@Base>
  40a760:	bl	40c820 <enter_file@@Base>
  40a764:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40a768:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  40a76c:	ldr	w2, [x1, #3340]
  40a770:	ldrb	w1, [x0, #136]
  40a774:	str	x0, [x19, #2200]
  40a778:	orr	w1, w1, #0x10
  40a77c:	strb	w1, [x0, #136]
  40a780:	cbz	w2, 40a7c0 <set_default_suffixes@@Base+0x78>
  40a784:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40a788:	mov	x6, #0x0                   	// #0
  40a78c:	mov	w4, #0x0                   	// #0
  40a790:	mov	w3, #0x0                   	// #0
  40a794:	ldr	x5, [x1, #288]
  40a798:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40a79c:	mov	x1, #0x8                   	// #8
  40a7a0:	add	x2, x2, #0x350
  40a7a4:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  40a7a8:	add	x0, x0, #0x670
  40a7ac:	ldr	x5, [x5, #8]
  40a7b0:	bl	422df0 <define_variable_in_set@@Base>
  40a7b4:	ldp	x19, x20, [sp, #16]
  40a7b8:	ldp	x29, x30, [sp], #64
  40a7bc:	ret
  40a7c0:	mov	w4, #0x0                   	// #0
  40a7c4:	mov	x3, #0x0                   	// #0
  40a7c8:	mov	w2, #0x1                   	// #1
  40a7cc:	mov	x1, #0x28                  	// #40
  40a7d0:	add	x0, sp, #0x38
  40a7d4:	adrp	x20, 442000 <memcpy@GLIBC_2.17>
  40a7d8:	add	x20, x20, #0x3f8
  40a7dc:	str	x21, [sp, #32]
  40a7e0:	str	x20, [sp, #56]
  40a7e4:	bl	41c510 <parse_file_seq@@Base>
  40a7e8:	ldr	x21, [x19, #2200]
  40a7ec:	mov	x1, #0x0                   	// #0
  40a7f0:	bl	40d0d8 <enter_prereqs@@Base>
  40a7f4:	ldr	x1, [x19, #2200]
  40a7f8:	str	x0, [x21, #24]
  40a7fc:	ldr	x0, [x1, #24]
  40a800:	cbz	x0, 40a820 <set_default_suffixes@@Base+0xd8>
  40a804:	nop
  40a808:	ldr	x2, [x0, #16]
  40a80c:	ldrb	w1, [x2, #136]
  40a810:	orr	w1, w1, #0x10
  40a814:	strb	w1, [x2, #136]
  40a818:	ldr	x0, [x0]
  40a81c:	cbnz	x0, 40a808 <set_default_suffixes@@Base+0xc0>
  40a820:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40a824:	mov	x2, x20
  40a828:	mov	x6, #0x0                   	// #0
  40a82c:	mov	w4, #0x0                   	// #0
  40a830:	ldr	x5, [x1, #288]
  40a834:	mov	w3, #0x0                   	// #0
  40a838:	mov	x1, #0x8                   	// #8
  40a83c:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  40a840:	add	x0, x0, #0x670
  40a844:	ldr	x5, [x5, #8]
  40a848:	bl	422df0 <define_variable_in_set@@Base>
  40a84c:	ldp	x19, x20, [sp, #16]
  40a850:	ldr	x21, [sp, #32]
  40a854:	ldp	x29, x30, [sp], #64
  40a858:	ret
  40a85c:	nop

000000000040a860 <install_default_suffix_rules@@Base>:
  40a860:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40a864:	ldr	w0, [x0, #3340]
  40a868:	cbnz	w0, 40a8f4 <install_default_suffix_rules@@Base+0x94>
  40a86c:	stp	x29, x30, [sp, #-48]!
  40a870:	adrp	x0, 442000 <memcpy@GLIBC_2.17>
  40a874:	add	x0, x0, #0x3f8
  40a878:	mov	x29, sp
  40a87c:	stp	x21, x22, [sp, #32]
  40a880:	add	x21, x0, #0x98
  40a884:	ldr	x0, [x0, #152]
  40a888:	cbz	x0, 40a8e8 <install_default_suffix_rules@@Base+0x88>
  40a88c:	mov	w22, #0x9                   	// #9
  40a890:	stp	x19, x20, [sp, #16]
  40a894:	nop
  40a898:	bl	422490 <strcache_add@@Base>
  40a89c:	bl	40c820 <enter_file@@Base>
  40a8a0:	mov	x19, x0
  40a8a4:	mov	x0, #0x38                  	// #56
  40a8a8:	bl	418a50 <xmalloc@@Base>
  40a8ac:	mov	x20, x0
  40a8b0:	str	x0, [x19, #32]
  40a8b4:	str	xzr, [x0]
  40a8b8:	ldr	x0, [x21, #8]
  40a8bc:	bl	418c60 <xstrdup@@Base>
  40a8c0:	ldr	x1, [x19, #32]
  40a8c4:	str	x0, [x20, #24]
  40a8c8:	strb	w22, [x1, #50]
  40a8cc:	ldrb	w0, [x19, #136]
  40a8d0:	str	xzr, [x1, #32]
  40a8d4:	orr	w0, w0, #0x10
  40a8d8:	strb	w0, [x19, #136]
  40a8dc:	ldr	x0, [x21, #16]!
  40a8e0:	cbnz	x0, 40a898 <install_default_suffix_rules@@Base+0x38>
  40a8e4:	ldp	x19, x20, [sp, #16]
  40a8e8:	ldp	x21, x22, [sp, #32]
  40a8ec:	ldp	x29, x30, [sp], #48
  40a8f0:	ret
  40a8f4:	ret

000000000040a8f8 <install_default_implicit_rules@@Base>:
  40a8f8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40a8fc:	ldr	w0, [x0, #3340]
  40a900:	cbnz	w0, 40a968 <install_default_implicit_rules@@Base+0x70>
  40a904:	stp	x29, x30, [sp, #-32]!
  40a908:	mov	x29, sp
  40a90c:	stp	x19, x20, [sp, #16]
  40a910:	adrp	x19, 442000 <memcpy@GLIBC_2.17>
  40a914:	add	x19, x19, #0x3f8
  40a918:	add	x20, x19, #0x3b8
  40a91c:	ldr	x0, [x19, #952]
  40a920:	cbz	x0, 40a93c <install_default_implicit_rules@@Base+0x44>
  40a924:	nop
  40a928:	mov	x0, x20
  40a92c:	mov	w1, #0x0                   	// #0
  40a930:	bl	421988 <install_pattern_rule@@Base>
  40a934:	ldr	x0, [x20, #24]!
  40a938:	cbnz	x0, 40a928 <install_default_implicit_rules@@Base+0x30>
  40a93c:	ldr	x0, [x19, #1072]
  40a940:	add	x19, x19, #0x430
  40a944:	cbz	x0, 40a95c <install_default_implicit_rules@@Base+0x64>
  40a948:	mov	x0, x19
  40a94c:	mov	w1, #0x1                   	// #1
  40a950:	bl	421988 <install_pattern_rule@@Base>
  40a954:	ldr	x0, [x19, #24]!
  40a958:	cbnz	x0, 40a948 <install_default_implicit_rules@@Base+0x50>
  40a95c:	ldp	x19, x20, [sp, #16]
  40a960:	ldp	x29, x30, [sp], #32
  40a964:	ret
  40a968:	ret
  40a96c:	nop

000000000040a970 <define_default_variables@@Base>:
  40a970:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40a974:	ldr	w0, [x0, #3336]
  40a978:	cbnz	w0, 40a9ec <define_default_variables@@Base+0x7c>
  40a97c:	stp	x29, x30, [sp, #-48]!
  40a980:	adrp	x0, 442000 <memcpy@GLIBC_2.17>
  40a984:	add	x0, x0, #0x3f8
  40a988:	mov	x29, sp
  40a98c:	stp	x19, x20, [sp, #16]
  40a990:	add	x20, x0, #0x4c0
  40a994:	ldr	x19, [x0, #1216]
  40a998:	cbz	x19, 40a9e0 <define_default_variables@@Base+0x70>
  40a99c:	str	x21, [sp, #32]
  40a9a0:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  40a9a4:	add	x21, x21, #0x120
  40a9a8:	mov	x0, x19
  40a9ac:	bl	406680 <strlen@plt>
  40a9b0:	ldr	x3, [x21]
  40a9b4:	mov	x1, x0
  40a9b8:	ldr	x2, [x20, #8]
  40a9bc:	mov	x0, x19
  40a9c0:	ldr	x5, [x3, #8]
  40a9c4:	mov	x6, #0x0                   	// #0
  40a9c8:	mov	w4, #0x1                   	// #1
  40a9cc:	mov	w3, #0x0                   	// #0
  40a9d0:	bl	422df0 <define_variable_in_set@@Base>
  40a9d4:	ldr	x19, [x20, #16]!
  40a9d8:	cbnz	x19, 40a9a8 <define_default_variables@@Base+0x38>
  40a9dc:	ldr	x21, [sp, #32]
  40a9e0:	ldp	x19, x20, [sp, #16]
  40a9e4:	ldp	x29, x30, [sp], #48
  40a9e8:	ret
  40a9ec:	ret

000000000040a9f0 <undefine_default_variables@@Base>:
  40a9f0:	stp	x29, x30, [sp, #-32]!
  40a9f4:	adrp	x0, 442000 <memcpy@GLIBC_2.17>
  40a9f8:	add	x0, x0, #0x3f8
  40a9fc:	mov	x29, sp
  40aa00:	stp	x19, x20, [sp, #16]
  40aa04:	ldr	x19, [x0, #1216]
  40aa08:	cbz	x19, 40aa34 <undefine_default_variables@@Base+0x44>
  40aa0c:	add	x20, x0, #0x4c0
  40aa10:	mov	x0, x19
  40aa14:	bl	406680 <strlen@plt>
  40aa18:	mov	x3, #0x0                   	// #0
  40aa1c:	mov	x1, x0
  40aa20:	mov	w2, #0x0                   	// #0
  40aa24:	mov	x0, x19
  40aa28:	bl	4230d8 <undefine_variable_in_set@@Base>
  40aa2c:	ldr	x19, [x20, #16]!
  40aa30:	cbnz	x19, 40aa10 <undefine_default_variables@@Base+0x20>
  40aa34:	ldp	x19, x20, [sp, #16]
  40aa38:	ldp	x29, x30, [sp], #32
  40aa3c:	ret
  40aa40:	ldp	x1, x0, [x0]
  40aa44:	eor	w0, w0, w1, lsl #4
  40aa48:	ret
  40aa4c:	nop
  40aa50:	ldp	x1, x0, [x0]
  40aa54:	eon	w0, w0, w1, lsl #4
  40aa58:	ret
  40aa5c:	nop
  40aa60:	mov	x0, #0x0                   	// #0
  40aa64:	ret
  40aa68:	ldr	x0, [x0]
  40aa6c:	ldr	x1, [x1]
  40aa70:	cmp	x0, x1
  40aa74:	b.eq	40aa7c <undefine_default_variables@@Base+0x8c>  // b.none
  40aa78:	b	406b40 <strcmp@plt>
  40aa7c:	mov	w0, #0x0                   	// #0
  40aa80:	ret
  40aa84:	nop
  40aa88:	stp	x29, x30, [sp, #-16]!
  40aa8c:	mov	x29, sp
  40aa90:	ldr	x0, [x0]
  40aa94:	bl	412278 <jhash_string@@Base>
  40aa98:	mov	w0, w0
  40aa9c:	ldp	x29, x30, [sp], #16
  40aaa0:	ret
  40aaa4:	nop
  40aaa8:	stp	x29, x30, [sp, #-16]!
  40aaac:	mov	x29, sp
  40aab0:	ldr	x0, [x0]
  40aab4:	bl	412278 <jhash_string@@Base>
  40aab8:	mov	w0, w0
  40aabc:	ldp	x29, x30, [sp], #16
  40aac0:	ret
  40aac4:	nop
  40aac8:	stp	x29, x30, [sp, #-48]!
  40aacc:	mov	x29, sp
  40aad0:	ldp	x3, x1, [x0]
  40aad4:	stp	x19, x20, [sp, #16]
  40aad8:	ldr	x4, [x3, #16]
  40aadc:	ldr	x2, [x3, #48]
  40aae0:	add	x2, x4, x2, lsl #3
  40aae4:	cmp	x2, x1
  40aae8:	b.ls	40abbc <undefine_default_variables@@Base+0x1cc>  // b.plast
  40aaec:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  40aaf0:	ldr	x3, [x3, #48]
  40aaf4:	nop
  40aaf8:	ldr	x19, [x1], #8
  40aafc:	cmp	x3, x19
  40ab00:	cbz	x19, 40ab10 <undefine_default_variables@@Base+0x120>
  40ab04:	b.eq	40ab10 <undefine_default_variables@@Base+0x120>  // b.none
  40ab08:	ldrsh	w4, [x19, #16]
  40ab0c:	cbz	w4, 40ab30 <undefine_default_variables@@Base+0x140>
  40ab10:	cmp	x1, x2
  40ab14:	b.cc	40aaf8 <undefine_default_variables@@Base+0x108>  // b.lo, b.ul, b.last
  40ab18:	mov	x20, #0x0                   	// #0
  40ab1c:	str	x1, [x0, #8]
  40ab20:	mov	x0, x20
  40ab24:	ldp	x19, x20, [sp, #16]
  40ab28:	ldp	x29, x30, [sp], #48
  40ab2c:	ret
  40ab30:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  40ab34:	stp	x21, x22, [sp, #32]
  40ab38:	add	x22, x3, #0x1d8
  40ab3c:	ldr	x2, [x19, #8]
  40ab40:	str	x1, [x0, #8]
  40ab44:	ldr	x0, [x3, #472]
  40ab48:	add	x1, x2, #0x19
  40ab4c:	add	x21, x2, #0x1
  40ab50:	cmp	x0, x1
  40ab54:	ldr	x20, [x22, #8]
  40ab58:	b.cs	40ab80 <undefine_default_variables@@Base+0x190>  // b.hs, b.nlast
  40ab5c:	cmp	x1, x0, lsl #1
  40ab60:	lsl	x0, x0, #1
  40ab64:	b.hi	40abb4 <undefine_default_variables@@Base+0x1c4>  // b.pmore
  40ab68:	mov	x1, x0
  40ab6c:	str	x0, [x3, #472]
  40ab70:	mov	x0, x20
  40ab74:	bl	418aa0 <xrealloc@@Base>
  40ab78:	mov	x20, x0
  40ab7c:	str	x0, [x22, #8]
  40ab80:	mov	x0, #0x1                   	// #1
  40ab84:	str	x0, [x20]
  40ab88:	mov	x2, x21
  40ab8c:	add	x0, x20, #0x13
  40ab90:	ldrb	w1, [x19, #18]
  40ab94:	strb	w1, [x20, #18]
  40ab98:	ldr	x1, [x19]
  40ab9c:	bl	406640 <memcpy@plt>
  40aba0:	mov	x0, x20
  40aba4:	ldp	x19, x20, [sp, #16]
  40aba8:	ldp	x21, x22, [sp, #32]
  40abac:	ldp	x29, x30, [sp], #48
  40abb0:	ret
  40abb4:	str	x1, [x3, #472]
  40abb8:	b	40ab70 <undefine_default_variables@@Base+0x180>
  40abbc:	mov	x20, #0x0                   	// #0
  40abc0:	b	40ab20 <undefine_default_variables@@Base+0x130>
  40abc4:	nop
  40abc8:	mov	x2, x0
  40abcc:	ldr	x0, [x1, #8]
  40abd0:	ldr	x3, [x2, #8]
  40abd4:	cmp	x3, x0
  40abd8:	b.cc	40ac00 <undefine_default_variables@@Base+0x210>  // b.lo, b.ul, b.last
  40abdc:	mov	w0, #0x1                   	// #1
  40abe0:	b.ne	40abfc <undefine_default_variables@@Base+0x20c>  // b.any
  40abe4:	ldr	x1, [x1]
  40abe8:	mov	w3, #0xffffffff            	// #-1
  40abec:	ldr	x2, [x2]
  40abf0:	cmp	x2, x1
  40abf4:	cset	w0, ne  // ne = any
  40abf8:	csel	w0, w0, w3, cs  // cs = hs, nlast
  40abfc:	ret
  40ac00:	mov	w0, #0xffffffff            	// #-1
  40ac04:	ret
  40ac08:	mov	x2, x0
  40ac0c:	ldr	x3, [x1, #8]
  40ac10:	ldr	x0, [x0, #8]
  40ac14:	subs	w0, w0, w3
  40ac18:	b.ne	40ac34 <undefine_default_variables@@Base+0x244>  // b.any
  40ac1c:	ldr	x1, [x1]
  40ac20:	ldr	x2, [x2]
  40ac24:	cmp	x2, x1
  40ac28:	b.eq	40ac34 <undefine_default_variables@@Base+0x244>  // b.none
  40ac2c:	mov	x0, x2
  40ac30:	b	406b40 <strcmp@plt>
  40ac34:	ret
  40ac38:	stp	x29, x30, [sp, #-128]!
  40ac3c:	mov	x29, sp
  40ac40:	stp	x19, x20, [sp, #16]
  40ac44:	cbz	x0, 40ae10 <undefine_default_variables@@Base+0x420>
  40ac48:	stp	x21, x22, [sp, #32]
  40ac4c:	mov	x22, x0
  40ac50:	ldr	x0, [x0, #16]
  40ac54:	cbz	x0, 40ae3c <undefine_default_variables@@Base+0x44c>
  40ac58:	stp	x23, x24, [sp, #48]
  40ac5c:	mov	x23, x1
  40ac60:	cbz	x1, 40acb8 <undefine_default_variables@@Base+0x2c8>
  40ac64:	ldrb	w0, [x1]
  40ac68:	mov	w19, #0x1                   	// #1
  40ac6c:	cbz	w0, 40ae24 <undefine_default_variables@@Base+0x434>
  40ac70:	mov	x0, x1
  40ac74:	str	x1, [sp, #104]
  40ac78:	bl	406680 <strlen@plt>
  40ac7c:	mov	x2, x0
  40ac80:	add	x1, sp, #0x68
  40ac84:	add	x0, x22, #0x10
  40ac88:	str	x2, [sp, #112]
  40ac8c:	bl	411b08 <hash_find_item@@Base>
  40ac90:	cbz	x0, 40acb8 <undefine_default_variables@@Base+0x2c8>
  40ac94:	ldrsh	w0, [x0, #16]
  40ac98:	ldp	x21, x22, [sp, #32]
  40ac9c:	cmp	w0, #0x0
  40aca0:	cset	w19, eq  // eq = none
  40aca4:	mov	w0, w19
  40aca8:	ldp	x19, x20, [sp, #16]
  40acac:	ldp	x23, x24, [sp, #48]
  40acb0:	ldp	x29, x30, [sp], #128
  40acb4:	ret
  40acb8:	ldr	x19, [x22, #104]
  40acbc:	cbz	x19, 40ae08 <undefine_default_variables@@Base+0x418>
  40acc0:	stp	x25, x26, [sp, #64]
  40acc4:	add	x25, x22, #0x10
  40acc8:	add	x26, x23, #0x1
  40accc:	stp	x27, x28, [sp, #80]
  40acd0:	bl	406d70 <__errno_location@plt>
  40acd4:	mov	x24, x0
  40acd8:	mov	x0, x19
  40acdc:	str	wzr, [x24]
  40ace0:	bl	4069f0 <readdir@plt>
  40ace4:	mov	x19, x0
  40ace8:	cbz	x0, 40ad8c <undefine_default_variables@@Base+0x39c>
  40acec:	nop
  40acf0:	ldr	x0, [x0]
  40acf4:	cbz	x0, 40ad74 <undefine_default_variables@@Base+0x384>
  40acf8:	add	x27, x19, #0x13
  40acfc:	mov	x0, x27
  40ad00:	bl	406680 <strlen@plt>
  40ad04:	add	x1, sp, #0x68
  40ad08:	mov	x21, x0
  40ad0c:	mov	x0, x25
  40ad10:	stp	x27, x21, [sp, #104]
  40ad14:	bl	4119e0 <hash_find_slot@@Base>
  40ad18:	mov	x28, x0
  40ad1c:	mov	x0, #0x18                  	// #24
  40ad20:	bl	418a50 <xmalloc@@Base>
  40ad24:	mov	x20, x0
  40ad28:	mov	x1, x21
  40ad2c:	mov	x0, x27
  40ad30:	bl	4224d0 <strcache_add_len@@Base>
  40ad34:	str	x0, [x20]
  40ad38:	mov	x2, x28
  40ad3c:	mov	x1, x20
  40ad40:	mov	x0, x25
  40ad44:	ldrb	w3, [x19, #18]
  40ad48:	str	x21, [x20, #8]
  40ad4c:	strh	wzr, [x20, #16]
  40ad50:	strb	w3, [x20, #18]
  40ad54:	bl	411b38 <hash_insert_at@@Base>
  40ad58:	cbz	x23, 40ad74 <undefine_default_variables@@Base+0x384>
  40ad5c:	cmp	x23, x27
  40ad60:	b.eq	40adf0 <undefine_default_variables@@Base+0x400>  // b.none
  40ad64:	ldrb	w1, [x19, #19]
  40ad68:	ldrb	w0, [x23]
  40ad6c:	cmp	w0, w1
  40ad70:	b.eq	40addc <undefine_default_variables@@Base+0x3ec>  // b.none
  40ad74:	ldr	x19, [x22, #104]
  40ad78:	str	wzr, [x24]
  40ad7c:	mov	x0, x19
  40ad80:	bl	4069f0 <readdir@plt>
  40ad84:	mov	x19, x0
  40ad88:	cbnz	x0, 40acf0 <undefine_default_variables@@Base+0x300>
  40ad8c:	ldr	w19, [x24]
  40ad90:	cmp	w19, #0x4
  40ad94:	b.eq	40ad74 <undefine_default_variables@@Base+0x384>  // b.none
  40ad98:	cbnz	w19, 40ae44 <undefine_default_variables@@Base+0x454>
  40ad9c:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40ada0:	add	x1, x1, #0x1d8
  40ada4:	ldr	x0, [x22, #104]
  40ada8:	ldr	w2, [x1, #16]
  40adac:	sub	w2, w2, #0x1
  40adb0:	str	w2, [x1, #16]
  40adb4:	bl	406a30 <closedir@plt>
  40adb8:	ldp	x23, x24, [sp, #48]
  40adbc:	mov	w0, w19
  40adc0:	ldp	x25, x26, [sp, #64]
  40adc4:	ldp	x27, x28, [sp, #80]
  40adc8:	str	xzr, [x22, #104]
  40adcc:	ldp	x19, x20, [sp, #16]
  40add0:	ldp	x21, x22, [sp, #32]
  40add4:	ldp	x29, x30, [sp], #128
  40add8:	ret
  40addc:	cbz	w0, 40adf0 <undefine_default_variables@@Base+0x400>
  40ade0:	add	x0, x19, #0x14
  40ade4:	mov	x1, x26
  40ade8:	bl	406b40 <strcmp@plt>
  40adec:	cbnz	w0, 40ad74 <undefine_default_variables@@Base+0x384>
  40adf0:	mov	w19, #0x1                   	// #1
  40adf4:	ldp	x21, x22, [sp, #32]
  40adf8:	ldp	x23, x24, [sp, #48]
  40adfc:	ldp	x25, x26, [sp, #64]
  40ae00:	ldp	x27, x28, [sp, #80]
  40ae04:	b	40ae14 <undefine_default_variables@@Base+0x424>
  40ae08:	ldp	x21, x22, [sp, #32]
  40ae0c:	ldp	x23, x24, [sp, #48]
  40ae10:	mov	w19, #0x0                   	// #0
  40ae14:	mov	w0, w19
  40ae18:	ldp	x19, x20, [sp, #16]
  40ae1c:	ldp	x29, x30, [sp], #128
  40ae20:	ret
  40ae24:	mov	w0, w19
  40ae28:	ldp	x19, x20, [sp, #16]
  40ae2c:	ldp	x21, x22, [sp, #32]
  40ae30:	ldp	x23, x24, [sp, #48]
  40ae34:	ldp	x29, x30, [sp], #128
  40ae38:	ret
  40ae3c:	ldp	x21, x22, [sp, #32]
  40ae40:	b	40ae10 <undefine_default_variables@@Base+0x420>
  40ae44:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40ae48:	add	x0, x0, #0x8d8
  40ae4c:	bl	419828 <pfatal_with_name@@Base>
  40ae50:	stp	x29, x30, [sp, #-320]!
  40ae54:	mov	x29, sp
  40ae58:	stp	x21, x22, [sp, #32]
  40ae5c:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  40ae60:	add	x21, x21, #0x1d8
  40ae64:	add	x1, sp, #0x40
  40ae68:	stp	x19, x20, [sp, #16]
  40ae6c:	mov	x19, x0
  40ae70:	add	x0, x21, #0x18
  40ae74:	str	x19, [sp, #64]
  40ae78:	bl	4119e0 <hash_find_slot@@Base>
  40ae7c:	mov	x22, x0
  40ae80:	ldr	x20, [x0]
  40ae84:	cbz	x20, 40aeac <undefine_default_variables@@Base+0x4bc>
  40ae88:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40ae8c:	ldr	x0, [x0, #48]
  40ae90:	cmp	x0, x20
  40ae94:	b.eq	40aeac <undefine_default_variables@@Base+0x4bc>  // b.none
  40ae98:	mov	x0, x20
  40ae9c:	ldp	x19, x20, [sp, #16]
  40aea0:	ldp	x21, x22, [sp, #32]
  40aea4:	ldp	x29, x30, [sp], #320
  40aea8:	ret
  40aeac:	mov	x0, x19
  40aeb0:	str	x23, [sp, #48]
  40aeb4:	bl	406680 <strlen@plt>
  40aeb8:	mov	x23, x0
  40aebc:	mov	x0, #0x10                  	// #16
  40aec0:	bl	418a50 <xmalloc@@Base>
  40aec4:	mov	x20, x0
  40aec8:	mov	x1, x23
  40aecc:	mov	x0, x19
  40aed0:	bl	4224d0 <strcache_add_len@@Base>
  40aed4:	mov	x2, x22
  40aed8:	mov	x1, x20
  40aedc:	str	x0, [x20]
  40aee0:	add	x0, x21, #0x18
  40aee4:	bl	411b38 <hash_insert_at@@Base>
  40aee8:	b	40aefc <undefine_default_variables@@Base+0x50c>
  40aeec:	bl	406d70 <__errno_location@plt>
  40aef0:	ldr	w1, [x0]
  40aef4:	cmp	w1, #0x4
  40aef8:	b.ne	40af64 <undefine_default_variables@@Base+0x574>  // b.any
  40aefc:	add	x2, sp, #0xc0
  40af00:	mov	x1, x19
  40af04:	mov	w0, #0x0                   	// #0
  40af08:	bl	406d90 <__xstat@plt>
  40af0c:	cmn	w0, #0x1
  40af10:	b.eq	40aeec <undefine_default_variables@@Base+0x4fc>  // b.none
  40af14:	tbnz	w0, #31, 40af64 <undefine_default_variables@@Base+0x574>
  40af18:	ldp	x3, x2, [sp, #192]
  40af1c:	add	x1, sp, #0x50
  40af20:	add	x0, x21, #0x70
  40af24:	stp	x3, x2, [sp, #80]
  40af28:	bl	4119e0 <hash_find_slot@@Base>
  40af2c:	mov	x23, x0
  40af30:	ldr	x22, [x0]
  40af34:	cbz	x22, 40af80 <undefine_default_variables@@Base+0x590>
  40af38:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40af3c:	ldr	x0, [x0, #48]
  40af40:	cmp	x0, x22
  40af44:	b.eq	40af80 <undefine_default_variables@@Base+0x590>  // b.none
  40af48:	ldr	x23, [sp, #48]
  40af4c:	str	x22, [x20, #8]
  40af50:	mov	x0, x20
  40af54:	ldp	x19, x20, [sp, #16]
  40af58:	ldp	x21, x22, [sp, #32]
  40af5c:	ldp	x29, x30, [sp], #320
  40af60:	ret
  40af64:	ldr	x23, [sp, #48]
  40af68:	str	xzr, [x20, #8]
  40af6c:	mov	x0, x20
  40af70:	ldp	x19, x20, [sp, #16]
  40af74:	ldp	x21, x22, [sp, #32]
  40af78:	ldp	x29, x30, [sp], #320
  40af7c:	ret
  40af80:	mov	x0, #0x70                  	// #112
  40af84:	bl	418a50 <xmalloc@@Base>
  40af88:	ldp	x4, x3, [sp, #192]
  40af8c:	mov	x22, x0
  40af90:	mov	x2, x23
  40af94:	mov	x1, x22
  40af98:	add	x0, x21, #0x70
  40af9c:	stp	x4, x3, [x22]
  40afa0:	bl	411b38 <hash_insert_at@@Base>
  40afa4:	bl	406d70 <__errno_location@plt>
  40afa8:	mov	x23, x0
  40afac:	b	40afbc <undefine_default_variables@@Base+0x5cc>
  40afb0:	ldr	w0, [x23]
  40afb4:	cmp	w0, #0x4
  40afb8:	b.ne	40b018 <undefine_default_variables@@Base+0x628>  // b.any
  40afbc:	str	wzr, [x23]
  40afc0:	mov	x0, x19
  40afc4:	bl	406760 <opendir@plt>
  40afc8:	str	x0, [x22, #104]
  40afcc:	cbz	x0, 40afb0 <undefine_default_variables@@Base+0x5c0>
  40afd0:	add	x0, x22, #0x10
  40afd4:	adrp	x4, 40a000 <set_file_variables@@Base+0x698>
  40afd8:	adrp	x3, 40b000 <undefine_default_variables@@Base+0x610>
  40afdc:	add	x4, x4, #0xc08
  40afe0:	add	x3, x3, #0x88
  40afe4:	adrp	x2, 40a000 <set_file_variables@@Base+0x698>
  40afe8:	mov	x1, #0x6b                  	// #107
  40afec:	add	x2, x2, #0xa88
  40aff0:	bl	411928 <hash_init@@Base>
  40aff4:	ldr	w0, [x21, #16]
  40aff8:	add	w0, w0, #0x1
  40affc:	str	w0, [x21, #16]
  40b000:	cmp	w0, #0xa
  40b004:	b.ne	40af48 <undefine_default_variables@@Base+0x558>  // b.any
  40b008:	mov	x0, x22
  40b00c:	mov	x1, #0x0                   	// #0
  40b010:	bl	40ac38 <undefine_default_variables@@Base+0x248>
  40b014:	b	40af48 <undefine_default_variables@@Base+0x558>
  40b018:	str	xzr, [x22, #16]
  40b01c:	b	40af48 <undefine_default_variables@@Base+0x558>
  40b020:	stp	x29, x30, [sp, #-32]!
  40b024:	mov	x29, sp
  40b028:	bl	40ae50 <undefine_default_variables@@Base+0x460>
  40b02c:	ldr	x2, [x0, #8]
  40b030:	cbz	x2, 40b07c <undefine_default_variables@@Base+0x68c>
  40b034:	str	x19, [sp, #16]
  40b038:	mov	x19, x0
  40b03c:	ldr	x0, [x2, #16]
  40b040:	cbz	x0, 40b070 <undefine_default_variables@@Base+0x680>
  40b044:	mov	x1, #0x0                   	// #0
  40b048:	mov	x0, x2
  40b04c:	bl	40ac38 <undefine_default_variables@@Base+0x248>
  40b050:	mov	x0, #0x10                  	// #16
  40b054:	bl	418a50 <xmalloc@@Base>
  40b058:	ldr	x1, [x19, #8]
  40b05c:	ldr	x19, [sp, #16]
  40b060:	ldr	x2, [x1, #16]
  40b064:	stp	x1, x2, [x0]
  40b068:	ldp	x29, x30, [sp], #32
  40b06c:	ret
  40b070:	ldr	x19, [sp, #16]
  40b074:	ldp	x29, x30, [sp], #32
  40b078:	ret
  40b07c:	mov	x0, #0x0                   	// #0
  40b080:	b	40b068 <undefine_default_variables@@Base+0x678>
  40b084:	nop
  40b088:	mov	x0, #0x0                   	// #0
  40b08c:	ret

000000000040b090 <dir_file_exists_p@@Base>:
  40b090:	stp	x29, x30, [sp, #-32]!
  40b094:	mov	x29, sp
  40b098:	str	x19, [sp, #16]
  40b09c:	mov	x19, x1
  40b0a0:	bl	40ae50 <undefine_default_variables@@Base+0x460>
  40b0a4:	mov	x1, x19
  40b0a8:	ldr	x19, [sp, #16]
  40b0ac:	ldp	x29, x30, [sp], #32
  40b0b0:	ldr	x0, [x0, #8]
  40b0b4:	b	40ac38 <undefine_default_variables@@Base+0x248>

000000000040b0b8 <file_exists_p@@Base>:
  40b0b8:	stp	x29, x30, [sp, #-48]!
  40b0bc:	mov	x29, sp
  40b0c0:	stp	x19, x20, [sp, #16]
  40b0c4:	mov	x19, x0
  40b0c8:	str	x21, [sp, #32]
  40b0cc:	bl	408a60 <ar_name@@Base>
  40b0d0:	cbnz	w0, 40b150 <file_exists_p@@Base+0x98>
  40b0d4:	mov	x0, x19
  40b0d8:	mov	w1, #0x2f                  	// #47
  40b0dc:	bl	406a70 <strrchr@plt>
  40b0e0:	mov	x20, x0
  40b0e4:	cbz	x0, 40b174 <file_exists_p@@Base+0xbc>
  40b0e8:	cmp	x19, x0
  40b0ec:	b.eq	40b144 <file_exists_p@@Base+0x8c>  // b.none
  40b0f0:	sub	x21, x0, x19
  40b0f4:	mov	x1, x19
  40b0f8:	add	x0, x21, #0x10
  40b0fc:	mov	x2, x21
  40b100:	and	x0, x0, #0xfffffffffffffff0
  40b104:	sub	sp, sp, x0
  40b108:	mov	x3, sp
  40b10c:	mov	x0, x3
  40b110:	bl	406640 <memcpy@plt>
  40b114:	mov	x3, x0
  40b118:	strb	wzr, [x0, x21]
  40b11c:	mov	x0, x3
  40b120:	bl	40ae50 <undefine_default_variables@@Base+0x460>
  40b124:	ldr	x0, [x0, #8]
  40b128:	add	x1, x20, #0x1
  40b12c:	bl	40ac38 <undefine_default_variables@@Base+0x248>
  40b130:	mov	sp, x29
  40b134:	ldp	x19, x20, [sp, #16]
  40b138:	ldr	x21, [sp, #32]
  40b13c:	ldp	x29, x30, [sp], #48
  40b140:	ret
  40b144:	adrp	x3, 427000 <_IO_stdin_used@@Base+0xc20>
  40b148:	add	x3, x3, #0x8f0
  40b14c:	b	40b11c <file_exists_p@@Base+0x64>
  40b150:	mov	x0, x19
  40b154:	bl	408b68 <ar_member_date@@Base>
  40b158:	mov	sp, x29
  40b15c:	cmn	x0, #0x1
  40b160:	cset	w0, ne  // ne = any
  40b164:	ldp	x19, x20, [sp, #16]
  40b168:	ldr	x21, [sp, #32]
  40b16c:	ldp	x29, x30, [sp], #48
  40b170:	ret
  40b174:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40b178:	add	x0, x0, #0xb58
  40b17c:	bl	40ae50 <undefine_default_variables@@Base+0x460>
  40b180:	ldr	x0, [x0, #8]
  40b184:	mov	x1, x19
  40b188:	bl	40ac38 <undefine_default_variables@@Base+0x248>
  40b18c:	b	40b130 <file_exists_p@@Base+0x78>

000000000040b190 <file_impossible@@Base>:
  40b190:	stp	x29, x30, [sp, #-48]!
  40b194:	mov	w1, #0x2f                  	// #47
  40b198:	mov	x29, sp
  40b19c:	stp	x19, x20, [sp, #16]
  40b1a0:	mov	x19, x0
  40b1a4:	str	x21, [sp, #32]
  40b1a8:	bl	406a70 <strrchr@plt>
  40b1ac:	cbz	x0, 40b2a8 <file_impossible@@Base+0x118>
  40b1b0:	mov	x20, x0
  40b1b4:	cmp	x19, x0
  40b1b8:	b.eq	40b25c <file_impossible@@Base+0xcc>  // b.none
  40b1bc:	sub	x21, x0, x19
  40b1c0:	mov	x1, x19
  40b1c4:	add	x0, x21, #0x10
  40b1c8:	mov	x2, x21
  40b1cc:	and	x0, x0, #0xfffffffffffffff0
  40b1d0:	sub	sp, sp, x0
  40b1d4:	mov	x3, sp
  40b1d8:	mov	x0, x3
  40b1dc:	bl	406640 <memcpy@plt>
  40b1e0:	mov	x3, x0
  40b1e4:	strb	wzr, [x0, x21]
  40b1e8:	mov	x0, x3
  40b1ec:	add	x19, x20, #0x1
  40b1f0:	bl	40ae50 <undefine_default_variables@@Base+0x460>
  40b1f4:	mov	x21, x0
  40b1f8:	ldr	x0, [x21, #8]
  40b1fc:	cbz	x0, 40b268 <file_impossible@@Base+0xd8>
  40b200:	ldr	x1, [x0, #16]
  40b204:	cbz	x1, 40b280 <file_impossible@@Base+0xf0>
  40b208:	mov	x0, #0x18                  	// #24
  40b20c:	bl	418a50 <xmalloc@@Base>
  40b210:	mov	x20, x0
  40b214:	mov	x0, x19
  40b218:	bl	406680 <strlen@plt>
  40b21c:	mov	x1, x0
  40b220:	mov	x0, x19
  40b224:	str	x1, [x20, #8]
  40b228:	bl	4224d0 <strcache_add_len@@Base>
  40b22c:	ldr	x2, [x21, #8]
  40b230:	mov	w3, #0x1                   	// #1
  40b234:	str	x0, [x20]
  40b238:	mov	x1, x20
  40b23c:	strh	w3, [x20, #16]
  40b240:	add	x0, x2, #0x10
  40b244:	bl	411c80 <hash_insert@@Base>
  40b248:	mov	sp, x29
  40b24c:	ldp	x19, x20, [sp, #16]
  40b250:	ldr	x21, [sp, #32]
  40b254:	ldp	x29, x30, [sp], #48
  40b258:	ret
  40b25c:	adrp	x3, 427000 <_IO_stdin_used@@Base+0xc20>
  40b260:	add	x3, x3, #0x8f0
  40b264:	b	40b1e8 <file_impossible@@Base+0x58>
  40b268:	mov	x0, #0x70                  	// #112
  40b26c:	bl	418a78 <xcalloc@@Base>
  40b270:	ldr	x1, [x0, #16]
  40b274:	str	x0, [x21, #8]
  40b278:	cbnz	x1, 40b208 <file_impossible@@Base+0x78>
  40b27c:	nop
  40b280:	add	x0, x0, #0x10
  40b284:	adrp	x4, 40a000 <set_file_variables@@Base+0x698>
  40b288:	adrp	x3, 40b000 <undefine_default_variables@@Base+0x610>
  40b28c:	add	x4, x4, #0xc08
  40b290:	add	x3, x3, #0x88
  40b294:	adrp	x2, 40a000 <set_file_variables@@Base+0x698>
  40b298:	mov	x1, #0x6b                  	// #107
  40b29c:	add	x2, x2, #0xa88
  40b2a0:	bl	411928 <hash_init@@Base>
  40b2a4:	b	40b208 <file_impossible@@Base+0x78>
  40b2a8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40b2ac:	add	x0, x0, #0xb58
  40b2b0:	bl	40ae50 <undefine_default_variables@@Base+0x460>
  40b2b4:	mov	x21, x0
  40b2b8:	b	40b1f8 <file_impossible@@Base+0x68>
  40b2bc:	nop

000000000040b2c0 <file_impossible_p@@Base>:
  40b2c0:	stp	x29, x30, [sp, #-80]!
  40b2c4:	mov	w1, #0x2f                  	// #47
  40b2c8:	mov	x29, sp
  40b2cc:	stp	x19, x20, [sp, #16]
  40b2d0:	mov	x19, x0
  40b2d4:	str	x21, [sp, #32]
  40b2d8:	bl	406a70 <strrchr@plt>
  40b2dc:	cbz	x0, 40b394 <file_impossible_p@@Base+0xd4>
  40b2e0:	mov	x20, x0
  40b2e4:	cmp	x19, x0
  40b2e8:	b.eq	40b370 <file_impossible_p@@Base+0xb0>  // b.none
  40b2ec:	sub	x21, x0, x19
  40b2f0:	mov	x1, x19
  40b2f4:	add	x0, x21, #0x10
  40b2f8:	mov	x2, x21
  40b2fc:	and	x0, x0, #0xfffffffffffffff0
  40b300:	sub	sp, sp, x0
  40b304:	mov	x3, sp
  40b308:	mov	x0, x3
  40b30c:	bl	406640 <memcpy@plt>
  40b310:	mov	x3, x0
  40b314:	strb	wzr, [x0, x21]
  40b318:	mov	x0, x3
  40b31c:	add	x19, x20, #0x1
  40b320:	bl	40ae50 <undefine_default_variables@@Base+0x460>
  40b324:	ldr	x20, [x0, #8]
  40b328:	cbz	x20, 40b37c <file_impossible_p@@Base+0xbc>
  40b32c:	ldr	x0, [x20, #16]
  40b330:	cbz	x0, 40b37c <file_impossible_p@@Base+0xbc>
  40b334:	mov	x0, x19
  40b338:	str	x19, [x29, #56]
  40b33c:	bl	406680 <strlen@plt>
  40b340:	mov	x2, x0
  40b344:	add	x1, x29, #0x38
  40b348:	add	x0, x20, #0x10
  40b34c:	str	x2, [x29, #64]
  40b350:	bl	411b08 <hash_find_item@@Base>
  40b354:	cbz	x0, 40b37c <file_impossible_p@@Base+0xbc>
  40b358:	ldrsh	w0, [x0, #16]
  40b35c:	mov	sp, x29
  40b360:	ldp	x19, x20, [sp, #16]
  40b364:	ldr	x21, [sp, #32]
  40b368:	ldp	x29, x30, [sp], #80
  40b36c:	ret
  40b370:	adrp	x3, 427000 <_IO_stdin_used@@Base+0xc20>
  40b374:	add	x3, x3, #0x8f0
  40b378:	b	40b318 <file_impossible_p@@Base+0x58>
  40b37c:	mov	sp, x29
  40b380:	mov	w0, #0x0                   	// #0
  40b384:	ldp	x19, x20, [sp, #16]
  40b388:	ldr	x21, [sp, #32]
  40b38c:	ldp	x29, x30, [sp], #80
  40b390:	ret
  40b394:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40b398:	add	x0, x0, #0xb58
  40b39c:	bl	40ae50 <undefine_default_variables@@Base+0x460>
  40b3a0:	ldr	x20, [x0, #8]
  40b3a4:	b	40b328 <file_impossible_p@@Base+0x68>

000000000040b3a8 <dir_name@@Base>:
  40b3a8:	stp	x29, x30, [sp, #-16]!
  40b3ac:	mov	x29, sp
  40b3b0:	bl	40ae50 <undefine_default_variables@@Base+0x460>
  40b3b4:	ldp	x29, x30, [sp], #16
  40b3b8:	ldr	x0, [x0]
  40b3bc:	ret

000000000040b3c0 <print_dir_data_base@@Base>:
  40b3c0:	stp	x29, x30, [sp, #-128]!
  40b3c4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40b3c8:	add	x1, x1, #0x8f8
  40b3cc:	mov	w2, #0x5                   	// #5
  40b3d0:	mov	x29, sp
  40b3d4:	mov	x0, #0x0                   	// #0
  40b3d8:	stp	x19, x20, [sp, #16]
  40b3dc:	stp	x23, x24, [sp, #48]
  40b3e0:	stp	x25, x26, [sp, #64]
  40b3e4:	stp	x27, x28, [sp, #80]
  40b3e8:	bl	406cd0 <dcgettext@plt>
  40b3ec:	bl	406ae0 <puts@plt>
  40b3f0:	adrp	x27, 443000 <expanding_var@@Base+0x338>
  40b3f4:	add	x0, x27, #0x1d8
  40b3f8:	str	x0, [sp, #120]
  40b3fc:	ldr	x27, [x0, #24]
  40b400:	ldr	x20, [x0, #56]
  40b404:	add	x20, x27, x20, lsl #3
  40b408:	cmp	x27, x20
  40b40c:	b.cs	40b720 <print_dir_data_base@@Base+0x360>  // b.hs, b.nlast
  40b410:	adrp	x25, 427000 <_IO_stdin_used@@Base+0xc20>
  40b414:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40b418:	add	x25, x25, #0x988
  40b41c:	add	x0, x0, #0x960
  40b420:	adrp	x28, 427000 <_IO_stdin_used@@Base+0xc20>
  40b424:	mov	w23, #0x0                   	// #0
  40b428:	mov	w26, #0x0                   	// #0
  40b42c:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  40b430:	stp	x21, x22, [sp, #32]
  40b434:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  40b438:	str	x0, [sp, #112]
  40b43c:	add	x0, x28, #0x9a0
  40b440:	str	x0, [sp, #104]
  40b444:	nop
  40b448:	ldr	x28, [x27]
  40b44c:	cbz	x28, 40b574 <print_dir_data_base@@Base+0x1b4>
  40b450:	ldr	x2, [x22, #48]
  40b454:	cmp	x2, x28
  40b458:	b.eq	40b574 <print_dir_data_base@@Base+0x1b4>  // b.none
  40b45c:	ldr	x1, [x28, #8]
  40b460:	cbz	x1, 40b6a0 <print_dir_data_base@@Base+0x2e0>
  40b464:	ldr	x0, [x1, #16]
  40b468:	cbz	x0, 40b61c <print_dir_data_base@@Base+0x25c>
  40b46c:	ldr	x3, [x1, #48]
  40b470:	add	x3, x0, x3, lsl #3
  40b474:	cmp	x0, x3
  40b478:	b.cs	40b65c <print_dir_data_base@@Base+0x29c>  // b.hs, b.nlast
  40b47c:	mov	w19, #0x0                   	// #0
  40b480:	mov	w21, #0x0                   	// #0
  40b484:	b	40b498 <print_dir_data_base@@Base+0xd8>
  40b488:	add	w19, w19, #0x1
  40b48c:	add	x0, x0, #0x8
  40b490:	cmp	x3, x0
  40b494:	b.ls	40b4c0 <print_dir_data_base@@Base+0x100>  // b.plast
  40b498:	ldr	x1, [x0]
  40b49c:	cmp	x1, #0x0
  40b4a0:	ccmp	x2, x1, #0x4, ne  // ne = any
  40b4a4:	b.eq	40b48c <print_dir_data_base@@Base+0xcc>  // b.none
  40b4a8:	ldrsh	w1, [x1, #16]
  40b4ac:	cbnz	w1, 40b488 <print_dir_data_base@@Base+0xc8>
  40b4b0:	add	x0, x0, #0x8
  40b4b4:	add	w21, w21, #0x1
  40b4b8:	cmp	x3, x0
  40b4bc:	b.hi	40b498 <print_dir_data_base@@Base+0xd8>  // b.pmore
  40b4c0:	ldr	x1, [sp, #112]
  40b4c4:	mov	w2, #0x5                   	// #5
  40b4c8:	mov	x0, #0x0                   	// #0
  40b4cc:	add	w26, w26, w21
  40b4d0:	add	w23, w23, w19
  40b4d4:	bl	406cd0 <dcgettext@plt>
  40b4d8:	ldp	x1, x3, [x28]
  40b4dc:	ldp	x2, x3, [x3]
  40b4e0:	bl	406d60 <printf@plt>
  40b4e4:	cbz	w21, 40b67c <print_dir_data_base@@Base+0x2bc>
  40b4e8:	mov	w1, w21
  40b4ec:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  40b4f0:	add	x21, x21, #0x180
  40b4f4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  40b4f8:	add	x0, x0, #0x340
  40b4fc:	bl	406d60 <printf@plt>
  40b500:	mov	x1, x25
  40b504:	mov	w2, #0x5                   	// #5
  40b508:	mov	x0, #0x0                   	// #0
  40b50c:	bl	406cd0 <dcgettext@plt>
  40b510:	ldr	x1, [x21]
  40b514:	bl	406690 <fputs@plt>
  40b518:	cbnz	w19, 40b648 <print_dir_data_base@@Base+0x288>
  40b51c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40b520:	mov	w2, #0x5                   	// #5
  40b524:	add	x1, x1, #0x998
  40b528:	mov	x0, #0x0                   	// #0
  40b52c:	bl	406cd0 <dcgettext@plt>
  40b530:	ldr	x1, [x21]
  40b534:	bl	406690 <fputs@plt>
  40b538:	ldr	x1, [sp, #104]
  40b53c:	mov	w2, #0x5                   	// #5
  40b540:	mov	x0, #0x0                   	// #0
  40b544:	bl	406cd0 <dcgettext@plt>
  40b548:	ldr	x1, [x21]
  40b54c:	bl	406690 <fputs@plt>
  40b550:	ldr	x0, [x28, #8]
  40b554:	ldr	x0, [x0, #104]
  40b558:	cbz	x0, 40b6cc <print_dir_data_base@@Base+0x30c>
  40b55c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40b560:	add	x1, x1, #0x9b8
  40b564:	mov	w2, #0x5                   	// #5
  40b568:	mov	x0, #0x0                   	// #0
  40b56c:	bl	406cd0 <dcgettext@plt>
  40b570:	bl	406ae0 <puts@plt>
  40b574:	add	x27, x27, #0x8
  40b578:	cmp	x20, x27
  40b57c:	b.hi	40b448 <print_dir_data_base@@Base+0x88>  // b.pmore
  40b580:	ldr	x3, [x24, #384]
  40b584:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40b588:	mov	x2, #0x3                   	// #3
  40b58c:	add	x0, x0, #0x9c8
  40b590:	mov	x1, #0x1                   	// #1
  40b594:	bl	406be0 <fwrite@plt>
  40b598:	cbz	w26, 40b6fc <print_dir_data_base@@Base+0x33c>
  40b59c:	mov	w1, w26
  40b5a0:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  40b5a4:	add	x0, x0, #0x340
  40b5a8:	bl	406d60 <printf@plt>
  40b5ac:	ldp	x21, x22, [sp, #32]
  40b5b0:	mov	x1, x25
  40b5b4:	mov	w2, #0x5                   	// #5
  40b5b8:	mov	x0, #0x0                   	// #0
  40b5bc:	bl	406cd0 <dcgettext@plt>
  40b5c0:	ldr	x1, [x24, #384]
  40b5c4:	bl	406690 <fputs@plt>
  40b5c8:	cbnz	w23, 40b6e8 <print_dir_data_base@@Base+0x328>
  40b5cc:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40b5d0:	mov	w2, #0x5                   	// #5
  40b5d4:	add	x1, x1, #0x998
  40b5d8:	mov	x0, #0x0                   	// #0
  40b5dc:	bl	406cd0 <dcgettext@plt>
  40b5e0:	ldr	x1, [x24, #384]
  40b5e4:	bl	406690 <fputs@plt>
  40b5e8:	mov	w2, #0x5                   	// #5
  40b5ec:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40b5f0:	mov	x0, #0x0                   	// #0
  40b5f4:	add	x1, x1, #0x9d0
  40b5f8:	bl	406cd0 <dcgettext@plt>
  40b5fc:	ldr	x1, [sp, #120]
  40b600:	ldp	x19, x20, [sp, #16]
  40b604:	ldp	x23, x24, [sp, #48]
  40b608:	ldp	x25, x26, [sp, #64]
  40b60c:	ldr	x1, [x1, #72]
  40b610:	ldp	x27, x28, [sp, #80]
  40b614:	ldp	x29, x30, [sp], #128
  40b618:	b	406d60 <printf@plt>
  40b61c:	mov	w2, #0x5                   	// #5
  40b620:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40b624:	add	x1, x1, #0x928
  40b628:	bl	406cd0 <dcgettext@plt>
  40b62c:	ldp	x1, x3, [x28]
  40b630:	add	x27, x27, #0x8
  40b634:	ldp	x2, x3, [x3]
  40b638:	bl	406d60 <printf@plt>
  40b63c:	cmp	x20, x27
  40b640:	b.hi	40b448 <print_dir_data_base@@Base+0x88>  // b.pmore
  40b644:	b	40b580 <print_dir_data_base@@Base+0x1c0>
  40b648:	mov	w1, w19
  40b64c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  40b650:	add	x0, x0, #0x340
  40b654:	bl	406d60 <printf@plt>
  40b658:	b	40b538 <print_dir_data_base@@Base+0x178>
  40b65c:	ldr	x1, [sp, #112]
  40b660:	mov	w2, #0x5                   	// #5
  40b664:	mov	x0, #0x0                   	// #0
  40b668:	mov	w19, #0x0                   	// #0
  40b66c:	bl	406cd0 <dcgettext@plt>
  40b670:	ldp	x1, x3, [x28]
  40b674:	ldp	x2, x3, [x3]
  40b678:	bl	406d60 <printf@plt>
  40b67c:	mov	w2, #0x5                   	// #5
  40b680:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40b684:	mov	x0, #0x0                   	// #0
  40b688:	add	x1, x1, #0x980
  40b68c:	bl	406cd0 <dcgettext@plt>
  40b690:	add	x21, x24, #0x180
  40b694:	ldr	x1, [x24, #384]
  40b698:	bl	406690 <fputs@plt>
  40b69c:	b	40b500 <print_dir_data_base@@Base+0x140>
  40b6a0:	mov	w2, #0x5                   	// #5
  40b6a4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40b6a8:	mov	x0, #0x0                   	// #0
  40b6ac:	add	x1, x1, #0x908
  40b6b0:	bl	406cd0 <dcgettext@plt>
  40b6b4:	add	x27, x27, #0x8
  40b6b8:	ldr	x1, [x28]
  40b6bc:	bl	406d60 <printf@plt>
  40b6c0:	cmp	x20, x27
  40b6c4:	b.hi	40b448 <print_dir_data_base@@Base+0x88>  // b.pmore
  40b6c8:	b	40b580 <print_dir_data_base@@Base+0x1c0>
  40b6cc:	add	x27, x27, #0x8
  40b6d0:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40b6d4:	add	x0, x0, #0xb58
  40b6d8:	bl	406ae0 <puts@plt>
  40b6dc:	cmp	x20, x27
  40b6e0:	b.hi	40b448 <print_dir_data_base@@Base+0x88>  // b.pmore
  40b6e4:	b	40b580 <print_dir_data_base@@Base+0x1c0>
  40b6e8:	mov	w1, w23
  40b6ec:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  40b6f0:	add	x0, x0, #0x340
  40b6f4:	bl	406d60 <printf@plt>
  40b6f8:	b	40b5e8 <print_dir_data_base@@Base+0x228>
  40b6fc:	ldp	x21, x22, [sp, #32]
  40b700:	mov	w2, #0x5                   	// #5
  40b704:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40b708:	mov	x0, #0x0                   	// #0
  40b70c:	add	x1, x1, #0x980
  40b710:	bl	406cd0 <dcgettext@plt>
  40b714:	ldr	x1, [x24, #384]
  40b718:	bl	406690 <fputs@plt>
  40b71c:	b	40b5b0 <print_dir_data_base@@Base+0x1f0>
  40b720:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  40b724:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40b728:	mov	x2, #0x3                   	// #3
  40b72c:	add	x0, x0, #0x9c8
  40b730:	ldr	x3, [x24, #384]
  40b734:	mov	x1, #0x1                   	// #1
  40b738:	adrp	x25, 427000 <_IO_stdin_used@@Base+0xc20>
  40b73c:	mov	w23, #0x0                   	// #0
  40b740:	add	x25, x25, #0x988
  40b744:	bl	406be0 <fwrite@plt>
  40b748:	b	40b700 <print_dir_data_base@@Base+0x340>
  40b74c:	nop

000000000040b750 <dir_setup_glob@@Base>:
  40b750:	adrp	x1, 40b000 <undefine_default_variables@@Base+0x610>
  40b754:	adrp	x4, 40a000 <set_file_variables@@Base+0x698>
  40b758:	add	x3, x1, #0x20
  40b75c:	add	x4, x4, #0xac8
  40b760:	adrp	x5, 406000 <memcpy@plt-0x640>
  40b764:	adrp	x2, 426000 <rpl_fcntl@@Base+0xf0>
  40b768:	add	x5, x5, #0xb90
  40b76c:	add	x2, x2, #0x3c0
  40b770:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  40b774:	add	x1, x1, #0x3b0
  40b778:	str	xzr, [x0, #16]
  40b77c:	stp	x5, x4, [x0, #32]
  40b780:	stp	x3, x2, [x0, #48]
  40b784:	str	x1, [x0, #64]
  40b788:	ret
  40b78c:	nop

000000000040b790 <hash_init_directories@@Base>:
  40b790:	stp	x29, x30, [sp, #-32]!
  40b794:	mov	x1, #0xc7                  	// #199
  40b798:	adrp	x4, 40a000 <set_file_variables@@Base+0x698>
  40b79c:	mov	x29, sp
  40b7a0:	str	x19, [sp, #16]
  40b7a4:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  40b7a8:	add	x19, x19, #0x1d8
  40b7ac:	add	x4, x4, #0xa68
  40b7b0:	add	x0, x19, #0x18
  40b7b4:	adrp	x3, 40a000 <set_file_variables@@Base+0x698>
  40b7b8:	adrp	x2, 40a000 <set_file_variables@@Base+0x698>
  40b7bc:	add	x3, x3, #0xa60
  40b7c0:	add	x2, x2, #0xaa8
  40b7c4:	bl	411928 <hash_init@@Base>
  40b7c8:	add	x0, x19, #0x70
  40b7cc:	adrp	x4, 40a000 <set_file_variables@@Base+0x698>
  40b7d0:	ldr	x19, [sp, #16]
  40b7d4:	add	x4, x4, #0xbc8
  40b7d8:	ldp	x29, x30, [sp], #32
  40b7dc:	adrp	x3, 40a000 <set_file_variables@@Base+0x698>
  40b7e0:	adrp	x2, 40a000 <set_file_variables@@Base+0x698>
  40b7e4:	add	x3, x3, #0xa50
  40b7e8:	add	x2, x2, #0xa40
  40b7ec:	mov	x1, #0xc7                  	// #199
  40b7f0:	b	411928 <hash_init@@Base>
  40b7f4:	nop
  40b7f8:	stp	x29, x30, [sp, #-32]!
  40b7fc:	mov	x29, sp
  40b800:	str	x19, [sp, #16]
  40b804:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  40b808:	ldr	x0, [x19, #1904]
  40b80c:	cbz	x0, 40b81c <hash_init_directories@@Base+0x8c>
  40b810:	ldr	x19, [sp, #16]
  40b814:	ldp	x29, x30, [sp], #32
  40b818:	ret
  40b81c:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40b820:	mov	x0, #0xc8                  	// #200
  40b824:	str	x0, [x1, #672]
  40b828:	bl	418a50 <xmalloc@@Base>
  40b82c:	str	x0, [x19, #1904]
  40b830:	strb	wzr, [x0]
  40b834:	ldr	x0, [x19, #1904]
  40b838:	ldr	x19, [sp, #16]
  40b83c:	ldp	x29, x30, [sp], #32
  40b840:	ret
  40b844:	nop

000000000040b848 <variable_buffer_output@@Base>:
  40b848:	stp	x29, x30, [sp, #-48]!
  40b84c:	mov	x3, x0
  40b850:	adrp	x4, 443000 <expanding_var@@Base+0x338>
  40b854:	mov	x29, sp
  40b858:	stp	x21, x22, [sp, #32]
  40b85c:	adrp	x22, 446000 <commands_started@@Base+0x1c8>
  40b860:	ldr	x0, [x22, #1904]
  40b864:	stp	x19, x20, [sp, #16]
  40b868:	mov	x19, x2
  40b86c:	sub	x21, x3, x0
  40b870:	mov	x20, x1
  40b874:	ldr	x2, [x4, #672]
  40b878:	add	x1, x21, x19
  40b87c:	add	x5, x1, #0x5
  40b880:	cmp	x5, x2
  40b884:	b.hi	40b8ac <variable_buffer_output@@Base+0x64>  // b.pmore
  40b888:	mov	x1, x20
  40b88c:	mov	x2, x19
  40b890:	mov	x0, x3
  40b894:	bl	406640 <memcpy@plt>
  40b898:	add	x0, x0, x19
  40b89c:	ldp	x19, x20, [sp, #16]
  40b8a0:	ldp	x21, x22, [sp, #32]
  40b8a4:	ldp	x29, x30, [sp], #48
  40b8a8:	ret
  40b8ac:	lsl	x2, x2, #1
  40b8b0:	add	x1, x1, #0x64
  40b8b4:	cmp	x2, x1
  40b8b8:	csel	x1, x2, x1, cs  // cs = hs, nlast
  40b8bc:	str	x1, [x4, #672]
  40b8c0:	bl	418aa0 <xrealloc@@Base>
  40b8c4:	add	x3, x0, x21
  40b8c8:	str	x0, [x22, #1904]
  40b8cc:	b	40b888 <variable_buffer_output@@Base+0x40>

000000000040b8d0 <expand_argument@@Base>:
  40b8d0:	stp	x29, x30, [sp, #-80]!
  40b8d4:	mov	x2, x1
  40b8d8:	cmp	x0, x1
  40b8dc:	mov	x29, sp
  40b8e0:	stp	x19, x20, [sp, #16]
  40b8e4:	stp	x21, x22, [sp, #32]
  40b8e8:	str	x23, [sp, #48]
  40b8ec:	b.eq	40b9e8 <expand_argument@@Base+0x118>  // b.none
  40b8f0:	mov	x1, x0
  40b8f4:	cbz	x2, 40b988 <expand_argument@@Base+0xb8>
  40b8f8:	ldrb	w0, [x2]
  40b8fc:	cbz	w0, 40b988 <expand_argument@@Base+0xb8>
  40b900:	sub	x19, x2, x1
  40b904:	cmp	x19, #0x3e7
  40b908:	add	x0, x19, #0x1
  40b90c:	b.gt	40b9d0 <expand_argument@@Base+0x100>
  40b910:	add	x0, x19, #0x10
  40b914:	mov	x22, #0x0                   	// #0
  40b918:	and	x0, x0, #0xfffffffffffffff0
  40b91c:	sub	sp, sp, x0
  40b920:	mov	x3, sp
  40b924:	mov	x2, x19
  40b928:	adrp	x20, 446000 <commands_started@@Base+0x1c8>
  40b92c:	mov	x0, x3
  40b930:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  40b934:	bl	406640 <memcpy@plt>
  40b938:	mov	x1, x0
  40b93c:	strb	wzr, [x0, x19]
  40b940:	mov	x2, #0xffffffffffffffff    	// #-1
  40b944:	ldr	x19, [x21, #672]
  40b948:	mov	x0, #0x0                   	// #0
  40b94c:	ldr	x23, [x20, #1904]
  40b950:	str	xzr, [x20, #1904]
  40b954:	bl	40ba00 <variable_expand_string@@Base>
  40b958:	str	x19, [x21, #672]
  40b95c:	str	x23, [x20, #1904]
  40b960:	mov	x19, x0
  40b964:	mov	x0, x22
  40b968:	bl	406b90 <free@plt>
  40b96c:	mov	sp, x29
  40b970:	mov	x0, x19
  40b974:	ldp	x19, x20, [sp, #16]
  40b978:	ldp	x21, x22, [sp, #32]
  40b97c:	ldr	x23, [sp, #48]
  40b980:	ldp	x29, x30, [sp], #80
  40b984:	ret
  40b988:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  40b98c:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  40b990:	mov	x2, #0xffffffffffffffff    	// #-1
  40b994:	mov	x0, #0x0                   	// #0
  40b998:	ldr	x22, [x19, #1904]
  40b99c:	str	xzr, [x19, #1904]
  40b9a0:	ldr	x21, [x20, #672]
  40b9a4:	bl	40ba00 <variable_expand_string@@Base>
  40b9a8:	str	x22, [x19, #1904]
  40b9ac:	mov	x19, x0
  40b9b0:	str	x21, [x20, #672]
  40b9b4:	mov	x0, x19
  40b9b8:	mov	sp, x29
  40b9bc:	ldp	x19, x20, [sp, #16]
  40b9c0:	ldp	x21, x22, [sp, #32]
  40b9c4:	ldr	x23, [sp, #48]
  40b9c8:	ldp	x29, x30, [sp], #80
  40b9cc:	ret
  40b9d0:	str	x1, [x29, #72]
  40b9d4:	bl	418a50 <xmalloc@@Base>
  40b9d8:	mov	x3, x0
  40b9dc:	mov	x22, x0
  40b9e0:	ldr	x1, [x29, #72]
  40b9e4:	b	40b924 <expand_argument@@Base+0x54>
  40b9e8:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40b9ec:	add	x0, x0, #0x350
  40b9f0:	bl	418c60 <xstrdup@@Base>
  40b9f4:	mov	x19, x0
  40b9f8:	b	40b96c <expand_argument@@Base+0x9c>
  40b9fc:	nop

000000000040ba00 <variable_expand_string@@Base>:
  40ba00:	stp	x29, x30, [sp, #-160]!
  40ba04:	mov	x29, sp
  40ba08:	stp	x19, x20, [sp, #16]
  40ba0c:	mov	x20, x1
  40ba10:	mov	x19, x2
  40ba14:	stp	x21, x22, [sp, #32]
  40ba18:	mov	x21, x0
  40ba1c:	stp	x23, x24, [sp, #48]
  40ba20:	stp	x25, x26, [sp, #64]
  40ba24:	stp	x27, x28, [sp, #80]
  40ba28:	cbz	x0, 40bfbc <variable_expand_string@@Base+0x5bc>
  40ba2c:	adrp	x26, 446000 <commands_started@@Base+0x1c8>
  40ba30:	ldr	x24, [x26, #1904]
  40ba34:	sub	x0, x21, x24
  40ba38:	str	x0, [x29, #128]
  40ba3c:	cbz	x19, 40bf34 <variable_expand_string@@Base+0x534>
  40ba40:	cmn	x19, #0x1
  40ba44:	b.eq	40bed4 <variable_expand_string@@Base+0x4d4>  // b.none
  40ba48:	mov	x1, x19
  40ba4c:	mov	x0, x20
  40ba50:	bl	418c80 <xstrndup@@Base>
  40ba54:	str	x0, [x29, #136]
  40ba58:	ldr	x19, [x29, #136]
  40ba5c:	adrp	x25, 446000 <commands_started@@Base+0x1c8>
  40ba60:	add	x0, x25, #0x800
  40ba64:	mov	w1, #0x24                  	// #36
  40ba68:	str	x0, [x29, #120]
  40ba6c:	mov	x0, x19
  40ba70:	bl	406bb0 <strchr@plt>
  40ba74:	mov	x20, x0
  40ba78:	cbz	x0, 40bae8 <variable_expand_string@@Base+0xe8>
  40ba7c:	nop
  40ba80:	mov	x0, x21
  40ba84:	sub	x2, x20, x19
  40ba88:	mov	x1, x19
  40ba8c:	bl	40b848 <variable_buffer_output@@Base>
  40ba90:	ldrb	w22, [x20, #1]
  40ba94:	mov	x21, x0
  40ba98:	add	x19, x20, #0x1
  40ba9c:	cmp	w22, #0x28
  40baa0:	b.eq	40bbf8 <variable_expand_string@@Base+0x1f8>  // b.none
  40baa4:	b.hi	40bb4c <variable_expand_string@@Base+0x14c>  // b.pmore
  40baa8:	cbz	w22, 40bab4 <variable_expand_string@@Base+0xb4>
  40baac:	cmp	w22, #0x24
  40bab0:	b.ne	40bb54 <variable_expand_string@@Base+0x154>  // b.any
  40bab4:	mov	x0, x21
  40bab8:	mov	x1, x20
  40babc:	mov	x2, #0x1                   	// #1
  40bac0:	bl	40b848 <variable_buffer_output@@Base>
  40bac4:	ldrb	w1, [x20, #1]
  40bac8:	mov	x21, x0
  40bacc:	cbz	w1, 40bb04 <variable_expand_string@@Base+0x104>
  40bad0:	add	x19, x19, #0x1
  40bad4:	mov	w1, #0x24                  	// #36
  40bad8:	mov	x0, x19
  40badc:	bl	406bb0 <strchr@plt>
  40bae0:	mov	x20, x0
  40bae4:	cbnz	x0, 40ba80 <variable_expand_string@@Base+0x80>
  40bae8:	mov	x0, x19
  40baec:	bl	406680 <strlen@plt>
  40baf0:	mov	x1, x19
  40baf4:	add	x2, x0, #0x1
  40baf8:	mov	x0, x21
  40bafc:	bl	40b848 <variable_buffer_output@@Base>
  40bb00:	mov	x21, x0
  40bb04:	ldr	x0, [x29, #136]
  40bb08:	bl	406b90 <free@plt>
  40bb0c:	mov	x0, x21
  40bb10:	mov	x2, #0x1                   	// #1
  40bb14:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40bb18:	add	x1, x1, #0x350
  40bb1c:	bl	40b848 <variable_buffer_output@@Base>
  40bb20:	ldr	x0, [x26, #1904]
  40bb24:	ldr	x1, [x29, #128]
  40bb28:	mov	sp, x29
  40bb2c:	add	x0, x0, x1
  40bb30:	ldp	x19, x20, [sp, #16]
  40bb34:	ldp	x21, x22, [sp, #32]
  40bb38:	ldp	x23, x24, [sp, #48]
  40bb3c:	ldp	x25, x26, [sp, #64]
  40bb40:	ldp	x27, x28, [sp, #80]
  40bb44:	ldp	x29, x30, [sp], #160
  40bb48:	ret
  40bb4c:	cmp	w22, #0x7b
  40bb50:	b.eq	40bbcc <variable_expand_string@@Base+0x1cc>  // b.none
  40bb54:	ldrb	w1, [x20]
  40bb58:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40bb5c:	add	x0, x0, #0x448
  40bb60:	ldrh	w0, [x0, x1, lsl #1]
  40bb64:	tst	w0, #0x6
  40bb68:	b.ne	40bad0 <variable_expand_string@@Base+0xd0>  // b.any
  40bb6c:	mov	x0, x19
  40bb70:	mov	x1, #0x1                   	// #1
  40bb74:	bl	4231f0 <lookup_variable@@Base>
  40bb78:	mov	x22, x0
  40bb7c:	cbz	x0, 40be8c <variable_expand_string@@Base+0x48c>
  40bb80:	ldr	x27, [x0, #8]
  40bb84:	ldrb	w2, [x0, #44]
  40bb88:	ldrb	w1, [x27]
  40bb8c:	and	w3, w2, #0x2
  40bb90:	orr	w1, w1, w3
  40bb94:	cbz	w1, 40bbc0 <variable_expand_string@@Base+0x1c0>
  40bb98:	tbnz	w2, #0, 40bee4 <variable_expand_string@@Base+0x4e4>
  40bb9c:	mov	x0, x27
  40bba0:	bl	406680 <strlen@plt>
  40bba4:	mov	x1, x27
  40bba8:	mov	x2, x0
  40bbac:	mov	x0, x21
  40bbb0:	bl	40b848 <variable_buffer_output@@Base>
  40bbb4:	ldrb	w1, [x22, #44]
  40bbb8:	mov	x21, x0
  40bbbc:	tbnz	w1, #0, 40be7c <variable_expand_string@@Base+0x47c>
  40bbc0:	ldrb	w1, [x20, #1]
  40bbc4:	cbnz	w1, 40bad0 <variable_expand_string@@Base+0xd0>
  40bbc8:	b	40bb04 <variable_expand_string@@Base+0x104>
  40bbcc:	add	x1, x29, #0x90
  40bbd0:	add	x0, x29, #0x98
  40bbd4:	mov	w23, #0x7d                  	// #125
  40bbd8:	stp	x19, x21, [x29, #144]
  40bbdc:	bl	411388 <handle_function@@Base>
  40bbe0:	mov	w27, w0
  40bbe4:	cbz	w0, 40bc14 <variable_expand_string@@Base+0x214>
  40bbe8:	ldp	x19, x21, [x29, #144]
  40bbec:	ldrb	w1, [x19]
  40bbf0:	cbnz	w1, 40bad0 <variable_expand_string@@Base+0xd0>
  40bbf4:	b	40bb04 <variable_expand_string@@Base+0x104>
  40bbf8:	add	x1, x29, #0x90
  40bbfc:	add	x0, x29, #0x98
  40bc00:	mov	w23, #0x29                  	// #41
  40bc04:	stp	x19, x21, [x29, #144]
  40bc08:	bl	411388 <handle_function@@Base>
  40bc0c:	mov	w27, w0
  40bc10:	cbnz	w0, 40bbe8 <variable_expand_string@@Base+0x1e8>
  40bc14:	add	x24, x20, #0x2
  40bc18:	mov	w1, w23
  40bc1c:	mov	x0, x24
  40bc20:	bl	406bb0 <strchr@plt>
  40bc24:	mov	x25, x0
  40bc28:	cbz	x0, 40bfec <variable_expand_string@@Base+0x5ec>
  40bc2c:	mov	x1, x0
  40bc30:	mov	w2, #0x24                  	// #36
  40bc34:	mov	x0, x24
  40bc38:	mov	x19, x25
  40bc3c:	bl	418ca0 <lindex@@Base>
  40bc40:	mov	x28, x0
  40bc44:	cbnz	x0, 40be14 <variable_expand_string@@Base+0x414>
  40bc48:	mov	x1, x25
  40bc4c:	mov	x0, x24
  40bc50:	mov	w2, #0x3a                  	// #58
  40bc54:	bl	418ca0 <lindex@@Base>
  40bc58:	mov	x20, x0
  40bc5c:	cbz	x0, 40bda4 <variable_expand_string@@Base+0x3a4>
  40bc60:	add	x27, x0, #0x1
  40bc64:	mov	x1, x25
  40bc68:	mov	x0, x27
  40bc6c:	mov	w2, #0x3d                  	// #61
  40bc70:	bl	418ca0 <lindex@@Base>
  40bc74:	mov	x22, x0
  40bc78:	cbz	x0, 40bda4 <variable_expand_string@@Base+0x3a4>
  40bc7c:	sub	x20, x20, x24
  40bc80:	mov	x0, x24
  40bc84:	mov	x1, x20
  40bc88:	bl	4231f0 <lookup_variable@@Base>
  40bc8c:	mov	x23, x0
  40bc90:	cbz	x0, 40bf7c <variable_expand_string@@Base+0x57c>
  40bc94:	ldr	x24, [x0, #8]
  40bc98:	ldrb	w1, [x24]
  40bc9c:	cbz	w1, 40bd90 <variable_expand_string@@Base+0x390>
  40bca0:	ldrb	w1, [x23, #44]
  40bca4:	tbnz	w1, #0, 40bfc8 <variable_expand_string@@Base+0x5c8>
  40bca8:	sub	x2, x22, x27
  40bcac:	add	x22, x22, #0x1
  40bcb0:	add	x0, x2, #0x11
  40bcb4:	sub	x4, x25, x22
  40bcb8:	and	x0, x0, #0xfffffffffffffff0
  40bcbc:	mov	w8, #0x25                  	// #37
  40bcc0:	sub	sp, sp, x0
  40bcc4:	mov	x1, x27
  40bcc8:	mov	x25, sp
  40bccc:	str	x4, [x29, #96]
  40bcd0:	mov	x20, x25
  40bcd4:	str	w8, [x29, #108]
  40bcd8:	str	x2, [x29, #112]
  40bcdc:	strb	w8, [x20], #1
  40bce0:	mov	x0, x20
  40bce4:	bl	406640 <memcpy@plt>
  40bce8:	ldr	x4, [x29, #96]
  40bcec:	mov	x1, x22
  40bcf0:	ldr	x2, [x29, #112]
  40bcf4:	add	x0, x4, #0x11
  40bcf8:	and	x0, x0, #0xfffffffffffffff0
  40bcfc:	ldr	w8, [x29, #108]
  40bd00:	sub	sp, sp, x0
  40bd04:	str	x4, [x29, #112]
  40bd08:	mov	x27, sp
  40bd0c:	strb	wzr, [x20, x2]
  40bd10:	mov	x22, x27
  40bd14:	mov	x2, x4
  40bd18:	strb	w8, [x22], #1
  40bd1c:	mov	x0, x22
  40bd20:	bl	406640 <memcpy@plt>
  40bd24:	ldr	x4, [x29, #112]
  40bd28:	mov	x0, x20
  40bd2c:	strb	wzr, [x22, x4]
  40bd30:	bl	41b5a0 <find_percent@@Base>
  40bd34:	cbz	x0, 40bd60 <variable_expand_string@@Base+0x360>
  40bd38:	add	x1, x0, #0x1
  40bd3c:	mov	x0, x22
  40bd40:	str	x1, [x29, #112]
  40bd44:	bl	41b5a0 <find_percent@@Base>
  40bd48:	ldr	x1, [x29, #112]
  40bd4c:	cbz	x0, 40bfd8 <variable_expand_string@@Base+0x5d8>
  40bd50:	mov	x27, x22
  40bd54:	mov	x25, x20
  40bd58:	add	x22, x0, #0x1
  40bd5c:	mov	x20, x1
  40bd60:	mov	x0, x21
  40bd64:	mov	x1, x24
  40bd68:	mov	x5, x22
  40bd6c:	mov	x4, x20
  40bd70:	mov	x3, x27
  40bd74:	mov	x2, x25
  40bd78:	bl	4102d8 <patsubst_expand_pat@@Base>
  40bd7c:	mov	x21, x0
  40bd80:	ldrb	w1, [x23, #44]
  40bd84:	tbz	w1, #0, 40bd90 <variable_expand_string@@Base+0x390>
  40bd88:	mov	x0, x24
  40bd8c:	bl	406b90 <free@plt>
  40bd90:	mov	x0, x28
  40bd94:	bl	406b90 <free@plt>
  40bd98:	ldrb	w1, [x19]
  40bd9c:	cbnz	w1, 40bad0 <variable_expand_string@@Base+0xd0>
  40bda0:	b	40bb04 <variable_expand_string@@Base+0x104>
  40bda4:	sub	x25, x25, x24
  40bda8:	mov	x0, x24
  40bdac:	mov	x1, x25
  40bdb0:	bl	4231f0 <lookup_variable@@Base>
  40bdb4:	mov	x20, x0
  40bdb8:	cbz	x0, 40bef4 <variable_expand_string@@Base+0x4f4>
  40bdbc:	ldr	x22, [x0, #8]
  40bdc0:	ldrb	w2, [x0, #44]
  40bdc4:	ldrb	w1, [x22]
  40bdc8:	and	w3, w2, #0x2
  40bdcc:	orr	w1, w1, w3
  40bdd0:	cbz	w1, 40bd90 <variable_expand_string@@Base+0x390>
  40bdd4:	tbnz	w2, #0, 40bf6c <variable_expand_string@@Base+0x56c>
  40bdd8:	mov	x0, x22
  40bddc:	bl	406680 <strlen@plt>
  40bde0:	mov	x1, x22
  40bde4:	mov	x2, x0
  40bde8:	mov	x0, x21
  40bdec:	bl	40b848 <variable_buffer_output@@Base>
  40bdf0:	ldrb	w1, [x20, #44]
  40bdf4:	mov	x21, x0
  40bdf8:	tbz	w1, #0, 40bd90 <variable_expand_string@@Base+0x390>
  40bdfc:	mov	x0, x22
  40be00:	bl	406b90 <free@plt>
  40be04:	mov	x0, x28
  40be08:	bl	406b90 <free@plt>
  40be0c:	ldrb	w1, [x19]
  40be10:	b	40bd9c <variable_expand_string@@Base+0x39c>
  40be14:	ldrb	w2, [x20, #2]
  40be18:	mov	x19, x24
  40be1c:	cbnz	w2, 40be34 <variable_expand_string@@Base+0x434>
  40be20:	b	40be48 <variable_expand_string@@Base+0x448>
  40be24:	cmp	w23, w2
  40be28:	b.eq	40be50 <variable_expand_string@@Base+0x450>  // b.none
  40be2c:	ldrb	w2, [x19, #1]!
  40be30:	cbz	w2, 40be48 <variable_expand_string@@Base+0x448>
  40be34:	cmp	w22, w2
  40be38:	b.ne	40be24 <variable_expand_string@@Base+0x424>  // b.any
  40be3c:	ldrb	w2, [x19, #1]!
  40be40:	add	w27, w27, #0x1
  40be44:	cbnz	w2, 40be34 <variable_expand_string@@Base+0x434>
  40be48:	mov	x28, #0x0                   	// #0
  40be4c:	b	40bc48 <variable_expand_string@@Base+0x248>
  40be50:	sub	w27, w27, #0x1
  40be54:	cmn	w27, #0x1
  40be58:	b.ne	40be2c <variable_expand_string@@Base+0x42c>  // b.any
  40be5c:	mov	x1, x19
  40be60:	mov	x0, x24
  40be64:	bl	40b8d0 <expand_argument@@Base>
  40be68:	mov	x24, x0
  40be6c:	mov	x28, x24
  40be70:	bl	406680 <strlen@plt>
  40be74:	add	x25, x24, x0
  40be78:	b	40bc48 <variable_expand_string@@Base+0x248>
  40be7c:	mov	x0, x27
  40be80:	bl	406b90 <free@plt>
  40be84:	ldrb	w1, [x20, #1]
  40be88:	b	40bbc4 <variable_expand_string@@Base+0x1c4>
  40be8c:	ldr	x1, [x29, #120]
  40be90:	ldr	w1, [x1]
  40be94:	cbz	w1, 40bbc0 <variable_expand_string@@Base+0x1c0>
  40be98:	adrp	x3, 445000 <output_context@@Base+0x1250>
  40be9c:	mov	w2, #0x5                   	// #5
  40bea0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40bea4:	add	x1, x1, #0xa18
  40bea8:	ldr	x22, [x3, #3552]
  40beac:	bl	406cd0 <dcgettext@plt>
  40beb0:	mov	x1, #0x1                   	// #1
  40beb4:	mov	x2, x0
  40beb8:	mov	x4, x19
  40bebc:	mov	x0, x22
  40bec0:	mov	w3, #0x1                   	// #1
  40bec4:	bl	419dc8 <error@@Base>
  40bec8:	ldrb	w1, [x20, #1]
  40becc:	cbnz	w1, 40bad0 <variable_expand_string@@Base+0xd0>
  40bed0:	b	40bb04 <variable_expand_string@@Base+0x104>
  40bed4:	mov	x0, x20
  40bed8:	bl	418c60 <xstrdup@@Base>
  40bedc:	str	x0, [x29, #136]
  40bee0:	b	40ba58 <variable_expand_string@@Base+0x58>
  40bee4:	mov	x1, #0x0                   	// #0
  40bee8:	bl	40c1c8 <recursively_expand_for_file@@Base>
  40beec:	mov	x27, x0
  40bef0:	b	40bb9c <variable_expand_string@@Base+0x19c>
  40bef4:	ldr	x1, [x29, #120]
  40bef8:	ldr	w1, [x1]
  40befc:	cbz	w1, 40bd90 <variable_expand_string@@Base+0x390>
  40bf00:	adrp	x3, 445000 <output_context@@Base+0x1250>
  40bf04:	mov	w2, #0x5                   	// #5
  40bf08:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40bf0c:	add	x1, x1, #0xa18
  40bf10:	ldr	x20, [x3, #3552]
  40bf14:	bl	406cd0 <dcgettext@plt>
  40bf18:	mov	x4, x24
  40bf1c:	mov	x2, x0
  40bf20:	mov	w3, w25
  40bf24:	mov	x1, x25
  40bf28:	mov	x0, x20
  40bf2c:	bl	419dc8 <error@@Base>
  40bf30:	b	40bd90 <variable_expand_string@@Base+0x390>
  40bf34:	mov	x0, x21
  40bf38:	mov	x2, #0x1                   	// #1
  40bf3c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40bf40:	add	x1, x1, #0x350
  40bf44:	bl	40b848 <variable_buffer_output@@Base>
  40bf48:	ldr	x0, [x26, #1904]
  40bf4c:	mov	sp, x29
  40bf50:	ldp	x19, x20, [sp, #16]
  40bf54:	ldp	x21, x22, [sp, #32]
  40bf58:	ldp	x23, x24, [sp, #48]
  40bf5c:	ldp	x25, x26, [sp, #64]
  40bf60:	ldp	x27, x28, [sp, #80]
  40bf64:	ldp	x29, x30, [sp], #160
  40bf68:	ret
  40bf6c:	mov	x1, #0x0                   	// #0
  40bf70:	bl	40c1c8 <recursively_expand_for_file@@Base>
  40bf74:	mov	x22, x0
  40bf78:	b	40bdd8 <variable_expand_string@@Base+0x3d8>
  40bf7c:	ldr	x1, [x29, #120]
  40bf80:	ldr	w1, [x1]
  40bf84:	cbz	w1, 40bd90 <variable_expand_string@@Base+0x390>
  40bf88:	adrp	x3, 445000 <output_context@@Base+0x1250>
  40bf8c:	mov	w2, #0x5                   	// #5
  40bf90:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40bf94:	add	x1, x1, #0xa18
  40bf98:	ldr	x22, [x3, #3552]
  40bf9c:	bl	406cd0 <dcgettext@plt>
  40bfa0:	mov	x4, x24
  40bfa4:	mov	x2, x0
  40bfa8:	mov	w3, w20
  40bfac:	mov	x1, x20
  40bfb0:	mov	x0, x22
  40bfb4:	bl	419dc8 <error@@Base>
  40bfb8:	b	40bd90 <variable_expand_string@@Base+0x390>
  40bfbc:	bl	40b7f8 <hash_init_directories@@Base+0x68>
  40bfc0:	mov	x21, x0
  40bfc4:	b	40ba2c <variable_expand_string@@Base+0x2c>
  40bfc8:	mov	x1, #0x0                   	// #0
  40bfcc:	bl	40c1c8 <recursively_expand_for_file@@Base>
  40bfd0:	mov	x24, x0
  40bfd4:	b	40bca8 <variable_expand_string@@Base+0x2a8>
  40bfd8:	mov	x25, x20
  40bfdc:	mov	x27, x22
  40bfe0:	mov	x20, x1
  40bfe4:	mov	x22, #0x0                   	// #0
  40bfe8:	b	40bd60 <variable_expand_string@@Base+0x360>
  40bfec:	adrp	x3, 442000 <memcpy@GLIBC_2.17>
  40bff0:	mov	w2, #0x5                   	// #5
  40bff4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40bff8:	add	x1, x1, #0x9f8
  40bffc:	ldr	x3, [x3, #3272]
  40c000:	ldr	x19, [x3]
  40c004:	bl	406cd0 <dcgettext@plt>
  40c008:	mov	x1, #0x0                   	// #0
  40c00c:	mov	x2, x0
  40c010:	mov	x0, x19
  40c014:	bl	41a060 <fatal@@Base>
  40c018:	cbz	x2, 40c1a8 <variable_expand_string@@Base+0x7a8>
  40c01c:	stp	x29, x30, [sp, #-64]!
  40c020:	mov	x29, sp
  40c024:	stp	x19, x20, [sp, #16]
  40c028:	mov	x20, x2
  40c02c:	stp	x21, x22, [sp, #32]
  40c030:	mov	x22, x0
  40c034:	mov	w21, w3
  40c038:	ldr	x2, [x2, #8]
  40c03c:	str	x23, [sp, #48]
  40c040:	mov	x23, x1
  40c044:	cbz	w3, 40c0f8 <variable_expand_string@@Base+0x6f8>
  40c048:	ldr	w3, [x20, #16]
  40c04c:	mov	x1, x23
  40c050:	mov	x0, x22
  40c054:	cbnz	w3, 40c0f8 <variable_expand_string@@Base+0x6f8>
  40c058:	bl	423410 <lookup_variable_in_set@@Base>
  40c05c:	mov	x19, x0
  40c060:	cbnz	x0, 40c08c <variable_expand_string@@Base+0x68c>
  40c064:	ldr	x20, [x20]
  40c068:	cbz	x20, 40c120 <variable_expand_string@@Base+0x720>
  40c06c:	ldr	w3, [x20, #16]
  40c070:	mov	x1, x23
  40c074:	mov	x0, x22
  40c078:	ldr	x2, [x20, #8]
  40c07c:	cbnz	w3, 40c0f8 <variable_expand_string@@Base+0x6f8>
  40c080:	bl	423410 <lookup_variable_in_set@@Base>
  40c084:	mov	x19, x0
  40c088:	cbz	x0, 40c064 <variable_expand_string@@Base+0x664>
  40c08c:	ldrb	w0, [x0, #44]
  40c090:	tbnz	w0, #1, 40c134 <variable_expand_string@@Base+0x734>
  40c094:	bl	40b7f8 <hash_init_directories@@Base+0x68>
  40c098:	mov	x20, x0
  40c09c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  40c0a0:	ldr	x0, [x0, #1904]
  40c0a4:	cmp	x0, x20
  40c0a8:	b.cc	40c15c <variable_expand_string@@Base+0x75c>  // b.lo, b.ul, b.last
  40c0ac:	ldr	x21, [x19, #8]
  40c0b0:	mov	x0, x21
  40c0b4:	bl	406680 <strlen@plt>
  40c0b8:	ldrb	w1, [x19, #44]
  40c0bc:	mov	x2, x0
  40c0c0:	tbz	w1, #0, 40c18c <variable_expand_string@@Base+0x78c>
  40c0c4:	mov	x1, x21
  40c0c8:	mov	x0, x20
  40c0cc:	bl	40ba00 <variable_expand_string@@Base>
  40c0d0:	mov	x19, x0
  40c0d4:	bl	406680 <strlen@plt>
  40c0d8:	add	x0, x19, x0
  40c0dc:	ldp	x19, x20, [sp, #16]
  40c0e0:	ldp	x21, x22, [sp, #32]
  40c0e4:	ldr	x23, [sp, #48]
  40c0e8:	ldp	x29, x30, [sp], #64
  40c0ec:	ret
  40c0f0:	ldr	x2, [x20, #8]
  40c0f4:	mov	w21, #0x0                   	// #0
  40c0f8:	mov	x1, x23
  40c0fc:	mov	x0, x22
  40c100:	bl	423410 <lookup_variable_in_set@@Base>
  40c104:	mov	x19, x0
  40c108:	cbz	x0, 40c118 <variable_expand_string@@Base+0x718>
  40c10c:	ldrb	w0, [x0, #44]
  40c110:	cbnz	w21, 40c1ac <variable_expand_string@@Base+0x7ac>
  40c114:	tbz	w0, #7, 40c090 <variable_expand_string@@Base+0x690>
  40c118:	ldr	x20, [x20]
  40c11c:	cbnz	x20, 40c0f0 <variable_expand_string@@Base+0x6f0>
  40c120:	ldp	x19, x20, [sp, #16]
  40c124:	ldp	x21, x22, [sp, #32]
  40c128:	ldr	x23, [sp, #48]
  40c12c:	ldp	x29, x30, [sp], #64
  40c130:	b	40b7f8 <hash_init_directories@@Base+0x68>
  40c134:	ldr	x2, [x20]
  40c138:	mov	w3, w21
  40c13c:	mov	x1, x23
  40c140:	mov	x0, x22
  40c144:	bl	40c018 <variable_expand_string@@Base+0x618>
  40c148:	mov	x20, x0
  40c14c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  40c150:	ldr	x0, [x0, #1904]
  40c154:	cmp	x0, x20
  40c158:	b.cs	40c0ac <variable_expand_string@@Base+0x6ac>  // b.hs, b.nlast
  40c15c:	mov	x2, #0x1                   	// #1
  40c160:	mov	x0, x20
  40c164:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  40c168:	add	x1, x1, #0xb18
  40c16c:	bl	40b848 <variable_buffer_output@@Base>
  40c170:	mov	x20, x0
  40c174:	ldr	x21, [x19, #8]
  40c178:	mov	x0, x21
  40c17c:	bl	406680 <strlen@plt>
  40c180:	ldrb	w1, [x19, #44]
  40c184:	mov	x2, x0
  40c188:	tbnz	w1, #0, 40c0c4 <variable_expand_string@@Base+0x6c4>
  40c18c:	mov	x1, x21
  40c190:	mov	x0, x20
  40c194:	ldp	x19, x20, [sp, #16]
  40c198:	ldp	x21, x22, [sp, #32]
  40c19c:	ldr	x23, [sp, #48]
  40c1a0:	ldp	x29, x30, [sp], #64
  40c1a4:	b	40b848 <variable_buffer_output@@Base>
  40c1a8:	b	40b7f8 <hash_init_directories@@Base+0x68>
  40c1ac:	mov	w21, #0x0                   	// #0
  40c1b0:	tbz	w0, #1, 40c094 <variable_expand_string@@Base+0x694>
  40c1b4:	b	40c134 <variable_expand_string@@Base+0x734>

000000000040c1b8 <variable_expand@@Base>:
  40c1b8:	mov	x1, x0
  40c1bc:	mov	x2, #0xffffffffffffffff    	// #-1
  40c1c0:	mov	x0, #0x0                   	// #0
  40c1c4:	b	40ba00 <variable_expand_string@@Base>

000000000040c1c8 <recursively_expand_for_file@@Base>:
  40c1c8:	stp	x29, x30, [sp, #-128]!
  40c1cc:	mov	x29, sp
  40c1d0:	stp	x19, x20, [sp, #16]
  40c1d4:	mov	x19, x0
  40c1d8:	mov	x20, x1
  40c1dc:	ldr	x0, [x0, #16]
  40c1e0:	stp	x21, x22, [sp, #32]
  40c1e4:	stp	x23, x24, [sp, #48]
  40c1e8:	stp	x25, x26, [sp, #64]
  40c1ec:	adrp	x26, 442000 <memcpy@GLIBC_2.17>
  40c1f0:	stp	x27, x28, [sp, #80]
  40c1f4:	ldr	x27, [x26, #3272]
  40c1f8:	cbz	x0, 40c20c <recursively_expand_for_file@@Base+0x44>
  40c1fc:	add	x0, x19, #0x10
  40c200:	add	x1, sp, #0x78
  40c204:	str	x1, [x26, #3272]
  40c208:	str	x0, [sp, #120]
  40c20c:	adrp	x23, 445000 <output_context@@Base+0x1250>
  40c210:	mov	w25, #0x0                   	// #0
  40c214:	ldr	x0, [x23, #3552]
  40c218:	cbz	x0, 40c334 <recursively_expand_for_file@@Base+0x16c>
  40c21c:	ldrb	w0, [x19, #44]
  40c220:	tbz	w0, #6, 40c244 <recursively_expand_for_file@@Base+0x7c>
  40c224:	ldr	w0, [x19, #44]
  40c228:	tst	w0, #0x7fff00
  40c22c:	b.eq	40c344 <recursively_expand_for_file@@Base+0x17c>  // b.none
  40c230:	ubfx	x1, x0, #8, #15
  40c234:	mov	w2, #0x7fff                	// #32767
  40c238:	add	w1, w1, w2
  40c23c:	bfi	w0, w1, #8, #15
  40c240:	str	w0, [x19, #44]
  40c244:	mov	x24, #0x0                   	// #0
  40c248:	cbz	x20, 40c25c <recursively_expand_for_file@@Base+0x94>
  40c24c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40c250:	ldr	x1, [x20, #80]
  40c254:	ldr	x24, [x0, #288]
  40c258:	str	x1, [x0, #288]
  40c25c:	ldrb	w0, [x19, #44]
  40c260:	adrp	x21, 446000 <commands_started@@Base+0x1c8>
  40c264:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  40c268:	orr	w0, w0, #0x40
  40c26c:	strb	w0, [x19, #44]
  40c270:	ldr	x4, [x21, #1904]
  40c274:	ldr	x28, [x22, #672]
  40c278:	tbnz	w0, #1, 40c2e0 <recursively_expand_for_file@@Base+0x118>
  40c27c:	ldr	x1, [x19, #8]
  40c280:	str	xzr, [x21, #1904]
  40c284:	mov	x2, #0xffffffffffffffff    	// #-1
  40c288:	mov	x0, #0x0                   	// #0
  40c28c:	str	x4, [sp, #96]
  40c290:	bl	40ba00 <variable_expand_string@@Base>
  40c294:	str	x28, [x22, #672]
  40c298:	ldr	x4, [sp, #96]
  40c29c:	str	x4, [x21, #1904]
  40c2a0:	ldrb	w1, [x19, #44]
  40c2a4:	and	w1, w1, #0xffffffbf
  40c2a8:	strb	w1, [x19, #44]
  40c2ac:	cbz	w25, 40c2b4 <recursively_expand_for_file@@Base+0xec>
  40c2b0:	str	xzr, [x23, #3552]
  40c2b4:	cbz	x20, 40c2c0 <recursively_expand_for_file@@Base+0xf8>
  40c2b8:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40c2bc:	str	x24, [x1, #288]
  40c2c0:	str	x27, [x26, #3272]
  40c2c4:	ldp	x19, x20, [sp, #16]
  40c2c8:	ldp	x21, x22, [sp, #32]
  40c2cc:	ldp	x23, x24, [sp, #48]
  40c2d0:	ldp	x25, x26, [sp, #64]
  40c2d4:	ldp	x27, x28, [sp, #80]
  40c2d8:	ldp	x29, x30, [sp], #128
  40c2dc:	ret
  40c2e0:	ldr	x5, [x19]
  40c2e4:	str	xzr, [x21, #1904]
  40c2e8:	stp	x5, x4, [sp, #96]
  40c2ec:	mov	x0, x5
  40c2f0:	bl	406680 <strlen@plt>
  40c2f4:	mov	x1, x0
  40c2f8:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  40c2fc:	mov	w3, #0x1                   	// #1
  40c300:	ldr	x5, [sp, #96]
  40c304:	ldr	x2, [x2, #288]
  40c308:	mov	x0, x5
  40c30c:	bl	40c018 <variable_expand_string@@Base+0x618>
  40c310:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40c314:	mov	x2, #0x1                   	// #1
  40c318:	add	x1, x1, #0x350
  40c31c:	bl	40b848 <variable_buffer_output@@Base>
  40c320:	ldr	x4, [sp, #104]
  40c324:	str	x28, [x22, #672]
  40c328:	ldr	x0, [x21, #1904]
  40c32c:	str	x4, [x21, #1904]
  40c330:	b	40c2a0 <recursively_expand_for_file@@Base+0xd8>
  40c334:	add	x0, x19, #0x10
  40c338:	mov	w25, #0x1                   	// #1
  40c33c:	str	x0, [x23, #3552]
  40c340:	b	40c21c <recursively_expand_for_file@@Base+0x54>
  40c344:	ldr	x1, [x26, #3272]
  40c348:	ldr	x0, [x19]
  40c34c:	ldr	x21, [x1]
  40c350:	bl	406680 <strlen@plt>
  40c354:	mov	x20, x0
  40c358:	mov	w2, #0x5                   	// #5
  40c35c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40c360:	mov	x0, #0x0                   	// #0
  40c364:	add	x1, x1, #0xa40
  40c368:	bl	406cd0 <dcgettext@plt>
  40c36c:	mov	x2, x0
  40c370:	ldr	x3, [x19]
  40c374:	mov	x1, x20
  40c378:	mov	x0, x21
  40c37c:	bl	41a060 <fatal@@Base>

000000000040c380 <variable_expand_for_file@@Base>:
  40c380:	mov	x2, x1
  40c384:	mov	x1, x0
  40c388:	cbz	x2, 40c3f0 <variable_expand_for_file@@Base+0x70>
  40c38c:	stp	x29, x30, [sp, #-48]!
  40c390:	mov	x29, sp
  40c394:	stp	x19, x20, [sp, #16]
  40c398:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  40c39c:	adrp	x19, 445000 <output_context@@Base+0x1250>
  40c3a0:	ldr	x3, [x2, #32]
  40c3a4:	stp	x21, x22, [sp, #32]
  40c3a8:	ldr	x0, [x2, #80]
  40c3ac:	ldr	x22, [x20, #288]
  40c3b0:	str	x0, [x20, #288]
  40c3b4:	ldr	x21, [x19, #3552]
  40c3b8:	cbz	x3, 40c3c8 <variable_expand_for_file@@Base+0x48>
  40c3bc:	ldr	x0, [x3]
  40c3c0:	cmp	x0, #0x0
  40c3c4:	csel	x3, x3, xzr, ne  // ne = any
  40c3c8:	str	x3, [x19, #3552]
  40c3cc:	mov	x2, #0xffffffffffffffff    	// #-1
  40c3d0:	mov	x0, #0x0                   	// #0
  40c3d4:	bl	40ba00 <variable_expand_string@@Base>
  40c3d8:	str	x22, [x20, #288]
  40c3dc:	str	x21, [x19, #3552]
  40c3e0:	ldp	x19, x20, [sp, #16]
  40c3e4:	ldp	x21, x22, [sp, #32]
  40c3e8:	ldp	x29, x30, [sp], #48
  40c3ec:	ret
  40c3f0:	mov	x2, #0xffffffffffffffff    	// #-1
  40c3f4:	mov	x0, #0x0                   	// #0
  40c3f8:	b	40ba00 <variable_expand_string@@Base>
  40c3fc:	nop

000000000040c400 <allocated_variable_expand_for_file@@Base>:
  40c400:	stp	x29, x30, [sp, #-48]!
  40c404:	mov	x29, sp
  40c408:	stp	x19, x20, [sp, #16]
  40c40c:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  40c410:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  40c414:	stp	x21, x22, [sp, #32]
  40c418:	ldr	x22, [x19, #1904]
  40c41c:	str	xzr, [x19, #1904]
  40c420:	ldr	x21, [x20, #672]
  40c424:	bl	40c380 <variable_expand_for_file@@Base>
  40c428:	str	x22, [x19, #1904]
  40c42c:	str	x21, [x20, #672]
  40c430:	ldp	x19, x20, [sp, #16]
  40c434:	ldp	x21, x22, [sp, #32]
  40c438:	ldp	x29, x30, [sp], #48
  40c43c:	ret

000000000040c440 <install_variable_buffer@@Base>:
  40c440:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  40c444:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  40c448:	ldr	x4, [x2, #1904]
  40c44c:	str	x4, [x0]
  40c450:	ldr	x0, [x3, #672]
  40c454:	str	x0, [x1]
  40c458:	str	xzr, [x2, #1904]
  40c45c:	b	40b7f8 <hash_init_directories@@Base+0x68>

000000000040c460 <restore_variable_buffer@@Base>:
  40c460:	stp	x29, x30, [sp, #-48]!
  40c464:	mov	x29, sp
  40c468:	str	x21, [sp, #32]
  40c46c:	adrp	x21, 446000 <commands_started@@Base+0x1c8>
  40c470:	stp	x19, x20, [sp, #16]
  40c474:	mov	x20, x0
  40c478:	mov	x19, x1
  40c47c:	ldr	x0, [x21, #1904]
  40c480:	bl	406b90 <free@plt>
  40c484:	str	x20, [x21, #1904]
  40c488:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40c48c:	ldr	x21, [sp, #32]
  40c490:	str	x19, [x0, #672]
  40c494:	ldp	x19, x20, [sp, #16]
  40c498:	ldp	x29, x30, [sp], #48
  40c49c:	ret
  40c4a0:	mov	x0, #0x0                   	// #0
  40c4a4:	ret
  40c4a8:	ldr	x0, [x0, #8]
  40c4ac:	ldr	x1, [x1, #8]
  40c4b0:	cmp	x0, x1
  40c4b4:	b.eq	40c4bc <restore_variable_buffer@@Base+0x5c>  // b.none
  40c4b8:	b	406b40 <strcmp@plt>
  40c4bc:	mov	w0, #0x0                   	// #0
  40c4c0:	ret
  40c4c4:	nop
  40c4c8:	stp	x29, x30, [sp, #-64]!
  40c4cc:	mov	x29, sp
  40c4d0:	stp	x19, x20, [sp, #16]
  40c4d4:	mov	x19, x0
  40c4d8:	ldr	x0, [x0]
  40c4dc:	stp	x21, x22, [sp, #32]
  40c4e0:	cbz	x0, 40c4ec <restore_variable_buffer@@Base+0x8c>
  40c4e4:	ldrb	w1, [x0]
  40c4e8:	cbnz	w1, 40c734 <restore_variable_buffer@@Base+0x2d4>
  40c4ec:	ldr	x0, [x19, #8]
  40c4f0:	cbz	x0, 40c4fc <restore_variable_buffer@@Base+0x9c>
  40c4f4:	ldrb	w1, [x0]
  40c4f8:	cbnz	w1, 40c6dc <restore_variable_buffer@@Base+0x27c>
  40c4fc:	ldr	x0, [x19, #16]
  40c500:	cbz	x0, 40c50c <restore_variable_buffer@@Base+0xac>
  40c504:	ldrb	w1, [x0]
  40c508:	cbnz	w1, 40c680 <restore_variable_buffer@@Base+0x220>
  40c50c:	ldr	x0, [x19, #40]
  40c510:	cbz	x0, 40c51c <restore_variable_buffer@@Base+0xbc>
  40c514:	ldrb	w1, [x0]
  40c518:	cbnz	w1, 40c624 <restore_variable_buffer@@Base+0x1c4>
  40c51c:	ldr	x19, [x19, #24]
  40c520:	cbz	x19, 40c5cc <restore_variable_buffer@@Base+0x16c>
  40c524:	adrp	x21, 427000 <_IO_stdin_used@@Base+0xc20>
  40c528:	adrp	x22, 427000 <_IO_stdin_used@@Base+0xc20>
  40c52c:	add	x21, x21, #0xa78
  40c530:	add	x22, x22, #0xa98
  40c534:	b	40c540 <restore_variable_buffer@@Base+0xe0>
  40c538:	ldr	x19, [x19]
  40c53c:	cbz	x19, 40c5cc <restore_variable_buffer@@Base+0x16c>
  40c540:	ldrb	w0, [x19, #33]
  40c544:	tbnz	w0, #3, 40c558 <restore_variable_buffer@@Base+0xf8>
  40c548:	ldr	x0, [x19, #8]
  40c54c:	cbz	x0, 40c558 <restore_variable_buffer@@Base+0xf8>
  40c550:	ldrb	w1, [x0]
  40c554:	cbnz	w1, 40c5dc <restore_variable_buffer@@Base+0x17c>
  40c558:	ldr	x0, [x19, #24]
  40c55c:	cbz	x0, 40c538 <restore_variable_buffer@@Base+0xd8>
  40c560:	ldrb	w1, [x0]
  40c564:	cbz	w1, 40c538 <restore_variable_buffer@@Base+0xd8>
  40c568:	bl	4223f0 <strcache_iscached@@Base>
  40c56c:	cbnz	w0, 40c538 <restore_variable_buffer@@Base+0xd8>
  40c570:	ldr	x0, [x19, #8]
  40c574:	str	x23, [sp, #48]
  40c578:	bl	406680 <strlen@plt>
  40c57c:	mov	x20, x0
  40c580:	ldr	x0, [x19, #24]
  40c584:	bl	406680 <strlen@plt>
  40c588:	mov	x23, x0
  40c58c:	mov	x1, x21
  40c590:	mov	w2, #0x5                   	// #5
  40c594:	mov	x0, #0x0                   	// #0
  40c598:	bl	406cd0 <dcgettext@plt>
  40c59c:	ldr	x3, [x19, #8]
  40c5a0:	add	x1, x20, x23
  40c5a4:	ldr	x5, [x19, #24]
  40c5a8:	mov	x2, x0
  40c5ac:	add	x1, x1, #0x4
  40c5b0:	adrp	x4, 427000 <_IO_stdin_used@@Base+0xc20>
  40c5b4:	mov	x0, #0x0                   	// #0
  40c5b8:	add	x4, x4, #0xab0
  40c5bc:	bl	419dc8 <error@@Base>
  40c5c0:	ldr	x19, [x19]
  40c5c4:	ldr	x23, [sp, #48]
  40c5c8:	cbnz	x19, 40c540 <restore_variable_buffer@@Base+0xe0>
  40c5cc:	ldp	x19, x20, [sp, #16]
  40c5d0:	ldp	x21, x22, [sp, #32]
  40c5d4:	ldp	x29, x30, [sp], #64
  40c5d8:	ret
  40c5dc:	bl	4223f0 <strcache_iscached@@Base>
  40c5e0:	cbnz	w0, 40c558 <restore_variable_buffer@@Base+0xf8>
  40c5e4:	ldr	x0, [x19, #8]
  40c5e8:	bl	406680 <strlen@plt>
  40c5ec:	mov	x20, x0
  40c5f0:	mov	x1, x21
  40c5f4:	mov	w2, #0x5                   	// #5
  40c5f8:	mov	x0, #0x0                   	// #0
  40c5fc:	bl	406cd0 <dcgettext@plt>
  40c600:	ldr	x5, [x19, #8]
  40c604:	lsl	x1, x20, #1
  40c608:	mov	x2, x0
  40c60c:	add	x1, x1, #0x4
  40c610:	mov	x4, x22
  40c614:	mov	x3, x5
  40c618:	mov	x0, #0x0                   	// #0
  40c61c:	bl	419dc8 <error@@Base>
  40c620:	b	40c558 <restore_variable_buffer@@Base+0xf8>
  40c624:	bl	4223f0 <strcache_iscached@@Base>
  40c628:	cbnz	w0, 40c51c <restore_variable_buffer@@Base+0xbc>
  40c62c:	ldr	x0, [x19]
  40c630:	bl	406680 <strlen@plt>
  40c634:	mov	x20, x0
  40c638:	ldr	x0, [x19, #40]
  40c63c:	bl	406680 <strlen@plt>
  40c640:	mov	x21, x0
  40c644:	mov	w2, #0x5                   	// #5
  40c648:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40c64c:	mov	x0, #0x0                   	// #0
  40c650:	add	x1, x1, #0xa78
  40c654:	bl	406cd0 <dcgettext@plt>
  40c658:	mov	x2, x0
  40c65c:	ldr	x3, [x19]
  40c660:	add	x1, x20, x21
  40c664:	ldr	x5, [x19, #40]
  40c668:	add	x1, x1, #0x4
  40c66c:	adrp	x4, 427000 <_IO_stdin_used@@Base+0xc20>
  40c670:	mov	x0, #0x0                   	// #0
  40c674:	add	x4, x4, #0xab0
  40c678:	bl	419dc8 <error@@Base>
  40c67c:	b	40c51c <restore_variable_buffer@@Base+0xbc>
  40c680:	bl	4223f0 <strcache_iscached@@Base>
  40c684:	cbnz	w0, 40c50c <restore_variable_buffer@@Base+0xac>
  40c688:	ldr	x0, [x19]
  40c68c:	bl	406680 <strlen@plt>
  40c690:	mov	x20, x0
  40c694:	ldr	x0, [x19, #16]
  40c698:	bl	406680 <strlen@plt>
  40c69c:	mov	x21, x0
  40c6a0:	mov	w2, #0x5                   	// #5
  40c6a4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40c6a8:	mov	x0, #0x0                   	// #0
  40c6ac:	add	x1, x1, #0xa78
  40c6b0:	bl	406cd0 <dcgettext@plt>
  40c6b4:	mov	x2, x0
  40c6b8:	ldr	x3, [x19]
  40c6bc:	add	x1, x20, x21
  40c6c0:	ldr	x5, [x19, #16]
  40c6c4:	add	x1, x1, #0x5
  40c6c8:	adrp	x4, 427000 <_IO_stdin_used@@Base+0xc20>
  40c6cc:	mov	x0, #0x0                   	// #0
  40c6d0:	add	x4, x4, #0xaa8
  40c6d4:	bl	419dc8 <error@@Base>
  40c6d8:	b	40c50c <restore_variable_buffer@@Base+0xac>
  40c6dc:	bl	4223f0 <strcache_iscached@@Base>
  40c6e0:	cbnz	w0, 40c4fc <restore_variable_buffer@@Base+0x9c>
  40c6e4:	ldr	x0, [x19]
  40c6e8:	bl	406680 <strlen@plt>
  40c6ec:	mov	x20, x0
  40c6f0:	ldr	x0, [x19, #8]
  40c6f4:	bl	406680 <strlen@plt>
  40c6f8:	mov	x21, x0
  40c6fc:	mov	w2, #0x5                   	// #5
  40c700:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40c704:	mov	x0, #0x0                   	// #0
  40c708:	add	x1, x1, #0xa78
  40c70c:	bl	406cd0 <dcgettext@plt>
  40c710:	mov	x2, x0
  40c714:	ldp	x3, x5, [x19]
  40c718:	add	x1, x20, x21
  40c71c:	add	x1, x1, #0x5
  40c720:	adrp	x4, 427000 <_IO_stdin_used@@Base+0xc20>
  40c724:	mov	x0, #0x0                   	// #0
  40c728:	add	x4, x4, #0xaa0
  40c72c:	bl	419dc8 <error@@Base>
  40c730:	b	40c4fc <restore_variable_buffer@@Base+0x9c>
  40c734:	bl	4223f0 <strcache_iscached@@Base>
  40c738:	cbnz	w0, 40c4ec <restore_variable_buffer@@Base+0x8c>
  40c73c:	ldr	x0, [x19]
  40c740:	bl	406680 <strlen@plt>
  40c744:	mov	x20, x0
  40c748:	mov	w2, #0x5                   	// #5
  40c74c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40c750:	mov	x0, #0x0                   	// #0
  40c754:	add	x1, x1, #0xa78
  40c758:	bl	406cd0 <dcgettext@plt>
  40c75c:	mov	x2, x0
  40c760:	ldr	x5, [x19]
  40c764:	lsl	x1, x20, #1
  40c768:	add	x1, x1, #0x4
  40c76c:	adrp	x4, 427000 <_IO_stdin_used@@Base+0xc20>
  40c770:	mov	x3, x5
  40c774:	add	x4, x4, #0xa98
  40c778:	mov	x0, #0x0                   	// #0
  40c77c:	bl	419dc8 <error@@Base>
  40c780:	b	40c4ec <restore_variable_buffer@@Base+0x8c>
  40c784:	nop
  40c788:	stp	x29, x30, [sp, #-16]!
  40c78c:	mov	x29, sp
  40c790:	ldr	x0, [x0, #8]
  40c794:	bl	412278 <jhash_string@@Base>
  40c798:	mov	w0, w0
  40c79c:	ldp	x29, x30, [sp], #16
  40c7a0:	ret
  40c7a4:	nop

000000000040c7a8 <lookup_file@@Base>:
  40c7a8:	stp	x29, x30, [sp, #-160]!
  40c7ac:	mov	x2, x0
  40c7b0:	mov	x29, sp
  40c7b4:	ldrb	w0, [x0]
  40c7b8:	cmp	w0, #0x2e
  40c7bc:	b.ne	40c7f4 <lookup_file@@Base+0x4c>  // b.any
  40c7c0:	ldrb	w0, [x2, #1]
  40c7c4:	cmp	w0, #0x2f
  40c7c8:	b.ne	40c800 <lookup_file@@Base+0x58>  // b.any
  40c7cc:	ldrb	w0, [x2, #2]
  40c7d0:	cbz	w0, 40c800 <lookup_file@@Base+0x58>
  40c7d4:	add	x2, x2, #0x2
  40c7d8:	cmp	w0, #0x2f
  40c7dc:	b.ne	40c7ec <lookup_file@@Base+0x44>  // b.any
  40c7e0:	ldrb	w0, [x2, #1]!
  40c7e4:	cmp	w0, #0x2f
  40c7e8:	b.eq	40c7e0 <lookup_file@@Base+0x38>  // b.none
  40c7ec:	cmp	w0, #0x2e
  40c7f0:	b.eq	40c7c0 <lookup_file@@Base+0x18>  // b.none
  40c7f4:	cbnz	w0, 40c800 <lookup_file@@Base+0x58>
  40c7f8:	adrp	x2, 427000 <_IO_stdin_used@@Base+0xc20>
  40c7fc:	add	x2, x2, #0xab8
  40c800:	add	x1, sp, #0x10
  40c804:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40c808:	add	x0, x0, #0x2a8
  40c80c:	str	x2, [sp, #24]
  40c810:	bl	411b08 <hash_find_item@@Base>
  40c814:	ldp	x29, x30, [sp], #160
  40c818:	ret
  40c81c:	nop

000000000040c820 <enter_file@@Base>:
  40c820:	stp	x29, x30, [sp, #-208]!
  40c824:	mov	x29, sp
  40c828:	stp	x23, x24, [sp, #48]
  40c82c:	adrp	x23, 443000 <expanding_var@@Base+0x338>
  40c830:	add	x23, x23, #0x2a8
  40c834:	add	x1, sp, #0x40
  40c838:	stp	x19, x20, [sp, #16]
  40c83c:	stp	x21, x22, [sp, #32]
  40c840:	mov	x21, x0
  40c844:	mov	x0, x23
  40c848:	str	x21, [sp, #72]
  40c84c:	bl	4119e0 <hash_find_slot@@Base>
  40c850:	ldr	x20, [x0]
  40c854:	mov	x22, x0
  40c858:	cbz	x20, 40c8c8 <enter_file@@Base+0xa8>
  40c85c:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  40c860:	ldr	x0, [x24, #48]
  40c864:	cmp	x0, x20
  40c868:	b.eq	40c874 <enter_file@@Base+0x54>  // b.none
  40c86c:	ldr	x0, [x20, #104]
  40c870:	cbz	x0, 40c914 <enter_file@@Base+0xf4>
  40c874:	mov	x0, #0x90                  	// #144
  40c878:	bl	418a78 <xcalloc@@Base>
  40c87c:	mov	x19, x0
  40c880:	ldrb	w0, [x0, #136]
  40c884:	ldr	x2, [x24, #48]
  40c888:	mov	w1, #0x1                   	// #1
  40c88c:	bfxil	w0, w1, #0, #2
  40c890:	stp	x21, x21, [x19]
  40c894:	cmp	x2, x20
  40c898:	strb	w0, [x19, #136]
  40c89c:	b.eq	40c8e8 <enter_file@@Base+0xc8>  // b.none
  40c8a0:	ldr	x0, [x20, #64]
  40c8a4:	str	x20, [x19, #104]
  40c8a8:	ldp	x21, x22, [sp, #32]
  40c8ac:	str	x19, [x0, #56]
  40c8b0:	mov	x0, x19
  40c8b4:	str	x19, [x20, #64]
  40c8b8:	ldp	x19, x20, [sp, #16]
  40c8bc:	ldp	x23, x24, [sp, #48]
  40c8c0:	ldp	x29, x30, [sp], #208
  40c8c4:	ret
  40c8c8:	mov	x0, #0x90                  	// #144
  40c8cc:	bl	418a78 <xcalloc@@Base>
  40c8d0:	mov	x19, x0
  40c8d4:	ldrb	w0, [x0, #136]
  40c8d8:	mov	w1, #0x1                   	// #1
  40c8dc:	bfxil	w0, w1, #0, #2
  40c8e0:	stp	x21, x21, [x19]
  40c8e4:	strb	w0, [x19, #136]
  40c8e8:	str	x19, [x19, #64]
  40c8ec:	mov	x2, x22
  40c8f0:	mov	x1, x19
  40c8f4:	mov	x0, x23
  40c8f8:	bl	411b38 <hash_insert_at@@Base>
  40c8fc:	mov	x0, x19
  40c900:	ldp	x19, x20, [sp, #16]
  40c904:	ldp	x21, x22, [sp, #32]
  40c908:	ldp	x23, x24, [sp, #48]
  40c90c:	ldp	x29, x30, [sp], #208
  40c910:	ret
  40c914:	ldrb	w0, [x20, #136]
  40c918:	mov	x19, x20
  40c91c:	ldp	x21, x22, [sp, #32]
  40c920:	and	w0, w0, #0xffffffef
  40c924:	strb	w0, [x20, #136]
  40c928:	mov	x0, x19
  40c92c:	ldp	x19, x20, [sp, #16]
  40c930:	ldp	x23, x24, [sp, #48]
  40c934:	ldp	x29, x30, [sp], #208
  40c938:	ret
  40c93c:	nop

000000000040c940 <rehash_file@@Base>:
  40c940:	stp	x29, x30, [sp, #-208]!
  40c944:	mov	x29, sp
  40c948:	stp	x19, x20, [sp, #16]
  40c94c:	mov	x19, x0
  40c950:	ldrb	w0, [x0, #136]
  40c954:	stp	x21, x22, [sp, #32]
  40c958:	and	w0, w0, #0xffffffef
  40c95c:	ldr	x22, [x19, #8]
  40c960:	str	x1, [sp, #72]
  40c964:	strb	w0, [x19, #136]
  40c968:	cmp	x1, x22
  40c96c:	b.eq	40cc58 <rehash_file@@Base+0x318>  // b.none
  40c970:	mov	x21, x1
  40c974:	mov	x0, x22
  40c978:	bl	406b40 <strcmp@plt>
  40c97c:	cbz	w0, 40cc58 <rehash_file@@Base+0x318>
  40c980:	str	x22, [sp, #72]
  40c984:	nop
  40c988:	mov	x20, x19
  40c98c:	ldr	x19, [x19, #72]
  40c990:	cbnz	x19, 40c988 <rehash_file@@Base+0x48>
  40c994:	ldr	x0, [x20, #8]
  40c998:	cmp	x22, x0
  40c99c:	b.eq	40c9ac <rehash_file@@Base+0x6c>  // b.none
  40c9a0:	mov	x1, x22
  40c9a4:	bl	406b40 <strcmp@plt>
  40c9a8:	cbnz	w0, 40cd60 <rehash_file@@Base+0x420>
  40c9ac:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  40c9b0:	add	x22, x22, #0x2a8
  40c9b4:	mov	x0, x22
  40c9b8:	mov	x1, x20
  40c9bc:	bl	411d28 <hash_delete@@Base>
  40c9c0:	cmp	x20, x0
  40c9c4:	b.ne	40cd60 <rehash_file@@Base+0x420>  // b.any
  40c9c8:	add	x1, sp, #0x40
  40c9cc:	mov	x0, x22
  40c9d0:	str	x21, [sp, #72]
  40c9d4:	bl	4119e0 <hash_find_slot@@Base>
  40c9d8:	ldr	x3, [x20, #104]
  40c9dc:	mov	x2, x0
  40c9e0:	ldr	x19, [x0]
  40c9e4:	str	x21, [x20, #8]
  40c9e8:	cbz	x3, 40c9fc <rehash_file@@Base+0xbc>
  40c9ec:	nop
  40c9f0:	str	x21, [x3, #8]
  40c9f4:	ldr	x3, [x3, #56]
  40c9f8:	cbnz	x3, 40c9f0 <rehash_file@@Base+0xb0>
  40c9fc:	cbz	x19, 40cca8 <rehash_file@@Base+0x368>
  40ca00:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40ca04:	ldr	x0, [x0, #48]
  40ca08:	cmp	x0, x19
  40ca0c:	b.eq	40cca8 <rehash_file@@Base+0x368>  // b.none
  40ca10:	ldr	x22, [x20, #32]
  40ca14:	cbz	x22, 40caf0 <rehash_file@@Base+0x1b0>
  40ca18:	stp	x23, x24, [sp, #48]
  40ca1c:	ldr	x23, [x19, #32]
  40ca20:	cbz	x23, 40cc9c <rehash_file@@Base+0x35c>
  40ca24:	cmp	x22, x23
  40ca28:	b.eq	40cce4 <rehash_file@@Base+0x3a4>  // b.none
  40ca2c:	ldr	x0, [x20]
  40ca30:	bl	406680 <strlen@plt>
  40ca34:	ldr	x1, [x23]
  40ca38:	mov	x23, x0
  40ca3c:	cbz	x1, 40ccec <rehash_file@@Base+0x3ac>
  40ca40:	mov	x0, x1
  40ca44:	bl	406680 <strlen@plt>
  40ca48:	mov	w2, #0x5                   	// #5
  40ca4c:	mov	x24, x0
  40ca50:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40ca54:	mov	x0, #0x0                   	// #0
  40ca58:	add	x1, x1, #0xac0
  40ca5c:	bl	406cd0 <dcgettext@plt>
  40ca60:	ldr	x5, [x19, #32]
  40ca64:	add	x1, x23, #0x14
  40ca68:	ldr	x3, [x20]
  40ca6c:	mov	x2, x0
  40ca70:	ldp	x4, x5, [x5]
  40ca74:	mov	x0, x22
  40ca78:	add	x1, x1, x24
  40ca7c:	bl	419dc8 <error@@Base>
  40ca80:	mov	x0, x21
  40ca84:	bl	406680 <strlen@plt>
  40ca88:	mov	w2, #0x5                   	// #5
  40ca8c:	add	x22, x0, x23
  40ca90:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40ca94:	mov	x0, #0x0                   	// #0
  40ca98:	add	x1, x1, #0xb28
  40ca9c:	ldr	x23, [x20, #32]
  40caa0:	bl	406cd0 <dcgettext@plt>
  40caa4:	ldr	x3, [x20]
  40caa8:	mov	x4, x21
  40caac:	mov	x2, x0
  40cab0:	mov	x1, x22
  40cab4:	mov	x0, x23
  40cab8:	bl	419dc8 <error@@Base>
  40cabc:	mov	w2, #0x5                   	// #5
  40cac0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40cac4:	mov	x0, #0x0                   	// #0
  40cac8:	add	x1, x1, #0xb60
  40cacc:	ldr	x23, [x20, #32]
  40cad0:	bl	406cd0 <dcgettext@plt>
  40cad4:	ldr	x4, [x20]
  40cad8:	mov	x2, x0
  40cadc:	mov	x1, x22
  40cae0:	mov	x0, x23
  40cae4:	mov	x3, x21
  40cae8:	bl	419dc8 <error@@Base>
  40caec:	ldp	x23, x24, [sp, #48]
  40caf0:	ldr	x0, [x19, #24]
  40caf4:	ldr	x2, [x20, #24]
  40caf8:	cbz	x0, 40ccdc <rehash_file@@Base+0x39c>
  40cafc:	nop
  40cb00:	mov	x1, x0
  40cb04:	ldr	x0, [x0]
  40cb08:	cbnz	x0, 40cb00 <rehash_file@@Base+0x1c0>
  40cb0c:	str	x2, [x1]
  40cb10:	ldr	x1, [x20, #80]
  40cb14:	add	x0, x19, #0x50
  40cb18:	bl	423580 <merge_variable_set_lists@@Base>
  40cb1c:	ldr	x0, [x19, #104]
  40cb20:	cbz	x0, 40ccc4 <rehash_file@@Base+0x384>
  40cb24:	ldrb	w0, [x20, #137]
  40cb28:	tbnz	w0, #3, 40cc68 <rehash_file@@Base+0x328>
  40cb2c:	ldrb	w0, [x19, #137]
  40cb30:	ldr	x2, [x19, #112]
  40cb34:	ldr	x1, [x20, #112]
  40cb38:	cmp	x1, x2
  40cb3c:	b.ls	40cb44 <rehash_file@@Base+0x204>  // b.plast
  40cb40:	str	x1, [x19, #112]
  40cb44:	ldrb	w4, [x20, #136]
  40cb48:	ubfx	x6, x0, #0, #1
  40cb4c:	ldrb	w1, [x19, #136]
  40cb50:	ldr	x7, [x20, #120]
  40cb54:	mov	w2, w1
  40cb58:	ubfx	x4, x4, #5, #1
  40cb5c:	ubfx	x1, x1, #5, #1
  40cb60:	orr	w1, w1, w4
  40cb64:	ldrb	w3, [x19, #138]
  40cb68:	bfi	w2, w1, #5, #1
  40cb6c:	strb	w2, [x19, #136]
  40cb70:	mov	w4, w2
  40cb74:	mov	w5, w3
  40cb78:	ldrb	w1, [x20, #137]
  40cb7c:	ubfx	x2, x2, #6, #1
  40cb80:	ubfx	x3, x3, #1, #1
  40cb84:	ubfx	x1, x1, #0, #1
  40cb88:	orr	w1, w6, w1
  40cb8c:	bfxil	w0, w1, #0, #1
  40cb90:	strb	w0, [x19, #137]
  40cb94:	mov	w1, w0
  40cb98:	ldrb	w6, [x20, #137]
  40cb9c:	ubfx	x0, x0, #1, #1
  40cba0:	ubfx	x6, x6, #1, #1
  40cba4:	orr	w0, w0, w6
  40cba8:	bfi	w1, w0, #1, #1
  40cbac:	strb	w1, [x19, #137]
  40cbb0:	mov	w0, w1
  40cbb4:	ldrb	w6, [x20, #137]
  40cbb8:	ubfx	x1, x1, #2, #1
  40cbbc:	ubfx	x6, x6, #2, #1
  40cbc0:	orr	w1, w1, w6
  40cbc4:	bfi	w0, w1, #2, #1
  40cbc8:	strb	w0, [x19, #137]
  40cbcc:	mov	w1, w0
  40cbd0:	ldrb	w6, [x20, #137]
  40cbd4:	ubfx	x0, x0, #3, #1
  40cbd8:	ubfx	x6, x6, #3, #1
  40cbdc:	orr	w0, w0, w6
  40cbe0:	bfi	w1, w0, #3, #1
  40cbe4:	strb	w1, [x19, #137]
  40cbe8:	mov	w0, w1
  40cbec:	ldrb	w6, [x20, #137]
  40cbf0:	ubfx	x1, x1, #4, #1
  40cbf4:	ubfx	x6, x6, #4, #1
  40cbf8:	orr	w1, w1, w6
  40cbfc:	bfi	w0, w1, #4, #1
  40cc00:	strb	w0, [x19, #137]
  40cc04:	mov	w6, w0
  40cc08:	ldrb	w1, [x20, #137]
  40cc0c:	ubfx	x0, x0, #5, #1
  40cc10:	ubfx	x1, x1, #5, #1
  40cc14:	orr	w0, w0, w1
  40cc18:	bfi	w6, w0, #5, #1
  40cc1c:	strb	w6, [x19, #137]
  40cc20:	ldrb	w0, [x20, #136]
  40cc24:	ubfx	x0, x0, #6, #1
  40cc28:	orr	w2, w2, w0
  40cc2c:	bfi	w4, w2, #6, #1
  40cc30:	strb	w4, [x19, #136]
  40cc34:	and	w0, w4, #0xffffffef
  40cc38:	ldrb	w1, [x20, #138]
  40cc3c:	strb	w0, [x19, #136]
  40cc40:	str	x7, [x19, #120]
  40cc44:	ubfx	x0, x1, #1, #1
  40cc48:	orr	w0, w3, w0
  40cc4c:	bfi	w5, w0, #1, #1
  40cc50:	strb	w5, [x19, #138]
  40cc54:	str	x19, [x20, #72]
  40cc58:	ldp	x19, x20, [sp, #16]
  40cc5c:	ldp	x21, x22, [sp, #32]
  40cc60:	ldp	x29, x30, [sp], #208
  40cc64:	ret
  40cc68:	ldr	x0, [x20, #104]
  40cc6c:	cbnz	x0, 40cb2c <rehash_file@@Base+0x1ec>
  40cc70:	ldr	x0, [x20]
  40cc74:	stp	x23, x24, [sp, #48]
  40cc78:	bl	406680 <strlen@plt>
  40cc7c:	mov	x22, x0
  40cc80:	mov	x0, x21
  40cc84:	bl	406680 <strlen@plt>
  40cc88:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40cc8c:	mov	x19, x0
  40cc90:	add	x1, x1, #0xba0
  40cc94:	mov	w2, #0x5                   	// #5
  40cc98:	b	40cd40 <rehash_file@@Base+0x400>
  40cc9c:	ldp	x23, x24, [sp, #48]
  40cca0:	str	x22, [x19, #32]
  40cca4:	b	40caf0 <rehash_file@@Base+0x1b0>
  40cca8:	mov	x1, x20
  40ccac:	mov	x0, x22
  40ccb0:	bl	411b38 <hash_insert_at@@Base>
  40ccb4:	ldp	x19, x20, [sp, #16]
  40ccb8:	ldp	x21, x22, [sp, #32]
  40ccbc:	ldp	x29, x30, [sp], #208
  40ccc0:	ret
  40ccc4:	ldr	x1, [x20, #104]
  40ccc8:	ldrb	w0, [x19, #137]
  40cccc:	cbz	x1, 40cb30 <rehash_file@@Base+0x1f0>
  40ccd0:	tbnz	w0, #3, 40cd18 <rehash_file@@Base+0x3d8>
  40ccd4:	str	x1, [x19, #104]
  40ccd8:	b	40cb30 <rehash_file@@Base+0x1f0>
  40ccdc:	str	x2, [x19, #24]
  40cce0:	b	40cb10 <rehash_file@@Base+0x1d0>
  40cce4:	ldp	x23, x24, [sp, #48]
  40cce8:	b	40caf0 <rehash_file@@Base+0x1b0>
  40ccec:	mov	w2, #0x5                   	// #5
  40ccf0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40ccf4:	mov	x0, #0x0                   	// #0
  40ccf8:	add	x1, x1, #0xaf0
  40ccfc:	bl	406cd0 <dcgettext@plt>
  40cd00:	mov	x2, x0
  40cd04:	ldr	x3, [x20]
  40cd08:	mov	x0, x22
  40cd0c:	mov	x1, x23
  40cd10:	bl	419dc8 <error@@Base>
  40cd14:	b	40ca80 <rehash_file@@Base+0x140>
  40cd18:	ldr	x0, [x20]
  40cd1c:	stp	x23, x24, [sp, #48]
  40cd20:	bl	406680 <strlen@plt>
  40cd24:	mov	x22, x0
  40cd28:	mov	x0, x21
  40cd2c:	bl	406680 <strlen@plt>
  40cd30:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40cd34:	mov	x19, x0
  40cd38:	add	x1, x1, #0xbd8
  40cd3c:	mov	w2, #0x5                   	// #5
  40cd40:	mov	x0, #0x0                   	// #0
  40cd44:	bl	406cd0 <dcgettext@plt>
  40cd48:	ldr	x3, [x20]
  40cd4c:	mov	x2, x0
  40cd50:	mov	x4, x21
  40cd54:	add	x1, x22, x19
  40cd58:	mov	x0, #0x0                   	// #0
  40cd5c:	bl	41a060 <fatal@@Base>
  40cd60:	stp	x23, x24, [sp, #48]
  40cd64:	bl	406ab0 <abort@plt>

000000000040cd68 <rename_file@@Base>:
  40cd68:	stp	x29, x30, [sp, #-32]!
  40cd6c:	mov	x29, sp
  40cd70:	str	x19, [sp, #16]
  40cd74:	mov	x19, x0
  40cd78:	bl	40c940 <rehash_file@@Base>
  40cd7c:	cbz	x19, 40cd90 <rename_file@@Base+0x28>
  40cd80:	ldr	x0, [x19, #8]
  40cd84:	str	x0, [x19]
  40cd88:	ldr	x19, [x19, #56]
  40cd8c:	cbnz	x19, 40cd80 <rename_file@@Base+0x18>
  40cd90:	ldr	x19, [sp, #16]
  40cd94:	ldp	x29, x30, [sp], #32
  40cd98:	ret
  40cd9c:	nop

000000000040cda0 <remove_intermediates@@Base>:
  40cda0:	adrp	x4, 446000 <commands_started@@Base+0x1c8>
  40cda4:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40cda8:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  40cdac:	add	x2, x3, #0x2a8
  40cdb0:	ldr	w5, [x4, #2188]
  40cdb4:	ldr	w1, [x1, #3404]
  40cdb8:	ldr	w4, [x2, #88]
  40cdbc:	orr	w1, w1, w5
  40cdc0:	orr	w1, w1, w4
  40cdc4:	cbnz	w1, 40cf18 <remove_intermediates@@Base+0x178>
  40cdc8:	stp	x29, x30, [sp, #-96]!
  40cdcc:	mov	x29, sp
  40cdd0:	stp	x21, x22, [sp, #32]
  40cdd4:	mov	w22, w0
  40cdd8:	cbnz	w0, 40cf1c <remove_intermediates@@Base+0x17c>
  40cddc:	stp	x19, x20, [sp, #16]
  40cde0:	ldr	x19, [x3, #680]
  40cde4:	ldr	x21, [x2, #32]
  40cde8:	add	x21, x19, x21, lsl #3
  40cdec:	cmp	x19, x21
  40cdf0:	b.cs	40cfc4 <remove_intermediates@@Base+0x224>  // b.hs, b.nlast
  40cdf4:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  40cdf8:	stp	x23, x24, [sp, #48]
  40cdfc:	adrp	x23, 426000 <rpl_fcntl@@Base+0xf0>
  40ce00:	add	x23, x23, #0x5c0
  40ce04:	stp	x25, x26, [sp, #64]
  40ce08:	mov	w25, #0x20                  	// #32
  40ce0c:	add	x26, x0, #0x7c0
  40ce10:	mov	w24, #0x0                   	// #0
  40ce14:	movk	w25, #0x1, lsl #16
  40ce18:	ldr	x20, [x19]
  40ce1c:	cbz	x20, 40cee8 <remove_intermediates@@Base+0x148>
  40ce20:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40ce24:	ldr	x1, [x1, #48]
  40ce28:	cmp	x20, x1
  40ce2c:	b.eq	40cee8 <remove_intermediates@@Base+0x148>  // b.none
  40ce30:	ldrb	w1, [x20, #137]
  40ce34:	tbz	w1, #6, 40cee8 <remove_intermediates@@Base+0x148>
  40ce38:	ldr	w0, [x20, #136]
  40ce3c:	and	w0, w0, w25
  40ce40:	cmp	w0, #0x20
  40ce44:	b.eq	40cee8 <remove_intermediates@@Base+0x148>  // b.none
  40ce48:	mov	w0, #0xffffff90            	// #-112
  40ce4c:	tst	w1, w0
  40ce50:	b.ne	40cee8 <remove_intermediates@@Base+0x148>  // b.any
  40ce54:	ldrb	w0, [x20, #136]
  40ce58:	and	w0, w0, #0x3
  40ce5c:	cmp	w0, #0x1
  40ce60:	b.eq	40cee8 <remove_intermediates@@Base+0x148>  // b.none
  40ce64:	ldr	w0, [x26]
  40ce68:	stp	x27, x28, [sp, #80]
  40ce6c:	mov	w27, #0x0                   	// #0
  40ce70:	cbz	w0, 40cf58 <remove_intermediates@@Base+0x1b8>
  40ce74:	ldrb	w0, [x20, #138]
  40ce78:	tbnz	w0, #0, 40cf78 <remove_intermediates@@Base+0x1d8>
  40ce7c:	cbnz	w22, 40cf8c <remove_intermediates@@Base+0x1ec>
  40ce80:	cbnz	w24, 40cfcc <remove_intermediates@@Base+0x22c>
  40ce84:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40ce88:	ldr	w0, [x0, #1088]
  40ce8c:	tbnz	w0, #0, 40cff0 <remove_intermediates@@Base+0x250>
  40ce90:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40ce94:	ldr	w0, [x0, #3300]
  40ce98:	cbnz	w0, 40ced4 <remove_intermediates@@Base+0x134>
  40ce9c:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40cea0:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40cea4:	add	x28, x1, #0x180
  40cea8:	add	x0, x0, #0xc58
  40ceac:	ldr	x3, [x1, #384]
  40ceb0:	mov	x2, #0x3                   	// #3
  40ceb4:	mov	x1, #0x1                   	// #1
  40ceb8:	bl	406be0 <fwrite@plt>
  40cebc:	ldr	x0, [x20]
  40cec0:	mov	w24, #0x1                   	// #1
  40cec4:	ldr	x1, [x28]
  40cec8:	bl	406690 <fputs@plt>
  40cecc:	ldr	x0, [x28]
  40ced0:	bl	406c20 <fflush@plt>
  40ced4:	tbz	w27, #31, 40cf78 <remove_intermediates@@Base+0x1d8>
  40ced8:	ldr	x1, [x20]
  40cedc:	mov	x0, x23
  40cee0:	bl	419f38 <perror_with_name@@Base>
  40cee4:	ldp	x27, x28, [sp, #80]
  40cee8:	add	x19, x19, #0x8
  40ceec:	cmp	x21, x19
  40cef0:	b.hi	40ce18 <remove_intermediates@@Base+0x78>  // b.pmore
  40cef4:	cmp	w22, #0x0
  40cef8:	csel	w24, w24, wzr, eq  // eq = none
  40cefc:	cbnz	w24, 40cf2c <remove_intermediates@@Base+0x18c>
  40cf00:	ldp	x19, x20, [sp, #16]
  40cf04:	ldp	x23, x24, [sp, #48]
  40cf08:	ldp	x25, x26, [sp, #64]
  40cf0c:	ldp	x21, x22, [sp, #32]
  40cf10:	ldp	x29, x30, [sp], #96
  40cf14:	ret
  40cf18:	ret
  40cf1c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  40cf20:	ldr	w0, [x0, #1984]
  40cf24:	cbz	w0, 40cddc <remove_intermediates@@Base+0x3c>
  40cf28:	b	40cf0c <remove_intermediates@@Base+0x16c>
  40cf2c:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  40cf30:	mov	w0, #0xa                   	// #10
  40cf34:	ldr	x1, [x19, #384]
  40cf38:	bl	406740 <putc@plt>
  40cf3c:	ldr	x0, [x19, #384]
  40cf40:	ldp	x19, x20, [sp, #16]
  40cf44:	ldp	x21, x22, [sp, #32]
  40cf48:	ldp	x23, x24, [sp, #48]
  40cf4c:	ldp	x25, x26, [sp, #64]
  40cf50:	ldp	x29, x30, [sp], #96
  40cf54:	b	406c20 <fflush@plt>
  40cf58:	ldr	x0, [x20]
  40cf5c:	bl	406db0 <unlink@plt>
  40cf60:	mov	w27, w0
  40cf64:	tbz	w0, #31, 40ce74 <remove_intermediates@@Base+0xd4>
  40cf68:	bl	406d70 <__errno_location@plt>
  40cf6c:	ldr	w0, [x0]
  40cf70:	cmp	w0, #0x2
  40cf74:	b.ne	40ce74 <remove_intermediates@@Base+0xd4>  // b.any
  40cf78:	add	x19, x19, #0x8
  40cf7c:	cmp	x21, x19
  40cf80:	ldp	x27, x28, [sp, #80]
  40cf84:	b.hi	40ce18 <remove_intermediates@@Base+0x78>  // b.pmore
  40cf88:	b	40cef4 <remove_intermediates@@Base+0x154>
  40cf8c:	ldr	x0, [x20]
  40cf90:	bl	406680 <strlen@plt>
  40cf94:	mov	x28, x0
  40cf98:	mov	w2, #0x5                   	// #5
  40cf9c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40cfa0:	mov	x0, #0x0                   	// #0
  40cfa4:	add	x1, x1, #0xc10
  40cfa8:	bl	406cd0 <dcgettext@plt>
  40cfac:	mov	x2, x0
  40cfb0:	ldr	x3, [x20]
  40cfb4:	mov	x1, x28
  40cfb8:	mov	x0, #0x0                   	// #0
  40cfbc:	bl	419dc8 <error@@Base>
  40cfc0:	b	40ced4 <remove_intermediates@@Base+0x134>
  40cfc4:	ldp	x19, x20, [sp, #16]
  40cfc8:	b	40cf0c <remove_intermediates@@Base+0x16c>
  40cfcc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40cfd0:	ldr	w0, [x0, #3300]
  40cfd4:	cbnz	w0, 40ced4 <remove_intermediates@@Base+0x134>
  40cfd8:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40cfdc:	add	x28, x1, #0x180
  40cfe0:	mov	w0, #0x20                  	// #32
  40cfe4:	ldr	x1, [x1, #384]
  40cfe8:	bl	406740 <putc@plt>
  40cfec:	b	40cebc <remove_intermediates@@Base+0x11c>
  40cff0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40cff4:	add	x1, x1, #0xc38
  40cff8:	mov	w2, #0x5                   	// #5
  40cffc:	mov	x0, #0x0                   	// #0
  40d000:	bl	406cd0 <dcgettext@plt>
  40d004:	bl	406d60 <printf@plt>
  40d008:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40d00c:	ldr	x0, [x0, #384]
  40d010:	bl	406c20 <fflush@plt>
  40d014:	b	40ce90 <remove_intermediates@@Base+0xf0>

000000000040d018 <split_prereqs@@Base>:
  40d018:	stp	x29, x30, [sp, #-48]!
  40d01c:	mov	x1, #0x28                  	// #40
  40d020:	mov	w4, #0x0                   	// #0
  40d024:	mov	x29, sp
  40d028:	mov	x3, #0x0                   	// #0
  40d02c:	mov	w2, #0x100                 	// #256
  40d030:	str	x19, [sp, #16]
  40d034:	str	x0, [sp, #40]
  40d038:	add	x0, sp, x1
  40d03c:	bl	41c510 <parse_file_seq@@Base>
  40d040:	mov	x19, x0
  40d044:	ldr	x1, [sp, #40]
  40d048:	ldrb	w0, [x1]
  40d04c:	cbnz	w0, 40d060 <split_prereqs@@Base+0x48>
  40d050:	mov	x0, x19
  40d054:	ldr	x19, [sp, #16]
  40d058:	ldp	x29, x30, [sp], #48
  40d05c:	ret
  40d060:	add	x5, x1, #0x1
  40d064:	mov	x1, #0x28                  	// #40
  40d068:	add	x0, sp, #0x28
  40d06c:	mov	w4, #0x0                   	// #0
  40d070:	mov	x3, #0x0                   	// #0
  40d074:	mov	w2, #0x1                   	// #1
  40d078:	str	x5, [sp, #40]
  40d07c:	bl	41c510 <parse_file_seq@@Base>
  40d080:	mov	x1, x0
  40d084:	cbz	x19, 40d0cc <split_prereqs@@Base+0xb4>
  40d088:	mov	x2, x19
  40d08c:	nop
  40d090:	mov	x0, x2
  40d094:	ldr	x2, [x2]
  40d098:	cbnz	x2, 40d090 <split_prereqs@@Base+0x78>
  40d09c:	str	x1, [x0]
  40d0a0:	cbz	x1, 40d050 <split_prereqs@@Base+0x38>
  40d0a4:	nop
  40d0a8:	ldrb	w2, [x1, #33]
  40d0ac:	orr	w2, w2, #0x2
  40d0b0:	strb	w2, [x1, #33]
  40d0b4:	ldr	x1, [x1]
  40d0b8:	cbnz	x1, 40d0a8 <split_prereqs@@Base+0x90>
  40d0bc:	mov	x0, x19
  40d0c0:	ldr	x19, [sp, #16]
  40d0c4:	ldp	x29, x30, [sp], #48
  40d0c8:	ret
  40d0cc:	mov	x19, x0
  40d0d0:	b	40d0a0 <split_prereqs@@Base+0x88>
  40d0d4:	nop

000000000040d0d8 <enter_prereqs@@Base>:
  40d0d8:	stp	x29, x30, [sp, #-96]!
  40d0dc:	mov	x29, sp
  40d0e0:	stp	x19, x20, [sp, #16]
  40d0e4:	stp	x21, x22, [sp, #32]
  40d0e8:	stp	x23, x24, [sp, #48]
  40d0ec:	stp	x25, x26, [sp, #64]
  40d0f0:	stp	x27, x28, [sp, #80]
  40d0f4:	cbz	x0, 40d2a0 <enter_prereqs@@Base+0x1c8>
  40d0f8:	mov	x19, x0
  40d0fc:	mov	x21, x1
  40d100:	cbz	x1, 40d22c <enter_prereqs@@Base+0x154>
  40d104:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40d108:	adrp	x26, 428000 <_IO_stdin_used@@Base+0x1c20>
  40d10c:	add	x0, x0, #0x350
  40d110:	adrp	x25, 428000 <_IO_stdin_used@@Base+0x1c20>
  40d114:	bl	40c1b8 <variable_expand@@Base>
  40d118:	add	x26, x26, #0x6f8
  40d11c:	mov	x22, x0
  40d120:	add	x25, x25, #0x6f9
  40d124:	mov	x23, x19
  40d128:	mov	x24, #0x0                   	// #0
  40d12c:	nop
  40d130:	ldr	x20, [x19, #8]
  40d134:	mov	x0, x20
  40d138:	bl	406680 <strlen@plt>
  40d13c:	add	x3, x0, #0x10
  40d140:	mov	x1, x20
  40d144:	and	x3, x3, #0xfffffffffffffff0
  40d148:	add	x2, x0, #0x1
  40d14c:	sub	sp, sp, x3
  40d150:	mov	x27, sp
  40d154:	mov	x0, x27
  40d158:	bl	406640 <memcpy@plt>
  40d15c:	mov	x0, x27
  40d160:	bl	41b5a0 <find_percent@@Base>
  40d164:	mov	x20, x0
  40d168:	cbz	x0, 40d244 <enter_prereqs@@Base+0x16c>
  40d16c:	ldrb	w2, [x21]
  40d170:	add	x28, x0, #0x1
  40d174:	cbnz	w2, 40d264 <enter_prereqs@@Base+0x18c>
  40d178:	bl	406680 <strlen@plt>
  40d17c:	mov	x2, x0
  40d180:	mov	x1, x28
  40d184:	mov	x0, x20
  40d188:	bl	406650 <memmove@plt>
  40d18c:	mov	x0, x27
  40d190:	bl	406680 <strlen@plt>
  40d194:	add	x2, x0, #0x1
  40d198:	mov	x1, x27
  40d19c:	mov	x0, x22
  40d1a0:	bl	40b848 <variable_buffer_output@@Base>
  40d1a4:	ldrb	w1, [x22]
  40d1a8:	cbnz	w1, 40d234 <enter_prereqs@@Base+0x15c>
  40d1ac:	cmp	x23, x19
  40d1b0:	b.eq	40d294 <enter_prereqs@@Base+0x1bc>  // b.none
  40d1b4:	ldr	x1, [x19]
  40d1b8:	str	x1, [x24]
  40d1bc:	mov	x0, x19
  40d1c0:	mov	x19, x1
  40d1c4:	bl	406b90 <free@plt>
  40d1c8:	cbnz	x19, 40d130 <enter_prereqs@@Base+0x58>
  40d1cc:	cbz	x23, 40d2a0 <enter_prereqs@@Base+0x1c8>
  40d1d0:	mov	x19, x23
  40d1d4:	nop
  40d1d8:	ldrb	w0, [x19, #33]
  40d1dc:	tbnz	w0, #3, 40d200 <enter_prereqs@@Base+0x128>
  40d1e0:	ldr	x0, [x19, #8]
  40d1e4:	bl	40c7a8 <lookup_file@@Base>
  40d1e8:	str	x0, [x19, #16]
  40d1ec:	cbz	x0, 40d284 <enter_prereqs@@Base+0x1ac>
  40d1f0:	ldrb	w0, [x19, #33]
  40d1f4:	str	xzr, [x19, #8]
  40d1f8:	and	w0, w0, #0xfffffffb
  40d1fc:	strb	w0, [x19, #33]
  40d200:	ldr	x19, [x19]
  40d204:	cbnz	x19, 40d1d8 <enter_prereqs@@Base+0x100>
  40d208:	mov	sp, x29
  40d20c:	mov	x0, x23
  40d210:	ldp	x19, x20, [sp, #16]
  40d214:	ldp	x21, x22, [sp, #32]
  40d218:	ldp	x23, x24, [sp, #48]
  40d21c:	ldp	x25, x26, [sp, #64]
  40d220:	ldp	x27, x28, [sp, #80]
  40d224:	ldp	x29, x30, [sp], #96
  40d228:	ret
  40d22c:	mov	x23, x0
  40d230:	b	40d1d0 <enter_prereqs@@Base+0xf8>
  40d234:	sub	x1, x0, x22
  40d238:	mov	x0, x22
  40d23c:	bl	4224d0 <strcache_add_len@@Base>
  40d240:	str	x0, [x19, #8]
  40d244:	ldrb	w0, [x19, #33]
  40d248:	mov	x24, x19
  40d24c:	str	x21, [x19, #24]
  40d250:	orr	w0, w0, #0x4
  40d254:	strb	w0, [x19, #33]
  40d258:	ldr	x19, [x19]
  40d25c:	cbnz	x19, 40d130 <enter_prereqs@@Base+0x58>
  40d260:	b	40d1cc <enter_prereqs@@Base+0xf4>
  40d264:	mov	x5, x28
  40d268:	mov	x3, x27
  40d26c:	mov	x4, x25
  40d270:	mov	x2, x26
  40d274:	mov	x1, x21
  40d278:	mov	x0, x22
  40d27c:	bl	4102d8 <patsubst_expand_pat@@Base>
  40d280:	b	40d1a4 <enter_prereqs@@Base+0xcc>
  40d284:	ldr	x0, [x19, #8]
  40d288:	bl	40c820 <enter_file@@Base>
  40d28c:	str	x0, [x19, #16]
  40d290:	b	40d1f0 <enter_prereqs@@Base+0x118>
  40d294:	ldr	x23, [x23]
  40d298:	mov	x1, x23
  40d29c:	b	40d1bc <enter_prereqs@@Base+0xe4>
  40d2a0:	mov	x23, #0x0                   	// #0
  40d2a4:	b	40d208 <enter_prereqs@@Base+0x130>
  40d2a8:	stp	x29, x30, [sp, #-80]!
  40d2ac:	mov	x29, sp
  40d2b0:	stp	x19, x20, [sp, #16]
  40d2b4:	add	x20, x0, #0x18
  40d2b8:	stp	x21, x22, [sp, #32]
  40d2bc:	mov	x22, x0
  40d2c0:	stp	x25, x26, [sp, #64]
  40d2c4:	ldr	x19, [x0, #24]
  40d2c8:	ldrb	w0, [x0, #137]
  40d2cc:	ldr	x25, [x22, #40]
  40d2d0:	and	w0, w0, #0xfffffffd
  40d2d4:	strb	w0, [x22, #137]
  40d2d8:	cbz	x19, 40d390 <enter_prereqs@@Base+0x2b8>
  40d2dc:	stp	x23, x24, [sp, #48]
  40d2e0:	adrp	x24, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40d2e4:	adrp	x23, 427000 <_IO_stdin_used@@Base+0xc20>
  40d2e8:	add	x24, x24, #0x350
  40d2ec:	add	x23, x23, #0xc60
  40d2f0:	mov	w26, #0x0                   	// #0
  40d2f4:	nop
  40d2f8:	ldr	x21, [x19, #8]
  40d2fc:	cbz	x21, 40d410 <enter_prereqs@@Base+0x338>
  40d300:	ldrb	w0, [x19, #33]
  40d304:	tbz	w0, #3, 40d410 <enter_prereqs@@Base+0x338>
  40d308:	tbnz	w0, #2, 40d3a4 <enter_prereqs@@Base+0x2cc>
  40d30c:	cbz	w26, 40d400 <enter_prereqs@@Base+0x328>
  40d310:	ldr	x0, [x19, #24]
  40d314:	cbz	x0, 40d31c <enter_prereqs@@Base+0x244>
  40d318:	str	x0, [x22, #40]
  40d31c:	mov	x0, x22
  40d320:	bl	409968 <set_file_variables@@Base>
  40d324:	ldr	x0, [x19, #8]
  40d328:	mov	x1, x22
  40d32c:	bl	40c380 <variable_expand_for_file@@Base>
  40d330:	mov	x26, x0
  40d334:	ldr	x1, [x19, #24]
  40d338:	cbz	x1, 40d340 <enter_prereqs@@Base+0x268>
  40d33c:	str	x25, [x22, #40]
  40d340:	mov	x0, x21
  40d344:	bl	406b90 <free@plt>
  40d348:	mov	x0, x26
  40d34c:	bl	40d018 <split_prereqs@@Base>
  40d350:	ldr	x1, [x19, #24]
  40d354:	bl	40d0d8 <enter_prereqs@@Base>
  40d358:	cbz	x0, 40d420 <enter_prereqs@@Base+0x348>
  40d35c:	ldr	x19, [x19]
  40d360:	str	x0, [x20]
  40d364:	ldr	x1, [x0]
  40d368:	cbz	x1, 40d440 <enter_prereqs@@Base+0x368>
  40d36c:	nop
  40d370:	mov	x2, x1
  40d374:	ldr	x1, [x1]
  40d378:	cbnz	x1, 40d370 <enter_prereqs@@Base+0x298>
  40d37c:	mov	x20, x2
  40d380:	str	x19, [x20]
  40d384:	mov	w26, #0x1                   	// #1
  40d388:	cbnz	x19, 40d2f8 <enter_prereqs@@Base+0x220>
  40d38c:	ldp	x23, x24, [sp, #48]
  40d390:	ldp	x19, x20, [sp, #16]
  40d394:	ldp	x21, x22, [sp, #32]
  40d398:	ldp	x25, x26, [sp, #64]
  40d39c:	ldp	x29, x30, [sp], #80
  40d3a0:	ret
  40d3a4:	mov	x0, x24
  40d3a8:	bl	40c1b8 <variable_expand@@Base>
  40d3ac:	mov	x1, x21
  40d3b0:	mov	x3, x23
  40d3b4:	mov	w6, #0x0                   	// #0
  40d3b8:	mov	x5, #0x2                   	// #2
  40d3bc:	mov	x4, #0x1                   	// #1
  40d3c0:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  40d3c4:	add	x2, x2, #0x6f8
  40d3c8:	bl	4100d0 <subst_expand@@Base>
  40d3cc:	mov	x1, x0
  40d3d0:	mov	x0, x21
  40d3d4:	strb	wzr, [x1]
  40d3d8:	bl	406b90 <free@plt>
  40d3dc:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  40d3e0:	ldr	x0, [x0, #1904]
  40d3e4:	bl	418c60 <xstrdup@@Base>
  40d3e8:	str	x0, [x19, #8]
  40d3ec:	ldrb	w1, [x19, #33]
  40d3f0:	mov	x21, x0
  40d3f4:	and	w1, w1, #0xfffffffb
  40d3f8:	strb	w1, [x19, #33]
  40d3fc:	cbnz	w26, 40d310 <enter_prereqs@@Base+0x238>
  40d400:	mov	x0, x22
  40d404:	mov	w1, #0x0                   	// #0
  40d408:	bl	424280 <initialize_file_variables@@Base>
  40d40c:	b	40d310 <enter_prereqs@@Base+0x238>
  40d410:	mov	x20, x19
  40d414:	ldr	x19, [x19]
  40d418:	cbnz	x19, 40d2f8 <enter_prereqs@@Base+0x220>
  40d41c:	b	40d38c <enter_prereqs@@Base+0x2b4>
  40d420:	ldr	x0, [x19]
  40d424:	str	x0, [x20]
  40d428:	mov	x0, x19
  40d42c:	mov	w26, #0x1                   	// #1
  40d430:	bl	406b90 <free@plt>
  40d434:	ldr	x19, [x20]
  40d438:	cbnz	x19, 40d2f8 <enter_prereqs@@Base+0x220>
  40d43c:	b	40d38c <enter_prereqs@@Base+0x2b4>
  40d440:	mov	x20, x0
  40d444:	b	40d380 <enter_prereqs@@Base+0x2a8>

000000000040d448 <expand_extra_prereqs@@Base>:
  40d448:	stp	x29, x30, [sp, #-32]!
  40d44c:	mov	x29, sp
  40d450:	stp	x19, x20, [sp, #16]
  40d454:	cbz	x0, 40d4d0 <expand_extra_prereqs@@Base+0x88>
  40d458:	ldr	x0, [x0, #8]
  40d45c:	bl	40c1b8 <variable_expand@@Base>
  40d460:	bl	40d018 <split_prereqs@@Base>
  40d464:	mov	x20, x0
  40d468:	cbz	x0, 40d4d0 <expand_extra_prereqs@@Base+0x88>
  40d46c:	mov	x19, x0
  40d470:	b	40d48c <expand_extra_prereqs@@Base+0x44>
  40d474:	ldrb	w1, [x19, #33]
  40d478:	str	xzr, [x19, #8]
  40d47c:	orr	w1, w1, #0x10
  40d480:	strb	w1, [x19, #33]
  40d484:	ldr	x19, [x19]
  40d488:	cbz	x19, 40d4c0 <expand_extra_prereqs@@Base+0x78>
  40d48c:	ldr	x0, [x19, #8]
  40d490:	bl	40c7a8 <lookup_file@@Base>
  40d494:	str	x0, [x19, #16]
  40d498:	cbnz	x0, 40d474 <expand_extra_prereqs@@Base+0x2c>
  40d49c:	ldr	x0, [x19, #8]
  40d4a0:	bl	40c820 <enter_file@@Base>
  40d4a4:	str	xzr, [x19, #8]
  40d4a8:	ldrb	w1, [x19, #33]
  40d4ac:	str	x0, [x19, #16]
  40d4b0:	orr	w1, w1, #0x10
  40d4b4:	strb	w1, [x19, #33]
  40d4b8:	ldr	x19, [x19]
  40d4bc:	cbnz	x19, 40d48c <expand_extra_prereqs@@Base+0x44>
  40d4c0:	mov	x0, x20
  40d4c4:	ldp	x19, x20, [sp, #16]
  40d4c8:	ldp	x29, x30, [sp], #32
  40d4cc:	ret
  40d4d0:	mov	x20, #0x0                   	// #0
  40d4d4:	mov	x0, x20
  40d4d8:	ldp	x19, x20, [sp, #16]
  40d4dc:	ldp	x29, x30, [sp], #32
  40d4e0:	ret
  40d4e4:	nop
  40d4e8:	stp	x29, x30, [sp, #-64]!
  40d4ec:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  40d4f0:	mov	x29, sp
  40d4f4:	stp	x21, x22, [sp, #32]
  40d4f8:	mov	x21, x0
  40d4fc:	ldr	w0, [x2, #1996]
  40d500:	cbnz	w0, 40d510 <expand_extra_prereqs@@Base+0xc8>
  40d504:	ldrb	w0, [x21, #137]
  40d508:	and	w0, w0, #0xfffffffd
  40d50c:	strb	w0, [x21, #137]
  40d510:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40d514:	ldr	w0, [x0, #768]
  40d518:	cbz	w0, 40d528 <expand_extra_prereqs@@Base+0xe0>
  40d51c:	ldrb	w0, [x21, #137]
  40d520:	orr	w0, w0, #0x40
  40d524:	strb	w0, [x21, #137]
  40d528:	ldr	x0, [x21, #80]
  40d52c:	cbz	x0, 40d600 <expand_extra_prereqs@@Base+0x1b8>
  40d530:	ldr	x2, [x0, #8]
  40d534:	mov	x1, #0xe                   	// #14
  40d538:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40d53c:	add	x0, x0, #0xc68
  40d540:	bl	423410 <lookup_variable_in_set@@Base>
  40d544:	bl	40d448 <expand_extra_prereqs@@Base>
  40d548:	mov	x22, x0
  40d54c:	cbz	x22, 40d5d8 <expand_extra_prereqs@@Base+0x190>
  40d550:	stp	x19, x20, [sp, #16]
  40d554:	mov	x19, x22
  40d558:	ldr	x20, [x21]
  40d55c:	str	x23, [sp, #48]
  40d560:	add	x23, x20, #0x1
  40d564:	b	40d570 <expand_extra_prereqs@@Base+0x128>
  40d568:	ldr	x19, [x19]
  40d56c:	cbz	x19, 40d5c4 <expand_extra_prereqs@@Base+0x17c>
  40d570:	ldr	x2, [x19, #8]
  40d574:	mov	x1, x2
  40d578:	cbz	x2, 40d5e4 <expand_extra_prereqs@@Base+0x19c>
  40d57c:	cmp	x20, x1
  40d580:	b.eq	40d5ac <expand_extra_prereqs@@Base+0x164>  // b.none
  40d584:	ldrb	w4, [x20]
  40d588:	ldrb	w3, [x1]
  40d58c:	cmp	w3, w4
  40d590:	b.ne	40d568 <expand_extra_prereqs@@Base+0x120>  // b.any
  40d594:	add	x1, x2, #0x1
  40d598:	cbz	w3, 40d5ac <expand_extra_prereqs@@Base+0x164>
  40d59c:	cbz	x2, 40d5f0 <expand_extra_prereqs@@Base+0x1a8>
  40d5a0:	mov	x0, x23
  40d5a4:	bl	406b40 <strcmp@plt>
  40d5a8:	cbnz	w0, 40d568 <expand_extra_prereqs@@Base+0x120>
  40d5ac:	mov	x0, x22
  40d5b0:	ldp	x19, x20, [sp, #16]
  40d5b4:	ldp	x21, x22, [sp, #32]
  40d5b8:	ldr	x23, [sp, #48]
  40d5bc:	ldp	x29, x30, [sp], #64
  40d5c0:	b	418fa0 <free_ns_chain@@Base>
  40d5c4:	ldr	x1, [x21, #24]
  40d5c8:	cbnz	x1, 40d61c <expand_extra_prereqs@@Base+0x1d4>
  40d5cc:	ldp	x19, x20, [sp, #16]
  40d5d0:	ldr	x23, [sp, #48]
  40d5d4:	str	x22, [x21, #24]
  40d5d8:	ldp	x21, x22, [sp, #32]
  40d5dc:	ldp	x29, x30, [sp], #64
  40d5e0:	ret
  40d5e4:	ldr	x0, [x19, #16]
  40d5e8:	ldr	x1, [x0]
  40d5ec:	b	40d57c <expand_extra_prereqs@@Base+0x134>
  40d5f0:	ldr	x0, [x19, #16]
  40d5f4:	ldr	x1, [x0]
  40d5f8:	add	x1, x1, #0x1
  40d5fc:	b	40d5a0 <expand_extra_prereqs@@Base+0x158>
  40d600:	ldrb	w0, [x21, #137]
  40d604:	tbz	w0, #3, 40d5d8 <expand_extra_prereqs@@Base+0x190>
  40d608:	mov	x0, x1
  40d60c:	bl	418ef0 <copy_dep_chain@@Base>
  40d610:	mov	x22, x0
  40d614:	cbnz	x22, 40d550 <expand_extra_prereqs@@Base+0x108>
  40d618:	b	40d5d8 <expand_extra_prereqs@@Base+0x190>
  40d61c:	mov	x0, x1
  40d620:	ldr	x1, [x1]
  40d624:	cbnz	x1, 40d61c <expand_extra_prereqs@@Base+0x1d4>
  40d628:	ldp	x19, x20, [sp, #16]
  40d62c:	ldr	x23, [sp, #48]
  40d630:	str	x22, [x0]
  40d634:	ldp	x21, x22, [sp, #32]
  40d638:	ldp	x29, x30, [sp], #64
  40d63c:	ret

000000000040d640 <snap_deps@@Base>:
  40d640:	stp	x29, x30, [sp, #-64]!
  40d644:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  40d648:	mov	w1, #0x1                   	// #1
  40d64c:	mov	x29, sp
  40d650:	stp	x19, x20, [sp, #16]
  40d654:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  40d658:	add	x19, x19, #0x2a8
  40d65c:	ldr	w0, [x0, #1996]
  40d660:	str	w1, [x19, #92]
  40d664:	cbnz	w0, 40d92c <snap_deps@@Base+0x2ec>
  40d668:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40d66c:	add	x0, x0, #0xc78
  40d670:	bl	40c7a8 <lookup_file@@Base>
  40d674:	mov	x3, x0
  40d678:	cbz	x0, 40d6b4 <snap_deps@@Base+0x74>
  40d67c:	nop
  40d680:	ldr	x2, [x3, #24]
  40d684:	cbz	x2, 40d6ac <snap_deps@@Base+0x6c>
  40d688:	ldr	x0, [x2, #16]
  40d68c:	cbz	x0, 40d6a4 <snap_deps@@Base+0x64>
  40d690:	ldrb	w1, [x0, #136]
  40d694:	orr	w1, w1, #0x20
  40d698:	strb	w1, [x0, #136]
  40d69c:	ldr	x0, [x0, #56]
  40d6a0:	cbnz	x0, 40d690 <snap_deps@@Base+0x50>
  40d6a4:	ldr	x2, [x2]
  40d6a8:	cbnz	x2, 40d688 <snap_deps@@Base+0x48>
  40d6ac:	ldr	x3, [x3, #56]
  40d6b0:	cbnz	x3, 40d680 <snap_deps@@Base+0x40>
  40d6b4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40d6b8:	add	x0, x0, #0xc88
  40d6bc:	bl	40c7a8 <lookup_file@@Base>
  40d6c0:	mov	x3, x0
  40d6c4:	cbz	x0, 40d6fc <snap_deps@@Base+0xbc>
  40d6c8:	ldr	x2, [x3, #24]
  40d6cc:	cbz	x2, 40d6f4 <snap_deps@@Base+0xb4>
  40d6d0:	ldr	x0, [x2, #16]
  40d6d4:	cbz	x0, 40d6ec <snap_deps@@Base+0xac>
  40d6d8:	ldrb	w1, [x0, #136]
  40d6dc:	orr	w1, w1, #0xffffff80
  40d6e0:	strb	w1, [x0, #136]
  40d6e4:	ldr	x0, [x0, #56]
  40d6e8:	cbnz	x0, 40d6d8 <snap_deps@@Base+0x98>
  40d6ec:	ldr	x2, [x2]
  40d6f0:	cbnz	x2, 40d6d0 <snap_deps@@Base+0x90>
  40d6f4:	ldr	x3, [x3, #56]
  40d6f8:	cbnz	x3, 40d6c8 <snap_deps@@Base+0x88>
  40d6fc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40d700:	add	x0, x0, #0xca0
  40d704:	bl	40c7a8 <lookup_file@@Base>
  40d708:	mov	x6, x0
  40d70c:	mov	w4, #0xffffffd7            	// #-41
  40d710:	mov	w3, #0x28                  	// #40
  40d714:	mov	x2, #0x1                   	// #1
  40d718:	cbz	x0, 40d75c <snap_deps@@Base+0x11c>
  40d71c:	nop
  40d720:	ldr	x5, [x6, #24]
  40d724:	cbz	x5, 40d754 <snap_deps@@Base+0x114>
  40d728:	ldr	x0, [x5, #16]
  40d72c:	cbz	x0, 40d74c <snap_deps@@Base+0x10c>
  40d730:	ldrb	w1, [x0, #137]
  40d734:	stp	x2, x2, [x0, #112]
  40d738:	and	w1, w1, w4
  40d73c:	orr	w1, w1, w3
  40d740:	strb	w1, [x0, #137]
  40d744:	ldr	x0, [x0, #56]
  40d748:	cbnz	x0, 40d730 <snap_deps@@Base+0xf0>
  40d74c:	ldr	x5, [x5]
  40d750:	cbnz	x5, 40d728 <snap_deps@@Base+0xe8>
  40d754:	ldr	x6, [x6, #56]
  40d758:	cbnz	x6, 40d720 <snap_deps@@Base+0xe0>
  40d75c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40d760:	add	x0, x0, #0xca8
  40d764:	bl	40c7a8 <lookup_file@@Base>
  40d768:	mov	x3, x0
  40d76c:	cbz	x0, 40d7a4 <snap_deps@@Base+0x164>
  40d770:	ldr	x2, [x3, #24]
  40d774:	cbz	x2, 40d79c <snap_deps@@Base+0x15c>
  40d778:	ldr	x0, [x2, #16]
  40d77c:	cbz	x0, 40d794 <snap_deps@@Base+0x154>
  40d780:	ldrb	w1, [x0, #137]
  40d784:	orr	w1, w1, #0x40
  40d788:	strb	w1, [x0, #137]
  40d78c:	ldr	x0, [x0, #56]
  40d790:	cbnz	x0, 40d780 <snap_deps@@Base+0x140>
  40d794:	ldr	x2, [x2]
  40d798:	cbnz	x2, 40d778 <snap_deps@@Base+0x138>
  40d79c:	ldr	x3, [x3, #56]
  40d7a0:	cbnz	x3, 40d770 <snap_deps@@Base+0x130>
  40d7a4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40d7a8:	add	x0, x0, #0xcb8
  40d7ac:	bl	40c7a8 <lookup_file@@Base>
  40d7b0:	mov	x3, x0
  40d7b4:	cbz	x0, 40d814 <snap_deps@@Base+0x1d4>
  40d7b8:	ldr	w5, [x19, #88]
  40d7bc:	mov	w4, #0x0                   	// #0
  40d7c0:	b	40d7d4 <snap_deps@@Base+0x194>
  40d7c4:	ldr	x3, [x3, #56]
  40d7c8:	mov	w4, #0x1                   	// #1
  40d7cc:	mov	w5, w4
  40d7d0:	cbz	x3, 40d80c <snap_deps@@Base+0x1cc>
  40d7d4:	ldr	x2, [x3, #24]
  40d7d8:	cbz	x2, 40d7c4 <snap_deps@@Base+0x184>
  40d7dc:	nop
  40d7e0:	ldr	x0, [x2, #16]
  40d7e4:	cbz	x0, 40d7fc <snap_deps@@Base+0x1bc>
  40d7e8:	ldrb	w1, [x0, #137]
  40d7ec:	orr	w1, w1, #0xffffffc0
  40d7f0:	strb	w1, [x0, #137]
  40d7f4:	ldr	x0, [x0, #56]
  40d7f8:	cbnz	x0, 40d7e8 <snap_deps@@Base+0x1a8>
  40d7fc:	ldr	x2, [x2]
  40d800:	cbnz	x2, 40d7e0 <snap_deps@@Base+0x1a0>
  40d804:	ldr	x3, [x3, #56]
  40d808:	cbnz	x3, 40d7d4 <snap_deps@@Base+0x194>
  40d80c:	cbz	w4, 40d814 <snap_deps@@Base+0x1d4>
  40d810:	str	w5, [x19, #88]
  40d814:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40d818:	add	x0, x0, #0xcc8
  40d81c:	bl	40c7a8 <lookup_file@@Base>
  40d820:	cbz	x0, 40d82c <snap_deps@@Base+0x1ec>
  40d824:	ldrb	w0, [x0, #137]
  40d828:	tbnz	w0, #3, 40d91c <snap_deps@@Base+0x2dc>
  40d82c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40d830:	add	x0, x0, #0xce0
  40d834:	bl	40c7a8 <lookup_file@@Base>
  40d838:	cbz	x0, 40d874 <snap_deps@@Base+0x234>
  40d83c:	ldrb	w1, [x0, #137]
  40d840:	tbz	w1, #3, 40d874 <snap_deps@@Base+0x234>
  40d844:	ldr	x2, [x0, #24]
  40d848:	cbz	x2, 40d9dc <snap_deps@@Base+0x39c>
  40d84c:	ldr	x0, [x2, #16]
  40d850:	cbz	x0, 40d86c <snap_deps@@Base+0x22c>
  40d854:	nop
  40d858:	ldr	w1, [x0, #132]
  40d85c:	orr	w1, w1, #0x4
  40d860:	str	w1, [x0, #132]
  40d864:	ldr	x0, [x0, #56]
  40d868:	cbnz	x0, 40d858 <snap_deps@@Base+0x218>
  40d86c:	ldr	x2, [x2]
  40d870:	cbnz	x2, 40d84c <snap_deps@@Base+0x20c>
  40d874:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40d878:	add	x0, x0, #0xce8
  40d87c:	bl	40c7a8 <lookup_file@@Base>
  40d880:	cbz	x0, 40d8bc <snap_deps@@Base+0x27c>
  40d884:	ldrb	w1, [x0, #137]
  40d888:	tbz	w1, #3, 40d8bc <snap_deps@@Base+0x27c>
  40d88c:	ldr	x2, [x0, #24]
  40d890:	cbz	x2, 40d9cc <snap_deps@@Base+0x38c>
  40d894:	ldr	x0, [x2, #16]
  40d898:	cbz	x0, 40d8b4 <snap_deps@@Base+0x274>
  40d89c:	nop
  40d8a0:	ldr	w1, [x0, #132]
  40d8a4:	orr	w1, w1, #0x2
  40d8a8:	str	w1, [x0, #132]
  40d8ac:	ldr	x0, [x0, #56]
  40d8b0:	cbnz	x0, 40d8a0 <snap_deps@@Base+0x260>
  40d8b4:	ldr	x2, [x2]
  40d8b8:	cbnz	x2, 40d894 <snap_deps@@Base+0x254>
  40d8bc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40d8c0:	add	x0, x0, #0xcf0
  40d8c4:	bl	40c7a8 <lookup_file@@Base>
  40d8c8:	cbz	x0, 40d8e0 <snap_deps@@Base+0x2a0>
  40d8cc:	ldrb	w0, [x0, #137]
  40d8d0:	tbz	w0, #3, 40d8e0 <snap_deps@@Base+0x2a0>
  40d8d4:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  40d8d8:	mov	w1, #0x1                   	// #1
  40d8dc:	str	w1, [x0, #2020]
  40d8e0:	mov	x1, #0xe                   	// #14
  40d8e4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40d8e8:	add	x0, x0, #0xc68
  40d8ec:	bl	4231f0 <lookup_variable@@Base>
  40d8f0:	bl	40d448 <expand_extra_prereqs@@Base>
  40d8f4:	mov	x20, x0
  40d8f8:	mov	x2, x20
  40d8fc:	mov	x0, x19
  40d900:	adrp	x1, 40d000 <remove_intermediates@@Base+0x260>
  40d904:	add	x1, x1, #0x4e8
  40d908:	bl	411f28 <hash_map_arg@@Base>
  40d90c:	mov	x0, x20
  40d910:	ldp	x19, x20, [sp, #16]
  40d914:	ldp	x29, x30, [sp], #64
  40d918:	b	418fa0 <free_ns_chain@@Base>
  40d91c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  40d920:	mov	w1, #0x1                   	// #1
  40d924:	str	w1, [x0, #2244]
  40d928:	b	40d82c <snap_deps@@Base+0x1ec>
  40d92c:	mov	x2, #0x0                   	// #0
  40d930:	mov	x1, #0x0                   	// #0
  40d934:	mov	x0, x19
  40d938:	stp	x21, x22, [sp, #32]
  40d93c:	mov	x21, #0x0                   	// #0
  40d940:	stp	x23, x24, [sp, #48]
  40d944:	bl	412068 <hash_dump@@Base>
  40d948:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  40d94c:	ldr	x23, [x19, #48]
  40d950:	mov	x24, x0
  40d954:	add	x0, x1, #0x5d0
  40d958:	bl	40c7a8 <lookup_file@@Base>
  40d95c:	mov	x20, x0
  40d960:	add	x23, x24, x23, lsl #3
  40d964:	cbz	x0, 40d97c <snap_deps@@Base+0x33c>
  40d968:	ldr	x21, [x0]
  40d96c:	mov	x0, x20
  40d970:	bl	40d2a8 <enter_prereqs@@Base+0x1d0>
  40d974:	ldr	x20, [x20, #56]
  40d978:	cbnz	x20, 40d96c <snap_deps@@Base+0x32c>
  40d97c:	cmp	x24, x23
  40d980:	mov	x22, x24
  40d984:	b.cs	40d9b8 <snap_deps@@Base+0x378>  // b.hs, b.nlast
  40d988:	ldr	x20, [x22]
  40d98c:	cbz	x20, 40d9ac <snap_deps@@Base+0x36c>
  40d990:	ldr	x1, [x20]
  40d994:	mov	x0, x20
  40d998:	cmp	x1, x21
  40d99c:	b.eq	40d9a4 <snap_deps@@Base+0x364>  // b.none
  40d9a0:	bl	40d2a8 <enter_prereqs@@Base+0x1d0>
  40d9a4:	ldr	x20, [x20, #56]
  40d9a8:	cbnz	x20, 40d990 <snap_deps@@Base+0x350>
  40d9ac:	add	x22, x22, #0x8
  40d9b0:	cmp	x23, x22
  40d9b4:	b.hi	40d988 <snap_deps@@Base+0x348>  // b.pmore
  40d9b8:	mov	x0, x24
  40d9bc:	bl	406b90 <free@plt>
  40d9c0:	ldp	x21, x22, [sp, #32]
  40d9c4:	ldp	x23, x24, [sp, #48]
  40d9c8:	b	40d668 <snap_deps@@Base+0x28>
  40d9cc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40d9d0:	mov	w1, #0x1                   	// #1
  40d9d4:	str	w1, [x0, #3300]
  40d9d8:	b	40d8bc <snap_deps@@Base+0x27c>
  40d9dc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40d9e0:	mov	w1, #0x1                   	// #1
  40d9e4:	str	w1, [x0, #3408]
  40d9e8:	b	40d874 <snap_deps@@Base+0x234>
  40d9ec:	nop

000000000040d9f0 <set_command_state@@Base>:
  40d9f0:	ldrb	w3, [x0, #136]
  40d9f4:	and	w5, w1, #0x3
  40d9f8:	ldr	x2, [x0, #48]
  40d9fc:	bfi	w3, w5, #2, #2
  40da00:	strb	w3, [x0, #136]
  40da04:	cbz	x2, 40da30 <set_command_state@@Base+0x40>
  40da08:	ldr	x3, [x2, #16]
  40da0c:	ldrb	w0, [x3, #136]
  40da10:	mov	w4, w0
  40da14:	ubfx	x0, x0, #2, #2
  40da18:	bfi	w4, w5, #2, #2
  40da1c:	cmp	w0, w1
  40da20:	b.cs	40da28 <set_command_state@@Base+0x38>  // b.hs, b.nlast
  40da24:	strb	w4, [x3, #136]
  40da28:	ldr	x2, [x2]
  40da2c:	cbnz	x2, 40da08 <set_command_state@@Base+0x18>
  40da30:	ret
  40da34:	nop

000000000040da38 <file_timestamp_sprintf@@Base>:
  40da38:	stp	x29, x30, [sp, #-48]!
  40da3c:	mov	x29, sp
  40da40:	stp	x19, x20, [sp, #16]
  40da44:	mov	x20, x1
  40da48:	sub	x1, x1, #0x3
  40da4c:	mov	x19, x0
  40da50:	add	x0, sp, #0x28
  40da54:	lsr	x1, x1, #30
  40da58:	str	x1, [sp, #40]
  40da5c:	bl	406860 <localtime@plt>
  40da60:	cbz	x0, 40daf4 <file_timestamp_sprintf@@Base+0xbc>
  40da64:	mov	x2, x0
  40da68:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40da6c:	mov	x0, x19
  40da70:	add	x1, x1, #0xd00
  40da74:	ldp	w7, w6, [x2]
  40da78:	ldp	w5, w4, [x2, #8]
  40da7c:	ldp	w3, w2, [x2, #16]
  40da80:	add	w3, w3, #0x1
  40da84:	add	w2, w2, #0x76c
  40da88:	bl	406730 <sprintf@plt>
  40da8c:	mov	x0, x19
  40da90:	bl	406680 <strlen@plt>
  40da94:	sub	w2, w20, #0x3
  40da98:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40da9c:	and	w2, w2, #0x3fffffff
  40daa0:	add	x1, x1, #0xd28
  40daa4:	add	x19, x19, x0
  40daa8:	mov	x0, x19
  40daac:	bl	406730 <sprintf@plt>
  40dab0:	mov	x0, x19
  40dab4:	bl	406680 <strlen@plt>
  40dab8:	sub	x0, x0, #0x1
  40dabc:	add	x1, x19, x0
  40dac0:	ldrb	w0, [x19, x0]
  40dac4:	cmp	w0, #0x30
  40dac8:	b.ne	40dadc <file_timestamp_sprintf@@Base+0xa4>  // b.any
  40dacc:	nop
  40dad0:	ldrb	w0, [x1, #-1]!
  40dad4:	cmp	w0, #0x30
  40dad8:	b.eq	40dad0 <file_timestamp_sprintf@@Base+0x98>  // b.none
  40dadc:	cmp	w0, #0x2e
  40dae0:	cset	w0, ne  // ne = any
  40dae4:	strb	wzr, [x1, w0, uxtw]
  40dae8:	ldp	x19, x20, [sp, #16]
  40daec:	ldp	x29, x30, [sp], #48
  40daf0:	ret
  40daf4:	ldr	x2, [sp, #40]
  40daf8:	tbnz	x2, #63, 40db10 <file_timestamp_sprintf@@Base+0xd8>
  40dafc:	mov	x0, x19
  40db00:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  40db04:	add	x1, x1, #0x510
  40db08:	bl	406730 <sprintf@plt>
  40db0c:	b	40da8c <file_timestamp_sprintf@@Base+0x54>
  40db10:	mov	x0, x19
  40db14:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40db18:	add	x1, x1, #0xd20
  40db1c:	bl	406730 <sprintf@plt>
  40db20:	b	40da8c <file_timestamp_sprintf@@Base+0x54>
  40db24:	nop

000000000040db28 <file_timestamp_cons@@Base>:
  40db28:	stp	x29, x30, [sp, #-96]!
  40db2c:	add	w2, w2, #0x3
  40db30:	mov	x3, #0xffffffffffffca02    	// #-13822
  40db34:	mov	x29, sp
  40db38:	sxtw	x2, w2
  40db3c:	stp	x19, x20, [sp, #16]
  40db40:	lsl	x19, x1, #30
  40db44:	adds	x19, x2, x19
  40db48:	mov	x20, x1
  40db4c:	movk	x3, #0xfb9a, lsl #16
  40db50:	ccmp	x19, x3, #0x2, cc  // cc = lo, ul, last
  40db54:	mov	x1, #0x3ffffffff           	// #17179869183
  40db58:	ccmp	x20, x1, #0x2, ls  // ls = plast
  40db5c:	b.ls	40dbd4 <file_timestamp_cons@@Base+0xac>  // b.plast
  40db60:	stp	x21, x22, [sp, #32]
  40db64:	mov	x21, x0
  40db68:	cbz	x0, 40dbe4 <file_timestamp_cons@@Base+0xbc>
  40db6c:	cmp	x20, #0x3
  40db70:	mov	x2, #0xffffffffffffca02    	// #-13822
  40db74:	movk	x2, #0xfb9a, lsl #16
  40db78:	mov	x19, #0x3                   	// #3
  40db7c:	csel	x19, x19, x2, cc  // cc = lo, ul, last
  40db80:	add	x0, sp, #0x30
  40db84:	mov	x1, x19
  40db88:	bl	40da38 <file_timestamp_sprintf@@Base>
  40db8c:	mov	x0, x21
  40db90:	bl	406680 <strlen@plt>
  40db94:	mov	x22, x0
  40db98:	add	x0, sp, #0x30
  40db9c:	bl	406680 <strlen@plt>
  40dba0:	mov	w2, #0x5                   	// #5
  40dba4:	mov	x20, x0
  40dba8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40dbac:	mov	x0, #0x0                   	// #0
  40dbb0:	add	x1, x1, #0xd40
  40dbb4:	bl	406cd0 <dcgettext@plt>
  40dbb8:	mov	x3, x21
  40dbbc:	mov	x2, x0
  40dbc0:	add	x1, x22, x20
  40dbc4:	add	x4, sp, #0x30
  40dbc8:	mov	x0, #0x0                   	// #0
  40dbcc:	bl	419dc8 <error@@Base>
  40dbd0:	ldp	x21, x22, [sp, #32]
  40dbd4:	mov	x0, x19
  40dbd8:	ldp	x19, x20, [sp, #16]
  40dbdc:	ldp	x29, x30, [sp], #96
  40dbe0:	ret
  40dbe4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40dbe8:	mov	w2, #0x5                   	// #5
  40dbec:	add	x1, x1, #0xd30
  40dbf0:	bl	406cd0 <dcgettext@plt>
  40dbf4:	mov	x21, x0
  40dbf8:	b	40db6c <file_timestamp_cons@@Base+0x44>
  40dbfc:	nop

000000000040dc00 <file_timestamp_now@@Base>:
  40dc00:	stp	x29, x30, [sp, #-48]!
  40dc04:	mov	x29, sp
  40dc08:	add	x1, sp, #0x20
  40dc0c:	str	x19, [sp, #16]
  40dc10:	mov	x19, x0
  40dc14:	mov	w0, #0x0                   	// #0
  40dc18:	bl	4067a0 <clock_gettime@plt>
  40dc1c:	cbnz	w0, 40dc44 <file_timestamp_now@@Base+0x44>
  40dc20:	ldrsw	x2, [sp, #40]
  40dc24:	mov	w0, #0x1                   	// #1
  40dc28:	ldr	x1, [sp, #32]
  40dc2c:	str	w0, [x19]
  40dc30:	mov	x0, #0x0                   	// #0
  40dc34:	bl	40db28 <file_timestamp_cons@@Base>
  40dc38:	ldr	x19, [sp, #16]
  40dc3c:	ldp	x29, x30, [sp], #48
  40dc40:	ret
  40dc44:	add	x0, sp, #0x20
  40dc48:	mov	x1, #0x0                   	// #0
  40dc4c:	bl	4069a0 <gettimeofday@plt>
  40dc50:	cbnz	w0, 40dc80 <file_timestamp_now@@Base+0x80>
  40dc54:	ldp	x1, x2, [sp, #32]
  40dc58:	mov	w3, #0x3e8                 	// #1000
  40dc5c:	mov	w0, w3
  40dc60:	str	w0, [x19]
  40dc64:	mov	x0, #0x0                   	// #0
  40dc68:	mul	w2, w2, w3
  40dc6c:	sxtw	x2, w2
  40dc70:	bl	40db28 <file_timestamp_cons@@Base>
  40dc74:	ldr	x19, [sp, #16]
  40dc78:	ldp	x29, x30, [sp], #48
  40dc7c:	ret
  40dc80:	mov	x0, #0x0                   	// #0
  40dc84:	bl	4068c0 <time@plt>
  40dc88:	mov	x1, x0
  40dc8c:	mov	w0, #0xca00                	// #51712
  40dc90:	movk	w0, #0x3b9a, lsl #16
  40dc94:	str	w0, [x19]
  40dc98:	mov	x2, #0x0                   	// #0
  40dc9c:	mov	x0, #0x0                   	// #0
  40dca0:	bl	40db28 <file_timestamp_cons@@Base>
  40dca4:	ldr	x19, [sp, #16]
  40dca8:	ldp	x29, x30, [sp], #48
  40dcac:	ret

000000000040dcb0 <print_prereqs@@Base>:
  40dcb0:	cbz	x0, 40dd8c <print_prereqs@@Base+0xdc>
  40dcb4:	stp	x29, x30, [sp, #-48]!
  40dcb8:	mov	x29, sp
  40dcbc:	stp	x19, x20, [sp, #16]
  40dcc0:	mov	x19, x0
  40dcc4:	mov	x20, #0x0                   	// #0
  40dcc8:	str	x21, [sp, #32]
  40dccc:	adrp	x21, 427000 <_IO_stdin_used@@Base+0xc20>
  40dcd0:	add	x21, x21, #0xd68
  40dcd4:	nop
  40dcd8:	ldrb	w1, [x19, #33]
  40dcdc:	mov	x0, x21
  40dce0:	tbnz	w1, #1, 40dd74 <print_prereqs@@Base+0xc4>
  40dce4:	ldr	x1, [x19, #8]
  40dce8:	cbz	x1, 40dd5c <print_prereqs@@Base+0xac>
  40dcec:	bl	406d60 <printf@plt>
  40dcf0:	ldr	x19, [x19]
  40dcf4:	cbnz	x19, 40dcd8 <print_prereqs@@Base+0x28>
  40dcf8:	cbz	x20, 40dd40 <print_prereqs@@Base+0x90>
  40dcfc:	ldr	x1, [x20, #8]
  40dd00:	cbz	x1, 40dd80 <print_prereqs@@Base+0xd0>
  40dd04:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40dd08:	add	x0, x0, #0xd70
  40dd0c:	bl	406d60 <printf@plt>
  40dd10:	ldr	x19, [x20]
  40dd14:	cbz	x19, 40dd40 <print_prereqs@@Base+0x90>
  40dd18:	adrp	x20, 427000 <_IO_stdin_used@@Base+0xc20>
  40dd1c:	add	x20, x20, #0xd68
  40dd20:	ldrb	w1, [x19, #33]
  40dd24:	mov	x0, x20
  40dd28:	tbz	w1, #1, 40dd38 <print_prereqs@@Base+0x88>
  40dd2c:	ldr	x1, [x19, #8]
  40dd30:	cbz	x1, 40dd68 <print_prereqs@@Base+0xb8>
  40dd34:	bl	406d60 <printf@plt>
  40dd38:	ldr	x19, [x19]
  40dd3c:	cbnz	x19, 40dd20 <print_prereqs@@Base+0x70>
  40dd40:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40dd44:	mov	w0, #0xa                   	// #10
  40dd48:	ldp	x19, x20, [sp, #16]
  40dd4c:	ldr	x21, [sp, #32]
  40dd50:	ldp	x29, x30, [sp], #48
  40dd54:	ldr	x1, [x1, #384]
  40dd58:	b	406740 <putc@plt>
  40dd5c:	ldr	x1, [x19, #16]
  40dd60:	ldr	x1, [x1]
  40dd64:	b	40dcec <print_prereqs@@Base+0x3c>
  40dd68:	ldr	x1, [x19, #16]
  40dd6c:	ldr	x1, [x1]
  40dd70:	b	40dd34 <print_prereqs@@Base+0x84>
  40dd74:	cmp	x20, #0x0
  40dd78:	csel	x20, x20, x19, ne  // ne = any
  40dd7c:	b	40dcf0 <print_prereqs@@Base+0x40>
  40dd80:	ldr	x0, [x20, #16]
  40dd84:	ldr	x1, [x0]
  40dd88:	b	40dd04 <print_prereqs@@Base+0x54>
  40dd8c:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40dd90:	mov	w0, #0xa                   	// #10
  40dd94:	ldr	x1, [x1, #384]
  40dd98:	b	406740 <putc@plt>
  40dd9c:	nop
  40dda0:	stp	x29, x30, [sp, #-96]!
  40dda4:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  40dda8:	mov	x29, sp
  40ddac:	stp	x19, x20, [sp, #16]
  40ddb0:	mov	x19, x0
  40ddb4:	ldr	w0, [x1, #3340]
  40ddb8:	cbz	w0, 40ddc4 <print_prereqs@@Base+0x114>
  40ddbc:	ldrb	w0, [x19, #136]
  40ddc0:	tbnz	w0, #4, 40dfdc <print_prereqs@@Base+0x32c>
  40ddc4:	stp	x21, x22, [sp, #32]
  40ddc8:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  40ddcc:	mov	w0, #0xa                   	// #10
  40ddd0:	ldr	x1, [x22, #384]
  40ddd4:	bl	406740 <putc@plt>
  40ddd8:	ldr	x0, [x19, #32]
  40dddc:	cbz	x0, 40ddf4 <print_prereqs@@Base+0x144>
  40dde0:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  40dde4:	ldrb	w1, [x0, #50]
  40dde8:	ldrb	w0, [x20, #148]
  40ddec:	cmp	w1, w0
  40ddf0:	b.ne	40e000 <print_prereqs@@Base+0x350>  // b.any
  40ddf4:	ldr	x0, [x19, #80]
  40ddf8:	cbz	x0, 40de04 <print_prereqs@@Base+0x154>
  40ddfc:	mov	x0, x19
  40de00:	bl	424960 <print_target_variables@@Base>
  40de04:	ldrb	w0, [x19, #137]
  40de08:	tbz	w0, #3, 40e168 <print_prereqs@@Base+0x4b8>
  40de0c:	ldr	x0, [x19, #104]
  40de10:	adrp	x3, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40de14:	ldr	x1, [x19]
  40de18:	cmp	x0, #0x0
  40de1c:	add	x3, x3, #0x350
  40de20:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  40de24:	add	x2, x2, #0xab8
  40de28:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40de2c:	csel	x2, x2, x3, ne  // ne = any
  40de30:	add	x0, x0, #0xda0
  40de34:	bl	406d60 <printf@plt>
  40de38:	ldr	x0, [x19, #24]
  40de3c:	bl	40dcb0 <print_prereqs@@Base>
  40de40:	ldrb	w0, [x19, #136]
  40de44:	tbnz	w0, #5, 40e14c <print_prereqs@@Base+0x49c>
  40de48:	ldrb	w0, [x19, #137]
  40de4c:	tbnz	w0, #5, 40e044 <print_prereqs@@Base+0x394>
  40de50:	tbnz	w0, #4, 40e064 <print_prereqs@@Base+0x3b4>
  40de54:	ldrb	w0, [x19, #138]
  40de58:	tbnz	w0, #0, 40e084 <print_prereqs@@Base+0x3d4>
  40de5c:	ldrb	w0, [x19, #136]
  40de60:	tbnz	w0, #4, 40e0a4 <print_prereqs@@Base+0x3f4>
  40de64:	ldrb	w0, [x19, #137]
  40de68:	tbnz	w0, #0, 40dfe8 <print_prereqs@@Base+0x338>
  40de6c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40de70:	mov	w2, #0x5                   	// #5
  40de74:	add	x1, x1, #0xe90
  40de78:	mov	x0, #0x0                   	// #0
  40de7c:	bl	406cd0 <dcgettext@plt>
  40de80:	bl	406ae0 <puts@plt>
  40de84:	ldr	x0, [x19, #40]
  40de88:	cbz	x0, 40dea8 <print_prereqs@@Base+0x1f8>
  40de8c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40de90:	mov	w2, #0x5                   	// #5
  40de94:	add	x1, x1, #0xec0
  40de98:	mov	x0, #0x0                   	// #0
  40de9c:	bl	406cd0 <dcgettext@plt>
  40dea0:	ldr	x1, [x19, #40]
  40dea4:	bl	406d60 <printf@plt>
  40dea8:	ldrb	w0, [x19, #137]
  40deac:	tbnz	w0, #6, 40e1a0 <print_prereqs@@Base+0x4f0>
  40deb0:	ldr	x0, [x19, #48]
  40deb4:	cbz	x0, 40df20 <print_prereqs@@Base+0x270>
  40deb8:	mov	w2, #0x5                   	// #5
  40debc:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40dec0:	mov	x0, #0x0                   	// #0
  40dec4:	add	x1, x1, #0xf18
  40dec8:	bl	406cd0 <dcgettext@plt>
  40decc:	adrp	x21, 427000 <_IO_stdin_used@@Base+0xc20>
  40ded0:	ldr	x1, [x22, #384]
  40ded4:	add	x21, x21, #0xd68
  40ded8:	bl	406690 <fputs@plt>
  40dedc:	ldr	x20, [x19, #48]
  40dee0:	cbnz	x20, 40def4 <print_prereqs@@Base+0x244>
  40dee4:	b	40df14 <print_prereqs@@Base+0x264>
  40dee8:	bl	406d60 <printf@plt>
  40deec:	ldr	x20, [x20]
  40def0:	cbz	x20, 40df14 <print_prereqs@@Base+0x264>
  40def4:	ldr	x1, [x20, #8]
  40def8:	mov	x0, x21
  40defc:	cbnz	x1, 40dee8 <print_prereqs@@Base+0x238>
  40df00:	ldr	x1, [x20, #16]
  40df04:	ldr	x1, [x1]
  40df08:	bl	406d60 <printf@plt>
  40df0c:	ldr	x20, [x20]
  40df10:	cbnz	x20, 40def4 <print_prereqs@@Base+0x244>
  40df14:	ldr	x1, [x22, #384]
  40df18:	mov	w0, #0xa                   	// #10
  40df1c:	bl	406740 <putc@plt>
  40df20:	ldr	x1, [x19, #112]
  40df24:	cbz	x1, 40e184 <print_prereqs@@Base+0x4d4>
  40df28:	cmp	x1, #0x1
  40df2c:	b.eq	40e228 <print_prereqs@@Base+0x578>  // b.none
  40df30:	cmp	x1, #0x2
  40df34:	b.eq	40e20c <print_prereqs@@Base+0x55c>  // b.none
  40df38:	add	x0, sp, #0x30
  40df3c:	bl	40da38 <file_timestamp_sprintf@@Base>
  40df40:	mov	w2, #0x5                   	// #5
  40df44:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40df48:	mov	x0, #0x0                   	// #0
  40df4c:	add	x1, x1, #0xf80
  40df50:	bl	406cd0 <dcgettext@plt>
  40df54:	add	x1, sp, #0x30
  40df58:	bl	406d60 <printf@plt>
  40df5c:	ldrb	w0, [x19, #137]
  40df60:	tbz	w0, #2, 40e0c0 <print_prereqs@@Base+0x410>
  40df64:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40df68:	add	x1, x1, #0xf98
  40df6c:	mov	w2, #0x5                   	// #5
  40df70:	mov	x0, #0x0                   	// #0
  40df74:	bl	406cd0 <dcgettext@plt>
  40df78:	bl	406ae0 <puts@plt>
  40df7c:	ldrb	w1, [x19, #136]
  40df80:	ubfx	x0, x1, #2, #2
  40df84:	cmp	w0, #0x2
  40df88:	b.eq	40e0e8 <print_prereqs@@Base+0x438>  // b.none
  40df8c:	cmp	w0, #0x3
  40df90:	b.eq	40e114 <print_prereqs@@Base+0x464>  // b.none
  40df94:	cbz	w0, 40e114 <print_prereqs@@Base+0x464>
  40df98:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40df9c:	add	x1, x1, #0x8
  40dfa0:	mov	w2, #0x5                   	// #5
  40dfa4:	mov	x0, #0x0                   	// #0
  40dfa8:	bl	406cd0 <dcgettext@plt>
  40dfac:	bl	406ae0 <puts@plt>
  40dfb0:	ldr	x0, [x19, #80]
  40dfb4:	cbz	x0, 40dfc0 <print_prereqs@@Base+0x310>
  40dfb8:	mov	x0, x19
  40dfbc:	bl	424940 <print_file_variables@@Base>
  40dfc0:	ldr	x0, [x19, #32]
  40dfc4:	cbz	x0, 40dfcc <print_prereqs@@Base+0x31c>
  40dfc8:	bl	40a640 <print_commands@@Base>
  40dfcc:	ldr	x0, [x19, #56]
  40dfd0:	cbz	x0, 40e104 <print_prereqs@@Base+0x454>
  40dfd4:	bl	40dda0 <print_prereqs@@Base+0xf0>
  40dfd8:	ldp	x21, x22, [sp, #32]
  40dfdc:	ldp	x19, x20, [sp, #16]
  40dfe0:	ldp	x29, x30, [sp], #96
  40dfe4:	ret
  40dfe8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40dfec:	mov	w2, #0x5                   	// #5
  40dff0:	add	x1, x1, #0xe68
  40dff4:	mov	x0, #0x0                   	// #0
  40dff8:	bl	406cd0 <dcgettext@plt>
  40dffc:	b	40de80 <print_prereqs@@Base+0x1d0>
  40e000:	ldr	x3, [x22, #384]
  40e004:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  40e008:	mov	x2, #0x10                  	// #16
  40e00c:	add	x0, x0, #0xd78
  40e010:	mov	x1, #0x1                   	// #1
  40e014:	bl	406be0 <fwrite@plt>
  40e018:	ldr	x0, [x19, #32]
  40e01c:	ldrb	w0, [x0, #50]
  40e020:	strb	w0, [x20, #148]
  40e024:	cmp	w0, #0x9
  40e028:	b.ne	40e1bc <print_prereqs@@Base+0x50c>  // b.any
  40e02c:	ldr	x1, [x22, #384]
  40e030:	mov	w0, #0xa                   	// #10
  40e034:	bl	406740 <putc@plt>
  40e038:	ldr	x0, [x19, #80]
  40e03c:	cbnz	x0, 40ddfc <print_prereqs@@Base+0x14c>
  40e040:	b	40de04 <print_prereqs@@Base+0x154>
  40e044:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e048:	add	x1, x1, #0xdd8
  40e04c:	mov	w2, #0x5                   	// #5
  40e050:	mov	x0, #0x0                   	// #0
  40e054:	bl	406cd0 <dcgettext@plt>
  40e058:	bl	406ae0 <puts@plt>
  40e05c:	ldrb	w0, [x19, #137]
  40e060:	tbz	w0, #4, 40de54 <print_prereqs@@Base+0x1a4>
  40e064:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e068:	add	x1, x1, #0xe08
  40e06c:	mov	w2, #0x5                   	// #5
  40e070:	mov	x0, #0x0                   	// #0
  40e074:	bl	406cd0 <dcgettext@plt>
  40e078:	bl	406ae0 <puts@plt>
  40e07c:	ldrb	w0, [x19, #138]
  40e080:	tbz	w0, #0, 40de5c <print_prereqs@@Base+0x1ac>
  40e084:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e088:	add	x1, x1, #0xe20
  40e08c:	mov	w2, #0x5                   	// #5
  40e090:	mov	x0, #0x0                   	// #0
  40e094:	bl	406cd0 <dcgettext@plt>
  40e098:	bl	406ae0 <puts@plt>
  40e09c:	ldrb	w0, [x19, #136]
  40e0a0:	tbz	w0, #4, 40de64 <print_prereqs@@Base+0x1b4>
  40e0a4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e0a8:	add	x1, x1, #0xe58
  40e0ac:	mov	w2, #0x5                   	// #5
  40e0b0:	mov	x0, #0x0                   	// #0
  40e0b4:	bl	406cd0 <dcgettext@plt>
  40e0b8:	bl	406ae0 <puts@plt>
  40e0bc:	b	40de64 <print_prereqs@@Base+0x1b4>
  40e0c0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e0c4:	add	x1, x1, #0xfb8
  40e0c8:	mov	w2, #0x5                   	// #5
  40e0cc:	mov	x0, #0x0                   	// #0
  40e0d0:	bl	406cd0 <dcgettext@plt>
  40e0d4:	bl	406ae0 <puts@plt>
  40e0d8:	ldrb	w1, [x19, #136]
  40e0dc:	ubfx	x0, x1, #2, #2
  40e0e0:	cmp	w0, #0x2
  40e0e4:	b.ne	40df8c <print_prereqs@@Base+0x2dc>  // b.any
  40e0e8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e0ec:	add	x1, x1, #0xfd8
  40e0f0:	mov	w2, #0x5                   	// #5
  40e0f4:	mov	x0, #0x0                   	// #0
  40e0f8:	bl	406cd0 <dcgettext@plt>
  40e0fc:	bl	406ae0 <puts@plt>
  40e100:	b	40dfb0 <print_prereqs@@Base+0x300>
  40e104:	ldp	x19, x20, [sp, #16]
  40e108:	ldp	x21, x22, [sp, #32]
  40e10c:	ldp	x29, x30, [sp], #96
  40e110:	ret
  40e114:	and	w1, w1, #0x3
  40e118:	cmp	w1, #0x2
  40e11c:	b.eq	40e1f0 <print_prereqs@@Base+0x540>  // b.none
  40e120:	cmp	w1, #0x3
  40e124:	b.eq	40e1d4 <print_prereqs@@Base+0x524>  // b.none
  40e128:	cmp	w1, #0x1
  40e12c:	b.eq	40dfb0 <print_prereqs@@Base+0x300>  // b.none
  40e130:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40e134:	add	x1, x1, #0x38
  40e138:	mov	w2, #0x5                   	// #5
  40e13c:	mov	x0, #0x0                   	// #0
  40e140:	bl	406cd0 <dcgettext@plt>
  40e144:	bl	406ae0 <puts@plt>
  40e148:	b	40dfb0 <print_prereqs@@Base+0x300>
  40e14c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e150:	add	x1, x1, #0xda8
  40e154:	mov	w2, #0x5                   	// #5
  40e158:	mov	x0, #0x0                   	// #0
  40e15c:	bl	406cd0 <dcgettext@plt>
  40e160:	bl	406ae0 <puts@plt>
  40e164:	b	40de48 <print_prereqs@@Base+0x198>
  40e168:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e16c:	add	x1, x1, #0xd90
  40e170:	mov	w2, #0x5                   	// #5
  40e174:	mov	x0, #0x0                   	// #0
  40e178:	bl	406cd0 <dcgettext@plt>
  40e17c:	bl	406ae0 <puts@plt>
  40e180:	b	40de0c <print_prereqs@@Base+0x15c>
  40e184:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e188:	add	x1, x1, #0xf28
  40e18c:	mov	w2, #0x5                   	// #5
  40e190:	mov	x0, #0x0                   	// #0
  40e194:	bl	406cd0 <dcgettext@plt>
  40e198:	bl	406ae0 <puts@plt>
  40e19c:	b	40df5c <print_prereqs@@Base+0x2ac>
  40e1a0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e1a4:	add	x1, x1, #0xee8
  40e1a8:	mov	w2, #0x5                   	// #5
  40e1ac:	mov	x0, #0x0                   	// #0
  40e1b0:	bl	406cd0 <dcgettext@plt>
  40e1b4:	bl	406ae0 <puts@plt>
  40e1b8:	b	40deb0 <print_prereqs@@Base+0x200>
  40e1bc:	ldr	x1, [x22, #384]
  40e1c0:	bl	406740 <putc@plt>
  40e1c4:	ldr	x1, [x22, #384]
  40e1c8:	mov	w0, #0xa                   	// #10
  40e1cc:	bl	406740 <putc@plt>
  40e1d0:	b	40e038 <print_prereqs@@Base+0x388>
  40e1d4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40e1d8:	add	x1, x1, #0x80
  40e1dc:	mov	w2, #0x5                   	// #5
  40e1e0:	mov	x0, #0x0                   	// #0
  40e1e4:	bl	406cd0 <dcgettext@plt>
  40e1e8:	bl	406ae0 <puts@plt>
  40e1ec:	b	40dfb0 <print_prereqs@@Base+0x300>
  40e1f0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40e1f4:	add	x1, x1, #0x58
  40e1f8:	mov	w2, #0x5                   	// #5
  40e1fc:	mov	x0, #0x0                   	// #0
  40e200:	bl	406cd0 <dcgettext@plt>
  40e204:	bl	406ae0 <puts@plt>
  40e208:	b	40dfb0 <print_prereqs@@Base+0x300>
  40e20c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e210:	add	x1, x1, #0xf68
  40e214:	mov	w2, #0x5                   	// #5
  40e218:	mov	x0, #0x0                   	// #0
  40e21c:	bl	406cd0 <dcgettext@plt>
  40e220:	bl	406ae0 <puts@plt>
  40e224:	b	40df5c <print_prereqs@@Base+0x2ac>
  40e228:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40e22c:	add	x1, x1, #0xf50
  40e230:	mov	w2, #0x5                   	// #5
  40e234:	mov	x0, #0x0                   	// #0
  40e238:	bl	406cd0 <dcgettext@plt>
  40e23c:	bl	406ae0 <puts@plt>
  40e240:	b	40df5c <print_prereqs@@Base+0x2ac>
  40e244:	nop

000000000040e248 <print_file_data_base@@Base>:
  40e248:	stp	x29, x30, [sp, #-32]!
  40e24c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40e250:	add	x1, x1, #0xa0
  40e254:	mov	w2, #0x5                   	// #5
  40e258:	mov	x29, sp
  40e25c:	mov	x0, #0x0                   	// #0
  40e260:	stp	x19, x20, [sp, #16]
  40e264:	bl	406cd0 <dcgettext@plt>
  40e268:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  40e26c:	bl	406ae0 <puts@plt>
  40e270:	add	x19, x19, #0x2a8
  40e274:	mov	x0, x19
  40e278:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  40e27c:	adrp	x1, 40d000 <remove_intermediates@@Base+0x260>
  40e280:	add	x1, x1, #0xda0
  40e284:	bl	411ec0 <hash_map@@Base>
  40e288:	mov	w2, #0x5                   	// #5
  40e28c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40e290:	mov	x0, #0x0                   	// #0
  40e294:	add	x1, x1, #0xb0
  40e298:	bl	406cd0 <dcgettext@plt>
  40e29c:	ldr	x1, [x20, #384]
  40e2a0:	bl	406690 <fputs@plt>
  40e2a4:	ldr	x1, [x20, #384]
  40e2a8:	mov	x0, x19
  40e2ac:	ldp	x19, x20, [sp, #16]
  40e2b0:	ldp	x29, x30, [sp], #32
  40e2b4:	b	411fa0 <hash_print_stats@@Base>

000000000040e2b8 <verify_file_data_base@@Base>:
  40e2b8:	adrp	x1, 40c000 <variable_expand_string@@Base+0x600>
  40e2bc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40e2c0:	add	x1, x1, #0x4c8
  40e2c4:	add	x0, x0, #0x2a8
  40e2c8:	b	411ec0 <hash_map@@Base>
  40e2cc:	nop

000000000040e2d0 <build_target_list@@Base>:
  40e2d0:	stp	x29, x30, [sp, #-112]!
  40e2d4:	mov	x29, sp
  40e2d8:	stp	x19, x20, [sp, #16]
  40e2dc:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  40e2e0:	stp	x27, x28, [sp, #80]
  40e2e4:	add	x27, x19, #0x2a8
  40e2e8:	stp	x21, x22, [sp, #32]
  40e2ec:	mov	x21, x0
  40e2f0:	ldr	x2, [x27, #48]
  40e2f4:	ldr	x1, [x27, #96]
  40e2f8:	cmp	x2, x1
  40e2fc:	b.ne	40e318 <build_target_list@@Base+0x48>  // b.any
  40e300:	mov	x0, x21
  40e304:	ldp	x19, x20, [sp, #16]
  40e308:	ldp	x21, x22, [sp, #32]
  40e30c:	ldp	x27, x28, [sp, #80]
  40e310:	ldp	x29, x30, [sp], #112
  40e314:	ret
  40e318:	stp	x23, x24, [sp, #48]
  40e31c:	stp	x25, x26, [sp, #64]
  40e320:	bl	406680 <strlen@plt>
  40e324:	mov	x26, #0xf7cf                	// #63439
  40e328:	mov	x1, x0
  40e32c:	movk	x26, #0xe353, lsl #16
  40e330:	movk	x26, #0x9ba5, lsl #32
  40e334:	mov	x0, x21
  40e338:	lsr	x1, x1, #2
  40e33c:	movk	x26, #0x20c4, lsl #48
  40e340:	ldr	x19, [x19, #680]
  40e344:	umulh	x1, x1, x26
  40e348:	ldr	x23, [x27, #32]
  40e34c:	lsr	x1, x1, #4
  40e350:	add	x1, x1, #0x1
  40e354:	add	x23, x19, x23, lsl #3
  40e358:	lsl	x24, x1, #5
  40e35c:	sub	x24, x24, x1
  40e360:	add	x24, x1, x24, lsl #2
  40e364:	lsl	x24, x24, #2
  40e368:	mov	x1, x24
  40e36c:	bl	418aa0 <xrealloc@@Base>
  40e370:	cmp	x19, x23
  40e374:	mov	x21, x0
  40e378:	b.cs	40e46c <build_target_list@@Base+0x19c>  // b.hs, b.nlast
  40e37c:	mov	x22, x0
  40e380:	mov	x25, #0x0                   	// #0
  40e384:	str	x26, [sp, #104]
  40e388:	adrp	x26, 443000 <expanding_var@@Base+0x338>
  40e38c:	nop
  40e390:	ldr	x20, [x19]
  40e394:	add	x19, x19, #0x8
  40e398:	cbz	x20, 40e3f0 <build_target_list@@Base+0x120>
  40e39c:	ldr	x0, [x26, #48]
  40e3a0:	cmp	x20, x0
  40e3a4:	b.eq	40e3f0 <build_target_list@@Base+0x120>  // b.none
  40e3a8:	ldrb	w0, [x20, #137]
  40e3ac:	tbz	w0, #3, 40e3f0 <build_target_list@@Base+0x120>
  40e3b0:	ldr	x1, [x20]
  40e3b4:	add	x25, x25, #0x1
  40e3b8:	str	x1, [sp, #96]
  40e3bc:	mov	x0, x1
  40e3c0:	bl	406680 <strlen@plt>
  40e3c4:	add	x25, x25, x0
  40e3c8:	mov	x28, x0
  40e3cc:	cmp	x25, x24
  40e3d0:	ldr	x1, [sp, #96]
  40e3d4:	b.hi	40e424 <build_target_list@@Base+0x154>  // b.pmore
  40e3d8:	mov	x0, x22
  40e3dc:	add	x22, x22, x28
  40e3e0:	mov	x2, x28
  40e3e4:	bl	406640 <memcpy@plt>
  40e3e8:	mov	w0, #0x20                  	// #32
  40e3ec:	strb	w0, [x22], #1
  40e3f0:	cmp	x23, x19
  40e3f4:	b.hi	40e390 <build_target_list@@Base+0xc0>  // b.pmore
  40e3f8:	sturb	wzr, [x22, #-1]
  40e3fc:	ldr	x0, [x27, #48]
  40e400:	str	x0, [x27, #96]
  40e404:	mov	x0, x21
  40e408:	ldp	x19, x20, [sp, #16]
  40e40c:	ldp	x21, x22, [sp, #32]
  40e410:	ldp	x23, x24, [sp, #48]
  40e414:	ldp	x25, x26, [sp, #64]
  40e418:	ldp	x27, x28, [sp, #80]
  40e41c:	ldp	x29, x30, [sp], #112
  40e420:	ret
  40e424:	add	x1, x0, #0x1
  40e428:	sub	x22, x22, x21
  40e42c:	ldr	x2, [sp, #104]
  40e430:	lsr	x1, x1, #2
  40e434:	mov	x0, x21
  40e438:	umulh	x1, x1, x2
  40e43c:	lsr	x1, x1, #4
  40e440:	add	x1, x1, #0x1
  40e444:	lsl	x2, x1, #5
  40e448:	sub	x2, x2, x1
  40e44c:	add	x1, x1, x2, lsl #2
  40e450:	add	x24, x24, x1, lsl #2
  40e454:	mov	x1, x24
  40e458:	bl	418aa0 <xrealloc@@Base>
  40e45c:	mov	x21, x0
  40e460:	add	x22, x0, x22
  40e464:	ldr	x1, [x20]
  40e468:	b	40e3d8 <build_target_list@@Base+0x108>
  40e46c:	mov	x22, x0
  40e470:	b	40e3f8 <build_target_list@@Base+0x128>
  40e474:	nop

000000000040e478 <init_hash_files@@Base>:
  40e478:	adrp	x4, 40c000 <variable_expand_string@@Base+0x600>
  40e47c:	adrp	x3, 40c000 <variable_expand_string@@Base+0x600>
  40e480:	add	x4, x4, #0x4a8
  40e484:	add	x3, x3, #0x4a0
  40e488:	adrp	x2, 40c000 <variable_expand_string@@Base+0x600>
  40e48c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40e490:	add	x2, x2, #0x788
  40e494:	add	x0, x0, #0x2a8
  40e498:	mov	x1, #0x3e8                 	// #1000
  40e49c:	b	411928 <hash_init@@Base>
  40e4a0:	mov	x0, #0x0                   	// #0
  40e4a4:	ret
  40e4a8:	stp	x29, x30, [sp, #-48]!
  40e4ac:	mov	x29, sp
  40e4b0:	stp	x19, x20, [sp, #16]
  40e4b4:	ldr	x19, [x1]
  40e4b8:	mov	x1, x0
  40e4bc:	ldrb	w3, [x19]
  40e4c0:	cbz	w3, 40e554 <init_hash_files@@Base+0xdc>
  40e4c4:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  40e4c8:	add	x20, x20, #0x448
  40e4cc:	str	x21, [sp, #32]
  40e4d0:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x2c20>
  40e4d4:	add	x21, x21, #0xb18
  40e4d8:	mov	w5, #0x0                   	// #0
  40e4dc:	nop
  40e4e0:	sxtw	x4, w3
  40e4e4:	ldrh	w1, [x20, x4, lsl #1]
  40e4e8:	tst	w1, #0x6
  40e4ec:	b.eq	40e504 <init_hash_files@@Base+0x8c>  // b.none
  40e4f0:	ldrb	w4, [x19, #1]!
  40e4f4:	ldrh	w1, [x20, x4, lsl #1]
  40e4f8:	tst	w1, #0x6
  40e4fc:	b.ne	40e4f0 <init_hash_files@@Base+0x78>  // b.any
  40e500:	cbz	w4, 40e564 <init_hash_files@@Base+0xec>
  40e504:	mov	x1, x19
  40e508:	mov	w2, #0x0                   	// #0
  40e50c:	b	40e51c <init_hash_files@@Base+0xa4>
  40e510:	ldrb	w4, [x19, #1]!
  40e514:	add	w2, w2, #0x1
  40e518:	cbz	w4, 40e52c <init_hash_files@@Base+0xb4>
  40e51c:	ldrh	w3, [x20, x4, lsl #1]
  40e520:	tst	w3, #0x6
  40e524:	b.eq	40e510 <init_hash_files@@Base+0x98>  // b.none
  40e528:	cbz	w2, 40e564 <init_hash_files@@Base+0xec>
  40e52c:	sxtw	x2, w2
  40e530:	bl	40b848 <variable_buffer_output@@Base>
  40e534:	mov	x1, x21
  40e538:	mov	x2, #0x1                   	// #1
  40e53c:	bl	40b848 <variable_buffer_output@@Base>
  40e540:	ldrb	w3, [x19]
  40e544:	mov	w5, #0x1                   	// #1
  40e548:	cbnz	w3, 40e4e0 <init_hash_files@@Base+0x68>
  40e54c:	ldr	x21, [sp, #32]
  40e550:	sub	x1, x0, #0x1
  40e554:	mov	x0, x1
  40e558:	ldp	x19, x20, [sp, #16]
  40e55c:	ldp	x29, x30, [sp], #48
  40e560:	ret
  40e564:	mov	x1, x0
  40e568:	cbnz	w5, 40e54c <init_hash_files@@Base+0xd4>
  40e56c:	mov	x0, x1
  40e570:	ldp	x19, x20, [sp, #16]
  40e574:	ldr	x21, [sp, #32]
  40e578:	ldp	x29, x30, [sp], #48
  40e57c:	ret
  40e580:	stp	x29, x30, [sp, #-32]!
  40e584:	mov	x29, sp
  40e588:	stp	x19, x20, [sp, #16]
  40e58c:	mov	x19, x0
  40e590:	ldp	x20, x0, [x1]
  40e594:	mov	x1, x20
  40e598:	bl	406cc0 <strstr@plt>
  40e59c:	cbz	x0, 40e5c0 <init_hash_files@@Base+0x148>
  40e5a0:	mov	x0, x20
  40e5a4:	bl	406680 <strlen@plt>
  40e5a8:	mov	x1, x20
  40e5ac:	mov	x2, x0
  40e5b0:	mov	x0, x19
  40e5b4:	ldp	x19, x20, [sp, #16]
  40e5b8:	ldp	x29, x30, [sp], #32
  40e5bc:	b	40b848 <variable_buffer_output@@Base>
  40e5c0:	mov	x0, x19
  40e5c4:	ldp	x19, x20, [sp, #16]
  40e5c8:	ldp	x29, x30, [sp], #32
  40e5cc:	ret
  40e5d0:	stp	x29, x30, [sp, #-48]!
  40e5d4:	mov	x29, sp
  40e5d8:	ldr	x1, [x1]
  40e5dc:	stp	x19, x20, [sp, #16]
  40e5e0:	mov	x20, x0
  40e5e4:	mov	x0, #0x0                   	// #0
  40e5e8:	str	x1, [sp, #40]
  40e5ec:	nop
  40e5f0:	mov	x19, x0
  40e5f4:	add	x1, sp, #0x20
  40e5f8:	add	x0, sp, #0x28
  40e5fc:	bl	418d28 <find_next_token@@Base>
  40e600:	cbnz	x0, 40e5f0 <init_hash_files@@Base+0x178>
  40e604:	mov	x0, x20
  40e608:	cbz	x19, 40e618 <init_hash_files@@Base+0x1a0>
  40e60c:	ldr	x2, [sp, #32]
  40e610:	mov	x1, x19
  40e614:	bl	40b848 <variable_buffer_output@@Base>
  40e618:	ldp	x19, x20, [sp, #16]
  40e61c:	ldp	x29, x30, [sp], #48
  40e620:	ret
  40e624:	nop
  40e628:	stp	x29, x30, [sp, #-80]!
  40e62c:	mov	x29, sp
  40e630:	stp	x19, x20, [sp, #16]
  40e634:	mov	x19, x0
  40e638:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x2c20>
  40e63c:	ldp	x2, x0, [x1]
  40e640:	add	x1, sp, #0x40
  40e644:	str	x21, [sp, #32]
  40e648:	add	x20, x20, #0xb18
  40e64c:	stp	x2, x0, [sp, #48]
  40e650:	add	x0, sp, #0x30
  40e654:	mov	w21, #0x0                   	// #0
  40e658:	bl	418d28 <find_next_token@@Base>
  40e65c:	mov	x3, x0
  40e660:	add	x1, sp, #0x48
  40e664:	mov	x0, x19
  40e668:	cbz	x3, 40e6d4 <init_hash_files@@Base+0x25c>
  40e66c:	ldr	x2, [sp, #64]
  40e670:	mov	x1, x3
  40e674:	bl	40b848 <variable_buffer_output@@Base>
  40e678:	mov	x19, x0
  40e67c:	add	x1, sp, #0x48
  40e680:	add	x0, sp, #0x38
  40e684:	bl	418d28 <find_next_token@@Base>
  40e688:	mov	x1, x0
  40e68c:	cbz	x0, 40e6a0 <init_hash_files@@Base+0x228>
  40e690:	ldr	x2, [sp, #72]
  40e694:	mov	x0, x19
  40e698:	bl	40b848 <variable_buffer_output@@Base>
  40e69c:	mov	x19, x0
  40e6a0:	mov	x2, #0x1                   	// #1
  40e6a4:	mov	x0, x19
  40e6a8:	mov	x1, x20
  40e6ac:	bl	40b848 <variable_buffer_output@@Base>
  40e6b0:	add	x1, sp, #0x40
  40e6b4:	mov	x19, x0
  40e6b8:	add	x0, sp, #0x30
  40e6bc:	bl	418d28 <find_next_token@@Base>
  40e6c0:	add	x1, sp, #0x48
  40e6c4:	mov	x3, x0
  40e6c8:	mov	w21, #0x1                   	// #1
  40e6cc:	mov	x0, x19
  40e6d0:	cbnz	x3, 40e66c <init_hash_files@@Base+0x1f4>
  40e6d4:	add	x0, sp, #0x38
  40e6d8:	bl	418d28 <find_next_token@@Base>
  40e6dc:	mov	x1, x0
  40e6e0:	cbnz	x0, 40e690 <init_hash_files@@Base+0x218>
  40e6e4:	and	x0, x21, #0x1
  40e6e8:	sub	x19, x19, x0
  40e6ec:	mov	x0, x19
  40e6f0:	ldp	x19, x20, [sp, #16]
  40e6f4:	ldr	x21, [sp, #32]
  40e6f8:	ldp	x29, x30, [sp], #80
  40e6fc:	ret
  40e700:	mov	x2, x1
  40e704:	stp	x29, x30, [sp, #-48]!
  40e708:	mov	x29, sp
  40e70c:	ldr	x2, [x2]
  40e710:	add	x1, sp, #0x20
  40e714:	str	x19, [sp, #16]
  40e718:	mov	x19, x0
  40e71c:	add	x0, sp, #0x28
  40e720:	str	x2, [sp, #40]
  40e724:	bl	418d28 <find_next_token@@Base>
  40e728:	cbz	x0, 40e748 <init_hash_files@@Base+0x2d0>
  40e72c:	ldr	x2, [sp, #32]
  40e730:	mov	x1, x0
  40e734:	mov	x0, x19
  40e738:	bl	40b848 <variable_buffer_output@@Base>
  40e73c:	ldr	x19, [sp, #16]
  40e740:	ldp	x29, x30, [sp], #48
  40e744:	ret
  40e748:	mov	x0, x19
  40e74c:	ldr	x19, [sp, #16]
  40e750:	ldp	x29, x30, [sp], #48
  40e754:	ret
  40e758:	stp	x29, x30, [sp, #-80]!
  40e75c:	mov	w3, #0x8200                	// #33280
  40e760:	mov	x29, sp
  40e764:	stp	x19, x20, [sp, #16]
  40e768:	mov	x19, x0
  40e76c:	stp	x21, x22, [sp, #32]
  40e770:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x2c20>
  40e774:	add	x21, x21, #0xb18
  40e778:	stp	x23, x24, [sp, #48]
  40e77c:	mov	w24, #0x8000                	// #32768
  40e780:	adrp	x23, 443000 <expanding_var@@Base+0x338>
  40e784:	ldrb	w20, [x2]
  40e788:	add	x23, x23, #0x448
  40e78c:	ldr	x0, [x1]
  40e790:	cmp	w20, #0x73
  40e794:	csel	w24, w24, w3, ne  // ne = any
  40e798:	mov	w22, #0x0                   	// #0
  40e79c:	stp	x0, xzr, [sp, #64]
  40e7a0:	add	x1, sp, #0x48
  40e7a4:	add	x0, sp, #0x40
  40e7a8:	bl	418d28 <find_next_token@@Base>
  40e7ac:	cbz	x0, 40e82c <init_hash_files@@Base+0x3b4>
  40e7b0:	ldr	x2, [sp, #72]
  40e7b4:	sub	x3, x2, #0x1
  40e7b8:	adds	x3, x0, x3
  40e7bc:	b.cc	40e7d0 <init_hash_files@@Base+0x358>  // b.lo, b.ul, b.last
  40e7c0:	b	40e84c <init_hash_files@@Base+0x3d4>
  40e7c4:	sub	x3, x3, #0x1
  40e7c8:	cmp	x0, x3
  40e7cc:	b.hi	40e84c <init_hash_files@@Base+0x3d4>  // b.pmore
  40e7d0:	ldrb	w4, [x3]
  40e7d4:	ldrh	w5, [x23, w4, sxtw #1]
  40e7d8:	tst	w5, w24
  40e7dc:	b.eq	40e7c4 <init_hash_files@@Base+0x34c>  // b.none
  40e7e0:	cmp	x3, x0
  40e7e4:	b.cc	40e84c <init_hash_files@@Base+0x3d4>  // b.lo, b.ul, b.last
  40e7e8:	cmp	w20, #0x73
  40e7ec:	b.eq	40e864 <init_hash_files@@Base+0x3ec>  // b.none
  40e7f0:	add	x3, x3, #0x1
  40e7f4:	sub	x4, x3, x0
  40e7f8:	mov	x1, x3
  40e7fc:	sub	x2, x2, x4
  40e800:	mov	x0, x19
  40e804:	bl	40b848 <variable_buffer_output@@Base>
  40e808:	mov	x2, #0x1                   	// #1
  40e80c:	mov	x1, x21
  40e810:	bl	40b848 <variable_buffer_output@@Base>
  40e814:	mov	w22, #0x1                   	// #1
  40e818:	mov	x19, x0
  40e81c:	add	x1, sp, #0x48
  40e820:	add	x0, sp, #0x40
  40e824:	bl	418d28 <find_next_token@@Base>
  40e828:	cbnz	x0, 40e7b0 <init_hash_files@@Base+0x338>
  40e82c:	and	x22, x22, #0x1
  40e830:	sub	x19, x19, x22
  40e834:	mov	x0, x19
  40e838:	ldp	x19, x20, [sp, #16]
  40e83c:	ldp	x21, x22, [sp, #32]
  40e840:	ldp	x23, x24, [sp, #48]
  40e844:	ldp	x29, x30, [sp], #80
  40e848:	ret
  40e84c:	cmp	w20, #0x73
  40e850:	b.eq	40e7a0 <init_hash_files@@Base+0x328>  // b.none
  40e854:	mov	x1, x0
  40e858:	mov	x0, x19
  40e85c:	bl	40b848 <variable_buffer_output@@Base>
  40e860:	b	40e808 <init_hash_files@@Base+0x390>
  40e864:	cmp	w4, #0x2e
  40e868:	b.eq	40e7f4 <init_hash_files@@Base+0x37c>  // b.none
  40e86c:	b	40e7a0 <init_hash_files@@Base+0x328>
  40e870:	stp	x29, x30, [sp, #-96]!
  40e874:	mov	w3, #0x8201                	// #33281
  40e878:	mov	x29, sp
  40e87c:	stp	x19, x20, [sp, #16]
  40e880:	adrp	x19, 427000 <_IO_stdin_used@@Base+0xc20>
  40e884:	add	x19, x19, #0xab8
  40e888:	stp	x21, x22, [sp, #32]
  40e88c:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  40e890:	add	x22, x22, #0x448
  40e894:	stp	x23, x24, [sp, #48]
  40e898:	mov	x24, x0
  40e89c:	mov	w23, #0x8001                	// #32769
  40e8a0:	ldr	x0, [x1]
  40e8a4:	str	x25, [sp, #64]
  40e8a8:	add	x1, sp, #0x58
  40e8ac:	mov	w25, #0x0                   	// #0
  40e8b0:	ldrb	w20, [x2]
  40e8b4:	stp	x0, xzr, [sp, #80]
  40e8b8:	add	x0, sp, #0x50
  40e8bc:	cmp	w20, #0x62
  40e8c0:	cset	w21, ne  // ne = any
  40e8c4:	csel	w23, w23, w3, ne  // ne = any
  40e8c8:	bl	418d28 <find_next_token@@Base>
  40e8cc:	mov	x1, x0
  40e8d0:	cbz	x0, 40e95c <init_hash_files@@Base+0x4e4>
  40e8d4:	nop
  40e8d8:	ldr	x2, [sp, #88]
  40e8dc:	sub	x3, x2, #0x1
  40e8e0:	adds	x3, x1, x3
  40e8e4:	b.cc	40e8f8 <init_hash_files@@Base+0x480>  // b.lo, b.ul, b.last
  40e8e8:	b	40e908 <init_hash_files@@Base+0x490>
  40e8ec:	sub	x3, x3, #0x1
  40e8f0:	cmp	x1, x3
  40e8f4:	b.hi	40e97c <init_hash_files@@Base+0x504>  // b.pmore
  40e8f8:	ldrb	w4, [x3]
  40e8fc:	ldrh	w4, [x22, x4, lsl #1]
  40e900:	tst	w4, w23
  40e904:	b.eq	40e8ec <init_hash_files@@Base+0x474>  // b.none
  40e908:	cmp	w21, #0x0
  40e90c:	ccmp	x3, x1, #0x0, ne  // ne = any
  40e910:	b.cs	40e998 <init_hash_files@@Base+0x520>  // b.hs, b.nlast
  40e914:	cmp	x3, x1
  40e918:	b.cc	40e97c <init_hash_files@@Base+0x504>  // b.lo, b.ul, b.last
  40e91c:	ldrb	w0, [x3]
  40e920:	cmp	w0, #0x2e
  40e924:	b.eq	40e9ac <init_hash_files@@Base+0x534>  // b.none
  40e928:	mov	x0, x24
  40e92c:	bl	40b848 <variable_buffer_output@@Base>
  40e930:	mov	x2, #0x1                   	// #1
  40e934:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  40e938:	add	x1, x1, #0xb18
  40e93c:	bl	40b848 <variable_buffer_output@@Base>
  40e940:	add	x1, sp, #0x58
  40e944:	mov	x24, x0
  40e948:	mov	w25, #0x1                   	// #1
  40e94c:	add	x0, sp, #0x50
  40e950:	bl	418d28 <find_next_token@@Base>
  40e954:	mov	x1, x0
  40e958:	cbnz	x0, 40e8d8 <init_hash_files@@Base+0x460>
  40e95c:	and	x0, x25, #0x1
  40e960:	sub	x0, x24, x0
  40e964:	ldp	x19, x20, [sp, #16]
  40e968:	ldp	x21, x22, [sp, #32]
  40e96c:	ldp	x23, x24, [sp, #48]
  40e970:	ldr	x25, [sp, #64]
  40e974:	ldp	x29, x30, [sp], #96
  40e978:	ret
  40e97c:	cmp	w20, #0x62
  40e980:	b.eq	40e928 <init_hash_files@@Base+0x4b0>  // b.none
  40e984:	mov	x0, x24
  40e988:	mov	x1, x19
  40e98c:	mov	x2, #0x2                   	// #2
  40e990:	bl	40b848 <variable_buffer_output@@Base>
  40e994:	b	40e930 <init_hash_files@@Base+0x4b8>
  40e998:	add	x2, x3, #0x1
  40e99c:	mov	x0, x24
  40e9a0:	sub	x2, x2, x1
  40e9a4:	bl	40b848 <variable_buffer_output@@Base>
  40e9a8:	b	40e930 <init_hash_files@@Base+0x4b8>
  40e9ac:	sub	x2, x3, x1
  40e9b0:	mov	x0, x24
  40e9b4:	bl	40b848 <variable_buffer_output@@Base>
  40e9b8:	b	40e930 <init_hash_files@@Base+0x4b8>
  40e9bc:	nop
  40e9c0:	stp	x29, x30, [sp, #-96]!
  40e9c4:	mov	x29, sp
  40e9c8:	stp	x19, x20, [sp, #16]
  40e9cc:	mov	x20, x0
  40e9d0:	mov	x19, x2
  40e9d4:	ldr	x0, [x1]
  40e9d8:	stp	x21, x22, [sp, #32]
  40e9dc:	mov	x22, x1
  40e9e0:	stp	x23, x24, [sp, #48]
  40e9e4:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x2c20>
  40e9e8:	add	x21, x21, #0xb18
  40e9ec:	str	x25, [sp, #64]
  40e9f0:	bl	406680 <strlen@plt>
  40e9f4:	ldr	x1, [x22, #8]
  40e9f8:	mov	x24, x0
  40e9fc:	ldrb	w23, [x19, #3]
  40ea00:	mov	w25, #0x0                   	// #0
  40ea04:	str	x1, [sp, #80]
  40ea08:	b	40ea34 <init_hash_files@@Base+0x5bc>
  40ea0c:	ldr	x2, [sp, #88]
  40ea10:	bl	40b848 <variable_buffer_output@@Base>
  40ea14:	ldr	x1, [x22]
  40ea18:	mov	x2, x24
  40ea1c:	bl	40b848 <variable_buffer_output@@Base>
  40ea20:	mov	x1, x21
  40ea24:	mov	x2, #0x1                   	// #1
  40ea28:	bl	40b848 <variable_buffer_output@@Base>
  40ea2c:	mov	x20, x0
  40ea30:	mov	w25, #0x1                   	// #1
  40ea34:	add	x1, sp, #0x58
  40ea38:	add	x0, sp, #0x50
  40ea3c:	bl	418d28 <find_next_token@@Base>
  40ea40:	mov	x19, x0
  40ea44:	mov	x1, x19
  40ea48:	mov	x0, x20
  40ea4c:	cbz	x19, 40ea78 <init_hash_files@@Base+0x600>
  40ea50:	cmp	w23, #0x70
  40ea54:	b.ne	40ea0c <init_hash_files@@Base+0x594>  // b.any
  40ea58:	ldr	x1, [x22]
  40ea5c:	mov	x2, x24
  40ea60:	mov	x0, x20
  40ea64:	bl	40b848 <variable_buffer_output@@Base>
  40ea68:	ldr	x2, [sp, #88]
  40ea6c:	mov	x1, x19
  40ea70:	bl	40b848 <variable_buffer_output@@Base>
  40ea74:	b	40ea20 <init_hash_files@@Base+0x5a8>
  40ea78:	and	x25, x25, #0x1
  40ea7c:	sub	x20, x20, x25
  40ea80:	mov	x0, x20
  40ea84:	ldp	x19, x20, [sp, #16]
  40ea88:	ldp	x21, x22, [sp, #32]
  40ea8c:	ldp	x23, x24, [sp, #48]
  40ea90:	ldr	x25, [sp, #64]
  40ea94:	ldp	x29, x30, [sp], #96
  40ea98:	ret
  40ea9c:	nop
  40eaa0:	stp	x29, x30, [sp, #-64]!
  40eaa4:	mov	x29, sp
  40eaa8:	stp	x19, x20, [sp, #16]
  40eaac:	mov	x20, x0
  40eab0:	mov	w19, #0x0                   	// #0
  40eab4:	ldr	x0, [x1]
  40eab8:	str	x0, [sp, #32]
  40eabc:	b	40eac4 <init_hash_files@@Base+0x64c>
  40eac0:	add	w19, w19, #0x1
  40eac4:	add	x0, sp, #0x20
  40eac8:	mov	x1, #0x0                   	// #0
  40eacc:	bl	418d28 <find_next_token@@Base>
  40ead0:	cbnz	x0, 40eac0 <init_hash_files@@Base+0x648>
  40ead4:	mov	w2, w19
  40ead8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40eadc:	add	x1, x1, #0xd0
  40eae0:	add	x0, sp, #0x28
  40eae4:	bl	406730 <sprintf@plt>
  40eae8:	add	x0, sp, #0x28
  40eaec:	bl	406680 <strlen@plt>
  40eaf0:	mov	x2, x0
  40eaf4:	add	x1, sp, #0x28
  40eaf8:	mov	x0, x20
  40eafc:	bl	40b848 <variable_buffer_output@@Base>
  40eb00:	ldp	x19, x20, [sp, #16]
  40eb04:	ldp	x29, x30, [sp], #64
  40eb08:	ret
  40eb0c:	nop
  40eb10:	stp	x29, x30, [sp, #-64]!
  40eb14:	mov	x29, sp
  40eb18:	stp	x19, x20, [sp, #16]
  40eb1c:	mov	w20, w1
  40eb20:	mov	x1, x2
  40eb24:	ldrb	w2, [x3, #17]
  40eb28:	cmp	w2, w20
  40eb2c:	b.gt	40ebb4 <init_hash_files@@Base+0x73c>
  40eb30:	mov	x19, x0
  40eb34:	cbnz	w20, 40eb90 <init_hash_files@@Base+0x718>
  40eb38:	ldrb	w0, [x3, #19]
  40eb3c:	tbz	w0, #1, 40eb80 <init_hash_files@@Base+0x708>
  40eb40:	ldp	x4, x5, [x3]
  40eb44:	cbz	x4, 40ec04 <init_hash_files@@Base+0x78c>
  40eb48:	mov	x2, x1
  40eb4c:	mov	x0, x5
  40eb50:	mov	w1, w20
  40eb54:	blr	x4
  40eb58:	mov	x20, x0
  40eb5c:	cbz	x0, 40eb80 <init_hash_files@@Base+0x708>
  40eb60:	bl	406680 <strlen@plt>
  40eb64:	mov	x2, x0
  40eb68:	mov	x1, x20
  40eb6c:	mov	x0, x19
  40eb70:	bl	40b848 <variable_buffer_output@@Base>
  40eb74:	mov	x19, x0
  40eb78:	mov	x0, x20
  40eb7c:	bl	406b90 <free@plt>
  40eb80:	mov	x0, x19
  40eb84:	ldp	x19, x20, [sp, #16]
  40eb88:	ldp	x29, x30, [sp], #64
  40eb8c:	ret
  40eb90:	ldp	x4, x5, [x3]
  40eb94:	cbz	x4, 40ec04 <init_hash_files@@Base+0x78c>
  40eb98:	ldrb	w2, [x3, #19]
  40eb9c:	tbnz	w2, #1, 40eb48 <init_hash_files@@Base+0x6d0>
  40eba0:	ldp	x19, x20, [sp, #16]
  40eba4:	mov	x2, x5
  40eba8:	ldp	x29, x30, [sp], #64
  40ebac:	mov	x16, x4
  40ebb0:	br	x16
  40ebb4:	adrp	x1, 442000 <memcpy@GLIBC_2.17>
  40ebb8:	str	x3, [sp, #56]
  40ebbc:	ldr	x0, [x3, #8]
  40ebc0:	str	x21, [sp, #32]
  40ebc4:	ldr	x1, [x1, #3272]
  40ebc8:	ldr	x21, [x1]
  40ebcc:	bl	406680 <strlen@plt>
  40ebd0:	mov	w2, #0x5                   	// #5
  40ebd4:	mov	x19, x0
  40ebd8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40ebdc:	mov	x0, #0x0                   	// #0
  40ebe0:	add	x1, x1, #0xd8
  40ebe4:	bl	406cd0 <dcgettext@plt>
  40ebe8:	ldr	x3, [sp, #56]
  40ebec:	mov	x2, x0
  40ebf0:	mov	x1, x19
  40ebf4:	mov	x0, x21
  40ebf8:	ldr	x4, [x3, #8]
  40ebfc:	mov	w3, w20
  40ec00:	bl	41a060 <fatal@@Base>
  40ec04:	adrp	x1, 442000 <memcpy@GLIBC_2.17>
  40ec08:	str	x3, [sp, #56]
  40ec0c:	ldr	x0, [x3, #8]
  40ec10:	ldr	x1, [x1, #3272]
  40ec14:	ldr	x20, [x1]
  40ec18:	str	x21, [sp, #32]
  40ec1c:	bl	406680 <strlen@plt>
  40ec20:	mov	x19, x0
  40ec24:	mov	w2, #0x5                   	// #5
  40ec28:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40ec2c:	mov	x0, #0x0                   	// #0
  40ec30:	add	x1, x1, #0x110
  40ec34:	bl	406cd0 <dcgettext@plt>
  40ec38:	mov	x2, x0
  40ec3c:	ldr	x3, [sp, #56]
  40ec40:	mov	x1, x19
  40ec44:	mov	x0, x20
  40ec48:	ldr	x3, [x3, #8]
  40ec4c:	bl	41a060 <fatal@@Base>
  40ec50:	mov	x4, x0
  40ec54:	ldrb	w0, [x0]
  40ec58:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  40ec5c:	add	x3, x3, #0x448
  40ec60:	ldrh	w0, [x3, x0, lsl #1]
  40ec64:	tbz	w0, #13, 40ecc0 <init_hash_files@@Base+0x848>
  40ec68:	mov	x1, x4
  40ec6c:	nop
  40ec70:	ldrb	w2, [x1, #1]!
  40ec74:	ldrh	w2, [x3, x2, lsl #1]
  40ec78:	tbnz	w2, #13, 40ec70 <init_hash_files@@Base+0x7f8>
  40ec7c:	cmp	x4, x1
  40ec80:	b.eq	40ecc0 <init_hash_files@@Base+0x848>  // b.none
  40ec84:	tst	x2, #0x7
  40ec88:	mov	x0, #0x0                   	// #0
  40ec8c:	b.eq	40ecbc <init_hash_files@@Base+0x844>  // b.none
  40ec90:	stp	x29, x30, [sp, #-48]!
  40ec94:	sub	x2, x1, x4
  40ec98:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  40ec9c:	mov	x29, sp
  40eca0:	add	x1, sp, #0x18
  40eca4:	add	x0, x0, #0x310
  40eca8:	str	x4, [sp, #32]
  40ecac:	strb	w2, [sp, #40]
  40ecb0:	bl	411b08 <hash_find_item@@Base>
  40ecb4:	ldp	x29, x30, [sp], #48
  40ecb8:	ret
  40ecbc:	ret
  40ecc0:	mov	x0, #0x0                   	// #0
  40ecc4:	ret
  40ecc8:	sub	sp, sp, #0x440
  40eccc:	stp	x29, x30, [sp]
  40ecd0:	mov	x29, sp
  40ecd4:	stp	x19, x20, [sp, #16]
  40ecd8:	ldr	x20, [x1]
  40ecdc:	stp	x21, x22, [sp, #32]
  40ece0:	mov	x22, x1
  40ece4:	stp	x23, x24, [sp, #48]
  40ece8:	mov	x23, x0
  40ecec:	ldrb	w0, [x20]
  40ecf0:	cmp	w0, #0x3e
  40ecf4:	b.eq	40ee0c <init_hash_files@@Base+0x994>  // b.none
  40ecf8:	cmp	w0, #0x3c
  40ecfc:	b.ne	40f0f0 <init_hash_files@@Base+0xc78>  // b.any
  40ed00:	ldrb	w0, [x20, #1]
  40ed04:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  40ed08:	add	x2, x2, #0x448
  40ed0c:	add	x20, x20, #0x1
  40ed10:	ldrh	w1, [x2, w0, sxtw #1]
  40ed14:	tst	w1, #0x6
  40ed18:	b.eq	40ed30 <init_hash_files@@Base+0x8b8>  // b.none
  40ed1c:	nop
  40ed20:	ldrb	w0, [x20, #1]!
  40ed24:	ldrh	w3, [x2, w0, sxtw #1]
  40ed28:	tst	w3, #0x6
  40ed2c:	b.ne	40ed20 <init_hash_files@@Base+0x8a8>  // b.any
  40ed30:	cbz	w0, 40f0dc <init_hash_files@@Base+0xc64>
  40ed34:	ldr	x0, [x22, #8]
  40ed38:	cbnz	x0, 40f0ac <init_hash_files@@Base+0xc34>
  40ed3c:	adrp	x22, 426000 <rpl_fcntl@@Base+0xf0>
  40ed40:	bl	406d70 <__errno_location@plt>
  40ed44:	add	x22, x22, #0xbe8
  40ed48:	mov	x21, x0
  40ed4c:	b	40ed5c <init_hash_files@@Base+0x8e4>
  40ed50:	ldr	w19, [x21]
  40ed54:	cmp	w19, #0x4
  40ed58:	b.ne	40ef84 <init_hash_files@@Base+0xb0c>  // b.any
  40ed5c:	str	wzr, [x21]
  40ed60:	mov	x1, x22
  40ed64:	mov	x0, x20
  40ed68:	bl	4068b0 <fopen@plt>
  40ed6c:	mov	x19, x0
  40ed70:	cbz	x0, 40ed50 <init_hash_files@@Base+0x8d8>
  40ed74:	mov	x22, x23
  40ed78:	b	40eda0 <init_hash_files@@Base+0x928>
  40ed7c:	mov	x0, x19
  40ed80:	bl	406e00 <ferror@plt>
  40ed84:	cbz	w0, 40ed94 <init_hash_files@@Base+0x91c>
  40ed88:	ldr	w24, [x21]
  40ed8c:	cmp	w24, #0x4
  40ed90:	b.ne	40efe0 <init_hash_files@@Base+0xb68>  // b.any
  40ed94:	mov	x0, x19
  40ed98:	bl	406ad0 <feof@plt>
  40ed9c:	cbnz	w0, 40edd0 <init_hash_files@@Base+0x958>
  40eda0:	mov	x3, x19
  40eda4:	add	x0, sp, #0x40
  40eda8:	mov	x2, #0x400                 	// #1024
  40edac:	mov	x1, #0x1                   	// #1
  40edb0:	bl	406b70 <fread@plt>
  40edb4:	cbz	x0, 40ed7c <init_hash_files@@Base+0x904>
  40edb8:	mov	x2, x0
  40edbc:	add	x1, sp, #0x40
  40edc0:	mov	x0, x22
  40edc4:	bl	40b848 <variable_buffer_output@@Base>
  40edc8:	mov	x22, x0
  40edcc:	b	40ed7c <init_hash_files@@Base+0x904>
  40edd0:	mov	x0, x19
  40edd4:	bl	406890 <fclose@plt>
  40edd8:	cbnz	w0, 40f130 <init_hash_files@@Base+0xcb8>
  40eddc:	cmp	x22, x23
  40ede0:	b.ls	40edf0 <init_hash_files@@Base+0x978>  // b.plast
  40ede4:	ldurb	w0, [x22, #-1]
  40ede8:	cmp	w0, #0xa
  40edec:	b.eq	40ef68 <init_hash_files@@Base+0xaf0>  // b.none
  40edf0:	mov	x0, x22
  40edf4:	ldp	x29, x30, [sp]
  40edf8:	ldp	x19, x20, [sp, #16]
  40edfc:	ldp	x21, x22, [sp, #32]
  40ee00:	ldp	x23, x24, [sp, #48]
  40ee04:	add	sp, sp, #0x440
  40ee08:	ret
  40ee0c:	ldrb	w0, [x20, #1]
  40ee10:	cmp	w0, #0x3e
  40ee14:	b.eq	40efc4 <init_hash_files@@Base+0xb4c>  // b.none
  40ee18:	adrp	x24, 428000 <_IO_stdin_used@@Base+0x1c20>
  40ee1c:	add	x21, x20, #0x1
  40ee20:	add	x24, x24, #0x148
  40ee24:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  40ee28:	add	x2, x2, #0x448
  40ee2c:	ldrh	w1, [x2, w0, sxtw #1]
  40ee30:	tst	w1, #0x6
  40ee34:	b.eq	40ee48 <init_hash_files@@Base+0x9d0>  // b.none
  40ee38:	ldrb	w0, [x21, #1]!
  40ee3c:	ldrh	w1, [x2, w0, sxtw #1]
  40ee40:	tst	w1, #0x6
  40ee44:	b.ne	40ee38 <init_hash_files@@Base+0x9c0>  // b.any
  40ee48:	cbz	w0, 40f0dc <init_hash_files@@Base+0xc64>
  40ee4c:	bl	406d70 <__errno_location@plt>
  40ee50:	mov	x20, x0
  40ee54:	b	40ee64 <init_hash_files@@Base+0x9ec>
  40ee58:	ldr	w19, [x20]
  40ee5c:	cmp	w19, #0x4
  40ee60:	b.ne	40f074 <init_hash_files@@Base+0xbfc>  // b.any
  40ee64:	str	wzr, [x20]
  40ee68:	mov	x1, x24
  40ee6c:	mov	x0, x21
  40ee70:	bl	4068b0 <fopen@plt>
  40ee74:	mov	x19, x0
  40ee78:	cbz	x0, 40ee58 <init_hash_files@@Base+0x9e0>
  40ee7c:	ldr	x22, [x22, #8]
  40ee80:	cbz	x22, 40eeb8 <init_hash_files@@Base+0xa40>
  40ee84:	mov	x0, x22
  40ee88:	bl	406680 <strlen@plt>
  40ee8c:	cbnz	x0, 40eee4 <init_hash_files@@Base+0xa6c>
  40ee90:	mov	x0, x22
  40ee94:	mov	x1, x19
  40ee98:	bl	406690 <fputs@plt>
  40ee9c:	cmn	w0, #0x1
  40eea0:	b.eq	40ef08 <init_hash_files@@Base+0xa90>  // b.none
  40eea4:	mov	x1, x19
  40eea8:	mov	w0, #0xa                   	// #10
  40eeac:	bl	406790 <fputc@plt>
  40eeb0:	cmn	w0, #0x1
  40eeb4:	b.eq	40ef08 <init_hash_files@@Base+0xa90>  // b.none
  40eeb8:	mov	x0, x19
  40eebc:	bl	406890 <fclose@plt>
  40eec0:	cbnz	w0, 40f040 <init_hash_files@@Base+0xbc8>
  40eec4:	mov	x22, x23
  40eec8:	mov	x0, x22
  40eecc:	ldp	x29, x30, [sp]
  40eed0:	ldp	x19, x20, [sp, #16]
  40eed4:	ldp	x21, x22, [sp, #32]
  40eed8:	ldp	x23, x24, [sp, #48]
  40eedc:	add	sp, sp, #0x440
  40eee0:	ret
  40eee4:	add	x0, x22, x0
  40eee8:	ldurb	w0, [x0, #-1]
  40eeec:	cmp	w0, #0xa
  40eef0:	b.ne	40ee90 <init_hash_files@@Base+0xa18>  // b.any
  40eef4:	mov	x0, x22
  40eef8:	mov	x1, x19
  40eefc:	bl	406690 <fputs@plt>
  40ef00:	cmn	w0, #0x1
  40ef04:	b.ne	40eeb8 <init_hash_files@@Base+0xa40>  // b.any
  40ef08:	adrp	x1, 445000 <output_context@@Base+0x1250>
  40ef0c:	mov	x0, x21
  40ef10:	ldr	x22, [x1, #3552]
  40ef14:	bl	406680 <strlen@plt>
  40ef18:	mov	x19, x0
  40ef1c:	ldr	w0, [x20]
  40ef20:	bl	406a40 <strerror@plt>
  40ef24:	bl	406680 <strlen@plt>
  40ef28:	add	x19, x19, x0
  40ef2c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40ef30:	add	x1, x1, #0x168
  40ef34:	mov	w2, #0x5                   	// #5
  40ef38:	mov	x0, #0x0                   	// #0
  40ef3c:	bl	406cd0 <dcgettext@plt>
  40ef40:	mov	x1, x0
  40ef44:	ldr	w0, [x20]
  40ef48:	mov	x20, x1
  40ef4c:	bl	406a40 <strerror@plt>
  40ef50:	mov	x4, x0
  40ef54:	mov	x3, x21
  40ef58:	mov	x2, x20
  40ef5c:	mov	x1, x19
  40ef60:	mov	x0, x22
  40ef64:	bl	41a060 <fatal@@Base>
  40ef68:	sub	x1, x22, #0x1
  40ef6c:	cmp	x23, x1
  40ef70:	b.cs	40efd8 <init_hash_files@@Base+0xb60>  // b.hs, b.nlast
  40ef74:	ldrb	w0, [x22, #-2]!
  40ef78:	cmp	w0, #0xd
  40ef7c:	csel	x22, x22, x1, eq  // eq = none
  40ef80:	b	40edf0 <init_hash_files@@Base+0x978>
  40ef84:	cmp	w19, #0x2
  40ef88:	b.eq	40eec4 <init_hash_files@@Base+0xa4c>  // b.none
  40ef8c:	adrp	x1, 445000 <output_context@@Base+0x1250>
  40ef90:	mov	x0, x20
  40ef94:	ldr	x22, [x1, #3552]
  40ef98:	bl	406680 <strlen@plt>
  40ef9c:	mov	x1, x0
  40efa0:	mov	w0, w19
  40efa4:	mov	x19, x1
  40efa8:	bl	406a40 <strerror@plt>
  40efac:	bl	406680 <strlen@plt>
  40efb0:	add	x19, x19, x0
  40efb4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40efb8:	mov	w2, #0x5                   	// #5
  40efbc:	add	x1, x1, #0x1a8
  40efc0:	b	40f010 <init_hash_files@@Base+0xb98>
  40efc4:	adrp	x24, 428000 <_IO_stdin_used@@Base+0x1c20>
  40efc8:	ldrb	w0, [x20, #2]
  40efcc:	add	x21, x20, #0x2
  40efd0:	add	x24, x24, #0x140
  40efd4:	b	40ee24 <init_hash_files@@Base+0x9ac>
  40efd8:	mov	x22, x1
  40efdc:	b	40edf0 <init_hash_files@@Base+0x978>
  40efe0:	adrp	x1, 445000 <output_context@@Base+0x1250>
  40efe4:	mov	x0, x20
  40efe8:	ldr	x22, [x1, #3552]
  40efec:	bl	406680 <strlen@plt>
  40eff0:	mov	x19, x0
  40eff4:	mov	w0, w24
  40eff8:	bl	406a40 <strerror@plt>
  40effc:	bl	406680 <strlen@plt>
  40f000:	add	x19, x19, x0
  40f004:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f008:	add	x1, x1, #0x1b8
  40f00c:	mov	w2, #0x5                   	// #5
  40f010:	mov	x0, #0x0                   	// #0
  40f014:	bl	406cd0 <dcgettext@plt>
  40f018:	mov	x1, x0
  40f01c:	ldr	w0, [x21]
  40f020:	mov	x21, x1
  40f024:	bl	406a40 <strerror@plt>
  40f028:	mov	x4, x0
  40f02c:	mov	x3, x20
  40f030:	mov	x2, x21
  40f034:	mov	x1, x19
  40f038:	mov	x0, x22
  40f03c:	bl	41a060 <fatal@@Base>
  40f040:	adrp	x1, 445000 <output_context@@Base+0x1250>
  40f044:	mov	x0, x21
  40f048:	ldr	x22, [x1, #3552]
  40f04c:	bl	406680 <strlen@plt>
  40f050:	mov	x19, x0
  40f054:	ldr	w0, [x20]
  40f058:	bl	406a40 <strerror@plt>
  40f05c:	bl	406680 <strlen@plt>
  40f060:	add	x19, x19, x0
  40f064:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f068:	mov	w2, #0x5                   	// #5
  40f06c:	add	x1, x1, #0x178
  40f070:	b	40ef38 <init_hash_files@@Base+0xac0>
  40f074:	adrp	x1, 445000 <output_context@@Base+0x1250>
  40f078:	mov	x0, x21
  40f07c:	ldr	x22, [x1, #3552]
  40f080:	bl	406680 <strlen@plt>
  40f084:	mov	x1, x0
  40f088:	mov	w0, w19
  40f08c:	mov	x19, x1
  40f090:	bl	406a40 <strerror@plt>
  40f094:	bl	406680 <strlen@plt>
  40f098:	add	x19, x19, x0
  40f09c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f0a0:	mov	w2, #0x5                   	// #5
  40f0a4:	add	x1, x1, #0x1a8
  40f0a8:	b	40ef38 <init_hash_files@@Base+0xac0>
  40f0ac:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f0b0:	add	x1, x1, #0x188
  40f0b4:	adrp	x0, 442000 <memcpy@GLIBC_2.17>
  40f0b8:	mov	w2, #0x5                   	// #5
  40f0bc:	ldr	x3, [x0, #3272]
  40f0c0:	mov	x0, #0x0                   	// #0
  40f0c4:	ldr	x19, [x3]
  40f0c8:	bl	406cd0 <dcgettext@plt>
  40f0cc:	mov	x1, #0x0                   	// #0
  40f0d0:	mov	x2, x0
  40f0d4:	mov	x0, x19
  40f0d8:	bl	41a060 <fatal@@Base>
  40f0dc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f0e0:	adrp	x0, 442000 <memcpy@GLIBC_2.17>
  40f0e4:	add	x1, x1, #0x150
  40f0e8:	mov	w2, #0x5                   	// #5
  40f0ec:	b	40f0bc <init_hash_files@@Base+0xc44>
  40f0f0:	adrp	x1, 442000 <memcpy@GLIBC_2.17>
  40f0f4:	mov	x0, x20
  40f0f8:	ldr	x1, [x1, #3272]
  40f0fc:	ldr	x21, [x1]
  40f100:	bl	406680 <strlen@plt>
  40f104:	mov	w2, #0x5                   	// #5
  40f108:	mov	x19, x0
  40f10c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f110:	mov	x0, #0x0                   	// #0
  40f114:	add	x1, x1, #0x1c8
  40f118:	bl	406cd0 <dcgettext@plt>
  40f11c:	mov	x3, x20
  40f120:	mov	x2, x0
  40f124:	mov	x1, x19
  40f128:	mov	x0, x21
  40f12c:	bl	41a060 <fatal@@Base>
  40f130:	adrp	x1, 445000 <output_context@@Base+0x1250>
  40f134:	mov	x0, x20
  40f138:	ldr	x22, [x1, #3552]
  40f13c:	bl	406680 <strlen@plt>
  40f140:	mov	x19, x0
  40f144:	ldr	w0, [x21]
  40f148:	bl	406a40 <strerror@plt>
  40f14c:	bl	406680 <strlen@plt>
  40f150:	add	x19, x19, x0
  40f154:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f158:	mov	w2, #0x5                   	// #5
  40f15c:	add	x1, x1, #0x178
  40f160:	b	40f010 <init_hash_files@@Base+0xb98>
  40f164:	nop
  40f168:	stp	x29, x30, [sp, #-48]!
  40f16c:	mov	x29, sp
  40f170:	stp	x19, x20, [sp, #16]
  40f174:	mov	x20, x1
  40f178:	mov	x19, x0
  40f17c:	add	x1, sp, #0x28
  40f180:	add	x0, sp, #0x20
  40f184:	bl	40c440 <install_variable_buffer@@Base>
  40f188:	ldr	x0, [x20]
  40f18c:	mov	x1, #0x0                   	// #0
  40f190:	bl	41e9c0 <eval_buffer@@Base>
  40f194:	ldp	x0, x1, [sp, #32]
  40f198:	bl	40c460 <restore_variable_buffer@@Base>
  40f19c:	mov	x0, x19
  40f1a0:	ldp	x19, x20, [sp, #16]
  40f1a4:	ldp	x29, x30, [sp], #48
  40f1a8:	ret
  40f1ac:	nop
  40f1b0:	stp	x29, x30, [sp, #-32]!
  40f1b4:	mov	x29, sp
  40f1b8:	stp	x19, x20, [sp, #16]
  40f1bc:	mov	x19, x0
  40f1c0:	ldr	x20, [x1]
  40f1c4:	mov	x0, x20
  40f1c8:	bl	406680 <strlen@plt>
  40f1cc:	mov	x1, x0
  40f1d0:	mov	x0, x20
  40f1d4:	bl	4231f0 <lookup_variable@@Base>
  40f1d8:	cbz	x0, 40f200 <init_hash_files@@Base+0xd88>
  40f1dc:	ldr	x20, [x0, #8]
  40f1e0:	mov	x0, x20
  40f1e4:	bl	406680 <strlen@plt>
  40f1e8:	mov	x1, x20
  40f1ec:	mov	x2, x0
  40f1f0:	mov	x0, x19
  40f1f4:	ldp	x19, x20, [sp, #16]
  40f1f8:	ldp	x29, x30, [sp], #32
  40f1fc:	b	40b848 <variable_buffer_output@@Base>
  40f200:	mov	x0, x19
  40f204:	ldp	x19, x20, [sp, #16]
  40f208:	ldp	x29, x30, [sp], #32
  40f20c:	ret
  40f210:	stp	x29, x30, [sp, #-80]!
  40f214:	mov	x29, sp
  40f218:	stp	x21, x22, [sp, #32]
  40f21c:	mov	x22, x2
  40f220:	ldr	x21, [x1]
  40f224:	stp	x19, x20, [sp, #16]
  40f228:	mov	x20, x1
  40f22c:	stp	x23, x24, [sp, #48]
  40f230:	mov	x23, x0
  40f234:	stp	x25, x26, [sp, #64]
  40f238:	cbz	x21, 40f398 <init_hash_files@@Base+0xf20>
  40f23c:	mov	x24, x1
  40f240:	mov	x0, x21
  40f244:	mov	x19, #0x0                   	// #0
  40f248:	bl	406680 <strlen@plt>
  40f24c:	mov	x3, x0
  40f250:	ldr	x0, [x24, #8]!
  40f254:	add	x3, x3, #0x2
  40f258:	add	x19, x19, x3
  40f25c:	cbnz	x0, 40f248 <init_hash_files@@Base+0xdd0>
  40f260:	add	x1, x19, #0x1
  40f264:	add	x1, x1, #0xf
  40f268:	and	x1, x1, #0xfffffffffffffff0
  40f26c:	sub	sp, sp, x1
  40f270:	mov	x26, sp
  40f274:	ldr	x24, [x20, #8]
  40f278:	strb	wzr, [x26]
  40f27c:	cbz	x24, 40f38c <init_hash_files@@Base+0xf14>
  40f280:	mov	x19, x26
  40f284:	mov	w25, #0x202c                	// #8236
  40f288:	b	40f290 <init_hash_files@@Base+0xe18>
  40f28c:	mov	x24, x0
  40f290:	mov	x1, x21
  40f294:	add	x20, x20, #0x8
  40f298:	mov	x0, x19
  40f29c:	bl	406c30 <strcpy@plt>
  40f2a0:	mov	x0, x21
  40f2a4:	mov	x21, x24
  40f2a8:	bl	406680 <strlen@plt>
  40f2ac:	add	x19, x19, x0
  40f2b0:	ldr	x0, [x20, #8]
  40f2b4:	strh	w25, [x19], #2
  40f2b8:	cbnz	x0, 40f28c <init_hash_files@@Base+0xe14>
  40f2bc:	mov	x1, x24
  40f2c0:	mov	x0, x19
  40f2c4:	bl	406c30 <strcpy@plt>
  40f2c8:	ldrb	w0, [x22]
  40f2cc:	cmp	w0, #0x69
  40f2d0:	b.eq	40f350 <init_hash_files@@Base+0xed8>  // b.none
  40f2d4:	cmp	w0, #0x77
  40f2d8:	b.ne	40f320 <init_hash_files@@Base+0xea8>  // b.any
  40f2dc:	mov	x0, x26
  40f2e0:	bl	406680 <strlen@plt>
  40f2e4:	adrp	x2, 445000 <output_context@@Base+0x1250>
  40f2e8:	mov	x1, x0
  40f2ec:	mov	x3, x26
  40f2f0:	ldr	x0, [x2, #3552]
  40f2f4:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f2f8:	add	x2, x2, #0x4a0
  40f2fc:	bl	419dc8 <error@@Base>
  40f300:	mov	sp, x29
  40f304:	mov	x0, x23
  40f308:	ldp	x19, x20, [sp, #16]
  40f30c:	ldp	x21, x22, [sp, #32]
  40f310:	ldp	x23, x24, [sp, #48]
  40f314:	ldp	x25, x26, [sp, #64]
  40f318:	ldp	x29, x30, [sp], #80
  40f31c:	ret
  40f320:	cmp	w0, #0x65
  40f324:	b.eq	40f3a0 <init_hash_files@@Base+0xf28>  // b.none
  40f328:	mov	x0, x22
  40f32c:	bl	406680 <strlen@plt>
  40f330:	adrp	x2, 442000 <memcpy@GLIBC_2.17>
  40f334:	mov	x1, x0
  40f338:	mov	x3, x22
  40f33c:	ldr	x0, [x2, #3272]
  40f340:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f344:	add	x2, x2, #0x1f0
  40f348:	ldr	x0, [x0]
  40f34c:	bl	41a060 <fatal@@Base>
  40f350:	mov	x1, x26
  40f354:	mov	w0, #0x0                   	// #0
  40f358:	bl	419c70 <outputs@@Base>
  40f35c:	mov	w0, #0x0                   	// #0
  40f360:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f364:	add	x1, x1, #0x7d8
  40f368:	bl	419c70 <outputs@@Base>
  40f36c:	mov	sp, x29
  40f370:	mov	x0, x23
  40f374:	ldp	x19, x20, [sp, #16]
  40f378:	ldp	x21, x22, [sp, #32]
  40f37c:	ldp	x23, x24, [sp, #48]
  40f380:	ldp	x25, x26, [sp, #64]
  40f384:	ldp	x29, x30, [sp], #80
  40f388:	ret
  40f38c:	mov	x24, x21
  40f390:	mov	x19, x26
  40f394:	b	40f2bc <init_hash_files@@Base+0xe44>
  40f398:	mov	x1, #0x1                   	// #1
  40f39c:	b	40f264 <init_hash_files@@Base+0xdec>
  40f3a0:	mov	x0, x26
  40f3a4:	bl	406680 <strlen@plt>
  40f3a8:	adrp	x2, 445000 <output_context@@Base+0x1250>
  40f3ac:	mov	x1, x0
  40f3b0:	mov	x3, x26
  40f3b4:	ldr	x0, [x2, #3552]
  40f3b8:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f3bc:	add	x2, x2, #0x4a0
  40f3c0:	bl	41a060 <fatal@@Base>
  40f3c4:	nop
  40f3c8:	stp	x29, x30, [sp, #-128]!
  40f3cc:	mov	x29, sp
  40f3d0:	stp	x19, x20, [sp, #16]
  40f3d4:	mov	x20, x0
  40f3d8:	mov	x19, x1
  40f3dc:	ldr	x0, [x1]
  40f3e0:	stp	x21, x22, [sp, #32]
  40f3e4:	stp	x23, x24, [sp, #48]
  40f3e8:	stp	x25, x26, [sp, #64]
  40f3ec:	stp	x27, x28, [sp, #80]
  40f3f0:	bl	418cf8 <next_token@@Base>
  40f3f4:	mov	x21, x0
  40f3f8:	bl	418cc8 <end_of_token@@Base>
  40f3fc:	strb	wzr, [x0]
  40f400:	ldrb	w0, [x21]
  40f404:	cbnz	w0, 40f42c <init_hash_files@@Base+0xfb4>
  40f408:	mov	x0, x20
  40f40c:	mov	sp, x29
  40f410:	ldp	x19, x20, [sp, #16]
  40f414:	ldp	x21, x22, [sp, #32]
  40f418:	ldp	x23, x24, [sp, #48]
  40f41c:	ldp	x25, x26, [sp, #64]
  40f420:	ldp	x27, x28, [sp, #80]
  40f424:	ldp	x29, x30, [sp], #128
  40f428:	ret
  40f42c:	mov	x0, x21
  40f430:	bl	40ec50 <init_hash_files@@Base+0x7d8>
  40f434:	mov	x3, x0
  40f438:	cbz	x0, 40f488 <init_hash_files@@Base+0x1010>
  40f43c:	ldr	x0, [x19, #8]
  40f440:	add	x2, x19, #0x8
  40f444:	cbz	x0, 40f66c <init_hash_files@@Base+0x11f4>
  40f448:	mov	x4, #0x1                   	// #1
  40f44c:	nop
  40f450:	mov	w1, w4
  40f454:	add	x4, x4, #0x1
  40f458:	ldr	x5, [x19, x4, lsl #3]
  40f45c:	cbnz	x5, 40f450 <init_hash_files@@Base+0xfd8>
  40f460:	mov	x0, x20
  40f464:	bl	40eb10 <init_hash_files@@Base+0x698>
  40f468:	mov	sp, x29
  40f46c:	ldp	x19, x20, [sp, #16]
  40f470:	ldp	x21, x22, [sp, #32]
  40f474:	ldp	x23, x24, [sp, #48]
  40f478:	ldp	x25, x26, [sp, #64]
  40f47c:	ldp	x27, x28, [sp, #80]
  40f480:	ldp	x29, x30, [sp], #128
  40f484:	ret
  40f488:	mov	x0, x21
  40f48c:	bl	406680 <strlen@plt>
  40f490:	mov	x22, x0
  40f494:	mov	x0, x21
  40f498:	mov	x1, x22
  40f49c:	bl	4231f0 <lookup_variable@@Base>
  40f4a0:	mov	x25, x0
  40f4a4:	cbz	x0, 40f62c <init_hash_files@@Base+0x11b4>
  40f4a8:	ldr	x0, [x0, #8]
  40f4ac:	ldrb	w0, [x0]
  40f4b0:	cbz	w0, 40f408 <init_hash_files@@Base+0xf90>
  40f4b4:	add	x0, x22, #0x13
  40f4b8:	mov	x2, x22
  40f4bc:	and	x0, x0, #0xfffffffffffffff0
  40f4c0:	mov	w3, #0x2824                	// #10276
  40f4c4:	sub	sp, sp, x0
  40f4c8:	add	x27, x22, #0x3
  40f4cc:	mov	x26, sp
  40f4d0:	mov	x1, x21
  40f4d4:	mov	x0, x26
  40f4d8:	add	x22, x26, x22
  40f4dc:	strh	w3, [x0], #2
  40f4e0:	bl	406640 <memcpy@plt>
  40f4e4:	mov	w0, #0x29                  	// #41
  40f4e8:	strb	w0, [x22, #2]
  40f4ec:	strb	wzr, [x26, x27]
  40f4f0:	bl	4234a0 <push_new_variable_scope@@Base>
  40f4f4:	ldr	x0, [x19]
  40f4f8:	cbz	x0, 40f674 <init_hash_files@@Base+0x11fc>
  40f4fc:	adrp	x24, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f500:	adrp	x23, 443000 <expanding_var@@Base+0x338>
  40f504:	add	x24, x24, #0xd0
  40f508:	add	x23, x23, #0x120
  40f50c:	add	x22, x29, #0x70
  40f510:	mov	w21, #0x0                   	// #0
  40f514:	nop
  40f518:	mov	w2, w21
  40f51c:	mov	x1, x24
  40f520:	mov	x0, x22
  40f524:	bl	406730 <sprintf@plt>
  40f528:	mov	x0, x22
  40f52c:	add	w21, w21, #0x1
  40f530:	bl	406680 <strlen@plt>
  40f534:	mov	x1, x0
  40f538:	ldr	x3, [x23]
  40f53c:	mov	x0, x22
  40f540:	ldr	x2, [x19]
  40f544:	mov	x6, #0x0                   	// #0
  40f548:	ldr	x5, [x3, #8]
  40f54c:	mov	w4, #0x0                   	// #0
  40f550:	mov	w3, #0x6                   	// #6
  40f554:	bl	422df0 <define_variable_in_set@@Base>
  40f558:	ldr	x0, [x19, #8]!
  40f55c:	cbnz	x0, 40f518 <init_hash_files@@Base+0x10a0>
  40f560:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  40f564:	add	x19, x19, #0x310
  40f568:	ldr	w3, [x19, #88]
  40f56c:	cmp	w3, w21
  40f570:	b.le	40f5dc <init_hash_files@@Base+0x1164>
  40f574:	adrp	x24, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f578:	adrp	x23, 443000 <expanding_var@@Base+0x338>
  40f57c:	adrp	x28, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40f580:	add	x24, x24, #0xd0
  40f584:	add	x23, x23, #0x120
  40f588:	add	x22, x29, #0x70
  40f58c:	add	x28, x28, #0x350
  40f590:	mov	w2, w21
  40f594:	mov	x1, x24
  40f598:	mov	x0, x22
  40f59c:	bl	406730 <sprintf@plt>
  40f5a0:	mov	x0, x22
  40f5a4:	add	w21, w21, #0x1
  40f5a8:	bl	406680 <strlen@plt>
  40f5ac:	mov	x1, x0
  40f5b0:	ldr	x5, [x23]
  40f5b4:	mov	w3, #0x6                   	// #6
  40f5b8:	mov	x2, x28
  40f5bc:	mov	x0, x22
  40f5c0:	mov	x6, #0x0                   	// #0
  40f5c4:	mov	w4, #0x0                   	// #0
  40f5c8:	ldr	x5, [x5, #8]
  40f5cc:	bl	422df0 <define_variable_in_set@@Base>
  40f5d0:	ldr	w3, [x19, #88]
  40f5d4:	cmp	w3, w21
  40f5d8:	b.gt	40f590 <init_hash_files@@Base+0x1118>
  40f5dc:	str	w3, [x29, #108]
  40f5e0:	mov	x2, x27
  40f5e4:	mov	x1, x26
  40f5e8:	mov	x0, x20
  40f5ec:	ldr	w4, [x25, #44]
  40f5f0:	orr	w4, w4, #0x7fff00
  40f5f4:	str	w4, [x25, #44]
  40f5f8:	str	w21, [x19, #88]
  40f5fc:	bl	40ba00 <variable_expand_string@@Base>
  40f600:	mov	x20, x0
  40f604:	ldr	w3, [x29, #108]
  40f608:	str	w3, [x19, #88]
  40f60c:	ldr	w0, [x25, #44]
  40f610:	and	w0, w0, #0xff8000ff
  40f614:	str	w0, [x25, #44]
  40f618:	bl	423500 <pop_variable_scope@@Base>
  40f61c:	mov	x0, x20
  40f620:	bl	406680 <strlen@plt>
  40f624:	add	x0, x20, x0
  40f628:	b	40f40c <init_hash_files@@Base+0xf94>
  40f62c:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  40f630:	ldr	w1, [x1, #2048]
  40f634:	cbz	w1, 40f408 <init_hash_files@@Base+0xf90>
  40f638:	adrp	x3, 445000 <output_context@@Base+0x1250>
  40f63c:	mov	w2, #0x5                   	// #5
  40f640:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  40f644:	add	x1, x1, #0xa18
  40f648:	ldr	x19, [x3, #3552]
  40f64c:	bl	406cd0 <dcgettext@plt>
  40f650:	mov	x4, x21
  40f654:	mov	x2, x0
  40f658:	mov	w3, w22
  40f65c:	mov	x1, x22
  40f660:	mov	x0, x19
  40f664:	bl	419dc8 <error@@Base>
  40f668:	b	40f408 <init_hash_files@@Base+0xf90>
  40f66c:	mov	w1, #0x0                   	// #0
  40f670:	b	40f460 <init_hash_files@@Base+0xfe8>
  40f674:	mov	w21, #0x0                   	// #0
  40f678:	b	40f560 <init_hash_files@@Base+0x10e8>
  40f67c:	nop
  40f680:	stp	x29, x30, [sp, #-96]!
  40f684:	mov	x29, sp
  40f688:	stp	x19, x20, [sp, #16]
  40f68c:	mov	x19, x1
  40f690:	mov	x20, x0
  40f694:	mov	x1, #0x0                   	// #0
  40f698:	stp	x21, x22, [sp, #32]
  40f69c:	mov	w22, #0x0                   	// #0
  40f6a0:	ldr	x0, [x19]
  40f6a4:	stp	x23, x24, [sp, #48]
  40f6a8:	adrp	x23, 429000 <_IO_stdin_used@@Base+0x2c20>
  40f6ac:	stp	x25, x26, [sp, #64]
  40f6b0:	add	x23, x23, #0xb18
  40f6b4:	bl	40b8d0 <expand_argument@@Base>
  40f6b8:	mov	x26, x0
  40f6bc:	mov	x1, #0x0                   	// #0
  40f6c0:	ldr	x0, [x19, #8]
  40f6c4:	bl	40b8d0 <expand_argument@@Base>
  40f6c8:	mov	x25, x0
  40f6cc:	mov	x0, x26
  40f6d0:	str	x25, [sp, #80]
  40f6d4:	ldr	x24, [x19, #16]
  40f6d8:	bl	418cf8 <next_token@@Base>
  40f6dc:	mov	x19, x0
  40f6e0:	bl	418cc8 <end_of_token@@Base>
  40f6e4:	strb	wzr, [x0]
  40f6e8:	bl	4234a0 <push_new_variable_scope@@Base>
  40f6ec:	mov	x0, x19
  40f6f0:	bl	406680 <strlen@plt>
  40f6f4:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  40f6f8:	mov	x1, x0
  40f6fc:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x4c20>
  40f700:	mov	x0, x19
  40f704:	ldr	x5, [x3, #288]
  40f708:	add	x2, x2, #0x350
  40f70c:	mov	x6, #0x0                   	// #0
  40f710:	mov	w4, #0x0                   	// #0
  40f714:	mov	w3, #0x6                   	// #6
  40f718:	ldr	x5, [x5, #8]
  40f71c:	bl	422df0 <define_variable_in_set@@Base>
  40f720:	mov	x21, x0
  40f724:	b	40f780 <init_hash_files@@Base+0x1308>
  40f728:	ldr	x0, [x21, #8]
  40f72c:	mov	w22, #0x1                   	// #1
  40f730:	bl	406b90 <free@plt>
  40f734:	ldr	x1, [sp, #88]
  40f738:	mov	x0, x19
  40f73c:	bl	418c80 <xstrndup@@Base>
  40f740:	str	x0, [x21, #8]
  40f744:	mov	x1, #0x0                   	// #0
  40f748:	mov	x0, x24
  40f74c:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  40f750:	mov	x19, x0
  40f754:	bl	406680 <strlen@plt>
  40f758:	mov	x2, x0
  40f75c:	mov	x1, x19
  40f760:	mov	x0, x20
  40f764:	bl	40b848 <variable_buffer_output@@Base>
  40f768:	mov	x1, x23
  40f76c:	mov	x2, #0x1                   	// #1
  40f770:	bl	40b848 <variable_buffer_output@@Base>
  40f774:	mov	x20, x0
  40f778:	mov	x0, x19
  40f77c:	bl	406b90 <free@plt>
  40f780:	add	x1, sp, #0x58
  40f784:	add	x0, sp, #0x50
  40f788:	bl	418d28 <find_next_token@@Base>
  40f78c:	mov	x19, x0
  40f790:	cbnz	x0, 40f728 <init_hash_files@@Base+0x12b0>
  40f794:	bl	423500 <pop_variable_scope@@Base>
  40f798:	and	x22, x22, #0x1
  40f79c:	mov	x0, x26
  40f7a0:	bl	406b90 <free@plt>
  40f7a4:	sub	x20, x20, x22
  40f7a8:	mov	x0, x25
  40f7ac:	bl	406b90 <free@plt>
  40f7b0:	mov	x0, x20
  40f7b4:	ldp	x19, x20, [sp, #16]
  40f7b8:	ldp	x21, x22, [sp, #32]
  40f7bc:	ldp	x23, x24, [sp, #48]
  40f7c0:	ldp	x25, x26, [sp, #64]
  40f7c4:	ldp	x29, x30, [sp], #96
  40f7c8:	ret
  40f7cc:	nop
  40f7d0:	stp	x29, x30, [sp, #-32]!
  40f7d4:	mov	x29, sp
  40f7d8:	stp	x19, x20, [sp, #16]
  40f7dc:	mov	x19, x0
  40f7e0:	ldr	x20, [x1]
  40f7e4:	mov	x0, x20
  40f7e8:	bl	406680 <strlen@plt>
  40f7ec:	mov	x1, x0
  40f7f0:	mov	x0, x20
  40f7f4:	bl	4231f0 <lookup_variable@@Base>
  40f7f8:	cbz	x0, 40f8ac <init_hash_files@@Base+0x1434>
  40f7fc:	ldrb	w1, [x0, #47]
  40f800:	ubfx	x1, x1, #2, #3
  40f804:	cmp	w1, #0x3
  40f808:	b.eq	40f8c8 <init_hash_files@@Base+0x1450>  // b.none
  40f80c:	b.hi	40f83c <init_hash_files@@Base+0x13c4>  // b.pmore
  40f810:	cmp	w1, #0x1
  40f814:	b.eq	40f900 <init_hash_files@@Base+0x1488>  // b.none
  40f818:	cmp	w1, #0x2
  40f81c:	b.ne	40f88c <init_hash_files@@Base+0x1414>  // b.any
  40f820:	mov	x0, x19
  40f824:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f828:	ldp	x19, x20, [sp, #16]
  40f82c:	add	x1, x1, #0x240
  40f830:	ldp	x29, x30, [sp], #32
  40f834:	mov	x2, #0x4                   	// #4
  40f838:	b	40b848 <variable_buffer_output@@Base>
  40f83c:	cmp	w1, #0x5
  40f840:	b.eq	40f8e4 <init_hash_files@@Base+0x146c>  // b.none
  40f844:	cmp	w1, #0x6
  40f848:	b.ne	40f868 <init_hash_files@@Base+0x13f0>  // b.any
  40f84c:	mov	x0, x19
  40f850:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f854:	ldp	x19, x20, [sp, #16]
  40f858:	add	x1, x1, #0x280
  40f85c:	ldp	x29, x30, [sp], #32
  40f860:	mov	x2, #0x9                   	// #9
  40f864:	b	40b848 <variable_buffer_output@@Base>
  40f868:	cmp	w1, #0x4
  40f86c:	b.ne	40f91c <init_hash_files@@Base+0x14a4>  // b.any
  40f870:	mov	x0, x19
  40f874:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f878:	ldp	x19, x20, [sp, #16]
  40f87c:	add	x1, x1, #0x260
  40f880:	ldp	x29, x30, [sp], #32
  40f884:	mov	x2, #0xc                   	// #12
  40f888:	b	40b848 <variable_buffer_output@@Base>
  40f88c:	cbnz	w1, 40f91c <init_hash_files@@Base+0x14a4>
  40f890:	mov	x0, x19
  40f894:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f898:	ldp	x19, x20, [sp, #16]
  40f89c:	add	x1, x1, #0x228
  40f8a0:	ldp	x29, x30, [sp], #32
  40f8a4:	mov	x2, #0x7                   	// #7
  40f8a8:	b	40b848 <variable_buffer_output@@Base>
  40f8ac:	mov	x0, x19
  40f8b0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f8b4:	ldp	x19, x20, [sp, #16]
  40f8b8:	add	x1, x1, #0x218
  40f8bc:	ldp	x29, x30, [sp], #32
  40f8c0:	mov	x2, #0x9                   	// #9
  40f8c4:	b	40b848 <variable_buffer_output@@Base>
  40f8c8:	mov	x0, x19
  40f8cc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f8d0:	ldp	x19, x20, [sp, #16]
  40f8d4:	add	x1, x1, #0x248
  40f8d8:	ldp	x29, x30, [sp], #32
  40f8dc:	mov	x2, #0x14                  	// #20
  40f8e0:	b	40b848 <variable_buffer_output@@Base>
  40f8e4:	mov	x0, x19
  40f8e8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f8ec:	ldp	x19, x20, [sp, #16]
  40f8f0:	add	x1, x1, #0x270
  40f8f4:	ldp	x29, x30, [sp], #32
  40f8f8:	mov	x2, #0x8                   	// #8
  40f8fc:	b	40b848 <variable_buffer_output@@Base>
  40f900:	mov	x0, x19
  40f904:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  40f908:	ldp	x19, x20, [sp, #16]
  40f90c:	add	x1, x1, #0x230
  40f910:	ldp	x29, x30, [sp], #32
  40f914:	mov	x2, #0xb                   	// #11
  40f918:	b	40b848 <variable_buffer_output@@Base>
  40f91c:	bl	406ab0 <abort@plt>
  40f920:	stp	x29, x30, [sp, #-128]!
  40f924:	mov	w4, #0x19                  	// #25
  40f928:	mov	x3, #0x0                   	// #0
  40f92c:	mov	x29, sp
  40f930:	ldr	x5, [x1]
  40f934:	stp	x21, x22, [sp, #32]
  40f938:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  40f93c:	add	x21, x21, #0x310
  40f940:	mov	w2, #0x1                   	// #1
  40f944:	mov	x1, #0x10                  	// #16
  40f948:	stp	x19, x20, [sp, #16]
  40f94c:	stp	x23, x24, [sp, #48]
  40f950:	mov	x24, x0
  40f954:	add	x0, sp, #0x78
  40f958:	str	x5, [sp, #120]
  40f95c:	bl	41c510 <parse_file_seq@@Base>
  40f960:	ldr	x19, [x21, #96]
  40f964:	mov	x20, x0
  40f968:	cbz	x19, 40fa54 <init_hash_files@@Base+0x15dc>
  40f96c:	cbz	x20, 40fa4c <init_hash_files@@Base+0x15d4>
  40f970:	mov	x22, #0x0                   	// #0
  40f974:	stp	x25, x26, [sp, #64]
  40f978:	mov	w26, #0x20                  	// #32
  40f97c:	stp	x27, x28, [sp, #80]
  40f980:	b	40f9ac <init_hash_files@@Base+0x1534>
  40f984:	mov	x2, x27
  40f988:	add	x0, x19, x25
  40f98c:	bl	406640 <memcpy@plt>
  40f990:	strb	w26, [x19, x28]
  40f994:	add	x25, x19, x28
  40f998:	ldr	x0, [x23, #8]
  40f99c:	bl	406b90 <free@plt>
  40f9a0:	mov	x0, x23
  40f9a4:	bl	406b90 <free@plt>
  40f9a8:	cbz	x20, 40fa08 <init_hash_files@@Base+0x1590>
  40f9ac:	mov	x23, x20
  40f9b0:	mov	x25, x22
  40f9b4:	ldr	x20, [x20]
  40f9b8:	ldr	x1, [x23, #8]
  40f9bc:	str	x1, [sp, #104]
  40f9c0:	mov	x0, x1
  40f9c4:	bl	406680 <strlen@plt>
  40f9c8:	add	x28, x22, x0
  40f9cc:	ldr	x2, [x21, #104]
  40f9d0:	add	x22, x28, #0x1
  40f9d4:	mov	x27, x0
  40f9d8:	cmp	x22, x2
  40f9dc:	ldr	x1, [sp, #104]
  40f9e0:	b.ls	40f984 <init_hash_files@@Base+0x150c>  // b.plast
  40f9e4:	add	x1, x0, #0x1
  40f9e8:	mov	x0, x19
  40f9ec:	add	x1, x2, x1, lsl #1
  40f9f0:	str	x1, [x21, #104]
  40f9f4:	bl	418aa0 <xrealloc@@Base>
  40f9f8:	mov	x19, x0
  40f9fc:	str	x0, [x21, #96]
  40fa00:	ldr	x1, [x23, #8]
  40fa04:	b	40f984 <init_hash_files@@Base+0x150c>
  40fa08:	cbz	x22, 40fa44 <init_hash_files@@Base+0x15cc>
  40fa0c:	strb	wzr, [x25]
  40fa10:	ldp	x25, x26, [sp, #64]
  40fa14:	ldp	x27, x28, [sp, #80]
  40fa18:	mov	x0, x19
  40fa1c:	bl	406680 <strlen@plt>
  40fa20:	mov	x2, x0
  40fa24:	mov	x1, x19
  40fa28:	mov	x0, x24
  40fa2c:	bl	40b848 <variable_buffer_output@@Base>
  40fa30:	ldp	x19, x20, [sp, #16]
  40fa34:	ldp	x21, x22, [sp, #32]
  40fa38:	ldp	x23, x24, [sp, #48]
  40fa3c:	ldp	x29, x30, [sp], #128
  40fa40:	ret
  40fa44:	ldp	x25, x26, [sp, #64]
  40fa48:	ldp	x27, x28, [sp, #80]
  40fa4c:	strb	wzr, [x19]
  40fa50:	b	40fa18 <init_hash_files@@Base+0x15a0>
  40fa54:	mov	x0, #0x64                  	// #100
  40fa58:	str	x0, [x21, #104]
  40fa5c:	bl	418a50 <xmalloc@@Base>
  40fa60:	mov	x19, x0
  40fa64:	str	x0, [x21, #96]
  40fa68:	b	40f96c <init_hash_files@@Base+0x14f4>
  40fa6c:	nop
  40fa70:	stp	x29, x30, [sp, #-128]!
  40fa74:	mov	x29, sp
  40fa78:	stp	x19, x20, [sp, #16]
  40fa7c:	mov	x20, x0
  40fa80:	mov	w19, #0x0                   	// #0
  40fa84:	ldr	x0, [x1]
  40fa88:	stp	x21, x22, [sp, #32]
  40fa8c:	mov	x22, x1
  40fa90:	stp	x1, x0, [sp, #104]
  40fa94:	b	40faa8 <init_hash_files@@Base+0x1630>
  40fa98:	ldr	x1, [sp, #112]
  40fa9c:	add	w19, w19, #0x1
  40faa0:	add	x1, x1, #0x1
  40faa4:	str	x1, [sp, #112]
  40faa8:	add	x0, sp, #0x70
  40faac:	mov	x1, #0x0                   	// #0
  40fab0:	bl	418d28 <find_next_token@@Base>
  40fab4:	cbnz	x0, 40fa98 <init_hash_files@@Base+0x1620>
  40fab8:	cmp	w19, #0x0
  40fabc:	sbfiz	x19, x19, #3, #32
  40fac0:	mov	x0, #0x8                   	// #8
  40fac4:	csel	x0, x19, x0, ne  // ne = any
  40fac8:	mov	x19, #0x0                   	// #0
  40facc:	bl	418a50 <xmalloc@@Base>
  40fad0:	mov	x21, x0
  40fad4:	ldr	x1, [x22]
  40fad8:	str	x1, [sp, #112]
  40fadc:	b	40faf8 <init_hash_files@@Base+0x1680>
  40fae0:	ldp	x1, x2, [sp, #112]
  40fae4:	add	x1, x1, #0x1
  40fae8:	str	x1, [sp, #112]
  40faec:	strb	wzr, [x0, x2]
  40faf0:	str	x0, [x21, x19, lsl #3]
  40faf4:	add	x19, x19, #0x1
  40faf8:	add	x1, sp, #0x78
  40fafc:	add	x0, sp, #0x70
  40fb00:	mov	w22, w19
  40fb04:	bl	418d28 <find_next_token@@Base>
  40fb08:	cbnz	x0, 40fae0 <init_hash_files@@Base+0x1668>
  40fb0c:	cbnz	w19, 40fb2c <init_hash_files@@Base+0x16b4>
  40fb10:	mov	x0, x21
  40fb14:	bl	406b90 <free@plt>
  40fb18:	mov	x0, x20
  40fb1c:	ldp	x19, x20, [sp, #16]
  40fb20:	ldp	x21, x22, [sp, #32]
  40fb24:	ldp	x29, x30, [sp], #128
  40fb28:	ret
  40fb2c:	sxtw	x1, w19
  40fb30:	mov	x0, x21
  40fb34:	adrp	x3, 418000 <die@@Base+0x590>
  40fb38:	mov	x2, #0x8                   	// #8
  40fb3c:	add	x3, x3, #0x7b0
  40fb40:	stp	x23, x24, [sp, #48]
  40fb44:	mov	x24, x21
  40fb48:	mov	w23, #0x0                   	// #0
  40fb4c:	stp	x25, x26, [sp, #64]
  40fb50:	adrp	x26, 429000 <_IO_stdin_used@@Base+0x2c20>
  40fb54:	add	x26, x26, #0xb18
  40fb58:	stp	x27, x28, [sp, #80]
  40fb5c:	sub	w27, w19, #0x1
  40fb60:	bl	4067b0 <qsort@plt>
  40fb64:	b	40fb94 <init_hash_files@@Base+0x171c>
  40fb68:	mov	x2, x19
  40fb6c:	mov	x1, x25
  40fb70:	mov	x0, x20
  40fb74:	bl	40b848 <variable_buffer_output@@Base>
  40fb78:	mov	x1, x26
  40fb7c:	mov	x2, #0x1                   	// #1
  40fb80:	bl	40b848 <variable_buffer_output@@Base>
  40fb84:	add	x24, x24, #0x8
  40fb88:	mov	x20, x0
  40fb8c:	cmp	w22, w23
  40fb90:	b.eq	40fbe4 <init_hash_files@@Base+0x176c>  // b.none
  40fb94:	ldr	x25, [x24]
  40fb98:	mov	x0, x25
  40fb9c:	bl	406680 <strlen@plt>
  40fba0:	str	x0, [sp, #120]
  40fba4:	cmp	w27, w23
  40fba8:	mov	x19, x0
  40fbac:	add	w23, w23, #0x1
  40fbb0:	b.eq	40fb68 <init_hash_files@@Base+0x16f0>  // b.none
  40fbb4:	ldr	x28, [x24, #8]
  40fbb8:	mov	x0, x28
  40fbbc:	bl	406680 <strlen@plt>
  40fbc0:	cmp	x19, x0
  40fbc4:	b.ne	40fb68 <init_hash_files@@Base+0x16f0>  // b.any
  40fbc8:	mov	x1, x28
  40fbcc:	mov	x0, x25
  40fbd0:	bl	406b40 <strcmp@plt>
  40fbd4:	cbnz	w0, 40fb68 <init_hash_files@@Base+0x16f0>
  40fbd8:	add	x24, x24, #0x8
  40fbdc:	cmp	w22, w23
  40fbe0:	b.ne	40fb94 <init_hash_files@@Base+0x171c>  // b.any
  40fbe4:	mov	x0, x21
  40fbe8:	sub	x20, x20, #0x1
  40fbec:	ldp	x23, x24, [sp, #48]
  40fbf0:	ldp	x25, x26, [sp, #64]
  40fbf4:	ldp	x27, x28, [sp, #80]
  40fbf8:	bl	406b90 <free@plt>
  40fbfc:	mov	x0, x20
  40fc00:	ldp	x19, x20, [sp, #16]
  40fc04:	ldp	x21, x22, [sp, #32]
  40fc08:	ldp	x29, x30, [sp], #128
  40fc0c:	ret
  40fc10:	mov	x12, #0x20d0                	// #8400
  40fc14:	sub	sp, sp, x12
  40fc18:	stp	x29, x30, [sp]
  40fc1c:	mov	x29, sp
  40fc20:	stp	x19, x20, [sp, #16]
  40fc24:	mov	x20, x0
  40fc28:	ldr	x0, [x1]
  40fc2c:	stp	x21, x22, [sp, #32]
  40fc30:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x2c20>
  40fc34:	mov	w21, #0x0                   	// #0
  40fc38:	add	x22, x22, #0xb18
  40fc3c:	stp	x0, xzr, [sp, #48]
  40fc40:	b	40fc50 <init_hash_files@@Base+0x17d8>
  40fc44:	ldr	x19, [sp, #56]
  40fc48:	cmp	x19, #0xfff
  40fc4c:	b.ls	40fc80 <init_hash_files@@Base+0x1808>  // b.plast
  40fc50:	add	x1, sp, #0x38
  40fc54:	add	x0, sp, #0x30
  40fc58:	bl	418d28 <find_next_token@@Base>
  40fc5c:	cbnz	x0, 40fc44 <init_hash_files@@Base+0x17cc>
  40fc60:	and	x0, x21, #0x1
  40fc64:	mov	x12, #0x20d0                	// #8400
  40fc68:	sub	x0, x20, x0
  40fc6c:	ldp	x29, x30, [sp]
  40fc70:	ldp	x19, x20, [sp, #16]
  40fc74:	ldp	x21, x22, [sp, #32]
  40fc78:	add	sp, sp, x12
  40fc7c:	ret
  40fc80:	mov	x1, x0
  40fc84:	mov	x2, x19
  40fc88:	add	x0, sp, #0xc0
  40fc8c:	bl	406d20 <strncpy@plt>
  40fc90:	add	x0, sp, #0xc0
  40fc94:	strb	wzr, [x0, x19]
  40fc98:	bl	406d70 <__errno_location@plt>
  40fc9c:	mov	x19, x0
  40fca0:	b	40fcb0 <init_hash_files@@Base+0x1838>
  40fca4:	ldr	w1, [x19]
  40fca8:	cmp	w1, #0x4
  40fcac:	b.ne	40fc50 <init_hash_files@@Base+0x17d8>  // b.any
  40fcb0:	mov	x4, #0x10c8                	// #4296
  40fcb4:	str	wzr, [x19]
  40fcb8:	add	x1, sp, x4
  40fcbc:	add	x0, sp, #0xc0
  40fcc0:	bl	406ce0 <realpath@plt>
  40fcc4:	cbz	x0, 40fca4 <init_hash_files@@Base+0x182c>
  40fcc8:	mov	x3, #0x10c8                	// #4296
  40fccc:	add	x2, sp, #0x40
  40fcd0:	add	x1, sp, x3
  40fcd4:	mov	w0, #0x0                   	// #0
  40fcd8:	bl	406d90 <__xstat@plt>
  40fcdc:	cmn	w0, #0x1
  40fce0:	b.ne	40fd10 <init_hash_files@@Base+0x1898>  // b.any
  40fce4:	nop
  40fce8:	ldr	w0, [x19]
  40fcec:	cmp	w0, #0x4
  40fcf0:	b.ne	40fc50 <init_hash_files@@Base+0x17d8>  // b.any
  40fcf4:	mov	x3, #0x10c8                	// #4296
  40fcf8:	add	x2, sp, #0x40
  40fcfc:	add	x1, sp, x3
  40fd00:	mov	w0, #0x0                   	// #0
  40fd04:	bl	406d90 <__xstat@plt>
  40fd08:	cmn	w0, #0x1
  40fd0c:	b.eq	40fce8 <init_hash_files@@Base+0x1870>  // b.none
  40fd10:	cbnz	w0, 40fc50 <init_hash_files@@Base+0x17d8>
  40fd14:	mov	x0, #0x10c8                	// #4296
  40fd18:	add	x0, sp, x0
  40fd1c:	bl	406680 <strlen@plt>
  40fd20:	mov	x2, x0
  40fd24:	mov	x1, #0x10c8                	// #4296
  40fd28:	mov	x0, x20
  40fd2c:	add	x1, sp, x1
  40fd30:	bl	40b848 <variable_buffer_output@@Base>
  40fd34:	mov	x1, x22
  40fd38:	mov	x2, #0x1                   	// #1
  40fd3c:	mov	w21, #0x1                   	// #1
  40fd40:	bl	40b848 <variable_buffer_output@@Base>
  40fd44:	mov	x20, x0
  40fd48:	b	40fc50 <init_hash_files@@Base+0x17d8>
  40fd4c:	nop
  40fd50:	stp	x29, x30, [sp, #-16]!
  40fd54:	mov	x29, sp
  40fd58:	ldr	x0, [x0, #16]
  40fd5c:	bl	412278 <jhash_string@@Base>
  40fd60:	mov	w0, w0
  40fd64:	ldp	x29, x30, [sp], #16
  40fd68:	ret
  40fd6c:	nop
  40fd70:	mov	x12, #0x2090                	// #8336
  40fd74:	sub	sp, sp, x12
  40fd78:	stp	x29, x30, [sp]
  40fd7c:	mov	x29, sp
  40fd80:	stp	x21, x22, [sp, #32]
  40fd84:	mov	x22, x0
  40fd88:	stp	x25, x26, [sp, #64]
  40fd8c:	adrp	x25, 429000 <_IO_stdin_used@@Base+0x2c20>
  40fd90:	add	x0, x25, #0xb18
  40fd94:	str	x0, [sp, #96]
  40fd98:	ldr	x0, [x1]
  40fd9c:	stp	x19, x20, [sp, #16]
  40fda0:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  40fda4:	add	x20, x20, #0x448
  40fda8:	stp	x23, x24, [sp, #48]
  40fdac:	mov	w23, #0x0                   	// #0
  40fdb0:	str	x0, [sp, #112]
  40fdb4:	str	xzr, [sp, #120]
  40fdb8:	b	40fdc8 <init_hash_files@@Base+0x1950>
  40fdbc:	ldr	x19, [sp, #120]
  40fdc0:	cmp	x19, #0xfff
  40fdc4:	b.ls	40fe00 <init_hash_files@@Base+0x1988>  // b.plast
  40fdc8:	add	x1, sp, #0x78
  40fdcc:	add	x0, sp, #0x70
  40fdd0:	bl	418d28 <find_next_token@@Base>
  40fdd4:	cbnz	x0, 40fdbc <init_hash_files@@Base+0x1944>
  40fdd8:	and	x0, x23, #0x1
  40fddc:	mov	x12, #0x2090                	// #8336
  40fde0:	sub	x0, x22, x0
  40fde4:	ldp	x29, x30, [sp]
  40fde8:	ldp	x19, x20, [sp, #16]
  40fdec:	ldp	x21, x22, [sp, #32]
  40fdf0:	ldp	x23, x24, [sp, #48]
  40fdf4:	ldp	x25, x26, [sp, #64]
  40fdf8:	add	sp, sp, x12
  40fdfc:	ret
  40fe00:	mov	x1, x0
  40fe04:	mov	x2, x19
  40fe08:	add	x0, sp, #0x80
  40fe0c:	stp	x27, x28, [sp, #80]
  40fe10:	bl	406d20 <strncpy@plt>
  40fe14:	add	x0, sp, #0x80
  40fe18:	strb	wzr, [x0, x19]
  40fe1c:	ldrb	w27, [sp, #128]
  40fe20:	cbz	w27, 40ff38 <init_hash_files@@Base+0x1ac0>
  40fe24:	cmp	w27, #0x2f
  40fe28:	b.eq	40ff90 <init_hash_files@@Base+0x1b18>  // b.none
  40fe2c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  40fe30:	ldr	x1, [x0, #1976]
  40fe34:	cbz	x1, 40ff38 <init_hash_files@@Base+0x1ac0>
  40fe38:	add	x25, sp, #0x80
  40fe3c:	mov	x2, #0x1088                	// #4232
  40fe40:	add	x24, sp, x2
  40fe44:	mov	x0, x24
  40fe48:	bl	406840 <stpcpy@plt>
  40fe4c:	ldrh	w19, [x20, w27, sxtw #1]
  40fe50:	add	x21, x24, #0x1, lsl #12
  40fe54:	add	x1, x24, #0x1
  40fe58:	mov	w26, #0x2f                  	// #47
  40fe5c:	str	x1, [sp, #104]
  40fe60:	mov	w3, w27
  40fe64:	mov	x1, x25
  40fe68:	tbz	w19, #15, 40fe80 <init_hash_files@@Base+0x1a08>
  40fe6c:	nop
  40fe70:	ldrb	w3, [x25, #1]!
  40fe74:	ldrh	w19, [x20, w3, sxtw #1]
  40fe78:	tbnz	w19, #15, 40fe70 <init_hash_files@@Base+0x19f8>
  40fe7c:	mov	x1, x25
  40fe80:	and	w19, w19, #0xffff8001
  40fe84:	cbnz	w19, 40fee8 <init_hash_files@@Base+0x1a70>
  40fe88:	ldrb	w27, [x25, #1]!
  40fe8c:	ldrh	w19, [x20, w27, sxtw #1]
  40fe90:	and	w2, w19, #0xffff8001
  40fe94:	cbz	w2, 40fe88 <init_hash_files@@Base+0x1a10>
  40fe98:	subs	x28, x25, x1
  40fe9c:	b.eq	40fee8 <init_hash_files@@Base+0x1a70>  // b.none
  40fea0:	cmp	x28, #0x1
  40fea4:	b.eq	40ff40 <init_hash_files@@Base+0x1ac8>  // b.none
  40fea8:	cmp	w3, #0x2e
  40feac:	ccmp	x28, #0x2, #0x0, eq  // eq = none
  40feb0:	b.eq	40ff50 <init_hash_files@@Base+0x1ad8>  // b.none
  40feb4:	ldurb	w2, [x0, #-1]
  40feb8:	ldrsh	w2, [x20, x2, lsl #1]
  40febc:	tbnz	w2, #31, 40fec4 <init_hash_files@@Base+0x1a4c>
  40fec0:	strb	w26, [x0], #1
  40fec4:	add	x2, x0, x28
  40fec8:	cmp	x21, x2
  40fecc:	b.ls	40ff38 <init_hash_files@@Base+0x1ac0>  // b.plast
  40fed0:	mov	x2, x28
  40fed4:	bl	406640 <memcpy@plt>
  40fed8:	mov	x1, x0
  40fedc:	add	x0, x0, x28
  40fee0:	strb	wzr, [x1, x28]
  40fee4:	cbnz	w27, 40fe60 <init_hash_files@@Base+0x19e8>
  40fee8:	add	x1, x24, #0x1
  40feec:	cmp	x0, x1
  40fef0:	b.ls	40ff00 <init_hash_files@@Base+0x1a88>  // b.plast
  40fef4:	ldurb	w1, [x0, #-1]
  40fef8:	ldrsh	x1, [x20, x1, lsl #1]
  40fefc:	sub	x0, x0, x1, lsr #63
  40ff00:	strb	wzr, [x0]
  40ff04:	mov	x0, x24
  40ff08:	mov	w23, #0x1                   	// #1
  40ff0c:	bl	406680 <strlen@plt>
  40ff10:	mov	x2, x0
  40ff14:	mov	x1, x24
  40ff18:	mov	x0, x22
  40ff1c:	bl	40b848 <variable_buffer_output@@Base>
  40ff20:	ldr	x1, [sp, #96]
  40ff24:	mov	x2, #0x1                   	// #1
  40ff28:	bl	40b848 <variable_buffer_output@@Base>
  40ff2c:	mov	x22, x0
  40ff30:	ldp	x27, x28, [sp, #80]
  40ff34:	b	40fdc8 <init_hash_files@@Base+0x1950>
  40ff38:	ldp	x27, x28, [sp, #80]
  40ff3c:	b	40fdc8 <init_hash_files@@Base+0x1950>
  40ff40:	cmp	w3, #0x2e
  40ff44:	b.ne	40feb4 <init_hash_files@@Base+0x1a3c>  // b.any
  40ff48:	cbnz	w27, 40fe60 <init_hash_files@@Base+0x19e8>
  40ff4c:	b	40fee8 <init_hash_files@@Base+0x1a70>
  40ff50:	ldrb	w2, [x1, #1]
  40ff54:	cmp	w2, #0x2e
  40ff58:	b.ne	40feb4 <init_hash_files@@Base+0x1a3c>  // b.any
  40ff5c:	ldr	x1, [sp, #104]
  40ff60:	cmp	x0, x1
  40ff64:	b.ls	40fee4 <init_hash_files@@Base+0x1a6c>  // b.plast
  40ff68:	ldurb	w1, [x0, #-2]
  40ff6c:	sub	x0, x0, #0x1
  40ff70:	ldrsh	w1, [x20, x1, lsl #1]
  40ff74:	tbnz	w1, #31, 40fee4 <init_hash_files@@Base+0x1a6c>
  40ff78:	ldurb	w1, [x0, #-2]
  40ff7c:	sub	x0, x0, #0x1
  40ff80:	ldrsh	w1, [x20, x1, lsl #1]
  40ff84:	tbz	w1, #31, 40ff78 <init_hash_files@@Base+0x1b00>
  40ff88:	cbnz	w27, 40fe60 <init_hash_files@@Base+0x19e8>
  40ff8c:	b	40fee8 <init_hash_files@@Base+0x1a70>
  40ff90:	strh	w27, [sp, #4232]
  40ff94:	mov	x0, #0x1088                	// #4232
  40ff98:	ldrb	w27, [sp, #129]
  40ff9c:	add	x24, sp, x0
  40ffa0:	add	x0, x24, #0x1
  40ffa4:	cbz	w27, 40ff00 <init_hash_files@@Base+0x1a88>
  40ffa8:	add	x25, sp, #0x81
  40ffac:	add	x0, x24, #0x1
  40ffb0:	b	40fe4c <init_hash_files@@Base+0x19d4>
  40ffb4:	nop
  40ffb8:	ldrb	w2, [x0, #16]
  40ffbc:	mov	x3, x0
  40ffc0:	ldrb	w0, [x1, #16]
  40ffc4:	subs	w0, w2, w0
  40ffc8:	b.ne	40ffe8 <init_hash_files@@Base+0x1b70>  // b.any
  40ffcc:	ldr	x1, [x1, #8]
  40ffd0:	ldr	x3, [x3, #8]
  40ffd4:	cmp	x3, x1
  40ffd8:	b.eq	40ffe8 <init_hash_files@@Base+0x1b70>  // b.none
  40ffdc:	and	x2, x2, #0xff
  40ffe0:	mov	x0, x3
  40ffe4:	b	406b00 <memcmp@plt>
  40ffe8:	ret
  40ffec:	nop
  40fff0:	stp	x29, x30, [sp, #-16]!
  40fff4:	mov	x29, sp
  40fff8:	ldrb	w1, [x0, #16]
  40fffc:	ldr	x0, [x0, #8]
  410000:	bl	412120 <jhash@@Base>
  410004:	mov	w0, w0
  410008:	ldp	x29, x30, [sp], #16
  41000c:	ret
  410010:	mov	x2, x0
  410014:	ldr	x3, [x1, #24]
  410018:	ldr	x0, [x0, #24]
  41001c:	subs	w0, w0, w3
  410020:	b.ne	41003c <init_hash_files@@Base+0x1bc4>  // b.any
  410024:	ldr	x1, [x1, #16]
  410028:	ldr	x2, [x2, #16]
  41002c:	cmp	x2, x1
  410030:	b.eq	41003c <init_hash_files@@Base+0x1bc4>  // b.none
  410034:	mov	x0, x2
  410038:	b	406b40 <strcmp@plt>
  41003c:	ret
  410040:	stp	x29, x30, [sp, #-32]!
  410044:	mov	x29, sp
  410048:	stp	x19, x20, [sp, #16]
  41004c:	mov	x19, x0
  410050:	ldr	x20, [x1]
  410054:	mov	x0, x20
  410058:	bl	406680 <strlen@plt>
  41005c:	mov	x1, x0
  410060:	mov	x0, x20
  410064:	bl	4231f0 <lookup_variable@@Base>
  410068:	cbz	x0, 4100ac <init_hash_files@@Base+0x1c34>
  41006c:	ldrb	w0, [x0, #44]
  410070:	tbz	w0, #0, 410090 <init_hash_files@@Base+0x1c18>
  410074:	mov	x0, x19
  410078:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  41007c:	ldp	x19, x20, [sp, #16]
  410080:	add	x1, x1, #0x290
  410084:	ldp	x29, x30, [sp], #32
  410088:	mov	x2, #0x9                   	// #9
  41008c:	b	40b848 <variable_buffer_output@@Base>
  410090:	mov	x0, x19
  410094:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  410098:	ldp	x19, x20, [sp, #16]
  41009c:	add	x1, x1, #0x2a0
  4100a0:	ldp	x29, x30, [sp], #32
  4100a4:	mov	x2, #0x6                   	// #6
  4100a8:	b	40b848 <variable_buffer_output@@Base>
  4100ac:	mov	x0, x19
  4100b0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  4100b4:	ldp	x19, x20, [sp, #16]
  4100b8:	add	x1, x1, #0x218
  4100bc:	ldp	x29, x30, [sp], #32
  4100c0:	mov	x2, #0x9                   	// #9
  4100c4:	b	40b848 <variable_buffer_output@@Base>
  4100c8:	mov	x0, #0x0                   	// #0
  4100cc:	ret

00000000004100d0 <subst_expand@@Base>:
  4100d0:	stp	x29, x30, [sp, #-112]!
  4100d4:	cmp	x4, #0x0
  4100d8:	mov	x29, sp
  4100dc:	stp	x21, x22, [sp, #32]
  4100e0:	cset	w21, eq  // eq = none
  4100e4:	cmp	w6, #0x0
  4100e8:	stp	x23, x24, [sp, #48]
  4100ec:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  4100f0:	mov	x24, x5
  4100f4:	stp	x25, x26, [sp, #64]
  4100f8:	mov	x25, x1
  4100fc:	stp	x27, x28, [sp, #80]
  410100:	mov	x27, x0
  410104:	str	x3, [sp, #104]
  410108:	b.ne	410244 <subst_expand@@Base+0x174>  // b.any
  41010c:	cmp	w6, #0x0
  410110:	adrp	x26, 443000 <expanding_var@@Base+0x338>
  410114:	mov	w23, w6
  410118:	mov	x22, x2
  41011c:	csel	w21, w21, wzr, ne  // ne = any
  410120:	mov	x28, x1
  410124:	add	x26, x26, #0x448
  410128:	stp	x19, x20, [sp, #16]
  41012c:	mov	x20, x4
  410130:	cbnz	w21, 410184 <subst_expand@@Base+0xb4>
  410134:	mov	x1, x22
  410138:	mov	x0, x28
  41013c:	bl	406cc0 <strstr@plt>
  410140:	mov	x19, x0
  410144:	cbz	x0, 410214 <subst_expand@@Base+0x144>
  410148:	cmp	x28, x0
  41014c:	b.cc	4101fc <subst_expand@@Base+0x12c>  // b.lo, b.ul, b.last
  410150:	add	x28, x19, x20
  410154:	cbnz	w23, 4101a0 <subst_expand@@Base+0xd0>
  410158:	cbnz	x24, 4101e4 <subst_expand@@Base+0x114>
  41015c:	ldrb	w0, [x28]
  410160:	cbnz	w0, 410130 <subst_expand@@Base+0x60>
  410164:	ldp	x19, x20, [sp, #16]
  410168:	mov	x0, x27
  41016c:	ldp	x21, x22, [sp, #32]
  410170:	ldp	x23, x24, [sp, #48]
  410174:	ldp	x25, x26, [sp, #64]
  410178:	ldp	x27, x28, [sp, #80]
  41017c:	ldp	x29, x30, [sp], #112
  410180:	ret
  410184:	mov	x0, x28
  410188:	bl	418cf8 <next_token@@Base>
  41018c:	bl	418cc8 <end_of_token@@Base>
  410190:	mov	x19, x0
  410194:	cmp	x28, x0
  410198:	b.cc	4101fc <subst_expand@@Base+0x12c>  // b.lo, b.ul, b.last
  41019c:	mov	x28, x0
  4101a0:	cmp	x19, x25
  4101a4:	b.ls	4101d0 <subst_expand@@Base+0x100>  // b.plast
  4101a8:	ldurb	w0, [x19, #-1]
  4101ac:	ldrh	w0, [x26, x0, lsl #1]
  4101b0:	tst	w0, #0x6
  4101b4:	b.ne	4101d0 <subst_expand@@Base+0x100>  // b.any
  4101b8:	mov	x0, x27
  4101bc:	mov	x2, x20
  4101c0:	mov	x1, x22
  4101c4:	bl	40b848 <variable_buffer_output@@Base>
  4101c8:	mov	x27, x0
  4101cc:	b	41015c <subst_expand@@Base+0x8c>
  4101d0:	ldrb	w0, [x28]
  4101d4:	ldrh	w0, [x26, x0, lsl #1]
  4101d8:	tst	x0, #0x7
  4101dc:	b.eq	4101b8 <subst_expand@@Base+0xe8>  // b.none
  4101e0:	cbz	x24, 41015c <subst_expand@@Base+0x8c>
  4101e4:	ldr	x1, [sp, #104]
  4101e8:	mov	x0, x27
  4101ec:	mov	x2, x24
  4101f0:	bl	40b848 <variable_buffer_output@@Base>
  4101f4:	mov	x27, x0
  4101f8:	b	41015c <subst_expand@@Base+0x8c>
  4101fc:	mov	x0, x27
  410200:	sub	x2, x19, x28
  410204:	mov	x1, x28
  410208:	bl	40b848 <variable_buffer_output@@Base>
  41020c:	mov	x27, x0
  410210:	b	410150 <subst_expand@@Base+0x80>
  410214:	mov	x0, x28
  410218:	bl	406680 <strlen@plt>
  41021c:	ldp	x19, x20, [sp, #16]
  410220:	mov	x2, x0
  410224:	mov	x1, x28
  410228:	mov	x0, x27
  41022c:	ldp	x21, x22, [sp, #32]
  410230:	ldp	x23, x24, [sp, #48]
  410234:	ldp	x25, x26, [sp, #64]
  410238:	ldp	x27, x28, [sp, #80]
  41023c:	ldp	x29, x30, [sp], #112
  410240:	b	40b848 <variable_buffer_output@@Base>
  410244:	mov	x0, x1
  410248:	bl	406680 <strlen@plt>
  41024c:	mov	x1, x25
  410250:	mov	x2, x0
  410254:	mov	x0, x27
  410258:	bl	40b848 <variable_buffer_output@@Base>
  41025c:	mov	x27, x0
  410260:	cbz	x24, 410168 <subst_expand@@Base+0x98>
  410264:	mov	x2, x24
  410268:	ldr	x1, [sp, #104]
  41026c:	b	41022c <subst_expand@@Base+0x15c>
  410270:	stp	x29, x30, [sp, #-64]!
  410274:	mov	x29, sp
  410278:	stp	x19, x20, [sp, #16]
  41027c:	mov	x19, x1
  410280:	mov	x20, x0
  410284:	stp	x21, x22, [sp, #32]
  410288:	ldr	x22, [x1]
  41028c:	str	x23, [sp, #48]
  410290:	mov	x0, x22
  410294:	bl	406680 <strlen@plt>
  410298:	ldr	x23, [x19, #8]
  41029c:	mov	x21, x0
  4102a0:	mov	x0, x23
  4102a4:	bl	406680 <strlen@plt>
  4102a8:	mov	x3, x23
  4102ac:	mov	x5, x0
  4102b0:	mov	x2, x22
  4102b4:	mov	x4, x21
  4102b8:	mov	x0, x20
  4102bc:	mov	w6, #0x0                   	// #0
  4102c0:	ldr	x1, [x19, #16]
  4102c4:	ldp	x19, x20, [sp, #16]
  4102c8:	ldp	x21, x22, [sp, #32]
  4102cc:	ldr	x23, [sp, #48]
  4102d0:	ldp	x29, x30, [sp], #64
  4102d4:	b	4100d0 <subst_expand@@Base>

00000000004102d8 <patsubst_expand_pat@@Base>:
  4102d8:	stp	x29, x30, [sp, #-176]!
  4102dc:	mov	x29, sp
  4102e0:	stp	x19, x20, [sp, #16]
  4102e4:	mov	x19, x4
  4102e8:	stp	x21, x22, [sp, #32]
  4102ec:	mov	x21, x5
  4102f0:	stp	x23, x24, [sp, #48]
  4102f4:	stp	x25, x26, [sp, #64]
  4102f8:	mov	x25, x2
  4102fc:	stp	x27, x28, [sp, #80]
  410300:	mov	x28, x0
  410304:	str	x3, [sp, #120]
  410308:	str	x1, [sp, #152]
  41030c:	cbz	x5, 4104e8 <patsubst_expand_pat@@Base+0x210>
  410310:	sub	x22, x5, x3
  410314:	mov	x0, x5
  410318:	sub	x22, x22, #0x1
  41031c:	bl	406680 <strlen@plt>
  410320:	mov	x23, x0
  410324:	cbz	x19, 4104fc <patsubst_expand_pat@@Base+0x224>
  410328:	sub	x24, x19, x25
  41032c:	mov	x0, x19
  410330:	bl	406680 <strlen@plt>
  410334:	adrp	x27, 429000 <_IO_stdin_used@@Base+0x2c20>
  410338:	mov	x1, x24
  41033c:	add	x27, x27, #0xb18
  410340:	sub	x24, x24, #0x1
  410344:	sub	x1, x1, #0x2
  410348:	add	x20, x24, x0
  41034c:	mov	w26, #0x0                   	// #0
  410350:	stp	x1, x0, [sp, #128]
  410354:	sub	x0, x0, #0x1
  410358:	str	x0, [sp, #104]
  41035c:	add	x1, sp, #0xa8
  410360:	add	x0, sp, #0x98
  410364:	bl	418d28 <find_next_token@@Base>
  410368:	mov	x4, x0
  41036c:	cbz	x0, 4103d0 <patsubst_expand_pat@@Base+0xf8>
  410370:	ldr	x5, [sp, #168]
  410374:	cmp	x20, x5
  410378:	b.hi	410390 <patsubst_expand_pat@@Base+0xb8>  // b.pmore
  41037c:	cbz	x24, 410430 <patsubst_expand_pat@@Base+0x158>
  410380:	ldrb	w1, [x4]
  410384:	ldrb	w0, [x25]
  410388:	cmp	w1, w0
  41038c:	b.eq	4103f8 <patsubst_expand_pat@@Base+0x120>  // b.none
  410390:	mov	x0, x28
  410394:	mov	x2, x5
  410398:	mov	x1, x4
  41039c:	bl	40b848 <variable_buffer_output@@Base>
  4103a0:	mov	x28, x0
  4103a4:	mov	x2, #0x1                   	// #1
  4103a8:	mov	x0, x28
  4103ac:	mov	x1, x27
  4103b0:	bl	40b848 <variable_buffer_output@@Base>
  4103b4:	add	x1, sp, #0xa8
  4103b8:	mov	x28, x0
  4103bc:	mov	w26, #0x1                   	// #1
  4103c0:	add	x0, sp, #0x98
  4103c4:	bl	418d28 <find_next_token@@Base>
  4103c8:	mov	x4, x0
  4103cc:	cbnz	x0, 410370 <patsubst_expand_pat@@Base+0x98>
  4103d0:	and	x26, x26, #0x1
  4103d4:	sub	x28, x28, x26
  4103d8:	mov	x0, x28
  4103dc:	ldp	x19, x20, [sp, #16]
  4103e0:	ldp	x21, x22, [sp, #32]
  4103e4:	ldp	x23, x24, [sp, #48]
  4103e8:	ldp	x25, x26, [sp, #64]
  4103ec:	ldp	x27, x28, [sp, #80]
  4103f0:	ldp	x29, x30, [sp], #176
  4103f4:	ret
  4103f8:	ldr	x0, [sp, #128]
  4103fc:	ldrb	w1, [x4, x0]
  410400:	ldurb	w0, [x19, #-2]
  410404:	cmp	w1, w0
  410408:	b.ne	410390 <patsubst_expand_pat@@Base+0xb8>  // b.any
  41040c:	ldr	x2, [sp, #128]
  410410:	add	x0, x4, #0x1
  410414:	add	x1, x25, #0x1
  410418:	str	x4, [sp, #112]
  41041c:	str	x5, [sp, #144]
  410420:	bl	406930 <strncmp@plt>
  410424:	ldr	x4, [sp, #112]
  410428:	ldr	x5, [sp, #144]
  41042c:	cbnz	w0, 410390 <patsubst_expand_pat@@Base+0xb8>
  410430:	ldr	x0, [sp, #136]
  410434:	cbz	x0, 41048c <patsubst_expand_pat@@Base+0x1b4>
  410438:	ldr	x1, [sp, #104]
  41043c:	add	x0, x4, x5
  410440:	ldrb	w1, [x19, x1]
  410444:	ldurb	w0, [x0, #-1]
  410448:	cmp	w0, w1
  41044c:	b.ne	410390 <patsubst_expand_pat@@Base+0xb8>  // b.any
  410450:	ldr	x0, [sp, #136]
  410454:	ldrb	w2, [x19]
  410458:	sub	x1, x5, x0
  41045c:	add	x0, x4, x1
  410460:	ldrb	w1, [x4, x1]
  410464:	cmp	w1, w2
  410468:	b.ne	410390 <patsubst_expand_pat@@Base+0xb8>  // b.any
  41046c:	ldr	x2, [sp, #104]
  410470:	mov	x1, x19
  410474:	str	x5, [sp, #112]
  410478:	str	x4, [sp, #144]
  41047c:	bl	406930 <strncmp@plt>
  410480:	ldr	x5, [sp, #112]
  410484:	ldr	x4, [sp, #144]
  410488:	cbnz	w0, 410390 <patsubst_expand_pat@@Base+0xb8>
  41048c:	ldr	x1, [sp, #120]
  410490:	mov	x0, x28
  410494:	mov	x2, x22
  410498:	str	x4, [sp, #112]
  41049c:	bl	40b848 <variable_buffer_output@@Base>
  4104a0:	mov	x28, x0
  4104a4:	cbz	x21, 4104e0 <patsubst_expand_pat@@Base+0x208>
  4104a8:	ldr	x4, [sp, #112]
  4104ac:	ldr	x2, [sp, #168]
  4104b0:	add	x1, x4, x24
  4104b4:	sub	x2, x2, x20
  4104b8:	bl	40b848 <variable_buffer_output@@Base>
  4104bc:	mov	x1, x21
  4104c0:	mov	x2, x23
  4104c4:	bl	40b848 <variable_buffer_output@@Base>
  4104c8:	mov	x28, x0
  4104cc:	ldr	x1, [sp, #168]
  4104d0:	add	x1, x23, x1
  4104d4:	orr	x1, x1, x22
  4104d8:	cbz	x1, 41035c <patsubst_expand_pat@@Base+0x84>
  4104dc:	b	4103a4 <patsubst_expand_pat@@Base+0xcc>
  4104e0:	cbz	x22, 41035c <patsubst_expand_pat@@Base+0x84>
  4104e4:	b	4103a4 <patsubst_expand_pat@@Base+0xcc>
  4104e8:	ldr	x0, [sp, #120]
  4104ec:	mov	x23, #0x0                   	// #0
  4104f0:	bl	406680 <strlen@plt>
  4104f4:	mov	x22, x0
  4104f8:	b	410324 <patsubst_expand_pat@@Base+0x4c>
  4104fc:	mov	x0, x25
  410500:	bl	406680 <strlen@plt>
  410504:	ldr	x20, [sp, #120]
  410508:	mov	x19, x0
  41050c:	mov	x0, x20
  410510:	bl	406680 <strlen@plt>
  410514:	ldr	x1, [sp, #152]
  410518:	mov	x5, x0
  41051c:	mov	x4, x19
  410520:	mov	x0, x28
  410524:	mov	x3, x20
  410528:	mov	x2, x25
  41052c:	mov	w6, #0x1                   	// #1
  410530:	bl	4100d0 <subst_expand@@Base>
  410534:	mov	x28, x0
  410538:	b	4103d8 <patsubst_expand_pat@@Base+0x100>
  41053c:	nop

0000000000410540 <patsubst_expand@@Base>:
  410540:	stp	x29, x30, [sp, #-64]!
  410544:	mov	x29, sp
  410548:	stp	x19, x20, [sp, #16]
  41054c:	mov	x20, x2
  410550:	stp	x21, x22, [sp, #32]
  410554:	mov	x21, x3
  410558:	mov	x22, x0
  41055c:	mov	x0, x2
  410560:	str	x23, [sp, #48]
  410564:	mov	x23, x1
  410568:	bl	41b5a0 <find_percent@@Base>
  41056c:	mov	x19, x0
  410570:	mov	x0, x21
  410574:	bl	41b5a0 <find_percent@@Base>
  410578:	cmp	x0, #0x0
  41057c:	cinc	x5, x0, ne  // ne = any
  410580:	cmp	x19, #0x0
  410584:	mov	x3, x21
  410588:	mov	x2, x20
  41058c:	mov	x1, x23
  410590:	cinc	x4, x19, ne  // ne = any
  410594:	mov	x0, x22
  410598:	ldp	x19, x20, [sp, #16]
  41059c:	ldp	x21, x22, [sp, #32]
  4105a0:	ldr	x23, [sp, #48]
  4105a4:	ldp	x29, x30, [sp], #64
  4105a8:	b	4102d8 <patsubst_expand_pat@@Base>
  4105ac:	nop
  4105b0:	ldp	x2, x3, [x1]
  4105b4:	ldr	x1, [x1, #16]
  4105b8:	b	410540 <patsubst_expand@@Base>
  4105bc:	nop

00000000004105c0 <pattern_matches@@Base>:
  4105c0:	stp	x29, x30, [sp, #-64]!
  4105c4:	mov	x29, sp
  4105c8:	stp	x19, x20, [sp, #16]
  4105cc:	mov	x20, x2
  4105d0:	mov	x19, x1
  4105d4:	stp	x21, x22, [sp, #32]
  4105d8:	mov	x21, x0
  4105dc:	str	x23, [sp, #48]
  4105e0:	cbz	x1, 410654 <pattern_matches@@Base+0x94>
  4105e4:	add	x23, x19, #0x1
  4105e8:	mov	x0, x23
  4105ec:	bl	406680 <strlen@plt>
  4105f0:	mov	x22, x0
  4105f4:	mov	x0, x20
  4105f8:	bl	406680 <strlen@plt>
  4105fc:	sub	x2, x19, x21
  410600:	mov	x19, x0
  410604:	add	x0, x2, x22
  410608:	cmp	x0, x19
  41060c:	b.hi	4106c0 <pattern_matches@@Base+0x100>  // b.pmore
  410610:	mov	x0, x21
  410614:	mov	x1, x20
  410618:	bl	406930 <strncmp@plt>
  41061c:	cbnz	w0, 4106c0 <pattern_matches@@Base+0x100>
  410620:	sub	x1, x19, x22
  410624:	mov	x0, x23
  410628:	add	x1, x20, x1
  41062c:	bl	406b40 <strcmp@plt>
  410630:	mov	sp, x29
  410634:	cmp	w0, #0x0
  410638:	cset	w19, eq  // eq = none
  41063c:	mov	w0, w19
  410640:	ldp	x19, x20, [sp, #16]
  410644:	ldp	x21, x22, [sp, #32]
  410648:	ldr	x23, [sp, #48]
  41064c:	ldp	x29, x30, [sp], #64
  410650:	ret
  410654:	bl	406680 <strlen@plt>
  410658:	add	x3, x0, #0x10
  41065c:	and	x3, x3, #0xfffffffffffffff0
  410660:	mov	x1, x21
  410664:	add	x2, x0, #0x1
  410668:	sub	sp, sp, x3
  41066c:	mov	x22, sp
  410670:	mov	x0, x22
  410674:	bl	406640 <memcpy@plt>
  410678:	mov	x0, x22
  41067c:	mov	x21, x22
  410680:	bl	41b5a0 <find_percent@@Base>
  410684:	mov	x19, x0
  410688:	cbnz	x0, 4105e4 <pattern_matches@@Base+0x24>
  41068c:	cmp	x22, x20
  410690:	mov	w19, #0x1                   	// #1
  410694:	b.eq	4106c4 <pattern_matches@@Base+0x104>  // b.none
  410698:	ldrb	w1, [x22]
  41069c:	ldrb	w0, [x20]
  4106a0:	cmp	w0, w1
  4106a4:	b.ne	4106c0 <pattern_matches@@Base+0x100>  // b.any
  4106a8:	cbz	w0, 4106c4 <pattern_matches@@Base+0x104>
  4106ac:	add	x1, x20, #0x1
  4106b0:	add	x0, x22, #0x1
  4106b4:	bl	406b40 <strcmp@plt>
  4106b8:	cbz	w0, 4106c4 <pattern_matches@@Base+0x104>
  4106bc:	nop
  4106c0:	mov	w19, #0x0                   	// #0
  4106c4:	mov	sp, x29
  4106c8:	mov	w0, w19
  4106cc:	ldp	x19, x20, [sp, #16]
  4106d0:	ldp	x21, x22, [sp, #32]
  4106d4:	ldr	x23, [sp, #48]
  4106d8:	ldp	x29, x30, [sp], #64
  4106dc:	ret
  4106e0:	stp	x29, x30, [sp, #-256]!
  4106e4:	mov	x29, sp
  4106e8:	stp	x19, x20, [sp, #16]
  4106ec:	mov	x20, x0
  4106f0:	stp	x21, x22, [sp, #32]
  4106f4:	mov	w22, #0x0                   	// #0
  4106f8:	stp	x23, x24, [sp, #48]
  4106fc:	add	x23, x29, #0x60
  410700:	stp	x25, x26, [sp, #64]
  410704:	ldrb	w21, [x2, #6]
  410708:	ldp	x2, x0, [x1]
  41070c:	stp	x2, x0, [x29, #104]
  410710:	b	410768 <pattern_matches@@Base+0x1a8>
  410714:	ldr	x2, [x29, #104]
  410718:	sub	sp, sp, #0x20
  41071c:	mov	x19, sp
  410720:	str	x19, [x23]
  410724:	add	x3, x2, #0x1
  410728:	mov	x0, x1
  41072c:	ldrb	w2, [x2]
  410730:	mov	x23, x19
  410734:	cbz	w2, 41073c <pattern_matches@@Base+0x17c>
  410738:	str	x3, [x29, #104]
  41073c:	ldr	x2, [x29, #120]
  410740:	str	x1, [x19, #8]
  410744:	strb	wzr, [x1, x2]
  410748:	bl	41b5a0 <find_percent@@Base>
  41074c:	mov	x1, x0
  410750:	cmp	x0, #0x0
  410754:	str	x1, [x19, #16]
  410758:	ldr	x0, [x19, #8]
  41075c:	cinc	w22, w22, eq  // eq = none
  410760:	bl	406680 <strlen@plt>
  410764:	str	x0, [x19, #24]
  410768:	add	x1, x29, #0x78
  41076c:	add	x0, x29, #0x68
  410770:	bl	418d28 <find_next_token@@Base>
  410774:	mov	x1, x0
  410778:	cbnz	x0, 410714 <pattern_matches@@Base+0x154>
  41077c:	add	x24, x29, #0x58
  410780:	mov	w19, #0x0                   	// #0
  410784:	str	xzr, [x23]
  410788:	b	4107cc <pattern_matches@@Base+0x20c>
  41078c:	ldr	x2, [x29, #112]
  410790:	sub	sp, sp, #0x30
  410794:	mov	x1, sp
  410798:	str	x1, [x24]
  41079c:	add	x3, x2, #0x1
  4107a0:	add	w19, w19, #0x1
  4107a4:	ldrb	w2, [x2]
  4107a8:	mov	x24, x1
  4107ac:	cbz	w2, 4107b4 <pattern_matches@@Base+0x1f4>
  4107b0:	str	x3, [x29, #112]
  4107b4:	ldr	x2, [x29, #120]
  4107b8:	strb	wzr, [x0, x2]
  4107bc:	stp	xzr, x0, [x1, #8]
  4107c0:	ldr	x2, [x29, #120]
  4107c4:	str	x2, [x1, #24]
  4107c8:	str	wzr, [x1, #32]
  4107cc:	add	x1, x29, #0x78
  4107d0:	add	x0, x29, #0x70
  4107d4:	bl	418d28 <find_next_token@@Base>
  4107d8:	cbnz	x0, 41078c <pattern_matches@@Base+0x1cc>
  4107dc:	str	xzr, [x24]
  4107e0:	cmp	w22, #0x1
  4107e4:	b.le	4109a8 <pattern_matches@@Base+0x3e8>
  4107e8:	mul	w22, w22, w19
  4107ec:	cmp	w22, #0x9
  4107f0:	b.gt	4109d0 <pattern_matches@@Base+0x410>
  4107f4:	cbz	w19, 4108d8 <pattern_matches@@Base+0x318>
  4107f8:	ldp	x23, x22, [x29, #88]
  4107fc:	mov	w24, #0x0                   	// #0
  410800:	cbz	x22, 4108d4 <pattern_matches@@Base+0x314>
  410804:	nop
  410808:	ldr	x1, [x22, #16]
  41080c:	cbnz	x1, 4108fc <pattern_matches@@Base+0x33c>
  410810:	cbnz	w24, 41096c <pattern_matches@@Base+0x3ac>
  410814:	cbz	x23, 410858 <pattern_matches@@Base+0x298>
  410818:	ldr	x26, [x22, #24]
  41081c:	mov	x19, x23
  410820:	ldr	x0, [x19, #24]
  410824:	ldr	w25, [x19, #32]
  410828:	cmp	x0, x26
  41082c:	b.ne	41084c <pattern_matches@@Base+0x28c>  // b.any
  410830:	ldr	x0, [x22, #8]
  410834:	mov	x2, x26
  410838:	ldr	x1, [x19, #16]
  41083c:	bl	406930 <strncmp@plt>
  410840:	cmp	w0, #0x0
  410844:	orr	w0, w25, #0x1
  410848:	csel	w25, w0, w25, eq  // eq = none
  41084c:	str	w25, [x19, #32]
  410850:	ldr	x19, [x19]
  410854:	cbnz	x19, 410820 <pattern_matches@@Base+0x260>
  410858:	ldr	x22, [x22]
  41085c:	cbnz	x22, 410808 <pattern_matches@@Base+0x248>
  410860:	mov	x22, x20
  410864:	cbz	x23, 4108a0 <pattern_matches@@Base+0x2e0>
  410868:	adrp	x22, 429000 <_IO_stdin_used@@Base+0x2c20>
  41086c:	add	x22, x22, #0xb18
  410870:	mov	w1, #0x0                   	// #0
  410874:	nop
  410878:	ldr	w0, [x23, #32]
  41087c:	cmp	w0, #0x0
  410880:	cset	w0, ne  // ne = any
  410884:	cbz	w21, 41088c <pattern_matches@@Base+0x2cc>
  410888:	cset	w0, eq  // eq = none
  41088c:	cbnz	w0, 410938 <pattern_matches@@Base+0x378>
  410890:	ldr	x23, [x23]
  410894:	cbnz	x23, 410878 <pattern_matches@@Base+0x2b8>
  410898:	and	x1, x1, #0x1
  41089c:	sub	x22, x20, x1
  4108a0:	cbz	w24, 4108b4 <pattern_matches@@Base+0x2f4>
  4108a4:	add	x25, x29, #0xa8
  4108a8:	mov	x0, x25
  4108ac:	mov	w1, #0x0                   	// #0
  4108b0:	bl	411e68 <hash_free@@Base>
  4108b4:	mov	sp, x29
  4108b8:	mov	x0, x22
  4108bc:	ldp	x19, x20, [sp, #16]
  4108c0:	ldp	x21, x22, [sp, #32]
  4108c4:	ldp	x23, x24, [sp, #48]
  4108c8:	ldp	x25, x26, [sp, #64]
  4108cc:	ldp	x29, x30, [sp], #256
  4108d0:	ret
  4108d4:	cbnz	x23, 410868 <pattern_matches@@Base+0x2a8>
  4108d8:	mov	sp, x29
  4108dc:	mov	x22, x20
  4108e0:	mov	x0, x22
  4108e4:	ldp	x19, x20, [sp, #16]
  4108e8:	ldp	x21, x22, [sp, #32]
  4108ec:	ldp	x23, x24, [sp, #48]
  4108f0:	ldp	x25, x26, [sp, #64]
  4108f4:	ldp	x29, x30, [sp], #256
  4108f8:	ret
  4108fc:	mov	x19, x23
  410900:	cbnz	x23, 41090c <pattern_matches@@Base+0x34c>
  410904:	b	410858 <pattern_matches@@Base+0x298>
  410908:	ldr	x1, [x22, #16]
  41090c:	ldr	x0, [x22, #8]
  410910:	ldr	x2, [x19, #16]
  410914:	bl	4105c0 <pattern_matches@@Base>
  410918:	ldr	w1, [x19, #32]
  41091c:	orr	w1, w1, w0
  410920:	str	w1, [x19, #32]
  410924:	ldr	x19, [x19]
  410928:	cbnz	x19, 410908 <pattern_matches@@Base+0x348>
  41092c:	ldr	x22, [x22]
  410930:	cbnz	x22, 410808 <pattern_matches@@Base+0x248>
  410934:	b	410860 <pattern_matches@@Base+0x2a0>
  410938:	ldr	x19, [x23, #16]
  41093c:	mov	x0, x19
  410940:	bl	406680 <strlen@plt>
  410944:	mov	x1, x19
  410948:	mov	x2, x0
  41094c:	mov	x0, x20
  410950:	bl	40b848 <variable_buffer_output@@Base>
  410954:	mov	x1, x22
  410958:	mov	x2, #0x1                   	// #1
  41095c:	bl	40b848 <variable_buffer_output@@Base>
  410960:	mov	x20, x0
  410964:	mov	w1, #0x1                   	// #1
  410968:	b	410890 <pattern_matches@@Base+0x2d0>
  41096c:	ldr	x3, [x22, #8]
  410970:	add	x1, x29, #0x80
  410974:	ldr	x2, [x22, #24]
  410978:	add	x0, x29, #0xa8
  41097c:	stp	x3, x2, [x29, #144]
  410980:	bl	411b08 <hash_find_item@@Base>
  410984:	cbz	x0, 410858 <pattern_matches@@Base+0x298>
  410988:	ldr	w1, [x0, #32]
  41098c:	orr	w1, w1, #0x1
  410990:	str	w1, [x0, #32]
  410994:	ldr	x0, [x0, #8]
  410998:	cbnz	x0, 410988 <pattern_matches@@Base+0x3c8>
  41099c:	ldr	x22, [x22]
  4109a0:	cbnz	x22, 410808 <pattern_matches@@Base+0x248>
  4109a4:	b	410860 <pattern_matches@@Base+0x2a0>
  4109a8:	mov	x22, x20
  4109ac:	cbnz	w19, 4107f8 <pattern_matches@@Base+0x238>
  4109b0:	mov	sp, x29
  4109b4:	mov	x0, x22
  4109b8:	ldp	x19, x20, [sp, #16]
  4109bc:	ldp	x21, x22, [sp, #32]
  4109c0:	ldp	x23, x24, [sp, #48]
  4109c4:	ldp	x25, x26, [sp, #64]
  4109c8:	ldp	x29, x30, [sp], #256
  4109cc:	ret
  4109d0:	add	x25, x29, #0xa8
  4109d4:	sxtw	x1, w19
  4109d8:	mov	x0, x25
  4109dc:	adrp	x4, 410000 <init_hash_files@@Base+0x1b88>
  4109e0:	adrp	x3, 410000 <init_hash_files@@Base+0x1b88>
  4109e4:	add	x4, x4, #0x10
  4109e8:	add	x3, x3, #0xc8
  4109ec:	adrp	x2, 40f000 <init_hash_files@@Base+0xb88>
  4109f0:	add	x2, x2, #0xd50
  4109f4:	bl	411928 <hash_init@@Base>
  4109f8:	ldr	x23, [x29, #88]
  4109fc:	mov	x22, x23
  410a00:	cbz	x23, 410a24 <pattern_matches@@Base+0x464>
  410a04:	nop
  410a08:	mov	x1, x22
  410a0c:	mov	x0, x25
  410a10:	bl	411c80 <hash_insert@@Base>
  410a14:	cbz	x0, 410a1c <pattern_matches@@Base+0x45c>
  410a18:	str	x0, [x22, #8]
  410a1c:	ldr	x22, [x22]
  410a20:	cbnz	x22, 410a08 <pattern_matches@@Base+0x448>
  410a24:	cbz	w19, 410a38 <pattern_matches@@Base+0x478>
  410a28:	ldr	x22, [x29, #96]
  410a2c:	mov	w24, #0x1                   	// #1
  410a30:	cbnz	x22, 410808 <pattern_matches@@Base+0x248>
  410a34:	cbnz	x23, 410868 <pattern_matches@@Base+0x2a8>
  410a38:	mov	x22, x20
  410a3c:	b	4108a8 <pattern_matches@@Base+0x2e8>

0000000000410a40 <strip_whitespace@@Base>:
  410a40:	mov	x3, x0
  410a44:	adrp	x4, 443000 <expanding_var@@Base+0x338>
  410a48:	ldr	x2, [x1]
  410a4c:	add	x4, x4, #0x448
  410a50:	ldr	x0, [x0]
  410a54:	cmp	x2, x0
  410a58:	b.cs	410a70 <strip_whitespace@@Base+0x30>  // b.hs, b.nlast
  410a5c:	b	410aac <strip_whitespace@@Base+0x6c>
  410a60:	str	x0, [x3]
  410a64:	ldr	x2, [x1]
  410a68:	cmp	x0, x2
  410a6c:	b.hi	410aac <strip_whitespace@@Base+0x6c>  // b.pmore
  410a70:	ldrb	w5, [x0]
  410a74:	add	x0, x0, #0x1
  410a78:	ldrh	w5, [x4, x5, lsl #1]
  410a7c:	tst	w5, #0x6
  410a80:	b.ne	410a60 <strip_whitespace@@Base+0x20>  // b.any
  410a84:	b	410a8c <strip_whitespace@@Base+0x4c>
  410a88:	str	x2, [x1]
  410a8c:	ldr	x0, [x3]
  410a90:	cmp	x2, x0
  410a94:	b.cc	410aac <strip_whitespace@@Base+0x6c>  // b.lo, b.ul, b.last
  410a98:	ldrb	w5, [x2]
  410a9c:	sub	x2, x2, #0x1
  410aa0:	ldrh	w5, [x4, x5, lsl #1]
  410aa4:	tst	w5, #0x6
  410aa8:	b.ne	410a88 <strip_whitespace@@Base+0x48>  // b.any
  410aac:	ret
  410ab0:	stp	x29, x30, [sp, #-64]!
  410ab4:	mov	x29, sp
  410ab8:	stp	x19, x20, [sp, #16]
  410abc:	mov	x20, x1
  410ac0:	str	x21, [sp, #32]
  410ac4:	mov	x21, x0
  410ac8:	b	410af0 <strip_whitespace@@Base+0xb0>
  410acc:	bl	40b8d0 <expand_argument@@Base>
  410ad0:	mov	x19, x0
  410ad4:	bl	406680 <strlen@plt>
  410ad8:	mov	x2, x0
  410adc:	mov	x0, x19
  410ae0:	cbz	x2, 410b4c <strip_whitespace@@Base+0x10c>
  410ae4:	ldr	x1, [x20, #8]!
  410ae8:	cbz	x1, 410b3c <strip_whitespace@@Base+0xfc>
  410aec:	bl	406b90 <free@plt>
  410af0:	ldr	x19, [x20]
  410af4:	str	x19, [sp, #48]
  410af8:	mov	x0, x19
  410afc:	bl	406680 <strlen@plt>
  410b00:	sub	x2, x0, #0x1
  410b04:	add	x1, sp, #0x38
  410b08:	add	x19, x19, x2
  410b0c:	add	x0, sp, #0x30
  410b10:	str	x19, [sp, #56]
  410b14:	bl	410a40 <strip_whitespace@@Base>
  410b18:	ldp	x0, x2, [sp, #48]
  410b1c:	add	x1, x2, #0x1
  410b20:	cmp	x0, x2
  410b24:	b.ls	410acc <strip_whitespace@@Base+0x8c>  // b.plast
  410b28:	mov	x0, x21
  410b2c:	ldp	x19, x20, [sp, #16]
  410b30:	ldr	x21, [sp, #32]
  410b34:	ldp	x29, x30, [sp], #64
  410b38:	ret
  410b3c:	mov	x0, x21
  410b40:	mov	x1, x19
  410b44:	bl	40b848 <variable_buffer_output@@Base>
  410b48:	mov	x21, x0
  410b4c:	mov	x0, x19
  410b50:	bl	406b90 <free@plt>
  410b54:	mov	x0, x21
  410b58:	ldp	x19, x20, [sp, #16]
  410b5c:	ldr	x21, [sp, #32]
  410b60:	ldp	x29, x30, [sp], #64
  410b64:	ret
  410b68:	stp	x29, x30, [sp, #-64]!
  410b6c:	mov	x29, sp
  410b70:	stp	x19, x20, [sp, #16]
  410b74:	mov	x20, x0
  410b78:	ldr	x19, [x1]
  410b7c:	cbz	x19, 410bec <strip_whitespace@@Base+0x1ac>
  410b80:	str	x21, [sp, #32]
  410b84:	mov	x21, x1
  410b88:	mov	x0, x19
  410b8c:	str	x19, [sp, #48]
  410b90:	bl	406680 <strlen@plt>
  410b94:	sub	x2, x0, #0x1
  410b98:	add	x19, x19, x2
  410b9c:	add	x1, sp, #0x38
  410ba0:	add	x0, sp, #0x30
  410ba4:	str	x19, [sp, #56]
  410ba8:	bl	410a40 <strip_whitespace@@Base>
  410bac:	ldp	x0, x2, [sp, #48]
  410bb0:	add	x1, x2, #0x1
  410bb4:	cmp	x0, x2
  410bb8:	b.hi	410c04 <strip_whitespace@@Base+0x1c4>  // b.pmore
  410bbc:	bl	40b8d0 <expand_argument@@Base>
  410bc0:	mov	x19, x0
  410bc4:	bl	406680 <strlen@plt>
  410bc8:	mov	x2, x0
  410bcc:	cbz	x0, 410bfc <strip_whitespace@@Base+0x1bc>
  410bd0:	mov	x1, x19
  410bd4:	mov	x0, x20
  410bd8:	bl	40b848 <variable_buffer_output@@Base>
  410bdc:	mov	x20, x0
  410be0:	mov	x0, x19
  410be4:	bl	406b90 <free@plt>
  410be8:	ldr	x21, [sp, #32]
  410bec:	mov	x0, x20
  410bf0:	ldp	x19, x20, [sp, #16]
  410bf4:	ldp	x29, x30, [sp], #64
  410bf8:	ret
  410bfc:	mov	x0, x19
  410c00:	bl	406b90 <free@plt>
  410c04:	ldr	x19, [x21, #8]!
  410c08:	cbnz	x19, 410b88 <strip_whitespace@@Base+0x148>
  410c0c:	ldr	x21, [sp, #32]
  410c10:	b	410bec <strip_whitespace@@Base+0x1ac>
  410c14:	nop
  410c18:	stp	x29, x30, [sp, #-64]!
  410c1c:	mov	x29, sp
  410c20:	stp	x19, x20, [sp, #16]
  410c24:	mov	x19, x0
  410c28:	ldr	x20, [x1]
  410c2c:	str	x21, [sp, #32]
  410c30:	mov	x21, x1
  410c34:	str	x20, [sp, #48]
  410c38:	mov	x0, x20
  410c3c:	bl	406680 <strlen@plt>
  410c40:	sub	x2, x0, #0x1
  410c44:	add	x1, sp, #0x38
  410c48:	add	x20, x20, x2
  410c4c:	add	x0, sp, #0x30
  410c50:	str	x20, [sp, #56]
  410c54:	bl	410a40 <strip_whitespace@@Base>
  410c58:	ldp	x0, x1, [sp, #48]
  410c5c:	cmp	x0, x1
  410c60:	b.ls	410cb0 <strip_whitespace@@Base+0x270>  // b.plast
  410c64:	mov	x0, #0x10                  	// #16
  410c68:	ldr	x0, [x21, x0]
  410c6c:	cbz	x0, 410c9c <strip_whitespace@@Base+0x25c>
  410c70:	mov	x1, #0x0                   	// #0
  410c74:	bl	40b8d0 <expand_argument@@Base>
  410c78:	mov	x20, x0
  410c7c:	bl	406680 <strlen@plt>
  410c80:	mov	x2, x0
  410c84:	mov	x1, x20
  410c88:	mov	x0, x19
  410c8c:	bl	40b848 <variable_buffer_output@@Base>
  410c90:	mov	x19, x0
  410c94:	mov	x0, x20
  410c98:	bl	406b90 <free@plt>
  410c9c:	mov	x0, x19
  410ca0:	ldp	x19, x20, [sp, #16]
  410ca4:	ldr	x21, [sp, #32]
  410ca8:	ldp	x29, x30, [sp], #64
  410cac:	ret
  410cb0:	add	x1, x1, #0x1
  410cb4:	bl	40b8d0 <expand_argument@@Base>
  410cb8:	ldrb	w20, [x0]
  410cbc:	bl	406b90 <free@plt>
  410cc0:	cbz	w20, 410c64 <strip_whitespace@@Base+0x224>
  410cc4:	mov	x0, #0x8                   	// #8
  410cc8:	b	410c68 <strip_whitespace@@Base+0x228>
  410ccc:	nop
  410cd0:	stp	x29, x30, [sp, #-80]!
  410cd4:	mov	x29, sp
  410cd8:	stp	x19, x20, [sp, #16]
  410cdc:	mov	x20, x1
  410ce0:	mov	x19, x0
  410ce4:	str	x0, [sp, #56]
  410ce8:	bl	406680 <strlen@plt>
  410cec:	sub	x2, x0, #0x1
  410cf0:	add	x1, sp, #0x48
  410cf4:	add	x2, x19, x2
  410cf8:	add	x0, sp, #0x38
  410cfc:	str	x2, [sp, #72]
  410d00:	bl	410a40 <strip_whitespace@@Base>
  410d04:	ldr	x2, [sp, #56]
  410d08:	ldr	x4, [sp, #72]
  410d0c:	cmp	x2, x4
  410d10:	b.ls	410d28 <strip_whitespace@@Base+0x2e8>  // b.plast
  410d14:	b	410d40 <strip_whitespace@@Base+0x300>
  410d18:	add	x2, x2, #0x1
  410d1c:	str	x2, [sp, #56]
  410d20:	cmp	x2, x4
  410d24:	b.hi	410d40 <strip_whitespace@@Base+0x300>  // b.pmore
  410d28:	ldrb	w3, [x2]
  410d2c:	sub	w3, w3, #0x30
  410d30:	cmp	w3, #0x9
  410d34:	b.ls	410d18 <strip_whitespace@@Base+0x2d8>  // b.plast
  410d38:	cmp	x4, x2
  410d3c:	b.cs	410d54 <strip_whitespace@@Base+0x314>  // b.hs, b.nlast
  410d40:	cmp	x4, x19
  410d44:	b.mi	410d54 <strip_whitespace@@Base+0x314>  // b.first
  410d48:	ldp	x19, x20, [sp, #16]
  410d4c:	ldp	x29, x30, [sp], #80
  410d50:	ret
  410d54:	mov	x0, x20
  410d58:	str	x21, [sp, #32]
  410d5c:	bl	406680 <strlen@plt>
  410d60:	mov	x21, x0
  410d64:	mov	x0, x19
  410d68:	bl	406680 <strlen@plt>
  410d6c:	adrp	x2, 442000 <memcpy@GLIBC_2.17>
  410d70:	add	x1, x21, x0
  410d74:	mov	x4, x19
  410d78:	mov	x3, x20
  410d7c:	ldr	x0, [x2, #3272]
  410d80:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  410d84:	add	x2, x2, #0x2a8
  410d88:	ldr	x0, [x0]
  410d8c:	bl	41a060 <fatal@@Base>
  410d90:	stp	x29, x30, [sp, #-64]!
  410d94:	mov	w2, #0x5                   	// #5
  410d98:	mov	x29, sp
  410d9c:	stp	x19, x20, [sp, #16]
  410da0:	mov	x19, x1
  410da4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  410da8:	add	x1, x1, #0x2b8
  410dac:	stp	x21, x22, [sp, #32]
  410db0:	mov	x22, x0
  410db4:	ldr	x20, [x19]
  410db8:	mov	x0, #0x0                   	// #0
  410dbc:	bl	406cd0 <dcgettext@plt>
  410dc0:	mov	x1, x0
  410dc4:	mov	x0, x20
  410dc8:	bl	410cd0 <strip_whitespace@@Base+0x290>
  410dcc:	ldr	x20, [x19, #8]
  410dd0:	mov	w2, #0x5                   	// #5
  410dd4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  410dd8:	mov	x0, #0x0                   	// #0
  410ddc:	add	x1, x1, #0x2f0
  410de0:	bl	406cd0 <dcgettext@plt>
  410de4:	mov	x1, x0
  410de8:	mov	x0, x20
  410dec:	bl	410cd0 <strip_whitespace@@Base+0x290>
  410df0:	ldr	x0, [x19]
  410df4:	mov	w2, #0xa                   	// #10
  410df8:	mov	x1, #0x0                   	// #0
  410dfc:	bl	406b60 <strtol@plt>
  410e00:	mov	x20, x0
  410e04:	cmp	w0, #0x0
  410e08:	b.le	410eb0 <strip_whitespace@@Base+0x470>
  410e0c:	mov	w21, w0
  410e10:	mov	w2, #0xa                   	// #10
  410e14:	ldr	x0, [x19, #8]
  410e18:	mov	x1, #0x0                   	// #0
  410e1c:	bl	406b60 <strtol@plt>
  410e20:	sub	w20, w0, w20
  410e24:	add	w20, w20, #0x1
  410e28:	cmp	w20, #0x0
  410e2c:	b.le	410e58 <strip_whitespace@@Base+0x418>
  410e30:	ldr	x0, [x19, #16]
  410e34:	str	x0, [sp, #56]
  410e38:	b	410e44 <strip_whitespace@@Base+0x404>
  410e3c:	subs	w21, w21, #0x1
  410e40:	b.eq	410e7c <strip_whitespace@@Base+0x43c>  // b.none
  410e44:	add	x0, sp, #0x38
  410e48:	mov	x1, #0x0                   	// #0
  410e4c:	bl	418d28 <find_next_token@@Base>
  410e50:	mov	x19, x0
  410e54:	cbnz	x0, 410e3c <strip_whitespace@@Base+0x3fc>
  410e58:	mov	x0, x22
  410e5c:	ldp	x19, x20, [sp, #16]
  410e60:	ldp	x21, x22, [sp, #32]
  410e64:	ldp	x29, x30, [sp], #64
  410e68:	ret
  410e6c:	add	x0, sp, #0x38
  410e70:	mov	x1, #0x0                   	// #0
  410e74:	bl	418d28 <find_next_token@@Base>
  410e78:	cbz	x0, 410e84 <strip_whitespace@@Base+0x444>
  410e7c:	subs	w20, w20, #0x1
  410e80:	b.ne	410e6c <strip_whitespace@@Base+0x42c>  // b.any
  410e84:	ldr	x2, [sp, #56]
  410e88:	mov	x1, x19
  410e8c:	mov	x0, x22
  410e90:	sub	x2, x2, x19
  410e94:	bl	40b848 <variable_buffer_output@@Base>
  410e98:	mov	x22, x0
  410e9c:	mov	x0, x22
  410ea0:	ldp	x19, x20, [sp, #16]
  410ea4:	ldp	x21, x22, [sp, #32]
  410ea8:	ldp	x29, x30, [sp], #64
  410eac:	ret
  410eb0:	adrp	x0, 442000 <memcpy@GLIBC_2.17>
  410eb4:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  410eb8:	mov	w3, w20
  410ebc:	add	x2, x2, #0x328
  410ec0:	ldr	x0, [x0, #3272]
  410ec4:	mov	x1, #0x14                  	// #20
  410ec8:	ldr	x0, [x0]
  410ecc:	bl	41a060 <fatal@@Base>
  410ed0:	stp	x29, x30, [sp, #-64]!
  410ed4:	mov	w2, #0x5                   	// #5
  410ed8:	mov	x29, sp
  410edc:	stp	x19, x20, [sp, #16]
  410ee0:	mov	x20, x1
  410ee4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  410ee8:	add	x1, x1, #0x360
  410eec:	ldr	x19, [x20]
  410ef0:	str	x21, [sp, #32]
  410ef4:	mov	x21, x0
  410ef8:	mov	x0, #0x0                   	// #0
  410efc:	bl	406cd0 <dcgettext@plt>
  410f00:	mov	x1, x0
  410f04:	mov	x0, x19
  410f08:	bl	410cd0 <strip_whitespace@@Base+0x290>
  410f0c:	ldr	x0, [x20]
  410f10:	mov	w2, #0xa                   	// #10
  410f14:	mov	x1, #0x0                   	// #0
  410f18:	bl	406b60 <strtol@plt>
  410f1c:	cbz	w0, 410f88 <strip_whitespace@@Base+0x548>
  410f20:	mov	w19, w0
  410f24:	ldr	x0, [x20, #8]
  410f28:	str	x0, [sp, #56]
  410f2c:	b	410f38 <strip_whitespace@@Base+0x4f8>
  410f30:	subs	w19, w19, #0x1
  410f34:	b.eq	410f60 <strip_whitespace@@Base+0x520>  // b.none
  410f38:	mov	x1, #0x0                   	// #0
  410f3c:	add	x0, sp, #0x38
  410f40:	bl	418d28 <find_next_token@@Base>
  410f44:	mov	x1, x0
  410f48:	cbnz	x0, 410f30 <strip_whitespace@@Base+0x4f0>
  410f4c:	mov	x0, x21
  410f50:	ldp	x19, x20, [sp, #16]
  410f54:	ldr	x21, [sp, #32]
  410f58:	ldp	x29, x30, [sp], #64
  410f5c:	ret
  410f60:	ldr	x2, [sp, #56]
  410f64:	mov	x0, x21
  410f68:	sub	x2, x2, x1
  410f6c:	bl	40b848 <variable_buffer_output@@Base>
  410f70:	mov	x21, x0
  410f74:	mov	x0, x21
  410f78:	ldp	x19, x20, [sp, #16]
  410f7c:	ldr	x21, [sp, #32]
  410f80:	ldp	x29, x30, [sp], #64
  410f84:	ret
  410f88:	adrp	x0, 442000 <memcpy@GLIBC_2.17>
  410f8c:	mov	w2, #0x5                   	// #5
  410f90:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  410f94:	add	x1, x1, #0x390
  410f98:	ldr	x3, [x0, #3272]
  410f9c:	mov	x0, #0x0                   	// #0
  410fa0:	ldr	x19, [x3]
  410fa4:	bl	406cd0 <dcgettext@plt>
  410fa8:	mov	x1, #0x0                   	// #0
  410fac:	mov	x2, x0
  410fb0:	mov	x0, x19
  410fb4:	bl	41a060 <fatal@@Base>

0000000000410fb8 <shell_completed@@Base>:
  410fb8:	stp	x29, x30, [sp, #-272]!
  410fbc:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  410fc0:	add	x3, x3, #0x310
  410fc4:	mov	x29, sp
  410fc8:	cmp	w0, #0x7f
  410fcc:	str	wzr, [x3, #112]
  410fd0:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  410fd4:	b.ne	411028 <shell_completed@@Base+0x70>  // b.any
  410fd8:	mov	w0, #0xffffffff            	// #-1
  410fdc:	mov	w2, #0x7f                  	// #127
  410fe0:	str	w0, [x3, #116]
  410fe4:	add	x0, sp, #0x10
  410fe8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  410fec:	add	x1, x1, #0xd0
  410ff0:	bl	406730 <sprintf@plt>
  410ff4:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  410ff8:	add	x2, sp, #0x10
  410ffc:	mov	x6, #0x0                   	// #0
  411000:	mov	w4, #0x0                   	// #0
  411004:	ldr	x5, [x1, #288]
  411008:	mov	w3, #0x5                   	// #5
  41100c:	mov	x1, #0xc                   	// #12
  411010:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  411014:	add	x0, x0, #0x3d0
  411018:	ldr	x5, [x5, #8]
  41101c:	bl	422df0 <define_variable_in_set@@Base>
  411020:	ldp	x29, x30, [sp], #272
  411024:	ret
  411028:	cmp	w0, #0x0
  41102c:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  411030:	add	w1, w1, #0x80
  411034:	csel	w2, w1, w0, gt
  411038:	mov	w0, #0x1                   	// #1
  41103c:	str	w0, [x3, #116]
  411040:	b	410fe4 <shell_completed@@Base+0x2c>
  411044:	nop

0000000000411048 <func_shell_base@@Base>:
  411048:	stp	x29, x30, [sp, #-144]!
  41104c:	mov	w3, #0x0                   	// #0
  411050:	mov	x29, sp
  411054:	stp	x25, x26, [sp, #64]
  411058:	mov	x25, x0
  41105c:	add	x4, sp, #0x60
  411060:	ldr	x0, [x1]
  411064:	mov	x1, #0x0                   	// #0
  411068:	str	x27, [sp, #80]
  41106c:	mov	w27, w2
  411070:	mov	x2, #0x0                   	// #0
  411074:	str	xzr, [sp, #96]
  411078:	bl	414d70 <construct_command_argv@@Base>
  41107c:	cbz	x0, 4111dc <func_shell_base@@Base+0x194>
  411080:	mov	x26, x0
  411084:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  411088:	stp	x19, x20, [sp, #16]
  41108c:	ldr	x20, [x0, #400]
  411090:	bl	419910 <output_start@@Base>
  411094:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  411098:	ldr	x0, [x0, #3504]
  41109c:	cbz	x0, 4111f0 <func_shell_base@@Base+0x1a8>
  4110a0:	ldr	w19, [x0, #4]
  4110a4:	tbnz	w19, #31, 4111f0 <func_shell_base@@Base+0x1a8>
  4110a8:	add	x0, sp, #0x68
  4110ac:	bl	406750 <pipe@plt>
  4110b0:	tbnz	w0, #31, 41120c <func_shell_base@@Base+0x1c4>
  4110b4:	ldr	w0, [sp, #108]
  4110b8:	bl	425a40 <fd_noinherit@@Base>
  4110bc:	ldr	w0, [sp, #104]
  4110c0:	bl	425a40 <fd_noinherit@@Base>
  4110c4:	stp	xzr, x20, [sp, #112]
  4110c8:	ldrb	w3, [sp, #136]
  4110cc:	ldr	w4, [sp, #108]
  4110d0:	mov	x2, x26
  4110d4:	orr	w3, w3, #0x1
  4110d8:	add	x0, sp, #0x70
  4110dc:	mov	w1, #0x1                   	// #1
  4110e0:	stp	w4, w19, [sp, #128]
  4110e4:	strb	w3, [sp, #136]
  4110e8:	bl	414870 <child_execute_job@@Base>
  4110ec:	mov	w19, w0
  4110f0:	ldr	x0, [sp, #112]
  4110f4:	bl	406b90 <free@plt>
  4110f8:	tbnz	w19, #31, 411320 <func_shell_base@@Base+0x2d8>
  4110fc:	stp	x23, x24, [sp, #48]
  411100:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  411104:	add	x24, x24, #0x310
  411108:	ldr	w0, [sp, #108]
  41110c:	stp	x21, x22, [sp, #32]
  411110:	stp	w19, wzr, [x24, #112]
  411114:	tbnz	w0, #31, 41111c <func_shell_base@@Base+0xd4>
  411118:	bl	406a50 <close@plt>
  41111c:	mov	x0, #0xc9                  	// #201
  411120:	bl	418a50 <xmalloc@@Base>
  411124:	mov	x23, x0
  411128:	mov	x21, #0x0                   	// #0
  41112c:	mov	x22, #0xc8                  	// #200
  411130:	add	x19, x23, x21
  411134:	sub	x20, x22, x21
  411138:	b	41114c <func_shell_base@@Base+0x104>
  41113c:	bl	406d70 <__errno_location@plt>
  411140:	ldr	w0, [x0]
  411144:	cmp	w0, #0x4
  411148:	b.ne	411254 <func_shell_base@@Base+0x20c>  // b.any
  41114c:	ldr	w0, [sp, #104]
  411150:	mov	x2, x20
  411154:	mov	x1, x19
  411158:	bl	406c80 <read@plt>
  41115c:	cmn	w0, #0x1
  411160:	b.eq	41113c <func_shell_base@@Base+0xf4>  // b.none
  411164:	cmp	w0, #0x0
  411168:	b.le	411254 <func_shell_base@@Base+0x20c>
  41116c:	add	x21, x21, w0, sxtw
  411170:	cmp	x21, x22
  411174:	b.ne	411130 <func_shell_base@@Base+0xe8>  // b.any
  411178:	mov	x0, x23
  41117c:	add	x1, x21, #0x201
  411180:	add	x22, x21, #0x200
  411184:	bl	418aa0 <xrealloc@@Base>
  411188:	mov	x23, x0
  41118c:	b	411130 <func_shell_base@@Base+0xe8>
  411190:	cbnz	w27, 4111a0 <func_shell_base@@Base+0x158>
  411194:	sub	x1, x1, #0x2
  411198:	cmp	x4, x1
  41119c:	csel	x4, x4, x1, cs  // cs = hs, nlast
  4111a0:	strb	wzr, [x4, #1]!
  4111a4:	mov	x0, x25
  4111a8:	mov	x1, x23
  4111ac:	sub	x2, x4, x23
  4111b0:	bl	40b848 <variable_buffer_output@@Base>
  4111b4:	mov	x25, x0
  4111b8:	mov	x0, x23
  4111bc:	bl	406b90 <free@plt>
  4111c0:	ldp	x21, x22, [sp, #32]
  4111c4:	ldp	x23, x24, [sp, #48]
  4111c8:	ldr	x0, [x26]
  4111cc:	bl	406b90 <free@plt>
  4111d0:	mov	x0, x26
  4111d4:	bl	406b90 <free@plt>
  4111d8:	ldp	x19, x20, [sp, #16]
  4111dc:	mov	x0, x25
  4111e0:	ldp	x25, x26, [sp, #64]
  4111e4:	ldr	x27, [sp, #80]
  4111e8:	ldp	x29, x30, [sp], #144
  4111ec:	ret
  4111f0:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4111f4:	ldr	x0, [x0, #360]
  4111f8:	bl	406850 <fileno@plt>
  4111fc:	mov	w19, w0
  411200:	add	x0, sp, #0x68
  411204:	bl	406750 <pipe@plt>
  411208:	tbz	w0, #31, 4110b4 <func_shell_base@@Base+0x6c>
  41120c:	adrp	x0, 445000 <output_context@@Base+0x1250>
  411210:	ldr	x20, [x0, #3552]
  411214:	bl	406d70 <__errno_location@plt>
  411218:	mov	x19, x0
  41121c:	ldr	w0, [x0]
  411220:	bl	406a40 <strerror@plt>
  411224:	bl	406680 <strlen@plt>
  411228:	mov	x1, x0
  41122c:	ldr	w0, [x19]
  411230:	mov	x19, x1
  411234:	bl	406a40 <strerror@plt>
  411238:	mov	x3, x0
  41123c:	mov	x1, x19
  411240:	mov	x0, x20
  411244:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  411248:	add	x2, x2, #0x3e0
  41124c:	bl	419dc8 <error@@Base>
  411250:	b	4111c8 <func_shell_base@@Base+0x180>
  411254:	strb	wzr, [x19]
  411258:	ldr	w0, [sp, #104]
  41125c:	bl	406a50 <close@plt>
  411260:	ldr	w0, [x24, #116]
  411264:	cbnz	w0, 41127c <func_shell_base@@Base+0x234>
  411268:	mov	w0, #0x1                   	// #1
  41126c:	mov	w1, #0x0                   	// #0
  411270:	bl	415358 <reap_children@@Base>
  411274:	ldr	w0, [x24, #116]
  411278:	cbz	w0, 411268 <func_shell_base@@Base+0x220>
  41127c:	ldr	x0, [sp, #96]
  411280:	cbz	x0, 41129c <func_shell_base@@Base+0x254>
  411284:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  411288:	ldr	w1, [x1, #1088]
  41128c:	tbnz	w1, #1, 41134c <func_shell_base@@Base+0x304>
  411290:	bl	406700 <remove@plt>
  411294:	ldr	x0, [sp, #96]
  411298:	bl	406b90 <free@plt>
  41129c:	ldr	w0, [x24, #116]
  4112a0:	str	wzr, [x24, #112]
  4112a4:	cmn	w0, #0x1
  4112a8:	b.eq	411330 <func_shell_base@@Base+0x2e8>  // b.none
  4112ac:	mov	x4, x23
  4112b0:	strb	wzr, [x19]
  4112b4:	mov	x1, x23
  4112b8:	ldrb	w0, [x4], #-1
  4112bc:	cbz	w0, 411190 <func_shell_base@@Base+0x148>
  4112c0:	mov	x2, x23
  4112c4:	mov	w6, #0x20                  	// #32
  4112c8:	b	4112f0 <func_shell_base@@Base+0x2a8>
  4112cc:	cmp	w0, #0xa
  4112d0:	add	x3, x1, #0x1
  4112d4:	b.eq	411310 <func_shell_base@@Base+0x2c8>  // b.none
  4112d8:	strb	w0, [x1]
  4112dc:	mov	x4, x1
  4112e0:	mov	x1, x3
  4112e4:	ldrb	w0, [x2, #1]
  4112e8:	add	x2, x2, #0x1
  4112ec:	cbz	w0, 411190 <func_shell_base@@Base+0x148>
  4112f0:	cmp	w0, #0xd
  4112f4:	b.ne	4112cc <func_shell_base@@Base+0x284>  // b.any
  4112f8:	ldrb	w5, [x2, #1]
  4112fc:	add	x3, x1, #0x1
  411300:	cmp	w5, #0xa
  411304:	b.ne	4112d8 <func_shell_base@@Base+0x290>  // b.any
  411308:	add	x2, x2, #0x1
  41130c:	add	x3, x1, #0x1
  411310:	strb	w6, [x1]
  411314:	mov	x1, x3
  411318:	ldrb	w0, [x2, #1]
  41131c:	b	4112e8 <func_shell_base@@Base+0x2a0>
  411320:	mov	w1, #0x0                   	// #0
  411324:	mov	w0, #0x7f                  	// #127
  411328:	bl	410fb8 <shell_completed@@Base>
  41132c:	b	4111c8 <func_shell_base@@Base+0x180>
  411330:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  411334:	mov	x0, x23
  411338:	ldr	x1, [x19, #360]
  41133c:	bl	406690 <fputs@plt>
  411340:	ldr	x0, [x19, #360]
  411344:	bl	406c20 <fflush@plt>
  411348:	b	4111b8 <func_shell_base@@Base+0x170>
  41134c:	mov	w2, #0x5                   	// #5
  411350:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  411354:	mov	x0, #0x0                   	// #0
  411358:	add	x1, x1, #0x3f0
  41135c:	bl	406cd0 <dcgettext@plt>
  411360:	ldr	x1, [sp, #96]
  411364:	bl	406d60 <printf@plt>
  411368:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41136c:	ldr	x0, [x0, #384]
  411370:	bl	406c20 <fflush@plt>
  411374:	ldr	x0, [sp, #96]
  411378:	b	411290 <func_shell_base@@Base+0x248>
  41137c:	nop
  411380:	mov	w2, #0x1                   	// #1
  411384:	b	411048 <func_shell_base@@Base>

0000000000411388 <handle_function@@Base>:
  411388:	stp	x29, x30, [sp, #-112]!
  41138c:	mov	w4, #0x7d                  	// #125
  411390:	mov	x29, sp
  411394:	stp	x19, x20, [sp, #16]
  411398:	ldr	x19, [x1]
  41139c:	stp	x21, x22, [sp, #32]
  4113a0:	mov	x22, x0
  4113a4:	stp	x23, x24, [sp, #48]
  4113a8:	mov	x23, x1
  4113ac:	stp	x25, x26, [sp, #64]
  4113b0:	mov	w26, #0x29                  	// #41
  4113b4:	stp	x27, x28, [sp, #80]
  4113b8:	ldrb	w25, [x19], #1
  4113bc:	cmp	w25, #0x28
  4113c0:	mov	x0, x19
  4113c4:	csel	w26, w26, w4, eq  // eq = none
  4113c8:	bl	40ec50 <init_hash_files@@Base+0x7d8>
  4113cc:	cbz	x0, 41160c <handle_function@@Base+0x284>
  4113d0:	mov	x27, x0
  4113d4:	ldrb	w0, [x0, #16]
  4113d8:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  4113dc:	add	x20, x20, #0x448
  4113e0:	add	x21, x19, x0
  4113e4:	ldrb	w5, [x19, x0]
  4113e8:	mov	x2, x5
  4113ec:	ldrh	w0, [x20, x5, lsl #1]
  4113f0:	tst	w0, #0x6
  4113f4:	b.eq	41140c <handle_function@@Base+0x84>  // b.none
  4113f8:	ldrb	w5, [x21, #1]!
  4113fc:	mov	x2, x5
  411400:	ldrh	w6, [x20, x5, lsl #1]
  411404:	tst	w6, #0x6
  411408:	b.ne	4113f8 <handle_function@@Base+0x70>  // b.any
  41140c:	cbz	w2, 411460 <handle_function@@Base+0xd8>
  411410:	mov	x19, x21
  411414:	mov	w6, #0x1                   	// #1
  411418:	mov	w8, #0x0                   	// #0
  41141c:	mov	w7, #0x480                 	// #1152
  411420:	b	411440 <handle_function@@Base+0xb8>
  411424:	cmp	w25, w2
  411428:	b.eq	4114a4 <handle_function@@Base+0x11c>  // b.none
  41142c:	cmp	w26, w2
  411430:	b.eq	4114ac <handle_function@@Base+0x124>  // b.none
  411434:	ldrb	w2, [x19, #1]!
  411438:	cbz	w2, 411460 <handle_function@@Base+0xd8>
  41143c:	sxtw	x5, w2
  411440:	ldrh	w5, [x20, x5, lsl #1]
  411444:	tst	w7, w5
  411448:	b.eq	411434 <handle_function@@Base+0xac>  // b.none
  41144c:	cmp	w2, #0x2c
  411450:	b.ne	411424 <handle_function@@Base+0x9c>  // b.any
  411454:	ldrb	w2, [x19, #1]!
  411458:	add	w6, w6, #0x1
  41145c:	cbnz	w2, 41143c <handle_function@@Base+0xb4>
  411460:	adrp	x1, 442000 <memcpy@GLIBC_2.17>
  411464:	ldr	x0, [x27, #8]
  411468:	ldr	x1, [x1, #3272]
  41146c:	ldr	x20, [x1]
  411470:	bl	406680 <strlen@plt>
  411474:	mov	w2, #0x5                   	// #5
  411478:	mov	x19, x0
  41147c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  411480:	mov	x0, #0x0                   	// #0
  411484:	add	x1, x1, #0x418
  411488:	bl	406cd0 <dcgettext@plt>
  41148c:	ldr	x3, [x27, #8]
  411490:	mov	x2, x0
  411494:	mov	w4, w26
  411498:	mov	x1, x19
  41149c:	mov	x0, x20
  4114a0:	bl	41a060 <fatal@@Base>
  4114a4:	add	w8, w8, #0x1
  4114a8:	b	411434 <handle_function@@Base+0xac>
  4114ac:	sub	w8, w8, #0x1
  4114b0:	cmn	w8, #0x1
  4114b4:	b.ne	411434 <handle_function@@Base+0xac>  // b.any
  4114b8:	add	w6, w6, #0x2
  4114bc:	str	x19, [x23]
  4114c0:	sbfiz	x1, x6, #3, #32
  4114c4:	ldrb	w0, [x27, #19]
  4114c8:	add	x1, x1, #0xf
  4114cc:	and	x1, x1, #0xfffffffffffffff0
  4114d0:	sub	sp, sp, x1
  4114d4:	mov	x23, sp
  4114d8:	tbz	w0, #0, 411550 <handle_function@@Base+0x1c8>
  4114dc:	mov	x4, x23
  4114e0:	cmp	x19, x21
  4114e4:	mov	w28, #0x0                   	// #0
  4114e8:	b.cs	4115c8 <handle_function@@Base+0x240>  // b.hs, b.nlast
  4114ec:	mov	x21, #0x0                   	// #0
  4114f0:	ldr	x0, [x22]
  4114f4:	str	xzr, [x4]
  4114f8:	mov	w1, w28
  4114fc:	mov	x3, x27
  411500:	mov	x2, x23
  411504:	bl	40eb10 <init_hash_files@@Base+0x698>
  411508:	str	x0, [x22]
  41150c:	ldrb	w0, [x27, #19]
  411510:	tbz	w0, #0, 4115bc <handle_function@@Base+0x234>
  411514:	ldr	x0, [x23]
  411518:	cbz	x0, 41152c <handle_function@@Base+0x1a4>
  41151c:	nop
  411520:	bl	406b90 <free@plt>
  411524:	ldr	x0, [x23, #8]!
  411528:	cbnz	x0, 411520 <handle_function@@Base+0x198>
  41152c:	mov	sp, x29
  411530:	mov	w0, #0x1                   	// #1
  411534:	ldp	x19, x20, [sp, #16]
  411538:	ldp	x21, x22, [sp, #32]
  41153c:	ldp	x23, x24, [sp, #48]
  411540:	ldp	x25, x26, [sp, #64]
  411544:	ldp	x27, x28, [sp, #80]
  411548:	ldp	x29, x30, [sp], #112
  41154c:	ret
  411550:	sub	x19, x19, x21
  411554:	str	x23, [x29, #104]
  411558:	add	x0, x19, #0x1
  41155c:	bl	418a50 <xmalloc@@Base>
  411560:	mov	x1, x21
  411564:	mov	x21, x0
  411568:	mov	x2, x19
  41156c:	bl	406640 <memcpy@plt>
  411570:	adds	x3, x21, x19
  411574:	mov	w28, #0x0                   	// #0
  411578:	strb	wzr, [x21, x19]
  41157c:	ldr	x4, [x29, #104]
  411580:	b.cs	4114f0 <handle_function@@Base+0x168>  // b.hs, b.nlast
  411584:	mov	x7, x21
  411588:	mov	x4, x23
  41158c:	mov	w6, #0x480                 	// #1152
  411590:	ldrb	w0, [x27, #18]
  411594:	add	w28, w28, #0x1
  411598:	mov	x1, x3
  41159c:	cmp	w0, w28
  4115a0:	b.ne	411698 <handle_function@@Base+0x310>  // b.any
  4115a4:	str	x7, [x4], #8
  4115a8:	mov	x7, x1
  4115ac:	strb	wzr, [x7], #1
  4115b0:	cmp	x3, x7
  4115b4:	b.cc	4114f0 <handle_function@@Base+0x168>  // b.lo, b.ul, b.last
  4115b8:	b	411590 <handle_function@@Base+0x208>
  4115bc:	mov	x0, x21
  4115c0:	bl	406b90 <free@plt>
  4115c4:	b	41152c <handle_function@@Base+0x1a4>
  4115c8:	mov	w3, #0x480                 	// #1152
  4115cc:	ldrb	w0, [x27, #18]
  4115d0:	add	w28, w28, #0x1
  4115d4:	mov	x24, x19
  4115d8:	cmp	w0, w28
  4115dc:	b.ne	411630 <handle_function@@Base+0x2a8>  // b.any
  4115e0:	mov	x0, x21
  4115e4:	mov	x1, x24
  4115e8:	str	x4, [x29, #104]
  4115ec:	bl	40b8d0 <expand_argument@@Base>
  4115f0:	ldr	x4, [x29, #104]
  4115f4:	add	x21, x24, #0x1
  4115f8:	cmp	x21, x19
  4115fc:	mov	w3, #0x480                 	// #1152
  411600:	str	x0, [x4], #8
  411604:	b.hi	4114ec <handle_function@@Base+0x164>  // b.pmore
  411608:	b	4115cc <handle_function@@Base+0x244>
  41160c:	mov	sp, x29
  411610:	mov	w0, #0x0                   	// #0
  411614:	ldp	x19, x20, [sp, #16]
  411618:	ldp	x21, x22, [sp, #32]
  41161c:	ldp	x23, x24, [sp, #48]
  411620:	ldp	x25, x26, [sp, #64]
  411624:	ldp	x27, x28, [sp, #80]
  411628:	ldp	x29, x30, [sp], #112
  41162c:	ret
  411630:	cmp	x21, x19
  411634:	b.cs	411690 <handle_function@@Base+0x308>  // b.hs, b.nlast
  411638:	mov	x24, x21
  41163c:	mov	w2, #0x0                   	// #0
  411640:	b	411664 <handle_function@@Base+0x2dc>
  411644:	cmp	w26, w1
  411648:	b.eq	411684 <handle_function@@Base+0x2fc>  // b.none
  41164c:	cmp	w1, #0x2c
  411650:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  411654:	b.eq	4115e0 <handle_function@@Base+0x258>  // b.none
  411658:	add	x24, x24, #0x1
  41165c:	cmp	x24, x19
  411660:	b.eq	4115e0 <handle_function@@Base+0x258>  // b.none
  411664:	ldrb	w1, [x24]
  411668:	ldrh	w0, [x20, w1, sxtw #1]
  41166c:	tst	w3, w0
  411670:	b.eq	411658 <handle_function@@Base+0x2d0>  // b.none
  411674:	cmp	w25, w1
  411678:	b.ne	411644 <handle_function@@Base+0x2bc>  // b.any
  41167c:	add	w2, w2, #0x1
  411680:	b	411658 <handle_function@@Base+0x2d0>
  411684:	sub	w2, w2, #0x1
  411688:	cmn	w2, #0x1
  41168c:	b.ne	411658 <handle_function@@Base+0x2d0>  // b.any
  411690:	mov	x24, x19
  411694:	b	4115e0 <handle_function@@Base+0x258>
  411698:	cmp	x3, x7
  41169c:	b.ls	4116f8 <handle_function@@Base+0x370>  // b.plast
  4116a0:	mov	x1, x7
  4116a4:	mov	w5, #0x0                   	// #0
  4116a8:	b	4116cc <handle_function@@Base+0x344>
  4116ac:	cmp	w26, w2
  4116b0:	b.eq	4116ec <handle_function@@Base+0x364>  // b.none
  4116b4:	cmp	w2, #0x2c
  4116b8:	ccmp	w5, #0x0, #0x0, eq  // eq = none
  4116bc:	b.eq	4115a4 <handle_function@@Base+0x21c>  // b.none
  4116c0:	add	x1, x1, #0x1
  4116c4:	cmp	x3, x1
  4116c8:	b.eq	4116f8 <handle_function@@Base+0x370>  // b.none
  4116cc:	ldrb	w2, [x1]
  4116d0:	ldrh	w0, [x20, w2, sxtw #1]
  4116d4:	tst	w6, w0
  4116d8:	b.eq	4116c0 <handle_function@@Base+0x338>  // b.none
  4116dc:	cmp	w25, w2
  4116e0:	b.ne	4116ac <handle_function@@Base+0x324>  // b.any
  4116e4:	add	w5, w5, #0x1
  4116e8:	b	4116c0 <handle_function@@Base+0x338>
  4116ec:	sub	w5, w5, #0x1
  4116f0:	cmn	w5, #0x1
  4116f4:	b.ne	4116c0 <handle_function@@Base+0x338>  // b.any
  4116f8:	mov	x1, x3
  4116fc:	b	4115a4 <handle_function@@Base+0x21c>

0000000000411700 <define_new_function@@Base>:
  411700:	stp	x29, x30, [sp, #-80]!
  411704:	adrp	x9, 443000 <expanding_var@@Base+0x338>
  411708:	add	x9, x9, #0x448
  41170c:	mov	x29, sp
  411710:	stp	x19, x20, [sp, #16]
  411714:	mov	w20, w4
  411718:	stp	x21, x22, [sp, #32]
  41171c:	mov	x21, x1
  411720:	stp	x23, x24, [sp, #48]
  411724:	str	x25, [sp, #64]
  411728:	mov	x25, x0
  41172c:	ldrb	w1, [x1]
  411730:	ldrh	w4, [x9, w1, sxtw #1]
  411734:	tbz	w4, #13, 411850 <define_new_function@@Base+0x150>
  411738:	mov	w24, w2
  41173c:	mov	w22, w3
  411740:	mov	x23, x5
  411744:	mov	x6, x21
  411748:	ldrb	w7, [x6, #1]!
  41174c:	ldrh	w8, [x9, w7, sxtw #1]
  411750:	tbnz	w8, #13, 411748 <define_new_function@@Base+0x48>
  411754:	subs	x19, x6, x21
  411758:	b.eq	411850 <define_new_function@@Base+0x150>  // b.none
  41175c:	cmp	w1, #0x2e
  411760:	ccmp	w7, #0x0, #0x0, ne  // ne = any
  411764:	b.ne	4117e4 <define_new_function@@Base+0xe4>  // b.any
  411768:	cmp	x19, #0xff
  41176c:	b.hi	4118ac <define_new_function@@Base+0x1ac>  // b.pmore
  411770:	cmp	w24, #0xff
  411774:	b.hi	411874 <define_new_function@@Base+0x174>  // b.pmore
  411778:	cmp	w22, #0xff
  41177c:	b.hi	411818 <define_new_function@@Base+0x118>  // b.pmore
  411780:	cmp	w22, #0x0
  411784:	ccmp	w24, w22, #0x0, ne  // ne = any
  411788:	b.hi	411818 <define_new_function@@Base+0x118>  // b.pmore
  41178c:	mov	x0, #0x18                  	// #24
  411790:	bl	418a50 <xmalloc@@Base>
  411794:	mov	x1, x0
  411798:	mvn	w4, w20
  41179c:	and	w4, w4, #0x1
  4117a0:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4117a4:	orr	w4, w4, #0x2
  4117a8:	add	x0, x0, #0x310
  4117ac:	ldrb	w5, [x1, #19]
  4117b0:	strb	w19, [x1, #16]
  4117b4:	strb	w24, [x1, #17]
  4117b8:	and	w5, w5, #0xfffffffc
  4117bc:	strb	w22, [x1, #18]
  4117c0:	orr	w4, w4, w5
  4117c4:	strb	w4, [x1, #19]
  4117c8:	ldp	x19, x20, [sp, #16]
  4117cc:	ldr	x25, [sp, #64]
  4117d0:	stp	x23, x21, [x1]
  4117d4:	ldp	x21, x22, [sp, #32]
  4117d8:	ldp	x23, x24, [sp, #48]
  4117dc:	ldp	x29, x30, [sp], #80
  4117e0:	b	411c80 <hash_insert@@Base>
  4117e4:	mov	x0, x21
  4117e8:	bl	406680 <strlen@plt>
  4117ec:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  4117f0:	mov	x19, x0
  4117f4:	add	x1, x1, #0x468
  4117f8:	mov	w2, #0x5                   	// #5
  4117fc:	mov	x0, #0x0                   	// #0
  411800:	bl	406cd0 <dcgettext@plt>
  411804:	mov	x2, x0
  411808:	mov	x3, x21
  41180c:	mov	x1, x19
  411810:	mov	x0, x25
  411814:	bl	41a060 <fatal@@Base>
  411818:	mov	x0, x21
  41181c:	bl	406680 <strlen@plt>
  411820:	mov	w2, #0x5                   	// #5
  411824:	mov	x19, x0
  411828:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  41182c:	mov	x0, #0x0                   	// #0
  411830:	add	x1, x1, #0x4e0
  411834:	bl	406cd0 <dcgettext@plt>
  411838:	mov	x4, x21
  41183c:	mov	x2, x0
  411840:	mov	w3, w22
  411844:	add	x1, x19, #0x14
  411848:	mov	x0, x25
  41184c:	bl	41a060 <fatal@@Base>
  411850:	mov	w2, #0x5                   	// #5
  411854:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  411858:	mov	x0, #0x0                   	// #0
  41185c:	add	x1, x1, #0x450
  411860:	bl	406cd0 <dcgettext@plt>
  411864:	mov	x2, x0
  411868:	mov	x1, #0x0                   	// #0
  41186c:	mov	x0, x25
  411870:	bl	41a060 <fatal@@Base>
  411874:	mov	x0, x21
  411878:	bl	406680 <strlen@plt>
  41187c:	mov	w2, #0x5                   	// #5
  411880:	mov	x19, x0
  411884:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  411888:	mov	x0, #0x0                   	// #0
  41188c:	add	x1, x1, #0x4a8
  411890:	bl	406cd0 <dcgettext@plt>
  411894:	mov	x4, x21
  411898:	mov	x2, x0
  41189c:	mov	w3, w24
  4118a0:	add	x1, x19, #0x14
  4118a4:	mov	x0, x25
  4118a8:	bl	41a060 <fatal@@Base>
  4118ac:	mov	x0, x21
  4118b0:	bl	406680 <strlen@plt>
  4118b4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  4118b8:	mov	x19, x0
  4118bc:	add	x1, x1, #0x488
  4118c0:	b	4117f8 <define_new_function@@Base+0xf8>
  4118c4:	nop

00000000004118c8 <hash_init_function_table@@Base>:
  4118c8:	stp	x29, x30, [sp, #-32]!
  4118cc:	mov	x1, #0x48                  	// #72
  4118d0:	adrp	x4, 40f000 <init_hash_files@@Base+0xb88>
  4118d4:	mov	x29, sp
  4118d8:	str	x19, [sp, #16]
  4118dc:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  4118e0:	add	x19, x19, #0x310
  4118e4:	add	x4, x4, #0xfb8
  4118e8:	mov	x0, x19
  4118ec:	adrp	x3, 40e000 <print_prereqs@@Base+0x350>
  4118f0:	adrp	x2, 40f000 <init_hash_files@@Base+0xb88>
  4118f4:	add	x3, x3, #0x4a0
  4118f8:	add	x2, x2, #0xff0
  4118fc:	bl	411928 <hash_init@@Base>
  411900:	mov	x0, x19
  411904:	adrp	x1, 442000 <memcpy@GLIBC_2.17>
  411908:	ldr	x19, [sp, #16]
  41190c:	add	x1, x1, #0xcd0
  411910:	ldp	x29, x30, [sp], #32
  411914:	mov	x3, #0x18                  	// #24
  411918:	mov	x2, #0x24                  	// #36
  41191c:	b	411cd0 <hash_load@@Base>

0000000000411920 <guile_gmake_setup@@Base>:
  411920:	mov	w0, #0x1                   	// #1
  411924:	ret

0000000000411928 <hash_init@@Base>:
  411928:	orr	x1, x1, x1, lsr #1
  41192c:	stp	x29, x30, [sp, #-48]!
  411930:	orr	x1, x1, x1, lsr #2
  411934:	mov	x29, sp
  411938:	orr	x1, x1, x1, lsr #4
  41193c:	stp	x19, x20, [sp, #16]
  411940:	mov	x19, x0
  411944:	orr	x1, x1, x1, lsr #8
  411948:	stp	x21, x22, [sp, #32]
  41194c:	mov	x20, x4
  411950:	orr	x1, x1, x1, lsr #16
  411954:	mov	x21, x2
  411958:	mov	x22, x3
  41195c:	orr	x1, x1, x1, lsr #32
  411960:	add	x1, x1, #0x1
  411964:	str	x1, [x0, #32]
  411968:	str	x1, [x0, #56]
  41196c:	lsl	x0, x1, #3
  411970:	bl	418a78 <xcalloc@@Base>
  411974:	str	x0, [x19]
  411978:	cbz	x0, 4119a8 <hash_init@@Base+0x80>
  41197c:	ldr	x0, [x19, #32]
  411980:	stp	x21, x22, [x19, #8]
  411984:	str	x20, [x19, #24]
  411988:	sub	x0, x0, x0, lsr #4
  41198c:	stp	x0, xzr, [x19, #40]
  411990:	stp	xzr, xzr, [x19, #64]
  411994:	str	wzr, [x19, #80]
  411998:	ldp	x19, x20, [sp, #16]
  41199c:	ldp	x21, x22, [sp, #32]
  4119a0:	ldp	x29, x30, [sp], #48
  4119a4:	ret
  4119a8:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  4119ac:	mov	w2, #0x5                   	// #5
  4119b0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  4119b4:	add	x1, x1, #0x678
  4119b8:	ldr	x20, [x3, #360]
  4119bc:	bl	406cd0 <dcgettext@plt>
  4119c0:	ldr	x2, [x19, #32]
  4119c4:	mov	x1, x0
  4119c8:	mov	x0, x20
  4119cc:	lsl	x2, x2, #3
  4119d0:	bl	406dd0 <fprintf@plt>
  4119d4:	mov	w0, #0x1                   	// #1
  4119d8:	bl	4066a0 <exit@plt>
  4119dc:	nop

00000000004119e0 <hash_find_slot@@Base>:
  4119e0:	stp	x29, x30, [sp, #-80]!
  4119e4:	mov	x29, sp
  4119e8:	stp	x19, x20, [sp, #16]
  4119ec:	mov	x20, x0
  4119f0:	mov	x0, x1
  4119f4:	stp	x21, x22, [sp, #32]
  4119f8:	mov	x22, x1
  4119fc:	ldr	x1, [x20, #8]
  411a00:	str	x25, [sp, #64]
  411a04:	blr	x1
  411a08:	ldr	x19, [x20, #32]
  411a0c:	ldr	x1, [x20]
  411a10:	sub	w19, w19, #0x1
  411a14:	and	w2, w19, w0
  411a18:	and	w19, w19, w0
  411a1c:	ldr	x0, [x20, #72]
  411a20:	add	x25, x1, x2, lsl #3
  411a24:	ldr	x2, [x1, x2, lsl #3]
  411a28:	add	x0, x0, #0x1
  411a2c:	str	x0, [x20, #72]
  411a30:	cbz	x2, 411ad0 <hash_find_slot@@Base+0xf0>
  411a34:	mov	w21, #0x0                   	// #0
  411a38:	stp	x23, x24, [sp, #48]
  411a3c:	adrp	x23, 443000 <expanding_var@@Base+0x338>
  411a40:	mov	x24, #0x0                   	// #0
  411a44:	add	x23, x23, #0x30
  411a48:	b	411aa4 <hash_find_slot@@Base+0xc4>
  411a4c:	cmp	x22, x2
  411a50:	b.eq	411ae8 <hash_find_slot@@Base+0x108>  // b.none
  411a54:	ldr	x2, [x20, #24]
  411a58:	blr	x2
  411a5c:	cbz	w0, 411ae8 <hash_find_slot@@Base+0x108>
  411a60:	ldr	x0, [x20, #64]
  411a64:	add	x0, x0, #0x1
  411a68:	str	x0, [x20, #64]
  411a6c:	mov	x0, x22
  411a70:	cbnz	w21, 411a80 <hash_find_slot@@Base+0xa0>
  411a74:	ldr	x1, [x20, #16]
  411a78:	blr	x1
  411a7c:	orr	w21, w0, #0x1
  411a80:	ldr	x2, [x20, #32]
  411a84:	add	w19, w21, w19
  411a88:	ldr	x1, [x20]
  411a8c:	sub	w2, w2, #0x1
  411a90:	and	w3, w2, w19
  411a94:	and	w19, w2, w19
  411a98:	add	x25, x1, x3, lsl #3
  411a9c:	ldr	x2, [x1, x3, lsl #3]
  411aa0:	cbz	x2, 411ac4 <hash_find_slot@@Base+0xe4>
  411aa4:	ldr	x3, [x23]
  411aa8:	mov	x1, x2
  411aac:	mov	x0, x22
  411ab0:	cmp	x3, x2
  411ab4:	b.ne	411a4c <hash_find_slot@@Base+0x6c>  // b.any
  411ab8:	cmp	x24, #0x0
  411abc:	csel	x24, x24, x25, ne  // ne = any
  411ac0:	b	411a6c <hash_find_slot@@Base+0x8c>
  411ac4:	cmp	x24, #0x0
  411ac8:	csel	x25, x25, x24, eq  // eq = none
  411acc:	ldp	x23, x24, [sp, #48]
  411ad0:	mov	x0, x25
  411ad4:	ldp	x19, x20, [sp, #16]
  411ad8:	ldp	x21, x22, [sp, #32]
  411adc:	ldr	x25, [sp, #64]
  411ae0:	ldp	x29, x30, [sp], #80
  411ae4:	ret
  411ae8:	mov	x0, x25
  411aec:	ldp	x19, x20, [sp, #16]
  411af0:	ldp	x21, x22, [sp, #32]
  411af4:	ldp	x23, x24, [sp, #48]
  411af8:	ldr	x25, [sp, #64]
  411afc:	ldp	x29, x30, [sp], #80
  411b00:	ret
  411b04:	nop

0000000000411b08 <hash_find_item@@Base>:
  411b08:	stp	x29, x30, [sp, #-16]!
  411b0c:	mov	x29, sp
  411b10:	bl	4119e0 <hash_find_slot@@Base>
  411b14:	ldr	x0, [x0]
  411b18:	cbz	x0, 411b2c <hash_find_item@@Base+0x24>
  411b1c:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  411b20:	ldr	x1, [x1, #48]
  411b24:	cmp	x0, x1
  411b28:	csel	x0, x0, xzr, ne  // ne = any
  411b2c:	ldp	x29, x30, [sp], #16
  411b30:	ret
  411b34:	nop

0000000000411b38 <hash_insert_at@@Base>:
  411b38:	stp	x29, x30, [sp, #-64]!
  411b3c:	mov	x29, sp
  411b40:	stp	x19, x20, [sp, #16]
  411b44:	mov	x19, x0
  411b48:	ldr	x0, [x2]
  411b4c:	stp	x21, x22, [sp, #32]
  411b50:	mov	x21, x1
  411b54:	ldr	x4, [x19, #56]
  411b58:	cbz	x0, 411c6c <hash_insert_at@@Base+0x134>
  411b5c:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  411b60:	ldr	x1, [x1, #48]
  411b64:	cmp	x1, x0
  411b68:	b.eq	411b94 <hash_insert_at@@Base+0x5c>  // b.none
  411b6c:	ldp	x3, x5, [x19, #32]
  411b70:	str	x21, [x2]
  411b74:	sub	x0, x3, x5
  411b78:	cmp	x0, x4
  411b7c:	b.hi	411bb4 <hash_insert_at@@Base+0x7c>  // b.pmore
  411b80:	mov	x0, x2
  411b84:	ldp	x19, x20, [sp, #16]
  411b88:	ldp	x21, x22, [sp, #32]
  411b8c:	ldp	x29, x30, [sp], #64
  411b90:	ret
  411b94:	ldp	x3, x5, [x19, #32]
  411b98:	ldr	x0, [x19, #48]
  411b9c:	add	x0, x0, #0x1
  411ba0:	str	x0, [x19, #48]
  411ba4:	str	x21, [x2]
  411ba8:	sub	x0, x3, x5
  411bac:	cmp	x0, x4
  411bb0:	b.ls	411b80 <hash_insert_at@@Base+0x48>  // b.plast
  411bb4:	ldr	x1, [x19, #48]
  411bb8:	stp	x23, x24, [sp, #48]
  411bbc:	mov	x0, x3
  411bc0:	cmp	x5, x1
  411bc4:	ldr	x23, [x19]
  411bc8:	b.ls	411c5c <hash_insert_at@@Base+0x124>  // b.plast
  411bcc:	ldr	w1, [x19, #80]
  411bd0:	add	x22, x23, x3, lsl #3
  411bd4:	lsl	x0, x0, #3
  411bd8:	mov	x20, x23
  411bdc:	add	w1, w1, #0x1
  411be0:	str	w1, [x19, #80]
  411be4:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  411be8:	bl	418a78 <xcalloc@@Base>
  411bec:	str	x0, [x19]
  411bf0:	cmp	x23, x22
  411bf4:	b.cs	411c28 <hash_insert_at@@Base+0xf0>  // b.hs, b.nlast
  411bf8:	ldr	x1, [x20]
  411bfc:	cbz	x1, 411c1c <hash_insert_at@@Base+0xe4>
  411c00:	ldr	x2, [x24, #48]
  411c04:	mov	x0, x19
  411c08:	cmp	x1, x2
  411c0c:	b.eq	411c1c <hash_insert_at@@Base+0xe4>  // b.none
  411c10:	bl	4119e0 <hash_find_slot@@Base>
  411c14:	ldr	x1, [x20]
  411c18:	str	x1, [x0]
  411c1c:	add	x20, x20, #0x8
  411c20:	cmp	x20, x22
  411c24:	b.cc	411bf8 <hash_insert_at@@Base+0xc0>  // b.lo, b.ul, b.last
  411c28:	ldr	x1, [x19, #32]
  411c2c:	mov	x0, x23
  411c30:	ldr	x2, [x19, #48]
  411c34:	sub	x1, x1, x2
  411c38:	str	x1, [x19, #56]
  411c3c:	bl	406b90 <free@plt>
  411c40:	mov	x1, x21
  411c44:	mov	x0, x19
  411c48:	ldp	x19, x20, [sp, #16]
  411c4c:	ldp	x21, x22, [sp, #32]
  411c50:	ldp	x23, x24, [sp, #48]
  411c54:	ldp	x29, x30, [sp], #64
  411c58:	b	4119e0 <hash_find_slot@@Base>
  411c5c:	lsl	x0, x3, #1
  411c60:	sub	x1, x0, x0, lsr #4
  411c64:	stp	x0, x1, [x19, #32]
  411c68:	b	411bcc <hash_insert_at@@Base+0x94>
  411c6c:	ldr	x0, [x19, #48]
  411c70:	sub	x4, x4, #0x1
  411c74:	add	x0, x0, #0x1
  411c78:	stp	x0, x4, [x19, #48]
  411c7c:	b	411b6c <hash_insert_at@@Base+0x34>

0000000000411c80 <hash_insert@@Base>:
  411c80:	stp	x29, x30, [sp, #-32]!
  411c84:	mov	x29, sp
  411c88:	stp	x19, x20, [sp, #16]
  411c8c:	mov	x19, x0
  411c90:	mov	x20, x1
  411c94:	bl	4119e0 <hash_find_slot@@Base>
  411c98:	mov	x2, x0
  411c9c:	mov	x0, x19
  411ca0:	mov	x1, x20
  411ca4:	ldr	x19, [x2]
  411ca8:	bl	411b38 <hash_insert_at@@Base>
  411cac:	cbz	x19, 411cc0 <hash_insert@@Base+0x40>
  411cb0:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  411cb4:	ldr	x0, [x0, #48]
  411cb8:	cmp	x0, x19
  411cbc:	csel	x19, x19, xzr, ne  // ne = any
  411cc0:	mov	x0, x19
  411cc4:	ldp	x19, x20, [sp, #16]
  411cc8:	ldp	x29, x30, [sp], #32
  411ccc:	ret

0000000000411cd0 <hash_load@@Base>:
  411cd0:	cbz	x2, 411d24 <hash_load@@Base+0x54>
  411cd4:	stp	x29, x30, [sp, #-48]!
  411cd8:	mov	x29, sp
  411cdc:	stp	x19, x20, [sp, #16]
  411ce0:	mov	x19, x1
  411ce4:	sub	x20, x2, #0x1
  411ce8:	stp	x21, x22, [sp, #32]
  411cec:	mov	x22, x0
  411cf0:	mov	x21, x3
  411cf4:	nop
  411cf8:	mov	x1, x19
  411cfc:	sub	x20, x20, #0x1
  411d00:	mov	x0, x22
  411d04:	bl	411c80 <hash_insert@@Base>
  411d08:	add	x19, x19, x21
  411d0c:	cmn	x20, #0x1
  411d10:	b.ne	411cf8 <hash_load@@Base+0x28>  // b.any
  411d14:	ldp	x19, x20, [sp, #16]
  411d18:	ldp	x21, x22, [sp, #32]
  411d1c:	ldp	x29, x30, [sp], #48
  411d20:	ret
  411d24:	ret

0000000000411d28 <hash_delete@@Base>:
  411d28:	stp	x29, x30, [sp, #-32]!
  411d2c:	mov	x29, sp
  411d30:	str	x19, [sp, #16]
  411d34:	mov	x19, x0
  411d38:	bl	4119e0 <hash_find_slot@@Base>
  411d3c:	mov	x1, x0
  411d40:	ldr	x0, [x0]
  411d44:	cbz	x0, 411d68 <hash_delete@@Base+0x40>
  411d48:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  411d4c:	ldr	x3, [x2, #48]
  411d50:	cmp	x0, x3
  411d54:	b.eq	411d74 <hash_delete@@Base+0x4c>  // b.none
  411d58:	ldr	x2, [x19, #48]
  411d5c:	str	x3, [x1]
  411d60:	sub	x1, x2, #0x1
  411d64:	str	x1, [x19, #48]
  411d68:	ldr	x19, [sp, #16]
  411d6c:	ldp	x29, x30, [sp], #32
  411d70:	ret
  411d74:	mov	x0, #0x0                   	// #0
  411d78:	ldr	x19, [sp, #16]
  411d7c:	ldp	x29, x30, [sp], #32
  411d80:	ret
  411d84:	nop

0000000000411d88 <hash_delete_at@@Base>:
  411d88:	mov	x2, x0
  411d8c:	ldr	x0, [x1]
  411d90:	cbz	x0, 411db4 <hash_delete_at@@Base+0x2c>
  411d94:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  411d98:	ldr	x4, [x3, #48]
  411d9c:	cmp	x4, x0
  411da0:	b.eq	411db8 <hash_delete_at@@Base+0x30>  // b.none
  411da4:	ldr	x3, [x2, #48]
  411da8:	str	x4, [x1]
  411dac:	sub	x1, x3, #0x1
  411db0:	str	x1, [x2, #48]
  411db4:	ret
  411db8:	mov	x0, #0x0                   	// #0
  411dbc:	ret

0000000000411dc0 <hash_free_items@@Base>:
  411dc0:	stp	x29, x30, [sp, #-48]!
  411dc4:	mov	x29, sp
  411dc8:	stp	x19, x20, [sp, #16]
  411dcc:	stp	x21, x22, [sp, #32]
  411dd0:	mov	x21, x0
  411dd4:	ldr	x19, [x0]
  411dd8:	ldr	x0, [x0, #32]
  411ddc:	add	x20, x19, x0, lsl #3
  411de0:	cmp	x19, x20
  411de4:	b.cs	411e18 <hash_free_items@@Base+0x58>  // b.hs, b.nlast
  411de8:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  411dec:	nop
  411df0:	ldr	x0, [x19]
  411df4:	cbz	x0, 411e08 <hash_free_items@@Base+0x48>
  411df8:	ldr	x1, [x22, #48]
  411dfc:	cmp	x1, x0
  411e00:	b.eq	411e08 <hash_free_items@@Base+0x48>  // b.none
  411e04:	bl	406b90 <free@plt>
  411e08:	str	xzr, [x19], #8
  411e0c:	cmp	x20, x19
  411e10:	b.hi	411df0 <hash_free_items@@Base+0x30>  // b.pmore
  411e14:	ldr	x0, [x21, #32]
  411e18:	ldp	x19, x20, [sp, #16]
  411e1c:	stp	xzr, x0, [x21, #48]
  411e20:	ldp	x21, x22, [sp, #32]
  411e24:	ldp	x29, x30, [sp], #48
  411e28:	ret
  411e2c:	nop

0000000000411e30 <hash_delete_items@@Base>:
  411e30:	ldr	x1, [x0]
  411e34:	ldr	x3, [x0, #32]
  411e38:	add	x2, x1, x3, lsl #3
  411e3c:	cmp	x1, x2
  411e40:	b.cs	411e54 <hash_delete_items@@Base+0x24>  // b.hs, b.nlast
  411e44:	nop
  411e48:	str	xzr, [x1], #8
  411e4c:	cmp	x2, x1
  411e50:	b.hi	411e48 <hash_delete_items@@Base+0x18>  // b.pmore
  411e54:	stp	xzr, x3, [x0, #48]
  411e58:	stp	xzr, xzr, [x0, #64]
  411e5c:	str	wzr, [x0, #80]
  411e60:	ret
  411e64:	nop

0000000000411e68 <hash_free@@Base>:
  411e68:	stp	x29, x30, [sp, #-32]!
  411e6c:	mov	x29, sp
  411e70:	str	x19, [sp, #16]
  411e74:	mov	x19, x0
  411e78:	cbnz	w1, 411ea0 <hash_free@@Base+0x38>
  411e7c:	ldr	x0, [x0, #32]
  411e80:	stp	xzr, x0, [x19, #48]
  411e84:	ldr	x0, [x19]
  411e88:	bl	406b90 <free@plt>
  411e8c:	str	xzr, [x19]
  411e90:	str	xzr, [x19, #40]
  411e94:	ldr	x19, [sp, #16]
  411e98:	ldp	x29, x30, [sp], #32
  411e9c:	ret
  411ea0:	bl	411dc0 <hash_free_items@@Base>
  411ea4:	ldr	x0, [x19]
  411ea8:	bl	406b90 <free@plt>
  411eac:	str	xzr, [x19]
  411eb0:	str	xzr, [x19, #40]
  411eb4:	ldr	x19, [sp, #16]
  411eb8:	ldp	x29, x30, [sp], #32
  411ebc:	ret

0000000000411ec0 <hash_map@@Base>:
  411ec0:	stp	x29, x30, [sp, #-48]!
  411ec4:	mov	x29, sp
  411ec8:	stp	x19, x20, [sp, #16]
  411ecc:	ldr	x19, [x0]
  411ed0:	ldr	x20, [x0, #32]
  411ed4:	add	x20, x19, x20, lsl #3
  411ed8:	cmp	x19, x20
  411edc:	b.cs	411f1c <hash_map@@Base+0x5c>  // b.hs, b.nlast
  411ee0:	stp	x21, x22, [sp, #32]
  411ee4:	mov	x21, x1
  411ee8:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  411eec:	nop
  411ef0:	ldr	x2, [x19]
  411ef4:	add	x19, x19, #0x8
  411ef8:	mov	x0, x2
  411efc:	cbz	x2, 411f10 <hash_map@@Base+0x50>
  411f00:	ldr	x3, [x22, #48]
  411f04:	cmp	x2, x3
  411f08:	b.eq	411f10 <hash_map@@Base+0x50>  // b.none
  411f0c:	blr	x21
  411f10:	cmp	x20, x19
  411f14:	b.hi	411ef0 <hash_map@@Base+0x30>  // b.pmore
  411f18:	ldp	x21, x22, [sp, #32]
  411f1c:	ldp	x19, x20, [sp, #16]
  411f20:	ldp	x29, x30, [sp], #48
  411f24:	ret

0000000000411f28 <hash_map_arg@@Base>:
  411f28:	stp	x29, x30, [sp, #-64]!
  411f2c:	mov	x29, sp
  411f30:	stp	x19, x20, [sp, #16]
  411f34:	ldr	x19, [x0]
  411f38:	ldr	x20, [x0, #32]
  411f3c:	add	x20, x19, x20, lsl #3
  411f40:	cmp	x19, x20
  411f44:	b.cs	411f94 <hash_map_arg@@Base+0x6c>  // b.hs, b.nlast
  411f48:	stp	x21, x22, [sp, #32]
  411f4c:	mov	x22, x1
  411f50:	mov	x21, x2
  411f54:	str	x23, [sp, #48]
  411f58:	adrp	x23, 443000 <expanding_var@@Base+0x338>
  411f5c:	nop
  411f60:	ldr	x3, [x19]
  411f64:	mov	x1, x21
  411f68:	add	x19, x19, #0x8
  411f6c:	mov	x0, x3
  411f70:	cbz	x3, 411f84 <hash_map_arg@@Base+0x5c>
  411f74:	ldr	x4, [x23, #48]
  411f78:	cmp	x3, x4
  411f7c:	b.eq	411f84 <hash_map_arg@@Base+0x5c>  // b.none
  411f80:	blr	x22
  411f84:	cmp	x20, x19
  411f88:	b.hi	411f60 <hash_map_arg@@Base+0x38>  // b.pmore
  411f8c:	ldp	x21, x22, [sp, #32]
  411f90:	ldr	x23, [sp, #48]
  411f94:	ldp	x19, x20, [sp, #16]
  411f98:	ldp	x29, x30, [sp], #64
  411f9c:	ret

0000000000411fa0 <hash_print_stats@@Base>:
  411fa0:	stp	x29, x30, [sp, #-48]!
  411fa4:	mov	w2, #0x5                   	// #5
  411fa8:	mov	x29, sp
  411fac:	stp	x19, x20, [sp, #16]
  411fb0:	mov	x19, x0
  411fb4:	mov	x20, x1
  411fb8:	mov	x0, #0x0                   	// #0
  411fbc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  411fc0:	add	x1, x1, #0x6b8
  411fc4:	str	d8, [sp, #32]
  411fc8:	bl	406cd0 <dcgettext@plt>
  411fcc:	mov	x1, x0
  411fd0:	ldr	x2, [x19, #48]
  411fd4:	mov	x4, #0x4059000000000000    	// #4636737291354636288
  411fd8:	ldr	x3, [x19, #32]
  411fdc:	ucvtf	d0, x2
  411fe0:	fmov	d8, x4
  411fe4:	mov	x0, x20
  411fe8:	ucvtf	d1, x3
  411fec:	fmul	d0, d0, d8
  411ff0:	fdiv	d0, d0, d1
  411ff4:	bl	406dd0 <fprintf@plt>
  411ff8:	mov	w2, #0x5                   	// #5
  411ffc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  412000:	mov	x0, #0x0                   	// #0
  412004:	add	x1, x1, #0x6d0
  412008:	bl	406cd0 <dcgettext@plt>
  41200c:	mov	x1, x0
  412010:	ldr	w2, [x19, #80]
  412014:	mov	x0, x20
  412018:	bl	406dd0 <fprintf@plt>
  41201c:	mov	w2, #0x5                   	// #5
  412020:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  412024:	mov	x0, #0x0                   	// #0
  412028:	add	x1, x1, #0x6e0
  41202c:	bl	406cd0 <dcgettext@plt>
  412030:	mov	x1, x0
  412034:	ldp	x2, x3, [x19, #64]
  412038:	movi	d0, #0x0
  41203c:	cbz	x3, 412050 <hash_print_stats@@Base+0xb0>
  412040:	ucvtf	d0, x2
  412044:	ucvtf	d1, x3
  412048:	fmul	d0, d0, d8
  41204c:	fdiv	d0, d0, d1
  412050:	mov	x0, x20
  412054:	ldr	d8, [sp, #32]
  412058:	ldp	x19, x20, [sp, #16]
  41205c:	ldp	x29, x30, [sp], #48
  412060:	b	406dd0 <fprintf@plt>
  412064:	nop

0000000000412068 <hash_dump@@Base>:
  412068:	stp	x29, x30, [sp, #-48]!
  41206c:	mov	x29, sp
  412070:	stp	x19, x20, [sp, #16]
  412074:	mov	x20, x1
  412078:	ldr	x4, [x0]
  41207c:	stp	x21, x22, [sp, #32]
  412080:	mov	x21, x0
  412084:	ldr	x19, [x0, #32]
  412088:	mov	x22, x2
  41208c:	add	x19, x4, x19, lsl #3
  412090:	cbz	x1, 412104 <hash_dump@@Base+0x9c>
  412094:	mov	x7, x20
  412098:	cmp	x4, x19
  41209c:	b.cs	4120d4 <hash_dump@@Base+0x6c>  // b.hs, b.nlast
  4120a0:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  4120a4:	nop
  4120a8:	ldr	x5, [x4]
  4120ac:	mov	x6, x7
  4120b0:	add	x4, x4, #0x8
  4120b4:	cbz	x5, 4120cc <hash_dump@@Base+0x64>
  4120b8:	ldr	x8, [x1, #48]
  4120bc:	cmp	x5, x8
  4120c0:	b.eq	4120cc <hash_dump@@Base+0x64>  // b.none
  4120c4:	str	x5, [x6], #8
  4120c8:	mov	x7, x6
  4120cc:	cmp	x19, x4
  4120d0:	b.hi	4120a8 <hash_dump@@Base+0x40>  // b.pmore
  4120d4:	str	xzr, [x7]
  4120d8:	cbz	x22, 4120f0 <hash_dump@@Base+0x88>
  4120dc:	ldr	x1, [x21, #48]
  4120e0:	mov	x3, x22
  4120e4:	mov	x0, x20
  4120e8:	mov	x2, #0x8                   	// #8
  4120ec:	bl	4067b0 <qsort@plt>
  4120f0:	mov	x0, x20
  4120f4:	ldp	x19, x20, [sp, #16]
  4120f8:	ldp	x21, x22, [sp, #32]
  4120fc:	ldp	x29, x30, [sp], #48
  412100:	ret
  412104:	ldr	x0, [x0, #48]
  412108:	add	x0, x0, #0x1
  41210c:	lsl	x0, x0, #3
  412110:	bl	418a50 <xmalloc@@Base>
  412114:	mov	x20, x0
  412118:	ldr	x4, [x21]
  41211c:	b	412094 <hash_dump@@Base+0x2c>

0000000000412120 <jhash@@Base>:
  412120:	mov	w3, #0xbeef                	// #48879
  412124:	mov	x7, x0
  412128:	movk	w3, #0xdead, lsl #16
  41212c:	cmp	w1, #0xc
  412130:	add	w0, w1, w3
  412134:	b.le	412268 <jhash@@Base+0x148>
  412138:	mov	w2, w0
  41213c:	mov	w3, w0
  412140:	ldp	w5, w6, [x7, #4]
  412144:	sub	w1, w1, #0xc
  412148:	ldr	w4, [x7], #12
  41214c:	cmp	w1, #0xc
  412150:	add	w2, w2, w6
  412154:	add	w3, w3, w5
  412158:	sub	w4, w4, w2
  41215c:	add	w6, w3, w2
  412160:	add	w4, w4, w0
  412164:	eor	w2, w4, w2, ror #28
  412168:	sub	w3, w3, w2
  41216c:	add	w5, w2, w6
  412170:	eor	w2, w3, w2, ror #26
  412174:	sub	w6, w6, w2
  412178:	add	w4, w2, w5
  41217c:	eor	w2, w6, w2, ror #24
  412180:	sub	w5, w5, w2
  412184:	add	w3, w2, w4
  412188:	eor	w2, w5, w2, ror #16
  41218c:	sub	w4, w4, w2
  412190:	add	w0, w2, w3
  412194:	eor	w2, w4, w2, ror #13
  412198:	sub	w4, w3, w2
  41219c:	add	w3, w2, w0
  4121a0:	eor	w2, w4, w2, ror #28
  4121a4:	b.gt	412140 <jhash@@Base+0x20>
  4121a8:	cmp	w1, #0x8
  4121ac:	b.gt	41222c <jhash@@Base+0x10c>
  4121b0:	cmp	w1, #0x4
  4121b4:	b.gt	412238 <jhash@@Base+0x118>
  4121b8:	cmp	w1, #0x4
  4121bc:	b.eq	41224c <jhash@@Base+0x12c>  // b.none
  4121c0:	cmp	w1, #0x2
  4121c4:	b.gt	412254 <jhash@@Base+0x134>
  4121c8:	b.eq	41225c <jhash@@Base+0x13c>  // b.none
  4121cc:	ldrb	w1, [x7]
  4121d0:	ror	w4, w3, #18
  4121d4:	add	w2, w1, w2
  4121d8:	eor	w1, w3, w2
  4121dc:	sub	w1, w1, w4
  4121e0:	eor	w0, w1, w0
  4121e4:	ror	w2, w1, #21
  4121e8:	sub	w0, w0, w2
  4121ec:	eor	w3, w3, w0
  4121f0:	ror	w2, w0, #7
  4121f4:	sub	w3, w3, w2
  4121f8:	eor	w1, w1, w3
  4121fc:	ror	w2, w3, #16
  412200:	sub	w1, w1, w2
  412204:	eor	w0, w0, w1
  412208:	ror	w2, w1, #28
  41220c:	sub	w0, w0, w2
  412210:	eor	w3, w3, w0
  412214:	ror	w0, w0, #18
  412218:	sub	w3, w3, w0
  41221c:	eor	w4, w1, w3
  412220:	ror	w3, w3, #8
  412224:	sub	w0, w4, w3
  412228:	ret
  41222c:	ldr	w4, [x7], #4
  412230:	sub	w1, w1, #0x4
  412234:	add	w0, w0, w4
  412238:	ldr	w4, [x7], #4
  41223c:	sub	w1, w1, #0x4
  412240:	cmp	w1, #0x4
  412244:	add	w3, w3, w4
  412248:	b.ne	4121c0 <jhash@@Base+0xa0>  // b.any
  41224c:	ldrb	w1, [x7, #3]
  412250:	add	w2, w2, w1, lsl #24
  412254:	ldrb	w1, [x7, #2]
  412258:	add	w2, w2, w1, lsl #16
  41225c:	ldrb	w1, [x7, #1]
  412260:	add	w2, w2, w1, lsl #8
  412264:	b	4121cc <jhash@@Base+0xac>
  412268:	cbz	w1, 412228 <jhash@@Base+0x108>
  41226c:	mov	w3, w0
  412270:	mov	w2, w0
  412274:	b	4121a8 <jhash@@Base+0x88>

0000000000412278 <jhash_string@@Base>:
  412278:	stp	x29, x30, [sp, #-112]!
  41227c:	mov	x29, sp
  412280:	stp	x19, x20, [sp, #16]
  412284:	mov	w19, #0xbeef                	// #48879
  412288:	movk	w19, #0xdead, lsl #16
  41228c:	mov	w20, w19
  412290:	stp	x21, x22, [sp, #32]
  412294:	mov	w22, #0xfeff                	// #65279
  412298:	mov	w21, w19
  41229c:	stp	x23, x24, [sp, #48]
  4122a0:	movk	w22, #0xfefe, lsl #16
  4122a4:	stp	x25, x26, [sp, #64]
  4122a8:	mov	x25, x0
  4122ac:	mov	x26, x0
  4122b0:	str	x27, [sp, #80]
  4122b4:	bl	406680 <strlen@plt>
  4122b8:	mov	x27, x0
  4122bc:	mov	x23, #0x4                   	// #4
  4122c0:	cmp	x27, #0x4
  4122c4:	mov	x1, x26
  4122c8:	csel	x2, x27, x23, ls  // ls = plast
  4122cc:	add	x0, sp, #0x6c
  4122d0:	str	wzr, [sp, #108]
  4122d4:	mov	x24, x26
  4122d8:	bl	406640 <memcpy@plt>
  4122dc:	ldr	w1, [sp, #108]
  4122e0:	sub	x2, x27, #0x4
  4122e4:	add	x0, sp, #0x6c
  4122e8:	add	w3, w1, w22
  4122ec:	bic	w3, w3, w1
  4122f0:	tst	w3, #0x80808080
  4122f4:	b.eq	412378 <jhash_string@@Base+0x100>  // b.none
  4122f8:	ands	w0, w1, #0xff
  4122fc:	b.ne	412468 <jhash_string@@Base+0x1f0>  // b.any
  412300:	eor	w19, w20, w19
  412304:	ror	w0, w20, #18
  412308:	sub	w19, w19, w0
  41230c:	sub	x25, x26, x25
  412310:	eor	w21, w21, w19
  412314:	ror	w0, w19, #21
  412318:	sub	w21, w21, w0
  41231c:	eor	w20, w20, w21
  412320:	ror	w0, w21, #7
  412324:	sub	w20, w20, w0
  412328:	eor	w19, w19, w20
  41232c:	ror	w0, w20, #16
  412330:	sub	w19, w19, w0
  412334:	eor	w21, w21, w19
  412338:	ror	w0, w19, #28
  41233c:	sub	w21, w21, w0
  412340:	eor	w20, w20, w21
  412344:	ror	w21, w21, #18
  412348:	sub	w20, w20, w21
  41234c:	eor	w19, w19, w20
  412350:	add	w25, w19, w25
  412354:	ror	w20, w20, #8
  412358:	sub	w0, w25, w20
  41235c:	ldp	x19, x20, [sp, #16]
  412360:	ldp	x21, x22, [sp, #32]
  412364:	ldp	x23, x24, [sp, #48]
  412368:	ldp	x25, x26, [sp, #64]
  41236c:	ldr	x27, [sp, #80]
  412370:	ldp	x29, x30, [sp], #112
  412374:	ret
  412378:	cmp	x2, #0x4
  41237c:	add	x26, x26, #0x4
  412380:	csel	x2, x2, x23, ls  // ls = plast
  412384:	add	w21, w21, w1
  412388:	mov	x1, x26
  41238c:	str	wzr, [sp, #108]
  412390:	bl	406640 <memcpy@plt>
  412394:	ldr	w1, [sp, #108]
  412398:	sub	x2, x27, #0x8
  41239c:	add	x0, sp, #0x6c
  4123a0:	add	w3, w1, w22
  4123a4:	bic	w3, w3, w1
  4123a8:	tst	w3, #0x80808080
  4123ac:	b.eq	4123c8 <jhash_string@@Base+0x150>  // b.none
  4123b0:	ands	w0, w1, #0xff
  4123b4:	b.eq	412300 <jhash_string@@Base+0x88>  // b.none
  4123b8:	tst	w1, #0xff00
  4123bc:	b.ne	41248c <jhash_string@@Base+0x214>  // b.any
  4123c0:	add	w20, w20, w0
  4123c4:	b	412300 <jhash_string@@Base+0x88>
  4123c8:	cmp	x2, #0x4
  4123cc:	add	x26, x24, #0x8
  4123d0:	csel	x2, x2, x23, ls  // ls = plast
  4123d4:	add	w20, w20, w1
  4123d8:	mov	x1, x26
  4123dc:	str	wzr, [sp, #108]
  4123e0:	bl	406640 <memcpy@plt>
  4123e4:	sub	x27, x27, #0xc
  4123e8:	ldr	w0, [sp, #108]
  4123ec:	add	w2, w0, w19
  4123f0:	add	w4, w0, w22
  4123f4:	sub	w3, w21, w2
  4123f8:	add	w1, w20, w2
  4123fc:	eor	w2, w3, w2, ror #28
  412400:	bic	w4, w4, w0
  412404:	sub	w5, w20, w2
  412408:	add	w3, w2, w1
  41240c:	eor	w2, w5, w2, ror #26
  412410:	tst	w4, #0x80808080
  412414:	sub	w1, w1, w2
  412418:	add	w4, w2, w3
  41241c:	eor	w2, w1, w2, ror #24
  412420:	b.eq	41243c <jhash_string@@Base+0x1c4>  // b.none
  412424:	ands	w1, w0, #0xff
  412428:	b.eq	412300 <jhash_string@@Base+0x88>  // b.none
  41242c:	tst	w0, #0xff00
  412430:	b.ne	4124a0 <jhash_string@@Base+0x228>  // b.any
  412434:	add	w19, w19, w1
  412438:	b	412300 <jhash_string@@Base+0x88>
  41243c:	sub	w3, w3, w2
  412440:	add	w0, w2, w4
  412444:	eor	w2, w3, w2, ror #16
  412448:	add	x26, x24, #0xc
  41244c:	sub	w19, w4, w2
  412450:	add	w21, w2, w0
  412454:	eor	w2, w19, w2, ror #13
  412458:	sub	w19, w0, w2
  41245c:	add	w20, w2, w21
  412460:	eor	w19, w19, w2, ror #28
  412464:	b	4122c0 <jhash_string@@Base+0x48>
  412468:	tst	w1, #0xff00
  41246c:	b.ne	412478 <jhash_string@@Base+0x200>  // b.any
  412470:	add	w21, w21, w0
  412474:	b	412300 <jhash_string@@Base+0x88>
  412478:	add	w0, w21, w1, uxth
  41247c:	tst	w1, #0xff0000
  412480:	add	w21, w21, w1
  412484:	csel	w21, w21, w0, ne  // ne = any
  412488:	b	412300 <jhash_string@@Base+0x88>
  41248c:	add	w0, w20, w1, uxth
  412490:	tst	w1, #0xff0000
  412494:	add	w20, w20, w1
  412498:	csel	w20, w20, w0, ne  // ne = any
  41249c:	b	412300 <jhash_string@@Base+0x88>
  4124a0:	add	w1, w19, w0, uxth
  4124a4:	tst	w0, #0xff0000
  4124a8:	add	w19, w19, w0
  4124ac:	csel	w19, w19, w1, ne  // ne = any
  4124b0:	b	412300 <jhash_string@@Base+0x88>
  4124b4:	nop

00000000004124b8 <stemlen_compare@@Base>:
  4124b8:	mov	x3, x0
  4124bc:	ldr	x0, [x1, #8]
  4124c0:	ldr	x2, [x3, #8]
  4124c4:	subs	w0, w2, w0
  4124c8:	b.ne	4124d8 <stemlen_compare@@Base+0x20>  // b.any
  4124cc:	ldr	w2, [x1, #20]
  4124d0:	ldr	w0, [x3, #20]
  4124d4:	sub	w0, w0, w2
  4124d8:	ret
  4124dc:	nop
  4124e0:	mov	x12, #0x1150                	// #4432
  4124e4:	sub	sp, sp, x12
  4124e8:	stp	x29, x30, [sp]
  4124ec:	mov	x29, sp
  4124f0:	stp	x25, x26, [sp, #64]
  4124f4:	mov	x26, x0
  4124f8:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  4124fc:	stp	x19, x20, [sp, #16]
  412500:	ldr	w0, [x0, #2228]
  412504:	str	w0, [x29, #156]
  412508:	stp	x21, x22, [sp, #32]
  41250c:	ubfiz	x19, x0, #5, #32
  412510:	ldr	x0, [x26]
  412514:	stp	x23, x24, [sp, #48]
  412518:	stp	x27, x28, [sp, #80]
  41251c:	str	w2, [x29, #188]
  412520:	str	x0, [x29, #200]
  412524:	str	w3, [x29, #284]
  412528:	cbz	w1, 413564 <stemlen_compare@@Base+0x10ac>
  41252c:	mov	w1, #0x28                  	// #40
  412530:	bl	406bb0 <strchr@plt>
  412534:	str	x0, [x29, #200]
  412538:	bl	406680 <strlen@plt>
  41253c:	mov	x1, x0
  412540:	mov	x0, x19
  412544:	mov	x19, x1
  412548:	str	x1, [x29, #288]
  41254c:	bl	418a50 <xmalloc@@Base>
  412550:	str	x0, [x29, #168]
  412554:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  412558:	adrp	x3, 446000 <commands_started@@Base+0x1c8>
  41255c:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  412560:	str	xzr, [x29, #240]
  412564:	ldr	x1, [x1, #2216]
  412568:	str	xzr, [x29, #296]
  41256c:	ldr	w2, [x2, #2240]
  412570:	ldr	w0, [x3, #2224]
  412574:	add	x1, x19, x1
  412578:	add	x1, x1, #0x13
  41257c:	and	x1, x1, #0xfffffffffffffff0
  412580:	sub	sp, sp, x1
  412584:	mul	w0, w2, w0
  412588:	lsl	x0, x0, #5
  41258c:	bl	418a50 <xmalloc@@Base>
  412590:	str	x0, [x29, #136]
  412594:	mov	x0, sp
  412598:	str	x0, [x29, #232]
  41259c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  4125a0:	ldr	x27, [x0, #2208]
  4125a4:	cbz	x27, 413178 <stemlen_compare@@Base+0xcc0>
  4125a8:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  4125ac:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  4125b0:	add	x1, x1, #0x440
  4125b4:	add	x0, x0, #0x700
  4125b8:	mov	x28, x27
  4125bc:	str	x26, [x29, #176]
  4125c0:	str	x0, [x29, #192]
  4125c4:	str	x1, [x29, #208]
  4125c8:	str	wzr, [x29, #224]
  4125cc:	str	wzr, [x29, #280]
  4125d0:	ldr	x23, [x29, #200]
  4125d4:	b	4125ec <stemlen_compare@@Base+0x134>
  4125d8:	ldr	x0, [x29, #208]
  4125dc:	ldr	w0, [x0]
  4125e0:	tbnz	w0, #3, 412b24 <stemlen_compare@@Base+0x66c>
  4125e4:	ldr	x28, [x28]
  4125e8:	cbz	x28, 4127b8 <stemlen_compare@@Base+0x300>
  4125ec:	ldr	x0, [x28, #32]
  4125f0:	str	x0, [x29, #248]
  4125f4:	cbz	x0, 412600 <stemlen_compare@@Base+0x148>
  4125f8:	ldr	x0, [x28, #40]
  4125fc:	cbz	x0, 4125e4 <stemlen_compare@@Base+0x12c>
  412600:	ldrb	w0, [x28, #51]
  412604:	cbnz	w0, 4125d8 <stemlen_compare@@Base+0x120>
  412608:	ldrh	w19, [x28, #48]
  41260c:	cbz	w19, 4125e4 <stemlen_compare@@Base+0x12c>
  412610:	ldr	x0, [x29, #288]
  412614:	mov	x26, #0x0                   	// #0
  412618:	ldr	x21, [x28, #8]
  41261c:	add	x0, x0, #0x1
  412620:	str	x0, [x29, #256]
  412624:	ldr	x0, [x28, #24]
  412628:	str	x0, [x29, #264]
  41262c:	ldr	x0, [x29, #296]
  412630:	add	x0, x0, #0x1
  412634:	str	x0, [x29, #216]
  412638:	mov	x0, x26
  41263c:	mov	x26, x28
  412640:	mov	x28, x0
  412644:	nop
  412648:	ldr	w0, [x29, #284]
  41264c:	mov	w20, w28
  412650:	ldr	x24, [x21, x28, lsl #3]
  412654:	cbz	w0, 412668 <stemlen_compare@@Base+0x1b0>
  412658:	ldrb	w0, [x24, #1]
  41265c:	cbnz	w0, 412668 <stemlen_compare@@Base+0x1b0>
  412660:	ldrb	w0, [x26, #50]
  412664:	cbz	w0, 4127a0 <stemlen_compare@@Base+0x2e8>
  412668:	ldr	x0, [x26, #16]
  41266c:	ldr	w4, [x0, x28, lsl #2]
  412670:	ldr	x0, [x29, #288]
  412674:	cmp	x4, x0
  412678:	b.hi	4127a0 <stemlen_compare@@Base+0x2e8>  // b.pmore
  41267c:	ldr	x0, [x29, #264]
  412680:	ldr	x22, [x0, x28, lsl #3]
  412684:	ldr	x0, [x29, #256]
  412688:	sub	x2, x22, x24
  41268c:	sub	x2, x2, #0x1
  412690:	sub	x27, x0, x4
  412694:	add	x25, x23, x2
  412698:	ldr	x0, [x29, #296]
  41269c:	cbz	x0, 412aec <stemlen_compare@@Base+0x634>
  4126a0:	mov	x0, x24
  4126a4:	mov	w1, #0x2f                  	// #47
  4126a8:	str	x2, [x29, #272]
  4126ac:	bl	406bb0 <strchr@plt>
  4126b0:	ldr	x2, [x29, #272]
  4126b4:	cbnz	x0, 412aec <stemlen_compare@@Base+0x634>
  4126b8:	ldr	x1, [x29, #240]
  4126bc:	cmp	x1, x27
  4126c0:	b.hi	4127a0 <stemlen_compare@@Base+0x2e8>  // b.pmore
  4126c4:	add	x25, x25, x1
  4126c8:	sub	x27, x27, x1
  4126cc:	ldr	x1, [x29, #216]
  4126d0:	cmp	x1, x25
  4126d4:	b.cs	4126f0 <stemlen_compare@@Base+0x238>  // b.hs, b.nlast
  4126d8:	ldr	x0, [x29, #296]
  4126dc:	sub	x2, x25, x0
  4126e0:	mov	x0, x24
  4126e4:	sub	x2, x2, #0x1
  4126e8:	bl	406930 <strncmp@plt>
  4126ec:	cbnz	w0, 4127a0 <stemlen_compare@@Base+0x2e8>
  4126f0:	mov	w2, #0x1                   	// #1
  4126f4:	ldrb	w1, [x22]
  4126f8:	ldrb	w0, [x25, x27]
  4126fc:	cmp	w0, w1
  412700:	b.ne	4127a0 <stemlen_compare@@Base+0x2e8>  // b.any
  412704:	cbz	w0, 41274c <stemlen_compare@@Base+0x294>
  412708:	add	x1, x27, #0x1
  41270c:	add	x0, x22, #0x1
  412710:	add	x9, x25, x1
  412714:	cmp	x9, x0
  412718:	b.eq	41274c <stemlen_compare@@Base+0x294>  // b.none
  41271c:	ldrb	w0, [x25, x1]
  412720:	ldrb	w1, [x22, #1]
  412724:	cmp	w0, w1
  412728:	b.ne	4127a0 <stemlen_compare@@Base+0x2e8>  // b.any
  41272c:	cbz	w0, 41274c <stemlen_compare@@Base+0x294>
  412730:	add	x1, x27, #0x2
  412734:	add	x0, x22, #0x2
  412738:	add	x1, x25, x1
  41273c:	str	w2, [x29, #272]
  412740:	bl	406b40 <strcmp@plt>
  412744:	ldr	w2, [x29, #272]
  412748:	cbnz	w0, 4127a0 <stemlen_compare@@Base+0x2e8>
  41274c:	ldrb	w0, [x24, #1]
  412750:	cmp	w0, #0x0
  412754:	ldr	w0, [x29, #224]
  412758:	csinc	w0, w0, wzr, eq  // eq = none
  41275c:	str	w0, [x29, #224]
  412760:	ldr	x0, [x29, #248]
  412764:	cbz	x0, 412b0c <stemlen_compare@@Base+0x654>
  412768:	ldr	w3, [x29, #280]
  41276c:	cmp	w2, #0x0
  412770:	ldr	x4, [x29, #136]
  412774:	ubfiz	x1, x3, #5, #32
  412778:	ldr	x5, [x29, #240]
  41277c:	add	x0, x4, x1
  412780:	str	x26, [x4, x1]
  412784:	add	w1, w3, #0x1
  412788:	add	x5, x27, x5
  41278c:	str	w1, [x29, #280]
  412790:	csel	x27, x5, x27, ne  // ne = any
  412794:	str	x27, [x0, #8]
  412798:	stp	w20, w3, [x0, #16]
  41279c:	strb	w2, [x0, #24]
  4127a0:	add	x28, x28, #0x1
  4127a4:	cmp	w19, w28
  4127a8:	b.hi	412648 <stemlen_compare@@Base+0x190>  // b.pmore
  4127ac:	mov	x28, x26
  4127b0:	ldr	x28, [x28]
  4127b4:	cbnz	x28, 4125ec <stemlen_compare@@Base+0x134>
  4127b8:	ldr	w0, [x29, #280]
  4127bc:	mov	w19, #0x0                   	// #0
  4127c0:	ldr	x26, [x29, #176]
  4127c4:	cbz	w0, 41317c <stemlen_compare@@Base+0xcc4>
  4127c8:	cmp	w0, #0x1
  4127cc:	b.hi	413660 <stemlen_compare@@Base+0x11a8>  // b.pmore
  4127d0:	ldr	w0, [x29, #224]
  4127d4:	cbnz	w0, 4135f8 <stemlen_compare@@Base+0x1140>
  4127d8:	mov	x28, x26
  4127dc:	str	xzr, [x29, #128]
  4127e0:	str	xzr, [x29, #160]
  4127e4:	str	wzr, [x29, #176]
  4127e8:	str	wzr, [x29, #184]
  4127ec:	ldr	x0, [x29, #136]
  4127f0:	str	x0, [x29, #296]
  4127f4:	ldr	x0, [x29, #168]
  4127f8:	mov	x27, x28
  4127fc:	str	wzr, [x29, #256]
  412800:	mov	x22, x0
  412804:	b	412830 <stemlen_compare@@Base+0x378>
  412808:	cbnz	w0, 412fe8 <stemlen_compare@@Base+0xb30>
  41280c:	ldr	x1, [x29, #296]
  412810:	ldr	w0, [x29, #256]
  412814:	add	x1, x1, #0x20
  412818:	str	x1, [x29, #296]
  41281c:	add	w0, w0, #0x1
  412820:	ldr	w1, [x29, #280]
  412824:	str	w0, [x29, #256]
  412828:	cmp	w1, w0
  41282c:	b.eq	41316c <stemlen_compare@@Base+0xcb4>  // b.none
  412830:	ldr	x0, [x29, #296]
  412834:	ldr	x0, [x0]
  412838:	str	x0, [x29, #264]
  41283c:	cbz	x0, 41280c <stemlen_compare@@Base+0x354>
  412840:	ldr	w1, [x29, #184]
  412844:	cbz	w1, 412850 <stemlen_compare@@Base+0x398>
  412848:	ldrb	w0, [x0, #50]
  41284c:	cbnz	w0, 41280c <stemlen_compare@@Base+0x354>
  412850:	ldp	x0, x4, [x29, #288]
  412854:	ldr	x3, [x29, #264]
  412858:	ldr	w1, [x4, #16]
  41285c:	add	x19, x0, #0x1
  412860:	ldr	x2, [x3, #8]
  412864:	ldr	x0, [x3, #24]
  412868:	ldr	x3, [x3, #16]
  41286c:	ldr	x0, [x0, x1, lsl #3]
  412870:	ldr	x2, [x2, x1, lsl #3]
  412874:	ldr	w1, [x3, x1, lsl #2]
  412878:	ldrb	w4, [x4, #24]
  41287c:	sub	x0, x0, x2
  412880:	sub	x19, x19, x1
  412884:	sub	x0, x0, #0x1
  412888:	ldr	x1, [x29, #200]
  41288c:	str	w4, [x29, #208]
  412890:	add	x0, x1, x0
  412894:	stp	x19, x0, [x29, #216]
  412898:	cbz	w4, 4128b8 <stemlen_compare@@Base+0x400>
  41289c:	ldr	x1, [x29, #240]
  4128a0:	add	x0, x0, x1
  4128a4:	str	x0, [x29, #224]
  4128a8:	sub	x0, x19, x1
  4128ac:	str	x0, [x29, #216]
  4128b0:	ldr	x0, [x29, #160]
  4128b4:	cbz	x0, 413534 <stemlen_compare@@Base+0x107c>
  4128b8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4128bc:	cmp	x19, #0x1, lsl #12
  4128c0:	ldr	w0, [x0, #1088]
  4128c4:	and	w0, w0, #0x8
  4128c8:	b.hi	412808 <stemlen_compare@@Base+0x350>  // b.pmore
  4128cc:	cbnz	w0, 4134fc <stemlen_compare@@Base+0x1044>
  4128d0:	ldr	w0, [x29, #208]
  4128d4:	cbnz	w0, 4131b8 <stemlen_compare@@Base+0xd00>
  4128d8:	ldp	x20, x1, [x29, #216]
  4128dc:	add	x0, x29, #0x148
  4128e0:	mov	x19, x0
  4128e4:	str	x0, [x29, #112]
  4128e8:	mov	x2, x20
  4128ec:	bl	406640 <memcpy@plt>
  4128f0:	ldr	x1, [x29, #264]
  4128f4:	strb	wzr, [x19, x20]
  4128f8:	ldr	x24, [x1, #32]
  4128fc:	cbz	x24, 413208 <stemlen_compare@@Base+0xd50>
  412900:	ldr	x0, [x29, #112]
  412904:	str	x0, [x27, #40]
  412908:	mov	w0, #0x1                   	// #1
  41290c:	strb	w0, [x1, #51]
  412910:	ldr	x20, [x24, #8]
  412914:	cbz	x20, 4135e0 <stemlen_compare@@Base+0x1128>
  412918:	ldr	w0, [x29, #208]
  41291c:	mov	w21, #0x0                   	// #0
  412920:	ldr	x25, [x29, #168]
  412924:	cmp	w0, #0x0
  412928:	ldp	x1, x0, [x29, #232]
  41292c:	mov	w19, #0x0                   	// #0
  412930:	str	wzr, [x29, #124]
  412934:	add	x0, x1, x0
  412938:	csel	x0, x1, x0, eq  // eq = none
  41293c:	str	x0, [x29, #104]
  412940:	cbz	x20, 4129d0 <stemlen_compare@@Base+0x518>
  412944:	ldrb	w0, [x24, #33]
  412948:	tbz	w0, #3, 4129f0 <stemlen_compare@@Base+0x538>
  41294c:	ldrb	w0, [x20]
  412950:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  412954:	add	x2, x2, #0x448
  412958:	ldrh	w1, [x2, w0, sxtw #1]
  41295c:	tst	w1, #0x6
  412960:	b.eq	412978 <stemlen_compare@@Base+0x4c0>  // b.none
  412964:	nop
  412968:	ldrb	w0, [x20, #1]!
  41296c:	ldrh	w1, [x2, w0, sxtw #1]
  412970:	tst	w1, #0x6
  412974:	b.ne	412968 <stemlen_compare@@Base+0x4b0>  // b.any
  412978:	add	x3, x20, #0x1
  41297c:	cbz	w0, 412fac <stemlen_compare@@Base+0xaf4>
  412980:	mov	x1, x3
  412984:	cmp	w0, #0x24
  412988:	b.eq	412db4 <stemlen_compare@@Base+0x8fc>  // b.none
  41298c:	b.hi	412b50 <stemlen_compare@@Base+0x698>  // b.pmore
  412990:	cmp	w0, #0x9
  412994:	b.eq	4129a0 <stemlen_compare@@Base+0x4e8>  // b.none
  412998:	and	w0, w0, #0xffffffdf
  41299c:	cbnz	w0, 412e18 <stemlen_compare@@Base+0x960>
  4129a0:	sub	x1, x1, #0x1
  4129a4:	eor	w0, w21, #0x1
  4129a8:	sub	x23, x1, x20
  4129ac:	cmp	x23, #0x1
  4129b0:	csel	w0, w0, wzr, eq  // eq = none
  4129b4:	cbz	w0, 412b6c <stemlen_compare@@Base+0x6b4>
  4129b8:	ldrb	w0, [x20]
  4129bc:	cmp	w0, #0x7c
  4129c0:	b.ne	412b6c <stemlen_compare@@Base+0x6b4>  // b.any
  4129c4:	mov	x20, x3
  4129c8:	mov	w21, #0x1                   	// #1
  4129cc:	cbnz	x20, 412944 <stemlen_compare@@Base+0x48c>
  4129d0:	ldr	x24, [x24]
  4129d4:	cbz	x24, 41387c <stemlen_compare@@Base+0x13c4>
  4129d8:	ldr	x20, [x24, #8]
  4129dc:	cbnz	x20, 412944 <stemlen_compare@@Base+0x48c>
  4129e0:	ldr	x0, [x24, #16]
  4129e4:	ldr	x20, [x0]
  4129e8:	ldrb	w0, [x24, #33]
  4129ec:	tbnz	w0, #3, 41294c <stemlen_compare@@Base+0x494>
  4129f0:	mov	x0, x20
  4129f4:	mov	w1, #0x25                  	// #37
  4129f8:	bl	406bb0 <strchr@plt>
  4129fc:	str	x0, [x29, #320]
  412a00:	mov	x22, x0
  412a04:	cbz	x0, 413684 <stemlen_compare@@Base+0x11cc>
  412a08:	ldr	w0, [x29, #208]
  412a0c:	cbnz	w0, 4134ec <stemlen_compare@@Base+0x1034>
  412a10:	sub	x23, x22, x20
  412a14:	mov	x1, x20
  412a18:	ldr	x20, [x29, #104]
  412a1c:	mov	x2, x23
  412a20:	mov	x0, x20
  412a24:	bl	406640 <memcpy@plt>
  412a28:	add	x23, x20, x23
  412a2c:	ldp	x20, x1, [x29, #216]
  412a30:	mov	x0, x23
  412a34:	mov	x2, x20
  412a38:	bl	406640 <memcpy@plt>
  412a3c:	add	x0, x23, x20
  412a40:	add	x1, x22, #0x1
  412a44:	bl	406c30 <strcpy@plt>
  412a48:	ldr	x5, [x29, #232]
  412a4c:	add	x0, x29, #0x140
  412a50:	mov	w4, #0x20                  	// #32
  412a54:	mov	x3, #0x0                   	// #0
  412a58:	mov	w2, #0x1                   	// #1
  412a5c:	mov	x1, #0x28                  	// #40
  412a60:	str	x5, [x29, #320]
  412a64:	bl	41c510 <parse_file_seq@@Base>
  412a68:	str	x0, [x29, #272]
  412a6c:	str	x0, [x29, #312]
  412a70:	cbz	x0, 413720 <stemlen_compare@@Base+0x1268>
  412a74:	mov	x20, x0
  412a78:	ldrb	w1, [x24, #33]
  412a7c:	add	w19, w19, #0x1
  412a80:	ldrb	w0, [x20, #33]
  412a84:	ubfx	x1, x1, #1, #1
  412a88:	bfi	w0, w1, #1, #1
  412a8c:	strb	w0, [x20, #33]
  412a90:	ldrb	w1, [x24, #33]
  412a94:	ubfx	x1, x1, #4, #1
  412a98:	bfi	w0, w1, #4, #1
  412a9c:	strb	w0, [x20, #33]
  412aa0:	ldr	x20, [x20]
  412aa4:	cbnz	x20, 412a78 <stemlen_compare@@Base+0x5c0>
  412aa8:	ldr	w0, [x29, #156]
  412aac:	cmp	w0, w19
  412ab0:	b.cs	412ca8 <stemlen_compare@@Base+0x7f0>  // b.hs, b.nlast
  412ab4:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  412ab8:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  412abc:	ldr	w1, [x0, #2228]
  412ac0:	ldr	x0, [x29, #168]
  412ac4:	cmp	w1, w19
  412ac8:	csel	w1, w1, w19, cs  // cs = hs, nlast
  412acc:	str	w1, [x2, #2228]
  412ad0:	sub	x25, x25, x0
  412ad4:	str	w1, [x29, #156]
  412ad8:	ubfiz	x1, x1, #5, #32
  412adc:	bl	418aa0 <xrealloc@@Base>
  412ae0:	add	x25, x0, x25
  412ae4:	str	x0, [x29, #168]
  412ae8:	b	412ca8 <stemlen_compare@@Base+0x7f0>
  412aec:	cmp	x23, x25
  412af0:	b.cs	412b04 <stemlen_compare@@Base+0x64c>  // b.hs, b.nlast
  412af4:	mov	x1, x23
  412af8:	mov	x0, x24
  412afc:	bl	406930 <strncmp@plt>
  412b00:	cbnz	w0, 4127a0 <stemlen_compare@@Base+0x2e8>
  412b04:	mov	w2, #0x0                   	// #0
  412b08:	b	4126f4 <stemlen_compare@@Base+0x23c>
  412b0c:	ldr	x0, [x26, #40]
  412b10:	cbnz	x0, 412768 <stemlen_compare@@Base+0x2b0>
  412b14:	add	x28, x28, #0x1
  412b18:	cmp	w19, w28
  412b1c:	b.hi	412648 <stemlen_compare@@Base+0x190>  // b.pmore
  412b20:	b	4127ac <stemlen_compare@@Base+0x2f4>
  412b24:	ldr	w0, [x29, #188]
  412b28:	bl	418a08 <print_spaces@@Base>
  412b2c:	ldr	x1, [x29, #192]
  412b30:	mov	w2, #0x5                   	// #5
  412b34:	mov	x0, #0x0                   	// #0
  412b38:	bl	406cd0 <dcgettext@plt>
  412b3c:	bl	406d60 <printf@plt>
  412b40:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  412b44:	ldr	x0, [x0, #384]
  412b48:	bl	406c20 <fflush@plt>
  412b4c:	b	4125e4 <stemlen_compare@@Base+0x12c>
  412b50:	cmp	w0, #0x7c
  412b54:	b.ne	412e18 <stemlen_compare@@Base+0x960>  // b.any
  412b58:	sub	x23, x1, x20
  412b5c:	eor	w0, w21, #0x1
  412b60:	cmp	x23, #0x1
  412b64:	csel	w0, w0, wzr, eq  // eq = none
  412b68:	cbnz	w0, 4129b8 <stemlen_compare@@Base+0x500>
  412b6c:	add	x22, x20, x23
  412b70:	mov	x0, x20
  412b74:	mov	x1, x22
  412b78:	mov	w2, #0x25                  	// #37
  412b7c:	bl	418ca0 <lindex@@Base>
  412b80:	str	x0, [x29, #320]
  412b84:	mov	x26, x0
  412b88:	cbz	x0, 413038 <stemlen_compare@@Base+0xb80>
  412b8c:	sub	x28, x0, x20
  412b90:	mov	x1, x20
  412b94:	ldr	x20, [x29, #232]
  412b98:	mov	x2, x28
  412b9c:	mov	x0, x20
  412ba0:	bl	406640 <memcpy@plt>
  412ba4:	ldr	w1, [x29, #208]
  412ba8:	mov	x4, x20
  412bac:	add	x0, x20, x28
  412bb0:	cbz	w1, 412fb8 <stemlen_compare@@Base+0xb00>
  412bb4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  412bb8:	add	x1, x1, #0x770
  412bbc:	add	x3, x0, #0x5
  412bc0:	mov	w20, #0x1                   	// #1
  412bc4:	ldr	w2, [x1]
  412bc8:	ldrb	w1, [x1, #4]
  412bcc:	str	w2, [x4, x28]
  412bd0:	strb	w1, [x0, #4]
  412bd4:	sub	x23, x23, #0x1
  412bd8:	add	x1, x26, #0x1
  412bdc:	sub	x23, x23, x28
  412be0:	mov	x0, x3
  412be4:	mov	x2, x23
  412be8:	bl	406640 <memcpy@plt>
  412bec:	strb	wzr, [x0, x23]
  412bf0:	ldr	w0, [x29, #176]
  412bf4:	cbz	w0, 412fd0 <stemlen_compare@@Base+0xb18>
  412bf8:	ldr	w0, [x29, #124]
  412bfc:	cbz	w0, 4130fc <stemlen_compare@@Base+0xc44>
  412c00:	ldr	x0, [x29, #232]
  412c04:	mov	x1, x27
  412c08:	mov	w23, #0x100                 	// #256
  412c0c:	bl	40c380 <variable_expand_for_file@@Base>
  412c10:	str	x0, [x29, #320]
  412c14:	ldr	x1, [x29, #160]
  412c18:	cmp	w20, #0x0
  412c1c:	add	x20, x29, #0x138
  412c20:	csel	x26, x1, xzr, ne  // ne = any
  412c24:	nop
  412c28:	cmp	w21, #0x0
  412c2c:	csel	w2, w21, w23, ne  // ne = any
  412c30:	mov	x3, x26
  412c34:	add	x0, x29, #0x140
  412c38:	mov	w4, #0x0                   	// #0
  412c3c:	mov	x1, #0x28                  	// #40
  412c40:	bl	41c510 <parse_file_seq@@Base>
  412c44:	str	x0, [x20]
  412c48:	cbnz	x0, 412c54 <stemlen_compare@@Base+0x79c>
  412c4c:	b	412c74 <stemlen_compare@@Base+0x7bc>
  412c50:	mov	x0, x1
  412c54:	add	w19, w19, #0x1
  412c58:	cbz	w21, 412c68 <stemlen_compare@@Base+0x7b0>
  412c5c:	ldrb	w1, [x0, #33]
  412c60:	orr	w1, w1, #0x2
  412c64:	strb	w1, [x0, #33]
  412c68:	ldr	x1, [x0]
  412c6c:	cbnz	x1, 412c50 <stemlen_compare@@Base+0x798>
  412c70:	mov	x20, x0
  412c74:	ldr	x1, [x29, #320]
  412c78:	ldrb	w0, [x1]
  412c7c:	cmp	w0, #0x7c
  412c80:	b.eq	412ee4 <stemlen_compare@@Base+0xa2c>  // b.none
  412c84:	cbnz	w0, 412c28 <stemlen_compare@@Base+0x770>
  412c88:	mov	w0, #0x1                   	// #1
  412c8c:	mov	x20, x22
  412c90:	str	w0, [x29, #176]
  412c94:	ldr	x0, [x29, #312]
  412c98:	str	x0, [x29, #272]
  412c9c:	ldr	w0, [x29, #156]
  412ca0:	cmp	w0, w19
  412ca4:	b.cc	412ab4 <stemlen_compare@@Base+0x5fc>  // b.lo, b.ul, b.last
  412ca8:	ldr	x23, [x29, #272]
  412cac:	cbz	x23, 412da8 <stemlen_compare@@Base+0x8f0>
  412cb0:	adrp	x26, 428000 <_IO_stdin_used@@Base+0x1c20>
  412cb4:	add	x1, x26, #0x800
  412cb8:	ldr	w26, [x29, #188]
  412cbc:	mov	x22, x25
  412cc0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  412cc4:	add	x0, x0, #0x7e0
  412cc8:	str	x20, [x29, #144]
  412ccc:	str	w19, [x29, #152]
  412cd0:	str	x0, [x29, #192]
  412cd4:	str	x1, [x29, #248]
  412cd8:	ldr	x19, [x24, #8]
  412cdc:	mov	x25, x22
  412ce0:	ldr	x28, [x23, #8]
  412ce4:	cbz	x19, 412ea0 <stemlen_compare@@Base+0x9e8>
  412ce8:	mov	x0, x28
  412cec:	bl	40b2c0 <file_impossible_p@@Base>
  412cf0:	cbnz	w0, 412eb4 <stemlen_compare@@Base+0x9fc>
  412cf4:	stp	xzr, xzr, [x22]
  412cf8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  412cfc:	add	x0, x0, #0x440
  412d00:	stp	xzr, xzr, [x22, #16]
  412d04:	ldrb	w1, [x23, #33]
  412d08:	ldr	w5, [x0]
  412d0c:	ldrb	w2, [x22, #24]
  412d10:	ubfx	x0, x1, #4, #1
  412d14:	ubfx	x1, x1, #1, #1
  412d18:	ubfiz	w0, w0, #1, #7
  412d1c:	orr	w0, w0, w1
  412d20:	mov	w1, w2
  412d24:	bfxil	w1, w0, #0, #2
  412d28:	strb	w1, [x22, #24]
  412d2c:	tbnz	w5, #3, 412e40 <stemlen_compare@@Base+0x988>
  412d30:	ldr	x20, [x27, #24]
  412d34:	ldr	x19, [x23, #8]
  412d38:	cbz	x20, 412e80 <stemlen_compare@@Base+0x9c8>
  412d3c:	add	x28, x19, #0x1
  412d40:	b	412d4c <stemlen_compare@@Base+0x894>
  412d44:	ldr	x20, [x20]
  412d48:	cbz	x20, 412e80 <stemlen_compare@@Base+0x9c8>
  412d4c:	ldr	x0, [x20, #8]
  412d50:	mov	x1, x0
  412d54:	cbz	x0, 412e28 <stemlen_compare@@Base+0x970>
  412d58:	cmp	x1, x19
  412d5c:	b.eq	412d88 <stemlen_compare@@Base+0x8d0>  // b.none
  412d60:	ldrb	w2, [x19]
  412d64:	ldrb	w1, [x1]
  412d68:	cmp	w2, w1
  412d6c:	b.ne	412d44 <stemlen_compare@@Base+0x88c>  // b.any
  412d70:	cbz	w2, 412d88 <stemlen_compare@@Base+0x8d0>
  412d74:	cbz	x0, 412e34 <stemlen_compare@@Base+0x97c>
  412d78:	add	x0, x0, #0x1
  412d7c:	mov	x1, x28
  412d80:	bl	406b40 <strcmp@plt>
  412d84:	cbnz	w0, 412d44 <stemlen_compare@@Base+0x88c>
  412d88:	add	x0, x22, #0x20
  412d8c:	str	x19, [x22]
  412d90:	mov	x25, x0
  412d94:	ldr	x23, [x23]
  412d98:	mov	x22, x0
  412d9c:	cbnz	x23, 412cd8 <stemlen_compare@@Base+0x820>
  412da0:	ldr	w19, [x29, #152]
  412da4:	ldr	x20, [x29, #144]
  412da8:	ldr	x0, [x29, #272]
  412dac:	bl	418fa0 <free_ns_chain@@Base>
  412db0:	b	412940 <stemlen_compare@@Base+0x488>
  412db4:	mov	x2, x1
  412db8:	ldrb	w0, [x1, #1]
  412dbc:	ldrb	w4, [x2], #1
  412dc0:	cmp	w4, #0x24
  412dc4:	b.eq	412ddc <stemlen_compare@@Base+0x924>  // b.none
  412dc8:	cmp	w4, #0x28
  412dcc:	b.eq	412de4 <stemlen_compare@@Base+0x92c>  // b.none
  412dd0:	cmp	w4, #0x7b
  412dd4:	mov	w6, #0x7d                  	// #125
  412dd8:	b.eq	412de8 <stemlen_compare@@Base+0x930>  // b.none
  412ddc:	add	x1, x2, #0x1
  412de0:	b	412984 <stemlen_compare@@Base+0x4cc>
  412de4:	mov	w6, #0x29                  	// #41
  412de8:	add	x1, x1, #0x2
  412dec:	mov	w5, #0x0                   	// #0
  412df0:	cbnz	w0, 412e08 <stemlen_compare@@Base+0x950>
  412df4:	b	412998 <stemlen_compare@@Base+0x4e0>
  412df8:	cmp	w0, w6
  412dfc:	b.eq	412f90 <stemlen_compare@@Base+0xad8>  // b.none
  412e00:	ldrb	w0, [x2, #1]!
  412e04:	cbz	w0, 412ddc <stemlen_compare@@Base+0x924>
  412e08:	cmp	w0, w4
  412e0c:	b.ne	412df8 <stemlen_compare@@Base+0x940>  // b.any
  412e10:	add	w5, w5, #0x1
  412e14:	b	412e00 <stemlen_compare@@Base+0x948>
  412e18:	mov	x2, x1
  412e1c:	ldrb	w0, [x1]
  412e20:	add	x1, x2, #0x1
  412e24:	b	412984 <stemlen_compare@@Base+0x4cc>
  412e28:	ldr	x1, [x20, #16]
  412e2c:	ldr	x1, [x1]
  412e30:	b	412d58 <stemlen_compare@@Base+0x8a0>
  412e34:	ldr	x0, [x20, #16]
  412e38:	ldr	x0, [x0]
  412e3c:	b	412d78 <stemlen_compare@@Base+0x8c0>
  412e40:	mov	w0, w26
  412e44:	bl	418a08 <print_spaces@@Base>
  412e48:	cmp	x28, x19
  412e4c:	mov	w2, #0x5                   	// #5
  412e50:	b.eq	412f10 <stemlen_compare@@Base+0xa58>  // b.none
  412e54:	ldr	x1, [x29, #248]
  412e58:	mov	x0, #0x0                   	// #0
  412e5c:	bl	406cd0 <dcgettext@plt>
  412e60:	ldr	x1, [x23, #8]
  412e64:	bl	406d60 <printf@plt>
  412e68:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  412e6c:	ldr	x0, [x0, #384]
  412e70:	bl	406c20 <fflush@plt>
  412e74:	ldr	x20, [x27, #24]
  412e78:	ldr	x19, [x23, #8]
  412e7c:	cbnz	x20, 412d3c <stemlen_compare@@Base+0x884>
  412e80:	mov	x0, x19
  412e84:	bl	40c7a8 <lookup_file@@Base>
  412e88:	cbz	x0, 412f20 <stemlen_compare@@Base+0xa68>
  412e8c:	add	x0, x22, #0x20
  412e90:	ldr	x1, [x23, #8]
  412e94:	mov	x25, x0
  412e98:	str	x1, [x22]
  412e9c:	b	412d94 <stemlen_compare@@Base+0x8dc>
  412ea0:	ldr	x0, [x24, #16]
  412ea4:	ldr	x19, [x0]
  412ea8:	mov	x0, x28
  412eac:	bl	40b2c0 <file_impossible_p@@Base>
  412eb0:	cbz	w0, 412cf4 <stemlen_compare@@Base+0x83c>
  412eb4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  412eb8:	mov	x22, x25
  412ebc:	ldr	w0, [x0, #1088]
  412ec0:	tbnz	w0, #3, 413130 <stemlen_compare@@Base+0xc78>
  412ec4:	ldr	x0, [x29, #296]
  412ec8:	str	xzr, [x0]
  412ecc:	ldr	x0, [x29, #272]
  412ed0:	bl	418fa0 <free_ns_chain@@Base>
  412ed4:	ldr	x0, [x29, #264]
  412ed8:	str	xzr, [x27, #40]
  412edc:	strb	wzr, [x0, #51]
  412ee0:	b	41280c <stemlen_compare@@Base+0x354>
  412ee4:	add	x0, x1, #0x1
  412ee8:	str	x0, [x29, #320]
  412eec:	mov	w21, #0x1                   	// #1
  412ef0:	mov	w2, w21
  412ef4:	ldrb	w0, [x1, #1]
  412ef8:	cbnz	w0, 412c30 <stemlen_compare@@Base+0x778>
  412efc:	ldr	x0, [x29, #312]
  412f00:	mov	x20, x22
  412f04:	str	w21, [x29, #176]
  412f08:	str	x0, [x29, #272]
  412f0c:	b	412c9c <stemlen_compare@@Base+0x7e4>
  412f10:	ldr	x1, [x29, #192]
  412f14:	mov	x0, #0x0                   	// #0
  412f18:	bl	406cd0 <dcgettext@plt>
  412f1c:	b	412e60 <stemlen_compare@@Base+0x9a8>
  412f20:	ldr	x0, [x23, #8]
  412f24:	bl	40b0b8 <file_exists_p@@Base>
  412f28:	cbnz	w0, 412e8c <stemlen_compare@@Base+0x9d4>
  412f2c:	ldr	x0, [x23, #8]
  412f30:	mov	x3, #0x0                   	// #0
  412f34:	mov	x2, #0x0                   	// #0
  412f38:	mov	x1, #0x0                   	// #0
  412f3c:	bl	425120 <vpath_search@@Base>
  412f40:	mov	x19, x0
  412f44:	cbz	x0, 413058 <stemlen_compare@@Base+0xba0>
  412f48:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  412f4c:	add	x0, x0, #0x440
  412f50:	ldr	w0, [x0]
  412f54:	tbz	w0, #3, 412e8c <stemlen_compare@@Base+0x9d4>
  412f58:	mov	w0, w26
  412f5c:	bl	418a08 <print_spaces@@Base>
  412f60:	mov	w2, #0x5                   	// #5
  412f64:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  412f68:	mov	x0, #0x0                   	// #0
  412f6c:	add	x1, x1, #0x828
  412f70:	bl	406cd0 <dcgettext@plt>
  412f74:	ldr	x1, [x23, #8]
  412f78:	mov	x2, x19
  412f7c:	bl	406d60 <printf@plt>
  412f80:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  412f84:	ldr	x0, [x0, #384]
  412f88:	bl	406c20 <fflush@plt>
  412f8c:	b	412e8c <stemlen_compare@@Base+0x9d4>
  412f90:	sub	w5, w5, #0x1
  412f94:	cmn	w5, #0x1
  412f98:	b.ne	412e00 <stemlen_compare@@Base+0x948>  // b.any
  412f9c:	ldrb	w0, [x2, #1]
  412fa0:	add	x2, x2, #0x1
  412fa4:	add	x1, x2, #0x1
  412fa8:	b	412984 <stemlen_compare@@Base+0x4cc>
  412fac:	mov	x3, #0x0                   	// #0
  412fb0:	mov	x20, x3
  412fb4:	b	4129cc <stemlen_compare@@Base+0x514>
  412fb8:	ldr	x1, [x29, #232]
  412fbc:	add	x3, x0, #0x2
  412fc0:	mov	w20, #0x0                   	// #0
  412fc4:	mov	w0, #0x2a24                	// #10788
  412fc8:	strh	w0, [x1, x28]
  412fcc:	b	412bd4 <stemlen_compare@@Base+0x71c>
  412fd0:	mov	w1, #0x0                   	// #0
  412fd4:	mov	x0, x27
  412fd8:	bl	424280 <initialize_file_variables@@Base>
  412fdc:	mov	x0, x27
  412fe0:	bl	409968 <set_file_variables@@Base>
  412fe4:	b	412c00 <stemlen_compare@@Base+0x748>
  412fe8:	ldr	w0, [x29, #188]
  412fec:	bl	418a08 <print_spaces@@Base>
  412ff0:	mov	w2, #0x5                   	// #5
  412ff4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  412ff8:	mov	x0, #0x0                   	// #0
  412ffc:	add	x1, x1, #0x728
  413000:	bl	406cd0 <dcgettext@plt>
  413004:	ldr	w2, [x29, #208]
  413008:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41300c:	ldr	x4, [x29, #160]
  413010:	cmp	w2, #0x0
  413014:	ldr	w2, [x29, #216]
  413018:	add	x1, x1, #0x350
  41301c:	ldr	x3, [x29, #224]
  413020:	csel	x1, x1, x4, eq  // eq = none
  413024:	bl	406d60 <printf@plt>
  413028:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41302c:	ldr	x0, [x0, #384]
  413030:	bl	406c20 <fflush@plt>
  413034:	b	41280c <stemlen_compare@@Base+0x354>
  413038:	ldr	x26, [x29, #232]
  41303c:	mov	x1, x20
  413040:	mov	x2, x23
  413044:	mov	w20, #0x0                   	// #0
  413048:	mov	x0, x26
  41304c:	bl	406640 <memcpy@plt>
  413050:	strb	wzr, [x26, x23]
  413054:	b	412bf0 <stemlen_compare@@Base+0x738>
  413058:	ldr	w0, [x29, #184]
  41305c:	cbz	w0, 413894 <stemlen_compare@@Base+0x13dc>
  413060:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  413064:	add	x0, x0, #0x440
  413068:	ldr	w0, [x0]
  41306c:	tbnz	w0, #3, 4136c0 <stemlen_compare@@Base+0x1208>
  413070:	ldr	x0, [x29, #128]
  413074:	cbz	x0, 4136f8 <stemlen_compare@@Base+0x1240>
  413078:	ldr	x5, [x29, #128]
  41307c:	add	w2, w26, #0x1
  413080:	ldr	w1, [x29, #284]
  413084:	mov	x0, x5
  413088:	stp	xzr, xzr, [x5]
  41308c:	add	w3, w1, #0x1
  413090:	mov	w1, #0x0                   	// #0
  413094:	stp	xzr, xzr, [x5, #16]
  413098:	stp	xzr, xzr, [x5, #32]
  41309c:	stp	xzr, xzr, [x5, #48]
  4130a0:	stp	xzr, xzr, [x5, #64]
  4130a4:	stp	xzr, xzr, [x5, #80]
  4130a8:	stp	xzr, xzr, [x5, #96]
  4130ac:	stp	xzr, xzr, [x5, #112]
  4130b0:	stp	xzr, xzr, [x5, #128]
  4130b4:	ldr	x4, [x23, #8]
  4130b8:	str	x4, [x5]
  4130bc:	bl	4124e0 <stemlen_compare@@Base+0x28>
  4130c0:	cbnz	w0, 413694 <stemlen_compare@@Base+0x11dc>
  4130c4:	ldr	x0, [x29, #128]
  4130c8:	mov	x22, x25
  4130cc:	ldr	x0, [x0, #80]
  4130d0:	cbz	x0, 4130d8 <stemlen_compare@@Base+0xc20>
  4130d4:	bl	423090 <free_variable_set@@Base>
  4130d8:	ldr	x0, [x29, #128]
  4130dc:	ldr	x0, [x0, #88]
  4130e0:	cbz	x0, 4130e8 <stemlen_compare@@Base+0xc30>
  4130e4:	bl	423090 <free_variable_set@@Base>
  4130e8:	ldr	x0, [x23, #8]
  4130ec:	bl	40b190 <file_impossible@@Base>
  4130f0:	ldr	x0, [x29, #272]
  4130f4:	bl	418fa0 <free_ns_chain@@Base>
  4130f8:	b	412ed4 <stemlen_compare@@Base+0xa1c>
  4130fc:	ldr	x1, [x27, #80]
  413100:	mov	x6, #0x0                   	// #0
  413104:	ldr	x2, [x27, #40]
  413108:	mov	w4, #0x0                   	// #0
  41310c:	ldr	x5, [x1, #8]
  413110:	mov	w3, #0x6                   	// #6
  413114:	ldr	w0, [x29, #176]
  413118:	mov	x1, #0x1                   	// #1
  41311c:	str	w0, [x29, #124]
  413120:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  413124:	add	x0, x0, #0x5e0
  413128:	bl	422df0 <define_variable_in_set@@Base>
  41312c:	b	412c00 <stemlen_compare@@Base+0x748>
  413130:	ldr	w0, [x29, #188]
  413134:	bl	418a08 <print_spaces@@Base>
  413138:	cmp	x28, x19
  41313c:	b.eq	413708 <stemlen_compare@@Base+0x1250>  // b.none
  413140:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  413144:	mov	w2, #0x5                   	// #5
  413148:	add	x1, x1, #0x7a8
  41314c:	mov	x0, #0x0                   	// #0
  413150:	bl	406cd0 <dcgettext@plt>
  413154:	ldr	x1, [x23, #8]
  413158:	bl	406d60 <printf@plt>
  41315c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  413160:	ldr	x0, [x0, #384]
  413164:	bl	406c20 <fflush@plt>
  413168:	b	412ec4 <stemlen_compare@@Base+0xa0c>
  41316c:	mov	x28, x27
  413170:	ldr	w0, [x29, #184]
  413174:	cbz	w0, 4135ec <stemlen_compare@@Base+0x1134>
  413178:	mov	w19, #0x0                   	// #0
  41317c:	ldr	x0, [x29, #136]
  413180:	bl	406b90 <free@plt>
  413184:	ldr	x0, [x29, #168]
  413188:	bl	406b90 <free@plt>
  41318c:	mov	sp, x29
  413190:	mov	w0, w19
  413194:	mov	x12, #0x1150                	// #4432
  413198:	ldp	x29, x30, [sp]
  41319c:	ldp	x19, x20, [sp, #16]
  4131a0:	ldp	x21, x22, [sp, #32]
  4131a4:	ldp	x23, x24, [sp, #48]
  4131a8:	ldp	x25, x26, [sp, #64]
  4131ac:	ldp	x27, x28, [sp, #80]
  4131b0:	add	sp, sp, x12
  4131b4:	ret
  4131b8:	ldr	x1, [x29, #200]
  4131bc:	add	x0, x29, #0x148
  4131c0:	ldr	x20, [x29, #240]
  4131c4:	mov	x19, x0
  4131c8:	str	x0, [x29, #112]
  4131cc:	mov	x2, x20
  4131d0:	bl	406640 <memcpy@plt>
  4131d4:	ldp	x21, x1, [x29, #216]
  4131d8:	add	x0, x19, x20
  4131dc:	mov	x2, x21
  4131e0:	bl	406640 <memcpy@plt>
  4131e4:	mov	x0, #0x1150                	// #4432
  4131e8:	add	x0, x29, x0
  4131ec:	add	x0, x0, x20
  4131f0:	add	x0, x0, x21
  4131f4:	sub	x0, x0, #0x2, lsl #12
  4131f8:	ldr	x1, [x29, #264]
  4131fc:	strb	wzr, [x0, #4088]
  413200:	ldr	x24, [x1, #32]
  413204:	cbnz	x24, 412900 <stemlen_compare@@Base+0x448>
  413208:	mov	x28, x27
  41320c:	ldr	w1, [x29, #256]
  413210:	ldr	w0, [x29, #280]
  413214:	cmp	w0, w1
  413218:	b.ls	413170 <stemlen_compare@@Base+0xcb8>  // b.plast
  41321c:	ldr	w0, [x29, #284]
  413220:	mov	x26, x28
  413224:	cbz	w0, 413240 <stemlen_compare@@Base+0xd88>
  413228:	ldr	x0, [x29, #296]
  41322c:	ldr	w1, [x0, #16]
  413230:	ldr	x0, [x29, #264]
  413234:	ldr	x0, [x0, #8]
  413238:	ldr	x0, [x0, x1, lsl #3]
  41323c:	str	x0, [x28]
  413240:	ldr	x1, [x29, #168]
  413244:	mov	x0, x22
  413248:	sub	x19, x22, #0x20
  41324c:	cmp	x1, x22
  413250:	b.cs	413358 <stemlen_compare@@Base+0xea0>  // b.hs, b.nlast
  413254:	ldr	x1, [x29, #168]
  413258:	sub	x23, x22, #0x1
  41325c:	mov	w21, #0xb6ff                	// #46847
  413260:	ldr	w25, [x29, #284]
  413264:	sub	x23, x23, x1
  413268:	mov	w22, #0x4900                	// #18688
  41326c:	movk	w21, #0xfffb, lsl #16
  413270:	mov	w20, #0x12                  	// #18
  413274:	neg	x23, x23, lsr #5
  413278:	ldr	x27, [x29, #296]
  41327c:	add	x23, x0, x23, lsl #5
  413280:	sub	x23, x23, #0x40
  413284:	b	4132ac <stemlen_compare@@Base+0xdf4>
  413288:	str	x0, [x24, #8]
  41328c:	ldr	x0, [x19, #16]
  413290:	cbz	x0, 413320 <stemlen_compare@@Base+0xe68>
  413294:	ldr	x0, [x26, #24]
  413298:	str	x0, [x24]
  41329c:	str	x24, [x26, #24]
  4132a0:	sub	x19, x19, #0x20
  4132a4:	cmp	x19, x23
  4132a8:	b.eq	413358 <stemlen_compare@@Base+0xea0>  // b.none
  4132ac:	ldr	x28, [x19, #16]
  4132b0:	cbnz	x28, 413750 <stemlen_compare@@Base+0x1298>
  4132b4:	mov	x0, #0x28                  	// #40
  4132b8:	bl	418a78 <xcalloc@@Base>
  4132bc:	ldrb	w2, [x19, #24]
  4132c0:	mov	x24, x0
  4132c4:	mov	w3, #0xffffffed            	// #-19
  4132c8:	ubfx	x1, x2, #1, #1
  4132cc:	ubfx	x0, x2, #0, #1
  4132d0:	ldrb	w2, [x24, #33]
  4132d4:	ubfiz	w0, w0, #1, #7
  4132d8:	ubfiz	w1, w1, #4, #4
  4132dc:	orr	w1, w1, w0
  4132e0:	and	w0, w2, w3
  4132e4:	and	w1, w1, w20
  4132e8:	orr	w1, w1, w0
  4132ec:	strb	w1, [x24, #33]
  4132f0:	ldr	x0, [x19]
  4132f4:	bl	422490 <strcache_add@@Base>
  4132f8:	mov	x28, x0
  4132fc:	cbnz	w25, 413288 <stemlen_compare@@Base+0xdd0>
  413300:	bl	40c7a8 <lookup_file@@Base>
  413304:	str	x0, [x24, #16]
  413308:	cbnz	x0, 41328c <stemlen_compare@@Base+0xdd4>
  41330c:	mov	x0, x28
  413310:	bl	40c820 <enter_file@@Base>
  413314:	str	x0, [x24, #16]
  413318:	ldr	x0, [x19, #16]
  41331c:	cbnz	x0, 413294 <stemlen_compare@@Base+0xddc>
  413320:	ldr	x0, [x27]
  413324:	ldrb	w0, [x0, #50]
  413328:	cbz	w0, 413294 <stemlen_compare@@Base+0xddc>
  41332c:	ldr	x0, [x24, #16]
  413330:	cbz	x0, 41386c <stemlen_compare@@Base+0x13b4>
  413334:	ldrb	w1, [x0, #137]
  413338:	sub	x19, x19, #0x20
  41333c:	cmp	x19, x23
  413340:	orr	w1, w1, #0x1
  413344:	strb	w1, [x0, #137]
  413348:	ldr	x0, [x26, #24]
  41334c:	str	x0, [x24]
  413350:	str	x24, [x26, #24]
  413354:	b.ne	4132ac <stemlen_compare@@Base+0xdf4>  // b.any
  413358:	ldr	x0, [x29, #296]
  41335c:	ldrb	w0, [x0, #24]
  413360:	cbnz	w0, 413818 <stemlen_compare@@Base+0x1360>
  413364:	ldp	x1, x0, [x29, #216]
  413368:	mov	x19, x1
  41336c:	bl	4224d0 <strcache_add_len@@Base>
  413370:	str	x0, [x26, #40]
  413374:	ldr	x2, [x29, #264]
  413378:	ldrb	w0, [x26, #137]
  41337c:	orr	w0, w0, #0x8
  413380:	ldr	x1, [x2, #40]
  413384:	strb	w0, [x26, #137]
  413388:	str	x1, [x26, #32]
  41338c:	ldr	x0, [x29, #296]
  413390:	ldr	w1, [x0, #16]
  413394:	ldr	x0, [x2, #8]
  413398:	ldr	x0, [x0, x1, lsl #3]
  41339c:	bl	40c7a8 <lookup_file@@Base>
  4133a0:	cbz	x0, 4133b8 <stemlen_compare@@Base+0xf00>
  4133a4:	ldrb	w0, [x0, #136]
  4133a8:	tbz	w0, #5, 4133b8 <stemlen_compare@@Base+0xf00>
  4133ac:	ldrb	w0, [x26, #136]
  4133b0:	orr	w0, w0, #0x20
  4133b4:	strb	w0, [x26, #136]
  4133b8:	ldr	x21, [x29, #264]
  4133bc:	ldrh	w1, [x21, #48]
  4133c0:	cmp	w1, #0x1
  4133c4:	b.ls	4134e4 <stemlen_compare@@Base+0x102c>  // b.plast
  4133c8:	ldr	x24, [x29, #296]
  4133cc:	add	x22, x19, #0x1
  4133d0:	mov	x20, #0x0                   	// #0
  4133d4:	ldr	w2, [x24, #16]
  4133d8:	mov	x0, #0x28                  	// #40
  4133dc:	cmp	w2, w20
  4133e0:	b.eq	4134d8 <stemlen_compare@@Base+0x1020>  // b.none
  4133e4:	ldr	x1, [x21, #16]
  4133e8:	ldr	w1, [x1, x20, lsl #2]
  4133ec:	add	x1, x1, x22
  4133f0:	add	x1, x1, #0xf
  4133f4:	and	x1, x1, #0xfffffffffffffff0
  4133f8:	sub	sp, sp, x1
  4133fc:	mov	x25, sp
  413400:	bl	418a78 <xcalloc@@Base>
  413404:	mov	x23, x0
  413408:	ldr	x1, [x21, #8]
  41340c:	mov	x0, x25
  413410:	ldr	x2, [x21, #24]
  413414:	ldr	x1, [x1, x20, lsl #3]
  413418:	ldr	x2, [x2, x20, lsl #3]
  41341c:	sub	x2, x2, x1
  413420:	sub	x2, x2, #0x1
  413424:	bl	406640 <memcpy@plt>
  413428:	ldr	x0, [x21, #8]
  41342c:	mov	x2, x19
  413430:	ldr	x1, [x21, #24]
  413434:	ldr	x0, [x0, x20, lsl #3]
  413438:	ldr	x3, [x1, x20, lsl #3]
  41343c:	ldr	x1, [x26, #40]
  413440:	sub	x3, x3, x0
  413444:	sub	x3, x3, #0x1
  413448:	add	x3, x25, x3
  41344c:	mov	x0, x3
  413450:	bl	406640 <memcpy@plt>
  413454:	add	x0, x0, x19
  413458:	ldp	x2, x3, [x21, #8]
  41345c:	ldr	x1, [x21, #24]
  413460:	ldr	x2, [x2, x20, lsl #3]
  413464:	ldr	x1, [x1, x20, lsl #3]
  413468:	ldr	w3, [x3, x20, lsl #2]
  41346c:	sub	x2, x1, x2
  413470:	sub	x2, x3, x2
  413474:	add	x2, x2, #0x1
  413478:	bl	406640 <memcpy@plt>
  41347c:	mov	x0, x25
  413480:	bl	422490 <strcache_add@@Base>
  413484:	str	x0, [x23, #8]
  413488:	bl	40c820 <enter_file@@Base>
  41348c:	ldr	x1, [x21, #8]
  413490:	str	x0, [x23, #16]
  413494:	ldr	x0, [x26, #48]
  413498:	str	x0, [x23]
  41349c:	ldr	x0, [x1, x20, lsl #3]
  4134a0:	bl	40c7a8 <lookup_file@@Base>
  4134a4:	mov	x1, x0
  4134a8:	ldr	x0, [x23, #16]
  4134ac:	cbz	x1, 4134c4 <stemlen_compare@@Base+0x100c>
  4134b0:	ldrb	w1, [x1, #136]
  4134b4:	tbz	w1, #5, 4134c4 <stemlen_compare@@Base+0x100c>
  4134b8:	ldrb	w1, [x0, #136]
  4134bc:	orr	w1, w1, #0x20
  4134c0:	strb	w1, [x0, #136]
  4134c4:	ldrb	w1, [x0, #137]
  4134c8:	orr	w1, w1, #0x8
  4134cc:	strb	w1, [x0, #137]
  4134d0:	ldrh	w1, [x21, #48]
  4134d4:	str	x23, [x26, #48]
  4134d8:	add	x20, x20, #0x1
  4134dc:	cmp	w1, w20
  4134e0:	b.hi	4133d4 <stemlen_compare@@Base+0xf1c>  // b.pmore
  4134e4:	mov	w19, #0x1                   	// #1
  4134e8:	b	41317c <stemlen_compare@@Base+0xcc4>
  4134ec:	ldp	x0, x2, [x29, #232]
  4134f0:	ldr	x1, [x29, #200]
  4134f4:	bl	406640 <memcpy@plt>
  4134f8:	b	412a10 <stemlen_compare@@Base+0x558>
  4134fc:	ldr	w0, [x29, #188]
  413500:	bl	418a08 <print_spaces@@Base>
  413504:	mov	w2, #0x5                   	// #5
  413508:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  41350c:	mov	x0, #0x0                   	// #0
  413510:	add	x1, x1, #0x748
  413514:	bl	406cd0 <dcgettext@plt>
  413518:	ldr	w1, [x29, #216]
  41351c:	ldr	x2, [x29, #224]
  413520:	bl	406d60 <printf@plt>
  413524:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  413528:	ldr	x0, [x0, #384]
  41352c:	bl	406c20 <fflush@plt>
  413530:	b	4128d0 <stemlen_compare@@Base+0x418>
  413534:	add	x0, x1, #0x10
  413538:	mov	x20, x1
  41353c:	and	x0, x0, #0xfffffffffffffff0
  413540:	mov	x2, x1
  413544:	sub	sp, sp, x0
  413548:	mov	x0, sp
  41354c:	str	x0, [x29, #160]
  413550:	ldr	x1, [x29, #200]
  413554:	mov	x21, x0
  413558:	bl	406640 <memcpy@plt>
  41355c:	strb	wzr, [x21, x20]
  413560:	b	4128b8 <stemlen_compare@@Base+0x400>
  413564:	ldr	x20, [x29, #200]
  413568:	mov	x0, x20
  41356c:	bl	406680 <strlen@plt>
  413570:	mov	x1, x0
  413574:	mov	x0, x19
  413578:	mov	x19, x1
  41357c:	str	x1, [x29, #288]
  413580:	bl	418a50 <xmalloc@@Base>
  413584:	str	x0, [x29, #168]
  413588:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  41358c:	adrp	x3, 446000 <commands_started@@Base+0x1c8>
  413590:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  413594:	ldr	x1, [x1, #2216]
  413598:	ldr	w2, [x2, #2240]
  41359c:	ldr	w0, [x3, #2224]
  4135a0:	add	x1, x19, x1
  4135a4:	add	x1, x1, #0x13
  4135a8:	and	x1, x1, #0xfffffffffffffff0
  4135ac:	sub	sp, sp, x1
  4135b0:	mul	w0, w2, w0
  4135b4:	lsl	x0, x0, #5
  4135b8:	bl	418a50 <xmalloc@@Base>
  4135bc:	mov	x1, sp
  4135c0:	str	x0, [x29, #136]
  4135c4:	mov	x0, x20
  4135c8:	str	x1, [x29, #232]
  4135cc:	bl	408a60 <ar_name@@Base>
  4135d0:	cbz	w0, 413728 <stemlen_compare@@Base+0x1270>
  4135d4:	str	xzr, [x29, #240]
  4135d8:	str	xzr, [x29, #296]
  4135dc:	b	41259c <stemlen_compare@@Base+0xe4>
  4135e0:	ldr	x0, [x24, #16]
  4135e4:	ldr	x20, [x0]
  4135e8:	b	412918 <stemlen_compare@@Base+0x460>
  4135ec:	mov	w0, #0x1                   	// #1
  4135f0:	str	w0, [x29, #184]
  4135f4:	b	4127ec <stemlen_compare@@Base+0x334>
  4135f8:	ldr	x1, [x29, #136]
  4135fc:	mov	w2, #0x20                  	// #32
  413600:	ldr	w0, [x29, #280]
  413604:	sub	w5, w0, #0x1
  413608:	add	x0, x1, #0x20
  41360c:	umaddl	x5, w5, w2, x0
  413610:	b	413620 <stemlen_compare@@Base+0x1168>
  413614:	add	x1, x1, #0x20
  413618:	cmp	x5, x1
  41361c:	b.eq	4127d8 <stemlen_compare@@Base+0x320>  // b.none
  413620:	ldr	x0, [x1]
  413624:	ldrb	w2, [x0, #50]
  413628:	cbnz	w2, 413614 <stemlen_compare@@Base+0x115c>
  41362c:	ldrh	w3, [x0, #48]
  413630:	cbz	w3, 413614 <stemlen_compare@@Base+0x115c>
  413634:	ldr	x4, [x0, #8]
  413638:	mov	x0, #0x0                   	// #0
  41363c:	b	413644 <stemlen_compare@@Base+0x118c>
  413640:	b.ls	413614 <stemlen_compare@@Base+0x115c>  // b.plast
  413644:	ldr	x2, [x4, x0, lsl #3]
  413648:	add	x0, x0, #0x1
  41364c:	cmp	w3, w0
  413650:	ldrb	w2, [x2, #1]
  413654:	cbnz	w2, 413640 <stemlen_compare@@Base+0x1188>
  413658:	str	xzr, [x1]
  41365c:	b	413614 <stemlen_compare@@Base+0x115c>
  413660:	mov	w1, w0
  413664:	adrp	x3, 412000 <hash_print_stats@@Base+0x60>
  413668:	ldr	x0, [x29, #136]
  41366c:	add	x3, x3, #0x4b8
  413670:	mov	x2, #0x20                  	// #32
  413674:	bl	4067b0 <qsort@plt>
  413678:	ldr	w0, [x29, #224]
  41367c:	cbz	w0, 4127d8 <stemlen_compare@@Base+0x320>
  413680:	b	4135f8 <stemlen_compare@@Base+0x1140>
  413684:	ldr	x0, [x29, #232]
  413688:	mov	x1, x20
  41368c:	bl	406c30 <strcpy@plt>
  413690:	b	412a48 <stemlen_compare@@Base+0x590>
  413694:	ldr	x2, [x29, #128]
  413698:	str	xzr, [x29, #128]
  41369c:	ldr	x0, [x2]
  4136a0:	str	x0, [x22, #8]
  4136a4:	add	x0, x22, #0x20
  4136a8:	ldr	x1, [x23, #8]
  4136ac:	str	x1, [x2]
  4136b0:	mov	x25, x0
  4136b4:	str	x1, [x22]
  4136b8:	str	x2, [x22, #16]
  4136bc:	b	412d94 <stemlen_compare@@Base+0x8dc>
  4136c0:	mov	w0, w26
  4136c4:	bl	418a08 <print_spaces@@Base>
  4136c8:	mov	w2, #0x5                   	// #5
  4136cc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  4136d0:	mov	x0, #0x0                   	// #0
  4136d4:	add	x1, x1, #0x850
  4136d8:	bl	406cd0 <dcgettext@plt>
  4136dc:	ldr	x1, [x23, #8]
  4136e0:	bl	406d60 <printf@plt>
  4136e4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4136e8:	ldr	x0, [x0, #384]
  4136ec:	bl	406c20 <fflush@plt>
  4136f0:	ldr	x0, [x29, #128]
  4136f4:	cbnz	x0, 413078 <stemlen_compare@@Base+0xbc0>
  4136f8:	sub	sp, sp, #0x90
  4136fc:	mov	x0, sp
  413700:	str	x0, [x29, #128]
  413704:	b	413078 <stemlen_compare@@Base+0xbc0>
  413708:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  41370c:	mov	w2, #0x5                   	// #5
  413710:	add	x1, x1, #0x778
  413714:	mov	x0, #0x0                   	// #0
  413718:	bl	406cd0 <dcgettext@plt>
  41371c:	b	413154 <stemlen_compare@@Base+0xc9c>
  413720:	mov	x20, #0x0                   	// #0
  413724:	b	412c9c <stemlen_compare@@Base+0x7e4>
  413728:	sub	x2, x19, #0x1
  41372c:	mov	x0, x20
  413730:	mov	w1, #0x2f                  	// #47
  413734:	bl	406bd0 <memrchr@plt>
  413738:	cmp	x0, #0x0
  41373c:	str	x0, [x29, #296]
  413740:	sub	x0, x0, x20
  413744:	csinc	x0, xzr, x0, eq  // eq = none
  413748:	str	x0, [x29, #240]
  41374c:	b	41259c <stemlen_compare@@Base+0xe4>
  413750:	ldr	x0, [x28]
  413754:	bl	40c7a8 <lookup_file@@Base>
  413758:	mov	x24, x0
  41375c:	cbz	x0, 41385c <stemlen_compare@@Base+0x13a4>
  413760:	ldrb	w0, [x0, #137]
  413764:	orr	w0, w0, #0xffffff80
  413768:	strb	w0, [x24, #137]
  41376c:	ldrb	w0, [x28, #138]
  413770:	ldr	w1, [x24, #136]
  413774:	ldr	x2, [x28, #40]
  413778:	ubfx	x0, x0, #2, #1
  41377c:	and	w1, w1, w21
  413780:	orr	w0, w22, w0, lsl #18
  413784:	orr	w0, w0, w1
  413788:	ldr	x1, [x28, #24]
  41378c:	str	x1, [x24, #24]
  413790:	ldr	x1, [x28, #32]
  413794:	str	x2, [x24, #40]
  413798:	ldr	x2, [x28, #48]
  41379c:	str	x1, [x24, #32]
  4137a0:	ldr	x1, [x28, #80]
  4137a4:	str	x1, [x24, #80]
  4137a8:	ldr	x1, [x28, #88]
  4137ac:	str	w0, [x24, #136]
  4137b0:	str	x2, [x24, #48]
  4137b4:	ldr	x0, [x19, #8]
  4137b8:	str	x1, [x24, #88]
  4137bc:	bl	40c7a8 <lookup_file@@Base>
  4137c0:	cbz	x0, 4137d8 <stemlen_compare@@Base+0x1320>
  4137c4:	ldrb	w0, [x0, #136]
  4137c8:	tbz	w0, #5, 4137d8 <stemlen_compare@@Base+0x1320>
  4137cc:	ldrb	w0, [x24, #136]
  4137d0:	orr	w0, w0, #0x20
  4137d4:	strb	w0, [x24, #136]
  4137d8:	ldr	x24, [x24, #24]
  4137dc:	cbz	x24, 4132b4 <stemlen_compare@@Base+0xdfc>
  4137e0:	ldr	x0, [x24, #8]
  4137e4:	bl	40c820 <enter_file@@Base>
  4137e8:	ldrb	w1, [x0, #137]
  4137ec:	ldrb	w2, [x24, #33]
  4137f0:	mov	w3, w1
  4137f4:	stp	xzr, x0, [x24, #8]
  4137f8:	ubfx	x1, x1, #0, #1
  4137fc:	ubfx	x2, x2, #0, #1
  413800:	orr	w1, w1, w2
  413804:	bfxil	w3, w1, #0, #1
  413808:	strb	w3, [x0, #137]
  41380c:	ldr	x24, [x24]
  413810:	cbnz	x24, 4137e0 <stemlen_compare@@Base+0x1328>
  413814:	b	4132b4 <stemlen_compare@@Base+0xdfc>
  413818:	ldr	x1, [x29, #200]
  41381c:	ldr	x20, [x29, #112]
  413820:	ldr	x21, [x29, #240]
  413824:	mov	x0, x20
  413828:	ldr	x22, [x29, #216]
  41382c:	mov	x2, x21
  413830:	bl	406640 <memcpy@plt>
  413834:	ldr	x1, [x29, #224]
  413838:	mov	x2, x22
  41383c:	add	x19, x21, x22
  413840:	add	x0, x20, x21
  413844:	bl	406640 <memcpy@plt>
  413848:	mov	x0, x20
  41384c:	strb	wzr, [x20, x19]
  413850:	bl	422490 <strcache_add@@Base>
  413854:	str	x0, [x26, #40]
  413858:	b	413374 <stemlen_compare@@Base+0xebc>
  41385c:	ldr	x0, [x28]
  413860:	bl	40c820 <enter_file@@Base>
  413864:	mov	x24, x0
  413868:	b	41376c <stemlen_compare@@Base+0x12b4>
  41386c:	ldrb	w0, [x24, #33]
  413870:	orr	w0, w0, #0x1
  413874:	strb	w0, [x24, #33]
  413878:	b	413294 <stemlen_compare@@Base+0xddc>
  41387c:	ldr	x0, [x29, #264]
  413880:	str	xzr, [x27, #40]
  413884:	mov	x28, x27
  413888:	mov	x22, x25
  41388c:	strb	wzr, [x0, #51]
  413890:	b	41320c <stemlen_compare@@Base+0xd54>
  413894:	ldr	x0, [x29, #272]
  413898:	mov	x22, x25
  41389c:	bl	418fa0 <free_ns_chain@@Base>
  4138a0:	b	412ed4 <stemlen_compare@@Base+0xa1c>
  4138a4:	nop

00000000004138a8 <try_implicit_rule@@Base>:
  4138a8:	stp	x29, x30, [sp, #-48]!
  4138ac:	mov	x29, sp
  4138b0:	str	x21, [sp, #32]
  4138b4:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  4138b8:	stp	x19, x20, [sp, #16]
  4138bc:	mov	x19, x0
  4138c0:	ldr	w0, [x21, #1088]
  4138c4:	mov	w20, w1
  4138c8:	tbnz	w0, #3, 41393c <try_implicit_rule@@Base+0x94>
  4138cc:	mov	w1, #0x0                   	// #0
  4138d0:	mov	w2, w20
  4138d4:	mov	x0, x19
  4138d8:	mov	w3, #0x0                   	// #0
  4138dc:	bl	4124e0 <stemlen_compare@@Base+0x28>
  4138e0:	mov	w1, w0
  4138e4:	mov	w0, #0x1                   	// #1
  4138e8:	cbz	w1, 4138fc <try_implicit_rule@@Base+0x54>
  4138ec:	ldp	x19, x20, [sp, #16]
  4138f0:	ldr	x21, [sp, #32]
  4138f4:	ldp	x29, x30, [sp], #48
  4138f8:	ret
  4138fc:	ldr	x0, [x19]
  413900:	bl	408a60 <ar_name@@Base>
  413904:	cbz	w0, 4138ec <try_implicit_rule@@Base+0x44>
  413908:	ldr	w0, [x21, #1088]
  41390c:	tbnz	w0, #3, 413970 <try_implicit_rule@@Base+0xc8>
  413910:	mov	w2, w20
  413914:	mov	x0, x19
  413918:	mov	w3, #0x0                   	// #0
  41391c:	mov	w1, #0x1                   	// #1
  413920:	bl	4124e0 <stemlen_compare@@Base+0x28>
  413924:	cmp	w0, #0x0
  413928:	cset	w0, ne  // ne = any
  41392c:	ldp	x19, x20, [sp, #16]
  413930:	ldr	x21, [sp, #32]
  413934:	ldp	x29, x30, [sp], #48
  413938:	ret
  41393c:	mov	w0, w1
  413940:	bl	418a08 <print_spaces@@Base>
  413944:	mov	w2, #0x5                   	// #5
  413948:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  41394c:	mov	x0, #0x0                   	// #0
  413950:	add	x1, x1, #0x888
  413954:	bl	406cd0 <dcgettext@plt>
  413958:	ldr	x1, [x19]
  41395c:	bl	406d60 <printf@plt>
  413960:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  413964:	ldr	x0, [x0, #384]
  413968:	bl	406c20 <fflush@plt>
  41396c:	b	4138cc <try_implicit_rule@@Base+0x24>
  413970:	mov	w0, w20
  413974:	bl	418a08 <print_spaces@@Base>
  413978:	mov	w2, #0x5                   	// #5
  41397c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  413980:	mov	x0, #0x0                   	// #0
  413984:	add	x1, x1, #0x8b0
  413988:	bl	406cd0 <dcgettext@plt>
  41398c:	ldr	x1, [x19]
  413990:	bl	406d60 <printf@plt>
  413994:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  413998:	ldr	x0, [x0, #384]
  41399c:	bl	406c20 <fflush@plt>
  4139a0:	b	413910 <try_implicit_rule@@Base+0x68>
  4139a4:	nop
  4139a8:	stp	x29, x30, [sp, #-112]!
  4139ac:	mov	x29, sp
  4139b0:	stp	x23, x24, [sp, #48]
  4139b4:	ldr	x23, [x0, #40]
  4139b8:	stp	x19, x20, [sp, #16]
  4139bc:	mov	x19, x0
  4139c0:	stp	x21, x22, [sp, #32]
  4139c4:	mov	w21, w2
  4139c8:	stp	x25, x26, [sp, #64]
  4139cc:	mov	w25, w1
  4139d0:	stp	x27, x28, [sp, #80]
  4139d4:	sub	sp, sp, #0x10
  4139d8:	ldr	x20, [x23, #32]
  4139dc:	cbz	w4, 413a40 <try_implicit_rule@@Base+0x198>
  4139e0:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4139e4:	ldr	w0, [x0, #3300]
  4139e8:	cbnz	w0, 413b3c <try_implicit_rule@@Base+0x294>
  4139ec:	cmp	w2, #0x0
  4139f0:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  4139f4:	b.ne	413bdc <try_implicit_rule@@Base+0x334>  // b.any
  4139f8:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4139fc:	add	x22, x22, #0x350
  413a00:	mov	x27, x22
  413a04:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  413a08:	mov	w2, #0x5                   	// #5
  413a0c:	add	x1, x1, #0x8e8
  413a10:	mov	x0, #0x0                   	// #0
  413a14:	bl	406cd0 <dcgettext@plt>
  413a18:	mov	x26, x0
  413a1c:	ldr	x24, [x20]
  413a20:	cbnz	x24, 413a68 <try_implicit_rule@@Base+0x1c0>
  413a24:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  413a28:	mov	w2, #0x5                   	// #5
  413a2c:	add	x1, x1, #0x8f8
  413a30:	mov	x0, #0x0                   	// #0
  413a34:	bl	406cd0 <dcgettext@plt>
  413a38:	mov	x24, x0
  413a3c:	b	413a9c <try_implicit_rule@@Base+0x1f4>
  413a40:	cmp	w2, #0x0
  413a44:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  413a48:	b.ne	413bb0 <try_implicit_rule@@Base+0x308>  // b.any
  413a4c:	adrp	x27, 42b000 <_IO_stdin_used@@Base+0x4c20>
  413a50:	add	x27, x27, #0x350
  413a54:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x4c20>
  413a58:	mov	x26, x27
  413a5c:	add	x22, x22, #0x440
  413a60:	ldr	x24, [x20]
  413a64:	cbz	x24, 413a24 <try_implicit_rule@@Base+0x17c>
  413a68:	mov	x0, x24
  413a6c:	bl	406680 <strlen@plt>
  413a70:	ldp	x4, x3, [x20, #8]
  413a74:	add	x0, x0, #0x2a
  413a78:	and	x0, x0, #0xfffffffffffffff0
  413a7c:	mov	x2, x24
  413a80:	sub	sp, sp, x0
  413a84:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  413a88:	add	x24, sp, #0x10
  413a8c:	add	x1, x1, #0x908
  413a90:	mov	x0, x24
  413a94:	add	x3, x4, x3
  413a98:	bl	406730 <sprintf@plt>
  413a9c:	mov	x0, x22
  413aa0:	bl	406680 <strlen@plt>
  413aa4:	mov	x20, x0
  413aa8:	mov	x0, x24
  413aac:	bl	406680 <strlen@plt>
  413ab0:	mov	x2, x0
  413ab4:	ldr	x0, [x23]
  413ab8:	str	x2, [x29, #96]
  413abc:	adrp	x28, 443000 <expanding_var@@Base+0x338>
  413ac0:	add	x19, x19, #0x10
  413ac4:	bl	406680 <strlen@plt>
  413ac8:	mov	x1, x0
  413acc:	mov	x0, x26
  413ad0:	str	x1, [x29, #104]
  413ad4:	bl	406680 <strlen@plt>
  413ad8:	ldp	x2, x1, [x29, #96]
  413adc:	ldrb	w3, [x19, #8]
  413ae0:	tst	x3, #0x1
  413ae4:	add	x1, x1, x0
  413ae8:	add	x20, x20, x2
  413aec:	csel	x19, x19, xzr, ne  // ne = any
  413af0:	add	x20, x1, x20
  413af4:	str	x19, [x28, #3504]
  413af8:	bl	41ecc8 <show_goal_error@@Base>
  413afc:	cbnz	w21, 413b5c <try_implicit_rule@@Base+0x2b4>
  413b00:	mov	w2, #0x5                   	// #5
  413b04:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  413b08:	mov	x0, #0x0                   	// #0
  413b0c:	add	x1, x1, #0x910
  413b10:	bl	406cd0 <dcgettext@plt>
  413b14:	mov	x2, x0
  413b18:	ldr	x5, [x23]
  413b1c:	mov	x7, x26
  413b20:	mov	w6, w25
  413b24:	mov	x4, x24
  413b28:	mov	x3, x22
  413b2c:	add	x1, x20, #0x14
  413b30:	mov	x0, #0x0                   	// #0
  413b34:	bl	419dc8 <error@@Base>
  413b38:	str	xzr, [x28, #3504]
  413b3c:	mov	sp, x29
  413b40:	ldp	x19, x20, [sp, #16]
  413b44:	ldp	x21, x22, [sp, #32]
  413b48:	ldp	x23, x24, [sp, #48]
  413b4c:	ldp	x25, x26, [sp, #64]
  413b50:	ldp	x27, x28, [sp, #80]
  413b54:	ldp	x29, x30, [sp], #112
  413b58:	ret
  413b5c:	mov	w0, w21
  413b60:	bl	406d30 <strsignal@plt>
  413b64:	mov	x21, x0
  413b68:	bl	406680 <strlen@plt>
  413b6c:	mov	x19, x0
  413b70:	mov	x0, x27
  413b74:	bl	406680 <strlen@plt>
  413b78:	add	x1, x19, x0
  413b7c:	ldr	x5, [x23]
  413b80:	str	x26, [sp]
  413b84:	mov	x6, x21
  413b88:	mov	x7, x27
  413b8c:	add	x1, x1, x20
  413b90:	mov	x4, x24
  413b94:	mov	x3, x22
  413b98:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  413b9c:	mov	x0, #0x0                   	// #0
  413ba0:	add	x2, x2, #0x928
  413ba4:	bl	419dc8 <error@@Base>
  413ba8:	str	xzr, [x28, #3504]
  413bac:	b	413b3c <try_implicit_rule@@Base+0x294>
  413bb0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  413bb4:	mov	w2, #0x5                   	// #5
  413bb8:	add	x1, x1, #0x940
  413bbc:	mov	x0, #0x0                   	// #0
  413bc0:	adrp	x26, 42b000 <_IO_stdin_used@@Base+0x4c20>
  413bc4:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x4c20>
  413bc8:	bl	406cd0 <dcgettext@plt>
  413bcc:	add	x26, x26, #0x350
  413bd0:	mov	x27, x0
  413bd4:	add	x22, x22, #0x440
  413bd8:	b	413a60 <try_implicit_rule@@Base+0x1b8>
  413bdc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  413be0:	mov	w2, #0x5                   	// #5
  413be4:	add	x1, x1, #0x940
  413be8:	mov	x0, #0x0                   	// #0
  413bec:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x4c20>
  413bf0:	bl	406cd0 <dcgettext@plt>
  413bf4:	add	x22, x22, #0x350
  413bf8:	mov	x27, x0
  413bfc:	b	413a04 <try_implicit_rule@@Base+0x15c>
  413c00:	stp	x29, x30, [sp, #-32]!
  413c04:	mov	x29, sp
  413c08:	stp	x19, x20, [sp, #16]
  413c0c:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  413c10:	mov	x20, x0
  413c14:	add	x0, x0, #0x10
  413c18:	bl	419790 <output_close@@Base>
  413c1c:	ldr	w0, [x19, #904]
  413c20:	cbz	w0, 413d28 <try_implicit_rule@@Base+0x480>
  413c24:	bl	4255e8 <jobserver_enabled@@Base>
  413c28:	cbnz	w0, 413cc8 <try_implicit_rule@@Base+0x420>
  413c2c:	ldr	w0, [x19, #904]
  413c30:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  413c34:	sub	w0, w0, #0x1
  413c38:	str	w0, [x19, #904]
  413c3c:	ldr	w0, [x1, #464]
  413c40:	cbnz	w0, 413d1c <try_implicit_rule@@Base+0x474>
  413c44:	ldr	x0, [x20, #56]
  413c48:	cbz	x0, 413c88 <try_implicit_rule@@Base+0x3e0>
  413c4c:	ldr	x1, [x20, #40]
  413c50:	ldr	x1, [x1, #32]
  413c54:	ldrh	w1, [x1, #48]
  413c58:	cbz	w1, 413c84 <try_implicit_rule@@Base+0x3dc>
  413c5c:	mov	x19, #0x0                   	// #0
  413c60:	ldr	x0, [x0, x19, lsl #3]
  413c64:	add	x19, x19, #0x1
  413c68:	bl	406b90 <free@plt>
  413c6c:	ldr	x0, [x20, #40]
  413c70:	ldr	x0, [x0, #32]
  413c74:	ldrh	w0, [x0, #48]
  413c78:	cmp	w0, w19
  413c7c:	ldr	x0, [x20, #56]
  413c80:	b.hi	413c60 <try_implicit_rule@@Base+0x3b8>  // b.pmore
  413c84:	bl	406b90 <free@plt>
  413c88:	ldr	x19, [x20, #8]
  413c8c:	cbz	x19, 413cb0 <try_implicit_rule@@Base+0x408>
  413c90:	ldr	x0, [x19]
  413c94:	cbz	x0, 413ca8 <try_implicit_rule@@Base+0x400>
  413c98:	bl	406b90 <free@plt>
  413c9c:	ldr	x0, [x19, #8]!
  413ca0:	cbnz	x0, 413c98 <try_implicit_rule@@Base+0x3f0>
  413ca4:	ldr	x19, [x20, #8]
  413ca8:	mov	x0, x19
  413cac:	bl	406b90 <free@plt>
  413cb0:	ldr	x0, [x20]
  413cb4:	bl	406b90 <free@plt>
  413cb8:	mov	x0, x20
  413cbc:	ldp	x19, x20, [sp, #16]
  413cc0:	ldp	x29, x30, [sp], #32
  413cc4:	b	406b90 <free@plt>
  413cc8:	ldr	w0, [x19, #904]
  413ccc:	cmp	w0, #0x1
  413cd0:	b.ls	413c30 <try_implicit_rule@@Base+0x388>  // b.plast
  413cd4:	mov	w0, #0x1                   	// #1
  413cd8:	bl	425658 <jobserver_release@@Base>
  413cdc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  413ce0:	ldr	w0, [x0, #1088]
  413ce4:	tbz	w0, #2, 413c2c <try_implicit_rule@@Base+0x384>
  413ce8:	mov	w2, #0x5                   	// #5
  413cec:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  413cf0:	mov	x0, #0x0                   	// #0
  413cf4:	add	x1, x1, #0x988
  413cf8:	bl	406cd0 <dcgettext@plt>
  413cfc:	ldr	x2, [x20, #40]
  413d00:	mov	x1, x20
  413d04:	ldr	x2, [x2]
  413d08:	bl	406d60 <printf@plt>
  413d0c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  413d10:	ldr	x0, [x0, #384]
  413d14:	bl	406c20 <fflush@plt>
  413d18:	b	413c2c <try_implicit_rule@@Base+0x384>
  413d1c:	ldp	x19, x20, [sp, #16]
  413d20:	ldp	x29, x30, [sp], #32
  413d24:	ret
  413d28:	ldr	x0, [x20, #40]
  413d2c:	ldr	x19, [x0]
  413d30:	mov	x0, x19
  413d34:	bl	406680 <strlen@plt>
  413d38:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  413d3c:	add	x1, x0, #0x14
  413d40:	mov	x4, x19
  413d44:	mov	x3, x20
  413d48:	add	x2, x2, #0x950
  413d4c:	mov	x0, #0x0                   	// #0
  413d50:	bl	41a060 <fatal@@Base>
  413d54:	nop
  413d58:	ldr	x1, [x0, #40]
  413d5c:	ldr	x2, [x0, #64]
  413d60:	ldr	x4, [x1, #32]
  413d64:	ldr	w1, [x0, #72]
  413d68:	b	413d80 <try_implicit_rule@@Base+0x4d8>
  413d6c:	ldr	x2, [x0, #56]
  413d70:	ldr	x2, [x2, w1, uxtw #3]
  413d74:	mov	w1, w3
  413d78:	str	x2, [x0, #64]
  413d7c:	str	w3, [x0, #72]
  413d80:	add	w3, w1, #0x1
  413d84:	cbz	x2, 413d90 <try_implicit_rule@@Base+0x4e8>
  413d88:	ldrb	w2, [x2]
  413d8c:	cbnz	w2, 413dac <try_implicit_rule@@Base+0x504>
  413d90:	ldrh	w2, [x4, #48]
  413d94:	cmp	w2, w1
  413d98:	b.ne	413d6c <try_implicit_rule@@Base+0x4c4>  // b.any
  413d9c:	str	xzr, [x0, #64]
  413da0:	mov	w0, #0x0                   	// #0
  413da4:	str	xzr, [x4, #16]
  413da8:	ret
  413dac:	sub	w1, w1, #0x1
  413db0:	mov	w0, #0x1                   	// #1
  413db4:	str	x1, [x4, #16]
  413db8:	ret
  413dbc:	nop

0000000000413dc0 <is_bourne_compatible_shell@@Base>:
  413dc0:	stp	x29, x30, [sp, #-48]!
  413dc4:	mov	w1, #0x2f                  	// #47
  413dc8:	mov	x29, sp
  413dcc:	stp	x19, x20, [sp, #16]
  413dd0:	str	x21, [sp, #32]
  413dd4:	mov	x21, x0
  413dd8:	bl	406a70 <strrchr@plt>
  413ddc:	mov	x19, x0
  413de0:	mov	w1, #0x5c                  	// #92
  413de4:	mov	x0, x21
  413de8:	bl	406a70 <strrchr@plt>
  413dec:	mov	x20, x0
  413df0:	cmp	x19, #0x0
  413df4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  413df8:	b.eq	413e68 <is_bourne_compatible_shell@@Base+0xa8>  // b.none
  413dfc:	cmp	x0, x19
  413e00:	csel	x20, x0, x19, cs  // cs = hs, nlast
  413e04:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  413e08:	ldrb	w0, [x20]
  413e0c:	add	x19, x1, #0x38
  413e10:	mov	w2, #0x5c                  	// #92
  413e14:	ldr	x1, [x1, #56]
  413e18:	cmp	w0, #0x2f
  413e1c:	ccmp	w0, w2, #0x4, ne  // ne = any
  413e20:	cinc	x20, x20, eq  // eq = none
  413e24:	cbnz	x1, 413e34 <is_bourne_compatible_shell@@Base+0x74>
  413e28:	b	413e54 <is_bourne_compatible_shell@@Base+0x94>
  413e2c:	ldr	x1, [x19, #8]!
  413e30:	cbz	x1, 413e54 <is_bourne_compatible_shell@@Base+0x94>
  413e34:	mov	x0, x20
  413e38:	bl	406b40 <strcmp@plt>
  413e3c:	cbnz	w0, 413e2c <is_bourne_compatible_shell@@Base+0x6c>
  413e40:	mov	w0, #0x1                   	// #1
  413e44:	ldp	x19, x20, [sp, #16]
  413e48:	ldr	x21, [sp, #32]
  413e4c:	ldp	x29, x30, [sp], #48
  413e50:	ret
  413e54:	mov	w0, #0x0                   	// #0
  413e58:	ldp	x19, x20, [sp, #16]
  413e5c:	ldr	x21, [sp, #32]
  413e60:	ldp	x29, x30, [sp], #48
  413e64:	ret
  413e68:	cbnz	x0, 413e04 <is_bourne_compatible_shell@@Base+0x44>
  413e6c:	cmp	x19, #0x0
  413e70:	csel	x20, x19, x21, ne  // ne = any
  413e74:	b	413e04 <is_bourne_compatible_shell@@Base+0x44>
  413e78:	stp	x29, x30, [sp, #-208]!
  413e7c:	mov	x29, sp
  413e80:	stp	x19, x20, [sp, #16]
  413e84:	mov	x20, x3
  413e88:	stp	x21, x22, [sp, #32]
  413e8c:	mov	x21, x2
  413e90:	mov	x22, x4
  413e94:	stp	x23, x24, [sp, #48]
  413e98:	mov	x23, x0
  413e9c:	stp	x27, x28, [sp, #80]
  413ea0:	str	x1, [sp, #96]
  413ea4:	str	w5, [sp, #124]
  413ea8:	cbz	x1, 413eb0 <is_bourne_compatible_shell@@Base+0xf0>
  413eac:	str	xzr, [x1]
  413eb0:	ldrb	w0, [x23]
  413eb4:	adrp	x8, 443000 <expanding_var@@Base+0x338>
  413eb8:	add	x27, x8, #0x448
  413ebc:	ldrh	w1, [x27, w0, sxtw #1]
  413ec0:	tbz	w1, #1, 413ed4 <is_bourne_compatible_shell@@Base+0x114>
  413ec4:	nop
  413ec8:	ldrb	w0, [x23, #1]!
  413ecc:	ldrh	w1, [x27, w0, sxtw #1]
  413ed0:	tbnz	w1, #1, 413ec8 <is_bourne_compatible_shell@@Base+0x108>
  413ed4:	cbz	w0, 414640 <is_bourne_compatible_shell@@Base+0x880>
  413ed8:	cbz	x20, 4142d4 <is_bourne_compatible_shell@@Base+0x514>
  413edc:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  413ee0:	add	x19, x19, #0x38
  413ee4:	ldr	x1, [x19, #64]
  413ee8:	cbz	x21, 4142c8 <is_bourne_compatible_shell@@Base+0x508>
  413eec:	mov	x0, x21
  413ef0:	bl	406b40 <strcmp@plt>
  413ef4:	cbnz	w0, 413f50 <is_bourne_compatible_shell@@Base+0x190>
  413ef8:	cbz	x22, 413f24 <is_bourne_compatible_shell@@Base+0x164>
  413efc:	ldrb	w0, [x22]
  413f00:	cbz	w0, 413f24 <is_bourne_compatible_shell@@Base+0x164>
  413f04:	nop
  413f08:	sub	w1, w0, #0x9
  413f0c:	cmp	w0, #0x20
  413f10:	and	w0, w1, #0xff
  413f14:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  413f18:	b.hi	413f50 <is_bourne_compatible_shell@@Base+0x190>  // b.pmore
  413f1c:	ldrb	w0, [x22, #1]!
  413f20:	cbnz	w0, 413f08 <is_bourne_compatible_shell@@Base+0x148>
  413f24:	ldrb	w0, [x20]
  413f28:	cmp	w0, #0x2d
  413f2c:	b.ne	413f50 <is_bourne_compatible_shell@@Base+0x190>  // b.any
  413f30:	ldrb	w0, [x20, #1]
  413f34:	cmp	w0, #0x63
  413f38:	b.eq	414304 <is_bourne_compatible_shell@@Base+0x544>  // b.none
  413f3c:	cmp	w0, #0x65
  413f40:	b.ne	413f50 <is_bourne_compatible_shell@@Base+0x190>  // b.any
  413f44:	ldrb	w0, [x20, #2]
  413f48:	cmp	w0, #0x63
  413f4c:	b.eq	414728 <is_bourne_compatible_shell@@Base+0x968>  // b.none
  413f50:	adrp	x24, 446000 <commands_started@@Base+0x1c8>
  413f54:	mov	x0, x20
  413f58:	bl	406680 <strlen@plt>
  413f5c:	ldr	w1, [x24, #2044]
  413f60:	mov	x22, x0
  413f64:	cbnz	w1, 4141a0 <is_bourne_compatible_shell@@Base+0x3e0>
  413f68:	mov	x0, x21
  413f6c:	stp	x25, x26, [sp, #64]
  413f70:	bl	406680 <strlen@plt>
  413f74:	mov	x1, x0
  413f78:	mov	x0, x23
  413f7c:	mov	x24, x1
  413f80:	str	x1, [sp, #104]
  413f84:	bl	406680 <strlen@plt>
  413f88:	add	x0, x24, x0
  413f8c:	add	x1, x22, #0x3
  413f90:	add	x0, x1, x0, lsl #1
  413f94:	bl	418a50 <xmalloc@@Base>
  413f98:	mov	x25, x0
  413f9c:	ldrb	w1, [x21]
  413fa0:	cbz	w1, 4143e8 <is_bourne_compatible_shell@@Base+0x628>
  413fa4:	adrp	x24, 428000 <_IO_stdin_used@@Base+0x1c20>
  413fa8:	mov	x28, x0
  413fac:	add	x24, x24, #0x9c0
  413fb0:	mov	w26, #0x5c                  	// #92
  413fb4:	b	413fd4 <is_bourne_compatible_shell@@Base+0x214>
  413fb8:	mov	x3, x28
  413fbc:	mov	x28, x4
  413fc0:	strb	w26, [x3], #3
  413fc4:	ldrb	w0, [x21]
  413fc8:	strb	w0, [x1]
  413fcc:	ldrb	w1, [x21, #1]!
  413fd0:	cbz	w1, 414008 <is_bourne_compatible_shell@@Base+0x248>
  413fd4:	mov	x0, x24
  413fd8:	bl	406bb0 <strchr@plt>
  413fdc:	add	x1, x28, #0x1
  413fe0:	add	x4, x28, #0x2
  413fe4:	cbnz	x0, 413fb8 <is_bourne_compatible_shell@@Base+0x1f8>
  413fe8:	mov	x0, x1
  413fec:	mov	x1, x28
  413ff0:	mov	x28, x0
  413ff4:	ldrb	w0, [x21]
  413ff8:	mov	x3, x4
  413ffc:	strb	w0, [x1]
  414000:	ldrb	w1, [x21, #1]!
  414004:	cbnz	w1, 413fd4 <is_bourne_compatible_shell@@Base+0x214>
  414008:	mov	w24, #0x20                  	// #32
  41400c:	strb	w24, [x28]
  414010:	mov	x1, x20
  414014:	mov	x0, x3
  414018:	mov	x2, x22
  41401c:	bl	406640 <memcpy@plt>
  414020:	strb	w24, [x0, x22]
  414024:	add	x3, x0, x22
  414028:	add	x20, x3, #0x1
  41402c:	ldrb	w1, [x23]
  414030:	cbz	w1, 414100 <is_bourne_compatible_shell@@Base+0x340>
  414034:	ldr	x0, [sp, #96]
  414038:	adrp	x28, 443000 <expanding_var@@Base+0x338>
  41403c:	mov	w3, #0x27                  	// #39
  414040:	add	x28, x28, #0x388
  414044:	cmp	x0, #0x0
  414048:	mov	w2, #0x22                  	// #34
  41404c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  414050:	cset	w26, ne  // ne = any
  414054:	add	x5, x0, #0x9c0
  414058:	mov	w4, #0x5c                  	// #92
  41405c:	mov	w21, #0xa                   	// #10
  414060:	b	4140b0 <is_bourne_compatible_shell@@Base+0x2f0>
  414064:	ldr	w0, [x19, #72]
  414068:	cbz	w0, 414094 <is_bourne_compatible_shell@@Base+0x2d4>
  41406c:	ldr	w0, [x28, #4]
  414070:	cbnz	w0, 414094 <is_bourne_compatible_shell@@Base+0x2d4>
  414074:	cmp	w1, #0x5c
  414078:	ccmp	w1, w3, #0x4, ne  // ne = any
  41407c:	ccmp	w1, w2, #0x4, ne  // ne = any
  414080:	b.ne	41416c <is_bourne_compatible_shell@@Base+0x3ac>  // b.any
  414084:	mov	x0, x20
  414088:	mov	x20, x24
  41408c:	strb	w4, [x0], #2
  414090:	mov	x24, x0
  414094:	ldrb	w0, [x23]
  414098:	mov	x7, x23
  41409c:	strb	w0, [x20]
  4140a0:	add	x23, x7, #0x1
  4140a4:	mov	x20, x24
  4140a8:	ldrb	w1, [x7, #1]
  4140ac:	cbz	w1, 414100 <is_bourne_compatible_shell@@Base+0x340>
  4140b0:	cmp	w26, #0x0
  4140b4:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  4140b8:	b.eq	4142f8 <is_bourne_compatible_shell@@Base+0x538>  // b.none
  4140bc:	cmp	w1, #0x5c
  4140c0:	add	x24, x20, #0x1
  4140c4:	b.ne	414064 <is_bourne_compatible_shell@@Base+0x2a4>  // b.any
  4140c8:	ldrb	w0, [x23, #1]
  4140cc:	cmp	w0, #0xa
  4140d0:	b.ne	414064 <is_bourne_compatible_shell@@Base+0x2a4>  // b.any
  4140d4:	strb	w1, [x20]
  4140d8:	ldr	w0, [x28, #4]
  4140dc:	cbnz	w0, 4140e8 <is_bourne_compatible_shell@@Base+0x328>
  4140e0:	add	x24, x20, #0x2
  4140e4:	strb	w1, [x20, #1]
  4140e8:	mov	x20, x24
  4140ec:	add	x7, x23, #0x1
  4140f0:	add	x23, x7, #0x1
  4140f4:	strb	w21, [x20], #1
  4140f8:	ldrb	w1, [x7, #1]
  4140fc:	cbnz	w1, 4140b0 <is_bourne_compatible_shell@@Base+0x2f0>
  414100:	ldr	x1, [sp, #104]
  414104:	add	x0, x22, #0x2
  414108:	add	x0, x0, x1
  41410c:	add	x0, x25, x0
  414110:	cmp	x20, x0
  414114:	b.eq	414734 <is_bourne_compatible_shell@@Base+0x974>  // b.none
  414118:	strb	wzr, [x20]
  41411c:	ldr	w0, [x19, #72]
  414120:	cbz	w0, 4147fc <is_bourne_compatible_shell@@Base+0xa3c>
  414124:	ldr	w5, [sp, #124]
  414128:	mov	x4, #0x0                   	// #0
  41412c:	mov	x3, #0x0                   	// #0
  414130:	mov	x2, #0x0                   	// #0
  414134:	mov	x1, #0x0                   	// #0
  414138:	mov	x0, x25
  41413c:	bl	413e78 <is_bourne_compatible_shell@@Base+0xb8>
  414140:	mov	x22, x0
  414144:	mov	x0, x25
  414148:	bl	406b90 <free@plt>
  41414c:	ldp	x25, x26, [sp, #64]
  414150:	mov	x0, x22
  414154:	ldp	x19, x20, [sp, #16]
  414158:	ldp	x21, x22, [sp, #32]
  41415c:	ldp	x23, x24, [sp, #48]
  414160:	ldp	x27, x28, [sp, #80]
  414164:	ldp	x29, x30, [sp], #208
  414168:	ret
  41416c:	ldrh	w0, [x27, w1, sxtw #1]
  414170:	tst	w0, #0x6
  414174:	b.ne	414084 <is_bourne_compatible_shell@@Base+0x2c4>  // b.any
  414178:	mov	x0, x5
  41417c:	str	w4, [sp, #112]
  414180:	bl	406bb0 <strchr@plt>
  414184:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  414188:	ldr	w4, [sp, #112]
  41418c:	add	x5, x1, #0x9c0
  414190:	mov	w3, #0x27                  	// #39
  414194:	mov	w2, #0x22                  	// #34
  414198:	cbnz	x0, 414084 <is_bourne_compatible_shell@@Base+0x2c4>
  41419c:	b	414094 <is_bourne_compatible_shell@@Base+0x2d4>
  4141a0:	mov	x0, x21
  4141a4:	bl	413dc0 <is_bourne_compatible_shell@@Base>
  4141a8:	cbz	w0, 414254 <is_bourne_compatible_shell@@Base+0x494>
  4141ac:	mov	x6, x23
  4141b0:	mov	x4, x23
  4141b4:	ldrb	w1, [x4]
  4141b8:	cbz	w1, 414250 <is_bourne_compatible_shell@@Base+0x490>
  4141bc:	sub	w0, w1, #0x2b
  4141c0:	ldrh	w3, [x27, w1, sxtw #1]
  4141c4:	and	w0, w0, #0xfffffffd
  4141c8:	cmp	w1, #0x40
  4141cc:	and	w0, w0, #0xff
  4141d0:	and	w3, w3, #0x2
  4141d4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4141d8:	ccmp	w3, #0x0, #0x0, ne  // ne = any
  4141dc:	b.eq	41420c <is_bourne_compatible_shell@@Base+0x44c>  // b.none
  4141e0:	ldrb	w1, [x4, #1]!
  4141e4:	sub	w3, w1, #0x2b
  4141e8:	cmp	w1, #0x40
  4141ec:	and	w3, w3, #0xfffffffd
  4141f0:	ldrh	w5, [x27, w1, sxtw #1]
  4141f4:	and	w3, w3, #0xff
  4141f8:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  4141fc:	and	w3, w5, #0x2
  414200:	ccmp	w3, #0x0, #0x0, ne  // ne = any
  414204:	b.ne	4141e0 <is_bourne_compatible_shell@@Base+0x420>  // b.any
  414208:	cbz	w1, 414250 <is_bourne_compatible_shell@@Base+0x490>
  41420c:	mov	w3, #0x0                   	// #0
  414210:	b	414234 <is_bourne_compatible_shell@@Base+0x474>
  414214:	cmp	w1, #0xa
  414218:	eor	w3, w3, #0x1
  41421c:	cset	w0, eq  // eq = none
  414220:	tst	w3, w0
  414224:	b.ne	4141b4 <is_bourne_compatible_shell@@Base+0x3f4>  // b.any
  414228:	ldrb	w1, [x4]
  41422c:	mov	w3, #0x0                   	// #0
  414230:	cbz	w1, 414250 <is_bourne_compatible_shell@@Base+0x490>
  414234:	strb	w1, [x6], #1
  414238:	ldrb	w1, [x4], #1
  41423c:	cmp	w1, #0x5c
  414240:	b.ne	414214 <is_bourne_compatible_shell@@Base+0x454>  // b.any
  414244:	ldrb	w1, [x4]
  414248:	eor	w3, w3, #0x1
  41424c:	cbnz	w1, 414234 <is_bourne_compatible_shell@@Base+0x474>
  414250:	strb	wzr, [x6]
  414254:	lsr	x0, x22, #1
  414258:	mov	w19, #0x1                   	// #1
  41425c:	add	x0, x0, #0x4
  414260:	lsl	x0, x0, #3
  414264:	bl	418a50 <xmalloc@@Base>
  414268:	mov	x22, x0
  41426c:	mov	x0, x21
  414270:	mov	x21, x22
  414274:	bl	418c60 <xstrdup@@Base>
  414278:	str	x0, [x21], #8
  41427c:	str	x20, [sp, #192]
  414280:	b	414290 <is_bourne_compatible_shell@@Base+0x4d0>
  414284:	ldr	x1, [sp, #200]
  414288:	bl	418c80 <xstrndup@@Base>
  41428c:	str	x0, [x21], #8
  414290:	add	w19, w19, #0x1
  414294:	add	x1, sp, #0xc8
  414298:	add	x0, sp, #0xc0
  41429c:	bl	418d28 <find_next_token@@Base>
  4142a0:	cbnz	x0, 414284 <is_bourne_compatible_shell@@Base+0x4c4>
  4142a4:	str	x23, [x21]
  4142a8:	mov	x0, x22
  4142ac:	str	xzr, [x22, w19, sxtw #3]
  4142b0:	ldp	x19, x20, [sp, #16]
  4142b4:	ldp	x21, x22, [sp, #32]
  4142b8:	ldp	x23, x24, [sp, #48]
  4142bc:	ldp	x27, x28, [sp, #80]
  4142c0:	ldp	x29, x30, [sp], #208
  4142c4:	ret
  4142c8:	mov	x21, x1
  4142cc:	cbnz	x22, 413efc <is_bourne_compatible_shell@@Base+0x13c>
  4142d0:	b	413f24 <is_bourne_compatible_shell@@Base+0x164>
  4142d4:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  4142d8:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  4142dc:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x1c20>
  4142e0:	add	x0, x0, #0x968
  4142e4:	ldr	w1, [x1, #1992]
  4142e8:	add	x20, x20, #0x9b0
  4142ec:	cmp	w1, #0x0
  4142f0:	csel	x20, x20, x0, ne  // ne = any
  4142f4:	b	413edc <is_bourne_compatible_shell@@Base+0x11c>
  4142f8:	ldr	x0, [sp, #96]
  4142fc:	str	x23, [x0]
  414300:	b	414100 <is_bourne_compatible_shell@@Base+0x340>
  414304:	ldrb	w0, [x20, #2]
  414308:	cbnz	w0, 413f50 <is_bourne_compatible_shell@@Base+0x190>
  41430c:	mov	x0, x23
  414310:	stp	x25, x26, [sp, #64]
  414314:	bl	406680 <strlen@plt>
  414318:	add	x24, x0, #0x1
  41431c:	lsl	x0, x24, #3
  414320:	bl	418a50 <xmalloc@@Base>
  414324:	mov	x22, x0
  414328:	mov	x0, x24
  41432c:	bl	418a50 <xmalloc@@Base>
  414330:	str	x0, [sp, #168]
  414334:	mov	x28, x0
  414338:	str	x0, [x22]
  41433c:	ldrb	w1, [x23]
  414340:	cbz	w1, 4147c0 <is_bourne_compatible_shell@@Base+0xa00>
  414344:	adrp	x25, 428000 <_IO_stdin_used@@Base+0x1c20>
  414348:	adrp	x26, 446000 <commands_started@@Base+0x1c8>
  41434c:	add	x0, x25, #0x9c0
  414350:	str	x0, [sp, #128]
  414354:	add	x0, x26, #0x7fc
  414358:	mov	x26, x23
  41435c:	adrp	x3, 427000 <_IO_stdin_used@@Base+0xc20>
  414360:	mov	w25, #0x0                   	// #0
  414364:	add	x2, x3, #0xb58
  414368:	str	x0, [sp, #136]
  41436c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  414370:	add	x0, x0, #0x9b8
  414374:	str	wzr, [sp, #144]
  414378:	str	xzr, [sp, #152]
  41437c:	stp	wzr, wzr, [sp, #160]
  414380:	str	x0, [sp, #176]
  414384:	str	x2, [sp, #184]
  414388:	cbz	w25, 4143f4 <is_bourne_compatible_shell@@Base+0x634>
  41438c:	cmp	w1, w25
  414390:	b.eq	414554 <is_bourne_compatible_shell@@Base+0x794>  // b.none
  414394:	cmp	w1, #0x5c
  414398:	b.eq	414584 <is_bourne_compatible_shell@@Base+0x7c4>  // b.none
  41439c:	ldr	x0, [sp, #96]
  4143a0:	cmp	x0, #0x0
  4143a4:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  4143a8:	b.eq	4147b4 <is_bourne_compatible_shell@@Base+0x9f4>  // b.none
  4143ac:	cmp	w25, #0x22
  4143b0:	b.eq	4145c0 <is_bourne_compatible_shell@@Base+0x800>  // b.none
  4143b4:	mov	x4, x28
  4143b8:	strb	w1, [x4], #1
  4143bc:	ldrb	w1, [x26, #1]!
  4143c0:	mov	x28, x4
  4143c4:	cbnz	w1, 414388 <is_bourne_compatible_shell@@Base+0x5c8>
  4143c8:	adrp	x24, 446000 <commands_started@@Base+0x1c8>
  4143cc:	cbz	w25, 414458 <is_bourne_compatible_shell@@Base+0x698>
  4143d0:	ldr	x0, [sp, #168]
  4143d4:	bl	406b90 <free@plt>
  4143d8:	mov	x0, x22
  4143dc:	bl	406b90 <free@plt>
  4143e0:	ldp	x25, x26, [sp, #64]
  4143e4:	b	413f54 <is_bourne_compatible_shell@@Base+0x194>
  4143e8:	add	x3, x0, #0x1
  4143ec:	mov	x28, x0
  4143f0:	b	414008 <is_bourne_compatible_shell@@Base+0x248>
  4143f4:	ldr	x0, [sp, #128]
  4143f8:	str	w1, [sp, #104]
  4143fc:	str	w1, [sp, #112]
  414400:	bl	406bb0 <strchr@plt>
  414404:	ldr	w1, [sp, #104]
  414408:	ldr	w6, [sp, #112]
  41440c:	cbnz	x0, 4145dc <is_bourne_compatible_shell@@Base+0x81c>
  414410:	ldr	x0, [sp, #136]
  414414:	adrp	x24, 446000 <commands_started@@Base+0x1c8>
  414418:	ldr	w0, [x0]
  41441c:	cmp	w0, #0x0
  414420:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  414424:	b.eq	4143d0 <is_bourne_compatible_shell@@Base+0x610>  // b.none
  414428:	cmp	w1, #0x22
  41442c:	b.eq	414544 <is_bourne_compatible_shell@@Base+0x784>  // b.none
  414430:	b.ls	4144b4 <is_bourne_compatible_shell@@Base+0x6f4>  // b.plast
  414434:	cmp	w1, #0x3d
  414438:	b.eq	4145e4 <is_bourne_compatible_shell@@Base+0x824>  // b.none
  41443c:	cmp	w1, #0x5c
  414440:	b.ne	41453c <is_bourne_compatible_shell@@Base+0x77c>  // b.any
  414444:	mov	x0, x26
  414448:	ldrb	w1, [x0, #1]!
  41444c:	cmp	w1, #0xa
  414450:	b.eq	414674 <is_bourne_compatible_shell@@Base+0x8b4>  // b.none
  414454:	cbnz	w1, 414710 <is_bourne_compatible_shell@@Base+0x950>
  414458:	ldr	w0, [sp, #144]
  41445c:	cmp	w0, #0x0
  414460:	ldr	x0, [sp, #152]
  414464:	cset	w1, ne  // ne = any
  414468:	add	x0, x22, x0, lsl #3
  41446c:	strb	wzr, [x28]
  414470:	ldr	x3, [x0]
  414474:	ldrb	w3, [x3]
  414478:	cmp	w3, #0x0
  41447c:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  414480:	b.eq	414494 <is_bourne_compatible_shell@@Base+0x6d4>  // b.none
  414484:	ldr	x0, [sp, #152]
  414488:	add	x0, x0, #0x1
  41448c:	str	x0, [sp, #152]
  414490:	add	x0, x22, x0, lsl #3
  414494:	str	xzr, [x0]
  414498:	ldr	x0, [sp, #152]
  41449c:	cmp	x0, #0x1
  4144a0:	b.eq	41475c <is_bourne_compatible_shell@@Base+0x99c>  // b.none
  4144a4:	ldr	x0, [x22]
  4144a8:	cbz	x0, 4147e0 <is_bourne_compatible_shell@@Base+0xa20>
  4144ac:	ldp	x25, x26, [sp, #64]
  4144b0:	b	414150 <is_bourne_compatible_shell@@Base+0x390>
  4144b4:	cmp	w1, #0xa
  4144b8:	b.eq	414618 <is_bourne_compatible_shell@@Base+0x858>  // b.none
  4144bc:	cmp	w1, #0x20
  4144c0:	b.ne	414530 <is_bourne_compatible_shell@@Base+0x770>  // b.any
  4144c4:	ldr	x0, [sp, #152]
  4144c8:	strb	wzr, [x28], #1
  4144cc:	ldp	w2, w3, [sp, #160]
  4144d0:	add	x1, x0, #0x1
  4144d4:	str	x1, [sp, #152]
  4144d8:	eor	w0, w2, #0x1
  4144dc:	orr	w0, w3, w0
  4144e0:	str	x28, [x22, x1, lsl #3]
  4144e4:	str	w0, [sp, #164]
  4144e8:	eor	w5, w0, #0x1
  4144ec:	ands	w25, w5, w2
  4144f0:	b.ne	4143d0 <is_bourne_compatible_shell@@Base+0x610>  // b.any
  4144f4:	cmp	x1, #0x1
  4144f8:	b.eq	4146b0 <is_bourne_compatible_shell@@Base+0x8f0>  // b.none
  4144fc:	ldrb	w1, [x26, #1]
  414500:	ldrh	w0, [x27, w1, sxtw #1]
  414504:	tbz	w0, #1, 414748 <is_bourne_compatible_shell@@Base+0x988>
  414508:	mov	x6, x26
  41450c:	add	x26, x26, #0x1
  414510:	ldrb	w1, [x26, #1]
  414514:	ldrh	w0, [x27, w1, sxtw #1]
  414518:	tbnz	w0, #1, 414508 <is_bourne_compatible_shell@@Base+0x748>
  41451c:	str	wzr, [sp, #144]
  414520:	add	x26, x6, #0x2
  414524:	str	wzr, [sp, #160]
  414528:	cbnz	w1, 414388 <is_bourne_compatible_shell@@Base+0x5c8>
  41452c:	b	4143c8 <is_bourne_compatible_shell@@Base+0x608>
  414530:	cmp	w1, #0x9
  414534:	b.eq	4144c4 <is_bourne_compatible_shell@@Base+0x704>  // b.none
  414538:	b	4143b4 <is_bourne_compatible_shell@@Base+0x5f4>
  41453c:	cmp	w1, #0x27
  414540:	b.ne	4143b4 <is_bourne_compatible_shell@@Base+0x5f4>  // b.any
  414544:	ldrb	w1, [x26, #1]!
  414548:	mov	w25, w6
  41454c:	cbnz	w1, 414388 <is_bourne_compatible_shell@@Base+0x5c8>
  414550:	b	4143c8 <is_bourne_compatible_shell@@Base+0x608>
  414554:	ldr	x0, [x22]
  414558:	ldrb	w1, [x26, #1]!
  41455c:	cmp	x0, x28
  414560:	b.eq	414660 <is_bourne_compatible_shell@@Base+0x8a0>  // b.none
  414564:	ldurb	w0, [x28, #-1]
  414568:	mov	w25, #0x0                   	// #0
  41456c:	cmp	w0, #0x0
  414570:	ldr	w0, [sp, #144]
  414574:	csinc	w0, w0, wzr, ne  // ne = any
  414578:	str	w0, [sp, #144]
  41457c:	cbnz	w1, 414388 <is_bourne_compatible_shell@@Base+0x5c8>
  414580:	b	4143c8 <is_bourne_compatible_shell@@Base+0x608>
  414584:	ldrb	w0, [x26, #1]
  414588:	cmp	w0, #0xa
  41458c:	b.ne	4143ac <is_bourne_compatible_shell@@Base+0x5ec>  // b.any
  414590:	cmp	w25, #0x22
  414594:	add	x0, x26, #0x2
  414598:	b.eq	4145b0 <is_bourne_compatible_shell@@Base+0x7f0>  // b.none
  41459c:	mov	x6, x28
  4145a0:	strb	w1, [x6], #2
  4145a4:	ldrb	w1, [x26, #1]
  4145a8:	strb	w1, [x28, #1]
  4145ac:	mov	x28, x6
  4145b0:	ldrb	w1, [x26, #2]
  4145b4:	mov	x26, x0
  4145b8:	cbnz	w1, 414388 <is_bourne_compatible_shell@@Base+0x5c8>
  4145bc:	b	4143c8 <is_bourne_compatible_shell@@Base+0x608>
  4145c0:	ldr	x0, [sp, #176]
  4145c4:	str	w1, [sp, #104]
  4145c8:	bl	406bb0 <strchr@plt>
  4145cc:	ldr	w1, [sp, #104]
  4145d0:	cbz	x0, 4143b4 <is_bourne_compatible_shell@@Base+0x5f4>
  4145d4:	ldr	w0, [x19, #72]
  4145d8:	cbz	w0, 4143b4 <is_bourne_compatible_shell@@Base+0x5f4>
  4145dc:	adrp	x24, 446000 <commands_started@@Base+0x1c8>
  4145e0:	b	4143d0 <is_bourne_compatible_shell@@Base+0x610>
  4145e4:	ldr	w0, [sp, #164]
  4145e8:	cbnz	w0, 4145f4 <is_bourne_compatible_shell@@Base+0x834>
  4145ec:	ldr	w0, [x19, #72]
  4145f0:	cbnz	w0, 4143d0 <is_bourne_compatible_shell@@Base+0x610>
  4145f4:	mov	x4, x28
  4145f8:	mov	w0, #0x1                   	// #1
  4145fc:	str	w0, [sp, #160]
  414600:	mov	w0, #0x3d                  	// #61
  414604:	strb	w0, [x4], #1
  414608:	ldrb	w1, [x26, #1]!
  41460c:	mov	x28, x4
  414610:	cbnz	w1, 414388 <is_bourne_compatible_shell@@Base+0x5c8>
  414614:	b	4143c8 <is_bourne_compatible_shell@@Base+0x608>
  414618:	ldr	x0, [sp, #96]
  41461c:	cbz	x0, 4143b4 <is_bourne_compatible_shell@@Base+0x5f4>
  414620:	ldr	w0, [sp, #144]
  414624:	ldr	x2, [sp, #96]
  414628:	cmp	w0, #0x0
  41462c:	ldr	x0, [sp, #152]
  414630:	cset	w1, ne  // ne = any
  414634:	str	x26, [x2]
  414638:	add	x0, x22, x0, lsl #3
  41463c:	b	41446c <is_bourne_compatible_shell@@Base+0x6ac>
  414640:	mov	x22, #0x0                   	// #0
  414644:	mov	x0, x22
  414648:	ldp	x19, x20, [sp, #16]
  41464c:	ldp	x21, x22, [sp, #32]
  414650:	ldp	x23, x24, [sp, #48]
  414654:	ldp	x27, x28, [sp, #80]
  414658:	ldp	x29, x30, [sp], #208
  41465c:	ret
  414660:	mov	w0, #0x1                   	// #1
  414664:	str	w0, [sp, #144]
  414668:	mov	w25, #0x0                   	// #0
  41466c:	cbnz	w1, 414388 <is_bourne_compatible_shell@@Base+0x5c8>
  414670:	b	4143c8 <is_bourne_compatible_shell@@Base+0x608>
  414674:	ldr	x1, [sp, #152]
  414678:	ldr	x6, [x22, x1, lsl #3]
  41467c:	ldrb	w1, [x26, #2]!
  414680:	cmp	x6, x28
  414684:	b.ne	4143c4 <is_bourne_compatible_shell@@Base+0x604>  // b.any
  414688:	ldrh	w6, [x27, w1, sxtw #1]
  41468c:	tbz	w6, #1, 4143c4 <is_bourne_compatible_shell@@Base+0x604>
  414690:	mov	x3, x0
  414694:	add	x0, x0, #0x1
  414698:	ldrb	w1, [x0, #1]
  41469c:	ldrh	w6, [x27, w1, sxtw #1]
  4146a0:	tbnz	w6, #1, 414690 <is_bourne_compatible_shell@@Base+0x8d0>
  4146a4:	add	x26, x3, #0x2
  4146a8:	cbnz	w1, 414388 <is_bourne_compatible_shell@@Base+0x5c8>
  4146ac:	b	4143c8 <is_bourne_compatible_shell@@Base+0x608>
  4146b0:	ldr	x9, [x22]
  4146b4:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  4146b8:	add	x11, x0, #0xfa8
  4146bc:	add	x1, x9, #0x1
  4146c0:	ldr	x0, [sp, #184]
  4146c4:	b	4146d0 <is_bourne_compatible_shell@@Base+0x910>
  4146c8:	ldr	x0, [x11, #8]!
  4146cc:	cbz	x0, 4144fc <is_bourne_compatible_shell@@Base+0x73c>
  4146d0:	cmp	x9, x0
  4146d4:	b.eq	4143d0 <is_bourne_compatible_shell@@Base+0x610>  // b.none
  4146d8:	ldrb	w10, [x0]
  4146dc:	ldrb	w6, [x9]
  4146e0:	cmp	w6, w10
  4146e4:	b.ne	4146c8 <is_bourne_compatible_shell@@Base+0x908>  // b.any
  4146e8:	str	x9, [sp, #112]
  4146ec:	str	x11, [sp, #144]
  4146f0:	cbz	w6, 4143d0 <is_bourne_compatible_shell@@Base+0x610>
  4146f4:	add	x0, x0, #0x1
  4146f8:	str	x1, [sp, #104]
  4146fc:	bl	406b40 <strcmp@plt>
  414700:	ldp	x1, x9, [sp, #104]
  414704:	ldr	x11, [sp, #144]
  414708:	cbnz	w0, 4146c8 <is_bourne_compatible_shell@@Base+0x908>
  41470c:	b	4143d0 <is_bourne_compatible_shell@@Base+0x610>
  414710:	mov	x4, x28
  414714:	strb	w1, [x4], #1
  414718:	ldrb	w1, [x26, #2]!
  41471c:	mov	x28, x4
  414720:	cbnz	w1, 414388 <is_bourne_compatible_shell@@Base+0x5c8>
  414724:	b	4143c8 <is_bourne_compatible_shell@@Base+0x608>
  414728:	ldrb	w0, [x20, #3]
  41472c:	cbz	w0, 41430c <is_bourne_compatible_shell@@Base+0x54c>
  414730:	b	413f50 <is_bourne_compatible_shell@@Base+0x190>
  414734:	mov	x0, x25
  414738:	mov	x22, #0x0                   	// #0
  41473c:	bl	406b90 <free@plt>
  414740:	ldp	x25, x26, [sp, #64]
  414744:	b	414150 <is_bourne_compatible_shell@@Base+0x390>
  414748:	str	wzr, [sp, #144]
  41474c:	add	x26, x26, #0x1
  414750:	str	wzr, [sp, #160]
  414754:	cbnz	w1, 414388 <is_bourne_compatible_shell@@Base+0x5c8>
  414758:	b	4143c8 <is_bourne_compatible_shell@@Base+0x608>
  41475c:	ldr	x25, [x22]
  414760:	adrp	x24, 428000 <_IO_stdin_used@@Base+0x1c20>
  414764:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  414768:	add	x24, x24, #0xfa8
  41476c:	add	x0, x0, #0xb58
  414770:	add	x26, x25, #0x1
  414774:	b	414780 <is_bourne_compatible_shell@@Base+0x9c0>
  414778:	ldr	x0, [x24, #8]!
  41477c:	cbz	x0, 4144ac <is_bourne_compatible_shell@@Base+0x6ec>
  414780:	cmp	x25, x0
  414784:	b.eq	4145dc <is_bourne_compatible_shell@@Base+0x81c>  // b.none
  414788:	ldrb	w4, [x0]
  41478c:	ldrb	w3, [x25]
  414790:	cmp	w3, w4
  414794:	b.ne	414778 <is_bourne_compatible_shell@@Base+0x9b8>  // b.any
  414798:	cbz	w3, 4145dc <is_bourne_compatible_shell@@Base+0x81c>
  41479c:	add	x0, x0, #0x1
  4147a0:	mov	x1, x26
  4147a4:	bl	406b40 <strcmp@plt>
  4147a8:	cbnz	w0, 414778 <is_bourne_compatible_shell@@Base+0x9b8>
  4147ac:	adrp	x24, 446000 <commands_started@@Base+0x1c8>
  4147b0:	b	4143d0 <is_bourne_compatible_shell@@Base+0x610>
  4147b4:	adrp	x24, 446000 <commands_started@@Base+0x1c8>
  4147b8:	str	x26, [x0]
  4147bc:	b	4143d0 <is_bourne_compatible_shell@@Base+0x610>
  4147c0:	ldr	x0, [sp, #168]
  4147c4:	str	xzr, [sp, #152]
  4147c8:	strb	wzr, [x0]
  4147cc:	ldr	x0, [x22]
  4147d0:	ldrb	w0, [x0]
  4147d4:	cbnz	w0, 414484 <is_bourne_compatible_shell@@Base+0x6c4>
  4147d8:	str	xzr, [x22]
  4147dc:	b	4144a4 <is_bourne_compatible_shell@@Base+0x6e4>
  4147e0:	ldr	x0, [sp, #168]
  4147e4:	bl	406b90 <free@plt>
  4147e8:	mov	x0, x22
  4147ec:	mov	x22, #0x0                   	// #0
  4147f0:	bl	406b90 <free@plt>
  4147f4:	ldp	x25, x26, [sp, #64]
  4147f8:	b	414150 <is_bourne_compatible_shell@@Base+0x390>
  4147fc:	mov	w2, #0x5                   	// #5
  414800:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  414804:	mov	x0, #0x0                   	// #0
  414808:	add	x1, x1, #0x9d8
  41480c:	bl	406cd0 <dcgettext@plt>
  414810:	mov	x2, x0
  414814:	adrp	x3, 428000 <_IO_stdin_used@@Base+0x1c20>
  414818:	mov	w4, #0xe16                 	// #3606
  41481c:	add	x3, x3, #0xa18
  414820:	mov	x1, #0x1d                  	// #29
  414824:	mov	x0, #0x0                   	// #0
  414828:	bl	41a060 <fatal@@Base>
  41482c:	nop

0000000000414830 <unblock_all_sigs@@Base>:
  414830:	stp	x29, x30, [sp, #-144]!
  414834:	mov	x29, sp
  414838:	add	x0, sp, #0x10
  41483c:	bl	406910 <sigemptyset@plt>
  414840:	add	x1, sp, #0x10
  414844:	mov	x2, #0x0                   	// #0
  414848:	mov	w0, #0x2                   	// #2
  41484c:	bl	4066e0 <sigprocmask@plt>
  414850:	ldp	x29, x30, [sp], #144
  414854:	ret

0000000000414858 <child_handler@@Base>:
  414858:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41485c:	add	x0, x0, #0x388
  414860:	ldr	w1, [x0, #8]
  414864:	add	w1, w1, #0x1
  414868:	str	w1, [x0, #8]
  41486c:	b	425788 <jobserver_signal@@Base>

0000000000414870 <child_execute_job@@Base>:
  414870:	sub	sp, sp, #0x270
  414874:	stp	x29, x30, [sp]
  414878:	mov	x29, sp
  41487c:	stp	x19, x20, [sp, #16]
  414880:	mov	x20, x0
  414884:	stp	x21, x22, [sp, #32]
  414888:	mov	x21, x2
  41488c:	stp	x23, x24, [sp, #48]
  414890:	stp	x25, x26, [sp, #64]
  414894:	cbz	w1, 414960 <child_execute_job@@Base+0xf0>
  414898:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41489c:	ldr	x0, [x0, #392]
  4148a0:	bl	406850 <fileno@plt>
  4148a4:	mov	w24, w0
  4148a8:	adrp	x25, 443000 <expanding_var@@Base+0x338>
  4148ac:	adrp	x26, 443000 <expanding_var@@Base+0x338>
  4148b0:	ldr	x0, [x25, #384]
  4148b4:	bl	406850 <fileno@plt>
  4148b8:	mov	w22, w0
  4148bc:	ldr	x0, [x26, #360]
  4148c0:	bl	406850 <fileno@plt>
  4148c4:	mov	w23, w0
  4148c8:	ldrb	w1, [x20, #24]
  4148cc:	tbz	w1, #0, 4148e4 <child_execute_job@@Base+0x74>
  4148d0:	ldp	w1, w0, [x20, #16]
  4148d4:	cmp	w1, #0x0
  4148d8:	csel	w22, w22, w1, lt  // lt = tstop
  4148dc:	cmp	w0, #0x0
  4148e0:	csel	w23, w23, w0, lt  // lt = tstop
  4148e4:	add	x0, sp, #0x120
  4148e8:	bl	406c70 <posix_spawnattr_init@plt>
  4148ec:	mov	w19, w0
  4148f0:	cbz	w0, 41496c <child_execute_job@@Base+0xfc>
  4148f4:	mov	w0, #0xffffffff            	// #-1
  4148f8:	str	w0, [sp, #160]
  4148fc:	ldr	x0, [x21]
  414900:	bl	406680 <strlen@plt>
  414904:	mov	x20, x0
  414908:	mov	w0, w19
  41490c:	bl	406a40 <strerror@plt>
  414910:	bl	406680 <strlen@plt>
  414914:	add	x20, x20, x0
  414918:	ldr	x21, [x21]
  41491c:	mov	w0, w19
  414920:	bl	406a40 <strerror@plt>
  414924:	mov	x4, x0
  414928:	mov	x1, x20
  41492c:	mov	x0, #0x0                   	// #0
  414930:	mov	x3, x21
  414934:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  414938:	add	x2, x2, #0xa28
  41493c:	bl	419dc8 <error@@Base>
  414940:	ldr	w0, [sp, #160]
  414944:	ldp	x29, x30, [sp]
  414948:	ldp	x19, x20, [sp, #16]
  41494c:	ldp	x21, x22, [sp, #32]
  414950:	ldp	x23, x24, [sp, #48]
  414954:	ldp	x25, x26, [sp, #64]
  414958:	add	sp, sp, #0x270
  41495c:	ret
  414960:	bl	425be8 <get_bad_stdin@@Base>
  414964:	mov	w24, w0
  414968:	b	4148a8 <child_execute_job@@Base+0x38>
  41496c:	add	x0, sp, #0x50
  414970:	bl	406af0 <posix_spawn_file_actions_init@plt>
  414974:	mov	w19, w0
  414978:	cbnz	w0, 414af0 <child_execute_job@@Base+0x280>
  41497c:	add	x0, sp, #0xa0
  414980:	bl	406910 <sigemptyset@plt>
  414984:	add	x1, sp, #0xa0
  414988:	add	x0, sp, #0x120
  41498c:	bl	406ac0 <posix_spawnattr_setsigmask@plt>
  414990:	mov	w19, w0
  414994:	cbnz	w0, 414ae4 <child_execute_job@@Base+0x274>
  414998:	tbnz	w24, #31, 4149d0 <child_execute_job@@Base+0x160>
  41499c:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  4149a0:	ldr	x0, [x19, #392]
  4149a4:	bl	406850 <fileno@plt>
  4149a8:	cmp	w0, w24
  4149ac:	b.eq	4149d0 <child_execute_job@@Base+0x160>  // b.none
  4149b0:	ldr	x0, [x19, #392]
  4149b4:	bl	406850 <fileno@plt>
  4149b8:	mov	w2, w0
  4149bc:	mov	w1, w24
  4149c0:	add	x0, sp, #0x50
  4149c4:	bl	406870 <posix_spawn_file_actions_adddup2@plt>
  4149c8:	mov	w19, w0
  4149cc:	cbnz	w0, 414ae4 <child_execute_job@@Base+0x274>
  4149d0:	ldr	x0, [x25, #384]
  4149d4:	bl	406850 <fileno@plt>
  4149d8:	cmp	w0, w22
  4149dc:	b.eq	414a00 <child_execute_job@@Base+0x190>  // b.none
  4149e0:	ldr	x0, [x25, #384]
  4149e4:	bl	406850 <fileno@plt>
  4149e8:	mov	w2, w0
  4149ec:	mov	w1, w22
  4149f0:	add	x0, sp, #0x50
  4149f4:	bl	406870 <posix_spawn_file_actions_adddup2@plt>
  4149f8:	mov	w19, w0
  4149fc:	cbnz	w0, 414ae4 <child_execute_job@@Base+0x274>
  414a00:	ldr	x0, [x26, #360]
  414a04:	bl	406850 <fileno@plt>
  414a08:	cmp	w0, w23
  414a0c:	b.eq	414a30 <child_execute_job@@Base+0x1c0>  // b.none
  414a10:	ldr	x0, [x26, #360]
  414a14:	bl	406850 <fileno@plt>
  414a18:	mov	w2, w0
  414a1c:	mov	w1, w23
  414a20:	add	x0, sp, #0x50
  414a24:	bl	406870 <posix_spawn_file_actions_adddup2@plt>
  414a28:	mov	w19, w0
  414a2c:	cbnz	w0, 414ae4 <child_execute_job@@Base+0x274>
  414a30:	add	x0, sp, #0x120
  414a34:	mov	w1, #0x49                  	// #73
  414a38:	bl	406aa0 <posix_spawnattr_setflags@plt>
  414a3c:	cbnz	w0, 414be0 <child_execute_job@@Base+0x370>
  414a40:	ldr	x0, [x20, #8]
  414a44:	ldr	x1, [x0]
  414a48:	cbnz	x1, 414a58 <child_execute_job@@Base+0x1e8>
  414a4c:	b	414a98 <child_execute_job@@Base+0x228>
  414a50:	ldr	x1, [x0, #8]!
  414a54:	cbz	x1, 414a98 <child_execute_job@@Base+0x228>
  414a58:	ldrb	w2, [x1]
  414a5c:	cmp	w2, #0x50
  414a60:	b.ne	414a50 <child_execute_job@@Base+0x1e0>  // b.any
  414a64:	ldrb	w2, [x1, #1]
  414a68:	cmp	w2, #0x41
  414a6c:	b.ne	414a50 <child_execute_job@@Base+0x1e0>  // b.any
  414a70:	ldrb	w2, [x1, #2]
  414a74:	cmp	w2, #0x54
  414a78:	b.ne	414a50 <child_execute_job@@Base+0x1e0>  // b.any
  414a7c:	ldrb	w2, [x1, #3]
  414a80:	cmp	w2, #0x48
  414a84:	b.ne	414a50 <child_execute_job@@Base+0x1e0>  // b.any
  414a88:	ldrb	w2, [x1, #4]
  414a8c:	cmp	w2, #0x3d
  414a90:	b.ne	414a50 <child_execute_job@@Base+0x1e0>  // b.any
  414a94:	add	x1, x1, #0x5
  414a98:	ldr	x0, [x21]
  414a9c:	mov	w2, #0x0                   	// #0
  414aa0:	bl	425ca0 <find_in_given_path@@Base>
  414aa4:	mov	x22, x0
  414aa8:	cbz	x0, 414afc <child_execute_job@@Base+0x28c>
  414aac:	nop
  414ab0:	ldr	x5, [x20, #8]
  414ab4:	mov	x4, x21
  414ab8:	add	x3, sp, #0x120
  414abc:	add	x2, sp, #0x50
  414ac0:	mov	x1, x22
  414ac4:	add	x0, sp, #0xa0
  414ac8:	bl	406c40 <posix_spawn@plt>
  414acc:	mov	w19, w0
  414ad0:	cmp	w0, #0x4
  414ad4:	b.eq	414ab0 <child_execute_job@@Base+0x240>  // b.none
  414ad8:	cmp	w0, #0x8
  414adc:	b.eq	414b2c <child_execute_job@@Base+0x2bc>  // b.none
  414ae0:	cbz	w19, 414bb4 <child_execute_job@@Base+0x344>
  414ae4:	add	x0, sp, #0x50
  414ae8:	bl	4069e0 <posix_spawn_file_actions_destroy@plt>
  414aec:	nop
  414af0:	add	x0, sp, #0x120
  414af4:	bl	406920 <posix_spawnattr_destroy@plt>
  414af8:	b	4148f4 <child_execute_job@@Base+0x84>
  414afc:	bl	406d70 <__errno_location@plt>
  414b00:	mov	x1, x0
  414b04:	add	x0, sp, #0x50
  414b08:	ldr	w19, [x1]
  414b0c:	bl	4069e0 <posix_spawn_file_actions_destroy@plt>
  414b10:	add	x0, sp, #0x120
  414b14:	bl	406920 <posix_spawnattr_destroy@plt>
  414b18:	cbnz	w19, 4148f4 <child_execute_job@@Base+0x84>
  414b1c:	ldr	w0, [sp, #160]
  414b20:	tbz	w0, #31, 414944 <child_execute_job@@Base+0xd4>
  414b24:	mov	w19, #0x0                   	// #0
  414b28:	b	4148fc <child_execute_job@@Base+0x8c>
  414b2c:	ldr	x0, [x21]
  414b30:	cbz	x0, 414c08 <child_execute_job@@Base+0x398>
  414b34:	mov	x0, #0x0                   	// #0
  414b38:	mov	x2, x0
  414b3c:	add	x0, x0, #0x1
  414b40:	ldr	x1, [x21, x0, lsl #3]
  414b44:	cbnz	x1, 414b38 <child_execute_job@@Base+0x2c8>
  414b48:	add	x0, x2, #0x4
  414b4c:	lsl	x0, x0, #3
  414b50:	sub	x19, x0, #0x18
  414b54:	bl	418a50 <xmalloc@@Base>
  414b58:	mov	x23, x0
  414b5c:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  414b60:	mov	x2, x19
  414b64:	add	x0, x0, #0x10
  414b68:	ldr	x19, [x1, #120]
  414b6c:	stp	x19, x22, [x23]
  414b70:	add	x1, x21, #0x8
  414b74:	bl	406640 <memcpy@plt>
  414b78:	b	414b80 <child_execute_job@@Base+0x310>
  414b7c:	ldr	x19, [x23]
  414b80:	mov	x1, x19
  414b84:	ldr	x5, [x20, #8]
  414b88:	mov	x4, x23
  414b8c:	add	x3, sp, #0x120
  414b90:	add	x2, sp, #0x50
  414b94:	add	x0, sp, #0xa0
  414b98:	bl	406c40 <posix_spawn@plt>
  414b9c:	mov	w19, w0
  414ba0:	cmp	w0, #0x4
  414ba4:	b.eq	414b7c <child_execute_job@@Base+0x30c>  // b.none
  414ba8:	mov	x0, x23
  414bac:	bl	406b90 <free@plt>
  414bb0:	cbnz	w19, 414ae4 <child_execute_job@@Base+0x274>
  414bb4:	ldr	x0, [x20]
  414bb8:	bl	406b90 <free@plt>
  414bbc:	ldr	x0, [x21]
  414bc0:	cmp	x0, x22
  414bc4:	b.eq	414be8 <child_execute_job@@Base+0x378>  // b.none
  414bc8:	str	x22, [x20]
  414bcc:	add	x0, sp, #0x50
  414bd0:	bl	4069e0 <posix_spawn_file_actions_destroy@plt>
  414bd4:	add	x0, sp, #0x120
  414bd8:	bl	406920 <posix_spawnattr_destroy@plt>
  414bdc:	b	414b1c <child_execute_job@@Base+0x2ac>
  414be0:	mov	w19, w0
  414be4:	b	414ae4 <child_execute_job@@Base+0x274>
  414be8:	mov	x0, x22
  414bec:	bl	418c60 <xstrdup@@Base>
  414bf0:	str	x0, [x20]
  414bf4:	add	x0, sp, #0x50
  414bf8:	bl	4069e0 <posix_spawn_file_actions_destroy@plt>
  414bfc:	add	x0, sp, #0x120
  414c00:	bl	406920 <posix_spawnattr_destroy@plt>
  414c04:	b	414b1c <child_execute_job@@Base+0x2ac>
  414c08:	mov	x19, #0x0                   	// #0
  414c0c:	mov	x0, #0x18                  	// #24
  414c10:	b	414b54 <child_execute_job@@Base+0x2e4>
  414c14:	nop

0000000000414c18 <exec_command@@Base>:
  414c18:	stp	x29, x30, [sp, #-48]!
  414c1c:	mov	x29, sp
  414c20:	stp	x19, x20, [sp, #16]
  414c24:	mov	x19, x0
  414c28:	mov	x20, x1
  414c2c:	stp	x21, x22, [sp, #32]
  414c30:	bl	4190a8 <child_access@@Base>
  414c34:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  414c38:	ldr	x0, [x19]
  414c3c:	mov	x1, x19
  414c40:	str	x20, [x2, #400]
  414c44:	bl	406b30 <execvp@plt>
  414c48:	bl	406d70 <__errno_location@plt>
  414c4c:	ldr	w21, [x0]
  414c50:	mov	x20, x0
  414c54:	cmp	w21, #0x2
  414c58:	b.eq	414d0c <exec_command@@Base+0xf4>  // b.none
  414c5c:	cmp	w21, #0x8
  414c60:	b.ne	414d0c <exec_command@@Base+0xf4>  // b.any
  414c64:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  414c68:	add	x0, x0, #0xa30
  414c6c:	bl	406d80 <getenv@plt>
  414c70:	cbz	x0, 414d58 <exec_command@@Base+0x140>
  414c74:	ldr	x1, [x19, #8]
  414c78:	cbz	x1, 414d64 <exec_command@@Base+0x14c>
  414c7c:	sub	x4, x19, #0x8
  414c80:	mov	x3, #0x2                   	// #2
  414c84:	nop
  414c88:	sxtw	x2, w3
  414c8c:	add	x3, x3, #0x1
  414c90:	ldr	x1, [x4, x3, lsl #3]
  414c94:	cbnz	x1, 414c88 <exec_command@@Base+0x70>
  414c98:	add	w1, w2, #0x2
  414c9c:	ldr	x3, [x19]
  414ca0:	sbfiz	x1, x1, #3, #32
  414ca4:	add	x1, x1, #0xf
  414ca8:	and	x1, x1, #0xfffffffffffffff0
  414cac:	sub	sp, sp, x1
  414cb0:	mov	x21, sp
  414cb4:	mov	x4, x21
  414cb8:	str	x0, [x21]
  414cbc:	str	x3, [x4, #8]!
  414cc0:	ldr	x3, [x19, x2, lsl #3]
  414cc4:	str	x3, [x4, x2, lsl #3]
  414cc8:	sub	x2, x2, #0x1
  414ccc:	cbnz	w2, 414cc0 <exec_command@@Base+0xa8>
  414cd0:	mov	x1, x21
  414cd4:	bl	406b30 <execvp@plt>
  414cd8:	ldr	x0, [x21]
  414cdc:	bl	406680 <strlen@plt>
  414ce0:	mov	x19, x0
  414ce4:	ldr	w0, [x20]
  414ce8:	bl	406a40 <strerror@plt>
  414cec:	bl	406680 <strlen@plt>
  414cf0:	add	x19, x19, x0
  414cf4:	ldr	w0, [x20]
  414cf8:	ldr	x20, [x21]
  414cfc:	bl	406a40 <strerror@plt>
  414d00:	mov	x1, x19
  414d04:	mov	x3, x20
  414d08:	b	414d3c <exec_command@@Base+0x124>
  414d0c:	ldr	x0, [x19]
  414d10:	bl	406680 <strlen@plt>
  414d14:	mov	x22, x0
  414d18:	mov	w0, w21
  414d1c:	bl	406a40 <strerror@plt>
  414d20:	bl	406680 <strlen@plt>
  414d24:	add	x22, x22, x0
  414d28:	ldr	w0, [x20]
  414d2c:	ldr	x19, [x19]
  414d30:	bl	406a40 <strerror@plt>
  414d34:	mov	x1, x22
  414d38:	mov	x3, x19
  414d3c:	mov	x4, x0
  414d40:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  414d44:	add	x2, x2, #0xa28
  414d48:	mov	x0, #0x0                   	// #0
  414d4c:	bl	419dc8 <error@@Base>
  414d50:	mov	w0, #0x7f                  	// #127
  414d54:	bl	406660 <_exit@plt>
  414d58:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  414d5c:	ldr	x0, [x0, #120]
  414d60:	b	414c74 <exec_command@@Base+0x5c>
  414d64:	mov	x2, #0x1                   	// #1
  414d68:	b	414c98 <exec_command@@Base+0x80>
  414d6c:	nop

0000000000414d70 <construct_command_argv@@Base>:
  414d70:	stp	x29, x30, [sp, #-80]!
  414d74:	mov	x29, sp
  414d78:	stp	x23, x24, [sp, #48]
  414d7c:	adrp	x23, 446000 <commands_started@@Base+0x1c8>
  414d80:	mov	x24, x1
  414d84:	mov	x1, x2
  414d88:	stp	x19, x20, [sp, #16]
  414d8c:	mov	x19, x2
  414d90:	stp	x21, x22, [sp, #32]
  414d94:	mov	x22, x0
  414d98:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  414d9c:	add	x0, x0, #0xa38
  414da0:	stp	x25, x26, [sp, #64]
  414da4:	mov	w25, w3
  414da8:	ldr	w26, [x23, #2048]
  414dac:	str	wzr, [x23, #2048]
  414db0:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  414db4:	mov	x1, x19
  414db8:	mov	x21, x0
  414dbc:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  414dc0:	add	x0, x0, #0xa48
  414dc4:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  414dc8:	mov	x20, x0
  414dcc:	mov	x1, x19
  414dd0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  414dd4:	add	x0, x0, #0xa58
  414dd8:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  414ddc:	mov	w5, w25
  414de0:	mov	x1, x24
  414de4:	mov	x4, x0
  414de8:	mov	x3, x20
  414dec:	mov	x2, x21
  414df0:	mov	x19, x0
  414df4:	str	w26, [x23, #2048]
  414df8:	mov	x0, x22
  414dfc:	bl	413e78 <is_bourne_compatible_shell@@Base+0xb8>
  414e00:	mov	x22, x0
  414e04:	mov	x0, x21
  414e08:	bl	406b90 <free@plt>
  414e0c:	mov	x0, x20
  414e10:	bl	406b90 <free@plt>
  414e14:	mov	x0, x19
  414e18:	bl	406b90 <free@plt>
  414e1c:	mov	x0, x22
  414e20:	ldp	x19, x20, [sp, #16]
  414e24:	ldp	x21, x22, [sp, #32]
  414e28:	ldp	x23, x24, [sp, #48]
  414e2c:	ldp	x25, x26, [sp, #64]
  414e30:	ldp	x29, x30, [sp], #80
  414e34:	ret
  414e38:	stp	x29, x30, [sp, #-96]!
  414e3c:	mov	x29, sp
  414e40:	stp	x19, x20, [sp, #16]
  414e44:	mov	x20, x0
  414e48:	ldr	x19, [x0, #64]
  414e4c:	stp	x23, x24, [sp, #48]
  414e50:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  414e54:	cbz	x19, 415240 <construct_command_argv@@Base+0x4d0>
  414e58:	ldr	x1, [x20, #40]
  414e5c:	stp	x21, x22, [sp, #32]
  414e60:	ldr	w3, [x20, #72]
  414e64:	ldrb	w0, [x0, #80]
  414e68:	ldr	x2, [x1, #32]
  414e6c:	sub	w3, w3, #0x1
  414e70:	ldr	w1, [x1, #132]
  414e74:	ldr	x4, [x2, #40]
  414e78:	ldrb	w21, [x4, w3, uxtw]
  414e7c:	orr	w21, w21, w1
  414e80:	ubfx	x1, x21, #2, #1
  414e84:	bfi	w0, w1, #1, #1
  414e88:	strb	w0, [x20, #80]
  414e8c:	ldrb	w1, [x19]
  414e90:	cbz	w1, 414ed4 <construct_command_argv@@Base+0x164>
  414e94:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  414e98:	add	x2, x2, #0x448
  414e9c:	b	414ec0 <construct_command_argv@@Base+0x150>
  414ea0:	cmp	w1, #0x2b
  414ea4:	b.eq	415148 <construct_command_argv@@Base+0x3d8>  // b.none
  414ea8:	cmp	w1, #0x2d
  414eac:	b.eq	415150 <construct_command_argv@@Base+0x3e0>  // b.none
  414eb0:	ldrh	w1, [x2, w1, sxtw #1]
  414eb4:	tbz	w1, #1, 414ed4 <construct_command_argv@@Base+0x164>
  414eb8:	ldrb	w1, [x19, #1]!
  414ebc:	cbz	w1, 414ed4 <construct_command_argv@@Base+0x164>
  414ec0:	cmp	w1, #0x40
  414ec4:	b.ne	414ea0 <construct_command_argv@@Base+0x130>  // b.any
  414ec8:	ldrb	w1, [x19, #1]!
  414ecc:	orr	w21, w21, #0x2
  414ed0:	cbnz	w1, 414ec0 <construct_command_argv@@Base+0x150>
  414ed4:	ldrb	w0, [x20, #80]
  414ed8:	and	w23, w21, #0x1
  414edc:	mov	x2, x19
  414ee0:	bfi	w0, w21, #4, #1
  414ee4:	strb	w0, [x20, #80]
  414ee8:	ldrb	w0, [x4, w3, uxtw]
  414eec:	orr	w0, w23, w0
  414ef0:	strb	w0, [x4, w3, uxtw]
  414ef4:	ldr	x0, [x20, #40]
  414ef8:	ldrb	w1, [x19]
  414efc:	ldr	x0, [x0, #32]
  414f00:	ldrb	w4, [x0, #50]
  414f04:	cbz	w1, 414f2c <construct_command_argv@@Base+0x1bc>
  414f08:	mov	x0, x19
  414f0c:	nop
  414f10:	strb	w1, [x2], #1
  414f14:	cmp	w1, #0xa
  414f18:	add	x3, x0, #0x1
  414f1c:	ldrb	w1, [x0, #1]
  414f20:	b.eq	41515c <construct_command_argv@@Base+0x3ec>  // b.none
  414f24:	mov	x0, x3
  414f28:	cbnz	w1, 414f10 <construct_command_argv@@Base+0x1a0>
  414f2c:	strb	wzr, [x2]
  414f30:	add	x1, sp, #0x58
  414f34:	add	x4, x20, #0x30
  414f38:	mov	x0, x19
  414f3c:	ldr	x2, [x20, #40]
  414f40:	ldr	w3, [x20, #72]
  414f44:	ldr	x5, [x2, #32]
  414f48:	sub	w3, w3, #0x1
  414f4c:	ldr	x5, [x5, #40]
  414f50:	str	xzr, [sp, #88]
  414f54:	ldrb	w3, [x5, w3, uxtw]
  414f58:	bl	414d70 <construct_command_argv@@Base>
  414f5c:	mov	x22, x0
  414f60:	ldr	x1, [sp, #88]
  414f64:	cbz	x1, 4152cc <construct_command_argv@@Base+0x55c>
  414f68:	add	x0, x1, #0x1
  414f6c:	str	x0, [sp, #88]
  414f70:	strb	wzr, [x1]
  414f74:	ldr	x0, [sp, #88]
  414f78:	str	x0, [x20, #64]
  414f7c:	cbz	x22, 4152d4 <construct_command_argv@@Base+0x564>
  414f80:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  414f84:	ldr	w0, [x0, #3404]
  414f88:	cbnz	w0, 415170 <construct_command_argv@@Base+0x400>
  414f8c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  414f90:	ldr	w0, [x0, #2188]
  414f94:	cbnz	w0, 41532c <construct_command_argv@@Base+0x5bc>
  414f98:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  414f9c:	str	x25, [sp, #64]
  414fa0:	mov	w2, #0x0                   	// #0
  414fa4:	ldr	w0, [x0, #3296]
  414fa8:	cbz	w0, 414fb8 <construct_command_argv@@Base+0x248>
  414fac:	cmp	w0, #0x3
  414fb0:	eor	w2, w23, #0x1
  414fb4:	csinc	w2, w2, wzr, ne  // ne = any
  414fb8:	ldrb	w1, [x20, #24]
  414fbc:	add	x0, x20, #0x10
  414fc0:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  414fc4:	bfxil	w1, w2, #0, #1
  414fc8:	strb	w1, [x20, #24]
  414fcc:	tbnz	w1, #0, 4152c4 <construct_command_argv@@Base+0x554>
  414fd0:	str	xzr, [x24, #3504]
  414fd4:	bl	419480 <output_dump@@Base>
  414fd8:	adrp	x25, 446000 <commands_started@@Base+0x1c8>
  414fdc:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  414fe0:	ldr	w0, [x25, #1984]
  414fe4:	ldr	w1, [x1, #3388]
  414fe8:	orr	w0, w0, w1
  414fec:	cbnz	w0, 4151a4 <construct_command_argv@@Base+0x434>
  414ff0:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  414ff4:	and	w0, w21, #0x2
  414ff8:	ldr	w1, [x1, #3300]
  414ffc:	orr	w0, w0, w1
  415000:	cbz	w0, 4151a4 <construct_command_argv@@Base+0x434>
  415004:	nop
  415008:	adrp	x1, 445000 <output_context@@Base+0x1250>
  41500c:	ldr	x19, [x22]
  415010:	ldr	w0, [x1, #3640]
  415014:	add	w0, w0, #0x1
  415018:	str	w0, [x1, #3640]
  41501c:	cbz	x19, 41502c <construct_command_argv@@Base+0x2bc>
  415020:	mov	x0, x19
  415024:	bl	413dc0 <is_bourne_compatible_shell@@Base>
  415028:	cbnz	w0, 4151c8 <construct_command_argv@@Base+0x458>
  41502c:	ldr	w1, [x25, #1984]
  415030:	eor	w0, w23, #0x1
  415034:	cmp	w1, #0x0
  415038:	csel	w0, w0, wzr, ne  // ne = any
  41503c:	cbnz	w0, 415228 <construct_command_argv@@Base+0x4b8>
  415040:	bl	419910 <output_start@@Base>
  415044:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  415048:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41504c:	add	x19, x19, #0x388
  415050:	ldr	x0, [x0, #384]
  415054:	bl	406c20 <fflush@plt>
  415058:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41505c:	ldr	x0, [x0, #360]
  415060:	bl	406c20 <fflush@plt>
  415064:	ldr	w1, [x19, #12]
  415068:	ldrb	w0, [x20, #80]
  41506c:	cmp	w1, #0x0
  415070:	cset	w1, eq  // eq = none
  415074:	bfi	w0, w1, #2, #1
  415078:	strb	w0, [x20, #80]
  41507c:	tbz	w0, #2, 415088 <construct_command_argv@@Base+0x318>
  415080:	mov	w0, #0x1                   	// #1
  415084:	str	w0, [x19, #12]
  415088:	ldrb	w0, [x20, #80]
  41508c:	ldr	x1, [x20, #8]
  415090:	and	w0, w0, #0xfffffff7
  415094:	strb	w0, [x20, #80]
  415098:	cbz	x1, 41531c <construct_command_argv@@Base+0x5ac>
  41509c:	ldrb	w3, [x20, #80]
  4150a0:	tbz	w3, #0, 415268 <construct_command_argv@@Base+0x4f8>
  4150a4:	mov	w2, #0x0                   	// #0
  4150a8:	ldr	x21, [x20, #8]
  4150ac:	tbz	w3, #2, 415310 <construct_command_argv@@Base+0x5a0>
  4150b0:	add	x4, sp, #0x58
  4150b4:	mov	x1, x21
  4150b8:	add	x5, sp, #0x54
  4150bc:	add	x3, sp, #0x50
  4150c0:	mov	x0, x22
  4150c4:	bl	425c58 <start_remote_job@@Base>
  4150c8:	cbnz	w0, 415268 <construct_command_argv@@Base+0x4f8>
  4150cc:	ldrb	w0, [x20, #80]
  4150d0:	tbz	w0, #2, 4150e8 <construct_command_argv@@Base+0x378>
  4150d4:	ldr	w1, [sp, #84]
  4150d8:	cbnz	w1, 4150e8 <construct_command_argv@@Base+0x378>
  4150dc:	and	w0, w0, #0xfffffffb
  4150e0:	str	wzr, [x19, #12]
  4150e4:	strb	w0, [x20, #80]
  4150e8:	ldrb	w1, [x20, #80]
  4150ec:	ldr	w2, [sp, #80]
  4150f0:	ldr	w0, [sp, #88]
  4150f4:	str	w0, [x20, #76]
  4150f8:	bfxil	w1, w2, #0, #1
  4150fc:	strb	w1, [x20, #80]
  415100:	tbnz	w0, #31, 415110 <construct_command_argv@@Base+0x3a0>
  415104:	ldr	x0, [x19, #16]
  415108:	add	x0, x0, #0x1
  41510c:	str	x0, [x19, #16]
  415110:	ldr	x0, [x20, #40]
  415114:	mov	w1, #0x2                   	// #2
  415118:	bl	40d9f0 <set_command_state@@Base>
  41511c:	ldr	x0, [x22]
  415120:	bl	406b90 <free@plt>
  415124:	mov	x0, x22
  415128:	bl	406b90 <free@plt>
  41512c:	ldp	x21, x22, [sp, #32]
  415130:	str	xzr, [x24, #3504]
  415134:	ldr	x25, [sp, #64]
  415138:	ldp	x19, x20, [sp, #16]
  41513c:	ldp	x23, x24, [sp, #48]
  415140:	ldp	x29, x30, [sp], #96
  415144:	ret
  415148:	orr	w21, w21, #0x1
  41514c:	b	414eb8 <construct_command_argv@@Base+0x148>
  415150:	orr	w0, w0, #0x2
  415154:	strb	w0, [x20, #80]
  415158:	b	414eb8 <construct_command_argv@@Base+0x148>
  41515c:	cmp	w1, w4
  415160:	b.ne	414f24 <construct_command_argv@@Base+0x1b4>  // b.any
  415164:	ldrb	w1, [x0, #2]!
  415168:	cbnz	w1, 414f10 <construct_command_argv@@Base+0x1a0>
  41516c:	b	414f2c <construct_command_argv@@Base+0x1bc>
  415170:	cbnz	w23, 414f98 <construct_command_argv@@Base+0x228>
  415174:	ldr	x0, [x22]
  415178:	bl	406b90 <free@plt>
  41517c:	mov	x0, x22
  415180:	bl	406b90 <free@plt>
  415184:	ldr	x0, [x20, #40]
  415188:	mov	w2, #0x2                   	// #2
  41518c:	ldrb	w1, [x0, #136]
  415190:	bfxil	w1, w2, #0, #2
  415194:	strb	w1, [x0, #136]
  415198:	bl	41f620 <notice_finished_file@@Base>
  41519c:	ldp	x21, x22, [sp, #32]
  4151a0:	b	415138 <construct_command_argv@@Base+0x3c8>
  4151a4:	mov	x0, x19
  4151a8:	bl	406680 <strlen@plt>
  4151ac:	mov	x3, x19
  4151b0:	mov	x1, x0
  4151b4:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  4151b8:	mov	w0, #0x0                   	// #0
  4151bc:	add	x2, x2, #0x4a0
  4151c0:	bl	419c88 <message@@Base>
  4151c4:	b	415008 <construct_command_argv@@Base+0x298>
  4151c8:	ldr	x0, [x22, #8]
  4151cc:	cbz	x0, 41502c <construct_command_argv@@Base+0x2bc>
  4151d0:	ldrb	w1, [x0]
  4151d4:	cmp	w1, #0x2d
  4151d8:	b.ne	41502c <construct_command_argv@@Base+0x2bc>  // b.any
  4151dc:	ldrb	w1, [x0, #1]
  4151e0:	cmp	w1, #0x63
  4151e4:	b.eq	41534c <construct_command_argv@@Base+0x5dc>  // b.none
  4151e8:	cmp	w1, #0x65
  4151ec:	b.ne	41502c <construct_command_argv@@Base+0x2bc>  // b.any
  4151f0:	ldrb	w1, [x0, #2]
  4151f4:	cmp	w1, #0x63
  4151f8:	b.ne	41502c <construct_command_argv@@Base+0x2bc>  // b.any
  4151fc:	ldrb	w0, [x0, #3]
  415200:	cbnz	w0, 41502c <construct_command_argv@@Base+0x2bc>
  415204:	ldr	x0, [x22, #16]
  415208:	cbz	x0, 41502c <construct_command_argv@@Base+0x2bc>
  41520c:	ldrb	w1, [x0]
  415210:	cmp	w1, #0x3a
  415214:	b.ne	41502c <construct_command_argv@@Base+0x2bc>  // b.any
  415218:	ldrb	w0, [x0, #1]
  41521c:	cbnz	w0, 41502c <construct_command_argv@@Base+0x2bc>
  415220:	ldr	x0, [x22, #24]
  415224:	cbnz	x0, 41502c <construct_command_argv@@Base+0x2bc>
  415228:	mov	x0, x19
  41522c:	bl	406b90 <free@plt>
  415230:	mov	x0, x22
  415234:	bl	406b90 <free@plt>
  415238:	ldp	x21, x22, [sp, #32]
  41523c:	ldr	x25, [sp, #64]
  415240:	mov	x0, x20
  415244:	bl	413d58 <try_implicit_rule@@Base+0x4b0>
  415248:	cbz	w0, 4152e8 <construct_command_argv@@Base+0x578>
  41524c:	mov	x0, x20
  415250:	bl	414e38 <construct_command_argv@@Base+0xc8>
  415254:	str	xzr, [x24, #3504]
  415258:	ldp	x19, x20, [sp, #16]
  41525c:	ldp	x23, x24, [sp, #48]
  415260:	ldp	x29, x30, [sp], #96
  415264:	ret
  415268:	mov	x2, #0x0                   	// #0
  41526c:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  415270:	mov	w0, #0x0                   	// #0
  415274:	add	x1, x1, #0x808
  415278:	bl	4066e0 <sigprocmask@plt>
  41527c:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  415280:	ldrb	w1, [x20, #80]
  415284:	mov	w0, w23
  415288:	ldr	x25, [x21, #400]
  41528c:	and	w1, w1, #0xfffffffe
  415290:	strb	w1, [x20, #80]
  415294:	bl	4259f8 <jobserver_pre_child@@Base>
  415298:	ldrb	w1, [x20, #80]
  41529c:	mov	x2, x22
  4152a0:	mov	x0, x20
  4152a4:	ubfx	x1, x1, #2, #1
  4152a8:	bl	414870 <child_execute_job@@Base>
  4152ac:	str	w0, [x20, #76]
  4152b0:	mov	w0, w23
  4152b4:	str	x25, [x21, #400]
  4152b8:	bl	425ba0 <jobserver_post_child@@Base>
  4152bc:	ldr	w0, [x20, #76]
  4152c0:	b	415100 <construct_command_argv@@Base+0x390>
  4152c4:	str	x0, [x24, #3504]
  4152c8:	b	414fd8 <construct_command_argv@@Base+0x268>
  4152cc:	str	xzr, [x20, #64]
  4152d0:	cbnz	x22, 414f80 <construct_command_argv@@Base+0x210>
  4152d4:	mov	x0, x20
  4152d8:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  4152dc:	ldp	x21, x22, [sp, #32]
  4152e0:	bl	413d58 <try_implicit_rule@@Base+0x4b0>
  4152e4:	cbnz	w0, 41524c <construct_command_argv@@Base+0x4dc>
  4152e8:	ldr	x0, [x20, #40]
  4152ec:	mov	w1, #0x2                   	// #2
  4152f0:	bl	40d9f0 <set_command_state@@Base>
  4152f4:	ldr	x0, [x20, #40]
  4152f8:	ldrb	w1, [x0, #136]
  4152fc:	and	w1, w1, #0xfffffffc
  415300:	strb	w1, [x0, #136]
  415304:	bl	41f620 <notice_finished_file@@Base>
  415308:	str	xzr, [x24, #3504]
  41530c:	b	415258 <construct_command_argv@@Base+0x4e8>
  415310:	bl	425be8 <get_bad_stdin@@Base>
  415314:	mov	w2, w0
  415318:	b	4150b0 <construct_command_argv@@Base+0x340>
  41531c:	ldr	x0, [x20, #40]
  415320:	bl	423b48 <target_environment@@Base>
  415324:	str	x0, [x20, #8]
  415328:	b	41509c <construct_command_argv@@Base+0x32c>
  41532c:	cbnz	w23, 414f98 <construct_command_argv@@Base+0x228>
  415330:	ldr	x0, [x22]
  415334:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  415338:	bl	406b90 <free@plt>
  41533c:	mov	x0, x22
  415340:	bl	406b90 <free@plt>
  415344:	ldp	x21, x22, [sp, #32]
  415348:	b	415240 <construct_command_argv@@Base+0x4d0>
  41534c:	ldrb	w0, [x0, #2]
  415350:	cbz	w0, 415204 <construct_command_argv@@Base+0x494>
  415354:	b	41502c <construct_command_argv@@Base+0x2bc>

0000000000415358 <reap_children@@Base>:
  415358:	stp	x29, x30, [sp, #-256]!
  41535c:	mov	x29, sp
  415360:	stp	x19, x20, [sp, #16]
  415364:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  415368:	add	x20, x20, #0x388
  41536c:	stp	x21, x22, [sp, #32]
  415370:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  415374:	add	x21, x21, #0x440
  415378:	ldr	x19, [x20, #24]
  41537c:	stp	x23, x24, [sp, #48]
  415380:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  415384:	add	x24, x24, #0x380
  415388:	mov	w23, w0
  41538c:	mov	w0, #0x1                   	// #1
  415390:	stp	x25, x26, [sp, #64]
  415394:	stp	x27, x28, [sp, #80]
  415398:	stp	w0, w1, [sp, #96]
  41539c:	cbz	x19, 415770 <reap_children@@Base+0x418>
  4153a0:	ldr	w0, [sp, #96]
  4153a4:	orr	w0, w0, w23
  4153a8:	cbz	w0, 41577c <reap_children@@Base+0x424>
  4153ac:	ldr	w0, [sp, #100]
  4153b0:	cmp	w0, #0x0
  4153b4:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  4153b8:	b.ne	415958 <reap_children@@Base+0x600>  // b.any
  4153bc:	ldr	w0, [x20, #8]
  4153c0:	cbz	w0, 4153cc <reap_children@@Base+0x74>
  4153c4:	sub	w0, w0, #0x1
  4153c8:	str	w0, [x20, #8]
  4153cc:	ldr	w0, [x24]
  4153d0:	cmp	w0, #0x0
  4153d4:	cset	w28, ne  // ne = any
  4153d8:	cbz	x19, 415498 <reap_children@@Base+0x140>
  4153dc:	adrp	x22, 428000 <_IO_stdin_used@@Base+0x1c20>
  4153e0:	mov	w27, #0x0                   	// #0
  4153e4:	add	x22, x22, #0xa88
  4153e8:	mov	x25, #0x0                   	// #0
  4153ec:	b	415400 <reap_children@@Base+0xa8>
  4153f0:	ldr	x0, [x19, #32]
  4153f4:	mov	x25, x19
  4153f8:	cbz	x0, 415494 <reap_children@@Base+0x13c>
  4153fc:	mov	x19, x0
  415400:	ldrb	w2, [x19, #80]
  415404:	ldr	w1, [x19, #76]
  415408:	mvn	w0, w2
  41540c:	and	w2, w2, #0x1
  415410:	and	w0, w0, #0x1
  415414:	orr	w27, w27, w2
  415418:	orr	w28, w28, w0
  41541c:	tbnz	w1, #31, 415600 <reap_children@@Base+0x2a8>
  415420:	ldr	w0, [x21]
  415424:	tbz	w0, #2, 4153f0 <reap_children@@Base+0x98>
  415428:	mov	x1, x22
  41542c:	mov	w2, #0x5                   	// #5
  415430:	mov	x0, #0x0                   	// #0
  415434:	bl	406cd0 <dcgettext@plt>
  415438:	ldrsw	x2, [x19, #76]
  41543c:	mov	x25, x0
  415440:	ldr	x4, [x19, #40]
  415444:	add	x0, x20, #0x28
  415448:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  41544c:	add	x1, x1, #0x510
  415450:	ldr	x26, [x4]
  415454:	bl	406730 <sprintf@plt>
  415458:	ldrb	w0, [x19, #80]
  41545c:	adrp	x4, 42b000 <_IO_stdin_used@@Base+0x4c20>
  415460:	add	x4, x4, #0x350
  415464:	tbnz	w0, #0, 4155e4 <reap_children@@Base+0x28c>
  415468:	mov	x2, x26
  41546c:	mov	x0, x25
  415470:	add	x3, x20, #0x28
  415474:	mov	x1, x19
  415478:	bl	406d60 <printf@plt>
  41547c:	mov	x25, x19
  415480:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  415484:	ldr	x0, [x0, #384]
  415488:	bl	406c20 <fflush@plt>
  41548c:	ldr	x0, [x19, #32]
  415490:	cbnz	x0, 4153fc <reap_children@@Base+0xa4>
  415494:	cbnz	w27, 4158c8 <reap_children@@Base+0x570>
  415498:	cbz	w28, 41577c <reap_children@@Base+0x424>
  41549c:	mov	w27, #0x0                   	// #0
  4154a0:	cbnz	w23, 41589c <reap_children@@Base+0x544>
  4154a4:	add	x1, sp, #0x70
  4154a8:	mov	w2, #0x1                   	// #1
  4154ac:	mov	w0, #0xffffffff            	// #-1
  4154b0:	bl	406da0 <waitpid@plt>
  4154b4:	cmp	w0, #0x0
  4154b8:	b.lt	4158bc <reap_children@@Base+0x564>  // b.tstop
  4154bc:	b.eq	4158f0 <reap_children@@Base+0x598>  // b.none
  4154c0:	ldr	w1, [sp, #112]
  4154c4:	ldr	w5, [x24]
  4154c8:	and	w3, w1, #0x7f
  4154cc:	and	w6, w1, #0x80
  4154d0:	add	w4, w3, #0x1
  4154d4:	ubfx	x2, x1, #8, #8
  4154d8:	str	w6, [sp, #124]
  4154dc:	sbfx	x1, x4, #1, #7
  4154e0:	cmp	w1, #0x0
  4154e4:	csel	w3, w3, wzr, gt
  4154e8:	stp	w2, w3, [sp, #116]
  4154ec:	cmp	w5, w0
  4154f0:	b.eq	415c0c <reap_children@@Base+0x8b4>  // b.none
  4154f4:	mov	w2, #0x0                   	// #0
  4154f8:	ldr	x3, [x20, #24]
  4154fc:	cbz	x3, 415770 <reap_children@@Base+0x418>
  415500:	mov	x19, x3
  415504:	mov	x25, #0x0                   	// #0
  415508:	b	41551c <reap_children@@Base+0x1c4>
  41550c:	ldr	x1, [x19, #32]
  415510:	mov	x25, x19
  415514:	cbz	x1, 415a48 <reap_children@@Base+0x6f0>
  415518:	mov	x19, x1
  41551c:	ldr	w1, [x19, #76]
  415520:	cmp	w1, w0
  415524:	b.ne	41550c <reap_children@@Base+0x1b4>  // b.any
  415528:	ldrb	w1, [x19, #80]
  41552c:	and	w1, w1, #0x1
  415530:	cmp	w1, w2
  415534:	b.ne	41550c <reap_children@@Base+0x1b4>  // b.any
  415538:	ldr	w1, [x21]
  41553c:	ldr	w0, [sp, #120]
  415540:	tbz	w1, #2, 4155ac <reap_children@@Base+0x254>
  415544:	ldr	w1, [sp, #116]
  415548:	orr	w0, w0, w1
  41554c:	cbz	w0, 415b48 <reap_children@@Base+0x7f0>
  415550:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  415554:	mov	w2, #0x5                   	// #5
  415558:	add	x1, x1, #0xaf8
  41555c:	mov	x0, #0x0                   	// #0
  415560:	bl	406cd0 <dcgettext@plt>
  415564:	mov	x22, x0
  415568:	ldrsw	x2, [x19, #76]
  41556c:	add	x0, x20, #0x28
  415570:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  415574:	add	x1, x1, #0x510
  415578:	bl	406730 <sprintf@plt>
  41557c:	ldrb	w0, [x19, #80]
  415580:	adrp	x3, 42b000 <_IO_stdin_used@@Base+0x4c20>
  415584:	add	x3, x3, #0x350
  415588:	tbnz	w0, #0, 415b0c <reap_children@@Base+0x7b4>
  41558c:	add	x2, x20, #0x28
  415590:	mov	x1, x19
  415594:	mov	x0, x22
  415598:	bl	406d60 <printf@plt>
  41559c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4155a0:	ldr	x0, [x0, #384]
  4155a4:	bl	406c20 <fflush@plt>
  4155a8:	ldr	w0, [sp, #120]
  4155ac:	ldr	x1, [x20, #16]
  4155b0:	cbz	x1, 4155bc <reap_children@@Base+0x264>
  4155b4:	sub	x1, x1, #0x1
  4155b8:	str	x1, [x20, #16]
  4155bc:	mov	w22, #0x2                   	// #2
  4155c0:	cbnz	w0, 415618 <reap_children@@Base+0x2c0>
  4155c4:	ldr	w22, [sp, #116]
  4155c8:	cmp	w22, #0x7f
  4155cc:	b.eq	41560c <reap_children@@Base+0x2b4>  // b.none
  4155d0:	cbz	w22, 415618 <reap_children@@Base+0x2c0>
  4155d4:	cmp	w22, #0x1
  4155d8:	b.eq	4157f4 <reap_children@@Base+0x49c>  // b.none
  4155dc:	mov	w22, #0x2                   	// #2
  4155e0:	b	415618 <reap_children@@Base+0x2c0>
  4155e4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  4155e8:	mov	w2, #0x5                   	// #5
  4155ec:	add	x1, x1, #0xaa8
  4155f0:	mov	x0, #0x0                   	// #0
  4155f4:	bl	406cd0 <dcgettext@plt>
  4155f8:	mov	x4, x0
  4155fc:	b	415468 <reap_children@@Base+0x110>
  415600:	mov	w0, #0x7f                  	// #127
  415604:	stp	w0, wzr, [sp, #116]
  415608:	str	wzr, [sp, #124]
  41560c:	ldr	x1, [x19]
  415610:	mov	w22, #0x2                   	// #2
  415614:	cbnz	x1, 4157ac <reap_children@@Base+0x454>
  415618:	ldr	x27, [x19, #48]
  41561c:	cbz	x27, 415658 <reap_children@@Base+0x300>
  415620:	ldr	w0, [x21]
  415624:	tbnz	w0, #2, 4159b8 <reap_children@@Base+0x660>
  415628:	bl	406d70 <__errno_location@plt>
  41562c:	mov	x1, x0
  415630:	mov	x0, x27
  415634:	mov	x27, x1
  415638:	str	wzr, [x1]
  41563c:	bl	406700 <remove@plt>
  415640:	cbz	w0, 41564c <reap_children@@Base+0x2f4>
  415644:	ldr	w0, [x21]
  415648:	tbnz	w0, #2, 415adc <reap_children@@Base+0x784>
  41564c:	ldr	x0, [x19, #48]
  415650:	bl	406b90 <free@plt>
  415654:	str	xzr, [x19, #48]
  415658:	ldrb	w0, [x19, #80]
  41565c:	tbz	w0, #2, 415664 <reap_children@@Base+0x30c>
  415660:	str	wzr, [x20, #12]
  415664:	cbz	w22, 415828 <reap_children@@Base+0x4d0>
  415668:	tbnz	w0, #1, 415814 <reap_children@@Base+0x4bc>
  41566c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  415670:	ldr	w0, [x0, #3408]
  415674:	cbnz	w0, 415814 <reap_children@@Base+0x4bc>
  415678:	ldrb	w23, [x19, #80]
  41567c:	cmp	w22, #0x2
  415680:	cset	w1, eq  // eq = none
  415684:	add	w1, w1, #0x2
  415688:	ubfx	x23, x23, #6, #1
  41568c:	eor	w0, w23, #0x1
  415690:	csel	w0, w0, wzr, eq  // eq = none
  415694:	cbnz	w0, 415b70 <reap_children@@Base+0x818>
  415698:	ldr	x2, [x19, #40]
  41569c:	adrp	x27, 443000 <expanding_var@@Base+0x338>
  4156a0:	add	x27, x27, #0x38
  4156a4:	ldrb	w3, [x2, #136]
  4156a8:	ldr	w0, [x27, #76]
  4156ac:	bfxil	w3, w1, #0, #2
  4156b0:	strb	w3, [x2, #136]
  4156b4:	cmn	w0, #0x1
  4156b8:	b.eq	415be4 <reap_children@@Base+0x88c>  // b.none
  4156bc:	ldr	w2, [sp, #100]
  4156c0:	ldr	w1, [sp, #120]
  4156c4:	cmp	w2, #0x0
  4156c8:	csinc	w23, w23, wzr, eq  // eq = none
  4156cc:	orr	w0, w0, w1
  4156d0:	cbz	w0, 4156dc <reap_children@@Base+0x384>
  4156d4:	mov	x0, x19
  4156d8:	bl	40a628 <delete_child_targets@@Base>
  4156dc:	adrp	x28, 443000 <expanding_var@@Base+0x338>
  4156e0:	adrp	x27, 446000 <commands_started@@Base+0x1c8>
  4156e4:	add	x28, x28, #0x1d0
  4156e8:	add	x27, x27, #0x808
  4156ec:	nop
  4156f0:	add	x0, x19, #0x10
  4156f4:	bl	419480 <output_dump@@Base>
  4156f8:	ldr	w0, [x28]
  4156fc:	cbz	w0, 415890 <reap_children@@Base+0x538>
  415700:	mov	x1, x27
  415704:	mov	x2, #0x0                   	// #0
  415708:	mov	w0, #0x0                   	// #0
  41570c:	bl	4066e0 <sigprocmask@plt>
  415710:	ldr	w0, [x19, #76]
  415714:	cmp	w0, #0x0
  415718:	b.le	415724 <reap_children@@Base+0x3cc>
  41571c:	ldr	w0, [x21]
  415720:	tbnz	w0, #2, 415a50 <reap_children@@Base+0x6f8>
  415724:	ldr	w0, [x20, #140]
  415728:	cbz	w0, 41573c <reap_children@@Base+0x3e4>
  41572c:	ldrb	w1, [x19, #80]
  415730:	ubfx	x1, x1, #5, #1
  415734:	sub	w0, w0, w1
  415738:	str	w0, [x20, #140]
  41573c:	ldr	x0, [x19, #32]
  415740:	cbz	x25, 41597c <reap_children@@Base+0x624>
  415744:	str	x0, [x25, #32]
  415748:	mov	x0, x19
  41574c:	bl	413c00 <try_implicit_rule@@Base+0x358>
  415750:	mov	x1, x27
  415754:	mov	x2, #0x0                   	// #0
  415758:	mov	w0, #0x1                   	// #1
  41575c:	bl	4066e0 <sigprocmask@plt>
  415760:	cbz	w23, 41599c <reap_children@@Base+0x644>
  415764:	ldr	x19, [x20, #24]
  415768:	mov	w23, #0x0                   	// #0
  41576c:	cbnz	x19, 4153a0 <reap_children@@Base+0x48>
  415770:	ldr	w0, [x24]
  415774:	mov	x19, #0x0                   	// #0
  415778:	cbnz	w0, 4153a0 <reap_children@@Base+0x48>
  41577c:	ldp	x19, x20, [sp, #16]
  415780:	ldp	x21, x22, [sp, #32]
  415784:	ldp	x23, x24, [sp, #48]
  415788:	ldp	x25, x26, [sp, #64]
  41578c:	ldp	x27, x28, [sp, #80]
  415790:	ldp	x29, x30, [sp], #256
  415794:	ret
  415798:	bl	406d70 <__errno_location@plt>
  41579c:	ldr	w0, [x0]
  4157a0:	cmp	w0, #0x4
  4157a4:	b.ne	415bd8 <reap_children@@Base+0x880>  // b.any
  4157a8:	ldr	x1, [x19]
  4157ac:	add	x2, sp, #0x80
  4157b0:	mov	w0, #0x0                   	// #0
  4157b4:	bl	406d90 <__xstat@plt>
  4157b8:	cmn	w0, #0x1
  4157bc:	b.eq	415798 <reap_children@@Base+0x440>  // b.none
  4157c0:	tbnz	w0, #31, 415c48 <reap_children@@Base+0x8f0>
  4157c4:	ldr	w0, [sp, #144]
  4157c8:	and	w1, w0, #0xf000
  4157cc:	cmp	w1, #0x4, lsl #12
  4157d0:	b.eq	415b8c <reap_children@@Base+0x834>  // b.none
  4157d4:	tbz	w0, #6, 415b8c <reap_children@@Base+0x834>
  4157d8:	ldr	x0, [sp, #176]
  4157dc:	cbz	x0, 415bd4 <reap_children@@Base+0x87c>
  4157e0:	ldr	w0, [sp, #120]
  4157e4:	cbnz	w0, 4155dc <reap_children@@Base+0x284>
  4157e8:	ldr	w22, [sp, #116]
  4157ec:	cbz	w22, 415618 <reap_children@@Base+0x2c0>
  4157f0:	b	4155d4 <reap_children@@Base+0x27c>
  4157f4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4157f8:	ldr	w0, [x0, #3404]
  4157fc:	cbz	w0, 4155dc <reap_children@@Base+0x284>
  415800:	ldrb	w1, [x19, #80]
  415804:	mov	w0, #0x2                   	// #2
  415808:	tst	x1, #0x10
  41580c:	csel	w22, w22, w0, ne  // ne = any
  415810:	b	415618 <reap_children@@Base+0x2c0>
  415814:	ldp	w1, w2, [sp, #116]
  415818:	mov	x0, x19
  41581c:	ldr	w3, [sp, #124]
  415820:	mov	w4, #0x1                   	// #1
  415824:	bl	4139a8 <try_implicit_rule@@Base+0x100>
  415828:	mov	x0, x19
  41582c:	bl	413d58 <try_implicit_rule@@Base+0x4b0>
  415830:	mov	w22, w0
  415834:	cbz	w0, 415930 <reap_children@@Base+0x5d8>
  415838:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41583c:	add	x28, x0, #0x1d0
  415840:	ldr	w0, [x0, #464]
  415844:	cbz	w0, 4159e8 <reap_children@@Base+0x690>
  415848:	ldr	x1, [x19, #40]
  41584c:	adrp	x27, 446000 <commands_started@@Base+0x1c8>
  415850:	add	x27, x27, #0x808
  415854:	ldrb	w0, [x1, #136]
  415858:	orr	w0, w0, #0x3
  41585c:	strb	w0, [x1, #136]
  415860:	and	w0, w0, #0xff
  415864:	tst	x0, #0x3
  415868:	mov	w23, #0x1                   	// #1
  41586c:	mov	w22, #0x0                   	// #0
  415870:	b.eq	4156f0 <reap_children@@Base+0x398>  // b.none
  415874:	mov	x0, x19
  415878:	bl	40a628 <delete_child_targets@@Base>
  41587c:	add	x0, x19, #0x10
  415880:	bl	419480 <output_dump@@Base>
  415884:	ldr	w0, [x28]
  415888:	cbnz	w0, 415700 <reap_children@@Base+0x3a8>
  41588c:	nop
  415890:	ldr	x0, [x19, #40]
  415894:	bl	41f620 <notice_finished_file@@Base>
  415898:	b	415700 <reap_children@@Base+0x3a8>
  41589c:	add	x0, sp, #0x70
  4158a0:	bl	406c10 <wait@plt>
  4158a4:	cmn	w0, #0x1
  4158a8:	b.ne	4154b4 <reap_children@@Base+0x15c>  // b.any
  4158ac:	bl	406d70 <__errno_location@plt>
  4158b0:	ldr	w0, [x0]
  4158b4:	cmp	w0, #0x4
  4158b8:	b.eq	41589c <reap_children@@Base+0x544>  // b.none
  4158bc:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  4158c0:	add	x0, x0, #0xac8
  4158c4:	bl	419828 <pfatal_with_name@@Base>
  4158c8:	add	x2, sp, #0x7c
  4158cc:	add	x1, sp, #0x78
  4158d0:	add	x0, sp, #0x74
  4158d4:	mov	w3, #0x0                   	// #0
  4158d8:	bl	425c60 <remote_status@@Base>
  4158dc:	cmp	w0, #0x0
  4158e0:	mov	w2, #0x1                   	// #1
  4158e4:	b.gt	4154f8 <reap_children@@Base+0x1a0>
  4158e8:	b.ne	415c34 <reap_children@@Base+0x8dc>  // b.any
  4158ec:	cbnz	w28, 415c40 <reap_children@@Base+0x8e8>
  4158f0:	eor	w0, w27, #0x1
  4158f4:	cmp	w23, #0x0
  4158f8:	and	w0, w0, #0x1
  4158fc:	csinc	w0, w0, wzr, ne  // ne = any
  415900:	cbnz	w0, 41577c <reap_children@@Base+0x424>
  415904:	add	x2, sp, #0x7c
  415908:	add	x1, sp, #0x78
  41590c:	add	x0, sp, #0x74
  415910:	mov	w3, #0x1                   	// #1
  415914:	bl	425c60 <remote_status@@Base>
  415918:	cmp	w0, #0x0
  41591c:	b.lt	415c34 <reap_children@@Base+0x8dc>  // b.tstop
  415920:	b.eq	41577c <reap_children@@Base+0x424>  // b.none
  415924:	mov	w2, #0x1                   	// #1
  415928:	str	wzr, [sp, #96]
  41592c:	b	4154f8 <reap_children@@Base+0x1a0>
  415930:	ldr	x1, [x19, #40]
  415934:	adrp	x28, 443000 <expanding_var@@Base+0x338>
  415938:	adrp	x27, 446000 <commands_started@@Base+0x1c8>
  41593c:	add	x28, x28, #0x1d0
  415940:	add	x27, x27, #0x808
  415944:	mov	w23, #0x1                   	// #1
  415948:	ldrb	w0, [x1, #136]
  41594c:	and	w0, w0, #0xfffffffc
  415950:	strb	w0, [x1, #136]
  415954:	b	4156f0 <reap_children@@Base+0x398>
  415958:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41595c:	ldr	x0, [x0, #384]
  415960:	bl	406c20 <fflush@plt>
  415964:	ldr	w0, [x20, #32]
  415968:	cbz	w0, 415ab4 <reap_children@@Base+0x75c>
  41596c:	mov	w0, #0x1                   	// #1
  415970:	str	w0, [x20, #32]
  415974:	ldr	x19, [x20, #24]
  415978:	b	4153bc <reap_children@@Base+0x64>
  41597c:	str	x0, [x20, #24]
  415980:	mov	x0, x19
  415984:	bl	413c00 <try_implicit_rule@@Base+0x358>
  415988:	mov	x1, x27
  41598c:	mov	x2, #0x0                   	// #0
  415990:	mov	w0, #0x1                   	// #1
  415994:	bl	4066e0 <sigprocmask@plt>
  415998:	cbnz	w23, 415764 <reap_children@@Base+0x40c>
  41599c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  4159a0:	ldr	w1, [x28]
  4159a4:	ldr	w0, [x0, #1988]
  4159a8:	orr	w0, w0, w1
  4159ac:	cbnz	w0, 415764 <reap_children@@Base+0x40c>
  4159b0:	mov	w0, w22
  4159b4:	bl	417a70 <die@@Base>
  4159b8:	mov	w2, #0x5                   	// #5
  4159bc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  4159c0:	mov	x0, #0x0                   	// #0
  4159c4:	add	x1, x1, #0xb20
  4159c8:	bl	406cd0 <dcgettext@plt>
  4159cc:	ldr	x1, [x19, #48]
  4159d0:	bl	406d60 <printf@plt>
  4159d4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4159d8:	ldr	x0, [x0, #384]
  4159dc:	bl	406c20 <fflush@plt>
  4159e0:	ldr	x27, [x19, #48]
  4159e4:	b	415628 <reap_children@@Base+0x2d0>
  4159e8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4159ec:	ldr	w0, [x0, #3296]
  4159f0:	cmp	w0, #0x1
  4159f4:	b.eq	415b64 <reap_children@@Base+0x80c>  // b.none
  4159f8:	mov	w0, #0x0                   	// #0
  4159fc:	bl	425c50 <start_remote_job_p@@Base>
  415a00:	ldrb	w1, [x19, #80]
  415a04:	mov	w2, w0
  415a08:	adrp	x27, 446000 <commands_started@@Base+0x1c8>
  415a0c:	mov	x0, x19
  415a10:	add	x27, x27, #0x808
  415a14:	bfxil	w1, w2, #0, #1
  415a18:	strb	w1, [x19, #80]
  415a1c:	bl	414e38 <construct_command_argv@@Base+0xc8>
  415a20:	mov	x1, x27
  415a24:	mov	x2, #0x0                   	// #0
  415a28:	mov	w0, #0x1                   	// #1
  415a2c:	bl	4066e0 <sigprocmask@plt>
  415a30:	ldr	x0, [x19, #40]
  415a34:	ldrb	w0, [x0, #136]
  415a38:	and	w1, w0, #0xc
  415a3c:	cmp	w1, #0x8
  415a40:	b.ne	415864 <reap_children@@Base+0x50c>  // b.any
  415a44:	ldr	x3, [x20, #24]
  415a48:	mov	x19, x3
  415a4c:	b	41539c <reap_children@@Base+0x44>
  415a50:	mov	w2, #0x5                   	// #5
  415a54:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  415a58:	mov	x0, #0x0                   	// #0
  415a5c:	add	x1, x1, #0xb88
  415a60:	bl	406cd0 <dcgettext@plt>
  415a64:	mov	x4, x0
  415a68:	ldrsw	x2, [x19, #76]
  415a6c:	add	x0, x20, #0x28
  415a70:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  415a74:	add	x1, x1, #0x510
  415a78:	str	x4, [sp, #104]
  415a7c:	bl	406730 <sprintf@plt>
  415a80:	ldrb	w0, [x19, #80]
  415a84:	adrp	x3, 42b000 <_IO_stdin_used@@Base+0x4c20>
  415a88:	add	x3, x3, #0x350
  415a8c:	ldr	x4, [sp, #104]
  415a90:	tbnz	w0, #0, 415b28 <reap_children@@Base+0x7d0>
  415a94:	mov	x0, x4
  415a98:	add	x2, x20, #0x28
  415a9c:	mov	x1, x19
  415aa0:	bl	406d60 <printf@plt>
  415aa4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  415aa8:	ldr	x0, [x0, #384]
  415aac:	bl	406c20 <fflush@plt>
  415ab0:	b	415724 <reap_children@@Base+0x3cc>
  415ab4:	mov	w2, #0x5                   	// #5
  415ab8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  415abc:	mov	x0, #0x0                   	// #0
  415ac0:	add	x1, x1, #0xa60
  415ac4:	bl	406cd0 <dcgettext@plt>
  415ac8:	mov	x2, x0
  415acc:	mov	x1, #0x0                   	// #0
  415ad0:	mov	x0, #0x0                   	// #0
  415ad4:	bl	419dc8 <error@@Base>
  415ad8:	b	41596c <reap_children@@Base+0x614>
  415adc:	mov	w2, #0x5                   	// #5
  415ae0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  415ae4:	mov	x0, #0x0                   	// #0
  415ae8:	add	x1, x1, #0xb40
  415aec:	bl	406cd0 <dcgettext@plt>
  415af0:	ldr	w2, [x27]
  415af4:	ldr	x1, [x19, #48]
  415af8:	bl	406d60 <printf@plt>
  415afc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  415b00:	ldr	x0, [x0, #384]
  415b04:	bl	406c20 <fflush@plt>
  415b08:	b	41564c <reap_children@@Base+0x2f4>
  415b0c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  415b10:	mov	w2, #0x5                   	// #5
  415b14:	add	x1, x1, #0xaa8
  415b18:	mov	x0, #0x0                   	// #0
  415b1c:	bl	406cd0 <dcgettext@plt>
  415b20:	mov	x3, x0
  415b24:	b	41558c <reap_children@@Base+0x234>
  415b28:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  415b2c:	mov	w2, #0x5                   	// #5
  415b30:	add	x1, x1, #0xaa8
  415b34:	mov	x0, #0x0                   	// #0
  415b38:	bl	406cd0 <dcgettext@plt>
  415b3c:	mov	x3, x0
  415b40:	ldr	x4, [sp, #104]
  415b44:	b	415a94 <reap_children@@Base+0x73c>
  415b48:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  415b4c:	mov	w2, #0x5                   	// #5
  415b50:	add	x1, x1, #0xad0
  415b54:	mov	x0, #0x0                   	// #0
  415b58:	bl	406cd0 <dcgettext@plt>
  415b5c:	mov	x22, x0
  415b60:	b	415568 <reap_children@@Base+0x210>
  415b64:	add	x0, x19, #0x10
  415b68:	bl	419480 <output_dump@@Base>
  415b6c:	b	4159f8 <reap_children@@Base+0x6a0>
  415b70:	ldp	w1, w2, [sp, #116]
  415b74:	mov	x0, x19
  415b78:	ldr	w3, [sp, #124]
  415b7c:	mov	w4, #0x0                   	// #0
  415b80:	bl	4139a8 <try_implicit_rule@@Base+0x100>
  415b84:	mov	w1, #0x3                   	// #3
  415b88:	b	415698 <reap_children@@Base+0x340>
  415b8c:	mov	w0, #0xd                   	// #13
  415b90:	bl	406a40 <strerror@plt>
  415b94:	mov	x22, x0
  415b98:	cbz	x22, 4157e0 <reap_children@@Base+0x488>
  415b9c:	ldr	x28, [x19]
  415ba0:	mov	x0, x28
  415ba4:	bl	406680 <strlen@plt>
  415ba8:	mov	x27, x0
  415bac:	mov	x0, x22
  415bb0:	bl	406680 <strlen@plt>
  415bb4:	add	x1, x27, x0
  415bb8:	mov	x3, x28
  415bbc:	mov	x4, x22
  415bc0:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  415bc4:	mov	x0, #0x0                   	// #0
  415bc8:	add	x2, x2, #0xa28
  415bcc:	bl	419dc8 <error@@Base>
  415bd0:	b	4157e0 <reap_children@@Base+0x488>
  415bd4:	mov	w0, #0x8                   	// #8
  415bd8:	bl	406a40 <strerror@plt>
  415bdc:	mov	x22, x0
  415be0:	b	415b98 <reap_children@@Base+0x840>
  415be4:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  415be8:	add	x0, x0, #0xb70
  415bec:	bl	40c7a8 <lookup_file@@Base>
  415bf0:	mov	x1, x0
  415bf4:	mov	w0, #0x0                   	// #0
  415bf8:	cbz	x1, 415c04 <reap_children@@Base+0x8ac>
  415bfc:	ldrb	w0, [x1, #137]
  415c00:	ubfx	x0, x0, #3, #1
  415c04:	str	w0, [x27, #76]
  415c08:	b	4156bc <reap_children@@Base+0x364>
  415c0c:	mov	w1, w3
  415c10:	mov	w0, w2
  415c14:	bl	410fb8 <shell_completed@@Base>
  415c18:	ldp	x19, x20, [sp, #16]
  415c1c:	ldp	x21, x22, [sp, #32]
  415c20:	ldp	x23, x24, [sp, #48]
  415c24:	ldp	x25, x26, [sp, #64]
  415c28:	ldp	x27, x28, [sp, #80]
  415c2c:	ldp	x29, x30, [sp], #256
  415c30:	ret
  415c34:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  415c38:	add	x0, x0, #0xab8
  415c3c:	bl	419828 <pfatal_with_name@@Base>
  415c40:	mov	w27, w28
  415c44:	b	4154a0 <reap_children@@Base+0x148>
  415c48:	bl	406d70 <__errno_location@plt>
  415c4c:	ldr	w0, [x0]
  415c50:	b	415bd8 <reap_children@@Base+0x880>
  415c54:	nop
  415c58:	stp	x29, x30, [sp, #-176]!
  415c5c:	mov	x29, sp
  415c60:	stp	x19, x20, [sp, #16]
  415c64:	mov	x19, x0
  415c68:	mov	w0, #0x1                   	// #1
  415c6c:	stp	x21, x22, [sp, #32]
  415c70:	ldr	x21, [x19, #40]
  415c74:	bl	425c50 <start_remote_job_p@@Base>
  415c78:	ldrb	w1, [x19, #80]
  415c7c:	bfxil	w1, w0, #0, #1
  415c80:	strb	w1, [x19, #80]
  415c84:	tbnz	w1, #0, 415c98 <reap_children@@Base+0x940>
  415c88:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  415c8c:	add	x20, x20, #0x388
  415c90:	ldr	w0, [x20, #140]
  415c94:	cbnz	w0, 415cfc <reap_children@@Base+0x9a4>
  415c98:	mov	x0, x19
  415c9c:	bl	414e38 <construct_command_argv@@Base+0xc8>
  415ca0:	ldrb	w1, [x21, #136]
  415ca4:	ubfx	x0, x1, #2, #2
  415ca8:	cmp	w0, #0x2
  415cac:	b.eq	415ef8 <reap_children@@Base+0xba0>  // b.none
  415cb0:	cmp	w0, #0x3
  415cb4:	b.eq	415cd8 <reap_children@@Base+0x980>  // b.none
  415cb8:	cbz	w0, 415cd0 <reap_children@@Base+0x978>
  415cbc:	mov	w0, #0x1                   	// #1
  415cc0:	ldp	x19, x20, [sp, #16]
  415cc4:	ldp	x21, x22, [sp, #32]
  415cc8:	ldp	x29, x30, [sp], #176
  415ccc:	ret
  415cd0:	and	w1, w1, #0xfffffffc
  415cd4:	strb	w1, [x21, #136]
  415cd8:	mov	x0, x21
  415cdc:	bl	41f620 <notice_finished_file@@Base>
  415ce0:	mov	x0, x19
  415ce4:	bl	413c00 <try_implicit_rule@@Base+0x358>
  415ce8:	mov	w0, #0x1                   	// #1
  415cec:	ldp	x19, x20, [sp, #16]
  415cf0:	ldp	x21, x22, [sp, #32]
  415cf4:	ldp	x29, x30, [sp], #176
  415cf8:	ret
  415cfc:	stp	x23, x24, [sp, #48]
  415d00:	adrp	x23, 443000 <expanding_var@@Base+0x338>
  415d04:	ldr	d0, [x23, #160]
  415d08:	fcmpe	d0, #0.0
  415d0c:	b.mi	415f54 <reap_children@@Base+0xbfc>  // b.first
  415d10:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  415d14:	add	x22, x22, #0x38
  415d18:	stp	x25, x26, [sp, #64]
  415d1c:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  415d20:	ldr	w26, [x22, #80]
  415d24:	cmn	w26, #0x2
  415d28:	b.eq	415f5c <reap_children@@Base+0xc04>  // b.none
  415d2c:	tbz	w26, #31, 415d44 <reap_children@@Base+0x9ec>
  415d30:	b	416104 <reap_children@@Base+0xdac>
  415d34:	bl	406d70 <__errno_location@plt>
  415d38:	ldr	w0, [x0]
  415d3c:	cmp	w0, #0x4
  415d40:	b.ne	415fb0 <reap_children@@Base+0xc58>  // b.any
  415d44:	mov	w0, w26
  415d48:	mov	w2, #0x0                   	// #0
  415d4c:	mov	x1, #0x0                   	// #0
  415d50:	bl	406800 <lseek@plt>
  415d54:	cmn	w0, #0x1
  415d58:	b.eq	415d34 <reap_children@@Base+0x9dc>  // b.none
  415d5c:	add	x25, sp, #0x68
  415d60:	tbz	w0, #31, 415d7c <reap_children@@Base+0xa24>
  415d64:	b	415fb0 <reap_children@@Base+0xc58>
  415d68:	bl	406d70 <__errno_location@plt>
  415d6c:	ldr	w0, [x0]
  415d70:	cmp	w0, #0x4
  415d74:	b.ne	416110 <reap_children@@Base+0xdb8>  // b.any
  415d78:	ldr	w26, [x22, #80]
  415d7c:	mov	x2, #0x40                  	// #64
  415d80:	mov	w0, w26
  415d84:	mov	x1, x25
  415d88:	bl	406c80 <read@plt>
  415d8c:	cmn	w0, #0x1
  415d90:	mov	w2, w0
  415d94:	b.eq	415d68 <reap_children@@Base+0xa10>  // b.none
  415d98:	tbnz	w0, #31, 416110 <reap_children@@Base+0xdb8>
  415d9c:	mov	x0, x25
  415da0:	mov	w1, #0x20                  	// #32
  415da4:	strb	wzr, [x25, w2, sxtw]
  415da8:	bl	406bb0 <strchr@plt>
  415dac:	cbz	x0, 415de0 <reap_children@@Base+0xa88>
  415db0:	add	x0, x0, #0x1
  415db4:	mov	w1, #0x20                  	// #32
  415db8:	bl	406bb0 <strchr@plt>
  415dbc:	cbz	x0, 415de0 <reap_children@@Base+0xa88>
  415dc0:	add	x0, x0, #0x1
  415dc4:	mov	w1, #0x20                  	// #32
  415dc8:	bl	406bb0 <strchr@plt>
  415dcc:	cbz	x0, 415de0 <reap_children@@Base+0xa88>
  415dd0:	ldrb	w1, [x0, #1]
  415dd4:	sub	w1, w1, #0x30
  415dd8:	cmp	w1, #0x9
  415ddc:	b.ls	416180 <reap_children@@Base+0xe28>  // b.plast
  415de0:	ldr	w0, [x24, #1088]
  415de4:	str	d8, [sp, #80]
  415de8:	tbz	w0, #2, 415e08 <reap_children@@Base+0xab0>
  415dec:	mov	x1, x25
  415df0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  415df4:	add	x0, x0, #0xc50
  415df8:	bl	406d60 <printf@plt>
  415dfc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  415e00:	ldr	x0, [x0, #384]
  415e04:	bl	406c20 <fflush@plt>
  415e08:	ldr	w0, [x22, #80]
  415e0c:	bl	406a50 <close@plt>
  415e10:	mov	w0, #0xffffffff            	// #-1
  415e14:	str	w0, [x22, #80]
  415e18:	bl	4190a0 <make_access@@Base>
  415e1c:	mov	x0, x25
  415e20:	mov	w1, #0x1                   	// #1
  415e24:	bl	406770 <getloadavg@plt>
  415e28:	cmp	w0, #0x1
  415e2c:	b.eq	415e84 <reap_children@@Base+0xb2c>  // b.none
  415e30:	bl	406d70 <__errno_location@plt>
  415e34:	mov	x25, x0
  415e38:	ldr	w1, [x22, #84]
  415e3c:	ldr	w0, [x0]
  415e40:	cmn	w1, #0x1
  415e44:	b.eq	415e50 <reap_children@@Base+0xaf8>  // b.none
  415e48:	cmp	w1, w0
  415e4c:	b.eq	415e7c <reap_children@@Base+0xb24>  // b.none
  415e50:	cbnz	w0, 41604c <reap_children@@Base+0xcf4>
  415e54:	mov	w2, #0x5                   	// #5
  415e58:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  415e5c:	mov	x0, #0x0                   	// #0
  415e60:	add	x1, x1, #0xca0
  415e64:	bl	406cd0 <dcgettext@plt>
  415e68:	mov	x2, x0
  415e6c:	mov	x1, #0x0                   	// #0
  415e70:	mov	x0, #0x0                   	// #0
  415e74:	bl	419dc8 <error@@Base>
  415e78:	ldr	w0, [x25]
  415e7c:	str	w0, [x22, #84]
  415e80:	str	xzr, [sp, #104]
  415e84:	bl	419098 <user_access@@Base>
  415e88:	mov	x0, #0x0                   	// #0
  415e8c:	bl	4068c0 <time@plt>
  415e90:	ldr	x1, [x20, #144]
  415e94:	cmp	x0, x1
  415e98:	b.gt	415fec <reap_children@@Base+0xc94>
  415e9c:	ldr	d0, [x20, #16]
  415ea0:	fmov	d1, #2.500000000000000000e-01
  415ea4:	ldr	d2, [x20, #152]
  415ea8:	ucvtf	d0, d0
  415eac:	fadd	d0, d0, d2
  415eb0:	fmul	d0, d0, d1
  415eb4:	ldr	w0, [x24, #1088]
  415eb8:	ldr	d1, [sp, #104]
  415ebc:	ldr	d2, [x23, #160]
  415ec0:	fadd	d8, d1, d0
  415ec4:	tbnz	w0, #2, 416028 <reap_children@@Base+0xcd0>
  415ec8:	fcmpe	d8, d2
  415ecc:	ldr	d8, [sp, #80]
  415ed0:	cset	w0, ge  // ge = tcont
  415ed4:	cbnz	w0, 4160dc <reap_children@@Base+0xd84>
  415ed8:	mov	x0, x19
  415edc:	ldp	x23, x24, [sp, #48]
  415ee0:	ldp	x25, x26, [sp, #64]
  415ee4:	bl	414e38 <construct_command_argv@@Base+0xc8>
  415ee8:	ldrb	w1, [x21, #136]
  415eec:	ubfx	x0, x1, #2, #2
  415ef0:	cmp	w0, #0x2
  415ef4:	b.ne	415cb0 <reap_children@@Base+0x958>  // b.any
  415ef8:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  415efc:	add	x20, x20, #0x388
  415f00:	ldr	w0, [x19, #76]
  415f04:	ldr	x1, [x20, #24]
  415f08:	str	x1, [x19, #32]
  415f0c:	cmp	w0, #0x0
  415f10:	b.le	415f38 <reap_children@@Base+0xbe0>
  415f14:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  415f18:	ldr	w0, [x0, #1088]
  415f1c:	tbnz	w0, #2, 416074 <reap_children@@Base+0xd1c>
  415f20:	ldrb	w1, [x19, #80]
  415f24:	ldr	w0, [x20, #140]
  415f28:	orr	w1, w1, #0x20
  415f2c:	strb	w1, [x19, #80]
  415f30:	add	w0, w0, #0x1
  415f34:	str	w0, [x20, #140]
  415f38:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  415f3c:	mov	x2, #0x0                   	// #0
  415f40:	add	x1, x1, #0x808
  415f44:	mov	w0, #0x1                   	// #1
  415f48:	str	x19, [x20, #24]
  415f4c:	bl	4066e0 <sigprocmask@plt>
  415f50:	b	415cbc <reap_children@@Base+0x964>
  415f54:	ldp	x23, x24, [sp, #48]
  415f58:	b	415c98 <reap_children@@Base+0x940>
  415f5c:	adrp	x24, 428000 <_IO_stdin_used@@Base+0x1c20>
  415f60:	add	x24, x24, #0xbb0
  415f64:	b	415f78 <reap_children@@Base+0xc20>
  415f68:	bl	406d70 <__errno_location@plt>
  415f6c:	ldr	w0, [x0]
  415f70:	cmp	w0, #0x4
  415f74:	b.ne	416118 <reap_children@@Base+0xdc0>  // b.any
  415f78:	mov	x0, x24
  415f7c:	mov	w1, #0x0                   	// #0
  415f80:	bl	406900 <open@plt>
  415f84:	str	w0, [x22, #80]
  415f88:	cmn	w0, #0x1
  415f8c:	b.eq	415f68 <reap_children@@Base+0xc10>  // b.none
  415f90:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  415f94:	ldr	w1, [x24, #1088]
  415f98:	and	w1, w1, #0x4
  415f9c:	tbnz	w0, #31, 41611c <reap_children@@Base+0xdc4>
  415fa0:	cbnz	w1, 416160 <reap_children@@Base+0xe08>
  415fa4:	bl	425a40 <fd_noinherit@@Base>
  415fa8:	ldr	w26, [x22, #80]
  415fac:	b	415d2c <reap_children@@Base+0x9d4>
  415fb0:	add	x25, sp, #0x68
  415fb4:	str	d8, [sp, #80]
  415fb8:	ldr	w0, [x24, #1088]
  415fbc:	tbz	w0, #2, 415e08 <reap_children@@Base+0xab0>
  415fc0:	bl	406d70 <__errno_location@plt>
  415fc4:	ldr	w0, [x0]
  415fc8:	bl	406a40 <strerror@plt>
  415fcc:	mov	x1, x0
  415fd0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  415fd4:	add	x0, x0, #0xc78
  415fd8:	bl	406d60 <printf@plt>
  415fdc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  415fe0:	ldr	x0, [x0, #384]
  415fe4:	bl	406c20 <fflush@plt>
  415fe8:	b	415e08 <reap_children@@Base+0xab0>
  415fec:	movi	d0, #0x0
  415ff0:	sub	x2, x0, #0x1
  415ff4:	cmp	x1, x2
  415ff8:	fmov	d1, d0
  415ffc:	b.ne	416018 <reap_children@@Base+0xcc0>  // b.any
  416000:	ldr	d1, [x20, #16]
  416004:	fmov	d2, #2.500000000000000000e-01
  416008:	ucvtf	d1, d1
  41600c:	fmul	d1, d1, d2
  416010:	fadd	d0, d1, d0
  416014:	fmul	d0, d0, d2
  416018:	str	xzr, [x20, #16]
  41601c:	str	x0, [x20, #144]
  416020:	str	d1, [x20, #152]
  416024:	b	415eb4 <reap_children@@Base+0xb5c>
  416028:	fmov	d0, d8
  41602c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  416030:	add	x0, x0, #0xd08
  416034:	bl	406d60 <printf@plt>
  416038:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41603c:	ldr	x0, [x0, #384]
  416040:	bl	406c20 <fflush@plt>
  416044:	ldr	d2, [x23, #160]
  416048:	b	415ec8 <reap_children@@Base+0xb70>
  41604c:	mov	w2, #0x5                   	// #5
  416050:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  416054:	mov	x0, #0x0                   	// #0
  416058:	add	x1, x1, #0xcd8
  41605c:	bl	406cd0 <dcgettext@plt>
  416060:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  416064:	add	x1, x1, #0xcf8
  416068:	bl	419f38 <perror_with_name@@Base>
  41606c:	ldr	w0, [x25]
  416070:	b	415e7c <reap_children@@Base+0xb24>
  416074:	mov	w2, #0x5                   	// #5
  416078:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  41607c:	mov	x0, #0x0                   	// #0
  416080:	add	x1, x1, #0xd48
  416084:	bl	406cd0 <dcgettext@plt>
  416088:	mov	x21, x0
  41608c:	ldrsw	x2, [x19, #76]
  416090:	add	x0, x20, #0x28
  416094:	ldr	x3, [x19, #40]
  416098:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  41609c:	add	x1, x1, #0x510
  4160a0:	ldr	x22, [x3]
  4160a4:	bl	406730 <sprintf@plt>
  4160a8:	ldrb	w0, [x19, #80]
  4160ac:	adrp	x4, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4160b0:	add	x4, x4, #0x350
  4160b4:	tbnz	w0, #0, 416144 <reap_children@@Base+0xdec>
  4160b8:	mov	x2, x22
  4160bc:	mov	x0, x21
  4160c0:	add	x3, x20, #0x28
  4160c4:	mov	x1, x19
  4160c8:	bl	406d60 <printf@plt>
  4160cc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4160d0:	ldr	x0, [x0, #384]
  4160d4:	bl	406c20 <fflush@plt>
  4160d8:	b	415f20 <reap_children@@Base+0xbc8>
  4160dc:	mov	x0, x21
  4160e0:	mov	w1, #0x2                   	// #2
  4160e4:	bl	40d9f0 <set_command_state@@Base>
  4160e8:	ldr	x1, [x20, #160]
  4160ec:	mov	w0, #0x0                   	// #0
  4160f0:	str	x19, [x20, #160]
  4160f4:	ldp	x23, x24, [sp, #48]
  4160f8:	ldp	x25, x26, [sp, #64]
  4160fc:	str	x1, [x19, #32]
  416100:	b	415cc0 <reap_children@@Base+0x968>
  416104:	add	x25, sp, #0x68
  416108:	str	d8, [sp, #80]
  41610c:	b	415e18 <reap_children@@Base+0xac0>
  416110:	str	d8, [sp, #80]
  416114:	b	415fb8 <reap_children@@Base+0xc60>
  416118:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  41611c:	ldr	w0, [x24, #1088]
  416120:	tbz	w0, #2, 416104 <reap_children@@Base+0xdac>
  416124:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  416128:	add	x0, x0, #0xbc0
  41612c:	bl	406ae0 <puts@plt>
  416130:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  416134:	ldr	x0, [x0, #384]
  416138:	bl	406c20 <fflush@plt>
  41613c:	ldr	w26, [x22, #80]
  416140:	b	415d2c <reap_children@@Base+0x9d4>
  416144:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  416148:	mov	w2, #0x5                   	// #5
  41614c:	add	x1, x1, #0xaa8
  416150:	mov	x0, #0x0                   	// #0
  416154:	bl	406cd0 <dcgettext@plt>
  416158:	mov	x4, x0
  41615c:	b	4160b8 <reap_children@@Base+0xd60>
  416160:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  416164:	add	x0, x0, #0xbe8
  416168:	bl	406ae0 <puts@plt>
  41616c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  416170:	ldr	x0, [x0, #384]
  416174:	bl	406c20 <fflush@plt>
  416178:	ldr	w0, [x22, #80]
  41617c:	b	415fa4 <reap_children@@Base+0xc4c>
  416180:	mov	x1, #0x0                   	// #0
  416184:	add	x0, x0, #0x1
  416188:	mov	w2, #0xa                   	// #10
  41618c:	bl	406b60 <strtol@plt>
  416190:	ldr	w1, [x24, #1088]
  416194:	mov	x22, x0
  416198:	tbnz	w1, #2, 4161b0 <reap_children@@Base+0xe58>
  41619c:	scvtf	d0, w22
  4161a0:	ldr	d1, [x23, #160]
  4161a4:	fcmpe	d0, d1
  4161a8:	cset	w0, gt
  4161ac:	b	415ed4 <reap_children@@Base+0xb7c>
  4161b0:	ldr	w2, [x20, #140]
  4161b4:	mov	w1, w22
  4161b8:	ldr	d0, [x23, #160]
  4161bc:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  4161c0:	add	x0, x0, #0xc18
  4161c4:	bl	406d60 <printf@plt>
  4161c8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4161cc:	ldr	x0, [x0, #384]
  4161d0:	bl	406c20 <fflush@plt>
  4161d4:	b	41619c <reap_children@@Base+0xe44>
  4161d8:	stp	x29, x30, [sp, #-32]!
  4161dc:	mov	x29, sp
  4161e0:	str	x19, [sp, #16]
  4161e4:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  4161e8:	add	x19, x19, #0x388
  4161ec:	b	4161f8 <reap_children@@Base+0xea0>
  4161f0:	ldr	x0, [x19, #160]
  4161f4:	cbz	x0, 416218 <reap_children@@Base+0xec0>
  4161f8:	mov	w1, #0x0                   	// #0
  4161fc:	mov	w0, #0x0                   	// #0
  416200:	bl	415358 <reap_children@@Base>
  416204:	ldr	x0, [x19, #160]
  416208:	ldr	x1, [x0, #32]
  41620c:	str	x1, [x19, #160]
  416210:	bl	415c58 <reap_children@@Base+0x900>
  416214:	cbnz	w0, 4161f0 <reap_children@@Base+0xe98>
  416218:	ldr	x19, [sp, #16]
  41621c:	ldp	x29, x30, [sp], #32
  416220:	ret
  416224:	nop

0000000000416228 <start_waiting_jobs@@Base>:
  416228:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41622c:	ldr	x0, [x0, #1064]
  416230:	cbz	x0, 416238 <start_waiting_jobs@@Base+0x10>
  416234:	b	4161d8 <reap_children@@Base+0xe80>
  416238:	ret
  41623c:	nop

0000000000416240 <new_job@@Base>:
  416240:	stp	x29, x30, [sp, #-128]!
  416244:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  416248:	mov	x29, sp
  41624c:	stp	x23, x24, [sp, #48]
  416250:	add	x24, x1, #0x388
  416254:	stp	x21, x22, [sp, #32]
  416258:	str	x0, [x29, #112]
  41625c:	ldr	x21, [x0, #32]
  416260:	stp	x19, x20, [sp, #16]
  416264:	ldr	x0, [x24, #160]
  416268:	stp	x25, x26, [sp, #64]
  41626c:	stp	x27, x28, [sp, #80]
  416270:	cbz	x0, 416278 <new_job@@Base+0x38>
  416274:	bl	4161d8 <reap_children@@Base+0xe80>
  416278:	mov	w1, #0x0                   	// #0
  41627c:	mov	w0, #0x0                   	// #0
  416280:	bl	415358 <reap_children@@Base>
  416284:	mov	x20, #0x0                   	// #0
  416288:	mov	x0, x21
  41628c:	bl	40a090 <chop_commands@@Base>
  416290:	mov	x0, #0x58                  	// #88
  416294:	bl	418a78 <xcalloc@@Base>
  416298:	add	x22, x0, #0x10
  41629c:	mov	x23, x0
  4162a0:	mov	x0, x22
  4162a4:	str	x23, [x29, #96]
  4162a8:	bl	4196d8 <output_init@@Base>
  4162ac:	mov	w19, #0x7b                  	// #123
  4162b0:	ldr	x4, [x29, #112]
  4162b4:	ldrb	w0, [x23, #24]
  4162b8:	ldrb	w1, [x23, #80]
  4162bc:	ldrb	w2, [x4, #138]
  4162c0:	tst	x0, #0x1
  4162c4:	ldrh	w0, [x21, #48]
  4162c8:	stp	x4, xzr, [x23, #40]
  4162cc:	csel	x22, x22, xzr, ne  // ne = any
  4162d0:	bfi	w1, w2, #6, #1
  4162d4:	strb	w1, [x23, #80]
  4162d8:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  4162dc:	lsl	x0, x0, #3
  4162e0:	str	x22, [x1, #3504]
  4162e4:	bl	418a50 <xmalloc@@Base>
  4162e8:	ldrh	w1, [x21, #48]
  4162ec:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  4162f0:	str	x0, [x29, #104]
  4162f4:	add	x22, x22, #0x448
  4162f8:	cbz	w1, 4163b0 <new_job@@Base+0x170>
  4162fc:	nop
  416300:	ldr	x0, [x21, #32]
  416304:	lsl	x1, x20, #3
  416308:	str	x1, [x29, #120]
  41630c:	ldr	x27, [x0, x20, lsl #3]
  416310:	mov	x28, x27
  416314:	b	416350 <new_job@@Base+0x110>
  416318:	add	x25, x26, #0x1
  41631c:	cmp	x27, x28
  416320:	sub	x23, x25, x27
  416324:	b.eq	416338 <new_job@@Base+0xf8>  // b.none
  416328:	mov	x1, x27
  41632c:	mov	x2, x23
  416330:	mov	x0, x28
  416334:	bl	406650 <memmove@plt>
  416338:	ldrb	w1, [x26, #1]
  41633c:	add	x28, x28, x23
  416340:	mov	x27, x25
  416344:	cmp	w1, #0x28
  416348:	ccmp	w1, w19, #0x4, ne  // ne = any
  41634c:	b.eq	416484 <new_job@@Base+0x244>  // b.none
  416350:	mov	x0, x27
  416354:	mov	w1, #0x24                  	// #36
  416358:	bl	406bb0 <strchr@plt>
  41635c:	mov	x26, x0
  416360:	cbnz	x0, 416318 <new_job@@Base+0xd8>
  416364:	cmp	x27, x28
  416368:	b.eq	416384 <new_job@@Base+0x144>  // b.none
  41636c:	mov	x0, x27
  416370:	bl	406680 <strlen@plt>
  416374:	mov	x1, x27
  416378:	add	x2, x0, #0x1
  41637c:	mov	x0, x28
  416380:	bl	406650 <memmove@plt>
  416384:	ldp	x1, x2, [x29, #112]
  416388:	ldr	x0, [x21, #32]
  41638c:	ldr	x0, [x0, x2]
  416390:	str	x20, [x21, #16]
  416394:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  416398:	ldr	x2, [x29, #104]
  41639c:	ldrh	w1, [x21, #48]
  4163a0:	str	x0, [x2, x20, lsl #3]
  4163a4:	add	x20, x20, #0x1
  4163a8:	cmp	w1, w20
  4163ac:	b.hi	416300 <new_job@@Base+0xc0>  // b.pmore
  4163b0:	ldp	x0, x1, [x29, #96]
  4163b4:	str	xzr, [x21, #16]
  4163b8:	str	x1, [x0, #56]
  4163bc:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  4163c0:	bl	413d58 <try_implicit_rule@@Base+0x4b0>
  4163c4:	ldr	w0, [x19, #2192]
  4163c8:	cbz	w0, 4165b4 <new_job@@Base+0x374>
  4163cc:	ldr	w1, [x24, #140]
  4163d0:	add	x20, x19, #0x890
  4163d4:	cmp	w1, w0
  4163d8:	b.ne	41668c <new_job@@Base+0x44c>  // b.any
  4163dc:	nop
  4163e0:	mov	w1, #0x0                   	// #0
  4163e4:	mov	w0, #0x1                   	// #1
  4163e8:	bl	415358 <reap_children@@Base>
  4163ec:	ldr	w0, [x20]
  4163f0:	ldr	w1, [x24, #140]
  4163f4:	cmp	w1, w0
  4163f8:	b.eq	4163e0 <new_job@@Base+0x1a0>  // b.none
  4163fc:	ldr	w0, [x24]
  416400:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  416404:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  416408:	add	w0, w0, #0x1
  41640c:	str	w0, [x2, #904]
  416410:	ldr	w0, [x1, #3388]
  416414:	cbnz	w0, 4166ac <new_job@@Base+0x46c>
  416418:	ldr	x0, [x29, #96]
  41641c:	bl	415c58 <reap_children@@Base+0x900>
  416420:	ldr	w0, [x19, #2192]
  416424:	cmp	w0, #0x1
  416428:	b.eq	41646c <new_job@@Base+0x22c>  // b.none
  41642c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  416430:	ldr	w0, [x0, #2020]
  416434:	cbnz	w0, 41646c <new_job@@Base+0x22c>
  416438:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41643c:	str	xzr, [x0, #3504]
  416440:	mov	sp, x29
  416444:	ldp	x19, x20, [sp, #16]
  416448:	ldp	x21, x22, [sp, #32]
  41644c:	ldp	x23, x24, [sp, #48]
  416450:	ldp	x25, x26, [sp, #64]
  416454:	ldp	x27, x28, [sp, #80]
  416458:	ldp	x29, x30, [sp], #128
  41645c:	ret
  416460:	mov	w1, #0x0                   	// #0
  416464:	mov	w0, #0x1                   	// #1
  416468:	bl	415358 <reap_children@@Base>
  41646c:	ldr	x0, [x29, #112]
  416470:	ldrb	w0, [x0, #136]
  416474:	and	w0, w0, #0xc
  416478:	cmp	w0, #0x8
  41647c:	b.eq	416460 <new_job@@Base+0x220>  // b.none
  416480:	b	416438 <new_job@@Base+0x1f8>
  416484:	mov	x9, x28
  416488:	mov	w0, #0x29                  	// #41
  41648c:	cmp	w1, #0x28
  416490:	mov	w7, #0x7d                  	// #125
  416494:	csel	w7, w7, w0, ne  // ne = any
  416498:	add	x27, x26, #0x2
  41649c:	strb	w1, [x9], #1
  4164a0:	ldrb	w0, [x26, #2]
  4164a4:	mov	x28, x9
  4164a8:	cbz	w0, 416350 <new_job@@Base+0x110>
  4164ac:	mov	w2, #0x0                   	// #0
  4164b0:	mov	w10, #0x5c                  	// #92
  4164b4:	mov	w11, #0x20                  	// #32
  4164b8:	b	4164e4 <new_job@@Base+0x2a4>
  4164bc:	cmp	w0, #0x5c
  4164c0:	b.eq	416500 <new_job@@Base+0x2c0>  // b.none
  4164c4:	mov	x3, x28
  4164c8:	cmp	w1, w0
  4164cc:	cinc	w2, w2, eq  // eq = none
  4164d0:	add	x27, x27, #0x1
  4164d4:	strb	w0, [x3], #1
  4164d8:	mov	x28, x3
  4164dc:	ldrb	w0, [x27]
  4164e0:	cbz	w0, 416350 <new_job@@Base+0x110>
  4164e4:	cmp	w7, w0
  4164e8:	b.ne	4164bc <new_job@@Base+0x27c>  // b.any
  4164ec:	sub	w2, w2, #0x1
  4164f0:	cmn	w2, #0x1
  4164f4:	b.eq	416350 <new_job@@Base+0x110>  // b.none
  4164f8:	cmp	w0, #0x5c
  4164fc:	b.ne	4164c4 <new_job@@Base+0x284>  // b.any
  416500:	ldrb	w4, [x27, #1]
  416504:	cmp	w4, #0xa
  416508:	b.ne	4164c4 <new_job@@Base+0x284>  // b.any
  41650c:	sub	x0, x27, #0x1
  416510:	mov	w4, #0x0                   	// #0
  416514:	cmp	x25, x0
  416518:	b.cc	416530 <new_job@@Base+0x2f0>  // b.lo, b.ul, b.last
  41651c:	b	416554 <new_job@@Base+0x314>
  416520:	sub	x0, x0, #0x1
  416524:	eor	w4, w4, #0x1
  416528:	cmp	x25, x0
  41652c:	b.eq	41653c <new_job@@Base+0x2fc>  // b.none
  416530:	ldrb	w8, [x0]
  416534:	cmp	w8, #0x5c
  416538:	b.eq	416520 <new_job@@Base+0x2e0>  // b.none
  41653c:	cbz	w4, 416554 <new_job@@Base+0x314>
  416540:	mov	x3, x28
  416544:	add	x27, x27, #0x1
  416548:	strb	w10, [x3], #1
  41654c:	mov	x28, x3
  416550:	b	4164dc <new_job@@Base+0x29c>
  416554:	ldrb	w0, [x27, #2]
  416558:	add	x5, x27, #0x2
  41655c:	ldrh	w0, [x22, x0, lsl #1]
  416560:	tst	w0, #0x6
  416564:	b.eq	416578 <new_job@@Base+0x338>  // b.none
  416568:	ldrb	w0, [x5, #1]!
  41656c:	ldrh	w0, [x22, x0, lsl #1]
  416570:	tst	w0, #0x6
  416574:	b.ne	416568 <new_job@@Base+0x328>  // b.any
  416578:	cmp	x9, x28
  41657c:	b.cc	416594 <new_job@@Base+0x354>  // b.lo, b.ul, b.last
  416580:	b	4165a0 <new_job@@Base+0x360>
  416584:	sub	x0, x28, #0x1
  416588:	cmp	x9, x0
  41658c:	b.eq	4165a8 <new_job@@Base+0x368>  // b.none
  416590:	mov	x28, x0
  416594:	ldurb	w0, [x28, #-1]
  416598:	ldrh	w0, [x22, x0, lsl #1]
  41659c:	tbnz	w0, #1, 416584 <new_job@@Base+0x344>
  4165a0:	mov	x0, x28
  4165a4:	add	x28, x28, #0x1
  4165a8:	mov	x27, x5
  4165ac:	strb	w11, [x0]
  4165b0:	b	4164dc <new_job@@Base+0x29c>
  4165b4:	bl	4255e8 <jobserver_enabled@@Base>
  4165b8:	cbz	w0, 41668c <new_job@@Base+0x44c>
  4165bc:	adrp	x22, 428000 <_IO_stdin_used@@Base+0x1c20>
  4165c0:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4165c4:	adrp	x27, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4165c8:	add	x20, x0, #0x440
  4165cc:	add	x22, x22, #0xd78
  4165d0:	add	x27, x27, #0x350
  4165d4:	adrp	x25, 428000 <_IO_stdin_used@@Base+0x1c20>
  4165d8:	ldr	w0, [x20]
  4165dc:	tbz	w0, #2, 416600 <new_job@@Base+0x3c0>
  4165e0:	ldr	x1, [x24, #24]
  4165e4:	add	x0, x25, #0xd80
  4165e8:	cmp	x1, #0x0
  4165ec:	csel	x1, x27, x22, ne  // ne = any
  4165f0:	bl	406d60 <printf@plt>
  4165f4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4165f8:	ldr	x0, [x0, #384]
  4165fc:	bl	406c20 <fflush@plt>
  416600:	ldr	w0, [x24]
  416604:	cbz	w0, 416400 <new_job@@Base+0x1c0>
  416608:	bl	4257c0 <jobserver_pre_acquire@@Base>
  41660c:	mov	w0, #0x0                   	// #0
  416610:	mov	w1, #0x0                   	// #0
  416614:	bl	415358 <reap_children@@Base>
  416618:	ldr	x0, [x24, #160]
  41661c:	cbz	x0, 416624 <new_job@@Base+0x3e4>
  416620:	bl	4161d8 <reap_children@@Base+0xe80>
  416624:	ldr	w0, [x24]
  416628:	cbz	w0, 416400 <new_job@@Base+0x1c0>
  41662c:	ldr	x0, [x24, #24]
  416630:	cbz	x0, 4167cc <new_job@@Base+0x58c>
  416634:	ldr	x0, [x24, #160]
  416638:	cmp	x0, #0x0
  41663c:	cset	w0, ne  // ne = any
  416640:	bl	4257c8 <jobserver_acquire@@Base>
  416644:	cmp	w0, #0x1
  416648:	b.ne	4165d8 <new_job@@Base+0x398>  // b.any
  41664c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  416650:	ldr	w0, [x0, #1088]
  416654:	tbz	w0, #2, 4163fc <new_job@@Base+0x1bc>
  416658:	mov	w2, #0x5                   	// #5
  41665c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  416660:	mov	x0, #0x0                   	// #0
  416664:	add	x1, x1, #0xde0
  416668:	bl	406cd0 <dcgettext@plt>
  41666c:	ldr	x1, [x29, #96]
  416670:	ldr	x2, [x1, #40]
  416674:	ldr	x2, [x2]
  416678:	bl	406d60 <printf@plt>
  41667c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  416680:	ldr	x0, [x0, #384]
  416684:	bl	406c20 <fflush@plt>
  416688:	b	4163fc <new_job@@Base+0x1bc>
  41668c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  416690:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  416694:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  416698:	ldr	w0, [x0, #904]
  41669c:	add	w0, w0, #0x1
  4166a0:	str	w0, [x2, #904]
  4166a4:	ldr	w0, [x1, #3388]
  4166a8:	cbz	w0, 416418 <new_job@@Base+0x1d8>
  4166ac:	ldr	x0, [x29, #96]
  4166b0:	ldr	x1, [x0, #40]
  4166b4:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  4166b8:	add	x0, x0, #0xe08
  4166bc:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  4166c0:	mov	x20, x0
  4166c4:	ldr	x22, [x21]
  4166c8:	cbz	x22, 4167b0 <new_job@@Base+0x570>
  4166cc:	mov	x0, x22
  4166d0:	bl	406680 <strlen@plt>
  4166d4:	add	x0, x0, #0x1c
  4166d8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  4166dc:	ldr	x3, [x21, #8]
  4166e0:	and	x0, x0, #0xfffffffffffffff0
  4166e4:	sub	sp, sp, x0
  4166e8:	mov	x2, x22
  4166ec:	mov	x21, sp
  4166f0:	add	x1, x1, #0x908
  4166f4:	mov	x0, x21
  4166f8:	bl	406730 <sprintf@plt>
  4166fc:	mov	x0, x21
  416700:	bl	406680 <strlen@plt>
  416704:	ldr	x23, [x29, #96]
  416708:	mov	x22, x0
  41670c:	ldrb	w1, [x20]
  416710:	ldr	x0, [x23, #40]
  416714:	ldr	x0, [x0]
  416718:	cbz	w1, 416774 <new_job@@Base+0x534>
  41671c:	bl	406680 <strlen@plt>
  416720:	mov	x24, x0
  416724:	mov	x0, x20
  416728:	bl	406680 <strlen@plt>
  41672c:	mov	w2, #0x5                   	// #5
  416730:	mov	x25, x0
  416734:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  416738:	mov	x0, #0x0                   	// #0
  41673c:	add	x1, x1, #0xe30
  416740:	bl	406cd0 <dcgettext@plt>
  416744:	ldr	x4, [x23, #40]
  416748:	add	x1, x24, x25
  41674c:	mov	x2, x0
  416750:	add	x1, x1, x22
  416754:	mov	x3, x21
  416758:	mov	x5, x20
  41675c:	ldr	x4, [x4]
  416760:	mov	w0, #0x0                   	// #0
  416764:	bl	419c88 <message@@Base>
  416768:	mov	x0, x20
  41676c:	bl	406b90 <free@plt>
  416770:	b	416418 <new_job@@Base+0x1d8>
  416774:	bl	406680 <strlen@plt>
  416778:	mov	x24, x0
  41677c:	mov	w2, #0x5                   	// #5
  416780:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  416784:	mov	x0, #0x0                   	// #0
  416788:	add	x1, x1, #0xe10
  41678c:	bl	406cd0 <dcgettext@plt>
  416790:	mov	x2, x0
  416794:	ldr	x4, [x23, #40]
  416798:	add	x1, x24, x22
  41679c:	mov	x3, x21
  4167a0:	mov	w0, #0x0                   	// #0
  4167a4:	ldr	x4, [x4]
  4167a8:	bl	419c88 <message@@Base>
  4167ac:	b	416768 <new_job@@Base+0x528>
  4167b0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  4167b4:	mov	w2, #0x5                   	// #5
  4167b8:	add	x1, x1, #0x8f8
  4167bc:	mov	x0, #0x0                   	// #0
  4167c0:	bl	406cd0 <dcgettext@plt>
  4167c4:	mov	x21, x0
  4167c8:	b	4166fc <new_job@@Base+0x4bc>
  4167cc:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  4167d0:	mov	x1, #0x0                   	// #0
  4167d4:	add	x2, x2, #0xda8
  4167d8:	bl	41a060 <fatal@@Base>
  4167dc:	nop

00000000004167e0 <load_file@@Base>:
  4167e0:	stp	x29, x30, [sp, #-96]!
  4167e4:	mov	x29, sp
  4167e8:	stp	x23, x24, [sp, #48]
  4167ec:	mov	w24, w2
  4167f0:	ldr	x23, [x1]
  4167f4:	stp	x19, x20, [sp, #16]
  4167f8:	mov	x20, x1
  4167fc:	stp	x21, x22, [sp, #32]
  416800:	mov	x22, x0
  416804:	mov	x0, x23
  416808:	stp	x25, x26, [sp, #64]
  41680c:	stp	x27, x28, [sp, #80]
  416810:	bl	406680 <strlen@plt>
  416814:	mov	x26, x0
  416818:	add	x2, x26, #0x1a
  41681c:	mov	x0, x23
  416820:	and	x2, x2, #0xfffffffffffffff0
  416824:	mov	w1, #0x28                  	// #40
  416828:	sub	sp, sp, x2
  41682c:	mov	x25, sp
  416830:	bl	406bb0 <strchr@plt>
  416834:	cbz	x0, 4169b0 <load_file@@Base+0x1d0>
  416838:	add	x28, x0, #0x1
  41683c:	mov	x19, x0
  416840:	mov	w1, #0x29                  	// #41
  416844:	mov	x0, x28
  416848:	bl	406bb0 <strchr@plt>
  41684c:	mov	x21, x0
  416850:	cbz	x0, 4169b0 <load_file@@Base+0x1d0>
  416854:	ldrb	w0, [x0, #1]
  416858:	cbnz	w0, 4169b0 <load_file@@Base+0x1d0>
  41685c:	sub	x19, x19, x23
  416860:	cmp	x28, x21
  416864:	b.eq	416ca8 <load_file@@Base+0x4c8>  // b.none
  416868:	add	x27, x19, #0x1
  41686c:	sub	x21, x21, x28
  416870:	add	x27, x25, x27
  416874:	mov	x1, x23
  416878:	mov	x2, x19
  41687c:	mov	x0, x25
  416880:	bl	406640 <memcpy@plt>
  416884:	strb	wzr, [x25, x19]
  416888:	str	x25, [x20]
  41688c:	mov	x2, x21
  416890:	mov	x1, x28
  416894:	mov	x0, x27
  416898:	bl	406640 <memcpy@plt>
  41689c:	strb	wzr, [x27, x21]
  4168a0:	mov	x0, x25
  4168a4:	bl	422490 <strcache_add@@Base>
  4168a8:	str	x0, [x20]
  4168ac:	mov	x1, #0x0                   	// #0
  4168b0:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4168b4:	add	x0, x0, #0xf8
  4168b8:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  4168bc:	ldr	x23, [x20]
  4168c0:	mov	x21, x0
  4168c4:	mov	x1, x23
  4168c8:	bl	406cc0 <strstr@plt>
  4168cc:	cbz	x0, 4168ec <load_file@@Base+0x10c>
  4168d0:	mov	x26, x19
  4168d4:	cmp	x21, x0
  4168d8:	b.eq	416ad8 <load_file@@Base+0x2f8>  // b.none
  4168dc:	ldurb	w1, [x0, #-1]
  4168e0:	cmp	w1, #0x20
  4168e4:	b.eq	416ad8 <load_file@@Base+0x2f8>  // b.none
  4168e8:	cbz	x27, 4169e4 <load_file@@Base+0x204>
  4168ec:	adrp	x26, 443000 <expanding_var@@Base+0x338>
  4168f0:	ldr	w0, [x26, #1088]
  4168f4:	tbnz	w0, #1, 416a54 <load_file@@Base+0x274>
  4168f8:	adrp	x25, 443000 <expanding_var@@Base+0x338>
  4168fc:	ldr	x0, [x25, #1072]
  416900:	cbz	x0, 416a90 <load_file@@Base+0x2b0>
  416904:	mov	x1, x27
  416908:	bl	4068f0 <dlsym@plt>
  41690c:	mov	x19, x0
  416910:	cbz	x0, 416af0 <load_file@@Base+0x310>
  416914:	mov	x0, x22
  416918:	blr	x19
  41691c:	mov	w19, w0
  416920:	cmp	w0, #0x0
  416924:	b.le	416984 <load_file@@Base+0x1a4>
  416928:	mov	x0, x21
  41692c:	bl	406680 <strlen@plt>
  416930:	ldr	x24, [x20]
  416934:	mov	x20, x0
  416938:	mov	x0, x24
  41693c:	bl	406680 <strlen@plt>
  416940:	add	x1, x0, x20
  416944:	add	x1, x1, #0x11
  416948:	and	x1, x1, #0xfffffffffffffff0
  41694c:	sub	sp, sp, x1
  416950:	mov	x23, sp
  416954:	mov	x0, x23
  416958:	cbnz	x20, 416b94 <load_file@@Base+0x3b4>
  41695c:	mov	x1, x24
  416960:	bl	406c30 <strcpy@plt>
  416964:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  416968:	mov	x2, x23
  41696c:	mov	x0, x22
  416970:	add	x1, x1, #0x1e0
  416974:	mov	w5, #0x0                   	// #0
  416978:	mov	w4, #0x1                   	// #1
  41697c:	mov	w3, #0x0                   	// #0
  416980:	bl	423ea0 <do_variable_definition@@Base>
  416984:	mov	x0, x21
  416988:	bl	406b90 <free@plt>
  41698c:	mov	sp, x29
  416990:	mov	w0, w19
  416994:	ldp	x19, x20, [sp, #16]
  416998:	ldp	x21, x22, [sp, #32]
  41699c:	ldp	x23, x24, [sp, #48]
  4169a0:	ldp	x25, x26, [sp, #64]
  4169a4:	ldp	x27, x28, [sp, #80]
  4169a8:	ldp	x29, x30, [sp], #96
  4169ac:	ret
  4169b0:	mov	x0, x23
  4169b4:	bl	422490 <strcache_add@@Base>
  4169b8:	str	x0, [x20]
  4169bc:	mov	x1, #0x0                   	// #0
  4169c0:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4169c4:	add	x0, x0, #0xf8
  4169c8:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  4169cc:	mov	x27, #0x0                   	// #0
  4169d0:	ldr	x23, [x20]
  4169d4:	mov	x21, x0
  4169d8:	mov	x1, x23
  4169dc:	bl	406cc0 <strstr@plt>
  4169e0:	cbnz	x0, 4168d4 <load_file@@Base+0xf4>
  4169e4:	mov	w1, #0x2f                  	// #47
  4169e8:	mov	x0, x23
  4169ec:	bl	406a70 <strrchr@plt>
  4169f0:	cmp	x0, #0x0
  4169f4:	csinc	x19, x23, x0, eq  // eq = none
  4169f8:	bl	406b50 <__ctype_b_loc@plt>
  4169fc:	mov	x1, x25
  416a00:	ldr	x2, [x0]
  416a04:	b	416a10 <load_file@@Base+0x230>
  416a08:	add	x19, x19, #0x1
  416a0c:	strb	w4, [x1], #1
  416a10:	ldrb	w4, [x19]
  416a14:	cmp	w4, #0x5f
  416a18:	ubfiz	x0, x4, #1, #8
  416a1c:	ldrh	w3, [x2, x0]
  416a20:	and	w3, w3, #0x8
  416a24:	ccmp	w3, #0x0, #0x0, ne  // ne = any
  416a28:	b.ne	416a08 <load_file@@Base+0x228>  // b.any
  416a2c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  416a30:	add	x0, x0, #0x108
  416a34:	adrp	x26, 443000 <expanding_var@@Base+0x338>
  416a38:	mov	x27, x25
  416a3c:	ldr	x2, [x0]
  416a40:	str	x2, [x1]
  416a44:	ldur	w0, [x0, #7]
  416a48:	stur	w0, [x1, #7]
  416a4c:	ldr	w0, [x26, #1088]
  416a50:	tbz	w0, #1, 4168f8 <load_file@@Base+0x118>
  416a54:	mov	w2, #0x5                   	// #5
  416a58:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  416a5c:	mov	x0, #0x0                   	// #0
  416a60:	add	x1, x1, #0x118
  416a64:	bl	406cd0 <dcgettext@plt>
  416a68:	adrp	x25, 443000 <expanding_var@@Base+0x338>
  416a6c:	ldr	x2, [x20]
  416a70:	mov	x1, x27
  416a74:	bl	406d60 <printf@plt>
  416a78:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  416a7c:	ldr	x0, [x0, #384]
  416a80:	bl	406c20 <fflush@plt>
  416a84:	ldr	x0, [x25, #1072]
  416a88:	ldr	x23, [x20]
  416a8c:	cbnz	x0, 416904 <load_file@@Base+0x124>
  416a90:	mov	w1, #0x102                 	// #258
  416a94:	bl	406820 <dlopen@plt>
  416a98:	str	x0, [x25, #1072]
  416a9c:	cbnz	x0, 416904 <load_file@@Base+0x124>
  416aa0:	bl	4068e0 <dlerror@plt>
  416aa4:	mov	x20, x0
  416aa8:	bl	406680 <strlen@plt>
  416aac:	mov	x19, x0
  416ab0:	mov	w2, #0x5                   	// #5
  416ab4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  416ab8:	mov	x0, #0x0                   	// #0
  416abc:	add	x1, x1, #0x138
  416ac0:	bl	406cd0 <dcgettext@plt>
  416ac4:	mov	x2, x0
  416ac8:	mov	x3, x20
  416acc:	mov	x1, x19
  416ad0:	mov	x0, x22
  416ad4:	bl	41a060 <fatal@@Base>
  416ad8:	ldrb	w1, [x0, x26]
  416adc:	mov	w0, #0xdf                  	// #223
  416ae0:	tst	w1, w0
  416ae4:	b.ne	4168e8 <load_file@@Base+0x108>  // b.any
  416ae8:	mov	w19, #0x1                   	// #1
  416aec:	b	416984 <load_file@@Base+0x1a4>
  416af0:	mov	x0, x23
  416af4:	mov	w1, #0x2f                  	// #47
  416af8:	bl	406bb0 <strchr@plt>
  416afc:	cbz	x0, 416b6c <load_file@@Base+0x38c>
  416b00:	mov	x0, x23
  416b04:	mov	w1, #0x101                 	// #257
  416b08:	bl	406820 <dlopen@plt>
  416b0c:	mov	x28, x0
  416b10:	cbz	x0, 416bb4 <load_file@@Base+0x3d4>
  416b14:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  416b18:	mov	x0, x28
  416b1c:	add	x1, x1, #0x160
  416b20:	bl	4068f0 <dlsym@plt>
  416b24:	cbz	x0, 416c14 <load_file@@Base+0x434>
  416b28:	mov	x1, x27
  416b2c:	mov	x0, x28
  416b30:	bl	4068f0 <dlsym@plt>
  416b34:	mov	x19, x0
  416b38:	cbz	x0, 416c48 <load_file@@Base+0x468>
  416b3c:	mov	x0, #0x18                  	// #24
  416b40:	bl	418a50 <xmalloc@@Base>
  416b44:	mov	x1, x0
  416b48:	add	x25, x25, #0x430
  416b4c:	mov	x0, x23
  416b50:	mov	x23, x1
  416b54:	bl	418c60 <xstrdup@@Base>
  416b58:	stp	x0, x28, [x23, #8]
  416b5c:	ldr	x0, [x25, #8]
  416b60:	str	x0, [x23]
  416b64:	str	x23, [x25, #8]
  416b68:	b	416914 <load_file@@Base+0x134>
  416b6c:	mov	x2, x23
  416b70:	adrp	x1, 427000 <_IO_stdin_used@@Base+0xc20>
  416b74:	mov	w0, #0x2                   	// #2
  416b78:	add	x1, x1, #0xab8
  416b7c:	bl	418ad8 <concat@@Base>
  416b80:	mov	w1, #0x101                 	// #257
  416b84:	bl	406820 <dlopen@plt>
  416b88:	mov	x28, x0
  416b8c:	cbnz	x0, 416b14 <load_file@@Base+0x334>
  416b90:	b	416b00 <load_file@@Base+0x320>
  416b94:	mov	x1, x21
  416b98:	mov	x2, x20
  416b9c:	bl	406640 <memcpy@plt>
  416ba0:	add	x0, x20, #0x1
  416ba4:	mov	w1, #0x20                  	// #32
  416ba8:	add	x0, x23, x0
  416bac:	strb	w1, [x23, x20]
  416bb0:	b	41695c <load_file@@Base+0x17c>
  416bb4:	bl	4068e0 <dlerror@plt>
  416bb8:	mov	x20, x0
  416bbc:	cbz	w24, 416bf0 <load_file@@Base+0x410>
  416bc0:	ldr	w0, [x26, #1088]
  416bc4:	and	w19, w0, #0x1
  416bc8:	tbz	w0, #0, 41698c <load_file@@Base+0x1ac>
  416bcc:	mov	x1, x20
  416bd0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  416bd4:	add	x0, x0, #0x4a0
  416bd8:	bl	406d60 <printf@plt>
  416bdc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  416be0:	mov	w19, #0x0                   	// #0
  416be4:	ldr	x0, [x0, #384]
  416be8:	bl	406c20 <fflush@plt>
  416bec:	b	41698c <load_file@@Base+0x1ac>
  416bf0:	bl	406680 <strlen@plt>
  416bf4:	mov	w19, #0x0                   	// #0
  416bf8:	mov	x1, x0
  416bfc:	mov	x3, x20
  416c00:	mov	x0, x22
  416c04:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  416c08:	add	x2, x2, #0x4a0
  416c0c:	bl	419dc8 <error@@Base>
  416c10:	b	41698c <load_file@@Base+0x1ac>
  416c14:	mov	x0, x23
  416c18:	bl	406680 <strlen@plt>
  416c1c:	mov	w2, #0x5                   	// #5
  416c20:	mov	x19, x0
  416c24:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  416c28:	mov	x0, #0x0                   	// #0
  416c2c:	add	x1, x1, #0x180
  416c30:	bl	406cd0 <dcgettext@plt>
  416c34:	mov	x3, x23
  416c38:	mov	x2, x0
  416c3c:	mov	x1, x19
  416c40:	mov	x0, x22
  416c44:	bl	41a060 <fatal@@Base>
  416c48:	bl	4068e0 <dlerror@plt>
  416c4c:	mov	x20, x0
  416c50:	mov	x0, x27
  416c54:	bl	406680 <strlen@plt>
  416c58:	mov	x19, x0
  416c5c:	mov	x0, x23
  416c60:	bl	406680 <strlen@plt>
  416c64:	mov	x24, x0
  416c68:	mov	x0, x20
  416c6c:	bl	406680 <strlen@plt>
  416c70:	mov	w2, #0x5                   	// #5
  416c74:	mov	x21, x0
  416c78:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  416c7c:	mov	x0, #0x0                   	// #0
  416c80:	add	x1, x1, #0x1b8
  416c84:	bl	406cd0 <dcgettext@plt>
  416c88:	add	x1, x19, x24
  416c8c:	mov	x2, x0
  416c90:	add	x1, x1, x21
  416c94:	mov	x5, x20
  416c98:	mov	x4, x23
  416c9c:	mov	x3, x27
  416ca0:	mov	x0, x22
  416ca4:	bl	41a060 <fatal@@Base>
  416ca8:	mov	w2, #0x5                   	// #5
  416cac:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  416cb0:	mov	x0, #0x0                   	// #0
  416cb4:	add	x1, x1, #0xd8
  416cb8:	bl	406cd0 <dcgettext@plt>
  416cbc:	mov	x2, x0
  416cc0:	ldr	x3, [x20]
  416cc4:	mov	x1, x26
  416cc8:	mov	x0, x22
  416ccc:	bl	41a060 <fatal@@Base>

0000000000416cd0 <unload_file@@Base>:
  416cd0:	stp	x29, x30, [sp, #-48]!
  416cd4:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  416cd8:	mov	x29, sp
  416cdc:	stp	x19, x20, [sp, #16]
  416ce0:	ldr	x19, [x1, #1080]
  416ce4:	cbz	x19, 416d34 <unload_file@@Base+0x64>
  416ce8:	mov	x20, x0
  416cec:	str	x21, [sp, #32]
  416cf0:	add	x21, x0, #0x1
  416cf4:	b	416d10 <unload_file@@Base+0x40>
  416cf8:	ldrb	w1, [x0]
  416cfc:	ldrb	w2, [x20]
  416d00:	cmp	w2, w1
  416d04:	b.eq	416d40 <unload_file@@Base+0x70>  // b.none
  416d08:	ldr	x19, [x19]
  416d0c:	cbz	x19, 416d60 <unload_file@@Base+0x90>
  416d10:	ldr	x0, [x19, #8]
  416d14:	cmp	x0, x20
  416d18:	b.ne	416cf8 <unload_file@@Base+0x28>  // b.any
  416d1c:	ldr	x0, [x19, #16]
  416d20:	cbz	x0, 416d08 <unload_file@@Base+0x38>
  416d24:	bl	4067c0 <dlclose@plt>
  416d28:	cbnz	w0, 416d70 <unload_file@@Base+0xa0>
  416d2c:	ldr	x21, [sp, #32]
  416d30:	str	xzr, [x19, #16]
  416d34:	ldp	x19, x20, [sp, #16]
  416d38:	ldp	x29, x30, [sp], #48
  416d3c:	ret
  416d40:	mov	x1, x21
  416d44:	add	x0, x0, #0x1
  416d48:	cbz	w2, 416d1c <unload_file@@Base+0x4c>
  416d4c:	bl	406b40 <strcmp@plt>
  416d50:	cbnz	w0, 416d08 <unload_file@@Base+0x38>
  416d54:	ldr	x0, [x19, #16]
  416d58:	cbz	x0, 416d08 <unload_file@@Base+0x38>
  416d5c:	b	416d24 <unload_file@@Base+0x54>
  416d60:	ldp	x19, x20, [sp, #16]
  416d64:	ldr	x21, [sp, #32]
  416d68:	ldp	x29, x30, [sp], #48
  416d6c:	ret
  416d70:	ldr	x1, [x19, #8]
  416d74:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  416d78:	add	x0, x0, #0x1e8
  416d7c:	bl	419f38 <perror_with_name@@Base>
  416d80:	b	416d2c <unload_file@@Base+0x5c>
  416d84:	nop

0000000000416d88 <gmk_alloc@@Base>:
  416d88:	mov	w0, w0
  416d8c:	b	418a50 <xmalloc@@Base>

0000000000416d90 <gmk_free@@Base>:
  416d90:	b	406b90 <free@plt>
  416d94:	nop

0000000000416d98 <gmk_eval@@Base>:
  416d98:	stp	x29, x30, [sp, #-80]!
  416d9c:	mov	x29, sp
  416da0:	stp	x19, x20, [sp, #16]
  416da4:	mov	x20, x0
  416da8:	mov	x19, x1
  416dac:	cbz	x1, 416dc8 <gmk_eval@@Base+0x30>
  416db0:	ldr	x0, [x1]
  416db4:	add	x19, sp, #0x38
  416db8:	str	x0, [sp, #56]
  416dbc:	ldr	x0, [x1, #8]
  416dc0:	str	x0, [sp, #64]
  416dc4:	str	xzr, [sp, #72]
  416dc8:	add	x1, sp, #0x30
  416dcc:	add	x0, sp, #0x28
  416dd0:	bl	40c440 <install_variable_buffer@@Base>
  416dd4:	mov	x0, x20
  416dd8:	bl	418c60 <xstrdup@@Base>
  416ddc:	mov	x1, x19
  416de0:	mov	x19, x0
  416de4:	bl	41e9c0 <eval_buffer@@Base>
  416de8:	mov	x0, x19
  416dec:	bl	406b90 <free@plt>
  416df0:	ldp	x0, x1, [sp, #40]
  416df4:	bl	40c460 <restore_variable_buffer@@Base>
  416df8:	ldp	x19, x20, [sp, #16]
  416dfc:	ldp	x29, x30, [sp], #80
  416e00:	ret
  416e04:	nop

0000000000416e08 <gmk_expand@@Base>:
  416e08:	mov	x1, #0x0                   	// #0
  416e0c:	b	40c400 <allocated_variable_expand_for_file@@Base>

0000000000416e10 <gmk_add_function@@Base>:
  416e10:	adrp	x6, 445000 <output_context@@Base+0x1250>
  416e14:	mov	x5, x1
  416e18:	mov	x1, x0
  416e1c:	ldr	x0, [x6, #3552]
  416e20:	b	411700 <define_new_function@@Base>
  416e24:	nop
  416e28:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  416e2c:	ldr	w1, [x0, #1088]
  416e30:	cmp	w1, #0x0
  416e34:	cset	w1, eq  // eq = none
  416e38:	str	w1, [x0, #1088]
  416e3c:	ret
  416e40:	ldrb	w2, [x1]
  416e44:	cbz	w2, 416ea4 <gmk_add_function@@Base+0x94>
  416e48:	adrp	x5, 443000 <expanding_var@@Base+0x338>
  416e4c:	add	x5, x5, #0x440
  416e50:	add	x5, x5, #0x8
  416e54:	mov	w6, #0x5c                  	// #92
  416e58:	b	416e84 <gmk_add_function@@Base+0x74>
  416e5c:	ldrh	w3, [x5, w2, sxtw #1]
  416e60:	cmp	w2, #0x5c
  416e64:	and	w2, w3, #0x2
  416e68:	ccmp	w2, #0x0, #0x0, ne  // ne = any
  416e6c:	b.eq	416ea8 <gmk_add_function@@Base+0x98>  // b.none
  416e70:	strb	w6, [x0], #2
  416e74:	ldrb	w2, [x1], #1
  416e78:	strb	w2, [x4]
  416e7c:	ldrb	w2, [x1]
  416e80:	cbz	w2, 416ea4 <gmk_add_function@@Base+0x94>
  416e84:	cmp	w2, #0x24
  416e88:	add	x4, x0, #0x1
  416e8c:	b.ne	416e5c <gmk_add_function@@Base+0x4c>  // b.any
  416e90:	strb	w2, [x0], #2
  416e94:	ldrb	w2, [x1], #1
  416e98:	strb	w2, [x4]
  416e9c:	ldrb	w2, [x1]
  416ea0:	cbnz	w2, 416e84 <gmk_add_function@@Base+0x74>
  416ea4:	ret
  416ea8:	mov	x2, x4
  416eac:	mov	x4, x0
  416eb0:	mov	x0, x2
  416eb4:	b	416e74 <gmk_add_function@@Base+0x64>
  416eb8:	stp	x29, x30, [sp, #-48]!
  416ebc:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  416ec0:	add	x0, x0, #0x350
  416ec4:	mov	x29, sp
  416ec8:	stp	x19, x20, [sp, #16]
  416ecc:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  416ed0:	add	x20, x20, #0x440
  416ed4:	adrp	x19, 429000 <_IO_stdin_used@@Base+0x2c20>
  416ed8:	add	x19, x19, #0x1f8
  416edc:	ldr	w1, [x20, #524]
  416ee0:	ldr	w2, [x20, #520]
  416ee4:	cmp	w2, #0x0
  416ee8:	csel	x19, x19, x0, ne  // ne = any
  416eec:	cbz	w1, 416efc <gmk_add_function@@Base+0xec>
  416ef0:	ldp	x19, x20, [sp, #16]
  416ef4:	ldp	x29, x30, [sp], #48
  416ef8:	ret
  416efc:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  416f00:	str	x21, [sp, #32]
  416f04:	adrp	x21, 446000 <commands_started@@Base+0x1c8>
  416f08:	mov	x1, x19
  416f0c:	ldr	x2, [x2, #328]
  416f10:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  416f14:	add	x0, x0, #0x200
  416f18:	bl	406d60 <printf@plt>
  416f1c:	ldr	x0, [x21, #1888]
  416f20:	cbz	x0, 416f2c <gmk_add_function@@Base+0x11c>
  416f24:	ldrb	w0, [x0]
  416f28:	cbnz	w0, 416fa4 <gmk_add_function@@Base+0x194>
  416f2c:	mov	w2, #0x5                   	// #5
  416f30:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  416f34:	mov	x0, #0x0                   	// #0
  416f38:	add	x1, x1, #0x210
  416f3c:	bl	406cd0 <dcgettext@plt>
  416f40:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  416f44:	mov	x1, x19
  416f48:	ldr	x2, [x2, #320]
  416f4c:	bl	406d60 <printf@plt>
  416f50:	mov	x1, x19
  416f54:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  416f58:	add	x0, x0, #0x238
  416f5c:	bl	406d60 <printf@plt>
  416f60:	mov	w2, #0x5                   	// #5
  416f64:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  416f68:	mov	x0, #0x0                   	// #0
  416f6c:	add	x1, x1, #0x278
  416f70:	bl	406cd0 <dcgettext@plt>
  416f74:	mov	x3, x19
  416f78:	mov	x2, x19
  416f7c:	mov	x1, x19
  416f80:	bl	406d60 <printf@plt>
  416f84:	mov	w1, #0x1                   	// #1
  416f88:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  416f8c:	str	w1, [x20, #524]
  416f90:	ldp	x19, x20, [sp, #16]
  416f94:	ldr	x21, [sp, #32]
  416f98:	ldp	x29, x30, [sp], #48
  416f9c:	ldr	x0, [x0, #384]
  416fa0:	b	406c20 <fflush@plt>
  416fa4:	mov	w2, #0x5                   	// #5
  416fa8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  416fac:	mov	x0, #0x0                   	// #0
  416fb0:	add	x1, x1, #0x220
  416fb4:	bl	406cd0 <dcgettext@plt>
  416fb8:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  416fbc:	mov	x1, x19
  416fc0:	ldr	x3, [x21, #1888]
  416fc4:	ldr	x2, [x2, #320]
  416fc8:	bl	406d60 <printf@plt>
  416fcc:	b	416f50 <gmk_add_function@@Base+0x140>
  416fd0:	stp	x29, x30, [sp, #-336]!
  416fd4:	mov	w2, #0x10000000            	// #268435456
  416fd8:	mov	x29, sp
  416fdc:	stp	x19, x20, [sp, #16]
  416fe0:	add	x20, sp, #0x28
  416fe4:	mov	w19, w0
  416fe8:	mov	x0, x20
  416fec:	str	x1, [sp, #32]
  416ff0:	str	w2, [sp, #168]
  416ff4:	bl	406910 <sigemptyset@plt>
  416ff8:	mov	w1, w19
  416ffc:	mov	x0, x20
  417000:	bl	406d40 <sigaddset@plt>
  417004:	add	x1, sp, #0x20
  417008:	add	x2, sp, #0xb8
  41700c:	mov	w0, w19
  417010:	bl	406a60 <sigaction@plt>
  417014:	ldr	x1, [sp, #184]
  417018:	cmp	w0, #0x0
  41701c:	ldp	x19, x20, [sp, #16]
  417020:	csinv	x0, x1, xzr, eq  // eq = none
  417024:	ldp	x29, x30, [sp], #336
  417028:	ret
  41702c:	nop
  417030:	stp	x29, x30, [sp, #-48]!
  417034:	mov	x0, #0x0                   	// #0
  417038:	mov	x29, sp
  41703c:	str	x19, [sp, #16]
  417040:	bl	4068c0 <time@plt>
  417044:	str	x0, [sp, #40]
  417048:	bl	416eb8 <gmk_add_function@@Base+0xa8>
  41704c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  417050:	add	x1, x1, #0x348
  417054:	mov	w2, #0x5                   	// #5
  417058:	mov	x0, #0x0                   	// #0
  41705c:	bl	406cd0 <dcgettext@plt>
  417060:	mov	x19, x0
  417064:	add	x0, sp, #0x28
  417068:	bl	4067d0 <ctime@plt>
  41706c:	mov	x1, x0
  417070:	mov	x0, x19
  417074:	bl	406d60 <printf@plt>
  417078:	bl	424850 <print_variable_data_base@@Base>
  41707c:	bl	40b3c0 <print_dir_data_base@@Base>
  417080:	bl	421f80 <print_rule_data_base@@Base>
  417084:	bl	40e248 <print_file_data_base@@Base>
  417088:	bl	425218 <print_vpath_data_base@@Base>
  41708c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  417090:	add	x0, x0, #0x370
  417094:	bl	422578 <strcache_print_stats@@Base>
  417098:	mov	x0, #0x0                   	// #0
  41709c:	bl	4068c0 <time@plt>
  4170a0:	mov	x3, x0
  4170a4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4170a8:	add	x1, x1, #0x378
  4170ac:	mov	w2, #0x5                   	// #5
  4170b0:	mov	x0, #0x0                   	// #0
  4170b4:	str	x3, [sp, #40]
  4170b8:	bl	406cd0 <dcgettext@plt>
  4170bc:	mov	x19, x0
  4170c0:	add	x0, sp, #0x28
  4170c4:	bl	4067d0 <ctime@plt>
  4170c8:	mov	x1, x0
  4170cc:	mov	x0, x19
  4170d0:	bl	406d60 <printf@plt>
  4170d4:	ldr	x19, [sp, #16]
  4170d8:	ldp	x29, x30, [sp], #48
  4170dc:	ret
  4170e0:	stp	x29, x30, [sp, #-176]!
  4170e4:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x2c20>
  4170e8:	add	x8, x8, #0x3c8
  4170ec:	mov	x29, sp
  4170f0:	adrp	x5, 429000 <_IO_stdin_used@@Base+0x2c20>
  4170f4:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  4170f8:	add	x5, x5, #0x3d8
  4170fc:	add	x2, x2, #0x3f0
  417100:	stp	x23, x24, [sp, #48]
  417104:	mov	w23, w0
  417108:	adrp	x24, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41710c:	add	x0, x24, #0x350
  417110:	stp	x21, x22, [sp, #32]
  417114:	adrp	x21, 42a000 <_IO_stdin_used@@Base+0x3c20>
  417118:	ldr	x3, [x8]
  41711c:	adrp	x22, 42c000 <_IO_stdin_used@@Base+0x5c20>
  417120:	add	x21, x21, #0x900
  417124:	add	x22, x22, #0x340
  417128:	stp	x27, x28, [sp, #80]
  41712c:	mov	w28, w1
  417130:	stp	x0, x3, [x29, #104]
  417134:	ldp	x6, x7, [x2]
  417138:	stp	x19, x20, [sp, #16]
  41713c:	ldr	w2, [x2, #16]
  417140:	ldp	x0, x1, [x5]
  417144:	mov	x19, #0x0                   	// #0
  417148:	ldur	x8, [x8, #6]
  41714c:	mov	w20, #0x62                  	// #98
  417150:	ldr	x5, [x5, #16]
  417154:	stp	x25, x26, [sp, #64]
  417158:	mov	x26, #0x0                   	// #0
  41715c:	mov	x25, #0x0                   	// #0
  417160:	stur	x8, [x29, #118]
  417164:	stp	x6, x7, [x29, #128]
  417168:	str	w2, [x29, #144]
  41716c:	stp	x0, x1, [x29, #152]
  417170:	str	x5, [x29, #168]
  417174:	nop
  417178:	ldrb	w0, [x21, #16]
  41717c:	tbz	w0, #1, 4171b8 <gmk_add_function@@Base+0x3a8>
  417180:	cbz	w28, 417188 <gmk_add_function@@Base+0x378>
  417184:	tbnz	w0, #2, 4171b8 <gmk_add_function@@Base+0x3a8>
  417188:	ldr	w0, [x21, #4]
  41718c:	cmp	w0, #0x5
  417190:	b.eq	417494 <gmk_add_function@@Base+0x684>  // b.none
  417194:	b.hi	41730c <gmk_add_function@@Base+0x4fc>  // b.pmore
  417198:	cmp	w0, #0x2
  41719c:	b.eq	417534 <gmk_add_function@@Base+0x724>  // b.none
  4171a0:	b.ls	4172a0 <gmk_add_function@@Base+0x490>  // b.plast
  4171a4:	cbz	w23, 4171b8 <gmk_add_function@@Base+0x3a8>
  4171a8:	ldr	x0, [x21, #8]
  4171ac:	ldr	x2, [x0]
  4171b0:	cbnz	x2, 4175bc <gmk_add_function@@Base+0x7ac>
  4171b4:	nop
  4171b8:	ldr	w20, [x21, #48]!
  4171bc:	cbnz	w20, 417178 <gmk_add_function@@Base+0x368>
  4171c0:	add	x0, x26, #0x47
  4171c4:	add	x2, x26, #0x38
  4171c8:	and	x0, x0, #0xfffffffffffffff0
  4171cc:	mov	w1, #0x0                   	// #0
  4171d0:	sub	sp, sp, x0
  4171d4:	mov	x21, sp
  4171d8:	mov	x24, x21
  4171dc:	mov	x0, x21
  4171e0:	bl	406970 <memset@plt>
  4171e4:	mov	w0, #0x2d                  	// #45
  4171e8:	strb	w0, [x24], #1
  4171ec:	mov	x20, x24
  4171f0:	cbnz	x19, 417214 <gmk_add_function@@Base+0x404>
  4171f4:	b	4175a0 <gmk_add_function@@Base+0x790>
  4171f8:	ldr	x0, [x19, #8]
  4171fc:	ldr	w1, [x0]
  417200:	cmp	w1, #0xff
  417204:	b.gt	41721c <gmk_add_function@@Base+0x40c>
  417208:	strb	w1, [x20], #1
  41720c:	ldr	x19, [x19]
  417210:	cbz	x19, 417378 <gmk_add_function@@Base+0x568>
  417214:	ldr	x0, [x19, #16]
  417218:	cbz	x0, 4171f8 <gmk_add_function@@Base+0x3e8>
  41721c:	mov	w22, #0x2d20                	// #11552
  417220:	mov	w25, #0x2d                  	// #45
  417224:	mov	w26, #0x3d                  	// #61
  417228:	b	417270 <gmk_add_function@@Base+0x460>
  41722c:	strb	w1, [x20, #2]
  417230:	mov	x20, x0
  417234:	ldr	x1, [x19, #16]
  417238:	cbz	x1, 417268 <gmk_add_function@@Base+0x458>
  41723c:	ldrb	w0, [x1]
  417240:	cbz	w0, 417268 <gmk_add_function@@Base+0x458>
  417244:	ldr	x0, [x19, #8]
  417248:	ldr	w0, [x0]
  41724c:	cmp	w0, #0xff
  417250:	b.le	41725c <gmk_add_function@@Base+0x44c>
  417254:	strb	w26, [x20], #1
  417258:	ldr	x1, [x19, #16]
  41725c:	mov	x0, x20
  417260:	bl	416e40 <gmk_add_function@@Base+0x30>
  417264:	mov	x20, x0
  417268:	ldr	x19, [x19]
  41726c:	cbz	x19, 417378 <gmk_add_function@@Base+0x568>
  417270:	mov	x0, x20
  417274:	strh	w22, [x0], #3
  417278:	ldr	x1, [x19, #8]
  41727c:	ldr	w1, [x1]
  417280:	cmp	w1, #0xff
  417284:	b.le	41722c <gmk_add_function@@Base+0x41c>
  417288:	strb	w25, [x20, #2]
  41728c:	ldr	x1, [x19, #8]
  417290:	ldr	x1, [x1, #40]
  417294:	bl	406840 <stpcpy@plt>
  417298:	mov	x20, x0
  41729c:	b	417234 <gmk_add_function@@Base+0x424>
  4172a0:	b.eq	417374 <gmk_add_function@@Base+0x564>  // b.none
  4172a4:	ldr	x1, [x21, #8]
  4172a8:	and	w0, w0, #0x1
  4172ac:	ldr	w1, [x1]
  4172b0:	cmp	w1, #0x0
  4172b4:	cset	w2, ne  // ne = any
  4172b8:	cmp	w2, w0
  4172bc:	b.eq	4171b8 <gmk_add_function@@Base+0x3a8>  // b.none
  4172c0:	ldr	x0, [x21, #32]
  4172c4:	cbz	x0, 4172d4 <gmk_add_function@@Base+0x4c4>
  4172c8:	ldr	w0, [x0]
  4172cc:	cmp	w1, w0
  4172d0:	b.eq	4171b8 <gmk_add_function@@Base+0x3a8>  // b.none
  4172d4:	sub	sp, sp, #0x20
  4172d8:	mov	x1, sp
  4172dc:	stp	xzr, x21, [x1]
  4172e0:	str	xzr, [x1, #16]
  4172e4:	cbz	x19, 4176c4 <gmk_add_function@@Base+0x8b4>
  4172e8:	str	x1, [x25]
  4172ec:	cmp	w20, #0xff
  4172f0:	b.le	4175b0 <gmk_add_function@@Base+0x7a0>
  4172f4:	ldr	x0, [x21, #40]
  4172f8:	add	x26, x26, #0x5
  4172fc:	mov	x25, x1
  417300:	bl	406680 <strlen@plt>
  417304:	add	x26, x0, x26
  417308:	b	4171b8 <gmk_add_function@@Base+0x3a8>
  41730c:	cmp	w0, #0x6
  417310:	b.ne	41736c <gmk_add_function@@Base+0x55c>  // b.any
  417314:	cbz	w23, 4171b8 <gmk_add_function@@Base+0x3a8>
  417318:	ldr	x1, [x21, #32]
  41731c:	ldr	x0, [x21, #8]
  417320:	cbz	x1, 417334 <gmk_add_function@@Base+0x524>
  417324:	ldr	d1, [x0]
  417328:	ldr	d0, [x1]
  41732c:	fcmp	d1, d0
  417330:	b.eq	4171b8 <gmk_add_function@@Base+0x3a8>  // b.none
  417334:	ldr	x1, [x21, #24]
  417338:	cbz	x1, 41734c <gmk_add_function@@Base+0x53c>
  41733c:	ldr	d1, [x0]
  417340:	ldr	d0, [x1]
  417344:	fcmp	d1, d0
  417348:	b.eq	4176ac <gmk_add_function@@Base+0x89c>  // b.none
  41734c:	ldr	d0, [x0]
  417350:	sub	sp, sp, #0x70
  417354:	mov	x27, sp
  417358:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  41735c:	add	x1, x0, #0x3a0
  417360:	mov	x0, x27
  417364:	bl	406730 <sprintf@plt>
  417368:	b	4174e4 <gmk_add_function@@Base+0x6d4>
  41736c:	cmp	w0, #0x7
  417370:	b.eq	4171b8 <gmk_add_function@@Base+0x3a8>  // b.none
  417374:	bl	406ab0 <abort@plt>
  417378:	cmp	x20, x24
  41737c:	b.eq	4175a0 <gmk_add_function@@Base+0x790>  // b.none
  417380:	ldrb	w0, [x21]
  417384:	mov	x2, #0x0                   	// #0
  417388:	cmp	w0, #0x2d
  41738c:	b.eq	41758c <gmk_add_function@@Base+0x77c>  // b.none
  417390:	adrp	x25, 443000 <expanding_var@@Base+0x338>
  417394:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  417398:	add	x19, x19, #0x440
  41739c:	mov	w4, #0x1                   	// #1
  4173a0:	ldr	x5, [x25, #288]
  4173a4:	add	x2, x21, x2
  4173a8:	mov	w3, w4
  4173ac:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4173b0:	mov	x6, #0x0                   	// #0
  4173b4:	add	x0, x0, #0x3a8
  4173b8:	ldr	x5, [x5, #8]
  4173bc:	mov	x1, #0x6                   	// #6
  4173c0:	bl	422df0 <define_variable_in_set@@Base>
  4173c4:	ldr	x0, [x19, #528]
  4173c8:	cbz	x0, 4173ec <gmk_add_function@@Base+0x5dc>
  4173cc:	mov	x0, x20
  4173d0:	mov	w1, #0x20                  	// #32
  4173d4:	ldp	x2, x3, [x29, #128]
  4173d8:	add	x20, x20, #0x14
  4173dc:	strb	w1, [x0], #1
  4173e0:	ldur	w1, [x29, #143]
  4173e4:	stp	x2, x3, [x0]
  4173e8:	stur	w1, [x20, #-4]
  4173ec:	cbz	w23, 417434 <gmk_add_function@@Base+0x624>
  4173f0:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  4173f4:	add	x0, x29, #0x70
  4173f8:	add	x22, x29, #0x98
  4173fc:	ldr	w1, [x1, #1992]
  417400:	cmp	w1, #0x0
  417404:	csel	x22, x22, x0, ne  // ne = any
  417408:	mov	x0, x22
  41740c:	bl	406680 <strlen@plt>
  417410:	mov	x23, x0
  417414:	mov	x1, x23
  417418:	mov	x0, x22
  41741c:	bl	4231f0 <lookup_variable@@Base>
  417420:	cbz	x0, 417434 <gmk_add_function@@Base+0x624>
  417424:	ldr	x0, [x0, #8]
  417428:	cbz	x0, 417434 <gmk_add_function@@Base+0x624>
  41742c:	ldrb	w0, [x0]
  417430:	cbnz	w0, 417670 <gmk_add_function@@Base+0x860>
  417434:	ldr	x2, [x25, #288]
  417438:	mov	x6, #0x0                   	// #0
  41743c:	ldrb	w3, [x21]
  417440:	mov	w4, #0x1                   	// #1
  417444:	ldr	w1, [x19, #536]
  417448:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  41744c:	cmp	w3, #0x2d
  417450:	add	x0, x0, #0x3b8
  417454:	ldr	x5, [x2, #8]
  417458:	csel	x21, x21, x24, ne  // ne = any
  41745c:	cmp	w1, #0x0
  417460:	mov	x2, x21
  417464:	cset	w3, ne  // ne = any
  417468:	mov	x1, #0x9                   	// #9
  41746c:	add	w3, w3, #0x2
  417470:	bl	422df0 <define_variable_in_set@@Base>
  417474:	mov	sp, x29
  417478:	ldp	x19, x20, [sp, #16]
  41747c:	ldp	x21, x22, [sp, #32]
  417480:	ldp	x23, x24, [sp, #48]
  417484:	ldp	x25, x26, [sp, #64]
  417488:	ldp	x27, x28, [sp, #80]
  41748c:	ldp	x29, x30, [sp], #176
  417490:	ret
  417494:	cbz	w23, 4171b8 <gmk_add_function@@Base+0x3a8>
  417498:	ldr	x1, [x21, #32]
  41749c:	ldr	x0, [x21, #8]
  4174a0:	cbz	x1, 4174b4 <gmk_add_function@@Base+0x6a4>
  4174a4:	ldr	w2, [x0]
  4174a8:	ldr	w1, [x1]
  4174ac:	cmp	w2, w1
  4174b0:	b.eq	4171b8 <gmk_add_function@@Base+0x3a8>  // b.none
  4174b4:	ldr	x1, [x21, #24]
  4174b8:	cbz	x1, 4174cc <gmk_add_function@@Base+0x6bc>
  4174bc:	ldr	w2, [x0]
  4174c0:	ldr	w1, [x1]
  4174c4:	cmp	w2, w1
  4174c8:	b.eq	4176ac <gmk_add_function@@Base+0x89c>  // b.none
  4174cc:	ldr	w2, [x0]
  4174d0:	sub	sp, sp, #0x20
  4174d4:	mov	x27, sp
  4174d8:	mov	x1, x22
  4174dc:	mov	x0, x27
  4174e0:	bl	406730 <sprintf@plt>
  4174e4:	sub	sp, sp, #0x20
  4174e8:	mov	x20, sp
  4174ec:	stp	xzr, x21, [x20]
  4174f0:	str	x27, [x20, #16]
  4174f4:	cbz	x19, 4176dc <gmk_add_function@@Base+0x8cc>
  4174f8:	str	x20, [x25]
  4174fc:	mov	x0, x27
  417500:	bl	406680 <strlen@plt>
  417504:	add	x0, x0, #0x1
  417508:	ldr	w1, [x21]
  41750c:	add	x0, x0, x0, lsl #1
  417510:	cmp	w1, #0xff
  417514:	add	x26, x26, x0
  417518:	b.le	4176cc <gmk_add_function@@Base+0x8bc>
  41751c:	ldr	x0, [x21, #40]
  417520:	add	x26, x26, #0x2
  417524:	mov	x25, x20
  417528:	bl	406680 <strlen@plt>
  41752c:	add	x26, x0, x26
  417530:	b	4171b8 <gmk_add_function@@Base+0x3a8>
  417534:	cbz	w23, 4171b8 <gmk_add_function@@Base+0x3a8>
  417538:	ldr	x0, [x21, #8]
  41753c:	ldr	x0, [x0]
  417540:	cbz	x0, 4171b8 <gmk_add_function@@Base+0x3a8>
  417544:	sub	sp, sp, #0x20
  417548:	mov	x27, sp
  41754c:	stp	xzr, x21, [x27]
  417550:	str	x0, [x27, #16]
  417554:	cbz	x19, 4176e4 <gmk_add_function@@Base+0x8d4>
  417558:	str	x27, [x25]
  41755c:	bl	406680 <strlen@plt>
  417560:	add	x0, x0, #0x1
  417564:	cmp	w20, #0xff
  417568:	add	x0, x0, x0, lsl #1
  41756c:	add	x26, x26, x0
  417570:	b.le	4176d4 <gmk_add_function@@Base+0x8c4>
  417574:	ldr	x0, [x21, #40]
  417578:	add	x26, x26, #0x2
  41757c:	mov	x25, x27
  417580:	bl	406680 <strlen@plt>
  417584:	add	x26, x0, x26
  417588:	b	4171b8 <gmk_add_function@@Base+0x3a8>
  41758c:	ldrb	w0, [x21, #1]
  417590:	cmp	w0, #0x20
  417594:	cset	x2, eq  // eq = none
  417598:	lsl	x2, x2, #1
  41759c:	b	417390 <gmk_add_function@@Base+0x580>
  4175a0:	mov	x20, x21
  4175a4:	mov	x2, #0x0                   	// #0
  4175a8:	strb	wzr, [x21]
  4175ac:	b	417390 <gmk_add_function@@Base+0x580>
  4175b0:	add	x26, x26, #0x3
  4175b4:	mov	x25, x1
  4175b8:	b	4171b8 <gmk_add_function@@Base+0x3a8>
  4175bc:	ldr	w0, [x2, #8]
  4175c0:	cbz	w0, 4171b8 <gmk_add_function@@Base+0x3a8>
  4175c4:	sub	w0, w0, #0x1
  4175c8:	sub	sp, sp, #0x20
  4175cc:	ldr	x27, [x2]
  4175d0:	add	x0, x0, #0x1
  4175d4:	mov	x24, #0x0                   	// #0
  4175d8:	mov	x5, x25
  4175dc:	mov	x25, sp
  4175e0:	lsl	x0, x0, #3
  4175e4:	str	x0, [x29, #96]
  4175e8:	add	x2, x27, x24
  4175ec:	ldr	x0, [x27, x24]
  4175f0:	stp	xzr, x21, [x25]
  4175f4:	str	x0, [x25, #16]
  4175f8:	cbz	x19, 417660 <gmk_add_function@@Base+0x850>
  4175fc:	str	x25, [x5]
  417600:	cbz	x0, 417668 <gmk_add_function@@Base+0x858>
  417604:	ldr	x0, [x2]
  417608:	bl	406680 <strlen@plt>
  41760c:	add	x0, x0, #0x1
  417610:	add	x0, x0, x0, lsl #1
  417614:	add	x26, x26, x0
  417618:	cmp	w20, #0xff
  41761c:	b.le	417630 <gmk_add_function@@Base+0x820>
  417620:	ldr	x0, [x21, #40]
  417624:	add	x26, x26, #0x2
  417628:	bl	406680 <strlen@plt>
  41762c:	add	x26, x0, x26
  417630:	ldr	x0, [x29, #96]
  417634:	add	x24, x24, #0x8
  417638:	cmp	x0, x24
  41763c:	b.eq	4171b8 <gmk_add_function@@Base+0x3a8>  // b.none
  417640:	sub	sp, sp, #0x20
  417644:	mov	x5, x25
  417648:	mov	x25, sp
  41764c:	add	x2, x27, x24
  417650:	ldr	x0, [x27, x24]
  417654:	stp	xzr, x21, [x25]
  417658:	str	x0, [x25, #16]
  41765c:	cbnz	x19, 4175fc <gmk_add_function@@Base+0x7ec>
  417660:	mov	x19, x25
  417664:	cbnz	x0, 417604 <gmk_add_function@@Base+0x7f4>
  417668:	add	x26, x26, #0x3
  41766c:	b	417618 <gmk_add_function@@Base+0x808>
  417670:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  417674:	add	x0, x0, #0x3b0
  417678:	mov	x3, x20
  41767c:	mov	w4, #0x2824                	// #10276
  417680:	mov	x1, x22
  417684:	mov	x2, x23
  417688:	ldr	w0, [x0]
  41768c:	str	w0, [x3], #6
  417690:	strh	w4, [x20, #4]
  417694:	mov	x0, x3
  417698:	bl	406640 <memcpy@plt>
  41769c:	mov	x3, x0
  4176a0:	mov	w0, #0x29                  	// #41
  4176a4:	strb	w0, [x3, x23]
  4176a8:	b	417434 <gmk_add_function@@Base+0x624>
  4176ac:	sub	sp, sp, #0x20
  4176b0:	mov	x1, sp
  4176b4:	ldr	x0, [x29, #104]
  4176b8:	stp	xzr, x21, [x1]
  4176bc:	str	x0, [x1, #16]
  4176c0:	cbnz	x19, 4172e8 <gmk_add_function@@Base+0x4d8>
  4176c4:	mov	x19, x1
  4176c8:	b	4172ec <gmk_add_function@@Base+0x4dc>
  4176cc:	mov	x25, x20
  4176d0:	b	4171b8 <gmk_add_function@@Base+0x3a8>
  4176d4:	mov	x25, x27
  4176d8:	b	4171b8 <gmk_add_function@@Base+0x3a8>
  4176dc:	mov	x19, x20
  4176e0:	b	4174fc <gmk_add_function@@Base+0x6ec>
  4176e4:	mov	x19, x27
  4176e8:	b	41755c <gmk_add_function@@Base+0x74c>
  4176ec:	nop
  4176f0:	stp	x29, x30, [sp, #-32]!
  4176f4:	mov	x29, sp
  4176f8:	stp	x19, x20, [sp, #16]
  4176fc:	ldrb	w1, [x0]
  417700:	cbz	w1, 4177b0 <gmk_add_function@@Base+0x9a0>
  417704:	mov	x19, x0
  417708:	cmp	w1, #0x7e
  41770c:	mov	x20, #0x0                   	// #0
  417710:	b.eq	417784 <gmk_add_function@@Base+0x974>  // b.none
  417714:	cmp	w1, #0x2e
  417718:	b.ne	417760 <gmk_add_function@@Base+0x950>  // b.any
  41771c:	nop
  417720:	ldrb	w0, [x19, #1]
  417724:	cmp	w0, #0x2f
  417728:	b.ne	417760 <gmk_add_function@@Base+0x950>  // b.any
  41772c:	ldrb	w0, [x19, #2]
  417730:	add	x19, x19, #0x2
  417734:	cmp	w0, #0x2f
  417738:	b.ne	41774c <gmk_add_function@@Base+0x93c>  // b.any
  41773c:	nop
  417740:	ldrb	w0, [x19, #1]!
  417744:	cmp	w0, #0x2f
  417748:	b.eq	417740 <gmk_add_function@@Base+0x930>  // b.none
  41774c:	cmp	w0, #0x2e
  417750:	b.eq	417720 <gmk_add_function@@Base+0x910>  // b.none
  417754:	cbnz	w0, 417760 <gmk_add_function@@Base+0x950>
  417758:	adrp	x19, 427000 <_IO_stdin_used@@Base+0xc20>
  41775c:	add	x19, x19, #0xab8
  417760:	mov	x0, x19
  417764:	bl	422490 <strcache_add@@Base>
  417768:	mov	x19, x0
  41776c:	mov	x0, x20
  417770:	bl	406b90 <free@plt>
  417774:	mov	x0, x19
  417778:	ldp	x19, x20, [sp, #16]
  41777c:	ldp	x29, x30, [sp], #32
  417780:	ret
  417784:	bl	41c130 <tilde_expand@@Base>
  417788:	mov	x20, x0
  41778c:	cbz	x0, 4177a0 <gmk_add_function@@Base+0x990>
  417790:	ldrb	w1, [x0]
  417794:	cbz	w1, 4177a0 <gmk_add_function@@Base+0x990>
  417798:	mov	x19, x0
  41779c:	b	417714 <gmk_add_function@@Base+0x904>
  4177a0:	ldrb	w0, [x19]
  4177a4:	cmp	w0, #0x2e
  4177a8:	b.eq	417720 <gmk_add_function@@Base+0x910>  // b.none
  4177ac:	b	417754 <gmk_add_function@@Base+0x944>
  4177b0:	mov	w2, #0x5                   	// #5
  4177b4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4177b8:	mov	x0, #0x0                   	// #0
  4177bc:	add	x1, x1, #0x408
  4177c0:	bl	406cd0 <dcgettext@plt>
  4177c4:	mov	x2, x0
  4177c8:	mov	x1, #0x0                   	// #0
  4177cc:	mov	x0, #0x0                   	// #0
  4177d0:	bl	41a060 <fatal@@Base>
  4177d4:	nop
  4177d8:	stp	x29, x30, [sp, #-64]!
  4177dc:	mov	x29, sp
  4177e0:	stp	x19, x20, [sp, #16]
  4177e4:	mov	x20, x0
  4177e8:	stp	x21, x22, [sp, #32]
  4177ec:	mov	w21, w1
  4177f0:	str	x23, [sp, #48]
  4177f4:	ldrb	w0, [x0]
  4177f8:	cmp	w0, #0x2d
  4177fc:	b.ne	417808 <gmk_add_function@@Base+0x9f8>  // b.any
  417800:	ldrb	w0, [x20, #1]
  417804:	cbz	w0, 41784c <gmk_add_function@@Base+0xa3c>
  417808:	mov	x1, x20
  41780c:	mov	w3, #0x0                   	// #0
  417810:	mov	w2, #0x4                   	// #4
  417814:	mov	x0, #0x0                   	// #0
  417818:	bl	4247c8 <try_variable_definition@@Base>
  41781c:	mov	x19, x0
  417820:	cbz	x0, 417864 <gmk_add_function@@Base+0xa54>
  417824:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  417828:	add	x20, x20, #0x440
  41782c:	ldr	x1, [x20, #544]
  417830:	cbnz	x1, 417840 <gmk_add_function@@Base+0xa30>
  417834:	b	417958 <gmk_add_function@@Base+0xb48>
  417838:	ldr	x1, [x1]
  41783c:	cbz	x1, 417958 <gmk_add_function@@Base+0xb48>
  417840:	ldr	x2, [x1, #8]
  417844:	cmp	x2, x19
  417848:	b.ne	417838 <gmk_add_function@@Base+0xa28>  // b.any
  41784c:	mov	sp, x29
  417850:	ldp	x19, x20, [sp, #16]
  417854:	ldp	x21, x22, [sp, #32]
  417858:	ldr	x23, [sp, #48]
  41785c:	ldp	x29, x30, [sp], #64
  417860:	ret
  417864:	cbnz	w21, 41784c <gmk_add_function@@Base+0xa3c>
  417868:	mov	x0, x20
  41786c:	bl	4176f0 <gmk_add_function@@Base+0x8e0>
  417870:	bl	422490 <strcache_add@@Base>
  417874:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  417878:	bl	40c820 <enter_file@@Base>
  41787c:	mov	x19, x0
  417880:	ldrb	w0, [x0, #137]
  417884:	add	x20, x20, #0x440
  417888:	orr	w0, w0, #0x10
  41788c:	strb	w0, [x19, #137]
  417890:	ldr	x0, [x20, #552]
  417894:	cbz	x0, 41798c <gmk_add_function@@Base+0xb7c>
  417898:	ldr	x21, [x20, #560]
  41789c:	mov	x0, #0x40                  	// #64
  4178a0:	bl	418a78 <xcalloc@@Base>
  4178a4:	ldr	x1, [x20, #560]
  4178a8:	str	x0, [x21]
  4178ac:	ldr	x0, [x1]
  4178b0:	str	x0, [x20, #560]
  4178b4:	str	x19, [x0, #16]
  4178b8:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x2c20>
  4178bc:	add	x20, x20, #0x430
  4178c0:	mov	x1, #0xc                   	// #12
  4178c4:	mov	x0, x20
  4178c8:	bl	4231f0 <lookup_variable@@Base>
  4178cc:	cbz	x0, 417984 <gmk_add_function@@Base+0xb74>
  4178d0:	ldr	x22, [x0, #8]
  4178d4:	mov	x0, x22
  4178d8:	bl	406680 <strlen@plt>
  4178dc:	mov	x21, x0
  4178e0:	ldr	x0, [x19]
  4178e4:	bl	406680 <strlen@plt>
  4178e8:	add	x3, x21, x0
  4178ec:	add	x3, x3, #0x11
  4178f0:	mov	x1, x22
  4178f4:	and	x3, x3, #0xfffffffffffffff0
  4178f8:	mov	x23, x0
  4178fc:	sub	sp, sp, x3
  417900:	mov	x2, x21
  417904:	mov	x22, sp
  417908:	mov	x0, x22
  41790c:	bl	406640 <memcpy@plt>
  417910:	mov	w1, #0x20                  	// #32
  417914:	add	x0, x21, #0x1
  417918:	strb	w1, [x22, x21]
  41791c:	add	x2, x23, #0x1
  417920:	add	x0, x22, x0
  417924:	ldr	x1, [x19]
  417928:	bl	406640 <memcpy@plt>
  41792c:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  417930:	mov	x2, x22
  417934:	mov	x0, x20
  417938:	mov	x6, #0x0                   	// #0
  41793c:	ldr	x5, [x1, #288]
  417940:	mov	w4, #0x0                   	// #0
  417944:	mov	w3, #0x0                   	// #0
  417948:	mov	x1, #0xc                   	// #12
  41794c:	ldr	x5, [x5, #8]
  417950:	bl	422df0 <define_variable_in_set@@Base>
  417954:	b	41784c <gmk_add_function@@Base+0xa3c>
  417958:	mov	x0, #0x10                  	// #16
  41795c:	bl	418a50 <xmalloc@@Base>
  417960:	ldr	x1, [x20, #544]
  417964:	stp	x1, x19, [x0]
  417968:	str	x0, [x20, #544]
  41796c:	mov	sp, x29
  417970:	ldp	x19, x20, [sp, #16]
  417974:	ldp	x21, x22, [sp, #32]
  417978:	ldr	x23, [sp, #48]
  41797c:	ldp	x29, x30, [sp], #64
  417980:	ret
  417984:	ldr	x22, [x19]
  417988:	b	41792c <gmk_add_function@@Base+0xb1c>
  41798c:	mov	x0, #0x40                  	// #64
  417990:	bl	418a78 <xcalloc@@Base>
  417994:	str	x0, [x20, #552]
  417998:	str	x0, [x20, #560]
  41799c:	b	4178b4 <gmk_add_function@@Base+0xaa4>
  4179a0:	stp	x29, x30, [sp, #-32]!
  4179a4:	mov	x29, sp
  4179a8:	stp	x19, x20, [sp, #16]
  4179ac:	mov	w20, w0
  4179b0:	bl	4255e8 <jobserver_enabled@@Base>
  4179b4:	cbz	w0, 4179c4 <gmk_add_function@@Base+0xbb4>
  4179b8:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  4179bc:	ldr	w3, [x19, #904]
  4179c0:	cbnz	w3, 4179e0 <gmk_add_function@@Base+0xbd0>
  4179c4:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  4179c8:	add	x19, x19, #0x440
  4179cc:	ldr	w0, [x19, #568]
  4179d0:	cbnz	w0, 417a14 <gmk_add_function@@Base+0xc04>
  4179d4:	ldp	x19, x20, [sp, #16]
  4179d8:	ldp	x29, x30, [sp], #32
  4179dc:	ret
  4179e0:	cmp	w20, #0x2
  4179e4:	b.ne	417a54 <gmk_add_function@@Base+0xc44>  // b.any
  4179e8:	sub	w3, w3, #0x1
  4179ec:	str	w3, [x19, #904]
  4179f0:	add	x19, x19, #0x388
  4179f4:	cbz	w3, 4179c4 <gmk_add_function@@Base+0xbb4>
  4179f8:	mov	w0, #0x0                   	// #0
  4179fc:	bl	425658 <jobserver_release@@Base>
  417a00:	ldr	w0, [x19]
  417a04:	sub	w0, w0, #0x1
  417a08:	str	w0, [x19]
  417a0c:	cbnz	w0, 4179f8 <gmk_add_function@@Base+0xbe8>
  417a10:	b	4179c4 <gmk_add_function@@Base+0xbb4>
  417a14:	bl	4256f8 <jobserver_acquire_all@@Base>
  417a18:	add	w3, w0, #0x1
  417a1c:	ldr	w4, [x19, #568]
  417a20:	cmp	w3, w4
  417a24:	b.ne	417a3c <gmk_add_function@@Base+0xc2c>  // b.any
  417a28:	bl	425600 <jobserver_clear@@Base>
  417a2c:	ldr	x0, [x19, #576]
  417a30:	bl	406b90 <free@plt>
  417a34:	str	xzr, [x19, #576]
  417a38:	b	4179d4 <gmk_add_function@@Base+0xbc4>
  417a3c:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  417a40:	mov	x1, #0x28                  	// #40
  417a44:	add	x2, x2, #0x480
  417a48:	mov	x0, #0x0                   	// #0
  417a4c:	bl	419dc8 <error@@Base>
  417a50:	b	417a28 <gmk_add_function@@Base+0xc18>
  417a54:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  417a58:	mov	x1, #0x14                  	// #20
  417a5c:	add	x2, x2, #0x440
  417a60:	mov	x0, #0x0                   	// #0
  417a64:	bl	419dc8 <error@@Base>
  417a68:	b	4179c4 <gmk_add_function@@Base+0xbb4>
  417a6c:	nop

0000000000417a70 <die@@Base>:
  417a70:	stp	x29, x30, [sp, #-48]!
  417a74:	mov	x29, sp
  417a78:	stp	x19, x20, [sp, #16]
  417a7c:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  417a80:	add	x20, x20, #0x440
  417a84:	stp	x21, x22, [sp, #32]
  417a88:	mov	w22, w0
  417a8c:	ldrb	w1, [x20, #584]
  417a90:	cbnz	w1, 417b40 <die@@Base+0xd0>
  417a94:	ldr	w0, [x20, #588]
  417a98:	mov	w1, #0x1                   	// #1
  417a9c:	strb	w1, [x20, #584]
  417aa0:	cbnz	w0, 417b48 <die@@Base+0xd8>
  417aa4:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  417aa8:	cmp	w22, #0x0
  417aac:	cset	w21, ne  // ne = any
  417ab0:	ldr	w0, [x19, #1044]
  417ab4:	cbz	w0, 417ad4 <die@@Base+0x64>
  417ab8:	add	x19, x19, #0x414
  417abc:	nop
  417ac0:	mov	w1, w21
  417ac4:	mov	w0, #0x1                   	// #1
  417ac8:	bl	415358 <reap_children@@Base>
  417acc:	ldr	w2, [x19]
  417ad0:	cbnz	w2, 417ac0 <die@@Base+0x50>
  417ad4:	bl	425c48 <remote_cleanup@@Base>
  417ad8:	mov	w0, #0x0                   	// #0
  417adc:	bl	40cda0 <remove_intermediates@@Base>
  417ae0:	ldr	w0, [x20, #520]
  417ae4:	cbnz	w0, 417b50 <die@@Base+0xe0>
  417ae8:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  417aec:	ldr	w0, [x0, #1920]
  417af0:	cbnz	w0, 417b58 <die@@Base+0xe8>
  417af4:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  417af8:	mov	w0, w22
  417afc:	bl	4179a0 <gmk_add_function@@Base+0xb90>
  417b00:	ldr	x0, [x19, #3504]
  417b04:	cbz	x0, 417b28 <die@@Base+0xb8>
  417b08:	bl	419790 <output_close@@Base>
  417b0c:	ldr	x1, [x19, #3504]
  417b10:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  417b14:	add	x0, x0, #0x7f0
  417b18:	cmp	x1, x0
  417b1c:	b.eq	417b24 <die@@Base+0xb4>  // b.none
  417b20:	bl	419790 <output_close@@Base>
  417b24:	str	xzr, [x19, #3504]
  417b28:	mov	x0, #0x0                   	// #0
  417b2c:	bl	419790 <output_close@@Base>
  417b30:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  417b34:	ldr	x0, [x0, #1912]
  417b38:	cbz	x0, 417b40 <die@@Base+0xd0>
  417b3c:	bl	406b80 <chdir@plt>
  417b40:	mov	w0, w22
  417b44:	bl	4066a0 <exit@plt>
  417b48:	bl	416eb8 <gmk_add_function@@Base+0xa8>
  417b4c:	b	417aa4 <die@@Base+0x34>
  417b50:	bl	417030 <gmk_add_function@@Base+0x220>
  417b54:	b	417ae8 <die@@Base+0x78>
  417b58:	bl	40e2b8 <verify_file_data_base@@Base>
  417b5c:	b	417af4 <die@@Base+0x84>
  417b60:	stp	x29, x30, [sp, #-144]!
  417b64:	mov	x29, sp
  417b68:	stp	x19, x20, [sp, #16]
  417b6c:	mov	w20, w0
  417b70:	stp	x21, x22, [sp, #32]
  417b74:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  417b78:	add	x19, x21, #0x440
  417b7c:	stp	x23, x24, [sp, #48]
  417b80:	mov	x22, x1
  417b84:	mov	w23, w2
  417b88:	stp	x25, x26, [sp, #64]
  417b8c:	stp	x27, x28, [sp, #80]
  417b90:	ldrb	w0, [x19, #592]
  417b94:	cbnz	w0, 417ca4 <die@@Base+0x234>
  417b98:	adrp	x2, 42a000 <_IO_stdin_used@@Base+0x3c20>
  417b9c:	add	x2, x2, #0x900
  417ba0:	mov	w1, #0x2d                  	// #45
  417ba4:	adrp	x8, 42b000 <_IO_stdin_used@@Base+0x4c20>
  417ba8:	mov	x4, x2
  417bac:	add	x0, x19, #0x2c0
  417bb0:	add	x8, x8, #0x350
  417bb4:	add	x7, x19, #0x251
  417bb8:	mov	w3, #0x62                  	// #98
  417bbc:	mov	w6, #0x0                   	// #0
  417bc0:	mov	w11, #0x1                   	// #1
  417bc4:	mov	w10, #0x2                   	// #2
  417bc8:	mov	w9, #0x3a                  	// #58
  417bcc:	strb	w1, [x19, #592]
  417bd0:	b	417c08 <die@@Base+0x198>
  417bd4:	mov	x1, x7
  417bd8:	cmp	w5, #0x6
  417bdc:	strb	w3, [x1], #1
  417be0:	b.hi	417d98 <die@@Base+0x328>  // b.pmore
  417be4:	cmp	w5, #0x1
  417be8:	b.hi	417fec <die@@Base+0x57c>  // b.pmore
  417bec:	mov	x7, x1
  417bf0:	str	wzr, [x0, #8]
  417bf4:	ldr	w3, [x4, #48]!
  417bf8:	add	x0, x0, #0x20
  417bfc:	add	w1, w6, #0x1
  417c00:	cbz	w3, 417c60 <die@@Base+0x1f0>
  417c04:	mov	w6, w1
  417c08:	ldr	x1, [x4, #40]
  417c0c:	str	xzr, [x0, #16]
  417c10:	str	w3, [x0, #24]
  417c14:	cmp	x1, #0x0
  417c18:	ldr	w5, [x4, #4]
  417c1c:	csel	x1, x8, x1, eq  // eq = none
  417c20:	str	x1, [x0]
  417c24:	cmp	w3, #0xff
  417c28:	b.le	417bd4 <die@@Base+0x164>
  417c2c:	cmp	w5, #0x6
  417c30:	b.hi	417d88 <die@@Base+0x318>  // b.pmore
  417c34:	cmp	w5, #0x1
  417c38:	b.hi	417c44 <die@@Base+0x1d4>  // b.pmore
  417c3c:	mov	x1, x7
  417c40:	b	417bec <die@@Base+0x17c>
  417c44:	ldr	x1, [x4, #24]
  417c48:	cbz	x1, 417d80 <die@@Base+0x310>
  417c4c:	str	w10, [x0, #8]
  417c50:	ldr	w3, [x4, #48]!
  417c54:	add	x0, x0, #0x20
  417c58:	add	w1, w6, #0x1
  417c5c:	cbnz	w3, 417c04 <die@@Base+0x194>
  417c60:	add	x2, x2, #0x800
  417c64:	add	w6, w6, #0xa
  417c68:	add	x3, x19, #0x2c0
  417c6c:	strb	wzr, [x7]
  417c70:	mov	w0, w1
  417c74:	add	w1, w1, #0x1
  417c78:	ldp	x8, x9, [x2]
  417c7c:	ubfiz	x0, x0, #5, #32
  417c80:	add	x0, x3, x0
  417c84:	cmp	w1, w6
  417c88:	ldp	x4, x5, [x2, #16]
  417c8c:	add	x2, x2, #0x20
  417c90:	stp	x8, x9, [x0]
  417c94:	stp	x4, x5, [x0, #16]
  417c98:	b.ne	417c70 <die@@Base+0x200>  // b.any
  417c9c:	ubfiz	x1, x1, #5, #32
  417ca0:	str	xzr, [x3, x1]
  417ca4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  417ca8:	adrp	x27, 443000 <expanding_var@@Base+0x338>
  417cac:	eor	w1, w23, #0x1
  417cb0:	cmp	w20, #0x0
  417cb4:	str	w1, [x0, #408]
  417cb8:	str	wzr, [x27, #376]
  417cbc:	b.le	418398 <die@@Base+0x928>
  417cc0:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  417cc4:	adrp	x28, 429000 <_IO_stdin_used@@Base+0x2c20>
  417cc8:	add	x24, x24, #0x170
  417ccc:	add	x0, x28, #0x520
  417cd0:	add	x25, x27, #0x178
  417cd4:	mov	w26, #0x0                   	// #0
  417cd8:	str	x0, [sp, #96]
  417cdc:	b	417cf4 <die@@Base+0x284>
  417ce0:	mov	x28, x25
  417ce4:	mov	w26, #0x1                   	// #1
  417ce8:	ldr	w0, [x28]
  417cec:	cmp	w0, w20
  417cf0:	b.ge	417dd8 <die@@Base+0x368>  // b.tcont
  417cf4:	add	x3, x19, #0x2c0
  417cf8:	add	x2, x19, #0x250
  417cfc:	mov	x1, x22
  417d00:	mov	w0, w20
  417d04:	mov	x4, #0x0                   	// #0
  417d08:	bl	406b20 <getopt_long@plt>
  417d0c:	cmn	w0, #0x1
  417d10:	ldr	x5, [x24]
  417d14:	b.eq	418008 <die@@Base+0x598>  // b.none
  417d18:	cmp	w0, #0x1
  417d1c:	b.eq	417fd8 <die@@Base+0x568>  // b.none
  417d20:	cmp	w0, #0x3f
  417d24:	b.eq	417ce0 <die@@Base+0x270>  // b.none
  417d28:	adrp	x3, 42a000 <_IO_stdin_used@@Base+0x3c20>
  417d2c:	mov	w1, #0x62                  	// #98
  417d30:	add	x3, x3, #0x900
  417d34:	b	417d40 <die@@Base+0x2d0>
  417d38:	ldr	w1, [x3, #48]!
  417d3c:	cbz	w1, 417dc4 <die@@Base+0x354>
  417d40:	cmp	w1, w0
  417d44:	b.ne	417d38 <die@@Base+0x2c8>  // b.any
  417d48:	ldr	w1, [x3, #4]
  417d4c:	cbz	w23, 417da8 <die@@Base+0x338>
  417d50:	ldrb	w2, [x3, #16]
  417d54:	cmp	w1, #0x5
  417d58:	and	w2, w2, #0x1
  417d5c:	b.eq	418264 <die@@Base+0x7f4>  // b.none
  417d60:	b.ls	417f28 <die@@Base+0x4b8>  // b.plast
  417d64:	cmp	w1, #0x6
  417d68:	b.ne	417dbc <die@@Base+0x34c>  // b.any
  417d6c:	cbz	x5, 418058 <die@@Base+0x5e8>
  417d70:	mov	x28, x25
  417d74:	cbz	w2, 417ce8 <die@@Base+0x278>
  417d78:	b	41816c <die@@Base+0x6fc>
  417d7c:	add	x7, x7, #0x2
  417d80:	str	w11, [x0, #8]
  417d84:	b	417bf4 <die@@Base+0x184>
  417d88:	cmp	w5, #0x7
  417d8c:	b.ne	417bf4 <die@@Base+0x184>  // b.any
  417d90:	mov	x1, x7
  417d94:	b	417bec <die@@Base+0x17c>
  417d98:	mov	x7, x1
  417d9c:	cmp	w5, #0x7
  417da0:	b.ne	417bf4 <die@@Base+0x184>  // b.any
  417da4:	b	417bec <die@@Base+0x17c>
  417da8:	cmp	w1, #0x5
  417dac:	b.eq	41823c <die@@Base+0x7cc>  // b.none
  417db0:	b.ls	418044 <die@@Base+0x5d4>  // b.plast
  417db4:	cmp	w1, #0x6
  417db8:	b.eq	418050 <die@@Base+0x5e0>  // b.none
  417dbc:	cmp	w1, #0x7
  417dc0:	b.ne	418604 <die@@Base+0xb94>  // b.any
  417dc4:	mov	x28, x25
  417dc8:	ldr	w0, [x28]
  417dcc:	cmp	w0, w20
  417dd0:	b.lt	417cf4 <die@@Base+0x284>  // b.tstop
  417dd4:	nop
  417dd8:	cbnz	w23, 417de8 <die@@Base+0x378>
  417ddc:	cbnz	w26, 4184d8 <die@@Base+0xa68>
  417de0:	ldr	w0, [x19, #2176]
  417de4:	cbnz	w0, 4185ac <die@@Base+0xb3c>
  417de8:	ldr	w1, [x19, #2192]
  417dec:	ldr	x0, [x19, #2184]
  417df0:	cbz	w1, 41812c <die@@Base+0x6bc>
  417df4:	mov	w1, #0xfff                 	// #4095
  417df8:	str	w1, [x21, #1088]
  417dfc:	cbz	x0, 418094 <die@@Base+0x624>
  417e00:	ldr	x22, [x0]
  417e04:	ldr	x20, [x22]
  417e08:	cbz	x20, 418094 <die@@Base+0x624>
  417e0c:	bl	406830 <__ctype_tolower_loc@plt>
  417e10:	ldr	x2, [x0]
  417e14:	mov	w5, #0x101                 	// #257
  417e18:	mov	w4, #0x9                   	// #9
  417e1c:	mov	w3, #0x20                  	// #32
  417e20:	ldrb	w0, [x20]
  417e24:	nop
  417e28:	ldr	w0, [x2, x0, lsl #2]
  417e2c:	cmp	w0, #0x6a
  417e30:	b.eq	4180ec <die@@Base+0x67c>  // b.none
  417e34:	b.gt	4180b4 <die@@Base+0x644>
  417e38:	cmp	w0, #0x62
  417e3c:	b.eq	4180a4 <die@@Base+0x634>  // b.none
  417e40:	cmp	w0, #0x69
  417e44:	b.ne	4180d4 <die@@Base+0x664>  // b.any
  417e48:	ldr	w0, [x19]
  417e4c:	orr	w0, w0, w4
  417e50:	str	w0, [x19]
  417e54:	b	417e64 <die@@Base+0x3f4>
  417e58:	cmp	w0, #0x2c
  417e5c:	ccmp	w0, w3, #0x4, ne  // ne = any
  417e60:	b.eq	4180fc <die@@Base+0x68c>  // b.none
  417e64:	mov	x1, x20
  417e68:	ldrb	w0, [x20, #1]!
  417e6c:	cbnz	w0, 417e58 <die@@Base+0x3e8>
  417e70:	ldr	x20, [x22, #8]!
  417e74:	cbnz	x20, 417e20 <die@@Base+0x3b0>
  417e78:	ldr	w0, [x21, #1088]
  417e7c:	cbnz	w0, 418094 <die@@Base+0x624>
  417e80:	str	wzr, [x19, #2192]
  417e84:	ldr	x20, [x19, #2200]
  417e88:	cbz	x20, 417f04 <die@@Base+0x494>
  417e8c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  417e90:	add	x0, x0, #0x618
  417e94:	cmp	x20, x0
  417e98:	b.eq	418140 <die@@Base+0x6d0>  // b.none
  417e9c:	ldrb	w21, [x20]
  417ea0:	cmp	w21, #0x6e
  417ea4:	b.eq	4181a8 <die@@Base+0x738>  // b.none
  417ea8:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  417eac:	add	x0, x0, #0x268
  417eb0:	cmp	x20, x0
  417eb4:	b.eq	41815c <die@@Base+0x6ec>  // b.none
  417eb8:	cmp	w21, #0x6c
  417ebc:	b.eq	418148 <die@@Base+0x6d8>  // b.none
  417ec0:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  417ec4:	add	x0, x0, #0x620
  417ec8:	cmp	x20, x0
  417ecc:	b.eq	41819c <die@@Base+0x72c>  // b.none
  417ed0:	cmp	w21, #0x74
  417ed4:	b.ne	4181dc <die@@Base+0x76c>  // b.any
  417ed8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  417edc:	add	x0, x20, #0x1
  417ee0:	add	x1, x1, #0x621
  417ee4:	bl	406b40 <strcmp@plt>
  417ee8:	cbz	w0, 41819c <die@@Base+0x72c>
  417eec:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  417ef0:	add	x0, x0, #0x628
  417ef4:	cmp	x20, x0
  417ef8:	b.ne	418208 <die@@Base+0x798>  // b.any
  417efc:	mov	w0, #0x3                   	// #3
  417f00:	str	w0, [x19, #2208]
  417f04:	ldr	w0, [x19, #2216]
  417f08:	ldp	x21, x22, [sp, #32]
  417f0c:	ldp	x23, x24, [sp, #48]
  417f10:	ldp	x25, x26, [sp, #64]
  417f14:	ldp	x27, x28, [sp, #80]
  417f18:	str	w0, [x19, #2212]
  417f1c:	ldp	x19, x20, [sp, #16]
  417f20:	ldp	x29, x30, [sp], #144
  417f24:	ret
  417f28:	mov	x28, x25
  417f2c:	cmp	w1, #0x1
  417f30:	b.hi	417f4c <die@@Base+0x4dc>  // b.pmore
  417f34:	cbz	w2, 417ce8 <die@@Base+0x278>
  417f38:	ldr	x0, [x3, #8]
  417f3c:	eor	w1, w1, #0x1
  417f40:	mov	x28, x25
  417f44:	str	w1, [x0]
  417f48:	b	417ce8 <die@@Base+0x278>
  417f4c:	cbz	w2, 417ce8 <die@@Base+0x278>
  417f50:	cbz	x5, 418318 <die@@Base+0x8a8>
  417f54:	ldrb	w2, [x5]
  417f58:	cbnz	w2, 418330 <die@@Base+0x8c0>
  417f5c:	mov	w1, #0x63                  	// #99
  417f60:	strh	w1, [sp, #136]
  417f64:	cmp	w0, #0xff
  417f68:	b.gt	4183b0 <die@@Base+0x940>
  417f6c:	add	x28, sp, #0x88
  417f70:	strb	w0, [sp, #136]
  417f74:	mov	x0, x28
  417f78:	str	x3, [sp, #104]
  417f7c:	bl	406680 <strlen@plt>
  417f80:	mov	x26, x0
  417f84:	mov	w2, #0x5                   	// #5
  417f88:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  417f8c:	mov	x0, #0x0                   	// #0
  417f90:	add	x1, x1, #0x4e8
  417f94:	bl	406cd0 <dcgettext@plt>
  417f98:	mov	x2, x0
  417f9c:	ldr	x3, [sp, #104]
  417fa0:	adrp	x5, 429000 <_IO_stdin_used@@Base+0x2c20>
  417fa4:	add	x5, x5, #0x4c8
  417fa8:	mov	x4, x28
  417fac:	mov	x0, #0x0                   	// #0
  417fb0:	mov	x28, x25
  417fb4:	ldr	w1, [x3]
  417fb8:	adrp	x3, 429000 <_IO_stdin_used@@Base+0x2c20>
  417fbc:	add	x3, x3, #0x4d0
  417fc0:	cmp	w1, #0x100
  417fc4:	mov	x1, x26
  417fc8:	csel	x3, x5, x3, lt  // lt = tstop
  417fcc:	mov	w26, #0x1                   	// #1
  417fd0:	bl	419dc8 <error@@Base>
  417fd4:	b	417dc8 <die@@Base+0x358>
  417fd8:	mov	x0, x5
  417fdc:	mov	w1, w23
  417fe0:	mov	x28, x25
  417fe4:	bl	4177d8 <gmk_add_function@@Base+0x9c8>
  417fe8:	b	417ce8 <die@@Base+0x278>
  417fec:	ldr	x1, [x4, #24]
  417ff0:	strb	w9, [x7, #1]
  417ff4:	cbz	x1, 417d7c <die@@Base+0x30c>
  417ff8:	add	x7, x7, #0x3
  417ffc:	sturb	w9, [x7, #-1]
  418000:	str	w10, [x0, #8]
  418004:	b	417c50 <die@@Base+0x1e0>
  418008:	ldr	w1, [x27, #376]
  41800c:	cmp	w20, w1
  418010:	b.le	417dd8 <die@@Base+0x368>
  418014:	adrp	x4, 443000 <expanding_var@@Base+0x338>
  418018:	add	x28, x4, #0x178
  41801c:	nop
  418020:	ldr	x0, [x22, w1, sxtw #3]
  418024:	add	w2, w1, #0x1
  418028:	mov	w1, w23
  41802c:	str	w2, [x28]
  418030:	bl	4177d8 <gmk_add_function@@Base+0x9c8>
  418034:	ldr	w1, [x28]
  418038:	cmp	w1, w20
  41803c:	b.lt	418020 <die@@Base+0x5b0>  // b.tstop
  418040:	b	417dd8 <die@@Base+0x368>
  418044:	cmp	w1, #0x1
  418048:	b.hi	417f50 <die@@Base+0x4e0>  // b.pmore
  41804c:	b	417f38 <die@@Base+0x4c8>
  418050:	cbnz	x5, 418168 <die@@Base+0x6f8>
  418054:	mov	w2, #0x1                   	// #1
  418058:	ldr	w0, [x27, #376]
  41805c:	add	x28, x27, #0x178
  418060:	cmp	w0, w20
  418064:	b.ge	4183a0 <die@@Base+0x930>  // b.tcont
  418068:	ldr	x5, [x22, w0, sxtw #3]
  41806c:	ldrb	w6, [x5]
  418070:	sub	w1, w6, #0x30
  418074:	cmp	w6, #0x2e
  418078:	and	w1, w1, #0xff
  41807c:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  418080:	b.hi	41843c <die@@Base+0x9cc>  // b.pmore
  418084:	add	w0, w0, #0x1
  418088:	str	w0, [x27, #376]
  41808c:	cbz	w2, 417ce8 <die@@Base+0x278>
  418090:	b	41816c <die@@Base+0x6fc>
  418094:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  418098:	mov	w1, #0x1                   	// #1
  41809c:	str	w1, [x0, #1920]
  4180a0:	b	417e84 <die@@Base+0x414>
  4180a4:	ldr	w0, [x19]
  4180a8:	orr	w0, w0, #0x1
  4180ac:	str	w0, [x19]
  4180b0:	b	417e64 <die@@Base+0x3f4>
  4180b4:	cmp	w0, #0x6e
  4180b8:	b.eq	418124 <die@@Base+0x6b4>  // b.none
  4180bc:	cmp	w0, #0x76
  4180c0:	b.ne	41810c <die@@Base+0x69c>  // b.any
  4180c4:	ldr	w0, [x19]
  4180c8:	orr	w0, w0, #0x3
  4180cc:	str	w0, [x19]
  4180d0:	b	417e64 <die@@Base+0x3f4>
  4180d4:	cmp	w0, #0x61
  4180d8:	b.ne	4182e4 <die@@Base+0x874>  // b.any
  4180dc:	ldr	w0, [x19]
  4180e0:	orr	w0, w0, #0xfff
  4180e4:	str	w0, [x19]
  4180e8:	b	417e64 <die@@Base+0x3f4>
  4180ec:	ldr	w0, [x19]
  4180f0:	orr	w0, w0, #0x4
  4180f4:	str	w0, [x19]
  4180f8:	b	417e64 <die@@Base+0x3f4>
  4180fc:	ldrb	w0, [x1, #2]
  418100:	add	x20, x1, #0x2
  418104:	cbnz	w0, 417e28 <die@@Base+0x3b8>
  418108:	b	417e70 <die@@Base+0x400>
  41810c:	cmp	w0, #0x6d
  418110:	b.ne	4182e4 <die@@Base+0x874>  // b.any
  418114:	ldr	w0, [x19]
  418118:	orr	w0, w0, w5
  41811c:	str	w0, [x19]
  418120:	b	417e64 <die@@Base+0x3f4>
  418124:	str	wzr, [x19]
  418128:	b	417e64 <die@@Base+0x3f4>
  41812c:	cbz	x0, 417e78 <die@@Base+0x408>
  418130:	ldr	x22, [x0]
  418134:	ldr	x20, [x22]
  418138:	cbnz	x20, 417e0c <die@@Base+0x39c>
  41813c:	b	417e78 <die@@Base+0x408>
  418140:	str	wzr, [x19, #2208]
  418144:	b	417f04 <die@@Base+0x494>
  418148:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  41814c:	add	x0, x20, #0x1
  418150:	add	x1, x1, #0x269
  418154:	bl	406b40 <strcmp@plt>
  418158:	cbnz	w0, 41818c <die@@Base+0x71c>
  41815c:	mov	w0, #0x1                   	// #1
  418160:	str	w0, [x19, #2208]
  418164:	b	417f04 <die@@Base+0x494>
  418168:	mov	x28, x25
  41816c:	mov	x0, x5
  418170:	mov	x1, #0x0                   	// #0
  418174:	str	x3, [sp, #104]
  418178:	bl	4066f0 <strtod@plt>
  41817c:	ldr	x3, [sp, #104]
  418180:	ldr	x0, [x3, #8]
  418184:	str	d0, [x0]
  418188:	b	417ce8 <die@@Base+0x278>
  41818c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  418190:	add	x0, x0, #0x620
  418194:	cmp	x20, x0
  418198:	b.ne	417eec <die@@Base+0x47c>  // b.any
  41819c:	mov	w0, #0x2                   	// #2
  4181a0:	str	w0, [x19, #2208]
  4181a4:	b	417f04 <die@@Base+0x494>
  4181a8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4181ac:	add	x0, x20, #0x1
  4181b0:	add	x1, x1, #0x619
  4181b4:	bl	406b40 <strcmp@plt>
  4181b8:	cbz	w0, 418140 <die@@Base+0x6d0>
  4181bc:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  4181c0:	add	x0, x0, #0x268
  4181c4:	cmp	x20, x0
  4181c8:	b.eq	41815c <die@@Base+0x6ec>  // b.none
  4181cc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4181d0:	add	x0, x0, #0x620
  4181d4:	cmp	x20, x0
  4181d8:	b.eq	41819c <die@@Base+0x72c>  // b.none
  4181dc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4181e0:	add	x0, x0, #0x628
  4181e4:	cmp	x20, x0
  4181e8:	b.eq	417efc <die@@Base+0x48c>  // b.none
  4181ec:	cmp	w21, #0x72
  4181f0:	b.ne	418208 <die@@Base+0x798>  // b.any
  4181f4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4181f8:	add	x0, x20, #0x1
  4181fc:	add	x1, x1, #0x629
  418200:	bl	406b40 <strcmp@plt>
  418204:	cbz	w0, 417efc <die@@Base+0x48c>
  418208:	mov	x0, x20
  41820c:	bl	406680 <strlen@plt>
  418210:	mov	w2, #0x5                   	// #5
  418214:	mov	x20, x0
  418218:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  41821c:	mov	x0, #0x0                   	// #0
  418220:	add	x1, x1, #0x630
  418224:	bl	406cd0 <dcgettext@plt>
  418228:	ldr	x3, [x19, #2200]
  41822c:	mov	x2, x0
  418230:	mov	x1, x20
  418234:	mov	x0, #0x0                   	// #0
  418238:	bl	41a060 <fatal@@Base>
  41823c:	cbnz	x5, 4183f8 <die@@Base+0x988>
  418240:	ldr	w7, [x27, #376]
  418244:	add	x28, x27, #0x178
  418248:	cmp	w20, w7
  41824c:	b.gt	418400 <die@@Base+0x990>
  418250:	ldr	x1, [x3, #24]
  418254:	ldr	x0, [x3, #8]
  418258:	ldr	w1, [x1]
  41825c:	str	w1, [x0]
  418260:	b	417ce8 <die@@Base+0x278>
  418264:	cbz	x5, 4184c0 <die@@Base+0xa50>
  418268:	mov	x28, x25
  41826c:	cbz	w2, 417ce8 <die@@Base+0x278>
  418270:	mov	x0, x5
  418274:	mov	w2, #0xa                   	// #10
  418278:	mov	x1, #0x0                   	// #0
  41827c:	stp	x5, x3, [sp, #104]
  418280:	bl	406b60 <strtol@plt>
  418284:	mov	x2, x0
  418288:	ldp	x5, x3, [sp, #104]
  41828c:	b	418294 <die@@Base+0x824>
  418290:	add	x5, x5, #0x1
  418294:	ldrb	w0, [x5]
  418298:	sub	w1, w0, #0x30
  41829c:	cmp	w1, #0x9
  4182a0:	b.ls	418290 <die@@Base+0x820>  // b.plast
  4182a4:	cmp	w0, #0x0
  4182a8:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  4182ac:	b.gt	418444 <die@@Base+0x9d4>
  4182b0:	ldr	x1, [sp, #96]
  4182b4:	mov	w2, #0x5                   	// #5
  4182b8:	mov	x0, #0x0                   	// #0
  4182bc:	str	x3, [sp, #104]
  4182c0:	mov	w26, #0x1                   	// #1
  4182c4:	bl	406cd0 <dcgettext@plt>
  4182c8:	mov	x2, x0
  4182cc:	ldr	x3, [sp, #104]
  4182d0:	mov	x1, #0x0                   	// #0
  4182d4:	mov	x0, #0x0                   	// #0
  4182d8:	ldr	w3, [x3]
  4182dc:	bl	419dc8 <error@@Base>
  4182e0:	b	417ce8 <die@@Base+0x278>
  4182e4:	mov	x0, x20
  4182e8:	bl	406680 <strlen@plt>
  4182ec:	mov	w2, #0x5                   	// #5
  4182f0:	mov	x19, x0
  4182f4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4182f8:	mov	x0, #0x0                   	// #0
  4182fc:	add	x1, x1, #0x5f0
  418300:	bl	406cd0 <dcgettext@plt>
  418304:	mov	x3, x20
  418308:	mov	x2, x0
  41830c:	mov	x1, x19
  418310:	mov	x0, #0x0                   	// #0
  418314:	bl	41a060 <fatal@@Base>
  418318:	ldr	x0, [x3, #24]
  41831c:	str	x3, [sp, #104]
  418320:	bl	418c60 <xstrdup@@Base>
  418324:	mov	x5, x0
  418328:	ldr	x3, [sp, #104]
  41832c:	ldr	w1, [x3, #4]
  418330:	ldr	x6, [x3, #8]
  418334:	cmp	w1, #0x2
  418338:	ldr	x2, [x6]
  41833c:	b.eq	418450 <die@@Base+0x9e0>  // b.none
  418340:	cbz	x2, 418478 <die@@Base+0xa08>
  418344:	ldp	w6, w4, [x2, #8]
  418348:	sub	w0, w4, #0x1
  41834c:	cmp	w6, w0
  418350:	b.eq	4183c8 <die@@Base+0x958>  // b.none
  418354:	ldr	w0, [x2, #8]
  418358:	cmp	w1, #0x4
  41835c:	ldr	x3, [x2]
  418360:	add	w4, w0, #0x1
  418364:	str	w4, [x2, #8]
  418368:	ubfiz	x28, x0, #3, #32
  41836c:	stp	x2, x3, [sp, #104]
  418370:	mov	x0, x5
  418374:	b.eq	4183b8 <die@@Base+0x948>  // b.none
  418378:	bl	418c60 <xstrdup@@Base>
  41837c:	ldp	x2, x3, [sp, #104]
  418380:	str	x0, [x3, x28]
  418384:	ldr	w1, [x2, #8]
  418388:	mov	x28, x25
  41838c:	ldr	x0, [x2]
  418390:	str	xzr, [x0, x1, lsl #3]
  418394:	b	417ce8 <die@@Base+0x278>
  418398:	cbz	w23, 417de0 <die@@Base+0x370>
  41839c:	b	417de8 <die@@Base+0x378>
  4183a0:	cbz	w2, 417dd8 <die@@Base+0x368>
  4183a4:	ldr	x0, [x3, #24]
  4183a8:	ldr	d0, [x0]
  4183ac:	b	418180 <die@@Base+0x710>
  4183b0:	ldr	x28, [x3, #40]
  4183b4:	b	417f74 <die@@Base+0x504>
  4183b8:	bl	4176f0 <gmk_add_function@@Base+0x8e0>
  4183bc:	ldp	x2, x3, [sp, #104]
  4183c0:	str	x0, [x3, x28]
  4183c4:	b	418384 <die@@Base+0x914>
  4183c8:	ldr	x0, [x2]
  4183cc:	add	w1, w4, #0x5
  4183d0:	str	w1, [x2, #12]
  4183d4:	ubfiz	x1, x1, #3, #32
  4183d8:	stp	x2, x5, [sp, #104]
  4183dc:	str	x3, [sp, #120]
  4183e0:	bl	418aa0 <xrealloc@@Base>
  4183e4:	ldr	x3, [sp, #120]
  4183e8:	ldp	x2, x5, [sp, #104]
  4183ec:	ldr	w1, [x3, #4]
  4183f0:	str	x0, [x2]
  4183f4:	b	418354 <die@@Base+0x8e4>
  4183f8:	mov	x28, x25
  4183fc:	b	418270 <die@@Base+0x800>
  418400:	mov	w2, #0x1                   	// #1
  418404:	ldr	x5, [x22, w7, sxtw #3]
  418408:	mov	x0, x5
  41840c:	b	418414 <die@@Base+0x9a4>
  418410:	add	x0, x0, #0x1
  418414:	ldrb	w1, [x0]
  418418:	sub	w6, w1, #0x30
  41841c:	cmp	w6, #0x9
  418420:	b.ls	418410 <die@@Base+0x9a0>  // b.plast
  418424:	cbnz	w1, 4184b8 <die@@Base+0xa48>
  418428:	add	w7, w7, #0x1
  41842c:	str	w7, [x28]
  418430:	cbz	w2, 417ce8 <die@@Base+0x278>
  418434:	cbz	x5, 418250 <die@@Base+0x7e0>
  418438:	b	418270 <die@@Base+0x800>
  41843c:	cbnz	w2, 4183a4 <die@@Base+0x934>
  418440:	b	417cf4 <die@@Base+0x284>
  418444:	ldr	x0, [x3, #8]
  418448:	str	w2, [x0]
  41844c:	b	417ce8 <die@@Base+0x278>
  418450:	mov	x0, x2
  418454:	stp	x5, x6, [sp, #104]
  418458:	bl	406b90 <free@plt>
  41845c:	ldr	x5, [sp, #104]
  418460:	mov	x28, x25
  418464:	mov	x0, x5
  418468:	bl	418c60 <xstrdup@@Base>
  41846c:	ldr	x6, [sp, #112]
  418470:	str	x0, [x6]
  418474:	b	417ce8 <die@@Base+0x278>
  418478:	mov	x0, #0x10                  	// #16
  41847c:	stp	x5, x3, [sp, #112]
  418480:	bl	418a50 <xmalloc@@Base>
  418484:	mov	x2, x0
  418488:	mov	x1, #0x500000000           	// #21474836480
  41848c:	mov	x0, #0x28                  	// #40
  418490:	str	x2, [sp, #104]
  418494:	str	x1, [x2, #8]
  418498:	bl	418a50 <xmalloc@@Base>
  41849c:	ldr	x3, [sp, #120]
  4184a0:	ldp	x2, x5, [sp, #104]
  4184a4:	ldr	x4, [x3, #8]
  4184a8:	ldr	w1, [x3, #4]
  4184ac:	str	x0, [x2]
  4184b0:	str	x2, [x4]
  4184b4:	b	418354 <die@@Base+0x8e4>
  4184b8:	cbnz	w2, 418250 <die@@Base+0x7e0>
  4184bc:	b	417cf4 <die@@Base+0x284>
  4184c0:	ldr	w7, [x27, #376]
  4184c4:	add	x28, x27, #0x178
  4184c8:	cmp	w7, w20
  4184cc:	b.lt	418404 <die@@Base+0x994>  // b.tstop
  4184d0:	cbnz	w2, 418250 <die@@Base+0x7e0>
  4184d4:	b	417dd8 <die@@Base+0x368>
  4184d8:	ldr	w0, [x19, #588]
  4184dc:	cbnz	w0, 4185cc <die@@Base+0xb5c>
  4184e0:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4184e4:	ldr	x19, [x0, #360]
  4184e8:	mov	w2, #0x5                   	// #5
  4184ec:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4184f0:	mov	x0, #0x0                   	// #0
  4184f4:	add	x1, x1, #0x558
  4184f8:	bl	406cd0 <dcgettext@plt>
  4184fc:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  418500:	mov	x1, x0
  418504:	adrp	x20, 42a000 <_IO_stdin_used@@Base+0x3c20>
  418508:	mov	x0, x19
  41850c:	ldr	x2, [x2, #2000]
  418510:	add	x20, x20, #0x900
  418514:	add	x20, x20, #0x6f0
  418518:	bl	406dd0 <fprintf@plt>
  41851c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  418520:	add	x1, x1, #0x4d8
  418524:	mov	w2, #0x5                   	// #5
  418528:	mov	x0, #0x0                   	// #0
  41852c:	bl	406cd0 <dcgettext@plt>
  418530:	mov	x1, x19
  418534:	bl	406690 <fputs@plt>
  418538:	ldr	x1, [x20, #8]!
  41853c:	cbnz	x1, 418524 <die@@Base+0xab4>
  418540:	adrp	x20, 446000 <commands_started@@Base+0x1c8>
  418544:	ldr	x0, [x20, #1888]
  418548:	cbz	x0, 418554 <die@@Base+0xae4>
  41854c:	ldrb	w0, [x0]
  418550:	cbnz	w0, 4185d4 <die@@Base+0xb64>
  418554:	mov	w2, #0x5                   	// #5
  418558:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  41855c:	mov	x0, #0x0                   	// #0
  418560:	add	x1, x1, #0x580
  418564:	bl	406cd0 <dcgettext@plt>
  418568:	mov	x1, x0
  41856c:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  418570:	mov	x0, x19
  418574:	ldr	x2, [x2, #320]
  418578:	bl	406dd0 <fprintf@plt>
  41857c:	mov	w2, #0x5                   	// #5
  418580:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  418584:	mov	x0, #0x0                   	// #0
  418588:	add	x1, x1, #0x5c8
  41858c:	bl	406cd0 <dcgettext@plt>
  418590:	mov	x1, x0
  418594:	mov	x0, x19
  418598:	bl	406dd0 <fprintf@plt>
  41859c:	cmp	w26, #0x0
  4185a0:	mov	w0, #0x2                   	// #2
  4185a4:	csel	w0, w26, w0, eq  // eq = none
  4185a8:	bl	417a70 <die@@Base>
  4185ac:	ldr	w0, [x19, #588]
  4185b0:	cbnz	w0, 4185c4 <die@@Base+0xb54>
  4185b4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4185b8:	mov	w26, #0x0                   	// #0
  4185bc:	ldr	x19, [x0, #384]
  4185c0:	b	4184e8 <die@@Base+0xa78>
  4185c4:	bl	416eb8 <gmk_add_function@@Base+0xa8>
  4185c8:	b	4185b4 <die@@Base+0xb44>
  4185cc:	bl	416eb8 <gmk_add_function@@Base+0xa8>
  4185d0:	b	4184e0 <die@@Base+0xa70>
  4185d4:	mov	w2, #0x5                   	// #5
  4185d8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4185dc:	mov	x0, #0x0                   	// #0
  4185e0:	add	x1, x1, #0x5a0
  4185e4:	bl	406cd0 <dcgettext@plt>
  4185e8:	mov	x1, x0
  4185ec:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  4185f0:	mov	x0, x19
  4185f4:	ldr	x3, [x20, #1888]
  4185f8:	ldr	x2, [x2, #320]
  4185fc:	bl	406dd0 <fprintf@plt>
  418600:	b	41857c <die@@Base+0xb0c>
  418604:	bl	406ab0 <abort@plt>
  418608:	stp	x29, x30, [sp, #-48]!
  41860c:	add	x2, x1, #0x13
  418610:	mov	w3, #0x2824                	// #10276
  418614:	mov	x29, sp
  418618:	stp	x19, x20, [sp, #16]
  41861c:	mov	x19, x1
  418620:	mov	x1, x0
  418624:	and	x0, x2, #0xfffffffffffffff0
  418628:	stp	x21, x22, [sp, #32]
  41862c:	sub	sp, sp, x0
  418630:	mov	x20, sp
  418634:	mov	x2, x19
  418638:	mov	x0, x20
  41863c:	add	x19, x20, x19
  418640:	strh	w3, [x0], #2
  418644:	bl	406640 <memcpy@plt>
  418648:	strb	wzr, [x19, #3]
  41864c:	mov	w1, #0x29                  	// #41
  418650:	strb	w1, [x19, #2]
  418654:	mov	x0, x20
  418658:	bl	40c1b8 <variable_expand@@Base>
  41865c:	mov	x19, x0
  418660:	adrp	x5, 443000 <expanding_var@@Base+0x338>
  418664:	ldrb	w0, [x0]
  418668:	add	x20, x5, #0x440
  41866c:	add	x1, x20, #0x8
  418670:	ldrh	w0, [x1, x0, lsl #1]
  418674:	tst	w0, #0x6
  418678:	b.eq	418690 <die@@Base+0xc20>  // b.none
  41867c:	nop
  418680:	ldrb	w0, [x19, #1]!
  418684:	ldrh	w0, [x1, x0, lsl #1]
  418688:	tst	w0, #0x6
  41868c:	b.ne	418680 <die@@Base+0xc10>  // b.any
  418690:	mov	x0, x19
  418694:	bl	406680 <strlen@plt>
  418698:	cbz	x0, 41874c <die@@Base+0xcdc>
  41869c:	lsl	x1, x0, #3
  4186a0:	add	x0, x0, #0x11
  4186a4:	add	x1, x1, #0x1f
  4186a8:	and	x0, x0, #0xfffffffffffffff0
  4186ac:	and	x1, x1, #0xfffffffffffffff0
  4186b0:	mov	w2, #0x2d                  	// #45
  4186b4:	sub	sp, sp, x1
  4186b8:	mov	x21, sp
  4186bc:	sub	sp, sp, x0
  4186c0:	mov	x22, sp
  4186c4:	mov	x3, x22
  4186c8:	strb	w2, [x3], #1
  4186cc:	stp	xzr, x3, [x21]
  4186d0:	ldrb	w2, [x19]
  4186d4:	cbz	w2, 4187a4 <die@@Base+0xd34>
  4186d8:	add	x5, x20, #0x8
  4186dc:	mov	w0, #0x1                   	// #1
  4186e0:	add	x4, x19, #0x1
  4186e4:	add	x3, x3, #0x1
  4186e8:	cmp	w2, #0x5c
  4186ec:	mov	x1, x4
  4186f0:	b.eq	418760 <die@@Base+0xcf0>  // b.none
  4186f4:	ldrh	w2, [x5, w2, sxtw #1]
  4186f8:	tbnz	w2, #1, 418770 <die@@Base+0xd00>
  4186fc:	ldrb	w6, [x19]
  418700:	mov	x4, x19
  418704:	mov	x19, x1
  418708:	sturb	w6, [x3, #-1]
  41870c:	ldrb	w2, [x4, #1]
  418710:	cbnz	w2, 4186e0 <die@@Base+0xc70>
  418714:	add	w19, w0, #0x1
  418718:	strb	wzr, [x3]
  41871c:	str	xzr, [x21, w19, sxtw #3]
  418720:	ldr	x0, [x21, #8]
  418724:	ldrb	w1, [x0]
  418728:	cmp	w1, #0x2d
  41872c:	b.eq	41873c <die@@Base+0xccc>  // b.none
  418730:	mov	w1, #0x3d                  	// #61
  418734:	bl	406bb0 <strchr@plt>
  418738:	cbz	x0, 41879c <die@@Base+0xd2c>
  41873c:	mov	x1, x21
  418740:	mov	w0, w19
  418744:	mov	w2, #0x1                   	// #1
  418748:	bl	417b60 <die@@Base+0xf0>
  41874c:	mov	sp, x29
  418750:	ldp	x19, x20, [sp, #16]
  418754:	ldp	x21, x22, [sp, #32]
  418758:	ldp	x29, x30, [sp], #48
  41875c:	ret
  418760:	ldrb	w6, [x19, #1]
  418764:	cbz	w6, 4186f4 <die@@Base+0xc84>
  418768:	add	x19, x19, #0x2
  41876c:	b	418708 <die@@Base+0xc98>
  418770:	add	w0, w0, #0x1
  418774:	sturb	wzr, [x3, #-1]
  418778:	str	x3, [x21, w0, sxtw #3]
  41877c:	nop
  418780:	ldrb	w2, [x1]
  418784:	mov	x19, x1
  418788:	add	x1, x1, #0x1
  41878c:	ldrh	w4, [x5, w2, sxtw #1]
  418790:	tbnz	w4, #1, 418780 <die@@Base+0xd10>
  418794:	cbnz	w2, 4186e0 <die@@Base+0xc70>
  418798:	b	418714 <die@@Base+0xca4>
  41879c:	str	x22, [x21, #8]
  4187a0:	b	41873c <die@@Base+0xccc>
  4187a4:	mov	w0, #0x1                   	// #1
  4187a8:	b	418714 <die@@Base+0xca4>
  4187ac:	nop

00000000004187b0 <alpha_compare@@Base>:
  4187b0:	ldr	x0, [x0]
  4187b4:	ldr	x1, [x1]
  4187b8:	ldrb	w2, [x0]
  4187bc:	ldrb	w3, [x1]
  4187c0:	cmp	w2, w3
  4187c4:	b.eq	4187d0 <alpha_compare@@Base+0x20>  // b.none
  4187c8:	sub	w0, w2, w3
  4187cc:	ret
  4187d0:	b	406b40 <strcmp@plt>
  4187d4:	nop

00000000004187d8 <collapse_continuations@@Base>:
  4187d8:	stp	x29, x30, [sp, #-96]!
  4187dc:	mov	w1, #0xa                   	// #10
  4187e0:	mov	x29, sp
  4187e4:	stp	x21, x22, [sp, #32]
  4187e8:	mov	x22, x0
  4187ec:	bl	406bb0 <strchr@plt>
  4187f0:	cbz	x0, 4189d4 <collapse_continuations@@Base+0x1fc>
  4187f4:	stp	x19, x20, [sp, #16]
  4187f8:	mov	x20, x0
  4187fc:	mov	x19, x22
  418800:	stp	x23, x24, [sp, #48]
  418804:	adrp	x24, 446000 <commands_started@@Base+0x1c8>
  418808:	sub	x23, x22, #0x1
  41880c:	add	x24, x24, #0x7c8
  418810:	stp	x25, x26, [sp, #64]
  418814:	adrp	x26, 443000 <expanding_var@@Base+0x338>
  418818:	mov	x25, x22
  41881c:	add	x26, x26, #0x448
  418820:	cmp	x20, x22
  418824:	b.ls	418834 <collapse_continuations@@Base+0x5c>  // b.plast
  418828:	ldurb	w0, [x20, #-1]
  41882c:	cmp	w0, #0x5c
  418830:	b.eq	4188a4 <collapse_continuations@@Base+0xcc>  // b.none
  418834:	sub	x2, x20, x19
  418838:	cmp	x25, x19
  41883c:	add	x20, x20, #0x1
  418840:	add	x21, x25, x2
  418844:	b.eq	418854 <collapse_continuations@@Base+0x7c>  // b.none
  418848:	mov	x1, x19
  41884c:	mov	x0, x25
  418850:	bl	406650 <memmove@plt>
  418854:	mov	x25, x21
  418858:	mov	x19, x20
  41885c:	mov	w0, #0xa                   	// #10
  418860:	strb	w0, [x25], #1
  418864:	mov	x0, x19
  418868:	mov	w1, #0xa                   	// #10
  41886c:	bl	406bb0 <strchr@plt>
  418870:	mov	x20, x0
  418874:	cbnz	x0, 418820 <collapse_continuations@@Base+0x48>
  418878:	mov	x0, x19
  41887c:	bl	406680 <strlen@plt>
  418880:	mov	x1, x19
  418884:	add	x2, x0, #0x1
  418888:	mov	x0, x25
  41888c:	ldp	x19, x20, [sp, #16]
  418890:	ldp	x21, x22, [sp, #32]
  418894:	ldp	x23, x24, [sp, #48]
  418898:	ldp	x25, x26, [sp, #64]
  41889c:	ldp	x29, x30, [sp], #96
  4188a0:	b	406650 <memmove@plt>
  4188a4:	stp	x27, x28, [sp, #80]
  4188a8:	sub	x1, x20, #0x2
  4188ac:	mov	w3, #0xfffffffe            	// #-2
  4188b0:	cmp	x22, x1
  4188b4:	sub	w3, w3, w1
  4188b8:	b.ls	4188c8 <collapse_continuations@@Base+0xf0>  // b.plast
  4188bc:	b	4189e0 <collapse_continuations@@Base+0x208>
  4188c0:	cmp	x1, x23
  4188c4:	b.eq	418984 <collapse_continuations@@Base+0x1ac>  // b.none
  4188c8:	ldrb	w0, [x1]
  4188cc:	add	w2, w3, w1
  4188d0:	sub	x1, x1, #0x1
  4188d4:	cmp	w0, #0x5c
  4188d8:	b.eq	4188c0 <collapse_continuations@@Base+0xe8>  // b.none
  4188dc:	add	w2, w2, #0x1
  4188e0:	cmp	x25, x19
  4188e4:	and	w28, w2, #0x1
  4188e8:	add	x27, x20, #0x1
  4188ec:	add	w0, w2, w2, lsr #31
  4188f0:	sxtw	x1, w2
  4188f4:	sub	x2, x20, x19
  4188f8:	asr	w0, w0, #1
  4188fc:	add	x2, x2, x1
  418900:	sxtw	x0, w0
  418904:	sub	x2, x2, x0
  418908:	add	x21, x25, x2
  41890c:	b.eq	4189b4 <collapse_continuations@@Base+0x1dc>  // b.none
  418910:	mov	x1, x19
  418914:	mov	x0, x25
  418918:	mov	x19, x27
  41891c:	bl	406650 <memmove@plt>
  418920:	cbz	w28, 4189bc <collapse_continuations@@Base+0x1e4>
  418924:	ldrb	w0, [x20, #1]
  418928:	ldrh	w0, [x26, x0, lsl #1]
  41892c:	tbz	w0, #1, 41893c <collapse_continuations@@Base+0x164>
  418930:	ldrb	w1, [x19, #1]!
  418934:	ldrh	w1, [x26, x1, lsl #1]
  418938:	tbnz	w1, #1, 418930 <collapse_continuations@@Base+0x158>
  41893c:	ldr	w0, [x24]
  418940:	cbz	w0, 418958 <collapse_continuations@@Base+0x180>
  418944:	add	x25, x21, #0x1
  418948:	mov	w0, #0x20                  	// #32
  41894c:	strb	w0, [x21]
  418950:	ldp	x27, x28, [sp, #80]
  418954:	b	418864 <collapse_continuations@@Base+0x8c>
  418958:	cmp	x22, x21
  41895c:	b.cc	418970 <collapse_continuations@@Base+0x198>  // b.lo, b.ul, b.last
  418960:	b	418944 <collapse_continuations@@Base+0x16c>
  418964:	cmp	x22, x0
  418968:	b.eq	4189c8 <collapse_continuations@@Base+0x1f0>  // b.none
  41896c:	mov	x21, x0
  418970:	ldurb	w1, [x21, #-1]
  418974:	sub	x0, x21, #0x1
  418978:	ldrh	w1, [x26, x1, lsl #1]
  41897c:	tbnz	w1, #1, 418964 <collapse_continuations@@Base+0x18c>
  418980:	b	418944 <collapse_continuations@@Base+0x16c>
  418984:	add	w0, w2, w2, lsr #31
  418988:	sxtw	x1, w2
  41898c:	and	w28, w2, #0x1
  418990:	sub	x2, x20, x19
  418994:	asr	w0, w0, #1
  418998:	add	x2, x2, x1
  41899c:	cmp	x25, x19
  4189a0:	add	x27, x20, #0x1
  4189a4:	sxtw	x0, w0
  4189a8:	sub	x2, x2, x0
  4189ac:	add	x21, x25, x2
  4189b0:	b.ne	418910 <collapse_continuations@@Base+0x138>  // b.any
  4189b4:	mov	x19, x27
  4189b8:	cbnz	w28, 418924 <collapse_continuations@@Base+0x14c>
  4189bc:	mov	x20, x27
  4189c0:	ldp	x27, x28, [sp, #80]
  4189c4:	b	418854 <collapse_continuations@@Base+0x7c>
  4189c8:	mov	x25, x21
  4189cc:	mov	x21, x22
  4189d0:	b	418948 <collapse_continuations@@Base+0x170>
  4189d4:	ldp	x21, x22, [sp, #32]
  4189d8:	ldp	x29, x30, [sp], #96
  4189dc:	ret
  4189e0:	sub	x2, x20, x19
  4189e4:	cmp	x25, x19
  4189e8:	sub	x2, x2, #0x1
  4189ec:	add	x27, x20, #0x1
  4189f0:	add	x21, x25, x2
  4189f4:	mov	w28, #0x1                   	// #1
  4189f8:	b.ne	418910 <collapse_continuations@@Base+0x138>  // b.any
  4189fc:	mov	x19, x27
  418a00:	b	418924 <collapse_continuations@@Base+0x14c>
  418a04:	nop

0000000000418a08 <print_spaces@@Base>:
  418a08:	cbz	w0, 418a4c <print_spaces@@Base+0x44>
  418a0c:	stp	x29, x30, [sp, #-32]!
  418a10:	mov	x29, sp
  418a14:	stp	x19, x20, [sp, #16]
  418a18:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  418a1c:	sub	w19, w0, #0x1
  418a20:	add	x20, x20, #0x180
  418a24:	nop
  418a28:	ldr	x1, [x20]
  418a2c:	sub	w19, w19, #0x1
  418a30:	mov	w0, #0x20                  	// #32
  418a34:	bl	406740 <putc@plt>
  418a38:	cmn	w19, #0x1
  418a3c:	b.ne	418a28 <print_spaces@@Base+0x20>  // b.any
  418a40:	ldp	x19, x20, [sp, #16]
  418a44:	ldp	x29, x30, [sp], #32
  418a48:	ret
  418a4c:	ret

0000000000418a50 <xmalloc@@Base>:
  418a50:	cmp	x0, #0x0
  418a54:	stp	x29, x30, [sp, #-16]!
  418a58:	csinc	x0, x0, xzr, ne  // ne = any
  418a5c:	mov	x29, sp
  418a60:	bl	4068d0 <malloc@plt>
  418a64:	cbz	x0, 418a70 <xmalloc@@Base+0x20>
  418a68:	ldp	x29, x30, [sp], #16
  418a6c:	ret
  418a70:	bl	41a1f8 <out_of_memory@@Base>
  418a74:	nop

0000000000418a78 <xcalloc@@Base>:
  418a78:	cmp	x0, #0x0
  418a7c:	stp	x29, x30, [sp, #-16]!
  418a80:	mov	x1, #0x1                   	// #1
  418a84:	mov	x29, sp
  418a88:	csel	x0, x0, x1, ne  // ne = any
  418a8c:	bl	4069d0 <calloc@plt>
  418a90:	cbz	x0, 418a9c <xcalloc@@Base+0x24>
  418a94:	ldp	x29, x30, [sp], #16
  418a98:	ret
  418a9c:	bl	41a1f8 <out_of_memory@@Base>

0000000000418aa0 <xrealloc@@Base>:
  418aa0:	stp	x29, x30, [sp, #-16]!
  418aa4:	cmp	x1, #0x0
  418aa8:	csinc	x1, x1, xzr, ne  // ne = any
  418aac:	mov	x29, sp
  418ab0:	cbz	x0, 418ac4 <xrealloc@@Base+0x24>
  418ab4:	bl	406a00 <realloc@plt>
  418ab8:	cbz	x0, 418ad0 <xrealloc@@Base+0x30>
  418abc:	ldp	x29, x30, [sp], #16
  418ac0:	ret
  418ac4:	mov	x0, x1
  418ac8:	bl	4068d0 <malloc@plt>
  418acc:	b	418ab8 <xrealloc@@Base+0x18>
  418ad0:	bl	41a1f8 <out_of_memory@@Base>
  418ad4:	nop

0000000000418ad8 <concat@@Base>:
  418ad8:	stp	x29, x30, [sp, #-192]!
  418adc:	mov	w8, #0xffffffc8            	// #-56
  418ae0:	mov	x29, sp
  418ae4:	add	x9, sp, #0x80
  418ae8:	stp	x21, x22, [sp, #32]
  418aec:	stp	x23, x24, [sp, #48]
  418af0:	stp	x25, x26, [sp, #64]
  418af4:	adrp	x25, 443000 <expanding_var@@Base+0x338>
  418af8:	add	x24, x25, #0xd58
  418afc:	str	x9, [sp, #112]
  418b00:	stp	w8, wzr, [sp, #120]
  418b04:	stp	x1, x2, [sp, #136]
  418b08:	add	x1, sp, #0xc0
  418b0c:	stp	x1, x1, [sp, #96]
  418b10:	stp	x3, x4, [sp, #152]
  418b14:	stp	x5, x6, [sp, #168]
  418b18:	str	x7, [sp, #184]
  418b1c:	ldr	x21, [x25, #3416]
  418b20:	cbz	w0, 418c48 <concat@@Base+0x170>
  418b24:	sub	w22, w0, #0x1
  418b28:	mov	x23, #0x0                   	// #0
  418b2c:	mov	x26, #0x3c                  	// #60
  418b30:	stp	x19, x20, [sp, #16]
  418b34:	str	x27, [sp, #80]
  418b38:	b	418bb0 <concat@@Base+0xd8>
  418b3c:	add	x1, x0, #0xf
  418b40:	and	x1, x1, #0xfffffffffffffff8
  418b44:	str	x1, [sp, #96]
  418b48:	ldr	x20, [x0]
  418b4c:	cbz	x20, 418ba4 <concat@@Base+0xcc>
  418b50:	mov	x0, x20
  418b54:	bl	406680 <strlen@plt>
  418b58:	mov	x19, x0
  418b5c:	cbz	x0, 418ba4 <concat@@Base+0xcc>
  418b60:	add	x27, x0, x23
  418b64:	cmp	x27, x21
  418b68:	ldr	x0, [x24, #8]
  418b6c:	b.ls	418b90 <concat@@Base+0xb8>  // b.plast
  418b70:	cmp	x21, #0x0
  418b74:	csel	x21, x21, x26, ne  // ne = any
  418b78:	add	x21, x21, x19
  418b7c:	lsl	x21, x21, #1
  418b80:	str	x21, [x24]
  418b84:	mov	x1, x21
  418b88:	bl	418aa0 <xrealloc@@Base>
  418b8c:	str	x0, [x24, #8]
  418b90:	add	x0, x0, x23
  418b94:	mov	x2, x19
  418b98:	mov	x23, x27
  418b9c:	mov	x1, x20
  418ba0:	bl	406640 <memcpy@plt>
  418ba4:	sub	w22, w22, #0x1
  418ba8:	cmn	w22, #0x1
  418bac:	b.eq	418bd8 <concat@@Base+0x100>  // b.none
  418bb0:	ldr	w1, [sp, #120]
  418bb4:	ldr	x0, [sp, #96]
  418bb8:	tbz	w1, #31, 418b3c <concat@@Base+0x64>
  418bbc:	add	w2, w1, #0x8
  418bc0:	str	w2, [sp, #120]
  418bc4:	cmp	w2, #0x0
  418bc8:	b.gt	418b3c <concat@@Base+0x64>
  418bcc:	ldr	x0, [sp, #104]
  418bd0:	add	x0, x0, w1, sxtw
  418bd4:	b	418b48 <concat@@Base+0x70>
  418bd8:	cmp	x23, x21
  418bdc:	ldr	x0, [x24, #8]
  418be0:	b.eq	418c08 <concat@@Base+0x130>  // b.none
  418be4:	ldp	x19, x20, [sp, #16]
  418be8:	add	x23, x0, x23
  418bec:	ldr	x27, [sp, #80]
  418bf0:	strb	wzr, [x23]
  418bf4:	ldp	x21, x22, [sp, #32]
  418bf8:	ldp	x23, x24, [sp, #48]
  418bfc:	ldp	x25, x26, [sp, #64]
  418c00:	ldp	x29, x30, [sp], #192
  418c04:	ret
  418c08:	ldp	x19, x20, [sp, #16]
  418c0c:	cmp	x23, #0x0
  418c10:	lsl	x1, x23, #1
  418c14:	mov	x2, #0x78                  	// #120
  418c18:	ldr	x27, [sp, #80]
  418c1c:	csel	x1, x1, x2, ne  // ne = any
  418c20:	str	x1, [x25, #3416]
  418c24:	bl	418aa0 <xrealloc@@Base>
  418c28:	add	x23, x0, x23
  418c2c:	str	x0, [x24, #8]
  418c30:	strb	wzr, [x23]
  418c34:	ldp	x21, x22, [sp, #32]
  418c38:	ldp	x23, x24, [sp, #48]
  418c3c:	ldp	x25, x26, [sp, #64]
  418c40:	ldp	x29, x30, [sp], #192
  418c44:	ret
  418c48:	ldr	x0, [x24, #8]
  418c4c:	mov	x23, x0
  418c50:	cbnz	x21, 418bf0 <concat@@Base+0x118>
  418c54:	mov	x23, #0x0                   	// #0
  418c58:	mov	x1, #0x78                  	// #120
  418c5c:	b	418c20 <concat@@Base+0x148>

0000000000418c60 <xstrdup@@Base>:
  418c60:	stp	x29, x30, [sp, #-16]!
  418c64:	mov	x29, sp
  418c68:	bl	406a20 <strdup@plt>
  418c6c:	cbz	x0, 418c78 <xstrdup@@Base+0x18>
  418c70:	ldp	x29, x30, [sp], #16
  418c74:	ret
  418c78:	bl	41a1f8 <out_of_memory@@Base>
  418c7c:	nop

0000000000418c80 <xstrndup@@Base>:
  418c80:	stp	x29, x30, [sp, #-16]!
  418c84:	mov	x29, sp
  418c88:	bl	406ba0 <strndup@plt>
  418c8c:	cbz	x0, 418c98 <xstrndup@@Base+0x18>
  418c90:	ldp	x29, x30, [sp], #16
  418c94:	ret
  418c98:	bl	41a1f8 <out_of_memory@@Base>
  418c9c:	nop

0000000000418ca0 <lindex@@Base>:
  418ca0:	b	418cb4 <lindex@@Base+0x14>
  418ca4:	ldrb	w4, [x3], #1
  418ca8:	cmp	w4, w2
  418cac:	b.eq	418cc4 <lindex@@Base+0x24>  // b.none
  418cb0:	mov	x0, x3
  418cb4:	mov	x3, x0
  418cb8:	cmp	x0, x1
  418cbc:	b.cc	418ca4 <lindex@@Base+0x4>  // b.lo, b.ul, b.last
  418cc0:	mov	x0, #0x0                   	// #0
  418cc4:	ret

0000000000418cc8 <end_of_token@@Base>:
  418cc8:	ldrb	w1, [x0]
  418ccc:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  418cd0:	add	x2, x2, #0x448
  418cd4:	ldrh	w1, [x2, x1, lsl #1]
  418cd8:	tst	x1, #0x7
  418cdc:	b.ne	418cf0 <end_of_token@@Base+0x28>  // b.any
  418ce0:	ldrb	w1, [x0, #1]!
  418ce4:	ldrh	w1, [x2, x1, lsl #1]
  418ce8:	tst	x1, #0x7
  418cec:	b.eq	418ce0 <end_of_token@@Base+0x18>  // b.none
  418cf0:	ret
  418cf4:	nop

0000000000418cf8 <next_token@@Base>:
  418cf8:	ldrb	w1, [x0]
  418cfc:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  418d00:	add	x2, x2, #0x448
  418d04:	ldrh	w1, [x2, x1, lsl #1]
  418d08:	tst	w1, #0x6
  418d0c:	b.eq	418d20 <next_token@@Base+0x28>  // b.none
  418d10:	ldrb	w1, [x0, #1]!
  418d14:	ldrh	w1, [x2, x1, lsl #1]
  418d18:	tst	w1, #0x6
  418d1c:	b.ne	418d10 <next_token@@Base+0x18>  // b.any
  418d20:	ret
  418d24:	nop

0000000000418d28 <find_next_token@@Base>:
  418d28:	mov	x5, x0
  418d2c:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  418d30:	ldr	x0, [x0]
  418d34:	add	x2, x2, #0x448
  418d38:	ldrb	w3, [x0]
  418d3c:	ldrh	w4, [x2, w3, sxtw #1]
  418d40:	tst	w4, #0x6
  418d44:	b.eq	418d58 <find_next_token@@Base+0x30>  // b.none
  418d48:	ldrb	w3, [x0, #1]!
  418d4c:	ldrh	w4, [x2, w3, sxtw #1]
  418d50:	tst	w4, #0x6
  418d54:	b.ne	418d48 <find_next_token@@Base+0x20>  // b.any
  418d58:	cbz	w3, 418d94 <find_next_token@@Base+0x6c>
  418d5c:	ldrb	w3, [x0]
  418d60:	ldrh	w3, [x2, x3, lsl #1]
  418d64:	tst	x3, #0x7
  418d68:	mov	x3, x0
  418d6c:	b.ne	418d80 <find_next_token@@Base+0x58>  // b.any
  418d70:	ldrb	w4, [x3, #1]!
  418d74:	ldrh	w4, [x2, x4, lsl #1]
  418d78:	tst	x4, #0x7
  418d7c:	b.eq	418d70 <find_next_token@@Base+0x48>  // b.none
  418d80:	str	x3, [x5]
  418d84:	cbz	x1, 418d90 <find_next_token@@Base+0x68>
  418d88:	sub	x3, x3, x0
  418d8c:	str	x3, [x1]
  418d90:	ret
  418d94:	mov	x0, #0x0                   	// #0
  418d98:	ret
  418d9c:	nop

0000000000418da0 <writebuf@@Base>:
  418da0:	stp	x29, x30, [sp, #-64]!
  418da4:	mov	x29, sp
  418da8:	stp	x19, x20, [sp, #16]
  418dac:	str	x23, [sp, #48]
  418db0:	mov	x23, x2
  418db4:	cbz	x2, 418e0c <writebuf@@Base+0x6c>
  418db8:	mov	x20, x2
  418dbc:	stp	x21, x22, [sp, #32]
  418dc0:	mov	w22, w0
  418dc4:	mov	x21, x1
  418dc8:	b	418ddc <writebuf@@Base+0x3c>
  418dcc:	bl	406d70 <__errno_location@plt>
  418dd0:	ldr	w3, [x0]
  418dd4:	cmp	w3, #0x4
  418dd8:	b.ne	418e24 <writebuf@@Base+0x84>  // b.any
  418ddc:	mov	x2, x20
  418de0:	mov	x1, x21
  418de4:	mov	w0, w22
  418de8:	bl	406a90 <write@plt>
  418dec:	mov	x19, x0
  418df0:	cmn	x0, #0x1
  418df4:	b.eq	418dcc <writebuf@@Base+0x2c>  // b.none
  418df8:	add	x21, x21, x0
  418dfc:	tbnz	x0, #63, 418e24 <writebuf@@Base+0x84>
  418e00:	subs	x20, x20, x0
  418e04:	b.ne	418ddc <writebuf@@Base+0x3c>  // b.any
  418e08:	ldp	x21, x22, [sp, #32]
  418e0c:	mov	x19, x23
  418e10:	mov	x0, x19
  418e14:	ldp	x19, x20, [sp, #16]
  418e18:	ldr	x23, [sp, #48]
  418e1c:	ldp	x29, x30, [sp], #64
  418e20:	ret
  418e24:	mov	x0, x19
  418e28:	ldp	x19, x20, [sp, #16]
  418e2c:	ldp	x21, x22, [sp, #32]
  418e30:	ldr	x23, [sp, #48]
  418e34:	ldp	x29, x30, [sp], #64
  418e38:	ret
  418e3c:	nop

0000000000418e40 <readbuf@@Base>:
  418e40:	stp	x29, x30, [sp, #-64]!
  418e44:	mov	x29, sp
  418e48:	stp	x19, x20, [sp, #16]
  418e4c:	cbz	x2, 418ee4 <readbuf@@Base+0xa4>
  418e50:	mov	x20, x2
  418e54:	stp	x21, x22, [sp, #32]
  418e58:	mov	w22, w0
  418e5c:	mov	x21, x1
  418e60:	str	x23, [sp, #48]
  418e64:	mov	x23, x1
  418e68:	b	418e7c <readbuf@@Base+0x3c>
  418e6c:	bl	406d70 <__errno_location@plt>
  418e70:	ldr	w3, [x0]
  418e74:	cmp	w3, #0x4
  418e78:	b.ne	418ecc <readbuf@@Base+0x8c>  // b.any
  418e7c:	mov	x2, x20
  418e80:	mov	x1, x21
  418e84:	mov	w0, w22
  418e88:	bl	406c80 <read@plt>
  418e8c:	mov	x19, x0
  418e90:	cmn	x0, #0x1
  418e94:	b.eq	418e6c <readbuf@@Base+0x2c>  // b.none
  418e98:	cmp	x0, #0x0
  418e9c:	b.lt	418ecc <readbuf@@Base+0x8c>  // b.tstop
  418ea0:	b.eq	418eb0 <readbuf@@Base+0x70>  // b.none
  418ea4:	add	x21, x21, x0
  418ea8:	subs	x20, x20, x0
  418eac:	b.ne	418e7c <readbuf@@Base+0x3c>  // b.any
  418eb0:	sub	x19, x21, x23
  418eb4:	ldp	x21, x22, [sp, #32]
  418eb8:	ldr	x23, [sp, #48]
  418ebc:	mov	x0, x19
  418ec0:	ldp	x19, x20, [sp, #16]
  418ec4:	ldp	x29, x30, [sp], #64
  418ec8:	ret
  418ecc:	mov	x0, x19
  418ed0:	ldp	x19, x20, [sp, #16]
  418ed4:	ldp	x21, x22, [sp, #32]
  418ed8:	ldr	x23, [sp, #48]
  418edc:	ldp	x29, x30, [sp], #64
  418ee0:	ret
  418ee4:	mov	x19, #0x0                   	// #0
  418ee8:	b	418ebc <readbuf@@Base+0x7c>
  418eec:	nop

0000000000418ef0 <copy_dep_chain@@Base>:
  418ef0:	stp	x29, x30, [sp, #-48]!
  418ef4:	mov	x29, sp
  418ef8:	stp	x21, x22, [sp, #32]
  418efc:	cbz	x0, 418f90 <copy_dep_chain@@Base+0xa0>
  418f00:	mov	x22, #0x0                   	// #0
  418f04:	stp	x19, x20, [sp, #16]
  418f08:	mov	x20, x0
  418f0c:	mov	x19, #0x0                   	// #0
  418f10:	b	418f28 <copy_dep_chain@@Base+0x38>
  418f14:	str	xzr, [x19]
  418f18:	cbz	x22, 418f70 <copy_dep_chain@@Base+0x80>
  418f1c:	str	x19, [x21]
  418f20:	ldr	x20, [x20]
  418f24:	cbz	x20, 418f7c <copy_dep_chain@@Base+0x8c>
  418f28:	mov	x21, x19
  418f2c:	mov	x0, #0x28                  	// #40
  418f30:	bl	4068d0 <malloc@plt>
  418f34:	mov	x19, x0
  418f38:	cbz	x0, 418f98 <copy_dep_chain@@Base+0xa8>
  418f3c:	ldp	x0, x1, [x20]
  418f40:	stp	x0, x1, [x19]
  418f44:	ldp	x0, x1, [x20, #16]
  418f48:	stp	x0, x1, [x19, #16]
  418f4c:	ldr	x0, [x20, #32]
  418f50:	str	x0, [x19, #32]
  418f54:	tbz	w0, #11, 418f14 <copy_dep_chain@@Base+0x24>
  418f58:	ldr	x0, [x19, #8]
  418f5c:	bl	406a20 <strdup@plt>
  418f60:	cbz	x0, 418f98 <copy_dep_chain@@Base+0xa8>
  418f64:	str	xzr, [x19]
  418f68:	str	x0, [x19, #8]
  418f6c:	cbnz	x22, 418f1c <copy_dep_chain@@Base+0x2c>
  418f70:	ldr	x20, [x20]
  418f74:	mov	x22, x19
  418f78:	cbnz	x20, 418f28 <copy_dep_chain@@Base+0x38>
  418f7c:	ldp	x19, x20, [sp, #16]
  418f80:	mov	x0, x22
  418f84:	ldp	x21, x22, [sp, #32]
  418f88:	ldp	x29, x30, [sp], #48
  418f8c:	ret
  418f90:	mov	x22, #0x0                   	// #0
  418f94:	b	418f80 <copy_dep_chain@@Base+0x90>
  418f98:	bl	41a1f8 <out_of_memory@@Base>
  418f9c:	nop

0000000000418fa0 <free_ns_chain@@Base>:
  418fa0:	cbz	x0, 418fd4 <free_ns_chain@@Base+0x34>
  418fa4:	stp	x29, x30, [sp, #-32]!
  418fa8:	mov	x29, sp
  418fac:	str	x19, [sp, #16]
  418fb0:	mov	x19, x0
  418fb4:	nop
  418fb8:	mov	x0, x19
  418fbc:	ldr	x19, [x19]
  418fc0:	bl	406b90 <free@plt>
  418fc4:	cbnz	x19, 418fb8 <free_ns_chain@@Base+0x18>
  418fc8:	ldr	x19, [sp, #16]
  418fcc:	ldp	x29, x30, [sp], #32
  418fd0:	ret
  418fd4:	ret

0000000000418fd8 <get_tmpfile@@Base>:
  418fd8:	stp	x29, x30, [sp, #-48]!
  418fdc:	mov	x29, sp
  418fe0:	stp	x19, x20, [sp, #16]
  418fe4:	mov	x20, x0
  418fe8:	mov	w0, #0x3f                  	// #63
  418fec:	stp	x21, x22, [sp, #32]
  418ff0:	mov	x21, x1
  418ff4:	bl	406d50 <umask@plt>
  418ff8:	mov	w22, w0
  418ffc:	mov	x0, x21
  419000:	bl	406680 <strlen@plt>
  419004:	add	x0, x0, #0x1
  419008:	bl	4068d0 <malloc@plt>
  41900c:	cbz	x0, 419094 <get_tmpfile@@Base+0xbc>
  419010:	str	x0, [x20]
  419014:	mov	x19, x0
  419018:	mov	x1, x21
  41901c:	bl	406c30 <strcpy@plt>
  419020:	b	419038 <get_tmpfile@@Base+0x60>
  419024:	bl	406d70 <__errno_location@plt>
  419028:	ldr	w1, [x0]
  41902c:	cmp	w1, #0x4
  419030:	b.ne	419074 <get_tmpfile@@Base+0x9c>  // b.any
  419034:	ldr	x19, [x20]
  419038:	mov	x0, x19
  41903c:	bl	406c90 <mkstemp@plt>
  419040:	cmn	w0, #0x1
  419044:	b.eq	419024 <get_tmpfile@@Base+0x4c>  // b.none
  419048:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  41904c:	add	x1, x1, #0x148
  419050:	bl	406980 <fdopen@plt>
  419054:	mov	x19, x0
  419058:	mov	w0, w22
  41905c:	bl	406d50 <umask@plt>
  419060:	mov	x0, x19
  419064:	ldp	x19, x20, [sp, #16]
  419068:	ldp	x21, x22, [sp, #32]
  41906c:	ldp	x29, x30, [sp], #48
  419070:	ret
  419074:	mov	w0, w22
  419078:	mov	x19, #0x0                   	// #0
  41907c:	bl	406d50 <umask@plt>
  419080:	mov	x0, x19
  419084:	ldp	x19, x20, [sp, #16]
  419088:	ldp	x21, x22, [sp, #32]
  41908c:	ldp	x29, x30, [sp], #48
  419090:	ret
  419094:	bl	41a1f8 <out_of_memory@@Base>

0000000000419098 <user_access@@Base>:
  419098:	ret
  41909c:	nop

00000000004190a0 <make_access@@Base>:
  4190a0:	ret
  4190a4:	nop

00000000004190a8 <child_access@@Base>:
  4190a8:	ret
  4190ac:	nop
  4190b0:	stp	x29, x30, [sp, #-32]!
  4190b4:	mov	w2, #0x0                   	// #0
  4190b8:	mov	w1, #0x3                   	// #3
  4190bc:	mov	x29, sp
  4190c0:	stp	x19, x20, [sp, #16]
  4190c4:	mov	w19, w0
  4190c8:	bl	425f10 <rpl_fcntl@@Base>
  4190cc:	tbnz	w0, #31, 419100 <child_access@@Base+0x58>
  4190d0:	orr	w20, w0, #0x400
  4190d4:	b	4190e8 <child_access@@Base+0x40>
  4190d8:	bl	406d70 <__errno_location@plt>
  4190dc:	ldr	w1, [x0]
  4190e0:	cmp	w1, #0x4
  4190e4:	b.ne	419100 <child_access@@Base+0x58>  // b.any
  4190e8:	mov	w2, w20
  4190ec:	mov	w0, w19
  4190f0:	mov	w1, #0x4                   	// #4
  4190f4:	bl	425f10 <rpl_fcntl@@Base>
  4190f8:	cmn	w0, #0x1
  4190fc:	b.eq	4190d8 <child_access@@Base+0x30>  // b.none
  419100:	ldp	x19, x20, [sp, #16]
  419104:	ldp	x29, x30, [sp], #32
  419108:	ret
  41910c:	nop
  419110:	stp	x29, x30, [sp, #-48]!
  419114:	mov	w2, #0x0                   	// #0
  419118:	mov	x29, sp
  41911c:	stp	x19, x20, [sp, #16]
  419120:	mov	x20, x1
  419124:	mov	x1, #0x0                   	// #0
  419128:	str	x21, [sp, #32]
  41912c:	mov	w21, w0
  419130:	bl	406800 <lseek@plt>
  419134:	cmn	x0, #0x1
  419138:	b.eq	4191e8 <child_access@@Base+0x140>  // b.none
  41913c:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  419140:	add	x19, x19, #0xdb8
  419144:	mov	x2, #0x2000                	// #8192
  419148:	mov	x1, x19
  41914c:	mov	w0, w21
  419150:	bl	406c80 <read@plt>
  419154:	mov	x3, x20
  419158:	cmn	w0, #0x1
  41915c:	mov	x2, #0x1                   	// #1
  419160:	b.eq	4191a8 <child_access@@Base+0x100>  // b.none
  419164:	cmp	w0, #0x0
  419168:	b.lt	4191b8 <child_access@@Base+0x110>  // b.tstop
  41916c:	b.eq	4191f8 <child_access@@Base+0x150>  // b.none
  419170:	sxtw	x1, w0
  419174:	mov	x0, x19
  419178:	bl	406be0 <fwrite@plt>
  41917c:	cbz	x0, 4191d0 <child_access@@Base+0x128>
  419180:	mov	x0, x20
  419184:	bl	406c20 <fflush@plt>
  419188:	mov	x2, #0x2000                	// #8192
  41918c:	mov	x1, x19
  419190:	mov	w0, w21
  419194:	bl	406c80 <read@plt>
  419198:	mov	x3, x20
  41919c:	cmn	w0, #0x1
  4191a0:	mov	x2, #0x1                   	// #1
  4191a4:	b.ne	419164 <child_access@@Base+0xbc>  // b.any
  4191a8:	bl	406d70 <__errno_location@plt>
  4191ac:	ldr	w0, [x0]
  4191b0:	cmp	w0, #0x4
  4191b4:	b.eq	419144 <child_access@@Base+0x9c>  // b.none
  4191b8:	ldp	x19, x20, [sp, #16]
  4191bc:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4191c0:	ldr	x21, [sp, #32]
  4191c4:	add	x0, x0, #0x238
  4191c8:	ldp	x29, x30, [sp], #48
  4191cc:	b	4066c0 <perror@plt>
  4191d0:	ldp	x19, x20, [sp, #16]
  4191d4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4191d8:	ldr	x21, [sp, #32]
  4191dc:	add	x0, x0, #0x240
  4191e0:	ldp	x29, x30, [sp], #48
  4191e4:	b	4066c0 <perror@plt>
  4191e8:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4191ec:	add	x0, x0, #0x230
  4191f0:	bl	4066c0 <perror@plt>
  4191f4:	b	41913c <child_access@@Base+0x94>
  4191f8:	ldp	x19, x20, [sp, #16]
  4191fc:	ldr	x21, [sp, #32]
  419200:	ldp	x29, x30, [sp], #48
  419204:	ret
  419208:	stp	x29, x30, [sp, #-32]!
  41920c:	mov	x29, sp
  419210:	stp	x19, x20, [sp, #16]
  419214:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  419218:	add	x2, x20, #0xd68
  41921c:	mov	x19, x0
  419220:	ldr	x0, [x20, #3432]
  419224:	ldr	x1, [x2, #8]
  419228:	cmp	x1, x19
  41922c:	b.cc	419244 <child_access@@Base+0x19c>  // b.lo, b.ul, b.last
  419230:	add	x19, x0, x19
  419234:	sturb	wzr, [x19, #-1]
  419238:	ldp	x19, x20, [sp, #16]
  41923c:	ldp	x29, x30, [sp], #32
  419240:	ret
  419244:	add	x1, x1, x19, lsl #1
  419248:	str	x1, [x2, #8]
  41924c:	bl	418aa0 <xrealloc@@Base>
  419250:	add	x19, x0, x19
  419254:	str	x0, [x20, #3432]
  419258:	sturb	wzr, [x19, #-1]
  41925c:	ldp	x19, x20, [sp, #16]
  419260:	ldp	x29, x30, [sp], #32
  419264:	ret
  419268:	stp	x29, x30, [sp, #-64]!
  41926c:	mov	x29, sp
  419270:	stp	x23, x24, [sp, #48]
  419274:	adrp	x23, 446000 <commands_started@@Base+0x1c8>
  419278:	adrp	x24, 446000 <commands_started@@Base+0x1c8>
  41927c:	stp	x19, x20, [sp, #16]
  419280:	mov	w19, w0
  419284:	ldr	x0, [x23, #2000]
  419288:	stp	x21, x22, [sp, #32]
  41928c:	adrp	x22, 446000 <commands_started@@Base+0x1c8>
  419290:	bl	406680 <strlen@plt>
  419294:	ldr	w21, [x24, #2016]
  419298:	ldr	x2, [x22, #1976]
  41929c:	add	x20, x0, #0x17
  4192a0:	cbz	x2, 4193a8 <child_access@@Base+0x300>
  4192a4:	mov	x0, x2
  4192a8:	bl	406680 <strlen@plt>
  4192ac:	add	x20, x20, x0
  4192b0:	cbnz	w21, 419358 <child_access@@Base+0x2b0>
  4192b4:	cbnz	w19, 4193cc <child_access@@Base+0x324>
  4192b8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4192bc:	mov	w2, #0x5                   	// #5
  4192c0:	add	x1, x1, #0x2c0
  4192c4:	mov	x0, #0x0                   	// #0
  4192c8:	bl	406cd0 <dcgettext@plt>
  4192cc:	mov	x21, x0
  4192d0:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  4192d4:	add	x19, x19, #0xd68
  4192d8:	mov	x0, x21
  4192dc:	bl	406680 <strlen@plt>
  4192e0:	add	x20, x0, x20
  4192e4:	ldp	x0, x1, [x19, #16]
  4192e8:	cmp	x1, x20
  4192ec:	b.cc	419398 <child_access@@Base+0x2f0>  // b.lo, b.ul, b.last
  4192f0:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  4192f4:	ldr	w1, [x1, #1608]
  4192f8:	cbz	w1, 419304 <child_access@@Base+0x25c>
  4192fc:	mov	w1, #0x2023                	// #8227
  419300:	strh	w1, [x0], #2
  419304:	ldr	w3, [x24, #2016]
  419308:	ldr	x4, [x22, #1976]
  41930c:	ldr	x2, [x23, #2000]
  419310:	cbnz	w3, 419424 <child_access@@Base+0x37c>
  419314:	cbz	x4, 419434 <child_access@@Base+0x38c>
  419318:	mov	x3, x4
  41931c:	mov	x1, x21
  419320:	bl	406730 <sprintf@plt>
  419324:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  419328:	ldr	x0, [x19, #16]
  41932c:	ldr	x19, [x1, #384]
  419330:	mov	x1, x19
  419334:	bl	406690 <fputs@plt>
  419338:	mov	x0, x19
  41933c:	bl	406c20 <fflush@plt>
  419340:	mov	w0, #0x1                   	// #1
  419344:	ldp	x19, x20, [sp, #16]
  419348:	ldp	x21, x22, [sp, #32]
  41934c:	ldp	x23, x24, [sp, #48]
  419350:	ldp	x29, x30, [sp], #64
  419354:	ret
  419358:	cbz	w19, 4193e8 <child_access@@Base+0x340>
  41935c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  419360:	add	x1, x1, #0x330
  419364:	mov	w2, #0x5                   	// #5
  419368:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  41936c:	add	x19, x19, #0xd68
  419370:	mov	x0, #0x0                   	// #0
  419374:	bl	406cd0 <dcgettext@plt>
  419378:	mov	x21, x0
  41937c:	mov	x0, x21
  419380:	bl	406680 <strlen@plt>
  419384:	add	x20, x0, x20
  419388:	ldp	x0, x1, [x19, #16]
  41938c:	cmp	x1, x20
  419390:	b.cs	4192f0 <child_access@@Base+0x248>  // b.hs, b.nlast
  419394:	nop
  419398:	mov	x1, x20
  41939c:	bl	418aa0 <xrealloc@@Base>
  4193a0:	stp	x0, x20, [x19, #16]
  4193a4:	b	4192f0 <child_access@@Base+0x248>
  4193a8:	cbnz	w21, 419404 <child_access@@Base+0x35c>
  4193ac:	cbz	w19, 419448 <child_access@@Base+0x3a0>
  4193b0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4193b4:	mov	w2, #0x5                   	// #5
  4193b8:	add	x1, x1, #0x250
  4193bc:	mov	x0, #0x0                   	// #0
  4193c0:	bl	406cd0 <dcgettext@plt>
  4193c4:	mov	x21, x0
  4193c8:	b	4192d0 <child_access@@Base+0x228>
  4193cc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4193d0:	mov	w2, #0x5                   	// #5
  4193d4:	add	x1, x1, #0x2a0
  4193d8:	mov	x0, #0x0                   	// #0
  4193dc:	bl	406cd0 <dcgettext@plt>
  4193e0:	mov	x21, x0
  4193e4:	b	4192d0 <child_access@@Base+0x228>
  4193e8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4193ec:	mov	w2, #0x5                   	// #5
  4193f0:	add	x1, x1, #0x358
  4193f4:	mov	x0, #0x0                   	// #0
  4193f8:	bl	406cd0 <dcgettext@plt>
  4193fc:	mov	x21, x0
  419400:	b	4192d0 <child_access@@Base+0x228>
  419404:	cbz	w19, 419464 <child_access@@Base+0x3bc>
  419408:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41940c:	mov	w2, #0x5                   	// #5
  419410:	add	x1, x1, #0x2e0
  419414:	mov	x0, #0x0                   	// #0
  419418:	bl	406cd0 <dcgettext@plt>
  41941c:	mov	x21, x0
  419420:	b	4192d0 <child_access@@Base+0x228>
  419424:	mov	x1, x21
  419428:	cbz	x4, 419440 <child_access@@Base+0x398>
  41942c:	bl	406730 <sprintf@plt>
  419430:	b	419324 <child_access@@Base+0x27c>
  419434:	mov	x1, x21
  419438:	bl	406730 <sprintf@plt>
  41943c:	b	419324 <child_access@@Base+0x27c>
  419440:	bl	406730 <sprintf@plt>
  419444:	b	419324 <child_access@@Base+0x27c>
  419448:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41944c:	mov	w2, #0x5                   	// #5
  419450:	add	x1, x1, #0x278
  419454:	mov	x0, #0x0                   	// #0
  419458:	bl	406cd0 <dcgettext@plt>
  41945c:	mov	x21, x0
  419460:	b	4192d0 <child_access@@Base+0x228>
  419464:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  419468:	mov	w2, #0x5                   	// #5
  41946c:	add	x1, x1, #0x308
  419470:	mov	x0, #0x0                   	// #0
  419474:	bl	406cd0 <dcgettext@plt>
  419478:	mov	x21, x0
  41947c:	b	4192d0 <child_access@@Base+0x228>

0000000000419480 <output_dump@@Base>:
  419480:	stp	x29, x30, [sp, #-64]!
  419484:	mov	x29, sp
  419488:	stp	x19, x20, [sp, #16]
  41948c:	mov	x19, x0
  419490:	ldr	w0, [x0]
  419494:	cmn	w0, #0x1
  419498:	b.ne	4195e4 <output_dump@@Base+0x164>  // b.any
  41949c:	ldr	w0, [x19, #4]
  4194a0:	cmn	w0, #0x1
  4194a4:	b.ne	4194b4 <output_dump@@Base+0x34>  // b.any
  4194a8:	ldp	x19, x20, [sp, #16]
  4194ac:	ldp	x29, x30, [sp], #64
  4194b0:	ret
  4194b4:	mov	w2, #0x2                   	// #2
  4194b8:	mov	x1, #0x0                   	// #0
  4194bc:	stp	x21, x22, [sp, #32]
  4194c0:	mov	w22, #0x0                   	// #0
  4194c4:	stp	x23, x24, [sp, #48]
  4194c8:	bl	406800 <lseek@plt>
  4194cc:	mov	w23, #0x1                   	// #1
  4194d0:	cmp	x0, #0x0
  4194d4:	b.le	4195d0 <output_dump@@Base+0x150>
  4194d8:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  4194dc:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  4194e0:	add	x3, x3, #0xd68
  4194e4:	mov	w5, #0x1                   	// #1
  4194e8:	ldr	w0, [x24, #168]
  4194ec:	add	x2, x3, #0x20
  4194f0:	mov	x4, #0x1                   	// #1
  4194f4:	mov	x21, x2
  4194f8:	str	w5, [x3, #32]
  4194fc:	mov	w1, #0x7                   	// #7
  419500:	stp	xzr, x4, [x2, #8]
  419504:	bl	425f10 <rpl_fcntl@@Base>
  419508:	cmn	w0, #0x1
  41950c:	b.eq	4196b0 <output_dump@@Base+0x230>  // b.none
  419510:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  419514:	ldr	w20, [x0, #3328]
  419518:	cbz	w20, 41953c <output_dump@@Base+0xbc>
  41951c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  419520:	mov	w20, #0x0                   	// #0
  419524:	ldr	w0, [x0, #3296]
  419528:	cmp	w0, #0x3
  41952c:	b.eq	41953c <output_dump@@Base+0xbc>  // b.none
  419530:	mov	w0, #0x1                   	// #1
  419534:	bl	419268 <child_access@@Base+0x1c0>
  419538:	mov	w20, w0
  41953c:	cbnz	w22, 419698 <output_dump@@Base+0x218>
  419540:	cbz	w23, 41955c <output_dump@@Base+0xdc>
  419544:	ldp	w1, w0, [x19]
  419548:	cmp	w0, w1
  41954c:	b.eq	41955c <output_dump@@Base+0xdc>  // b.none
  419550:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  419554:	ldr	x1, [x1, #360]
  419558:	bl	419110 <child_access@@Base+0x68>
  41955c:	cbnz	w20, 419688 <output_dump@@Base+0x208>
  419560:	cbz	x21, 419584 <output_dump@@Base+0x104>
  419564:	ldr	w0, [x24, #168]
  419568:	mov	w1, #0x2                   	// #2
  41956c:	strh	w1, [x21]
  419570:	mov	x2, x21
  419574:	mov	w1, #0x7                   	// #7
  419578:	bl	425f10 <rpl_fcntl@@Base>
  41957c:	cmn	w0, #0x1
  419580:	b.eq	4196c4 <output_dump@@Base+0x244>  // b.none
  419584:	ldr	w0, [x19]
  419588:	cmn	w0, #0x1
  41958c:	b.ne	419630 <output_dump@@Base+0x1b0>  // b.any
  419590:	ldr	w0, [x19, #4]
  419594:	cmn	w0, #0x1
  419598:	b.eq	4195d0 <output_dump@@Base+0x150>  // b.none
  41959c:	mov	w2, #0x0                   	// #0
  4195a0:	mov	x1, #0x0                   	// #0
  4195a4:	bl	406800 <lseek@plt>
  4195a8:	b	4195bc <output_dump@@Base+0x13c>
  4195ac:	bl	406d70 <__errno_location@plt>
  4195b0:	ldr	w0, [x0]
  4195b4:	cmp	w0, #0x4
  4195b8:	b.ne	4195d0 <output_dump@@Base+0x150>  // b.any
  4195bc:	ldr	w0, [x19, #4]
  4195c0:	mov	x1, #0x0                   	// #0
  4195c4:	bl	406d10 <ftruncate@plt>
  4195c8:	cmn	w0, #0x1
  4195cc:	b.eq	4195ac <output_dump@@Base+0x12c>  // b.none
  4195d0:	ldp	x21, x22, [sp, #32]
  4195d4:	ldp	x23, x24, [sp, #48]
  4195d8:	ldp	x19, x20, [sp, #16]
  4195dc:	ldp	x29, x30, [sp], #64
  4195e0:	ret
  4195e4:	mov	w2, #0x2                   	// #2
  4195e8:	mov	x1, #0x0                   	// #0
  4195ec:	bl	406800 <lseek@plt>
  4195f0:	cmp	x0, #0x0
  4195f4:	b.le	41949c <output_dump@@Base+0x1c>
  4195f8:	ldr	w0, [x19, #4]
  4195fc:	stp	x21, x22, [sp, #32]
  419600:	mov	w22, #0x1                   	// #1
  419604:	cmn	w0, #0x1
  419608:	stp	x23, x24, [sp, #48]
  41960c:	mov	w23, #0x0                   	// #0
  419610:	b.eq	4194d8 <output_dump@@Base+0x58>  // b.none
  419614:	mov	w2, #0x2                   	// #2
  419618:	mov	x1, #0x0                   	// #0
  41961c:	bl	406800 <lseek@plt>
  419620:	cmp	x0, #0x0
  419624:	cset	w23, gt
  419628:	mov	w22, #0x1                   	// #1
  41962c:	b	4194d8 <output_dump@@Base+0x58>
  419630:	mov	w2, #0x0                   	// #0
  419634:	mov	x1, #0x0                   	// #0
  419638:	bl	406800 <lseek@plt>
  41963c:	b	419650 <output_dump@@Base+0x1d0>
  419640:	bl	406d70 <__errno_location@plt>
  419644:	ldr	w0, [x0]
  419648:	cmp	w0, #0x4
  41964c:	b.ne	419664 <output_dump@@Base+0x1e4>  // b.any
  419650:	ldr	w0, [x19]
  419654:	mov	x1, #0x0                   	// #0
  419658:	bl	406d10 <ftruncate@plt>
  41965c:	cmn	w0, #0x1
  419660:	b.eq	419640 <output_dump@@Base+0x1c0>  // b.none
  419664:	ldr	w0, [x19, #4]
  419668:	cmn	w0, #0x1
  41966c:	b.eq	4195d0 <output_dump@@Base+0x150>  // b.none
  419670:	ldr	w1, [x19]
  419674:	cmp	w0, w1
  419678:	b.ne	41959c <output_dump@@Base+0x11c>  // b.any
  41967c:	ldp	x21, x22, [sp, #32]
  419680:	ldp	x23, x24, [sp, #48]
  419684:	b	4195d8 <output_dump@@Base+0x158>
  419688:	mov	w0, #0x0                   	// #0
  41968c:	bl	419268 <child_access@@Base+0x1c0>
  419690:	cbnz	x21, 419564 <output_dump@@Base+0xe4>
  419694:	b	419584 <output_dump@@Base+0x104>
  419698:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  41969c:	ldr	w0, [x19]
  4196a0:	ldr	x1, [x1, #384]
  4196a4:	bl	419110 <child_access@@Base+0x68>
  4196a8:	cbz	w23, 41955c <output_dump@@Base+0xdc>
  4196ac:	b	419544 <output_dump@@Base+0xc4>
  4196b0:	mov	x21, #0x0                   	// #0
  4196b4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4196b8:	add	x0, x0, #0x378
  4196bc:	bl	4066c0 <perror@plt>
  4196c0:	b	419510 <output_dump@@Base+0x90>
  4196c4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4196c8:	add	x0, x0, #0x378
  4196cc:	bl	4066c0 <perror@plt>
  4196d0:	b	419584 <output_dump@@Base+0x104>
  4196d4:	nop

00000000004196d8 <output_init@@Base>:
  4196d8:	cbz	x0, 419704 <output_init@@Base+0x2c>
  4196dc:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  4196e0:	ldrb	w1, [x0, #8]
  4196e4:	mov	x3, #0xffffffffffffffff    	// #-1
  4196e8:	ldr	w2, [x2, #3296]
  4196ec:	str	x3, [x0]
  4196f0:	cmp	w2, #0x0
  4196f4:	cset	w2, ne  // ne = any
  4196f8:	bfxil	w1, w2, #0, #1
  4196fc:	strb	w1, [x0, #8]
  419700:	ret
  419704:	stp	x29, x30, [sp, #-32]!
  419708:	mov	x3, #0x2000                	// #8192
  41970c:	mov	w2, #0x1                   	// #1
  419710:	mov	x29, sp
  419714:	str	x19, [sp, #16]
  419718:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  41971c:	mov	x1, #0x0                   	// #0
  419720:	ldr	x0, [x19, #384]
  419724:	bl	4067f0 <setvbuf@plt>
  419728:	ldr	x0, [x19, #384]
  41972c:	bl	406850 <fileno@plt>
  419730:	bl	4190b0 <child_access@@Base+0x8>
  419734:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  419738:	ldr	x0, [x0, #360]
  41973c:	bl	406850 <fileno@plt>
  419740:	bl	4190b0 <child_access@@Base+0x8>
  419744:	ldr	x0, [x19, #384]
  419748:	bl	406850 <fileno@plt>
  41974c:	mov	w1, #0x1                   	// #1
  419750:	bl	425f10 <rpl_fcntl@@Base>
  419754:	cmn	w0, #0x1
  419758:	b.ne	419778 <output_init@@Base+0xa0>  // b.any
  41975c:	bl	406d70 <__errno_location@plt>
  419760:	ldr	w0, [x0]
  419764:	cmp	w0, #0x9
  419768:	b.ne	419778 <output_init@@Base+0xa0>  // b.any
  41976c:	ldr	x19, [sp, #16]
  419770:	ldp	x29, x30, [sp], #32
  419774:	ret
  419778:	ldr	x19, [sp, #16]
  41977c:	adrp	x0, 419000 <get_tmpfile@@Base+0x28>
  419780:	ldp	x29, x30, [sp], #32
  419784:	add	x0, x0, #0xfd0
  419788:	b	4263a0 <__libc_csu_fini@@Base+0x8>
  41978c:	nop

0000000000419790 <output_close@@Base>:
  419790:	cbz	x0, 419804 <output_close@@Base+0x74>
  419794:	stp	x29, x30, [sp, #-32]!
  419798:	mov	x29, sp
  41979c:	str	x19, [sp, #16]
  4197a0:	mov	x19, x0
  4197a4:	bl	419480 <output_dump@@Base>
  4197a8:	ldr	w0, [x19]
  4197ac:	tbz	w0, #31, 4197f4 <output_close@@Base+0x64>
  4197b0:	ldr	w0, [x19, #4]
  4197b4:	tbnz	w0, #31, 4197c4 <output_close@@Base+0x34>
  4197b8:	ldr	w1, [x19]
  4197bc:	cmp	w0, w1
  4197c0:	b.ne	419814 <output_close@@Base+0x84>  // b.any
  4197c4:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  4197c8:	ldrb	w0, [x19, #8]
  4197cc:	mov	x2, #0xffffffffffffffff    	// #-1
  4197d0:	ldr	w1, [x1, #3296]
  4197d4:	str	x2, [x19]
  4197d8:	cmp	w1, #0x0
  4197dc:	cset	w1, ne  // ne = any
  4197e0:	bfxil	w0, w1, #0, #1
  4197e4:	strb	w0, [x19, #8]
  4197e8:	ldr	x19, [sp, #16]
  4197ec:	ldp	x29, x30, [sp], #32
  4197f0:	ret
  4197f4:	bl	406a50 <close@plt>
  4197f8:	ldr	w0, [x19, #4]
  4197fc:	tbz	w0, #31, 4197b8 <output_close@@Base+0x28>
  419800:	b	4197c4 <output_close@@Base+0x34>
  419804:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  419808:	ldr	w0, [x0, #3496]
  41980c:	cbnz	w0, 41981c <output_close@@Base+0x8c>
  419810:	ret
  419814:	bl	406a50 <close@plt>
  419818:	b	4197c4 <output_close@@Base+0x34>
  41981c:	mov	w0, #0x0                   	// #0
  419820:	b	419268 <child_access@@Base+0x1c0>
  419824:	nop

0000000000419828 <pfatal_with_name@@Base>:
  419828:	stp	x29, x30, [sp, #-48]!
  41982c:	mov	x29, sp
  419830:	stp	x19, x20, [sp, #16]
  419834:	mov	x19, x0
  419838:	stp	x21, x22, [sp, #32]
  41983c:	bl	406d70 <__errno_location@plt>
  419840:	ldr	w0, [x0]
  419844:	bl	406a40 <strerror@plt>
  419848:	mov	x20, x0
  41984c:	mov	x0, x19
  419850:	bl	406680 <strlen@plt>
  419854:	mov	x22, x0
  419858:	mov	x0, x20
  41985c:	bl	406680 <strlen@plt>
  419860:	mov	x21, x0
  419864:	mov	w2, #0x5                   	// #5
  419868:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  41986c:	mov	x0, #0x0                   	// #0
  419870:	add	x1, x1, #0xa28
  419874:	bl	406cd0 <dcgettext@plt>
  419878:	mov	x2, x0
  41987c:	mov	x4, x20
  419880:	mov	x3, x19
  419884:	add	x1, x22, x21
  419888:	mov	x0, #0x0                   	// #0
  41988c:	bl	41a060 <fatal@@Base>

0000000000419890 <output_tmpfd@@Base>:
  419890:	stp	x29, x30, [sp, #-48]!
  419894:	mov	w0, #0x3f                  	// #63
  419898:	mov	x29, sp
  41989c:	stp	x19, x20, [sp, #16]
  4198a0:	str	x21, [sp, #32]
  4198a4:	bl	406d50 <umask@plt>
  4198a8:	mov	w21, w0
  4198ac:	bl	4066d0 <tmpfile@plt>
  4198b0:	cbz	x0, 4198f4 <output_tmpfd@@Base+0x64>
  4198b4:	mov	x20, x0
  4198b8:	bl	406850 <fileno@plt>
  4198bc:	bl	4066b0 <dup@plt>
  4198c0:	mov	w19, w0
  4198c4:	tbnz	w0, #31, 419900 <output_tmpfd@@Base+0x70>
  4198c8:	mov	x0, x20
  4198cc:	bl	406890 <fclose@plt>
  4198d0:	mov	w0, w19
  4198d4:	bl	4190b0 <child_access@@Base+0x8>
  4198d8:	mov	w0, w21
  4198dc:	bl	406d50 <umask@plt>
  4198e0:	mov	w0, w19
  4198e4:	ldp	x19, x20, [sp, #16]
  4198e8:	ldr	x21, [sp, #32]
  4198ec:	ldp	x29, x30, [sp], #48
  4198f0:	ret
  4198f4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4198f8:	add	x0, x0, #0x380
  4198fc:	bl	419828 <pfatal_with_name@@Base>
  419900:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  419904:	add	x0, x0, #0x388
  419908:	bl	419828 <pfatal_with_name@@Base>
  41990c:	nop

0000000000419910 <output_start@@Base>:
  419910:	stp	x29, x30, [sp, #-336]!
  419914:	mov	x29, sp
  419918:	stp	x19, x20, [sp, #16]
  41991c:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  419920:	add	x19, x19, #0xd68
  419924:	stp	x21, x22, [sp, #32]
  419928:	ldr	x20, [x19, #72]
  41992c:	cbz	x20, 419938 <output_start@@Base+0x28>
  419930:	ldrb	w0, [x20, #8]
  419934:	tbnz	w0, #0, 419994 <output_start@@Base+0x84>
  419938:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  41993c:	ldr	w0, [x21, #3296]
  419940:	cmp	w0, #0x0
  419944:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  419948:	b.eq	419970 <output_start@@Base+0x60>  // b.none
  41994c:	ldp	x19, x20, [sp, #16]
  419950:	ldp	x21, x22, [sp, #32]
  419954:	ldp	x29, x30, [sp], #336
  419958:	ret
  41995c:	mov	x0, x20
  419960:	bl	419790 <output_close@@Base>
  419964:	ldp	x23, x24, [sp, #48]
  419968:	str	wzr, [x21, #3296]
  41996c:	nop
  419970:	ldr	w0, [x19, #64]
  419974:	cbnz	w0, 41994c <output_start@@Base+0x3c>
  419978:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41997c:	ldr	w0, [x0, #3328]
  419980:	cbz	w0, 41994c <output_start@@Base+0x3c>
  419984:	mov	w0, #0x1                   	// #1
  419988:	bl	419268 <child_access@@Base+0x1c0>
  41998c:	str	w0, [x19, #64]
  419990:	b	41994c <output_start@@Base+0x3c>
  419994:	ldr	w0, [x20]
  419998:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  41999c:	tbz	w0, #31, 41993c <output_start@@Base+0x2c>
  4199a0:	ldr	w0, [x20, #4]
  4199a4:	tbz	w0, #31, 41993c <output_start@@Base+0x2c>
  4199a8:	stp	x23, x24, [sp, #48]
  4199ac:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  4199b0:	add	x23, x24, #0xa8
  4199b4:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  4199b8:	ldr	w1, [x23, #4]
  4199bc:	ldr	x0, [x22, #384]
  4199c0:	tbnz	w1, #31, 419a54 <output_start@@Base+0x144>
  4199c4:	bl	406850 <fileno@plt>
  4199c8:	mov	w1, #0x1                   	// #1
  4199cc:	bl	425f10 <rpl_fcntl@@Base>
  4199d0:	cmn	w0, #0x1
  4199d4:	b.ne	4199e8 <output_start@@Base+0xd8>  // b.any
  4199d8:	bl	406d70 <__errno_location@plt>
  4199dc:	ldr	w0, [x0]
  4199e0:	cmp	w0, #0x9
  4199e4:	b.eq	4199fc <output_start@@Base+0xec>  // b.none
  4199e8:	bl	419890 <output_tmpfd@@Base>
  4199ec:	mov	w22, w0
  4199f0:	tbnz	w0, #31, 41995c <output_start@@Base+0x4c>
  4199f4:	bl	425a40 <fd_noinherit@@Base>
  4199f8:	str	w22, [x20]
  4199fc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  419a00:	ldr	x0, [x0, #360]
  419a04:	bl	406850 <fileno@plt>
  419a08:	mov	w1, #0x1                   	// #1
  419a0c:	bl	425f10 <rpl_fcntl@@Base>
  419a10:	cmn	w0, #0x1
  419a14:	b.eq	419ac4 <output_start@@Base+0x1b4>  // b.none
  419a18:	ldr	w0, [x20]
  419a1c:	cmn	w0, #0x1
  419a20:	b.eq	419a38 <output_start@@Base+0x128>  // b.none
  419a24:	ldr	w1, [x23, #4]
  419a28:	cbz	w1, 419a38 <output_start@@Base+0x128>
  419a2c:	ldp	x23, x24, [sp, #48]
  419a30:	str	w0, [x20, #4]
  419a34:	b	41993c <output_start@@Base+0x2c>
  419a38:	bl	419890 <output_tmpfd@@Base>
  419a3c:	mov	w22, w0
  419a40:	tbnz	w0, #31, 41995c <output_start@@Base+0x4c>
  419a44:	bl	425a40 <fd_noinherit@@Base>
  419a48:	ldp	x23, x24, [sp, #48]
  419a4c:	str	w22, [x20, #4]
  419a50:	b	41993c <output_start@@Base+0x2c>
  419a54:	bl	406850 <fileno@plt>
  419a58:	mov	w1, #0x1                   	// #1
  419a5c:	bl	425f10 <rpl_fcntl@@Base>
  419a60:	cmn	w0, #0x1
  419a64:	b.ne	419a84 <output_start@@Base+0x174>  // b.any
  419a68:	stp	x25, x26, [sp, #64]
  419a6c:	bl	406d70 <__errno_location@plt>
  419a70:	mov	x25, x0
  419a74:	ldr	w0, [x0]
  419a78:	cmp	w0, #0x9
  419a7c:	b.eq	419b24 <output_start@@Base+0x214>  // b.none
  419a80:	ldp	x25, x26, [sp, #64]
  419a84:	ldr	x0, [x22, #384]
  419a88:	bl	406850 <fileno@plt>
  419a8c:	mov	w1, w0
  419a90:	ldr	x0, [x22, #384]
  419a94:	str	w1, [x24, #168]
  419a98:	bl	406850 <fileno@plt>
  419a9c:	mov	w1, w0
  419aa0:	add	x2, sp, #0x50
  419aa4:	mov	w0, #0x0                   	// #0
  419aa8:	bl	406cb0 <__fxstat@plt>
  419aac:	cbz	w0, 419adc <output_start@@Base+0x1cc>
  419ab0:	mov	w1, #0x0                   	// #0
  419ab4:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  419ab8:	ldr	x0, [x22, #384]
  419abc:	str	w1, [x23, #4]
  419ac0:	b	4199c4 <output_start@@Base+0xb4>
  419ac4:	bl	406d70 <__errno_location@plt>
  419ac8:	ldr	w0, [x0]
  419acc:	cmp	w0, #0x9
  419ad0:	b.ne	419a18 <output_start@@Base+0x108>  // b.any
  419ad4:	ldp	x23, x24, [sp, #48]
  419ad8:	b	41993c <output_start@@Base+0x2c>
  419adc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  419ae0:	ldr	x0, [x0, #360]
  419ae4:	bl	406850 <fileno@plt>
  419ae8:	mov	w1, w0
  419aec:	add	x2, sp, #0xd0
  419af0:	mov	w0, #0x0                   	// #0
  419af4:	bl	406cb0 <__fxstat@plt>
  419af8:	cbnz	w0, 419ab0 <output_start@@Base+0x1a0>
  419afc:	ldr	x1, [sp, #80]
  419b00:	ldr	x0, [sp, #208]
  419b04:	cmp	x1, x0
  419b08:	b.ne	419ab0 <output_start@@Base+0x1a0>  // b.any
  419b0c:	ldr	x1, [sp, #88]
  419b10:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  419b14:	ldr	x0, [sp, #216]
  419b18:	cmp	x1, x0
  419b1c:	cset	w1, eq  // eq = none
  419b20:	b	419ab8 <output_start@@Base+0x1a8>
  419b24:	adrp	x26, 443000 <expanding_var@@Base+0x338>
  419b28:	ldr	x0, [x26, #360]
  419b2c:	bl	406850 <fileno@plt>
  419b30:	mov	w1, #0x1                   	// #1
  419b34:	bl	425f10 <rpl_fcntl@@Base>
  419b38:	cmn	w0, #0x1
  419b3c:	b.ne	419b4c <output_start@@Base+0x23c>  // b.any
  419b40:	ldr	w0, [x25]
  419b44:	cmp	w0, #0x9
  419b48:	b.eq	419b68 <output_start@@Base+0x258>  // b.none
  419b4c:	ldr	x0, [x26, #360]
  419b50:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  419b54:	bl	406850 <fileno@plt>
  419b58:	str	w0, [x24, #168]
  419b5c:	mov	w1, #0x0                   	// #0
  419b60:	ldp	x25, x26, [sp, #64]
  419b64:	b	419ab8 <output_start@@Base+0x1a8>
  419b68:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  419b6c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  419b70:	add	x1, x1, #0x390
  419b74:	add	x0, x0, #0x398
  419b78:	bl	419f38 <perror_with_name@@Base>
  419b7c:	str	wzr, [x21, #3296]
  419b80:	mov	w1, #0x0                   	// #0
  419b84:	ldp	x25, x26, [sp, #64]
  419b88:	b	419ab8 <output_start@@Base+0x1a8>
  419b8c:	nop
  419b90:	stp	x29, x30, [sp, #-48]!
  419b94:	mov	x29, sp
  419b98:	stp	x19, x20, [sp, #16]
  419b9c:	mov	w20, w0
  419ba0:	mov	x19, x1
  419ba4:	bl	419910 <output_start@@Base>
  419ba8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  419bac:	ldr	x0, [x0, #3504]
  419bb0:	cbz	x0, 419c20 <output_start@@Base+0x310>
  419bb4:	ldrb	w1, [x0, #8]
  419bb8:	tbz	w1, #0, 419c20 <output_start@@Base+0x310>
  419bbc:	cmp	w20, #0x0
  419bc0:	ldp	w1, w20, [x0]
  419bc4:	mov	x0, x19
  419bc8:	str	x21, [sp, #32]
  419bcc:	csel	w20, w20, w1, ne  // ne = any
  419bd0:	bl	406680 <strlen@plt>
  419bd4:	mov	x21, x0
  419bd8:	b	419bec <output_start@@Base+0x2dc>
  419bdc:	bl	406d70 <__errno_location@plt>
  419be0:	ldr	w1, [x0]
  419be4:	cmp	w1, #0x4
  419be8:	b.ne	419c04 <output_start@@Base+0x2f4>  // b.any
  419bec:	mov	w0, w20
  419bf0:	mov	w2, #0x2                   	// #2
  419bf4:	mov	x1, #0x0                   	// #0
  419bf8:	bl	406800 <lseek@plt>
  419bfc:	cmn	w0, #0x1
  419c00:	b.eq	419bdc <output_start@@Base+0x2cc>  // b.none
  419c04:	mov	x2, x21
  419c08:	mov	x1, x19
  419c0c:	mov	w0, w20
  419c10:	ldp	x19, x20, [sp, #16]
  419c14:	ldr	x21, [sp, #32]
  419c18:	ldp	x29, x30, [sp], #48
  419c1c:	b	418da0 <writebuf@@Base>
  419c20:	cbnz	w20, 419c48 <output_start@@Base+0x338>
  419c24:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  419c28:	ldr	x20, [x0, #384]
  419c2c:	mov	x0, x19
  419c30:	mov	x1, x20
  419c34:	bl	406690 <fputs@plt>
  419c38:	mov	x0, x20
  419c3c:	ldp	x19, x20, [sp, #16]
  419c40:	ldp	x29, x30, [sp], #48
  419c44:	b	406c20 <fflush@plt>
  419c48:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  419c4c:	ldr	x20, [x0, #360]
  419c50:	mov	x0, x19
  419c54:	mov	x1, x20
  419c58:	bl	406690 <fputs@plt>
  419c5c:	mov	x0, x20
  419c60:	ldp	x19, x20, [sp, #16]
  419c64:	ldp	x29, x30, [sp], #48
  419c68:	b	406c20 <fflush@plt>
  419c6c:	nop

0000000000419c70 <outputs@@Base>:
  419c70:	cbz	x1, 419c7c <outputs@@Base+0xc>
  419c74:	ldrb	w2, [x1]
  419c78:	cbnz	w2, 419c80 <outputs@@Base+0x10>
  419c7c:	ret
  419c80:	b	419b90 <output_start@@Base+0x280>
  419c84:	nop

0000000000419c88 <message@@Base>:
  419c88:	stp	x29, x30, [sp, #-304]!
  419c8c:	mov	x29, sp
  419c90:	str	x23, [sp, #48]
  419c94:	adrp	x23, 446000 <commands_started@@Base+0x1c8>
  419c98:	stp	x19, x20, [sp, #16]
  419c9c:	mov	x20, x2
  419ca0:	stp	x21, x22, [sp, #32]
  419ca4:	add	x22, x1, #0x1a
  419ca8:	mov	w21, w0
  419cac:	mov	x0, x2
  419cb0:	str	q0, [sp, #128]
  419cb4:	str	q1, [sp, #144]
  419cb8:	str	q2, [sp, #160]
  419cbc:	str	q3, [sp, #176]
  419cc0:	str	q4, [sp, #192]
  419cc4:	str	q5, [sp, #208]
  419cc8:	str	q6, [sp, #224]
  419ccc:	str	q7, [sp, #240]
  419cd0:	stp	x3, x4, [sp, #264]
  419cd4:	stp	x5, x6, [sp, #280]
  419cd8:	str	x7, [sp, #296]
  419cdc:	bl	406680 <strlen@plt>
  419ce0:	mov	x19, x0
  419ce4:	ldr	x0, [x23, #2000]
  419ce8:	bl	406680 <strlen@plt>
  419cec:	add	x0, x19, x0
  419cf0:	add	x0, x0, x22
  419cf4:	bl	419208 <child_access@@Base+0x160>
  419cf8:	mov	x19, x0
  419cfc:	cbz	w21, 419d28 <message@@Base+0xa0>
  419d00:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  419d04:	ldr	x2, [x23, #2000]
  419d08:	ldr	w3, [x1, #2016]
  419d0c:	cbz	w3, 419db8 <message@@Base+0x130>
  419d10:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  419d14:	add	x1, x1, #0x3c0
  419d18:	bl	406730 <sprintf@plt>
  419d1c:	mov	x0, x19
  419d20:	bl	406680 <strlen@plt>
  419d24:	add	x19, x19, x0
  419d28:	add	x0, sp, #0x130
  419d2c:	stp	x0, x0, [sp, #96]
  419d30:	mov	w3, #0xffffff80            	// #-128
  419d34:	add	x5, sp, #0x100
  419d38:	mov	w4, #0xffffffd8            	// #-40
  419d3c:	str	x5, [sp, #112]
  419d40:	mov	x1, x20
  419d44:	stp	w4, w3, [sp, #120]
  419d48:	add	x2, sp, #0x40
  419d4c:	ldp	x4, x5, [sp, #96]
  419d50:	stp	x4, x5, [sp, #64]
  419d54:	mov	x0, x19
  419d58:	ldp	x4, x5, [sp, #112]
  419d5c:	stp	x4, x5, [sp, #80]
  419d60:	bl	406c50 <vsprintf@plt>
  419d64:	mov	x0, x19
  419d68:	bl	406680 <strlen@plt>
  419d6c:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  419d70:	mov	w2, #0xa                   	// #10
  419d74:	strh	w2, [x19, x0]
  419d78:	ldr	x1, [x1, #3432]
  419d7c:	cbz	x1, 419d88 <message@@Base+0x100>
  419d80:	ldrb	w0, [x1]
  419d84:	cbnz	w0, 419d9c <message@@Base+0x114>
  419d88:	ldp	x19, x20, [sp, #16]
  419d8c:	ldp	x21, x22, [sp, #32]
  419d90:	ldr	x23, [sp, #48]
  419d94:	ldp	x29, x30, [sp], #304
  419d98:	ret
  419d9c:	mov	w0, #0x0                   	// #0
  419da0:	bl	419b90 <output_start@@Base+0x280>
  419da4:	ldp	x19, x20, [sp, #16]
  419da8:	ldp	x21, x22, [sp, #32]
  419dac:	ldr	x23, [sp, #48]
  419db0:	ldp	x29, x30, [sp], #304
  419db4:	ret
  419db8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  419dbc:	add	x1, x1, #0x3b8
  419dc0:	bl	406730 <sprintf@plt>
  419dc4:	b	419d1c <message@@Base+0x94>

0000000000419dc8 <error@@Base>:
  419dc8:	stp	x29, x30, [sp, #-304]!
  419dcc:	mov	x29, sp
  419dd0:	str	x23, [sp, #48]
  419dd4:	adrp	x23, 446000 <commands_started@@Base+0x1c8>
  419dd8:	stp	x19, x20, [sp, #16]
  419ddc:	mov	x20, x0
  419de0:	mov	x0, x2
  419de4:	stp	x21, x22, [sp, #32]
  419de8:	mov	x21, x2
  419dec:	add	x22, x1, #0x1a
  419df0:	str	q0, [sp, #128]
  419df4:	str	q1, [sp, #144]
  419df8:	str	q2, [sp, #160]
  419dfc:	str	q3, [sp, #176]
  419e00:	str	q4, [sp, #192]
  419e04:	str	q5, [sp, #208]
  419e08:	str	q6, [sp, #224]
  419e0c:	str	q7, [sp, #240]
  419e10:	stp	x3, x4, [sp, #264]
  419e14:	stp	x5, x6, [sp, #280]
  419e18:	str	x7, [sp, #296]
  419e1c:	bl	406680 <strlen@plt>
  419e20:	mov	x19, x0
  419e24:	ldr	x0, [x23, #2000]
  419e28:	bl	406680 <strlen@plt>
  419e2c:	add	x19, x19, x0
  419e30:	cbz	x20, 419ef4 <error@@Base+0x12c>
  419e34:	ldr	x0, [x20]
  419e38:	cbz	x0, 419e44 <error@@Base+0x7c>
  419e3c:	bl	406680 <strlen@plt>
  419e40:	add	x19, x19, x0
  419e44:	add	x0, x19, x22
  419e48:	bl	419208 <child_access@@Base+0x160>
  419e4c:	ldr	x2, [x20]
  419e50:	mov	x19, x0
  419e54:	cbz	x2, 419f00 <error@@Base+0x138>
  419e58:	ldp	x4, x3, [x20, #8]
  419e5c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  419e60:	add	x1, x1, #0x3d0
  419e64:	add	x3, x4, x3
  419e68:	bl	406730 <sprintf@plt>
  419e6c:	mov	x0, x19
  419e70:	bl	406680 <strlen@plt>
  419e74:	add	x6, sp, #0x130
  419e78:	stp	x6, x6, [sp, #96]
  419e7c:	mov	w3, #0xffffff80            	// #-128
  419e80:	add	x5, sp, #0x100
  419e84:	mov	w4, #0xffffffd8            	// #-40
  419e88:	str	x5, [sp, #112]
  419e8c:	mov	x1, x21
  419e90:	stp	w4, w3, [sp, #120]
  419e94:	add	x2, sp, #0x40
  419e98:	ldp	x4, x5, [sp, #96]
  419e9c:	stp	x4, x5, [sp, #64]
  419ea0:	add	x19, x19, x0
  419ea4:	ldp	x4, x5, [sp, #112]
  419ea8:	mov	x0, x19
  419eac:	stp	x4, x5, [sp, #80]
  419eb0:	bl	406c50 <vsprintf@plt>
  419eb4:	mov	x0, x19
  419eb8:	bl	406680 <strlen@plt>
  419ebc:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  419ec0:	mov	w2, #0xa                   	// #10
  419ec4:	strh	w2, [x19, x0]
  419ec8:	ldr	x1, [x1, #3432]
  419ecc:	cbz	x1, 419ee0 <error@@Base+0x118>
  419ed0:	ldrb	w0, [x1]
  419ed4:	cbz	w0, 419ee0 <error@@Base+0x118>
  419ed8:	mov	w0, #0x1                   	// #1
  419edc:	bl	419b90 <output_start@@Base+0x280>
  419ee0:	ldp	x19, x20, [sp, #16]
  419ee4:	ldp	x21, x22, [sp, #32]
  419ee8:	ldr	x23, [sp, #48]
  419eec:	ldp	x29, x30, [sp], #304
  419ef0:	ret
  419ef4:	add	x0, x19, x22
  419ef8:	bl	419208 <child_access@@Base+0x160>
  419efc:	mov	x19, x0
  419f00:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  419f04:	ldr	x2, [x23, #2000]
  419f08:	ldr	w3, [x0, #2016]
  419f0c:	cbnz	w3, 419f24 <error@@Base+0x15c>
  419f10:	mov	x0, x19
  419f14:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  419f18:	add	x1, x1, #0x3b8
  419f1c:	bl	406730 <sprintf@plt>
  419f20:	b	419e6c <error@@Base+0xa4>
  419f24:	mov	x0, x19
  419f28:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  419f2c:	add	x1, x1, #0x3c0
  419f30:	bl	406730 <sprintf@plt>
  419f34:	b	419e6c <error@@Base+0xa4>

0000000000419f38 <perror_with_name@@Base>:
  419f38:	stp	x29, x30, [sp, #-64]!
  419f3c:	mov	x29, sp
  419f40:	stp	x19, x20, [sp, #16]
  419f44:	mov	x20, x0
  419f48:	stp	x21, x22, [sp, #32]
  419f4c:	mov	x21, x1
  419f50:	stp	x23, x24, [sp, #48]
  419f54:	bl	406d70 <__errno_location@plt>
  419f58:	ldr	w0, [x0]
  419f5c:	bl	406a40 <strerror@plt>
  419f60:	mov	x22, x0
  419f64:	mov	x0, x20
  419f68:	bl	406680 <strlen@plt>
  419f6c:	mov	x19, x0
  419f70:	mov	x0, x21
  419f74:	bl	406680 <strlen@plt>
  419f78:	mov	x24, x0
  419f7c:	mov	x0, x22
  419f80:	bl	406680 <strlen@plt>
  419f84:	add	x19, x19, x24
  419f88:	mov	x23, x0
  419f8c:	mov	w2, #0x5                   	// #5
  419f90:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  419f94:	mov	x0, #0x0                   	// #0
  419f98:	add	x1, x1, #0x3e0
  419f9c:	bl	406cd0 <dcgettext@plt>
  419fa0:	mov	x2, x0
  419fa4:	add	x1, x19, x23
  419fa8:	mov	x5, x22
  419fac:	mov	x4, x21
  419fb0:	mov	x3, x20
  419fb4:	ldp	x19, x20, [sp, #16]
  419fb8:	mov	x0, #0x0                   	// #0
  419fbc:	ldp	x21, x22, [sp, #32]
  419fc0:	ldp	x23, x24, [sp, #48]
  419fc4:	ldp	x29, x30, [sp], #64
  419fc8:	b	419dc8 <error@@Base>
  419fcc:	nop
  419fd0:	stp	x29, x30, [sp, #-32]!
  419fd4:	mov	x29, sp
  419fd8:	stp	x19, x20, [sp, #16]
  419fdc:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  419fe0:	ldr	x0, [x20, #384]
  419fe4:	bl	406e00 <ferror@plt>
  419fe8:	mov	w19, w0
  419fec:	ldr	x0, [x20, #384]
  419ff0:	bl	406890 <fclose@plt>
  419ff4:	orr	w19, w19, w0
  419ff8:	cbnz	w19, 41a008 <perror_with_name@@Base+0xd0>
  419ffc:	ldp	x19, x20, [sp, #16]
  41a000:	ldp	x29, x30, [sp], #32
  41a004:	ret
  41a008:	cbz	w0, 41a034 <perror_with_name@@Base+0xfc>
  41a00c:	mov	w2, #0x5                   	// #5
  41a010:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a014:	mov	x0, #0x0                   	// #0
  41a018:	add	x1, x1, #0x3f0
  41a01c:	bl	406cd0 <dcgettext@plt>
  41a020:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a024:	add	x1, x1, #0x350
  41a028:	bl	419f38 <perror_with_name@@Base>
  41a02c:	mov	w0, #0x1                   	// #1
  41a030:	bl	4066a0 <exit@plt>
  41a034:	mov	w2, #0x5                   	// #5
  41a038:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a03c:	mov	x0, #0x0                   	// #0
  41a040:	add	x1, x1, #0x3f0
  41a044:	bl	406cd0 <dcgettext@plt>
  41a048:	mov	x2, x0
  41a04c:	mov	x1, #0x0                   	// #0
  41a050:	mov	x0, #0x0                   	// #0
  41a054:	bl	419dc8 <error@@Base>
  41a058:	b	41a02c <perror_with_name@@Base+0xf4>
  41a05c:	nop

000000000041a060 <fatal@@Base>:
  41a060:	stp	x29, x30, [sp, #-304]!
  41a064:	mov	x29, sp
  41a068:	stp	x19, x20, [sp, #16]
  41a06c:	mov	x20, x1
  41a070:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a074:	add	x1, x1, #0x408
  41a078:	stp	x21, x22, [sp, #32]
  41a07c:	mov	x22, x2
  41a080:	mov	w2, #0x5                   	// #5
  41a084:	stp	x23, x24, [sp, #48]
  41a088:	mov	x24, x0
  41a08c:	adrp	x23, 446000 <commands_started@@Base+0x1c8>
  41a090:	mov	x0, #0x0                   	// #0
  41a094:	str	q0, [sp, #128]
  41a098:	add	x20, x20, #0x1d
  41a09c:	str	q1, [sp, #144]
  41a0a0:	str	q2, [sp, #160]
  41a0a4:	str	q3, [sp, #176]
  41a0a8:	str	q4, [sp, #192]
  41a0ac:	str	q5, [sp, #208]
  41a0b0:	str	q6, [sp, #224]
  41a0b4:	str	q7, [sp, #240]
  41a0b8:	stp	x3, x4, [sp, #264]
  41a0bc:	stp	x5, x6, [sp, #280]
  41a0c0:	str	x7, [sp, #296]
  41a0c4:	bl	406cd0 <dcgettext@plt>
  41a0c8:	mov	x21, x0
  41a0cc:	mov	x0, x22
  41a0d0:	bl	406680 <strlen@plt>
  41a0d4:	mov	x19, x0
  41a0d8:	ldr	x0, [x23, #2000]
  41a0dc:	bl	406680 <strlen@plt>
  41a0e0:	add	x19, x19, x0
  41a0e4:	add	x19, x19, x20
  41a0e8:	cbz	x24, 41a1ac <fatal@@Base+0x14c>
  41a0ec:	ldr	x0, [x24]
  41a0f0:	mov	x20, #0x0                   	// #0
  41a0f4:	cbz	x0, 41a100 <fatal@@Base+0xa0>
  41a0f8:	bl	406680 <strlen@plt>
  41a0fc:	mov	x20, x0
  41a100:	mov	x0, x21
  41a104:	bl	406680 <strlen@plt>
  41a108:	add	x0, x20, x0
  41a10c:	add	x0, x0, x19
  41a110:	bl	419208 <child_access@@Base+0x160>
  41a114:	ldr	x2, [x24]
  41a118:	mov	x19, x0
  41a11c:	cbz	x2, 41a1c0 <fatal@@Base+0x160>
  41a120:	ldp	x4, x3, [x24, #8]
  41a124:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a128:	add	x1, x1, #0x418
  41a12c:	add	x3, x4, x3
  41a130:	bl	406730 <sprintf@plt>
  41a134:	mov	x0, x19
  41a138:	bl	406680 <strlen@plt>
  41a13c:	add	x5, sp, #0x130
  41a140:	stp	x5, x5, [sp, #96]
  41a144:	mov	w3, #0xffffff80            	// #-128
  41a148:	add	x1, sp, #0x100
  41a14c:	mov	w4, #0xffffffd8            	// #-40
  41a150:	str	x1, [sp, #112]
  41a154:	add	x2, sp, #0x40
  41a158:	stp	w4, w3, [sp, #120]
  41a15c:	add	x19, x19, x0
  41a160:	ldp	x4, x5, [sp, #96]
  41a164:	stp	x4, x5, [sp, #64]
  41a168:	mov	x1, x22
  41a16c:	ldp	x4, x5, [sp, #112]
  41a170:	mov	x0, x19
  41a174:	stp	x4, x5, [sp, #80]
  41a178:	bl	406c50 <vsprintf@plt>
  41a17c:	mov	x1, x21
  41a180:	mov	x0, x19
  41a184:	bl	406960 <strcat@plt>
  41a188:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41a18c:	ldr	x1, [x0, #3432]
  41a190:	cbz	x1, 41a1a4 <fatal@@Base+0x144>
  41a194:	ldrb	w0, [x1]
  41a198:	cbz	w0, 41a1a4 <fatal@@Base+0x144>
  41a19c:	mov	w0, #0x1                   	// #1
  41a1a0:	bl	419b90 <output_start@@Base+0x280>
  41a1a4:	mov	w0, #0x2                   	// #2
  41a1a8:	bl	417a70 <die@@Base>
  41a1ac:	mov	x0, x21
  41a1b0:	bl	406680 <strlen@plt>
  41a1b4:	add	x0, x0, x19
  41a1b8:	bl	419208 <child_access@@Base+0x160>
  41a1bc:	mov	x19, x0
  41a1c0:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  41a1c4:	ldr	x2, [x23, #2000]
  41a1c8:	ldr	w3, [x0, #2016]
  41a1cc:	cbnz	w3, 41a1e4 <fatal@@Base+0x184>
  41a1d0:	mov	x0, x19
  41a1d4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a1d8:	add	x1, x1, #0x428
  41a1dc:	bl	406730 <sprintf@plt>
  41a1e0:	b	41a134 <fatal@@Base+0xd4>
  41a1e4:	mov	x0, x19
  41a1e8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a1ec:	add	x1, x1, #0x438
  41a1f0:	bl	406730 <sprintf@plt>
  41a1f4:	b	41a134 <fatal@@Base+0xd4>

000000000041a1f8 <out_of_memory@@Base>:
  41a1f8:	stp	x29, x30, [sp, #-48]!
  41a1fc:	mov	x29, sp
  41a200:	stp	x19, x20, [sp, #16]
  41a204:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  41a208:	ldr	x0, [x20, #384]
  41a20c:	str	x21, [sp, #32]
  41a210:	bl	406850 <fileno@plt>
  41a214:	mov	w19, w0
  41a218:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  41a21c:	ldr	x21, [x1, #2000]
  41a220:	mov	x0, x21
  41a224:	bl	406680 <strlen@plt>
  41a228:	mov	x1, x21
  41a22c:	mov	x2, x0
  41a230:	mov	w0, w19
  41a234:	bl	418da0 <writebuf@@Base>
  41a238:	ldr	x0, [x20, #384]
  41a23c:	bl	406850 <fileno@plt>
  41a240:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a244:	add	x1, x1, #0x448
  41a248:	mov	x2, #0x1f                  	// #31
  41a24c:	bl	418da0 <writebuf@@Base>
  41a250:	mov	w0, #0x2                   	// #2
  41a254:	bl	4066a0 <exit@plt>
  41a258:	ldrb	w3, [x0]
  41a25c:	adrp	x4, 443000 <expanding_var@@Base+0x338>
  41a260:	add	x4, x4, #0x448
  41a264:	mov	x5, x0
  41a268:	ldrh	w0, [x4, w3, sxtw #1]
  41a26c:	tbz	w0, #1, 41a27c <out_of_memory@@Base+0x84>
  41a270:	ldrb	w3, [x5, #1]!
  41a274:	ldrh	w0, [x4, w3, sxtw #1]
  41a278:	tbnz	w0, #1, 41a270 <out_of_memory@@Base+0x78>
  41a27c:	cmp	w3, #0x3a
  41a280:	add	x8, x5, #0x1
  41a284:	b.eq	41a448 <out_of_memory@@Base+0x250>  // b.none
  41a288:	b.hi	41a328 <out_of_memory@@Base+0x130>  // b.pmore
  41a28c:	cmp	w3, #0x26
  41a290:	b.eq	41a488 <out_of_memory@@Base+0x290>  // b.none
  41a294:	b.ls	41a354 <out_of_memory@@Base+0x15c>  // b.plast
  41a298:	cmp	w3, #0x2b
  41a29c:	b.ne	41a2b0 <out_of_memory@@Base+0xb8>  // b.any
  41a2a0:	ldrb	w0, [x5, #1]
  41a2a4:	cmp	w0, #0x3d
  41a2a8:	b.eq	41a43c <out_of_memory@@Base+0x244>  // b.none
  41a2ac:	nop
  41a2b0:	mov	x6, #0xb                   	// #11
  41a2b4:	cmp	w3, #0x26
  41a2b8:	mov	w0, #0x2                   	// #2
  41a2bc:	mov	x7, #0x1                   	// #1
  41a2c0:	movk	x6, #0x4, lsl #32
  41a2c4:	b.eq	41a310 <out_of_memory@@Base+0x118>  // b.none
  41a2c8:	b.ls	41a3ac <out_of_memory@@Base+0x1b4>  // b.plast
  41a2cc:	cmp	w3, #0x3f
  41a2d0:	b.eq	41a398 <out_of_memory@@Base+0x1a0>  // b.none
  41a2d4:	b.ls	41a36c <out_of_memory@@Base+0x174>  // b.plast
  41a2d8:	cmp	w3, #0x5c
  41a2dc:	b.ne	41a408 <out_of_memory@@Base+0x210>  // b.any
  41a2e0:	mov	x9, x8
  41a2e4:	ldrb	w3, [x9], #1
  41a2e8:	sub	w4, w3, #0x3a
  41a2ec:	and	w4, w4, #0xff
  41a2f0:	cmp	w4, #0x22
  41a2f4:	b.hi	41a304 <out_of_memory@@Base+0x10c>  // b.pmore
  41a2f8:	lsl	x4, x7, x4
  41a2fc:	tst	x4, x6
  41a300:	b.ne	41a42c <out_of_memory@@Base+0x234>  // b.any
  41a304:	mov	x8, x9
  41a308:	cmp	w3, #0x26
  41a30c:	b.ne	41a2c8 <out_of_memory@@Base+0xd0>  // b.any
  41a310:	ldrb	w3, [x8]
  41a314:	cmp	w3, #0x3a
  41a318:	b.eq	41a37c <out_of_memory@@Base+0x184>  // b.none
  41a31c:	add	x9, x8, #0x1
  41a320:	mov	x8, x9
  41a324:	b	41a308 <out_of_memory@@Base+0x110>
  41a328:	cmp	w3, #0x3d
  41a32c:	b.eq	41a418 <out_of_memory@@Base+0x220>  // b.none
  41a330:	cmp	w3, #0x3f
  41a334:	b.eq	41a2a0 <out_of_memory@@Base+0xa8>  // b.none
  41a338:	cmp	w3, #0x3b
  41a33c:	b.ne	41a2b0 <out_of_memory@@Base+0xb8>  // b.any
  41a340:	mov	x4, #0x1                   	// #1
  41a344:	mov	w0, #0x6                   	// #6
  41a348:	str	x5, [x1]
  41a34c:	str	x4, [x2]
  41a350:	ret
  41a354:	mov	x4, #0x1                   	// #1
  41a358:	mov	w0, w4
  41a35c:	cbz	w3, 41a348 <out_of_memory@@Base+0x150>
  41a360:	cmp	w3, #0x21
  41a364:	b.eq	41a2a0 <out_of_memory@@Base+0xa8>  // b.none
  41a368:	b	41a2b0 <out_of_memory@@Base+0xb8>
  41a36c:	cmp	w3, #0x3a
  41a370:	b.eq	41a37c <out_of_memory@@Base+0x184>  // b.none
  41a374:	cmp	w3, #0x3d
  41a378:	b.ne	41a390 <out_of_memory@@Base+0x198>  // b.any
  41a37c:	sub	x8, x8, #0x1
  41a380:	str	x5, [x1]
  41a384:	sub	x4, x8, x5
  41a388:	str	x4, [x2]
  41a38c:	ret
  41a390:	cmp	w3, #0x2b
  41a394:	b.ne	41a408 <out_of_memory@@Base+0x210>  // b.any
  41a398:	ldrb	w3, [x8]
  41a39c:	cmp	w3, #0x3d
  41a3a0:	b.eq	41a37c <out_of_memory@@Base+0x184>  // b.none
  41a3a4:	add	x9, x8, #0x1
  41a3a8:	b	41a320 <out_of_memory@@Base+0x128>
  41a3ac:	cmp	w3, #0x20
  41a3b0:	b.eq	41a37c <out_of_memory@@Base+0x184>  // b.none
  41a3b4:	cmp	w3, #0x20
  41a3b8:	b.ls	41a3fc <out_of_memory@@Base+0x204>  // b.plast
  41a3bc:	cmp	w3, #0x24
  41a3c0:	b.ne	41a408 <out_of_memory@@Base+0x210>  // b.any
  41a3c4:	mov	x4, x8
  41a3c8:	ldrb	w10, [x4], #1
  41a3cc:	cmp	w10, #0x24
  41a3d0:	b.eq	41a42c <out_of_memory@@Base+0x234>  // b.none
  41a3d4:	cbz	w10, 41a380 <out_of_memory@@Base+0x188>
  41a3d8:	cmp	w10, #0x28
  41a3dc:	add	x9, x8, #0x2
  41a3e0:	b.eq	41a4b8 <out_of_memory@@Base+0x2c0>  // b.none
  41a3e4:	cmp	w10, #0x7b
  41a3e8:	b.eq	41a524 <out_of_memory@@Base+0x32c>  // b.none
  41a3ec:	ldrb	w3, [x8, #1]
  41a3f0:	mov	w0, #0x3                   	// #3
  41a3f4:	mov	x8, x9
  41a3f8:	b	41a308 <out_of_memory@@Base+0x110>
  41a3fc:	cbz	w3, 41a37c <out_of_memory@@Base+0x184>
  41a400:	cmp	w3, #0x9
  41a404:	b.eq	41a37c <out_of_memory@@Base+0x184>  // b.none
  41a408:	mov	x9, x8
  41a40c:	ldrb	w3, [x9], #1
  41a410:	mov	x8, x9
  41a414:	b	41a308 <out_of_memory@@Base+0x110>
  41a418:	str	x5, [x1]
  41a41c:	mov	x4, #0x1                   	// #1
  41a420:	mov	w0, #0x7                   	// #7
  41a424:	str	x4, [x2]
  41a428:	ret
  41a42c:	add	x9, x8, #0x2
  41a430:	ldrb	w3, [x8, #1]
  41a434:	mov	x8, x9
  41a438:	b	41a308 <out_of_memory@@Base+0x110>
  41a43c:	mov	x4, #0x2                   	// #2
  41a440:	mov	w0, #0x7                   	// #7
  41a444:	b	41a348 <out_of_memory@@Base+0x150>
  41a448:	ldrb	w0, [x5, #1]
  41a44c:	cmp	w0, #0x3d
  41a450:	b.eq	41a43c <out_of_memory@@Base+0x244>  // b.none
  41a454:	cmp	w0, #0x3a
  41a458:	mov	x4, #0x1                   	// #1
  41a45c:	mov	w0, #0x4                   	// #4
  41a460:	b.ne	41a348 <out_of_memory@@Base+0x150>  // b.any
  41a464:	ldrb	w3, [x5, #3]
  41a468:	mov	x4, #0x3                   	// #3
  41a46c:	mov	x7, #0x2                   	// #2
  41a470:	mov	w0, #0x7                   	// #7
  41a474:	cmp	w3, #0x3d
  41a478:	mov	w6, #0x5                   	// #5
  41a47c:	csel	x4, x4, x7, eq  // eq = none
  41a480:	csel	w0, w0, w6, eq  // eq = none
  41a484:	b	41a348 <out_of_memory@@Base+0x150>
  41a488:	ldrb	w0, [x5, #1]
  41a48c:	cmp	w0, #0x3a
  41a490:	b.ne	41a2b0 <out_of_memory@@Base+0xb8>  // b.any
  41a494:	ldrb	w3, [x5, #2]
  41a498:	mov	x4, #0x3                   	// #3
  41a49c:	mov	x7, #0x2                   	// #2
  41a4a0:	mov	w0, #0x9                   	// #9
  41a4a4:	cmp	w3, #0x3a
  41a4a8:	mov	w6, #0x8                   	// #8
  41a4ac:	csel	x4, x4, x7, eq  // eq = none
  41a4b0:	csel	w0, w0, w6, eq  // eq = none
  41a4b4:	b	41a348 <out_of_memory@@Base+0x150>
  41a4b8:	mov	w11, #0x29                  	// #41
  41a4bc:	ldrb	w3, [x8, #1]
  41a4c0:	mov	w0, #0x3                   	// #3
  41a4c4:	cbz	w3, 41a52c <out_of_memory@@Base+0x334>
  41a4c8:	mov	w8, #0x0                   	// #0
  41a4cc:	b	41a4e8 <out_of_memory@@Base+0x2f0>
  41a4d0:	cmp	w3, w11
  41a4d4:	b.eq	41a4f8 <out_of_memory@@Base+0x300>  // b.none
  41a4d8:	ldrb	w3, [x4, #1]
  41a4dc:	add	x0, x4, #0x1
  41a4e0:	cbz	w3, 41a518 <out_of_memory@@Base+0x320>
  41a4e4:	mov	x4, x0
  41a4e8:	cmp	w3, w10
  41a4ec:	b.ne	41a4d0 <out_of_memory@@Base+0x2d8>  // b.any
  41a4f0:	add	w8, w8, #0x1
  41a4f4:	b	41a4d8 <out_of_memory@@Base+0x2e0>
  41a4f8:	sub	w8, w8, #0x1
  41a4fc:	cmn	w8, #0x1
  41a500:	b.ne	41a4d8 <out_of_memory@@Base+0x2e0>  // b.any
  41a504:	add	x9, x4, #0x2
  41a508:	ldrb	w3, [x4, #1]
  41a50c:	mov	x8, x9
  41a510:	mov	w0, #0x3                   	// #3
  41a514:	b	41a308 <out_of_memory@@Base+0x110>
  41a518:	add	x8, x4, #0x2
  41a51c:	mov	w0, #0x3                   	// #3
  41a520:	b	41a3b4 <out_of_memory@@Base+0x1bc>
  41a524:	mov	w11, #0x7d                  	// #125
  41a528:	b	41a4bc <out_of_memory@@Base+0x2c4>
  41a52c:	mov	x8, x9
  41a530:	sub	x8, x8, #0x1
  41a534:	b	41a380 <out_of_memory@@Base+0x188>
  41a538:	stp	x29, x30, [sp, #-48]!
  41a53c:	mov	x29, sp
  41a540:	stp	x19, x20, [sp, #16]
  41a544:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  41a548:	mov	x19, x0
  41a54c:	str	x21, [sp, #32]
  41a550:	ldr	x21, [x20, #176]
  41a554:	ldr	x0, [x21, #8]
  41a558:	bl	406b90 <free@plt>
  41a55c:	ldr	x0, [x21, #16]
  41a560:	bl	406b90 <free@plt>
  41a564:	str	x19, [x20, #176]
  41a568:	ldp	x19, x20, [sp, #16]
  41a56c:	ldr	x21, [sp, #32]
  41a570:	ldp	x29, x30, [sp], #48
  41a574:	ret
  41a578:	stp	x29, x30, [sp, #-96]!
  41a57c:	cmp	x1, #0x5
  41a580:	mov	x29, sp
  41a584:	stp	x19, x20, [sp, #16]
  41a588:	mov	x20, x1
  41a58c:	mov	x19, x0
  41a590:	stp	x21, x22, [sp, #32]
  41a594:	mov	x22, x2
  41a598:	stp	x23, x24, [sp, #48]
  41a59c:	stp	x25, x26, [sp, #64]
  41a5a0:	str	x27, [sp, #80]
  41a5a4:	b.eq	41a6ec <out_of_memory@@Base+0x4f4>  // b.none
  41a5a8:	cmp	x1, #0x6
  41a5ac:	b.eq	41a6ac <out_of_memory@@Base+0x4b4>  // b.none
  41a5b0:	cmp	x1, #0x4
  41a5b4:	b.ne	41a6c8 <out_of_memory@@Base+0x4d0>  // b.any
  41a5b8:	adrp	x23, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a5bc:	add	x23, x23, #0x478
  41a5c0:	mov	x2, x1
  41a5c4:	mov	x0, x23
  41a5c8:	mov	x1, x19
  41a5cc:	bl	406930 <strncmp@plt>
  41a5d0:	cbz	w0, 41a800 <out_of_memory@@Base+0x608>
  41a5d4:	adrp	x23, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a5d8:	add	x23, x23, #0x468
  41a5dc:	mov	x0, x23
  41a5e0:	mov	x2, x20
  41a5e4:	mov	x1, x19
  41a5e8:	bl	406930 <strncmp@plt>
  41a5ec:	cbnz	w0, 41a6c8 <out_of_memory@@Base+0x4d0>
  41a5f0:	ldrb	w0, [x19, #4]
  41a5f4:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  41a5f8:	add	x21, x21, #0x448
  41a5fc:	mov	w25, w20
  41a600:	add	x19, x19, #0x4
  41a604:	ldrh	w0, [x21, x0, lsl #1]
  41a608:	tst	w0, #0x6
  41a60c:	b.ne	41a748 <out_of_memory@@Base+0x550>  // b.any
  41a610:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  41a614:	ldr	x24, [x20, #176]
  41a618:	ldr	w26, [x24]
  41a61c:	cbz	w26, 41adb0 <out_of_memory@@Base+0xbb8>
  41a620:	ldr	x0, [x24, #16]
  41a624:	sub	w25, w26, #0x1
  41a628:	ldrb	w0, [x0, w25, uxtw]
  41a62c:	cbnz	w0, 41ade4 <out_of_memory@@Base+0xbec>
  41a630:	ldr	x1, [x24, #8]
  41a634:	ldrb	w0, [x1, w25, uxtw]
  41a638:	cbz	w0, 41ac34 <out_of_memory@@Base+0xa3c>
  41a63c:	cmp	w0, #0x1
  41a640:	b.ne	41a648 <out_of_memory@@Base+0x450>  // b.any
  41a644:	strb	wzr, [x1, w25, uxtw]
  41a648:	ldrb	w0, [x19]
  41a64c:	cbnz	w0, 41aa9c <out_of_memory@@Base+0x8a4>
  41a650:	ldr	x0, [x24, #16]
  41a654:	mov	w1, #0x1                   	// #1
  41a658:	strb	w1, [x0, w25, uxtw]
  41a65c:	ldr	w2, [x24]
  41a660:	cbz	w2, 41a808 <out_of_memory@@Base+0x610>
  41a664:	ldr	x0, [x24, #8]
  41a668:	sub	w2, w2, #0x1
  41a66c:	add	x2, x2, x0
  41a670:	b	41a680 <out_of_memory@@Base+0x488>
  41a674:	cmp	x2, x0
  41a678:	add	x0, x0, #0x1
  41a67c:	b.eq	41a808 <out_of_memory@@Base+0x610>  // b.none
  41a680:	ldrb	w1, [x0]
  41a684:	cbz	w1, 41a674 <out_of_memory@@Base+0x47c>
  41a688:	mov	sp, x29
  41a68c:	mov	w0, #0x1                   	// #1
  41a690:	ldp	x19, x20, [sp, #16]
  41a694:	ldp	x21, x22, [sp, #32]
  41a698:	ldp	x23, x24, [sp, #48]
  41a69c:	ldp	x25, x26, [sp, #64]
  41a6a0:	ldr	x27, [sp, #80]
  41a6a4:	ldp	x29, x30, [sp], #96
  41a6a8:	ret
  41a6ac:	adrp	x23, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a6b0:	add	x23, x23, #0x480
  41a6b4:	mov	x2, x1
  41a6b8:	mov	x0, x23
  41a6bc:	mov	x1, x19
  41a6c0:	bl	406930 <strncmp@plt>
  41a6c4:	cbz	w0, 41a7f8 <out_of_memory@@Base+0x600>
  41a6c8:	mov	w0, #0xfffffffe            	// #-2
  41a6cc:	mov	sp, x29
  41a6d0:	ldp	x19, x20, [sp, #16]
  41a6d4:	ldp	x21, x22, [sp, #32]
  41a6d8:	ldp	x23, x24, [sp, #48]
  41a6dc:	ldp	x25, x26, [sp, #64]
  41a6e0:	ldr	x27, [sp, #80]
  41a6e4:	ldp	x29, x30, [sp], #96
  41a6e8:	ret
  41a6ec:	adrp	x23, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a6f0:	add	x23, x23, #0x488
  41a6f4:	mov	x2, x1
  41a6f8:	mov	x0, x23
  41a6fc:	mov	x1, x19
  41a700:	bl	406930 <strncmp@plt>
  41a704:	cbz	w0, 41a7f0 <out_of_memory@@Base+0x5f8>
  41a708:	adrp	x23, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a70c:	add	x23, x23, #0x490
  41a710:	mov	x0, x23
  41a714:	mov	x2, x20
  41a718:	mov	x1, x19
  41a71c:	bl	406930 <strncmp@plt>
  41a720:	cbnz	w0, 41a82c <out_of_memory@@Base+0x634>
  41a724:	mov	w25, #0x3                   	// #3
  41a728:	ldrb	w0, [x19, x20]
  41a72c:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  41a730:	add	x21, x21, #0x448
  41a734:	add	x19, x19, x20
  41a738:	ldrh	w0, [x21, x0, lsl #1]
  41a73c:	tst	w0, #0x6
  41a740:	b.eq	41a768 <out_of_memory@@Base+0x570>  // b.none
  41a744:	nop
  41a748:	ldrb	w4, [x19, #1]!
  41a74c:	ldrh	w1, [x21, w4, sxtw #1]
  41a750:	tst	w1, #0x6
  41a754:	b.ne	41a748 <out_of_memory@@Base+0x550>  // b.any
  41a758:	cmp	w25, #0x5
  41a75c:	b.eq	41a868 <out_of_memory@@Base+0x670>  // b.none
  41a760:	cmp	w25, #0x4
  41a764:	b.eq	41a610 <out_of_memory@@Base+0x418>  // b.none
  41a768:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  41a76c:	ldr	x24, [x20, #176]
  41a770:	ldr	w1, [x24, #4]
  41a774:	cbz	w1, 41a9f4 <out_of_memory@@Base+0x7fc>
  41a778:	ldr	w26, [x24]
  41a77c:	add	w0, w26, #0x1
  41a780:	str	w0, [x24]
  41a784:	cmp	w0, w1
  41a788:	b.hi	41aa34 <out_of_memory@@Base+0x83c>  // b.pmore
  41a78c:	ldr	x0, [x24, #16]
  41a790:	strb	wzr, [x0, w26, uxtw]
  41a794:	cbz	w26, 41a888 <out_of_memory@@Base+0x690>
  41a798:	ldr	x2, [x24, #8]
  41a79c:	sub	w0, w26, #0x1
  41a7a0:	add	x0, x0, #0x1
  41a7a4:	add	x0, x0, x2
  41a7a8:	mov	x1, x2
  41a7ac:	b	41a7bc <out_of_memory@@Base+0x5c4>
  41a7b0:	add	x1, x1, #0x1
  41a7b4:	cmp	x0, x1
  41a7b8:	b.eq	41a888 <out_of_memory@@Base+0x690>  // b.none
  41a7bc:	ldrb	w4, [x1]
  41a7c0:	cbz	w4, 41a7b0 <out_of_memory@@Base+0x5b8>
  41a7c4:	mov	w1, #0x1                   	// #1
  41a7c8:	strb	w1, [x2, w26, uxtw]
  41a7cc:	mov	w0, #0x1                   	// #1
  41a7d0:	mov	sp, x29
  41a7d4:	ldp	x19, x20, [sp, #16]
  41a7d8:	ldp	x21, x22, [sp, #32]
  41a7dc:	ldp	x23, x24, [sp, #48]
  41a7e0:	ldp	x25, x26, [sp, #64]
  41a7e4:	ldr	x27, [sp, #80]
  41a7e8:	ldp	x29, x30, [sp], #96
  41a7ec:	ret
  41a7f0:	mov	w25, #0x0                   	// #0
  41a7f4:	b	41a728 <out_of_memory@@Base+0x530>
  41a7f8:	mov	w25, #0x1                   	// #1
  41a7fc:	b	41a728 <out_of_memory@@Base+0x530>
  41a800:	mov	w25, #0x2                   	// #2
  41a804:	b	41a728 <out_of_memory@@Base+0x530>
  41a808:	mov	sp, x29
  41a80c:	mov	w0, #0x0                   	// #0
  41a810:	ldp	x19, x20, [sp, #16]
  41a814:	ldp	x21, x22, [sp, #32]
  41a818:	ldp	x23, x24, [sp, #48]
  41a81c:	ldp	x25, x26, [sp, #64]
  41a820:	ldr	x27, [sp, #80]
  41a824:	ldp	x29, x30, [sp], #96
  41a828:	ret
  41a82c:	adrp	x23, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41a830:	add	x23, x23, #0x470
  41a834:	mov	x0, x23
  41a838:	mov	x2, x20
  41a83c:	mov	x1, x19
  41a840:	bl	406930 <strncmp@plt>
  41a844:	cbnz	w0, 41a6c8 <out_of_memory@@Base+0x4d0>
  41a848:	ldrb	w4, [x19, #5]
  41a84c:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  41a850:	add	x21, x21, #0x448
  41a854:	mov	w25, w20
  41a858:	add	x19, x19, #0x5
  41a85c:	ldrh	w0, [x21, w4, sxtw #1]
  41a860:	tst	w0, #0x6
  41a864:	b.ne	41a748 <out_of_memory@@Base+0x550>  // b.any
  41a868:	cbnz	w4, 41aa64 <out_of_memory@@Base+0x86c>
  41a86c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41a870:	ldr	x24, [x0, #176]
  41a874:	ldr	w1, [x24]
  41a878:	cbz	w1, 41adb0 <out_of_memory@@Base+0xbb8>
  41a87c:	sub	w2, w1, #0x1
  41a880:	str	w2, [x24]
  41a884:	b	41a660 <out_of_memory@@Base+0x468>
  41a888:	cmp	w25, #0x1
  41a88c:	b.ls	41ac40 <out_of_memory@@Base+0xa48>  // b.plast
  41a890:	ldrb	w2, [x19]
  41a894:	cmp	w2, #0x28
  41a898:	b.eq	41ada0 <out_of_memory@@Base+0xba8>  // b.none
  41a89c:	cmp	w2, #0x2c
  41a8a0:	mov	w0, #0x22                  	// #34
  41a8a4:	ccmp	w2, w0, #0x4, ne  // ne = any
  41a8a8:	b.eq	41ab70 <out_of_memory@@Base+0x978>  // b.none
  41a8ac:	add	x0, x19, #0x1
  41a8b0:	cmp	w2, #0x27
  41a8b4:	b.ne	41ac2c <out_of_memory@@Base+0xa34>  // b.any
  41a8b8:	ldrb	w1, [x0]
  41a8bc:	mov	x19, x0
  41a8c0:	cmp	w1, #0x0
  41a8c4:	ccmp	w1, w2, #0x4, ne  // ne = any
  41a8c8:	b.eq	41a8e0 <out_of_memory@@Base+0x6e8>  // b.none
  41a8cc:	nop
  41a8d0:	ldrb	w1, [x19, #1]!
  41a8d4:	cmp	w1, #0x0
  41a8d8:	ccmp	w1, w2, #0x4, ne  // ne = any
  41a8dc:	b.ne	41a8d0 <out_of_memory@@Base+0x6d8>  // b.any
  41a8e0:	cbz	w1, 41ac2c <out_of_memory@@Base+0xa34>
  41a8e4:	mov	x24, x19
  41a8e8:	strb	wzr, [x24], #1
  41a8ec:	bl	40c1b8 <variable_expand@@Base>
  41a8f0:	mov	x27, x0
  41a8f4:	bl	406680 <strlen@plt>
  41a8f8:	add	x3, x0, #0x10
  41a8fc:	and	x3, x3, #0xfffffffffffffff0
  41a900:	mov	x1, x27
  41a904:	sub	sp, sp, x3
  41a908:	add	x2, x0, #0x1
  41a90c:	mov	x27, sp
  41a910:	mov	x0, x27
  41a914:	bl	406640 <memcpy@plt>
  41a918:	ldrb	w2, [x19, #1]
  41a91c:	ldrh	w0, [x21, w2, sxtw #1]
  41a920:	tst	w0, #0x6
  41a924:	b.eq	41a938 <out_of_memory@@Base+0x740>  // b.none
  41a928:	ldrb	w2, [x24, #1]!
  41a92c:	ldrh	w0, [x21, w2, sxtw #1]
  41a930:	tst	w0, #0x6
  41a934:	b.ne	41a928 <out_of_memory@@Base+0x730>  // b.any
  41a938:	cmp	w2, #0x29
  41a93c:	mov	w0, #0x22                  	// #34
  41a940:	ccmp	w2, w0, #0x4, ne  // ne = any
  41a944:	b.eq	41abc4 <out_of_memory@@Base+0x9cc>  // b.none
  41a948:	cmp	w2, #0x27
  41a94c:	b.ne	41ac2c <out_of_memory@@Base+0xa34>  // b.any
  41a950:	ldrb	w0, [x24, #1]
  41a954:	add	x24, x24, #0x1
  41a958:	mov	x1, x24
  41a95c:	cmp	w0, #0x0
  41a960:	ccmp	w0, w2, #0x4, ne  // ne = any
  41a964:	b.eq	41a978 <out_of_memory@@Base+0x780>  // b.none
  41a968:	ldrb	w0, [x1, #1]!
  41a96c:	cmp	w0, #0x0
  41a970:	ccmp	w0, w2, #0x4, ne  // ne = any
  41a974:	b.ne	41a968 <out_of_memory@@Base+0x770>  // b.any
  41a978:	cbz	w0, 41ac2c <out_of_memory@@Base+0xa34>
  41a97c:	mov	x2, x1
  41a980:	strb	wzr, [x2], #1
  41a984:	ldrb	w0, [x1, #1]
  41a988:	ldrh	w1, [x21, w0, sxtw #1]
  41a98c:	tst	w1, #0x6
  41a990:	b.eq	41a9a8 <out_of_memory@@Base+0x7b0>  // b.none
  41a994:	nop
  41a998:	ldrb	w0, [x2, #1]!
  41a99c:	ldrh	w1, [x21, w0, sxtw #1]
  41a9a0:	tst	w1, #0x6
  41a9a4:	b.ne	41a998 <out_of_memory@@Base+0x7a0>  // b.any
  41a9a8:	cbnz	w0, 41acf4 <out_of_memory@@Base+0xafc>
  41a9ac:	mov	x0, x24
  41a9b0:	bl	40c1b8 <variable_expand@@Base>
  41a9b4:	mov	w1, #0x1                   	// #1
  41a9b8:	cmp	x0, x27
  41a9bc:	b.eq	41a9d4 <out_of_memory@@Base+0x7dc>  // b.none
  41a9c0:	ldrb	w3, [x27]
  41a9c4:	mov	w1, #0x0                   	// #0
  41a9c8:	ldrb	w2, [x0]
  41a9cc:	cmp	w2, w3
  41a9d0:	b.eq	41ad64 <out_of_memory@@Base+0xb6c>  // b.none
  41a9d4:	ldr	x24, [x20, #176]
  41a9d8:	cmp	w25, #0x3
  41a9dc:	cset	w0, ne  // ne = any
  41a9e0:	eor	w0, w0, w1
  41a9e4:	ldr	x1, [x24, #8]
  41a9e8:	strb	w0, [x1, w26, uxtw]
  41a9ec:	ldr	w2, [x24]
  41a9f0:	b	41a660 <out_of_memory@@Base+0x468>
  41a9f4:	mov	w0, #0x5                   	// #5
  41a9f8:	str	w0, [x24, #4]
  41a9fc:	mov	x0, #0x5                   	// #5
  41aa00:	bl	418a50 <xmalloc@@Base>
  41aa04:	str	x0, [x24, #8]
  41aa08:	ldr	x26, [x20, #176]
  41aa0c:	ldr	w0, [x26, #4]
  41aa10:	bl	418a50 <xmalloc@@Base>
  41aa14:	ldr	x24, [x20, #176]
  41aa18:	ldr	w1, [x24, #4]
  41aa1c:	str	x0, [x26, #16]
  41aa20:	ldr	w26, [x24]
  41aa24:	add	w0, w26, #0x1
  41aa28:	str	w0, [x24]
  41aa2c:	cmp	w0, w1
  41aa30:	b.ls	41a78c <out_of_memory@@Base+0x594>  // b.plast
  41aa34:	ldr	x0, [x24, #8]
  41aa38:	add	w1, w1, #0x5
  41aa3c:	str	w1, [x24, #4]
  41aa40:	bl	418aa0 <xrealloc@@Base>
  41aa44:	ldr	x27, [x20, #176]
  41aa48:	ldr	w1, [x27, #4]
  41aa4c:	str	x0, [x24, #8]
  41aa50:	ldr	x0, [x27, #16]
  41aa54:	bl	418aa0 <xrealloc@@Base>
  41aa58:	str	x0, [x27, #16]
  41aa5c:	ldr	x24, [x20, #176]
  41aa60:	b	41a78c <out_of_memory@@Base+0x594>
  41aa64:	mov	x0, x23
  41aa68:	bl	406680 <strlen@plt>
  41aa6c:	mov	w2, #0x5                   	// #5
  41aa70:	mov	x19, x0
  41aa74:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41aa78:	mov	x0, #0x0                   	// #0
  41aa7c:	add	x1, x1, #0x498
  41aa80:	bl	406cd0 <dcgettext@plt>
  41aa84:	mov	x3, x23
  41aa88:	mov	x2, x0
  41aa8c:	mov	x1, x19
  41aa90:	mov	x0, x22
  41aa94:	bl	419dc8 <error@@Base>
  41aa98:	b	41a86c <out_of_memory@@Base+0x674>
  41aa9c:	ldrb	w1, [x19, #1]
  41aaa0:	add	x0, x19, #0x1
  41aaa4:	ldrh	w1, [x21, x1, lsl #1]
  41aaa8:	tst	x1, #0x7
  41aaac:	b.ne	41ab2c <out_of_memory@@Base+0x934>  // b.any
  41aab0:	ldrb	w1, [x0, #1]!
  41aab4:	ldrh	w1, [x21, x1, lsl #1]
  41aab8:	tst	x1, #0x7
  41aabc:	b.eq	41aab0 <out_of_memory@@Base+0x8b8>  // b.none
  41aac0:	sub	x21, x0, x19
  41aac4:	cmp	x21, #0x4
  41aac8:	b.eq	41ad84 <out_of_memory@@Base+0xb8c>  // b.none
  41aacc:	cmp	x21, #0x5
  41aad0:	b.ne	41ab30 <out_of_memory@@Base+0x938>  // b.any
  41aad4:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41aad8:	mov	x2, x21
  41aadc:	add	x0, x0, #0x470
  41aae0:	mov	x1, x19
  41aae4:	bl	406930 <strncmp@plt>
  41aae8:	cbnz	w0, 41ab30 <out_of_memory@@Base+0x938>
  41aaec:	mov	x0, x23
  41aaf0:	bl	406680 <strlen@plt>
  41aaf4:	mov	w2, #0x5                   	// #5
  41aaf8:	mov	x19, x0
  41aafc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ab00:	mov	x0, #0x0                   	// #0
  41ab04:	add	x1, x1, #0x498
  41ab08:	bl	406cd0 <dcgettext@plt>
  41ab0c:	mov	x3, x23
  41ab10:	mov	x2, x0
  41ab14:	mov	x1, x19
  41ab18:	mov	x0, x22
  41ab1c:	bl	419dc8 <error@@Base>
  41ab20:	ldr	x24, [x20, #176]
  41ab24:	ldr	w2, [x24]
  41ab28:	b	41a660 <out_of_memory@@Base+0x468>
  41ab2c:	mov	x21, #0x1                   	// #1
  41ab30:	mov	x1, x21
  41ab34:	mov	x0, x19
  41ab38:	mov	x2, x22
  41ab3c:	bl	41a578 <out_of_memory@@Base+0x380>
  41ab40:	tbnz	w0, #31, 41aaec <out_of_memory@@Base+0x8f4>
  41ab44:	ldr	x24, [x20, #176]
  41ab48:	ldr	x0, [x24, #8]
  41ab4c:	ldrb	w1, [x0, w25, uxtw]
  41ab50:	cmp	w1, #0x1
  41ab54:	b.hi	41ab60 <out_of_memory@@Base+0x968>  // b.pmore
  41ab58:	ldrb	w1, [x0, w26, uxtw]
  41ab5c:	strb	w1, [x0, w25, uxtw]
  41ab60:	ldr	w2, [x24]
  41ab64:	sub	w2, w2, #0x1
  41ab68:	str	w2, [x24]
  41ab6c:	b	41a660 <out_of_memory@@Base+0x468>
  41ab70:	add	x0, x19, #0x1
  41ab74:	cmp	w2, #0x2c
  41ab78:	b.ne	41a8b8 <out_of_memory@@Base+0x6c0>  // b.any
  41ab7c:	ldrb	w1, [x0]
  41ab80:	cbz	w1, 41ac2c <out_of_memory@@Base+0xa34>
  41ab84:	mov	x2, x0
  41ab88:	mov	w3, #0x0                   	// #0
  41ab8c:	b	41abac <out_of_memory@@Base+0x9b4>
  41ab90:	cmp	w1, #0x29
  41ab94:	b.eq	41abbc <out_of_memory@@Base+0x9c4>  // b.none
  41ab98:	cmp	w1, #0x2c
  41ab9c:	ccmp	w3, #0x0, #0x0, eq  // eq = none
  41aba0:	b.le	41abd0 <out_of_memory@@Base+0x9d8>
  41aba4:	ldrb	w1, [x2, #1]!
  41aba8:	cbz	w1, 41ac2c <out_of_memory@@Base+0xa34>
  41abac:	cmp	w1, #0x28
  41abb0:	b.ne	41ab90 <out_of_memory@@Base+0x998>  // b.any
  41abb4:	add	w3, w3, #0x1
  41abb8:	b	41aba4 <out_of_memory@@Base+0x9ac>
  41abbc:	sub	w3, w3, #0x1
  41abc0:	b	41aba4 <out_of_memory@@Base+0x9ac>
  41abc4:	cmp	w2, #0x29
  41abc8:	b.ne	41a950 <out_of_memory@@Base+0x758>  // b.any
  41abcc:	b	41ac18 <out_of_memory@@Base+0xa20>
  41abd0:	ldrb	w1, [x2]
  41abd4:	cbz	w1, 41ac2c <out_of_memory@@Base+0xa34>
  41abd8:	ldurb	w1, [x2, #-1]
  41abdc:	add	x24, x2, #0x1
  41abe0:	ldrh	w1, [x21, x1, lsl #1]
  41abe4:	tbnz	w1, #1, 41acd0 <out_of_memory@@Base+0xad8>
  41abe8:	strb	wzr, [x2]
  41abec:	bl	40c1b8 <variable_expand@@Base>
  41abf0:	mov	x19, x0
  41abf4:	bl	406680 <strlen@plt>
  41abf8:	add	x3, x0, #0x10
  41abfc:	and	x3, x3, #0xfffffffffffffff0
  41ac00:	add	x2, x0, #0x1
  41ac04:	sub	sp, sp, x3
  41ac08:	mov	x1, x19
  41ac0c:	mov	x27, sp
  41ac10:	mov	x0, x27
  41ac14:	bl	406640 <memcpy@plt>
  41ac18:	mov	x0, x24
  41ac1c:	bl	418cf8 <next_token@@Base>
  41ac20:	mov	x24, x0
  41ac24:	ldrb	w0, [x0]
  41ac28:	cbnz	w0, 41ad2c <out_of_memory@@Base+0xb34>
  41ac2c:	mov	w0, #0xffffffff            	// #-1
  41ac30:	b	41a6cc <out_of_memory@@Base+0x4d4>
  41ac34:	mov	w0, #0x2                   	// #2
  41ac38:	strb	w0, [x1, w25, uxtw]
  41ac3c:	b	41a648 <out_of_memory@@Base+0x450>
  41ac40:	mov	x1, #0x0                   	// #0
  41ac44:	mov	x0, x19
  41ac48:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  41ac4c:	mov	x19, x0
  41ac50:	bl	418cc8 <end_of_token@@Base>
  41ac54:	ldrb	w2, [x0]
  41ac58:	sub	x1, x0, x19
  41ac5c:	ldrh	w3, [x21, w2, sxtw #1]
  41ac60:	tst	w3, #0x6
  41ac64:	b.eq	41ac80 <out_of_memory@@Base+0xa88>  // b.none
  41ac68:	mov	x3, x0
  41ac6c:	nop
  41ac70:	ldrb	w2, [x3, #1]!
  41ac74:	ldrh	w4, [x21, w2, sxtw #1]
  41ac78:	tst	w4, #0x6
  41ac7c:	b.ne	41ac70 <out_of_memory@@Base+0xa78>  // b.any
  41ac80:	cbnz	w2, 41ac2c <out_of_memory@@Base+0xa34>
  41ac84:	strb	wzr, [x0]
  41ac88:	mov	x0, x19
  41ac8c:	bl	4231f0 <lookup_variable@@Base>
  41ac90:	mov	w1, #0x0                   	// #0
  41ac94:	cbz	x0, 41aca8 <out_of_memory@@Base+0xab0>
  41ac98:	ldr	x0, [x0, #8]
  41ac9c:	ldrb	w0, [x0]
  41aca0:	cmp	w0, #0x0
  41aca4:	cset	w1, ne  // ne = any
  41aca8:	ldr	x24, [x20, #176]
  41acac:	and	w25, w25, #0x1
  41acb0:	eor	w1, w1, w25
  41acb4:	mov	x0, x19
  41acb8:	eor	w1, w1, #0x1
  41acbc:	ldr	x2, [x24, #8]
  41acc0:	strb	w1, [x2, w26, uxtw]
  41acc4:	bl	406b90 <free@plt>
  41acc8:	ldr	w2, [x24]
  41accc:	b	41a660 <out_of_memory@@Base+0x468>
  41acd0:	ldurb	w1, [x2, #-2]
  41acd4:	sub	x2, x2, #0x1
  41acd8:	ldrh	w1, [x21, x1, lsl #1]
  41acdc:	tbz	w1, #1, 41abe8 <out_of_memory@@Base+0x9f0>
  41ace0:	ldurb	w1, [x2, #-2]
  41ace4:	sub	x2, x2, #0x1
  41ace8:	ldrh	w1, [x21, x1, lsl #1]
  41acec:	tbnz	w1, #1, 41acd0 <out_of_memory@@Base+0xad8>
  41acf0:	b	41abe8 <out_of_memory@@Base+0x9f0>
  41acf4:	mov	x0, x23
  41acf8:	bl	406680 <strlen@plt>
  41acfc:	mov	w2, #0x5                   	// #5
  41ad00:	mov	x19, x0
  41ad04:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ad08:	mov	x0, #0x0                   	// #0
  41ad0c:	add	x1, x1, #0x498
  41ad10:	bl	406cd0 <dcgettext@plt>
  41ad14:	mov	x3, x23
  41ad18:	mov	x2, x0
  41ad1c:	mov	x1, x19
  41ad20:	mov	x0, x22
  41ad24:	bl	419dc8 <error@@Base>
  41ad28:	b	41a9ac <out_of_memory@@Base+0x7b4>
  41ad2c:	mov	x1, x24
  41ad30:	mov	w2, #0x0                   	// #0
  41ad34:	b	41ad48 <out_of_memory@@Base+0xb50>
  41ad38:	cmp	w0, #0x29
  41ad3c:	b.eq	41ad58 <out_of_memory@@Base+0xb60>  // b.none
  41ad40:	ldrb	w0, [x1, #1]!
  41ad44:	cbz	w0, 41ac2c <out_of_memory@@Base+0xa34>
  41ad48:	cmp	w0, #0x28
  41ad4c:	b.ne	41ad38 <out_of_memory@@Base+0xb40>  // b.any
  41ad50:	add	w2, w2, #0x1
  41ad54:	b	41ad40 <out_of_memory@@Base+0xb48>
  41ad58:	cbz	w2, 41ada8 <out_of_memory@@Base+0xbb0>
  41ad5c:	sub	w2, w2, #0x1
  41ad60:	b	41ad40 <out_of_memory@@Base+0xb48>
  41ad64:	mov	w1, #0x1                   	// #1
  41ad68:	cbz	w2, 41a9d4 <out_of_memory@@Base+0x7dc>
  41ad6c:	add	x1, x0, #0x1
  41ad70:	add	x0, x27, #0x1
  41ad74:	bl	406b40 <strcmp@plt>
  41ad78:	cmp	w0, #0x0
  41ad7c:	cset	w1, eq  // eq = none
  41ad80:	b	41a9d4 <out_of_memory@@Base+0x7dc>
  41ad84:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ad88:	mov	x2, x21
  41ad8c:	add	x0, x0, #0x468
  41ad90:	mov	x1, x19
  41ad94:	bl	406930 <strncmp@plt>
  41ad98:	cbnz	w0, 41ab30 <out_of_memory@@Base+0x938>
  41ad9c:	b	41aaec <out_of_memory@@Base+0x8f4>
  41ada0:	add	x0, x19, #0x1
  41ada4:	b	41ab7c <out_of_memory@@Base+0x984>
  41ada8:	ldrb	w0, [x1]
  41adac:	b	41a978 <out_of_memory@@Base+0x780>
  41adb0:	mov	x0, x23
  41adb4:	bl	406680 <strlen@plt>
  41adb8:	mov	w2, #0x5                   	// #5
  41adbc:	mov	x19, x0
  41adc0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41adc4:	mov	x0, #0x0                   	// #0
  41adc8:	add	x1, x1, #0x4c0
  41adcc:	bl	406cd0 <dcgettext@plt>
  41add0:	mov	x3, x23
  41add4:	mov	x2, x0
  41add8:	mov	x1, x19
  41addc:	mov	x0, x22
  41ade0:	bl	41a060 <fatal@@Base>
  41ade4:	mov	w2, #0x5                   	// #5
  41ade8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41adec:	mov	x0, #0x0                   	// #0
  41adf0:	add	x1, x1, #0x4d0
  41adf4:	bl	406cd0 <dcgettext@plt>
  41adf8:	mov	x2, x0
  41adfc:	mov	x1, #0x0                   	// #0
  41ae00:	mov	x0, x22
  41ae04:	bl	41a060 <fatal@@Base>
  41ae08:	stp	x29, x30, [sp, #-112]!
  41ae0c:	mov	x29, sp
  41ae10:	stp	x19, x20, [sp, #16]
  41ae14:	mov	x19, x0
  41ae18:	mov	x20, #0x1                   	// #1
  41ae1c:	stp	x21, x22, [sp, #32]
  41ae20:	stp	x23, x24, [sp, #48]
  41ae24:	sub	x24, x0, #0x1
  41ae28:	stp	x25, x26, [sp, #64]
  41ae2c:	adrp	x26, 443000 <expanding_var@@Base+0x338>
  41ae30:	mov	x25, x0
  41ae34:	stp	x27, x28, [sp, #80]
  41ae38:	add	x26, x26, #0x448
  41ae3c:	orr	w27, w1, #0x1
  41ae40:	ldrb	w2, [x0]
  41ae44:	mov	x28, #0x0                   	// #0
  41ae48:	ldrh	w3, [x26, w2, sxtw #1]
  41ae4c:	tst	w3, w27
  41ae50:	b.eq	41aed8 <out_of_memory@@Base+0xce0>  // b.none
  41ae54:	cbz	w2, 41af98 <out_of_memory@@Base+0xda0>
  41ae58:	cmp	w2, #0x24
  41ae5c:	b.ne	41aee4 <out_of_memory@@Base+0xcec>  // b.any
  41ae60:	ldrb	w4, [x19, #1]
  41ae64:	cbz	w4, 41af98 <out_of_memory@@Base+0xda0>
  41ae68:	cmp	w4, #0x28
  41ae6c:	add	x3, x19, #0x2
  41ae70:	ldrb	w2, [x19, #2]
  41ae74:	mov	w0, #0x7b                  	// #123
  41ae78:	mov	x19, x3
  41ae7c:	ccmp	w4, w0, #0x4, ne  // ne = any
  41ae80:	b.ne	41ae48 <out_of_memory@@Base+0xc50>  // b.any
  41ae84:	cmp	w4, #0x28
  41ae88:	mov	w0, #0x7d                  	// #125
  41ae8c:	mov	w1, #0x29                  	// #41
  41ae90:	mov	w5, #0x1                   	// #1
  41ae94:	csel	w0, w0, w1, ne  // ne = any
  41ae98:	cbnz	w2, 41aeb0 <out_of_memory@@Base+0xcb8>
  41ae9c:	b	41af8c <out_of_memory@@Base+0xd94>
  41aea0:	cmp	w0, w2
  41aea4:	b.eq	41afbc <out_of_memory@@Base+0xdc4>  // b.none
  41aea8:	ldrb	w2, [x3, #1]!
  41aeac:	cbz	w2, 41aec4 <out_of_memory@@Base+0xccc>
  41aeb0:	cmp	w4, w2
  41aeb4:	b.ne	41aea0 <out_of_memory@@Base+0xca8>  // b.any
  41aeb8:	ldrb	w2, [x3, #1]!
  41aebc:	add	w5, w5, #0x1
  41aec0:	cbnz	w2, 41aeb0 <out_of_memory@@Base+0xcb8>
  41aec4:	mov	x19, x3
  41aec8:	ldrh	w3, [x26, w2, sxtw #1]
  41aecc:	tst	w3, w27
  41aed0:	b.ne	41ae54 <out_of_memory@@Base+0xc5c>  // b.any
  41aed4:	nop
  41aed8:	ldrb	w2, [x19, #1]
  41aedc:	add	x19, x19, #0x1
  41aee0:	b	41ae48 <out_of_memory@@Base+0xc50>
  41aee4:	cmp	x19, x25
  41aee8:	b.ls	41af9c <out_of_memory@@Base+0xda4>  // b.plast
  41aeec:	ldurb	w0, [x19, #-1]
  41aef0:	cmp	w0, #0x5c
  41aef4:	b.ne	41af9c <out_of_memory@@Base+0xda4>  // b.any
  41aef8:	sub	x2, x19, #0x2
  41aefc:	cmp	x25, x2
  41af00:	b.hi	41afd0 <out_of_memory@@Base+0xdd8>  // b.pmore
  41af04:	mov	w0, #0xfffffffe            	// #-2
  41af08:	sub	w5, w0, w2
  41af0c:	b	41af18 <out_of_memory@@Base+0xd20>
  41af10:	cmp	x2, x24
  41af14:	b.eq	41af30 <out_of_memory@@Base+0xd38>  // b.none
  41af18:	ldrb	w3, [x2]
  41af1c:	add	w4, w5, w2
  41af20:	sub	x2, x2, #0x1
  41af24:	cmp	w3, #0x5c
  41af28:	b.eq	41af10 <out_of_memory@@Base+0xd18>  // b.none
  41af2c:	add	w4, w4, #0x1
  41af30:	add	w22, w4, w4, lsr #31
  41af34:	add	x3, x19, w4, sxtw
  41af38:	and	w23, w4, #0x1
  41af3c:	asr	w22, w22, #1
  41af40:	sxtw	x22, w22
  41af44:	add	x21, x19, x22
  41af48:	cbnz	x28, 41af60 <out_of_memory@@Base+0xd68>
  41af4c:	mov	x0, x25
  41af50:	str	x3, [sp, #104]
  41af54:	bl	406680 <strlen@plt>
  41af58:	mov	x28, x0
  41af5c:	ldr	x3, [sp, #104]
  41af60:	sub	x2, x19, x25
  41af64:	sub	x22, x28, x22
  41af68:	sub	x2, x20, x2
  41af6c:	mov	x0, x3
  41af70:	add	x2, x2, x22
  41af74:	mov	x1, x21
  41af78:	bl	406650 <memmove@plt>
  41af7c:	cbz	w23, 41b008 <out_of_memory@@Base+0xe10>
  41af80:	ldrb	w2, [x21]
  41af84:	mov	x19, x21
  41af88:	b	41ae48 <out_of_memory@@Base+0xc50>
  41af8c:	ldrh	w0, [x26]
  41af90:	tst	w0, w27
  41af94:	b.eq	41aed8 <out_of_memory@@Base+0xce0>  // b.none
  41af98:	mov	x19, #0x0                   	// #0
  41af9c:	mov	x0, x19
  41afa0:	ldp	x19, x20, [sp, #16]
  41afa4:	ldp	x21, x22, [sp, #32]
  41afa8:	ldp	x23, x24, [sp, #48]
  41afac:	ldp	x25, x26, [sp, #64]
  41afb0:	ldp	x27, x28, [sp, #80]
  41afb4:	ldp	x29, x30, [sp], #112
  41afb8:	ret
  41afbc:	subs	w5, w5, #0x1
  41afc0:	b.ne	41aea8 <out_of_memory@@Base+0xcb0>  // b.any
  41afc4:	ldrb	w2, [x3, #1]
  41afc8:	add	x19, x3, #0x1
  41afcc:	b	41ae48 <out_of_memory@@Base+0xc50>
  41afd0:	sub	x3, x19, #0x1
  41afd4:	cbnz	x28, 41afe8 <out_of_memory@@Base+0xdf0>
  41afd8:	mov	x21, x19
  41afdc:	mov	x22, #0x0                   	// #0
  41afe0:	mov	w23, #0x1                   	// #1
  41afe4:	b	41af4c <out_of_memory@@Base+0xd54>
  41afe8:	sub	x1, x19, x25
  41afec:	add	x2, x28, #0x1
  41aff0:	sub	x2, x2, x1
  41aff4:	mov	x0, x3
  41aff8:	mov	x1, x19
  41affc:	bl	406650 <memmove@plt>
  41b000:	ldrb	w2, [x19]
  41b004:	b	41ae48 <out_of_memory@@Base+0xc50>
  41b008:	mov	x19, x21
  41b00c:	b	41af9c <out_of_memory@@Base+0xda4>
  41b010:	stp	x29, x30, [sp, #-112]!
  41b014:	mov	x29, sp
  41b018:	stp	x19, x20, [sp, #16]
  41b01c:	mov	x20, x0
  41b020:	stp	x21, x22, [sp, #32]
  41b024:	mov	w22, w1
  41b028:	mov	x21, #0x0                   	// #0
  41b02c:	stp	x27, x28, [sp, #80]
  41b030:	mov	x28, x0
  41b034:	sub	x27, x0, #0x1
  41b038:	stp	x23, x24, [sp, #48]
  41b03c:	mov	x23, #0x1                   	// #1
  41b040:	mov	w24, #0xfffffffe            	// #-2
  41b044:	stp	x25, x26, [sp, #64]
  41b048:	mov	x0, x28
  41b04c:	mov	w1, w22
  41b050:	bl	406bb0 <strchr@plt>
  41b054:	mov	x19, x0
  41b058:	cbz	x0, 41b0f8 <out_of_memory@@Base+0xf00>
  41b05c:	cmp	x20, x0
  41b060:	b.cs	41b0f8 <out_of_memory@@Base+0xf00>  // b.hs, b.nlast
  41b064:	ldurb	w0, [x0, #-1]
  41b068:	cmp	w0, #0x5c
  41b06c:	b.ne	41b0f8 <out_of_memory@@Base+0xf00>  // b.any
  41b070:	sub	x2, x19, #0x2
  41b074:	cmp	x2, x20
  41b078:	b.cc	41b118 <out_of_memory@@Base+0xf20>  // b.lo, b.ul, b.last
  41b07c:	sub	w1, w24, w2
  41b080:	b	41b08c <out_of_memory@@Base+0xe94>
  41b084:	cmp	x2, x27
  41b088:	b.eq	41b0a4 <out_of_memory@@Base+0xeac>  // b.none
  41b08c:	ldrb	w3, [x2]
  41b090:	add	w0, w1, w2
  41b094:	sub	x2, x2, #0x1
  41b098:	cmp	w3, #0x5c
  41b09c:	b.eq	41b084 <out_of_memory@@Base+0xe8c>  // b.none
  41b0a0:	add	w0, w0, #0x1
  41b0a4:	add	w26, w0, w0, lsr #31
  41b0a8:	add	x1, x19, w0, sxtw
  41b0ac:	and	w25, w0, #0x1
  41b0b0:	asr	w26, w26, #1
  41b0b4:	sxtw	x26, w26
  41b0b8:	add	x28, x19, x26
  41b0bc:	cbnz	x21, 41b0d4 <out_of_memory@@Base+0xedc>
  41b0c0:	mov	x0, x20
  41b0c4:	str	x1, [sp, #104]
  41b0c8:	bl	406680 <strlen@plt>
  41b0cc:	mov	x21, x0
  41b0d0:	ldr	x1, [sp, #104]
  41b0d4:	sub	x19, x19, x20
  41b0d8:	sub	x2, x21, x26
  41b0dc:	sub	x19, x23, x19
  41b0e0:	mov	x0, x1
  41b0e4:	add	x2, x19, x2
  41b0e8:	mov	x1, x28
  41b0ec:	bl	406650 <memmove@plt>
  41b0f0:	cbnz	w25, 41b048 <out_of_memory@@Base+0xe50>
  41b0f4:	mov	x19, x28
  41b0f8:	mov	x0, x19
  41b0fc:	ldp	x19, x20, [sp, #16]
  41b100:	ldp	x21, x22, [sp, #32]
  41b104:	ldp	x23, x24, [sp, #48]
  41b108:	ldp	x25, x26, [sp, #64]
  41b10c:	ldp	x27, x28, [sp, #80]
  41b110:	ldp	x29, x30, [sp], #112
  41b114:	ret
  41b118:	sub	x1, x19, #0x1
  41b11c:	cbnz	x21, 41b130 <out_of_memory@@Base+0xf38>
  41b120:	mov	x28, x19
  41b124:	mov	x26, #0x0                   	// #0
  41b128:	mov	w25, #0x1                   	// #1
  41b12c:	b	41b0c0 <out_of_memory@@Base+0xec8>
  41b130:	add	x3, x21, #0x1
  41b134:	sub	x2, x19, x20
  41b138:	mov	x0, x1
  41b13c:	sub	x2, x3, x2
  41b140:	mov	x1, x19
  41b144:	mov	x28, x19
  41b148:	bl	406650 <memmove@plt>
  41b14c:	b	41b048 <out_of_memory@@Base+0xe50>
  41b150:	stp	x29, x30, [sp, #-96]!
  41b154:	mov	x29, sp
  41b158:	str	x27, [sp, #80]
  41b15c:	mov	x27, x0
  41b160:	stp	x21, x22, [sp, #32]
  41b164:	stp	x25, x26, [sp, #64]
  41b168:	ldp	x26, x21, [x27, #16]
  41b16c:	stp	x19, x20, [sp, #16]
  41b170:	ldr	x0, [x0, #32]
  41b174:	add	x20, x26, x21
  41b178:	cbz	x0, 41b340 <out_of_memory@@Base+0x1148>
  41b17c:	stp	x23, x24, [sp, #48]
  41b180:	adrp	x22, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41b184:	mov	x19, x26
  41b188:	add	x22, x22, #0x4f0
  41b18c:	sub	x1, x20, x26
  41b190:	add	x24, x27, #0x28
  41b194:	mov	x21, #0x0                   	// #0
  41b198:	mov	w23, #0xa                   	// #10
  41b19c:	strb	wzr, [x26]
  41b1a0:	b	41b1ec <out_of_memory@@Base+0xff4>
  41b1a4:	add	x26, x26, x1
  41b1a8:	sub	x25, x26, x19
  41b1ac:	ldurb	w1, [x26, #-1]
  41b1b0:	cmp	w1, #0xa
  41b1b4:	b.eq	41b244 <out_of_memory@@Base+0x104c>  // b.none
  41b1b8:	ldr	x1, [x27, #24]
  41b1bc:	mov	x0, x19
  41b1c0:	lsl	x1, x1, #1
  41b1c4:	str	x1, [x27, #24]
  41b1c8:	bl	418aa0 <xrealloc@@Base>
  41b1cc:	add	x26, x0, x25
  41b1d0:	ldr	x20, [x27, #24]
  41b1d4:	mov	x19, x0
  41b1d8:	str	x0, [x27]
  41b1dc:	add	x20, x0, x20
  41b1e0:	str	x0, [x27, #16]
  41b1e4:	sub	x1, x20, x26
  41b1e8:	strb	wzr, [x0, x25]
  41b1ec:	ldr	x2, [x27, #32]
  41b1f0:	mov	x0, x26
  41b1f4:	bl	406de0 <fgets@plt>
  41b1f8:	cbz	x0, 41b2a8 <out_of_memory@@Base+0x10b0>
  41b1fc:	mov	x0, x26
  41b200:	bl	406680 <strlen@plt>
  41b204:	mov	x1, x0
  41b208:	cbnz	x0, 41b1a4 <out_of_memory@@Base+0xfac>
  41b20c:	mov	x1, x22
  41b210:	mov	w2, #0x5                   	// #5
  41b214:	bl	406cd0 <dcgettext@plt>
  41b218:	mov	x2, x0
  41b21c:	mov	x1, #0x0                   	// #0
  41b220:	mov	x0, x24
  41b224:	bl	419dc8 <error@@Base>
  41b228:	strb	w23, [x26]
  41b22c:	mov	x1, #0x1                   	// #1
  41b230:	add	x26, x26, x1
  41b234:	sub	x25, x26, x19
  41b238:	ldurb	w1, [x26, #-1]
  41b23c:	cmp	w1, #0xa
  41b240:	b.ne	41b1b8 <out_of_memory@@Base+0xfc0>  // b.any
  41b244:	add	x21, x21, #0x1
  41b248:	cmp	x25, #0x1
  41b24c:	b.le	41b25c <out_of_memory@@Base+0x1064>
  41b250:	ldurb	w0, [x26, #-2]
  41b254:	cmp	w0, #0xd
  41b258:	b.eq	41b318 <out_of_memory@@Base+0x1120>  // b.none
  41b25c:	sub	x1, x26, #0x2
  41b260:	cmp	x19, x1
  41b264:	b.hi	41b2e8 <out_of_memory@@Base+0x10f0>  // b.pmore
  41b268:	sub	x4, x19, #0x1
  41b26c:	mov	w2, #0x0                   	// #0
  41b270:	b	41b284 <out_of_memory@@Base+0x108c>
  41b274:	sub	x1, x1, #0x1
  41b278:	eor	w2, w2, #0x1
  41b27c:	cmp	x4, x1
  41b280:	b.eq	41b290 <out_of_memory@@Base+0x1098>  // b.none
  41b284:	ldrb	w3, [x1]
  41b288:	cmp	w3, #0x5c
  41b28c:	b.eq	41b274 <out_of_memory@@Base+0x107c>  // b.none
  41b290:	cbz	w2, 41b2e8 <out_of_memory@@Base+0x10f0>
  41b294:	sub	x1, x20, x26
  41b298:	cmp	x1, #0x4f
  41b29c:	b.gt	41b1ec <out_of_memory@@Base+0xff4>
  41b2a0:	sub	x25, x26, x19
  41b2a4:	b	41b1b8 <out_of_memory@@Base+0xfc0>
  41b2a8:	ldr	x0, [x27, #32]
  41b2ac:	bl	406e00 <ferror@plt>
  41b2b0:	cbnz	w0, 41b3c8 <out_of_memory@@Base+0x11d0>
  41b2b4:	cbnz	x21, 41b2f8 <out_of_memory@@Base+0x1100>
  41b2b8:	ldr	x0, [x27, #16]
  41b2bc:	mov	x21, #0x1                   	// #1
  41b2c0:	ldp	x23, x24, [sp, #48]
  41b2c4:	cmp	x0, x26
  41b2c8:	b.eq	41b3c0 <out_of_memory@@Base+0x11c8>  // b.none
  41b2cc:	mov	x0, x21
  41b2d0:	ldp	x19, x20, [sp, #16]
  41b2d4:	ldp	x21, x22, [sp, #32]
  41b2d8:	ldp	x25, x26, [sp, #64]
  41b2dc:	ldr	x27, [sp, #80]
  41b2e0:	ldp	x29, x30, [sp], #96
  41b2e4:	ret
  41b2e8:	sturb	wzr, [x26, #-1]
  41b2ec:	ldr	x0, [x27, #32]
  41b2f0:	bl	406e00 <ferror@plt>
  41b2f4:	cbnz	w0, 41b3c8 <out_of_memory@@Base+0x11d0>
  41b2f8:	mov	x0, x21
  41b2fc:	ldp	x19, x20, [sp, #16]
  41b300:	ldp	x21, x22, [sp, #32]
  41b304:	ldp	x23, x24, [sp, #48]
  41b308:	ldp	x25, x26, [sp, #64]
  41b30c:	ldr	x27, [sp, #80]
  41b310:	ldp	x29, x30, [sp], #96
  41b314:	ret
  41b318:	sub	x25, x26, #0x1
  41b31c:	mov	x0, x25
  41b320:	bl	406680 <strlen@plt>
  41b324:	mov	x2, x0
  41b328:	mov	x1, x25
  41b32c:	sub	x0, x26, #0x2
  41b330:	add	x2, x2, #0x1
  41b334:	mov	x26, x25
  41b338:	bl	406650 <memmove@plt>
  41b33c:	b	41b25c <out_of_memory@@Base+0x1064>
  41b340:	ldr	x19, [x27, #8]
  41b344:	cmp	x20, x19
  41b348:	b.ls	41b3c0 <out_of_memory@@Base+0x11c8>  // b.plast
  41b34c:	str	x19, [x27]
  41b350:	mov	x0, x19
  41b354:	mov	w1, #0xa                   	// #10
  41b358:	bl	406bb0 <strchr@plt>
  41b35c:	cbz	x0, 41b3a4 <out_of_memory@@Base+0x11ac>
  41b360:	cmp	x19, x0
  41b364:	b.cs	41b3b8 <out_of_memory@@Base+0x11c0>  // b.hs, b.nlast
  41b368:	mov	x1, x0
  41b36c:	mov	w2, #0x0                   	// #0
  41b370:	b	41b380 <out_of_memory@@Base+0x1188>
  41b374:	eor	w2, w2, #0x1
  41b378:	cmp	x19, x1
  41b37c:	b.eq	41b38c <out_of_memory@@Base+0x1194>  // b.none
  41b380:	ldrb	w3, [x1, #-1]!
  41b384:	cmp	w3, #0x5c
  41b388:	b.eq	41b374 <out_of_memory@@Base+0x117c>  // b.none
  41b38c:	add	x19, x0, #0x1
  41b390:	cbnz	w2, 41b350 <out_of_memory@@Base+0x1158>
  41b394:	strb	wzr, [x0]
  41b398:	mov	x21, #0x0                   	// #0
  41b39c:	str	x19, [x27, #8]
  41b3a0:	b	41b2cc <out_of_memory@@Base+0x10d4>
  41b3a4:	add	x0, x21, #0x1
  41b3a8:	mov	x21, #0x0                   	// #0
  41b3ac:	add	x26, x26, x0
  41b3b0:	str	x26, [x27, #8]
  41b3b4:	b	41b2cc <out_of_memory@@Base+0x10d4>
  41b3b8:	add	x19, x0, #0x1
  41b3bc:	b	41b394 <out_of_memory@@Base+0x119c>
  41b3c0:	mov	x21, #0xffffffffffffffff    	// #-1
  41b3c4:	b	41b2cc <out_of_memory@@Base+0x10d4>
  41b3c8:	ldr	x0, [x27, #40]
  41b3cc:	bl	419828 <pfatal_with_name@@Base>
  41b3d0:	stp	x29, x30, [sp, #-128]!
  41b3d4:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  41b3d8:	add	x2, x2, #0x448
  41b3dc:	mov	x29, sp
  41b3e0:	stp	x21, x22, [sp, #32]
  41b3e4:	mov	x22, x0
  41b3e8:	stp	x23, x24, [sp, #48]
  41b3ec:	mov	x23, x1
  41b3f0:	str	wzr, [x1]
  41b3f4:	ldrb	w0, [x0]
  41b3f8:	ldrh	w1, [x2, w0, sxtw #1]
  41b3fc:	tst	w1, #0x6
  41b400:	b.eq	41b418 <out_of_memory@@Base+0x1220>  // b.none
  41b404:	nop
  41b408:	ldrb	w0, [x22, #1]!
  41b40c:	ldrh	w1, [x2, w0, sxtw #1]
  41b410:	tst	w1, #0x6
  41b414:	b.ne	41b408 <out_of_memory@@Base+0x1210>  // b.any
  41b418:	cbz	w0, 41b4e0 <out_of_memory@@Base+0x12e8>
  41b41c:	adrp	x24, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41b420:	add	x24, x24, #0x528
  41b424:	stp	x19, x20, [sp, #16]
  41b428:	mov	x19, x22
  41b42c:	str	x25, [sp, #64]
  41b430:	adrp	x25, 428000 <_IO_stdin_used@@Base+0x1c20>
  41b434:	add	x25, x25, #0x270
  41b438:	b	41b480 <out_of_memory@@Base+0x1288>
  41b43c:	cmp	x21, #0x8
  41b440:	b.eq	41b4f4 <out_of_memory@@Base+0x12fc>  // b.none
  41b444:	cmp	x21, #0x7
  41b448:	b.ne	41b4d8 <out_of_memory@@Base+0x12e0>  // b.any
  41b44c:	mov	x2, x21
  41b450:	mov	x1, x19
  41b454:	mov	x0, x24
  41b458:	bl	406930 <strncmp@plt>
  41b45c:	cbnz	w0, 41b4d8 <out_of_memory@@Base+0x12e0>
  41b460:	ldrb	w0, [x23]
  41b464:	orr	w0, w0, #0x20
  41b468:	strb	w0, [x23]
  41b46c:	mov	x0, x20
  41b470:	bl	418cf8 <next_token@@Base>
  41b474:	mov	x19, x0
  41b478:	ldrb	w0, [x0]
  41b47c:	cbz	w0, 41b4d8 <out_of_memory@@Base+0x12e0>
  41b480:	add	x1, sp, #0x50
  41b484:	mov	x0, x19
  41b488:	bl	4244a8 <parse_variable_definition@@Base>
  41b48c:	cbnz	x0, 41b538 <out_of_memory@@Base+0x1340>
  41b490:	mov	x0, x19
  41b494:	bl	418cc8 <end_of_token@@Base>
  41b498:	sub	x21, x0, x19
  41b49c:	mov	x20, x0
  41b4a0:	cmp	x21, #0x6
  41b4a4:	b.ne	41b43c <out_of_memory@@Base+0x1244>  // b.any
  41b4a8:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  41b4ac:	mov	x2, x21
  41b4b0:	add	x0, x0, #0xea8
  41b4b4:	mov	x1, x19
  41b4b8:	bl	406930 <strncmp@plt>
  41b4bc:	cbz	w0, 41b564 <out_of_memory@@Base+0x136c>
  41b4c0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41b4c4:	mov	x2, x21
  41b4c8:	mov	x1, x19
  41b4cc:	add	x0, x0, #0x540
  41b4d0:	bl	406930 <strncmp@plt>
  41b4d4:	cbz	w0, 41b584 <out_of_memory@@Base+0x138c>
  41b4d8:	ldp	x19, x20, [sp, #16]
  41b4dc:	ldr	x25, [sp, #64]
  41b4e0:	mov	x0, x22
  41b4e4:	ldp	x21, x22, [sp, #32]
  41b4e8:	ldp	x23, x24, [sp, #48]
  41b4ec:	ldp	x29, x30, [sp], #128
  41b4f0:	ret
  41b4f4:	mov	x2, x21
  41b4f8:	mov	x1, x19
  41b4fc:	mov	x0, x25
  41b500:	bl	406930 <strncmp@plt>
  41b504:	cbz	w0, 41b574 <out_of_memory@@Base+0x137c>
  41b508:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41b50c:	mov	x2, x21
  41b510:	mov	x1, x19
  41b514:	add	x0, x0, #0x530
  41b518:	bl	406930 <strncmp@plt>
  41b51c:	cbnz	w0, 41b4d8 <out_of_memory@@Base+0x12e0>
  41b520:	ldrb	w1, [x23]
  41b524:	mov	x0, x20
  41b528:	orr	w1, w1, #0x4
  41b52c:	strb	w1, [x23]
  41b530:	bl	418cf8 <next_token@@Base>
  41b534:	mov	x19, x0
  41b538:	ldrb	w0, [x23]
  41b53c:	mov	x22, x19
  41b540:	ldp	x19, x20, [sp, #16]
  41b544:	orr	w0, w0, #0x1
  41b548:	strb	w0, [x23]
  41b54c:	mov	x0, x22
  41b550:	ldp	x21, x22, [sp, #32]
  41b554:	ldp	x23, x24, [sp, #48]
  41b558:	ldr	x25, [sp, #64]
  41b55c:	ldp	x29, x30, [sp], #128
  41b560:	ret
  41b564:	ldrb	w0, [x23]
  41b568:	orr	w0, w0, #0x8
  41b56c:	strb	w0, [x23]
  41b570:	b	41b46c <out_of_memory@@Base+0x1274>
  41b574:	ldrb	w0, [x23]
  41b578:	orr	w0, w0, #0x10
  41b57c:	strb	w0, [x23]
  41b580:	b	41b46c <out_of_memory@@Base+0x1274>
  41b584:	ldrb	w1, [x23]
  41b588:	mov	x0, x20
  41b58c:	orr	w1, w1, #0x2
  41b590:	strb	w1, [x23]
  41b594:	bl	418cf8 <next_token@@Base>
  41b598:	mov	x19, x0
  41b59c:	b	41b538 <out_of_memory@@Base+0x1340>

000000000041b5a0 <find_percent@@Base>:
  41b5a0:	mov	w1, #0x25                  	// #37
  41b5a4:	b	41b010 <out_of_memory@@Base+0xe18>

000000000041b5a8 <find_percent_cached@@Base>:
  41b5a8:	stp	x29, x30, [sp, #-112]!
  41b5ac:	mov	x29, sp
  41b5b0:	stp	x23, x24, [sp, #48]
  41b5b4:	ldr	x24, [x0]
  41b5b8:	stp	x19, x20, [sp, #16]
  41b5bc:	stp	x21, x22, [sp, #32]
  41b5c0:	mov	x21, x0
  41b5c4:	stp	x25, x26, [sp, #64]
  41b5c8:	stp	x27, x28, [sp, #80]
  41b5cc:	ldrb	w0, [x24]
  41b5d0:	cmp	w0, #0x25
  41b5d4:	b.eq	41b698 <find_percent_cached@@Base+0xf0>  // b.none
  41b5d8:	mov	x20, #0x0                   	// #0
  41b5dc:	mov	x19, #0x0                   	// #0
  41b5e0:	mov	w22, #0xfffffffe            	// #-2
  41b5e4:	mov	x23, #0x1                   	// #1
  41b5e8:	mov	x0, x24
  41b5ec:	mov	w1, #0x25                  	// #37
  41b5f0:	bl	406bb0 <strchr@plt>
  41b5f4:	mov	x24, x0
  41b5f8:	cbz	x0, 41b73c <find_percent_cached@@Base+0x194>
  41b5fc:	ldurb	w0, [x0, #-1]
  41b600:	cmp	w0, #0x5c
  41b604:	b.ne	41b750 <find_percent_cached@@Base+0x1a8>  // b.any
  41b608:	ldr	x27, [x21]
  41b60c:	sub	x1, x24, #0x2
  41b610:	sub	w0, w22, w1
  41b614:	cmp	x1, x27
  41b618:	sub	x4, x27, #0x1
  41b61c:	b.cs	41b62c <find_percent_cached@@Base+0x84>  // b.hs, b.nlast
  41b620:	b	41b728 <find_percent_cached@@Base+0x180>
  41b624:	cmp	x1, x4
  41b628:	b.eq	41b6bc <find_percent_cached@@Base+0x114>  // b.none
  41b62c:	ldrb	w2, [x1]
  41b630:	add	w3, w0, w1
  41b634:	sub	x1, x1, #0x1
  41b638:	cmp	w2, #0x5c
  41b63c:	b.eq	41b624 <find_percent_cached@@Base+0x7c>  // b.none
  41b640:	add	w3, w3, #0x1
  41b644:	and	w26, w3, #0x1
  41b648:	add	w25, w3, w3, lsr #31
  41b64c:	sxtw	x5, w3
  41b650:	asr	w25, w25, #1
  41b654:	sxtw	x25, w25
  41b658:	sub	x28, x23, x25
  41b65c:	sub	x4, x24, x27
  41b660:	cbz	x19, 41b6dc <find_percent_cached@@Base+0x134>
  41b664:	add	x1, x19, x4
  41b668:	sub	x2, x28, x4
  41b66c:	add	x0, x1, x5
  41b670:	add	x2, x2, x20
  41b674:	add	x1, x1, x25
  41b678:	add	x24, x24, x25
  41b67c:	bl	406650 <memmove@plt>
  41b680:	cbnz	w26, 41b5e8 <find_percent_cached@@Base+0x40>
  41b684:	mov	x0, x27
  41b688:	bl	422490 <strcache_add@@Base>
  41b68c:	str	x0, [x21]
  41b690:	sub	x24, x24, x19
  41b694:	add	x24, x0, x24
  41b698:	mov	sp, x29
  41b69c:	mov	x0, x24
  41b6a0:	ldp	x19, x20, [sp, #16]
  41b6a4:	ldp	x21, x22, [sp, #32]
  41b6a8:	ldp	x23, x24, [sp, #48]
  41b6ac:	ldp	x25, x26, [sp, #64]
  41b6b0:	ldp	x27, x28, [sp, #80]
  41b6b4:	ldp	x29, x30, [sp], #112
  41b6b8:	ret
  41b6bc:	add	w25, w3, w3, lsr #31
  41b6c0:	sxtw	x5, w3
  41b6c4:	and	w26, w3, #0x1
  41b6c8:	sub	x4, x24, x27
  41b6cc:	asr	w25, w25, #1
  41b6d0:	sxtw	x25, w25
  41b6d4:	sub	x28, x23, x25
  41b6d8:	cbnz	x19, 41b664 <find_percent_cached@@Base+0xbc>
  41b6dc:	mov	x0, x27
  41b6e0:	stp	x5, x4, [x29, #96]
  41b6e4:	bl	406680 <strlen@plt>
  41b6e8:	mov	x20, x0
  41b6ec:	add	x0, x0, #0x10
  41b6f0:	ldr	x4, [x29, #104]
  41b6f4:	and	x0, x0, #0xfffffffffffffff0
  41b6f8:	sub	sp, sp, x0
  41b6fc:	mov	x1, x27
  41b700:	mov	x19, sp
  41b704:	add	x2, x20, #0x1
  41b708:	add	x24, x19, x4
  41b70c:	mov	x0, x19
  41b710:	bl	406640 <memcpy@plt>
  41b714:	mov	x27, x19
  41b718:	mov	x1, x24
  41b71c:	str	x19, [x21]
  41b720:	ldp	x5, x4, [x29, #96]
  41b724:	b	41b668 <find_percent_cached@@Base+0xc0>
  41b728:	mov	x28, #0x1                   	// #1
  41b72c:	mov	x25, #0x0                   	// #0
  41b730:	mov	w26, w28
  41b734:	mov	x5, #0xffffffffffffffff    	// #-1
  41b738:	b	41b65c <find_percent_cached@@Base+0xb4>
  41b73c:	cbz	x19, 41b698 <find_percent_cached@@Base+0xf0>
  41b740:	ldr	x0, [x21]
  41b744:	bl	422490 <strcache_add@@Base>
  41b748:	str	x0, [x21]
  41b74c:	b	41b698 <find_percent_cached@@Base+0xf0>
  41b750:	cbz	x19, 41b698 <find_percent_cached@@Base+0xf0>
  41b754:	ldr	x0, [x21]
  41b758:	bl	422490 <strcache_add@@Base>
  41b75c:	str	x0, [x21]
  41b760:	b	41b690 <find_percent_cached@@Base+0xe8>
  41b764:	nop
  41b768:	stp	x29, x30, [sp, #-144]!
  41b76c:	adrp	x8, 443000 <expanding_var@@Base+0x338>
  41b770:	mov	x29, sp
  41b774:	ldr	w8, [x8, #772]
  41b778:	stp	x19, x20, [sp, #16]
  41b77c:	stp	x21, x22, [sp, #32]
  41b780:	stp	x23, x24, [sp, #48]
  41b784:	stp	x25, x26, [sp, #64]
  41b788:	ldrb	w26, [sp, #152]
  41b78c:	stp	x27, x28, [sp, #80]
  41b790:	str	w1, [sp, #96]
  41b794:	cbnz	w8, 41c0b8 <find_percent_cached@@Base+0xb10>
  41b798:	mov	x19, x0
  41b79c:	mov	x20, x2
  41b7a0:	mov	x23, x3
  41b7a4:	mov	x22, x4
  41b7a8:	mov	w28, w5
  41b7ac:	mov	x24, x6
  41b7b0:	ldr	x2, [x19, #8]
  41b7b4:	mov	x27, x7
  41b7b8:	add	x0, sp, #0x88
  41b7bc:	str	x2, [sp, #136]
  41b7c0:	bl	41b5a8 <find_percent_cached@@Base>
  41b7c4:	mov	x25, x0
  41b7c8:	cbnz	x27, 41bbf4 <find_percent_cached@@Base+0x64c>
  41b7cc:	ldr	w0, [sp, #96]
  41b7d0:	mov	x21, #0x0                   	// #0
  41b7d4:	cbnz	w0, 41c0cc <find_percent_cached@@Base+0xb24>
  41b7d8:	cbz	x22, 41b8c0 <find_percent_cached@@Base+0x318>
  41b7dc:	ldrb	w3, [x22]
  41b7e0:	mov	x0, x22
  41b7e4:	cbz	w3, 41b870 <find_percent_cached@@Base+0x2c8>
  41b7e8:	mov	x1, x22
  41b7ec:	b	41b804 <find_percent_cached@@Base+0x25c>
  41b7f0:	mov	x0, x26
  41b7f4:	add	x1, x24, #0x1
  41b7f8:	strb	w3, [x0], #1
  41b7fc:	ldrb	w3, [x24, #1]
  41b800:	cbz	w3, 41b870 <find_percent_cached@@Base+0x2c8>
  41b804:	cmp	w3, #0x5c
  41b808:	mov	x24, x1
  41b80c:	mov	x26, x0
  41b810:	b.ne	41b7f0 <find_percent_cached@@Base+0x248>  // b.any
  41b814:	nop
  41b818:	mov	x28, x24
  41b81c:	ldrb	w3, [x24, #1]!
  41b820:	cmp	w3, #0x5c
  41b824:	b.eq	41b818 <find_percent_cached@@Base+0x270>  // b.none
  41b828:	cmp	w3, #0x3a
  41b82c:	sub	x2, x24, x1
  41b830:	b.ne	41b9a0 <find_percent_cached@@Base+0x3f8>  // b.any
  41b834:	tbz	w2, #0, 41b9a0 <find_percent_cached@@Base+0x3f8>
  41b838:	mov	x26, x0
  41b83c:	cmp	x2, #0x1
  41b840:	b.eq	41b7f0 <find_percent_cached@@Base+0x248>  // b.none
  41b844:	lsr	x27, x2, #1
  41b848:	mov	x2, x27
  41b84c:	add	x26, x26, x27
  41b850:	bl	406650 <memmove@plt>
  41b854:	mov	x0, x26
  41b858:	ldrb	w3, [x28, #1]
  41b85c:	add	x1, x24, #0x1
  41b860:	strb	w3, [x0], #1
  41b864:	ldrb	w3, [x24, #1]
  41b868:	cbnz	w3, 41b804 <find_percent_cached@@Base+0x25c>
  41b86c:	nop
  41b870:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  41b874:	strb	wzr, [x0]
  41b878:	ldr	w0, [x1, #1996]
  41b87c:	cbz	w0, 41b9b8 <find_percent_cached@@Base+0x410>
  41b880:	mov	x0, x22
  41b884:	mov	w1, #0x24                  	// #36
  41b888:	bl	406bb0 <strchr@plt>
  41b88c:	cbz	x0, 41b9b8 <find_percent_cached@@Base+0x410>
  41b890:	mov	x0, #0x28                  	// #40
  41b894:	bl	418a78 <xcalloc@@Base>
  41b898:	cmp	x20, #0x0
  41b89c:	ldrb	w2, [x0, #33]
  41b8a0:	cset	w1, ne  // ne = any
  41b8a4:	str	x22, [x0, #8]
  41b8a8:	and	w2, w2, #0xfffffff3
  41b8ac:	mov	x22, x0
  41b8b0:	ubfiz	w1, w1, #2, #6
  41b8b4:	orr	w1, w1, #0x8
  41b8b8:	orr	w1, w1, w2
  41b8bc:	strb	w1, [x0, #33]
  41b8c0:	cbz	x25, 41b9e8 <find_percent_cached@@Base+0x440>
  41b8c4:	cbnz	x20, 41c11c <find_percent_cached@@Base+0xb74>
  41b8c8:	ldr	x24, [x19]
  41b8cc:	mov	x0, x19
  41b8d0:	bl	406b90 <free@plt>
  41b8d4:	cbz	x24, 41c038 <find_percent_cached@@Base+0xa90>
  41b8d8:	mov	x1, x24
  41b8dc:	mov	w0, #0x1                   	// #1
  41b8e0:	ldr	x1, [x1]
  41b8e4:	add	w0, w0, #0x1
  41b8e8:	and	w0, w0, #0xffff
  41b8ec:	cbnz	x1, 41b8e0 <find_percent_cached@@Base+0x338>
  41b8f0:	ubfiz	x20, x0, #3, #16
  41b8f4:	mov	w19, #0x1                   	// #1
  41b8f8:	mov	x0, x20
  41b8fc:	bl	418a50 <xmalloc@@Base>
  41b900:	mov	x23, x0
  41b904:	mov	x0, x20
  41b908:	bl	418a50 <xmalloc@@Base>
  41b90c:	mov	x20, x0
  41b910:	ldr	x0, [sp, #136]
  41b914:	str	x0, [x23]
  41b918:	str	x25, [x20]
  41b91c:	b	41b924 <find_percent_cached@@Base+0x37c>
  41b920:	mov	x24, x25
  41b924:	ldr	x1, [x24, #8]
  41b928:	add	x0, sp, #0x88
  41b92c:	str	x1, [sp, #136]
  41b930:	bl	41b5a8 <find_percent_cached@@Base>
  41b934:	mov	x1, x0
  41b938:	cbz	x0, 41c064 <find_percent_cached@@Base+0xabc>
  41b93c:	mov	w0, w19
  41b940:	add	w19, w19, #0x1
  41b944:	ldr	x25, [x24]
  41b948:	and	w19, w19, #0xffff
  41b94c:	ldr	x2, [sp, #136]
  41b950:	str	x2, [x23, x0, lsl #3]
  41b954:	str	x1, [x20, x0, lsl #3]
  41b958:	mov	x0, x24
  41b95c:	bl	406b90 <free@plt>
  41b960:	cbnz	x25, 41b920 <find_percent_cached@@Base+0x378>
  41b964:	ldr	w3, [sp, #144]
  41b968:	mov	x5, x21
  41b96c:	mov	x4, x22
  41b970:	mov	w2, w19
  41b974:	mov	x1, x20
  41b978:	mov	x0, x23
  41b97c:	mov	w6, #0x1                   	// #1
  41b980:	bl	421ab8 <create_pattern_rule@@Base>
  41b984:	ldp	x19, x20, [sp, #16]
  41b988:	ldp	x21, x22, [sp, #32]
  41b98c:	ldp	x23, x24, [sp, #48]
  41b990:	ldp	x25, x26, [sp, #64]
  41b994:	ldp	x27, x28, [sp, #80]
  41b998:	ldp	x29, x30, [sp], #144
  41b99c:	ret
  41b9a0:	add	x26, x0, x2
  41b9a4:	bl	406650 <memmove@plt>
  41b9a8:	ldrb	w3, [x24]
  41b9ac:	cbnz	w3, 41b7f0 <find_percent_cached@@Base+0x248>
  41b9b0:	mov	x0, x26
  41b9b4:	b	41b870 <find_percent_cached@@Base+0x2c8>
  41b9b8:	mov	x0, x22
  41b9bc:	bl	40d018 <split_prereqs@@Base>
  41b9c0:	mov	x1, x0
  41b9c4:	mov	x0, x22
  41b9c8:	mov	x22, x1
  41b9cc:	bl	406b90 <free@plt>
  41b9d0:	orr	x0, x25, x20
  41b9d4:	cbnz	x0, 41b8c0 <find_percent_cached@@Base+0x318>
  41b9d8:	mov	x0, x22
  41b9dc:	mov	x1, #0x0                   	// #0
  41b9e0:	bl	40d0d8 <enter_prereqs@@Base>
  41b9e4:	mov	x22, x0
  41b9e8:	adrp	x24, 446000 <commands_started@@Base+0x1c8>
  41b9ec:	adrp	x26, 446000 <commands_started@@Base+0x1c8>
  41b9f0:	adrp	x28, 446000 <commands_started@@Base+0x1c8>
  41b9f4:	add	x24, x24, #0x7c8
  41b9f8:	add	x26, x26, #0x7cc
  41b9fc:	add	x28, x28, #0x7fc
  41ba00:	str	xzr, [sp, #112]
  41ba04:	nop
  41ba08:	mov	x0, x19
  41ba0c:	ldr	x19, [x19]
  41ba10:	bl	406b90 <free@plt>
  41ba14:	ldr	w0, [x24]
  41ba18:	cbnz	w0, 41ba3c <find_percent_cached@@Base+0x494>
  41ba1c:	ldr	x0, [sp, #136]
  41ba20:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ba24:	add	x1, x1, #0x5e8
  41ba28:	cmp	x0, x1
  41ba2c:	b.eq	41be78 <find_percent_cached@@Base+0x8d0>  // b.none
  41ba30:	ldrb	w1, [x0]
  41ba34:	cmp	w1, #0x2e
  41ba38:	b.eq	41be64 <find_percent_cached@@Base+0x8bc>  // b.none
  41ba3c:	ldr	w0, [x26]
  41ba40:	cbnz	w0, 41ba64 <find_percent_cached@@Base+0x4bc>
  41ba44:	ldr	x0, [sp, #136]
  41ba48:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ba4c:	add	x1, x1, #0x638
  41ba50:	cmp	x0, x1
  41ba54:	b.eq	41be58 <find_percent_cached@@Base+0x8b0>  // b.none
  41ba58:	ldrb	w1, [x0]
  41ba5c:	cmp	w1, #0x2e
  41ba60:	b.eq	41be44 <find_percent_cached@@Base+0x89c>  // b.none
  41ba64:	ldr	w0, [x28]
  41ba68:	cbnz	w0, 41ba90 <find_percent_cached@@Base+0x4e8>
  41ba6c:	ldr	x0, [sp, #136]
  41ba70:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ba74:	add	x1, x1, #0x650
  41ba78:	cmp	x0, x1
  41ba7c:	b.eq	41bcfc <find_percent_cached@@Base+0x754>  // b.none
  41ba80:	ldrb	w1, [x0]
  41ba84:	cmp	w1, #0x2e
  41ba88:	b.eq	41bce8 <find_percent_cached@@Base+0x740>  // b.none
  41ba8c:	nop
  41ba90:	cbz	x20, 41baa8 <find_percent_cached@@Base+0x500>
  41ba94:	ldr	x2, [sp, #136]
  41ba98:	mov	x1, x23
  41ba9c:	mov	x0, x20
  41baa0:	bl	4105c0 <pattern_matches@@Base>
  41baa4:	cbz	w0, 41be08 <find_percent_cached@@Base+0x860>
  41baa8:	mov	x25, #0x0                   	// #0
  41baac:	cbz	x22, 41bac4 <find_percent_cached@@Base+0x51c>
  41bab0:	mov	x25, x22
  41bab4:	cbz	x19, 41bac4 <find_percent_cached@@Base+0x51c>
  41bab8:	mov	x0, x22
  41babc:	bl	418ef0 <copy_dep_chain@@Base>
  41bac0:	mov	x25, x0
  41bac4:	ldr	w1, [sp, #144]
  41bac8:	ldr	x0, [sp, #136]
  41bacc:	cbnz	w1, 41bd9c <find_percent_cached@@Base+0x7f4>
  41bad0:	bl	422490 <strcache_add@@Base>
  41bad4:	bl	40c820 <enter_file@@Base>
  41bad8:	mov	x27, x0
  41badc:	ldr	x0, [x0, #104]
  41bae0:	cbnz	x0, 41c084 <find_percent_cached@@Base+0xadc>
  41bae4:	cbz	x21, 41bfbc <find_percent_cached@@Base+0xa14>
  41bae8:	ldr	x0, [x27, #32]
  41baec:	cmp	x21, x0
  41baf0:	b.eq	41bff8 <find_percent_cached@@Base+0xa50>  // b.none
  41baf4:	cbz	x0, 41bb00 <find_percent_cached@@Base+0x558>
  41baf8:	ldrb	w0, [x27, #137]
  41bafc:	tbnz	w0, #3, 41bd08 <find_percent_cached@@Base+0x760>
  41bb00:	str	x21, [x27, #32]
  41bb04:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  41bb08:	cmp	x25, #0x0
  41bb0c:	ldr	x0, [x0, #2200]
  41bb10:	ccmp	x0, x27, #0x0, eq  // eq = none
  41bb14:	b.eq	41bfe8 <find_percent_cached@@Base+0xa40>  // b.none
  41bb18:	ldr	w0, [sp, #96]
  41bb1c:	cbnz	w0, 41bddc <find_percent_cached@@Base+0x834>
  41bb20:	ldrb	w0, [x27, #137]
  41bb24:	orr	w0, w0, #0x8
  41bb28:	strb	w0, [x27, #137]
  41bb2c:	cbz	x20, 41bd94 <find_percent_cached@@Base+0x7ec>
  41bb30:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bb34:	add	x0, x0, #0x350
  41bb38:	bl	40c1b8 <variable_expand@@Base>
  41bb3c:	str	x0, [sp, #104]
  41bb40:	ldr	x1, [sp, #136]
  41bb44:	add	x4, x23, #0x1
  41bb48:	mov	x2, x20
  41bb4c:	adrp	x3, 428000 <_IO_stdin_used@@Base+0x1c20>
  41bb50:	adrp	x5, 428000 <_IO_stdin_used@@Base+0x1c20>
  41bb54:	add	x3, x3, #0x6f8
  41bb58:	add	x5, x5, #0x6f9
  41bb5c:	bl	4102d8 <patsubst_expand_pat@@Base>
  41bb60:	ldr	x8, [sp, #104]
  41bb64:	sub	x1, x0, x8
  41bb68:	mov	x0, x8
  41bb6c:	bl	4224d0 <strcache_add_len@@Base>
  41bb70:	str	x0, [x27, #40]
  41bb74:	cbz	x25, 41bbac <find_percent_cached@@Base+0x604>
  41bb78:	ldrb	w1, [x25, #33]
  41bb7c:	tbz	w1, #3, 41bd84 <find_percent_cached@@Base+0x7dc>
  41bb80:	str	x0, [x25, #24]
  41bb84:	ldr	x2, [x27, #24]
  41bb88:	cbz	x2, 41bba8 <find_percent_cached@@Base+0x600>
  41bb8c:	cbz	x21, 41bc28 <find_percent_cached@@Base+0x680>
  41bb90:	mov	x1, x25
  41bb94:	nop
  41bb98:	mov	x0, x1
  41bb9c:	ldr	x1, [x1]
  41bba0:	cbnz	x1, 41bb98 <find_percent_cached@@Base+0x5f0>
  41bba4:	str	x2, [x0]
  41bba8:	str	x25, [x27, #24]
  41bbac:	ldr	x0, [x27]
  41bbb0:	str	x0, [sp, #136]
  41bbb4:	cbz	x19, 41bc48 <find_percent_cached@@Base+0x6a0>
  41bbb8:	ldr	x1, [x19, #8]
  41bbbc:	add	x0, sp, #0x88
  41bbc0:	str	x1, [sp, #136]
  41bbc4:	bl	41b5a8 <find_percent_cached@@Base>
  41bbc8:	cbz	x0, 41ba08 <find_percent_cached@@Base+0x460>
  41bbcc:	mov	w2, #0x5                   	// #5
  41bbd0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bbd4:	mov	x0, #0x0                   	// #0
  41bbd8:	add	x1, x1, #0x758
  41bbdc:	bl	406cd0 <dcgettext@plt>
  41bbe0:	mov	x2, x0
  41bbe4:	ldr	x0, [sp, #160]
  41bbe8:	mov	x1, #0x0                   	// #0
  41bbec:	bl	419dc8 <error@@Base>
  41bbf0:	b	41ba08 <find_percent_cached@@Base+0x460>
  41bbf4:	mov	x0, #0x38                  	// #56
  41bbf8:	bl	418a50 <xmalloc@@Base>
  41bbfc:	mov	x21, x0
  41bc00:	mov	x1, x27
  41bc04:	ldr	x0, [sp, #160]
  41bc08:	ldr	x2, [x0]
  41bc0c:	stp	x2, x28, [x21]
  41bc10:	mov	x0, x24
  41bc14:	str	xzr, [x21, #16]
  41bc18:	bl	418c80 <xstrndup@@Base>
  41bc1c:	stp	x0, xzr, [x21, #24]
  41bc20:	strb	w26, [x21, #50]
  41bc24:	b	41b7d8 <find_percent_cached@@Base+0x230>
  41bc28:	mov	x0, x2
  41bc2c:	ldr	x2, [x2]
  41bc30:	cbnz	x2, 41bc28 <find_percent_cached@@Base+0x680>
  41bc34:	str	x25, [x0]
  41bc38:	ldr	x0, [x27]
  41bc3c:	str	x0, [sp, #136]
  41bc40:	cbnz	x19, 41bbb8 <find_percent_cached@@Base+0x610>
  41bc44:	nop
  41bc48:	ldr	x0, [sp, #112]
  41bc4c:	adrp	x24, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bc50:	add	x24, x24, #0x790
  41bc54:	mov	x19, x0
  41bc58:	cbz	x0, 41b984 <find_percent_cached@@Base+0x3dc>
  41bc5c:	nop
  41bc60:	ldr	x0, [x19]
  41bc64:	ldr	x1, [sp, #112]
  41bc68:	ldr	x20, [x19, #16]
  41bc6c:	mov	x22, x1
  41bc70:	cbz	x0, 41bc80 <find_percent_cached@@Base+0x6d8>
  41bc74:	mov	x0, x1
  41bc78:	bl	418ef0 <copy_dep_chain@@Base>
  41bc7c:	mov	x22, x0
  41bc80:	ldr	x0, [x20, #48]
  41bc84:	cbz	x0, 41bcc0 <find_percent_cached@@Base+0x718>
  41bc88:	ldr	x0, [x20]
  41bc8c:	bl	406680 <strlen@plt>
  41bc90:	mov	x23, x0
  41bc94:	mov	x1, x24
  41bc98:	mov	w2, #0x5                   	// #5
  41bc9c:	mov	x0, #0x0                   	// #0
  41bca0:	bl	406cd0 <dcgettext@plt>
  41bca4:	ldr	x3, [x20]
  41bca8:	mov	x2, x0
  41bcac:	mov	x1, x23
  41bcb0:	mov	x0, x21
  41bcb4:	bl	419dc8 <error@@Base>
  41bcb8:	ldr	x0, [x20, #48]
  41bcbc:	bl	418fa0 <free_ns_chain@@Base>
  41bcc0:	ldr	x19, [x19]
  41bcc4:	str	x22, [x20, #48]
  41bcc8:	cbnz	x19, 41bc60 <find_percent_cached@@Base+0x6b8>
  41bccc:	ldp	x19, x20, [sp, #16]
  41bcd0:	ldp	x21, x22, [sp, #32]
  41bcd4:	ldp	x23, x24, [sp, #48]
  41bcd8:	ldp	x25, x26, [sp, #64]
  41bcdc:	ldp	x27, x28, [sp, #80]
  41bce0:	ldp	x29, x30, [sp], #144
  41bce4:	ret
  41bce8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bcec:	add	x0, x0, #0x1
  41bcf0:	add	x1, x1, #0x651
  41bcf4:	bl	406b40 <strcmp@plt>
  41bcf8:	cbnz	w0, 41ba90 <find_percent_cached@@Base+0x4e8>
  41bcfc:	mov	w0, #0x1                   	// #1
  41bd00:	str	w0, [x28]
  41bd04:	b	41ba90 <find_percent_cached@@Base+0x4e8>
  41bd08:	ldr	x0, [x27]
  41bd0c:	bl	406680 <strlen@plt>
  41bd10:	mov	x4, x0
  41bd14:	mov	w2, #0x5                   	// #5
  41bd18:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bd1c:	mov	x0, #0x0                   	// #0
  41bd20:	add	x1, x1, #0x6f8
  41bd24:	str	x4, [sp, #104]
  41bd28:	bl	406cd0 <dcgettext@plt>
  41bd2c:	ldr	x3, [x27]
  41bd30:	mov	x2, x0
  41bd34:	ldr	x4, [sp, #104]
  41bd38:	mov	x0, x21
  41bd3c:	str	x4, [sp, #120]
  41bd40:	mov	x1, x4
  41bd44:	bl	419dc8 <error@@Base>
  41bd48:	ldr	x5, [x27, #32]
  41bd4c:	mov	w2, #0x5                   	// #5
  41bd50:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bd54:	mov	x0, #0x0                   	// #0
  41bd58:	add	x1, x1, #0x728
  41bd5c:	str	x5, [sp, #104]
  41bd60:	bl	406cd0 <dcgettext@plt>
  41bd64:	mov	x2, x0
  41bd68:	ldr	x3, [x27]
  41bd6c:	ldr	x5, [sp, #104]
  41bd70:	ldr	x4, [sp, #120]
  41bd74:	mov	x0, x5
  41bd78:	mov	x1, x4
  41bd7c:	bl	419dc8 <error@@Base>
  41bd80:	b	41bb00 <find_percent_cached@@Base+0x558>
  41bd84:	mov	x1, x0
  41bd88:	mov	x0, x25
  41bd8c:	bl	40d0d8 <enter_prereqs@@Base>
  41bd90:	mov	x25, x0
  41bd94:	cbnz	x25, 41bb84 <find_percent_cached@@Base+0x5dc>
  41bd98:	b	41bbac <find_percent_cached@@Base+0x604>
  41bd9c:	bl	40c7a8 <lookup_file@@Base>
  41bda0:	mov	x3, x0
  41bda4:	cbz	x0, 41bdb8 <find_percent_cached@@Base+0x810>
  41bda8:	ldrb	w0, [x0, #137]
  41bdac:	tbz	w0, #3, 41bdb8 <find_percent_cached@@Base+0x810>
  41bdb0:	ldr	x0, [x3, #104]
  41bdb4:	cbz	x0, 41c0e0 <find_percent_cached@@Base+0xb38>
  41bdb8:	ldr	x0, [sp, #136]
  41bdbc:	bl	422490 <strcache_add@@Base>
  41bdc0:	bl	40c820 <enter_file@@Base>
  41bdc4:	mov	x27, x0
  41bdc8:	ldr	x0, [x0, #104]
  41bdcc:	cbz	x0, 41bdfc <find_percent_cached@@Base+0x854>
  41bdd0:	str	x21, [x27, #32]
  41bdd4:	ldr	w0, [sp, #96]
  41bdd8:	cbz	w0, 41bb20 <find_percent_cached@@Base+0x578>
  41bddc:	mov	x0, #0x28                  	// #40
  41bde0:	bl	418a78 <xcalloc@@Base>
  41bde4:	ldr	x1, [x27]
  41bde8:	str	x27, [x0, #16]
  41bdec:	ldr	x2, [sp, #112]
  41bdf0:	stp	x2, x1, [x0]
  41bdf4:	str	x0, [sp, #112]
  41bdf8:	b	41bb20 <find_percent_cached@@Base+0x578>
  41bdfc:	str	x21, [x27, #32]
  41be00:	str	x27, [x27, #104]
  41be04:	b	41bdd4 <find_percent_cached@@Base+0x82c>
  41be08:	ldr	x0, [sp, #136]
  41be0c:	mov	x25, #0x0                   	// #0
  41be10:	bl	406680 <strlen@plt>
  41be14:	mov	x27, x0
  41be18:	mov	w2, #0x5                   	// #5
  41be1c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41be20:	mov	x0, #0x0                   	// #0
  41be24:	add	x1, x1, #0x660
  41be28:	bl	406cd0 <dcgettext@plt>
  41be2c:	mov	x2, x0
  41be30:	ldr	x3, [sp, #136]
  41be34:	mov	x1, x27
  41be38:	ldr	x0, [sp, #160]
  41be3c:	bl	419dc8 <error@@Base>
  41be40:	b	41bac4 <find_percent_cached@@Base+0x51c>
  41be44:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41be48:	add	x0, x0, #0x1
  41be4c:	add	x1, x1, #0x639
  41be50:	bl	406b40 <strcmp@plt>
  41be54:	cbnz	w0, 41ba64 <find_percent_cached@@Base+0x4bc>
  41be58:	mov	w0, #0x1                   	// #1
  41be5c:	str	w0, [x26]
  41be60:	b	41ba90 <find_percent_cached@@Base+0x4e8>
  41be64:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41be68:	add	x0, x0, #0x1
  41be6c:	add	x1, x1, #0x5e9
  41be70:	bl	406b40 <strcmp@plt>
  41be74:	cbnz	w0, 41ba3c <find_percent_cached@@Base+0x494>
  41be78:	adrp	x25, 443000 <expanding_var@@Base+0x338>
  41be7c:	mov	w8, #0x1                   	// #1
  41be80:	mov	x6, #0x0                   	// #0
  41be84:	mov	w4, #0x0                   	// #0
  41be88:	ldr	x1, [x25, #288]
  41be8c:	mov	w3, #0x0                   	// #0
  41be90:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  41be94:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  41be98:	add	x2, x2, #0x9b0
  41be9c:	add	x0, x0, #0x6a8
  41bea0:	ldr	x5, [x1, #8]
  41bea4:	mov	x1, #0xb                   	// #11
  41bea8:	str	w8, [x24]
  41beac:	bl	422df0 <define_variable_in_set@@Base>
  41beb0:	ldr	x1, [x25, #288]
  41beb4:	mov	x6, #0x0                   	// #0
  41beb8:	mov	w4, #0x0                   	// #0
  41bebc:	mov	w3, #0x0                   	// #0
  41bec0:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bec4:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  41bec8:	ldr	x5, [x1, #8]
  41becc:	add	x2, x2, #0x5f0
  41bed0:	mov	x1, #0x7                   	// #7
  41bed4:	add	x0, x0, #0x690
  41bed8:	bl	422df0 <define_variable_in_set@@Base>
  41bedc:	ldr	x1, [x25, #288]
  41bee0:	mov	x6, #0x0                   	// #0
  41bee4:	mov	w4, #0x0                   	// #0
  41bee8:	mov	w3, #0x0                   	// #0
  41beec:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bef0:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  41bef4:	ldr	x5, [x1, #8]
  41bef8:	add	x2, x2, #0x5f8
  41befc:	mov	x1, #0x2                   	// #2
  41bf00:	add	x0, x0, #0x6b0
  41bf04:	bl	422df0 <define_variable_in_set@@Base>
  41bf08:	ldr	x1, [x25, #288]
  41bf0c:	adrp	x8, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bf10:	add	x27, x8, #0x600
  41bf14:	mov	x6, #0x0                   	// #0
  41bf18:	mov	x2, x27
  41bf1c:	mov	w4, #0x0                   	// #0
  41bf20:	ldr	x5, [x1, #8]
  41bf24:	mov	w3, #0x0                   	// #0
  41bf28:	mov	x1, #0x6                   	// #6
  41bf2c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bf30:	add	x0, x0, #0x608
  41bf34:	bl	422df0 <define_variable_in_set@@Base>
  41bf38:	ldr	x1, [x25, #288]
  41bf3c:	mov	x6, #0x0                   	// #0
  41bf40:	mov	w4, #0x0                   	// #0
  41bf44:	mov	w3, #0x0                   	// #0
  41bf48:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bf4c:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  41bf50:	ldr	x5, [x1, #8]
  41bf54:	add	x2, x2, #0x610
  41bf58:	mov	x1, #0x2                   	// #2
  41bf5c:	add	x0, x0, #0x740
  41bf60:	bl	422df0 <define_variable_in_set@@Base>
  41bf64:	ldr	x1, [x25, #288]
  41bf68:	mov	x2, x27
  41bf6c:	mov	x6, #0x0                   	// #0
  41bf70:	mov	w4, #0x0                   	// #0
  41bf74:	mov	w3, #0x0                   	// #0
  41bf78:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bf7c:	ldr	x5, [x1, #8]
  41bf80:	add	x0, x0, #0x618
  41bf84:	mov	x1, #0x6                   	// #6
  41bf88:	bl	422df0 <define_variable_in_set@@Base>
  41bf8c:	ldr	x1, [x25, #288]
  41bf90:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bf94:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41bf98:	add	x2, x2, #0x620
  41bf9c:	mov	x6, #0x0                   	// #0
  41bfa0:	mov	w4, #0x0                   	// #0
  41bfa4:	ldr	x5, [x1, #8]
  41bfa8:	mov	w3, #0x0                   	// #0
  41bfac:	mov	x1, #0xc                   	// #12
  41bfb0:	add	x0, x0, #0x628
  41bfb4:	bl	422df0 <define_variable_in_set@@Base>
  41bfb8:	b	41ba90 <find_percent_cached@@Base+0x4e8>
  41bfbc:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  41bfc0:	ldr	x0, [x0, #2024]
  41bfc4:	cmp	x27, x0
  41bfc8:	b.ne	41bb04 <find_percent_cached@@Base+0x55c>  // b.any
  41bfcc:	cbnz	x25, 41bb18 <find_percent_cached@@Base+0x570>
  41bfd0:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  41bfd4:	str	xzr, [x27, #32]
  41bfd8:	cmp	x25, #0x0
  41bfdc:	ldr	x0, [x0, #2200]
  41bfe0:	ccmp	x0, x27, #0x0, eq  // eq = none
  41bfe4:	b.ne	41bb18 <find_percent_cached@@Base+0x570>  // b.any
  41bfe8:	ldr	x0, [x27, #24]
  41bfec:	bl	418fa0 <free_ns_chain@@Base>
  41bff0:	str	xzr, [x27, #24]
  41bff4:	b	41bb18 <find_percent_cached@@Base+0x570>
  41bff8:	ldr	x0, [x27]
  41bffc:	bl	406680 <strlen@plt>
  41c000:	mov	x3, x0
  41c004:	mov	w2, #0x5                   	// #5
  41c008:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41c00c:	mov	x0, #0x0                   	// #0
  41c010:	add	x1, x1, #0x6c0
  41c014:	str	x3, [sp, #104]
  41c018:	bl	406cd0 <dcgettext@plt>
  41c01c:	ldr	x3, [sp, #104]
  41c020:	mov	x2, x0
  41c024:	ldr	x0, [sp, #160]
  41c028:	mov	x1, x3
  41c02c:	ldr	x3, [x27]
  41c030:	bl	419dc8 <error@@Base>
  41c034:	b	41bb00 <find_percent_cached@@Base+0x558>
  41c038:	mov	x0, #0x8                   	// #8
  41c03c:	bl	418a50 <xmalloc@@Base>
  41c040:	mov	x23, x0
  41c044:	mov	x0, #0x8                   	// #8
  41c048:	bl	418a50 <xmalloc@@Base>
  41c04c:	mov	x20, x0
  41c050:	ldr	x0, [sp, #136]
  41c054:	str	x0, [x23]
  41c058:	mov	w19, #0x1                   	// #1
  41c05c:	str	x25, [x20]
  41c060:	b	41b964 <find_percent_cached@@Base+0x3bc>
  41c064:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41c068:	add	x1, x1, #0x5c8
  41c06c:	mov	w2, #0x5                   	// #5
  41c070:	bl	406cd0 <dcgettext@plt>
  41c074:	mov	x2, x0
  41c078:	ldr	x0, [sp, #160]
  41c07c:	mov	x1, #0x0                   	// #0
  41c080:	bl	41a060 <fatal@@Base>
  41c084:	ldr	x0, [x27]
  41c088:	bl	406680 <strlen@plt>
  41c08c:	mov	x19, x0
  41c090:	mov	w2, #0x5                   	// #5
  41c094:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41c098:	mov	x0, #0x0                   	// #0
  41c09c:	add	x1, x1, #0x690
  41c0a0:	bl	406cd0 <dcgettext@plt>
  41c0a4:	mov	x2, x0
  41c0a8:	ldr	x3, [x27]
  41c0ac:	mov	x1, x19
  41c0b0:	ldr	x0, [sp, #160]
  41c0b4:	bl	41a060 <fatal@@Base>
  41c0b8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41c0bc:	mov	w2, #0x5                   	// #5
  41c0c0:	add	x1, x1, #0x548
  41c0c4:	mov	x0, #0x0                   	// #0
  41c0c8:	b	41c070 <find_percent_cached@@Base+0xac8>
  41c0cc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41c0d0:	mov	w2, #0x5                   	// #5
  41c0d4:	add	x1, x1, #0x578
  41c0d8:	mov	x0, #0x0                   	// #0
  41c0dc:	b	41c070 <find_percent_cached@@Base+0xac8>
  41c0e0:	ldr	x0, [x3]
  41c0e4:	str	x3, [sp, #96]
  41c0e8:	bl	406680 <strlen@plt>
  41c0ec:	mov	x19, x0
  41c0f0:	mov	w2, #0x5                   	// #5
  41c0f4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41c0f8:	mov	x0, #0x0                   	// #0
  41c0fc:	add	x1, x1, #0x690
  41c100:	bl	406cd0 <dcgettext@plt>
  41c104:	mov	x2, x0
  41c108:	ldr	x3, [sp, #96]
  41c10c:	mov	x1, x19
  41c110:	ldr	x0, [sp, #160]
  41c114:	ldr	x3, [x3]
  41c118:	bl	41a060 <fatal@@Base>
  41c11c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41c120:	mov	w2, #0x5                   	// #5
  41c124:	add	x1, x1, #0x5a0
  41c128:	mov	x0, #0x0                   	// #0
  41c12c:	b	41c070 <find_percent_cached@@Base+0xac8>

000000000041c130 <tilde_expand@@Base>:
  41c130:	stp	x29, x30, [sp, #-48]!
  41c134:	mov	x29, sp
  41c138:	stp	x19, x20, [sp, #16]
  41c13c:	mov	x19, x0
  41c140:	ldrb	w0, [x0, #1]
  41c144:	cmp	w0, #0x2f
  41c148:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  41c14c:	b.eq	41c200 <tilde_expand@@Base+0xd0>  // b.none
  41c150:	add	x19, x19, #0x1
  41c154:	mov	w1, #0x2f                  	// #47
  41c158:	mov	x0, x19
  41c15c:	bl	406bb0 <strchr@plt>
  41c160:	mov	x20, x0
  41c164:	cbz	x0, 41c1a0 <tilde_expand@@Base+0x70>
  41c168:	strb	wzr, [x0]
  41c16c:	mov	x0, x19
  41c170:	bl	4069b0 <getpwnam@plt>
  41c174:	mov	x19, x0
  41c178:	cbz	x0, 41c258 <tilde_expand@@Base+0x128>
  41c17c:	ldr	x1, [x19, #32]
  41c180:	add	x3, x20, #0x1
  41c184:	adrp	x2, 427000 <_IO_stdin_used@@Base+0xc20>
  41c188:	mov	w0, #0x3                   	// #3
  41c18c:	add	x2, x2, #0x8f0
  41c190:	bl	418ad8 <concat@@Base>
  41c194:	ldp	x19, x20, [sp, #16]
  41c198:	ldp	x29, x30, [sp], #48
  41c19c:	b	418c60 <xstrdup@@Base>
  41c1a0:	mov	x0, x19
  41c1a4:	bl	4069b0 <getpwnam@plt>
  41c1a8:	cbz	x0, 41c1ec <tilde_expand@@Base+0xbc>
  41c1ac:	ldp	x19, x20, [sp, #16]
  41c1b0:	ldp	x29, x30, [sp], #48
  41c1b4:	ldr	x0, [x0, #32]
  41c1b8:	b	418c60 <xstrdup@@Base>
  41c1bc:	bl	406b90 <free@plt>
  41c1c0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41c1c4:	add	x0, x0, #0x7d0
  41c1c8:	bl	406d80 <getenv@plt>
  41c1cc:	cbnz	x0, 41c270 <tilde_expand@@Base+0x140>
  41c1d0:	bl	406dc0 <getlogin@plt>
  41c1d4:	cbz	x0, 41c1e8 <tilde_expand@@Base+0xb8>
  41c1d8:	bl	4069b0 <getpwnam@plt>
  41c1dc:	cbz	x0, 41c1e8 <tilde_expand@@Base+0xb8>
  41c1e0:	ldr	x1, [x0, #32]
  41c1e4:	cbnz	x1, 41c284 <tilde_expand@@Base+0x154>
  41c1e8:	ldr	x21, [sp, #32]
  41c1ec:	mov	x19, #0x0                   	// #0
  41c1f0:	mov	x0, x19
  41c1f4:	ldp	x19, x20, [sp, #16]
  41c1f8:	ldp	x29, x30, [sp], #48
  41c1fc:	ret
  41c200:	adrp	x20, 446000 <commands_started@@Base+0x1c8>
  41c204:	str	x21, [sp, #32]
  41c208:	mov	x1, #0x0                   	// #0
  41c20c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41c210:	ldr	w21, [x20, #2048]
  41c214:	add	x0, x0, #0x7c8
  41c218:	str	wzr, [x20, #2048]
  41c21c:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  41c220:	str	w21, [x20, #2048]
  41c224:	mov	x20, x0
  41c228:	ldrb	w1, [x0]
  41c22c:	cbz	w1, 41c1bc <tilde_expand@@Base+0x8c>
  41c230:	add	x2, x19, #0x1
  41c234:	mov	x1, x0
  41c238:	mov	w0, #0x2                   	// #2
  41c23c:	bl	418ad8 <concat@@Base>
  41c240:	bl	418c60 <xstrdup@@Base>
  41c244:	mov	x19, x0
  41c248:	mov	x0, x20
  41c24c:	bl	406b90 <free@plt>
  41c250:	ldr	x21, [sp, #32]
  41c254:	b	41c1f0 <tilde_expand@@Base+0xc0>
  41c258:	mov	w0, #0x2f                  	// #47
  41c25c:	strb	w0, [x20]
  41c260:	mov	x0, x19
  41c264:	ldp	x19, x20, [sp, #16]
  41c268:	ldp	x29, x30, [sp], #48
  41c26c:	ret
  41c270:	ldrb	w1, [x0]
  41c274:	cbz	w1, 41c1d0 <tilde_expand@@Base+0xa0>
  41c278:	add	x2, x19, #0x1
  41c27c:	mov	x1, x0
  41c280:	b	41c288 <tilde_expand@@Base+0x158>
  41c284:	add	x2, x19, #0x1
  41c288:	mov	w0, #0x2                   	// #2
  41c28c:	bl	418ad8 <concat@@Base>
  41c290:	ldp	x19, x20, [sp, #16]
  41c294:	ldr	x21, [sp, #32]
  41c298:	ldp	x29, x30, [sp], #48
  41c29c:	b	418c60 <xstrdup@@Base>

000000000041c2a0 <construct_include_path@@Base>:
  41c2a0:	stp	x29, x30, [sp, #-208]!
  41c2a4:	mov	x29, sp
  41c2a8:	stp	x19, x20, [sp, #16]
  41c2ac:	stp	x21, x22, [sp, #32]
  41c2b0:	stp	x23, x24, [sp, #48]
  41c2b4:	stp	x25, x26, [sp, #64]
  41c2b8:	cbz	x0, 41c4e8 <construct_include_path@@Base+0x248>
  41c2bc:	mov	x24, x0
  41c2c0:	ldr	x0, [x0]
  41c2c4:	cbz	x0, 41c508 <construct_include_path@@Base+0x268>
  41c2c8:	sub	x2, x24, #0x28
  41c2cc:	mov	x0, #0x5                   	// #5
  41c2d0:	add	x0, x0, #0x1
  41c2d4:	ldr	x1, [x2, x0, lsl #3]
  41c2d8:	cbnz	x1, 41c2d0 <construct_include_path@@Base+0x30>
  41c2dc:	lsl	x0, x0, #3
  41c2e0:	bl	418a50 <xmalloc@@Base>
  41c2e4:	mov	x21, #0x0                   	// #0
  41c2e8:	adrp	x1, 445000 <output_context@@Base+0x1250>
  41c2ec:	mov	x20, x0
  41c2f0:	ldr	x23, [x24]
  41c2f4:	str	xzr, [x1, #3512]
  41c2f8:	add	x22, x1, #0xdb8
  41c2fc:	cbz	x23, 41c370 <construct_include_path@@Base+0xd0>
  41c300:	add	x19, sp, #0x50
  41c304:	mov	x21, #0x0                   	// #0
  41c308:	ldrb	w0, [x23]
  41c30c:	add	x24, x24, #0x8
  41c310:	mov	x25, #0x0                   	// #0
  41c314:	cmp	w0, #0x7e
  41c318:	b.ne	41c330 <construct_include_path@@Base+0x90>  // b.any
  41c31c:	b	41c42c <construct_include_path@@Base+0x18c>
  41c320:	bl	406d70 <__errno_location@plt>
  41c324:	ldr	w1, [x0]
  41c328:	cmp	w1, #0x4
  41c32c:	b.ne	41c35c <construct_include_path@@Base+0xbc>  // b.any
  41c330:	mov	x2, x19
  41c334:	mov	x1, x23
  41c338:	mov	w0, #0x0                   	// #0
  41c33c:	bl	406d90 <__xstat@plt>
  41c340:	cmn	w0, #0x1
  41c344:	b.eq	41c320 <construct_include_path@@Base+0x80>  // b.none
  41c348:	cbnz	w0, 41c35c <construct_include_path@@Base+0xbc>
  41c34c:	ldr	w0, [sp, #96]
  41c350:	and	w0, w0, #0xf000
  41c354:	cmp	w0, #0x4, lsl #12
  41c358:	b.eq	41c498 <construct_include_path@@Base+0x1f8>  // b.none
  41c35c:	mov	x0, x25
  41c360:	bl	406b90 <free@plt>
  41c364:	ldr	x23, [x24]
  41c368:	cbnz	x23, 41c308 <construct_include_path@@Base+0x68>
  41c36c:	add	x0, x20, x21, lsl #3
  41c370:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  41c374:	add	x1, x1, #0xb0
  41c378:	add	x23, x1, #0x8
  41c37c:	add	x19, sp, #0x50
  41c380:	ldr	x1, [x1, #8]
  41c384:	cbnz	x1, 41c3a0 <construct_include_path@@Base+0x100>
  41c388:	b	41c3d4 <construct_include_path@@Base+0x134>
  41c38c:	bl	406d70 <__errno_location@plt>
  41c390:	ldr	w1, [x0]
  41c394:	cmp	w1, #0x4
  41c398:	b.ne	41c3c8 <construct_include_path@@Base+0x128>  // b.any
  41c39c:	ldr	x1, [x23]
  41c3a0:	mov	x2, x19
  41c3a4:	mov	w0, #0x0                   	// #0
  41c3a8:	bl	406d90 <__xstat@plt>
  41c3ac:	cmn	w0, #0x1
  41c3b0:	b.eq	41c38c <construct_include_path@@Base+0xec>  // b.none
  41c3b4:	cbnz	w0, 41c3c8 <construct_include_path@@Base+0x128>
  41c3b8:	ldr	w0, [sp, #96]
  41c3bc:	and	w0, w0, #0xf000
  41c3c0:	cmp	w0, #0x4, lsl #12
  41c3c4:	b.eq	41c444 <construct_include_path@@Base+0x1a4>  // b.none
  41c3c8:	ldr	x1, [x23, #8]!
  41c3cc:	cbnz	x1, 41c3a0 <construct_include_path@@Base+0x100>
  41c3d0:	add	x0, x20, x21, lsl #3
  41c3d4:	str	xzr, [x0]
  41c3d8:	adrp	x21, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41c3dc:	mov	x19, x20
  41c3e0:	add	x21, x21, #0x7d8
  41c3e4:	ldr	x2, [x20]
  41c3e8:	cbz	x2, 41c410 <construct_include_path@@Base+0x170>
  41c3ec:	nop
  41c3f0:	mov	x1, x21
  41c3f4:	mov	w5, #0x0                   	// #0
  41c3f8:	mov	w4, #0x3                   	// #3
  41c3fc:	mov	w3, #0x0                   	// #0
  41c400:	mov	x0, #0x0                   	// #0
  41c404:	bl	423ea0 <do_variable_definition@@Base>
  41c408:	ldr	x2, [x19, #8]!
  41c40c:	cbnz	x2, 41c3f0 <construct_include_path@@Base+0x150>
  41c410:	str	x20, [x22, #8]
  41c414:	ldp	x19, x20, [sp, #16]
  41c418:	ldp	x21, x22, [sp, #32]
  41c41c:	ldp	x23, x24, [sp, #48]
  41c420:	ldp	x25, x26, [sp, #64]
  41c424:	ldp	x29, x30, [sp], #208
  41c428:	ret
  41c42c:	mov	x0, x23
  41c430:	bl	41c130 <tilde_expand@@Base>
  41c434:	cmp	x0, #0x0
  41c438:	mov	x25, x0
  41c43c:	csel	x23, x23, x0, eq  // eq = none
  41c440:	b	41c330 <construct_include_path@@Base+0x90>
  41c444:	ldr	x24, [x23]
  41c448:	mov	x0, x24
  41c44c:	bl	406680 <strlen@plt>
  41c450:	mov	x1, x0
  41c454:	b	41c468 <construct_include_path@@Base+0x1c8>
  41c458:	ldrb	w2, [x24, x0]
  41c45c:	cmp	w2, #0x2f
  41c460:	b.ne	41c470 <construct_include_path@@Base+0x1d0>  // b.any
  41c464:	mov	x1, x0
  41c468:	subs	x0, x1, #0x1
  41c46c:	b.hi	41c458 <construct_include_path@@Base+0x1b8>  // b.pmore
  41c470:	ldr	x0, [x22]
  41c474:	cmp	x0, x1
  41c478:	b.cs	41c480 <construct_include_path@@Base+0x1e0>  // b.hs, b.nlast
  41c47c:	str	x1, [x22]
  41c480:	add	x25, x21, #0x1
  41c484:	mov	x0, x24
  41c488:	bl	4224d0 <strcache_add_len@@Base>
  41c48c:	str	x0, [x20, x21, lsl #3]
  41c490:	mov	x21, x25
  41c494:	b	41c3c8 <construct_include_path@@Base+0x128>
  41c498:	mov	x0, x23
  41c49c:	bl	406680 <strlen@plt>
  41c4a0:	mov	x1, x0
  41c4a4:	b	41c4b8 <construct_include_path@@Base+0x218>
  41c4a8:	ldrb	w2, [x23, x0]
  41c4ac:	cmp	w2, #0x2f
  41c4b0:	b.ne	41c4c0 <construct_include_path@@Base+0x220>  // b.any
  41c4b4:	mov	x1, x0
  41c4b8:	subs	x0, x1, #0x1
  41c4bc:	b.hi	41c4a8 <construct_include_path@@Base+0x208>  // b.pmore
  41c4c0:	ldr	x0, [x22]
  41c4c4:	cmp	x0, x1
  41c4c8:	b.cs	41c4d0 <construct_include_path@@Base+0x230>  // b.hs, b.nlast
  41c4cc:	str	x1, [x22]
  41c4d0:	add	x26, x21, #0x1
  41c4d4:	mov	x0, x23
  41c4d8:	bl	4224d0 <strcache_add_len@@Base>
  41c4dc:	str	x0, [x20, x21, lsl #3]
  41c4e0:	mov	x21, x26
  41c4e4:	b	41c35c <construct_include_path@@Base+0xbc>
  41c4e8:	mov	x0, #0x28                  	// #40
  41c4ec:	bl	418a50 <xmalloc@@Base>
  41c4f0:	adrp	x1, 445000 <output_context@@Base+0x1250>
  41c4f4:	mov	x20, x0
  41c4f8:	add	x22, x1, #0xdb8
  41c4fc:	mov	x21, #0x0                   	// #0
  41c500:	str	xzr, [x1, #3512]
  41c504:	b	41c370 <construct_include_path@@Base+0xd0>
  41c508:	mov	x0, #0x28                  	// #40
  41c50c:	b	41c2e0 <construct_include_path@@Base+0x40>

000000000041c510 <parse_file_seq@@Base>:
  41c510:	stp	x29, x30, [sp, #-304]!
  41c514:	orr	w5, w2, #0x1
  41c518:	tst	x4, #0x20
  41c51c:	mov	x29, sp
  41c520:	orr	w2, w2, #0x3
  41c524:	stp	x25, x26, [sp, #64]
  41c528:	mov	x26, x1
  41c52c:	csel	w1, w2, w5, eq  // eq = none
  41c530:	cmp	x26, #0x10
  41c534:	str	x0, [sp, #184]
  41c538:	mov	x0, #0x10                  	// #16
  41c53c:	csel	x26, x26, x0, cs  // cs = hs, nlast
  41c540:	and	w0, w4, #0x4
  41c544:	stp	x19, x20, [sp, #16]
  41c548:	mov	x19, x3
  41c54c:	stp	x21, x22, [sp, #32]
  41c550:	and	w21, w4, #0x10
  41c554:	stp	x23, x24, [sp, #48]
  41c558:	stp	x27, x28, [sp, #80]
  41c55c:	str	w4, [sp, #128]
  41c560:	str	w1, [sp, #136]
  41c564:	str	w5, [sp, #176]
  41c568:	str	w0, [sp, #180]
  41c56c:	str	xzr, [sp, #200]
  41c570:	tbz	w4, #2, 41cb00 <parse_file_seq@@Base+0x5f0>
  41c574:	ldr	x0, [sp, #184]
  41c578:	ldr	x20, [x0]
  41c57c:	mov	x0, x20
  41c580:	bl	406680 <strlen@plt>
  41c584:	adrp	x1, 445000 <output_context@@Base+0x1250>
  41c588:	add	x1, x1, #0xdb8
  41c58c:	add	x22, x0, #0x1
  41c590:	str	x1, [sp, #168]
  41c594:	ldr	x0, [x1, #24]
  41c598:	ldr	x1, [x1, #16]
  41c59c:	str	x1, [sp, #120]
  41c5a0:	cmp	x0, x22
  41c5a4:	b.cc	41cadc <parse_file_seq@@Base+0x5cc>  // b.lo, b.ul, b.last
  41c5a8:	adrp	x25, 443000 <expanding_var@@Base+0x338>
  41c5ac:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  41c5b0:	add	x25, x25, #0x448
  41c5b4:	add	x0, x0, #0x880
  41c5b8:	add	x24, sp, #0xc8
  41c5bc:	str	x0, [sp, #152]
  41c5c0:	adrp	x0, 426000 <rpl_fcntl@@Base+0xf0>
  41c5c4:	add	x0, x0, #0x3f8
  41c5c8:	str	x0, [sp, #160]
  41c5cc:	nop
  41c5d0:	stp	xzr, xzr, [sp, #216]
  41c5d4:	ldrb	w0, [x20]
  41c5d8:	ldrh	w0, [x25, x0, lsl #1]
  41c5dc:	tst	w0, #0x6
  41c5e0:	b.eq	41c5f8 <parse_file_seq@@Base+0xe8>  // b.none
  41c5e4:	nop
  41c5e8:	ldrb	w0, [x20, #1]!
  41c5ec:	ldrh	w0, [x25, x0, lsl #1]
  41c5f0:	tst	w0, #0x6
  41c5f4:	b.ne	41c5e8 <parse_file_seq@@Base+0xd8>  // b.any
  41c5f8:	ldr	w1, [sp, #176]
  41c5fc:	mov	x22, x20
  41c600:	tst	w1, w0
  41c604:	b.ne	41caac <parse_file_seq@@Base+0x59c>  // b.any
  41c608:	ldr	w1, [sp, #136]
  41c60c:	mov	x0, x20
  41c610:	bl	41ae08 <out_of_memory@@Base+0xc10>
  41c614:	mov	x20, x0
  41c618:	cbz	x0, 41c938 <parse_file_seq@@Base+0x428>
  41c61c:	ldr	x0, [sp, #128]
  41c620:	tbz	w0, #0, 41c818 <parse_file_seq@@Base+0x308>
  41c624:	cmp	x20, x22
  41c628:	b.eq	41c920 <parse_file_seq@@Base+0x410>  // b.none
  41c62c:	sub	x27, x20, x22
  41c630:	mov	x1, x22
  41c634:	ldr	x22, [sp, #120]
  41c638:	mov	x2, x27
  41c63c:	mov	x0, x22
  41c640:	bl	406640 <memcpy@plt>
  41c644:	strb	wzr, [x22, x27]
  41c648:	ldr	w0, [sp, #128]
  41c64c:	ldr	x1, [sp, #168]
  41c650:	and	w22, w0, #0x2
  41c654:	ldr	x23, [x1, #16]
  41c658:	tbnz	w0, #1, 41c668 <parse_file_seq@@Base+0x158>
  41c65c:	ldr	x0, [sp, #120]
  41c660:	cmp	x0, x23
  41c664:	b.eq	41c9c8 <parse_file_seq@@Base+0x4b8>  // b.none
  41c668:	ldr	x0, [sp, #120]
  41c66c:	cmp	x0, x23
  41c670:	b.ls	41c694 <parse_file_seq@@Base+0x184>  // b.plast
  41c674:	add	x0, x0, x27
  41c678:	ldurb	w1, [x0, #-1]
  41c67c:	cmp	w1, #0x29
  41c680:	b.eq	41c9b8 <parse_file_seq@@Base+0x4a8>  // b.none
  41c684:	ldr	x2, [sp, #120]
  41c688:	mov	w1, #0x29                  	// #41
  41c68c:	strb	w1, [x2, x27]
  41c690:	strb	wzr, [x0, #1]
  41c694:	ldr	w0, [sp, #180]
  41c698:	cbnz	w0, 41c97c <parse_file_seq@@Base+0x46c>
  41c69c:	ldrb	w0, [x23]
  41c6a0:	str	xzr, [sp, #144]
  41c6a4:	str	x23, [sp, #208]
  41c6a8:	cmp	w0, #0x7e
  41c6ac:	b.eq	41c860 <parse_file_seq@@Base+0x350>  // b.none
  41c6b0:	cbz	w22, 41c880 <parse_file_seq@@Base+0x370>
  41c6b4:	ldr	w0, [sp, #128]
  41c6b8:	and	w1, w0, #0x8
  41c6bc:	str	w1, [sp, #140]
  41c6c0:	tbnz	w0, #3, 41c8b4 <parse_file_seq@@Base+0x3a4>
  41c6c4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41c6c8:	mov	x0, x23
  41c6cc:	add	x1, x1, #0x7e8
  41c6d0:	bl	406990 <strpbrk@plt>
  41c6d4:	cbz	x0, 41c948 <parse_file_seq@@Base+0x438>
  41c6d8:	add	x22, sp, #0xe8
  41c6dc:	mov	x0, x23
  41c6e0:	mov	x3, x22
  41c6e4:	mov	x2, #0x0                   	// #0
  41c6e8:	mov	w1, #0x200                 	// #512
  41c6ec:	bl	406d00 <glob@plt>
  41c6f0:	cbz	w0, 41c95c <parse_file_seq@@Base+0x44c>
  41c6f4:	cmp	w0, #0x1
  41c6f8:	b.eq	41cb28 <parse_file_seq@@Base+0x618>  // b.none
  41c6fc:	mov	w0, #0x1                   	// #1
  41c700:	add	x27, sp, #0xd0
  41c704:	mov	w1, w0
  41c708:	mov	x0, x23
  41c70c:	str	w1, [sp, #108]
  41c710:	str	w1, [sp, #140]
  41c714:	ldr	x1, [sp, #224]
  41c718:	mov	x22, #0x0                   	// #0
  41c71c:	cbz	x1, 41c7ac <parse_file_seq@@Base+0x29c>
  41c720:	mov	x2, x26
  41c724:	bl	408dc0 <ar_glob@@Base>
  41c728:	mov	x28, x0
  41c72c:	cbz	x0, 41c8e0 <parse_file_seq@@Base+0x3d0>
  41c730:	ldr	x0, [x24]
  41c734:	cbz	x0, 41c918 <parse_file_seq@@Base+0x408>
  41c738:	str	x28, [x0]
  41c73c:	cbnz	w21, 41c76c <parse_file_seq@@Base+0x25c>
  41c740:	cbz	x19, 41c75c <parse_file_seq@@Base+0x24c>
  41c744:	mov	x2, x23
  41c748:	mov	x1, x19
  41c74c:	mov	w0, #0x2                   	// #2
  41c750:	bl	418ad8 <concat@@Base>
  41c754:	bl	422490 <strcache_add@@Base>
  41c758:	str	x0, [x28, #8]
  41c75c:	ldr	x0, [x28]
  41c760:	cbz	x0, 41c78c <parse_file_seq@@Base+0x27c>
  41c764:	mov	x28, x0
  41c768:	cbz	w21, 41c740 <parse_file_seq@@Base+0x230>
  41c76c:	mov	x2, x23
  41c770:	mov	x1, x19
  41c774:	mov	w0, #0x2                   	// #2
  41c778:	bl	418ad8 <concat@@Base>
  41c77c:	bl	418c60 <xstrdup@@Base>
  41c780:	str	x0, [x28, #8]
  41c784:	ldr	x0, [x28]
  41c788:	cbnz	x0, 41c764 <parse_file_seq@@Base+0x254>
  41c78c:	ldr	w0, [sp, #108]
  41c790:	add	x22, x22, #0x1
  41c794:	mov	x24, x28
  41c798:	cmp	w0, w22
  41c79c:	b.le	41c7fc <parse_file_seq@@Base+0x2ec>
  41c7a0:	ldr	x1, [sp, #224]
  41c7a4:	ldr	x0, [x27, x22, lsl #3]
  41c7a8:	cbnz	x1, 41c720 <parse_file_seq@@Base+0x210>
  41c7ac:	mov	x1, x19
  41c7b0:	mov	x2, x0
  41c7b4:	mov	w0, #0x2                   	// #2
  41c7b8:	bl	418ad8 <concat@@Base>
  41c7bc:	mov	x1, x0
  41c7c0:	mov	x0, x26
  41c7c4:	str	x1, [sp, #112]
  41c7c8:	bl	418a78 <xcalloc@@Base>
  41c7cc:	str	x0, [x24]
  41c7d0:	ldr	x1, [sp, #112]
  41c7d4:	mov	x0, x1
  41c7d8:	cbz	w21, 41c910 <parse_file_seq@@Base+0x400>
  41c7dc:	bl	418c60 <xstrdup@@Base>
  41c7e0:	ldr	x1, [x24]
  41c7e4:	add	x22, x22, #0x1
  41c7e8:	mov	x24, x1
  41c7ec:	str	x0, [x1, #8]
  41c7f0:	ldr	w0, [sp, #108]
  41c7f4:	cmp	w0, w22
  41c7f8:	b.gt	41c7a0 <parse_file_seq@@Base+0x290>
  41c7fc:	ldr	w0, [sp, #140]
  41c800:	cbnz	w0, 41ca9c <parse_file_seq@@Base+0x58c>
  41c804:	ldr	x0, [sp, #216]
  41c808:	bl	406b90 <free@plt>
  41c80c:	ldr	x0, [sp, #144]
  41c810:	bl	406b90 <free@plt>
  41c814:	b	41c5d0 <parse_file_seq@@Base+0xc0>
  41c818:	sub	x0, x20, x22
  41c81c:	cmp	x0, #0x2
  41c820:	b.le	41c624 <parse_file_seq@@Base+0x114>
  41c824:	ldrb	w0, [x22]
  41c828:	cmp	w0, #0x2e
  41c82c:	b.ne	41c624 <parse_file_seq@@Base+0x114>  // b.any
  41c830:	ldrb	w0, [x22, #1]
  41c834:	cmp	w0, #0x2f
  41c838:	b.ne	41c624 <parse_file_seq@@Base+0x114>  // b.any
  41c83c:	ldrb	w0, [x22, #2]
  41c840:	add	x22, x22, #0x2
  41c844:	cmp	w0, #0x2f
  41c848:	b.ne	41c818 <parse_file_seq@@Base+0x308>  // b.any
  41c84c:	nop
  41c850:	ldrb	w0, [x22, #1]!
  41c854:	cmp	w0, #0x2f
  41c858:	b.eq	41c850 <parse_file_seq@@Base+0x340>  // b.none
  41c85c:	b	41c818 <parse_file_seq@@Base+0x308>
  41c860:	mov	x0, x23
  41c864:	bl	41c130 <tilde_expand@@Base>
  41c868:	str	x0, [sp, #144]
  41c86c:	cbz	x0, 41c6b0 <parse_file_seq@@Base+0x1a0>
  41c870:	str	x0, [sp, #208]
  41c874:	mov	x23, x0
  41c878:	cbnz	w22, 41c6b4 <parse_file_seq@@Base+0x1a4>
  41c87c:	nop
  41c880:	mov	x0, x23
  41c884:	bl	408a60 <ar_name@@Base>
  41c888:	cbz	w0, 41c6b4 <parse_file_seq@@Base+0x1a4>
  41c88c:	mov	x0, x23
  41c890:	add	x1, sp, #0xd8
  41c894:	add	x2, sp, #0xe0
  41c898:	bl	408b10 <ar_parse_name@@Base>
  41c89c:	ldr	w0, [sp, #128]
  41c8a0:	ldr	x23, [sp, #216]
  41c8a4:	and	w1, w0, #0x8
  41c8a8:	str	w1, [sp, #140]
  41c8ac:	str	x23, [sp, #208]
  41c8b0:	tbz	w0, #3, 41c6c4 <parse_file_seq@@Base+0x1b4>
  41c8b4:	add	x22, sp, #0xe8
  41c8b8:	mov	x0, x23
  41c8bc:	mov	x3, x22
  41c8c0:	mov	x2, #0x0                   	// #0
  41c8c4:	mov	w1, #0x200                 	// #512
  41c8c8:	bl	406d00 <glob@plt>
  41c8cc:	cmp	w0, #0x3
  41c8d0:	b.ne	41ca8c <parse_file_seq@@Base+0x57c>  // b.any
  41c8d4:	mov	x0, x22
  41c8d8:	bl	406bc0 <globfree@plt>
  41c8dc:	b	41c804 <parse_file_seq@@Base+0x2f4>
  41c8e0:	ldp	x5, x3, [sp, #152]
  41c8e4:	mov	x1, x19
  41c8e8:	ldr	x2, [x27, x22, lsl #3]
  41c8ec:	mov	w0, #0x5                   	// #5
  41c8f0:	ldr	x4, [sp, #224]
  41c8f4:	bl	418ad8 <concat@@Base>
  41c8f8:	mov	x28, x0
  41c8fc:	mov	x0, x26
  41c900:	bl	418a78 <xcalloc@@Base>
  41c904:	str	x0, [x24]
  41c908:	mov	x0, x28
  41c90c:	cbnz	w21, 41c7dc <parse_file_seq@@Base+0x2cc>
  41c910:	bl	422490 <strcache_add@@Base>
  41c914:	b	41c7e0 <parse_file_seq@@Base+0x2d0>
  41c918:	str	x28, [x24]
  41c91c:	b	41c73c <parse_file_seq@@Base+0x22c>
  41c920:	ldr	x1, [sp, #120]
  41c924:	mov	w0, #0x2f2e                	// #12078
  41c928:	mov	x27, #0x2                   	// #2
  41c92c:	strh	w0, [x1]
  41c930:	strb	wzr, [x1, #2]
  41c934:	b	41c648 <parse_file_seq@@Base+0x138>
  41c938:	mov	x0, x22
  41c93c:	bl	406680 <strlen@plt>
  41c940:	add	x20, x22, x0
  41c944:	b	41c61c <parse_file_seq@@Base+0x10c>
  41c948:	mov	w1, #0x1                   	// #1
  41c94c:	mov	x0, x23
  41c950:	add	x27, sp, #0xd0
  41c954:	str	w1, [sp, #108]
  41c958:	b	41c714 <parse_file_seq@@Base+0x204>
  41c95c:	ldp	x28, x27, [sp, #232]
  41c960:	str	w28, [sp, #108]
  41c964:	cmp	w28, #0x0
  41c968:	b.le	41c8d4 <parse_file_seq@@Base+0x3c4>
  41c96c:	mov	w0, #0x1                   	// #1
  41c970:	str	w0, [sp, #140]
  41c974:	ldr	x0, [x27]
  41c978:	b	41c714 <parse_file_seq@@Base+0x204>
  41c97c:	mov	x2, x23
  41c980:	mov	x1, x19
  41c984:	mov	w0, #0x2                   	// #2
  41c988:	bl	418ad8 <concat@@Base>
  41c98c:	mov	x22, x0
  41c990:	mov	x0, x26
  41c994:	bl	418a78 <xcalloc@@Base>
  41c998:	str	x0, [x24]
  41c99c:	mov	x0, x22
  41c9a0:	cbnz	w21, 41ca94 <parse_file_seq@@Base+0x584>
  41c9a4:	bl	422490 <strcache_add@@Base>
  41c9a8:	ldr	x1, [x24]
  41c9ac:	mov	x24, x1
  41c9b0:	str	x0, [x1, #8]
  41c9b4:	b	41c5d0 <parse_file_seq@@Base+0xc0>
  41c9b8:	str	x23, [sp, #120]
  41c9bc:	cmp	x27, #0x1
  41c9c0:	b.ne	41c694 <parse_file_seq@@Base+0x184>  // b.any
  41c9c4:	b	41c5d0 <parse_file_seq@@Base+0xc0>
  41c9c8:	mov	x2, x0
  41c9cc:	ldrb	w0, [x0]
  41c9d0:	cmp	w0, #0x28
  41c9d4:	b.eq	41c694 <parse_file_seq@@Base+0x184>  // b.none
  41c9d8:	add	x0, x2, x27
  41c9dc:	ldurb	w0, [x0, #-1]
  41c9e0:	cmp	w0, #0x29
  41c9e4:	b.eq	41c694 <parse_file_seq@@Base+0x184>  // b.none
  41c9e8:	mov	x0, x2
  41c9ec:	mov	w1, #0x28                  	// #40
  41c9f0:	bl	406bb0 <strchr@plt>
  41c9f4:	mov	x4, x0
  41c9f8:	mov	x2, x20
  41c9fc:	cbz	x0, 41c694 <parse_file_seq@@Base+0x184>
  41ca00:	ldrb	w0, [x2]
  41ca04:	ldrh	w0, [x25, x0, lsl #1]
  41ca08:	tst	w0, #0x6
  41ca0c:	b.eq	41ca78 <parse_file_seq@@Base+0x568>  // b.none
  41ca10:	mov	x0, x2
  41ca14:	nop
  41ca18:	ldrb	w1, [x0, #1]!
  41ca1c:	ldrh	w3, [x25, w1, sxtw #1]
  41ca20:	tst	w3, #0x6
  41ca24:	b.ne	41ca18 <parse_file_seq@@Base+0x508>  // b.any
  41ca28:	ldr	w5, [sp, #136]
  41ca2c:	tst	w3, w5
  41ca30:	b.ne	41ca4c <parse_file_seq@@Base+0x53c>  // b.any
  41ca34:	nop
  41ca38:	ldrb	w1, [x0, #1]!
  41ca3c:	ldr	w5, [sp, #136]
  41ca40:	ldrh	w3, [x25, w1, sxtw #1]
  41ca44:	tst	w3, w5
  41ca48:	b.eq	41ca38 <parse_file_seq@@Base+0x528>  // b.none
  41ca4c:	cmp	x2, x0
  41ca50:	b.eq	41cad4 <parse_file_seq@@Base+0x5c4>  // b.none
  41ca54:	ldurb	w2, [x0, #-1]
  41ca58:	cmp	w2, #0x29
  41ca5c:	b.eq	41cb0c <parse_file_seq@@Base+0x5fc>  // b.none
  41ca60:	cbz	w1, 41cad4 <parse_file_seq@@Base+0x5c4>
  41ca64:	mov	x2, x0
  41ca68:	ldrb	w0, [x2]
  41ca6c:	ldrh	w0, [x25, x0, lsl #1]
  41ca70:	tst	w0, #0x6
  41ca74:	b.ne	41ca10 <parse_file_seq@@Base+0x500>  // b.any
  41ca78:	ldr	w1, [sp, #136]
  41ca7c:	tst	w0, w1
  41ca80:	b.ne	41cad4 <parse_file_seq@@Base+0x5c4>  // b.any
  41ca84:	mov	x0, x2
  41ca88:	b	41ca38 <parse_file_seq@@Base+0x528>
  41ca8c:	b.le	41c6f0 <parse_file_seq@@Base+0x1e0>
  41ca90:	b	41c6fc <parse_file_seq@@Base+0x1ec>
  41ca94:	bl	418c60 <xstrdup@@Base>
  41ca98:	b	41c9a8 <parse_file_seq@@Base+0x498>
  41ca9c:	add	x22, sp, #0xe8
  41caa0:	mov	x0, x22
  41caa4:	bl	406bc0 <globfree@plt>
  41caa8:	b	41c804 <parse_file_seq@@Base+0x2f4>
  41caac:	ldr	x0, [sp, #184]
  41cab0:	ldp	x21, x22, [sp, #32]
  41cab4:	ldp	x23, x24, [sp, #48]
  41cab8:	ldp	x25, x26, [sp, #64]
  41cabc:	ldp	x27, x28, [sp, #80]
  41cac0:	str	x20, [x0]
  41cac4:	ldp	x19, x20, [sp, #16]
  41cac8:	ldr	x0, [sp, #200]
  41cacc:	ldp	x29, x30, [sp], #304
  41cad0:	ret
  41cad4:	str	x23, [sp, #120]
  41cad8:	b	41c694 <parse_file_seq@@Base+0x184>
  41cadc:	mov	x0, x1
  41cae0:	mov	x1, x22
  41cae4:	bl	418aa0 <xrealloc@@Base>
  41cae8:	str	x0, [sp, #120]
  41caec:	ldr	x1, [sp, #184]
  41caf0:	ldr	x20, [x1]
  41caf4:	ldr	x1, [sp, #168]
  41caf8:	stp	x0, x22, [x1, #16]
  41cafc:	b	41c5a8 <parse_file_seq@@Base+0x98>
  41cb00:	add	x0, sp, #0xe8
  41cb04:	bl	40b750 <dir_setup_glob@@Base>
  41cb08:	b	41c574 <parse_file_seq@@Base+0x64>
  41cb0c:	ldr	x0, [sp, #120]
  41cb10:	add	x4, x4, #0x1
  41cb14:	str	x4, [sp, #120]
  41cb18:	sub	x0, x4, x0
  41cb1c:	subs	x27, x27, x0
  41cb20:	b.eq	41c5d0 <parse_file_seq@@Base+0xc0>  // b.none
  41cb24:	b	41c668 <parse_file_seq@@Base+0x158>
  41cb28:	bl	41a1f8 <out_of_memory@@Base>
  41cb2c:	nop
  41cb30:	sub	sp, sp, #0x1a0
  41cb34:	stp	x29, x30, [sp, #32]
  41cb38:	add	x29, sp, #0x20
  41cb3c:	stp	x27, x28, [sp, #112]
  41cb40:	mov	x28, x0
  41cb44:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41cb48:	str	w1, [sp, #268]
  41cb4c:	add	x1, x28, #0x28
  41cb50:	str	x1, [sp, #176]
  41cb54:	ldr	x1, [x28, #40]
  41cb58:	stp	x19, x20, [sp, #48]
  41cb5c:	ldrb	w0, [x0, #148]
  41cb60:	stp	x21, x22, [sp, #64]
  41cb64:	mov	w19, #0x0                   	// #0
  41cb68:	mov	w22, #0x0                   	// #0
  41cb6c:	stp	x23, x24, [sp, #80]
  41cb70:	mov	x23, #0x0                   	// #0
  41cb74:	stp	x25, x26, [sp, #96]
  41cb78:	mov	x25, #0x0                   	// #0
  41cb7c:	str	w0, [sp, #232]
  41cb80:	mov	x0, #0xc8                  	// #200
  41cb84:	str	x1, [sp, #320]
  41cb88:	bl	418a50 <xmalloc@@Base>
  41cb8c:	str	x0, [sp, #184]
  41cb90:	mov	w0, #0x1                   	// #1
  41cb94:	stp	xzr, xzr, [sp, #128]
  41cb98:	stp	xzr, xzr, [sp, #152]
  41cb9c:	str	wzr, [sp, #172]
  41cba0:	str	wzr, [sp, #192]
  41cba4:	str	w0, [sp, #212]
  41cba8:	str	xzr, [sp, #224]
  41cbac:	str	w0, [sp, #236]
  41cbb0:	mov	x0, #0xc8                  	// #200
  41cbb4:	str	x0, [sp, #200]
  41cbb8:	str	xzr, [sp, #240]
  41cbbc:	str	wzr, [sp, #264]
  41cbc0:	ldr	x1, [x28, #48]
  41cbc4:	mov	x0, x28
  41cbc8:	ldr	x2, [sp, #136]
  41cbcc:	add	x1, x1, x2
  41cbd0:	str	x1, [x28, #48]
  41cbd4:	bl	41b150 <out_of_memory@@Base+0xf58>
  41cbd8:	str	x0, [sp, #136]
  41cbdc:	tbnz	x0, #63, 41cc8c <parse_file_seq@@Base+0x77c>
  41cbe0:	ldr	x27, [x28]
  41cbe4:	ldr	x0, [x28, #48]
  41cbe8:	ldrb	w21, [x27]
  41cbec:	cmp	x0, #0x1
  41cbf0:	b.eq	41cd18 <parse_file_seq@@Base+0x808>  // b.none
  41cbf4:	cbz	w21, 41cbc0 <parse_file_seq@@Base+0x6b0>
  41cbf8:	mov	x0, x27
  41cbfc:	bl	406680 <strlen@plt>
  41cc00:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  41cc04:	mov	x20, x0
  41cc08:	ldrb	w1, [x1, #148]
  41cc0c:	cmp	w1, w21
  41cc10:	b.ne	41cd78 <parse_file_seq@@Base+0x868>  // b.any
  41cc14:	cbnz	w19, 41cbc0 <parse_file_seq@@Base+0x6b0>
  41cc18:	ldr	x0, [sp, #128]
  41cc1c:	cbz	x0, 41cd78 <parse_file_seq@@Base+0x868>
  41cc20:	ldr	w0, [sp, #172]
  41cc24:	cbnz	w0, 41cbc0 <parse_file_seq@@Base+0x6b0>
  41cc28:	cbnz	x23, 41cc34 <parse_file_seq@@Base+0x724>
  41cc2c:	ldr	w0, [x28, #48]
  41cc30:	str	w0, [sp, #212]
  41cc34:	ldr	x0, [sp, #200]
  41cc38:	add	x19, x23, x20
  41cc3c:	cmp	x19, x0
  41cc40:	b.hi	41d1e4 <parse_file_seq@@Base+0xcd4>  // b.pmore
  41cc44:	sub	x2, x20, #0x1
  41cc48:	add	x1, x27, #0x1
  41cc4c:	ldr	x20, [sp, #184]
  41cc50:	add	x0, x20, x23
  41cc54:	bl	406640 <memcpy@plt>
  41cc58:	add	x0, x20, x19
  41cc5c:	mov	w1, #0xa                   	// #10
  41cc60:	ldr	x2, [sp, #136]
  41cc64:	mov	x23, x19
  41cc68:	sturb	w1, [x0, #-1]
  41cc6c:	mov	x0, x28
  41cc70:	mov	w19, #0x0                   	// #0
  41cc74:	ldr	x1, [x28, #48]
  41cc78:	add	x1, x1, x2
  41cc7c:	str	x1, [x28, #48]
  41cc80:	bl	41b150 <out_of_memory@@Base+0xf58>
  41cc84:	str	x0, [sp, #136]
  41cc88:	tbz	x0, #63, 41cbe0 <parse_file_seq@@Base+0x6d0>
  41cc8c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41cc90:	ldr	x0, [x0, #176]
  41cc94:	ldr	w0, [x0]
  41cc98:	cbnz	w0, 41e3c0 <parse_file_seq@@Base+0x1eb0>
  41cc9c:	ldr	x6, [sp, #128]
  41cca0:	cbz	x6, 41cce8 <parse_file_seq@@Base+0x7d8>
  41cca4:	add	x0, sp, #0x140
  41cca8:	ldr	w1, [sp, #264]
  41ccac:	ldr	w8, [sp, #236]
  41ccb0:	mov	x7, x23
  41ccb4:	ldr	w5, [sp, #212]
  41ccb8:	mov	x2, x25
  41ccbc:	str	x0, [sp, #16]
  41ccc0:	mov	x0, x6
  41ccc4:	ldr	x6, [sp, #184]
  41ccc8:	str	w1, [sp]
  41cccc:	ldr	x4, [sp, #224]
  41ccd0:	stp	x8, xzr, [sp, #328]
  41ccd4:	ldrb	w1, [sp, #232]
  41ccd8:	ldr	x3, [sp, #240]
  41ccdc:	strb	w1, [sp, #8]
  41cce0:	mov	w1, w22
  41cce4:	bl	41b768 <find_percent_cached@@Base+0x1c0>
  41cce8:	ldr	x0, [sp, #152]
  41ccec:	bl	406b90 <free@plt>
  41ccf0:	ldr	x0, [sp, #184]
  41ccf4:	bl	406b90 <free@plt>
  41ccf8:	ldp	x29, x30, [sp, #32]
  41ccfc:	ldp	x19, x20, [sp, #48]
  41cd00:	ldp	x21, x22, [sp, #64]
  41cd04:	ldp	x23, x24, [sp, #80]
  41cd08:	ldp	x25, x26, [sp, #96]
  41cd0c:	ldp	x27, x28, [sp, #112]
  41cd10:	add	sp, sp, #0x1a0
  41cd14:	ret
  41cd18:	cmp	w21, #0xef
  41cd1c:	b.ne	41cbf4 <parse_file_seq@@Base+0x6e4>  // b.any
  41cd20:	ldrb	w0, [x27, #1]
  41cd24:	cmp	w0, #0xbb
  41cd28:	b.ne	41cbf8 <parse_file_seq@@Base+0x6e8>  // b.any
  41cd2c:	ldrb	w0, [x27, #2]
  41cd30:	cmp	w0, #0xbf
  41cd34:	b.ne	41cbf8 <parse_file_seq@@Base+0x6e8>  // b.any
  41cd38:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41cd3c:	add	x20, x27, #0x3
  41cd40:	ldr	w0, [x0, #1088]
  41cd44:	tbz	w0, #0, 41d310 <parse_file_seq@@Base+0xe00>
  41cd48:	ldr	x0, [x28, #40]
  41cd4c:	cbz	x0, 41d2f8 <parse_file_seq@@Base+0xde8>
  41cd50:	mov	w2, #0x5                   	// #5
  41cd54:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41cd58:	mov	x0, #0x0                   	// #0
  41cd5c:	add	x1, x1, #0x7f0
  41cd60:	bl	406cd0 <dcgettext@plt>
  41cd64:	ldr	x1, [x28, #40]
  41cd68:	bl	406d60 <printf@plt>
  41cd6c:	ldrb	w21, [x27, #3]
  41cd70:	mov	x27, x20
  41cd74:	b	41cbf4 <parse_file_seq@@Base+0x6e4>
  41cd78:	ldr	x0, [sp, #160]
  41cd7c:	add	x20, x20, #0x1
  41cd80:	cmp	x20, x0
  41cd84:	b.hi	41d1b8 <parse_file_seq@@Base+0xca8>  // b.pmore
  41cd88:	ldr	x20, [sp, #152]
  41cd8c:	mov	x1, x27
  41cd90:	mov	x0, x20
  41cd94:	bl	406c30 <strcpy@plt>
  41cd98:	mov	x0, x20
  41cd9c:	bl	4187d8 <collapse_continuations@@Base>
  41cda0:	mov	x0, x20
  41cda4:	mov	w1, #0x4008                	// #16392
  41cda8:	bl	41ae08 <out_of_memory@@Base+0xc10>
  41cdac:	cbz	x0, 41cdb4 <parse_file_seq@@Base+0x8a4>
  41cdb0:	strb	wzr, [x0]
  41cdb4:	ldr	x1, [sp, #152]
  41cdb8:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  41cdbc:	add	x24, x24, #0x448
  41cdc0:	ldrb	w0, [x1]
  41cdc4:	ldrh	w0, [x24, x0, lsl #1]
  41cdc8:	tst	w0, #0x6
  41cdcc:	b.eq	41d2a8 <parse_file_seq@@Base+0xd98>  // b.none
  41cdd0:	mov	x0, x1
  41cdd4:	nop
  41cdd8:	ldrb	w1, [x0, #1]!
  41cddc:	ldrh	w1, [x24, x1, lsl #1]
  41cde0:	tst	w1, #0x6
  41cde4:	b.ne	41cdd8 <parse_file_seq@@Base+0x8c8>  // b.any
  41cde8:	add	x1, sp, #0x120
  41cdec:	bl	41b3d0 <out_of_memory@@Base+0x11d8>
  41cdf0:	ldrb	w1, [sp, #288]
  41cdf4:	mov	x21, x0
  41cdf8:	tbz	w1, #0, 41d138 <parse_file_seq@@Base+0xc28>
  41cdfc:	tst	x1, #0x10
  41ce00:	mov	w2, #0x5                   	// #5
  41ce04:	mov	w0, #0x2                   	// #2
  41ce08:	csel	w0, w2, w0, ne  // ne = any
  41ce0c:	str	w0, [sp, #208]
  41ce10:	ldr	w0, [sp, #172]
  41ce14:	cbnz	w0, 41d1d0 <parse_file_seq@@Base+0xcc0>
  41ce18:	ldr	x3, [sp, #128]
  41ce1c:	cbz	x3, 41ce6c <parse_file_seq@@Base+0x95c>
  41ce20:	add	x0, sp, #0x140
  41ce24:	str	x0, [sp, #16]
  41ce28:	mov	x0, x3
  41ce2c:	ldr	w3, [sp, #236]
  41ce30:	ldr	w1, [sp, #264]
  41ce34:	mov	x7, x23
  41ce38:	ldr	w5, [sp, #212]
  41ce3c:	mov	x2, x25
  41ce40:	str	x3, [sp, #328]
  41ce44:	ldr	x6, [sp, #184]
  41ce48:	str	w1, [sp]
  41ce4c:	ldr	x4, [sp, #224]
  41ce50:	str	xzr, [sp, #336]
  41ce54:	ldr	x3, [sp, #240]
  41ce58:	ldrb	w1, [sp, #232]
  41ce5c:	strb	w1, [sp, #8]
  41ce60:	mov	w1, w22
  41ce64:	bl	41b768 <find_percent_cached@@Base+0x1c0>
  41ce68:	ldrb	w1, [sp, #288]
  41ce6c:	tbnz	w1, #2, 41d21c <parse_file_seq@@Base+0xd0c>
  41ce70:	tbz	w1, #1, 41d200 <parse_file_seq@@Base+0xcf0>
  41ce74:	mov	x0, #0x64                  	// #100
  41ce78:	bl	418a50 <xmalloc@@Base>
  41ce7c:	ldr	x4, [sp, #176]
  41ce80:	mov	x20, x0
  41ce84:	add	x0, sp, #0x200
  41ce88:	add	x1, sp, #0x170
  41ce8c:	ldp	x2, x3, [x4]
  41ce90:	stp	x2, x3, [x0, #-168]
  41ce94:	mov	x0, x21
  41ce98:	ldr	x2, [x4, #16]
  41ce9c:	str	x2, [sp, #360]
  41cea0:	bl	4244a8 <parse_variable_definition@@Base>
  41cea4:	add	x1, sp, #0x158
  41cea8:	str	x1, [sp, #248]
  41ceac:	cbz	x0, 41d31c <parse_file_seq@@Base+0xe0c>
  41ceb0:	ldr	x0, [sp, #376]
  41ceb4:	ldrb	w0, [x0]
  41ceb8:	cbnz	w0, 41d330 <parse_file_seq@@Base+0xe20>
  41cebc:	ldr	w0, [sp, #408]
  41cec0:	ldr	x1, [sp, #368]
  41cec4:	strb	wzr, [x1, x0]
  41cec8:	mov	x1, #0x0                   	// #0
  41cecc:	mov	x0, x21
  41ced0:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  41ced4:	str	x0, [sp, #256]
  41ced8:	bl	418cf8 <next_token@@Base>
  41cedc:	ldrb	w1, [x0]
  41cee0:	str	x0, [sp, #216]
  41cee4:	cbz	w1, 41e3b0 <parse_file_seq@@Base+0x1ea0>
  41cee8:	bl	406680 <strlen@plt>
  41ceec:	sub	x0, x0, #0x1
  41cef0:	ldr	x1, [sp, #216]
  41cef4:	add	x0, x1, x0
  41cef8:	cmp	x1, x0
  41cefc:	b.cs	41cf20 <parse_file_seq@@Base+0xa10>  // b.hs, b.nlast
  41cf00:	ldr	x2, [sp, #216]
  41cf04:	b	41cf14 <parse_file_seq@@Base+0xa04>
  41cf08:	sub	x0, x0, #0x1
  41cf0c:	cmp	x2, x0
  41cf10:	b.eq	41cf20 <parse_file_seq@@Base+0xa10>  // b.none
  41cf14:	ldrb	w1, [x0]
  41cf18:	ldrh	w1, [x24, x1, lsl #1]
  41cf1c:	tbnz	w1, #1, 41cf08 <parse_file_seq@@Base+0x9f8>
  41cf20:	adrp	x27, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41cf24:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41cf28:	add	x27, x27, #0x540
  41cf2c:	add	x1, x1, #0x8b0
  41cf30:	mov	x22, #0x0                   	// #0
  41cf34:	mov	x23, #0x64                  	// #100
  41cf38:	strb	wzr, [x0, #1]
  41cf3c:	mov	w0, #0x1                   	// #1
  41cf40:	str	w0, [sp, #128]
  41cf44:	str	x1, [sp, #144]
  41cf48:	b	41cf68 <parse_file_seq@@Base+0xa58>
  41cf4c:	add	x0, x20, x22
  41cf50:	mov	x2, x21
  41cf54:	mov	x1, x19
  41cf58:	mov	x22, x25
  41cf5c:	bl	406640 <memcpy@plt>
  41cf60:	mov	w0, #0xa                   	// #10
  41cf64:	strb	w0, [x20, x26]
  41cf68:	mov	x0, x28
  41cf6c:	bl	41b150 <out_of_memory@@Base+0xf58>
  41cf70:	tbnz	x0, #63, 41d56c <parse_file_seq@@Base+0x105c>
  41cf74:	ldr	x1, [x28, #48]
  41cf78:	ldr	x19, [x28]
  41cf7c:	add	x0, x1, x0
  41cf80:	str	x0, [x28, #48]
  41cf84:	mov	x0, x19
  41cf88:	bl	4187d8 <collapse_continuations@@Base>
  41cf8c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41cf90:	add	x0, x0, #0x94
  41cf94:	ldrb	w1, [x19]
  41cf98:	ldrb	w0, [x0]
  41cf9c:	cmp	w1, w0
  41cfa0:	b.eq	41cff0 <parse_file_seq@@Base+0xae0>  // b.none
  41cfa4:	mov	x0, x19
  41cfa8:	bl	418cf8 <next_token@@Base>
  41cfac:	mov	x21, x0
  41cfb0:	bl	406680 <strlen@plt>
  41cfb4:	cmp	x0, #0x6
  41cfb8:	b.eq	41d024 <parse_file_seq@@Base+0xb14>  // b.none
  41cfbc:	b.ls	41d048 <parse_file_seq@@Base+0xb38>  // b.plast
  41cfc0:	ldrb	w0, [x21, #6]
  41cfc4:	ldrh	w0, [x24, x0, lsl #1]
  41cfc8:	tbnz	w0, #1, 41d024 <parse_file_seq@@Base+0xb14>
  41cfcc:	ldrb	w0, [x21, #5]
  41cfd0:	ldrh	w0, [x24, x0, lsl #1]
  41cfd4:	tbz	w0, #1, 41cff0 <parse_file_seq@@Base+0xae0>
  41cfd8:	ldr	x1, [sp, #144]
  41cfdc:	mov	x0, x21
  41cfe0:	mov	x2, #0x5                   	// #5
  41cfe4:	bl	406930 <strncmp@plt>
  41cfe8:	cbz	w0, 41d05c <parse_file_seq@@Base+0xb4c>
  41cfec:	nop
  41cff0:	mov	x0, x19
  41cff4:	bl	406680 <strlen@plt>
  41cff8:	add	x26, x0, x22
  41cffc:	mov	x21, x0
  41d000:	add	x25, x26, #0x1
  41d004:	cmp	x25, x23
  41d008:	b.ls	41cf4c <parse_file_seq@@Base+0xa3c>  // b.plast
  41d00c:	lsl	x23, x26, #1
  41d010:	mov	x0, x20
  41d014:	add	x1, x23, #0x1
  41d018:	bl	418aa0 <xrealloc@@Base>
  41d01c:	mov	x20, x0
  41d020:	b	41cf4c <parse_file_seq@@Base+0xa3c>
  41d024:	mov	x1, x27
  41d028:	mov	x0, x21
  41d02c:	mov	x2, #0x6                   	// #6
  41d030:	bl	406930 <strncmp@plt>
  41d034:	cbnz	w0, 41cfcc <parse_file_seq@@Base+0xabc>
  41d038:	ldr	w0, [sp, #128]
  41d03c:	add	w0, w0, #0x1
  41d040:	str	w0, [sp, #128]
  41d044:	b	41cff0 <parse_file_seq@@Base+0xae0>
  41d048:	cmp	x0, #0x5
  41d04c:	b.eq	41cfd8 <parse_file_seq@@Base+0xac8>  // b.none
  41d050:	cmp	x0, #0x6
  41d054:	b.ne	41cff0 <parse_file_seq@@Base+0xae0>  // b.any
  41d058:	b	41cfcc <parse_file_seq@@Base+0xabc>
  41d05c:	add	x21, x21, #0x5
  41d060:	mov	w1, #0x4008                	// #16392
  41d064:	mov	x0, x21
  41d068:	bl	41ae08 <out_of_memory@@Base+0xc10>
  41d06c:	cbz	x0, 41d074 <parse_file_seq@@Base+0xb64>
  41d070:	strb	wzr, [x0]
  41d074:	mov	x0, x21
  41d078:	bl	418cf8 <next_token@@Base>
  41d07c:	ldrb	w0, [x0]
  41d080:	cbnz	w0, 41d110 <parse_file_seq@@Base+0xc00>
  41d084:	ldr	w0, [sp, #128]
  41d088:	subs	w0, w0, #0x1
  41d08c:	str	w0, [sp, #128]
  41d090:	b.ne	41cff0 <parse_file_seq@@Base+0xae0>  // b.any
  41d094:	cbnz	x22, 41d2ec <parse_file_seq@@Base+0xddc>
  41d098:	strb	wzr, [x20]
  41d09c:	ldr	w3, [sp, #208]
  41d0a0:	mov	x2, x20
  41d0a4:	ldr	x1, [sp, #216]
  41d0a8:	mov	w5, #0x0                   	// #0
  41d0ac:	ldr	x0, [sp, #248]
  41d0b0:	ldrh	w4, [sp, #414]
  41d0b4:	ubfx	x4, x4, #7, #3
  41d0b8:	bl	423ea0 <do_variable_definition@@Base>
  41d0bc:	mov	x1, x0
  41d0c0:	mov	x0, x20
  41d0c4:	mov	x20, x1
  41d0c8:	bl	406b90 <free@plt>
  41d0cc:	ldr	x0, [sp, #256]
  41d0d0:	bl	406b90 <free@plt>
  41d0d4:	ldrb	w0, [sp, #288]
  41d0d8:	tbz	w0, #3, 41d0e8 <parse_file_seq@@Base+0xbd8>
  41d0dc:	ldrb	w1, [x20, #47]
  41d0e0:	and	w1, w1, #0xffffff9f
  41d0e4:	strb	w1, [x20, #47]
  41d0e8:	tbz	w0, #5, 41d2b0 <parse_file_seq@@Base+0xda0>
  41d0ec:	ldrb	w0, [x20, #44]
  41d0f0:	mov	w22, #0x0                   	// #0
  41d0f4:	mov	w19, #0x0                   	// #0
  41d0f8:	mov	x25, #0x0                   	// #0
  41d0fc:	orr	w0, w0, #0xffffff80
  41d100:	mov	x23, #0x0                   	// #0
  41d104:	strb	w0, [x20, #44]
  41d108:	str	xzr, [sp, #128]
  41d10c:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41d110:	mov	w2, #0x5                   	// #5
  41d114:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41d118:	mov	x0, #0x0                   	// #0
  41d11c:	add	x1, x1, #0x8b8
  41d120:	bl	406cd0 <dcgettext@plt>
  41d124:	mov	x2, x0
  41d128:	ldr	x0, [sp, #176]
  41d12c:	mov	x1, #0x0                   	// #0
  41d130:	bl	419dc8 <error@@Base>
  41d134:	b	41d084 <parse_file_seq@@Base+0xb74>
  41d138:	ldrb	w1, [x0]
  41d13c:	cbz	w1, 41cbc0 <parse_file_seq@@Base+0x6b0>
  41d140:	bl	418cc8 <end_of_token@@Base>
  41d144:	sub	x1, x0, x21
  41d148:	stp	x1, x0, [sp, #296]
  41d14c:	mov	x3, x0
  41d150:	ldrb	w0, [x0]
  41d154:	ldrh	w20, [x24, x0, lsl #1]
  41d158:	tst	w20, #0x6
  41d15c:	b.eq	41d17c <parse_file_seq@@Base+0xc6c>  // b.none
  41d160:	add	x3, x3, #0x1
  41d164:	nop
  41d168:	str	x3, [sp, #304]
  41d16c:	ldrb	w0, [x3], #1
  41d170:	ldrh	w20, [x24, x0, lsl #1]
  41d174:	tst	w20, #0x6
  41d178:	b.ne	41d168 <parse_file_seq@@Base+0xc58>  // b.any
  41d17c:	ldr	w0, [sp, #192]
  41d180:	cbz	w0, 41d2c8 <parse_file_seq@@Base+0xdb8>
  41d184:	cmp	x1, #0x5
  41d188:	b.ne	41cbc0 <parse_file_seq@@Base+0x6b0>  // b.any
  41d18c:	mov	x2, x1
  41d190:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41d194:	mov	x1, x21
  41d198:	add	x0, x0, #0x8b0
  41d19c:	bl	406930 <strncmp@plt>
  41d1a0:	cbnz	w0, 41cbc0 <parse_file_seq@@Base+0x6b0>
  41d1a4:	mov	w0, #0x9                   	// #9
  41d1a8:	tst	w20, w0
  41d1ac:	cset	w0, eq  // eq = none
  41d1b0:	str	w0, [sp, #192]
  41d1b4:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41d1b8:	ldr	x0, [sp, #152]
  41d1bc:	bl	406b90 <free@plt>
  41d1c0:	mov	x0, x20
  41d1c4:	bl	418a50 <xmalloc@@Base>
  41d1c8:	stp	x0, x20, [sp, #152]
  41d1cc:	b	41cd88 <parse_file_seq@@Base+0x878>
  41d1d0:	ldr	w0, [sp, #192]
  41d1d4:	tst	x1, #0x2
  41d1d8:	csinc	w0, w0, wzr, eq  // eq = none
  41d1dc:	str	w0, [sp, #192]
  41d1e0:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41d1e4:	lsl	x0, x19, #1
  41d1e8:	mov	x1, x0
  41d1ec:	str	x1, [sp, #200]
  41d1f0:	ldr	x0, [sp, #184]
  41d1f4:	bl	418aa0 <xrealloc@@Base>
  41d1f8:	str	x0, [sp, #184]
  41d1fc:	b	41cc44 <parse_file_seq@@Base+0x734>
  41d200:	ldr	w2, [sp, #208]
  41d204:	mov	x1, x21
  41d208:	ldr	x0, [sp, #176]
  41d20c:	mov	w3, #0x0                   	// #0
  41d210:	bl	4247c8 <try_variable_definition@@Base>
  41d214:	mov	x20, x0
  41d218:	b	41d0d4 <parse_file_seq@@Base+0xbc4>
  41d21c:	mov	x1, #0x0                   	// #0
  41d220:	mov	x0, x21
  41d224:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  41d228:	mov	x19, x0
  41d22c:	bl	418cf8 <next_token@@Base>
  41d230:	ldrb	w1, [x0]
  41d234:	mov	x20, x0
  41d238:	cbz	w1, 41e254 <parse_file_seq@@Base+0x1d44>
  41d23c:	bl	406680 <strlen@plt>
  41d240:	sub	x3, x0, #0x1
  41d244:	add	x3, x20, x3
  41d248:	cmp	x20, x3
  41d24c:	b.cc	41d260 <parse_file_seq@@Base+0xd50>  // b.lo, b.ul, b.last
  41d250:	b	41d26c <parse_file_seq@@Base+0xd5c>
  41d254:	sub	x3, x3, #0x1
  41d258:	cmp	x20, x3
  41d25c:	b.eq	41d26c <parse_file_seq@@Base+0xd5c>  // b.none
  41d260:	ldrb	w0, [x3]
  41d264:	ldrh	w0, [x24, x0, lsl #1]
  41d268:	tbnz	w0, #1, 41d254 <parse_file_seq@@Base+0xd44>
  41d26c:	ldr	w2, [sp, #208]
  41d270:	sub	x1, x3, x20
  41d274:	add	x1, x1, #0x1
  41d278:	strb	wzr, [x3, #1]
  41d27c:	mov	x3, #0x0                   	// #0
  41d280:	mov	x0, x20
  41d284:	mov	w22, #0x0                   	// #0
  41d288:	mov	x25, #0x0                   	// #0
  41d28c:	bl	4230d8 <undefine_variable_in_set@@Base>
  41d290:	mov	x23, #0x0                   	// #0
  41d294:	mov	x0, x19
  41d298:	mov	w19, #0x0                   	// #0
  41d29c:	bl	406b90 <free@plt>
  41d2a0:	str	xzr, [sp, #128]
  41d2a4:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41d2a8:	ldr	x0, [sp, #152]
  41d2ac:	b	41cde8 <parse_file_seq@@Base+0x8d8>
  41d2b0:	mov	w22, #0x0                   	// #0
  41d2b4:	mov	w19, #0x0                   	// #0
  41d2b8:	mov	x25, #0x0                   	// #0
  41d2bc:	mov	x23, #0x0                   	// #0
  41d2c0:	str	xzr, [sp, #128]
  41d2c4:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41d2c8:	ldr	x2, [sp, #176]
  41d2cc:	mov	x0, x21
  41d2d0:	bl	41a578 <out_of_memory@@Base+0x380>
  41d2d4:	cmn	w0, #0x2
  41d2d8:	b.eq	41d358 <parse_file_seq@@Base+0xe48>  // b.none
  41d2dc:	cmn	w0, #0x1
  41d2e0:	b.eq	41e268 <parse_file_seq@@Base+0x1d58>  // b.none
  41d2e4:	str	w0, [sp, #172]
  41d2e8:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41d2ec:	add	x22, x20, x22
  41d2f0:	sturb	wzr, [x22, #-1]
  41d2f4:	b	41d09c <parse_file_seq@@Base+0xb8c>
  41d2f8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41d2fc:	add	x1, x1, #0x818
  41d300:	mov	w2, #0x5                   	// #5
  41d304:	mov	x0, #0x0                   	// #0
  41d308:	bl	406cd0 <dcgettext@plt>
  41d30c:	bl	406d60 <printf@plt>
  41d310:	ldrb	w21, [x27, #3]
  41d314:	mov	x27, x20
  41d318:	b	41cbf4 <parse_file_seq@@Base+0x6e4>
  41d31c:	ldrh	w0, [sp, #414]
  41d320:	mov	w1, #0x2                   	// #2
  41d324:	bfi	w0, w1, #7, #3
  41d328:	strh	w0, [sp, #414]
  41d32c:	b	41cec8 <parse_file_seq@@Base+0x9b8>
  41d330:	mov	w2, #0x5                   	// #5
  41d334:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41d338:	mov	x0, #0x0                   	// #0
  41d33c:	add	x1, x1, #0x858
  41d340:	bl	406cd0 <dcgettext@plt>
  41d344:	mov	x2, x0
  41d348:	ldr	x0, [sp, #248]
  41d34c:	mov	x1, #0x0                   	// #0
  41d350:	bl	419dc8 <error@@Base>
  41d354:	b	41cebc <parse_file_seq@@Base+0x9ac>
  41d358:	ldr	w0, [sp, #172]
  41d35c:	cbnz	w0, 41cbc0 <parse_file_seq@@Base+0x6b0>
  41d360:	ldr	x19, [sp, #296]
  41d364:	cmp	x19, #0x6
  41d368:	b.eq	41d590 <parse_file_seq@@Base+0x1080>  // b.none
  41d36c:	cmp	x19, #0x8
  41d370:	b.eq	41d634 <parse_file_seq@@Base+0x1124>  // b.none
  41d374:	cmp	x19, #0x5
  41d378:	b.eq	41d708 <parse_file_seq@@Base+0x11f8>  // b.none
  41d37c:	cmp	x19, #0x7
  41d380:	b.ne	41d8d8 <parse_file_seq@@Base+0x13c8>  // b.any
  41d384:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41d388:	mov	x2, x19
  41d38c:	mov	x1, x21
  41d390:	add	x0, x0, #0x910
  41d394:	bl	406930 <strncmp@plt>
  41d398:	cbz	w0, 41d67c <parse_file_seq@@Base+0x116c>
  41d39c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41d3a0:	ldrb	w1, [x27]
  41d3a4:	ldrb	w0, [x0, #148]
  41d3a8:	cmp	w1, w0
  41d3ac:	b.eq	41e290 <parse_file_seq@@Base+0x1d80>  // b.none
  41d3b0:	ldr	x4, [sp, #128]
  41d3b4:	cbz	x4, 41d3fc <parse_file_seq@@Base+0xeec>
  41d3b8:	ldr	w3, [sp, #236]
  41d3bc:	add	x0, sp, #0x140
  41d3c0:	ldr	w1, [sp, #264]
  41d3c4:	mov	x7, x23
  41d3c8:	ldr	w5, [sp, #212]
  41d3cc:	mov	x2, x25
  41d3d0:	str	x0, [sp, #16]
  41d3d4:	mov	x0, x4
  41d3d8:	stp	x3, xzr, [sp, #328]
  41d3dc:	ldr	x6, [sp, #184]
  41d3e0:	str	w1, [sp]
  41d3e4:	ldr	x4, [sp, #224]
  41d3e8:	ldr	x3, [sp, #240]
  41d3ec:	ldrb	w1, [sp, #232]
  41d3f0:	strb	w1, [sp, #8]
  41d3f4:	mov	w1, w22
  41d3f8:	bl	41b768 <find_percent_cached@@Base+0x1c0>
  41d3fc:	ldr	x2, [sp, #176]
  41d400:	mov	x0, x27
  41d404:	mov	w1, #0x4018                	// #16408
  41d408:	ldr	w2, [x2, #8]
  41d40c:	str	w2, [sp, #236]
  41d410:	bl	41ae08 <out_of_memory@@Base+0xc10>
  41d414:	mov	x20, x0
  41d418:	cbz	x0, 41d878 <parse_file_seq@@Base+0x1368>
  41d41c:	ldrb	w0, [x0]
  41d420:	strb	wzr, [x20]
  41d424:	cmp	w0, #0x23
  41d428:	b.eq	41d878 <parse_file_seq@@Base+0x1368>  // b.none
  41d42c:	mov	x0, x27
  41d430:	add	x23, sp, #0x128
  41d434:	bl	4187d8 <collapse_continuations@@Base>
  41d438:	add	x24, sp, #0x138
  41d43c:	mov	x2, x23
  41d440:	mov	x1, x24
  41d444:	mov	x0, x27
  41d448:	bl	41a258 <out_of_memory@@Base+0x60>
  41d44c:	cmp	w0, #0x5
  41d450:	b.hi	41da74 <parse_file_seq@@Base+0x1564>  // b.pmore
  41d454:	cmp	w0, #0x3
  41d458:	b.hi	41da80 <parse_file_seq@@Base+0x1570>  // b.pmore
  41d45c:	cmp	w0, #0x1
  41d460:	b.eq	41e27c <parse_file_seq@@Base+0x1d6c>  // b.none
  41d464:	add	x20, x20, #0x1
  41d468:	ldr	x2, [sp, #296]
  41d46c:	mov	x0, #0x0                   	// #0
  41d470:	ldr	x1, [sp, #312]
  41d474:	adrp	x21, 446000 <commands_started@@Base+0x1c8>
  41d478:	mov	x19, x20
  41d47c:	add	x22, x21, #0x770
  41d480:	mov	w25, #0x20                  	// #32
  41d484:	bl	40ba00 <variable_expand_string@@Base>
  41d488:	str	x0, [sp, #304]
  41d48c:	b	41d4e4 <parse_file_seq@@Base+0xfd4>
  41d490:	mov	w1, #0x3a                  	// #58
  41d494:	bl	41b010 <out_of_memory@@Base+0xe18>
  41d498:	mov	x26, x0
  41d49c:	cbnz	x0, 41da94 <parse_file_seq@@Base+0x1584>
  41d4a0:	ldr	x0, [sp, #312]
  41d4a4:	mov	x2, x23
  41d4a8:	mov	x1, x24
  41d4ac:	bl	41a258 <out_of_memory@@Base+0x60>
  41d4b0:	cmp	w0, #0x1
  41d4b4:	b.eq	41e1f0 <parse_file_seq@@Base+0x1ce0>  // b.none
  41d4b8:	ldr	x26, [sp, #304]
  41d4bc:	mov	x0, x26
  41d4c0:	bl	406680 <strlen@plt>
  41d4c4:	add	x1, x26, x0
  41d4c8:	add	x1, x1, #0x1
  41d4cc:	str	x1, [sp, #304]
  41d4d0:	strb	w25, [x26, x0]
  41d4d4:	ldp	x2, x0, [sp, #296]
  41d4d8:	ldr	x1, [sp, #312]
  41d4dc:	bl	40ba00 <variable_expand_string@@Base>
  41d4e0:	str	x0, [sp, #304]
  41d4e4:	ldr	x2, [sp, #296]
  41d4e8:	ldr	x1, [sp, #312]
  41d4ec:	add	x1, x1, x2
  41d4f0:	str	x1, [sp, #312]
  41d4f4:	cbnz	x19, 41d490 <parse_file_seq@@Base+0xf80>
  41d4f8:	mov	w1, #0x3b                  	// #59
  41d4fc:	bl	41b010 <out_of_memory@@Base+0xe18>
  41d500:	mov	x19, x0
  41d504:	cbz	x0, 41da8c <parse_file_seq@@Base+0x157c>
  41d508:	ldr	x3, [x22]
  41d50c:	str	x3, [sp, #144]
  41d510:	ldr	x26, [sp, #304]
  41d514:	mov	x0, x26
  41d518:	bl	406680 <strlen@plt>
  41d51c:	strb	wzr, [x19]
  41d520:	add	x0, x26, x0
  41d524:	mov	x2, #0xffffffffffffffff    	// #-1
  41d528:	ldr	x1, [sp, #312]
  41d52c:	bl	40ba00 <variable_expand_string@@Base>
  41d530:	ldr	x2, [sp, #312]
  41d534:	str	x2, [sp, #128]
  41d538:	mov	x0, x2
  41d53c:	bl	406680 <strlen@plt>
  41d540:	ldr	x3, [sp, #144]
  41d544:	ldr	x1, [x22]
  41d548:	sub	x19, x19, x3
  41d54c:	ldr	x2, [sp, #128]
  41d550:	add	x19, x19, #0x1
  41d554:	sub	x26, x26, x3
  41d558:	add	x19, x1, x19
  41d55c:	add	x2, x2, x0
  41d560:	add	x0, x1, x26
  41d564:	stp	x0, x2, [sp, #304]
  41d568:	b	41d490 <parse_file_seq@@Base+0xf80>
  41d56c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41d570:	add	x1, x1, #0x888
  41d574:	mov	w2, #0x5                   	// #5
  41d578:	mov	x0, #0x0                   	// #0
  41d57c:	bl	406cd0 <dcgettext@plt>
  41d580:	mov	x2, x0
  41d584:	mov	x1, #0x0                   	// #0
  41d588:	ldr	x0, [sp, #248]
  41d58c:	bl	41a060 <fatal@@Base>
  41d590:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  41d594:	mov	x2, x19
  41d598:	mov	x1, x21
  41d59c:	add	x0, x0, #0xea8
  41d5a0:	bl	406930 <strncmp@plt>
  41d5a4:	cbnz	w0, 41d39c <parse_file_seq@@Base+0xe8c>
  41d5a8:	ldr	x3, [sp, #128]
  41d5ac:	ldrb	w21, [x21]
  41d5b0:	cmp	w21, #0x75
  41d5b4:	cset	w20, ne  // ne = any
  41d5b8:	cbz	x3, 41d604 <parse_file_seq@@Base+0x10f4>
  41d5bc:	add	x0, sp, #0x140
  41d5c0:	str	x0, [sp, #16]
  41d5c4:	mov	x0, x3
  41d5c8:	ldr	w3, [sp, #236]
  41d5cc:	ldr	w1, [sp, #264]
  41d5d0:	mov	x7, x23
  41d5d4:	ldr	w5, [sp, #212]
  41d5d8:	mov	x2, x25
  41d5dc:	str	x3, [sp, #328]
  41d5e0:	ldr	x6, [sp, #184]
  41d5e4:	str	w1, [sp]
  41d5e8:	ldr	x4, [sp, #224]
  41d5ec:	str	xzr, [sp, #336]
  41d5f0:	ldr	x3, [sp, #240]
  41d5f4:	ldrb	w1, [sp, #232]
  41d5f8:	strb	w1, [sp, #8]
  41d5fc:	mov	w1, w22
  41d600:	bl	41b768 <find_percent_cached@@Base+0x1c0>
  41d604:	ldr	x0, [sp, #304]
  41d608:	ldrb	w1, [x0]
  41d60c:	cbnz	w1, 41e300 <parse_file_seq@@Base+0x1df0>
  41d610:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  41d614:	mov	w22, #0x0                   	// #0
  41d618:	mov	w19, #0x0                   	// #0
  41d61c:	mov	x25, #0x0                   	// #0
  41d620:	str	w20, [x0, #2244]
  41d624:	mov	x23, #0x0                   	// #0
  41d628:	str	xzr, [sp, #128]
  41d62c:	str	wzr, [sp, #192]
  41d630:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41d634:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41d638:	mov	x2, x19
  41d63c:	add	x0, x0, #0x900
  41d640:	mov	x1, x21
  41d644:	bl	406930 <strncmp@plt>
  41d648:	cbz	w0, 41d5a8 <parse_file_seq@@Base+0x1098>
  41d64c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41d650:	mov	x2, x19
  41d654:	add	x0, x0, #0x918
  41d658:	mov	x1, x21
  41d65c:	bl	406930 <strncmp@plt>
  41d660:	cbz	w0, 41d67c <parse_file_seq@@Base+0x116c>
  41d664:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41d668:	mov	x2, x19
  41d66c:	mov	x1, x21
  41d670:	add	x0, x0, #0x928
  41d674:	bl	406930 <strncmp@plt>
  41d678:	cbnz	w0, 41d39c <parse_file_seq@@Base+0xe8c>
  41d67c:	ldr	x3, [sp, #128]
  41d680:	ldrb	w21, [x21]
  41d684:	cbz	x3, 41d6d0 <parse_file_seq@@Base+0x11c0>
  41d688:	add	x0, sp, #0x140
  41d68c:	str	x0, [sp, #16]
  41d690:	mov	x0, x3
  41d694:	ldr	w3, [sp, #236]
  41d698:	ldr	w1, [sp, #264]
  41d69c:	mov	x7, x23
  41d6a0:	ldr	w5, [sp, #212]
  41d6a4:	mov	x2, x25
  41d6a8:	str	x3, [sp, #328]
  41d6ac:	ldr	x6, [sp, #184]
  41d6b0:	str	w1, [sp]
  41d6b4:	ldr	x4, [sp, #224]
  41d6b8:	str	xzr, [sp, #336]
  41d6bc:	ldr	x3, [sp, #240]
  41d6c0:	ldrb	w1, [sp, #232]
  41d6c4:	strb	w1, [sp, #8]
  41d6c8:	mov	w1, w22
  41d6cc:	bl	41b768 <find_percent_cached@@Base+0x1c0>
  41d6d0:	ldr	x0, [sp, #304]
  41d6d4:	mov	x1, #0x0                   	// #0
  41d6d8:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  41d6dc:	ldrb	w1, [x0]
  41d6e0:	mov	x19, x0
  41d6e4:	cbnz	w1, 41d9bc <parse_file_seq@@Base+0x14ac>
  41d6e8:	bl	406b90 <free@plt>
  41d6ec:	mov	w22, #0x0                   	// #0
  41d6f0:	mov	w19, #0x0                   	// #0
  41d6f4:	mov	x25, #0x0                   	// #0
  41d6f8:	mov	x23, #0x0                   	// #0
  41d6fc:	str	xzr, [sp, #128]
  41d700:	str	wzr, [sp, #192]
  41d704:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41d708:	mov	x2, x19
  41d70c:	mov	x1, x21
  41d710:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  41d714:	add	x0, x0, #0xaa8
  41d718:	bl	406930 <strncmp@plt>
  41d71c:	str	w0, [sp, #192]
  41d720:	cbz	w0, 41d8fc <parse_file_seq@@Base+0x13ec>
  41d724:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41d728:	mov	x2, x19
  41d72c:	mov	x1, x21
  41d730:	add	x0, x0, #0x938
  41d734:	bl	406930 <strncmp@plt>
  41d738:	cbnz	w0, 41d39c <parse_file_seq@@Base+0xe8c>
  41d73c:	ldr	x3, [sp, #128]
  41d740:	ldrb	w20, [x21]
  41d744:	cbz	x3, 41d790 <parse_file_seq@@Base+0x1280>
  41d748:	add	x0, sp, #0x140
  41d74c:	str	x0, [sp, #16]
  41d750:	mov	x0, x3
  41d754:	ldr	w3, [sp, #236]
  41d758:	ldr	w1, [sp, #264]
  41d75c:	mov	x7, x23
  41d760:	ldr	w5, [sp, #212]
  41d764:	mov	x2, x25
  41d768:	str	x3, [sp, #328]
  41d76c:	ldr	x6, [sp, #184]
  41d770:	str	w1, [sp]
  41d774:	ldr	x4, [sp, #224]
  41d778:	str	xzr, [sp, #336]
  41d77c:	ldr	x3, [sp, #240]
  41d780:	ldrb	w1, [sp, #232]
  41d784:	strb	w1, [sp, #8]
  41d788:	mov	w1, w22
  41d78c:	bl	41b768 <find_percent_cached@@Base+0x1c0>
  41d790:	ldr	x0, [sp, #304]
  41d794:	mov	x1, #0x0                   	// #0
  41d798:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  41d79c:	ldrb	w1, [x0]
  41d7a0:	mov	x19, x0
  41d7a4:	cbz	w1, 41d6e8 <parse_file_seq@@Base+0x11d8>
  41d7a8:	mov	w4, #0x2                   	// #2
  41d7ac:	mov	x3, #0x0                   	// #0
  41d7b0:	mov	w2, #0x1                   	// #1
  41d7b4:	mov	x1, #0x10                  	// #16
  41d7b8:	add	x0, sp, #0x130
  41d7bc:	str	x19, [sp, #304]
  41d7c0:	bl	41c510 <parse_file_seq@@Base>
  41d7c4:	mov	x23, x0
  41d7c8:	mov	x0, x19
  41d7cc:	str	x23, [sp, #128]
  41d7d0:	bl	406b90 <free@plt>
  41d7d4:	cbz	x23, 41e2d8 <parse_file_seq@@Base+0x1dc8>
  41d7d8:	cmp	w20, #0x2d
  41d7dc:	adrp	x21, 445000 <output_context@@Base+0x1250>
  41d7e0:	cset	w22, eq  // eq = none
  41d7e4:	add	x21, x21, #0xdb8
  41d7e8:	add	x19, sp, #0x170
  41d7ec:	mov	x24, x23
  41d7f0:	mov	w2, w22
  41d7f4:	ldr	x0, [sp, #176]
  41d7f8:	mov	x1, x19
  41d7fc:	ldr	x3, [x24, #8]
  41d800:	ldr	x23, [x23]
  41d804:	str	x3, [sp, #368]
  41d808:	bl	4167e0 <load_file@@Base>
  41d80c:	mov	w20, w0
  41d810:	orr	w0, w22, w0
  41d814:	cbz	w0, 41e2a4 <parse_file_seq@@Base+0x1d94>
  41d818:	mov	x0, x24
  41d81c:	bl	406b90 <free@plt>
  41d820:	cmn	w20, #0x1
  41d824:	b.eq	41d85c <parse_file_seq@@Base+0x134c>  // b.none
  41d828:	mov	x0, #0x40                  	// #64
  41d82c:	bl	418a78 <xcalloc@@Base>
  41d830:	mov	x20, x0
  41d834:	ldr	x1, [x21, #32]
  41d838:	str	x20, [x21, #32]
  41d83c:	ldr	x0, [sp, #368]
  41d840:	str	x1, [x20]
  41d844:	bl	40c7a8 <lookup_file@@Base>
  41d848:	str	x0, [x20, #16]
  41d84c:	cbz	x0, 41e2f0 <parse_file_seq@@Base+0x1de0>
  41d850:	ldrb	w1, [x0, #136]
  41d854:	orr	w1, w1, #0x40
  41d858:	strb	w1, [x0, #136]
  41d85c:	cbnz	x23, 41d7ec <parse_file_seq@@Base+0x12dc>
  41d860:	mov	x25, #0x0                   	// #0
  41d864:	mov	w22, #0x0                   	// #0
  41d868:	mov	w19, #0x0                   	// #0
  41d86c:	str	x23, [sp, #128]
  41d870:	str	wzr, [sp, #192]
  41d874:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41d878:	mov	x0, x27
  41d87c:	add	x23, sp, #0x128
  41d880:	bl	4187d8 <collapse_continuations@@Base>
  41d884:	add	x24, sp, #0x138
  41d888:	mov	x2, x23
  41d88c:	mov	x1, x24
  41d890:	mov	x0, x27
  41d894:	mov	w22, #0x0                   	// #0
  41d898:	bl	41a258 <out_of_memory@@Base+0x60>
  41d89c:	mov	w19, #0x0                   	// #0
  41d8a0:	cmp	w0, #0x1
  41d8a4:	b.eq	41d6f4 <parse_file_seq@@Base+0x11e4>  // b.none
  41d8a8:	cbz	w0, 41d8bc <parse_file_seq@@Base+0x13ac>
  41d8ac:	cmp	w0, #0x5
  41d8b0:	b.hi	41d8c4 <parse_file_seq@@Base+0x13b4>  // b.pmore
  41d8b4:	cmp	w0, #0x3
  41d8b8:	b.hi	41d8d0 <parse_file_seq@@Base+0x13c0>  // b.pmore
  41d8bc:	mov	x20, #0x0                   	// #0
  41d8c0:	b	41d468 <parse_file_seq@@Base+0xf58>
  41d8c4:	sub	w0, w0, #0x8
  41d8c8:	cmp	w0, #0x1
  41d8cc:	b.hi	41d8bc <parse_file_seq@@Base+0x13ac>  // b.pmore
  41d8d0:	mov	w19, #0x1                   	// #1
  41d8d4:	b	41d6f4 <parse_file_seq@@Base+0x11e4>
  41d8d8:	cmp	x19, #0x4
  41d8dc:	b.ne	41d39c <parse_file_seq@@Base+0xe8c>  // b.any
  41d8e0:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  41d8e4:	mov	x2, x19
  41d8e8:	mov	x1, x21
  41d8ec:	add	x0, x0, #0x760
  41d8f0:	bl	406930 <strncmp@plt>
  41d8f4:	cbz	w0, 41d73c <parse_file_seq@@Base+0x122c>
  41d8f8:	b	41d39c <parse_file_seq@@Base+0xe8c>
  41d8fc:	ldr	x3, [sp, #128]
  41d900:	cbz	x3, 41d94c <parse_file_seq@@Base+0x143c>
  41d904:	add	x0, sp, #0x140
  41d908:	str	x0, [sp, #16]
  41d90c:	mov	x0, x3
  41d910:	ldr	w3, [sp, #236]
  41d914:	ldr	w1, [sp, #264]
  41d918:	mov	x7, x23
  41d91c:	ldr	w5, [sp, #212]
  41d920:	mov	x2, x25
  41d924:	str	x3, [sp, #328]
  41d928:	ldr	x6, [sp, #184]
  41d92c:	str	w1, [sp]
  41d930:	ldr	x4, [sp, #224]
  41d934:	str	xzr, [sp, #336]
  41d938:	ldr	x3, [sp, #240]
  41d93c:	ldrb	w1, [sp, #232]
  41d940:	strb	w1, [sp, #8]
  41d944:	mov	w1, w22
  41d948:	bl	41b768 <find_percent_cached@@Base+0x1c0>
  41d94c:	ldr	x0, [sp, #304]
  41d950:	add	x19, sp, #0x170
  41d954:	mov	x20, #0x0                   	// #0
  41d958:	bl	40c1b8 <variable_expand@@Base>
  41d95c:	str	x0, [sp, #344]
  41d960:	mov	x1, x19
  41d964:	add	x0, sp, #0x158
  41d968:	bl	418d28 <find_next_token@@Base>
  41d96c:	mov	x1, x0
  41d970:	cbz	x0, 41d990 <parse_file_seq@@Base+0x1480>
  41d974:	ldr	x1, [sp, #368]
  41d978:	bl	418c80 <xstrndup@@Base>
  41d97c:	mov	x20, x0
  41d980:	mov	x1, x19
  41d984:	add	x0, sp, #0x158
  41d988:	bl	418d28 <find_next_token@@Base>
  41d98c:	mov	x1, x0
  41d990:	mov	x0, x20
  41d994:	bl	424c70 <construct_vpath_list@@Base>
  41d998:	mov	x0, x20
  41d99c:	mov	w22, #0x0                   	// #0
  41d9a0:	bl	406b90 <free@plt>
  41d9a4:	mov	w19, #0x0                   	// #0
  41d9a8:	mov	x25, #0x0                   	// #0
  41d9ac:	mov	x23, #0x0                   	// #0
  41d9b0:	str	xzr, [sp, #128]
  41d9b4:	str	wzr, [sp, #172]
  41d9b8:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41d9bc:	mov	w4, #0x2                   	// #2
  41d9c0:	mov	x3, #0x0                   	// #0
  41d9c4:	mov	w2, #0x1                   	// #1
  41d9c8:	mov	x1, #0x10                  	// #16
  41d9cc:	add	x0, sp, #0x130
  41d9d0:	str	x19, [sp, #304]
  41d9d4:	bl	41c510 <parse_file_seq@@Base>
  41d9d8:	mov	x20, x0
  41d9dc:	mov	x0, x19
  41d9e0:	bl	406b90 <free@plt>
  41d9e4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41d9e8:	add	x19, sp, #0x170
  41d9ec:	stp	xzr, xzr, [sp, #368]
  41d9f0:	ldr	x22, [x0, #176]
  41d9f4:	str	x19, [x0, #176]
  41d9f8:	str	xzr, [sp, #384]
  41d9fc:	cbz	x20, 41da64 <parse_file_seq@@Base+0x1554>
  41da00:	cmp	w21, #0x69
  41da04:	ldr	w1, [sp, #268]
  41da08:	mov	w19, #0xa                   	// #10
  41da0c:	mov	w0, #0xe                   	// #14
  41da10:	csel	w0, w0, w19, ne  // ne = any
  41da14:	eor	w19, w1, #0x1
  41da18:	orr	w19, w19, w0
  41da1c:	and	w19, w19, #0xffff
  41da20:	bl	406d70 <__errno_location@plt>
  41da24:	mov	x21, x0
  41da28:	ldr	x24, [sp, #176]
  41da2c:	mov	x23, x20
  41da30:	mov	w1, w19
  41da34:	ldr	x20, [x20]
  41da38:	ldr	x0, [x23, #8]
  41da3c:	bl	41e3d8 <parse_file_seq@@Base+0x1ec8>
  41da40:	ldr	w1, [x21]
  41da44:	cbz	w1, 41da58 <parse_file_seq@@Base+0x1548>
  41da48:	ldp	x2, x3, [x24]
  41da4c:	stp	x2, x3, [x0, #40]
  41da50:	ldr	x1, [x24, #16]
  41da54:	str	x1, [x0, #56]
  41da58:	mov	x0, x23
  41da5c:	bl	406b90 <free@plt>
  41da60:	cbnz	x20, 41da2c <parse_file_seq@@Base+0x151c>
  41da64:	mov	x0, x22
  41da68:	mov	w22, #0x0                   	// #0
  41da6c:	bl	41a538 <out_of_memory@@Base+0x340>
  41da70:	b	41d6f0 <parse_file_seq@@Base+0x11e0>
  41da74:	sub	w0, w0, #0x8
  41da78:	cmp	w0, #0x1
  41da7c:	b.hi	41d464 <parse_file_seq@@Base+0xf54>  // b.pmore
  41da80:	mov	w22, #0x0                   	// #0
  41da84:	mov	w19, #0x1                   	// #1
  41da88:	b	41d6f4 <parse_file_seq@@Base+0x11e4>
  41da8c:	ldr	x0, [sp, #304]
  41da90:	b	41d490 <parse_file_seq@@Base+0xf80>
  41da94:	ldr	x0, [sp, #304]
  41da98:	cmp	x0, x26
  41da9c:	b.cs	41dab0 <parse_file_seq@@Base+0x15a0>  // b.hs, b.nlast
  41daa0:	ldurb	w0, [x26, #-1]
  41daa4:	cmp	w0, #0x26
  41daa8:	cset	x0, eq  // eq = none
  41daac:	sub	x26, x26, x0
  41dab0:	ldr	x0, [x21, #1904]
  41dab4:	bl	418cf8 <next_token@@Base>
  41dab8:	str	x0, [sp, #304]
  41dabc:	mov	x1, #0x10                  	// #16
  41dac0:	add	x0, sp, #0x130
  41dac4:	ldrb	w23, [x26]
  41dac8:	mov	w4, #0x0                   	// #0
  41dacc:	strb	wzr, [x26]
  41dad0:	mov	x3, #0x0                   	// #0
  41dad4:	cmp	w23, #0x26
  41dad8:	mov	w2, #0x1                   	// #1
  41dadc:	cset	w22, eq  // eq = none
  41dae0:	bl	41c510 <parse_file_seq@@Base>
  41dae4:	strb	w23, [x26]
  41dae8:	str	x0, [sp, #128]
  41daec:	and	x1, x22, #0xff
  41daf0:	add	x26, x26, x1
  41daf4:	cbz	x0, 41d8d0 <parse_file_seq@@Base+0x13c0>
  41daf8:	add	x23, x26, #0x1
  41dafc:	str	x23, [sp, #304]
  41db00:	ldrb	w0, [x26, #1]
  41db04:	cmp	w0, #0x3a
  41db08:	cset	w1, eq  // eq = none
  41db0c:	str	w1, [sp, #264]
  41db10:	b.ne	41db1c <parse_file_seq@@Base+0x160c>  // b.any
  41db14:	add	x23, x26, #0x2
  41db18:	str	x23, [sp, #304]
  41db1c:	ldr	x26, [sp, #312]
  41db20:	mov	x24, #0x0                   	// #0
  41db24:	ldrb	w0, [x26]
  41db28:	cbnz	w0, 41e1b0 <parse_file_seq@@Base+0x1ca0>
  41db2c:	mov	x0, x23
  41db30:	add	x1, sp, #0x120
  41db34:	bl	41b3d0 <out_of_memory@@Base+0x11d8>
  41db38:	str	x0, [sp, #304]
  41db3c:	ldrb	w1, [sp, #288]
  41db40:	mov	x23, x0
  41db44:	tbz	w1, #0, 41dd84 <parse_file_seq@@Base+0x1874>
  41db48:	cbz	x20, 41dba4 <parse_file_seq@@Base+0x1694>
  41db4c:	ldr	x0, [x21, #1904]
  41db50:	mov	w1, #0x3b                  	// #59
  41db54:	sturb	w1, [x20, #-1]
  41db58:	sub	x20, x20, #0x1
  41db5c:	sub	x23, x23, x0
  41db60:	mov	x0, x20
  41db64:	bl	4187d8 <collapse_continuations@@Base>
  41db68:	ldr	x24, [sp, #304]
  41db6c:	mov	x0, x24
  41db70:	bl	406680 <strlen@plt>
  41db74:	mov	x19, x0
  41db78:	mov	x0, x20
  41db7c:	bl	406680 <strlen@plt>
  41db80:	mov	x2, x0
  41db84:	mov	x1, x20
  41db88:	add	x0, x24, x19
  41db8c:	add	x2, x2, #0x1
  41db90:	bl	40b848 <variable_buffer_output@@Base>
  41db94:	ldr	x0, [x21, #1904]
  41db98:	ldrb	w1, [sp, #288]
  41db9c:	add	x23, x0, x23
  41dba0:	str	x23, [sp, #304]
  41dba4:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  41dba8:	tst	x1, #0x10
  41dbac:	ldr	x27, [sp, #176]
  41dbb0:	mov	w21, #0x5                   	// #5
  41dbb4:	ldr	x25, [x20, #288]
  41dbb8:	mov	w0, #0x2                   	// #2
  41dbbc:	mov	w24, #0xfffc                	// #65532
  41dbc0:	csel	w21, w21, w0, ne  // ne = any
  41dbc4:	add	x20, x20, #0x120
  41dbc8:	add	x19, sp, #0x170
  41dbcc:	movk	w24, #0xe3ff, lsl #16
  41dbd0:	str	w22, [sp, #144]
  41dbd4:	ldr	x26, [sp, #128]
  41dbd8:	str	x28, [sp, #128]
  41dbdc:	ldr	x1, [x26, #8]
  41dbe0:	mov	x0, x26
  41dbe4:	ldr	x26, [x26]
  41dbe8:	str	x1, [sp, #368]
  41dbec:	bl	406b90 <free@plt>
  41dbf0:	mov	x0, x19
  41dbf4:	bl	41b5a8 <find_percent_cached@@Base>
  41dbf8:	mov	x1, x0
  41dbfc:	ldr	x0, [sp, #368]
  41dc00:	cbz	x1, 41dd28 <parse_file_seq@@Base+0x1818>
  41dc04:	bl	422cf0 <create_pattern_var@@Base>
  41dc08:	mov	x2, x0
  41dc0c:	ldp	x4, x5, [x27]
  41dc10:	stp	x4, x5, [x0, #48]
  41dc14:	mov	x1, x23
  41dc18:	ldr	x3, [x27, #16]
  41dc1c:	str	x3, [x2, #64]
  41dc20:	add	x0, x0, #0x20
  41dc24:	bl	424718 <assign_variable_definition@@Base>
  41dc28:	mov	x22, x0
  41dc2c:	ldrb	w0, [x0, #47]
  41dc30:	bfi	w0, w21, #2, #3
  41dc34:	strb	w0, [x22, #47]
  41dc38:	ldrh	w0, [x22, #46]
  41dc3c:	and	w0, w0, #0x380
  41dc40:	cmp	w0, #0x80
  41dc44:	ldr	x0, [x22, #8]
  41dc48:	b.eq	41dd74 <parse_file_seq@@Base+0x1864>  // b.none
  41dc4c:	bl	418c60 <xstrdup@@Base>
  41dc50:	str	x0, [x22, #8]
  41dc54:	ldrb	w1, [sp, #288]
  41dc58:	mov	w2, #0xff77                	// #65399
  41dc5c:	ldr	w3, [x22, #44]
  41dc60:	movk	w2, #0x9fff, lsl #16
  41dc64:	eor	x0, x1, #0x8
  41dc68:	ubfx	x1, x1, #5, #1
  41dc6c:	and	w3, w3, w2
  41dc70:	sbfx	w0, w0, #3, #1
  41dc74:	lsl	w1, w1, #7
  41dc78:	ubfiz	w0, w0, #29, #2
  41dc7c:	orr	w1, w1, #0x8
  41dc80:	orr	w0, w0, w1
  41dc84:	orr	w0, w0, w3
  41dc88:	str	w0, [x22, #44]
  41dc8c:	lsr	w0, w0, #24
  41dc90:	and	w0, w0, #0x1c
  41dc94:	cmp	w0, #0x14
  41dc98:	b.eq	41dcd8 <parse_file_seq@@Base+0x17c8>  // b.none
  41dc9c:	ldr	x28, [x22]
  41dca0:	mov	x0, x28
  41dca4:	bl	406680 <strlen@plt>
  41dca8:	mov	x1, x0
  41dcac:	mov	x0, x28
  41dcb0:	bl	4231f0 <lookup_variable@@Base>
  41dcb4:	cmp	x0, #0x0
  41dcb8:	mov	x28, x0
  41dcbc:	ccmp	x22, x0, #0x4, ne  // ne = any
  41dcc0:	b.eq	41dcd8 <parse_file_seq@@Base+0x17c8>  // b.none
  41dcc4:	ldrb	w0, [x0, #47]
  41dcc8:	and	w0, w0, #0x1c
  41dccc:	sub	w0, w0, #0xc
  41dcd0:	tst	w0, #0xf8
  41dcd4:	b.eq	41dcec <parse_file_seq@@Base+0x17dc>  // b.none
  41dcd8:	cbnz	x26, 41dbdc <parse_file_seq@@Base+0x16cc>
  41dcdc:	ldr	w22, [sp, #144]
  41dce0:	mov	w19, #0x0                   	// #0
  41dce4:	ldr	x28, [sp, #128]
  41dce8:	b	41d6f4 <parse_file_seq@@Base+0x11e4>
  41dcec:	ldr	x0, [x22, #8]
  41dcf0:	bl	406b90 <free@plt>
  41dcf4:	ldr	x0, [x28, #8]
  41dcf8:	bl	418c60 <xstrdup@@Base>
  41dcfc:	ldrb	w3, [x28, #47]
  41dd00:	ldrb	w4, [x28, #44]
  41dd04:	ldr	w1, [x22, #44]
  41dd08:	str	x0, [x22, #8]
  41dd0c:	ubfx	x0, x3, #2, #3
  41dd10:	and	w4, w4, #0x1
  41dd14:	and	w1, w1, w24
  41dd18:	orr	w0, w4, w0, lsl #26
  41dd1c:	orr	w0, w0, w1
  41dd20:	str	w0, [x22, #44]
  41dd24:	b	41dcd8 <parse_file_seq@@Base+0x17c8>
  41dd28:	bl	40c7a8 <lookup_file@@Base>
  41dd2c:	cbz	x0, 41e19c <parse_file_seq@@Base+0x1c8c>
  41dd30:	ldr	x1, [x0, #104]
  41dd34:	cmp	x1, #0x0
  41dd38:	csel	x22, x0, x1, eq  // eq = none
  41dd3c:	mov	x0, x22
  41dd40:	mov	w1, #0x1                   	// #1
  41dd44:	bl	424280 <initialize_file_variables@@Base>
  41dd48:	ldr	x0, [x22, #80]
  41dd4c:	mov	w2, w21
  41dd50:	mov	x1, x23
  41dd54:	mov	w3, #0x1                   	// #1
  41dd58:	str	x0, [x20]
  41dd5c:	mov	x0, x27
  41dd60:	bl	4247c8 <try_variable_definition@@Base>
  41dd64:	mov	x22, x0
  41dd68:	cbz	x0, 41e18c <parse_file_seq@@Base+0x1c7c>
  41dd6c:	str	x25, [x20]
  41dd70:	b	41dc54 <parse_file_seq@@Base+0x1744>
  41dd74:	mov	x1, #0x0                   	// #0
  41dd78:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  41dd7c:	str	x0, [x22, #8]
  41dd80:	b	41dc54 <parse_file_seq@@Base+0x1744>
  41dd84:	ldr	x0, [sp, #312]
  41dd88:	mov	w1, #0x3d                  	// #61
  41dd8c:	bl	41b010 <out_of_memory@@Base+0xe18>
  41dd90:	ldr	x1, [sp, #312]
  41dd94:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41dd98:	ldrb	w0, [x0, #148]
  41dd9c:	str	w0, [sp, #232]
  41dda0:	ldrb	w0, [x1]
  41dda4:	cbnz	w0, 41e108 <parse_file_seq@@Base+0x1bf8>
  41dda8:	ldr	x20, [sp, #304]
  41ddac:	mov	w1, #0x3a                  	// #58
  41ddb0:	mov	x0, x20
  41ddb4:	bl	406bb0 <strchr@plt>
  41ddb8:	mov	x25, x0
  41ddbc:	cbz	x0, 41de04 <parse_file_seq@@Base+0x18f4>
  41ddc0:	ldurb	w0, [x25, #-1]
  41ddc4:	cmp	w0, #0x5c
  41ddc8:	b.ne	41e0b0 <parse_file_seq@@Base+0x1ba0>  // b.any
  41ddcc:	sub	x1, x25, #0x2
  41ddd0:	mov	w0, #0x0                   	// #0
  41ddd4:	ldrb	w3, [x1], #-1
  41ddd8:	mov	w2, w0
  41dddc:	eor	w0, w0, #0x1
  41dde0:	cmp	w3, #0x5c
  41dde4:	b.eq	41ddd4 <parse_file_seq@@Base+0x18c4>  // b.none
  41dde8:	cmp	w2, #0x1
  41ddec:	b.eq	41e0b0 <parse_file_seq@@Base+0x1ba0>  // b.none
  41ddf0:	add	x0, x25, #0x1
  41ddf4:	mov	w1, #0x3a                  	// #58
  41ddf8:	bl	406bb0 <strchr@plt>
  41ddfc:	mov	x25, x0
  41de00:	cbnz	x0, 41ddc0 <parse_file_seq@@Base+0x18b0>
  41de04:	mov	x0, x20
  41de08:	str	x20, [sp, #368]
  41de0c:	bl	406680 <strlen@plt>
  41de10:	sub	x2, x0, #0x1
  41de14:	add	x1, sp, #0x158
  41de18:	add	x20, x20, x2
  41de1c:	add	x0, sp, #0x170
  41de20:	str	x20, [sp, #344]
  41de24:	bl	410a40 <strip_whitespace@@Base>
  41de28:	str	xzr, [sp, #224]
  41de2c:	ldr	x1, [sp, #344]
  41de30:	ldr	x0, [sp, #368]
  41de34:	cmp	x0, x1
  41de38:	b.hi	41de44 <parse_file_seq@@Base+0x1934>  // b.pmore
  41de3c:	ldrb	w2, [x0]
  41de40:	cbnz	w2, 41e080 <parse_file_seq@@Base+0x1b70>
  41de44:	mov	x23, #0x0                   	// #0
  41de48:	cbz	x19, 41de94 <parse_file_seq@@Base+0x1984>
  41de4c:	mov	x0, x19
  41de50:	bl	406680 <strlen@plt>
  41de54:	ldr	x1, [sp, #176]
  41de58:	mov	x20, x0
  41de5c:	add	x0, x0, #0x2
  41de60:	ldr	w1, [x1, #8]
  41de64:	str	w1, [sp, #212]
  41de68:	ldr	x1, [sp, #200]
  41de6c:	cmp	x0, x1
  41de70:	b.hi	41e094 <parse_file_seq@@Base+0x1b84>  // b.pmore
  41de74:	mov	x1, x19
  41de78:	mov	x2, x20
  41de7c:	ldr	x19, [sp, #184]
  41de80:	add	x23, x20, #0x1
  41de84:	mov	x0, x19
  41de88:	bl	406640 <memcpy@plt>
  41de8c:	mov	w0, #0xa                   	// #10
  41de90:	strb	w0, [x19, x20]
  41de94:	ldr	w0, [sp, #268]
  41de98:	cbz	w0, 41deb0 <parse_file_seq@@Base+0x19a0>
  41de9c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  41dea0:	ldr	x0, [x0, #2008]
  41dea4:	ldr	x0, [x0, #8]
  41dea8:	ldrb	w0, [x0]
  41deac:	cbz	w0, 41debc <parse_file_seq@@Base+0x19ac>
  41deb0:	mov	w19, #0x0                   	// #0
  41deb4:	str	wzr, [sp, #192]
  41deb8:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41debc:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  41dec0:	str	x23, [sp, #144]
  41dec4:	ldr	x1, [sp, #128]
  41dec8:	str	x25, [sp, #192]
  41decc:	ldr	x0, [x0, #2200]
  41ded0:	str	w22, [sp, #208]
  41ded4:	str	x28, [sp, #216]
  41ded8:	stp	x1, x0, [sp, #248]
  41dedc:	mov	w1, #0x25                  	// #37
  41dee0:	ldr	x0, [sp, #248]
  41dee4:	ldr	x27, [x0, #8]
  41dee8:	mov	x0, x27
  41deec:	bl	406bb0 <strchr@plt>
  41def0:	cbnz	x0, 41dfe0 <parse_file_seq@@Base+0x1ad0>
  41def4:	ldrb	w24, [x27]
  41def8:	cmp	w24, #0x2e
  41defc:	b.ne	41df10 <parse_file_seq@@Base+0x1a00>  // b.any
  41df00:	mov	x0, x27
  41df04:	mov	w1, #0x2f                  	// #47
  41df08:	bl	406bb0 <strchr@plt>
  41df0c:	cbz	x0, 41dfd0 <parse_file_seq@@Base+0x1ac0>
  41df10:	ldr	x0, [sp, #256]
  41df14:	ldr	x23, [x0, #24]
  41df18:	cbz	x23, 41dffc <parse_file_seq@@Base+0x1aec>
  41df1c:	mov	x26, x23
  41df20:	add	x0, x27, #0x1
  41df24:	str	x0, [sp, #280]
  41df28:	ldr	x21, [x26, #8]
  41df2c:	mov	x25, x21
  41df30:	cbz	x21, 41e064 <parse_file_seq@@Base+0x1b54>
  41df34:	ldrb	w22, [x25]
  41df38:	cmp	w22, #0x2e
  41df3c:	b.eq	41e05c <parse_file_seq@@Base+0x1b4c>  // b.none
  41df40:	cmp	x25, x27
  41df44:	b.eq	41dfd0 <parse_file_seq@@Base+0x1ac0>  // b.none
  41df48:	cmp	w24, w22
  41df4c:	mov	x28, x23
  41df50:	b.eq	41e044 <parse_file_seq@@Base+0x1b34>  // b.none
  41df54:	add	x0, x21, #0x1
  41df58:	str	x0, [sp, #272]
  41df5c:	b	41dfa0 <parse_file_seq@@Base+0x1a90>
  41df60:	mov	x0, x20
  41df64:	bl	406680 <strlen@plt>
  41df68:	mov	x1, x20
  41df6c:	mov	x19, x0
  41df70:	mov	x2, x0
  41df74:	mov	x0, x27
  41df78:	bl	406930 <strncmp@plt>
  41df7c:	cbnz	w0, 41df98 <parse_file_seq@@Base+0x1a88>
  41df80:	add	x0, x27, x19
  41df84:	cmp	x0, x25
  41df88:	b.eq	41dfd0 <parse_file_seq@@Base+0x1ac0>  // b.none
  41df8c:	ldrb	w0, [x27, x19]
  41df90:	cmp	w22, w0
  41df94:	b.eq	41dfb4 <parse_file_seq@@Base+0x1aa4>  // b.none
  41df98:	ldr	x28, [x28]
  41df9c:	cbz	x28, 41dff4 <parse_file_seq@@Base+0x1ae4>
  41dfa0:	ldr	x20, [x28, #8]
  41dfa4:	cbnz	x20, 41df60 <parse_file_seq@@Base+0x1a50>
  41dfa8:	ldr	x0, [x28, #16]
  41dfac:	ldr	x20, [x0]
  41dfb0:	b	41df60 <parse_file_seq@@Base+0x1a50>
  41dfb4:	cbz	w22, 41dfd0 <parse_file_seq@@Base+0x1ac0>
  41dfb8:	add	x0, x19, #0x1
  41dfbc:	add	x0, x27, x0
  41dfc0:	cbz	x21, 41e034 <parse_file_seq@@Base+0x1b24>
  41dfc4:	ldr	x1, [sp, #272]
  41dfc8:	bl	406b40 <strcmp@plt>
  41dfcc:	cbnz	w0, 41df98 <parse_file_seq@@Base+0x1a88>
  41dfd0:	ldr	x0, [sp, #248]
  41dfd4:	ldr	x0, [x0]
  41dfd8:	str	x0, [sp, #248]
  41dfdc:	cbnz	x0, 41dedc <parse_file_seq@@Base+0x19cc>
  41dfe0:	ldr	w22, [sp, #208]
  41dfe4:	ldr	x23, [sp, #144]
  41dfe8:	ldr	x25, [sp, #192]
  41dfec:	ldr	x28, [sp, #216]
  41dff0:	b	41deb0 <parse_file_seq@@Base+0x19a0>
  41dff4:	ldr	x26, [x26]
  41dff8:	cbnz	x26, 41df28 <parse_file_seq@@Base+0x1a18>
  41dffc:	ldr	w22, [sp, #208]
  41e000:	mov	x2, x27
  41e004:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  41e008:	mov	x6, #0x0                   	// #0
  41e00c:	mov	x5, #0x0                   	// #0
  41e010:	mov	w4, #0x0                   	// #0
  41e014:	mov	w3, #0x2                   	// #2
  41e018:	mov	x1, #0xd                   	// #13
  41e01c:	add	x0, x0, #0x948
  41e020:	ldr	x23, [sp, #144]
  41e024:	ldr	x25, [sp, #192]
  41e028:	ldr	x28, [sp, #216]
  41e02c:	bl	422df0 <define_variable_in_set@@Base>
  41e030:	b	41deb0 <parse_file_seq@@Base+0x19a0>
  41e034:	ldr	x1, [x26, #16]
  41e038:	ldr	x1, [x1]
  41e03c:	add	x1, x1, #0x1
  41e040:	b	41dfc8 <parse_file_seq@@Base+0x1ab8>
  41e044:	cbz	w24, 41dfd0 <parse_file_seq@@Base+0x1ac0>
  41e048:	add	x1, x21, #0x1
  41e04c:	cbz	x21, 41e070 <parse_file_seq@@Base+0x1b60>
  41e050:	ldr	x0, [sp, #280]
  41e054:	bl	406b40 <strcmp@plt>
  41e058:	cbz	w0, 41dfd0 <parse_file_seq@@Base+0x1ac0>
  41e05c:	mov	x28, x23
  41e060:	b	41df54 <parse_file_seq@@Base+0x1a44>
  41e064:	ldr	x0, [x26, #16]
  41e068:	ldr	x25, [x0]
  41e06c:	b	41df34 <parse_file_seq@@Base+0x1a24>
  41e070:	ldr	x0, [x26, #16]
  41e074:	ldr	x1, [x0]
  41e078:	add	x1, x1, #0x1
  41e07c:	b	41e050 <parse_file_seq@@Base+0x1b40>
  41e080:	sub	x1, x1, x0
  41e084:	add	x1, x1, #0x1
  41e088:	bl	418c80 <xstrndup@@Base>
  41e08c:	str	x0, [sp, #224]
  41e090:	b	41de44 <parse_file_seq@@Base+0x1934>
  41e094:	lsl	x0, x0, #1
  41e098:	mov	x1, x0
  41e09c:	str	x1, [sp, #200]
  41e0a0:	ldr	x0, [sp, #184]
  41e0a4:	bl	418aa0 <xrealloc@@Base>
  41e0a8:	str	x0, [sp, #184]
  41e0ac:	b	41de74 <parse_file_seq@@Base+0x1964>
  41e0b0:	mov	x1, #0x10                  	// #16
  41e0b4:	add	x0, sp, #0x130
  41e0b8:	mov	w4, #0x4                   	// #4
  41e0bc:	mov	x3, #0x0                   	// #0
  41e0c0:	mov	w2, #0x40                  	// #64
  41e0c4:	bl	41c510 <parse_file_seq@@Base>
  41e0c8:	ldr	x1, [sp, #304]
  41e0cc:	mov	x20, x0
  41e0d0:	add	x1, x1, #0x1
  41e0d4:	str	x1, [sp, #304]
  41e0d8:	cbz	x0, 41e17c <parse_file_seq@@Base+0x1c6c>
  41e0dc:	ldr	x0, [x20]
  41e0e0:	cbnz	x0, 41e168 <parse_file_seq@@Base+0x1c58>
  41e0e4:	add	x0, x20, #0x8
  41e0e8:	bl	41b5a8 <find_percent_cached@@Base>
  41e0ec:	str	x0, [sp, #240]
  41e0f0:	ldr	x25, [x20, #8]
  41e0f4:	cbz	x0, 41e148 <parse_file_seq@@Base+0x1c38>
  41e0f8:	mov	x0, x20
  41e0fc:	bl	406b90 <free@plt>
  41e100:	ldr	x20, [sp, #304]
  41e104:	b	41de04 <parse_file_seq@@Base+0x18f4>
  41e108:	ldr	x3, [sp, #304]
  41e10c:	mov	x2, #0xffffffffffffffff    	// #-1
  41e110:	ldr	x20, [x21, #1904]
  41e114:	add	x0, x3, x24
  41e118:	sub	x20, x3, x20
  41e11c:	bl	40ba00 <variable_expand_string@@Base>
  41e120:	ldr	x0, [x21, #1904]
  41e124:	add	x0, x0, x20
  41e128:	str	x0, [sp, #304]
  41e12c:	cbnz	x19, 41dda8 <parse_file_seq@@Base+0x1898>
  41e130:	mov	w1, #0x3b                  	// #59
  41e134:	bl	41b010 <out_of_memory@@Base+0xe18>
  41e138:	mov	x19, x0
  41e13c:	cbz	x0, 41dda8 <parse_file_seq@@Base+0x1898>
  41e140:	strb	wzr, [x19], #1
  41e144:	b	41dda8 <parse_file_seq@@Base+0x1898>
  41e148:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e14c:	add	x1, x1, #0xa70
  41e150:	mov	w2, #0x5                   	// #5
  41e154:	bl	406cd0 <dcgettext@plt>
  41e158:	mov	x2, x0
  41e15c:	ldr	x0, [sp, #176]
  41e160:	mov	x1, #0x0                   	// #0
  41e164:	bl	41a060 <fatal@@Base>
  41e168:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e16c:	mov	w2, #0x5                   	// #5
  41e170:	add	x1, x1, #0xa50
  41e174:	mov	x0, #0x0                   	// #0
  41e178:	b	41e154 <parse_file_seq@@Base+0x1c44>
  41e17c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e180:	mov	w2, #0x5                   	// #5
  41e184:	add	x1, x1, #0xa38
  41e188:	b	41e154 <parse_file_seq@@Base+0x1c44>
  41e18c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e190:	mov	w2, #0x5                   	// #5
  41e194:	add	x1, x1, #0xa08
  41e198:	b	41e154 <parse_file_seq@@Base+0x1c44>
  41e19c:	ldr	x0, [sp, #368]
  41e1a0:	bl	422490 <strcache_add@@Base>
  41e1a4:	bl	40c820 <enter_file@@Base>
  41e1a8:	mov	x22, x0
  41e1ac:	b	41dd3c <parse_file_seq@@Base+0x182c>
  41e1b0:	ldr	x25, [x21, #1904]
  41e1b4:	mov	x0, x23
  41e1b8:	bl	406680 <strlen@plt>
  41e1bc:	mov	x24, x0
  41e1c0:	mov	x0, x26
  41e1c4:	bl	406680 <strlen@plt>
  41e1c8:	mov	x2, x0
  41e1cc:	sub	x25, x23, x25
  41e1d0:	add	x0, x23, x24
  41e1d4:	mov	x1, x26
  41e1d8:	add	x2, x2, #0x1
  41e1dc:	bl	40b848 <variable_buffer_output@@Base>
  41e1e0:	ldr	x23, [x21, #1904]
  41e1e4:	add	x23, x23, x25
  41e1e8:	str	x23, [sp, #304]
  41e1ec:	b	41db2c <parse_file_seq@@Base+0x161c>
  41e1f0:	ldr	x0, [x21, #1904]
  41e1f4:	bl	418cf8 <next_token@@Base>
  41e1f8:	str	x0, [sp, #304]
  41e1fc:	ldrb	w0, [x0]
  41e200:	cbz	w0, 41d6ec <parse_file_seq@@Base+0x11dc>
  41e204:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41e208:	ldrb	w0, [x0, #148]
  41e20c:	cmp	w0, #0x9
  41e210:	b.ne	41e22c <parse_file_seq@@Base+0x1d1c>  // b.any
  41e214:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e218:	mov	x0, x27
  41e21c:	add	x1, x1, #0x9a0
  41e220:	mov	x2, #0x8                   	// #8
  41e224:	bl	406930 <strncmp@plt>
  41e228:	cbz	w0, 41e240 <parse_file_seq@@Base+0x1d30>
  41e22c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e230:	mov	w2, #0x5                   	// #5
  41e234:	add	x1, x1, #0x9f0
  41e238:	mov	x0, #0x0                   	// #0
  41e23c:	b	41e154 <parse_file_seq@@Base+0x1c44>
  41e240:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e244:	mov	w2, #0x5                   	// #5
  41e248:	add	x1, x1, #0x9b0
  41e24c:	mov	x0, #0x0                   	// #0
  41e250:	b	41e154 <parse_file_seq@@Base+0x1c44>
  41e254:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e258:	mov	w2, #0x5                   	// #5
  41e25c:	add	x1, x1, #0x840
  41e260:	mov	x0, #0x0                   	// #0
  41e264:	b	41e154 <parse_file_seq@@Base+0x1c44>
  41e268:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e26c:	mov	w2, #0x5                   	// #5
  41e270:	add	x1, x1, #0x8e0
  41e274:	mov	x0, #0x0                   	// #0
  41e278:	b	41e154 <parse_file_seq@@Base+0x1c44>
  41e27c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e280:	mov	w2, #0x5                   	// #5
  41e284:	add	x1, x1, #0x980
  41e288:	mov	x0, #0x0                   	// #0
  41e28c:	b	41e154 <parse_file_seq@@Base+0x1c44>
  41e290:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e294:	mov	w2, #0x5                   	// #5
  41e298:	add	x1, x1, #0x958
  41e29c:	mov	x0, #0x0                   	// #0
  41e2a0:	b	41e154 <parse_file_seq@@Base+0x1c44>
  41e2a4:	ldr	x0, [sp, #368]
  41e2a8:	bl	406680 <strlen@plt>
  41e2ac:	mov	x19, x0
  41e2b0:	mov	w2, #0x5                   	// #5
  41e2b4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e2b8:	mov	x0, #0x0                   	// #0
  41e2bc:	add	x1, x1, #0x940
  41e2c0:	bl	406cd0 <dcgettext@plt>
  41e2c4:	mov	x2, x0
  41e2c8:	ldr	x0, [sp, #176]
  41e2cc:	mov	x1, x19
  41e2d0:	ldr	x3, [sp, #368]
  41e2d4:	bl	41a060 <fatal@@Base>
  41e2d8:	mov	x25, #0x0                   	// #0
  41e2dc:	mov	w22, #0x0                   	// #0
  41e2e0:	mov	w19, #0x0                   	// #0
  41e2e4:	mov	x23, #0x0                   	// #0
  41e2e8:	str	wzr, [sp, #192]
  41e2ec:	b	41cbc0 <parse_file_seq@@Base+0x6b0>
  41e2f0:	ldr	x0, [sp, #368]
  41e2f4:	bl	40c820 <enter_file@@Base>
  41e2f8:	str	x0, [x20, #16]
  41e2fc:	b	41d850 <parse_file_seq@@Base+0x1340>
  41e300:	add	x20, sp, #0x158
  41e304:	mov	x1, #0x0                   	// #0
  41e308:	add	x19, sp, #0x170
  41e30c:	str	x20, [sp, #248]
  41e310:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  41e314:	mov	x22, x0
  41e318:	mov	x1, x20
  41e31c:	mov	x0, x19
  41e320:	str	x22, [sp, #368]
  41e324:	bl	418d28 <find_next_token@@Base>
  41e328:	mov	x20, x0
  41e32c:	cbz	x0, 41e3a0 <parse_file_seq@@Base+0x1e90>
  41e330:	cmp	w21, #0x75
  41e334:	adrp	x21, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e338:	cset	w23, eq  // eq = none
  41e33c:	add	x21, x21, #0x350
  41e340:	b	41e364 <parse_file_seq@@Base+0x1e54>
  41e344:	ldrb	w3, [x2, #47]
  41e348:	mov	x0, x19
  41e34c:	ldr	x1, [sp, #248]
  41e350:	bfi	w3, w23, #5, #2
  41e354:	strb	w3, [x2, #47]
  41e358:	bl	418d28 <find_next_token@@Base>
  41e35c:	mov	x20, x0
  41e360:	cbz	x0, 41e3a0 <parse_file_seq@@Base+0x1e90>
  41e364:	ldr	x1, [sp, #344]
  41e368:	mov	x0, x20
  41e36c:	bl	4231f0 <lookup_variable@@Base>
  41e370:	mov	x2, x0
  41e374:	cbnz	x0, 41e344 <parse_file_seq@@Base+0x1e34>
  41e378:	ldr	x6, [sp, #176]
  41e37c:	mov	x2, x21
  41e380:	ldr	x1, [sp, #344]
  41e384:	mov	x0, x20
  41e388:	mov	x5, #0x0                   	// #0
  41e38c:	mov	w4, #0x0                   	// #0
  41e390:	mov	w3, #0x2                   	// #2
  41e394:	bl	422df0 <define_variable_in_set@@Base>
  41e398:	mov	x2, x0
  41e39c:	b	41e344 <parse_file_seq@@Base+0x1e34>
  41e3a0:	mov	x0, x22
  41e3a4:	mov	w22, #0x0                   	// #0
  41e3a8:	bl	406b90 <free@plt>
  41e3ac:	b	41d6f0 <parse_file_seq@@Base+0x11e0>
  41e3b0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e3b4:	mov	w2, #0x5                   	// #5
  41e3b8:	add	x1, x1, #0x840
  41e3bc:	b	41d578 <parse_file_seq@@Base+0x1068>
  41e3c0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e3c4:	mov	w2, #0x5                   	// #5
  41e3c8:	add	x1, x1, #0xa90
  41e3cc:	mov	x0, #0x0                   	// #0
  41e3d0:	b	41e154 <parse_file_seq@@Base+0x1c44>
  41e3d4:	nop
  41e3d8:	stp	x29, x30, [sp, #-160]!
  41e3dc:	mov	x29, sp
  41e3e0:	stp	x19, x20, [sp, #16]
  41e3e4:	mov	x20, x0
  41e3e8:	mov	x0, #0x40                  	// #64
  41e3ec:	stp	x21, x22, [sp, #32]
  41e3f0:	stp	x23, x24, [sp, #48]
  41e3f4:	and	w24, w1, #0xffff
  41e3f8:	adrp	x23, 445000 <output_context@@Base+0x1250>
  41e3fc:	add	x23, x23, #0xdb8
  41e400:	stp	x25, x26, [sp, #64]
  41e404:	bl	418a78 <xcalloc@@Base>
  41e408:	mov	x22, x0
  41e40c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41e410:	ldr	x2, [x23, #32]
  41e414:	mov	x1, #0x1                   	// #1
  41e418:	ldr	w0, [x0, #1088]
  41e41c:	and	w19, w24, #0x8
  41e420:	str	x2, [x22]
  41e424:	str	x22, [x23, #32]
  41e428:	stp	x20, x1, [sp, #136]
  41e42c:	str	xzr, [sp, #152]
  41e430:	tbnz	w0, #1, 41e5a0 <parse_file_seq@@Base+0x2090>
  41e434:	mov	x25, #0x0                   	// #0
  41e438:	cbnz	w19, 41e448 <parse_file_seq@@Base+0x1f38>
  41e43c:	ldrb	w0, [x20]
  41e440:	cmp	w0, #0x7e
  41e444:	b.eq	41e6f4 <parse_file_seq@@Base+0x21e4>  // b.none
  41e448:	adrp	x21, 426000 <rpl_fcntl@@Base+0xf0>
  41e44c:	bl	406d70 <__errno_location@plt>
  41e450:	add	x21, x21, #0xbe8
  41e454:	mov	x19, x0
  41e458:	b	41e464 <parse_file_seq@@Base+0x1f54>
  41e45c:	cmp	w1, #0x4
  41e460:	b.ne	41e55c <parse_file_seq@@Base+0x204c>  // b.any
  41e464:	str	wzr, [x19]
  41e468:	mov	x1, x21
  41e46c:	mov	x0, x20
  41e470:	bl	4068b0 <fopen@plt>
  41e474:	str	x0, [sp, #128]
  41e478:	ldr	w1, [x19]
  41e47c:	cbz	x0, 41e45c <parse_file_seq@@Base+0x1f4c>
  41e480:	str	w1, [x22, #36]
  41e484:	cmp	w1, #0xc
  41e488:	b.eq	41e574 <parse_file_seq@@Base+0x2064>  // b.none
  41e48c:	sub	w0, w1, #0x17
  41e490:	cmp	w0, #0x1
  41e494:	b.ls	41e574 <parse_file_seq@@Base+0x2064>  // b.plast
  41e498:	mov	x0, x20
  41e49c:	bl	422490 <strcache_add@@Base>
  41e4a0:	mov	x20, x0
  41e4a4:	bl	40c7a8 <lookup_file@@Base>
  41e4a8:	str	x0, [x22, #16]
  41e4ac:	cbz	x0, 41e70c <parse_file_seq@@Base+0x21fc>
  41e4b0:	ldr	x21, [x0]
  41e4b4:	strb	w24, [x22, #32]
  41e4b8:	mov	x0, x25
  41e4bc:	bl	406b90 <free@plt>
  41e4c0:	ldr	x0, [sp, #128]
  41e4c4:	cbz	x0, 41e5dc <parse_file_seq@@Base+0x20cc>
  41e4c8:	str	wzr, [x22, #36]
  41e4cc:	add	x20, sp, #0x88
  41e4d0:	bl	406850 <fileno@plt>
  41e4d4:	bl	425a40 <fd_noinherit@@Base>
  41e4d8:	mov	x2, x21
  41e4dc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  41e4e0:	add	x1, x1, #0xb50
  41e4e4:	mov	w5, #0x0                   	// #0
  41e4e8:	mov	w4, #0x6                   	// #6
  41e4ec:	mov	w3, #0x2                   	// #2
  41e4f0:	mov	x0, x20
  41e4f4:	bl	423ea0 <do_variable_definition@@Base>
  41e4f8:	mov	x0, #0xc8                  	// #200
  41e4fc:	str	x0, [sp, #120]
  41e500:	bl	418a50 <xmalloc@@Base>
  41e504:	mov	x2, x0
  41e508:	mvn	w1, w24
  41e50c:	add	x0, sp, #0x60
  41e510:	and	w1, w1, #0x1
  41e514:	stp	x2, x2, [sp, #96]
  41e518:	str	x2, [sp, #112]
  41e51c:	ldr	x21, [x23, #40]
  41e520:	str	x20, [x23, #40]
  41e524:	bl	41cb30 <parse_file_seq@@Base+0x620>
  41e528:	str	x21, [x23, #40]
  41e52c:	ldr	x0, [sp, #128]
  41e530:	bl	406890 <fclose@plt>
  41e534:	ldr	x0, [sp, #112]
  41e538:	bl	406b90 <free@plt>
  41e53c:	str	wzr, [x19]
  41e540:	mov	x0, x22
  41e544:	ldp	x19, x20, [sp, #16]
  41e548:	ldp	x21, x22, [sp, #32]
  41e54c:	ldp	x23, x24, [sp, #48]
  41e550:	ldp	x25, x26, [sp, #64]
  41e554:	ldp	x29, x30, [sp], #160
  41e558:	ret
  41e55c:	str	w1, [x22, #36]
  41e560:	cmp	w1, #0xc
  41e564:	b.eq	41e574 <parse_file_seq@@Base+0x2064>  // b.none
  41e568:	sub	w0, w1, #0x17
  41e56c:	cmp	w0, #0x1
  41e570:	b.hi	41e60c <parse_file_seq@@Base+0x20fc>  // b.pmore
  41e574:	mov	w0, w1
  41e578:	stp	x27, x28, [sp, #80]
  41e57c:	bl	406a40 <strerror@plt>
  41e580:	mov	x19, x0
  41e584:	bl	406680 <strlen@plt>
  41e588:	mov	x1, x0
  41e58c:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  41e590:	ldr	x0, [x23, #40]
  41e594:	mov	x3, x19
  41e598:	add	x2, x2, #0x4a0
  41e59c:	bl	41a060 <fatal@@Base>
  41e5a0:	mov	w2, #0x5                   	// #5
  41e5a4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e5a8:	mov	x0, #0x0                   	// #0
  41e5ac:	add	x1, x1, #0xaa0
  41e5b0:	bl	406cd0 <dcgettext@plt>
  41e5b4:	mov	x1, x20
  41e5b8:	bl	406d60 <printf@plt>
  41e5bc:	tbnz	w24, #0, 41e6d4 <parse_file_seq@@Base+0x21c4>
  41e5c0:	tbnz	w24, #1, 41e6b4 <parse_file_seq@@Base+0x21a4>
  41e5c4:	tbnz	w24, #2, 41e67c <parse_file_seq@@Base+0x216c>
  41e5c8:	cbnz	w19, 41e698 <parse_file_seq@@Base+0x2188>
  41e5cc:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  41e5d0:	add	x0, x0, #0xa80
  41e5d4:	bl	406ae0 <puts@plt>
  41e5d8:	b	41e434 <parse_file_seq@@Base+0x1f24>
  41e5dc:	ldr	x0, [x22, #16]
  41e5e0:	mov	x1, #0x1                   	// #1
  41e5e4:	ldr	w2, [x22, #36]
  41e5e8:	str	w2, [x19]
  41e5ec:	str	x1, [x0, #112]
  41e5f0:	mov	x0, x22
  41e5f4:	ldp	x19, x20, [sp, #16]
  41e5f8:	ldp	x21, x22, [sp, #32]
  41e5fc:	ldp	x23, x24, [sp, #48]
  41e600:	ldp	x25, x26, [sp, #64]
  41e604:	ldp	x29, x30, [sp], #160
  41e608:	ret
  41e60c:	tbz	w24, #1, 41e498 <parse_file_seq@@Base+0x1f88>
  41e610:	ldrb	w0, [x20]
  41e614:	cmp	w0, #0x2f
  41e618:	b.eq	41e498 <parse_file_seq@@Base+0x1f88>  // b.none
  41e61c:	ldr	x0, [x23, #8]
  41e620:	ldr	x1, [x0]
  41e624:	cbz	x1, 41e498 <parse_file_seq@@Base+0x1f88>
  41e628:	stp	x27, x28, [sp, #80]
  41e62c:	adrp	x27, 427000 <_IO_stdin_used@@Base+0xc20>
  41e630:	mov	w28, #0x0                   	// #0
  41e634:	add	x27, x27, #0x8f0
  41e638:	b	41e64c <parse_file_seq@@Base+0x213c>
  41e63c:	ldr	x0, [x23, #8]
  41e640:	add	w28, w28, #0x1
  41e644:	ldr	x1, [x0, w28, uxtw #3]
  41e648:	cbz	x1, 41e674 <parse_file_seq@@Base+0x2164>
  41e64c:	mov	x3, x20
  41e650:	mov	x2, x27
  41e654:	mov	w0, #0x3                   	// #3
  41e658:	bl	418ad8 <concat@@Base>
  41e65c:	mov	x1, x21
  41e660:	mov	x26, x0
  41e664:	bl	4068b0 <fopen@plt>
  41e668:	str	x0, [sp, #128]
  41e66c:	cbz	x0, 41e63c <parse_file_seq@@Base+0x212c>
  41e670:	mov	x20, x26
  41e674:	ldp	x27, x28, [sp, #80]
  41e678:	b	41e498 <parse_file_seq@@Base+0x1f88>
  41e67c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e680:	add	x1, x1, #0xae0
  41e684:	mov	w2, #0x5                   	// #5
  41e688:	mov	x0, #0x0                   	// #0
  41e68c:	bl	406cd0 <dcgettext@plt>
  41e690:	bl	406d60 <printf@plt>
  41e694:	cbz	w19, 41e5cc <parse_file_seq@@Base+0x20bc>
  41e698:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e69c:	add	x1, x1, #0xaf0
  41e6a0:	mov	w2, #0x5                   	// #5
  41e6a4:	mov	x0, #0x0                   	// #0
  41e6a8:	bl	406cd0 <dcgettext@plt>
  41e6ac:	bl	406d60 <printf@plt>
  41e6b0:	b	41e5cc <parse_file_seq@@Base+0x20bc>
  41e6b4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e6b8:	add	x1, x1, #0xad0
  41e6bc:	mov	w2, #0x5                   	// #5
  41e6c0:	mov	x0, #0x0                   	// #0
  41e6c4:	bl	406cd0 <dcgettext@plt>
  41e6c8:	bl	406d60 <printf@plt>
  41e6cc:	tbz	w24, #2, 41e5c8 <parse_file_seq@@Base+0x20b8>
  41e6d0:	b	41e67c <parse_file_seq@@Base+0x216c>
  41e6d4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e6d8:	add	x1, x1, #0xab8
  41e6dc:	mov	w2, #0x5                   	// #5
  41e6e0:	mov	x0, #0x0                   	// #0
  41e6e4:	bl	406cd0 <dcgettext@plt>
  41e6e8:	bl	406d60 <printf@plt>
  41e6ec:	tbz	w24, #1, 41e5c4 <parse_file_seq@@Base+0x20b4>
  41e6f0:	b	41e6b4 <parse_file_seq@@Base+0x21a4>
  41e6f4:	mov	x0, x20
  41e6f8:	bl	41c130 <tilde_expand@@Base>
  41e6fc:	cmp	x0, #0x0
  41e700:	mov	x25, x0
  41e704:	csel	x20, x20, x0, eq  // eq = none
  41e708:	b	41e448 <parse_file_seq@@Base+0x1f38>
  41e70c:	mov	x0, x20
  41e710:	bl	40c820 <enter_file@@Base>
  41e714:	str	x0, [x22, #16]
  41e718:	b	41e4b0 <parse_file_seq@@Base+0x1fa0>
  41e71c:	nop

000000000041e720 <read_all_makefiles@@Base>:
  41e720:	stp	x29, x30, [sp, #-80]!
  41e724:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  41e728:	mov	x6, #0x0                   	// #0
  41e72c:	mov	x29, sp
  41e730:	ldr	x1, [x1, #288]
  41e734:	stp	x21, x22, [sp, #32]
  41e738:	adrp	x21, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e73c:	add	x21, x21, #0x350
  41e740:	mov	w4, #0x0                   	// #0
  41e744:	ldr	x5, [x1, #8]
  41e748:	mov	x2, x21
  41e74c:	mov	w3, #0x2                   	// #2
  41e750:	mov	x1, #0xd                   	// #13
  41e754:	stp	x19, x20, [sp, #16]
  41e758:	mov	x20, x0
  41e75c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  41e760:	add	x0, x0, #0xb50
  41e764:	bl	422df0 <define_variable_in_set@@Base>
  41e768:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41e76c:	ldr	w0, [x0, #1088]
  41e770:	tbnz	w0, #0, 41e8dc <read_all_makefiles@@Base+0x1bc>
  41e774:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  41e778:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e77c:	mov	x1, #0x0                   	// #0
  41e780:	add	x0, x0, #0xb20
  41e784:	ldr	w22, [x19, #2048]
  41e788:	str	wzr, [x19, #2048]
  41e78c:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  41e790:	str	w22, [x19, #2048]
  41e794:	mov	x19, x0
  41e798:	str	x0, [sp, #64]
  41e79c:	b	41e7c4 <read_all_makefiles@@Base+0xa4>
  41e7a0:	ldr	x1, [sp, #64]
  41e7a4:	add	x3, x1, #0x1
  41e7a8:	ldrb	w2, [x1]
  41e7ac:	cbz	w2, 41e7b8 <read_all_makefiles@@Base+0x98>
  41e7b0:	str	x3, [sp, #64]
  41e7b4:	strb	wzr, [x1]
  41e7b8:	bl	422490 <strcache_add@@Base>
  41e7bc:	mov	w1, #0x7                   	// #7
  41e7c0:	bl	41e3d8 <parse_file_seq@@Base+0x1ec8>
  41e7c4:	add	x1, sp, #0x48
  41e7c8:	add	x0, sp, #0x40
  41e7cc:	bl	418d28 <find_next_token@@Base>
  41e7d0:	cbnz	x0, 41e7a0 <read_all_makefiles@@Base+0x80>
  41e7d4:	mov	x0, x19
  41e7d8:	bl	406b90 <free@plt>
  41e7dc:	cbz	x20, 41e87c <read_all_makefiles@@Base+0x15c>
  41e7e0:	ldr	x19, [x20]
  41e7e4:	cbz	x19, 41e87c <read_all_makefiles@@Base+0x15c>
  41e7e8:	mov	w22, #0x0                   	// #0
  41e7ec:	str	x23, [sp, #48]
  41e7f0:	bl	406d70 <__errno_location@plt>
  41e7f4:	mov	x23, x0
  41e7f8:	b	41e810 <read_all_makefiles@@Base+0xf0>
  41e7fc:	ldr	x1, [x19, #8]
  41e800:	cbz	x1, 41e840 <read_all_makefiles@@Base+0x120>
  41e804:	str	x1, [x20]
  41e808:	ldr	x19, [x20, #8]!
  41e80c:	cbz	x19, 41e854 <read_all_makefiles@@Base+0x134>
  41e810:	mov	x0, x19
  41e814:	mov	w1, #0x0                   	// #0
  41e818:	bl	41e3d8 <parse_file_seq@@Base+0x1ec8>
  41e81c:	add	w22, w22, #0x1
  41e820:	ldr	w1, [x23]
  41e824:	mov	x19, x0
  41e828:	cbz	w1, 41e7fc <read_all_makefiles@@Base+0xdc>
  41e82c:	ldr	x1, [x20]
  41e830:	mov	x0, x21
  41e834:	bl	419f38 <perror_with_name@@Base>
  41e838:	ldr	x1, [x19, #8]
  41e83c:	cbnz	x1, 41e804 <read_all_makefiles@@Base+0xe4>
  41e840:	ldr	x0, [x19, #16]
  41e844:	ldr	x1, [x0]
  41e848:	str	x1, [x20]
  41e84c:	ldr	x19, [x20, #8]!
  41e850:	cbnz	x19, 41e810 <read_all_makefiles@@Base+0xf0>
  41e854:	cbz	w22, 41e878 <read_all_makefiles@@Base+0x158>
  41e858:	adrp	x0, 445000 <output_context@@Base+0x1250>
  41e85c:	ldr	x23, [sp, #48]
  41e860:	ldr	x2, [x0, #3544]
  41e864:	mov	x0, x2
  41e868:	ldp	x19, x20, [sp, #16]
  41e86c:	ldp	x21, x22, [sp, #32]
  41e870:	ldp	x29, x30, [sp], #80
  41e874:	ret
  41e878:	ldr	x23, [sp, #48]
  41e87c:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  41e880:	add	x20, x20, #0xb0
  41e884:	add	x19, x20, #0x30
  41e888:	ldr	x0, [x20, #48]
  41e88c:	cbnz	x0, 41e89c <read_all_makefiles@@Base+0x17c>
  41e890:	b	41e908 <read_all_makefiles@@Base+0x1e8>
  41e894:	ldr	x0, [x19, #8]!
  41e898:	cbz	x0, 41e904 <read_all_makefiles@@Base+0x1e4>
  41e89c:	bl	40b0b8 <file_exists_p@@Base>
  41e8a0:	cbz	w0, 41e894 <read_all_makefiles@@Base+0x174>
  41e8a4:	ldr	x0, [x19]
  41e8a8:	cbz	x0, 41e904 <read_all_makefiles@@Base+0x1e4>
  41e8ac:	mov	w1, #0x0                   	// #0
  41e8b0:	bl	41e3d8 <parse_file_seq@@Base+0x1ec8>
  41e8b4:	bl	406d70 <__errno_location@plt>
  41e8b8:	ldr	w0, [x0]
  41e8bc:	cbnz	w0, 41e9ac <read_all_makefiles@@Base+0x28c>
  41e8c0:	adrp	x0, 445000 <output_context@@Base+0x1250>
  41e8c4:	ldp	x19, x20, [sp, #16]
  41e8c8:	ldr	x2, [x0, #3544]
  41e8cc:	ldp	x21, x22, [sp, #32]
  41e8d0:	mov	x0, x2
  41e8d4:	ldp	x29, x30, [sp], #80
  41e8d8:	ret
  41e8dc:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41e8e0:	add	x1, x1, #0xb08
  41e8e4:	mov	w2, #0x5                   	// #5
  41e8e8:	mov	x0, #0x0                   	// #0
  41e8ec:	bl	406cd0 <dcgettext@plt>
  41e8f0:	bl	406d60 <printf@plt>
  41e8f4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41e8f8:	ldr	x0, [x0, #384]
  41e8fc:	bl	406c20 <fflush@plt>
  41e900:	b	41e774 <read_all_makefiles@@Base+0x54>
  41e904:	ldr	x0, [x20, #48]
  41e908:	adrp	x22, 445000 <output_context@@Base+0x1250>
  41e90c:	add	x22, x22, #0xdb8
  41e910:	ldr	x2, [x22, #32]
  41e914:	mov	x19, x2
  41e918:	cbz	x19, 41e930 <read_all_makefiles@@Base+0x210>
  41e91c:	nop
  41e920:	ldr	x1, [x19]
  41e924:	cbz	x1, 41e9a4 <read_all_makefiles@@Base+0x284>
  41e928:	mov	x19, x1
  41e92c:	cbnz	x19, 41e920 <read_all_makefiles@@Base+0x200>
  41e930:	cbz	x0, 41e864 <read_all_makefiles@@Base+0x144>
  41e934:	add	x20, x20, #0x30
  41e938:	str	x23, [sp, #48]
  41e93c:	mov	w23, #0x4                   	// #4
  41e940:	b	41e950 <read_all_makefiles@@Base+0x230>
  41e944:	ldr	x0, [x20, #8]!
  41e948:	str	x19, [x21]
  41e94c:	cbz	x0, 41e984 <read_all_makefiles@@Base+0x264>
  41e950:	mov	x0, #0x40                  	// #64
  41e954:	bl	418a78 <xcalloc@@Base>
  41e958:	mov	x21, x19
  41e95c:	mov	x19, x0
  41e960:	ldr	x0, [x20]
  41e964:	bl	422490 <strcache_add@@Base>
  41e968:	bl	40c820 <enter_file@@Base>
  41e96c:	str	x0, [x19, #16]
  41e970:	strb	w23, [x19, #32]
  41e974:	cbnz	x21, 41e944 <read_all_makefiles@@Base+0x224>
  41e978:	ldr	x0, [x20, #8]!
  41e97c:	str	x19, [x22, #32]
  41e980:	cbnz	x0, 41e950 <read_all_makefiles@@Base+0x230>
  41e984:	ldr	x23, [sp, #48]
  41e988:	str	xzr, [x19]
  41e98c:	ldr	x2, [x22, #32]
  41e990:	ldp	x19, x20, [sp, #16]
  41e994:	mov	x0, x2
  41e998:	ldp	x21, x22, [sp, #32]
  41e99c:	ldp	x29, x30, [sp], #80
  41e9a0:	ret
  41e9a4:	cbnz	x0, 41e934 <read_all_makefiles@@Base+0x214>
  41e9a8:	b	41e988 <read_all_makefiles@@Base+0x268>
  41e9ac:	ldr	x1, [x19]
  41e9b0:	mov	x0, x21
  41e9b4:	bl	419f38 <perror_with_name@@Base>
  41e9b8:	b	41e8c0 <read_all_makefiles@@Base+0x1a0>
  41e9bc:	nop

000000000041e9c0 <eval_buffer@@Base>:
  41e9c0:	stp	x29, x30, [sp, #-144]!
  41e9c4:	mov	x29, sp
  41e9c8:	stp	x19, x20, [sp, #16]
  41e9cc:	adrp	x19, 445000 <output_context@@Base+0x1250>
  41e9d0:	add	x19, x19, #0xdb8
  41e9d4:	mov	x20, x0
  41e9d8:	str	x21, [sp, #32]
  41e9dc:	mov	x21, x1
  41e9e0:	bl	406680 <strlen@plt>
  41e9e4:	stp	x20, x20, [sp, #80]
  41e9e8:	stp	x20, x0, [sp, #96]
  41e9ec:	str	xzr, [sp, #112]
  41e9f0:	ldr	x20, [x19, #40]
  41e9f4:	cbz	x21, 41ea50 <eval_buffer@@Base+0x90>
  41e9f8:	ldp	x0, x1, [x21]
  41e9fc:	stp	x0, x1, [sp, #120]
  41ea00:	ldr	x0, [x21, #16]
  41ea04:	str	x0, [sp, #136]
  41ea08:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41ea0c:	add	x3, sp, #0x38
  41ea10:	add	x2, sp, #0x78
  41ea14:	mov	w1, #0x1                   	// #1
  41ea18:	ldr	x21, [x0, #176]
  41ea1c:	str	x3, [x0, #176]
  41ea20:	add	x0, sp, #0x50
  41ea24:	str	x2, [x19, #40]
  41ea28:	stp	xzr, xzr, [sp, #56]
  41ea2c:	str	xzr, [sp, #72]
  41ea30:	bl	41cb30 <parse_file_seq@@Base+0x620>
  41ea34:	mov	x0, x21
  41ea38:	bl	41a538 <out_of_memory@@Base+0x340>
  41ea3c:	str	x20, [x19, #40]
  41ea40:	ldp	x19, x20, [sp, #16]
  41ea44:	ldr	x21, [sp, #32]
  41ea48:	ldp	x29, x30, [sp], #144
  41ea4c:	ret
  41ea50:	cbz	x20, 41ea68 <eval_buffer@@Base+0xa8>
  41ea54:	ldp	x0, x1, [x20]
  41ea58:	stp	x0, x1, [sp, #120]
  41ea5c:	ldr	x0, [x20, #16]
  41ea60:	str	x0, [sp, #136]
  41ea64:	b	41ea08 <eval_buffer@@Base+0x48>
  41ea68:	mov	x0, #0x1                   	// #1
  41ea6c:	stp	xzr, x0, [sp, #120]
  41ea70:	str	xzr, [sp, #136]
  41ea74:	b	41ea08 <eval_buffer@@Base+0x48>
  41ea78:	mov	x12, #0x20c0                	// #8384
  41ea7c:	sub	sp, sp, x12
  41ea80:	stp	x29, x30, [sp]
  41ea84:	mov	x29, sp
  41ea88:	stp	x19, x20, [sp, #16]
  41ea8c:	mov	x19, x0
  41ea90:	str	x21, [sp, #32]
  41ea94:	b	41eaa8 <eval_buffer@@Base+0xe8>
  41ea98:	bl	406d70 <__errno_location@plt>
  41ea9c:	ldr	w1, [x0]
  41eaa0:	cmp	w1, #0x4
  41eaa4:	b.ne	41eb14 <eval_buffer@@Base+0x154>  // b.any
  41eaa8:	add	x2, sp, #0x30
  41eaac:	mov	x1, x19
  41eab0:	mov	w0, #0x0                   	// #0
  41eab4:	bl	406d90 <__xstat@plt>
  41eab8:	cmn	w0, #0x1
  41eabc:	b.eq	41ea98 <eval_buffer@@Base+0xd8>  // b.none
  41eac0:	cbnz	w0, 41eb0c <eval_buffer@@Base+0x14c>
  41eac4:	ldp	x1, x2, [sp, #136]
  41eac8:	mov	x0, x19
  41eacc:	bl	40db28 <file_timestamp_cons@@Base>
  41ead0:	mov	x21, x0
  41ead4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41ead8:	ldr	w0, [x0, #3400]
  41eadc:	cbz	w0, 41eaf0 <eval_buffer@@Base+0x130>
  41eae0:	mov	x0, x19
  41eae4:	bl	406680 <strlen@plt>
  41eae8:	cmp	x0, #0x1, lsl #12
  41eaec:	b.ls	41eb40 <eval_buffer@@Base+0x180>  // b.plast
  41eaf0:	mov	x0, x21
  41eaf4:	mov	x12, #0x20c0                	// #8384
  41eaf8:	ldp	x29, x30, [sp]
  41eafc:	ldp	x19, x20, [sp, #16]
  41eb00:	ldr	x21, [sp, #32]
  41eb04:	add	sp, sp, x12
  41eb08:	ret
  41eb0c:	bl	406d70 <__errno_location@plt>
  41eb10:	ldr	w1, [x0]
  41eb14:	cmp	w1, #0x2
  41eb18:	mov	x21, #0x1                   	// #1
  41eb1c:	ccmp	w1, #0x14, #0x4, ne  // ne = any
  41eb20:	b.ne	41ec78 <eval_buffer@@Base+0x2b8>  // b.any
  41eb24:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41eb28:	ldr	w0, [x0, #3400]
  41eb2c:	cbz	w0, 41eaf0 <eval_buffer@@Base+0x130>
  41eb30:	mov	x0, x19
  41eb34:	bl	406680 <strlen@plt>
  41eb38:	cmp	x0, #0x1, lsl #12
  41eb3c:	b.hi	41eaf0 <eval_buffer@@Base+0x130>  // b.pmore
  41eb40:	add	x20, sp, #0xb0
  41eb44:	add	x2, x0, #0x1
  41eb48:	mov	x1, x19
  41eb4c:	mov	x0, x20
  41eb50:	bl	406640 <memcpy@plt>
  41eb54:	nop
  41eb58:	add	x2, sp, #0x30
  41eb5c:	mov	x1, x20
  41eb60:	mov	w0, #0x0                   	// #0
  41eb64:	bl	406c60 <__lxstat@plt>
  41eb68:	cmn	w0, #0x1
  41eb6c:	b.eq	41ec34 <eval_buffer@@Base+0x274>  // b.none
  41eb70:	cbnz	w0, 41ecb8 <eval_buffer@@Base+0x2f8>
  41eb74:	ldr	w0, [sp, #64]
  41eb78:	and	w0, w0, #0xf000
  41eb7c:	cmp	w0, #0xa, lsl #12
  41eb80:	b.ne	41eaf0 <eval_buffer@@Base+0x130>  // b.any
  41eb84:	ldp	x1, x2, [sp, #136]
  41eb88:	mov	x0, x20
  41eb8c:	bl	40db28 <file_timestamp_cons@@Base>
  41eb90:	cmp	x21, x0
  41eb94:	csel	x21, x21, x0, cs  // cs = hs, nlast
  41eb98:	b	41ebac <eval_buffer@@Base+0x1ec>
  41eb9c:	bl	406d70 <__errno_location@plt>
  41eba0:	ldr	w1, [x0]
  41eba4:	cmp	w1, #0x4
  41eba8:	b.ne	41eca4 <eval_buffer@@Base+0x2e4>  // b.any
  41ebac:	mov	x4, #0x10b8                	// #4280
  41ebb0:	mov	x0, x20
  41ebb4:	add	x1, sp, x4
  41ebb8:	mov	x2, #0x1000                	// #4096
  41ebbc:	bl	406720 <readlink@plt>
  41ebc0:	mov	x19, x0
  41ebc4:	cmn	x0, #0x1
  41ebc8:	b.eq	41eb9c <eval_buffer@@Base+0x1dc>  // b.none
  41ebcc:	tbnz	x0, #63, 41eca4 <eval_buffer@@Base+0x2e4>
  41ebd0:	mov	x3, #0x10b8                	// #4280
  41ebd4:	add	x0, sp, x3
  41ebd8:	strb	wzr, [x0, x19]
  41ebdc:	add	x0, sp, #0x1, lsl #12
  41ebe0:	ldrb	w0, [x0, #184]
  41ebe4:	cmp	w0, #0x2f
  41ebe8:	b.eq	41ec64 <eval_buffer@@Base+0x2a4>  // b.none
  41ebec:	mov	x0, x20
  41ebf0:	mov	w1, #0x2f                  	// #47
  41ebf4:	bl	406a70 <strrchr@plt>
  41ebf8:	cbz	x0, 41ec64 <eval_buffer@@Base+0x2a4>
  41ebfc:	sub	x1, x0, x20
  41ec00:	add	x19, x1, x19
  41ec04:	cmp	x19, #0xffe
  41ec08:	b.gt	41eaf0 <eval_buffer@@Base+0x130>
  41ec0c:	add	x0, x0, #0x1
  41ec10:	mov	x1, #0x10b8                	// #4280
  41ec14:	add	x1, sp, x1
  41ec18:	bl	406c30 <strcpy@plt>
  41ec1c:	add	x2, sp, #0x30
  41ec20:	mov	x1, x20
  41ec24:	mov	w0, #0x0                   	// #0
  41ec28:	bl	406c60 <__lxstat@plt>
  41ec2c:	cmn	w0, #0x1
  41ec30:	b.ne	41eb70 <eval_buffer@@Base+0x1b0>  // b.any
  41ec34:	bl	406d70 <__errno_location@plt>
  41ec38:	ldr	w0, [x0]
  41ec3c:	cmp	w0, #0x4
  41ec40:	b.eq	41eb58 <eval_buffer@@Base+0x198>  // b.none
  41ec44:	cmp	w0, #0x2
  41ec48:	ccmp	w0, #0x14, #0x4, ne  // ne = any
  41ec4c:	b.eq	41eaf0 <eval_buffer@@Base+0x130>  // b.none
  41ec50:	mov	x1, x20
  41ec54:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ec58:	add	x0, x0, #0xb90
  41ec5c:	bl	419f38 <perror_with_name@@Base>
  41ec60:	b	41eaf0 <eval_buffer@@Base+0x130>
  41ec64:	mov	x2, #0x10b8                	// #4280
  41ec68:	mov	x0, x20
  41ec6c:	add	x1, sp, x2
  41ec70:	bl	406c30 <strcpy@plt>
  41ec74:	b	41eb58 <eval_buffer@@Base+0x198>
  41ec78:	mov	x1, x19
  41ec7c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ec80:	add	x0, x0, #0xcb0
  41ec84:	bl	419f38 <perror_with_name@@Base>
  41ec88:	mov	x0, x21
  41ec8c:	mov	x12, #0x20c0                	// #8384
  41ec90:	ldp	x29, x30, [sp]
  41ec94:	ldp	x19, x20, [sp, #16]
  41ec98:	ldr	x21, [sp, #32]
  41ec9c:	add	sp, sp, x12
  41eca0:	ret
  41eca4:	mov	x1, x20
  41eca8:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ecac:	add	x0, x0, #0xb98
  41ecb0:	bl	419f38 <perror_with_name@@Base>
  41ecb4:	b	41eaf0 <eval_buffer@@Base+0x130>
  41ecb8:	bl	406d70 <__errno_location@plt>
  41ecbc:	ldr	w0, [x0]
  41ecc0:	b	41ec44 <eval_buffer@@Base+0x284>
  41ecc4:	nop

000000000041ecc8 <show_goal_error@@Base>:
  41ecc8:	adrp	x0, 445000 <output_context@@Base+0x1250>
  41eccc:	add	x2, x0, #0xe00
  41ecd0:	ldr	x1, [x0, #3584]
  41ecd4:	ldrb	w0, [x1, #32]
  41ecd8:	and	w0, w0, #0x6
  41ecdc:	cmp	w0, #0x2
  41ece0:	b.ne	41ed28 <show_goal_error@@Base+0x60>  // b.any
  41ece4:	stp	x29, x30, [sp, #-48]!
  41ece8:	mov	x29, sp
  41ecec:	stp	x19, x20, [sp, #16]
  41ecf0:	ldr	x19, [x2, #8]
  41ecf4:	cbz	x19, 41ed1c <show_goal_error@@Base+0x54>
  41ecf8:	ldr	x1, [x1, #16]
  41ecfc:	b	41ed08 <show_goal_error@@Base+0x40>
  41ed00:	ldr	x19, [x19]
  41ed04:	cbz	x19, 41ed1c <show_goal_error@@Base+0x54>
  41ed08:	ldr	x0, [x19, #16]
  41ed0c:	cmp	x1, x0
  41ed10:	b.ne	41ed00 <show_goal_error@@Base+0x38>  // b.any
  41ed14:	ldr	w20, [x19, #36]
  41ed18:	cbnz	w20, 41ed2c <show_goal_error@@Base+0x64>
  41ed1c:	ldp	x19, x20, [sp, #16]
  41ed20:	ldp	x29, x30, [sp], #48
  41ed24:	ret
  41ed28:	ret
  41ed2c:	ldr	x0, [x1]
  41ed30:	str	x21, [sp, #32]
  41ed34:	bl	406680 <strlen@plt>
  41ed38:	mov	x21, x0
  41ed3c:	mov	w0, w20
  41ed40:	bl	406a40 <strerror@plt>
  41ed44:	bl	406680 <strlen@plt>
  41ed48:	add	x20, x21, x0
  41ed4c:	ldr	x1, [x19, #16]
  41ed50:	ldr	w0, [x19, #36]
  41ed54:	ldr	x21, [x1]
  41ed58:	bl	406a40 <strerror@plt>
  41ed5c:	mov	x4, x0
  41ed60:	mov	x3, x21
  41ed64:	mov	x1, x20
  41ed68:	add	x0, x19, #0x28
  41ed6c:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  41ed70:	add	x2, x2, #0xa28
  41ed74:	bl	419dc8 <error@@Base>
  41ed78:	ldr	x21, [sp, #32]
  41ed7c:	str	wzr, [x19, #36]
  41ed80:	b	41ed1c <show_goal_error@@Base+0x54>
  41ed84:	nop
  41ed88:	stp	x29, x30, [sp, #-32]!
  41ed8c:	mov	x29, sp
  41ed90:	stp	x19, x20, [sp, #16]
  41ed94:	mov	x19, x0
  41ed98:	ldr	x1, [x19, #24]
  41ed9c:	cbz	x1, 41edcc <show_goal_error@@Base+0x104>
  41eda0:	ldr	x2, [x1, #16]
  41eda4:	ldrb	w3, [x2, #137]
  41eda8:	tbz	w3, #2, 41edc4 <show_goal_error@@Base+0xfc>
  41edac:	ldrb	w3, [x2, #136]
  41edb0:	and	w3, w3, #0x3
  41edb4:	cmp	w3, #0x1
  41edb8:	b.ls	41edc4 <show_goal_error@@Base+0xfc>  // b.plast
  41edbc:	ldrb	w0, [x19, #138]
  41edc0:	tbnz	w0, #3, 41ee5c <show_goal_error@@Base+0x194>
  41edc4:	ldr	x1, [x1]
  41edc8:	cbnz	x1, 41eda0 <show_goal_error@@Base+0xd8>
  41edcc:	bl	41ecc8 <show_goal_error@@Base>
  41edd0:	ldr	x20, [x19, #96]
  41edd4:	cbz	x20, 41ee64 <show_goal_error@@Base+0x19c>
  41edd8:	ldr	x0, [x19]
  41eddc:	bl	406680 <strlen@plt>
  41ede0:	mov	x1, x0
  41ede4:	ldr	x0, [x20]
  41ede8:	mov	x20, x1
  41edec:	bl	406680 <strlen@plt>
  41edf0:	add	x20, x20, x0
  41edf4:	mov	w2, #0x5                   	// #5
  41edf8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41edfc:	mov	x0, #0x0                   	// #0
  41ee00:	add	x1, x1, #0xba8
  41ee04:	bl	406cd0 <dcgettext@plt>
  41ee08:	mov	x2, x0
  41ee0c:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  41ee10:	add	x20, x20, #0x4
  41ee14:	ldr	w0, [x1, #1988]
  41ee18:	cbz	w0, 41eed0 <show_goal_error@@Base+0x208>
  41ee1c:	ldr	x0, [x19, #96]
  41ee20:	adrp	x6, 427000 <_IO_stdin_used@@Base+0xc20>
  41ee24:	ldr	x4, [x19]
  41ee28:	adrp	x3, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ee2c:	ldr	x5, [x0]
  41ee30:	mov	x1, x20
  41ee34:	add	x6, x6, #0xb58
  41ee38:	add	x3, x3, #0x440
  41ee3c:	mov	x0, #0x0                   	// #0
  41ee40:	bl	419dc8 <error@@Base>
  41ee44:	ldrb	w0, [x19, #138]
  41ee48:	and	w0, w0, #0xfffffff7
  41ee4c:	strb	w0, [x19, #138]
  41ee50:	ldp	x19, x20, [sp, #16]
  41ee54:	ldp	x29, x30, [sp], #32
  41ee58:	ret
  41ee5c:	mov	x19, x2
  41ee60:	b	41ed98 <show_goal_error@@Base+0xd0>
  41ee64:	ldr	x0, [x19]
  41ee68:	bl	406680 <strlen@plt>
  41ee6c:	add	x20, x0, #0x4
  41ee70:	mov	w2, #0x5                   	// #5
  41ee74:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ee78:	mov	x0, #0x0                   	// #0
  41ee7c:	add	x1, x1, #0xbd8
  41ee80:	bl	406cd0 <dcgettext@plt>
  41ee84:	mov	x2, x0
  41ee88:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  41ee8c:	ldr	x4, [x19]
  41ee90:	ldr	w0, [x1, #1988]
  41ee94:	cbz	w0, 41eeb8 <show_goal_error@@Base+0x1f0>
  41ee98:	mov	x1, x20
  41ee9c:	adrp	x5, 427000 <_IO_stdin_used@@Base+0xc20>
  41eea0:	adrp	x3, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41eea4:	add	x5, x5, #0xb58
  41eea8:	add	x3, x3, #0x440
  41eeac:	mov	x0, #0x0                   	// #0
  41eeb0:	bl	419dc8 <error@@Base>
  41eeb4:	b	41ee44 <show_goal_error@@Base+0x17c>
  41eeb8:	adrp	x5, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41eebc:	add	x5, x5, #0x350
  41eec0:	mov	x1, x20
  41eec4:	mov	x3, x5
  41eec8:	mov	x0, #0x0                   	// #0
  41eecc:	bl	41a060 <fatal@@Base>
  41eed0:	ldr	x0, [x19, #96]
  41eed4:	adrp	x6, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41eed8:	ldr	x4, [x19]
  41eedc:	add	x6, x6, #0x350
  41eee0:	ldr	x5, [x0]
  41eee4:	mov	x1, x20
  41eee8:	mov	x3, x6
  41eeec:	mov	x0, #0x0                   	// #0
  41eef0:	bl	41a060 <fatal@@Base>
  41eef4:	nop

000000000041eef8 <f_mtime@@Base>:
  41eef8:	stp	x29, x30, [sp, #-288]!
  41eefc:	mov	x29, sp
  41ef00:	stp	x25, x26, [sp, #64]
  41ef04:	mov	x26, x0
  41ef08:	ldr	x0, [x0]
  41ef0c:	stp	x19, x20, [sp, #16]
  41ef10:	stp	x21, x22, [sp, #32]
  41ef14:	mov	w21, w1
  41ef18:	stp	x23, x24, [sp, #48]
  41ef1c:	stp	x27, x28, [sp, #80]
  41ef20:	bl	408a60 <ar_name@@Base>
  41ef24:	cbz	w0, 41f074 <f_mtime@@Base+0x17c>
  41ef28:	ldr	x0, [x26]
  41ef2c:	add	x2, x29, #0xb8
  41ef30:	add	x1, x29, #0xb0
  41ef34:	bl	408b10 <ar_parse_name@@Base>
  41ef38:	ldr	x0, [x29, #176]
  41ef3c:	bl	40c7a8 <lookup_file@@Base>
  41ef40:	mov	x19, x0
  41ef44:	cbz	x0, 41f140 <f_mtime@@Base+0x248>
  41ef48:	mov	w1, w21
  41ef4c:	mov	x0, x19
  41ef50:	bl	41eef8 <f_mtime@@Base>
  41ef54:	str	x0, [x29, #160]
  41ef58:	mov	x20, x19
  41ef5c:	ldr	x19, [x19, #72]
  41ef60:	cbnz	x19, 41ef58 <f_mtime@@Base+0x60>
  41ef64:	ldr	x19, [x29, #176]
  41ef68:	cbz	w21, 41ef80 <f_mtime@@Base+0x88>
  41ef6c:	ldr	x21, [x20, #8]
  41ef70:	mov	x1, x19
  41ef74:	mov	x0, x21
  41ef78:	bl	406b40 <strcmp@plt>
  41ef7c:	cbnz	w0, 41f154 <f_mtime@@Base+0x25c>
  41ef80:	mov	x0, x19
  41ef84:	bl	406b90 <free@plt>
  41ef88:	ldrb	w0, [x26, #136]
  41ef8c:	ldr	x20, [x29, #160]
  41ef90:	orr	w0, w0, #0xffffff80
  41ef94:	strb	w0, [x26, #136]
  41ef98:	cmp	x20, #0x1
  41ef9c:	b.eq	41f050 <f_mtime@@Base+0x158>  // b.none
  41efa0:	ldr	x0, [x26, #8]
  41efa4:	mov	x20, #0x1                   	// #1
  41efa8:	bl	408b68 <ar_member_date@@Base>
  41efac:	mov	x1, x0
  41efb0:	cmn	x0, #0x1
  41efb4:	b.ne	41f12c <f_mtime@@Base+0x234>  // b.any
  41efb8:	str	x20, [x29, #160]
  41efbc:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  41efc0:	ldr	w0, [x19, #2184]
  41efc4:	cbnz	w0, 41eff0 <f_mtime@@Base+0xf8>
  41efc8:	cmp	x20, #0x1
  41efcc:	ccmn	x20, #0x1, #0x4, ne  // ne = any
  41efd0:	b.eq	41eff0 <f_mtime@@Base+0xf8>  // b.none
  41efd4:	ldrb	w0, [x26, #137]
  41efd8:	tbnz	w0, #2, 41eff0 <f_mtime@@Base+0xf8>
  41efdc:	adrp	x21, 445000 <output_context@@Base+0x1250>
  41efe0:	add	x21, x21, #0xe00
  41efe4:	ldr	x0, [x21, #48]
  41efe8:	cmp	x0, x20
  41efec:	b.cc	41f1f8 <f_mtime@@Base+0x300>  // b.lo, b.ul, b.last
  41eff0:	ldr	x1, [x26, #104]
  41eff4:	mov	w4, #0x410c                	// #16652
  41eff8:	cmp	x1, #0x0
  41effc:	csel	x1, x1, x26, ne  // ne = any
  41f000:	ldrb	w0, [x1, #137]
  41f004:	ubfx	x0, x0, #2, #1
  41f008:	mov	w2, w0
  41f00c:	b	41f018 <f_mtime@@Base+0x120>
  41f010:	ldrb	w2, [x1, #137]
  41f014:	ubfx	x2, x2, #2, #1
  41f018:	cmp	x20, #0x1
  41f01c:	b.eq	41f03c <f_mtime@@Base+0x144>  // b.none
  41f020:	ldrh	w3, [x1, #136]
  41f024:	and	w3, w4, w3
  41f028:	cmp	w3, #0x4, lsl #12
  41f02c:	b.ne	41f03c <f_mtime@@Base+0x144>  // b.any
  41f030:	ldrb	w3, [x1, #137]
  41f034:	and	w3, w3, #0xffffffbf
  41f038:	strb	w3, [x1, #137]
  41f03c:	cmp	w0, w2
  41f040:	b.ne	41f048 <f_mtime@@Base+0x150>  // b.any
  41f044:	str	x20, [x1, #112]
  41f048:	ldr	x1, [x1, #56]
  41f04c:	cbnz	x1, 41f010 <f_mtime@@Base+0x118>
  41f050:	mov	sp, x29
  41f054:	mov	x0, x20
  41f058:	ldp	x19, x20, [sp, #16]
  41f05c:	ldp	x21, x22, [sp, #32]
  41f060:	ldp	x23, x24, [sp, #48]
  41f064:	ldp	x25, x26, [sp, #64]
  41f068:	ldp	x27, x28, [sp, #80]
  41f06c:	ldp	x29, x30, [sp], #288
  41f070:	ret
  41f074:	ldr	x0, [x26]
  41f078:	bl	41ea78 <eval_buffer@@Base+0xb8>
  41f07c:	str	x0, [x29, #160]
  41f080:	cmp	w21, #0x0
  41f084:	mov	x20, x0
  41f088:	ccmp	x0, #0x1, #0x0, ne  // ne = any
  41f08c:	b.ne	41efbc <f_mtime@@Base+0xc4>  // b.any
  41f090:	ldrb	w0, [x26, #138]
  41f094:	mov	x20, #0x1                   	// #1
  41f098:	tbnz	w0, #1, 41eff0 <f_mtime@@Base+0xf8>
  41f09c:	ldr	x0, [x26]
  41f0a0:	add	x1, x29, #0xa0
  41f0a4:	mov	x3, #0x0                   	// #0
  41f0a8:	mov	x2, #0x0                   	// #0
  41f0ac:	bl	425120 <vpath_search@@Base>
  41f0b0:	mov	x19, x0
  41f0b4:	cbz	x0, 41f314 <f_mtime@@Base+0x41c>
  41f0b8:	ldr	x0, [x29, #160]
  41f0bc:	cbz	x0, 41f0c4 <f_mtime@@Base+0x1cc>
  41f0c0:	str	x0, [x26, #112]
  41f0c4:	mov	x0, x19
  41f0c8:	bl	406680 <strlen@plt>
  41f0cc:	sub	x20, x0, #0x1
  41f0d0:	ldr	x0, [x26]
  41f0d4:	bl	406680 <strlen@plt>
  41f0d8:	mov	x1, x0
  41f0dc:	sub	x1, x20, x1
  41f0e0:	mov	x0, x19
  41f0e4:	bl	425070 <gpath_search@@Base>
  41f0e8:	mov	x1, x19
  41f0ec:	cbnz	w0, 41f2e8 <f_mtime@@Base+0x3f0>
  41f0f0:	mov	x0, x26
  41f0f4:	bl	40c940 <rehash_file@@Base>
  41f0f8:	mov	x0, x26
  41f0fc:	nop
  41f100:	mov	x26, x0
  41f104:	ldr	x0, [x0, #72]
  41f108:	cbnz	x0, 41f100 <f_mtime@@Base+0x208>
  41f10c:	ldr	x20, [x29, #160]
  41f110:	cmp	x20, #0x2
  41f114:	ccmn	x20, #0x1, #0x4, ne  // ne = any
  41f118:	b.eq	41efbc <f_mtime@@Base+0xc4>  // b.none
  41f11c:	mov	x0, x19
  41f120:	bl	41ea78 <eval_buffer@@Base+0xb8>
  41f124:	mov	x20, x0
  41f128:	b	41efb8 <f_mtime@@Base+0xc0>
  41f12c:	ldr	x0, [x26, #8]
  41f130:	mov	x2, #0x0                   	// #0
  41f134:	bl	40db28 <file_timestamp_cons@@Base>
  41f138:	mov	x20, x0
  41f13c:	b	41efb8 <f_mtime@@Base+0xc0>
  41f140:	ldr	x0, [x29, #176]
  41f144:	bl	422490 <strcache_add@@Base>
  41f148:	bl	40c820 <enter_file@@Base>
  41f14c:	mov	x19, x0
  41f150:	b	41ef48 <f_mtime@@Base+0x50>
  41f154:	mov	x0, x21
  41f158:	bl	406680 <strlen@plt>
  41f15c:	ldr	x24, [x29, #184]
  41f160:	mov	x19, x0
  41f164:	mov	x0, x24
  41f168:	bl	406680 <strlen@plt>
  41f16c:	mov	x1, x21
  41f170:	add	x21, x19, x0
  41f174:	mov	x23, x0
  41f178:	add	x0, x21, #0x12
  41f17c:	and	x0, x0, #0xfffffffffffffff0
  41f180:	mov	x2, x19
  41f184:	sub	sp, sp, x0
  41f188:	mov	x22, sp
  41f18c:	mov	x0, x22
  41f190:	bl	406640 <memcpy@plt>
  41f194:	add	x21, x22, x21
  41f198:	mov	w3, #0x28                  	// #40
  41f19c:	strb	w3, [x22, x19]
  41f1a0:	add	x0, x19, #0x1
  41f1a4:	mov	x1, x24
  41f1a8:	mov	x2, x23
  41f1ac:	add	x0, x22, x0
  41f1b0:	bl	406640 <memcpy@plt>
  41f1b4:	mov	w0, #0x29                  	// #41
  41f1b8:	strb	w0, [x21, #1]
  41f1bc:	strb	wzr, [x21, #2]
  41f1c0:	ldp	x1, x0, [x20]
  41f1c4:	cmp	x1, x0
  41f1c8:	mov	x0, x22
  41f1cc:	b.eq	41f4d4 <f_mtime@@Base+0x5dc>  // b.none
  41f1d0:	bl	422490 <strcache_add@@Base>
  41f1d4:	mov	x1, x0
  41f1d8:	mov	x0, x26
  41f1dc:	bl	40c940 <rehash_file@@Base>
  41f1e0:	mov	x0, x26
  41f1e4:	ldr	x26, [x26, #72]
  41f1e8:	cbnz	x26, 41f1e0 <f_mtime@@Base+0x2e8>
  41f1ec:	mov	x26, x0
  41f1f0:	ldr	x19, [x29, #176]
  41f1f4:	b	41ef80 <f_mtime@@Base+0x88>
  41f1f8:	add	x0, x29, #0xb0
  41f1fc:	bl	40dc00 <file_timestamp_now@@Base>
  41f200:	ldr	w1, [x29, #176]
  41f204:	sub	w1, w1, #0x1
  41f208:	add	x1, x0, w1, sxtw
  41f20c:	str	x1, [x21, #48]
  41f210:	cmp	x1, x20
  41f214:	b.cs	41f2e0 <f_mtime@@Base+0x3e8>  // b.hs, b.nlast
  41f218:	ldr	x2, [x29, #160]
  41f21c:	sub	w1, w0, #0x3
  41f220:	and	w4, w1, #0x3fffffff
  41f224:	mov	x3, #0xcd6500000000        	// #225833675390976
  41f228:	sub	w1, w2, #0x3
  41f22c:	movk	x3, #0x41cd, lsl #48
  41f230:	and	w1, w1, #0x3fffffff
  41f234:	fmov	d3, x3
  41f238:	sub	w1, w1, w4
  41f23c:	sub	x2, x2, #0x3
  41f240:	sub	x0, x0, #0x3
  41f244:	mov	x3, #0xc00000000000        	// #211106232532992
  41f248:	scvtf	d1, w1
  41f24c:	lsr	x2, x2, #30
  41f250:	sub	x0, x2, x0, lsr #30
  41f254:	movk	x3, #0x4058, lsl #48
  41f258:	fmov	d2, x3
  41f25c:	ucvtf	d0, x0
  41f260:	fdiv	d1, d1, d3
  41f264:	fadd	d0, d1, d0
  41f268:	fcmpe	d0, d2
  41f26c:	b.lt	41f280 <f_mtime@@Base+0x388>  // b.tstop
  41f270:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  41f274:	fmov	d1, x0
  41f278:	fcmpe	d0, d1
  41f27c:	b.ls	41f5c8 <f_mtime@@Base+0x6d0>  // b.plast
  41f280:	add	x24, x29, #0xb8
  41f284:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41f288:	mov	x0, x24
  41f28c:	add	x1, x1, #0xc40
  41f290:	bl	406730 <sprintf@plt>
  41f294:	ldr	x0, [x26]
  41f298:	bl	406680 <strlen@plt>
  41f29c:	mov	x21, x0
  41f2a0:	mov	x0, x24
  41f2a4:	bl	406680 <strlen@plt>
  41f2a8:	mov	w2, #0x5                   	// #5
  41f2ac:	mov	x20, x0
  41f2b0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41f2b4:	mov	x0, #0x0                   	// #0
  41f2b8:	add	x1, x1, #0xc48
  41f2bc:	bl	406cd0 <dcgettext@plt>
  41f2c0:	ldr	x3, [x26]
  41f2c4:	mov	x2, x0
  41f2c8:	mov	x4, x24
  41f2cc:	mov	x0, #0x0                   	// #0
  41f2d0:	add	x1, x21, x20
  41f2d4:	bl	419dc8 <error@@Base>
  41f2d8:	mov	w0, #0x1                   	// #1
  41f2dc:	str	w0, [x19, #2184]
  41f2e0:	ldr	x20, [x29, #160]
  41f2e4:	b	41eff0 <f_mtime@@Base+0xf8>
  41f2e8:	mov	x0, x26
  41f2ec:	bl	40cd68 <rename_file@@Base>
  41f2f0:	mov	x0, x26
  41f2f4:	ldr	x26, [x26, #72]
  41f2f8:	cbnz	x26, 41f2f0 <f_mtime@@Base+0x3f8>
  41f2fc:	ldr	x20, [x0, #112]
  41f300:	cbnz	x20, 41f050 <f_mtime@@Base+0x158>
  41f304:	mov	w1, #0x1                   	// #1
  41f308:	bl	41eef8 <f_mtime@@Base>
  41f30c:	mov	x20, x0
  41f310:	b	41f050 <f_mtime@@Base+0x158>
  41f314:	ldr	x25, [x26]
  41f318:	ldrb	w0, [x25]
  41f31c:	cmp	w0, #0x2d
  41f320:	b.eq	41f32c <f_mtime@@Base+0x434>  // b.none
  41f324:	ldr	x20, [x29, #160]
  41f328:	b	41efbc <f_mtime@@Base+0xc4>
  41f32c:	ldrb	w0, [x25, #1]
  41f330:	cmp	w0, #0x6c
  41f334:	b.ne	41f324 <f_mtime@@Base+0x42c>  // b.any
  41f338:	add	x20, x25, #0x2
  41f33c:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41f340:	add	x0, x0, #0xbf8
  41f344:	str	x20, [x29, #112]
  41f348:	bl	40c1b8 <variable_expand@@Base>
  41f34c:	add	x24, x29, #0xb8
  41f350:	bl	418c60 <xstrdup@@Base>
  41f354:	mov	x21, x0
  41f358:	mov	x0, x20
  41f35c:	str	x21, [x29, #120]
  41f360:	bl	406680 <strlen@plt>
  41f364:	adrp	x27, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41f368:	mov	w23, #0x0                   	// #0
  41f36c:	str	x0, [x29, #104]
  41f370:	add	x0, x27, #0x350
  41f374:	str	x0, [x29, #128]
  41f378:	str	wzr, [x29, #140]
  41f37c:	str	x21, [x29, #176]
  41f380:	mov	x1, x24
  41f384:	add	x0, x29, #0xb0
  41f388:	bl	418d28 <find_next_token@@Base>
  41f38c:	mov	x21, x0
  41f390:	cbz	x0, 41f5f4 <f_mtime@@Base+0x6fc>
  41f394:	ldr	x0, [x29, #128]
  41f398:	bl	40c1b8 <variable_expand@@Base>
  41f39c:	mov	x22, x0
  41f3a0:	ldr	x1, [x29, #184]
  41f3a4:	mov	x0, x21
  41f3a8:	ldrb	w20, [x21, x1]
  41f3ac:	strb	wzr, [x21, x1]
  41f3b0:	bl	41b5a0 <find_percent@@Base>
  41f3b4:	mov	x28, x0
  41f3b8:	cbz	x0, 41f4e8 <f_mtime@@Base+0x5f0>
  41f3bc:	sub	x25, x0, x21
  41f3c0:	mov	x1, x21
  41f3c4:	mov	x2, x25
  41f3c8:	mov	x0, x22
  41f3cc:	bl	40b848 <variable_buffer_output@@Base>
  41f3d0:	ldp	x2, x1, [x29, #104]
  41f3d4:	bl	40b848 <variable_buffer_output@@Base>
  41f3d8:	ldr	x2, [x29, #184]
  41f3dc:	add	x1, x28, #0x1
  41f3e0:	sub	x2, x2, x25
  41f3e4:	bl	40b848 <variable_buffer_output@@Base>
  41f3e8:	ldr	x1, [x29, #184]
  41f3ec:	mov	x0, x22
  41f3f0:	strb	w20, [x21, x1]
  41f3f4:	bl	41ea78 <eval_buffer@@Base+0xb8>
  41f3f8:	str	x0, [x29, #168]
  41f3fc:	mov	x1, x0
  41f400:	cmp	x0, #0x1
  41f404:	b.ne	41f5e4 <f_mtime@@Base+0x6ec>  // b.any
  41f408:	add	x3, x29, #0x9c
  41f40c:	add	x2, x29, #0x98
  41f410:	add	x1, x29, #0xa8
  41f414:	mov	x0, x22
  41f418:	bl	425120 <vpath_search@@Base>
  41f41c:	cbz	x0, 41f434 <f_mtime@@Base+0x53c>
  41f420:	ldr	w2, [x29, #152]
  41f424:	cbz	x19, 41f528 <f_mtime@@Base+0x630>
  41f428:	cmp	w23, w2
  41f42c:	b.hi	41f528 <f_mtime@@Base+0x630>  // b.pmore
  41f430:	b.eq	41f608 <f_mtime@@Base+0x710>  // b.none
  41f434:	adrp	x20, 445000 <output_context@@Base+0x1250>
  41f438:	add	x20, x20, #0xe00
  41f43c:	ldr	x28, [x20, #16]
  41f440:	cbz	x28, 41f564 <f_mtime@@Base+0x66c>
  41f444:	mov	x0, x22
  41f448:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  41f44c:	bl	406680 <strlen@plt>
  41f450:	add	x21, x21, #0x100
  41f454:	mov	x1, x0
  41f458:	cmp	x28, x0
  41f45c:	b.cc	41f544 <f_mtime@@Base+0x64c>  // b.lo, b.ul, b.last
  41f460:	ldr	x2, [x21]
  41f464:	ldr	w4, [x20, #32]
  41f468:	mvn	w25, w4
  41f46c:	cbz	x2, 41f380 <f_mtime@@Base+0x488>
  41f470:	adrp	x28, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41f474:	add	x28, x28, #0xc38
  41f478:	b	41f488 <f_mtime@@Base+0x590>
  41f47c:	ldr	x2, [x21, #8]!
  41f480:	add	w25, w25, #0x1
  41f484:	cbz	x2, 41f380 <f_mtime@@Base+0x488>
  41f488:	ldr	x0, [x20, #40]
  41f48c:	mov	x3, x22
  41f490:	mov	x1, x28
  41f494:	bl	406730 <sprintf@plt>
  41f498:	ldr	x0, [x20, #40]
  41f49c:	bl	41ea78 <eval_buffer@@Base+0xb8>
  41f4a0:	str	x0, [x29, #168]
  41f4a4:	cmp	x0, #0x1
  41f4a8:	b.eq	41f47c <f_mtime@@Base+0x584>  // b.none
  41f4ac:	cmp	x19, #0x0
  41f4b0:	ccmp	w25, w23, #0x0, ne  // ne = any
  41f4b4:	b.cs	41f47c <f_mtime@@Base+0x584>  // b.hs, b.nlast
  41f4b8:	ldr	x0, [x20, #40]
  41f4bc:	mov	w23, w25
  41f4c0:	bl	422490 <strcache_add@@Base>
  41f4c4:	mov	x19, x0
  41f4c8:	ldr	x0, [x29, #168]
  41f4cc:	str	x0, [x29, #160]
  41f4d0:	b	41f47c <f_mtime@@Base+0x584>
  41f4d4:	bl	422490 <strcache_add@@Base>
  41f4d8:	mov	x1, x0
  41f4dc:	mov	x0, x26
  41f4e0:	bl	40cd68 <rename_file@@Base>
  41f4e4:	b	41f1e0 <f_mtime@@Base+0x2e8>
  41f4e8:	mov	x0, x21
  41f4ec:	bl	406680 <strlen@plt>
  41f4f0:	mov	w2, #0x5                   	// #5
  41f4f4:	mov	x22, x0
  41f4f8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41f4fc:	mov	x0, #0x0                   	// #0
  41f500:	add	x1, x1, #0xc08
  41f504:	bl	406cd0 <dcgettext@plt>
  41f508:	mov	x3, x21
  41f50c:	mov	x2, x0
  41f510:	mov	x1, x22
  41f514:	mov	x0, #0x0                   	// #0
  41f518:	bl	419dc8 <error@@Base>
  41f51c:	ldr	x0, [x29, #184]
  41f520:	strb	w20, [x21, x0]
  41f524:	b	41f380 <f_mtime@@Base+0x488>
  41f528:	ldr	w1, [x29, #156]
  41f52c:	mov	x19, x0
  41f530:	mov	w23, w2
  41f534:	ldr	x0, [x29, #168]
  41f538:	str	w1, [x29, #140]
  41f53c:	str	x0, [x29, #160]
  41f540:	b	41f434 <f_mtime@@Base+0x53c>
  41f544:	ldr	x2, [x20, #24]
  41f548:	str	x1, [x20, #16]
  41f54c:	ldr	x0, [x20, #40]
  41f550:	add	x2, x2, #0x2
  41f554:	add	x1, x2, x1
  41f558:	bl	418aa0 <xrealloc@@Base>
  41f55c:	str	x0, [x20, #40]
  41f560:	b	41f460 <f_mtime@@Base+0x568>
  41f564:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41f568:	add	x21, x0, #0x100
  41f56c:	ldr	x28, [x20, #24]
  41f570:	ldr	x0, [x0, #256]
  41f574:	cbz	x0, 41f5a8 <f_mtime@@Base+0x6b0>
  41f578:	ldr	w1, [x20, #32]
  41f57c:	mov	x27, x21
  41f580:	add	w25, w1, #0x1
  41f584:	bl	406680 <strlen@plt>
  41f588:	cmp	x0, x28
  41f58c:	b.ls	41f598 <f_mtime@@Base+0x6a0>  // b.plast
  41f590:	mov	x28, x0
  41f594:	str	x0, [x20, #24]
  41f598:	ldr	x0, [x27, #8]!
  41f59c:	str	w25, [x20, #32]
  41f5a0:	add	w25, w25, #0x1
  41f5a4:	cbnz	x0, 41f584 <f_mtime@@Base+0x68c>
  41f5a8:	mov	x0, x22
  41f5ac:	bl	406680 <strlen@plt>
  41f5b0:	str	x0, [x20, #16]
  41f5b4:	add	x0, x0, x28
  41f5b8:	add	x0, x0, #0x2
  41f5bc:	bl	418a50 <xmalloc@@Base>
  41f5c0:	str	x0, [x20, #40]
  41f5c4:	b	41f460 <f_mtime@@Base+0x568>
  41f5c8:	fcvtzu	x2, d0
  41f5cc:	add	x24, x29, #0xb8
  41f5d0:	mov	x0, x24
  41f5d4:	adrp	x1, 426000 <rpl_fcntl@@Base+0xf0>
  41f5d8:	add	x1, x1, #0x510
  41f5dc:	bl	406730 <sprintf@plt>
  41f5e0:	b	41f294 <f_mtime@@Base+0x39c>
  41f5e4:	mov	x0, x22
  41f5e8:	str	x1, [x29, #160]
  41f5ec:	bl	422490 <strcache_add@@Base>
  41f5f0:	mov	x19, x0
  41f5f4:	ldr	x0, [x29, #120]
  41f5f8:	bl	406b90 <free@plt>
  41f5fc:	cbnz	x19, 41f0b8 <f_mtime@@Base+0x1c0>
  41f600:	ldr	x20, [x29, #160]
  41f604:	b	41efbc <f_mtime@@Base+0xc4>
  41f608:	ldr	w3, [x29, #140]
  41f60c:	ldr	w1, [x29, #156]
  41f610:	cmp	w1, w3
  41f614:	b.cs	41f434 <f_mtime@@Base+0x53c>  // b.hs, b.nlast
  41f618:	b	41f52c <f_mtime@@Base+0x634>
  41f61c:	nop

000000000041f620 <notice_finished_file@@Base>:
  41f620:	stp	x29, x30, [sp, #-192]!
  41f624:	mov	w2, #0x40c                 	// #1036
  41f628:	mov	x29, sp
  41f62c:	stp	x21, x22, [sp, #32]
  41f630:	adrp	x21, 446000 <commands_started@@Base+0x1c8>
  41f634:	stp	x19, x20, [sp, #16]
  41f638:	mov	x19, x0
  41f63c:	ldr	w1, [x21, #2188]
  41f640:	ldrh	w0, [x0, #136]
  41f644:	ldrb	w20, [x19, #136]
  41f648:	orr	w0, w0, w2
  41f64c:	strh	w0, [x19, #136]
  41f650:	and	w20, w20, #0xc
  41f654:	ldrb	w4, [x19, #136]
  41f658:	cbnz	w1, 41f748 <notice_finished_file@@Base+0x128>
  41f65c:	and	w4, w4, #0x3
  41f660:	ldr	x0, [x19, #120]
  41f664:	cbnz	x0, 41f670 <notice_finished_file@@Base+0x50>
  41f668:	ldr	x0, [x19, #112]
  41f66c:	str	x0, [x19, #120]
  41f670:	cmp	w20, #0x8
  41f674:	b.eq	41f6e4 <notice_finished_file@@Base+0xc4>  // b.none
  41f678:	cbnz	w1, 41f6ec <notice_finished_file@@Base+0xcc>
  41f67c:	ldr	x3, [x19, #104]
  41f680:	cbz	x3, 41f6c4 <notice_finished_file@@Base+0xa4>
  41f684:	ldr	x2, [x19, #112]
  41f688:	mov	x1, x3
  41f68c:	nop
  41f690:	ldrb	w0, [x1, #137]
  41f694:	tbz	w0, #2, 41f6c4 <notice_finished_file@@Base+0xa4>
  41f698:	cbz	x2, 41f6ac <notice_finished_file@@Base+0x8c>
  41f69c:	ldr	x0, [x1, #112]
  41f6a0:	cmp	x0, #0x0
  41f6a4:	ccmp	x0, x2, #0x2, ne  // ne = any
  41f6a8:	csel	x2, x2, x0, ls  // ls = plast
  41f6ac:	ldr	x1, [x1, #56]
  41f6b0:	cbnz	x1, 41f690 <notice_finished_file@@Base+0x70>
  41f6b4:	nop
  41f6b8:	str	x2, [x3, #112]
  41f6bc:	ldr	x3, [x3, #56]
  41f6c0:	cbnz	x3, 41f6b8 <notice_finished_file@@Base+0x98>
  41f6c4:	cmp	w20, #0x8
  41f6c8:	b.eq	41f7c8 <notice_finished_file@@Base+0x1a8>  // b.none
  41f6cc:	cmp	w4, #0x1
  41f6d0:	b.eq	41f81c <notice_finished_file@@Base+0x1fc>  // b.none
  41f6d4:	ldp	x19, x20, [sp, #16]
  41f6d8:	ldp	x21, x22, [sp, #32]
  41f6dc:	ldp	x29, x30, [sp], #192
  41f6e0:	ret
  41f6e4:	ldrb	w0, [x19, #137]
  41f6e8:	tbnz	w0, #5, 41f678 <notice_finished_file@@Base+0x58>
  41f6ec:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41f6f0:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  41f6f4:	ldr	w1, [x21, #2188]
  41f6f8:	ldr	w0, [x0, #3404]
  41f6fc:	ldr	w2, [x2, #1984]
  41f700:	orr	w0, w0, w2
  41f704:	orr	w0, w0, w1
  41f708:	cbz	w0, 41f7ac <notice_finished_file@@Base+0x18c>
  41f70c:	ldr	x1, [x19, #32]
  41f710:	cbz	x1, 41f7ac <notice_finished_file@@Base+0x18c>
  41f714:	ldrh	w0, [x1, #48]
  41f718:	cbz	w0, 41f84c <notice_finished_file@@Base+0x22c>
  41f71c:	ldr	x2, [x1, #40]
  41f720:	and	x0, x0, #0xffff
  41f724:	sub	x2, x2, #0x1
  41f728:	b	41f730 <notice_finished_file@@Base+0x110>
  41f72c:	cbz	w0, 41f84c <notice_finished_file@@Base+0x22c>
  41f730:	ldrb	w1, [x2, x0]
  41f734:	sub	x0, x0, #0x1
  41f738:	tbnz	w1, #0, 41f72c <notice_finished_file@@Base+0x10c>
  41f73c:	mvni	v0.4s, #0x0
  41f740:	str	d0, [x19, #112]
  41f744:	b	41f67c <notice_finished_file@@Base+0x5c>
  41f748:	ands	w4, w4, #0x3
  41f74c:	mov	w1, #0x0                   	// #0
  41f750:	b.ne	41f660 <notice_finished_file@@Base+0x40>  // b.any
  41f754:	ldr	x0, [x19, #32]
  41f758:	cbz	x0, 41f838 <notice_finished_file@@Base+0x218>
  41f75c:	ldrb	w2, [x0, #51]
  41f760:	tbz	w2, #0, 41f78c <notice_finished_file@@Base+0x16c>
  41f764:	ldrh	w2, [x0, #48]
  41f768:	cbz	w2, 41f660 <notice_finished_file@@Base+0x40>
  41f76c:	ldr	x3, [x0, #40]
  41f770:	mov	x0, #0x0                   	// #0
  41f774:	b	41f780 <notice_finished_file@@Base+0x160>
  41f778:	cmp	w2, w0
  41f77c:	b.ls	41f844 <notice_finished_file@@Base+0x224>  // b.plast
  41f780:	ldrb	w1, [x3, x0]
  41f784:	add	x0, x0, #0x1
  41f788:	tbnz	w1, #0, 41f778 <notice_finished_file@@Base+0x158>
  41f78c:	ldrb	w0, [x19, #137]
  41f790:	tbz	w0, #5, 41f858 <notice_finished_file@@Base+0x238>
  41f794:	ldrb	w0, [x19, #136]
  41f798:	mov	w4, #0x0                   	// #0
  41f79c:	mov	w1, #0x0                   	// #0
  41f7a0:	and	w0, w0, #0xfffffffc
  41f7a4:	strb	w0, [x19, #136]
  41f7a8:	b	41f660 <notice_finished_file@@Base+0x40>
  41f7ac:	ldrb	w0, [x19, #137]
  41f7b0:	fmov	d0, xzr
  41f7b4:	tbz	w0, #3, 41f740 <notice_finished_file@@Base+0x120>
  41f7b8:	ldr	d0, [x19, #32]
  41f7bc:	cmeq	d0, d0, #0
  41f7c0:	str	d0, [x19, #112]
  41f7c4:	b	41f67c <notice_finished_file@@Base+0x5c>
  41f7c8:	cmp	w4, #0x1
  41f7cc:	b.eq	41f81c <notice_finished_file@@Base+0x1fc>  // b.none
  41f7d0:	ldr	x20, [x19, #48]
  41f7d4:	mov	w22, #0x40c                 	// #1036
  41f7d8:	mov	w21, #0xfffffbf0            	// #-1040
  41f7dc:	cbnz	x20, 41f7f4 <notice_finished_file@@Base+0x1d4>
  41f7e0:	b	41f6d4 <notice_finished_file@@Base+0xb4>
  41f7e4:	mov	w1, #0x0                   	// #0
  41f7e8:	bl	41eef8 <f_mtime@@Base>
  41f7ec:	ldr	x20, [x20]
  41f7f0:	cbz	x20, 41f6d4 <notice_finished_file@@Base+0xb4>
  41f7f4:	ldr	x0, [x20, #16]
  41f7f8:	ldrb	w1, [x19, #136]
  41f7fc:	ldrh	w2, [x0, #136]
  41f800:	and	w1, w1, #0x3
  41f804:	orr	w1, w1, w22
  41f808:	and	w2, w2, w21
  41f80c:	orr	w1, w1, w2
  41f810:	strh	w1, [x0, #136]
  41f814:	tbnz	w1, #13, 41f7ec <notice_finished_file@@Base+0x1cc>
  41f818:	b	41f7e4 <notice_finished_file@@Base+0x1c4>
  41f81c:	ldrb	w0, [x19, #136]
  41f820:	ldp	x21, x22, [sp, #32]
  41f824:	and	w0, w0, #0xfffffffc
  41f828:	strb	w0, [x19, #136]
  41f82c:	ldp	x19, x20, [sp, #16]
  41f830:	ldp	x29, x30, [sp], #192
  41f834:	ret
  41f838:	ldrb	w0, [x19, #137]
  41f83c:	and	w4, w0, #0x20
  41f840:	tbnz	w0, #5, 41f794 <notice_finished_file@@Base+0x174>
  41f844:	mov	w1, #0x0                   	// #0
  41f848:	b	41f660 <notice_finished_file@@Base+0x40>
  41f84c:	fmov	d0, xzr
  41f850:	str	d0, [x19, #112]
  41f854:	b	41f67c <notice_finished_file@@Base+0x5c>
  41f858:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41f85c:	ldr	w0, [x0, #3300]
  41f860:	cbz	w0, 41f9f8 <notice_finished_file@@Base+0x3d8>
  41f864:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  41f868:	ldr	w0, [x0, #1984]
  41f86c:	cbz	w0, 41f8a0 <notice_finished_file@@Base+0x280>
  41f870:	mov	w3, #0x0                   	// #0
  41f874:	adrp	x0, 445000 <output_context@@Base+0x1250>
  41f878:	add	x0, x0, #0xe00
  41f87c:	ldrb	w4, [x19, #136]
  41f880:	mov	w1, #0x1                   	// #1
  41f884:	ldr	w2, [x0, #56]
  41f888:	bfxil	w4, w3, #0, #2
  41f88c:	strb	w4, [x19, #136]
  41f890:	add	w2, w2, w1
  41f894:	and	w4, w4, #0x3
  41f898:	str	w2, [x0, #56]
  41f89c:	b	41f660 <notice_finished_file@@Base+0x40>
  41f8a0:	ldr	x0, [x19]
  41f8a4:	bl	408a60 <ar_name@@Base>
  41f8a8:	cbz	w0, 41f8c0 <notice_finished_file@@Base+0x2a0>
  41f8ac:	b	41fa20 <notice_finished_file@@Base+0x400>
  41f8b0:	bl	406d70 <__errno_location@plt>
  41f8b4:	ldr	w0, [x0]
  41f8b8:	cmp	w0, #0x4
  41f8bc:	b.ne	41fa34 <notice_finished_file@@Base+0x414>  // b.any
  41f8c0:	ldr	x0, [x19]
  41f8c4:	mov	w2, #0x1b6                 	// #438
  41f8c8:	mov	w1, #0x42                  	// #66
  41f8cc:	bl	406900 <open@plt>
  41f8d0:	mov	w22, w0
  41f8d4:	cmn	w0, #0x1
  41f8d8:	b.eq	41f8b0 <notice_finished_file@@Base+0x290>  // b.none
  41f8dc:	tbnz	w0, #31, 41fa34 <notice_finished_file@@Base+0x414>
  41f8e0:	mov	w0, #0x78                  	// #120
  41f8e4:	strb	w0, [sp, #63]
  41f8e8:	b	41f8fc <notice_finished_file@@Base+0x2dc>
  41f8ec:	bl	406d70 <__errno_location@plt>
  41f8f0:	ldr	w0, [x0]
  41f8f4:	cmp	w0, #0x4
  41f8f8:	b.ne	41fa4c <notice_finished_file@@Base+0x42c>  // b.any
  41f8fc:	add	x2, sp, #0x40
  41f900:	mov	w1, w22
  41f904:	mov	w0, #0x0                   	// #0
  41f908:	bl	406cb0 <__fxstat@plt>
  41f90c:	cmn	w0, #0x1
  41f910:	b.eq	41f8ec <notice_finished_file@@Base+0x2cc>  // b.none
  41f914:	tbz	w0, #31, 41f92c <notice_finished_file@@Base+0x30c>
  41f918:	b	41fa4c <notice_finished_file@@Base+0x42c>
  41f91c:	bl	406d70 <__errno_location@plt>
  41f920:	ldr	w0, [x0]
  41f924:	cmp	w0, #0x4
  41f928:	b.ne	41fa64 <notice_finished_file@@Base+0x444>  // b.any
  41f92c:	add	x1, sp, #0x3f
  41f930:	mov	w0, w22
  41f934:	mov	x2, #0x1                   	// #1
  41f938:	bl	406c80 <read@plt>
  41f93c:	cmn	w0, #0x1
  41f940:	b.eq	41f91c <notice_finished_file@@Base+0x2fc>  // b.none
  41f944:	tbz	w0, #31, 41f95c <notice_finished_file@@Base+0x33c>
  41f948:	b	41fa64 <notice_finished_file@@Base+0x444>
  41f94c:	bl	406d70 <__errno_location@plt>
  41f950:	ldr	w0, [x0]
  41f954:	cmp	w0, #0x4
  41f958:	b.ne	41fa7c <notice_finished_file@@Base+0x45c>  // b.any
  41f95c:	mov	w0, w22
  41f960:	mov	w2, #0x0                   	// #0
  41f964:	mov	x1, #0x0                   	// #0
  41f968:	bl	406800 <lseek@plt>
  41f96c:	cmn	x0, #0x1
  41f970:	b.eq	41f94c <notice_finished_file@@Base+0x32c>  // b.none
  41f974:	tbz	x0, #63, 41f98c <notice_finished_file@@Base+0x36c>
  41f978:	b	41fa7c <notice_finished_file@@Base+0x45c>
  41f97c:	bl	406d70 <__errno_location@plt>
  41f980:	ldr	w0, [x0]
  41f984:	cmp	w0, #0x4
  41f988:	b.ne	41fa94 <notice_finished_file@@Base+0x474>  // b.any
  41f98c:	add	x1, sp, #0x3f
  41f990:	mov	w0, w22
  41f994:	mov	x2, #0x1                   	// #1
  41f998:	bl	406a90 <write@plt>
  41f99c:	cmn	w0, #0x1
  41f9a0:	b.eq	41f97c <notice_finished_file@@Base+0x35c>  // b.none
  41f9a4:	tbnz	w0, #31, 41fa94 <notice_finished_file@@Base+0x474>
  41f9a8:	ldr	x0, [sp, #112]
  41f9ac:	cbnz	x0, 41f9ec <notice_finished_file@@Base+0x3cc>
  41f9b0:	mov	w0, w22
  41f9b4:	bl	406a50 <close@plt>
  41f9b8:	b	41f9cc <notice_finished_file@@Base+0x3ac>
  41f9bc:	bl	406d70 <__errno_location@plt>
  41f9c0:	ldr	w0, [x0]
  41f9c4:	cmp	w0, #0x4
  41f9c8:	b.ne	41faac <notice_finished_file@@Base+0x48c>  // b.any
  41f9cc:	ldr	x0, [x19]
  41f9d0:	mov	w2, #0x1b6                 	// #438
  41f9d4:	mov	w1, #0x202                 	// #514
  41f9d8:	bl	406900 <open@plt>
  41f9dc:	mov	w22, w0
  41f9e0:	cmn	w0, #0x1
  41f9e4:	b.eq	41f9bc <notice_finished_file@@Base+0x39c>  // b.none
  41f9e8:	tbnz	w0, #31, 41faac <notice_finished_file@@Base+0x48c>
  41f9ec:	mov	w0, w22
  41f9f0:	bl	406a50 <close@plt>
  41f9f4:	b	41f870 <notice_finished_file@@Base+0x250>
  41f9f8:	ldr	x22, [x19]
  41f9fc:	mov	x0, x22
  41fa00:	bl	406680 <strlen@plt>
  41fa04:	mov	x3, x22
  41fa08:	mov	x1, x0
  41fa0c:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41fa10:	mov	w0, #0x0                   	// #0
  41fa14:	add	x2, x2, #0xc88
  41fa18:	bl	419c88 <message@@Base>
  41fa1c:	b	41f864 <notice_finished_file@@Base+0x244>
  41fa20:	ldr	x0, [x19]
  41fa24:	bl	408be8 <ar_touch@@Base>
  41fa28:	mov	w3, #0x3                   	// #3
  41fa2c:	cbnz	w0, 41f874 <notice_finished_file@@Base+0x254>
  41fa30:	b	41f870 <notice_finished_file@@Base+0x250>
  41fa34:	ldr	x1, [x19]
  41fa38:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41fa3c:	add	x0, x0, #0xc98
  41fa40:	bl	419f38 <perror_with_name@@Base>
  41fa44:	mov	w3, #0x3                   	// #3
  41fa48:	b	41f874 <notice_finished_file@@Base+0x254>
  41fa4c:	ldr	x1, [x19]
  41fa50:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41fa54:	add	x0, x0, #0xca8
  41fa58:	bl	419f38 <perror_with_name@@Base>
  41fa5c:	mov	w3, #0x3                   	// #3
  41fa60:	b	41f874 <notice_finished_file@@Base+0x254>
  41fa64:	ldr	x1, [x19]
  41fa68:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41fa6c:	add	x0, x0, #0xcb8
  41fa70:	bl	419f38 <perror_with_name@@Base>
  41fa74:	mov	w3, #0x3                   	// #3
  41fa78:	b	41f874 <notice_finished_file@@Base+0x254>
  41fa7c:	ldr	x1, [x19]
  41fa80:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41fa84:	add	x0, x0, #0xcc8
  41fa88:	bl	419f38 <perror_with_name@@Base>
  41fa8c:	mov	w3, #0x3                   	// #3
  41fa90:	b	41f874 <notice_finished_file@@Base+0x254>
  41fa94:	ldr	x1, [x19]
  41fa98:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41fa9c:	add	x0, x0, #0xcd8
  41faa0:	bl	419f38 <perror_with_name@@Base>
  41faa4:	mov	w3, #0x3                   	// #3
  41faa8:	b	41f874 <notice_finished_file@@Base+0x254>
  41faac:	ldr	x1, [x19]
  41fab0:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41fab4:	add	x0, x0, #0xc98
  41fab8:	bl	419f38 <perror_with_name@@Base>
  41fabc:	mov	w3, #0x3                   	// #3
  41fac0:	b	41f874 <notice_finished_file@@Base+0x254>
  41fac4:	nop
  41fac8:	stp	x29, x30, [sp, #-224]!
  41facc:	adrp	x2, 445000 <output_context@@Base+0x1250>
  41fad0:	mov	x29, sp
  41fad4:	stp	x19, x20, [sp, #16]
  41fad8:	mov	x20, x0
  41fadc:	add	x0, x2, #0xe00
  41fae0:	str	wzr, [sp, #148]
  41fae4:	ldr	x19, [x20, #104]
  41fae8:	str	x0, [sp, #160]
  41faec:	str	w1, [sp, #168]
  41faf0:	cmp	x19, #0x0
  41faf4:	ldr	w1, [x0, #60]
  41faf8:	csel	x19, x19, x20, ne  // ne = any
  41fafc:	ldr	w0, [x19, #128]
  41fb00:	cmp	w0, w1
  41fb04:	b.eq	420658 <notice_finished_file@@Base+0x1038>  // b.none
  41fb08:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41fb0c:	add	x0, x0, #0x440
  41fb10:	str	x0, [sp, #128]
  41fb14:	stp	x21, x22, [sp, #32]
  41fb18:	ldr	x0, [sp, #128]
  41fb1c:	stp	x23, x24, [sp, #48]
  41fb20:	stp	x25, x26, [sp, #64]
  41fb24:	adrp	x25, 443000 <expanding_var@@Base+0x338>
  41fb28:	ldr	w0, [x0]
  41fb2c:	stp	x27, x28, [sp, #80]
  41fb30:	add	x25, x25, #0xd38
  41fb34:	str	w1, [x19, #128]
  41fb38:	tbnz	w0, #1, 41fbe8 <notice_finished_file@@Base+0x5c8>
  41fb3c:	nop
  41fb40:	ldrb	w0, [x19, #137]
  41fb44:	tbz	w0, #2, 41fc20 <notice_finished_file@@Base+0x600>
  41fb48:	ldr	x1, [sp, #128]
  41fb4c:	ldrb	w0, [x19, #136]
  41fb50:	ldr	w1, [x1]
  41fb54:	and	w0, w0, #0x3
  41fb58:	cmp	w0, #0x1
  41fb5c:	and	w1, w1, #0x2
  41fb60:	b.ls	41ff04 <notice_finished_file@@Base+0x8e4>  // b.plast
  41fb64:	cbnz	w1, 41ffb4 <notice_finished_file@@Base+0x994>
  41fb68:	ldrb	w1, [x19, #138]
  41fb6c:	mov	w0, #0x9                   	// #9
  41fb70:	and	w0, w0, w1
  41fb74:	cmp	w0, #0x8
  41fb78:	b.eq	41fff8 <notice_finished_file@@Base+0x9d8>  // b.none
  41fb7c:	ldrb	w20, [x19, #136]
  41fb80:	and	w20, w20, #0x3
  41fb84:	nop
  41fb88:	mov	x0, x19
  41fb8c:	ldr	x19, [x19, #72]
  41fb90:	cbnz	x19, 41fb88 <notice_finished_file@@Base+0x568>
  41fb94:	cbz	w20, 41fba4 <notice_finished_file@@Base+0x584>
  41fb98:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  41fb9c:	ldr	w1, [x1, #1988]
  41fba0:	cbz	w1, 420910 <notice_finished_file@@Base+0x12f0>
  41fba4:	ldrb	w1, [x0, #136]
  41fba8:	and	w1, w1, #0xc
  41fbac:	sub	w1, w1, #0x4
  41fbb0:	tst	w1, #0xf8
  41fbb4:	b.eq	420710 <notice_finished_file@@Base+0x10f0>  // b.none
  41fbb8:	ldr	x19, [x0, #56]
  41fbbc:	ldr	w0, [sp, #148]
  41fbc0:	cmp	w0, w20
  41fbc4:	csel	w0, w0, w20, cs  // cs = hs, nlast
  41fbc8:	str	w0, [sp, #148]
  41fbcc:	cbz	x19, 4206f0 <notice_finished_file@@Base+0x10d0>
  41fbd0:	ldr	x0, [sp, #160]
  41fbd4:	ldr	w1, [x0, #60]
  41fbd8:	ldr	x0, [sp, #128]
  41fbdc:	str	w1, [x19, #128]
  41fbe0:	ldr	w0, [x0]
  41fbe4:	tbz	w0, #1, 41fb40 <notice_finished_file@@Base+0x520>
  41fbe8:	ldr	w0, [sp, #168]
  41fbec:	bl	418a08 <print_spaces@@Base>
  41fbf0:	mov	w2, #0x5                   	// #5
  41fbf4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41fbf8:	mov	x0, #0x0                   	// #0
  41fbfc:	add	x1, x1, #0xd00
  41fc00:	bl	406cd0 <dcgettext@plt>
  41fc04:	ldr	x1, [x19]
  41fc08:	bl	406d60 <printf@plt>
  41fc0c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41fc10:	ldr	x0, [x0, #384]
  41fc14:	bl	406c20 <fflush@plt>
  41fc18:	ldrb	w0, [x19, #137]
  41fc1c:	tbnz	w0, #2, 41fb48 <notice_finished_file@@Base+0x528>
  41fc20:	ldrb	w20, [x19, #136]
  41fc24:	ubfx	x0, x20, #2, #2
  41fc28:	cmp	w0, #0x2
  41fc2c:	b.eq	41ff8c <notice_finished_file@@Base+0x96c>  // b.none
  41fc30:	cmp	w0, #0x3
  41fc34:	b.eq	41ff48 <notice_finished_file@@Base+0x928>  // b.none
  41fc38:	ldr	x0, [x19, #104]
  41fc3c:	ldrb	w2, [x19, #138]
  41fc40:	ldr	w1, [sp, #168]
  41fc44:	cmp	x0, #0x0
  41fc48:	csel	x0, x0, x19, ne  // ne = any
  41fc4c:	add	w27, w1, #0x1
  41fc50:	mov	w1, w2
  41fc54:	bfi	w1, w2, #3, #1
  41fc58:	strb	w1, [x19, #138]
  41fc5c:	ldrb	w1, [x0, #137]
  41fc60:	orr	w1, w1, #0x2
  41fc64:	strb	w1, [x0, #137]
  41fc68:	ldr	x0, [x19, #112]
  41fc6c:	str	x0, [sp, #152]
  41fc70:	cbz	x0, 420538 <notice_finished_file@@Base+0xf18>
  41fc74:	mov	x0, x19
  41fc78:	mov	x22, x0
  41fc7c:	ldr	x0, [x0, #72]
  41fc80:	cbnz	x0, 41fc78 <notice_finished_file@@Base+0x658>
  41fc84:	ldr	x0, [sp, #152]
  41fc88:	cmp	x0, #0x1
  41fc8c:	cset	w23, eq  // eq = none
  41fc90:	str	w23, [sp, #172]
  41fc94:	b.eq	420568 <notice_finished_file@@Base+0xf48>  // b.none
  41fc98:	ldr	x2, [sp, #152]
  41fc9c:	str	x2, [sp, #112]
  41fca0:	mov	x0, #0xffffffffffffc9ff    	// #-13825
  41fca4:	sub	x1, x2, #0x3
  41fca8:	movk	x0, #0xfb9a, lsl #16
  41fcac:	cmp	x1, x0
  41fcb0:	b.ls	420508 <notice_finished_file@@Base+0xee8>  // b.plast
  41fcb4:	ldrb	w0, [x22, #137]
  41fcb8:	ldr	x1, [x22, #32]
  41fcbc:	tbnz	w0, #5, 420038 <notice_finished_file@@Base+0xa18>
  41fcc0:	cbz	x1, 420008 <notice_finished_file@@Base+0x9e8>
  41fcc4:	mov	x0, x22
  41fcc8:	mov	w21, #0x0                   	// #0
  41fccc:	ldr	x1, [x22, #48]
  41fcd0:	mov	w20, #0x0                   	// #0
  41fcd4:	str	x1, [sp, #136]
  41fcd8:	str	x1, [sp, #184]
  41fcdc:	str	x22, [sp, #200]
  41fce0:	ldr	x28, [x0, #24]
  41fce4:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  41fce8:	add	x0, x0, #0x7c4
  41fcec:	str	x0, [sp, #120]
  41fcf0:	mov	x24, #0x0                   	// #0
  41fcf4:	cbz	x28, 41fe50 <notice_finished_file@@Base+0x830>
  41fcf8:	ldr	x0, [x28, #16]
  41fcfc:	ldr	x1, [x0, #72]
  41fd00:	cbz	x1, 41fd18 <notice_finished_file@@Base+0x6f8>
  41fd04:	nop
  41fd08:	mov	x0, x1
  41fd0c:	ldr	x1, [x1, #72]
  41fd10:	cbnz	x1, 41fd08 <notice_finished_file@@Base+0x6e8>
  41fd14:	str	x0, [x28, #16]
  41fd18:	ldr	x26, [x0, #112]
  41fd1c:	cbnz	x26, 41feec <notice_finished_file@@Base+0x8cc>
  41fd20:	mov	w1, #0x1                   	// #1
  41fd24:	bl	41eef8 <f_mtime@@Base>
  41fd28:	ldr	x2, [x28, #16]
  41fd2c:	mov	x26, x0
  41fd30:	ldr	x0, [x2, #72]
  41fd34:	cbz	x0, 41fd48 <notice_finished_file@@Base+0x728>
  41fd38:	mov	x2, x0
  41fd3c:	ldr	x0, [x0, #72]
  41fd40:	cbnz	x0, 41fd38 <notice_finished_file@@Base+0x718>
  41fd44:	str	x2, [x28, #16]
  41fd48:	ldr	x0, [x2, #104]
  41fd4c:	cmp	x0, #0x0
  41fd50:	csel	x0, x0, x2, ne  // ne = any
  41fd54:	ldrb	w0, [x0, #137]
  41fd58:	tbnz	w0, #1, 41fe68 <notice_finished_file@@Base+0x848>
  41fd5c:	ldr	w24, [x25]
  41fd60:	str	x22, [x2, #96]
  41fd64:	str	w23, [sp, #180]
  41fd68:	cbz	w24, 41fd84 <notice_finished_file@@Base+0x764>
  41fd6c:	ldrb	w24, [x2, #138]
  41fd70:	ldrb	w1, [x22, #138]
  41fd74:	mov	w0, w24
  41fd78:	and	w24, w24, #0x1
  41fd7c:	bfxil	w0, w1, #0, #1
  41fd80:	strb	w0, [x2, #138]
  41fd84:	mov	x0, x2
  41fd88:	mov	w1, w27
  41fd8c:	ldr	x2, [sp, #112]
  41fd90:	add	x3, sp, #0xb4
  41fd94:	bl	420b88 <notice_finished_file@@Base+0x1568>
  41fd98:	cmp	w20, w0
  41fd9c:	ldr	w1, [x25]
  41fda0:	csel	w20, w20, w0, cs  // cs = hs, nlast
  41fda4:	ldr	x0, [x28, #16]
  41fda8:	cbz	w1, 41fdb8 <notice_finished_file@@Base+0x798>
  41fdac:	ldrb	w1, [x0, #138]
  41fdb0:	bfxil	w1, w24, #0, #1
  41fdb4:	strb	w1, [x0, #138]
  41fdb8:	ldrb	w3, [x28, #33]
  41fdbc:	ldr	x1, [x0, #72]
  41fdc0:	ldr	w2, [sp, #180]
  41fdc4:	tst	x3, #0x2
  41fdc8:	csel	w23, w2, w23, eq  // eq = none
  41fdcc:	cbz	x1, 41fde0 <notice_finished_file@@Base+0x7c0>
  41fdd0:	mov	x0, x1
  41fdd4:	ldr	x1, [x1, #72]
  41fdd8:	cbnz	x1, 41fdd0 <notice_finished_file@@Base+0x7b0>
  41fddc:	str	x0, [x28, #16]
  41fde0:	ldr	x1, [x0, #104]
  41fde4:	cmp	x1, #0x0
  41fde8:	csel	x1, x1, x0, ne  // ne = any
  41fdec:	nop
  41fdf0:	ldrb	w2, [x1, #136]
  41fdf4:	ldr	x1, [x1, #56]
  41fdf8:	and	w2, w2, #0xc
  41fdfc:	sub	w2, w2, #0x4
  41fe00:	tst	w2, #0xf8
  41fe04:	cset	w2, eq  // eq = none
  41fe08:	orr	w21, w21, w2
  41fe0c:	cbnz	x1, 41fdf0 <notice_finished_file@@Base+0x7d0>
  41fe10:	cbz	w20, 41fe20 <notice_finished_file@@Base+0x800>
  41fe14:	ldr	x1, [sp, #120]
  41fe18:	ldr	w1, [x1]
  41fe1c:	cbz	w1, 41fe50 <notice_finished_file@@Base+0x830>
  41fe20:	cbnz	w21, 41fe44 <notice_finished_file@@Base+0x824>
  41fe24:	ldr	x1, [x0, #112]
  41fe28:	cbz	x1, 41fef4 <notice_finished_file@@Base+0x8d4>
  41fe2c:	cmp	x1, x26
  41fe30:	ldrb	w0, [x28, #33]
  41fe34:	ccmp	x26, #0x1, #0x4, eq  // eq = none
  41fe38:	cset	w1, eq  // eq = none
  41fe3c:	bfxil	w0, w1, #0, #1
  41fe40:	strb	w0, [x28, #33]
  41fe44:	mov	x24, x28
  41fe48:	ldr	x28, [x28]
  41fe4c:	cbnz	x28, 41fcf8 <notice_finished_file@@Base+0x6d8>
  41fe50:	ldr	x1, [sp, #136]
  41fe54:	cbz	x1, 42006c <notice_finished_file@@Base+0xa4c>
  41fe58:	ldr	x0, [x1, #16]
  41fe5c:	ldr	x1, [x1]
  41fe60:	str	x1, [sp, #136]
  41fe64:	b	41fce0 <notice_finished_file@@Base+0x6c0>
  41fe68:	ldr	x0, [x22]
  41fe6c:	str	x2, [sp, #104]
  41fe70:	bl	406680 <strlen@plt>
  41fe74:	mov	x4, x0
  41fe78:	ldr	x2, [sp, #104]
  41fe7c:	str	x4, [sp, #104]
  41fe80:	ldr	x0, [x2]
  41fe84:	bl	406680 <strlen@plt>
  41fe88:	mov	x26, x0
  41fe8c:	mov	w2, #0x5                   	// #5
  41fe90:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41fe94:	mov	x0, #0x0                   	// #0
  41fe98:	add	x1, x1, #0xe98
  41fe9c:	bl	406cd0 <dcgettext@plt>
  41fea0:	mov	x2, x0
  41fea4:	ldr	x4, [sp, #104]
  41fea8:	mov	x0, #0x0                   	// #0
  41feac:	ldr	x3, [x22]
  41feb0:	add	x1, x4, x26
  41feb4:	ldr	x4, [x28, #16]
  41feb8:	ldr	x4, [x4]
  41febc:	bl	419dc8 <error@@Base>
  41fec0:	cbz	x24, 41fedc <notice_finished_file@@Base+0x8bc>
  41fec4:	ldr	x0, [x28]
  41fec8:	str	x0, [x24]
  41fecc:	ldr	x5, [x28]
  41fed0:	mov	x28, x5
  41fed4:	cbnz	x28, 41fcf8 <notice_finished_file@@Base+0x6d8>
  41fed8:	b	41fe50 <notice_finished_file@@Base+0x830>
  41fedc:	ldr	x5, [x28]
  41fee0:	str	x5, [x22, #24]
  41fee4:	mov	x28, x5
  41fee8:	b	41fed4 <notice_finished_file@@Base+0x8b4>
  41feec:	ldr	x2, [x28, #16]
  41fef0:	b	41fd48 <notice_finished_file@@Base+0x728>
  41fef4:	mov	w1, #0x1                   	// #1
  41fef8:	bl	41eef8 <f_mtime@@Base>
  41fefc:	mov	x1, x0
  41ff00:	b	41fe2c <notice_finished_file@@Base+0x80c>
  41ff04:	cbnz	w1, 41ff10 <notice_finished_file@@Base+0x8f0>
  41ff08:	mov	w20, #0x0                   	// #0
  41ff0c:	b	41fb88 <notice_finished_file@@Base+0x568>
  41ff10:	ldr	w0, [sp, #168]
  41ff14:	bl	418a08 <print_spaces@@Base>
  41ff18:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ff1c:	add	x1, x1, #0xd50
  41ff20:	mov	w2, #0x5                   	// #5
  41ff24:	mov	x0, #0x0                   	// #0
  41ff28:	bl	406cd0 <dcgettext@plt>
  41ff2c:	mov	w20, #0x0                   	// #0
  41ff30:	ldr	x1, [x19]
  41ff34:	bl	406d60 <printf@plt>
  41ff38:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41ff3c:	ldr	x0, [x0, #384]
  41ff40:	bl	406c20 <fflush@plt>
  41ff44:	b	41fb88 <notice_finished_file@@Base+0x568>
  41ff48:	ldr	x0, [sp, #128]
  41ff4c:	ldr	w0, [x0]
  41ff50:	tbz	w0, #1, 41fb80 <notice_finished_file@@Base+0x560>
  41ff54:	ldr	w0, [sp, #168]
  41ff58:	bl	418a08 <print_spaces@@Base>
  41ff5c:	mov	w2, #0x5                   	// #5
  41ff60:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ff64:	mov	x0, #0x0                   	// #0
  41ff68:	add	x1, x1, #0xd98
  41ff6c:	bl	406cd0 <dcgettext@plt>
  41ff70:	ldr	x1, [x19]
  41ff74:	bl	406d60 <printf@plt>
  41ff78:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41ff7c:	ldr	x0, [x0, #384]
  41ff80:	bl	406c20 <fflush@plt>
  41ff84:	ldrb	w20, [x19, #136]
  41ff88:	b	41fb80 <notice_finished_file@@Base+0x560>
  41ff8c:	ldr	x0, [sp, #128]
  41ff90:	ldr	w0, [x0]
  41ff94:	tbz	w0, #1, 41ff08 <notice_finished_file@@Base+0x8e8>
  41ff98:	ldr	w0, [sp, #168]
  41ff9c:	bl	418a08 <print_spaces@@Base>
  41ffa0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ffa4:	mov	w2, #0x5                   	// #5
  41ffa8:	add	x1, x1, #0xd78
  41ffac:	mov	x0, #0x0                   	// #0
  41ffb0:	b	41ff28 <notice_finished_file@@Base+0x908>
  41ffb4:	ldr	w0, [sp, #168]
  41ffb8:	bl	418a08 <print_spaces@@Base>
  41ffbc:	mov	w2, #0x5                   	// #5
  41ffc0:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  41ffc4:	mov	x0, #0x0                   	// #0
  41ffc8:	add	x1, x1, #0xd20
  41ffcc:	bl	406cd0 <dcgettext@plt>
  41ffd0:	ldr	x1, [x19]
  41ffd4:	bl	406d60 <printf@plt>
  41ffd8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  41ffdc:	ldr	x0, [x0, #384]
  41ffe0:	bl	406c20 <fflush@plt>
  41ffe4:	ldrb	w1, [x19, #138]
  41ffe8:	mov	w0, #0x9                   	// #9
  41ffec:	and	w0, w0, w1
  41fff0:	cmp	w0, #0x8
  41fff4:	b.ne	41fb7c <notice_finished_file@@Base+0x55c>  // b.any
  41fff8:	mov	x0, x19
  41fffc:	bl	41ed88 <show_goal_error@@Base+0xc0>
  420000:	ldrb	w20, [x19, #136]
  420004:	b	41fb80 <notice_finished_file@@Base+0x560>
  420008:	tbnz	w0, #0, 420040 <notice_finished_file@@Base+0xa20>
  42000c:	mov	w1, w27
  420010:	mov	x0, x22
  420014:	bl	4138a8 <try_implicit_rule@@Base>
  420018:	cbnz	w0, 420a78 <notice_finished_file@@Base+0x1458>
  42001c:	ldr	x0, [sp, #128]
  420020:	ldr	w0, [x0]
  420024:	tbnz	w0, #3, 420b68 <notice_finished_file@@Base+0x1548>
  420028:	ldrb	w0, [x22, #137]
  42002c:	ldr	x1, [x22, #32]
  420030:	orr	w0, w0, #0x1
  420034:	strb	w0, [x22, #137]
  420038:	cbnz	x1, 41fcc4 <notice_finished_file@@Base+0x6a4>
  42003c:	ldrb	w0, [x22, #137]
  420040:	tbnz	w0, #3, 41fcc4 <notice_finished_file@@Base+0x6a4>
  420044:	adrp	x20, 446000 <commands_started@@Base+0x1c8>
  420048:	ldr	x0, [x20, #2024]
  42004c:	cbz	x0, 41fcc4 <notice_finished_file@@Base+0x6a4>
  420050:	ldr	x0, [x0, #32]
  420054:	cbz	x0, 41fcc4 <notice_finished_file@@Base+0x6a4>
  420058:	ldr	x1, [sp, #128]
  42005c:	ldr	w1, [x1]
  420060:	tbnz	w1, #3, 420ab8 <notice_finished_file@@Base+0x1498>
  420064:	str	x0, [x22, #32]
  420068:	b	41fcc4 <notice_finished_file@@Base+0x6a4>
  42006c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420070:	ldr	w0, [x0, #3308]
  420074:	orr	w0, w23, w0
  420078:	cbz	w0, 4201a0 <notice_finished_file@@Base+0xb80>
  42007c:	ldr	x28, [x22, #24]
  420080:	cbz	x28, 4201a0 <notice_finished_file@@Base+0xb80>
  420084:	adrp	x24, 446000 <commands_started@@Base+0x1c8>
  420088:	add	x26, x24, #0x7c4
  42008c:	b	420098 <notice_finished_file@@Base+0xa78>
  420090:	ldr	x28, [x28]
  420094:	cbz	x28, 4201a0 <notice_finished_file@@Base+0xb80>
  420098:	ldr	x0, [x28, #16]
  42009c:	ldrb	w1, [x0, #137]
  4200a0:	tbz	w1, #6, 420090 <notice_finished_file@@Base+0xa70>
  4200a4:	ldr	x24, [x0, #112]
  4200a8:	cbz	x24, 42041c <notice_finished_file@@Base+0xdfc>
  4200ac:	ldr	x1, [x0, #72]
  4200b0:	cbz	x1, 4200c8 <notice_finished_file@@Base+0xaa8>
  4200b4:	nop
  4200b8:	mov	x0, x1
  4200bc:	ldr	x1, [x1, #72]
  4200c0:	cbnz	x1, 4200b8 <notice_finished_file@@Base+0xa98>
  4200c4:	str	x0, [x28, #16]
  4200c8:	ldr	w2, [x25]
  4200cc:	str	x22, [x0, #96]
  4200d0:	cbz	w2, 4200ec <notice_finished_file@@Base+0xacc>
  4200d4:	ldrb	w2, [x0, #138]
  4200d8:	ldrb	w5, [x22, #138]
  4200dc:	mov	w1, w2
  4200e0:	and	w2, w2, #0x1
  4200e4:	bfxil	w1, w5, #0, #1
  4200e8:	strb	w1, [x0, #138]
  4200ec:	str	wzr, [x0, #128]
  4200f0:	mov	w1, w27
  4200f4:	str	w2, [sp, #104]
  4200f8:	bl	41fac8 <notice_finished_file@@Base+0x4a8>
  4200fc:	cmp	w20, w0
  420100:	ldr	w1, [x25]
  420104:	csel	w20, w20, w0, cs  // cs = hs, nlast
  420108:	ldr	x0, [x28, #16]
  42010c:	cbz	w1, 420120 <notice_finished_file@@Base+0xb00>
  420110:	ldrb	w1, [x0, #138]
  420114:	ldr	w2, [sp, #104]
  420118:	bfxil	w1, w2, #0, #1
  42011c:	strb	w1, [x0, #138]
  420120:	ldr	x1, [x0, #72]
  420124:	cbz	x1, 420138 <notice_finished_file@@Base+0xb18>
  420128:	mov	x0, x1
  42012c:	ldr	x1, [x1, #72]
  420130:	cbnz	x1, 420128 <notice_finished_file@@Base+0xb08>
  420134:	str	x0, [x28, #16]
  420138:	ldr	x2, [x0, #104]
  42013c:	cmp	x2, #0x0
  420140:	csel	x2, x2, x0, ne  // ne = any
  420144:	nop
  420148:	ldrb	w1, [x2, #136]
  42014c:	ldr	x2, [x2, #56]
  420150:	and	w1, w1, #0xc
  420154:	sub	w1, w1, #0x4
  420158:	tst	w1, #0xf8
  42015c:	cset	w1, eq  // eq = none
  420160:	orr	w21, w21, w1
  420164:	cbnz	x2, 420148 <notice_finished_file@@Base+0xb28>
  420168:	cbz	w20, 420174 <notice_finished_file@@Base+0xb54>
  42016c:	ldr	w1, [x26]
  420170:	cbz	w1, 4201a0 <notice_finished_file@@Base+0xb80>
  420174:	cbnz	w21, 420090 <notice_finished_file@@Base+0xa70>
  420178:	ldrb	w1, [x22, #137]
  42017c:	tbz	w1, #5, 420430 <notice_finished_file@@Base+0xe10>
  420180:	ldr	x2, [x22, #32]
  420184:	mov	w1, #0x1                   	// #1
  420188:	cbz	x2, 420430 <notice_finished_file@@Base+0xe10>
  42018c:	ldrb	w0, [x28, #33]
  420190:	bfxil	w0, w1, #0, #1
  420194:	strb	w0, [x28, #33]
  420198:	ldr	x28, [x28]
  42019c:	cbnz	x28, 420098 <notice_finished_file@@Base+0xa78>
  4201a0:	ldr	x0, [x22, #104]
  4201a4:	cmp	x0, #0x0
  4201a8:	csel	x0, x0, x22, ne  // ne = any
  4201ac:	ldrb	w1, [x0, #137]
  4201b0:	and	w1, w1, #0xfffffffd
  4201b4:	strb	w1, [x0, #137]
  4201b8:	ldr	x0, [x19, #104]
  4201bc:	cmp	x0, #0x0
  4201c0:	csel	x0, x0, x19, ne  // ne = any
  4201c4:	ldrb	w1, [x0, #137]
  4201c8:	and	w1, w1, #0xfffffffd
  4201cc:	strb	w1, [x0, #137]
  4201d0:	ldr	x0, [sp, #128]
  4201d4:	ldr	w0, [x0]
  4201d8:	tbnz	w0, #1, 420498 <notice_finished_file@@Base+0xe78>
  4201dc:	cbnz	w21, 4204cc <notice_finished_file@@Base+0xeac>
  4201e0:	cbnz	w20, 4205c8 <notice_finished_file@@Base+0xfa8>
  4201e4:	ldrb	w0, [x22, #136]
  4201e8:	and	w0, w0, #0xc
  4201ec:	cmp	w0, #0x4
  4201f0:	b.eq	420900 <notice_finished_file@@Base+0x12e0>  // b.none
  4201f4:	ldr	x24, [x22, #24]
  4201f8:	cbz	x24, 420794 <notice_finished_file@@Base+0x1174>
  4201fc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  420200:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  420204:	add	x1, x1, #0x10
  420208:	add	x0, x0, #0xfe0
  42020c:	mov	w26, #0x1                   	// #1
  420210:	str	x1, [sp, #104]
  420214:	str	x0, [sp, #120]
  420218:	ldr	x2, [x24, #16]
  42021c:	ldr	x0, [x2, #112]
  420220:	cbz	x0, 420408 <notice_finished_file@@Base+0xde8>
  420224:	ldr	x1, [x2, #72]
  420228:	cbz	x1, 420240 <notice_finished_file@@Base+0xc20>
  42022c:	nop
  420230:	mov	x2, x1
  420234:	ldr	x1, [x1, #72]
  420238:	cbnz	x1, 420230 <notice_finished_file@@Base+0xc10>
  42023c:	str	x2, [x24, #16]
  420240:	ldrb	w4, [x24, #33]
  420244:	and	w1, w4, #0x1
  420248:	tbnz	w4, #1, 420258 <notice_finished_file@@Base+0xc38>
  42024c:	cmp	x0, #0x1
  420250:	b.eq	4203f8 <notice_finished_file@@Base+0xdd8>  // b.none
  420254:	orr	w21, w21, w1
  420258:	ldr	x2, [sp, #112]
  42025c:	ldrb	w4, [x24, #33]
  420260:	cmp	x2, x0
  420264:	ldr	w2, [sp, #172]
  420268:	orr	w1, w2, w1
  42026c:	cset	w2, cc  // cc = lo, ul, last
  420270:	orr	w1, w2, w1
  420274:	ldr	x2, [sp, #152]
  420278:	bfxil	w4, w1, #0, #1
  42027c:	strb	w4, [x24, #33]
  420280:	cmp	x2, #0x1
  420284:	b.eq	4202a8 <notice_finished_file@@Base+0xc88>  // b.none
  420288:	ldr	x1, [sp, #128]
  42028c:	ldr	w1, [x1]
  420290:	tst	x1, #0x3
  420294:	b.eq	4202a8 <notice_finished_file@@Base+0xc88>  // b.none
  420298:	and	w2, w4, #0xff
  42029c:	tbz	w2, #1, 420444 <notice_finished_file@@Base+0xe24>
  4202a0:	tbnz	w1, #1, 4206d4 <notice_finished_file@@Base+0x10b4>
  4202a4:	nop
  4202a8:	ldr	x24, [x24]
  4202ac:	cbnz	x24, 420218 <notice_finished_file@@Base+0xbf8>
  4202b0:	ldr	x0, [x22, #104]
  4202b4:	cbz	x0, 4202c0 <notice_finished_file@@Base+0xca0>
  4202b8:	ldr	x0, [x22, #24]
  4202bc:	cbz	x0, 42079c <notice_finished_file@@Base+0x117c>
  4202c0:	ldr	x0, [sp, #152]
  4202c4:	cmp	x0, #0x1
  4202c8:	ldr	x0, [sp, #128]
  4202cc:	ldr	w0, [x0]
  4202d0:	b.eq	4202e8 <notice_finished_file@@Base+0xcc8>  // b.none
  4202d4:	ldrb	w2, [x22, #137]
  4202d8:	eor	w1, w21, #0x1
  4202dc:	and	w1, w1, #0x1
  4202e0:	tst	w1, w2, lsr #3
  4202e4:	b.ne	4207e4 <notice_finished_file@@Base+0x11c4>  // b.any
  4202e8:	cbnz	w23, 420308 <notice_finished_file@@Base+0xce8>
  4202ec:	ldr	x2, [x22, #32]
  4202f0:	and	w1, w0, #0x2
  4202f4:	cbz	x2, 4208d8 <notice_finished_file@@Base+0x12b8>
  4202f8:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  4202fc:	ldr	w2, [x2, #3308]
  420300:	cbz	w2, 4208d8 <notice_finished_file@@Base+0x12b8>
  420304:	cbnz	w1, 420af8 <notice_finished_file@@Base+0x14d8>
  420308:	tbz	w0, #0, 42033c <notice_finished_file@@Base+0xd1c>
  42030c:	ldr	w0, [sp, #168]
  420310:	bl	418a08 <print_spaces@@Base>
  420314:	mov	w2, #0x5                   	// #5
  420318:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  42031c:	mov	x0, #0x0                   	// #0
  420320:	add	x1, x1, #0x118
  420324:	bl	406cd0 <dcgettext@plt>
  420328:	ldr	x1, [x22]
  42032c:	bl	406d60 <printf@plt>
  420330:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420334:	ldr	x0, [x0, #384]
  420338:	bl	406c20 <fflush@plt>
  42033c:	ldp	x0, x1, [x22]
  420340:	cmp	x0, x1
  420344:	b.eq	420370 <notice_finished_file@@Base+0xd50>  // b.none
  420348:	ldrb	w3, [x0]
  42034c:	ldrb	w2, [x1]
  420350:	cmp	w2, w3
  420354:	b.eq	420934 <notice_finished_file@@Base+0x1314>  // b.none
  420358:	ldr	x0, [sp, #128]
  42035c:	ldr	w0, [x0]
  420360:	tbnz	w0, #0, 4207f8 <notice_finished_file@@Base+0x11d8>
  420364:	ldrb	w0, [x22, #138]
  420368:	orr	w0, w0, #0x2
  42036c:	strb	w0, [x22, #138]
  420370:	ldr	x0, [x22, #32]
  420374:	cbz	x0, 420760 <notice_finished_file@@Base+0x1140>
  420378:	bl	40a090 <chop_commands@@Base>
  42037c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  420380:	ldr	w0, [x0, #2188]
  420384:	cbz	w0, 42088c <notice_finished_file@@Base+0x126c>
  420388:	ldr	x0, [x22, #32]
  42038c:	ldrb	w0, [x0, #51]
  420390:	tbnz	w0, #0, 42088c <notice_finished_file@@Base+0x126c>
  420394:	ldrb	w0, [x22, #136]
  420398:	and	w0, w0, #0xfffffffc
  42039c:	strb	w0, [x22, #136]
  4203a0:	mov	x0, x22
  4203a4:	bl	41f620 <notice_finished_file@@Base>
  4203a8:	ldrb	w0, [x22, #136]
  4203ac:	and	w1, w0, #0xc
  4203b0:	cmp	w1, #0xc
  4203b4:	b.eq	420724 <notice_finished_file@@Base+0x1104>  // b.none
  4203b8:	ldr	x0, [sp, #128]
  4203bc:	ldr	w0, [x0]
  4203c0:	tbz	w0, #1, 41ff08 <notice_finished_file@@Base+0x8e8>
  4203c4:	ldr	w0, [sp, #168]
  4203c8:	bl	418a08 <print_spaces@@Base>
  4203cc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4203d0:	mov	w2, #0x5                   	// #5
  4203d4:	add	x1, x1, #0x158
  4203d8:	mov	x0, #0x0                   	// #0
  4203dc:	bl	406cd0 <dcgettext@plt>
  4203e0:	ldr	x1, [x22]
  4203e4:	bl	406d60 <printf@plt>
  4203e8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4203ec:	ldr	x0, [x0, #384]
  4203f0:	bl	406c20 <fflush@plt>
  4203f4:	b	41fb88 <notice_finished_file@@Base+0x568>
  4203f8:	ldrb	w2, [x2, #137]
  4203fc:	tst	x2, #0x40
  420400:	csel	w23, w23, w26, ne  // ne = any
  420404:	b	420254 <notice_finished_file@@Base+0xc34>
  420408:	mov	x0, x2
  42040c:	mov	w1, #0x1                   	// #1
  420410:	bl	41eef8 <f_mtime@@Base>
  420414:	ldr	x2, [x24, #16]
  420418:	b	420224 <notice_finished_file@@Base+0xc04>
  42041c:	mov	w1, #0x1                   	// #1
  420420:	bl	41eef8 <f_mtime@@Base>
  420424:	mov	x24, x0
  420428:	ldr	x0, [x28, #16]
  42042c:	b	4200ac <notice_finished_file@@Base+0xa8c>
  420430:	ldr	x1, [x0, #112]
  420434:	cbz	x1, 4205b8 <notice_finished_file@@Base+0xf98>
  420438:	cmp	x24, x1
  42043c:	cset	w1, ne  // ne = any
  420440:	b	42018c <notice_finished_file@@Base+0xb6c>
  420444:	cmp	x0, #0x1
  420448:	b.eq	4206b4 <notice_finished_file@@Base+0x1094>  // b.none
  42044c:	tbz	w2, #0, 42054c <notice_finished_file@@Base+0xf2c>
  420450:	tbz	w1, #0, 4202a8 <notice_finished_file@@Base+0xc88>
  420454:	ldr	x1, [sp, #120]
  420458:	mov	w2, #0x5                   	// #5
  42045c:	mov	x0, #0x0                   	// #0
  420460:	bl	406cd0 <dcgettext@plt>
  420464:	mov	x28, x0
  420468:	cbz	x28, 4202a8 <notice_finished_file@@Base+0xc88>
  42046c:	mov	w0, w27
  420470:	bl	418a08 <print_spaces@@Base>
  420474:	ldr	x1, [x24, #8]
  420478:	cbz	x1, 420980 <notice_finished_file@@Base+0x1360>
  42047c:	ldr	x2, [x22]
  420480:	mov	x0, x28
  420484:	bl	406d60 <printf@plt>
  420488:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  42048c:	ldr	x0, [x0, #384]
  420490:	bl	406c20 <fflush@plt>
  420494:	b	4202a8 <notice_finished_file@@Base+0xc88>
  420498:	mov	w0, w27
  42049c:	bl	418a08 <print_spaces@@Base>
  4204a0:	mov	w2, #0x5                   	// #5
  4204a4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4204a8:	mov	x0, #0x0                   	// #0
  4204ac:	add	x1, x1, #0xec0
  4204b0:	bl	406cd0 <dcgettext@plt>
  4204b4:	ldr	x1, [x22]
  4204b8:	bl	406d60 <printf@plt>
  4204bc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4204c0:	ldr	x0, [x0, #384]
  4204c4:	bl	406c20 <fflush@plt>
  4204c8:	cbz	w21, 4201e0 <notice_finished_file@@Base+0xbc0>
  4204cc:	mov	x0, x22
  4204d0:	mov	w1, #0x1                   	// #1
  4204d4:	bl	40d9f0 <set_command_state@@Base>
  4204d8:	ldr	x0, [sp, #128]
  4204dc:	ldr	w0, [x0]
  4204e0:	tbz	w0, #1, 41ff08 <notice_finished_file@@Base+0x8e8>
  4204e4:	ldr	w0, [sp, #168]
  4204e8:	mov	w20, #0x0                   	// #0
  4204ec:	bl	418a08 <print_spaces@@Base>
  4204f0:	mov	w2, #0x5                   	// #5
  4204f4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4204f8:	mov	x0, #0x0                   	// #0
  4204fc:	add	x1, x1, #0xef0
  420500:	bl	406cd0 <dcgettext@plt>
  420504:	b	4203e0 <notice_finished_file@@Base+0xdc0>
  420508:	ldrsb	w0, [x22, #136]
  42050c:	tbz	w0, #31, 41fcb4 <notice_finished_file@@Base+0x694>
  420510:	sub	w0, w2, #0x3
  420514:	ands	w20, w0, #0x3fffffff
  420518:	b.ne	4209b4 <notice_finished_file@@Base+0x1394>  // b.any
  42051c:	ldr	x1, [sp, #152]
  420520:	mov	w0, #0xc9ff                	// #51711
  420524:	movk	w0, #0x3b9a, lsl #16
  420528:	sub	w0, w0, w20
  42052c:	add	x0, x1, w0, sxtw
  420530:	str	x0, [sp, #112]
  420534:	b	41fcb4 <notice_finished_file@@Base+0x694>
  420538:	mov	x0, x19
  42053c:	mov	w1, #0x1                   	// #1
  420540:	bl	41eef8 <f_mtime@@Base>
  420544:	str	x0, [sp, #152]
  420548:	b	41fc74 <notice_finished_file@@Base+0x654>
  42054c:	tbz	w1, #1, 4202a8 <notice_finished_file@@Base+0xc88>
  420550:	ldr	x1, [sp, #104]
  420554:	mov	w2, #0x5                   	// #5
  420558:	mov	x0, #0x0                   	// #0
  42055c:	bl	406cd0 <dcgettext@plt>
  420560:	mov	x28, x0
  420564:	b	420468 <notice_finished_file@@Base+0xe48>
  420568:	ldr	x0, [sp, #128]
  42056c:	ldr	x1, [sp, #152]
  420570:	str	x1, [sp, #112]
  420574:	ldr	w0, [x0]
  420578:	tbz	w0, #0, 41fcb4 <notice_finished_file@@Base+0x694>
  42057c:	mov	w0, w27
  420580:	bl	418a08 <print_spaces@@Base>
  420584:	mov	w2, #0x5                   	// #5
  420588:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  42058c:	mov	x0, #0x0                   	// #0
  420590:	add	x1, x1, #0xdb8
  420594:	bl	406cd0 <dcgettext@plt>
  420598:	ldr	x1, [sp, #152]
  42059c:	str	x1, [sp, #112]
  4205a0:	ldr	x1, [x22]
  4205a4:	bl	406d60 <printf@plt>
  4205a8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4205ac:	ldr	x0, [x0, #384]
  4205b0:	bl	406c20 <fflush@plt>
  4205b4:	b	41fcb4 <notice_finished_file@@Base+0x694>
  4205b8:	mov	w1, #0x1                   	// #1
  4205bc:	bl	41eef8 <f_mtime@@Base>
  4205c0:	mov	x1, x0
  4205c4:	b	420438 <notice_finished_file@@Base+0xe18>
  4205c8:	ldrb	w2, [x22, #136]
  4205cc:	cmp	w20, #0x1
  4205d0:	mov	w1, #0x3                   	// #3
  4205d4:	csel	w1, w20, w1, ne  // ne = any
  4205d8:	mov	x0, x22
  4205dc:	bfxil	w2, w1, #0, #2
  4205e0:	strb	w2, [x22, #136]
  4205e4:	bl	41f620 <notice_finished_file@@Base>
  4205e8:	ldr	x0, [sp, #128]
  4205ec:	ldr	w0, [x0]
  4205f0:	tbnz	w0, #1, 42094c <notice_finished_file@@Base+0x132c>
  4205f4:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  4205f8:	ldr	w0, [x0, #1988]
  4205fc:	cbz	w0, 41fb88 <notice_finished_file@@Base+0x568>
  420600:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  420604:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  420608:	ldr	w0, [x0, #1984]
  42060c:	ldr	w1, [x1, #3404]
  420610:	orr	w0, w0, w1
  420614:	ldr	w1, [sp, #168]
  420618:	orr	w0, w0, w1
  42061c:	cbnz	w0, 41fb88 <notice_finished_file@@Base+0x568>
  420620:	ldr	x0, [x22]
  420624:	bl	406680 <strlen@plt>
  420628:	mov	x21, x0
  42062c:	mov	w2, #0x5                   	// #5
  420630:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  420634:	mov	x0, #0x0                   	// #0
  420638:	add	x1, x1, #0xf40
  42063c:	bl	406cd0 <dcgettext@plt>
  420640:	mov	x2, x0
  420644:	ldr	x3, [x22]
  420648:	mov	x1, x21
  42064c:	mov	x0, #0x0                   	// #0
  420650:	bl	419dc8 <error@@Base>
  420654:	b	41fb88 <notice_finished_file@@Base+0x568>
  420658:	ldrb	w0, [x19, #137]
  42065c:	tbz	w0, #2, 420684 <notice_finished_file@@Base+0x1064>
  420660:	ldrb	w0, [x19, #136]
  420664:	and	w0, w0, #0x3
  420668:	cmp	w0, #0x1
  42066c:	b.ls	420684 <notice_finished_file@@Base+0x1064>  // b.plast
  420670:	ldrb	w2, [x19, #138]
  420674:	mov	w0, #0x9                   	// #9
  420678:	and	w0, w0, w2
  42067c:	cmp	w0, #0x8
  420680:	b.eq	41fb08 <notice_finished_file@@Base+0x4e8>  // b.none
  420684:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420688:	ldr	w0, [x0, #1088]
  42068c:	tbnz	w0, #1, 420824 <notice_finished_file@@Base+0x1204>
  420690:	ldrb	w0, [x19, #136]
  420694:	and	w1, w0, #0xc
  420698:	cmp	w1, #0xc
  42069c:	b.eq	420858 <notice_finished_file@@Base+0x1238>  // b.none
  4206a0:	str	wzr, [sp, #148]
  4206a4:	ldr	w0, [sp, #148]
  4206a8:	ldp	x19, x20, [sp, #16]
  4206ac:	ldp	x29, x30, [sp], #224
  4206b0:	ret
  4206b4:	tbz	w1, #0, 4202a8 <notice_finished_file@@Base+0xc88>
  4206b8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4206bc:	mov	w2, #0x5                   	// #5
  4206c0:	add	x1, x1, #0xfa8
  4206c4:	mov	x0, #0x0                   	// #0
  4206c8:	bl	406cd0 <dcgettext@plt>
  4206cc:	mov	x28, x0
  4206d0:	b	420468 <notice_finished_file@@Base+0xe48>
  4206d4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4206d8:	mov	w2, #0x5                   	// #5
  4206dc:	add	x1, x1, #0xf70
  4206e0:	mov	x0, #0x0                   	// #0
  4206e4:	bl	406cd0 <dcgettext@plt>
  4206e8:	mov	x28, x0
  4206ec:	b	420468 <notice_finished_file@@Base+0xe48>
  4206f0:	ldr	w0, [sp, #148]
  4206f4:	ldp	x19, x20, [sp, #16]
  4206f8:	ldp	x21, x22, [sp, #32]
  4206fc:	ldp	x23, x24, [sp, #48]
  420700:	ldp	x25, x26, [sp, #64]
  420704:	ldp	x27, x28, [sp, #80]
  420708:	ldp	x29, x30, [sp], #224
  42070c:	ret
  420710:	ldp	x21, x22, [sp, #32]
  420714:	ldp	x23, x24, [sp, #48]
  420718:	ldp	x25, x26, [sp, #64]
  42071c:	ldp	x27, x28, [sp, #80]
  420720:	b	4206a0 <notice_finished_file@@Base+0x1080>
  420724:	and	w20, w0, #0x3
  420728:	cmp	w20, #0x2
  42072c:	b.eq	42098c <notice_finished_file@@Base+0x136c>  // b.none
  420730:	cmp	w20, #0x3
  420734:	b.eq	420864 <notice_finished_file@@Base+0x1244>  // b.none
  420738:	cmp	w20, #0x1
  42073c:	b.eq	420750 <notice_finished_file@@Base+0x1130>  // b.none
  420740:	ldr	x0, [sp, #128]
  420744:	mov	w20, #0x0                   	// #0
  420748:	ldr	w0, [x0]
  42074c:	tbnz	w0, #0, 420b14 <notice_finished_file@@Base+0x14f4>
  420750:	ldrb	w0, [x22, #137]
  420754:	orr	w0, w0, #0x4
  420758:	strb	w0, [x22, #137]
  42075c:	b	41fb88 <notice_finished_file@@Base+0x568>
  420760:	ldrb	w0, [x22, #137]
  420764:	tbnz	w0, #5, 420394 <notice_finished_file@@Base+0xd74>
  420768:	tbnz	w0, #3, 420394 <notice_finished_file@@Base+0xd74>
  42076c:	ldr	w0, [x25]
  420770:	cbz	w0, 42077c <notice_finished_file@@Base+0x115c>
  420774:	ldrb	w0, [x22, #138]
  420778:	tbnz	w0, #0, 420784 <notice_finished_file@@Base+0x1164>
  42077c:	mov	x0, x22
  420780:	bl	41ed88 <show_goal_error@@Base+0xc0>
  420784:	ldrb	w0, [x22, #136]
  420788:	orr	w0, w0, #0x3
  42078c:	strb	w0, [x22, #136]
  420790:	b	4203a0 <notice_finished_file@@Base+0xd80>
  420794:	ldr	x0, [x22, #104]
  420798:	cbz	x0, 4202c0 <notice_finished_file@@Base+0xca0>
  42079c:	ldr	x0, [sp, #128]
  4207a0:	ldr	w0, [x0]
  4207a4:	tbz	w0, #0, 42033c <notice_finished_file@@Base+0xd1c>
  4207a8:	ldr	w0, [sp, #168]
  4207ac:	bl	418a08 <print_spaces@@Base>
  4207b0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4207b4:	add	x1, x1, #0x40
  4207b8:	mov	w2, #0x5                   	// #5
  4207bc:	mov	x0, #0x0                   	// #0
  4207c0:	bl	406cd0 <dcgettext@plt>
  4207c4:	ldr	x1, [x22]
  4207c8:	bl	406d60 <printf@plt>
  4207cc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4207d0:	ldr	x0, [x0, #384]
  4207d4:	bl	406c20 <fflush@plt>
  4207d8:	ldr	x0, [sp, #128]
  4207dc:	ldr	w0, [x0]
  4207e0:	b	420308 <notice_finished_file@@Base+0xce8>
  4207e4:	ldr	x1, [x22, #32]
  4207e8:	cbz	x1, 420b50 <notice_finished_file@@Base+0x1530>
  4207ec:	and	w1, w0, #0x2
  4207f0:	cbz	w23, 4202f8 <notice_finished_file@@Base+0xcd8>
  4207f4:	b	420308 <notice_finished_file@@Base+0xce8>
  4207f8:	mov	w2, #0x5                   	// #5
  4207fc:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  420800:	mov	x0, #0x0                   	// #0
  420804:	add	x1, x1, #0x138
  420808:	bl	406cd0 <dcgettext@plt>
  42080c:	ldr	x1, [x22, #8]
  420810:	bl	406d60 <printf@plt>
  420814:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420818:	ldr	x0, [x0, #384]
  42081c:	bl	406c20 <fflush@plt>
  420820:	b	420364 <notice_finished_file@@Base+0xd44>
  420824:	ldr	w0, [sp, #168]
  420828:	bl	418a08 <print_spaces@@Base>
  42082c:	mov	w2, #0x5                   	// #5
  420830:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  420834:	mov	x0, #0x0                   	// #0
  420838:	add	x1, x1, #0xce8
  42083c:	bl	406cd0 <dcgettext@plt>
  420840:	ldr	x1, [x20]
  420844:	bl	406d60 <printf@plt>
  420848:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  42084c:	ldr	x0, [x0, #384]
  420850:	bl	406c20 <fflush@plt>
  420854:	b	420690 <notice_finished_file@@Base+0x1070>
  420858:	and	w0, w0, #0x3
  42085c:	str	w0, [sp, #148]
  420860:	b	4206a4 <notice_finished_file@@Base+0x1084>
  420864:	ldr	x0, [sp, #128]
  420868:	ldr	w0, [x0]
  42086c:	tbz	w0, #0, 420750 <notice_finished_file@@Base+0x1130>
  420870:	ldr	w0, [sp, #168]
  420874:	bl	418a08 <print_spaces@@Base>
  420878:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  42087c:	mov	w2, #0x5                   	// #5
  420880:	add	x1, x1, #0x178
  420884:	mov	x0, #0x0                   	// #0
  420888:	b	420b2c <notice_finished_file@@Base+0x150c>
  42088c:	mov	x0, x22
  420890:	bl	40a3f8 <execute_file_commands@@Base>
  420894:	b	4203a8 <notice_finished_file@@Base+0xd88>
  420898:	tbz	w0, #1, 4208dc <notice_finished_file@@Base+0x12bc>
  42089c:	ldr	w0, [sp, #168]
  4208a0:	bl	418a08 <print_spaces@@Base>
  4208a4:	mov	w2, #0x5                   	// #5
  4208a8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4208ac:	mov	x0, #0x0                   	// #0
  4208b0:	add	x1, x1, #0x78
  4208b4:	bl	406cd0 <dcgettext@plt>
  4208b8:	ldr	x1, [x22]
  4208bc:	bl	406d60 <printf@plt>
  4208c0:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4208c4:	ldr	x0, [x0, #384]
  4208c8:	bl	406c20 <fflush@plt>
  4208cc:	ldr	x0, [sp, #128]
  4208d0:	ldr	w1, [x0]
  4208d4:	and	w1, w1, #0x2
  4208d8:	cbnz	w1, 4209ec <notice_finished_file@@Base+0x13cc>
  4208dc:	mov	x0, x22
  4208e0:	bl	41f620 <notice_finished_file@@Base>
  4208e4:	nop
  4208e8:	ldr	x0, [x22, #8]
  4208ec:	str	x0, [x22]
  4208f0:	ldr	x22, [x22, #56]
  4208f4:	cbnz	x22, 4208e8 <notice_finished_file@@Base+0x12c8>
  4208f8:	mov	w20, #0x0                   	// #0
  4208fc:	b	41fb88 <notice_finished_file@@Base+0x568>
  420900:	mov	x0, x22
  420904:	mov	w1, #0x0                   	// #0
  420908:	bl	40d9f0 <set_command_state@@Base>
  42090c:	b	4201f4 <notice_finished_file@@Base+0xbd4>
  420910:	str	w20, [sp, #148]
  420914:	ldp	x19, x20, [sp, #16]
  420918:	ldr	w0, [sp, #148]
  42091c:	ldp	x21, x22, [sp, #32]
  420920:	ldp	x23, x24, [sp, #48]
  420924:	ldp	x25, x26, [sp, #64]
  420928:	ldp	x27, x28, [sp, #80]
  42092c:	ldp	x29, x30, [sp], #224
  420930:	ret
  420934:	cbz	w2, 420370 <notice_finished_file@@Base+0xd50>
  420938:	add	x1, x1, #0x1
  42093c:	add	x0, x0, #0x1
  420940:	bl	406b40 <strcmp@plt>
  420944:	cbz	w0, 420370 <notice_finished_file@@Base+0xd50>
  420948:	b	420358 <notice_finished_file@@Base+0xd38>
  42094c:	ldr	w0, [sp, #168]
  420950:	bl	418a08 <print_spaces@@Base>
  420954:	mov	w2, #0x5                   	// #5
  420958:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  42095c:	mov	x0, #0x0                   	// #0
  420960:	add	x1, x1, #0xf20
  420964:	bl	406cd0 <dcgettext@plt>
  420968:	ldr	x1, [x22]
  42096c:	bl	406d60 <printf@plt>
  420970:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420974:	ldr	x0, [x0, #384]
  420978:	bl	406c20 <fflush@plt>
  42097c:	b	4205f4 <notice_finished_file@@Base+0xfd4>
  420980:	ldr	x0, [x24, #16]
  420984:	ldr	x1, [x0]
  420988:	b	42047c <notice_finished_file@@Base+0xe5c>
  42098c:	ldr	x0, [sp, #128]
  420990:	ldr	w0, [x0]
  420994:	tbz	w0, #0, 420750 <notice_finished_file@@Base+0x1130>
  420998:	ldr	w0, [sp, #168]
  42099c:	bl	418a08 <print_spaces@@Base>
  4209a0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4209a4:	mov	w2, #0x5                   	// #5
  4209a8:	add	x1, x1, #0x1c8
  4209ac:	mov	x0, #0x0                   	// #0
  4209b0:	b	420b2c <notice_finished_file@@Base+0x150c>
  4209b4:	ldr	x0, [x22]
  4209b8:	bl	406680 <strlen@plt>
  4209bc:	mov	x21, x0
  4209c0:	mov	w2, #0x5                   	// #5
  4209c4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4209c8:	mov	x0, #0x0                   	// #0
  4209cc:	add	x1, x1, #0xdd8
  4209d0:	bl	406cd0 <dcgettext@plt>
  4209d4:	mov	x2, x0
  4209d8:	ldr	x3, [x22]
  4209dc:	mov	x1, x21
  4209e0:	mov	x0, #0x0                   	// #0
  4209e4:	bl	419dc8 <error@@Base>
  4209e8:	b	42051c <notice_finished_file@@Base+0xefc>
  4209ec:	ldr	w0, [sp, #168]
  4209f0:	bl	418a08 <print_spaces@@Base>
  4209f4:	mov	w2, #0x5                   	// #5
  4209f8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4209fc:	mov	x0, #0x0                   	// #0
  420a00:	add	x1, x1, #0xe0
  420a04:	bl	406cd0 <dcgettext@plt>
  420a08:	ldr	x1, [x22]
  420a0c:	bl	406d60 <printf@plt>
  420a10:	ldp	x0, x1, [x22]
  420a14:	cmp	x0, x1
  420a18:	b.eq	420a5c <notice_finished_file@@Base+0x143c>  // b.none
  420a1c:	ldrb	w3, [x0]
  420a20:	ldrb	w2, [x1]
  420a24:	cmp	w2, w3
  420a28:	b.ne	420a40 <notice_finished_file@@Base+0x1420>  // b.any
  420a2c:	cbz	w2, 420a5c <notice_finished_file@@Base+0x143c>
  420a30:	add	x1, x1, #0x1
  420a34:	add	x0, x0, #0x1
  420a38:	bl	406b40 <strcmp@plt>
  420a3c:	cbz	w0, 420a5c <notice_finished_file@@Base+0x143c>
  420a40:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  420a44:	mov	w2, #0x5                   	// #5
  420a48:	add	x1, x1, #0x100
  420a4c:	mov	x0, #0x0                   	// #0
  420a50:	bl	406cd0 <dcgettext@plt>
  420a54:	ldr	x1, [x22, #8]
  420a58:	bl	406d60 <printf@plt>
  420a5c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  420a60:	add	x0, x0, #0xb58
  420a64:	bl	406ae0 <puts@plt>
  420a68:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420a6c:	ldr	x0, [x0, #384]
  420a70:	bl	406c20 <fflush@plt>
  420a74:	b	4208dc <notice_finished_file@@Base+0x12bc>
  420a78:	ldr	x0, [sp, #128]
  420a7c:	ldr	w0, [x0]
  420a80:	tbz	w0, #3, 420028 <notice_finished_file@@Base+0xa08>
  420a84:	mov	w0, w27
  420a88:	bl	418a08 <print_spaces@@Base>
  420a8c:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  420a90:	add	x1, x1, #0xe28
  420a94:	mov	w2, #0x5                   	// #5
  420a98:	mov	x0, #0x0                   	// #0
  420a9c:	bl	406cd0 <dcgettext@plt>
  420aa0:	ldr	x1, [x22]
  420aa4:	bl	406d60 <printf@plt>
  420aa8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420aac:	ldr	x0, [x0, #384]
  420ab0:	bl	406c20 <fflush@plt>
  420ab4:	b	420028 <notice_finished_file@@Base+0xa08>
  420ab8:	mov	w0, w27
  420abc:	bl	418a08 <print_spaces@@Base>
  420ac0:	mov	w2, #0x5                   	// #5
  420ac4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  420ac8:	mov	x0, #0x0                   	// #0
  420acc:	add	x1, x1, #0xe78
  420ad0:	bl	406cd0 <dcgettext@plt>
  420ad4:	ldr	x1, [x22]
  420ad8:	bl	406d60 <printf@plt>
  420adc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420ae0:	ldr	x0, [x0, #384]
  420ae4:	bl	406c20 <fflush@plt>
  420ae8:	ldr	x0, [x20, #2024]
  420aec:	ldr	x0, [x0, #32]
  420af0:	str	x0, [x22, #32]
  420af4:	b	41fcc4 <notice_finished_file@@Base+0x6a4>
  420af8:	ldr	w0, [sp, #168]
  420afc:	bl	418a08 <print_spaces@@Base>
  420b00:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  420b04:	mov	w2, #0x5                   	// #5
  420b08:	add	x1, x1, #0xb8
  420b0c:	mov	x0, #0x0                   	// #0
  420b10:	b	4207c0 <notice_finished_file@@Base+0x11a0>
  420b14:	ldr	w0, [sp, #168]
  420b18:	bl	418a08 <print_spaces@@Base>
  420b1c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  420b20:	add	x1, x1, #0x1a0
  420b24:	mov	w2, #0x5                   	// #5
  420b28:	mov	x0, #0x0                   	// #0
  420b2c:	bl	406cd0 <dcgettext@plt>
  420b30:	ldr	x1, [x22]
  420b34:	bl	406d60 <printf@plt>
  420b38:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420b3c:	ldr	x0, [x0, #384]
  420b40:	bl	406c20 <fflush@plt>
  420b44:	ldrb	w20, [x22, #136]
  420b48:	and	w20, w20, #0x3
  420b4c:	b	420750 <notice_finished_file@@Base+0x1130>
  420b50:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  420b54:	ldr	w1, [x1, #3308]
  420b58:	cbz	w1, 420898 <notice_finished_file@@Base+0x1278>
  420b5c:	and	w1, w0, #0x2
  420b60:	cbz	w23, 4208d8 <notice_finished_file@@Base+0x12b8>
  420b64:	b	420308 <notice_finished_file@@Base+0xce8>
  420b68:	mov	w0, w27
  420b6c:	bl	418a08 <print_spaces@@Base>
  420b70:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  420b74:	mov	w2, #0x5                   	// #5
  420b78:	add	x1, x1, #0xe50
  420b7c:	mov	x0, #0x0                   	// #0
  420b80:	b	420a9c <notice_finished_file@@Base+0x147c>
  420b84:	nop
  420b88:	stp	x29, x30, [sp, #-144]!
  420b8c:	mov	x29, sp
  420b90:	stp	x23, x24, [sp, #48]
  420b94:	add	w24, w1, #0x1
  420b98:	mov	x23, x3
  420b9c:	ldr	x1, [x0, #104]
  420ba0:	stp	x19, x20, [sp, #16]
  420ba4:	cmp	x1, #0x0
  420ba8:	stp	x21, x22, [sp, #32]
  420bac:	csel	x1, x1, x0, ne  // ne = any
  420bb0:	stp	x27, x28, [sp, #80]
  420bb4:	mov	x22, x2
  420bb8:	mov	x27, x0
  420bbc:	ldrb	w2, [x1, #137]
  420bc0:	orr	w2, w2, #0x2
  420bc4:	strb	w2, [x1, #137]
  420bc8:	ldrb	w1, [x0, #137]
  420bcc:	and	w2, w1, #0x60
  420bd0:	cmp	w2, #0x40
  420bd4:	b.ne	420cc4 <notice_finished_file@@Base+0x16a4>  // b.any
  420bd8:	ldr	x2, [x0, #32]
  420bdc:	tbnz	w1, #5, 420c90 <notice_finished_file@@Base+0x1670>
  420be0:	cbz	x2, 420c60 <notice_finished_file@@Base+0x1640>
  420be4:	mov	x20, x27
  420be8:	mov	x19, x20
  420bec:	ldr	x20, [x20, #72]
  420bf0:	cbnz	x20, 420be8 <notice_finished_file@@Base+0x15c8>
  420bf4:	ldr	x0, [x19, #112]
  420bf8:	cbz	x0, 420ea8 <notice_finished_file@@Base+0x1888>
  420bfc:	cmp	x0, #0x1
  420c00:	ccmp	x22, x0, #0x2, ne  // ne = any
  420c04:	b.cs	420d04 <notice_finished_file@@Base+0x16e4>  // b.hs, b.nlast
  420c08:	mov	w0, #0x1                   	// #1
  420c0c:	mov	w21, #0x0                   	// #0
  420c10:	str	w0, [x23]
  420c14:	ldr	x1, [x19, #104]
  420c18:	mov	w0, w21
  420c1c:	cmp	x1, #0x0
  420c20:	csel	x1, x1, x19, ne  // ne = any
  420c24:	ldrb	w2, [x1, #137]
  420c28:	and	w2, w2, #0xfffffffd
  420c2c:	strb	w2, [x1, #137]
  420c30:	ldr	x1, [x27, #104]
  420c34:	cmp	x1, #0x0
  420c38:	csel	x1, x1, x27, ne  // ne = any
  420c3c:	ldrb	w2, [x1, #137]
  420c40:	and	w2, w2, #0xfffffffd
  420c44:	strb	w2, [x1, #137]
  420c48:	ldp	x19, x20, [sp, #16]
  420c4c:	ldp	x21, x22, [sp, #32]
  420c50:	ldp	x23, x24, [sp, #48]
  420c54:	ldp	x27, x28, [sp, #80]
  420c58:	ldp	x29, x30, [sp], #144
  420c5c:	ret
  420c60:	tbnz	w1, #0, 420c98 <notice_finished_file@@Base+0x1678>
  420c64:	mov	w1, w24
  420c68:	bl	4138a8 <try_implicit_rule@@Base>
  420c6c:	cbz	w0, 420f30 <notice_finished_file@@Base+0x1910>
  420c70:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420c74:	ldr	w0, [x0, #1088]
  420c78:	tbnz	w0, #3, 420f70 <notice_finished_file@@Base+0x1950>
  420c7c:	ldrb	w0, [x27, #137]
  420c80:	ldr	x2, [x27, #32]
  420c84:	orr	w0, w0, #0x1
  420c88:	strb	w0, [x27, #137]
  420c8c:	nop
  420c90:	cbnz	x2, 420be4 <notice_finished_file@@Base+0x15c4>
  420c94:	ldrb	w1, [x27, #137]
  420c98:	tbnz	w1, #3, 420be4 <notice_finished_file@@Base+0x15c4>
  420c9c:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  420ca0:	ldr	x0, [x19, #2024]
  420ca4:	cbz	x0, 420be4 <notice_finished_file@@Base+0x15c4>
  420ca8:	ldr	x0, [x0, #32]
  420cac:	cbz	x0, 420be4 <notice_finished_file@@Base+0x15c4>
  420cb0:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  420cb4:	ldr	w1, [x1, #1088]
  420cb8:	tbnz	w1, #3, 420ee8 <notice_finished_file@@Base+0x18c8>
  420cbc:	str	x0, [x27, #32]
  420cc0:	b	420be4 <notice_finished_file@@Base+0x15c4>
  420cc4:	mov	w1, w24
  420cc8:	bl	41fac8 <notice_finished_file@@Base+0x4a8>
  420ccc:	mov	x1, x27
  420cd0:	mov	w21, w0
  420cd4:	nop
  420cd8:	mov	x19, x1
  420cdc:	ldr	x1, [x1, #72]
  420ce0:	cbnz	x1, 420cd8 <notice_finished_file@@Base+0x16b8>
  420ce4:	ldr	x0, [x19, #112]
  420ce8:	cbz	x0, 420ec8 <notice_finished_file@@Base+0x18a8>
  420cec:	cmp	x0, #0x1
  420cf0:	ccmp	x22, x0, #0x0, ne  // ne = any
  420cf4:	b.cs	420c14 <notice_finished_file@@Base+0x15f4>  // b.hs, b.nlast
  420cf8:	mov	w0, #0x1                   	// #1
  420cfc:	str	w0, [x23]
  420d00:	b	420c14 <notice_finished_file@@Base+0x15f4>
  420d04:	ldrb	w0, [x19, #136]
  420d08:	and	w0, w0, #0xc
  420d0c:	cmp	w0, #0x8
  420d10:	b.eq	420d2c <notice_finished_file@@Base+0x170c>  // b.none
  420d14:	cmp	w0, #0x4
  420d18:	b.ne	420d20 <notice_finished_file@@Base+0x1700>  // b.any
  420d1c:	str	wzr, [x19, #128]
  420d20:	mov	x0, x19
  420d24:	mov	w1, #0x0                   	// #0
  420d28:	bl	40d9f0 <set_command_state@@Base>
  420d2c:	ldr	x28, [x19, #24]
  420d30:	cbz	x28, 420f28 <notice_finished_file@@Base+0x1908>
  420d34:	stp	x25, x26, [sp, #64]
  420d38:	adrp	x26, 42b000 <_IO_stdin_used@@Base+0x4c20>
  420d3c:	add	x26, x26, #0xe98
  420d40:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  420d44:	mov	w21, #0x0                   	// #0
  420d48:	add	x0, x0, #0x7c4
  420d4c:	str	wzr, [sp, #116]
  420d50:	str	x0, [sp, #120]
  420d54:	nop
  420d58:	ldr	x25, [x28, #16]
  420d5c:	ldr	x0, [x25, #104]
  420d60:	cmp	x0, #0x0
  420d64:	csel	x0, x0, x25, ne  // ne = any
  420d68:	ldrb	w0, [x0, #137]
  420d6c:	tbz	w0, #1, 420de8 <notice_finished_file@@Base+0x17c8>
  420d70:	ldr	x0, [x19]
  420d74:	bl	406680 <strlen@plt>
  420d78:	mov	x4, x0
  420d7c:	ldr	x0, [x25]
  420d80:	str	x4, [sp, #104]
  420d84:	bl	406680 <strlen@plt>
  420d88:	mov	x25, x0
  420d8c:	mov	x1, x26
  420d90:	mov	w2, #0x5                   	// #5
  420d94:	mov	x0, #0x0                   	// #0
  420d98:	bl	406cd0 <dcgettext@plt>
  420d9c:	ldr	x6, [x28, #16]
  420da0:	mov	x2, x0
  420da4:	ldr	x4, [sp, #104]
  420da8:	mov	x0, #0x0                   	// #0
  420dac:	ldr	x3, [x19]
  420db0:	add	x1, x4, x25
  420db4:	ldr	x4, [x6]
  420db8:	bl	419dc8 <error@@Base>
  420dbc:	ldr	x0, [x28]
  420dc0:	cbz	x20, 420e7c <notice_finished_file@@Base+0x185c>
  420dc4:	str	x0, [x20]
  420dc8:	mov	x0, x28
  420dcc:	bl	406b90 <free@plt>
  420dd0:	ldr	x28, [x20]
  420dd4:	cbnz	x28, 420d58 <notice_finished_file@@Base+0x1738>
  420dd8:	ldr	w0, [sp, #116]
  420ddc:	cbnz	w0, 420e94 <notice_finished_file@@Base+0x1874>
  420de0:	ldp	x25, x26, [sp, #64]
  420de4:	b	420c14 <notice_finished_file@@Base+0x15f4>
  420de8:	ldr	w4, [x23]
  420dec:	mov	w1, w24
  420df0:	str	x19, [x25, #96]
  420df4:	mov	x0, x25
  420df8:	add	x3, sp, #0x8c
  420dfc:	mov	x2, x22
  420e00:	str	w4, [sp, #140]
  420e04:	bl	420b88 <notice_finished_file@@Base+0x1568>
  420e08:	cmp	w21, w0
  420e0c:	ldrb	w1, [x28, #33]
  420e10:	csel	w21, w21, w0, cs  // cs = hs, nlast
  420e14:	tbnz	w1, #1, 420e20 <notice_finished_file@@Base+0x1800>
  420e18:	ldr	w0, [sp, #140]
  420e1c:	str	w0, [x23]
  420e20:	ldr	x0, [x28, #16]
  420e24:	ldr	x4, [x0, #72]
  420e28:	cbz	x4, 420e40 <notice_finished_file@@Base+0x1820>
  420e2c:	nop
  420e30:	mov	x0, x4
  420e34:	ldr	x4, [x4, #72]
  420e38:	cbnz	x4, 420e30 <notice_finished_file@@Base+0x1810>
  420e3c:	str	x0, [x28, #16]
  420e40:	cbz	w21, 420e50 <notice_finished_file@@Base+0x1830>
  420e44:	ldr	x1, [sp, #120]
  420e48:	ldr	w1, [x1]
  420e4c:	cbz	w1, 420dd8 <notice_finished_file@@Base+0x17b8>
  420e50:	ldrb	w0, [x0, #136]
  420e54:	mov	x20, x28
  420e58:	ldr	x28, [x28]
  420e5c:	and	w0, w0, #0xc
  420e60:	sub	w0, w0, #0x4
  420e64:	tst	w0, #0xf8
  420e68:	ldr	w0, [sp, #116]
  420e6c:	csinc	w0, w0, wzr, ne  // ne = any
  420e70:	str	w0, [sp, #116]
  420e74:	cbnz	x28, 420d58 <notice_finished_file@@Base+0x1738>
  420e78:	b	420dd8 <notice_finished_file@@Base+0x17b8>
  420e7c:	str	x0, [x19, #24]
  420e80:	mov	x0, x28
  420e84:	bl	406b90 <free@plt>
  420e88:	ldr	x28, [x19, #24]
  420e8c:	cbnz	x28, 420d58 <notice_finished_file@@Base+0x1738>
  420e90:	b	420dd8 <notice_finished_file@@Base+0x17b8>
  420e94:	mov	x0, x19
  420e98:	mov	w1, #0x1                   	// #1
  420e9c:	bl	40d9f0 <set_command_state@@Base>
  420ea0:	ldp	x25, x26, [sp, #64]
  420ea4:	b	420c14 <notice_finished_file@@Base+0x15f4>
  420ea8:	mov	x0, x19
  420eac:	mov	w1, #0x1                   	// #1
  420eb0:	bl	41eef8 <f_mtime@@Base>
  420eb4:	mov	x4, x19
  420eb8:	mov	x19, x4
  420ebc:	ldr	x4, [x4, #72]
  420ec0:	cbnz	x4, 420eb8 <notice_finished_file@@Base+0x1898>
  420ec4:	b	420bfc <notice_finished_file@@Base+0x15dc>
  420ec8:	mov	w1, #0x1                   	// #1
  420ecc:	mov	x0, x19
  420ed0:	bl	41eef8 <f_mtime@@Base>
  420ed4:	mov	x1, x19
  420ed8:	mov	x19, x1
  420edc:	ldr	x1, [x1, #72]
  420ee0:	cbnz	x1, 420ed8 <notice_finished_file@@Base+0x18b8>
  420ee4:	b	420cec <notice_finished_file@@Base+0x16cc>
  420ee8:	mov	w0, w24
  420eec:	bl	418a08 <print_spaces@@Base>
  420ef0:	mov	w2, #0x5                   	// #5
  420ef4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  420ef8:	mov	x0, #0x0                   	// #0
  420efc:	add	x1, x1, #0x1f8
  420f00:	bl	406cd0 <dcgettext@plt>
  420f04:	ldr	x1, [x27]
  420f08:	bl	406d60 <printf@plt>
  420f0c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420f10:	ldr	x0, [x0, #384]
  420f14:	bl	406c20 <fflush@plt>
  420f18:	ldr	x0, [x19, #2024]
  420f1c:	ldr	x0, [x0, #32]
  420f20:	str	x0, [x27, #32]
  420f24:	b	420be4 <notice_finished_file@@Base+0x15c4>
  420f28:	mov	w21, #0x0                   	// #0
  420f2c:	b	420c14 <notice_finished_file@@Base+0x15f4>
  420f30:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420f34:	ldr	w0, [x0, #1088]
  420f38:	tbz	w0, #3, 420c7c <notice_finished_file@@Base+0x165c>
  420f3c:	mov	w0, w24
  420f40:	bl	418a08 <print_spaces@@Base>
  420f44:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  420f48:	add	x1, x1, #0xe50
  420f4c:	mov	w2, #0x5                   	// #5
  420f50:	mov	x0, #0x0                   	// #0
  420f54:	bl	406cd0 <dcgettext@plt>
  420f58:	ldr	x1, [x27]
  420f5c:	bl	406d60 <printf@plt>
  420f60:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  420f64:	ldr	x0, [x0, #384]
  420f68:	bl	406c20 <fflush@plt>
  420f6c:	b	420c7c <notice_finished_file@@Base+0x165c>
  420f70:	mov	w0, w24
  420f74:	bl	418a08 <print_spaces@@Base>
  420f78:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  420f7c:	mov	w2, #0x5                   	// #5
  420f80:	add	x1, x1, #0xe28
  420f84:	mov	x0, #0x0                   	// #0
  420f88:	b	420f54 <notice_finished_file@@Base+0x1934>
  420f8c:	nop

0000000000420f90 <update_goal_chain@@Base>:
  420f90:	stp	x29, x30, [sp, #-144]!
  420f94:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  420f98:	mov	x29, sp
  420f9c:	ldr	w1, [x1, #2188]
  420fa0:	str	w1, [sp, #100]
  420fa4:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  420fa8:	stp	x19, x20, [sp, #16]
  420fac:	mov	x19, x0
  420fb0:	ldr	w1, [x1, #3404]
  420fb4:	str	w1, [sp, #104]
  420fb8:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  420fbc:	stp	x21, x22, [sp, #32]
  420fc0:	ldr	w1, [x1, #1984]
  420fc4:	stp	x27, x28, [sp, #80]
  420fc8:	str	w1, [sp, #108]
  420fcc:	bl	418ef0 <copy_dep_chain@@Base>
  420fd0:	str	x0, [sp, #128]
  420fd4:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  420fd8:	ldr	w1, [x1, #3384]
  420fdc:	cbz	w1, 4213ac <update_goal_chain@@Base+0x41c>
  420fe0:	adrp	x5, 445000 <output_context@@Base+0x1250>
  420fe4:	add	x28, x5, #0xe00
  420fe8:	mov	w21, #0x1                   	// #1
  420fec:	ldr	w0, [x28, #60]
  420ff0:	str	x19, [x28, #8]
  420ff4:	add	w0, w0, #0x1
  420ff8:	str	w0, [x28, #60]
  420ffc:	ldr	x0, [sp, #128]
  421000:	cbz	x0, 421154 <update_goal_chain@@Base+0x1c4>
  421004:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421008:	add	x0, x0, #0x7c4
  42100c:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  421010:	add	x20, x20, #0xd38
  421014:	stp	x23, x24, [sp, #48]
  421018:	mov	w21, #0x1                   	// #1
  42101c:	str	x0, [sp, #120]
  421020:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421024:	add	x24, x0, #0x7c0
  421028:	stp	x25, x26, [sp, #64]
  42102c:	str	xzr, [sp, #112]
  421030:	ldr	x25, [sp, #128]
  421034:	bl	416228 <start_waiting_jobs@@Base>
  421038:	mov	w1, #0x0                   	// #0
  42103c:	mov	w0, #0x1                   	// #1
  421040:	bl	415358 <reap_children@@Base>
  421044:	nop
  421048:	ldr	x1, [x25, #16]
  42104c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  421050:	add	x22, x0, #0xd4c
  421054:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421058:	add	x23, x0, #0x88c
  42105c:	mov	w19, #0x0                   	// #0
  421060:	ldr	x0, [x1, #104]
  421064:	str	x25, [x28]
  421068:	cmp	x0, #0x0
  42106c:	csel	x0, x0, x1, ne  // ne = any
  421070:	ldrb	w1, [x25, #32]
  421074:	ldrb	w2, [x0, #138]
  421078:	ubfx	x1, x1, #2, #1
  42107c:	bfxil	w2, w1, #0, #1
  421080:	strb	w2, [x0, #138]
  421084:	nop
  421088:	mov	x27, x0
  42108c:	ldr	x0, [x0, #72]
  421090:	cbnz	x0, 421088 <update_goal_chain@@Base+0xf8>
  421094:	ldr	w0, [x20]
  421098:	cbz	w0, 4210bc <update_goal_chain@@Base+0x12c>
  42109c:	ldrb	w1, [x27, #137]
  4210a0:	tbz	w1, #4, 421294 <update_goal_chain@@Base+0x304>
  4210a4:	ldr	w1, [sp, #100]
  4210a8:	str	w1, [x23]
  4210ac:	ldr	w1, [sp, #104]
  4210b0:	str	w1, [x22]
  4210b4:	ldr	w1, [sp, #108]
  4210b8:	str	w1, [x24]
  4210bc:	cmp	w0, #0x0
  4210c0:	ldr	w26, [x28, #56]
  4210c4:	mov	x0, x27
  4210c8:	cset	w1, ne  // ne = any
  4210cc:	bl	41fac8 <notice_finished_file@@Base+0x4a8>
  4210d0:	mov	x3, x27
  4210d4:	ldr	x27, [x27, #72]
  4210d8:	cbnz	x27, 4210d0 <update_goal_chain@@Base+0x140>
  4210dc:	ldr	w1, [x28, #56]
  4210e0:	cmp	w1, w26
  4210e4:	b.ls	4210f4 <update_goal_chain@@Base+0x164>  // b.plast
  4210e8:	ldrb	w1, [x25, #33]
  4210ec:	orr	w1, w1, #0x1
  4210f0:	strb	w1, [x25, #33]
  4210f4:	cbnz	w0, 421190 <update_goal_chain@@Base+0x200>
  4210f8:	ldrb	w0, [x3, #137]
  4210fc:	tbnz	w0, #2, 421190 <update_goal_chain@@Base+0x200>
  421100:	ldrb	w0, [x3, #138]
  421104:	mov	w19, #0x1                   	// #1
  421108:	and	w0, w0, #0xfffffffe
  42110c:	strb	w0, [x3, #138]
  421110:	ldr	x0, [x3, #56]
  421114:	cbnz	x0, 421070 <update_goal_chain@@Base+0xe0>
  421118:	cmp	w19, #0x1
  42111c:	b.ne	421358 <update_goal_chain@@Base+0x3c8>  // b.any
  421120:	str	x25, [sp, #112]
  421124:	ldr	x25, [x25]
  421128:	cbnz	x25, 421048 <update_goal_chain@@Base+0xb8>
  42112c:	ldr	w0, [x28, #60]
  421130:	add	w0, w0, #0x1
  421134:	str	w0, [x28, #60]
  421138:	ldr	x0, [sp, #128]
  42113c:	cbnz	x0, 42102c <update_goal_chain@@Base+0x9c>
  421140:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  421144:	ldp	x23, x24, [sp, #48]
  421148:	ldr	w0, [x0, #3384]
  42114c:	ldp	x25, x26, [sp, #64]
  421150:	cbz	w0, 421178 <update_goal_chain@@Base+0x1e8>
  421154:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421158:	ldr	w1, [sp, #100]
  42115c:	str	w1, [x0, #2188]
  421160:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  421164:	ldr	w1, [sp, #104]
  421168:	str	w1, [x0, #3404]
  42116c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421170:	ldr	w1, [sp, #108]
  421174:	str	w1, [x0, #1984]
  421178:	mov	w0, w21
  42117c:	ldp	x19, x20, [sp, #16]
  421180:	ldp	x21, x22, [sp, #32]
  421184:	ldp	x27, x28, [sp, #80]
  421188:	ldp	x29, x30, [sp], #144
  42118c:	ret
  421190:	cmp	w21, #0x1
  421194:	b.ls	4211b8 <update_goal_chain@@Base+0x228>  // b.plast
  421198:	ldrb	w0, [x3, #137]
  42119c:	ldrb	w1, [x3, #138]
  4211a0:	eor	x0, x0, #0x4
  4211a4:	and	w1, w1, #0xfffffffe
  4211a8:	strb	w1, [x3, #138]
  4211ac:	ubfx	x0, x0, #2, #1
  4211b0:	orr	w19, w19, w0
  4211b4:	b	421110 <update_goal_chain@@Base+0x180>
  4211b8:	ldrb	w0, [x3, #136]
  4211bc:	tst	x0, #0x3
  4211c0:	b.eq	4212a4 <update_goal_chain@@Base+0x314>  // b.none
  4211c4:	ldr	w1, [x22]
  4211c8:	and	w21, w0, #0x3
  4211cc:	cbz	w1, 421198 <update_goal_chain@@Base+0x208>
  4211d0:	ldr	x0, [sp, #120]
  4211d4:	ldr	w1, [x20]
  4211d8:	ldr	w0, [x0]
  4211dc:	orr	w0, w0, w1
  4211e0:	cbnz	w0, 421198 <update_goal_chain@@Base+0x208>
  4211e4:	ldrb	w0, [x3, #138]
  4211e8:	mov	w19, #0x1                   	// #1
  4211ec:	and	w0, w0, #0xfffffffe
  4211f0:	strb	w0, [x3, #138]
  4211f4:	ldr	x23, [x25, #16]
  4211f8:	ldrb	w0, [x23, #136]
  4211fc:	tst	x0, #0x3
  421200:	b.ne	421268 <update_goal_chain@@Base+0x2d8>  // b.any
  421204:	ldrb	w0, [x25, #33]
  421208:	tbnz	w0, #0, 421268 <update_goal_chain@@Base+0x2d8>
  42120c:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  421210:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  421214:	ldr	w0, [x0, #3300]
  421218:	ldr	w1, [x1, #3404]
  42121c:	orr	w0, w0, w1
  421220:	cbnz	w0, 421268 <update_goal_chain@@Base+0x2d8>
  421224:	ldr	x0, [x23]
  421228:	bl	406680 <strlen@plt>
  42122c:	mov	x22, x0
  421230:	ldrb	w1, [x23, #137]
  421234:	tbnz	w1, #5, 421390 <update_goal_chain@@Base+0x400>
  421238:	ldr	x0, [x23, #32]
  42123c:	cbz	x0, 421390 <update_goal_chain@@Base+0x400>
  421240:	mov	w2, #0x5                   	// #5
  421244:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  421248:	mov	x0, #0x0                   	// #0
  42124c:	add	x1, x1, #0x240
  421250:	bl	406cd0 <dcgettext@plt>
  421254:	mov	x2, x0
  421258:	ldr	x3, [x23]
  42125c:	mov	x1, x22
  421260:	mov	w0, #0x1                   	// #1
  421264:	bl	419c88 <message@@Base>
  421268:	ldr	x0, [sp, #112]
  42126c:	cbz	x0, 421308 <update_goal_chain@@Base+0x378>
  421270:	ldr	x22, [sp, #112]
  421274:	ldr	x0, [x25]
  421278:	str	x0, [x22]
  42127c:	mov	x0, x25
  421280:	bl	406b90 <free@plt>
  421284:	ldr	x25, [x22]
  421288:	cbz	w19, 421128 <update_goal_chain@@Base+0x198>
  42128c:	cbnz	x25, 421138 <update_goal_chain@@Base+0x1a8>
  421290:	b	42112c <update_goal_chain@@Base+0x19c>
  421294:	str	wzr, [x22]
  421298:	str	wzr, [x23]
  42129c:	str	wzr, [x24]
  4212a0:	b	4210bc <update_goal_chain@@Base+0x12c>
  4212a4:	ldr	w0, [x20]
  4212a8:	ldr	x1, [x3, #112]
  4212ac:	cbz	w0, 421328 <update_goal_chain@@Base+0x398>
  4212b0:	cbz	x1, 421330 <update_goal_chain@@Base+0x3a0>
  4212b4:	ldrb	w0, [x3, #137]
  4212b8:	tbz	w0, #2, 421100 <update_goal_chain@@Base+0x170>
  4212bc:	ldrb	w0, [x25, #33]
  4212c0:	tbz	w0, #0, 42136c <update_goal_chain@@Base+0x3dc>
  4212c4:	ldr	x0, [x3, #120]
  4212c8:	cmp	x0, x1
  4212cc:	b.eq	42136c <update_goal_chain@@Base+0x3dc>  // b.none
  4212d0:	ldr	w0, [x20]
  4212d4:	cbz	w0, 42137c <update_goal_chain@@Base+0x3ec>
  4212d8:	ldr	w2, [x22]
  4212dc:	ldr	w0, [x24]
  4212e0:	ldrb	w1, [x3, #138]
  4212e4:	orr	w0, w0, w2
  4212e8:	cmp	w0, #0x0
  4212ec:	and	w0, w1, #0xfffffffe
  4212f0:	strb	w0, [x3, #138]
  4212f4:	csel	w21, w21, wzr, ne  // ne = any
  4212f8:	tbz	w1, #0, 421110 <update_goal_chain@@Base+0x180>
  4212fc:	ldr	x0, [sp, #112]
  421300:	mov	w19, #0x1                   	// #1
  421304:	cbnz	x0, 421270 <update_goal_chain@@Base+0x2e0>
  421308:	ldr	x0, [x25]
  42130c:	mov	x22, x0
  421310:	mov	x0, x25
  421314:	mov	x25, x22
  421318:	str	x22, [sp, #128]
  42131c:	bl	406b90 <free@plt>
  421320:	cbz	w19, 421128 <update_goal_chain@@Base+0x198>
  421324:	b	42128c <update_goal_chain@@Base+0x2fc>
  421328:	cbnz	x1, 4212b4 <update_goal_chain@@Base+0x324>
  42132c:	mov	w1, #0x1                   	// #1
  421330:	mov	x0, x3
  421334:	str	x3, [sp, #136]
  421338:	bl	41eef8 <f_mtime@@Base>
  42133c:	mov	x1, x0
  421340:	ldr	x3, [sp, #136]
  421344:	mov	x0, x3
  421348:	mov	x3, x0
  42134c:	ldr	x0, [x0, #72]
  421350:	cbnz	x0, 421348 <update_goal_chain@@Base+0x3b8>
  421354:	b	4212b4 <update_goal_chain@@Base+0x324>
  421358:	ldr	w0, [x20]
  42135c:	ldr	x23, [x25, #16]
  421360:	cbnz	w0, 421268 <update_goal_chain@@Base+0x2d8>
  421364:	mov	w19, #0x0                   	// #0
  421368:	b	4211f8 <update_goal_chain@@Base+0x268>
  42136c:	ldrb	w0, [x3, #138]
  421370:	and	w0, w0, #0xfffffffe
  421374:	strb	w0, [x3, #138]
  421378:	b	421110 <update_goal_chain@@Base+0x180>
  42137c:	ldrb	w0, [x3, #138]
  421380:	mov	w21, #0x0                   	// #0
  421384:	and	w0, w0, #0xfffffffe
  421388:	strb	w0, [x3, #138]
  42138c:	b	421110 <update_goal_chain@@Base+0x180>
  421390:	mov	w2, #0x5                   	// #5
  421394:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  421398:	mov	x0, #0x0                   	// #0
  42139c:	add	x1, x1, #0x220
  4213a0:	bl	406cd0 <dcgettext@plt>
  4213a4:	mov	x2, x0
  4213a8:	b	421258 <update_goal_chain@@Base+0x2c8>
  4213ac:	adrp	x5, 445000 <output_context@@Base+0x1250>
  4213b0:	add	x28, x5, #0xe00
  4213b4:	ldr	w0, [x28, #60]
  4213b8:	str	xzr, [x28, #8]
  4213bc:	add	w0, w0, #0x1
  4213c0:	str	w0, [x28, #60]
  4213c4:	ldr	x0, [sp, #128]
  4213c8:	cbnz	x0, 421004 <update_goal_chain@@Base+0x74>
  4213cc:	mov	w21, #0x1                   	// #1
  4213d0:	b	421178 <update_goal_chain@@Base+0x1e8>
  4213d4:	nop
  4213d8:	stp	x29, x30, [sp, #-48]!
  4213dc:	mov	x29, sp
  4213e0:	stp	x19, x20, [sp, #16]
  4213e4:	mov	x19, x0
  4213e8:	mov	x20, x1
  4213ec:	ldr	x0, [x0, #32]
  4213f0:	str	x21, [sp, #32]
  4213f4:	ldr	x21, [x19]
  4213f8:	bl	418fa0 <free_ns_chain@@Base>
  4213fc:	ldr	x0, [x19, #8]
  421400:	bl	406b90 <free@plt>
  421404:	ldr	x0, [x19, #24]
  421408:	bl	406b90 <free@plt>
  42140c:	ldr	x0, [x19, #16]
  421410:	bl	406b90 <free@plt>
  421414:	mov	x0, x19
  421418:	bl	406b90 <free@plt>
  42141c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421420:	ldr	x1, [x0, #2208]
  421424:	cmp	x1, x19
  421428:	b.eq	421454 <update_goal_chain@@Base+0x4c4>  // b.none
  42142c:	cbz	x20, 421434 <update_goal_chain@@Base+0x4a4>
  421430:	str	x21, [x20]
  421434:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421438:	ldr	x1, [x0, #2232]
  42143c:	cmp	x1, x19
  421440:	b.eq	42146c <update_goal_chain@@Base+0x4dc>  // b.none
  421444:	ldp	x19, x20, [sp, #16]
  421448:	ldr	x21, [sp, #32]
  42144c:	ldp	x29, x30, [sp], #48
  421450:	ret
  421454:	cbnz	x20, 421480 <update_goal_chain@@Base+0x4f0>
  421458:	str	x21, [x0, #2208]
  42145c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421460:	ldr	x1, [x0, #2232]
  421464:	cmp	x1, x19
  421468:	b.ne	421444 <update_goal_chain@@Base+0x4b4>  // b.any
  42146c:	str	x20, [x0, #2232]
  421470:	ldp	x19, x20, [sp, #16]
  421474:	ldr	x21, [sp, #32]
  421478:	ldp	x29, x30, [sp], #48
  42147c:	ret
  421480:	bl	406ab0 <abort@plt>
  421484:	nop
  421488:	stp	x29, x30, [sp, #-112]!
  42148c:	mov	x29, sp
  421490:	stp	x21, x22, [sp, #32]
  421494:	mov	x22, x0
  421498:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  42149c:	str	w1, [sp, #108]
  4214a0:	ldr	x21, [x0, #2208]
  4214a4:	str	xzr, [x22]
  4214a8:	strh	wzr, [x22, #50]
  4214ac:	cbz	x21, 4216ac <update_goal_chain@@Base+0x71c>
  4214b0:	ldrh	w0, [x22, #48]
  4214b4:	stp	x23, x24, [sp, #48]
  4214b8:	mov	x24, #0x0                   	// #0
  4214bc:	sub	w23, w0, #0x1
  4214c0:	add	x23, x23, #0x1
  4214c4:	stp	x19, x20, [sp, #16]
  4214c8:	lsl	x23, x23, #3
  4214cc:	stp	x25, x26, [sp, #64]
  4214d0:	stp	x27, x28, [sp, #80]
  4214d4:	str	w0, [sp, #104]
  4214d8:	ldr	w0, [sp, #104]
  4214dc:	cbz	w0, 421554 <update_goal_chain@@Base+0x5c4>
  4214e0:	ldrh	w27, [x21, #48]
  4214e4:	mov	x20, #0x0                   	// #0
  4214e8:	cbz	w27, 421568 <update_goal_chain@@Base+0x5d8>
  4214ec:	ldr	x0, [x22, #8]
  4214f0:	mov	x19, #0x0                   	// #0
  4214f4:	ldr	x25, [x21, #8]
  4214f8:	ldr	x28, [x0, x20]
  4214fc:	add	x26, x28, #0x1
  421500:	ldr	x0, [x25, x19, lsl #3]
  421504:	cmp	x28, x0
  421508:	b.eq	421530 <update_goal_chain@@Base+0x5a0>  // b.none
  42150c:	ldrb	w2, [x0]
  421510:	add	x1, x0, #0x1
  421514:	ldrb	w3, [x28]
  421518:	mov	x0, x26
  42151c:	cmp	w2, w3
  421520:	b.ne	421548 <update_goal_chain@@Base+0x5b8>  // b.any
  421524:	cbz	w2, 421530 <update_goal_chain@@Base+0x5a0>
  421528:	bl	406b40 <strcmp@plt>
  42152c:	cbnz	w0, 421548 <update_goal_chain@@Base+0x5b8>
  421530:	add	w0, w19, #0x1
  421534:	add	x19, x19, #0x1
  421538:	cmp	w27, w19
  42153c:	b.hi	421500 <update_goal_chain@@Base+0x570>  // b.pmore
  421540:	cmp	w0, w27
  421544:	b.eq	421568 <update_goal_chain@@Base+0x5d8>  // b.none
  421548:	add	x20, x20, #0x8
  42154c:	cmp	x20, x23
  421550:	b.ne	4214e8 <update_goal_chain@@Base+0x558>  // b.any
  421554:	ldr	x0, [x21]
  421558:	mov	x24, x21
  42155c:	cbz	x0, 421640 <update_goal_chain@@Base+0x6b0>
  421560:	mov	x21, x0
  421564:	b	4214d8 <update_goal_chain@@Base+0x548>
  421568:	ldr	x19, [x22, #32]
  42156c:	ldr	x28, [x21, #32]
  421570:	cmp	x19, #0x0
  421574:	ccmp	x28, #0x0, #0x4, ne  // ne = any
  421578:	b.ne	4215d4 <update_goal_chain@@Base+0x644>  // b.any
  42157c:	b	421618 <update_goal_chain@@Base+0x688>
  421580:	ldr	x1, [x28, #8]
  421584:	mov	x2, x1
  421588:	cbz	x1, 4215f4 <update_goal_chain@@Base+0x664>
  42158c:	cmp	x3, x2
  421590:	b.eq	4215c0 <update_goal_chain@@Base+0x630>  // b.none
  421594:	ldrb	w3, [x3]
  421598:	ldrb	w2, [x2]
  42159c:	cmp	w2, w3
  4215a0:	b.ne	421548 <update_goal_chain@@Base+0x5b8>  // b.any
  4215a4:	cbz	w2, 4215c0 <update_goal_chain@@Base+0x630>
  4215a8:	cbz	x0, 42160c <update_goal_chain@@Base+0x67c>
  4215ac:	add	x0, x0, #0x1
  4215b0:	cbz	x1, 421600 <update_goal_chain@@Base+0x670>
  4215b4:	add	x1, x1, #0x1
  4215b8:	bl	406b40 <strcmp@plt>
  4215bc:	cbnz	w0, 421548 <update_goal_chain@@Base+0x5b8>
  4215c0:	ldr	x19, [x19]
  4215c4:	ldr	x28, [x28]
  4215c8:	cmp	x19, #0x0
  4215cc:	ccmp	x28, #0x0, #0x4, ne  // ne = any
  4215d0:	b.eq	421618 <update_goal_chain@@Base+0x688>  // b.none
  4215d4:	ldr	x0, [x19, #8]
  4215d8:	mov	x3, x0
  4215dc:	cbnz	x0, 421580 <update_goal_chain@@Base+0x5f0>
  4215e0:	ldr	x1, [x19, #16]
  4215e4:	ldr	x3, [x1]
  4215e8:	ldr	x1, [x28, #8]
  4215ec:	mov	x2, x1
  4215f0:	cbnz	x1, 42158c <update_goal_chain@@Base+0x5fc>
  4215f4:	ldr	x2, [x28, #16]
  4215f8:	ldr	x2, [x2]
  4215fc:	b	42158c <update_goal_chain@@Base+0x5fc>
  421600:	ldr	x1, [x28, #16]
  421604:	ldr	x1, [x1]
  421608:	b	4215b4 <update_goal_chain@@Base+0x624>
  42160c:	ldr	x0, [x19, #16]
  421610:	ldr	x0, [x0]
  421614:	b	4215ac <update_goal_chain@@Base+0x61c>
  421618:	orr	x19, x19, x28
  42161c:	cbnz	x19, 421548 <update_goal_chain@@Base+0x5b8>
  421620:	ldr	w0, [sp, #108]
  421624:	cbz	w0, 421670 <update_goal_chain@@Base+0x6e0>
  421628:	mov	x0, x21
  42162c:	mov	x1, x24
  421630:	bl	4213d8 <update_goal_chain@@Base+0x448>
  421634:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421638:	ldr	x0, [x0, #2208]
  42163c:	cbz	x0, 42169c <update_goal_chain@@Base+0x70c>
  421640:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421644:	ldp	x19, x20, [sp, #16]
  421648:	ldr	x1, [x0, #2232]
  42164c:	ldp	x23, x24, [sp, #48]
  421650:	ldp	x25, x26, [sp, #64]
  421654:	ldp	x27, x28, [sp, #80]
  421658:	str	x22, [x1]
  42165c:	str	x22, [x0, #2232]
  421660:	mov	w0, #0x1                   	// #1
  421664:	ldp	x21, x22, [sp, #32]
  421668:	ldp	x29, x30, [sp], #112
  42166c:	ret
  421670:	mov	x0, x22
  421674:	mov	x1, #0x0                   	// #0
  421678:	bl	4213d8 <update_goal_chain@@Base+0x448>
  42167c:	mov	w0, #0x0                   	// #0
  421680:	ldp	x19, x20, [sp, #16]
  421684:	ldp	x21, x22, [sp, #32]
  421688:	ldp	x23, x24, [sp, #48]
  42168c:	ldp	x25, x26, [sp, #64]
  421690:	ldp	x27, x28, [sp, #80]
  421694:	ldp	x29, x30, [sp], #112
  421698:	ret
  42169c:	ldp	x19, x20, [sp, #16]
  4216a0:	ldp	x23, x24, [sp, #48]
  4216a4:	ldp	x25, x26, [sp, #64]
  4216a8:	ldp	x27, x28, [sp, #80]
  4216ac:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  4216b0:	str	x22, [x0, #2208]
  4216b4:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  4216b8:	b	42165c <update_goal_chain@@Base+0x6cc>
  4216bc:	nop

00000000004216c0 <snap_implicit_rules@@Base>:
  4216c0:	stp	x29, x30, [sp, #-144]!
  4216c4:	mov	x1, #0xe                   	// #14
  4216c8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0xc20>
  4216cc:	mov	x29, sp
  4216d0:	stp	x21, x22, [sp, #32]
  4216d4:	adrp	x21, 446000 <commands_started@@Base+0x1c8>
  4216d8:	add	x0, x0, #0xc68
  4216dc:	stp	x19, x20, [sp, #16]
  4216e0:	bl	4231f0 <lookup_variable@@Base>
  4216e4:	bl	40d448 <expand_extra_prereqs@@Base>
  4216e8:	str	xzr, [x21, #2216]
  4216ec:	str	x0, [sp, #128]
  4216f0:	cbz	x0, 421740 <snap_implicit_rules@@Base+0x80>
  4216f4:	mov	x19, x0
  4216f8:	mov	x20, #0x0                   	// #0
  4216fc:	str	wzr, [sp, #116]
  421700:	b	421720 <snap_implicit_rules@@Base+0x60>
  421704:	bl	406680 <strlen@plt>
  421708:	cmp	x0, x20
  42170c:	b.ls	421714 <snap_implicit_rules@@Base+0x54>  // b.plast
  421710:	str	x0, [x21, #2216]
  421714:	ldr	x19, [x19]
  421718:	cbz	x19, 421748 <snap_implicit_rules@@Base+0x88>
  42171c:	ldr	x20, [x21, #2216]
  421720:	ldr	w1, [sp, #116]
  421724:	ldr	x0, [x19, #8]
  421728:	add	w1, w1, #0x1
  42172c:	str	w1, [sp, #116]
  421730:	cbnz	x0, 421704 <snap_implicit_rules@@Base+0x44>
  421734:	ldr	x0, [x19, #16]
  421738:	ldr	x0, [x0]
  42173c:	b	421704 <snap_implicit_rules@@Base+0x44>
  421740:	str	wzr, [sp, #116]
  421744:	nop
  421748:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  42174c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421750:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  421754:	adrp	x3, 446000 <commands_started@@Base+0x1c8>
  421758:	ldr	x2, [x2, #2208]
  42175c:	str	wzr, [x0, #2228]
  421760:	str	wzr, [x3, #2224]
  421764:	str	wzr, [x1, #2240]
  421768:	str	x2, [sp, #104]
  42176c:	cbz	x2, 421964 <snap_implicit_rules@@Base+0x2a4>
  421770:	add	x0, x0, #0x8b4
  421774:	stp	x25, x26, [sp, #64]
  421778:	adrp	x25, 42b000 <_IO_stdin_used@@Base+0x4c20>
  42177c:	add	x25, x25, #0x350
  421780:	add	x1, x1, #0x8c0
  421784:	mov	w2, #0x0                   	// #0
  421788:	mov	x20, #0x0                   	// #0
  42178c:	stp	x23, x24, [sp, #48]
  421790:	mov	x24, #0x0                   	// #0
  421794:	stp	x27, x28, [sp, #80]
  421798:	str	x1, [sp, #120]
  42179c:	str	x0, [sp, #136]
  4217a0:	mov	w0, #0x0                   	// #0
  4217a4:	nop
  4217a8:	ldr	x1, [sp, #104]
  4217ac:	add	w0, w0, #0x1
  4217b0:	ldr	x3, [sp, #120]
  4217b4:	ldrh	w1, [x1, #48]
  4217b8:	str	w0, [x3]
  4217bc:	cmp	w1, w2
  4217c0:	b.ls	4217cc <snap_implicit_rules@@Base+0x10c>  // b.plast
  4217c4:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  4217c8:	str	w1, [x0, #2224]
  4217cc:	ldr	x0, [sp, #104]
  4217d0:	ldr	x28, [x0, #32]
  4217d4:	cbz	x28, 42191c <snap_implicit_rules@@Base+0x25c>
  4217d8:	ldr	w21, [sp, #116]
  4217dc:	adrp	x23, 446000 <commands_started@@Base+0x1c8>
  4217e0:	add	x23, x23, #0x8a8
  4217e4:	mov	x22, #0x0                   	// #0
  4217e8:	ldr	x27, [x28, #8]
  4217ec:	cbz	x27, 4218f8 <snap_implicit_rules@@Base+0x238>
  4217f0:	mov	x0, x27
  4217f4:	bl	406680 <strlen@plt>
  4217f8:	mov	w1, #0x2f                  	// #47
  4217fc:	mov	x19, x0
  421800:	mov	x0, x27
  421804:	bl	406a70 <strrchr@plt>
  421808:	mov	x1, #0x0                   	// #0
  42180c:	mov	x26, x0
  421810:	cbz	x0, 421820 <snap_implicit_rules@@Base+0x160>
  421814:	mov	w1, #0x25                  	// #37
  421818:	bl	406bb0 <strchr@plt>
  42181c:	mov	x1, x0
  421820:	ldr	x0, [x23]
  421824:	add	w21, w21, #0x1
  421828:	cmp	x0, x19
  42182c:	b.cs	421834 <snap_implicit_rules@@Base+0x174>  // b.hs, b.nlast
  421830:	str	x19, [x23]
  421834:	ldr	x0, [x28]
  421838:	cmp	x0, #0x0
  42183c:	csel	x22, x22, x28, ne  // ne = any
  421840:	cbz	x1, 4218e0 <snap_implicit_rules@@Base+0x220>
  421844:	cmp	x27, x26
  421848:	csinc	x26, x26, x27, ne  // ne = any
  42184c:	sub	x19, x26, x27
  421850:	cmp	x19, x24
  421854:	b.hi	421904 <snap_implicit_rules@@Base+0x244>  // b.pmore
  421858:	mov	x2, x19
  42185c:	mov	x1, x27
  421860:	mov	x0, x20
  421864:	bl	406640 <memcpy@plt>
  421868:	strb	wzr, [x20, x19]
  42186c:	mov	x1, x25
  421870:	mov	x0, x20
  421874:	bl	40b090 <dir_file_exists_p@@Base>
  421878:	cmp	w0, #0x0
  42187c:	ldrb	w0, [x28, #33]
  421880:	cset	w1, eq  // eq = none
  421884:	bfxil	w0, w1, #0, #1
  421888:	strb	w0, [x28, #33]
  42188c:	ldr	x28, [x28]
  421890:	cbnz	x28, 4217e8 <snap_implicit_rules@@Base+0x128>
  421894:	ldr	x0, [sp, #128]
  421898:	cbz	x0, 4218a8 <snap_implicit_rules@@Base+0x1e8>
  42189c:	cbz	x22, 421928 <snap_implicit_rules@@Base+0x268>
  4218a0:	bl	418ef0 <copy_dep_chain@@Base>
  4218a4:	str	x0, [x22]
  4218a8:	ldr	x1, [sp, #136]
  4218ac:	ldr	w0, [x1]
  4218b0:	cmp	w0, w21
  4218b4:	b.cs	4218bc <snap_implicit_rules@@Base+0x1fc>  // b.hs, b.nlast
  4218b8:	str	w21, [x1]
  4218bc:	ldr	x0, [sp, #104]
  4218c0:	ldr	x0, [x0]
  4218c4:	str	x0, [sp, #104]
  4218c8:	cbz	x0, 42193c <snap_implicit_rules@@Base+0x27c>
  4218cc:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  4218d0:	ldr	w2, [x0, #2224]
  4218d4:	ldr	x0, [sp, #120]
  4218d8:	ldr	w0, [x0]
  4218dc:	b	4217a8 <snap_implicit_rules@@Base+0xe8>
  4218e0:	ldrb	w1, [x28, #33]
  4218e4:	and	w1, w1, #0xfffffffe
  4218e8:	strb	w1, [x28, #33]
  4218ec:	mov	x28, x0
  4218f0:	cbnz	x28, 4217e8 <snap_implicit_rules@@Base+0x128>
  4218f4:	b	421894 <snap_implicit_rules@@Base+0x1d4>
  4218f8:	ldr	x0, [x28, #16]
  4218fc:	ldr	x27, [x0]
  421900:	b	4217f0 <snap_implicit_rules@@Base+0x130>
  421904:	mov	x0, x20
  421908:	add	x1, x19, #0x1
  42190c:	mov	x24, x19
  421910:	bl	418aa0 <xrealloc@@Base>
  421914:	mov	x20, x0
  421918:	b	421858 <snap_implicit_rules@@Base+0x198>
  42191c:	ldr	x0, [sp, #128]
  421920:	ldr	w21, [sp, #116]
  421924:	cbz	x0, 4218a8 <snap_implicit_rules@@Base+0x1e8>
  421928:	ldr	x0, [sp, #128]
  42192c:	bl	418ef0 <copy_dep_chain@@Base>
  421930:	ldr	x1, [sp, #104]
  421934:	str	x0, [x1, #32]
  421938:	b	4218a8 <snap_implicit_rules@@Base+0x1e8>
  42193c:	mov	x0, x20
  421940:	ldp	x23, x24, [sp, #48]
  421944:	ldp	x25, x26, [sp, #64]
  421948:	ldp	x27, x28, [sp, #80]
  42194c:	bl	406b90 <free@plt>
  421950:	ldp	x19, x20, [sp, #16]
  421954:	ldp	x21, x22, [sp, #32]
  421958:	ldr	x0, [sp, #128]
  42195c:	ldp	x29, x30, [sp], #144
  421960:	b	418fa0 <free_ns_chain@@Base>
  421964:	mov	x20, #0x0                   	// #0
  421968:	mov	x0, x20
  42196c:	bl	406b90 <free@plt>
  421970:	ldp	x19, x20, [sp, #16]
  421974:	ldp	x21, x22, [sp, #32]
  421978:	ldr	x0, [sp, #128]
  42197c:	ldp	x29, x30, [sp], #144
  421980:	b	418fa0 <free_ns_chain@@Base>
  421984:	nop

0000000000421988 <install_pattern_rule@@Base>:
  421988:	stp	x29, x30, [sp, #-80]!
  42198c:	mov	x29, sp
  421990:	stp	x19, x20, [sp, #16]
  421994:	mov	x20, x0
  421998:	mov	x0, #0x38                  	// #56
  42199c:	stp	x21, x22, [sp, #32]
  4219a0:	mov	w22, w1
  4219a4:	str	x23, [sp, #48]
  4219a8:	bl	418a50 <xmalloc@@Base>
  4219ac:	mov	x19, x0
  4219b0:	mov	w1, #0x1                   	// #1
  4219b4:	mov	x0, #0x8                   	// #8
  4219b8:	strh	w1, [x19, #48]
  4219bc:	bl	418a50 <xmalloc@@Base>
  4219c0:	str	x0, [x19, #8]
  4219c4:	mov	x0, #0x8                   	// #8
  4219c8:	bl	418a50 <xmalloc@@Base>
  4219cc:	str	x0, [x19, #24]
  4219d0:	mov	x0, #0x4                   	// #4
  4219d4:	bl	418a50 <xmalloc@@Base>
  4219d8:	mov	x21, x0
  4219dc:	ldr	x23, [x20]
  4219e0:	str	x0, [x19, #16]
  4219e4:	mov	x0, x23
  4219e8:	bl	406680 <strlen@plt>
  4219ec:	ldr	x1, [x19, #8]
  4219f0:	str	w0, [x21]
  4219f4:	ldr	x21, [x19, #24]
  4219f8:	mov	x0, x1
  4219fc:	str	x23, [x1]
  421a00:	bl	41b5a8 <find_percent_cached@@Base>
  421a04:	ldr	x6, [x19, #24]
  421a08:	str	x0, [x21]
  421a0c:	mov	x1, #0x28                  	// #40
  421a10:	add	x0, sp, #0x48
  421a14:	mov	w4, #0x0                   	// #0
  421a18:	mov	x3, #0x0                   	// #0
  421a1c:	ldr	x5, [x6]
  421a20:	mov	w2, #0x1                   	// #1
  421a24:	add	x5, x5, #0x1
  421a28:	str	x5, [x6]
  421a2c:	ldr	x5, [x20, #8]
  421a30:	str	x5, [sp, #72]
  421a34:	bl	41c510 <parse_file_seq@@Base>
  421a38:	str	x0, [x19, #32]
  421a3c:	mov	w1, #0x0                   	// #0
  421a40:	mov	x0, x19
  421a44:	bl	421488 <update_goal_chain@@Base+0x4f8>
  421a48:	cbnz	w0, 421a60 <install_pattern_rule@@Base+0xd8>
  421a4c:	ldp	x19, x20, [sp, #16]
  421a50:	ldp	x21, x22, [sp, #32]
  421a54:	ldr	x23, [sp, #48]
  421a58:	ldp	x29, x30, [sp], #80
  421a5c:	ret
  421a60:	cmp	w22, #0x0
  421a64:	mov	x0, #0x38                  	// #56
  421a68:	cset	w1, ne  // ne = any
  421a6c:	strb	w1, [x19, #50]
  421a70:	bl	418a50 <xmalloc@@Base>
  421a74:	mov	x21, x0
  421a78:	ldr	x0, [x20, #16]
  421a7c:	str	x21, [x19, #40]
  421a80:	stp	xzr, xzr, [x21]
  421a84:	str	xzr, [x21, #16]
  421a88:	bl	418c60 <xstrdup@@Base>
  421a8c:	ldr	x1, [x19, #40]
  421a90:	str	x0, [x21, #24]
  421a94:	mov	w0, #0x9                   	// #9
  421a98:	str	xzr, [x1, #32]
  421a9c:	strb	w0, [x1, #50]
  421aa0:	ldp	x19, x20, [sp, #16]
  421aa4:	ldp	x21, x22, [sp, #32]
  421aa8:	ldr	x23, [sp, #48]
  421aac:	ldp	x29, x30, [sp], #80
  421ab0:	ret
  421ab4:	nop

0000000000421ab8 <create_pattern_rule@@Base>:
  421ab8:	stp	x29, x30, [sp, #-80]!
  421abc:	mov	x29, sp
  421ac0:	stp	x19, x20, [sp, #16]
  421ac4:	mov	x20, x4
  421ac8:	mov	x19, x5
  421acc:	stp	x21, x22, [sp, #32]
  421ad0:	mov	x21, x1
  421ad4:	mov	x22, x0
  421ad8:	mov	x0, #0x38                  	// #56
  421adc:	stp	x23, x24, [sp, #48]
  421ae0:	and	w23, w2, #0xffff
  421ae4:	stp	x25, x26, [sp, #64]
  421ae8:	mov	w26, w3
  421aec:	mov	w25, w6
  421af0:	bl	418a50 <xmalloc@@Base>
  421af4:	mov	x24, x0
  421af8:	ubfiz	x0, x23, #2, #16
  421afc:	str	x22, [x24, #8]
  421b00:	stp	x21, x20, [x24, #24]
  421b04:	str	x19, [x24, #40]
  421b08:	strh	w23, [x24, #48]
  421b0c:	bl	418a50 <xmalloc@@Base>
  421b10:	str	x0, [x24, #16]
  421b14:	cbz	w23, 421b4c <create_pattern_rule@@Base+0x94>
  421b18:	ldr	x20, [x24, #24]
  421b1c:	mov	x21, x0
  421b20:	mov	x19, #0x0                   	// #0
  421b24:	nop
  421b28:	ldr	x0, [x22, x19, lsl #3]
  421b2c:	bl	406680 <strlen@plt>
  421b30:	ldr	x1, [x20, x19, lsl #3]
  421b34:	str	w0, [x21, x19, lsl #2]
  421b38:	add	x1, x1, #0x1
  421b3c:	str	x1, [x20, x19, lsl #3]
  421b40:	add	x19, x19, #0x1
  421b44:	cmp	w23, w19
  421b48:	b.hi	421b28 <create_pattern_rule@@Base+0x70>  // b.pmore
  421b4c:	mov	w1, w25
  421b50:	mov	x0, x24
  421b54:	bl	421488 <update_goal_chain@@Base+0x4f8>
  421b58:	cbz	w0, 421b68 <create_pattern_rule@@Base+0xb0>
  421b5c:	cmp	w26, #0x0
  421b60:	cset	w0, ne  // ne = any
  421b64:	strb	w0, [x24, #50]
  421b68:	ldp	x19, x20, [sp, #16]
  421b6c:	ldp	x21, x22, [sp, #32]
  421b70:	ldp	x23, x24, [sp, #48]
  421b74:	ldp	x25, x26, [sp, #64]
  421b78:	ldp	x29, x30, [sp], #80
  421b7c:	ret
  421b80:	stp	x29, x30, [sp, #-64]!
  421b84:	mov	x29, sp
  421b88:	stp	x19, x20, [sp, #16]
  421b8c:	mov	x19, x1
  421b90:	stp	x21, x22, [sp, #32]
  421b94:	mov	x21, x0
  421b98:	mov	x0, #0x8                   	// #8
  421b9c:	stp	x23, x24, [sp, #48]
  421ba0:	mov	x24, x2
  421ba4:	bl	418a50 <xmalloc@@Base>
  421ba8:	mov	x22, x0
  421bac:	mov	x0, #0x8                   	// #8
  421bb0:	bl	418a50 <xmalloc@@Base>
  421bb4:	mov	x23, x0
  421bb8:	cbz	x21, 421c94 <create_pattern_rule@@Base+0x1dc>
  421bbc:	mov	x0, x21
  421bc0:	bl	406680 <strlen@plt>
  421bc4:	mov	x20, x0
  421bc8:	add	x0, x0, #0x11
  421bcc:	and	x0, x0, #0xfffffffffffffff0
  421bd0:	mov	x1, x21
  421bd4:	sub	sp, sp, x0
  421bd8:	add	x20, x20, #0x1
  421bdc:	mov	x21, sp
  421be0:	mov	w3, #0x25                  	// #37
  421be4:	mov	x0, x21
  421be8:	mov	x2, x20
  421bec:	strb	w3, [x0], #1
  421bf0:	bl	406640 <memcpy@plt>
  421bf4:	mov	x1, x20
  421bf8:	mov	x0, x21
  421bfc:	bl	4224d0 <strcache_add_len@@Base>
  421c00:	str	x0, [x22]
  421c04:	str	x0, [x23]
  421c08:	cbz	x19, 421c5c <create_pattern_rule@@Base+0x1a4>
  421c0c:	mov	x0, x19
  421c10:	bl	406680 <strlen@plt>
  421c14:	add	x2, x0, #0x11
  421c18:	add	x20, x0, #0x1
  421c1c:	and	x0, x2, #0xfffffffffffffff0
  421c20:	mov	x1, x19
  421c24:	sub	sp, sp, x0
  421c28:	mov	w3, #0x25                  	// #37
  421c2c:	mov	x21, sp
  421c30:	mov	x2, x20
  421c34:	mov	x0, x21
  421c38:	strb	w3, [x0], #1
  421c3c:	bl	406640 <memcpy@plt>
  421c40:	mov	x0, #0x28                  	// #40
  421c44:	bl	418a78 <xcalloc@@Base>
  421c48:	mov	x19, x0
  421c4c:	mov	x1, x20
  421c50:	mov	x0, x21
  421c54:	bl	4224d0 <strcache_add_len@@Base>
  421c58:	str	x0, [x19, #8]
  421c5c:	mov	x5, x24
  421c60:	mov	x4, x19
  421c64:	mov	x1, x23
  421c68:	mov	x0, x22
  421c6c:	mov	w6, #0x0                   	// #0
  421c70:	mov	w3, #0x0                   	// #0
  421c74:	mov	w2, #0x1                   	// #1
  421c78:	bl	421ab8 <create_pattern_rule@@Base>
  421c7c:	mov	sp, x29
  421c80:	ldp	x19, x20, [sp, #16]
  421c84:	ldp	x21, x22, [sp, #32]
  421c88:	ldp	x23, x24, [sp, #48]
  421c8c:	ldp	x29, x30, [sp], #64
  421c90:	ret
  421c94:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  421c98:	mov	x1, #0x5                   	// #5
  421c9c:	add	x0, x0, #0x270
  421ca0:	bl	4224d0 <strcache_add_len@@Base>
  421ca4:	str	x0, [x22]
  421ca8:	add	x0, x0, #0x1
  421cac:	str	x0, [x23]
  421cb0:	b	421c08 <create_pattern_rule@@Base+0x150>
  421cb4:	nop

0000000000421cb8 <convert_to_pattern@@Base>:
  421cb8:	stp	x29, x30, [sp, #-112]!
  421cbc:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421cc0:	mov	x29, sp
  421cc4:	ldr	x0, [x0, #2200]
  421cc8:	stp	x21, x22, [sp, #32]
  421ccc:	adrp	x22, 445000 <output_context@@Base+0x1250>
  421cd0:	stp	x19, x20, [sp, #16]
  421cd4:	ldr	x21, [x0, #24]
  421cd8:	str	xzr, [x22, #3648]
  421cdc:	stp	x23, x24, [sp, #48]
  421ce0:	stp	x25, x26, [sp, #64]
  421ce4:	stp	x27, x28, [sp, #80]
  421ce8:	cbz	x21, 421ea0 <convert_to_pattern@@Base+0x1e8>
  421cec:	mov	x19, x21
  421cf0:	mov	x20, #0x0                   	// #0
  421cf4:	b	421d14 <convert_to_pattern@@Base+0x5c>
  421cf8:	bl	406680 <strlen@plt>
  421cfc:	cmp	x20, x0
  421d00:	b.cs	421d0c <convert_to_pattern@@Base+0x54>  // b.hs, b.nlast
  421d04:	mov	x20, x0
  421d08:	str	x0, [x22, #3648]
  421d0c:	ldr	x19, [x19]
  421d10:	cbz	x19, 421d28 <convert_to_pattern@@Base+0x70>
  421d14:	ldr	x0, [x19, #8]
  421d18:	cbnz	x0, 421cf8 <convert_to_pattern@@Base+0x40>
  421d1c:	ldr	x0, [x19, #16]
  421d20:	ldr	x0, [x0]
  421d24:	b	421cf8 <convert_to_pattern@@Base+0x40>
  421d28:	lsl	x0, x20, #1
  421d2c:	adrp	x26, 446000 <commands_started@@Base+0x1c8>
  421d30:	add	x0, x0, #0x10
  421d34:	add	x26, x26, #0x7c8
  421d38:	and	x0, x0, #0xfffffffffffffff0
  421d3c:	adrp	x27, 446000 <commands_started@@Base+0x1c8>
  421d40:	sub	sp, sp, x0
  421d44:	add	x1, x27, #0x898
  421d48:	mov	x24, sp
  421d4c:	adrp	x28, 42b000 <_IO_stdin_used@@Base+0x4c20>
  421d50:	add	x0, x28, #0x350
  421d54:	stp	x0, x1, [x29, #96]
  421d58:	ldr	x0, [x21, #8]
  421d5c:	cbz	x0, 421f44 <convert_to_pattern@@Base+0x28c>
  421d60:	mov	x2, #0x0                   	// #0
  421d64:	mov	x1, #0x0                   	// #0
  421d68:	bl	421b80 <create_pattern_rule@@Base+0xc8>
  421d6c:	ldr	x0, [x21, #16]
  421d70:	ldr	x2, [x0, #32]
  421d74:	cbz	x2, 421d88 <convert_to_pattern@@Base+0xd0>
  421d78:	ldr	x1, [x21, #8]
  421d7c:	cbz	x1, 421f6c <convert_to_pattern@@Base+0x2b4>
  421d80:	ldr	x0, [x29, #96]
  421d84:	bl	421b80 <create_pattern_rule@@Base+0xc8>
  421d88:	ldr	x19, [x21, #8]
  421d8c:	cbz	x19, 421f38 <convert_to_pattern@@Base+0x280>
  421d90:	mov	x0, x19
  421d94:	bl	406680 <strlen@plt>
  421d98:	mov	x1, x19
  421d9c:	mov	x22, x0
  421da0:	mov	x2, x0
  421da4:	mov	x0, x24
  421da8:	bl	406640 <memcpy@plt>
  421dac:	adrp	x25, 42c000 <_IO_stdin_used@@Base+0x5c20>
  421db0:	ldr	x0, [x29, #104]
  421db4:	add	x23, x24, x22
  421db8:	add	x25, x25, #0x278
  421dbc:	ldr	x0, [x0]
  421dc0:	ldr	x28, [x0, #24]
  421dc4:	cbz	x28, 421e98 <convert_to_pattern@@Base+0x1e0>
  421dc8:	ldr	x27, [x28, #8]
  421dcc:	mov	x20, x27
  421dd0:	cbz	x27, 421ec0 <convert_to_pattern@@Base+0x208>
  421dd4:	mov	x0, x20
  421dd8:	bl	406680 <strlen@plt>
  421ddc:	mov	x19, x0
  421de0:	cmp	x22, x0
  421de4:	b.ne	421e0c <convert_to_pattern@@Base+0x154>  // b.any
  421de8:	ldr	x0, [x21, #8]
  421dec:	mov	x2, x0
  421df0:	cbz	x0, 421ecc <convert_to_pattern@@Base+0x214>
  421df4:	cmp	x20, x2
  421df8:	b.eq	421e90 <convert_to_pattern@@Base+0x1d8>  // b.none
  421dfc:	ldrb	w3, [x2]
  421e00:	ldrb	w2, [x20]
  421e04:	cmp	w2, w3
  421e08:	b.eq	421ed8 <convert_to_pattern@@Base+0x220>  // b.none
  421e0c:	mov	x1, x20
  421e10:	add	x2, x19, #0x1
  421e14:	mov	x0, x23
  421e18:	bl	406640 <memcpy@plt>
  421e1c:	mov	x0, x24
  421e20:	bl	40c7a8 <lookup_file@@Base>
  421e24:	mov	x20, x0
  421e28:	cbz	x0, 421e90 <convert_to_pattern@@Base+0x1d8>
  421e2c:	ldr	x27, [x0, #32]
  421e30:	cbz	x27, 421e90 <convert_to_pattern@@Base+0x1d8>
  421e34:	ldr	x0, [x0, #24]
  421e38:	cbz	x0, 421e68 <convert_to_pattern@@Base+0x1b0>
  421e3c:	ldr	w0, [x26]
  421e40:	cbnz	w0, 421e90 <convert_to_pattern@@Base+0x1d8>
  421e44:	mov	x1, x25
  421e48:	mov	w2, #0x5                   	// #5
  421e4c:	mov	x0, #0x0                   	// #0
  421e50:	bl	406cd0 <dcgettext@plt>
  421e54:	mov	x1, #0x0                   	// #0
  421e58:	mov	x2, x0
  421e5c:	mov	x0, x27
  421e60:	bl	419dc8 <error@@Base>
  421e64:	ldr	x27, [x20, #32]
  421e68:	cmp	x19, #0x2
  421e6c:	ldr	x1, [x21, #8]
  421e70:	b.eq	421ef8 <convert_to_pattern@@Base+0x240>  // b.none
  421e74:	ldr	x0, [x28, #8]
  421e78:	cbnz	x0, 421e84 <convert_to_pattern@@Base+0x1cc>
  421e7c:	ldr	x0, [x28, #16]
  421e80:	ldr	x0, [x0]
  421e84:	cbz	x1, 421f2c <convert_to_pattern@@Base+0x274>
  421e88:	mov	x2, x27
  421e8c:	bl	421b80 <create_pattern_rule@@Base+0xc8>
  421e90:	ldr	x28, [x28]
  421e94:	cbnz	x28, 421dc8 <convert_to_pattern@@Base+0x110>
  421e98:	ldr	x21, [x21]
  421e9c:	cbnz	x21, 421d58 <convert_to_pattern@@Base+0xa0>
  421ea0:	mov	sp, x29
  421ea4:	ldp	x19, x20, [sp, #16]
  421ea8:	ldp	x21, x22, [sp, #32]
  421eac:	ldp	x23, x24, [sp, #48]
  421eb0:	ldp	x25, x26, [sp, #64]
  421eb4:	ldp	x27, x28, [sp, #80]
  421eb8:	ldp	x29, x30, [sp], #112
  421ebc:	ret
  421ec0:	ldr	x0, [x28, #16]
  421ec4:	ldr	x20, [x0]
  421ec8:	b	421dd4 <convert_to_pattern@@Base+0x11c>
  421ecc:	ldr	x2, [x21, #16]
  421ed0:	ldr	x2, [x2]
  421ed4:	b	421df4 <convert_to_pattern@@Base+0x13c>
  421ed8:	cbz	w2, 421e90 <convert_to_pattern@@Base+0x1d8>
  421edc:	cbz	x0, 421f60 <convert_to_pattern@@Base+0x2a8>
  421ee0:	add	x0, x0, #0x1
  421ee4:	add	x1, x27, #0x1
  421ee8:	cbz	x27, 421f50 <convert_to_pattern@@Base+0x298>
  421eec:	bl	406b40 <strcmp@plt>
  421ef0:	cbnz	w0, 421e0c <convert_to_pattern@@Base+0x154>
  421ef4:	b	421e90 <convert_to_pattern@@Base+0x1d8>
  421ef8:	ldrb	w0, [x23]
  421efc:	cmp	w0, #0x2e
  421f00:	b.ne	421e74 <convert_to_pattern@@Base+0x1bc>  // b.any
  421f04:	ldrb	w0, [x23, #1]
  421f08:	cmp	w0, #0x61
  421f0c:	b.ne	421e74 <convert_to_pattern@@Base+0x1bc>  // b.any
  421f10:	cbz	x1, 421f74 <convert_to_pattern@@Base+0x2bc>
  421f14:	mov	x2, x27
  421f18:	mov	x0, #0x0                   	// #0
  421f1c:	bl	421b80 <create_pattern_rule@@Base+0xc8>
  421f20:	ldr	x1, [x21, #8]
  421f24:	ldr	x27, [x20, #32]
  421f28:	b	421e74 <convert_to_pattern@@Base+0x1bc>
  421f2c:	ldr	x1, [x21, #16]
  421f30:	ldr	x1, [x1]
  421f34:	b	421e88 <convert_to_pattern@@Base+0x1d0>
  421f38:	ldr	x0, [x21, #16]
  421f3c:	ldr	x19, [x0]
  421f40:	b	421d90 <convert_to_pattern@@Base+0xd8>
  421f44:	ldr	x0, [x21, #16]
  421f48:	ldr	x0, [x0]
  421f4c:	b	421d60 <convert_to_pattern@@Base+0xa8>
  421f50:	ldr	x1, [x28, #16]
  421f54:	ldr	x1, [x1]
  421f58:	add	x1, x1, #0x1
  421f5c:	b	421eec <convert_to_pattern@@Base+0x234>
  421f60:	ldr	x0, [x21, #16]
  421f64:	ldr	x0, [x0]
  421f68:	b	421ee0 <convert_to_pattern@@Base+0x228>
  421f6c:	ldr	x1, [x0]
  421f70:	b	421d80 <convert_to_pattern@@Base+0xc8>
  421f74:	ldr	x0, [x21, #16]
  421f78:	ldr	x1, [x0]
  421f7c:	b	421f14 <convert_to_pattern@@Base+0x25c>

0000000000421f80 <print_rule_data_base@@Base>:
  421f80:	stp	x29, x30, [sp, #-80]!
  421f84:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  421f88:	add	x1, x1, #0x2b8
  421f8c:	mov	w2, #0x5                   	// #5
  421f90:	mov	x29, sp
  421f94:	mov	x0, #0x0                   	// #0
  421f98:	stp	x19, x20, [sp, #16]
  421f9c:	stp	x23, x24, [sp, #48]
  421fa0:	bl	406cd0 <dcgettext@plt>
  421fa4:	bl	406ae0 <puts@plt>
  421fa8:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  421fac:	ldr	x19, [x0, #2208]
  421fb0:	cbz	x19, 4220e0 <print_rule_data_base@@Base+0x160>
  421fb4:	stp	x21, x22, [sp, #32]
  421fb8:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  421fbc:	add	x22, x22, #0x180
  421fc0:	mov	w24, #0x0                   	// #0
  421fc4:	mov	w23, #0x0                   	// #0
  421fc8:	stp	x25, x26, [sp, #64]
  421fcc:	mov	w26, #0x3a                  	// #58
  421fd0:	mov	w25, #0x20                  	// #32
  421fd4:	nop
  421fd8:	ldr	x1, [x22]
  421fdc:	mov	w0, #0xa                   	// #10
  421fe0:	add	w23, w23, #0x1
  421fe4:	bl	406740 <putc@plt>
  421fe8:	ldrh	w0, [x19, #48]
  421fec:	cbz	w0, 422030 <print_rule_data_base@@Base+0xb0>
  421ff0:	mov	x21, #0x0                   	// #0
  421ff4:	mov	w20, #0x0                   	// #0
  421ff8:	ldr	x0, [x19, #8]
  421ffc:	add	w20, w20, #0x1
  422000:	ldr	x1, [x22]
  422004:	ldr	x0, [x0, x21]
  422008:	add	x21, x21, #0x8
  42200c:	bl	406690 <fputs@plt>
  422010:	ldrh	w0, [x19, #48]
  422014:	ldr	x1, [x22]
  422018:	cmp	w20, w0
  42201c:	csel	w0, w26, w25, eq  // eq = none
  422020:	bl	406740 <putc@plt>
  422024:	ldrh	w0, [x19, #48]
  422028:	cmp	w20, w0
  42202c:	b.cc	421ff8 <print_rule_data_base@@Base+0x78>  // b.lo, b.ul, b.last
  422030:	ldrb	w0, [x19, #50]
  422034:	cbnz	w0, 4220c8 <print_rule_data_base@@Base+0x148>
  422038:	ldr	x0, [x19, #32]
  42203c:	bl	40dcb0 <print_prereqs@@Base>
  422040:	ldr	x0, [x19, #40]
  422044:	cbz	x0, 42204c <print_rule_data_base@@Base+0xcc>
  422048:	bl	40a640 <print_commands@@Base>
  42204c:	ldrb	w0, [x19, #50]
  422050:	ldr	x19, [x19]
  422054:	cmp	w0, #0x0
  422058:	cinc	w24, w24, ne  // ne = any
  42205c:	cbnz	x19, 421fd8 <print_rule_data_base@@Base+0x58>
  422060:	cbz	w23, 4220d8 <print_rule_data_base@@Base+0x158>
  422064:	mov	w2, #0x5                   	// #5
  422068:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  42206c:	mov	x0, #0x0                   	// #0
  422070:	add	x1, x1, #0x2e8
  422074:	bl	406cd0 <dcgettext@plt>
  422078:	ucvtf	d2, w24
  42207c:	ucvtf	d0, w23
  422080:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  422084:	fmov	d1, x1
  422088:	mov	w2, w24
  42208c:	mov	w1, w23
  422090:	fdiv	d0, d2, d0
  422094:	fmul	d0, d0, d1
  422098:	bl	406d60 <printf@plt>
  42209c:	ldp	x21, x22, [sp, #32]
  4220a0:	ldp	x25, x26, [sp, #64]
  4220a4:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  4220a8:	ldr	w0, [x19, #2240]
  4220ac:	cmp	w0, #0x0
  4220b0:	ccmp	w0, w23, #0x4, ne  // ne = any
  4220b4:	b.ne	422100 <print_rule_data_base@@Base+0x180>  // b.any
  4220b8:	ldp	x19, x20, [sp, #16]
  4220bc:	ldp	x23, x24, [sp, #48]
  4220c0:	ldp	x29, x30, [sp], #80
  4220c4:	ret
  4220c8:	ldr	x1, [x22]
  4220cc:	mov	w0, #0x3a                  	// #58
  4220d0:	bl	406740 <putc@plt>
  4220d4:	b	422038 <print_rule_data_base@@Base+0xb8>
  4220d8:	ldp	x21, x22, [sp, #32]
  4220dc:	ldp	x25, x26, [sp, #64]
  4220e0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4220e4:	add	x1, x1, #0x2d0
  4220e8:	mov	w2, #0x5                   	// #5
  4220ec:	mov	w23, #0x0                   	// #0
  4220f0:	mov	x0, #0x0                   	// #0
  4220f4:	bl	406cd0 <dcgettext@plt>
  4220f8:	bl	406ae0 <puts@plt>
  4220fc:	b	4220a4 <print_rule_data_base@@Base+0x124>
  422100:	mov	w2, #0x5                   	// #5
  422104:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422108:	mov	x0, #0x0                   	// #0
  42210c:	add	x1, x1, #0x318
  422110:	stp	x21, x22, [sp, #32]
  422114:	stp	x25, x26, [sp, #64]
  422118:	bl	406cd0 <dcgettext@plt>
  42211c:	ldr	w3, [x19, #2240]
  422120:	mov	x2, x0
  422124:	mov	w4, w23
  422128:	mov	x1, #0x28                  	// #40
  42212c:	mov	x0, #0x0                   	// #0
  422130:	bl	41a060 <fatal@@Base>
  422134:	nop
  422138:	mov	x0, #0x0                   	// #0
  42213c:	ret
  422140:	stp	x29, x30, [sp, #-32]!
  422144:	mov	x29, sp
  422148:	stp	x19, x20, [sp, #16]
  42214c:	mov	x19, x1
  422150:	mov	x20, x0
  422154:	add	x0, x1, #0x10
  422158:	bl	418a50 <xmalloc@@Base>
  42215c:	add	x3, x0, #0x8
  422160:	mov	x1, x20
  422164:	mov	x20, x0
  422168:	mov	x2, x19
  42216c:	mov	x0, x3
  422170:	add	x19, x20, x19
  422174:	bl	406640 <memcpy@plt>
  422178:	adrp	x1, 445000 <output_context@@Base+0x1250>
  42217c:	strb	wzr, [x19, #8]
  422180:	ldr	x2, [x1, #3656]
  422184:	str	x2, [x20]
  422188:	str	x20, [x1, #3656]
  42218c:	ldp	x19, x20, [sp, #16]
  422190:	ldp	x29, x30, [sp], #32
  422194:	ret
  422198:	cmp	x1, x0
  42219c:	b.eq	4221a4 <print_rule_data_base@@Base+0x224>  // b.none
  4221a0:	b	406b40 <strcmp@plt>
  4221a4:	mov	w0, #0x0                   	// #0
  4221a8:	ret
  4221ac:	nop
  4221b0:	stp	x29, x30, [sp, #-16]!
  4221b4:	mov	x29, sp
  4221b8:	bl	412278 <jhash_string@@Base>
  4221bc:	mov	w0, w0
  4221c0:	ldp	x29, x30, [sp], #16
  4221c4:	ret
  4221c8:	stp	x29, x30, [sp, #-96]!
  4221cc:	mov	x29, sp
  4221d0:	stp	x19, x20, [sp, #16]
  4221d4:	adrp	x19, 445000 <output_context@@Base+0x1250>
  4221d8:	add	x19, x19, #0xe48
  4221dc:	mov	x20, x1
  4221e0:	mov	x1, x0
  4221e4:	stp	x21, x22, [sp, #32]
  4221e8:	stp	x23, x24, [sp, #48]
  4221ec:	mov	x24, x0
  4221f0:	add	x0, x19, #0x10
  4221f4:	bl	4119e0 <hash_find_slot@@Base>
  4221f8:	mov	x23, x0
  4221fc:	ldr	x0, [x19, #104]
  422200:	ldr	x21, [x23]
  422204:	add	x0, x0, #0x1
  422208:	str	x0, [x19, #104]
  42220c:	cbz	x21, 422238 <print_rule_data_base@@Base+0x2b8>
  422210:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  422214:	ldr	x0, [x0, #48]
  422218:	cmp	x21, x0
  42221c:	b.eq	422238 <print_rule_data_base@@Base+0x2b8>  // b.none
  422220:	mov	x0, x21
  422224:	ldp	x19, x20, [sp, #16]
  422228:	ldp	x21, x22, [sp, #32]
  42222c:	ldp	x23, x24, [sp, #48]
  422230:	ldp	x29, x30, [sp], #96
  422234:	ret
  422238:	stp	x25, x26, [sp, #64]
  42223c:	add	w0, w20, #0x1
  422240:	mov	w2, #0x1fe2                	// #8162
  422244:	ldp	x25, x1, [x19, #112]
  422248:	cmp	w2, w0, uxth
  42224c:	and	w26, w0, #0xffff
  422250:	and	x22, x20, #0xffff
  422254:	add	x1, x1, w0, uxth
  422258:	add	x25, x25, #0x1
  42225c:	stp	x25, x1, [x19, #112]
  422260:	and	x0, x0, #0xffff
  422264:	b.cc	422328 <print_rule_data_base@@Base+0x3a8>  // b.lo, b.ul, b.last
  422268:	str	x27, [sp, #80]
  42226c:	mov	x27, x19
  422270:	ldr	x20, [x27, #8]!
  422274:	cbnz	x20, 422288 <print_rule_data_base@@Base+0x308>
  422278:	b	4223b0 <print_rule_data_base@@Base+0x430>
  42227c:	mov	x27, x20
  422280:	ldr	x20, [x20]
  422284:	cbz	x20, 4223b0 <print_rule_data_base@@Base+0x430>
  422288:	ldrh	w0, [x20, #10]
  42228c:	cmp	w0, w26
  422290:	b.ls	42227c <print_rule_data_base@@Base+0x2fc>  // b.plast
  422294:	ldrh	w21, [x20, #8]
  422298:	add	x21, x21, #0xe
  42229c:	add	x21, x20, x21
  4222a0:	mov	x1, x24
  4222a4:	mov	x2, x22
  4222a8:	mov	x0, x21
  4222ac:	bl	406650 <memmove@plt>
  4222b0:	strb	wzr, [x21, x22]
  4222b4:	cmp	x25, #0x14
  4222b8:	ldrh	w0, [x20, #10]
  4222bc:	ldrh	w2, [x20, #8]
  4222c0:	ldrh	w1, [x20, #12]
  4222c4:	sub	w0, w0, w26
  4222c8:	and	w0, w0, #0xffff
  4222cc:	add	w26, w26, w2
  4222d0:	add	w1, w1, #0x1
  4222d4:	strh	w26, [x20, #8]
  4222d8:	strh	w0, [x20, #10]
  4222dc:	strh	w1, [x20, #12]
  4222e0:	b.ls	4222f8 <print_rule_data_base@@Base+0x378>  // b.plast
  4222e4:	ldr	x1, [x19, #120]
  4222e8:	udiv	x25, x1, x25
  4222ec:	add	x25, x25, #0x1
  4222f0:	cmp	x25, w0, uxth
  4222f4:	b.hi	422394 <print_rule_data_base@@Base+0x414>  // b.pmore
  4222f8:	ldr	x27, [sp, #80]
  4222fc:	mov	x2, x23
  422300:	mov	x1, x21
  422304:	add	x0, x19, #0x10
  422308:	bl	411b38 <hash_insert_at@@Base>
  42230c:	mov	x0, x21
  422310:	ldp	x19, x20, [sp, #16]
  422314:	ldp	x21, x22, [sp, #32]
  422318:	ldp	x23, x24, [sp, #48]
  42231c:	ldp	x25, x26, [sp, #64]
  422320:	ldp	x29, x30, [sp], #96
  422324:	ret
  422328:	add	x0, x0, #0xe
  42232c:	bl	418a50 <xmalloc@@Base>
  422330:	mov	x20, x0
  422334:	add	x21, x0, #0xe
  422338:	strh	wzr, [x0, #8]
  42233c:	mov	x1, x24
  422340:	strh	w26, [x0, #10]
  422344:	mov	x2, x22
  422348:	strh	wzr, [x0, #12]
  42234c:	ldp	x0, x3, [x19, #128]
  422350:	str	x0, [x20]
  422354:	str	x20, [x19, #128]
  422358:	mov	x0, x21
  42235c:	add	x3, x3, #0x1
  422360:	str	x3, [x19, #136]
  422364:	bl	406650 <memmove@plt>
  422368:	strb	wzr, [x21, x22]
  42236c:	ldrh	w2, [x20, #8]
  422370:	ldrh	w1, [x20, #10]
  422374:	ldrh	w0, [x20, #12]
  422378:	add	w2, w26, w2
  42237c:	sub	w26, w1, w26
  422380:	strh	w2, [x20, #8]
  422384:	add	w0, w0, #0x1
  422388:	strh	w26, [x20, #10]
  42238c:	strh	w0, [x20, #12]
  422390:	b	4222fc <print_rule_data_base@@Base+0x37c>
  422394:	ldr	x0, [x20]
  422398:	str	x0, [x27]
  42239c:	ldr	x27, [sp, #80]
  4223a0:	ldr	x0, [x19, #128]
  4223a4:	str	x0, [x20]
  4223a8:	str	x20, [x19, #128]
  4223ac:	b	4222fc <print_rule_data_base@@Base+0x37c>
  4223b0:	mov	x0, #0x1ff0                	// #8176
  4223b4:	bl	418a50 <xmalloc@@Base>
  4223b8:	mov	x20, x0
  4223bc:	strh	wzr, [x0, #12]
  4223c0:	ldr	x0, [x19, #136]
  4223c4:	mov	w1, #0x1fe20000            	// #534904832
  4223c8:	ldr	x2, [x19, #8]
  4223cc:	str	x2, [x20]
  4223d0:	add	x0, x0, #0x1
  4223d4:	add	x27, x19, #0x8
  4223d8:	mov	x21, #0xe                   	// #14
  4223dc:	str	w1, [x20, #8]
  4223e0:	str	x20, [x19, #8]
  4223e4:	str	x0, [x19, #136]
  4223e8:	ldr	x25, [x19, #112]
  4223ec:	b	42229c <print_rule_data_base@@Base+0x31c>

00000000004223f0 <strcache_iscached@@Base>:
  4223f0:	adrp	x5, 445000 <output_context@@Base+0x1250>
  4223f4:	add	x4, x5, #0xe48
  4223f8:	ldr	x1, [x4, #8]
  4223fc:	cbz	x1, 422424 <strcache_iscached@@Base+0x34>
  422400:	add	x2, x1, #0xe
  422404:	cmp	x2, x0
  422408:	b.hi	42241c <strcache_iscached@@Base+0x2c>  // b.pmore
  42240c:	ldrh	w3, [x1, #8]
  422410:	add	x2, x2, x3
  422414:	cmp	x0, x2
  422418:	b.cc	422488 <strcache_iscached@@Base+0x98>  // b.lo, b.ul, b.last
  42241c:	ldr	x1, [x1]
  422420:	cbnz	x1, 422400 <strcache_iscached@@Base+0x10>
  422424:	ldr	x1, [x4, #128]
  422428:	cbz	x1, 422454 <strcache_iscached@@Base+0x64>
  42242c:	nop
  422430:	add	x2, x1, #0xe
  422434:	cmp	x2, x0
  422438:	b.hi	42244c <strcache_iscached@@Base+0x5c>  // b.pmore
  42243c:	ldrh	w3, [x1, #8]
  422440:	add	x2, x2, x3
  422444:	cmp	x0, x2
  422448:	b.cc	422488 <strcache_iscached@@Base+0x98>  // b.lo, b.ul, b.last
  42244c:	ldr	x1, [x1]
  422450:	cbnz	x1, 422430 <strcache_iscached@@Base+0x40>
  422454:	ldr	x1, [x5, #3656]
  422458:	cbz	x1, 422480 <strcache_iscached@@Base+0x90>
  42245c:	add	x2, x1, #0x8
  422460:	cmp	x0, x2
  422464:	b.ne	422474 <strcache_iscached@@Base+0x84>  // b.any
  422468:	b	422488 <strcache_iscached@@Base+0x98>
  42246c:	cmp	x0, x2
  422470:	b.eq	422488 <strcache_iscached@@Base+0x98>  // b.none
  422474:	ldr	x1, [x1]
  422478:	add	x2, x1, #0x8
  42247c:	cbnz	x1, 42246c <strcache_iscached@@Base+0x7c>
  422480:	mov	w0, #0x0                   	// #0
  422484:	ret
  422488:	mov	w0, #0x1                   	// #1
  42248c:	ret

0000000000422490 <strcache_add@@Base>:
  422490:	stp	x29, x30, [sp, #-32]!
  422494:	mov	x29, sp
  422498:	str	x19, [sp, #16]
  42249c:	mov	x19, x0
  4224a0:	bl	406680 <strlen@plt>
  4224a4:	mov	x1, x0
  4224a8:	mov	x2, #0xfffe                	// #65534
  4224ac:	cmp	x0, x2
  4224b0:	mov	x0, x19
  4224b4:	b.hi	4224c4 <strcache_add@@Base+0x34>  // b.pmore
  4224b8:	ldr	x19, [sp, #16]
  4224bc:	ldp	x29, x30, [sp], #32
  4224c0:	b	4221c8 <print_rule_data_base@@Base+0x248>
  4224c4:	ldr	x19, [sp, #16]
  4224c8:	ldp	x29, x30, [sp], #32
  4224cc:	b	422140 <print_rule_data_base@@Base+0x1c0>

00000000004224d0 <strcache_add_len@@Base>:
  4224d0:	stp	x29, x30, [sp, #-32]!
  4224d4:	mov	x29, sp
  4224d8:	str	x19, [sp, #16]
  4224dc:	mov	x19, x1
  4224e0:	ldrb	w1, [x0, x1]
  4224e4:	cbnz	w1, 422520 <strcache_add_len@@Base+0x50>
  4224e8:	mov	x1, #0xfffe                	// #65534
  4224ec:	cmp	x19, x1
  4224f0:	mov	x1, x19
  4224f4:	b.hi	42250c <strcache_add_len@@Base+0x3c>  // b.pmore
  4224f8:	bl	4221c8 <print_rule_data_base@@Base+0x248>
  4224fc:	mov	sp, x29
  422500:	ldr	x19, [sp, #16]
  422504:	ldp	x29, x30, [sp], #32
  422508:	ret
  42250c:	bl	422140 <print_rule_data_base@@Base+0x1c0>
  422510:	mov	sp, x29
  422514:	ldr	x19, [sp, #16]
  422518:	ldp	x29, x30, [sp], #32
  42251c:	ret
  422520:	add	x2, x19, #0x10
  422524:	mov	x1, x0
  422528:	and	x0, x2, #0xfffffffffffffff0
  42252c:	mov	x2, x19
  422530:	sub	sp, sp, x0
  422534:	mov	x3, sp
  422538:	mov	x0, x3
  42253c:	bl	406640 <memcpy@plt>
  422540:	strb	wzr, [x0, x19]
  422544:	b	4224e8 <strcache_add_len@@Base+0x18>

0000000000422548 <strcache_init@@Base>:
  422548:	adrp	x0, 445000 <output_context@@Base+0x1250>
  42254c:	add	x0, x0, #0xe48
  422550:	add	x0, x0, #0x10
  422554:	adrp	x4, 422000 <print_rule_data_base@@Base+0x80>
  422558:	adrp	x3, 422000 <print_rule_data_base@@Base+0x80>
  42255c:	add	x4, x4, #0x198
  422560:	add	x3, x3, #0x138
  422564:	adrp	x2, 422000 <print_rule_data_base@@Base+0x80>
  422568:	mov	x1, #0x1f40                	// #8000
  42256c:	add	x2, x2, #0x1b0
  422570:	b	411928 <hash_init@@Base>
  422574:	nop

0000000000422578 <strcache_print_stats@@Base>:
  422578:	stp	x29, x30, [sp, #-80]!
  42257c:	mov	x29, sp
  422580:	stp	x23, x24, [sp, #48]
  422584:	adrp	x24, 445000 <output_context@@Base+0x1250>
  422588:	add	x24, x24, #0xe48
  42258c:	stp	x21, x22, [sp, #32]
  422590:	mov	x22, x0
  422594:	ldr	x0, [x24, #8]
  422598:	cbz	x0, 4227a4 <strcache_print_stats@@Base+0x22c>
  42259c:	ldr	x4, [x0]
  4225a0:	stp	x19, x20, [sp, #16]
  4225a4:	stp	x25, x26, [sp, #64]
  4225a8:	cbz	x4, 42278c <strcache_print_stats@@Base+0x214>
  4225ac:	mov	x20, #0x1fe2                	// #8162
  4225b0:	mov	x19, #0x0                   	// #0
  4225b4:	mov	x21, #0x0                   	// #0
  4225b8:	mov	x3, #0x0                   	// #0
  4225bc:	nop
  4225c0:	ldrh	w1, [x4, #10]
  4225c4:	mov	x2, x3
  4225c8:	ldr	x4, [x4]
  4225cc:	cmp	x19, x1
  4225d0:	csel	x19, x19, x1, cs  // cs = hs, nlast
  4225d4:	cmp	x20, x1
  4225d8:	csel	x20, x20, x1, ls  // ls = plast
  4225dc:	add	x21, x21, x1
  4225e0:	add	x3, x3, #0x1
  4225e4:	cbnz	x4, 4225c0 <strcache_print_stats@@Base+0x48>
  4225e8:	add	x25, x2, #0x2
  4225ec:	ldr	x4, [x24, #128]
  4225f0:	cbz	x4, 422780 <strcache_print_stats@@Base+0x208>
  4225f4:	add	x2, x3, #0x1
  4225f8:	mov	x23, #0x0                   	// #0
  4225fc:	nop
  422600:	ldrh	w1, [x4, #10]
  422604:	add	x26, x2, x23
  422608:	ldr	x4, [x4]
  42260c:	cmp	x19, x1
  422610:	csel	x19, x19, x1, cs  // cs = hs, nlast
  422614:	cmp	x20, x1
  422618:	csel	x20, x20, x1, ls  // ls = plast
  42261c:	add	x21, x21, x1
  422620:	add	x23, x23, #0x1
  422624:	cbnz	x4, 422600 <strcache_print_stats@@Base+0x88>
  422628:	add	x25, x26, #0x1
  42262c:	mov	w2, #0x5                   	// #5
  422630:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422634:	mov	x0, #0x0                   	// #0
  422638:	add	x1, x1, #0x368
  42263c:	bl	406cd0 <dcgettext@plt>
  422640:	ldp	x4, x5, [x24, #112]
  422644:	mov	x3, x23
  422648:	mov	x2, x25
  42264c:	mov	x1, x22
  422650:	udiv	x6, x5, x4
  422654:	bl	406d60 <printf@plt>
  422658:	mov	w2, #0x5                   	// #5
  42265c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422660:	mov	x0, #0x0                   	// #0
  422664:	add	x1, x1, #0x3c0
  422668:	bl	406cd0 <dcgettext@plt>
  42266c:	ldr	x4, [x24, #8]
  422670:	mov	x1, x22
  422674:	mov	w2, #0x1fe2                	// #8162
  422678:	ldrh	w3, [x4, #8]
  42267c:	ldrh	w4, [x4, #12]
  422680:	udiv	w5, w3, w4
  422684:	bl	406d60 <printf@plt>
  422688:	cbnz	x26, 42270c <strcache_print_stats@@Base+0x194>
  42268c:	mov	w2, #0x5                   	// #5
  422690:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422694:	mov	x0, #0x0                   	// #0
  422698:	add	x1, x1, #0x490
  42269c:	bl	406cd0 <dcgettext@plt>
  4226a0:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  4226a4:	ldp	x2, x3, [x24, #104]
  4226a8:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  4226ac:	fmov	d1, x1
  4226b0:	mov	x1, x22
  4226b4:	sub	x3, x2, x3
  4226b8:	ucvtf	d2, x2
  4226bc:	ucvtf	d0, x3
  4226c0:	fmul	d0, d0, d1
  4226c4:	fdiv	d0, d0, d2
  4226c8:	fcvtzu	x3, d0
  4226cc:	bl	406d60 <printf@plt>
  4226d0:	mov	w2, #0x5                   	// #5
  4226d4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4226d8:	mov	x0, #0x0                   	// #0
  4226dc:	add	x1, x1, #0x4d0
  4226e0:	bl	406cd0 <dcgettext@plt>
  4226e4:	ldr	x1, [x19, #384]
  4226e8:	bl	406690 <fputs@plt>
  4226ec:	ldr	x1, [x19, #384]
  4226f0:	add	x0, x24, #0x10
  4226f4:	ldp	x19, x20, [sp, #16]
  4226f8:	ldp	x21, x22, [sp, #32]
  4226fc:	ldp	x23, x24, [sp, #48]
  422700:	ldp	x25, x26, [sp, #64]
  422704:	ldp	x29, x30, [sp], #80
  422708:	b	411fa0 <hash_print_stats@@Base>
  42270c:	ldr	x3, [x24, #8]
  422710:	mov	w2, #0x5                   	// #5
  422714:	ldp	x23, x25, [x24, #112]
  422718:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  42271c:	ldrh	w4, [x3, #8]
  422720:	add	x1, x1, #0x408
  422724:	ldrh	w3, [x3, #12]
  422728:	mov	x0, #0x0                   	// #0
  42272c:	sub	x25, x25, x4
  422730:	sub	x23, x23, x3
  422734:	bl	406cd0 <dcgettext@plt>
  422738:	mov	x3, x23
  42273c:	mov	x2, x25
  422740:	udiv	x4, x25, x23
  422744:	mov	x1, x22
  422748:	bl	406d60 <printf@plt>
  42274c:	mov	w2, #0x5                   	// #5
  422750:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422754:	mov	x0, #0x0                   	// #0
  422758:	add	x1, x1, #0x448
  42275c:	bl	406cd0 <dcgettext@plt>
  422760:	udiv	x5, x21, x26
  422764:	mov	x4, x20
  422768:	mov	x3, x19
  42276c:	mov	x2, x21
  422770:	mov	x1, x22
  422774:	and	w5, w5, #0xffff
  422778:	bl	406d60 <printf@plt>
  42277c:	b	42268c <strcache_print_stats@@Base+0x114>
  422780:	mov	x26, x3
  422784:	mov	x23, #0x0                   	// #0
  422788:	b	42262c <strcache_print_stats@@Base+0xb4>
  42278c:	mov	x25, #0x1                   	// #1
  422790:	mov	x20, #0x1fe2                	// #8162
  422794:	mov	x19, #0x0                   	// #0
  422798:	mov	x21, #0x0                   	// #0
  42279c:	mov	x3, #0x0                   	// #0
  4227a0:	b	4225ec <strcache_print_stats@@Base+0x74>
  4227a4:	mov	w2, #0x5                   	// #5
  4227a8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4227ac:	add	x1, x1, #0x348
  4227b0:	bl	406cd0 <dcgettext@plt>
  4227b4:	mov	x1, x22
  4227b8:	ldp	x21, x22, [sp, #32]
  4227bc:	ldp	x23, x24, [sp, #48]
  4227c0:	ldp	x29, x30, [sp], #80
  4227c4:	b	406d60 <printf@plt>
  4227c8:	mov	x0, #0x0                   	// #0
  4227cc:	ret
  4227d0:	mov	x3, x0
  4227d4:	ldr	w0, [x1, #40]
  4227d8:	ldr	w2, [x3, #40]
  4227dc:	subs	w0, w2, w0
  4227e0:	b.ne	422800 <strcache_print_stats@@Base+0x288>  // b.any
  4227e4:	ldr	x1, [x1]
  4227e8:	ldr	x3, [x3]
  4227ec:	cmp	x3, x1
  4227f0:	b.eq	422800 <strcache_print_stats@@Base+0x288>  // b.none
  4227f4:	mov	w2, w2
  4227f8:	mov	x0, x3
  4227fc:	b	406b00 <memcmp@plt>
  422800:	ret
  422804:	nop
  422808:	mov	x1, x0
  42280c:	stp	x29, x30, [sp, #-16]!
  422810:	mov	x29, sp
  422814:	ldr	w1, [x1, #40]
  422818:	ldr	x0, [x0]
  42281c:	bl	412120 <jhash@@Base>
  422820:	mov	w0, w0
  422824:	ldp	x29, x30, [sp], #16
  422828:	ret
  42282c:	nop
  422830:	stp	x29, x30, [sp, #-32]!
  422834:	mov	x29, sp
  422838:	str	x19, [sp, #16]
  42283c:	mov	x19, x0
  422840:	ldr	x0, [x0]
  422844:	bl	406b90 <free@plt>
  422848:	ldr	x0, [x19, #8]
  42284c:	ldr	x19, [sp, #16]
  422850:	ldp	x29, x30, [sp], #32
  422854:	b	406b90 <free@plt>
  422858:	stp	x29, x30, [sp, #-80]!
  42285c:	mov	x29, sp
  422860:	stp	x19, x20, [sp, #16]
  422864:	mov	x19, x0
  422868:	mov	x0, x1
  42286c:	stp	x21, x22, [sp, #32]
  422870:	mov	x22, x1
  422874:	stp	x23, x24, [sp, #48]
  422878:	bl	406680 <strlen@plt>
  42287c:	mov	x23, x0
  422880:	cbz	x19, 422944 <strcache_print_stats@@Base+0x3cc>
  422884:	ldr	x19, [x19]
  422888:	cbz	x19, 42292c <strcache_print_stats@@Base+0x3b4>
  42288c:	str	x25, [sp, #64]
  422890:	b	42289c <strcache_print_stats@@Base+0x324>
  422894:	ldr	x19, [x19]
  422898:	cbz	x19, 422928 <strcache_print_stats@@Base+0x3b0>
  42289c:	ldr	x2, [x19, #24]
  4228a0:	sub	x24, x23, x2
  4228a4:	cmp	x2, x23
  4228a8:	b.hi	422894 <strcache_print_stats@@Base+0x31c>  // b.pmore
  4228ac:	ldp	x20, x0, [x19, #8]
  4228b0:	add	x25, x24, #0x1
  4228b4:	mov	x1, x22
  4228b8:	sub	x2, x20, x0
  4228bc:	sub	x2, x2, #0x1
  4228c0:	add	x21, x22, x2
  4228c4:	cmp	x22, x21
  4228c8:	b.cs	4228d4 <strcache_print_stats@@Base+0x35c>  // b.hs, b.nlast
  4228cc:	bl	406930 <strncmp@plt>
  4228d0:	cbnz	w0, 422894 <strcache_print_stats@@Base+0x31c>
  4228d4:	ldrb	w1, [x20]
  4228d8:	ldrb	w0, [x21, x25]
  4228dc:	cmp	w0, w1
  4228e0:	b.ne	422894 <strcache_print_stats@@Base+0x31c>  // b.any
  4228e4:	add	x1, x24, #0x2
  4228e8:	add	x2, x20, #0x1
  4228ec:	add	x3, x21, x1
  4228f0:	cbz	w0, 422928 <strcache_print_stats@@Base+0x3b0>
  4228f4:	cmp	x3, x2
  4228f8:	b.eq	422928 <strcache_print_stats@@Base+0x3b0>  // b.none
  4228fc:	ldrb	w0, [x20, #1]
  422900:	ldrb	w2, [x21, x1]
  422904:	cmp	w2, w0
  422908:	b.ne	422894 <strcache_print_stats@@Base+0x31c>  // b.any
  42290c:	add	x1, x24, #0x3
  422910:	add	x0, x20, #0x2
  422914:	cbz	w2, 422928 <strcache_print_stats@@Base+0x3b0>
  422918:	add	x1, x21, x1
  42291c:	bl	406b40 <strcmp@plt>
  422920:	cbnz	w0, 422894 <strcache_print_stats@@Base+0x31c>
  422924:	nop
  422928:	ldr	x25, [sp, #64]
  42292c:	mov	x0, x19
  422930:	ldp	x19, x20, [sp, #16]
  422934:	ldp	x21, x22, [sp, #32]
  422938:	ldp	x23, x24, [sp, #48]
  42293c:	ldp	x29, x30, [sp], #80
  422940:	ret
  422944:	adrp	x0, 445000 <output_context@@Base+0x1250>
  422948:	ldr	x19, [x0, #3800]
  42294c:	b	422888 <strcache_print_stats@@Base+0x310>
  422950:	stp	x29, x30, [sp, #-32]!
  422954:	cmp	w2, #0x0
  422958:	adrp	x3, 422000 <print_rule_data_base@@Base+0x80>
  42295c:	adrp	x4, 422000 <print_rule_data_base@@Base+0x80>
  422960:	add	x3, x3, #0x9d8
  422964:	add	x4, x4, #0xcc0
  422968:	mov	x29, sp
  42296c:	mov	x2, x1
  422970:	csel	x1, x4, x3, ne  // ne = any
  422974:	stp	x19, x20, [sp, #16]
  422978:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  42297c:	mov	x20, x0
  422980:	bl	411f28 <hash_map_arg@@Base>
  422984:	mov	w2, #0x5                   	// #5
  422988:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  42298c:	mov	x0, #0x0                   	// #0
  422990:	add	x1, x1, #0x4e8
  422994:	bl	406cd0 <dcgettext@plt>
  422998:	ldr	x1, [x19, #384]
  42299c:	bl	406690 <fputs@plt>
  4229a0:	ldr	x3, [x19, #384]
  4229a4:	mov	x2, #0x2                   	// #2
  4229a8:	mov	x1, #0x1                   	// #1
  4229ac:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  4229b0:	add	x0, x0, #0x1f8
  4229b4:	bl	406be0 <fwrite@plt>
  4229b8:	ldr	x1, [x19, #384]
  4229bc:	mov	x0, x20
  4229c0:	bl	411fa0 <hash_print_stats@@Base>
  4229c4:	ldr	x1, [x19, #384]
  4229c8:	mov	w0, #0xa                   	// #10
  4229cc:	ldp	x19, x20, [sp, #16]
  4229d0:	ldp	x29, x30, [sp], #32
  4229d4:	b	406740 <putc@plt>
  4229d8:	stp	x29, x30, [sp, #-48]!
  4229dc:	mov	x29, sp
  4229e0:	ldrb	w2, [x0, #47]
  4229e4:	stp	x19, x20, [sp, #16]
  4229e8:	mov	x19, x0
  4229ec:	mov	x20, x1
  4229f0:	stp	x21, x22, [sp, #32]
  4229f4:	ubfx	x2, x2, #2, #3
  4229f8:	cmp	w2, #0x3
  4229fc:	b.eq	422c80 <strcache_print_stats@@Base+0x708>  // b.none
  422a00:	b.hi	422b64 <strcache_print_stats@@Base+0x5ec>  // b.pmore
  422a04:	cmp	w2, #0x1
  422a08:	b.eq	422c9c <strcache_print_stats@@Base+0x724>  // b.none
  422a0c:	cmp	w2, #0x2
  422a10:	b.ne	422b44 <strcache_print_stats@@Base+0x5cc>  // b.any
  422a14:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  422a18:	mov	w2, #0x5                   	// #5
  422a1c:	add	x1, x1, #0xc60
  422a20:	mov	x0, #0x0                   	// #0
  422a24:	bl	406cd0 <dcgettext@plt>
  422a28:	mov	x22, x0
  422a2c:	nop
  422a30:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  422a34:	mov	x2, #0x2                   	// #2
  422a38:	mov	x1, #0x1                   	// #1
  422a3c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  422a40:	ldr	x3, [x21, #384]
  422a44:	add	x0, x0, #0x1f8
  422a48:	bl	406be0 <fwrite@plt>
  422a4c:	ldr	x1, [x21, #384]
  422a50:	mov	x0, x22
  422a54:	bl	406690 <fputs@plt>
  422a58:	ldrsb	w0, [x19, #44]
  422a5c:	tbnz	w0, #31, 422c04 <strcache_print_stats@@Base+0x68c>
  422a60:	ldr	x0, [x19, #16]
  422a64:	cbz	x0, 422a8c <strcache_print_stats@@Base+0x514>
  422a68:	mov	w2, #0x5                   	// #5
  422a6c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422a70:	mov	x0, #0x0                   	// #0
  422a74:	add	x1, x1, #0x550
  422a78:	bl	406cd0 <dcgettext@plt>
  422a7c:	ldp	x1, x3, [x19, #16]
  422a80:	ldr	x2, [x19, #32]
  422a84:	add	x2, x3, x2
  422a88:	bl	406d60 <printf@plt>
  422a8c:	ldr	x1, [x21, #384]
  422a90:	mov	w0, #0xa                   	// #10
  422a94:	bl	406740 <putc@plt>
  422a98:	ldr	x1, [x21, #384]
  422a9c:	mov	x0, x20
  422aa0:	bl	406690 <fputs@plt>
  422aa4:	ldrb	w20, [x19, #44]
  422aa8:	tbnz	w20, #0, 422bb4 <strcache_print_stats@@Base+0x63c>
  422aac:	ldr	x1, [x19]
  422ab0:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x2c20>
  422ab4:	add	x2, x2, #0xab8
  422ab8:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422abc:	add	x0, x0, #0x580
  422ac0:	bl	406d60 <printf@plt>
  422ac4:	ldr	x0, [x19, #8]
  422ac8:	bl	418cf8 <next_token@@Base>
  422acc:	ldr	x20, [x19, #8]
  422ad0:	cmp	x20, x0
  422ad4:	b.eq	422ae0 <strcache_print_stats@@Base+0x568>  // b.none
  422ad8:	ldrb	w0, [x0]
  422adc:	cbz	w0, 422c40 <strcache_print_stats@@Base+0x6c8>
  422ae0:	ldrb	w0, [x19, #44]
  422ae4:	ldr	x1, [x21, #384]
  422ae8:	tbnz	w0, #0, 422c20 <strcache_print_stats@@Base+0x6a8>
  422aec:	ldrb	w0, [x20]
  422af0:	cbnz	w0, 422b0c <strcache_print_stats@@Base+0x594>
  422af4:	b	422b30 <strcache_print_stats@@Base+0x5b8>
  422af8:	ldrb	w0, [x20]
  422afc:	bl	406740 <putc@plt>
  422b00:	ldrb	w0, [x20, #1]!
  422b04:	ldr	x1, [x21, #384]
  422b08:	cbz	w0, 422b30 <strcache_print_stats@@Base+0x5b8>
  422b0c:	cmp	w0, #0x24
  422b10:	b.ne	422af8 <strcache_print_stats@@Base+0x580>  // b.any
  422b14:	bl	406740 <putc@plt>
  422b18:	ldr	x1, [x21, #384]
  422b1c:	ldrb	w0, [x20]
  422b20:	bl	406740 <putc@plt>
  422b24:	ldrb	w0, [x20, #1]!
  422b28:	ldr	x1, [x21, #384]
  422b2c:	cbnz	w0, 422b0c <strcache_print_stats@@Base+0x594>
  422b30:	ldp	x19, x20, [sp, #16]
  422b34:	mov	w0, #0xa                   	// #10
  422b38:	ldp	x21, x22, [sp, #32]
  422b3c:	ldp	x29, x30, [sp], #48
  422b40:	b	406740 <putc@plt>
  422b44:	cbnz	w2, 422cb8 <strcache_print_stats@@Base+0x740>
  422b48:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  422b4c:	mov	w2, #0x5                   	// #5
  422b50:	add	x1, x1, #0x228
  422b54:	mov	x0, #0x0                   	// #0
  422b58:	bl	406cd0 <dcgettext@plt>
  422b5c:	mov	x22, x0
  422b60:	b	422a30 <strcache_print_stats@@Base+0x4b8>
  422b64:	cmp	w2, #0x5
  422b68:	b.eq	422c68 <strcache_print_stats@@Base+0x6f0>  // b.none
  422b6c:	cmp	w2, #0x6
  422b70:	b.ne	422b90 <strcache_print_stats@@Base+0x618>  // b.any
  422b74:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  422b78:	mov	w2, #0x5                   	// #5
  422b7c:	add	x1, x1, #0x280
  422b80:	mov	x0, #0x0                   	// #0
  422b84:	bl	406cd0 <dcgettext@plt>
  422b88:	mov	x22, x0
  422b8c:	b	422a30 <strcache_print_stats@@Base+0x4b8>
  422b90:	cmp	w2, #0x4
  422b94:	b.ne	422cb8 <strcache_print_stats@@Base+0x740>  // b.any
  422b98:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  422b9c:	mov	w2, #0x5                   	// #5
  422ba0:	add	x1, x1, #0x260
  422ba4:	mov	x0, #0x0                   	// #0
  422ba8:	bl	406cd0 <dcgettext@plt>
  422bac:	mov	x22, x0
  422bb0:	b	422a30 <strcache_print_stats@@Base+0x4b8>
  422bb4:	ldr	x22, [x19, #8]
  422bb8:	mov	w1, #0xa                   	// #10
  422bbc:	mov	x0, x22
  422bc0:	bl	406bb0 <strchr@plt>
  422bc4:	ldr	x1, [x19]
  422bc8:	cbz	x0, 422be8 <strcache_print_stats@@Base+0x670>
  422bcc:	mov	x2, x22
  422bd0:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422bd4:	ldp	x19, x20, [sp, #16]
  422bd8:	add	x0, x0, #0x568
  422bdc:	ldp	x21, x22, [sp, #32]
  422be0:	ldp	x29, x30, [sp], #48
  422be4:	b	406d60 <printf@plt>
  422be8:	tst	x20, #0x2
  422bec:	adrp	x0, 42b000 <_IO_stdin_used@@Base+0x4c20>
  422bf0:	adrp	x2, 426000 <rpl_fcntl@@Base+0xf0>
  422bf4:	add	x0, x0, #0x350
  422bf8:	add	x2, x2, #0x5e8
  422bfc:	csel	x2, x2, x0, ne  // ne = any
  422c00:	b	422ab8 <strcache_print_stats@@Base+0x540>
  422c04:	ldr	x3, [x21, #384]
  422c08:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422c0c:	mov	x2, #0x8                   	// #8
  422c10:	mov	x1, #0x1                   	// #1
  422c14:	add	x0, x0, #0x540
  422c18:	bl	406be0 <fwrite@plt>
  422c1c:	b	422a60 <strcache_print_stats@@Base+0x4e8>
  422c20:	mov	x0, x20
  422c24:	bl	406690 <fputs@plt>
  422c28:	ldr	x1, [x21, #384]
  422c2c:	mov	w0, #0xa                   	// #10
  422c30:	ldp	x19, x20, [sp, #16]
  422c34:	ldp	x21, x22, [sp, #32]
  422c38:	ldp	x29, x30, [sp], #48
  422c3c:	b	406740 <putc@plt>
  422c40:	mov	x1, x20
  422c44:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422c48:	add	x0, x0, #0x588
  422c4c:	bl	406d60 <printf@plt>
  422c50:	ldr	x1, [x21, #384]
  422c54:	mov	w0, #0xa                   	// #10
  422c58:	ldp	x19, x20, [sp, #16]
  422c5c:	ldp	x21, x22, [sp, #32]
  422c60:	ldp	x29, x30, [sp], #48
  422c64:	b	406740 <putc@plt>
  422c68:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422c6c:	mov	x0, #0x0                   	// #0
  422c70:	add	x1, x1, #0x528
  422c74:	bl	406cd0 <dcgettext@plt>
  422c78:	mov	x22, x0
  422c7c:	b	422a30 <strcache_print_stats@@Base+0x4b8>
  422c80:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  422c84:	mov	w2, #0x5                   	// #5
  422c88:	add	x1, x1, #0x510
  422c8c:	mov	x0, #0x0                   	// #0
  422c90:	bl	406cd0 <dcgettext@plt>
  422c94:	mov	x22, x0
  422c98:	b	422a30 <strcache_print_stats@@Base+0x4b8>
  422c9c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  422ca0:	mov	w2, #0x5                   	// #5
  422ca4:	add	x1, x1, #0x230
  422ca8:	mov	x0, #0x0                   	// #0
  422cac:	bl	406cd0 <dcgettext@plt>
  422cb0:	mov	x22, x0
  422cb4:	b	422a30 <strcache_print_stats@@Base+0x4b8>
  422cb8:	bl	406ab0 <abort@plt>
  422cbc:	nop
  422cc0:	ldrb	w2, [x0, #47]
  422cc4:	and	w2, w2, #0x1c
  422cc8:	cmp	w2, #0x18
  422ccc:	b.eq	422cd4 <strcache_print_stats@@Base+0x75c>  // b.none
  422cd0:	ret
  422cd4:	b	4229d8 <strcache_print_stats@@Base+0x460>
  422cd8:	ldrb	w2, [x0, #47]
  422cdc:	and	w2, w2, #0x1c
  422ce0:	cmp	w2, #0x18
  422ce4:	b.ne	422cec <strcache_print_stats@@Base+0x774>  // b.any
  422ce8:	ret
  422cec:	b	4229d8 <strcache_print_stats@@Base+0x460>

0000000000422cf0 <create_pattern_var@@Base>:
  422cf0:	stp	x29, x30, [sp, #-48]!
  422cf4:	mov	x29, sp
  422cf8:	stp	x19, x20, [sp, #16]
  422cfc:	add	x20, x1, #0x1
  422d00:	str	x21, [sp, #32]
  422d04:	mov	x21, x0
  422d08:	bl	406680 <strlen@plt>
  422d0c:	mov	x19, x0
  422d10:	mov	x0, #0x50                  	// #80
  422d14:	bl	418a78 <xcalloc@@Base>
  422d18:	adrp	x2, 445000 <output_context@@Base+0x1250>
  422d1c:	add	x4, x2, #0xed8
  422d20:	ldr	x1, [x2, #3800]
  422d24:	cbz	x1, 422db0 <create_pattern_var@@Base+0xc0>
  422d28:	cmp	x19, #0xff
  422d2c:	b.hi	422d68 <create_pattern_var@@Base+0x78>  // b.pmore
  422d30:	add	x2, x4, #0x8
  422d34:	ldr	x2, [x2, x19, lsl #3]
  422d38:	cbz	x2, 422d68 <create_pattern_var@@Base+0x78>
  422d3c:	ldr	x1, [x2]
  422d40:	str	x1, [x0]
  422d44:	str	x0, [x2]
  422d48:	stp	x20, x21, [x0, #8]
  422d4c:	str	x19, [x0, #24]
  422d50:	add	x4, x4, #0x8
  422d54:	ldr	x21, [sp, #32]
  422d58:	str	x0, [x4, x19, lsl #3]
  422d5c:	ldp	x19, x20, [sp, #16]
  422d60:	ldp	x29, x30, [sp], #48
  422d64:	ret
  422d68:	mov	x3, x4
  422d6c:	b	422d7c <create_pattern_var@@Base+0x8c>
  422d70:	mov	x3, x1
  422d74:	ldr	x1, [x1]
  422d78:	cbz	x1, 422d88 <create_pattern_var@@Base+0x98>
  422d7c:	ldr	x2, [x1, #24]
  422d80:	cmp	x2, x19
  422d84:	b.ls	422d70 <create_pattern_var@@Base+0x80>  // b.plast
  422d88:	str	x1, [x0]
  422d8c:	str	x0, [x3]
  422d90:	stp	x20, x21, [x0, #8]
  422d94:	cmp	x19, #0xff
  422d98:	str	x19, [x0, #24]
  422d9c:	b.ls	422d50 <create_pattern_var@@Base+0x60>  // b.plast
  422da0:	ldp	x19, x20, [sp, #16]
  422da4:	ldr	x21, [sp, #32]
  422da8:	ldp	x29, x30, [sp], #48
  422dac:	ret
  422db0:	str	x0, [x2, #3800]
  422db4:	str	xzr, [x0]
  422db8:	b	422d90 <create_pattern_var@@Base+0xa0>
  422dbc:	nop

0000000000422dc0 <init_hash_global_variable_set@@Base>:
  422dc0:	adrp	x0, 445000 <output_context@@Base+0x1250>
  422dc4:	add	x0, x0, #0xed8
  422dc8:	add	x0, x0, #0x808
  422dcc:	adrp	x4, 422000 <print_rule_data_base@@Base+0x80>
  422dd0:	adrp	x3, 422000 <print_rule_data_base@@Base+0x80>
  422dd4:	add	x4, x4, #0x7d0
  422dd8:	add	x3, x3, #0x7c8
  422ddc:	adrp	x2, 422000 <print_rule_data_base@@Base+0x80>
  422de0:	mov	x1, #0x20b                 	// #523
  422de4:	add	x2, x2, #0x808
  422de8:	b	411928 <hash_init@@Base>
  422dec:	nop

0000000000422df0 <define_variable_in_set@@Base>:
  422df0:	stp	x29, x30, [sp, #-144]!
  422df4:	adrp	x7, 445000 <output_context@@Base+0x1250>
  422df8:	add	x7, x7, #0xed8
  422dfc:	cmp	x5, #0x0
  422e00:	add	x7, x7, #0x808
  422e04:	mov	x29, sp
  422e08:	str	x27, [sp, #80]
  422e0c:	csel	x27, x7, x5, eq  // eq = none
  422e10:	stp	x19, x20, [sp, #16]
  422e14:	mov	x19, x0
  422e18:	stp	x21, x22, [sp, #32]
  422e1c:	mov	w21, w3
  422e20:	mov	w22, w4
  422e24:	stp	x23, x24, [sp, #48]
  422e28:	mov	x23, x1
  422e2c:	add	x1, sp, #0x60
  422e30:	stp	x25, x26, [sp, #64]
  422e34:	mov	x26, x2
  422e38:	mov	x25, x6
  422e3c:	str	x0, [sp, #96]
  422e40:	mov	x0, x27
  422e44:	str	w23, [sp, #136]
  422e48:	bl	4119e0 <hash_find_slot@@Base>
  422e4c:	mov	x24, x0
  422e50:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  422e54:	mov	w1, #0x3                   	// #3
  422e58:	ldr	w0, [x2, #1624]
  422e5c:	ldr	x20, [x24]
  422e60:	cmp	w0, #0x0
  422e64:	ccmp	w21, #0x1, #0x0, ne  // ne = any
  422e68:	csel	w21, w21, w1, ne  // ne = any
  422e6c:	cbz	x20, 422eb4 <define_variable_in_set@@Base+0xc4>
  422e70:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  422e74:	ldr	x2, [x2, #48]
  422e78:	cmp	x2, x20
  422e7c:	b.eq	422eb4 <define_variable_in_set@@Base+0xc4>  // b.none
  422e80:	cbnz	w0, 422fd0 <define_variable_in_set@@Base+0x1e0>
  422e84:	ldrb	w0, [x20, #47]
  422e88:	ubfx	x0, x0, #2, #3
  422e8c:	cmp	w21, w0
  422e90:	b.ge	422fec <define_variable_in_set@@Base+0x1fc>  // b.tcont
  422e94:	mov	x0, x20
  422e98:	ldp	x19, x20, [sp, #16]
  422e9c:	ldp	x21, x22, [sp, #32]
  422ea0:	ldp	x23, x24, [sp, #48]
  422ea4:	ldp	x25, x26, [sp, #64]
  422ea8:	ldr	x27, [sp, #80]
  422eac:	ldp	x29, x30, [sp], #144
  422eb0:	ret
  422eb4:	mov	x0, #0x30                  	// #48
  422eb8:	bl	418a78 <xcalloc@@Base>
  422ebc:	mov	x20, x0
  422ec0:	mov	x1, x23
  422ec4:	mov	x0, x19
  422ec8:	bl	418c80 <xstrndup@@Base>
  422ecc:	mov	x1, x20
  422ed0:	mov	x2, x24
  422ed4:	str	x0, [x20]
  422ed8:	mov	x0, x27
  422edc:	str	w23, [x20, #40]
  422ee0:	bl	411b38 <hash_insert_at@@Base>
  422ee4:	adrp	x0, 445000 <output_context@@Base+0x1250>
  422ee8:	add	x0, x0, #0xed8
  422eec:	add	x1, x0, #0x808
  422ef0:	cmp	x27, x1
  422ef4:	b.eq	423054 <define_variable_in_set@@Base+0x264>  // b.none
  422ef8:	mov	x0, x26
  422efc:	bl	418c60 <xstrdup@@Base>
  422f00:	str	x0, [x20, #8]
  422f04:	cbz	x25, 422f18 <define_variable_in_set@@Base+0x128>
  422f08:	ldp	x0, x1, [x25]
  422f0c:	stp	x0, x1, [x20, #16]
  422f10:	ldr	x0, [x25, #16]
  422f14:	str	x0, [x20, #32]
  422f18:	ldr	w1, [x20, #44]
  422f1c:	ubfiz	w0, w21, #26, #3
  422f20:	and	w22, w22, #0x1
  422f24:	mov	w21, #0x20                  	// #32
  422f28:	movk	w21, #0x6000, lsl #16
  422f2c:	mov	w2, #0xffde                	// #65502
  422f30:	orr	w21, w22, w21
  422f34:	movk	w2, #0x83ff, lsl #16
  422f38:	orr	w0, w0, w21
  422f3c:	and	w1, w1, w2
  422f40:	orr	w0, w0, w1
  422f44:	str	w0, [x20, #44]
  422f48:	ldrb	w1, [x19]
  422f4c:	and	w0, w1, #0xffffffdf
  422f50:	cmp	w1, #0x5f
  422f54:	sub	w0, w0, #0x41
  422f58:	and	w0, w0, #0xff
  422f5c:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  422f60:	b.hi	422fa4 <define_variable_in_set@@Base+0x1b4>  // b.pmore
  422f64:	ldrb	w2, [x19, #1]
  422f68:	add	x3, x19, #0x1
  422f6c:	cbnz	w2, 422f7c <define_variable_in_set@@Base+0x18c>
  422f70:	b	422e94 <define_variable_in_set@@Base+0xa4>
  422f74:	ldrb	w2, [x3, #1]!
  422f78:	cbz	w2, 422e94 <define_variable_in_set@@Base+0xa4>
  422f7c:	and	w1, w2, #0xffffffdf
  422f80:	cmp	w2, #0x5f
  422f84:	sub	w1, w1, #0x41
  422f88:	b.eq	422f74 <define_variable_in_set@@Base+0x184>  // b.none
  422f8c:	and	w1, w1, #0xff
  422f90:	sub	w2, w2, #0x30
  422f94:	cmp	w1, #0x19
  422f98:	b.ls	422f74 <define_variable_in_set@@Base+0x184>  // b.plast
  422f9c:	cmp	w2, #0x9
  422fa0:	b.ls	422f74 <define_variable_in_set@@Base+0x184>  // b.plast
  422fa4:	ldrb	w0, [x20, #44]
  422fa8:	ldp	x21, x22, [sp, #32]
  422fac:	and	w0, w0, #0xffffffdf
  422fb0:	strb	w0, [x20, #44]
  422fb4:	mov	x0, x20
  422fb8:	ldp	x19, x20, [sp, #16]
  422fbc:	ldp	x23, x24, [sp, #48]
  422fc0:	ldp	x25, x26, [sp, #64]
  422fc4:	ldr	x27, [sp, #80]
  422fc8:	ldp	x29, x30, [sp], #144
  422fcc:	ret
  422fd0:	ldrb	w0, [x20, #47]
  422fd4:	and	w2, w0, #0x1c
  422fd8:	cmp	w2, #0x4
  422fdc:	b.eq	423074 <define_variable_in_set@@Base+0x284>  // b.none
  422fe0:	ubfx	x0, x0, #2, #3
  422fe4:	cmp	w21, w0
  422fe8:	b.lt	422e94 <define_variable_in_set@@Base+0xa4>  // b.tstop
  422fec:	ldr	x0, [x20, #8]
  422ff0:	bl	406b90 <free@plt>
  422ff4:	mov	x0, x26
  422ff8:	bl	418c60 <xstrdup@@Base>
  422ffc:	str	x0, [x20, #8]
  423000:	cbz	x25, 423088 <define_variable_in_set@@Base+0x298>
  423004:	ldp	x0, x1, [x25]
  423008:	stp	x0, x1, [x20, #16]
  42300c:	ldr	x0, [x25, #16]
  423010:	str	x0, [x20, #32]
  423014:	ldr	w1, [x20, #44]
  423018:	ubfiz	w0, w21, #26, #3
  42301c:	and	w22, w22, #0x1
  423020:	and	w1, w1, #0xfffffffe
  423024:	orr	w0, w0, w22
  423028:	and	w1, w1, #0xe3ffffff
  42302c:	orr	w0, w0, w1
  423030:	str	w0, [x20, #44]
  423034:	mov	x0, x20
  423038:	ldp	x19, x20, [sp, #16]
  42303c:	ldp	x21, x22, [sp, #32]
  423040:	ldp	x23, x24, [sp, #48]
  423044:	ldp	x25, x26, [sp, #64]
  423048:	ldr	x27, [sp, #80]
  42304c:	ldp	x29, x30, [sp], #144
  423050:	ret
  423054:	ldr	x1, [x0, #2144]
  423058:	add	x1, x1, #0x1
  42305c:	str	x1, [x0, #2144]
  423060:	mov	x0, x26
  423064:	bl	418c60 <xstrdup@@Base>
  423068:	str	x0, [x20, #8]
  42306c:	cbnz	x25, 422f08 <define_variable_in_set@@Base+0x118>
  423070:	b	422f18 <define_variable_in_set@@Base+0x128>
  423074:	mov	w2, w0
  423078:	mov	w0, w1
  42307c:	bfi	w2, w1, #2, #3
  423080:	strb	w2, [x20, #47]
  423084:	b	422e8c <define_variable_in_set@@Base+0x9c>
  423088:	str	xzr, [x20, #16]
  42308c:	b	423014 <define_variable_in_set@@Base+0x224>

0000000000423090 <free_variable_set@@Base>:
  423090:	stp	x29, x30, [sp, #-32]!
  423094:	adrp	x1, 422000 <print_rule_data_base@@Base+0x80>
  423098:	add	x1, x1, #0x830
  42309c:	mov	x29, sp
  4230a0:	str	x19, [sp, #16]
  4230a4:	mov	x19, x0
  4230a8:	ldr	x0, [x0, #8]
  4230ac:	bl	411ec0 <hash_map@@Base>
  4230b0:	ldr	x0, [x19, #8]
  4230b4:	mov	w1, #0x1                   	// #1
  4230b8:	bl	411e68 <hash_free@@Base>
  4230bc:	ldr	x0, [x19, #8]
  4230c0:	bl	406b90 <free@plt>
  4230c4:	mov	x0, x19
  4230c8:	ldr	x19, [sp, #16]
  4230cc:	ldp	x29, x30, [sp], #32
  4230d0:	b	406b90 <free@plt>
  4230d4:	nop

00000000004230d8 <undefine_variable_in_set@@Base>:
  4230d8:	stp	x29, x30, [sp, #-96]!
  4230dc:	adrp	x4, 445000 <output_context@@Base+0x1250>
  4230e0:	mov	x29, sp
  4230e4:	stp	x19, x20, [sp, #16]
  4230e8:	mov	x19, x3
  4230ec:	add	x3, x4, #0xed8
  4230f0:	cmp	x19, #0x0
  4230f4:	add	x3, x3, #0x808
  4230f8:	csel	x19, x3, x19, eq  // eq = none
  4230fc:	mov	w20, w2
  423100:	mov	x3, x0
  423104:	mov	x2, x1
  423108:	mov	x0, x19
  42310c:	add	x1, sp, #0x30
  423110:	str	x21, [sp, #32]
  423114:	str	x3, [sp, #48]
  423118:	str	w2, [sp, #88]
  42311c:	bl	4119e0 <hash_find_slot@@Base>
  423120:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  423124:	mov	w2, #0x3                   	// #3
  423128:	ldr	x21, [x0]
  42312c:	ldr	w1, [x1, #1624]
  423130:	cmp	w1, #0x0
  423134:	ccmp	w20, #0x1, #0x0, ne  // ne = any
  423138:	csel	w20, w20, w2, ne  // ne = any
  42313c:	cbz	x21, 423164 <undefine_variable_in_set@@Base+0x8c>
  423140:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  423144:	ldr	x3, [x3, #48]
  423148:	cmp	x3, x21
  42314c:	b.eq	423164 <undefine_variable_in_set@@Base+0x8c>  // b.none
  423150:	cbnz	w1, 423174 <undefine_variable_in_set@@Base+0x9c>
  423154:	ldrb	w1, [x21, #47]
  423158:	ubfx	x1, x1, #2, #3
  42315c:	cmp	w20, w1
  423160:	b.ge	423190 <undefine_variable_in_set@@Base+0xb8>  // b.tcont
  423164:	ldp	x19, x20, [sp, #16]
  423168:	ldr	x21, [sp, #32]
  42316c:	ldp	x29, x30, [sp], #96
  423170:	ret
  423174:	ldrb	w1, [x21, #47]
  423178:	and	w3, w1, #0x1c
  42317c:	cmp	w3, #0x4
  423180:	b.eq	4231d8 <undefine_variable_in_set@@Base+0x100>  // b.none
  423184:	ubfx	x1, x1, #2, #3
  423188:	cmp	w20, w1
  42318c:	b.lt	423164 <undefine_variable_in_set@@Base+0x8c>  // b.tstop
  423190:	mov	x1, x0
  423194:	mov	x0, x19
  423198:	bl	411d88 <hash_delete_at@@Base>
  42319c:	ldr	x0, [x21]
  4231a0:	bl	406b90 <free@plt>
  4231a4:	ldr	x0, [x21, #8]
  4231a8:	bl	406b90 <free@plt>
  4231ac:	mov	x0, x21
  4231b0:	bl	406b90 <free@plt>
  4231b4:	adrp	x0, 445000 <output_context@@Base+0x1250>
  4231b8:	add	x0, x0, #0xed8
  4231bc:	add	x1, x0, #0x808
  4231c0:	cmp	x19, x1
  4231c4:	b.ne	423164 <undefine_variable_in_set@@Base+0x8c>  // b.any
  4231c8:	ldr	x1, [x0, #2144]
  4231cc:	add	x1, x1, #0x1
  4231d0:	str	x1, [x0, #2144]
  4231d4:	b	423164 <undefine_variable_in_set@@Base+0x8c>
  4231d8:	mov	w3, w1
  4231dc:	mov	w1, w2
  4231e0:	bfi	w3, w2, #2, #3
  4231e4:	strb	w3, [x21, #47]
  4231e8:	b	42315c <undefine_variable_in_set@@Base+0x84>
  4231ec:	nop

00000000004231f0 <lookup_variable@@Base>:
  4231f0:	stp	x29, x30, [sp, #-160]!
  4231f4:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  4231f8:	mov	x29, sp
  4231fc:	stp	x19, x20, [sp, #16]
  423200:	ldr	x19, [x2, #288]
  423204:	str	x0, [sp, #112]
  423208:	str	w1, [sp, #152]
  42320c:	cbz	x19, 42324c <lookup_variable@@Base+0x5c>
  423210:	stp	x21, x22, [sp, #32]
  423214:	mov	w21, #0x0                   	// #0
  423218:	add	x1, sp, #0x70
  42321c:	ldr	x0, [x19, #8]
  423220:	bl	411b08 <hash_find_item@@Base>
  423224:	mov	x20, x0
  423228:	cbz	x0, 423238 <lookup_variable@@Base+0x48>
  42322c:	ldrb	w0, [x0, #44]
  423230:	cbz	w21, 423260 <lookup_variable@@Base+0x70>
  423234:	tbz	w0, #7, 423260 <lookup_variable@@Base+0x70>
  423238:	ldr	w0, [x19, #16]
  42323c:	ldr	x19, [x19]
  423240:	orr	w21, w21, w0
  423244:	cbnz	x19, 423218 <lookup_variable@@Base+0x28>
  423248:	ldp	x21, x22, [sp, #32]
  42324c:	mov	x20, #0x0                   	// #0
  423250:	mov	x0, x20
  423254:	ldp	x19, x20, [sp, #16]
  423258:	ldp	x29, x30, [sp], #160
  42325c:	ret
  423260:	tbnz	w0, #4, 423278 <lookup_variable@@Base+0x88>
  423264:	mov	x0, x20
  423268:	ldp	x19, x20, [sp, #16]
  42326c:	ldp	x21, x22, [sp, #32]
  423270:	ldp	x29, x30, [sp], #160
  423274:	ret
  423278:	stp	x27, x28, [sp, #80]
  42327c:	adrp	x28, 445000 <output_context@@Base+0x1250>
  423280:	add	x28, x28, #0xed8
  423284:	ldr	x1, [x28, #2144]
  423288:	ldr	x0, [x28, #2152]
  42328c:	cmp	x1, x0
  423290:	b.eq	4232b4 <lookup_variable@@Base+0xc4>  // b.none
  423294:	ldr	x0, [x20]
  423298:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  42329c:	add	x1, x1, #0x688
  4232a0:	cmp	x0, x1
  4232a4:	b.eq	4232e0 <lookup_variable@@Base+0xf0>  // b.none
  4232a8:	ldrb	w1, [x0]
  4232ac:	cmp	w1, #0x2e
  4232b0:	b.eq	4232cc <lookup_variable@@Base+0xdc>  // b.none
  4232b4:	mov	x0, x20
  4232b8:	ldp	x19, x20, [sp, #16]
  4232bc:	ldp	x21, x22, [sp, #32]
  4232c0:	ldp	x27, x28, [sp, #80]
  4232c4:	ldp	x29, x30, [sp], #160
  4232c8:	ret
  4232cc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4232d0:	add	x0, x0, #0x1
  4232d4:	add	x1, x1, #0x689
  4232d8:	bl	406b40 <strcmp@plt>
  4232dc:	cbnz	w0, 4232b4 <lookup_variable@@Base+0xc4>
  4232e0:	ldr	x21, [x20, #8]
  4232e4:	stp	x23, x24, [sp, #48]
  4232e8:	mov	x0, x21
  4232ec:	bl	406680 <strlen@plt>
  4232f0:	mov	x2, #0xf7cf                	// #63439
  4232f4:	lsr	x1, x0, #2
  4232f8:	movk	x2, #0xe353, lsl #16
  4232fc:	mov	x0, x21
  423300:	movk	x2, #0x9ba5, lsl #32
  423304:	movk	x2, #0x20c4, lsl #48
  423308:	ldr	x19, [x28, #2056]
  42330c:	umulh	x1, x1, x2
  423310:	ldr	x24, [x28, #2088]
  423314:	lsr	x1, x1, #4
  423318:	add	x1, x1, #0x1
  42331c:	add	x24, x19, x24, lsl #3
  423320:	lsl	x23, x1, #5
  423324:	sub	x23, x23, x1
  423328:	add	x1, x1, x23, lsl #2
  42332c:	lsl	x23, x1, #2
  423330:	mov	x1, x23
  423334:	bl	418aa0 <xrealloc@@Base>
  423338:	str	x0, [x20, #8]
  42333c:	cmp	x19, x24
  423340:	mov	x21, x0
  423344:	b.cs	4233f0 <lookup_variable@@Base+0x200>  // b.hs, b.nlast
  423348:	adrp	x27, 443000 <expanding_var@@Base+0x338>
  42334c:	stp	x25, x26, [sp, #64]
  423350:	mov	x26, #0x0                   	// #0
  423354:	mov	w25, #0x20                  	// #32
  423358:	b	423378 <lookup_variable@@Base+0x188>
  42335c:	ldr	x1, [x22]
  423360:	mov	x0, x21
  423364:	add	x21, x21, x2
  423368:	bl	406640 <memcpy@plt>
  42336c:	strb	w25, [x21], #1
  423370:	cmp	x24, x19
  423374:	b.ls	4233ec <lookup_variable@@Base+0x1fc>  // b.plast
  423378:	ldr	x22, [x19]
  42337c:	add	x19, x19, #0x8
  423380:	cbz	x22, 423370 <lookup_variable@@Base+0x180>
  423384:	ldr	x0, [x27, #48]
  423388:	cmp	x22, x0
  42338c:	b.eq	423370 <lookup_variable@@Base+0x180>  // b.none
  423390:	ldr	w2, [x22, #40]
  423394:	add	w1, w2, #0x1
  423398:	sxtw	x2, w2
  42339c:	add	x26, x26, w1, sxtw
  4233a0:	cmp	x23, x26
  4233a4:	b.cs	42335c <lookup_variable@@Base+0x16c>  // b.hs, b.nlast
  4233a8:	mov	w0, #0x4dd3                	// #19923
  4233ac:	str	x2, [sp, #104]
  4233b0:	movk	w0, #0x1062, lsl #16
  4233b4:	mov	w2, #0x1f4                 	// #500
  4233b8:	smull	x5, w1, w0
  4233bc:	ldr	x0, [x20, #8]
  4233c0:	asr	x5, x5, #37
  4233c4:	sub	w1, w5, w1, asr #31
  4233c8:	sub	x21, x21, x0
  4233cc:	madd	w1, w1, w2, w2
  4233d0:	add	x23, x23, w1, sxtw
  4233d4:	mov	x1, x23
  4233d8:	bl	418aa0 <xrealloc@@Base>
  4233dc:	add	x21, x0, x21
  4233e0:	str	x0, [x20, #8]
  4233e4:	ldr	x2, [sp, #104]
  4233e8:	b	42335c <lookup_variable@@Base+0x16c>
  4233ec:	ldp	x25, x26, [sp, #64]
  4233f0:	sturb	wzr, [x21, #-1]
  4233f4:	ldr	x0, [x28, #2144]
  4233f8:	str	x0, [x28, #2152]
  4233fc:	ldp	x21, x22, [sp, #32]
  423400:	ldp	x23, x24, [sp, #48]
  423404:	ldp	x27, x28, [sp, #80]
  423408:	b	423250 <lookup_variable@@Base+0x60>
  42340c:	nop

0000000000423410 <lookup_variable_in_set@@Base>:
  423410:	stp	x29, x30, [sp, #-64]!
  423414:	mov	x4, x0
  423418:	mov	x3, x1
  42341c:	mov	x29, sp
  423420:	add	x1, sp, #0x10
  423424:	mov	x0, x2
  423428:	str	x4, [sp, #16]
  42342c:	str	w3, [sp, #56]
  423430:	bl	411b08 <hash_find_item@@Base>
  423434:	ldp	x29, x30, [sp], #64
  423438:	ret
  42343c:	nop

0000000000423440 <create_new_variable_set@@Base>:
  423440:	stp	x29, x30, [sp, #-32]!
  423444:	mov	x0, #0x58                  	// #88
  423448:	mov	x29, sp
  42344c:	str	x19, [sp, #16]
  423450:	bl	418a50 <xmalloc@@Base>
  423454:	adrp	x4, 422000 <print_rule_data_base@@Base+0x80>
  423458:	adrp	x3, 422000 <print_rule_data_base@@Base+0x80>
  42345c:	add	x4, x4, #0x7d0
  423460:	add	x3, x3, #0x7c8
  423464:	adrp	x2, 422000 <print_rule_data_base@@Base+0x80>
  423468:	add	x2, x2, #0x808
  42346c:	mov	x1, #0xd                   	// #13
  423470:	mov	x19, x0
  423474:	bl	411928 <hash_init@@Base>
  423478:	mov	x0, #0x18                  	// #24
  42347c:	bl	418a50 <xmalloc@@Base>
  423480:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  423484:	str	wzr, [x0, #16]
  423488:	ldr	x2, [x2, #288]
  42348c:	stp	x2, x19, [x0]
  423490:	ldr	x19, [sp, #16]
  423494:	ldp	x29, x30, [sp], #32
  423498:	ret
  42349c:	nop

00000000004234a0 <push_new_variable_scope@@Base>:
  4234a0:	stp	x29, x30, [sp, #-16]!
  4234a4:	mov	x29, sp
  4234a8:	bl	423440 <create_new_variable_set@@Base>
  4234ac:	adrp	x3, 443000 <expanding_var@@Base+0x338>
  4234b0:	add	x1, x3, #0x120
  4234b4:	ldr	x2, [x0]
  4234b8:	str	x0, [x3, #288]
  4234bc:	add	x1, x1, #0x8
  4234c0:	cmp	x2, x1
  4234c4:	b.eq	4234d0 <push_new_variable_scope@@Base+0x30>  // b.none
  4234c8:	ldp	x29, x30, [sp], #16
  4234cc:	ret
  4234d0:	ldr	x4, [x2, #8]
  4234d4:	ldr	x1, [x0, #8]
  4234d8:	str	x4, [x0, #8]
  4234dc:	str	x1, [x2, #8]
  4234e0:	ldr	x1, [x2]
  4234e4:	str	x1, [x0]
  4234e8:	str	x0, [x2]
  4234ec:	mov	x0, x2
  4234f0:	str	x2, [x3, #288]
  4234f4:	ldp	x29, x30, [sp], #16
  4234f8:	ret
  4234fc:	nop

0000000000423500 <pop_variable_scope@@Base>:
  423500:	stp	x29, x30, [sp, #-32]!
  423504:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  423508:	add	x3, x1, #0x120
  42350c:	mov	x29, sp
  423510:	ldr	x0, [x1, #288]
  423514:	str	x19, [sp, #16]
  423518:	add	x2, x3, #0x8
  42351c:	cmp	x0, x2
  423520:	b.eq	42355c <pop_variable_scope@@Base+0x5c>  // b.none
  423524:	ldp	x2, x19, [x0]
  423528:	str	x2, [x1, #288]
  42352c:	bl	406b90 <free@plt>
  423530:	mov	x0, x19
  423534:	adrp	x1, 422000 <print_rule_data_base@@Base+0x80>
  423538:	add	x1, x1, #0x830
  42353c:	bl	411ec0 <hash_map@@Base>
  423540:	mov	x0, x19
  423544:	mov	w1, #0x1                   	// #1
  423548:	bl	411e68 <hash_free@@Base>
  42354c:	mov	x0, x19
  423550:	ldr	x19, [sp, #16]
  423554:	ldp	x29, x30, [sp], #32
  423558:	b	406b90 <free@plt>
  42355c:	ldr	x0, [x0]
  423560:	ldr	x19, [x2, #8]
  423564:	ldr	x1, [x0]
  423568:	str	x1, [x3, #8]
  42356c:	ldr	x1, [x0, #8]
  423570:	str	x1, [x2, #8]
  423574:	ldr	w1, [x0, #16]
  423578:	str	w1, [x2, #16]
  42357c:	b	42352c <pop_variable_scope@@Base+0x2c>

0000000000423580 <merge_variable_set_lists@@Base>:
  423580:	stp	x29, x30, [sp, #-112]!
  423584:	cmp	x1, #0x0
  423588:	mov	x29, sp
  42358c:	stp	x19, x20, [sp, #16]
  423590:	mov	x20, x1
  423594:	stp	x25, x26, [sp, #64]
  423598:	adrp	x26, 443000 <expanding_var@@Base+0x338>
  42359c:	add	x26, x26, #0x120
  4235a0:	add	x1, x26, #0x8
  4235a4:	ccmp	x20, x1, #0x4, ne  // ne = any
  4235a8:	b.eq	4236d8 <merge_variable_set_lists@@Base+0x158>  // b.none
  4235ac:	ldr	x25, [x0]
  4235b0:	cbz	x25, 4236d4 <merge_variable_set_lists@@Base+0x154>
  4235b4:	cmp	x25, x1
  4235b8:	b.eq	4236d4 <merge_variable_set_lists@@Base+0x154>  // b.none
  4235bc:	cmp	x25, x20
  4235c0:	b.eq	4236d8 <merge_variable_set_lists@@Base+0x158>  // b.none
  4235c4:	mov	x0, x25
  4235c8:	b	4235d4 <merge_variable_set_lists@@Base+0x54>
  4235cc:	cmp	x20, x0
  4235d0:	b.eq	4236d8 <merge_variable_set_lists@@Base+0x158>  // b.none
  4235d4:	ldr	x0, [x0]
  4235d8:	cmp	x0, x1
  4235dc:	b.ne	4235cc <merge_variable_set_lists@@Base+0x4c>  // b.any
  4235e0:	add	x26, x26, #0x8
  4235e4:	stp	x27, x28, [sp, #80]
  4235e8:	adrp	x27, 445000 <output_context@@Base+0x1250>
  4235ec:	add	x27, x27, #0xed8
  4235f0:	stp	x21, x22, [sp, #32]
  4235f4:	add	x0, x27, #0x808
  4235f8:	stp	x23, x24, [sp, #48]
  4235fc:	adrp	x24, 443000 <expanding_var@@Base+0x338>
  423600:	str	x0, [sp, #104]
  423604:	nop
  423608:	ldr	x0, [x20, #8]
  42360c:	ldr	x21, [x25, #8]
  423610:	ldr	x28, [x0]
  423614:	ldr	x22, [x0, #32]
  423618:	ldr	x1, [sp, #104]
  42361c:	add	x22, x28, x22, lsl #3
  423620:	cmp	x21, x1
  423624:	cset	w23, eq  // eq = none
  423628:	cmp	x28, x22
  42362c:	ldr	x20, [x20]
  423630:	b.cs	4236b8 <merge_variable_set_lists@@Base+0x138>  // b.hs, b.nlast
  423634:	and	x23, x23, #0xff
  423638:	b	423658 <merge_variable_set_lists@@Base+0xd8>
  42363c:	ldr	x0, [x19, #8]
  423640:	bl	406b90 <free@plt>
  423644:	mov	x0, x19
  423648:	bl	406b90 <free@plt>
  42364c:	add	x28, x28, #0x8
  423650:	cmp	x22, x28
  423654:	b.ls	4236b8 <merge_variable_set_lists@@Base+0x138>  // b.plast
  423658:	ldr	x19, [x28]
  42365c:	cbz	x19, 42364c <merge_variable_set_lists@@Base+0xcc>
  423660:	ldr	x2, [x24, #48]
  423664:	mov	x1, x19
  423668:	mov	x0, x21
  42366c:	cmp	x19, x2
  423670:	b.eq	42364c <merge_variable_set_lists@@Base+0xcc>  // b.none
  423674:	bl	4119e0 <hash_find_slot@@Base>
  423678:	mov	x2, x0
  42367c:	mov	x1, x19
  423680:	mov	x0, x21
  423684:	ldr	x4, [x2]
  423688:	cbz	x4, 423698 <merge_variable_set_lists@@Base+0x118>
  42368c:	ldr	x5, [x24, #48]
  423690:	cmp	x4, x5
  423694:	b.ne	42363c <merge_variable_set_lists@@Base+0xbc>  // b.any
  423698:	bl	411b38 <hash_insert_at@@Base>
  42369c:	add	x28, x28, #0x8
  4236a0:	ldr	x0, [x27, #2144]
  4236a4:	cmp	x22, x28
  4236a8:	add	x0, x0, x23
  4236ac:	str	x0, [x27, #2144]
  4236b0:	b.hi	423658 <merge_variable_set_lists@@Base+0xd8>  // b.pmore
  4236b4:	nop
  4236b8:	cmp	x20, x26
  4236bc:	ldr	x0, [x25]
  4236c0:	b.eq	423708 <merge_variable_set_lists@@Base+0x188>  // b.none
  4236c4:	cmp	x0, x26
  4236c8:	b.eq	4236e8 <merge_variable_set_lists@@Base+0x168>  // b.none
  4236cc:	mov	x25, x0
  4236d0:	b	423608 <merge_variable_set_lists@@Base+0x88>
  4236d4:	str	x20, [x0]
  4236d8:	ldp	x19, x20, [sp, #16]
  4236dc:	ldp	x25, x26, [sp, #64]
  4236e0:	ldp	x29, x30, [sp], #112
  4236e4:	ret
  4236e8:	ldp	x21, x22, [sp, #32]
  4236ec:	ldp	x23, x24, [sp, #48]
  4236f0:	ldp	x27, x28, [sp, #80]
  4236f4:	str	x20, [x25]
  4236f8:	ldp	x19, x20, [sp, #16]
  4236fc:	ldp	x25, x26, [sp, #64]
  423700:	ldp	x29, x30, [sp], #112
  423704:	ret
  423708:	ldp	x19, x20, [sp, #16]
  42370c:	ldp	x21, x22, [sp, #32]
  423710:	ldp	x23, x24, [sp, #48]
  423714:	ldp	x25, x26, [sp, #64]
  423718:	ldp	x27, x28, [sp, #80]
  42371c:	ldp	x29, x30, [sp], #112
  423720:	ret
  423724:	nop

0000000000423728 <define_automatic_variables@@Base>:
  423728:	stp	x29, x30, [sp, #-256]!
  42372c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  423730:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423734:	mov	x29, sp
  423738:	ldr	w2, [x0, #2016]
  42373c:	add	x1, x1, #0x340
  423740:	stp	x19, x20, [sp, #16]
  423744:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  423748:	add	x0, sp, #0x38
  42374c:	stp	x21, x22, [sp, #32]
  423750:	bl	406730 <sprintf@plt>
  423754:	ldr	x1, [x19, #288]
  423758:	add	x2, sp, #0x38
  42375c:	mov	w4, #0x0                   	// #0
  423760:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x2c20>
  423764:	mov	x6, #0x0                   	// #0
  423768:	add	x0, x0, #0x7a8
  42376c:	ldr	x5, [x1, #8]
  423770:	mov	w3, #0x1                   	// #1
  423774:	mov	x1, #0x9                   	// #9
  423778:	bl	422df0 <define_variable_in_set@@Base>
  42377c:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  423780:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  423784:	ldr	x4, [x1, #1888]
  423788:	ldr	x2, [x0, #328]
  42378c:	cbz	x4, 423798 <define_automatic_variables@@Base+0x70>
  423790:	ldrb	w0, [x4]
  423794:	cbnz	w0, 423b30 <define_automatic_variables@@Base+0x408>
  423798:	adrp	x21, 42b000 <_IO_stdin_used@@Base+0x4c20>
  42379c:	add	x21, x21, #0x350
  4237a0:	mov	x3, x21
  4237a4:	mov	x4, x21
  4237a8:	add	x0, sp, #0x38
  4237ac:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4237b0:	add	x1, x1, #0x598
  4237b4:	bl	406730 <sprintf@plt>
  4237b8:	ldr	x1, [x19, #288]
  4237bc:	add	x2, sp, #0x38
  4237c0:	mov	x6, #0x0                   	// #0
  4237c4:	mov	w4, #0x0                   	// #0
  4237c8:	mov	w3, #0x0                   	// #0
  4237cc:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4237d0:	ldr	x5, [x1, #8]
  4237d4:	add	x0, x0, #0x5a0
  4237d8:	mov	x1, #0xc                   	// #12
  4237dc:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  4237e0:	bl	422df0 <define_variable_in_set@@Base>
  4237e4:	ldr	x1, [x19, #288]
  4237e8:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  4237ec:	mov	x6, #0x0                   	// #0
  4237f0:	mov	w4, #0x0                   	// #0
  4237f4:	ldr	x2, [x2, #320]
  4237f8:	mov	w3, #0x0                   	// #0
  4237fc:	ldr	x5, [x1, #8]
  423800:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423804:	mov	x1, #0x9                   	// #9
  423808:	add	x0, x0, #0x5b0
  42380c:	bl	422df0 <define_variable_in_set@@Base>
  423810:	ldr	x1, [x19, #288]
  423814:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x1c20>
  423818:	ldr	x2, [x22, #120]
  42381c:	add	x0, x0, #0xa30
  423820:	ldr	x5, [x1, #8]
  423824:	mov	x6, #0x0                   	// #0
  423828:	mov	x1, #0x5                   	// #5
  42382c:	mov	w4, #0x0                   	// #0
  423830:	mov	w3, #0x0                   	// #0
  423834:	bl	422df0 <define_variable_in_set@@Base>
  423838:	mov	x20, x0
  42383c:	ldr	x0, [x0, #8]
  423840:	ldrb	w1, [x0]
  423844:	cbz	w1, 42385c <define_automatic_variables@@Base+0x134>
  423848:	ldrb	w2, [x20, #47]
  42384c:	mov	w1, #0x14                  	// #20
  423850:	and	w1, w1, w2
  423854:	cmp	w1, #0x4
  423858:	b.ne	42387c <define_automatic_variables@@Base+0x154>  // b.any
  42385c:	bl	406b90 <free@plt>
  423860:	ldrb	w0, [x20, #47]
  423864:	mov	w1, #0x2                   	// #2
  423868:	bfi	w0, w1, #2, #3
  42386c:	strb	w0, [x20, #47]
  423870:	ldr	x0, [x22, #120]
  423874:	bl	418c60 <xstrdup@@Base>
  423878:	str	x0, [x20, #8]
  42387c:	ldr	x1, [x19, #288]
  423880:	mov	x2, x21
  423884:	mov	x6, #0x0                   	// #0
  423888:	mov	w4, #0x0                   	// #0
  42388c:	mov	w3, #0x0                   	// #0
  423890:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423894:	ldr	x5, [x1, #8]
  423898:	add	x0, x0, #0x5c0
  42389c:	mov	x1, #0x9                   	// #9
  4238a0:	bl	422df0 <define_variable_in_set@@Base>
  4238a4:	mov	x5, x0
  4238a8:	mov	w8, #0x2                   	// #2
  4238ac:	mov	x6, #0x0                   	// #0
  4238b0:	mov	w4, #0x1                   	// #1
  4238b4:	mov	w3, #0x6                   	// #6
  4238b8:	ldrb	w7, [x5, #47]
  4238bc:	mov	x1, #0x2                   	// #2
  4238c0:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4238c4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4238c8:	add	x2, x2, #0x5d0
  4238cc:	add	x0, x0, #0x5f0
  4238d0:	bfi	w7, w8, #5, #2
  4238d4:	strb	w7, [x5, #47]
  4238d8:	ldr	x5, [x19, #288]
  4238dc:	ldr	x5, [x5, #8]
  4238e0:	bl	422df0 <define_variable_in_set@@Base>
  4238e4:	ldr	x1, [x19, #288]
  4238e8:	mov	x6, #0x0                   	// #0
  4238ec:	mov	w4, #0x1                   	// #1
  4238f0:	mov	w3, #0x6                   	// #6
  4238f4:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4238f8:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4238fc:	ldr	x5, [x1, #8]
  423900:	add	x2, x2, #0x5f8
  423904:	mov	x1, #0x2                   	// #2
  423908:	add	x0, x0, #0x618
  42390c:	bl	422df0 <define_variable_in_set@@Base>
  423910:	ldr	x1, [x19, #288]
  423914:	mov	x6, #0x0                   	// #0
  423918:	mov	w4, #0x1                   	// #1
  42391c:	mov	w3, #0x6                   	// #6
  423920:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423924:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423928:	ldr	x5, [x1, #8]
  42392c:	add	x2, x2, #0x620
  423930:	mov	x1, #0x2                   	// #2
  423934:	add	x0, x0, #0x640
  423938:	bl	422df0 <define_variable_in_set@@Base>
  42393c:	ldr	x1, [x19, #288]
  423940:	mov	x6, #0x0                   	// #0
  423944:	mov	w4, #0x1                   	// #1
  423948:	mov	w3, #0x6                   	// #6
  42394c:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423950:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423954:	ldr	x5, [x1, #8]
  423958:	add	x2, x2, #0x648
  42395c:	mov	x1, #0x2                   	// #2
  423960:	add	x0, x0, #0x668
  423964:	bl	422df0 <define_variable_in_set@@Base>
  423968:	ldr	x1, [x19, #288]
  42396c:	mov	x6, #0x0                   	// #0
  423970:	mov	w4, #0x1                   	// #1
  423974:	mov	w3, #0x6                   	// #6
  423978:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  42397c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423980:	ldr	x5, [x1, #8]
  423984:	add	x2, x2, #0x670
  423988:	mov	x1, #0x2                   	// #2
  42398c:	add	x0, x0, #0x690
  423990:	bl	422df0 <define_variable_in_set@@Base>
  423994:	ldr	x1, [x19, #288]
  423998:	mov	x6, #0x0                   	// #0
  42399c:	mov	w4, #0x1                   	// #1
  4239a0:	mov	w3, #0x6                   	// #6
  4239a4:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4239a8:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4239ac:	ldr	x5, [x1, #8]
  4239b0:	add	x2, x2, #0x698
  4239b4:	mov	x1, #0x2                   	// #2
  4239b8:	add	x0, x0, #0x6b8
  4239bc:	bl	422df0 <define_variable_in_set@@Base>
  4239c0:	ldr	x1, [x19, #288]
  4239c4:	mov	x6, #0x0                   	// #0
  4239c8:	mov	w4, #0x1                   	// #1
  4239cc:	mov	w3, #0x6                   	// #6
  4239d0:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4239d4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4239d8:	ldr	x5, [x1, #8]
  4239dc:	add	x2, x2, #0x6c0
  4239e0:	mov	x1, #0x2                   	// #2
  4239e4:	add	x0, x0, #0x6e0
  4239e8:	bl	422df0 <define_variable_in_set@@Base>
  4239ec:	ldr	x1, [x19, #288]
  4239f0:	mov	x6, #0x0                   	// #0
  4239f4:	mov	w4, #0x1                   	// #1
  4239f8:	mov	w3, #0x6                   	// #6
  4239fc:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423a00:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423a04:	ldr	x5, [x1, #8]
  423a08:	add	x2, x2, #0x6e8
  423a0c:	mov	x1, #0x2                   	// #2
  423a10:	add	x0, x0, #0x6f8
  423a14:	bl	422df0 <define_variable_in_set@@Base>
  423a18:	ldr	x1, [x19, #288]
  423a1c:	mov	x6, #0x0                   	// #0
  423a20:	mov	w4, #0x1                   	// #1
  423a24:	mov	w3, #0x6                   	// #6
  423a28:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423a2c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423a30:	ldr	x5, [x1, #8]
  423a34:	add	x2, x2, #0x700
  423a38:	mov	x1, #0x2                   	// #2
  423a3c:	add	x0, x0, #0x710
  423a40:	bl	422df0 <define_variable_in_set@@Base>
  423a44:	ldr	x1, [x19, #288]
  423a48:	mov	x6, #0x0                   	// #0
  423a4c:	mov	w4, #0x1                   	// #1
  423a50:	mov	w3, #0x6                   	// #6
  423a54:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423a58:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423a5c:	ldr	x5, [x1, #8]
  423a60:	add	x2, x2, #0x718
  423a64:	mov	x1, #0x2                   	// #2
  423a68:	add	x0, x0, #0x728
  423a6c:	bl	422df0 <define_variable_in_set@@Base>
  423a70:	ldr	x1, [x19, #288]
  423a74:	mov	x6, #0x0                   	// #0
  423a78:	mov	w4, #0x1                   	// #1
  423a7c:	mov	w3, #0x6                   	// #6
  423a80:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423a84:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423a88:	ldr	x5, [x1, #8]
  423a8c:	add	x2, x2, #0x730
  423a90:	mov	x1, #0x2                   	// #2
  423a94:	add	x0, x0, #0x740
  423a98:	bl	422df0 <define_variable_in_set@@Base>
  423a9c:	ldr	x1, [x19, #288]
  423aa0:	mov	x6, #0x0                   	// #0
  423aa4:	mov	w4, #0x1                   	// #1
  423aa8:	mov	w3, #0x6                   	// #6
  423aac:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423ab0:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423ab4:	ldr	x5, [x1, #8]
  423ab8:	add	x2, x2, #0x748
  423abc:	mov	x1, #0x2                   	// #2
  423ac0:	add	x0, x0, #0x758
  423ac4:	bl	422df0 <define_variable_in_set@@Base>
  423ac8:	ldr	x1, [x19, #288]
  423acc:	mov	x6, #0x0                   	// #0
  423ad0:	mov	w4, #0x1                   	// #1
  423ad4:	mov	w3, #0x6                   	// #6
  423ad8:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423adc:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423ae0:	ldr	x5, [x1, #8]
  423ae4:	add	x2, x2, #0x760
  423ae8:	mov	x1, #0x2                   	// #2
  423aec:	add	x0, x0, #0x770
  423af0:	bl	422df0 <define_variable_in_set@@Base>
  423af4:	ldr	x1, [x19, #288]
  423af8:	mov	x6, #0x0                   	// #0
  423afc:	mov	w4, #0x1                   	// #1
  423b00:	mov	w3, #0x6                   	// #6
  423b04:	adrp	x2, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423b08:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423b0c:	ldr	x5, [x1, #8]
  423b10:	add	x2, x2, #0x778
  423b14:	mov	x1, #0x2                   	// #2
  423b18:	add	x0, x0, #0x788
  423b1c:	bl	422df0 <define_variable_in_set@@Base>
  423b20:	ldp	x19, x20, [sp, #16]
  423b24:	ldp	x21, x22, [sp, #32]
  423b28:	ldp	x29, x30, [sp], #256
  423b2c:	ret
  423b30:	adrp	x3, 429000 <_IO_stdin_used@@Base+0x2c20>
  423b34:	adrp	x21, 42b000 <_IO_stdin_used@@Base+0x4c20>
  423b38:	add	x3, x3, #0x4c8
  423b3c:	add	x21, x21, #0x350
  423b40:	b	4237a8 <define_automatic_variables@@Base+0x80>
  423b44:	nop

0000000000423b48 <target_environment@@Base>:
  423b48:	stp	x29, x30, [sp, #-256]!
  423b4c:	mov	x29, sp
  423b50:	stp	x19, x20, [sp, #16]
  423b54:	stp	x21, x22, [sp, #32]
  423b58:	stp	x23, x24, [sp, #48]
  423b5c:	mov	x24, x0
  423b60:	stp	x25, x26, [sp, #64]
  423b64:	stp	x27, x28, [sp, #80]
  423b68:	cbz	x0, 423e90 <target_environment@@Base+0x348>
  423b6c:	ldr	x21, [x0, #80]
  423b70:	adrp	x4, 422000 <print_rule_data_base@@Base+0x80>
  423b74:	adrp	x3, 422000 <print_rule_data_base@@Base+0x80>
  423b78:	adrp	x2, 422000 <print_rule_data_base@@Base+0x80>
  423b7c:	add	x0, sp, #0xa8
  423b80:	add	x4, x4, #0x7d0
  423b84:	add	x3, x3, #0x7c8
  423b88:	add	x2, x2, #0x808
  423b8c:	mov	x1, #0x20b                 	// #523
  423b90:	bl	411928 <hash_init@@Base>
  423b94:	cbz	x21, 423ca8 <target_environment@@Base+0x160>
  423b98:	adrp	x23, 446000 <commands_started@@Base+0x1c8>
  423b9c:	mov	w22, #0x8                   	// #8
  423ba0:	add	x23, x23, #0x788
  423ba4:	movk	w22, #0x6000, lsl #16
  423ba8:	ldr	x0, [x21, #8]
  423bac:	adrp	x26, 443000 <expanding_var@@Base+0x338>
  423bb0:	ldr	x20, [x0]
  423bb4:	ldr	x25, [x0, #32]
  423bb8:	add	x25, x20, x25, lsl #3
  423bbc:	cmp	x20, x25
  423bc0:	b.cc	423c00 <target_environment@@Base+0xb8>  // b.lo, b.ul, b.last
  423bc4:	b	423ca0 <target_environment@@Base+0x158>
  423bc8:	cmp	w1, #0x1
  423bcc:	b.eq	423db4 <target_environment@@Base+0x26c>  // b.none
  423bd0:	mov	x1, x19
  423bd4:	add	x0, sp, #0xa8
  423bd8:	bl	4119e0 <hash_find_slot@@Base>
  423bdc:	mov	x2, x0
  423be0:	ldr	x0, [x0]
  423be4:	cbz	x0, 423c88 <target_environment@@Base+0x140>
  423be8:	ldr	x1, [x26, #48]
  423bec:	cmp	x0, x1
  423bf0:	b.eq	423c88 <target_environment@@Base+0x140>  // b.none
  423bf4:	add	x20, x20, #0x8
  423bf8:	cmp	x25, x20
  423bfc:	b.ls	423ca0 <target_environment@@Base+0x158>  // b.plast
  423c00:	ldr	x19, [x20]
  423c04:	cbz	x19, 423bf4 <target_environment@@Base+0xac>
  423c08:	ldr	x0, [x26, #48]
  423c0c:	cmp	x19, x0
  423c10:	b.eq	423bf4 <target_environment@@Base+0xac>  // b.none
  423c14:	ldr	w0, [x19, #44]
  423c18:	bics	wzr, w22, w0
  423c1c:	b.eq	423e08 <target_environment@@Base+0x2c0>  // b.none
  423c20:	ldrb	w1, [x19, #47]
  423c24:	ubfx	x1, x1, #5, #2
  423c28:	cmp	w1, #0x2
  423c2c:	b.eq	423df8 <target_environment@@Base+0x2b0>  // b.none
  423c30:	cmp	w1, #0x3
  423c34:	b.ne	423bc8 <target_environment@@Base+0x80>  // b.any
  423c38:	ldrb	w0, [x19, #47]
  423c3c:	ands	w1, w0, #0x1c
  423c40:	ccmp	w1, #0x18, #0x4, ne  // ne = any
  423c44:	b.eq	423bf4 <target_environment@@Base+0xac>  // b.none
  423c48:	ldrb	w2, [x19, #44]
  423c4c:	tbz	w2, #5, 423bf4 <target_environment@@Base+0xac>
  423c50:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  423c54:	mov	w3, #0x14                  	// #20
  423c58:	and	w0, w0, w3
  423c5c:	cmp	w0, #0x4
  423c60:	ldr	w0, [x2, #2244]
  423c64:	ccmp	w1, #0x10, #0x4, ne  // ne = any
  423c68:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  423c6c:	b.eq	423bf4 <target_environment@@Base+0xac>  // b.none
  423c70:	mov	x1, x19
  423c74:	add	x0, sp, #0xa8
  423c78:	bl	4119e0 <hash_find_slot@@Base>
  423c7c:	mov	x2, x0
  423c80:	ldr	x0, [x0]
  423c84:	cbnz	x0, 423be8 <target_environment@@Base+0xa0>
  423c88:	mov	x1, x19
  423c8c:	add	x0, sp, #0xa8
  423c90:	add	x20, x20, #0x8
  423c94:	bl	411b38 <hash_insert_at@@Base>
  423c98:	cmp	x25, x20
  423c9c:	b.hi	423c00 <target_environment@@Base+0xb8>  // b.pmore
  423ca0:	ldr	x21, [x21]
  423ca4:	cbnz	x21, 423ba8 <target_environment@@Base+0x60>
  423ca8:	mov	w2, #0x9                   	// #9
  423cac:	add	x1, sp, #0x78
  423cb0:	add	x0, sp, #0xa8
  423cb4:	adrp	x26, 429000 <_IO_stdin_used@@Base+0x2c20>
  423cb8:	add	x26, x26, #0x7a8
  423cbc:	str	x26, [sp, #120]
  423cc0:	str	w2, [sp, #160]
  423cc4:	bl	411d28 <hash_delete@@Base>
  423cc8:	ldr	x0, [sp, #216]
  423ccc:	add	x0, x0, #0x2
  423cd0:	lsl	x0, x0, #3
  423cd4:	bl	418a50 <xmalloc@@Base>
  423cd8:	ldr	x20, [sp, #168]
  423cdc:	mov	x25, x0
  423ce0:	ldr	x23, [sp, #200]
  423ce4:	mov	x21, x0
  423ce8:	add	x23, x20, x23, lsl #3
  423cec:	cmp	x20, x23
  423cf0:	b.cs	423d5c <target_environment@@Base+0x214>  // b.hs, b.nlast
  423cf4:	adrp	x28, 42c000 <_IO_stdin_used@@Base+0x5c20>
  423cf8:	add	x28, x28, #0x790
  423cfc:	adrp	x27, 443000 <expanding_var@@Base+0x338>
  423d00:	ldr	x19, [x20]
  423d04:	add	x22, x21, #0x8
  423d08:	cbz	x19, 423d50 <target_environment@@Base+0x208>
  423d0c:	ldr	x1, [x27, #48]
  423d10:	mov	x2, x28
  423d14:	mov	w0, #0x3                   	// #3
  423d18:	cmp	x19, x1
  423d1c:	b.eq	423d50 <target_environment@@Base+0x208>  // b.none
  423d20:	ldrb	w1, [x19, #44]
  423d24:	tbz	w1, #0, 423d3c <target_environment@@Base+0x1f4>
  423d28:	ldrb	w1, [x19, #47]
  423d2c:	mov	w3, #0x14                  	// #20
  423d30:	and	w1, w3, w1
  423d34:	cmp	w1, #0x4
  423d38:	b.ne	423e50 <target_environment@@Base+0x308>  // b.any
  423d3c:	ldp	x1, x3, [x19]
  423d40:	bl	418ad8 <concat@@Base>
  423d44:	bl	418c60 <xstrdup@@Base>
  423d48:	str	x0, [x21]
  423d4c:	mov	x21, x22
  423d50:	add	x20, x20, #0x8
  423d54:	cmp	x23, x20
  423d58:	b.hi	423d00 <target_environment@@Base+0x1b8>  // b.pmore
  423d5c:	mov	x0, #0x64                  	// #100
  423d60:	bl	418a50 <xmalloc@@Base>
  423d64:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  423d68:	mov	x2, x26
  423d6c:	ldr	w3, [x1, #2016]
  423d70:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  423d74:	str	x0, [x21]
  423d78:	add	x1, x1, #0xad0
  423d7c:	add	w3, w3, #0x1
  423d80:	bl	406730 <sprintf@plt>
  423d84:	str	xzr, [x21, #8]
  423d88:	add	x0, sp, #0xa8
  423d8c:	mov	w1, #0x0                   	// #0
  423d90:	bl	411e68 <hash_free@@Base>
  423d94:	mov	x0, x25
  423d98:	ldp	x19, x20, [sp, #16]
  423d9c:	ldp	x21, x22, [sp, #32]
  423da0:	ldp	x23, x24, [sp, #48]
  423da4:	ldp	x25, x26, [sp, #64]
  423da8:	ldp	x27, x28, [sp, #80]
  423dac:	ldp	x29, x30, [sp], #256
  423db0:	ret
  423db4:	ldr	x0, [x19]
  423db8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  423dbc:	add	x1, x1, #0xa30
  423dc0:	cmp	x0, x1
  423dc4:	b.eq	423de8 <target_environment@@Base+0x2a0>  // b.none
  423dc8:	ldrb	w1, [x0]
  423dcc:	cmp	w1, #0x53
  423dd0:	b.ne	423bf4 <target_environment@@Base+0xac>  // b.any
  423dd4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x1c20>
  423dd8:	add	x0, x0, #0x1
  423ddc:	add	x1, x1, #0xa31
  423de0:	bl	406b40 <strcmp@plt>
  423de4:	cbnz	w0, 423bf4 <target_environment@@Base+0xac>
  423de8:	ldr	x0, [x23, #8]
  423dec:	mov	x19, x23
  423df0:	cbnz	x0, 423bd0 <target_environment@@Base+0x88>
  423df4:	b	423bf4 <target_environment@@Base+0xac>
  423df8:	ldrb	w0, [x19, #47]
  423dfc:	tst	w0, #0x1c
  423e00:	b.ne	423bd0 <target_environment@@Base+0x88>  // b.any
  423e04:	b	423bf4 <target_environment@@Base+0xac>
  423e08:	ldr	x27, [x19]
  423e0c:	mov	x0, x27
  423e10:	bl	406680 <strlen@plt>
  423e14:	mov	x2, x0
  423e18:	adrp	x0, 445000 <output_context@@Base+0x1250>
  423e1c:	add	x0, x0, #0xed8
  423e20:	add	x1, sp, #0x78
  423e24:	add	x0, x0, #0x808
  423e28:	str	x27, [sp, #120]
  423e2c:	str	w2, [sp, #160]
  423e30:	bl	411b08 <hash_find_item@@Base>
  423e34:	cbz	x0, 423c20 <target_environment@@Base+0xd8>
  423e38:	ldrb	w1, [x0, #47]
  423e3c:	ldrb	w0, [x19, #47]
  423e40:	ubfx	x1, x1, #5, #2
  423e44:	bfi	w0, w1, #5, #2
  423e48:	strb	w0, [x19, #47]
  423e4c:	b	423c28 <target_environment@@Base+0xe0>
  423e50:	mov	x1, x24
  423e54:	mov	x0, x19
  423e58:	bl	40c1c8 <recursively_expand_for_file@@Base>
  423e5c:	mov	x3, x0
  423e60:	ldr	x1, [x19]
  423e64:	mov	x2, x28
  423e68:	mov	w0, #0x3                   	// #3
  423e6c:	str	x3, [sp, #104]
  423e70:	bl	418ad8 <concat@@Base>
  423e74:	bl	418c60 <xstrdup@@Base>
  423e78:	str	x0, [x21]
  423e7c:	ldr	x3, [sp, #104]
  423e80:	mov	x21, x22
  423e84:	mov	x0, x3
  423e88:	bl	406b90 <free@plt>
  423e8c:	b	423d50 <target_environment@@Base+0x208>
  423e90:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  423e94:	ldr	x21, [x0, #288]
  423e98:	b	423b70 <target_environment@@Base+0x28>
  423e9c:	nop

0000000000423ea0 <do_variable_definition@@Base>:
  423ea0:	stp	x29, x30, [sp, #-176]!
  423ea4:	cmp	w4, #0x3
  423ea8:	mov	x29, sp
  423eac:	stp	x19, x20, [sp, #16]
  423eb0:	mov	w20, w4
  423eb4:	stp	x21, x22, [sp, #32]
  423eb8:	mov	w22, w5
  423ebc:	stp	x23, x24, [sp, #48]
  423ec0:	mov	x23, x0
  423ec4:	mov	w24, w3
  423ec8:	stp	x25, x26, [sp, #64]
  423ecc:	stp	x27, x28, [sp, #80]
  423ed0:	mov	x28, x1
  423ed4:	mov	x27, x2
  423ed8:	b.eq	423ef0 <do_variable_definition@@Base+0x50>  // b.none
  423edc:	b.ls	424030 <do_variable_definition@@Base+0x190>  // b.plast
  423ee0:	cmp	w4, #0x5
  423ee4:	b.eq	424158 <do_variable_definition@@Base+0x2b8>  // b.none
  423ee8:	cmp	w4, #0x6
  423eec:	b.ne	4240a0 <do_variable_definition@@Base+0x200>  // b.any
  423ef0:	mov	x0, x28
  423ef4:	bl	406680 <strlen@plt>
  423ef8:	mov	x3, x0
  423efc:	cbz	w22, 4241cc <do_variable_definition@@Base+0x32c>
  423f00:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  423f04:	add	x1, sp, #0x80
  423f08:	str	x2, [sp, #96]
  423f0c:	ldr	x0, [x2, #288]
  423f10:	ldr	x0, [x0, #8]
  423f14:	str	x28, [sp, #128]
  423f18:	str	w3, [sp, #168]
  423f1c:	bl	411b08 <hash_find_item@@Base>
  423f20:	mov	x19, x0
  423f24:	ldr	x2, [sp, #96]
  423f28:	cbz	x0, 424234 <do_variable_definition@@Base+0x394>
  423f2c:	ldrb	w0, [x0, #44]
  423f30:	ubfx	x21, x0, #1, #1
  423f34:	tbnz	w0, #0, 4241ec <do_variable_definition@@Base+0x34c>
  423f38:	cmp	w20, #0x6
  423f3c:	mov	x25, #0x0                   	// #0
  423f40:	b.ne	4241f8 <do_variable_definition@@Base+0x358>  // b.any
  423f44:	mov	x0, x27
  423f48:	bl	406680 <strlen@plt>
  423f4c:	mov	x26, x0
  423f50:	cbz	x0, 424000 <do_variable_definition@@Base+0x160>
  423f54:	ldr	x0, [x19, #8]
  423f58:	bl	406680 <strlen@plt>
  423f5c:	mov	x2, x0
  423f60:	add	x0, x26, #0x2
  423f64:	str	x2, [sp, #96]
  423f68:	add	x0, x0, x2
  423f6c:	bl	418a50 <xmalloc@@Base>
  423f70:	mov	x3, x0
  423f74:	ldr	x2, [sp, #96]
  423f78:	mov	x4, x0
  423f7c:	cbnz	x2, 424210 <do_variable_definition@@Base+0x370>
  423f80:	add	x2, x26, #0x1
  423f84:	mov	x1, x27
  423f88:	mov	x0, x4
  423f8c:	str	x3, [sp, #96]
  423f90:	bl	406640 <memcpy@plt>
  423f94:	ldr	x3, [sp, #96]
  423f98:	mov	x0, x25
  423f9c:	mov	x25, x3
  423fa0:	bl	406b90 <free@plt>
  423fa4:	mov	x27, x25
  423fa8:	cmp	w20, #0x2
  423fac:	mov	w20, #0x0                   	// #0
  423fb0:	cset	w26, eq  // eq = none
  423fb4:	mov	x0, x28
  423fb8:	mov	x19, #0x0                   	// #0
  423fbc:	bl	406680 <strlen@plt>
  423fc0:	mov	x1, x0
  423fc4:	cbnz	w22, 4240d8 <do_variable_definition@@Base+0x238>
  423fc8:	mov	x5, x19
  423fcc:	mov	x6, x23
  423fd0:	mov	w4, w26
  423fd4:	mov	w3, w24
  423fd8:	mov	x2, x27
  423fdc:	mov	x0, x28
  423fe0:	bl	422df0 <define_variable_in_set@@Base>
  423fe4:	mov	x19, x0
  423fe8:	ldrb	w0, [x0, #44]
  423fec:	lsl	w21, w21, #1
  423ff0:	orr	w21, w21, w20, lsl #2
  423ff4:	and	w0, w0, #0xfffffff9
  423ff8:	orr	w21, w21, w0
  423ffc:	strb	w21, [x19, #44]
  424000:	mov	x0, x25
  424004:	bl	406b90 <free@plt>
  424008:	ldrb	w0, [x19, #44]
  42400c:	tbnz	w0, #4, 4240e8 <do_variable_definition@@Base+0x248>
  424010:	mov	x0, x19
  424014:	ldp	x19, x20, [sp, #16]
  424018:	ldp	x21, x22, [sp, #32]
  42401c:	ldp	x23, x24, [sp, #48]
  424020:	ldp	x25, x26, [sp, #64]
  424024:	ldp	x27, x28, [sp, #80]
  424028:	ldp	x29, x30, [sp], #176
  42402c:	ret
  424030:	cmp	w4, #0x1
  424034:	b.ne	424070 <do_variable_definition@@Base+0x1d0>  // b.any
  424038:	mov	x1, #0x0                   	// #0
  42403c:	mov	x0, x2
  424040:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  424044:	mov	w20, #0x0                   	// #0
  424048:	mov	x27, x0
  42404c:	mov	x25, x0
  424050:	mov	w21, #0x0                   	// #0
  424054:	mov	x0, x28
  424058:	mov	w26, #0x0                   	// #0
  42405c:	bl	406680 <strlen@plt>
  424060:	mov	x19, #0x0                   	// #0
  424064:	mov	x1, x0
  424068:	cbz	w22, 423fc8 <do_variable_definition@@Base+0x128>
  42406c:	b	4240d8 <do_variable_definition@@Base+0x238>
  424070:	cmp	w4, #0x2
  424074:	b.ne	42427c <do_variable_definition@@Base+0x3dc>  // b.any
  424078:	mov	x0, x28
  42407c:	mov	w20, #0x0                   	// #0
  424080:	bl	406680 <strlen@plt>
  424084:	mov	w21, #0x0                   	// #0
  424088:	mov	x1, x0
  42408c:	mov	w26, #0x1                   	// #1
  424090:	mov	x25, #0x0                   	// #0
  424094:	mov	x19, #0x0                   	// #0
  424098:	cbz	w22, 423fc8 <do_variable_definition@@Base+0x128>
  42409c:	b	4240d8 <do_variable_definition@@Base+0x238>
  4240a0:	cmp	w4, #0x4
  4240a4:	b.ne	42427c <do_variable_definition@@Base+0x3dc>  // b.any
  4240a8:	mov	x0, x1
  4240ac:	bl	406680 <strlen@plt>
  4240b0:	mov	x25, #0x0                   	// #0
  4240b4:	mov	x1, x0
  4240b8:	mov	x0, x28
  4240bc:	bl	4231f0 <lookup_variable@@Base>
  4240c0:	mov	x19, x0
  4240c4:	cbnz	x0, 424000 <do_variable_definition@@Base+0x160>
  4240c8:	mov	w20, #0x1                   	// #1
  4240cc:	mov	w21, #0x0                   	// #0
  4240d0:	mov	w26, w20
  4240d4:	b	423fb4 <do_variable_definition@@Base+0x114>
  4240d8:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  4240dc:	ldr	x0, [x2, #288]
  4240e0:	ldr	x19, [x0, #8]
  4240e4:	b	423fc8 <do_variable_definition@@Base+0x128>
  4240e8:	ldr	x0, [x19]
  4240ec:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  4240f0:	add	x1, x1, #0x698
  4240f4:	cmp	x0, x1
  4240f8:	b.eq	42411c <do_variable_definition@@Base+0x27c>  // b.none
  4240fc:	ldrb	w1, [x0]
  424100:	cmp	w1, #0x2e
  424104:	b.ne	424010 <do_variable_definition@@Base+0x170>  // b.any
  424108:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  42410c:	add	x0, x0, #0x1
  424110:	add	x1, x1, #0x699
  424114:	bl	406b40 <strcmp@plt>
  424118:	cbnz	w0, 424010 <do_variable_definition@@Base+0x170>
  42411c:	ldr	x0, [x19, #8]
  424120:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  424124:	mov	w2, #0x9                   	// #9
  424128:	ldp	x21, x22, [sp, #32]
  42412c:	ldrb	w0, [x0]
  424130:	ldp	x23, x24, [sp, #48]
  424134:	cmp	w0, #0x0
  424138:	csel	w0, w0, w2, ne  // ne = any
  42413c:	strb	w0, [x1, #148]
  424140:	mov	x0, x19
  424144:	ldp	x19, x20, [sp, #16]
  424148:	ldp	x25, x26, [sp, #64]
  42414c:	ldp	x27, x28, [sp, #80]
  424150:	ldp	x29, x30, [sp], #176
  424154:	ret
  424158:	mov	x0, x2
  42415c:	adrp	x25, 446000 <commands_started@@Base+0x1c8>
  424160:	mov	x1, #0x0                   	// #0
  424164:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  424168:	add	x1, sp, #0x78
  42416c:	mov	x19, x0
  424170:	add	x0, sp, #0x70
  424174:	bl	40c440 <install_variable_buffer@@Base>
  424178:	ldr	x0, [x25, #1904]
  42417c:	add	x1, sp, #0x80
  424180:	mov	w2, #0x0                   	// #0
  424184:	stp	x19, xzr, [sp, #128]
  424188:	mov	w20, #0x0                   	// #0
  42418c:	bl	411048 <func_shell_base@@Base>
  424190:	mov	w21, #0x0                   	// #0
  424194:	mov	x2, #0x1                   	// #1
  424198:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  42419c:	add	x1, x1, #0x828
  4241a0:	bl	40b848 <variable_buffer_output@@Base>
  4241a4:	ldr	x0, [x25, #1904]
  4241a8:	mov	w26, #0x1                   	// #1
  4241ac:	bl	406a20 <strdup@plt>
  4241b0:	mov	x27, x0
  4241b4:	mov	x25, x0
  4241b8:	ldp	x0, x1, [sp, #112]
  4241bc:	bl	40c460 <restore_variable_buffer@@Base>
  4241c0:	mov	x0, x19
  4241c4:	bl	406b90 <free@plt>
  4241c8:	b	423fb4 <do_variable_definition@@Base+0x114>
  4241cc:	mov	x1, x0
  4241d0:	mov	x0, x28
  4241d4:	bl	4231f0 <lookup_variable@@Base>
  4241d8:	mov	x19, x0
  4241dc:	cbz	x0, 42425c <do_variable_definition@@Base+0x3bc>
  4241e0:	ldrb	w0, [x0, #44]
  4241e4:	mov	w21, #0x0                   	// #0
  4241e8:	b	423f34 <do_variable_definition@@Base+0x94>
  4241ec:	mov	x25, #0x0                   	// #0
  4241f0:	mov	w20, #0x2                   	// #2
  4241f4:	b	423f44 <do_variable_definition@@Base+0xa4>
  4241f8:	mov	x0, x27
  4241fc:	mov	x1, #0x0                   	// #0
  424200:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  424204:	mov	x27, x0
  424208:	mov	x25, x0
  42420c:	b	423f44 <do_variable_definition@@Base+0xa4>
  424210:	ldr	x1, [x19, #8]
  424214:	str	x0, [sp, #104]
  424218:	bl	406640 <memcpy@plt>
  42421c:	ldp	x2, x3, [sp, #96]
  424220:	mov	w0, #0x20                  	// #32
  424224:	add	x4, x2, #0x1
  424228:	strb	w0, [x3, x2]
  42422c:	add	x4, x3, x4
  424230:	b	423f80 <do_variable_definition@@Base+0xe0>
  424234:	mov	x0, x28
  424238:	str	x2, [sp, #96]
  42423c:	bl	406680 <strlen@plt>
  424240:	mov	w21, #0x1                   	// #1
  424244:	mov	x1, x0
  424248:	mov	w26, w21
  42424c:	mov	x25, #0x0                   	// #0
  424250:	mov	w20, #0x0                   	// #0
  424254:	ldr	x2, [sp, #96]
  424258:	b	4240dc <do_variable_definition@@Base+0x23c>
  42425c:	mov	x0, x28
  424260:	mov	x25, #0x0                   	// #0
  424264:	bl	406680 <strlen@plt>
  424268:	mov	w20, #0x0                   	// #0
  42426c:	mov	x1, x0
  424270:	mov	w21, #0x0                   	// #0
  424274:	mov	w26, #0x1                   	// #1
  424278:	b	423fc8 <do_variable_definition@@Base+0x128>
  42427c:	bl	406ab0 <abort@plt>

0000000000424280 <initialize_file_variables@@Base>:
  424280:	stp	x29, x30, [sp, #-80]!
  424284:	mov	x29, sp
  424288:	stp	x21, x22, [sp, #32]
  42428c:	ldr	x21, [x0, #80]
  424290:	stp	x19, x20, [sp, #16]
  424294:	mov	x19, x0
  424298:	mov	w20, w1
  42429c:	cbz	x21, 42434c <initialize_file_variables@@Base+0xcc>
  4242a0:	ldr	x0, [x19, #104]
  4242a4:	cmp	x0, #0x0
  4242a8:	ccmp	x0, x19, #0x4, ne  // ne = any
  4242ac:	b.ne	424324 <initialize_file_variables@@Base+0xa4>  // b.any
  4242b0:	ldr	x0, [x19, #96]
  4242b4:	cbz	x0, 424310 <initialize_file_variables@@Base+0x90>
  4242b8:	mov	w1, w20
  4242bc:	bl	424280 <initialize_file_variables@@Base>
  4242c0:	ldr	x0, [x19, #96]
  4242c4:	ldr	x0, [x0, #80]
  4242c8:	str	x0, [x21]
  4242cc:	mov	w22, #0x1                   	// #1
  4242d0:	str	w22, [x21, #16]
  4242d4:	cbnz	w20, 4242e0 <initialize_file_variables@@Base+0x60>
  4242d8:	ldrb	w0, [x19, #138]
  4242dc:	tbz	w0, #2, 42438c <initialize_file_variables@@Base+0x10c>
  4242e0:	ldr	x0, [x19, #88]
  4242e4:	cbz	x0, 424300 <initialize_file_variables@@Base+0x80>
  4242e8:	ldr	x1, [x21]
  4242ec:	str	x1, [x0]
  4242f0:	ldr	w1, [x21, #16]
  4242f4:	str	w1, [x0, #16]
  4242f8:	str	x0, [x21]
  4242fc:	str	wzr, [x21, #16]
  424300:	ldp	x19, x20, [sp, #16]
  424304:	ldp	x21, x22, [sp, #32]
  424308:	ldp	x29, x30, [sp], #80
  42430c:	ret
  424310:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  424314:	add	x0, x0, #0x120
  424318:	add	x0, x0, #0x8
  42431c:	str	x0, [x21]
  424320:	b	4242cc <initialize_file_variables@@Base+0x4c>
  424324:	mov	w1, w20
  424328:	bl	424280 <initialize_file_variables@@Base>
  42432c:	ldr	x0, [x19, #104]
  424330:	ldp	x19, x20, [sp, #16]
  424334:	ldr	x0, [x0, #80]
  424338:	str	x0, [x21]
  42433c:	str	wzr, [x21, #16]
  424340:	ldp	x21, x22, [sp, #32]
  424344:	ldp	x29, x30, [sp], #80
  424348:	ret
  42434c:	mov	x0, #0x18                  	// #24
  424350:	bl	418a50 <xmalloc@@Base>
  424354:	mov	x21, x0
  424358:	mov	x0, #0x58                  	// #88
  42435c:	bl	418a50 <xmalloc@@Base>
  424360:	adrp	x4, 422000 <print_rule_data_base@@Base+0x80>
  424364:	adrp	x3, 422000 <print_rule_data_base@@Base+0x80>
  424368:	str	x0, [x21, #8]
  42436c:	add	x4, x4, #0x7d0
  424370:	add	x3, x3, #0x7c8
  424374:	adrp	x2, 422000 <print_rule_data_base@@Base+0x80>
  424378:	mov	x1, #0x17                  	// #23
  42437c:	add	x2, x2, #0x808
  424380:	bl	411928 <hash_init@@Base>
  424384:	str	x21, [x19, #80]
  424388:	b	4242a0 <initialize_file_variables@@Base+0x20>
  42438c:	ldr	x1, [x19]
  424390:	mov	x0, #0x0                   	// #0
  424394:	bl	422858 <strcache_print_stats@@Base+0x2e0>
  424398:	mov	x20, x0
  42439c:	cbz	x0, 424498 <initialize_file_variables@@Base+0x218>
  4243a0:	stp	x23, x24, [sp, #48]
  4243a4:	adrp	x23, 443000 <expanding_var@@Base+0x338>
  4243a8:	ldr	x24, [x23, #288]
  4243ac:	stp	x25, x26, [sp, #64]
  4243b0:	bl	423440 <create_new_variable_set@@Base>
  4243b4:	str	x0, [x23, #288]
  4243b8:	str	x0, [x19, #88]
  4243bc:	b	424424 <initialize_file_variables@@Base+0x1a4>
  4243c0:	ldr	x2, [x20, #40]
  4243c4:	mov	x1, x26
  4243c8:	ldrb	w3, [x20, #79]
  4243cc:	ubfx	x3, x3, #2, #3
  4243d0:	bl	423ea0 <do_variable_definition@@Base>
  4243d4:	mov	x1, x0
  4243d8:	ldrb	w3, [x20, #76]
  4243dc:	mov	x0, x20
  4243e0:	ldrb	w2, [x1, #44]
  4243e4:	ldrb	w4, [x1, #47]
  4243e8:	ubfx	x3, x3, #3, #1
  4243ec:	bfi	w2, w3, #3, #1
  4243f0:	strb	w2, [x1, #44]
  4243f4:	ldrb	w3, [x20, #79]
  4243f8:	ubfx	x3, x3, #5, #2
  4243fc:	bfi	w4, w3, #5, #2
  424400:	strb	w4, [x1, #47]
  424404:	ldrb	w3, [x20, #76]
  424408:	ubfx	x3, x3, #7, #1
  42440c:	bfi	w2, w3, #7, #1
  424410:	strb	w2, [x1, #44]
  424414:	ldr	x1, [x19]
  424418:	bl	422858 <strcache_print_stats@@Base+0x2e0>
  42441c:	mov	x20, x0
  424420:	cbz	x0, 42448c <initialize_file_variables@@Base+0x20c>
  424424:	ldrh	w4, [x20, #78]
  424428:	add	x25, x20, #0x30
  42442c:	mov	x0, x25
  424430:	mov	w5, #0x1                   	// #1
  424434:	and	w1, w4, #0x380
  424438:	cmp	w1, #0x80
  42443c:	ubfx	x4, x4, #7, #3
  424440:	ldr	x26, [x20, #32]
  424444:	b.ne	4243c0 <initialize_file_variables@@Base+0x140>  // b.any
  424448:	mov	x0, x26
  42444c:	bl	406680 <strlen@plt>
  424450:	ldr	x4, [x23, #288]
  424454:	mov	x1, x0
  424458:	ldr	x2, [x20, #40]
  42445c:	mov	x6, x25
  424460:	ldr	x5, [x4, #8]
  424464:	mov	x0, x26
  424468:	ldrb	w3, [x20, #79]
  42446c:	mov	w4, #0x0                   	// #0
  424470:	ubfx	x3, x3, #2, #3
  424474:	bl	422df0 <define_variable_in_set@@Base>
  424478:	mov	x1, x0
  42447c:	ldrh	w0, [x0, #46]
  424480:	bfi	w0, w22, #7, #3
  424484:	strh	w0, [x1, #46]
  424488:	b	4243d8 <initialize_file_variables@@Base+0x158>
  42448c:	str	x24, [x23, #288]
  424490:	ldp	x23, x24, [sp, #48]
  424494:	ldp	x25, x26, [sp, #64]
  424498:	ldrb	w0, [x19, #138]
  42449c:	orr	w0, w0, #0x4
  4244a0:	strb	w0, [x19, #138]
  4244a4:	b	4242e0 <initialize_file_variables@@Base+0x60>

00000000004244a8 <parse_variable_definition@@Base>:
  4244a8:	stp	x29, x30, [sp, #-32]!
  4244ac:	adrp	x2, 443000 <expanding_var@@Base+0x338>
  4244b0:	add	x2, x2, #0x448
  4244b4:	mov	x29, sp
  4244b8:	stp	x19, x20, [sp, #16]
  4244bc:	mov	x20, x1
  4244c0:	ldrb	w3, [x0]
  4244c4:	ldrh	w3, [x2, x3, lsl #1]
  4244c8:	tst	w3, #0x6
  4244cc:	b.eq	4244e0 <parse_variable_definition@@Base+0x38>  // b.none
  4244d0:	ldrb	w3, [x0, #1]!
  4244d4:	ldrh	w3, [x2, x3, lsl #1]
  4244d8:	tst	w3, #0x6
  4244dc:	b.ne	4244d0 <parse_variable_definition@@Base+0x28>  // b.any
  4244e0:	mov	x19, x0
  4244e4:	str	x0, [x20]
  4244e8:	str	wzr, [x20, #40]
  4244ec:	mov	w4, #0x9                   	// #9
  4244f0:	ldrb	w3, [x19], #1
  4244f4:	ldrh	w5, [x2, w3, sxtw #1]
  4244f8:	tst	w5, w4
  4244fc:	b.ne	424554 <parse_variable_definition@@Base+0xac>  // b.any
  424500:	mov	w7, w4
  424504:	mov	x6, x0
  424508:	mov	x9, #0x0                   	// #0
  42450c:	cmp	w3, #0x24
  424510:	b.eq	424568 <parse_variable_definition@@Base+0xc0>  // b.none
  424514:	mov	w8, #0x0                   	// #0
  424518:	tbnz	w5, #1, 42460c <parse_variable_definition@@Base+0x164>
  42451c:	cmp	w3, #0x3d
  424520:	b.eq	4246f4 <parse_variable_definition@@Base+0x24c>  // b.none
  424524:	ldrb	w4, [x19]
  424528:	cmp	w4, #0x3d
  42452c:	b.eq	424590 <parse_variable_definition@@Base+0xe8>  // b.none
  424530:	cmp	w3, #0x3a
  424534:	b.eq	4246bc <parse_variable_definition@@Base+0x214>  // b.none
  424538:	cbnz	w8, 424554 <parse_variable_definition@@Base+0xac>
  42453c:	mov	x6, x19
  424540:	ldrh	w5, [x2, w4, sxtw #1]
  424544:	mov	w3, w4
  424548:	add	x19, x6, #0x1
  42454c:	tst	w5, w7
  424550:	b.eq	42450c <parse_variable_definition@@Base+0x64>  // b.none
  424554:	mov	x19, #0x0                   	// #0
  424558:	mov	x0, x19
  42455c:	ldp	x19, x20, [sp, #16]
  424560:	ldp	x29, x30, [sp], #32
  424564:	ret
  424568:	ldrb	w8, [x6, #1]
  42456c:	add	x5, x6, #0x2
  424570:	cmp	w8, #0x28
  424574:	b.eq	42466c <parse_variable_definition@@Base+0x1c4>  // b.none
  424578:	cmp	w8, #0x7b
  42457c:	b.eq	4246b4 <parse_variable_definition@@Base+0x20c>  // b.none
  424580:	cbz	w8, 424554 <parse_variable_definition@@Base+0xac>
  424584:	ldrb	w4, [x6, #2]
  424588:	mov	x6, x5
  42458c:	b	424540 <parse_variable_definition@@Base+0x98>
  424590:	cmp	w3, #0x3a
  424594:	b.eq	424658 <parse_variable_definition@@Base+0x1b0>  // b.none
  424598:	b.gt	4245f0 <parse_variable_definition@@Base+0x148>
  42459c:	cmp	w3, #0x21
  4245a0:	b.eq	424644 <parse_variable_definition@@Base+0x19c>  // b.none
  4245a4:	cmp	w3, #0x2b
  4245a8:	b.ne	424538 <parse_variable_definition@@Base+0x90>  // b.any
  4245ac:	ldrh	w1, [x20, #46]
  4245b0:	mov	w2, #0x3                   	// #3
  4245b4:	bfi	w1, w2, #7, #3
  4245b8:	strh	w1, [x20, #46]
  4245bc:	sub	x1, x19, #0x1
  4245c0:	cmp	x9, #0x0
  4245c4:	csel	x9, x1, x9, eq  // eq = none
  4245c8:	add	x19, x19, #0x1
  4245cc:	sub	x0, x9, x0
  4245d0:	str	w0, [x20, #40]
  4245d4:	mov	x0, x19
  4245d8:	bl	418cf8 <next_token@@Base>
  4245dc:	str	x0, [x20, #8]
  4245e0:	mov	x0, x19
  4245e4:	ldp	x19, x20, [sp, #16]
  4245e8:	ldp	x29, x30, [sp], #32
  4245ec:	ret
  4245f0:	cmp	w3, #0x3f
  4245f4:	b.ne	424538 <parse_variable_definition@@Base+0x90>  // b.any
  4245f8:	ldrh	w1, [x20, #46]
  4245fc:	mov	w2, #0x4                   	// #4
  424600:	bfi	w1, w2, #7, #3
  424604:	strh	w1, [x20, #46]
  424608:	b	4245bc <parse_variable_definition@@Base+0x114>
  42460c:	ldrb	w3, [x19]
  424610:	ldrh	w1, [x2, w3, sxtw #1]
  424614:	tst	w1, #0x6
  424618:	b.eq	424630 <parse_variable_definition@@Base+0x188>  // b.none
  42461c:	nop
  424620:	ldrb	w3, [x19, #1]!
  424624:	ldrh	w4, [x2, w3, sxtw #1]
  424628:	tst	w4, #0x6
  42462c:	b.ne	424620 <parse_variable_definition@@Base+0x178>  // b.any
  424630:	cbz	w3, 424554 <parse_variable_definition@@Base+0xac>
  424634:	add	x19, x19, #0x1
  424638:	mov	x9, x6
  42463c:	mov	w8, #0x1                   	// #1
  424640:	b	42451c <parse_variable_definition@@Base+0x74>
  424644:	ldrh	w1, [x20, #46]
  424648:	mov	w2, #0x5                   	// #5
  42464c:	bfi	w1, w2, #7, #3
  424650:	strh	w1, [x20, #46]
  424654:	b	4245bc <parse_variable_definition@@Base+0x114>
  424658:	ldrh	w1, [x20, #46]
  42465c:	mov	w2, #0x1                   	// #1
  424660:	bfi	w1, w2, #7, #3
  424664:	strh	w1, [x20, #46]
  424668:	b	4245bc <parse_variable_definition@@Base+0x114>
  42466c:	mov	w1, #0x29                  	// #41
  424670:	ldrb	w4, [x6, #2]
  424674:	cbz	w4, 4246ac <parse_variable_definition@@Base+0x204>
  424678:	mov	w3, #0x1                   	// #1
  42467c:	b	424690 <parse_variable_definition@@Base+0x1e8>
  424680:	cmp	w8, w4
  424684:	ldrb	w4, [x5, #1]!
  424688:	cinc	w3, w3, eq  // eq = none
  42468c:	cbz	w4, 4246ac <parse_variable_definition@@Base+0x204>
  424690:	cmp	w1, w4
  424694:	b.ne	424680 <parse_variable_definition@@Base+0x1d8>  // b.any
  424698:	subs	w3, w3, #0x1
  42469c:	b.ne	424680 <parse_variable_definition@@Base+0x1d8>  // b.any
  4246a0:	ldrb	w4, [x5, #1]
  4246a4:	add	x6, x5, #0x1
  4246a8:	b	424540 <parse_variable_definition@@Base+0x98>
  4246ac:	mov	x6, x5
  4246b0:	b	424540 <parse_variable_definition@@Base+0x98>
  4246b4:	mov	w1, #0x7d                  	// #125
  4246b8:	b	424670 <parse_variable_definition@@Base+0x1c8>
  4246bc:	cmp	w4, #0x3a
  4246c0:	b.ne	424554 <parse_variable_definition@@Base+0xac>  // b.any
  4246c4:	ldrb	w1, [x19, #1]
  4246c8:	cmp	w1, #0x3d
  4246cc:	b.ne	424554 <parse_variable_definition@@Base+0xac>  // b.any
  4246d0:	ldrh	w1, [x20, #46]
  4246d4:	sub	x3, x19, #0x1
  4246d8:	cmp	x9, #0x0
  4246dc:	mov	w2, #0x1                   	// #1
  4246e0:	csel	x9, x3, x9, eq  // eq = none
  4246e4:	add	x19, x19, #0x2
  4246e8:	bfi	w1, w2, #7, #3
  4246ec:	strh	w1, [x20, #46]
  4246f0:	b	4245cc <parse_variable_definition@@Base+0x124>
  4246f4:	ldrh	w2, [x20, #46]
  4246f8:	cmp	x9, #0x0
  4246fc:	sub	x1, x19, #0x1
  424700:	mov	w3, #0x2                   	// #2
  424704:	csel	x9, x1, x9, eq  // eq = none
  424708:	bfi	w2, w3, #7, #3
  42470c:	strh	w2, [x20, #46]
  424710:	b	4245cc <parse_variable_definition@@Base+0x124>
  424714:	nop

0000000000424718 <assign_variable_definition@@Base>:
  424718:	stp	x29, x30, [sp, #-32]!
  42471c:	mov	x29, sp
  424720:	stp	x19, x20, [sp, #16]
  424724:	mov	x19, x0
  424728:	mov	x0, x1
  42472c:	mov	x1, x19
  424730:	bl	4244a8 <parse_variable_definition@@Base>
  424734:	cbz	x0, 42478c <assign_variable_definition@@Base+0x74>
  424738:	ldr	w20, [x19, #40]
  42473c:	ldr	x1, [x19]
  424740:	add	w0, w20, #0x1
  424744:	add	x0, x0, #0xf
  424748:	mov	w2, w20
  42474c:	and	x0, x0, #0x1fffffff0
  424750:	sub	sp, sp, x0
  424754:	mov	x3, sp
  424758:	mov	x0, x3
  42475c:	bl	406640 <memcpy@plt>
  424760:	strb	wzr, [x0, w20, uxtw]
  424764:	mov	x1, #0x0                   	// #0
  424768:	bl	40c400 <allocated_variable_expand_for_file@@Base>
  42476c:	str	x0, [x19]
  424770:	ldrb	w0, [x0]
  424774:	cbz	w0, 4247a4 <assign_variable_definition@@Base+0x8c>
  424778:	mov	sp, x29
  42477c:	mov	x0, x19
  424780:	ldp	x19, x20, [sp, #16]
  424784:	ldp	x29, x30, [sp], #32
  424788:	ret
  42478c:	mov	sp, x29
  424790:	mov	x19, #0x0                   	// #0
  424794:	mov	x0, x19
  424798:	ldp	x19, x20, [sp, #16]
  42479c:	ldp	x29, x30, [sp], #32
  4247a0:	ret
  4247a4:	mov	w2, #0x5                   	// #5
  4247a8:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4247ac:	mov	x0, #0x0                   	// #0
  4247b0:	add	x1, x1, #0x840
  4247b4:	bl	406cd0 <dcgettext@plt>
  4247b8:	mov	x2, x0
  4247bc:	mov	x1, #0x0                   	// #0
  4247c0:	add	x0, x19, #0x10
  4247c4:	bl	41a060 <fatal@@Base>

00000000004247c8 <try_variable_definition@@Base>:
  4247c8:	stp	x29, x30, [sp, #-96]!
  4247cc:	mov	x29, sp
  4247d0:	stp	x19, x20, [sp, #16]
  4247d4:	mov	x20, x0
  4247d8:	stp	x21, x22, [sp, #32]
  4247dc:	mov	w21, w2
  4247e0:	mov	w22, w3
  4247e4:	cbz	x0, 424844 <try_variable_definition@@Base+0x7c>
  4247e8:	ldp	x2, x3, [x0]
  4247ec:	stp	x2, x3, [sp, #64]
  4247f0:	ldr	x0, [x0, #16]
  4247f4:	str	x0, [sp, #80]
  4247f8:	add	x0, sp, #0x30
  4247fc:	bl	424718 <assign_variable_definition@@Base>
  424800:	mov	x19, x0
  424804:	cbz	x0, 424830 <try_variable_definition@@Base+0x68>
  424808:	ldp	x1, x2, [sp, #48]
  42480c:	mov	w5, w22
  424810:	ldrh	w4, [sp, #94]
  424814:	mov	w3, w21
  424818:	mov	x0, x20
  42481c:	ubfx	x4, x4, #7, #3
  424820:	bl	423ea0 <do_variable_definition@@Base>
  424824:	mov	x19, x0
  424828:	ldr	x0, [sp, #48]
  42482c:	bl	406b90 <free@plt>
  424830:	mov	x0, x19
  424834:	ldp	x19, x20, [sp, #16]
  424838:	ldp	x21, x22, [sp, #32]
  42483c:	ldp	x29, x30, [sp], #96
  424840:	ret
  424844:	str	xzr, [sp, #64]
  424848:	b	4247f8 <try_variable_definition@@Base+0x30>
  42484c:	nop

0000000000424850 <print_variable_data_base@@Base>:
  424850:	stp	x29, x30, [sp, #-48]!
  424854:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  424858:	add	x1, x1, #0x798
  42485c:	mov	w2, #0x5                   	// #5
  424860:	mov	x29, sp
  424864:	mov	x0, #0x0                   	// #0
  424868:	stp	x19, x20, [sp, #16]
  42486c:	bl	406cd0 <dcgettext@plt>
  424870:	bl	406ae0 <puts@plt>
  424874:	adrp	x19, 445000 <output_context@@Base+0x1250>
  424878:	add	x0, x19, #0xed8
  42487c:	add	x0, x0, #0x808
  424880:	mov	w2, #0x0                   	// #0
  424884:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  424888:	add	x1, x1, #0x350
  42488c:	bl	422950 <strcache_print_stats@@Base+0x3d8>
  424890:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  424894:	add	x1, x1, #0x7a8
  424898:	mov	w2, #0x5                   	// #5
  42489c:	mov	x0, #0x0                   	// #0
  4248a0:	bl	406cd0 <dcgettext@plt>
  4248a4:	bl	406ae0 <puts@plt>
  4248a8:	ldr	x19, [x19, #3800]
  4248ac:	cbz	x19, 42491c <print_variable_data_base@@Base+0xcc>
  4248b0:	stp	x21, x22, [sp, #32]
  4248b4:	adrp	x22, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4248b8:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x2c20>
  4248bc:	add	x22, x22, #0x7d0
  4248c0:	add	x21, x21, #0x1f8
  4248c4:	mov	w20, #0x0                   	// #0
  4248c8:	ldr	x1, [x19, #16]
  4248cc:	mov	x0, x22
  4248d0:	add	w20, w20, #0x1
  4248d4:	bl	406d60 <printf@plt>
  4248d8:	add	x0, x19, #0x20
  4248dc:	mov	x1, x21
  4248e0:	bl	4229d8 <strcache_print_stats@@Base+0x460>
  4248e4:	ldr	x19, [x19]
  4248e8:	cbnz	x19, 4248c8 <print_variable_data_base@@Base+0x78>
  4248ec:	cbz	w20, 424918 <print_variable_data_base@@Base+0xc8>
  4248f0:	mov	w2, #0x5                   	// #5
  4248f4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4248f8:	mov	x0, #0x0                   	// #0
  4248fc:	add	x1, x1, #0x800
  424900:	bl	406cd0 <dcgettext@plt>
  424904:	mov	w1, w20
  424908:	ldp	x19, x20, [sp, #16]
  42490c:	ldp	x21, x22, [sp, #32]
  424910:	ldp	x29, x30, [sp], #48
  424914:	b	406d60 <printf@plt>
  424918:	ldp	x21, x22, [sp, #32]
  42491c:	mov	w2, #0x5                   	// #5
  424920:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  424924:	mov	x0, #0x0                   	// #0
  424928:	add	x1, x1, #0x7d8
  42492c:	bl	406cd0 <dcgettext@plt>
  424930:	ldp	x19, x20, [sp, #16]
  424934:	ldp	x29, x30, [sp], #48
  424938:	b	406ae0 <puts@plt>
  42493c:	nop

0000000000424940 <print_file_variables@@Base>:
  424940:	ldr	x0, [x0, #80]
  424944:	cbz	x0, 42495c <print_file_variables@@Base+0x1c>
  424948:	ldr	x0, [x0, #8]
  42494c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x2c20>
  424950:	mov	w2, #0x1                   	// #1
  424954:	add	x1, x1, #0x1f8
  424958:	b	422950 <strcache_print_stats@@Base+0x3d8>
  42495c:	ret

0000000000424960 <print_target_variables@@Base>:
  424960:	stp	x29, x30, [sp, #-32]!
  424964:	mov	x29, sp
  424968:	stp	x19, x20, [sp, #16]
  42496c:	ldr	x20, [x0, #80]
  424970:	cbz	x20, 4249d4 <print_target_variables@@Base+0x74>
  424974:	ldr	x19, [x0]
  424978:	mov	x0, x19
  42497c:	bl	406680 <strlen@plt>
  424980:	mov	x1, x19
  424984:	mov	x19, x0
  424988:	add	x0, x0, #0x12
  42498c:	mov	x2, x19
  424990:	and	x0, x0, #0xfffffffffffffff0
  424994:	sub	sp, sp, x0
  424998:	mov	x3, sp
  42499c:	mov	x0, x3
  4249a0:	bl	406640 <memcpy@plt>
  4249a4:	mov	x3, x0
  4249a8:	add	x0, x0, x19
  4249ac:	mov	w1, #0x3a                  	// #58
  4249b0:	mov	w4, #0x20                  	// #32
  4249b4:	mov	x2, x3
  4249b8:	strb	w1, [x3, x19]
  4249bc:	adrp	x1, 422000 <print_rule_data_base@@Base+0x80>
  4249c0:	strb	w4, [x0, #1]
  4249c4:	add	x1, x1, #0xcd8
  4249c8:	strb	wzr, [x0, #2]
  4249cc:	ldr	x0, [x20, #8]
  4249d0:	bl	411f28 <hash_map_arg@@Base>
  4249d4:	mov	sp, x29
  4249d8:	ldp	x19, x20, [sp, #16]
  4249dc:	ldp	x29, x30, [sp], #32
  4249e0:	ret
  4249e4:	nop
  4249e8:	stp	x29, x30, [sp, #-256]!
  4249ec:	mov	x29, sp
  4249f0:	stp	x19, x20, [sp, #16]
  4249f4:	add	x19, x1, #0x3
  4249f8:	stp	x21, x22, [sp, #32]
  4249fc:	stp	x23, x24, [sp, #48]
  424a00:	mov	x24, x2
  424a04:	stp	x25, x26, [sp, #64]
  424a08:	mov	x25, x0
  424a0c:	mov	x26, x3
  424a10:	mov	x0, x2
  424a14:	stp	x27, x28, [sp, #80]
  424a18:	str	x4, [x29, #104]
  424a1c:	bl	40c7a8 <lookup_file@@Base>
  424a20:	mov	w1, #0x1                   	// #1
  424a24:	str	w1, [x29, #120]
  424a28:	cbz	x0, 424a3c <print_target_variables@@Base+0xdc>
  424a2c:	ldrb	w0, [x0, #137]
  424a30:	eor	x0, x0, #0x8
  424a34:	ubfx	x0, x0, #3, #1
  424a38:	str	x0, [x29, #120]
  424a3c:	mov	x0, x24
  424a40:	bl	406680 <strlen@plt>
  424a44:	mov	w1, #0x2f                  	// #47
  424a48:	mov	x20, x0
  424a4c:	mov	x0, x24
  424a50:	str	x20, [x29, #112]
  424a54:	bl	406a70 <strrchr@plt>
  424a58:	cbz	x0, 424c50 <print_target_variables@@Base+0x2f0>
  424a5c:	subs	x23, x0, x24
  424a60:	b.eq	424c44 <print_target_variables@@Base+0x2e4>  // b.none
  424a64:	sub	x2, x20, #0x1
  424a68:	add	x21, x0, #0x1
  424a6c:	sub	x0, x2, x23
  424a70:	str	x0, [x29, #112]
  424a74:	add	x0, x2, x19
  424a78:	mov	w22, #0x0                   	// #0
  424a7c:	ldr	x20, [x25]
  424a80:	add	x0, x0, #0xf
  424a84:	ldr	x1, [x29, #112]
  424a88:	and	x0, x0, #0xfffffffffffffff0
  424a8c:	sub	sp, sp, x0
  424a90:	mov	x19, sp
  424a94:	add	x27, x1, #0x1
  424a98:	cbz	x20, 424b3c <print_target_variables@@Base+0x1dc>
  424a9c:	nop
  424aa0:	mov	x0, x20
  424aa4:	bl	406680 <strlen@plt>
  424aa8:	mov	x28, x0
  424aac:	mov	x1, x20
  424ab0:	mov	x0, x19
  424ab4:	mov	x2, x28
  424ab8:	add	x20, x19, x28
  424abc:	bl	406640 <memcpy@plt>
  424ac0:	cbnz	x23, 424b74 <print_target_variables@@Base+0x214>
  424ac4:	cmp	x19, x20
  424ac8:	b.eq	424b60 <print_target_variables@@Base+0x200>  // b.none
  424acc:	ldurb	w0, [x20, #-1]
  424ad0:	cmp	w0, #0x2f
  424ad4:	b.eq	424b60 <print_target_variables@@Base+0x200>  // b.none
  424ad8:	mov	x0, x20
  424adc:	mov	w3, #0x2f                  	// #47
  424ae0:	mov	x2, x27
  424ae4:	mov	x1, x21
  424ae8:	strb	w3, [x0], #1
  424aec:	bl	406640 <memcpy@plt>
  424af0:	mov	x0, x19
  424af4:	bl	40c7a8 <lookup_file@@Base>
  424af8:	cbz	x0, 424b1c <print_target_variables@@Base+0x1bc>
  424afc:	ldr	w1, [x29, #120]
  424b00:	cbnz	w1, 424b0c <print_target_variables@@Base+0x1ac>
  424b04:	ldrb	w1, [x0, #137]
  424b08:	tbz	w1, #3, 424b1c <print_target_variables@@Base+0x1bc>
  424b0c:	cbnz	x26, 424b94 <print_target_variables@@Base+0x234>
  424b10:	mov	w0, #0x2f                  	// #47
  424b14:	strb	w0, [x20]
  424b18:	b	424bb0 <print_target_variables@@Base+0x250>
  424b1c:	strb	wzr, [x20]
  424b20:	mov	x1, x21
  424b24:	mov	x0, x19
  424b28:	bl	40b090 <dir_file_exists_p@@Base>
  424b2c:	cbnz	w0, 424bf4 <print_target_variables@@Base+0x294>
  424b30:	add	w22, w22, #0x1
  424b34:	ldr	x20, [x25, w22, uxtw #3]
  424b38:	cbnz	x20, 424aa0 <print_target_variables@@Base+0x140>
  424b3c:	mov	sp, x29
  424b40:	mov	x0, #0x0                   	// #0
  424b44:	ldp	x19, x20, [sp, #16]
  424b48:	ldp	x21, x22, [sp, #32]
  424b4c:	ldp	x23, x24, [sp, #48]
  424b50:	ldp	x25, x26, [sp, #64]
  424b54:	ldp	x27, x28, [sp, #80]
  424b58:	ldp	x29, x30, [sp], #256
  424b5c:	ret
  424b60:	mov	x2, x27
  424b64:	mov	x1, x21
  424b68:	mov	x0, x20
  424b6c:	bl	406640 <memcpy@plt>
  424b70:	b	424af0 <print_target_variables@@Base+0x190>
  424b74:	mov	w3, #0x2f                  	// #47
  424b78:	strb	w3, [x19, x28]
  424b7c:	add	x0, x20, #0x1
  424b80:	mov	x2, x23
  424b84:	add	x20, x0, x23
  424b88:	mov	x1, x24
  424b8c:	bl	406640 <memcpy@plt>
  424b90:	b	424ac4 <print_target_variables@@Base+0x164>
  424b94:	ldr	x0, [x0, #112]
  424b98:	cmp	x0, #0x2
  424b9c:	ccmn	x0, #0x1, #0x4, ne  // ne = any
  424ba0:	b.ne	424c60 <print_target_variables@@Base+0x300>  // b.any
  424ba4:	mov	w1, #0x2f                  	// #47
  424ba8:	str	x0, [x26]
  424bac:	strb	w1, [x20]
  424bb0:	ldr	x0, [x29, #104]
  424bb4:	cbz	x0, 424bbc <print_target_variables@@Base+0x25c>
  424bb8:	str	w22, [x0]
  424bbc:	ldr	x2, [x29, #112]
  424bc0:	add	x1, x20, #0x1
  424bc4:	sub	x1, x1, x19
  424bc8:	mov	x0, x19
  424bcc:	add	x1, x1, x2
  424bd0:	bl	4224d0 <strcache_add_len@@Base>
  424bd4:	mov	sp, x29
  424bd8:	ldp	x19, x20, [sp, #16]
  424bdc:	ldp	x21, x22, [sp, #32]
  424be0:	ldp	x23, x24, [sp, #48]
  424be4:	ldp	x25, x26, [sp, #64]
  424be8:	ldp	x27, x28, [sp, #80]
  424bec:	ldp	x29, x30, [sp], #256
  424bf0:	ret
  424bf4:	mov	w0, #0x2f                  	// #47
  424bf8:	strb	w0, [x20]
  424bfc:	b	424c10 <print_target_variables@@Base+0x2b0>
  424c00:	bl	406d70 <__errno_location@plt>
  424c04:	ldr	w0, [x0]
  424c08:	cmp	w0, #0x4
  424c0c:	b.ne	424b30 <print_target_variables@@Base+0x1d0>  // b.any
  424c10:	add	x2, x29, #0x80
  424c14:	mov	x1, x19
  424c18:	mov	w0, #0x0                   	// #0
  424c1c:	bl	406d90 <__xstat@plt>
  424c20:	cmn	w0, #0x1
  424c24:	b.eq	424c00 <print_target_variables@@Base+0x2a0>  // b.none
  424c28:	cbnz	w0, 424b30 <print_target_variables@@Base+0x1d0>
  424c2c:	cbz	x26, 424bb0 <print_target_variables@@Base+0x250>
  424c30:	ldp	x1, x2, [x29, #216]
  424c34:	mov	x0, x19
  424c38:	bl	40db28 <file_timestamp_cons@@Base>
  424c3c:	str	x0, [x26]
  424c40:	b	424bb0 <print_target_variables@@Base+0x250>
  424c44:	mov	x21, x24
  424c48:	ldr	x2, [x29, #112]
  424c4c:	b	424a74 <print_target_variables@@Base+0x114>
  424c50:	mov	x21, x24
  424c54:	mov	x23, #0x0                   	// #0
  424c58:	ldr	x2, [x29, #112]
  424c5c:	b	424a74 <print_target_variables@@Base+0x114>
  424c60:	mov	w0, #0x2f                  	// #47
  424c64:	str	xzr, [x26]
  424c68:	strb	w0, [x20]
  424c6c:	b	424bb0 <print_target_variables@@Base+0x250>

0000000000424c70 <construct_vpath_list@@Base>:
  424c70:	stp	x29, x30, [sp, #-112]!
  424c74:	mov	x29, sp
  424c78:	stp	x19, x20, [sp, #16]
  424c7c:	mov	x19, x1
  424c80:	stp	x21, x22, [sp, #32]
  424c84:	stp	x25, x26, [sp, #64]
  424c88:	stp	x0, xzr, [sp, #96]
  424c8c:	cbz	x0, 424c98 <construct_vpath_list@@Base+0x28>
  424c90:	bl	41b5a0 <find_percent@@Base>
  424c94:	str	x0, [sp, #104]
  424c98:	cbz	x19, 424e98 <construct_vpath_list@@Base+0x228>
  424c9c:	stp	x23, x24, [sp, #48]
  424ca0:	adrp	x21, 443000 <expanding_var@@Base+0x338>
  424ca4:	add	x21, x21, #0x448
  424ca8:	stp	x27, x28, [sp, #80]
  424cac:	mov	w3, #0x42                  	// #66
  424cb0:	ldrb	w1, [x19]
  424cb4:	mov	x0, x1
  424cb8:	ldrh	w2, [x21, x1, lsl #1]
  424cbc:	tst	w3, w2
  424cc0:	b.eq	424cdc <construct_vpath_list@@Base+0x6c>  // b.none
  424cc4:	nop
  424cc8:	ldrb	w1, [x19, #1]!
  424ccc:	mov	x0, x1
  424cd0:	ldrh	w2, [x21, x1, lsl #1]
  424cd4:	tst	w3, w2
  424cd8:	b.ne	424cc8 <construct_vpath_list@@Base+0x58>  // b.any
  424cdc:	cbz	w0, 424f2c <construct_vpath_list@@Base+0x2bc>
  424ce0:	mov	x2, x19
  424ce4:	mov	w24, #0x2                   	// #2
  424ce8:	mov	w3, #0x42                  	// #66
  424cec:	nop
  424cf0:	ldrb	w0, [x2, #1]!
  424cf4:	ldrh	w1, [x21, x1, lsl #1]
  424cf8:	tst	w3, w1
  424cfc:	sxtw	x1, w0
  424d00:	cinc	w24, w24, ne  // ne = any
  424d04:	cbnz	w0, 424cf0 <construct_vpath_list@@Base+0x80>
  424d08:	ubfiz	x0, x24, #3, #32
  424d0c:	bl	418a50 <xmalloc@@Base>
  424d10:	mov	x28, #0x0                   	// #0
  424d14:	ldrb	w3, [x19]
  424d18:	mov	x22, x0
  424d1c:	mov	w27, #0x0                   	// #0
  424d20:	mov	w25, #0x42                  	// #66
  424d24:	cbz	w3, 424e60 <construct_vpath_list@@Base+0x1f0>
  424d28:	cmp	w3, #0x3a
  424d2c:	mov	w2, w3
  424d30:	mov	x20, x19
  424d34:	mov	x26, #0x0                   	// #0
  424d38:	b.ne	424d50 <construct_vpath_list@@Base+0xe0>  // b.any
  424d3c:	b	424d70 <construct_vpath_list@@Base+0x100>
  424d40:	ldrb	w2, [x20, #1]!
  424d44:	cmp	w2, #0x3a
  424d48:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  424d4c:	b.eq	424d58 <construct_vpath_list@@Base+0xe8>  // b.none
  424d50:	ldrh	w1, [x21, w2, sxtw #1]
  424d54:	tbz	w1, #1, 424d40 <construct_vpath_list@@Base+0xd0>
  424d58:	sub	x26, x20, x19
  424d5c:	cmp	x26, #0x1
  424d60:	b.ls	424e50 <construct_vpath_list@@Base+0x1e0>  // b.plast
  424d64:	ldurb	w0, [x20, #-1]
  424d68:	cmp	w0, #0x2f
  424d6c:	b.eq	424e44 <construct_vpath_list@@Base+0x1d4>  // b.none
  424d70:	mov	x1, x26
  424d74:	mov	w23, w27
  424d78:	mov	x0, x19
  424d7c:	bl	4224d0 <strcache_add_len@@Base>
  424d80:	add	w27, w27, #0x1
  424d84:	mov	x19, x20
  424d88:	bl	40b3a8 <dir_name@@Base>
  424d8c:	str	x0, [x22, x23, lsl #3]
  424d90:	cmp	x28, x26
  424d94:	csel	x28, x28, x26, cs  // cs = hs, nlast
  424d98:	ldrb	w3, [x20]
  424d9c:	ldrh	w0, [x21, w3, sxtw #1]
  424da0:	tst	w25, w0
  424da4:	b.eq	424db8 <construct_vpath_list@@Base+0x148>  // b.none
  424da8:	ldrb	w3, [x19, #1]!
  424dac:	ldrh	w1, [x21, w3, sxtw #1]
  424db0:	tst	w25, w1
  424db4:	b.ne	424da8 <construct_vpath_list@@Base+0x138>  // b.any
  424db8:	cbnz	w3, 424d28 <construct_vpath_list@@Base+0xb8>
  424dbc:	cbz	w27, 424e60 <construct_vpath_list@@Base+0x1f0>
  424dc0:	sub	w4, w24, #0x1
  424dc4:	cmp	w4, w27
  424dc8:	b.hi	424e80 <construct_vpath_list@@Base+0x210>  // b.pmore
  424dcc:	str	xzr, [x22, w27, uxtw #3]
  424dd0:	mov	x0, #0x30                  	// #48
  424dd4:	bl	418a50 <xmalloc@@Base>
  424dd8:	mov	x19, x0
  424ddc:	adrp	x1, 446000 <commands_started@@Base+0x1c8>
  424de0:	ldr	x21, [sp, #96]
  424de4:	stp	x22, x28, [x19, #32]
  424de8:	ldr	x2, [x1, #1864]
  424dec:	str	x2, [x19]
  424df0:	str	x0, [x1, #1864]
  424df4:	mov	x0, x21
  424df8:	bl	422490 <strcache_add@@Base>
  424dfc:	mov	x20, x0
  424e00:	str	x20, [x19, #8]
  424e04:	mov	x0, x21
  424e08:	bl	406680 <strlen@plt>
  424e0c:	ldr	x1, [sp, #104]
  424e10:	ldp	x27, x28, [sp, #80]
  424e14:	sub	x23, x1, x21
  424e18:	add	x23, x20, x23
  424e1c:	cmp	x1, #0x0
  424e20:	str	x0, [x19, #24]
  424e24:	csel	x0, x23, x1, ne  // ne = any
  424e28:	ldp	x23, x24, [sp, #48]
  424e2c:	str	x0, [x19, #16]
  424e30:	ldp	x19, x20, [sp, #16]
  424e34:	ldp	x21, x22, [sp, #32]
  424e38:	ldp	x25, x26, [sp, #64]
  424e3c:	ldp	x29, x30, [sp], #112
  424e40:	ret
  424e44:	sub	x26, x26, #0x1
  424e48:	cmp	x26, #0x1
  424e4c:	b.ne	424d70 <construct_vpath_list@@Base+0x100>  // b.any
  424e50:	cmp	w3, #0x2e
  424e54:	b.ne	424d70 <construct_vpath_list@@Base+0x100>  // b.any
  424e58:	mov	x19, x20
  424e5c:	b	424d98 <construct_vpath_list@@Base+0x128>
  424e60:	mov	x0, x22
  424e64:	ldp	x19, x20, [sp, #16]
  424e68:	ldp	x21, x22, [sp, #32]
  424e6c:	ldp	x23, x24, [sp, #48]
  424e70:	ldp	x25, x26, [sp, #64]
  424e74:	ldp	x27, x28, [sp, #80]
  424e78:	ldp	x29, x30, [sp], #112
  424e7c:	b	406b90 <free@plt>
  424e80:	add	w1, w27, #0x1
  424e84:	mov	x0, x22
  424e88:	lsl	x1, x1, #3
  424e8c:	bl	418aa0 <xrealloc@@Base>
  424e90:	mov	x22, x0
  424e94:	b	424dcc <construct_vpath_list@@Base+0x15c>
  424e98:	ldp	x0, x1, [sp, #96]
  424e9c:	adrp	x25, 446000 <commands_started@@Base+0x1c8>
  424ea0:	ldr	x20, [x25, #1864]
  424ea4:	add	x26, x0, #0x1
  424ea8:	sub	x22, x1, x0
  424eac:	nop
  424eb0:	cbz	x20, 424e30 <construct_vpath_list@@Base+0x1c0>
  424eb4:	ldr	x0, [sp, #96]
  424eb8:	mov	x21, x20
  424ebc:	ldr	x20, [x20]
  424ec0:	cbz	x0, 424f08 <construct_vpath_list@@Base+0x298>
  424ec4:	ldr	x2, [sp, #104]
  424ec8:	ldp	x1, x0, [x21, #8]
  424ecc:	cbz	x2, 424ee4 <construct_vpath_list@@Base+0x274>
  424ed0:	sub	x0, x0, x1
  424ed4:	cmp	x22, x0
  424ed8:	b.eq	424ee8 <construct_vpath_list@@Base+0x278>  // b.none
  424edc:	mov	x19, x21
  424ee0:	b	424eb0 <construct_vpath_list@@Base+0x240>
  424ee4:	cbnz	x0, 424ed0 <construct_vpath_list@@Base+0x260>
  424ee8:	ldr	x0, [sp, #96]
  424eec:	cmp	x0, x1
  424ef0:	b.eq	424f08 <construct_vpath_list@@Base+0x298>  // b.none
  424ef4:	ldrb	w2, [x0]
  424ef8:	ldrb	w0, [x1]
  424efc:	cmp	w0, w2
  424f00:	b.ne	424edc <construct_vpath_list@@Base+0x26c>  // b.any
  424f04:	cbnz	w0, 424f38 <construct_vpath_list@@Base+0x2c8>
  424f08:	cbz	x19, 424f24 <construct_vpath_list@@Base+0x2b4>
  424f0c:	str	x20, [x19]
  424f10:	ldr	x0, [x21, #32]
  424f14:	bl	406b90 <free@plt>
  424f18:	mov	x0, x21
  424f1c:	bl	406b90 <free@plt>
  424f20:	b	424eb0 <construct_vpath_list@@Base+0x240>
  424f24:	str	x20, [x25, #1864]
  424f28:	b	424f10 <construct_vpath_list@@Base+0x2a0>
  424f2c:	mov	x0, #0x10                  	// #16
  424f30:	mov	w24, #0x2                   	// #2
  424f34:	b	424d0c <construct_vpath_list@@Base+0x9c>
  424f38:	add	x1, x1, #0x1
  424f3c:	mov	x0, x26
  424f40:	bl	406b40 <strcmp@plt>
  424f44:	cbz	w0, 424f08 <construct_vpath_list@@Base+0x298>
  424f48:	mov	x19, x21
  424f4c:	b	424eb0 <construct_vpath_list@@Base+0x240>

0000000000424f50 <build_vpath_lists@@Base>:
  424f50:	stp	x29, x30, [sp, #-80]!
  424f54:	mov	x29, sp
  424f58:	stp	x19, x20, [sp, #16]
  424f5c:	adrp	x19, 446000 <commands_started@@Base+0x1c8>
  424f60:	ldr	x0, [x19, #1864]
  424f64:	stp	x21, x22, [sp, #32]
  424f68:	cbz	x0, 425068 <build_vpath_lists@@Base+0x118>
  424f6c:	mov	x2, #0x0                   	// #0
  424f70:	mov	x1, x0
  424f74:	ldr	x0, [x0]
  424f78:	str	x2, [x1]
  424f7c:	mov	x2, x1
  424f80:	cbnz	x0, 424f70 <build_vpath_lists@@Base+0x20>
  424f84:	adrp	x20, 446000 <commands_started@@Base+0x1c8>
  424f88:	str	x1, [x19, #1864]
  424f8c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  424f90:	add	x0, x0, #0x858
  424f94:	ldr	w21, [x20, #2048]
  424f98:	add	x22, x19, #0x748
  424f9c:	str	wzr, [x20, #2048]
  424fa0:	bl	40c1b8 <variable_expand@@Base>
  424fa4:	str	w21, [x20, #2048]
  424fa8:	mov	x1, x0
  424fac:	ldrb	w0, [x0]
  424fb0:	cbnz	w0, 424fe4 <build_vpath_lists@@Base+0x94>
  424fb4:	str	wzr, [x20, #2048]
  424fb8:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  424fbc:	add	x0, x0, #0x870
  424fc0:	bl	40c1b8 <variable_expand@@Base>
  424fc4:	str	w21, [x20, #2048]
  424fc8:	mov	x1, x0
  424fcc:	ldrb	w0, [x0]
  424fd0:	cbnz	w0, 425034 <build_vpath_lists@@Base+0xe4>
  424fd4:	ldp	x19, x20, [sp, #16]
  424fd8:	ldp	x21, x22, [sp, #32]
  424fdc:	ldp	x29, x30, [sp], #80
  424fe0:	ret
  424fe4:	mov	w2, #0x25                  	// #37
  424fe8:	add	x0, sp, #0x48
  424fec:	str	x23, [sp, #48]
  424ff0:	ldr	x23, [x19, #1864]
  424ff4:	str	xzr, [x19, #1864]
  424ff8:	strh	w2, [sp, #72]
  424ffc:	bl	424c70 <construct_vpath_list@@Base>
  425000:	ldr	x0, [x19, #1864]
  425004:	str	x23, [x19, #1864]
  425008:	ldr	w21, [x20, #2048]
  42500c:	str	wzr, [x20, #2048]
  425010:	str	x0, [x22, #8]
  425014:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425018:	add	x0, x0, #0x870
  42501c:	ldr	x23, [sp, #48]
  425020:	bl	40c1b8 <variable_expand@@Base>
  425024:	str	w21, [x20, #2048]
  425028:	mov	x1, x0
  42502c:	ldrb	w0, [x0]
  425030:	cbz	w0, 424fd4 <build_vpath_lists@@Base+0x84>
  425034:	mov	w2, #0x25                  	// #37
  425038:	add	x0, sp, #0x48
  42503c:	ldr	x20, [x19, #1864]
  425040:	str	xzr, [x19, #1864]
  425044:	strh	w2, [sp, #72]
  425048:	bl	424c70 <construct_vpath_list@@Base>
  42504c:	ldr	x0, [x19, #1864]
  425050:	str	x20, [x19, #1864]
  425054:	str	x0, [x22, #16]
  425058:	ldp	x19, x20, [sp, #16]
  42505c:	ldp	x21, x22, [sp, #32]
  425060:	ldp	x29, x30, [sp], #80
  425064:	ret
  425068:	mov	x1, #0x0                   	// #0
  42506c:	b	424f84 <build_vpath_lists@@Base+0x34>

0000000000425070 <gpath_search@@Base>:
  425070:	stp	x29, x30, [sp, #-48]!
  425074:	adrp	x2, 446000 <commands_started@@Base+0x1c8>
  425078:	mov	x29, sp
  42507c:	stp	x19, x20, [sp, #16]
  425080:	mov	x20, x1
  425084:	ldr	x1, [x2, #1880]
  425088:	cbz	x1, 4250f8 <gpath_search@@Base+0x88>
  42508c:	ldr	x2, [x1, #40]
  425090:	stp	x21, x22, [sp, #32]
  425094:	mov	x22, x0
  425098:	cmp	x2, x20
  42509c:	mov	w0, #0x0                   	// #0
  4250a0:	b.cc	4250e8 <gpath_search@@Base+0x78>  // b.lo, b.ul, b.last
  4250a4:	ldr	x21, [x1, #32]
  4250a8:	ldr	x19, [x21]
  4250ac:	cbz	x19, 4250e8 <gpath_search@@Base+0x78>
  4250b0:	mov	x2, x20
  4250b4:	mov	x1, x22
  4250b8:	mov	x0, x19
  4250bc:	bl	406930 <strncmp@plt>
  4250c0:	cbnz	w0, 4250cc <gpath_search@@Base+0x5c>
  4250c4:	ldrb	w0, [x19, x20]
  4250c8:	cbz	w0, 425108 <gpath_search@@Base+0x98>
  4250cc:	ldr	x19, [x21, #8]!
  4250d0:	cbnz	x19, 4250b0 <gpath_search@@Base+0x40>
  4250d4:	mov	w0, #0x0                   	// #0
  4250d8:	ldp	x19, x20, [sp, #16]
  4250dc:	ldp	x21, x22, [sp, #32]
  4250e0:	ldp	x29, x30, [sp], #48
  4250e4:	ret
  4250e8:	ldp	x19, x20, [sp, #16]
  4250ec:	ldp	x21, x22, [sp, #32]
  4250f0:	ldp	x29, x30, [sp], #48
  4250f4:	ret
  4250f8:	mov	w0, #0x0                   	// #0
  4250fc:	ldp	x19, x20, [sp, #16]
  425100:	ldp	x29, x30, [sp], #48
  425104:	ret
  425108:	mov	w0, #0x1                   	// #1
  42510c:	ldp	x19, x20, [sp, #16]
  425110:	ldp	x21, x22, [sp, #32]
  425114:	ldp	x29, x30, [sp], #48
  425118:	ret
  42511c:	nop

0000000000425120 <vpath_search@@Base>:
  425120:	stp	x29, x30, [sp, #-64]!
  425124:	mov	x29, sp
  425128:	stp	x21, x22, [sp, #32]
  42512c:	mov	x21, x0
  425130:	ldrb	w0, [x0]
  425134:	cmp	w0, #0x2f
  425138:	b.eq	4251ec <vpath_search@@Base+0xcc>  // b.none
  42513c:	adrp	x0, 446000 <commands_started@@Base+0x1c8>
  425140:	stp	x19, x20, [sp, #16]
  425144:	mov	x22, x3
  425148:	ldr	x19, [x0, #1864]
  42514c:	stp	x23, x24, [sp, #48]
  425150:	mov	x20, x2
  425154:	mov	x23, x1
  425158:	add	x24, x0, #0x748
  42515c:	cbz	x19, 4251fc <vpath_search@@Base+0xdc>
  425160:	cbz	x2, 425170 <vpath_search@@Base+0x50>
  425164:	str	wzr, [x2]
  425168:	str	wzr, [x3]
  42516c:	nop
  425170:	ldp	x0, x1, [x19, #8]
  425174:	mov	x2, x21
  425178:	bl	4105c0 <pattern_matches@@Base>
  42517c:	cbnz	w0, 4251c8 <vpath_search@@Base+0xa8>
  425180:	cbz	x20, 425190 <vpath_search@@Base+0x70>
  425184:	ldr	w4, [x20]
  425188:	add	w4, w4, #0x1
  42518c:	str	w4, [x20]
  425190:	ldr	x19, [x19]
  425194:	cbnz	x19, 425170 <vpath_search@@Base+0x50>
  425198:	ldr	x1, [x24, #8]
  42519c:	cbz	x1, 4251e4 <vpath_search@@Base+0xc4>
  4251a0:	ldp	x0, x1, [x1, #32]
  4251a4:	mov	x4, x22
  4251a8:	mov	x3, x23
  4251ac:	mov	x2, x21
  4251b0:	bl	4249e8 <print_target_variables@@Base+0x88>
  4251b4:	ldp	x19, x20, [sp, #16]
  4251b8:	ldp	x21, x22, [sp, #32]
  4251bc:	ldp	x23, x24, [sp, #48]
  4251c0:	ldp	x29, x30, [sp], #64
  4251c4:	ret
  4251c8:	ldp	x0, x1, [x19, #32]
  4251cc:	mov	x4, x22
  4251d0:	mov	x3, x23
  4251d4:	mov	x2, x21
  4251d8:	bl	4249e8 <print_target_variables@@Base+0x88>
  4251dc:	cbz	x0, 425180 <vpath_search@@Base+0x60>
  4251e0:	b	4251b4 <vpath_search@@Base+0x94>
  4251e4:	ldp	x19, x20, [sp, #16]
  4251e8:	ldp	x23, x24, [sp, #48]
  4251ec:	mov	x0, #0x0                   	// #0
  4251f0:	ldp	x21, x22, [sp, #32]
  4251f4:	ldp	x29, x30, [sp], #64
  4251f8:	ret
  4251fc:	ldr	x1, [x24, #8]
  425200:	cbz	x1, 4251e4 <vpath_search@@Base+0xc4>
  425204:	cbz	x2, 4251a0 <vpath_search@@Base+0x80>
  425208:	str	wzr, [x2]
  42520c:	str	wzr, [x3]
  425210:	cbnz	x1, 4251a0 <vpath_search@@Base+0x80>
  425214:	b	4251e4 <vpath_search@@Base+0xc4>

0000000000425218 <print_vpath_data_base@@Base>:
  425218:	stp	x29, x30, [sp, #-96]!
  42521c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425220:	add	x1, x1, #0x888
  425224:	mov	x29, sp
  425228:	mov	w2, #0x5                   	// #5
  42522c:	stp	x25, x26, [sp, #64]
  425230:	adrp	x26, 446000 <commands_started@@Base+0x1c8>
  425234:	mov	x0, #0x0                   	// #0
  425238:	stp	x19, x20, [sp, #16]
  42523c:	stp	x21, x22, [sp, #32]
  425240:	stp	x23, x24, [sp, #48]
  425244:	bl	406cd0 <dcgettext@plt>
  425248:	bl	406ae0 <puts@plt>
  42524c:	ldr	x20, [x26, #1864]
  425250:	cbz	x20, 425380 <print_vpath_data_base@@Base+0x168>
  425254:	adrp	x25, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425258:	adrp	x21, 42c000 <_IO_stdin_used@@Base+0x5c20>
  42525c:	add	x25, x25, #0x8c0
  425260:	add	x21, x21, #0x8d0
  425264:	mov	w24, #0x0                   	// #0
  425268:	mov	w23, #0xa                   	// #10
  42526c:	mov	w22, #0x3a                  	// #58
  425270:	str	x27, [sp, #80]
  425274:	nop
  425278:	ldr	x1, [x20, #8]
  42527c:	mov	x0, x25
  425280:	add	w24, w24, #0x1
  425284:	bl	406d60 <printf@plt>
  425288:	ldr	x2, [x20, #32]
  42528c:	ldr	x1, [x2]
  425290:	cbz	x1, 4252c0 <print_vpath_data_base@@Base+0xa8>
  425294:	mov	w19, #0x0                   	// #0
  425298:	add	w27, w19, #0x1
  42529c:	mov	x0, x21
  4252a0:	mov	x19, x27
  4252a4:	ldr	x2, [x2, x27, lsl #3]
  4252a8:	cmp	x2, #0x0
  4252ac:	csel	w2, w23, w22, eq  // eq = none
  4252b0:	bl	406d60 <printf@plt>
  4252b4:	ldr	x2, [x20, #32]
  4252b8:	ldr	x1, [x2, x27, lsl #3]
  4252bc:	cbnz	x1, 425298 <print_vpath_data_base@@Base+0x80>
  4252c0:	ldr	x20, [x20]
  4252c4:	cbnz	x20, 425278 <print_vpath_data_base@@Base+0x60>
  4252c8:	ldr	x0, [x26, #1864]
  4252cc:	cbz	x0, 42537c <print_vpath_data_base@@Base+0x164>
  4252d0:	mov	w2, #0x5                   	// #5
  4252d4:	add	x26, x26, #0x748
  4252d8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4252dc:	mov	x0, #0x0                   	// #0
  4252e0:	add	x1, x1, #0x8d8
  4252e4:	bl	406cd0 <dcgettext@plt>
  4252e8:	mov	w1, w24
  4252ec:	bl	406d60 <printf@plt>
  4252f0:	ldr	x3, [x26, #8]
  4252f4:	ldr	x27, [sp, #80]
  4252f8:	cbz	x3, 4253a4 <print_vpath_data_base@@Base+0x18c>
  4252fc:	mov	w2, #0x5                   	// #5
  425300:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425304:	mov	x0, #0x0                   	// #0
  425308:	add	x1, x1, #0x928
  42530c:	ldr	x21, [x3, #32]
  425310:	bl	406cd0 <dcgettext@plt>
  425314:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  425318:	ldr	x1, [x1, #384]
  42531c:	bl	406690 <fputs@plt>
  425320:	ldr	x1, [x21]
  425324:	cbz	x1, 425364 <print_vpath_data_base@@Base+0x14c>
  425328:	adrp	x22, 42c000 <_IO_stdin_used@@Base+0x5c20>
  42532c:	add	x22, x22, #0x8d0
  425330:	mov	w19, #0x0                   	// #0
  425334:	mov	w24, #0xa                   	// #10
  425338:	mov	w23, #0x3a                  	// #58
  42533c:	nop
  425340:	add	w20, w19, #0x1
  425344:	mov	x0, x22
  425348:	mov	x19, x20
  42534c:	ldr	x2, [x21, x20, lsl #3]
  425350:	cmp	x2, #0x0
  425354:	csel	w2, w24, w23, eq  // eq = none
  425358:	bl	406d60 <printf@plt>
  42535c:	ldr	x1, [x21, x20, lsl #3]
  425360:	cbnz	x1, 425340 <print_vpath_data_base@@Base+0x128>
  425364:	ldp	x19, x20, [sp, #16]
  425368:	ldp	x21, x22, [sp, #32]
  42536c:	ldp	x23, x24, [sp, #48]
  425370:	ldp	x25, x26, [sp, #64]
  425374:	ldp	x29, x30, [sp], #96
  425378:	ret
  42537c:	ldr	x27, [sp, #80]
  425380:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425384:	add	x1, x1, #0x8a0
  425388:	mov	w2, #0x5                   	// #5
  42538c:	add	x26, x26, #0x748
  425390:	mov	x0, #0x0                   	// #0
  425394:	bl	406cd0 <dcgettext@plt>
  425398:	bl	406ae0 <puts@plt>
  42539c:	ldr	x3, [x26, #8]
  4253a0:	cbnz	x3, 4252fc <print_vpath_data_base@@Base+0xe4>
  4253a4:	mov	w2, #0x5                   	// #5
  4253a8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4253ac:	mov	x0, #0x0                   	// #0
  4253b0:	add	x1, x1, #0x8f8
  4253b4:	bl	406cd0 <dcgettext@plt>
  4253b8:	ldp	x19, x20, [sp, #16]
  4253bc:	ldp	x21, x22, [sp, #32]
  4253c0:	ldp	x23, x24, [sp, #48]
  4253c4:	ldp	x25, x26, [sp, #64]
  4253c8:	ldp	x29, x30, [sp], #96
  4253cc:	b	406ae0 <puts@plt>
  4253d0:	stp	x29, x30, [sp, #-32]!
  4253d4:	mov	x29, sp
  4253d8:	stp	x19, x20, [sp, #16]
  4253dc:	mov	w20, w0
  4253e0:	mov	w19, w1
  4253e4:	b	4253f8 <print_vpath_data_base@@Base+0x1e0>
  4253e8:	bl	406d70 <__errno_location@plt>
  4253ec:	ldr	w0, [x0]
  4253f0:	cmp	w0, #0x4
  4253f4:	b.ne	425450 <print_vpath_data_base@@Base+0x238>  // b.any
  4253f8:	mov	w0, w20
  4253fc:	mov	w1, #0x3                   	// #3
  425400:	bl	425f10 <rpl_fcntl@@Base>
  425404:	cmn	w0, #0x1
  425408:	b.eq	4253e8 <print_vpath_data_base@@Base+0x1d0>  // b.none
  42540c:	tbnz	w0, #31, 425450 <print_vpath_data_base@@Base+0x238>
  425410:	cmp	w19, #0x0
  425414:	and	w1, w0, #0xfffff7ff
  425418:	orr	w19, w0, #0x800
  42541c:	csel	w19, w19, w1, eq  // eq = none
  425420:	b	425434 <print_vpath_data_base@@Base+0x21c>
  425424:	bl	406d70 <__errno_location@plt>
  425428:	ldr	w0, [x0]
  42542c:	cmp	w0, #0x4
  425430:	b.ne	42545c <print_vpath_data_base@@Base+0x244>  // b.any
  425434:	mov	w2, w19
  425438:	mov	w0, w20
  42543c:	mov	w1, #0x4                   	// #4
  425440:	bl	425f10 <rpl_fcntl@@Base>
  425444:	cmn	w0, #0x1
  425448:	b.eq	425424 <print_vpath_data_base@@Base+0x20c>  // b.none
  42544c:	tbnz	w0, #31, 42545c <print_vpath_data_base@@Base+0x244>
  425450:	ldp	x19, x20, [sp, #16]
  425454:	ldp	x29, x30, [sp], #32
  425458:	ret
  42545c:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425460:	add	x0, x0, #0x958
  425464:	bl	419828 <pfatal_with_name@@Base>

0000000000425468 <jobserver_parse_auth@@Base>:
  425468:	stp	x29, x30, [sp, #-48]!
  42546c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425470:	add	x1, x1, #0x970
  425474:	mov	x29, sp
  425478:	stp	x19, x20, [sp, #16]
  42547c:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  425480:	add	x20, x19, #0x150
  425484:	add	x3, x20, #0x4
  425488:	mov	x2, x20
  42548c:	str	x21, [sp, #32]
  425490:	mov	x21, x0
  425494:	bl	406cf0 <__isoc99_sscanf@plt>
  425498:	cmp	w0, #0x2
  42549c:	b.ne	425550 <jobserver_parse_auth@@Base+0xe8>  // b.any
  4254a0:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4254a4:	ldr	w0, [x0, #1088]
  4254a8:	tbnz	w0, #2, 425520 <jobserver_parse_auth@@Base+0xb8>
  4254ac:	ldr	w0, [x19, #336]
  4254b0:	mov	w1, #0x1                   	// #1
  4254b4:	bl	425f10 <rpl_fcntl@@Base>
  4254b8:	cmn	w0, #0x1
  4254bc:	b.ne	4254ec <jobserver_parse_auth@@Base+0x84>  // b.any
  4254c0:	bl	406d70 <__errno_location@plt>
  4254c4:	ldr	w0, [x0]
  4254c8:	cmp	w0, #0x9
  4254cc:	b.ne	425584 <jobserver_parse_auth@@Base+0x11c>  // b.any
  4254d0:	mov	x1, #0xffffffffffffffff    	// #-1
  4254d4:	mov	w0, #0x0                   	// #0
  4254d8:	str	x1, [x19, #336]
  4254dc:	ldp	x19, x20, [sp, #16]
  4254e0:	ldr	x21, [sp, #32]
  4254e4:	ldp	x29, x30, [sp], #48
  4254e8:	ret
  4254ec:	ldr	w0, [x20, #4]
  4254f0:	mov	w1, #0x1                   	// #1
  4254f4:	bl	425f10 <rpl_fcntl@@Base>
  4254f8:	cmn	w0, #0x1
  4254fc:	b.eq	4254c0 <jobserver_parse_auth@@Base+0x58>  // b.none
  425500:	ldr	w0, [x19, #336]
  425504:	mov	w1, #0x0                   	// #0
  425508:	bl	4253d0 <print_vpath_data_base@@Base+0x1b8>
  42550c:	mov	w0, #0x1                   	// #1
  425510:	ldp	x19, x20, [sp, #16]
  425514:	ldr	x21, [sp, #32]
  425518:	ldp	x29, x30, [sp], #48
  42551c:	ret
  425520:	mov	w2, #0x5                   	// #5
  425524:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425528:	mov	x0, #0x0                   	// #0
  42552c:	add	x1, x1, #0x9b0
  425530:	bl	406cd0 <dcgettext@plt>
  425534:	ldr	w1, [x19, #336]
  425538:	ldr	w2, [x20, #4]
  42553c:	bl	406d60 <printf@plt>
  425540:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  425544:	ldr	x0, [x0, #384]
  425548:	bl	406c20 <fflush@plt>
  42554c:	b	4254ac <jobserver_parse_auth@@Base+0x44>
  425550:	mov	x0, x21
  425554:	bl	406680 <strlen@plt>
  425558:	mov	w2, #0x5                   	// #5
  42555c:	mov	x19, x0
  425560:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425564:	mov	x0, #0x0                   	// #0
  425568:	add	x1, x1, #0x978
  42556c:	bl	406cd0 <dcgettext@plt>
  425570:	mov	x3, x21
  425574:	mov	x2, x0
  425578:	mov	x1, x19
  42557c:	mov	x0, #0x0                   	// #0
  425580:	bl	41a060 <fatal@@Base>
  425584:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425588:	add	x1, x1, #0x9d0
  42558c:	mov	w2, #0x5                   	// #5
  425590:	mov	x0, #0x0                   	// #0
  425594:	bl	406cd0 <dcgettext@plt>
  425598:	bl	419828 <pfatal_with_name@@Base>
  42559c:	nop

00000000004255a0 <jobserver_get_auth@@Base>:
  4255a0:	stp	x29, x30, [sp, #-32]!
  4255a4:	mov	x0, #0x2a                  	// #42
  4255a8:	mov	x29, sp
  4255ac:	str	x19, [sp, #16]
  4255b0:	bl	418a50 <xmalloc@@Base>
  4255b4:	adrp	x1, 443000 <expanding_var@@Base+0x338>
  4255b8:	add	x3, x1, #0x150
  4255bc:	mov	x19, x0
  4255c0:	ldr	w2, [x1, #336]
  4255c4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4255c8:	ldr	w3, [x3, #4]
  4255cc:	add	x1, x1, #0x970
  4255d0:	bl	406730 <sprintf@plt>
  4255d4:	mov	x0, x19
  4255d8:	ldr	x19, [sp, #16]
  4255dc:	ldp	x29, x30, [sp], #32
  4255e0:	ret
  4255e4:	nop

00000000004255e8 <jobserver_enabled@@Base>:
  4255e8:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4255ec:	ldr	w0, [x0, #336]
  4255f0:	mvn	w0, w0
  4255f4:	lsr	w0, w0, #31
  4255f8:	ret
  4255fc:	nop

0000000000425600 <jobserver_clear@@Base>:
  425600:	stp	x29, x30, [sp, #-32]!
  425604:	mov	x29, sp
  425608:	stp	x19, x20, [sp, #16]
  42560c:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  425610:	ldr	w0, [x20, #336]
  425614:	tbnz	w0, #31, 42561c <jobserver_clear@@Base+0x1c>
  425618:	bl	406a50 <close@plt>
  42561c:	add	x19, x20, #0x150
  425620:	ldr	w0, [x19, #4]
  425624:	tbnz	w0, #31, 42562c <jobserver_clear@@Base+0x2c>
  425628:	bl	406a50 <close@plt>
  42562c:	ldr	w0, [x19, #8]
  425630:	tbnz	w0, #31, 425638 <jobserver_clear@@Base+0x38>
  425634:	bl	406a50 <close@plt>
  425638:	mov	w0, #0xffffffff            	// #-1
  42563c:	mov	x1, #0xffffffffffffffff    	// #-1
  425640:	str	x1, [x20, #336]
  425644:	str	w0, [x19, #8]
  425648:	ldp	x19, x20, [sp, #16]
  42564c:	ldp	x29, x30, [sp], #32
  425650:	ret
  425654:	nop

0000000000425658 <jobserver_release@@Base>:
  425658:	stp	x29, x30, [sp, #-48]!
  42565c:	mov	x29, sp
  425660:	stp	x19, x20, [sp, #16]
  425664:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  425668:	add	x19, x19, #0x150
  42566c:	add	x20, x19, #0xc
  425670:	str	x21, [sp, #32]
  425674:	mov	w21, w0
  425678:	b	42568c <jobserver_release@@Base+0x34>
  42567c:	bl	406d70 <__errno_location@plt>
  425680:	ldr	w1, [x0]
  425684:	cmp	w1, #0x4
  425688:	b.ne	4256bc <jobserver_release@@Base+0x64>  // b.any
  42568c:	ldr	w0, [x19, #4]
  425690:	mov	x1, x20
  425694:	mov	x2, #0x1                   	// #1
  425698:	bl	406a90 <write@plt>
  42569c:	cmn	w0, #0x1
  4256a0:	b.eq	42567c <jobserver_release@@Base+0x24>  // b.none
  4256a4:	cmp	w0, #0x1
  4256a8:	b.ne	4256bc <jobserver_release@@Base+0x64>  // b.any
  4256ac:	ldp	x19, x20, [sp, #16]
  4256b0:	ldr	x21, [sp, #32]
  4256b4:	ldp	x29, x30, [sp], #48
  4256b8:	ret
  4256bc:	cbnz	w21, 4256e0 <jobserver_release@@Base+0x88>
  4256c0:	ldp	x19, x20, [sp, #16]
  4256c4:	adrp	x1, 42b000 <_IO_stdin_used@@Base+0x4c20>
  4256c8:	ldr	x21, [sp, #32]
  4256cc:	add	x1, x1, #0x350
  4256d0:	ldp	x29, x30, [sp], #48
  4256d4:	adrp	x0, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4256d8:	add	x0, x0, #0x9f8
  4256dc:	b	419f38 <perror_with_name@@Base>
  4256e0:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4256e4:	add	x1, x1, #0x9e8
  4256e8:	mov	w2, #0x5                   	// #5
  4256ec:	mov	x0, #0x0                   	// #0
  4256f0:	bl	406cd0 <dcgettext@plt>
  4256f4:	bl	419828 <pfatal_with_name@@Base>

00000000004256f8 <jobserver_acquire_all@@Base>:
  4256f8:	stp	x29, x30, [sp, #-48]!
  4256fc:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  425700:	mov	w1, #0x1                   	// #1
  425704:	mov	x29, sp
  425708:	stp	x19, x20, [sp, #16]
  42570c:	add	x20, x0, #0x150
  425710:	ldr	w0, [x0, #336]
  425714:	mov	w19, #0x0                   	// #0
  425718:	bl	4253d0 <print_vpath_data_base@@Base+0x1b8>
  42571c:	ldr	w0, [x20, #4]
  425720:	bl	406a50 <close@plt>
  425724:	mov	w0, #0xffffffff            	// #-1
  425728:	str	w0, [x20, #4]
  42572c:	ldr	w0, [x20]
  425730:	add	x1, sp, #0x2f
  425734:	mov	x2, #0x1                   	// #1
  425738:	bl	406c80 <read@plt>
  42573c:	cmn	w0, #0x1
  425740:	b.eq	425768 <jobserver_acquire_all@@Base+0x70>  // b.none
  425744:	cmp	w0, #0x1
  425748:	b.ne	425778 <jobserver_acquire_all@@Base+0x80>  // b.any
  42574c:	ldr	w0, [x20]
  425750:	add	x1, sp, #0x2f
  425754:	mov	x2, #0x1                   	// #1
  425758:	add	w19, w19, #0x1
  42575c:	bl	406c80 <read@plt>
  425760:	cmn	w0, #0x1
  425764:	b.ne	425744 <jobserver_acquire_all@@Base+0x4c>  // b.any
  425768:	bl	406d70 <__errno_location@plt>
  42576c:	ldr	w0, [x0]
  425770:	cmp	w0, #0x4
  425774:	b.eq	42572c <jobserver_acquire_all@@Base+0x34>  // b.none
  425778:	mov	w0, w19
  42577c:	ldp	x19, x20, [sp, #16]
  425780:	ldp	x29, x30, [sp], #48
  425784:	ret

0000000000425788 <jobserver_signal@@Base>:
  425788:	stp	x29, x30, [sp, #-32]!
  42578c:	mov	x29, sp
  425790:	str	x19, [sp, #16]
  425794:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  425798:	add	x19, x19, #0x150
  42579c:	ldr	w0, [x19, #8]
  4257a0:	tbnz	w0, #31, 4257b0 <jobserver_signal@@Base+0x28>
  4257a4:	bl	406a50 <close@plt>
  4257a8:	mov	w0, #0xffffffff            	// #-1
  4257ac:	str	w0, [x19, #8]
  4257b0:	ldr	x19, [sp, #16]
  4257b4:	ldp	x29, x30, [sp], #32
  4257b8:	ret
  4257bc:	nop

00000000004257c0 <jobserver_pre_acquire@@Base>:
  4257c0:	ret
  4257c4:	nop

00000000004257c8 <jobserver_acquire@@Base>:
  4257c8:	stp	x29, x30, [sp, #-352]!
  4257cc:	mov	x29, sp
  4257d0:	stp	x19, x20, [sp, #16]
  4257d4:	mov	w19, w0
  4257d8:	add	x0, sp, #0x60
  4257dc:	stp	x21, x22, [sp, #32]
  4257e0:	mov	x22, #0x0                   	// #0
  4257e4:	str	x23, [sp, #48]
  4257e8:	bl	406910 <sigemptyset@plt>
  4257ec:	cbz	w19, 4257fc <jobserver_acquire@@Base+0x34>
  4257f0:	add	x22, sp, #0x50
  4257f4:	mov	x0, #0x1                   	// #1
  4257f8:	stp	x0, xzr, [sp, #80]
  4257fc:	adrp	x20, 443000 <expanding_var@@Base+0x338>
  425800:	add	x21, sp, #0xe0
  425804:	add	x20, x20, #0x150
  425808:	add	x19, sp, #0x160
  42580c:	mov	x23, #0x1                   	// #1
  425810:	mov	x0, x21
  425814:	nop
  425818:	str	xzr, [x0], #8
  42581c:	cmp	x19, x0
  425820:	b.ne	425818 <jobserver_acquire@@Base+0x50>  // b.any
  425824:	ldr	w0, [x20]
  425828:	add	x5, sp, #0x60
  42582c:	mov	x4, x22
  425830:	mov	x3, #0x0                   	// #0
  425834:	cmp	w0, #0x0
  425838:	add	w7, w0, #0x3f
  42583c:	csel	w7, w7, w0, lt  // lt = tstop
  425840:	negs	w6, w0
  425844:	and	w1, w0, #0x3f
  425848:	and	w6, w6, #0x3f
  42584c:	asr	w7, w7, #6
  425850:	csneg	w6, w1, w6, mi  // mi = first
  425854:	add	w0, w0, #0x1
  425858:	mov	x1, x21
  42585c:	sxtw	x7, w7
  425860:	lsl	x6, x23, x6
  425864:	mov	x2, #0x0                   	// #0
  425868:	ldr	x8, [x21, x7, lsl #3]
  42586c:	orr	x6, x6, x8
  425870:	str	x6, [x21, x7, lsl #3]
  425874:	bl	4069c0 <pselect@plt>
  425878:	cmp	w0, #0x0
  42587c:	b.lt	4258e0 <jobserver_acquire@@Base+0x118>  // b.tstop
  425880:	b.ne	425898 <jobserver_acquire@@Base+0xd0>  // b.any
  425884:	b	42590c <jobserver_acquire@@Base+0x144>
  425888:	bl	406d70 <__errno_location@plt>
  42588c:	ldr	w0, [x0]
  425890:	cmp	w0, #0x4
  425894:	b.ne	4258c0 <jobserver_acquire@@Base+0xf8>  // b.any
  425898:	ldr	w0, [x20]
  42589c:	add	x1, sp, #0x4f
  4258a0:	mov	x2, #0x1                   	// #1
  4258a4:	bl	406c80 <read@plt>
  4258a8:	cmn	w0, #0x1
  4258ac:	b.eq	425888 <jobserver_acquire@@Base+0xc0>  // b.none
  4258b0:	cmp	w0, #0x0
  4258b4:	b.ge	425944 <jobserver_acquire@@Base+0x17c>  // b.tcont
  4258b8:	bl	406d70 <__errno_location@plt>
  4258bc:	ldr	w0, [x0]
  4258c0:	cmp	w0, #0xb
  4258c4:	b.eq	425810 <jobserver_acquire@@Base+0x48>  // b.none
  4258c8:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4258cc:	add	x1, x1, #0xa30
  4258d0:	mov	w2, #0x5                   	// #5
  4258d4:	mov	x0, #0x0                   	// #0
  4258d8:	bl	406cd0 <dcgettext@plt>
  4258dc:	bl	419828 <pfatal_with_name@@Base>
  4258e0:	bl	406d70 <__errno_location@plt>
  4258e4:	mov	x1, x0
  4258e8:	mov	w0, #0x0                   	// #0
  4258ec:	ldr	w1, [x1]
  4258f0:	cmp	w1, #0x4
  4258f4:	b.ne	425924 <jobserver_acquire@@Base+0x15c>  // b.any
  4258f8:	ldp	x19, x20, [sp, #16]
  4258fc:	ldp	x21, x22, [sp, #32]
  425900:	ldr	x23, [sp, #48]
  425904:	ldp	x29, x30, [sp], #352
  425908:	ret
  42590c:	mov	w0, #0x0                   	// #0
  425910:	ldp	x19, x20, [sp, #16]
  425914:	ldp	x21, x22, [sp, #32]
  425918:	ldr	x23, [sp, #48]
  42591c:	ldp	x29, x30, [sp], #352
  425920:	ret
  425924:	cmp	w1, #0x9
  425928:	b.eq	42595c <jobserver_acquire@@Base+0x194>  // b.none
  42592c:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425930:	add	x1, x1, #0xa18
  425934:	mov	w2, #0x5                   	// #5
  425938:	mov	x0, #0x0                   	// #0
  42593c:	bl	406cd0 <dcgettext@plt>
  425940:	bl	419828 <pfatal_with_name@@Base>
  425944:	cset	w0, gt
  425948:	ldp	x19, x20, [sp, #16]
  42594c:	ldp	x21, x22, [sp, #32]
  425950:	ldr	x23, [sp, #48]
  425954:	ldp	x29, x30, [sp], #352
  425958:	ret
  42595c:	mov	w2, #0x5                   	// #5
  425960:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425964:	mov	x0, #0x0                   	// #0
  425968:	add	x1, x1, #0xa00
  42596c:	bl	406cd0 <dcgettext@plt>
  425970:	mov	x2, x0
  425974:	mov	x1, #0x0                   	// #0
  425978:	mov	x0, #0x0                   	// #0
  42597c:	bl	41a060 <fatal@@Base>

0000000000425980 <fd_inherit@@Base>:
  425980:	stp	x29, x30, [sp, #-32]!
  425984:	mov	x29, sp
  425988:	stp	x19, x20, [sp, #16]
  42598c:	mov	w20, w0
  425990:	b	4259a4 <fd_inherit@@Base+0x24>
  425994:	bl	406d70 <__errno_location@plt>
  425998:	ldr	w0, [x0]
  42599c:	cmp	w0, #0x4
  4259a0:	b.ne	4259ec <fd_inherit@@Base+0x6c>  // b.any
  4259a4:	mov	w0, w20
  4259a8:	mov	w1, #0x1                   	// #1
  4259ac:	bl	425f10 <rpl_fcntl@@Base>
  4259b0:	cmn	w0, #0x1
  4259b4:	b.eq	425994 <fd_inherit@@Base+0x14>  // b.none
  4259b8:	tbnz	w0, #31, 4259ec <fd_inherit@@Base+0x6c>
  4259bc:	and	w19, w0, #0xfffffffe
  4259c0:	b	4259d4 <fd_inherit@@Base+0x54>
  4259c4:	bl	406d70 <__errno_location@plt>
  4259c8:	ldr	w0, [x0]
  4259cc:	cmp	w0, #0x4
  4259d0:	b.ne	4259ec <fd_inherit@@Base+0x6c>  // b.any
  4259d4:	mov	w2, w19
  4259d8:	mov	w0, w20
  4259dc:	mov	w1, #0x2                   	// #2
  4259e0:	bl	425f10 <rpl_fcntl@@Base>
  4259e4:	cmn	w0, #0x1
  4259e8:	b.eq	4259c4 <fd_inherit@@Base+0x44>  // b.none
  4259ec:	ldp	x19, x20, [sp, #16]
  4259f0:	ldp	x29, x30, [sp], #32
  4259f4:	ret

00000000004259f8 <jobserver_pre_child@@Base>:
  4259f8:	cbnz	w0, 425a00 <jobserver_pre_child@@Base+0x8>
  4259fc:	ret
  425a00:	stp	x29, x30, [sp, #-32]!
  425a04:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  425a08:	mov	x29, sp
  425a0c:	str	x19, [sp, #16]
  425a10:	add	x19, x0, #0x150
  425a14:	ldr	w0, [x0, #336]
  425a18:	tbz	w0, #31, 425a28 <jobserver_pre_child@@Base+0x30>
  425a1c:	ldr	x19, [sp, #16]
  425a20:	ldp	x29, x30, [sp], #32
  425a24:	ret
  425a28:	bl	425980 <fd_inherit@@Base>
  425a2c:	ldr	w0, [x19, #4]
  425a30:	ldr	x19, [sp, #16]
  425a34:	ldp	x29, x30, [sp], #32
  425a38:	b	425980 <fd_inherit@@Base>
  425a3c:	nop

0000000000425a40 <fd_noinherit@@Base>:
  425a40:	stp	x29, x30, [sp, #-32]!
  425a44:	mov	x29, sp
  425a48:	stp	x19, x20, [sp, #16]
  425a4c:	mov	w20, w0
  425a50:	b	425a64 <fd_noinherit@@Base+0x24>
  425a54:	bl	406d70 <__errno_location@plt>
  425a58:	ldr	w0, [x0]
  425a5c:	cmp	w0, #0x4
  425a60:	b.ne	425aac <fd_noinherit@@Base+0x6c>  // b.any
  425a64:	mov	w0, w20
  425a68:	mov	w1, #0x1                   	// #1
  425a6c:	bl	425f10 <rpl_fcntl@@Base>
  425a70:	cmn	w0, #0x1
  425a74:	b.eq	425a54 <fd_noinherit@@Base+0x14>  // b.none
  425a78:	tbnz	w0, #31, 425aac <fd_noinherit@@Base+0x6c>
  425a7c:	orr	w19, w0, #0x1
  425a80:	b	425a94 <fd_noinherit@@Base+0x54>
  425a84:	bl	406d70 <__errno_location@plt>
  425a88:	ldr	w0, [x0]
  425a8c:	cmp	w0, #0x4
  425a90:	b.ne	425aac <fd_noinherit@@Base+0x6c>  // b.any
  425a94:	mov	w2, w19
  425a98:	mov	w0, w20
  425a9c:	mov	w1, #0x2                   	// #2
  425aa0:	bl	425f10 <rpl_fcntl@@Base>
  425aa4:	cmn	w0, #0x1
  425aa8:	b.eq	425a84 <fd_noinherit@@Base+0x44>  // b.none
  425aac:	ldp	x19, x20, [sp, #16]
  425ab0:	ldp	x29, x30, [sp], #32
  425ab4:	ret

0000000000425ab8 <jobserver_setup@@Base>:
  425ab8:	stp	x29, x30, [sp, #-48]!
  425abc:	mov	x29, sp
  425ac0:	stp	x19, x20, [sp, #16]
  425ac4:	stp	x21, x22, [sp, #32]
  425ac8:	adrp	x22, 443000 <expanding_var@@Base+0x338>
  425acc:	mov	w21, w0
  425ad0:	add	x19, x22, #0x150
  425ad4:	b	425ae8 <jobserver_setup@@Base+0x30>
  425ad8:	bl	406d70 <__errno_location@plt>
  425adc:	ldr	w0, [x0]
  425ae0:	cmp	w0, #0x4
  425ae4:	b.ne	425b88 <jobserver_setup@@Base+0xd0>  // b.any
  425ae8:	mov	x0, x19
  425aec:	bl	406750 <pipe@plt>
  425af0:	cmn	w0, #0x1
  425af4:	b.eq	425ad8 <jobserver_setup@@Base+0x20>  // b.none
  425af8:	tbnz	w0, #31, 425b88 <jobserver_setup@@Base+0xd0>
  425afc:	ldr	w0, [x19]
  425b00:	add	x20, x19, #0xc
  425b04:	bl	425a40 <fd_noinherit@@Base>
  425b08:	ldr	w0, [x19, #4]
  425b0c:	bl	425a40 <fd_noinherit@@Base>
  425b10:	cbnz	w21, 425b28 <jobserver_setup@@Base+0x70>
  425b14:	b	425b68 <jobserver_setup@@Base+0xb0>
  425b18:	bl	406d70 <__errno_location@plt>
  425b1c:	ldr	w0, [x0]
  425b20:	cmp	w0, #0x4
  425b24:	b.ne	425b50 <jobserver_setup@@Base+0x98>  // b.any
  425b28:	ldr	w0, [x19, #4]
  425b2c:	mov	x1, x20
  425b30:	mov	x2, #0x1                   	// #1
  425b34:	bl	406a90 <write@plt>
  425b38:	cmn	w0, #0x1
  425b3c:	b.eq	425b18 <jobserver_setup@@Base+0x60>  // b.none
  425b40:	sub	w21, w21, #0x1
  425b44:	cmp	w0, #0x1
  425b48:	b.eq	425b10 <jobserver_setup@@Base+0x58>  // b.none
  425b4c:	nop
  425b50:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425b54:	add	x1, x1, #0xa58
  425b58:	mov	w2, #0x5                   	// #5
  425b5c:	mov	x0, #0x0                   	// #0
  425b60:	bl	406cd0 <dcgettext@plt>
  425b64:	bl	419828 <pfatal_with_name@@Base>
  425b68:	ldr	w0, [x22, #336]
  425b6c:	mov	w1, #0x0                   	// #0
  425b70:	bl	4253d0 <print_vpath_data_base@@Base+0x1b8>
  425b74:	mov	w0, #0x1                   	// #1
  425b78:	ldp	x19, x20, [sp, #16]
  425b7c:	ldp	x21, x22, [sp, #32]
  425b80:	ldp	x29, x30, [sp], #48
  425b84:	ret
  425b88:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  425b8c:	add	x1, x1, #0xa40
  425b90:	mov	w2, #0x5                   	// #5
  425b94:	mov	x0, #0x0                   	// #0
  425b98:	bl	406cd0 <dcgettext@plt>
  425b9c:	bl	419828 <pfatal_with_name@@Base>

0000000000425ba0 <jobserver_post_child@@Base>:
  425ba0:	cbnz	w0, 425ba8 <jobserver_post_child@@Base+0x8>
  425ba4:	ret
  425ba8:	stp	x29, x30, [sp, #-32]!
  425bac:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  425bb0:	mov	x29, sp
  425bb4:	str	x19, [sp, #16]
  425bb8:	add	x19, x0, #0x150
  425bbc:	ldr	w0, [x0, #336]
  425bc0:	tbz	w0, #31, 425bd0 <jobserver_post_child@@Base+0x30>
  425bc4:	ldr	x19, [sp, #16]
  425bc8:	ldp	x29, x30, [sp], #32
  425bcc:	ret
  425bd0:	bl	425a40 <fd_noinherit@@Base>
  425bd4:	ldr	w0, [x19, #4]
  425bd8:	ldr	x19, [sp, #16]
  425bdc:	ldp	x29, x30, [sp], #32
  425be0:	b	425a40 <fd_noinherit@@Base>
  425be4:	nop

0000000000425be8 <get_bad_stdin@@Base>:
  425be8:	stp	x29, x30, [sp, #-48]!
  425bec:	mov	x29, sp
  425bf0:	stp	x19, x20, [sp, #16]
  425bf4:	adrp	x19, 443000 <expanding_var@@Base+0x338>
  425bf8:	add	x19, x19, #0x150
  425bfc:	ldr	w20, [x19, #16]
  425c00:	cmn	w20, #0x1
  425c04:	b.eq	425c18 <get_bad_stdin@@Base+0x30>  // b.none
  425c08:	mov	w0, w20
  425c0c:	ldp	x19, x20, [sp, #16]
  425c10:	ldp	x29, x30, [sp], #48
  425c14:	ret
  425c18:	add	x0, sp, #0x28
  425c1c:	bl	406750 <pipe@plt>
  425c20:	cbnz	w0, 425c08 <get_bad_stdin@@Base+0x20>
  425c24:	ldr	w0, [sp, #44]
  425c28:	bl	406a50 <close@plt>
  425c2c:	ldr	w0, [sp, #40]
  425c30:	str	w0, [x19, #16]
  425c34:	bl	425a40 <fd_noinherit@@Base>
  425c38:	ldr	w20, [x19, #16]
  425c3c:	b	425c08 <get_bad_stdin@@Base+0x20>

0000000000425c40 <remote_setup@@Base>:
  425c40:	ret
  425c44:	nop

0000000000425c48 <remote_cleanup@@Base>:
  425c48:	ret
  425c4c:	nop

0000000000425c50 <start_remote_job_p@@Base>:
  425c50:	mov	w0, #0x0                   	// #0
  425c54:	ret

0000000000425c58 <start_remote_job@@Base>:
  425c58:	mov	w0, #0xffffffff            	// #-1
  425c5c:	ret

0000000000425c60 <remote_status@@Base>:
  425c60:	stp	x29, x30, [sp, #-16]!
  425c64:	mov	x29, sp
  425c68:	bl	406d70 <__errno_location@plt>
  425c6c:	mov	x1, x0
  425c70:	mov	w2, #0xa                   	// #10
  425c74:	mov	w0, #0xffffffff            	// #-1
  425c78:	str	w2, [x1]
  425c7c:	ldp	x29, x30, [sp], #16
  425c80:	ret
  425c84:	nop

0000000000425c88 <block_remote_children@@Base>:
  425c88:	ret
  425c8c:	nop

0000000000425c90 <unblock_remote_children@@Base>:
  425c90:	ret
  425c94:	nop

0000000000425c98 <remote_kill@@Base>:
  425c98:	mov	w0, #0xffffffff            	// #-1
  425c9c:	ret

0000000000425ca0 <find_in_given_path@@Base>:
  425ca0:	stp	x29, x30, [sp, #-96]!
  425ca4:	mov	x29, sp
  425ca8:	stp	x23, x24, [sp, #48]
  425cac:	mov	x23, x0
  425cb0:	mov	x0, x1
  425cb4:	stp	x21, x22, [sp, #32]
  425cb8:	ldrb	w3, [x23]
  425cbc:	cbz	w3, 425d40 <find_in_given_path@@Base+0xa0>
  425cc0:	and	w2, w2, #0xff
  425cc4:	mov	x4, x23
  425cc8:	b	425cd4 <find_in_given_path@@Base+0x34>
  425ccc:	ldrb	w3, [x4, #1]!
  425cd0:	cbz	w3, 425d40 <find_in_given_path@@Base+0xa0>
  425cd4:	cmp	w3, #0x2f
  425cd8:	b.ne	425ccc <find_in_given_path@@Base+0x2c>  // b.any
  425cdc:	mov	x21, x23
  425ce0:	cbnz	w2, 425d2c <find_in_given_path@@Base+0x8c>
  425ce4:	adrp	x2, 42b000 <_IO_stdin_used@@Base+0x4c20>
  425ce8:	add	x2, x2, #0x350
  425cec:	mov	x1, x21
  425cf0:	mov	x0, x2
  425cf4:	bl	425ef0 <xconcatenated_filename@@Base>
  425cf8:	mov	x21, x0
  425cfc:	mov	w1, #0x1                   	// #1
  425d00:	bl	406810 <eaccess@plt>
  425d04:	cbz	w0, 425ed0 <find_in_given_path@@Base+0x230>
  425d08:	stp	x19, x20, [sp, #16]
  425d0c:	bl	406d70 <__errno_location@plt>
  425d10:	mov	x19, x0
  425d14:	mov	x0, x21
  425d18:	mov	x21, #0x0                   	// #0
  425d1c:	ldr	w20, [x19]
  425d20:	bl	406b90 <free@plt>
  425d24:	str	w20, [x19]
  425d28:	ldp	x19, x20, [sp, #16]
  425d2c:	mov	x0, x21
  425d30:	ldp	x21, x22, [sp, #32]
  425d34:	ldp	x23, x24, [sp, #48]
  425d38:	ldp	x29, x30, [sp], #96
  425d3c:	ret
  425d40:	cmp	x0, #0x0
  425d44:	stp	x25, x26, [sp, #64]
  425d48:	adrp	x25, 42b000 <_IO_stdin_used@@Base+0x4c20>
  425d4c:	add	x25, x25, #0x350
  425d50:	stp	x19, x20, [sp, #16]
  425d54:	csel	x1, x0, x25, ne  // ne = any
  425d58:	csel	x25, x25, x1, ne  // ne = any
  425d5c:	mov	x0, x1
  425d60:	str	x27, [sp, #80]
  425d64:	adrp	x26, 427000 <_IO_stdin_used@@Base+0xc20>
  425d68:	bl	418c60 <xstrdup@@Base>
  425d6c:	ldrb	w19, [x0]
  425d70:	add	x26, x26, #0xb58
  425d74:	mov	x27, x0
  425d78:	cmp	w19, #0x3a
  425d7c:	mov	x20, x0
  425d80:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  425d84:	mov	w24, #0x2                   	// #2
  425d88:	b.eq	425e00 <find_in_given_path@@Base+0x160>  // b.none
  425d8c:	nop
  425d90:	ldrb	w19, [x20, #1]!
  425d94:	cmp	w19, #0x3a
  425d98:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  425d9c:	b.ne	425d90 <find_in_given_path@@Base+0xf0>  // b.any
  425da0:	cmp	x0, x20
  425da4:	mov	x2, x25
  425da8:	strb	wzr, [x20]
  425dac:	mov	x1, x23
  425db0:	csel	x0, x26, x0, eq  // eq = none
  425db4:	bl	425ef0 <xconcatenated_filename@@Base>
  425db8:	mov	x21, x0
  425dbc:	mov	w1, #0x1                   	// #1
  425dc0:	bl	406810 <eaccess@plt>
  425dc4:	cbz	w0, 425e24 <find_in_given_path@@Base+0x184>
  425dc8:	bl	406d70 <__errno_location@plt>
  425dcc:	mov	x22, x0
  425dd0:	mov	x0, x21
  425dd4:	ldr	w1, [x22]
  425dd8:	cmp	w1, #0x2
  425ddc:	csel	w24, w24, w1, eq  // eq = none
  425de0:	bl	406b90 <free@plt>
  425de4:	cbz	w19, 425e5c <find_in_given_path@@Base+0x1bc>
  425de8:	ldrb	w19, [x20, #1]
  425dec:	add	x0, x20, #0x1
  425df0:	mov	x20, x0
  425df4:	cmp	w19, #0x3a
  425df8:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  425dfc:	b.ne	425d90 <find_in_given_path@@Base+0xf0>  // b.any
  425e00:	mov	x2, x25
  425e04:	strb	wzr, [x0]
  425e08:	mov	x1, x23
  425e0c:	mov	x0, x26
  425e10:	bl	425ef0 <xconcatenated_filename@@Base>
  425e14:	mov	x21, x0
  425e18:	mov	w1, #0x1                   	// #1
  425e1c:	bl	406810 <eaccess@plt>
  425e20:	cbnz	w0, 425dc8 <find_in_given_path@@Base+0x128>
  425e24:	mov	x1, x23
  425e28:	mov	x0, x21
  425e2c:	bl	406b40 <strcmp@plt>
  425e30:	cbz	w0, 425e8c <find_in_given_path@@Base+0x1ec>
  425e34:	mov	x0, x27
  425e38:	bl	406b90 <free@plt>
  425e3c:	mov	x0, x21
  425e40:	ldp	x19, x20, [sp, #16]
  425e44:	ldp	x21, x22, [sp, #32]
  425e48:	ldp	x23, x24, [sp, #48]
  425e4c:	ldp	x25, x26, [sp, #64]
  425e50:	ldr	x27, [sp, #80]
  425e54:	ldp	x29, x30, [sp], #96
  425e58:	ret
  425e5c:	mov	x0, x27
  425e60:	bl	406b90 <free@plt>
  425e64:	ldp	x19, x20, [sp, #16]
  425e68:	mov	x21, #0x0                   	// #0
  425e6c:	ldp	x25, x26, [sp, #64]
  425e70:	mov	x0, x21
  425e74:	ldr	x27, [sp, #80]
  425e78:	str	w24, [x22]
  425e7c:	ldp	x21, x22, [sp, #32]
  425e80:	ldp	x23, x24, [sp, #48]
  425e84:	ldp	x29, x30, [sp], #96
  425e88:	ret
  425e8c:	mov	x0, x21
  425e90:	bl	406b90 <free@plt>
  425e94:	mov	x0, x23
  425e98:	bl	406680 <strlen@plt>
  425e9c:	add	x0, x0, #0x3
  425ea0:	bl	418a50 <xmalloc@@Base>
  425ea4:	mov	x21, x0
  425ea8:	mov	w1, #0x2f2e                	// #12078
  425eac:	mov	x19, x21
  425eb0:	mov	x0, x23
  425eb4:	strh	w1, [x19], #2
  425eb8:	bl	406680 <strlen@plt>
  425ebc:	add	x2, x0, #0x1
  425ec0:	mov	x1, x23
  425ec4:	mov	x0, x19
  425ec8:	bl	406640 <memcpy@plt>
  425ecc:	b	425e34 <find_in_given_path@@Base+0x194>
  425ed0:	mov	x1, x23
  425ed4:	mov	x0, x21
  425ed8:	bl	406b40 <strcmp@plt>
  425edc:	cbnz	w0, 425d2c <find_in_given_path@@Base+0x8c>
  425ee0:	mov	x0, x21
  425ee4:	mov	x21, x23
  425ee8:	bl	406b90 <free@plt>
  425eec:	b	425d2c <find_in_given_path@@Base+0x8c>

0000000000425ef0 <xconcatenated_filename@@Base>:
  425ef0:	stp	x29, x30, [sp, #-16]!
  425ef4:	mov	x29, sp
  425ef8:	bl	426168 <concatenated_filename@@Base>
  425efc:	cbz	x0, 425f08 <xconcatenated_filename@@Base+0x18>
  425f00:	ldp	x29, x30, [sp], #16
  425f04:	ret
  425f08:	bl	4262d0 <xalloc_die@@Base>
  425f0c:	nop

0000000000425f10 <rpl_fcntl@@Base>:
  425f10:	stp	x29, x30, [sp, #-112]!
  425f14:	mov	w6, #0xffffffe0            	// #-32
  425f18:	mov	x29, sp
  425f1c:	add	x7, sp, #0x50
  425f20:	stp	x19, x20, [sp, #16]
  425f24:	str	x7, [sp, #64]
  425f28:	stp	w6, wzr, [sp, #72]
  425f2c:	stp	x2, x3, [sp, #80]
  425f30:	add	x2, sp, #0x70
  425f34:	stp	x2, x2, [sp, #48]
  425f38:	stp	x4, x5, [sp, #96]
  425f3c:	cbz	w1, 425ffc <rpl_fcntl@@Base+0xec>
  425f40:	mov	w20, w0
  425f44:	mov	w3, w1
  425f48:	cmp	w1, #0x406
  425f4c:	b.eq	426018 <rpl_fcntl@@Base+0x108>  // b.none
  425f50:	cmp	w1, #0xb
  425f54:	b.gt	425fa0 <rpl_fcntl@@Base+0x90>
  425f58:	cmp	w1, #0x0
  425f5c:	b.le	425fcc <rpl_fcntl@@Base+0xbc>
  425f60:	mov	x1, #0x1                   	// #1
  425f64:	mov	x2, #0x514                 	// #1300
  425f68:	lsl	x1, x1, x3
  425f6c:	tst	x1, x2
  425f70:	b.ne	426094 <rpl_fcntl@@Base+0x184>  // b.any
  425f74:	mov	x2, #0xa0a                 	// #2570
  425f78:	tst	x1, x2
  425f7c:	b.eq	425fcc <rpl_fcntl@@Base+0xbc>  // b.none
  425f80:	mov	w1, w3
  425f84:	mov	w0, w20
  425f88:	bl	406c00 <fcntl@plt>
  425f8c:	mov	w19, w0
  425f90:	mov	w0, w19
  425f94:	ldp	x19, x20, [sp, #16]
  425f98:	ldp	x29, x30, [sp], #112
  425f9c:	ret
  425fa0:	sub	w0, w1, #0x400
  425fa4:	cmp	w0, #0xa
  425fa8:	b.hi	425fcc <rpl_fcntl@@Base+0xbc>  // b.pmore
  425fac:	mov	x1, #0x1                   	// #1
  425fb0:	mov	x2, #0x2c5                 	// #709
  425fb4:	lsl	x1, x1, x0
  425fb8:	tst	x1, x2
  425fbc:	b.ne	426094 <rpl_fcntl@@Base+0x184>  // b.any
  425fc0:	mov	x2, #0x502                 	// #1282
  425fc4:	tst	x1, x2
  425fc8:	b.ne	425f80 <rpl_fcntl@@Base+0x70>  // b.any
  425fcc:	ldr	w0, [sp, #72]
  425fd0:	ldr	x1, [sp, #48]
  425fd4:	tbnz	w0, #31, 426140 <rpl_fcntl@@Base+0x230>
  425fd8:	ldr	x2, [x1]
  425fdc:	mov	w0, w20
  425fe0:	mov	w1, w3
  425fe4:	bl	406c00 <fcntl@plt>
  425fe8:	mov	w19, w0
  425fec:	mov	w0, w19
  425ff0:	ldp	x19, x20, [sp, #16]
  425ff4:	ldp	x29, x30, [sp], #112
  425ff8:	ret
  425ffc:	ldr	w2, [sp, #80]
  426000:	bl	406c00 <fcntl@plt>
  426004:	mov	w19, w0
  426008:	mov	w0, w19
  42600c:	ldp	x19, x20, [sp, #16]
  426010:	ldp	x29, x30, [sp], #112
  426014:	ret
  426018:	stp	x21, x22, [sp, #32]
  42601c:	adrp	x21, 446000 <commands_started@@Base+0x1c8>
  426020:	mov	w2, #0xffffffe8            	// #-24
  426024:	str	w2, [sp, #72]
  426028:	ldr	w2, [x21, #1896]
  42602c:	ldr	w22, [sp, #80]
  426030:	tbnz	w2, #31, 426060 <rpl_fcntl@@Base+0x150>
  426034:	mov	w2, w22
  426038:	bl	406c00 <fcntl@plt>
  42603c:	mov	w19, w0
  426040:	tbnz	w0, #31, 4260c4 <rpl_fcntl@@Base+0x1b4>
  426044:	mov	w0, #0x1                   	// #1
  426048:	str	w0, [x21, #1896]
  42604c:	mov	w0, w19
  426050:	ldp	x19, x20, [sp, #16]
  426054:	ldp	x21, x22, [sp, #32]
  426058:	ldp	x29, x30, [sp], #112
  42605c:	ret
  426060:	mov	w2, w22
  426064:	mov	w1, #0x0                   	// #0
  426068:	bl	406c00 <fcntl@plt>
  42606c:	mov	w19, w0
  426070:	tbnz	w0, #31, 426080 <rpl_fcntl@@Base+0x170>
  426074:	ldr	w0, [x21, #1896]
  426078:	cmn	w0, #0x1
  42607c:	b.eq	4260f4 <rpl_fcntl@@Base+0x1e4>  // b.none
  426080:	mov	w0, w19
  426084:	ldp	x19, x20, [sp, #16]
  426088:	ldp	x21, x22, [sp, #32]
  42608c:	ldp	x29, x30, [sp], #112
  426090:	ret
  426094:	ldr	w0, [sp, #72]
  426098:	ldr	x1, [sp, #48]
  42609c:	tbnz	w0, #31, 426154 <rpl_fcntl@@Base+0x244>
  4260a0:	ldr	w2, [x1]
  4260a4:	mov	w0, w20
  4260a8:	mov	w1, w3
  4260ac:	bl	406c00 <fcntl@plt>
  4260b0:	mov	w19, w0
  4260b4:	mov	w0, w19
  4260b8:	ldp	x19, x20, [sp, #16]
  4260bc:	ldp	x29, x30, [sp], #112
  4260c0:	ret
  4260c4:	bl	406d70 <__errno_location@plt>
  4260c8:	ldr	w0, [x0]
  4260cc:	cmp	w0, #0x16
  4260d0:	b.ne	426044 <rpl_fcntl@@Base+0x134>  // b.any
  4260d4:	mov	w2, w22
  4260d8:	mov	w0, w20
  4260dc:	mov	w1, #0x0                   	// #0
  4260e0:	bl	406c00 <fcntl@plt>
  4260e4:	mov	w19, w0
  4260e8:	tbnz	w0, #31, 426080 <rpl_fcntl@@Base+0x170>
  4260ec:	mov	w0, #0xffffffff            	// #-1
  4260f0:	str	w0, [x21, #1896]
  4260f4:	mov	w0, w19
  4260f8:	mov	w1, #0x1                   	// #1
  4260fc:	bl	406c00 <fcntl@plt>
  426100:	tbnz	w0, #31, 42611c <rpl_fcntl@@Base+0x20c>
  426104:	orr	w2, w0, #0x1
  426108:	mov	w1, #0x2                   	// #2
  42610c:	mov	w0, w19
  426110:	bl	406c00 <fcntl@plt>
  426114:	cmn	w0, #0x1
  426118:	b.ne	426080 <rpl_fcntl@@Base+0x170>  // b.any
  42611c:	bl	406d70 <__errno_location@plt>
  426120:	mov	x20, x0
  426124:	mov	w0, w19
  426128:	mov	w19, #0xffffffff            	// #-1
  42612c:	ldr	w21, [x20]
  426130:	bl	406a50 <close@plt>
  426134:	str	w21, [x20]
  426138:	ldp	x21, x22, [sp, #32]
  42613c:	b	425f90 <rpl_fcntl@@Base+0x80>
  426140:	cmn	w0, #0x7
  426144:	b.ge	425fd8 <rpl_fcntl@@Base+0xc8>  // b.tcont
  426148:	ldr	x1, [sp, #56]
  42614c:	add	x1, x1, w0, sxtw
  426150:	b	425fd8 <rpl_fcntl@@Base+0xc8>
  426154:	cmn	w0, #0x7
  426158:	b.ge	4260a0 <rpl_fcntl@@Base+0x190>  // b.tcont
  42615c:	ldr	x1, [sp, #56]
  426160:	add	x1, x1, w0, sxtw
  426164:	b	4260a0 <rpl_fcntl@@Base+0x190>

0000000000426168 <concatenated_filename@@Base>:
  426168:	stp	x29, x30, [sp, #-80]!
  42616c:	mov	x29, sp
  426170:	stp	x19, x20, [sp, #16]
  426174:	mov	x20, x0
  426178:	stp	x21, x22, [sp, #32]
  42617c:	mov	x21, x2
  426180:	stp	x23, x24, [sp, #48]
  426184:	mov	x23, x1
  426188:	ldrb	w0, [x0]
  42618c:	subs	w19, w0, #0x2e
  426190:	b.ne	426198 <concatenated_filename@@Base+0x30>  // b.any
  426194:	ldrb	w19, [x20, #1]
  426198:	mov	x0, x23
  42619c:	bl	406680 <strlen@plt>
  4261a0:	mov	x22, x0
  4261a4:	cbnz	w19, 4261f0 <concatenated_filename@@Base+0x88>
  4261a8:	add	x22, x0, #0x1
  4261ac:	cbz	x21, 426290 <concatenated_filename@@Base+0x128>
  4261b0:	mov	x0, x21
  4261b4:	bl	406680 <strlen@plt>
  4261b8:	add	x0, x0, x22
  4261bc:	bl	4068d0 <malloc@plt>
  4261c0:	mov	x19, x0
  4261c4:	cbz	x0, 4262c4 <concatenated_filename@@Base+0x15c>
  4261c8:	mov	x1, x23
  4261cc:	bl	406840 <stpcpy@plt>
  4261d0:	mov	x1, x21
  4261d4:	bl	406c30 <strcpy@plt>
  4261d8:	mov	x0, x19
  4261dc:	ldp	x19, x20, [sp, #16]
  4261e0:	ldp	x21, x22, [sp, #32]
  4261e4:	ldp	x23, x24, [sp, #48]
  4261e8:	ldp	x29, x30, [sp], #80
  4261ec:	ret
  4261f0:	mov	x0, x20
  4261f4:	str	x25, [sp, #64]
  4261f8:	bl	406680 <strlen@plt>
  4261fc:	mov	w25, #0x0                   	// #0
  426200:	mov	x24, x0
  426204:	add	x0, x0, #0x1
  426208:	cbz	x24, 426224 <concatenated_filename@@Base+0xbc>
  42620c:	add	x1, x20, x24
  426210:	ldurb	w1, [x1, #-1]
  426214:	cmp	w1, #0x2f
  426218:	b.eq	426224 <concatenated_filename@@Base+0xbc>  // b.none
  42621c:	add	x22, x22, #0x1
  426220:	mov	w25, #0x1                   	// #1
  426224:	add	x22, x0, x22
  426228:	cbz	x21, 426238 <concatenated_filename@@Base+0xd0>
  42622c:	mov	x0, x21
  426230:	bl	406680 <strlen@plt>
  426234:	add	x22, x22, x0
  426238:	mov	x0, x22
  42623c:	bl	4068d0 <malloc@plt>
  426240:	mov	x19, x0
  426244:	cbz	x0, 4262c0 <concatenated_filename@@Base+0x158>
  426248:	mov	x1, x20
  42624c:	mov	x2, x24
  426250:	bl	406640 <memcpy@plt>
  426254:	add	x0, x19, x24
  426258:	cbz	w25, 426268 <concatenated_filename@@Base+0x100>
  42625c:	add	x0, x0, #0x1
  426260:	mov	w1, #0x2f                  	// #47
  426264:	strb	w1, [x19, x24]
  426268:	mov	x1, x23
  42626c:	bl	406840 <stpcpy@plt>
  426270:	ldr	x25, [sp, #64]
  426274:	cbnz	x21, 4261d0 <concatenated_filename@@Base+0x68>
  426278:	mov	x0, x19
  42627c:	ldp	x19, x20, [sp, #16]
  426280:	ldp	x21, x22, [sp, #32]
  426284:	ldp	x23, x24, [sp, #48]
  426288:	ldp	x29, x30, [sp], #80
  42628c:	ret
  426290:	mov	x0, x22
  426294:	bl	4068d0 <malloc@plt>
  426298:	mov	x19, x0
  42629c:	cbz	x0, 4262c4 <concatenated_filename@@Base+0x15c>
  4262a0:	mov	x1, x23
  4262a4:	bl	406c30 <strcpy@plt>
  4262a8:	mov	x0, x19
  4262ac:	ldp	x19, x20, [sp, #16]
  4262b0:	ldp	x21, x22, [sp, #32]
  4262b4:	ldp	x23, x24, [sp, #48]
  4262b8:	ldp	x29, x30, [sp], #80
  4262bc:	ret
  4262c0:	ldr	x25, [sp, #64]
  4262c4:	mov	x19, #0x0                   	// #0
  4262c8:	b	4261d8 <concatenated_filename@@Base+0x70>
  4262cc:	nop

00000000004262d0 <xalloc_die@@Base>:
  4262d0:	stp	x29, x30, [sp, #-32]!
  4262d4:	adrp	x0, 443000 <expanding_var@@Base+0x338>
  4262d8:	mov	w2, #0x5                   	// #5
  4262dc:	mov	x29, sp
  4262e0:	str	x19, [sp, #16]
  4262e4:	adrp	x1, 42c000 <_IO_stdin_used@@Base+0x5c20>
  4262e8:	ldr	w19, [x0, #356]
  4262ec:	add	x1, x1, #0xa70
  4262f0:	mov	x0, #0x0                   	// #0
  4262f4:	bl	406cd0 <dcgettext@plt>
  4262f8:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x1c20>
  4262fc:	mov	x3, x0
  426300:	add	x2, x2, #0x4a0
  426304:	mov	w0, w19
  426308:	mov	w1, #0x0                   	// #0
  42630c:	bl	419dc8 <error@@Base>
  426310:	bl	406ab0 <abort@plt>
  426314:	nop

0000000000426318 <__libc_csu_init@@Base>:
  426318:	stp	x29, x30, [sp, #-64]!
  42631c:	mov	x29, sp
  426320:	stp	x19, x20, [sp, #16]
  426324:	adrp	x20, 441000 <_IO_stdin_used@@Base+0x1ac20>
  426328:	add	x20, x20, #0xde0
  42632c:	stp	x21, x22, [sp, #32]
  426330:	adrp	x21, 441000 <_IO_stdin_used@@Base+0x1ac20>
  426334:	add	x21, x21, #0xdd8
  426338:	sub	x20, x20, x21
  42633c:	mov	w22, w0
  426340:	stp	x23, x24, [sp, #48]
  426344:	mov	x23, x1
  426348:	mov	x24, x2
  42634c:	bl	406608 <memcpy@plt-0x38>
  426350:	cmp	xzr, x20, asr #3
  426354:	b.eq	426380 <__libc_csu_init@@Base+0x68>  // b.none
  426358:	asr	x20, x20, #3
  42635c:	mov	x19, #0x0                   	// #0
  426360:	ldr	x3, [x21, x19, lsl #3]
  426364:	mov	x2, x24
  426368:	add	x19, x19, #0x1
  42636c:	mov	x1, x23
  426370:	mov	w0, w22
  426374:	blr	x3
  426378:	cmp	x20, x19
  42637c:	b.ne	426360 <__libc_csu_init@@Base+0x48>  // b.any
  426380:	ldp	x19, x20, [sp, #16]
  426384:	ldp	x21, x22, [sp, #32]
  426388:	ldp	x23, x24, [sp, #48]
  42638c:	ldp	x29, x30, [sp], #64
  426390:	ret
  426394:	nop

0000000000426398 <__libc_csu_fini@@Base>:
  426398:	ret
  42639c:	nop
  4263a0:	adrp	x2, 442000 <memcpy@GLIBC_2.17>
  4263a4:	mov	x1, #0x0                   	// #0
  4263a8:	ldr	x2, [x2, #1008]
  4263ac:	b	406780 <__cxa_atexit@plt>
  4263b0:	mov	x2, x1
  4263b4:	mov	x1, x0
  4263b8:	mov	w0, #0x0                   	// #0
  4263bc:	b	406d90 <__xstat@plt>
  4263c0:	mov	x2, x1
  4263c4:	mov	x1, x0
  4263c8:	mov	w0, #0x0                   	// #0
  4263cc:	b	406c60 <__lxstat@plt>

Disassembly of section .fini:

00000000004263d0 <.fini>:
  4263d0:	stp	x29, x30, [sp, #-16]!
  4263d4:	mov	x29, sp
  4263d8:	ldp	x29, x30, [sp], #16
  4263dc:	ret
