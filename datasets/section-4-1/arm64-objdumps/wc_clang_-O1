
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//wc_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004018a0 <.init>:
  4018a0:	stp	x29, x30, [sp, #-16]!
  4018a4:	mov	x29, sp
  4018a8:	bl	401d60 <ferror@plt+0x60>
  4018ac:	ldp	x29, x30, [sp], #16
  4018b0:	ret

Disassembly of section .plt:

00000000004018c0 <mbrtowc@plt-0x20>:
  4018c0:	stp	x16, x30, [sp, #-16]!
  4018c4:	adrp	x16, 417000 <_obstack_memory_used@@Base+0x10ab8>
  4018c8:	ldr	x17, [x16, #4088]
  4018cc:	add	x16, x16, #0xff8
  4018d0:	br	x17
  4018d4:	nop
  4018d8:	nop
  4018dc:	nop

00000000004018e0 <mbrtowc@plt>:
  4018e0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4018e4:	ldr	x17, [x16]
  4018e8:	add	x16, x16, #0x0
  4018ec:	br	x17

00000000004018f0 <memcpy@plt>:
  4018f0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4018f4:	ldr	x17, [x16, #8]
  4018f8:	add	x16, x16, #0x8
  4018fc:	br	x17

0000000000401900 <_exit@plt>:
  401900:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401904:	ldr	x17, [x16, #16]
  401908:	add	x16, x16, #0x10
  40190c:	br	x17

0000000000401910 <strlen@plt>:
  401910:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401914:	ldr	x17, [x16, #24]
  401918:	add	x16, x16, #0x18
  40191c:	br	x17

0000000000401920 <exit@plt>:
  401920:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401924:	ldr	x17, [x16, #32]
  401928:	add	x16, x16, #0x20
  40192c:	br	x17

0000000000401930 <error@plt>:
  401930:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401934:	ldr	x17, [x16, #40]
  401938:	add	x16, x16, #0x28
  40193c:	br	x17

0000000000401940 <sysinfo@plt>:
  401940:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401944:	ldr	x17, [x16, #48]
  401948:	add	x16, x16, #0x30
  40194c:	br	x17

0000000000401950 <ferror_unlocked@plt>:
  401950:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401954:	ldr	x17, [x16, #56]
  401958:	add	x16, x16, #0x38
  40195c:	br	x17

0000000000401960 <__cxa_atexit@plt>:
  401960:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401964:	ldr	x17, [x16, #64]
  401968:	add	x16, x16, #0x40
  40196c:	br	x17

0000000000401970 <iswcntrl@plt>:
  401970:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401974:	ldr	x17, [x16, #72]
  401978:	add	x16, x16, #0x48
  40197c:	br	x17

0000000000401980 <setvbuf@plt>:
  401980:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401984:	ldr	x17, [x16, #80]
  401988:	add	x16, x16, #0x50
  40198c:	br	x17

0000000000401990 <lseek@plt>:
  401990:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401994:	ldr	x17, [x16, #88]
  401998:	add	x16, x16, #0x58
  40199c:	br	x17

00000000004019a0 <__fpending@plt>:
  4019a0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019a4:	ldr	x17, [x16, #96]
  4019a8:	add	x16, x16, #0x60
  4019ac:	br	x17

00000000004019b0 <fileno@plt>:
  4019b0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019b4:	ldr	x17, [x16, #104]
  4019b8:	add	x16, x16, #0x68
  4019bc:	br	x17

00000000004019c0 <fclose@plt>:
  4019c0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019c4:	ldr	x17, [x16, #112]
  4019c8:	add	x16, x16, #0x70
  4019cc:	br	x17

00000000004019d0 <iswspace@plt>:
  4019d0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019d4:	ldr	x17, [x16, #120]
  4019d8:	add	x16, x16, #0x78
  4019dc:	br	x17

00000000004019e0 <nl_langinfo@plt>:
  4019e0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019e4:	ldr	x17, [x16, #128]
  4019e8:	add	x16, x16, #0x80
  4019ec:	br	x17

00000000004019f0 <fopen@plt>:
  4019f0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  4019f4:	ldr	x17, [x16, #136]
  4019f8:	add	x16, x16, #0x88
  4019fc:	br	x17

0000000000401a00 <malloc@plt>:
  401a00:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a04:	ldr	x17, [x16, #144]
  401a08:	add	x16, x16, #0x90
  401a0c:	br	x17

0000000000401a10 <wcwidth@plt>:
  401a10:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a14:	ldr	x17, [x16, #152]
  401a18:	add	x16, x16, #0x98
  401a1c:	br	x17

0000000000401a20 <getdelim@plt>:
  401a20:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a24:	ldr	x17, [x16, #160]
  401a28:	add	x16, x16, #0xa0
  401a2c:	br	x17

0000000000401a30 <open@plt>:
  401a30:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a34:	ldr	x17, [x16, #168]
  401a38:	add	x16, x16, #0xa8
  401a3c:	br	x17

0000000000401a40 <strncmp@plt>:
  401a40:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a44:	ldr	x17, [x16, #176]
  401a48:	add	x16, x16, #0xb0
  401a4c:	br	x17

0000000000401a50 <bindtextdomain@plt>:
  401a50:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a54:	ldr	x17, [x16, #184]
  401a58:	add	x16, x16, #0xb8
  401a5c:	br	x17

0000000000401a60 <__libc_start_main@plt>:
  401a60:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a64:	ldr	x17, [x16, #192]
  401a68:	add	x16, x16, #0xc0
  401a6c:	br	x17

0000000000401a70 <fgetc@plt>:
  401a70:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a74:	ldr	x17, [x16, #200]
  401a78:	add	x16, x16, #0xc8
  401a7c:	br	x17

0000000000401a80 <__printf_chk@plt>:
  401a80:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a84:	ldr	x17, [x16, #208]
  401a88:	add	x16, x16, #0xd0
  401a8c:	br	x17

0000000000401a90 <memset@plt>:
  401a90:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401a94:	ldr	x17, [x16, #216]
  401a98:	add	x16, x16, #0xd8
  401a9c:	br	x17

0000000000401aa0 <putchar_unlocked@plt>:
  401aa0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401aa4:	ldr	x17, [x16, #224]
  401aa8:	add	x16, x16, #0xe0
  401aac:	br	x17

0000000000401ab0 <calloc@plt>:
  401ab0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ab4:	ldr	x17, [x16, #232]
  401ab8:	add	x16, x16, #0xe8
  401abc:	br	x17

0000000000401ac0 <bcmp@plt>:
  401ac0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ac4:	ldr	x17, [x16, #240]
  401ac8:	add	x16, x16, #0xf0
  401acc:	br	x17

0000000000401ad0 <realloc@plt>:
  401ad0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ad4:	ldr	x17, [x16, #248]
  401ad8:	add	x16, x16, #0xf8
  401adc:	br	x17

0000000000401ae0 <getpagesize@plt>:
  401ae0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ae4:	ldr	x17, [x16, #256]
  401ae8:	add	x16, x16, #0x100
  401aec:	br	x17

0000000000401af0 <close@plt>:
  401af0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401af4:	ldr	x17, [x16, #264]
  401af8:	add	x16, x16, #0x108
  401afc:	br	x17

0000000000401b00 <strrchr@plt>:
  401b00:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b04:	ldr	x17, [x16, #272]
  401b08:	add	x16, x16, #0x110
  401b0c:	br	x17

0000000000401b10 <__gmon_start__@plt>:
  401b10:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b14:	ldr	x17, [x16, #280]
  401b18:	add	x16, x16, #0x118
  401b1c:	br	x17

0000000000401b20 <btowc@plt>:
  401b20:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b24:	ldr	x17, [x16, #288]
  401b28:	add	x16, x16, #0x120
  401b2c:	br	x17

0000000000401b30 <abort@plt>:
  401b30:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b34:	ldr	x17, [x16, #296]
  401b38:	add	x16, x16, #0x128
  401b3c:	br	x17

0000000000401b40 <posix_fadvise@plt>:
  401b40:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b44:	ldr	x17, [x16, #304]
  401b48:	add	x16, x16, #0x130
  401b4c:	br	x17

0000000000401b50 <mbsinit@plt>:
  401b50:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b54:	ldr	x17, [x16, #312]
  401b58:	add	x16, x16, #0x138
  401b5c:	br	x17

0000000000401b60 <feof@plt>:
  401b60:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b64:	ldr	x17, [x16, #320]
  401b68:	add	x16, x16, #0x140
  401b6c:	br	x17

0000000000401b70 <textdomain@plt>:
  401b70:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b74:	ldr	x17, [x16, #328]
  401b78:	add	x16, x16, #0x148
  401b7c:	br	x17

0000000000401b80 <getopt_long@plt>:
  401b80:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b84:	ldr	x17, [x16, #336]
  401b88:	add	x16, x16, #0x150
  401b8c:	br	x17

0000000000401b90 <__fprintf_chk@plt>:
  401b90:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401b94:	ldr	x17, [x16, #344]
  401b98:	add	x16, x16, #0x158
  401b9c:	br	x17

0000000000401ba0 <strcmp@plt>:
  401ba0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ba4:	ldr	x17, [x16, #352]
  401ba8:	add	x16, x16, #0x160
  401bac:	br	x17

0000000000401bb0 <__ctype_b_loc@plt>:
  401bb0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bb4:	ldr	x17, [x16, #360]
  401bb8:	add	x16, x16, #0x168
  401bbc:	br	x17

0000000000401bc0 <fseeko@plt>:
  401bc0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bc4:	ldr	x17, [x16, #368]
  401bc8:	add	x16, x16, #0x170
  401bcc:	br	x17

0000000000401bd0 <free@plt>:
  401bd0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bd4:	ldr	x17, [x16, #376]
  401bd8:	add	x16, x16, #0x178
  401bdc:	br	x17

0000000000401be0 <__ctype_get_mb_cur_max@plt>:
  401be0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401be4:	ldr	x17, [x16, #384]
  401be8:	add	x16, x16, #0x180
  401bec:	br	x17

0000000000401bf0 <strchr@plt>:
  401bf0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401bf4:	ldr	x17, [x16, #392]
  401bf8:	add	x16, x16, #0x188
  401bfc:	br	x17

0000000000401c00 <fwrite@plt>:
  401c00:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c04:	ldr	x17, [x16, #400]
  401c08:	add	x16, x16, #0x190
  401c0c:	br	x17

0000000000401c10 <fflush@plt>:
  401c10:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c14:	ldr	x17, [x16, #408]
  401c18:	add	x16, x16, #0x198
  401c1c:	br	x17

0000000000401c20 <read@plt>:
  401c20:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c24:	ldr	x17, [x16, #416]
  401c28:	add	x16, x16, #0x1a0
  401c2c:	br	x17

0000000000401c30 <memchr@plt>:
  401c30:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c34:	ldr	x17, [x16, #424]
  401c38:	add	x16, x16, #0x1a8
  401c3c:	br	x17

0000000000401c40 <sysconf@plt>:
  401c40:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c44:	ldr	x17, [x16, #432]
  401c48:	add	x16, x16, #0x1b0
  401c4c:	br	x17

0000000000401c50 <__fxstat@plt>:
  401c50:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c54:	ldr	x17, [x16, #440]
  401c58:	add	x16, x16, #0x1b8
  401c5c:	br	x17

0000000000401c60 <dcgettext@plt>:
  401c60:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c64:	ldr	x17, [x16, #448]
  401c68:	add	x16, x16, #0x1c0
  401c6c:	br	x17

0000000000401c70 <fputs_unlocked@plt>:
  401c70:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c74:	ldr	x17, [x16, #456]
  401c78:	add	x16, x16, #0x1c8
  401c7c:	br	x17

0000000000401c80 <__freading@plt>:
  401c80:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c84:	ldr	x17, [x16, #464]
  401c88:	add	x16, x16, #0x1d0
  401c8c:	br	x17

0000000000401c90 <iswprint@plt>:
  401c90:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401c94:	ldr	x17, [x16, #472]
  401c98:	add	x16, x16, #0x1d8
  401c9c:	br	x17

0000000000401ca0 <__assert_fail@plt>:
  401ca0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ca4:	ldr	x17, [x16, #480]
  401ca8:	add	x16, x16, #0x1e0
  401cac:	br	x17

0000000000401cb0 <__errno_location@plt>:
  401cb0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401cb4:	ldr	x17, [x16, #488]
  401cb8:	add	x16, x16, #0x1e8
  401cbc:	br	x17

0000000000401cc0 <getenv@plt>:
  401cc0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401cc4:	ldr	x17, [x16, #496]
  401cc8:	add	x16, x16, #0x1f0
  401ccc:	br	x17

0000000000401cd0 <__xstat@plt>:
  401cd0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401cd4:	ldr	x17, [x16, #504]
  401cd8:	add	x16, x16, #0x1f8
  401cdc:	br	x17

0000000000401ce0 <__memmove_chk@plt>:
  401ce0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401ce4:	ldr	x17, [x16, #512]
  401ce8:	add	x16, x16, #0x200
  401cec:	br	x17

0000000000401cf0 <setlocale@plt>:
  401cf0:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401cf4:	ldr	x17, [x16, #520]
  401cf8:	add	x16, x16, #0x208
  401cfc:	br	x17

0000000000401d00 <ferror@plt>:
  401d00:	adrp	x16, 418000 <mbrtowc@GLIBC_2.17>
  401d04:	ldr	x17, [x16, #528]
  401d08:	add	x16, x16, #0x210
  401d0c:	br	x17

Disassembly of section .text:

0000000000401d10 <_obstack_begin@@Base-0x4518>:
  401d10:	mov	x29, #0x0                   	// #0
  401d14:	mov	x30, #0x0                   	// #0
  401d18:	mov	x5, x0
  401d1c:	ldr	x1, [sp]
  401d20:	add	x2, sp, #0x8
  401d24:	mov	x6, sp
  401d28:	movz	x0, #0x0, lsl #48
  401d2c:	movk	x0, #0x0, lsl #32
  401d30:	movk	x0, #0x40, lsl #16
  401d34:	movk	x0, #0x20d4
  401d38:	movz	x3, #0x0, lsl #48
  401d3c:	movk	x3, #0x0, lsl #32
  401d40:	movk	x3, #0x40, lsl #16
  401d44:	movk	x3, #0x6880
  401d48:	movz	x4, #0x0, lsl #48
  401d4c:	movk	x4, #0x0, lsl #32
  401d50:	movk	x4, #0x40, lsl #16
  401d54:	movk	x4, #0x6900
  401d58:	bl	401a60 <__libc_start_main@plt>
  401d5c:	bl	401b30 <abort@plt>
  401d60:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x10ab8>
  401d64:	ldr	x0, [x0, #4064]
  401d68:	cbz	x0, 401d70 <ferror@plt+0x70>
  401d6c:	b	401b10 <__gmon_start__@plt>
  401d70:	ret
  401d74:	nop
  401d78:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x11ab8>
  401d7c:	add	x0, x0, #0x298
  401d80:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x11ab8>
  401d84:	add	x1, x1, #0x298
  401d88:	cmp	x1, x0
  401d8c:	b.eq	401da4 <ferror@plt+0xa4>  // b.none
  401d90:	adrp	x1, 406000 <ferror@plt+0x4300>
  401d94:	ldr	x1, [x1, #2384]
  401d98:	cbz	x1, 401da4 <ferror@plt+0xa4>
  401d9c:	mov	x16, x1
  401da0:	br	x16
  401da4:	ret
  401da8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x11ab8>
  401dac:	add	x0, x0, #0x298
  401db0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x11ab8>
  401db4:	add	x1, x1, #0x298
  401db8:	sub	x1, x1, x0
  401dbc:	lsr	x2, x1, #63
  401dc0:	add	x1, x2, x1, asr #3
  401dc4:	cmp	xzr, x1, asr #1
  401dc8:	asr	x1, x1, #1
  401dcc:	b.eq	401de4 <ferror@plt+0xe4>  // b.none
  401dd0:	adrp	x2, 406000 <ferror@plt+0x4300>
  401dd4:	ldr	x2, [x2, #2392]
  401dd8:	cbz	x2, 401de4 <ferror@plt+0xe4>
  401ddc:	mov	x16, x2
  401de0:	br	x16
  401de4:	ret
  401de8:	stp	x29, x30, [sp, #-32]!
  401dec:	mov	x29, sp
  401df0:	str	x19, [sp, #16]
  401df4:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x11ab8>
  401df8:	ldrb	w0, [x19, #720]
  401dfc:	cbnz	w0, 401e0c <ferror@plt+0x10c>
  401e00:	bl	401d78 <ferror@plt+0x78>
  401e04:	mov	w0, #0x1                   	// #1
  401e08:	strb	w0, [x19, #720]
  401e0c:	ldr	x19, [sp, #16]
  401e10:	ldp	x29, x30, [sp], #32
  401e14:	ret
  401e18:	b	401da8 <ferror@plt+0xa8>
  401e1c:	stp	x29, x30, [sp, #-32]!
  401e20:	stp	x20, x19, [sp, #16]
  401e24:	mov	w19, w0
  401e28:	mov	x29, sp
  401e2c:	cbnz	w0, 401efc <ferror@plt+0x1fc>
  401e30:	adrp	x1, 406000 <ferror@plt+0x4300>
  401e34:	add	x1, x1, #0xba4
  401e38:	mov	w2, #0x5                   	// #5
  401e3c:	mov	x0, xzr
  401e40:	bl	401c60 <dcgettext@plt>
  401e44:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  401e48:	ldr	x2, [x8, #816]
  401e4c:	mov	x1, x0
  401e50:	mov	w0, #0x1                   	// #1
  401e54:	mov	x3, x2
  401e58:	bl	401a80 <__printf_chk@plt>
  401e5c:	adrp	x1, 406000 <ferror@plt+0x4300>
  401e60:	add	x1, x1, #0xbeb
  401e64:	mov	w2, #0x5                   	// #5
  401e68:	mov	x0, xzr
  401e6c:	bl	401c60 <dcgettext@plt>
  401e70:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x11ab8>
  401e74:	ldr	x1, [x20, #696]
  401e78:	bl	401c70 <fputs_unlocked@plt>
  401e7c:	bl	401f38 <ferror@plt+0x238>
  401e80:	adrp	x1, 406000 <ferror@plt+0x4300>
  401e84:	add	x1, x1, #0xca3
  401e88:	mov	w2, #0x5                   	// #5
  401e8c:	mov	x0, xzr
  401e90:	bl	401c60 <dcgettext@plt>
  401e94:	ldr	x1, [x20, #696]
  401e98:	bl	401c70 <fputs_unlocked@plt>
  401e9c:	adrp	x1, 406000 <ferror@plt+0x4300>
  401ea0:	add	x1, x1, #0xdd0
  401ea4:	mov	w2, #0x5                   	// #5
  401ea8:	mov	x0, xzr
  401eac:	bl	401c60 <dcgettext@plt>
  401eb0:	ldr	x1, [x20, #696]
  401eb4:	bl	401c70 <fputs_unlocked@plt>
  401eb8:	adrp	x1, 406000 <ferror@plt+0x4300>
  401ebc:	add	x1, x1, #0xefd
  401ec0:	mov	w2, #0x5                   	// #5
  401ec4:	mov	x0, xzr
  401ec8:	bl	401c60 <dcgettext@plt>
  401ecc:	ldr	x1, [x20, #696]
  401ed0:	bl	401c70 <fputs_unlocked@plt>
  401ed4:	adrp	x1, 406000 <ferror@plt+0x4300>
  401ed8:	add	x1, x1, #0xf2a
  401edc:	mov	w2, #0x5                   	// #5
  401ee0:	mov	x0, xzr
  401ee4:	bl	401c60 <dcgettext@plt>
  401ee8:	ldr	x1, [x20, #696]
  401eec:	bl	401c70 <fputs_unlocked@plt>
  401ef0:	bl	401f68 <ferror@plt+0x268>
  401ef4:	mov	w0, w19
  401ef8:	bl	401920 <exit@plt>
  401efc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  401f00:	ldr	x20, [x8, #672]
  401f04:	adrp	x1, 406000 <ferror@plt+0x4300>
  401f08:	add	x1, x1, #0xb7d
  401f0c:	mov	w2, #0x5                   	// #5
  401f10:	mov	x0, xzr
  401f14:	bl	401c60 <dcgettext@plt>
  401f18:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  401f1c:	ldr	x3, [x8, #816]
  401f20:	mov	x2, x0
  401f24:	mov	w1, #0x1                   	// #1
  401f28:	mov	x0, x20
  401f2c:	bl	401b90 <__fprintf_chk@plt>
  401f30:	mov	w0, w19
  401f34:	bl	401920 <exit@plt>
  401f38:	stp	x29, x30, [sp, #-16]!
  401f3c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  401f40:	add	x1, x1, #0xf8
  401f44:	mov	w2, #0x5                   	// #5
  401f48:	mov	x0, xzr
  401f4c:	mov	x29, sp
  401f50:	bl	401c60 <dcgettext@plt>
  401f54:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  401f58:	ldr	x1, [x8, #696]
  401f5c:	bl	401c70 <fputs_unlocked@plt>
  401f60:	ldp	x29, x30, [sp], #16
  401f64:	ret
  401f68:	sub	sp, sp, #0xa0
  401f6c:	adrp	x8, 406000 <ferror@plt+0x4300>
  401f70:	add	x8, x8, #0xb08
  401f74:	ldp	q0, q4, [x8]
  401f78:	ldp	q1, q2, [x8, #48]
  401f7c:	stp	x20, x19, [sp, #144]
  401f80:	adrp	x19, 406000 <ferror@plt+0x4300>
  401f84:	str	q0, [sp]
  401f88:	ldr	q0, [x8, #32]
  401f8c:	str	q1, [sp, #48]
  401f90:	ldp	q3, q1, [x8, #80]
  401f94:	ldr	x1, [sp]
  401f98:	str	x21, [sp, #128]
  401f9c:	add	x19, x19, #0xf60
  401fa0:	mov	x21, sp
  401fa4:	stp	x29, x30, [sp, #112]
  401fa8:	add	x29, sp, #0x70
  401fac:	stp	q2, q3, [sp, #64]
  401fb0:	str	q1, [sp, #96]
  401fb4:	stp	q4, q0, [sp, #16]
  401fb8:	cbz	x1, 401fd8 <ferror@plt+0x2d8>
  401fbc:	adrp	x20, 406000 <ferror@plt+0x4300>
  401fc0:	add	x20, x20, #0xf60
  401fc4:	mov	x0, x20
  401fc8:	bl	401ba0 <strcmp@plt>
  401fcc:	cbz	w0, 401fd8 <ferror@plt+0x2d8>
  401fd0:	ldr	x1, [x21, #16]!
  401fd4:	cbnz	x1, 401fc4 <ferror@plt+0x2c4>
  401fd8:	ldr	x8, [x21, #8]
  401fdc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  401fe0:	add	x1, x1, #0x18f
  401fe4:	mov	w2, #0x5                   	// #5
  401fe8:	cmp	x8, #0x0
  401fec:	mov	x0, xzr
  401ff0:	csel	x20, x19, x8, eq  // eq = none
  401ff4:	bl	401c60 <dcgettext@plt>
  401ff8:	adrp	x2, 406000 <ferror@plt+0x4300>
  401ffc:	adrp	x3, 407000 <_obstack_memory_used@@Base+0xab8>
  402000:	mov	x1, x0
  402004:	add	x2, x2, #0xf8b
  402008:	add	x3, x3, #0x1a6
  40200c:	mov	w0, #0x1                   	// #1
  402010:	bl	401a80 <__printf_chk@plt>
  402014:	mov	w0, #0x5                   	// #5
  402018:	mov	x1, xzr
  40201c:	bl	401cf0 <setlocale@plt>
  402020:	cbz	x0, 402058 <ferror@plt+0x358>
  402024:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  402028:	add	x1, x1, #0x1ce
  40202c:	mov	w2, #0x3                   	// #3
  402030:	bl	401a40 <strncmp@plt>
  402034:	cbz	w0, 402058 <ferror@plt+0x358>
  402038:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  40203c:	add	x1, x1, #0x1d2
  402040:	mov	w2, #0x5                   	// #5
  402044:	mov	x0, xzr
  402048:	bl	401c60 <dcgettext@plt>
  40204c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402050:	ldr	x1, [x8, #696]
  402054:	bl	401c70 <fputs_unlocked@plt>
  402058:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  40205c:	add	x1, x1, #0x219
  402060:	mov	w2, #0x5                   	// #5
  402064:	mov	x0, xzr
  402068:	bl	401c60 <dcgettext@plt>
  40206c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  402070:	mov	x1, x0
  402074:	add	x2, x2, #0x1a6
  402078:	mov	w0, #0x1                   	// #1
  40207c:	mov	x3, x19
  402080:	bl	401a80 <__printf_chk@plt>
  402084:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  402088:	add	x1, x1, #0x234
  40208c:	mov	w2, #0x5                   	// #5
  402090:	mov	x0, xzr
  402094:	bl	401c60 <dcgettext@plt>
  402098:	adrp	x8, 407000 <_obstack_memory_used@@Base+0xab8>
  40209c:	adrp	x9, 407000 <_obstack_memory_used@@Base+0xab8>
  4020a0:	add	x8, x8, #0x583
  4020a4:	add	x9, x9, #0x14c
  4020a8:	cmp	x20, x19
  4020ac:	mov	x1, x0
  4020b0:	csel	x3, x9, x8, eq  // eq = none
  4020b4:	mov	w0, #0x1                   	// #1
  4020b8:	mov	x2, x20
  4020bc:	bl	401a80 <__printf_chk@plt>
  4020c0:	ldp	x20, x19, [sp, #144]
  4020c4:	ldr	x21, [sp, #128]
  4020c8:	ldp	x29, x30, [sp, #112]
  4020cc:	add	sp, sp, #0xa0
  4020d0:	ret
  4020d4:	stp	d9, d8, [sp, #-112]!
  4020d8:	stp	x29, x30, [sp, #16]
  4020dc:	stp	x28, x27, [sp, #32]
  4020e0:	stp	x26, x25, [sp, #48]
  4020e4:	stp	x24, x23, [sp, #64]
  4020e8:	stp	x22, x21, [sp, #80]
  4020ec:	stp	x20, x19, [sp, #96]
  4020f0:	mov	x29, sp
  4020f4:	sub	sp, sp, #0x1b0
  4020f8:	ldr	x8, [x1]
  4020fc:	mov	w21, w0
  402100:	mov	x20, x1
  402104:	mov	x0, x8
  402108:	bl	403a84 <ferror@plt+0x1d84>
  40210c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  402110:	add	x1, x1, #0x583
  402114:	mov	w0, #0x6                   	// #6
  402118:	bl	401cf0 <setlocale@plt>
  40211c:	adrp	x19, 406000 <ferror@plt+0x4300>
  402120:	add	x19, x19, #0xf8f
  402124:	adrp	x1, 406000 <ferror@plt+0x4300>
  402128:	add	x1, x1, #0xf63
  40212c:	mov	x0, x19
  402130:	bl	401a50 <bindtextdomain@plt>
  402134:	mov	x0, x19
  402138:	bl	401b70 <textdomain@plt>
  40213c:	adrp	x0, 403000 <ferror@plt+0x1300>
  402140:	add	x0, x0, #0x764
  402144:	bl	406908 <_obstack_memory_used@@Base+0x3c0>
  402148:	bl	401ae0 <getpagesize@plt>
  40214c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402150:	ldr	x8, [x8, #696]
  402154:	sxtw	x9, w0
  402158:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x11ab8>
  40215c:	mov	w2, #0x1                   	// #1
  402160:	mov	x0, x8
  402164:	mov	x1, xzr
  402168:	mov	x3, xzr
  40216c:	str	x9, [x10, #728]
  402170:	mov	w28, #0x1                   	// #1
  402174:	bl	401980 <setvbuf@plt>
  402178:	adrp	x0, 406000 <ferror@plt+0x4300>
  40217c:	add	x0, x0, #0xf75
  402180:	bl	401cc0 <getenv@plt>
  402184:	cmp	x0, #0x0
  402188:	adrp	x22, 406000 <ferror@plt+0x4300>
  40218c:	adrp	x23, 406000 <ferror@plt+0x4300>
  402190:	adrp	x24, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402194:	adrp	x26, 406000 <ferror@plt+0x4300>
  402198:	adrp	x27, 418000 <_obstack_memory_used@@Base+0x11ab8>
  40219c:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021a0:	mov	x19, xzr
  4021a4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021a8:	adrp	x15, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021ac:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021b0:	adrp	x16, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021b4:	adrp	x17, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021b8:	adrp	x18, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021bc:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021c0:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021c4:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021c8:	adrp	x13, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021cc:	adrp	x14, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4021d0:	add	x22, x22, #0xf85
  4021d4:	add	x23, x23, #0x9e8
  4021d8:	add	x24, x24, #0x2e1
  4021dc:	add	x26, x26, #0x960
  4021e0:	cset	w9, ne  // ne = any
  4021e4:	add	x27, x27, #0x2e2
  4021e8:	add	x25, x25, #0x2e3
  4021ec:	strb	w9, [x8, #736]
  4021f0:	strb	wzr, [x15, #737]
  4021f4:	strb	wzr, [x0, #738]
  4021f8:	strb	wzr, [x16, #739]
  4021fc:	strb	wzr, [x17, #740]
  402200:	strb	wzr, [x18, #741]
  402204:	str	xzr, [x10, #744]
  402208:	str	xzr, [x11, #752]
  40220c:	str	xzr, [x12, #760]
  402210:	str	xzr, [x13, #768]
  402214:	str	xzr, [x14, #776]
  402218:	b	402228 <ferror@plt+0x528>
  40221c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402220:	add	x8, x8, #0x2e5
  402224:	strb	w28, [x8]
  402228:	mov	w0, w21
  40222c:	mov	x1, x20
  402230:	mov	x2, x22
  402234:	mov	x3, x23
  402238:	mov	x4, xzr
  40223c:	bl	401b80 <getopt_long@plt>
  402240:	cmp	w0, #0x4b
  402244:	b.le	4022a4 <ferror@plt+0x5a4>
  402248:	sub	w8, w0, #0x4c
  40224c:	cmp	w8, #0x2b
  402250:	b.hi	402284 <ferror@plt+0x584>  // b.pmore
  402254:	adr	x9, 40221c <ferror@plt+0x51c>
  402258:	ldrh	w10, [x26, x8, lsl #1]
  40225c:	add	x9, x9, x10, lsl #2
  402260:	mov	x8, x24
  402264:	br	x9
  402268:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  40226c:	add	x8, x8, #0x2e4
  402270:	strb	w28, [x8]
  402274:	b	402228 <ferror@plt+0x528>
  402278:	mov	x8, x27
  40227c:	strb	w28, [x27]
  402280:	b	402228 <ferror@plt+0x528>
  402284:	cmp	w0, #0x100
  402288:	b.ne	402828 <ferror@plt+0xb28>  // b.any
  40228c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402290:	ldr	x19, [x8, #680]
  402294:	b	402228 <ferror@plt+0x528>
  402298:	mov	x8, x25
  40229c:	strb	w28, [x25]
  4022a0:	b	402228 <ferror@plt+0x528>
  4022a4:	cmn	w0, #0x1
  4022a8:	b.ne	4027b0 <ferror@plt+0xab0>  // b.any
  4022ac:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4022b0:	ldrb	w8, [x10, #740]
  4022b4:	tbnz	w8, #0, 402300 <ferror@plt+0x600>
  4022b8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4022bc:	ldrb	w8, [x8, #739]
  4022c0:	tbnz	w8, #0, 402300 <ferror@plt+0x600>
  4022c4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4022c8:	ldrb	w8, [x8, #738]
  4022cc:	tbnz	w8, #0, 402300 <ferror@plt+0x600>
  4022d0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4022d4:	ldrb	w8, [x8, #737]
  4022d8:	tbnz	w8, #0, 402300 <ferror@plt+0x600>
  4022dc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4022e0:	ldrb	w8, [x8, #741]
  4022e4:	tbnz	w8, #0, 402300 <ferror@plt+0x600>
  4022e8:	mov	w8, #0x1                   	// #1
  4022ec:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4022f0:	strb	w8, [x9, #737]
  4022f4:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4022f8:	strb	w8, [x9, #739]
  4022fc:	strb	w8, [x10, #740]
  402300:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402304:	ldrsw	x8, [x22, #688]
  402308:	cbz	x19, 402380 <ferror@plt+0x680>
  40230c:	cmp	w8, w21
  402310:	b.lt	402830 <ferror@plt+0xb30>  // b.tstop
  402314:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  402318:	add	x1, x1, #0x326
  40231c:	mov	x0, x19
  402320:	bl	401ba0 <strcmp@plt>
  402324:	cbz	w0, 4023b4 <ferror@plt+0x6b4>
  402328:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  40232c:	add	x1, x1, #0x40
  402330:	mov	x0, x19
  402334:	bl	4019f0 <fopen@plt>
  402338:	mov	x20, x0
  40233c:	cbnz	x0, 4023bc <ferror@plt+0x6bc>
  402340:	bl	401cb0 <__errno_location@plt>
  402344:	ldr	w20, [x0]
  402348:	adrp	x1, 406000 <ferror@plt+0x4300>
  40234c:	add	x1, x1, #0xff9
  402350:	mov	w2, #0x5                   	// #5
  402354:	mov	x0, xzr
  402358:	bl	401c60 <dcgettext@plt>
  40235c:	mov	x21, x0
  402360:	mov	w0, #0x4                   	// #4
  402364:	mov	x1, x19
  402368:	bl	404d9c <ferror@plt+0x309c>
  40236c:	mov	x3, x0
  402370:	mov	w0, #0x1                   	// #1
  402374:	mov	w1, w20
  402378:	mov	x2, x21
  40237c:	bl	401930 <error@plt>
  402380:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402384:	add	x9, x20, x8, lsl #3
  402388:	add	x10, x10, #0x310
  40238c:	subs	w8, w21, w8
  402390:	csel	x21, x9, x10, gt
  402394:	csinc	w8, w8, wzr, gt
  402398:	mov	x0, x21
  40239c:	sxtw	x22, w8
  4023a0:	bl	4035e4 <ferror@plt+0x18e4>
  4023a4:	mov	x20, x0
  4023a8:	str	wzr, [sp, #4]
  4023ac:	cbnz	x20, 402430 <ferror@plt+0x730>
  4023b0:	b	4027ac <ferror@plt+0xaac>
  4023b4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4023b8:	ldr	x20, [x8, #704]
  4023bc:	mov	x0, x20
  4023c0:	bl	4019b0 <fileno@plt>
  4023c4:	add	x1, sp, #0x8
  4023c8:	bl	406928 <_obstack_memory_used@@Base+0x3e0>
  4023cc:	cbnz	w0, 402414 <ferror@plt+0x714>
  4023d0:	ldr	w8, [sp, #24]
  4023d4:	and	w8, w8, #0xf000
  4023d8:	cmp	w8, #0x8, lsl #12
  4023dc:	b.ne	402414 <ferror@plt+0x714>  // b.any
  4023e0:	ldr	d0, [sp, #56]
  4023e4:	scvtf	d8, d0
  4023e8:	bl	4039e4 <ferror@plt+0x1ce4>
  4023ec:	fmov	d9, #5.000000000000000000e-01
  4023f0:	mov	x8, #0x4164000000000000    	// #4711891110136381440
  4023f4:	fmul	d1, d0, d9
  4023f8:	fmov	d0, x8
  4023fc:	fcmp	d1, d0
  402400:	b.gt	40240c <ferror@plt+0x70c>
  402404:	bl	4039e4 <ferror@plt+0x1ce4>
  402408:	fmul	d0, d0, d9
  40240c:	fcmp	d0, d8
  402410:	b.ge	402760 <ferror@plt+0xa60>  // b.tcont
  402414:	mov	x0, x20
  402418:	bl	403614 <ferror@plt+0x1914>
  40241c:	mov	x20, x0
  402420:	mov	x21, xzr
  402424:	mov	x22, xzr
  402428:	str	wzr, [sp, #4]
  40242c:	cbz	x20, 4027ac <ferror@plt+0xaac>
  402430:	mov	x0, x22
  402434:	mov	x1, x21
  402438:	bl	4028f8 <ferror@plt+0xbf8>
  40243c:	mov	x21, x0
  402440:	mov	x0, x22
  402444:	mov	x1, x21
  402448:	bl	4029f0 <ferror@plt+0xcf0>
  40244c:	adrp	x24, 407000 <_obstack_memory_used@@Base+0xab8>
  402450:	adrp	x26, 407000 <_obstack_memory_used@@Base+0xab8>
  402454:	mov	x28, xzr
  402458:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  40245c:	add	x24, x24, #0x326
  402460:	add	x26, x26, #0xc9
  402464:	mov	w23, #0x1                   	// #1
  402468:	str	w0, [x8, #792]
  40246c:	add	x1, sp, #0x8
  402470:	mov	x0, x20
  402474:	bl	40364c <ferror@plt+0x194c>
  402478:	cbz	x0, 4024c0 <ferror@plt+0x7c0>
  40247c:	mov	x25, x0
  402480:	cbz	x19, 4024a4 <ferror@plt+0x7a4>
  402484:	mov	x0, x19
  402488:	mov	x1, x24
  40248c:	bl	401ba0 <strcmp@plt>
  402490:	cbnz	w0, 4024a4 <ferror@plt+0x7a4>
  402494:	mov	x0, x25
  402498:	mov	x1, x24
  40249c:	bl	401ba0 <strcmp@plt>
  4024a0:	cbz	w0, 40256c <ferror@plt+0x86c>
  4024a4:	mov	w8, wzr
  4024a8:	ldrb	w9, [x25]
  4024ac:	cbz	w9, 4025b0 <ferror@plt+0x8b0>
  4024b0:	tbz	w8, #0, 402528 <ferror@plt+0x828>
  4024b4:	mov	w9, wzr
  4024b8:	cbnz	x22, 402554 <ferror@plt+0x854>
  4024bc:	b	40254c <ferror@plt+0x84c>
  4024c0:	ldr	w8, [sp, #8]
  4024c4:	cmp	w8, #0x2
  4024c8:	b.eq	40251c <ferror@plt+0x81c>  // b.none
  4024cc:	cmp	w8, #0x4
  4024d0:	b.ne	4027a4 <ferror@plt+0xaa4>  // b.any
  4024d4:	bl	401cb0 <__errno_location@plt>
  4024d8:	ldr	w25, [x0]
  4024dc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  4024e0:	mov	w2, #0x5                   	// #5
  4024e4:	mov	x0, xzr
  4024e8:	add	x1, x1, #0x33
  4024ec:	bl	401c60 <dcgettext@plt>
  4024f0:	mov	x27, x0
  4024f4:	mov	w1, #0x3                   	// #3
  4024f8:	mov	w0, wzr
  4024fc:	mov	x2, x19
  402500:	bl	404e9c <ferror@plt+0x319c>
  402504:	mov	x3, x0
  402508:	mov	w0, wzr
  40250c:	mov	w1, w25
  402510:	mov	x2, x27
  402514:	bl	401930 <error@plt>
  402518:	mov	w23, wzr
  40251c:	mov	w8, #0x9                   	// #9
  402520:	cbz	w8, 402564 <ferror@plt+0x864>
  402524:	b	402644 <ferror@plt+0x944>
  402528:	cmp	x22, #0x0
  40252c:	csel	x8, xzr, x28, eq  // eq = none
  402530:	mov	w9, #0x88                  	// #136
  402534:	madd	x1, x8, x9, x21
  402538:	mov	x0, x25
  40253c:	bl	402a7c <ferror@plt+0xd7c>
  402540:	and	w8, w23, w0
  402544:	and	w9, w8, #0x1
  402548:	cbnz	x22, 402554 <ferror@plt+0x854>
  40254c:	mov	w8, #0x1                   	// #1
  402550:	str	w8, [x21]
  402554:	cmp	w9, #0x0
  402558:	mov	w8, wzr
  40255c:	cset	w23, ne  // ne = any
  402560:	cbnz	w8, 402644 <ferror@plt+0x944>
  402564:	add	x28, x28, #0x1
  402568:	b	40246c <ferror@plt+0x76c>
  40256c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  402570:	mov	w2, #0x5                   	// #5
  402574:	mov	x0, xzr
  402578:	add	x1, x1, #0x8a
  40257c:	bl	401c60 <dcgettext@plt>
  402580:	mov	x27, x0
  402584:	mov	w0, #0x4                   	// #4
  402588:	mov	x1, x25
  40258c:	bl	404d9c <ferror@plt+0x309c>
  402590:	mov	x3, x0
  402594:	mov	w0, wzr
  402598:	mov	w1, wzr
  40259c:	mov	x2, x27
  4025a0:	bl	401930 <error@plt>
  4025a4:	mov	w8, #0x1                   	// #1
  4025a8:	ldrb	w9, [x25]
  4025ac:	cbnz	w9, 4024b0 <ferror@plt+0x7b0>
  4025b0:	cbz	x19, 402610 <ferror@plt+0x910>
  4025b4:	mov	x0, x20
  4025b8:	bl	4036f4 <ferror@plt+0x19f4>
  4025bc:	mov	x25, x0
  4025c0:	mov	w1, #0x3                   	// #3
  4025c4:	mov	w0, wzr
  4025c8:	mov	x2, x19
  4025cc:	bl	404e9c <ferror@plt+0x319c>
  4025d0:	mov	x27, x0
  4025d4:	mov	w2, #0x5                   	// #5
  4025d8:	mov	x0, xzr
  4025dc:	mov	x1, x26
  4025e0:	bl	401c60 <dcgettext@plt>
  4025e4:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  4025e8:	mov	x5, x0
  4025ec:	mov	w0, wzr
  4025f0:	mov	w1, wzr
  4025f4:	add	x2, x2, #0xe7
  4025f8:	mov	x3, x27
  4025fc:	mov	x4, x25
  402600:	bl	401930 <error@plt>
  402604:	mov	w9, wzr
  402608:	cbnz	x22, 402554 <ferror@plt+0x854>
  40260c:	b	40254c <ferror@plt+0x84c>
  402610:	mov	w2, #0x5                   	// #5
  402614:	mov	x0, xzr
  402618:	mov	x1, x26
  40261c:	bl	401c60 <dcgettext@plt>
  402620:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  402624:	mov	x3, x0
  402628:	mov	w0, wzr
  40262c:	mov	w1, wzr
  402630:	add	x2, x2, #0x2c0
  402634:	bl	401930 <error@plt>
  402638:	mov	w9, wzr
  40263c:	cbnz	x22, 402554 <ferror@plt+0x854>
  402640:	b	40254c <ferror@plt+0x84c>
  402644:	cmp	w8, #0x9
  402648:	b.ne	40267c <ferror@plt+0x97c>  // b.any
  40264c:	cbnz	x19, 402754 <ferror@plt+0xa54>
  402650:	eor	w8, w23, #0x1
  402654:	tbnz	w8, #0, 402684 <ferror@plt+0x984>
  402658:	mov	x0, x20
  40265c:	bl	4036f4 <ferror@plt+0x19f4>
  402660:	ldr	w19, [sp, #4]
  402664:	cbnz	x0, 402688 <ferror@plt+0x988>
  402668:	mov	x1, x21
  40266c:	bl	402a7c <ferror@plt+0xd7c>
  402670:	and	w23, w23, w0
  402674:	cbnz	w19, 40268c <ferror@plt+0x98c>
  402678:	b	402694 <ferror@plt+0x994>
  40267c:	mov	w0, wzr
  402680:	b	402730 <ferror@plt+0xa30>
  402684:	ldr	w19, [sp, #4]
  402688:	cbz	w19, 402694 <ferror@plt+0x994>
  40268c:	add	x0, sp, #0x88
  402690:	bl	4055a8 <ferror@plt+0x38a8>
  402694:	mov	x0, x20
  402698:	bl	4036f4 <ferror@plt+0x19f4>
  40269c:	cmp	x0, #0x2
  4026a0:	b.cc	4026fc <ferror@plt+0x9fc>  // b.lo, b.ul, b.last
  4026a4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4026a8:	ldr	x19, [x8, #776]
  4026ac:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4026b0:	ldr	x22, [x8, #768]
  4026b4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4026b8:	ldr	x26, [x8, #760]
  4026bc:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4026c0:	ldr	x24, [x8, #752]
  4026c4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4026c8:	ldr	x25, [x8, #744]
  4026cc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  4026d0:	add	x1, x1, #0xf2
  4026d4:	mov	w2, #0x5                   	// #5
  4026d8:	mov	x0, xzr
  4026dc:	bl	401c60 <dcgettext@plt>
  4026e0:	mov	x5, x0
  4026e4:	mov	x0, x19
  4026e8:	mov	x1, x22
  4026ec:	mov	x2, x26
  4026f0:	mov	x3, x24
  4026f4:	mov	x4, x25
  4026f8:	bl	402b60 <ferror@plt+0xe60>
  4026fc:	mov	x0, x20
  402700:	bl	403714 <ferror@plt+0x1a14>
  402704:	mov	x0, x21
  402708:	bl	401bd0 <free@plt>
  40270c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402710:	ldrb	w8, [x8, #796]
  402714:	cmp	w8, #0x1
  402718:	b.ne	402728 <ferror@plt+0xa28>  // b.any
  40271c:	mov	w0, wzr
  402720:	bl	401af0 <close@plt>
  402724:	cbnz	w0, 4028a8 <ferror@plt+0xba8>
  402728:	mvn	w8, w23
  40272c:	and	w0, w8, #0x1
  402730:	add	sp, sp, #0x1b0
  402734:	ldp	x20, x19, [sp, #96]
  402738:	ldp	x22, x21, [sp, #80]
  40273c:	ldp	x24, x23, [sp, #64]
  402740:	ldp	x26, x25, [sp, #48]
  402744:	ldp	x28, x27, [sp, #32]
  402748:	ldp	x29, x30, [sp, #16]
  40274c:	ldp	d9, d8, [sp], #112
  402750:	ret
  402754:	ldr	w19, [sp, #4]
  402758:	cbnz	w19, 40268c <ferror@plt+0x98c>
  40275c:	b	402694 <ferror@plt+0x994>
  402760:	add	x0, sp, #0x88
  402764:	bl	405524 <ferror@plt+0x3824>
  402768:	add	x1, sp, #0x88
  40276c:	mov	x0, x20
  402770:	bl	4055e8 <ferror@plt+0x38e8>
  402774:	tbz	w0, #0, 4028c0 <ferror@plt+0xbc0>
  402778:	mov	x0, x20
  40277c:	bl	406038 <ferror@plt+0x4338>
  402780:	cbnz	w0, 4028c0 <ferror@plt+0xbc0>
  402784:	ldp	x22, x21, [sp, #136]
  402788:	mov	x0, x21
  40278c:	bl	4035e4 <ferror@plt+0x18e4>
  402790:	mov	w8, #0x1                   	// #1
  402794:	mov	x20, x0
  402798:	str	w8, [sp, #4]
  40279c:	cbnz	x20, 402430 <ferror@plt+0x730>
  4027a0:	b	4027ac <ferror@plt+0xaac>
  4027a4:	cmp	w8, #0x3
  4027a8:	b.ne	4027f8 <ferror@plt+0xaf8>  // b.any
  4027ac:	bl	405f84 <ferror@plt+0x4284>
  4027b0:	cmn	w0, #0x3
  4027b4:	b.ne	402818 <ferror@plt+0xb18>  // b.any
  4027b8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4027bc:	ldr	x0, [x8, #696]
  4027c0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4027c4:	ldr	x3, [x8, #552]
  4027c8:	adrp	x1, 406000 <ferror@plt+0x4300>
  4027cc:	adrp	x2, 406000 <ferror@plt+0x4300>
  4027d0:	adrp	x4, 406000 <ferror@plt+0x4300>
  4027d4:	adrp	x5, 406000 <ferror@plt+0x4300>
  4027d8:	add	x1, x1, #0xf60
  4027dc:	add	x2, x2, #0xf8b
  4027e0:	add	x4, x4, #0xf99
  4027e4:	add	x5, x5, #0xfa4
  4027e8:	mov	x6, xzr
  4027ec:	bl	405c68 <ferror@plt+0x3f68>
  4027f0:	mov	w0, wzr
  4027f4:	bl	401920 <exit@plt>
  4027f8:	adrp	x0, 407000 <_obstack_memory_used@@Base+0xab8>
  4027fc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  402800:	adrp	x3, 407000 <_obstack_memory_used@@Base+0xab8>
  402804:	add	x0, x0, #0x42
  402808:	add	x1, x1, #0x6a
  40280c:	add	x3, x3, #0x73
  402810:	mov	w2, #0x33f                 	// #831
  402814:	bl	401ca0 <__assert_fail@plt>
  402818:	cmn	w0, #0x2
  40281c:	b.ne	402828 <ferror@plt+0xb28>  // b.any
  402820:	mov	w0, wzr
  402824:	bl	401e1c <ferror@plt+0x11c>
  402828:	mov	w0, #0x1                   	// #1
  40282c:	bl	401e1c <ferror@plt+0x11c>
  402830:	adrp	x1, 406000 <ferror@plt+0x4300>
  402834:	add	x1, x1, #0xfb4
  402838:	mov	w2, #0x5                   	// #5
  40283c:	mov	x0, xzr
  402840:	bl	401c60 <dcgettext@plt>
  402844:	ldrsw	x8, [x22, #688]
  402848:	mov	x19, x0
  40284c:	mov	w0, #0x4                   	// #4
  402850:	ldr	x1, [x20, x8, lsl #3]
  402854:	bl	404d9c <ferror@plt+0x309c>
  402858:	mov	x3, x0
  40285c:	mov	w0, wzr
  402860:	mov	w1, wzr
  402864:	mov	x2, x19
  402868:	bl	401930 <error@plt>
  40286c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402870:	ldr	x19, [x8, #672]
  402874:	adrp	x1, 406000 <ferror@plt+0x4300>
  402878:	add	x1, x1, #0xfc5
  40287c:	mov	w2, #0x5                   	// #5
  402880:	mov	x0, xzr
  402884:	bl	401c60 <dcgettext@plt>
  402888:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  40288c:	mov	x3, x0
  402890:	add	x2, x2, #0x4a9
  402894:	mov	w1, #0x1                   	// #1
  402898:	mov	x0, x19
  40289c:	bl	401b90 <__fprintf_chk@plt>
  4028a0:	mov	w0, #0x1                   	// #1
  4028a4:	bl	401e1c <ferror@plt+0x11c>
  4028a8:	bl	401cb0 <__errno_location@plt>
  4028ac:	ldr	w1, [x0]
  4028b0:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  4028b4:	add	x2, x2, #0x326
  4028b8:	mov	w0, #0x1                   	// #1
  4028bc:	bl	401930 <error@plt>
  4028c0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  4028c4:	add	x1, x1, #0x14
  4028c8:	mov	w2, #0x5                   	// #5
  4028cc:	mov	x0, xzr
  4028d0:	bl	401c60 <dcgettext@plt>
  4028d4:	mov	x20, x0
  4028d8:	mov	w0, #0x4                   	// #4
  4028dc:	mov	x1, x19
  4028e0:	bl	404d9c <ferror@plt+0x309c>
  4028e4:	mov	x3, x0
  4028e8:	mov	w0, #0x1                   	// #1
  4028ec:	mov	w1, wzr
  4028f0:	mov	x2, x20
  4028f4:	bl	401930 <error@plt>
  4028f8:	stp	x29, x30, [sp, #-64]!
  4028fc:	cmp	x0, #0x0
  402900:	stp	x20, x19, [sp, #48]
  402904:	mov	x19, x1
  402908:	mov	x20, x0
  40290c:	csinc	x0, x0, xzr, ne  // ne = any
  402910:	mov	w1, #0x88                  	// #136
  402914:	stp	x24, x23, [sp, #16]
  402918:	stp	x22, x21, [sp, #32]
  40291c:	mov	x29, sp
  402920:	bl	405d54 <ferror@plt+0x4054>
  402924:	mov	x21, x0
  402928:	cbz	x20, 402974 <ferror@plt+0xc74>
  40292c:	cmp	x20, #0x1
  402930:	b.ne	402998 <ferror@plt+0xc98>  // b.any
  402934:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402938:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11ab8>
  40293c:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402940:	ldrb	w8, [x8, #740]
  402944:	ldrb	w9, [x9, #739]
  402948:	ldrb	w10, [x10, #738]
  40294c:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402950:	ldrb	w11, [x11, #737]
  402954:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402958:	ldrb	w12, [x12, #741]
  40295c:	add	w8, w9, w8
  402960:	add	w8, w8, w10
  402964:	add	w8, w8, w11
  402968:	add	w8, w8, w12
  40296c:	cmp	w8, #0x1
  402970:	b.ne	402994 <ferror@plt+0xc94>  // b.any
  402974:	mov	w8, #0x1                   	// #1
  402978:	str	w8, [x21]
  40297c:	mov	x0, x21
  402980:	ldp	x20, x19, [sp, #48]
  402984:	ldp	x22, x21, [sp, #32]
  402988:	ldp	x24, x23, [sp, #16]
  40298c:	ldp	x29, x30, [sp], #64
  402990:	ret
  402994:	cbz	x20, 40297c <ferror@plt+0xc7c>
  402998:	adrp	x23, 407000 <_obstack_memory_used@@Base+0xab8>
  40299c:	add	x22, x21, #0x8
  4029a0:	add	x23, x23, #0x326
  4029a4:	b	4029c8 <ferror@plt+0xcc8>
  4029a8:	mov	w0, wzr
  4029ac:	mov	x1, x22
  4029b0:	bl	406928 <_obstack_memory_used@@Base+0x3e0>
  4029b4:	stur	w0, [x22, #-8]
  4029b8:	add	x22, x22, #0x88
  4029bc:	subs	x20, x20, #0x1
  4029c0:	add	x19, x19, #0x8
  4029c4:	b.eq	40297c <ferror@plt+0xc7c>  // b.none
  4029c8:	ldr	x24, [x19]
  4029cc:	cbz	x24, 4029a8 <ferror@plt+0xca8>
  4029d0:	mov	x0, x24
  4029d4:	mov	x1, x23
  4029d8:	bl	401ba0 <strcmp@plt>
  4029dc:	cbz	w0, 4029a8 <ferror@plt+0xca8>
  4029e0:	mov	x0, x24
  4029e4:	mov	x1, x22
  4029e8:	bl	406918 <_obstack_memory_used@@Base+0x3d0>
  4029ec:	b	4029b4 <ferror@plt+0xcb4>
  4029f0:	cbz	x0, 402a00 <ferror@plt+0xd00>
  4029f4:	ldr	w8, [x1]
  4029f8:	cmp	w8, #0x0
  4029fc:	b.le	402a08 <ferror@plt+0xd08>
  402a00:	mov	w0, #0x1                   	// #1
  402a04:	ret
  402a08:	mov	x9, xzr
  402a0c:	mov	w8, #0x1                   	// #1
  402a10:	b	402a28 <ferror@plt+0xd28>
  402a14:	ldr	x10, [x1, #56]
  402a18:	add	x9, x10, x9
  402a1c:	subs	x0, x0, #0x1
  402a20:	add	x1, x1, #0x88
  402a24:	b.eq	402a48 <ferror@plt+0xd48>  // b.none
  402a28:	ldr	w10, [x1]
  402a2c:	cbnz	w10, 402a1c <ferror@plt+0xd1c>
  402a30:	ldr	w10, [x1, #24]
  402a34:	and	w10, w10, #0xf000
  402a38:	cmp	w10, #0x8, lsl #12
  402a3c:	b.eq	402a14 <ferror@plt+0xd14>  // b.none
  402a40:	mov	w8, #0x7                   	// #7
  402a44:	b	402a1c <ferror@plt+0xd1c>
  402a48:	mov	w10, #0x1                   	// #1
  402a4c:	cmp	x9, #0xa
  402a50:	b.cc	402a70 <ferror@plt+0xd70>  // b.lo, b.ul, b.last
  402a54:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
  402a58:	movk	x11, #0xcccd
  402a5c:	umulh	x12, x9, x11
  402a60:	cmp	x9, #0x63
  402a64:	lsr	x9, x12, #3
  402a68:	add	w10, w10, #0x1
  402a6c:	b.hi	402a5c <ferror@plt+0xd5c>  // b.pmore
  402a70:	cmp	w10, w8
  402a74:	csel	w0, w8, w10, lt  // lt = tstop
  402a78:	ret
  402a7c:	stp	x29, x30, [sp, #-48]!
  402a80:	stp	x20, x19, [sp, #32]
  402a84:	mov	x20, x1
  402a88:	mov	x19, x0
  402a8c:	str	x21, [sp, #16]
  402a90:	mov	x29, sp
  402a94:	cbz	x0, 402b1c <ferror@plt+0xe1c>
  402a98:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  402a9c:	add	x1, x1, #0x326
  402aa0:	mov	x0, x19
  402aa4:	bl	401ba0 <strcmp@plt>
  402aa8:	cbz	w0, 402b1c <ferror@plt+0xe1c>
  402aac:	mov	x0, x19
  402ab0:	mov	w1, wzr
  402ab4:	bl	401a30 <open@plt>
  402ab8:	cmn	w0, #0x1
  402abc:	b.eq	402ae4 <ferror@plt+0xde4>  // b.none
  402ac0:	mov	x1, x19
  402ac4:	mov	x2, x20
  402ac8:	mov	x3, xzr
  402acc:	mov	w21, w0
  402ad0:	bl	402d20 <ferror@plt+0x1020>
  402ad4:	mov	w20, w0
  402ad8:	mov	w0, w21
  402adc:	bl	401af0 <close@plt>
  402ae0:	cbz	w0, 402b4c <ferror@plt+0xe4c>
  402ae4:	bl	401cb0 <__errno_location@plt>
  402ae8:	ldr	w20, [x0]
  402aec:	mov	w1, #0x3                   	// #3
  402af0:	mov	w0, wzr
  402af4:	mov	x2, x19
  402af8:	bl	404e9c <ferror@plt+0x319c>
  402afc:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  402b00:	mov	x3, x0
  402b04:	add	x2, x2, #0x2c0
  402b08:	mov	w0, wzr
  402b0c:	mov	w1, w20
  402b10:	bl	401930 <error@plt>
  402b14:	mov	w20, wzr
  402b18:	b	402b4c <ferror@plt+0xe4c>
  402b1c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402b20:	mov	w9, #0x1                   	// #1
  402b24:	mov	w0, wzr
  402b28:	mov	w1, wzr
  402b2c:	strb	w9, [x8, #796]
  402b30:	bl	405fcc <ferror@plt+0x42cc>
  402b34:	mov	x3, #0xffffffffffffffff    	// #-1
  402b38:	mov	w0, wzr
  402b3c:	mov	x1, x19
  402b40:	mov	x2, x20
  402b44:	bl	402d20 <ferror@plt+0x1020>
  402b48:	mov	w20, w0
  402b4c:	and	w0, w20, #0x1
  402b50:	ldp	x20, x19, [sp, #32]
  402b54:	ldr	x21, [sp, #16]
  402b58:	ldp	x29, x30, [sp], #48
  402b5c:	ret
  402b60:	sub	sp, sp, #0x70
  402b64:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402b68:	ldrb	w8, [x8, #740]
  402b6c:	stp	x26, x25, [sp, #48]
  402b70:	stp	x24, x23, [sp, #64]
  402b74:	stp	x22, x21, [sp, #80]
  402b78:	stp	x20, x19, [sp, #96]
  402b7c:	mov	x19, x5
  402b80:	mov	x20, x4
  402b84:	mov	x22, x3
  402b88:	mov	x23, x2
  402b8c:	mov	x24, x1
  402b90:	cmp	w8, #0x1
  402b94:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402b98:	stp	x29, x30, [sp, #32]
  402b9c:	add	x29, sp, #0x20
  402ba0:	b.ne	402bd0 <ferror@plt+0xed0>  // b.any
  402ba4:	ldr	w25, [x26, #792]
  402ba8:	adrp	x21, 406000 <ferror@plt+0x4300>
  402bac:	add	x1, sp, #0x8
  402bb0:	add	x21, x21, #0xb78
  402bb4:	bl	403880 <ferror@plt+0x1b80>
  402bb8:	mov	x3, x0
  402bbc:	add	x1, x21, #0x1
  402bc0:	mov	w0, #0x1                   	// #1
  402bc4:	mov	w2, w25
  402bc8:	bl	401a80 <__printf_chk@plt>
  402bcc:	b	402bd8 <ferror@plt+0xed8>
  402bd0:	adrp	x21, 406000 <ferror@plt+0x4300>
  402bd4:	add	x21, x21, #0xb79
  402bd8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402bdc:	ldrb	w8, [x8, #739]
  402be0:	cmp	w8, #0x1
  402be4:	b.ne	402c14 <ferror@plt+0xf14>  // b.any
  402be8:	ldr	w25, [x26, #792]
  402bec:	add	x1, sp, #0x8
  402bf0:	mov	x0, x24
  402bf4:	bl	403880 <ferror@plt+0x1b80>
  402bf8:	mov	x3, x0
  402bfc:	mov	w0, #0x1                   	// #1
  402c00:	mov	x1, x21
  402c04:	mov	w2, w25
  402c08:	bl	401a80 <__printf_chk@plt>
  402c0c:	adrp	x21, 406000 <ferror@plt+0x4300>
  402c10:	add	x21, x21, #0xb78
  402c14:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402c18:	ldrb	w8, [x8, #738]
  402c1c:	cmp	w8, #0x1
  402c20:	b.ne	402c50 <ferror@plt+0xf50>  // b.any
  402c24:	ldr	w24, [x26, #792]
  402c28:	add	x1, sp, #0x8
  402c2c:	mov	x0, x23
  402c30:	bl	403880 <ferror@plt+0x1b80>
  402c34:	mov	x3, x0
  402c38:	mov	w0, #0x1                   	// #1
  402c3c:	mov	x1, x21
  402c40:	mov	w2, w24
  402c44:	bl	401a80 <__printf_chk@plt>
  402c48:	adrp	x21, 406000 <ferror@plt+0x4300>
  402c4c:	add	x21, x21, #0xb78
  402c50:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402c54:	ldrb	w8, [x8, #737]
  402c58:	cmp	w8, #0x1
  402c5c:	b.ne	402c8c <ferror@plt+0xf8c>  // b.any
  402c60:	ldr	w23, [x26, #792]
  402c64:	add	x1, sp, #0x8
  402c68:	mov	x0, x22
  402c6c:	bl	403880 <ferror@plt+0x1b80>
  402c70:	mov	x3, x0
  402c74:	mov	w0, #0x1                   	// #1
  402c78:	mov	x1, x21
  402c7c:	mov	w2, w23
  402c80:	bl	401a80 <__printf_chk@plt>
  402c84:	adrp	x21, 406000 <ferror@plt+0x4300>
  402c88:	add	x21, x21, #0xb78
  402c8c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402c90:	ldrb	w8, [x8, #741]
  402c94:	cmp	w8, #0x1
  402c98:	b.ne	402cc0 <ferror@plt+0xfc0>  // b.any
  402c9c:	ldr	w22, [x26, #792]
  402ca0:	add	x1, sp, #0x8
  402ca4:	mov	x0, x20
  402ca8:	bl	403880 <ferror@plt+0x1b80>
  402cac:	mov	x3, x0
  402cb0:	mov	w0, #0x1                   	// #1
  402cb4:	mov	x1, x21
  402cb8:	mov	w2, w22
  402cbc:	bl	401a80 <__printf_chk@plt>
  402cc0:	cbz	x19, 402cfc <ferror@plt+0xffc>
  402cc4:	mov	w1, #0xa                   	// #10
  402cc8:	mov	x0, x19
  402ccc:	bl	401bf0 <strchr@plt>
  402cd0:	cbz	x0, 402ce8 <ferror@plt+0xfe8>
  402cd4:	mov	w1, #0x3                   	// #3
  402cd8:	mov	w0, wzr
  402cdc:	mov	x2, x19
  402ce0:	bl	404e9c <ferror@plt+0x319c>
  402ce4:	mov	x19, x0
  402ce8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  402cec:	add	x1, x1, #0x2bf
  402cf0:	mov	w0, #0x1                   	// #1
  402cf4:	mov	x2, x19
  402cf8:	bl	401a80 <__printf_chk@plt>
  402cfc:	mov	w0, #0xa                   	// #10
  402d00:	bl	401aa0 <putchar_unlocked@plt>
  402d04:	ldp	x20, x19, [sp, #96]
  402d08:	ldp	x22, x21, [sp, #80]
  402d0c:	ldp	x24, x23, [sp, #64]
  402d10:	ldp	x26, x25, [sp, #48]
  402d14:	ldp	x29, x30, [sp, #32]
  402d18:	add	sp, sp, #0x70
  402d1c:	ret
  402d20:	stp	x29, x30, [sp, #-96]!
  402d24:	stp	x28, x27, [sp, #16]
  402d28:	stp	x26, x25, [sp, #32]
  402d2c:	stp	x24, x23, [sp, #48]
  402d30:	stp	x22, x21, [sp, #64]
  402d34:	stp	x20, x19, [sp, #80]
  402d38:	mov	x29, sp
  402d3c:	sub	sp, sp, #0x4, lsl #12
  402d40:	sub	sp, sp, #0x60
  402d44:	mov	x23, x3
  402d48:	mov	x24, x2
  402d4c:	mov	w27, w0
  402d50:	stp	x1, x1, [sp, #24]
  402d54:	cbnz	x1, 402d70 <ferror@plt+0x1070>
  402d58:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  402d5c:	add	x1, x1, #0x29c
  402d60:	mov	w2, #0x5                   	// #5
  402d64:	mov	x0, xzr
  402d68:	bl	401c60 <dcgettext@plt>
  402d6c:	str	x0, [sp, #32]
  402d70:	bl	401be0 <__ctype_get_mb_cur_max@plt>
  402d74:	adrp	x11, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402d78:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402d7c:	ldrb	w11, [x11, #738]
  402d80:	cmp	x0, #0x1
  402d84:	ldrb	w8, [x8, #737]
  402d88:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402d8c:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402d90:	cset	w10, hi  // hi = pmore
  402d94:	cmp	x0, #0x2
  402d98:	ldrb	w9, [x9, #739]
  402d9c:	ldrb	w12, [x12, #741]
  402da0:	cset	w13, cc  // cc = lo, ul, last
  402da4:	and	w13, w11, w13
  402da8:	orr	w8, w8, w13
  402dac:	and	w22, w10, w11
  402db0:	eor	w8, w8, #0x1
  402db4:	orr	w19, w9, w12
  402db8:	orr	w20, w22, w8
  402dbc:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402dc0:	tbnz	w20, #0, 402dd0 <ferror@plt+0x10d0>
  402dc4:	ldrb	w8, [x21, #740]
  402dc8:	tbnz	w8, #0, 402dd0 <ferror@plt+0x10d0>
  402dcc:	tbz	w19, #0, 402de4 <ferror@plt+0x10e4>
  402dd0:	mov	w3, #0x2                   	// #2
  402dd4:	mov	w0, w27
  402dd8:	mov	x1, xzr
  402ddc:	mov	x2, xzr
  402de0:	bl	403838 <ferror@plt+0x1b38>
  402de4:	ldrb	w8, [x21, #740]
  402de8:	str	w22, [sp, #20]
  402dec:	orr	w8, w19, w8
  402df0:	orr	w8, w20, w8
  402df4:	tbz	w8, #0, 40309c <ferror@plt+0x139c>
  402df8:	orr	w8, w22, w19
  402dfc:	tbz	w8, #0, 403138 <ferror@plt+0x1438>
  402e00:	bl	401be0 <__ctype_get_mb_cur_max@plt>
  402e04:	cmp	x0, #0x1
  402e08:	str	w27, [sp, #44]
  402e0c:	b.ls	403234 <ferror@plt+0x1534>  // b.plast
  402e10:	mov	x25, xzr
  402e14:	mov	x21, xzr
  402e18:	mov	x23, xzr
  402e1c:	mov	w22, wzr
  402e20:	mov	x20, xzr
  402e24:	mov	w19, wzr
  402e28:	mov	x24, xzr
  402e2c:	mov	w8, #0x1                   	// #1
  402e30:	stp	xzr, xzr, [sp, #48]
  402e34:	str	xzr, [sp, #72]
  402e38:	str	x8, [sp]
  402e3c:	b	402e7c <ferror@plt+0x117c>
  402e40:	bl	401cb0 <__errno_location@plt>
  402e44:	ldr	x2, [sp, #32]
  402e48:	ldr	w26, [x0]
  402e4c:	mov	w1, #0x3                   	// #3
  402e50:	mov	w0, wzr
  402e54:	bl	404e9c <ferror@plt+0x319c>
  402e58:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  402e5c:	mov	x3, x0
  402e60:	mov	w0, wzr
  402e64:	mov	w1, w26
  402e68:	add	x2, x2, #0x2c0
  402e6c:	bl	401930 <error@plt>
  402e70:	str	xzr, [sp]
  402e74:	mov	w8, wzr
  402e78:	tbz	w8, #0, 40307c <ferror@plt+0x137c>
  402e7c:	add	x8, sp, #0x54
  402e80:	add	x1, x8, x24
  402e84:	mov	w8, #0x4000                	// #16384
  402e88:	sub	x2, x8, x24
  402e8c:	mov	w0, w27
  402e90:	bl	405880 <ferror@plt+0x3b80>
  402e94:	cmn	x0, #0x1
  402e98:	b.eq	402e40 <ferror@plt+0x1140>  // b.none
  402e9c:	cbz	x0, 40307c <ferror@plt+0x137c>
  402ea0:	add	x27, sp, #0x54
  402ea4:	add	x24, x0, x24
  402ea8:	str	x0, [sp, #8]
  402eac:	b	402ec4 <ferror@plt+0x11c4>
  402eb0:	mov	w8, wzr
  402eb4:	str	x19, [sp, #72]
  402eb8:	mov	w19, #0x1                   	// #1
  402ebc:	cbz	x24, 40303c <ferror@plt+0x133c>
  402ec0:	tbz	w8, #0, 40303c <ferror@plt+0x133c>
  402ec4:	tbnz	w19, #0, 402ee8 <ferror@plt+0x11e8>
  402ec8:	ldrb	w0, [x27]
  402ecc:	bl	403950 <ferror@plt+0x1c50>
  402ed0:	tbz	w0, #0, 402ee8 <ferror@plt+0x11e8>
  402ed4:	ldrb	w8, [x27]
  402ed8:	mov	w26, wzr
  402edc:	mov	w28, #0x1                   	// #1
  402ee0:	str	w8, [sp, #68]
  402ee4:	b	402f34 <ferror@plt+0x1234>
  402ee8:	ldr	x19, [sp, #72]
  402eec:	add	x0, sp, #0x44
  402ef0:	add	x3, sp, #0x48
  402ef4:	mov	x1, x27
  402ef8:	mov	x2, x24
  402efc:	bl	4061b8 <ferror@plt+0x44b8>
  402f00:	cmn	x0, #0x1
  402f04:	b.eq	402f68 <ferror@plt+0x1268>  // b.none
  402f08:	mov	x28, x0
  402f0c:	cmn	x0, #0x2
  402f10:	b.eq	402eb0 <ferror@plt+0x11b0>  // b.none
  402f14:	add	x0, sp, #0x48
  402f18:	bl	401b50 <mbsinit@plt>
  402f1c:	cmp	w0, #0x0
  402f20:	cset	w19, eq  // eq = none
  402f24:	cbnz	x28, 402f30 <ferror@plt+0x1230>
  402f28:	mov	w28, #0x1                   	// #1
  402f2c:	str	wzr, [sp, #68]
  402f30:	mov	w26, #0x1                   	// #1
  402f34:	ldr	w0, [sp, #68]
  402f38:	sub	w8, w0, #0x9
  402f3c:	cmp	w8, #0x17
  402f40:	b.hi	402f9c <ferror@plt+0x129c>  // b.pmore
  402f44:	adrp	x11, 406000 <ferror@plt+0x4300>
  402f48:	add	x11, x11, #0x9d0
  402f4c:	adr	x9, 402f5c <ferror@plt+0x125c>
  402f50:	ldrb	w10, [x11, x8]
  402f54:	add	x9, x9, x10, lsl #2
  402f58:	br	x9
  402f5c:	and	x8, x20, #0xfffffffffffffff8
  402f60:	add	x20, x8, #0x8
  402f64:	b	402fe8 <ferror@plt+0x12e8>
  402f68:	add	x27, x27, #0x1
  402f6c:	sub	x24, x24, #0x1
  402f70:	mov	w19, #0x1                   	// #1
  402f74:	mov	w8, #0x1                   	// #1
  402f78:	cbnz	x24, 402ec0 <ferror@plt+0x11c0>
  402f7c:	b	40303c <ferror@plt+0x133c>
  402f80:	add	x23, x23, #0x1
  402f84:	ldr	x8, [sp, #56]
  402f88:	cmp	x20, x8
  402f8c:	csel	x8, x20, x8, hi  // hi = pmore
  402f90:	str	x8, [sp, #56]
  402f94:	mov	x20, xzr
  402f98:	b	402fe8 <ferror@plt+0x12e8>
  402f9c:	cbz	w26, 403010 <ferror@plt+0x1310>
  402fa0:	bl	401c90 <iswprint@plt>
  402fa4:	cbz	w0, 40300c <ferror@plt+0x130c>
  402fa8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  402fac:	ldrb	w8, [x8, #741]
  402fb0:	cmp	w8, #0x1
  402fb4:	b.ne	402fc8 <ferror@plt+0x12c8>  // b.any
  402fb8:	ldr	w0, [sp, #68]
  402fbc:	bl	401a10 <wcwidth@plt>
  402fc0:	bic	w8, w0, w0, asr #31
  402fc4:	add	x20, x20, x8
  402fc8:	ldr	w0, [sp, #68]
  402fcc:	bl	4019d0 <iswspace@plt>
  402fd0:	cbnz	w0, 402fe8 <ferror@plt+0x12e8>
  402fd4:	ldr	w0, [sp, #68]
  402fd8:	bl	40357c <ferror@plt+0x187c>
  402fdc:	cbnz	w0, 402fe8 <ferror@plt+0x12e8>
  402fe0:	b	403034 <ferror@plt+0x1334>
  402fe4:	add	x20, x20, #0x1
  402fe8:	and	x8, x22, #0x1
  402fec:	mov	w22, wzr
  402ff0:	add	x21, x21, x8
  402ff4:	add	x27, x27, x28
  402ff8:	sub	x24, x24, x28
  402ffc:	add	x25, x25, #0x1
  403000:	mov	w8, #0x1                   	// #1
  403004:	cbnz	x24, 402ec0 <ferror@plt+0x11c0>
  403008:	b	40303c <ferror@plt+0x133c>
  40300c:	tbnz	w26, #0, 402ff4 <ferror@plt+0x12f4>
  403010:	bl	401bb0 <__ctype_b_loc@plt>
  403014:	ldr	x26, [x0]
  403018:	ldrb	w0, [x27]
  40301c:	bl	4035c8 <ferror@plt+0x18c8>
  403020:	and	x8, x0, #0xff
  403024:	ldrh	w8, [x26, x8, lsl #1]
  403028:	tbz	w8, #14, 402ff4 <ferror@plt+0x12f4>
  40302c:	add	x20, x20, #0x1
  403030:	tbnz	w8, #13, 402fe8 <ferror@plt+0x12e8>
  403034:	mov	w22, #0x1                   	// #1
  403038:	b	402ff4 <ferror@plt+0x12f4>
  40303c:	ldr	x8, [sp, #48]
  403040:	ldr	x9, [sp, #8]
  403044:	add	x8, x9, x8
  403048:	str	x8, [sp, #48]
  40304c:	cbz	x24, 403070 <ferror@plt+0x1370>
  403050:	cmp	x24, #0x4, lsl #12
  403054:	mov	w8, #0x3fff                	// #16383
  403058:	csel	x24, x8, x24, eq  // eq = none
  40305c:	cinc	x1, x27, eq  // eq = none
  403060:	add	x0, sp, #0x54
  403064:	mov	w3, #0x4001                	// #16385
  403068:	mov	x2, x24
  40306c:	bl	401ce0 <__memmove_chk@plt>
  403070:	ldr	w27, [sp, #44]
  403074:	mov	w8, #0x1                   	// #1
  403078:	tbnz	w8, #0, 402e7c <ferror@plt+0x117c>
  40307c:	ldr	x9, [sp, #56]
  403080:	and	x8, x22, #0x1
  403084:	add	x22, x21, x8
  403088:	ldr	x8, [sp]
  40308c:	cmp	x20, x9
  403090:	csel	x24, x20, x9, hi  // hi = pmore
  403094:	and	w21, w8, #0x1
  403098:	b	40345c <ferror@plt+0x175c>
  40309c:	ldr	w8, [x24]
  4030a0:	cmp	w8, #0x1
  4030a4:	b.lt	4030b8 <ferror@plt+0x13b8>  // b.tstop
  4030a8:	add	x1, x24, #0x8
  4030ac:	mov	w0, w27
  4030b0:	bl	406928 <_obstack_memory_used@@Base+0x3e0>
  4030b4:	str	w0, [x24]
  4030b8:	ldr	w8, [x24]
  4030bc:	cbnz	w8, 403110 <ferror@plt+0x1410>
  4030c0:	add	x0, x24, #0x8
  4030c4:	bl	403558 <ferror@plt+0x1858>
  4030c8:	tbz	w0, #0, 403110 <ferror@plt+0x1410>
  4030cc:	ldr	x19, [x24, #56]
  4030d0:	tbnz	x19, #63, 403110 <ferror@plt+0x1410>
  4030d4:	tbz	x23, #63, 4030ec <ferror@plt+0x13ec>
  4030d8:	mov	w2, #0x1                   	// #1
  4030dc:	mov	w0, w27
  4030e0:	mov	x1, xzr
  4030e4:	bl	401990 <lseek@plt>
  4030e8:	mov	x23, x0
  4030ec:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4030f0:	ldr	x8, [x8, #728]
  4030f4:	udiv	x9, x19, x8
  4030f8:	msub	x8, x9, x8, x19
  4030fc:	cbz	x8, 403510 <ferror@plt+0x1810>
  403100:	subs	x8, x19, x23
  403104:	csel	x20, xzr, x8, cc  // cc = lo, ul, last
  403108:	mov	w8, #0x1                   	// #1
  40310c:	b	403118 <ferror@plt+0x1418>
  403110:	mov	x20, xzr
  403114:	mov	w8, wzr
  403118:	tbz	w8, #0, 4031f8 <ferror@plt+0x14f8>
  40311c:	str	x20, [sp, #48]
  403120:	mov	x24, xzr
  403124:	mov	x25, xzr
  403128:	mov	x22, xzr
  40312c:	mov	x23, xzr
  403130:	mov	w21, #0x1                   	// #1
  403134:	b	40345c <ferror@plt+0x175c>
  403138:	mov	x20, #0x8888888888888888    	// #-8608480567731124088
  40313c:	mov	x25, xzr
  403140:	mov	x23, xzr
  403144:	mov	w22, wzr
  403148:	add	x19, sp, #0x54
  40314c:	movk	x20, #0x8889
  403150:	b	403168 <ferror@plt+0x1468>
  403154:	sub	x8, x21, x23
  403158:	umulh	x9, x24, x20
  40315c:	cmp	x8, x9, lsr #3
  403160:	cset	w22, ls  // ls = plast
  403164:	mov	x23, x21
  403168:	add	x1, sp, #0x54
  40316c:	mov	w2, #0x4000                	// #16384
  403170:	mov	w0, w27
  403174:	bl	405880 <ferror@plt+0x3b80>
  403178:	mov	x24, x0
  40317c:	cbz	x0, 4033a4 <ferror@plt+0x16a4>
  403180:	cmn	x24, #0x1
  403184:	b.eq	4033b8 <ferror@plt+0x16b8>  // b.none
  403188:	add	x25, x24, x25
  40318c:	tbz	w22, #0, 4031cc <ferror@plt+0x14cc>
  403190:	add	x0, sp, #0x54
  403194:	mov	w1, #0xa                   	// #10
  403198:	mov	x2, x24
  40319c:	bl	401c30 <memchr@plt>
  4031a0:	mov	x21, x23
  4031a4:	cbz	x0, 403154 <ferror@plt+0x1454>
  4031a8:	add	x22, x19, x24
  4031ac:	mov	x21, x23
  4031b0:	add	x0, x0, #0x1
  4031b4:	sub	x2, x22, x0
  4031b8:	mov	w1, #0xa                   	// #10
  4031bc:	add	x21, x21, #0x1
  4031c0:	bl	401c30 <memchr@plt>
  4031c4:	cbnz	x0, 4031b0 <ferror@plt+0x14b0>
  4031c8:	b	403154 <ferror@plt+0x1454>
  4031cc:	mov	x21, x23
  4031d0:	cbz	x24, 403154 <ferror@plt+0x1454>
  4031d4:	add	x8, sp, #0x54
  4031d8:	mov	x9, x24
  4031dc:	mov	x21, x23
  4031e0:	ldrb	w10, [x8], #1
  4031e4:	cmp	w10, #0xa
  4031e8:	cinc	x21, x21, eq  // eq = none
  4031ec:	subs	x9, x9, #0x1
  4031f0:	b.ne	4031e0 <ferror@plt+0x14e0>  // b.any
  4031f4:	b	403154 <ferror@plt+0x1454>
  4031f8:	mov	w3, #0x2                   	// #2
  4031fc:	mov	w0, w27
  403200:	mov	x1, xzr
  403204:	mov	x2, xzr
  403208:	bl	403838 <ferror@plt+0x1b38>
  40320c:	add	x1, sp, #0x54
  403210:	mov	w2, #0x4000                	// #16384
  403214:	mov	w0, w27
  403218:	bl	405880 <ferror@plt+0x3b80>
  40321c:	mov	x24, x0
  403220:	cbz	x0, 4033fc <ferror@plt+0x16fc>
  403224:	cmn	x24, #0x1
  403228:	b.eq	403414 <ferror@plt+0x1714>  // b.none
  40322c:	add	x20, x24, x20
  403230:	b	40320c <ferror@plt+0x150c>
  403234:	adrp	x28, 406000 <ferror@plt+0x4300>
  403238:	mov	x19, xzr
  40323c:	mov	x24, xzr
  403240:	mov	x20, xzr
  403244:	mov	x23, xzr
  403248:	mov	w21, wzr
  40324c:	mov	x22, xzr
  403250:	mov	w8, #0x1                   	// #1
  403254:	add	x28, x28, #0x9b8
  403258:	str	w8, [sp, #8]
  40325c:	b	403270 <ferror@plt+0x1570>
  403260:	ldp	x24, x8, [sp, #48]
  403264:	add	x24, x8, x24
  403268:	mov	w8, #0x1                   	// #1
  40326c:	tbz	w8, #0, 403380 <ferror@plt+0x1680>
  403270:	add	x1, sp, #0x54
  403274:	mov	w2, #0x4000                	// #16384
  403278:	mov	w0, w27
  40327c:	bl	405880 <ferror@plt+0x3b80>
  403280:	cmn	x0, #0x1
  403284:	b.eq	403344 <ferror@plt+0x1644>  // b.none
  403288:	cbz	x0, 403380 <ferror@plt+0x1680>
  40328c:	stp	x24, x0, [sp, #48]
  403290:	add	x24, sp, #0x54
  403294:	mov	x25, x0
  403298:	b	4032c0 <ferror@plt+0x15c0>
  40329c:	add	x23, x23, #0x1
  4032a0:	cmp	x22, x19
  4032a4:	csel	x19, x22, x19, hi  // hi = pmore
  4032a8:	mov	x22, xzr
  4032ac:	and	x8, x21, #0x1
  4032b0:	mov	w21, wzr
  4032b4:	add	x20, x20, x8
  4032b8:	subs	x25, x25, #0x1
  4032bc:	b.eq	403260 <ferror@plt+0x1560>  // b.none
  4032c0:	ldrb	w26, [x24], #1
  4032c4:	sub	w8, w26, #0x9
  4032c8:	cmp	w8, #0x17
  4032cc:	b.hi	4032ec <ferror@plt+0x15ec>  // b.pmore
  4032d0:	adr	x9, 40329c <ferror@plt+0x159c>
  4032d4:	ldrb	w10, [x28, x8]
  4032d8:	add	x9, x9, x10, lsl #2
  4032dc:	br	x9
  4032e0:	and	x8, x22, #0xfffffffffffffff8
  4032e4:	add	x22, x8, #0x8
  4032e8:	b	4032ac <ferror@plt+0x15ac>
  4032ec:	bl	401bb0 <__ctype_b_loc@plt>
  4032f0:	ldr	x27, [x0]
  4032f4:	mov	w0, w26
  4032f8:	bl	4035c8 <ferror@plt+0x18c8>
  4032fc:	and	x8, x0, #0xff
  403300:	ldrh	w8, [x27, x8, lsl #1]
  403304:	tbnz	w8, #14, 403320 <ferror@plt+0x1620>
  403308:	ldr	w27, [sp, #44]
  40330c:	subs	x25, x25, #0x1
  403310:	b.ne	4032c0 <ferror@plt+0x15c0>  // b.any
  403314:	b	403260 <ferror@plt+0x1560>
  403318:	add	x22, x22, #0x1
  40331c:	b	4032ac <ferror@plt+0x15ac>
  403320:	add	x22, x22, #0x1
  403324:	tbnz	w8, #13, 403334 <ferror@plt+0x1634>
  403328:	and	w0, w0, #0xff
  40332c:	bl	4035cc <ferror@plt+0x18cc>
  403330:	cbz	w0, 40333c <ferror@plt+0x163c>
  403334:	ldr	w27, [sp, #44]
  403338:	b	4032ac <ferror@plt+0x15ac>
  40333c:	mov	w21, #0x1                   	// #1
  403340:	b	403308 <ferror@plt+0x1608>
  403344:	bl	401cb0 <__errno_location@plt>
  403348:	ldr	x2, [sp, #32]
  40334c:	ldr	w25, [x0]
  403350:	mov	w1, #0x3                   	// #3
  403354:	mov	w0, wzr
  403358:	bl	404e9c <ferror@plt+0x319c>
  40335c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  403360:	mov	x3, x0
  403364:	mov	w0, wzr
  403368:	mov	w1, w25
  40336c:	add	x2, x2, #0x2c0
  403370:	bl	401930 <error@plt>
  403374:	str	wzr, [sp, #8]
  403378:	mov	w8, wzr
  40337c:	tbnz	w8, #0, 403270 <ferror@plt+0x1570>
  403380:	cmp	x22, x19
  403384:	and	x8, x21, #0x1
  403388:	str	x24, [sp, #48]
  40338c:	csel	x24, x22, x19, hi  // hi = pmore
  403390:	add	x22, x20, x8
  403394:	ldr	w8, [sp, #8]
  403398:	mov	x25, xzr
  40339c:	and	w21, w8, #0x1
  4033a0:	b	40345c <ferror@plt+0x175c>
  4033a4:	str	x25, [sp, #48]
  4033a8:	mov	w21, #0x1                   	// #1
  4033ac:	mov	x25, x24
  4033b0:	mov	x22, x24
  4033b4:	b	40345c <ferror@plt+0x175c>
  4033b8:	str	x25, [sp, #48]
  4033bc:	bl	401cb0 <__errno_location@plt>
  4033c0:	ldr	x2, [sp, #32]
  4033c4:	ldr	w22, [x0]
  4033c8:	mov	w1, #0x3                   	// #3
  4033cc:	mov	w0, wzr
  4033d0:	bl	404e9c <ferror@plt+0x319c>
  4033d4:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  4033d8:	mov	x3, x0
  4033dc:	add	x2, x2, #0x2c0
  4033e0:	mov	w0, wzr
  4033e4:	mov	w1, w22
  4033e8:	bl	401930 <error@plt>
  4033ec:	mov	x24, xzr
  4033f0:	mov	x25, xzr
  4033f4:	mov	x22, xzr
  4033f8:	b	403458 <ferror@plt+0x1758>
  4033fc:	mov	w21, #0x1                   	// #1
  403400:	mov	x25, x24
  403404:	mov	x22, x24
  403408:	mov	x23, x24
  40340c:	str	x20, [sp, #48]
  403410:	b	40345c <ferror@plt+0x175c>
  403414:	str	x20, [sp, #48]
  403418:	bl	401cb0 <__errno_location@plt>
  40341c:	ldr	x2, [sp, #32]
  403420:	ldr	w22, [x0]
  403424:	mov	w1, #0x3                   	// #3
  403428:	mov	w0, wzr
  40342c:	bl	404e9c <ferror@plt+0x319c>
  403430:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  403434:	mov	x3, x0
  403438:	add	x2, x2, #0x2c0
  40343c:	mov	w0, wzr
  403440:	mov	w1, w22
  403444:	bl	401930 <error@plt>
  403448:	mov	x24, xzr
  40344c:	mov	x25, xzr
  403450:	mov	x22, xzr
  403454:	mov	x23, xzr
  403458:	mov	w21, wzr
  40345c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403460:	ldr	w9, [sp, #20]
  403464:	ldrb	w8, [x8, #738]
  403468:	ldr	x19, [sp, #48]
  40346c:	ldr	x5, [sp, #24]
  403470:	eor	w9, w9, #0x1
  403474:	tst	w8, w9
  403478:	csel	x25, x19, x25, ne  // ne = any
  40347c:	mov	x0, x23
  403480:	mov	x1, x22
  403484:	mov	x2, x25
  403488:	mov	x3, x19
  40348c:	mov	x4, x24
  403490:	bl	402b60 <ferror@plt+0xe60>
  403494:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403498:	ldr	x11, [x9, #776]
  40349c:	adrp	x10, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4034a0:	adrp	x12, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4034a4:	adrp	x13, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4034a8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4034ac:	add	x11, x11, x23
  4034b0:	ldr	x14, [x10, #768]
  4034b4:	str	x11, [x9, #776]
  4034b8:	ldr	x9, [x12, #760]
  4034bc:	ldr	x11, [x13, #752]
  4034c0:	ldr	x15, [x8, #744]
  4034c4:	add	x14, x14, x22
  4034c8:	str	x14, [x10, #768]
  4034cc:	add	x9, x9, x25
  4034d0:	add	x10, x11, x19
  4034d4:	cmp	x24, x15
  4034d8:	str	x9, [x12, #760]
  4034dc:	str	x10, [x13, #752]
  4034e0:	b.ls	4034e8 <ferror@plt+0x17e8>  // b.plast
  4034e4:	str	x24, [x8, #744]
  4034e8:	mov	w0, w21
  4034ec:	add	sp, sp, #0x4, lsl #12
  4034f0:	add	sp, sp, #0x60
  4034f4:	ldp	x20, x19, [sp, #80]
  4034f8:	ldp	x22, x21, [sp, #64]
  4034fc:	ldp	x24, x23, [sp, #48]
  403500:	ldp	x26, x25, [sp, #32]
  403504:	ldp	x28, x27, [sp, #16]
  403508:	ldp	x29, x30, [sp], #96
  40350c:	ret
  403510:	ldr	w9, [x24, #64]
  403514:	mov	w10, #0x201                 	// #513
  403518:	mov	x20, xzr
  40351c:	cmp	w9, #0x0
  403520:	csinc	w9, w10, w9, le
  403524:	tbnz	x23, #63, 403118 <ferror@plt+0x1418>
  403528:	sxtw	x9, w9
  40352c:	udiv	x10, x19, x9
  403530:	mul	x1, x10, x9
  403534:	subs	x19, x1, x23
  403538:	b.le	403118 <ferror@plt+0x1418>
  40353c:	mov	w2, #0x1                   	// #1
  403540:	mov	w0, w27
  403544:	bl	401990 <lseek@plt>
  403548:	cmp	x0, #0x0
  40354c:	mov	w8, wzr
  403550:	csel	x20, xzr, x19, lt  // lt = tstop
  403554:	b	403118 <ferror@plt+0x1418>
  403558:	ldr	w8, [x0, #16]
  40355c:	and	w8, w8, #0xf000
  403560:	orr	w8, w8, #0x2000
  403564:	cmp	w8, #0xa, lsl #12
  403568:	b.ne	403574 <ferror@plt+0x1874>  // b.any
  40356c:	mov	w0, #0x1                   	// #1
  403570:	ret
  403574:	mov	w0, wzr
  403578:	ret
  40357c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403580:	ldrb	w9, [x8, #736]
  403584:	cbz	w9, 403590 <ferror@plt+0x1890>
  403588:	mov	w0, wzr
  40358c:	ret
  403590:	mov	w8, w0
  403594:	cmp	w0, #0xa0
  403598:	mov	w0, #0x1                   	// #1
  40359c:	b.eq	4035c4 <ferror@plt+0x18c4>  // b.none
  4035a0:	mov	w9, #0x2007                	// #8199
  4035a4:	cmp	w8, w9
  4035a8:	b.eq	4035c4 <ferror@plt+0x18c4>  // b.none
  4035ac:	mov	w9, #0x202f                	// #8239
  4035b0:	cmp	w8, w9
  4035b4:	b.eq	4035c4 <ferror@plt+0x18c4>  // b.none
  4035b8:	mov	w9, #0x2060                	// #8288
  4035bc:	cmp	w8, w9
  4035c0:	cset	w0, eq  // eq = none
  4035c4:	ret
  4035c8:	ret
  4035cc:	stp	x29, x30, [sp, #-16]!
  4035d0:	mov	x29, sp
  4035d4:	bl	401b20 <btowc@plt>
  4035d8:	bl	40357c <ferror@plt+0x187c>
  4035dc:	ldp	x29, x30, [sp], #16
  4035e0:	ret
  4035e4:	stp	x29, x30, [sp, #-32]!
  4035e8:	str	x19, [sp, #16]
  4035ec:	mov	x19, x0
  4035f0:	mov	w0, #0x30                  	// #48
  4035f4:	mov	x29, sp
  4035f8:	bl	401a00 <malloc@plt>
  4035fc:	cbz	x0, 403608 <ferror@plt+0x1908>
  403600:	str	xzr, [x0]
  403604:	stp	x19, x19, [x0, #32]
  403608:	ldr	x19, [sp, #16]
  40360c:	ldp	x29, x30, [sp], #32
  403610:	ret
  403614:	stp	x29, x30, [sp, #-32]!
  403618:	str	x19, [sp, #16]
  40361c:	mov	x19, x0
  403620:	mov	w0, #0x30                  	// #48
  403624:	mov	x29, sp
  403628:	bl	401a00 <malloc@plt>
  40362c:	cbz	x0, 403640 <ferror@plt+0x1940>
  403630:	movi	v0.2d, #0x0
  403634:	str	x19, [x0]
  403638:	stur	q0, [x0, #8]
  40363c:	stur	q0, [x0, #24]
  403640:	ldr	x19, [sp, #16]
  403644:	ldp	x29, x30, [sp], #32
  403648:	ret
  40364c:	stp	x29, x30, [sp, #-32]!
  403650:	stp	x20, x19, [sp, #16]
  403654:	ldr	x3, [x0]
  403658:	mov	x20, x0
  40365c:	mov	x19, x1
  403660:	mov	x29, sp
  403664:	cbz	x3, 403694 <ferror@plt+0x1994>
  403668:	add	x0, x20, #0x10
  40366c:	add	x1, x20, #0x18
  403670:	mov	w2, wzr
  403674:	bl	401a20 <getdelim@plt>
  403678:	tbnz	x0, #63, 4036bc <ferror@plt+0x19bc>
  40367c:	mov	w8, #0x1                   	// #1
  403680:	str	w8, [x19]
  403684:	ldp	x8, x0, [x20, #8]
  403688:	add	x8, x8, #0x1
  40368c:	str	x8, [x20, #8]
  403690:	b	4036e8 <ferror@plt+0x19e8>
  403694:	ldr	x8, [x20, #40]
  403698:	ldr	x8, [x8]
  40369c:	cbz	x8, 4036dc <ferror@plt+0x19dc>
  4036a0:	mov	w8, #0x1                   	// #1
  4036a4:	str	w8, [x19]
  4036a8:	ldr	x8, [x20, #40]
  4036ac:	add	x9, x8, #0x8
  4036b0:	str	x9, [x20, #40]
  4036b4:	ldr	x0, [x8]
  4036b8:	b	4036e8 <ferror@plt+0x19e8>
  4036bc:	ldr	x0, [x20]
  4036c0:	bl	401b60 <feof@plt>
  4036c4:	mov	w8, w0
  4036c8:	cmp	w8, #0x0
  4036cc:	mov	w8, #0x2                   	// #2
  4036d0:	mov	w9, #0x4                   	// #4
  4036d4:	csel	w8, w9, w8, eq  // eq = none
  4036d8:	b	4036e0 <ferror@plt+0x19e0>
  4036dc:	mov	w8, #0x2                   	// #2
  4036e0:	mov	x0, xzr
  4036e4:	str	w8, [x19]
  4036e8:	ldp	x20, x19, [sp, #16]
  4036ec:	ldp	x29, x30, [sp], #32
  4036f0:	ret
  4036f4:	ldr	x8, [x0]
  4036f8:	cbz	x8, 403704 <ferror@plt+0x1a04>
  4036fc:	ldr	x0, [x0, #8]
  403700:	ret
  403704:	ldp	x9, x8, [x0, #32]
  403708:	sub	x8, x8, x9
  40370c:	asr	x0, x8, #3
  403710:	ret
  403714:	stp	x29, x30, [sp, #-32]!
  403718:	ldr	x8, [x0]
  40371c:	str	x19, [sp, #16]
  403720:	mov	x19, x0
  403724:	mov	x29, sp
  403728:	cbz	x8, 403734 <ferror@plt+0x1a34>
  40372c:	ldr	x0, [x19, #16]
  403730:	bl	401bd0 <free@plt>
  403734:	mov	x0, x19
  403738:	bl	401bd0 <free@plt>
  40373c:	ldr	x19, [sp, #16]
  403740:	ldp	x29, x30, [sp], #32
  403744:	ret
  403748:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  40374c:	str	x0, [x8, #800]
  403750:	ret
  403754:	and	w8, w0, #0x1
  403758:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11ab8>
  40375c:	strb	w8, [x9, #808]
  403760:	ret
  403764:	stp	x29, x30, [sp, #-48]!
  403768:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  40376c:	ldr	x0, [x8, #696]
  403770:	str	x21, [sp, #16]
  403774:	stp	x20, x19, [sp, #32]
  403778:	mov	x29, sp
  40377c:	bl	406778 <_obstack_memory_used@@Base+0x230>
  403780:	cbz	w0, 4037a0 <ferror@plt+0x1aa0>
  403784:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403788:	ldrb	w8, [x8, #808]
  40378c:	cbz	w8, 4037c0 <ferror@plt+0x1ac0>
  403790:	bl	401cb0 <__errno_location@plt>
  403794:	ldr	w8, [x0]
  403798:	cmp	w8, #0x20
  40379c:	b.ne	4037c0 <ferror@plt+0x1ac0>  // b.any
  4037a0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4037a4:	ldr	x0, [x8, #672]
  4037a8:	bl	406778 <_obstack_memory_used@@Base+0x230>
  4037ac:	cbnz	w0, 40382c <ferror@plt+0x1b2c>
  4037b0:	ldp	x20, x19, [sp, #32]
  4037b4:	ldr	x21, [sp, #16]
  4037b8:	ldp	x29, x30, [sp], #48
  4037bc:	ret
  4037c0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  4037c4:	add	x1, x1, #0x2b0
  4037c8:	mov	w2, #0x5                   	// #5
  4037cc:	mov	x0, xzr
  4037d0:	bl	401c60 <dcgettext@plt>
  4037d4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4037d8:	ldr	x21, [x8, #800]
  4037dc:	mov	x19, x0
  4037e0:	bl	401cb0 <__errno_location@plt>
  4037e4:	ldr	w20, [x0]
  4037e8:	cbnz	x21, 403808 <ferror@plt+0x1b08>
  4037ec:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  4037f0:	add	x2, x2, #0x2c0
  4037f4:	mov	w0, wzr
  4037f8:	mov	w1, w20
  4037fc:	mov	x3, x19
  403800:	bl	401930 <error@plt>
  403804:	b	40382c <ferror@plt+0x1b2c>
  403808:	mov	x0, x21
  40380c:	bl	404e6c <ferror@plt+0x316c>
  403810:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  403814:	mov	x3, x0
  403818:	add	x2, x2, #0x2bc
  40381c:	mov	w0, wzr
  403820:	mov	w1, w20
  403824:	mov	x4, x19
  403828:	bl	401930 <error@plt>
  40382c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403830:	ldr	w0, [x8, #560]
  403834:	bl	401900 <_exit@plt>
  403838:	stp	x29, x30, [sp, #-16]!
  40383c:	mov	x29, sp
  403840:	bl	401b40 <posix_fadvise@plt>
  403844:	ldp	x29, x30, [sp], #16
  403848:	ret
  40384c:	cbz	x0, 40387c <ferror@plt+0x1b7c>
  403850:	stp	x29, x30, [sp, #-32]!
  403854:	str	x19, [sp, #16]
  403858:	mov	x29, sp
  40385c:	mov	w19, w1
  403860:	bl	4019b0 <fileno@plt>
  403864:	mov	x1, xzr
  403868:	mov	x2, xzr
  40386c:	mov	w3, w19
  403870:	bl	403838 <ferror@plt+0x1b38>
  403874:	ldr	x19, [sp, #16]
  403878:	ldp	x29, x30, [sp], #32
  40387c:	ret
  403880:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  403884:	movk	x8, #0xcccd
  403888:	strb	wzr, [x1, #20]!
  40388c:	mov	w9, #0xa                   	// #10
  403890:	umulh	x10, x0, x8
  403894:	lsr	x10, x10, #3
  403898:	msub	w11, w10, w9, w0
  40389c:	orr	w11, w11, #0x30
  4038a0:	cmp	x0, #0x9
  4038a4:	strb	w11, [x1, #-1]!
  4038a8:	mov	x0, x10
  4038ac:	b.hi	403890 <ferror@plt+0x1b90>  // b.pmore
  4038b0:	mov	x0, x1
  4038b4:	ret
  4038b8:	stp	x29, x30, [sp, #-32]!
  4038bc:	str	x19, [sp, #16]
  4038c0:	mov	x29, sp
  4038c4:	mov	w19, w0
  4038c8:	bl	401a10 <wcwidth@plt>
  4038cc:	tbz	w0, #31, 4038e0 <ferror@plt+0x1be0>
  4038d0:	mov	w0, w19
  4038d4:	bl	401970 <iswcntrl@plt>
  4038d8:	cmp	w0, #0x0
  4038dc:	cset	w0, eq  // eq = none
  4038e0:	ldr	x19, [sp, #16]
  4038e4:	ldp	x29, x30, [sp], #32
  4038e8:	ret
  4038ec:	stp	x29, x30, [sp, #-48]!
  4038f0:	str	x21, [sp, #16]
  4038f4:	stp	x20, x19, [sp, #32]
  4038f8:	mov	x19, x1
  4038fc:	ldr	x21, [x1], #24
  403900:	mov	x20, x0
  403904:	mov	x29, sp
  403908:	cmp	x21, x1
  40390c:	b.ne	403920 <ferror@plt+0x1c20>  // b.any
  403910:	ldr	x2, [x19, #8]
  403914:	add	x21, x20, #0x18
  403918:	mov	x0, x21
  40391c:	bl	4018f0 <memcpy@plt>
  403920:	str	x21, [x20]
  403924:	ldr	x8, [x19, #8]
  403928:	str	x8, [x20, #8]
  40392c:	ldrb	w8, [x19, #16]
  403930:	strb	w8, [x20, #16]
  403934:	cbz	w8, 403940 <ferror@plt+0x1c40>
  403938:	ldr	w8, [x19, #20]
  40393c:	str	w8, [x20, #20]
  403940:	ldp	x20, x19, [sp, #32]
  403944:	ldr	x21, [sp, #16]
  403948:	ldp	x29, x30, [sp], #48
  40394c:	ret
  403950:	lsr	w8, w0, #3
  403954:	adrp	x9, 407000 <_obstack_memory_used@@Base+0xab8>
  403958:	and	x8, x8, #0x1c
  40395c:	add	x9, x9, #0x2c4
  403960:	ldr	w8, [x9, x8]
  403964:	lsr	w8, w8, w0
  403968:	and	w0, w8, #0x1
  40396c:	ret
  403970:	sub	sp, sp, #0x90
  403974:	mov	w0, #0x55                  	// #85
  403978:	stp	x29, x30, [sp, #112]
  40397c:	str	x19, [sp, #128]
  403980:	add	x29, sp, #0x70
  403984:	bl	401c40 <sysconf@plt>
  403988:	mov	x19, x0
  40398c:	mov	w0, #0x1e                  	// #30
  403990:	bl	401c40 <sysconf@plt>
  403994:	orr	x8, x0, x19
  403998:	tbnz	x8, #63, 4039ac <ferror@plt+0x1cac>
  40399c:	scvtf	d0, x19
  4039a0:	scvtf	d1, x0
  4039a4:	fmul	d0, d0, d1
  4039a8:	b	4039c0 <ferror@plt+0x1cc0>
  4039ac:	mov	x0, sp
  4039b0:	bl	401940 <sysinfo@plt>
  4039b4:	cbz	w0, 4039d0 <ferror@plt+0x1cd0>
  4039b8:	mov	x8, #0x4190000000000000    	// #4724276009111650304
  4039bc:	fmov	d0, x8
  4039c0:	ldr	x19, [sp, #128]
  4039c4:	ldp	x29, x30, [sp, #112]
  4039c8:	add	sp, sp, #0x90
  4039cc:	ret
  4039d0:	ldr	d0, [sp, #32]
  4039d4:	ldr	s1, [sp, #104]
  4039d8:	ucvtf	d0, d0
  4039dc:	ucvtf	d1, d1
  4039e0:	b	4039a4 <ferror@plt+0x1ca4>
  4039e4:	sub	sp, sp, #0x90
  4039e8:	mov	w0, #0x56                  	// #86
  4039ec:	str	d8, [sp, #112]
  4039f0:	stp	x29, x30, [sp, #120]
  4039f4:	str	x19, [sp, #136]
  4039f8:	add	x29, sp, #0x70
  4039fc:	bl	401c40 <sysconf@plt>
  403a00:	mov	x19, x0
  403a04:	mov	w0, #0x1e                  	// #30
  403a08:	bl	401c40 <sysconf@plt>
  403a0c:	scvtf	d0, x0
  403a10:	scvtf	d1, x19
  403a14:	orr	x8, x0, x19
  403a18:	fmul	d8, d1, d0
  403a1c:	tbz	x8, #63, 403a40 <ferror@plt+0x1d40>
  403a20:	mov	x0, sp
  403a24:	bl	401940 <sysinfo@plt>
  403a28:	cbz	w0, 403a58 <ferror@plt+0x1d58>
  403a2c:	mov	w8, #0x1                   	// #1
  403a30:	cbz	w8, 403a40 <ferror@plt+0x1d40>
  403a34:	bl	403970 <ferror@plt+0x1c70>
  403a38:	fmov	d1, #2.500000000000000000e-01
  403a3c:	fmul	d8, d0, d1
  403a40:	mov	v0.16b, v8.16b
  403a44:	ldr	x19, [sp, #136]
  403a48:	ldp	x29, x30, [sp, #120]
  403a4c:	ldr	d8, [sp, #112]
  403a50:	add	sp, sp, #0x90
  403a54:	ret
  403a58:	ldr	d0, [sp, #40]
  403a5c:	ldr	d1, [sp, #56]
  403a60:	ldr	s2, [sp, #104]
  403a64:	mov	w8, wzr
  403a68:	ucvtf	d0, d0
  403a6c:	ucvtf	d1, d1
  403a70:	fadd	d0, d0, d1
  403a74:	ucvtf	d1, d2
  403a78:	fmul	d8, d0, d1
  403a7c:	cbnz	w8, 403a34 <ferror@plt+0x1d34>
  403a80:	b	403a40 <ferror@plt+0x1d40>
  403a84:	stp	x29, x30, [sp, #-32]!
  403a88:	stp	x20, x19, [sp, #16]
  403a8c:	mov	x29, sp
  403a90:	cbz	x0, 403b10 <ferror@plt+0x1e10>
  403a94:	mov	w1, #0x2f                  	// #47
  403a98:	mov	x19, x0
  403a9c:	bl	401b00 <strrchr@plt>
  403aa0:	cmp	x0, #0x0
  403aa4:	csinc	x20, x19, x0, eq  // eq = none
  403aa8:	sub	x8, x20, x19
  403aac:	cmp	x8, #0x7
  403ab0:	b.lt	403af4 <ferror@plt+0x1df4>  // b.tstop
  403ab4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  403ab8:	sub	x0, x20, #0x7
  403abc:	add	x1, x1, #0x31c
  403ac0:	mov	w2, #0x7                   	// #7
  403ac4:	bl	401a40 <strncmp@plt>
  403ac8:	cbnz	w0, 403af4 <ferror@plt+0x1df4>
  403acc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  403ad0:	add	x1, x1, #0x324
  403ad4:	mov	w2, #0x3                   	// #3
  403ad8:	mov	x0, x20
  403adc:	bl	401a40 <strncmp@plt>
  403ae0:	mov	x19, x20
  403ae4:	cbnz	w0, 403af4 <ferror@plt+0x1df4>
  403ae8:	add	x19, x20, #0x3
  403aec:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403af0:	str	x19, [x8, #712]
  403af4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403af8:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403afc:	str	x19, [x8, #816]
  403b00:	str	x19, [x9, #664]
  403b04:	ldp	x20, x19, [sp, #16]
  403b08:	ldp	x29, x30, [sp], #32
  403b0c:	ret
  403b10:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403b14:	ldr	x3, [x8, #672]
  403b18:	adrp	x0, 407000 <_obstack_memory_used@@Base+0xab8>
  403b1c:	add	x0, x0, #0x2e4
  403b20:	mov	w1, #0x37                  	// #55
  403b24:	mov	w2, #0x1                   	// #1
  403b28:	bl	401c00 <fwrite@plt>
  403b2c:	bl	401b30 <abort@plt>
  403b30:	stp	x29, x30, [sp, #-48]!
  403b34:	str	x21, [sp, #16]
  403b38:	stp	x20, x19, [sp, #32]
  403b3c:	mov	x29, sp
  403b40:	mov	x19, x0
  403b44:	bl	401cb0 <__errno_location@plt>
  403b48:	ldr	w21, [x0]
  403b4c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403b50:	add	x8, x8, #0x338
  403b54:	cmp	x19, #0x0
  403b58:	mov	x20, x0
  403b5c:	csel	x0, x8, x19, eq  // eq = none
  403b60:	mov	w1, #0x38                  	// #56
  403b64:	bl	405f14 <ferror@plt+0x4214>
  403b68:	str	w21, [x20]
  403b6c:	ldp	x20, x19, [sp, #32]
  403b70:	ldr	x21, [sp, #16]
  403b74:	ldp	x29, x30, [sp], #48
  403b78:	ret
  403b7c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403b80:	add	x8, x8, #0x338
  403b84:	cmp	x0, #0x0
  403b88:	csel	x8, x8, x0, eq  // eq = none
  403b8c:	ldr	w0, [x8]
  403b90:	ret
  403b94:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403b98:	add	x8, x8, #0x338
  403b9c:	cmp	x0, #0x0
  403ba0:	csel	x8, x8, x0, eq  // eq = none
  403ba4:	str	w1, [x8]
  403ba8:	ret
  403bac:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403bb0:	add	x8, x8, #0x338
  403bb4:	cmp	x0, #0x0
  403bb8:	ubfx	w9, w1, #5, #3
  403bbc:	csel	x8, x8, x0, eq  // eq = none
  403bc0:	add	x8, x8, w9, uxtw #2
  403bc4:	ldr	w9, [x8, #8]
  403bc8:	lsr	w10, w9, w1
  403bcc:	and	w0, w10, #0x1
  403bd0:	and	w10, w2, #0x1
  403bd4:	eor	w10, w0, w10
  403bd8:	lsl	w10, w10, w1
  403bdc:	eor	w9, w10, w9
  403be0:	str	w9, [x8, #8]
  403be4:	ret
  403be8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403bec:	add	x8, x8, #0x338
  403bf0:	cmp	x0, #0x0
  403bf4:	csel	x8, x8, x0, eq  // eq = none
  403bf8:	ldr	w0, [x8, #4]
  403bfc:	str	w1, [x8, #4]
  403c00:	ret
  403c04:	stp	x29, x30, [sp, #-16]!
  403c08:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403c0c:	add	x8, x8, #0x338
  403c10:	cmp	x0, #0x0
  403c14:	csel	x8, x8, x0, eq  // eq = none
  403c18:	mov	w9, #0xa                   	// #10
  403c1c:	mov	x29, sp
  403c20:	str	w9, [x8]
  403c24:	cbz	x1, 403c38 <ferror@plt+0x1f38>
  403c28:	cbz	x2, 403c38 <ferror@plt+0x1f38>
  403c2c:	stp	x1, x2, [x8, #40]
  403c30:	ldp	x29, x30, [sp], #16
  403c34:	ret
  403c38:	bl	401b30 <abort@plt>
  403c3c:	sub	sp, sp, #0x60
  403c40:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  403c44:	add	x8, x8, #0x338
  403c48:	cmp	x4, #0x0
  403c4c:	stp	x29, x30, [sp, #16]
  403c50:	str	x25, [sp, #32]
  403c54:	stp	x24, x23, [sp, #48]
  403c58:	stp	x22, x21, [sp, #64]
  403c5c:	stp	x20, x19, [sp, #80]
  403c60:	add	x29, sp, #0x10
  403c64:	mov	x19, x3
  403c68:	mov	x20, x2
  403c6c:	mov	x21, x1
  403c70:	mov	x22, x0
  403c74:	csel	x24, x8, x4, eq  // eq = none
  403c78:	bl	401cb0 <__errno_location@plt>
  403c7c:	ldp	w4, w5, [x24]
  403c80:	ldp	x7, x8, [x24, #40]
  403c84:	ldr	w25, [x0]
  403c88:	mov	x23, x0
  403c8c:	add	x6, x24, #0x8
  403c90:	mov	x0, x22
  403c94:	mov	x1, x21
  403c98:	mov	x2, x20
  403c9c:	mov	x3, x19
  403ca0:	str	x8, [sp]
  403ca4:	bl	403cc8 <ferror@plt+0x1fc8>
  403ca8:	str	w25, [x23]
  403cac:	ldp	x20, x19, [sp, #80]
  403cb0:	ldp	x22, x21, [sp, #64]
  403cb4:	ldp	x24, x23, [sp, #48]
  403cb8:	ldr	x25, [sp, #32]
  403cbc:	ldp	x29, x30, [sp, #16]
  403cc0:	add	sp, sp, #0x60
  403cc4:	ret
  403cc8:	sub	sp, sp, #0x120
  403ccc:	stp	x29, x30, [sp, #192]
  403cd0:	add	x29, sp, #0xc0
  403cd4:	ldr	x8, [x29, #96]
  403cd8:	stp	x28, x27, [sp, #208]
  403cdc:	stp	x26, x25, [sp, #224]
  403ce0:	stp	x24, x23, [sp, #240]
  403ce4:	stp	x22, x21, [sp, #256]
  403ce8:	stp	x20, x19, [sp, #272]
  403cec:	str	x7, [sp, #80]
  403cf0:	stur	x6, [x29, #-48]
  403cf4:	mov	w19, w5
  403cf8:	mov	w20, w4
  403cfc:	mov	x23, x3
  403d00:	mov	x21, x2
  403d04:	mov	x27, x1
  403d08:	str	x8, [sp, #96]
  403d0c:	mov	x24, x0
  403d10:	bl	401be0 <__ctype_get_mb_cur_max@plt>
  403d14:	mov	w1, w20
  403d18:	mov	x22, xzr
  403d1c:	mov	w8, wzr
  403d20:	mov	w28, wzr
  403d24:	str	w19, [sp, #64]
  403d28:	ubfx	w19, w19, #1, #1
  403d2c:	add	x9, x21, #0x1
  403d30:	mov	w15, #0x1                   	// #1
  403d34:	str	x0, [sp, #56]
  403d38:	stur	xzr, [x29, #-80]
  403d3c:	stur	xzr, [x29, #-56]
  403d40:	str	wzr, [sp, #88]
  403d44:	stur	x9, [x29, #-72]
  403d48:	cmp	w1, #0xa
  403d4c:	b.hi	404920 <ferror@plt+0x2c20>  // b.pmore
  403d50:	adrp	x12, 407000 <_obstack_memory_used@@Base+0xab8>
  403d54:	mov	w9, w1
  403d58:	add	x12, x12, #0x328
  403d5c:	adr	x10, 403d80 <ferror@plt+0x2080>
  403d60:	ldrb	w11, [x12, x9]
  403d64:	add	x10, x10, x11, lsl #2
  403d68:	mov	x26, x27
  403d6c:	mov	x20, xzr
  403d70:	mov	w16, wzr
  403d74:	mov	w9, #0x1                   	// #1
  403d78:	mov	w27, w28
  403d7c:	br	x10
  403d80:	adrp	x0, 407000 <_obstack_memory_used@@Base+0xab8>
  403d84:	add	x0, x0, #0x484
  403d88:	mov	w20, w1
  403d8c:	mov	w22, w15
  403d90:	bl	405038 <ferror@plt+0x3338>
  403d94:	str	x0, [sp, #80]
  403d98:	adrp	x0, 407000 <_obstack_memory_used@@Base+0xab8>
  403d9c:	add	x0, x0, #0x486
  403da0:	mov	w1, w20
  403da4:	bl	405038 <ferror@plt+0x3338>
  403da8:	mov	w15, w22
  403dac:	mov	w1, w20
  403db0:	str	x0, [sp, #96]
  403db4:	stur	w1, [x29, #-28]
  403db8:	tbnz	w19, #0, 403df8 <ferror@plt+0x20f8>
  403dbc:	ldr	x8, [sp, #80]
  403dc0:	ldrb	w9, [x8]
  403dc4:	cbz	w9, 403df8 <ferror@plt+0x20f8>
  403dc8:	mov	w27, w15
  403dcc:	mov	x10, xzr
  403dd0:	add	x8, x8, #0x1
  403dd4:	b	403de8 <ferror@plt+0x20e8>
  403dd8:	ldrb	w9, [x8, x10]
  403ddc:	add	x20, x10, #0x1
  403de0:	mov	x10, x20
  403de4:	cbz	w9, 403e00 <ferror@plt+0x2100>
  403de8:	cmp	x10, x26
  403dec:	b.cs	403dd8 <ferror@plt+0x20d8>  // b.hs, b.nlast
  403df0:	strb	w9, [x24, x10]
  403df4:	b	403dd8 <ferror@plt+0x20d8>
  403df8:	mov	w27, w15
  403dfc:	mov	x20, xzr
  403e00:	ldr	x25, [sp, #96]
  403e04:	mov	x0, x25
  403e08:	bl	401910 <strlen@plt>
  403e0c:	ldur	w1, [x29, #-28]
  403e10:	mov	x22, x0
  403e14:	stur	x25, [x29, #-56]
  403e18:	mov	w9, #0x1                   	// #1
  403e1c:	mov	w16, w19
  403e20:	mov	w15, w27
  403e24:	mov	w27, w28
  403e28:	b	403ed4 <ferror@plt+0x21d4>
  403e2c:	mov	w19, #0x1                   	// #1
  403e30:	mov	w1, #0x5                   	// #5
  403e34:	tbz	w19, #0, 403e60 <ferror@plt+0x2160>
  403e38:	adrp	x8, 407000 <_obstack_memory_used@@Base+0xab8>
  403e3c:	mov	x20, xzr
  403e40:	mov	w22, #0x1                   	// #1
  403e44:	add	x8, x8, #0x68
  403e48:	stur	x8, [x29, #-56]
  403e4c:	b	403e80 <ferror@plt+0x2180>
  403e50:	mov	x20, xzr
  403e54:	mov	w16, wzr
  403e58:	mov	w9, w8
  403e5c:	b	403ed4 <ferror@plt+0x21d4>
  403e60:	cbz	x26, 403e6c <ferror@plt+0x216c>
  403e64:	mov	w8, #0x22                  	// #34
  403e68:	strb	w8, [x24]
  403e6c:	adrp	x8, 407000 <_obstack_memory_used@@Base+0xab8>
  403e70:	add	x8, x8, #0x68
  403e74:	mov	w20, #0x1                   	// #1
  403e78:	stur	x8, [x29, #-56]
  403e7c:	mov	w22, #0x1                   	// #1
  403e80:	mov	w9, #0x1                   	// #1
  403e84:	b	403ed0 <ferror@plt+0x21d0>
  403e88:	mov	w8, #0x1                   	// #1
  403e8c:	mov	w19, #0x1                   	// #1
  403e90:	eor	w9, w19, #0x1
  403e94:	orr	w8, w8, w9
  403e98:	tbz	w19, #0, 403ea8 <ferror@plt+0x21a8>
  403e9c:	mov	x20, xzr
  403ea0:	mov	w1, #0x2                   	// #2
  403ea4:	b	403ebc <ferror@plt+0x21bc>
  403ea8:	cbz	x26, 403eb4 <ferror@plt+0x21b4>
  403eac:	mov	w9, #0x27                  	// #39
  403eb0:	strb	w9, [x24]
  403eb4:	mov	w1, #0x2                   	// #2
  403eb8:	mov	w20, #0x1                   	// #1
  403ebc:	adrp	x9, 407000 <_obstack_memory_used@@Base+0xab8>
  403ec0:	add	x9, x9, #0x486
  403ec4:	stur	x9, [x29, #-56]
  403ec8:	mov	w22, #0x1                   	// #1
  403ecc:	mov	w9, w8
  403ed0:	mov	w16, w19
  403ed4:	ldur	x8, [x29, #-48]
  403ed8:	mov	w14, w9
  403edc:	eor	w17, w16, #0x1
  403ee0:	stur	w17, [x29, #-60]
  403ee4:	cmp	x8, #0x0
  403ee8:	cset	w8, eq  // eq = none
  403eec:	cmp	x22, #0x0
  403ef0:	cset	w9, ne  // ne = any
  403ef4:	cmp	w1, #0x2
  403ef8:	cset	w10, ne  // ne = any
  403efc:	and	w13, w10, w14
  403f00:	and	w11, w9, w16
  403f04:	orr	w10, w10, w17
  403f08:	and	w17, w9, w13
  403f0c:	orr	w9, w13, w16
  403f10:	eor	w9, w9, #0x1
  403f14:	cset	w12, eq  // eq = none
  403f18:	orr	w8, w8, w9
  403f1c:	mov	x25, xzr
  403f20:	and	w11, w14, w11
  403f24:	stur	w10, [x29, #-84]
  403f28:	and	w10, w12, w16
  403f2c:	stur	w8, [x29, #-24]
  403f30:	eor	w8, w14, #0x1
  403f34:	str	w11, [sp, #72]
  403f38:	str	w10, [sp, #92]
  403f3c:	stur	w14, [x29, #-64]
  403f40:	str	w8, [sp, #76]
  403f44:	stp	w16, w1, [x29, #-32]
  403f48:	stur	w17, [x29, #-36]
  403f4c:	b	403f54 <ferror@plt+0x2254>
  403f50:	add	x25, x25, #0x1
  403f54:	cmn	x23, #0x1
  403f58:	b.eq	403f6c <ferror@plt+0x226c>  // b.none
  403f5c:	cmp	x25, x23
  403f60:	cset	w8, eq  // eq = none
  403f64:	tbz	w8, #0, 403f7c <ferror@plt+0x227c>
  403f68:	b	4047d0 <ferror@plt+0x2ad0>
  403f6c:	ldrb	w8, [x21, x25]
  403f70:	cmp	w8, #0x0
  403f74:	cset	w8, eq  // eq = none
  403f78:	tbnz	w8, #0, 4047d0 <ferror@plt+0x2ad0>
  403f7c:	cbz	w17, 403fb8 <ferror@plt+0x22b8>
  403f80:	cmp	x22, #0x2
  403f84:	add	x19, x25, x22
  403f88:	b.cc	403fb0 <ferror@plt+0x22b0>  // b.lo, b.ul, b.last
  403f8c:	cmn	x23, #0x1
  403f90:	b.ne	403fb0 <ferror@plt+0x22b0>  // b.any
  403f94:	mov	x0, x21
  403f98:	mov	w23, w15
  403f9c:	bl	401910 <strlen@plt>
  403fa0:	ldp	w17, w16, [x29, #-36]
  403fa4:	ldur	w1, [x29, #-28]
  403fa8:	mov	w15, w23
  403fac:	mov	x23, x0
  403fb0:	cmp	x19, x23
  403fb4:	b.ls	4040f4 <ferror@plt+0x23f4>  // b.plast
  403fb8:	mov	w28, wzr
  403fbc:	ldrb	w19, [x21, x25]
  403fc0:	cmp	w19, #0x7e
  403fc4:	b.hi	404228 <ferror@plt+0x2528>  // b.pmore
  403fc8:	adrp	x14, 407000 <_obstack_memory_used@@Base+0xab8>
  403fcc:	add	x14, x14, #0x333
  403fd0:	adr	x13, 403ff4 <ferror@plt+0x22f4>
  403fd4:	ldrb	w10, [x14, x19]
  403fd8:	add	x13, x13, x10, lsl #2
  403fdc:	mov	w11, wzr
  403fe0:	mov	w9, wzr
  403fe4:	mov	w8, #0x1                   	// #1
  403fe8:	mov	w12, #0x6e                  	// #110
  403fec:	mov	w10, #0x61                  	// #97
  403ff0:	br	x13
  403ff4:	ldur	w10, [x29, #-24]
  403ff8:	tbnz	w10, #0, 404018 <ferror@plt+0x2318>
  403ffc:	ldur	x11, [x29, #-48]
  404000:	ubfx	w10, w19, #5, #3
  404004:	ldr	w10, [x11, w10, uxtw #2]
  404008:	lsr	w10, w10, w19
  40400c:	tbz	w10, #0, 404018 <ferror@plt+0x2318>
  404010:	mov	w10, w19
  404014:	b	404020 <ferror@plt+0x2320>
  404018:	mov	w10, w19
  40401c:	tbz	w28, #0, 404098 <ferror@plt+0x2398>
  404020:	tbz	w16, #0, 40402c <ferror@plt+0x232c>
  404024:	mov	w10, #0x10                  	// #16
  404028:	b	4040e4 <ferror@plt+0x23e4>
  40402c:	cmp	w1, #0x2
  404030:	cset	w9, ne  // ne = any
  404034:	orr	w9, w9, w27
  404038:	tbnz	w9, #0, 40407c <ferror@plt+0x237c>
  40403c:	cmp	x20, x26
  404040:	b.cs	40404c <ferror@plt+0x234c>  // b.hs, b.nlast
  404044:	mov	w9, #0x27                  	// #39
  404048:	strb	w9, [x24, x20]
  40404c:	add	x9, x20, #0x1
  404050:	cmp	x9, x26
  404054:	b.cs	404060 <ferror@plt+0x2360>  // b.hs, b.nlast
  404058:	mov	w11, #0x24                  	// #36
  40405c:	strb	w11, [x24, x9]
  404060:	add	x9, x20, #0x2
  404064:	cmp	x9, x26
  404068:	b.cs	404074 <ferror@plt+0x2374>  // b.hs, b.nlast
  40406c:	mov	w11, #0x27                  	// #39
  404070:	strb	w11, [x24, x9]
  404074:	add	x20, x20, #0x3
  404078:	mov	w27, #0x1                   	// #1
  40407c:	cmp	x20, x26
  404080:	b.cs	40408c <ferror@plt+0x238c>  // b.hs, b.nlast
  404084:	mov	w9, #0x5c                  	// #92
  404088:	strb	w9, [x24, x20]
  40408c:	add	x20, x20, #0x1
  404090:	mov	w9, #0x1                   	// #1
  404094:	mov	w19, w10
  404098:	tbnz	w9, #0, 4040cc <ferror@plt+0x23cc>
  40409c:	tbz	w27, #0, 4040cc <ferror@plt+0x23cc>
  4040a0:	cmp	x20, x26
  4040a4:	b.cs	4040b0 <ferror@plt+0x23b0>  // b.hs, b.nlast
  4040a8:	mov	w9, #0x27                  	// #39
  4040ac:	strb	w9, [x24, x20]
  4040b0:	add	x9, x20, #0x1
  4040b4:	cmp	x9, x26
  4040b8:	b.cs	4040c4 <ferror@plt+0x23c4>  // b.hs, b.nlast
  4040bc:	mov	w10, #0x27                  	// #39
  4040c0:	strb	w10, [x24, x9]
  4040c4:	mov	w27, wzr
  4040c8:	add	x20, x20, #0x2
  4040cc:	cmp	x20, x26
  4040d0:	b.cs	4040d8 <ferror@plt+0x23d8>  // b.hs, b.nlast
  4040d4:	strb	w19, [x24, x20]
  4040d8:	mov	w10, wzr
  4040dc:	add	x20, x20, #0x1
  4040e0:	and	w15, w15, w8
  4040e4:	cbz	w10, 403f50 <ferror@plt+0x2250>
  4040e8:	cmp	w10, #0xf
  4040ec:	b.eq	403f50 <ferror@plt+0x2250>  // b.none
  4040f0:	b	404854 <ferror@plt+0x2b54>
  4040f4:	ldur	x1, [x29, #-56]
  4040f8:	add	x0, x21, x25
  4040fc:	mov	x2, x22
  404100:	mov	w19, w15
  404104:	bl	401ac0 <bcmp@plt>
  404108:	ldur	w9, [x29, #-60]
  40410c:	cmp	w0, #0x0
  404110:	cset	w8, ne  // ne = any
  404114:	cset	w28, eq  // eq = none
  404118:	orr	w8, w8, w9
  40411c:	tbz	w8, #0, 404130 <ferror@plt+0x2430>
  404120:	ldp	w16, w1, [x29, #-32]
  404124:	ldur	w17, [x29, #-36]
  404128:	mov	w15, w19
  40412c:	b	403fbc <ferror@plt+0x22bc>
  404130:	ldp	w16, w1, [x29, #-32]
  404134:	ldur	w17, [x29, #-36]
  404138:	mov	w10, #0x10                  	// #16
  40413c:	mov	w15, w19
  404140:	b	4040e4 <ferror@plt+0x23e4>
  404144:	cmp	x23, #0x1
  404148:	b.eq	40416c <ferror@plt+0x246c>  // b.none
  40414c:	cmn	x23, #0x1
  404150:	b.ne	404170 <ferror@plt+0x2470>  // b.any
  404154:	ldrb	w8, [x21, #1]
  404158:	cbz	w8, 40416c <ferror@plt+0x246c>
  40415c:	mov	w9, wzr
  404160:	mov	w8, wzr
  404164:	mov	x23, #0xffffffffffffffff    	// #-1
  404168:	b	403ff4 <ferror@plt+0x22f4>
  40416c:	cbz	x25, 40417c <ferror@plt+0x247c>
  404170:	mov	w9, wzr
  404174:	mov	w8, wzr
  404178:	b	403ff4 <ferror@plt+0x22f4>
  40417c:	mov	w11, #0x1                   	// #1
  404180:	cmp	w1, #0x2
  404184:	b.ne	40418c <ferror@plt+0x248c>  // b.any
  404188:	tbnz	w16, #0, 404024 <ferror@plt+0x2324>
  40418c:	mov	w9, wzr
  404190:	mov	w8, w11
  404194:	b	403ff4 <ferror@plt+0x22f4>
  404198:	cmp	w1, #0x2
  40419c:	b.ne	404258 <ferror@plt+0x2558>  // b.any
  4041a0:	tbnz	w16, #0, 404024 <ferror@plt+0x2324>
  4041a4:	b	404264 <ferror@plt+0x2564>
  4041a8:	mov	w10, #0x66                  	// #102
  4041ac:	b	40427c <ferror@plt+0x257c>
  4041b0:	mov	w12, #0x74                  	// #116
  4041b4:	b	404270 <ferror@plt+0x2570>
  4041b8:	mov	w10, #0x62                  	// #98
  4041bc:	b	40427c <ferror@plt+0x257c>
  4041c0:	mov	w12, #0x72                  	// #114
  4041c4:	b	404270 <ferror@plt+0x2570>
  4041c8:	ldur	w8, [x29, #-64]
  4041cc:	tbz	w8, #0, 404290 <ferror@plt+0x2590>
  4041d0:	tbnz	w16, #0, 404024 <ferror@plt+0x2324>
  4041d4:	cmp	w1, #0x2
  4041d8:	cset	w8, ne  // ne = any
  4041dc:	orr	w8, w8, w27
  4041e0:	tbz	w8, #0, 4046f0 <ferror@plt+0x29f0>
  4041e4:	mov	x9, x20
  4041e8:	b	404730 <ferror@plt+0x2a30>
  4041ec:	cmp	w1, #0x5
  4041f0:	b.eq	40440c <ferror@plt+0x270c>  // b.none
  4041f4:	cmp	w1, #0x2
  4041f8:	b.ne	404170 <ferror@plt+0x2470>  // b.any
  4041fc:	tbz	w16, #0, 404170 <ferror@plt+0x2470>
  404200:	b	404024 <ferror@plt+0x2324>
  404204:	mov	w10, #0x76                  	// #118
  404208:	b	40427c <ferror@plt+0x257c>
  40420c:	cmp	w1, #0x2
  404210:	b.ne	4042a0 <ferror@plt+0x25a0>  // b.any
  404214:	tbz	w16, #0, 4044f0 <ferror@plt+0x27f0>
  404218:	mov	w8, #0x1                   	// #1
  40421c:	mov	w10, #0x10                  	// #16
  404220:	str	w8, [sp, #88]
  404224:	b	4040e4 <ferror@plt+0x23e4>
  404228:	ldr	x8, [sp, #56]
  40422c:	str	w15, [sp, #52]
  404230:	str	x24, [sp, #40]
  404234:	cmp	x8, #0x1
  404238:	b.ne	4042a8 <ferror@plt+0x25a8>  // b.any
  40423c:	bl	401bb0 <__ctype_b_loc@plt>
  404240:	ldr	x8, [x0]
  404244:	ldur	w1, [x29, #-28]
  404248:	mov	w24, #0x1                   	// #1
  40424c:	ldrh	w8, [x8, x19, lsl #1]
  404250:	ubfx	w10, w8, #14, #1
  404254:	b	404570 <ferror@plt+0x2870>
  404258:	ldr	w8, [sp, #72]
  40425c:	mov	w12, w19
  404260:	tbz	w8, #0, 404270 <ferror@plt+0x2570>
  404264:	mov	w9, wzr
  404268:	mov	w8, wzr
  40426c:	b	404098 <ferror@plt+0x2398>
  404270:	ldur	w8, [x29, #-84]
  404274:	mov	w10, w12
  404278:	tbz	w8, #0, 404024 <ferror@plt+0x2324>
  40427c:	ldur	w11, [x29, #-64]
  404280:	mov	w9, wzr
  404284:	mov	w8, wzr
  404288:	tbz	w11, #0, 403ff4 <ferror@plt+0x22f4>
  40428c:	b	404020 <ferror@plt+0x2320>
  404290:	ldr	w8, [sp, #64]
  404294:	tbz	w8, #0, 404170 <ferror@plt+0x2470>
  404298:	mov	w10, #0xf                   	// #15
  40429c:	b	4040e4 <ferror@plt+0x23e4>
  4042a0:	mov	w9, wzr
  4042a4:	b	40455c <ferror@plt+0x285c>
  4042a8:	cmn	x23, #0x1
  4042ac:	str	x22, [sp, #16]
  4042b0:	stur	xzr, [x29, #-16]
  4042b4:	b.ne	4042c4 <ferror@plt+0x25c4>  // b.any
  4042b8:	mov	x0, x21
  4042bc:	bl	401910 <strlen@plt>
  4042c0:	mov	x23, x0
  4042c4:	sub	x8, x23, x25
  4042c8:	str	x8, [sp, #8]
  4042cc:	add	x8, x21, x25
  4042d0:	str	x8, [sp, #32]
  4042d4:	ldur	x8, [x29, #-72]
  4042d8:	mov	x24, xzr
  4042dc:	add	x8, x8, x25
  4042e0:	str	x8, [sp, #24]
  4042e4:	mov	w8, #0x1                   	// #1
  4042e8:	str	w8, [sp, #68]
  4042ec:	add	x8, x24, x25
  4042f0:	add	x1, x21, x8
  4042f4:	sub	x2, x23, x8
  4042f8:	sub	x0, x29, #0x14
  4042fc:	sub	x3, x29, #0x10
  404300:	mov	w22, w27
  404304:	bl	4061b8 <ferror@plt+0x44b8>
  404308:	cbz	x0, 404360 <ferror@plt+0x2660>
  40430c:	mov	x27, x0
  404310:	cmn	x0, #0x1
  404314:	b.eq	40435c <ferror@plt+0x265c>  // b.none
  404318:	cmn	x27, #0x2
  40431c:	b.ne	404368 <ferror@plt+0x2668>  // b.any
  404320:	add	x8, x24, x25
  404324:	cmp	x8, x23
  404328:	mov	w27, w22
  40432c:	b.cs	404350 <ferror@plt+0x2650>  // b.hs, b.nlast
  404330:	ldr	x9, [sp, #32]
  404334:	ldrb	w8, [x9, x24]
  404338:	cbz	w8, 404350 <ferror@plt+0x2650>
  40433c:	add	x24, x24, #0x1
  404340:	add	x8, x25, x24
  404344:	cmp	x8, x23
  404348:	b.cc	404334 <ferror@plt+0x2634>  // b.lo, b.ul, b.last
  40434c:	ldr	x24, [sp, #8]
  404350:	str	wzr, [sp, #68]
  404354:	mov	w10, #0x34                  	// #52
  404358:	b	4043f8 <ferror@plt+0x26f8>
  40435c:	str	wzr, [sp, #68]
  404360:	mov	w10, #0x34                  	// #52
  404364:	b	4043f4 <ferror@plt+0x26f4>
  404368:	ldr	w8, [sp, #92]
  40436c:	cbz	w8, 4043d0 <ferror@plt+0x26d0>
  404370:	cmp	x27, #0x2
  404374:	b.cc	4043c8 <ferror@plt+0x26c8>  // b.lo, b.ul, b.last
  404378:	ldr	x9, [sp, #24]
  40437c:	sub	x8, x27, #0x1
  404380:	add	x9, x9, x24
  404384:	b	404394 <ferror@plt+0x2694>
  404388:	subs	x8, x8, #0x1
  40438c:	add	x9, x9, #0x1
  404390:	b.eq	4043c8 <ferror@plt+0x26c8>  // b.none
  404394:	ldrb	w10, [x9]
  404398:	sub	w10, w10, #0x5b
  40439c:	cmp	w10, #0x21
  4043a0:	b.hi	404388 <ferror@plt+0x2688>  // b.pmore
  4043a4:	mov	w11, #0x1                   	// #1
  4043a8:	lsl	x10, x11, x10
  4043ac:	mov	x11, #0x2b                  	// #43
  4043b0:	movk	x11, #0x2, lsl #32
  4043b4:	tst	x10, x11
  4043b8:	b.eq	404388 <ferror@plt+0x2688>  // b.none
  4043bc:	mov	w10, #0x10                  	// #16
  4043c0:	cbnz	w10, 4043f4 <ferror@plt+0x26f4>
  4043c4:	b	4043d0 <ferror@plt+0x26d0>
  4043c8:	mov	w10, wzr
  4043cc:	cbnz	w10, 4043f4 <ferror@plt+0x26f4>
  4043d0:	ldur	w0, [x29, #-20]
  4043d4:	bl	401c90 <iswprint@plt>
  4043d8:	ldr	w9, [sp, #68]
  4043dc:	cmp	w0, #0x0
  4043e0:	cset	w8, ne  // ne = any
  4043e4:	mov	w10, wzr
  4043e8:	and	w9, w9, w8
  4043ec:	add	x24, x27, x24
  4043f0:	str	w9, [sp, #68]
  4043f4:	mov	w27, w22
  4043f8:	cbnz	w10, 4044c0 <ferror@plt+0x27c0>
  4043fc:	sub	x0, x29, #0x10
  404400:	bl	401b50 <mbsinit@plt>
  404404:	cbz	w0, 4042ec <ferror@plt+0x25ec>
  404408:	b	4044c8 <ferror@plt+0x27c8>
  40440c:	ldr	w8, [sp, #64]
  404410:	tbz	w8, #2, 404170 <ferror@plt+0x2470>
  404414:	add	x10, x25, #0x2
  404418:	cmp	x10, x23
  40441c:	b.cs	404170 <ferror@plt+0x2470>  // b.hs, b.nlast
  404420:	add	x8, x25, x21
  404424:	ldrb	w8, [x8, #1]
  404428:	cmp	w8, #0x3f
  40442c:	b.ne	404170 <ferror@plt+0x2470>  // b.any
  404430:	ldrb	w11, [x21, x10]
  404434:	mov	w9, wzr
  404438:	cmp	w11, #0x3e
  40443c:	b.hi	4047c8 <ferror@plt+0x2ac8>  // b.pmore
  404440:	mov	w8, #0x1                   	// #1
  404444:	mov	x12, #0xa38200000000        	// #179778741075968
  404448:	lsl	x8, x8, x11
  40444c:	movk	x12, #0x7000, lsl #48
  404450:	tst	x8, x12
  404454:	b.eq	4047c8 <ferror@plt+0x2ac8>  // b.none
  404458:	tbnz	w16, #0, 404024 <ferror@plt+0x2324>
  40445c:	cmp	x20, x26
  404460:	b.cs	40446c <ferror@plt+0x276c>  // b.hs, b.nlast
  404464:	mov	w8, #0x3f                  	// #63
  404468:	strb	w8, [x24, x20]
  40446c:	add	x8, x20, #0x1
  404470:	cmp	x8, x26
  404474:	b.cs	404480 <ferror@plt+0x2780>  // b.hs, b.nlast
  404478:	mov	w9, #0x22                  	// #34
  40447c:	strb	w9, [x24, x8]
  404480:	add	x8, x20, #0x2
  404484:	cmp	x8, x26
  404488:	b.cs	404494 <ferror@plt+0x2794>  // b.hs, b.nlast
  40448c:	mov	w9, #0x22                  	// #34
  404490:	strb	w9, [x24, x8]
  404494:	add	x8, x20, #0x3
  404498:	cmp	x8, x26
  40449c:	b.cs	4044a8 <ferror@plt+0x27a8>  // b.hs, b.nlast
  4044a0:	mov	w9, #0x3f                  	// #63
  4044a4:	strb	w9, [x24, x8]
  4044a8:	mov	w9, wzr
  4044ac:	mov	w8, wzr
  4044b0:	add	x20, x20, #0x4
  4044b4:	mov	x25, x10
  4044b8:	mov	w19, w11
  4044bc:	b	403ff4 <ferror@plt+0x22f4>
  4044c0:	cmp	w10, #0x34
  4044c4:	b.ne	4044cc <ferror@plt+0x27cc>  // b.any
  4044c8:	mov	w10, wzr
  4044cc:	ldp	w16, w1, [x29, #-32]
  4044d0:	ldr	w15, [sp, #52]
  4044d4:	ldr	x22, [sp, #16]
  4044d8:	ldur	w17, [x29, #-36]
  4044dc:	cbz	w10, 40456c <ferror@plt+0x286c>
  4044e0:	ldr	x24, [sp, #40]
  4044e4:	mov	w11, wzr
  4044e8:	mov	w8, wzr
  4044ec:	b	4047ac <ferror@plt+0x2aac>
  4044f0:	ldur	x10, [x29, #-80]
  4044f4:	cmp	x26, #0x0
  4044f8:	cset	w8, eq  // eq = none
  4044fc:	cmp	x10, #0x0
  404500:	cset	w9, ne  // ne = any
  404504:	orr	w8, w9, w8
  404508:	cmp	w8, #0x0
  40450c:	csel	x10, x10, x26, ne  // ne = any
  404510:	csel	x26, x26, xzr, ne  // ne = any
  404514:	cmp	x20, x26
  404518:	stur	x10, [x29, #-80]
  40451c:	b.cs	404528 <ferror@plt+0x2828>  // b.hs, b.nlast
  404520:	mov	w8, #0x27                  	// #39
  404524:	strb	w8, [x24, x20]
  404528:	add	x8, x20, #0x1
  40452c:	cmp	x8, x26
  404530:	b.cs	40453c <ferror@plt+0x283c>  // b.hs, b.nlast
  404534:	mov	w9, #0x5c                  	// #92
  404538:	strb	w9, [x24, x8]
  40453c:	add	x8, x20, #0x2
  404540:	cmp	x8, x26
  404544:	b.cs	404550 <ferror@plt+0x2850>  // b.hs, b.nlast
  404548:	mov	w9, #0x27                  	// #39
  40454c:	strb	w9, [x24, x8]
  404550:	mov	w27, wzr
  404554:	mov	w9, wzr
  404558:	add	x20, x20, #0x3
  40455c:	mov	w8, #0x1                   	// #1
  404560:	str	w8, [sp, #88]
  404564:	mov	w8, #0x1                   	// #1
  404568:	b	403ff4 <ferror@plt+0x22f4>
  40456c:	ldr	w10, [sp, #68]
  404570:	ldr	w9, [sp, #76]
  404574:	and	w8, w10, #0x1
  404578:	cmp	x24, #0x1
  40457c:	orr	w9, w10, w9
  404580:	b.hi	4045a0 <ferror@plt+0x28a0>  // b.pmore
  404584:	tbz	w9, #0, 4045a0 <ferror@plt+0x28a0>
  404588:	ldr	x24, [sp, #40]
  40458c:	ldr	w15, [sp, #52]
  404590:	ldp	w17, w16, [x29, #-36]
  404594:	mov	w11, wzr
  404598:	mov	w10, wzr
  40459c:	b	4047ac <ferror@plt+0x2aac>
  4045a0:	add	x10, x24, x25
  4045a4:	ldr	x24, [sp, #40]
  4045a8:	ldr	w15, [sp, #52]
  4045ac:	ldp	w17, w16, [x29, #-36]
  4045b0:	mov	w11, wzr
  4045b4:	b	4045c8 <ferror@plt+0x28c8>
  4045b8:	ldur	x13, [x29, #-72]
  4045bc:	add	x20, x20, #0x1
  4045c0:	ldrb	w19, [x13, x25]
  4045c4:	mov	x25, x12
  4045c8:	tbz	w9, #0, 4045ec <ferror@plt+0x28ec>
  4045cc:	tbz	w28, #0, 404694 <ferror@plt+0x2994>
  4045d0:	cmp	x20, x26
  4045d4:	b.cs	4045e0 <ferror@plt+0x28e0>  // b.hs, b.nlast
  4045d8:	mov	w12, #0x5c                  	// #92
  4045dc:	strb	w12, [x24, x20]
  4045e0:	mov	w28, wzr
  4045e4:	add	x20, x20, #0x1
  4045e8:	b	404694 <ferror@plt+0x2994>
  4045ec:	tbnz	w16, #0, 4047a8 <ferror@plt+0x2aa8>
  4045f0:	cmp	w1, #0x2
  4045f4:	cset	w11, ne  // ne = any
  4045f8:	orr	w11, w11, w27
  4045fc:	tbnz	w11, #0, 404640 <ferror@plt+0x2940>
  404600:	cmp	x20, x26
  404604:	b.cs	404610 <ferror@plt+0x2910>  // b.hs, b.nlast
  404608:	mov	w11, #0x27                  	// #39
  40460c:	strb	w11, [x24, x20]
  404610:	add	x11, x20, #0x1
  404614:	cmp	x11, x26
  404618:	b.cs	404624 <ferror@plt+0x2924>  // b.hs, b.nlast
  40461c:	mov	w12, #0x24                  	// #36
  404620:	strb	w12, [x24, x11]
  404624:	add	x11, x20, #0x2
  404628:	cmp	x11, x26
  40462c:	b.cs	404638 <ferror@plt+0x2938>  // b.hs, b.nlast
  404630:	mov	w12, #0x27                  	// #39
  404634:	strb	w12, [x24, x11]
  404638:	add	x20, x20, #0x3
  40463c:	mov	w27, #0x1                   	// #1
  404640:	cmp	x20, x26
  404644:	b.cs	404650 <ferror@plt+0x2950>  // b.hs, b.nlast
  404648:	mov	w11, #0x5c                  	// #92
  40464c:	strb	w11, [x24, x20]
  404650:	add	x11, x20, #0x1
  404654:	cmp	x11, x26
  404658:	b.cs	404668 <ferror@plt+0x2968>  // b.hs, b.nlast
  40465c:	mov	w12, #0x30                  	// #48
  404660:	bfxil	w12, w19, #6, #2
  404664:	strb	w12, [x24, x11]
  404668:	add	x11, x20, #0x2
  40466c:	cmp	x11, x26
  404670:	b.cs	404680 <ferror@plt+0x2980>  // b.hs, b.nlast
  404674:	mov	w12, #0x30                  	// #48
  404678:	bfxil	w12, w19, #3, #3
  40467c:	strb	w12, [x24, x11]
  404680:	mov	w12, #0x30                  	// #48
  404684:	bfxil	w12, w19, #0, #3
  404688:	add	x20, x20, #0x3
  40468c:	mov	w11, #0x1                   	// #1
  404690:	mov	w19, w12
  404694:	add	x12, x25, #0x1
  404698:	cmp	x10, x12
  40469c:	b.ls	4046e8 <ferror@plt+0x29e8>  // b.plast
  4046a0:	and	w13, w11, #0x1
  4046a4:	orn	w13, w13, w27
  4046a8:	tbnz	w13, #0, 4046d8 <ferror@plt+0x29d8>
  4046ac:	cmp	x20, x26
  4046b0:	b.cs	4046bc <ferror@plt+0x29bc>  // b.hs, b.nlast
  4046b4:	mov	w13, #0x27                  	// #39
  4046b8:	strb	w13, [x24, x20]
  4046bc:	add	x13, x20, #0x1
  4046c0:	cmp	x13, x26
  4046c4:	b.cs	4046d0 <ferror@plt+0x29d0>  // b.hs, b.nlast
  4046c8:	mov	w14, #0x27                  	// #39
  4046cc:	strb	w14, [x24, x13]
  4046d0:	mov	w27, wzr
  4046d4:	add	x20, x20, #0x2
  4046d8:	cmp	x20, x26
  4046dc:	b.cs	4045b8 <ferror@plt+0x28b8>  // b.hs, b.nlast
  4046e0:	strb	w19, [x24, x20]
  4046e4:	b	4045b8 <ferror@plt+0x28b8>
  4046e8:	mov	w10, #0x2c                  	// #44
  4046ec:	b	4047ac <ferror@plt+0x2aac>
  4046f0:	cmp	x20, x26
  4046f4:	b.cs	404700 <ferror@plt+0x2a00>  // b.hs, b.nlast
  4046f8:	mov	w8, #0x27                  	// #39
  4046fc:	strb	w8, [x24, x20]
  404700:	add	x8, x20, #0x1
  404704:	cmp	x8, x26
  404708:	b.cs	404714 <ferror@plt+0x2a14>  // b.hs, b.nlast
  40470c:	mov	w9, #0x24                  	// #36
  404710:	strb	w9, [x24, x8]
  404714:	add	x8, x20, #0x2
  404718:	cmp	x8, x26
  40471c:	b.cs	404728 <ferror@plt+0x2a28>  // b.hs, b.nlast
  404720:	mov	w9, #0x27                  	// #39
  404724:	strb	w9, [x24, x8]
  404728:	add	x9, x20, #0x3
  40472c:	mov	w27, #0x1                   	// #1
  404730:	cmp	x9, x26
  404734:	b.cs	404740 <ferror@plt+0x2a40>  // b.hs, b.nlast
  404738:	mov	w8, #0x5c                  	// #92
  40473c:	strb	w8, [x24, x9]
  404740:	cmp	w1, #0x2
  404744:	add	x20, x9, #0x1
  404748:	b.eq	404798 <ferror@plt+0x2a98>  // b.none
  40474c:	add	x8, x25, #0x1
  404750:	cmp	x8, x23
  404754:	b.cs	404798 <ferror@plt+0x2a98>  // b.hs, b.nlast
  404758:	ldrb	w8, [x21, x8]
  40475c:	sub	w8, w8, #0x30
  404760:	cmp	w8, #0x9
  404764:	b.hi	404798 <ferror@plt+0x2a98>  // b.pmore
  404768:	cmp	x20, x26
  40476c:	b.cs	404778 <ferror@plt+0x2a78>  // b.hs, b.nlast
  404770:	mov	w8, #0x30                  	// #48
  404774:	strb	w8, [x24, x20]
  404778:	add	x8, x9, #0x2
  40477c:	cmp	x8, x26
  404780:	b.cs	40478c <ferror@plt+0x2a8c>  // b.hs, b.nlast
  404784:	mov	w10, #0x30                  	// #48
  404788:	strb	w10, [x24, x8]
  40478c:	mov	w8, wzr
  404790:	add	x20, x9, #0x3
  404794:	b	40479c <ferror@plt+0x2a9c>
  404798:	mov	w8, wzr
  40479c:	mov	w9, #0x1                   	// #1
  4047a0:	mov	w19, #0x30                  	// #48
  4047a4:	b	403ff4 <ferror@plt+0x22f4>
  4047a8:	mov	w10, #0x10                  	// #16
  4047ac:	cmp	w8, #0x0
  4047b0:	cset	w8, ne  // ne = any
  4047b4:	cmp	w10, #0x2c
  4047b8:	and	w9, w11, #0x1
  4047bc:	b.eq	404098 <ferror@plt+0x2398>  // b.none
  4047c0:	cbz	w10, 403ff4 <ferror@plt+0x22f4>
  4047c4:	b	4040e4 <ferror@plt+0x23e4>
  4047c8:	mov	w8, w9
  4047cc:	b	403ff4 <ferror@plt+0x22f4>
  4047d0:	cmp	x20, #0x0
  4047d4:	cset	w8, eq  // eq = none
  4047d8:	cmp	w1, #0x2
  4047dc:	cset	w9, eq  // eq = none
  4047e0:	and	w8, w9, w8
  4047e4:	and	w8, w16, w8
  4047e8:	tbnz	w8, #0, 40485c <ferror@plt+0x2b5c>
  4047ec:	ldur	w9, [x29, #-64]
  4047f0:	cmp	w1, #0x2
  4047f4:	cset	w8, ne  // ne = any
  4047f8:	orr	w8, w16, w8
  4047fc:	tbnz	w8, #0, 404830 <ferror@plt+0x2b30>
  404800:	ldr	w8, [sp, #88]
  404804:	eor	w8, w8, #0x1
  404808:	tbnz	w8, #0, 404830 <ferror@plt+0x2b30>
  40480c:	tbnz	w15, #0, 4048fc <ferror@plt+0x2bfc>
  404810:	ldur	x8, [x29, #-80]
  404814:	cbz	x8, 404830 <ferror@plt+0x2b30>
  404818:	mov	w28, w27
  40481c:	ldur	x27, [x29, #-80]
  404820:	mov	w1, #0x2                   	// #2
  404824:	mov	w8, w9
  404828:	mov	w19, w16
  40482c:	cbz	x26, 403d48 <ferror@plt+0x2048>
  404830:	ldur	x10, [x29, #-56]
  404834:	cmp	x10, #0x0
  404838:	cset	w8, eq  // eq = none
  40483c:	orr	w8, w8, w16
  404840:	tbnz	w8, #0, 4048ec <ferror@plt+0x2bec>
  404844:	ldrb	w9, [x10]
  404848:	cbz	w9, 4048ec <ferror@plt+0x2bec>
  40484c:	add	x8, x10, #0x1
  404850:	b	4048b8 <ferror@plt+0x2bb8>
  404854:	cmp	w10, #0x10
  404858:	b.ne	4048c8 <ferror@plt+0x2bc8>  // b.any
  40485c:	ldur	w8, [x29, #-64]
  404860:	mov	w9, #0x4                   	// #4
  404864:	mov	x0, x24
  404868:	mov	x2, x21
  40486c:	tst	w8, #0x1
  404870:	mov	w8, #0x2                   	// #2
  404874:	csel	w8, w9, w8, ne  // ne = any
  404878:	cmp	w1, #0x2
  40487c:	csel	w4, w8, w1, eq  // eq = none
  404880:	ldr	w8, [sp, #64]
  404884:	mov	x1, x26
  404888:	mov	x3, x23
  40488c:	mov	x6, xzr
  404890:	and	w5, w8, #0xfffffffd
  404894:	ldr	x8, [sp, #96]
  404898:	str	x8, [sp]
  40489c:	ldr	x7, [sp, #80]
  4048a0:	bl	403cc8 <ferror@plt+0x1fc8>
  4048a4:	mov	x20, x0
  4048a8:	b	4048c8 <ferror@plt+0x2bc8>
  4048ac:	ldrb	w9, [x8], #1
  4048b0:	add	x20, x20, #0x1
  4048b4:	cbz	w9, 4048ec <ferror@plt+0x2bec>
  4048b8:	cmp	x20, x26
  4048bc:	b.cs	4048ac <ferror@plt+0x2bac>  // b.hs, b.nlast
  4048c0:	strb	w9, [x24, x20]
  4048c4:	b	4048ac <ferror@plt+0x2bac>
  4048c8:	mov	x0, x20
  4048cc:	ldp	x20, x19, [sp, #272]
  4048d0:	ldp	x22, x21, [sp, #256]
  4048d4:	ldp	x24, x23, [sp, #240]
  4048d8:	ldp	x26, x25, [sp, #224]
  4048dc:	ldp	x28, x27, [sp, #208]
  4048e0:	ldp	x29, x30, [sp, #192]
  4048e4:	add	sp, sp, #0x120
  4048e8:	ret
  4048ec:	cmp	x20, x26
  4048f0:	b.cs	4048c8 <ferror@plt+0x2bc8>  // b.hs, b.nlast
  4048f4:	strb	wzr, [x24, x20]
  4048f8:	b	4048c8 <ferror@plt+0x2bc8>
  4048fc:	ldr	x8, [sp, #96]
  404900:	ldur	x1, [x29, #-80]
  404904:	ldr	w5, [sp, #64]
  404908:	ldur	x6, [x29, #-48]
  40490c:	mov	w4, #0x5                   	// #5
  404910:	mov	x0, x24
  404914:	mov	x2, x21
  404918:	mov	x3, x23
  40491c:	b	404898 <ferror@plt+0x2b98>
  404920:	bl	401b30 <abort@plt>
  404924:	stp	x29, x30, [sp, #-16]!
  404928:	mov	x3, x2
  40492c:	mov	x2, xzr
  404930:	mov	x29, sp
  404934:	bl	404940 <ferror@plt+0x2c40>
  404938:	ldp	x29, x30, [sp], #16
  40493c:	ret
  404940:	sub	sp, sp, #0x70
  404944:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404948:	add	x8, x8, #0x338
  40494c:	cmp	x3, #0x0
  404950:	stp	x29, x30, [sp, #16]
  404954:	stp	x28, x27, [sp, #32]
  404958:	stp	x26, x25, [sp, #48]
  40495c:	stp	x24, x23, [sp, #64]
  404960:	stp	x22, x21, [sp, #80]
  404964:	stp	x20, x19, [sp, #96]
  404968:	add	x29, sp, #0x10
  40496c:	mov	x19, x2
  404970:	mov	x22, x1
  404974:	mov	x23, x0
  404978:	csel	x21, x8, x3, eq  // eq = none
  40497c:	bl	401cb0 <__errno_location@plt>
  404980:	ldp	w4, w8, [x21]
  404984:	cmp	x19, #0x0
  404988:	ldp	x7, x9, [x21, #40]
  40498c:	ldr	w28, [x0]
  404990:	cset	w10, eq  // eq = none
  404994:	orr	w25, w8, w10
  404998:	add	x26, x21, #0x8
  40499c:	mov	x24, x0
  4049a0:	mov	x0, xzr
  4049a4:	mov	x1, xzr
  4049a8:	mov	x2, x23
  4049ac:	mov	x3, x22
  4049b0:	mov	w5, w25
  4049b4:	mov	x6, x26
  4049b8:	str	x9, [sp]
  4049bc:	bl	403cc8 <ferror@plt+0x1fc8>
  4049c0:	add	x27, x0, #0x1
  4049c4:	mov	x20, x0
  4049c8:	mov	x0, x27
  4049cc:	bl	405e88 <ferror@plt+0x4188>
  4049d0:	ldr	w4, [x21]
  4049d4:	ldp	x7, x8, [x21, #40]
  4049d8:	mov	x1, x27
  4049dc:	mov	x2, x23
  4049e0:	mov	x3, x22
  4049e4:	mov	w5, w25
  4049e8:	mov	x6, x26
  4049ec:	mov	x21, x0
  4049f0:	str	x8, [sp]
  4049f4:	bl	403cc8 <ferror@plt+0x1fc8>
  4049f8:	str	w28, [x24]
  4049fc:	cbz	x19, 404a04 <ferror@plt+0x2d04>
  404a00:	str	x20, [x19]
  404a04:	mov	x0, x21
  404a08:	ldp	x20, x19, [sp, #96]
  404a0c:	ldp	x22, x21, [sp, #80]
  404a10:	ldp	x24, x23, [sp, #64]
  404a14:	ldp	x26, x25, [sp, #48]
  404a18:	ldp	x28, x27, [sp, #32]
  404a1c:	ldp	x29, x30, [sp, #16]
  404a20:	add	sp, sp, #0x70
  404a24:	ret
  404a28:	stp	x29, x30, [sp, #-64]!
  404a2c:	stp	x20, x19, [sp, #48]
  404a30:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404a34:	stp	x22, x21, [sp, #32]
  404a38:	ldr	w8, [x20, #576]
  404a3c:	adrp	x21, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404a40:	ldr	x19, [x21, #568]
  404a44:	str	x23, [sp, #16]
  404a48:	cmp	w8, #0x2
  404a4c:	mov	x29, sp
  404a50:	b.lt	404a74 <ferror@plt+0x2d74>  // b.tstop
  404a54:	add	x22, x19, #0x18
  404a58:	mov	w23, #0x1                   	// #1
  404a5c:	ldr	x0, [x22], #16
  404a60:	bl	401bd0 <free@plt>
  404a64:	ldrsw	x8, [x20, #576]
  404a68:	add	x23, x23, #0x1
  404a6c:	cmp	x23, x8
  404a70:	b.lt	404a5c <ferror@plt+0x2d5c>  // b.tstop
  404a74:	ldr	x0, [x19, #8]
  404a78:	adrp	x23, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404a7c:	add	x23, x23, #0x370
  404a80:	adrp	x22, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404a84:	cmp	x0, x23
  404a88:	add	x22, x22, #0x248
  404a8c:	b.eq	404a9c <ferror@plt+0x2d9c>  // b.none
  404a90:	bl	401bd0 <free@plt>
  404a94:	mov	w8, #0x100                 	// #256
  404a98:	stp	x8, x23, [x22]
  404a9c:	cmp	x19, x22
  404aa0:	b.eq	404ab0 <ferror@plt+0x2db0>  // b.none
  404aa4:	mov	x0, x19
  404aa8:	bl	401bd0 <free@plt>
  404aac:	str	x22, [x21, #568]
  404ab0:	mov	w8, #0x1                   	// #1
  404ab4:	str	w8, [x20, #576]
  404ab8:	ldp	x20, x19, [sp, #48]
  404abc:	ldp	x22, x21, [sp, #32]
  404ac0:	ldr	x23, [sp, #16]
  404ac4:	ldp	x29, x30, [sp], #64
  404ac8:	ret
  404acc:	stp	x29, x30, [sp, #-16]!
  404ad0:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404ad4:	add	x3, x3, #0x338
  404ad8:	mov	x2, #0xffffffffffffffff    	// #-1
  404adc:	mov	x29, sp
  404ae0:	bl	404aec <ferror@plt+0x2dec>
  404ae4:	ldp	x29, x30, [sp], #16
  404ae8:	ret
  404aec:	sub	sp, sp, #0x80
  404af0:	stp	x29, x30, [sp, #32]
  404af4:	add	x29, sp, #0x20
  404af8:	stp	x28, x27, [sp, #48]
  404afc:	stp	x26, x25, [sp, #64]
  404b00:	stp	x24, x23, [sp, #80]
  404b04:	stp	x22, x21, [sp, #96]
  404b08:	stp	x20, x19, [sp, #112]
  404b0c:	mov	x22, x3
  404b10:	stur	x2, [x29, #-8]
  404b14:	mov	x21, x1
  404b18:	mov	w23, w0
  404b1c:	bl	401cb0 <__errno_location@plt>
  404b20:	tbnz	w23, #31, 404c70 <ferror@plt+0x2f70>
  404b24:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404b28:	ldr	w8, [x25, #576]
  404b2c:	adrp	x28, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404b30:	ldr	w20, [x0]
  404b34:	ldr	x27, [x28, #568]
  404b38:	mov	x19, x0
  404b3c:	cmp	w8, w23
  404b40:	b.gt	404bac <ferror@plt+0x2eac>
  404b44:	mov	w8, #0x7fffffff            	// #2147483647
  404b48:	cmp	w23, w8
  404b4c:	stur	w20, [x29, #-12]
  404b50:	b.eq	404c74 <ferror@plt+0x2f74>  // b.none
  404b54:	adrp	x20, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404b58:	add	x20, x20, #0x248
  404b5c:	add	w26, w23, #0x1
  404b60:	cmp	x27, x20
  404b64:	csel	x0, xzr, x27, eq  // eq = none
  404b68:	sbfiz	x1, x26, #4, #32
  404b6c:	bl	405dd8 <ferror@plt+0x40d8>
  404b70:	mov	x24, x0
  404b74:	cmp	x27, x20
  404b78:	str	x0, [x28, #568]
  404b7c:	b.ne	404b88 <ferror@plt+0x2e88>  // b.any
  404b80:	ldr	q0, [x20]
  404b84:	str	q0, [x24]
  404b88:	ldrsw	x8, [x25, #576]
  404b8c:	mov	w1, wzr
  404b90:	add	x0, x24, x8, lsl #4
  404b94:	sub	w8, w26, w8
  404b98:	sbfiz	x2, x8, #4, #32
  404b9c:	bl	401a90 <memset@plt>
  404ba0:	ldur	w20, [x29, #-12]
  404ba4:	mov	x27, x24
  404ba8:	str	w26, [x25, #576]
  404bac:	add	x28, x27, w23, sxtw #4
  404bb0:	mov	x27, x28
  404bb4:	ldr	x26, [x28]
  404bb8:	ldr	x23, [x27, #8]!
  404bbc:	ldp	w4, w8, [x22]
  404bc0:	ldp	x7, x9, [x22, #40]
  404bc4:	ldur	x3, [x29, #-8]
  404bc8:	add	x24, x22, #0x8
  404bcc:	orr	w25, w8, #0x1
  404bd0:	mov	x0, x23
  404bd4:	mov	x1, x26
  404bd8:	mov	x2, x21
  404bdc:	mov	w5, w25
  404be0:	mov	x6, x24
  404be4:	str	x9, [sp]
  404be8:	bl	403cc8 <ferror@plt+0x1fc8>
  404bec:	cmp	x26, x0
  404bf0:	b.hi	404c48 <ferror@plt+0x2f48>  // b.pmore
  404bf4:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404bf8:	add	x8, x8, #0x370
  404bfc:	add	x26, x0, #0x1
  404c00:	cmp	x23, x8
  404c04:	str	x26, [x28]
  404c08:	b.eq	404c14 <ferror@plt+0x2f14>  // b.none
  404c0c:	mov	x0, x23
  404c10:	bl	401bd0 <free@plt>
  404c14:	mov	x0, x26
  404c18:	bl	405e88 <ferror@plt+0x4188>
  404c1c:	str	x0, [x27]
  404c20:	ldr	w4, [x22]
  404c24:	ldp	x7, x8, [x22, #40]
  404c28:	ldur	x3, [x29, #-8]
  404c2c:	mov	x1, x26
  404c30:	mov	x2, x21
  404c34:	mov	w5, w25
  404c38:	mov	x6, x24
  404c3c:	mov	x23, x0
  404c40:	str	x8, [sp]
  404c44:	bl	403cc8 <ferror@plt+0x1fc8>
  404c48:	str	w20, [x19]
  404c4c:	mov	x0, x23
  404c50:	ldp	x20, x19, [sp, #112]
  404c54:	ldp	x22, x21, [sp, #96]
  404c58:	ldp	x24, x23, [sp, #80]
  404c5c:	ldp	x26, x25, [sp, #64]
  404c60:	ldp	x28, x27, [sp, #48]
  404c64:	ldp	x29, x30, [sp, #32]
  404c68:	add	sp, sp, #0x80
  404c6c:	ret
  404c70:	bl	401b30 <abort@plt>
  404c74:	bl	405f84 <ferror@plt+0x4284>
  404c78:	stp	x29, x30, [sp, #-16]!
  404c7c:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404c80:	add	x3, x3, #0x338
  404c84:	mov	x29, sp
  404c88:	bl	404aec <ferror@plt+0x2dec>
  404c8c:	ldp	x29, x30, [sp], #16
  404c90:	ret
  404c94:	stp	x29, x30, [sp, #-16]!
  404c98:	mov	x1, x0
  404c9c:	mov	w0, wzr
  404ca0:	mov	x29, sp
  404ca4:	bl	404acc <ferror@plt+0x2dcc>
  404ca8:	ldp	x29, x30, [sp], #16
  404cac:	ret
  404cb0:	stp	x29, x30, [sp, #-16]!
  404cb4:	mov	x2, x1
  404cb8:	mov	x1, x0
  404cbc:	mov	w0, wzr
  404cc0:	mov	x29, sp
  404cc4:	bl	404c78 <ferror@plt+0x2f78>
  404cc8:	ldp	x29, x30, [sp], #16
  404ccc:	ret
  404cd0:	sub	sp, sp, #0x60
  404cd4:	stp	x20, x19, [sp, #80]
  404cd8:	mov	w20, w0
  404cdc:	add	x8, sp, #0x8
  404ce0:	mov	w0, w1
  404ce4:	stp	x29, x30, [sp, #64]
  404ce8:	add	x29, sp, #0x40
  404cec:	mov	x19, x2
  404cf0:	bl	404d18 <ferror@plt+0x3018>
  404cf4:	add	x3, sp, #0x8
  404cf8:	mov	x2, #0xffffffffffffffff    	// #-1
  404cfc:	mov	w0, w20
  404d00:	mov	x1, x19
  404d04:	bl	404aec <ferror@plt+0x2dec>
  404d08:	ldp	x20, x19, [sp, #80]
  404d0c:	ldp	x29, x30, [sp, #64]
  404d10:	add	sp, sp, #0x60
  404d14:	ret
  404d18:	stp	x29, x30, [sp, #-16]!
  404d1c:	movi	v0.2d, #0x0
  404d20:	cmp	w0, #0xa
  404d24:	mov	x29, sp
  404d28:	str	xzr, [x8, #48]
  404d2c:	stp	q0, q0, [x8, #16]
  404d30:	str	q0, [x8]
  404d34:	b.eq	404d44 <ferror@plt+0x3044>  // b.none
  404d38:	str	w0, [x8]
  404d3c:	ldp	x29, x30, [sp], #16
  404d40:	ret
  404d44:	bl	401b30 <abort@plt>
  404d48:	sub	sp, sp, #0x70
  404d4c:	str	x21, [sp, #80]
  404d50:	mov	w21, w0
  404d54:	add	x8, sp, #0x8
  404d58:	mov	w0, w1
  404d5c:	stp	x29, x30, [sp, #64]
  404d60:	stp	x20, x19, [sp, #96]
  404d64:	add	x29, sp, #0x40
  404d68:	mov	x19, x3
  404d6c:	mov	x20, x2
  404d70:	bl	404d18 <ferror@plt+0x3018>
  404d74:	add	x3, sp, #0x8
  404d78:	mov	w0, w21
  404d7c:	mov	x1, x20
  404d80:	mov	x2, x19
  404d84:	bl	404aec <ferror@plt+0x2dec>
  404d88:	ldp	x20, x19, [sp, #96]
  404d8c:	ldr	x21, [sp, #80]
  404d90:	ldp	x29, x30, [sp, #64]
  404d94:	add	sp, sp, #0x70
  404d98:	ret
  404d9c:	stp	x29, x30, [sp, #-16]!
  404da0:	mov	x2, x1
  404da4:	mov	w1, w0
  404da8:	mov	w0, wzr
  404dac:	mov	x29, sp
  404db0:	bl	404cd0 <ferror@plt+0x2fd0>
  404db4:	ldp	x29, x30, [sp], #16
  404db8:	ret
  404dbc:	stp	x29, x30, [sp, #-16]!
  404dc0:	mov	x3, x2
  404dc4:	mov	x2, x1
  404dc8:	mov	w1, w0
  404dcc:	mov	w0, wzr
  404dd0:	mov	x29, sp
  404dd4:	bl	404d48 <ferror@plt+0x3048>
  404dd8:	ldp	x29, x30, [sp], #16
  404ddc:	ret
  404de0:	sub	sp, sp, #0x60
  404de4:	adrp	x9, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404de8:	add	x9, x9, #0x338
  404dec:	ldp	q0, q1, [x9]
  404df0:	ldr	q2, [x9, #32]
  404df4:	ldr	x9, [x9, #48]
  404df8:	mov	w8, w2
  404dfc:	stp	x20, x19, [sp, #80]
  404e00:	mov	x19, x1
  404e04:	mov	x20, x0
  404e08:	mov	x0, sp
  404e0c:	mov	w2, #0x1                   	// #1
  404e10:	mov	w1, w8
  404e14:	stp	x29, x30, [sp, #64]
  404e18:	add	x29, sp, #0x40
  404e1c:	stp	q0, q1, [sp]
  404e20:	str	q2, [sp, #32]
  404e24:	str	x9, [sp, #48]
  404e28:	bl	403bac <ferror@plt+0x1eac>
  404e2c:	mov	x3, sp
  404e30:	mov	w0, wzr
  404e34:	mov	x1, x20
  404e38:	mov	x2, x19
  404e3c:	bl	404aec <ferror@plt+0x2dec>
  404e40:	ldp	x20, x19, [sp, #80]
  404e44:	ldp	x29, x30, [sp, #64]
  404e48:	add	sp, sp, #0x60
  404e4c:	ret
  404e50:	stp	x29, x30, [sp, #-16]!
  404e54:	mov	w2, w1
  404e58:	mov	x1, #0xffffffffffffffff    	// #-1
  404e5c:	mov	x29, sp
  404e60:	bl	404de0 <ferror@plt+0x30e0>
  404e64:	ldp	x29, x30, [sp], #16
  404e68:	ret
  404e6c:	stp	x29, x30, [sp, #-16]!
  404e70:	mov	w1, #0x3a                  	// #58
  404e74:	mov	x29, sp
  404e78:	bl	404e50 <ferror@plt+0x3150>
  404e7c:	ldp	x29, x30, [sp], #16
  404e80:	ret
  404e84:	stp	x29, x30, [sp, #-16]!
  404e88:	mov	w2, #0x3a                  	// #58
  404e8c:	mov	x29, sp
  404e90:	bl	404de0 <ferror@plt+0x30e0>
  404e94:	ldp	x29, x30, [sp], #16
  404e98:	ret
  404e9c:	sub	sp, sp, #0x60
  404ea0:	stp	x20, x19, [sp, #80]
  404ea4:	mov	w20, w0
  404ea8:	add	x8, sp, #0x8
  404eac:	mov	w0, w1
  404eb0:	stp	x29, x30, [sp, #64]
  404eb4:	add	x29, sp, #0x40
  404eb8:	mov	x19, x2
  404ebc:	bl	404d18 <ferror@plt+0x3018>
  404ec0:	add	x0, sp, #0x8
  404ec4:	mov	w1, #0x3a                  	// #58
  404ec8:	mov	w2, #0x1                   	// #1
  404ecc:	bl	403bac <ferror@plt+0x1eac>
  404ed0:	add	x3, sp, #0x8
  404ed4:	mov	x2, #0xffffffffffffffff    	// #-1
  404ed8:	mov	w0, w20
  404edc:	mov	x1, x19
  404ee0:	bl	404aec <ferror@plt+0x2dec>
  404ee4:	ldp	x20, x19, [sp, #80]
  404ee8:	ldp	x29, x30, [sp, #64]
  404eec:	add	sp, sp, #0x60
  404ef0:	ret
  404ef4:	stp	x29, x30, [sp, #-16]!
  404ef8:	mov	x4, #0xffffffffffffffff    	// #-1
  404efc:	mov	x29, sp
  404f00:	bl	404f0c <ferror@plt+0x320c>
  404f04:	ldp	x29, x30, [sp], #16
  404f08:	ret
  404f0c:	sub	sp, sp, #0x70
  404f10:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404f14:	add	x8, x8, #0x338
  404f18:	ldp	q0, q1, [x8]
  404f1c:	ldr	q2, [x8, #32]
  404f20:	ldr	x8, [x8, #48]
  404f24:	str	x21, [sp, #80]
  404f28:	mov	w21, w0
  404f2c:	mov	x0, sp
  404f30:	stp	x29, x30, [sp, #64]
  404f34:	stp	x20, x19, [sp, #96]
  404f38:	add	x29, sp, #0x40
  404f3c:	mov	x19, x4
  404f40:	mov	x20, x3
  404f44:	stp	q0, q1, [sp]
  404f48:	str	q2, [sp, #32]
  404f4c:	str	x8, [sp, #48]
  404f50:	bl	403c04 <ferror@plt+0x1f04>
  404f54:	mov	x3, sp
  404f58:	mov	w0, w21
  404f5c:	mov	x1, x20
  404f60:	mov	x2, x19
  404f64:	bl	404aec <ferror@plt+0x2dec>
  404f68:	ldp	x20, x19, [sp, #96]
  404f6c:	ldr	x21, [sp, #80]
  404f70:	ldp	x29, x30, [sp, #64]
  404f74:	add	sp, sp, #0x70
  404f78:	ret
  404f7c:	stp	x29, x30, [sp, #-16]!
  404f80:	mov	x3, x2
  404f84:	mov	x2, x1
  404f88:	mov	x1, x0
  404f8c:	mov	w0, wzr
  404f90:	mov	x29, sp
  404f94:	bl	404ef4 <ferror@plt+0x31f4>
  404f98:	ldp	x29, x30, [sp], #16
  404f9c:	ret
  404fa0:	stp	x29, x30, [sp, #-16]!
  404fa4:	mov	x4, x3
  404fa8:	mov	x3, x2
  404fac:	mov	x2, x1
  404fb0:	mov	x1, x0
  404fb4:	mov	w0, wzr
  404fb8:	mov	x29, sp
  404fbc:	bl	404f0c <ferror@plt+0x320c>
  404fc0:	ldp	x29, x30, [sp], #16
  404fc4:	ret
  404fc8:	stp	x29, x30, [sp, #-16]!
  404fcc:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x11ab8>
  404fd0:	add	x3, x3, #0x258
  404fd4:	mov	x29, sp
  404fd8:	bl	404aec <ferror@plt+0x2dec>
  404fdc:	ldp	x29, x30, [sp], #16
  404fe0:	ret
  404fe4:	stp	x29, x30, [sp, #-16]!
  404fe8:	mov	x2, x1
  404fec:	mov	x1, x0
  404ff0:	mov	w0, wzr
  404ff4:	mov	x29, sp
  404ff8:	bl	404fc8 <ferror@plt+0x32c8>
  404ffc:	ldp	x29, x30, [sp], #16
  405000:	ret
  405004:	stp	x29, x30, [sp, #-16]!
  405008:	mov	x2, #0xffffffffffffffff    	// #-1
  40500c:	mov	x29, sp
  405010:	bl	404fc8 <ferror@plt+0x32c8>
  405014:	ldp	x29, x30, [sp], #16
  405018:	ret
  40501c:	stp	x29, x30, [sp, #-16]!
  405020:	mov	x1, x0
  405024:	mov	w0, wzr
  405028:	mov	x29, sp
  40502c:	bl	405004 <ferror@plt+0x3304>
  405030:	ldp	x29, x30, [sp], #16
  405034:	ret
  405038:	stp	x29, x30, [sp, #-48]!
  40503c:	stp	x20, x19, [sp, #32]
  405040:	mov	x20, x0
  405044:	mov	w19, w1
  405048:	mov	w2, #0x5                   	// #5
  40504c:	mov	x0, xzr
  405050:	mov	x1, x20
  405054:	str	x21, [sp, #16]
  405058:	mov	x29, sp
  40505c:	bl	401c60 <dcgettext@plt>
  405060:	cmp	x0, x20
  405064:	b.ne	4050f0 <ferror@plt+0x33f0>  // b.any
  405068:	bl	406840 <_obstack_memory_used@@Base+0x2f8>
  40506c:	mov	w1, #0x55                  	// #85
  405070:	mov	w2, #0x54                  	// #84
  405074:	mov	w3, #0x46                  	// #70
  405078:	mov	w4, #0x2d                  	// #45
  40507c:	mov	w5, #0x38                  	// #56
  405080:	mov	w6, wzr
  405084:	mov	w7, wzr
  405088:	mov	x21, x0
  40508c:	bl	40511c <ferror@plt+0x341c>
  405090:	cbz	w0, 4050ac <ferror@plt+0x33ac>
  405094:	ldrb	w8, [x20]
  405098:	adrp	x9, 407000 <_obstack_memory_used@@Base+0xab8>
  40509c:	adrp	x10, 407000 <_obstack_memory_used@@Base+0xab8>
  4050a0:	add	x9, x9, #0x48c
  4050a4:	add	x10, x10, #0x488
  4050a8:	b	4050e8 <ferror@plt+0x33e8>
  4050ac:	mov	w1, #0x47                  	// #71
  4050b0:	mov	w2, #0x42                  	// #66
  4050b4:	mov	w3, #0x31                  	// #49
  4050b8:	mov	w4, #0x38                  	// #56
  4050bc:	mov	w5, #0x30                  	// #48
  4050c0:	mov	w6, #0x33                  	// #51
  4050c4:	mov	w7, #0x30                  	// #48
  4050c8:	mov	x0, x21
  4050cc:	bl	40511c <ferror@plt+0x341c>
  4050d0:	cbz	w0, 405100 <ferror@plt+0x3400>
  4050d4:	ldrb	w8, [x20]
  4050d8:	adrp	x9, 407000 <_obstack_memory_used@@Base+0xab8>
  4050dc:	adrp	x10, 407000 <_obstack_memory_used@@Base+0xab8>
  4050e0:	add	x9, x9, #0x494
  4050e4:	add	x10, x10, #0x490
  4050e8:	cmp	w8, #0x60
  4050ec:	csel	x0, x10, x9, eq  // eq = none
  4050f0:	ldp	x20, x19, [sp, #32]
  4050f4:	ldr	x21, [sp, #16]
  4050f8:	ldp	x29, x30, [sp], #48
  4050fc:	ret
  405100:	adrp	x8, 407000 <_obstack_memory_used@@Base+0xab8>
  405104:	adrp	x9, 407000 <_obstack_memory_used@@Base+0xab8>
  405108:	add	x8, x8, #0x486
  40510c:	add	x9, x9, #0x68
  405110:	cmp	w19, #0x9
  405114:	csel	x0, x9, x8, eq  // eq = none
  405118:	b	4050f0 <ferror@plt+0x33f0>
  40511c:	stp	x29, x30, [sp, #-80]!
  405120:	stp	x26, x25, [sp, #16]
  405124:	mov	x25, x0
  405128:	and	w0, w1, #0xff
  40512c:	stp	x24, x23, [sp, #32]
  405130:	stp	x22, x21, [sp, #48]
  405134:	stp	x20, x19, [sp, #64]
  405138:	mov	x29, sp
  40513c:	mov	w19, w7
  405140:	mov	w20, w6
  405144:	mov	w21, w5
  405148:	mov	w22, w4
  40514c:	mov	w23, w3
  405150:	mov	w24, w2
  405154:	mov	w26, w1
  405158:	bl	406718 <_obstack_memory_used@@Base+0x1d0>
  40515c:	ldrb	w8, [x25]
  405160:	tbz	w0, #0, 405178 <ferror@plt+0x3478>
  405164:	and	w8, w8, #0xffffffdf
  405168:	cmp	w8, w26, uxtb
  40516c:	b.eq	405180 <ferror@plt+0x3480>  // b.none
  405170:	mov	w0, wzr
  405174:	b	4051b0 <ferror@plt+0x34b0>
  405178:	cmp	w8, w26, uxtb
  40517c:	b.ne	405170 <ferror@plt+0x3470>  // b.any
  405180:	tst	w26, #0xff
  405184:	b.eq	4051ac <ferror@plt+0x34ac>  // b.none
  405188:	mov	x0, x25
  40518c:	mov	w1, w24
  405190:	mov	w2, w23
  405194:	mov	w3, w22
  405198:	mov	w4, w21
  40519c:	mov	w5, w20
  4051a0:	mov	w6, w19
  4051a4:	bl	4051c8 <ferror@plt+0x34c8>
  4051a8:	b	4051b0 <ferror@plt+0x34b0>
  4051ac:	mov	w0, #0x1                   	// #1
  4051b0:	ldp	x20, x19, [sp, #64]
  4051b4:	ldp	x22, x21, [sp, #48]
  4051b8:	ldp	x24, x23, [sp, #32]
  4051bc:	ldp	x26, x25, [sp, #16]
  4051c0:	ldp	x29, x30, [sp], #80
  4051c4:	ret
  4051c8:	stp	x29, x30, [sp, #-80]!
  4051cc:	stp	x24, x23, [sp, #32]
  4051d0:	mov	x24, x0
  4051d4:	and	w0, w1, #0xff
  4051d8:	str	x25, [sp, #16]
  4051dc:	stp	x22, x21, [sp, #48]
  4051e0:	stp	x20, x19, [sp, #64]
  4051e4:	mov	x29, sp
  4051e8:	mov	w19, w6
  4051ec:	mov	w20, w5
  4051f0:	mov	w21, w4
  4051f4:	mov	w22, w3
  4051f8:	mov	w23, w2
  4051fc:	mov	w25, w1
  405200:	bl	406718 <_obstack_memory_used@@Base+0x1d0>
  405204:	ldrb	w8, [x24, #1]
  405208:	tbz	w0, #0, 405220 <ferror@plt+0x3520>
  40520c:	and	w8, w8, #0xffffffdf
  405210:	cmp	w8, w25, uxtb
  405214:	b.eq	405228 <ferror@plt+0x3528>  // b.none
  405218:	mov	w0, wzr
  40521c:	b	405254 <ferror@plt+0x3554>
  405220:	cmp	w8, w25, uxtb
  405224:	b.ne	405218 <ferror@plt+0x3518>  // b.any
  405228:	tst	w25, #0xff
  40522c:	b.eq	405250 <ferror@plt+0x3550>  // b.none
  405230:	mov	x0, x24
  405234:	mov	w1, w23
  405238:	mov	w2, w22
  40523c:	mov	w3, w21
  405240:	mov	w4, w20
  405244:	mov	w5, w19
  405248:	bl	40526c <ferror@plt+0x356c>
  40524c:	b	405254 <ferror@plt+0x3554>
  405250:	mov	w0, #0x1                   	// #1
  405254:	ldp	x20, x19, [sp, #64]
  405258:	ldp	x22, x21, [sp, #48]
  40525c:	ldp	x24, x23, [sp, #32]
  405260:	ldr	x25, [sp, #16]
  405264:	ldp	x29, x30, [sp], #80
  405268:	ret
  40526c:	stp	x29, x30, [sp, #-64]!
  405270:	stp	x24, x23, [sp, #16]
  405274:	mov	x23, x0
  405278:	and	w0, w1, #0xff
  40527c:	stp	x22, x21, [sp, #32]
  405280:	stp	x20, x19, [sp, #48]
  405284:	mov	x29, sp
  405288:	mov	w19, w5
  40528c:	mov	w20, w4
  405290:	mov	w21, w3
  405294:	mov	w22, w2
  405298:	mov	w24, w1
  40529c:	bl	406718 <_obstack_memory_used@@Base+0x1d0>
  4052a0:	ldrb	w8, [x23, #2]
  4052a4:	tbz	w0, #0, 4052bc <ferror@plt+0x35bc>
  4052a8:	and	w8, w8, #0xffffffdf
  4052ac:	cmp	w8, w24, uxtb
  4052b0:	b.eq	4052c4 <ferror@plt+0x35c4>  // b.none
  4052b4:	mov	w0, wzr
  4052b8:	b	4052ec <ferror@plt+0x35ec>
  4052bc:	cmp	w8, w24, uxtb
  4052c0:	b.ne	4052b4 <ferror@plt+0x35b4>  // b.any
  4052c4:	tst	w24, #0xff
  4052c8:	b.eq	4052e8 <ferror@plt+0x35e8>  // b.none
  4052cc:	mov	x0, x23
  4052d0:	mov	w1, w22
  4052d4:	mov	w2, w21
  4052d8:	mov	w3, w20
  4052dc:	mov	w4, w19
  4052e0:	bl	405300 <ferror@plt+0x3600>
  4052e4:	b	4052ec <ferror@plt+0x35ec>
  4052e8:	mov	w0, #0x1                   	// #1
  4052ec:	ldp	x20, x19, [sp, #48]
  4052f0:	ldp	x22, x21, [sp, #32]
  4052f4:	ldp	x24, x23, [sp, #16]
  4052f8:	ldp	x29, x30, [sp], #64
  4052fc:	ret
  405300:	stp	x29, x30, [sp, #-64]!
  405304:	stp	x22, x21, [sp, #32]
  405308:	mov	x22, x0
  40530c:	and	w0, w1, #0xff
  405310:	str	x23, [sp, #16]
  405314:	stp	x20, x19, [sp, #48]
  405318:	mov	x29, sp
  40531c:	mov	w19, w4
  405320:	mov	w20, w3
  405324:	mov	w21, w2
  405328:	mov	w23, w1
  40532c:	bl	406718 <_obstack_memory_used@@Base+0x1d0>
  405330:	ldrb	w8, [x22, #3]
  405334:	tbz	w0, #0, 40534c <ferror@plt+0x364c>
  405338:	and	w8, w8, #0xffffffdf
  40533c:	cmp	w8, w23, uxtb
  405340:	b.eq	405354 <ferror@plt+0x3654>  // b.none
  405344:	mov	w0, wzr
  405348:	b	405378 <ferror@plt+0x3678>
  40534c:	cmp	w8, w23, uxtb
  405350:	b.ne	405344 <ferror@plt+0x3644>  // b.any
  405354:	tst	w23, #0xff
  405358:	b.eq	405374 <ferror@plt+0x3674>  // b.none
  40535c:	mov	x0, x22
  405360:	mov	w1, w21
  405364:	mov	w2, w20
  405368:	mov	w3, w19
  40536c:	bl	40538c <ferror@plt+0x368c>
  405370:	b	405378 <ferror@plt+0x3678>
  405374:	mov	w0, #0x1                   	// #1
  405378:	ldp	x20, x19, [sp, #48]
  40537c:	ldp	x22, x21, [sp, #32]
  405380:	ldr	x23, [sp, #16]
  405384:	ldp	x29, x30, [sp], #64
  405388:	ret
  40538c:	stp	x29, x30, [sp, #-48]!
  405390:	stp	x22, x21, [sp, #16]
  405394:	mov	x21, x0
  405398:	and	w0, w1, #0xff
  40539c:	stp	x20, x19, [sp, #32]
  4053a0:	mov	x29, sp
  4053a4:	mov	w19, w3
  4053a8:	mov	w20, w2
  4053ac:	mov	w22, w1
  4053b0:	bl	406718 <_obstack_memory_used@@Base+0x1d0>
  4053b4:	ldrb	w8, [x21, #4]
  4053b8:	tbz	w0, #0, 4053d0 <ferror@plt+0x36d0>
  4053bc:	and	w8, w8, #0xffffffdf
  4053c0:	cmp	w8, w22, uxtb
  4053c4:	b.eq	4053d8 <ferror@plt+0x36d8>  // b.none
  4053c8:	mov	w0, wzr
  4053cc:	b	4053f8 <ferror@plt+0x36f8>
  4053d0:	cmp	w8, w22, uxtb
  4053d4:	b.ne	4053c8 <ferror@plt+0x36c8>  // b.any
  4053d8:	tst	w22, #0xff
  4053dc:	b.eq	4053f4 <ferror@plt+0x36f4>  // b.none
  4053e0:	mov	x0, x21
  4053e4:	mov	w1, w20
  4053e8:	mov	w2, w19
  4053ec:	bl	405408 <ferror@plt+0x3708>
  4053f0:	b	4053f8 <ferror@plt+0x36f8>
  4053f4:	mov	w0, #0x1                   	// #1
  4053f8:	ldp	x20, x19, [sp, #32]
  4053fc:	ldp	x22, x21, [sp, #16]
  405400:	ldp	x29, x30, [sp], #48
  405404:	ret
  405408:	stp	x29, x30, [sp, #-48]!
  40540c:	stp	x20, x19, [sp, #32]
  405410:	mov	x20, x0
  405414:	and	w0, w1, #0xff
  405418:	str	x21, [sp, #16]
  40541c:	mov	x29, sp
  405420:	mov	w19, w2
  405424:	mov	w21, w1
  405428:	bl	406718 <_obstack_memory_used@@Base+0x1d0>
  40542c:	ldrb	w8, [x20, #5]
  405430:	tbz	w0, #0, 405448 <ferror@plt+0x3748>
  405434:	and	w8, w8, #0xffffffdf
  405438:	cmp	w8, w21, uxtb
  40543c:	b.eq	405450 <ferror@plt+0x3750>  // b.none
  405440:	mov	w0, wzr
  405444:	b	40546c <ferror@plt+0x376c>
  405448:	cmp	w8, w21, uxtb
  40544c:	b.ne	405440 <ferror@plt+0x3740>  // b.any
  405450:	tst	w21, #0xff
  405454:	b.eq	405468 <ferror@plt+0x3768>  // b.none
  405458:	mov	x0, x20
  40545c:	mov	w1, w19
  405460:	bl	40547c <ferror@plt+0x377c>
  405464:	b	40546c <ferror@plt+0x376c>
  405468:	mov	w0, #0x1                   	// #1
  40546c:	ldp	x20, x19, [sp, #32]
  405470:	ldr	x21, [sp, #16]
  405474:	ldp	x29, x30, [sp], #48
  405478:	ret
  40547c:	stp	x29, x30, [sp, #-32]!
  405480:	stp	x20, x19, [sp, #16]
  405484:	mov	x19, x0
  405488:	and	w0, w1, #0xff
  40548c:	mov	x29, sp
  405490:	mov	w20, w1
  405494:	bl	406718 <_obstack_memory_used@@Base+0x1d0>
  405498:	ldrb	w8, [x19, #6]
  40549c:	tbz	w0, #0, 4054b4 <ferror@plt+0x37b4>
  4054a0:	and	w8, w8, #0xffffffdf
  4054a4:	cmp	w8, w20, uxtb
  4054a8:	b.eq	4054bc <ferror@plt+0x37bc>  // b.none
  4054ac:	mov	w0, wzr
  4054b0:	b	4054d4 <ferror@plt+0x37d4>
  4054b4:	cmp	w8, w20, uxtb
  4054b8:	b.ne	4054ac <ferror@plt+0x37ac>  // b.any
  4054bc:	tst	w20, #0xff
  4054c0:	b.eq	4054d0 <ferror@plt+0x37d0>  // b.none
  4054c4:	mov	x0, x19
  4054c8:	bl	4054e0 <ferror@plt+0x37e0>
  4054cc:	b	4054d4 <ferror@plt+0x37d4>
  4054d0:	mov	w0, #0x1                   	// #1
  4054d4:	ldp	x20, x19, [sp, #16]
  4054d8:	ldp	x29, x30, [sp], #32
  4054dc:	ret
  4054e0:	stp	x29, x30, [sp, #-32]!
  4054e4:	str	x19, [sp, #16]
  4054e8:	mov	x19, x0
  4054ec:	mov	w0, wzr
  4054f0:	mov	x29, sp
  4054f4:	bl	406718 <_obstack_memory_used@@Base+0x1d0>
  4054f8:	ldrb	w8, [x19, #7]
  4054fc:	tbz	w0, #0, 405510 <ferror@plt+0x3810>
  405500:	tst	w8, #0xffffffdf
  405504:	b.eq	405514 <ferror@plt+0x3814>  // b.none
  405508:	mov	w0, wzr
  40550c:	b	405518 <ferror@plt+0x3818>
  405510:	cbnz	w8, 405508 <ferror@plt+0x3808>
  405514:	mov	w0, #0x1                   	// #1
  405518:	ldr	x19, [sp, #16]
  40551c:	ldp	x29, x30, [sp], #32
  405520:	ret
  405524:	stp	x29, x30, [sp, #-48]!
  405528:	str	x21, [sp, #16]
  40552c:	stp	x20, x19, [sp, #32]
  405530:	adrp	x20, 401000 <mbrtowc@plt-0x8e0>
  405534:	adrp	x21, 401000 <mbrtowc@plt-0x8e0>
  405538:	add	x20, x20, #0xa00
  40553c:	add	x21, x21, #0xbd0
  405540:	mov	x19, x0
  405544:	add	x0, x0, #0x18
  405548:	mov	x1, xzr
  40554c:	mov	x2, xzr
  405550:	mov	x3, x20
  405554:	mov	x4, x21
  405558:	mov	x29, sp
  40555c:	stp	xzr, xzr, [x19]
  405560:	str	xzr, [x19, #16]
  405564:	bl	406228 <_obstack_begin@@Base>
  405568:	add	x0, x19, #0x70
  40556c:	mov	x1, xzr
  405570:	mov	x2, xzr
  405574:	mov	x3, x20
  405578:	mov	x4, x21
  40557c:	bl	406228 <_obstack_begin@@Base>
  405580:	add	x0, x19, #0xc8
  405584:	mov	x1, xzr
  405588:	mov	x2, xzr
  40558c:	mov	x3, x20
  405590:	mov	x4, x21
  405594:	bl	406228 <_obstack_begin@@Base>
  405598:	ldp	x20, x19, [sp, #32]
  40559c:	ldr	x21, [sp, #16]
  4055a0:	ldp	x29, x30, [sp], #48
  4055a4:	ret
  4055a8:	stp	x29, x30, [sp, #-32]!
  4055ac:	str	x19, [sp, #16]
  4055b0:	mov	x19, x0
  4055b4:	add	x0, x0, #0x18
  4055b8:	mov	x1, xzr
  4055bc:	mov	x29, sp
  4055c0:	bl	4064c0 <_obstack_free@@Base>
  4055c4:	add	x0, x19, #0x70
  4055c8:	mov	x1, xzr
  4055cc:	bl	4064c0 <_obstack_free@@Base>
  4055d0:	add	x0, x19, #0xc8
  4055d4:	mov	x1, xzr
  4055d8:	bl	4064c0 <_obstack_free@@Base>
  4055dc:	ldr	x19, [sp, #16]
  4055e0:	ldp	x29, x30, [sp], #32
  4055e4:	ret
  4055e8:	stp	x29, x30, [sp, #-48]!
  4055ec:	stp	x22, x21, [sp, #16]
  4055f0:	stp	x20, x19, [sp, #32]
  4055f4:	mov	x29, sp
  4055f8:	mov	x20, x1
  4055fc:	mov	x19, x0
  405600:	bl	401a70 <fgetc@plt>
  405604:	cmn	w0, #0x1
  405608:	b.eq	405668 <ferror@plt+0x3968>  // b.none
  40560c:	mov	w22, w0
  405610:	add	x21, x20, #0x18
  405614:	b	405640 <ferror@plt+0x3940>
  405618:	ldr	x8, [x20, #48]
  40561c:	add	x9, x8, #0x1
  405620:	str	x9, [x20, #48]
  405624:	strb	w22, [x8]
  405628:	cbz	w22, 40565c <ferror@plt+0x395c>
  40562c:	mov	x0, x19
  405630:	bl	401a70 <fgetc@plt>
  405634:	mov	w22, w0
  405638:	cmn	w0, #0x1
  40563c:	b.eq	405668 <ferror@plt+0x3968>  // b.none
  405640:	ldp	x9, x8, [x20, #48]
  405644:	cmp	x8, x9
  405648:	b.ne	405618 <ferror@plt+0x3918>  // b.any
  40564c:	mov	w1, #0x1                   	// #1
  405650:	mov	x0, x21
  405654:	bl	406310 <_obstack_newchunk@@Base>
  405658:	b	405618 <ferror@plt+0x3918>
  40565c:	mov	x0, x20
  405660:	bl	405790 <ferror@plt+0x3a90>
  405664:	b	40562c <ferror@plt+0x392c>
  405668:	ldp	x9, x8, [x20, #40]
  40566c:	cmp	x8, x9
  405670:	b.eq	4056a4 <ferror@plt+0x39a4>  // b.none
  405674:	ldr	x9, [x20, #56]
  405678:	cmp	x9, x8
  40567c:	b.ne	40568c <ferror@plt+0x398c>  // b.any
  405680:	add	x0, x20, #0x18
  405684:	mov	w1, #0x1                   	// #1
  405688:	bl	406310 <_obstack_newchunk@@Base>
  40568c:	ldr	x8, [x20, #48]
  405690:	mov	x0, x20
  405694:	add	x9, x8, #0x1
  405698:	str	x9, [x20, #48]
  40569c:	strb	wzr, [x8]
  4056a0:	bl	405790 <ferror@plt+0x3a90>
  4056a4:	ldp	x9, x8, [x20, #136]
  4056a8:	sub	x8, x8, x9
  4056ac:	cmp	x8, #0x7
  4056b0:	b.hi	4056c0 <ferror@plt+0x39c0>  // b.pmore
  4056b4:	add	x0, x20, #0x70
  4056b8:	mov	w1, #0x8                   	// #8
  4056bc:	bl	406310 <_obstack_newchunk@@Base>
  4056c0:	ldr	x8, [x20, #136]
  4056c4:	str	xzr, [x8]
  4056c8:	ldp	x8, x9, [x20, #128]
  4056cc:	add	x9, x9, #0x8
  4056d0:	cmp	x9, x8
  4056d4:	str	x9, [x20, #136]
  4056d8:	b.ne	4056e8 <ferror@plt+0x39e8>  // b.any
  4056dc:	ldrb	w9, [x20, #192]
  4056e0:	orr	w9, w9, #0x2
  4056e4:	strb	w9, [x20, #192]
  4056e8:	ldr	x10, [x20, #160]
  4056ec:	ldp	x11, x9, [x20, #136]
  4056f0:	ldr	x12, [x20, #120]
  4056f4:	add	x11, x10, x11
  4056f8:	bic	x10, x11, x10
  4056fc:	sub	x11, x10, x12
  405700:	sub	x12, x9, x12
  405704:	cmp	x11, x12
  405708:	str	x10, [x20, #136]
  40570c:	b.ls	405714 <ferror@plt+0x3a14>  // b.plast
  405710:	str	x9, [x20, #136]
  405714:	ldp	x9, x11, [x20, #216]
  405718:	ldr	x10, [x20, #136]
  40571c:	str	x8, [x20, #8]
  405720:	cmp	x11, x9
  405724:	str	x10, [x20, #128]
  405728:	b.ne	405738 <ferror@plt+0x3a38>  // b.any
  40572c:	ldrb	w8, [x20, #280]
  405730:	orr	w8, w8, #0x2
  405734:	strb	w8, [x20, #280]
  405738:	ldr	x10, [x20, #248]
  40573c:	ldp	x11, x8, [x20, #224]
  405740:	ldr	x12, [x20, #208]
  405744:	add	x11, x10, x11
  405748:	bic	x10, x11, x10
  40574c:	sub	x11, x10, x12
  405750:	sub	x12, x8, x12
  405754:	cmp	x11, x12
  405758:	str	x10, [x20, #224]
  40575c:	b.ls	405764 <ferror@plt+0x3a64>  // b.plast
  405760:	str	x8, [x20, #224]
  405764:	ldr	x8, [x20, #224]
  405768:	mov	x0, x19
  40576c:	str	x9, [x20, #16]
  405770:	str	x8, [x20, #216]
  405774:	bl	401d00 <ferror@plt>
  405778:	ldp	x20, x19, [sp, #32]
  40577c:	ldp	x22, x21, [sp, #16]
  405780:	cmp	w0, #0x0
  405784:	cset	w0, eq  // eq = none
  405788:	ldp	x29, x30, [sp], #48
  40578c:	ret
  405790:	sub	sp, sp, #0x30
  405794:	stp	x29, x30, [sp, #16]
  405798:	stp	x20, x19, [sp, #32]
  40579c:	ldp	x20, x8, [x0, #40]
  4057a0:	mov	x19, x0
  4057a4:	add	x29, sp, #0x10
  4057a8:	mvn	x9, x20
  4057ac:	add	x9, x8, x9
  4057b0:	str	x9, [sp, #8]
  4057b4:	ldr	x9, [x0, #48]
  4057b8:	cmp	x9, x20
  4057bc:	b.ne	4057cc <ferror@plt+0x3acc>  // b.any
  4057c0:	ldrb	w9, [x19, #104]
  4057c4:	orr	w9, w9, #0x2
  4057c8:	strb	w9, [x19, #104]
  4057cc:	ldr	x10, [x19, #72]
  4057d0:	ldr	x11, [x19, #32]
  4057d4:	ldr	x9, [x19, #56]
  4057d8:	add	x8, x10, x8
  4057dc:	bic	x8, x8, x10
  4057e0:	sub	x10, x8, x11
  4057e4:	sub	x11, x9, x11
  4057e8:	cmp	x10, x11
  4057ec:	str	x8, [x19, #48]
  4057f0:	b.ls	4057f8 <ferror@plt+0x3af8>  // b.plast
  4057f4:	str	x9, [x19, #48]
  4057f8:	ldp	x9, x8, [x19, #136]
  4057fc:	ldr	x10, [x19, #48]
  405800:	sub	x8, x8, x9
  405804:	cmp	x8, #0x7
  405808:	str	x10, [x19, #40]
  40580c:	b.hi	40581c <ferror@plt+0x3b1c>  // b.pmore
  405810:	add	x0, x19, #0x70
  405814:	mov	w1, #0x8                   	// #8
  405818:	bl	406310 <_obstack_newchunk@@Base>
  40581c:	ldr	x8, [x19, #136]
  405820:	str	x20, [x8]
  405824:	ldp	x10, x9, [x19, #224]
  405828:	ldr	x8, [x19, #136]
  40582c:	sub	x9, x9, x10
  405830:	add	x8, x8, #0x8
  405834:	cmp	x9, #0x7
  405838:	str	x8, [x19, #136]
  40583c:	b.hi	40584c <ferror@plt+0x3b4c>  // b.pmore
  405840:	add	x0, x19, #0xc8
  405844:	mov	w1, #0x8                   	// #8
  405848:	bl	406310 <_obstack_newchunk@@Base>
  40584c:	ldr	x8, [x19, #224]
  405850:	ldr	x9, [sp, #8]
  405854:	str	x9, [x8]
  405858:	ldr	x8, [x19, #224]
  40585c:	ldr	x9, [x19]
  405860:	add	x8, x8, #0x8
  405864:	add	x9, x9, #0x1
  405868:	str	x8, [x19, #224]
  40586c:	str	x9, [x19]
  405870:	ldp	x20, x19, [sp, #32]
  405874:	ldp	x29, x30, [sp, #16]
  405878:	add	sp, sp, #0x30
  40587c:	ret
  405880:	stp	x29, x30, [sp, #-64]!
  405884:	stp	x24, x23, [sp, #16]
  405888:	stp	x22, x21, [sp, #32]
  40588c:	stp	x20, x19, [sp, #48]
  405890:	mov	x19, x2
  405894:	mov	x20, x1
  405898:	mov	w21, w0
  40589c:	mov	w24, #0x7ff00000            	// #2146435072
  4058a0:	mov	x29, sp
  4058a4:	b	4058b4 <ferror@plt+0x3bb4>
  4058a8:	mov	w8, #0x1                   	// #1
  4058ac:	mov	x22, x23
  4058b0:	cbnz	w8, 40590c <ferror@plt+0x3c0c>
  4058b4:	mov	w0, w21
  4058b8:	mov	x1, x20
  4058bc:	mov	x2, x19
  4058c0:	bl	401c20 <read@plt>
  4058c4:	mov	x23, x0
  4058c8:	tbz	x0, #63, 4058a8 <ferror@plt+0x3ba8>
  4058cc:	bl	401cb0 <__errno_location@plt>
  4058d0:	ldr	w8, [x0]
  4058d4:	cmp	w8, #0x4
  4058d8:	b.ne	4058e4 <ferror@plt+0x3be4>  // b.any
  4058dc:	mov	w8, wzr
  4058e0:	b	4058b0 <ferror@plt+0x3bb0>
  4058e4:	cmp	w8, #0x16
  4058e8:	cset	w8, eq  // eq = none
  4058ec:	cmp	x19, x24
  4058f0:	cset	w9, hi  // hi = pmore
  4058f4:	and	w10, w9, w8
  4058f8:	tst	w9, w8
  4058fc:	csel	x19, x24, x19, ne  // ne = any
  405900:	csel	x22, x22, x23, ne  // ne = any
  405904:	eor	w8, w10, #0x1
  405908:	b	4058b0 <ferror@plt+0x3bb0>
  40590c:	mov	x0, x22
  405910:	ldp	x20, x19, [sp, #48]
  405914:	ldp	x22, x21, [sp, #32]
  405918:	ldp	x24, x23, [sp, #16]
  40591c:	ldp	x29, x30, [sp], #64
  405920:	ret
  405924:	sub	sp, sp, #0x50
  405928:	str	x21, [sp, #48]
  40592c:	stp	x20, x19, [sp, #64]
  405930:	mov	x21, x5
  405934:	mov	x20, x4
  405938:	mov	x5, x3
  40593c:	mov	x4, x2
  405940:	mov	x19, x0
  405944:	stp	x29, x30, [sp, #32]
  405948:	add	x29, sp, #0x20
  40594c:	cbz	x1, 40596c <ferror@plt+0x3c6c>
  405950:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  405954:	mov	x3, x1
  405958:	add	x2, x2, #0x4a1
  40595c:	mov	w1, #0x1                   	// #1
  405960:	mov	x0, x19
  405964:	bl	401b90 <__fprintf_chk@plt>
  405968:	b	405988 <ferror@plt+0x3c88>
  40596c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  405970:	add	x2, x2, #0x4ad
  405974:	mov	w1, #0x1                   	// #1
  405978:	mov	x0, x19
  40597c:	mov	x3, x4
  405980:	mov	x4, x5
  405984:	bl	401b90 <__fprintf_chk@plt>
  405988:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  40598c:	add	x1, x1, #0x4b4
  405990:	mov	w2, #0x5                   	// #5
  405994:	mov	x0, xzr
  405998:	bl	401c60 <dcgettext@plt>
  40599c:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  4059a0:	mov	x3, x0
  4059a4:	add	x2, x2, #0x77f
  4059a8:	mov	w1, #0x1                   	// #1
  4059ac:	mov	w4, #0x7e3                 	// #2019
  4059b0:	mov	x0, x19
  4059b4:	bl	401b90 <__fprintf_chk@plt>
  4059b8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  4059bc:	add	x1, x1, #0x4b8
  4059c0:	mov	w2, #0x5                   	// #5
  4059c4:	mov	x0, xzr
  4059c8:	bl	401c60 <dcgettext@plt>
  4059cc:	mov	x1, x19
  4059d0:	bl	401c70 <fputs_unlocked@plt>
  4059d4:	cmp	x21, #0x9
  4059d8:	b.hi	405a20 <ferror@plt+0x3d20>  // b.pmore
  4059dc:	adrp	x8, 407000 <_obstack_memory_used@@Base+0xab8>
  4059e0:	add	x8, x8, #0x497
  4059e4:	adr	x9, 4059f4 <ferror@plt+0x3cf4>
  4059e8:	ldrb	w10, [x8, x21]
  4059ec:	add	x9, x9, x10, lsl #2
  4059f0:	br	x9
  4059f4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  4059f8:	add	x1, x1, #0x584
  4059fc:	mov	w2, #0x5                   	// #5
  405a00:	mov	x0, xzr
  405a04:	bl	401c60 <dcgettext@plt>
  405a08:	ldr	x3, [x20]
  405a0c:	mov	x2, x0
  405a10:	mov	w1, #0x1                   	// #1
  405a14:	mov	x0, x19
  405a18:	bl	401b90 <__fprintf_chk@plt>
  405a1c:	b	405bb8 <ferror@plt+0x3eb8>
  405a20:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405a24:	add	x1, x1, #0x6c3
  405a28:	b	405b4c <ferror@plt+0x3e4c>
  405a2c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405a30:	add	x1, x1, #0x594
  405a34:	mov	w2, #0x5                   	// #5
  405a38:	mov	x0, xzr
  405a3c:	bl	401c60 <dcgettext@plt>
  405a40:	ldp	x3, x4, [x20]
  405a44:	mov	x2, x0
  405a48:	mov	w1, #0x1                   	// #1
  405a4c:	mov	x0, x19
  405a50:	bl	401b90 <__fprintf_chk@plt>
  405a54:	b	405bb8 <ferror@plt+0x3eb8>
  405a58:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405a5c:	add	x1, x1, #0x5ab
  405a60:	mov	w2, #0x5                   	// #5
  405a64:	mov	x0, xzr
  405a68:	bl	401c60 <dcgettext@plt>
  405a6c:	ldp	x3, x4, [x20]
  405a70:	ldr	x5, [x20, #16]
  405a74:	mov	x2, x0
  405a78:	mov	w1, #0x1                   	// #1
  405a7c:	mov	x0, x19
  405a80:	bl	401b90 <__fprintf_chk@plt>
  405a84:	b	405bb8 <ferror@plt+0x3eb8>
  405a88:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405a8c:	add	x1, x1, #0x5c7
  405a90:	mov	w2, #0x5                   	// #5
  405a94:	mov	x0, xzr
  405a98:	bl	401c60 <dcgettext@plt>
  405a9c:	ldp	x3, x4, [x20]
  405aa0:	ldp	x5, x6, [x20, #16]
  405aa4:	mov	x2, x0
  405aa8:	mov	w1, #0x1                   	// #1
  405aac:	mov	x0, x19
  405ab0:	bl	401b90 <__fprintf_chk@plt>
  405ab4:	b	405bb8 <ferror@plt+0x3eb8>
  405ab8:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405abc:	add	x1, x1, #0x5e7
  405ac0:	mov	w2, #0x5                   	// #5
  405ac4:	mov	x0, xzr
  405ac8:	bl	401c60 <dcgettext@plt>
  405acc:	ldp	x3, x4, [x20]
  405ad0:	ldp	x5, x6, [x20, #16]
  405ad4:	ldr	x7, [x20, #32]
  405ad8:	mov	x2, x0
  405adc:	mov	w1, #0x1                   	// #1
  405ae0:	b	405bb0 <ferror@plt+0x3eb0>
  405ae4:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405ae8:	add	x1, x1, #0x60b
  405aec:	mov	w2, #0x5                   	// #5
  405af0:	mov	x0, xzr
  405af4:	bl	401c60 <dcgettext@plt>
  405af8:	ldp	x3, x4, [x20]
  405afc:	ldp	x5, x6, [x20, #16]
  405b00:	ldp	x7, x8, [x20, #32]
  405b04:	mov	x2, x0
  405b08:	b	405b38 <ferror@plt+0x3e38>
  405b0c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405b10:	add	x1, x1, #0x633
  405b14:	mov	w2, #0x5                   	// #5
  405b18:	mov	x0, xzr
  405b1c:	bl	401c60 <dcgettext@plt>
  405b20:	ldr	x9, [x20, #48]
  405b24:	ldp	x3, x4, [x20]
  405b28:	ldp	x5, x6, [x20, #16]
  405b2c:	ldp	x7, x8, [x20, #32]
  405b30:	mov	x2, x0
  405b34:	str	x9, [sp, #8]
  405b38:	mov	w1, #0x1                   	// #1
  405b3c:	str	x8, [sp]
  405b40:	b	405bb0 <ferror@plt+0x3eb0>
  405b44:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405b48:	add	x1, x1, #0x68f
  405b4c:	mov	w2, #0x5                   	// #5
  405b50:	mov	x0, xzr
  405b54:	bl	401c60 <dcgettext@plt>
  405b58:	ldp	x3, x4, [x20]
  405b5c:	ldp	x5, x6, [x20, #16]
  405b60:	ldr	x7, [x20, #32]
  405b64:	ldur	q0, [x20, #40]
  405b68:	ldp	x8, x9, [x20, #56]
  405b6c:	mov	x2, x0
  405b70:	str	x9, [sp, #24]
  405b74:	b	405ba4 <ferror@plt+0x3ea4>
  405b78:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405b7c:	add	x1, x1, #0x65f
  405b80:	mov	w2, #0x5                   	// #5
  405b84:	mov	x0, xzr
  405b88:	bl	401c60 <dcgettext@plt>
  405b8c:	ldp	x3, x4, [x20]
  405b90:	ldp	x5, x6, [x20, #16]
  405b94:	ldr	x7, [x20, #32]
  405b98:	ldur	q0, [x20, #40]
  405b9c:	ldr	x8, [x20, #56]
  405ba0:	mov	x2, x0
  405ba4:	mov	w1, #0x1                   	// #1
  405ba8:	str	x8, [sp, #16]
  405bac:	str	q0, [sp]
  405bb0:	mov	x0, x19
  405bb4:	bl	401b90 <__fprintf_chk@plt>
  405bb8:	ldp	x20, x19, [sp, #64]
  405bbc:	ldr	x21, [sp, #48]
  405bc0:	ldp	x29, x30, [sp, #32]
  405bc4:	add	sp, sp, #0x50
  405bc8:	ret
  405bcc:	stp	x29, x30, [sp, #-16]!
  405bd0:	mov	x8, xzr
  405bd4:	mov	x29, sp
  405bd8:	ldr	x9, [x4, x8, lsl #3]
  405bdc:	add	x8, x8, #0x1
  405be0:	cbnz	x9, 405bd8 <ferror@plt+0x3ed8>
  405be4:	sub	x5, x8, #0x1
  405be8:	bl	405924 <ferror@plt+0x3c24>
  405bec:	ldp	x29, x30, [sp], #16
  405bf0:	ret
  405bf4:	sub	sp, sp, #0x60
  405bf8:	mov	x5, xzr
  405bfc:	mov	x8, sp
  405c00:	stp	x29, x30, [sp, #80]
  405c04:	add	x29, sp, #0x50
  405c08:	ldrsw	x9, [x4, #24]
  405c0c:	tbz	w9, #31, 405c20 <ferror@plt+0x3f20>
  405c10:	add	w10, w9, #0x8
  405c14:	cmp	w10, #0x0
  405c18:	str	w10, [x4, #24]
  405c1c:	b.le	405c48 <ferror@plt+0x3f48>
  405c20:	ldr	x9, [x4]
  405c24:	add	x10, x9, #0x8
  405c28:	str	x10, [x4]
  405c2c:	ldr	x9, [x9]
  405c30:	str	x9, [x8, x5, lsl #3]
  405c34:	cbz	x9, 405c54 <ferror@plt+0x3f54>
  405c38:	add	x5, x5, #0x1
  405c3c:	cmp	x5, #0xa
  405c40:	b.ne	405c08 <ferror@plt+0x3f08>  // b.any
  405c44:	b	405c54 <ferror@plt+0x3f54>
  405c48:	ldr	x10, [x4, #8]
  405c4c:	add	x9, x10, x9
  405c50:	b	405c2c <ferror@plt+0x3f2c>
  405c54:	mov	x4, sp
  405c58:	bl	405924 <ferror@plt+0x3c24>
  405c5c:	ldp	x29, x30, [sp, #80]
  405c60:	add	sp, sp, #0x60
  405c64:	ret
  405c68:	sub	sp, sp, #0xf0
  405c6c:	stp	x29, x30, [sp, #224]
  405c70:	add	x29, sp, #0xe0
  405c74:	mov	x8, #0xffffffffffffffe0    	// #-32
  405c78:	mov	x9, sp
  405c7c:	sub	x10, x29, #0x60
  405c80:	movk	x8, #0xff80, lsl #32
  405c84:	add	x11, x29, #0x10
  405c88:	add	x9, x9, #0x80
  405c8c:	add	x10, x10, #0x20
  405c90:	stp	x9, x8, [x29, #-16]
  405c94:	stp	x11, x10, [x29, #-32]
  405c98:	stp	x4, x5, [x29, #-96]
  405c9c:	stp	x6, x7, [x29, #-80]
  405ca0:	stp	q0, q1, [sp]
  405ca4:	ldp	q0, q1, [x29, #-32]
  405ca8:	sub	x4, x29, #0x40
  405cac:	stp	q2, q3, [sp, #32]
  405cb0:	stp	q4, q5, [sp, #64]
  405cb4:	stp	q6, q7, [sp, #96]
  405cb8:	stp	q0, q1, [x29, #-64]
  405cbc:	bl	405bf4 <ferror@plt+0x3ef4>
  405cc0:	ldp	x29, x30, [sp, #224]
  405cc4:	add	sp, sp, #0xf0
  405cc8:	ret
  405ccc:	stp	x29, x30, [sp, #-16]!
  405cd0:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405cd4:	add	x1, x1, #0x6ff
  405cd8:	mov	w2, #0x5                   	// #5
  405cdc:	mov	x0, xzr
  405ce0:	mov	x29, sp
  405ce4:	bl	401c60 <dcgettext@plt>
  405ce8:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  405cec:	mov	x1, x0
  405cf0:	add	x2, x2, #0x714
  405cf4:	mov	w0, #0x1                   	// #1
  405cf8:	bl	401a80 <__printf_chk@plt>
  405cfc:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405d00:	add	x1, x1, #0x72a
  405d04:	mov	w2, #0x5                   	// #5
  405d08:	mov	x0, xzr
  405d0c:	bl	401c60 <dcgettext@plt>
  405d10:	adrp	x2, 406000 <ferror@plt+0x4300>
  405d14:	adrp	x3, 407000 <_obstack_memory_used@@Base+0xab8>
  405d18:	mov	x1, x0
  405d1c:	add	x2, x2, #0xf8b
  405d20:	add	x3, x3, #0x1a6
  405d24:	mov	w0, #0x1                   	// #1
  405d28:	bl	401a80 <__printf_chk@plt>
  405d2c:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405d30:	add	x1, x1, #0x73e
  405d34:	mov	w2, #0x5                   	// #5
  405d38:	mov	x0, xzr
  405d3c:	bl	401c60 <dcgettext@plt>
  405d40:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  405d44:	ldr	x1, [x8, #696]
  405d48:	bl	401c70 <fputs_unlocked@plt>
  405d4c:	ldp	x29, x30, [sp], #16
  405d50:	ret
  405d54:	stp	x29, x30, [sp, #-16]!
  405d58:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  405d5c:	udiv	x8, x8, x1
  405d60:	cmp	x8, x0
  405d64:	mov	x29, sp
  405d68:	b.cc	405d7c <ferror@plt+0x407c>  // b.lo, b.ul, b.last
  405d6c:	mul	x0, x1, x0
  405d70:	bl	405d80 <ferror@plt+0x4080>
  405d74:	ldp	x29, x30, [sp], #16
  405d78:	ret
  405d7c:	bl	405f84 <ferror@plt+0x4284>
  405d80:	stp	x29, x30, [sp, #-32]!
  405d84:	str	x19, [sp, #16]
  405d88:	mov	x29, sp
  405d8c:	mov	x19, x0
  405d90:	bl	401a00 <malloc@plt>
  405d94:	cbz	x19, 405d9c <ferror@plt+0x409c>
  405d98:	cbz	x0, 405da8 <ferror@plt+0x40a8>
  405d9c:	ldr	x19, [sp, #16]
  405da0:	ldp	x29, x30, [sp], #32
  405da4:	ret
  405da8:	bl	405f84 <ferror@plt+0x4284>
  405dac:	stp	x29, x30, [sp, #-16]!
  405db0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  405db4:	udiv	x8, x8, x2
  405db8:	cmp	x8, x1
  405dbc:	mov	x29, sp
  405dc0:	b.cc	405dd4 <ferror@plt+0x40d4>  // b.lo, b.ul, b.last
  405dc4:	mul	x1, x2, x1
  405dc8:	bl	405dd8 <ferror@plt+0x40d8>
  405dcc:	ldp	x29, x30, [sp], #16
  405dd0:	ret
  405dd4:	bl	405f84 <ferror@plt+0x4284>
  405dd8:	stp	x29, x30, [sp, #-32]!
  405ddc:	str	x19, [sp, #16]
  405de0:	mov	x19, x1
  405de4:	mov	x29, sp
  405de8:	cbz	x0, 405dfc <ferror@plt+0x40fc>
  405dec:	cbnz	x19, 405dfc <ferror@plt+0x40fc>
  405df0:	bl	401bd0 <free@plt>
  405df4:	mov	x0, xzr
  405df8:	b	405e0c <ferror@plt+0x410c>
  405dfc:	mov	x1, x19
  405e00:	bl	401ad0 <realloc@plt>
  405e04:	cbz	x19, 405e0c <ferror@plt+0x410c>
  405e08:	cbz	x0, 405e18 <ferror@plt+0x4118>
  405e0c:	ldr	x19, [sp, #16]
  405e10:	ldp	x29, x30, [sp], #32
  405e14:	ret
  405e18:	bl	405f84 <ferror@plt+0x4284>
  405e1c:	stp	x29, x30, [sp, #-16]!
  405e20:	ldr	x8, [x1]
  405e24:	mov	x29, sp
  405e28:	cbz	x0, 405e4c <ferror@plt+0x414c>
  405e2c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  405e30:	movk	x9, #0x5554
  405e34:	udiv	x9, x9, x2
  405e38:	cmp	x9, x8
  405e3c:	b.ls	405e84 <ferror@plt+0x4184>  // b.plast
  405e40:	add	x8, x8, x8, lsr #1
  405e44:	add	x8, x8, #0x1
  405e48:	b	405e70 <ferror@plt+0x4170>
  405e4c:	cbnz	x8, 405e60 <ferror@plt+0x4160>
  405e50:	mov	w8, #0x80                  	// #128
  405e54:	udiv	x8, x8, x2
  405e58:	cmp	x2, #0x80
  405e5c:	cinc	x8, x8, hi  // hi = pmore
  405e60:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  405e64:	udiv	x9, x9, x2
  405e68:	cmp	x9, x8
  405e6c:	b.cc	405e84 <ferror@plt+0x4184>  // b.lo, b.ul, b.last
  405e70:	str	x8, [x1]
  405e74:	mul	x1, x8, x2
  405e78:	bl	405dd8 <ferror@plt+0x40d8>
  405e7c:	ldp	x29, x30, [sp], #16
  405e80:	ret
  405e84:	bl	405f84 <ferror@plt+0x4284>
  405e88:	stp	x29, x30, [sp, #-16]!
  405e8c:	mov	x29, sp
  405e90:	bl	405d80 <ferror@plt+0x4080>
  405e94:	ldp	x29, x30, [sp], #16
  405e98:	ret
  405e9c:	stp	x29, x30, [sp, #-16]!
  405ea0:	mov	w2, #0x1                   	// #1
  405ea4:	mov	x29, sp
  405ea8:	bl	405e1c <ferror@plt+0x411c>
  405eac:	ldp	x29, x30, [sp], #16
  405eb0:	ret
  405eb4:	stp	x29, x30, [sp, #-32]!
  405eb8:	stp	x20, x19, [sp, #16]
  405ebc:	mov	x29, sp
  405ec0:	mov	x19, x0
  405ec4:	bl	405d80 <ferror@plt+0x4080>
  405ec8:	mov	w1, wzr
  405ecc:	mov	x2, x19
  405ed0:	mov	x20, x0
  405ed4:	bl	401a90 <memset@plt>
  405ed8:	mov	x0, x20
  405edc:	ldp	x20, x19, [sp, #16]
  405ee0:	ldp	x29, x30, [sp], #32
  405ee4:	ret
  405ee8:	stp	x29, x30, [sp, #-16]!
  405eec:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  405ef0:	udiv	x8, x8, x1
  405ef4:	cmp	x8, x0
  405ef8:	mov	x29, sp
  405efc:	b.cc	405f10 <ferror@plt+0x4210>  // b.lo, b.ul, b.last
  405f00:	bl	405fe0 <ferror@plt+0x42e0>
  405f04:	cbz	x0, 405f10 <ferror@plt+0x4210>
  405f08:	ldp	x29, x30, [sp], #16
  405f0c:	ret
  405f10:	bl	405f84 <ferror@plt+0x4284>
  405f14:	stp	x29, x30, [sp, #-48]!
  405f18:	stp	x20, x19, [sp, #32]
  405f1c:	mov	x20, x0
  405f20:	mov	x0, x1
  405f24:	str	x21, [sp, #16]
  405f28:	mov	x29, sp
  405f2c:	mov	x19, x1
  405f30:	bl	405d80 <ferror@plt+0x4080>
  405f34:	mov	x1, x20
  405f38:	mov	x2, x19
  405f3c:	mov	x21, x0
  405f40:	bl	4018f0 <memcpy@plt>
  405f44:	mov	x0, x21
  405f48:	ldp	x20, x19, [sp, #32]
  405f4c:	ldr	x21, [sp, #16]
  405f50:	ldp	x29, x30, [sp], #48
  405f54:	ret
  405f58:	stp	x29, x30, [sp, #-32]!
  405f5c:	str	x19, [sp, #16]
  405f60:	mov	x29, sp
  405f64:	mov	x19, x0
  405f68:	bl	401910 <strlen@plt>
  405f6c:	add	x1, x0, #0x1
  405f70:	mov	x0, x19
  405f74:	bl	405f14 <ferror@plt+0x4214>
  405f78:	ldr	x19, [sp, #16]
  405f7c:	ldp	x29, x30, [sp], #32
  405f80:	ret
  405f84:	stp	x29, x30, [sp, #-32]!
  405f88:	str	x19, [sp, #16]
  405f8c:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  405f90:	ldr	w19, [x8, #560]
  405f94:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  405f98:	add	x1, x1, #0x7ae
  405f9c:	mov	w2, #0x5                   	// #5
  405fa0:	mov	x0, xzr
  405fa4:	mov	x29, sp
  405fa8:	bl	401c60 <dcgettext@plt>
  405fac:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  405fb0:	mov	x3, x0
  405fb4:	add	x2, x2, #0x2c0
  405fb8:	mov	w0, w19
  405fbc:	mov	w1, wzr
  405fc0:	bl	401930 <error@plt>
  405fc4:	bl	401b30 <abort@plt>
  405fc8:	ret
  405fcc:	stp	x29, x30, [sp, #-16]!
  405fd0:	mov	x29, sp
  405fd4:	bl	4065cc <_obstack_memory_used@@Base+0x84>
  405fd8:	ldp	x29, x30, [sp], #16
  405fdc:	ret
  405fe0:	stp	x29, x30, [sp, #-16]!
  405fe4:	mov	x8, x1
  405fe8:	mov	w1, #0x1                   	// #1
  405fec:	mov	w9, #0x1                   	// #1
  405ff0:	mov	x29, sp
  405ff4:	cbz	x0, 406028 <ferror@plt+0x4328>
  405ff8:	cbz	x8, 406028 <ferror@plt+0x4328>
  405ffc:	umulh	x10, x8, x0
  406000:	mov	x1, x8
  406004:	mov	x9, x0
  406008:	cbz	x10, 406028 <ferror@plt+0x4328>
  40600c:	bl	401cb0 <__errno_location@plt>
  406010:	mov	x8, x0
  406014:	mov	w9, #0xc                   	// #12
  406018:	mov	x0, xzr
  40601c:	str	w9, [x8]
  406020:	ldp	x29, x30, [sp], #16
  406024:	ret
  406028:	mov	x0, x9
  40602c:	bl	401ab0 <calloc@plt>
  406030:	ldp	x29, x30, [sp], #16
  406034:	ret
  406038:	stp	x29, x30, [sp, #-32]!
  40603c:	stp	x20, x19, [sp, #16]
  406040:	mov	x29, sp
  406044:	mov	x19, x0
  406048:	bl	4019b0 <fileno@plt>
  40604c:	tbnz	w0, #31, 406090 <ferror@plt+0x4390>
  406050:	mov	x0, x19
  406054:	bl	401c80 <__freading@plt>
  406058:	cbz	w0, 406078 <ferror@plt+0x4378>
  40605c:	mov	x0, x19
  406060:	bl	4019b0 <fileno@plt>
  406064:	mov	w2, #0x1                   	// #1
  406068:	mov	x1, xzr
  40606c:	bl	401990 <lseek@plt>
  406070:	cmn	x0, #0x1
  406074:	b.eq	40609c <ferror@plt+0x439c>  // b.none
  406078:	mov	x0, x19
  40607c:	bl	4060c4 <ferror@plt+0x43c4>
  406080:	cbz	w0, 40609c <ferror@plt+0x439c>
  406084:	bl	401cb0 <__errno_location@plt>
  406088:	ldr	w20, [x0]
  40608c:	b	4060a0 <ferror@plt+0x43a0>
  406090:	mov	x0, x19
  406094:	bl	4019c0 <fclose@plt>
  406098:	b	4060b8 <ferror@plt+0x43b8>
  40609c:	mov	w20, wzr
  4060a0:	mov	x0, x19
  4060a4:	bl	4019c0 <fclose@plt>
  4060a8:	cbz	w20, 4060b8 <ferror@plt+0x43b8>
  4060ac:	bl	401cb0 <__errno_location@plt>
  4060b0:	str	w20, [x0]
  4060b4:	mov	w0, #0xffffffff            	// #-1
  4060b8:	ldp	x20, x19, [sp, #16]
  4060bc:	ldp	x29, x30, [sp], #32
  4060c0:	ret
  4060c4:	stp	x29, x30, [sp, #-32]!
  4060c8:	str	x19, [sp, #16]
  4060cc:	mov	x19, x0
  4060d0:	mov	x29, sp
  4060d4:	cbz	x0, 4060ec <ferror@plt+0x43ec>
  4060d8:	mov	x0, x19
  4060dc:	bl	401c80 <__freading@plt>
  4060e0:	cbz	w0, 4060ec <ferror@plt+0x43ec>
  4060e4:	mov	x0, x19
  4060e8:	bl	406100 <ferror@plt+0x4400>
  4060ec:	mov	x0, x19
  4060f0:	bl	401c10 <fflush@plt>
  4060f4:	ldr	x19, [sp, #16]
  4060f8:	ldp	x29, x30, [sp], #32
  4060fc:	ret
  406100:	stp	x29, x30, [sp, #-16]!
  406104:	ldrb	w8, [x0, #1]
  406108:	mov	x29, sp
  40610c:	tbz	w8, #0, 40611c <ferror@plt+0x441c>
  406110:	mov	w2, #0x1                   	// #1
  406114:	mov	x1, xzr
  406118:	bl	406124 <ferror@plt+0x4424>
  40611c:	ldp	x29, x30, [sp], #16
  406120:	ret
  406124:	stp	x29, x30, [sp, #-48]!
  406128:	str	x21, [sp, #16]
  40612c:	stp	x20, x19, [sp, #32]
  406130:	ldp	x9, x8, [x0, #8]
  406134:	mov	w20, w2
  406138:	mov	x19, x0
  40613c:	mov	x21, x1
  406140:	cmp	x8, x9
  406144:	mov	x29, sp
  406148:	b.ne	406160 <ferror@plt+0x4460>  // b.any
  40614c:	ldp	x9, x8, [x19, #32]
  406150:	cmp	x8, x9
  406154:	b.ne	406160 <ferror@plt+0x4460>  // b.any
  406158:	ldr	x8, [x19, #72]
  40615c:	cbz	x8, 406180 <ferror@plt+0x4480>
  406160:	mov	x0, x19
  406164:	mov	x1, x21
  406168:	mov	w2, w20
  40616c:	bl	401bc0 <fseeko@plt>
  406170:	ldp	x20, x19, [sp, #32]
  406174:	ldr	x21, [sp, #16]
  406178:	ldp	x29, x30, [sp], #48
  40617c:	ret
  406180:	mov	x0, x19
  406184:	bl	4019b0 <fileno@plt>
  406188:	mov	x1, x21
  40618c:	mov	w2, w20
  406190:	bl	401990 <lseek@plt>
  406194:	cmn	x0, #0x1
  406198:	b.eq	406170 <ferror@plt+0x4470>  // b.none
  40619c:	ldr	w9, [x19]
  4061a0:	mov	x8, x0
  4061a4:	mov	w0, wzr
  4061a8:	str	x8, [x19, #144]
  4061ac:	and	w9, w9, #0xffffffef
  4061b0:	str	w9, [x19]
  4061b4:	b	406170 <ferror@plt+0x4470>
  4061b8:	sub	sp, sp, #0x40
  4061bc:	stp	x29, x30, [sp, #16]
  4061c0:	add	x29, sp, #0x10
  4061c4:	cmp	x0, #0x0
  4061c8:	sub	x8, x29, #0x4
  4061cc:	stp	x20, x19, [sp, #48]
  4061d0:	csel	x20, x8, x0, eq  // eq = none
  4061d4:	mov	x0, x20
  4061d8:	stp	x22, x21, [sp, #32]
  4061dc:	mov	x22, x2
  4061e0:	mov	x19, x1
  4061e4:	bl	4018e0 <mbrtowc@plt>
  4061e8:	mov	x21, x0
  4061ec:	cbz	x22, 406210 <ferror@plt+0x4510>
  4061f0:	cmn	x21, #0x2
  4061f4:	b.cc	406210 <ferror@plt+0x4510>  // b.lo, b.ul, b.last
  4061f8:	mov	w0, wzr
  4061fc:	bl	4067e8 <_obstack_memory_used@@Base+0x2a0>
  406200:	tbnz	w0, #0, 406210 <ferror@plt+0x4510>
  406204:	ldrb	w8, [x19]
  406208:	mov	w21, #0x1                   	// #1
  40620c:	str	w8, [x20]
  406210:	mov	x0, x21
  406214:	ldp	x20, x19, [sp, #48]
  406218:	ldp	x22, x21, [sp, #32]
  40621c:	ldp	x29, x30, [sp, #16]
  406220:	add	sp, sp, #0x40
  406224:	ret

0000000000406228 <_obstack_begin@@Base>:
  406228:	stp	x29, x30, [sp, #-16]!
  40622c:	ldrb	w8, [x0, #80]
  406230:	mov	x29, sp
  406234:	stp	x3, x4, [x0, #56]
  406238:	and	w8, w8, #0xfe
  40623c:	strb	w8, [x0, #80]
  406240:	bl	406250 <_obstack_begin@@Base+0x28>
  406244:	mov	w0, #0x1                   	// #1
  406248:	ldp	x29, x30, [sp], #16
  40624c:	ret
  406250:	stp	x29, x30, [sp, #-48]!
  406254:	cmp	x2, #0x0
  406258:	mov	w8, #0x10                  	// #16
  40625c:	stp	x20, x19, [sp, #32]
  406260:	mov	w9, #0xfe0                 	// #4064
  406264:	csel	x20, x8, x2, eq  // eq = none
  406268:	cmp	x1, #0x0
  40626c:	str	x21, [sp, #16]
  406270:	csel	x1, x9, x1, eq  // eq = none
  406274:	sub	x21, x20, #0x1
  406278:	mov	x29, sp
  40627c:	mov	x19, x0
  406280:	str	x1, [x0]
  406284:	str	x21, [x0, #48]
  406288:	bl	406420 <_obstack_newchunk@@Base+0x110>
  40628c:	str	x0, [x19, #8]
  406290:	cbz	x0, 4062d8 <_obstack_begin@@Base+0xb0>
  406294:	ldr	x10, [x19]
  406298:	add	x8, x0, x21
  40629c:	neg	x9, x20
  4062a0:	add	x8, x8, #0x10
  4062a4:	and	x8, x8, x9
  4062a8:	stp	x8, x8, [x19, #16]
  4062ac:	add	x8, x0, x10
  4062b0:	str	x8, [x0]
  4062b4:	str	x8, [x19, #32]
  4062b8:	str	xzr, [x0, #8]
  4062bc:	ldrb	w8, [x19, #80]
  4062c0:	ldr	x21, [sp, #16]
  4062c4:	and	w8, w8, #0xfffffff9
  4062c8:	strb	w8, [x19, #80]
  4062cc:	ldp	x20, x19, [sp, #32]
  4062d0:	ldp	x29, x30, [sp], #48
  4062d4:	ret
  4062d8:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4062dc:	ldr	x8, [x8, #656]
  4062e0:	blr	x8

00000000004062e4 <_obstack_begin_1@@Base>:
  4062e4:	stp	x29, x30, [sp, #-16]!
  4062e8:	ldrb	w8, [x0, #80]
  4062ec:	mov	x29, sp
  4062f0:	stp	x3, x4, [x0, #56]
  4062f4:	str	x5, [x0, #72]
  4062f8:	orr	w8, w8, #0x1
  4062fc:	strb	w8, [x0, #80]
  406300:	bl	406250 <_obstack_begin@@Base+0x28>
  406304:	mov	w0, #0x1                   	// #1
  406308:	ldp	x29, x30, [sp], #16
  40630c:	ret

0000000000406310 <_obstack_newchunk@@Base>:
  406310:	stp	x29, x30, [sp, #-64]!
  406314:	str	x23, [sp, #16]
  406318:	stp	x22, x21, [sp, #32]
  40631c:	stp	x20, x19, [sp, #48]
  406320:	ldp	x9, x8, [x0, #16]
  406324:	ldr	x10, [x0, #48]
  406328:	ldp	x11, x21, [x0]
  40632c:	mov	x19, x0
  406330:	sub	x20, x8, x9
  406334:	adds	x8, x20, x1
  406338:	lsr	x9, x20, #3
  40633c:	cset	w12, cs  // cs = hs, nlast
  406340:	adds	x10, x8, x10
  406344:	add	x9, x9, #0x64
  406348:	cset	w8, cs  // cs = hs, nlast
  40634c:	adds	x9, x9, x10
  406350:	csel	x9, x10, x9, cs  // cs = hs, nlast
  406354:	cmp	x9, x11
  406358:	mov	x22, xzr
  40635c:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  406360:	mov	x29, sp
  406364:	tbnz	w12, #0, 40637c <_obstack_newchunk@@Base+0x6c>
  406368:	tbnz	w8, #0, 40637c <_obstack_newchunk@@Base+0x6c>
  40636c:	mov	x0, x19
  406370:	mov	x1, x23
  406374:	bl	406420 <_obstack_newchunk@@Base+0x110>
  406378:	mov	x22, x0
  40637c:	cbz	x22, 406414 <_obstack_newchunk@@Base+0x104>
  406380:	add	x8, x22, x23
  406384:	str	x22, [x19, #8]
  406388:	str	x21, [x22, #8]
  40638c:	str	x8, [x19, #32]
  406390:	str	x8, [x22]
  406394:	ldr	x8, [x19, #48]
  406398:	ldr	x1, [x19, #16]
  40639c:	mov	x2, x20
  4063a0:	add	x9, x22, x8
  4063a4:	add	x9, x9, #0x10
  4063a8:	bic	x23, x9, x8
  4063ac:	mov	x0, x23
  4063b0:	bl	4018f0 <memcpy@plt>
  4063b4:	ldrb	w8, [x19, #80]
  4063b8:	tbnz	w8, #1, 4063ec <_obstack_newchunk@@Base+0xdc>
  4063bc:	ldr	x8, [x19, #48]
  4063c0:	ldr	x9, [x19, #16]
  4063c4:	add	x10, x21, x8
  4063c8:	add	x10, x10, #0x10
  4063cc:	bic	x8, x10, x8
  4063d0:	cmp	x9, x8
  4063d4:	b.ne	4063ec <_obstack_newchunk@@Base+0xdc>  // b.any
  4063d8:	ldr	x8, [x21, #8]
  4063dc:	mov	x0, x19
  4063e0:	mov	x1, x21
  4063e4:	str	x8, [x22, #8]
  4063e8:	bl	406458 <_obstack_newchunk@@Base+0x148>
  4063ec:	ldrb	w8, [x19, #80]
  4063f0:	add	x9, x23, x20
  4063f4:	stp	x23, x9, [x19, #16]
  4063f8:	ldr	x23, [sp, #16]
  4063fc:	and	w8, w8, #0xfffffffd
  406400:	strb	w8, [x19, #80]
  406404:	ldp	x20, x19, [sp, #48]
  406408:	ldp	x22, x21, [sp, #32]
  40640c:	ldp	x29, x30, [sp], #64
  406410:	ret
  406414:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  406418:	ldr	x8, [x8, #656]
  40641c:	blr	x8
  406420:	stp	x29, x30, [sp, #-16]!
  406424:	ldrb	w8, [x0, #80]
  406428:	mov	x29, sp
  40642c:	tbnz	w8, #0, 406444 <_obstack_newchunk@@Base+0x134>
  406430:	ldr	x8, [x0, #56]
  406434:	mov	x0, x1
  406438:	blr	x8
  40643c:	ldp	x29, x30, [sp], #16
  406440:	ret
  406444:	ldr	x8, [x0, #56]
  406448:	ldr	x0, [x0, #72]
  40644c:	blr	x8
  406450:	ldp	x29, x30, [sp], #16
  406454:	ret
  406458:	stp	x29, x30, [sp, #-16]!
  40645c:	ldrb	w8, [x0, #80]
  406460:	mov	x29, sp
  406464:	tbnz	w8, #0, 40647c <_obstack_newchunk@@Base+0x16c>
  406468:	ldr	x8, [x0, #64]
  40646c:	mov	x0, x1
  406470:	blr	x8
  406474:	ldp	x29, x30, [sp], #16
  406478:	ret
  40647c:	ldp	x8, x0, [x0, #64]
  406480:	blr	x8
  406484:	ldp	x29, x30, [sp], #16
  406488:	ret

000000000040648c <_obstack_allocated_p@@Base>:
  40648c:	ldr	x8, [x0, #8]
  406490:	b	406498 <_obstack_allocated_p@@Base+0xc>
  406494:	ldr	x8, [x8, #8]
  406498:	cmp	x8, #0x0
  40649c:	cset	w9, ne  // ne = any
  4064a0:	cbz	x8, 4064b8 <_obstack_allocated_p@@Base+0x2c>
  4064a4:	cmp	x8, x1
  4064a8:	b.cs	406494 <_obstack_allocated_p@@Base+0x8>  // b.hs, b.nlast
  4064ac:	ldr	x10, [x8]
  4064b0:	cmp	x10, x1
  4064b4:	b.cc	406494 <_obstack_allocated_p@@Base+0x8>  // b.lo, b.ul, b.last
  4064b8:	and	w0, w9, #0x1
  4064bc:	ret

00000000004064c0 <_obstack_free@@Base>:
  4064c0:	stp	x29, x30, [sp, #-48]!
  4064c4:	stp	x20, x19, [sp, #32]
  4064c8:	ldr	x8, [x0, #8]
  4064cc:	mov	x20, x1
  4064d0:	str	x21, [sp, #16]
  4064d4:	mov	x29, sp
  4064d8:	cbz	x8, 406530 <_obstack_free@@Base+0x70>
  4064dc:	mov	x19, x0
  4064e0:	b	406508 <_obstack_free@@Base+0x48>
  4064e4:	ldr	x21, [x8, #8]
  4064e8:	mov	x0, x19
  4064ec:	mov	x1, x8
  4064f0:	bl	406458 <_obstack_newchunk@@Base+0x148>
  4064f4:	ldrb	w8, [x19, #80]
  4064f8:	orr	w8, w8, #0x2
  4064fc:	strb	w8, [x19, #80]
  406500:	mov	x8, x21
  406504:	cbz	x21, 406530 <_obstack_free@@Base+0x70>
  406508:	cmp	x8, x20
  40650c:	b.cs	4064e4 <_obstack_free@@Base+0x24>  // b.hs, b.nlast
  406510:	ldr	x9, [x8]
  406514:	cmp	x9, x20
  406518:	b.cc	4064e4 <_obstack_free@@Base+0x24>  // b.lo, b.ul, b.last
  40651c:	stp	x20, x20, [x19, #16]
  406520:	ldr	x9, [x8]
  406524:	str	x8, [x19, #8]
  406528:	str	x9, [x19, #32]
  40652c:	b	406534 <_obstack_free@@Base+0x74>
  406530:	cbnz	x20, 406544 <_obstack_free@@Base+0x84>
  406534:	ldp	x20, x19, [sp, #32]
  406538:	ldr	x21, [sp, #16]
  40653c:	ldp	x29, x30, [sp], #48
  406540:	ret
  406544:	bl	401b30 <abort@plt>

0000000000406548 <_obstack_memory_used@@Base>:
  406548:	ldr	x8, [x0, #8]
  40654c:	cbz	x8, 406568 <_obstack_memory_used@@Base+0x20>
  406550:	mov	x0, xzr
  406554:	sub	x10, x0, x8
  406558:	ldp	x9, x8, [x8]
  40655c:	add	x0, x10, x9
  406560:	cbnz	x8, 406554 <_obstack_memory_used@@Base+0xc>
  406564:	ret
  406568:	mov	x0, xzr
  40656c:	ret
  406570:	stp	x29, x30, [sp, #-32]!
  406574:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  406578:	str	x19, [sp, #16]
  40657c:	ldr	x19, [x8, #672]
  406580:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  406584:	add	x1, x1, #0x7ae
  406588:	mov	w2, #0x5                   	// #5
  40658c:	mov	x0, xzr
  406590:	mov	x29, sp
  406594:	bl	401c60 <dcgettext@plt>
  406598:	adrp	x2, 407000 <_obstack_memory_used@@Base+0xab8>
  40659c:	mov	x3, x0
  4065a0:	add	x2, x2, #0x4a9
  4065a4:	mov	w1, #0x1                   	// #1
  4065a8:	mov	x0, x19
  4065ac:	bl	401b90 <__fprintf_chk@plt>
  4065b0:	adrp	x8, 418000 <_obstack_memory_used@@Base+0x11ab8>
  4065b4:	ldr	w0, [x8, #560]
  4065b8:	bl	401920 <exit@plt>
  4065bc:	mov	w0, wzr
  4065c0:	ret
  4065c4:	mov	w0, wzr
  4065c8:	ret
  4065cc:	mov	w0, wzr
  4065d0:	ret
  4065d4:	sub	w9, w0, #0x41
  4065d8:	mov	w8, w0
  4065dc:	cmp	w9, #0x39
  4065e0:	mov	w0, #0x1                   	// #1
  4065e4:	b.hi	4065fc <_obstack_memory_used@@Base+0xb4>  // b.pmore
  4065e8:	mov	w10, #0x1                   	// #1
  4065ec:	lsl	x9, x10, x9
  4065f0:	tst	x9, #0x3ffffff03ffffff
  4065f4:	b.eq	4065fc <_obstack_memory_used@@Base+0xb4>  // b.none
  4065f8:	ret
  4065fc:	sub	w8, w8, #0x30
  406600:	cmp	w8, #0xa
  406604:	b.cc	4065f8 <_obstack_memory_used@@Base+0xb0>  // b.lo, b.ul, b.last
  406608:	mov	w0, wzr
  40660c:	ret
  406610:	sub	w8, w0, #0x41
  406614:	cmp	w8, #0x39
  406618:	b.hi	40662c <_obstack_memory_used@@Base+0xe4>  // b.pmore
  40661c:	mov	x9, #0x3ffffff03ffffff     	// #288230371923853311
  406620:	lsr	x8, x9, x8
  406624:	and	w0, w8, #0x1
  406628:	ret
  40662c:	mov	w0, wzr
  406630:	ret
  406634:	cmp	w0, #0x80
  406638:	cset	w0, cc  // cc = lo, ul, last
  40663c:	ret
  406640:	cmp	w0, #0x20
  406644:	cset	w8, eq  // eq = none
  406648:	cmp	w0, #0x9
  40664c:	cset	w9, eq  // eq = none
  406650:	orr	w0, w8, w9
  406654:	ret
  406658:	mov	w8, w0
  40665c:	cmp	w0, #0x20
  406660:	mov	w0, #0x1                   	// #1
  406664:	b.cs	40666c <_obstack_memory_used@@Base+0x124>  // b.hs, b.nlast
  406668:	ret
  40666c:	cmp	w8, #0x7f
  406670:	b.eq	406668 <_obstack_memory_used@@Base+0x120>  // b.none
  406674:	mov	w0, wzr
  406678:	ret
  40667c:	sub	w8, w0, #0x30
  406680:	cmp	w8, #0xa
  406684:	cset	w0, cc  // cc = lo, ul, last
  406688:	ret
  40668c:	sub	w8, w0, #0x21
  406690:	cmp	w8, #0x5e
  406694:	cset	w0, cc  // cc = lo, ul, last
  406698:	ret
  40669c:	sub	w8, w0, #0x61
  4066a0:	cmp	w8, #0x1a
  4066a4:	cset	w0, cc  // cc = lo, ul, last
  4066a8:	ret
  4066ac:	sub	w8, w0, #0x20
  4066b0:	cmp	w8, #0x5f
  4066b4:	cset	w0, cc  // cc = lo, ul, last
  4066b8:	ret
  4066bc:	sub	w8, w0, #0x21
  4066c0:	cmp	w8, #0x5d
  4066c4:	b.hi	4066e8 <_obstack_memory_used@@Base+0x1a0>  // b.pmore
  4066c8:	adrp	x9, 407000 <_obstack_memory_used@@Base+0xab8>
  4066cc:	add	x9, x9, #0x7bf
  4066d0:	adr	x10, 4066e4 <_obstack_memory_used@@Base+0x19c>
  4066d4:	ldrb	w11, [x9, x8]
  4066d8:	add	x10, x10, x11, lsl #2
  4066dc:	mov	w0, #0x1                   	// #1
  4066e0:	br	x10
  4066e4:	ret
  4066e8:	mov	w0, wzr
  4066ec:	ret
  4066f0:	sub	w8, w0, #0x9
  4066f4:	cmp	w8, #0x17
  4066f8:	b.hi	406710 <_obstack_memory_used@@Base+0x1c8>  // b.pmore
  4066fc:	mov	w9, #0x1f                  	// #31
  406700:	movk	w9, #0x80, lsl #16
  406704:	lsr	w8, w9, w8
  406708:	and	w0, w8, #0x1
  40670c:	ret
  406710:	mov	w0, wzr
  406714:	ret
  406718:	sub	w8, w0, #0x41
  40671c:	cmp	w8, #0x1a
  406720:	cset	w0, cc  // cc = lo, ul, last
  406724:	ret
  406728:	sub	w8, w0, #0x30
  40672c:	cmp	w8, #0x36
  406730:	b.hi	406748 <_obstack_memory_used@@Base+0x200>  // b.pmore
  406734:	mov	x9, #0x7e0000007e0000      	// #35465847073800192
  406738:	movk	x9, #0x3ff
  40673c:	lsr	x8, x9, x8
  406740:	and	w0, w8, #0x1
  406744:	ret
  406748:	mov	w0, wzr
  40674c:	ret
  406750:	sub	w8, w0, #0x41
  406754:	add	w9, w0, #0x20
  406758:	cmp	w8, #0x1a
  40675c:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  406760:	ret
  406764:	sub	w8, w0, #0x61
  406768:	sub	w9, w0, #0x20
  40676c:	cmp	w8, #0x1a
  406770:	csel	w0, w9, w0, cc  // cc = lo, ul, last
  406774:	ret
  406778:	stp	x29, x30, [sp, #-48]!
  40677c:	str	x21, [sp, #16]
  406780:	stp	x20, x19, [sp, #32]
  406784:	mov	x29, sp
  406788:	mov	x20, x0
  40678c:	bl	4019a0 <__fpending@plt>
  406790:	mov	x19, x0
  406794:	mov	x0, x20
  406798:	bl	401950 <ferror_unlocked@plt>
  40679c:	mov	w21, w0
  4067a0:	mov	x0, x20
  4067a4:	bl	406038 <ferror@plt+0x4338>
  4067a8:	cbz	w21, 4067cc <_obstack_memory_used@@Base+0x284>
  4067ac:	cbnz	w0, 4067b8 <_obstack_memory_used@@Base+0x270>
  4067b0:	bl	401cb0 <__errno_location@plt>
  4067b4:	str	wzr, [x0]
  4067b8:	mov	w0, #0xffffffff            	// #-1
  4067bc:	ldp	x20, x19, [sp, #32]
  4067c0:	ldr	x21, [sp, #16]
  4067c4:	ldp	x29, x30, [sp], #48
  4067c8:	ret
  4067cc:	cbz	w0, 4067bc <_obstack_memory_used@@Base+0x274>
  4067d0:	cbnz	x19, 4067ac <_obstack_memory_used@@Base+0x264>
  4067d4:	bl	401cb0 <__errno_location@plt>
  4067d8:	ldr	w8, [x0]
  4067dc:	cmp	w8, #0x9
  4067e0:	csetm	w0, ne  // ne = any
  4067e4:	b	4067bc <_obstack_memory_used@@Base+0x274>
  4067e8:	stp	x29, x30, [sp, #-32]!
  4067ec:	mov	x1, xzr
  4067f0:	str	x19, [sp, #16]
  4067f4:	mov	x29, sp
  4067f8:	bl	401cf0 <setlocale@plt>
  4067fc:	cbz	x0, 406828 <_obstack_memory_used@@Base+0x2e0>
  406800:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  406804:	add	x1, x1, #0x81d
  406808:	mov	x19, x0
  40680c:	bl	401ba0 <strcmp@plt>
  406810:	cbz	w0, 406830 <_obstack_memory_used@@Base+0x2e8>
  406814:	adrp	x1, 407000 <_obstack_memory_used@@Base+0xab8>
  406818:	add	x1, x1, #0x81f
  40681c:	mov	x0, x19
  406820:	bl	401ba0 <strcmp@plt>
  406824:	cbz	w0, 406830 <_obstack_memory_used@@Base+0x2e8>
  406828:	mov	w0, #0x1                   	// #1
  40682c:	b	406834 <_obstack_memory_used@@Base+0x2ec>
  406830:	mov	w0, wzr
  406834:	ldr	x19, [sp, #16]
  406838:	ldp	x29, x30, [sp], #32
  40683c:	ret
  406840:	stp	x29, x30, [sp, #-16]!
  406844:	mov	w0, #0xe                   	// #14
  406848:	mov	x29, sp
  40684c:	bl	4019e0 <nl_langinfo@plt>
  406850:	adrp	x8, 407000 <_obstack_memory_used@@Base+0xab8>
  406854:	add	x8, x8, #0x583
  406858:	cmp	x0, #0x0
  40685c:	csel	x8, x8, x0, eq  // eq = none
  406860:	ldrb	w9, [x8]
  406864:	adrp	x10, 407000 <_obstack_memory_used@@Base+0xab8>
  406868:	add	x10, x10, #0x825
  40686c:	cmp	w9, #0x0
  406870:	csel	x0, x10, x8, eq  // eq = none
  406874:	ldp	x29, x30, [sp], #16
  406878:	ret
  40687c:	nop
  406880:	stp	x29, x30, [sp, #-64]!
  406884:	mov	x29, sp
  406888:	stp	x19, x20, [sp, #16]
  40688c:	adrp	x20, 417000 <_obstack_memory_used@@Base+0x10ab8>
  406890:	add	x20, x20, #0xdf0
  406894:	stp	x21, x22, [sp, #32]
  406898:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x10ab8>
  40689c:	add	x21, x21, #0xde8
  4068a0:	sub	x20, x20, x21
  4068a4:	mov	w22, w0
  4068a8:	stp	x23, x24, [sp, #48]
  4068ac:	mov	x23, x1
  4068b0:	mov	x24, x2
  4068b4:	bl	4018a0 <mbrtowc@plt-0x40>
  4068b8:	cmp	xzr, x20, asr #3
  4068bc:	b.eq	4068e8 <_obstack_memory_used@@Base+0x3a0>  // b.none
  4068c0:	asr	x20, x20, #3
  4068c4:	mov	x19, #0x0                   	// #0
  4068c8:	ldr	x3, [x21, x19, lsl #3]
  4068cc:	mov	x2, x24
  4068d0:	add	x19, x19, #0x1
  4068d4:	mov	x1, x23
  4068d8:	mov	w0, w22
  4068dc:	blr	x3
  4068e0:	cmp	x20, x19
  4068e4:	b.ne	4068c8 <_obstack_memory_used@@Base+0x380>  // b.any
  4068e8:	ldp	x19, x20, [sp, #16]
  4068ec:	ldp	x21, x22, [sp, #32]
  4068f0:	ldp	x23, x24, [sp, #48]
  4068f4:	ldp	x29, x30, [sp], #64
  4068f8:	ret
  4068fc:	nop
  406900:	ret
  406904:	nop
  406908:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x11ab8>
  40690c:	mov	x1, #0x0                   	// #0
  406910:	ldr	x2, [x2, #544]
  406914:	b	401960 <__cxa_atexit@plt>
  406918:	mov	x2, x1
  40691c:	mov	x1, x0
  406920:	mov	w0, #0x0                   	// #0
  406924:	b	401cd0 <__xstat@plt>
  406928:	mov	x2, x1
  40692c:	mov	w1, w0
  406930:	mov	w0, #0x0                   	// #0
  406934:	b	401c50 <__fxstat@plt>

Disassembly of section .fini:

0000000000406938 <.fini>:
  406938:	stp	x29, x30, [sp, #-16]!
  40693c:	mov	x29, sp
  406940:	ldp	x29, x30, [sp], #16
  406944:	ret
