
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_posixshmem.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c38 <.init>:
 c38:	stp	x29, x30, [sp, #-16]!
 c3c:	mov	x29, sp
 c40:	bl	da0 <_PyLong_AsInt@plt+0x10>
 c44:	ldp	x29, x30, [sp], #16
 c48:	ret

Disassembly of section .plt:

0000000000000c50 <_PyUnicode_Ready@plt-0x20>:
 c50:	stp	x16, x30, [sp, #-16]!
 c54:	adrp	x16, 11000 <PyInit__posixshmem@@Base+0xfd74>
 c58:	ldr	x17, [x16, #4088]
 c5c:	add	x16, x16, #0xff8
 c60:	br	x17
 c64:	nop
 c68:	nop
 c6c:	nop

0000000000000c70 <_PyUnicode_Ready@plt>:
 c70:	adrp	x16, 12000 <_PyUnicode_Ready>
 c74:	ldr	x17, [x16]
 c78:	add	x16, x16, #0x0
 c7c:	br	x17

0000000000000c80 <PyEval_RestoreThread@plt>:
 c80:	adrp	x16, 12000 <_PyUnicode_Ready>
 c84:	ldr	x17, [x16, #8]
 c88:	add	x16, x16, #0x8
 c8c:	br	x17

0000000000000c90 <__cxa_finalize@plt>:
 c90:	adrp	x16, 12000 <_PyUnicode_Ready>
 c94:	ldr	x17, [x16, #16]
 c98:	add	x16, x16, #0x10
 c9c:	br	x17

0000000000000ca0 <_PyArg_UnpackKeywords@plt>:
 ca0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ca4:	ldr	x17, [x16, #24]
 ca8:	add	x16, x16, #0x18
 cac:	br	x17

0000000000000cb0 <PyErr_SetString@plt>:
 cb0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cb4:	ldr	x17, [x16, #32]
 cb8:	add	x16, x16, #0x20
 cbc:	br	x17

0000000000000cc0 <PyLong_FromLong@plt>:
 cc0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cc4:	ldr	x17, [x16, #40]
 cc8:	add	x16, x16, #0x28
 ccc:	br	x17

0000000000000cd0 <_PyArg_BadArgument@plt>:
 cd0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cd4:	ldr	x17, [x16, #48]
 cd8:	add	x16, x16, #0x30
 cdc:	br	x17

0000000000000ce0 <__gmon_start__@plt>:
 ce0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ce4:	ldr	x17, [x16, #56]
 ce8:	add	x16, x16, #0x38
 cec:	br	x17

0000000000000cf0 <PyErr_Occurred@plt>:
 cf0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cf4:	ldr	x17, [x16, #64]
 cf8:	add	x16, x16, #0x40
 cfc:	br	x17

0000000000000d00 <PyModule_Create2@plt>:
 d00:	adrp	x16, 12000 <_PyUnicode_Ready>
 d04:	ldr	x17, [x16, #72]
 d08:	add	x16, x16, #0x48
 d0c:	br	x17

0000000000000d10 <PyErr_SetFromErrnoWithFilenameObject@plt>:
 d10:	adrp	x16, 12000 <_PyUnicode_Ready>
 d14:	ldr	x17, [x16, #80]
 d18:	add	x16, x16, #0x50
 d1c:	br	x17

0000000000000d20 <shm_open@plt>:
 d20:	adrp	x16, 12000 <_PyUnicode_Ready>
 d24:	ldr	x17, [x16, #88]
 d28:	add	x16, x16, #0x58
 d2c:	br	x17

0000000000000d30 <PyUnicode_AsUTF8@plt>:
 d30:	adrp	x16, 12000 <_PyUnicode_Ready>
 d34:	ldr	x17, [x16, #96]
 d38:	add	x16, x16, #0x60
 d3c:	br	x17

0000000000000d40 <shm_unlink@plt>:
 d40:	adrp	x16, 12000 <_PyUnicode_Ready>
 d44:	ldr	x17, [x16, #104]
 d48:	add	x16, x16, #0x68
 d4c:	br	x17

0000000000000d50 <PyEval_SaveThread@plt>:
 d50:	adrp	x16, 12000 <_PyUnicode_Ready>
 d54:	ldr	x17, [x16, #112]
 d58:	add	x16, x16, #0x70
 d5c:	br	x17

0000000000000d60 <PyErr_CheckSignals@plt>:
 d60:	adrp	x16, 12000 <_PyUnicode_Ready>
 d64:	ldr	x17, [x16, #120]
 d68:	add	x16, x16, #0x78
 d6c:	br	x17

0000000000000d70 <PyType_IsSubtype@plt>:
 d70:	adrp	x16, 12000 <_PyUnicode_Ready>
 d74:	ldr	x17, [x16, #128]
 d78:	add	x16, x16, #0x80
 d7c:	br	x17

0000000000000d80 <__errno_location@plt>:
 d80:	adrp	x16, 12000 <_PyUnicode_Ready>
 d84:	ldr	x17, [x16, #136]
 d88:	add	x16, x16, #0x88
 d8c:	br	x17

0000000000000d90 <_PyLong_AsInt@plt>:
 d90:	adrp	x16, 12000 <_PyUnicode_Ready>
 d94:	ldr	x17, [x16, #144]
 d98:	add	x16, x16, #0x90
 d9c:	br	x17

Disassembly of section .text:

0000000000000da0 <PyInit__posixshmem@@Base-0x4ec>:
     da0:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfd74>
     da4:	ldr	x0, [x0, #4048]
     da8:	cbz	x0, db0 <_PyLong_AsInt@plt+0x20>
     dac:	b	ce0 <__gmon_start__@plt>
     db0:	ret
     db4:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10d74>
     db8:	add	x0, x0, #0x1e8
     dbc:	adrp	x1, 12000 <PyInit__posixshmem@@Base+0x10d74>
     dc0:	add	x1, x1, #0x1e8
     dc4:	cmp	x0, x1
     dc8:	b.eq	df4 <_PyLong_AsInt@plt+0x64>  // b.none
     dcc:	adrp	x1, 11000 <PyInit__posixshmem@@Base+0xfd74>
     dd0:	ldr	x1, [x1, #4008]
     dd4:	cbz	x1, df4 <_PyLong_AsInt@plt+0x64>
     dd8:	stp	x29, x30, [sp, #-16]!
     ddc:	mov	x29, sp
     de0:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10d74>
     de4:	add	x0, x0, #0x1e8
     de8:	blr	x1
     dec:	ldp	x29, x30, [sp], #16
     df0:	ret
     df4:	ret
     df8:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10d74>
     dfc:	add	x0, x0, #0x1e8
     e00:	adrp	x1, 12000 <PyInit__posixshmem@@Base+0x10d74>
     e04:	add	x1, x1, #0x1e8
     e08:	sub	x0, x0, x1
     e0c:	lsr	x1, x0, #63
     e10:	add	x0, x1, x0, asr #3
     e14:	cmp	xzr, x0, asr #1
     e18:	b.eq	e48 <_PyLong_AsInt@plt+0xb8>  // b.none
     e1c:	asr	x1, x0, #1
     e20:	adrp	x2, 11000 <PyInit__posixshmem@@Base+0xfd74>
     e24:	ldr	x2, [x2, #4064]
     e28:	cbz	x2, e48 <_PyLong_AsInt@plt+0xb8>
     e2c:	stp	x29, x30, [sp, #-16]!
     e30:	mov	x29, sp
     e34:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10d74>
     e38:	add	x0, x0, #0x1e8
     e3c:	blr	x2
     e40:	ldp	x29, x30, [sp], #16
     e44:	ret
     e48:	ret
     e4c:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10d74>
     e50:	ldrb	w0, [x0, #488]
     e54:	cbnz	w0, e90 <_PyLong_AsInt@plt+0x100>
     e58:	stp	x29, x30, [sp, #-16]!
     e5c:	mov	x29, sp
     e60:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfd74>
     e64:	ldr	x0, [x0, #4024]
     e68:	cbz	x0, e78 <_PyLong_AsInt@plt+0xe8>
     e6c:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10d74>
     e70:	ldr	x0, [x0, #152]
     e74:	bl	c90 <__cxa_finalize@plt>
     e78:	bl	db4 <_PyLong_AsInt@plt+0x24>
     e7c:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10d74>
     e80:	mov	w1, #0x1                   	// #1
     e84:	strb	w1, [x0, #488]
     e88:	ldp	x29, x30, [sp], #16
     e8c:	ret
     e90:	ret
     e94:	stp	x29, x30, [sp, #-16]!
     e98:	mov	x29, sp
     e9c:	bl	df8 <_PyLong_AsInt@plt+0x68>
     ea0:	ldp	x29, x30, [sp], #16
     ea4:	ret
     ea8:	sub	sp, sp, #0x50
     eac:	stp	x29, x30, [sp, #16]
     eb0:	add	x29, sp, #0x10
     eb4:	stp	x19, x20, [sp, #32]
     eb8:	mov	x19, x1
     ebc:	mov	x1, x2
     ec0:	cmp	x3, #0x0
     ec4:	ccmp	x2, #0x1, #0x0, eq  // eq = none
     ec8:	b.ne	ed0 <_PyLong_AsInt@plt+0x140>  // b.any
     ecc:	cbnz	x19, f00 <_PyLong_AsInt@plt+0x170>
     ed0:	add	x0, sp, #0x48
     ed4:	str	x0, [sp]
     ed8:	mov	w7, #0x0                   	// #0
     edc:	mov	w6, #0x1                   	// #1
     ee0:	mov	w5, w6
     ee4:	adrp	x4, 12000 <PyInit__posixshmem@@Base+0x10d74>
     ee8:	add	x4, x4, #0xa0
     eec:	mov	x2, #0x0                   	// #0
     ef0:	mov	x0, x19
     ef4:	bl	ca0 <_PyArg_UnpackKeywords@plt>
     ef8:	mov	x19, x0
     efc:	cbz	x0, fe8 <_PyLong_AsInt@plt+0x258>
     f00:	ldr	x0, [x19]
     f04:	ldr	x1, [x0, #8]
     f08:	ldr	x1, [x1, #168]
     f0c:	tbz	w1, #28, f80 <_PyLong_AsInt@plt+0x1f0>
     f10:	ldrsb	w1, [x0, #32]
     f14:	tbnz	w1, #31, f24 <_PyLong_AsInt@plt+0x194>
     f18:	bl	c70 <_PyUnicode_Ready@plt>
     f1c:	cmn	w0, #0x1
     f20:	b.eq	fa8 <_PyLong_AsInt@plt+0x218>  // b.none
     f24:	stp	x21, x22, [sp, #48]
     f28:	ldr	x22, [x19]
     f2c:	mov	x0, x22
     f30:	bl	d30 <PyUnicode_AsUTF8@plt>
     f34:	mov	x19, x0
     f38:	cbz	x0, ffc <_PyLong_AsInt@plt+0x26c>
     f3c:	bl	d50 <PyEval_SaveThread@plt>
     f40:	mov	x21, x0
     f44:	mov	x0, x19
     f48:	bl	d40 <shm_unlink@plt>
     f4c:	mov	w20, w0
     f50:	mov	x0, x21
     f54:	bl	c80 <PyEval_RestoreThread@plt>
     f58:	tbz	w20, #31, fd0 <_PyLong_AsInt@plt+0x240>
     f5c:	bl	d80 <__errno_location@plt>
     f60:	ldr	w0, [x0]
     f64:	cmp	w0, #0x4
     f68:	b.ne	fb0 <_PyLong_AsInt@plt+0x220>  // b.any
     f6c:	bl	d60 <PyErr_CheckSignals@plt>
     f70:	cbz	w0, f3c <_PyLong_AsInt@plt+0x1ac>
     f74:	mov	x19, #0x0                   	// #0
     f78:	ldp	x21, x22, [sp, #48]
     f7c:	b	fe8 <_PyLong_AsInt@plt+0x258>
     f80:	mov	x3, x0
     f84:	adrp	x2, 1000 <_PyLong_AsInt@plt+0x270>
     f88:	add	x2, x2, #0x2c0
     f8c:	adrp	x1, 1000 <_PyLong_AsInt@plt+0x270>
     f90:	add	x1, x1, #0x2c8
     f94:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
     f98:	add	x0, x0, #0x2d8
     f9c:	bl	cd0 <_PyArg_BadArgument@plt>
     fa0:	mov	x19, #0x0                   	// #0
     fa4:	b	fe8 <_PyLong_AsInt@plt+0x258>
     fa8:	mov	x19, #0x0                   	// #0
     fac:	b	fe8 <_PyLong_AsInt@plt+0x258>
     fb0:	mov	x1, x22
     fb4:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfd74>
     fb8:	ldr	x0, [x0, #4040]
     fbc:	ldr	x0, [x0]
     fc0:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
     fc4:	mov	x19, #0x0                   	// #0
     fc8:	ldp	x21, x22, [sp, #48]
     fcc:	b	fe8 <_PyLong_AsInt@plt+0x258>
     fd0:	adrp	x19, 11000 <PyInit__posixshmem@@Base+0xfd74>
     fd4:	ldr	x19, [x19, #4056]
     fd8:	ldr	x0, [x19]
     fdc:	add	x0, x0, #0x1
     fe0:	str	x0, [x19]
     fe4:	ldp	x21, x22, [sp, #48]
     fe8:	mov	x0, x19
     fec:	ldp	x19, x20, [sp, #32]
     ff0:	ldp	x29, x30, [sp, #16]
     ff4:	add	sp, sp, #0x50
     ff8:	ret
     ffc:	ldp	x21, x22, [sp, #48]
    1000:	b	fe8 <_PyLong_AsInt@plt+0x258>
    1004:	sub	sp, sp, #0x70
    1008:	stp	x29, x30, [sp, #16]
    100c:	add	x29, sp, #0x10
    1010:	stp	x19, x20, [sp, #32]
    1014:	mov	x19, x1
    1018:	mov	x1, x2
    101c:	cbz	x3, 1184 <_PyLong_AsInt@plt+0x3f4>
    1020:	ldr	x20, [x3, #16]
    1024:	add	x20, x2, x20
    1028:	add	x0, sp, #0x58
    102c:	str	x0, [sp]
    1030:	mov	w7, #0x0                   	// #0
    1034:	mov	w6, #0x3                   	// #3
    1038:	mov	w5, #0x2                   	// #2
    103c:	adrp	x4, 12000 <PyInit__posixshmem@@Base+0x10d74>
    1040:	add	x4, x4, #0xa0
    1044:	add	x4, x4, #0x40
    1048:	mov	x2, #0x0                   	// #0
    104c:	mov	x0, x19
    1050:	bl	ca0 <_PyArg_UnpackKeywords@plt>
    1054:	mov	x19, x0
    1058:	cbz	x0, 1174 <_PyLong_AsInt@plt+0x3e4>
    105c:	ldr	x0, [x19]
    1060:	ldr	x1, [x0, #8]
    1064:	ldr	x1, [x1, #168]
    1068:	tbz	w1, #28, 11a4 <_PyLong_AsInt@plt+0x414>
    106c:	ldrsb	w1, [x0, #32]
    1070:	tbz	w1, #31, 11cc <_PyLong_AsInt@plt+0x43c>
    1074:	stp	x21, x22, [sp, #48]
    1078:	ldr	x22, [x19]
    107c:	ldr	x0, [x19, #8]
    1080:	ldr	x0, [x0, #8]
    1084:	adrp	x1, 11000 <PyInit__posixshmem@@Base+0xfd74>
    1088:	ldr	x1, [x1, #4016]
    108c:	cmp	x0, x1
    1090:	b.eq	11e0 <_PyLong_AsInt@plt+0x450>  // b.none
    1094:	adrp	x1, 11000 <PyInit__posixshmem@@Base+0xfd74>
    1098:	ldr	x1, [x1, #4016]
    109c:	bl	d70 <PyType_IsSubtype@plt>
    10a0:	cbnz	w0, 11e0 <_PyLong_AsInt@plt+0x450>
    10a4:	ldr	x0, [x19, #8]
    10a8:	bl	d90 <_PyLong_AsInt@plt>
    10ac:	mov	w21, w0
    10b0:	cmn	w0, #0x1
    10b4:	b.eq	1204 <_PyLong_AsInt@plt+0x474>  // b.none
    10b8:	stp	x23, x24, [sp, #64]
    10bc:	cmp	x20, #0x2
    10c0:	b.eq	1260 <_PyLong_AsInt@plt+0x4d0>  // b.none
    10c4:	ldr	x0, [x19, #16]
    10c8:	ldr	x0, [x0, #8]
    10cc:	adrp	x1, 11000 <PyInit__posixshmem@@Base+0xfd74>
    10d0:	ldr	x1, [x1, #4016]
    10d4:	cmp	x0, x1
    10d8:	b.eq	121c <_PyLong_AsInt@plt+0x48c>  // b.none
    10dc:	adrp	x1, 11000 <PyInit__posixshmem@@Base+0xfd74>
    10e0:	ldr	x1, [x1, #4016]
    10e4:	bl	d70 <PyType_IsSubtype@plt>
    10e8:	cbnz	w0, 121c <_PyLong_AsInt@plt+0x48c>
    10ec:	ldr	x0, [x19, #16]
    10f0:	bl	d90 <_PyLong_AsInt@plt>
    10f4:	mov	w24, w0
    10f8:	cmn	w0, #0x1
    10fc:	b.eq	1244 <_PyLong_AsInt@plt+0x4b4>  // b.none
    1100:	mov	x0, x22
    1104:	bl	d30 <PyUnicode_AsUTF8@plt>
    1108:	mov	x23, x0
    110c:	cbz	x0, 1150 <_PyLong_AsInt@plt+0x3c0>
    1110:	bl	d50 <PyEval_SaveThread@plt>
    1114:	mov	x20, x0
    1118:	mov	w2, w24
    111c:	mov	w1, w21
    1120:	mov	x0, x23
    1124:	bl	d20 <shm_open@plt>
    1128:	mov	w19, w0
    112c:	mov	x0, x20
    1130:	bl	c80 <PyEval_RestoreThread@plt>
    1134:	tbz	w19, #31, 1164 <_PyLong_AsInt@plt+0x3d4>
    1138:	bl	d80 <__errno_location@plt>
    113c:	ldr	w0, [x0]
    1140:	cmp	w0, #0x4
    1144:	b.ne	1268 <_PyLong_AsInt@plt+0x4d8>  // b.any
    1148:	bl	d60 <PyErr_CheckSignals@plt>
    114c:	cbz	w0, 1110 <_PyLong_AsInt@plt+0x380>
    1150:	bl	cf0 <PyErr_Occurred@plt>
    1154:	mov	x1, x0
    1158:	mov	x0, #0x0                   	// #0
    115c:	mov	w19, #0xffffffff            	// #-1
    1160:	cbnz	x1, 1280 <_PyLong_AsInt@plt+0x4f0>
    1164:	sxtw	x0, w19
    1168:	bl	cc0 <PyLong_FromLong@plt>
    116c:	ldp	x21, x22, [sp, #48]
    1170:	ldp	x23, x24, [sp, #64]
    1174:	ldp	x19, x20, [sp, #32]
    1178:	ldp	x29, x30, [sp, #16]
    117c:	add	sp, sp, #0x70
    1180:	ret
    1184:	sub	x0, x2, #0x2
    1188:	cmp	x0, #0x1
    118c:	b.hi	119c <_PyLong_AsInt@plt+0x40c>  // b.pmore
    1190:	mov	x20, x2
    1194:	cbz	x19, 1028 <_PyLong_AsInt@plt+0x298>
    1198:	b	105c <_PyLong_AsInt@plt+0x2cc>
    119c:	mov	x20, x2
    11a0:	b	1028 <_PyLong_AsInt@plt+0x298>
    11a4:	mov	x3, x0
    11a8:	adrp	x2, 1000 <_PyLong_AsInt@plt+0x270>
    11ac:	add	x2, x2, #0x2c0
    11b0:	adrp	x1, 1000 <_PyLong_AsInt@plt+0x270>
    11b4:	add	x1, x1, #0x2c8
    11b8:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
    11bc:	add	x0, x0, #0x2e8
    11c0:	bl	cd0 <_PyArg_BadArgument@plt>
    11c4:	mov	x0, #0x0                   	// #0
    11c8:	b	1174 <_PyLong_AsInt@plt+0x3e4>
    11cc:	bl	c70 <_PyUnicode_Ready@plt>
    11d0:	cmn	w0, #0x1
    11d4:	b.ne	1074 <_PyLong_AsInt@plt+0x2e4>  // b.any
    11d8:	mov	x0, #0x0                   	// #0
    11dc:	b	1174 <_PyLong_AsInt@plt+0x3e4>
    11e0:	adrp	x1, 1000 <_PyLong_AsInt@plt+0x270>
    11e4:	add	x1, x1, #0x2f8
    11e8:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfd74>
    11ec:	ldr	x0, [x0, #4032]
    11f0:	ldr	x0, [x0]
    11f4:	bl	cb0 <PyErr_SetString@plt>
    11f8:	mov	x0, #0x0                   	// #0
    11fc:	ldp	x21, x22, [sp, #48]
    1200:	b	1174 <_PyLong_AsInt@plt+0x3e4>
    1204:	bl	cf0 <PyErr_Occurred@plt>
    1208:	mov	x1, x0
    120c:	mov	x0, #0x0                   	// #0
    1210:	cbz	x1, 10b8 <_PyLong_AsInt@plt+0x328>
    1214:	ldp	x21, x22, [sp, #48]
    1218:	b	1174 <_PyLong_AsInt@plt+0x3e4>
    121c:	adrp	x1, 1000 <_PyLong_AsInt@plt+0x270>
    1220:	add	x1, x1, #0x2f8
    1224:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfd74>
    1228:	ldr	x0, [x0, #4032]
    122c:	ldr	x0, [x0]
    1230:	bl	cb0 <PyErr_SetString@plt>
    1234:	mov	x0, #0x0                   	// #0
    1238:	ldp	x21, x22, [sp, #48]
    123c:	ldp	x23, x24, [sp, #64]
    1240:	b	1174 <_PyLong_AsInt@plt+0x3e4>
    1244:	bl	cf0 <PyErr_Occurred@plt>
    1248:	mov	x1, x0
    124c:	mov	x0, #0x0                   	// #0
    1250:	cbz	x1, 1100 <_PyLong_AsInt@plt+0x370>
    1254:	ldp	x21, x22, [sp, #48]
    1258:	ldp	x23, x24, [sp, #64]
    125c:	b	1174 <_PyLong_AsInt@plt+0x3e4>
    1260:	mov	w24, #0x1ff                 	// #511
    1264:	b	1100 <_PyLong_AsInt@plt+0x370>
    1268:	mov	x1, x22
    126c:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfd74>
    1270:	ldr	x0, [x0, #4040]
    1274:	ldr	x0, [x0]
    1278:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
    127c:	b	1150 <_PyLong_AsInt@plt+0x3c0>
    1280:	ldp	x21, x22, [sp, #48]
    1284:	ldp	x23, x24, [sp, #64]
    1288:	b	1174 <_PyLong_AsInt@plt+0x3e4>

000000000000128c <PyInit__posixshmem@@Base>:
    128c:	stp	x29, x30, [sp, #-16]!
    1290:	mov	x29, sp
    1294:	mov	w1, #0x3f5                 	// #1013
    1298:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10d74>
    129c:	add	x0, x0, #0xa0
    12a0:	add	x0, x0, #0x80
    12a4:	bl	d00 <PyModule_Create2@plt>
    12a8:	ldp	x29, x30, [sp], #16
    12ac:	ret

Disassembly of section .fini:

00000000000012b0 <.fini>:
    12b0:	stp	x29, x30, [sp, #-16]!
    12b4:	mov	x29, sp
    12b8:	ldp	x29, x30, [sp], #16
    12bc:	ret
