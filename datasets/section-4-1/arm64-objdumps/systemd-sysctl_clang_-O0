
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-sysctl_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004012f8 <_init>:
  4012f8:	stp	x29, x30, [sp, #-16]!
  4012fc:	mov	x29, sp
  401300:	bl	401660 <call_weak_fn>
  401304:	ldp	x29, x30, [sp], #16
  401308:	ret

Disassembly of section .plt:

0000000000401310 <__libc_start_main@plt-0x20>:
  401310:	stp	x16, x30, [sp, #-16]!
  401314:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401318:	ldr	x17, [x16, #3720]
  40131c:	add	x16, x16, #0xe88
  401320:	br	x17
  401324:	nop
  401328:	nop
  40132c:	nop

0000000000401330 <__libc_start_main@plt>:
  401330:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401334:	ldr	x17, [x16, #3728]
  401338:	add	x16, x16, #0xe90
  40133c:	br	x17

0000000000401340 <abort@plt>:
  401340:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401344:	ldr	x17, [x16, #3736]
  401348:	add	x16, x16, #0xe98
  40134c:	br	x17

0000000000401350 <__gmon_start__@plt>:
  401350:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401354:	ldr	x17, [x16, #3744]
  401358:	add	x16, x16, #0xea0
  40135c:	br	x17

0000000000401360 <ask_password_agent_close@plt>:
  401360:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401364:	ldr	x17, [x16, #3752]
  401368:	add	x16, x16, #0xea8
  40136c:	br	x17

0000000000401370 <polkit_agent_close@plt>:
  401370:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401374:	ldr	x17, [x16, #3760]
  401378:	add	x16, x16, #0xeb0
  40137c:	br	x17

0000000000401380 <pager_close@plt>:
  401380:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401384:	ldr	x17, [x16, #3768]
  401388:	add	x16, x16, #0xeb8
  40138c:	br	x17

0000000000401390 <mac_selinux_finish@plt>:
  401390:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401394:	ldr	x17, [x16, #3776]
  401398:	add	x16, x16, #0xec0
  40139c:	br	x17

00000000004013a0 <log_setup_service@plt>:
  4013a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4013a4:	ldr	x17, [x16, #3784]
  4013a8:	add	x16, x16, #0xec8
  4013ac:	br	x17

00000000004013b0 <umask@plt>:
  4013b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4013b4:	ldr	x17, [x16, #3792]
  4013b8:	add	x16, x16, #0xed0
  4013bc:	br	x17

00000000004013c0 <internal_ordered_hashmap_new@plt>:
  4013c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4013c4:	ldr	x17, [x16, #3800]
  4013c8:	add	x16, x16, #0xed8
  4013cc:	br	x17

00000000004013d0 <log_oom_internal@plt>:
  4013d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4013d4:	ldr	x17, [x16, #3808]
  4013d8:	add	x16, x16, #0xee0
  4013dc:	br	x17

00000000004013e0 <memcpy@plt>:
  4013e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4013e4:	ldr	x17, [x16, #3816]
  4013e8:	add	x16, x16, #0xee8
  4013ec:	br	x17

00000000004013f0 <conf_files_list_strv@plt>:
  4013f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4013f4:	ldr	x17, [x16, #3824]
  4013f8:	add	x16, x16, #0xef0
  4013fc:	br	x17

0000000000401400 <log_get_max_level_realm@plt>:
  401400:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401404:	ldr	x17, [x16, #3832]
  401408:	add	x16, x16, #0xef8
  40140c:	br	x17

0000000000401410 <log_internal_realm@plt>:
  401410:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401414:	ldr	x17, [x16, #3840]
  401418:	add	x16, x16, #0xf00
  40141c:	br	x17

0000000000401420 <abs@plt>:
  401420:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401424:	ldr	x17, [x16, #3848]
  401428:	add	x16, x16, #0xf08
  40142c:	br	x17

0000000000401430 <pager_open@plt>:
  401430:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401434:	ldr	x17, [x16, #3856]
  401438:	add	x16, x16, #0xf10
  40143c:	br	x17

0000000000401440 <cat_files@plt>:
  401440:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401444:	ldr	x17, [x16, #3864]
  401448:	add	x16, x16, #0xf18
  40144c:	br	x17

0000000000401450 <strv_free@plt>:
  401450:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401454:	ldr	x17, [x16, #3872]
  401458:	add	x16, x16, #0xf20
  40145c:	br	x17

0000000000401460 <free@plt>:
  401460:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401464:	ldr	x17, [x16, #3880]
  401468:	add	x16, x16, #0xf28
  40146c:	br	x17

0000000000401470 <log_assert_failed_realm@plt>:
  401470:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401474:	ldr	x17, [x16, #3888]
  401478:	add	x16, x16, #0xf30
  40147c:	br	x17

0000000000401480 <getopt_long@plt>:
  401480:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401484:	ldr	x17, [x16, #3896]
  401488:	add	x16, x16, #0xf38
  40148c:	br	x17

0000000000401490 <version@plt>:
  401490:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401494:	ldr	x17, [x16, #3904]
  401498:	add	x16, x16, #0xf40
  40149c:	br	x17

00000000004014a0 <sysctl_normalize@plt>:
  4014a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4014a4:	ldr	x17, [x16, #3912]
  4014a8:	add	x16, x16, #0xf48
  4014ac:	br	x17

00000000004014b0 <path_startswith@plt>:
  4014b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4014b4:	ldr	x17, [x16, #3920]
  4014b8:	add	x16, x16, #0xf50
  4014bc:	br	x17

00000000004014c0 <strdup@plt>:
  4014c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4014c4:	ldr	x17, [x16, #3928]
  4014c8:	add	x16, x16, #0xf58
  4014cc:	br	x17

00000000004014d0 <path_join_internal@plt>:
  4014d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4014d4:	ldr	x17, [x16, #3936]
  4014d8:	add	x16, x16, #0xf60
  4014dc:	br	x17

00000000004014e0 <strv_consume@plt>:
  4014e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4014e4:	ldr	x17, [x16, #3944]
  4014e8:	add	x16, x16, #0xf68
  4014ec:	br	x17

00000000004014f0 <log_assert_failed_unreachable_realm@plt>:
  4014f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4014f4:	ldr	x17, [x16, #3952]
  4014f8:	add	x16, x16, #0xf70
  4014fc:	br	x17

0000000000401500 <search_and_fopen@plt>:
  401500:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401504:	ldr	x17, [x16, #3960]
  401508:	add	x16, x16, #0xf78
  40150c:	br	x17

0000000000401510 <strstrip@plt>:
  401510:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401514:	ldr	x17, [x16, #3968]
  401518:	add	x16, x16, #0xf80
  40151c:	br	x17

0000000000401520 <strchr@plt>:
  401520:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401524:	ldr	x17, [x16, #3976]
  401528:	add	x16, x16, #0xf88
  40152c:	br	x17

0000000000401530 <log_syntax_internal@plt>:
  401530:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401534:	ldr	x17, [x16, #3984]
  401538:	add	x16, x16, #0xf90
  40153c:	br	x17

0000000000401540 <strcmp@plt>:
  401540:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401544:	ldr	x17, [x16, #3992]
  401548:	add	x16, x16, #0xf98
  40154c:	br	x17

0000000000401550 <sysctl_write@plt>:
  401550:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401554:	ldr	x17, [x16, #4000]
  401558:	add	x16, x16, #0xfa0
  40155c:	br	x17

0000000000401560 <internal_hashmap_free@plt>:
  401560:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401564:	ldr	x17, [x16, #4008]
  401568:	add	x16, x16, #0xfa8
  40156c:	br	x17

0000000000401570 <terminal_urlify_man@plt>:
  401570:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401574:	ldr	x17, [x16, #4016]
  401578:	add	x16, x16, #0xfb0
  40157c:	br	x17

0000000000401580 <printf@plt>:
  401580:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401584:	ldr	x17, [x16, #4024]
  401588:	add	x16, x16, #0xfb8
  40158c:	br	x17

0000000000401590 <safe_fclose@plt>:
  401590:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401594:	ldr	x17, [x16, #4032]
  401598:	add	x16, x16, #0xfc0
  40159c:	br	x17

00000000004015a0 <read_line_full@plt>:
  4015a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4015a4:	ldr	x17, [x16, #4040]
  4015a8:	add	x16, x16, #0xfc8
  4015ac:	br	x17

00000000004015b0 <internal_hashmap_get@plt>:
  4015b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4015b4:	ldr	x17, [x16, #4048]
  4015b8:	add	x16, x16, #0xfd0
  4015bc:	br	x17

00000000004015c0 <internal_hashmap_remove@plt>:
  4015c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4015c4:	ldr	x17, [x16, #4056]
  4015c8:	add	x16, x16, #0xfd8
  4015cc:	br	x17

00000000004015d0 <hashmap_put@plt>:
  4015d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4015d4:	ldr	x17, [x16, #4064]
  4015d8:	add	x16, x16, #0xfe0
  4015dc:	br	x17

00000000004015e0 <malloc@plt>:
  4015e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4015e4:	ldr	x17, [x16, #4072]
  4015e8:	add	x16, x16, #0xfe8
  4015ec:	br	x17

00000000004015f0 <internal_hashmap_iterate@plt>:
  4015f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  4015f4:	ldr	x17, [x16, #4080]
  4015f8:	add	x16, x16, #0xff0
  4015fc:	br	x17

0000000000401600 <string_hash_func@plt>:
  401600:	adrp	x16, 41f000 <__FRAME_END__+0x1b710>
  401604:	ldr	x17, [x16, #4088]
  401608:	add	x16, x16, #0xff8
  40160c:	br	x17

Disassembly of section .text:

0000000000401610 <_start>:
  401610:	mov	x29, #0x0                   	// #0
  401614:	mov	x30, #0x0                   	// #0
  401618:	mov	x5, x0
  40161c:	ldr	x1, [sp]
  401620:	add	x2, sp, #0x8
  401624:	mov	x6, sp
  401628:	movz	x0, #0x0, lsl #48
  40162c:	movk	x0, #0x0, lsl #32
  401630:	movk	x0, #0x40, lsl #16
  401634:	movk	x0, #0x1830
  401638:	movz	x3, #0x0, lsl #48
  40163c:	movk	x3, #0x0, lsl #32
  401640:	movk	x3, #0x40, lsl #16
  401644:	movk	x3, #0x3188
  401648:	movz	x4, #0x0, lsl #48
  40164c:	movk	x4, #0x0, lsl #32
  401650:	movk	x4, #0x40, lsl #16
  401654:	movk	x4, #0x3208
  401658:	bl	401330 <__libc_start_main@plt>
  40165c:	bl	401340 <abort@plt>

0000000000401660 <call_weak_fn>:
  401660:	adrp	x0, 41f000 <__FRAME_END__+0x1b710>
  401664:	ldr	x0, [x0, #3680]
  401668:	cbz	x0, 401670 <call_weak_fn+0x10>
  40166c:	b	401350 <__gmon_start__@plt>
  401670:	ret

0000000000401674 <deregister_tm_clones>:
  401674:	stp	x29, x30, [sp, #-32]!
  401678:	mov	x29, sp
  40167c:	adrp	x0, 420000 <__TMC_END__>
  401680:	add	x0, x0, #0x0
  401684:	str	x0, [sp, #24]
  401688:	ldr	x0, [sp, #24]
  40168c:	str	x0, [sp, #24]
  401690:	ldr	x1, [sp, #24]
  401694:	adrp	x0, 420000 <__TMC_END__>
  401698:	add	x0, x0, #0x0
  40169c:	cmp	x1, x0
  4016a0:	b.eq	4016dc <deregister_tm_clones+0x68>  // b.none
  4016a4:	adrp	x0, 403000 <strv_isempty+0x10>
  4016a8:	add	x0, x0, #0x220
  4016ac:	ldr	x0, [x0]
  4016b0:	str	x0, [sp, #16]
  4016b4:	ldr	x0, [sp, #16]
  4016b8:	str	x0, [sp, #16]
  4016bc:	ldr	x0, [sp, #16]
  4016c0:	cmp	x0, #0x0
  4016c4:	b.eq	4016e0 <deregister_tm_clones+0x6c>  // b.none
  4016c8:	ldr	x1, [sp, #16]
  4016cc:	adrp	x0, 420000 <__TMC_END__>
  4016d0:	add	x0, x0, #0x0
  4016d4:	blr	x1
  4016d8:	b	4016e0 <deregister_tm_clones+0x6c>
  4016dc:	nop
  4016e0:	ldp	x29, x30, [sp], #32
  4016e4:	ret

00000000004016e8 <register_tm_clones>:
  4016e8:	stp	x29, x30, [sp, #-48]!
  4016ec:	mov	x29, sp
  4016f0:	adrp	x0, 420000 <__TMC_END__>
  4016f4:	add	x0, x0, #0x0
  4016f8:	str	x0, [sp, #40]
  4016fc:	ldr	x0, [sp, #40]
  401700:	str	x0, [sp, #40]
  401704:	ldr	x1, [sp, #40]
  401708:	adrp	x0, 420000 <__TMC_END__>
  40170c:	add	x0, x0, #0x0
  401710:	sub	x0, x1, x0
  401714:	asr	x0, x0, #3
  401718:	lsr	x1, x0, #63
  40171c:	add	x0, x1, x0
  401720:	asr	x0, x0, #1
  401724:	str	x0, [sp, #32]
  401728:	ldr	x0, [sp, #32]
  40172c:	cmp	x0, #0x0
  401730:	b.eq	401770 <register_tm_clones+0x88>  // b.none
  401734:	adrp	x0, 403000 <strv_isempty+0x10>
  401738:	add	x0, x0, #0x228
  40173c:	ldr	x0, [x0]
  401740:	str	x0, [sp, #24]
  401744:	ldr	x0, [sp, #24]
  401748:	str	x0, [sp, #24]
  40174c:	ldr	x0, [sp, #24]
  401750:	cmp	x0, #0x0
  401754:	b.eq	401774 <register_tm_clones+0x8c>  // b.none
  401758:	ldr	x2, [sp, #24]
  40175c:	ldr	x1, [sp, #32]
  401760:	adrp	x0, 420000 <__TMC_END__>
  401764:	add	x0, x0, #0x0
  401768:	blr	x2
  40176c:	b	401774 <register_tm_clones+0x8c>
  401770:	nop
  401774:	ldp	x29, x30, [sp], #48
  401778:	ret

000000000040177c <__do_global_dtors_aux>:
  40177c:	stp	x29, x30, [sp, #-16]!
  401780:	mov	x29, sp
  401784:	adrp	x0, 420000 <__TMC_END__>
  401788:	add	x0, x0, #0x60
  40178c:	ldrb	w0, [x0]
  401790:	and	x0, x0, #0xff
  401794:	cmp	x0, #0x0
  401798:	b.ne	4017b4 <__do_global_dtors_aux+0x38>  // b.any
  40179c:	bl	401674 <deregister_tm_clones>
  4017a0:	adrp	x0, 420000 <__TMC_END__>
  4017a4:	add	x0, x0, #0x60
  4017a8:	mov	w1, #0x1                   	// #1
  4017ac:	strb	w1, [x0]
  4017b0:	b	4017b8 <__do_global_dtors_aux+0x3c>
  4017b4:	nop
  4017b8:	ldp	x29, x30, [sp], #16
  4017bc:	ret

00000000004017c0 <frame_dummy>:
  4017c0:	stp	x29, x30, [sp, #-16]!
  4017c4:	mov	x29, sp
  4017c8:	bl	4016e8 <register_tm_clones>
  4017cc:	nop
  4017d0:	ldp	x29, x30, [sp], #16
  4017d4:	ret

00000000004017d8 <__unique_prefix_static_destructor_wrapper4>:
  4017d8:	sub	sp, sp, #0x20
  4017dc:	stp	x29, x30, [sp, #16]
  4017e0:	add	x29, sp, #0x10
  4017e4:	str	x0, [sp, #8]
  4017e8:	ldr	x8, [sp, #8]
  4017ec:	str	x8, [sp]
  4017f0:	ldr	x0, [sp]
  4017f4:	bl	401cec <strv_freep>
  4017f8:	ldp	x29, x30, [sp, #16]
  4017fc:	add	sp, sp, #0x20
  401800:	ret

0000000000401804 <__unique_prefix_static_free_wrapper5>:
  401804:	sub	sp, sp, #0x20
  401808:	stp	x29, x30, [sp, #16]
  40180c:	add	x29, sp, #0x10
  401810:	str	x0, [sp, #8]
  401814:	ldr	x8, [sp, #8]
  401818:	str	x8, [sp]
  40181c:	ldr	x0, [sp]
  401820:	bl	401d20 <option_free>
  401824:	ldp	x29, x30, [sp, #16]
  401828:	add	sp, sp, #0x20
  40182c:	ret

0000000000401830 <main>:
  401830:	sub	sp, sp, #0x30
  401834:	stp	x29, x30, [sp, #32]
  401838:	add	x29, sp, #0x20
  40183c:	mov	w8, wzr
  401840:	mov	w9, #0x1                   	// #1
  401844:	stur	wzr, [x29, #-4]
  401848:	stur	w0, [x29, #-8]
  40184c:	str	x1, [sp, #16]
  401850:	ldur	w0, [x29, #-8]
  401854:	ldr	x1, [sp, #16]
  401858:	str	w8, [sp, #8]
  40185c:	str	w9, [sp, #4]
  401860:	bl	4018a8 <save_argc_argv>
  401864:	ldur	w0, [x29, #-8]
  401868:	ldr	x1, [sp, #16]
  40186c:	bl	4018dc <run>
  401870:	str	w0, [sp, #12]
  401874:	bl	401360 <ask_password_agent_close@plt>
  401878:	bl	401370 <polkit_agent_close@plt>
  40187c:	bl	401380 <pager_close@plt>
  401880:	bl	401390 <mac_selinux_finish@plt>
  401884:	bl	401c6c <static_destruct>
  401888:	ldr	w8, [sp, #12]
  40188c:	cmp	w8, #0x0
  401890:	ldr	w8, [sp, #4]
  401894:	ldr	w9, [sp, #8]
  401898:	csel	w0, w8, w9, lt  // lt = tstop
  40189c:	ldp	x29, x30, [sp, #32]
  4018a0:	add	sp, sp, #0x30
  4018a4:	ret

00000000004018a8 <save_argc_argv>:
  4018a8:	sub	sp, sp, #0x10
  4018ac:	adrp	x8, 420000 <__TMC_END__>
  4018b0:	add	x8, x8, #0x78
  4018b4:	adrp	x9, 420000 <__TMC_END__>
  4018b8:	add	x9, x9, #0x80
  4018bc:	str	w0, [sp, #12]
  4018c0:	str	x1, [sp]
  4018c4:	ldr	w10, [sp, #12]
  4018c8:	str	w10, [x8]
  4018cc:	ldr	x8, [sp]
  4018d0:	str	x8, [x9]
  4018d4:	add	sp, sp, #0x10
  4018d8:	ret

00000000004018dc <run>:
  4018dc:	sub	sp, sp, #0xb0
  4018e0:	stp	x29, x30, [sp, #160]
  4018e4:	add	x29, sp, #0xa0
  4018e8:	mov	x8, xzr
  4018ec:	adrp	x9, 403000 <strv_isempty+0x10>
  4018f0:	add	x9, x9, #0x350
  4018f4:	add	x9, x9, #0x3
  4018f8:	stur	w0, [x29, #-8]
  4018fc:	stur	x1, [x29, #-16]
  401900:	stur	x8, [x29, #-24]
  401904:	ldur	w0, [x29, #-8]
  401908:	ldur	x1, [x29, #-16]
  40190c:	str	x9, [sp, #32]
  401910:	bl	401ddc <parse_argv>
  401914:	stur	w0, [x29, #-28]
  401918:	ldur	w10, [x29, #-28]
  40191c:	cmp	w10, #0x0
  401920:	cset	w10, gt
  401924:	tbnz	w10, #0, 40193c <run+0x60>
  401928:	ldur	w8, [x29, #-28]
  40192c:	stur	w8, [x29, #-4]
  401930:	mov	w8, #0x1                   	// #1
  401934:	stur	w8, [x29, #-36]
  401938:	b	401c54 <run+0x378>
  40193c:	bl	4013a0 <log_setup_service@plt>
  401940:	mov	w0, #0x12                  	// #18
  401944:	bl	4013b0 <umask@plt>
  401948:	adrp	x8, 403000 <strv_isempty+0x10>
  40194c:	add	x8, x8, #0x230
  401950:	mov	x0, x8
  401954:	bl	4013c0 <internal_ordered_hashmap_new@plt>
  401958:	stur	x0, [x29, #-24]
  40195c:	ldur	x8, [x29, #-24]
  401960:	cbnz	x8, 401990 <run+0xb4>
  401964:	mov	w8, wzr
  401968:	mov	w0, w8
  40196c:	ldr	x1, [sp, #32]
  401970:	mov	w2, #0x145                 	// #325
  401974:	adrp	x3, 403000 <strv_isempty+0x10>
  401978:	add	x3, x3, #0x367
  40197c:	bl	4013d0 <log_oom_internal@plt>
  401980:	stur	w0, [x29, #-4]
  401984:	mov	w8, #0x1                   	// #1
  401988:	stur	w8, [x29, #-36]
  40198c:	b	401c54 <run+0x378>
  401990:	ldur	w8, [x29, #-8]
  401994:	adrp	x9, 420000 <__TMC_END__>
  401998:	add	x9, x9, #0x88
  40199c:	ldr	w10, [x9]
  4019a0:	cmp	w8, w10
  4019a4:	b.le	401a2c <run+0x150>
  4019a8:	stur	wzr, [x29, #-28]
  4019ac:	adrp	x8, 420000 <__TMC_END__>
  4019b0:	add	x8, x8, #0x88
  4019b4:	ldr	w9, [x8]
  4019b8:	stur	w9, [x29, #-40]
  4019bc:	ldur	w8, [x29, #-40]
  4019c0:	ldur	w9, [x29, #-8]
  4019c4:	cmp	w8, w9
  4019c8:	b.ge	401a28 <run+0x14c>  // b.tcont
  4019cc:	ldur	x0, [x29, #-24]
  4019d0:	ldur	x8, [x29, #-16]
  4019d4:	ldursw	x9, [x29, #-40]
  4019d8:	mov	x10, #0x8                   	// #8
  4019dc:	mul	x9, x10, x9
  4019e0:	add	x8, x8, x9
  4019e4:	ldr	x1, [x8]
  4019e8:	mov	w11, wzr
  4019ec:	and	w2, w11, #0x1
  4019f0:	bl	402158 <parse_file>
  4019f4:	stur	w0, [x29, #-32]
  4019f8:	ldur	w11, [x29, #-32]
  4019fc:	cmp	w11, #0x0
  401a00:	cset	w11, ge  // ge = tcont
  401a04:	tbnz	w11, #0, 401a18 <run+0x13c>
  401a08:	ldur	w8, [x29, #-28]
  401a0c:	cbnz	w8, 401a18 <run+0x13c>
  401a10:	ldur	w8, [x29, #-32]
  401a14:	stur	w8, [x29, #-28]
  401a18:	ldur	w8, [x29, #-40]
  401a1c:	add	w8, w8, #0x1
  401a20:	stur	w8, [x29, #-40]
  401a24:	b	4019bc <run+0xe0>
  401a28:	b	401c18 <run+0x33c>
  401a2c:	sub	x0, x29, #0x30
  401a30:	mov	x8, xzr
  401a34:	stur	x8, [x29, #-48]
  401a38:	add	x9, sp, #0x38
  401a3c:	str	x0, [sp, #24]
  401a40:	mov	x0, x9
  401a44:	adrp	x1, 420000 <__TMC_END__>
  401a48:	add	x1, x1, #0x0
  401a4c:	mov	x2, #0x30                  	// #48
  401a50:	str	x8, [sp, #16]
  401a54:	str	x9, [sp, #8]
  401a58:	bl	4013e0 <memcpy@plt>
  401a5c:	ldr	x0, [sp, #24]
  401a60:	adrp	x1, 403000 <strv_isempty+0x10>
  401a64:	add	x1, x1, #0x36b
  401a68:	ldr	x8, [sp, #16]
  401a6c:	mov	x2, x8
  401a70:	mov	w10, wzr
  401a74:	mov	w3, w10
  401a78:	ldr	x4, [sp, #8]
  401a7c:	bl	4013f0 <conf_files_list_strv@plt>
  401a80:	stur	w0, [x29, #-28]
  401a84:	ldur	w10, [x29, #-28]
  401a88:	cmp	w10, #0x0
  401a8c:	cset	w10, ge  // ge = tcont
  401a90:	tbnz	w10, #0, 401b24 <run+0x248>
  401a94:	mov	w8, #0x3                   	// #3
  401a98:	str	w8, [sp, #52]
  401a9c:	ldur	w8, [x29, #-28]
  401aa0:	str	w8, [sp, #48]
  401aa4:	str	wzr, [sp, #44]
  401aa8:	ldr	w0, [sp, #44]
  401aac:	bl	401400 <log_get_max_level_realm@plt>
  401ab0:	ldr	w8, [sp, #52]
  401ab4:	and	w8, w8, #0x7
  401ab8:	cmp	w0, w8
  401abc:	b.lt	401af4 <run+0x218>  // b.tstop
  401ac0:	ldr	w8, [sp, #44]
  401ac4:	ldr	w9, [sp, #52]
  401ac8:	orr	w0, w9, w8, lsl #10
  401acc:	ldr	w1, [sp, #48]
  401ad0:	ldr	x2, [sp, #32]
  401ad4:	mov	w3, #0x157                 	// #343
  401ad8:	adrp	x4, 403000 <strv_isempty+0x10>
  401adc:	add	x4, x4, #0x367
  401ae0:	adrp	x5, 403000 <strv_isempty+0x10>
  401ae4:	add	x5, x5, #0x3c5
  401ae8:	bl	401410 <log_internal_realm@plt>
  401aec:	str	w0, [sp, #4]
  401af0:	b	401b08 <run+0x22c>
  401af4:	ldr	w0, [sp, #48]
  401af8:	bl	401420 <abs@plt>
  401afc:	mov	w8, wzr
  401b00:	subs	w8, w8, w0, uxtb
  401b04:	str	w8, [sp, #4]
  401b08:	ldr	w8, [sp, #4]
  401b0c:	str	w8, [sp, #40]
  401b10:	ldr	w8, [sp, #40]
  401b14:	stur	w8, [x29, #-4]
  401b18:	mov	w8, #0x1                   	// #1
  401b1c:	stur	w8, [x29, #-36]
  401b20:	b	401bf8 <run+0x31c>
  401b24:	adrp	x8, 420000 <__TMC_END__>
  401b28:	add	x8, x8, #0x70
  401b2c:	ldrb	w9, [x8]
  401b30:	tbnz	w9, #0, 401b38 <run+0x25c>
  401b34:	b	401b70 <run+0x294>
  401b38:	adrp	x8, 420000 <__TMC_END__>
  401b3c:	add	x8, x8, #0x74
  401b40:	ldr	w0, [x8]
  401b44:	bl	401430 <pager_open@plt>
  401b48:	ldur	x1, [x29, #-48]
  401b4c:	mov	x8, xzr
  401b50:	mov	x0, x8
  401b54:	mov	w9, wzr
  401b58:	mov	w2, w9
  401b5c:	bl	401440 <cat_files@plt>
  401b60:	stur	w0, [x29, #-4]
  401b64:	mov	w9, #0x1                   	// #1
  401b68:	stur	w9, [x29, #-36]
  401b6c:	b	401bf8 <run+0x31c>
  401b70:	ldur	x8, [x29, #-48]
  401b74:	stur	x8, [x29, #-56]
  401b78:	ldur	x8, [x29, #-56]
  401b7c:	mov	w9, #0x0                   	// #0
  401b80:	str	w9, [sp]
  401b84:	cbz	x8, 401b9c <run+0x2c0>
  401b88:	ldur	x8, [x29, #-56]
  401b8c:	ldr	x8, [x8]
  401b90:	cmp	x8, #0x0
  401b94:	cset	w9, ne  // ne = any
  401b98:	str	w9, [sp]
  401b9c:	ldr	w8, [sp]
  401ba0:	tbnz	w8, #0, 401ba8 <run+0x2cc>
  401ba4:	b	401bf4 <run+0x318>
  401ba8:	ldur	x0, [x29, #-24]
  401bac:	ldur	x8, [x29, #-56]
  401bb0:	ldr	x1, [x8]
  401bb4:	mov	w9, #0x1                   	// #1
  401bb8:	and	w2, w9, #0x1
  401bbc:	bl	402158 <parse_file>
  401bc0:	stur	w0, [x29, #-32]
  401bc4:	ldur	w9, [x29, #-32]
  401bc8:	cmp	w9, #0x0
  401bcc:	cset	w9, ge  // ge = tcont
  401bd0:	tbnz	w9, #0, 401be4 <run+0x308>
  401bd4:	ldur	w8, [x29, #-28]
  401bd8:	cbnz	w8, 401be4 <run+0x308>
  401bdc:	ldur	w8, [x29, #-32]
  401be0:	stur	w8, [x29, #-28]
  401be4:	ldur	x8, [x29, #-56]
  401be8:	add	x8, x8, #0x8
  401bec:	stur	x8, [x29, #-56]
  401bf0:	b	401b78 <run+0x29c>
  401bf4:	stur	wzr, [x29, #-36]
  401bf8:	sub	x0, x29, #0x30
  401bfc:	bl	401cec <strv_freep>
  401c00:	ldur	w8, [x29, #-36]
  401c04:	cmp	w8, #0x0
  401c08:	cset	w8, eq  // eq = none
  401c0c:	eor	w8, w8, #0x1
  401c10:	tbnz	w8, #0, 401c54 <run+0x378>
  401c14:	b	401c18 <run+0x33c>
  401c18:	ldur	x0, [x29, #-24]
  401c1c:	bl	40287c <apply_all>
  401c20:	stur	w0, [x29, #-32]
  401c24:	ldur	w8, [x29, #-32]
  401c28:	cmp	w8, #0x0
  401c2c:	cset	w8, ge  // ge = tcont
  401c30:	tbnz	w8, #0, 401c44 <run+0x368>
  401c34:	ldur	w8, [x29, #-28]
  401c38:	cbnz	w8, 401c44 <run+0x368>
  401c3c:	ldur	w8, [x29, #-32]
  401c40:	stur	w8, [x29, #-28]
  401c44:	ldur	w8, [x29, #-28]
  401c48:	stur	w8, [x29, #-4]
  401c4c:	mov	w8, #0x1                   	// #1
  401c50:	stur	w8, [x29, #-36]
  401c54:	sub	x0, x29, #0x18
  401c58:	bl	401da8 <ordered_hashmap_freep>
  401c5c:	ldur	w0, [x29, #-4]
  401c60:	ldp	x29, x30, [sp, #160]
  401c64:	add	sp, sp, #0xb0
  401c68:	ret

0000000000401c6c <static_destruct>:
  401c6c:	sub	sp, sp, #0x20
  401c70:	stp	x29, x30, [sp, #16]
  401c74:	add	x29, sp, #0x10
  401c78:	adrp	x8, 41f000 <__FRAME_END__+0x1b710>
  401c7c:	ldr	x8, [x8, #3688]
  401c80:	str	x8, [sp]
  401c84:	cbnz	x8, 401c8c <static_destruct+0x20>
  401c88:	b	401ce0 <static_destruct+0x74>
  401c8c:	ldr	x0, [sp]
  401c90:	mov	x1, #0x8                   	// #8
  401c94:	bl	403154 <ALIGN_TO>
  401c98:	str	x0, [sp, #8]
  401c9c:	ldr	x8, [sp, #8]
  401ca0:	adrp	x9, 41f000 <__FRAME_END__+0x1b710>
  401ca4:	ldr	x9, [x9, #3696]
  401ca8:	cmp	x8, x9
  401cac:	b.cs	401ce0 <static_destruct+0x74>  // b.hs, b.nlast
  401cb0:	ldr	x8, [sp, #8]
  401cb4:	ldr	x8, [x8, #8]
  401cb8:	ldr	x9, [sp, #8]
  401cbc:	ldr	x0, [x9]
  401cc0:	blr	x8
  401cc4:	ldr	x8, [sp, #8]
  401cc8:	add	x8, x8, #0x10
  401ccc:	mov	x0, x8
  401cd0:	mov	x1, #0x8                   	// #8
  401cd4:	bl	403154 <ALIGN_TO>
  401cd8:	str	x0, [sp, #8]
  401cdc:	b	401c9c <static_destruct+0x30>
  401ce0:	ldp	x29, x30, [sp, #16]
  401ce4:	add	sp, sp, #0x20
  401ce8:	ret

0000000000401cec <strv_freep>:
  401cec:	sub	sp, sp, #0x20
  401cf0:	stp	x29, x30, [sp, #16]
  401cf4:	add	x29, sp, #0x10
  401cf8:	str	x0, [sp, #8]
  401cfc:	ldr	x8, [sp, #8]
  401d00:	ldr	x8, [x8]
  401d04:	cbz	x8, 401d14 <strv_freep+0x28>
  401d08:	ldr	x8, [sp, #8]
  401d0c:	ldr	x0, [x8]
  401d10:	bl	401450 <strv_free@plt>
  401d14:	ldp	x29, x30, [sp, #16]
  401d18:	add	sp, sp, #0x20
  401d1c:	ret

0000000000401d20 <option_free>:
  401d20:	sub	sp, sp, #0x20
  401d24:	stp	x29, x30, [sp, #16]
  401d28:	add	x29, sp, #0x10
  401d2c:	str	x0, [sp]
  401d30:	ldr	x8, [sp]
  401d34:	cbnz	x8, 401d44 <option_free+0x24>
  401d38:	mov	x8, xzr
  401d3c:	str	x8, [sp, #8]
  401d40:	b	401d68 <option_free+0x48>
  401d44:	ldr	x8, [sp]
  401d48:	ldr	x0, [x8]
  401d4c:	bl	401460 <free@plt>
  401d50:	ldr	x8, [sp]
  401d54:	ldr	x0, [x8, #8]
  401d58:	bl	401460 <free@plt>
  401d5c:	ldr	x0, [sp]
  401d60:	bl	401d78 <mfree>
  401d64:	str	x0, [sp, #8]
  401d68:	ldr	x0, [sp, #8]
  401d6c:	ldp	x29, x30, [sp, #16]
  401d70:	add	sp, sp, #0x20
  401d74:	ret

0000000000401d78 <mfree>:
  401d78:	sub	sp, sp, #0x20
  401d7c:	stp	x29, x30, [sp, #16]
  401d80:	add	x29, sp, #0x10
  401d84:	mov	x8, xzr
  401d88:	str	x0, [sp, #8]
  401d8c:	ldr	x0, [sp, #8]
  401d90:	str	x8, [sp]
  401d94:	bl	401460 <free@plt>
  401d98:	ldr	x0, [sp]
  401d9c:	ldp	x29, x30, [sp, #16]
  401da0:	add	sp, sp, #0x20
  401da4:	ret

0000000000401da8 <ordered_hashmap_freep>:
  401da8:	sub	sp, sp, #0x20
  401dac:	stp	x29, x30, [sp, #16]
  401db0:	add	x29, sp, #0x10
  401db4:	str	x0, [sp, #8]
  401db8:	ldr	x8, [sp, #8]
  401dbc:	ldr	x8, [x8]
  401dc0:	cbz	x8, 401dd0 <ordered_hashmap_freep+0x28>
  401dc4:	ldr	x8, [sp, #8]
  401dc8:	ldr	x0, [x8]
  401dcc:	bl	402ac8 <ordered_hashmap_free>
  401dd0:	ldp	x29, x30, [sp, #16]
  401dd4:	add	sp, sp, #0x20
  401dd8:	ret

0000000000401ddc <parse_argv>:
  401ddc:	sub	sp, sp, #0x70
  401de0:	stp	x29, x30, [sp, #96]
  401de4:	add	x29, sp, #0x60
  401de8:	adrp	x8, 403000 <strv_isempty+0x10>
  401dec:	add	x8, x8, #0x350
  401df0:	add	x8, x8, #0x3
  401df4:	adrp	x9, 403000 <strv_isempty+0x10>
  401df8:	add	x9, x9, #0x44c
  401dfc:	adrp	x10, 420000 <__TMC_END__>
  401e00:	add	x10, x10, #0x90
  401e04:	adrp	x11, 403000 <strv_isempty+0x10>
  401e08:	add	x11, x11, #0x41e
  401e0c:	stur	w0, [x29, #-8]
  401e10:	stur	x1, [x29, #-16]
  401e14:	str	x8, [sp, #40]
  401e18:	str	x9, [sp, #32]
  401e1c:	str	x10, [sp, #24]
  401e20:	str	x11, [sp, #16]
  401e24:	ldur	w8, [x29, #-8]
  401e28:	cmp	w8, #0x0
  401e2c:	cset	w8, ge  // ge = tcont
  401e30:	mov	w9, #0x1                   	// #1
  401e34:	eor	w8, w8, #0x1
  401e38:	eor	w8, w8, w9
  401e3c:	eor	w8, w8, w9
  401e40:	and	w8, w8, #0x1
  401e44:	mov	w0, w8
  401e48:	sxtw	x10, w0
  401e4c:	cbz	x10, 401e70 <parse_argv+0x94>
  401e50:	mov	w8, wzr
  401e54:	mov	w0, w8
  401e58:	adrp	x1, 403000 <strv_isempty+0x10>
  401e5c:	add	x1, x1, #0x414
  401e60:	ldr	x2, [sp, #40]
  401e64:	mov	w3, #0xfe                  	// #254
  401e68:	ldr	x4, [sp, #16]
  401e6c:	bl	401470 <log_assert_failed_realm@plt>
  401e70:	ldur	x8, [x29, #-16]
  401e74:	cmp	x8, #0x0
  401e78:	cset	w9, ne  // ne = any
  401e7c:	mov	w10, #0x1                   	// #1
  401e80:	eor	w9, w9, #0x1
  401e84:	eor	w9, w9, w10
  401e88:	eor	w9, w9, w10
  401e8c:	and	w9, w9, #0x1
  401e90:	mov	w0, w9
  401e94:	sxtw	x8, w0
  401e98:	cbz	x8, 401ebc <parse_argv+0xe0>
  401e9c:	mov	w8, wzr
  401ea0:	mov	w0, w8
  401ea4:	adrp	x1, 403000 <strv_isempty+0x10>
  401ea8:	add	x1, x1, #0x43b
  401eac:	ldr	x2, [sp, #40]
  401eb0:	mov	w3, #0xff                  	// #255
  401eb4:	ldr	x4, [sp, #16]
  401eb8:	bl	401470 <log_assert_failed_realm@plt>
  401ebc:	ldur	w0, [x29, #-8]
  401ec0:	ldur	x1, [x29, #-16]
  401ec4:	adrp	x2, 403000 <strv_isempty+0x10>
  401ec8:	add	x2, x2, #0x440
  401ecc:	adrp	x3, 403000 <strv_isempty+0x10>
  401ed0:	add	x3, x3, #0x250
  401ed4:	mov	x8, xzr
  401ed8:	mov	x4, x8
  401edc:	bl	401480 <getopt_long@plt>
  401ee0:	stur	w0, [x29, #-20]
  401ee4:	cmp	w0, #0x0
  401ee8:	cset	w9, lt  // lt = tstop
  401eec:	tbnz	w9, #0, 40208c <parse_argv+0x2b0>
  401ef0:	ldur	w8, [x29, #-20]
  401ef4:	cmp	w8, #0x3f
  401ef8:	str	w8, [sp, #12]
  401efc:	b.eq	40205c <parse_argv+0x280>  // b.none
  401f00:	b	401f04 <parse_argv+0x128>
  401f04:	ldr	w8, [sp, #12]
  401f08:	cmp	w8, #0x68
  401f0c:	b.eq	401f54 <parse_argv+0x178>  // b.none
  401f10:	b	401f14 <parse_argv+0x138>
  401f14:	ldr	w8, [sp, #12]
  401f18:	cmp	w8, #0x100
  401f1c:	b.eq	401f60 <parse_argv+0x184>  // b.none
  401f20:	b	401f24 <parse_argv+0x148>
  401f24:	ldr	w8, [sp, #12]
  401f28:	cmp	w8, #0x101
  401f2c:	b.eq	401f6c <parse_argv+0x190>  // b.none
  401f30:	b	401f34 <parse_argv+0x158>
  401f34:	ldr	w8, [sp, #12]
  401f38:	cmp	w8, #0x102
  401f3c:	b.eq	401f80 <parse_argv+0x1a4>  // b.none
  401f40:	b	401f44 <parse_argv+0x168>
  401f44:	ldr	w8, [sp, #12]
  401f48:	cmp	w8, #0x103
  401f4c:	b.eq	402044 <parse_argv+0x268>  // b.none
  401f50:	b	402068 <parse_argv+0x28c>
  401f54:	bl	402af8 <help>
  401f58:	stur	w0, [x29, #-4]
  401f5c:	b	402148 <parse_argv+0x36c>
  401f60:	bl	401490 <version@plt>
  401f64:	stur	w0, [x29, #-4]
  401f68:	b	402148 <parse_argv+0x36c>
  401f6c:	mov	w8, #0x1                   	// #1
  401f70:	adrp	x9, 420000 <__TMC_END__>
  401f74:	add	x9, x9, #0x70
  401f78:	strb	w8, [x9]
  401f7c:	b	402088 <parse_argv+0x2ac>
  401f80:	ldr	x8, [sp, #24]
  401f84:	ldr	x0, [x8]
  401f88:	bl	4014a0 <sysctl_normalize@plt>
  401f8c:	ldr	x8, [sp, #24]
  401f90:	ldr	x9, [x8]
  401f94:	mov	x0, x9
  401f98:	adrp	x1, 403000 <strv_isempty+0x10>
  401f9c:	add	x1, x1, #0x442
  401fa0:	bl	4014b0 <path_startswith@plt>
  401fa4:	cbz	x0, 401fbc <parse_argv+0x1e0>
  401fa8:	ldr	x8, [sp, #24]
  401fac:	ldr	x0, [x8]
  401fb0:	bl	4014c0 <strdup@plt>
  401fb4:	stur	x0, [x29, #-32]
  401fb8:	b	401fdc <parse_argv+0x200>
  401fbc:	ldr	x8, [sp, #24]
  401fc0:	ldr	x1, [x8]
  401fc4:	adrp	x0, 403000 <strv_isempty+0x10>
  401fc8:	add	x0, x0, #0x442
  401fcc:	mov	x9, #0xffffffffffffffff    	// #-1
  401fd0:	mov	x2, x9
  401fd4:	bl	4014d0 <path_join_internal@plt>
  401fd8:	stur	x0, [x29, #-32]
  401fdc:	ldur	x8, [x29, #-32]
  401fe0:	cbnz	x8, 402004 <parse_argv+0x228>
  401fe4:	mov	w8, wzr
  401fe8:	mov	w0, w8
  401fec:	ldr	x1, [sp, #40]
  401ff0:	mov	w2, #0x11d                 	// #285
  401ff4:	ldr	x3, [sp, #32]
  401ff8:	bl	4013d0 <log_oom_internal@plt>
  401ffc:	stur	w0, [x29, #-4]
  402000:	b	402148 <parse_argv+0x36c>
  402004:	ldur	x1, [x29, #-32]
  402008:	adrp	x0, 420000 <__TMC_END__>
  40200c:	add	x0, x0, #0x68
  402010:	bl	4014e0 <strv_consume@plt>
  402014:	cmp	w0, #0x0
  402018:	cset	w8, ge  // ge = tcont
  40201c:	tbnz	w8, #0, 402040 <parse_argv+0x264>
  402020:	mov	w8, wzr
  402024:	mov	w0, w8
  402028:	ldr	x1, [sp, #40]
  40202c:	mov	w2, #0x120                 	// #288
  402030:	ldr	x3, [sp, #32]
  402034:	bl	4013d0 <log_oom_internal@plt>
  402038:	stur	w0, [x29, #-4]
  40203c:	b	402148 <parse_argv+0x36c>
  402040:	b	402088 <parse_argv+0x2ac>
  402044:	adrp	x8, 420000 <__TMC_END__>
  402048:	add	x8, x8, #0x74
  40204c:	ldr	w9, [x8]
  402050:	orr	w9, w9, #0x1
  402054:	str	w9, [x8]
  402058:	b	402088 <parse_argv+0x2ac>
  40205c:	mov	w8, #0xffffffea            	// #-22
  402060:	stur	w8, [x29, #-4]
  402064:	b	402148 <parse_argv+0x36c>
  402068:	mov	w8, wzr
  40206c:	mov	w0, w8
  402070:	adrp	x1, 403000 <strv_isempty+0x10>
  402074:	add	x1, x1, #0x457
  402078:	ldr	x2, [sp, #40]
  40207c:	mov	w3, #0x12d                 	// #301
  402080:	ldr	x4, [sp, #16]
  402084:	bl	4014f0 <log_assert_failed_unreachable_realm@plt>
  402088:	b	401ebc <parse_argv+0xe0>
  40208c:	adrp	x8, 420000 <__TMC_END__>
  402090:	add	x8, x8, #0x70
  402094:	ldrb	w9, [x8]
  402098:	tbnz	w9, #0, 4020a0 <parse_argv+0x2c4>
  40209c:	b	402140 <parse_argv+0x364>
  4020a0:	ldur	w8, [x29, #-8]
  4020a4:	adrp	x9, 420000 <__TMC_END__>
  4020a8:	add	x9, x9, #0x88
  4020ac:	ldr	w10, [x9]
  4020b0:	cmp	w8, w10
  4020b4:	b.le	402140 <parse_argv+0x364>
  4020b8:	mov	w8, #0x3                   	// #3
  4020bc:	stur	w8, [x29, #-36]
  4020c0:	mov	w8, #0x16                  	// #22
  4020c4:	movk	w8, #0x4000, lsl #16
  4020c8:	stur	w8, [x29, #-40]
  4020cc:	stur	wzr, [x29, #-44]
  4020d0:	ldur	w0, [x29, #-44]
  4020d4:	bl	401400 <log_get_max_level_realm@plt>
  4020d8:	ldur	w8, [x29, #-36]
  4020dc:	and	w8, w8, #0x7
  4020e0:	cmp	w0, w8
  4020e4:	b.lt	402118 <parse_argv+0x33c>  // b.tstop
  4020e8:	ldur	w8, [x29, #-44]
  4020ec:	ldur	w9, [x29, #-36]
  4020f0:	orr	w0, w9, w8, lsl #10
  4020f4:	ldur	w1, [x29, #-40]
  4020f8:	ldr	x2, [sp, #40]
  4020fc:	mov	w3, #0x132                 	// #306
  402100:	ldr	x4, [sp, #32]
  402104:	adrp	x5, 403000 <strv_isempty+0x10>
  402108:	add	x5, x5, #0x468
  40210c:	bl	401410 <log_internal_realm@plt>
  402110:	str	w0, [sp, #8]
  402114:	b	40212c <parse_argv+0x350>
  402118:	ldur	w0, [x29, #-40]
  40211c:	bl	401420 <abs@plt>
  402120:	mov	w8, wzr
  402124:	subs	w8, w8, w0, uxtb
  402128:	str	w8, [sp, #8]
  40212c:	ldr	w8, [sp, #8]
  402130:	str	w8, [sp, #48]
  402134:	ldr	w8, [sp, #48]
  402138:	stur	w8, [x29, #-4]
  40213c:	b	402148 <parse_argv+0x36c>
  402140:	mov	w8, #0x1                   	// #1
  402144:	stur	w8, [x29, #-4]
  402148:	ldur	w0, [x29, #-4]
  40214c:	ldp	x29, x30, [sp, #96]
  402150:	add	sp, sp, #0x70
  402154:	ret

0000000000402158 <parse_file>:
  402158:	sub	sp, sp, #0x180
  40215c:	stp	x29, x30, [sp, #352]
  402160:	str	x28, [sp, #368]
  402164:	add	x29, sp, #0x160
  402168:	mov	x8, xzr
  40216c:	adrp	x9, 403000 <strv_isempty+0x10>
  402170:	add	x9, x9, #0x350
  402174:	add	x9, x9, #0x3
  402178:	adrp	x10, 403000 <strv_isempty+0x10>
  40217c:	add	x10, x10, #0x65a
  402180:	mov	w11, #0x1                   	// #1
  402184:	stur	x0, [x29, #-16]
  402188:	stur	x1, [x29, #-24]
  40218c:	and	w11, w2, w11
  402190:	sturb	w11, [x29, #-25]
  402194:	stur	x8, [x29, #-40]
  402198:	stur	wzr, [x29, #-44]
  40219c:	str	x9, [sp, #80]
  4021a0:	str	x10, [sp, #72]
  4021a4:	ldur	x8, [x29, #-24]
  4021a8:	cmp	x8, #0x0
  4021ac:	cset	w9, ne  // ne = any
  4021b0:	mov	w10, #0x1                   	// #1
  4021b4:	eor	w9, w9, #0x1
  4021b8:	eor	w9, w9, w10
  4021bc:	eor	w9, w9, w10
  4021c0:	and	w9, w9, #0x1
  4021c4:	mov	w0, w9
  4021c8:	sxtw	x8, w0
  4021cc:	cbz	x8, 4021f4 <parse_file+0x9c>
  4021d0:	mov	w8, wzr
  4021d4:	mov	w0, w8
  4021d8:	adrp	x1, 403000 <strv_isempty+0x10>
  4021dc:	add	x1, x1, #0x61c
  4021e0:	ldr	x2, [sp, #80]
  4021e4:	mov	w3, #0x82                  	// #130
  4021e8:	adrp	x4, 403000 <strv_isempty+0x10>
  4021ec:	add	x4, x4, #0x621
  4021f0:	bl	401470 <log_assert_failed_realm@plt>
  4021f4:	ldur	x0, [x29, #-24]
  4021f8:	sub	x8, x29, #0x60
  4021fc:	str	x0, [sp, #64]
  402200:	mov	x0, x8
  402204:	adrp	x1, 420000 <__TMC_END__>
  402208:	add	x1, x1, #0x30
  40220c:	mov	x2, #0x30                  	// #48
  402210:	str	x8, [sp, #56]
  402214:	bl	4013e0 <memcpy@plt>
  402218:	ldr	x0, [sp, #64]
  40221c:	adrp	x1, 403000 <strv_isempty+0x10>
  402220:	add	x1, x1, #0x657
  402224:	mov	x8, xzr
  402228:	mov	x2, x8
  40222c:	ldr	x3, [sp, #56]
  402230:	sub	x4, x29, #0x28
  402234:	bl	401500 <search_and_fopen@plt>
  402238:	stur	w0, [x29, #-48]
  40223c:	ldur	w9, [x29, #-48]
  402240:	cmp	w9, #0x0
  402244:	cset	w9, ge  // ge = tcont
  402248:	tbnz	w9, #0, 402308 <parse_file+0x1b0>
  40224c:	ldurb	w8, [x29, #-25]
  402250:	tbnz	w8, #0, 402258 <parse_file+0x100>
  402254:	b	402278 <parse_file+0x120>
  402258:	ldur	w8, [x29, #-48]
  40225c:	mov	w9, #0xfffffffe            	// #-2
  402260:	cmp	w8, w9
  402264:	b.ne	402278 <parse_file+0x120>  // b.any
  402268:	stur	wzr, [x29, #-4]
  40226c:	mov	w8, #0x1                   	// #1
  402270:	stur	w8, [x29, #-100]
  402274:	b	402860 <parse_file+0x708>
  402278:	mov	w8, #0x3                   	// #3
  40227c:	stur	w8, [x29, #-104]
  402280:	ldur	w8, [x29, #-48]
  402284:	stur	w8, [x29, #-108]
  402288:	stur	wzr, [x29, #-112]
  40228c:	ldur	w0, [x29, #-112]
  402290:	bl	401400 <log_get_max_level_realm@plt>
  402294:	ldur	w8, [x29, #-104]
  402298:	and	w8, w8, #0x7
  40229c:	cmp	w0, w8
  4022a0:	b.lt	4022d8 <parse_file+0x180>  // b.tstop
  4022a4:	ldur	w8, [x29, #-112]
  4022a8:	ldur	w9, [x29, #-104]
  4022ac:	orr	w0, w9, w8, lsl #10
  4022b0:	ldur	w1, [x29, #-108]
  4022b4:	ldur	x6, [x29, #-24]
  4022b8:	ldr	x2, [sp, #80]
  4022bc:	mov	w3, #0x89                  	// #137
  4022c0:	ldr	x4, [sp, #72]
  4022c4:	adrp	x5, 403000 <strv_isempty+0x10>
  4022c8:	add	x5, x5, #0x665
  4022cc:	bl	401410 <log_internal_realm@plt>
  4022d0:	str	w0, [sp, #52]
  4022d4:	b	4022ec <parse_file+0x194>
  4022d8:	ldur	w0, [x29, #-108]
  4022dc:	bl	401420 <abs@plt>
  4022e0:	mov	w8, wzr
  4022e4:	subs	w8, w8, w0, uxtb
  4022e8:	str	w8, [sp, #52]
  4022ec:	ldr	w8, [sp, #52]
  4022f0:	stur	w8, [x29, #-116]
  4022f4:	ldur	w8, [x29, #-116]
  4022f8:	stur	w8, [x29, #-4]
  4022fc:	mov	w8, #0x1                   	// #1
  402300:	stur	w8, [x29, #-100]
  402304:	b	402860 <parse_file+0x708>
  402308:	mov	w8, #0x7                   	// #7
  40230c:	stur	w8, [x29, #-120]
  402310:	stur	wzr, [x29, #-124]
  402314:	stur	wzr, [x29, #-128]
  402318:	ldur	w0, [x29, #-128]
  40231c:	bl	401400 <log_get_max_level_realm@plt>
  402320:	ldur	w8, [x29, #-120]
  402324:	and	w8, w8, #0x7
  402328:	cmp	w0, w8
  40232c:	b.lt	402364 <parse_file+0x20c>  // b.tstop
  402330:	ldur	w8, [x29, #-128]
  402334:	ldur	w9, [x29, #-120]
  402338:	orr	w0, w9, w8, lsl #10
  40233c:	ldur	w1, [x29, #-124]
  402340:	ldur	x6, [x29, #-24]
  402344:	ldr	x2, [sp, #80]
  402348:	mov	w3, #0x8c                  	// #140
  40234c:	ldr	x4, [sp, #72]
  402350:	adrp	x5, 403000 <strv_isempty+0x10>
  402354:	add	x5, x5, #0x68c
  402358:	bl	401410 <log_internal_realm@plt>
  40235c:	str	w0, [sp, #48]
  402360:	b	402378 <parse_file+0x220>
  402364:	ldur	w0, [x29, #-124]
  402368:	bl	401420 <abs@plt>
  40236c:	mov	w8, wzr
  402370:	subs	w8, w8, w0, uxtb
  402374:	str	w8, [sp, #48]
  402378:	ldr	w8, [sp, #48]
  40237c:	stur	w8, [x29, #-132]
  402380:	mov	x8, xzr
  402384:	stur	x8, [x29, #-144]
  402388:	sub	x2, x29, #0x98
  40238c:	stur	x8, [x29, #-152]
  402390:	ldur	x0, [x29, #-40]
  402394:	mov	x1, #0x100000              	// #1048576
  402398:	bl	402c38 <read_line>
  40239c:	str	w0, [sp, #164]
  4023a0:	ldr	w9, [sp, #164]
  4023a4:	cbnz	w9, 4023b4 <parse_file+0x25c>
  4023a8:	mov	w8, #0x4                   	// #4
  4023ac:	stur	w8, [x29, #-100]
  4023b0:	b	40280c <parse_file+0x6b4>
  4023b4:	ldr	w8, [sp, #164]
  4023b8:	cmp	w8, #0x0
  4023bc:	cset	w8, ge  // ge = tcont
  4023c0:	tbnz	w8, #0, 402454 <parse_file+0x2fc>
  4023c4:	mov	w8, #0x3                   	// #3
  4023c8:	str	w8, [sp, #160]
  4023cc:	ldr	w8, [sp, #164]
  4023d0:	str	w8, [sp, #156]
  4023d4:	str	wzr, [sp, #152]
  4023d8:	ldr	w0, [sp, #152]
  4023dc:	bl	401400 <log_get_max_level_realm@plt>
  4023e0:	ldr	w8, [sp, #160]
  4023e4:	and	w8, w8, #0x7
  4023e8:	cmp	w0, w8
  4023ec:	b.lt	402424 <parse_file+0x2cc>  // b.tstop
  4023f0:	ldr	w8, [sp, #152]
  4023f4:	ldr	w9, [sp, #160]
  4023f8:	orr	w0, w9, w8, lsl #10
  4023fc:	ldr	w1, [sp, #156]
  402400:	ldur	x6, [x29, #-24]
  402404:	ldr	x2, [sp, #80]
  402408:	mov	w3, #0x99                  	// #153
  40240c:	ldr	x4, [sp, #72]
  402410:	adrp	x5, 403000 <strv_isempty+0x10>
  402414:	add	x5, x5, #0x697
  402418:	bl	401410 <log_internal_realm@plt>
  40241c:	str	w0, [sp, #44]
  402420:	b	402438 <parse_file+0x2e0>
  402424:	ldr	w0, [sp, #156]
  402428:	bl	401420 <abs@plt>
  40242c:	mov	w8, wzr
  402430:	subs	w8, w8, w0, uxtb
  402434:	str	w8, [sp, #44]
  402438:	ldr	w8, [sp, #44]
  40243c:	str	w8, [sp, #148]
  402440:	ldr	w8, [sp, #148]
  402444:	stur	w8, [x29, #-4]
  402448:	mov	w8, #0x1                   	// #1
  40244c:	stur	w8, [x29, #-100]
  402450:	b	40280c <parse_file+0x6b4>
  402454:	ldur	w8, [x29, #-44]
  402458:	add	w8, w8, #0x1
  40245c:	stur	w8, [x29, #-44]
  402460:	ldur	x0, [x29, #-152]
  402464:	bl	401510 <strstrip@plt>
  402468:	str	x0, [sp, #176]
  40246c:	ldr	x0, [sp, #176]
  402470:	bl	402c74 <isempty>
  402474:	tbnz	w0, #0, 40247c <parse_file+0x324>
  402478:	b	402488 <parse_file+0x330>
  40247c:	mov	w8, #0x5                   	// #5
  402480:	stur	w8, [x29, #-100]
  402484:	b	40280c <parse_file+0x6b4>
  402488:	ldr	x8, [sp, #176]
  40248c:	ldrb	w1, [x8]
  402490:	adrp	x0, 403000 <strv_isempty+0x10>
  402494:	add	x0, x0, #0x6be
  402498:	bl	401520 <strchr@plt>
  40249c:	cbz	x0, 4024ac <parse_file+0x354>
  4024a0:	mov	w8, #0x5                   	// #5
  4024a4:	stur	w8, [x29, #-100]
  4024a8:	b	40280c <parse_file+0x6b4>
  4024ac:	ldr	x0, [sp, #176]
  4024b0:	mov	w1, #0x3d                  	// #61
  4024b4:	bl	401520 <strchr@plt>
  4024b8:	str	x0, [sp, #168]
  4024bc:	ldr	x8, [sp, #168]
  4024c0:	cbnz	x8, 402570 <parse_file+0x418>
  4024c4:	mov	w8, #0x4                   	// #4
  4024c8:	str	w8, [sp, #144]
  4024cc:	mov	w8, wzr
  4024d0:	str	wzr, [sp, #140]
  4024d4:	mov	w0, w8
  4024d8:	bl	401400 <log_get_max_level_realm@plt>
  4024dc:	ldr	w8, [sp, #144]
  4024e0:	and	w8, w8, #0x7
  4024e4:	cmp	w0, w8
  4024e8:	b.lt	402538 <parse_file+0x3e0>  // b.tstop
  4024ec:	ldr	w1, [sp, #144]
  4024f0:	ldur	x2, [x29, #-24]
  4024f4:	ldur	w3, [x29, #-44]
  4024f8:	ldr	w4, [sp, #140]
  4024fc:	ldr	x8, [sp, #176]
  402500:	mov	x9, xzr
  402504:	mov	x0, x9
  402508:	ldr	x5, [sp, #80]
  40250c:	mov	w6, #0xa6                  	// #166
  402510:	ldr	x7, [sp, #72]
  402514:	mov	x9, sp
  402518:	adrp	x10, 403000 <strv_isempty+0x10>
  40251c:	add	x10, x10, #0x6c2
  402520:	str	x10, [x9]
  402524:	mov	x9, sp
  402528:	str	x8, [x9, #8]
  40252c:	bl	401530 <log_syntax_internal@plt>
  402530:	str	w0, [sp, #40]
  402534:	b	40254c <parse_file+0x3f4>
  402538:	ldr	w0, [sp, #140]
  40253c:	bl	401420 <abs@plt>
  402540:	mov	w8, wzr
  402544:	subs	w8, w8, w0, uxtb
  402548:	str	w8, [sp, #40]
  40254c:	ldr	w8, [sp, #40]
  402550:	str	w8, [sp, #136]
  402554:	ldur	w8, [x29, #-48]
  402558:	cbnz	w8, 402564 <parse_file+0x40c>
  40255c:	mov	w8, #0xffffffea            	// #-22
  402560:	stur	w8, [x29, #-48]
  402564:	mov	w8, #0x5                   	// #5
  402568:	stur	w8, [x29, #-100]
  40256c:	b	40280c <parse_file+0x6b4>
  402570:	ldr	x8, [sp, #168]
  402574:	mov	w9, #0x0                   	// #0
  402578:	strb	w9, [x8]
  40257c:	ldr	x8, [sp, #168]
  402580:	add	x8, x8, #0x1
  402584:	str	x8, [sp, #168]
  402588:	ldr	x0, [sp, #176]
  40258c:	bl	401510 <strstrip@plt>
  402590:	str	x0, [sp, #176]
  402594:	ldr	x8, [sp, #176]
  402598:	ldrb	w9, [x8]
  40259c:	cmp	w9, #0x2d
  4025a0:	cset	w9, eq  // eq = none
  4025a4:	and	w9, w9, #0x1
  4025a8:	sturb	w9, [x29, #-153]
  4025ac:	ldurb	w9, [x29, #-153]
  4025b0:	tbnz	w9, #0, 4025b8 <parse_file+0x460>
  4025b4:	b	4025c4 <parse_file+0x46c>
  4025b8:	ldr	x8, [sp, #176]
  4025bc:	add	x8, x8, #0x1
  4025c0:	str	x8, [sp, #176]
  4025c4:	ldr	x0, [sp, #176]
  4025c8:	bl	4014a0 <sysctl_normalize@plt>
  4025cc:	str	x0, [sp, #176]
  4025d0:	ldr	x0, [sp, #168]
  4025d4:	bl	401510 <strstrip@plt>
  4025d8:	str	x0, [sp, #168]
  4025dc:	ldr	x0, [sp, #176]
  4025e0:	bl	402cb4 <test_prefix>
  4025e4:	tbnz	w0, #0, 4025f4 <parse_file+0x49c>
  4025e8:	mov	w8, #0x5                   	// #5
  4025ec:	stur	w8, [x29, #-100]
  4025f0:	b	40280c <parse_file+0x6b4>
  4025f4:	ldur	x0, [x29, #-16]
  4025f8:	ldr	x1, [sp, #176]
  4025fc:	bl	402da8 <ordered_hashmap_get>
  402600:	stur	x0, [x29, #-168]
  402604:	ldur	x8, [x29, #-168]
  402608:	cbz	x8, 4026f0 <parse_file+0x598>
  40260c:	ldr	x0, [sp, #168]
  402610:	ldur	x8, [x29, #-168]
  402614:	ldr	x1, [x8, #8]
  402618:	bl	401540 <strcmp@plt>
  40261c:	cbnz	w0, 402658 <parse_file+0x500>
  402620:	ldur	x8, [x29, #-168]
  402624:	ldrb	w9, [x8, #16]
  402628:	mov	w10, #0x1                   	// #1
  40262c:	str	w10, [sp, #36]
  402630:	tbnz	w9, #0, 40263c <parse_file+0x4e4>
  402634:	ldurb	w8, [x29, #-153]
  402638:	str	w8, [sp, #36]
  40263c:	ldr	w8, [sp, #36]
  402640:	ldur	x9, [x29, #-168]
  402644:	and	w8, w8, #0x1
  402648:	strb	w8, [x9, #16]
  40264c:	mov	w8, #0x5                   	// #5
  402650:	stur	w8, [x29, #-100]
  402654:	b	40280c <parse_file+0x6b4>
  402658:	mov	w8, #0x7                   	// #7
  40265c:	str	w8, [sp, #132]
  402660:	str	wzr, [sp, #128]
  402664:	str	wzr, [sp, #124]
  402668:	ldr	w0, [sp, #124]
  40266c:	bl	401400 <log_get_max_level_realm@plt>
  402670:	ldr	w8, [sp, #132]
  402674:	and	w8, w8, #0x7
  402678:	cmp	w0, w8
  40267c:	b.lt	4026c4 <parse_file+0x56c>  // b.tstop
  402680:	ldr	w8, [sp, #124]
  402684:	ldr	w9, [sp, #132]
  402688:	orr	w0, w9, w8, lsl #10
  40268c:	ldr	w1, [sp, #128]
  402690:	ldr	x6, [sp, #176]
  402694:	ldur	x7, [x29, #-24]
  402698:	ldur	w8, [x29, #-44]
  40269c:	ldr	x2, [sp, #80]
  4026a0:	mov	w3, #0xc1                  	// #193
  4026a4:	ldr	x4, [sp, #72]
  4026a8:	adrp	x5, 403000 <strv_isempty+0x10>
  4026ac:	add	x5, x5, #0x6ea
  4026b0:	mov	x10, sp
  4026b4:	str	w8, [x10]
  4026b8:	bl	401410 <log_internal_realm@plt>
  4026bc:	str	w0, [sp, #32]
  4026c0:	b	4026d8 <parse_file+0x580>
  4026c4:	ldr	w0, [sp, #128]
  4026c8:	bl	401420 <abs@plt>
  4026cc:	mov	w8, wzr
  4026d0:	subs	w8, w8, w0, uxtb
  4026d4:	str	w8, [sp, #32]
  4026d8:	ldr	w8, [sp, #32]
  4026dc:	str	w8, [sp, #120]
  4026e0:	ldur	x0, [x29, #-16]
  4026e4:	ldr	x1, [sp, #176]
  4026e8:	bl	402dd4 <ordered_hashmap_remove>
  4026ec:	bl	401d20 <option_free>
  4026f0:	ldr	x0, [sp, #176]
  4026f4:	ldr	x1, [sp, #168]
  4026f8:	ldurb	w8, [x29, #-153]
  4026fc:	and	w2, w8, #0x1
  402700:	bl	402e00 <option_new>
  402704:	stur	x0, [x29, #-144]
  402708:	ldur	x9, [x29, #-144]
  40270c:	cbnz	x9, 402738 <parse_file+0x5e0>
  402710:	mov	w8, wzr
  402714:	mov	w0, w8
  402718:	ldr	x1, [sp, #80]
  40271c:	mov	w2, #0xc7                  	// #199
  402720:	ldr	x3, [sp, #72]
  402724:	bl	4013d0 <log_oom_internal@plt>
  402728:	stur	w0, [x29, #-4]
  40272c:	mov	w8, #0x1                   	// #1
  402730:	stur	w8, [x29, #-100]
  402734:	b	40280c <parse_file+0x6b4>
  402738:	ldur	x0, [x29, #-16]
  40273c:	ldur	x8, [x29, #-144]
  402740:	ldr	x1, [x8]
  402744:	ldur	x2, [x29, #-144]
  402748:	bl	402fbc <ordered_hashmap_put>
  40274c:	str	w0, [sp, #164]
  402750:	ldr	w9, [sp, #164]
  402754:	cmp	w9, #0x0
  402758:	cset	w9, ge  // ge = tcont
  40275c:	tbnz	w9, #0, 4027f0 <parse_file+0x698>
  402760:	mov	w8, #0x3                   	// #3
  402764:	str	w8, [sp, #116]
  402768:	ldr	w8, [sp, #164]
  40276c:	str	w8, [sp, #112]
  402770:	str	wzr, [sp, #108]
  402774:	ldr	w0, [sp, #108]
  402778:	bl	401400 <log_get_max_level_realm@plt>
  40277c:	ldr	w8, [sp, #116]
  402780:	and	w8, w8, #0x7
  402784:	cmp	w0, w8
  402788:	b.lt	4027c0 <parse_file+0x668>  // b.tstop
  40278c:	ldr	w8, [sp, #108]
  402790:	ldr	w9, [sp, #116]
  402794:	orr	w0, w9, w8, lsl #10
  402798:	ldr	w1, [sp, #112]
  40279c:	ldr	x6, [sp, #176]
  4027a0:	ldr	x2, [sp, #80]
  4027a4:	mov	w3, #0xcb                  	// #203
  4027a8:	ldr	x4, [sp, #72]
  4027ac:	adrp	x5, 403000 <strv_isempty+0x10>
  4027b0:	add	x5, x5, #0x71b
  4027b4:	bl	401410 <log_internal_realm@plt>
  4027b8:	str	w0, [sp, #28]
  4027bc:	b	4027d4 <parse_file+0x67c>
  4027c0:	ldr	w0, [sp, #112]
  4027c4:	bl	401420 <abs@plt>
  4027c8:	mov	w8, wzr
  4027cc:	subs	w8, w8, w0, uxtb
  4027d0:	str	w8, [sp, #28]
  4027d4:	ldr	w8, [sp, #28]
  4027d8:	str	w8, [sp, #104]
  4027dc:	ldr	w8, [sp, #104]
  4027e0:	stur	w8, [x29, #-4]
  4027e4:	mov	w8, #0x1                   	// #1
  4027e8:	stur	w8, [x29, #-100]
  4027ec:	b	40280c <parse_file+0x6b4>
  4027f0:	ldur	x8, [x29, #-144]
  4027f4:	str	x8, [sp, #96]
  4027f8:	mov	x8, xzr
  4027fc:	stur	x8, [x29, #-144]
  402800:	ldr	x8, [sp, #96]
  402804:	str	x8, [sp, #88]
  402808:	stur	wzr, [x29, #-100]
  40280c:	sub	x0, x29, #0x98
  402810:	bl	402bb4 <freep>
  402814:	sub	x0, x29, #0x90
  402818:	bl	402c04 <option_freep>
  40281c:	ldur	w8, [x29, #-100]
  402820:	str	w8, [sp, #24]
  402824:	cbz	w8, 40284c <parse_file+0x6f4>
  402828:	b	40282c <parse_file+0x6d4>
  40282c:	ldr	w8, [sp, #24]
  402830:	cmp	w8, #0x4
  402834:	b.eq	402850 <parse_file+0x6f8>  // b.none
  402838:	b	40283c <parse_file+0x6e4>
  40283c:	ldr	w8, [sp, #24]
  402840:	cmp	w8, #0x5
  402844:	b.eq	402380 <parse_file+0x228>  // b.none
  402848:	b	402860 <parse_file+0x708>
  40284c:	b	402380 <parse_file+0x228>
  402850:	ldur	w8, [x29, #-48]
  402854:	stur	w8, [x29, #-4]
  402858:	mov	w8, #0x1                   	// #1
  40285c:	stur	w8, [x29, #-100]
  402860:	sub	x0, x29, #0x28
  402864:	bl	402bdc <fclosep>
  402868:	ldur	w0, [x29, #-4]
  40286c:	ldr	x28, [sp, #368]
  402870:	ldp	x29, x30, [sp, #352]
  402874:	add	sp, sp, #0x180
  402878:	ret

000000000040287c <apply_all>:
  40287c:	sub	sp, sp, #0x90
  402880:	stp	x29, x30, [sp, #128]
  402884:	add	x29, sp, #0x80
  402888:	mov	w8, #0xfffffffe            	// #-2
  40288c:	mov	x9, xzr
  402890:	adrp	x10, 403000 <strv_isempty+0x10>
  402894:	add	x10, x10, #0x350
  402898:	add	x10, x10, #0x3
  40289c:	sub	x11, x29, #0x38
  4028a0:	stur	x0, [x29, #-8]
  4028a4:	stur	wzr, [x29, #-36]
  4028a8:	stur	w8, [x29, #-56]
  4028ac:	str	x9, [x11, #8]
  4028b0:	ldur	q0, [x29, #-56]
  4028b4:	stur	q0, [x29, #-32]
  4028b8:	str	x10, [sp, #24]
  4028bc:	ldur	x0, [x29, #-8]
  4028c0:	sub	x1, x29, #0x20
  4028c4:	sub	x2, x29, #0x10
  4028c8:	mov	x8, xzr
  4028cc:	mov	x3, x8
  4028d0:	bl	403114 <ordered_hashmap_iterate>
  4028d4:	tbnz	w0, #0, 4028dc <apply_all+0x60>
  4028d8:	b	402ab8 <apply_all+0x23c>
  4028dc:	ldur	x8, [x29, #-16]
  4028e0:	ldr	x0, [x8]
  4028e4:	ldur	x8, [x29, #-16]
  4028e8:	ldr	x1, [x8, #8]
  4028ec:	bl	401550 <sysctl_write@plt>
  4028f0:	stur	w0, [x29, #-60]
  4028f4:	ldur	w9, [x29, #-60]
  4028f8:	cmp	w9, #0x0
  4028fc:	cset	w9, ge  // ge = tcont
  402900:	tbnz	w9, #0, 402ab4 <apply_all+0x238>
  402904:	mov	w8, #0x0                   	// #0
  402908:	sturb	w8, [x29, #-61]
  40290c:	ldur	w8, [x29, #-60]
  402910:	mov	w9, #0xffffffe2            	// #-30
  402914:	cmp	w8, w9
  402918:	str	w8, [sp, #20]
  40291c:	b.eq	402958 <apply_all+0xdc>  // b.none
  402920:	b	402924 <apply_all+0xa8>
  402924:	mov	w8, #0xfffffff3            	// #-13
  402928:	ldr	w9, [sp, #20]
  40292c:	cmp	w9, w8
  402930:	b.eq	402958 <apply_all+0xdc>  // b.none
  402934:	b	402938 <apply_all+0xbc>
  402938:	ldr	w8, [sp, #20]
  40293c:	add	w9, w8, #0x2
  402940:	mov	w10, #0x1                   	// #1
  402944:	cmp	w9, #0x1
  402948:	cset	w9, ls  // ls = plast
  40294c:	eor	w9, w9, w10
  402950:	tbnz	w9, #0, 402964 <apply_all+0xe8>
  402954:	b	402958 <apply_all+0xdc>
  402958:	mov	w8, #0x1                   	// #1
  40295c:	sturb	w8, [x29, #-61]
  402960:	b	402964 <apply_all+0xe8>
  402964:	ldurb	w8, [x29, #-61]
  402968:	and	w8, w8, #0x1
  40296c:	sturb	w8, [x29, #-62]
  402970:	ldurb	w8, [x29, #-62]
  402974:	tbnz	w8, #0, 402988 <apply_all+0x10c>
  402978:	ldur	x8, [x29, #-16]
  40297c:	ldrb	w9, [x8, #16]
  402980:	tbnz	w9, #0, 402988 <apply_all+0x10c>
  402984:	b	402a18 <apply_all+0x19c>
  402988:	mov	w8, #0x5                   	// #5
  40298c:	str	w8, [sp, #60]
  402990:	ldur	w8, [x29, #-60]
  402994:	str	w8, [sp, #56]
  402998:	str	wzr, [sp, #52]
  40299c:	ldr	w0, [sp, #52]
  4029a0:	bl	401400 <log_get_max_level_realm@plt>
  4029a4:	ldr	w8, [sp, #60]
  4029a8:	and	w8, w8, #0x7
  4029ac:	cmp	w0, w8
  4029b0:	b.lt	4029f8 <apply_all+0x17c>  // b.tstop
  4029b4:	ldr	w8, [sp, #52]
  4029b8:	ldr	w9, [sp, #60]
  4029bc:	orr	w0, w9, w8, lsl #10
  4029c0:	ldr	w1, [sp, #56]
  4029c4:	ldur	x10, [x29, #-16]
  4029c8:	ldr	x6, [x10, #8]
  4029cc:	ldur	x10, [x29, #-16]
  4029d0:	ldr	x7, [x10]
  4029d4:	ldr	x2, [sp, #24]
  4029d8:	mov	w3, #0x5e                  	// #94
  4029dc:	adrp	x4, 403000 <strv_isempty+0x10>
  4029e0:	add	x4, x4, #0x796
  4029e4:	adrp	x5, 403000 <strv_isempty+0x10>
  4029e8:	add	x5, x5, #0x7a0
  4029ec:	bl	401410 <log_internal_realm@plt>
  4029f0:	str	w0, [sp, #16]
  4029f4:	b	402a0c <apply_all+0x190>
  4029f8:	ldr	w0, [sp, #56]
  4029fc:	bl	401420 <abs@plt>
  402a00:	mov	w8, wzr
  402a04:	subs	w8, w8, w0, uxtb
  402a08:	str	w8, [sp, #16]
  402a0c:	ldr	w8, [sp, #16]
  402a10:	str	w8, [sp, #48]
  402a14:	b	402ab4 <apply_all+0x238>
  402a18:	mov	w8, #0x3                   	// #3
  402a1c:	str	w8, [sp, #44]
  402a20:	ldur	w8, [x29, #-60]
  402a24:	str	w8, [sp, #40]
  402a28:	str	wzr, [sp, #36]
  402a2c:	ldr	w0, [sp, #36]
  402a30:	bl	401400 <log_get_max_level_realm@plt>
  402a34:	ldr	w8, [sp, #44]
  402a38:	and	w8, w8, #0x7
  402a3c:	cmp	w0, w8
  402a40:	b.lt	402a88 <apply_all+0x20c>  // b.tstop
  402a44:	ldr	w8, [sp, #36]
  402a48:	ldr	w9, [sp, #44]
  402a4c:	orr	w0, w9, w8, lsl #10
  402a50:	ldr	w1, [sp, #40]
  402a54:	ldur	x10, [x29, #-16]
  402a58:	ldr	x6, [x10, #8]
  402a5c:	ldur	x10, [x29, #-16]
  402a60:	ldr	x7, [x10]
  402a64:	ldr	x2, [sp, #24]
  402a68:	mov	w3, #0x60                  	// #96
  402a6c:	adrp	x4, 403000 <strv_isempty+0x10>
  402a70:	add	x4, x4, #0x796
  402a74:	adrp	x5, 403000 <strv_isempty+0x10>
  402a78:	add	x5, x5, #0x7ca
  402a7c:	bl	401410 <log_internal_realm@plt>
  402a80:	str	w0, [sp, #12]
  402a84:	b	402a9c <apply_all+0x220>
  402a88:	ldr	w0, [sp, #40]
  402a8c:	bl	401420 <abs@plt>
  402a90:	mov	w8, wzr
  402a94:	subs	w8, w8, w0, uxtb
  402a98:	str	w8, [sp, #12]
  402a9c:	ldr	w8, [sp, #12]
  402aa0:	str	w8, [sp, #32]
  402aa4:	ldur	w8, [x29, #-36]
  402aa8:	cbnz	w8, 402ab4 <apply_all+0x238>
  402aac:	ldur	w8, [x29, #-60]
  402ab0:	stur	w8, [x29, #-36]
  402ab4:	b	4028bc <apply_all+0x40>
  402ab8:	ldur	w0, [x29, #-36]
  402abc:	ldp	x29, x30, [sp, #128]
  402ac0:	add	sp, sp, #0x90
  402ac4:	ret

0000000000402ac8 <ordered_hashmap_free>:
  402ac8:	sub	sp, sp, #0x20
  402acc:	stp	x29, x30, [sp, #16]
  402ad0:	add	x29, sp, #0x10
  402ad4:	mov	x8, xzr
  402ad8:	str	x0, [sp, #8]
  402adc:	ldr	x0, [sp, #8]
  402ae0:	mov	x1, x8
  402ae4:	mov	x2, x8
  402ae8:	bl	401560 <internal_hashmap_free@plt>
  402aec:	ldp	x29, x30, [sp, #16]
  402af0:	add	sp, sp, #0x20
  402af4:	ret

0000000000402af8 <help>:
  402af8:	sub	sp, sp, #0x30
  402afc:	stp	x29, x30, [sp, #32]
  402b00:	add	x29, sp, #0x20
  402b04:	mov	x8, xzr
  402b08:	adrp	x0, 403000 <strv_isempty+0x10>
  402b0c:	add	x0, x0, #0x49f
  402b10:	adrp	x1, 403000 <strv_isempty+0x10>
  402b14:	add	x1, x1, #0x4b6
  402b18:	adrp	x9, 403000 <strv_isempty+0x10>
  402b1c:	add	x9, x9, #0x350
  402b20:	add	x9, x9, #0x3
  402b24:	add	x2, sp, #0x10
  402b28:	str	x8, [sp, #16]
  402b2c:	str	x9, [sp]
  402b30:	bl	401570 <terminal_urlify_man@plt>
  402b34:	str	w0, [sp, #12]
  402b38:	ldr	w10, [sp, #12]
  402b3c:	cmp	w10, #0x0
  402b40:	cset	w10, ge  // ge = tcont
  402b44:	tbnz	w10, #0, 402b74 <help+0x7c>
  402b48:	mov	w8, wzr
  402b4c:	mov	w0, w8
  402b50:	ldr	x1, [sp]
  402b54:	mov	w2, #0xd9                  	// #217
  402b58:	adrp	x3, 403000 <strv_isempty+0x10>
  402b5c:	add	x3, x3, #0x3ec
  402b60:	bl	4013d0 <log_oom_internal@plt>
  402b64:	stur	w0, [x29, #-4]
  402b68:	mov	w8, #0x1                   	// #1
  402b6c:	str	w8, [sp, #8]
  402b70:	b	402b9c <help+0xa4>
  402b74:	adrp	x8, 420000 <__TMC_END__>
  402b78:	add	x8, x8, #0x98
  402b7c:	ldr	x1, [x8]
  402b80:	ldr	x2, [sp, #16]
  402b84:	adrp	x0, 403000 <strv_isempty+0x10>
  402b88:	add	x0, x0, #0x4b8
  402b8c:	bl	401580 <printf@plt>
  402b90:	stur	wzr, [x29, #-4]
  402b94:	mov	w9, #0x1                   	// #1
  402b98:	str	w9, [sp, #8]
  402b9c:	add	x0, sp, #0x10
  402ba0:	bl	402bb4 <freep>
  402ba4:	ldur	w0, [x29, #-4]
  402ba8:	ldp	x29, x30, [sp, #32]
  402bac:	add	sp, sp, #0x30
  402bb0:	ret

0000000000402bb4 <freep>:
  402bb4:	sub	sp, sp, #0x20
  402bb8:	stp	x29, x30, [sp, #16]
  402bbc:	add	x29, sp, #0x10
  402bc0:	str	x0, [sp, #8]
  402bc4:	ldr	x8, [sp, #8]
  402bc8:	ldr	x0, [x8]
  402bcc:	bl	401460 <free@plt>
  402bd0:	ldp	x29, x30, [sp, #16]
  402bd4:	add	sp, sp, #0x20
  402bd8:	ret

0000000000402bdc <fclosep>:
  402bdc:	sub	sp, sp, #0x20
  402be0:	stp	x29, x30, [sp, #16]
  402be4:	add	x29, sp, #0x10
  402be8:	str	x0, [sp, #8]
  402bec:	ldr	x8, [sp, #8]
  402bf0:	ldr	x0, [x8]
  402bf4:	bl	401590 <safe_fclose@plt>
  402bf8:	ldp	x29, x30, [sp, #16]
  402bfc:	add	sp, sp, #0x20
  402c00:	ret

0000000000402c04 <option_freep>:
  402c04:	sub	sp, sp, #0x20
  402c08:	stp	x29, x30, [sp, #16]
  402c0c:	add	x29, sp, #0x10
  402c10:	str	x0, [sp, #8]
  402c14:	ldr	x8, [sp, #8]
  402c18:	ldr	x8, [x8]
  402c1c:	cbz	x8, 402c2c <option_freep+0x28>
  402c20:	ldr	x8, [sp, #8]
  402c24:	ldr	x0, [x8]
  402c28:	bl	401d20 <option_free>
  402c2c:	ldp	x29, x30, [sp, #16]
  402c30:	add	sp, sp, #0x20
  402c34:	ret

0000000000402c38 <read_line>:
  402c38:	sub	sp, sp, #0x30
  402c3c:	stp	x29, x30, [sp, #32]
  402c40:	add	x29, sp, #0x20
  402c44:	mov	w8, wzr
  402c48:	stur	x0, [x29, #-8]
  402c4c:	str	x1, [sp, #16]
  402c50:	str	x2, [sp, #8]
  402c54:	ldur	x0, [x29, #-8]
  402c58:	ldr	x1, [sp, #16]
  402c5c:	ldr	x3, [sp, #8]
  402c60:	mov	w2, w8
  402c64:	bl	4015a0 <read_line_full@plt>
  402c68:	ldp	x29, x30, [sp, #32]
  402c6c:	add	sp, sp, #0x30
  402c70:	ret

0000000000402c74 <isempty>:
  402c74:	sub	sp, sp, #0x10
  402c78:	str	x0, [sp, #8]
  402c7c:	ldr	x8, [sp, #8]
  402c80:	mov	w9, #0x1                   	// #1
  402c84:	str	w9, [sp, #4]
  402c88:	cbz	x8, 402ca4 <isempty+0x30>
  402c8c:	ldr	x8, [sp, #8]
  402c90:	ldrb	w9, [x8]
  402c94:	cmp	w9, #0x0
  402c98:	cset	w9, ne  // ne = any
  402c9c:	eor	w9, w9, #0x1
  402ca0:	str	w9, [sp, #4]
  402ca4:	ldr	w8, [sp, #4]
  402ca8:	and	w0, w8, #0x1
  402cac:	add	sp, sp, #0x10
  402cb0:	ret

0000000000402cb4 <test_prefix>:
  402cb4:	sub	sp, sp, #0x40
  402cb8:	stp	x29, x30, [sp, #48]
  402cbc:	add	x29, sp, #0x30
  402cc0:	adrp	x8, 420000 <__TMC_END__>
  402cc4:	add	x8, x8, #0x68
  402cc8:	stur	x0, [x29, #-16]
  402ccc:	ldr	x0, [x8]
  402cd0:	bl	402ff0 <strv_isempty>
  402cd4:	tbnz	w0, #0, 402cdc <test_prefix+0x28>
  402cd8:	b	402cec <test_prefix+0x38>
  402cdc:	mov	w8, #0x1                   	// #1
  402ce0:	and	w8, w8, #0x1
  402ce4:	sturb	w8, [x29, #-1]
  402ce8:	b	402d94 <test_prefix+0xe0>
  402cec:	adrp	x8, 420000 <__TMC_END__>
  402cf0:	add	x8, x8, #0x68
  402cf4:	ldr	x8, [x8]
  402cf8:	str	x8, [sp, #24]
  402cfc:	ldr	x8, [sp, #24]
  402d00:	mov	w9, #0x0                   	// #0
  402d04:	str	w9, [sp, #12]
  402d08:	cbz	x8, 402d20 <test_prefix+0x6c>
  402d0c:	ldr	x8, [sp, #24]
  402d10:	ldr	x8, [x8]
  402d14:	cmp	x8, #0x0
  402d18:	cset	w9, ne  // ne = any
  402d1c:	str	w9, [sp, #12]
  402d20:	ldr	w8, [sp, #12]
  402d24:	tbnz	w8, #0, 402d2c <test_prefix+0x78>
  402d28:	b	402d88 <test_prefix+0xd4>
  402d2c:	ldr	x8, [sp, #24]
  402d30:	ldr	x0, [x8]
  402d34:	adrp	x1, 403000 <strv_isempty+0x10>
  402d38:	add	x1, x1, #0x74b
  402d3c:	bl	4014b0 <path_startswith@plt>
  402d40:	str	x0, [sp, #16]
  402d44:	ldr	x8, [sp, #16]
  402d48:	cbnz	x8, 402d58 <test_prefix+0xa4>
  402d4c:	ldr	x8, [sp, #24]
  402d50:	ldr	x8, [x8]
  402d54:	str	x8, [sp, #16]
  402d58:	ldur	x0, [x29, #-16]
  402d5c:	ldr	x1, [sp, #16]
  402d60:	bl	4014b0 <path_startswith@plt>
  402d64:	cbz	x0, 402d78 <test_prefix+0xc4>
  402d68:	mov	w8, #0x1                   	// #1
  402d6c:	and	w8, w8, #0x1
  402d70:	sturb	w8, [x29, #-1]
  402d74:	b	402d94 <test_prefix+0xe0>
  402d78:	ldr	x8, [sp, #24]
  402d7c:	add	x8, x8, #0x8
  402d80:	str	x8, [sp, #24]
  402d84:	b	402cfc <test_prefix+0x48>
  402d88:	mov	w8, wzr
  402d8c:	and	w8, w8, #0x1
  402d90:	sturb	w8, [x29, #-1]
  402d94:	ldurb	w8, [x29, #-1]
  402d98:	and	w0, w8, #0x1
  402d9c:	ldp	x29, x30, [sp, #48]
  402da0:	add	sp, sp, #0x40
  402da4:	ret

0000000000402da8 <ordered_hashmap_get>:
  402da8:	sub	sp, sp, #0x20
  402dac:	stp	x29, x30, [sp, #16]
  402db0:	add	x29, sp, #0x10
  402db4:	str	x0, [sp, #8]
  402db8:	str	x1, [sp]
  402dbc:	ldr	x0, [sp, #8]
  402dc0:	ldr	x1, [sp]
  402dc4:	bl	4015b0 <internal_hashmap_get@plt>
  402dc8:	ldp	x29, x30, [sp, #16]
  402dcc:	add	sp, sp, #0x20
  402dd0:	ret

0000000000402dd4 <ordered_hashmap_remove>:
  402dd4:	sub	sp, sp, #0x20
  402dd8:	stp	x29, x30, [sp, #16]
  402ddc:	add	x29, sp, #0x10
  402de0:	str	x0, [sp, #8]
  402de4:	str	x1, [sp]
  402de8:	ldr	x0, [sp, #8]
  402dec:	ldr	x1, [sp]
  402df0:	bl	4015c0 <internal_hashmap_remove@plt>
  402df4:	ldp	x29, x30, [sp, #16]
  402df8:	add	sp, sp, #0x20
  402dfc:	ret

0000000000402e00 <option_new>:
  402e00:	sub	sp, sp, #0x80
  402e04:	stp	x29, x30, [sp, #112]
  402e08:	add	x29, sp, #0x70
  402e0c:	mov	x8, xzr
  402e10:	mov	w9, #0x1                   	// #1
  402e14:	adrp	x10, 403000 <strv_isempty+0x10>
  402e18:	add	x10, x10, #0x350
  402e1c:	add	x10, x10, #0x3
  402e20:	stur	x0, [x29, #-16]
  402e24:	stur	x1, [x29, #-24]
  402e28:	and	w9, w2, w9
  402e2c:	sturb	w9, [x29, #-25]
  402e30:	stur	x8, [x29, #-40]
  402e34:	str	x10, [sp, #16]
  402e38:	ldur	x8, [x29, #-16]
  402e3c:	cmp	x8, #0x0
  402e40:	cset	w9, ne  // ne = any
  402e44:	mov	w10, #0x1                   	// #1
  402e48:	eor	w9, w9, #0x1
  402e4c:	eor	w9, w9, w10
  402e50:	eor	w9, w9, w10
  402e54:	and	w9, w9, #0x1
  402e58:	mov	w0, w9
  402e5c:	sxtw	x8, w0
  402e60:	cbz	x8, 402e88 <option_new+0x88>
  402e64:	mov	w8, wzr
  402e68:	mov	w0, w8
  402e6c:	adrp	x1, 403000 <strv_isempty+0x10>
  402e70:	add	x1, x1, #0x756
  402e74:	ldr	x2, [sp, #16]
  402e78:	mov	w3, #0x3a                  	// #58
  402e7c:	adrp	x4, 403000 <strv_isempty+0x10>
  402e80:	add	x4, x4, #0x75a
  402e84:	bl	401470 <log_assert_failed_realm@plt>
  402e88:	ldur	x8, [x29, #-24]
  402e8c:	cmp	x8, #0x0
  402e90:	cset	w9, ne  // ne = any
  402e94:	mov	w10, #0x1                   	// #1
  402e98:	eor	w9, w9, #0x1
  402e9c:	eor	w9, w9, w10
  402ea0:	eor	w9, w9, w10
  402ea4:	and	w9, w9, #0x1
  402ea8:	mov	w0, w9
  402eac:	sxtw	x8, w0
  402eb0:	cbz	x8, 402ed8 <option_new+0xd8>
  402eb4:	mov	w8, wzr
  402eb8:	mov	w0, w8
  402ebc:	adrp	x1, 403000 <strv_isempty+0x10>
  402ec0:	add	x1, x1, #0x790
  402ec4:	ldr	x2, [sp, #16]
  402ec8:	mov	w3, #0x3b                  	// #59
  402ecc:	adrp	x4, 403000 <strv_isempty+0x10>
  402ed0:	add	x4, x4, #0x75a
  402ed4:	bl	401470 <log_assert_failed_realm@plt>
  402ed8:	mov	x0, #0x18                  	// #24
  402edc:	mov	x1, #0x1                   	// #1
  402ee0:	bl	403030 <malloc_multiply>
  402ee4:	stur	x0, [x29, #-40]
  402ee8:	ldur	x8, [x29, #-40]
  402eec:	cbnz	x8, 402f04 <option_new+0x104>
  402ef0:	mov	x8, xzr
  402ef4:	stur	x8, [x29, #-8]
  402ef8:	mov	w9, #0x1                   	// #1
  402efc:	stur	w9, [x29, #-44]
  402f00:	b	402fa4 <option_new+0x1a4>
  402f04:	ldur	x8, [x29, #-40]
  402f08:	ldur	x0, [x29, #-16]
  402f0c:	str	x8, [sp, #8]
  402f10:	bl	4014c0 <strdup@plt>
  402f14:	add	x8, sp, #0x28
  402f18:	str	x0, [sp, #40]
  402f1c:	ldur	x0, [x29, #-24]
  402f20:	str	x8, [sp]
  402f24:	bl	4014c0 <strdup@plt>
  402f28:	ldr	x8, [sp]
  402f2c:	str	x0, [x8, #8]
  402f30:	ldurb	w9, [x29, #-25]
  402f34:	and	w9, w9, #0x1
  402f38:	strb	w9, [x8, #16]
  402f3c:	ldur	q0, [sp, #40]
  402f40:	ldr	x10, [sp, #8]
  402f44:	str	q0, [x10]
  402f48:	ldr	x11, [sp, #56]
  402f4c:	str	x11, [x10, #16]
  402f50:	ldur	x11, [x29, #-40]
  402f54:	ldr	x11, [x11]
  402f58:	cbz	x11, 402f68 <option_new+0x168>
  402f5c:	ldur	x8, [x29, #-40]
  402f60:	ldr	x8, [x8, #8]
  402f64:	cbnz	x8, 402f7c <option_new+0x17c>
  402f68:	mov	x8, xzr
  402f6c:	stur	x8, [x29, #-8]
  402f70:	mov	w9, #0x1                   	// #1
  402f74:	stur	w9, [x29, #-44]
  402f78:	b	402fa4 <option_new+0x1a4>
  402f7c:	ldur	x8, [x29, #-40]
  402f80:	str	x8, [sp, #32]
  402f84:	mov	x8, xzr
  402f88:	stur	x8, [x29, #-40]
  402f8c:	ldr	x8, [sp, #32]
  402f90:	str	x8, [sp, #24]
  402f94:	ldr	x8, [sp, #24]
  402f98:	stur	x8, [x29, #-8]
  402f9c:	mov	w9, #0x1                   	// #1
  402fa0:	stur	w9, [x29, #-44]
  402fa4:	sub	x0, x29, #0x28
  402fa8:	bl	402c04 <option_freep>
  402fac:	ldur	x0, [x29, #-8]
  402fb0:	ldp	x29, x30, [sp, #112]
  402fb4:	add	sp, sp, #0x80
  402fb8:	ret

0000000000402fbc <ordered_hashmap_put>:
  402fbc:	sub	sp, sp, #0x30
  402fc0:	stp	x29, x30, [sp, #32]
  402fc4:	add	x29, sp, #0x20
  402fc8:	stur	x0, [x29, #-8]
  402fcc:	str	x1, [sp, #16]
  402fd0:	str	x2, [sp, #8]
  402fd4:	ldur	x0, [x29, #-8]
  402fd8:	ldr	x1, [sp, #16]
  402fdc:	ldr	x2, [sp, #8]
  402fe0:	bl	4015d0 <hashmap_put@plt>
  402fe4:	ldp	x29, x30, [sp, #32]
  402fe8:	add	sp, sp, #0x30
  402fec:	ret

0000000000402ff0 <strv_isempty>:
  402ff0:	sub	sp, sp, #0x10
  402ff4:	str	x0, [sp, #8]
  402ff8:	ldr	x8, [sp, #8]
  402ffc:	mov	w9, #0x1                   	// #1
  403000:	str	w9, [sp, #4]
  403004:	cbz	x8, 403020 <strv_isempty+0x30>
  403008:	ldr	x8, [sp, #8]
  40300c:	ldr	x8, [x8]
  403010:	cmp	x8, #0x0
  403014:	cset	w9, ne  // ne = any
  403018:	eor	w9, w9, #0x1
  40301c:	str	w9, [sp, #4]
  403020:	ldr	w8, [sp, #4]
  403024:	and	w0, w8, #0x1
  403028:	add	sp, sp, #0x10
  40302c:	ret

0000000000403030 <malloc_multiply>:
  403030:	sub	sp, sp, #0x40
  403034:	stp	x29, x30, [sp, #48]
  403038:	add	x29, sp, #0x30
  40303c:	stur	x0, [x29, #-16]
  403040:	str	x1, [sp, #24]
  403044:	ldur	x0, [x29, #-16]
  403048:	ldr	x1, [sp, #24]
  40304c:	bl	4030ac <size_multiply_overflow>
  403050:	tbnz	w0, #0, 403058 <malloc_multiply+0x28>
  403054:	b	403064 <malloc_multiply+0x34>
  403058:	mov	x8, xzr
  40305c:	stur	x8, [x29, #-8]
  403060:	b	40309c <malloc_multiply+0x6c>
  403064:	ldur	x8, [x29, #-16]
  403068:	ldr	x9, [sp, #24]
  40306c:	mul	x8, x8, x9
  403070:	str	x8, [sp, #16]
  403074:	cbz	x8, 403084 <malloc_multiply+0x54>
  403078:	ldr	x8, [sp, #16]
  40307c:	str	x8, [sp, #8]
  403080:	b	40308c <malloc_multiply+0x5c>
  403084:	mov	x8, #0x1                   	// #1
  403088:	str	x8, [sp, #8]
  40308c:	ldr	x8, [sp, #8]
  403090:	mov	x0, x8
  403094:	bl	4015e0 <malloc@plt>
  403098:	stur	x0, [x29, #-8]
  40309c:	ldur	x0, [x29, #-8]
  4030a0:	ldp	x29, x30, [sp, #48]
  4030a4:	add	sp, sp, #0x40
  4030a8:	ret

00000000004030ac <size_multiply_overflow>:
  4030ac:	sub	sp, sp, #0x20
  4030b0:	str	x0, [sp, #24]
  4030b4:	str	x1, [sp, #16]
  4030b8:	ldr	x8, [sp, #16]
  4030bc:	mov	w9, #0x0                   	// #0
  4030c0:	str	w9, [sp, #12]
  4030c4:	cbz	x8, 4030e4 <size_multiply_overflow+0x38>
  4030c8:	ldr	x8, [sp, #24]
  4030cc:	ldr	x9, [sp, #16]
  4030d0:	mov	x10, #0xffffffffffffffff    	// #-1
  4030d4:	udiv	x9, x10, x9
  4030d8:	cmp	x8, x9
  4030dc:	cset	w11, hi  // hi = pmore
  4030e0:	str	w11, [sp, #12]
  4030e4:	ldr	w8, [sp, #12]
  4030e8:	mov	w9, #0x1                   	// #1
  4030ec:	eor	w8, w8, #0x1
  4030f0:	eor	w8, w8, w9
  4030f4:	and	w8, w8, #0x1
  4030f8:	mov	w0, w8
  4030fc:	sxtw	x10, w0
  403100:	cmp	x10, #0x0
  403104:	cset	w8, ne  // ne = any
  403108:	and	w0, w8, #0x1
  40310c:	add	sp, sp, #0x20
  403110:	ret

0000000000403114 <ordered_hashmap_iterate>:
  403114:	sub	sp, sp, #0x30
  403118:	stp	x29, x30, [sp, #32]
  40311c:	add	x29, sp, #0x20
  403120:	stur	x0, [x29, #-8]
  403124:	str	x1, [sp, #16]
  403128:	str	x2, [sp, #8]
  40312c:	str	x3, [sp]
  403130:	ldur	x0, [x29, #-8]
  403134:	ldr	x1, [sp, #16]
  403138:	ldr	x2, [sp, #8]
  40313c:	ldr	x3, [sp]
  403140:	bl	4015f0 <internal_hashmap_iterate@plt>
  403144:	and	w0, w0, #0x1
  403148:	ldp	x29, x30, [sp, #32]
  40314c:	add	sp, sp, #0x30
  403150:	ret

0000000000403154 <ALIGN_TO>:
  403154:	sub	sp, sp, #0x10
  403158:	str	x0, [sp, #8]
  40315c:	str	x1, [sp]
  403160:	ldr	x8, [sp, #8]
  403164:	ldr	x9, [sp]
  403168:	add	x8, x8, x9
  40316c:	subs	x8, x8, #0x1
  403170:	ldr	x9, [sp]
  403174:	subs	x9, x9, #0x1
  403178:	bic	x0, x8, x9
  40317c:	add	sp, sp, #0x10
  403180:	ret
  403184:	udf	#0

0000000000403188 <__libc_csu_init>:
  403188:	stp	x29, x30, [sp, #-64]!
  40318c:	mov	x29, sp
  403190:	stp	x19, x20, [sp, #16]
  403194:	adrp	x20, 41f000 <__FRAME_END__+0x1b710>
  403198:	add	x20, x20, #0xc38
  40319c:	stp	x21, x22, [sp, #32]
  4031a0:	adrp	x21, 41f000 <__FRAME_END__+0x1b710>
  4031a4:	add	x21, x21, #0xc30
  4031a8:	sub	x20, x20, x21
  4031ac:	mov	w22, w0
  4031b0:	stp	x23, x24, [sp, #48]
  4031b4:	mov	x23, x1
  4031b8:	mov	x24, x2
  4031bc:	bl	4012f8 <_init>
  4031c0:	cmp	xzr, x20, asr #3
  4031c4:	b.eq	4031f0 <__libc_csu_init+0x68>  // b.none
  4031c8:	asr	x20, x20, #3
  4031cc:	mov	x19, #0x0                   	// #0
  4031d0:	ldr	x3, [x21, x19, lsl #3]
  4031d4:	mov	x2, x24
  4031d8:	add	x19, x19, #0x1
  4031dc:	mov	x1, x23
  4031e0:	mov	w0, w22
  4031e4:	blr	x3
  4031e8:	cmp	x20, x19
  4031ec:	b.ne	4031d0 <__libc_csu_init+0x48>  // b.any
  4031f0:	ldp	x19, x20, [sp, #16]
  4031f4:	ldp	x21, x22, [sp, #32]
  4031f8:	ldp	x23, x24, [sp, #48]
  4031fc:	ldp	x29, x30, [sp], #64
  403200:	ret
  403204:	nop

0000000000403208 <__libc_csu_fini>:
  403208:	ret

Disassembly of section .fini:

000000000040320c <_fini>:
  40320c:	stp	x29, x30, [sp, #-16]!
  403210:	mov	x29, sp
  403214:	ldp	x29, x30, [sp], #16
  403218:	ret
