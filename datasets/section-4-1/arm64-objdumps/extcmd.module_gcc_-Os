
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//extcmd.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_extcmd_dispatcher>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	ldr	x19, [x0, #64]
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x19, xzr, [sp, #72]
  18:	ldr	x0, [x19, #16]
  1c:	str	x3, [sp, #88]
  20:	cbnz	x0, 48 <grub_extcmd_dispatcher+0x48>
  24:	ldr	x3, [x19, #8]
  28:	add	x0, sp, #0x48
  2c:	blr	x3
  30:	mov	w19, w0
  34:	mov	w0, w19
  38:	ldp	x19, x20, [sp, #16]
  3c:	ldp	x21, x22, [sp, #32]
  40:	ldp	x29, x30, [sp], #96
  44:	ret
  48:	mov	w21, w1
  4c:	mov	x22, x2
  50:	mov	x0, x19
  54:	bl	aa0 <grub_arg_list_alloc>
  58:	add	x5, sp, #0x3c
  5c:	mov	x20, x0
  60:	mov	x3, x0
  64:	add	x4, sp, #0x40
  68:	mov	x2, x22
  6c:	mov	w1, w21
  70:	mov	x0, x19
  74:	bl	6d0 <grub_arg_parse>
  78:	cbz	w0, ac <grub_extcmd_dispatcher+0xac>
  7c:	ldr	w1, [sp, #60]
  80:	add	x0, sp, #0x48
  84:	ldr	x3, [x19, #8]
  88:	str	x20, [sp, #80]
  8c:	ldr	x2, [sp, #64]
  90:	blr	x3
  94:	mov	w19, w0
  98:	ldr	x0, [sp, #64]
  9c:	bl	0 <grub_free>
  a0:	mov	x0, x20
  a4:	bl	0 <grub_free>
  a8:	b	34 <grub_extcmd_dispatcher+0x34>
  ac:	mov	x0, x20
  b0:	bl	0 <grub_free>
  b4:	adrp	x0, 0 <grub_extcmd_dispatcher>
  b8:	ldr	x0, [x0]
  bc:	ldr	w19, [x0]
  c0:	b	34 <grub_extcmd_dispatcher+0x34>
  c4:	nop
	...

00000000000000d0 <grub_extcmd_dispatch>:
  d0:	mov	x3, #0x0                   	// #0
  d4:	b	0 <grub_extcmd_dispatcher>

00000000000000d8 <grub_register_extcmd_prio>:
  d8:	stp	x29, x30, [sp, #-80]!
  dc:	mov	x29, sp
  e0:	stp	x19, x20, [sp, #16]
  e4:	mov	w20, w2
  e8:	stp	x21, x22, [sp, #32]
  ec:	mov	x22, x1
  f0:	mov	x21, x5
  f4:	stp	x23, x24, [sp, #48]
  f8:	mov	x23, x0
  fc:	mov	x24, x3
 100:	mov	x0, #0x20                  	// #32
 104:	stp	x25, x26, [sp, #64]
 108:	mov	x25, x4
 10c:	mov	w26, w6
 110:	bl	0 <grub_malloc>
 114:	mov	x19, x0
 118:	cbz	x0, 148 <grub_register_extcmd_prio+0x70>
 11c:	adrp	x0, 0 <grub_extcmd_dispatcher>
 120:	mov	w4, w26
 124:	mov	x3, x25
 128:	mov	x2, x24
 12c:	ldr	x1, [x0]
 130:	mov	x0, x23
 134:	bl	0 <grub_register_command_prio>
 138:	cbnz	x0, 164 <grub_register_extcmd_prio+0x8c>
 13c:	mov	x0, x19
 140:	mov	x19, #0x0                   	// #0
 144:	bl	0 <grub_free>
 148:	mov	x0, x19
 14c:	ldp	x19, x20, [sp, #16]
 150:	ldp	x21, x22, [sp, #32]
 154:	ldp	x23, x24, [sp, #48]
 158:	ldp	x25, x26, [sp, #64]
 15c:	ldp	x29, x30, [sp], #80
 160:	ret
 164:	orr	w20, w20, #0x10
 168:	str	w20, [x0, #40]
 16c:	str	x19, [x0, #64]
 170:	stp	x0, x22, [x19]
 174:	stp	x21, xzr, [x19, #16]
 178:	b	148 <grub_register_extcmd_prio+0x70>
 17c:	nop
	...

0000000000000188 <grub_register_extcmd>:
 188:	mov	w6, #0x1                   	// #1
 18c:	b	d8 <grub_register_extcmd_prio>

0000000000000190 <grub_unregister_extcmd>:
 190:	stp	x29, x30, [sp, #-32]!
 194:	mov	x29, sp
 198:	str	x19, [sp, #16]
 19c:	mov	x19, x0
 1a0:	ldr	x0, [x0]
 1a4:	bl	0 <grub_unregister_command>
 1a8:	mov	x0, x19
 1ac:	ldr	x19, [sp, #16]
 1b0:	ldp	x29, x30, [sp], #32
 1b4:	b	0 <grub_free>

00000000000001b8 <find_short>:
 1b8:	and	w1, w1, #0xff
 1bc:	cbnz	x0, 1f0 <find_short+0x38>
 1c0:	cmp	w1, #0x68
 1c4:	b.eq	1fc <find_short+0x44>  // b.none
 1c8:	cmp	w1, #0x75
 1cc:	b.ne	208 <find_short+0x50>  // b.any
 1d0:	adrp	x0, 0 <grub_extcmd_dispatcher>
 1d4:	ldr	x0, [x0]
 1d8:	add	x0, x0, #0x28
 1dc:	ret
 1e0:	ldr	w2, [x0, #8]
 1e4:	cmp	w2, w1
 1e8:	b.eq	1dc <find_short+0x24>  // b.none
 1ec:	add	x0, x0, #0x28
 1f0:	ldr	x2, [x0, #16]
 1f4:	cbnz	x2, 1e0 <find_short+0x28>
 1f8:	b	1c0 <find_short+0x8>
 1fc:	adrp	x0, 0 <grub_extcmd_dispatcher>
 200:	ldr	x0, [x0]
 204:	b	1dc <find_short+0x24>
 208:	mov	x0, #0x0                   	// #0
 20c:	b	1dc <find_short+0x24>
	...

0000000000000218 <showargs>:
 218:	stp	x29, x30, [sp, #-80]!
 21c:	mov	x29, sp
 220:	stp	x19, x20, [sp, #16]
 224:	mov	x19, x0
 228:	stp	x21, x22, [sp, #32]
 22c:	mov	w21, w1
 230:	mov	w22, w2
 234:	stp	x23, x24, [sp, #48]
 238:	adrp	x23, 0 <grub_extcmd_dispatcher>
 23c:	adrp	x24, 0 <grub_extcmd_dispatcher>
 240:	str	x25, [sp, #64]
 244:	adrp	x25, 0 <grub_extcmd_dispatcher>
 248:	ldr	x0, [x19, #16]
 24c:	cbnz	x0, 268 <showargs+0x50>
 250:	ldp	x19, x20, [sp, #16]
 254:	ldp	x21, x22, [sp, #32]
 258:	ldp	x23, x24, [sp, #48]
 25c:	ldr	x25, [sp, #64]
 260:	ldp	x29, x30, [sp], #80
 264:	ret
 268:	ldr	w1, [x19, #8]
 26c:	sub	w0, w1, #0x21
 270:	cmp	w0, #0x5d
 274:	b.hi	324 <showargs+0x10c>  // b.pmore
 278:	ldr	x0, [x19]
 27c:	mov	w2, #0x2c                  	// #44
 280:	cmp	x0, #0x0
 284:	mov	w0, #0x20                  	// #32
 288:	csel	w2, w2, w0, ne  // ne = any
 28c:	adrp	x0, 0 <grub_extcmd_dispatcher>
 290:	ldr	x0, [x0]
 294:	bl	0 <grub_printf>
 298:	ldr	x1, [x19]
 29c:	cbz	x1, 36c <showargs+0x154>
 2a0:	adrp	x0, 0 <grub_extcmd_dispatcher>
 2a4:	mov	w20, #0x12                  	// #18
 2a8:	ldr	x0, [x0]
 2ac:	bl	0 <grub_printf>
 2b0:	ldr	x0, [x19]
 2b4:	bl	0 <grub_strlen>
 2b8:	sub	w20, w20, w0
 2bc:	ldr	x1, [x19, #24]
 2c0:	cbz	x1, 2e0 <showargs+0xc8>
 2c4:	adrp	x0, 0 <grub_extcmd_dispatcher>
 2c8:	ldr	x0, [x0]
 2cc:	bl	0 <grub_printf>
 2d0:	ldr	x0, [x19, #24]
 2d4:	bl	0 <grub_strlen>
 2d8:	add	x0, x0, #0x1
 2dc:	sub	w20, w20, w0
 2e0:	cmp	w20, #0x0
 2e4:	mov	w0, #0x3                   	// #3
 2e8:	csel	w20, w20, w0, gt
 2ec:	sub	w20, w20, #0x1
 2f0:	cmn	w20, #0x1
 2f4:	b.ne	374 <showargs+0x15c>  // b.any
 2f8:	adrp	x0, 0 <grub_extcmd_dispatcher>
 2fc:	add	x19, x19, #0x28
 300:	ldr	x0, [x0]
 304:	ldr	x1, [x0]
 308:	ldur	x0, [x19, #-24]
 30c:	blr	x1
 310:	mov	x1, x0
 314:	adrp	x0, 0 <grub_extcmd_dispatcher>
 318:	ldr	x0, [x0]
 31c:	bl	0 <grub_printf>
 320:	b	248 <showargs+0x30>
 324:	ldr	x0, [x23]
 328:	cmp	x19, x0
 32c:	b.ne	344 <showargs+0x12c>  // b.any
 330:	cbnz	w21, 360 <showargs+0x148>
 334:	adrp	x0, 0 <grub_extcmd_dispatcher>
 338:	ldr	x0, [x0]
 33c:	bl	0 <grub_printf>
 340:	b	298 <showargs+0x80>
 344:	add	x0, x0, #0x28
 348:	cmp	x19, x0
 34c:	b.ne	360 <showargs+0x148>  // b.any
 350:	cbnz	w22, 360 <showargs+0x148>
 354:	adrp	x0, 0 <grub_extcmd_dispatcher>
 358:	ldr	x0, [x0]
 35c:	b	33c <showargs+0x124>
 360:	adrp	x0, 0 <grub_extcmd_dispatcher>
 364:	ldr	x0, [x0]
 368:	b	33c <showargs+0x124>
 36c:	mov	w20, #0x14                  	// #20
 370:	b	2ec <showargs+0xd4>
 374:	ldr	x0, [x24]
 378:	ldr	x1, [x0]
 37c:	ldr	x0, [x25]
 380:	blr	x1
 384:	b	2ec <showargs+0xd4>
	...

00000000000003e0 <fnd_long>:
 3e0:	stp	x29, x30, [sp, #-48]!
 3e4:	mov	x29, sp
 3e8:	stp	x19, x20, [sp, #16]
 3ec:	mov	x19, x0
 3f0:	sxtw	x20, w2
 3f4:	str	x21, [sp, #32]
 3f8:	mov	x21, x1
 3fc:	ldr	x0, [x19, #16]
 400:	cbnz	x0, 40c <fnd_long+0x2c>
 404:	mov	x19, #0x0                   	// #0
 408:	b	438 <fnd_long+0x58>
 40c:	ldr	x0, [x19]
 410:	cbnz	x0, 41c <fnd_long+0x3c>
 414:	add	x19, x19, #0x28
 418:	b	3fc <fnd_long+0x1c>
 41c:	mov	x2, x20
 420:	mov	x1, x21
 424:	bl	0 <grub_strncmp>
 428:	cbnz	w0, 414 <fnd_long+0x34>
 42c:	ldr	x0, [x19]
 430:	ldrb	w0, [x0, x20]
 434:	cbnz	w0, 414 <fnd_long+0x34>
 438:	mov	x0, x19
 43c:	ldp	x19, x20, [sp, #16]
 440:	ldr	x21, [sp, #32]
 444:	ldp	x29, x30, [sp], #48
 448:	ret

000000000000044c <add_arg>:
 44c:	stp	x29, x30, [sp, #-48]!
 450:	mov	x29, sp
 454:	stp	x19, x20, [sp, #16]
 458:	mov	x19, x1
 45c:	ldr	w1, [x1]
 460:	mov	x20, x0
 464:	stp	x21, x22, [sp, #32]
 468:	mov	x21, x2
 46c:	ldr	x22, [x0]
 470:	add	w0, w1, #0x1
 474:	add	w1, w1, #0x2
 478:	str	w0, [x19]
 47c:	mov	x0, x22
 480:	sbfiz	x1, x1, #3, #32
 484:	bl	0 <grub_realloc>
 488:	str	x0, [x20]
 48c:	cbnz	x0, 4b4 <add_arg+0x68>
 490:	mov	x0, x22
 494:	bl	0 <grub_free>
 498:	adrp	x0, 0 <grub_extcmd_dispatcher>
 49c:	ldr	x0, [x0]
 4a0:	ldr	w0, [x0]
 4a4:	ldp	x19, x20, [sp, #16]
 4a8:	ldp	x21, x22, [sp, #32]
 4ac:	ldp	x29, x30, [sp], #48
 4b0:	ret
 4b4:	ldrsw	x1, [x19]
 4b8:	add	x2, x0, x1, lsl #3
 4bc:	stur	x21, [x2, #-8]
 4c0:	str	xzr, [x0, x1, lsl #3]
 4c4:	mov	w0, #0x0                   	// #0
 4c8:	b	4a4 <add_arg+0x58>
 4cc:	nop
	...

00000000000004d8 <show_usage.isra.0>:
 4d8:	stp	x29, x30, [sp, #-48]!
 4dc:	mov	x29, sp
 4e0:	stp	x19, x20, [sp, #16]
 4e4:	mov	x20, x0
 4e8:	adrp	x0, 0 <grub_extcmd_dispatcher>
 4ec:	str	x21, [sp, #32]
 4f0:	ldr	x21, [x0]
 4f4:	adrp	x0, 0 <grub_extcmd_dispatcher>
 4f8:	ldr	x0, [x0]
 4fc:	ldr	x1, [x21]
 500:	blr	x1
 504:	mov	x19, x0
 508:	ldr	x0, [x20]
 50c:	ldr	x1, [x21]
 510:	ldr	x20, [x0, #16]
 514:	ldr	x0, [x0, #48]
 518:	blr	x1
 51c:	mov	x3, x0
 520:	mov	x2, x20
 524:	mov	x1, x19
 528:	adrp	x0, 0 <grub_extcmd_dispatcher>
 52c:	ldp	x19, x20, [sp, #16]
 530:	ldr	x21, [sp, #32]
 534:	ldp	x29, x30, [sp], #48
 538:	ldr	x0, [x0]
 53c:	b	0 <grub_printf>
	...

0000000000000558 <grub_arg_show_help>:
 558:	stp	x29, x30, [sp, #-32]!
 55c:	mov	x29, sp
 560:	stp	x19, x20, [sp, #16]
 564:	mov	x19, x0
 568:	bl	4d8 <show_usage.isra.0>
 56c:	adrp	x1, 0 <grub_extcmd_dispatcher>
 570:	mov	w20, #0x0                   	// #0
 574:	ldr	x0, [x19]
 578:	ldr	x1, [x1]
 57c:	ldr	x0, [x0, #56]
 580:	ldr	x1, [x1]
 584:	blr	x1
 588:	mov	x1, x0
 58c:	adrp	x0, 0 <grub_extcmd_dispatcher>
 590:	ldr	x0, [x0]
 594:	bl	0 <grub_printf>
 598:	ldr	x0, [x19, #16]
 59c:	mov	w2, #0x1                   	// #1
 5a0:	mov	w19, #0x0                   	// #0
 5a4:	mov	x3, x0
 5a8:	cbnz	x3, 5d4 <grub_arg_show_help+0x7c>
 5ac:	cbnz	x0, 5f8 <grub_arg_show_help+0xa0>
 5b0:	mov	w2, w19
 5b4:	mov	w1, w20
 5b8:	adrp	x0, 0 <grub_extcmd_dispatcher>
 5bc:	ldp	x19, x20, [sp, #16]
 5c0:	ldp	x29, x30, [sp], #32
 5c4:	ldr	x0, [x0]
 5c8:	b	218 <showargs>
 5cc:	mov	w20, #0x1                   	// #1
 5d0:	b	5f0 <grub_arg_show_help+0x98>
 5d4:	ldr	x1, [x3, #16]
 5d8:	cbz	x1, 5ac <grub_arg_show_help+0x54>
 5dc:	ldr	w1, [x3, #8]
 5e0:	cmp	w1, #0x68
 5e4:	b.eq	5cc <grub_arg_show_help+0x74>  // b.none
 5e8:	cmp	w1, #0x75
 5ec:	csel	w19, w19, w2, ne  // ne = any
 5f0:	add	x3, x3, #0x28
 5f4:	b	5a8 <grub_arg_show_help+0x50>
 5f8:	mov	w2, w19
 5fc:	mov	w1, w20
 600:	bl	218 <showargs>
 604:	b	5b0 <grub_arg_show_help+0x58>
	...

0000000000000620 <parse_option>:
 620:	stp	x29, x30, [sp, #-16]!
 624:	adrp	x4, 0 <grub_extcmd_dispatcher>
 628:	mov	x29, sp
 62c:	ldr	x4, [x4]
 630:	cmp	x1, x4
 634:	b.ne	648 <parse_option+0x28>  // b.any
 638:	bl	558 <grub_arg_show_help>
 63c:	mov	w0, #0xffffffff            	// #-1
 640:	ldp	x29, x30, [sp], #16
 644:	ret
 648:	add	x4, x4, #0x28
 64c:	cmp	x1, x4
 650:	b.ne	65c <parse_option+0x3c>  // b.any
 654:	bl	4d8 <show_usage.isra.0>
 658:	b	63c <parse_option+0x1c>
 65c:	ldr	x0, [x0, #16]
 660:	ldr	w6, [x1, #12]
 664:	sub	x1, x1, x0
 668:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
 66c:	movk	x0, #0xcccd
 670:	asr	x1, x1, #3
 674:	mul	x1, x1, x0
 678:	and	w0, w6, #0x4
 67c:	sbfiz	x4, x1, #4, #32
 680:	add	x1, x3, w1, sxtw #4
 684:	tbz	w6, #2, 6b4 <parse_option+0x94>
 688:	ldr	w0, [x3, x4]
 68c:	ldr	x5, [x1, #8]
 690:	add	w6, w0, #0x1
 694:	sbfiz	x0, x0, #3, #32
 698:	str	w6, [x3, x4]
 69c:	str	x2, [x5, x0]
 6a0:	ldr	x1, [x1, #8]
 6a4:	add	x0, x1, x0
 6a8:	str	xzr, [x0, #8]
 6ac:	mov	w0, #0x0                   	// #0
 6b0:	b	640 <parse_option+0x20>
 6b4:	mov	w5, #0x1                   	// #1
 6b8:	str	w5, [x3, x4]
 6bc:	str	x2, [x1, #8]
 6c0:	b	640 <parse_option+0x20>
 6c4:	nop
	...

00000000000006d0 <grub_arg_parse>:
 6d0:	stp	x29, x30, [sp, #-160]!
 6d4:	mov	x29, sp
 6d8:	stp	x21, x22, [sp, #32]
 6dc:	mov	x21, x0
 6e0:	stp	x23, x24, [sp, #48]
 6e4:	mov	w24, w1
 6e8:	mov	x23, x2
 6ec:	stp	x25, x26, [sp, #64]
 6f0:	mov	x25, x3
 6f4:	adrp	x26, 0 <grub_extcmd_dispatcher>
 6f8:	stp	x19, x20, [sp, #16]
 6fc:	mov	w20, #0x0                   	// #0
 700:	stp	x27, x28, [sp, #80]
 704:	stp	x4, x5, [sp, #96]
 708:	str	wzr, [sp, #140]
 70c:	str	xzr, [sp, #144]
 710:	ldr	w0, [sp, #140]
 714:	cmp	w20, w24
 718:	b.ge	8c0 <grub_arg_parse+0x1f0>  // b.tcont
 71c:	sbfiz	x22, x20, #3, #32
 720:	ldr	x28, [x23, x22]
 724:	cbz	w0, 748 <grub_arg_parse+0x78>
 728:	ldr	x0, [x21]
 72c:	ldr	w0, [x0, #40]
 730:	tbz	w0, #8, 748 <grub_arg_parse+0x78>
 734:	mov	x2, x28
 738:	add	x1, sp, #0x8c
 73c:	add	x0, sp, #0x90
 740:	bl	44c <add_arg>
 744:	b	a44 <grub_arg_parse+0x374>
 748:	ldrb	w0, [x28]
 74c:	cmp	w0, #0x2d
 750:	b.ne	734 <grub_arg_parse+0x64>  // b.any
 754:	mov	x0, x28
 758:	bl	0 <grub_strlen>
 75c:	cmp	x0, #0x1
 760:	b.eq	734 <grub_arg_parse+0x64>  // b.none
 764:	ldrb	w0, [x28, #1]
 768:	cmp	w0, #0x2d
 76c:	b.eq	8a0 <grub_arg_parse+0x1d0>  // b.none
 770:	ldr	x0, [x21]
 774:	add	x19, x28, #0x1
 778:	ldr	w0, [x0, #40]
 77c:	tbz	w0, #7, 790 <grub_arg_parse+0xc0>
 780:	ldr	x4, [x21, #16]
 784:	mov	x3, x19
 788:	ldrb	w1, [x3]
 78c:	cbnz	w1, 7d0 <grub_arg_parse+0x100>
 790:	ldrb	w1, [x19]
 794:	ldr	x0, [x21, #16]
 798:	bl	1b8 <find_short>
 79c:	mov	x27, x0
 7a0:	cbnz	x0, 7e4 <grub_arg_parse+0x114>
 7a4:	mov	w0, #0x2d                  	// #45
 7a8:	strb	w0, [sp, #152]
 7ac:	add	x2, sp, #0x98
 7b0:	ldrb	w0, [x19]
 7b4:	strb	w0, [sp, #153]
 7b8:	strb	wzr, [sp, #154]
 7bc:	adrp	x0, 0 <grub_extcmd_dispatcher>
 7c0:	ldr	x1, [x0]
 7c4:	mov	w0, #0x12                  	// #18
 7c8:	bl	0 <grub_error>
 7cc:	b	810 <grub_arg_parse+0x140>
 7d0:	mov	x0, x4
 7d4:	bl	1b8 <find_short>
 7d8:	cbz	x0, 734 <grub_arg_parse+0x64>
 7dc:	add	x3, x3, #0x1
 7e0:	b	788 <grub_arg_parse+0xb8>
 7e4:	ldrb	w0, [x19, #1]!
 7e8:	cbz	w0, 818 <grub_arg_parse+0x148>
 7ec:	mov	x1, x27
 7f0:	mov	x3, x25
 7f4:	mov	x0, x21
 7f8:	mov	x2, #0x0                   	// #0
 7fc:	bl	620 <parse_option>
 800:	ldr	x1, [x26]
 804:	ldr	w1, [x1]
 808:	orr	w0, w0, w1
 80c:	cbz	w0, 790 <grub_arg_parse+0xc0>
 810:	mov	w19, #0x0                   	// #0
 814:	b	8dc <grub_arg_parse+0x20c>
 818:	ldr	w0, [x27, #32]
 81c:	cbz	w0, 898 <grub_arg_parse+0x1c8>
 820:	add	w1, w20, #0x1
 824:	cmp	w1, w24
 828:	b.ge	898 <grub_arg_parse+0x1c8>  // b.tcont
 82c:	ldr	w0, [x27, #12]
 830:	add	x22, x23, x22
 834:	tbnz	w0, #1, 870 <grub_arg_parse+0x1a0>
 838:	ldr	x19, [x22, #8]
 83c:	mov	w20, w1
 840:	ldr	w0, [x27, #32]
 844:	cbz	w0, a50 <grub_arg_parse+0x380>
 848:	cbnz	x19, 9d8 <grub_arg_parse+0x308>
 84c:	ldr	w0, [x27, #12]
 850:	and	w19, w0, #0x2
 854:	tbnz	w0, #1, a64 <grub_arg_parse+0x394>
 858:	adrp	x0, 0 <grub_extcmd_dispatcher>
 85c:	ldr	x2, [x27]
 860:	ldr	x1, [x0]
 864:	mov	w0, #0x12                  	// #18
 868:	bl	0 <grub_error>
 86c:	b	8dc <grub_arg_parse+0x20c>
 870:	ldr	x19, [x22, #8]
 874:	str	w1, [sp, #112]
 878:	mov	x0, x19
 87c:	bl	0 <grub_strlen>
 880:	ldr	w1, [sp, #112]
 884:	cmp	x0, #0x1
 888:	b.ls	838 <grub_arg_parse+0x168>  // b.plast
 88c:	ldrb	w0, [x19]
 890:	cmp	w0, #0x2d
 894:	b.ne	838 <grub_arg_parse+0x168>  // b.any
 898:	mov	x19, #0x0                   	// #0
 89c:	b	840 <grub_arg_parse+0x170>
 8a0:	mov	x0, x28
 8a4:	bl	0 <grub_strlen>
 8a8:	cmp	x0, #0x2
 8ac:	b.ne	918 <grub_arg_parse+0x248>  // b.any
 8b0:	add	w20, w20, #0x1
 8b4:	sxtw	x20, w20
 8b8:	cmp	w24, w20
 8bc:	b.gt	8fc <grub_arg_parse+0x22c>
 8c0:	ldr	x1, [sp, #96]
 8c4:	mov	w19, #0x1                   	// #1
 8c8:	ldr	x0, [sp, #144]
 8cc:	str	x0, [x1]
 8d0:	ldr	x1, [sp, #104]
 8d4:	ldr	w0, [sp, #140]
 8d8:	str	w0, [x1]
 8dc:	mov	w0, w19
 8e0:	ldp	x19, x20, [sp, #16]
 8e4:	ldp	x21, x22, [sp, #32]
 8e8:	ldp	x23, x24, [sp, #48]
 8ec:	ldp	x25, x26, [sp, #64]
 8f0:	ldp	x27, x28, [sp, #80]
 8f4:	ldp	x29, x30, [sp], #160
 8f8:	ret
 8fc:	ldr	x2, [x23, x20, lsl #3]
 900:	add	x1, sp, #0x8c
 904:	add	x0, sp, #0x90
 908:	add	x20, x20, #0x1
 90c:	bl	44c <add_arg>
 910:	cbz	w0, 8b8 <grub_arg_parse+0x1e8>
 914:	b	810 <grub_arg_parse+0x140>
 918:	mov	x0, x28
 91c:	mov	w1, #0x3d                  	// #61
 920:	bl	0 <grub_strchr>
 924:	mov	x19, x0
 928:	cbz	x0, 988 <grub_arg_parse+0x2b8>
 92c:	sub	x2, x0, x28
 930:	add	x19, x0, #0x1
 934:	sub	w2, w2, #0x2
 938:	ldr	x0, [x21, #16]
 93c:	add	x1, x28, #0x2
 940:	cbnz	x0, 998 <grub_arg_parse+0x2c8>
 944:	adrp	x0, 0 <grub_extcmd_dispatcher>
 948:	ldr	x0, [x0]
 94c:	bl	3e0 <fnd_long>
 950:	mov	x27, x0
 954:	cbnz	x19, 9d0 <grub_arg_parse+0x300>
 958:	add	x22, x23, x22
 95c:	ldr	x19, [x22, #8]
 960:	cbz	x19, 9d0 <grub_arg_parse+0x300>
 964:	ldrb	w0, [x19]
 968:	cmp	w0, #0x2d
 96c:	b.eq	9cc <grub_arg_parse+0x2fc>  // b.none
 970:	cbnz	x27, 9bc <grub_arg_parse+0x2ec>
 974:	ldr	x0, [x21]
 978:	ldr	w0, [x0, #40]
 97c:	tbnz	w0, #7, 734 <grub_arg_parse+0x64>
 980:	mov	x2, x28
 984:	b	7bc <grub_arg_parse+0xec>
 988:	mov	x0, x28
 98c:	bl	0 <grub_strlen>
 990:	sub	w2, w0, #0x2
 994:	b	938 <grub_arg_parse+0x268>
 998:	str	x1, [sp, #112]
 99c:	str	w2, [sp, #124]
 9a0:	bl	3e0 <fnd_long>
 9a4:	ldr	w2, [sp, #124]
 9a8:	mov	x27, x0
 9ac:	ldr	x1, [sp, #112]
 9b0:	cbz	x0, 944 <grub_arg_parse+0x274>
 9b4:	cbnz	x19, 840 <grub_arg_parse+0x170>
 9b8:	b	958 <grub_arg_parse+0x288>
 9bc:	ldr	w0, [x27, #32]
 9c0:	cbz	w0, 898 <grub_arg_parse+0x1c8>
 9c4:	add	w20, w20, #0x1
 9c8:	b	840 <grub_arg_parse+0x170>
 9cc:	mov	x19, #0x0                   	// #0
 9d0:	cbnz	x27, 840 <grub_arg_parse+0x170>
 9d4:	b	974 <grub_arg_parse+0x2a4>
 9d8:	cmp	w0, #0x2
 9dc:	b.ne	a24 <grub_arg_parse+0x354>  // b.any
 9e0:	add	x1, sp, #0x98
 9e4:	mov	x0, x19
 9e8:	mov	w2, #0x0                   	// #0
 9ec:	bl	0 <grub_strtoull>
 9f0:	ldr	x0, [sp, #152]
 9f4:	cbz	x0, a14 <grub_arg_parse+0x344>
 9f8:	cmp	x0, x19
 9fc:	b.eq	a14 <grub_arg_parse+0x344>  // b.none
 a00:	ldrb	w0, [x0]
 a04:	cbnz	w0, a14 <grub_arg_parse+0x344>
 a08:	ldr	x0, [x26]
 a0c:	ldr	w0, [x0]
 a10:	cbz	w0, a24 <grub_arg_parse+0x354>
 a14:	adrp	x0, 0 <grub_extcmd_dispatcher>
 a18:	mov	x2, x28
 a1c:	ldr	x1, [x0]
 a20:	b	7c4 <grub_arg_parse+0xf4>
 a24:	mov	x3, x25
 a28:	mov	x2, x19
 a2c:	mov	x1, x27
 a30:	mov	x0, x21
 a34:	bl	620 <parse_option>
 a38:	ldr	x1, [x26]
 a3c:	ldr	w1, [x1]
 a40:	orr	w0, w0, w1
 a44:	cbnz	w0, 810 <grub_arg_parse+0x140>
 a48:	add	w20, w20, #0x1
 a4c:	b	710 <grub_arg_parse+0x40>
 a50:	cbz	x19, a64 <grub_arg_parse+0x394>
 a54:	adrp	x0, 0 <grub_extcmd_dispatcher>
 a58:	mov	x2, x28
 a5c:	ldr	x1, [x0]
 a60:	b	7c4 <grub_arg_parse+0xf4>
 a64:	mov	x3, x25
 a68:	mov	x2, #0x0                   	// #0
 a6c:	b	a2c <grub_arg_parse+0x35c>
	...

0000000000000aa0 <grub_arg_list_alloc>:
 aa0:	stp	x29, x30, [sp, #-48]!
 aa4:	mov	x29, sp
 aa8:	stp	x19, x20, [sp, #16]
 aac:	ldr	x20, [x0, #16]
 ab0:	str	x21, [sp, #32]
 ab4:	cbnz	x20, acc <grub_arg_list_alloc+0x2c>
 ab8:	mov	x0, #0x0                   	// #0
 abc:	ldp	x19, x20, [sp, #16]
 ac0:	ldr	x21, [sp, #32]
 ac4:	ldp	x29, x30, [sp], #48
 ac8:	ret
 acc:	sxtw	x19, w1
 ad0:	add	x20, x20, #0xc
 ad4:	add	x1, x19, #0x1
 ad8:	mov	x2, x20
 adc:	mov	x21, #0x0                   	// #0
 ae0:	mov	x0, #0x0                   	// #0
 ae4:	lsr	x1, x1, #1
 ae8:	add	x1, x1, #0x1
 aec:	ldur	x3, [x2, #4]
 af0:	cbnz	x3, b44 <grub_arg_list_alloc+0xa4>
 af4:	add	x0, x0, x21, lsl #1
 af8:	lsl	x0, x0, #3
 afc:	bl	0 <grub_zalloc>
 b00:	cbz	x0, ab8 <grub_arg_list_alloc+0x18>
 b04:	lsr	x19, x19, #1
 b08:	add	x21, x0, x21, lsl #4
 b0c:	add	x19, x19, #0x1
 b10:	add	x1, x0, #0x8
 b14:	lsl	x19, x19, #3
 b18:	ldur	x2, [x20, #4]
 b1c:	cbz	x2, abc <grub_arg_list_alloc+0x1c>
 b20:	stur	wzr, [x1, #-8]
 b24:	str	xzr, [x1]
 b28:	ldr	w2, [x20]
 b2c:	tbz	w2, #2, b38 <grub_arg_list_alloc+0x98>
 b30:	str	x21, [x1]
 b34:	add	x21, x21, x19
 b38:	add	x20, x20, #0x28
 b3c:	add	x1, x1, #0x10
 b40:	b	b18 <grub_arg_list_alloc+0x78>
 b44:	ldr	w3, [x2]
 b48:	tbz	w3, #2, b50 <grub_arg_list_alloc+0xb0>
 b4c:	add	x0, x0, x1
 b50:	add	x21, x21, #0x1
 b54:	add	x2, x2, #0x28
 b58:	b	aec <grub_arg_list_alloc+0x4c>
