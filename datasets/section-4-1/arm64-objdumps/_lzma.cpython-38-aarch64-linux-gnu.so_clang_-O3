
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_lzma.cpython-38-aarch64-linux-gnu.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000021c0 <.init>:
    21c0:	stp	x29, x30, [sp, #-16]!
    21c4:	mov	x29, sp
    21c8:	bl	2650 <_PyDict_SetItemId@plt+0x10>
    21cc:	ldp	x29, x30, [sp], #16
    21d0:	ret

Disassembly of section .plt:

00000000000021e0 <memcpy@plt-0x20>:
    21e0:	stp	x16, x30, [sp, #-16]!
    21e4:	adrp	x16, 16000 <PyInit__lzma@@Base+0x138dc>
    21e8:	ldr	x17, [x16, #4088]
    21ec:	add	x16, x16, #0xff8
    21f0:	br	x17
    21f4:	nop
    21f8:	nop
    21fc:	nop

0000000000002200 <memcpy@plt>:
    2200:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16]
    2208:	add	x16, x16, #0x0
    220c:	br	x17

0000000000002210 <memmove@plt>:
    2210:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #8]
    2218:	add	x16, x16, #0x8
    221c:	br	x17

0000000000002220 <PyModule_AddIntConstant@plt>:
    2220:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #16]
    2228:	add	x16, x16, #0x10
    222c:	br	x17

0000000000002230 <PyMapping_Check@plt>:
    2230:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #24]
    2238:	add	x16, x16, #0x18
    223c:	br	x17

0000000000002240 <_PyBytes_Resize@plt>:
    2240:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #32]
    2248:	add	x16, x16, #0x20
    224c:	br	x17

0000000000002250 <lzma_code@plt>:
    2250:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #40]
    2258:	add	x16, x16, #0x28
    225c:	br	x17

0000000000002260 <PyEval_RestoreThread@plt>:
    2260:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #48]
    2268:	add	x16, x16, #0x30
    226c:	br	x17

0000000000002270 <PyMem_Free@plt>:
    2270:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #56]
    2278:	add	x16, x16, #0x38
    227c:	br	x17

0000000000002280 <PyLong_FromUnsignedLongLong@plt>:
    2280:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #64]
    2288:	add	x16, x16, #0x40
    228c:	br	x17

0000000000002290 <PyBuffer_Release@plt>:
    2290:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #72]
    2298:	add	x16, x16, #0x48
    229c:	br	x17

00000000000022a0 <PyLong_AsUnsignedLongLong@plt>:
    22a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #80]
    22a8:	add	x16, x16, #0x50
    22ac:	br	x17

00000000000022b0 <__cxa_finalize@plt>:
    22b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #88]
    22b8:	add	x16, x16, #0x58
    22bc:	br	x17

00000000000022c0 <PyMem_RawMalloc@plt>:
    22c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #96]
    22c8:	add	x16, x16, #0x60
    22cc:	br	x17

00000000000022d0 <PyBuffer_IsContiguous@plt>:
    22d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #104]
    22d8:	add	x16, x16, #0x68
    22dc:	br	x17

00000000000022e0 <PyBytes_FromStringAndSize@plt>:
    22e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #112]
    22e8:	add	x16, x16, #0x70
    22ec:	br	x17

00000000000022f0 <_Py_Dealloc@plt>:
    22f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #120]
    22f8:	add	x16, x16, #0x78
    22fc:	br	x17

0000000000002300 <PyErr_NoMemory@plt>:
    2300:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #128]
    2308:	add	x16, x16, #0x80
    230c:	br	x17

0000000000002310 <PyErr_NewExceptionWithDoc@plt>:
    2310:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #136]
    2318:	add	x16, x16, #0x88
    231c:	br	x17

0000000000002320 <PyThread_acquire_lock@plt>:
    2320:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #144]
    2328:	add	x16, x16, #0x90
    232c:	br	x17

0000000000002330 <lzma_easy_encoder@plt>:
    2330:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #152]
    2338:	add	x16, x16, #0x98
    233c:	br	x17

0000000000002340 <_PyArg_UnpackKeywords@plt>:
    2340:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #160]
    2348:	add	x16, x16, #0xa0
    234c:	br	x17

0000000000002350 <PyErr_SetString@plt>:
    2350:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #168]
    2358:	add	x16, x16, #0xa8
    235c:	br	x17

0000000000002360 <PyMapping_GetItemString@plt>:
    2360:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #176]
    2368:	add	x16, x16, #0xb0
    236c:	br	x17

0000000000002370 <lzma_raw_encoder@plt>:
    2370:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #184]
    2378:	add	x16, x16, #0xb8
    237c:	br	x17

0000000000002380 <PyMem_Realloc@plt>:
    2380:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #192]
    2388:	add	x16, x16, #0xc0
    238c:	br	x17

0000000000002390 <PyErr_SetNone@plt>:
    2390:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #200]
    2398:	add	x16, x16, #0xc8
    239c:	br	x17

00000000000023a0 <PyErr_ExceptionMatches@plt>:
    23a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #208]
    23a8:	add	x16, x16, #0xd0
    23ac:	br	x17

00000000000023b0 <lzma_properties_size@plt>:
    23b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #216]
    23b8:	add	x16, x16, #0xd8
    23bc:	br	x17

00000000000023c0 <PySequence_GetItem@plt>:
    23c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #224]
    23c8:	add	x16, x16, #0xe0
    23cc:	br	x17

00000000000023d0 <lzma_auto_decoder@plt>:
    23d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #232]
    23d8:	add	x16, x16, #0xe8
    23dc:	br	x17

00000000000023e0 <PyType_Ready@plt>:
    23e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #240]
    23e8:	add	x16, x16, #0xf0
    23ec:	br	x17

00000000000023f0 <PyLong_AsSsize_t@plt>:
    23f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #248]
    23f8:	add	x16, x16, #0xf8
    23fc:	br	x17

0000000000002400 <_PyArg_BadArgument@plt>:
    2400:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #256]
    2408:	add	x16, x16, #0x100
    240c:	br	x17

0000000000002410 <PySequence_Size@plt>:
    2410:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #264]
    2418:	add	x16, x16, #0x108
    241c:	br	x17

0000000000002420 <PyErr_Clear@plt>:
    2420:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #272]
    2428:	add	x16, x16, #0x110
    242c:	br	x17

0000000000002430 <PyBool_FromLong@plt>:
    2430:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #280]
    2438:	add	x16, x16, #0x118
    243c:	br	x17

0000000000002440 <__gmon_start__@plt>:
    2440:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #288]
    2448:	add	x16, x16, #0x120
    244c:	br	x17

0000000000002450 <PyTuple_New@plt>:
    2450:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #296]
    2458:	add	x16, x16, #0x128
    245c:	br	x17

0000000000002460 <_PyArg_CheckPositional@plt>:
    2460:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #304]
    2468:	add	x16, x16, #0x130
    246c:	br	x17

0000000000002470 <lzma_properties_decode@plt>:
    2470:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #312]
    2478:	add	x16, x16, #0x138
    247c:	br	x17

0000000000002480 <PyErr_Occurred@plt>:
    2480:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #320]
    2488:	add	x16, x16, #0x140
    248c:	br	x17

0000000000002490 <PyModule_Create2@plt>:
    2490:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #328]
    2498:	add	x16, x16, #0x148
    249c:	br	x17

00000000000024a0 <lzma_stream_decoder@plt>:
    24a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #336]
    24a8:	add	x16, x16, #0x150
    24ac:	br	x17

00000000000024b0 <lzma_alone_decoder@plt>:
    24b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #344]
    24b8:	add	x16, x16, #0x158
    24bc:	br	x17

00000000000024c0 <lzma_end@plt>:
    24c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #352]
    24c8:	add	x16, x16, #0x160
    24cc:	br	x17

00000000000024d0 <PyMem_RawFree@plt>:
    24d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #360]
    24d8:	add	x16, x16, #0x168
    24dc:	br	x17

00000000000024e0 <lzma_get_check@plt>:
    24e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #368]
    24e8:	add	x16, x16, #0x170
    24ec:	br	x17

00000000000024f0 <free@plt>:
    24f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #376]
    24f8:	add	x16, x16, #0x178
    24fc:	br	x17

0000000000002500 <PyThread_allocate_lock@plt>:
    2500:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #384]
    2508:	add	x16, x16, #0x180
    250c:	br	x17

0000000000002510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2510:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #392]
    2518:	add	x16, x16, #0x188
    251c:	br	x17

0000000000002520 <PyThread_release_lock@plt>:
    2520:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #400]
    2528:	add	x16, x16, #0x190
    252c:	br	x17

0000000000002530 <lzma_raw_decoder@plt>:
    2530:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #408]
    2538:	add	x16, x16, #0x198
    253c:	br	x17

0000000000002540 <PyDict_New@plt>:
    2540:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #416]
    2548:	add	x16, x16, #0x1a0
    254c:	br	x17

0000000000002550 <lzma_alone_encoder@plt>:
    2550:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #424]
    2558:	add	x16, x16, #0x1a8
    255c:	br	x17

0000000000002560 <PyObject_GetBuffer@plt>:
    2560:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #432]
    2568:	add	x16, x16, #0x1b0
    256c:	br	x17

0000000000002570 <lzma_properties_encode@plt>:
    2570:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #440]
    2578:	add	x16, x16, #0x1b8
    257c:	br	x17

0000000000002580 <PyEval_SaveThread@plt>:
    2580:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #448]
    2588:	add	x16, x16, #0x1c0
    258c:	br	x17

0000000000002590 <PyModule_AddObject@plt>:
    2590:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #456]
    2598:	add	x16, x16, #0x1c8
    259c:	br	x17

00000000000025a0 <PyType_IsSubtype@plt>:
    25a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #464]
    25a8:	add	x16, x16, #0x1d0
    25ac:	br	x17

00000000000025b0 <PyErr_Format@plt>:
    25b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #472]
    25b8:	add	x16, x16, #0x1d8
    25bc:	br	x17

00000000000025c0 <lzma_check_is_supported@plt>:
    25c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #480]
    25c8:	add	x16, x16, #0x1e0
    25cc:	br	x17

00000000000025d0 <lzma_stream_encoder@plt>:
    25d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #488]
    25d8:	add	x16, x16, #0x1e8
    25dc:	br	x17

00000000000025e0 <PyLong_FromLongLong@plt>:
    25e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #496]
    25e8:	add	x16, x16, #0x1f0
    25ec:	br	x17

00000000000025f0 <PyNumber_Index@plt>:
    25f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #504]
    25f8:	add	x16, x16, #0x1f8
    25fc:	br	x17

0000000000002600 <_PyLong_AsInt@plt>:
    2600:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #512]
    2608:	add	x16, x16, #0x200
    260c:	br	x17

0000000000002610 <lzma_lzma_preset@plt>:
    2610:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #520]
    2618:	add	x16, x16, #0x208
    261c:	br	x17

0000000000002620 <PyMem_Malloc@plt>:
    2620:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #528]
    2628:	add	x16, x16, #0x210
    262c:	br	x17

0000000000002630 <PyThread_free_lock@plt>:
    2630:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #536]
    2638:	add	x16, x16, #0x218
    263c:	br	x17

0000000000002640 <_PyDict_SetItemId@plt>:
    2640:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #544]
    2648:	add	x16, x16, #0x220
    264c:	br	x17

Disassembly of section .text:

0000000000002650 <PyInit__lzma@@Base-0xd4>:
    2650:	adrp	x0, 16000 <PyInit__lzma@@Base+0x138dc>
    2654:	ldr	x0, [x0, #4032]
    2658:	cbz	x0, 2660 <_PyDict_SetItemId@plt+0x20>
    265c:	b	2440 <__gmon_start__@plt>
    2660:	ret
    2664:	nop
    2668:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    266c:	add	x0, x0, #0x9b0
    2670:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2674:	add	x1, x1, #0x9b0
    2678:	cmp	x1, x0
    267c:	b.eq	2694 <_PyDict_SetItemId@plt+0x54>  // b.none
    2680:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    2684:	ldr	x1, [x1, #3976]
    2688:	cbz	x1, 2694 <_PyDict_SetItemId@plt+0x54>
    268c:	mov	x16, x1
    2690:	br	x16
    2694:	ret
    2698:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    269c:	add	x0, x0, #0x9b0
    26a0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    26a4:	add	x1, x1, #0x9b0
    26a8:	sub	x1, x1, x0
    26ac:	lsr	x2, x1, #63
    26b0:	add	x1, x2, x1, asr #3
    26b4:	cmp	xzr, x1, asr #1
    26b8:	asr	x1, x1, #1
    26bc:	b.eq	26d4 <_PyDict_SetItemId@plt+0x94>  // b.none
    26c0:	adrp	x2, 16000 <PyInit__lzma@@Base+0x138dc>
    26c4:	ldr	x2, [x2, #4064]
    26c8:	cbz	x2, 26d4 <_PyDict_SetItemId@plt+0x94>
    26cc:	mov	x16, x2
    26d0:	br	x16
    26d4:	ret
    26d8:	stp	x29, x30, [sp, #-32]!
    26dc:	mov	x29, sp
    26e0:	str	x19, [sp, #16]
    26e4:	adrp	x19, 17000 <PyInit__lzma@@Base+0x148dc>
    26e8:	ldrb	w0, [x19, #2480]
    26ec:	cbnz	w0, 2714 <_PyDict_SetItemId@plt+0xd4>
    26f0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x138dc>
    26f4:	ldr	x0, [x0, #3992]
    26f8:	cbz	x0, 2708 <_PyDict_SetItemId@plt+0xc8>
    26fc:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    2700:	ldr	x0, [x0, #552]
    2704:	bl	22b0 <__cxa_finalize@plt>
    2708:	bl	2668 <_PyDict_SetItemId@plt+0x28>
    270c:	mov	w0, #0x1                   	// #1
    2710:	strb	w0, [x19, #2480]
    2714:	ldr	x19, [sp, #16]
    2718:	ldp	x29, x30, [sp], #32
    271c:	ret
    2720:	b	2698 <_PyDict_SetItemId@plt+0x58>

0000000000002724 <PyInit__lzma@@Base>:
    2724:	stp	x29, x30, [sp, #-32]!
    2728:	stp	x20, x19, [sp, #16]
    272c:	mov	x29, sp
    2730:	mov	x0, xzr
    2734:	bl	2450 <PyTuple_New@plt>
    2738:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    273c:	str	x0, [x8, #2488]
    2740:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2744:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    2748:	add	x0, x0, #0x608
    274c:	mov	w1, #0x3f5                 	// #1013
    2750:	bl	2490 <PyModule_Create2@plt>
    2754:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2758:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    275c:	add	x1, x1, #0xd66
    2760:	mov	x2, xzr
    2764:	mov	x19, x0
    2768:	bl	2220 <PyModule_AddIntConstant@plt>
    276c:	cmn	w0, #0x1
    2770:	b.eq	2810 <PyInit__lzma@@Base+0xec>  // b.none
    2774:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    2778:	add	x1, x1, #0x2ac
    277c:	mov	w2, #0x1                   	// #1
    2780:	mov	x0, x19
    2784:	bl	2220 <PyModule_AddIntConstant@plt>
    2788:	cmn	w0, #0x1
    278c:	b.eq	2800 <PyInit__lzma@@Base+0xdc>  // b.none
    2790:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2794:	add	x1, x1, #0xd72
    2798:	mov	w2, #0x2                   	// #2
    279c:	mov	x0, x19
    27a0:	bl	2220 <PyModule_AddIntConstant@plt>
    27a4:	cmn	w0, #0x1
    27a8:	b.eq	2800 <PyInit__lzma@@Base+0xdc>  // b.none
    27ac:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    27b0:	add	x1, x1, #0x451
    27b4:	mov	w2, #0x3                   	// #3
    27b8:	mov	x0, x19
    27bc:	bl	2220 <PyModule_AddIntConstant@plt>
    27c0:	cmn	w0, #0x1
    27c4:	b.eq	2800 <PyInit__lzma@@Base+0xdc>  // b.none
    27c8:	mov	x0, xzr
    27cc:	bl	25e0 <PyLong_FromLongLong@plt>
    27d0:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    27d4:	mov	x20, x0
    27d8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    27dc:	add	x1, x1, #0xd7f
    27e0:	mov	x0, x19
    27e4:	mov	x2, x20
    27e8:	bl	2590 <PyModule_AddObject@plt>
    27ec:	cbz	w0, 2820 <PyInit__lzma@@Base+0xfc>
    27f0:	ldr	x8, [x20]
    27f4:	subs	x8, x8, #0x1
    27f8:	str	x8, [x20]
    27fc:	b.eq	2c98 <PyInit__lzma@@Base+0x574>  // b.none
    2800:	mov	x0, xzr
    2804:	ldp	x20, x19, [sp, #16]
    2808:	ldp	x29, x30, [sp], #32
    280c:	ret
    2810:	mov	x0, xzr
    2814:	ldp	x20, x19, [sp, #16]
    2818:	ldp	x29, x30, [sp], #32
    281c:	ret
    2820:	mov	w0, #0x1                   	// #1
    2824:	bl	25e0 <PyLong_FromLongLong@plt>
    2828:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    282c:	mov	x20, x0
    2830:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2834:	add	x1, x1, #0xd8a
    2838:	mov	x0, x19
    283c:	mov	x2, x20
    2840:	bl	2590 <PyModule_AddObject@plt>
    2844:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2848:	mov	w0, #0x4                   	// #4
    284c:	bl	25e0 <PyLong_FromLongLong@plt>
    2850:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2854:	mov	x20, x0
    2858:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    285c:	add	x1, x1, #0xd96
    2860:	mov	x0, x19
    2864:	mov	x2, x20
    2868:	bl	2590 <PyModule_AddObject@plt>
    286c:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2870:	mov	w0, #0xa                   	// #10
    2874:	bl	25e0 <PyLong_FromLongLong@plt>
    2878:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    287c:	mov	x20, x0
    2880:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2884:	add	x1, x1, #0xda2
    2888:	mov	x0, x19
    288c:	mov	x2, x20
    2890:	bl	2590 <PyModule_AddObject@plt>
    2894:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2898:	mov	w0, #0xf                   	// #15
    289c:	bl	25e0 <PyLong_FromLongLong@plt>
    28a0:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    28a4:	mov	x20, x0
    28a8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    28ac:	add	x1, x1, #0xdaf
    28b0:	mov	x0, x19
    28b4:	mov	x2, x20
    28b8:	bl	2590 <PyModule_AddObject@plt>
    28bc:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    28c0:	mov	w0, #0x10                  	// #16
    28c4:	bl	25e0 <PyLong_FromLongLong@plt>
    28c8:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    28cc:	mov	x20, x0
    28d0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    28d4:	add	x1, x1, #0xdbc
    28d8:	mov	x0, x19
    28dc:	mov	x2, x20
    28e0:	bl	2590 <PyModule_AddObject@plt>
    28e4:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    28e8:	mov	x0, #0x1                   	// #1
    28ec:	movk	x0, #0x4000, lsl #48
    28f0:	bl	25e0 <PyLong_FromLongLong@plt>
    28f4:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    28f8:	mov	x20, x0
    28fc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2900:	add	x1, x1, #0xdca
    2904:	mov	x0, x19
    2908:	mov	x2, x20
    290c:	bl	2590 <PyModule_AddObject@plt>
    2910:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2914:	mov	w0, #0x21                  	// #33
    2918:	bl	25e0 <PyLong_FromLongLong@plt>
    291c:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2920:	mov	x20, x0
    2924:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2928:	add	x1, x1, #0xdd7
    292c:	mov	x0, x19
    2930:	mov	x2, x20
    2934:	bl	2590 <PyModule_AddObject@plt>
    2938:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    293c:	mov	w0, #0x3                   	// #3
    2940:	bl	25e0 <PyLong_FromLongLong@plt>
    2944:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2948:	mov	x20, x0
    294c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2950:	add	x1, x1, #0xde4
    2954:	mov	x0, x19
    2958:	mov	x2, x20
    295c:	bl	2590 <PyModule_AddObject@plt>
    2960:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2964:	mov	w0, #0x4                   	// #4
    2968:	bl	25e0 <PyLong_FromLongLong@plt>
    296c:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2970:	mov	x20, x0
    2974:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2978:	add	x1, x1, #0xdf1
    297c:	mov	x0, x19
    2980:	mov	x2, x20
    2984:	bl	2590 <PyModule_AddObject@plt>
    2988:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    298c:	mov	w0, #0x6                   	// #6
    2990:	bl	25e0 <PyLong_FromLongLong@plt>
    2994:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2998:	mov	x20, x0
    299c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    29a0:	add	x1, x1, #0xdfc
    29a4:	mov	x0, x19
    29a8:	mov	x2, x20
    29ac:	bl	2590 <PyModule_AddObject@plt>
    29b0:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    29b4:	mov	w0, #0x7                   	// #7
    29b8:	bl	25e0 <PyLong_FromLongLong@plt>
    29bc:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    29c0:	mov	x20, x0
    29c4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    29c8:	add	x1, x1, #0xe08
    29cc:	mov	x0, x19
    29d0:	mov	x2, x20
    29d4:	bl	2590 <PyModule_AddObject@plt>
    29d8:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    29dc:	mov	w0, #0x8                   	// #8
    29e0:	bl	25e0 <PyLong_FromLongLong@plt>
    29e4:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    29e8:	mov	x20, x0
    29ec:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    29f0:	add	x1, x1, #0xe13
    29f4:	mov	x0, x19
    29f8:	mov	x2, x20
    29fc:	bl	2590 <PyModule_AddObject@plt>
    2a00:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2a04:	mov	w0, #0x9                   	// #9
    2a08:	bl	25e0 <PyLong_FromLongLong@plt>
    2a0c:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2a10:	mov	x20, x0
    2a14:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a18:	add	x1, x1, #0xe23
    2a1c:	mov	x0, x19
    2a20:	mov	x2, x20
    2a24:	bl	2590 <PyModule_AddObject@plt>
    2a28:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2a2c:	mov	w0, #0x5                   	// #5
    2a30:	bl	25e0 <PyLong_FromLongLong@plt>
    2a34:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2a38:	mov	x20, x0
    2a3c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a40:	add	x1, x1, #0xe30
    2a44:	mov	x0, x19
    2a48:	mov	x2, x20
    2a4c:	bl	2590 <PyModule_AddObject@plt>
    2a50:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2a54:	mov	w0, #0x3                   	// #3
    2a58:	bl	25e0 <PyLong_FromLongLong@plt>
    2a5c:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2a60:	mov	x20, x0
    2a64:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a68:	add	x1, x1, #0xe3f
    2a6c:	mov	x0, x19
    2a70:	mov	x2, x20
    2a74:	bl	2590 <PyModule_AddObject@plt>
    2a78:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2a7c:	mov	w0, #0x4                   	// #4
    2a80:	bl	25e0 <PyLong_FromLongLong@plt>
    2a84:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2a88:	mov	x20, x0
    2a8c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a90:	add	x1, x1, #0xe46
    2a94:	mov	x0, x19
    2a98:	mov	x2, x20
    2a9c:	bl	2590 <PyModule_AddObject@plt>
    2aa0:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2aa4:	mov	w0, #0x12                  	// #18
    2aa8:	bl	25e0 <PyLong_FromLongLong@plt>
    2aac:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2ab0:	mov	x20, x0
    2ab4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2ab8:	add	x1, x1, #0xe4d
    2abc:	mov	x0, x19
    2ac0:	mov	x2, x20
    2ac4:	bl	2590 <PyModule_AddObject@plt>
    2ac8:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2acc:	mov	w0, #0x13                  	// #19
    2ad0:	bl	25e0 <PyLong_FromLongLong@plt>
    2ad4:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2ad8:	mov	x20, x0
    2adc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2ae0:	add	x1, x1, #0xe54
    2ae4:	mov	x0, x19
    2ae8:	mov	x2, x20
    2aec:	bl	2590 <PyModule_AddObject@plt>
    2af0:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2af4:	mov	w0, #0x14                  	// #20
    2af8:	bl	25e0 <PyLong_FromLongLong@plt>
    2afc:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2b00:	mov	x20, x0
    2b04:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2b08:	add	x1, x1, #0xe5b
    2b0c:	mov	x0, x19
    2b10:	mov	x2, x20
    2b14:	bl	2590 <PyModule_AddObject@plt>
    2b18:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2b1c:	mov	w0, #0x1                   	// #1
    2b20:	bl	25e0 <PyLong_FromLongLong@plt>
    2b24:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2b28:	mov	x20, x0
    2b2c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2b30:	add	x1, x1, #0xe62
    2b34:	mov	x0, x19
    2b38:	mov	x2, x20
    2b3c:	bl	2590 <PyModule_AddObject@plt>
    2b40:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2b44:	mov	w0, #0x2                   	// #2
    2b48:	bl	25e0 <PyLong_FromLongLong@plt>
    2b4c:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2b50:	mov	x20, x0
    2b54:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2b58:	add	x1, x1, #0xe6c
    2b5c:	mov	x0, x19
    2b60:	mov	x2, x20
    2b64:	bl	2590 <PyModule_AddObject@plt>
    2b68:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2b6c:	mov	w0, #0x6                   	// #6
    2b70:	bl	25e0 <PyLong_FromLongLong@plt>
    2b74:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2b78:	mov	x20, x0
    2b7c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2b80:	add	x1, x1, #0xe78
    2b84:	mov	x0, x19
    2b88:	mov	x2, x20
    2b8c:	bl	2590 <PyModule_AddObject@plt>
    2b90:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2b94:	mov	w0, #0x80000000            	// #-2147483648
    2b98:	bl	25e0 <PyLong_FromLongLong@plt>
    2b9c:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2ba0:	mov	x20, x0
    2ba4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2ba8:	add	x1, x1, #0xe87
    2bac:	mov	x0, x19
    2bb0:	mov	x2, x20
    2bb4:	bl	2590 <PyModule_AddObject@plt>
    2bb8:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2bbc:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2bc0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2bc4:	add	x0, x0, #0xe96
    2bc8:	add	x1, x1, #0xea6
    2bcc:	mov	x2, xzr
    2bd0:	mov	x3, xzr
    2bd4:	bl	2310 <PyErr_NewExceptionWithDoc@plt>
    2bd8:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    2bdc:	str	x0, [x8, #2496]
    2be0:	cbz	x0, 2814 <PyInit__lzma@@Base+0xf0>
    2be4:	ldr	x8, [x0]
    2be8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2bec:	mov	x2, x0
    2bf0:	add	x1, x1, #0xe9c
    2bf4:	add	x8, x8, #0x1
    2bf8:	str	x8, [x0]
    2bfc:	mov	x0, x19
    2c00:	bl	2590 <PyModule_AddObject@plt>
    2c04:	cmn	w0, #0x1
    2c08:	b.eq	2800 <PyInit__lzma@@Base+0xdc>  // b.none
    2c0c:	adrp	x20, 17000 <PyInit__lzma@@Base+0x148dc>
    2c10:	add	x20, x20, #0x670
    2c14:	mov	x0, x20
    2c18:	bl	23e0 <PyType_Ready@plt>
    2c1c:	cmn	w0, #0x1
    2c20:	b.eq	2800 <PyInit__lzma@@Base+0xdc>  // b.none
    2c24:	ldr	x8, [x20]
    2c28:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    2c2c:	add	x1, x1, #0x20e
    2c30:	mov	x0, x19
    2c34:	add	x8, x8, #0x1
    2c38:	mov	x2, x20
    2c3c:	str	x8, [x20]
    2c40:	bl	2590 <PyModule_AddObject@plt>
    2c44:	cmn	w0, #0x1
    2c48:	b.eq	2800 <PyInit__lzma@@Base+0xdc>  // b.none
    2c4c:	adrp	x20, 17000 <PyInit__lzma@@Base+0x148dc>
    2c50:	add	x20, x20, #0x810
    2c54:	mov	x0, x20
    2c58:	bl	23e0 <PyType_Ready@plt>
    2c5c:	cmn	w0, #0x1
    2c60:	b.eq	2800 <PyInit__lzma@@Base+0xdc>  // b.none
    2c64:	ldr	x8, [x20]
    2c68:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    2c6c:	add	x1, x1, #0x3bb
    2c70:	mov	x0, x19
    2c74:	add	x8, x8, #0x1
    2c78:	mov	x2, x20
    2c7c:	str	x8, [x20]
    2c80:	bl	2590 <PyModule_AddObject@plt>
    2c84:	cmn	w0, #0x1
    2c88:	csel	x0, xzr, x19, eq  // eq = none
    2c8c:	ldp	x20, x19, [sp, #16]
    2c90:	ldp	x29, x30, [sp], #32
    2c94:	ret
    2c98:	mov	x0, x20
    2c9c:	bl	22f0 <_Py_Dealloc@plt>
    2ca0:	mov	x0, xzr
    2ca4:	ldp	x20, x19, [sp, #16]
    2ca8:	ldp	x29, x30, [sp], #32
    2cac:	ret
    2cb0:	stp	x29, x30, [sp, #-32]!
    2cb4:	str	x19, [sp, #16]
    2cb8:	mov	x29, sp
    2cbc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2cc0:	ldr	x0, [x1, #8]
    2cc4:	ldr	x8, [x8, #3984]
    2cc8:	cmp	x0, x8
    2ccc:	b.eq	2ce4 <PyInit__lzma@@Base+0x5c0>  // b.none
    2cd0:	mov	x19, x1
    2cd4:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    2cd8:	ldr	x1, [x1, #3984]
    2cdc:	bl	25a0 <PyType_IsSubtype@plt>
    2ce0:	cbz	w0, 2d0c <PyInit__lzma@@Base+0x5e8>
    2ce4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2ce8:	ldr	x8, [x8, #4016]
    2cec:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2cf0:	add	x1, x1, #0xf0b
    2cf4:	ldr	x0, [x8]
    2cf8:	bl	2350 <PyErr_SetString@plt>
    2cfc:	ldr	x19, [sp, #16]
    2d00:	mov	x0, xzr
    2d04:	ldp	x29, x30, [sp], #32
    2d08:	ret
    2d0c:	mov	x0, x19
    2d10:	bl	2600 <_PyLong_AsInt@plt>
    2d14:	cmn	w0, #0x1
    2d18:	b.eq	2d30 <PyInit__lzma@@Base+0x60c>  // b.none
    2d1c:	bl	25c0 <lzma_check_is_supported@plt>
    2d20:	ldr	x19, [sp, #16]
    2d24:	and	x0, x0, #0xff
    2d28:	ldp	x29, x30, [sp], #32
    2d2c:	b	2430 <PyBool_FromLong@plt>
    2d30:	bl	2480 <PyErr_Occurred@plt>
    2d34:	cbnz	x0, 2cfc <PyInit__lzma@@Base+0x5d8>
    2d38:	mov	w0, #0xffffffff            	// #-1
    2d3c:	b	2d1c <PyInit__lzma@@Base+0x5f8>
    2d40:	sub	sp, sp, #0x50
    2d44:	stp	x29, x30, [sp, #48]
    2d48:	stp	x20, x19, [sp, #64]
    2d4c:	add	x29, sp, #0x30
    2d50:	adrp	x8, 6000 <PyInit__lzma@@Base+0x38dc>
    2d54:	add	x8, x8, #0x490
    2d58:	ldr	q0, [x8]
    2d5c:	mov	x0, x1
    2d60:	mov	x1, sp
    2d64:	str	q0, [sp]
    2d68:	bl	314c <PyInit__lzma@@Base+0xa28>
    2d6c:	ldr	x20, [sp]
    2d70:	cbz	w0, 2d90 <PyInit__lzma@@Base+0x66c>
    2d74:	ldr	x8, [sp, #8]
    2d78:	sub	x0, x29, #0x14
    2d7c:	sub	x1, x29, #0x10
    2d80:	stp	x20, x8, [x29, #-16]
    2d84:	bl	23b0 <lzma_properties_size@plt>
    2d88:	bl	369c <PyInit__lzma@@Base+0xf78>
    2d8c:	cbz	w0, 2db8 <PyInit__lzma@@Base+0x694>
    2d90:	mov	x19, xzr
    2d94:	cmn	x20, #0x1
    2d98:	b.eq	2da4 <PyInit__lzma@@Base+0x680>  // b.none
    2d9c:	ldr	x0, [sp, #8]
    2da0:	bl	2270 <PyMem_Free@plt>
    2da4:	mov	x0, x19
    2da8:	ldp	x20, x19, [sp, #64]
    2dac:	ldp	x29, x30, [sp, #48]
    2db0:	add	sp, sp, #0x50
    2db4:	ret
    2db8:	ldur	w1, [x29, #-20]
    2dbc:	mov	x0, xzr
    2dc0:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    2dc4:	mov	x19, x0
    2dc8:	cbz	x0, 2d94 <PyInit__lzma@@Base+0x670>
    2dcc:	add	x1, x19, #0x20
    2dd0:	sub	x0, x29, #0x10
    2dd4:	bl	2570 <lzma_properties_encode@plt>
    2dd8:	bl	369c <PyInit__lzma@@Base+0xf78>
    2ddc:	cbz	w0, 2d94 <PyInit__lzma@@Base+0x670>
    2de0:	ldr	x8, [x19]
    2de4:	subs	x8, x8, #0x1
    2de8:	str	x8, [x19]
    2dec:	b.ne	2d90 <PyInit__lzma@@Base+0x66c>  // b.any
    2df0:	mov	x0, x19
    2df4:	bl	22f0 <_Py_Dealloc@plt>
    2df8:	b	2d90 <PyInit__lzma@@Base+0x66c>
    2dfc:	sub	sp, sp, #0x90
    2e00:	stp	x29, x30, [sp, #96]
    2e04:	stp	x22, x21, [sp, #112]
    2e08:	stp	x20, x19, [sp, #128]
    2e0c:	add	x29, sp, #0x60
    2e10:	mov	x19, x1
    2e14:	movi	v0.2d, #0x0
    2e18:	cmp	x2, #0x2
    2e1c:	stp	q0, q0, [sp, #48]
    2e20:	stp	q0, q0, [sp, #16]
    2e24:	str	q0, [sp]
    2e28:	b.eq	2e4c <PyInit__lzma@@Base+0x728>  // b.none
    2e2c:	mov	x8, x2
    2e30:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2e34:	add	x0, x0, #0xef1
    2e38:	mov	w2, #0x2                   	// #2
    2e3c:	mov	w3, #0x2                   	// #2
    2e40:	mov	x1, x8
    2e44:	bl	2460 <_PyArg_CheckPositional@plt>
    2e48:	cbz	w0, 2e74 <PyInit__lzma@@Base+0x750>
    2e4c:	ldr	x0, [x19]
    2e50:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2e54:	mov	x20, x0
    2e58:	bl	2480 <PyErr_Occurred@plt>
    2e5c:	cbnz	x0, 2e74 <PyInit__lzma@@Base+0x750>
    2e60:	ldr	x0, [x19, #8]
    2e64:	mov	x1, sp
    2e68:	mov	w2, wzr
    2e6c:	bl	2560 <PyObject_GetBuffer@plt>
    2e70:	cbz	w0, 2ea0 <PyInit__lzma@@Base+0x77c>
    2e74:	mov	x19, xzr
    2e78:	ldr	x8, [sp, #8]
    2e7c:	cbz	x8, 2e88 <PyInit__lzma@@Base+0x764>
    2e80:	mov	x0, sp
    2e84:	bl	2290 <PyBuffer_Release@plt>
    2e88:	mov	x0, x19
    2e8c:	ldp	x20, x19, [sp, #128]
    2e90:	ldp	x22, x21, [sp, #112]
    2e94:	ldp	x29, x30, [sp, #96]
    2e98:	add	sp, sp, #0x90
    2e9c:	ret
    2ea0:	mov	x0, sp
    2ea4:	mov	w1, #0x43                  	// #67
    2ea8:	bl	22d0 <PyBuffer_IsContiguous@plt>
    2eac:	cbz	w0, 2f90 <PyInit__lzma@@Base+0x86c>
    2eb0:	ldr	x2, [sp]
    2eb4:	ldr	x3, [sp, #16]
    2eb8:	sub	x0, x29, #0x10
    2ebc:	mov	x1, xzr
    2ec0:	stur	x20, [x29, #-16]
    2ec4:	bl	2470 <lzma_properties_decode@plt>
    2ec8:	bl	369c <PyInit__lzma@@Base+0xf78>
    2ecc:	mov	x19, xzr
    2ed0:	cbnz	w0, 2e78 <PyInit__lzma@@Base+0x754>
    2ed4:	bl	2540 <PyDict_New@plt>
    2ed8:	mov	x19, x0
    2edc:	cbz	x0, 3140 <PyInit__lzma@@Base+0xa1c>
    2ee0:	ldur	x0, [x29, #-16]
    2ee4:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    2ee8:	cbz	x0, 3124 <PyInit__lzma@@Base+0xa00>
    2eec:	mov	x20, x0
    2ef0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2ef4:	add	x1, x1, #0x4f0
    2ef8:	mov	x0, x19
    2efc:	mov	x2, x20
    2f00:	bl	2640 <_PyDict_SetItemId@plt>
    2f04:	ldr	x8, [x20]
    2f08:	mov	w21, w0
    2f0c:	subs	x8, x8, #0x1
    2f10:	str	x8, [x20]
    2f14:	b.ne	2f20 <PyInit__lzma@@Base+0x7fc>  // b.any
    2f18:	mov	x0, x20
    2f1c:	bl	22f0 <_Py_Dealloc@plt>
    2f20:	cmn	w21, #0x1
    2f24:	b.eq	3124 <PyInit__lzma@@Base+0xa00>  // b.none
    2f28:	ldur	x2, [x29, #-16]
    2f2c:	cmp	x2, #0x20
    2f30:	b.gt	2fb4 <PyInit__lzma@@Base+0x890>
    2f34:	sub	x8, x2, #0x4
    2f38:	cmp	x8, #0x6
    2f3c:	b.cs	30c4 <PyInit__lzma@@Base+0x9a0>  // b.hs, b.nlast
    2f40:	ldur	x8, [x29, #-8]
    2f44:	ldr	w0, [x8]
    2f48:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    2f4c:	cbz	x0, 3124 <PyInit__lzma@@Base+0xa00>
    2f50:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2f54:	mov	x20, x0
    2f58:	add	x1, x1, #0x598
    2f5c:	mov	x0, x19
    2f60:	mov	x2, x20
    2f64:	bl	2640 <_PyDict_SetItemId@plt>
    2f68:	ldr	x8, [x20]
    2f6c:	mov	w21, w0
    2f70:	subs	x8, x8, #0x1
    2f74:	str	x8, [x20]
    2f78:	b.ne	2f84 <PyInit__lzma@@Base+0x860>  // b.any
    2f7c:	mov	x0, x20
    2f80:	bl	22f0 <_Py_Dealloc@plt>
    2f84:	cmn	w21, #0x1
    2f88:	b.ne	3140 <PyInit__lzma@@Base+0xa1c>  // b.any
    2f8c:	b	3124 <PyInit__lzma@@Base+0xa00>
    2f90:	ldr	x3, [x19, #8]
    2f94:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2f98:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    2f9c:	adrp	x2, 6000 <PyInit__lzma@@Base+0x38dc>
    2fa0:	add	x0, x0, #0xef1
    2fa4:	add	x1, x1, #0x1eb
    2fa8:	add	x2, x2, #0x1f6
    2fac:	bl	2400 <_PyArg_BadArgument@plt>
    2fb0:	b	2e74 <PyInit__lzma@@Base+0x750>
    2fb4:	cmp	x2, #0x21
    2fb8:	b.eq	30ec <PyInit__lzma@@Base+0x9c8>  // b.none
    2fbc:	mov	x8, #0x1                   	// #1
    2fc0:	movk	x8, #0x4000, lsl #48
    2fc4:	cmp	x2, x8
    2fc8:	b.ne	310c <PyInit__lzma@@Base+0x9e8>  // b.any
    2fcc:	ldur	x22, [x29, #-8]
    2fd0:	ldr	w0, [x22, #20]
    2fd4:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    2fd8:	cbz	x0, 3124 <PyInit__lzma@@Base+0xa00>
    2fdc:	mov	x20, x0
    2fe0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2fe4:	add	x1, x1, #0x508
    2fe8:	mov	x0, x19
    2fec:	mov	x2, x20
    2ff0:	bl	2640 <_PyDict_SetItemId@plt>
    2ff4:	ldr	x8, [x20]
    2ff8:	mov	w21, w0
    2ffc:	subs	x8, x8, #0x1
    3000:	str	x8, [x20]
    3004:	b.ne	3010 <PyInit__lzma@@Base+0x8ec>  // b.any
    3008:	mov	x0, x20
    300c:	bl	22f0 <_Py_Dealloc@plt>
    3010:	cmn	w21, #0x1
    3014:	b.eq	3124 <PyInit__lzma@@Base+0xa00>  // b.none
    3018:	ldr	w0, [x22, #24]
    301c:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    3020:	cbz	x0, 3124 <PyInit__lzma@@Base+0xa00>
    3024:	mov	x20, x0
    3028:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    302c:	add	x1, x1, #0x520
    3030:	mov	x0, x19
    3034:	mov	x2, x20
    3038:	bl	2640 <_PyDict_SetItemId@plt>
    303c:	ldr	x8, [x20]
    3040:	mov	w21, w0
    3044:	subs	x8, x8, #0x1
    3048:	str	x8, [x20]
    304c:	b.ne	3058 <PyInit__lzma@@Base+0x934>  // b.any
    3050:	mov	x0, x20
    3054:	bl	22f0 <_Py_Dealloc@plt>
    3058:	cmn	w21, #0x1
    305c:	b.eq	3124 <PyInit__lzma@@Base+0xa00>  // b.none
    3060:	ldr	w0, [x22, #28]
    3064:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    3068:	cbz	x0, 3124 <PyInit__lzma@@Base+0xa00>
    306c:	mov	x20, x0
    3070:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    3074:	add	x1, x1, #0x538
    3078:	mov	x0, x19
    307c:	mov	x2, x20
    3080:	bl	2640 <_PyDict_SetItemId@plt>
    3084:	ldr	x8, [x20]
    3088:	mov	w21, w0
    308c:	subs	x8, x8, #0x1
    3090:	str	x8, [x20]
    3094:	b.ne	30a0 <PyInit__lzma@@Base+0x97c>  // b.any
    3098:	mov	x0, x20
    309c:	bl	22f0 <_Py_Dealloc@plt>
    30a0:	cmn	w21, #0x1
    30a4:	b.eq	3124 <PyInit__lzma@@Base+0xa00>  // b.none
    30a8:	ldr	w0, [x22]
    30ac:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    30b0:	cbz	x0, 3124 <PyInit__lzma@@Base+0xa00>
    30b4:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    30b8:	mov	x20, x0
    30bc:	add	x1, x1, #0x550
    30c0:	b	2f5c <PyInit__lzma@@Base+0x838>
    30c4:	cmp	x2, #0x3
    30c8:	b.ne	310c <PyInit__lzma@@Base+0x9e8>  // b.any
    30cc:	ldur	x8, [x29, #-8]
    30d0:	ldr	w0, [x8, #4]
    30d4:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    30d8:	cbz	x0, 3124 <PyInit__lzma@@Base+0xa00>
    30dc:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    30e0:	mov	x20, x0
    30e4:	add	x1, x1, #0x580
    30e8:	b	2f5c <PyInit__lzma@@Base+0x838>
    30ec:	ldur	x8, [x29, #-8]
    30f0:	ldr	w0, [x8]
    30f4:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    30f8:	cbz	x0, 3124 <PyInit__lzma@@Base+0xa00>
    30fc:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    3100:	mov	x20, x0
    3104:	add	x1, x1, #0x568
    3108:	b	2f5c <PyInit__lzma@@Base+0x838>
    310c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3110:	ldr	x8, [x8, #4008]
    3114:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3118:	add	x1, x1, #0xf90
    311c:	ldr	x0, [x8]
    3120:	bl	25b0 <PyErr_Format@plt>
    3124:	ldr	x8, [x19]
    3128:	subs	x8, x8, #0x1
    312c:	str	x8, [x19]
    3130:	b.ne	313c <PyInit__lzma@@Base+0xa18>  // b.any
    3134:	mov	x0, x19
    3138:	bl	22f0 <_Py_Dealloc@plt>
    313c:	mov	x19, xzr
    3140:	ldur	x0, [x29, #-8]
    3144:	bl	24f0 <free@plt>
    3148:	b	2e78 <PyInit__lzma@@Base+0x754>
    314c:	sub	sp, sp, #0xc0
    3150:	stp	x29, x30, [sp, #128]
    3154:	str	x23, [sp, #144]
    3158:	stp	x22, x21, [sp, #160]
    315c:	stp	x20, x19, [sp, #176]
    3160:	add	x29, sp, #0x80
    3164:	mov	x19, x1
    3168:	mov	x20, x0
    316c:	bl	2230 <PyMapping_Check@plt>
    3170:	cbz	w0, 31b0 <PyInit__lzma@@Base+0xa8c>
    3174:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3178:	add	x1, x1, #0xf64
    317c:	mov	x0, x20
    3180:	bl	2360 <PyMapping_GetItemString@plt>
    3184:	cbz	x0, 31d0 <PyInit__lzma@@Base+0xaac>
    3188:	mov	x21, x0
    318c:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3190:	str	x0, [x19]
    3194:	ldr	x8, [x21]
    3198:	subs	x8, x8, #0x1
    319c:	str	x8, [x21]
    31a0:	b.eq	3204 <PyInit__lzma@@Base+0xae0>  // b.none
    31a4:	bl	2480 <PyErr_Occurred@plt>
    31a8:	cbnz	x0, 3214 <PyInit__lzma@@Base+0xaf0>
    31ac:	b	321c <PyInit__lzma@@Base+0xaf8>
    31b0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    31b4:	ldr	x8, [x8, #4016]
    31b8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    31bc:	add	x1, x1, #0xf30
    31c0:	ldr	x0, [x8]
    31c4:	bl	2350 <PyErr_SetString@plt>
    31c8:	mov	w0, wzr
    31cc:	b	34ec <PyInit__lzma@@Base+0xdc8>
    31d0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    31d4:	ldr	x8, [x8, #4024]
    31d8:	ldr	x0, [x8]
    31dc:	bl	23a0 <PyErr_ExceptionMatches@plt>
    31e0:	cbz	w0, 34ec <PyInit__lzma@@Base+0xdc8>
    31e4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    31e8:	ldr	x8, [x8, #4008]
    31ec:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    31f0:	add	x1, x1, #0xf67
    31f4:	ldr	x0, [x8]
    31f8:	bl	2350 <PyErr_SetString@plt>
    31fc:	mov	w0, wzr
    3200:	b	34ec <PyInit__lzma@@Base+0xdc8>
    3204:	mov	x0, x21
    3208:	bl	22f0 <_Py_Dealloc@plt>
    320c:	bl	2480 <PyErr_Occurred@plt>
    3210:	cbz	x0, 321c <PyInit__lzma@@Base+0xaf8>
    3214:	mov	w0, wzr
    3218:	b	34ec <PyInit__lzma@@Base+0xdc8>
    321c:	ldr	x2, [x19]
    3220:	cmp	x2, #0x20
    3224:	b.gt	3288 <PyInit__lzma@@Base+0xb64>
    3228:	sub	x8, x2, #0x4
    322c:	cmp	x8, #0x6
    3230:	b.cs	3334 <PyInit__lzma@@Base+0xc10>  // b.hs, b.nlast
    3234:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3238:	ldr	x0, [x8, #2488]
    323c:	adrp	x2, 6000 <PyInit__lzma@@Base+0x38dc>
    3240:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    3244:	adrp	x5, 3000 <PyInit__lzma@@Base+0x8dc>
    3248:	add	x2, x2, #0xaa
    324c:	add	x3, x3, #0x4d8
    3250:	add	x5, x5, #0x540
    3254:	add	x4, x29, #0x18
    3258:	sub	x6, x29, #0x8
    325c:	mov	x1, x20
    3260:	stur	wzr, [x29, #-8]
    3264:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3268:	cbz	w0, 3314 <PyInit__lzma@@Base+0xbf0>
    326c:	mov	w0, #0x4                   	// #4
    3270:	bl	2620 <PyMem_Malloc@plt>
    3274:	cbz	x0, 339c <PyInit__lzma@@Base+0xc78>
    3278:	str	wzr, [x0]
    327c:	ldur	w8, [x29, #-8]
    3280:	str	w8, [x0]
    3284:	b	33a0 <PyInit__lzma@@Base+0xc7c>
    3288:	mov	x8, #0x1                   	// #1
    328c:	movk	x8, #0x4000, lsl #48
    3290:	cmp	x2, x8
    3294:	b.eq	32a0 <PyInit__lzma@@Base+0xb7c>  // b.none
    3298:	cmp	x2, #0x21
    329c:	b.ne	33ac <PyInit__lzma@@Base+0xc88>  // b.any
    32a0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    32a4:	add	x1, x1, #0xfa8
    32a8:	mov	x0, x20
    32ac:	bl	2360 <PyMapping_GetItemString@plt>
    32b0:	stur	x0, [x29, #-8]
    32b4:	cbz	x0, 33c8 <PyInit__lzma@@Base+0xca4>
    32b8:	mov	x21, x0
    32bc:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    32c0:	mov	x22, x0
    32c4:	bl	2480 <PyErr_Occurred@plt>
    32c8:	cbnz	x0, 32ec <PyInit__lzma@@Base+0xbc8>
    32cc:	lsr	x8, x22, #32
    32d0:	cbz	x8, 3504 <PyInit__lzma@@Base+0xde0>
    32d4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    32d8:	ldr	x8, [x8, #4040]
    32dc:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    32e0:	add	x1, x1, #0x35
    32e4:	ldr	x0, [x8]
    32e8:	bl	2350 <PyErr_SetString@plt>
    32ec:	mov	w23, wzr
    32f0:	mov	w22, #0x6                   	// #6
    32f4:	ldr	x8, [x21]
    32f8:	subs	x8, x8, #0x1
    32fc:	str	x8, [x21]
    3300:	b.ne	330c <PyInit__lzma@@Base+0xbe8>  // b.any
    3304:	mov	x0, x21
    3308:	bl	22f0 <_Py_Dealloc@plt>
    330c:	cbnz	w23, 33e4 <PyInit__lzma@@Base+0xcc0>
    3310:	b	3438 <PyInit__lzma@@Base+0xd14>
    3314:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3318:	ldr	x8, [x8, #4008]
    331c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3320:	add	x1, x1, #0xe6
    3324:	ldr	x0, [x8]
    3328:	bl	2350 <PyErr_SetString@plt>
    332c:	mov	x0, xzr
    3330:	b	33a0 <PyInit__lzma@@Base+0xc7c>
    3334:	cmp	x2, #0x3
    3338:	b.ne	33ac <PyInit__lzma@@Base+0xc88>  // b.any
    333c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3340:	ldr	x0, [x8, #2488]
    3344:	adrp	x2, 6000 <PyInit__lzma@@Base+0x38dc>
    3348:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    334c:	adrp	x5, 3000 <PyInit__lzma@@Base+0x8dc>
    3350:	mov	w8, #0x1                   	// #1
    3354:	add	x2, x2, #0xaa
    3358:	add	x3, x3, #0x4c0
    335c:	add	x5, x5, #0x540
    3360:	add	x4, x29, #0x18
    3364:	sub	x6, x29, #0x8
    3368:	mov	x1, x20
    336c:	stur	w8, [x29, #-8]
    3370:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3374:	cbz	w0, 344c <PyInit__lzma@@Base+0xd28>
    3378:	mov	w0, #0x28                  	// #40
    337c:	bl	2620 <PyMem_Malloc@plt>
    3380:	cbz	x0, 339c <PyInit__lzma@@Base+0xc78>
    3384:	movi	v0.2d, #0x0
    3388:	str	xzr, [x0, #32]
    338c:	stp	q0, q0, [x0]
    3390:	ldur	w8, [x29, #-8]
    3394:	str	w8, [x0, #4]
    3398:	b	33a0 <PyInit__lzma@@Base+0xc7c>
    339c:	bl	2300 <PyErr_NoMemory@plt>
    33a0:	cmp	x0, #0x0
    33a4:	str	x0, [x19, #8]
    33a8:	b	34e8 <PyInit__lzma@@Base+0xdc4>
    33ac:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    33b0:	ldr	x8, [x8, #4008]
    33b4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    33b8:	add	x1, x1, #0xf90
    33bc:	ldr	x0, [x8]
    33c0:	bl	25b0 <PyErr_Format@plt>
    33c4:	b	3214 <PyInit__lzma@@Base+0xaf0>
    33c8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    33cc:	ldr	x8, [x8, #4024]
    33d0:	ldr	x0, [x8]
    33d4:	bl	23a0 <PyErr_ExceptionMatches@plt>
    33d8:	cbz	w0, 3438 <PyInit__lzma@@Base+0xd14>
    33dc:	bl	2420 <PyErr_Clear@plt>
    33e0:	mov	w22, #0x6                   	// #6
    33e4:	mov	w0, #0x70                  	// #112
    33e8:	bl	2620 <PyMem_Malloc@plt>
    33ec:	cbz	x0, 3440 <PyInit__lzma@@Base+0xd1c>
    33f0:	movi	v0.2d, #0x0
    33f4:	mov	w1, w22
    33f8:	mov	x21, x0
    33fc:	stp	q0, q0, [x0, #80]
    3400:	stp	q0, q0, [x0, #48]
    3404:	stp	q0, q0, [x0, #16]
    3408:	str	q0, [x0]
    340c:	bl	2610 <lzma_lzma_preset@plt>
    3410:	tst	w0, #0xff
    3414:	b.eq	3460 <PyInit__lzma@@Base+0xd3c>  // b.none
    3418:	mov	x0, x21
    341c:	bl	2270 <PyMem_Free@plt>
    3420:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3424:	ldr	x0, [x8, #2496]
    3428:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    342c:	add	x1, x1, #0xfd9
    3430:	mov	w2, w22
    3434:	bl	25b0 <PyErr_Format@plt>
    3438:	mov	x21, xzr
    343c:	b	34e0 <PyInit__lzma@@Base+0xdbc>
    3440:	bl	2300 <PyErr_NoMemory@plt>
    3444:	mov	x21, x0
    3448:	b	34e0 <PyInit__lzma@@Base+0xdbc>
    344c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3450:	ldr	x8, [x8, #4008]
    3454:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3458:	add	x1, x1, #0xaf
    345c:	b	3324 <PyInit__lzma@@Base+0xc00>
    3460:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3464:	ldr	x0, [x8, #2488]
    3468:	adrp	x6, 3000 <PyInit__lzma@@Base+0x8dc>
    346c:	adrp	x15, 3000 <PyInit__lzma@@Base+0x8dc>
    3470:	adrp	x16, 3000 <PyInit__lzma@@Base+0x8dc>
    3474:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    3478:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    347c:	add	x9, x21, #0x14
    3480:	add	x10, x21, #0x18
    3484:	add	x11, x21, #0x1c
    3488:	add	x8, x21, #0x20
    348c:	add	x12, x21, #0x24
    3490:	add	x13, x21, #0x28
    3494:	add	x14, x21, #0x2c
    3498:	add	x6, x6, #0x540
    349c:	add	x15, x15, #0x628
    34a0:	add	x16, x16, #0x5b4
    34a4:	add	x2, x2, #0xff8
    34a8:	add	x3, x3, #0x5b0
    34ac:	add	x4, x29, #0x18
    34b0:	sub	x5, x29, #0x8
    34b4:	mov	x1, x20
    34b8:	mov	x7, x21
    34bc:	stp	x15, x13, [sp, #80]
    34c0:	stp	x16, x8, [sp, #48]
    34c4:	stp	x6, x14, [sp, #96]
    34c8:	stp	x6, x12, [sp, #64]
    34cc:	stp	x6, x11, [sp, #32]
    34d0:	stp	x6, x10, [sp, #16]
    34d4:	stp	x6, x9, [sp]
    34d8:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    34dc:	cbz	w0, 351c <PyInit__lzma@@Base+0xdf8>
    34e0:	str	x21, [x19, #8]
    34e4:	cmp	x21, #0x0
    34e8:	cset	w0, ne  // ne = any
    34ec:	ldp	x20, x19, [sp, #176]
    34f0:	ldp	x22, x21, [sp, #160]
    34f4:	ldr	x23, [sp, #144]
    34f8:	ldp	x29, x30, [sp, #128]
    34fc:	add	sp, sp, #0xc0
    3500:	ret
    3504:	mov	w23, #0x1                   	// #1
    3508:	ldr	x8, [x21]
    350c:	subs	x8, x8, #0x1
    3510:	str	x8, [x21]
    3514:	b.ne	330c <PyInit__lzma@@Base+0xbe8>  // b.any
    3518:	b	3304 <PyInit__lzma@@Base+0xbe0>
    351c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3520:	ldr	x8, [x8, #4008]
    3524:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3528:	add	x1, x1, #0xc
    352c:	ldr	x0, [x8]
    3530:	bl	2350 <PyErr_SetString@plt>
    3534:	mov	x0, x21
    3538:	bl	2270 <PyMem_Free@plt>
    353c:	b	3438 <PyInit__lzma@@Base+0xd14>
    3540:	stp	x29, x30, [sp, #-32]!
    3544:	stp	x20, x19, [sp, #16]
    3548:	mov	x29, sp
    354c:	mov	x19, x1
    3550:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3554:	mov	x20, x0
    3558:	bl	2480 <PyErr_Occurred@plt>
    355c:	cbz	x0, 3570 <PyInit__lzma@@Base+0xe4c>
    3560:	mov	w0, wzr
    3564:	ldp	x20, x19, [sp, #16]
    3568:	ldp	x29, x30, [sp], #32
    356c:	ret
    3570:	lsr	x8, x20, #32
    3574:	cbz	x8, 35a0 <PyInit__lzma@@Base+0xe7c>
    3578:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    357c:	ldr	x8, [x8, #4040]
    3580:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3584:	add	x1, x1, #0x35
    3588:	ldr	x0, [x8]
    358c:	bl	2350 <PyErr_SetString@plt>
    3590:	mov	w0, wzr
    3594:	ldp	x20, x19, [sp, #16]
    3598:	ldp	x29, x30, [sp], #32
    359c:	ret
    35a0:	mov	w0, #0x1                   	// #1
    35a4:	str	w20, [x19]
    35a8:	ldp	x20, x19, [sp, #16]
    35ac:	ldp	x29, x30, [sp], #32
    35b0:	ret
    35b4:	stp	x29, x30, [sp, #-32]!
    35b8:	stp	x20, x19, [sp, #16]
    35bc:	mov	x29, sp
    35c0:	mov	x19, x1
    35c4:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    35c8:	mov	x20, x0
    35cc:	bl	2480 <PyErr_Occurred@plt>
    35d0:	cbz	x0, 35e4 <PyInit__lzma@@Base+0xec0>
    35d4:	mov	w0, wzr
    35d8:	ldp	x20, x19, [sp, #16]
    35dc:	ldp	x29, x30, [sp], #32
    35e0:	ret
    35e4:	lsr	x8, x20, #32
    35e8:	cbz	x8, 3614 <PyInit__lzma@@Base+0xef0>
    35ec:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    35f0:	ldr	x8, [x8, #4040]
    35f4:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    35f8:	add	x1, x1, #0x57
    35fc:	ldr	x0, [x8]
    3600:	bl	2350 <PyErr_SetString@plt>
    3604:	mov	w0, wzr
    3608:	ldp	x20, x19, [sp, #16]
    360c:	ldp	x29, x30, [sp], #32
    3610:	ret
    3614:	mov	w0, #0x1                   	// #1
    3618:	str	w20, [x19]
    361c:	ldp	x20, x19, [sp, #16]
    3620:	ldp	x29, x30, [sp], #32
    3624:	ret
    3628:	stp	x29, x30, [sp, #-32]!
    362c:	stp	x20, x19, [sp, #16]
    3630:	mov	x29, sp
    3634:	mov	x19, x1
    3638:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    363c:	mov	x20, x0
    3640:	bl	2480 <PyErr_Occurred@plt>
    3644:	cbz	x0, 3658 <PyInit__lzma@@Base+0xf34>
    3648:	mov	w0, wzr
    364c:	ldp	x20, x19, [sp, #16]
    3650:	ldp	x29, x30, [sp], #32
    3654:	ret
    3658:	lsr	x8, x20, #32
    365c:	cbz	x8, 3688 <PyInit__lzma@@Base+0xf64>
    3660:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3664:	ldr	x8, [x8, #4040]
    3668:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    366c:	add	x1, x1, #0x7a
    3670:	ldr	x0, [x8]
    3674:	bl	2350 <PyErr_SetString@plt>
    3678:	mov	w0, wzr
    367c:	ldp	x20, x19, [sp, #16]
    3680:	ldp	x29, x30, [sp], #32
    3684:	ret
    3688:	mov	w0, #0x1                   	// #1
    368c:	str	w20, [x19]
    3690:	ldp	x20, x19, [sp, #16]
    3694:	ldp	x29, x30, [sp], #32
    3698:	ret
    369c:	stp	x29, x30, [sp, #-16]!
    36a0:	mov	x29, sp
    36a4:	mov	w2, w0
    36a8:	cmp	w0, #0xb
    36ac:	b.hi	37c8 <PyInit__lzma@@Base+0x10a4>  // b.pmore
    36b0:	adrp	x9, 4000 <PyInit__lzma@@Base+0x18dc>
    36b4:	mov	w8, w2
    36b8:	add	x9, x9, #0xd20
    36bc:	adr	x10, 36d0 <PyInit__lzma@@Base+0xfac>
    36c0:	ldrb	w11, [x9, x8]
    36c4:	add	x10, x10, x11, lsl #2
    36c8:	mov	w0, wzr
    36cc:	br	x10
    36d0:	ldp	x29, x30, [sp], #16
    36d4:	ret
    36d8:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    36dc:	ldr	x0, [x8, #2496]
    36e0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    36e4:	add	x1, x1, #0x10e
    36e8:	bl	2350 <PyErr_SetString@plt>
    36ec:	mov	w0, #0x1                   	// #1
    36f0:	ldp	x29, x30, [sp], #16
    36f4:	ret
    36f8:	bl	2300 <PyErr_NoMemory@plt>
    36fc:	mov	w0, #0x1                   	// #1
    3700:	ldp	x29, x30, [sp], #16
    3704:	ret
    3708:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    370c:	ldr	x0, [x8, #2496]
    3710:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3714:	add	x1, x1, #0x12a
    3718:	bl	2350 <PyErr_SetString@plt>
    371c:	mov	w0, #0x1                   	// #1
    3720:	ldp	x29, x30, [sp], #16
    3724:	ret
    3728:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    372c:	ldr	x0, [x8, #2496]
    3730:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3734:	add	x1, x1, #0x146
    3738:	bl	2350 <PyErr_SetString@plt>
    373c:	mov	w0, #0x1                   	// #1
    3740:	ldp	x29, x30, [sp], #16
    3744:	ret
    3748:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    374c:	ldr	x0, [x8, #2496]
    3750:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3754:	add	x1, x1, #0x16c
    3758:	bl	2350 <PyErr_SetString@plt>
    375c:	mov	w0, #0x1                   	// #1
    3760:	ldp	x29, x30, [sp], #16
    3764:	ret
    3768:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    376c:	ldr	x0, [x8, #2496]
    3770:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3774:	add	x1, x1, #0x18b
    3778:	bl	2350 <PyErr_SetString@plt>
    377c:	mov	w0, #0x1                   	// #1
    3780:	ldp	x29, x30, [sp], #16
    3784:	ret
    3788:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    378c:	ldr	x0, [x8, #2496]
    3790:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3794:	add	x1, x1, #0x19e
    3798:	bl	2350 <PyErr_SetString@plt>
    379c:	mov	w0, #0x1                   	// #1
    37a0:	ldp	x29, x30, [sp], #16
    37a4:	ret
    37a8:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    37ac:	ldr	x0, [x8, #2496]
    37b0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    37b4:	add	x1, x1, #0x1b8
    37b8:	bl	2350 <PyErr_SetString@plt>
    37bc:	mov	w0, #0x1                   	// #1
    37c0:	ldp	x29, x30, [sp], #16
    37c4:	ret
    37c8:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    37cc:	ldr	x0, [x8, #2496]
    37d0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    37d4:	add	x1, x1, #0x1c7
    37d8:	bl	25b0 <PyErr_Format@plt>
    37dc:	mov	w0, #0x1                   	// #1
    37e0:	ldp	x29, x30, [sp], #16
    37e4:	ret
    37e8:	stp	x29, x30, [sp, #-32]!
    37ec:	str	x19, [sp, #16]
    37f0:	mov	x29, sp
    37f4:	mov	x19, x0
    37f8:	add	x0, x0, #0x28
    37fc:	bl	24c0 <lzma_end@plt>
    3800:	ldr	x0, [x19, #184]
    3804:	cbz	x0, 380c <PyInit__lzma@@Base+0x10e8>
    3808:	bl	2630 <PyThread_free_lock@plt>
    380c:	ldr	x8, [x19, #8]
    3810:	mov	x0, x19
    3814:	ldr	x19, [sp, #16]
    3818:	ldr	x1, [x8, #320]
    381c:	ldp	x29, x30, [sp], #32
    3820:	br	x1
    3824:	sub	sp, sp, #0xc0
    3828:	stp	x29, x30, [sp, #128]
    382c:	str	x23, [sp, #144]
    3830:	stp	x22, x21, [sp, #160]
    3834:	stp	x20, x19, [sp, #176]
    3838:	add	x29, sp, #0x80
    383c:	adrp	x23, 16000 <PyInit__lzma@@Base+0x138dc>
    3840:	ldr	x23, [x23, #4056]
    3844:	mov	x8, x2
    3848:	adrp	x2, 6000 <PyInit__lzma@@Base+0x38dc>
    384c:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    3850:	mov	x19, x0
    3854:	mov	w9, #0x1                   	// #1
    3858:	mov	w20, #0xffffffff            	// #-1
    385c:	add	x2, x2, #0x270
    3860:	add	x3, x3, #0x310
    3864:	add	x4, x29, #0x1c
    3868:	add	x5, x29, #0x18
    386c:	add	x6, sp, #0x8
    3870:	mov	x7, sp
    3874:	mov	x0, x1
    3878:	mov	x1, x8
    387c:	stp	w20, w9, [x29, #24]
    3880:	stp	x23, x23, [sp]
    3884:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3888:	cbz	w0, 3c08 <PyInit__lzma@@Base+0x14e4>
    388c:	ldr	w8, [x29, #28]
    3890:	cmp	w8, #0x1
    3894:	b.eq	38c4 <PyInit__lzma@@Base+0x11a0>  // b.none
    3898:	ldr	w8, [x29, #24]
    389c:	add	w8, w8, #0x1
    38a0:	cmp	w8, #0x2
    38a4:	b.cc	38c4 <PyInit__lzma@@Base+0x11a0>  // b.lo, b.ul, b.last
    38a8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    38ac:	ldr	x8, [x8, #4008]
    38b0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    38b4:	add	x1, x1, #0x285
    38b8:	ldr	x0, [x8]
    38bc:	bl	2350 <PyErr_SetString@plt>
    38c0:	b	3c04 <PyInit__lzma@@Base+0x14e0>
    38c4:	ldr	x0, [sp, #8]
    38c8:	cmp	x0, x23
    38cc:	b.eq	38f8 <PyInit__lzma@@Base+0x11d4>  // b.none
    38d0:	ldr	x8, [sp]
    38d4:	cmp	x8, x23
    38d8:	b.eq	38f8 <PyInit__lzma@@Base+0x11d4>  // b.none
    38dc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    38e0:	ldr	x8, [x8, #4008]
    38e4:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    38e8:	add	x1, x1, #0x2b6
    38ec:	ldr	x0, [x8]
    38f0:	bl	2350 <PyErr_SetString@plt>
    38f4:	b	3c04 <PyInit__lzma@@Base+0x14e0>
    38f8:	cmp	x0, x23
    38fc:	b.eq	3934 <PyInit__lzma@@Base+0x1210>  // b.none
    3900:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3904:	mov	x21, x0
    3908:	bl	2480 <PyErr_Occurred@plt>
    390c:	cbnz	x0, 3c04 <PyInit__lzma@@Base+0x14e0>
    3910:	lsr	x8, x21, #32
    3914:	cbz	x8, 3938 <PyInit__lzma@@Base+0x1214>
    3918:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    391c:	ldr	x8, [x8, #4040]
    3920:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3924:	add	x1, x1, #0x35
    3928:	ldr	x0, [x8]
    392c:	bl	2350 <PyErr_SetString@plt>
    3930:	b	3c04 <PyInit__lzma@@Base+0x14e0>
    3934:	mov	w21, #0x6                   	// #6
    3938:	adrp	x8, 4000 <PyInit__lzma@@Base+0x18dc>
    393c:	add	x8, x8, #0x118
    3940:	mov	x20, x19
    3944:	adrp	x9, 4000 <PyInit__lzma@@Base+0x18dc>
    3948:	add	x9, x9, #0x13c
    394c:	str	x8, [x20, #16]!
    3950:	stp	x9, xzr, [x20, #8]
    3954:	str	x20, [x20, #72]
    3958:	bl	2500 <PyThread_allocate_lock@plt>
    395c:	str	x0, [x20, #168]
    3960:	cbz	x0, 3a0c <PyInit__lzma@@Base+0x12e8>
    3964:	str	wzr, [x19, #176]
    3968:	ldr	w2, [x29, #28]
    396c:	add	x20, x20, #0x18
    3970:	cmp	w2, #0x3
    3974:	b.eq	3a28 <PyInit__lzma@@Base+0x1304>  // b.none
    3978:	cmp	w2, #0x2
    397c:	b.eq	3a94 <PyInit__lzma@@Base+0x1370>  // b.none
    3980:	cmp	w2, #0x1
    3984:	b.ne	3af0 <PyInit__lzma@@Base+0x13cc>  // b.any
    3988:	ldr	w22, [x29, #24]
    398c:	cmn	w22, #0x1
    3990:	b.ne	399c <PyInit__lzma@@Base+0x1278>  // b.any
    3994:	mov	w22, #0x4                   	// #4
    3998:	str	w22, [x29, #24]
    399c:	ldr	x1, [sp]
    39a0:	cmp	x1, x23
    39a4:	b.eq	3b0c <PyInit__lzma@@Base+0x13e8>  // b.none
    39a8:	add	x0, sp, #0x10
    39ac:	bl	4144 <PyInit__lzma@@Base+0x1a20>
    39b0:	cmn	w0, #0x1
    39b4:	b.eq	3bf8 <PyInit__lzma@@Base+0x14d4>  // b.none
    39b8:	add	x1, sp, #0x10
    39bc:	mov	x0, x20
    39c0:	mov	w2, w22
    39c4:	add	x21, sp, #0x10
    39c8:	bl	25d0 <lzma_stream_encoder@plt>
    39cc:	ldr	x8, [sp, #16]
    39d0:	mov	w20, w0
    39d4:	cmn	x8, #0x1
    39d8:	b.eq	3bec <PyInit__lzma@@Base+0x14c8>  // b.none
    39dc:	mov	x8, xzr
    39e0:	mov	w22, #0x1                   	// #1
    39e4:	add	x8, x21, x8, lsl #4
    39e8:	ldr	x0, [x8, #8]
    39ec:	bl	2270 <PyMem_Free@plt>
    39f0:	sbfiz	x8, x22, #4, #32
    39f4:	ldr	x9, [x21, x8]
    39f8:	sxtw	x8, w22
    39fc:	add	w22, w22, #0x1
    3a00:	cmn	x9, #0x1
    3a04:	b.ne	39e4 <PyInit__lzma@@Base+0x12c0>  // b.any
    3a08:	b	3bec <PyInit__lzma@@Base+0x14c8>
    3a0c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3a10:	ldr	x8, [x8, #4000]
    3a14:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3a18:	add	x1, x1, #0x2e2
    3a1c:	ldr	x0, [x8]
    3a20:	bl	2350 <PyErr_SetString@plt>
    3a24:	b	3c04 <PyInit__lzma@@Base+0x14e0>
    3a28:	ldr	x1, [sp]
    3a2c:	cmp	x1, x23
    3a30:	b.eq	3b24 <PyInit__lzma@@Base+0x1400>  // b.none
    3a34:	add	x0, sp, #0x10
    3a38:	bl	4144 <PyInit__lzma@@Base+0x1a20>
    3a3c:	cmn	w0, #0x1
    3a40:	b.eq	3bf8 <PyInit__lzma@@Base+0x14d4>  // b.none
    3a44:	add	x1, sp, #0x10
    3a48:	mov	x0, x20
    3a4c:	add	x21, sp, #0x10
    3a50:	bl	2370 <lzma_raw_encoder@plt>
    3a54:	ldr	x8, [sp, #16]
    3a58:	mov	w20, w0
    3a5c:	cmn	x8, #0x1
    3a60:	b.eq	3bec <PyInit__lzma@@Base+0x14c8>  // b.none
    3a64:	mov	x8, xzr
    3a68:	mov	w22, #0x1                   	// #1
    3a6c:	add	x8, x21, x8, lsl #4
    3a70:	ldr	x0, [x8, #8]
    3a74:	bl	2270 <PyMem_Free@plt>
    3a78:	sbfiz	x8, x22, #4, #32
    3a7c:	ldr	x9, [x21, x8]
    3a80:	sxtw	x8, w22
    3a84:	add	w22, w22, #0x1
    3a88:	cmn	x9, #0x1
    3a8c:	b.ne	3a6c <PyInit__lzma@@Base+0x1348>  // b.any
    3a90:	b	3bec <PyInit__lzma@@Base+0x14c8>
    3a94:	ldr	x1, [sp]
    3a98:	add	x0, sp, #0x10
    3a9c:	cmp	x1, x23
    3aa0:	b.eq	3b40 <PyInit__lzma@@Base+0x141c>  // b.none
    3aa4:	bl	4144 <PyInit__lzma@@Base+0x1a20>
    3aa8:	cmn	w0, #0x1
    3aac:	b.eq	3bf8 <PyInit__lzma@@Base+0x14d4>  // b.none
    3ab0:	ldr	x21, [sp, #16]
    3ab4:	mov	x8, #0x1                   	// #1
    3ab8:	movk	x8, #0x4000, lsl #48
    3abc:	cmp	x21, x8
    3ac0:	b.ne	3b68 <PyInit__lzma@@Base+0x1444>  // b.any
    3ac4:	ldr	x8, [sp, #32]
    3ac8:	cmn	x8, #0x1
    3acc:	b.eq	3ba4 <PyInit__lzma@@Base+0x1480>  // b.none
    3ad0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3ad4:	ldr	x8, [x8, #4008]
    3ad8:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3adc:	add	x1, x1, #0x34b
    3ae0:	ldr	x0, [x8]
    3ae4:	bl	2350 <PyErr_SetString@plt>
    3ae8:	mov	w20, #0xb                   	// #11
    3aec:	b	3bb4 <PyInit__lzma@@Base+0x1490>
    3af0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3af4:	ldr	x8, [x8, #4008]
    3af8:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3afc:	add	x1, x1, #0x2fa
    3b00:	ldr	x0, [x8]
    3b04:	bl	25b0 <PyErr_Format@plt>
    3b08:	b	3bf8 <PyInit__lzma@@Base+0x14d4>
    3b0c:	mov	x0, x20
    3b10:	mov	w1, w21
    3b14:	mov	w2, w22
    3b18:	bl	2330 <lzma_easy_encoder@plt>
    3b1c:	mov	w20, w0
    3b20:	b	3bec <PyInit__lzma@@Base+0x14c8>
    3b24:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3b28:	ldr	x8, [x8, #4008]
    3b2c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3b30:	add	x1, x1, #0x391
    3b34:	ldr	x0, [x8]
    3b38:	bl	2350 <PyErr_SetString@plt>
    3b3c:	b	3bf8 <PyInit__lzma@@Base+0x14d4>
    3b40:	mov	w1, w21
    3b44:	bl	2610 <lzma_lzma_preset@plt>
    3b48:	tst	w0, #0xff
    3b4c:	b.eq	3b90 <PyInit__lzma@@Base+0x146c>  // b.none
    3b50:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3b54:	ldr	x0, [x8, #2496]
    3b58:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3b5c:	add	x1, x1, #0xfd9
    3b60:	mov	w2, w21
    3b64:	b	3b04 <PyInit__lzma@@Base+0x13e0>
    3b68:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3b6c:	ldr	x8, [x8, #4008]
    3b70:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3b74:	add	x1, x1, #0x34b
    3b78:	ldr	x0, [x8]
    3b7c:	bl	2350 <PyErr_SetString@plt>
    3b80:	cmn	x21, #0x1
    3b84:	mov	w20, #0xb                   	// #11
    3b88:	b.ne	3bb4 <PyInit__lzma@@Base+0x1490>  // b.any
    3b8c:	b	3be4 <PyInit__lzma@@Base+0x14c0>
    3b90:	add	x1, sp, #0x10
    3b94:	mov	x0, x20
    3b98:	bl	2550 <lzma_alone_encoder@plt>
    3b9c:	mov	w20, w0
    3ba0:	b	3be4 <PyInit__lzma@@Base+0x14c0>
    3ba4:	ldr	x1, [sp, #24]
    3ba8:	mov	x0, x20
    3bac:	bl	2550 <lzma_alone_encoder@plt>
    3bb0:	mov	w20, w0
    3bb4:	mov	x8, xzr
    3bb8:	mov	w21, #0x1                   	// #1
    3bbc:	add	x22, sp, #0x10
    3bc0:	add	x8, x22, x8, lsl #4
    3bc4:	ldr	x0, [x8, #8]
    3bc8:	bl	2270 <PyMem_Free@plt>
    3bcc:	sbfiz	x8, x21, #4, #32
    3bd0:	ldr	x9, [x22, x8]
    3bd4:	sxtw	x8, w21
    3bd8:	add	w21, w21, #0x1
    3bdc:	cmn	x9, #0x1
    3be0:	b.ne	3bc0 <PyInit__lzma@@Base+0x149c>  // b.any
    3be4:	bl	2480 <PyErr_Occurred@plt>
    3be8:	cbnz	x0, 3bf8 <PyInit__lzma@@Base+0x14d4>
    3bec:	mov	w0, w20
    3bf0:	bl	369c <PyInit__lzma@@Base+0xf78>
    3bf4:	cbz	w0, 3c24 <PyInit__lzma@@Base+0x1500>
    3bf8:	ldr	x0, [x19, #184]
    3bfc:	bl	2630 <PyThread_free_lock@plt>
    3c00:	str	xzr, [x19, #184]
    3c04:	mov	w20, #0xffffffff            	// #-1
    3c08:	mov	w0, w20
    3c0c:	ldp	x20, x19, [sp, #176]
    3c10:	ldp	x22, x21, [sp, #160]
    3c14:	ldr	x23, [sp, #144]
    3c18:	ldp	x29, x30, [sp, #128]
    3c1c:	add	sp, sp, #0xc0
    3c20:	ret
    3c24:	mov	w20, wzr
    3c28:	b	3c08 <PyInit__lzma@@Base+0x14e4>
    3c2c:	sub	sp, sp, #0x70
    3c30:	stp	x29, x30, [sp, #80]
    3c34:	stp	x20, x19, [sp, #96]
    3c38:	add	x29, sp, #0x50
    3c3c:	mov	x20, x1
    3c40:	mov	x19, x0
    3c44:	movi	v0.2d, #0x0
    3c48:	mov	x1, sp
    3c4c:	mov	x0, x20
    3c50:	mov	w2, wzr
    3c54:	stp	q0, q0, [sp, #48]
    3c58:	stp	q0, q0, [sp, #16]
    3c5c:	str	q0, [sp]
    3c60:	bl	2560 <PyObject_GetBuffer@plt>
    3c64:	cbz	w0, 3c70 <PyInit__lzma@@Base+0x154c>
    3c68:	mov	x20, xzr
    3c6c:	b	3d28 <PyInit__lzma@@Base+0x1604>
    3c70:	mov	x0, sp
    3c74:	mov	w1, #0x43                  	// #67
    3c78:	bl	22d0 <PyBuffer_IsContiguous@plt>
    3c7c:	cbz	w0, 3cb8 <PyInit__lzma@@Base+0x1594>
    3c80:	ldr	x0, [x19, #184]
    3c84:	mov	w1, wzr
    3c88:	bl	2320 <PyThread_acquire_lock@plt>
    3c8c:	cbz	w0, 3ce0 <PyInit__lzma@@Base+0x15bc>
    3c90:	ldr	w8, [x19, #176]
    3c94:	cbz	w8, 3d08 <PyInit__lzma@@Base+0x15e4>
    3c98:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3c9c:	ldr	x8, [x8, #4008]
    3ca0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3ca4:	add	x1, x1, #0x22c
    3ca8:	ldr	x0, [x8]
    3cac:	bl	2350 <PyErr_SetString@plt>
    3cb0:	mov	x20, xzr
    3cb4:	b	3d20 <PyInit__lzma@@Base+0x15fc>
    3cb8:	adrp	x0, 6000 <PyInit__lzma@@Base+0x38dc>
    3cbc:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3cc0:	adrp	x2, 6000 <PyInit__lzma@@Base+0x38dc>
    3cc4:	add	x0, x0, #0x3ce
    3cc8:	add	x1, x1, #0x223
    3ccc:	add	x2, x2, #0x1f6
    3cd0:	mov	x3, x20
    3cd4:	bl	2400 <_PyArg_BadArgument@plt>
    3cd8:	mov	x20, xzr
    3cdc:	b	3d28 <PyInit__lzma@@Base+0x1604>
    3ce0:	bl	2580 <PyEval_SaveThread@plt>
    3ce4:	ldr	x8, [x19, #184]
    3ce8:	mov	x20, x0
    3cec:	mov	w1, #0x1                   	// #1
    3cf0:	mov	x0, x8
    3cf4:	bl	2320 <PyThread_acquire_lock@plt>
    3cf8:	mov	x0, x20
    3cfc:	bl	2260 <PyEval_RestoreThread@plt>
    3d00:	ldr	w8, [x19, #176]
    3d04:	cbnz	w8, 3c98 <PyInit__lzma@@Base+0x1574>
    3d08:	ldr	x1, [sp]
    3d0c:	ldr	x2, [sp, #16]
    3d10:	mov	x0, x19
    3d14:	mov	w3, wzr
    3d18:	bl	3df4 <PyInit__lzma@@Base+0x16d0>
    3d1c:	mov	x20, x0
    3d20:	ldr	x0, [x19, #184]
    3d24:	bl	2520 <PyThread_release_lock@plt>
    3d28:	ldr	x8, [sp, #8]
    3d2c:	cbz	x8, 3d38 <PyInit__lzma@@Base+0x1614>
    3d30:	mov	x0, sp
    3d34:	bl	2290 <PyBuffer_Release@plt>
    3d38:	mov	x0, x20
    3d3c:	ldp	x20, x19, [sp, #96]
    3d40:	ldp	x29, x30, [sp, #80]
    3d44:	add	sp, sp, #0x70
    3d48:	ret
    3d4c:	stp	x29, x30, [sp, #-32]!
    3d50:	stp	x20, x19, [sp, #16]
    3d54:	mov	x29, sp
    3d58:	mov	x19, x0
    3d5c:	ldr	x0, [x0, #184]
    3d60:	mov	w1, wzr
    3d64:	bl	2320 <PyThread_acquire_lock@plt>
    3d68:	cbz	w0, 3d94 <PyInit__lzma@@Base+0x1670>
    3d6c:	ldr	w8, [x19, #176]
    3d70:	cbz	w8, 3dbc <PyInit__lzma@@Base+0x1698>
    3d74:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3d78:	ldr	x8, [x8, #4008]
    3d7c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3d80:	add	x1, x1, #0x248
    3d84:	ldr	x0, [x8]
    3d88:	bl	2350 <PyErr_SetString@plt>
    3d8c:	mov	x20, xzr
    3d90:	b	3ddc <PyInit__lzma@@Base+0x16b8>
    3d94:	bl	2580 <PyEval_SaveThread@plt>
    3d98:	ldr	x8, [x19, #184]
    3d9c:	mov	x20, x0
    3da0:	mov	w1, #0x1                   	// #1
    3da4:	mov	x0, x8
    3da8:	bl	2320 <PyThread_acquire_lock@plt>
    3dac:	mov	x0, x20
    3db0:	bl	2260 <PyEval_RestoreThread@plt>
    3db4:	ldr	w8, [x19, #176]
    3db8:	cbnz	w8, 3d74 <PyInit__lzma@@Base+0x1650>
    3dbc:	mov	w8, #0x1                   	// #1
    3dc0:	mov	w3, #0x3                   	// #3
    3dc4:	mov	x0, x19
    3dc8:	mov	x1, xzr
    3dcc:	mov	x2, xzr
    3dd0:	str	w8, [x19, #176]
    3dd4:	bl	3df4 <PyInit__lzma@@Base+0x16d0>
    3dd8:	mov	x20, x0
    3ddc:	ldr	x0, [x19, #184]
    3de0:	bl	2520 <PyThread_release_lock@plt>
    3de4:	mov	x0, x20
    3de8:	ldp	x20, x19, [sp, #16]
    3dec:	ldp	x29, x30, [sp], #32
    3df0:	ret
    3df4:	sub	sp, sp, #0x60
    3df8:	stp	x29, x30, [sp, #16]
    3dfc:	stp	x26, x25, [sp, #32]
    3e00:	stp	x24, x23, [sp, #48]
    3e04:	stp	x22, x21, [sp, #64]
    3e08:	stp	x20, x19, [sp, #80]
    3e0c:	add	x29, sp, #0x10
    3e10:	mov	x23, x1
    3e14:	mov	x19, x0
    3e18:	mov	w1, #0x2000                	// #8192
    3e1c:	mov	x0, xzr
    3e20:	mov	w21, w3
    3e24:	mov	x22, x2
    3e28:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3e2c:	str	x0, [sp, #8]
    3e30:	cbz	x0, 40fc <PyInit__lzma@@Base+0x19d8>
    3e34:	mov	x20, x19
    3e38:	add	x8, x0, #0x20
    3e3c:	str	x23, [x20, #40]!
    3e40:	str	x22, [x20, #8]
    3e44:	str	x8, [x20, #24]
    3e48:	ldr	x8, [x0, #16]
    3e4c:	str	x8, [x20, #32]
    3e50:	cbz	x22, 3f30 <PyInit__lzma@@Base+0x180c>
    3e54:	bl	2580 <PyEval_SaveThread@plt>
    3e58:	mov	x22, x0
    3e5c:	mov	x0, x20
    3e60:	cbz	w21, 3ff0 <PyInit__lzma@@Base+0x18cc>
    3e64:	mov	w1, w21
    3e68:	bl	2250 <lzma_code@plt>
    3e6c:	ldr	x24, [x19, #64]
    3e70:	ldr	x25, [sp, #8]
    3e74:	mov	w23, w0
    3e78:	mov	x0, x22
    3e7c:	bl	2260 <PyEval_RestoreThread@plt>
    3e80:	mov	w0, w23
    3e84:	bl	369c <PyInit__lzma@@Base+0xf78>
    3e88:	cbnz	w0, 40dc <PyInit__lzma@@Base+0x19b8>
    3e8c:	sub	x8, x24, x25
    3e90:	sub	x22, x8, #0x20
    3e94:	b	3edc <PyInit__lzma@@Base+0x17b8>
    3e98:	ldr	x8, [x19, #72]
    3e9c:	cbz	x8, 3ef0 <PyInit__lzma@@Base+0x17cc>
    3ea0:	bl	2580 <PyEval_SaveThread@plt>
    3ea4:	mov	x24, x0
    3ea8:	mov	x0, x20
    3eac:	mov	w1, w21
    3eb0:	bl	2250 <lzma_code@plt>
    3eb4:	ldr	x8, [x19, #64]
    3eb8:	ldr	x9, [sp, #8]
    3ebc:	mov	w23, w0
    3ec0:	mov	x0, x24
    3ec4:	sub	x8, x8, x9
    3ec8:	sub	x22, x8, #0x20
    3ecc:	bl	2260 <PyEval_RestoreThread@plt>
    3ed0:	mov	w0, w23
    3ed4:	bl	369c <PyInit__lzma@@Base+0xf78>
    3ed8:	cbnz	w0, 40dc <PyInit__lzma@@Base+0x19b8>
    3edc:	cmp	w21, #0x3
    3ee0:	b.ne	3e98 <PyInit__lzma@@Base+0x1774>  // b.any
    3ee4:	cmp	w23, #0x1
    3ee8:	b.ne	3e98 <PyInit__lzma@@Base+0x1774>  // b.any
    3eec:	b	40b0 <PyInit__lzma@@Base+0x198c>
    3ef0:	ldr	x8, [sp, #8]
    3ef4:	add	x0, sp, #0x8
    3ef8:	ldr	x8, [x8, #16]
    3efc:	add	x8, x8, x8, asr #3
    3f00:	add	x1, x8, #0x6
    3f04:	bl	2240 <_PyBytes_Resize@plt>
    3f08:	cmn	w0, #0x1
    3f0c:	b.eq	40dc <PyInit__lzma@@Base+0x19b8>  // b.none
    3f10:	ldr	x8, [sp, #8]
    3f14:	add	x9, x8, x22
    3f18:	add	x9, x9, #0x20
    3f1c:	str	x9, [x19, #64]
    3f20:	ldr	x8, [x8, #16]
    3f24:	sub	x8, x8, x22
    3f28:	str	x8, [x19, #72]
    3f2c:	b	3ea0 <PyInit__lzma@@Base+0x177c>
    3f30:	mov	w24, #0xa                   	// #10
    3f34:	bl	2580 <PyEval_SaveThread@plt>
    3f38:	mov	x22, x0
    3f3c:	mov	x0, x20
    3f40:	mov	w1, w21
    3f44:	bl	2250 <lzma_code@plt>
    3f48:	ldr	x25, [x19, #64]
    3f4c:	ldr	x26, [sp, #8]
    3f50:	cmp	w0, #0xa
    3f54:	b.ne	3f68 <PyInit__lzma@@Base+0x1844>  // b.any
    3f58:	ldr	x8, [x19, #72]
    3f5c:	cmp	x8, #0x0
    3f60:	csel	w23, w24, wzr, eq  // eq = none
    3f64:	b	3f6c <PyInit__lzma@@Base+0x1848>
    3f68:	mov	w23, w0
    3f6c:	mov	x0, x22
    3f70:	bl	2260 <PyEval_RestoreThread@plt>
    3f74:	mov	w0, w23
    3f78:	bl	369c <PyInit__lzma@@Base+0xf78>
    3f7c:	cbnz	w0, 40dc <PyInit__lzma@@Base+0x19b8>
    3f80:	sub	x8, x25, x26
    3f84:	sub	x22, x8, #0x20
    3f88:	cbz	w21, 3fa0 <PyInit__lzma@@Base+0x187c>
    3f8c:	cmp	w21, #0x3
    3f90:	b.ne	3fa8 <PyInit__lzma@@Base+0x1884>  // b.any
    3f94:	cmp	w23, #0x1
    3f98:	b.ne	3fa8 <PyInit__lzma@@Base+0x1884>  // b.any
    3f9c:	b	40b0 <PyInit__lzma@@Base+0x198c>
    3fa0:	ldr	x8, [x19, #48]
    3fa4:	cbz	x8, 40b0 <PyInit__lzma@@Base+0x198c>
    3fa8:	ldr	x8, [x19, #72]
    3fac:	cbnz	x8, 3f34 <PyInit__lzma@@Base+0x1810>
    3fb0:	ldr	x8, [sp, #8]
    3fb4:	add	x0, sp, #0x8
    3fb8:	ldr	x8, [x8, #16]
    3fbc:	add	x8, x8, x8, asr #3
    3fc0:	add	x1, x8, #0x6
    3fc4:	bl	2240 <_PyBytes_Resize@plt>
    3fc8:	cmn	w0, #0x1
    3fcc:	b.eq	40dc <PyInit__lzma@@Base+0x19b8>  // b.none
    3fd0:	ldr	x8, [sp, #8]
    3fd4:	add	x9, x8, x22
    3fd8:	add	x9, x9, #0x20
    3fdc:	str	x9, [x19, #64]
    3fe0:	ldr	x8, [x8, #16]
    3fe4:	sub	x8, x8, x22
    3fe8:	str	x8, [x19, #72]
    3fec:	b	3f34 <PyInit__lzma@@Base+0x1810>
    3ff0:	mov	w1, wzr
    3ff4:	bl	2250 <lzma_code@plt>
    3ff8:	ldr	x23, [x19, #64]
    3ffc:	ldr	x24, [sp, #8]
    4000:	mov	w21, w0
    4004:	mov	x0, x22
    4008:	bl	2260 <PyEval_RestoreThread@plt>
    400c:	mov	w0, w21
    4010:	bl	369c <PyInit__lzma@@Base+0xf78>
    4014:	cbnz	w0, 40dc <PyInit__lzma@@Base+0x19b8>
    4018:	sub	x8, x23, x24
    401c:	sub	x22, x8, #0x20
    4020:	b	4060 <PyInit__lzma@@Base+0x193c>
    4024:	bl	2580 <PyEval_SaveThread@plt>
    4028:	mov	x21, x0
    402c:	mov	x0, x20
    4030:	mov	w1, wzr
    4034:	bl	2250 <lzma_code@plt>
    4038:	ldr	x8, [x19, #64]
    403c:	ldr	x9, [sp, #8]
    4040:	mov	w23, w0
    4044:	mov	x0, x21
    4048:	sub	x8, x8, x9
    404c:	sub	x22, x8, #0x20
    4050:	bl	2260 <PyEval_RestoreThread@plt>
    4054:	mov	w0, w23
    4058:	bl	369c <PyInit__lzma@@Base+0xf78>
    405c:	cbnz	w0, 40dc <PyInit__lzma@@Base+0x19b8>
    4060:	ldr	x8, [x19, #48]
    4064:	cbz	x8, 40b0 <PyInit__lzma@@Base+0x198c>
    4068:	ldr	x8, [x19, #72]
    406c:	cbnz	x8, 4024 <PyInit__lzma@@Base+0x1900>
    4070:	ldr	x8, [sp, #8]
    4074:	add	x0, sp, #0x8
    4078:	ldr	x8, [x8, #16]
    407c:	add	x8, x8, x8, asr #3
    4080:	add	x1, x8, #0x6
    4084:	bl	2240 <_PyBytes_Resize@plt>
    4088:	cmn	w0, #0x1
    408c:	b.eq	40dc <PyInit__lzma@@Base+0x19b8>  // b.none
    4090:	ldr	x8, [sp, #8]
    4094:	add	x9, x8, x22
    4098:	add	x9, x9, #0x20
    409c:	str	x9, [x19, #64]
    40a0:	ldr	x8, [x8, #16]
    40a4:	sub	x8, x8, x22
    40a8:	str	x8, [x19, #72]
    40ac:	b	4024 <PyInit__lzma@@Base+0x1900>
    40b0:	ldr	x0, [sp, #8]
    40b4:	ldr	x8, [x0, #16]
    40b8:	cmp	x22, x8
    40bc:	b.eq	40fc <PyInit__lzma@@Base+0x19d8>  // b.none
    40c0:	add	x0, sp, #0x8
    40c4:	mov	x1, x22
    40c8:	bl	2240 <_PyBytes_Resize@plt>
    40cc:	cmn	w0, #0x1
    40d0:	b.eq	40dc <PyInit__lzma@@Base+0x19b8>  // b.none
    40d4:	ldr	x0, [sp, #8]
    40d8:	b	40fc <PyInit__lzma@@Base+0x19d8>
    40dc:	ldr	x0, [sp, #8]
    40e0:	cbz	x0, 40fc <PyInit__lzma@@Base+0x19d8>
    40e4:	ldr	x8, [x0]
    40e8:	subs	x8, x8, #0x1
    40ec:	str	x8, [x0]
    40f0:	b.ne	40f8 <PyInit__lzma@@Base+0x19d4>  // b.any
    40f4:	bl	22f0 <_Py_Dealloc@plt>
    40f8:	mov	x0, xzr
    40fc:	ldp	x20, x19, [sp, #80]
    4100:	ldp	x22, x21, [sp, #64]
    4104:	ldp	x24, x23, [sp, #48]
    4108:	ldp	x26, x25, [sp, #32]
    410c:	ldp	x29, x30, [sp, #16]
    4110:	add	sp, sp, #0x60
    4114:	ret
    4118:	cbz	x2, 4134 <PyInit__lzma@@Base+0x1a10>
    411c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    4120:	udiv	x8, x8, x2
    4124:	cmp	x8, x1
    4128:	b.cs	4134 <PyInit__lzma@@Base+0x1a10>  // b.hs, b.nlast
    412c:	mov	x0, xzr
    4130:	ret
    4134:	mul	x0, x2, x1
    4138:	b	22c0 <PyMem_RawMalloc@plt>
    413c:	mov	x0, x1
    4140:	b	24d0 <PyMem_RawFree@plt>
    4144:	stp	x29, x30, [sp, #-64]!
    4148:	stp	x24, x23, [sp, #16]
    414c:	stp	x22, x21, [sp, #32]
    4150:	stp	x20, x19, [sp, #48]
    4154:	mov	x29, sp
    4158:	mov	x19, x0
    415c:	mov	x0, x1
    4160:	mov	x20, x1
    4164:	bl	2410 <PySequence_Size@plt>
    4168:	cmn	x0, #0x1
    416c:	b.eq	4260 <PyInit__lzma@@Base+0x1b3c>  // b.none
    4170:	mov	x21, x0
    4174:	cmp	x0, #0x4
    4178:	b.le	419c <PyInit__lzma@@Base+0x1a78>
    417c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4180:	ldr	x8, [x8, #4008]
    4184:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4188:	add	x1, x1, #0x317
    418c:	mov	w2, #0x4                   	// #4
    4190:	ldr	x0, [x8]
    4194:	bl	25b0 <PyErr_Format@plt>
    4198:	b	425c <PyInit__lzma@@Base+0x1b38>
    419c:	cmp	x21, #0x1
    41a0:	b.lt	41fc <PyInit__lzma@@Base+0x1ad8>  // b.tstop
    41a4:	mov	x23, xzr
    41a8:	mov	x22, x19
    41ac:	b	41c0 <PyInit__lzma@@Base+0x1a9c>
    41b0:	add	x23, x23, #0x1
    41b4:	cmp	x21, x23
    41b8:	add	x22, x22, #0x10
    41bc:	b.eq	41fc <PyInit__lzma@@Base+0x1ad8>  // b.none
    41c0:	mov	x0, x20
    41c4:	mov	x1, x23
    41c8:	bl	23c0 <PySequence_GetItem@plt>
    41cc:	cbz	x0, 421c <PyInit__lzma@@Base+0x1af8>
    41d0:	mov	x1, x22
    41d4:	mov	x24, x0
    41d8:	bl	314c <PyInit__lzma@@Base+0xa28>
    41dc:	ldr	x8, [x24]
    41e0:	sub	x8, x8, #0x1
    41e4:	str	x8, [x24]
    41e8:	cbz	w0, 4210 <PyInit__lzma@@Base+0x1aec>
    41ec:	cbnz	x8, 41b0 <PyInit__lzma@@Base+0x1a8c>
    41f0:	mov	x0, x24
    41f4:	bl	22f0 <_Py_Dealloc@plt>
    41f8:	b	41b0 <PyInit__lzma@@Base+0x1a8c>
    41fc:	lsl	x8, x21, #4
    4200:	mov	x9, #0xffffffffffffffff    	// #-1
    4204:	mov	w0, wzr
    4208:	str	x9, [x19, x8]
    420c:	b	4260 <PyInit__lzma@@Base+0x1b3c>
    4210:	cbnz	x8, 421c <PyInit__lzma@@Base+0x1af8>
    4214:	mov	x0, x24
    4218:	bl	22f0 <_Py_Dealloc@plt>
    421c:	mov	x8, #0xffffffffffffffff    	// #-1
    4220:	str	x8, [x22]
    4224:	ldr	x8, [x19]
    4228:	cmn	x8, #0x1
    422c:	b.eq	425c <PyInit__lzma@@Base+0x1b38>  // b.none
    4230:	mov	x8, xzr
    4234:	mov	w20, #0x1                   	// #1
    4238:	add	x8, x19, x8, lsl #4
    423c:	ldr	x0, [x8, #8]
    4240:	bl	2270 <PyMem_Free@plt>
    4244:	sbfiz	x8, x20, #4, #32
    4248:	ldr	x9, [x19, x8]
    424c:	sxtw	x8, w20
    4250:	add	w20, w20, #0x1
    4254:	cmn	x9, #0x1
    4258:	b.ne	4238 <PyInit__lzma@@Base+0x1b14>  // b.any
    425c:	mov	w0, #0xffffffff            	// #-1
    4260:	ldp	x20, x19, [sp, #48]
    4264:	ldp	x22, x21, [sp, #32]
    4268:	ldp	x24, x23, [sp, #16]
    426c:	ldp	x29, x30, [sp], #64
    4270:	ret
    4274:	stp	x29, x30, [sp, #-32]!
    4278:	str	x19, [sp, #16]
    427c:	mov	x29, sp
    4280:	mov	x19, x0
    4284:	ldr	x0, [x0, #200]
    4288:	cbz	x0, 4290 <PyInit__lzma@@Base+0x1b6c>
    428c:	bl	2270 <PyMem_Free@plt>
    4290:	add	x0, x19, #0x28
    4294:	bl	24c0 <lzma_end@plt>
    4298:	ldr	x0, [x19, #184]
    429c:	cbz	x0, 42b4 <PyInit__lzma@@Base+0x1b90>
    42a0:	str	xzr, [x19, #184]
    42a4:	ldr	x8, [x0]
    42a8:	subs	x8, x8, #0x1
    42ac:	str	x8, [x0]
    42b0:	b.eq	42d8 <PyInit__lzma@@Base+0x1bb4>  // b.none
    42b4:	ldr	x0, [x19, #216]
    42b8:	cbz	x0, 42c0 <PyInit__lzma@@Base+0x1b9c>
    42bc:	bl	2630 <PyThread_free_lock@plt>
    42c0:	ldr	x8, [x19, #8]
    42c4:	mov	x0, x19
    42c8:	ldr	x19, [sp, #16]
    42cc:	ldr	x1, [x8, #320]
    42d0:	ldp	x29, x30, [sp], #32
    42d4:	br	x1
    42d8:	bl	22f0 <_Py_Dealloc@plt>
    42dc:	ldr	x0, [x19, #216]
    42e0:	cbnz	x0, 42bc <PyInit__lzma@@Base+0x1b98>
    42e4:	b	42c0 <PyInit__lzma@@Base+0x1b9c>
    42e8:	sub	sp, sp, #0xb0
    42ec:	stp	x29, x30, [sp, #112]
    42f0:	stp	x24, x23, [sp, #128]
    42f4:	stp	x22, x21, [sp, #144]
    42f8:	stp	x20, x19, [sp, #160]
    42fc:	add	x29, sp, #0x70
    4300:	ldr	x22, [x1, #16]
    4304:	mov	x19, x0
    4308:	cbz	x2, 431c <PyInit__lzma@@Base+0x1bf8>
    430c:	ldr	x8, [x2, #16]
    4310:	add	x21, x1, #0x18
    4314:	add	x20, x8, x22
    4318:	b	432c <PyInit__lzma@@Base+0x1c08>
    431c:	cmp	x22, #0x4
    4320:	add	x21, x1, #0x18
    4324:	mov	x20, x22
    4328:	b.cc	4364 <PyInit__lzma@@Base+0x1c40>  // b.lo, b.ul, b.last
    432c:	adrp	x4, 17000 <PyInit__lzma@@Base+0x148dc>
    4330:	add	x8, sp, #0x8
    4334:	add	x4, x4, #0x480
    4338:	mov	w6, #0x3                   	// #3
    433c:	mov	x0, x21
    4340:	mov	x1, x22
    4344:	mov	x3, xzr
    4348:	mov	w5, wzr
    434c:	mov	w7, wzr
    4350:	str	x8, [sp]
    4354:	bl	2340 <_PyArg_UnpackKeywords@plt>
    4358:	mov	x21, x0
    435c:	mov	x22, x20
    4360:	cbz	x0, 46a4 <PyInit__lzma@@Base+0x1f80>
    4364:	cbz	x22, 43b0 <PyInit__lzma@@Base+0x1c8c>
    4368:	ldr	x8, [x21]
    436c:	cbz	x8, 43c8 <PyInit__lzma@@Base+0x1ca4>
    4370:	ldr	x0, [x8, #8]
    4374:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4378:	ldr	x8, [x8, #3984]
    437c:	cmp	x0, x8
    4380:	b.eq	4394 <PyInit__lzma@@Base+0x1c70>  // b.none
    4384:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    4388:	ldr	x1, [x1, #3984]
    438c:	bl	25a0 <PyType_IsSubtype@plt>
    4390:	cbz	w0, 446c <PyInit__lzma@@Base+0x1d48>
    4394:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4398:	ldr	x8, [x8, #4016]
    439c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    43a0:	add	x1, x1, #0xf0b
    43a4:	ldr	x0, [x8]
    43a8:	bl	2350 <PyErr_SetString@plt>
    43ac:	b	46a4 <PyInit__lzma@@Base+0x1f80>
    43b0:	mov	w20, wzr
    43b4:	adrp	x21, 16000 <PyInit__lzma@@Base+0x138dc>
    43b8:	ldr	x21, [x21, #4056]
    43bc:	cmp	w20, #0x3
    43c0:	cset	w9, eq  // eq = none
    43c4:	b	43fc <PyInit__lzma@@Base+0x1cd8>
    43c8:	mov	w20, wzr
    43cc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    43d0:	ldr	x0, [x21, #8]
    43d4:	ldr	x8, [x8, #4056]
    43d8:	cbz	x0, 4430 <PyInit__lzma@@Base+0x1d0c>
    43dc:	cmp	x22, #0x1
    43e0:	b.ne	4434 <PyInit__lzma@@Base+0x1d10>  // b.any
    43e4:	adrp	x21, 16000 <PyInit__lzma@@Base+0x138dc>
    43e8:	ldr	x21, [x21, #4056]
    43ec:	cmp	w20, #0x3
    43f0:	cset	w9, eq  // eq = none
    43f4:	cmp	x0, x8
    43f8:	b.ne	4448 <PyInit__lzma@@Base+0x1d24>  // b.any
    43fc:	mov	x22, #0xffffffffffffffff    	// #-1
    4400:	cbz	w9, 449c <PyInit__lzma@@Base+0x1d78>
    4404:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4408:	ldr	x8, [x8, #4056]
    440c:	cmp	x21, x8
    4410:	b.ne	449c <PyInit__lzma@@Base+0x1d78>  // b.any
    4414:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4418:	ldr	x8, [x8, #4008]
    441c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4420:	add	x1, x1, #0x391
    4424:	ldr	x0, [x8]
    4428:	bl	2350 <PyErr_SetString@plt>
    442c:	b	46a4 <PyInit__lzma@@Base+0x1f80>
    4430:	mov	x0, x8
    4434:	ldr	x21, [x21, #16]
    4438:	cmp	w20, #0x3
    443c:	cset	w9, eq  // eq = none
    4440:	cmp	x0, x8
    4444:	b.eq	43fc <PyInit__lzma@@Base+0x1cd8>  // b.none
    4448:	cmp	w20, #0x3
    444c:	b.ne	448c <PyInit__lzma@@Base+0x1d68>  // b.any
    4450:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4454:	ldr	x8, [x8, #4008]
    4458:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    445c:	add	x1, x1, #0x430
    4460:	ldr	x0, [x8]
    4464:	bl	2350 <PyErr_SetString@plt>
    4468:	b	46a4 <PyInit__lzma@@Base+0x1f80>
    446c:	ldr	x0, [x21]
    4470:	bl	2600 <_PyLong_AsInt@plt>
    4474:	mov	w20, w0
    4478:	cmn	w0, #0x1
    447c:	b.eq	45b4 <PyInit__lzma@@Base+0x1e90>  // b.none
    4480:	subs	x22, x22, #0x1
    4484:	b.ne	43cc <PyInit__lzma@@Base+0x1ca8>  // b.any
    4488:	b	43b4 <PyInit__lzma@@Base+0x1c90>
    448c:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    4490:	mov	x22, x0
    4494:	bl	2480 <PyErr_Occurred@plt>
    4498:	cbnz	x0, 46a4 <PyInit__lzma@@Base+0x1f80>
    449c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    44a0:	ldr	x8, [x8, #4056]
    44a4:	cmp	x21, x8
    44a8:	b.eq	44d0 <PyInit__lzma@@Base+0x1dac>  // b.none
    44ac:	cmp	w20, #0x3
    44b0:	b.eq	44d0 <PyInit__lzma@@Base+0x1dac>  // b.none
    44b4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    44b8:	ldr	x8, [x8, #4008]
    44bc:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    44c0:	add	x1, x1, #0x45c
    44c4:	ldr	x0, [x8]
    44c8:	bl	2350 <PyErr_SetString@plt>
    44cc:	b	46a4 <PyInit__lzma@@Base+0x1f80>
    44d0:	adrp	x8, 4000 <PyInit__lzma@@Base+0x18dc>
    44d4:	add	x8, x8, #0x118
    44d8:	mov	x9, x19
    44dc:	str	x8, [x9, #16]!
    44e0:	adrp	x8, 4000 <PyInit__lzma@@Base+0x18dc>
    44e4:	add	x8, x8, #0x13c
    44e8:	mov	x23, x9
    44ec:	stp	x8, xzr, [x9, #8]
    44f0:	str	xzr, [x23, #24]!
    44f4:	str	x9, [x9, #72]
    44f8:	bl	2500 <PyThread_allocate_lock@plt>
    44fc:	cbz	x0, 4598 <PyInit__lzma@@Base+0x1e74>
    4500:	mov	x24, x0
    4504:	ldr	x0, [x19, #216]
    4508:	cbz	x0, 4510 <PyInit__lzma@@Base+0x1dec>
    450c:	bl	2630 <PyThread_free_lock@plt>
    4510:	stp	xzr, x24, [x19, #208]
    4514:	ldr	x24, [x19, #184]
    4518:	mov	w8, #0x10                  	// #16
    451c:	mov	w9, #0x1                   	// #1
    4520:	mov	x0, xzr
    4524:	mov	x1, xzr
    4528:	str	w8, [x19, #176]
    452c:	strb	w9, [x19, #192]
    4530:	str	xzr, [x19, #200]
    4534:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    4538:	str	x0, [x19, #184]
    453c:	cbz	x24, 455c <PyInit__lzma@@Base+0x1e38>
    4540:	ldr	x8, [x24]
    4544:	subs	x8, x8, #0x1
    4548:	str	x8, [x24]
    454c:	b.ne	455c <PyInit__lzma@@Base+0x1e38>  // b.any
    4550:	mov	x0, x24
    4554:	bl	22f0 <_Py_Dealloc@plt>
    4558:	ldr	x0, [x19, #184]
    455c:	cbz	x0, 4678 <PyInit__lzma@@Base+0x1f54>
    4560:	cmp	w20, #0x3
    4564:	b.hi	45c0 <PyInit__lzma@@Base+0x1e9c>  // b.pmore
    4568:	adrp	x9, 4000 <PyInit__lzma@@Base+0x18dc>
    456c:	mov	w8, w20
    4570:	add	x9, x9, #0xd2c
    4574:	adr	x10, 4584 <PyInit__lzma@@Base+0x1e60>
    4578:	ldrb	w11, [x9, x8]
    457c:	add	x10, x10, x11, lsl #2
    4580:	br	x10
    4584:	mov	w2, #0x5                   	// #5
    4588:	mov	x0, x23
    458c:	mov	x1, x22
    4590:	bl	23d0 <lzma_auto_decoder@plt>
    4594:	b	4670 <PyInit__lzma@@Base+0x1f4c>
    4598:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    459c:	ldr	x8, [x8, #4000]
    45a0:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    45a4:	add	x1, x1, #0x2e2
    45a8:	ldr	x0, [x8]
    45ac:	bl	2350 <PyErr_SetString@plt>
    45b0:	b	46a4 <PyInit__lzma@@Base+0x1f80>
    45b4:	bl	2480 <PyErr_Occurred@plt>
    45b8:	cbnz	x0, 46a4 <PyInit__lzma@@Base+0x1f80>
    45bc:	b	4480 <PyInit__lzma@@Base+0x1d5c>
    45c0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    45c4:	ldr	x8, [x8, #4008]
    45c8:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    45cc:	add	x1, x1, #0x2fa
    45d0:	mov	w2, w20
    45d4:	ldr	x0, [x8]
    45d8:	bl	25b0 <PyErr_Format@plt>
    45dc:	b	4678 <PyInit__lzma@@Base+0x1f54>
    45e0:	mov	w2, #0x5                   	// #5
    45e4:	mov	x0, x23
    45e8:	mov	x1, x22
    45ec:	bl	24a0 <lzma_stream_decoder@plt>
    45f0:	b	4670 <PyInit__lzma@@Base+0x1f4c>
    45f4:	mov	x0, x23
    45f8:	mov	x1, x22
    45fc:	str	wzr, [x19, #176]
    4600:	bl	24b0 <lzma_alone_decoder@plt>
    4604:	b	4670 <PyInit__lzma@@Base+0x1f4c>
    4608:	add	x0, sp, #0x20
    460c:	mov	x1, x21
    4610:	str	wzr, [x19, #176]
    4614:	bl	4144 <PyInit__lzma@@Base+0x1a20>
    4618:	cmn	w0, #0x1
    461c:	b.eq	4678 <PyInit__lzma@@Base+0x1f54>  // b.none
    4620:	add	x1, sp, #0x20
    4624:	mov	x0, x23
    4628:	add	x21, sp, #0x20
    462c:	bl	2530 <lzma_raw_decoder@plt>
    4630:	ldr	x8, [sp, #32]
    4634:	mov	w20, w0
    4638:	cmn	x8, #0x1
    463c:	b.eq	466c <PyInit__lzma@@Base+0x1f48>  // b.none
    4640:	mov	x8, xzr
    4644:	mov	w22, #0x1                   	// #1
    4648:	add	x8, x21, x8, lsl #4
    464c:	ldr	x0, [x8, #8]
    4650:	bl	2270 <PyMem_Free@plt>
    4654:	sbfiz	x8, x22, #4, #32
    4658:	ldr	x9, [x21, x8]
    465c:	sxtw	x8, w22
    4660:	add	w22, w22, #0x1
    4664:	cmn	x9, #0x1
    4668:	b.ne	4648 <PyInit__lzma@@Base+0x1f24>  // b.any
    466c:	mov	w0, w20
    4670:	bl	369c <PyInit__lzma@@Base+0xf78>
    4674:	cbz	w0, 46a8 <PyInit__lzma@@Base+0x1f84>
    4678:	ldr	x0, [x19, #184]
    467c:	cbz	x0, 4698 <PyInit__lzma@@Base+0x1f74>
    4680:	str	xzr, [x19, #184]
    4684:	ldr	x8, [x0]
    4688:	subs	x8, x8, #0x1
    468c:	str	x8, [x0]
    4690:	b.ne	4698 <PyInit__lzma@@Base+0x1f74>  // b.any
    4694:	bl	22f0 <_Py_Dealloc@plt>
    4698:	ldr	x0, [x19, #216]
    469c:	bl	2630 <PyThread_free_lock@plt>
    46a0:	str	xzr, [x19, #216]
    46a4:	mov	w0, #0xffffffff            	// #-1
    46a8:	ldp	x20, x19, [sp, #160]
    46ac:	ldp	x22, x21, [sp, #144]
    46b0:	ldp	x24, x23, [sp, #128]
    46b4:	ldp	x29, x30, [sp, #112]
    46b8:	add	sp, sp, #0xb0
    46bc:	ret
    46c0:	sub	sp, sp, #0xd0
    46c4:	stp	x29, x30, [sp, #112]
    46c8:	str	x27, [sp, #128]
    46cc:	stp	x26, x25, [sp, #144]
    46d0:	stp	x24, x23, [sp, #160]
    46d4:	stp	x22, x21, [sp, #176]
    46d8:	stp	x20, x19, [sp, #192]
    46dc:	add	x29, sp, #0x70
    46e0:	mov	x21, x2
    46e4:	mov	x20, x1
    46e8:	mov	x19, x0
    46ec:	cbz	x3, 46f8 <PyInit__lzma@@Base+0x1fd4>
    46f0:	ldr	x22, [x3, #16]
    46f4:	b	46fc <PyInit__lzma@@Base+0x1fd8>
    46f8:	mov	x22, xzr
    46fc:	movi	v0.2d, #0x0
    4700:	stp	q0, q0, [sp, #64]
    4704:	stp	q0, q0, [sp, #32]
    4708:	str	q0, [sp, #16]
    470c:	cbz	x20, 4720 <PyInit__lzma@@Base+0x1ffc>
    4710:	sub	x8, x21, #0x1
    4714:	cmp	x8, #0x1
    4718:	b.hi	4720 <PyInit__lzma@@Base+0x1ffc>  // b.pmore
    471c:	cbz	x3, 4754 <PyInit__lzma@@Base+0x2030>
    4720:	adrp	x4, 17000 <PyInit__lzma@@Base+0x148dc>
    4724:	sub	x8, x29, #0x10
    4728:	add	x4, x4, #0x440
    472c:	mov	w5, #0x1                   	// #1
    4730:	mov	w6, #0x2                   	// #2
    4734:	mov	x0, x20
    4738:	mov	x1, x21
    473c:	mov	x2, xzr
    4740:	mov	w7, wzr
    4744:	str	x8, [sp]
    4748:	bl	2340 <_PyArg_UnpackKeywords@plt>
    474c:	mov	x20, x0
    4750:	cbz	x0, 4768 <PyInit__lzma@@Base+0x2044>
    4754:	ldr	x0, [x20]
    4758:	add	x1, sp, #0x10
    475c:	mov	w2, wzr
    4760:	bl	2560 <PyObject_GetBuffer@plt>
    4764:	cbz	w0, 47a0 <PyInit__lzma@@Base+0x207c>
    4768:	mov	x21, xzr
    476c:	ldr	x8, [sp, #24]
    4770:	cbz	x8, 477c <PyInit__lzma@@Base+0x2058>
    4774:	add	x0, sp, #0x10
    4778:	bl	2290 <PyBuffer_Release@plt>
    477c:	mov	x0, x21
    4780:	ldp	x20, x19, [sp, #192]
    4784:	ldp	x22, x21, [sp, #176]
    4788:	ldp	x24, x23, [sp, #160]
    478c:	ldp	x26, x25, [sp, #144]
    4790:	ldr	x27, [sp, #128]
    4794:	ldp	x29, x30, [sp, #112]
    4798:	add	sp, sp, #0xd0
    479c:	ret
    47a0:	add	x0, sp, #0x10
    47a4:	mov	w1, #0x43                  	// #67
    47a8:	bl	22d0 <PyBuffer_IsContiguous@plt>
    47ac:	cbz	w0, 4818 <PyInit__lzma@@Base+0x20f4>
    47b0:	add	x8, x22, x21
    47b4:	cmp	x8, #0x1
    47b8:	b.ne	4840 <PyInit__lzma@@Base+0x211c>  // b.any
    47bc:	mov	x21, #0xffffffffffffffff    	// #-1
    47c0:	ldr	x0, [x19, #216]
    47c4:	mov	w1, wzr
    47c8:	bl	2320 <PyThread_acquire_lock@plt>
    47cc:	cbnz	w0, 47f0 <PyInit__lzma@@Base+0x20cc>
    47d0:	bl	2580 <PyEval_SaveThread@plt>
    47d4:	ldr	x8, [x19, #216]
    47d8:	mov	x20, x0
    47dc:	mov	w1, #0x1                   	// #1
    47e0:	mov	x0, x8
    47e4:	bl	2320 <PyThread_acquire_lock@plt>
    47e8:	mov	x0, x20
    47ec:	bl	2260 <PyEval_RestoreThread@plt>
    47f0:	ldrb	w8, [x19, #180]
    47f4:	cbz	w8, 4888 <PyInit__lzma@@Base+0x2164>
    47f8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    47fc:	ldr	x8, [x8, #4048]
    4800:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4804:	add	x1, x1, #0x3f2
    4808:	ldr	x0, [x8]
    480c:	bl	2350 <PyErr_SetString@plt>
    4810:	mov	x21, xzr
    4814:	b	4c60 <PyInit__lzma@@Base+0x253c>
    4818:	ldr	x3, [x20]
    481c:	adrp	x0, 6000 <PyInit__lzma@@Base+0x38dc>
    4820:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4824:	adrp	x2, 6000 <PyInit__lzma@@Base+0x38dc>
    4828:	add	x0, x0, #0x3cc
    482c:	add	x1, x1, #0x3e2
    4830:	add	x2, x2, #0x1f6
    4834:	bl	2400 <_PyArg_BadArgument@plt>
    4838:	mov	x21, xzr
    483c:	b	476c <PyInit__lzma@@Base+0x2048>
    4840:	ldr	x8, [x20, #8]
    4844:	ldr	x0, [x8, #8]
    4848:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    484c:	ldr	x8, [x8, #3984]
    4850:	cmp	x0, x8
    4854:	b.eq	4868 <PyInit__lzma@@Base+0x2144>  // b.none
    4858:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    485c:	ldr	x1, [x1, #3984]
    4860:	bl	25a0 <PyType_IsSubtype@plt>
    4864:	cbz	w0, 48e4 <PyInit__lzma@@Base+0x21c0>
    4868:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    486c:	ldr	x8, [x8, #4016]
    4870:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    4874:	add	x1, x1, #0xf0b
    4878:	ldr	x0, [x8]
    487c:	bl	2350 <PyErr_SetString@plt>
    4880:	mov	x21, xzr
    4884:	b	476c <PyInit__lzma@@Base+0x2048>
    4888:	mov	x20, x19
    488c:	ldr	x23, [sp, #16]
    4890:	ldr	x22, [sp, #32]
    4894:	ldr	x24, [x20, #40]!
    4898:	cbz	x24, 4928 <PyInit__lzma@@Base+0x2204>
    489c:	ldp	x25, x8, [x19, #200]
    48a0:	ldr	x2, [x19, #48]
    48a4:	add	x9, x25, x8
    48a8:	add	x10, x24, x2
    48ac:	sub	x11, x8, x2
    48b0:	cmp	x11, x22
    48b4:	sub	x9, x9, x10
    48b8:	b.cs	4930 <PyInit__lzma@@Base+0x220c>  // b.hs, b.nlast
    48bc:	add	x8, x8, x22
    48c0:	sub	x26, x8, x9
    48c4:	mov	x0, x25
    48c8:	mov	x1, x26
    48cc:	bl	2380 <PyMem_Realloc@plt>
    48d0:	cbz	x0, 4b8c <PyInit__lzma@@Base+0x2468>
    48d4:	sub	x8, x24, x25
    48d8:	stp	x0, x26, [x19, #200]
    48dc:	add	x24, x0, x8
    48e0:	b	4948 <PyInit__lzma@@Base+0x2224>
    48e4:	ldr	x0, [x20, #8]
    48e8:	bl	25f0 <PyNumber_Index@plt>
    48ec:	cbz	x0, 491c <PyInit__lzma@@Base+0x21f8>
    48f0:	mov	x20, x0
    48f4:	bl	23f0 <PyLong_AsSsize_t@plt>
    48f8:	ldr	x8, [x20]
    48fc:	mov	x21, x0
    4900:	subs	x8, x8, #0x1
    4904:	str	x8, [x20]
    4908:	b.ne	4914 <PyInit__lzma@@Base+0x21f0>  // b.any
    490c:	mov	x0, x20
    4910:	bl	22f0 <_Py_Dealloc@plt>
    4914:	cmn	x21, #0x1
    4918:	b.ne	47c0 <PyInit__lzma@@Base+0x209c>  // b.any
    491c:	bl	2480 <PyErr_Occurred@plt>
    4920:	cbnz	x0, 4768 <PyInit__lzma@@Base+0x2044>
    4924:	b	47bc <PyInit__lzma@@Base+0x2098>
    4928:	stp	x23, x22, [x19, #40]
    492c:	b	4970 <PyInit__lzma@@Base+0x224c>
    4930:	cmp	x9, x22
    4934:	b.cs	494c <PyInit__lzma@@Base+0x2228>  // b.hs, b.nlast
    4938:	mov	x0, x25
    493c:	mov	x1, x24
    4940:	bl	2210 <memmove@plt>
    4944:	ldr	x24, [x19, #200]
    4948:	str	x24, [x19, #40]
    494c:	ldr	x8, [x19, #48]
    4950:	mov	x1, x23
    4954:	mov	x2, x22
    4958:	add	x0, x24, x8
    495c:	bl	2200 <memcpy@plt>
    4960:	ldr	x8, [x19, #48]
    4964:	mov	w24, #0x1                   	// #1
    4968:	add	x8, x8, x22
    496c:	str	x8, [x19, #48]
    4970:	cmp	x21, #0x2, lsl #12
    4974:	mov	w8, #0x2000                	// #8192
    4978:	csel	x1, x21, x8, cc  // cc = lo, ul, last
    497c:	mov	x0, xzr
    4980:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    4984:	str	x0, [x29, #24]
    4988:	cbz	x0, 4c58 <PyInit__lzma@@Base+0x2534>
    498c:	add	x8, x0, #0x20
    4990:	str	x8, [x19, #64]
    4994:	ldr	x8, [x0, #16]
    4998:	cmp	x21, #0x0
    499c:	mov	w25, #0xa                   	// #10
    49a0:	str	x8, [x19, #72]
    49a4:	b.gt	49c8 <PyInit__lzma@@Base+0x22a4>
    49a8:	b	4aa4 <PyInit__lzma@@Base+0x2380>
    49ac:	mov	x0, x20
    49b0:	bl	24e0 <lzma_get_check@plt>
    49b4:	str	w0, [x19, #176]
    49b8:	ldr	x8, [x19, #72]
    49bc:	cbz	x8, 4a4c <PyInit__lzma@@Base+0x2328>
    49c0:	ldr	x8, [x19, #48]
    49c4:	cbz	x8, 4ba8 <PyInit__lzma@@Base+0x2484>
    49c8:	bl	2580 <PyEval_SaveThread@plt>
    49cc:	mov	x22, x0
    49d0:	mov	x0, x20
    49d4:	mov	w1, wzr
    49d8:	bl	2250 <lzma_code@plt>
    49dc:	ldr	x26, [x19, #64]
    49e0:	ldr	x27, [x29, #24]
    49e4:	cmp	w0, #0xa
    49e8:	b.ne	49fc <PyInit__lzma@@Base+0x22d8>  // b.any
    49ec:	ldr	x8, [x19, #48]
    49f0:	cbz	x8, 4a04 <PyInit__lzma@@Base+0x22e0>
    49f4:	mov	w23, #0xa                   	// #10
    49f8:	b	4a10 <PyInit__lzma@@Base+0x22ec>
    49fc:	mov	w23, w0
    4a00:	b	4a10 <PyInit__lzma@@Base+0x22ec>
    4a04:	ldr	x8, [x19, #72]
    4a08:	cmp	x8, #0x0
    4a0c:	csel	w23, w25, wzr, eq  // eq = none
    4a10:	mov	x0, x22
    4a14:	bl	2260 <PyEval_RestoreThread@plt>
    4a18:	mov	w0, w23
    4a1c:	bl	369c <PyInit__lzma@@Base+0xf78>
    4a20:	cbnz	w0, 4c3c <PyInit__lzma@@Base+0x2518>
    4a24:	sub	x8, x26, x27
    4a28:	cmp	w23, #0x2
    4a2c:	sub	x22, x8, #0x20
    4a30:	b.eq	49ac <PyInit__lzma@@Base+0x2288>  // b.none
    4a34:	cmp	w23, #0x4
    4a38:	b.eq	49ac <PyInit__lzma@@Base+0x2288>  // b.none
    4a3c:	cmp	w23, #0x1
    4a40:	b.eq	4b80 <PyInit__lzma@@Base+0x245c>  // b.none
    4a44:	ldr	x8, [x19, #72]
    4a48:	cbnz	x8, 49c0 <PyInit__lzma@@Base+0x229c>
    4a4c:	cmp	x22, x21
    4a50:	b.eq	4ba4 <PyInit__lzma@@Base+0x2480>  // b.none
    4a54:	ldr	x8, [x29, #24]
    4a58:	add	x0, x29, #0x18
    4a5c:	ldr	x8, [x8, #16]
    4a60:	add	x8, x8, x8, asr #3
    4a64:	add	x8, x8, #0x6
    4a68:	cmp	x8, x21
    4a6c:	csel	x1, x21, x8, gt
    4a70:	bl	2240 <_PyBytes_Resize@plt>
    4a74:	cmn	w0, #0x1
    4a78:	b.eq	4c3c <PyInit__lzma@@Base+0x2518>  // b.none
    4a7c:	ldr	x8, [x29, #24]
    4a80:	add	x9, x8, x22
    4a84:	add	x9, x9, #0x20
    4a88:	str	x9, [x19, #64]
    4a8c:	ldr	x8, [x8, #16]
    4a90:	sub	x8, x8, x22
    4a94:	str	x8, [x19, #72]
    4a98:	b	49c8 <PyInit__lzma@@Base+0x22a4>
    4a9c:	ldr	x8, [x19, #48]
    4aa0:	cbz	x8, 4ba8 <PyInit__lzma@@Base+0x2484>
    4aa4:	bl	2580 <PyEval_SaveThread@plt>
    4aa8:	mov	x22, x0
    4aac:	mov	x0, x20
    4ab0:	mov	w1, wzr
    4ab4:	bl	2250 <lzma_code@plt>
    4ab8:	ldr	x26, [x19, #64]
    4abc:	ldr	x27, [x29, #24]
    4ac0:	cmp	w0, #0xa
    4ac4:	b.ne	4ad8 <PyInit__lzma@@Base+0x23b4>  // b.any
    4ac8:	ldr	x8, [x19, #48]
    4acc:	cbz	x8, 4ae0 <PyInit__lzma@@Base+0x23bc>
    4ad0:	mov	w23, #0xa                   	// #10
    4ad4:	b	4aec <PyInit__lzma@@Base+0x23c8>
    4ad8:	mov	w23, w0
    4adc:	b	4aec <PyInit__lzma@@Base+0x23c8>
    4ae0:	ldr	x8, [x19, #72]
    4ae4:	cmp	x8, #0x0
    4ae8:	csel	w23, w25, wzr, eq  // eq = none
    4aec:	mov	x0, x22
    4af0:	bl	2260 <PyEval_RestoreThread@plt>
    4af4:	mov	w0, w23
    4af8:	bl	369c <PyInit__lzma@@Base+0xf78>
    4afc:	cbnz	w0, 4c3c <PyInit__lzma@@Base+0x2518>
    4b00:	sub	x8, x26, x27
    4b04:	cmp	w23, #0x2
    4b08:	sub	x22, x8, #0x20
    4b0c:	b.eq	4b24 <PyInit__lzma@@Base+0x2400>  // b.none
    4b10:	cmp	w23, #0x4
    4b14:	b.eq	4b24 <PyInit__lzma@@Base+0x2400>  // b.none
    4b18:	cmp	w23, #0x1
    4b1c:	b.ne	4b30 <PyInit__lzma@@Base+0x240c>  // b.any
    4b20:	b	4b80 <PyInit__lzma@@Base+0x245c>
    4b24:	mov	x0, x20
    4b28:	bl	24e0 <lzma_get_check@plt>
    4b2c:	str	w0, [x19, #176]
    4b30:	ldr	x8, [x19, #72]
    4b34:	cbnz	x8, 4a9c <PyInit__lzma@@Base+0x2378>
    4b38:	cmp	x22, x21
    4b3c:	b.eq	4ba4 <PyInit__lzma@@Base+0x2480>  // b.none
    4b40:	ldr	x8, [x29, #24]
    4b44:	add	x0, x29, #0x18
    4b48:	ldr	x8, [x8, #16]
    4b4c:	add	x8, x8, x8, asr #3
    4b50:	add	x1, x8, #0x6
    4b54:	bl	2240 <_PyBytes_Resize@plt>
    4b58:	cmn	w0, #0x1
    4b5c:	b.eq	4c3c <PyInit__lzma@@Base+0x2518>  // b.none
    4b60:	ldr	x8, [x29, #24]
    4b64:	add	x9, x8, x22
    4b68:	add	x9, x9, #0x20
    4b6c:	str	x9, [x19, #64]
    4b70:	ldr	x8, [x8, #16]
    4b74:	sub	x8, x8, x22
    4b78:	str	x8, [x19, #72]
    4b7c:	b	4aa4 <PyInit__lzma@@Base+0x2380>
    4b80:	mov	w8, #0x1                   	// #1
    4b84:	strb	w8, [x19, #180]
    4b88:	b	4ba8 <PyInit__lzma@@Base+0x2484>
    4b8c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4b90:	ldr	x8, [x8, #4000]
    4b94:	ldr	x0, [x8]
    4b98:	bl	2390 <PyErr_SetNone@plt>
    4b9c:	mov	x21, xzr
    4ba0:	b	4c60 <PyInit__lzma@@Base+0x253c>
    4ba4:	mov	x22, x21
    4ba8:	ldr	x21, [x29, #24]
    4bac:	ldr	x8, [x21, #16]
    4bb0:	cmp	x22, x8
    4bb4:	b.eq	4bd0 <PyInit__lzma@@Base+0x24ac>  // b.none
    4bb8:	add	x0, x29, #0x18
    4bbc:	mov	x1, x22
    4bc0:	bl	2240 <_PyBytes_Resize@plt>
    4bc4:	cmn	w0, #0x1
    4bc8:	b.eq	4c3c <PyInit__lzma@@Base+0x2518>  // b.none
    4bcc:	ldr	x21, [x29, #24]
    4bd0:	cbz	x21, 4c58 <PyInit__lzma@@Base+0x2534>
    4bd4:	ldrb	w8, [x19, #180]
    4bd8:	cbz	w8, 4c6c <PyInit__lzma@@Base+0x2548>
    4bdc:	ldr	x1, [x19, #48]
    4be0:	strb	wzr, [x19, #192]
    4be4:	cbz	x1, 4c60 <PyInit__lzma@@Base+0x253c>
    4be8:	ldr	x0, [x19, #40]
    4bec:	ldr	x20, [x19, #184]
    4bf0:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    4bf4:	str	x0, [x19, #184]
    4bf8:	cbz	x20, 4c18 <PyInit__lzma@@Base+0x24f4>
    4bfc:	ldr	x8, [x20]
    4c00:	subs	x8, x8, #0x1
    4c04:	str	x8, [x20]
    4c08:	b.ne	4c18 <PyInit__lzma@@Base+0x24f4>  // b.any
    4c0c:	mov	x0, x20
    4c10:	bl	22f0 <_Py_Dealloc@plt>
    4c14:	ldr	x0, [x19, #184]
    4c18:	cbnz	x0, 4c60 <PyInit__lzma@@Base+0x253c>
    4c1c:	ldr	x8, [x21]
    4c20:	subs	x8, x8, #0x1
    4c24:	str	x8, [x21]
    4c28:	b.ne	4c34 <PyInit__lzma@@Base+0x2510>  // b.any
    4c2c:	mov	x0, x21
    4c30:	bl	22f0 <_Py_Dealloc@plt>
    4c34:	mov	x21, xzr
    4c38:	b	4c60 <PyInit__lzma@@Base+0x253c>
    4c3c:	ldr	x0, [x29, #24]
    4c40:	cbz	x0, 4c58 <PyInit__lzma@@Base+0x2534>
    4c44:	ldr	x8, [x0]
    4c48:	subs	x8, x8, #0x1
    4c4c:	str	x8, [x0]
    4c50:	b.ne	4c58 <PyInit__lzma@@Base+0x2534>  // b.any
    4c54:	bl	22f0 <_Py_Dealloc@plt>
    4c58:	mov	x21, xzr
    4c5c:	str	xzr, [x20]
    4c60:	ldr	x0, [x19, #216]
    4c64:	bl	2520 <PyThread_release_lock@plt>
    4c68:	b	476c <PyInit__lzma@@Base+0x2048>
    4c6c:	ldr	x2, [x19, #48]
    4c70:	cbz	x2, 4cc8 <PyInit__lzma@@Base+0x25a4>
    4c74:	strb	wzr, [x19, #192]
    4c78:	cbnz	w24, 4c60 <PyInit__lzma@@Base+0x253c>
    4c7c:	ldr	x0, [x19, #200]
    4c80:	cbz	x0, 4c9c <PyInit__lzma@@Base+0x2578>
    4c84:	ldr	x8, [x19, #208]
    4c88:	cmp	x8, x2
    4c8c:	b.cs	4cb4 <PyInit__lzma@@Base+0x2590>  // b.hs, b.nlast
    4c90:	bl	2270 <PyMem_Free@plt>
    4c94:	ldr	x2, [x19, #48]
    4c98:	str	xzr, [x19, #200]
    4c9c:	mov	x0, x2
    4ca0:	bl	2620 <PyMem_Malloc@plt>
    4ca4:	str	x0, [x19, #200]
    4ca8:	cbz	x0, 4ce8 <PyInit__lzma@@Base+0x25c4>
    4cac:	ldr	x2, [x19, #48]
    4cb0:	str	x2, [x19, #208]
    4cb4:	ldr	x1, [x19, #40]
    4cb8:	bl	2200 <memcpy@plt>
    4cbc:	ldr	x8, [x19, #200]
    4cc0:	str	x8, [x19, #40]
    4cc4:	b	4c60 <PyInit__lzma@@Base+0x253c>
    4cc8:	ldr	x8, [x19, #72]
    4ccc:	str	xzr, [x19, #40]
    4cd0:	cbz	x8, 4ce0 <PyInit__lzma@@Base+0x25bc>
    4cd4:	mov	w8, #0x1                   	// #1
    4cd8:	strb	w8, [x19, #192]
    4cdc:	b	4c60 <PyInit__lzma@@Base+0x253c>
    4ce0:	strb	wzr, [x19, #192]
    4ce4:	b	4c60 <PyInit__lzma@@Base+0x253c>
    4ce8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4cec:	ldr	x8, [x8, #4000]
    4cf0:	ldr	x0, [x8]
    4cf4:	bl	2390 <PyErr_SetNone@plt>
    4cf8:	ldr	x8, [x21]
    4cfc:	subs	x8, x8, #0x1
    4d00:	str	x8, [x21]
    4d04:	b.ne	4c34 <PyInit__lzma@@Base+0x2510>  // b.any
    4d08:	b	4c2c <PyInit__lzma@@Base+0x2508>

Disassembly of section .fini:

0000000000004d0c <.fini>:
    4d0c:	stp	x29, x30, [sp, #-16]!
    4d10:	mov	x29, sp
    4d14:	ldp	x29, x30, [sp], #16
    4d18:	ret
