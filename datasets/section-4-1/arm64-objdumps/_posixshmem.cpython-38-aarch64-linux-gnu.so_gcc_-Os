
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_posixshmem.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000c38 <.init>:
 c38:	stp	x29, x30, [sp, #-16]!
 c3c:	mov	x29, sp
 c40:	bl	da0 <_PyLong_AsInt@plt+0x10>
 c44:	ldp	x29, x30, [sp], #16
 c48:	ret

Disassembly of section .plt:

0000000000000c50 <_PyUnicode_Ready@plt-0x20>:
 c50:	stp	x16, x30, [sp, #-16]!
 c54:	adrp	x16, 11000 <PyInit__posixshmem@@Base+0xfe48>
 c58:	ldr	x17, [x16, #4088]
 c5c:	add	x16, x16, #0xff8
 c60:	br	x17
 c64:	nop
 c68:	nop
 c6c:	nop

0000000000000c70 <_PyUnicode_Ready@plt>:
 c70:	adrp	x16, 12000 <_PyUnicode_Ready>
 c74:	ldr	x17, [x16]
 c78:	add	x16, x16, #0x0
 c7c:	br	x17

0000000000000c80 <PyEval_RestoreThread@plt>:
 c80:	adrp	x16, 12000 <_PyUnicode_Ready>
 c84:	ldr	x17, [x16, #8]
 c88:	add	x16, x16, #0x8
 c8c:	br	x17

0000000000000c90 <__cxa_finalize@plt>:
 c90:	adrp	x16, 12000 <_PyUnicode_Ready>
 c94:	ldr	x17, [x16, #16]
 c98:	add	x16, x16, #0x10
 c9c:	br	x17

0000000000000ca0 <_PyArg_UnpackKeywords@plt>:
 ca0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ca4:	ldr	x17, [x16, #24]
 ca8:	add	x16, x16, #0x18
 cac:	br	x17

0000000000000cb0 <PyErr_SetString@plt>:
 cb0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cb4:	ldr	x17, [x16, #32]
 cb8:	add	x16, x16, #0x20
 cbc:	br	x17

0000000000000cc0 <PyLong_FromLong@plt>:
 cc0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cc4:	ldr	x17, [x16, #40]
 cc8:	add	x16, x16, #0x28
 ccc:	br	x17

0000000000000cd0 <_PyArg_BadArgument@plt>:
 cd0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cd4:	ldr	x17, [x16, #48]
 cd8:	add	x16, x16, #0x30
 cdc:	br	x17

0000000000000ce0 <__gmon_start__@plt>:
 ce0:	adrp	x16, 12000 <_PyUnicode_Ready>
 ce4:	ldr	x17, [x16, #56]
 ce8:	add	x16, x16, #0x38
 cec:	br	x17

0000000000000cf0 <PyErr_Occurred@plt>:
 cf0:	adrp	x16, 12000 <_PyUnicode_Ready>
 cf4:	ldr	x17, [x16, #64]
 cf8:	add	x16, x16, #0x40
 cfc:	br	x17

0000000000000d00 <PyModule_Create2@plt>:
 d00:	adrp	x16, 12000 <_PyUnicode_Ready>
 d04:	ldr	x17, [x16, #72]
 d08:	add	x16, x16, #0x48
 d0c:	br	x17

0000000000000d10 <PyErr_SetFromErrnoWithFilenameObject@plt>:
 d10:	adrp	x16, 12000 <_PyUnicode_Ready>
 d14:	ldr	x17, [x16, #80]
 d18:	add	x16, x16, #0x50
 d1c:	br	x17

0000000000000d20 <shm_open@plt>:
 d20:	adrp	x16, 12000 <_PyUnicode_Ready>
 d24:	ldr	x17, [x16, #88]
 d28:	add	x16, x16, #0x58
 d2c:	br	x17

0000000000000d30 <PyUnicode_AsUTF8@plt>:
 d30:	adrp	x16, 12000 <_PyUnicode_Ready>
 d34:	ldr	x17, [x16, #96]
 d38:	add	x16, x16, #0x60
 d3c:	br	x17

0000000000000d40 <shm_unlink@plt>:
 d40:	adrp	x16, 12000 <_PyUnicode_Ready>
 d44:	ldr	x17, [x16, #104]
 d48:	add	x16, x16, #0x68
 d4c:	br	x17

0000000000000d50 <PyEval_SaveThread@plt>:
 d50:	adrp	x16, 12000 <_PyUnicode_Ready>
 d54:	ldr	x17, [x16, #112]
 d58:	add	x16, x16, #0x70
 d5c:	br	x17

0000000000000d60 <PyErr_CheckSignals@plt>:
 d60:	adrp	x16, 12000 <_PyUnicode_Ready>
 d64:	ldr	x17, [x16, #120]
 d68:	add	x16, x16, #0x78
 d6c:	br	x17

0000000000000d70 <PyType_IsSubtype@plt>:
 d70:	adrp	x16, 12000 <_PyUnicode_Ready>
 d74:	ldr	x17, [x16, #128]
 d78:	add	x16, x16, #0x80
 d7c:	br	x17

0000000000000d80 <__errno_location@plt>:
 d80:	adrp	x16, 12000 <_PyUnicode_Ready>
 d84:	ldr	x17, [x16, #136]
 d88:	add	x16, x16, #0x88
 d8c:	br	x17

0000000000000d90 <_PyLong_AsInt@plt>:
 d90:	adrp	x16, 12000 <_PyUnicode_Ready>
 d94:	ldr	x17, [x16, #144]
 d98:	add	x16, x16, #0x90
 d9c:	br	x17

Disassembly of section .text:

0000000000000da0 <PyInit__posixshmem@@Base-0x418>:
     da0:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfe48>
     da4:	ldr	x0, [x0, #4048]
     da8:	cbz	x0, db0 <_PyLong_AsInt@plt+0x20>
     dac:	b	ce0 <__gmon_start__@plt>
     db0:	ret
     db4:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10e48>
     db8:	add	x0, x0, #0x1e8
     dbc:	adrp	x1, 12000 <PyInit__posixshmem@@Base+0x10e48>
     dc0:	add	x1, x1, #0x1e8
     dc4:	cmp	x1, x0
     dc8:	b.eq	de0 <_PyLong_AsInt@plt+0x50>  // b.none
     dcc:	adrp	x1, 11000 <PyInit__posixshmem@@Base+0xfe48>
     dd0:	ldr	x1, [x1, #4008]
     dd4:	cbz	x1, de0 <_PyLong_AsInt@plt+0x50>
     dd8:	mov	x16, x1
     ddc:	br	x16
     de0:	ret
     de4:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10e48>
     de8:	add	x0, x0, #0x1e8
     dec:	adrp	x1, 12000 <PyInit__posixshmem@@Base+0x10e48>
     df0:	add	x1, x1, #0x1e8
     df4:	sub	x1, x1, x0
     df8:	mov	x2, #0x2                   	// #2
     dfc:	asr	x1, x1, #3
     e00:	sdiv	x1, x1, x2
     e04:	cbz	x1, e1c <_PyLong_AsInt@plt+0x8c>
     e08:	adrp	x2, 11000 <PyInit__posixshmem@@Base+0xfe48>
     e0c:	ldr	x2, [x2, #4064]
     e10:	cbz	x2, e1c <_PyLong_AsInt@plt+0x8c>
     e14:	mov	x16, x2
     e18:	br	x16
     e1c:	ret
     e20:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10e48>
     e24:	ldrb	w1, [x0, #488]
     e28:	cbnz	w1, e6c <_PyLong_AsInt@plt+0xdc>
     e2c:	stp	x29, x30, [sp, #-32]!
     e30:	mov	x29, sp
     e34:	str	x19, [sp, #16]
     e38:	mov	x19, x0
     e3c:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfe48>
     e40:	ldr	x0, [x0, #4024]
     e44:	cbz	x0, e54 <_PyLong_AsInt@plt+0xc4>
     e48:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10e48>
     e4c:	ldr	x0, [x0, #152]
     e50:	bl	c90 <__cxa_finalize@plt>
     e54:	bl	db4 <_PyLong_AsInt@plt+0x24>
     e58:	mov	w0, #0x1                   	// #1
     e5c:	strb	w0, [x19, #488]
     e60:	ldr	x19, [sp, #16]
     e64:	ldp	x29, x30, [sp], #32
     e68:	ret
     e6c:	ret
     e70:	b	de4 <_PyLong_AsInt@plt+0x54>
     e74:	sub	sp, sp, #0x50
     e78:	cmp	x3, #0x0
     e7c:	ccmp	x2, #0x1, #0x0, eq  // eq = none
     e80:	stp	x29, x30, [sp, #16]
     e84:	add	x29, sp, #0x10
     e88:	stp	x19, x20, [sp, #32]
     e8c:	mov	x19, x1
     e90:	mov	x1, x2
     e94:	stp	x21, x22, [sp, #48]
     e98:	b.ne	ea0 <_PyLong_AsInt@plt+0x110>  // b.any
     e9c:	cbnz	x19, ed0 <_PyLong_AsInt@plt+0x140>
     ea0:	add	x0, sp, #0x48
     ea4:	str	x0, [sp]
     ea8:	mov	w6, #0x1                   	// #1
     eac:	mov	x0, x19
     eb0:	mov	w5, w6
     eb4:	mov	w7, #0x0                   	// #0
     eb8:	adrp	x4, 12000 <PyInit__posixshmem@@Base+0x10e48>
     ebc:	mov	x2, #0x0                   	// #0
     ec0:	add	x4, x4, #0xa0
     ec4:	bl	ca0 <_PyArg_UnpackKeywords@plt>
     ec8:	mov	x19, x0
     ecc:	cbz	x0, f00 <_PyLong_AsInt@plt+0x170>
     ed0:	ldr	x0, [x19]
     ed4:	ldr	x1, [x0, #8]
     ed8:	ldr	x1, [x1, #168]
     edc:	tbnz	w1, #28, f18 <_PyLong_AsInt@plt+0x188>
     ee0:	mov	x3, x0
     ee4:	adrp	x2, 1000 <_PyLong_AsInt@plt+0x270>
     ee8:	adrp	x1, 1000 <_PyLong_AsInt@plt+0x270>
     eec:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
     ef0:	add	x2, x2, #0x1ec
     ef4:	add	x1, x1, #0x1f0
     ef8:	add	x0, x0, #0x200
     efc:	bl	cd0 <_PyArg_BadArgument@plt>
     f00:	mov	x0, #0x0                   	// #0
     f04:	ldp	x29, x30, [sp, #16]
     f08:	ldp	x19, x20, [sp, #32]
     f0c:	ldp	x21, x22, [sp, #48]
     f10:	add	sp, sp, #0x50
     f14:	ret
     f18:	ldrsb	w1, [x0, #32]
     f1c:	tbz	w1, #31, f70 <_PyLong_AsInt@plt+0x1e0>
     f20:	ldr	x22, [x19]
     f24:	mov	x0, x22
     f28:	bl	d30 <PyUnicode_AsUTF8@plt>
     f2c:	mov	x19, x0
     f30:	cbz	x0, f00 <_PyLong_AsInt@plt+0x170>
     f34:	bl	d50 <PyEval_SaveThread@plt>
     f38:	mov	x21, x0
     f3c:	mov	x0, x19
     f40:	bl	d40 <shm_unlink@plt>
     f44:	mov	w20, w0
     f48:	mov	x0, x21
     f4c:	bl	c80 <PyEval_RestoreThread@plt>
     f50:	tbz	w20, #31, f98 <_PyLong_AsInt@plt+0x208>
     f54:	bl	d80 <__errno_location@plt>
     f58:	ldr	w0, [x0]
     f5c:	cmp	w0, #0x4
     f60:	b.ne	f80 <_PyLong_AsInt@plt+0x1f0>  // b.any
     f64:	bl	d60 <PyErr_CheckSignals@plt>
     f68:	cbz	w0, f34 <_PyLong_AsInt@plt+0x1a4>
     f6c:	b	f00 <_PyLong_AsInt@plt+0x170>
     f70:	bl	c70 <_PyUnicode_Ready@plt>
     f74:	cmn	w0, #0x1
     f78:	b.ne	f20 <_PyLong_AsInt@plt+0x190>  // b.any
     f7c:	b	f00 <_PyLong_AsInt@plt+0x170>
     f80:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfe48>
     f84:	mov	x1, x22
     f88:	ldr	x0, [x0, #4040]
     f8c:	ldr	x0, [x0]
     f90:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
     f94:	b	f00 <_PyLong_AsInt@plt+0x170>
     f98:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfe48>
     f9c:	ldr	x0, [x0, #4056]
     fa0:	ldr	x1, [x0]
     fa4:	add	x1, x1, #0x1
     fa8:	str	x1, [x0]
     fac:	b	f04 <_PyLong_AsInt@plt+0x174>
     fb0:	sub	sp, sp, #0x70
     fb4:	stp	x29, x30, [sp, #16]
     fb8:	add	x29, sp, #0x10
     fbc:	stp	x19, x20, [sp, #32]
     fc0:	mov	x19, x1
     fc4:	stp	x21, x22, [sp, #48]
     fc8:	mov	x21, x2
     fcc:	stp	x23, x24, [sp, #64]
     fd0:	cbz	x3, 102c <_PyLong_AsInt@plt+0x29c>
     fd4:	ldr	x20, [x3, #16]
     fd8:	add	x0, sp, #0x58
     fdc:	str	x0, [sp]
     fe0:	adrp	x4, 12000 <PyInit__posixshmem@@Base+0x10e48>
     fe4:	add	x4, x4, #0xa0
     fe8:	mov	x0, x19
     fec:	add	x4, x4, #0x40
     ff0:	mov	x1, x21
     ff4:	mov	w7, #0x0                   	// #0
     ff8:	mov	w6, #0x3                   	// #3
     ffc:	mov	w5, #0x2                   	// #2
    1000:	mov	x2, #0x0                   	// #0
    1004:	bl	ca0 <_PyArg_UnpackKeywords@plt>
    1008:	mov	x19, x0
    100c:	cbnz	x0, 1040 <_PyLong_AsInt@plt+0x2b0>
    1010:	mov	x0, #0x0                   	// #0
    1014:	ldp	x29, x30, [sp, #16]
    1018:	ldp	x19, x20, [sp, #32]
    101c:	ldp	x21, x22, [sp, #48]
    1020:	ldp	x23, x24, [sp, #64]
    1024:	add	sp, sp, #0x70
    1028:	ret
    102c:	sub	x0, x2, #0x2
    1030:	mov	x20, #0x0                   	// #0
    1034:	cmp	x0, #0x1
    1038:	b.hi	fd8 <_PyLong_AsInt@plt+0x248>  // b.pmore
    103c:	cbz	x1, fd8 <_PyLong_AsInt@plt+0x248>
    1040:	ldr	x0, [x19]
    1044:	ldr	x1, [x0, #8]
    1048:	ldr	x1, [x1, #168]
    104c:	tbnz	w1, #28, 1074 <_PyLong_AsInt@plt+0x2e4>
    1050:	mov	x3, x0
    1054:	adrp	x2, 1000 <_PyLong_AsInt@plt+0x270>
    1058:	adrp	x1, 1000 <_PyLong_AsInt@plt+0x270>
    105c:	add	x2, x2, #0x1ec
    1060:	add	x1, x1, #0x1f0
    1064:	adrp	x0, 1000 <_PyLong_AsInt@plt+0x270>
    1068:	add	x0, x0, #0x20b
    106c:	bl	cd0 <_PyArg_BadArgument@plt>
    1070:	b	1010 <_PyLong_AsInt@plt+0x280>
    1074:	ldrsb	w1, [x0, #32]
    1078:	tbz	w1, #31, 10b4 <_PyLong_AsInt@plt+0x324>
    107c:	ldp	x23, x0, [x19]
    1080:	adrp	x2, 11000 <PyInit__posixshmem@@Base+0xfe48>
    1084:	mov	x24, x2
    1088:	ldr	x1, [x2, #4016]
    108c:	ldr	x0, [x0, #8]
    1090:	cmp	x0, x1
    1094:	b.ne	10c4 <_PyLong_AsInt@plt+0x334>  // b.any
    1098:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfe48>
    109c:	adrp	x1, 1000 <_PyLong_AsInt@plt+0x270>
    10a0:	add	x1, x1, #0x214
    10a4:	ldr	x0, [x0, #4032]
    10a8:	ldr	x0, [x0]
    10ac:	bl	cb0 <PyErr_SetString@plt>
    10b0:	b	1010 <_PyLong_AsInt@plt+0x280>
    10b4:	bl	c70 <_PyUnicode_Ready@plt>
    10b8:	cmn	w0, #0x1
    10bc:	b.ne	107c <_PyLong_AsInt@plt+0x2ec>  // b.any
    10c0:	b	1010 <_PyLong_AsInt@plt+0x280>
    10c4:	bl	d70 <PyType_IsSubtype@plt>
    10c8:	cbnz	w0, 1098 <_PyLong_AsInt@plt+0x308>
    10cc:	ldr	x0, [x19, #8]
    10d0:	bl	d90 <_PyLong_AsInt@plt>
    10d4:	mov	w22, w0
    10d8:	cmn	w0, #0x1
    10dc:	b.eq	10f4 <_PyLong_AsInt@plt+0x364>  // b.none
    10e0:	add	x20, x21, x20
    10e4:	cmp	x20, #0x2
    10e8:	b.ne	1100 <_PyLong_AsInt@plt+0x370>  // b.any
    10ec:	mov	w21, #0x1ff                 	// #511
    10f0:	b	1138 <_PyLong_AsInt@plt+0x3a8>
    10f4:	bl	cf0 <PyErr_Occurred@plt>
    10f8:	cbz	x0, 10e0 <_PyLong_AsInt@plt+0x350>
    10fc:	b	1010 <_PyLong_AsInt@plt+0x280>
    1100:	ldr	x0, [x19, #16]
    1104:	ldr	x1, [x24, #4016]
    1108:	ldr	x0, [x0, #8]
    110c:	cmp	x0, x1
    1110:	b.eq	1098 <_PyLong_AsInt@plt+0x308>  // b.none
    1114:	bl	d70 <PyType_IsSubtype@plt>
    1118:	cbnz	w0, 1098 <_PyLong_AsInt@plt+0x308>
    111c:	ldr	x0, [x19, #16]
    1120:	bl	d90 <_PyLong_AsInt@plt>
    1124:	mov	w21, w0
    1128:	cmn	w0, #0x1
    112c:	b.ne	1138 <_PyLong_AsInt@plt+0x3a8>  // b.any
    1130:	bl	cf0 <PyErr_Occurred@plt>
    1134:	cbnz	x0, 1010 <_PyLong_AsInt@plt+0x280>
    1138:	mov	x0, x23
    113c:	bl	d30 <PyUnicode_AsUTF8@plt>
    1140:	mov	x24, x0
    1144:	cbz	x0, 1188 <_PyLong_AsInt@plt+0x3f8>
    1148:	bl	d50 <PyEval_SaveThread@plt>
    114c:	mov	x20, x0
    1150:	mov	w2, w21
    1154:	mov	w1, w22
    1158:	mov	x0, x24
    115c:	bl	d20 <shm_open@plt>
    1160:	mov	w19, w0
    1164:	mov	x0, x20
    1168:	bl	c80 <PyEval_RestoreThread@plt>
    116c:	tbz	w19, #31, 1194 <_PyLong_AsInt@plt+0x404>
    1170:	bl	d80 <__errno_location@plt>
    1174:	ldr	w0, [x0]
    1178:	cmp	w0, #0x4
    117c:	b.ne	11a0 <_PyLong_AsInt@plt+0x410>  // b.any
    1180:	bl	d60 <PyErr_CheckSignals@plt>
    1184:	cbz	w0, 1148 <_PyLong_AsInt@plt+0x3b8>
    1188:	bl	cf0 <PyErr_Occurred@plt>
    118c:	cbnz	x0, 1010 <_PyLong_AsInt@plt+0x280>
    1190:	mov	w19, #0xffffffff            	// #-1
    1194:	sxtw	x0, w19
    1198:	bl	cc0 <PyLong_FromLong@plt>
    119c:	b	1014 <_PyLong_AsInt@plt+0x284>
    11a0:	adrp	x0, 11000 <PyInit__posixshmem@@Base+0xfe48>
    11a4:	mov	x1, x23
    11a8:	ldr	x0, [x0, #4040]
    11ac:	ldr	x0, [x0]
    11b0:	bl	d10 <PyErr_SetFromErrnoWithFilenameObject@plt>
    11b4:	b	1188 <_PyLong_AsInt@plt+0x3f8>

00000000000011b8 <PyInit__posixshmem@@Base>:
    11b8:	stp	x29, x30, [sp, #-16]!
    11bc:	adrp	x0, 12000 <PyInit__posixshmem@@Base+0x10e48>
    11c0:	add	x0, x0, #0xa0
    11c4:	mov	x29, sp
    11c8:	mov	w1, #0x3f5                 	// #1013
    11cc:	add	x0, x0, #0x80
    11d0:	bl	d00 <PyModule_Create2@plt>
    11d4:	ldp	x29, x30, [sp], #16
    11d8:	ret

Disassembly of section .fini:

00000000000011dc <.fini>:
    11dc:	stp	x29, x30, [sp, #-16]!
    11e0:	mov	x29, sp
    11e4:	ldp	x29, x30, [sp], #16
    11e8:	ret
