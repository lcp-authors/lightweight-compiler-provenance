
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-growfs_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400e50 <_init>:
  400e50:	stp	x29, x30, [sp, #-16]!
  400e54:	mov	x29, sp
  400e58:	bl	4010c0 <call_weak_fn>
  400e5c:	ldp	x29, x30, [sp], #16
  400e60:	ret

Disassembly of section .plt:

0000000000400e70 <.plt>:
  400e70:	stp	x16, x30, [sp, #-16]!
  400e74:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400e78:	ldr	x17, [x16, #3832]
  400e7c:	add	x16, x16, #0xef8
  400e80:	br	x17
  400e84:	nop
  400e88:	nop
  400e8c:	nop

0000000000400e90 <__libc_start_main@plt>:
  400e90:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400e94:	ldr	x17, [x16, #3840]
  400e98:	add	x16, x16, #0xf00
  400e9c:	br	x17

0000000000400ea0 <__gmon_start__@plt>:
  400ea0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400ea4:	ldr	x17, [x16, #3848]
  400ea8:	add	x16, x16, #0xf08
  400eac:	br	x17

0000000000400eb0 <snprintf@plt>:
  400eb0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400eb4:	ldr	x17, [x16, #3856]
  400eb8:	add	x16, x16, #0xf10
  400ebc:	br	x17

0000000000400ec0 <device_path_make_major_minor@plt>:
  400ec0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400ec4:	ldr	x17, [x16, #3864]
  400ec8:	add	x16, x16, #0xf18
  400ecc:	br	x17

0000000000400ed0 <fstatfs64@plt>:
  400ed0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400ed4:	ldr	x17, [x16, #3872]
  400ed8:	add	x16, x16, #0xf20
  400edc:	br	x17

0000000000400ee0 <log_setup_service@plt>:
  400ee0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400ee4:	ldr	x17, [x16, #3880]
  400ee8:	add	x16, x16, #0xf28
  400eec:	br	x17

0000000000400ef0 <safe_close@plt>:
  400ef0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400ef4:	ldr	x17, [x16, #3888]
  400ef8:	add	x16, x16, #0xf30
  400efc:	br	x17

0000000000400f00 <log_assert_failed_realm@plt>:
  400f00:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400f04:	ldr	x17, [x16, #3896]
  400f08:	add	x16, x16, #0xf38
  400f0c:	br	x17

0000000000400f10 <getopt_long@plt>:
  400f10:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400f14:	ldr	x17, [x16, #3904]
  400f18:	add	x16, x16, #0xf40
  400f1c:	br	x17

0000000000400f20 <probe_filesystem@plt>:
  400f20:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400f24:	ldr	x17, [x16, #3912]
  400f28:	add	x16, x16, #0xf48
  400f2c:	br	x17

0000000000400f30 <log_assert_failed_unreachable_realm@plt>:
  400f30:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400f34:	ldr	x17, [x16, #3920]
  400f38:	add	x16, x16, #0xf50
  400f3c:	br	x17

0000000000400f40 <abort@plt>:
  400f40:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400f44:	ldr	x17, [x16, #3928]
  400f48:	add	x16, x16, #0xf58
  400f4c:	br	x17

0000000000400f50 <get_block_device_harder@plt>:
  400f50:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400f54:	ldr	x17, [x16, #3936]
  400f58:	add	x16, x16, #0xf60
  400f5c:	br	x17

0000000000400f60 <__errno_location@plt>:
  400f60:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400f64:	ldr	x17, [x16, #3944]
  400f68:	add	x16, x16, #0xf68
  400f6c:	br	x17

0000000000400f70 <terminal_urlify_man@plt>:
  400f70:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400f74:	ldr	x17, [x16, #3952]
  400f78:	add	x16, x16, #0xf70
  400f7c:	br	x17

0000000000400f80 <__stack_chk_fail@plt>:
  400f80:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400f84:	ldr	x17, [x16, #3960]
  400f88:	add	x16, x16, #0xf78
  400f8c:	br	x17

0000000000400f90 <version@plt>:
  400f90:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400f94:	ldr	x17, [x16, #3968]
  400f98:	add	x16, x16, #0xf80
  400f9c:	br	x17

0000000000400fa0 <get_block_device@plt>:
  400fa0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400fa4:	ldr	x17, [x16, #3976]
  400fa8:	add	x16, x16, #0xf88
  400fac:	br	x17

0000000000400fb0 <log_internal_realm@plt>:
  400fb0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400fb4:	ldr	x17, [x16, #3984]
  400fb8:	add	x16, x16, #0xf90
  400fbc:	br	x17

0000000000400fc0 <ioctl@plt>:
  400fc0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400fc4:	ldr	x17, [x16, #3992]
  400fc8:	add	x16, x16, #0xf98
  400fcc:	br	x17

0000000000400fd0 <gnu_dev_major@plt>:
  400fd0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400fd4:	ldr	x17, [x16, #4000]
  400fd8:	add	x16, x16, #0xfa0
  400fdc:	br	x17

0000000000400fe0 <path_is_mount_point@plt>:
  400fe0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400fe4:	ldr	x17, [x16, #4008]
  400fe8:	add	x16, x16, #0xfa8
  400fec:	br	x17

0000000000400ff0 <free@plt>:
  400ff0:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  400ff4:	ldr	x17, [x16, #4016]
  400ff8:	add	x16, x16, #0xfb0
  400ffc:	br	x17

0000000000401000 <gnu_dev_minor@plt>:
  401000:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401004:	ldr	x17, [x16, #4024]
  401008:	add	x16, x16, #0xfb8
  40100c:	br	x17

0000000000401010 <printf@plt>:
  401010:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401014:	ldr	x17, [x16, #4032]
  401018:	add	x16, x16, #0xfc0
  40101c:	br	x17

0000000000401020 <format_bytes_full@plt>:
  401020:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401024:	ldr	x17, [x16, #4040]
  401028:	add	x16, x16, #0xfc8
  40102c:	br	x17

0000000000401030 <open64@plt>:
  401030:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401034:	ldr	x17, [x16, #4048]
  401038:	add	x16, x16, #0xfd0
  40103c:	br	x17

0000000000401040 <log_oom_internal@plt>:
  401040:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401044:	ldr	x17, [x16, #4056]
  401048:	add	x16, x16, #0xfd8
  40104c:	br	x17

0000000000401050 <memset@plt>:
  401050:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401054:	ldr	x17, [x16, #4064]
  401058:	add	x16, x16, #0xfe0
  40105c:	br	x17

0000000000401060 <log_get_max_level_realm@plt>:
  401060:	adrp	x16, 413000 <__FRAME_END__+0xfd00>
  401064:	ldr	x17, [x16, #4072]
  401068:	add	x16, x16, #0xfe8
  40106c:	br	x17

Disassembly of section .text:

0000000000401070 <_start>:
  401070:	mov	x29, #0x0                   	// #0
  401074:	mov	x30, #0x0                   	// #0
  401078:	mov	x5, x0
  40107c:	ldr	x1, [sp]
  401080:	add	x2, sp, #0x8
  401084:	mov	x6, sp
  401088:	movz	x0, #0x0, lsl #48
  40108c:	movk	x0, #0x0, lsl #32
  401090:	movk	x0, #0x40, lsl #16
  401094:	movk	x0, #0x1eb4
  401098:	movz	x3, #0x0, lsl #48
  40109c:	movk	x3, #0x0, lsl #32
  4010a0:	movk	x3, #0x40, lsl #16
  4010a4:	movk	x3, #0x2880
  4010a8:	movz	x4, #0x0, lsl #48
  4010ac:	movk	x4, #0x0, lsl #32
  4010b0:	movk	x4, #0x40, lsl #16
  4010b4:	movk	x4, #0x2900
  4010b8:	bl	400e90 <__libc_start_main@plt>
  4010bc:	bl	400f40 <abort@plt>

00000000004010c0 <call_weak_fn>:
  4010c0:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  4010c4:	ldr	x0, [x0, #4088]
  4010c8:	cbz	x0, 4010d0 <call_weak_fn+0x10>
  4010cc:	b	400ea0 <__gmon_start__@plt>
  4010d0:	ret

00000000004010d4 <deregister_tm_clones>:
  4010d4:	stp	x29, x30, [sp, #-32]!
  4010d8:	mov	x29, sp
  4010dc:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  4010e0:	add	x0, x0, #0x0
  4010e4:	str	x0, [sp, #24]
  4010e8:	ldr	x0, [sp, #24]
  4010ec:	str	x0, [sp, #24]
  4010f0:	ldr	x1, [sp, #24]
  4010f4:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  4010f8:	add	x0, x0, #0x0
  4010fc:	cmp	x1, x0
  401100:	b.eq	40113c <deregister_tm_clones+0x68>  // b.none
  401104:	adrp	x0, 402000 <main+0x14c>
  401108:	add	x0, x0, #0x918
  40110c:	ldr	x0, [x0]
  401110:	str	x0, [sp, #16]
  401114:	ldr	x0, [sp, #16]
  401118:	str	x0, [sp, #16]
  40111c:	ldr	x0, [sp, #16]
  401120:	cmp	x0, #0x0
  401124:	b.eq	401140 <deregister_tm_clones+0x6c>  // b.none
  401128:	ldr	x1, [sp, #16]
  40112c:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401130:	add	x0, x0, #0x0
  401134:	blr	x1
  401138:	b	401140 <deregister_tm_clones+0x6c>
  40113c:	nop
  401140:	ldp	x29, x30, [sp], #32
  401144:	ret

0000000000401148 <register_tm_clones>:
  401148:	stp	x29, x30, [sp, #-48]!
  40114c:	mov	x29, sp
  401150:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401154:	add	x0, x0, #0x0
  401158:	str	x0, [sp, #40]
  40115c:	ldr	x0, [sp, #40]
  401160:	str	x0, [sp, #40]
  401164:	ldr	x1, [sp, #40]
  401168:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  40116c:	add	x0, x0, #0x0
  401170:	sub	x0, x1, x0
  401174:	asr	x0, x0, #3
  401178:	lsr	x1, x0, #63
  40117c:	add	x0, x1, x0
  401180:	asr	x0, x0, #1
  401184:	str	x0, [sp, #32]
  401188:	ldr	x0, [sp, #32]
  40118c:	cmp	x0, #0x0
  401190:	b.eq	4011d0 <register_tm_clones+0x88>  // b.none
  401194:	adrp	x0, 402000 <main+0x14c>
  401198:	add	x0, x0, #0x920
  40119c:	ldr	x0, [x0]
  4011a0:	str	x0, [sp, #24]
  4011a4:	ldr	x0, [sp, #24]
  4011a8:	str	x0, [sp, #24]
  4011ac:	ldr	x0, [sp, #24]
  4011b0:	cmp	x0, #0x0
  4011b4:	b.eq	4011d4 <register_tm_clones+0x8c>  // b.none
  4011b8:	ldr	x2, [sp, #24]
  4011bc:	ldr	x1, [sp, #32]
  4011c0:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  4011c4:	add	x0, x0, #0x0
  4011c8:	blr	x2
  4011cc:	b	4011d4 <register_tm_clones+0x8c>
  4011d0:	nop
  4011d4:	ldp	x29, x30, [sp], #48
  4011d8:	ret

00000000004011dc <__do_global_dtors_aux>:
  4011dc:	stp	x29, x30, [sp, #-16]!
  4011e0:	mov	x29, sp
  4011e4:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  4011e8:	add	x0, x0, #0xc
  4011ec:	ldrb	w0, [x0]
  4011f0:	and	x0, x0, #0xff
  4011f4:	cmp	x0, #0x0
  4011f8:	b.ne	401214 <__do_global_dtors_aux+0x38>  // b.any
  4011fc:	bl	4010d4 <deregister_tm_clones>
  401200:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401204:	add	x0, x0, #0xc
  401208:	mov	w1, #0x1                   	// #1
  40120c:	strb	w1, [x0]
  401210:	b	401218 <__do_global_dtors_aux+0x3c>
  401214:	nop
  401218:	ldp	x29, x30, [sp], #16
  40121c:	ret

0000000000401220 <frame_dummy>:
  401220:	stp	x29, x30, [sp, #-16]!
  401224:	mov	x29, sp
  401228:	bl	401148 <register_tm_clones>
  40122c:	nop
  401230:	ldp	x29, x30, [sp], #16
  401234:	ret

0000000000401238 <freep>:
  401238:	stp	x29, x30, [sp, #-32]!
  40123c:	mov	x29, sp
  401240:	str	x0, [sp, #24]
  401244:	ldr	x0, [sp, #24]
  401248:	ldr	x0, [x0]
  40124c:	bl	400ff0 <free@plt>
  401250:	nop
  401254:	ldp	x29, x30, [sp], #32
  401258:	ret

000000000040125c <strnull>:
  40125c:	sub	sp, sp, #0x10
  401260:	str	x0, [sp, #8]
  401264:	ldr	x0, [sp, #8]
  401268:	cmp	x0, #0x0
  40126c:	b.ne	401278 <strnull+0x1c>  // b.any
  401270:	adrp	x0, 402000 <main+0x14c>
  401274:	add	x0, x0, #0x928
  401278:	add	sp, sp, #0x10
  40127c:	ret

0000000000401280 <closep>:
  401280:	stp	x29, x30, [sp, #-32]!
  401284:	mov	x29, sp
  401288:	str	x0, [sp, #24]
  40128c:	ldr	x0, [sp, #24]
  401290:	ldr	w0, [x0]
  401294:	bl	400ef0 <safe_close@plt>
  401298:	nop
  40129c:	ldp	x29, x30, [sp], #32
  4012a0:	ret

00000000004012a4 <format_bytes>:
  4012a4:	stp	x29, x30, [sp, #-48]!
  4012a8:	mov	x29, sp
  4012ac:	str	x0, [sp, #40]
  4012b0:	str	x1, [sp, #32]
  4012b4:	str	x2, [sp, #24]
  4012b8:	mov	w3, #0x7                   	// #7
  4012bc:	ldr	x2, [sp, #24]
  4012c0:	ldr	x1, [sp, #32]
  4012c4:	ldr	x0, [sp, #40]
  4012c8:	bl	401020 <format_bytes_full@plt>
  4012cc:	ldp	x29, x30, [sp], #48
  4012d0:	ret

00000000004012d4 <resize_ext4>:
  4012d4:	stp	x29, x30, [sp, #-64]!
  4012d8:	mov	x29, sp
  4012dc:	str	x0, [sp, #40]
  4012e0:	str	w1, [sp, #36]
  4012e4:	str	w2, [sp, #32]
  4012e8:	str	x3, [sp, #24]
  4012ec:	str	x4, [sp, #16]
  4012f0:	ldr	x0, [sp, #16]
  4012f4:	sxtw	x0, w0
  4012f8:	ldr	x1, [sp, #16]
  4012fc:	cmp	x1, x0
  401300:	cset	w0, ne  // ne = any
  401304:	and	w0, w0, #0xff
  401308:	and	x0, x0, #0xff
  40130c:	cmp	x0, #0x0
  401310:	b.eq	40133c <resize_ext4+0x68>  // b.none
  401314:	adrp	x0, 402000 <main+0x14c>
  401318:	add	x1, x0, #0x933
  40131c:	adrp	x0, 402000 <main+0x14c>
  401320:	add	x4, x0, #0xf20
  401324:	mov	w3, #0x22                  	// #34
  401328:	mov	x2, x1
  40132c:	adrp	x0, 402000 <main+0x14c>
  401330:	add	x1, x0, #0x950
  401334:	mov	w0, #0x0                   	// #0
  401338:	bl	400f00 <log_assert_failed_realm@plt>
  40133c:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401340:	add	x0, x0, #0x18
  401344:	ldrb	w0, [x0]
  401348:	cmp	w0, #0x0
  40134c:	b.eq	401358 <resize_ext4+0x84>  // b.none
  401350:	mov	w0, #0x0                   	// #0
  401354:	b	401414 <resize_ext4+0x140>
  401358:	add	x0, sp, #0x18
  40135c:	mov	x2, x0
  401360:	mov	x1, #0x6610                	// #26128
  401364:	movk	x1, #0x4008, lsl #16
  401368:	ldr	w0, [sp, #36]
  40136c:	bl	400fc0 <ioctl@plt>
  401370:	cmp	w0, #0x0
  401374:	b.eq	401410 <resize_ext4+0x13c>  // b.none
  401378:	mov	w0, #0x3                   	// #3
  40137c:	str	w0, [sp, #52]
  401380:	bl	400f60 <__errno_location@plt>
  401384:	ldr	w0, [x0]
  401388:	str	w0, [sp, #56]
  40138c:	str	wzr, [sp, #60]
  401390:	ldr	w0, [sp, #60]
  401394:	bl	401060 <log_get_max_level_realm@plt>
  401398:	mov	w1, w0
  40139c:	ldr	w0, [sp, #52]
  4013a0:	and	w0, w0, #0x7
  4013a4:	cmp	w1, w0
  4013a8:	b.lt	4013f8 <resize_ext4+0x124>  // b.tstop
  4013ac:	ldr	w0, [sp, #60]
  4013b0:	lsl	w1, w0, #10
  4013b4:	ldr	w0, [sp, #52]
  4013b8:	orr	w8, w1, w0
  4013bc:	adrp	x0, 402000 <main+0x14c>
  4013c0:	add	x1, x0, #0x933
  4013c4:	ldr	x0, [sp, #24]
  4013c8:	mov	x7, x0
  4013cc:	ldr	x6, [sp, #40]
  4013d0:	adrp	x0, 402000 <main+0x14c>
  4013d4:	add	x5, x0, #0x978
  4013d8:	adrp	x0, 402000 <main+0x14c>
  4013dc:	add	x4, x0, #0xf30
  4013e0:	mov	w3, #0x28                  	// #40
  4013e4:	mov	x2, x1
  4013e8:	ldr	w1, [sp, #56]
  4013ec:	mov	w0, w8
  4013f0:	bl	400fb0 <log_internal_realm@plt>
  4013f4:	b	401414 <resize_ext4+0x140>
  4013f8:	ldr	w0, [sp, #56]
  4013fc:	cmp	w0, #0x0
  401400:	cneg	w0, w0, lt  // lt = tstop
  401404:	and	w0, w0, #0xff
  401408:	neg	w0, w0
  40140c:	b	401414 <resize_ext4+0x140>
  401410:	mov	w0, #0x0                   	// #0
  401414:	ldp	x29, x30, [sp], #64
  401418:	ret

000000000040141c <resize_btrfs>:
  40141c:	mov	x12, #0x1060                	// #4192
  401420:	sub	sp, sp, x12
  401424:	stp	x29, x30, [sp]
  401428:	mov	x29, sp
  40142c:	str	x0, [sp, #40]
  401430:	str	w1, [sp, #36]
  401434:	str	w2, [sp, #32]
  401438:	str	x3, [sp, #24]
  40143c:	str	x4, [sp, #16]
  401440:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  401444:	add	x0, x0, #0xcb0
  401448:	ldr	x1, [x0]
  40144c:	str	x1, [sp, #4184]
  401450:	mov	x1, #0x0                   	// #0
  401454:	add	x0, sp, #0x58
  401458:	mov	x1, #0x1000                	// #4096
  40145c:	mov	x2, x1
  401460:	mov	w1, #0x0                   	// #0
  401464:	bl	401050 <memset@plt>
  401468:	ldr	x0, [sp, #16]
  40146c:	sxtw	x0, w0
  401470:	ldr	x1, [sp, #16]
  401474:	cmp	x1, x0
  401478:	cset	w0, ne  // ne = any
  40147c:	and	w0, w0, #0xff
  401480:	and	x0, x0, #0xff
  401484:	cmp	x0, #0x0
  401488:	b.eq	4014b4 <resize_btrfs+0x98>  // b.none
  40148c:	adrp	x0, 402000 <main+0x14c>
  401490:	add	x1, x0, #0x933
  401494:	adrp	x0, 402000 <main+0x14c>
  401498:	add	x4, x0, #0xf40
  40149c:	mov	w3, #0x32                  	// #50
  4014a0:	mov	x2, x1
  4014a4:	adrp	x0, 402000 <main+0x14c>
  4014a8:	add	x1, x0, #0x950
  4014ac:	mov	w0, #0x0                   	// #0
  4014b0:	bl	400f00 <log_assert_failed_realm@plt>
  4014b4:	ldr	x1, [sp, #24]
  4014b8:	ldr	x0, [sp, #16]
  4014bc:	mul	x1, x1, x0
  4014c0:	mov	x0, #0xfffffff             	// #268435455
  4014c4:	cmp	x1, x0
  4014c8:	b.hi	40154c <resize_btrfs+0x130>  // b.pmore
  4014cc:	mov	w0, #0x4                   	// #4
  4014d0:	str	w0, [sp, #76]
  4014d4:	str	wzr, [sp, #80]
  4014d8:	str	wzr, [sp, #84]
  4014dc:	ldr	w0, [sp, #84]
  4014e0:	bl	401060 <log_get_max_level_realm@plt>
  4014e4:	mov	w1, w0
  4014e8:	ldr	w0, [sp, #76]
  4014ec:	and	w0, w0, #0x7
  4014f0:	cmp	w1, w0
  4014f4:	b.lt	40153c <resize_btrfs+0x120>  // b.tstop
  4014f8:	ldr	w0, [sp, #84]
  4014fc:	lsl	w1, w0, #10
  401500:	ldr	w0, [sp, #76]
  401504:	orr	w7, w1, w0
  401508:	adrp	x0, 402000 <main+0x14c>
  40150c:	add	x1, x0, #0x933
  401510:	ldr	x6, [sp, #40]
  401514:	adrp	x0, 402000 <main+0x14c>
  401518:	add	x5, x0, #0x9a8
  40151c:	adrp	x0, 402000 <main+0x14c>
  401520:	add	x4, x0, #0xf50
  401524:	mov	w3, #0x36                  	// #54
  401528:	mov	x2, x1
  40152c:	ldr	w1, [sp, #80]
  401530:	mov	w0, w7
  401534:	bl	400fb0 <log_internal_realm@plt>
  401538:	b	401544 <resize_btrfs+0x128>
  40153c:	ldr	w0, [sp, #80]
  401540:	cmp	w0, #0x0
  401544:	mov	w0, #0xffffffa1            	// #-95
  401548:	b	401694 <resize_btrfs+0x278>
  40154c:	ldr	x1, [sp, #24]
  401550:	ldr	x0, [sp, #16]
  401554:	mul	x1, x1, x0
  401558:	add	x0, sp, #0x58
  40155c:	add	x4, x0, #0x8
  401560:	mov	x3, x1
  401564:	adrp	x0, 402000 <main+0x14c>
  401568:	add	x2, x0, #0x9f0
  40156c:	mov	x1, #0xff8                 	// #4088
  401570:	mov	x0, x4
  401574:	bl	400eb0 <snprintf@plt>
  401578:	str	w0, [sp, #60]
  40157c:	ldr	w0, [sp, #60]
  401580:	cmp	w0, #0xff7
  401584:	cset	w0, hi  // hi = pmore
  401588:	and	w0, w0, #0xff
  40158c:	and	x0, x0, #0xff
  401590:	cmp	x0, #0x0
  401594:	b.eq	4015c0 <resize_btrfs+0x1a4>  // b.none
  401598:	adrp	x0, 402000 <main+0x14c>
  40159c:	add	x1, x0, #0x933
  4015a0:	adrp	x0, 402000 <main+0x14c>
  4015a4:	add	x4, x0, #0xf40
  4015a8:	mov	w3, #0x3c                  	// #60
  4015ac:	mov	x2, x1
  4015b0:	adrp	x0, 402000 <main+0x14c>
  4015b4:	add	x1, x0, #0x9f8
  4015b8:	mov	w0, #0x0                   	// #0
  4015bc:	bl	400f00 <log_assert_failed_realm@plt>
  4015c0:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  4015c4:	add	x0, x0, #0x18
  4015c8:	ldrb	w0, [x0]
  4015cc:	cmp	w0, #0x0
  4015d0:	b.eq	4015dc <resize_btrfs+0x1c0>  // b.none
  4015d4:	mov	w0, #0x0                   	// #0
  4015d8:	b	401694 <resize_btrfs+0x278>
  4015dc:	add	x0, sp, #0x58
  4015e0:	mov	x2, x0
  4015e4:	mov	x1, #0x9403                	// #37891
  4015e8:	movk	x1, #0x5000, lsl #16
  4015ec:	ldr	w0, [sp, #36]
  4015f0:	bl	400fc0 <ioctl@plt>
  4015f4:	cmp	w0, #0x0
  4015f8:	b.eq	401690 <resize_btrfs+0x274>  // b.none
  4015fc:	mov	w0, #0x3                   	// #3
  401600:	str	w0, [sp, #64]
  401604:	bl	400f60 <__errno_location@plt>
  401608:	ldr	w0, [x0]
  40160c:	str	w0, [sp, #68]
  401610:	str	wzr, [sp, #72]
  401614:	ldr	w0, [sp, #72]
  401618:	bl	401060 <log_get_max_level_realm@plt>
  40161c:	mov	w1, w0
  401620:	ldr	w0, [sp, #64]
  401624:	and	w0, w0, #0x7
  401628:	cmp	w1, w0
  40162c:	b.lt	401678 <resize_btrfs+0x25c>  // b.tstop
  401630:	ldr	w0, [sp, #72]
  401634:	lsl	w1, w0, #10
  401638:	ldr	w0, [sp, #64]
  40163c:	orr	w8, w1, w0
  401640:	adrp	x0, 402000 <main+0x14c>
  401644:	add	x1, x0, #0x933
  401648:	ldr	x7, [sp, #24]
  40164c:	ldr	x6, [sp, #40]
  401650:	adrp	x0, 402000 <main+0x14c>
  401654:	add	x5, x0, #0xa18
  401658:	adrp	x0, 402000 <main+0x14c>
  40165c:	add	x4, x0, #0xf50
  401660:	mov	w3, #0x42                  	// #66
  401664:	mov	x2, x1
  401668:	ldr	w1, [sp, #68]
  40166c:	mov	w0, w8
  401670:	bl	400fb0 <log_internal_realm@plt>
  401674:	b	401694 <resize_btrfs+0x278>
  401678:	ldr	w0, [sp, #68]
  40167c:	cmp	w0, #0x0
  401680:	cneg	w0, w0, lt  // lt = tstop
  401684:	and	w0, w0, #0xff
  401688:	neg	w0, w0
  40168c:	b	401694 <resize_btrfs+0x278>
  401690:	mov	w0, #0x0                   	// #0
  401694:	mov	w1, w0
  401698:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  40169c:	add	x0, x0, #0xcb0
  4016a0:	ldr	x2, [sp, #4184]
  4016a4:	ldr	x0, [x0]
  4016a8:	eor	x0, x2, x0
  4016ac:	cmp	x0, #0x0
  4016b0:	b.eq	4016b8 <resize_btrfs+0x29c>  // b.none
  4016b4:	bl	400f80 <__stack_chk_fail@plt>
  4016b8:	mov	w0, w1
  4016bc:	ldp	x29, x30, [sp]
  4016c0:	mov	x12, #0x1060                	// #4192
  4016c4:	add	sp, sp, x12
  4016c8:	ret

00000000004016cc <maybe_resize_slave_device>:
  4016cc:	sub	sp, sp, #0xe0
  4016d0:	stp	x29, x30, [sp, #32]
  4016d4:	add	x29, sp, #0x20
  4016d8:	stp	x19, x20, [sp, #48]
  4016dc:	stp	x21, x22, [sp, #64]
  4016e0:	str	x23, [sp, #80]
  4016e4:	str	x0, [sp, #104]
  4016e8:	str	x1, [sp, #96]
  4016ec:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  4016f0:	add	x0, x0, #0xcb0
  4016f4:	ldr	x1, [x0]
  4016f8:	str	x1, [sp, #216]
  4016fc:	mov	x1, #0x0                   	// #0
  401700:	str	xzr, [sp, #192]
  401704:	str	xzr, [sp, #200]
  401708:	add	x0, sp, #0xd0
  40170c:	mov	x1, x0
  401710:	ldr	x0, [sp, #104]
  401714:	bl	400f50 <get_block_device_harder@plt>
  401718:	str	w0, [sp, #116]
  40171c:	ldr	w0, [sp, #116]
  401720:	cmp	w0, #0x0
  401724:	b.ge	4017b8 <maybe_resize_slave_device+0xec>  // b.tcont
  401728:	mov	w0, #0x3                   	// #3
  40172c:	str	w0, [sp, #180]
  401730:	ldr	w0, [sp, #116]
  401734:	str	w0, [sp, #184]
  401738:	str	wzr, [sp, #188]
  40173c:	ldr	w0, [sp, #188]
  401740:	bl	401060 <log_get_max_level_realm@plt>
  401744:	mov	w1, w0
  401748:	ldr	w0, [sp, #180]
  40174c:	and	w0, w0, #0x7
  401750:	cmp	w1, w0
  401754:	b.lt	4017a0 <maybe_resize_slave_device+0xd4>  // b.tstop
  401758:	ldr	w0, [sp, #188]
  40175c:	lsl	w1, w0, #10
  401760:	ldr	w0, [sp, #180]
  401764:	orr	w7, w1, w0
  401768:	adrp	x0, 402000 <main+0x14c>
  40176c:	add	x1, x0, #0x933
  401770:	ldr	x6, [sp, #104]
  401774:	adrp	x0, 402000 <main+0x14c>
  401778:	add	x5, x0, #0xa48
  40177c:	adrp	x0, 402000 <main+0x14c>
  401780:	add	x4, x0, #0xf60
  401784:	mov	w3, #0x89                  	// #137
  401788:	mov	x2, x1
  40178c:	ldr	w1, [sp, #184]
  401790:	mov	w0, w7
  401794:	bl	400fb0 <log_internal_realm@plt>
  401798:	mov	w19, w0
  40179c:	b	401b3c <maybe_resize_slave_device+0x470>
  4017a0:	ldr	w0, [sp, #184]
  4017a4:	cmp	w0, #0x0
  4017a8:	cneg	w0, w0, lt  // lt = tstop
  4017ac:	and	w0, w0, #0xff
  4017b0:	neg	w19, w0
  4017b4:	b	401b3c <maybe_resize_slave_device+0x470>
  4017b8:	mov	w0, #0x7                   	// #7
  4017bc:	str	w0, [sp, #120]
  4017c0:	str	wzr, [sp, #124]
  4017c4:	str	wzr, [sp, #128]
  4017c8:	ldr	w0, [sp, #128]
  4017cc:	bl	401060 <log_get_max_level_realm@plt>
  4017d0:	mov	w1, w0
  4017d4:	ldr	w0, [sp, #120]
  4017d8:	and	w0, w0, #0x7
  4017dc:	cmp	w1, w0
  4017e0:	b.lt	40188c <maybe_resize_slave_device+0x1c0>  // b.tstop
  4017e4:	ldr	w0, [sp, #128]
  4017e8:	lsl	w1, w0, #10
  4017ec:	ldr	w0, [sp, #120]
  4017f0:	orr	w19, w1, w0
  4017f4:	adrp	x0, 402000 <main+0x14c>
  4017f8:	add	x20, x0, #0x933
  4017fc:	ldr	x0, [sp, #208]
  401800:	bl	400fd0 <gnu_dev_major@plt>
  401804:	mov	w22, w0
  401808:	ldr	x0, [sp, #208]
  40180c:	bl	401000 <gnu_dev_minor@plt>
  401810:	mov	w23, w0
  401814:	ldr	x0, [sp, #96]
  401818:	bl	400fd0 <gnu_dev_major@plt>
  40181c:	mov	w21, w0
  401820:	ldr	x0, [sp, #96]
  401824:	bl	401000 <gnu_dev_minor@plt>
  401828:	mov	w2, w0
  40182c:	ldr	x0, [sp, #208]
  401830:	ldr	x1, [sp, #96]
  401834:	cmp	x1, x0
  401838:	b.ne	401848 <maybe_resize_slave_device+0x17c>  // b.any
  40183c:	adrp	x0, 402000 <main+0x14c>
  401840:	add	x0, x0, #0xa80
  401844:	b	401850 <maybe_resize_slave_device+0x184>
  401848:	adrp	x0, 402000 <main+0x14c>
  40184c:	add	x0, x0, #0xa88
  401850:	str	x0, [sp, #16]
  401854:	str	w2, [sp, #8]
  401858:	str	w21, [sp]
  40185c:	mov	w7, w23
  401860:	mov	w6, w22
  401864:	adrp	x0, 402000 <main+0x14c>
  401868:	add	x5, x0, #0xa98
  40186c:	adrp	x0, 402000 <main+0x14c>
  401870:	add	x4, x0, #0xf60
  401874:	mov	w3, #0x8c                  	// #140
  401878:	mov	x2, x20
  40187c:	ldr	w1, [sp, #124]
  401880:	mov	w0, w19
  401884:	bl	400fb0 <log_internal_realm@plt>
  401888:	b	401894 <maybe_resize_slave_device+0x1c8>
  40188c:	ldr	w0, [sp, #124]
  401890:	cmp	w0, #0x0
  401894:	ldr	x0, [sp, #208]
  401898:	ldr	x1, [sp, #96]
  40189c:	cmp	x1, x0
  4018a0:	b.ne	4018ac <maybe_resize_slave_device+0x1e0>  // b.any
  4018a4:	mov	w19, #0x0                   	// #0
  4018a8:	b	401b3c <maybe_resize_slave_device+0x470>
  4018ac:	ldr	x0, [sp, #208]
  4018b0:	add	x1, sp, #0xc8
  4018b4:	mov	x2, x1
  4018b8:	mov	x1, x0
  4018bc:	mov	w0, #0x6000                	// #24576
  4018c0:	bl	400ec0 <device_path_make_major_minor@plt>
  4018c4:	str	w0, [sp, #116]
  4018c8:	ldr	w0, [sp, #116]
  4018cc:	cmp	w0, #0x0
  4018d0:	b.ge	401960 <maybe_resize_slave_device+0x294>  // b.tcont
  4018d4:	mov	w0, #0x3                   	// #3
  4018d8:	str	w0, [sp, #168]
  4018dc:	ldr	w0, [sp, #116]
  4018e0:	str	w0, [sp, #172]
  4018e4:	str	wzr, [sp, #176]
  4018e8:	ldr	w0, [sp, #176]
  4018ec:	bl	401060 <log_get_max_level_realm@plt>
  4018f0:	mov	w1, w0
  4018f4:	ldr	w0, [sp, #168]
  4018f8:	and	w0, w0, #0x7
  4018fc:	cmp	w1, w0
  401900:	b.lt	401948 <maybe_resize_slave_device+0x27c>  // b.tstop
  401904:	ldr	w0, [sp, #176]
  401908:	lsl	w1, w0, #10
  40190c:	ldr	w0, [sp, #168]
  401910:	orr	w6, w1, w0
  401914:	adrp	x0, 402000 <main+0x14c>
  401918:	add	x1, x0, #0x933
  40191c:	adrp	x0, 402000 <main+0x14c>
  401920:	add	x5, x0, #0xac8
  401924:	adrp	x0, 402000 <main+0x14c>
  401928:	add	x4, x0, #0xf60
  40192c:	mov	w3, #0x95                  	// #149
  401930:	mov	x2, x1
  401934:	ldr	w1, [sp, #172]
  401938:	mov	w0, w6
  40193c:	bl	400fb0 <log_internal_realm@plt>
  401940:	mov	w19, w0
  401944:	b	401b3c <maybe_resize_slave_device+0x470>
  401948:	ldr	w0, [sp, #172]
  40194c:	cmp	w0, #0x0
  401950:	cneg	w0, w0, lt  // lt = tstop
  401954:	and	w0, w0, #0xff
  401958:	neg	w19, w0
  40195c:	b	401b3c <maybe_resize_slave_device+0x470>
  401960:	ldr	x0, [sp, #200]
  401964:	add	x1, sp, #0xc0
  401968:	bl	400f20 <probe_filesystem@plt>
  40196c:	str	w0, [sp, #116]
  401970:	ldr	w0, [sp, #116]
  401974:	cmn	w0, #0x75
  401978:	b.ne	401a10 <maybe_resize_slave_device+0x344>  // b.any
  40197c:	mov	w0, #0x4                   	// #4
  401980:	str	w0, [sp, #156]
  401984:	ldr	w0, [sp, #116]
  401988:	str	w0, [sp, #160]
  40198c:	str	wzr, [sp, #164]
  401990:	ldr	w0, [sp, #164]
  401994:	bl	401060 <log_get_max_level_realm@plt>
  401998:	mov	w1, w0
  40199c:	ldr	w0, [sp, #156]
  4019a0:	and	w0, w0, #0x7
  4019a4:	cmp	w1, w0
  4019a8:	b.lt	4019f8 <maybe_resize_slave_device+0x32c>  // b.tstop
  4019ac:	ldr	w0, [sp, #164]
  4019b0:	lsl	w1, w0, #10
  4019b4:	ldr	w0, [sp, #156]
  4019b8:	orr	w7, w1, w0
  4019bc:	adrp	x0, 402000 <main+0x14c>
  4019c0:	add	x1, x0, #0x933
  4019c4:	ldr	x0, [sp, #200]
  4019c8:	mov	x6, x0
  4019cc:	adrp	x0, 402000 <main+0x14c>
  4019d0:	add	x5, x0, #0xaf8
  4019d4:	adrp	x0, 402000 <main+0x14c>
  4019d8:	add	x4, x0, #0xf60
  4019dc:	mov	w3, #0x99                  	// #153
  4019e0:	mov	x2, x1
  4019e4:	ldr	w1, [sp, #160]
  4019e8:	mov	w0, w7
  4019ec:	bl	400fb0 <log_internal_realm@plt>
  4019f0:	mov	w19, w0
  4019f4:	b	401b3c <maybe_resize_slave_device+0x470>
  4019f8:	ldr	w0, [sp, #160]
  4019fc:	cmp	w0, #0x0
  401a00:	cneg	w0, w0, lt  // lt = tstop
  401a04:	and	w0, w0, #0xff
  401a08:	neg	w19, w0
  401a0c:	b	401b3c <maybe_resize_slave_device+0x470>
  401a10:	ldr	w0, [sp, #116]
  401a14:	cmp	w0, #0x0
  401a18:	b.ge	401ab0 <maybe_resize_slave_device+0x3e4>  // b.tcont
  401a1c:	mov	w0, #0x4                   	// #4
  401a20:	str	w0, [sp, #144]
  401a24:	ldr	w0, [sp, #116]
  401a28:	str	w0, [sp, #148]
  401a2c:	str	wzr, [sp, #152]
  401a30:	ldr	w0, [sp, #152]
  401a34:	bl	401060 <log_get_max_level_realm@plt>
  401a38:	mov	w1, w0
  401a3c:	ldr	w0, [sp, #144]
  401a40:	and	w0, w0, #0x7
  401a44:	cmp	w1, w0
  401a48:	b.lt	401a98 <maybe_resize_slave_device+0x3cc>  // b.tstop
  401a4c:	ldr	w0, [sp, #152]
  401a50:	lsl	w1, w0, #10
  401a54:	ldr	w0, [sp, #144]
  401a58:	orr	w7, w1, w0
  401a5c:	adrp	x0, 402000 <main+0x14c>
  401a60:	add	x1, x0, #0x933
  401a64:	ldr	x0, [sp, #200]
  401a68:	mov	x6, x0
  401a6c:	adrp	x0, 402000 <main+0x14c>
  401a70:	add	x5, x0, #0xb38
  401a74:	adrp	x0, 402000 <main+0x14c>
  401a78:	add	x4, x0, #0xf60
  401a7c:	mov	w3, #0x9b                  	// #155
  401a80:	mov	x2, x1
  401a84:	ldr	w1, [sp, #148]
  401a88:	mov	w0, w7
  401a8c:	bl	400fb0 <log_internal_realm@plt>
  401a90:	mov	w19, w0
  401a94:	b	401b3c <maybe_resize_slave_device+0x470>
  401a98:	ldr	w0, [sp, #148]
  401a9c:	cmp	w0, #0x0
  401aa0:	cneg	w0, w0, lt  // lt = tstop
  401aa4:	and	w0, w0, #0xff
  401aa8:	neg	w19, w0
  401aac:	b	401b3c <maybe_resize_slave_device+0x470>
  401ab0:	mov	w0, #0x7                   	// #7
  401ab4:	str	w0, [sp, #132]
  401ab8:	str	wzr, [sp, #136]
  401abc:	str	wzr, [sp, #140]
  401ac0:	ldr	w0, [sp, #140]
  401ac4:	bl	401060 <log_get_max_level_realm@plt>
  401ac8:	mov	w1, w0
  401acc:	ldr	w0, [sp, #132]
  401ad0:	and	w0, w0, #0x7
  401ad4:	cmp	w1, w0
  401ad8:	b.lt	401b30 <maybe_resize_slave_device+0x464>  // b.tstop
  401adc:	ldr	w0, [sp, #140]
  401ae0:	lsl	w1, w0, #10
  401ae4:	ldr	w0, [sp, #132]
  401ae8:	orr	w19, w1, w0
  401aec:	adrp	x0, 402000 <main+0x14c>
  401af0:	add	x20, x0, #0x933
  401af4:	ldr	x21, [sp, #200]
  401af8:	ldr	x0, [sp, #192]
  401afc:	bl	40125c <strnull>
  401b00:	mov	x7, x0
  401b04:	mov	x6, x21
  401b08:	adrp	x0, 402000 <main+0x14c>
  401b0c:	add	x5, x0, #0xb58
  401b10:	adrp	x0, 402000 <main+0x14c>
  401b14:	add	x4, x0, #0xf60
  401b18:	mov	w3, #0xa2                  	// #162
  401b1c:	mov	x2, x20
  401b20:	ldr	w1, [sp, #136]
  401b24:	mov	w0, w19
  401b28:	bl	400fb0 <log_internal_realm@plt>
  401b2c:	b	401b38 <maybe_resize_slave_device+0x46c>
  401b30:	ldr	w0, [sp, #136]
  401b34:	cmp	w0, #0x0
  401b38:	mov	w19, #0x0                   	// #0
  401b3c:	add	x0, sp, #0xc8
  401b40:	bl	401238 <freep>
  401b44:	add	x0, sp, #0xc0
  401b48:	bl	401238 <freep>
  401b4c:	mov	w1, w19
  401b50:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  401b54:	add	x0, x0, #0xcb0
  401b58:	ldr	x2, [sp, #216]
  401b5c:	ldr	x0, [x0]
  401b60:	eor	x0, x2, x0
  401b64:	cmp	x0, #0x0
  401b68:	b.eq	401b70 <maybe_resize_slave_device+0x4a4>  // b.none
  401b6c:	bl	400f80 <__stack_chk_fail@plt>
  401b70:	mov	w0, w1
  401b74:	ldp	x19, x20, [sp, #48]
  401b78:	ldp	x21, x22, [sp, #64]
  401b7c:	ldr	x23, [sp, #80]
  401b80:	ldp	x29, x30, [sp, #32]
  401b84:	add	sp, sp, #0xe0
  401b88:	ret

0000000000401b8c <help>:
  401b8c:	stp	x29, x30, [sp, #-64]!
  401b90:	mov	x29, sp
  401b94:	str	x19, [sp, #16]
  401b98:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  401b9c:	add	x0, x0, #0xcb0
  401ba0:	ldr	x1, [x0]
  401ba4:	str	x1, [sp, #56]
  401ba8:	mov	x1, #0x0                   	// #0
  401bac:	str	xzr, [sp, #48]
  401bb0:	add	x0, sp, #0x30
  401bb4:	mov	x2, x0
  401bb8:	adrp	x0, 402000 <main+0x14c>
  401bbc:	add	x1, x0, #0xb90
  401bc0:	adrp	x0, 402000 <main+0x14c>
  401bc4:	add	x0, x0, #0xb98
  401bc8:	bl	400f70 <terminal_urlify_man@plt>
  401bcc:	str	w0, [sp, #44]
  401bd0:	ldr	w0, [sp, #44]
  401bd4:	cmp	w0, #0x0
  401bd8:	b.ge	401c00 <help+0x74>  // b.tcont
  401bdc:	adrp	x0, 402000 <main+0x14c>
  401be0:	add	x1, x0, #0x933
  401be4:	adrp	x0, 402000 <main+0x14c>
  401be8:	add	x3, x0, #0xf80
  401bec:	mov	w2, #0xac                  	// #172
  401bf0:	mov	w0, #0x0                   	// #0
  401bf4:	bl	401040 <log_oom_internal@plt>
  401bf8:	mov	w19, w0
  401bfc:	b	401c28 <help+0x9c>
  401c00:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401c04:	add	x0, x0, #0x0
  401c08:	ldr	x0, [x0]
  401c0c:	ldr	x1, [sp, #48]
  401c10:	mov	x2, x1
  401c14:	mov	x1, x0
  401c18:	adrp	x0, 402000 <main+0x14c>
  401c1c:	add	x0, x0, #0xbb0
  401c20:	bl	401010 <printf@plt>
  401c24:	mov	w19, #0x0                   	// #0
  401c28:	add	x0, sp, #0x30
  401c2c:	bl	401238 <freep>
  401c30:	mov	w1, w19
  401c34:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  401c38:	add	x0, x0, #0xcb0
  401c3c:	ldr	x2, [sp, #56]
  401c40:	ldr	x0, [x0]
  401c44:	eor	x0, x2, x0
  401c48:	cmp	x0, #0x0
  401c4c:	b.eq	401c54 <help+0xc8>  // b.none
  401c50:	bl	400f80 <__stack_chk_fail@plt>
  401c54:	mov	w0, w1
  401c58:	ldr	x19, [sp, #16]
  401c5c:	ldp	x29, x30, [sp], #64
  401c60:	ret

0000000000401c64 <parse_argv>:
  401c64:	stp	x29, x30, [sp, #-48]!
  401c68:	mov	x29, sp
  401c6c:	str	w0, [sp, #28]
  401c70:	str	x1, [sp, #16]
  401c74:	ldr	w0, [sp, #28]
  401c78:	lsr	w0, w0, #31
  401c7c:	and	w0, w0, #0xff
  401c80:	and	x0, x0, #0xff
  401c84:	cmp	x0, #0x0
  401c88:	b.eq	401cb4 <parse_argv+0x50>  // b.none
  401c8c:	adrp	x0, 402000 <main+0x14c>
  401c90:	add	x1, x0, #0x933
  401c94:	adrp	x0, 402000 <main+0x14c>
  401c98:	add	x4, x0, #0xf88
  401c9c:	mov	w3, #0xca                  	// #202
  401ca0:	mov	x2, x1
  401ca4:	adrp	x0, 402000 <main+0x14c>
  401ca8:	add	x1, x0, #0xcc8
  401cac:	mov	w0, #0x0                   	// #0
  401cb0:	bl	400f00 <log_assert_failed_realm@plt>
  401cb4:	ldr	x0, [sp, #16]
  401cb8:	cmp	x0, #0x0
  401cbc:	cset	w0, eq  // eq = none
  401cc0:	and	w0, w0, #0xff
  401cc4:	and	x0, x0, #0xff
  401cc8:	cmp	x0, #0x0
  401ccc:	b.eq	401d94 <parse_argv+0x130>  // b.none
  401cd0:	adrp	x0, 402000 <main+0x14c>
  401cd4:	add	x1, x0, #0x933
  401cd8:	adrp	x0, 402000 <main+0x14c>
  401cdc:	add	x4, x0, #0xf88
  401ce0:	mov	w3, #0xcb                  	// #203
  401ce4:	mov	x2, x1
  401ce8:	adrp	x0, 402000 <main+0x14c>
  401cec:	add	x1, x0, #0xcd8
  401cf0:	mov	w0, #0x0                   	// #0
  401cf4:	bl	400f00 <log_assert_failed_realm@plt>
  401cf8:	ldr	w0, [sp, #32]
  401cfc:	cmp	w0, #0x100
  401d00:	b.eq	401d48 <parse_argv+0xe4>  // b.none
  401d04:	ldr	w0, [sp, #32]
  401d08:	cmp	w0, #0x100
  401d0c:	b.gt	401d6c <parse_argv+0x108>
  401d10:	ldr	w0, [sp, #32]
  401d14:	cmp	w0, #0x6e
  401d18:	b.eq	401d50 <parse_argv+0xec>  // b.none
  401d1c:	ldr	w0, [sp, #32]
  401d20:	cmp	w0, #0x6e
  401d24:	b.gt	401d6c <parse_argv+0x108>
  401d28:	ldr	w0, [sp, #32]
  401d2c:	cmp	w0, #0x3f
  401d30:	b.eq	401d64 <parse_argv+0x100>  // b.none
  401d34:	ldr	w0, [sp, #32]
  401d38:	cmp	w0, #0x68
  401d3c:	b.ne	401d6c <parse_argv+0x108>  // b.any
  401d40:	bl	401b8c <help>
  401d44:	b	401eac <parse_argv+0x248>
  401d48:	bl	400f90 <version@plt>
  401d4c:	b	401eac <parse_argv+0x248>
  401d50:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401d54:	add	x0, x0, #0x18
  401d58:	mov	w1, #0x1                   	// #1
  401d5c:	strb	w1, [x0]
  401d60:	b	401d94 <parse_argv+0x130>
  401d64:	mov	w0, #0xffffffea            	// #-22
  401d68:	b	401eac <parse_argv+0x248>
  401d6c:	adrp	x0, 402000 <main+0x14c>
  401d70:	add	x1, x0, #0x933
  401d74:	adrp	x0, 402000 <main+0x14c>
  401d78:	add	x4, x0, #0xf88
  401d7c:	mov	w3, #0xdd                  	// #221
  401d80:	mov	x2, x1
  401d84:	adrp	x0, 402000 <main+0x14c>
  401d88:	add	x1, x0, #0xce0
  401d8c:	mov	w0, #0x0                   	// #0
  401d90:	bl	400f30 <log_assert_failed_unreachable_realm@plt>
  401d94:	mov	x4, #0x0                   	// #0
  401d98:	adrp	x0, 402000 <main+0x14c>
  401d9c:	add	x3, x0, #0xf98
  401da0:	adrp	x0, 402000 <main+0x14c>
  401da4:	add	x2, x0, #0xcf8
  401da8:	ldr	x1, [sp, #16]
  401dac:	ldr	w0, [sp, #28]
  401db0:	bl	400f10 <getopt_long@plt>
  401db4:	str	w0, [sp, #32]
  401db8:	ldr	w0, [sp, #32]
  401dbc:	cmp	w0, #0x0
  401dc0:	b.ge	401cf8 <parse_argv+0x94>  // b.tcont
  401dc4:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401dc8:	add	x0, x0, #0x8
  401dcc:	ldr	w0, [x0]
  401dd0:	add	w0, w0, #0x1
  401dd4:	ldr	w1, [sp, #28]
  401dd8:	cmp	w1, w0
  401ddc:	b.eq	401e7c <parse_argv+0x218>  // b.none
  401de0:	mov	w0, #0x3                   	// #3
  401de4:	str	w0, [sp, #36]
  401de8:	mov	w0, #0x16                  	// #22
  401dec:	movk	w0, #0x4000, lsl #16
  401df0:	str	w0, [sp, #40]
  401df4:	str	wzr, [sp, #44]
  401df8:	ldr	w0, [sp, #44]
  401dfc:	bl	401060 <log_get_max_level_realm@plt>
  401e00:	mov	w1, w0
  401e04:	ldr	w0, [sp, #36]
  401e08:	and	w0, w0, #0x7
  401e0c:	cmp	w1, w0
  401e10:	b.lt	401e64 <parse_argv+0x200>  // b.tstop
  401e14:	ldr	w0, [sp, #44]
  401e18:	lsl	w1, w0, #10
  401e1c:	ldr	w0, [sp, #36]
  401e20:	orr	w7, w1, w0
  401e24:	adrp	x0, 402000 <main+0x14c>
  401e28:	add	x1, x0, #0x933
  401e2c:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401e30:	add	x0, x0, #0x0
  401e34:	ldr	x0, [x0]
  401e38:	mov	x6, x0
  401e3c:	adrp	x0, 402000 <main+0x14c>
  401e40:	add	x5, x0, #0xd00
  401e44:	adrp	x0, 403000 <options.8970+0x68>
  401e48:	add	x4, x0, #0x18
  401e4c:	mov	w3, #0xe1                  	// #225
  401e50:	mov	x2, x1
  401e54:	ldr	w1, [sp, #40]
  401e58:	mov	w0, w7
  401e5c:	bl	400fb0 <log_internal_realm@plt>
  401e60:	b	401eac <parse_argv+0x248>
  401e64:	ldr	w0, [sp, #40]
  401e68:	cmp	w0, #0x0
  401e6c:	cneg	w0, w0, lt  // lt = tstop
  401e70:	and	w0, w0, #0xff
  401e74:	neg	w0, w0
  401e78:	b	401eac <parse_argv+0x248>
  401e7c:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401e80:	add	x0, x0, #0x8
  401e84:	ldr	w0, [x0]
  401e88:	sxtw	x0, w0
  401e8c:	lsl	x0, x0, #3
  401e90:	ldr	x1, [sp, #16]
  401e94:	add	x0, x1, x0
  401e98:	ldr	x1, [x0]
  401e9c:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401ea0:	add	x0, x0, #0x10
  401ea4:	str	x1, [x0]
  401ea8:	mov	w0, #0x1                   	// #1
  401eac:	ldp	x29, x30, [sp], #48
  401eb0:	ret

0000000000401eb4 <main>:
  401eb4:	sub	sp, sp, #0x1a0
  401eb8:	stp	x29, x30, [sp, #16]
  401ebc:	add	x29, sp, #0x10
  401ec0:	stp	x19, x20, [sp, #32]
  401ec4:	str	x21, [sp, #48]
  401ec8:	str	w0, [sp, #76]
  401ecc:	str	x1, [sp, #64]
  401ed0:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  401ed4:	add	x0, x0, #0xcb0
  401ed8:	ldr	x1, [x0]
  401edc:	str	x1, [sp, #408]
  401ee0:	mov	x1, #0x0                   	// #0
  401ee4:	mov	w0, #0xffffffff            	// #-1
  401ee8:	str	w0, [sp, #88]
  401eec:	mov	w0, #0xffffffff            	// #-1
  401ef0:	str	w0, [sp, #92]
  401ef4:	str	xzr, [sp, #248]
  401ef8:	bl	400ee0 <log_setup_service@plt>
  401efc:	ldr	x1, [sp, #64]
  401f00:	ldr	w0, [sp, #76]
  401f04:	bl	401c64 <parse_argv>
  401f08:	str	w0, [sp, #100]
  401f0c:	ldr	w0, [sp, #100]
  401f10:	cmp	w0, #0x0
  401f14:	b.ge	401f20 <main+0x6c>  // b.tcont
  401f18:	mov	w19, #0x1                   	// #1
  401f1c:	b	402828 <main+0x974>
  401f20:	ldr	w0, [sp, #100]
  401f24:	cmp	w0, #0x0
  401f28:	b.ne	401f34 <main+0x80>  // b.any
  401f2c:	mov	w19, #0x0                   	// #0
  401f30:	b	402828 <main+0x974>
  401f34:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401f38:	add	x0, x0, #0x10
  401f3c:	ldr	x0, [x0]
  401f40:	mov	w2, #0x0                   	// #0
  401f44:	mov	x1, #0x0                   	// #0
  401f48:	bl	400fe0 <path_is_mount_point@plt>
  401f4c:	str	w0, [sp, #100]
  401f50:	ldr	w0, [sp, #100]
  401f54:	cmp	w0, #0x0
  401f58:	b.ge	401fec <main+0x138>  // b.tcont
  401f5c:	mov	w0, #0x3                   	// #3
  401f60:	str	w0, [sp, #236]
  401f64:	ldr	w0, [sp, #100]
  401f68:	str	w0, [sp, #240]
  401f6c:	str	wzr, [sp, #244]
  401f70:	ldr	w0, [sp, #244]
  401f74:	bl	401060 <log_get_max_level_realm@plt>
  401f78:	mov	w1, w0
  401f7c:	ldr	w0, [sp, #236]
  401f80:	and	w0, w0, #0x7
  401f84:	cmp	w1, w0
  401f88:	b.lt	401fdc <main+0x128>  // b.tstop
  401f8c:	ldr	w0, [sp, #244]
  401f90:	lsl	w1, w0, #10
  401f94:	ldr	w0, [sp, #236]
  401f98:	orr	w7, w1, w0
  401f9c:	adrp	x0, 402000 <main+0x14c>
  401fa0:	add	x1, x0, #0x933
  401fa4:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  401fa8:	add	x0, x0, #0x10
  401fac:	ldr	x0, [x0]
  401fb0:	mov	x6, x0
  401fb4:	adrp	x0, 402000 <main+0x14c>
  401fb8:	add	x5, x0, #0xd38
  401fbc:	adrp	x0, 403000 <options.8970+0x68>
  401fc0:	add	x4, x0, #0x28
  401fc4:	mov	w3, #0xfe                  	// #254
  401fc8:	mov	x2, x1
  401fcc:	ldr	w1, [sp, #240]
  401fd0:	mov	w0, w7
  401fd4:	bl	400fb0 <log_internal_realm@plt>
  401fd8:	b	401fe4 <main+0x130>
  401fdc:	ldr	w0, [sp, #240]
  401fe0:	cmp	w0, #0x0
  401fe4:	mov	w19, #0x1                   	// #1
  401fe8:	b	402828 <main+0x974>
  401fec:	ldr	w0, [sp, #100]
  401ff0:	cmp	w0, #0x0
  401ff4:	b.ne	402088 <main+0x1d4>  // b.any
  401ff8:	mov	w0, #0x3                   	// #3
  401ffc:	str	w0, [sp, #224]
  402000:	ldr	w0, [sp, #100]
  402004:	str	w0, [sp, #228]
  402008:	str	wzr, [sp, #232]
  40200c:	ldr	w0, [sp, #232]
  402010:	bl	401060 <log_get_max_level_realm@plt>
  402014:	mov	w1, w0
  402018:	ldr	w0, [sp, #224]
  40201c:	and	w0, w0, #0x7
  402020:	cmp	w1, w0
  402024:	b.lt	402078 <main+0x1c4>  // b.tstop
  402028:	ldr	w0, [sp, #232]
  40202c:	lsl	w1, w0, #10
  402030:	ldr	w0, [sp, #224]
  402034:	orr	w7, w1, w0
  402038:	adrp	x0, 402000 <main+0x14c>
  40203c:	add	x1, x0, #0x933
  402040:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  402044:	add	x0, x0, #0x10
  402048:	ldr	x0, [x0]
  40204c:	mov	x6, x0
  402050:	adrp	x0, 402000 <main+0x14c>
  402054:	add	x5, x0, #0xd68
  402058:	adrp	x0, 403000 <options.8970+0x68>
  40205c:	add	x4, x0, #0x28
  402060:	mov	w3, #0x102                 	// #258
  402064:	mov	x2, x1
  402068:	ldr	w1, [sp, #228]
  40206c:	mov	w0, w7
  402070:	bl	400fb0 <log_internal_realm@plt>
  402074:	b	402080 <main+0x1cc>
  402078:	ldr	w0, [sp, #228]
  40207c:	cmp	w0, #0x0
  402080:	mov	w19, #0x1                   	// #1
  402084:	b	402828 <main+0x974>
  402088:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  40208c:	add	x0, x0, #0x10
  402090:	ldr	x0, [x0]
  402094:	add	x1, sp, #0x108
  402098:	bl	400fa0 <get_block_device@plt>
  40209c:	str	w0, [sp, #100]
  4020a0:	ldr	w0, [sp, #100]
  4020a4:	cmp	w0, #0x0
  4020a8:	b.ge	40213c <main+0x288>  // b.tcont
  4020ac:	mov	w0, #0x3                   	// #3
  4020b0:	str	w0, [sp, #212]
  4020b4:	ldr	w0, [sp, #100]
  4020b8:	str	w0, [sp, #216]
  4020bc:	str	wzr, [sp, #220]
  4020c0:	ldr	w0, [sp, #220]
  4020c4:	bl	401060 <log_get_max_level_realm@plt>
  4020c8:	mov	w1, w0
  4020cc:	ldr	w0, [sp, #212]
  4020d0:	and	w0, w0, #0x7
  4020d4:	cmp	w1, w0
  4020d8:	b.lt	40212c <main+0x278>  // b.tstop
  4020dc:	ldr	w0, [sp, #220]
  4020e0:	lsl	w1, w0, #10
  4020e4:	ldr	w0, [sp, #212]
  4020e8:	orr	w7, w1, w0
  4020ec:	adrp	x0, 402000 <main+0x14c>
  4020f0:	add	x1, x0, #0x933
  4020f4:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  4020f8:	add	x0, x0, #0x10
  4020fc:	ldr	x0, [x0]
  402100:	mov	x6, x0
  402104:	adrp	x0, 402000 <main+0x14c>
  402108:	add	x5, x0, #0xd88
  40210c:	adrp	x0, 403000 <options.8970+0x68>
  402110:	add	x4, x0, #0x28
  402114:	mov	w3, #0x108                 	// #264
  402118:	mov	x2, x1
  40211c:	ldr	w1, [sp, #216]
  402120:	mov	w0, w7
  402124:	bl	400fb0 <log_internal_realm@plt>
  402128:	b	402134 <main+0x280>
  40212c:	ldr	w0, [sp, #216]
  402130:	cmp	w0, #0x0
  402134:	mov	w19, #0x1                   	// #1
  402138:	b	402828 <main+0x974>
  40213c:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  402140:	add	x0, x0, #0x10
  402144:	ldr	x0, [x0]
  402148:	ldr	x1, [sp, #264]
  40214c:	bl	4016cc <maybe_resize_slave_device>
  402150:	str	w0, [sp, #100]
  402154:	ldr	w0, [sp, #100]
  402158:	cmp	w0, #0x0
  40215c:	b.ge	402168 <main+0x2b4>  // b.tcont
  402160:	mov	w19, #0x1                   	// #1
  402164:	b	402828 <main+0x974>
  402168:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  40216c:	add	x0, x0, #0x10
  402170:	ldr	x0, [x0]
  402174:	mov	w1, #0x80000               	// #524288
  402178:	bl	401030 <open64@plt>
  40217c:	str	w0, [sp, #88]
  402180:	ldr	w0, [sp, #88]
  402184:	cmp	w0, #0x0
  402188:	b.ge	402220 <main+0x36c>  // b.tcont
  40218c:	mov	w0, #0x3                   	// #3
  402190:	str	w0, [sp, #200]
  402194:	bl	400f60 <__errno_location@plt>
  402198:	ldr	w0, [x0]
  40219c:	str	w0, [sp, #204]
  4021a0:	str	wzr, [sp, #208]
  4021a4:	ldr	w0, [sp, #208]
  4021a8:	bl	401060 <log_get_max_level_realm@plt>
  4021ac:	mov	w1, w0
  4021b0:	ldr	w0, [sp, #200]
  4021b4:	and	w0, w0, #0x7
  4021b8:	cmp	w1, w0
  4021bc:	b.lt	402210 <main+0x35c>  // b.tstop
  4021c0:	ldr	w0, [sp, #208]
  4021c4:	lsl	w1, w0, #10
  4021c8:	ldr	w0, [sp, #200]
  4021cc:	orr	w7, w1, w0
  4021d0:	adrp	x0, 402000 <main+0x14c>
  4021d4:	add	x1, x0, #0x933
  4021d8:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  4021dc:	add	x0, x0, #0x10
  4021e0:	ldr	x0, [x0]
  4021e4:	mov	x6, x0
  4021e8:	adrp	x0, 402000 <main+0x14c>
  4021ec:	add	x5, x0, #0xdb8
  4021f0:	adrp	x0, 403000 <options.8970+0x68>
  4021f4:	add	x4, x0, #0x28
  4021f8:	mov	w3, #0x112                 	// #274
  4021fc:	mov	x2, x1
  402200:	ldr	w1, [sp, #204]
  402204:	mov	w0, w7
  402208:	bl	400fb0 <log_internal_realm@plt>
  40220c:	b	402218 <main+0x364>
  402210:	ldr	w0, [sp, #204]
  402214:	cmp	w0, #0x0
  402218:	mov	w19, #0x1                   	// #1
  40221c:	b	402828 <main+0x974>
  402220:	ldr	x0, [sp, #264]
  402224:	add	x1, sp, #0xf8
  402228:	mov	x2, x1
  40222c:	mov	x1, x0
  402230:	mov	w0, #0x6000                	// #24576
  402234:	bl	400ec0 <device_path_make_major_minor@plt>
  402238:	str	w0, [sp, #100]
  40223c:	ldr	w0, [sp, #100]
  402240:	cmp	w0, #0x0
  402244:	b.ge	4022c8 <main+0x414>  // b.tcont
  402248:	mov	w0, #0x3                   	// #3
  40224c:	str	w0, [sp, #188]
  402250:	ldr	w0, [sp, #100]
  402254:	str	w0, [sp, #192]
  402258:	str	wzr, [sp, #196]
  40225c:	ldr	w0, [sp, #196]
  402260:	bl	401060 <log_get_max_level_realm@plt>
  402264:	mov	w1, w0
  402268:	ldr	w0, [sp, #188]
  40226c:	and	w0, w0, #0x7
  402270:	cmp	w1, w0
  402274:	b.lt	4022b8 <main+0x404>  // b.tstop
  402278:	ldr	w0, [sp, #196]
  40227c:	lsl	w1, w0, #10
  402280:	ldr	w0, [sp, #188]
  402284:	orr	w6, w1, w0
  402288:	adrp	x0, 402000 <main+0x14c>
  40228c:	add	x1, x0, #0x933
  402290:	adrp	x0, 402000 <main+0x14c>
  402294:	add	x5, x0, #0xac8
  402298:	adrp	x0, 403000 <options.8970+0x68>
  40229c:	add	x4, x0, #0x28
  4022a0:	mov	w3, #0x118                 	// #280
  4022a4:	mov	x2, x1
  4022a8:	ldr	w1, [sp, #192]
  4022ac:	mov	w0, w6
  4022b0:	bl	400fb0 <log_internal_realm@plt>
  4022b4:	b	4022c0 <main+0x40c>
  4022b8:	ldr	w0, [sp, #192]
  4022bc:	cmp	w0, #0x0
  4022c0:	mov	w19, #0x1                   	// #1
  4022c4:	b	402828 <main+0x974>
  4022c8:	ldr	x0, [sp, #248]
  4022cc:	mov	w1, #0x80000               	// #524288
  4022d0:	bl	401030 <open64@plt>
  4022d4:	str	w0, [sp, #92]
  4022d8:	ldr	w0, [sp, #92]
  4022dc:	cmp	w0, #0x0
  4022e0:	b.ge	402370 <main+0x4bc>  // b.tcont
  4022e4:	mov	w0, #0x3                   	// #3
  4022e8:	str	w0, [sp, #176]
  4022ec:	bl	400f60 <__errno_location@plt>
  4022f0:	ldr	w0, [x0]
  4022f4:	str	w0, [sp, #180]
  4022f8:	str	wzr, [sp, #184]
  4022fc:	ldr	w0, [sp, #184]
  402300:	bl	401060 <log_get_max_level_realm@plt>
  402304:	mov	w1, w0
  402308:	ldr	w0, [sp, #176]
  40230c:	and	w0, w0, #0x7
  402310:	cmp	w1, w0
  402314:	b.lt	402360 <main+0x4ac>  // b.tstop
  402318:	ldr	w0, [sp, #184]
  40231c:	lsl	w1, w0, #10
  402320:	ldr	w0, [sp, #176]
  402324:	orr	w7, w1, w0
  402328:	adrp	x0, 402000 <main+0x14c>
  40232c:	add	x1, x0, #0x933
  402330:	ldr	x0, [sp, #248]
  402334:	mov	x6, x0
  402338:	adrp	x0, 402000 <main+0x14c>
  40233c:	add	x5, x0, #0xdb8
  402340:	adrp	x0, 403000 <options.8970+0x68>
  402344:	add	x4, x0, #0x28
  402348:	mov	w3, #0x11e                 	// #286
  40234c:	mov	x2, x1
  402350:	ldr	w1, [sp, #180]
  402354:	mov	w0, w7
  402358:	bl	400fb0 <log_internal_realm@plt>
  40235c:	b	402368 <main+0x4b4>
  402360:	ldr	w0, [sp, #180]
  402364:	cmp	w0, #0x0
  402368:	mov	w19, #0x1                   	// #1
  40236c:	b	402828 <main+0x974>
  402370:	ldr	w0, [sp, #92]
  402374:	add	x1, sp, #0x60
  402378:	mov	x2, x1
  40237c:	mov	x1, #0x1270                	// #4720
  402380:	movk	x1, #0x8008, lsl #16
  402384:	bl	400fc0 <ioctl@plt>
  402388:	cmp	w0, #0x0
  40238c:	b.eq	40241c <main+0x568>  // b.none
  402390:	mov	w0, #0x3                   	// #3
  402394:	str	w0, [sp, #164]
  402398:	bl	400f60 <__errno_location@plt>
  40239c:	ldr	w0, [x0]
  4023a0:	str	w0, [sp, #168]
  4023a4:	str	wzr, [sp, #172]
  4023a8:	ldr	w0, [sp, #172]
  4023ac:	bl	401060 <log_get_max_level_realm@plt>
  4023b0:	mov	w1, w0
  4023b4:	ldr	w0, [sp, #164]
  4023b8:	and	w0, w0, #0x7
  4023bc:	cmp	w1, w0
  4023c0:	b.lt	40240c <main+0x558>  // b.tstop
  4023c4:	ldr	w0, [sp, #172]
  4023c8:	lsl	w1, w0, #10
  4023cc:	ldr	w0, [sp, #164]
  4023d0:	orr	w7, w1, w0
  4023d4:	adrp	x0, 402000 <main+0x14c>
  4023d8:	add	x1, x0, #0x933
  4023dc:	ldr	x0, [sp, #248]
  4023e0:	mov	x6, x0
  4023e4:	adrp	x0, 402000 <main+0x14c>
  4023e8:	add	x5, x0, #0xdd0
  4023ec:	adrp	x0, 403000 <options.8970+0x68>
  4023f0:	add	x4, x0, #0x28
  4023f4:	mov	w3, #0x123                 	// #291
  4023f8:	mov	x2, x1
  4023fc:	ldr	w1, [sp, #168]
  402400:	mov	w0, w7
  402404:	bl	400fb0 <log_internal_realm@plt>
  402408:	b	402414 <main+0x560>
  40240c:	ldr	w0, [sp, #168]
  402410:	cmp	w0, #0x0
  402414:	mov	w19, #0x1                   	// #1
  402418:	b	402828 <main+0x974>
  40241c:	ldr	w0, [sp, #92]
  402420:	add	x1, sp, #0x100
  402424:	mov	x2, x1
  402428:	mov	x1, #0x1272                	// #4722
  40242c:	movk	x1, #0x8008, lsl #16
  402430:	bl	400fc0 <ioctl@plt>
  402434:	cmp	w0, #0x0
  402438:	b.eq	4024c8 <main+0x614>  // b.none
  40243c:	mov	w0, #0x3                   	// #3
  402440:	str	w0, [sp, #152]
  402444:	bl	400f60 <__errno_location@plt>
  402448:	ldr	w0, [x0]
  40244c:	str	w0, [sp, #156]
  402450:	str	wzr, [sp, #160]
  402454:	ldr	w0, [sp, #160]
  402458:	bl	401060 <log_get_max_level_realm@plt>
  40245c:	mov	w1, w0
  402460:	ldr	w0, [sp, #152]
  402464:	and	w0, w0, #0x7
  402468:	cmp	w1, w0
  40246c:	b.lt	4024b8 <main+0x604>  // b.tstop
  402470:	ldr	w0, [sp, #160]
  402474:	lsl	w1, w0, #10
  402478:	ldr	w0, [sp, #152]
  40247c:	orr	w7, w1, w0
  402480:	adrp	x0, 402000 <main+0x14c>
  402484:	add	x1, x0, #0x933
  402488:	ldr	x0, [sp, #248]
  40248c:	mov	x6, x0
  402490:	adrp	x0, 402000 <main+0x14c>
  402494:	add	x5, x0, #0xdf8
  402498:	adrp	x0, 403000 <options.8970+0x68>
  40249c:	add	x4, x0, #0x28
  4024a0:	mov	w3, #0x128                 	// #296
  4024a4:	mov	x2, x1
  4024a8:	ldr	w1, [sp, #156]
  4024ac:	mov	w0, w7
  4024b0:	bl	400fb0 <log_internal_realm@plt>
  4024b4:	b	4024c0 <main+0x60c>
  4024b8:	ldr	w0, [sp, #156]
  4024bc:	cmp	w0, #0x0
  4024c0:	mov	w19, #0x1                   	// #1
  4024c4:	b	402828 <main+0x974>
  4024c8:	ldr	x0, [sp, #256]
  4024cc:	ldr	w1, [sp, #96]
  4024d0:	sxtw	x1, w1
  4024d4:	udiv	x2, x0, x1
  4024d8:	mul	x1, x2, x1
  4024dc:	sub	x0, x0, x1
  4024e0:	cmp	x0, #0x0
  4024e4:	b.eq	402588 <main+0x6d4>  // b.none
  4024e8:	mov	w0, #0x5                   	// #5
  4024ec:	str	w0, [sp, #104]
  4024f0:	str	wzr, [sp, #108]
  4024f4:	str	wzr, [sp, #112]
  4024f8:	ldr	w0, [sp, #112]
  4024fc:	bl	401060 <log_get_max_level_realm@plt>
  402500:	mov	w1, w0
  402504:	ldr	w0, [sp, #104]
  402508:	and	w0, w0, #0x7
  40250c:	cmp	w1, w0
  402510:	b.lt	402580 <main+0x6cc>  // b.tstop
  402514:	ldr	w0, [sp, #112]
  402518:	lsl	w1, w0, #10
  40251c:	ldr	w0, [sp, #104]
  402520:	orr	w8, w1, w0
  402524:	adrp	x0, 402000 <main+0x14c>
  402528:	add	x9, x0, #0x933
  40252c:	ldr	x3, [sp, #256]
  402530:	ldr	w4, [sp, #96]
  402534:	ldr	x0, [sp, #256]
  402538:	ldr	w1, [sp, #96]
  40253c:	sxtw	x1, w1
  402540:	udiv	x2, x0, x1
  402544:	mul	x1, x2, x1
  402548:	sub	x0, x0, x1
  40254c:	str	x0, [sp]
  402550:	mov	w7, w4
  402554:	mov	x6, x3
  402558:	adrp	x0, 402000 <main+0x14c>
  40255c:	add	x5, x0, #0xe20
  402560:	adrp	x0, 403000 <options.8970+0x68>
  402564:	add	x4, x0, #0x28
  402568:	mov	w3, #0x12d                 	// #301
  40256c:	mov	x2, x9
  402570:	ldr	w1, [sp, #108]
  402574:	mov	w0, w8
  402578:	bl	400fb0 <log_internal_realm@plt>
  40257c:	b	402588 <main+0x6d4>
  402580:	ldr	w0, [sp, #108]
  402584:	cmp	w0, #0x0
  402588:	ldr	x1, [sp, #256]
  40258c:	ldr	w0, [sp, #96]
  402590:	sxtw	x0, w0
  402594:	udiv	x0, x1, x0
  402598:	str	x0, [sp, #272]
  40259c:	ldr	w0, [sp, #88]
  4025a0:	add	x1, sp, #0x118
  4025a4:	bl	400ed0 <fstatfs64@plt>
  4025a8:	cmp	w0, #0x0
  4025ac:	b.ge	402644 <main+0x790>  // b.tcont
  4025b0:	mov	w0, #0x3                   	// #3
  4025b4:	str	w0, [sp, #140]
  4025b8:	bl	400f60 <__errno_location@plt>
  4025bc:	ldr	w0, [x0]
  4025c0:	str	w0, [sp, #144]
  4025c4:	str	wzr, [sp, #148]
  4025c8:	ldr	w0, [sp, #148]
  4025cc:	bl	401060 <log_get_max_level_realm@plt>
  4025d0:	mov	w1, w0
  4025d4:	ldr	w0, [sp, #140]
  4025d8:	and	w0, w0, #0x7
  4025dc:	cmp	w1, w0
  4025e0:	b.lt	402634 <main+0x780>  // b.tstop
  4025e4:	ldr	w0, [sp, #148]
  4025e8:	lsl	w1, w0, #10
  4025ec:	ldr	w0, [sp, #140]
  4025f0:	orr	w7, w1, w0
  4025f4:	adrp	x0, 402000 <main+0x14c>
  4025f8:	add	x1, x0, #0x933
  4025fc:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  402600:	add	x0, x0, #0x10
  402604:	ldr	x0, [x0]
  402608:	mov	x6, x0
  40260c:	adrp	x0, 402000 <main+0x14c>
  402610:	add	x5, x0, #0xe70
  402614:	adrp	x0, 403000 <options.8970+0x68>
  402618:	add	x4, x0, #0x28
  40261c:	mov	w3, #0x133                 	// #307
  402620:	mov	x2, x1
  402624:	ldr	w1, [sp, #144]
  402628:	mov	w0, w7
  40262c:	bl	400fb0 <log_internal_realm@plt>
  402630:	b	40263c <main+0x788>
  402634:	ldr	w0, [sp, #144]
  402638:	cmp	w0, #0x0
  40263c:	mov	w19, #0x1                   	// #1
  402640:	b	402828 <main+0x974>
  402644:	ldr	x0, [sp, #280]
  402648:	mov	x1, #0xef53                	// #61267
  40264c:	cmp	x0, x1
  402650:	b.eq	402668 <main+0x7b4>  // b.none
  402654:	mov	x1, #0x683e                	// #26686
  402658:	movk	x1, #0x9123, lsl #16
  40265c:	cmp	x0, x1
  402660:	b.eq	402698 <main+0x7e4>  // b.none
  402664:	b	4026c8 <main+0x814>
  402668:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  40266c:	add	x0, x0, #0x10
  402670:	ldr	x0, [x0]
  402674:	ldr	w1, [sp, #88]
  402678:	ldr	w2, [sp, #92]
  40267c:	ldr	w3, [sp, #96]
  402680:	sxtw	x3, w3
  402684:	mov	x4, x3
  402688:	ldr	x3, [sp, #272]
  40268c:	bl	4012d4 <resize_ext4>
  402690:	str	w0, [sp, #100]
  402694:	b	402760 <main+0x8ac>
  402698:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  40269c:	add	x0, x0, #0x10
  4026a0:	ldr	x0, [x0]
  4026a4:	ldr	w1, [sp, #88]
  4026a8:	ldr	w2, [sp, #92]
  4026ac:	ldr	w3, [sp, #96]
  4026b0:	sxtw	x3, w3
  4026b4:	mov	x4, x3
  4026b8:	ldr	x3, [sp, #272]
  4026bc:	bl	40141c <resize_btrfs>
  4026c0:	str	w0, [sp, #100]
  4026c4:	b	402760 <main+0x8ac>
  4026c8:	mov	w0, #0x3                   	// #3
  4026cc:	str	w0, [sp, #128]
  4026d0:	str	wzr, [sp, #132]
  4026d4:	str	wzr, [sp, #136]
  4026d8:	ldr	w0, [sp, #136]
  4026dc:	bl	401060 <log_get_max_level_realm@plt>
  4026e0:	mov	w1, w0
  4026e4:	ldr	w0, [sp, #128]
  4026e8:	and	w0, w0, #0x7
  4026ec:	cmp	w1, w0
  4026f0:	b.lt	402750 <main+0x89c>  // b.tstop
  4026f4:	ldr	w0, [sp, #136]
  4026f8:	lsl	w1, w0, #10
  4026fc:	ldr	w0, [sp, #128]
  402700:	orr	w8, w1, w0
  402704:	adrp	x0, 402000 <main+0x14c>
  402708:	add	x1, x0, #0x933
  40270c:	ldr	x0, [sp, #280]
  402710:	mov	x2, x0
  402714:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  402718:	add	x0, x0, #0x10
  40271c:	ldr	x0, [x0]
  402720:	mov	x7, x0
  402724:	mov	x6, x2
  402728:	adrp	x0, 402000 <main+0x14c>
  40272c:	add	x5, x0, #0xe98
  402730:	adrp	x0, 403000 <options.8970+0x68>
  402734:	add	x4, x0, #0x28
  402738:	mov	w3, #0x13f                 	// #319
  40273c:	mov	x2, x1
  402740:	ldr	w1, [sp, #132]
  402744:	mov	w0, w8
  402748:	bl	400fb0 <log_internal_realm@plt>
  40274c:	b	402758 <main+0x8a4>
  402750:	ldr	w0, [sp, #132]
  402754:	cmp	w0, #0x0
  402758:	mov	w19, #0x1                   	// #1
  40275c:	b	402828 <main+0x974>
  402760:	ldr	w0, [sp, #100]
  402764:	cmp	w0, #0x0
  402768:	b.ge	402774 <main+0x8c0>  // b.tcont
  40276c:	mov	w19, #0x1                   	// #1
  402770:	b	402828 <main+0x974>
  402774:	mov	w0, #0x6                   	// #6
  402778:	str	w0, [sp, #116]
  40277c:	str	wzr, [sp, #120]
  402780:	str	wzr, [sp, #124]
  402784:	ldr	w0, [sp, #124]
  402788:	bl	401060 <log_get_max_level_realm@plt>
  40278c:	mov	w1, w0
  402790:	ldr	w0, [sp, #116]
  402794:	and	w0, w0, #0x7
  402798:	cmp	w1, w0
  40279c:	b.lt	40281c <main+0x968>  // b.tstop
  4027a0:	ldr	w0, [sp, #124]
  4027a4:	lsl	w1, w0, #10
  4027a8:	ldr	w0, [sp, #116]
  4027ac:	orr	w19, w1, w0
  4027b0:	adrp	x0, 402000 <main+0x14c>
  4027b4:	add	x20, x0, #0x933
  4027b8:	adrp	x0, 414000 <__progname@@GLIBC_2.17>
  4027bc:	add	x0, x0, #0x10
  4027c0:	ldr	x21, [x0]
  4027c4:	ldr	x1, [sp, #256]
  4027c8:	add	x0, sp, #0x190
  4027cc:	mov	x2, x1
  4027d0:	mov	x1, #0x8                   	// #8
  4027d4:	bl	4012a4 <format_bytes>
  4027d8:	mov	x1, x0
  4027dc:	ldr	w0, [sp, #96]
  4027e0:	str	w0, [sp, #8]
  4027e4:	ldr	x0, [sp, #272]
  4027e8:	str	x0, [sp]
  4027ec:	mov	x7, x1
  4027f0:	mov	x6, x21
  4027f4:	adrp	x0, 402000 <main+0x14c>
  4027f8:	add	x5, x0, #0xec8
  4027fc:	adrp	x0, 403000 <options.8970+0x68>
  402800:	add	x4, x0, #0x28
  402804:	mov	w3, #0x147                 	// #327
  402808:	mov	x2, x20
  40280c:	ldr	w1, [sp, #120]
  402810:	mov	w0, w19
  402814:	bl	400fb0 <log_internal_realm@plt>
  402818:	b	402824 <main+0x970>
  40281c:	ldr	w0, [sp, #120]
  402820:	cmp	w0, #0x0
  402824:	mov	w19, #0x0                   	// #0
  402828:	add	x0, sp, #0xf8
  40282c:	bl	401238 <freep>
  402830:	add	x0, sp, #0x5c
  402834:	bl	401280 <closep>
  402838:	add	x0, sp, #0x58
  40283c:	bl	401280 <closep>
  402840:	mov	w1, w19
  402844:	adrp	x0, 413000 <__FRAME_END__+0xfd00>
  402848:	add	x0, x0, #0xcb0
  40284c:	ldr	x2, [sp, #408]
  402850:	ldr	x0, [x0]
  402854:	eor	x0, x2, x0
  402858:	cmp	x0, #0x0
  40285c:	b.eq	402864 <main+0x9b0>  // b.none
  402860:	bl	400f80 <__stack_chk_fail@plt>
  402864:	mov	w0, w1
  402868:	ldp	x19, x20, [sp, #32]
  40286c:	ldr	x21, [sp, #48]
  402870:	ldp	x29, x30, [sp, #16]
  402874:	add	sp, sp, #0x1a0
  402878:	ret
  40287c:	nop

0000000000402880 <__libc_csu_init>:
  402880:	stp	x29, x30, [sp, #-64]!
  402884:	mov	x29, sp
  402888:	stp	x19, x20, [sp, #16]
  40288c:	adrp	x20, 413000 <__FRAME_END__+0xfd00>
  402890:	add	x20, x20, #0xca8
  402894:	stp	x21, x22, [sp, #32]
  402898:	adrp	x21, 413000 <__FRAME_END__+0xfd00>
  40289c:	add	x21, x21, #0xca0
  4028a0:	sub	x20, x20, x21
  4028a4:	mov	w22, w0
  4028a8:	stp	x23, x24, [sp, #48]
  4028ac:	mov	x23, x1
  4028b0:	mov	x24, x2
  4028b4:	bl	400e50 <_init>
  4028b8:	cmp	xzr, x20, asr #3
  4028bc:	b.eq	4028e8 <__libc_csu_init+0x68>  // b.none
  4028c0:	asr	x20, x20, #3
  4028c4:	mov	x19, #0x0                   	// #0
  4028c8:	ldr	x3, [x21, x19, lsl #3]
  4028cc:	mov	x2, x24
  4028d0:	add	x19, x19, #0x1
  4028d4:	mov	x1, x23
  4028d8:	mov	w0, w22
  4028dc:	blr	x3
  4028e0:	cmp	x20, x19
  4028e4:	b.ne	4028c8 <__libc_csu_init+0x48>  // b.any
  4028e8:	ldp	x19, x20, [sp, #16]
  4028ec:	ldp	x21, x22, [sp, #32]
  4028f0:	ldp	x23, x24, [sp, #48]
  4028f4:	ldp	x29, x30, [sp], #64
  4028f8:	ret
  4028fc:	nop

0000000000402900 <__libc_csu_fini>:
  402900:	ret

Disassembly of section .fini:

0000000000402904 <_fini>:
  402904:	stp	x29, x30, [sp, #-16]!
  402908:	mov	x29, sp
  40290c:	ldp	x29, x30, [sp], #16
  402910:	ret
