
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//udf.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <read_string>:
       0:	cbnz	x1, 24 <read_string+0x24>
       4:	mov	x0, #0x0                   	// #0
       8:	ret
       c:	mov	x0, #0x0                   	// #0
      10:	ldp	x19, x20, [sp, #16]
      14:	ldp	x21, x22, [sp, #32]
      18:	ldr	x23, [sp, #48]
      1c:	ldp	x29, x30, [sp], #64
      20:	ret
      24:	stp	x29, x30, [sp, #-64]!
      28:	mov	x29, sp
      2c:	stp	x19, x20, [sp, #16]
      30:	stp	x21, x22, [sp, #32]
      34:	str	x23, [sp, #48]
      38:	mov	x23, x0
      3c:	ldrb	w0, [x0]
      40:	cmp	w0, #0x8
      44:	ccmp	w0, #0x10, #0x4, ne  // ne = any
      48:	b.ne	c <read_string+0xc>  // b.any
      4c:	mov	x22, x1
      50:	mov	x19, x2
      54:	cmp	w0, #0x8
      58:	b.ne	11c <read_string+0x11c>  // b.any
      5c:	sub	x21, x1, #0x1
      60:	lsl	x0, x21, #1
      64:	bl	0 <grub_malloc>
      68:	mov	x20, x0
      6c:	cbz	x0, c <read_string+0xc>
      70:	mov	w0, #0x0                   	// #0
      74:	mov	w1, w0
      78:	cmp	x21, w0, uxtw
      7c:	b.hi	108 <read_string+0x108>  // b.pmore
      80:	ldrb	w0, [x23]
      84:	cmp	w0, #0x10
      88:	b.ne	b4 <read_string+0xb4>  // b.any
      8c:	sub	x22, x22, #0x1
      90:	and	x0, x22, #0xfffffffffffffffe
      94:	bl	0 <grub_malloc>
      98:	lsr	x21, x22, #1
      9c:	mov	x20, x0
      a0:	cbz	x0, c <read_string+0xc>
      a4:	mov	w0, #0x0                   	// #0
      a8:	mov	w3, w0
      ac:	cmp	x21, w0, uxtw
      b0:	b.hi	128 <read_string+0x128>  // b.pmore
      b4:	cbnz	x19, cc <read_string+0xcc>
      b8:	lsl	x0, x21, #2
      bc:	add	x0, x0, #0x1
      c0:	bl	0 <grub_malloc>
      c4:	mov	x19, x0
      c8:	cbz	x0, f8 <read_string+0xf8>
      cc:	mov	x0, x20
      d0:	mov	x1, x19
      d4:	mov	w4, #0x0                   	// #0
      d8:	mov	w6, #0xffff2800            	// #-55296
      dc:	mov	w7, #0xffff2400            	// #-56320
      e0:	mov	w8, #0x3f                  	// #63
      e4:	mov	w9, #0x2400                	// #9216
      e8:	sub	x21, x21, #0x1
      ec:	cmn	x21, #0x1
      f0:	b.ne	14c <read_string+0x14c>  // b.any
      f4:	strb	wzr, [x1]
      f8:	mov	x0, x20
      fc:	bl	0 <grub_free>
     100:	mov	x0, x19
     104:	b	10 <read_string+0x10>
     108:	add	w2, w0, #0x1
     10c:	add	w0, w0, #0x1
     110:	ldrb	w2, [x23, x2]
     114:	strh	w2, [x20, x1, lsl #1]
     118:	b	74 <read_string+0x74>
     11c:	mov	x21, #0x0                   	// #0
     120:	mov	x20, #0x0                   	// #0
     124:	b	80 <read_string+0x80>
     128:	lsl	w1, w0, #1
     12c:	add	w0, w0, #0x1
     130:	add	w2, w1, #0x1
     134:	add	w1, w1, #0x2
     138:	ldrb	w2, [x23, x2]
     13c:	ldrb	w1, [x23, w1, uxtw]
     140:	orr	w1, w1, w2, lsl #8
     144:	strh	w1, [x20, x3, lsl #1]
     148:	b	a8 <read_string+0xa8>
     14c:	mov	x5, x0
     150:	ldrh	w3, [x5], #2
     154:	cbz	w4, 1bc <read_string+0x1bc>
     158:	add	w2, w3, w7
     15c:	cmp	w2, #0x3ff
     160:	b.hi	1b0 <read_string+0x1b0>  // b.pmore
     164:	add	w4, w4, w6
     168:	add	x1, x1, #0x4
     16c:	add	w3, w3, w4, lsl #10
     170:	add	w3, w3, w9
     174:	lsr	w0, w3, #18
     178:	orr	w0, w0, #0xfffffff0
     17c:	sturb	w0, [x1, #-4]
     180:	ubfx	x0, x3, #12, #6
     184:	orr	w0, w0, #0xffffff80
     188:	sturb	w0, [x1, #-3]
     18c:	ubfx	x0, x3, #6, #6
     190:	and	w3, w3, #0x3f
     194:	orr	w0, w0, #0xffffff80
     198:	orr	w3, w3, #0xffffff80
     19c:	sturb	w0, [x1, #-2]
     1a0:	sturb	w3, [x1, #-1]
     1a4:	mov	w4, #0x0                   	// #0
     1a8:	mov	x0, x5
     1ac:	b	e8 <read_string+0xe8>
     1b0:	mov	x5, x0
     1b4:	strb	w8, [x1], #1
     1b8:	b	1a4 <read_string+0x1a4>
     1bc:	cmp	w3, #0x7f
     1c0:	b.hi	1cc <read_string+0x1cc>  // b.pmore
     1c4:	strb	w3, [x1], #1
     1c8:	b	1a8 <read_string+0x1a8>
     1cc:	cmp	w3, #0x7ff
     1d0:	b.hi	1f8 <read_string+0x1f8>  // b.pmore
     1d4:	mov	x0, x1
     1d8:	lsr	w2, w3, #6
     1dc:	orr	w2, w2, #0xffffffc0
     1e0:	and	w3, w3, #0x3f
     1e4:	orr	w3, w3, #0xffffff80
     1e8:	strb	w2, [x0], #2
     1ec:	strb	w3, [x1, #1]
     1f0:	mov	x1, x0
     1f4:	b	1a8 <read_string+0x1a8>
     1f8:	add	w0, w3, w6
     1fc:	cmp	w0, #0x3ff
     200:	b.ls	244 <read_string+0x244>  // b.plast
     204:	add	w0, w3, w7
     208:	cmp	w0, #0x3ff
     20c:	b.hi	218 <read_string+0x218>  // b.pmore
     210:	strb	w8, [x1], #1
     214:	b	1a8 <read_string+0x1a8>
     218:	lsr	w0, w3, #12
     21c:	add	x1, x1, #0x3
     220:	orr	w0, w0, #0xffffffe0
     224:	sturb	w0, [x1, #-3]
     228:	ubfx	x0, x3, #6, #6
     22c:	and	w3, w3, #0x3f
     230:	orr	w0, w0, #0xffffff80
     234:	orr	w3, w3, #0xffffff80
     238:	sturb	w0, [x1, #-2]
     23c:	sturb	w3, [x1, #-1]
     240:	b	1a8 <read_string+0x1a8>
     244:	mov	w4, w3
     248:	b	1a8 <read_string+0x1a8>

000000000000024c <grub_udf_dir_iter>:
     24c:	stp	x29, x30, [sp, #-112]!
     250:	mov	x29, sp
     254:	stp	x21, x22, [sp, #32]
     258:	mov	w22, w1
     25c:	mov	x21, x2
     260:	mov	w1, #0x0                   	// #0
     264:	and	w22, w22, #0xff
     268:	mov	x2, #0x10                  	// #16
     26c:	stp	x19, x20, [sp, #16]
     270:	mov	x20, x0
     274:	mov	x19, x3
     278:	add	x0, sp, #0x48
     27c:	bl	0 <grub_memset>
     280:	ldrb	w0, [sp, #72]
     284:	cmp	w22, #0x2
     288:	cset	w1, eq  // eq = none
     28c:	bfxil	w0, w1, #0, #1
     290:	strb	w0, [sp, #72]
     294:	ldrh	w0, [x21, #12]
     298:	cmp	w0, #0x105
     29c:	b.ne	36c <grub_udf_dir_iter+0x120>  // b.any
     2a0:	add	x4, x21, #0x60
     2a4:	ldrh	w5, [x4]
     2a8:	and	w0, w5, #0xf000
     2ac:	cmp	w0, #0x1, lsl #12
     2b0:	b.ne	344 <grub_udf_dir_iter+0xf8>  // b.any
     2b4:	ldrh	w3, [x4, #2]
     2b8:	and	w0, w5, #0xfff
     2bc:	ldrb	w8, [x4, #4]
     2c0:	ldrb	w1, [x4, #5]
     2c4:	ldrb	w7, [x4, #6]
     2c8:	ldrb	w6, [x4, #7]
     2cc:	ldrb	w2, [x4, #8]
     2d0:	tbz	w5, #11, 2e4 <grub_udf_dir_iter+0x98>
     2d4:	orr	w0, w0, #0xfffff000
     2d8:	cmn	w0, #0x7ff
     2dc:	b.ne	2e4 <grub_udf_dir_iter+0x98>  // b.any
     2e0:	mov	w0, #0x0                   	// #0
     2e4:	adrp	x4, 0 <read_string>
     2e8:	ldr	x9, [x4]
     2ec:	ldp	x4, x5, [x9]
     2f0:	stp	x4, x5, [sp, #88]
     2f4:	ldr	x4, [x9, #16]
     2f8:	str	x4, [sp, #104]
     2fc:	adrp	x4, 0 <read_string>
     300:	ldr	x4, [x4]
     304:	ldr	x5, [x4]
     308:	str	x5, [sp, #56]
     30c:	ldr	w4, [x4, #8]
     310:	str	w4, [sp, #64]
     314:	sub	w4, w3, #0x76d
     318:	and	w4, w4, #0xffff
     31c:	cmp	w4, #0x89
     320:	b.ls	37c <grub_udf_dir_iter+0x130>  // b.plast
     324:	mov	w2, #0x0                   	// #0
     328:	ldrb	w1, [sp, #72]
     32c:	bfi	w1, w2, #1, #1
     330:	strb	w1, [sp, #72]
     334:	ldr	w1, [sp, #76]
     338:	mov	w2, #0xffffffc4            	// #-60
     33c:	madd	w0, w0, w2, w1
     340:	str	w0, [sp, #76]
     344:	mov	x0, x21
     348:	bl	0 <grub_free>
     34c:	ldp	x3, x2, [x19]
     350:	add	x1, sp, #0x48
     354:	mov	x0, x20
     358:	blr	x3
     35c:	ldp	x19, x20, [sp, #16]
     360:	ldp	x21, x22, [sp, #32]
     364:	ldp	x29, x30, [sp], #112
     368:	ret
     36c:	cmp	w0, #0x10a
     370:	b.ne	344 <grub_udf_dir_iter+0xf8>  // b.any
     374:	add	x4, x21, #0x68
     378:	b	2a4 <grub_udf_dir_iter+0x58>
     37c:	sub	w10, w8, #0x1
     380:	and	w4, w10, #0xff
     384:	cmp	w4, #0xb
     388:	b.hi	324 <grub_udf_dir_iter+0xd8>  // b.pmore
     38c:	sub	w4, w3, #0x1
     390:	mov	w11, #0x1f80                	// #8064
     394:	mov	w9, #0xec00                	// #60416
     398:	movk	w11, #0x786, lsl #16
     39c:	asr	w4, w4, #2
     3a0:	movk	w9, #0x5a4, lsl #16
     3a4:	sub	w4, w4, #0x1ed
     3a8:	sub	w5, w3, #0x7b5
     3ac:	sub	w5, w5, w4, lsl #2
     3b0:	madd	w4, w4, w11, w9
     3b4:	mov	w9, #0x3380                	// #13184
     3b8:	movk	w9, #0x1e1, lsl #16
     3bc:	sxtw	x11, w10
     3c0:	cmp	w5, #0x3
     3c4:	madd	w9, w5, w9, w4
     3c8:	add	x4, sp, #0x58
     3cc:	ldrh	w4, [x4, w10, sxtw #1]
     3d0:	mov	w10, #0x5180                	// #20864
     3d4:	movk	w10, #0x1, lsl #16
     3d8:	madd	w4, w4, w10, w9
     3dc:	b.ne	3ec <grub_udf_dir_iter+0x1a0>  // b.any
     3e0:	cmp	w8, #0x2
     3e4:	b.ls	3ec <grub_udf_dir_iter+0x1a0>  // b.plast
     3e8:	add	w4, w4, w10
     3ec:	add	x9, sp, #0x38
     3f0:	ldrb	w9, [x9, x11]
     3f4:	cmp	w9, w1
     3f8:	b.cc	454 <grub_udf_dir_iter+0x208>  // b.lo, b.ul, b.last
     3fc:	cbz	w1, 324 <grub_udf_dir_iter+0xd8>
     400:	cmp	w7, #0x17
     404:	b.hi	324 <grub_udf_dir_iter+0xd8>  // b.pmore
     408:	cmp	w6, #0x3b
     40c:	b.hi	324 <grub_udf_dir_iter+0xd8>  // b.pmore
     410:	cmp	w2, #0x3c
     414:	b.hi	324 <grub_udf_dir_iter+0xd8>  // b.pmore
     418:	sub	w1, w1, #0x1
     41c:	mov	w5, #0x5180                	// #20864
     420:	movk	w5, #0x1, lsl #16
     424:	cmp	w3, #0x7bc
     428:	madd	w1, w1, w5, w4
     42c:	mov	w4, #0xe10                 	// #3600
     430:	madd	w1, w7, w4, w1
     434:	mov	w4, #0x3c                  	// #60
     438:	madd	w1, w6, w4, w1
     43c:	add	w1, w2, w1
     440:	b.ls	474 <grub_udf_dir_iter+0x228>  // b.plast
     444:	tbnz	w1, #31, 324 <grub_udf_dir_iter+0xd8>
     448:	mov	w2, #0x1                   	// #1
     44c:	str	w1, [sp, #76]
     450:	b	328 <grub_udf_dir_iter+0xdc>
     454:	cbz	w5, 324 <grub_udf_dir_iter+0xd8>
     458:	mov	x5, #0x0                   	// #0
     45c:	bfi	x5, x8, #16, #8
     460:	mov	w8, #0x1d02                	// #7426
     464:	bfi	x5, x1, #24, #8
     468:	cmp	w8, w5, lsr #16
     46c:	b.ne	324 <grub_udf_dir_iter+0xd8>  // b.any
     470:	b	3fc <grub_udf_dir_iter+0x1b0>
     474:	cmp	w3, #0x7a7
     478:	b.hi	448 <grub_udf_dir_iter+0x1fc>  // b.pmore
     47c:	cmp	w1, #0x0
     480:	b.le	448 <grub_udf_dir_iter+0x1fc>
     484:	b	324 <grub_udf_dir_iter+0xd8>
	...

0000000000000498 <grub_udf_close>:
     498:	stp	x29, x30, [sp, #-32]!
     49c:	mov	x29, sp
     4a0:	str	x19, [sp, #16]
     4a4:	ldr	x19, [x0, #80]
     4a8:	cbz	x19, 4bc <grub_udf_close+0x24>
     4ac:	ldr	x0, [x19]
     4b0:	bl	0 <grub_free>
     4b4:	mov	x0, x19
     4b8:	bl	0 <grub_free>
     4bc:	adrp	x0, 0 <read_string>
     4c0:	ldr	x0, [x0]
     4c4:	ldr	x0, [x0]
     4c8:	bl	0 <grub_dl_unref>
     4cc:	mov	w0, #0x0                   	// #0
     4d0:	ldr	x19, [sp, #16]
     4d4:	ldp	x29, x30, [sp], #32
     4d8:	ret
     4dc:	nop
	...

00000000000004e8 <grub_udf_get_block>:
     4e8:	ldr	w4, [x0, #3028]
     4ec:	cmp	w4, w1, uxth
     4f0:	b.gt	518 <grub_udf_get_block+0x30>
     4f4:	stp	x29, x30, [sp, #-16]!
     4f8:	adrp	x0, 0 <read_string>
     4fc:	mov	x29, sp
     500:	ldr	x1, [x0]
     504:	mov	w0, #0x9                   	// #9
     508:	bl	0 <grub_error>
     50c:	mov	w0, #0x0                   	// #0
     510:	ldp	x29, x30, [sp], #16
     514:	ret
     518:	and	w3, w1, #0xffff
     51c:	add	x3, x0, w3, sxtw #3
     520:	ldr	x1, [x3, #2960]
     524:	mov	x3, #0xc4                  	// #196
     528:	ldrh	w1, [x1, #4]
     52c:	madd	x0, x1, x3, x0
     530:	ldr	w0, [x0, #2756]
     534:	add	w0, w2, w0
     538:	ret
     53c:	nop
	...

0000000000000548 <grub_udf_read_block>:
     548:	stp	x29, x30, [sp, #-64]!
     54c:	mov	x29, sp
     550:	stp	x19, x20, [sp, #16]
     554:	mov	x19, x0
     558:	ldrh	w0, [x0, #12]
     55c:	stp	x21, x22, [sp, #32]
     560:	cmp	w0, #0x105
     564:	str	x23, [sp, #48]
     568:	b.eq	58c <grub_udf_read_block+0x44>  // b.none
     56c:	cmp	w0, #0x10a
     570:	b.eq	638 <grub_udf_read_block+0xf0>  // b.none
     574:	adrp	x0, 0 <read_string>
     578:	ldr	x1, [x0]
     57c:	mov	w0, #0x9                   	// #9
     580:	bl	0 <grub_error>
     584:	mov	x0, #0x0                   	// #0
     588:	b	728 <grub_udf_read_block+0x1e0>
     58c:	ldp	w0, w2, [x19, #180]
     590:	add	x5, x19, #0xbc
     594:	add	x5, x5, x0
     598:	ldr	x0, [x19]
     59c:	mov	x20, #0x0                   	// #0
     5a0:	ldr	w21, [x0, #732]
     5a4:	ldrh	w0, [x19, #46]
     5a8:	mul	x21, x21, x1
     5ac:	tst	x0, #0x7
     5b0:	b.eq	6d4 <grub_udf_read_block+0x18c>  // b.none
     5b4:	cmp	x2, #0xf
     5b8:	b.le	6dc <grub_udf_read_block+0x194>
     5bc:	ldr	w0, [x5]
     5c0:	and	w22, w0, #0x3fffffff
     5c4:	lsr	w0, w0, #30
     5c8:	cmp	w0, #0x3
     5cc:	b.ne	74c <grub_udf_read_block+0x204>  // b.any
     5d0:	ldrh	w1, [x5, #8]
     5d4:	ldr	w2, [x5, #4]
     5d8:	ldr	x0, [x19]
     5dc:	bl	4e8 <grub_udf_get_block>
     5e0:	mov	w23, w0
     5e4:	cbnz	x20, 5fc <grub_udf_read_block+0xb4>
     5e8:	ldr	x0, [x19]
     5ec:	ldr	w0, [x0, #732]
     5f0:	bl	0 <grub_malloc>
     5f4:	mov	x20, x0
     5f8:	cbz	x0, 584 <grub_udf_read_block+0x3c>
     5fc:	ldr	x0, [x19]
     600:	mov	x4, x20
     604:	and	x3, x22, #0x3fffffff
     608:	mov	x2, #0x0                   	// #0
     60c:	ldr	w1, [x0, #3032]
     610:	ldr	x0, [x0]
     614:	lsl	x1, x23, x1
     618:	bl	0 <grub_disk_read>
     61c:	cbnz	w0, 6dc <grub_udf_read_block+0x194>
     620:	ldrh	w0, [x20]
     624:	cmp	w0, #0x102
     628:	b.ne	6b8 <grub_udf_read_block+0x170>  // b.any
     62c:	ldr	w2, [x20, #20]
     630:	add	x5, x20, #0x18
     634:	b	5b4 <grub_udf_read_block+0x6c>
     638:	ldp	w0, w2, [x19, #220]
     63c:	add	x5, x19, #0xe4
     640:	add	x5, x5, x0
     644:	b	598 <grub_udf_read_block+0x50>
     648:	ldr	w0, [x5]
     64c:	and	w22, w0, #0x3fffffff
     650:	lsr	w0, w0, #30
     654:	cmp	w0, #0x3
     658:	b.ne	6e8 <grub_udf_read_block+0x1a0>  // b.any
     65c:	ldrh	w1, [x19, #8]
     660:	ldr	w2, [x5, #4]
     664:	ldr	x0, [x19]
     668:	bl	4e8 <grub_udf_get_block>
     66c:	mov	w23, w0
     670:	cbnz	x20, 688 <grub_udf_read_block+0x140>
     674:	ldr	x0, [x19]
     678:	ldr	w0, [x0, #732]
     67c:	bl	0 <grub_malloc>
     680:	mov	x20, x0
     684:	cbz	x0, 584 <grub_udf_read_block+0x3c>
     688:	ldr	x0, [x19]
     68c:	mov	x4, x20
     690:	and	x3, x22, #0x3fffffff
     694:	mov	x2, #0x0                   	// #0
     698:	ldr	w1, [x0, #3032]
     69c:	ldr	x0, [x0]
     6a0:	lsl	x1, x23, x1
     6a4:	bl	0 <grub_disk_read>
     6a8:	cbnz	w0, 6dc <grub_udf_read_block+0x194>
     6ac:	ldrh	w0, [x20]
     6b0:	cmp	w0, #0x102
     6b4:	b.eq	6cc <grub_udf_read_block+0x184>  // b.none
     6b8:	adrp	x0, 0 <read_string>
     6bc:	ldr	x1, [x0]
     6c0:	mov	w0, #0x9                   	// #9
     6c4:	bl	0 <grub_error>
     6c8:	b	6dc <grub_udf_read_block+0x194>
     6cc:	ldr	w2, [x20, #20]
     6d0:	add	x5, x20, #0x18
     6d4:	cmp	x2, #0x7
     6d8:	b.gt	648 <grub_udf_read_block+0x100>
     6dc:	mov	x0, x20
     6e0:	bl	0 <grub_free>
     6e4:	b	584 <grub_udf_read_block+0x3c>
     6e8:	cmp	x22, x21
     6ec:	b.ls	73c <grub_udf_read_block+0x1f4>  // b.plast
     6f0:	ldr	w22, [x5, #4]
     6f4:	mov	x0, x20
     6f8:	bl	0 <grub_free>
     6fc:	tst	w22, #0xc0000000
     700:	b.ne	584 <grub_udf_read_block+0x3c>  // b.any
     704:	ldrh	w1, [x19, #8]
     708:	mov	w2, w22
     70c:	ldr	x0, [x19]
     710:	bl	4e8 <grub_udf_get_block>
     714:	ldr	x1, [x19]
     718:	ldr	w1, [x1, #3032]
     71c:	add	w1, w1, #0x9
     720:	lsr	x21, x21, x1
     724:	add	x0, x21, w0, uxtw
     728:	ldp	x19, x20, [sp, #16]
     72c:	ldp	x21, x22, [sp, #32]
     730:	ldr	x23, [sp, #48]
     734:	ldp	x29, x30, [sp], #64
     738:	ret
     73c:	sub	x21, x21, x22
     740:	add	x5, x5, #0x8
     744:	sub	x2, x2, #0x8
     748:	b	6d4 <grub_udf_read_block+0x18c>
     74c:	cmp	x22, x21
     750:	b.ls	778 <grub_udf_read_block+0x230>  // b.plast
     754:	ldr	w22, [x5, #4]
     758:	mov	x0, x20
     75c:	ldrh	w23, [x5, #8]
     760:	bl	0 <grub_free>
     764:	tst	w22, #0xc0000000
     768:	b.ne	584 <grub_udf_read_block+0x3c>  // b.any
     76c:	mov	w2, w22
     770:	mov	w1, w23
     774:	b	70c <grub_udf_read_block+0x1c4>
     778:	sub	x21, x21, x22
     77c:	add	x5, x5, #0x10
     780:	sub	x2, x2, #0x10
     784:	b	5b4 <grub_udf_read_block+0x6c>
	...

0000000000000798 <grub_udf_mount>:
     798:	sub	sp, sp, #0x240
     79c:	stp	x29, x30, [sp]
     7a0:	mov	x29, sp
     7a4:	stp	x19, x20, [sp, #16]
     7a8:	mov	x20, x0
     7ac:	mov	x0, #0xbe0                 	// #3040
     7b0:	stp	x21, x22, [sp, #32]
     7b4:	stp	x23, x24, [sp, #48]
     7b8:	stp	x25, x26, [sp, #64]
     7bc:	str	x27, [sp, #80]
     7c0:	bl	0 <grub_malloc>
     7c4:	mov	x19, x0
     7c8:	cbz	x0, a80 <grub_udf_mount+0x2e8>
     7cc:	mov	w21, #0x0                   	// #0
     7d0:	adrp	x23, 0 <read_string>
     7d4:	str	x20, [x0]
     7d8:	ldr	x22, [x23]
     7dc:	b	818 <grub_udf_mount+0x80>
     7e0:	ldrh	w0, [sp, #96]
     7e4:	cmp	w0, #0x2
     7e8:	b.ne	814 <grub_udf_mount+0x7c>  // b.any
     7ec:	ldr	w0, [x22]
     7f0:	ldr	w1, [sp, #108]
     7f4:	cmp	w1, w0
     7f8:	b.ne	814 <grub_udf_mount+0x7c>  // b.any
     7fc:	ldr	w25, [sp, #116]
     800:	cbnz	w25, aa4 <grub_udf_mount+0x30c>
     804:	add	w21, w21, #0x1
     808:	cmp	w21, #0x4
     80c:	b.ne	7d8 <grub_udf_mount+0x40>  // b.any
     810:	b	83c <grub_udf_mount+0xa4>
     814:	add	x22, x22, #0x4
     818:	ldr	w1, [x22]
     81c:	cbz	w1, 804 <grub_udf_mount+0x6c>
     820:	add	x4, sp, #0x60
     824:	mov	x0, x20
     828:	mov	x3, #0x18                  	// #24
     82c:	mov	x2, #0x0                   	// #0
     830:	lsl	w1, w1, w21
     834:	bl	0 <grub_disk_read>
     838:	cbz	w0, 7e0 <grub_udf_mount+0x48>
     83c:	adrp	x0, 0 <read_string>
     840:	ldr	x1, [x0]
     844:	b	8c4 <grub_udf_mount+0x12c>
     848:	add	x22, x19, #0x208
     84c:	mov	w23, #0xc4                  	// #196
     850:	mov	x24, #0xa08                 	// #2568
     854:	str	xzr, [x19, #3024]
     858:	lsl	w26, w25, w21
     85c:	add	x4, sp, #0x60
     860:	mov	x1, x26
     864:	mov	x0, x20
     868:	mov	x3, #0x10                  	// #16
     86c:	mov	x2, #0x0                   	// #0
     870:	bl	0 <grub_disk_read>
     874:	cbnz	w0, 83c <grub_udf_mount+0xa4>
     878:	ldrh	w0, [sp, #96]
     87c:	cmp	w0, #0x1
     880:	b.ne	8a8 <grub_udf_mount+0x110>  // b.any
     884:	add	x4, x19, #0x8
     888:	mov	x1, x26
     88c:	mov	x0, x20
     890:	mov	x3, #0x200                 	// #512
     894:	mov	x2, #0x0                   	// #0
     898:	bl	0 <grub_disk_read>
     89c:	cbnz	w0, 83c <grub_udf_mount+0xa4>
     8a0:	add	w25, w25, #0x1
     8a4:	b	858 <grub_udf_mount+0xc0>
     8a8:	cmp	w0, #0x5
     8ac:	b.ne	90c <grub_udf_mount+0x174>  // b.any
     8b0:	ldr	w4, [x19, #3024]
     8b4:	cmp	w4, #0x1
     8b8:	b.le	8dc <grub_udf_mount+0x144>
     8bc:	adrp	x0, 0 <read_string>
     8c0:	ldr	x1, [x0]
     8c4:	mov	w0, #0x9                   	// #9
     8c8:	bl	0 <grub_error>
     8cc:	mov	x0, x19
     8d0:	mov	x19, #0x0                   	// #0
     8d4:	bl	0 <grub_free>
     8d8:	b	a80 <grub_udf_mount+0x2e8>
     8dc:	smaddl	x4, w4, w23, x24
     8e0:	mov	x1, x26
     8e4:	mov	x0, x20
     8e8:	mov	x3, #0xc4                  	// #196
     8ec:	add	x4, x19, x4
     8f0:	mov	x2, #0x0                   	// #0
     8f4:	bl	0 <grub_disk_read>
     8f8:	cbnz	w0, 83c <grub_udf_mount+0xa4>
     8fc:	ldr	w0, [x19, #3024]
     900:	add	w0, w0, #0x1
     904:	str	w0, [x19, #3024]
     908:	b	8a0 <grub_udf_mount+0x108>
     90c:	cmp	w0, #0x6
     910:	b.ne	998 <grub_udf_mount+0x200>  // b.any
     914:	mov	x4, x22
     918:	mov	x1, x26
     91c:	mov	x0, x20
     920:	mov	x3, #0x800                 	// #2048
     924:	mov	x2, #0x0                   	// #0
     928:	bl	0 <grub_disk_read>
     92c:	cbnz	w0, 83c <grub_udf_mount+0xa4>
     930:	ldr	w0, [x19, #788]
     934:	ldr	w1, [x19, #3028]
     938:	add	w1, w0, w1
     93c:	cmp	w1, #0x6
     940:	b.ls	950 <grub_udf_mount+0x1b8>  // b.plast
     944:	adrp	x0, 0 <read_string>
     948:	ldr	x1, [x0]
     94c:	b	8c4 <grub_udf_mount+0x12c>
     950:	add	x1, x19, #0x3c0
     954:	cmp	w0, #0x0
     958:	b.le	8a0 <grub_udf_mount+0x108>
     95c:	ldrb	w2, [x1]
     960:	cmp	w2, #0x1
     964:	b.eq	974 <grub_udf_mount+0x1dc>  // b.none
     968:	adrp	x0, 0 <read_string>
     96c:	ldr	x1, [x0]
     970:	b	8c4 <grub_udf_mount+0x12c>
     974:	ldr	w2, [x19, #3028]
     978:	sub	w0, w0, #0x1
     97c:	add	w3, w2, #0x1
     980:	str	w3, [x19, #3028]
     984:	add	x2, x19, w2, sxtw #3
     988:	str	x1, [x2, #2960]
     98c:	ldrb	w2, [x1, #1]
     990:	add	x1, x1, x2
     994:	b	954 <grub_udf_mount+0x1bc>
     998:	cmp	w0, #0x8
     99c:	b.ls	9ac <grub_udf_mount+0x214>  // b.plast
     9a0:	adrp	x0, 0 <read_string>
     9a4:	ldr	x1, [x0]
     9a8:	b	8c4 <grub_udf_mount+0x12c>
     9ac:	b.ne	8a0 <grub_udf_mount+0x108>  // b.any
     9b0:	ldr	w6, [x19, #3028]
     9b4:	add	x7, x19, #0xb90
     9b8:	add	x8, x19, #0x95a
     9bc:	mov	x1, #0x0                   	// #0
     9c0:	mov	x4, #0xc4                  	// #196
     9c4:	cmp	w6, w1
     9c8:	b.le	a20 <grub_udf_mount+0x288>
     9cc:	ldr	w3, [x19, #3024]
     9d0:	mov	x0, #0x0                   	// #0
     9d4:	b	a04 <grub_udf_mount+0x26c>
     9d8:	madd	x2, x0, x4, x4
     9dc:	add	x9, x0, #0x1
     9e0:	ldr	x5, [x7, x1, lsl #3]
     9e4:	ldrh	w2, [x8, x2]
     9e8:	ldrh	w10, [x5, #4]
     9ec:	cmp	w10, w2
     9f0:	b.ne	a00 <grub_udf_mount+0x268>  // b.any
     9f4:	strh	w0, [x5, #4]
     9f8:	add	x1, x1, #0x1
     9fc:	b	9c4 <grub_udf_mount+0x22c>
     a00:	mov	x0, x9
     a04:	cmp	w3, w0
     a08:	b.gt	9d8 <grub_udf_mount+0x240>
     a0c:	cmp	w3, w0
     a10:	b.ne	9f8 <grub_udf_mount+0x260>  // b.any
     a14:	adrp	x0, 0 <read_string>
     a18:	ldr	x1, [x0]
     a1c:	b	8c4 <grub_udf_mount+0x12c>
     a20:	ldrh	w1, [x19, #776]
     a24:	mov	x0, x19
     a28:	ldr	w2, [x19, #772]
     a2c:	bl	4e8 <grub_udf_get_block>
     a30:	adrp	x1, 0 <read_string>
     a34:	ldr	x1, [x1]
     a38:	ldr	w1, [x1]
     a3c:	cbnz	w1, 8cc <grub_udf_mount+0x134>
     a40:	lsl	w1, w0, w21
     a44:	add	x4, sp, #0x60
     a48:	mov	x0, x20
     a4c:	mov	x3, #0x1e0                 	// #480
     a50:	mov	x2, #0x0                   	// #0
     a54:	bl	0 <grub_disk_read>
     a58:	cbnz	w0, 83c <grub_udf_mount+0xa4>
     a5c:	ldrh	w0, [sp, #96]
     a60:	cmp	w0, #0x100
     a64:	b.eq	a74 <grub_udf_mount+0x2dc>  // b.none
     a68:	adrp	x0, 0 <read_string>
     a6c:	ldr	x1, [x0]
     a70:	b	8c4 <grub_udf_mount+0x12c>
     a74:	add	x0, x19, #0xbc0
     a78:	ldp	x2, x3, [sp, #496]
     a7c:	stp	x2, x3, [x0]
     a80:	mov	x0, x19
     a84:	ldp	x29, x30, [sp]
     a88:	ldp	x19, x20, [sp, #16]
     a8c:	ldp	x21, x22, [sp, #32]
     a90:	ldp	x23, x24, [sp, #48]
     a94:	ldp	x25, x26, [sp, #64]
     a98:	ldr	x27, [sp, #80]
     a9c:	add	sp, sp, #0x240
     aa0:	ret
     aa4:	add	w0, w21, #0x9
     aa8:	mov	w23, #0x7fff                	// #32767
     aac:	mov	w24, #0x7ff                 	// #2047
     ab0:	add	x22, sp, #0x61
     ab4:	asr	w23, w23, w0
     ab8:	add	w23, w23, #0x1
     abc:	asr	w24, w24, w0
     ac0:	add	w24, w24, #0x1
     ac4:	adrp	x27, 0 <read_string>
     ac8:	adrp	x26, 0 <read_string>
     acc:	str	w21, [x19, #3032]
     ad0:	add	x4, sp, #0x60
     ad4:	mov	x0, x20
     ad8:	mov	x3, #0x7                   	// #7
     adc:	mov	x2, #0x0                   	// #0
     ae0:	lsl	w1, w23, w21
     ae4:	bl	0 <grub_disk_read>
     ae8:	cbnz	w0, 83c <grub_udf_mount+0xa4>
     aec:	ldr	x1, [x27]
     af0:	mov	x0, x22
     af4:	mov	x2, #0x5                   	// #5
     af8:	bl	0 <grub_memcmp>
     afc:	cbz	w0, 848 <grub_udf_mount+0xb0>
     b00:	ldr	x1, [x26]
     b04:	mov	x0, x22
     b08:	mov	x2, #0x5                   	// #5
     b0c:	bl	0 <grub_memcmp>
     b10:	cbz	w0, 848 <grub_udf_mount+0xb0>
     b14:	adrp	x0, 0 <read_string>
     b18:	mov	x2, #0x5                   	// #5
     b1c:	ldr	x1, [x0]
     b20:	mov	x0, x22
     b24:	bl	0 <grub_memcmp>
     b28:	cbz	w0, b8c <grub_udf_mount+0x3f4>
     b2c:	adrp	x0, 0 <read_string>
     b30:	mov	x2, #0x5                   	// #5
     b34:	ldr	x1, [x0]
     b38:	mov	x0, x22
     b3c:	bl	0 <grub_memcmp>
     b40:	cbz	w0, b8c <grub_udf_mount+0x3f4>
     b44:	adrp	x0, 0 <read_string>
     b48:	mov	x2, #0x5                   	// #5
     b4c:	ldr	x1, [x0]
     b50:	mov	x0, x22
     b54:	bl	0 <grub_memcmp>
     b58:	cbz	w0, b8c <grub_udf_mount+0x3f4>
     b5c:	adrp	x0, 0 <read_string>
     b60:	mov	x2, #0x5                   	// #5
     b64:	ldr	x1, [x0]
     b68:	mov	x0, x22
     b6c:	bl	0 <grub_memcmp>
     b70:	cbz	w0, b8c <grub_udf_mount+0x3f4>
     b74:	adrp	x0, 0 <read_string>
     b78:	mov	x2, #0x5                   	// #5
     b7c:	ldr	x1, [x0]
     b80:	mov	x0, x22
     b84:	bl	0 <grub_memcmp>
     b88:	cbnz	w0, 83c <grub_udf_mount+0xa4>
     b8c:	add	w23, w23, w24
     b90:	b	ad0 <grub_udf_mount+0x338>
     b94:	nop
	...

0000000000000c18 <grub_udf_read_icb>:
     c18:	stp	x29, x30, [sp, #-48]!
     c1c:	mov	x29, sp
     c20:	stp	x19, x20, [sp, #16]
     c24:	mov	x19, x2
     c28:	ldr	w2, [x1, #4]
     c2c:	stp	x21, x22, [sp, #32]
     c30:	mov	x21, x1
     c34:	ldrh	w1, [x1, #8]
     c38:	mov	x20, x0
     c3c:	bl	4e8 <grub_udf_get_block>
     c40:	mov	w1, w0
     c44:	adrp	x0, 0 <read_string>
     c48:	ldr	x22, [x0]
     c4c:	ldr	w0, [x22]
     c50:	cbnz	w0, c84 <grub_udf_read_icb+0x6c>
     c54:	ldr	w0, [x20, #3032]
     c58:	mov	w3, #0x1                   	// #1
     c5c:	add	x4, x19, #0xc
     c60:	add	w2, w0, #0x9
     c64:	lsl	w1, w1, w0
     c68:	ldr	x0, [x20]
     c6c:	lsl	w3, w3, w2
     c70:	sxtw	x3, w3
     c74:	mov	x2, #0x0                   	// #0
     c78:	bl	0 <grub_disk_read>
     c7c:	cbz	w0, c94 <grub_udf_read_icb+0x7c>
     c80:	ldr	w0, [x22]
     c84:	ldp	x19, x20, [sp, #16]
     c88:	ldp	x21, x22, [sp, #32]
     c8c:	ldp	x29, x30, [sp], #48
     c90:	ret
     c94:	ldrh	w1, [x19, #12]
     c98:	mov	w2, #0x10a                 	// #266
     c9c:	cmp	w1, #0x105
     ca0:	ccmp	w1, w2, #0x4, ne  // ne = any
     ca4:	b.eq	cc4 <grub_udf_read_icb+0xac>  // b.none
     ca8:	adrp	x0, 0 <read_string>
     cac:	ldp	x19, x20, [sp, #16]
     cb0:	ldp	x21, x22, [sp, #32]
     cb4:	ldp	x29, x30, [sp], #48
     cb8:	ldr	x1, [x0]
     cbc:	mov	w0, #0x9                   	// #9
     cc0:	b	0 <grub_error>
     cc4:	ldrh	w1, [x21, #8]
     cc8:	str	x20, [x19]
     ccc:	str	w1, [x19, #8]
     cd0:	b	c84 <grub_udf_read_icb+0x6c>
     cd4:	nop
	...

0000000000000ce8 <grub_udf_open>:
     ce8:	stp	x29, x30, [sp, #-80]!
     cec:	mov	x29, sp
     cf0:	stp	x21, x22, [sp, #32]
     cf4:	mov	x21, x0
     cf8:	adrp	x0, 0 <read_string>
     cfc:	stp	x23, x24, [sp, #48]
     d00:	mov	x22, x1
     d04:	ldr	x23, [x0]
     d08:	stp	x19, x20, [sp, #16]
     d0c:	ldr	x0, [x23]
     d10:	bl	0 <grub_dl_ref>
     d14:	ldr	x0, [x21, #8]
     d18:	ldr	x0, [x0]
     d1c:	bl	798 <grub_udf_mount>
     d20:	mov	x20, x0
     d24:	cbz	x0, dc0 <grub_udf_open+0xd8>
     d28:	ldr	w2, [x0, #3032]
     d2c:	mov	w24, #0x1                   	// #1
     d30:	add	w2, w2, #0x9
     d34:	lsl	w2, w24, w2
     d38:	sxtw	x2, w2
     d3c:	add	x0, x2, #0x10
     d40:	bl	0 <grub_malloc>
     d44:	mov	x19, x0
     d48:	cbz	x0, dc0 <grub_udf_open+0xd8>
     d4c:	mov	x2, x0
     d50:	add	x1, x20, #0xbc0
     d54:	mov	x0, x20
     d58:	bl	c18 <grub_udf_read_icb>
     d5c:	cbnz	w0, dc4 <grub_udf_open+0xdc>
     d60:	adrp	x0, 0 <read_string>
     d64:	mov	w5, w24
     d68:	add	x2, sp, #0x48
     d6c:	mov	x1, x19
     d70:	ldr	x4, [x0]
     d74:	adrp	x0, 0 <read_string>
     d78:	ldr	x3, [x0]
     d7c:	mov	x0, x22
     d80:	bl	0 <grub_fshelp_find_file>
     d84:	mov	w22, w0
     d88:	cbnz	w0, dc4 <grub_udf_open+0xdc>
     d8c:	ldr	x0, [sp, #72]
     d90:	str	x0, [x21, #80]
     d94:	str	xzr, [x21, #24]
     d98:	ldur	x0, [x0, #68]
     d9c:	str	x0, [x21, #64]
     da0:	mov	x0, x19
     da4:	bl	0 <grub_free>
     da8:	mov	w0, w22
     dac:	ldp	x19, x20, [sp, #16]
     db0:	ldp	x21, x22, [sp, #32]
     db4:	ldp	x23, x24, [sp, #48]
     db8:	ldp	x29, x30, [sp], #80
     dbc:	ret
     dc0:	mov	x19, #0x0                   	// #0
     dc4:	ldr	x0, [x23]
     dc8:	bl	0 <grub_dl_unref>
     dcc:	mov	x0, x20
     dd0:	bl	0 <grub_free>
     dd4:	mov	x0, x19
     dd8:	bl	0 <grub_free>
     ddc:	adrp	x0, 0 <read_string>
     de0:	ldr	x0, [x0]
     de4:	ldr	w22, [x0]
     de8:	b	da8 <grub_udf_open+0xc0>
     dec:	nop
	...

0000000000000e10 <read_dstring.constprop.0>:
     e10:	ldrb	w2, [x0]
     e14:	cbnz	w2, e38 <read_dstring.constprop.0+0x28>
     e18:	stp	x29, x30, [sp, #-16]!
     e1c:	mov	x0, #0x1                   	// #1
     e20:	mov	x29, sp
     e24:	bl	0 <grub_malloc>
     e28:	cbz	x0, e30 <read_dstring.constprop.0+0x20>
     e2c:	strb	wzr, [x0]
     e30:	ldp	x29, x30, [sp], #16
     e34:	ret
     e38:	ldrb	w1, [x0, #127]
     e3c:	mov	x3, #0x7f                  	// #127
     e40:	mov	x2, #0x0                   	// #0
     e44:	cmp	x1, #0x7f
     e48:	csel	x1, x1, x3, ls  // ls = plast
     e4c:	b	0 <read_string>

0000000000000e50 <grub_udf_label>:
     e50:	stp	x29, x30, [sp, #-32]!
     e54:	mov	x29, sp
     e58:	ldr	x0, [x0]
     e5c:	stp	x19, x20, [sp, #16]
     e60:	mov	x20, x1
     e64:	bl	798 <grub_udf_mount>
     e68:	cbz	x0, e9c <grub_udf_label+0x4c>
     e6c:	mov	x19, x0
     e70:	add	x0, x0, #0x25c
     e74:	bl	e10 <read_dstring.constprop.0>
     e78:	str	x0, [x20]
     e7c:	mov	x0, x19
     e80:	bl	0 <grub_free>
     e84:	adrp	x0, 0 <read_string>
     e88:	ldp	x19, x20, [sp, #16]
     e8c:	ldr	x0, [x0]
     e90:	ldp	x29, x30, [sp], #32
     e94:	ldr	w0, [x0]
     e98:	ret
     e9c:	str	xzr, [x20]
     ea0:	b	e84 <grub_udf_label+0x34>
     ea4:	nop
	...

0000000000000eb0 <grub_udf_uuid>:
     eb0:	sub	sp, sp, #0x80
     eb4:	stp	x29, x30, [sp, #32]
     eb8:	add	x29, sp, #0x20
     ebc:	ldr	x0, [x0]
     ec0:	stp	x19, x20, [sp, #48]
     ec4:	mov	x20, x1
     ec8:	stp	x21, x22, [sp, #64]
     ecc:	stp	x23, x24, [sp, #80]
     ed0:	bl	798 <grub_udf_mount>
     ed4:	cbz	x0, 107c <grub_udf_uuid+0x1cc>
     ed8:	mov	x21, x0
     edc:	add	x0, x0, #0x50
     ee0:	bl	e10 <read_dstring.constprop.0>
     ee4:	mov	x22, x0
     ee8:	cbz	x0, 1074 <grub_udf_uuid+0x1c4>
     eec:	bl	0 <grub_strlen>
     ef0:	mov	x24, x0
     ef4:	cmp	x0, #0x7
     ef8:	b.hi	f38 <grub_udf_uuid+0x88>  // b.pmore
     efc:	mov	x19, #0x0                   	// #0
     f00:	str	x19, [x20]
     f04:	mov	x0, x22
     f08:	bl	0 <grub_free>
     f0c:	mov	x0, x21
     f10:	bl	0 <grub_free>
     f14:	adrp	x0, 0 <read_string>
     f18:	ldp	x29, x30, [sp, #32]
     f1c:	ldr	x0, [x0]
     f20:	ldp	x19, x20, [sp, #48]
     f24:	ldr	w0, [x0]
     f28:	ldp	x21, x22, [sp, #64]
     f2c:	ldp	x23, x24, [sp, #80]
     f30:	add	sp, sp, #0x80
     f34:	ret
     f38:	mov	x0, #0x11                  	// #17
     f3c:	bl	0 <grub_malloc>
     f40:	mov	x19, x0
     f44:	cbz	x0, efc <grub_udf_uuid+0x4c>
     f48:	add	x23, sp, #0x68
     f4c:	mov	x2, #0x11                  	// #17
     f50:	mov	w1, #0x0                   	// #0
     f54:	mov	x0, x23
     f58:	bl	0 <grub_memset>
     f5c:	cmp	x24, #0x10
     f60:	mov	x1, x22
     f64:	mov	x0, x23
     f68:	mov	x2, #0x10                  	// #16
     f6c:	csel	x2, x24, x2, ls  // ls = plast
     f70:	bl	0 <grub_memmove>
     f74:	mov	x0, #0x0                   	// #0
     f78:	ldrb	w2, [x23, x0]
     f7c:	sub	w1, w2, #0x30
     f80:	cmp	w1, #0x9
     f84:	b.ls	ff4 <grub_udf_uuid+0x144>  // b.plast
     f88:	and	w2, w2, #0xffffffdf
     f8c:	sub	w2, w2, #0x41
     f90:	and	w2, w2, #0xff
     f94:	cmp	w2, #0x5
     f98:	b.ls	ff4 <grub_udf_uuid+0x144>  // b.plast
     f9c:	cmp	x0, #0x7
     fa0:	b.ls	1030 <grub_udf_uuid+0x180>  // b.plast
     fa4:	mov	x0, #0x0                   	// #0
     fa8:	ldrb	w1, [x23, x0]
     fac:	sub	w2, w1, #0x41
     fb0:	cmp	w2, #0x19
     fb4:	b.hi	fbc <grub_udf_uuid+0x10c>  // b.pmore
     fb8:	add	w1, w1, #0x20
     fbc:	strb	w1, [x19, x0]
     fc0:	add	x0, x0, #0x1
     fc4:	cmp	x0, #0x8
     fc8:	b.ne	fa8 <grub_udf_uuid+0xf8>  // b.any
     fcc:	adrp	x0, 0 <read_string>
     fd0:	ldrb	w6, [sp, #115]
     fd4:	ldrb	w5, [sp, #114]
     fd8:	mov	x1, #0x9                   	// #9
     fdc:	ldr	x2, [x0]
     fe0:	add	x0, x19, #0x8
     fe4:	ldrb	w4, [sp, #113]
     fe8:	ldrb	w3, [sp, #112]
     fec:	bl	0 <grub_snprintf>
     ff0:	b	f00 <grub_udf_uuid+0x50>
     ff4:	add	x0, x0, #0x1
     ff8:	cmp	x0, #0x10
     ffc:	b.ne	f78 <grub_udf_uuid+0xc8>  // b.any
    1000:	mov	x0, #0x0                   	// #0
    1004:	ldrb	w1, [x23, x0]
    1008:	sub	w2, w1, #0x41
    100c:	cmp	w2, #0x19
    1010:	b.hi	1018 <grub_udf_uuid+0x168>  // b.pmore
    1014:	add	w1, w1, #0x20
    1018:	strb	w1, [x19, x0]
    101c:	add	x0, x0, #0x1
    1020:	cmp	x0, #0x10
    1024:	b.ne	1004 <grub_udf_uuid+0x154>  // b.any
    1028:	strb	wzr, [x19, #16]
    102c:	b	f00 <grub_udf_uuid+0x50>
    1030:	ldrb	w0, [sp, #111]
    1034:	mov	x1, #0x11                  	// #17
    1038:	str	w0, [sp, #16]
    103c:	ldrb	w0, [sp, #110]
    1040:	str	w0, [sp, #8]
    1044:	ldrb	w0, [sp, #109]
    1048:	str	w0, [sp]
    104c:	adrp	x0, 0 <read_string>
    1050:	ldrb	w7, [sp, #108]
    1054:	ldrb	w6, [sp, #107]
    1058:	ldr	x2, [x0]
    105c:	mov	x0, x19
    1060:	ldrb	w5, [sp, #106]
    1064:	ldrb	w4, [sp, #105]
    1068:	ldrb	w3, [sp, #104]
    106c:	bl	0 <grub_snprintf>
    1070:	b	f00 <grub_udf_uuid+0x50>
    1074:	str	xzr, [x20]
    1078:	b	f0c <grub_udf_uuid+0x5c>
    107c:	str	xzr, [x20]
    1080:	b	f14 <grub_udf_uuid+0x64>
    1084:	nop
	...

00000000000010a0 <grub_udf_read_file>:
    10a0:	sub	sp, sp, #0x40
    10a4:	mov	x8, x0
    10a8:	stp	x29, x30, [sp, #32]
    10ac:	add	x29, sp, #0x20
    10b0:	str	x19, [sp, #48]
    10b4:	mov	x19, x4
    10b8:	ldrh	w4, [x0, #46]
    10bc:	and	w4, w4, #0x7
    10c0:	cmp	w4, #0x2
    10c4:	b.eq	1118 <grub_udf_read_file+0x78>  // b.none
    10c8:	mov	x0, x5
    10cc:	cmp	w4, #0x3
    10d0:	b.ne	1130 <grub_udf_read_file+0x90>  // b.any
    10d4:	ldrh	w1, [x8, #12]
    10d8:	cmp	w1, #0x105
    10dc:	b.ne	110c <grub_udf_read_file+0x6c>  // b.any
    10e0:	ldr	w1, [x8, #180]
    10e4:	add	x4, x8, #0xbc
    10e8:	add	x1, x4, x1
    10ec:	mov	x2, x19
    10f0:	add	x1, x1, x3
    10f4:	bl	0 <grub_memmove>
    10f8:	mov	x0, x19
    10fc:	ldp	x29, x30, [sp, #32]
    1100:	ldr	x19, [sp, #48]
    1104:	add	sp, sp, #0x40
    1108:	ret
    110c:	ldr	w1, [x8, #220]
    1110:	add	x4, x8, #0xe4
    1114:	b	10e8 <grub_udf_read_file+0x48>
    1118:	adrp	x0, 0 <read_string>
    111c:	ldr	x1, [x0]
    1120:	mov	w0, #0x9                   	// #9
    1124:	bl	0 <grub_error>
    1128:	mov	x0, #0x0                   	// #0
    112c:	b	10fc <grub_udf_read_file+0x5c>
    1130:	ldr	x9, [x8]
    1134:	str	xzr, [sp, #16]
    1138:	mov	x6, x5
    113c:	mov	x5, x19
    1140:	ldr	w4, [x9, #3032]
    1144:	str	w4, [sp, #8]
    1148:	ldur	x4, [x8, #68]
    114c:	str	x4, [sp]
    1150:	adrp	x4, 0 <read_string>
    1154:	ldr	x0, [x9]
    1158:	ldr	x7, [x4]
    115c:	mov	x4, x3
    1160:	mov	x3, x2
    1164:	mov	x2, x1
    1168:	mov	x1, x8
    116c:	bl	0 <grub_fshelp_read_file>
    1170:	b	10fc <grub_udf_read_file+0x5c>
    1174:	nop
	...

0000000000001188 <grub_udf_read>:
    1188:	mov	x5, x1
    118c:	mov	x4, x2
    1190:	ldp	x1, x2, [x0, #88]
    1194:	ldr	x3, [x0, #24]
    1198:	ldr	x0, [x0, #80]
    119c:	b	10a0 <grub_udf_read_file>

00000000000011a0 <grub_udf_read_symlink>:
    11a0:	stp	x29, x30, [sp, #-96]!
    11a4:	mov	x29, sp
    11a8:	stp	x21, x22, [sp, #32]
    11ac:	ldur	x21, [x0, #68]
    11b0:	stp	x19, x20, [sp, #16]
    11b4:	stp	x23, x24, [sp, #48]
    11b8:	cmp	x21, #0x3
    11bc:	stp	x25, x26, [sp, #64]
    11c0:	stp	x27, x28, [sp, #80]
    11c4:	b.hi	11d0 <grub_udf_read_symlink+0x30>  // b.pmore
    11c8:	mov	x20, #0x0                   	// #0
    11cc:	b	122c <grub_udf_read_symlink+0x8c>
    11d0:	mov	x19, x0
    11d4:	mov	x0, x21
    11d8:	bl	0 <grub_malloc>
    11dc:	mov	x26, x0
    11e0:	cbz	x0, 11c8 <grub_udf_read_symlink+0x28>
    11e4:	mov	x5, x0
    11e8:	mov	x4, x21
    11ec:	mov	x0, x19
    11f0:	mov	x3, #0x0                   	// #0
    11f4:	mov	x2, #0x0                   	// #0
    11f8:	mov	x1, #0x0                   	// #0
    11fc:	bl	10a0 <grub_udf_read_file>
    1200:	tbz	x0, #63, 1210 <grub_udf_read_symlink+0x70>
    1204:	mov	x0, x26
    1208:	bl	0 <grub_free>
    120c:	b	11c8 <grub_udf_read_symlink+0x28>
    1210:	lsl	x0, x21, #1
    1214:	add	x0, x0, #0x1
    1218:	bl	0 <grub_malloc>
    121c:	mov	x20, x0
    1220:	cbnz	x0, 1340 <grub_udf_read_symlink+0x1a0>
    1224:	mov	x0, x26
    1228:	bl	0 <grub_free>
    122c:	mov	x0, x20
    1230:	ldp	x19, x20, [sp, #16]
    1234:	ldp	x21, x22, [sp, #32]
    1238:	ldp	x23, x24, [sp, #48]
    123c:	ldp	x25, x26, [sp, #64]
    1240:	ldp	x27, x28, [sp, #80]
    1244:	ldp	x29, x30, [sp], #96
    1248:	ret
    124c:	sub	x3, x27, x26
    1250:	add	x0, x3, #0x4
    1254:	cmp	x0, x21
    1258:	b.hi	135c <grub_udf_read_symlink+0x1bc>  // b.pmore
    125c:	ldrb	w0, [x27, #2]
    1260:	cbnz	w0, 135c <grub_udf_read_symlink+0x1bc>
    1264:	ldrb	w0, [x27, #3]
    1268:	cbnz	w0, 135c <grub_udf_read_symlink+0x1bc>
    126c:	ldrb	w1, [x27, #1]
    1270:	add	w0, w1, #0x4
    1274:	sxtw	x22, w0
    1278:	add	x0, x3, w0, sxtw
    127c:	cmp	x0, x21
    1280:	b.hi	135c <grub_udf_read_symlink+0x1bc>  // b.pmore
    1284:	ldrb	w0, [x27]
    1288:	sub	w0, w0, #0x1
    128c:	cmp	w0, #0x4
    1290:	b.hi	135c <grub_udf_read_symlink+0x1bc>  // b.pmore
    1294:	ldr	x3, [x24]
    1298:	ldrb	w0, [x3, w0, uxtw]
    129c:	adr	x3, 12a8 <grub_udf_read_symlink+0x108>
    12a0:	add	x0, x3, w0, sxtb #2
    12a4:	br	x0
    12a8:	cbnz	w1, 135c <grub_udf_read_symlink+0x1bc>
    12ac:	mov	x2, x20
    12b0:	strb	w28, [x2], #1
    12b4:	add	x27, x27, x22
    12b8:	cmp	x27, x23
    12bc:	b.cc	124c <grub_udf_read_symlink+0xac>  // b.lo, b.ul, b.last
    12c0:	strb	wzr, [x2]
    12c4:	b	1224 <grub_udf_read_symlink+0x84>
    12c8:	cmp	x2, x20
    12cc:	b.eq	12e0 <grub_udf_read_symlink+0x140>  // b.none
    12d0:	strb	w28, [x2], #1
    12d4:	mov	w0, #0x2e2e                	// #11822
    12d8:	strh	w0, [x2], #2
    12dc:	b	12b4 <grub_udf_read_symlink+0x114>
    12e0:	mov	x2, x20
    12e4:	b	12d4 <grub_udf_read_symlink+0x134>
    12e8:	cmp	x2, x20
    12ec:	b.eq	12fc <grub_udf_read_symlink+0x15c>  // b.none
    12f0:	strb	w28, [x2], #1
    12f4:	strb	w25, [x2], #1
    12f8:	b	12b4 <grub_udf_read_symlink+0x114>
    12fc:	mov	x2, x20
    1300:	b	12f4 <grub_udf_read_symlink+0x154>
    1304:	cmp	x2, x20
    1308:	b.eq	1338 <grub_udf_read_symlink+0x198>  // b.none
    130c:	mov	x19, x2
    1310:	strb	w28, [x19], #1
    1314:	mov	x2, x19
    1318:	sub	x1, x22, #0x4
    131c:	add	x0, x27, #0x4
    1320:	bl	0 <read_string>
    1324:	cbz	x0, 135c <grub_udf_read_symlink+0x1bc>
    1328:	mov	x0, x19
    132c:	bl	0 <grub_strlen>
    1330:	add	x2, x19, x0
    1334:	b	12b4 <grub_udf_read_symlink+0x114>
    1338:	mov	x19, x20
    133c:	b	1314 <grub_udf_read_symlink+0x174>
    1340:	mov	x2, x0
    1344:	mov	x27, x26
    1348:	add	x23, x26, x21
    134c:	adrp	x24, 0 <read_string>
    1350:	mov	w28, #0x2f                  	// #47
    1354:	mov	w25, #0x2e                  	// #46
    1358:	b	12b8 <grub_udf_read_symlink+0x118>
    135c:	mov	x0, x26
    1360:	bl	0 <grub_free>
    1364:	mov	x0, x20
    1368:	bl	0 <grub_free>
    136c:	adrp	x0, 0 <read_string>
    1370:	ldr	x1, [x0]
    1374:	mov	w0, #0x9                   	// #9
    1378:	bl	0 <grub_error>
    137c:	b	11c8 <grub_udf_read_symlink+0x28>
	...

0000000000001390 <grub_udf_iterate_dir.part.0>:
    1390:	stp	x29, x30, [sp, #-400]!
    1394:	mov	x29, sp
    1398:	stp	x21, x22, [sp, #32]
    139c:	mov	x21, x0
    13a0:	mov	x22, x1
    13a4:	stp	x23, x24, [sp, #48]
    13a8:	mov	x23, x2
    13ac:	mov	w24, #0x1                   	// #1
    13b0:	stp	x25, x26, [sp, #64]
    13b4:	add	x25, sp, #0x7c
    13b8:	stp	x19, x20, [sp, #16]
    13bc:	mov	x19, #0x0                   	// #0
    13c0:	str	x27, [sp, #80]
    13c4:	ldur	x0, [x21, #68]
    13c8:	cmp	x19, x0
    13cc:	b.cs	13f4 <grub_udf_iterate_dir.part.0+0x64>  // b.hs, b.nlast
    13d0:	add	x5, sp, #0x68
    13d4:	mov	x3, x19
    13d8:	mov	x0, x21
    13dc:	mov	x4, #0x26                  	// #38
    13e0:	mov	x2, #0x0                   	// #0
    13e4:	mov	x1, #0x0                   	// #0
    13e8:	bl	10a0 <grub_udf_read_file>
    13ec:	cmp	x0, #0x26
    13f0:	b.eq	1414 <grub_udf_iterate_dir.part.0+0x84>  // b.none
    13f4:	mov	w0, #0x0                   	// #0
    13f8:	ldp	x19, x20, [sp, #16]
    13fc:	ldp	x21, x22, [sp, #32]
    1400:	ldp	x23, x24, [sp, #48]
    1404:	ldp	x25, x26, [sp, #64]
    1408:	ldr	x27, [sp, #80]
    140c:	ldp	x29, x30, [sp], #400
    1410:	ret
    1414:	ldrh	w0, [sp, #104]
    1418:	cmp	w0, #0x101
    141c:	b.eq	1434 <grub_udf_iterate_dir.part.0+0xa4>  // b.none
    1420:	adrp	x0, 0 <read_string>
    1424:	ldr	x1, [x0]
    1428:	mov	w0, #0x9                   	// #9
    142c:	bl	0 <grub_error>
    1430:	b	13f4 <grub_udf_iterate_dir.part.0+0x64>
    1434:	ldrb	w0, [sp, #122]
    1438:	ldrh	w26, [sp, #140]
    143c:	add	x26, x26, #0x26
    1440:	add	x26, x26, x19
    1444:	tbnz	w0, #2, 150c <grub_udf_iterate_dir.part.0+0x17c>
    1448:	ldr	x0, [x21]
    144c:	ldr	w0, [x0, #3032]
    1450:	add	w0, w0, #0x9
    1454:	lsl	w0, w24, w0
    1458:	sxtw	x0, w0
    145c:	add	x0, x0, #0x10
    1460:	bl	0 <grub_malloc>
    1464:	mov	x20, x0
    1468:	cbz	x0, 13f4 <grub_udf_iterate_dir.part.0+0x64>
    146c:	mov	x2, x0
    1470:	mov	x1, x25
    1474:	ldr	x0, [x21]
    1478:	bl	c18 <grub_udf_read_icb>
    147c:	cbnz	w0, 13f4 <grub_udf_iterate_dir.part.0+0x64>
    1480:	ldrb	w19, [sp, #122]
    1484:	tbz	w19, #3, 14ac <grub_udf_iterate_dir.part.0+0x11c>
    1488:	adrp	x0, 0 <read_string>
    148c:	mov	x3, x23
    1490:	mov	x2, x20
    1494:	mov	w1, #0x2                   	// #2
    1498:	ldr	x0, [x0]
    149c:	blr	x22
    14a0:	cbz	w0, 150c <grub_udf_iterate_dir.part.0+0x17c>
    14a4:	mov	w0, #0x1                   	// #1
    14a8:	b	13f8 <grub_udf_iterate_dir.part.0+0x68>
    14ac:	ldrb	w0, [x20, #39]
    14b0:	ubfx	x19, x19, #1, #1
    14b4:	ldrb	w4, [sp, #123]
    14b8:	mov	x1, #0x0                   	// #0
    14bc:	cmp	w0, #0xc
    14c0:	mov	w0, #0x3                   	// #3
    14c4:	add	x5, sp, #0x90
    14c8:	csinc	w19, w0, w19, eq  // eq = none
    14cc:	mov	x3, x26
    14d0:	mov	x0, x21
    14d4:	mov	x2, #0x0                   	// #0
    14d8:	bl	10a0 <grub_udf_read_file>
    14dc:	mov	x1, x0
    14e0:	ldrb	w0, [sp, #123]
    14e4:	cmp	x1, x0
    14e8:	b.ne	13f4 <grub_udf_iterate_dir.part.0+0x64>  // b.any
    14ec:	add	x0, sp, #0x90
    14f0:	mov	x2, #0x0                   	// #0
    14f4:	bl	0 <read_string>
    14f8:	mov	x27, x0
    14fc:	cbnz	x0, 1520 <grub_udf_iterate_dir.part.0+0x190>
    1500:	bl	0 <grub_print_error>
    1504:	mov	x0, x27
    1508:	bl	0 <grub_free>
    150c:	ldrb	w19, [sp, #123]
    1510:	add	x19, x19, #0x3
    1514:	add	x19, x19, x26
    1518:	and	x19, x19, #0xfffffffffffffffc
    151c:	b	13c4 <grub_udf_iterate_dir.part.0+0x34>
    1520:	mov	x3, x23
    1524:	mov	x2, x20
    1528:	mov	w1, w19
    152c:	blr	x22
    1530:	cbz	w0, 1504 <grub_udf_iterate_dir.part.0+0x174>
    1534:	mov	x0, x27
    1538:	bl	0 <grub_free>
    153c:	b	14a4 <grub_udf_iterate_dir.part.0+0x114>
	...

0000000000001550 <grub_udf_iterate_dir>:
    1550:	stp	x29, x30, [sp, #-64]!
    1554:	mov	x29, sp
    1558:	stp	x21, x22, [sp, #32]
    155c:	mov	x22, x0
    1560:	mov	w21, #0x1                   	// #1
    1564:	ldr	x0, [x0]
    1568:	stp	x19, x20, [sp, #16]
    156c:	mov	x19, x1
    1570:	mov	x20, x2
    1574:	ldr	w3, [x0, #3032]
    1578:	str	x23, [sp, #48]
    157c:	add	w3, w3, #0x9
    1580:	lsl	w3, w21, w3
    1584:	sxtw	x3, w3
    1588:	add	x0, x3, #0x10
    158c:	bl	0 <grub_malloc>
    1590:	cbz	x0, 15f4 <grub_udf_iterate_dir+0xa4>
    1594:	ldr	x1, [x22]
    1598:	mov	x23, x0
    159c:	ldr	w3, [x1, #3032]
    15a0:	mov	x1, x22
    15a4:	add	w3, w3, #0x9
    15a8:	lsl	w3, w21, w3
    15ac:	sxtw	x3, w3
    15b0:	add	x2, x3, #0x10
    15b4:	bl	0 <grub_memmove>
    15b8:	adrp	x0, 0 <read_string>
    15bc:	mov	x3, x20
    15c0:	mov	x2, x23
    15c4:	mov	w1, #0x2                   	// #2
    15c8:	ldr	x0, [x0]
    15cc:	blr	x19
    15d0:	cbnz	w0, 160c <grub_udf_iterate_dir+0xbc>
    15d4:	mov	x2, x20
    15d8:	mov	x1, x19
    15dc:	mov	x0, x22
    15e0:	ldp	x19, x20, [sp, #16]
    15e4:	ldp	x21, x22, [sp, #32]
    15e8:	ldr	x23, [sp, #48]
    15ec:	ldp	x29, x30, [sp], #64
    15f0:	b	1390 <grub_udf_iterate_dir.part.0>
    15f4:	mov	w0, #0x0                   	// #0
    15f8:	ldp	x19, x20, [sp, #16]
    15fc:	ldp	x21, x22, [sp, #32]
    1600:	ldr	x23, [sp, #48]
    1604:	ldp	x29, x30, [sp], #64
    1608:	ret
    160c:	mov	w0, w21
    1610:	b	15f8 <grub_udf_iterate_dir+0xa8>
    1614:	nop
	...

0000000000001620 <grub_udf_dir>:
    1620:	stp	x29, x30, [sp, #-80]!
    1624:	mov	x29, sp
    1628:	stp	x19, x20, [sp, #16]
    162c:	mov	x19, x0
    1630:	adrp	x0, 0 <read_string>
    1634:	stp	x21, x22, [sp, #32]
    1638:	mov	x21, x1
    163c:	ldr	x22, [x0]
    1640:	stp	xzr, x2, [sp, #56]
    1644:	str	x3, [sp, #72]
    1648:	ldr	x0, [x22]
    164c:	bl	0 <grub_dl_ref>
    1650:	ldr	x0, [x19]
    1654:	bl	798 <grub_udf_mount>
    1658:	mov	x20, x0
    165c:	cbnz	x0, 1698 <grub_udf_dir+0x78>
    1660:	mov	x19, #0x0                   	// #0
    1664:	mov	x0, x19
    1668:	bl	0 <grub_free>
    166c:	mov	x0, x20
    1670:	bl	0 <grub_free>
    1674:	ldr	x0, [x22]
    1678:	bl	0 <grub_dl_unref>
    167c:	adrp	x0, 0 <read_string>
    1680:	ldp	x19, x20, [sp, #16]
    1684:	ldr	x0, [x0]
    1688:	ldp	x21, x22, [sp, #32]
    168c:	ldr	w0, [x0]
    1690:	ldp	x29, x30, [sp], #80
    1694:	ret
    1698:	ldr	w0, [x0, #3032]
    169c:	add	w1, w0, #0x9
    16a0:	mov	w0, #0x1                   	// #1
    16a4:	lsl	w0, w0, w1
    16a8:	sxtw	x0, w0
    16ac:	add	x0, x0, #0x10
    16b0:	bl	0 <grub_malloc>
    16b4:	mov	x19, x0
    16b8:	cbz	x0, 1660 <grub_udf_dir+0x40>
    16bc:	mov	x2, x0
    16c0:	add	x1, x20, #0xbc0
    16c4:	mov	x0, x20
    16c8:	bl	c18 <grub_udf_read_icb>
    16cc:	cbnz	w0, 1664 <grub_udf_dir+0x44>
    16d0:	adrp	x0, 0 <read_string>
    16d4:	add	x2, sp, #0x38
    16d8:	mov	x1, x19
    16dc:	mov	w5, #0x2                   	// #2
    16e0:	ldr	x4, [x0]
    16e4:	adrp	x0, 0 <read_string>
    16e8:	ldr	x3, [x0]
    16ec:	mov	x0, x21
    16f0:	bl	0 <grub_fshelp_find_file>
    16f4:	cbnz	w0, 1664 <grub_udf_dir+0x44>
    16f8:	adrp	x0, 0 <read_string>
    16fc:	add	x2, sp, #0x40
    1700:	ldr	x1, [x0]
    1704:	ldr	x0, [sp, #56]
    1708:	bl	1550 <grub_udf_iterate_dir>
    170c:	ldr	x0, [sp, #56]
    1710:	cmp	x0, x19
    1714:	b.eq	1664 <grub_udf_dir+0x44>  // b.none
    1718:	bl	0 <grub_free>
    171c:	b	1664 <grub_udf_dir+0x44>
	...

0000000000001748 <grub_mod_init>:
    1748:	stp	x29, x30, [sp, #-32]!
    174c:	mov	x29, sp
    1750:	str	x19, [sp, #16]
    1754:	mov	x19, x0
    1758:	adrp	x0, 0 <read_string>
    175c:	ldr	x1, [x0]
    1760:	adrp	x0, 0 <read_string>
    1764:	ldr	x0, [x0]
    1768:	add	x1, x1, #0x10
    176c:	bl	0 <grub_list_push>
    1770:	adrp	x0, 0 <read_string>
    1774:	ldr	x0, [x0]
    1778:	str	x19, [x0]
    177c:	ldr	x19, [sp, #16]
    1780:	ldp	x29, x30, [sp], #32
    1784:	ret
	...

00000000000017a0 <grub_mod_fini>:
    17a0:	adrp	x0, 0 <read_string>
    17a4:	ldr	x0, [x0]
    17a8:	add	x0, x0, #0x10
    17ac:	b	0 <grub_list_remove>
	...
