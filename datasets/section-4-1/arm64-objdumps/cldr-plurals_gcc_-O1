
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//cldr-plurals_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401270 <_init>:
  401270:	stp	x29, x30, [sp, #-16]!
  401274:	mov	x29, sp
  401278:	bl	401620 <call_weak_fn>
  40127c:	ldp	x29, x30, [sp], #16
  401280:	ret

Disassembly of section .plt:

0000000000401290 <.plt>:
  401290:	stp	x16, x30, [sp, #-16]!
  401294:	adrp	x16, 415000 <__FRAME_END__+0xfafc>
  401298:	ldr	x17, [x16, #4088]
  40129c:	add	x16, x16, #0xff8
  4012a0:	br	x17
  4012a4:	nop
  4012a8:	nop
  4012ac:	nop

00000000004012b0 <memcpy@plt>:
  4012b0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4012b4:	ldr	x17, [x16]
  4012b8:	add	x16, x16, #0x0
  4012bc:	br	x17

00000000004012c0 <strlen@plt>:
  4012c0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4012c4:	ldr	x17, [x16, #8]
  4012c8:	add	x16, x16, #0x8
  4012cc:	br	x17

00000000004012d0 <exit@plt>:
  4012d0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4012d4:	ldr	x17, [x16, #16]
  4012d8:	add	x16, x16, #0x10
  4012dc:	br	x17

00000000004012e0 <error@plt>:
  4012e0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4012e4:	ldr	x17, [x16, #24]
  4012e8:	add	x16, x16, #0x18
  4012ec:	br	x17

00000000004012f0 <set_program_name@plt>:
  4012f0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4012f4:	ldr	x17, [x16, #32]
  4012f8:	add	x16, x16, #0x20
  4012fc:	br	x17

0000000000401300 <xmlHasProp@plt>:
  401300:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401304:	ldr	x17, [x16, #40]
  401308:	add	x16, x16, #0x28
  40130c:	br	x17

0000000000401310 <sprintf@plt>:
  401310:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401314:	ldr	x17, [x16, #48]
  401318:	add	x16, x16, #0x30
  40131c:	br	x17

0000000000401320 <xmlFreeDoc@plt>:
  401320:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401324:	ldr	x17, [x16, #56]
  401328:	add	x16, x16, #0x38
  40132c:	br	x17

0000000000401330 <__cxa_atexit@plt>:
  401330:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401334:	ldr	x17, [x16, #64]
  401338:	add	x16, x16, #0x40
  40133c:	br	x17

0000000000401340 <fputc@plt>:
  401340:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401344:	ldr	x17, [x16, #72]
  401348:	add	x16, x16, #0x48
  40134c:	br	x17

0000000000401350 <fileno@plt>:
  401350:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401354:	ldr	x17, [x16, #80]
  401358:	add	x16, x16, #0x50
  40135c:	br	x17

0000000000401360 <fclose@plt>:
  401360:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401364:	ldr	x17, [x16, #88]
  401368:	add	x16, x16, #0x58
  40136c:	br	x17

0000000000401370 <fopen@plt>:
  401370:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401374:	ldr	x17, [x16, #96]
  401378:	add	x16, x16, #0x60
  40137c:	br	x17

0000000000401380 <malloc@plt>:
  401380:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401384:	ldr	x17, [x16, #104]
  401388:	add	x16, x16, #0x68
  40138c:	br	x17

0000000000401390 <xrealloc@plt>:
  401390:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401394:	ldr	x17, [x16, #112]
  401398:	add	x16, x16, #0x70
  40139c:	br	x17

00000000004013a0 <xmlGetProp@plt>:
  4013a0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4013a4:	ldr	x17, [x16, #120]
  4013a8:	add	x16, x16, #0x78
  4013ac:	br	x17

00000000004013b0 <xmlCheckVersion@plt>:
  4013b0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4013b4:	ldr	x17, [x16, #128]
  4013b8:	add	x16, x16, #0x80
  4013bc:	br	x17

00000000004013c0 <strncmp@plt>:
  4013c0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4013c4:	ldr	x17, [x16, #136]
  4013c8:	add	x16, x16, #0x88
  4013cc:	br	x17

00000000004013d0 <bindtextdomain@plt>:
  4013d0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4013d4:	ldr	x17, [x16, #144]
  4013d8:	add	x16, x16, #0x90
  4013dc:	br	x17

00000000004013e0 <__libc_start_main@plt>:
  4013e0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4013e4:	ldr	x17, [x16, #152]
  4013e8:	add	x16, x16, #0x98
  4013ec:	br	x17

00000000004013f0 <memset@plt>:
  4013f0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4013f4:	ldr	x17, [x16, #160]
  4013f8:	add	x16, x16, #0xa0
  4013fc:	br	x17

0000000000401400 <xmalloc@plt>:
  401400:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401404:	ldr	x17, [x16, #168]
  401408:	add	x16, x16, #0xa8
  40140c:	br	x17

0000000000401410 <xstrdup@plt>:
  401410:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401414:	ldr	x17, [x16, #176]
  401418:	add	x16, x16, #0xb0
  40141c:	br	x17

0000000000401420 <xmlStrlen@plt>:
  401420:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401424:	ldr	x17, [x16, #184]
  401428:	add	x16, x16, #0xb8
  40142c:	br	x17

0000000000401430 <close_stdout@plt>:
  401430:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401434:	ldr	x17, [x16, #192]
  401438:	add	x16, x16, #0xc0
  40143c:	br	x17

0000000000401440 <xmlNodeGetContent@plt>:
  401440:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401444:	ldr	x17, [x16, #200]
  401448:	add	x16, x16, #0xc8
  40144c:	br	x17

0000000000401450 <xmlReadFd@plt>:
  401450:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401454:	ldr	x17, [x16, #208]
  401458:	add	x16, x16, #0xd0
  40145c:	br	x17

0000000000401460 <strrchr@plt>:
  401460:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401464:	ldr	x17, [x16, #216]
  401468:	add	x16, x16, #0xd8
  40146c:	br	x17

0000000000401470 <__gmon_start__@plt>:
  401470:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401474:	ldr	x17, [x16, #224]
  401478:	add	x16, x16, #0xe0
  40147c:	br	x17

0000000000401480 <abort@plt>:
  401480:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401484:	ldr	x17, [x16, #232]
  401488:	add	x16, x16, #0xe8
  40148c:	br	x17

0000000000401490 <u8_mbtouc_aux@plt>:
  401490:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401494:	ldr	x17, [x16, #240]
  401498:	add	x16, x16, #0xf0
  40149c:	br	x17

00000000004014a0 <puts@plt>:
  4014a0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4014a4:	ldr	x17, [x16, #248]
  4014a8:	add	x16, x16, #0xf8
  4014ac:	br	x17

00000000004014b0 <textdomain@plt>:
  4014b0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4014b4:	ldr	x17, [x16, #256]
  4014b8:	add	x16, x16, #0x100
  4014bc:	br	x17

00000000004014c0 <getopt_long@plt>:
  4014c0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4014c4:	ldr	x17, [x16, #264]
  4014c8:	add	x16, x16, #0x108
  4014cc:	br	x17

00000000004014d0 <strcmp@plt>:
  4014d0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4014d4:	ldr	x17, [x16, #272]
  4014d8:	add	x16, x16, #0x110
  4014dc:	br	x17

00000000004014e0 <basename@plt>:
  4014e0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4014e4:	ldr	x17, [x16, #280]
  4014e8:	add	x16, x16, #0x118
  4014ec:	br	x17

00000000004014f0 <proper_name@plt>:
  4014f0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4014f4:	ldr	x17, [x16, #288]
  4014f8:	add	x16, x16, #0x120
  4014fc:	br	x17

0000000000401500 <free@plt>:
  401500:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401504:	ldr	x17, [x16, #296]
  401508:	add	x16, x16, #0x128
  40150c:	br	x17

0000000000401510 <fwrite@plt>:
  401510:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401514:	ldr	x17, [x16, #304]
  401518:	add	x16, x16, #0x130
  40151c:	br	x17

0000000000401520 <xmlGetLineNo@plt>:
  401520:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401524:	ldr	x17, [x16, #312]
  401528:	add	x16, x16, #0x138
  40152c:	br	x17

0000000000401530 <dcgettext@plt>:
  401530:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401534:	ldr	x17, [x16, #320]
  401538:	add	x16, x16, #0x140
  40153c:	br	x17

0000000000401540 <xmlStrncmp@plt>:
  401540:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401544:	ldr	x17, [x16, #328]
  401548:	add	x16, x16, #0x148
  40154c:	br	x17

0000000000401550 <printf@plt>:
  401550:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401554:	ldr	x17, [x16, #336]
  401558:	add	x16, x16, #0x150
  40155c:	br	x17

0000000000401560 <xmlStrEqual@plt>:
  401560:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401564:	ldr	x17, [x16, #344]
  401568:	add	x16, x16, #0x158
  40156c:	br	x17

0000000000401570 <xmlDocGetRootElement@plt>:
  401570:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401574:	ldr	x17, [x16, #352]
  401578:	add	x16, x16, #0x160
  40157c:	br	x17

0000000000401580 <putchar@plt>:
  401580:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401584:	ldr	x17, [x16, #360]
  401588:	add	x16, x16, #0x168
  40158c:	br	x17

0000000000401590 <__getdelim@plt>:
  401590:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  401594:	ldr	x17, [x16, #368]
  401598:	add	x16, x16, #0x170
  40159c:	br	x17

00000000004015a0 <error_at_line@plt>:
  4015a0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4015a4:	ldr	x17, [x16, #376]
  4015a8:	add	x16, x16, #0x178
  4015ac:	br	x17

00000000004015b0 <fprintf@plt>:
  4015b0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4015b4:	ldr	x17, [x16, #384]
  4015b8:	add	x16, x16, #0x180
  4015bc:	br	x17

00000000004015c0 <setlocale@plt>:
  4015c0:	adrp	x16, 416000 <memcpy@GLIBC_2.17>
  4015c4:	ldr	x17, [x16, #392]
  4015c8:	add	x16, x16, #0x188
  4015cc:	br	x17

Disassembly of section .text:

00000000004015d0 <_start>:
  4015d0:	mov	x29, #0x0                   	// #0
  4015d4:	mov	x30, #0x0                   	// #0
  4015d8:	mov	x5, x0
  4015dc:	ldr	x1, [sp]
  4015e0:	add	x2, sp, #0x8
  4015e4:	mov	x6, sp
  4015e8:	movz	x0, #0x0, lsl #48
  4015ec:	movk	x0, #0x0, lsl #32
  4015f0:	movk	x0, #0x40, lsl #16
  4015f4:	movk	x0, #0x39ec
  4015f8:	movz	x3, #0x0, lsl #48
  4015fc:	movk	x3, #0x0, lsl #32
  401600:	movk	x3, #0x40, lsl #16
  401604:	movk	x3, #0x42b8
  401608:	movz	x4, #0x0, lsl #48
  40160c:	movk	x4, #0x0, lsl #32
  401610:	movk	x4, #0x40, lsl #16
  401614:	movk	x4, #0x4338
  401618:	bl	4013e0 <__libc_start_main@plt>
  40161c:	bl	401480 <abort@plt>

0000000000401620 <call_weak_fn>:
  401620:	adrp	x0, 415000 <__FRAME_END__+0xfafc>
  401624:	ldr	x0, [x0, #4064]
  401628:	cbz	x0, 401630 <call_weak_fn+0x10>
  40162c:	b	401470 <__gmon_start__@plt>
  401630:	ret

0000000000401634 <deregister_tm_clones>:
  401634:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  401638:	add	x0, x0, #0x1a0
  40163c:	adrp	x1, 416000 <memcpy@GLIBC_2.17>
  401640:	add	x1, x1, #0x1a0
  401644:	cmp	x0, x1
  401648:	b.eq	40167c <deregister_tm_clones+0x48>  // b.none
  40164c:	stp	x29, x30, [sp, #-32]!
  401650:	mov	x29, sp
  401654:	adrp	x0, 404000 <main+0x614>
  401658:	ldr	x0, [x0, #872]
  40165c:	str	x0, [sp, #24]
  401660:	mov	x1, x0
  401664:	cbz	x1, 401674 <deregister_tm_clones+0x40>
  401668:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  40166c:	add	x0, x0, #0x1a0
  401670:	blr	x1
  401674:	ldp	x29, x30, [sp], #32
  401678:	ret
  40167c:	ret

0000000000401680 <register_tm_clones>:
  401680:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  401684:	add	x0, x0, #0x1a0
  401688:	adrp	x1, 416000 <memcpy@GLIBC_2.17>
  40168c:	add	x1, x1, #0x1a0
  401690:	sub	x0, x0, x1
  401694:	lsr	x1, x0, #63
  401698:	add	x0, x1, x0, asr #3
  40169c:	cmp	xzr, x0, asr #1
  4016a0:	b.eq	4016d8 <register_tm_clones+0x58>  // b.none
  4016a4:	stp	x29, x30, [sp, #-32]!
  4016a8:	mov	x29, sp
  4016ac:	asr	x1, x0, #1
  4016b0:	adrp	x0, 404000 <main+0x614>
  4016b4:	ldr	x0, [x0, #880]
  4016b8:	str	x0, [sp, #24]
  4016bc:	mov	x2, x0
  4016c0:	cbz	x2, 4016d0 <register_tm_clones+0x50>
  4016c4:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  4016c8:	add	x0, x0, #0x1a0
  4016cc:	blr	x2
  4016d0:	ldp	x29, x30, [sp], #32
  4016d4:	ret
  4016d8:	ret

00000000004016dc <__do_global_dtors_aux>:
  4016dc:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  4016e0:	ldrb	w0, [x0, #464]
  4016e4:	cbnz	w0, 401708 <__do_global_dtors_aux+0x2c>
  4016e8:	stp	x29, x30, [sp, #-16]!
  4016ec:	mov	x29, sp
  4016f0:	bl	401634 <deregister_tm_clones>
  4016f4:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  4016f8:	mov	w1, #0x1                   	// #1
  4016fc:	strb	w1, [x0, #464]
  401700:	ldp	x29, x30, [sp], #16
  401704:	ret
  401708:	ret

000000000040170c <frame_dummy>:
  40170c:	stp	x29, x30, [sp, #-16]!
  401710:	mov	x29, sp
  401714:	bl	401680 <register_tm_clones>
  401718:	ldp	x29, x30, [sp], #16
  40171c:	ret

0000000000401720 <add_range>:
  401720:	stp	x29, x30, [sp, #-32]!
  401724:	mov	x29, sp
  401728:	stp	x19, x20, [sp, #16]
  40172c:	mov	x19, x0
  401730:	mov	x20, x1
  401734:	ldr	x1, [x0, #16]
  401738:	ldr	x0, [x0, #8]
  40173c:	cmp	x0, x1
  401740:	b.eq	401768 <add_range+0x48>  // b.none
  401744:	ldr	x1, [x19]
  401748:	ldr	x0, [x19, #8]
  40174c:	add	x2, x0, #0x1
  401750:	str	x2, [x19, #8]
  401754:	str	x20, [x1, x0, lsl #3]
  401758:	mov	x0, x19
  40175c:	ldp	x19, x20, [sp, #16]
  401760:	ldp	x29, x30, [sp], #32
  401764:	ret
  401768:	lsl	x1, x1, #1
  40176c:	add	x1, x1, #0x1
  401770:	str	x1, [x19, #16]
  401774:	lsl	x1, x1, #3
  401778:	ldr	x0, [x19]
  40177c:	bl	401390 <xrealloc@plt>
  401780:	str	x0, [x19]
  401784:	b	401744 <add_range+0x24>

0000000000401788 <yydestruct>:
  401788:	stp	x29, x30, [sp, #-16]!
  40178c:	mov	x29, sp
  401790:	cmp	w1, #0x1a
  401794:	b.eq	401844 <yydestruct+0xbc>  // b.none
  401798:	b.gt	4017e0 <yydestruct+0x58>
  40179c:	cmp	w1, #0xc
  4017a0:	b.eq	40182c <yydestruct+0xa4>  // b.none
  4017a4:	b.le	4017c4 <yydestruct+0x3c>
  4017a8:	cmp	w1, #0x18
  4017ac:	b.eq	401838 <yydestruct+0xb0>  // b.none
  4017b0:	cmp	w1, #0x19
  4017b4:	b.ne	401824 <yydestruct+0x9c>  // b.any
  4017b8:	ldr	x0, [x2]
  4017bc:	bl	4030e8 <cldr_plural_condition_free>
  4017c0:	b	401824 <yydestruct+0x9c>
  4017c4:	cmp	w1, #0xa
  4017c8:	b.eq	40181c <yydestruct+0x94>  // b.none
  4017cc:	cmp	w1, #0xb
  4017d0:	b.ne	401824 <yydestruct+0x9c>  // b.any
  4017d4:	ldr	x0, [x2]
  4017d8:	bl	401500 <free@plt>
  4017dc:	b	401824 <yydestruct+0x9c>
  4017e0:	cmp	w1, #0x1d
  4017e4:	b.eq	40185c <yydestruct+0xd4>  // b.none
  4017e8:	b.le	401800 <yydestruct+0x78>
  4017ec:	cmp	w1, #0x1e
  4017f0:	b.ne	401824 <yydestruct+0x9c>  // b.any
  4017f4:	ldr	x0, [x2]
  4017f8:	bl	40301c <cldr_plural_range_free>
  4017fc:	b	401824 <yydestruct+0x9c>
  401800:	cmp	w1, #0x1b
  401804:	b.eq	401850 <yydestruct+0xc8>  // b.none
  401808:	cmp	w1, #0x1c
  40180c:	b.ne	401824 <yydestruct+0x9c>  // b.any
  401810:	ldr	x0, [x2]
  401814:	bl	40305c <cldr_plural_range_list_free>
  401818:	b	401824 <yydestruct+0x9c>
  40181c:	ldr	x0, [x2]
  401820:	bl	401500 <free@plt>
  401824:	ldp	x29, x30, [sp], #16
  401828:	ret
  40182c:	ldr	x0, [x2]
  401830:	bl	401500 <free@plt>
  401834:	b	401824 <yydestruct+0x9c>
  401838:	ldr	x0, [x2]
  40183c:	bl	4030e8 <cldr_plural_condition_free>
  401840:	b	401824 <yydestruct+0x9c>
  401844:	ldr	x0, [x2]
  401848:	bl	4030b4 <cldr_plural_relation_free>
  40184c:	b	401824 <yydestruct+0x9c>
  401850:	ldr	x0, [x2]
  401854:	bl	401500 <free@plt>
  401858:	b	401824 <yydestruct+0x9c>
  40185c:	ldr	x0, [x2]
  401860:	bl	40301c <cldr_plural_range_free>
  401864:	b	401824 <yydestruct+0x9c>

0000000000401868 <yyparse>:
  401868:	sub	sp, sp, #0x880
  40186c:	stp	x29, x30, [sp]
  401870:	mov	x29, sp
  401874:	stp	x19, x20, [sp, #16]
  401878:	stp	x21, x22, [sp, #32]
  40187c:	stp	x23, x24, [sp, #48]
  401880:	stp	x25, x26, [sp, #64]
  401884:	stp	x27, x28, [sp, #80]
  401888:	mov	x23, x0
  40188c:	strh	wzr, [sp, #1768]
  401890:	str	wzr, [sp, #116]
  401894:	mov	w21, #0x0                   	// #0
  401898:	mov	w26, #0xfffffffe            	// #-2
  40189c:	mov	x25, #0xc8                  	// #200
  4018a0:	add	x19, sp, #0xa8
  4018a4:	str	x19, [sp, #104]
  4018a8:	add	x20, sp, #0x6e8
  4018ac:	mov	x24, x20
  4018b0:	adrp	x22, 404000 <main+0x614>
  4018b4:	add	x22, x22, #0x4a0
  4018b8:	add	x28, x22, #0x148
  4018bc:	adrp	x0, 404000 <main+0x614>
  4018c0:	add	x0, x0, #0x460
  4018c4:	str	x0, [sp, #144]
  4018c8:	b	401e80 <yyparse+0x618>
  4018cc:	ldr	x27, [x23]
  4018d0:	ldrb	w0, [x27]
  4018d4:	cbz	w0, 4018ec <yyparse+0x84>
  4018d8:	cmp	w0, #0x20
  4018dc:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  4018e0:	b.ne	4018fc <yyparse+0x94>  // b.any
  4018e4:	ldrb	w0, [x27, #1]!
  4018e8:	cbnz	w0, 4018d8 <yyparse+0x70>
  4018ec:	str	x27, [x23]
  4018f0:	mov	w1, #0x0                   	// #0
  4018f4:	mov	w26, #0x0                   	// #0
  4018f8:	b	401cf4 <yyparse+0x48c>
  4018fc:	tbnz	w0, #7, 4019c4 <yyparse+0x15c>
  401900:	str	w0, [sp, #164]
  401904:	mov	x2, #0x3                   	// #3
  401908:	mov	x1, x27
  40190c:	adrp	x0, 404000 <main+0x614>
  401910:	add	x0, x0, #0x378
  401914:	bl	4013c0 <strncmp@plt>
  401918:	cbz	w0, 4019f8 <yyparse+0x190>
  40191c:	mov	x2, #0x2                   	// #2
  401920:	mov	x1, x27
  401924:	adrp	x0, 404000 <main+0x614>
  401928:	add	x0, x0, #0x380
  40192c:	bl	4013c0 <strncmp@plt>
  401930:	cbz	w0, 401a08 <yyparse+0x1a0>
  401934:	mov	x2, #0x5                   	// #5
  401938:	mov	x1, x27
  40193c:	adrp	x0, 404000 <main+0x614>
  401940:	add	x0, x0, #0x388
  401944:	bl	4013c0 <strncmp@plt>
  401948:	cbz	w0, 401a18 <yyparse+0x1b0>
  40194c:	mov	x2, #0x8                   	// #8
  401950:	mov	x1, x27
  401954:	adrp	x0, 404000 <main+0x614>
  401958:	add	x0, x0, #0x390
  40195c:	bl	4013c0 <strncmp@plt>
  401960:	cbz	w0, 401a28 <yyparse+0x1c0>
  401964:	mov	x2, #0x8                   	// #8
  401968:	mov	x1, x27
  40196c:	adrp	x0, 404000 <main+0x614>
  401970:	add	x0, x0, #0x3a0
  401974:	bl	4013c0 <strncmp@plt>
  401978:	cbz	w0, 401a38 <yyparse+0x1d0>
  40197c:	mov	x1, x27
  401980:	ldrb	w0, [x1], #1
  401984:	str	x1, [sp, #120]
  401988:	mov	w26, w0
  40198c:	cmp	w0, #0x39
  401990:	b.hi	401a48 <yyparse+0x1e0>  // b.pmore
  401994:	cmp	w0, #0x2f
  401998:	b.hi	401b04 <yyparse+0x29c>  // b.pmore
  40199c:	cmp	w0, #0x21
  4019a0:	b.ne	401b7c <yyparse+0x314>  // b.any
  4019a4:	ldrb	w0, [x27, #1]
  4019a8:	mov	w26, #0x100                 	// #256
  4019ac:	cmp	w0, #0x3d
  4019b0:	b.ne	401b7c <yyparse+0x314>  // b.any
  4019b4:	add	x0, x27, #0x2
  4019b8:	str	x0, [sp, #120]
  4019bc:	mov	w26, #0x21                  	// #33
  4019c0:	b	401b7c <yyparse+0x314>
  4019c4:	ldr	x2, [x23, #8]
  4019c8:	sub	x2, x2, x27
  4019cc:	mov	x1, x27
  4019d0:	add	x0, sp, #0xa4
  4019d4:	bl	401490 <u8_mbtouc_aux@plt>
  4019d8:	ldr	w2, [sp, #164]
  4019dc:	mov	w1, #0x2026                	// #8230
  4019e0:	cmp	w2, w1
  4019e4:	b.ne	401904 <yyparse+0x9c>  // b.any
  4019e8:	add	x0, x27, w0, sxtw
  4019ec:	str	x0, [x23]
  4019f0:	mov	w26, #0x105                 	// #261
  4019f4:	b	401eac <yyparse+0x644>
  4019f8:	add	x27, x27, #0x3
  4019fc:	str	x27, [x23]
  401a00:	mov	w26, #0x105                 	// #261
  401a04:	b	401eac <yyparse+0x644>
  401a08:	add	x27, x27, #0x2
  401a0c:	str	x27, [x23]
  401a10:	mov	w26, #0x104                 	// #260
  401a14:	b	401eac <yyparse+0x644>
  401a18:	add	x27, x27, #0x5
  401a1c:	str	x27, [x23]
  401a20:	mov	w26, #0x106                 	// #262
  401a24:	b	401eac <yyparse+0x644>
  401a28:	add	x27, x27, #0x8
  401a2c:	str	x27, [x23]
  401a30:	mov	w26, #0x107                 	// #263
  401a34:	b	401eac <yyparse+0x644>
  401a38:	add	x27, x27, #0x8
  401a3c:	str	x27, [x23]
  401a40:	mov	w26, #0x108                 	// #264
  401a44:	b	401eac <yyparse+0x644>
  401a48:	sub	w0, w0, #0x61
  401a4c:	and	w0, w0, #0xff
  401a50:	cmp	w0, #0x19
  401a54:	b.hi	401b7c <yyparse+0x314>  // b.pmore
  401a58:	str	xzr, [sp, #128]
  401a5c:	adrp	x27, 416000 <memcpy@GLIBC_2.17>
  401a60:	ldr	x0, [x27, #472]
  401a64:	ldr	x1, [sp, #128]
  401a68:	cmp	x0, x1
  401a6c:	b.ls	401c2c <yyparse+0x3c4>  // b.plast
  401a70:	add	x0, x27, #0x1d8
  401a74:	ldr	x0, [x0, #8]
  401a78:	ldr	x1, [sp, #128]
  401a7c:	add	x2, x1, #0x1
  401a80:	str	x2, [sp, #128]
  401a84:	strb	w26, [x0, x1]
  401a88:	ldr	x1, [sp, #120]
  401a8c:	ldrb	w26, [x1]
  401a90:	sub	w1, w26, #0x61
  401a94:	cmp	w1, #0x19
  401a98:	b.ls	401c58 <yyparse+0x3f0>  // b.plast
  401a9c:	adrp	x1, 416000 <memcpy@GLIBC_2.17>
  401aa0:	ldr	x1, [x1, #472]
  401aa4:	ldr	x2, [sp, #128]
  401aa8:	cmp	x2, x1
  401aac:	b.cs	401c68 <yyparse+0x400>  // b.hs, b.nlast
  401ab0:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  401ab4:	ldr	x26, [x0, #480]
  401ab8:	ldr	x0, [sp, #128]
  401abc:	strb	wzr, [x26, x0]
  401ac0:	cmp	x0, #0x1
  401ac4:	b.eq	401c88 <yyparse+0x420>  // b.none
  401ac8:	adrp	x1, 404000 <main+0x614>
  401acc:	add	x1, x1, #0x3b0
  401ad0:	mov	x0, x26
  401ad4:	bl	4014d0 <strcmp@plt>
  401ad8:	cbz	w0, 401ccc <yyparse+0x464>
  401adc:	adrp	x1, 404000 <main+0x614>
  401ae0:	add	x1, x1, #0x3b8
  401ae4:	mov	x0, x26
  401ae8:	bl	4014d0 <strcmp@plt>
  401aec:	cbz	w0, 401cdc <yyparse+0x474>
  401af0:	mov	x0, x26
  401af4:	bl	401410 <xstrdup@plt>
  401af8:	str	x0, [sp, #2168]
  401afc:	mov	w26, #0x109                 	// #265
  401b00:	b	401b7c <yyparse+0x314>
  401b04:	sub	w0, w0, #0x30
  401b08:	sxtw	x26, w0
  401b0c:	ldrb	w0, [x27, #1]
  401b10:	sub	w1, w0, #0x30
  401b14:	and	w1, w1, #0xff
  401b18:	cmp	w1, #0x9
  401b1c:	b.hi	401b4c <yyparse+0x2e4>  // b.pmore
  401b20:	add	x1, x26, x26, lsl #2
  401b24:	sub	w26, w0, #0x30
  401b28:	sxtw	x26, w26
  401b2c:	add	x26, x26, x1, lsl #1
  401b30:	ldr	x1, [sp, #120]
  401b34:	ldrb	w0, [x1, #1]!
  401b38:	str	x1, [sp, #120]
  401b3c:	sub	w1, w0, #0x30
  401b40:	and	w1, w1, #0xff
  401b44:	cmp	w1, #0x9
  401b48:	b.ls	401b20 <yyparse+0x2b8>  // b.plast
  401b4c:	mov	x0, #0x18                  	// #24
  401b50:	bl	401400 <xmalloc@plt>
  401b54:	mov	x2, x0
  401b58:	str	x0, [sp, #2168]
  401b5c:	ldr	x0, [sp, #120]
  401b60:	ldrb	w0, [x0]
  401b64:	cmp	w0, #0x2e
  401b68:	b.eq	401b98 <yyparse+0x330>  // b.none
  401b6c:	str	wzr, [x2]
  401b70:	ldr	x0, [sp, #2168]
  401b74:	str	w26, [x0, #8]
  401b78:	mov	w26, #0x10a                 	// #266
  401b7c:	ldr	x0, [sp, #120]
  401b80:	str	x0, [x23]
  401b84:	cmp	w26, #0x0
  401b88:	b.gt	401eac <yyparse+0x644>
  401b8c:	mov	w1, #0x0                   	// #0
  401b90:	mov	w26, #0x0                   	// #0
  401b94:	b	401cf4 <yyparse+0x48c>
  401b98:	ldr	x0, [sp, #120]
  401b9c:	ldrb	w0, [x0, #1]
  401ba0:	sub	w1, w0, #0x30
  401ba4:	and	w1, w1, #0xff
  401ba8:	cmp	w1, #0x9
  401bac:	b.hi	401b6c <yyparse+0x304>  // b.pmore
  401bb0:	ucvtf	d1, x26
  401bb4:	ldr	x1, [sp, #120]
  401bb8:	add	x1, x1, #0x1
  401bbc:	mov	x4, x1
  401bc0:	str	x1, [sp, #120]
  401bc4:	mov	w1, #0xa                   	// #10
  401bc8:	mov	w3, #0x1                   	// #1
  401bcc:	sub	w3, w3, w4
  401bd0:	sub	w0, w0, #0x30
  401bd4:	scvtf	d0, w0
  401bd8:	scvtf	d2, w1
  401bdc:	fdiv	d0, d0, d2
  401be0:	fadd	d1, d1, d0
  401be4:	add	w1, w1, w1, lsl #2
  401be8:	lsl	w1, w1, #1
  401bec:	ldr	x0, [sp, #120]
  401bf0:	add	w5, w3, w0
  401bf4:	mov	x4, x0
  401bf8:	ldrb	w0, [x4, #1]!
  401bfc:	str	x4, [sp, #120]
  401c00:	sub	w4, w0, #0x30
  401c04:	and	w4, w4, #0xff
  401c08:	cmp	w4, #0x9
  401c0c:	b.ls	401bd0 <yyparse+0x368>  // b.plast
  401c10:	mov	w0, #0x1                   	// #1
  401c14:	str	w0, [x2]
  401c18:	ldr	x0, [sp, #2168]
  401c1c:	str	d1, [x0, #8]
  401c20:	str	w5, [x0, #16]
  401c24:	mov	w26, #0x10b                 	// #267
  401c28:	b	401b7c <yyparse+0x314>
  401c2c:	add	x0, x0, #0x5
  401c30:	lsl	x1, x0, #1
  401c34:	str	x1, [x27, #472]
  401c38:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  401c3c:	add	x0, x0, #0x1d8
  401c40:	ldr	x0, [x0, #8]
  401c44:	bl	401390 <xrealloc@plt>
  401c48:	adrp	x1, 416000 <memcpy@GLIBC_2.17>
  401c4c:	add	x1, x1, #0x1d8
  401c50:	str	x0, [x1, #8]
  401c54:	b	401a70 <yyparse+0x208>
  401c58:	ldr	x0, [sp, #120]
  401c5c:	add	x0, x0, #0x1
  401c60:	str	x0, [sp, #120]
  401c64:	b	401a60 <yyparse+0x1f8>
  401c68:	add	x1, x1, #0x5
  401c6c:	lsl	x1, x1, #1
  401c70:	adrp	x2, 416000 <memcpy@GLIBC_2.17>
  401c74:	add	x26, x2, #0x1d8
  401c78:	str	x1, [x2, #472]
  401c7c:	bl	401390 <xrealloc@plt>
  401c80:	str	x0, [x26, #8]
  401c84:	b	401ab0 <yyparse+0x248>
  401c88:	ldrb	w0, [x26]
  401c8c:	sub	w0, w0, #0x66
  401c90:	and	w1, w0, #0xff
  401c94:	cmp	w1, #0x11
  401c98:	b.hi	401ac8 <yyparse+0x260>  // b.pmore
  401c9c:	mov	x0, #0x1                   	// #1
  401ca0:	lsl	x0, x0, x1
  401ca4:	mov	x1, #0x4109                	// #16649
  401ca8:	movk	x1, #0x3, lsl #16
  401cac:	tst	x0, x1
  401cb0:	b.eq	401ac8 <yyparse+0x260>  // b.none
  401cb4:	ldr	x0, [sp, #120]
  401cb8:	str	x0, [x23]
  401cbc:	ldrb	w0, [x26]
  401cc0:	str	w0, [sp, #2168]
  401cc4:	mov	w26, #0x10c                 	// #268
  401cc8:	b	401eac <yyparse+0x644>
  401ccc:	ldr	x0, [sp, #120]
  401cd0:	str	x0, [x23]
  401cd4:	mov	w26, #0x102                 	// #258
  401cd8:	b	401eac <yyparse+0x644>
  401cdc:	ldr	x0, [sp, #120]
  401ce0:	str	x0, [x23]
  401ce4:	mov	w26, #0x103                 	// #259
  401ce8:	b	401eac <yyparse+0x644>
  401cec:	mov	w1, #0x0                   	// #0
  401cf0:	mov	w26, #0x0                   	// #0
  401cf4:	ldr	w0, [sp, #96]
  401cf8:	add	w0, w1, w0
  401cfc:	cmp	w0, #0x37
  401d00:	b.hi	401eb8 <yyparse+0x650>  // b.pmore
  401d04:	ldrsb	w2, [x28, w0, sxtw]
  401d08:	cmp	w2, w1
  401d0c:	b.ne	401eb8 <yyparse+0x650>  // b.any
  401d10:	add	x1, x22, #0x180
  401d14:	ldrb	w21, [x1, w0, sxtw]
  401d18:	cbz	w21, 401d48 <yyparse+0x4e0>
  401d1c:	ldr	w1, [sp, #116]
  401d20:	cmp	w1, #0x0
  401d24:	cset	w0, ne  // ne = any
  401d28:	sub	w0, w1, w0
  401d2c:	str	w0, [sp, #116]
  401d30:	ldr	x0, [sp, #2168]
  401d34:	str	x0, [x19, #8]
  401d38:	add	x19, x19, #0x8
  401d3c:	mov	x0, x20
  401d40:	mov	w26, #0xfffffffe            	// #-2
  401d44:	b	401d98 <yyparse+0x530>
  401d48:	ldr	x27, [x19, #8]
  401d4c:	mov	w2, #0x0                   	// #0
  401d50:	sub	x1, x19, w21, uxtb #3
  401d54:	sub	x0, x20, w21, uxtb #1
  401d58:	add	x19, x1, #0x8
  401d5c:	str	x27, [x1, #8]
  401d60:	add	x1, x22, #0x218
  401d64:	ldrb	w1, [x1, w2, sxtw]
  401d68:	sub	w1, w1, #0x15
  401d6c:	ldrsh	w3, [x0]
  401d70:	add	x2, x22, #0x240
  401d74:	ldrsb	w2, [x2, w1, sxtw]
  401d78:	add	w2, w2, w3
  401d7c:	cmp	w2, #0x37
  401d80:	b.hi	401d90 <yyparse+0x528>  // b.pmore
  401d84:	ldrsb	w4, [x28, w2, sxtw]
  401d88:	cmp	w4, w3
  401d8c:	b.eq	40226c <yyparse+0xa04>  // b.none
  401d90:	add	x2, x22, #0x258
  401d94:	ldrsb	w21, [x2, w1, sxtw]
  401d98:	add	x20, x0, #0x2
  401d9c:	strh	w21, [x0, #2]
  401da0:	lsl	x1, x25, #1
  401da4:	sub	x0, x1, #0x2
  401da8:	add	x0, x24, x0
  401dac:	cmp	x20, x0
  401db0:	b.cc	401e78 <yyparse+0x610>  // b.lo, b.ul, b.last
  401db4:	sub	x0, x20, x24
  401db8:	str	x0, [sp, #96]
  401dbc:	asr	x0, x0, #1
  401dc0:	add	x2, x0, #0x1
  401dc4:	str	x2, [sp, #120]
  401dc8:	mov	x0, #0x270f                	// #9999
  401dcc:	cmp	x25, x0
  401dd0:	b.hi	402340 <yyparse+0xad8>  // b.pmore
  401dd4:	mov	x25, #0x2710                	// #10000
  401dd8:	cmp	x1, x25
  401ddc:	csel	x25, x1, x25, ls  // ls = plast
  401de0:	add	x0, x25, x25, lsl #2
  401de4:	lsl	x0, x0, #1
  401de8:	add	x0, x0, #0x7
  401dec:	bl	401380 <malloc@plt>
  401df0:	mov	x27, x0
  401df4:	cbz	x0, 402340 <yyparse+0xad8>
  401df8:	str	x0, [sp, #152]
  401dfc:	ldr	x0, [sp, #96]
  401e00:	add	x2, x0, #0x2
  401e04:	mov	x1, x24
  401e08:	mov	x0, x27
  401e0c:	bl	4012b0 <memcpy@plt>
  401e10:	lsl	x0, x25, #1
  401e14:	str	x0, [sp, #128]
  401e18:	add	x0, x27, x25, lsl #1
  401e1c:	str	x0, [sp, #136]
  401e20:	ldr	x2, [sp, #120]
  401e24:	lsl	x19, x2, #3
  401e28:	mov	x2, x19
  401e2c:	ldr	x1, [sp, #104]
  401e30:	bl	4012b0 <memcpy@plt>
  401e34:	add	x0, sp, #0x6e8
  401e38:	cmp	x24, x0
  401e3c:	b.eq	401e48 <yyparse+0x5e0>  // b.none
  401e40:	mov	x0, x24
  401e44:	bl	401500 <free@plt>
  401e48:	ldr	x0, [sp, #96]
  401e4c:	add	x20, x27, x0
  401e50:	sub	x19, x19, #0x8
  401e54:	ldr	x1, [sp, #136]
  401e58:	add	x19, x1, x19
  401e5c:	ldr	x0, [sp, #128]
  401e60:	sub	x0, x0, #0x2
  401e64:	add	x0, x27, x0
  401e68:	cmp	x20, x0
  401e6c:	b.cs	402380 <yyparse+0xb18>  // b.hs, b.nlast
  401e70:	str	x1, [sp, #104]
  401e74:	mov	x24, x27
  401e78:	cmp	w21, #0x7
  401e7c:	b.eq	402390 <yyparse+0xb28>  // b.none
  401e80:	ldrsb	w0, [x22, w21, sxtw]
  401e84:	str	w0, [sp, #96]
  401e88:	cmn	w0, #0x14
  401e8c:	b.eq	401eb8 <yyparse+0x650>  // b.none
  401e90:	cmn	w26, #0x2
  401e94:	b.eq	4018cc <yyparse+0x64>  // b.none
  401e98:	cmp	w26, #0x0
  401e9c:	b.le	401cec <yyparse+0x484>
  401ea0:	mov	w1, #0x2                   	// #2
  401ea4:	cmp	w26, #0x10c
  401ea8:	b.hi	401cf4 <yyparse+0x48c>  // b.pmore
  401eac:	add	x0, x22, #0x38
  401eb0:	ldrb	w1, [x0, w26, sxtw]
  401eb4:	b	401cf4 <yyparse+0x48c>
  401eb8:	add	x0, x22, #0x1b8
  401ebc:	ldrb	w0, [x0, w21, sxtw]
  401ec0:	mov	w2, w0
  401ec4:	cbnz	w0, 401f1c <yyparse+0x6b4>
  401ec8:	mov	w1, w26
  401ecc:	cmn	w26, #0x2
  401ed0:	b.eq	401ee8 <yyparse+0x680>  // b.none
  401ed4:	mov	w1, #0x2                   	// #2
  401ed8:	cmp	w26, #0x10c
  401edc:	b.hi	401ee8 <yyparse+0x680>  // b.pmore
  401ee0:	add	x0, x22, #0x38
  401ee4:	ldrb	w1, [x0, w26, sxtw]
  401ee8:	ldr	w0, [sp, #116]
  401eec:	cbz	w0, 402278 <yyparse+0xa10>
  401ef0:	ldr	w0, [sp, #116]
  401ef4:	cmp	w0, #0x3
  401ef8:	b.ne	401f08 <yyparse+0x6a0>  // b.any
  401efc:	cmp	w26, #0x0
  401f00:	b.gt	4022ac <yyparse+0xa44>
  401f04:	cbz	w26, 4023a8 <yyparse+0xb40>
  401f08:	add	x0, x22, #0x180
  401f0c:	str	x0, [sp, #96]
  401f10:	adrp	x27, 404000 <main+0x614>
  401f14:	add	x27, x27, #0x400
  401f18:	b	4022f0 <yyparse+0xa88>
  401f1c:	add	x1, x22, #0x1f0
  401f20:	ldrb	w21, [x1, w0, sxtw]
  401f24:	mov	w1, #0x1                   	// #1
  401f28:	sub	w1, w1, w21
  401f2c:	ldr	x27, [x19, w1, sxtw #3]
  401f30:	sub	w0, w0, #0x4
  401f34:	cmp	w0, #0x1c
  401f38:	b.hi	401d50 <yyparse+0x4e8>  // b.pmore
  401f3c:	ldr	x1, [sp, #144]
  401f40:	ldrh	w0, [x1, w0, uxtw #1]
  401f44:	adr	x1, 401f50 <yyparse+0x6e8>
  401f48:	add	x0, x1, w0, sxth #2
  401f4c:	br	x0
  401f50:	ldur	x0, [x19, #-24]
  401f54:	str	x0, [sp, #96]
  401f58:	ldur	x2, [x19, #-8]
  401f5c:	str	x2, [sp, #120]
  401f60:	mov	x0, #0x10                  	// #16
  401f64:	bl	401400 <xmalloc@plt>
  401f68:	str	x0, [sp, #128]
  401f6c:	ldr	x1, [sp, #96]
  401f70:	str	x1, [x0]
  401f74:	ldr	x2, [sp, #120]
  401f78:	str	x2, [x0, #8]
  401f7c:	ldr	x1, [x23, #16]
  401f80:	str	x1, [sp, #96]
  401f84:	ldr	x0, [x1, #16]
  401f88:	ldr	x1, [x1, #8]
  401f8c:	cmp	x1, x0
  401f90:	b.eq	401fb8 <yyparse+0x750>  // b.none
  401f94:	ldr	x3, [sp, #96]
  401f98:	ldr	x1, [x3]
  401f9c:	ldr	x0, [x3, #8]
  401fa0:	add	x2, x0, #0x1
  401fa4:	str	x2, [x3, #8]
  401fa8:	ldr	x2, [sp, #128]
  401fac:	str	x2, [x1, x0, lsl #3]
  401fb0:	mov	w2, #0x4                   	// #4
  401fb4:	b	401d50 <yyparse+0x4e8>
  401fb8:	lsl	x0, x0, #1
  401fbc:	add	x1, x0, #0x1
  401fc0:	ldr	x0, [sp, #96]
  401fc4:	str	x1, [x0, #16]
  401fc8:	lsl	x1, x1, #3
  401fcc:	ldr	x0, [x0]
  401fd0:	bl	401390 <xrealloc@plt>
  401fd4:	ldr	x1, [sp, #96]
  401fd8:	str	x0, [x1]
  401fdc:	b	401f94 <yyparse+0x72c>
  401fe0:	ldr	x27, [x19]
  401fe4:	mov	w2, #0x6                   	// #6
  401fe8:	b	401d50 <yyparse+0x4e8>
  401fec:	ldur	x0, [x19, #-16]
  401ff0:	str	x0, [sp, #96]
  401ff4:	ldr	x1, [x19]
  401ff8:	str	x1, [sp, #120]
  401ffc:	mov	x0, #0x18                  	// #24
  402000:	bl	401400 <xmalloc@plt>
  402004:	mov	x27, x0
  402008:	mov	w0, #0x1                   	// #1
  40200c:	str	w0, [x27]
  402010:	ldr	x0, [sp, #96]
  402014:	str	x0, [x27, #8]
  402018:	ldr	x1, [sp, #120]
  40201c:	str	x1, [x27, #16]
  402020:	mov	w2, #0x7                   	// #7
  402024:	b	401d50 <yyparse+0x4e8>
  402028:	ldr	x0, [x19]
  40202c:	str	x0, [sp, #96]
  402030:	mov	x0, #0x18                  	// #24
  402034:	bl	401400 <xmalloc@plt>
  402038:	mov	x27, x0
  40203c:	mov	w0, #0x2                   	// #2
  402040:	str	w0, [x27]
  402044:	ldr	x0, [sp, #96]
  402048:	str	x0, [x27, #8]
  40204c:	mov	w2, #0x8                   	// #8
  402050:	b	401d50 <yyparse+0x4e8>
  402054:	ldur	x0, [x19, #-16]
  402058:	str	x0, [sp, #96]
  40205c:	ldr	x27, [x19]
  402060:	mov	x0, #0x18                  	// #24
  402064:	bl	401400 <xmalloc@plt>
  402068:	mov	x1, x0
  40206c:	mov	w0, #0x2                   	// #2
  402070:	str	w0, [x1]
  402074:	str	x1, [sp, #120]
  402078:	str	x27, [x1, #8]
  40207c:	mov	x0, #0x18                  	// #24
  402080:	bl	401400 <xmalloc@plt>
  402084:	mov	x27, x0
  402088:	str	wzr, [x0]
  40208c:	ldr	x0, [sp, #96]
  402090:	str	x0, [x27, #8]
  402094:	ldr	x1, [sp, #120]
  402098:	str	x1, [x27, #16]
  40209c:	mov	w2, #0x9                   	// #9
  4020a0:	b	401d50 <yyparse+0x4e8>
  4020a4:	ldur	x0, [x19, #-16]
  4020a8:	str	x0, [sp, #96]
  4020ac:	ldr	x1, [x19]
  4020b0:	str	x1, [sp, #120]
  4020b4:	mov	x0, #0x18                  	// #24
  4020b8:	bl	401400 <xmalloc@plt>
  4020bc:	mov	x27, x0
  4020c0:	ldr	x0, [sp, #96]
  4020c4:	str	x0, [x27]
  4020c8:	str	wzr, [x27, #8]
  4020cc:	ldr	x1, [sp, #120]
  4020d0:	str	x1, [x27, #16]
  4020d4:	mov	w2, #0xa                   	// #10
  4020d8:	b	401d50 <yyparse+0x4e8>
  4020dc:	ldur	x0, [x19, #-16]
  4020e0:	str	x0, [sp, #96]
  4020e4:	ldr	x1, [x19]
  4020e8:	str	x1, [sp, #120]
  4020ec:	mov	x0, #0x18                  	// #24
  4020f0:	bl	401400 <xmalloc@plt>
  4020f4:	mov	x27, x0
  4020f8:	ldr	x0, [sp, #96]
  4020fc:	str	x0, [x27]
  402100:	mov	w0, #0x1                   	// #1
  402104:	str	w0, [x27, #8]
  402108:	ldr	x1, [sp, #120]
  40210c:	str	x1, [x27, #16]
  402110:	mov	w2, #0xb                   	// #11
  402114:	b	401d50 <yyparse+0x4e8>
  402118:	ldr	w0, [x19]
  40211c:	str	w0, [sp, #96]
  402120:	mov	x0, #0x8                   	// #8
  402124:	bl	401400 <xmalloc@plt>
  402128:	mov	x27, x0
  40212c:	ldr	w0, [sp, #96]
  402130:	str	w0, [x27]
  402134:	str	wzr, [x27, #4]
  402138:	mov	w2, #0xc                   	// #12
  40213c:	b	401d50 <yyparse+0x4e8>
  402140:	ldur	w0, [x19, #-16]
  402144:	str	w0, [sp, #96]
  402148:	ldr	x0, [x19]
  40214c:	ldr	w1, [x0, #8]
  402150:	str	w1, [sp, #120]
  402154:	mov	x0, #0x8                   	// #8
  402158:	bl	401400 <xmalloc@plt>
  40215c:	mov	x27, x0
  402160:	ldr	w0, [sp, #96]
  402164:	str	w0, [x27]
  402168:	ldr	w1, [sp, #120]
  40216c:	str	w1, [x27, #4]
  402170:	mov	w2, #0xd                   	// #13
  402174:	b	401d50 <yyparse+0x4e8>
  402178:	mov	x0, #0x18                  	// #24
  40217c:	bl	401400 <xmalloc@plt>
  402180:	stp	xzr, xzr, [x0]
  402184:	str	xzr, [x0, #16]
  402188:	ldr	x1, [x19]
  40218c:	bl	401720 <add_range>
  402190:	mov	x27, x0
  402194:	mov	w2, #0xe                   	// #14
  402198:	b	401d50 <yyparse+0x4e8>
  40219c:	ldr	x1, [x19]
  4021a0:	ldur	x0, [x19, #-16]
  4021a4:	bl	401720 <add_range>
  4021a8:	mov	x27, x0
  4021ac:	mov	w2, #0xf                   	// #15
  4021b0:	b	401d50 <yyparse+0x4e8>
  4021b4:	ldr	x27, [x19]
  4021b8:	mov	w2, #0x10                  	// #16
  4021bc:	b	401d50 <yyparse+0x4e8>
  4021c0:	ldr	x0, [x19]
  4021c4:	str	x0, [sp, #96]
  4021c8:	mov	x0, #0x10                  	// #16
  4021cc:	bl	401400 <xmalloc@plt>
  4021d0:	mov	x27, x0
  4021d4:	ldr	x0, [sp, #96]
  4021d8:	str	x0, [x27]
  4021dc:	str	x0, [x27, #8]
  4021e0:	mov	w2, #0x11                  	// #17
  4021e4:	b	401d50 <yyparse+0x4e8>
  4021e8:	ldur	x0, [x19, #-16]
  4021ec:	str	x0, [sp, #96]
  4021f0:	ldr	x1, [x19]
  4021f4:	str	x1, [sp, #120]
  4021f8:	mov	x0, #0x10                  	// #16
  4021fc:	bl	401400 <xmalloc@plt>
  402200:	mov	x27, x0
  402204:	ldr	x0, [sp, #96]
  402208:	str	x0, [x27]
  40220c:	ldr	x1, [sp, #120]
  402210:	str	x1, [x27, #8]
  402214:	mov	w2, #0x12                  	// #18
  402218:	b	401d50 <yyparse+0x4e8>
  40221c:	ldr	x0, [x19]
  402220:	bl	401500 <free@plt>
  402224:	mov	w2, #0x1d                  	// #29
  402228:	b	401d50 <yyparse+0x4e8>
  40222c:	ldur	x0, [x19, #-16]
  402230:	bl	401500 <free@plt>
  402234:	ldr	x0, [x19]
  402238:	bl	401500 <free@plt>
  40223c:	mov	w2, #0x1e                  	// #30
  402240:	b	401d50 <yyparse+0x4e8>
  402244:	ldr	x0, [x19]
  402248:	bl	401500 <free@plt>
  40224c:	mov	w2, #0x1f                  	// #31
  402250:	b	401d50 <yyparse+0x4e8>
  402254:	ldur	x0, [x19, #-16]
  402258:	bl	401500 <free@plt>
  40225c:	ldr	x0, [x19]
  402260:	bl	401500 <free@plt>
  402264:	mov	w2, #0x20                  	// #32
  402268:	b	401d50 <yyparse+0x4e8>
  40226c:	add	x1, x22, #0x180
  402270:	ldrb	w21, [x1, w2, sxtw]
  402274:	b	401d98 <yyparse+0x530>
  402278:	mov	w2, #0x5                   	// #5
  40227c:	adrp	x1, 404000 <main+0x614>
  402280:	add	x1, x1, #0x3c0
  402284:	adrp	x0, 404000 <main+0x614>
  402288:	add	x0, x0, #0x3d0
  40228c:	bl	401530 <dcgettext@plt>
  402290:	mov	x2, x0
  402294:	adrp	x1, 404000 <main+0x614>
  402298:	add	x1, x1, #0x3e0
  40229c:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  4022a0:	ldr	x0, [x0, #416]
  4022a4:	bl	4015b0 <fprintf@plt>
  4022a8:	b	401f08 <yyparse+0x6a0>
  4022ac:	mov	x3, x23
  4022b0:	add	x2, sp, #0x878
  4022b4:	adrp	x0, 404000 <main+0x614>
  4022b8:	add	x0, x0, #0x3e8
  4022bc:	bl	401788 <yydestruct>
  4022c0:	mov	w26, #0xfffffffe            	// #-2
  4022c4:	b	401f08 <yyparse+0x6a0>
  4022c8:	cmp	x20, x24
  4022cc:	b.eq	4023d0 <yyparse+0xb68>  // b.none
  4022d0:	add	x0, x22, #0x270
  4022d4:	mov	x3, x23
  4022d8:	mov	x2, x19
  4022dc:	ldrb	w1, [x0, w21, sxtw]
  4022e0:	mov	x0, x27
  4022e4:	bl	401788 <yydestruct>
  4022e8:	sub	x19, x19, #0x8
  4022ec:	ldrsh	w21, [x20, #-2]!
  4022f0:	ldrsb	w0, [x22, w21, sxtw]
  4022f4:	cmn	w0, #0x14
  4022f8:	b.eq	4022c8 <yyparse+0xa60>  // b.none
  4022fc:	add	w0, w0, #0x1
  402300:	cmp	w0, #0x37
  402304:	b.hi	4022c8 <yyparse+0xa60>  // b.pmore
  402308:	ldrsb	w1, [x28, w0, sxtw]
  40230c:	cmp	w1, #0x1
  402310:	b.ne	4022c8 <yyparse+0xa60>  // b.any
  402314:	ldr	x1, [sp, #96]
  402318:	ldrb	w1, [x1, w0, sxtw]
  40231c:	cbz	w1, 4022c8 <yyparse+0xa60>
  402320:	ldr	x0, [sp, #2168]
  402324:	str	x0, [x19, #8]
  402328:	add	x19, x19, #0x8
  40232c:	mov	x0, x20
  402330:	mov	w21, w1
  402334:	mov	w1, #0x3                   	// #3
  402338:	str	w1, [sp, #116]
  40233c:	b	401d98 <yyparse+0x530>
  402340:	mov	w2, #0x5                   	// #5
  402344:	adrp	x1, 404000 <main+0x614>
  402348:	add	x1, x1, #0x410
  40234c:	adrp	x0, 404000 <main+0x614>
  402350:	add	x0, x0, #0x3d0
  402354:	bl	401530 <dcgettext@plt>
  402358:	mov	x2, x0
  40235c:	adrp	x1, 404000 <main+0x614>
  402360:	add	x1, x1, #0x3e0
  402364:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  402368:	ldr	x0, [x0, #416]
  40236c:	bl	4015b0 <fprintf@plt>
  402370:	mov	x21, x20
  402374:	mov	x20, x24
  402378:	mov	w24, #0x2                   	// #2
  40237c:	b	40239c <yyparse+0xb34>
  402380:	mov	x21, x20
  402384:	ldr	x20, [sp, #152]
  402388:	mov	w24, #0x1                   	// #1
  40238c:	b	40239c <yyparse+0xb34>
  402390:	mov	x21, x20
  402394:	mov	x20, x24
  402398:	mov	w24, #0x0                   	// #0
  40239c:	cmn	w26, #0x2
  4023a0:	b.eq	402400 <yyparse+0xb98>  // b.none
  4023a4:	b	4023e0 <yyparse+0xb78>
  4023a8:	mov	x21, x20
  4023ac:	mov	x20, x24
  4023b0:	mov	w24, #0x1                   	// #1
  4023b4:	adrp	x0, 404000 <main+0x614>
  4023b8:	add	x0, x0, #0x4a0
  4023bc:	add	x0, x0, #0x38
  4023c0:	ldrb	w1, [x0, w26, sxtw]
  4023c4:	b	4023ec <yyparse+0xb84>
  4023c8:	mov	x20, x21
  4023cc:	b	402440 <yyparse+0xbd8>
  4023d0:	mov	x21, x20
  4023d4:	mov	w24, #0x1                   	// #1
  4023d8:	cmn	w26, #0x2
  4023dc:	b.eq	402440 <yyparse+0xbd8>  // b.none
  4023e0:	mov	w1, #0x2                   	// #2
  4023e4:	cmp	w26, #0x10c
  4023e8:	b.ls	4023b4 <yyparse+0xb4c>  // b.plast
  4023ec:	mov	x3, x23
  4023f0:	add	x2, sp, #0x878
  4023f4:	adrp	x0, 404000 <main+0x614>
  4023f8:	add	x0, x0, #0x428
  4023fc:	bl	401788 <yydestruct>
  402400:	cmp	x20, x21
  402404:	b.eq	4023c8 <yyparse+0xb60>  // b.none
  402408:	adrp	x22, 404000 <main+0x614>
  40240c:	add	x22, x22, #0x4a0
  402410:	add	x22, x22, #0x270
  402414:	adrp	x25, 404000 <main+0x614>
  402418:	add	x25, x25, #0x448
  40241c:	ldrsh	w0, [x21], #-2
  402420:	mov	x3, x23
  402424:	mov	x2, x19
  402428:	ldrb	w1, [x22, w0, sxtw]
  40242c:	mov	x0, x25
  402430:	bl	401788 <yydestruct>
  402434:	sub	x19, x19, #0x8
  402438:	cmp	x21, x20
  40243c:	b.ne	40241c <yyparse+0xbb4>  // b.any
  402440:	add	x0, sp, #0x6e8
  402444:	cmp	x20, x0
  402448:	b.eq	402454 <yyparse+0xbec>  // b.none
  40244c:	mov	x0, x20
  402450:	bl	401500 <free@plt>
  402454:	mov	w0, w24
  402458:	ldp	x19, x20, [sp, #16]
  40245c:	ldp	x21, x22, [sp, #32]
  402460:	ldp	x23, x24, [sp, #48]
  402464:	ldp	x25, x26, [sp, #64]
  402468:	ldp	x27, x28, [sp, #80]
  40246c:	ldp	x29, x30, [sp]
  402470:	add	sp, sp, #0x880
  402474:	ret

0000000000402478 <find_largest_modulus>:
  402478:	stp	x29, x30, [sp, #-32]!
  40247c:	mov	x29, sp
  402480:	stp	x19, x20, [sp, #16]
  402484:	mov	x19, x0
  402488:	ldr	w1, [x0]
  40248c:	cmp	w1, #0x1
  402490:	b.ls	4024ac <find_largest_modulus+0x34>  // b.plast
  402494:	mov	w0, #0x0                   	// #0
  402498:	cmp	w1, #0x2
  40249c:	b.eq	4024cc <find_largest_modulus+0x54>  // b.none
  4024a0:	ldp	x19, x20, [sp, #16]
  4024a4:	ldp	x29, x30, [sp], #32
  4024a8:	ret
  4024ac:	ldr	x0, [x0, #8]
  4024b0:	bl	402478 <find_largest_modulus>
  4024b4:	mov	w20, w0
  4024b8:	ldr	x0, [x19, #16]
  4024bc:	bl	402478 <find_largest_modulus>
  4024c0:	cmp	w20, w0
  4024c4:	csel	w0, w20, w0, ge  // ge = tcont
  4024c8:	b	4024a0 <find_largest_modulus+0x28>
  4024cc:	ldr	x0, [x19, #8]
  4024d0:	ldr	x0, [x0]
  4024d4:	ldr	w0, [x0, #4]
  4024d8:	b	4024a0 <find_largest_modulus+0x28>

00000000004024dc <find_largest_number>:
  4024dc:	stp	x29, x30, [sp, #-32]!
  4024e0:	mov	x29, sp
  4024e4:	stp	x19, x20, [sp, #16]
  4024e8:	mov	x20, x0
  4024ec:	ldr	w1, [x0]
  4024f0:	cmp	w1, #0x1
  4024f4:	b.ls	402510 <find_largest_number+0x34>  // b.plast
  4024f8:	mov	w0, #0x0                   	// #0
  4024fc:	cmp	w1, #0x2
  402500:	b.eq	402530 <find_largest_number+0x54>  // b.none
  402504:	ldp	x19, x20, [sp, #16]
  402508:	ldp	x29, x30, [sp], #32
  40250c:	ret
  402510:	ldr	x0, [x0, #8]
  402514:	bl	4024dc <find_largest_number>
  402518:	mov	w19, w0
  40251c:	ldr	x0, [x20, #16]
  402520:	bl	4024dc <find_largest_number>
  402524:	cmp	w19, w0
  402528:	csel	w0, w19, w0, ge  // ge = tcont
  40252c:	b	402504 <find_largest_number+0x28>
  402530:	ldr	x0, [x20, #8]
  402534:	ldr	x0, [x0, #16]
  402538:	ldr	x4, [x0, #8]
  40253c:	cbz	x4, 402598 <find_largest_number+0xbc>
  402540:	ldr	x1, [x0]
  402544:	add	x4, x1, x4, lsl #3
  402548:	mov	w0, #0x0                   	// #0
  40254c:	b	402578 <find_largest_number+0x9c>
  402550:	cmp	w3, #0x1
  402554:	b.ne	40256c <find_largest_number+0x90>  // b.any
  402558:	ldr	d0, [x2, #8]
  40255c:	scvtf	d1, w0
  402560:	fcmpe	d0, d1
  402564:	b.le	40256c <find_largest_number+0x90>
  402568:	fcvtzs	w0, d0
  40256c:	add	x1, x1, #0x8
  402570:	cmp	x1, x4
  402574:	b.eq	402504 <find_largest_number+0x28>  // b.none
  402578:	ldr	x2, [x1]
  40257c:	ldr	x2, [x2, #8]
  402580:	ldr	w3, [x2]
  402584:	cbnz	w3, 402550 <find_largest_number+0x74>
  402588:	ldr	w2, [x2, #8]
  40258c:	cmp	w0, w2
  402590:	csel	w0, w0, w2, ge  // ge = tcont
  402594:	b	40256c <find_largest_number+0x90>
  402598:	mov	w0, #0x0                   	// #0
  40259c:	b	402504 <find_largest_number+0x28>

00000000004025a0 <apply_condition>:
  4025a0:	stp	x29, x30, [sp, #-32]!
  4025a4:	mov	x29, sp
  4025a8:	stp	x19, x20, [sp, #16]
  4025ac:	mov	x20, x0
  4025b0:	mov	w19, w1
  4025b4:	ldr	w1, [x0]
  4025b8:	cbz	w1, 4025dc <apply_condition+0x3c>
  4025bc:	cmp	w1, #0x1
  4025c0:	b.eq	402610 <apply_condition+0x70>  // b.none
  4025c4:	mov	w0, #0x0                   	// #0
  4025c8:	cmp	w1, #0x2
  4025cc:	b.eq	402644 <apply_condition+0xa4>  // b.none
  4025d0:	ldp	x19, x20, [sp, #16]
  4025d4:	ldp	x29, x30, [sp], #32
  4025d8:	ret
  4025dc:	mov	w1, w19
  4025e0:	ldr	x0, [x0, #8]
  4025e4:	bl	4025a0 <apply_condition>
  4025e8:	and	w1, w0, #0xff
  4025ec:	mov	w0, #0x0                   	// #0
  4025f0:	cbnz	w1, 4025fc <apply_condition+0x5c>
  4025f4:	and	w0, w0, #0x1
  4025f8:	b	4025d0 <apply_condition+0x30>
  4025fc:	mov	w1, w19
  402600:	ldr	x0, [x20, #16]
  402604:	bl	4025a0 <apply_condition>
  402608:	and	w0, w0, #0xff
  40260c:	b	4025f4 <apply_condition+0x54>
  402610:	mov	w1, w19
  402614:	ldr	x0, [x0, #8]
  402618:	bl	4025a0 <apply_condition>
  40261c:	and	w1, w0, #0xff
  402620:	mov	w0, #0x1                   	// #1
  402624:	cbz	w1, 402630 <apply_condition+0x90>
  402628:	and	w0, w0, #0x1
  40262c:	b	4025d0 <apply_condition+0x30>
  402630:	mov	w1, w19
  402634:	ldr	x0, [x20, #16]
  402638:	bl	4025a0 <apply_condition>
  40263c:	and	w0, w0, #0xff
  402640:	b	402628 <apply_condition+0x88>
  402644:	ldr	x5, [x20, #8]
  402648:	ldr	x0, [x5]
  40264c:	ldr	w0, [x0, #4]
  402650:	cmp	w0, #0x0
  402654:	b.le	402660 <apply_condition+0xc0>
  402658:	sdiv	w1, w19, w0
  40265c:	msub	w19, w1, w0, w19
  402660:	ldr	x0, [x5, #16]
  402664:	ldr	x3, [x0, #8]
  402668:	cbz	x3, 4026b8 <apply_condition+0x118>
  40266c:	ldr	x4, [x0]
  402670:	mov	x0, #0x0                   	// #0
  402674:	b	402684 <apply_condition+0xe4>
  402678:	add	x0, x0, #0x1
  40267c:	cmp	x0, x3
  402680:	b.eq	4026b8 <apply_condition+0x118>  // b.none
  402684:	ldr	x1, [x4, x0, lsl #3]
  402688:	ldr	x2, [x1]
  40268c:	ldr	w2, [x2, #8]
  402690:	cmp	w2, w19
  402694:	b.gt	402678 <apply_condition+0xd8>
  402698:	ldr	x1, [x1, #8]
  40269c:	ldr	w1, [x1, #8]
  4026a0:	cmp	w1, w19
  4026a4:	b.lt	402678 <apply_condition+0xd8>  // b.tstop
  4026a8:	ldr	w0, [x5, #8]
  4026ac:	cmp	w0, #0x0
  4026b0:	cset	w0, eq  // eq = none
  4026b4:	b	4025d0 <apply_condition+0x30>
  4026b8:	ldr	w0, [x5, #8]
  4026bc:	cmp	w0, #0x0
  4026c0:	cset	w0, ne  // ne = any
  4026c4:	b	4025d0 <apply_condition+0x30>

00000000004026c8 <print_condition_greater>:
  4026c8:	mov	x7, x1
  4026cc:	ldr	w1, [x0]
  4026d0:	cmp	w1, #0x2
  4026d4:	b.eq	4026e0 <print_condition_greater+0x18>  // b.none
  4026d8:	mov	w0, #0x0                   	// #0
  4026dc:	ret
  4026e0:	ldr	x1, [x0, #8]
  4026e4:	ldr	w2, [x1, #8]
  4026e8:	mov	w0, #0x0                   	// #0
  4026ec:	cbnz	w2, 402788 <print_condition_greater+0xc0>
  4026f0:	ldr	x9, [x1, #16]
  4026f4:	ldr	x1, [x9, #8]
  4026f8:	cbz	x1, 402744 <print_condition_greater+0x7c>
  4026fc:	ldr	x8, [x9]
  402700:	mov	x2, #0x0                   	// #0
  402704:	mov	w3, #0xffffffff            	// #-1
  402708:	ldr	x4, [x8, x2, lsl #3]
  40270c:	ldr	x5, [x4]
  402710:	ldr	w6, [x5]
  402714:	cbnz	w6, 40277c <print_condition_greater+0xb4>
  402718:	ldr	x4, [x4, #8]
  40271c:	ldr	w6, [x4]
  402720:	cbnz	w6, 40277c <print_condition_greater+0xb4>
  402724:	add	w3, w3, #0x1
  402728:	ldr	w0, [x5, #8]
  40272c:	cmp	w0, w3
  402730:	b.ne	40277c <print_condition_greater+0xb4>  // b.any
  402734:	ldr	w3, [x4, #8]
  402738:	add	x2, x2, #0x1
  40273c:	cmp	x2, x1
  402740:	b.ne	402708 <print_condition_greater+0x40>  // b.any
  402744:	stp	x29, x30, [sp, #-16]!
  402748:	mov	x29, sp
  40274c:	ldr	x0, [x9]
  402750:	add	x1, x0, x1, lsl #3
  402754:	ldur	x0, [x1, #-8]
  402758:	ldr	x0, [x0, #8]
  40275c:	ldr	w2, [x0, #8]
  402760:	adrp	x1, 404000 <main+0x614>
  402764:	add	x1, x1, #0x748
  402768:	mov	x0, x7
  40276c:	bl	4015b0 <fprintf@plt>
  402770:	mov	w0, #0x1                   	// #1
  402774:	ldp	x29, x30, [sp], #16
  402778:	ret
  40277c:	mov	w0, #0x0                   	// #0
  402780:	cmp	x1, x2
  402784:	b.eq	40278c <print_condition_greater+0xc4>  // b.none
  402788:	ret
  40278c:	mov	x1, x2
  402790:	b	402744 <print_condition_greater+0x7c>

0000000000402794 <print_condition_negation>:
  402794:	mov	x3, x1
  402798:	ldr	w1, [x0]
  40279c:	cmp	w1, #0x2
  4027a0:	b.eq	4027ac <print_condition_negation+0x18>  // b.none
  4027a4:	mov	w0, #0x0                   	// #0
  4027a8:	ret
  4027ac:	ldr	x1, [x0, #8]
  4027b0:	ldr	w2, [x1, #8]
  4027b4:	mov	w0, #0x0                   	// #0
  4027b8:	cbnz	w2, 4027cc <print_condition_negation+0x38>
  4027bc:	ldr	x1, [x1, #16]
  4027c0:	ldr	x2, [x1, #8]
  4027c4:	cmp	x2, #0x1
  4027c8:	b.eq	4027d0 <print_condition_negation+0x3c>  // b.none
  4027cc:	ret
  4027d0:	ldr	x0, [x1]
  4027d4:	ldr	x0, [x0]
  4027d8:	ldr	x1, [x0]
  4027dc:	ldr	x2, [x0, #8]
  4027e0:	mov	w0, #0x0                   	// #0
  4027e4:	cmp	x1, x2
  4027e8:	b.ne	4027cc <print_condition_negation+0x38>  // b.any
  4027ec:	stp	x29, x30, [sp, #-16]!
  4027f0:	mov	x29, sp
  4027f4:	ldr	w2, [x1, #8]
  4027f8:	adrp	x1, 404000 <main+0x614>
  4027fc:	add	x1, x1, #0x768
  402800:	mov	x0, x3
  402804:	bl	4015b0 <fprintf@plt>
  402808:	mov	w0, #0x1                   	// #1
  40280c:	ldp	x29, x30, [sp], #16
  402810:	ret

0000000000402814 <print_expression>:
  402814:	stp	x29, x30, [sp, #-16]!
  402818:	mov	x29, sp
  40281c:	mov	x3, x2
  402820:	ldr	w2, [x0, #4]
  402824:	cbz	w2, 402854 <print_expression+0x40>
  402828:	and	w1, w1, #0xff
  40282c:	adrp	x0, 404000 <main+0x614>
  402830:	add	x0, x0, #0x790
  402834:	adrp	x4, 404000 <main+0x614>
  402838:	add	x4, x4, #0x788
  40283c:	cmp	w1, #0x0
  402840:	csel	x1, x4, x0, ne  // ne = any
  402844:	mov	x0, x3
  402848:	bl	4015b0 <fprintf@plt>
  40284c:	ldp	x29, x30, [sp], #16
  402850:	ret
  402854:	mov	x1, x3
  402858:	mov	w0, #0x6e                  	// #110
  40285c:	bl	401340 <fputc@plt>
  402860:	b	40284c <print_expression+0x38>

0000000000402864 <print_condition>:
  402864:	stp	x29, x30, [sp, #-96]!
  402868:	mov	x29, sp
  40286c:	stp	x19, x20, [sp, #16]
  402870:	stp	x21, x22, [sp, #32]
  402874:	mov	x20, x0
  402878:	mov	w22, w1
  40287c:	mov	x19, x3
  402880:	ldr	w0, [x0]
  402884:	cbz	w0, 4028bc <print_condition+0x58>
  402888:	stp	x23, x24, [sp, #48]
  40288c:	and	w23, w2, #0xff
  402890:	cmp	w0, #0x1
  402894:	b.eq	402968 <print_condition+0x104>  // b.none
  402898:	mov	w21, #0x0                   	// #0
  40289c:	cmp	w0, #0x2
  4028a0:	b.eq	402a18 <print_condition+0x1b4>  // b.none
  4028a4:	ldp	x23, x24, [sp, #48]
  4028a8:	mov	w0, w21
  4028ac:	ldp	x19, x20, [sp, #16]
  4028b0:	ldp	x21, x22, [sp, #32]
  4028b4:	ldp	x29, x30, [sp], #96
  4028b8:	ret
  4028bc:	cmp	w1, #0x1
  4028c0:	b.eq	402908 <print_condition+0xa4>  // b.none
  4028c4:	mov	w2, #0x0                   	// #0
  4028c8:	mov	w1, #0x0                   	// #0
  4028cc:	ldr	x0, [x20, #8]
  4028d0:	bl	402864 <print_condition>
  4028d4:	mov	x3, x19
  4028d8:	mov	x2, #0x4                   	// #4
  4028dc:	mov	x1, #0x1                   	// #1
  4028e0:	adrp	x0, 404000 <main+0x614>
  4028e4:	add	x0, x0, #0x7b8
  4028e8:	bl	401510 <fwrite@plt>
  4028ec:	mov	x3, x19
  4028f0:	mov	w2, #0x0                   	// #0
  4028f4:	mov	w1, #0x0                   	// #0
  4028f8:	ldr	x0, [x20, #16]
  4028fc:	bl	402864 <print_condition>
  402900:	mov	w21, #0x1                   	// #1
  402904:	b	4028a8 <print_condition+0x44>
  402908:	mov	x1, x3
  40290c:	mov	w0, #0x28                  	// #40
  402910:	bl	401340 <fputc@plt>
  402914:	mov	x3, x19
  402918:	mov	w2, #0x0                   	// #0
  40291c:	mov	w1, #0x0                   	// #0
  402920:	ldr	x0, [x20, #8]
  402924:	bl	402864 <print_condition>
  402928:	mov	x3, x19
  40292c:	mov	x2, #0x4                   	// #4
  402930:	mov	x1, #0x1                   	// #1
  402934:	adrp	x0, 404000 <main+0x614>
  402938:	add	x0, x0, #0x7b8
  40293c:	bl	401510 <fwrite@plt>
  402940:	mov	x3, x19
  402944:	mov	w2, #0x0                   	// #0
  402948:	mov	w1, #0x0                   	// #0
  40294c:	ldr	x0, [x20, #16]
  402950:	bl	402864 <print_condition>
  402954:	mov	x1, x19
  402958:	mov	w0, #0x29                  	// #41
  40295c:	bl	401340 <fputc@plt>
  402960:	mov	w21, #0x1                   	// #1
  402964:	b	4028a8 <print_condition+0x44>
  402968:	cbz	w1, 4029b4 <print_condition+0x150>
  40296c:	mov	w2, #0x0                   	// #0
  402970:	mov	w1, #0x1                   	// #1
  402974:	ldr	x0, [x20, #8]
  402978:	bl	402864 <print_condition>
  40297c:	mov	x3, x19
  402980:	mov	x2, #0x4                   	// #4
  402984:	mov	x1, #0x1                   	// #1
  402988:	adrp	x0, 404000 <main+0x614>
  40298c:	add	x0, x0, #0x7c0
  402990:	bl	401510 <fwrite@plt>
  402994:	mov	x3, x19
  402998:	mov	w2, #0x0                   	// #0
  40299c:	mov	w1, #0x1                   	// #1
  4029a0:	ldr	x0, [x20, #16]
  4029a4:	bl	402864 <print_condition>
  4029a8:	mov	w21, #0x1                   	// #1
  4029ac:	ldp	x23, x24, [sp, #48]
  4029b0:	b	4028a8 <print_condition+0x44>
  4029b4:	mov	x1, x3
  4029b8:	mov	w0, #0x28                  	// #40
  4029bc:	bl	401340 <fputc@plt>
  4029c0:	mov	x3, x19
  4029c4:	mov	w2, #0x0                   	// #0
  4029c8:	mov	w1, #0x1                   	// #1
  4029cc:	ldr	x0, [x20, #8]
  4029d0:	bl	402864 <print_condition>
  4029d4:	mov	x3, x19
  4029d8:	mov	x2, #0x4                   	// #4
  4029dc:	mov	x1, #0x1                   	// #1
  4029e0:	adrp	x0, 404000 <main+0x614>
  4029e4:	add	x0, x0, #0x7c0
  4029e8:	bl	401510 <fwrite@plt>
  4029ec:	mov	x3, x19
  4029f0:	mov	w2, #0x0                   	// #0
  4029f4:	mov	w1, #0x1                   	// #1
  4029f8:	ldr	x0, [x20, #16]
  4029fc:	bl	402864 <print_condition>
  402a00:	mov	x1, x19
  402a04:	mov	w0, #0x29                  	// #41
  402a08:	bl	401340 <fputc@plt>
  402a0c:	mov	w21, #0x1                   	// #1
  402a10:	ldp	x23, x24, [sp, #48]
  402a14:	b	4028a8 <print_condition+0x44>
  402a18:	ldr	x20, [x20, #8]
  402a1c:	ldr	w0, [x20, #8]
  402a20:	cbnz	w0, 402b70 <print_condition+0x30c>
  402a24:	cbnz	w1, 402a38 <print_condition+0x1d4>
  402a28:	ldr	x0, [x20, #16]
  402a2c:	ldr	x0, [x0, #8]
  402a30:	cmp	x0, #0x1
  402a34:	b.hi	402a70 <print_condition+0x20c>  // b.pmore
  402a38:	ldr	x0, [x20, #16]
  402a3c:	ldr	x1, [x0, #8]
  402a40:	cbz	x1, 402a80 <print_condition+0x21c>
  402a44:	stp	x25, x26, [sp, #64]
  402a48:	str	x27, [sp, #80]
  402a4c:	ldr	x0, [x0]
  402a50:	ldr	x24, [x0]
  402a54:	mov	x21, #0x0                   	// #0
  402a58:	mov	w27, #0x28                  	// #40
  402a5c:	adrp	x26, 404000 <main+0x614>
  402a60:	add	x26, x26, #0x7d8
  402a64:	adrp	x25, 404000 <main+0x614>
  402a68:	add	x25, x25, #0x7b8
  402a6c:	b	402d5c <print_condition+0x4f8>
  402a70:	mov	x1, x3
  402a74:	mov	w0, #0x28                  	// #40
  402a78:	bl	401340 <fputc@plt>
  402a7c:	b	402a38 <print_condition+0x1d4>
  402a80:	mov	w21, #0x1                   	// #1
  402a84:	ldp	x23, x24, [sp, #48]
  402a88:	b	4028a8 <print_condition+0x44>
  402a8c:	mov	x3, x19
  402a90:	mov	x2, #0x4                   	// #4
  402a94:	mov	x1, #0x1                   	// #1
  402a98:	adrp	x0, 404000 <main+0x614>
  402a9c:	add	x0, x0, #0x7c0
  402aa0:	bl	401510 <fwrite@plt>
  402aa4:	b	402d5c <print_condition+0x4f8>
  402aa8:	mov	x2, x19
  402aac:	mov	w1, w23
  402ab0:	ldr	x0, [x20]
  402ab4:	bl	402814 <print_expression>
  402ab8:	cbz	w23, 402af0 <print_condition+0x28c>
  402abc:	ldr	x0, [x20, #16]
  402ac0:	ldr	x2, [x0, #8]
  402ac4:	adrp	x0, 404000 <main+0x614>
  402ac8:	add	x0, x0, #0x7a0
  402acc:	adrp	x1, 404000 <main+0x614>
  402ad0:	add	x1, x1, #0x798
  402ad4:	cmp	x2, #0x1
  402ad8:	csel	x1, x1, x0, ne  // ne = any
  402adc:	ldr	x0, [x24]
  402ae0:	ldr	w2, [x0, #8]
  402ae4:	mov	x0, x19
  402ae8:	bl	4015b0 <fprintf@plt>
  402aec:	b	402d3c <print_condition+0x4d8>
  402af0:	adrp	x1, 404000 <main+0x614>
  402af4:	add	x1, x1, #0x798
  402af8:	b	402adc <print_condition+0x278>
  402afc:	mov	x2, x19
  402b00:	mov	w1, #0x0                   	// #0
  402b04:	ldr	x0, [x20]
  402b08:	bl	402814 <print_expression>
  402b0c:	ldr	x0, [x24, #8]
  402b10:	ldr	w2, [x0, #8]
  402b14:	adrp	x1, 404000 <main+0x614>
  402b18:	add	x1, x1, #0x7c8
  402b1c:	mov	x0, x19
  402b20:	bl	4015b0 <fprintf@plt>
  402b24:	b	402d3c <print_condition+0x4d8>
  402b28:	cmp	w22, #0x0
  402b2c:	cset	w21, eq  // eq = none
  402b30:	cmp	x1, #0x1
  402b34:	cset	w0, hi  // hi = pmore
  402b38:	ands	w21, w21, w0
  402b3c:	b.ne	402b54 <print_condition+0x2f0>  // b.any
  402b40:	mov	w21, #0x1                   	// #1
  402b44:	ldp	x23, x24, [sp, #48]
  402b48:	ldp	x25, x26, [sp, #64]
  402b4c:	ldr	x27, [sp, #80]
  402b50:	b	4028a8 <print_condition+0x44>
  402b54:	mov	x1, x19
  402b58:	mov	w0, #0x29                  	// #41
  402b5c:	bl	401340 <fputc@plt>
  402b60:	ldp	x23, x24, [sp, #48]
  402b64:	ldp	x25, x26, [sp, #64]
  402b68:	ldr	x27, [sp, #80]
  402b6c:	b	4028a8 <print_condition+0x44>
  402b70:	cmp	w1, #0x1
  402b74:	b.eq	402bb0 <print_condition+0x34c>  // b.none
  402b78:	ldr	x0, [x20, #16]
  402b7c:	ldr	x1, [x0, #8]
  402b80:	cbz	x1, 402bd0 <print_condition+0x36c>
  402b84:	stp	x25, x26, [sp, #64]
  402b88:	str	x27, [sp, #80]
  402b8c:	ldr	x0, [x0]
  402b90:	ldr	x24, [x0]
  402b94:	mov	x21, #0x0                   	// #0
  402b98:	mov	w27, #0x28                  	// #40
  402b9c:	adrp	x26, 404000 <main+0x614>
  402ba0:	add	x26, x26, #0x7e0
  402ba4:	adrp	x25, 404000 <main+0x614>
  402ba8:	add	x25, x25, #0x7c0
  402bac:	b	402e9c <print_condition+0x638>
  402bb0:	ldr	x0, [x20, #16]
  402bb4:	ldr	x0, [x0, #8]
  402bb8:	cmp	x0, #0x1
  402bbc:	b.ls	402b78 <print_condition+0x314>  // b.plast
  402bc0:	mov	x1, x3
  402bc4:	mov	w0, #0x28                  	// #40
  402bc8:	bl	401340 <fputc@plt>
  402bcc:	b	402b78 <print_condition+0x314>
  402bd0:	mov	w21, #0x1                   	// #1
  402bd4:	ldp	x23, x24, [sp, #48]
  402bd8:	b	4028a8 <print_condition+0x44>
  402bdc:	mov	x3, x19
  402be0:	mov	x2, #0x4                   	// #4
  402be4:	mov	x1, #0x1                   	// #1
  402be8:	adrp	x0, 404000 <main+0x614>
  402bec:	add	x0, x0, #0x7b8
  402bf0:	bl	401510 <fwrite@plt>
  402bf4:	b	402e9c <print_condition+0x638>
  402bf8:	mov	x2, x19
  402bfc:	mov	w1, w23
  402c00:	ldr	x0, [x20]
  402c04:	bl	402814 <print_expression>
  402c08:	cbz	w23, 402c40 <print_condition+0x3dc>
  402c0c:	ldr	x0, [x20, #16]
  402c10:	ldr	x2, [x0, #8]
  402c14:	adrp	x0, 404000 <main+0x614>
  402c18:	add	x0, x0, #0x7b0
  402c1c:	adrp	x1, 404000 <main+0x614>
  402c20:	add	x1, x1, #0x7a8
  402c24:	cmp	x2, #0x1
  402c28:	csel	x1, x1, x0, ne  // ne = any
  402c2c:	ldr	x0, [x24]
  402c30:	ldr	w2, [x0, #8]
  402c34:	mov	x0, x19
  402c38:	bl	4015b0 <fprintf@plt>
  402c3c:	b	402e7c <print_condition+0x618>
  402c40:	adrp	x1, 404000 <main+0x614>
  402c44:	add	x1, x1, #0x7a8
  402c48:	b	402c2c <print_condition+0x3c8>
  402c4c:	mov	x2, x19
  402c50:	mov	w1, #0x0                   	// #0
  402c54:	ldr	x0, [x20]
  402c58:	bl	402814 <print_expression>
  402c5c:	ldr	x0, [x24, #8]
  402c60:	ldr	w2, [x0, #8]
  402c64:	adrp	x1, 404000 <main+0x614>
  402c68:	add	x1, x1, #0x7d0
  402c6c:	mov	x0, x19
  402c70:	bl	4015b0 <fprintf@plt>
  402c74:	b	402e7c <print_condition+0x618>
  402c78:	cmp	w22, #0x1
  402c7c:	cset	w21, eq  // eq = none
  402c80:	cmp	x1, #0x1
  402c84:	cset	w0, hi  // hi = pmore
  402c88:	ands	w21, w21, w0
  402c8c:	b.ne	402ca4 <print_condition+0x440>  // b.any
  402c90:	mov	w21, #0x1                   	// #1
  402c94:	ldp	x23, x24, [sp, #48]
  402c98:	ldp	x25, x26, [sp, #64]
  402c9c:	ldr	x27, [sp, #80]
  402ca0:	b	4028a8 <print_condition+0x44>
  402ca4:	mov	x1, x19
  402ca8:	mov	w0, #0x29                  	// #41
  402cac:	bl	401340 <fputc@plt>
  402cb0:	ldp	x23, x24, [sp, #48]
  402cb4:	ldp	x25, x26, [sp, #64]
  402cb8:	ldr	x27, [sp, #80]
  402cbc:	b	4028a8 <print_condition+0x44>
  402cc0:	mov	x2, x19
  402cc4:	mov	w1, #0x0                   	// #0
  402cc8:	ldr	x0, [x20]
  402ccc:	bl	402814 <print_expression>
  402cd0:	ldr	x0, [x24]
  402cd4:	ldr	w2, [x0, #8]
  402cd8:	mov	x1, x26
  402cdc:	mov	x0, x19
  402ce0:	bl	4015b0 <fprintf@plt>
  402ce4:	mov	x3, x19
  402ce8:	mov	x2, #0x4                   	// #4
  402cec:	mov	x1, #0x1                   	// #1
  402cf0:	mov	x0, x25
  402cf4:	bl	401510 <fwrite@plt>
  402cf8:	mov	x2, x19
  402cfc:	mov	w1, #0x0                   	// #0
  402d00:	ldr	x0, [x20]
  402d04:	bl	402814 <print_expression>
  402d08:	ldr	x0, [x24, #8]
  402d0c:	ldr	w2, [x0, #8]
  402d10:	adrp	x1, 404000 <main+0x614>
  402d14:	add	x1, x1, #0x7c8
  402d18:	mov	x0, x19
  402d1c:	bl	4015b0 <fprintf@plt>
  402d20:	ldr	x0, [x20, #16]
  402d24:	ldr	x0, [x0, #8]
  402d28:	cmp	x0, #0x1
  402d2c:	b.ls	402d3c <print_condition+0x4d8>  // b.plast
  402d30:	mov	x1, x19
  402d34:	mov	w0, #0x29                  	// #41
  402d38:	bl	401340 <fputc@plt>
  402d3c:	add	x21, x21, #0x1
  402d40:	ldr	x0, [x20, #16]
  402d44:	ldr	x1, [x0, #8]
  402d48:	cmp	x21, x1
  402d4c:	b.cs	402b28 <print_condition+0x2c4>  // b.hs, b.nlast
  402d50:	ldr	x0, [x0]
  402d54:	ldr	x24, [x0, x21, lsl #3]
  402d58:	cbnz	x21, 402a8c <print_condition+0x228>
  402d5c:	ldr	x0, [x24]
  402d60:	ldr	w0, [x0, #8]
  402d64:	ldr	x1, [x24, #8]
  402d68:	ldr	w1, [x1, #8]
  402d6c:	cmp	w0, w1
  402d70:	b.eq	402aa8 <print_condition+0x244>  // b.none
  402d74:	cbz	w0, 402afc <print_condition+0x298>
  402d78:	cmp	w22, #0x1
  402d7c:	b.eq	402f3c <print_condition+0x6d8>  // b.none
  402d80:	ldr	x0, [x20, #16]
  402d84:	ldr	x0, [x0, #8]
  402d88:	cmp	x0, #0x1
  402d8c:	b.ls	402cc0 <print_condition+0x45c>  // b.plast
  402d90:	mov	x1, x19
  402d94:	mov	w0, w27
  402d98:	bl	401340 <fputc@plt>
  402d9c:	mov	x2, x19
  402da0:	mov	w1, #0x0                   	// #0
  402da4:	ldr	x0, [x20]
  402da8:	bl	402814 <print_expression>
  402dac:	ldr	x0, [x24]
  402db0:	ldr	w2, [x0, #8]
  402db4:	mov	x1, x26
  402db8:	mov	x0, x19
  402dbc:	bl	4015b0 <fprintf@plt>
  402dc0:	mov	x3, x19
  402dc4:	mov	x2, #0x4                   	// #4
  402dc8:	mov	x1, #0x1                   	// #1
  402dcc:	mov	x0, x25
  402dd0:	bl	401510 <fwrite@plt>
  402dd4:	mov	x2, x19
  402dd8:	mov	w1, #0x0                   	// #0
  402ddc:	ldr	x0, [x20]
  402de0:	bl	402814 <print_expression>
  402de4:	ldr	x0, [x24, #8]
  402de8:	ldr	w2, [x0, #8]
  402dec:	adrp	x1, 404000 <main+0x614>
  402df0:	add	x1, x1, #0x7c8
  402df4:	mov	x0, x19
  402df8:	bl	4015b0 <fprintf@plt>
  402dfc:	b	402d20 <print_condition+0x4bc>
  402e00:	mov	x2, x19
  402e04:	mov	w1, #0x0                   	// #0
  402e08:	ldr	x0, [x20]
  402e0c:	bl	402814 <print_expression>
  402e10:	ldr	x0, [x24]
  402e14:	ldr	w2, [x0, #8]
  402e18:	mov	x1, x26
  402e1c:	mov	x0, x19
  402e20:	bl	4015b0 <fprintf@plt>
  402e24:	mov	x3, x19
  402e28:	mov	x2, #0x4                   	// #4
  402e2c:	mov	x1, #0x1                   	// #1
  402e30:	mov	x0, x25
  402e34:	bl	401510 <fwrite@plt>
  402e38:	mov	x2, x19
  402e3c:	mov	w1, #0x0                   	// #0
  402e40:	ldr	x0, [x20]
  402e44:	bl	402814 <print_expression>
  402e48:	ldr	x0, [x24, #8]
  402e4c:	ldr	w2, [x0, #8]
  402e50:	adrp	x1, 404000 <main+0x614>
  402e54:	add	x1, x1, #0x7d0
  402e58:	mov	x0, x19
  402e5c:	bl	4015b0 <fprintf@plt>
  402e60:	ldr	x0, [x20, #16]
  402e64:	ldr	x0, [x0, #8]
  402e68:	cmp	x0, #0x1
  402e6c:	b.ls	402e7c <print_condition+0x618>  // b.plast
  402e70:	mov	x1, x19
  402e74:	mov	w0, #0x29                  	// #41
  402e78:	bl	401340 <fputc@plt>
  402e7c:	add	x21, x21, #0x1
  402e80:	ldr	x0, [x20, #16]
  402e84:	ldr	x1, [x0, #8]
  402e88:	cmp	x21, x1
  402e8c:	b.cs	402c78 <print_condition+0x414>  // b.hs, b.nlast
  402e90:	ldr	x0, [x0]
  402e94:	ldr	x24, [x0, x21, lsl #3]
  402e98:	cbnz	x21, 402bdc <print_condition+0x378>
  402e9c:	ldr	x0, [x24]
  402ea0:	ldr	w0, [x0, #8]
  402ea4:	ldr	x1, [x24, #8]
  402ea8:	ldr	w1, [x1, #8]
  402eac:	cmp	w0, w1
  402eb0:	b.eq	402bf8 <print_condition+0x394>  // b.none
  402eb4:	cbz	w0, 402c4c <print_condition+0x3e8>
  402eb8:	cbz	w22, 402fac <print_condition+0x748>
  402ebc:	ldr	x0, [x20, #16]
  402ec0:	ldr	x0, [x0, #8]
  402ec4:	cmp	x0, #0x1
  402ec8:	b.ls	402e00 <print_condition+0x59c>  // b.plast
  402ecc:	mov	x1, x19
  402ed0:	mov	w0, w27
  402ed4:	bl	401340 <fputc@plt>
  402ed8:	mov	x2, x19
  402edc:	mov	w1, #0x0                   	// #0
  402ee0:	ldr	x0, [x20]
  402ee4:	bl	402814 <print_expression>
  402ee8:	ldr	x0, [x24]
  402eec:	ldr	w2, [x0, #8]
  402ef0:	mov	x1, x26
  402ef4:	mov	x0, x19
  402ef8:	bl	4015b0 <fprintf@plt>
  402efc:	mov	x3, x19
  402f00:	mov	x2, #0x4                   	// #4
  402f04:	mov	x1, #0x1                   	// #1
  402f08:	mov	x0, x25
  402f0c:	bl	401510 <fwrite@plt>
  402f10:	mov	x2, x19
  402f14:	mov	w1, #0x0                   	// #0
  402f18:	ldr	x0, [x20]
  402f1c:	bl	402814 <print_expression>
  402f20:	ldr	x0, [x24, #8]
  402f24:	ldr	w2, [x0, #8]
  402f28:	adrp	x1, 404000 <main+0x614>
  402f2c:	add	x1, x1, #0x7d0
  402f30:	mov	x0, x19
  402f34:	bl	4015b0 <fprintf@plt>
  402f38:	b	402e60 <print_condition+0x5fc>
  402f3c:	mov	x1, x19
  402f40:	mov	w0, w27
  402f44:	bl	401340 <fputc@plt>
  402f48:	mov	x2, x19
  402f4c:	mov	w1, #0x0                   	// #0
  402f50:	ldr	x0, [x20]
  402f54:	bl	402814 <print_expression>
  402f58:	ldr	x0, [x24]
  402f5c:	ldr	w2, [x0, #8]
  402f60:	mov	x1, x26
  402f64:	mov	x0, x19
  402f68:	bl	4015b0 <fprintf@plt>
  402f6c:	mov	x3, x19
  402f70:	mov	x2, #0x4                   	// #4
  402f74:	mov	x1, #0x1                   	// #1
  402f78:	mov	x0, x25
  402f7c:	bl	401510 <fwrite@plt>
  402f80:	mov	x2, x19
  402f84:	mov	w1, #0x0                   	// #0
  402f88:	ldr	x0, [x20]
  402f8c:	bl	402814 <print_expression>
  402f90:	ldr	x0, [x24, #8]
  402f94:	ldr	w2, [x0, #8]
  402f98:	adrp	x1, 404000 <main+0x614>
  402f9c:	add	x1, x1, #0x7c8
  402fa0:	mov	x0, x19
  402fa4:	bl	4015b0 <fprintf@plt>
  402fa8:	b	402d30 <print_condition+0x4cc>
  402fac:	mov	x1, x19
  402fb0:	mov	w0, w27
  402fb4:	bl	401340 <fputc@plt>
  402fb8:	mov	x2, x19
  402fbc:	mov	w1, #0x0                   	// #0
  402fc0:	ldr	x0, [x20]
  402fc4:	bl	402814 <print_expression>
  402fc8:	ldr	x0, [x24]
  402fcc:	ldr	w2, [x0, #8]
  402fd0:	mov	x1, x26
  402fd4:	mov	x0, x19
  402fd8:	bl	4015b0 <fprintf@plt>
  402fdc:	mov	x3, x19
  402fe0:	mov	x2, #0x4                   	// #4
  402fe4:	mov	x1, #0x1                   	// #1
  402fe8:	mov	x0, x25
  402fec:	bl	401510 <fwrite@plt>
  402ff0:	mov	x2, x19
  402ff4:	mov	w1, #0x0                   	// #0
  402ff8:	ldr	x0, [x20]
  402ffc:	bl	402814 <print_expression>
  403000:	ldr	x0, [x24, #8]
  403004:	ldr	w2, [x0, #8]
  403008:	adrp	x1, 404000 <main+0x614>
  40300c:	add	x1, x1, #0x7d0
  403010:	mov	x0, x19
  403014:	bl	4015b0 <fprintf@plt>
  403018:	b	402e70 <print_condition+0x60c>

000000000040301c <cldr_plural_range_free>:
  40301c:	stp	x29, x30, [sp, #-32]!
  403020:	mov	x29, sp
  403024:	str	x19, [sp, #16]
  403028:	mov	x19, x0
  40302c:	ldr	x0, [x0]
  403030:	ldr	x1, [x19, #8]
  403034:	cmp	x0, x1
  403038:	b.eq	403040 <cldr_plural_range_free+0x24>  // b.none
  40303c:	bl	401500 <free@plt>
  403040:	ldr	x0, [x19, #8]
  403044:	bl	401500 <free@plt>
  403048:	mov	x0, x19
  40304c:	bl	401500 <free@plt>
  403050:	ldr	x19, [sp, #16]
  403054:	ldp	x29, x30, [sp], #32
  403058:	ret

000000000040305c <cldr_plural_range_list_free>:
  40305c:	stp	x29, x30, [sp, #-32]!
  403060:	mov	x29, sp
  403064:	str	x19, [sp, #16]
  403068:	mov	x19, x0
  40306c:	ldr	x1, [x0, #8]
  403070:	sub	x0, x1, #0x1
  403074:	str	x0, [x19, #8]
  403078:	cbz	x1, 403098 <cldr_plural_range_list_free+0x3c>
  40307c:	ldr	x1, [x19]
  403080:	ldr	x0, [x1, x0, lsl #3]
  403084:	bl	40301c <cldr_plural_range_free>
  403088:	ldr	x1, [x19, #8]
  40308c:	sub	x0, x1, #0x1
  403090:	str	x0, [x19, #8]
  403094:	cbnz	x1, 40307c <cldr_plural_range_list_free+0x20>
  403098:	ldr	x0, [x19]
  40309c:	bl	401500 <free@plt>
  4030a0:	mov	x0, x19
  4030a4:	bl	401500 <free@plt>
  4030a8:	ldr	x19, [sp, #16]
  4030ac:	ldp	x29, x30, [sp], #32
  4030b0:	ret

00000000004030b4 <cldr_plural_relation_free>:
  4030b4:	stp	x29, x30, [sp, #-32]!
  4030b8:	mov	x29, sp
  4030bc:	str	x19, [sp, #16]
  4030c0:	mov	x19, x0
  4030c4:	ldr	x0, [x0]
  4030c8:	bl	401500 <free@plt>
  4030cc:	ldr	x0, [x19, #16]
  4030d0:	bl	40305c <cldr_plural_range_list_free>
  4030d4:	mov	x0, x19
  4030d8:	bl	401500 <free@plt>
  4030dc:	ldr	x19, [sp, #16]
  4030e0:	ldp	x29, x30, [sp], #32
  4030e4:	ret

00000000004030e8 <cldr_plural_condition_free>:
  4030e8:	stp	x29, x30, [sp, #-32]!
  4030ec:	mov	x29, sp
  4030f0:	str	x19, [sp, #16]
  4030f4:	mov	x19, x0
  4030f8:	ldr	w0, [x0]
  4030fc:	cmp	w0, #0x1
  403100:	b.ls	403120 <cldr_plural_condition_free+0x38>  // b.plast
  403104:	cmp	w0, #0x2
  403108:	b.eq	403134 <cldr_plural_condition_free+0x4c>  // b.none
  40310c:	mov	x0, x19
  403110:	bl	401500 <free@plt>
  403114:	ldr	x19, [sp, #16]
  403118:	ldp	x29, x30, [sp], #32
  40311c:	ret
  403120:	ldr	x0, [x19, #8]
  403124:	bl	4030e8 <cldr_plural_condition_free>
  403128:	ldr	x0, [x19, #16]
  40312c:	bl	4030e8 <cldr_plural_condition_free>
  403130:	b	40310c <cldr_plural_condition_free+0x24>
  403134:	ldr	x0, [x19, #8]
  403138:	bl	4030b4 <cldr_plural_relation_free>
  40313c:	b	40310c <cldr_plural_condition_free+0x24>

0000000000403140 <eval_condition>:
  403140:	stp	x29, x30, [sp, #-48]!
  403144:	mov	x29, sp
  403148:	stp	x19, x20, [sp, #16]
  40314c:	mov	x19, x0
  403150:	ldr	w0, [x0]
  403154:	cbz	w0, 4031b8 <eval_condition+0x78>
  403158:	cmp	w0, #0x1
  40315c:	b.eq	4032b0 <eval_condition+0x170>  // b.none
  403160:	ldr	x0, [x19, #8]
  403164:	ldr	x1, [x0]
  403168:	ldr	w2, [x1]
  40316c:	sub	w1, w2, #0x66
  403170:	cmp	w1, #0x11
  403174:	b.hi	40322c <eval_condition+0xec>  // b.pmore
  403178:	mov	x2, #0x1                   	// #1
  40317c:	lsl	x2, x2, x1
  403180:	mov	x1, #0x4001                	// #16385
  403184:	movk	x1, #0x3, lsl #16
  403188:	ands	x1, x2, x1
  40318c:	b.ne	4033a0 <eval_condition+0x260>  // b.any
  403190:	mov	x3, #0x108                 	// #264
  403194:	tst	x2, x3
  403198:	b.eq	40322c <eval_condition+0xec>  // b.none
  40319c:	ldr	x2, [x0, #16]
  4031a0:	ldr	x3, [x2, #8]
  4031a4:	cbnz	x3, 4033fc <eval_condition+0x2bc>
  4031a8:	ldr	x0, [x0]
  4031ac:	mov	w1, #0x69                  	// #105
  4031b0:	str	w1, [x0]
  4031b4:	b	40322c <eval_condition+0xec>
  4031b8:	ldr	x0, [x19, #8]
  4031bc:	bl	403140 <eval_condition>
  4031c0:	ldr	x0, [x19, #16]
  4031c4:	bl	403140 <eval_condition>
  4031c8:	ldr	x20, [x19, #8]
  4031cc:	ldr	w0, [x20]
  4031d0:	cmp	w0, #0x4
  4031d4:	b.eq	403214 <eval_condition+0xd4>  // b.none
  4031d8:	str	x21, [sp, #32]
  4031dc:	ldr	x21, [x19, #16]
  4031e0:	ldr	w1, [x21]
  4031e4:	cmp	w1, #0x4
  4031e8:	b.eq	403210 <eval_condition+0xd0>  // b.none
  4031ec:	cmp	w0, #0x3
  4031f0:	ccmp	w1, #0x3, #0x0, eq  // eq = none
  4031f4:	b.eq	403238 <eval_condition+0xf8>  // b.none
  4031f8:	cmp	w0, #0x3
  4031fc:	b.eq	403258 <eval_condition+0x118>  // b.none
  403200:	cmp	w1, #0x3
  403204:	b.eq	403284 <eval_condition+0x144>  // b.none
  403208:	ldr	x21, [sp, #32]
  40320c:	b	40322c <eval_condition+0xec>
  403210:	ldr	x21, [sp, #32]
  403214:	mov	x0, x20
  403218:	bl	4030e8 <cldr_plural_condition_free>
  40321c:	ldr	x0, [x19, #16]
  403220:	bl	4030e8 <cldr_plural_condition_free>
  403224:	mov	w0, #0x4                   	// #4
  403228:	str	w0, [x19]
  40322c:	ldp	x19, x20, [sp, #16]
  403230:	ldp	x29, x30, [sp], #48
  403234:	ret
  403238:	mov	x0, x20
  40323c:	bl	4030e8 <cldr_plural_condition_free>
  403240:	ldr	x0, [x19, #16]
  403244:	bl	4030e8 <cldr_plural_condition_free>
  403248:	mov	w0, #0x3                   	// #3
  40324c:	str	w0, [x19]
  403250:	ldr	x21, [sp, #32]
  403254:	b	40322c <eval_condition+0xec>
  403258:	mov	x0, x20
  40325c:	bl	4030e8 <cldr_plural_condition_free>
  403260:	ldr	x0, [x19, #16]
  403264:	ldr	w1, [x0]
  403268:	str	w1, [x19]
  40326c:	ldp	x0, x1, [x0, #8]
  403270:	stp	x0, x1, [x19, #8]
  403274:	mov	x0, x21
  403278:	bl	401500 <free@plt>
  40327c:	ldr	x21, [sp, #32]
  403280:	b	40322c <eval_condition+0xec>
  403284:	mov	x0, x21
  403288:	bl	4030e8 <cldr_plural_condition_free>
  40328c:	ldr	x0, [x19, #8]
  403290:	ldr	w1, [x0]
  403294:	str	w1, [x19]
  403298:	ldp	x0, x1, [x0, #8]
  40329c:	stp	x0, x1, [x19, #8]
  4032a0:	mov	x0, x20
  4032a4:	bl	401500 <free@plt>
  4032a8:	ldr	x21, [sp, #32]
  4032ac:	b	40322c <eval_condition+0xec>
  4032b0:	ldr	x0, [x19, #8]
  4032b4:	bl	403140 <eval_condition>
  4032b8:	ldr	x0, [x19, #16]
  4032bc:	bl	403140 <eval_condition>
  4032c0:	ldr	x20, [x19, #8]
  4032c4:	ldr	w0, [x20]
  4032c8:	cmp	w0, #0x3
  4032cc:	b.eq	40330c <eval_condition+0x1cc>  // b.none
  4032d0:	str	x21, [sp, #32]
  4032d4:	ldr	x21, [x19, #16]
  4032d8:	ldr	w1, [x21]
  4032dc:	cmp	w1, #0x3
  4032e0:	b.eq	403308 <eval_condition+0x1c8>  // b.none
  4032e4:	cmp	w1, #0x4
  4032e8:	ccmp	w0, #0x4, #0x0, eq  // eq = none
  4032ec:	b.eq	403328 <eval_condition+0x1e8>  // b.none
  4032f0:	cmp	w0, #0x4
  4032f4:	b.eq	403348 <eval_condition+0x208>  // b.none
  4032f8:	cmp	w1, #0x4
  4032fc:	b.eq	403374 <eval_condition+0x234>  // b.none
  403300:	ldr	x21, [sp, #32]
  403304:	b	40322c <eval_condition+0xec>
  403308:	ldr	x21, [sp, #32]
  40330c:	mov	x0, x20
  403310:	bl	4030e8 <cldr_plural_condition_free>
  403314:	ldr	x0, [x19, #16]
  403318:	bl	4030e8 <cldr_plural_condition_free>
  40331c:	mov	w0, #0x3                   	// #3
  403320:	str	w0, [x19]
  403324:	b	40322c <eval_condition+0xec>
  403328:	mov	x0, x20
  40332c:	bl	4030e8 <cldr_plural_condition_free>
  403330:	ldr	x0, [x19, #16]
  403334:	bl	4030e8 <cldr_plural_condition_free>
  403338:	mov	w0, #0x4                   	// #4
  40333c:	str	w0, [x19]
  403340:	ldr	x21, [sp, #32]
  403344:	b	40322c <eval_condition+0xec>
  403348:	mov	x0, x20
  40334c:	bl	4030e8 <cldr_plural_condition_free>
  403350:	ldr	x0, [x19, #16]
  403354:	ldr	w1, [x0]
  403358:	str	w1, [x19]
  40335c:	ldp	x0, x1, [x0, #8]
  403360:	stp	x0, x1, [x19, #8]
  403364:	mov	x0, x21
  403368:	bl	401500 <free@plt>
  40336c:	ldr	x21, [sp, #32]
  403370:	b	40322c <eval_condition+0xec>
  403374:	mov	x0, x21
  403378:	bl	4030e8 <cldr_plural_condition_free>
  40337c:	ldr	x0, [x19, #8]
  403380:	ldr	w1, [x0]
  403384:	str	w1, [x19]
  403388:	ldp	x0, x1, [x0, #8]
  40338c:	stp	x0, x1, [x19, #8]
  403390:	mov	x0, x20
  403394:	bl	401500 <free@plt>
  403398:	ldr	x21, [sp, #32]
  40339c:	b	40322c <eval_condition+0xec>
  4033a0:	ldr	x1, [x0, #16]
  4033a4:	ldr	x6, [x1, #8]
  4033a8:	mov	w20, #0x3                   	// #3
  4033ac:	cbz	x6, 4034ac <eval_condition+0x36c>
  4033b0:	ldr	x7, [x1]
  4033b4:	ldr	w5, [x0, #8]
  4033b8:	mov	x2, #0x0                   	// #0
  4033bc:	b	40348c <eval_condition+0x34c>
  4033c0:	ldr	d0, [x4, #8]
  4033c4:	fcvtzs	w3, d0
  4033c8:	str	wzr, [x4]
  4033cc:	ldr	x4, [x2]
  4033d0:	scvtf	d0, w3
  4033d4:	ldr	d1, [x4, #8]
  4033d8:	fcmp	d1, d0
  4033dc:	cinc	w3, w3, ne  // ne = any
  4033e0:	str	w3, [x4, #8]
  4033e4:	b	403414 <eval_condition+0x2d4>
  4033e8:	add	x1, x1, #0x1
  4033ec:	ldr	x2, [x0, #16]
  4033f0:	ldr	x3, [x2, #8]
  4033f4:	cmp	x1, x3
  4033f8:	b.cs	4031a8 <eval_condition+0x68>  // b.hs, b.nlast
  4033fc:	ldr	x2, [x2]
  403400:	ldr	x2, [x2, x1, lsl #3]
  403404:	ldr	x4, [x2]
  403408:	ldr	w3, [x4]
  40340c:	cmp	w3, #0x1
  403410:	b.eq	4033c0 <eval_condition+0x280>  // b.none
  403414:	ldr	x3, [x2, #8]
  403418:	ldr	w4, [x3]
  40341c:	cmp	w4, #0x1
  403420:	b.ne	4033e8 <eval_condition+0x2a8>  // b.any
  403424:	str	wzr, [x3]
  403428:	ldr	x3, [x2, #8]
  40342c:	ldr	d0, [x3, #8]
  403430:	fcvtzs	w2, d0
  403434:	str	w2, [x3, #8]
  403438:	b	4033e8 <eval_condition+0x2a8>
  40343c:	cmp	w4, #0x1
  403440:	b.ne	403530 <eval_condition+0x3f0>  // b.any
  403444:	ldr	d0, [x3, #8]
  403448:	fcmp	d0, #0.0
  40344c:	b.ne	403538 <eval_condition+0x3f8>  // b.any
  403450:	ldr	x1, [x1, #8]
  403454:	ldr	w3, [x1]
  403458:	cbnz	w3, 40346c <eval_condition+0x32c>
  40345c:	ldr	w1, [x1, #8]
  403460:	cbz	w1, 403480 <eval_condition+0x340>
  403464:	mov	w20, #0x4                   	// #4
  403468:	b	4034ac <eval_condition+0x36c>
  40346c:	cmp	w3, #0x1
  403470:	b.ne	403540 <eval_condition+0x400>  // b.any
  403474:	ldr	d0, [x1, #8]
  403478:	fcmp	d0, #0.0
  40347c:	b.ne	403548 <eval_condition+0x408>  // b.any
  403480:	add	x2, x2, #0x1
  403484:	cmp	x2, x6
  403488:	b.eq	403528 <eval_condition+0x3e8>  // b.none
  40348c:	ldr	x1, [x7, x2, lsl #3]
  403490:	cbnz	w5, 4034b8 <eval_condition+0x378>
  403494:	ldr	x3, [x1]
  403498:	ldr	w4, [x3]
  40349c:	cbnz	w4, 40343c <eval_condition+0x2fc>
  4034a0:	ldr	w3, [x3, #8]
  4034a4:	cbz	w3, 403450 <eval_condition+0x310>
  4034a8:	mov	w20, #0x4                   	// #4
  4034ac:	bl	4030b4 <cldr_plural_relation_free>
  4034b0:	str	w20, [x19]
  4034b4:	b	40322c <eval_condition+0xec>
  4034b8:	cmp	w5, #0x1
  4034bc:	b.ne	403480 <eval_condition+0x340>  // b.any
  4034c0:	ldr	x3, [x1]
  4034c4:	ldr	w4, [x3]
  4034c8:	cbnz	w4, 4034f0 <eval_condition+0x3b0>
  4034cc:	ldr	w3, [x3, #8]
  4034d0:	cbz	w3, 403550 <eval_condition+0x410>
  4034d4:	ldr	x1, [x1, #8]
  4034d8:	ldr	w3, [x1]
  4034dc:	cbnz	w3, 40350c <eval_condition+0x3cc>
  4034e0:	ldr	w1, [x1, #8]
  4034e4:	cbnz	w1, 403480 <eval_condition+0x340>
  4034e8:	mov	w20, #0x4                   	// #4
  4034ec:	b	4034ac <eval_condition+0x36c>
  4034f0:	cmp	w4, #0x1
  4034f4:	b.ne	4034d4 <eval_condition+0x394>  // b.any
  4034f8:	ldr	d0, [x3, #8]
  4034fc:	fcmp	d0, #0.0
  403500:	b.ne	4034d4 <eval_condition+0x394>  // b.any
  403504:	mov	w20, #0x4                   	// #4
  403508:	b	4034ac <eval_condition+0x36c>
  40350c:	cmp	w3, #0x1
  403510:	b.ne	403480 <eval_condition+0x340>  // b.any
  403514:	ldr	d0, [x1, #8]
  403518:	fcmp	d0, #0.0
  40351c:	b.ne	403480 <eval_condition+0x340>  // b.any
  403520:	mov	w20, #0x4                   	// #4
  403524:	b	4034ac <eval_condition+0x36c>
  403528:	mov	w20, #0x3                   	// #3
  40352c:	b	4034ac <eval_condition+0x36c>
  403530:	mov	w20, #0x4                   	// #4
  403534:	b	4034ac <eval_condition+0x36c>
  403538:	mov	w20, #0x4                   	// #4
  40353c:	b	4034ac <eval_condition+0x36c>
  403540:	mov	w20, #0x4                   	// #4
  403544:	b	4034ac <eval_condition+0x36c>
  403548:	mov	w20, #0x4                   	// #4
  40354c:	b	4034ac <eval_condition+0x36c>
  403550:	mov	w20, #0x4                   	// #4
  403554:	b	4034ac <eval_condition+0x36c>

0000000000403558 <cldr_plural_rule_list_free>:
  403558:	stp	x29, x30, [sp, #-32]!
  40355c:	mov	x29, sp
  403560:	stp	x19, x20, [sp, #16]
  403564:	mov	x20, x0
  403568:	ldr	x1, [x0, #8]
  40356c:	sub	x0, x1, #0x1
  403570:	str	x0, [x20, #8]
  403574:	cbz	x1, 4035a8 <cldr_plural_rule_list_free+0x50>
  403578:	ldr	x1, [x20]
  40357c:	ldr	x19, [x1, x0, lsl #3]
  403580:	ldr	x0, [x19]
  403584:	bl	401500 <free@plt>
  403588:	ldr	x0, [x19, #8]
  40358c:	bl	4030e8 <cldr_plural_condition_free>
  403590:	mov	x0, x19
  403594:	bl	401500 <free@plt>
  403598:	ldr	x1, [x20, #8]
  40359c:	sub	x0, x1, #0x1
  4035a0:	str	x0, [x20, #8]
  4035a4:	cbnz	x1, 403578 <cldr_plural_rule_list_free+0x20>
  4035a8:	ldr	x0, [x20]
  4035ac:	bl	401500 <free@plt>
  4035b0:	mov	x0, x20
  4035b4:	bl	401500 <free@plt>
  4035b8:	ldp	x19, x20, [sp, #16]
  4035bc:	ldp	x29, x30, [sp], #32
  4035c0:	ret

00000000004035c4 <cldr_plural_parse>:
  4035c4:	stp	x29, x30, [sp, #-64]!
  4035c8:	mov	x29, sp
  4035cc:	str	x19, [sp, #16]
  4035d0:	mov	x19, x0
  4035d4:	stp	xzr, xzr, [sp, #48]
  4035d8:	str	x0, [sp, #40]
  4035dc:	bl	4012c0 <strlen@plt>
  4035e0:	add	x19, x19, x0
  4035e4:	str	x19, [sp, #48]
  4035e8:	mov	x0, #0x18                  	// #24
  4035ec:	bl	401400 <xmalloc@plt>
  4035f0:	str	x0, [sp, #56]
  4035f4:	stp	xzr, xzr, [x0]
  4035f8:	str	xzr, [x0, #16]
  4035fc:	add	x0, sp, #0x28
  403600:	bl	401868 <yyparse>
  403604:	cmp	w0, #0x0
  403608:	ldr	x0, [sp, #56]
  40360c:	csel	x0, x0, xzr, eq  // eq = none
  403610:	ldr	x19, [sp, #16]
  403614:	ldp	x29, x30, [sp], #64
  403618:	ret

000000000040361c <cldr_plural_rule_list_print>:
  40361c:	stp	x29, x30, [sp, #-96]!
  403620:	mov	x29, sp
  403624:	stp	x21, x22, [sp, #32]
  403628:	stp	x27, x28, [sp, #80]
  40362c:	mov	x21, x0
  403630:	mov	x27, x1
  403634:	ldr	x0, [x0, #8]
  403638:	cbz	x0, 4038a4 <cldr_plural_rule_list_print+0x288>
  40363c:	stp	x19, x20, [sp, #16]
  403640:	mov	x19, #0x0                   	// #0
  403644:	ldr	x0, [x21]
  403648:	ldr	x0, [x0, x19, lsl #3]
  40364c:	ldr	x0, [x0, #8]
  403650:	bl	403140 <eval_condition>
  403654:	add	x19, x19, #0x1
  403658:	ldr	x0, [x21, #8]
  40365c:	cmp	x0, x19
  403660:	b.hi	403644 <cldr_plural_rule_list_print+0x28>  // b.pmore
  403664:	cbz	x0, 4038c0 <cldr_plural_rule_list_print+0x2a4>
  403668:	stp	x23, x24, [sp, #48]
  40366c:	ldr	x23, [x21]
  403670:	add	x22, x23, x0, lsl #3
  403674:	mov	w20, #0x0                   	// #0
  403678:	ldr	x0, [x23], #8
  40367c:	ldr	x24, [x0, #8]
  403680:	mov	x0, x24
  403684:	bl	402478 <find_largest_modulus>
  403688:	mov	w19, w0
  40368c:	mov	x0, x24
  403690:	bl	4024dc <find_largest_number>
  403694:	cmp	w19, w0
  403698:	ccmp	w19, w20, #0x4, ge  // ge = tcont
  40369c:	csel	w20, w20, w19, le
  4036a0:	cmp	x22, x23
  4036a4:	b.ne	403678 <cldr_plural_rule_list_print+0x5c>  // b.any
  4036a8:	cmp	w20, #0x0
  4036ac:	b.gt	403784 <cldr_plural_rule_list_print+0x168>
  4036b0:	ldr	x4, [x21, #8]
  4036b4:	ldr	x3, [x21]
  4036b8:	mov	x1, x3
  4036bc:	add	x2, x3, x4, lsl #3
  4036c0:	mov	x20, #0x1                   	// #1
  4036c4:	ldr	x0, [x1], #8
  4036c8:	ldr	x0, [x0, #8]
  4036cc:	ldr	w0, [x0]
  4036d0:	sub	w0, w0, #0x3
  4036d4:	cmp	w0, #0x1
  4036d8:	cinc	x20, x20, hi  // hi = pmore
  4036dc:	cmp	x1, x2
  4036e0:	b.ne	4036c4 <cldr_plural_rule_list_print+0xa8>  // b.any
  4036e4:	cmp	x20, #0x1
  4036e8:	b.eq	40389c <cldr_plural_rule_list_print+0x280>  // b.none
  4036ec:	cmp	x20, #0x2
  4036f0:	b.ne	403750 <cldr_plural_rule_list_print+0x134>  // b.any
  4036f4:	mov	x0, #0x0                   	// #0
  4036f8:	ldr	x1, [x3, x0, lsl #3]
  4036fc:	ldr	x1, [x1, #8]
  403700:	ldr	w1, [x1]
  403704:	sub	w1, w1, #0x3
  403708:	cmp	w1, #0x1
  40370c:	b.hi	403720 <cldr_plural_rule_list_print+0x104>  // b.pmore
  403710:	add	x0, x0, #0x1
  403714:	cmp	x0, x4
  403718:	b.ne	4036f8 <cldr_plural_rule_list_print+0xdc>  // b.any
  40371c:	mov	x0, x4
  403720:	ldr	x0, [x3, x0, lsl #3]
  403724:	ldr	x19, [x0, #8]
  403728:	mov	x1, x27
  40372c:	mov	x0, x19
  403730:	bl	402794 <print_condition_negation>
  403734:	and	w0, w0, #0xff
  403738:	cbnz	w0, 4039d4 <cldr_plural_rule_list_print+0x3b8>
  40373c:	mov	x1, x27
  403740:	mov	x0, x19
  403744:	bl	4026c8 <print_condition_greater>
  403748:	and	w0, w0, #0xff
  40374c:	cbnz	w0, 4039e0 <cldr_plural_rule_list_print+0x3c4>
  403750:	mov	x2, x20
  403754:	adrp	x1, 404000 <main+0x614>
  403758:	add	x1, x1, #0x800
  40375c:	mov	x0, x27
  403760:	bl	4015b0 <fprintf@plt>
  403764:	ldr	x0, [x21, #8]
  403768:	cbz	x0, 4039a4 <cldr_plural_rule_list_print+0x388>
  40376c:	mov	x24, #0x0                   	// #0
  403770:	mov	x19, #0x0                   	// #0
  403774:	mov	w22, #0x4                   	// #4
  403778:	adrp	x23, 404000 <main+0x614>
  40377c:	add	x23, x23, #0x818
  403780:	b	4038f8 <cldr_plural_rule_list_print+0x2dc>
  403784:	sxtw	x19, w20
  403788:	mov	x0, x19
  40378c:	bl	401400 <xmalloc@plt>
  403790:	mov	x22, x0
  403794:	mov	x2, x19
  403798:	mov	w1, #0x0                   	// #0
  40379c:	bl	4013f0 <memset@plt>
  4037a0:	ldr	x24, [x21, #8]
  4037a4:	cbz	x24, 403840 <cldr_plural_rule_list_print+0x224>
  4037a8:	stp	x25, x26, [sp, #64]
  4037ac:	mov	x24, #0x0                   	// #0
  4037b0:	sub	w23, w20, #0x1
  4037b4:	add	x23, x23, #0x2
  4037b8:	sub	x26, x22, #0x1
  4037bc:	mov	w25, #0x1                   	// #1
  4037c0:	b	403824 <cldr_plural_rule_list_print+0x208>
  4037c4:	add	x19, x19, #0x1
  4037c8:	cmp	x23, x19
  4037cc:	b.eq	4037ec <cldr_plural_rule_list_print+0x1d0>  // b.none
  4037d0:	mov	w1, w19
  4037d4:	ldr	x0, [x28, #8]
  4037d8:	bl	4025a0 <apply_condition>
  4037dc:	and	w0, w0, #0xff
  4037e0:	cbz	w0, 4037c4 <cldr_plural_rule_list_print+0x1a8>
  4037e4:	strb	w25, [x26, x19]
  4037e8:	b	4037c4 <cldr_plural_rule_list_print+0x1a8>
  4037ec:	mov	x2, #0x0                   	// #0
  4037f0:	mov	w0, w2
  4037f4:	ldrb	w1, [x22, x2]
  4037f8:	cbz	w1, 40380c <cldr_plural_rule_list_print+0x1f0>
  4037fc:	add	w0, w2, #0x1
  403800:	add	x2, x2, #0x1
  403804:	cmp	w20, w2
  403808:	b.gt	4037f0 <cldr_plural_rule_list_print+0x1d4>
  40380c:	cmp	w20, w0
  403810:	b.eq	40383c <cldr_plural_rule_list_print+0x220>  // b.none
  403814:	add	x24, x24, #0x1
  403818:	ldr	x0, [x21, #8]
  40381c:	cmp	x0, x24
  403820:	b.ls	403834 <cldr_plural_rule_list_print+0x218>  // b.plast
  403824:	ldr	x0, [x21]
  403828:	ldr	x28, [x0, x24, lsl #3]
  40382c:	mov	x19, #0x1                   	// #1
  403830:	b	4037d0 <cldr_plural_rule_list_print+0x1b4>
  403834:	ldp	x25, x26, [sp, #64]
  403838:	b	403840 <cldr_plural_rule_list_print+0x224>
  40383c:	ldp	x25, x26, [sp, #64]
  403840:	mov	x0, x22
  403844:	bl	401500 <free@plt>
  403848:	ldr	x0, [x21, #8]
  40384c:	cmp	x0, x24
  403850:	b.ls	403888 <cldr_plural_rule_list_print+0x26c>  // b.plast
  403854:	ldr	x1, [x21]
  403858:	sub	x0, x0, #0x1
  40385c:	str	x0, [x21, #8]
  403860:	ldr	x19, [x1, x0, lsl #3]
  403864:	ldr	x0, [x19]
  403868:	bl	401500 <free@plt>
  40386c:	ldr	x0, [x19, #8]
  403870:	bl	4030e8 <cldr_plural_condition_free>
  403874:	mov	x0, x19
  403878:	bl	401500 <free@plt>
  40387c:	ldr	x0, [x21, #8]
  403880:	cmp	x0, x24
  403884:	b.hi	403854 <cldr_plural_rule_list_print+0x238>  // b.pmore
  403888:	ldr	x4, [x21, #8]
  40388c:	cbnz	x4, 4036b4 <cldr_plural_rule_list_print+0x98>
  403890:	ldp	x19, x20, [sp, #16]
  403894:	ldp	x23, x24, [sp, #48]
  403898:	b	4038a4 <cldr_plural_rule_list_print+0x288>
  40389c:	ldp	x19, x20, [sp, #16]
  4038a0:	ldp	x23, x24, [sp, #48]
  4038a4:	mov	x3, x27
  4038a8:	mov	x2, #0x16                  	// #22
  4038ac:	mov	x1, #0x1                   	// #1
  4038b0:	adrp	x0, 404000 <main+0x614>
  4038b4:	add	x0, x0, #0x7e8
  4038b8:	bl	401510 <fwrite@plt>
  4038bc:	b	4039c4 <cldr_plural_rule_list_print+0x3a8>
  4038c0:	ldp	x19, x20, [sp, #16]
  4038c4:	b	4038a4 <cldr_plural_rule_list_print+0x288>
  4038c8:	stp	x25, x26, [sp, #64]
  4038cc:	add	x25, x24, #0x1
  4038d0:	mov	x2, x24
  4038d4:	mov	x1, x23
  4038d8:	mov	x0, x27
  4038dc:	bl	4015b0 <fprintf@plt>
  4038e0:	mov	x24, x25
  4038e4:	ldp	x25, x26, [sp, #64]
  4038e8:	add	x19, x19, #0x1
  4038ec:	ldr	x0, [x21, #8]
  4038f0:	cmp	x0, x19
  4038f4:	b.ls	40399c <cldr_plural_rule_list_print+0x380>  // b.plast
  4038f8:	cmp	x20, #0x2
  4038fc:	ldr	x0, [x21]
  403900:	ldr	x0, [x0, x19, lsl #3]
  403904:	mov	x3, x27
  403908:	cset	w2, eq  // eq = none
  40390c:	mov	w1, w22
  403910:	ldr	x0, [x0, #8]
  403914:	bl	402864 <print_condition>
  403918:	ands	w0, w0, #0xff
  40391c:	b.eq	4038e8 <cldr_plural_rule_list_print+0x2cc>  // b.none
  403920:	ldr	x4, [x21, #8]
  403924:	cmp	x4, #0x1
  403928:	b.ls	4038e8 <cldr_plural_rule_list_print+0x2cc>  // b.plast
  40392c:	add	x1, x19, #0x1
  403930:	cmp	x4, x1
  403934:	b.ls	403998 <cldr_plural_rule_list_print+0x37c>  // b.plast
  403938:	ldr	x5, [x21]
  40393c:	mov	w3, #0x0                   	// #0
  403940:	ldr	x2, [x5, x1, lsl #3]
  403944:	ldr	x2, [x2, #8]
  403948:	ldr	w2, [x2]
  40394c:	sub	w2, w2, #0x3
  403950:	cmp	w2, #0x2
  403954:	csel	w3, w3, w0, cc  // cc = lo, ul, last
  403958:	add	x1, x1, #0x1
  40395c:	cmp	x4, x1
  403960:	b.ne	403940 <cldr_plural_rule_list_print+0x324>  // b.any
  403964:	sub	x4, x4, #0x1
  403968:	cmp	w3, #0x0
  40396c:	ccmp	x4, x19, #0x0, ne  // ne = any
  403970:	b.hi	4038c8 <cldr_plural_rule_list_print+0x2ac>  // b.pmore
  403974:	add	x19, x19, #0x1
  403978:	b	4038f8 <cldr_plural_rule_list_print+0x2dc>
  40397c:	add	x3, x24, #0x1
  403980:	mov	x2, x24
  403984:	adrp	x1, 404000 <main+0x614>
  403988:	add	x1, x1, #0x828
  40398c:	mov	x0, x27
  403990:	bl	4015b0 <fprintf@plt>
  403994:	b	4039a4 <cldr_plural_rule_list_print+0x388>
  403998:	ldr	x0, [x21, #8]
  40399c:	cmp	x0, #0x1
  4039a0:	b.hi	40397c <cldr_plural_rule_list_print+0x360>  // b.pmore
  4039a4:	mov	x3, x27
  4039a8:	mov	x2, #0x3                   	// #3
  4039ac:	mov	x1, #0x1                   	// #1
  4039b0:	adrp	x0, 404000 <main+0x614>
  4039b4:	add	x0, x0, #0x838
  4039b8:	bl	401510 <fwrite@plt>
  4039bc:	ldp	x19, x20, [sp, #16]
  4039c0:	ldp	x23, x24, [sp, #48]
  4039c4:	ldp	x21, x22, [sp, #32]
  4039c8:	ldp	x27, x28, [sp, #80]
  4039cc:	ldp	x29, x30, [sp], #96
  4039d0:	ret
  4039d4:	ldp	x19, x20, [sp, #16]
  4039d8:	ldp	x23, x24, [sp, #48]
  4039dc:	b	4039c4 <cldr_plural_rule_list_print+0x3a8>
  4039e0:	ldp	x19, x20, [sp, #16]
  4039e4:	ldp	x23, x24, [sp, #48]
  4039e8:	b	4039c4 <cldr_plural_rule_list_print+0x3a8>

00000000004039ec <main>:
  4039ec:	stp	x29, x30, [sp, #-176]!
  4039f0:	mov	x29, sp
  4039f4:	stp	x19, x20, [sp, #16]
  4039f8:	stp	x21, x22, [sp, #32]
  4039fc:	stp	x23, x24, [sp, #48]
  403a00:	stp	x25, x26, [sp, #64]
  403a04:	stp	x27, x28, [sp, #80]
  403a08:	mov	w22, w0
  403a0c:	mov	x21, x1
  403a10:	ldr	x0, [x1]
  403a14:	bl	4012f0 <set_program_name@plt>
  403a18:	adrp	x1, 404000 <main+0x614>
  403a1c:	add	x1, x1, #0xa10
  403a20:	mov	w0, #0x6                   	// #6
  403a24:	bl	4015c0 <setlocale@plt>
  403a28:	adrp	x20, 404000 <main+0x614>
  403a2c:	add	x20, x20, #0x840
  403a30:	adrp	x19, 404000 <main+0x614>
  403a34:	add	x19, x19, #0x858
  403a38:	mov	x1, x20
  403a3c:	mov	x0, x19
  403a40:	bl	4013d0 <bindtextdomain@plt>
  403a44:	mov	x1, x20
  403a48:	adrp	x0, 404000 <main+0x614>
  403a4c:	add	x0, x0, #0x3d0
  403a50:	bl	4013d0 <bindtextdomain@plt>
  403a54:	mov	x0, x19
  403a58:	bl	4014b0 <textdomain@plt>
  403a5c:	adrp	x0, 401000 <_init-0x270>
  403a60:	add	x0, x0, #0x430
  403a64:	bl	404340 <atexit>
  403a68:	mov	w25, #0x0                   	// #0
  403a6c:	mov	w26, #0x0                   	// #0
  403a70:	mov	w19, #0x0                   	// #0
  403a74:	adrp	x24, 404000 <main+0x614>
  403a78:	add	x24, x24, #0xe80
  403a7c:	adrp	x23, 404000 <main+0x614>
  403a80:	add	x23, x23, #0x890
  403a84:	mov	w20, #0x1                   	// #1
  403a88:	b	403a98 <main+0xac>
  403a8c:	cmp	w0, #0x56
  403a90:	b.ne	403adc <main+0xf0>  // b.any
  403a94:	mov	w25, w20
  403a98:	mov	x4, #0x0                   	// #0
  403a9c:	mov	x3, x24
  403aa0:	mov	x2, x23
  403aa4:	mov	x1, x21
  403aa8:	mov	w0, w22
  403aac:	bl	4014c0 <getopt_long@plt>
  403ab0:	cmn	w0, #0x1
  403ab4:	b.eq	403b1c <main+0x130>  // b.none
  403ab8:	cmp	w0, #0x63
  403abc:	b.eq	403b14 <main+0x128>  // b.none
  403ac0:	b.gt	403acc <main+0xe0>
  403ac4:	cbnz	w0, 403a8c <main+0xa0>
  403ac8:	b	403a98 <main+0xac>
  403acc:	cmp	w0, #0x68
  403ad0:	b.ne	403adc <main+0xf0>  // b.any
  403ad4:	mov	w26, w20
  403ad8:	b	403a98 <main+0xac>
  403adc:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  403ae0:	ldr	x19, [x0, #416]
  403ae4:	mov	w2, #0x5                   	// #5
  403ae8:	adrp	x1, 404000 <main+0x614>
  403aec:	add	x1, x1, #0x868
  403af0:	mov	x0, #0x0                   	// #0
  403af4:	bl	401530 <dcgettext@plt>
  403af8:	adrp	x1, 416000 <memcpy@GLIBC_2.17>
  403afc:	ldr	x2, [x1, #448]
  403b00:	mov	x1, x0
  403b04:	mov	x0, x19
  403b08:	bl	4015b0 <fprintf@plt>
  403b0c:	mov	w0, #0x1                   	// #1
  403b10:	bl	4012d0 <exit@plt>
  403b14:	mov	w19, w20
  403b18:	b	403a98 <main+0xac>
  403b1c:	cbnz	w25, 403b58 <main+0x16c>
  403b20:	cbnz	w26, 403be4 <main+0x1f8>
  403b24:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  403b28:	ldr	w0, [x0, #424]
  403b2c:	add	w1, w0, #0x2
  403b30:	cmp	w1, w22
  403b34:	b.eq	403ccc <main+0x2e0>  // b.none
  403b38:	cmp	w0, w22
  403b3c:	b.ne	404234 <main+0x848>  // b.any
  403b40:	str	xzr, [sp, #160]
  403b44:	str	xzr, [sp, #168]
  403b48:	adrp	x21, 416000 <memcpy@GLIBC_2.17>
  403b4c:	mov	w20, #0xa                   	// #10
  403b50:	adrp	x22, 416000 <memcpy@GLIBC_2.17>
  403b54:	b	4041b8 <main+0x7cc>
  403b58:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  403b5c:	ldr	x0, [x0, #448]
  403b60:	bl	4014e0 <basename@plt>
  403b64:	adrp	x3, 404000 <main+0x614>
  403b68:	add	x3, x3, #0x898
  403b6c:	adrp	x2, 404000 <main+0x614>
  403b70:	add	x2, x2, #0x858
  403b74:	mov	x1, x0
  403b78:	adrp	x0, 404000 <main+0x614>
  403b7c:	add	x0, x0, #0x8a0
  403b80:	bl	401550 <printf@plt>
  403b84:	mov	w2, #0x5                   	// #5
  403b88:	adrp	x1, 404000 <main+0x614>
  403b8c:	add	x1, x1, #0x8b0
  403b90:	mov	x0, #0x0                   	// #0
  403b94:	bl	401530 <dcgettext@plt>
  403b98:	adrp	x2, 404000 <main+0x614>
  403b9c:	add	x2, x2, #0x990
  403ba0:	adrp	x1, 404000 <main+0x614>
  403ba4:	add	x1, x1, #0x9b8
  403ba8:	bl	401550 <printf@plt>
  403bac:	mov	w2, #0x5                   	// #5
  403bb0:	adrp	x1, 404000 <main+0x614>
  403bb4:	add	x1, x1, #0x9c8
  403bb8:	mov	x0, #0x0                   	// #0
  403bbc:	bl	401530 <dcgettext@plt>
  403bc0:	mov	x19, x0
  403bc4:	adrp	x0, 404000 <main+0x614>
  403bc8:	add	x0, x0, #0x9d8
  403bcc:	bl	4014f0 <proper_name@plt>
  403bd0:	mov	x1, x0
  403bd4:	mov	x0, x19
  403bd8:	bl	401550 <printf@plt>
  403bdc:	mov	w0, #0x0                   	// #0
  403be0:	bl	4012d0 <exit@plt>
  403be4:	mov	w2, #0x5                   	// #5
  403be8:	adrp	x1, 404000 <main+0x614>
  403bec:	add	x1, x1, #0x9e8
  403bf0:	mov	x0, #0x0                   	// #0
  403bf4:	bl	401530 <dcgettext@plt>
  403bf8:	adrp	x1, 416000 <memcpy@GLIBC_2.17>
  403bfc:	ldr	x1, [x1, #448]
  403c00:	bl	401550 <printf@plt>
  403c04:	mov	w0, #0xa                   	// #10
  403c08:	bl	401580 <putchar@plt>
  403c0c:	mov	w2, #0x5                   	// #5
  403c10:	adrp	x1, 404000 <main+0x614>
  403c14:	add	x1, x1, #0xa18
  403c18:	mov	x0, #0x0                   	// #0
  403c1c:	bl	401530 <dcgettext@plt>
  403c20:	bl	401550 <printf@plt>
  403c24:	mov	w0, #0xa                   	// #10
  403c28:	bl	401580 <putchar@plt>
  403c2c:	mov	w2, #0x5                   	// #5
  403c30:	adrp	x1, 404000 <main+0x614>
  403c34:	add	x1, x1, #0xb28
  403c38:	mov	x0, #0x0                   	// #0
  403c3c:	bl	401530 <dcgettext@plt>
  403c40:	bl	401550 <printf@plt>
  403c44:	mov	w0, #0xa                   	// #10
  403c48:	bl	401580 <putchar@plt>
  403c4c:	mov	w2, #0x5                   	// #5
  403c50:	adrp	x1, 404000 <main+0x614>
  403c54:	add	x1, x1, #0xb98
  403c58:	mov	x0, #0x0                   	// #0
  403c5c:	bl	401530 <dcgettext@plt>
  403c60:	bl	401550 <printf@plt>
  403c64:	mov	w2, #0x5                   	// #5
  403c68:	adrp	x1, 404000 <main+0x614>
  403c6c:	add	x1, x1, #0xbe0
  403c70:	mov	x0, #0x0                   	// #0
  403c74:	bl	401530 <dcgettext@plt>
  403c78:	bl	401550 <printf@plt>
  403c7c:	mov	w2, #0x5                   	// #5
  403c80:	adrp	x1, 404000 <main+0x614>
  403c84:	add	x1, x1, #0xc20
  403c88:	mov	x0, #0x0                   	// #0
  403c8c:	bl	401530 <dcgettext@plt>
  403c90:	bl	401550 <printf@plt>
  403c94:	mov	w0, #0xa                   	// #10
  403c98:	bl	401580 <putchar@plt>
  403c9c:	mov	w2, #0x5                   	// #5
  403ca0:	adrp	x1, 404000 <main+0x614>
  403ca4:	add	x1, x1, #0xc68
  403ca8:	mov	x0, #0x0                   	// #0
  403cac:	bl	401530 <dcgettext@plt>
  403cb0:	adrp	x2, 404000 <main+0x614>
  403cb4:	add	x2, x2, #0xca8
  403cb8:	adrp	x1, 404000 <main+0x614>
  403cbc:	add	x1, x1, #0xcc0
  403cc0:	bl	401550 <printf@plt>
  403cc4:	mov	w0, #0x0                   	// #0
  403cc8:	bl	4012d0 <exit@plt>
  403ccc:	sbfiz	x0, x0, #3, #32
  403cd0:	ldr	x27, [x21, x0]
  403cd4:	add	x0, x21, x0
  403cd8:	ldr	x28, [x0, #8]
  403cdc:	mov	w0, #0x51ad                	// #20909
  403ce0:	bl	4013b0 <xmlCheckVersion@plt>
  403ce4:	adrp	x1, 404000 <main+0x614>
  403ce8:	add	x1, x1, #0xcf0
  403cec:	mov	x0, x28
  403cf0:	bl	401370 <fopen@plt>
  403cf4:	mov	x24, x0
  403cf8:	cbz	x0, 403d54 <main+0x368>
  403cfc:	mov	x0, x24
  403d00:	bl	401350 <fileno@plt>
  403d04:	mov	w3, #0x940                 	// #2368
  403d08:	mov	x2, #0x0                   	// #0
  403d0c:	mov	x1, x28
  403d10:	bl	401450 <xmlReadFd@plt>
  403d14:	mov	x25, x0
  403d18:	cbz	x0, 403d80 <main+0x394>
  403d1c:	mov	x0, x25
  403d20:	bl	401570 <xmlDocGetRootElement@plt>
  403d24:	mov	x20, x0
  403d28:	cbz	x0, 403dac <main+0x3c0>
  403d2c:	adrp	x1, 404000 <main+0x614>
  403d30:	add	x1, x1, #0xd30
  403d34:	ldr	x0, [x0, #16]
  403d38:	bl	401560 <xmlStrEqual@plt>
  403d3c:	cbz	w0, 403dac <main+0x3c0>
  403d40:	ldr	x20, [x20, #24]
  403d44:	cbz	x20, 40427c <main+0x890>
  403d48:	adrp	x21, 404000 <main+0x614>
  403d4c:	add	x21, x21, #0xd68
  403d50:	b	403e34 <main+0x448>
  403d54:	mov	w2, #0x5                   	// #5
  403d58:	adrp	x1, 404000 <main+0x614>
  403d5c:	add	x1, x1, #0xcf8
  403d60:	mov	x0, #0x0                   	// #0
  403d64:	bl	401530 <dcgettext@plt>
  403d68:	mov	x3, x28
  403d6c:	mov	x2, x0
  403d70:	mov	w1, #0x0                   	// #0
  403d74:	mov	w0, #0x1                   	// #1
  403d78:	bl	4012e0 <error@plt>
  403d7c:	b	403cfc <main+0x310>
  403d80:	mov	w2, #0x5                   	// #5
  403d84:	adrp	x1, 404000 <main+0x614>
  403d88:	add	x1, x1, #0xd10
  403d8c:	mov	x0, #0x0                   	// #0
  403d90:	bl	401530 <dcgettext@plt>
  403d94:	mov	x3, x28
  403d98:	mov	x2, x0
  403d9c:	mov	w1, #0x0                   	// #0
  403da0:	mov	w0, #0x1                   	// #1
  403da4:	bl	4012e0 <error@plt>
  403da8:	b	403d1c <main+0x330>
  403dac:	mov	x0, x20
  403db0:	bl	401520 <xmlGetLineNo@plt>
  403db4:	mov	x20, x0
  403db8:	mov	w2, #0x5                   	// #5
  403dbc:	adrp	x1, 404000 <main+0x614>
  403dc0:	add	x1, x1, #0xd48
  403dc4:	mov	x0, #0x0                   	// #0
  403dc8:	bl	401530 <dcgettext@plt>
  403dcc:	adrp	x5, 404000 <main+0x614>
  403dd0:	add	x5, x5, #0xd30
  403dd4:	mov	x4, x0
  403dd8:	mov	w3, w20
  403ddc:	mov	x2, x28
  403de0:	mov	w1, #0x0                   	// #0
  403de4:	mov	w0, #0x0                   	// #0
  403de8:	bl	4015a0 <error_at_line@plt>
  403dec:	mov	x0, x25
  403df0:	bl	401320 <xmlFreeDoc@plt>
  403df4:	mov	x0, x24
  403df8:	bl	401360 <fclose@plt>
  403dfc:	mov	w2, #0x5                   	// #5
  403e00:	adrp	x1, 404000 <main+0x614>
  403e04:	add	x1, x1, #0xe10
  403e08:	mov	x0, #0x0                   	// #0
  403e0c:	bl	401530 <dcgettext@plt>
  403e10:	mov	x3, x27
  403e14:	mov	x2, x0
  403e18:	mov	w1, #0x0                   	// #0
  403e1c:	mov	w0, #0x1                   	// #1
  403e20:	bl	4012e0 <error@plt>
  403e24:	mov	x26, #0x0                   	// #0
  403e28:	b	40413c <main+0x750>
  403e2c:	ldr	x20, [x20, #48]
  403e30:	cbz	x20, 40427c <main+0x890>
  403e34:	ldr	w0, [x20, #8]
  403e38:	cmp	w0, #0x1
  403e3c:	b.ne	403e2c <main+0x440>  // b.any
  403e40:	mov	x1, x21
  403e44:	ldr	x0, [x20, #16]
  403e48:	bl	401560 <xmlStrEqual@plt>
  403e4c:	cbz	w0, 403e2c <main+0x440>
  403e50:	mov	x0, x27
  403e54:	bl	4012c0 <strlen@plt>
  403e58:	str	x0, [sp, #96]
  403e5c:	ldr	x20, [x20, #24]
  403e60:	cbz	x20, 403dec <main+0x400>
  403e64:	mov	x23, #0x0                   	// #0
  403e68:	str	xzr, [sp, #144]
  403e6c:	mov	x26, #0x0                   	// #0
  403e70:	adrp	x0, 404000 <main+0x614>
  403e74:	add	x0, x0, #0xd70
  403e78:	str	x0, [sp, #104]
  403e7c:	adrp	x0, 404000 <main+0x614>
  403e80:	add	x0, x0, #0xdb8
  403e84:	str	x0, [sp, #128]
  403e88:	b	403ed8 <main+0x4ec>
  403e8c:	mov	x0, x20
  403e90:	bl	401520 <xmlGetLineNo@plt>
  403e94:	mov	x21, x0
  403e98:	mov	w2, #0x5                   	// #5
  403e9c:	adrp	x1, 404000 <main+0x614>
  403ea0:	add	x1, x1, #0xd88
  403ea4:	mov	x0, #0x0                   	// #0
  403ea8:	bl	401530 <dcgettext@plt>
  403eac:	adrp	x6, 404000 <main+0x614>
  403eb0:	add	x6, x6, #0xd80
  403eb4:	ldr	x5, [sp, #104]
  403eb8:	mov	x4, x0
  403ebc:	mov	w3, w21
  403ec0:	mov	x2, x28
  403ec4:	mov	w1, #0x0                   	// #0
  403ec8:	mov	w0, #0x0                   	// #0
  403ecc:	bl	4015a0 <error_at_line@plt>
  403ed0:	ldr	x20, [x20, #48]
  403ed4:	cbz	x20, 404114 <main+0x728>
  403ed8:	ldr	w0, [x20, #8]
  403edc:	cmp	w0, #0x1
  403ee0:	b.ne	403ed0 <main+0x4e4>  // b.any
  403ee4:	ldr	x1, [sp, #104]
  403ee8:	ldr	x0, [x20, #16]
  403eec:	bl	401560 <xmlStrEqual@plt>
  403ef0:	cbz	w0, 403ed0 <main+0x4e4>
  403ef4:	adrp	x1, 404000 <main+0x614>
  403ef8:	add	x1, x1, #0xd80
  403efc:	mov	x0, x20
  403f00:	bl	401300 <xmlHasProp@plt>
  403f04:	cbz	x0, 403e8c <main+0x4a0>
  403f08:	adrp	x1, 404000 <main+0x614>
  403f0c:	add	x1, x1, #0xd80
  403f10:	mov	x0, x20
  403f14:	bl	4013a0 <xmlGetProp@plt>
  403f18:	mov	x22, x0
  403f1c:	mov	x21, x0
  403f20:	b	403fc8 <main+0x5dc>
  403f24:	cmp	w0, #0x20
  403f28:	b.ne	403f44 <main+0x558>  // b.any
  403f2c:	add	x21, x21, #0x1
  403f30:	ldrb	w0, [x21]
  403f34:	cmp	w0, #0xd
  403f38:	b.hi	403f24 <main+0x538>  // b.pmore
  403f3c:	cmp	w0, #0x8
  403f40:	b.hi	403f2c <main+0x540>  // b.pmore
  403f44:	ldr	w2, [sp, #96]
  403f48:	mov	x1, x27
  403f4c:	mov	x0, x21
  403f50:	bl	401540 <xmlStrncmp@plt>
  403f54:	cbnz	w0, 403f74 <main+0x588>
  403f58:	ldr	x0, [sp, #96]
  403f5c:	ldrb	w0, [x21, x0]
  403f60:	cbz	w0, 404268 <main+0x87c>
  403f64:	cmp	w0, #0xd
  403f68:	b.hi	403f94 <main+0x5a8>  // b.pmore
  403f6c:	cmp	w0, #0x8
  403f70:	b.hi	403f9c <main+0x5b0>  // b.pmore
  403f74:	ldrb	w0, [x21]
  403f78:	cbz	w0, 403fc8 <main+0x5dc>
  403f7c:	cmp	w0, #0xd
  403f80:	b.hi	403fc0 <main+0x5d4>  // b.pmore
  403f84:	cmp	w0, #0x8
  403f88:	b.hi	403fc8 <main+0x5dc>  // b.pmore
  403f8c:	add	x21, x21, #0x1
  403f90:	b	403f74 <main+0x588>
  403f94:	cmp	w0, #0x20
  403f98:	b.ne	403f74 <main+0x588>  // b.any
  403f9c:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  403fa0:	ldr	x1, [x0, #456]
  403fa4:	mov	x0, x22
  403fa8:	blr	x1
  403fac:	ldr	x21, [x20, #24]
  403fb0:	adrp	x0, 404000 <main+0x614>
  403fb4:	add	x0, x0, #0xdc8
  403fb8:	str	x0, [sp, #136]
  403fbc:	b	404068 <main+0x67c>
  403fc0:	cmp	w0, #0x20
  403fc4:	b.ne	403f8c <main+0x5a0>  // b.any
  403fc8:	ldrb	w0, [x21]
  403fcc:	cbnz	w0, 403f30 <main+0x544>
  403fd0:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  403fd4:	ldr	x1, [x0, #456]
  403fd8:	mov	x0, x22
  403fdc:	blr	x1
  403fe0:	b	403ed0 <main+0x4e4>
  403fe4:	mov	x0, x21
  403fe8:	bl	401520 <xmlGetLineNo@plt>
  403fec:	mov	x21, x0
  403ff0:	mov	w2, #0x5                   	// #5
  403ff4:	adrp	x1, 404000 <main+0x614>
  403ff8:	add	x1, x1, #0xd88
  403ffc:	mov	x0, #0x0                   	// #0
  404000:	bl	401530 <dcgettext@plt>
  404004:	adrp	x6, 404000 <main+0x614>
  404008:	add	x6, x6, #0xdc8
  40400c:	ldr	x5, [sp, #128]
  404010:	mov	x4, x0
  404014:	mov	w3, w21
  404018:	mov	x2, x28
  40401c:	mov	w1, #0x0                   	// #0
  404020:	mov	w0, #0x0                   	// #0
  404024:	bl	4015a0 <error_at_line@plt>
  404028:	b	403ed0 <main+0x4e4>
  40402c:	ldr	x3, [sp, #120]
  404030:	ldr	x2, [sp, #112]
  404034:	adrp	x1, 404000 <main+0x614>
  404038:	add	x1, x1, #0xdd0
  40403c:	add	x0, x26, x23
  404040:	bl	401310 <sprintf@plt>
  404044:	adrp	x22, 416000 <memcpy@GLIBC_2.17>
  404048:	ldr	x1, [x22, #456]
  40404c:	ldr	x0, [sp, #112]
  404050:	blr	x1
  404054:	ldr	x1, [x22, #456]
  404058:	ldr	x0, [sp, #120]
  40405c:	blr	x1
  404060:	ldr	x23, [sp, #152]
  404064:	ldr	x21, [x21, #48]
  404068:	add	x22, x23, #0x4
  40406c:	cbz	x21, 403ed0 <main+0x4e4>
  404070:	ldr	w0, [x21, #8]
  404074:	cmp	w0, #0x1
  404078:	b.ne	404064 <main+0x678>  // b.any
  40407c:	ldr	x1, [sp, #128]
  404080:	ldr	x0, [x21, #16]
  404084:	bl	401560 <xmlStrEqual@plt>
  404088:	cbz	w0, 404064 <main+0x678>
  40408c:	ldr	x1, [sp, #136]
  404090:	mov	x0, x21
  404094:	bl	401300 <xmlHasProp@plt>
  404098:	cbz	x0, 403fe4 <main+0x5f8>
  40409c:	ldr	x1, [sp, #136]
  4040a0:	mov	x0, x21
  4040a4:	bl	4013a0 <xmlGetProp@plt>
  4040a8:	str	x0, [sp, #112]
  4040ac:	mov	x0, x21
  4040b0:	bl	401440 <xmlNodeGetContent@plt>
  4040b4:	str	x0, [sp, #120]
  4040b8:	ldr	x0, [sp, #112]
  4040bc:	bl	401420 <xmlStrlen@plt>
  4040c0:	str	w0, [sp, #152]
  4040c4:	ldr	x0, [sp, #120]
  4040c8:	bl	401420 <xmlStrlen@plt>
  4040cc:	sxtw	x0, w0
  4040d0:	ldr	w1, [sp, #152]
  4040d4:	add	x0, x0, w1, sxtw
  4040d8:	add	x0, x0, x22
  4040dc:	str	x0, [sp, #152]
  4040e0:	add	x0, x0, #0x1
  4040e4:	ldr	x1, [sp, #144]
  4040e8:	cmp	x0, x1
  4040ec:	b.ls	40402c <main+0x640>  // b.plast
  4040f0:	lsl	x1, x1, #1
  4040f4:	cmp	x0, x1
  4040f8:	csel	x0, x0, x1, cs  // cs = hs, nlast
  4040fc:	str	x0, [sp, #144]
  404100:	mov	x1, x0
  404104:	mov	x0, x26
  404108:	bl	401390 <xrealloc@plt>
  40410c:	mov	x26, x0
  404110:	b	40402c <main+0x640>
  404114:	cbz	x26, 403dec <main+0x400>
  404118:	mov	w1, #0x3b                  	// #59
  40411c:	mov	x0, x26
  404120:	bl	401460 <strrchr@plt>
  404124:	cbz	x0, 40412c <main+0x740>
  404128:	strb	wzr, [x0]
  40412c:	mov	x0, x25
  404130:	bl	401320 <xmlFreeDoc@plt>
  404134:	mov	x0, x24
  404138:	bl	401360 <fclose@plt>
  40413c:	cbz	w19, 404154 <main+0x768>
  404140:	mov	x0, x26
  404144:	bl	4014a0 <puts@plt>
  404148:	mov	x0, x26
  40414c:	bl	401500 <free@plt>
  404150:	b	404214 <main+0x828>
  404154:	mov	x0, x26
  404158:	bl	4035c4 <cldr_plural_parse>
  40415c:	mov	x19, x0
  404160:	cbz	x0, 404180 <main+0x794>
  404164:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  404168:	ldr	x1, [x0, #432]
  40416c:	mov	x0, x19
  404170:	bl	40361c <cldr_plural_rule_list_print>
  404174:	mov	x0, x19
  404178:	bl	403558 <cldr_plural_rule_list_free>
  40417c:	b	404148 <main+0x75c>
  404180:	mov	w2, #0x5                   	// #5
  404184:	adrp	x1, 404000 <main+0x614>
  404188:	add	x1, x1, #0xde0
  40418c:	mov	x0, #0x0                   	// #0
  404190:	bl	401530 <dcgettext@plt>
  404194:	mov	x2, x0
  404198:	mov	w1, #0x0                   	// #0
  40419c:	mov	w0, #0x1                   	// #1
  4041a0:	bl	4012e0 <error@plt>
  4041a4:	b	404164 <main+0x778>
  4041a8:	ldr	x0, [sp, #160]
  4041ac:	bl	4035c4 <cldr_plural_parse>
  4041b0:	mov	x19, x0
  4041b4:	cbnz	x0, 4041f8 <main+0x80c>
  4041b8:	ldr	x3, [x21, #440]
  4041bc:	mov	w2, w20
  4041c0:	add	x1, sp, #0xa8
  4041c4:	add	x0, sp, #0xa0
  4041c8:	bl	401590 <__getdelim@plt>
  4041cc:	tbnz	w0, #31, 40420c <main+0x820>
  4041d0:	cmp	w0, #0x0
  4041d4:	b.le	4041a8 <main+0x7bc>
  4041d8:	ldr	x1, [sp, #160]
  4041dc:	add	x2, x1, w0, sxtw
  4041e0:	ldurb	w2, [x2, #-1]
  4041e4:	cmp	w2, #0xa
  4041e8:	b.ne	4041a8 <main+0x7bc>  // b.any
  4041ec:	sub	w0, w0, #0x1
  4041f0:	strb	wzr, [x1, w0, sxtw]
  4041f4:	b	4041a8 <main+0x7bc>
  4041f8:	ldr	x1, [x22, #432]
  4041fc:	bl	40361c <cldr_plural_rule_list_print>
  404200:	mov	x0, x19
  404204:	bl	403558 <cldr_plural_rule_list_free>
  404208:	b	4041b8 <main+0x7cc>
  40420c:	ldr	x0, [sp, #160]
  404210:	bl	401500 <free@plt>
  404214:	mov	w0, #0x0                   	// #0
  404218:	ldp	x19, x20, [sp, #16]
  40421c:	ldp	x21, x22, [sp, #32]
  404220:	ldp	x23, x24, [sp, #48]
  404224:	ldp	x25, x26, [sp, #64]
  404228:	ldp	x27, x28, [sp, #80]
  40422c:	ldp	x29, x30, [sp], #176
  404230:	ret
  404234:	mov	w2, #0x5                   	// #5
  404238:	adrp	x1, 404000 <main+0x614>
  40423c:	add	x1, x1, #0xdf8
  404240:	mov	x0, #0x0                   	// #0
  404244:	bl	401530 <dcgettext@plt>
  404248:	adrp	x1, 416000 <memcpy@GLIBC_2.17>
  40424c:	ldrsw	x1, [x1, #424]
  404250:	ldr	x3, [x21, x1, lsl #3]
  404254:	mov	x2, x0
  404258:	mov	w1, #0x0                   	// #0
  40425c:	mov	w0, #0x1                   	// #1
  404260:	bl	4012e0 <error@plt>
  404264:	b	404214 <main+0x828>
  404268:	adrp	x0, 416000 <memcpy@GLIBC_2.17>
  40426c:	ldr	x1, [x0, #456]
  404270:	mov	x0, x22
  404274:	blr	x1
  404278:	b	403fac <main+0x5c0>
  40427c:	mov	w2, #0x5                   	// #5
  404280:	adrp	x1, 404000 <main+0x614>
  404284:	add	x1, x1, #0xe30
  404288:	mov	x0, #0x0                   	// #0
  40428c:	bl	401530 <dcgettext@plt>
  404290:	adrp	x4, 404000 <main+0x614>
  404294:	add	x4, x4, #0xd68
  404298:	adrp	x3, 404000 <main+0x614>
  40429c:	add	x3, x3, #0xd30
  4042a0:	mov	x2, x0
  4042a4:	mov	w1, #0x0                   	// #0
  4042a8:	mov	w0, #0x0                   	// #0
  4042ac:	bl	4012e0 <error@plt>
  4042b0:	b	403dec <main+0x400>
  4042b4:	nop

00000000004042b8 <__libc_csu_init>:
  4042b8:	stp	x29, x30, [sp, #-64]!
  4042bc:	mov	x29, sp
  4042c0:	stp	x19, x20, [sp, #16]
  4042c4:	adrp	x20, 415000 <__FRAME_END__+0xfafc>
  4042c8:	add	x20, x20, #0xd80
  4042cc:	stp	x21, x22, [sp, #32]
  4042d0:	adrp	x21, 415000 <__FRAME_END__+0xfafc>
  4042d4:	add	x21, x21, #0xd78
  4042d8:	sub	x20, x20, x21
  4042dc:	mov	w22, w0
  4042e0:	stp	x23, x24, [sp, #48]
  4042e4:	mov	x23, x1
  4042e8:	mov	x24, x2
  4042ec:	bl	401270 <_init>
  4042f0:	cmp	xzr, x20, asr #3
  4042f4:	b.eq	404320 <__libc_csu_init+0x68>  // b.none
  4042f8:	asr	x20, x20, #3
  4042fc:	mov	x19, #0x0                   	// #0
  404300:	ldr	x3, [x21, x19, lsl #3]
  404304:	mov	x2, x24
  404308:	add	x19, x19, #0x1
  40430c:	mov	x1, x23
  404310:	mov	w0, w22
  404314:	blr	x3
  404318:	cmp	x20, x19
  40431c:	b.ne	404300 <__libc_csu_init+0x48>  // b.any
  404320:	ldp	x19, x20, [sp, #16]
  404324:	ldp	x21, x22, [sp, #32]
  404328:	ldp	x23, x24, [sp, #48]
  40432c:	ldp	x29, x30, [sp], #64
  404330:	ret
  404334:	nop

0000000000404338 <__libc_csu_fini>:
  404338:	ret
  40433c:	nop

0000000000404340 <atexit>:
  404340:	adrp	x2, 416000 <memcpy@GLIBC_2.17>
  404344:	mov	x1, #0x0                   	// #0
  404348:	ldr	x2, [x2, #408]
  40434c:	b	401330 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000404350 <_fini>:
  404350:	stp	x29, x30, [sp, #-16]!
  404354:	mov	x29, sp
  404358:	ldp	x29, x30, [sp], #16
  40435c:	ret
