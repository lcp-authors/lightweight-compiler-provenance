
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//kernel.img_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_start>:
       0:	ldr	x2, 28 <_start+0x28>
       4:	str	x0, [x2]
       8:	ldr	x2, 20 <_start+0x20>
       c:	str	x1, [x2]
      10:	ldr	x2, 18 <_start+0x18>
      14:	br	x2
	...
      30:	mrs	x1, cntvct_el0
      34:	adrp	x0, 0 <_start>
      38:	ldr	x0, [x0]
      3c:	ldr	x0, [x0]
      40:	udiv	x0, x1, x0
      44:	ret
	...

0000000000000050 <grub_machine_init>:
      50:	stp	x29, x30, [sp, #-16]!
      54:	mov	x29, sp
      58:	bl	2f70 <grub_efi_init>
      5c:	mrs	x0, cntfrq_el0
      60:	mov	x2, #0x3e8                 	// #1000
      64:	adrp	x1, 0 <_start>
      68:	udiv	x0, x0, x2
      6c:	ldr	x1, [x1]
      70:	str	x0, [x1]
      74:	adrp	x0, 0 <_start>
      78:	ldp	x29, x30, [sp], #16
      7c:	ldr	x0, [x0]
      80:	b	4ba8 <grub_install_get_time_ms>
      84:	nop
	...

0000000000000098 <grub_machine_fini>:
      98:	tbz	w0, #0, a0 <grub_machine_fini+0x8>
      9c:	b	3080 <grub_efi_fini>
      a0:	ret
      a4:	nop

00000000000000a8 <grub_efi_get_firmware_fdt>:
      a8:	mov	x0, #0x21d5                	// #8661
      ac:	stp	x29, x30, [sp, #-80]!
      b0:	movk	x0, #0xb1b6, lsl #16
      b4:	movk	x0, #0xf19c, lsl #32
      b8:	mov	x29, sp
      bc:	movk	x0, #0x41a5, lsl #48
      c0:	str	x0, [sp, #64]
      c4:	mov	x0, #0xb83                 	// #2947
      c8:	movk	x0, #0x15d9, lsl #16
      cc:	stp	x19, x20, [sp, #16]
      d0:	movk	x0, #0x692c, lsl #32
      d4:	movk	x0, #0xe0aa, lsl #48
      d8:	str	x0, [sp, #72]
      dc:	adrp	x0, 0 <_start>
      e0:	stp	x21, x22, [sp, #32]
      e4:	mov	w19, #0x0                   	// #0
      e8:	ldr	x20, [x0]
      ec:	str	x23, [sp, #48]
      f0:	mov	w23, #0x18                  	// #24
      f4:	ldr	x0, [x20]
      f8:	ldr	x22, [x0, #112]
      fc:	ldr	x0, [x20]
     100:	ldr	x0, [x0, #104]
     104:	cmp	x0, w19, uxtw
     108:	b.hi	114 <grub_efi_get_firmware_fdt+0x6c>  // b.pmore
     10c:	mov	x19, #0x0                   	// #0
     110:	b	154 <grub_efi_get_firmware_fdt+0xac>
     114:	umaddl	x21, w19, w23, x22
     118:	add	x1, sp, #0x40
     11c:	mov	x2, #0x10                  	// #16
     120:	mov	x0, x21
     124:	bl	8570 <grub_memcmp>
     128:	cbnz	w0, 16c <grub_efi_get_firmware_fdt+0xc4>
     12c:	adrp	x0, 0 <_start>
     130:	mov	w1, #0x26                  	// #38
     134:	ldr	x19, [x21, #16]
     138:	ldr	x3, [x0]
     13c:	adrp	x0, 0 <_start>
     140:	mov	x4, x19
     144:	ldr	x2, [x0]
     148:	adrp	x0, 0 <_start>
     14c:	ldr	x0, [x0]
     150:	bl	9570 <grub_real_dprintf>
     154:	mov	x0, x19
     158:	ldp	x19, x20, [sp, #16]
     15c:	ldp	x21, x22, [sp, #32]
     160:	ldr	x23, [sp, #48]
     164:	ldp	x29, x30, [sp], #80
     168:	ret
     16c:	add	w19, w19, #0x1
     170:	b	fc <grub_efi_get_firmware_fdt+0x54>
     174:	nop
	...

0000000000000198 <grub_arch_sync_caches>:
     198:	stp	x29, x30, [sp, #-64]!
     19c:	mov	x29, sp
     1a0:	stp	x21, x22, [sp, #32]
     1a4:	mov	x21, x0
     1a8:	adrp	x0, 0 <_start>
     1ac:	stp	x19, x20, [sp, #16]
     1b0:	mov	x19, x1
     1b4:	ldr	x20, [x0]
     1b8:	ldr	x0, [x20]
     1bc:	str	x23, [sp, #48]
     1c0:	cbnz	x0, 224 <grub_arch_sync_caches+0x8c>
     1c4:	mrs	x2, ctr_el0
     1c8:	ubfx	w4, w2, #16, #4
     1cc:	and	w2, w2, #0xf
     1d0:	mov	w0, #0x4                   	// #4
     1d4:	adrp	x23, 0 <_start>
     1d8:	lsl	w4, w0, w4
     1dc:	adrp	x22, 0 <_start>
     1e0:	lsl	w0, w0, w2
     1e4:	sxtw	x4, w4
     1e8:	sxtw	x0, w0
     1ec:	stp	x4, x0, [x20]
     1f0:	adrp	x0, 0 <_start>
     1f4:	ldr	x2, [x23]
     1f8:	mov	w1, #0x2a                  	// #42
     1fc:	ldr	x3, [x0]
     200:	ldr	x0, [x22]
     204:	bl	9570 <grub_real_dprintf>
     208:	adrp	x0, 0 <_start>
     20c:	mov	w1, #0x2b                  	// #43
     210:	ldr	x2, [x23]
     214:	ldr	x3, [x0]
     218:	ldr	x0, [x22]
     21c:	ldr	x4, [x20, #8]
     220:	bl	9570 <grub_real_dprintf>
     224:	ldr	x2, [x20]
     228:	cbnz	x2, 238 <grub_arch_sync_caches+0xa0>
     22c:	adrp	x0, 0 <_start>
     230:	ldr	x0, [x0]
     234:	bl	97fc <grub_fatal>
     238:	ldr	x3, [x20, #8]
     23c:	cmp	x3, x2
     240:	csel	x3, x3, x2, ge  // ge = tcont
     244:	neg	x1, x3
     248:	add	x3, x3, x19
     24c:	sub	x19, x21, #0x1
     250:	and	x22, x1, x21
     254:	add	x19, x3, x19
     258:	mov	x0, x22
     25c:	and	x19, x19, x1
     260:	mov	x1, x19
     264:	bl	2b8 <grub_arch_clean_dcache_range>
     268:	mov	x1, x19
     26c:	mov	x0, x22
     270:	ldr	x2, [x20, #8]
     274:	ldp	x19, x20, [sp, #16]
     278:	ldp	x21, x22, [sp, #32]
     27c:	ldr	x23, [sp, #48]
     280:	ldp	x29, x30, [sp], #64
     284:	b	2d8 <grub_arch_invalidate_icache_range>
	...

00000000000002b8 <grub_arch_clean_dcache_range>:
     2b8:	cmp	x0, x1
     2bc:	b.ge	2cc <grub_arch_clean_dcache_range+0x14>  // b.tcont
     2c0:	dc	cvau, x0
     2c4:	add	x0, x0, x2
     2c8:	b	2b8 <grub_arch_clean_dcache_range>
     2cc:	dsb	ish
     2d0:	isb
     2d4:	ret

00000000000002d8 <grub_arch_invalidate_icache_range>:
     2d8:	cmp	x0, x1
     2dc:	b.ge	2ec <grub_arch_invalidate_icache_range+0x14>  // b.tcont
     2e0:	ic	ivau, x0
     2e4:	add	x0, x0, x2
     2e8:	b	2d8 <grub_arch_invalidate_icache_range>
     2ec:	dsb	ish
     2f0:	isb
     2f4:	ret

00000000000002f8 <grub_arch_dl_check_header>:
     2f8:	ldrh	w1, [x0, #4]
     2fc:	cmp	w1, #0x102
     300:	b.ne	310 <grub_arch_dl_check_header+0x18>  // b.any
     304:	ldrh	w0, [x0, #18]
     308:	cmp	w0, #0xb7
     30c:	b.eq	320 <grub_arch_dl_check_header+0x28>  // b.none
     310:	adrp	x0, 0 <_start>
     314:	ldr	x1, [x0]
     318:	mov	w0, #0x15                  	// #21
     31c:	b	7300 <grub_error>
     320:	mov	w0, #0x0                   	// #0
     324:	ret
	...

0000000000000330 <grub_arch_dl_relocate_symbols>:
     330:	stp	x29, x30, [sp, #-128]!
     334:	mov	x29, sp
     338:	stp	x19, x20, [sp, #16]
     33c:	mov	x20, x0
     340:	stp	x23, x24, [sp, #48]
     344:	mov	x23, x3
     348:	ldp	x0, x24, [x2, #24]
     34c:	stp	x21, x22, [sp, #32]
     350:	mov	x21, x2
     354:	mov	w22, #0x0                   	// #0
     358:	stp	x25, x26, [sp, #64]
     35c:	adrp	x25, 0 <_start>
     360:	adrp	x26, 0 <_start>
     364:	stp	x27, x28, [sp, #80]
     368:	add	x19, x1, x0
     36c:	add	x0, x19, x24
     370:	str	x0, [sp, #104]
     374:	ldr	x0, [sp, #104]
     378:	cmp	x19, x0
     37c:	b.cc	3a0 <grub_arch_dl_relocate_symbols+0x70>  // b.lo, b.ul, b.last
     380:	mov	w0, #0x0                   	// #0
     384:	ldp	x19, x20, [sp, #16]
     388:	ldp	x21, x22, [sp, #32]
     38c:	ldp	x23, x24, [sp, #48]
     390:	ldp	x25, x26, [sp, #64]
     394:	ldp	x27, x28, [sp, #80]
     398:	ldp	x29, x30, [sp], #128
     39c:	ret
     3a0:	ldr	x24, [x19]
     3a4:	ldr	x0, [x23, #16]
     3a8:	cmp	x24, x0
     3ac:	b.cc	3d8 <grub_arch_dl_relocate_symbols+0xa8>  // b.lo, b.ul, b.last
     3b0:	adrp	x0, 0 <_start>
     3b4:	ldr	x1, [x0]
     3b8:	mov	w0, #0x2                   	// #2
     3bc:	ldp	x19, x20, [sp, #16]
     3c0:	ldp	x21, x22, [sp, #32]
     3c4:	ldp	x23, x24, [sp, #48]
     3c8:	ldp	x25, x26, [sp, #64]
     3cc:	ldp	x27, x28, [sp, #80]
     3d0:	ldp	x29, x30, [sp], #128
     3d4:	b	7300 <grub_error>
     3d8:	ldr	x0, [x19, #8]
     3dc:	ldp	x2, x3, [x20, #32]
     3e0:	lsr	x1, x0, #32
     3e4:	madd	x1, x1, x3, x2
     3e8:	ldr	x28, [x1, #8]
     3ec:	ldr	w1, [x21, #4]
     3f0:	cmp	w1, #0x4
     3f4:	b.ne	400 <grub_arch_dl_relocate_symbols+0xd0>  // b.any
     3f8:	ldr	x1, [x19, #16]
     3fc:	add	x28, x28, x1
     400:	ldr	x7, [x23, #8]
     404:	and	x2, x0, #0xffffffff
     408:	cmp	w0, #0x11e
     40c:	add	x27, x7, x24
     410:	b.hi	480 <grub_arch_dl_relocate_symbols+0x150>  // b.pmore
     414:	cmp	x2, #0x112
     418:	b.hi	454 <grub_arch_dl_relocate_symbols+0x124>  // b.pmore
     41c:	cmp	x2, #0x101
     420:	b.eq	4a0 <grub_arch_dl_relocate_symbols+0x170>  // b.none
     424:	cmp	x2, #0x105
     428:	b.eq	554 <grub_arch_dl_relocate_symbols+0x224>  // b.none
     42c:	adrp	x0, 0 <_start>
     430:	ldp	x19, x20, [sp, #16]
     434:	ldr	x1, [x0]
     438:	mov	w0, #0x18                  	// #24
     43c:	ldp	x21, x22, [sp, #32]
     440:	ldp	x23, x24, [sp, #48]
     444:	ldp	x25, x26, [sp, #64]
     448:	ldp	x27, x28, [sp, #80]
     44c:	ldp	x29, x30, [sp], #128
     450:	b	7300 <grub_error>
     454:	sub	x0, x2, #0x113
     458:	cmp	x0, #0xb
     45c:	b.hi	42c <grub_arch_dl_relocate_symbols+0xfc>  // b.pmore
     460:	cmp	w0, #0xb
     464:	b.hi	42c <grub_arch_dl_relocate_symbols+0xfc>  // b.pmore
     468:	adrp	x1, 0 <_start>
     46c:	ldr	x1, [x1]
     470:	ldrh	w0, [x1, w0, uxtw #1]
     474:	adr	x1, 480 <grub_arch_dl_relocate_symbols+0x150>
     478:	add	x0, x1, w0, sxth #2
     47c:	br	x0
     480:	cmp	x2, #0x137
     484:	b.eq	5a8 <grub_arch_dl_relocate_symbols+0x278>  // b.none
     488:	cmp	x2, #0x138
     48c:	b.ne	42c <grub_arch_dl_relocate_symbols+0xfc>  // b.any
     490:	cbnz	w22, 680 <grub_arch_dl_relocate_symbols+0x350>
     494:	adrp	x0, 0 <_start>
     498:	ldr	x1, [x0]
     49c:	b	3b8 <grub_arch_dl_relocate_symbols+0x88>
     4a0:	adrp	x0, 0 <_start>
     4a4:	mov	x5, x28
     4a8:	ldr	x2, [x25]
     4ac:	mov	x4, x27
     4b0:	ldr	x3, [x0]
     4b4:	mov	w1, #0x59                  	// #89
     4b8:	ldr	x0, [x26]
     4bc:	str	x7, [sp, #112]
     4c0:	bl	9570 <grub_real_dprintf>
     4c4:	ldr	x7, [sp, #112]
     4c8:	str	x28, [x7, x24]
     4cc:	ldr	x0, [x21, #56]
     4d0:	add	x19, x19, x0
     4d4:	b	374 <grub_arch_dl_relocate_symbols+0x44>
     4d8:	mov	x1, x28
     4dc:	mov	x0, x27
     4e0:	bl	80c <grub_arm64_set_abs_lo12>
     4e4:	b	4cc <grub_arch_dl_relocate_symbols+0x19c>
     4e8:	mov	x1, x28
     4ec:	mov	x0, x27
     4f0:	bl	81c <grub_arm64_set_abs_lo12_ldst64>
     4f4:	b	4cc <grub_arch_dl_relocate_symbols+0x19c>
     4f8:	sub	x24, x28, x27
     4fc:	mov	x0, x24
     500:	bl	720 <grub_arm_64_check_xxxx26_offset>
     504:	cbnz	w0, 52c <grub_arch_dl_relocate_symbols+0x1fc>
     508:	ldr	x1, [x20, #88]
     50c:	add	x0, x1, #0x10
     510:	str	x0, [x20, #88]
     514:	mov	x0, #0x50                  	// #80
     518:	sub	x24, x1, x27
     51c:	movk	x0, #0x5800, lsl #16
     520:	movk	x0, #0x200, lsl #32
     524:	movk	x0, #0xd61f, lsl #48
     528:	stp	x0, x28, [x1]
     52c:	mov	x0, x24
     530:	bl	720 <grub_arm_64_check_xxxx26_offset>
     534:	cbnz	w0, 544 <grub_arch_dl_relocate_symbols+0x214>
     538:	adrp	x0, 0 <_start>
     53c:	ldr	x1, [x0]
     540:	b	3b8 <grub_arch_dl_relocate_symbols+0x88>
     544:	mov	x1, x24
     548:	mov	x0, x27
     54c:	bl	738 <grub_arm64_set_xxxx26_offset>
     550:	b	4cc <grub_arch_dl_relocate_symbols+0x19c>
     554:	ldrsw	x0, [x7, x24]
     558:	sub	x0, x0, x27
     55c:	add	x0, x0, x28
     560:	sxtw	x8, w0
     564:	cmp	x0, w0, sxtw
     568:	b.eq	578 <grub_arch_dl_relocate_symbols+0x248>  // b.none
     56c:	adrp	x0, 0 <_start>
     570:	ldr	x1, [x0]
     574:	b	3b8 <grub_arch_dl_relocate_symbols+0x88>
     578:	adrp	x0, 0 <_start>
     57c:	mov	x5, x28
     580:	ldr	x2, [x25]
     584:	mov	x4, x27
     588:	ldr	x3, [x0]
     58c:	mov	w1, #0x83                  	// #131
     590:	ldr	x0, [x26]
     594:	stp	x7, x8, [sp, #112]
     598:	bl	9570 <grub_real_dprintf>
     59c:	ldp	x7, x8, [sp, #112]
     5a0:	str	w8, [x7, x24]
     5a4:	b	4cc <grub_arch_dl_relocate_symbols+0x19c>
     5a8:	ldr	x24, [x20, #72]
     5ac:	and	x0, x27, #0xfffffffffffff000
     5b0:	ldr	x2, [x25]
     5b4:	and	x7, x24, #0xfffffffffffff000
     5b8:	sub	x7, x7, x0
     5bc:	mov	x0, x24
     5c0:	mov	x5, x28
     5c4:	mov	x4, x27
     5c8:	mov	x6, x24
     5cc:	mov	w1, #0x90                  	// #144
     5d0:	str	x28, [x0], #8
     5d4:	str	x7, [sp, #112]
     5d8:	str	x0, [x20, #72]
     5dc:	adrp	x0, 0 <_start>
     5e0:	ldr	x3, [x0]
     5e4:	ldr	x0, [x26]
     5e8:	bl	9570 <grub_real_dprintf>
     5ec:	ldr	x7, [sp, #112]
     5f0:	mov	x0, x7
     5f4:	bl	7d0 <grub_arm64_check_hi21_signed>
     5f8:	ldr	x7, [sp, #112]
     5fc:	cbnz	w0, 60c <grub_arch_dl_relocate_symbols+0x2dc>
     600:	adrp	x0, 0 <_start>
     604:	ldr	x1, [x0]
     608:	b	3b8 <grub_arch_dl_relocate_symbols+0x88>
     60c:	mov	x1, x7
     610:	mov	x0, x27
     614:	bl	7dc <grub_arm64_set_hi21>
     618:	ldr	x0, [x21, #56]
     61c:	add	x1, x19, x0
     620:	ldr	x2, [sp, #104]
     624:	cmp	x1, x2
     628:	b.cc	638 <grub_arch_dl_relocate_symbols+0x308>  // b.lo, b.ul, b.last
     62c:	adrp	x0, 0 <_start>
     630:	ldr	x1, [x0]
     634:	b	3b8 <grub_arch_dl_relocate_symbols+0x88>
     638:	ldr	x2, [x1, #8]
     63c:	ldr	w3, [x19, #12]
     640:	cmp	x3, x2, lsr #32
     644:	b.ne	678 <grub_arch_dl_relocate_symbols+0x348>  // b.any
     648:	ldr	x3, [x1, #16]
     64c:	ldr	x4, [x19, #16]
     650:	cmp	x4, x3
     654:	b.ne	678 <grub_arch_dl_relocate_symbols+0x348>  // b.any
     658:	cmp	w2, #0x138
     65c:	b.ne	678 <grub_arch_dl_relocate_symbols+0x348>  // b.any
     660:	ldr	x0, [x1]
     664:	add	w22, w22, #0x1
     668:	ldr	x2, [x23, #8]
     66c:	mov	x1, x24
     670:	add	x0, x2, x0
     674:	b	4f0 <grub_arch_dl_relocate_symbols+0x1c0>
     678:	add	x1, x1, x0
     67c:	b	620 <grub_arch_dl_relocate_symbols+0x2f0>
     680:	sub	w22, w22, #0x1
     684:	b	4cc <grub_arch_dl_relocate_symbols+0x19c>
     688:	and	x5, x28, #0xfffffffffffff000
     68c:	and	x1, x27, #0xfffffffffffff000
     690:	sub	x1, x5, x1
     694:	str	x1, [sp, #112]
     698:	mov	x0, x1
     69c:	bl	7d0 <grub_arm64_check_hi21_signed>
     6a0:	ldr	x1, [sp, #112]
     6a4:	cbz	w0, 600 <grub_arch_dl_relocate_symbols+0x2d0>
     6a8:	mov	x0, x27
     6ac:	bl	7dc <grub_arm64_set_hi21>
     6b0:	b	4cc <grub_arch_dl_relocate_symbols+0x19c>
     6b4:	nop
	...

0000000000000720 <grub_arm_64_check_xxxx26_offset>:
     720:	mov	x1, #0x8000000             	// #134217728
     724:	add	x0, x0, x1
     728:	mov	x1, #0xfffffff             	// #268435455
     72c:	cmp	x0, x1
     730:	cset	w0, ls  // ls = plast
     734:	ret

0000000000000738 <grub_arm64_set_xxxx26_offset>:
     738:	stp	x29, x30, [sp, #-32]!
     73c:	cmp	x1, #0x0
     740:	mov	x29, sp
     744:	stp	x19, x20, [sp, #16]
     748:	mov	x20, x0
     74c:	mov	x19, x1
     750:	b.gt	764 <grub_arm64_set_xxxx26_offset+0x2c>
     754:	b.eq	7b0 <grub_arm64_set_xxxx26_offset+0x78>  // b.none
     758:	neg	x6, x1
     75c:	mov	w5, #0x2d                  	// #45
     760:	b	76c <grub_arm64_set_xxxx26_offset+0x34>
     764:	mov	x6, x1
     768:	mov	w5, #0x2b                  	// #43
     76c:	adrp	x0, 0 <_start>
     770:	mov	x4, x20
     774:	mov	w1, #0x31                  	// #49
     778:	ubfx	w19, w19, #2, #26
     77c:	ldr	x3, [x0]
     780:	adrp	x0, 0 <_start>
     784:	ldr	x2, [x0]
     788:	adrp	x0, 0 <_start>
     78c:	ldr	x0, [x0]
     790:	bl	9570 <grub_real_dprintf>
     794:	ldr	w1, [x20]
     798:	and	w1, w1, #0xfc000000
     79c:	orr	w19, w1, w19
     7a0:	str	w19, [x20]
     7a4:	ldp	x19, x20, [sp, #16]
     7a8:	ldp	x29, x30, [sp], #32
     7ac:	ret
     7b0:	mov	x6, #0x0                   	// #0
     7b4:	b	75c <grub_arm64_set_xxxx26_offset+0x24>
	...

00000000000007d0 <grub_arm64_check_hi21_signed>:
     7d0:	cmp	x0, w0, sxtw
     7d4:	cset	w0, eq  // eq = none
     7d8:	ret

00000000000007dc <grub_arm64_set_hi21>:
     7dc:	asr	x2, x1, #12
     7e0:	asr	x1, x1, #14
     7e4:	mov	w3, #0x1f                  	// #31
     7e8:	ubfiz	w2, w2, #29, #2
     7ec:	ubfiz	w1, w1, #5, #19
     7f0:	orr	w1, w2, w1
     7f4:	ldr	w2, [x0]
     7f8:	movk	w3, #0x9f00, lsl #16
     7fc:	and	w2, w2, w3
     800:	orr	w1, w1, w2
     804:	str	w1, [x0]
     808:	ret

000000000000080c <grub_arm64_set_abs_lo12>:
     80c:	ldr	w2, [x0]
     810:	bfi	w2, w1, #10, #12
     814:	str	w2, [x0]
     818:	ret

000000000000081c <grub_arm64_set_abs_lo12_ldst64>:
     81c:	ldr	w2, [x0]
     820:	lsl	w1, w1, #7
     824:	and	w1, w1, #0x7fc00
     828:	and	w2, w2, #0xfff803ff
     82c:	orr	w2, w2, w1
     830:	str	w2, [x0]
     834:	ret

0000000000000838 <grub_arm64_dl_get_tramp_got_size>:
     838:	ldrh	w8, [x0, #60]
     83c:	mov	w5, #0x0                   	// #0
     840:	str	xzr, [x1]
     844:	str	xzr, [x2]
     848:	ldr	x3, [x0, #40]
     84c:	add	x3, x0, x3
     850:	cmp	w8, w5
     854:	b.hi	860 <grub_arm64_dl_get_tramp_got_size+0x28>  // b.pmore
     858:	mov	w0, #0x0                   	// #0
     85c:	ret
     860:	ldr	w4, [x3, #4]
     864:	cmp	w4, #0x9
     868:	ccmp	w4, #0x4, #0x4, ne  // ne = any
     86c:	b.eq	880 <grub_arm64_dl_get_tramp_got_size+0x48>  // b.none
     870:	ldrh	w4, [x0, #58]
     874:	add	w5, w5, #0x1
     878:	add	x3, x3, x4
     87c:	b	850 <grub_arm64_dl_get_tramp_got_size+0x18>
     880:	ldp	x4, x6, [x3, #24]
     884:	add	x4, x0, x4
     888:	add	x6, x4, x6
     88c:	cmp	x4, x6
     890:	b.cs	870 <grub_arm64_dl_get_tramp_got_size+0x38>  // b.hs, b.nlast
     894:	ldr	w7, [x4, #8]
     898:	cmp	x7, #0x11b
     89c:	b.hi	8b8 <grub_arm64_dl_get_tramp_got_size+0x80>  // b.pmore
     8a0:	cmp	x7, #0x119
     8a4:	b.ls	8c0 <grub_arm64_dl_get_tramp_got_size+0x88>  // b.plast
     8a8:	ldr	x7, [x1]
     8ac:	add	x7, x7, #0x10
     8b0:	str	x7, [x1]
     8b4:	b	8c0 <grub_arm64_dl_get_tramp_got_size+0x88>
     8b8:	cmp	x7, #0x137
     8bc:	b.eq	8cc <grub_arm64_dl_get_tramp_got_size+0x94>  // b.none
     8c0:	ldr	x7, [x3, #56]
     8c4:	add	x4, x4, x7
     8c8:	b	88c <grub_arm64_dl_get_tramp_got_size+0x54>
     8cc:	ldr	x7, [x2]
     8d0:	add	x7, x7, #0x8
     8d4:	str	x7, [x2]
     8d8:	b	8c0 <grub_arm64_dl_get_tramp_got_size+0x88>
     8dc:	nop
     8e0:	cmp	x0, #0x0
     8e4:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     8e8:	b.ne	8f8 <grub_arm64_dl_get_tramp_got_size+0xc0>  // b.any
     8ec:	cmp	w1, #0x0
     8f0:	csel	x0, x0, xzr, eq  // eq = none
     8f4:	ret
     8f8:	sub	w1, w1, #0x1
     8fc:	ldr	x0, [x0, #32]
     900:	b	8e0 <grub_arm64_dl_get_tramp_got_size+0xa8>
     904:	ldr	x4, [x0]
     908:	adrp	x0, 0 <_start>
     90c:	mov	w1, #0x21c                 	// #540
     910:	ldr	x3, [x0]
     914:	adrp	x0, 0 <_start>
     918:	ldr	x2, [x0]
     91c:	adrp	x0, 0 <_start>
     920:	ldr	x0, [x0]
     924:	b	9570 <grub_real_dprintf>
	...
     940:	cbnz	x0, 948 <grub_arm64_dl_get_tramp_got_size+0x110>
     944:	ret
     948:	stp	x29, x30, [sp, #-32]!
     94c:	mov	x29, sp
     950:	str	x19, [sp, #16]
     954:	ldr	x19, [x0, #32]
     958:	bl	4844 <grub_free>
     95c:	mov	x0, x19
     960:	cbnz	x19, 954 <grub_arm64_dl_get_tramp_got_size+0x11c>
     964:	ldr	x19, [sp, #16]
     968:	ldp	x29, x30, [sp], #32
     96c:	ret

0000000000000970 <grub_efidisk_fini>:
     970:	stp	x29, x30, [sp, #-32]!
     974:	adrp	x0, 0 <_start>
     978:	mov	x29, sp
     97c:	str	x19, [sp, #16]
     980:	ldr	x19, [x0]
     984:	ldr	x0, [x19]
     988:	bl	940 <grub_arm64_dl_get_tramp_got_size+0x108>
     98c:	ldr	x0, [x19, #8]
     990:	bl	940 <grub_arm64_dl_get_tramp_got_size+0x108>
     994:	ldr	x0, [x19, #16]
     998:	bl	940 <grub_arm64_dl_get_tramp_got_size+0x108>
     99c:	stp	xzr, xzr, [x19]
     9a0:	adrp	x0, 0 <_start>
     9a4:	str	xzr, [x19, #16]
     9a8:	ldr	x19, [sp, #16]
     9ac:	ldp	x29, x30, [sp], #32
     9b0:	ldr	x0, [x0]
     9b4:	b	59e8 <grub_disk_dev_unregister>
	...
     9c8:	stp	x29, x30, [sp, #-64]!
     9cc:	mov	x4, x0
     9d0:	mov	x29, sp
     9d4:	stp	x21, x22, [sp, #32]
     9d8:	mov	x21, x0
     9dc:	adrp	x0, 0 <_start>
     9e0:	stp	x23, x24, [sp, #48]
     9e4:	adrp	x24, 0 <_start>
     9e8:	adrp	x23, 0 <_start>
     9ec:	ldr	x3, [x0]
     9f0:	stp	x19, x20, [sp, #16]
     9f4:	mov	x20, x1
     9f8:	ldr	x0, [x23]
     9fc:	mov	w1, #0x1e2                 	// #482
     a00:	ldr	x2, [x24]
     a04:	bl	9570 <grub_real_dprintf>
     a08:	ldrb	w0, [x21]
     a0c:	adrp	x1, 0 <_start>
     a10:	sub	w0, w0, #0x63
     a14:	and	w0, w0, #0xff
     a18:	ldr	x19, [x1]
     a1c:	cmp	w0, #0x5
     a20:	b.hi	a78 <grub_efidisk_fini+0x108>  // b.pmore
     a24:	mov	x1, #0x29                  	// #41
     a28:	lsr	x0, x1, x0
     a2c:	tbz	w0, #0, a78 <grub_efidisk_fini+0x108>
     a30:	ldrb	w0, [x21, #1]
     a34:	cmp	w0, #0x64
     a38:	b.ne	a78 <grub_efidisk_fini+0x108>  // b.any
     a3c:	mov	w2, #0xa                   	// #10
     a40:	add	x0, x21, #0x2
     a44:	mov	x1, #0x0                   	// #0
     a48:	bl	8ec0 <grub_strtoul>
     a4c:	mov	x2, x0
     a50:	ldr	w0, [x19]
     a54:	cbnz	w0, a78 <grub_efidisk_fini+0x108>
     a58:	tbz	w2, #31, a8c <grub_efidisk_fini+0x11c>
     a5c:	ldr	w22, [x19]
     a60:	mov	w0, w22
     a64:	ldp	x19, x20, [sp, #16]
     a68:	ldp	x21, x22, [sp, #32]
     a6c:	ldp	x23, x24, [sp, #48]
     a70:	ldp	x29, x30, [sp], #64
     a74:	ret
     a78:	adrp	x0, 0 <_start>
     a7c:	ldr	x1, [x0]
     a80:	mov	w0, #0xc                   	// #12
     a84:	bl	7300 <grub_error>
     a88:	b	a5c <grub_efidisk_fini+0xec>
     a8c:	ldrb	w3, [x21]
     a90:	cmp	w3, #0x66
     a94:	b.eq	abc <grub_efidisk_fini+0x14c>  // b.none
     a98:	cmp	w3, #0x68
     a9c:	b.eq	af8 <grub_efidisk_fini+0x188>  // b.none
     aa0:	cmp	w3, #0x63
     aa4:	b.ne	ad8 <grub_efidisk_fini+0x168>  // b.any
     aa8:	adrp	x0, 0 <_start>
     aac:	mov	w1, w2
     ab0:	ldr	x0, [x0]
     ab4:	ldr	x0, [x0, #16]
     ab8:	b	acc <grub_efidisk_fini+0x15c>
     abc:	adrp	x0, 0 <_start>
     ac0:	mov	w1, w2
     ac4:	ldr	x0, [x0]
     ac8:	ldr	x0, [x0]
     acc:	bl	8e0 <grub_arm64_dl_get_tramp_got_size+0xa8>
     ad0:	mov	x19, x0
     ad4:	cbnz	x0, b0c <grub_efidisk_fini+0x19c>
     ad8:	adrp	x0, 0 <_start>
     adc:	ldp	x19, x20, [sp, #16]
     ae0:	ldp	x21, x22, [sp, #32]
     ae4:	ldp	x23, x24, [sp, #48]
     ae8:	ldp	x29, x30, [sp], #64
     aec:	ldr	x1, [x0]
     af0:	mov	w0, #0xc                   	// #12
     af4:	b	7300 <grub_error>
     af8:	adrp	x0, 0 <_start>
     afc:	mov	w1, w2
     b00:	ldr	x0, [x0]
     b04:	ldr	x0, [x0, #8]
     b08:	b	acc <grub_efidisk_fini+0x15c>
     b0c:	ldr	x0, [x0, #24]
     b10:	orr	w2, w3, w2, lsl #8
     b14:	mov	w1, #0x1ff                 	// #511
     b18:	sxtw	x2, w2
     b1c:	ldr	x22, [x0, #8]
     b20:	adrp	x0, 0 <_start>
     b24:	ldr	x3, [x0]
     b28:	mov	x4, x22
     b2c:	ldr	x0, [x23]
     b30:	ldp	w6, w7, [x22, #12]
     b34:	ldr	x5, [x22, #24]
     b38:	str	x2, [x20, #32]
     b3c:	ldr	x2, [x24]
     b40:	bl	9570 <grub_real_dprintf>
     b44:	ldr	w2, [x22, #16]
     b48:	sub	w0, w2, #0x1
     b4c:	tst	w0, w2
     b50:	b.eq	b74 <grub_efidisk_fini+0x204>  // b.none
     b54:	adrp	x0, 0 <_start>
     b58:	ldr	x1, [x0]
     b5c:	mov	w0, #0x1d                  	// #29
     b60:	ldp	x19, x20, [sp, #16]
     b64:	ldp	x21, x22, [sp, #32]
     b68:	ldp	x23, x24, [sp, #48]
     b6c:	ldp	x29, x30, [sp], #64
     b70:	b	7300 <grub_error>
     b74:	ldr	x0, [x22, #24]
     b78:	ldr	w2, [x22, #12]
     b7c:	add	x0, x0, #0x1
     b80:	str	x0, [x20, #16]
     b84:	mov	w0, #0x14                  	// #20
     b88:	str	w0, [x20, #28]
     b8c:	sub	w22, w2, #0x1
     b90:	ands	w22, w22, w2
     b94:	b.ne	b9c <grub_efidisk_fini+0x22c>  // b.any
     b98:	cbnz	w2, ba8 <grub_efidisk_fini+0x238>
     b9c:	adrp	x0, 0 <_start>
     ba0:	ldr	x1, [x0]
     ba4:	b	b5c <grub_efidisk_fini+0x1ec>
     ba8:	mov	w3, #0x1                   	// #1
     bac:	str	wzr, [x20, #24]
     bb0:	ldr	w0, [x20, #24]
     bb4:	lsl	w1, w3, w0
     bb8:	cmp	w2, w1
     bbc:	b.hi	be4 <grub_efidisk_fini+0x274>  // b.pmore
     bc0:	adrp	x0, 0 <_start>
     bc4:	str	x19, [x20, #64]
     bc8:	ldr	x2, [x24]
     bcc:	mov	x4, x21
     bd0:	ldr	x3, [x0]
     bd4:	mov	w1, #0x213                 	// #531
     bd8:	ldr	x0, [x23]
     bdc:	bl	9570 <grub_real_dprintf>
     be0:	b	a60 <grub_efidisk_fini+0xf0>
     be4:	add	w0, w0, #0x1
     be8:	str	w0, [x20, #24]
     bec:	b	bb0 <grub_efidisk_fini+0x240>
	...
     c48:	stp	x29, x30, [sp, #-96]!
     c4c:	adrp	x0, 0 <_start>
     c50:	mov	x2, #0x0                   	// #0
     c54:	mov	x29, sp
     c58:	stp	x21, x22, [sp, #32]
     c5c:	add	x3, sp, #0x58
     c60:	ldr	x21, [x0]
     c64:	mov	w0, #0x2                   	// #2
     c68:	stp	x19, x20, [sp, #16]
     c6c:	add	x21, x21, #0x40
     c70:	mov	x1, x21
     c74:	stp	x23, x24, [sp, #48]
     c78:	stp	x25, x26, [sp, #64]
     c7c:	bl	1dc0 <grub_efi_locate_handle>
     c80:	cbnz	x0, d5c <grub_efidisk_fini+0x3ec>
     c84:	mov	x19, #0x0                   	// #0
     c88:	mov	x0, x19
     c8c:	ldp	x19, x20, [sp, #16]
     c90:	ldp	x21, x22, [sp, #32]
     c94:	ldp	x23, x24, [sp, #48]
     c98:	ldp	x25, x26, [sp, #64]
     c9c:	ldp	x29, x30, [sp], #96
     ca0:	ret
     ca4:	ldr	x0, [x22]
     ca8:	bl	2568 <grub_efi_get_device_path>
     cac:	mov	x25, x0
     cb0:	cbz	x0, d3c <grub_efidisk_fini+0x3cc>
     cb4:	bl	2588 <grub_efi_find_last_device_path>
     cb8:	mov	x24, x0
     cbc:	cbz	x0, d3c <grub_efidisk_fini+0x3cc>
     cc0:	ldr	x0, [x22]
     cc4:	mov	x1, x21
     cc8:	mov	w2, #0x2                   	// #2
     ccc:	bl	1eb0 <grub_efi_open_protocol>
     cd0:	mov	x23, x0
     cd4:	cbz	x0, d3c <grub_efidisk_fini+0x3cc>
     cd8:	ldr	x0, [x0, #8]
     cdc:	cbz	x0, cf8 <grub_efidisk_fini+0x388>
     ce0:	ldr	w1, [x0]
     ce4:	cmp	w1, w26
     ce8:	b.ne	cf8 <grub_efidisk_fini+0x388>  // b.any
     cec:	ldr	w0, [x0, #12]
     cf0:	cmp	w0, #0x1
     cf4:	b.eq	d3c <grub_efidisk_fini+0x3cc>  // b.none
     cf8:	mov	x0, #0x28                  	// #40
     cfc:	bl	47f8 <grub_malloc>
     d00:	mov	x2, x0
     d04:	cbnz	x0, d28 <grub_efidisk_fini+0x3b8>
     d08:	mov	x0, x20
     d0c:	bl	4844 <grub_free>
     d10:	cbz	x19, c84 <grub_efidisk_fini+0x314>
     d14:	ldr	x20, [x19, #32]
     d18:	mov	x0, x19
     d1c:	bl	4844 <grub_free>
     d20:	mov	x19, x20
     d24:	b	d10 <grub_efidisk_fini+0x3a0>
     d28:	ldr	x0, [x22]
     d2c:	str	x19, [x2, #32]
     d30:	mov	x19, x2
     d34:	stp	x0, x25, [x2]
     d38:	stp	x24, x23, [x2, #16]
     d3c:	add	x22, x22, #0x8
     d40:	ldr	x0, [sp, #88]
     d44:	sub	x1, x0, #0x1
     d48:	str	x1, [sp, #88]
     d4c:	cbnz	x0, ca4 <grub_efidisk_fini+0x334>
     d50:	mov	x0, x20
     d54:	bl	4844 <grub_free>
     d58:	b	c88 <grub_efidisk_fini+0x318>
     d5c:	mov	w26, #0x5845                	// #22597
     d60:	mov	x20, x0
     d64:	mov	x22, x0
     d68:	mov	x19, #0x0                   	// #0
     d6c:	movk	w26, #0x6950, lsl #16
     d70:	b	d40 <grub_efidisk_fini+0x3d0>
     d74:	nop
	...
     d80:	stp	x29, x30, [sp, #-48]!
     d84:	mov	x29, sp
     d88:	stp	x19, x20, [sp, #16]
     d8c:	mov	x19, x0
     d90:	ldr	x0, [x1, #8]
     d94:	str	x21, [sp, #32]
     d98:	mov	x21, x1
     d9c:	bl	25e4 <grub_efi_duplicate_device_path>
     da0:	cbnz	x0, dbc <grub_efidisk_fini+0x44c>
     da4:	mov	x19, #0x0                   	// #0
     da8:	mov	x0, x19
     dac:	ldp	x19, x20, [sp, #16]
     db0:	ldr	x21, [sp, #32]
     db4:	ldp	x29, x30, [sp], #48
     db8:	ret
     dbc:	mov	x20, x0
     dc0:	bl	2588 <grub_efi_find_last_device_path>
     dc4:	cbz	x0, da4 <grub_efidisk_fini+0x434>
     dc8:	mov	w1, #0xff7f                	// #65407
     dcc:	movk	w1, #0x4, lsl #16
     dd0:	str	w1, [x0]
     dd4:	cbz	x19, df8 <grub_efidisk_fini+0x488>
     dd8:	cmp	x19, x21
     ddc:	b.ne	de8 <grub_efidisk_fini+0x478>  // b.any
     de0:	ldr	x19, [x19, #32]
     de4:	b	dd4 <grub_efidisk_fini+0x464>
     de8:	ldr	x0, [x19, #8]
     dec:	mov	x1, x20
     df0:	bl	2eb0 <grub_efi_compare_device_paths>
     df4:	cbnz	w0, de0 <grub_efidisk_fini+0x470>
     df8:	mov	x0, x20
     dfc:	bl	4844 <grub_free>
     e00:	b	da8 <grub_efidisk_fini+0x438>
     e04:	stp	x29, x30, [sp, #-48]!
     e08:	mov	x29, sp
     e0c:	stp	x19, x20, [sp, #16]
     e10:	mov	x19, x1
     e14:	mov	w20, #0x0                   	// #0
     e18:	stp	x21, x22, [sp, #32]
     e1c:	mov	x21, x0
     e20:	mov	x22, x2
     e24:	cbnz	x19, e30 <grub_efidisk_fini+0x4c0>
     e28:	mov	w0, #0x0                   	// #0
     e2c:	b	e5c <grub_efidisk_fini+0x4ec>
     e30:	ldr	x0, [x19, #8]
     e34:	mov	x1, x21
     e38:	bl	2eb0 <grub_efi_compare_device_paths>
     e3c:	cbnz	w0, e6c <grub_efidisk_fini+0x4fc>
     e40:	adrp	x0, 0 <_start>
     e44:	mov	w3, w20
     e48:	mov	x1, #0xc                   	// #12
     e4c:	ldr	x2, [x0]
     e50:	mov	x0, x22
     e54:	bl	96cc <grub_snprintf>
     e58:	mov	w0, #0x1                   	// #1
     e5c:	ldp	x19, x20, [sp, #16]
     e60:	ldp	x21, x22, [sp, #32]
     e64:	ldp	x29, x30, [sp], #48
     e68:	ret
     e6c:	add	w20, w20, #0x1
     e70:	ldr	x19, [x19, #32]
     e74:	b	e24 <grub_efidisk_fini+0x4b4>
	...
     e80:	stp	x29, x30, [sp, #-48]!
     e84:	mov	x29, sp
     e88:	stp	x19, x20, [sp, #16]
     e8c:	mov	x19, x1
     e90:	mov	x20, x0
     e94:	stp	x21, x22, [sp, #32]
     e98:	add	x22, x1, #0x1
     e9c:	adrp	x1, 0 <_start>
     ea0:	mov	x2, x22
     ea4:	ldr	x21, [x1]
     ea8:	ldr	x1, [x21, #8]
     eac:	bl	e04 <grub_efidisk_fini+0x494>
     eb0:	cbz	w0, ed0 <grub_efidisk_fini+0x560>
     eb4:	mov	w0, #0x68                  	// #104
     eb8:	strb	w0, [x19]
     ebc:	mov	w0, #0x1                   	// #1
     ec0:	ldp	x19, x20, [sp, #16]
     ec4:	ldp	x21, x22, [sp, #32]
     ec8:	ldp	x29, x30, [sp], #48
     ecc:	ret
     ed0:	ldr	x1, [x21]
     ed4:	mov	x2, x22
     ed8:	mov	x0, x20
     edc:	bl	e04 <grub_efidisk_fini+0x494>
     ee0:	cbz	w0, eec <grub_efidisk_fini+0x57c>
     ee4:	mov	w0, #0x66                  	// #102
     ee8:	b	eb8 <grub_efidisk_fini+0x548>
     eec:	ldr	x1, [x21, #16]
     ef0:	mov	x2, x22
     ef4:	mov	x0, x20
     ef8:	bl	e04 <grub_efidisk_fini+0x494>
     efc:	cbz	w0, ec0 <grub_efidisk_fini+0x550>
     f00:	mov	w0, #0x63                  	// #99
     f04:	b	eb8 <grub_efidisk_fini+0x548>
	...
     f10:	stp	x29, x30, [sp, #-96]!
     f14:	mov	x29, sp
     f18:	stp	x19, x20, [sp, #16]
     f1c:	mov	x19, x0
     f20:	mov	x20, x1
     f24:	stp	x21, x22, [sp, #32]
     f28:	stp	x23, x24, [sp, #48]
     f2c:	stp	x25, x26, [sp, #64]
     f30:	cbz	w2, f58 <grub_efidisk_fini+0x5e8>
     f34:	cmp	w2, #0x1
     f38:	b.eq	fc4 <grub_efidisk_fini+0x654>  // b.none
     f3c:	mov	w0, #0x0                   	// #0
     f40:	ldp	x19, x20, [sp, #16]
     f44:	ldp	x21, x22, [sp, #32]
     f48:	ldp	x23, x24, [sp, #48]
     f4c:	ldp	x25, x26, [sp, #64]
     f50:	ldp	x29, x30, [sp], #96
     f54:	ret
     f58:	adrp	x0, 0 <_start>
     f5c:	mov	w22, #0x0                   	// #0
     f60:	adrp	x23, 0 <_start>
     f64:	adrp	x24, 0 <_start>
     f68:	ldr	x0, [x0]
     f6c:	adrp	x25, 0 <_start>
     f70:	ldr	x21, [x0, #8]
     f74:	cbz	x21, f3c <grub_efidisk_fini+0x5cc>
     f78:	ldr	x2, [x23]
     f7c:	mov	w3, w22
     f80:	mov	x1, #0x10                  	// #16
     f84:	add	x0, sp, #0x50
     f88:	bl	96cc <grub_snprintf>
     f8c:	adrp	x0, 0 <_start>
     f90:	add	x4, sp, #0x50
     f94:	ldr	x3, [x24]
     f98:	mov	w1, #0x19d                 	// #413
     f9c:	ldr	x0, [x0]
     fa0:	ldr	x2, [x25]
     fa4:	bl	9570 <grub_real_dprintf>
     fa8:	mov	x1, x20
     fac:	add	x0, sp, #0x50
     fb0:	blr	x19
     fb4:	cbnz	w0, 1088 <grub_efidisk_fini+0x718>
     fb8:	add	w22, w22, #0x1
     fbc:	ldr	x21, [x21, #32]
     fc0:	b	f74 <grub_efidisk_fini+0x604>
     fc4:	adrp	x0, 0 <_start>
     fc8:	mov	w22, #0x0                   	// #0
     fcc:	adrp	x24, 0 <_start>
     fd0:	adrp	x25, 0 <_start>
     fd4:	ldr	x23, [x0]
     fd8:	adrp	x26, 0 <_start>
     fdc:	ldr	x21, [x23]
     fe0:	cbnz	x21, 1048 <grub_efidisk_fini+0x6d8>
     fe4:	mov	w22, #0x0                   	// #0
     fe8:	adrp	x24, 0 <_start>
     fec:	adrp	x25, 0 <_start>
     ff0:	ldr	x21, [x23, #16]
     ff4:	adrp	x23, 0 <_start>
     ff8:	cbz	x21, f3c <grub_efidisk_fini+0x5cc>
     ffc:	ldr	x2, [x23]
    1000:	mov	w3, w22
    1004:	mov	x1, #0x10                  	// #16
    1008:	add	x0, sp, #0x50
    100c:	bl	96cc <grub_snprintf>
    1010:	adrp	x0, 0 <_start>
    1014:	add	x4, sp, #0x50
    1018:	ldr	x3, [x24]
    101c:	mov	w1, #0x1ae                 	// #430
    1020:	ldr	x0, [x0]
    1024:	ldr	x2, [x25]
    1028:	bl	9570 <grub_real_dprintf>
    102c:	mov	x1, x20
    1030:	add	x0, sp, #0x50
    1034:	blr	x19
    1038:	cbnz	w0, 1088 <grub_efidisk_fini+0x718>
    103c:	add	w22, w22, #0x1
    1040:	ldr	x21, [x21, #32]
    1044:	b	ff8 <grub_efidisk_fini+0x688>
    1048:	ldr	x2, [x24]
    104c:	mov	w3, w22
    1050:	mov	x1, #0x10                  	// #16
    1054:	add	x0, sp, #0x50
    1058:	bl	96cc <grub_snprintf>
    105c:	adrp	x0, 0 <_start>
    1060:	add	x4, sp, #0x50
    1064:	ldr	x3, [x25]
    1068:	mov	w1, #0x1a6                 	// #422
    106c:	ldr	x0, [x0]
    1070:	ldr	x2, [x26]
    1074:	bl	9570 <grub_real_dprintf>
    1078:	mov	x1, x20
    107c:	add	x0, sp, #0x50
    1080:	blr	x19
    1084:	cbz	w0, 1090 <grub_efidisk_fini+0x720>
    1088:	mov	w0, #0x1                   	// #1
    108c:	b	f40 <grub_efidisk_fini+0x5d0>
    1090:	add	w22, w22, #0x1
    1094:	ldr	x21, [x21, #32]
    1098:	b	fe0 <grub_efidisk_fini+0x670>
    109c:	nop
	...
    10d8:	stp	x29, x30, [sp, #-32]!
    10dc:	mov	x3, #0x0                   	// #0
    10e0:	mov	x29, sp
    10e4:	str	x19, [sp, #16]
    10e8:	mov	x19, x2
    10ec:	mov	x2, x1
    10f0:	cbnz	x2, 1144 <grub_efidisk_fini+0x7d4>
    10f4:	ldr	x4, [x19, #8]
    10f8:	ldr	w0, [x0, #24]
    10fc:	ldr	x2, [x4, #8]
    1100:	sub	w0, w0, #0x9
    1104:	lsl	x2, x2, x0
    1108:	cmp	x2, x3
    110c:	b.ne	1154 <grub_efidisk_fini+0x7e4>  // b.any
    1110:	ldr	x2, [x4, #16]
    1114:	ldr	x3, [x1, #16]
    1118:	lsl	x2, x2, x0
    111c:	mov	w0, #0x0                   	// #0
    1120:	cmp	x2, x3
    1124:	b.ne	1138 <grub_efidisk_fini+0x7c8>  // b.any
    1128:	mov	x0, x1
    112c:	bl	9f80 <grub_partition_get_name>
    1130:	str	x0, [x19]
    1134:	mov	w0, #0x1                   	// #1
    1138:	ldr	x19, [sp, #16]
    113c:	ldp	x29, x30, [sp], #32
    1140:	ret
    1144:	ldr	x4, [x2, #8]
    1148:	ldr	x2, [x2, #40]
    114c:	add	x3, x3, x4
    1150:	b	10f0 <grub_efidisk_fini+0x780>
    1154:	mov	w0, #0x0                   	// #0
    1158:	b	1138 <grub_efidisk_fini+0x7c8>
    115c:	stp	x29, x30, [sp, #-48]!
    1160:	mov	x29, sp
    1164:	stp	x19, x20, [sp, #16]
    1168:	mov	x19, x0
    116c:	str	x21, [sp, #32]
    1170:	mov	x21, x1
    1174:	ldr	x0, [x19]
    1178:	cbz	x0, 11bc <grub_efidisk_fini+0x84c>
    117c:	ldr	x0, [x0, #8]
    1180:	bl	2588 <grub_efi_find_last_device_path>
    1184:	mov	x20, x0
    1188:	ldr	x0, [x21, #8]
    118c:	bl	2588 <grub_efi_find_last_device_path>
    1190:	mov	x1, x0
    1194:	mov	x0, x20
    1198:	bl	2eb0 <grub_efi_compare_device_paths>
    119c:	cbnz	w0, 11b4 <grub_efidisk_fini+0x844>
    11a0:	ldr	x0, [x19]
    11a4:	ldr	x1, [x21, #8]
    11a8:	ldr	x0, [x0, #8]
    11ac:	bl	2eb0 <grub_efi_compare_device_paths>
    11b0:	cbz	w0, 11cc <grub_efidisk_fini+0x85c>
    11b4:	cmp	w0, #0x0
    11b8:	b.le	11dc <grub_efidisk_fini+0x86c>
    11bc:	mov	x0, #0x28                  	// #40
    11c0:	bl	47f8 <grub_malloc>
    11c4:	mov	x20, x0
    11c8:	cbnz	x0, 11e8 <grub_efidisk_fini+0x878>
    11cc:	ldp	x19, x20, [sp, #16]
    11d0:	ldr	x21, [sp, #32]
    11d4:	ldp	x29, x30, [sp], #48
    11d8:	ret
    11dc:	ldr	x19, [x19]
    11e0:	add	x19, x19, #0x20
    11e4:	b	1174 <grub_efidisk_fini+0x804>
    11e8:	mov	x1, x21
    11ec:	mov	x2, #0x28                  	// #40
    11f0:	bl	84a4 <grub_memmove>
    11f4:	ldr	x0, [x19]
    11f8:	str	x0, [x20, #32]
    11fc:	str	x20, [x19]
    1200:	b	11cc <grub_efidisk_fini+0x85c>
    1204:	stp	x29, x30, [sp, #-80]!
    1208:	mov	x29, sp
    120c:	stp	x21, x22, [sp, #32]
    1210:	mov	w22, w4
    1214:	ldr	w21, [x0, #24]
    1218:	ldr	x0, [x0, #64]
    121c:	stp	x23, x24, [sp, #48]
    1220:	mov	x24, x1
    1224:	stp	x19, x20, [sp, #16]
    1228:	lsl	x21, x2, x21
    122c:	mov	x20, x3
    1230:	ldr	x23, [x0, #24]
    1234:	ldr	x0, [x23, #8]
    1238:	ldr	w1, [x0, #16]
    123c:	str	x25, [sp, #64]
    1240:	cmp	w1, #0x0
    1244:	csinc	w0, w1, wzr, ne  // ne = any
    1248:	sub	x25, x0, #0x1
    124c:	ands	x25, x3, x25
    1250:	b.eq	12d4 <grub_efidisk_fini+0x964>  // b.none
    1254:	mov	x1, x21
    1258:	bl	45d0 <grub_memalign>
    125c:	mov	x19, x0
    1260:	cbz	x0, 12e4 <grub_efidisk_fini+0x974>
    1264:	cbz	w22, 12dc <grub_efidisk_fini+0x96c>
    1268:	mov	x2, x21
    126c:	mov	x1, x20
    1270:	bl	84a4 <grub_memmove>
    1274:	ldr	x5, [x23, #32]
    1278:	mov	x4, x19
    127c:	ldr	x0, [x23, #8]
    1280:	mov	x3, x21
    1284:	mov	x2, x24
    1288:	ldr	w1, [x0]
    128c:	mov	x0, x23
    1290:	blr	x5
    1294:	mov	x23, x0
    1298:	cbz	x25, 12b8 <grub_efidisk_fini+0x948>
    129c:	cbnz	w22, 12b0 <grub_efidisk_fini+0x940>
    12a0:	mov	x2, x21
    12a4:	mov	x1, x19
    12a8:	mov	x0, x20
    12ac:	bl	84a4 <grub_memmove>
    12b0:	mov	x0, x19
    12b4:	bl	4844 <grub_free>
    12b8:	mov	x0, x23
    12bc:	ldp	x19, x20, [sp, #16]
    12c0:	ldp	x21, x22, [sp, #32]
    12c4:	ldp	x23, x24, [sp, #48]
    12c8:	ldr	x25, [sp, #64]
    12cc:	ldp	x29, x30, [sp], #80
    12d0:	ret
    12d4:	mov	x19, x3
    12d8:	cbnz	w4, 1274 <grub_efidisk_fini+0x904>
    12dc:	ldr	x5, [x23, #24]
    12e0:	b	1278 <grub_efidisk_fini+0x908>
    12e4:	mov	x23, #0x9                   	// #9
    12e8:	movk	x23, #0x8000, lsl #48
    12ec:	b	12b8 <grub_efidisk_fini+0x948>
    12f0:	stp	x29, x30, [sp, #-48]!
    12f4:	mov	x4, x2
    12f8:	mov	x5, x1
    12fc:	mov	x29, sp
    1300:	stp	x19, x20, [sp, #16]
    1304:	mov	x19, x0
    1308:	mov	x20, x1
    130c:	ldr	x6, [x0]
    1310:	adrp	x0, 0 <_start>
    1314:	stp	x21, x22, [sp, #32]
    1318:	mov	x22, x3
    131c:	mov	x21, x2
    1320:	ldr	x3, [x0]
    1324:	adrp	x0, 0 <_start>
    1328:	mov	w1, #0x251                 	// #593
    132c:	ldr	x2, [x0]
    1330:	adrp	x0, 0 <_start>
    1334:	ldr	x0, [x0]
    1338:	bl	9570 <grub_real_dprintf>
    133c:	mov	x1, x20
    1340:	mov	x3, x22
    1344:	mov	x2, x21
    1348:	mov	x0, x19
    134c:	mov	w4, #0x0                   	// #0
    1350:	bl	1204 <grub_efidisk_fini+0x894>
    1354:	mov	x1, #0xc                   	// #12
    1358:	movk	x1, #0x8000, lsl #48
    135c:	cmp	x0, x1
    1360:	b.ne	1384 <grub_efidisk_fini+0xa14>  // b.any
    1364:	adrp	x0, 0 <_start>
    1368:	ldr	x2, [x19]
    136c:	ldp	x19, x20, [sp, #16]
    1370:	ldp	x21, x22, [sp, #32]
    1374:	ldp	x29, x30, [sp], #48
    1378:	ldr	x1, [x0]
    137c:	mov	w0, #0xb                   	// #11
    1380:	b	7300 <grub_error>
    1384:	cbz	x0, 13ac <grub_efidisk_fini+0xa3c>
    1388:	mov	x2, x20
    138c:	adrp	x0, 0 <_start>
    1390:	ldr	x3, [x19]
    1394:	ldp	x19, x20, [sp, #16]
    1398:	ldp	x21, x22, [sp, #32]
    139c:	ldp	x29, x30, [sp], #48
    13a0:	ldr	x1, [x0]
    13a4:	mov	w0, #0xe                   	// #14
    13a8:	b	7300 <grub_error>
    13ac:	mov	w0, #0x0                   	// #0
    13b0:	ldp	x19, x20, [sp, #16]
    13b4:	ldp	x21, x22, [sp, #32]
    13b8:	ldp	x29, x30, [sp], #48
    13bc:	ret
	...
    13e8:	stp	x29, x30, [sp, #-48]!
    13ec:	mov	x4, x2
    13f0:	mov	x5, x1
    13f4:	mov	x29, sp
    13f8:	stp	x19, x20, [sp, #16]
    13fc:	mov	x19, x0
    1400:	mov	x20, x1
    1404:	ldr	x6, [x0]
    1408:	adrp	x0, 0 <_start>
    140c:	stp	x21, x22, [sp, #32]
    1410:	mov	x22, x3
    1414:	mov	x21, x2
    1418:	ldr	x3, [x0]
    141c:	adrp	x0, 0 <_start>
    1420:	mov	w1, #0x268                 	// #616
    1424:	ldr	x2, [x0]
    1428:	adrp	x0, 0 <_start>
    142c:	ldr	x0, [x0]
    1430:	bl	9570 <grub_real_dprintf>
    1434:	mov	x1, x20
    1438:	mov	x3, x22
    143c:	mov	x2, x21
    1440:	mov	x0, x19
    1444:	mov	w4, #0x1                   	// #1
    1448:	bl	1204 <grub_efidisk_fini+0x894>
    144c:	mov	x1, #0xc                   	// #12
    1450:	movk	x1, #0x8000, lsl #48
    1454:	cmp	x0, x1
    1458:	b.ne	147c <grub_efidisk_fini+0xb0c>  // b.any
    145c:	adrp	x0, 0 <_start>
    1460:	ldr	x2, [x19]
    1464:	ldp	x19, x20, [sp, #16]
    1468:	ldp	x21, x22, [sp, #32]
    146c:	ldp	x29, x30, [sp], #48
    1470:	ldr	x1, [x0]
    1474:	mov	w0, #0xb                   	// #11
    1478:	b	7300 <grub_error>
    147c:	cbz	x0, 14a4 <grub_efidisk_fini+0xb34>
    1480:	mov	x2, x20
    1484:	adrp	x0, 0 <_start>
    1488:	ldr	x3, [x19]
    148c:	ldp	x19, x20, [sp, #16]
    1490:	ldp	x21, x22, [sp, #32]
    1494:	ldp	x29, x30, [sp], #48
    1498:	ldr	x1, [x0]
    149c:	mov	w0, #0xf                   	// #15
    14a0:	b	7300 <grub_error>
    14a4:	mov	w0, #0x0                   	// #0
    14a8:	ldp	x19, x20, [sp, #16]
    14ac:	ldp	x21, x22, [sp, #32]
    14b0:	ldp	x29, x30, [sp], #48
    14b4:	ret
	...

00000000000014e0 <grub_efidisk_init>:
    14e0:	stp	x29, x30, [sp, #-96]!
    14e4:	adrp	x0, 0 <_start>
    14e8:	adrp	x1, 0 <_start>
    14ec:	mov	x29, sp
    14f0:	ldr	x0, [x0]
    14f4:	stp	x19, x20, [sp, #16]
    14f8:	ldr	x1, [x1]
    14fc:	stp	x21, x22, [sp, #32]
    1500:	stp	x23, x24, [sp, #48]
    1504:	stp	x25, x26, [sp, #64]
    1508:	str	x1, [x0]
    150c:	bl	c48 <grub_efidisk_fini+0x2d8>
    1510:	cbz	x0, 1670 <grub_efidisk_init+0x190>
    1514:	mov	x19, x0
    1518:	mov	x20, x0
    151c:	adrp	x23, 0 <_start>
    1520:	ldr	x0, [x20, #16]
    1524:	cbz	x0, 1578 <grub_efidisk_init+0x98>
    1528:	ldrb	w1, [x0]
    152c:	and	w1, w1, #0x7f
    1530:	cmp	w1, #0x4
    1534:	b.ne	1578 <grub_efidisk_init+0x98>  // b.any
    1538:	ldrb	w0, [x0, #1]
    153c:	cmp	w0, #0x1
    1540:	b.eq	1694 <grub_efidisk_init+0x1b4>  // b.none
    1544:	cmp	w0, #0x2
    1548:	b.ne	1578 <grub_efidisk_init+0x98>  // b.any
    154c:	mov	w22, #0x0                   	// #0
    1550:	mov	x1, x20
    1554:	mov	x0, x19
    1558:	bl	d80 <grub_efidisk_fini+0x410>
    155c:	mov	x21, x0
    1560:	cbz	x0, 1578 <grub_efidisk_init+0x98>
    1564:	mov	x1, x0
    1568:	mov	x0, x19
    156c:	bl	d80 <grub_efidisk_fini+0x410>
    1570:	cbz	x0, 169c <grub_efidisk_init+0x1bc>
    1574:	str	xzr, [x20, #16]
    1578:	ldr	x20, [x20, #32]
    157c:	cbnz	x20, 1520 <grub_efidisk_init+0x40>
    1580:	mov	x25, #0x85eb                	// #34283
    1584:	mov	x26, #0x8c8b                	// #35979
    1588:	movk	x25, #0x2b05, lsl #16
    158c:	movk	x26, #0x1be2, lsl #16
    1590:	mov	w22, #0x41d0                	// #16848
    1594:	mov	w23, #0x41d0                	// #16848
    1598:	mov	w24, #0x41d1                	// #16849
    159c:	movk	x25, #0xd8b8, lsl #32
    15a0:	movk	x26, #0xae01, lsl #32
    15a4:	mov	x20, x19
    15a8:	movk	w22, #0x604, lsl #16
    15ac:	movk	w23, #0x700, lsl #16
    15b0:	movk	w24, #0x701, lsl #16
    15b4:	movk	x25, #0x49a9, lsl #48
    15b8:	movk	x26, #0xb7f2, lsl #48
    15bc:	ldr	x21, [x20, #16]
    15c0:	cbz	x21, 1660 <grub_efidisk_init+0x180>
    15c4:	ldrb	w0, [x21]
    15c8:	and	w0, w0, #0x7f
    15cc:	cmp	w0, #0x4
    15d0:	b.ne	1614 <grub_efidisk_init+0x134>  // b.any
    15d4:	ldrb	w0, [x21, #1]
    15d8:	cmp	w0, #0x3
    15dc:	b.ne	1614 <grub_efidisk_init+0x134>  // b.any
    15e0:	stp	x25, x26, [sp, #80]
    15e4:	ldrh	w0, [x21, #2]
    15e8:	cmp	w0, #0x14
    15ec:	b.ne	1614 <grub_efidisk_init+0x134>  // b.any
    15f0:	add	x1, sp, #0x50
    15f4:	add	x0, x21, #0x4
    15f8:	mov	x2, #0x10                  	// #16
    15fc:	bl	8570 <grub_memcmp>
    1600:	cbnz	w0, 1614 <grub_efidisk_init+0x134>
    1604:	mov	x1, x20
    1608:	mov	x0, x19
    160c:	bl	d80 <grub_efidisk_fini+0x410>
    1610:	cbnz	x0, 1660 <grub_efidisk_init+0x180>
    1614:	ldr	x0, [x20, #24]
    1618:	ldr	x2, [x0, #8]
    161c:	ldrb	w0, [x21]
    1620:	and	w0, w0, #0x7f
    1624:	cmp	w0, #0x2
    1628:	adrp	x0, 0 <_start>
    162c:	ldr	x0, [x0]
    1630:	b.ne	16c8 <grub_efidisk_init+0x1e8>  // b.any
    1634:	ldrb	w1, [x21, #1]
    1638:	cmp	w1, #0x1
    163c:	b.ne	16c8 <grub_efidisk_init+0x1e8>  // b.any
    1640:	ldr	w1, [x21, #4]
    1644:	cmp	w1, w22
    1648:	ccmp	w1, w23, #0x4, ne  // ne = any
    164c:	b.eq	1658 <grub_efidisk_init+0x178>  // b.none
    1650:	cmp	w1, w24
    1654:	b.ne	16c8 <grub_efidisk_init+0x1e8>  // b.any
    1658:	mov	x1, x20
    165c:	bl	115c <grub_efidisk_fini+0x7ec>
    1660:	ldr	x20, [x20, #32]
    1664:	cbnz	x20, 15bc <grub_efidisk_init+0xdc>
    1668:	mov	x0, x19
    166c:	bl	940 <grub_arm64_dl_get_tramp_got_size+0x108>
    1670:	adrp	x0, 0 <_start>
    1674:	ldr	x0, [x0]
    1678:	bl	59c8 <grub_disk_dev_register>
    167c:	ldp	x19, x20, [sp, #16]
    1680:	ldp	x21, x22, [sp, #32]
    1684:	ldp	x23, x24, [sp, #48]
    1688:	ldp	x25, x26, [sp, #64]
    168c:	ldp	x29, x30, [sp], #96
    1690:	ret
    1694:	mov	w22, w0
    1698:	b	1550 <grub_efidisk_init+0x70>
    169c:	ldr	x0, [x21, #16]
    16a0:	cbz	x0, 1574 <grub_efidisk_init+0x94>
    16a4:	ldr	x0, [x23]
    16a8:	mov	x1, x21
    16ac:	cbz	w22, 16c0 <grub_efidisk_init+0x1e0>
    16b0:	add	x0, x0, #0x8
    16b4:	bl	115c <grub_efidisk_fini+0x7ec>
    16b8:	str	xzr, [x21, #16]
    16bc:	b	1574 <grub_efidisk_init+0x94>
    16c0:	add	x0, x0, #0x10
    16c4:	b	16b4 <grub_efidisk_init+0x1d4>
    16c8:	ldrb	w1, [x2, #7]
    16cc:	cbz	w1, 16e8 <grub_efidisk_init+0x208>
    16d0:	ldr	w1, [x2, #12]
    16d4:	cmp	w1, #0x200
    16d8:	b.ls	16e8 <grub_efidisk_init+0x208>  // b.plast
    16dc:	mov	x1, x20
    16e0:	add	x0, x0, #0x10
    16e4:	b	165c <grub_efidisk_init+0x17c>
    16e8:	mov	x1, x20
    16ec:	add	x0, x0, #0x8
    16f0:	b	165c <grub_efidisk_init+0x17c>
    16f4:	nop
	...

0000000000001718 <grub_efidisk_get_device_handle>:
    1718:	stp	x29, x30, [sp, #-80]!
    171c:	mov	x29, sp
    1720:	stp	x19, x20, [sp, #16]
    1724:	mov	x20, x0
    1728:	ldr	x0, [x0, #8]
    172c:	stp	x21, x22, [sp, #32]
    1730:	stp	x23, x24, [sp, #48]
    1734:	ldr	w0, [x0, #8]
    1738:	str	x25, [sp, #64]
    173c:	cmp	w0, #0x3
    1740:	b.ne	1864 <grub_efidisk_get_device_handle+0x14c>  // b.any
    1744:	ldr	x0, [x20]
    1748:	ldr	x23, [x20, #64]
    174c:	ldrb	w0, [x0]
    1750:	cmp	w0, #0x66
    1754:	b.eq	1768 <grub_efidisk_get_device_handle+0x50>  // b.none
    1758:	cmp	w0, #0x68
    175c:	b.eq	1784 <grub_efidisk_get_device_handle+0x6c>  // b.none
    1760:	cmp	w0, #0x63
    1764:	b.ne	1864 <grub_efidisk_get_device_handle+0x14c>  // b.any
    1768:	ldr	x0, [x23]
    176c:	ldp	x19, x20, [sp, #16]
    1770:	ldp	x21, x22, [sp, #32]
    1774:	ldp	x23, x24, [sp, #48]
    1778:	ldr	x25, [sp, #64]
    177c:	ldp	x29, x30, [sp], #80
    1780:	ret
    1784:	ldr	x0, [x20, #40]
    1788:	cbz	x0, 1768 <grub_efidisk_get_device_handle+0x50>
    178c:	bl	c48 <grub_efidisk_fini+0x2d8>
    1790:	mov	w24, #0xff7f                	// #65407
    1794:	mov	x22, x0
    1798:	mov	x19, x0
    179c:	movk	w24, #0x4, lsl #16
    17a0:	cbz	x19, 183c <grub_efidisk_get_device_handle+0x124>
    17a4:	ldr	x0, [x19, #8]
    17a8:	bl	25e4 <grub_efi_duplicate_device_path>
    17ac:	mov	x21, x0
    17b0:	cbz	x0, 185c <grub_efidisk_get_device_handle+0x144>
    17b4:	bl	2588 <grub_efi_find_last_device_path>
    17b8:	cbz	x0, 185c <grub_efidisk_get_device_handle+0x144>
    17bc:	str	w24, [x0]
    17c0:	mov	x0, x21
    17c4:	ldr	x1, [x23, #8]
    17c8:	bl	2eb0 <grub_efi_compare_device_paths>
    17cc:	mov	w25, w0
    17d0:	mov	x0, x21
    17d4:	bl	4844 <grub_free>
    17d8:	cbnz	w25, 185c <grub_efidisk_get_device_handle+0x144>
    17dc:	ldr	x1, [x19, #16]
    17e0:	ldrb	w0, [x1]
    17e4:	and	w0, w0, #0x7f
    17e8:	cmp	w0, #0x4
    17ec:	b.ne	185c <grub_efidisk_get_device_handle+0x144>  // b.any
    17f0:	ldrb	w0, [x1, #1]
    17f4:	cmp	w0, #0x1
    17f8:	b.ne	185c <grub_efidisk_get_device_handle+0x144>  // b.any
    17fc:	ldr	x4, [x20, #40]
    1800:	mov	x2, #0x0                   	// #0
    1804:	mov	x0, x4
    1808:	cbnz	x0, 184c <grub_efidisk_get_device_handle+0x134>
    180c:	ldr	w0, [x20, #24]
    1810:	ldr	x3, [x1, #8]
    1814:	sub	w0, w0, #0x9
    1818:	lsl	x3, x3, x0
    181c:	cmp	x3, x2
    1820:	b.ne	185c <grub_efidisk_get_device_handle+0x144>  // b.any
    1824:	ldr	x1, [x1, #16]
    1828:	lsl	x0, x1, x0
    182c:	ldr	x1, [x4, #16]
    1830:	cmp	x0, x1
    1834:	b.ne	185c <grub_efidisk_get_device_handle+0x144>  // b.any
    1838:	ldr	x19, [x19]
    183c:	mov	x0, x22
    1840:	bl	940 <grub_arm64_dl_get_tramp_got_size+0x108>
    1844:	mov	x0, x19
    1848:	b	176c <grub_efidisk_get_device_handle+0x54>
    184c:	ldr	x3, [x0, #8]
    1850:	ldr	x0, [x0, #40]
    1854:	add	x2, x2, x3
    1858:	b	1808 <grub_efidisk_get_device_handle+0xf0>
    185c:	ldr	x19, [x19, #32]
    1860:	b	17a0 <grub_efidisk_get_device_handle+0x88>
    1864:	mov	x0, #0x0                   	// #0
    1868:	b	176c <grub_efidisk_get_device_handle+0x54>

000000000000186c <grub_efidisk_get_device_name>:
    186c:	stp	x29, x30, [sp, #-80]!
    1870:	mov	x29, sp
    1874:	stp	x19, x20, [sp, #16]
    1878:	str	x21, [sp, #32]
    187c:	bl	2568 <grub_efi_get_device_path>
    1880:	cbnz	x0, 189c <grub_efidisk_get_device_name+0x30>
    1884:	mov	x19, #0x0                   	// #0
    1888:	mov	x0, x19
    188c:	ldp	x19, x20, [sp, #16]
    1890:	ldr	x21, [sp, #32]
    1894:	ldp	x29, x30, [sp], #80
    1898:	ret
    189c:	mov	x20, x0
    18a0:	bl	2588 <grub_efi_find_last_device_path>
    18a4:	mov	x19, x0
    18a8:	cbz	x0, 1884 <grub_efidisk_get_device_name+0x18>
    18ac:	ldrb	w0, [x0]
    18b0:	and	w0, w0, #0x7f
    18b4:	cmp	w0, #0x4
    18b8:	b.ne	19ec <grub_efidisk_get_device_name+0x180>  // b.any
    18bc:	ldrb	w0, [x19, #1]
    18c0:	sub	w0, w0, #0x1
    18c4:	and	w0, w0, #0xff
    18c8:	cmp	w0, #0x1
    18cc:	b.hi	19ec <grub_efidisk_get_device_name+0x180>  // b.pmore
    18d0:	mov	x0, x20
    18d4:	bl	25e4 <grub_efi_duplicate_device_path>
    18d8:	mov	x21, x0
    18dc:	cbz	x0, 1884 <grub_efidisk_get_device_name+0x18>
    18e0:	mov	w20, #0xff7f                	// #65407
    18e4:	movk	w20, #0x4, lsl #16
    18e8:	mov	x0, x21
    18ec:	bl	2588 <grub_efi_find_last_device_path>
    18f0:	cbz	x0, 1920 <grub_efidisk_get_device_name+0xb4>
    18f4:	ldrb	w1, [x0]
    18f8:	and	w1, w1, #0x7f
    18fc:	cmp	w1, #0x4
    1900:	b.ne	1920 <grub_efidisk_get_device_name+0xb4>  // b.any
    1904:	ldrb	w1, [x0, #1]
    1908:	sub	w1, w1, #0x1
    190c:	and	w1, w1, #0xff
    1910:	cmp	w1, #0x1
    1914:	b.hi	1920 <grub_efidisk_get_device_name+0xb4>  // b.pmore
    1918:	str	w20, [x0]
    191c:	b	18e8 <grub_efidisk_get_device_name+0x7c>
    1920:	add	x1, sp, #0x30
    1924:	mov	x0, x21
    1928:	bl	e80 <grub_efidisk_fini+0x510>
    192c:	cbnz	w0, 193c <grub_efidisk_get_device_name+0xd0>
    1930:	mov	x0, x21
    1934:	bl	4844 <grub_free>
    1938:	b	1884 <grub_efidisk_get_device_name+0x18>
    193c:	add	x0, sp, #0x30
    1940:	bl	5ad0 <grub_disk_open>
    1944:	mov	x20, x0
    1948:	mov	x0, x21
    194c:	bl	4844 <grub_free>
    1950:	cbz	x20, 1884 <grub_efidisk_get_device_name+0x18>
    1954:	ldr	x0, [x19, #8]
    1958:	stp	xzr, x19, [sp, #64]
    195c:	cbnz	x0, 1998 <grub_efidisk_get_device_name+0x12c>
    1960:	ldr	w0, [x20, #24]
    1964:	ldr	x19, [x19, #16]
    1968:	sub	w0, w0, #0x9
    196c:	lsl	x19, x19, x0
    1970:	mov	x0, x20
    1974:	bl	6050 <grub_disk_get_size>
    1978:	cmp	x19, x0
    197c:	b.ne	1998 <grub_efidisk_get_device_name+0x12c>  // b.any
    1980:	ldr	x0, [x20]
    1984:	bl	8818 <grub_strdup>
    1988:	mov	x19, x0
    198c:	mov	x0, x20
    1990:	bl	5a20 <grub_disk_close>
    1994:	b	1888 <grub_efidisk_get_device_name+0x1c>
    1998:	adrp	x0, 0 <_start>
    199c:	add	x2, sp, #0x40
    19a0:	ldr	x1, [x0]
    19a4:	mov	x0, x20
    19a8:	bl	9ef0 <grub_partition_iterate>
    19ac:	ldr	x2, [sp, #64]
    19b0:	cbnz	x2, 19cc <grub_efidisk_get_device_name+0x160>
    19b4:	mov	x0, x20
    19b8:	bl	5a20 <grub_disk_close>
    19bc:	add	x0, sp, #0x30
    19c0:	bl	8818 <grub_strdup>
    19c4:	mov	x19, x0
    19c8:	b	1888 <grub_efidisk_get_device_name+0x1c>
    19cc:	adrp	x0, 0 <_start>
    19d0:	ldr	x1, [x20]
    19d4:	ldr	x0, [x0]
    19d8:	bl	97a8 <grub_xasprintf>
    19dc:	mov	x19, x0
    19e0:	ldr	x0, [sp, #64]
    19e4:	bl	4844 <grub_free>
    19e8:	b	198c <grub_efidisk_get_device_name+0x120>
    19ec:	add	x1, sp, #0x30
    19f0:	mov	x0, x20
    19f4:	bl	e80 <grub_efidisk_fini+0x510>
    19f8:	cbnz	w0, 19bc <grub_efidisk_get_device_name+0x150>
    19fc:	b	1884 <grub_efidisk_get_device_name+0x18>
	...
    1a10:	mov	w4, #0x0                   	// #0
    1a14:	mov	w7, #0xffff2800            	// #-55296
    1a18:	mov	w8, #0xffff2400            	// #-56320
    1a1c:	mov	w9, #0x3f                  	// #63
    1a20:	mov	w10, #0x2400                	// #9216
    1a24:	sub	x2, x2, #0x1
    1a28:	cmn	x2, #0x1
    1a2c:	b.ne	1a34 <grub_efidisk_get_device_name+0x1c8>  // b.any
    1a30:	ret
    1a34:	mov	x6, x1
    1a38:	ldrh	w3, [x6], #2
    1a3c:	cbz	w4, 1aa4 <grub_efidisk_get_device_name+0x238>
    1a40:	add	w5, w3, w8
    1a44:	cmp	w5, #0x3ff
    1a48:	b.hi	1a98 <grub_efidisk_get_device_name+0x22c>  // b.pmore
    1a4c:	add	w4, w4, w7
    1a50:	add	x0, x0, #0x4
    1a54:	add	w3, w3, w4, lsl #10
    1a58:	add	w3, w3, w10
    1a5c:	lsr	w1, w3, #18
    1a60:	orr	w1, w1, #0xfffffff0
    1a64:	sturb	w1, [x0, #-4]
    1a68:	ubfx	x1, x3, #12, #6
    1a6c:	orr	w1, w1, #0xffffff80
    1a70:	sturb	w1, [x0, #-3]
    1a74:	ubfx	x1, x3, #6, #6
    1a78:	and	w3, w3, #0x3f
    1a7c:	orr	w1, w1, #0xffffff80
    1a80:	orr	w3, w3, #0xffffff80
    1a84:	sturb	w1, [x0, #-2]
    1a88:	sturb	w3, [x0, #-1]
    1a8c:	mov	w4, #0x0                   	// #0
    1a90:	mov	x1, x6
    1a94:	b	1a24 <grub_efidisk_get_device_name+0x1b8>
    1a98:	mov	x6, x1
    1a9c:	strb	w9, [x0], #1
    1aa0:	b	1a8c <grub_efidisk_get_device_name+0x220>
    1aa4:	cmp	w3, #0x7f
    1aa8:	b.hi	1ab4 <grub_efidisk_get_device_name+0x248>  // b.pmore
    1aac:	strb	w3, [x0], #1
    1ab0:	b	1a90 <grub_efidisk_get_device_name+0x224>
    1ab4:	cmp	w3, #0x7ff
    1ab8:	b.hi	1ae0 <grub_efidisk_get_device_name+0x274>  // b.pmore
    1abc:	mov	x1, x0
    1ac0:	lsr	w5, w3, #6
    1ac4:	orr	w5, w5, #0xffffffc0
    1ac8:	and	w3, w3, #0x3f
    1acc:	orr	w3, w3, #0xffffff80
    1ad0:	strb	w5, [x1], #2
    1ad4:	strb	w3, [x0, #1]
    1ad8:	mov	x0, x1
    1adc:	b	1a90 <grub_efidisk_get_device_name+0x224>
    1ae0:	add	w1, w3, w7
    1ae4:	cmp	w1, #0x3ff
    1ae8:	b.ls	1b2c <grub_efidisk_get_device_name+0x2c0>  // b.plast
    1aec:	add	w1, w3, w8
    1af0:	cmp	w1, #0x3ff
    1af4:	b.hi	1b00 <grub_efidisk_get_device_name+0x294>  // b.pmore
    1af8:	strb	w9, [x0], #1
    1afc:	b	1a90 <grub_efidisk_get_device_name+0x224>
    1b00:	lsr	w1, w3, #12
    1b04:	add	x0, x0, #0x3
    1b08:	orr	w1, w1, #0xffffffe0
    1b0c:	sturb	w1, [x0, #-3]
    1b10:	ubfx	x1, x3, #6, #6
    1b14:	and	w3, w3, #0x3f
    1b18:	orr	w1, w1, #0xffffff80
    1b1c:	orr	w3, w3, #0xffffff80
    1b20:	sturb	w1, [x0, #-2]
    1b24:	sturb	w3, [x0, #-1]
    1b28:	b	1a90 <grub_efidisk_get_device_name+0x224>
    1b2c:	mov	w4, w3
    1b30:	b	1a90 <grub_efidisk_get_device_name+0x224>
    1b34:	sub	sp, sp, #0x60
    1b38:	stp	x29, x30, [sp, #48]
    1b3c:	add	x29, sp, #0x30
    1b40:	stp	x21, x22, [sp, #80]
    1b44:	ldrh	w21, [x1, #2]
    1b48:	stp	x19, x20, [sp, #64]
    1b4c:	mov	x19, x1
    1b50:	sub	w21, w21, #0x14
    1b54:	str	w21, [sp, #40]
    1b58:	ldrb	w1, [x1, #19]
    1b5c:	str	w1, [sp, #32]
    1b60:	ldrb	w1, [x19, #18]
    1b64:	str	w1, [sp, #24]
    1b68:	ldrb	w1, [x19, #17]
    1b6c:	str	w1, [sp, #16]
    1b70:	ldrb	w1, [x19, #16]
    1b74:	str	w1, [sp, #8]
    1b78:	ldrb	w1, [x19, #15]
    1b7c:	str	w1, [sp]
    1b80:	mov	x1, x0
    1b84:	adrp	x0, 0 <_start>
    1b88:	ldrb	w7, [x19, #14]
    1b8c:	ldrb	w6, [x19, #13]
    1b90:	ldrb	w5, [x19, #12]
    1b94:	ldrh	w4, [x19, #10]
    1b98:	ldrh	w3, [x19, #8]
    1b9c:	ldr	x0, [x0]
    1ba0:	ldr	w2, [x19, #4]
    1ba4:	bl	94b0 <grub_err_printf>
    1ba8:	ldrh	w0, [x19, #2]
    1bac:	cmp	w0, #0x14
    1bb0:	b.hi	1bec <grub_efidisk_get_device_name+0x380>  // b.pmore
    1bb4:	adrp	x0, 0 <_start>
    1bb8:	ldp	x29, x30, [sp, #48]
    1bbc:	ldp	x19, x20, [sp, #64]
    1bc0:	ldp	x21, x22, [sp, #80]
    1bc4:	add	sp, sp, #0x60
    1bc8:	ldr	x0, [x0]
    1bcc:	b	94b0 <grub_err_printf>
    1bd0:	ldrb	w1, [x19, x20]
    1bd4:	add	x20, x20, #0x1
    1bd8:	ldr	x0, [x22]
    1bdc:	bl	94b0 <grub_err_printf>
    1be0:	cmp	w21, w20
    1be4:	b.hi	1bd0 <grub_efidisk_get_device_name+0x364>  // b.pmore
    1be8:	b	1bb4 <grub_efidisk_get_device_name+0x348>
    1bec:	add	x19, x19, #0x14
    1bf0:	mov	x20, #0x0                   	// #0
    1bf4:	adrp	x22, 0 <_start>
    1bf8:	b	1be0 <grub_efidisk_get_device_name+0x374>
    1bfc:	nop
	...
    1c18:	mov	x5, x0
    1c1c:	mov	w4, #0x0                   	// #0
    1c20:	mov	w7, #0x0                   	// #0
    1c24:	mov	w9, #0xffff                	// #65535
    1c28:	mov	w10, #0xffffd800            	// #-10240
    1c2c:	mov	w11, #0xffffdc00            	// #-9216
    1c30:	cmp	x3, #0x0
    1c34:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    1c38:	b.eq	1cb4 <grub_efidisk_get_device_name+0x448>  // b.none
    1c3c:	cmn	x3, #0x1
    1c40:	b.eq	1c48 <grub_efidisk_get_device_name+0x3dc>  // b.none
    1c44:	sub	x3, x3, #0x1
    1c48:	mov	x8, x2
    1c4c:	ldrb	w6, [x8], #1
    1c50:	cbz	w7, 1c94 <grub_efidisk_get_device_name+0x428>
    1c54:	and	w12, w6, #0xc0
    1c58:	cmp	w12, #0x80
    1c5c:	b.ne	1d18 <grub_efidisk_get_device_name+0x4ac>  // b.any
    1c60:	and	w6, w6, #0x3f
    1c64:	sub	w7, w7, #0x1
    1c68:	orr	w4, w6, w4, lsl #6
    1c6c:	cmp	w7, #0x1
    1c70:	b.ne	1c84 <grub_efidisk_get_device_name+0x418>  // b.any
    1c74:	cmp	w4, #0x1f
    1c78:	b.ls	1d10 <grub_efidisk_get_device_name+0x4a4>  // b.plast
    1c7c:	mov	x2, x8
    1c80:	b	1c30 <grub_efidisk_get_device_name+0x3c4>
    1c84:	cmp	w7, #0x2
    1c88:	b.ne	1d28 <grub_efidisk_get_device_name+0x4bc>  // b.any
    1c8c:	cmp	w4, #0xf
    1c90:	b	1c78 <grub_efidisk_get_device_name+0x40c>
    1c94:	tbnz	w6, #7, 1cc0 <grub_efidisk_get_device_name+0x454>
    1c98:	mov	w4, w6
    1c9c:	cbz	w4, 1cb4 <grub_efidisk_get_device_name+0x448>
    1ca0:	mov	x2, x8
    1ca4:	cmp	x1, #0x1
    1ca8:	b.hi	1d40 <grub_efidisk_get_device_name+0x4d4>  // b.pmore
    1cac:	cmp	w4, w9
    1cb0:	b.ls	1d1c <grub_efidisk_get_device_name+0x4b0>  // b.plast
    1cb4:	sub	x0, x5, x0
    1cb8:	asr	x0, x0, #1
    1cbc:	ret
    1cc0:	and	w2, w6, #0xe0
    1cc4:	cmp	w2, #0xc0
    1cc8:	b.ne	1ce0 <grub_efidisk_get_device_name+0x474>  // b.any
    1ccc:	tst	w6, #0x1e
    1cd0:	b.eq	1d30 <grub_efidisk_get_device_name+0x4c4>  // b.none
    1cd4:	and	w4, w6, #0x1f
    1cd8:	mov	w7, #0x1                   	// #1
    1cdc:	b	1c7c <grub_efidisk_get_device_name+0x410>
    1ce0:	and	w2, w6, #0xf0
    1ce4:	cmp	w2, #0xe0
    1ce8:	b.ne	1cf8 <grub_efidisk_get_device_name+0x48c>  // b.any
    1cec:	and	w4, w6, #0xf
    1cf0:	mov	w7, #0x2                   	// #2
    1cf4:	b	1c7c <grub_efidisk_get_device_name+0x410>
    1cf8:	and	w2, w6, #0xf8
    1cfc:	cmp	w2, #0xf0
    1d00:	b.ne	1d30 <grub_efidisk_get_device_name+0x4c4>  // b.any
    1d04:	and	w4, w6, #0x7
    1d08:	mov	w7, #0x3                   	// #3
    1d0c:	b	1c7c <grub_efidisk_get_device_name+0x410>
    1d10:	mov	w4, #0x3f                  	// #63
    1d14:	b	1ca4 <grub_efidisk_get_device_name+0x438>
    1d18:	mov	w4, #0x3f                  	// #63
    1d1c:	sub	x1, x1, #0x1
    1d20:	strh	w4, [x5], #2
    1d24:	b	1d74 <grub_efidisk_get_device_name+0x508>
    1d28:	cbz	w7, 1c9c <grub_efidisk_get_device_name+0x430>
    1d2c:	b	1cd8 <grub_efidisk_get_device_name+0x46c>
    1d30:	mov	x2, x8
    1d34:	cmp	x1, #0x1
    1d38:	b.ls	1d18 <grub_efidisk_get_device_name+0x4ac>  // b.plast
    1d3c:	mov	w4, #0x3f                  	// #63
    1d40:	and	w6, w4, #0xffff
    1d44:	cmp	w4, w9
    1d48:	b.ls	1d1c <grub_efidisk_get_device_name+0x4b0>  // b.plast
    1d4c:	mov	x8, x5
    1d50:	sub	w7, w4, #0x10, lsl #12
    1d54:	and	w6, w6, #0x3ff
    1d58:	sub	x1, x1, #0x2
    1d5c:	ubfx	x7, x7, #10, #10
    1d60:	orr	w6, w6, w11
    1d64:	orr	w7, w7, w10
    1d68:	strh	w7, [x8], #4
    1d6c:	strh	w6, [x5, #2]
    1d70:	mov	x5, x8
    1d74:	mov	x8, x2
    1d78:	mov	w7, #0x0                   	// #0
    1d7c:	b	1c7c <grub_efidisk_get_device_name+0x410>

0000000000001d80 <grub_efi_locate_protocol>:
    1d80:	stp	x29, x30, [sp, #-32]!
    1d84:	adrp	x2, 0 <_start>
    1d88:	mov	x29, sp
    1d8c:	ldr	x2, [x2]
    1d90:	ldr	x2, [x2]
    1d94:	ldr	x2, [x2, #96]
    1d98:	ldr	x3, [x2, #320]
    1d9c:	add	x2, sp, #0x18
    1da0:	blr	x3
    1da4:	cmp	x0, #0x0
    1da8:	ldr	x0, [sp, #24]
    1dac:	ldp	x29, x30, [sp], #32
    1db0:	csel	x0, x0, xzr, eq  // eq = none
    1db4:	ret
	...

0000000000001dc0 <grub_efi_locate_handle>:
    1dc0:	stp	x29, x30, [sp, #-80]!
    1dc4:	mov	x29, sp
    1dc8:	stp	x19, x20, [sp, #16]
    1dcc:	mov	w20, w0
    1dd0:	mov	x0, #0x40                  	// #64
    1dd4:	stp	x21, x22, [sp, #32]
    1dd8:	mov	x21, x1
    1ddc:	mov	x22, x2
    1de0:	stp	x23, x24, [sp, #48]
    1de4:	mov	x23, x3
    1de8:	str	x0, [sp, #72]
    1dec:	bl	47f8 <grub_malloc>
    1df0:	cbnz	x0, 1e10 <grub_efi_locate_handle+0x50>
    1df4:	mov	x19, #0x0                   	// #0
    1df8:	mov	x0, x19
    1dfc:	ldp	x19, x20, [sp, #16]
    1e00:	ldp	x21, x22, [sp, #32]
    1e04:	ldp	x23, x24, [sp, #48]
    1e08:	ldp	x29, x30, [sp], #80
    1e0c:	ret
    1e10:	mov	x19, x0
    1e14:	adrp	x0, 0 <_start>
    1e18:	mov	x1, x21
    1e1c:	mov	x4, x19
    1e20:	ldr	x0, [x0]
    1e24:	add	x3, sp, #0x48
    1e28:	mov	x2, x22
    1e2c:	ldr	x0, [x0]
    1e30:	ldr	x24, [x0, #96]
    1e34:	mov	w0, w20
    1e38:	ldr	x5, [x24, #176]
    1e3c:	blr	x5
    1e40:	mov	x1, #0x5                   	// #5
    1e44:	movk	x1, #0x8000, lsl #48
    1e48:	cmp	x0, x1
    1e4c:	b.ne	1e84 <grub_efi_locate_handle+0xc4>  // b.any
    1e50:	mov	x0, x19
    1e54:	bl	4844 <grub_free>
    1e58:	ldr	x0, [sp, #72]
    1e5c:	bl	47f8 <grub_malloc>
    1e60:	mov	x19, x0
    1e64:	cbz	x0, 1df4 <grub_efi_locate_handle+0x34>
    1e68:	ldr	x5, [x24, #176]
    1e6c:	mov	x4, x0
    1e70:	add	x3, sp, #0x48
    1e74:	mov	x2, x22
    1e78:	mov	x1, x21
    1e7c:	mov	w0, w20
    1e80:	blr	x5
    1e84:	cbz	x0, 1e94 <grub_efi_locate_handle+0xd4>
    1e88:	mov	x0, x19
    1e8c:	bl	4844 <grub_free>
    1e90:	b	1df4 <grub_efi_locate_handle+0x34>
    1e94:	ldr	x0, [sp, #72]
    1e98:	lsr	x0, x0, #3
    1e9c:	str	x0, [x23]
    1ea0:	b	1df8 <grub_efi_locate_handle+0x38>
    1ea4:	nop
	...

0000000000001eb0 <grub_efi_open_protocol>:
    1eb0:	stp	x29, x30, [sp, #-32]!
    1eb4:	adrp	x4, 0 <_start>
    1eb8:	adrp	x3, 0 <_start>
    1ebc:	mov	x29, sp
    1ec0:	ldr	x4, [x4]
    1ec4:	mov	w5, w2
    1ec8:	ldr	x3, [x3]
    1ecc:	add	x2, sp, #0x18
    1ed0:	ldr	x4, [x4]
    1ed4:	ldr	x3, [x3]
    1ed8:	ldr	x4, [x4, #96]
    1edc:	ldr	x6, [x4, #280]
    1ee0:	mov	x4, #0x0                   	// #0
    1ee4:	blr	x6
    1ee8:	cmp	x0, #0x0
    1eec:	ldr	x0, [sp, #24]
    1ef0:	ldp	x29, x30, [sp], #32
    1ef4:	csel	x0, x0, xzr, eq  // eq = none
    1ef8:	ret
    1efc:	nop
	...

0000000000001f10 <grub_efi_set_text_mode>:
    1f10:	stp	x29, x30, [sp, #-48]!
    1f14:	mov	x1, #0x0                   	// #0
    1f18:	mov	x29, sp
    1f1c:	stp	x19, x20, [sp, #16]
    1f20:	mov	w20, w0
    1f24:	adrp	x0, 0 <_start>
    1f28:	ldr	x0, [x0]
    1f2c:	bl	1d80 <grub_efi_locate_protocol>
    1f30:	cbnz	x0, 1f44 <grub_efi_set_text_mode+0x34>
    1f34:	mov	w0, #0x1                   	// #1
    1f38:	ldp	x19, x20, [sp, #16]
    1f3c:	ldp	x29, x30, [sp], #48
    1f40:	ret
    1f44:	ldr	x4, [x0]
    1f48:	mov	x19, x0
    1f4c:	add	x1, sp, #0x2c
    1f50:	mov	x3, #0x0                   	// #0
    1f54:	mov	x2, #0x0                   	// #0
    1f58:	blr	x4
    1f5c:	cbnz	x0, 1f8c <grub_efi_set_text_mode+0x7c>
    1f60:	cmp	w20, #0x0
    1f64:	ldr	w0, [sp, #44]
    1f68:	cset	w1, eq  // eq = none
    1f6c:	cmp	w0, w1
    1f70:	b.eq	1f34 <grub_efi_set_text_mode+0x24>  // b.none
    1f74:	ldr	x2, [x19, #8]
    1f78:	mov	x0, x19
    1f7c:	blr	x2
    1f80:	cmp	x0, #0x0
    1f84:	cset	w0, eq  // eq = none
    1f88:	b	1f38 <grub_efi_set_text_mode+0x28>
    1f8c:	mov	w0, #0x0                   	// #0
    1f90:	b	1f38 <grub_efi_set_text_mode+0x28>
    1f94:	nop
	...

0000000000001fa0 <grub_efi_stall>:
    1fa0:	adrp	x1, 0 <_start>
    1fa4:	ldr	x1, [x1]
    1fa8:	ldr	x1, [x1]
    1fac:	ldr	x1, [x1, #96]
    1fb0:	ldr	x1, [x1, #248]
    1fb4:	mov	x16, x1
    1fb8:	br	x16
    1fbc:	nop
	...

0000000000001fc8 <grub_efi_get_loaded_image>:
    1fc8:	adrp	x1, 0 <_start>
    1fcc:	mov	w2, #0x2                   	// #2
    1fd0:	ldr	x1, [x1]
    1fd4:	add	x1, x1, #0x10
    1fd8:	b	1eb0 <grub_efi_open_protocol>
    1fdc:	nop
	...

0000000000001fe8 <grub_reboot>:
    1fe8:	stp	x29, x30, [sp, #-16]!
    1fec:	mov	w0, #0x1                   	// #1
    1ff0:	mov	x29, sp
    1ff4:	bl	98 <grub_machine_fini>
    1ff8:	adrp	x0, 0 <_start>
    1ffc:	mov	x3, #0x0                   	// #0
    2000:	mov	x2, #0x0                   	// #0
    2004:	mov	x1, #0x0                   	// #0
    2008:	ldr	x0, [x0]
    200c:	ldr	x0, [x0]
    2010:	ldr	x0, [x0, #88]
    2014:	ldr	x4, [x0, #104]
    2018:	mov	w0, #0x0                   	// #0
    201c:	blr	x4
    2020:	b	2020 <grub_reboot+0x38>
    2024:	nop
	...

0000000000002030 <grub_exit>:
    2030:	stp	x29, x30, [sp, #-16]!
    2034:	mov	w0, #0x1                   	// #1
    2038:	mov	x29, sp
    203c:	bl	98 <grub_machine_fini>
    2040:	adrp	x1, 0 <_start>
    2044:	adrp	x0, 0 <_start>
    2048:	mov	x3, #0x0                   	// #0
    204c:	mov	x2, #0x0                   	// #0
    2050:	ldr	x1, [x1]
    2054:	ldr	x0, [x0]
    2058:	ldr	x1, [x1]
    205c:	ldr	x0, [x0]
    2060:	ldr	x1, [x1, #96]
    2064:	ldr	x4, [x1, #216]
    2068:	mov	x1, #0x0                   	// #0
    206c:	blr	x4
	...

0000000000002080 <grub_efi_set_virtual_address_map>:
    2080:	stp	x29, x30, [sp, #-16]!
    2084:	adrp	x4, 0 <_start>
    2088:	mov	x29, sp
    208c:	ldr	x4, [x4]
    2090:	ldr	x4, [x4]
    2094:	ldr	x4, [x4, #88]
    2098:	ldr	x4, [x4, #56]
    209c:	blr	x4
    20a0:	cbz	x0, 20b8 <grub_efi_set_virtual_address_map+0x38>
    20a4:	adrp	x0, 0 <_start>
    20a8:	ldp	x29, x30, [sp], #16
    20ac:	ldr	x1, [x0]
    20b0:	mov	w0, #0x1d                  	// #29
    20b4:	b	7300 <grub_error>
    20b8:	mov	w0, #0x0                   	// #0
    20bc:	ldp	x29, x30, [sp], #16
    20c0:	ret
    20c4:	nop
	...

00000000000020d8 <grub_efi_set_variable>:
    20d8:	stp	x29, x30, [sp, #-64]!
    20dc:	mov	x29, sp
    20e0:	stp	x19, x20, [sp, #16]
    20e4:	mov	x20, x0
    20e8:	stp	x21, x22, [sp, #32]
    20ec:	mov	x22, x1
    20f0:	stp	x23, x24, [sp, #48]
    20f4:	mov	x24, x2
    20f8:	mov	x23, x3
    20fc:	bl	87fc <grub_strlen>
    2100:	mov	x21, x0
    2104:	add	x0, x0, #0x1
    2108:	lsl	x0, x0, #1
    210c:	bl	47f8 <grub_malloc>
    2110:	cbnz	x0, 2134 <grub_efi_set_variable+0x5c>
    2114:	adrp	x0, 0 <_start>
    2118:	ldr	x0, [x0]
    211c:	ldr	w0, [x0]
    2120:	ldp	x19, x20, [sp, #16]
    2124:	ldp	x21, x22, [sp, #32]
    2128:	ldp	x23, x24, [sp, #48]
    212c:	ldp	x29, x30, [sp], #64
    2130:	ret
    2134:	mov	x19, x0
    2138:	mov	x3, x21
    213c:	mov	x1, x21
    2140:	mov	x2, x20
    2144:	bl	1c18 <grub_efidisk_get_device_name+0x3ac>
    2148:	strh	wzr, [x19, x0, lsl #1]
    214c:	adrp	x0, 0 <_start>
    2150:	mov	x4, x24
    2154:	mov	x3, x23
    2158:	ldr	x0, [x0]
    215c:	mov	x1, x22
    2160:	mov	w2, #0x7                   	// #7
    2164:	ldr	x0, [x0]
    2168:	ldr	x0, [x0, #88]
    216c:	ldr	x5, [x0, #88]
    2170:	mov	x0, x19
    2174:	blr	x5
    2178:	mov	x21, x0
    217c:	mov	x0, x19
    2180:	bl	4844 <grub_free>
    2184:	cbz	x21, 21ac <grub_efi_set_variable+0xd4>
    2188:	mov	x2, x20
    218c:	adrp	x0, 0 <_start>
    2190:	ldp	x19, x20, [sp, #16]
    2194:	ldp	x21, x22, [sp, #32]
    2198:	ldp	x23, x24, [sp, #48]
    219c:	ldp	x29, x30, [sp], #64
    21a0:	ldr	x1, [x0]
    21a4:	mov	w0, #0x1d                  	// #29
    21a8:	b	7300 <grub_error>
    21ac:	mov	w0, #0x0                   	// #0
    21b0:	b	2120 <grub_efi_set_variable+0x48>
    21b4:	nop
	...

00000000000021d0 <grub_efi_get_variable>:
    21d0:	stp	x29, x30, [sp, #-80]!
    21d4:	mov	x29, sp
    21d8:	stp	x19, x20, [sp, #16]
    21dc:	stp	x21, x22, [sp, #32]
    21e0:	mov	x22, x1
    21e4:	mov	x21, x2
    21e8:	str	x23, [sp, #48]
    21ec:	mov	x23, x0
    21f0:	str	xzr, [x2]
    21f4:	str	xzr, [sp, #72]
    21f8:	bl	87fc <grub_strlen>
    21fc:	mov	x19, x0
    2200:	add	x0, x0, #0x1
    2204:	lsl	x0, x0, #1
    2208:	bl	47f8 <grub_malloc>
    220c:	cbz	x0, 2274 <grub_efi_get_variable+0xa4>
    2210:	mov	x20, x0
    2214:	mov	x2, x23
    2218:	mov	x3, x19
    221c:	mov	x1, x19
    2220:	bl	1c18 <grub_efidisk_get_device_name+0x3ac>
    2224:	strh	wzr, [x20, x0, lsl #1]
    2228:	adrp	x0, 0 <_start>
    222c:	mov	x1, x22
    2230:	add	x3, sp, #0x48
    2234:	ldr	x0, [x0]
    2238:	mov	x4, #0x0                   	// #0
    223c:	mov	x2, #0x0                   	// #0
    2240:	ldr	x0, [x0]
    2244:	ldr	x23, [x0, #88]
    2248:	mov	x0, x20
    224c:	ldr	x5, [x23, #72]
    2250:	blr	x5
    2254:	mov	x1, #0x5                   	// #5
    2258:	movk	x1, #0x8000, lsl #48
    225c:	cmp	x0, x1
    2260:	b.ne	226c <grub_efi_get_variable+0x9c>  // b.any
    2264:	ldr	x0, [sp, #72]
    2268:	cbnz	x0, 227c <grub_efi_get_variable+0xac>
    226c:	mov	x0, x20
    2270:	bl	4844 <grub_free>
    2274:	mov	x19, #0x0                   	// #0
    2278:	b	2290 <grub_efi_get_variable+0xc0>
    227c:	bl	47f8 <grub_malloc>
    2280:	mov	x19, x0
    2284:	cbnz	x0, 22a8 <grub_efi_get_variable+0xd8>
    2288:	mov	x0, x20
    228c:	bl	4844 <grub_free>
    2290:	mov	x0, x19
    2294:	ldp	x19, x20, [sp, #16]
    2298:	ldp	x21, x22, [sp, #32]
    229c:	ldr	x23, [sp, #48]
    22a0:	ldp	x29, x30, [sp], #80
    22a4:	ret
    22a8:	ldr	x5, [x23, #72]
    22ac:	mov	x4, x0
    22b0:	mov	x1, x22
    22b4:	add	x3, sp, #0x48
    22b8:	mov	x2, #0x0                   	// #0
    22bc:	mov	x0, x20
    22c0:	blr	x5
    22c4:	mov	x22, x0
    22c8:	mov	x0, x20
    22cc:	bl	4844 <grub_free>
    22d0:	cbnz	x22, 22e0 <grub_efi_get_variable+0x110>
    22d4:	ldr	x0, [sp, #72]
    22d8:	str	x0, [x21]
    22dc:	b	2290 <grub_efi_get_variable+0xc0>
    22e0:	mov	x0, x19
    22e4:	b	2270 <grub_efi_get_variable+0xa0>
	...

00000000000022f0 <grub_efi_modules_addr>:
    22f0:	stp	x29, x30, [sp, #-64]!
    22f4:	adrp	x0, 0 <_start>
    22f8:	mov	x29, sp
    22fc:	ldr	x0, [x0]
    2300:	stp	x19, x20, [sp, #16]
    2304:	stp	x21, x22, [sp, #32]
    2308:	ldr	x0, [x0]
    230c:	str	x23, [sp, #48]
    2310:	bl	1fc8 <grub_efi_get_loaded_image>
    2314:	cbnz	x0, 2330 <grub_efi_modules_addr+0x40>
    2318:	mov	x0, #0x0                   	// #0
    231c:	ldp	x19, x20, [sp, #16]
    2320:	ldp	x21, x22, [sp, #32]
    2324:	ldr	x23, [sp, #48]
    2328:	ldp	x29, x30, [sp], #64
    232c:	ret
    2330:	mov	x21, x0
    2334:	mov	w20, #0x0                   	// #0
    2338:	ldr	x0, [x0, #64]
    233c:	adrp	x23, 0 <_start>
    2340:	add	x22, x0, #0x84
    2344:	ldrh	w19, [x0, #148]
    2348:	add	x19, x19, #0x14
    234c:	add	x19, x22, x19
    2350:	ldrh	w0, [x22, #2]
    2354:	cmp	w0, w20
    2358:	b.ls	236c <grub_efi_modules_addr+0x7c>  // b.plast
    235c:	ldr	x1, [x23]
    2360:	mov	x0, x19
    2364:	bl	85a4 <grub_strcmp>
    2368:	cbnz	w0, 239c <grub_efi_modules_addr+0xac>
    236c:	ldrh	w0, [x22, #2]
    2370:	cmp	w0, w20
    2374:	b.eq	2318 <grub_efi_modules_addr+0x28>  // b.none
    2378:	ldr	w1, [x19, #12]
    237c:	ldr	x2, [x21, #64]
    2380:	add	x0, x2, x1
    2384:	ldr	w2, [x2, x1]
    2388:	mov	w1, #0x696d                	// #26989
    238c:	movk	w1, #0x676d, lsl #16
    2390:	cmp	w2, w1
    2394:	b.ne	2318 <grub_efi_modules_addr+0x28>  // b.any
    2398:	b	231c <grub_efi_modules_addr+0x2c>
    239c:	add	w20, w20, #0x1
    23a0:	add	x19, x19, #0x28
    23a4:	and	w20, w20, #0xffff
    23a8:	b	2350 <grub_efi_modules_addr+0x60>
    23ac:	nop
	...

00000000000023c0 <grub_efi_get_filename>:
    23c0:	stp	x29, x30, [sp, #-80]!
    23c4:	mov	x29, sp
    23c8:	stp	x19, x20, [sp, #16]
    23cc:	stp	x21, x22, [sp, #32]
    23d0:	stp	x23, x24, [sp, #48]
    23d4:	str	x25, [sp, #64]
    23d8:	cbnz	x0, 23fc <grub_efi_get_filename+0x3c>
    23dc:	mov	x24, #0x0                   	// #0
    23e0:	mov	x0, x24
    23e4:	ldp	x19, x20, [sp, #16]
    23e8:	ldp	x21, x22, [sp, #32]
    23ec:	ldp	x23, x24, [sp, #48]
    23f0:	ldr	x25, [sp, #64]
    23f4:	ldp	x29, x30, [sp], #80
    23f8:	ret
    23fc:	mov	x19, x0
    2400:	mov	x2, x0
    2404:	mov	x0, #0x0                   	// #0
    2408:	ldrb	w1, [x2]
    240c:	ldrb	w4, [x2, #1]
    2410:	and	w1, w1, #0x7f
    2414:	cmp	w1, #0x7f
    2418:	b.eq	2448 <grub_efi_get_filename+0x88>  // b.none
    241c:	cmp	w1, #0x4
    2420:	ldrh	w3, [x2, #2]
    2424:	ccmp	w4, #0x4, #0x0, eq  // eq = none
    2428:	b.ne	2440 <grub_efi_get_filename+0x80>  // b.any
    242c:	sub	w1, w3, #0x4
    2430:	ubfx	x1, x1, #1, #16
    2434:	lsl	w1, w1, #2
    2438:	add	w1, w1, #0x2
    243c:	add	x0, x0, w1, sxtw
    2440:	add	x2, x2, w3, uxth
    2444:	b	2408 <grub_efi_get_filename+0x48>
    2448:	cbz	x0, 23dc <grub_efi_get_filename+0x1c>
    244c:	bl	47f8 <grub_malloc>
    2450:	mov	x23, x0
    2454:	cbz	x0, 23dc <grub_efi_get_filename+0x1c>
    2458:	mov	x21, x0
    245c:	mov	w22, #0x2f                  	// #47
    2460:	ldrb	w0, [x19]
    2464:	ldrb	w1, [x19, #1]
    2468:	and	w0, w0, #0x7f
    246c:	cmp	w0, #0x7f
    2470:	b.eq	250c <grub_efi_get_filename+0x14c>  // b.none
    2474:	cmp	w0, #0x4
    2478:	ccmp	w1, #0x4, #0x0, eq  // eq = none
    247c:	b.ne	2500 <grub_efi_get_filename+0x140>  // b.any
    2480:	strb	w22, [x21], #1
    2484:	ldrh	w1, [x19, #2]
    2488:	sub	w1, w1, #0x4
    248c:	ubfx	x2, x1, #1, #16
    2490:	and	x1, x1, #0x1fffe
    2494:	add	x1, x19, x1
    2498:	cbz	w2, 24a8 <grub_efi_get_filename+0xe8>
    249c:	ldrh	w0, [x1, #2]
    24a0:	sub	x1, x1, #0x2
    24a4:	cbz	w0, 24cc <grub_efi_get_filename+0x10c>
    24a8:	ubfiz	x20, x2, #1, #16
    24ac:	and	x25, x2, #0xffff
    24b0:	mov	x0, x20
    24b4:	bl	47f8 <grub_malloc>
    24b8:	mov	x24, x0
    24bc:	cbnz	x0, 24d8 <grub_efi_get_filename+0x118>
    24c0:	mov	x0, x23
    24c4:	bl	4844 <grub_free>
    24c8:	b	23e0 <grub_efi_get_filename+0x20>
    24cc:	sub	w2, w2, #0x1
    24d0:	and	w2, w2, #0xffff
    24d4:	b	2498 <grub_efi_get_filename+0xd8>
    24d8:	mov	x2, x20
    24dc:	add	x1, x19, #0x4
    24e0:	bl	84a4 <grub_memmove>
    24e4:	mov	x1, x0
    24e8:	mov	x2, x25
    24ec:	mov	x0, x21
    24f0:	bl	1a10 <grub_efidisk_get_device_name+0x1a4>
    24f4:	mov	x21, x0
    24f8:	mov	x0, x24
    24fc:	bl	4844 <grub_free>
    2500:	ldrh	w0, [x19, #2]
    2504:	add	x19, x19, x0
    2508:	b	2460 <grub_efi_get_filename+0xa0>
    250c:	mov	x0, x23
    2510:	mov	x1, x23
    2514:	mov	w3, #0x2f                  	// #47
    2518:	strb	wzr, [x21]
    251c:	ldrb	w2, [x0]
    2520:	cbnz	w2, 2530 <grub_efi_get_filename+0x170>
    2524:	mov	x24, x23
    2528:	strb	wzr, [x1]
    252c:	b	23e0 <grub_efi_get_filename+0x20>
    2530:	cmp	w2, #0x5c
    2534:	add	x1, x1, #0x1
    2538:	ccmp	w2, w3, #0x4, ne  // ne = any
    253c:	b.ne	255c <grub_efi_get_filename+0x19c>  // b.any
    2540:	sturb	w3, [x1, #-1]
    2544:	ldrb	w2, [x0]
    2548:	cmp	w2, #0x5c
    254c:	ccmp	w2, w3, #0x4, ne  // ne = any
    2550:	b.ne	251c <grub_efi_get_filename+0x15c>  // b.any
    2554:	add	x0, x0, #0x1
    2558:	b	2544 <grub_efi_get_filename+0x184>
    255c:	add	x0, x0, #0x1
    2560:	sturb	w2, [x1, #-1]
    2564:	b	251c <grub_efi_get_filename+0x15c>

0000000000002568 <grub_efi_get_device_path>:
    2568:	adrp	x1, 0 <_start>
    256c:	mov	w2, #0x2                   	// #2
    2570:	ldr	x1, [x1]
    2574:	add	x1, x1, #0x20
    2578:	b	1eb0 <grub_efi_open_protocol>
    257c:	nop
	...

0000000000002588 <grub_efi_find_last_device_path>:
    2588:	ldrb	w1, [x0]
    258c:	and	w1, w1, #0x7f
    2590:	cmp	w1, #0x7f
    2594:	b.ne	25a4 <grub_efi_find_last_device_path+0x1c>  // b.any
    2598:	ldrb	w1, [x0, #1]
    259c:	cmp	w1, #0xff
    25a0:	b.eq	25dc <grub_efi_find_last_device_path+0x54>  // b.none
    25a4:	ldrh	w1, [x0, #2]
    25a8:	add	x1, x0, x1
    25ac:	ldrb	w2, [x1]
    25b0:	and	w2, w2, #0x7f
    25b4:	cmp	w2, #0x7f
    25b8:	b.ne	25cc <grub_efi_find_last_device_path+0x44>  // b.any
    25bc:	ldrb	w2, [x1, #1]
    25c0:	cmp	w2, #0xff
    25c4:	b.ne	25cc <grub_efi_find_last_device_path+0x44>  // b.any
    25c8:	ret
    25cc:	ldrh	w2, [x1, #2]
    25d0:	mov	x0, x1
    25d4:	add	x1, x1, x2
    25d8:	b	25ac <grub_efi_find_last_device_path+0x24>
    25dc:	mov	x0, #0x0                   	// #0
    25e0:	b	25c8 <grub_efi_find_last_device_path+0x40>

00000000000025e4 <grub_efi_duplicate_device_path>:
    25e4:	stp	x29, x30, [sp, #-48]!
    25e8:	mov	x3, x0
    25ec:	mov	x29, sp
    25f0:	stp	x19, x20, [sp, #16]
    25f4:	mov	x20, x0
    25f8:	str	x21, [sp, #32]
    25fc:	mov	x21, #0x0                   	// #0
    2600:	ldrb	w0, [x3]
    2604:	ldrh	w1, [x3, #2]
    2608:	and	w0, w0, #0x7f
    260c:	add	x21, x21, x1
    2610:	cmp	w0, #0x7f
    2614:	b.ne	2624 <grub_efi_duplicate_device_path+0x40>  // b.any
    2618:	ldrb	w0, [x3, #1]
    261c:	cmp	w0, #0xff
    2620:	b.eq	262c <grub_efi_duplicate_device_path+0x48>  // b.none
    2624:	add	x3, x3, x1
    2628:	b	2600 <grub_efi_duplicate_device_path+0x1c>
    262c:	mov	x0, x21
    2630:	bl	47f8 <grub_malloc>
    2634:	mov	x19, x0
    2638:	cbz	x0, 2648 <grub_efi_duplicate_device_path+0x64>
    263c:	mov	x2, x21
    2640:	mov	x1, x20
    2644:	bl	84a4 <grub_memmove>
    2648:	mov	x0, x19
    264c:	ldp	x19, x20, [sp, #16]
    2650:	ldr	x21, [sp, #32]
    2654:	ldp	x29, x30, [sp], #48
    2658:	ret

000000000000265c <grub_efi_print_device_path>:
    265c:	sub	sp, sp, #0xd0
    2660:	stp	x29, x30, [sp, #112]
    2664:	add	x29, sp, #0x70
    2668:	stp	x19, x20, [sp, #128]
    266c:	mov	x19, x0
    2670:	stp	x21, x22, [sp, #144]
    2674:	adrp	x22, 0 <_start>
    2678:	stp	x23, x24, [sp, #160]
    267c:	adrp	x23, 0 <_start>
    2680:	adrp	x24, 0 <_start>
    2684:	stp	x25, x26, [sp, #176]
    2688:	adrp	x25, 0 <_start>
    268c:	adrp	x26, 0 <_start>
    2690:	stp	x27, x28, [sp, #192]
    2694:	ldrb	w0, [x19]
    2698:	ldrb	w1, [x19, #1]
    269c:	and	w0, w0, #0x7f
    26a0:	ldrh	w21, [x19, #2]
    26a4:	cmp	w0, #0x5
    26a8:	b.hi	26d4 <grub_efi_print_device_path+0x78>  // b.pmore
    26ac:	cbz	w0, 2cec <grub_efi_print_device_path+0x690>
    26b0:	sub	w0, w0, #0x2
    26b4:	cmp	w0, #0x3
    26b8:	b.hi	272c <grub_efi_print_device_path+0xd0>  // b.pmore
    26bc:	adrp	x2, 0 <_start>
    26c0:	ldr	x2, [x2]
    26c4:	ldrh	w0, [x2, w0, uxtw #1]
    26c8:	adr	x2, 26d4 <grub_efi_print_device_path+0x78>
    26cc:	add	x0, x2, w0, sxth #2
    26d0:	br	x0
    26d4:	cmp	w0, #0x7f
    26d8:	b.ne	2cec <grub_efi_print_device_path+0x690>  // b.any
    26dc:	cmp	w1, #0x1
    26e0:	b.eq	2718 <grub_efi_print_device_path+0xbc>  // b.none
    26e4:	cmp	w1, #0xff
    26e8:	b.ne	2720 <grub_efi_print_device_path+0xc4>  // b.any
    26ec:	ldr	x0, [x24]
    26f0:	bl	94b0 <grub_err_printf>
    26f4:	ldrb	w0, [x19]
    26f8:	and	w0, w0, #0x7f
    26fc:	cmp	w0, #0x7f
    2700:	b.ne	2710 <grub_efi_print_device_path+0xb4>  // b.any
    2704:	ldrb	w0, [x19, #1]
    2708:	cmp	w0, #0xff
    270c:	b.eq	2d1c <grub_efi_print_device_path+0x6c0>  // b.none
    2710:	add	x19, x19, w21, uxth
    2714:	b	2694 <grub_efi_print_device_path+0x38>
    2718:	ldr	x0, [x22]
    271c:	b	26f0 <grub_efi_print_device_path+0x94>
    2720:	ldr	x0, [x23]
    2724:	bl	94b0 <grub_err_printf>
    2728:	b	26f4 <grub_efi_print_device_path+0x98>
    272c:	sub	w0, w1, #0x1
    2730:	cmp	w0, #0x4
    2734:	b.hi	27b0 <grub_efi_print_device_path+0x154>  // b.pmore
    2738:	ldr	x1, [x26]
    273c:	ldrb	w0, [x1, w0, uxtw]
    2740:	adr	x1, 274c <grub_efi_print_device_path+0xf0>
    2744:	add	x0, x1, w0, sxtb #2
    2748:	br	x0
    274c:	adrp	x0, 0 <_start>
    2750:	ldrb	w2, [x19, #5]
    2754:	ldrb	w1, [x19, #4]
    2758:	ldr	x0, [x0]
    275c:	bl	94b0 <grub_err_printf>
    2760:	b	26f4 <grub_efi_print_device_path+0x98>
    2764:	adrp	x0, 0 <_start>
    2768:	ldrb	w1, [x19, #4]
    276c:	ldr	x0, [x0]
    2770:	b	2724 <grub_efi_print_device_path+0xc8>
    2774:	adrp	x0, 0 <_start>
    2778:	ldr	w1, [x19, #4]
    277c:	ldp	x2, x3, [x19, #8]
    2780:	ldr	x0, [x0]
    2784:	bl	94b0 <grub_err_printf>
    2788:	b	26f4 <grub_efi_print_device_path+0x98>
    278c:	adrp	x0, 0 <_start>
    2790:	mov	x1, x19
    2794:	ldr	x0, [x0]
    2798:	bl	1b34 <grub_efidisk_get_device_name+0x2c8>
    279c:	b	26f4 <grub_efi_print_device_path+0x98>
    27a0:	adrp	x0, 0 <_start>
    27a4:	ldr	w1, [x19, #4]
    27a8:	ldr	x0, [x0]
    27ac:	b	2724 <grub_efi_print_device_path+0xc8>
    27b0:	ldr	x0, [x25]
    27b4:	b	2724 <grub_efi_print_device_path+0xc8>
    27b8:	cmp	w1, #0x1
    27bc:	b.eq	27d4 <grub_efi_print_device_path+0x178>  // b.none
    27c0:	cmp	w1, #0x2
    27c4:	b.eq	27e4 <grub_efi_print_device_path+0x188>  // b.none
    27c8:	adrp	x0, 0 <_start>
    27cc:	ldr	x0, [x0]
    27d0:	b	2724 <grub_efi_print_device_path+0xc8>
    27d4:	adrp	x0, 0 <_start>
    27d8:	ldp	w1, w2, [x19, #4]
    27dc:	ldr	x0, [x0]
    27e0:	b	275c <grub_efi_print_device_path+0x100>
    27e4:	adrp	x0, 0 <_start>
    27e8:	add	x20, x19, #0x10
    27ec:	ldr	x0, [x0]
    27f0:	bl	94b0 <grub_err_printf>
    27f4:	ldrb	w0, [x19, #16]
    27f8:	cbnz	w0, 2870 <grub_efi_print_device_path+0x214>
    27fc:	adrp	x0, 0 <_start>
    2800:	ldr	w1, [x19, #4]
    2804:	ldr	x0, [x0]
    2808:	bl	94b0 <grub_err_printf>
    280c:	mov	x0, x20
    2810:	bl	87fc <grub_strlen>
    2814:	add	x0, x20, x0
    2818:	ldrb	w0, [x0, #1]
    281c:	cbnz	w0, 2884 <grub_efi_print_device_path+0x228>
    2820:	adrp	x0, 0 <_start>
    2824:	ldr	w1, [x19, #8]
    2828:	ldr	x0, [x0]
    282c:	bl	94b0 <grub_err_printf>
    2830:	mov	x0, x20
    2834:	bl	87fc <grub_strlen>
    2838:	mov	x27, x0
    283c:	mov	x0, x20
    2840:	add	x27, x20, x27
    2844:	bl	87fc <grub_strlen>
    2848:	add	x0, x0, #0x1
    284c:	add	x0, x20, x0
    2850:	bl	87fc <grub_strlen>
    2854:	add	x27, x27, x0
    2858:	ldrb	w0, [x27, #2]
    285c:	cbnz	w0, 28a4 <grub_efi_print_device_path+0x248>
    2860:	adrp	x0, 0 <_start>
    2864:	ldr	w1, [x19, #12]
    2868:	ldr	x0, [x0]
    286c:	b	2724 <grub_efi_print_device_path+0xc8>
    2870:	adrp	x0, 0 <_start>
    2874:	mov	x1, x20
    2878:	ldr	x0, [x0]
    287c:	bl	94b0 <grub_err_printf>
    2880:	b	280c <grub_efi_print_device_path+0x1b0>
    2884:	mov	x0, x20
    2888:	bl	87fc <grub_strlen>
    288c:	add	x1, x0, #0x1
    2890:	adrp	x0, 0 <_start>
    2894:	add	x1, x20, x1
    2898:	ldr	x0, [x0]
    289c:	bl	94b0 <grub_err_printf>
    28a0:	b	2830 <grub_efi_print_device_path+0x1d4>
    28a4:	mov	x0, x20
    28a8:	bl	87fc <grub_strlen>
    28ac:	mov	x27, x0
    28b0:	mov	x0, x20
    28b4:	bl	87fc <grub_strlen>
    28b8:	add	x0, x0, #0x1
    28bc:	add	x0, x20, x0
    28c0:	bl	87fc <grub_strlen>
    28c4:	add	x1, x27, x0
    28c8:	adrp	x0, 0 <_start>
    28cc:	add	x1, x1, #0x2
    28d0:	ldr	x0, [x0]
    28d4:	add	x1, x20, x1
    28d8:	bl	94b0 <grub_err_printf>
    28dc:	b	26f4 <grub_efi_print_device_path+0x98>
    28e0:	sub	w0, w1, #0x1
    28e4:	cmp	w0, #0x11
    28e8:	b.hi	2b18 <grub_efi_print_device_path+0x4bc>  // b.pmore
    28ec:	adrp	x2, 0 <_start>
    28f0:	ldr	x2, [x2]
    28f4:	ldrh	w0, [x2, w0, uxtw #1]
    28f8:	adr	x2, 2904 <grub_efi_print_device_path+0x2a8>
    28fc:	add	x0, x2, w0, sxth #2
    2900:	br	x0
    2904:	adrp	x0, 0 <_start>
    2908:	ldrh	w3, [x19, #6]
    290c:	ldrb	w2, [x19, #5]
    2910:	ldrb	w1, [x19, #4]
    2914:	ldr	x0, [x0]
    2918:	bl	94b0 <grub_err_printf>
    291c:	b	26f4 <grub_efi_print_device_path+0x98>
    2920:	adrp	x0, 0 <_start>
    2924:	ldrh	w2, [x19, #6]
    2928:	ldrh	w1, [x19, #4]
    292c:	ldr	x0, [x0]
    2930:	b	275c <grub_efi_print_device_path+0x100>
    2934:	adrp	x0, 0 <_start>
    2938:	ldp	x1, x2, [x19, #8]
    293c:	ldr	x0, [x0]
    2940:	bl	94b0 <grub_err_printf>
    2944:	b	26f4 <grub_efi_print_device_path+0x98>
    2948:	adrp	x0, 0 <_start>
    294c:	ldr	x1, [x19, #8]
    2950:	ldr	x0, [x0]
    2954:	b	28d8 <grub_efi_print_device_path+0x27c>
    2958:	adrp	x0, 0 <_start>
    295c:	ldrb	w2, [x19, #5]
    2960:	ldrb	w1, [x19, #4]
    2964:	ldr	x0, [x0]
    2968:	b	275c <grub_efi_print_device_path+0x100>
    296c:	adrp	x0, 0 <_start>
    2970:	ldrb	w5, [x19, #10]
    2974:	ldrb	w4, [x19, #9]
    2978:	ldrb	w3, [x19, #8]
    297c:	ldrh	w2, [x19, #6]
    2980:	ldrh	w1, [x19, #4]
    2984:	ldr	x0, [x0]
    2988:	bl	94b0 <grub_err_printf>
    298c:	b	26f4 <grub_efi_print_device_path+0x98>
    2990:	adrp	x0, 0 <_start>
    2994:	ldr	w1, [x19, #4]
    2998:	ldr	x0, [x0]
    299c:	b	2724 <grub_efi_print_device_path+0xc8>
    29a0:	adrp	x0, 0 <_start>
    29a4:	ldrb	w7, [x19, #36]
    29a8:	ldrb	w6, [x19, #9]
    29ac:	ldrb	w5, [x19, #8]
    29b0:	ldrb	w4, [x19, #7]
    29b4:	ldrb	w3, [x19, #6]
    29b8:	ldrb	w2, [x19, #5]
    29bc:	ldrb	w1, [x19, #4]
    29c0:	ldr	x0, [x0]
    29c4:	bl	94b0 <grub_err_printf>
    29c8:	b	26f4 <grub_efi_print_device_path+0x98>
    29cc:	ldrb	w0, [x19, #18]
    29d0:	ldrb	w7, [x19, #10]
    29d4:	ldrb	w6, [x19, #9]
    29d8:	ldrb	w5, [x19, #8]
    29dc:	ldrb	w4, [x19, #7]
    29e0:	ldrb	w3, [x19, #6]
    29e4:	ldrb	w2, [x19, #5]
    29e8:	ldrb	w1, [x19, #4]
    29ec:	str	w0, [sp, #32]
    29f0:	ldrh	w0, [x19, #16]
    29f4:	str	w0, [sp, #24]
    29f8:	ldrh	w0, [x19, #14]
    29fc:	str	w0, [sp, #16]
    2a00:	ldrh	w0, [x19, #12]
    2a04:	str	w0, [sp, #8]
    2a08:	ldrb	w0, [x19, #11]
    2a0c:	str	w0, [sp]
    2a10:	adrp	x0, 0 <_start>
    2a14:	ldr	x0, [x0]
    2a18:	bl	94b0 <grub_err_printf>
    2a1c:	b	26f4 <grub_efi_print_device_path+0x98>
    2a20:	ldrb	w0, [x19, #42]
    2a24:	ldrh	w7, [x19, #16]
    2a28:	ldrh	w6, [x19, #14]
    2a2c:	ldrh	w5, [x19, #12]
    2a30:	ldrh	w4, [x19, #10]
    2a34:	ldrh	w3, [x19, #8]
    2a38:	ldrh	w2, [x19, #6]
    2a3c:	str	w0, [sp, #96]
    2a40:	ldrh	w0, [x19, #40]
    2a44:	str	w0, [sp, #88]
    2a48:	ldrh	w0, [x19, #38]
    2a4c:	str	w0, [sp, #80]
    2a50:	ldrh	w0, [x19, #36]
    2a54:	str	w0, [sp, #72]
    2a58:	ldrh	w0, [x19, #34]
    2a5c:	str	w0, [sp, #64]
    2a60:	ldrh	w0, [x19, #32]
    2a64:	str	w0, [sp, #56]
    2a68:	ldrh	w0, [x19, #30]
    2a6c:	str	w0, [sp, #48]
    2a70:	ldrh	w0, [x19, #28]
    2a74:	str	w0, [sp, #40]
    2a78:	ldrh	w0, [x19, #26]
    2a7c:	str	w0, [sp, #32]
    2a80:	ldrh	w0, [x19, #24]
    2a84:	str	w0, [sp, #24]
    2a88:	ldrh	w0, [x19, #22]
    2a8c:	str	w0, [sp, #16]
    2a90:	ldrh	w0, [x19, #20]
    2a94:	str	w0, [sp, #8]
    2a98:	ldrh	w0, [x19, #18]
    2a9c:	str	w0, [sp]
    2aa0:	adrp	x0, 0 <_start>
    2aa4:	ldrh	w1, [x19, #4]
    2aa8:	ldr	x0, [x0]
    2aac:	bl	94b0 <grub_err_printf>
    2ab0:	b	26f4 <grub_efi_print_device_path+0x98>
    2ab4:	adrp	x0, 0 <_start>
    2ab8:	ldrb	w1, [x19, #8]
    2abc:	ldp	x2, x3, [x19, #24]
    2ac0:	ldr	x0, [x0]
    2ac4:	ldr	x4, [x19, #40]
    2ac8:	bl	94b0 <grub_err_printf>
    2acc:	b	26f4 <grub_efi_print_device_path+0x98>
    2ad0:	adrp	x0, 0 <_start>
    2ad4:	ldrb	w4, [x19, #18]
    2ad8:	ldrb	w3, [x19, #17]
    2adc:	ldrb	w2, [x19, #16]
    2ae0:	ldr	x0, [x0]
    2ae4:	ldr	x1, [x19, #8]
    2ae8:	bl	94b0 <grub_err_printf>
    2aec:	b	26f4 <grub_efi_print_device_path+0x98>
    2af0:	adrp	x0, 0 <_start>
    2af4:	ldrh	w3, [x19, #8]
    2af8:	ldrh	w2, [x19, #6]
    2afc:	ldrh	w1, [x19, #4]
    2b00:	ldr	x0, [x0]
    2b04:	b	2918 <grub_efi_print_device_path+0x2bc>
    2b08:	adrp	x0, 0 <_start>
    2b0c:	mov	x1, x19
    2b10:	ldr	x0, [x0]
    2b14:	b	2798 <grub_efi_print_device_path+0x13c>
    2b18:	adrp	x0, 0 <_start>
    2b1c:	ldr	x0, [x0]
    2b20:	b	2724 <grub_efi_print_device_path+0xc8>
    2b24:	sub	w0, w1, #0x1
    2b28:	cmp	w0, #0x4
    2b2c:	b.hi	2cb0 <grub_efi_print_device_path+0x654>  // b.pmore
    2b30:	adrp	x1, 0 <_start>
    2b34:	ldr	x1, [x1]
    2b38:	ldrb	w0, [x1, w0, uxtw]
    2b3c:	adr	x1, 2b48 <grub_efi_print_device_path+0x4ec>
    2b40:	add	x0, x1, w0, sxtb #2
    2b44:	br	x0
    2b48:	ldrb	w0, [x19, #41]
    2b4c:	ldrb	w7, [x19, #27]
    2b50:	ldrb	w6, [x19, #26]
    2b54:	ldrb	w5, [x19, #25]
    2b58:	ldrb	w4, [x19, #24]
    2b5c:	ldr	w1, [x19, #4]
    2b60:	ldp	x2, x3, [x19, #8]
    2b64:	str	w0, [sp, #40]
    2b68:	ldrb	w0, [x19, #40]
    2b6c:	str	w0, [sp, #32]
    2b70:	ldrb	w0, [x19, #31]
    2b74:	str	w0, [sp, #24]
    2b78:	ldrb	w0, [x19, #30]
    2b7c:	str	w0, [sp, #16]
    2b80:	ldrb	w0, [x19, #29]
    2b84:	str	w0, [sp, #8]
    2b88:	ldrb	w0, [x19, #28]
    2b8c:	str	w0, [sp]
    2b90:	adrp	x0, 0 <_start>
    2b94:	ldr	x0, [x0]
    2b98:	bl	94b0 <grub_err_printf>
    2b9c:	b	26f4 <grub_efi_print_device_path+0x98>
    2ba0:	adrp	x0, 0 <_start>
    2ba4:	ldr	w1, [x19, #4]
    2ba8:	ldp	x2, x3, [x19, #8]
    2bac:	ldr	x0, [x0]
    2bb0:	b	2784 <grub_efi_print_device_path+0x128>
    2bb4:	adrp	x0, 0 <_start>
    2bb8:	mov	x1, x19
    2bbc:	ldr	x0, [x0]
    2bc0:	b	2798 <grub_efi_print_device_path+0x13c>
    2bc4:	sub	w27, w21, #0x4
    2bc8:	lsl	w0, w27, #1
    2bcc:	add	w0, w0, #0x1
    2bd0:	sxtw	x0, w0
    2bd4:	bl	47f8 <grub_malloc>
    2bd8:	mov	x20, x0
    2bdc:	cbz	x0, 2c54 <grub_efi_print_device_path+0x5f8>
    2be0:	sxtw	x27, w27
    2be4:	mov	x0, x27
    2be8:	bl	47f8 <grub_malloc>
    2bec:	mov	x28, x0
    2bf0:	cbnz	x0, 2c18 <grub_efi_print_device_path+0x5bc>
    2bf4:	adrp	x0, 0 <_start>
    2bf8:	ldr	x0, [x0]
    2bfc:	str	wzr, [x0]
    2c00:	adrp	x0, 0 <_start>
    2c04:	ldr	x0, [x0]
    2c08:	bl	94b0 <grub_err_printf>
    2c0c:	mov	x0, x20
    2c10:	bl	4844 <grub_free>
    2c14:	b	26f4 <grub_efi_print_device_path+0x98>
    2c18:	mov	x2, x27
    2c1c:	add	x1, x19, #0x4
    2c20:	bl	84a4 <grub_memmove>
    2c24:	mov	x1, x0
    2c28:	lsr	x2, x27, #1
    2c2c:	mov	x0, x20
    2c30:	bl	1a10 <grub_efidisk_get_device_name+0x1a4>
    2c34:	strb	wzr, [x0]
    2c38:	mov	x0, x28
    2c3c:	bl	4844 <grub_free>
    2c40:	adrp	x0, 0 <_start>
    2c44:	mov	x1, x20
    2c48:	ldr	x0, [x0]
    2c4c:	bl	94b0 <grub_err_printf>
    2c50:	b	2c0c <grub_efi_print_device_path+0x5b0>
    2c54:	adrp	x0, 0 <_start>
    2c58:	ldr	x0, [x0]
    2c5c:	str	wzr, [x0]
    2c60:	b	2c40 <grub_efi_print_device_path+0x5e4>
    2c64:	ldrb	w0, [x19, #19]
    2c68:	ldrb	w7, [x19, #15]
    2c6c:	ldrb	w6, [x19, #14]
    2c70:	ldrb	w5, [x19, #13]
    2c74:	ldrb	w4, [x19, #12]
    2c78:	ldrh	w3, [x19, #10]
    2c7c:	ldrh	w2, [x19, #8]
    2c80:	ldr	w1, [x19, #4]
    2c84:	str	w0, [sp, #24]
    2c88:	ldrb	w0, [x19, #18]
    2c8c:	str	w0, [sp, #16]
    2c90:	ldrb	w0, [x19, #17]
    2c94:	str	w0, [sp, #8]
    2c98:	ldrb	w0, [x19, #16]
    2c9c:	str	w0, [sp]
    2ca0:	adrp	x0, 0 <_start>
    2ca4:	ldr	x0, [x0]
    2ca8:	bl	94b0 <grub_err_printf>
    2cac:	b	26f4 <grub_efi_print_device_path+0x98>
    2cb0:	adrp	x0, 0 <_start>
    2cb4:	ldr	x0, [x0]
    2cb8:	b	2724 <grub_efi_print_device_path+0xc8>
    2cbc:	cmp	w1, #0x1
    2cc0:	b.ne	2ce0 <grub_efi_print_device_path+0x684>  // b.any
    2cc4:	adrp	x0, 0 <_start>
    2cc8:	ldrh	w2, [x19, #6]
    2ccc:	ldrh	w1, [x19, #4]
    2cd0:	add	x3, x19, #0x4
    2cd4:	ldr	x0, [x0]
    2cd8:	bl	94b0 <grub_err_printf>
    2cdc:	b	26f4 <grub_efi_print_device_path+0x98>
    2ce0:	adrp	x0, 0 <_start>
    2ce4:	ldr	x0, [x0]
    2ce8:	b	2724 <grub_efi_print_device_path+0xc8>
    2cec:	mov	w2, w1
    2cf0:	mov	w1, w0
    2cf4:	adrp	x0, 0 <_start>
    2cf8:	ldp	x29, x30, [sp, #112]
    2cfc:	ldp	x19, x20, [sp, #128]
    2d00:	ldp	x21, x22, [sp, #144]
    2d04:	ldp	x23, x24, [sp, #160]
    2d08:	ldp	x25, x26, [sp, #176]
    2d0c:	ldp	x27, x28, [sp, #192]
    2d10:	add	sp, sp, #0xd0
    2d14:	ldr	x0, [x0]
    2d18:	b	94b0 <grub_err_printf>
    2d1c:	ldp	x29, x30, [sp, #112]
    2d20:	ldp	x19, x20, [sp, #128]
    2d24:	ldp	x21, x22, [sp, #144]
    2d28:	ldp	x23, x24, [sp, #160]
    2d2c:	ldp	x25, x26, [sp, #176]
    2d30:	ldp	x27, x28, [sp, #192]
    2d34:	add	sp, sp, #0xd0
    2d38:	ret
    2d3c:	nop
	...

0000000000002eb0 <grub_efi_compare_device_paths>:
    2eb0:	cmp	x0, #0x0
    2eb4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
    2eb8:	b.eq	2f68 <grub_efi_compare_device_paths+0xb8>  // b.none
    2ebc:	stp	x29, x30, [sp, #-48]!
    2ec0:	mov	x29, sp
    2ec4:	stp	x19, x20, [sp, #16]
    2ec8:	mov	x19, x0
    2ecc:	mov	x20, x1
    2ed0:	str	x21, [sp, #32]
    2ed4:	ldrb	w0, [x19]
    2ed8:	ldrb	w2, [x20]
    2edc:	and	w0, w0, #0x7f
    2ee0:	and	w2, w2, #0x7f
    2ee4:	cmp	w0, w2
    2ee8:	b.eq	2f00 <grub_efi_compare_device_paths+0x50>  // b.none
    2eec:	sub	w0, w2, w0
    2ef0:	ldp	x19, x20, [sp, #16]
    2ef4:	ldr	x21, [sp, #32]
    2ef8:	ldp	x29, x30, [sp], #48
    2efc:	ret
    2f00:	ldrb	w2, [x19, #1]
    2f04:	ldrb	w0, [x20, #1]
    2f08:	cmp	w2, w0
    2f0c:	b.ne	2eec <grub_efi_compare_device_paths+0x3c>  // b.any
    2f10:	ldrh	w0, [x19, #2]
    2f14:	ldrh	w3, [x20, #2]
    2f18:	cmp	w0, w3
    2f1c:	b.eq	2f28 <grub_efi_compare_device_paths+0x78>  // b.none
    2f20:	sub	w0, w0, w3
    2f24:	b	2ef0 <grub_efi_compare_device_paths+0x40>
    2f28:	and	x21, x0, #0xffff
    2f2c:	mov	x1, x20
    2f30:	mov	x2, x21
    2f34:	mov	x0, x19
    2f38:	bl	8570 <grub_memcmp>
    2f3c:	cbnz	w0, 2ef0 <grub_efi_compare_device_paths+0x40>
    2f40:	ldrb	w1, [x19]
    2f44:	and	w1, w1, #0x7f
    2f48:	cmp	w1, #0x7f
    2f4c:	b.ne	2f5c <grub_efi_compare_device_paths+0xac>  // b.any
    2f50:	ldrb	w1, [x19, #1]
    2f54:	cmp	w1, #0xff
    2f58:	b.eq	2ef0 <grub_efi_compare_device_paths+0x40>  // b.none
    2f5c:	add	x19, x19, x21
    2f60:	add	x20, x20, x21
    2f64:	b	2ed4 <grub_efi_compare_device_paths+0x24>
    2f68:	mov	w0, #0x1                   	// #1
    2f6c:	ret

0000000000002f70 <grub_efi_init>:
    2f70:	stp	x29, x30, [sp, #-16]!
    2f74:	mov	x29, sp
    2f78:	bl	22f0 <grub_efi_modules_addr>
    2f7c:	adrp	x1, 0 <_start>
    2f80:	ldr	x1, [x1]
    2f84:	str	x0, [x1]
    2f88:	bl	40d0 <grub_console_init>
    2f8c:	bl	3650 <grub_efi_mm_init>
    2f90:	adrp	x0, 0 <_start>
    2f94:	mov	x3, #0x0                   	// #0
    2f98:	mov	x2, #0x0                   	// #0
    2f9c:	mov	x1, #0x0                   	// #0
    2fa0:	ldr	x0, [x0]
    2fa4:	ldr	x0, [x0]
    2fa8:	ldr	x0, [x0, #96]
    2fac:	ldr	x4, [x0, #256]
    2fb0:	mov	x0, #0x0                   	// #0
    2fb4:	blr	x4
    2fb8:	ldp	x29, x30, [sp], #16
    2fbc:	b	14e0 <grub_efidisk_init>
	...

0000000000002fd0 <grub_machine_get_bootlocation>:
    2fd0:	stp	x29, x30, [sp, #-48]!
    2fd4:	mov	x29, sp
    2fd8:	str	x21, [sp, #32]
    2fdc:	mov	x21, x0
    2fe0:	adrp	x0, 0 <_start>
    2fe4:	stp	x19, x20, [sp, #16]
    2fe8:	mov	x20, x1
    2fec:	ldr	x0, [x0]
    2ff0:	ldr	x0, [x0]
    2ff4:	bl	1fc8 <grub_efi_get_loaded_image>
    2ff8:	cbz	x0, 3060 <grub_machine_get_bootlocation+0x90>
    2ffc:	mov	x19, x0
    3000:	ldr	x0, [x0, #24]
    3004:	bl	186c <grub_efidisk_get_device_name>
    3008:	str	x0, [x21]
    300c:	cbnz	x0, 3040 <grub_machine_get_bootlocation+0x70>
    3010:	adrp	x0, 0 <_start>
    3014:	ldr	x0, [x0]
    3018:	ldr	x3, [x0]
    301c:	cbz	x3, 3040 <grub_machine_get_bootlocation+0x70>
    3020:	mov	x2, x20
    3024:	mov	x1, x21
    3028:	ldr	x0, [x19, #24]
    302c:	mov	x16, x3
    3030:	ldp	x19, x20, [sp, #16]
    3034:	ldr	x21, [sp, #32]
    3038:	ldp	x29, x30, [sp], #48
    303c:	br	x16
    3040:	ldr	x0, [x19, #32]
    3044:	bl	23c0 <grub_efi_get_filename>
    3048:	str	x0, [x20]
    304c:	cbz	x0, 3060 <grub_machine_get_bootlocation+0x90>
    3050:	mov	w1, #0x2f                  	// #47
    3054:	bl	8628 <grub_strrchr>
    3058:	cbz	x0, 3060 <grub_machine_get_bootlocation+0x90>
    305c:	strb	wzr, [x0]
    3060:	ldp	x19, x20, [sp, #16]
    3064:	ldr	x21, [sp, #32]
    3068:	ldp	x29, x30, [sp], #48
    306c:	ret
	...

0000000000003080 <grub_efi_fini>:
    3080:	stp	x29, x30, [sp, #-16]!
    3084:	mov	x29, sp
    3088:	bl	970 <grub_efidisk_fini>
    308c:	bl	41d8 <grub_console_fini>
    3090:	ldp	x29, x30, [sp], #16
    3094:	b	3610 <grub_efi_memory_fini>

0000000000003098 <grub_efi_free_pages>:
    3098:	stp	x29, x30, [sp, #-48]!
    309c:	adrp	x2, 0 <_start>
    30a0:	mov	x29, sp
    30a4:	str	x21, [sp, #32]
    30a8:	ldr	x21, [x2]
    30ac:	stp	x19, x20, [sp, #16]
    30b0:	mov	x19, x0
    30b4:	mov	x20, x1
    30b8:	ldr	x2, [x21]
    30bc:	ldr	x2, [x2, #96]
    30c0:	ldr	x2, [x2, #48]
    30c4:	blr	x2
    30c8:	adrp	x0, 0 <_start>
    30cc:	mov	x2, #0x0                   	// #0
    30d0:	ldr	x3, [x0]
    30d4:	ldr	x0, [x3]
    30d8:	cbnz	x0, 30ec <grub_efi_free_pages+0x54>
    30dc:	ldp	x19, x20, [sp, #16]
    30e0:	ldr	x21, [sp, #32]
    30e4:	ldp	x29, x30, [sp], #48
    30e8:	ret
    30ec:	ldr	x1, [x0]
    30f0:	cmp	x19, x1
    30f4:	ldr	x1, [x0, #16]
    30f8:	b.ne	3108 <grub_efi_free_pages+0x70>  // b.any
    30fc:	ldr	x4, [x0, #8]
    3100:	cmp	x20, x4
    3104:	b.eq	3114 <grub_efi_free_pages+0x7c>  // b.none
    3108:	mov	x2, x0
    310c:	mov	x0, x1
    3110:	b	30d8 <grub_efi_free_pages+0x40>
    3114:	ldr	x4, [x21]
    3118:	ldr	x4, [x4, #96]
    311c:	cbz	x2, 313c <grub_efi_free_pages+0xa4>
    3120:	str	x1, [x2, #16]
    3124:	ldp	x19, x20, [sp, #16]
    3128:	ldr	x21, [sp, #32]
    312c:	ldp	x29, x30, [sp], #48
    3130:	ldr	x1, [x4, #72]
    3134:	mov	x16, x1
    3138:	br	x16
    313c:	str	x1, [x3]
    3140:	b	3124 <grub_efi_free_pages+0x8c>
    3144:	nop
	...

0000000000003158 <grub_efi_allocate_pages_real>:
    3158:	stp	x29, x30, [sp, #-96]!
    315c:	mov	x29, sp
    3160:	stp	x19, x20, [sp, #16]
    3164:	stp	x21, x22, [sp, #32]
    3168:	stp	x23, x24, [sp, #48]
    316c:	mov	x23, #0xffffffffffff        	// #281474976710655
    3170:	cmp	x0, x23
    3174:	str	x0, [sp, #72]
    3178:	b.ls	3194 <grub_efi_allocate_pages_real+0x3c>  // b.plast
    317c:	mov	x0, #0x0                   	// #0
    3180:	ldp	x19, x20, [sp, #16]
    3184:	ldp	x21, x22, [sp, #32]
    3188:	ldp	x23, x24, [sp, #48]
    318c:	ldp	x29, x30, [sp], #96
    3190:	ret
    3194:	adrp	x0, 0 <_start>
    3198:	mov	w20, w2
    319c:	mov	w21, w3
    31a0:	mov	x19, x1
    31a4:	ldr	x24, [x0]
    31a8:	mov	x2, x1
    31ac:	add	x3, sp, #0x48
    31b0:	mov	w1, w21
    31b4:	ldr	x0, [x24]
    31b8:	ldr	x22, [x0, #96]
    31bc:	mov	w0, w20
    31c0:	ldr	x4, [x22, #40]
    31c4:	blr	x4
    31c8:	cbnz	x0, 317c <grub_efi_allocate_pages_real+0x24>
    31cc:	ldr	x0, [sp, #72]
    31d0:	cbz	x0, 3208 <grub_efi_allocate_pages_real+0xb0>
    31d4:	ldr	x0, [x24]
    31d8:	add	x2, sp, #0x58
    31dc:	mov	x1, #0x18                  	// #24
    31e0:	ldr	x20, [sp, #72]
    31e4:	ldr	x0, [x0, #96]
    31e8:	ldr	x3, [x0, #64]
    31ec:	mov	w0, #0x2                   	// #2
    31f0:	blr	x3
    31f4:	cbz	x0, 323c <grub_efi_allocate_pages_real+0xe4>
    31f8:	adrp	x0, 0 <_start>
    31fc:	ldr	x0, [x0]
    3200:	bl	94b0 <grub_err_printf>
    3204:	b	3258 <grub_efi_allocate_pages_real+0x100>
    3208:	ldr	x4, [x22, #40]
    320c:	add	x3, sp, #0x48
    3210:	mov	x2, x19
    3214:	str	x23, [sp, #72]
    3218:	mov	w1, w21
    321c:	mov	w0, w20
    3220:	blr	x4
    3224:	mov	x20, x0
    3228:	mov	x1, x19
    322c:	mov	x0, #0x0                   	// #0
    3230:	bl	3098 <grub_efi_free_pages>
    3234:	cbz	x20, 31d4 <grub_efi_allocate_pages_real+0x7c>
    3238:	b	317c <grub_efi_allocate_pages_real+0x24>
    323c:	adrp	x1, 0 <_start>
    3240:	ldr	x0, [sp, #88]
    3244:	ldr	x1, [x1]
    3248:	stp	x20, x19, [x0]
    324c:	ldr	x2, [x1]
    3250:	str	x0, [x1]
    3254:	str	x2, [x0, #16]
    3258:	ldr	x0, [sp, #72]
    325c:	b	3180 <grub_efi_allocate_pages_real+0x28>
	...

0000000000003278 <grub_efi_allocate_any_pages>:
    3278:	mov	x1, x0
    327c:	mov	w3, #0x2                   	// #2
    3280:	mov	w2, #0x1                   	// #1
    3284:	mov	x0, #0xffffffffffff        	// #281474976710655
    3288:	b	3158 <grub_efi_allocate_pages_real>

000000000000328c <grub_efi_allocate_fixed>:
    328c:	mov	w3, #0x2                   	// #2
    3290:	mov	w2, w3
    3294:	b	3158 <grub_efi_allocate_pages_real>

0000000000003298 <grub_efi_get_memory_map>:
    3298:	stp	x29, x30, [sp, #-96]!
    329c:	mov	x29, sp
    32a0:	str	x23, [sp, #48]
    32a4:	mov	x23, x0
    32a8:	mov	x0, x1
    32ac:	adrp	x1, 0 <_start>
    32b0:	stp	x21, x22, [sp, #32]
    32b4:	mov	x21, x4
    32b8:	ldr	x22, [x1]
    32bc:	stp	x19, x20, [sp, #16]
    32c0:	mov	x20, x2
    32c4:	mov	x19, x3
    32c8:	ldr	w1, [x22, #8]
    32cc:	cbz	w1, 3338 <grub_efi_get_memory_map+0xa0>
    32d0:	ldp	x2, x1, [x22, #16]
    32d4:	ldr	x3, [x23]
    32d8:	cmp	x3, x2
    32dc:	b.cs	332c <grub_efi_get_memory_map+0x94>  // b.hs, b.nlast
    32e0:	mov	x2, x3
    32e4:	bl	84a4 <grub_memmove>
    32e8:	mov	w0, #0x0                   	// #0
    32ec:	ldr	x1, [x22, #16]
    32f0:	str	x1, [x23]
    32f4:	cbz	x20, 3300 <grub_efi_get_memory_map+0x68>
    32f8:	ldr	x1, [x22, #32]
    32fc:	str	x1, [x20]
    3300:	cbz	x19, 330c <grub_efi_get_memory_map+0x74>
    3304:	ldr	x1, [x22, #40]
    3308:	str	x1, [x19]
    330c:	cbz	x21, 3318 <grub_efi_get_memory_map+0x80>
    3310:	ldr	w1, [x22, #48]
    3314:	str	w1, [x21]
    3318:	ldp	x19, x20, [sp, #16]
    331c:	ldp	x21, x22, [sp, #32]
    3320:	ldr	x23, [sp, #48]
    3324:	ldp	x29, x30, [sp], #96
    3328:	ret
    332c:	bl	84a4 <grub_memmove>
    3330:	mov	w0, #0x1                   	// #1
    3334:	b	32ec <grub_efi_get_memory_map+0x54>
    3338:	cbnz	x2, 3340 <grub_efi_get_memory_map+0xa8>
    333c:	add	x20, sp, #0x50
    3340:	cbnz	x21, 3348 <grub_efi_get_memory_map+0xb0>
    3344:	add	x21, sp, #0x4c
    3348:	cbnz	x19, 3350 <grub_efi_get_memory_map+0xb8>
    334c:	add	x19, sp, #0x58
    3350:	adrp	x1, 0 <_start>
    3354:	mov	x4, x21
    3358:	mov	x3, x19
    335c:	mov	x2, x20
    3360:	ldr	x1, [x1]
    3364:	ldr	x1, [x1]
    3368:	ldr	x1, [x1, #96]
    336c:	ldr	x5, [x1, #56]
    3370:	mov	x1, x0
    3374:	mov	x0, x23
    3378:	blr	x5
    337c:	ldr	x1, [x19]
    3380:	cbnz	x1, 338c <grub_efi_get_memory_map+0xf4>
    3384:	mov	x1, #0x28                  	// #40
    3388:	str	x1, [x19]
    338c:	cbz	x0, 33a4 <grub_efi_get_memory_map+0x10c>
    3390:	mov	x1, #0x5                   	// #5
    3394:	movk	x1, #0x8000, lsl #48
    3398:	cmp	x0, x1
    339c:	csetm	w0, ne  // ne = any
    33a0:	b	3318 <grub_efi_get_memory_map+0x80>
    33a4:	mov	w0, #0x1                   	// #1
    33a8:	b	3318 <grub_efi_get_memory_map+0x80>
    33ac:	nop
	...

00000000000033c0 <grub_efi_finish_boot_services>:
    33c0:	stp	x29, x30, [sp, #-96]!
    33c4:	mov	x29, sp
    33c8:	stp	x19, x20, [sp, #16]
    33cc:	mov	x20, x0
    33d0:	mov	x19, x1
    33d4:	stp	x21, x22, [sp, #32]
    33d8:	mov	x22, x3
    33dc:	mov	x21, x4
    33e0:	stp	x23, x24, [sp, #48]
    33e4:	mov	x23, x2
    33e8:	stp	x27, x28, [sp, #80]
    33ec:	mov	x28, #0x2                   	// #2
    33f0:	adrp	x27, 0 <_start>
    33f4:	movk	x28, #0x8000, lsl #48
    33f8:	stp	x25, x26, [sp, #64]
    33fc:	adrp	x25, 0 <_start>
    3400:	adrp	x26, 0 <_start>
    3404:	ldr	x24, [x25]
    3408:	add	x4, x24, #0x30
    340c:	add	x3, x24, #0x28
    3410:	ldr	x1, [x24, #24]
    3414:	add	x2, x24, #0x20
    3418:	add	x0, x24, #0x10
    341c:	bl	3298 <grub_efi_get_memory_map>
    3420:	tbz	w0, #31, 3430 <grub_efi_finish_boot_services+0x70>
    3424:	adrp	x0, 0 <_start>
    3428:	ldr	x1, [x0]
    342c:	b	344c <grub_efi_finish_boot_services+0x8c>
    3430:	ldr	x0, [x24, #16]
    3434:	cbz	x19, 346c <grub_efi_finish_boot_services+0xac>
    3438:	ldr	x1, [x20]
    343c:	cmp	x1, x0
    3440:	b.cs	346c <grub_efi_finish_boot_services+0xac>  // b.hs, b.nlast
    3444:	adrp	x0, 0 <_start>
    3448:	ldr	x1, [x0]
    344c:	mov	w0, #0x1d                  	// #29
    3450:	ldp	x19, x20, [sp, #16]
    3454:	ldp	x21, x22, [sp, #32]
    3458:	ldp	x23, x24, [sp, #48]
    345c:	ldp	x25, x26, [sp, #64]
    3460:	ldp	x27, x28, [sp, #80]
    3464:	ldp	x29, x30, [sp], #96
    3468:	b	7300 <grub_error>
    346c:	bl	47f8 <grub_malloc>
    3470:	str	x0, [x24, #24]
    3474:	mov	x1, x0
    3478:	cbnz	x0, 34a4 <grub_efi_finish_boot_services+0xe4>
    347c:	adrp	x0, 0 <_start>
    3480:	ldr	x0, [x0]
    3484:	ldr	w0, [x0]
    3488:	ldp	x19, x20, [sp, #16]
    348c:	ldp	x21, x22, [sp, #32]
    3490:	ldp	x23, x24, [sp, #48]
    3494:	ldp	x25, x26, [sp, #64]
    3498:	ldp	x27, x28, [sp, #80]
    349c:	ldp	x29, x30, [sp], #96
    34a0:	ret
    34a4:	add	x4, x24, #0x30
    34a8:	add	x3, x24, #0x28
    34ac:	add	x2, x24, #0x20
    34b0:	add	x0, x24, #0x10
    34b4:	bl	3298 <grub_efi_get_memory_map>
    34b8:	cmp	w0, #0x0
    34bc:	b.gt	34cc <grub_efi_finish_boot_services+0x10c>
    34c0:	ldr	x0, [x24, #24]
    34c4:	bl	4844 <grub_free>
    34c8:	b	3424 <grub_efi_finish_boot_services+0x64>
    34cc:	ldr	x1, [x27]
    34d0:	ldr	x0, [x26]
    34d4:	ldr	x1, [x1]
    34d8:	ldr	x0, [x0]
    34dc:	ldr	x1, [x1, #96]
    34e0:	ldr	x2, [x1, #232]
    34e4:	ldr	x1, [x24, #32]
    34e8:	blr	x2
    34ec:	cbz	x0, 3520 <grub_efi_finish_boot_services+0x160>
    34f0:	cmp	x0, x28
    34f4:	ldr	x0, [x24, #24]
    34f8:	b.eq	350c <grub_efi_finish_boot_services+0x14c>  // b.none
    34fc:	bl	4844 <grub_free>
    3500:	adrp	x0, 0 <_start>
    3504:	ldr	x1, [x0]
    3508:	b	344c <grub_efi_finish_boot_services+0x8c>
    350c:	bl	4844 <grub_free>
    3510:	adrp	x0, 0 <_start>
    3514:	ldr	x0, [x0]
    3518:	bl	94b0 <grub_err_printf>
    351c:	b	3404 <grub_efi_finish_boot_services+0x44>
    3520:	mov	w0, #0x1                   	// #1
    3524:	str	w0, [x24, #8]
    3528:	cbz	x20, 3534 <grub_efi_finish_boot_services+0x174>
    352c:	ldr	x0, [x24, #16]
    3530:	str	x0, [x20]
    3534:	cbz	x19, 3544 <grub_efi_finish_boot_services+0x184>
    3538:	ldp	x2, x1, [x24, #16]
    353c:	mov	x0, x19
    3540:	bl	84a4 <grub_memmove>
    3544:	cbz	x23, 3550 <grub_efi_finish_boot_services+0x190>
    3548:	ldr	x0, [x24, #32]
    354c:	str	x0, [x23]
    3550:	cbz	x22, 355c <grub_efi_finish_boot_services+0x19c>
    3554:	ldr	x0, [x24, #40]
    3558:	str	x0, [x22]
    355c:	cbz	x21, 3568 <grub_efi_finish_boot_services+0x1a8>
    3560:	ldr	w0, [x24, #48]
    3564:	str	w0, [x21]
    3568:	mov	w0, #0x0                   	// #0
    356c:	b	3488 <grub_efi_finish_boot_services+0xc8>
	...

00000000000035b0 <grub_efi_find_mmap_size>:
    35b0:	stp	x29, x30, [sp, #-32]!
    35b4:	mov	x4, #0x0                   	// #0
    35b8:	mov	x2, #0x0                   	// #0
    35bc:	mov	x29, sp
    35c0:	add	x3, sp, #0x18
    35c4:	add	x0, sp, #0x10
    35c8:	mov	x1, #0x0                   	// #0
    35cc:	str	xzr, [sp, #16]
    35d0:	bl	3298 <grub_efi_get_memory_map>
    35d4:	tbz	w0, #31, 35f4 <grub_efi_find_mmap_size+0x44>
    35d8:	adrp	x0, 0 <_start>
    35dc:	ldr	x1, [x0]
    35e0:	mov	w0, #0x1d                  	// #29
    35e4:	bl	7300 <grub_error>
    35e8:	mov	x0, #0x0                   	// #0
    35ec:	ldp	x29, x30, [sp], #32
    35f0:	ret
    35f4:	ldr	x0, [sp, #16]
    35f8:	mov	x1, #0x1fff                	// #8191
    35fc:	add	x0, x0, x1
    3600:	and	x0, x0, #0xfffffffffffff000
    3604:	b	35ec <grub_efi_find_mmap_size+0x3c>
	...

0000000000003610 <grub_efi_memory_fini>:
    3610:	stp	x29, x30, [sp, #-32]!
    3614:	mov	x29, sp
    3618:	str	x19, [sp, #16]
    361c:	adrp	x19, 0 <_start>
    3620:	ldr	x0, [x19]
    3624:	ldr	x0, [x0]
    3628:	cbnz	x0, 3638 <grub_efi_memory_fini+0x28>
    362c:	ldr	x19, [sp, #16]
    3630:	ldp	x29, x30, [sp], #32
    3634:	ret
    3638:	ldr	x1, [x0, #8]
    363c:	ldr	x0, [x0]
    3640:	bl	3098 <grub_efi_free_pages>
    3644:	b	3620 <grub_efi_memory_fini+0x10>
	...

0000000000003650 <grub_efi_mm_init>:
    3650:	stp	x29, x30, [sp, #-160]!
    3654:	mov	x0, #0x6                   	// #6
    3658:	mov	x29, sp
    365c:	stp	x19, x20, [sp, #16]
    3660:	stp	x21, x22, [sp, #32]
    3664:	stp	x23, x24, [sp, #48]
    3668:	stp	x25, x26, [sp, #64]
    366c:	stp	x27, x28, [sp, #80]
    3670:	bl	3278 <grub_efi_allocate_any_pages>
    3674:	cbnz	x0, 3684 <grub_efi_mm_init+0x34>
    3678:	adrp	x0, 0 <_start>
    367c:	ldr	x0, [x0]
    3680:	bl	97fc <grub_fatal>
    3684:	mov	x21, x0
    3688:	mov	x0, #0x3000                	// #12288
    368c:	add	x3, sp, #0x70
    3690:	mov	x1, x21
    3694:	mov	x4, #0x0                   	// #0
    3698:	mov	x2, #0x0                   	// #0
    369c:	str	x0, [sp, #104]
    36a0:	add	x0, sp, #0x68
    36a4:	bl	3298 <grub_efi_get_memory_map>
    36a8:	cbnz	w0, 36f4 <grub_efi_mm_init+0xa4>
    36ac:	mov	x0, x21
    36b0:	mov	x1, #0x6                   	// #6
    36b4:	bl	3098 <grub_efi_free_pages>
    36b8:	ldp	x1, x0, [sp, #104]
    36bc:	add	x0, x1, x0, lsl #5
    36c0:	str	x0, [sp, #104]
    36c4:	add	x0, x0, #0xfff
    36c8:	lsr	x0, x0, #12
    36cc:	lsl	x0, x0, #1
    36d0:	bl	3278 <grub_efi_allocate_any_pages>
    36d4:	mov	x21, x0
    36d8:	cbz	x0, 3678 <grub_efi_mm_init+0x28>
    36dc:	mov	x1, x0
    36e0:	add	x3, sp, #0x70
    36e4:	add	x0, sp, #0x68
    36e8:	mov	x4, #0x0                   	// #0
    36ec:	mov	x2, #0x0                   	// #0
    36f0:	bl	3298 <grub_efi_get_memory_map>
    36f4:	tbz	w0, #31, 3704 <grub_efi_mm_init+0xb4>
    36f8:	adrp	x0, 0 <_start>
    36fc:	ldr	x0, [x0]
    3700:	b	3680 <grub_efi_mm_init+0x30>
    3704:	ldp	x22, x20, [sp, #104]
    3708:	mov	x27, #0xfff                 	// #4095
    370c:	mov	x19, x21
    3710:	mov	x25, #0xffffffffffff        	// #281474976710655
    3714:	mov	x26, #0xfffff               	// #1048575
    3718:	mov	x24, #0xfffffffff           	// #68719476735
    371c:	movk	x27, #0x10, lsl #16
    3720:	mov	x28, #0x100000              	// #1048576
    3724:	add	x22, x21, x22
    3728:	mov	x23, x22
    372c:	cmp	x22, x19
    3730:	b.hi	3790 <grub_efi_mm_init+0x140>  // b.pmore
    3734:	ldr	x24, [sp, #112]
    3738:	mov	x0, x22
    373c:	mov	x19, #0x0                   	// #0
    3740:	cmp	x0, x23
    3744:	b.cc	3824 <grub_efi_mm_init+0x1d4>  // b.lo, b.ul, b.last
    3748:	lsr	x19, x19, #2
    374c:	mov	x0, #0x4000                	// #16384
    3750:	cmp	x19, #0x64, lsl #12
    3754:	movk	x0, #0x6, lsl #16
    3758:	csel	x19, x19, x0, ls  // ls = plast
    375c:	mov	x4, x22
    3760:	cmp	x19, #0x100
    3764:	mov	x0, #0x100                 	// #256
    3768:	csel	x19, x19, x0, cs  // cs = hs, nlast
    376c:	mov	x0, x4
    3770:	cmp	x23, x4
    3774:	b.hi	3834 <grub_efi_mm_init+0x1e4>  // b.pmore
    3778:	cmp	x23, x22
    377c:	b.hi	38a8 <grub_efi_mm_init+0x258>  // b.pmore
    3780:	cbz	x19, 3908 <grub_efi_mm_init+0x2b8>
    3784:	adrp	x0, 0 <_start>
    3788:	ldr	x0, [x0]
    378c:	b	3680 <grub_efi_mm_init+0x30>
    3790:	ldr	w0, [x19]
    3794:	cmp	w0, #0x7
    3798:	b.ne	381c <grub_efi_mm_init+0x1cc>  // b.any
    379c:	ldr	x0, [x19, #8]
    37a0:	cmp	x0, x25
    37a4:	b.hi	381c <grub_efi_mm_init+0x1cc>  // b.pmore
    37a8:	ldr	x1, [x19, #24]
    37ac:	add	x0, x0, x1, lsl #12
    37b0:	cmp	x0, #0x100, lsl #12
    37b4:	b.ls	381c <grub_efi_mm_init+0x1cc>  // b.plast
    37b8:	cbz	x1, 381c <grub_efi_mm_init+0x1cc>
    37bc:	mov	x2, x20
    37c0:	mov	x1, x19
    37c4:	mov	x0, x23
    37c8:	bl	84a4 <grub_memmove>
    37cc:	ldr	x0, [x19, #8]
    37d0:	cmp	x0, x26
    37d4:	b.hi	37ec <grub_efi_mm_init+0x19c>  // b.pmore
    37d8:	ldr	x1, [x19, #24]
    37dc:	sub	x0, x27, x0
    37e0:	str	x28, [x19, #8]
    37e4:	sub	x0, x1, x0, lsr #12
    37e8:	str	x0, [x19, #24]
    37ec:	ldr	x0, [x23, #8]
    37f0:	ldr	x2, [x23, #24]
    37f4:	add	x0, x0, #0xfff
    37f8:	lsr	x1, x0, #12
    37fc:	add	x0, x2, x0, lsr #12
    3800:	cmp	x0, x24
    3804:	b.ls	3810 <grub_efi_mm_init+0x1c0>  // b.plast
    3808:	sub	x0, x24, x1
    380c:	str	x0, [x23, #24]
    3810:	ldr	x0, [x23, #24]
    3814:	cbz	x0, 381c <grub_efi_mm_init+0x1cc>
    3818:	add	x23, x23, x20
    381c:	add	x19, x19, x20
    3820:	b	372c <grub_efi_mm_init+0xdc>
    3824:	ldr	x1, [x0, #24]
    3828:	add	x0, x0, x24
    382c:	add	x19, x19, x1
    3830:	b	3740 <grub_efi_mm_init+0xf0>
    3834:	add	x4, x4, x24
    3838:	mov	x1, x0
    383c:	mov	x2, x4
    3840:	cmp	x23, x2
    3844:	b.hi	3890 <grub_efi_mm_init+0x240>  // b.pmore
    3848:	cmp	x0, x1
    384c:	b.eq	376c <grub_efi_mm_init+0x11c>  // b.none
    3850:	ldp	x2, x3, [x1]
    3854:	ldp	x8, x9, [x0]
    3858:	stp	x2, x3, [x0]
    385c:	ldp	x2, x3, [x1, #16]
    3860:	stp	x8, x9, [sp, #120]
    3864:	ldp	x6, x7, [x0, #16]
    3868:	stp	x2, x3, [x0, #16]
    386c:	ldr	x2, [x1, #32]
    3870:	stp	x6, x7, [sp, #136]
    3874:	ldr	x5, [x0, #32]
    3878:	str	x2, [x0, #32]
    387c:	stp	x8, x9, [x1]
    3880:	stp	x6, x7, [x1, #16]
    3884:	str	x5, [x1, #32]
    3888:	str	x5, [sp, #152]
    388c:	b	376c <grub_efi_mm_init+0x11c>
    3890:	ldr	x5, [x1, #24]
    3894:	ldr	x3, [x2, #24]
    3898:	cmp	x5, x3
    389c:	csel	x1, x1, x2, cs  // cs = hs, nlast
    38a0:	add	x2, x2, x24
    38a4:	b	3840 <grub_efi_mm_init+0x1f0>
    38a8:	ldr	x20, [x22, #24]
    38ac:	ldr	x25, [x22, #8]
    38b0:	cmp	x20, x19
    38b4:	b.ls	38c4 <grub_efi_mm_init+0x274>  // b.plast
    38b8:	sub	x20, x20, x19
    38bc:	add	x25, x25, x20, lsl #12
    38c0:	mov	x20, x19
    38c4:	mov	x1, x20
    38c8:	mov	x0, x25
    38cc:	mov	w3, #0x1                   	// #1
    38d0:	mov	w2, #0x2                   	// #2
    38d4:	bl	3158 <grub_efi_allocate_pages_real>
    38d8:	cbnz	x0, 38f0 <grub_efi_mm_init+0x2a0>
    38dc:	adrp	x0, 0 <_start>
    38e0:	mov	w2, w20
    38e4:	mov	x1, x25
    38e8:	ldr	x0, [x0]
    38ec:	bl	97fc <grub_fatal>
    38f0:	lsl	x1, x20, #12
    38f4:	bl	4990 <grub_mm_init_region>
    38f8:	subs	x19, x19, x20
    38fc:	b.eq	3908 <grub_efi_mm_init+0x2b8>  // b.none
    3900:	add	x22, x22, x24
    3904:	b	3778 <grub_efi_mm_init+0x128>
    3908:	mov	x0, x21
    390c:	mov	x1, #0x6                   	// #6
    3910:	bl	3098 <grub_efi_free_pages>
    3914:	ldp	x19, x20, [sp, #16]
    3918:	ldp	x21, x22, [sp, #32]
    391c:	ldp	x23, x24, [sp, #48]
    3920:	ldp	x25, x26, [sp, #64]
    3924:	ldp	x27, x28, [sp, #80]
    3928:	ldp	x29, x30, [sp], #160
    392c:	ret
	...

0000000000003950 <grub_efi_get_ram_base>:
    3950:	stp	x29, x30, [sp, #-48]!
    3954:	mov	x29, sp
    3958:	stp	x19, x20, [sp, #16]
    395c:	mov	x20, x0
    3960:	bl	35b0 <grub_efi_find_mmap_size>
    3964:	str	x0, [sp, #32]
    3968:	bl	47f8 <grub_malloc>
    396c:	cbz	x0, 39ec <grub_efi_get_ram_base+0x9c>
    3970:	mov	x1, x0
    3974:	mov	x19, x0
    3978:	add	x3, sp, #0x28
    397c:	add	x0, sp, #0x20
    3980:	mov	x4, #0x0                   	// #0
    3984:	mov	x2, #0x0                   	// #0
    3988:	bl	3298 <grub_efi_get_memory_map>
    398c:	cmp	w0, #0x0
    3990:	b.le	39f4 <grub_efi_get_ram_base+0xa4>
    3994:	ldp	x2, x4, [sp, #32]
    3998:	mov	x1, x19
    399c:	mov	x0, #0xffffffffffff        	// #281474976710655
    39a0:	str	x0, [x20]
    39a4:	add	x2, x19, x2
    39a8:	cmp	x1, x2
    39ac:	b.cc	39c8 <grub_efi_get_ram_base+0x78>  // b.lo, b.ul, b.last
    39b0:	mov	x0, x19
    39b4:	bl	4844 <grub_free>
    39b8:	mov	w0, #0x0                   	// #0
    39bc:	ldp	x19, x20, [sp, #16]
    39c0:	ldp	x29, x30, [sp], #48
    39c4:	ret
    39c8:	ldr	x0, [x1, #32]
    39cc:	tbz	w0, #3, 39e4 <grub_efi_get_ram_base+0x94>
    39d0:	ldr	x3, [x20]
    39d4:	ldr	x0, [x1, #8]
    39d8:	cmp	x0, x3
    39dc:	csel	x0, x0, x3, ls  // ls = plast
    39e0:	str	x0, [x20]
    39e4:	add	x1, x1, x4
    39e8:	b	39a8 <grub_efi_get_ram_base+0x58>
    39ec:	mov	w0, #0x3                   	// #3
    39f0:	b	39bc <grub_efi_get_ram_base+0x6c>
    39f4:	mov	w0, #0x26                  	// #38
    39f8:	b	39bc <grub_efi_get_ram_base+0x6c>
    39fc:	nop
    3a00:	adrp	x0, 0 <_start>
    3a04:	ldr	x0, [x0]
    3a08:	ldr	w0, [x0]
    3a0c:	cbnz	w0, 3bec <grub_efi_get_ram_base+0x29c>
    3a10:	stp	x29, x30, [sp, #-96]!
    3a14:	adrp	x0, 0 <_start>
    3a18:	mov	w2, #0xffff                	// #65535
    3a1c:	mov	x29, sp
    3a20:	ldr	x0, [x0]
    3a24:	stp	x19, x20, [sp, #16]
    3a28:	ldr	x0, [x0]
    3a2c:	ldr	x19, [x0, #64]
    3a30:	ldr	w0, [x1]
    3a34:	ubfx	x0, x0, #0, #23
    3a38:	cmp	w0, w2
    3a3c:	b.ls	3ab0 <grub_efi_get_ram_base+0x160>  // b.plast
    3a40:	mov	w2, #0x3f                  	// #63
    3a44:	ldrh	w4, [x1, #6]
    3a48:	add	x10, sp, #0x20
    3a4c:	add	x11, x1, #0x18
    3a50:	mov	x3, #0x0                   	// #0
    3a54:	and	w9, w4, #0x7f8
    3a58:	mov	w8, #0xfffe                	// #65534
    3a5c:	ubfx	x7, x4, #3, #8
    3a60:	strh	w2, [sp, #32]
    3a64:	mov	w2, #0x1                   	// #1
    3a68:	cmp	w7, w3
    3a6c:	b.ls	3a7c <grub_efi_get_ram_base+0x12c>  // b.plast
    3a70:	add	w6, w2, #0x1
    3a74:	cmp	w6, #0x1f
    3a78:	b.ls	3b98 <grub_efi_get_ram_base+0x248>  // b.plast
    3a7c:	add	x20, sp, #0x20
    3a80:	cmp	w0, #0x7f
    3a84:	strh	wzr, [x20, w2, uxtw #1]
    3a88:	b.hi	3bd4 <grub_efi_get_ram_base+0x284>  // b.pmore
    3a8c:	tst	w4, #0x7f8
    3a90:	b.ne	3bd4 <grub_efi_get_ram_base+0x284>  // b.any
    3a94:	ldr	x2, [x19, #8]
    3a98:	mov	x1, x20
    3a9c:	mov	x0, x19
    3aa0:	blr	x2
    3aa4:	ldp	x19, x20, [sp, #16]
    3aa8:	ldp	x29, x30, [sp], #96
    3aac:	ret
    3ab0:	mov	w2, #0x2503                	// #9475
    3ab4:	cmp	w0, w2
    3ab8:	b.eq	3b70 <grub_efi_get_ram_base+0x220>  // b.none
    3abc:	b.hi	3b1c <grub_efi_get_ram_base+0x1cc>  // b.pmore
    3ac0:	mov	w2, #0x2193                	// #8595
    3ac4:	cmp	w0, w2
    3ac8:	b.hi	3b08 <grub_efi_get_ram_base+0x1b8>  // b.pmore
    3acc:	mov	w2, #0x218f                	// #8591
    3ad0:	cmp	w0, w2
    3ad4:	b.ls	3b14 <grub_efi_get_ram_base+0x1c4>  // b.plast
    3ad8:	mov	w2, #0xffffde6f            	// #-8593
    3adc:	add	w2, w0, w2
    3ae0:	cmp	w2, #0x2
    3ae4:	b.hi	3b00 <grub_efi_get_ram_base+0x1b0>  // b.pmore
    3ae8:	adrp	x3, 0 <_start>
    3aec:	ldr	x3, [x3]
    3af0:	ldrb	w2, [x3, w2, uxtw]
    3af4:	adr	x3, 3b00 <grub_efi_get_ram_base+0x1b0>
    3af8:	add	x2, x3, w2, sxtb #2
    3afc:	br	x2
    3b00:	mov	w2, #0x25c4                	// #9668
    3b04:	b	3a44 <grub_efi_get_ram_base+0xf4>
    3b08:	mov	w2, #0x2501                	// #9473
    3b0c:	cmp	w0, w2
    3b10:	b.eq	3b80 <grub_efi_get_ram_base+0x230>  // b.none
    3b14:	mov	w2, w0
    3b18:	b	3a44 <grub_efi_get_ram_base+0xf4>
    3b1c:	mov	w2, #0x2517                	// #9495
    3b20:	cmp	w0, w2
    3b24:	b.eq	3b88 <grub_efi_get_ram_base+0x238>  // b.none
    3b28:	b.hi	3b4c <grub_efi_get_ram_base+0x1fc>  // b.pmore
    3b2c:	mov	w2, #0x250f                	// #9487
    3b30:	cmp	w0, w2
    3b34:	b.eq	3b90 <grub_efi_get_ram_base+0x240>  // b.none
    3b38:	mov	w3, #0x2513                	// #9491
    3b3c:	mov	w2, #0x2510                	// #9488
    3b40:	cmp	w0, w3
    3b44:	b.eq	3a44 <grub_efi_get_ram_base+0xf4>  // b.none
    3b48:	b	3b14 <grub_efi_get_ram_base+0x1c4>
    3b4c:	mov	w2, #0x251b                	// #9499
    3b50:	cmp	w0, w2
    3b54:	b.ne	3b14 <grub_efi_get_ram_base+0x1c4>  // b.any
    3b58:	mov	w2, #0x2518                	// #9496
    3b5c:	b	3a44 <grub_efi_get_ram_base+0xf4>
    3b60:	mov	w2, #0x25ba                	// #9658
    3b64:	b	3a44 <grub_efi_get_ram_base+0xf4>
    3b68:	mov	w2, #0x25bc                	// #9660
    3b6c:	b	3a44 <grub_efi_get_ram_base+0xf4>
    3b70:	mov	w2, #0x2502                	// #9474
    3b74:	b	3a44 <grub_efi_get_ram_base+0xf4>
    3b78:	mov	w2, #0x25b2                	// #9650
    3b7c:	b	3a44 <grub_efi_get_ram_base+0xf4>
    3b80:	mov	w2, #0x2500                	// #9472
    3b84:	b	3a44 <grub_efi_get_ram_base+0xf4>
    3b88:	mov	w2, #0x2514                	// #9492
    3b8c:	b	3a44 <grub_efi_get_ram_base+0xf4>
    3b90:	mov	w2, #0x250c                	// #9484
    3b94:	b	3a44 <grub_efi_get_ram_base+0xf4>
    3b98:	cmp	w0, w8
    3b9c:	b.hi	3bbc <grub_efi_get_ram_base+0x26c>  // b.pmore
    3ba0:	cbz	w9, 3bcc <grub_efi_get_ram_base+0x27c>
    3ba4:	cmp	w7, #0x2
    3ba8:	b.ls	3bc4 <grub_efi_get_ram_base+0x274>  // b.plast
    3bac:	ldr	x5, [x1, #24]
    3bb0:	ldr	w5, [x5, x3, lsl #2]
    3bb4:	strh	w5, [x10, w2, uxtw #1]
    3bb8:	mov	w2, w6
    3bbc:	add	x3, x3, #0x1
    3bc0:	b	3a68 <grub_efi_get_ram_base+0x118>
    3bc4:	mov	x5, x11
    3bc8:	b	3bb0 <grub_efi_get_ram_base+0x260>
    3bcc:	mov	x5, #0x0                   	// #0
    3bd0:	b	3bb0 <grub_efi_get_ram_base+0x260>
    3bd4:	ldr	x2, [x19, #16]
    3bd8:	mov	x1, x20
    3bdc:	mov	x0, x19
    3be0:	blr	x2
    3be4:	cbz	x0, 3a94 <grub_efi_get_ram_base+0x144>
    3be8:	b	3aa4 <grub_efi_get_ram_base+0x154>
    3bec:	ret
	...
    3c08:	mov	w1, w0
    3c0c:	lsr	w0, w0, #16
    3c10:	ands	w1, w1, #0xffff
    3c14:	b.ne	3c50 <grub_efi_get_ram_base+0x300>  // b.any
    3c18:	sub	w1, w0, #0x1
    3c1c:	and	w1, w1, #0xffff
    3c20:	cmp	w1, #0x1e
    3c24:	b.hi	3c4c <grub_efi_get_ram_base+0x2fc>  // b.pmore
    3c28:	sub	w1, w0, #0x8
    3c2c:	and	w1, w1, #0xffff
    3c30:	cmp	w1, #0x2
    3c34:	b.ls	3c4c <grub_efi_get_ram_base+0x2fc>  // b.plast
    3c38:	add	w1, w0, #0x60
    3c3c:	cmp	w0, #0xd
    3c40:	orr	w1, w1, #0x2000000
    3c44:	mov	w0, #0xd                   	// #13
    3c48:	csel	w0, w1, w0, ne  // ne = any
    3c4c:	ret
    3c50:	cmp	w1, #0xd
    3c54:	b.ne	3c70 <grub_efi_get_ram_base+0x320>  // b.any
    3c58:	cmp	w0, #0xd
    3c5c:	b.eq	3c4c <grub_efi_get_ram_base+0x2fc>  // b.none
    3c60:	adrp	x0, 0 <_start>
    3c64:	ldr	x0, [x0]
    3c68:	ldr	w0, [x0, w1, sxtw #2]
    3c6c:	b	3c4c <grub_efi_get_ram_base+0x2fc>
    3c70:	cmp	w1, #0x17
    3c74:	b.ls	3c60 <grub_efi_get_ram_base+0x310>  // b.plast
    3c78:	sub	w1, w0, #0x20
    3c7c:	and	w1, w1, #0xffff
    3c80:	cmp	w1, #0x5f
    3c84:	b.ls	3c4c <grub_efi_get_ram_base+0x2fc>  // b.plast
    3c88:	sub	w1, w0, #0x8
    3c8c:	and	w1, w1, #0xffff
    3c90:	cmp	w1, #0x2
    3c94:	b.ls	3c4c <grub_efi_get_ram_base+0x2fc>  // b.plast
    3c98:	cmp	w0, #0xd
    3c9c:	b.eq	3c4c <grub_efi_get_ram_base+0x2fc>  // b.none
    3ca0:	mov	w0, #0x0                   	// #0
    3ca4:	b	3c4c <grub_efi_get_ram_base+0x2fc>
	...
    3cb0:	stp	x29, x30, [sp, #-32]!
    3cb4:	adrp	x0, 0 <_start>
    3cb8:	mov	x29, sp
    3cbc:	ldr	x0, [x0]
    3cc0:	ldr	w0, [x0]
    3cc4:	cbz	w0, 3cec <grub_efi_get_ram_base+0x39c>
    3cc8:	mov	x0, #0x50                  	// #80
    3ccc:	str	x0, [sp, #16]
    3cd0:	mov	x0, #0x19                  	// #25
    3cd4:	str	x0, [sp, #24]
    3cd8:	ldr	x0, [sp, #16]
    3cdc:	ldrh	w1, [sp, #24]
    3ce0:	ldp	x29, x30, [sp], #32
    3ce4:	bfi	w0, w1, #16, #16
    3ce8:	ret
    3cec:	adrp	x0, 0 <_start>
    3cf0:	add	x3, sp, #0x18
    3cf4:	add	x2, sp, #0x10
    3cf8:	ldr	x0, [x0]
    3cfc:	ldr	x0, [x0]
    3d00:	ldr	x0, [x0, #64]
    3d04:	ldr	x1, [x0, #72]
    3d08:	ldr	x4, [x0, #24]
    3d0c:	ldrsw	x1, [x1, #4]
    3d10:	blr	x4
    3d14:	cbnz	x0, 3cc8 <grub_efi_get_ram_base+0x378>
    3d18:	b	3cd8 <grub_efi_get_ram_base+0x388>
    3d1c:	nop
	...
    3d30:	adrp	x0, 0 <_start>
    3d34:	ldr	x0, [x0]
    3d38:	ldr	w0, [x0]
    3d3c:	cbnz	w0, 3d64 <grub_efi_get_ram_base+0x414>
    3d40:	adrp	x0, 0 <_start>
    3d44:	lsr	w2, w1, #16
    3d48:	and	x1, x1, #0xffff
    3d4c:	ldr	x0, [x0]
    3d50:	ldr	x0, [x0]
    3d54:	ldr	x0, [x0, #64]
    3d58:	ldr	x3, [x0, #56]
    3d5c:	mov	x16, x3
    3d60:	br	x16
    3d64:	ret
	...
    3d78:	stp	x29, x30, [sp, #-48]!
    3d7c:	mov	x29, sp
    3d80:	str	x19, [sp, #16]
    3d84:	mov	x19, x0
    3d88:	mov	x0, #0x7534                	// #30004
    3d8c:	movk	x0, #0xdd9e, lsl #16
    3d90:	movk	x0, #0x7762, lsl #32
    3d94:	movk	x0, #0x4698, lsl #48
    3d98:	str	x0, [sp, #32]
    3d9c:	mov	x0, #0x148c                	// #5260
    3da0:	movk	x0, #0x85f5, lsl #16
    3da4:	movk	x0, #0xa617, lsl #32
    3da8:	movk	x0, #0xaa25, lsl #48
    3dac:	str	x0, [sp, #40]
    3db0:	adrp	x0, 0 <_start>
    3db4:	ldr	x0, [x0]
    3db8:	ldr	w0, [x0]
    3dbc:	cbnz	w0, 3de8 <grub_efi_get_ram_base+0x498>
    3dc0:	ldr	x0, [x19, #56]
    3dc4:	cbnz	x0, 3de8 <grub_efi_get_ram_base+0x498>
    3dc8:	adrp	x0, 0 <_start>
    3dcc:	add	x1, sp, #0x20
    3dd0:	mov	w2, #0x2                   	// #2
    3dd4:	ldr	x0, [x0]
    3dd8:	ldr	x0, [x0]
    3ddc:	ldr	x0, [x0, #40]
    3de0:	bl	1eb0 <grub_efi_open_protocol>
    3de4:	str	x0, [x19, #56]
    3de8:	mov	w0, #0x0                   	// #0
    3dec:	ldr	x19, [sp, #16]
    3df0:	ldp	x29, x30, [sp], #48
    3df4:	ret
	...
    3e08:	stp	x29, x30, [sp, #-48]!
    3e0c:	adrp	x1, 0 <_start>
    3e10:	mov	x29, sp
    3e14:	ldr	x1, [x1]
    3e18:	str	x19, [sp, #16]
    3e1c:	ldr	w19, [x1]
    3e20:	cbnz	w19, 3eb8 <grub_efi_get_ram_base+0x568>
    3e24:	ldr	x0, [x0, #56]
    3e28:	cbz	x0, 3e88 <grub_efi_get_ram_base+0x538>
    3e2c:	ldr	x2, [x0, #8]
    3e30:	add	x1, sp, #0x20
    3e34:	blr	x2
    3e38:	cbnz	x0, 3e78 <grub_efi_get_ram_base+0x528>
    3e3c:	ldp	w0, w2, [sp, #32]
    3e40:	bl	3c08 <grub_efi_get_ram_base+0x2b8>
    3e44:	mov	w19, w0
    3e48:	cbz	w0, 3e78 <grub_efi_get_ram_base+0x528>
    3e4c:	tbz	w2, #31, 3e78 <grub_efi_get_ram_base+0x528>
    3e50:	tst	x2, #0x3
    3e54:	b.eq	3e60 <grub_efi_get_ram_base+0x510>  // b.none
    3e58:	tbz	w19, #23, 3e60 <grub_efi_get_ram_base+0x510>
    3e5c:	orr	w19, w0, #0x1000000
    3e60:	tst	w2, #0x30
    3e64:	b.eq	3e6c <grub_efi_get_ram_base+0x51c>  // b.none
    3e68:	orr	w19, w19, #0x4000000
    3e6c:	tst	w2, #0xc
    3e70:	b.eq	3e78 <grub_efi_get_ram_base+0x528>  // b.none
    3e74:	orr	w19, w19, #0x2000000
    3e78:	mov	w0, w19
    3e7c:	ldr	x19, [sp, #16]
    3e80:	ldp	x29, x30, [sp], #48
    3e84:	ret
    3e88:	adrp	x0, 0 <_start>
    3e8c:	add	x1, sp, #0x20
    3e90:	ldr	x0, [x0]
    3e94:	ldr	x0, [x0]
    3e98:	ldr	x0, [x0, #48]
    3e9c:	ldr	x2, [x0, #8]
    3ea0:	blr	x2
    3ea4:	cbnz	x0, 3e78 <grub_efi_get_ram_base+0x528>
    3ea8:	ldr	w0, [sp, #32]
    3eac:	bl	3c08 <grub_efi_get_ram_base+0x2b8>
    3eb0:	mov	w19, w0
    3eb4:	b	3e78 <grub_efi_get_ram_base+0x528>
    3eb8:	mov	w19, #0x0                   	// #0
    3ebc:	b	3e78 <grub_efi_get_ram_base+0x528>
	...
    3ed0:	adrp	x0, 0 <_start>
    3ed4:	ldr	x0, [x0]
    3ed8:	ldr	w0, [x0]
    3edc:	cbz	w0, 3ee8 <grub_efi_get_ram_base+0x598>
    3ee0:	mov	w0, #0x0                   	// #0
    3ee4:	ret
    3ee8:	adrp	x0, 0 <_start>
    3eec:	ldr	x0, [x0]
    3ef0:	ldr	x0, [x0]
    3ef4:	ldr	x0, [x0, #64]
    3ef8:	ldr	x0, [x0, #72]
    3efc:	ldr	w2, [x0, #12]
    3f00:	ldrh	w1, [x0, #16]
    3f04:	mov	w0, #0x0                   	// #0
    3f08:	bfxil	w0, w2, #0, #16
    3f0c:	bfi	w0, w1, #16, #16
    3f10:	b	3ee4 <grub_efi_get_ram_base+0x594>
    3f14:	nop
	...
    3f28:	adrp	x0, 0 <_start>
    3f2c:	ldr	x0, [x0]
    3f30:	ldr	w0, [x0]
    3f34:	cbnz	w0, 3f94 <grub_efi_get_ram_base+0x644>
    3f38:	stp	x29, x30, [sp, #-32]!
    3f3c:	adrp	x0, 0 <_start>
    3f40:	mov	x1, #0x0                   	// #0
    3f44:	mov	x29, sp
    3f48:	ldr	x0, [x0]
    3f4c:	stp	x19, x20, [sp, #16]
    3f50:	ldr	x0, [x0]
    3f54:	ldr	x19, [x0, #64]
    3f58:	ldr	x2, [x19, #40]
    3f5c:	ldr	x0, [x19, #72]
    3f60:	ldr	w20, [x0, #8]
    3f64:	mov	x0, x19
    3f68:	blr	x2
    3f6c:	ldr	x1, [x19, #48]
    3f70:	mov	x0, x19
    3f74:	blr	x1
    3f78:	sxtw	x1, w20
    3f7c:	mov	x0, x19
    3f80:	ldr	x2, [x19, #40]
    3f84:	ldp	x19, x20, [sp, #16]
    3f88:	mov	x16, x2
    3f8c:	ldp	x29, x30, [sp], #32
    3f90:	br	x16
    3f94:	ret
	...
    3fa8:	adrp	x0, 0 <_start>
    3fac:	ldr	x0, [x0]
    3fb0:	ldr	w0, [x0]
    3fb4:	cbnz	w0, 4010 <grub_efi_get_ram_base+0x6c0>
    3fb8:	adrp	x0, 0 <_start>
    3fbc:	cmp	w1, #0x1
    3fc0:	ldr	x0, [x0]
    3fc4:	ldr	x0, [x0]
    3fc8:	ldr	x0, [x0, #64]
    3fcc:	b.eq	3fec <grub_efi_get_ram_base+0x69c>  // b.none
    3fd0:	cmp	w1, #0x2
    3fd4:	b.eq	4004 <grub_efi_get_ram_base+0x6b4>  // b.none
    3fd8:	cbnz	w1, 4010 <grub_efi_get_ram_base+0x6c0>
    3fdc:	ldr	x2, [x0, #40]
    3fe0:	mov	x1, #0x7                   	// #7
    3fe4:	mov	x16, x2
    3fe8:	br	x16
    3fec:	adrp	x1, 0 <_start>
    3ff0:	ldr	x1, [x1]
    3ff4:	ldrb	w1, [x1]
    3ff8:	ldr	x2, [x0, #40]
    3ffc:	and	x1, x1, #0x7f
    4000:	b	3fe4 <grub_efi_get_ram_base+0x694>
    4004:	adrp	x1, 0 <_start>
    4008:	ldr	x1, [x1]
    400c:	b	3ff4 <grub_efi_get_ram_base+0x6a4>
    4010:	ret
    4014:	nop
	...
    4038:	adrp	x0, 0 <_start>
    403c:	ldr	x0, [x0]
    4040:	ldr	w0, [x0]
    4044:	cbnz	w0, 4064 <grub_efi_get_ram_base+0x714>
    4048:	adrp	x0, 0 <_start>
    404c:	ldr	x0, [x0]
    4050:	ldr	x0, [x0]
    4054:	ldr	x0, [x0, #64]
    4058:	ldr	x2, [x0, #64]
    405c:	mov	x16, x2
    4060:	br	x16
    4064:	ret
	...
    4078:	stp	x29, x30, [sp, #-16]!
    407c:	mov	w1, #0x0                   	// #0
    4080:	mov	x29, sp
    4084:	bl	4038 <grub_efi_get_ram_base+0x6e8>
    4088:	mov	w0, #0x0                   	// #0
    408c:	bl	1f10 <grub_efi_set_text_mode>
    4090:	mov	w0, #0x0                   	// #0
    4094:	ldp	x29, x30, [sp], #16
    4098:	ret
    409c:	stp	x29, x30, [sp, #-32]!
    40a0:	mov	x29, sp
    40a4:	str	x19, [sp, #16]
    40a8:	mov	x19, x0
    40ac:	mov	w0, #0x1                   	// #1
    40b0:	bl	1f10 <grub_efi_set_text_mode>
    40b4:	mov	x0, x19
    40b8:	mov	w1, #0x1                   	// #1
    40bc:	bl	4038 <grub_efi_get_ram_base+0x6e8>
    40c0:	mov	w0, #0x0                   	// #0
    40c4:	ldr	x19, [sp, #16]
    40c8:	ldp	x29, x30, [sp], #32
    40cc:	ret

00000000000040d0 <grub_console_init>:
    40d0:	stp	x29, x30, [sp, #-32]!
    40d4:	mov	w0, #0x1                   	// #1
    40d8:	mov	x29, sp
    40dc:	stp	x19, x20, [sp, #16]
    40e0:	bl	1f10 <grub_efi_set_text_mode>
    40e4:	cbnz	w0, 4100 <grub_console_init+0x30>
    40e8:	adrp	x0, 0 <_start>
    40ec:	ldp	x19, x20, [sp, #16]
    40f0:	ldp	x29, x30, [sp], #32
    40f4:	ldr	x1, [x0]
    40f8:	mov	w0, #0xd                   	// #13
    40fc:	b	7300 <grub_error>
    4100:	adrp	x0, 0 <_start>
    4104:	mov	x20, x0
    4108:	ldr	x1, [x0]
    410c:	adrp	x0, 0 <_start>
    4110:	ldr	x19, [x0]
    4114:	ldr	x1, [x1]
    4118:	cbz	x1, 4158 <grub_console_init+0x88>
    411c:	adrp	x0, 0 <_start>
    4120:	mov	x1, x19
    4124:	ldr	x0, [x0]
    4128:	bl	7e30 <grub_list_push>
    412c:	adrp	x0, 0 <_start>
    4130:	mov	x20, x0
    4134:	ldr	x1, [x0]
    4138:	ldr	x1, [x1]
    413c:	cbz	x1, 417c <grub_console_init+0xac>
    4140:	adrp	x0, 0 <_start>
    4144:	add	x1, x19, #0x90
    4148:	ldr	x0, [x0]
    414c:	ldp	x19, x20, [sp, #16]
    4150:	ldp	x29, x30, [sp], #32
    4154:	b	7e30 <grub_list_push>
    4158:	ldr	x1, [x19, #24]
    415c:	cbnz	x1, 416c <grub_console_init+0x9c>
    4160:	ldr	x0, [x20]
    4164:	mov	x1, x19
    4168:	b	4128 <grub_console_init+0x58>
    416c:	mov	x0, x19
    4170:	blr	x1
    4174:	cbz	w0, 4160 <grub_console_init+0x90>
    4178:	b	412c <grub_console_init+0x5c>
    417c:	ldr	x1, [x19, #168]
    4180:	add	x0, x19, #0x90
    4184:	cbnz	x1, 4194 <grub_console_init+0xc4>
    4188:	ldr	x0, [x20]
    418c:	add	x1, x19, #0x90
    4190:	b	414c <grub_console_init+0x7c>
    4194:	blr	x1
    4198:	cbz	w0, 4188 <grub_console_init+0xb8>
    419c:	ldp	x19, x20, [sp, #16]
    41a0:	ldp	x29, x30, [sp], #32
    41a4:	ret
	...

00000000000041d8 <grub_console_fini>:
    41d8:	stp	x29, x30, [sp, #-32]!
    41dc:	adrp	x0, 0 <_start>
    41e0:	mov	x29, sp
    41e4:	stp	x19, x20, [sp, #16]
    41e8:	ldr	x19, [x0]
    41ec:	add	x20, x19, #0x90
    41f0:	mov	x0, x20
    41f4:	bl	7e4c <grub_list_remove>
    41f8:	mov	x0, x20
    41fc:	bl	7e4c <grub_list_remove>
    4200:	mov	x0, x19
    4204:	bl	7e4c <grub_list_remove>
    4208:	mov	x0, x19
    420c:	ldp	x19, x20, [sp, #16]
    4210:	ldp	x29, x30, [sp], #32
    4214:	b	7e4c <grub_list_remove>
	...
    4220:	stp	x29, x30, [sp, #-48]!
    4224:	mov	x29, sp
    4228:	stp	x19, x20, [sp, #16]
    422c:	stp	x21, x22, [sp, #32]
    4230:	cbnz	x0, 424c <grub_console_fini+0x74>
    4234:	mov	x21, #0x0                   	// #0
    4238:	mov	x0, x21
    423c:	ldp	x19, x20, [sp, #16]
    4240:	ldp	x21, x22, [sp, #32]
    4244:	ldp	x29, x30, [sp], #48
    4248:	ret
    424c:	adrp	x1, 0 <_start>
    4250:	mov	x19, x0
    4254:	mov	x2, #0x4                   	// #4
    4258:	ldr	x1, [x1]
    425c:	bl	8570 <grub_memcmp>
    4260:	cbnz	w0, 4234 <grub_console_fini+0x5c>
    4264:	ldr	w20, [x19, #4]
    4268:	adrp	x22, 0 <_start>
    426c:	sub	x20, x20, #0x24
    4270:	and	x20, x20, #0xfffffffffffffffc
    4274:	add	x20, x19, x20
    4278:	cmp	x19, x20
    427c:	b.eq	4234 <grub_console_fini+0x5c>  // b.none
    4280:	ldr	x1, [x22]
    4284:	mov	x2, #0x4                   	// #4
    4288:	ldr	w21, [x19, #36]
    428c:	add	x19, x19, #0x4
    4290:	mov	x0, x21
    4294:	bl	8570 <grub_memcmp>
    4298:	cbnz	w0, 4278 <grub_console_fini+0xa0>
    429c:	b	4238 <grub_console_fini+0x60>
	...

00000000000042b0 <grub_byte_checksum>:
    42b0:	mov	x2, x0
    42b4:	mov	w0, #0x0                   	// #0
    42b8:	add	x1, x2, x1
    42bc:	cmp	x2, x1
    42c0:	b.cc	42c8 <grub_byte_checksum+0x18>  // b.lo, b.ul, b.last
    42c4:	ret
    42c8:	ldrb	w3, [x2], #1
    42cc:	add	w0, w0, w3
    42d0:	and	w0, w0, #0xff
    42d4:	b	42bc <grub_byte_checksum+0xc>

00000000000042d8 <grub_acpi_find_fadt>:
    42d8:	stp	x29, x30, [sp, #-48]!
    42dc:	mov	x29, sp
    42e0:	stp	x19, x20, [sp, #16]
    42e4:	stp	x21, x22, [sp, #32]
    42e8:	bl	43a0 <grub_machine_acpi_get_rsdpv1>
    42ec:	cbnz	x0, 4308 <grub_acpi_find_fadt+0x30>
    42f0:	bl	4438 <grub_machine_acpi_get_rsdpv2>
    42f4:	mov	x19, x0
    42f8:	cbnz	x0, 4324 <grub_acpi_find_fadt+0x4c>
    42fc:	mov	x19, #0x0                   	// #0
    4300:	mov	x0, x19
    4304:	b	4314 <grub_acpi_find_fadt+0x3c>
    4308:	ldr	w0, [x0, #16]
    430c:	bl	4220 <grub_console_fini+0x48>
    4310:	cbz	x0, 42f0 <grub_acpi_find_fadt+0x18>
    4314:	ldp	x19, x20, [sp, #16]
    4318:	ldp	x21, x22, [sp, #32]
    431c:	ldp	x29, x30, [sp], #48
    4320:	ret
    4324:	ldr	w0, [x0, #16]
    4328:	bl	4220 <grub_console_fini+0x48>
    432c:	cbnz	x0, 4314 <grub_acpi_find_fadt+0x3c>
    4330:	ldr	x19, [x19, #24]
    4334:	cbz	x19, 42fc <grub_acpi_find_fadt+0x24>
    4338:	adrp	x0, 0 <_start>
    433c:	mov	x2, #0x4                   	// #4
    4340:	ldr	x1, [x0]
    4344:	mov	x0, x19
    4348:	bl	8570 <grub_memcmp>
    434c:	cbnz	w0, 42fc <grub_acpi_find_fadt+0x24>
    4350:	ldr	w20, [x19, #4]
    4354:	add	x21, x19, #0x24
    4358:	adrp	x22, 0 <_start>
    435c:	sub	x20, x20, #0x24
    4360:	lsr	x20, x20, #2
    4364:	cbz	x20, 42fc <grub_acpi_find_fadt+0x24>
    4368:	ldr	x1, [x22]
    436c:	mov	x2, #0x4                   	// #4
    4370:	ldr	x19, [x21]
    4374:	mov	x0, x19
    4378:	bl	8570 <grub_memcmp>
    437c:	cbz	w0, 4300 <grub_acpi_find_fadt+0x28>
    4380:	sub	x20, x20, #0x1
    4384:	add	x21, x21, #0x8
    4388:	b	4364 <grub_acpi_find_fadt+0x8c>
    438c:	nop
	...

00000000000043a0 <grub_machine_acpi_get_rsdpv1>:
    43a0:	stp	x29, x30, [sp, #-64]!
    43a4:	mov	x29, sp
    43a8:	stp	x19, x20, [sp, #16]
    43ac:	mov	w19, #0x0                   	// #0
    43b0:	stp	x21, x22, [sp, #32]
    43b4:	adrp	x22, 0 <_start>
    43b8:	stp	x23, x24, [sp, #48]
    43bc:	mov	w23, #0x18                  	// #24
    43c0:	adrp	x24, 0 <_start>
    43c4:	ldr	x20, [x22]
    43c8:	ldr	x0, [x20]
    43cc:	ldr	x1, [x0, #104]
    43d0:	cmp	x1, w19, uxtw
    43d4:	b.hi	43e0 <grub_machine_acpi_get_rsdpv1+0x40>  // b.pmore
    43d8:	mov	x0, #0x0                   	// #0
    43dc:	b	440c <grub_machine_acpi_get_rsdpv1+0x6c>
    43e0:	ldr	x1, [x24]
    43e4:	umull	x21, w19, w23
    43e8:	ldr	x0, [x0, #112]
    43ec:	mov	x2, #0x10                  	// #16
    43f0:	add	x0, x0, x21
    43f4:	bl	8570 <grub_memcmp>
    43f8:	cbnz	w0, 4420 <grub_machine_acpi_get_rsdpv1+0x80>
    43fc:	ldr	x0, [x20]
    4400:	ldr	x0, [x0, #112]
    4404:	add	x0, x0, x21
    4408:	ldr	x0, [x0, #16]
    440c:	ldp	x19, x20, [sp, #16]
    4410:	ldp	x21, x22, [sp, #32]
    4414:	ldp	x23, x24, [sp, #48]
    4418:	ldp	x29, x30, [sp], #64
    441c:	ret
    4420:	add	w19, w19, #0x1
    4424:	b	43c4 <grub_machine_acpi_get_rsdpv1+0x24>
	...

0000000000004438 <grub_machine_acpi_get_rsdpv2>:
    4438:	stp	x29, x30, [sp, #-64]!
    443c:	mov	x29, sp
    4440:	stp	x19, x20, [sp, #16]
    4444:	mov	w19, #0x0                   	// #0
    4448:	stp	x21, x22, [sp, #32]
    444c:	adrp	x22, 0 <_start>
    4450:	stp	x23, x24, [sp, #48]
    4454:	mov	w23, #0x18                  	// #24
    4458:	adrp	x24, 0 <_start>
    445c:	ldr	x20, [x22]
    4460:	ldr	x0, [x20]
    4464:	ldr	x1, [x0, #104]
    4468:	cmp	x1, w19, uxtw
    446c:	b.hi	4478 <grub_machine_acpi_get_rsdpv2+0x40>  // b.pmore
    4470:	mov	x0, #0x0                   	// #0
    4474:	b	44a8 <grub_machine_acpi_get_rsdpv2+0x70>
    4478:	ldr	x1, [x24]
    447c:	umull	x21, w19, w23
    4480:	ldr	x0, [x0, #112]
    4484:	mov	x2, #0x10                  	// #16
    4488:	add	x1, x1, x2
    448c:	add	x0, x0, x21
    4490:	bl	8570 <grub_memcmp>
    4494:	cbnz	w0, 44bc <grub_machine_acpi_get_rsdpv2+0x84>
    4498:	ldr	x0, [x20]
    449c:	ldr	x0, [x0, #112]
    44a0:	add	x0, x0, x21
    44a4:	ldr	x0, [x0, #16]
    44a8:	ldp	x19, x20, [sp, #16]
    44ac:	ldp	x21, x22, [sp, #32]
    44b0:	ldp	x23, x24, [sp, #48]
    44b4:	ldp	x29, x30, [sp], #64
    44b8:	ret
    44bc:	add	w19, w19, #0x1
    44c0:	b	445c <grub_machine_acpi_get_rsdpv2+0x24>
    44c4:	nop
	...

00000000000044d8 <memcpy>:
    44d8:	b	84a4 <grub_memmove>

00000000000044dc <memmove>:
    44dc:	b	84a4 <grub_memmove>

00000000000044e0 <memcmp>:
    44e0:	b	8570 <grub_memcmp>

00000000000044e4 <memset>:
    44e4:	b	876c <grub_memset>
    44e8:	stp	x29, x30, [sp, #-16]!
    44ec:	tst	x0, #0x1f
    44f0:	mov	x29, sp
    44f4:	b.eq	4508 <memset+0x24>  // b.none
    44f8:	mov	x1, x0
    44fc:	adrp	x0, 0 <_start>
    4500:	ldr	x0, [x0]
    4504:	bl	97fc <grub_fatal>
    4508:	mov	x5, x1
    450c:	adrp	x1, 0 <_start>
    4510:	ldr	x1, [x1]
    4514:	ldr	x1, [x1]
    4518:	str	x1, [x2]
    451c:	ldr	x3, [x2]
    4520:	cbnz	x3, 4534 <memset+0x50>
    4524:	mov	x1, x0
    4528:	adrp	x0, 0 <_start>
    452c:	ldr	x0, [x0]
    4530:	b	4504 <memset+0x20>
    4534:	add	x1, x3, #0x20
    4538:	cmp	x0, x1
    453c:	b.ls	4554 <memset+0x70>  // b.plast
    4540:	ldr	x4, [x3, #24]
    4544:	add	x4, x3, x4
    4548:	add	x4, x4, #0x20
    454c:	cmp	x0, x4
    4550:	b.ls	4578 <memset+0x94>  // b.plast
    4554:	ldr	x1, [x3, #8]
    4558:	b	4518 <memset+0x34>
    455c:	mov	x0, #0x8fa4                	// #36772
    4560:	movk	x0, #0x6db0, lsl #16
    4564:	cmp	x2, x0
    4568:	b.eq	45a0 <memset+0xbc>  // b.none
    456c:	adrp	x0, 0 <_start>
    4570:	ldr	x0, [x0]
    4574:	bl	97fc <grub_fatal>
    4578:	ldur	x2, [x0, #-16]
    457c:	sub	x1, x0, #0x20
    4580:	str	x1, [x5]
    4584:	mov	x0, #0x2808                	// #10248
    4588:	movk	x0, #0x2d3c, lsl #16
    458c:	cmp	x2, x0
    4590:	b.ne	455c <memset+0x78>  // b.any
    4594:	adrp	x0, 0 <_start>
    4598:	ldr	x0, [x0]
    459c:	b	4504 <memset+0x20>
    45a0:	ldp	x29, x30, [sp], #16
    45a4:	ret
	...

00000000000045d0 <grub_memalign>:
    45d0:	stp	x29, x30, [sp, #-80]!
    45d4:	adrp	x2, 0 <_start>
    45d8:	mov	x29, sp
    45dc:	stp	x21, x22, [sp, #32]
    45e0:	ldr	x22, [x2]
    45e4:	stp	x19, x20, [sp, #16]
    45e8:	stp	x23, x24, [sp, #48]
    45ec:	ldr	x2, [x22]
    45f0:	str	x25, [sp, #64]
    45f4:	cbz	x2, 47c0 <grub_memalign+0x1f0>
    45f8:	mvn	x2, x0
    45fc:	cmp	x2, x1
    4600:	b.cc	47c0 <grub_memalign+0x1f0>  // b.lo, b.ul, b.last
    4604:	add	x3, x1, x0
    4608:	mov	x2, #0xffffffffffefffff    	// #-1048577
    460c:	cmp	x3, x2
    4610:	b.hi	47c0 <grub_memalign+0x1f0>  // b.pmore
    4614:	lsr	x20, x0, #5
    4618:	add	x19, x1, #0x1f
    461c:	cmp	x20, #0x0
    4620:	mov	x24, #0x8fa4                	// #36772
    4624:	lsr	x19, x19, #5
    4628:	csinc	x21, x20, xzr, ne  // ne = any
    462c:	mov	x25, #0x2808                	// #10248
    4630:	add	x19, x19, #0x1
    4634:	sub	x23, x21, #0x1
    4638:	mov	w6, #0x2                   	// #2
    463c:	movk	x24, #0x6db0, lsl #16
    4640:	movk	x25, #0x2d3c, lsl #16
    4644:	ldr	x5, [x22]
    4648:	cbnz	x5, 4660 <grub_memalign+0x90>
    464c:	cmp	w6, #0x1
    4650:	b.eq	47c0 <grub_memalign+0x1f0>  // b.none
    4654:	bl	5970 <grub_disk_cache_invalidate_all>
    4658:	mov	w6, #0x1                   	// #1
    465c:	b	4644 <grub_memalign+0x74>
    4660:	ldr	x0, [x5]
    4664:	ldr	x1, [x0, #16]
    4668:	cmp	x1, x24
    466c:	b.eq	47b8 <grub_memalign+0x1e8>  // b.none
    4670:	ldr	x1, [x0]
    4674:	mov	x4, x0
    4678:	add	x3, x1, #0x20
    467c:	ands	x3, x23, x3, lsr #5
    4680:	b.eq	4688 <grub_memalign+0xb8>  // b.none
    4684:	sub	x3, x21, x3
    4688:	cbnz	x1, 4698 <grub_memalign+0xc8>
    468c:	adrp	x0, 0 <_start>
    4690:	ldr	x0, [x0]
    4694:	bl	97fc <grub_fatal>
    4698:	ldr	x2, [x1, #16]
    469c:	cmp	x2, x25
    46a0:	b.eq	46b0 <grub_memalign+0xe0>  // b.none
    46a4:	adrp	x0, 0 <_start>
    46a8:	ldr	x0, [x0]
    46ac:	bl	97fc <grub_fatal>
    46b0:	ldr	x2, [x1, #8]
    46b4:	add	x7, x19, x3
    46b8:	cmp	x2, x7
    46bc:	b.cc	47a4 <grub_memalign+0x1d4>  // b.lo, b.ul, b.last
    46c0:	sub	x6, x2, x19
    46c4:	neg	x21, x21
    46c8:	sub	x0, x6, x3
    46cc:	and	x21, x0, x21
    46d0:	adds	x3, x3, x21
    46d4:	b.ne	4728 <grub_memalign+0x158>  // b.any
    46d8:	cmp	x19, x2
    46dc:	b.ne	4728 <grub_memalign+0x158>  // b.any
    46e0:	ldr	x0, [x1]
    46e4:	str	x0, [x4]
    46e8:	mov	x0, #0x8fa4                	// #36772
    46ec:	cmp	x19, #0x3ff
    46f0:	movk	x0, #0x6db0, lsl #16
    46f4:	stp	x19, x0, [x1, #8]
    46f8:	b.ls	4708 <grub_memalign+0x138>  // b.plast
    46fc:	ldr	x0, [x5]
    4700:	cmp	x1, x0
    4704:	b.ne	470c <grub_memalign+0x13c>  // b.any
    4708:	str	x4, [x5]
    470c:	add	x0, x1, #0x20
    4710:	ldp	x19, x20, [sp, #16]
    4714:	ldp	x21, x22, [sp, #32]
    4718:	ldp	x23, x24, [sp, #48]
    471c:	ldr	x25, [sp, #64]
    4720:	ldp	x29, x30, [sp], #80
    4724:	ret
    4728:	cmp	x20, #0x1
    472c:	b.ls	473c <grub_memalign+0x16c>  // b.plast
    4730:	add	x7, x19, x3
    4734:	cmp	x2, x7
    4738:	b.ne	4748 <grub_memalign+0x178>  // b.any
    473c:	str	x6, [x1, #8]
    4740:	add	x1, x1, x6, lsl #5
    4744:	b	46e8 <grub_memalign+0x118>
    4748:	add	x0, x1, x7, lsl #5
    474c:	mov	x9, #0x2808                	// #10248
    4750:	movk	x9, #0x2d3c, lsl #16
    4754:	lsl	x8, x7, #5
    4758:	str	x9, [x0, #16]
    475c:	cbnz	x3, 4788 <grub_memalign+0x1b8>
    4760:	sub	x2, x2, x7
    4764:	str	x2, [x0, #8]
    4768:	ldr	x2, [x1]
    476c:	str	x2, [x1, x8]
    4770:	str	x0, [x4]
    4774:	cmp	x1, x4
    4778:	b.ne	46e8 <grub_memalign+0x118>  // b.any
    477c:	mov	x4, x0
    4780:	str	x0, [x0]
    4784:	b	46e8 <grub_memalign+0x118>
    4788:	sub	x6, x6, x3
    478c:	str	x6, [x0, #8]
    4790:	str	x1, [x1, x8]
    4794:	str	x3, [x1, #8]
    4798:	add	x1, x1, x3, lsl #5
    479c:	str	x0, [x4]
    47a0:	b	46e8 <grub_memalign+0x118>
    47a4:	cmp	x0, x1
    47a8:	b.eq	47b8 <grub_memalign+0x1e8>  // b.none
    47ac:	mov	x4, x1
    47b0:	ldr	x1, [x1]
    47b4:	b	4678 <grub_memalign+0xa8>
    47b8:	ldr	x5, [x5, #8]
    47bc:	b	4648 <grub_memalign+0x78>
    47c0:	adrp	x0, 0 <_start>
    47c4:	ldr	x1, [x0]
    47c8:	mov	w0, #0x3                   	// #3
    47cc:	bl	7300 <grub_error>
    47d0:	mov	x0, #0x0                   	// #0
    47d4:	b	4710 <grub_memalign+0x140>
	...

00000000000047f8 <grub_malloc>:
    47f8:	mov	x1, x0
    47fc:	mov	x0, #0x0                   	// #0
    4800:	b	45d0 <grub_memalign>

0000000000004804 <grub_zalloc>:
    4804:	stp	x29, x30, [sp, #-32]!
    4808:	mov	x1, x0
    480c:	mov	x29, sp
    4810:	stp	x19, x20, [sp, #16]
    4814:	mov	x20, x0
    4818:	mov	x0, #0x0                   	// #0
    481c:	bl	45d0 <grub_memalign>
    4820:	mov	x19, x0
    4824:	cbz	x0, 4834 <grub_zalloc+0x30>
    4828:	mov	x2, x20
    482c:	mov	w1, #0x0                   	// #0
    4830:	bl	876c <grub_memset>
    4834:	mov	x0, x19
    4838:	ldp	x19, x20, [sp, #16]
    483c:	ldp	x29, x30, [sp], #32
    4840:	ret

0000000000004844 <grub_free>:
    4844:	cbz	x0, 4980 <grub_free+0x13c>
    4848:	stp	x29, x30, [sp, #-32]!
    484c:	mov	x29, sp
    4850:	add	x1, sp, #0x10
    4854:	add	x2, sp, #0x18
    4858:	bl	44e8 <memset+0x4>
    485c:	ldr	x4, [sp, #24]
    4860:	mov	x0, #0x8fa4                	// #36772
    4864:	movk	x0, #0x6db0, lsl #16
    4868:	ldr	x3, [x4]
    486c:	ldr	x1, [x3, #16]
    4870:	cmp	x1, x0
    4874:	ldr	x0, [sp, #16]
    4878:	b.ne	4898 <grub_free+0x54>  // b.any
    487c:	mov	x1, #0x2808                	// #10248
    4880:	str	x0, [x0]
    4884:	movk	x1, #0x2d3c, lsl #16
    4888:	str	x1, [x0, #16]
    488c:	str	x0, [x4]
    4890:	ldp	x29, x30, [sp], #32
    4894:	ret
    4898:	ldr	x1, [x3]
    489c:	mov	x5, #0x2808                	// #10248
    48a0:	movk	x5, #0x2d3c, lsl #16
    48a4:	cmp	x1, x0
    48a8:	b.ls	4940 <grub_free+0xfc>  // b.plast
    48ac:	ldr	x2, [x1]
    48b0:	cmp	x0, x2
    48b4:	b.ls	4940 <grub_free+0xfc>  // b.plast
    48b8:	mov	x2, #0x2808                	// #10248
    48bc:	movk	x2, #0x2d3c, lsl #16
    48c0:	str	x2, [x0, #16]
    48c4:	ldr	x2, [x1]
    48c8:	str	x2, [x0]
    48cc:	str	x0, [x1]
    48d0:	ldr	x2, [x0]
    48d4:	ldr	x5, [x2, #8]
    48d8:	add	x6, x2, x5, lsl #5
    48dc:	cmp	x0, x6
    48e0:	b.ne	4900 <grub_free+0xbc>  // b.any
    48e4:	ldr	x6, [x0, #8]
    48e8:	str	xzr, [x0, #16]
    48ec:	add	x5, x5, x6
    48f0:	str	x5, [x2, #8]
    48f4:	str	x2, [x1]
    48f8:	ldr	x0, [x0]
    48fc:	str	x0, [sp, #16]
    4900:	ldr	x0, [sp, #16]
    4904:	ldr	x5, [x0, #8]
    4908:	str	x1, [x4]
    490c:	add	x2, x0, x5, lsl #5
    4910:	cmp	x1, x2
    4914:	b.ne	4938 <grub_free+0xf4>  // b.any
    4918:	cmp	x1, x3
    491c:	str	xzr, [x1, #16]
    4920:	ldr	x2, [x1, #8]
    4924:	csel	x3, x3, x0, ne  // ne = any
    4928:	mov	x1, x3
    492c:	add	x2, x2, x5
    4930:	str	x2, [x0, #8]
    4934:	str	x0, [x3]
    4938:	str	x1, [x4]
    493c:	b	4890 <grub_free+0x4c>
    4940:	ldr	x2, [x1, #16]
    4944:	cmp	x2, x5
    4948:	b.eq	4958 <grub_free+0x114>  // b.none
    494c:	adrp	x0, 0 <_start>
    4950:	ldr	x0, [x0]
    4954:	bl	97fc <grub_fatal>
    4958:	ldr	x2, [x1]
    495c:	cmp	x1, x2
    4960:	b.hi	4974 <grub_free+0x130>  // b.pmore
    4964:	cmp	x1, x0
    4968:	b.hi	48b8 <grub_free+0x74>  // b.pmore
    496c:	cmp	x2, x0
    4970:	b.cc	48b8 <grub_free+0x74>  // b.lo, b.ul, b.last
    4974:	mov	x3, x1
    4978:	mov	x1, x2
    497c:	b	48a4 <grub_free+0x60>
    4980:	ret
    4984:	nop
	...

0000000000004990 <grub_mm_init_region>:
    4990:	mov	x2, #0xffffffffffffefff    	// #-4097
    4994:	cmp	x0, x2
    4998:	b.hi	4ad8 <grub_mm_init_region+0x148>  // b.pmore
    499c:	stp	x29, x30, [sp, #-32]!
    49a0:	add	x2, x0, #0x1, lsl #12
    49a4:	mvn	x3, x1
    49a8:	mov	x29, sp
    49ac:	stp	x19, x20, [sp, #16]
    49b0:	cmp	x2, x3
    49b4:	b.ls	49c0 <grub_mm_init_region+0x30>  // b.plast
    49b8:	mov	x1, #0xfffffffffffff000    	// #-4096
    49bc:	sub	x1, x1, x0
    49c0:	adrp	x2, 0 <_start>
    49c4:	ldr	x5, [x2]
    49c8:	mov	x20, x5
    49cc:	ldr	x4, [x5]
    49d0:	mov	x3, x4
    49d4:	cbnz	x3, 4a38 <grub_mm_init_region+0xa8>
    49d8:	add	x2, x0, #0x1f
    49dc:	and	x2, x2, #0xffffffffffffffe0
    49e0:	add	x3, x2, #0x20
    49e4:	sub	x6, x3, x0
    49e8:	add	x6, x6, #0x20
    49ec:	cmp	x6, x1
    49f0:	b.hi	4aa8 <grub_mm_init_region+0x118>  // b.pmore
    49f4:	sub	x0, x2, x0
    49f8:	mov	x6, #0x2808                	// #10248
    49fc:	sub	x1, x1, x0
    4a00:	movk	x6, #0x2d3c, lsl #16
    4a04:	sub	x1, x1, #0x20
    4a08:	str	x3, [x2]
    4a0c:	str	x0, [x2, #16]
    4a10:	str	x3, [x2, #32]
    4a14:	str	x6, [x2, #48]
    4a18:	lsr	x6, x1, #5
    4a1c:	and	x1, x1, #0xffffffffffffffe0
    4a20:	str	x1, [x2, #24]
    4a24:	str	x6, [x2, #40]
    4a28:	cbnz	x4, 4ac0 <grub_mm_init_region+0x130>
    4a2c:	str	x2, [x5]
    4a30:	str	x4, [x2, #8]
    4a34:	b	4aa8 <grub_mm_init_region+0x118>
    4a38:	ldr	x2, [x3, #16]
    4a3c:	add	x2, x1, x2
    4a40:	add	x6, x0, x2
    4a44:	cmp	x3, x6
    4a48:	b.ne	4ab4 <grub_mm_init_region+0x124>  // b.any
    4a4c:	add	x0, x0, #0x1f
    4a50:	cmp	xzr, x2, lsr #5
    4a54:	and	x19, x0, #0xffffffffffffffe0
    4a58:	ldp	x0, x1, [x3]
    4a5c:	stp	x0, x1, [x19]
    4a60:	ldp	x0, x1, [x3, #16]
    4a64:	stp	x0, x1, [x19, #16]
    4a68:	str	x2, [x19, #16]
    4a6c:	lsr	x1, x2, #5
    4a70:	b.eq	4aa4 <grub_mm_init_region+0x114>  // b.none
    4a74:	str	x1, [x19, #40]
    4a78:	mov	x1, #0x8fa4                	// #36772
    4a7c:	ldr	x0, [x19, #24]
    4a80:	movk	x1, #0x6db0, lsl #16
    4a84:	str	x1, [x19, #48]
    4a88:	and	x1, x2, #0xffffffffffffffe0
    4a8c:	add	x0, x0, x1
    4a90:	and	x2, x2, #0x1f
    4a94:	stp	x2, x0, [x19, #16]
    4a98:	add	x0, x19, #0x40
    4a9c:	str	x19, [x20]
    4aa0:	bl	4844 <grub_free>
    4aa4:	str	x19, [x20]
    4aa8:	ldp	x19, x20, [sp, #16]
    4aac:	ldp	x29, x30, [sp], #32
    4ab0:	ret
    4ab4:	add	x20, x3, #0x8
    4ab8:	ldr	x3, [x3, #8]
    4abc:	b	49d4 <grub_mm_init_region+0x44>
    4ac0:	ldr	x0, [x4, #24]
    4ac4:	cmp	x1, x0
    4ac8:	b.cc	4a2c <grub_mm_init_region+0x9c>  // b.lo, b.ul, b.last
    4acc:	add	x5, x4, #0x8
    4ad0:	ldr	x4, [x4, #8]
    4ad4:	b	4a28 <grub_mm_init_region+0x98>
    4ad8:	ret
    4adc:	nop
	...

0000000000004ae8 <grub_realloc>:
    4ae8:	stp	x29, x30, [sp, #-48]!
    4aec:	mov	x29, sp
    4af0:	stp	x19, x20, [sp, #16]
    4af4:	mov	x19, x1
    4af8:	cbnz	x0, 4b18 <grub_realloc+0x30>
    4afc:	mov	x0, x1
    4b00:	bl	47f8 <grub_malloc>
    4b04:	mov	x19, x0
    4b08:	mov	x0, x19
    4b0c:	ldp	x19, x20, [sp, #16]
    4b10:	ldp	x29, x30, [sp], #48
    4b14:	ret
    4b18:	cbnz	x1, 4b24 <grub_realloc+0x3c>
    4b1c:	bl	4844 <grub_free>
    4b20:	b	4b08 <grub_realloc+0x20>
    4b24:	mov	x20, x0
    4b28:	add	x1, sp, #0x20
    4b2c:	add	x2, sp, #0x28
    4b30:	bl	44e8 <memset+0x4>
    4b34:	ldr	x1, [sp, #32]
    4b38:	add	x0, x19, #0x1f
    4b3c:	lsr	x0, x0, #5
    4b40:	ldr	x1, [x1, #8]
    4b44:	add	x0, x0, #0x1
    4b48:	cmp	x1, x0
    4b4c:	b.cs	4b7c <grub_realloc+0x94>  // b.hs, b.nlast
    4b50:	mov	x0, x19
    4b54:	bl	47f8 <grub_malloc>
    4b58:	mov	x19, x0
    4b5c:	cbz	x0, 4b08 <grub_realloc+0x20>
    4b60:	ldr	x1, [sp, #32]
    4b64:	ldr	x2, [x1, #8]
    4b68:	mov	x1, x20
    4b6c:	lsl	x2, x2, #5
    4b70:	bl	84a4 <grub_memmove>
    4b74:	mov	x0, x20
    4b78:	b	4b1c <grub_realloc+0x34>
    4b7c:	mov	x19, x20
    4b80:	b	4b08 <grub_realloc+0x20>
    4b84:	nop

0000000000004b88 <grub_get_time_ms>:
    4b88:	adrp	x0, 0 <_start>
    4b8c:	ldr	x0, [x0]
    4b90:	ldr	x0, [x0]
    4b94:	mov	x16, x0
    4b98:	br	x16
    4b9c:	nop
	...

0000000000004ba8 <grub_install_get_time_ms>:
    4ba8:	adrp	x1, 0 <_start>
    4bac:	ldr	x1, [x1]
    4bb0:	str	x0, [x1]
    4bb4:	ret
	...

0000000000004bc0 <grub_millisleep>:
    4bc0:	stp	x29, x30, [sp, #-32]!
    4bc4:	mov	x29, sp
    4bc8:	stp	x19, x20, [sp, #16]
    4bcc:	mov	w19, w0
    4bd0:	bl	4b88 <grub_get_time_ms>
    4bd4:	mov	x20, x0
    4bd8:	bl	4b88 <grub_get_time_ms>
    4bdc:	sub	x1, x0, x20
    4be0:	cmp	x1, x19
    4be4:	b.cc	4bd8 <grub_millisleep+0x18>  // b.lo, b.ul, b.last
    4be8:	ldp	x19, x20, [sp, #16]
    4bec:	ldp	x29, x30, [sp], #32
    4bf0:	ret
    4bf4:	nop

0000000000004bf8 <grub_register_command_prio>:
    4bf8:	stp	x29, x30, [sp, #-64]!
    4bfc:	mov	x29, sp
    4c00:	stp	x19, x20, [sp, #16]
    4c04:	mov	x20, x2
    4c08:	stp	x21, x22, [sp, #32]
    4c0c:	mov	x22, x3
    4c10:	mov	w21, w4
    4c14:	stp	x23, x24, [sp, #48]
    4c18:	mov	x24, x0
    4c1c:	mov	x23, x1
    4c20:	mov	x0, #0x48                  	// #72
    4c24:	bl	4804 <grub_zalloc>
    4c28:	mov	x19, x0
    4c2c:	cbz	x0, 4cb8 <grub_register_command_prio+0xc0>
    4c30:	str	x24, [x0, #16]
    4c34:	str	x23, [x0, #32]
    4c38:	cbnz	x20, 4c44 <grub_register_command_prio+0x4c>
    4c3c:	adrp	x0, 0 <_start>
    4c40:	ldr	x20, [x0]
    4c44:	adrp	x0, 0 <_start>
    4c48:	str	w21, [x19, #24]
    4c4c:	ldr	x21, [x0]
    4c50:	stp	x20, x22, [x19, #48]
    4c54:	mov	w22, #0x0                   	// #0
    4c58:	str	wzr, [x19, #40]
    4c5c:	ldr	x20, [x21]
    4c60:	cbz	x20, 4c94 <grub_register_command_prio+0x9c>
    4c64:	ldr	x0, [x19, #16]
    4c68:	ldr	x1, [x20, #16]
    4c6c:	bl	85a4 <grub_strcmp>
    4c70:	cmp	w0, #0x0
    4c74:	b.lt	4c94 <grub_register_command_prio+0x9c>  // b.tstop
    4c78:	b.ne	4cd4 <grub_register_command_prio+0xdc>  // b.any
    4c7c:	ldr	w1, [x19, #24]
    4c80:	ldr	w0, [x20, #24]
    4c84:	cmp	w1, w0, uxtb
    4c88:	b.lt	4cd0 <grub_register_command_prio+0xd8>  // b.tstop
    4c8c:	and	w0, w0, #0xfffffeff
    4c90:	str	w0, [x20, #24]
    4c94:	str	x19, [x21]
    4c98:	str	x20, [x19]
    4c9c:	cbz	x20, 4ca4 <grub_register_command_prio+0xac>
    4ca0:	str	x19, [x20, #8]
    4ca4:	str	x21, [x19, #8]
    4ca8:	cbnz	w22, 4cb8 <grub_register_command_prio+0xc0>
    4cac:	ldr	w0, [x19, #24]
    4cb0:	orr	w0, w0, #0x100
    4cb4:	str	w0, [x19, #24]
    4cb8:	mov	x0, x19
    4cbc:	ldp	x19, x20, [sp, #16]
    4cc0:	ldp	x21, x22, [sp, #32]
    4cc4:	ldp	x23, x24, [sp, #48]
    4cc8:	ldp	x29, x30, [sp], #64
    4ccc:	ret
    4cd0:	mov	w22, #0x1                   	// #1
    4cd4:	mov	x21, x20
    4cd8:	ldr	x20, [x20]
    4cdc:	b	4c60 <grub_register_command_prio+0x68>
	...

0000000000004cf0 <grub_unregister_command>:
    4cf0:	stp	x29, x30, [sp, #-32]!
    4cf4:	mov	x29, sp
    4cf8:	str	x19, [sp, #16]
    4cfc:	mov	x19, x0
    4d00:	ldr	w0, [x0, #24]
    4d04:	tbz	w0, #8, 4d1c <grub_unregister_command+0x2c>
    4d08:	ldr	x0, [x19]
    4d0c:	cbz	x0, 4d1c <grub_unregister_command+0x2c>
    4d10:	ldr	w1, [x0, #24]
    4d14:	orr	w1, w1, #0x100
    4d18:	str	w1, [x0, #24]
    4d1c:	mov	x0, x19
    4d20:	bl	7e4c <grub_list_remove>
    4d24:	mov	x0, x19
    4d28:	ldr	x19, [sp, #16]
    4d2c:	ldp	x29, x30, [sp], #32
    4d30:	b	4844 <grub_free>
    4d34:	nop
    4d38:	stp	x29, x30, [sp, #-16]!
    4d3c:	mov	x29, sp
    4d40:	ldrb	w3, [x1]
    4d44:	adrp	x1, 0 <_start>
    4d48:	ldr	x2, [x1]
    4d4c:	adrp	x1, 0 <_start>
    4d50:	tst	x3, #0x1
    4d54:	ldr	x1, [x1]
    4d58:	csel	x2, x2, x1, eq  // eq = none
    4d5c:	mov	x1, x0
    4d60:	adrp	x0, 0 <_start>
    4d64:	ldr	x0, [x0]
    4d68:	bl	94b0 <grub_err_printf>
    4d6c:	mov	w0, #0x0                   	// #0
    4d70:	ldp	x29, x30, [sp], #16
    4d74:	ret
	...
    4d90:	stp	x29, x30, [sp, #-16]!
    4d94:	mov	x1, x0
    4d98:	adrp	x0, 0 <_start>
    4d9c:	mov	x29, sp
    4da0:	ldr	x0, [x0]
    4da4:	bl	94b0 <grub_err_printf>
    4da8:	mov	w0, #0x0                   	// #0
    4dac:	ldp	x29, x30, [sp], #16
    4db0:	ret
    4db4:	nop
	...
    4dc0:	stp	x29, x30, [sp, #-64]!
    4dc4:	adrp	x0, 0 <_start>
    4dc8:	cmp	w1, #0x0
    4dcc:	mov	x29, sp
    4dd0:	stp	x19, x20, [sp, #16]
    4dd4:	stp	x21, x22, [sp, #32]
    4dd8:	str	x23, [sp, #48]
    4ddc:	ldr	x23, [x0]
    4de0:	b.gt	4e28 <grub_unregister_command+0x138>
    4de4:	adrp	x0, 0 <_start>
    4de8:	mov	x1, #0x0                   	// #0
    4dec:	ldr	x0, [x0]
    4df0:	bl	54c8 <grub_device_iterate>
    4df4:	adrp	x0, 0 <_start>
    4df8:	ldr	x0, [x0]
    4dfc:	ldr	x1, [x0]
    4e00:	adrp	x0, 0 <_start>
    4e04:	ldr	x0, [x0]
    4e08:	blr	x1
    4e0c:	bl	a740 <grub_refresh>
    4e10:	ldr	w0, [x23]
    4e14:	ldp	x19, x20, [sp, #16]
    4e18:	ldp	x21, x22, [sp, #32]
    4e1c:	ldr	x23, [sp, #48]
    4e20:	ldp	x29, x30, [sp], #64
    4e24:	ret
    4e28:	ldr	x0, [x2]
    4e2c:	mov	x22, x2
    4e30:	bl	75a8 <grub_file_get_device_name>
    4e34:	mov	x21, x0
    4e38:	ldr	w1, [x23]
    4e3c:	cbnz	w1, 4e8c <grub_unregister_command+0x19c>
    4e40:	bl	5298 <grub_device_open>
    4e44:	mov	x20, x0
    4e48:	cbz	x0, 4e8c <grub_unregister_command+0x19c>
    4e4c:	bl	7c00 <grub_fs_probe>
    4e50:	mov	x19, x0
    4e54:	ldr	x0, [x22]
    4e58:	mov	w1, #0x29                  	// #41
    4e5c:	bl	860c <grub_strchr>
    4e60:	cbnz	x0, 4e98 <grub_unregister_command+0x1a8>
    4e64:	ldr	x1, [x22]
    4e68:	ldrb	w0, [x1]
    4e6c:	cbnz	w0, 4ed8 <grub_unregister_command+0x1e8>
    4e70:	cbnz	x21, 4ea0 <grub_unregister_command+0x1b0>
    4e74:	adrp	x0, 0 <_start>
    4e78:	ldr	x1, [x0]
    4e7c:	mov	w0, #0x12                  	// #18
    4e80:	bl	7300 <grub_error>
    4e84:	mov	x0, x20
    4e88:	bl	5380 <grub_device_close>
    4e8c:	mov	x0, x21
    4e90:	bl	4844 <grub_free>
    4e94:	b	4e10 <grub_unregister_command+0x120>
    4e98:	add	x1, x0, #0x1
    4e9c:	b	4e68 <grub_unregister_command+0x178>
    4ea0:	ldr	w0, [x23]
    4ea4:	cmp	w0, #0x8
    4ea8:	b.ne	4eb0 <grub_unregister_command+0x1c0>  // b.any
    4eac:	str	wzr, [x23]
    4eb0:	cbz	x19, 4ecc <grub_unregister_command+0x1dc>
    4eb4:	ldr	x2, [x19, #16]
    4eb8:	adrp	x0, 0 <_start>
    4ebc:	mov	x1, x21
    4ec0:	ldr	x0, [x0]
    4ec4:	bl	94b0 <grub_err_printf>
    4ec8:	b	4e84 <grub_unregister_command+0x194>
    4ecc:	adrp	x0, 0 <_start>
    4ed0:	ldr	x2, [x0]
    4ed4:	b	4eb8 <grub_unregister_command+0x1c8>
    4ed8:	cbz	x19, 4e84 <grub_unregister_command+0x194>
    4edc:	adrp	x0, 0 <_start>
    4ee0:	mov	x3, #0x0                   	// #0
    4ee4:	ldr	x4, [x19, #24]
    4ee8:	ldr	x2, [x0]
    4eec:	mov	x0, x20
    4ef0:	blr	x4
    4ef4:	adrp	x0, 0 <_start>
    4ef8:	ldr	x0, [x0]
    4efc:	ldr	x1, [x0]
    4f00:	adrp	x0, 0 <_start>
    4f04:	ldr	x0, [x0]
    4f08:	blr	x1
    4f0c:	bl	a740 <grub_refresh>
    4f10:	b	4e84 <grub_unregister_command+0x194>
    4f14:	nop
	...
    4f58:	cbnz	w1, 4f6c <grub_unregister_command+0x27c>
    4f5c:	adrp	x0, 0 <_start>
    4f60:	ldr	x1, [x0]
    4f64:	mov	w0, #0x12                  	// #18
    4f68:	b	7300 <grub_error>
    4f6c:	stp	x29, x30, [sp, #-16]!
    4f70:	mov	x29, sp
    4f74:	ldr	x0, [x2]
    4f78:	ldrb	w1, [x0]
    4f7c:	cmp	w1, #0x28
    4f80:	b.eq	4f90 <grub_unregister_command+0x2a0>  // b.none
    4f84:	and	w1, w1, #0xfffffffb
    4f88:	cmp	w1, #0x2b
    4f8c:	b.ne	4fa8 <grub_unregister_command+0x2b8>  // b.any
    4f90:	bl	6d40 <grub_dl_load_file>
    4f94:	cbz	x0, 4f9c <grub_unregister_command+0x2ac>
    4f98:	bl	6298 <grub_dl_ref>
    4f9c:	mov	w0, #0x0                   	// #0
    4fa0:	ldp	x29, x30, [sp], #16
    4fa4:	ret
    4fa8:	bl	6df0 <grub_dl_load>
    4fac:	b	4f94 <grub_unregister_command+0x2a4>
	...
    4fb8:	stp	x29, x30, [sp, #-48]!
    4fbc:	cmp	w1, #0x0
    4fc0:	mov	x29, sp
    4fc4:	stp	x19, x20, [sp, #16]
    4fc8:	str	x21, [sp, #32]
    4fcc:	b.gt	5018 <grub_unregister_command+0x328>
    4fd0:	bl	7198 <grub_env_update_get_sorted>
    4fd4:	mov	x19, x0
    4fd8:	adrp	x21, 0 <_start>
    4fdc:	cbnz	x19, 4ff4 <grub_unregister_command+0x304>
    4fe0:	mov	w0, #0x0                   	// #0
    4fe4:	ldp	x19, x20, [sp, #16]
    4fe8:	ldr	x21, [sp, #32]
    4fec:	ldp	x29, x30, [sp], #48
    4ff0:	ret
    4ff4:	ldr	x20, [x19]
    4ff8:	mov	x0, x20
    4ffc:	bl	70d8 <grub_env_get>
    5000:	mov	x2, x0
    5004:	mov	x1, x20
    5008:	ldr	x0, [x21]
    500c:	bl	94b0 <grub_err_printf>
    5010:	ldr	x19, [x19, #48]
    5014:	b	4fdc <grub_unregister_command+0x2ec>
    5018:	ldr	x20, [x2]
    501c:	mov	w1, #0x3d                  	// #61
    5020:	mov	x0, x20
    5024:	bl	860c <grub_strchr>
    5028:	mov	x19, x0
    502c:	cbnz	x0, 504c <grub_unregister_command+0x35c>
    5030:	adrp	x0, 0 <_start>
    5034:	ldp	x19, x20, [sp, #16]
    5038:	ldr	x21, [sp, #32]
    503c:	ldp	x29, x30, [sp], #48
    5040:	ldr	x1, [x0]
    5044:	mov	w0, #0x12                  	// #18
    5048:	b	7300 <grub_error>
    504c:	mov	x1, x0
    5050:	mov	x0, x20
    5054:	strb	wzr, [x1], #1
    5058:	bl	6f98 <grub_env_set>
    505c:	mov	w0, #0x3d                  	// #61
    5060:	strb	w0, [x19]
    5064:	b	4fe0 <grub_unregister_command+0x2f0>
	...
    5078:	cmp	w1, #0x0
    507c:	b.gt	5090 <grub_unregister_command+0x3a0>
    5080:	adrp	x0, 0 <_start>
    5084:	ldr	x1, [x0]
    5088:	mov	w0, #0x12                  	// #18
    508c:	b	7300 <grub_error>
    5090:	stp	x29, x30, [sp, #-16]!
    5094:	mov	x29, sp
    5098:	ldr	x0, [x2]
    509c:	bl	7110 <grub_env_unset>
    50a0:	mov	w0, #0x0                   	// #0
    50a4:	ldp	x29, x30, [sp], #16
    50a8:	ret
    50ac:	nop
	...

00000000000050b8 <grub_register_core_commands>:
    50b8:	stp	x29, x30, [sp, #-16]!
    50bc:	adrp	x0, 0 <_start>
    50c0:	mov	w4, #0x0                   	// #0
    50c4:	mov	x29, sp
    50c8:	ldr	x3, [x0]
    50cc:	adrp	x0, 0 <_start>
    50d0:	ldr	x2, [x0]
    50d4:	adrp	x0, 0 <_start>
    50d8:	ldr	x1, [x0]
    50dc:	adrp	x0, 0 <_start>
    50e0:	ldr	x0, [x0]
    50e4:	bl	4bf8 <grub_register_command_prio>
    50e8:	cbz	x0, 50f8 <grub_register_core_commands+0x40>
    50ec:	ldr	w1, [x0, #40]
    50f0:	orr	w1, w1, #0x200
    50f4:	str	w1, [x0, #40]
    50f8:	adrp	x0, 0 <_start>
    50fc:	mov	w4, #0x0                   	// #0
    5100:	ldr	x3, [x0]
    5104:	adrp	x0, 0 <_start>
    5108:	ldr	x2, [x0]
    510c:	adrp	x0, 0 <_start>
    5110:	ldr	x1, [x0]
    5114:	adrp	x0, 0 <_start>
    5118:	ldr	x0, [x0]
    511c:	bl	4bf8 <grub_register_command_prio>
    5120:	adrp	x0, 0 <_start>
    5124:	mov	w4, #0x0                   	// #0
    5128:	ldr	x3, [x0]
    512c:	adrp	x0, 0 <_start>
    5130:	ldr	x2, [x0]
    5134:	adrp	x0, 0 <_start>
    5138:	ldr	x1, [x0]
    513c:	adrp	x0, 0 <_start>
    5140:	ldr	x0, [x0]
    5144:	bl	4bf8 <grub_register_command_prio>
    5148:	adrp	x0, 0 <_start>
    514c:	mov	w4, #0x0                   	// #0
    5150:	ldp	x29, x30, [sp], #16
    5154:	ldr	x3, [x0]
    5158:	adrp	x0, 0 <_start>
    515c:	ldr	x2, [x0]
    5160:	adrp	x0, 0 <_start>
    5164:	ldr	x1, [x0]
    5168:	adrp	x0, 0 <_start>
    516c:	ldr	x0, [x0]
    5170:	b	4bf8 <grub_register_command_prio>
    5174:	nop
	...
    51f8:	stp	x29, x30, [sp, #-48]!
    51fc:	mov	x29, sp
    5200:	stp	x19, x20, [sp, #16]
    5204:	mov	x20, x1
    5208:	stp	x21, x22, [sp, #32]
    520c:	mov	x22, x0
    5210:	mov	x21, x2
    5214:	mov	x0, #0x10                  	// #16
    5218:	bl	47f8 <grub_malloc>
    521c:	cbz	x0, 523c <grub_register_core_commands+0x184>
    5220:	mov	x19, x0
    5224:	mov	x0, x20
    5228:	bl	9f80 <grub_partition_get_name>
    522c:	mov	x20, x0
    5230:	cbnz	x0, 5244 <grub_register_core_commands+0x18c>
    5234:	mov	x0, x19
    5238:	bl	4844 <grub_free>
    523c:	mov	w0, #0x1                   	// #1
    5240:	b	527c <grub_register_core_commands+0x1c4>
    5244:	mov	x2, x0
    5248:	adrp	x0, 0 <_start>
    524c:	ldr	x1, [x22]
    5250:	ldr	x0, [x0]
    5254:	bl	97a8 <grub_xasprintf>
    5258:	str	x0, [x19, #8]
    525c:	mov	x0, x20
    5260:	bl	4844 <grub_free>
    5264:	ldr	x0, [x19, #8]
    5268:	cbz	x0, 5234 <grub_register_core_commands+0x17c>
    526c:	ldr	x0, [x21, #16]
    5270:	str	x0, [x19]
    5274:	mov	w0, #0x0                   	// #0
    5278:	str	x19, [x21, #16]
    527c:	ldp	x19, x20, [sp, #16]
    5280:	ldp	x21, x22, [sp, #32]
    5284:	ldp	x29, x30, [sp], #48
    5288:	ret
    528c:	nop
	...

0000000000005298 <grub_device_open>:
    5298:	stp	x29, x30, [sp, #-32]!
    529c:	mov	x29, sp
    52a0:	stp	x19, x20, [sp, #16]
    52a4:	cbnz	x0, 52ec <grub_device_open+0x54>
    52a8:	adrp	x20, 0 <_start>
    52ac:	ldr	x0, [x20]
    52b0:	bl	70d8 <grub_env_get>
    52b4:	mov	x19, x0
    52b8:	cbz	x0, 52c4 <grub_device_open+0x2c>
    52bc:	ldrb	w0, [x0]
    52c0:	cbnz	w0, 52f0 <grub_device_open+0x58>
    52c4:	adrp	x0, 0 <_start>
    52c8:	ldr	x2, [x20]
    52cc:	mov	x20, #0x0                   	// #0
    52d0:	ldr	x1, [x0]
    52d4:	mov	w0, #0xd                   	// #13
    52d8:	bl	7300 <grub_error>
    52dc:	mov	x0, x20
    52e0:	mov	x20, #0x0                   	// #0
    52e4:	bl	4844 <grub_free>
    52e8:	b	5350 <grub_device_open+0xb8>
    52ec:	mov	x19, x0
    52f0:	mov	x0, #0x10                  	// #16
    52f4:	bl	47f8 <grub_malloc>
    52f8:	mov	x20, x0
    52fc:	cbz	x0, 52dc <grub_device_open+0x44>
    5300:	str	xzr, [x20, #8]
    5304:	mov	x0, x19
    5308:	bl	5ad0 <grub_disk_open>
    530c:	str	x0, [x20]
    5310:	cbnz	x0, 5350 <grub_device_open+0xb8>
    5314:	adrp	x0, 0 <_start>
    5318:	ldr	x0, [x0]
    531c:	ldr	x1, [x0]
    5320:	cbz	x1, 5348 <grub_device_open+0xb0>
    5324:	adrp	x0, 0 <_start>
    5328:	ldr	x0, [x0]
    532c:	ldr	w2, [x0]
    5330:	cmp	w2, #0xc
    5334:	b.ne	5348 <grub_device_open+0xb0>  // b.any
    5338:	str	wzr, [x0]
    533c:	mov	x0, x19
    5340:	blr	x1
    5344:	str	x0, [x20, #8]
    5348:	ldr	x0, [x20, #8]
    534c:	cbz	x0, 52dc <grub_device_open+0x44>
    5350:	mov	x0, x20
    5354:	ldp	x19, x20, [sp, #16]
    5358:	ldp	x29, x30, [sp], #32
    535c:	ret
	...

0000000000005380 <grub_device_close>:
    5380:	stp	x29, x30, [sp, #-32]!
    5384:	mov	x29, sp
    5388:	str	x19, [sp, #16]
    538c:	mov	x19, x0
    5390:	ldr	x0, [x0]
    5394:	cbz	x0, 539c <grub_device_close+0x1c>
    5398:	bl	5a20 <grub_disk_close>
    539c:	ldr	x0, [x19, #8]
    53a0:	cbz	x0, 53b4 <grub_device_close+0x34>
    53a4:	ldr	x0, [x0]
    53a8:	bl	4844 <grub_free>
    53ac:	ldr	x0, [x19, #8]
    53b0:	bl	4844 <grub_free>
    53b4:	mov	x0, x19
    53b8:	bl	4844 <grub_free>
    53bc:	adrp	x0, 0 <_start>
    53c0:	ldr	x19, [sp, #16]
    53c4:	ldr	x0, [x0]
    53c8:	ldp	x29, x30, [sp], #32
    53cc:	ldr	w0, [x0]
    53d0:	ret
    53d4:	nop
	...
    53e0:	stp	x29, x30, [sp, #-48]!
    53e4:	mov	x29, sp
    53e8:	stp	x19, x20, [sp, #16]
    53ec:	mov	x20, x1
    53f0:	ldp	x2, x1, [x1]
    53f4:	stp	x21, x22, [sp, #32]
    53f8:	mov	x21, x0
    53fc:	blr	x2
    5400:	cbnz	w0, 54ac <grub_device_close+0x12c>
    5404:	mov	w19, w0
    5408:	mov	x0, x21
    540c:	bl	5298 <grub_device_open>
    5410:	mov	x21, x0
    5414:	cbnz	x0, 5438 <grub_device_close+0xb8>
    5418:	adrp	x0, 0 <_start>
    541c:	ldr	x0, [x0]
    5420:	str	wzr, [x0]
    5424:	mov	w0, w19
    5428:	ldp	x19, x20, [sp, #16]
    542c:	ldp	x21, x22, [sp, #32]
    5430:	ldp	x29, x30, [sp], #48
    5434:	ret
    5438:	ldr	x3, [x0]
    543c:	cbz	x3, 54a4 <grub_device_close+0x124>
    5440:	adrp	x0, 0 <_start>
    5444:	mov	x2, x20
    5448:	str	xzr, [x20, #16]
    544c:	ldr	x1, [x0]
    5450:	mov	x0, x3
    5454:	bl	9ef0 <grub_partition_iterate>
    5458:	mov	x0, x21
    545c:	bl	5380 <grub_device_close>
    5460:	adrp	x0, 0 <_start>
    5464:	ldr	x21, [x20, #16]
    5468:	ldr	x0, [x0]
    546c:	str	wzr, [x0]
    5470:	cbz	x21, 5424 <grub_device_close+0xa4>
    5474:	ldr	x22, [x21]
    5478:	cbnz	w19, 548c <grub_device_close+0x10c>
    547c:	ldp	x2, x1, [x20]
    5480:	ldr	x0, [x21, #8]
    5484:	blr	x2
    5488:	mov	w19, w0
    548c:	ldr	x0, [x21, #8]
    5490:	bl	4844 <grub_free>
    5494:	mov	x0, x21
    5498:	mov	x21, x22
    549c:	bl	4844 <grub_free>
    54a0:	b	5470 <grub_device_close+0xf0>
    54a4:	bl	5380 <grub_device_close>
    54a8:	b	5424 <grub_device_close+0xa4>
    54ac:	mov	w19, #0x1                   	// #1
    54b0:	b	5424 <grub_device_close+0xa4>
    54b4:	nop
	...

00000000000054c8 <grub_device_iterate>:
    54c8:	stp	x29, x30, [sp, #-80]!
    54cc:	mov	x29, sp
    54d0:	stp	x19, x20, [sp, #16]
    54d4:	mov	w19, #0x0                   	// #0
    54d8:	stp	x21, x22, [sp, #32]
    54dc:	adrp	x21, 0 <_start>
    54e0:	adrp	x22, 0 <_start>
    54e4:	stp	x0, x1, [sp, #56]
    54e8:	str	xzr, [sp, #72]
    54ec:	ldr	x0, [x21]
    54f0:	ldr	x20, [x0]
    54f4:	cbnz	x20, 5518 <grub_device_iterate+0x50>
    54f8:	add	w19, w19, #0x1
    54fc:	cmp	w19, #0x3
    5500:	b.ne	54ec <grub_device_iterate+0x24>  // b.any
    5504:	mov	w0, #0x0                   	// #0
    5508:	ldp	x19, x20, [sp, #16]
    550c:	ldp	x21, x22, [sp, #32]
    5510:	ldp	x29, x30, [sp], #80
    5514:	ret
    5518:	ldr	x3, [x20, #16]
    551c:	cbnz	x3, 5528 <grub_device_iterate+0x60>
    5520:	ldr	x20, [x20, #56]
    5524:	b	54f4 <grub_device_iterate+0x2c>
    5528:	ldr	x0, [x22]
    552c:	mov	w2, w19
    5530:	add	x1, sp, #0x38
    5534:	blr	x3
    5538:	cbz	w0, 5520 <grub_device_iterate+0x58>
    553c:	mov	w0, #0x1                   	// #1
    5540:	b	5508 <grub_device_iterate+0x40>
    5544:	nop
	...
    5558:	stp	x29, x30, [sp, #-80]!
    555c:	mov	x29, sp
    5560:	stp	x19, x20, [sp, #16]
    5564:	ubfx	x20, x2, #6, #32
    5568:	stp	x23, x24, [sp, #48]
    556c:	mov	x23, x0
    5570:	mov	x0, #0xc57b                	// #50555
    5574:	movk	x0, #0x27, lsl #16
    5578:	stp	x21, x22, [sp, #32]
    557c:	mov	x22, x1
    5580:	madd	x20, x1, x0, x20
    5584:	mov	x0, #0x7ffff               	// #524287
    5588:	mov	x1, #0x3fd                 	// #1021
    558c:	str	x25, [sp, #64]
    5590:	madd	x0, x23, x0, x20
    5594:	mov	x21, x2
    5598:	mov	x24, x3
    559c:	udiv	x20, x0, x1
    55a0:	msub	x0, x20, x1, x0
    55a4:	mov	x20, #0x28                  	// #40
    55a8:	mul	x20, x0, x20
    55ac:	adrp	x0, 0 <_start>
    55b0:	ldr	x25, [x0]
    55b4:	mov	w0, #0x1                   	// #1
    55b8:	add	x19, x20, x25
    55bc:	str	w0, [x19, #32]
    55c0:	ldr	x0, [x19, #24]
    55c4:	bl	4844 <grub_free>
    55c8:	str	xzr, [x19, #24]
    55cc:	str	wzr, [x19, #32]
    55d0:	mov	x0, #0x8000                	// #32768
    55d4:	bl	47f8 <grub_malloc>
    55d8:	str	x0, [x19, #24]
    55dc:	cbnz	x0, 5604 <grub_device_iterate+0x13c>
    55e0:	adrp	x0, 0 <_start>
    55e4:	ldr	x0, [x0]
    55e8:	ldr	w0, [x0]
    55ec:	ldp	x19, x20, [sp, #16]
    55f0:	ldp	x21, x22, [sp, #32]
    55f4:	ldp	x23, x24, [sp, #48]
    55f8:	ldr	x25, [sp, #64]
    55fc:	ldp	x29, x30, [sp], #80
    5600:	ret
    5604:	mov	x1, x24
    5608:	mov	x2, #0x8000                	// #32768
    560c:	bl	84a4 <grub_memmove>
    5610:	str	w23, [x20, x25]
    5614:	mov	w0, #0x0                   	// #0
    5618:	stp	x22, x21, [x19, #8]
    561c:	b	55ec <grub_device_iterate+0x124>
	...
    5630:	ubfx	x3, x2, #6, #32
    5634:	mov	x4, #0xc57b                	// #50555
    5638:	movk	x4, #0x27, lsl #16
    563c:	mov	x5, #0x3fd                 	// #1021
    5640:	madd	x4, x1, x4, x3
    5644:	mov	x3, #0x7ffff               	// #524287
    5648:	madd	x4, x0, x3, x4
    564c:	udiv	x3, x4, x5
    5650:	msub	x3, x3, x5, x4
    5654:	mov	x4, #0x28                  	// #40
    5658:	mul	x3, x3, x4
    565c:	adrp	x4, 0 <_start>
    5660:	ldr	x5, [x4]
    5664:	add	x4, x3, x5
    5668:	ldr	w3, [x3, x5]
    566c:	cmp	x3, x0
    5670:	b.ne	5690 <grub_device_iterate+0x1c8>  // b.any
    5674:	ldr	x0, [x4, #8]
    5678:	cmp	x0, x1
    567c:	b.ne	5690 <grub_device_iterate+0x1c8>  // b.any
    5680:	ldr	x0, [x4, #16]
    5684:	cmp	x0, x2
    5688:	b.ne	5690 <grub_device_iterate+0x1c8>  // b.any
    568c:	str	wzr, [x4, #32]
    5690:	ret
    5694:	nop
	...
    56a0:	ubfx	x3, x2, #6, #32
    56a4:	mov	x4, #0xc57b                	// #50555
    56a8:	movk	x4, #0x27, lsl #16
    56ac:	mov	x5, #0x3fd                 	// #1021
    56b0:	madd	x4, x1, x4, x3
    56b4:	mov	x3, #0x7ffff               	// #524287
    56b8:	madd	x4, x0, x3, x4
    56bc:	udiv	x3, x4, x5
    56c0:	msub	x3, x3, x5, x4
    56c4:	mov	x4, #0x28                  	// #40
    56c8:	mul	x3, x3, x4
    56cc:	adrp	x4, 0 <_start>
    56d0:	ldr	x5, [x4]
    56d4:	add	x4, x3, x5
    56d8:	ldr	w3, [x3, x5]
    56dc:	cmp	x3, x0
    56e0:	b.ne	570c <grub_device_iterate+0x244>  // b.any
    56e4:	ldr	x0, [x4, #8]
    56e8:	cmp	x0, x1
    56ec:	b.ne	570c <grub_device_iterate+0x244>  // b.any
    56f0:	ldr	x0, [x4, #16]
    56f4:	cmp	x0, x2
    56f8:	b.ne	570c <grub_device_iterate+0x244>  // b.any
    56fc:	mov	w0, #0x1                   	// #1
    5700:	str	w0, [x4, #32]
    5704:	ldr	x0, [x4, #24]
    5708:	ret
    570c:	mov	x0, #0x0                   	// #0
    5710:	b	5708 <grub_device_iterate+0x240>
    5714:	nop
	...
    5720:	stp	x29, x30, [sp, #-96]!
    5724:	mov	x29, sp
    5728:	stp	x19, x20, [sp, #16]
    572c:	mov	x19, x0
    5730:	ldr	x0, [x0, #8]
    5734:	stp	x21, x22, [sp, #32]
    5738:	mov	x22, x1
    573c:	stp	x23, x24, [sp, #48]
    5740:	mov	x23, x2
    5744:	ldr	w0, [x0, #8]
    5748:	mov	x2, x1
    574c:	mov	x24, x3
    5750:	ldr	x1, [x19, #32]
    5754:	stp	x25, x26, [sp, #64]
    5758:	mov	x25, x4
    575c:	stp	x27, x28, [sp, #80]
    5760:	sub	x27, x3, #0x1
    5764:	bl	56a0 <grub_device_iterate+0x1d8>
    5768:	cbz	x0, 57b4 <grub_device_iterate+0x2ec>
    576c:	add	x1, x0, x23
    5770:	mov	x2, x24
    5774:	mov	x0, x25
    5778:	bl	84a4 <grub_memmove>
    577c:	ldr	x0, [x19, #8]
    5780:	mov	x2, x22
    5784:	ldr	x1, [x19, #32]
    5788:	ldr	w0, [x0, #8]
    578c:	bl	5630 <grub_device_iterate+0x168>
    5790:	ldr	x4, [x19, #48]
    5794:	cbz	x4, 57ac <grub_device_iterate+0x2e4>
    5798:	ldr	x3, [x19, #56]
    579c:	mov	w2, w24
    57a0:	and	w1, w23, #0x1ff
    57a4:	add	x0, x22, x23, lsr #9
    57a8:	blr	x4
    57ac:	mov	w0, #0x0                   	// #0
    57b0:	b	57d4 <grub_device_iterate+0x30c>
    57b4:	mov	x0, #0x8000                	// #32768
    57b8:	bl	47f8 <grub_malloc>
    57bc:	mov	x20, x0
    57c0:	cbnz	x0, 57f0 <grub_device_iterate+0x328>
    57c4:	adrp	x0, 0 <_start>
    57c8:	ldr	x0, [x0]
    57cc:	ldr	w0, [x0]
    57d0:	cbz	w0, 5790 <grub_device_iterate+0x2c8>
    57d4:	ldp	x19, x20, [sp, #16]
    57d8:	ldp	x21, x22, [sp, #32]
    57dc:	ldp	x23, x24, [sp, #48]
    57e0:	ldp	x25, x26, [sp, #64]
    57e4:	ldp	x27, x28, [sp, #80]
    57e8:	ldp	x29, x30, [sp], #96
    57ec:	ret
    57f0:	ldr	x0, [x19, #16]
    57f4:	ldr	w2, [x19, #24]
    57f8:	cmn	x0, #0x1
    57fc:	sub	w1, w2, #0x9
    5800:	b.eq	5814 <grub_device_iterate+0x34c>  // b.none
    5804:	add	x3, x22, #0x40
    5808:	lsl	x0, x0, x1
    580c:	cmp	x3, x0
    5810:	b.cs	5874 <grub_device_iterate+0x3ac>  // b.hs, b.nlast
    5814:	mov	w0, #0xf                   	// #15
    5818:	sub	w0, w0, w2
    581c:	ldr	x2, [x19, #8]
    5820:	mov	x3, x20
    5824:	lsr	x1, x22, x1
    5828:	ldr	x4, [x2, #40]
    582c:	mov	w2, #0x1                   	// #1
    5830:	lsl	w2, w2, w0
    5834:	mov	x0, x19
    5838:	blr	x4
    583c:	cbnz	w0, 5874 <grub_device_iterate+0x3ac>
    5840:	mov	x2, x24
    5844:	add	x1, x20, x23
    5848:	mov	x0, x25
    584c:	bl	84a4 <grub_memmove>
    5850:	ldr	x0, [x19, #8]
    5854:	mov	x3, x20
    5858:	ldr	x1, [x19, #32]
    585c:	mov	x2, x22
    5860:	ldr	w0, [x0, #8]
    5864:	bl	5558 <grub_device_iterate+0x90>
    5868:	mov	x0, x20
    586c:	bl	4844 <grub_free>
    5870:	b	5790 <grub_device_iterate+0x2c8>
    5874:	mov	x0, x20
    5878:	bl	4844 <grub_free>
    587c:	adrp	x0, 0 <_start>
    5880:	mov	x5, #0x1                   	// #1
    5884:	add	x3, x22, x23, lsr #9
    5888:	and	x20, x23, #0x1ff
    588c:	ldr	x26, [x0]
    5890:	ldr	w0, [x19, #24]
    5894:	sub	w1, w0, #0x9
    5898:	str	wzr, [x26]
    589c:	lsl	x21, x5, x0
    58a0:	lsl	x1, x5, x1
    58a4:	neg	x2, x1
    58a8:	and	x28, x2, x3
    58ac:	bic	x2, x3, x2
    58b0:	add	x20, x20, x2, lsl #9
    58b4:	add	x21, x21, x20
    58b8:	add	x21, x21, x27
    58bc:	lsr	x21, x21, x0
    58c0:	lsl	w0, w21, w0
    58c4:	bl	47f8 <grub_malloc>
    58c8:	mov	x27, x0
    58cc:	cbnz	x0, 58d8 <grub_device_iterate+0x410>
    58d0:	ldr	w0, [x26]
    58d4:	b	57d0 <grub_device_iterate+0x308>
    58d8:	ldr	x1, [x19, #8]
    58dc:	mov	x3, x0
    58e0:	ldr	w0, [x19, #24]
    58e4:	mov	w2, w21
    58e8:	ldr	x4, [x1, #40]
    58ec:	sub	w0, w0, #0x9
    58f0:	lsr	x1, x28, x0
    58f4:	mov	x0, x19
    58f8:	blr	x4
    58fc:	cbz	w0, 5938 <grub_device_iterate+0x470>
    5900:	bl	73a8 <grub_error_push>
    5904:	adrp	x0, 0 <_start>
    5908:	mov	w1, #0x180                 	// #384
    590c:	ldr	x4, [x19]
    5910:	ldr	x3, [x0]
    5914:	adrp	x0, 0 <_start>
    5918:	ldr	x2, [x0]
    591c:	adrp	x0, 0 <_start>
    5920:	ldr	x0, [x0]
    5924:	bl	9570 <grub_real_dprintf>
    5928:	bl	7448 <grub_error_pop>
    592c:	mov	x0, x27
    5930:	bl	4844 <grub_free>
    5934:	b	58d0 <grub_device_iterate+0x408>
    5938:	mov	x2, x24
    593c:	add	x1, x27, x20
    5940:	mov	x0, x25
    5944:	bl	84a4 <grub_memmove>
    5948:	mov	x0, x27
    594c:	b	586c <grub_device_iterate+0x3a4>
	...

0000000000005970 <grub_disk_cache_invalidate_all>:
    5970:	stp	x29, x30, [sp, #-32]!
    5974:	adrp	x0, 0 <_start>
    5978:	mov	x29, sp
    597c:	stp	x19, x20, [sp, #16]
    5980:	ldr	x19, [x0]
    5984:	mov	x0, #0x9f88                	// #40840
    5988:	add	x20, x19, x0
    598c:	ldr	x0, [x19, #24]
    5990:	cbz	x0, 59a4 <grub_disk_cache_invalidate_all+0x34>
    5994:	ldr	w1, [x19, #32]
    5998:	cbnz	w1, 59a4 <grub_disk_cache_invalidate_all+0x34>
    599c:	bl	4844 <grub_free>
    59a0:	str	xzr, [x19, #24]
    59a4:	add	x19, x19, #0x28
    59a8:	cmp	x19, x20
    59ac:	b.ne	598c <grub_disk_cache_invalidate_all+0x1c>  // b.any
    59b0:	ldp	x19, x20, [sp, #16]
    59b4:	ldp	x29, x30, [sp], #32
    59b8:	ret
    59bc:	nop
	...

00000000000059c8 <grub_disk_dev_register>:
    59c8:	adrp	x1, 0 <_start>
    59cc:	ldr	x1, [x1]
    59d0:	ldr	x2, [x1]
    59d4:	str	x0, [x1]
    59d8:	str	x2, [x0, #56]
    59dc:	ret
	...

00000000000059e8 <grub_disk_dev_unregister>:
    59e8:	adrp	x1, 0 <_start>
    59ec:	ldr	x2, [x1]
    59f0:	ldr	x1, [x2]
    59f4:	cbz	x1, 5a08 <grub_disk_dev_unregister+0x20>
    59f8:	cmp	x1, x0
    59fc:	ldr	x3, [x1, #56]
    5a00:	b.ne	5a0c <grub_disk_dev_unregister+0x24>  // b.any
    5a04:	str	x3, [x2]
    5a08:	ret
    5a0c:	add	x2, x1, #0x38
    5a10:	mov	x1, x3
    5a14:	b	59f4 <grub_disk_dev_unregister+0xc>
	...

0000000000005a20 <grub_disk_close>:
    5a20:	stp	x29, x30, [sp, #-32]!
    5a24:	mov	w1, #0x127                 	// #295
    5a28:	mov	x29, sp
    5a2c:	stp	x19, x20, [sp, #16]
    5a30:	mov	x19, x0
    5a34:	ldr	x4, [x0]
    5a38:	adrp	x0, 0 <_start>
    5a3c:	ldr	x3, [x0]
    5a40:	adrp	x0, 0 <_start>
    5a44:	ldr	x2, [x0]
    5a48:	adrp	x0, 0 <_start>
    5a4c:	ldr	x0, [x0]
    5a50:	bl	9570 <grub_real_dprintf>
    5a54:	ldr	x0, [x19, #8]
    5a58:	cbz	x0, 5a6c <grub_disk_close+0x4c>
    5a5c:	ldr	x1, [x0, #32]
    5a60:	cbz	x1, 5a6c <grub_disk_close+0x4c>
    5a64:	mov	x0, x19
    5a68:	blr	x1
    5a6c:	bl	4b88 <grub_get_time_ms>
    5a70:	adrp	x1, 0 <_start>
    5a74:	ldr	x1, [x1]
    5a78:	str	x0, [x1]
    5a7c:	ldr	x0, [x19, #40]
    5a80:	cbnz	x0, 5a9c <grub_disk_close+0x7c>
    5a84:	ldr	x0, [x19]
    5a88:	bl	4844 <grub_free>
    5a8c:	mov	x0, x19
    5a90:	ldp	x19, x20, [sp, #16]
    5a94:	ldp	x29, x30, [sp], #32
    5a98:	b	4844 <grub_free>
    5a9c:	ldr	x20, [x0, #40]
    5aa0:	bl	4844 <grub_free>
    5aa4:	str	x20, [x19, #40]
    5aa8:	b	5a7c <grub_disk_close+0x5c>
    5aac:	nop
	...

0000000000005ad0 <grub_disk_open>:
    5ad0:	stp	x29, x30, [sp, #-80]!
    5ad4:	mov	x4, x0
    5ad8:	mov	w1, #0xc4                  	// #196
    5adc:	mov	x29, sp
    5ae0:	stp	x19, x20, [sp, #16]
    5ae4:	mov	x20, x0
    5ae8:	adrp	x0, 0 <_start>
    5aec:	stp	x23, x24, [sp, #48]
    5af0:	adrp	x24, 0 <_start>
    5af4:	stp	x25, x26, [sp, #64]
    5af8:	adrp	x25, 0 <_start>
    5afc:	ldr	x3, [x0]
    5b00:	stp	x21, x22, [sp, #32]
    5b04:	ldr	x2, [x24]
    5b08:	ldr	x0, [x25]
    5b0c:	bl	9570 <grub_real_dprintf>
    5b10:	mov	x0, #0x48                  	// #72
    5b14:	bl	4804 <grub_zalloc>
    5b18:	mov	x19, x0
    5b1c:	cbz	x0, 5ce8 <grub_disk_open+0x218>
    5b20:	mov	x0, #0x9                   	// #9
    5b24:	mov	x22, x20
    5b28:	movk	x0, #0x20, lsl #32
    5b2c:	str	x0, [x19, #24]
    5b30:	mov	x0, x22
    5b34:	ldrb	w1, [x0], #1
    5b38:	cbnz	w1, 5b54 <grub_disk_open+0x84>
    5b3c:	mov	x0, x20
    5b40:	mov	x21, x20
    5b44:	bl	8818 <grub_strdup>
    5b48:	mov	x22, #0x0                   	// #0
    5b4c:	str	x0, [x19]
    5b50:	b	5bac <grub_disk_open+0xdc>
    5b54:	cmp	w1, #0x5c
    5b58:	b.ne	5b74 <grub_disk_open+0xa4>  // b.any
    5b5c:	ldrb	w1, [x22, #1]
    5b60:	cmp	w1, #0x2c
    5b64:	b.ne	5b6c <grub_disk_open+0x9c>  // b.any
    5b68:	add	x0, x22, #0x2
    5b6c:	mov	x22, x0
    5b70:	b	5b30 <grub_disk_open+0x60>
    5b74:	cmp	w1, #0x2c
    5b78:	b.ne	5b6c <grub_disk_open+0x9c>  // b.any
    5b7c:	sub	x23, x22, x20
    5b80:	add	x0, x23, #0x1
    5b84:	bl	47f8 <grub_malloc>
    5b88:	mov	x21, x0
    5b8c:	cbz	x0, 5c94 <grub_disk_open+0x1c4>
    5b90:	mov	x2, x23
    5b94:	mov	x1, x20
    5b98:	bl	84a4 <grub_memmove>
    5b9c:	strb	wzr, [x21, x23]
    5ba0:	mov	x0, x21
    5ba4:	bl	8818 <grub_strdup>
    5ba8:	str	x0, [x19]
    5bac:	ldr	x0, [x19]
    5bb0:	cbz	x0, 5c94 <grub_disk_open+0x1c4>
    5bb4:	adrp	x0, 0 <_start>
    5bb8:	adrp	x26, 0 <_start>
    5bbc:	ldr	x0, [x0]
    5bc0:	ldr	x23, [x0]
    5bc4:	cbnz	x23, 5be0 <grub_disk_open+0x110>
    5bc8:	adrp	x0, 0 <_start>
    5bcc:	mov	x2, x20
    5bd0:	ldr	x1, [x0]
    5bd4:	mov	w0, #0xc                   	// #12
    5bd8:	bl	7300 <grub_error>
    5bdc:	b	5c94 <grub_disk_open+0x1c4>
    5be0:	ldr	x2, [x23, #24]
    5be4:	mov	x1, x19
    5be8:	mov	x0, x21
    5bec:	blr	x2
    5bf0:	cbz	w0, 5c6c <grub_disk_open+0x19c>
    5bf4:	ldr	x0, [x26]
    5bf8:	ldr	w1, [x0]
    5bfc:	cmp	w1, #0xc
    5c00:	b.ne	5c94 <grub_disk_open+0x1c4>  // b.any
    5c04:	str	wzr, [x0]
    5c08:	ldr	x23, [x23, #56]
    5c0c:	b	5bc4 <grub_disk_open+0xf4>
    5c10:	str	x23, [x19, #8]
    5c14:	cbz	x22, 5c40 <grub_disk_open+0x170>
    5c18:	add	x1, x22, #0x1
    5c1c:	mov	x0, x19
    5c20:	bl	9d50 <grub_partition_probe>
    5c24:	str	x0, [x19, #40]
    5c28:	cbnz	x0, 5c40 <grub_disk_open+0x170>
    5c2c:	adrp	x0, 0 <_start>
    5c30:	ldr	x1, [x0]
    5c34:	mov	w0, #0xc                   	// #12
    5c38:	bl	7300 <grub_error>
    5c3c:	b	5c94 <grub_disk_open+0x1c4>
    5c40:	bl	4b88 <grub_get_time_ms>
    5c44:	mov	x22, x0
    5c48:	adrp	x0, 0 <_start>
    5c4c:	ldr	x23, [x0]
    5c50:	ldr	x0, [x23]
    5c54:	add	x0, x0, #0x7d0
    5c58:	cmp	x0, x22
    5c5c:	b.cs	5c64 <grub_disk_open+0x194>  // b.hs, b.nlast
    5c60:	bl	5970 <grub_disk_cache_invalidate_all>
    5c64:	str	x22, [x23]
    5c68:	b	5c94 <grub_disk_open+0x1c4>
    5c6c:	ldr	w0, [x19, #24]
    5c70:	sub	w1, w0, #0x9
    5c74:	cmp	w1, #0x6
    5c78:	b.ls	5c10 <grub_disk_open+0x140>  // b.plast
    5c7c:	mov	w2, #0x1                   	// #1
    5c80:	lsl	w2, w2, w0
    5c84:	adrp	x0, 0 <_start>
    5c88:	ldr	x1, [x0]
    5c8c:	mov	w0, #0x18                  	// #24
    5c90:	bl	7300 <grub_error>
    5c94:	cmp	x21, #0x0
    5c98:	ccmp	x21, x20, #0x4, ne  // ne = any
    5c9c:	b.eq	5ca8 <grub_disk_open+0x1d8>  // b.none
    5ca0:	mov	x0, x21
    5ca4:	bl	4844 <grub_free>
    5ca8:	adrp	x0, 0 <_start>
    5cac:	ldr	x0, [x0]
    5cb0:	ldr	w0, [x0]
    5cb4:	cbz	w0, 5ce8 <grub_disk_open+0x218>
    5cb8:	bl	73a8 <grub_error_push>
    5cbc:	adrp	x0, 0 <_start>
    5cc0:	mov	x4, x20
    5cc4:	ldr	x2, [x24]
    5cc8:	mov	w1, #0x119                 	// #281
    5ccc:	ldr	x3, [x0]
    5cd0:	ldr	x0, [x25]
    5cd4:	bl	9570 <grub_real_dprintf>
    5cd8:	bl	7448 <grub_error_pop>
    5cdc:	mov	x0, x19
    5ce0:	mov	x19, #0x0                   	// #0
    5ce4:	bl	5a20 <grub_disk_close>
    5ce8:	mov	x0, x19
    5cec:	ldp	x19, x20, [sp, #16]
    5cf0:	ldp	x21, x22, [sp, #32]
    5cf4:	ldp	x23, x24, [sp, #48]
    5cf8:	ldp	x25, x26, [sp, #64]
    5cfc:	ldp	x29, x30, [sp], #80
    5d00:	ret
    5d04:	nop
	...

0000000000005d58 <grub_disk_read>:
    5d58:	stp	x29, x30, [sp, #-96]!
    5d5c:	mov	x29, sp
    5d60:	stp	x23, x24, [sp, #48]
    5d64:	and	x24, x2, #0x1ff
    5d68:	mov	x23, x4
    5d6c:	stp	x19, x20, [sp, #16]
    5d70:	add	x19, x1, x2, lsr #9
    5d74:	add	x1, x24, #0x1ff
    5d78:	add	x1, x1, x3
    5d7c:	stp	x21, x22, [sp, #32]
    5d80:	mov	x21, x3
    5d84:	lsr	x1, x1, #9
    5d88:	mov	x20, x0
    5d8c:	stp	x25, x26, [sp, #64]
    5d90:	ldr	x0, [x0, #40]
    5d94:	str	x27, [sp, #80]
    5d98:	cbnz	x0, 5de4 <grub_disk_read+0x8c>
    5d9c:	ldr	w0, [x20, #24]
    5da0:	sub	w2, w0, #0x9
    5da4:	ldr	x0, [x20, #16]
    5da8:	lsl	x0, x0, x2
    5dac:	mov	x2, #0x8000000000000       	// #2251799813685248
    5db0:	cmp	x0, x2
    5db4:	csel	x0, x0, x2, ls  // ls = plast
    5db8:	cmp	x0, x19
    5dbc:	b.ls	5dcc <grub_disk_read+0x74>  // b.plast
    5dc0:	sub	x0, x0, x19
    5dc4:	cmp	x1, x0
    5dc8:	b.ls	5e78 <grub_disk_read+0x120>  // b.plast
    5dcc:	adrp	x0, 0 <_start>
    5dd0:	ldr	x2, [x20]
    5dd4:	ldr	x1, [x0]
    5dd8:	mov	w0, #0xb                   	// #11
    5ddc:	bl	7300 <grub_error>
    5de0:	b	5e0c <grub_disk_read+0xb4>
    5de4:	ldp	x3, x2, [x0, #8]
    5de8:	cmp	x2, x19
    5dec:	b.ls	5dfc <grub_disk_read+0xa4>  // b.plast
    5df0:	sub	x2, x2, x19
    5df4:	cmp	x2, x1
    5df8:	b.cs	5e6c <grub_disk_read+0x114>  // b.hs, b.nlast
    5dfc:	adrp	x0, 0 <_start>
    5e00:	ldr	x1, [x0]
    5e04:	mov	w0, #0xb                   	// #11
    5e08:	bl	7300 <grub_error>
    5e0c:	cbz	w0, 5e78 <grub_disk_read+0x120>
    5e10:	bl	73a8 <grub_error_push>
    5e14:	adrp	x0, 0 <_start>
    5e18:	mov	x4, x19
    5e1c:	mov	w1, #0x1a4                 	// #420
    5e20:	ldr	x5, [x0]
    5e24:	adrp	x0, 0 <_start>
    5e28:	ldr	x3, [x0]
    5e2c:	adrp	x0, 0 <_start>
    5e30:	ldr	x2, [x0]
    5e34:	adrp	x0, 0 <_start>
    5e38:	ldr	x0, [x0]
    5e3c:	bl	9570 <grub_real_dprintf>
    5e40:	bl	7448 <grub_error_pop>
    5e44:	adrp	x0, 0 <_start>
    5e48:	ldr	x0, [x0]
    5e4c:	ldr	w0, [x0]
    5e50:	ldp	x19, x20, [sp, #16]
    5e54:	ldp	x21, x22, [sp, #32]
    5e58:	ldp	x23, x24, [sp, #48]
    5e5c:	ldp	x25, x26, [sp, #64]
    5e60:	ldr	x27, [sp, #80]
    5e64:	ldp	x29, x30, [sp], #96
    5e68:	ret
    5e6c:	add	x19, x19, x3
    5e70:	ldr	x0, [x0, #40]
    5e74:	b	5d98 <grub_disk_read+0x40>
    5e78:	and	x2, x19, #0x3f
    5e7c:	orr	x0, x2, x24
    5e80:	cbz	x0, 5ec0 <grub_disk_read+0x168>
    5e84:	add	x2, x24, x2, lsl #9
    5e88:	mov	x22, #0x8000                	// #32768
    5e8c:	sub	x22, x22, x2
    5e90:	mov	x4, x23
    5e94:	cmp	x21, x22
    5e98:	and	x1, x19, #0xffffffffffffffc0
    5e9c:	csel	x22, x21, x22, ls  // ls = plast
    5ea0:	mov	x0, x20
    5ea4:	mov	x3, x22
    5ea8:	bl	5720 <grub_device_iterate+0x258>
    5eac:	cbnz	w0, 5e50 <grub_disk_read+0xf8>
    5eb0:	add	x23, x23, x22
    5eb4:	sub	x21, x21, x22
    5eb8:	add	x22, x22, x24
    5ebc:	add	x19, x19, x22, lsr #9
    5ec0:	mov	x25, #0x7fff                	// #32767
    5ec4:	mov	w26, #0xf                   	// #15
    5ec8:	cmp	x21, x25
    5ecc:	b.ls	5fc8 <grub_disk_read+0x270>  // b.plast
    5ed0:	lsr	x6, x21, #15
    5ed4:	mov	x22, #0x0                   	// #0
    5ed8:	b	5f08 <grub_disk_read+0x1b0>
    5edc:	ldr	x0, [x20, #8]
    5ee0:	add	x27, x19, x22, lsl #6
    5ee4:	ldr	x1, [x20, #32]
    5ee8:	mov	x2, x27
    5eec:	ldr	w0, [x0, #8]
    5ef0:	bl	56a0 <grub_device_iterate+0x1d8>
    5ef4:	mov	x24, x0
    5ef8:	cbnz	x0, 5fec <grub_disk_read+0x294>
    5efc:	add	x22, x22, #0x1
    5f00:	cmp	x6, x22
    5f04:	b.ls	5f1c <grub_disk_read+0x1c4>  // b.plast
    5f08:	ldr	w0, [x20, #28]
    5f0c:	cmp	x22, x0
    5f10:	b.cc	5edc <grub_disk_read+0x184>  // b.lo, b.ul, b.last
    5f14:	cbz	x22, 5ec8 <grub_disk_read+0x170>
    5f18:	mov	x24, #0x0                   	// #0
    5f1c:	ldr	x0, [x20, #8]
    5f20:	mov	x3, x23
    5f24:	ldr	w1, [x20, #24]
    5f28:	ldr	x4, [x0, #40]
    5f2c:	sub	w2, w26, w1
    5f30:	sub	w1, w1, #0x9
    5f34:	mov	x0, x20
    5f38:	lsl	x2, x22, x2
    5f3c:	lsr	x1, x19, x1
    5f40:	blr	x4
    5f44:	cbnz	w0, 5e50 <grub_disk_read+0xf8>
    5f48:	mov	x27, #0x0                   	// #0
    5f4c:	ldr	x0, [x20, #8]
    5f50:	add	x3, x23, x27, lsl #15
    5f54:	ldr	x1, [x20, #32]
    5f58:	add	x2, x19, x27, lsl #6
    5f5c:	ldr	w0, [x0, #8]
    5f60:	add	x27, x27, #0x1
    5f64:	bl	5558 <grub_device_iterate+0x90>
    5f68:	cmp	x22, x27
    5f6c:	b.hi	5f4c <grub_disk_read+0x1f4>  // b.pmore
    5f70:	ldr	x4, [x20, #48]
    5f74:	cbz	x4, 5f8c <grub_disk_read+0x234>
    5f78:	ldr	x3, [x20, #56]
    5f7c:	lsl	w2, w22, #15
    5f80:	mov	x0, x19
    5f84:	mov	w1, #0x0                   	// #0
    5f88:	blr	x4
    5f8c:	add	x19, x19, x22, lsl #6
    5f90:	sub	x21, x21, x22, lsl #15
    5f94:	add	x23, x23, x22, lsl #15
    5f98:	cbz	x24, 5ec8 <grub_disk_read+0x170>
    5f9c:	ldr	x4, [x20, #48]
    5fa0:	cbz	x4, 5fb8 <grub_disk_read+0x260>
    5fa4:	ldr	x3, [x20, #56]
    5fa8:	mov	x0, x19
    5fac:	mov	w2, #0x8000                	// #32768
    5fb0:	mov	w1, #0x0                   	// #0
    5fb4:	blr	x4
    5fb8:	add	x19, x19, #0x40
    5fbc:	add	x23, x23, #0x8, lsl #12
    5fc0:	sub	x21, x21, #0x8, lsl #12
    5fc4:	b	5ec8 <grub_disk_read+0x170>
    5fc8:	cbz	x21, 5e44 <grub_disk_read+0xec>
    5fcc:	mov	x4, x23
    5fd0:	mov	x3, x21
    5fd4:	mov	x1, x19
    5fd8:	mov	x0, x20
    5fdc:	mov	x2, #0x0                   	// #0
    5fe0:	bl	5720 <grub_device_iterate+0x258>
    5fe4:	cbz	w0, 5e44 <grub_disk_read+0xec>
    5fe8:	b	5e50 <grub_disk_read+0xf8>
    5fec:	mov	x1, x0
    5ff0:	mov	x2, #0x8000                	// #32768
    5ff4:	add	x0, x23, x22, lsl #15
    5ff8:	bl	84a4 <grub_memmove>
    5ffc:	ldr	x0, [x20, #8]
    6000:	mov	x2, x27
    6004:	ldr	x1, [x20, #32]
    6008:	ldr	w0, [x0, #8]
    600c:	bl	5630 <grub_device_iterate+0x168>
    6010:	cbnz	x22, 5f1c <grub_disk_read+0x1c4>
    6014:	b	5f9c <grub_disk_read+0x244>
	...

0000000000006050 <grub_disk_get_size>:
    6050:	mov	x1, x0
    6054:	ldr	x0, [x0, #40]
    6058:	cbz	x0, 6064 <grub_disk_get_size+0x14>
    605c:	ldr	x0, [x0, #16]
    6060:	ret
    6064:	ldr	x0, [x1, #16]
    6068:	cmn	x0, #0x1
    606c:	b.eq	6060 <grub_disk_get_size+0x10>  // b.none
    6070:	ldr	w1, [x1, #24]
    6074:	sub	w1, w1, #0x9
    6078:	lsl	x0, x0, x1
    607c:	b	6060 <grub_disk_get_size+0x10>
    6080:	stp	x29, x30, [sp, #-32]!
    6084:	mov	x29, sp
    6088:	stp	x19, x20, [sp, #16]
    608c:	mov	x20, x0
    6090:	adrp	x0, 0 <_start>
    6094:	ldr	x0, [x0]
    6098:	ldr	x19, [x0]
    609c:	cbnz	x19, 60b0 <grub_disk_get_size+0x60>
    60a0:	mov	x0, x19
    60a4:	ldp	x19, x20, [sp, #16]
    60a8:	ldp	x29, x30, [sp], #32
    60ac:	ret
    60b0:	ldr	x1, [x19]
    60b4:	mov	x0, x20
    60b8:	bl	85a4 <grub_strcmp>
    60bc:	cbz	w0, 60a0 <grub_disk_get_size+0x50>
    60c0:	ldr	x19, [x19, #112]
    60c4:	b	609c <grub_disk_get_size+0x4c>
	...
    60d0:	stp	x29, x30, [sp, #-64]!
    60d4:	mov	x29, sp
    60d8:	stp	x19, x20, [sp, #16]
    60dc:	mov	x20, x0
    60e0:	stp	x21, x22, [sp, #32]
    60e4:	mov	x22, x1
    60e8:	ldrh	w1, [x0, #58]
    60ec:	ldr	x19, [x0, #40]
    60f0:	mov	w21, #0x0                   	// #0
    60f4:	ldrh	w0, [x0, #62]
    60f8:	add	x19, x20, x19
    60fc:	str	x23, [sp, #48]
    6100:	mul	w0, w0, w1
    6104:	add	x0, x19, w0, sxtw
    6108:	ldr	x23, [x0, #24]
    610c:	ldrh	w0, [x20, #60]
    6110:	cmp	w0, w21
    6114:	b.hi	6134 <grub_disk_get_size+0xe4>  // b.pmore
    6118:	mov	x19, #0x0                   	// #0
    611c:	mov	x0, x19
    6120:	ldp	x19, x20, [sp, #16]
    6124:	ldp	x21, x22, [sp, #32]
    6128:	ldr	x23, [sp, #48]
    612c:	ldp	x29, x30, [sp], #64
    6130:	ret
    6134:	ldr	w0, [x19]
    6138:	mov	x1, x22
    613c:	add	x0, x0, x23
    6140:	add	x0, x20, x0
    6144:	bl	85a4 <grub_strcmp>
    6148:	cbz	w0, 611c <grub_disk_get_size+0xcc>
    614c:	ldrh	w0, [x20, #58]
    6150:	add	w21, w21, #0x1
    6154:	add	x19, x19, x0
    6158:	b	610c <grub_disk_get_size+0xbc>

000000000000615c <grub_dl_add>:
    615c:	stp	x29, x30, [sp, #-32]!
    6160:	mov	x29, sp
    6164:	str	x19, [sp, #16]
    6168:	mov	x19, x0
    616c:	ldr	x0, [x0]
    6170:	bl	6080 <grub_disk_get_size+0x30>
    6174:	cbz	x0, 6194 <grub_dl_add+0x38>
    6178:	adrp	x0, 0 <_start>
    617c:	ldr	x2, [x19]
    6180:	ldr	x19, [sp, #16]
    6184:	ldp	x29, x30, [sp], #32
    6188:	ldr	x1, [x0]
    618c:	mov	w0, #0x2                   	// #2
    6190:	b	7300 <grub_error>
    6194:	mov	w0, #0x0                   	// #0
    6198:	ldr	x19, [sp, #16]
    619c:	ldp	x29, x30, [sp], #32
    61a0:	ret
    61a4:	nop
	...

00000000000061b0 <grub_dl_register_symbol>:
    61b0:	stp	x29, x30, [sp, #-64]!
    61b4:	mov	x29, sp
    61b8:	stp	x19, x20, [sp, #16]
    61bc:	mov	x20, x0
    61c0:	mov	x0, #0x28                  	// #40
    61c4:	stp	x21, x22, [sp, #32]
    61c8:	mov	w22, w2
    61cc:	mov	x21, x3
    61d0:	str	x23, [sp, #48]
    61d4:	mov	x23, x1
    61d8:	bl	47f8 <grub_malloc>
    61dc:	cbnz	x0, 6200 <grub_dl_register_symbol+0x50>
    61e0:	adrp	x0, 0 <_start>
    61e4:	ldr	x0, [x0]
    61e8:	ldr	w0, [x0]
    61ec:	ldp	x19, x20, [sp, #16]
    61f0:	ldp	x21, x22, [sp, #32]
    61f4:	ldr	x23, [sp, #48]
    61f8:	ldp	x29, x30, [sp], #64
    61fc:	ret
    6200:	mov	x19, x0
    6204:	cbz	x21, 6224 <grub_dl_register_symbol+0x74>
    6208:	mov	x0, x20
    620c:	bl	8818 <grub_strdup>
    6210:	str	x0, [x19, #8]
    6214:	cbnz	x0, 6228 <grub_dl_register_symbol+0x78>
    6218:	mov	x0, x19
    621c:	bl	4844 <grub_free>
    6220:	b	61e0 <grub_dl_register_symbol+0x30>
    6224:	str	x20, [x0, #8]
    6228:	mov	w2, #0x3f                  	// #63
    622c:	mov	w1, #0x0                   	// #0
    6230:	movk	w2, #0x1, lsl #16
    6234:	str	x23, [x19, #16]
    6238:	str	w22, [x19, #24]
    623c:	str	x21, [x19, #32]
    6240:	ldrb	w0, [x20]
    6244:	cbnz	w0, 6278 <grub_dl_register_symbol+0xc8>
    6248:	add	w1, w1, w1, lsr #5
    624c:	mov	w3, #0x1fd                 	// #509
    6250:	adrp	x0, 0 <_start>
    6254:	udiv	w2, w1, w3
    6258:	ldr	x0, [x0]
    625c:	msub	w1, w2, w3, w1
    6260:	add	x0, x0, #0x8
    6264:	ldr	x2, [x0, x1, lsl #3]
    6268:	str	x2, [x19]
    626c:	str	x19, [x0, x1, lsl #3]
    6270:	mov	w0, #0x0                   	// #0
    6274:	b	61ec <grub_dl_register_symbol+0x3c>
    6278:	madd	w1, w1, w2, w0
    627c:	add	x20, x20, #0x1
    6280:	b	6240 <grub_dl_register_symbol+0x90>
    6284:	nop
	...

0000000000006298 <grub_dl_ref>:
    6298:	cbz	x0, 62dc <grub_dl_ref+0x44>
    629c:	stp	x29, x30, [sp, #-32]!
    62a0:	mov	x29, sp
    62a4:	stp	x19, x20, [sp, #16]
    62a8:	mov	x19, x0
    62ac:	ldr	x20, [x0, #16]
    62b0:	cbnz	x20, 62cc <grub_dl_ref+0x34>
    62b4:	ldr	w0, [x19, #8]
    62b8:	add	w0, w0, #0x1
    62bc:	str	w0, [x19, #8]
    62c0:	ldp	x19, x20, [sp, #16]
    62c4:	ldp	x29, x30, [sp], #32
    62c8:	ret
    62cc:	ldr	x0, [x20, #8]
    62d0:	bl	6298 <grub_dl_ref>
    62d4:	ldr	x20, [x20]
    62d8:	b	62b0 <grub_dl_ref+0x18>
    62dc:	mov	w0, #0x0                   	// #0
    62e0:	ret

00000000000062e4 <grub_dl_unref>:
    62e4:	cbz	x0, 6328 <grub_dl_unref+0x44>
    62e8:	stp	x29, x30, [sp, #-32]!
    62ec:	mov	x29, sp
    62f0:	stp	x19, x20, [sp, #16]
    62f4:	mov	x19, x0
    62f8:	ldr	x20, [x0, #16]
    62fc:	cbnz	x20, 6318 <grub_dl_unref+0x34>
    6300:	ldr	w0, [x19, #8]
    6304:	sub	w0, w0, #0x1
    6308:	str	w0, [x19, #8]
    630c:	ldp	x19, x20, [sp, #16]
    6310:	ldp	x29, x30, [sp], #32
    6314:	ret
    6318:	ldr	x0, [x20, #8]
    631c:	bl	62e4 <grub_dl_unref>
    6320:	ldr	x20, [x20]
    6324:	b	62fc <grub_dl_unref+0x18>
    6328:	mov	w0, #0x0                   	// #0
    632c:	ret

0000000000006330 <grub_dl_unload>:
    6330:	stp	x29, x30, [sp, #-64]!
    6334:	mov	x29, sp
    6338:	stp	x19, x20, [sp, #16]
    633c:	mov	x19, x0
    6340:	ldr	w0, [x0, #8]
    6344:	stp	x21, x22, [sp, #32]
    6348:	cmp	w0, #0x0
    634c:	stp	x23, x24, [sp, #48]
    6350:	b.gt	6434 <grub_dl_unload+0x104>
    6354:	ldr	x0, [x19, #56]
    6358:	cbz	x0, 6360 <grub_dl_unload+0x30>
    635c:	blr	x0
    6360:	adrp	x0, 0 <_start>
    6364:	ldr	x0, [x0]
    6368:	mov	x2, x0
    636c:	ldr	x1, [x0]
    6370:	cbz	x1, 6384 <grub_dl_unload+0x54>
    6374:	cmp	x19, x1
    6378:	ldr	x3, [x1, #112]
    637c:	b.ne	63dc <grub_dl_unload+0xac>  // b.any
    6380:	str	x3, [x2]
    6384:	add	x22, x0, #0x8
    6388:	add	x21, x0, #0xff0
    638c:	ldr	x20, [x22]
    6390:	mov	x23, x22
    6394:	cbnz	x20, 63e8 <grub_dl_unload+0xb8>
    6398:	add	x22, x22, #0x8
    639c:	cmp	x22, x21
    63a0:	b.ne	638c <grub_dl_unload+0x5c>  // b.any
    63a4:	ldr	x20, [x19, #16]
    63a8:	cbnz	x20, 641c <grub_dl_unload+0xec>
    63ac:	ldr	x0, [x19, #96]
    63b0:	bl	4844 <grub_free>
    63b4:	ldr	x0, [x19]
    63b8:	bl	4844 <grub_free>
    63bc:	mov	x0, x19
    63c0:	bl	4844 <grub_free>
    63c4:	mov	w0, #0x1                   	// #1
    63c8:	ldp	x19, x20, [sp, #16]
    63cc:	ldp	x21, x22, [sp, #32]
    63d0:	ldp	x23, x24, [sp, #48]
    63d4:	ldp	x29, x30, [sp], #64
    63d8:	ret
    63dc:	add	x2, x1, #0x70
    63e0:	mov	x1, x3
    63e4:	b	6370 <grub_dl_unload+0x40>
    63e8:	ldr	x0, [x20, #32]
    63ec:	ldr	x24, [x20]
    63f0:	cmp	x19, x0
    63f4:	b.ne	6414 <grub_dl_unload+0xe4>  // b.any
    63f8:	ldr	x0, [x20, #8]
    63fc:	str	x24, [x23]
    6400:	bl	4844 <grub_free>
    6404:	mov	x0, x20
    6408:	bl	4844 <grub_free>
    640c:	mov	x20, x24
    6410:	b	6394 <grub_dl_unload+0x64>
    6414:	mov	x23, x20
    6418:	b	640c <grub_dl_unload+0xdc>
    641c:	ldp	x21, x0, [x20]
    6420:	bl	6330 <grub_dl_unload>
    6424:	mov	x0, x20
    6428:	mov	x20, x21
    642c:	bl	4844 <grub_free>
    6430:	b	63a8 <grub_dl_unload+0x78>
    6434:	mov	w0, #0x0                   	// #0
    6438:	b	63c8 <grub_dl_unload+0x98>
    643c:	nop
	...

0000000000006448 <grub_dl_load_core_noinit>:
    6448:	stp	x29, x30, [sp, #-144]!
    644c:	mov	x4, x0
    6450:	mov	x5, x1
    6454:	mov	x29, sp
    6458:	stp	x19, x20, [sp, #16]
    645c:	mov	x20, x0
    6460:	adrp	x0, 0 <_start>
    6464:	stp	x21, x22, [sp, #32]
    6468:	adrp	x21, 0 <_start>
    646c:	adrp	x22, 0 <_start>
    6470:	ldr	x3, [x0]
    6474:	mov	x19, x1
    6478:	ldr	x2, [x21]
    647c:	mov	w1, #0x259                 	// #601
    6480:	ldr	x0, [x22]
    6484:	stp	x23, x24, [sp, #48]
    6488:	stp	x25, x26, [sp, #64]
    648c:	stp	x27, x28, [sp, #80]
    6490:	bl	9570 <grub_real_dprintf>
    6494:	cmp	x19, #0x3f
    6498:	b.hi	64bc <grub_dl_load_core_noinit+0x74>  // b.pmore
    649c:	adrp	x0, 0 <_start>
    64a0:	ldr	x1, [x0]
    64a4:	mov	w0, #0x15                  	// #21
    64a8:	bl	7300 <grub_error>
    64ac:	mov	w23, w0
    64b0:	cbz	w0, 6500 <grub_dl_load_core_noinit+0xb8>
    64b4:	mov	x19, #0x0                   	// #0
    64b8:	b	6bd0 <grub_dl_load_core_noinit+0x788>
    64bc:	ldr	w1, [x20]
    64c0:	mov	w0, #0x457f                	// #17791
    64c4:	movk	w0, #0x464c, lsl #16
    64c8:	cmp	w1, w0
    64cc:	b.ne	64e8 <grub_dl_load_core_noinit+0xa0>  // b.any
    64d0:	ldrb	w0, [x20, #6]
    64d4:	cmp	w0, #0x1
    64d8:	b.ne	64e8 <grub_dl_load_core_noinit+0xa0>  // b.any
    64dc:	ldr	w0, [x20, #20]
    64e0:	cmp	w0, #0x1
    64e4:	b.eq	64f4 <grub_dl_load_core_noinit+0xac>  // b.none
    64e8:	adrp	x0, 0 <_start>
    64ec:	ldr	x1, [x0]
    64f0:	b	64a4 <grub_dl_load_core_noinit+0x5c>
    64f4:	mov	x0, x20
    64f8:	bl	2f8 <grub_arch_dl_check_header>
    64fc:	b	64ac <grub_dl_load_core_noinit+0x64>
    6500:	ldrh	w24, [x20, #16]
    6504:	cmp	w24, #0x1
    6508:	b.eq	6520 <grub_dl_load_core_noinit+0xd8>  // b.none
    650c:	adrp	x0, 0 <_start>
    6510:	ldr	x1, [x0]
    6514:	mov	w0, #0x2                   	// #2
    6518:	bl	7300 <grub_error>
    651c:	b	64b4 <grub_dl_load_core_noinit+0x6c>
    6520:	ldrh	w0, [x20, #58]
    6524:	ldrh	w2, [x20, #60]
    6528:	ldr	x1, [x20, #40]
    652c:	umaddl	x0, w0, w2, x1
    6530:	cmp	x0, x19
    6534:	b.ls	6548 <grub_dl_load_core_noinit+0x100>  // b.plast
    6538:	adrp	x0, 0 <_start>
    653c:	ldr	x1, [x0]
    6540:	mov	w0, #0x15                  	// #21
    6544:	b	6518 <grub_dl_load_core_noinit+0xd0>
    6548:	mov	x0, #0x78                  	// #120
    654c:	bl	4804 <grub_zalloc>
    6550:	mov	x19, x0
    6554:	cbz	x0, 64b4 <grub_dl_load_core_noinit+0x6c>
    6558:	mov	x4, x0
    655c:	adrp	x0, 0 <_start>
    6560:	ldr	x2, [x21]
    6564:	str	w24, [x19, #8]
    6568:	ldr	x3, [x0]
    656c:	mov	w1, #0x272                 	// #626
    6570:	ldr	x0, [x22]
    6574:	bl	9570 <grub_real_dprintf>
    6578:	adrp	x0, 0 <_start>
    657c:	ldr	x1, [x0]
    6580:	mov	x0, x20
    6584:	bl	60d0 <grub_disk_get_size+0x80>
    6588:	mov	x24, x0
    658c:	cbnz	x0, 65dc <grub_dl_load_core_noinit+0x194>
    6590:	adrp	x0, 0 <_start>
    6594:	ldr	x1, [x0]
    6598:	mov	w0, #0x2                   	// #2
    659c:	bl	7300 <grub_error>
    65a0:	cbnz	w0, 65cc <grub_dl_load_core_noinit+0x184>
    65a4:	adrp	x0, 0 <_start>
    65a8:	ldr	x1, [x0]
    65ac:	mov	x0, x20
    65b0:	bl	60d0 <grub_disk_get_size+0x80>
    65b4:	cbnz	x0, 6628 <grub_dl_load_core_noinit+0x1e0>
    65b8:	adrp	x0, 0 <_start>
    65bc:	ldr	x1, [x0]
    65c0:	mov	w0, #0x2                   	// #2
    65c4:	bl	7300 <grub_error>
    65c8:	cbz	w0, 663c <grub_dl_load_core_noinit+0x1f4>
    65cc:	str	xzr, [x19, #56]
    65d0:	mov	x0, x19
    65d4:	bl	6330 <grub_dl_unload>
    65d8:	b	64b4 <grub_dl_load_core_noinit+0x6c>
    65dc:	adrp	x1, 0 <_start>
    65e0:	ldr	x0, [x0, #24]
    65e4:	ldr	x1, [x1]
    65e8:	add	x0, x20, x0
    65ec:	bl	85a4 <grub_strcmp>
    65f0:	cbz	w0, 65a4 <grub_dl_load_core_noinit+0x15c>
    65f4:	adrp	x1, 0 <_start>
    65f8:	ldr	x0, [x24, #24]
    65fc:	ldr	x1, [x1]
    6600:	add	x0, x20, x0
    6604:	bl	85a4 <grub_strcmp>
    6608:	cbz	w0, 65a4 <grub_dl_load_core_noinit+0x15c>
    660c:	adrp	x1, 0 <_start>
    6610:	ldr	x0, [x24, #24]
    6614:	ldr	x1, [x1]
    6618:	add	x0, x20, x0
    661c:	bl	85a4 <grub_strcmp>
    6620:	cbnz	w0, 6590 <grub_dl_load_core_noinit+0x148>
    6624:	b	65a4 <grub_dl_load_core_noinit+0x15c>
    6628:	ldr	x0, [x0, #24]
    662c:	add	x0, x20, x0
    6630:	bl	8818 <grub_strdup>
    6634:	str	x0, [x19]
    6638:	cbz	x0, 6720 <grub_dl_load_core_noinit+0x2d8>
    663c:	adrp	x0, 0 <_start>
    6640:	ldr	x1, [x0]
    6644:	mov	x0, x20
    6648:	bl	60d0 <grub_disk_get_size+0x80>
    664c:	cbnz	x0, 6730 <grub_dl_load_core_noinit+0x2e8>
    6650:	ldr	x0, [x20, #40]
    6654:	mov	x26, #0x1                   	// #1
    6658:	ldrh	w3, [x20, #60]
    665c:	mov	x24, #0x0                   	// #0
    6660:	add	x0, x20, x0
    6664:	cmp	w23, w3
    6668:	b.cc	67a0 <grub_dl_load_core_noinit+0x358>  // b.lo, b.ul, b.last
    666c:	add	x2, sp, #0x88
    6670:	add	x1, sp, #0x80
    6674:	mov	x0, x20
    6678:	bl	838 <grub_arm64_dl_get_tramp_got_size>
    667c:	mov	w23, w0
    6680:	cbnz	w0, 65cc <grub_dl_load_core_noinit+0x184>
    6684:	ldp	x25, x1, [sp, #128]
    6688:	cmp	x26, #0x8
    668c:	mov	x0, #0x8                   	// #8
    6690:	csel	x0, x26, x0, cs  // cs = hs, nlast
    6694:	add	x25, x25, #0x7
    6698:	add	x1, x1, #0x7
    669c:	and	x1, x1, #0xfffffffffffffff8
    66a0:	and	x25, x25, #0xfffffffffffffff8
    66a4:	add	x25, x25, x1
    66a8:	add	x25, x25, x24
    66ac:	mov	x1, x25
    66b0:	bl	45d0 <grub_memalign>
    66b4:	str	x0, [x19, #96]
    66b8:	mov	x24, x0
    66bc:	cbnz	x0, 67d4 <grub_dl_load_core_noinit+0x38c>
    66c0:	adrp	x0, 0 <_start>
    66c4:	ldr	x0, [x0]
    66c8:	ldr	w0, [x0]
    66cc:	cbnz	w0, 65cc <grub_dl_load_core_noinit+0x184>
    66d0:	ldr	x3, [x20, #40]
    66d4:	mov	w2, #0x0                   	// #0
    66d8:	ldrh	w1, [x20, #60]
    66dc:	add	x0, x20, x3
    66e0:	cmp	w2, w1
    66e4:	b.cc	68b8 <grub_dl_load_core_noinit+0x470>  // b.lo, b.ul, b.last
    66e8:	b.ne	68d4 <grub_dl_load_core_noinit+0x48c>  // b.any
    66ec:	ldr	x24, [x20, #40]
    66f0:	add	x24, x20, x24
    66f4:	ldrh	w0, [x20, #60]
    66f8:	cmp	w23, w0
    66fc:	b.cs	6b68 <grub_dl_load_core_noinit+0x720>  // b.hs, b.nlast
    6700:	ldr	w0, [x24, #4]
    6704:	cmp	w0, #0x9
    6708:	ccmp	w0, #0x4, #0x4, ne  // ne = any
    670c:	b.eq	6b14 <grub_dl_load_core_noinit+0x6cc>  // b.none
    6710:	ldrh	w0, [x20, #58]
    6714:	add	w23, w23, #0x1
    6718:	add	x24, x24, x0
    671c:	b	66f4 <grub_dl_load_core_noinit+0x2ac>
    6720:	adrp	x0, 0 <_start>
    6724:	ldr	x0, [x0]
    6728:	ldr	w0, [x0]
    672c:	b	65c8 <grub_dl_load_core_noinit+0x180>
    6730:	ldp	x24, x26, [x0, #24]
    6734:	add	x24, x20, x24
    6738:	add	x26, x24, x26
    673c:	cmp	x26, x24
    6740:	b.ls	6650 <grub_dl_load_core_noinit+0x208>  // b.plast
    6744:	ldrb	w0, [x24]
    6748:	cbz	w0, 6650 <grub_dl_load_core_noinit+0x208>
    674c:	mov	x0, x24
    6750:	bl	6df0 <grub_dl_load>
    6754:	mov	x25, x0
    6758:	cbnz	x0, 6770 <grub_dl_load_core_noinit+0x328>
    675c:	adrp	x0, 0 <_start>
    6760:	ldr	x0, [x0]
    6764:	ldr	w0, [x0]
    6768:	cbnz	w0, 65cc <grub_dl_load_core_noinit+0x184>
    676c:	b	6650 <grub_dl_load_core_noinit+0x208>
    6770:	bl	6298 <grub_dl_ref>
    6774:	mov	x0, #0x10                  	// #16
    6778:	bl	47f8 <grub_malloc>
    677c:	cbz	x0, 675c <grub_dl_load_core_noinit+0x314>
    6780:	ldr	x1, [x19, #16]
    6784:	stp	x1, x25, [x0]
    6788:	str	x0, [x19, #16]
    678c:	mov	x0, x24
    6790:	bl	87fc <grub_strlen>
    6794:	add	x0, x0, #0x1
    6798:	add	x24, x24, x0
    679c:	b	673c <grub_dl_load_core_noinit+0x2f4>
    67a0:	ldr	x2, [x0, #48]
    67a4:	sub	x25, x24, #0x1
    67a8:	ldrh	w1, [x20, #58]
    67ac:	add	w23, w23, #0x1
    67b0:	neg	x24, x2
    67b4:	add	x25, x25, x2
    67b8:	and	x25, x25, x24
    67bc:	cmp	x26, x2
    67c0:	ldr	x24, [x0, #32]
    67c4:	csel	x26, x26, x2, cs  // cs = hs, nlast
    67c8:	add	x0, x0, x1
    67cc:	add	x24, x25, x24
    67d0:	b	6664 <grub_dl_load_core_noinit+0x21c>
    67d4:	str	x25, [x19, #104]
    67d8:	mov	w26, #0x0                   	// #0
    67dc:	ldr	x25, [x20, #40]
    67e0:	add	x25, x20, x25
    67e4:	ldrh	w0, [x20, #60]
    67e8:	cmp	w26, w0
    67ec:	b.cc	6814 <grub_dl_load_core_noinit+0x3cc>  // b.lo, b.ul, b.last
    67f0:	ldr	x0, [sp, #128]
    67f4:	add	x24, x24, #0x7
    67f8:	and	x24, x24, #0xfffffffffffffff8
    67fc:	stp	x24, x24, [x19, #80]
    6800:	add	x24, x24, x0
    6804:	add	x24, x24, #0x7
    6808:	and	x24, x24, #0xfffffffffffffff8
    680c:	stp	x24, x24, [x19, #64]
    6810:	b	66d0 <grub_dl_load_core_noinit+0x288>
    6814:	ldr	x0, [x25, #8]
    6818:	tbz	w0, #1, 687c <grub_dl_load_core_noinit+0x434>
    681c:	mov	x0, #0x20                  	// #32
    6820:	bl	47f8 <grub_malloc>
    6824:	mov	x27, x0
    6828:	cbz	x0, 66c0 <grub_dl_load_core_noinit+0x278>
    682c:	ldr	x2, [x25, #32]
    6830:	cbz	x2, 68b0 <grub_dl_load_core_noinit+0x468>
    6834:	ldr	x28, [x25, #48]
    6838:	ldr	w0, [x25, #4]
    683c:	add	x24, x24, x28
    6840:	neg	x28, x28
    6844:	sub	x24, x24, #0x1
    6848:	cmp	w0, #0x1
    684c:	and	x28, x24, x28
    6850:	add	x24, x28, x2
    6854:	b.eq	688c <grub_dl_load_core_noinit+0x444>  // b.none
    6858:	cmp	w0, #0x8
    685c:	b.eq	68a0 <grub_dl_load_core_noinit+0x458>  // b.none
    6860:	str	x28, [x27, #8]
    6864:	ldr	x0, [x25, #32]
    6868:	str	x0, [x27, #16]
    686c:	ldr	x0, [x19, #24]
    6870:	str	x0, [x27]
    6874:	str	w26, [x27, #24]
    6878:	str	x27, [x19, #24]
    687c:	ldrh	w0, [x20, #58]
    6880:	add	w26, w26, #0x1
    6884:	add	x25, x25, x0
    6888:	b	67e4 <grub_dl_load_core_noinit+0x39c>
    688c:	ldr	x1, [x25, #24]
    6890:	mov	x0, x28
    6894:	add	x1, x20, x1
    6898:	bl	84a4 <grub_memmove>
    689c:	b	6860 <grub_dl_load_core_noinit+0x418>
    68a0:	mov	x0, x28
    68a4:	mov	w1, #0x0                   	// #0
    68a8:	bl	876c <grub_memset>
    68ac:	b	6860 <grub_dl_load_core_noinit+0x418>
    68b0:	str	xzr, [x0, #8]
    68b4:	b	6864 <grub_dl_load_core_noinit+0x41c>
    68b8:	ldr	w5, [x0, #4]
    68bc:	ldrh	w4, [x20, #58]
    68c0:	cmp	w5, #0x2
    68c4:	b.eq	68d4 <grub_dl_load_core_noinit+0x48c>  // b.none
    68c8:	add	w2, w2, #0x1
    68cc:	add	x0, x0, w4, uxth
    68d0:	b	66e0 <grub_dl_load_core_noinit+0x298>
    68d4:	ldr	w2, [x0, #40]
    68d8:	mov	w25, #0x0                   	// #0
    68dc:	ldrh	w1, [x20, #58]
    68e0:	adrp	x26, 0 <_start>
    68e4:	ldr	x4, [x0, #24]
    68e8:	ldr	x24, [x0, #56]
    68ec:	mul	w1, w1, w2
    68f0:	ldr	x0, [x0, #32]
    68f4:	add	x1, x1, x3
    68f8:	add	x1, x20, x1
    68fc:	add	x27, x20, x4
    6900:	udiv	w0, w0, w24
    6904:	ldr	x1, [x1, #24]
    6908:	stp	x27, x24, [x19, #32]
    690c:	str	x1, [sp, #104]
    6910:	str	w0, [sp, #120]
    6914:	ldr	w0, [sp, #120]
    6918:	cmp	w25, w0
    691c:	b.eq	66ec <grub_dl_load_core_noinit+0x2a4>  // b.none
    6920:	ldr	x0, [sp, #104]
    6924:	ldr	w1, [x27]
    6928:	ldrb	w3, [x27, #4]
    692c:	add	x5, x0, w1, uxtw
    6930:	and	w2, w3, #0xf
    6934:	cmp	w2, #0x4
    6938:	lsr	w3, w3, #4
    693c:	add	x28, x20, x5
    6940:	b.hi	6b00 <grub_dl_load_core_noinit+0x6b8>  // b.pmore
    6944:	ldr	x0, [x26]
    6948:	ldrb	w0, [x0, w2, uxtw]
    694c:	adr	x2, 6958 <grub_dl_load_core_noinit+0x510>
    6950:	add	x0, x2, w0, sxtb #2
    6954:	br	x0
    6958:	ldrh	w0, [x27, #6]
    695c:	cbz	w1, 69ec <grub_dl_load_core_noinit+0x5a4>
    6960:	cbnz	w0, 69ec <grub_dl_load_core_noinit+0x5a4>
    6964:	mov	x1, x28
    6968:	mov	w0, #0x0                   	// #0
    696c:	b	6980 <grub_dl_load_core_noinit+0x538>
    6970:	mov	w4, #0x3f                  	// #63
    6974:	add	x1, x1, #0x1
    6978:	movk	w4, #0x1, lsl #16
    697c:	madd	w0, w0, w4, w2
    6980:	ldrb	w2, [x1]
    6984:	cbnz	w2, 6970 <grub_dl_load_core_noinit+0x528>
    6988:	add	w0, w0, w0, lsr #5
    698c:	mov	w6, #0x1fd                 	// #509
    6990:	adrp	x1, 0 <_start>
    6994:	udiv	w2, w0, w6
    6998:	ldr	x1, [x1]
    699c:	msub	w0, w2, w6, w0
    69a0:	add	x1, x1, #0x8
    69a4:	ldr	x2, [x1, x0, lsl #3]
    69a8:	cbnz	x2, 69c4 <grub_dl_load_core_noinit+0x57c>
    69ac:	adrp	x0, 0 <_start>
    69b0:	mov	x2, x28
    69b4:	ldr	x1, [x0]
    69b8:	mov	w0, #0x2                   	// #2
    69bc:	bl	7300 <grub_error>
    69c0:	b	6a34 <grub_dl_load_core_noinit+0x5ec>
    69c4:	ldr	x0, [x2, #8]
    69c8:	mov	x1, x28
    69cc:	str	x2, [sp, #112]
    69d0:	str	w3, [sp, #124]
    69d4:	bl	85a4 <grub_strcmp>
    69d8:	ldr	w3, [sp, #124]
    69dc:	ldr	x2, [sp, #112]
    69e0:	cbz	w0, 6bf0 <grub_dl_load_core_noinit+0x7a8>
    69e4:	ldr	x2, [x2]
    69e8:	b	69a8 <grub_dl_load_core_noinit+0x560>
    69ec:	ldr	x1, [x19, #24]
    69f0:	cbz	x1, 6a04 <grub_dl_load_core_noinit+0x5bc>
    69f4:	ldr	w2, [x1, #24]
    69f8:	cmp	w0, w2
    69fc:	b.ne	6a3c <grub_dl_load_core_noinit+0x5f4>  // b.any
    6a00:	ldr	x1, [x1, #8]
    6a04:	ldr	x0, [x27, #8]
    6a08:	add	x1, x1, x0
    6a0c:	str	x1, [x27, #8]
    6a10:	cbz	w3, 6c0c <grub_dl_load_core_noinit+0x7c4>
    6a14:	mov	x3, x19
    6a18:	mov	x0, x28
    6a1c:	mov	w2, #0x0                   	// #0
    6a20:	bl	61b0 <grub_dl_register_symbol>
    6a24:	cbz	w0, 6c0c <grub_dl_load_core_noinit+0x7c4>
    6a28:	adrp	x0, 0 <_start>
    6a2c:	ldr	x0, [x0]
    6a30:	ldr	w0, [x0]
    6a34:	cbz	w0, 66ec <grub_dl_load_core_noinit+0x2a4>
    6a38:	b	65cc <grub_dl_load_core_noinit+0x184>
    6a3c:	ldr	x1, [x1]
    6a40:	b	69f0 <grub_dl_load_core_noinit+0x5a8>
    6a44:	ldrh	w0, [x27, #6]
    6a48:	ldr	x1, [x19, #24]
    6a4c:	cbz	x1, 6a60 <grub_dl_load_core_noinit+0x618>
    6a50:	ldr	w2, [x1, #24]
    6a54:	cmp	w0, w2
    6a58:	b.ne	6aa4 <grub_dl_load_core_noinit+0x65c>  // b.any
    6a5c:	ldr	x1, [x1, #8]
    6a60:	ldr	x0, [x27, #8]
    6a64:	add	x1, x1, x0
    6a68:	str	x1, [x27, #8]
    6a6c:	cbz	w3, 6a84 <grub_dl_load_core_noinit+0x63c>
    6a70:	mov	x3, x19
    6a74:	mov	x0, x28
    6a78:	mov	w2, #0x1                   	// #1
    6a7c:	bl	61b0 <grub_dl_register_symbol>
    6a80:	cbnz	w0, 6a28 <grub_dl_load_core_noinit+0x5e0>
    6a84:	adrp	x0, 0 <_start>
    6a88:	ldr	x1, [x0]
    6a8c:	mov	x0, x28
    6a90:	bl	85a4 <grub_strcmp>
    6a94:	cbnz	w0, 6aac <grub_dl_load_core_noinit+0x664>
    6a98:	ldr	x0, [x27, #8]
    6a9c:	str	x0, [x19, #48]
    6aa0:	b	6c0c <grub_dl_load_core_noinit+0x7c4>
    6aa4:	ldr	x1, [x1]
    6aa8:	b	6a4c <grub_dl_load_core_noinit+0x604>
    6aac:	adrp	x0, 0 <_start>
    6ab0:	ldr	x1, [x0]
    6ab4:	mov	x0, x28
    6ab8:	bl	85a4 <grub_strcmp>
    6abc:	cbnz	w0, 6c0c <grub_dl_load_core_noinit+0x7c4>
    6ac0:	ldr	x0, [x27, #8]
    6ac4:	str	x0, [x19, #56]
    6ac8:	b	6c0c <grub_dl_load_core_noinit+0x7c4>
    6acc:	ldrh	w1, [x27, #6]
    6ad0:	ldr	x0, [x19, #24]
    6ad4:	cbz	x0, 6ae8 <grub_dl_load_core_noinit+0x6a0>
    6ad8:	ldr	w2, [x0, #24]
    6adc:	cmp	w1, w2
    6ae0:	b.ne	6af0 <grub_dl_load_core_noinit+0x6a8>  // b.any
    6ae4:	ldr	x0, [x0, #8]
    6ae8:	str	x0, [x27, #8]
    6aec:	b	6c0c <grub_dl_load_core_noinit+0x7c4>
    6af0:	ldr	x0, [x0]
    6af4:	b	6ad4 <grub_dl_load_core_noinit+0x68c>
    6af8:	str	xzr, [x27, #8]
    6afc:	b	6c0c <grub_dl_load_core_noinit+0x7c4>
    6b00:	adrp	x0, 0 <_start>
    6b04:	ldr	x1, [x0]
    6b08:	mov	w0, #0x2                   	// #2
    6b0c:	bl	7300 <grub_error>
    6b10:	b	6a34 <grub_dl_load_core_noinit+0x5ec>
    6b14:	ldr	x3, [x19, #24]
    6b18:	cbz	x3, 6710 <grub_dl_load_core_noinit+0x2c8>
    6b1c:	ldr	w1, [x3, #24]
    6b20:	ldr	w0, [x24, #44]
    6b24:	cmp	w1, w0
    6b28:	b.eq	6b4c <grub_dl_load_core_noinit+0x704>  // b.none
    6b2c:	ldr	x3, [x3]
    6b30:	b	6b18 <grub_dl_load_core_noinit+0x6d0>
    6b34:	mov	x2, x24
    6b38:	mov	x1, x20
    6b3c:	mov	x0, x19
    6b40:	bl	330 <grub_arch_dl_relocate_symbols>
    6b44:	cbz	w0, 6710 <grub_dl_load_core_noinit+0x2c8>
    6b48:	b	65cc <grub_dl_load_core_noinit+0x184>
    6b4c:	ldr	x0, [x19, #32]
    6b50:	cbnz	x0, 6b34 <grub_dl_load_core_noinit+0x6ec>
    6b54:	adrp	x0, 0 <_start>
    6b58:	ldr	x1, [x0]
    6b5c:	mov	w0, #0x2                   	// #2
    6b60:	bl	7300 <grub_error>
    6b64:	cbnz	w0, 65cc <grub_dl_load_core_noinit+0x184>
    6b68:	adrp	x0, 0 <_start>
    6b6c:	mov	w1, #0x22b                 	// #555
    6b70:	ldp	x5, x4, [x19, #96]
    6b74:	ldr	x3, [x0]
    6b78:	ldr	x2, [x21]
    6b7c:	ldr	x0, [x22]
    6b80:	bl	9570 <grub_real_dprintf>
    6b84:	ldp	x0, x1, [x19, #96]
    6b88:	bl	198 <grub_arch_sync_caches>
    6b8c:	adrp	x0, 0 <_start>
    6b90:	mov	w1, #0x289                 	// #649
    6b94:	ldr	x2, [x21]
    6b98:	ldr	x3, [x0]
    6b9c:	ldr	x0, [x22]
    6ba0:	ldr	x4, [x19]
    6ba4:	bl	9570 <grub_real_dprintf>
    6ba8:	adrp	x0, 0 <_start>
    6bac:	mov	w1, #0x28a                 	// #650
    6bb0:	ldr	x2, [x21]
    6bb4:	ldr	x3, [x0]
    6bb8:	ldr	x0, [x22]
    6bbc:	ldr	x4, [x19, #48]
    6bc0:	bl	9570 <grub_real_dprintf>
    6bc4:	mov	x0, x19
    6bc8:	bl	615c <grub_dl_add>
    6bcc:	cbnz	w0, 65d0 <grub_dl_load_core_noinit+0x188>
    6bd0:	mov	x0, x19
    6bd4:	ldp	x19, x20, [sp, #16]
    6bd8:	ldp	x21, x22, [sp, #32]
    6bdc:	ldp	x23, x24, [sp, #48]
    6be0:	ldp	x25, x26, [sp, #64]
    6be4:	ldp	x27, x28, [sp, #80]
    6be8:	ldp	x29, x30, [sp], #144
    6bec:	ret
    6bf0:	ldr	x0, [x2, #16]
    6bf4:	str	x0, [x27, #8]
    6bf8:	ldr	w0, [x2, #24]
    6bfc:	cbz	w0, 6c0c <grub_dl_load_core_noinit+0x7c4>
    6c00:	ubfiz	w3, w3, #4, #4
    6c04:	add	w3, w3, #0x2
    6c08:	strb	w3, [x27, #4]
    6c0c:	add	w25, w25, #0x1
    6c10:	add	x27, x27, w24, uxtw
    6c14:	b	6914 <grub_dl_load_core_noinit+0x4cc>
	...

0000000000006cf0 <grub_dl_load_core>:
    6cf0:	stp	x29, x30, [sp, #-32]!
    6cf4:	mov	x29, sp
    6cf8:	str	x19, [sp, #16]
    6cfc:	bl	6448 <grub_dl_load_core_noinit>
    6d00:	mov	x19, x0
    6d04:	cbz	x0, 6d28 <grub_dl_load_core+0x38>
    6d08:	ldr	x1, [x0, #48]
    6d0c:	cbz	x1, 6d14 <grub_dl_load_core+0x24>
    6d10:	blr	x1
    6d14:	adrp	x0, 0 <_start>
    6d18:	ldr	x0, [x0]
    6d1c:	ldr	x1, [x0]
    6d20:	str	x19, [x0]
    6d24:	str	x1, [x19, #112]
    6d28:	mov	x0, x19
    6d2c:	ldr	x19, [sp, #16]
    6d30:	ldp	x29, x30, [sp], #32
    6d34:	ret
	...

0000000000006d40 <grub_dl_load_file>:
    6d40:	stp	x29, x30, [sp, #-48]!
    6d44:	mov	w1, #0x1                   	// #1
    6d48:	mov	x29, sp
    6d4c:	stp	x19, x20, [sp, #16]
    6d50:	str	x21, [sp, #32]
    6d54:	bl	7768 <grub_file_open>
    6d58:	mov	x19, x0
    6d5c:	cbz	x0, 6d80 <grub_dl_load_file+0x40>
    6d60:	ldr	x21, [x0, #64]
    6d64:	mov	x0, x21
    6d68:	bl	47f8 <grub_malloc>
    6d6c:	mov	x20, x0
    6d70:	cbnz	x0, 6d94 <grub_dl_load_file+0x54>
    6d74:	mov	x0, x19
    6d78:	bl	7708 <grub_file_close>
    6d7c:	mov	x19, #0x0                   	// #0
    6d80:	mov	x0, x19
    6d84:	ldp	x19, x20, [sp, #16]
    6d88:	ldr	x21, [sp, #32]
    6d8c:	ldp	x29, x30, [sp], #48
    6d90:	ret
    6d94:	mov	x1, x0
    6d98:	mov	x2, x21
    6d9c:	mov	x0, x19
    6da0:	bl	7640 <grub_file_read>
    6da4:	cmp	x0, w21, sxtw
    6da8:	mov	x0, x19
    6dac:	b.eq	6dc0 <grub_dl_load_file+0x80>  // b.none
    6db0:	bl	7708 <grub_file_close>
    6db4:	mov	x0, x20
    6db8:	bl	4844 <grub_free>
    6dbc:	b	6d7c <grub_dl_load_file+0x3c>
    6dc0:	bl	7708 <grub_file_close>
    6dc4:	mov	x1, x21
    6dc8:	mov	x0, x20
    6dcc:	bl	6cf0 <grub_dl_load_core>
    6dd0:	mov	x19, x0
    6dd4:	mov	x0, x20
    6dd8:	bl	4844 <grub_free>
    6ddc:	cbz	x19, 6d80 <grub_dl_load_file+0x40>
    6de0:	ldr	w0, [x19, #8]
    6de4:	sub	w0, w0, #0x1
    6de8:	str	w0, [x19, #8]
    6dec:	b	6d80 <grub_dl_load_file+0x40>

0000000000006df0 <grub_dl_load>:
    6df0:	stp	x29, x30, [sp, #-48]!
    6df4:	mov	x29, sp
    6df8:	str	x21, [sp, #32]
    6dfc:	adrp	x21, 0 <_start>
    6e00:	stp	x19, x20, [sp, #16]
    6e04:	mov	x20, x0
    6e08:	ldr	x0, [x21]
    6e0c:	bl	70d8 <grub_env_get>
    6e10:	mov	x19, x0
    6e14:	mov	x0, x20
    6e18:	bl	6080 <grub_disk_get_size+0x30>
    6e1c:	cbnz	x0, 6ea8 <grub_dl_load+0xb8>
    6e20:	cbnz	x19, 6e4c <grub_dl_load+0x5c>
    6e24:	adrp	x0, 0 <_start>
    6e28:	ldr	x2, [x21]
    6e2c:	ldr	x1, [x0]
    6e30:	mov	w0, #0x5                   	// #5
    6e34:	bl	7300 <grub_error>
    6e38:	mov	x0, x19
    6e3c:	ldp	x19, x20, [sp, #16]
    6e40:	ldr	x21, [sp, #32]
    6e44:	ldp	x29, x30, [sp], #48
    6e48:	ret
    6e4c:	adrp	x0, 0 <_start>
    6e50:	mov	x2, x20
    6e54:	mov	x1, x19
    6e58:	ldr	x0, [x0]
    6e5c:	bl	97a8 <grub_xasprintf>
    6e60:	mov	x21, x0
    6e64:	cbnz	x0, 6e70 <grub_dl_load+0x80>
    6e68:	mov	x19, #0x0                   	// #0
    6e6c:	b	6e38 <grub_dl_load+0x48>
    6e70:	bl	6d40 <grub_dl_load_file>
    6e74:	mov	x19, x0
    6e78:	mov	x0, x21
    6e7c:	bl	4844 <grub_free>
    6e80:	cbz	x19, 6e68 <grub_dl_load+0x78>
    6e84:	ldr	x0, [x19]
    6e88:	mov	x1, x20
    6e8c:	bl	85a4 <grub_strcmp>
    6e90:	cbz	w0, 6e38 <grub_dl_load+0x48>
    6e94:	adrp	x0, 0 <_start>
    6e98:	ldr	x1, [x0]
    6e9c:	mov	w0, #0x2                   	// #2
    6ea0:	bl	7300 <grub_error>
    6ea4:	b	6e38 <grub_dl_load+0x48>
    6ea8:	mov	x19, x0
    6eac:	b	6e38 <grub_dl_load+0x48>
	...

0000000000006ed0 <grub_dl_unload_unneeded>:
    6ed0:	stp	x29, x30, [sp, #-32]!
    6ed4:	adrp	x0, 0 <_start>
    6ed8:	mov	x29, sp
    6edc:	stp	x19, x20, [sp, #16]
    6ee0:	ldr	x20, [x0]
    6ee4:	ldr	x19, [x20]
    6ee8:	cbnz	x19, 6ef8 <grub_dl_unload_unneeded+0x28>
    6eec:	ldp	x19, x20, [sp, #16]
    6ef0:	ldp	x29, x30, [sp], #32
    6ef4:	ret
    6ef8:	mov	x0, x19
    6efc:	bl	6330 <grub_dl_unload>
    6f00:	cbnz	w0, 6ee4 <grub_dl_unload_unneeded+0x14>
    6f04:	ldr	x19, [x19, #112]
    6f08:	b	6ee8 <grub_dl_unload_unneeded+0x18>
    6f0c:	nop
	...
    6f18:	stp	x29, x30, [sp, #-32]!
    6f1c:	mov	x1, x0
    6f20:	mov	x29, sp
    6f24:	stp	x19, x20, [sp, #16]
    6f28:	mov	x20, x0
    6f2c:	mov	w0, #0x0                   	// #0
    6f30:	ldrb	w2, [x1]
    6f34:	cbnz	w2, 6f68 <grub_dl_unload_unneeded+0x98>
    6f38:	adrp	x1, 0 <_start>
    6f3c:	mov	w2, #0xd                   	// #13
    6f40:	ldr	x1, [x1]
    6f44:	ldr	x3, [x1]
    6f48:	udiv	w1, w0, w2
    6f4c:	msub	w0, w1, w2, w0
    6f50:	ldr	x19, [x3, w0, sxtw #3]
    6f54:	cbnz	x19, 6f78 <grub_dl_unload_unneeded+0xa8>
    6f58:	mov	x0, x19
    6f5c:	ldp	x19, x20, [sp, #16]
    6f60:	ldp	x29, x30, [sp], #32
    6f64:	ret
    6f68:	add	w2, w2, w2, lsl #2
    6f6c:	add	x1, x1, #0x1
    6f70:	add	w0, w0, w2
    6f74:	b	6f30 <grub_dl_unload_unneeded+0x60>
    6f78:	ldr	x0, [x19]
    6f7c:	mov	x1, x20
    6f80:	bl	85a4 <grub_strcmp>
    6f84:	cbz	w0, 6f58 <grub_dl_unload_unneeded+0x88>
    6f88:	ldr	x19, [x19, #32]
    6f8c:	b	6f54 <grub_dl_unload_unneeded+0x84>
	...

0000000000006f98 <grub_env_set>:
    6f98:	stp	x29, x30, [sp, #-48]!
    6f9c:	mov	x29, sp
    6fa0:	stp	x19, x20, [sp, #16]
    6fa4:	mov	x20, x1
    6fa8:	str	x21, [sp, #32]
    6fac:	mov	x21, x0
    6fb0:	bl	6f18 <grub_dl_unload_unneeded+0x48>
    6fb4:	cbz	x0, 7018 <grub_env_set+0x80>
    6fb8:	ldr	x2, [x0, #24]
    6fbc:	mov	x19, x0
    6fc0:	ldr	x21, [x0, #8]
    6fc4:	cbz	x2, 6ff0 <grub_env_set+0x58>
    6fc8:	mov	x1, x20
    6fcc:	blr	x2
    6fd0:	str	x0, [x19, #8]
    6fd4:	ldr	x0, [x19, #8]
    6fd8:	cbnz	x0, 6ffc <grub_env_set+0x64>
    6fdc:	str	x21, [x19, #8]
    6fe0:	adrp	x0, 0 <_start>
    6fe4:	ldr	x0, [x0]
    6fe8:	ldr	w0, [x0]
    6fec:	b	7008 <grub_env_set+0x70>
    6ff0:	mov	x0, x20
    6ff4:	bl	8818 <grub_strdup>
    6ff8:	b	6fd0 <grub_env_set+0x38>
    6ffc:	mov	x0, x21
    7000:	bl	4844 <grub_free>
    7004:	mov	w0, #0x0                   	// #0
    7008:	ldp	x19, x20, [sp, #16]
    700c:	ldr	x21, [sp, #32]
    7010:	ldp	x29, x30, [sp], #48
    7014:	ret
    7018:	mov	x0, #0x40                  	// #64
    701c:	bl	4804 <grub_zalloc>
    7020:	mov	x19, x0
    7024:	cbz	x0, 6fe0 <grub_env_set+0x48>
    7028:	mov	x0, x21
    702c:	bl	8818 <grub_strdup>
    7030:	str	x0, [x19]
    7034:	cbz	x0, 70a8 <grub_env_set+0x110>
    7038:	mov	x0, x20
    703c:	bl	8818 <grub_strdup>
    7040:	str	x0, [x19, #8]
    7044:	cbz	x0, 70a8 <grub_env_set+0x110>
    7048:	adrp	x0, 0 <_start>
    704c:	mov	w2, #0x0                   	// #0
    7050:	ldr	x0, [x0]
    7054:	ldr	x3, [x0]
    7058:	ldr	x0, [x19]
    705c:	ldrb	w1, [x0]
    7060:	cbnz	w1, 7098 <grub_env_set+0x100>
    7064:	mov	w1, #0xd                   	// #13
    7068:	udiv	w0, w2, w1
    706c:	msub	w0, w0, w1, w2
    7070:	lsl	x1, x0, #3
    7074:	add	x0, x3, x0, lsl #3
    7078:	str	x0, [x19, #40]
    707c:	ldr	x0, [x3, x1]
    7080:	str	x0, [x19, #32]
    7084:	cbz	x0, 7090 <grub_env_set+0xf8>
    7088:	add	x2, x19, #0x20
    708c:	str	x2, [x0, #40]
    7090:	str	x19, [x3, x1]
    7094:	b	7004 <grub_env_set+0x6c>
    7098:	add	w1, w1, w1, lsl #2
    709c:	add	x0, x0, #0x1
    70a0:	add	w2, w2, w1
    70a4:	b	705c <grub_env_set+0xc4>
    70a8:	ldr	x0, [x19]
    70ac:	bl	4844 <grub_free>
    70b0:	ldr	x0, [x19, #8]
    70b4:	bl	4844 <grub_free>
    70b8:	mov	x0, x19
    70bc:	bl	4844 <grub_free>
    70c0:	b	6fe0 <grub_env_set+0x48>
    70c4:	nop
	...

00000000000070d8 <grub_env_get>:
    70d8:	stp	x29, x30, [sp, #-16]!
    70dc:	mov	x29, sp
    70e0:	bl	6f18 <grub_dl_unload_unneeded+0x48>
    70e4:	mov	x1, x0
    70e8:	cbz	x0, 7104 <grub_env_get+0x2c>
    70ec:	ldr	x2, [x0, #16]
    70f0:	ldr	x1, [x0, #8]
    70f4:	cbz	x2, 7104 <grub_env_get+0x2c>
    70f8:	ldp	x29, x30, [sp], #16
    70fc:	mov	x16, x2
    7100:	br	x16
    7104:	mov	x0, x1
    7108:	ldp	x29, x30, [sp], #16
    710c:	ret

0000000000007110 <grub_env_unset>:
    7110:	stp	x29, x30, [sp, #-32]!
    7114:	mov	x29, sp
    7118:	stp	x19, x20, [sp, #16]
    711c:	mov	x20, x0
    7120:	bl	6f18 <grub_dl_unload_unneeded+0x48>
    7124:	cbz	x0, 7184 <grub_env_unset+0x74>
    7128:	mov	x19, x0
    712c:	ldr	x0, [x0, #16]
    7130:	cbnz	x0, 713c <grub_env_unset+0x2c>
    7134:	ldr	x0, [x19, #24]
    7138:	cbz	x0, 7154 <grub_env_unset+0x44>
    713c:	adrp	x0, 0 <_start>
    7140:	ldr	x1, [x0]
    7144:	mov	x0, x20
    7148:	ldp	x19, x20, [sp, #16]
    714c:	ldp	x29, x30, [sp], #32
    7150:	b	6f98 <grub_env_set>
    7154:	ldp	x0, x1, [x19, #32]
    7158:	str	x0, [x1]
    715c:	cbz	x0, 7164 <grub_env_unset+0x54>
    7160:	str	x1, [x0, #40]
    7164:	ldr	x0, [x19]
    7168:	bl	4844 <grub_free>
    716c:	ldr	x0, [x19, #8]
    7170:	bl	4844 <grub_free>
    7174:	mov	x0, x19
    7178:	ldp	x19, x20, [sp, #16]
    717c:	ldp	x29, x30, [sp], #32
    7180:	b	4844 <grub_free>
    7184:	ldp	x19, x20, [sp, #16]
    7188:	ldp	x29, x30, [sp], #32
    718c:	ret
	...

0000000000007198 <grub_env_update_get_sorted>:
    7198:	stp	x29, x30, [sp, #-64]!
    719c:	mov	x29, sp
    71a0:	stp	x19, x20, [sp, #16]
    71a4:	mov	w20, #0x0                   	// #0
    71a8:	stp	x21, x22, [sp, #32]
    71ac:	adrp	x22, 0 <_start>
    71b0:	str	xzr, [sp, #56]
    71b4:	ldr	x0, [x22]
    71b8:	ldr	x0, [x0]
    71bc:	ldr	x19, [x0, w20, sxtw #3]
    71c0:	ldr	x0, [sp, #56]
    71c4:	cbnz	x19, 721c <grub_env_update_get_sorted+0x84>
    71c8:	add	w20, w20, #0x1
    71cc:	cmp	w20, #0xd
    71d0:	b.ne	71b4 <grub_env_update_get_sorted+0x1c>  // b.any
    71d4:	ldp	x19, x20, [sp, #16]
    71d8:	ldp	x21, x22, [sp, #32]
    71dc:	ldp	x29, x30, [sp], #64
    71e0:	ret
    71e4:	ldr	x0, [x21]
    71e8:	add	x21, x0, #0x30
    71ec:	ldr	x0, [x0, #48]
    71f0:	cbz	x0, 7208 <grub_env_update_get_sorted+0x70>
    71f4:	ldr	x0, [x0]
    71f8:	ldr	x1, [x19]
    71fc:	bl	85a4 <grub_strcmp>
    7200:	cmp	w0, #0x0
    7204:	b.le	71e4 <grub_env_update_get_sorted+0x4c>
    7208:	ldr	x0, [x21]
    720c:	str	x0, [x19, #48]
    7210:	str	x19, [x21]
    7214:	ldr	x19, [x19, #32]
    7218:	b	71c0 <grub_env_update_get_sorted+0x28>
    721c:	add	x21, sp, #0x38
    7220:	b	71f0 <grub_env_update_get_sorted+0x58>
    7224:	nop
	...

0000000000007230 <grub_register_variable_hook>:
    7230:	stp	x29, x30, [sp, #-48]!
    7234:	mov	x29, sp
    7238:	stp	x19, x20, [sp, #16]
    723c:	mov	x19, x0
    7240:	mov	x20, x2
    7244:	str	x21, [sp, #32]
    7248:	mov	x21, x1
    724c:	bl	6f18 <grub_dl_unload_unneeded+0x48>
    7250:	cbnz	x0, 728c <grub_register_variable_hook+0x5c>
    7254:	adrp	x0, 0 <_start>
    7258:	ldr	x1, [x0]
    725c:	mov	x0, x19
    7260:	bl	6f98 <grub_env_set>
    7264:	cbz	w0, 7284 <grub_register_variable_hook+0x54>
    7268:	adrp	x0, 0 <_start>
    726c:	ldr	x0, [x0]
    7270:	ldr	w0, [x0]
    7274:	ldp	x19, x20, [sp, #16]
    7278:	ldr	x21, [sp, #32]
    727c:	ldp	x29, x30, [sp], #48
    7280:	ret
    7284:	mov	x0, x19
    7288:	bl	6f18 <grub_dl_unload_unneeded+0x48>
    728c:	stp	x21, x20, [x0, #16]
    7290:	mov	w0, #0x0                   	// #0
    7294:	b	7274 <grub_register_variable_hook+0x44>
	...

00000000000072a8 <grub_env_export>:
    72a8:	stp	x29, x30, [sp, #-32]!
    72ac:	mov	x29, sp
    72b0:	str	x19, [sp, #16]
    72b4:	mov	x19, x0
    72b8:	bl	6f18 <grub_dl_unload_unneeded+0x48>
    72bc:	cbnz	x0, 72dc <grub_env_export+0x34>
    72c0:	adrp	x0, 0 <_start>
    72c4:	ldr	x1, [x0]
    72c8:	mov	x0, x19
    72cc:	bl	6f98 <grub_env_set>
    72d0:	cbnz	w0, 72e8 <grub_env_export+0x40>
    72d4:	mov	x0, x19
    72d8:	bl	6f18 <grub_dl_unload_unneeded+0x48>
    72dc:	mov	w1, #0x1                   	// #1
    72e0:	str	w1, [x0, #56]
    72e4:	mov	w0, #0x0                   	// #0
    72e8:	ldr	x19, [sp, #16]
    72ec:	ldp	x29, x30, [sp], #32
    72f0:	ret
    72f4:	nop
	...

0000000000007300 <grub_error>:
    7300:	stp	x29, x30, [sp, #-144]!
    7304:	mov	x29, sp
    7308:	str	x19, [sp, #16]
    730c:	mov	w19, w0
    7310:	mov	x0, x1
    7314:	adrp	x1, 0 <_start>
    7318:	stp	x2, x3, [sp, #96]
    731c:	ldr	x1, [x1]
    7320:	stp	x4, x5, [sp, #112]
    7324:	stp	x6, x7, [sp, #128]
    7328:	str	w19, [x1]
    732c:	add	x1, sp, #0x90
    7330:	stp	x1, x1, [sp, #64]
    7334:	add	x1, sp, #0x60
    7338:	str	x1, [sp, #80]
    733c:	mov	w1, #0xffffffd0            	// #-48
    7340:	str	w1, [sp, #88]
    7344:	adrp	x1, 0 <_start>
    7348:	str	wzr, [sp, #92]
    734c:	ldr	x1, [x1]
    7350:	ldr	x2, [x1]
    7354:	blr	x2
    7358:	ldp	x2, x3, [sp, #64]
    735c:	stp	x2, x3, [sp, #32]
    7360:	mov	x1, #0x100                 	// #256
    7364:	ldp	x2, x3, [sp, #80]
    7368:	stp	x2, x3, [sp, #48]
    736c:	mov	x2, x0
    7370:	adrp	x0, 0 <_start>
    7374:	add	x3, sp, #0x20
    7378:	ldr	x0, [x0]
    737c:	bl	9648 <grub_vsnprintf>
    7380:	mov	w0, w19
    7384:	ldr	x19, [sp, #16]
    7388:	ldp	x29, x30, [sp], #144
    738c:	ret
	...

00000000000073a8 <grub_error_push>:
    73a8:	stp	x29, x30, [sp, #-32]!
    73ac:	adrp	x0, 0 <_start>
    73b0:	mov	x29, sp
    73b4:	stp	x19, x20, [sp, #16]
    73b8:	ldr	x19, [x0]
    73bc:	adrp	x0, 0 <_start>
    73c0:	ldr	x20, [x0]
    73c4:	ldr	w1, [x19]
    73c8:	cmp	w1, #0x9
    73cc:	b.gt	7420 <grub_error_push+0x78>
    73d0:	sxtw	x2, w1
    73d4:	mov	x0, #0x104                 	// #260
    73d8:	add	x3, x19, #0x4
    73dc:	ldr	w4, [x20]
    73e0:	mul	x2, x2, x0
    73e4:	str	w4, [x3, x2]
    73e8:	mov	x2, #0x4                   	// #4
    73ec:	smaddl	x0, w1, w0, x2
    73f0:	adrp	x1, 0 <_start>
    73f4:	mov	x2, #0x100                 	// #256
    73f8:	ldr	x1, [x1]
    73fc:	add	x0, x3, x0
    7400:	bl	84a4 <grub_memmove>
    7404:	ldr	w0, [x19]
    7408:	add	w0, w0, #0x1
    740c:	str	w0, [x19]
    7410:	str	wzr, [x20]
    7414:	ldp	x19, x20, [sp, #16]
    7418:	ldp	x29, x30, [sp], #32
    741c:	ret
    7420:	mov	w0, #0x1                   	// #1
    7424:	str	w0, [x19, #2604]
    7428:	b	7410 <grub_error_push+0x68>
    742c:	nop
	...

0000000000007448 <grub_error_pop>:
    7448:	adrp	x0, 0 <_start>
    744c:	adrp	x2, 0 <_start>
    7450:	ldr	x1, [x0]
    7454:	ldr	x3, [x2]
    7458:	ldr	w0, [x1]
    745c:	cmp	w0, #0x0
    7460:	b.le	74b0 <grub_error_pop+0x68>
    7464:	sub	w0, w0, #0x1
    7468:	mov	x4, #0x104                 	// #260
    746c:	stp	x29, x30, [sp, #-16]!
    7470:	sxtw	x2, w0
    7474:	mov	x29, sp
    7478:	str	w0, [x1], #4
    747c:	mul	x2, x2, x4
    7480:	ldr	w2, [x1, x2]
    7484:	str	w2, [x3]
    7488:	mov	x2, #0x4                   	// #4
    748c:	smaddl	x0, w0, w4, x2
    7490:	mov	x2, #0x100                 	// #256
    7494:	add	x1, x1, x0
    7498:	adrp	x0, 0 <_start>
    749c:	ldr	x0, [x0]
    74a0:	bl	84a4 <grub_memmove>
    74a4:	mov	w0, #0x1                   	// #1
    74a8:	ldp	x29, x30, [sp], #16
    74ac:	ret
    74b0:	mov	w0, #0x0                   	// #0
    74b4:	str	wzr, [x3]
    74b8:	ret
    74bc:	nop
	...

00000000000074d8 <grub_print_error>:
    74d8:	stp	x29, x30, [sp, #-64]!
    74dc:	mov	x29, sp
    74e0:	stp	x19, x20, [sp, #16]
    74e4:	adrp	x19, 0 <_start>
    74e8:	adrp	x20, 0 <_start>
    74ec:	stp	x21, x22, [sp, #32]
    74f0:	adrp	x21, 0 <_start>
    74f4:	adrp	x22, 0 <_start>
    74f8:	str	x23, [sp, #48]
    74fc:	adrp	x23, 0 <_start>
    7500:	ldr	x0, [x19]
    7504:	ldr	w0, [x0]
    7508:	cbz	w0, 7534 <grub_print_error+0x5c>
    750c:	ldr	x0, [x20]
    7510:	ldr	x1, [x0]
    7514:	ldr	x0, [x21]
    7518:	blr	x1
    751c:	ldr	x1, [x22]
    7520:	bl	94b0 <grub_err_printf>
    7524:	ldr	x1, [x23]
    7528:	ldr	w0, [x1]
    752c:	add	w0, w0, #0x1
    7530:	str	w0, [x1]
    7534:	bl	7448 <grub_error_pop>
    7538:	cbnz	w0, 7500 <grub_print_error+0x28>
    753c:	adrp	x0, 0 <_start>
    7540:	ldr	x19, [x0]
    7544:	ldr	w0, [x19, #2604]
    7548:	cbz	w0, 755c <grub_print_error+0x84>
    754c:	adrp	x0, 0 <_start>
    7550:	ldr	x0, [x0]
    7554:	bl	94b0 <grub_err_printf>
    7558:	str	wzr, [x19, #2604]
    755c:	ldp	x19, x20, [sp, #16]
    7560:	ldp	x21, x22, [sp, #32]
    7564:	ldr	x23, [sp, #48]
    7568:	ldp	x29, x30, [sp], #64
    756c:	ret
	...

00000000000075a8 <grub_file_get_device_name>:
    75a8:	stp	x29, x30, [sp, #-48]!
    75ac:	mov	x29, sp
    75b0:	stp	x19, x20, [sp, #16]
    75b4:	str	x21, [sp, #32]
    75b8:	ldrb	w1, [x0]
    75bc:	cmp	w1, #0x28
    75c0:	b.ne	762c <grub_file_get_device_name+0x84>  // b.any
    75c4:	mov	x21, x0
    75c8:	mov	w1, #0x29                  	// #41
    75cc:	bl	860c <grub_strchr>
    75d0:	mov	x19, x0
    75d4:	cbnz	x0, 7600 <grub_file_get_device_name+0x58>
    75d8:	adrp	x0, 0 <_start>
    75dc:	mov	w2, #0x29                  	// #41
    75e0:	ldr	x1, [x0]
    75e4:	mov	w0, #0x7                   	// #7
    75e8:	bl	7300 <grub_error>
    75ec:	mov	x0, x19
    75f0:	ldp	x19, x20, [sp, #16]
    75f4:	ldr	x21, [sp, #32]
    75f8:	ldp	x29, x30, [sp], #48
    75fc:	ret
    7600:	sub	x20, x0, x21
    7604:	mov	x0, x20
    7608:	bl	47f8 <grub_malloc>
    760c:	mov	x19, x0
    7610:	cbz	x0, 75ec <grub_file_get_device_name+0x44>
    7614:	sub	x2, x20, #0x1
    7618:	add	x20, x19, x20
    761c:	add	x1, x21, #0x1
    7620:	bl	84a4 <grub_memmove>
    7624:	sturb	wzr, [x20, #-1]
    7628:	b	75ec <grub_file_get_device_name+0x44>
    762c:	mov	x19, #0x0                   	// #0
    7630:	b	75ec <grub_file_get_device_name+0x44>
    7634:	nop
	...

0000000000007640 <grub_file_read>:
    7640:	stp	x29, x30, [sp, #-48]!
    7644:	mov	x29, sp
    7648:	stp	x19, x20, [sp, #16]
    764c:	mov	x19, x0
    7650:	ldr	x3, [x0, #24]
    7654:	ldr	x0, [x0, #64]
    7658:	str	x21, [sp, #32]
    765c:	cmp	x3, x0
    7660:	b.ls	7688 <grub_file_read+0x48>  // b.plast
    7664:	adrp	x0, 0 <_start>
    7668:	ldr	x1, [x0]
    766c:	mov	w0, #0xb                   	// #11
    7670:	bl	7300 <grub_error>
    7674:	mov	x0, #0xffffffffffffffff    	// #-1
    7678:	ldp	x19, x20, [sp, #16]
    767c:	ldr	x21, [sp, #32]
    7680:	ldp	x29, x30, [sp], #48
    7684:	ret
    7688:	cbz	x2, 76f0 <grub_file_read+0xb0>
    768c:	sub	x0, x0, x3
    7690:	cmp	x0, x2
    7694:	csel	x2, x0, x2, ls  // ls = plast
    7698:	cmp	x2, #0x0
    769c:	b.ge	76ec <grub_file_read+0xac>  // b.tcont
    76a0:	lsr	x2, x2, #1
    76a4:	ldp	x20, x21, [x19, #88]
    76a8:	cbnz	x20, 76c0 <grub_file_read+0x80>
    76ac:	adrp	x0, 0 <_start>
    76b0:	str	x3, [x19, #32]
    76b4:	ldr	x0, [x0]
    76b8:	ldr	x0, [x0]
    76bc:	stp	x0, x19, [x19, #88]
    76c0:	ldr	x0, [x19, #16]
    76c4:	ldr	x3, [x0, #40]
    76c8:	mov	x0, x19
    76cc:	blr	x3
    76d0:	stp	x20, x21, [x19, #88]
    76d4:	cmp	x0, #0x0
    76d8:	b.le	7678 <grub_file_read+0x38>
    76dc:	ldr	x1, [x19, #24]
    76e0:	add	x1, x1, x0
    76e4:	str	x1, [x19, #24]
    76e8:	b	7678 <grub_file_read+0x38>
    76ec:	b.ne	76a4 <grub_file_read+0x64>  // b.any
    76f0:	mov	x0, #0x0                   	// #0
    76f4:	b	7678 <grub_file_read+0x38>
	...

0000000000007708 <grub_file_close>:
    7708:	stp	x29, x30, [sp, #-32]!
    770c:	mov	x29, sp
    7710:	ldr	x1, [x0, #16]
    7714:	ldr	x1, [x1, #48]
    7718:	str	x19, [sp, #16]
    771c:	mov	x19, x0
    7720:	cbz	x1, 7728 <grub_file_close+0x20>
    7724:	blr	x1
    7728:	ldr	x0, [x19, #8]
    772c:	cbz	x0, 7734 <grub_file_close+0x2c>
    7730:	bl	5380 <grub_device_close>
    7734:	ldr	x0, [x19]
    7738:	bl	4844 <grub_free>
    773c:	mov	x0, x19
    7740:	bl	4844 <grub_free>
    7744:	adrp	x0, 0 <_start>
    7748:	ldr	x19, [sp, #16]
    774c:	ldr	x0, [x0]
    7750:	ldp	x29, x30, [sp], #32
    7754:	ldr	w0, [x0]
    7758:	ret
    775c:	nop
	...

0000000000007768 <grub_file_open>:
    7768:	stp	x29, x30, [sp, #-80]!
    776c:	mov	x29, sp
    7770:	stp	x19, x20, [sp, #16]
    7774:	stp	x21, x22, [sp, #32]
    7778:	mov	x22, x0
    777c:	stp	x23, x24, [sp, #48]
    7780:	mov	w23, w1
    7784:	str	x25, [sp, #64]
    7788:	bl	75a8 <grub_file_get_device_name>
    778c:	mov	x19, x0
    7790:	adrp	x0, 0 <_start>
    7794:	ldr	x24, [x0]
    7798:	ldr	w0, [x24]
    779c:	cbnz	w0, 78e4 <grub_file_open+0x17c>
    77a0:	ldrb	w0, [x22]
    77a4:	cmp	w0, #0x28
    77a8:	b.eq	78b0 <grub_file_open+0x148>  // b.none
    77ac:	mov	x20, x22
    77b0:	mov	x0, x19
    77b4:	bl	5298 <grub_device_open>
    77b8:	mov	x21, x0
    77bc:	mov	x0, x19
    77c0:	bl	4844 <grub_free>
    77c4:	cbz	x21, 78e4 <grub_file_open+0x17c>
    77c8:	mov	x0, #0x68                  	// #104
    77cc:	bl	4804 <grub_zalloc>
    77d0:	mov	x19, x0
    77d4:	cbz	x0, 78d8 <grub_file_open+0x170>
    77d8:	ldr	x0, [x21]
    77dc:	str	x21, [x19, #8]
    77e0:	cbz	x0, 78c8 <grub_file_open+0x160>
    77e4:	ldrb	w0, [x20]
    77e8:	cmp	w0, #0x2f
    77ec:	b.eq	78c8 <grub_file_open+0x160>  // b.none
    77f0:	adrp	x0, 0 <_start>
    77f4:	ldr	x0, [x0]
    77f8:	str	x0, [x19, #16]
    77fc:	ldr	x0, [x19, #16]
    7800:	mov	x1, x20
    7804:	ldr	x2, [x0, #32]
    7808:	mov	x0, x19
    780c:	blr	x2
    7810:	cbnz	w0, 78d8 <grub_file_open+0x170>
    7814:	mov	x0, x22
    7818:	bl	8818 <grub_strdup>
    781c:	str	x0, [x19]
    7820:	mov	x21, #0x0                   	// #0
    7824:	adrp	x25, 0 <_start>
    7828:	mov	x0, #0x0                   	// #0
    782c:	str	wzr, [x24]
    7830:	ldr	x1, [x25]
    7834:	ldr	x2, [x1, x21, lsl #3]
    7838:	cbz	x2, 7870 <grub_file_open+0x108>
    783c:	mov	w1, w23
    7840:	mov	x0, x19
    7844:	blr	x2
    7848:	cmp	x0, #0x0
    784c:	mov	x20, x0
    7850:	ccmp	x0, x19, #0x4, ne  // ne = any
    7854:	b.eq	7868 <grub_file_open+0x100>  // b.none
    7858:	mov	x0, x22
    785c:	bl	8818 <grub_strdup>
    7860:	str	x0, [x20]
    7864:	str	wzr, [x24]
    7868:	mov	x0, x19
    786c:	mov	x19, x20
    7870:	add	w1, w21, #0x1
    7874:	add	x21, x21, #0x1
    7878:	cmp	w1, #0x3
    787c:	cset	w1, ls  // ls = plast
    7880:	cmp	x19, #0x0
    7884:	csel	w1, w1, wzr, ne  // ne = any
    7888:	cbnz	w1, 7830 <grub_file_open+0xc8>
    788c:	cbnz	x19, 7894 <grub_file_open+0x12c>
    7890:	bl	7708 <grub_file_close>
    7894:	mov	x0, x19
    7898:	ldp	x19, x20, [sp, #16]
    789c:	ldp	x21, x22, [sp, #32]
    78a0:	ldp	x23, x24, [sp, #48]
    78a4:	ldr	x25, [sp, #64]
    78a8:	ldp	x29, x30, [sp], #80
    78ac:	ret
    78b0:	mov	x0, x22
    78b4:	mov	w1, #0x29                  	// #41
    78b8:	bl	860c <grub_strchr>
    78bc:	cbz	x0, 77ac <grub_file_open+0x44>
    78c0:	add	x20, x0, #0x1
    78c4:	b	77b0 <grub_file_open+0x48>
    78c8:	mov	x0, x21
    78cc:	bl	7c00 <grub_fs_probe>
    78d0:	str	x0, [x19, #16]
    78d4:	cbnz	x0, 77fc <grub_file_open+0x94>
    78d8:	mov	x0, x21
    78dc:	bl	5380 <grub_device_close>
    78e0:	b	78e8 <grub_file_open+0x180>
    78e4:	mov	x19, #0x0                   	// #0
    78e8:	mov	x0, x19
    78ec:	mov	x19, #0x0                   	// #0
    78f0:	bl	4844 <grub_free>
    78f4:	b	7894 <grub_file_open+0x12c>
	...

0000000000007910 <grub_file_seek>:
    7910:	mov	x2, x0
    7914:	ldr	x0, [x0, #64]
    7918:	cmp	x0, x1
    791c:	b.cs	7944 <grub_file_seek+0x34>  // b.hs, b.nlast
    7920:	stp	x29, x30, [sp, #-16]!
    7924:	adrp	x0, 0 <_start>
    7928:	mov	x29, sp
    792c:	ldr	x1, [x0]
    7930:	mov	w0, #0xb                   	// #11
    7934:	bl	7300 <grub_error>
    7938:	mov	x0, #0xffffffffffffffff    	// #-1
    793c:	ldp	x29, x30, [sp], #16
    7940:	ret
    7944:	ldr	x0, [x2, #24]
    7948:	str	x1, [x2, #24]
    794c:	ret
	...
    7958:	mov	w0, #0x1                   	// #1
    795c:	ret
    7960:	stp	x29, x30, [sp, #-80]!
    7964:	mov	x29, sp
    7968:	stp	x19, x20, [sp, #16]
    796c:	ldr	x19, [x0, #24]
    7970:	stp	x25, x26, [sp, #64]
    7974:	mov	x26, x1
    7978:	ldr	x20, [x0, #64]
    797c:	stp	x21, x22, [sp, #32]
    7980:	lsr	x22, x19, #9
    7984:	sub	x20, x20, x19
    7988:	and	x19, x19, #0x1ff
    798c:	cmp	x20, x2
    7990:	stp	x23, x24, [sp, #48]
    7994:	csel	x20, x20, x2, ls  // ls = plast
    7998:	ldr	x25, [x0, #80]
    799c:	mov	x23, x0
    79a0:	mov	x24, #0x0                   	// #0
    79a4:	ldr	x2, [x25, #8]
    79a8:	cbz	x2, 79b0 <grub_file_seek+0xa0>
    79ac:	cbnz	x20, 79cc <grub_file_seek+0xbc>
    79b0:	mov	x0, x24
    79b4:	ldp	x19, x20, [sp, #16]
    79b8:	ldp	x21, x22, [sp, #32]
    79bc:	ldp	x23, x24, [sp, #48]
    79c0:	ldp	x25, x26, [sp, #64]
    79c4:	ldp	x29, x30, [sp], #80
    79c8:	ret
    79cc:	cmp	x2, x22
    79d0:	b.ls	7a30 <grub_file_seek+0x120>  // b.plast
    79d4:	add	x0, x20, x19
    79d8:	sub	x2, x2, x22
    79dc:	add	x0, x0, #0x1ff
    79e0:	mov	x4, x26
    79e4:	lsl	x21, x2, #9
    79e8:	cmp	x2, x0, lsr #9
    79ec:	sub	x21, x21, x19
    79f0:	ldr	x0, [x23, #8]
    79f4:	csel	x21, x21, x20, cc  // cc = lo, ul, last
    79f8:	ldr	x1, [x25]
    79fc:	mov	x3, x21
    7a00:	ldr	x0, [x0]
    7a04:	mov	x2, x19
    7a08:	add	x1, x22, x1
    7a0c:	bl	5d58 <grub_disk_read>
    7a10:	cbnz	w0, 7a38 <grub_file_seek+0x128>
    7a14:	add	x19, x19, x21
    7a18:	add	x24, x24, x21
    7a1c:	sub	x20, x20, x21
    7a20:	sub	x22, x22, x19, lsr #9
    7a24:	and	x19, x19, #0x1ff
    7a28:	add	x25, x25, #0x10
    7a2c:	b	79a4 <grub_file_seek+0x94>
    7a30:	sub	x22, x22, x2
    7a34:	b	7a28 <grub_file_seek+0x118>
    7a38:	mov	x24, #0xffffffffffffffff    	// #-1
    7a3c:	b	79b0 <grub_file_seek+0xa0>
    7a40:	stp	x29, x30, [sp, #-112]!
    7a44:	mov	x29, sp
    7a48:	stp	x19, x20, [sp, #16]
    7a4c:	mov	x20, x0
    7a50:	mov	w19, #0x0                   	// #0
    7a54:	ldr	x0, [x0, #8]
    7a58:	stp	x21, x22, [sp, #32]
    7a5c:	mov	x22, x1
    7a60:	stp	x23, x24, [sp, #48]
    7a64:	stp	x25, x26, [sp, #64]
    7a68:	ldr	x24, [x0]
    7a6c:	str	x27, [sp, #80]
    7a70:	str	x1, [sp, #104]
    7a74:	ldr	x0, [sp, #104]
    7a78:	mov	w1, #0x2c                  	// #44
    7a7c:	add	w23, w19, #0x1
    7a80:	bl	860c <grub_strchr>
    7a84:	str	x0, [sp, #104]
    7a88:	cbz	x0, 7ba8 <grub_file_seek+0x298>
    7a8c:	add	x0, x0, #0x1
    7a90:	mov	w19, w23
    7a94:	str	x0, [sp, #104]
    7a98:	b	7a74 <grub_file_seek+0x164>
    7a9c:	ldr	x0, [sp, #104]
    7aa0:	ldr	x26, [x25]
    7aa4:	ldrb	w1, [x0]
    7aa8:	cmp	w1, #0x2b
    7aac:	b.eq	7b14 <grub_file_seek+0x204>  // b.none
    7ab0:	add	x1, sp, #0x68
    7ab4:	mov	w2, #0x0                   	// #0
    7ab8:	bl	8924 <grub_strtoull>
    7abc:	str	x0, [x21]
    7ac0:	ldr	w0, [x26]
    7ac4:	cbz	w0, 7b04 <grub_file_seek+0x1f4>
    7ac8:	adrp	x0, 0 <_start>
    7acc:	mov	x2, x22
    7ad0:	ldr	x1, [x0]
    7ad4:	mov	w0, #0x7                   	// #7
    7ad8:	bl	7300 <grub_error>
    7adc:	mov	x0, x19
    7ae0:	bl	4844 <grub_free>
    7ae4:	ldr	w0, [x26]
    7ae8:	ldp	x19, x20, [sp, #16]
    7aec:	ldp	x21, x22, [sp, #32]
    7af0:	ldp	x23, x24, [sp, #48]
    7af4:	ldp	x25, x26, [sp, #64]
    7af8:	ldr	x27, [sp, #80]
    7afc:	ldp	x29, x30, [sp], #112
    7b00:	ret
    7b04:	ldr	x0, [sp, #104]
    7b08:	ldrb	w0, [x0]
    7b0c:	cmp	w0, #0x2b
    7b10:	b.ne	7ac8 <grub_file_seek+0x1b8>  // b.any
    7b14:	ldr	x0, [sp, #104]
    7b18:	add	x1, sp, #0x68
    7b1c:	mov	w2, #0x0                   	// #0
    7b20:	mov	x27, x21
    7b24:	add	x0, x0, #0x1
    7b28:	str	x0, [sp, #104]
    7b2c:	bl	8ec0 <grub_strtoul>
    7b30:	ldr	w1, [x26]
    7b34:	str	x0, [x21, #8]
    7b38:	cbnz	w1, 7ac8 <grub_file_seek+0x1b8>
    7b3c:	cbz	x0, 7ac8 <grub_file_seek+0x1b8>
    7b40:	ldr	x0, [sp, #104]
    7b44:	ldrb	w0, [x0]
    7b48:	cmp	w0, #0x2c
    7b4c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    7b50:	b.eq	7b5c <grub_file_seek+0x24c>  // b.none
    7b54:	bl	8648 <grub_isspace>
    7b58:	cbz	w0, 7ac8 <grub_file_seek+0x1b8>
    7b5c:	ldr	x1, [x27]
    7b60:	add	x21, x21, #0x10
    7b64:	ldur	x0, [x21, #-8]
    7b68:	ldr	x2, [x24, #16]
    7b6c:	add	x1, x0, x1
    7b70:	cmp	x2, x1
    7b74:	b.cs	7b8c <grub_file_seek+0x27c>  // b.hs, b.nlast
    7b78:	adrp	x0, 0 <_start>
    7b7c:	ldr	x1, [x0]
    7b80:	mov	w0, #0x7                   	// #7
    7b84:	bl	7300 <grub_error>
    7b88:	b	7adc <grub_file_seek+0x1cc>
    7b8c:	ldr	x1, [x20, #64]
    7b90:	add	x0, x1, x0, lsl #9
    7b94:	str	x0, [x20, #64]
    7b98:	ldr	x0, [sp, #104]
    7b9c:	add	x0, x0, #0x1
    7ba0:	str	x0, [sp, #104]
    7ba4:	b	7bd0 <grub_file_seek+0x2c0>
    7ba8:	add	w0, w19, #0x2
    7bac:	lsl	x0, x0, #4
    7bb0:	bl	4804 <grub_zalloc>
    7bb4:	mov	x19, x0
    7bb8:	cbz	x0, 7bdc <grub_file_seek+0x2cc>
    7bbc:	mov	x21, x19
    7bc0:	add	x23, x19, w23, uxtw #4
    7bc4:	adrp	x25, 0 <_start>
    7bc8:	str	xzr, [x20, #64]
    7bcc:	str	x22, [sp, #104]
    7bd0:	cmp	x23, x21
    7bd4:	b.ne	7a9c <grub_file_seek+0x18c>  // b.any
    7bd8:	str	x19, [x20, #80]
    7bdc:	mov	w0, #0x0                   	// #0
    7be0:	b	7ae8 <grub_file_seek+0x1d8>
    7be4:	nop
	...

0000000000007c00 <grub_fs_probe>:
    7c00:	stp	x29, x30, [sp, #-80]!
    7c04:	mov	x29, sp
    7c08:	stp	x21, x22, [sp, #32]
    7c0c:	mov	x21, x0
    7c10:	ldr	x0, [x0]
    7c14:	stp	x19, x20, [sp, #16]
    7c18:	stp	x23, x24, [sp, #48]
    7c1c:	stp	x25, x26, [sp, #64]
    7c20:	cbz	x0, 7d94 <grub_fs_probe+0x194>
    7c24:	adrp	x0, 0 <_start>
    7c28:	adrp	x25, 0 <_start>
    7c2c:	adrp	x23, 0 <_start>
    7c30:	adrp	x24, 0 <_start>
    7c34:	ldr	x20, [x0]
    7c38:	adrp	x26, 0 <_start>
    7c3c:	ldr	x19, [x20]
    7c40:	cbnz	x19, 7c98 <grub_fs_probe+0x98>
    7c44:	ldr	x0, [x20, #8]
    7c48:	cbz	x0, 7c80 <grub_fs_probe+0x80>
    7c4c:	ldr	w0, [x20, #16]
    7c50:	cbnz	w0, 7c80 <grub_fs_probe+0x80>
    7c54:	mov	w0, #0x1                   	// #1
    7c58:	adrp	x23, 0 <_start>
    7c5c:	adrp	x24, 0 <_start>
    7c60:	adrp	x25, 0 <_start>
    7c64:	str	w0, [x20, #16]
    7c68:	ldr	x0, [x20, #8]
    7c6c:	blr	x0
    7c70:	cbnz	w0, 7d1c <grub_fs_probe+0x11c>
    7c74:	ldr	w0, [x20, #16]
    7c78:	sub	w0, w0, #0x1
    7c7c:	str	w0, [x20, #16]
    7c80:	adrp	x0, 0 <_start>
    7c84:	ldr	x1, [x0]
    7c88:	mov	w0, #0x8                   	// #8
    7c8c:	bl	7300 <grub_error>
    7c90:	mov	x19, #0x0                   	// #0
    7c94:	b	7d54 <grub_fs_probe+0x154>
    7c98:	ldr	x3, [x25]
    7c9c:	mov	w1, #0x38                  	// #56
    7ca0:	ldr	x2, [x23]
    7ca4:	ldr	x0, [x24]
    7ca8:	ldr	x4, [x19, #16]
    7cac:	bl	9570 <grub_real_dprintf>
    7cb0:	adrp	x0, 0 <_start>
    7cb4:	mov	x3, #0x0                   	// #0
    7cb8:	ldr	x2, [x26]
    7cbc:	ldr	x1, [x0]
    7cc0:	mov	x0, x21
    7cc4:	ldr	x4, [x19, #24]
    7cc8:	blr	x4
    7ccc:	adrp	x0, 0 <_start>
    7cd0:	ldr	x22, [x0]
    7cd4:	ldr	w0, [x22]
    7cd8:	cbz	w0, 7d54 <grub_fs_probe+0x154>
    7cdc:	bl	73a8 <grub_error_push>
    7ce0:	adrp	x0, 0 <_start>
    7ce4:	mov	w1, #0x4e                  	// #78
    7ce8:	ldr	x2, [x23]
    7cec:	ldr	x3, [x0]
    7cf0:	ldr	x0, [x24]
    7cf4:	ldr	x4, [x19, #16]
    7cf8:	bl	9570 <grub_real_dprintf>
    7cfc:	bl	7448 <grub_error_pop>
    7d00:	ldr	w0, [x22]
    7d04:	and	w0, w0, #0xfffffffd
    7d08:	cmp	w0, #0x9
    7d0c:	b.ne	7c90 <grub_fs_probe+0x90>  // b.any
    7d10:	ldr	x19, [x19]
    7d14:	str	wzr, [x22]
    7d18:	b	7c40 <grub_fs_probe+0x40>
    7d1c:	ldr	x22, [x20]
    7d20:	mov	x0, x21
    7d24:	ldr	x1, [x24]
    7d28:	mov	x3, #0x0                   	// #0
    7d2c:	ldr	x2, [x23]
    7d30:	ldr	x4, [x22, #24]
    7d34:	blr	x4
    7d38:	ldr	x1, [x25]
    7d3c:	ldr	w0, [x1]
    7d40:	cbnz	w0, 7d70 <grub_fs_probe+0x170>
    7d44:	ldr	w0, [x20, #16]
    7d48:	mov	x19, x22
    7d4c:	sub	w0, w0, #0x1
    7d50:	str	w0, [x20, #16]
    7d54:	mov	x0, x19
    7d58:	ldp	x19, x20, [sp, #16]
    7d5c:	ldp	x21, x22, [sp, #32]
    7d60:	ldp	x23, x24, [sp, #48]
    7d64:	ldp	x25, x26, [sp, #64]
    7d68:	ldp	x29, x30, [sp], #80
    7d6c:	ret
    7d70:	and	w0, w0, #0xfffffffd
    7d74:	cmp	w0, #0x9
    7d78:	b.eq	7d8c <grub_fs_probe+0x18c>  // b.none
    7d7c:	ldr	w0, [x20, #16]
    7d80:	sub	w0, w0, #0x1
    7d84:	str	w0, [x20, #16]
    7d88:	b	7d54 <grub_fs_probe+0x154>
    7d8c:	str	wzr, [x1]
    7d90:	b	7c68 <grub_fs_probe+0x68>
    7d94:	ldr	x0, [x21, #8]
    7d98:	cbz	x0, 7c80 <grub_fs_probe+0x80>
    7d9c:	ldr	x19, [x0, #56]
    7da0:	cbnz	x19, 7d54 <grub_fs_probe+0x154>
    7da4:	b	7c80 <grub_fs_probe+0x80>
	...

0000000000007df0 <grub_named_list_find>:
    7df0:	stp	x29, x30, [sp, #-32]!
    7df4:	mov	x29, sp
    7df8:	stp	x19, x20, [sp, #16]
    7dfc:	mov	x20, x1
    7e00:	mov	x19, x0
    7e04:	cbnz	x19, 7e18 <grub_named_list_find+0x28>
    7e08:	mov	x0, x19
    7e0c:	ldp	x19, x20, [sp, #16]
    7e10:	ldp	x29, x30, [sp], #32
    7e14:	ret
    7e18:	ldr	x0, [x19, #16]
    7e1c:	mov	x1, x20
    7e20:	bl	85a4 <grub_strcmp>
    7e24:	cbz	w0, 7e08 <grub_named_list_find+0x18>
    7e28:	ldr	x19, [x19]
    7e2c:	b	7e04 <grub_named_list_find+0x14>

0000000000007e30 <grub_list_push>:
    7e30:	ldr	x2, [x0]
    7e34:	str	x0, [x1, #8]
    7e38:	cbz	x2, 7e40 <grub_list_push+0x10>
    7e3c:	str	x1, [x2, #8]
    7e40:	str	x2, [x1]
    7e44:	str	x1, [x0]
    7e48:	ret

0000000000007e4c <grub_list_remove>:
    7e4c:	ldr	x1, [x0, #8]
    7e50:	cbz	x1, 7e5c <grub_list_remove+0x10>
    7e54:	ldr	x2, [x0]
    7e58:	str	x2, [x1]
    7e5c:	ldr	x2, [x0]
    7e60:	cbz	x2, 7e68 <grub_list_remove+0x1c>
    7e64:	str	x1, [x2, #8]
    7e68:	stp	xzr, xzr, [x0]
    7e6c:	ret
    7e70:	stp	x29, x30, [sp, #-32]!
    7e74:	mov	x29, sp
    7e78:	stp	x19, x20, [sp, #16]
    7e7c:	mov	w20, w0
    7e80:	adrp	x0, 0 <_start>
    7e84:	ldr	x0, [x0]
    7e88:	ldr	x19, [x0]
    7e8c:	cbnz	x19, 7e9c <grub_list_remove+0x50>
    7e90:	ldp	x19, x20, [sp, #16]
    7e94:	ldp	x29, x30, [sp], #32
    7e98:	ret
    7e9c:	ldr	x2, [x19, #88]
    7ea0:	cbz	x2, 7eb0 <grub_list_remove+0x64>
    7ea4:	mov	w1, w20
    7ea8:	mov	x0, x19
    7eac:	blr	x2
    7eb0:	ldr	x19, [x19]
    7eb4:	b	7e8c <grub_list_remove+0x40>
	...
    7ec0:	stp	x29, x30, [sp, #-32]!
    7ec4:	mov	x0, x1
    7ec8:	mov	x29, sp
    7ecc:	str	x19, [sp, #16]
    7ed0:	mov	x19, x1
    7ed4:	bl	87fc <grub_strlen>
    7ed8:	ldrb	w1, [x19]
    7edc:	cmp	w1, #0x28
    7ee0:	b.ne	7f08 <grub_list_remove+0xbc>  // b.any
    7ee4:	add	x1, x19, x0
    7ee8:	ldurb	w1, [x1, #-1]
    7eec:	cmp	w1, #0x29
    7ef0:	b.ne	7f08 <grub_list_remove+0xbc>  // b.any
    7ef4:	sub	x1, x0, #0x2
    7ef8:	add	x0, x19, #0x1
    7efc:	ldr	x19, [sp, #16]
    7f00:	ldp	x29, x30, [sp], #32
    7f04:	b	885c <grub_strndup>
    7f08:	mov	x0, x19
    7f0c:	ldr	x19, [sp, #16]
    7f10:	ldp	x29, x30, [sp], #32
    7f14:	b	8818 <grub_strdup>

0000000000007f18 <grub_modules_get_end>:
    7f18:	adrp	x0, 0 <_start>
    7f1c:	ldr	x0, [x0]
    7f20:	ldr	x0, [x0]
    7f24:	cbz	x0, 7f44 <grub_modules_get_end+0x2c>
    7f28:	ldr	w2, [x0]
    7f2c:	mov	w1, #0x696d                	// #26989
    7f30:	movk	w1, #0x676d, lsl #16
    7f34:	cmp	w2, w1
    7f38:	b.ne	7f44 <grub_modules_get_end+0x2c>  // b.any
    7f3c:	ldr	x1, [x0, #16]
    7f40:	add	x0, x0, x1
    7f44:	ret
	...

0000000000007f50 <grub_main>:
    7f50:	stp	x29, x30, [sp, #-80]!
    7f54:	mov	x29, sp
    7f58:	stp	x19, x20, [sp, #16]
    7f5c:	stp	x21, x22, [sp, #32]
    7f60:	stp	x23, x24, [sp, #48]
    7f64:	bl	50 <grub_machine_init>
    7f68:	mov	w0, #0x2                   	// #2
    7f6c:	bl	7e70 <grub_list_remove+0x24>
    7f70:	adrp	x0, 0 <_start>
    7f74:	ldr	x0, [x0]
    7f78:	bl	94b0 <grub_err_printf>
    7f7c:	mov	w0, #0x0                   	// #0
    7f80:	bl	7e70 <grub_list_remove+0x24>
    7f84:	adrp	x0, 0 <_start>
    7f88:	ldr	x21, [x0]
    7f8c:	ldr	x1, [x21]
    7f90:	cbz	x1, 7ffc <grub_main+0xac>
    7f94:	ldr	w2, [x1]
    7f98:	mov	w0, #0x696d                	// #26989
    7f9c:	movk	w0, #0x676d, lsl #16
    7fa0:	cmp	w2, w0
    7fa4:	b.ne	7ffc <grub_main+0xac>  // b.any
    7fa8:	ldr	x19, [x1, #8]
    7fac:	add	x19, x1, x19
    7fb0:	cbz	x19, 7ffc <grub_main+0xac>
    7fb4:	ldr	x0, [x1, #16]
    7fb8:	add	x0, x1, x0
    7fbc:	cmp	x19, x0
    7fc0:	b.cs	7ffc <grub_main+0xac>  // b.hs, b.nlast
    7fc4:	ldp	w2, w0, [x19]
    7fc8:	cmp	w2, #0x2
    7fcc:	b.eq	7fe0 <grub_main+0x90>  // b.none
    7fd0:	add	x0, x0, #0x7
    7fd4:	and	x0, x0, #0xfffffffffffffff8
    7fd8:	add	x19, x19, x0
    7fdc:	b	7fb0 <grub_main+0x60>
    7fe0:	sub	x0, x0, #0x7
    7fe4:	bl	47f8 <grub_malloc>
    7fe8:	adrp	x2, 0 <_start>
    7fec:	ldr	x20, [x2]
    7ff0:	str	x0, [x20]
    7ff4:	cbnz	x0, 801c <grub_main+0xcc>
    7ff8:	bl	74d8 <grub_print_error>
    7ffc:	bl	a7a8 <grub_register_exported_symbols>
    8000:	ldr	x19, [x21]
    8004:	cbnz	x19, 8040 <grub_main+0xf0>
    8008:	ldr	x1, [x21]
    800c:	stp	xzr, xzr, [sp, #64]
    8010:	cbnz	x1, 80cc <grub_main+0x17c>
    8014:	mov	x19, #0x0                   	// #0
    8018:	b	8100 <grub_main+0x1b0>
    801c:	ldr	w2, [x19, #4]
    8020:	add	x1, x19, #0x8
    8024:	sub	x2, x2, #0x8
    8028:	bl	84a4 <grub_memmove>
    802c:	ldr	x0, [x20]
    8030:	ldr	w1, [x19, #4]
    8034:	add	x0, x0, x1
    8038:	sturb	wzr, [x0, #-8]
    803c:	b	7ffc <grub_main+0xac>
    8040:	ldr	w1, [x19]
    8044:	mov	w0, #0x696d                	// #26989
    8048:	movk	w0, #0x676d, lsl #16
    804c:	cmp	w1, w0
    8050:	b.ne	8008 <grub_main+0xb8>  // b.any
    8054:	ldr	x0, [x19, #8]
    8058:	adrp	x20, 0 <_start>
    805c:	add	x19, x19, x0
    8060:	ldr	x0, [x21]
    8064:	cbz	x19, 8008 <grub_main+0xb8>
    8068:	ldr	x1, [x0, #16]
    806c:	add	x0, x0, x1
    8070:	cmp	x19, x0
    8074:	b.cs	8008 <grub_main+0xb8>  // b.hs, b.nlast
    8078:	ldr	w0, [x19]
    807c:	cbnz	w0, 80b8 <grub_main+0x168>
    8080:	ldr	w1, [x19, #4]
    8084:	add	x0, x19, #0x8
    8088:	sub	x1, x1, #0x8
    808c:	bl	6cf0 <grub_dl_load_core>
    8090:	cbnz	x0, 80a8 <grub_main+0x158>
    8094:	adrp	x0, 0 <_start>
    8098:	ldr	x1, [x0]
    809c:	adrp	x0, 0 <_start>
    80a0:	ldr	x0, [x0]
    80a4:	bl	97fc <grub_fatal>
    80a8:	ldr	x0, [x20]
    80ac:	ldr	w0, [x0]
    80b0:	cbz	w0, 80b8 <grub_main+0x168>
    80b4:	bl	74d8 <grub_print_error>
    80b8:	ldr	w0, [x19, #4]
    80bc:	add	x0, x0, #0x7
    80c0:	and	x0, x0, #0xfffffffffffffff8
    80c4:	add	x19, x19, x0
    80c8:	b	8060 <grub_main+0x110>
    80cc:	ldr	w2, [x1]
    80d0:	mov	w0, #0x696d                	// #26989
    80d4:	movk	w0, #0x676d, lsl #16
    80d8:	cmp	w2, w0
    80dc:	b.ne	8014 <grub_main+0xc4>  // b.any
    80e0:	ldr	x0, [x1, #8]
    80e4:	mov	x19, #0x0                   	// #0
    80e8:	add	x0, x1, x0
    80ec:	cbz	x0, 8100 <grub_main+0x1b0>
    80f0:	ldr	x2, [x1, #16]
    80f4:	add	x2, x1, x2
    80f8:	cmp	x0, x2
    80fc:	b.cc	81ec <grub_main+0x29c>  // b.lo, b.ul, b.last
    8100:	adrp	x0, 0 <_start>
    8104:	adrp	x23, 0 <_start>
    8108:	mov	x1, #0x0                   	// #0
    810c:	ldr	x2, [x0]
    8110:	ldr	x0, [x23]
    8114:	bl	7230 <grub_register_variable_hook>
    8118:	add	x1, sp, #0x48
    811c:	add	x0, sp, #0x40
    8120:	bl	2fd0 <grub_machine_get_bootlocation>
    8124:	ldr	x1, [sp, #64]
    8128:	cbz	x1, 8170 <grub_main+0x220>
    812c:	ldr	x2, [sp, #72]
    8130:	cbnz	x2, 813c <grub_main+0x1ec>
    8134:	adrp	x0, 0 <_start>
    8138:	ldr	x2, [x0]
    813c:	adrp	x0, 0 <_start>
    8140:	ldr	x0, [x0]
    8144:	bl	97a8 <grub_xasprintf>
    8148:	mov	x20, x0
    814c:	cbz	x0, 8170 <grub_main+0x220>
    8150:	adrp	x22, 0 <_start>
    8154:	mov	x1, x0
    8158:	ldr	x0, [x22]
    815c:	bl	6f98 <grub_env_set>
    8160:	ldr	x0, [x22]
    8164:	bl	72a8 <grub_env_export>
    8168:	mov	x0, x20
    816c:	bl	4844 <grub_free>
    8170:	cbz	x19, 81c4 <grub_main+0x274>
    8174:	ldrb	w0, [x19]
    8178:	cmp	w0, #0x28
    817c:	b.ne	8210 <grub_main+0x2c0>  // b.any
    8180:	mov	x0, x19
    8184:	mov	w1, #0x29                  	// #41
    8188:	bl	8628 <grub_strrchr>
    818c:	mov	x20, x0
    8190:	cbz	x0, 81ac <grub_main+0x25c>
    8194:	sub	x1, x0, x19
    8198:	add	x0, x19, #0x1
    819c:	sub	x1, x1, #0x1
    81a0:	add	x19, x20, #0x1
    81a4:	bl	885c <grub_strndup>
    81a8:	mov	x20, x0
    81ac:	ldrb	w0, [x19]
    81b0:	cbz	w0, 8218 <grub_main+0x2c8>
    81b4:	mov	x0, x19
    81b8:	bl	8818 <grub_strdup>
    81bc:	mov	x19, x0
    81c0:	cbnz	x20, 81cc <grub_main+0x27c>
    81c4:	ldr	x20, [sp, #64]
    81c8:	cbnz	x20, 82c8 <grub_main+0x378>
    81cc:	ldr	x0, [sp, #64]
    81d0:	cbz	x0, 81e4 <grub_main+0x294>
    81d4:	ldrb	w1, [x20]
    81d8:	cmp	w1, #0x2c
    81dc:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    81e0:	b.eq	826c <grub_main+0x31c>  // b.none
    81e4:	bl	4844 <grub_free>
    81e8:	b	82c8 <grub_main+0x378>
    81ec:	ldr	w2, [x0]
    81f0:	cmp	w2, #0x3
    81f4:	b.ne	81fc <grub_main+0x2ac>  // b.any
    81f8:	add	x19, x0, #0x8
    81fc:	ldr	w2, [x0, #4]
    8200:	add	x2, x2, #0x7
    8204:	and	x2, x2, #0xfffffffffffffff8
    8208:	add	x0, x0, x2
    820c:	b	80ec <grub_main+0x19c>
    8210:	mov	x20, #0x0                   	// #0
    8214:	b	81ac <grub_main+0x25c>
    8218:	mov	x19, #0x0                   	// #0
    821c:	b	81c0 <grub_main+0x270>
    8220:	cmp	w2, #0x5c
    8224:	b.ne	825c <grub_main+0x30c>  // b.any
    8228:	ldrb	w2, [x1, #1]
    822c:	cmp	w2, #0x2c
    8230:	b.ne	8264 <grub_main+0x314>  // b.any
    8234:	add	x1, x1, #0x2
    8238:	ldrb	w2, [x1]
    823c:	cbnz	w2, 8220 <grub_main+0x2d0>
    8240:	mov	x1, x0
    8244:	adrp	x0, 0 <_start>
    8248:	mov	x2, x20
    824c:	ldr	x0, [x0]
    8250:	bl	97a8 <grub_xasprintf>
    8254:	mov	x22, x0
    8258:	b	82b4 <grub_main+0x364>
    825c:	cmp	w2, #0x2c
    8260:	b.eq	8288 <grub_main+0x338>  // b.none
    8264:	add	x1, x1, #0x1
    8268:	b	8238 <grub_main+0x2e8>
    826c:	mov	x1, x0
    8270:	b	8238 <grub_main+0x2e8>
    8274:	mov	x0, x1
    8278:	strb	wzr, [x3, x1]
    827c:	b	82d8 <grub_main+0x388>
    8280:	bl	4844 <grub_free>
    8284:	b	8324 <grub_main+0x3d4>
    8288:	sub	x1, x1, x0
    828c:	bl	885c <grub_strndup>
    8290:	mov	x24, x0
    8294:	mov	x1, x0
    8298:	adrp	x0, 0 <_start>
    829c:	mov	x2, x20
    82a0:	ldr	x0, [x0]
    82a4:	bl	97a8 <grub_xasprintf>
    82a8:	mov	x22, x0
    82ac:	mov	x0, x24
    82b0:	bl	4844 <grub_free>
    82b4:	ldr	x0, [sp, #64]
    82b8:	bl	4844 <grub_free>
    82bc:	mov	x0, x20
    82c0:	mov	x20, x22
    82c4:	bl	4844 <grub_free>
    82c8:	ldr	x0, [sp, #72]
    82cc:	cbz	x0, 8280 <grub_main+0x330>
    82d0:	cbnz	x19, 8280 <grub_main+0x330>
    82d4:	bl	87fc <grub_strlen>
    82d8:	cmp	x0, #0x1
    82dc:	ldr	x3, [sp, #72]
    82e0:	b.ls	8320 <grub_main+0x3d0>  // b.plast
    82e4:	sub	x1, x0, #0x1
    82e8:	ldrb	w2, [x3, x1]
    82ec:	cmp	w2, #0x2f
    82f0:	b.eq	8274 <grub_main+0x324>  // b.none
    82f4:	cmp	x0, #0x8
    82f8:	b.ls	8320 <grub_main+0x3d0>  // b.plast
    82fc:	sub	x19, x0, #0x9
    8300:	adrp	x0, 0 <_start>
    8304:	mov	x2, #0x9                   	// #9
    8308:	ldr	x1, [x0]
    830c:	add	x0, x3, x19
    8310:	bl	8570 <grub_memcmp>
    8314:	cbnz	w0, 8320 <grub_main+0x3d0>
    8318:	ldr	x0, [sp, #72]
    831c:	strb	wzr, [x0, x19]
    8320:	ldr	x19, [sp, #72]
    8324:	adrp	x24, 0 <_start>
    8328:	cbz	x20, 8374 <grub_main+0x424>
    832c:	adrp	x0, 0 <_start>
    8330:	cmp	x19, #0x0
    8334:	mov	x1, x20
    8338:	ldr	x2, [x0]
    833c:	adrp	x0, 0 <_start>
    8340:	ldr	x0, [x0]
    8344:	csel	x2, x19, x2, ne  // ne = any
    8348:	bl	97a8 <grub_xasprintf>
    834c:	mov	x22, x0
    8350:	cbz	x0, 8368 <grub_main+0x418>
    8354:	mov	x1, x0
    8358:	ldr	x0, [x24]
    835c:	bl	6f98 <grub_env_set>
    8360:	mov	x0, x22
    8364:	bl	4844 <grub_free>
    8368:	ldr	x0, [x23]
    836c:	mov	x1, x20
    8370:	bl	6f98 <grub_env_set>
    8374:	mov	x0, x20
    8378:	bl	4844 <grub_free>
    837c:	mov	x0, x19
    8380:	bl	4844 <grub_free>
    8384:	bl	74d8 <grub_print_error>
    8388:	ldr	x0, [x23]
    838c:	bl	72a8 <grub_env_export>
    8390:	ldr	x0, [x24]
    8394:	bl	72a8 <grub_env_export>
    8398:	ldr	x0, [x21]
    839c:	cbz	x0, 83a4 <grub_main+0x454>
    83a0:	str	xzr, [x21]
    83a4:	bl	50b8 <grub_register_core_commands>
    83a8:	adrp	x0, 0 <_start>
    83ac:	ldr	x0, [x0]
    83b0:	ldr	x0, [x0]
    83b4:	cbz	x0, 83bc <grub_main+0x46c>
    83b8:	bl	9cd8 <grub_parser_execute>
    83bc:	adrp	x19, 0 <_start>
    83c0:	ldr	x0, [x19]
    83c4:	bl	6df0 <grub_dl_load>
    83c8:	bl	74d8 <grub_print_error>
    83cc:	adrp	x0, 0 <_start>
    83d0:	ldr	x1, [x19]
    83d4:	ldr	x0, [x0]
    83d8:	str	wzr, [x0]
    83dc:	adrp	x0, 0 <_start>
    83e0:	ldr	x0, [x0]
    83e4:	ldr	x0, [x0]
    83e8:	bl	7df0 <grub_named_list_find>
    83ec:	cbz	x0, 8400 <grub_main+0x4b0>
    83f0:	ldr	x3, [x0, #32]
    83f4:	mov	x2, #0x0                   	// #0
    83f8:	mov	w1, #0x0                   	// #0
    83fc:	blr	x3
    8400:	bl	a530 <grub_rescue_run>
    8404:	nop
	...
    8488:	ret
    848c:	mov	x1, x0
    8490:	ldr	x0, [x0, #256]
    8494:	cmp	x0, x1
    8498:	b.eq	84a0 <grub_main+0x550>  // b.none
    849c:	b	4844 <grub_free>
    84a0:	ret

00000000000084a4 <grub_memmove>:
    84a4:	cmp	x0, x1
    84a8:	b.cc	84ec <grub_memmove+0x48>  // b.lo, b.ul, b.last
    84ac:	add	x4, x0, x2
    84b0:	add	x1, x1, x2
    84b4:	mvn	x2, x2
    84b8:	mov	x3, #0x0                   	// #0
    84bc:	sub	x3, x3, #0x1
    84c0:	cmp	x2, x3
    84c4:	b.eq	84e8 <grub_memmove+0x44>  // b.none
    84c8:	ldrb	w5, [x1, x3]
    84cc:	strb	w5, [x4, x3]
    84d0:	b	84bc <grub_memmove+0x18>
    84d4:	ldrb	w4, [x1, x3]
    84d8:	strb	w4, [x0, x3]
    84dc:	add	x3, x3, #0x1
    84e0:	cmp	x3, x2
    84e4:	b.ne	84d4 <grub_memmove+0x30>  // b.any
    84e8:	ret
    84ec:	mov	x3, #0x0                   	// #0
    84f0:	b	84e0 <grub_memmove+0x3c>

00000000000084f4 <grub_strcpy>:
    84f4:	mov	x2, #0x0                   	// #0
    84f8:	ldrb	w3, [x1, x2]
    84fc:	strb	w3, [x0, x2]
    8500:	add	x2, x2, #0x1
    8504:	cbnz	w3, 84f8 <grub_strcpy+0x4>
    8508:	ret

000000000000850c <grub_puts_>:
    850c:	stp	x29, x30, [sp, #-48]!
    8510:	adrp	x1, 0 <_start>
    8514:	mov	x29, sp
    8518:	ldr	x1, [x1]
    851c:	ldr	x1, [x1]
    8520:	str	x19, [sp, #16]
    8524:	blr	x1
    8528:	mov	w1, #0xa                   	// #10
    852c:	strh	w1, [sp, #40]
    8530:	adrp	x1, 0 <_start>
    8534:	ldr	x19, [x1]
    8538:	ldr	x1, [x19]
    853c:	blr	x1
    8540:	ldr	x1, [x19]
    8544:	add	x0, sp, #0x28
    8548:	blr	x1
    854c:	mov	w0, #0x1                   	// #1
    8550:	ldr	x19, [sp, #16]
    8554:	ldp	x29, x30, [sp], #48
    8558:	ret
    855c:	nop
	...

0000000000008570 <grub_memcmp>:
    8570:	sub	x1, x1, #0x1
    8574:	mov	x4, #0x0                   	// #0
    8578:	cmp	x2, x4
    857c:	b.ne	8588 <grub_memcmp+0x18>  // b.any
    8580:	mov	w0, #0x0                   	// #0
    8584:	b	85a0 <grub_memcmp+0x30>
    8588:	ldrb	w3, [x0, x4]
    858c:	add	x4, x4, #0x1
    8590:	ldrb	w5, [x1, x4]
    8594:	cmp	w3, w5
    8598:	b.eq	8578 <grub_memcmp+0x8>  // b.none
    859c:	sub	w0, w3, w5
    85a0:	ret

00000000000085a4 <grub_strcmp>:
    85a4:	mov	x2, #0x0                   	// #0
    85a8:	ldrb	w4, [x0, x2]
    85ac:	ldrb	w3, [x1, x2]
    85b0:	cbz	w4, 85c4 <grub_strcmp+0x20>
    85b4:	cbz	w3, 85c4 <grub_strcmp+0x20>
    85b8:	add	x2, x2, #0x1
    85bc:	cmp	w4, w3
    85c0:	b.eq	85a8 <grub_strcmp+0x4>  // b.none
    85c4:	sub	w0, w4, w3
    85c8:	ret

00000000000085cc <grub_strncmp>:
    85cc:	cbz	x2, 8604 <grub_strncmp+0x38>
    85d0:	sub	x2, x2, #0x1
    85d4:	mov	x4, #0x0                   	// #0
    85d8:	ldrb	w3, [x0, x4]
    85dc:	ldrb	w5, [x1, x4]
    85e0:	cbz	w3, 85fc <grub_strncmp+0x30>
    85e4:	cbz	w5, 85fc <grub_strncmp+0x30>
    85e8:	cmp	x4, x2
    85ec:	b.eq	85fc <grub_strncmp+0x30>  // b.none
    85f0:	add	x4, x4, #0x1
    85f4:	cmp	w3, w5
    85f8:	b.eq	85d8 <grub_strncmp+0xc>  // b.none
    85fc:	sub	w0, w3, w5
    8600:	ret
    8604:	mov	w0, #0x0                   	// #0
    8608:	b	8600 <grub_strncmp+0x34>

000000000000860c <grub_strchr>:
    860c:	ldrb	w2, [x0]
    8610:	cmp	w2, w1
    8614:	b.eq	8624 <grub_strchr+0x18>  // b.none
    8618:	add	x0, x0, #0x1
    861c:	cbnz	w2, 860c <grub_strchr>
    8620:	mov	x0, #0x0                   	// #0
    8624:	ret

0000000000008628 <grub_strrchr>:
    8628:	mov	x2, x0
    862c:	mov	x0, #0x0                   	// #0
    8630:	ldrb	w3, [x2]
    8634:	cmp	w3, w1
    8638:	csel	x0, x0, x2, ne  // ne = any
    863c:	add	x2, x2, #0x1
    8640:	cbnz	w3, 8630 <grub_strrchr+0x8>
    8644:	ret

0000000000008648 <grub_isspace>:
    8648:	mov	x1, #0x2600                	// #9728
    864c:	cmp	w0, #0x21
    8650:	movk	x1, #0x1, lsl #32
    8654:	lsr	x1, x1, x0
    8658:	mvn	x1, x1
    865c:	and	w1, w1, #0x1
    8660:	csinc	w0, w1, wzr, cc  // cc = lo, ul, last
    8664:	eor	w0, w0, #0x1
    8668:	ret
    866c:	mov	w2, w0
    8670:	stp	x29, x30, [sp, #-16]!
    8674:	mov	x29, sp
    8678:	bl	8648 <grub_isspace>
    867c:	cbnz	w0, 86b0 <grub_isspace+0x68>
    8680:	mov	x0, #0x104000000000        	// #17867063951360
    8684:	cmp	w2, #0x3c
    8688:	movk	x0, #0x800, lsl #48
    868c:	lsr	x0, x0, x2
    8690:	mvn	x0, x0
    8694:	and	w0, w0, #0x1
    8698:	csinc	w0, w0, wzr, lt  // lt = tstop
    869c:	cmp	w2, #0x7c
    86a0:	eor	w0, w0, #0x1
    86a4:	csinc	w0, w0, wzr, ne  // ne = any
    86a8:	ldp	x29, x30, [sp], #16
    86ac:	ret
    86b0:	mov	w0, #0x1                   	// #1
    86b4:	b	86a8 <grub_isspace+0x60>

00000000000086b8 <grub_strword>:
    86b8:	mov	x3, x0
    86bc:	mov	x6, x1
    86c0:	stp	x29, x30, [sp, #-16]!
    86c4:	mov	x29, sp
    86c8:	ldrb	w0, [x3]
    86cc:	bl	866c <grub_isspace+0x24>
    86d0:	mov	w4, w0
    86d4:	cbnz	w0, 86ec <grub_strword+0x34>
    86d8:	ldrb	w0, [x3]
    86dc:	cbnz	w0, 8744 <grub_strword+0x8c>
    86e0:	mov	w0, w4
    86e4:	ldp	x29, x30, [sp], #16
    86e8:	ret
    86ec:	add	x3, x3, #0x1
    86f0:	b	86c8 <grub_strword+0x10>
    86f4:	add	x3, x3, #0x1
    86f8:	add	x5, x5, #0x1
    86fc:	ldrb	w7, [x3]
    8700:	cbz	w7, 874c <grub_strword+0x94>
    8704:	mov	w0, w7
    8708:	bl	866c <grub_isspace+0x24>
    870c:	cbnz	w0, 874c <grub_strword+0x94>
    8710:	ldrb	w0, [x5]
    8714:	cmp	w0, w7
    8718:	b.eq	86f4 <grub_strword+0x3c>  // b.none
    871c:	ldrb	w5, [x3]
    8720:	mov	w0, w5
    8724:	bl	866c <grub_isspace+0x24>
    8728:	cbz	w5, 8730 <grub_strword+0x78>
    872c:	cbz	w0, 8764 <grub_strword+0xac>
    8730:	ldrb	w0, [x3]
    8734:	bl	866c <grub_isspace+0x24>
    8738:	cbz	w0, 86d8 <grub_strword+0x20>
    873c:	add	x3, x3, #0x1
    8740:	b	8730 <grub_strword+0x78>
    8744:	mov	x5, x6
    8748:	b	86fc <grub_strword+0x44>
    874c:	ldrb	w0, [x5]
    8750:	cbz	w0, 875c <grub_strword+0xa4>
    8754:	bl	866c <grub_isspace+0x24>
    8758:	cbz	w0, 871c <grub_strword+0x64>
    875c:	mov	w4, #0x1                   	// #1
    8760:	b	86e0 <grub_strword+0x28>
    8764:	add	x3, x3, #0x1
    8768:	b	871c <grub_strword+0x64>

000000000000876c <grub_memset>:
    876c:	and	w1, w1, #0xff
    8770:	cmp	x2, #0x17
    8774:	b.ls	87e8 <grub_memset+0x7c>  // b.plast
    8778:	and	x6, x1, #0xff
    877c:	mov	w3, #0x0                   	// #0
    8780:	mov	x5, #0x0                   	// #0
    8784:	lsl	x4, x6, x3
    8788:	add	w3, w3, #0x8
    878c:	orr	x5, x5, x4
    8790:	cmp	w3, #0x40
    8794:	b.ne	8784 <grub_memset+0x18>  // b.any
    8798:	mov	x3, x0
    879c:	ands	x4, x3, #0x7
    87a0:	b.ne	87d8 <grub_memset+0x6c>  // b.any
    87a4:	sub	x6, x2, x4
    87a8:	cmp	x6, #0x7
    87ac:	b.hi	87f0 <grub_memset+0x84>  // b.pmore
    87b0:	lsr	x4, x2, #3
    87b4:	mov	x5, #0xfffffffffffffff8    	// #-8
    87b8:	add	x3, x3, x4, lsl #3
    87bc:	madd	x2, x4, x5, x2
    87c0:	mov	x4, #0x0                   	// #0
    87c4:	cmp	x4, x2
    87c8:	b.eq	87e4 <grub_memset+0x78>  // b.none
    87cc:	strb	w1, [x3, x4]
    87d0:	add	x4, x4, #0x1
    87d4:	b	87c4 <grub_memset+0x58>
    87d8:	strb	w1, [x3], #1
    87dc:	subs	x2, x2, #0x1
    87e0:	b.ne	879c <grub_memset+0x30>  // b.any
    87e4:	ret
    87e8:	mov	x3, x0
    87ec:	b	87c0 <grub_memset+0x54>
    87f0:	str	x5, [x3, x4]
    87f4:	add	x4, x4, #0x8
    87f8:	b	87a4 <grub_memset+0x38>

00000000000087fc <grub_strlen>:
    87fc:	mov	x1, x0
    8800:	ldrb	w2, [x1]
    8804:	cbnz	w2, 8810 <grub_strlen+0x14>
    8808:	sub	x0, x1, x0
    880c:	ret
    8810:	add	x1, x1, #0x1
    8814:	b	8800 <grub_strlen+0x4>

0000000000008818 <grub_strdup>:
    8818:	stp	x29, x30, [sp, #-32]!
    881c:	mov	x29, sp
    8820:	stp	x19, x20, [sp, #16]
    8824:	mov	x20, x0
    8828:	bl	87fc <grub_strlen>
    882c:	add	x19, x0, #0x1
    8830:	mov	x0, x19
    8834:	bl	47f8 <grub_malloc>
    8838:	cbz	x0, 8850 <grub_strdup+0x38>
    883c:	mov	x2, x19
    8840:	mov	x1, x20
    8844:	ldp	x19, x20, [sp, #16]
    8848:	ldp	x29, x30, [sp], #32
    884c:	b	84a4 <grub_memmove>
    8850:	ldp	x19, x20, [sp, #16]
    8854:	ldp	x29, x30, [sp], #32
    8858:	ret

000000000000885c <grub_strndup>:
    885c:	stp	x29, x30, [sp, #-32]!
    8860:	mov	x29, sp
    8864:	stp	x19, x20, [sp, #16]
    8868:	mov	x19, x1
    886c:	mov	x20, x0
    8870:	bl	87fc <grub_strlen>
    8874:	cmp	x0, x19
    8878:	csel	x19, x0, x19, ls  // ls = plast
    887c:	add	x0, x19, #0x1
    8880:	bl	47f8 <grub_malloc>
    8884:	mov	x6, x0
    8888:	cbz	x0, 889c <grub_strndup+0x40>
    888c:	mov	x2, x19
    8890:	mov	x1, x20
    8894:	bl	84a4 <grub_memmove>
    8898:	strb	wzr, [x6, x19]
    889c:	mov	x0, x6
    88a0:	ldp	x19, x20, [sp, #16]
    88a4:	ldp	x29, x30, [sp], #32
    88a8:	ret

00000000000088ac <grub_divmod64>:
    88ac:	mov	x3, x0
    88b0:	mov	x0, #0xfffffffe            	// #4294967294
    88b4:	cmp	x3, x0
    88b8:	ccmp	x1, x0, #0x2, ls  // ls = plast
    88bc:	b.hi	8914 <grub_divmod64+0x68>  // b.pmore
    88c0:	mov	w0, w3
    88c4:	cbz	x2, 88d4 <grub_divmod64+0x28>
    88c8:	udiv	w4, w3, w1
    88cc:	msub	w3, w4, w1, w3
    88d0:	str	x3, [x2]
    88d4:	udiv	w0, w0, w1
    88d8:	ret
    88dc:	lsl	x4, x4, #1
    88e0:	tbz	x3, #63, 88e8 <grub_divmod64+0x3c>
    88e4:	orr	x4, x4, #0x1
    88e8:	lsl	x0, x0, #1
    88ec:	lsl	x3, x3, #1
    88f0:	cmp	x1, x4
    88f4:	b.hi	8900 <grub_divmod64+0x54>  // b.pmore
    88f8:	orr	x0, x0, #0x1
    88fc:	sub	x4, x4, x1
    8900:	subs	w5, w5, #0x1
    8904:	b.ne	88dc <grub_divmod64+0x30>  // b.any
    8908:	cbz	x2, 88d8 <grub_divmod64+0x2c>
    890c:	str	x4, [x2]
    8910:	b	88d8 <grub_divmod64+0x2c>
    8914:	mov	w5, #0x41                  	// #65
    8918:	mov	x4, #0x0                   	// #0
    891c:	mov	x0, #0x0                   	// #0
    8920:	b	8900 <grub_divmod64+0x54>

0000000000008924 <grub_strtoull>:
    8924:	mov	x7, x0
    8928:	mov	x9, x1
    892c:	stp	x29, x30, [sp, #-16]!
    8930:	mov	x29, sp
    8934:	ldrb	w3, [x7]
    8938:	mov	w0, w3
    893c:	bl	8648 <grub_isspace>
    8940:	cbnz	w0, 8974 <grub_strtoull+0x50>
    8944:	cmp	w3, #0x30
    8948:	b.ne	899c <grub_strtoull+0x78>  // b.any
    894c:	ldrb	w3, [x7, #1]
    8950:	cmp	w3, #0x78
    8954:	b.ne	897c <grub_strtoull+0x58>  // b.any
    8958:	tst	w2, #0xffffffef
    895c:	b.ne	8968 <grub_strtoull+0x44>  // b.any
    8960:	add	x7, x7, #0x2
    8964:	mov	w2, #0x10                  	// #16
    8968:	sxtw	x1, w2
    896c:	mov	x8, #0x0                   	// #0
    8970:	b	89dc <grub_strtoull+0xb8>
    8974:	add	x7, x7, #0x1
    8978:	b	8934 <grub_strtoull+0x10>
    897c:	cbnz	w2, 8968 <grub_strtoull+0x44>
    8980:	sub	w3, w3, #0x30
    8984:	mov	w2, #0x8                   	// #8
    8988:	and	w3, w3, #0xff
    898c:	mov	w1, #0xa                   	// #10
    8990:	cmp	w3, #0x8
    8994:	csel	w2, w2, w1, cc  // cc = lo, ul, last
    8998:	b	8968 <grub_strtoull+0x44>
    899c:	cmp	w2, #0x0
    89a0:	mov	w1, #0xa                   	// #10
    89a4:	csel	w2, w2, w1, ne  // ne = any
    89a8:	b	8968 <grub_strtoull+0x44>
    89ac:	cmp	x6, #0x9
    89b0:	b.ls	8a08 <grub_strtoull+0xe4>  // b.plast
    89b4:	cbnz	w0, 8a44 <grub_strtoull+0x120>
    89b8:	adrp	x0, 0 <_start>
    89bc:	ldr	x1, [x0]
    89c0:	mov	w0, #0xa                   	// #10
    89c4:	bl	7300 <grub_error>
    89c8:	mov	x8, #0x0                   	// #0
    89cc:	b	8a38 <grub_strtoull+0x114>
    89d0:	madd	x8, x1, x8, x6
    89d4:	add	x7, x7, #0x1
    89d8:	mov	w0, #0x1                   	// #1
    89dc:	ldrb	w6, [x7]
    89e0:	cbz	w6, 89b4 <grub_strtoull+0x90>
    89e4:	sub	w2, w6, #0x41
    89e8:	cmp	w2, #0x19
    89ec:	b.hi	89f4 <grub_strtoull+0xd0>  // b.pmore
    89f0:	add	w6, w6, #0x20
    89f4:	sub	w6, w6, #0x30
    89f8:	sxtw	x6, w6
    89fc:	cmp	x6, #0x30
    8a00:	b.ls	89ac <grub_strtoull+0x88>  // b.plast
    8a04:	sub	x6, x6, #0x27
    8a08:	cmp	x1, x6
    8a0c:	b.ls	89b4 <grub_strtoull+0x90>  // b.plast
    8a10:	mvn	x0, x6
    8a14:	mov	x2, #0x0                   	// #0
    8a18:	bl	88ac <grub_divmod64>
    8a1c:	cmp	x0, x8
    8a20:	b.cs	89d0 <grub_strtoull+0xac>  // b.hs, b.nlast
    8a24:	adrp	x0, 0 <_start>
    8a28:	ldr	x1, [x0]
    8a2c:	mov	w0, #0xb                   	// #11
    8a30:	bl	7300 <grub_error>
    8a34:	mov	x8, #0xffffffffffffffff    	// #-1
    8a38:	mov	x0, x8
    8a3c:	ldp	x29, x30, [sp], #16
    8a40:	ret
    8a44:	cbz	x9, 8a38 <grub_strtoull+0x114>
    8a48:	str	x7, [x9]
    8a4c:	b	8a38 <grub_strtoull+0x114>
	...
    8a60:	stp	x29, x30, [sp, #-96]!
    8a64:	adrp	x3, 0 <_start>
    8a68:	mov	x29, sp
    8a6c:	stp	x19, x20, [sp, #16]
    8a70:	ldr	w20, [x2, #24]
    8a74:	stp	x23, x24, [sp, #48]
    8a78:	ldp	x19, x23, [x2]
    8a7c:	stp	x21, x22, [sp, #32]
    8a80:	mov	x22, x0
    8a84:	mov	x21, x1
    8a88:	stp	x25, x26, [sp, #64]
    8a8c:	stp	x27, x28, [sp, #80]
    8a90:	str	xzr, [x1, #264]
    8a94:	mov	x2, x0
    8a98:	ldrb	w1, [x0], #1
    8a9c:	cbnz	w1, 8b08 <grub_strtoull+0x1e4>
    8aa0:	ldr	x0, [x21, #264]
    8aa4:	cmp	x0, #0x20
    8aa8:	b.hi	8c04 <grub_strtoull+0x2e0>  // b.pmore
    8aac:	str	x21, [x21, #256]
    8ab0:	ldp	x0, x2, [x21, #256]
    8ab4:	mov	w1, #0x0                   	// #0
    8ab8:	mov	x24, #0x0                   	// #0
    8abc:	adrp	x26, 0 <_start>
    8ac0:	mov	w27, #0x5                   	// #5
    8ac4:	lsl	x2, x2, #3
    8ac8:	bl	876c <grub_memset>
    8acc:	mov	x1, x22
    8ad0:	ldrb	w0, [x22], #1
    8ad4:	cbnz	w0, 8c2c <grub_strtoull+0x308>
    8ad8:	ldr	x5, [x21, #264]
    8adc:	mov	x3, #0x0                   	// #0
    8ae0:	adrp	x6, 0 <_start>
    8ae4:	cmp	x5, x3
    8ae8:	b.ne	8db0 <grub_strtoull+0x48c>  // b.any
    8aec:	ldp	x19, x20, [sp, #16]
    8af0:	ldp	x21, x22, [sp, #32]
    8af4:	ldp	x23, x24, [sp, #48]
    8af8:	ldp	x25, x26, [sp, #64]
    8afc:	ldp	x27, x28, [sp, #80]
    8b00:	ldp	x29, x30, [sp], #96
    8b04:	ret
    8b08:	cmp	w1, #0x25
    8b0c:	b.ne	8a94 <grub_strtoull+0x170>  // b.any
    8b10:	ldrb	w1, [x2, #1]
    8b14:	cmp	w1, #0x2d
    8b18:	b.ne	8b20 <grub_strtoull+0x1fc>  // b.any
    8b1c:	add	x0, x2, #0x2
    8b20:	ldrb	w2, [x0]
    8b24:	mov	x1, x0
    8b28:	add	x0, x0, #0x1
    8b2c:	sub	w4, w2, #0x30
    8b30:	cmp	w4, #0x9
    8b34:	b.ls	8b20 <grub_strtoull+0x1fc>  // b.plast
    8b38:	cmp	w2, #0x24
    8b3c:	csel	x1, x1, x0, ne  // ne = any
    8b40:	ldrb	w0, [x1]
    8b44:	cmp	w0, #0x2d
    8b48:	b.ne	8b50 <grub_strtoull+0x22c>  // b.any
    8b4c:	add	x1, x1, #0x1
    8b50:	ldrb	w2, [x1]
    8b54:	mov	x0, x1
    8b58:	add	x1, x1, #0x1
    8b5c:	sub	w4, w2, #0x30
    8b60:	cmp	w4, #0x9
    8b64:	b.ls	8b50 <grub_strtoull+0x22c>  // b.plast
    8b68:	cmp	w2, #0x2e
    8b6c:	csel	x0, x0, x1, ne  // ne = any
    8b70:	ldrb	w1, [x0]
    8b74:	mov	x2, x0
    8b78:	add	x0, x0, #0x1
    8b7c:	sub	w4, w1, #0x30
    8b80:	cmp	w4, #0x9
    8b84:	b.ls	8b70 <grub_strtoull+0x24c>  // b.plast
    8b88:	cmp	w1, #0x6c
    8b8c:	b.ne	8ba0 <grub_strtoull+0x27c>  // b.any
    8b90:	ldrb	w1, [x2, #1]
    8b94:	cmp	w1, #0x6c
    8b98:	b.eq	8bd8 <grub_strtoull+0x2b4>  // b.none
    8b9c:	add	x0, x2, #0x2
    8ba0:	cmp	w1, #0x78
    8ba4:	b.hi	8a94 <grub_strtoull+0x170>  // b.pmore
    8ba8:	cmp	w1, #0x6f
    8bac:	b.hi	8be4 <grub_strtoull+0x2c0>  // b.pmore
    8bb0:	cmp	w1, #0x43
    8bb4:	b.eq	8bc8 <grub_strtoull+0x2a4>  // b.none
    8bb8:	sub	w1, w1, #0x63
    8bbc:	and	w1, w1, #0xff
    8bc0:	cmp	w1, #0x1
    8bc4:	b.hi	8a94 <grub_strtoull+0x170>  // b.pmore
    8bc8:	ldr	x1, [x21, #264]
    8bcc:	add	x1, x1, #0x1
    8bd0:	str	x1, [x21, #264]
    8bd4:	b	8a94 <grub_strtoull+0x170>
    8bd8:	ldrb	w1, [x2, #2]
    8bdc:	add	x0, x2, #0x3
    8be0:	b	8ba0 <grub_strtoull+0x27c>
    8be4:	sub	w1, w1, #0x70
    8be8:	cmp	w1, #0x8
    8bec:	b.hi	8a94 <grub_strtoull+0x170>  // b.pmore
    8bf0:	ldr	x2, [x3]
    8bf4:	ldrb	w1, [x2, w1, uxtw]
    8bf8:	adr	x2, 8c04 <grub_strtoull+0x2e0>
    8bfc:	add	x1, x2, w1, sxtb #2
    8c00:	br	x1
    8c04:	lsl	x0, x0, #3
    8c08:	bl	47f8 <grub_malloc>
    8c0c:	str	x0, [x21, #256]
    8c10:	cbnz	x0, 8ab0 <grub_strtoull+0x18c>
    8c14:	adrp	x0, 0 <_start>
    8c18:	ldr	x0, [x0]
    8c1c:	str	wzr, [x0]
    8c20:	mov	x0, #0x20                  	// #32
    8c24:	stp	x21, x0, [x21, #256]
    8c28:	b	8ab0 <grub_strtoull+0x18c>
    8c2c:	cmp	w0, #0x25
    8c30:	b.ne	8acc <grub_strtoull+0x1a8>  // b.any
    8c34:	ldrb	w0, [x1, #1]
    8c38:	add	x28, x24, #0x1
    8c3c:	cmp	w0, #0x2d
    8c40:	b.ne	8c48 <grub_strtoull+0x324>  // b.any
    8c44:	add	x22, x1, #0x2
    8c48:	mov	x25, x22
    8c4c:	ldrb	w0, [x25]
    8c50:	mov	x1, x25
    8c54:	add	x25, x25, #0x1
    8c58:	sub	w2, w0, #0x30
    8c5c:	cmp	w2, #0x9
    8c60:	b.ls	8c4c <grub_strtoull+0x328>  // b.plast
    8c64:	cmp	w0, #0x24
    8c68:	b.ne	8d34 <grub_strtoull+0x410>  // b.any
    8c6c:	mov	x1, #0x0                   	// #0
    8c70:	mov	x0, x22
    8c74:	mov	w2, #0xa                   	// #10
    8c78:	bl	8924 <grub_strtoull>
    8c7c:	mov	x1, x25
    8c80:	sub	x0, x0, #0x1
    8c84:	ldrb	w2, [x1]
    8c88:	cmp	w2, #0x2d
    8c8c:	b.ne	8c94 <grub_strtoull+0x370>  // b.any
    8c90:	add	x1, x1, #0x1
    8c94:	ldrb	w2, [x1]
    8c98:	mov	x22, x1
    8c9c:	add	x1, x1, #0x1
    8ca0:	sub	w3, w2, #0x30
    8ca4:	cmp	w3, #0x9
    8ca8:	b.ls	8c94 <grub_strtoull+0x370>  // b.plast
    8cac:	cmp	w2, #0x2e
    8cb0:	csel	x22, x22, x1, ne  // ne = any
    8cb4:	ldrb	w1, [x22]
    8cb8:	mov	x2, x22
    8cbc:	add	x22, x22, #0x1
    8cc0:	sub	w3, w1, #0x30
    8cc4:	cmp	w3, #0x9
    8cc8:	b.ls	8cb4 <grub_strtoull+0x390>  // b.plast
    8ccc:	cmp	w1, #0x25
    8cd0:	b.eq	8da8 <grub_strtoull+0x484>  // b.none
    8cd4:	cmp	w1, #0x6c
    8cd8:	b.ne	8d4c <grub_strtoull+0x428>  // b.any
    8cdc:	ldrb	w1, [x2, #1]
    8ce0:	cmp	w1, #0x6c
    8ce4:	b.eq	8d3c <grub_strtoull+0x418>  // b.none
    8ce8:	add	x22, x2, #0x2
    8cec:	mov	w2, #0x1                   	// #1
    8cf0:	ldr	x3, [x21, #264]
    8cf4:	cmp	x3, x0
    8cf8:	b.ls	8d84 <grub_strtoull+0x460>  // b.plast
    8cfc:	cmp	w1, #0x78
    8d00:	b.hi	8d84 <grub_strtoull+0x460>  // b.pmore
    8d04:	cmp	w1, #0x6f
    8d08:	b.hi	8d54 <grub_strtoull+0x430>  // b.pmore
    8d0c:	cmp	w1, #0x64
    8d10:	b.eq	8d8c <grub_strtoull+0x468>  // b.none
    8d14:	b.hi	8d84 <grub_strtoull+0x460>  // b.pmore
    8d18:	and	w1, w1, #0xffffffdf
    8d1c:	cmp	w1, #0x43
    8d20:	b.ne	8d84 <grub_strtoull+0x460>  // b.any
    8d24:	ldr	x1, [x21, #256]
    8d28:	lsl	x0, x0, #3
    8d2c:	str	wzr, [x1, x0]
    8d30:	b	8d84 <grub_strtoull+0x460>
    8d34:	mov	x0, x24
    8d38:	b	8c84 <grub_strtoull+0x360>
    8d3c:	ldrb	w1, [x2, #2]
    8d40:	add	x22, x2, #0x3
    8d44:	mov	w2, #0x2                   	// #2
    8d48:	b	8cf0 <grub_strtoull+0x3cc>
    8d4c:	mov	w2, #0x0                   	// #0
    8d50:	b	8cf0 <grub_strtoull+0x3cc>
    8d54:	sub	w1, w1, #0x70
    8d58:	cmp	w1, #0x8
    8d5c:	b.hi	8d84 <grub_strtoull+0x460>  // b.pmore
    8d60:	ldr	x3, [x26]
    8d64:	ldrb	w1, [x3, w1, uxtw]
    8d68:	adr	x3, 8d74 <grub_strtoull+0x450>
    8d6c:	add	x1, x3, w1, sxtb #2
    8d70:	br	x1
    8d74:	ldr	x1, [x21, #256]
    8d78:	lsl	x0, x0, #3
    8d7c:	add	w2, w2, #0x3
    8d80:	str	w2, [x1, x0]
    8d84:	mov	x24, x28
    8d88:	b	8acc <grub_strtoull+0x1a8>
    8d8c:	lsl	x0, x0, #3
    8d90:	ldr	x1, [x21, #256]
    8d94:	b	8d80 <grub_strtoull+0x45c>
    8d98:	ldr	x1, [x21, #256]
    8d9c:	lsl	x0, x0, #3
    8da0:	str	w27, [x1, x0]
    8da4:	b	8d84 <grub_strtoull+0x460>
    8da8:	mov	x28, x24
    8dac:	b	8d84 <grub_strtoull+0x460>
    8db0:	ldr	x2, [x21, #256]
    8db4:	lsl	x1, x3, #3
    8db8:	ldr	w0, [x2, x1]
    8dbc:	cmp	w0, #0x5
    8dc0:	b.hi	8df8 <grub_strtoull+0x4d4>  // b.pmore
    8dc4:	ldr	x4, [x6]
    8dc8:	ldrb	w0, [x4, w0, uxtw]
    8dcc:	adr	x4, 8dd8 <grub_strtoull+0x4b4>
    8dd0:	add	x0, x4, w0, sxtb #2
    8dd4:	br	x0
    8dd8:	tbnz	w20, #31, 8e00 <grub_strtoull+0x4dc>
    8ddc:	add	x0, x19, #0xb
    8de0:	mov	w4, w20
    8de4:	and	x0, x0, #0xfffffffffffffff8
    8de8:	ldrsw	x7, [x19]
    8dec:	mov	w20, w4
    8df0:	mov	x19, x0
    8df4:	str	x7, [x2, x1]
    8df8:	add	x3, x3, #0x1
    8dfc:	b	8ae4 <grub_strtoull+0x1c0>
    8e00:	add	w4, w20, #0x8
    8e04:	cmp	w4, #0x0
    8e08:	b.le	8e18 <grub_strtoull+0x4f4>
    8e0c:	add	x0, x19, #0xb
    8e10:	and	x0, x0, #0xfffffffffffffff8
    8e14:	b	8de8 <grub_strtoull+0x4c4>
    8e18:	mov	x0, x19
    8e1c:	add	x19, x23, w20, sxtw
    8e20:	b	8de8 <grub_strtoull+0x4c4>
    8e24:	tbnz	w20, #31, 8e3c <grub_strtoull+0x518>
    8e28:	add	x0, x19, #0xb
    8e2c:	mov	w4, w20
    8e30:	and	x0, x0, #0xfffffffffffffff8
    8e34:	ldr	w7, [x19]
    8e38:	b	8dec <grub_strtoull+0x4c8>
    8e3c:	add	w4, w20, #0x8
    8e40:	cmp	w4, #0x0
    8e44:	b.le	8e54 <grub_strtoull+0x530>
    8e48:	add	x0, x19, #0xb
    8e4c:	and	x0, x0, #0xfffffffffffffff8
    8e50:	b	8e34 <grub_strtoull+0x510>
    8e54:	mov	x0, x19
    8e58:	add	x19, x23, w20, sxtw
    8e5c:	b	8e34 <grub_strtoull+0x510>
    8e60:	tbnz	w20, #31, 8e78 <grub_strtoull+0x554>
    8e64:	add	x0, x19, #0xf
    8e68:	mov	w4, w20
    8e6c:	and	x0, x0, #0xfffffffffffffff8
    8e70:	ldr	x7, [x19]
    8e74:	b	8dec <grub_strtoull+0x4c8>
    8e78:	add	w4, w20, #0x8
    8e7c:	cmp	w4, #0x0
    8e80:	b.le	8e90 <grub_strtoull+0x56c>
    8e84:	add	x0, x19, #0xf
    8e88:	and	x0, x0, #0xfffffffffffffff8
    8e8c:	b	8e70 <grub_strtoull+0x54c>
    8e90:	mov	x0, x19
    8e94:	add	x19, x23, w20, sxtw
    8e98:	b	8e70 <grub_strtoull+0x54c>
    8e9c:	nop
	...

0000000000008ec0 <grub_strtoul>:
    8ec0:	b	8924 <grub_strtoull>
    8ec4:	stp	x29, x30, [sp, #-160]!
    8ec8:	mov	x29, sp
    8ecc:	stp	x21, x22, [sp, #32]
    8ed0:	mov	x21, x3
    8ed4:	add	x22, sp, #0x80
    8ed8:	stp	x25, x26, [sp, #64]
    8edc:	mov	x25, x0
    8ee0:	mov	x26, x1
    8ee4:	stp	x19, x20, [sp, #16]
    8ee8:	mov	x19, #0x0                   	// #0
    8eec:	stp	x23, x24, [sp, #48]
    8ef0:	stp	x27, x28, [sp, #80]
    8ef4:	mov	x28, #0x0                   	// #0
    8ef8:	str	x2, [sp, #112]
    8efc:	ldr	x0, [sp, #112]
    8f00:	add	x1, x0, #0x1
    8f04:	str	x1, [sp, #112]
    8f08:	ldrb	w0, [x0]
    8f0c:	cbnz	w0, 8f3c <grub_strtoul+0x7c>
    8f10:	cmp	x26, x19
    8f14:	b.ls	9398 <grub_strtoul+0x4d8>  // b.plast
    8f18:	strb	wzr, [x25, x19]
    8f1c:	mov	w0, w19
    8f20:	ldp	x19, x20, [sp, #16]
    8f24:	ldp	x21, x22, [sp, #32]
    8f28:	ldp	x23, x24, [sp, #48]
    8f2c:	ldp	x25, x26, [sp, #64]
    8f30:	ldp	x27, x28, [sp, #80]
    8f34:	ldp	x29, x30, [sp], #160
    8f38:	ret
    8f3c:	cmp	w0, #0x25
    8f40:	b.eq	8f60 <grub_strtoul+0xa0>  // b.none
    8f44:	cmp	x26, x19
    8f48:	b.ls	8f50 <grub_strtoul+0x90>  // b.plast
    8f4c:	strb	w0, [x25, x19]
    8f50:	add	x19, x19, #0x1
    8f54:	mov	x23, x28
    8f58:	mov	x28, x23
    8f5c:	b	8efc <grub_strtoul+0x3c>
    8f60:	add	x23, x28, #0x1
    8f64:	mov	x5, x28
    8f68:	ldr	x0, [sp, #112]
    8f6c:	ldrb	w1, [x0]
    8f70:	cmp	w1, #0x2d
    8f74:	b.ne	9020 <grub_strtoul+0x160>  // b.any
    8f78:	add	x0, x0, #0x1
    8f7c:	mov	w20, #0x1                   	// #1
    8f80:	str	x0, [sp, #112]
    8f84:	ldr	x0, [sp, #112]
    8f88:	ldrb	w27, [x0]
    8f8c:	sub	w1, w27, #0x30
    8f90:	cmp	w1, #0x9
    8f94:	b.hi	9028 <grub_strtoul+0x168>  // b.pmore
    8f98:	cmp	w27, #0x30
    8f9c:	mov	w1, #0x20                  	// #32
    8fa0:	mov	w2, #0xa                   	// #10
    8fa4:	csel	w27, w27, w1, eq  // eq = none
    8fa8:	add	x1, sp, #0x70
    8fac:	str	x5, [sp, #104]
    8fb0:	bl	8924 <grub_strtoull>
    8fb4:	mov	w24, w0
    8fb8:	ldr	x5, [sp, #104]
    8fbc:	ldr	x0, [sp, #112]
    8fc0:	ldrb	w1, [x0]
    8fc4:	cmp	w1, #0x2e
    8fc8:	b.ne	8fd4 <grub_strtoul+0x114>  // b.any
    8fcc:	add	x0, x0, #0x1
    8fd0:	str	x0, [sp, #112]
    8fd4:	ldr	x0, [sp, #112]
    8fd8:	ldrb	w1, [x0]
    8fdc:	sub	w1, w1, #0x30
    8fe0:	cmp	w1, #0x9
    8fe4:	b.hi	9034 <grub_strtoul+0x174>  // b.pmore
    8fe8:	add	x1, sp, #0x70
    8fec:	mov	w2, #0xa                   	// #10
    8ff0:	str	x5, [sp, #104]
    8ff4:	bl	8924 <grub_strtoull>
    8ff8:	ldr	x5, [sp, #104]
    8ffc:	mov	w3, w0
    9000:	ldr	x0, [sp, #112]
    9004:	mov	x1, x0
    9008:	ldrb	w2, [x1], #1
    900c:	cmp	w2, #0x24
    9010:	b.ne	903c <grub_strtoul+0x17c>  // b.any
    9014:	sub	w5, w24, #0x1
    9018:	str	x1, [sp, #112]
    901c:	b	8f68 <grub_strtoul+0xa8>
    9020:	mov	w20, #0x0                   	// #0
    9024:	b	8f84 <grub_strtoul+0xc4>
    9028:	mov	w27, #0x20                  	// #32
    902c:	mov	x24, #0x0                   	// #0
    9030:	b	8fbc <grub_strtoul+0xfc>
    9034:	mov	x3, #0xffffffff            	// #4294967295
    9038:	b	9000 <grub_strtoul+0x140>
    903c:	str	x1, [sp, #112]
    9040:	ldrb	w2, [x0]
    9044:	cmp	w2, #0x6c
    9048:	b.ne	906c <grub_strtoul+0x1ac>  // b.any
    904c:	add	x1, x0, #0x2
    9050:	str	x1, [sp, #112]
    9054:	ldrb	w2, [x0, #1]
    9058:	cmp	w2, #0x6c
    905c:	b.ne	906c <grub_strtoul+0x1ac>  // b.any
    9060:	add	x1, x0, #0x3
    9064:	str	x1, [sp, #112]
    9068:	ldrb	w2, [x0, #2]
    906c:	cmp	w2, #0x25
    9070:	b.ne	9084 <grub_strtoul+0x1c4>  // b.any
    9074:	cmp	x26, x19
    9078:	b.ls	8f50 <grub_strtoul+0x90>  // b.plast
    907c:	strb	w2, [x25, x19]
    9080:	b	8f50 <grub_strtoul+0x90>
    9084:	ldr	x0, [x21, #264]
    9088:	cmp	x0, x5
    908c:	b.ls	8f58 <grub_strtoul+0x98>  // b.plast
    9090:	ldr	x0, [x21, #256]
    9094:	cmp	w2, #0x78
    9098:	ldr	x0, [x0, x5, lsl #3]
    909c:	b.hi	90c0 <grub_strtoul+0x200>  // b.pmore
    90a0:	cmp	w2, #0x6f
    90a4:	b.hi	90d0 <grub_strtoul+0x210>  // b.pmore
    90a8:	cmp	w2, #0x63
    90ac:	b.eq	9234 <grub_strtoul+0x374>  // b.none
    90b0:	cmp	w2, #0x64
    90b4:	b.eq	9188 <grub_strtoul+0x2c8>  // b.none
    90b8:	cmp	w2, #0x43
    90bc:	b.eq	9248 <grub_strtoul+0x388>  // b.none
    90c0:	cmp	x26, x19
    90c4:	b.ls	9240 <grub_strtoul+0x380>  // b.plast
    90c8:	strb	w2, [x25, x19]
    90cc:	b	9240 <grub_strtoul+0x380>
    90d0:	sub	w1, w2, #0x70
    90d4:	cmp	w1, #0x8
    90d8:	b.hi	90c0 <grub_strtoul+0x200>  // b.pmore
    90dc:	adrp	x4, 0 <_start>
    90e0:	ldr	x4, [x4]
    90e4:	ldrh	w1, [x4, w1, uxtw #1]
    90e8:	adr	x4, 90f4 <grub_strtoul+0x234>
    90ec:	add	x1, x4, w1, sxth #2
    90f0:	br	x1
    90f4:	cmp	x26, x19
    90f8:	b.ls	9104 <grub_strtoul+0x244>  // b.plast
    90fc:	mov	w1, #0x30                  	// #48
    9100:	strb	w1, [x25, x19]
    9104:	add	x1, x19, #0x1
    9108:	cmp	x26, x1
    910c:	b.ls	9118 <grub_strtoul+0x258>  // b.plast
    9110:	mov	w2, #0x78                  	// #120
    9114:	strb	w2, [x25, x1]
    9118:	add	x19, x19, #0x2
    911c:	add	x7, sp, #0x80
    9120:	mov	x6, x7
    9124:	and	w3, w0, #0xf
    9128:	lsr	x0, x0, #4
    912c:	add	w2, w3, #0x57
    9130:	add	w1, w3, #0x30
    9134:	cmp	w3, #0xa
    9138:	csel	w1, w1, w2, cc  // cc = lo, ul, last
    913c:	strb	w1, [x7], #1
    9140:	cbnz	x0, 9124 <grub_strtoul+0x264>
    9144:	strb	wzr, [x7]
    9148:	mov	x0, x6
    914c:	bl	87fc <grub_strlen>
    9150:	sub	x0, x0, #0x1
    9154:	add	x0, x6, x0
    9158:	cmp	x6, x0
    915c:	b.cc	91d0 <grub_strtoul+0x310>  // b.lo, b.ul, b.last
    9160:	sub	x7, x7, x22
    9164:	subs	x0, x24, x7
    9168:	csel	x0, x0, xzr, hi  // hi = pmore
    916c:	cbnz	w20, 9180 <grub_strtoul+0x2c0>
    9170:	add	x0, x0, x19
    9174:	cmp	x19, x0
    9178:	b.ne	91e4 <grub_strtoul+0x324>  // b.any
    917c:	mov	x0, #0xffffffffffffffff    	// #-1
    9180:	sub	x2, x22, x19
    9184:	b	9208 <grub_strtoul+0x348>
    9188:	cmp	w2, #0x78
    918c:	b.eq	911c <grub_strtoul+0x25c>  // b.none
    9190:	cmp	w2, #0x64
    9194:	ccmp	x0, #0x0, #0x0, eq  // eq = none
    9198:	b.ge	93a0 <grub_strtoul+0x4e0>  // b.tcont
    919c:	neg	x0, x0
    91a0:	add	x6, x22, #0x1
    91a4:	mov	w1, #0x2d                  	// #45
    91a8:	strb	w1, [sp, #128]
    91ac:	mov	x7, x6
    91b0:	mov	x1, #0xa                   	// #10
    91b4:	add	x2, sp, #0x78
    91b8:	bl	88ac <grub_divmod64>
    91bc:	ldr	x1, [sp, #120]
    91c0:	add	w1, w1, #0x30
    91c4:	strb	w1, [x7], #1
    91c8:	cbnz	x0, 91b0 <grub_strtoul+0x2f0>
    91cc:	b	9144 <grub_strtoul+0x284>
    91d0:	ldrb	w2, [x0]
    91d4:	ldrb	w1, [x6]
    91d8:	strb	w2, [x6], #1
    91dc:	strb	w1, [x0], #-1
    91e0:	b	9158 <grub_strtoul+0x298>
    91e4:	cmp	x26, x19
    91e8:	b.ls	91f0 <grub_strtoul+0x330>  // b.plast
    91ec:	strb	w27, [x25, x19]
    91f0:	add	x19, x19, #0x1
    91f4:	b	9174 <grub_strtoul+0x2b4>
    91f8:	cmp	x26, x19
    91fc:	b.ls	9204 <grub_strtoul+0x344>  // b.plast
    9200:	strb	w1, [x25, x19]
    9204:	add	x19, x19, #0x1
    9208:	ldrb	w1, [x2, x19]
    920c:	cbnz	w1, 91f8 <grub_strtoul+0x338>
    9210:	cbz	w20, 8f58 <grub_strtoul+0x98>
    9214:	add	x0, x0, x19
    9218:	cmp	x19, x0
    921c:	b.eq	8f58 <grub_strtoul+0x98>  // b.none
    9220:	cmp	x26, x19
    9224:	b.ls	922c <grub_strtoul+0x36c>  // b.plast
    9228:	strb	w27, [x25, x19]
    922c:	add	x19, x19, #0x1
    9230:	b	9218 <grub_strtoul+0x358>
    9234:	cmp	x26, x19
    9238:	b.ls	9240 <grub_strtoul+0x380>  // b.plast
    923c:	strb	w0, [x25, x19]
    9240:	add	x19, x19, #0x1
    9244:	b	8f58 <grub_strtoul+0x98>
    9248:	mov	w3, w0
    924c:	cmp	w0, #0x7f
    9250:	b.ls	92c4 <grub_strtoul+0x404>  // b.plast
    9254:	cmp	w0, #0x7ff
    9258:	b.ls	92d0 <grub_strtoul+0x410>  // b.plast
    925c:	mov	w1, #0xffff                	// #65535
    9260:	cmp	w0, w1
    9264:	b.ls	92dc <grub_strtoul+0x41c>  // b.plast
    9268:	mov	w4, #0x10ffff              	// #1114111
    926c:	cmp	w4, w0
    9270:	mov	w2, #0xf0                  	// #240
    9274:	mov	w1, #0x12                  	// #18
    9278:	mov	w0, #0x3f                  	// #63
    927c:	csel	w2, w2, wzr, cs  // cs = hs, nlast
    9280:	csel	w1, w1, wzr, cs  // cs = hs, nlast
    9284:	csel	w3, w3, w0, cs  // cs = hs, nlast
    9288:	cmp	x26, x19
    928c:	b.ls	929c <grub_strtoul+0x3dc>  // b.plast
    9290:	lsr	w0, w3, w1
    9294:	orr	w2, w0, w2
    9298:	strb	w2, [x25, x19]
    929c:	add	x19, x19, #0x1
    92a0:	sub	w1, w1, #0x6
    92a4:	tbnz	w1, #31, 8f58 <grub_strtoul+0x98>
    92a8:	cmp	x26, x19
    92ac:	b.ls	929c <grub_strtoul+0x3dc>  // b.plast
    92b0:	lsr	w0, w3, w1
    92b4:	and	w0, w0, #0x3f
    92b8:	orr	w0, w0, #0xffffff80
    92bc:	strb	w0, [x25, x19]
    92c0:	b	929c <grub_strtoul+0x3dc>
    92c4:	mov	w2, #0x0                   	// #0
    92c8:	mov	w1, #0x0                   	// #0
    92cc:	b	9288 <grub_strtoul+0x3c8>
    92d0:	mov	w2, #0xc0                  	// #192
    92d4:	mov	w1, #0x6                   	// #6
    92d8:	b	9288 <grub_strtoul+0x3c8>
    92dc:	mov	w2, #0xe0                  	// #224
    92e0:	mov	w1, #0xc                   	// #12
    92e4:	b	9288 <grub_strtoul+0x3c8>
    92e8:	adrp	x1, 0 <_start>
    92ec:	cmp	x0, #0x0
    92f0:	ldr	x1, [x1]
    92f4:	csel	x4, x0, x1, ne  // ne = any
    92f8:	mov	x1, #0x0                   	// #0
    92fc:	cmp	x3, x1
    9300:	b.ls	930c <grub_strtoul+0x44c>  // b.plast
    9304:	ldrb	w0, [x4, x1]
    9308:	cbnz	w0, 9360 <grub_strtoul+0x4a0>
    930c:	subs	x0, x24, x1
    9310:	csel	x0, x0, xzr, hi  // hi = pmore
    9314:	cbnz	w20, 9328 <grub_strtoul+0x468>
    9318:	add	x0, x0, x19
    931c:	cmp	x0, x19
    9320:	b.ne	9368 <grub_strtoul+0x4a8>  // b.any
    9324:	mov	x0, #0xffffffffffffffff    	// #-1
    9328:	add	x3, x25, x19
    932c:	mov	x2, #0x0                   	// #0
    9330:	cmp	x1, x2
    9334:	b.ne	937c <grub_strtoul+0x4bc>  // b.any
    9338:	add	x19, x19, x1
    933c:	cbz	w20, 8f58 <grub_strtoul+0x98>
    9340:	add	x0, x0, x19
    9344:	cmp	x19, x0
    9348:	b.eq	8f58 <grub_strtoul+0x98>  // b.none
    934c:	cmp	x26, x19
    9350:	b.ls	9358 <grub_strtoul+0x498>  // b.plast
    9354:	strb	w27, [x25, x19]
    9358:	add	x19, x19, #0x1
    935c:	b	9344 <grub_strtoul+0x484>
    9360:	add	x1, x1, #0x1
    9364:	b	92fc <grub_strtoul+0x43c>
    9368:	cmp	x26, x19
    936c:	b.ls	9374 <grub_strtoul+0x4b4>  // b.plast
    9370:	strb	w27, [x25, x19]
    9374:	add	x19, x19, #0x1
    9378:	b	931c <grub_strtoul+0x45c>
    937c:	add	x5, x2, x19
    9380:	cmp	x26, x5
    9384:	b.ls	9390 <grub_strtoul+0x4d0>  // b.plast
    9388:	ldrb	w5, [x4, x2]
    938c:	strb	w5, [x3, x2]
    9390:	add	x2, x2, #0x1
    9394:	b	9330 <grub_strtoul+0x470>
    9398:	strb	wzr, [x25, x26]
    939c:	b	8f1c <grub_strtoul+0x5c>
    93a0:	mov	x6, x22
    93a4:	b	91ac <grub_strtoul+0x2ec>
	...

00000000000093b8 <grub_vprintf>:
    93b8:	stp	x29, x30, [sp, #-352]!
    93bc:	mov	x29, sp
    93c0:	ldp	x2, x3, [x1]
    93c4:	stp	x2, x3, [sp, #48]
    93c8:	ldp	x2, x3, [x1, #16]
    93cc:	add	x1, sp, #0x50
    93d0:	stp	x19, x20, [sp, #16]
    93d4:	stp	x21, x22, [sp, #32]
    93d8:	mov	x22, x0
    93dc:	stp	x2, x3, [sp, #64]
    93e0:	add	x2, sp, #0x30
    93e4:	bl	8a60 <grub_strtoull+0x13c>
    93e8:	adrp	x0, 0 <_start>
    93ec:	add	x3, sp, #0x50
    93f0:	mov	x2, x22
    93f4:	mov	x1, #0xff                  	// #255
    93f8:	ldr	x21, [x0]
    93fc:	mov	x0, x21
    9400:	bl	8ec4 <grub_strtoul+0x4>
    9404:	sxtw	x19, w0
    9408:	cmp	x19, #0xff
    940c:	b.ls	9438 <grub_vprintf+0x80>  // b.plast
    9410:	add	x0, x19, #0x1
    9414:	bl	47f8 <grub_malloc>
    9418:	mov	x20, x0
    941c:	cbnz	x0, 9440 <grub_vprintf+0x88>
    9420:	adrp	x0, 0 <_start>
    9424:	ldr	x0, [x0]
    9428:	str	wzr, [x0]
    942c:	mov	w0, #0x2e2e                	// #11822
    9430:	movk	w0, #0x2e, lsl #16
    9434:	str	w0, [x21, #252]
    9438:	mov	x20, x21
    943c:	b	9454 <grub_vprintf+0x9c>
    9440:	mov	x1, x19
    9444:	add	x3, sp, #0x50
    9448:	mov	x2, x22
    944c:	bl	8ec4 <grub_strtoul+0x4>
    9450:	sxtw	x19, w0
    9454:	add	x0, sp, #0x50
    9458:	bl	848c <grub_main+0x53c>
    945c:	adrp	x0, 0 <_start>
    9460:	ldr	x0, [x0]
    9464:	ldr	x1, [x0]
    9468:	mov	x0, x20
    946c:	blr	x1
    9470:	cmp	x20, x21
    9474:	b.eq	9480 <grub_vprintf+0xc8>  // b.none
    9478:	mov	x0, x20
    947c:	bl	4844 <grub_free>
    9480:	mov	w0, w19
    9484:	ldp	x19, x20, [sp, #16]
    9488:	ldp	x21, x22, [sp, #32]
    948c:	ldp	x29, x30, [sp], #352
    9490:	ret
    9494:	nop
	...

00000000000094b0 <grub_err_printf>:
    94b0:	stp	x29, x30, [sp, #-144]!
    94b4:	mov	x29, sp
    94b8:	stp	x1, x2, [sp, #88]
    94bc:	add	x1, sp, #0x90
    94c0:	stp	x1, x1, [sp, #48]
    94c4:	add	x1, sp, #0x50
    94c8:	str	x1, [sp, #64]
    94cc:	mov	w1, #0xffffffc8            	// #-56
    94d0:	str	w1, [sp, #72]
    94d4:	add	x1, sp, #0x10
    94d8:	str	wzr, [sp, #76]
    94dc:	stp	x3, x4, [sp, #104]
    94e0:	ldp	x2, x3, [sp, #48]
    94e4:	stp	x2, x3, [sp, #16]
    94e8:	ldp	x2, x3, [sp, #64]
    94ec:	stp	x2, x3, [sp, #32]
    94f0:	stp	x5, x6, [sp, #120]
    94f4:	str	x7, [sp, #136]
    94f8:	bl	93b8 <grub_vprintf>
    94fc:	ldp	x29, x30, [sp], #144
    9500:	ret

0000000000009504 <grub_printf_>:
    9504:	stp	x29, x30, [sp, #-144]!
    9508:	mov	x29, sp
    950c:	stp	x1, x2, [sp, #88]
    9510:	add	x1, sp, #0x90
    9514:	stp	x1, x1, [sp, #48]
    9518:	add	x1, sp, #0x50
    951c:	str	x1, [sp, #64]
    9520:	mov	w1, #0xffffffc8            	// #-56
    9524:	str	w1, [sp, #72]
    9528:	adrp	x1, 0 <_start>
    952c:	stp	x3, x4, [sp, #104]
    9530:	ldr	x1, [x1]
    9534:	stp	x5, x6, [sp, #120]
    9538:	str	x7, [sp, #136]
    953c:	str	wzr, [sp, #76]
    9540:	ldr	x1, [x1]
    9544:	blr	x1
    9548:	ldp	x2, x3, [sp, #48]
    954c:	stp	x2, x3, [sp, #16]
    9550:	add	x1, sp, #0x10
    9554:	ldp	x2, x3, [sp, #64]
    9558:	stp	x2, x3, [sp, #32]
    955c:	bl	93b8 <grub_vprintf>
    9560:	ldp	x29, x30, [sp], #144
    9564:	ret
	...

0000000000009570 <grub_real_dprintf>:
    9570:	stp	x29, x30, [sp, #-144]!
    9574:	mov	x29, sp
    9578:	stp	x19, x20, [sp, #16]
    957c:	mov	x20, x0
    9580:	adrp	x0, 0 <_start>
    9584:	mov	x19, x3
    9588:	stp	x21, x22, [sp, #32]
    958c:	mov	w21, w1
    9590:	ldr	x0, [x0]
    9594:	mov	x22, x2
    9598:	stp	x4, x5, [sp, #112]
    959c:	stp	x6, x7, [sp, #128]
    95a0:	bl	70d8 <grub_env_get>
    95a4:	cbz	x0, 961c <grub_real_dprintf+0xac>
    95a8:	adrp	x1, 0 <_start>
    95ac:	mov	x8, x0
    95b0:	ldr	x1, [x1]
    95b4:	bl	86b8 <grub_strword>
    95b8:	cbnz	w0, 95cc <grub_real_dprintf+0x5c>
    95bc:	mov	x1, x22
    95c0:	mov	x0, x8
    95c4:	bl	86b8 <grub_strword>
    95c8:	cbz	w0, 961c <grub_real_dprintf+0xac>
    95cc:	adrp	x0, 0 <_start>
    95d0:	mov	w2, w21
    95d4:	mov	x1, x20
    95d8:	ldr	x0, [x0]
    95dc:	bl	94b0 <grub_err_printf>
    95e0:	str	wzr, [sp, #108]
    95e4:	add	x0, sp, #0x90
    95e8:	stp	x0, x0, [sp, #80]
    95ec:	add	x0, sp, #0x70
    95f0:	str	x0, [sp, #96]
    95f4:	mov	w0, #0xffffffe0            	// #-32
    95f8:	str	w0, [sp, #104]
    95fc:	ldp	x0, x1, [sp, #80]
    9600:	stp	x0, x1, [sp, #48]
    9604:	ldp	x0, x1, [sp, #96]
    9608:	stp	x0, x1, [sp, #64]
    960c:	add	x1, sp, #0x30
    9610:	mov	x0, x19
    9614:	bl	93b8 <grub_vprintf>
    9618:	bl	a740 <grub_refresh>
    961c:	ldp	x19, x20, [sp, #16]
    9620:	ldp	x21, x22, [sp, #32]
    9624:	ldp	x29, x30, [sp], #144
    9628:	ret
    962c:	nop
	...

0000000000009648 <grub_vsnprintf>:
    9648:	cbz	x1, 96c4 <grub_vsnprintf+0x7c>
    964c:	stp	x29, x30, [sp, #-352]!
    9650:	mov	x29, sp
    9654:	stp	x19, x20, [sp, #16]
    9658:	sub	x19, x1, #0x1
    965c:	mov	x20, x2
    9660:	str	x21, [sp, #32]
    9664:	mov	x21, x0
    9668:	ldp	x0, x1, [x3]
    966c:	stp	x0, x1, [sp, #48]
    9670:	add	x2, sp, #0x30
    9674:	ldp	x0, x1, [x3, #16]
    9678:	stp	x0, x1, [sp, #64]
    967c:	add	x1, sp, #0x50
    9680:	mov	x0, x20
    9684:	bl	8a60 <grub_strtoull+0x13c>
    9688:	add	x3, sp, #0x50
    968c:	mov	x2, x20
    9690:	mov	x1, x19
    9694:	mov	x0, x21
    9698:	bl	8ec4 <grub_strtoul+0x4>
    969c:	mov	w20, w0
    96a0:	add	x0, sp, #0x50
    96a4:	bl	848c <grub_main+0x53c>
    96a8:	sxtw	x1, w20
    96ac:	cmp	x19, w20, sxtw
    96b0:	csel	x0, x1, x19, cs  // cs = hs, nlast
    96b4:	ldp	x19, x20, [sp, #16]
    96b8:	ldr	x21, [sp, #32]
    96bc:	ldp	x29, x30, [sp], #352
    96c0:	ret
    96c4:	mov	w0, #0x0                   	// #0
    96c8:	ret

00000000000096cc <grub_snprintf>:
    96cc:	stp	x29, x30, [sp, #-128]!
    96d0:	mov	x29, sp
    96d4:	stp	x3, x4, [sp, #88]
    96d8:	add	x3, sp, #0x80
    96dc:	stp	x3, x3, [sp, #48]
    96e0:	add	x3, sp, #0x50
    96e4:	str	x3, [sp, #64]
    96e8:	mov	w3, #0xffffffd8            	// #-40
    96ec:	str	w3, [sp, #72]
    96f0:	add	x3, sp, #0x10
    96f4:	str	wzr, [sp, #76]
    96f8:	stp	x5, x6, [sp, #104]
    96fc:	ldp	x4, x5, [sp, #48]
    9700:	stp	x4, x5, [sp, #16]
    9704:	ldp	x4, x5, [sp, #64]
    9708:	stp	x4, x5, [sp, #32]
    970c:	str	x7, [sp, #120]
    9710:	bl	9648 <grub_vsnprintf>
    9714:	ldp	x29, x30, [sp], #128
    9718:	ret

000000000000971c <grub_xvasprintf>:
    971c:	stp	x29, x30, [sp, #-352]!
    9720:	mov	x29, sp
    9724:	ldp	x2, x3, [x1]
    9728:	stp	x2, x3, [sp, #48]
    972c:	ldp	x2, x3, [x1, #16]
    9730:	stp	x19, x20, [sp, #16]
    9734:	mov	x20, #0xff                  	// #255
    9738:	add	x1, sp, #0x50
    973c:	stp	x21, x22, [sp, #32]
    9740:	mov	x21, x0
    9744:	stp	x2, x3, [sp, #64]
    9748:	add	x2, sp, #0x30
    974c:	bl	8a60 <grub_strtoull+0x13c>
    9750:	add	x0, x20, #0x1
    9754:	bl	47f8 <grub_malloc>
    9758:	mov	x19, x0
    975c:	cbnz	x0, 977c <grub_xvasprintf+0x60>
    9760:	add	x0, sp, #0x50
    9764:	bl	848c <grub_main+0x53c>
    9768:	mov	x0, x19
    976c:	ldp	x19, x20, [sp, #16]
    9770:	ldp	x21, x22, [sp, #32]
    9774:	ldp	x29, x30, [sp], #352
    9778:	ret
    977c:	add	x3, sp, #0x50
    9780:	mov	x2, x21
    9784:	mov	x1, x20
    9788:	bl	8ec4 <grub_strtoul+0x4>
    978c:	sxtw	x22, w0
    9790:	cmp	x20, w0, sxtw
    9794:	b.cs	9760 <grub_xvasprintf+0x44>  // b.hs, b.nlast
    9798:	mov	x0, x19
    979c:	mov	x20, x22
    97a0:	bl	4844 <grub_free>
    97a4:	b	9750 <grub_xvasprintf+0x34>

00000000000097a8 <grub_xasprintf>:
    97a8:	stp	x29, x30, [sp, #-144]!
    97ac:	mov	x29, sp
    97b0:	stp	x1, x2, [sp, #88]
    97b4:	add	x1, sp, #0x90
    97b8:	stp	x1, x1, [sp, #48]
    97bc:	add	x1, sp, #0x50
    97c0:	str	x1, [sp, #64]
    97c4:	mov	w1, #0xffffffc8            	// #-56
    97c8:	str	w1, [sp, #72]
    97cc:	add	x1, sp, #0x10
    97d0:	str	wzr, [sp, #76]
    97d4:	stp	x3, x4, [sp, #104]
    97d8:	ldp	x2, x3, [sp, #48]
    97dc:	stp	x2, x3, [sp, #16]
    97e0:	ldp	x2, x3, [sp, #64]
    97e4:	stp	x2, x3, [sp, #32]
    97e8:	stp	x5, x6, [sp, #120]
    97ec:	str	x7, [sp, #136]
    97f0:	bl	971c <grub_xvasprintf>
    97f4:	ldp	x29, x30, [sp], #144
    97f8:	ret

00000000000097fc <grub_fatal>:
    97fc:	stp	x29, x30, [sp, #-144]!
    9800:	mov	x29, sp
    9804:	stp	x1, x2, [sp, #88]
    9808:	add	x1, sp, #0x90
    980c:	stp	x1, x1, [sp, #48]
    9810:	add	x1, sp, #0x50
    9814:	str	x1, [sp, #64]
    9818:	mov	w1, #0xffffffc8            	// #-56
    981c:	str	w1, [sp, #72]
    9820:	adrp	x1, 0 <_start>
    9824:	stp	x3, x4, [sp, #104]
    9828:	ldr	x1, [x1]
    982c:	stp	x5, x6, [sp, #120]
    9830:	str	x7, [sp, #136]
    9834:	str	wzr, [sp, #76]
    9838:	ldr	x1, [x1]
    983c:	blr	x1
    9840:	ldp	x2, x3, [sp, #48]
    9844:	stp	x2, x3, [sp, #16]
    9848:	add	x1, sp, #0x10
    984c:	ldp	x2, x3, [sp, #64]
    9850:	stp	x2, x3, [sp, #32]
    9854:	bl	93b8 <grub_vprintf>
    9858:	bl	a740 <grub_refresh>
    985c:	adrp	x0, 0 <_start>
    9860:	ldr	x0, [x0]
    9864:	bl	94b0 <grub_err_printf>
    9868:	adrp	x0, 0 <_start>
    986c:	ldr	x0, [x0]
    9870:	ldr	x0, [x0]
    9874:	cbz	x0, 9888 <grub_fatal+0x8c>
    9878:	adrp	x0, 0 <_start>
    987c:	ldr	x0, [x0]
    9880:	bl	94b0 <grub_err_printf>
    9884:	bl	a788 <grub_getkey>
    9888:	bl	2030 <grub_exit>
    988c:	nop
	...
    98b0:	sub	w1, w0, #0x6
    98b4:	sub	w0, w0, #0x9
    98b8:	cmp	w1, #0x1
    98bc:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
    98c0:	cset	w0, ls  // ls = plast
    98c4:	ret
    98c8:	stp	x29, x30, [sp, #-48]!
    98cc:	mov	x29, sp
    98d0:	str	x21, [sp, #32]
    98d4:	mov	x21, x0
    98d8:	ldr	x0, [x2]
    98dc:	stp	x19, x20, [sp, #16]
    98e0:	cbnz	x0, 98fc <grub_fatal+0x100>
    98e4:	str	xzr, [x21]
    98e8:	mov	w0, #0x0                   	// #0
    98ec:	ldp	x19, x20, [sp, #16]
    98f0:	ldr	x21, [sp, #32]
    98f4:	ldp	x29, x30, [sp], #48
    98f8:	ret
    98fc:	mov	x20, x2
    9900:	mov	w1, #0xa                   	// #10
    9904:	bl	860c <grub_strchr>
    9908:	mov	x19, x0
    990c:	ldr	x0, [x20]
    9910:	cbz	x19, 992c <grub_fatal+0x130>
    9914:	sub	x1, x19, x0
    9918:	add	x19, x19, #0x1
    991c:	bl	885c <grub_strndup>
    9920:	str	x0, [x21]
    9924:	str	x19, [x20]
    9928:	b	98e8 <grub_fatal+0xec>
    992c:	bl	8818 <grub_strdup>
    9930:	str	x0, [x21]
    9934:	b	9924 <grub_fatal+0x128>
    9938:	stp	x29, x30, [sp, #-48]!
    993c:	mov	x29, sp
    9940:	stp	x19, x20, [sp, #16]
    9944:	mov	x19, x2
    9948:	mov	x20, x1
    994c:	ldr	x1, [x2]
    9950:	add	x2, x1, #0x1
    9954:	str	x2, [x19]
    9958:	str	x21, [sp, #32]
    995c:	mov	x21, x0
    9960:	strb	wzr, [x1]
    9964:	bl	70d8 <grub_env_get>
    9968:	str	x21, [x19]
    996c:	cbnz	x0, 9994 <grub_fatal+0x198>
    9970:	ldp	x19, x20, [sp, #16]
    9974:	ldr	x21, [sp, #32]
    9978:	ldp	x29, x30, [sp], #48
    997c:	ret
    9980:	ldr	x1, [x20]
    9984:	add	x2, x1, #0x1
    9988:	str	x2, [x20]
    998c:	ldrb	w2, [x0], #1
    9990:	strb	w2, [x1]
    9994:	ldrb	w1, [x0]
    9998:	cbnz	w1, 9980 <grub_fatal+0x184>
    999c:	b	9970 <grub_fatal+0x174>

00000000000099a0 <grub_parser_cmdline_state>:
    99a0:	stp	x29, x30, [sp, #-80]!
    99a4:	mov	x29, sp
    99a8:	stp	x21, x22, [sp, #32]
    99ac:	mov	w22, w0
    99b0:	str	w0, [sp, #68]
    99b4:	mov	w0, #0x1                   	// #1
    99b8:	stp	x19, x20, [sp, #16]
    99bc:	and	w20, w1, #0xff
    99c0:	and	w21, w20, #0xffffffdf
    99c4:	str	w0, [sp, #76]
    99c8:	adrp	x0, 0 <_start>
    99cc:	sub	w21, w21, #0x41
    99d0:	stp	x23, x24, [sp, #48]
    99d4:	and	w21, w21, #0xff
    99d8:	ldr	x19, [x0]
    99dc:	mov	x23, x2
    99e0:	sub	w24, w20, #0x30
    99e4:	ldr	w0, [x19]
    99e8:	cbnz	w0, 99f4 <grub_parser_cmdline_state+0x54>
    99ec:	add	x19, sp, #0x40
    99f0:	b	9a1c <grub_parser_cmdline_state+0x7c>
    99f4:	cmp	w0, w22
    99f8:	b.eq	9a04 <grub_parser_cmdline_state+0x64>  // b.none
    99fc:	add	x19, x19, #0x10
    9a00:	b	99e4 <grub_parser_cmdline_state+0x44>
    9a04:	ldrb	w0, [x19, #8]
    9a08:	cmp	w0, w20
    9a0c:	b.ne	9a38 <grub_parser_cmdline_state+0x98>  // b.any
    9a10:	ldr	w0, [x19, #12]
    9a14:	cmp	w0, #0x0
    9a18:	csel	w20, w20, wzr, ne  // ne = any
    9a1c:	strb	w20, [x23]
    9a20:	ldr	w0, [x19, #4]
    9a24:	ldp	x19, x20, [sp, #16]
    9a28:	ldp	x21, x22, [sp, #32]
    9a2c:	ldp	x23, x24, [sp, #48]
    9a30:	ldp	x29, x30, [sp], #80
    9a34:	ret
    9a38:	bl	8648 <grub_isspace>
    9a3c:	cbz	w0, 9a58 <grub_parser_cmdline_state+0xb8>
    9a40:	cmp	w21, #0x19
    9a44:	b.ls	9a58 <grub_parser_cmdline_state+0xb8>  // b.plast
    9a48:	cmp	w24, #0x9
    9a4c:	b.ls	9a58 <grub_parser_cmdline_state+0xb8>  // b.plast
    9a50:	cmp	w20, #0x5f
    9a54:	b.ne	9a60 <grub_parser_cmdline_state+0xc0>  // b.any
    9a58:	ldrb	w0, [x19, #8]
    9a5c:	cbnz	w0, 99fc <grub_parser_cmdline_state+0x5c>
    9a60:	ldr	w0, [x19]
    9a64:	cbnz	w0, 9a10 <grub_parser_cmdline_state+0x70>
    9a68:	b	99ec <grub_parser_cmdline_state+0x4c>
    9a6c:	nop
	...

0000000000009a78 <grub_parser_split_cmdline>:
    9a78:	sub	sp, sp, #0x540
    9a7c:	stp	x29, x30, [sp]
    9a80:	mov	x29, sp
    9a84:	stp	x19, x20, [sp, #16]
    9a88:	mov	x19, x3
    9a8c:	mov	w20, #0x1                   	// #1
    9a90:	stp	x21, x22, [sp, #32]
    9a94:	add	x21, sp, #0x140
    9a98:	stp	x23, x24, [sp, #48]
    9a9c:	mov	x24, x1
    9aa0:	mov	x23, x4
    9aa4:	stp	x25, x26, [sp, #64]
    9aa8:	mov	x26, x2
    9aac:	add	x25, sp, #0x78
    9ab0:	str	wzr, [x3]
    9ab4:	stp	x21, x0, [sp, #96]
    9ab8:	str	x25, [sp, #112]
    9abc:	ldr	x0, [sp, #104]
    9ac0:	cbz	x0, 9acc <grub_parser_split_cmdline+0x54>
    9ac4:	ldrb	w0, [x0]
    9ac8:	cbnz	w0, 9b84 <grub_parser_split_cmdline+0x10c>
    9acc:	cbz	x24, 9ae8 <grub_parser_split_cmdline+0x70>
    9ad0:	mov	x2, x26
    9ad4:	add	x0, sp, #0x68
    9ad8:	mov	w1, #0x1                   	// #1
    9adc:	blr	x24
    9ae0:	ldr	x0, [sp, #104]
    9ae4:	cbnz	x0, 9b84 <grub_parser_split_cmdline+0x10c>
    9ae8:	mov	w0, w20
    9aec:	bl	98b0 <grub_fatal+0xb4>
    9af0:	cbnz	w0, 9ba4 <grub_parser_split_cmdline+0x12c>
    9af4:	b	9bb4 <grub_parser_split_cmdline+0x13c>
    9af8:	add	x2, sp, #0x5f
    9afc:	mov	w0, w20
    9b00:	bl	99a0 <grub_parser_cmdline_state>
    9b04:	mov	w22, w0
    9b08:	mov	w0, w20
    9b0c:	bl	98b0 <grub_fatal+0xb4>
    9b10:	cbz	w0, 9c1c <grub_parser_split_cmdline+0x1a4>
    9b14:	mov	w0, w22
    9b18:	bl	98b0 <grub_fatal+0xb4>
    9b1c:	cbnz	w0, 9c28 <grub_parser_split_cmdline+0x1b0>
    9b20:	add	x2, sp, #0x70
    9b24:	add	x1, sp, #0x60
    9b28:	mov	x0, x25
    9b2c:	bl	9938 <grub_fatal+0x13c>
    9b30:	cmp	w22, #0x1
    9b34:	ccmp	w20, #0x2, #0x4, eq  // eq = none
    9b38:	b.eq	9c44 <grub_parser_split_cmdline+0x1cc>  // b.none
    9b3c:	ldrb	w0, [sp, #95]
    9b40:	bl	8648 <grub_isspace>
    9b44:	cbz	w0, 9c44 <grub_parser_split_cmdline+0x1cc>
    9b48:	ldr	x0, [sp, #96]
    9b4c:	cmp	x0, x21
    9b50:	b.eq	9b74 <grub_parser_split_cmdline+0xfc>  // b.none
    9b54:	ldurb	w1, [x0, #-1]
    9b58:	cbz	w1, 9b74 <grub_parser_split_cmdline+0xfc>
    9b5c:	add	x1, x0, #0x1
    9b60:	str	x1, [sp, #96]
    9b64:	strb	wzr, [x0]
    9b68:	ldr	w0, [x19]
    9b6c:	add	w0, w0, #0x1
    9b70:	str	w0, [x19]
    9b74:	ldr	x0, [sp, #104]
    9b78:	mov	w20, w22
    9b7c:	add	x0, x0, #0x1
    9b80:	str	x0, [sp, #104]
    9b84:	ldr	x0, [sp, #104]
    9b88:	ldrb	w1, [x0]
    9b8c:	cbnz	w1, 9af8 <grub_parser_split_cmdline+0x80>
    9b90:	cmp	w20, #0x1
    9b94:	b.eq	9ae8 <grub_parser_split_cmdline+0x70>  // b.none
    9b98:	mov	w0, w20
    9b9c:	bl	98b0 <grub_fatal+0xb4>
    9ba0:	cbz	w0, 9abc <grub_parser_split_cmdline+0x44>
    9ba4:	add	x2, sp, #0x70
    9ba8:	add	x1, sp, #0x60
    9bac:	mov	x0, x25
    9bb0:	bl	9938 <grub_fatal+0x13c>
    9bb4:	ldr	x0, [sp, #96]
    9bb8:	cmp	x0, x21
    9bbc:	b.eq	9be0 <grub_parser_split_cmdline+0x168>  // b.none
    9bc0:	ldurb	w1, [x0, #-1]
    9bc4:	cbz	w1, 9be0 <grub_parser_split_cmdline+0x168>
    9bc8:	add	x1, x0, #0x1
    9bcc:	str	x1, [sp, #96]
    9bd0:	strb	wzr, [x0]
    9bd4:	ldr	w0, [x19]
    9bd8:	add	w0, w0, #0x1
    9bdc:	str	w0, [x19]
    9be0:	ldr	x0, [sp, #96]
    9be4:	sub	x0, x0, x21
    9be8:	bl	47f8 <grub_malloc>
    9bec:	mov	x20, x0
    9bf0:	cbnz	x0, 9c5c <grub_parser_split_cmdline+0x1e4>
    9bf4:	adrp	x0, 0 <_start>
    9bf8:	ldr	x0, [x0]
    9bfc:	ldr	w0, [x0]
    9c00:	ldp	x29, x30, [sp]
    9c04:	ldp	x19, x20, [sp, #16]
    9c08:	ldp	x21, x22, [sp, #32]
    9c0c:	ldp	x23, x24, [sp, #48]
    9c10:	ldp	x25, x26, [sp, #64]
    9c14:	add	sp, sp, #0x540
    9c18:	ret
    9c1c:	mov	w0, w22
    9c20:	bl	98b0 <grub_fatal+0xb4>
    9c24:	cbz	w0, 9b30 <grub_parser_split_cmdline+0xb8>
    9c28:	ldrb	w1, [sp, #95]
    9c2c:	cbz	w1, 9b74 <grub_parser_split_cmdline+0xfc>
    9c30:	ldr	x0, [sp, #112]
    9c34:	add	x2, x0, #0x1
    9c38:	str	x2, [sp, #112]
    9c3c:	strb	w1, [x0]
    9c40:	b	9b74 <grub_parser_split_cmdline+0xfc>
    9c44:	ldrb	w1, [sp, #95]
    9c48:	cbz	w1, 9b74 <grub_parser_split_cmdline+0xfc>
    9c4c:	ldr	x0, [sp, #96]
    9c50:	add	x2, x0, #0x1
    9c54:	str	x2, [sp, #96]
    9c58:	b	9c3c <grub_parser_split_cmdline+0x1c4>
    9c5c:	ldr	x2, [sp, #96]
    9c60:	mov	x1, x21
    9c64:	sub	x2, x2, x21
    9c68:	bl	84a4 <grub_memmove>
    9c6c:	ldr	w0, [x19]
    9c70:	add	w0, w0, #0x1
    9c74:	sbfiz	x0, x0, #3, #32
    9c78:	bl	47f8 <grub_malloc>
    9c7c:	str	x0, [x23]
    9c80:	cbnz	x0, 9c90 <grub_parser_split_cmdline+0x218>
    9c84:	mov	x0, x20
    9c88:	bl	4844 <grub_free>
    9c8c:	b	9bf4 <grub_parser_split_cmdline+0x17c>
    9c90:	ldr	w3, [x19]
    9c94:	mov	x1, #0x0                   	// #0
    9c98:	str	x20, [sp, #96]
    9c9c:	cmp	w3, w1
    9ca0:	b.gt	9cac <grub_parser_split_cmdline+0x234>
    9ca4:	mov	w0, #0x0                   	// #0
    9ca8:	b	9c00 <grub_parser_split_cmdline+0x188>
    9cac:	ldr	x2, [sp, #96]
    9cb0:	str	x2, [x0, x1, lsl #3]
    9cb4:	ldr	x2, [sp, #96]
    9cb8:	ldrb	w4, [x2], #1
    9cbc:	str	x2, [sp, #96]
    9cc0:	cbnz	w4, 9cb4 <grub_parser_split_cmdline+0x23c>
    9cc4:	add	x1, x1, #0x1
    9cc8:	b	9c9c <grub_parser_split_cmdline+0x224>
    9ccc:	nop
	...

0000000000009cd8 <grub_parser_execute>:
    9cd8:	stp	x29, x30, [sp, #-64]!
    9cdc:	mov	x29, sp
    9ce0:	str	x19, [sp, #16]
    9ce4:	adrp	x19, 0 <_start>
    9ce8:	str	x0, [sp, #40]
    9cec:	ldr	x0, [sp, #40]
    9cf0:	cbnz	x0, 9d0c <grub_parser_execute+0x34>
    9cf4:	adrp	x0, 0 <_start>
    9cf8:	ldr	x19, [sp, #16]
    9cfc:	ldr	x0, [x0]
    9d00:	ldr	w0, [x0]
    9d04:	ldp	x29, x30, [sp], #64
    9d08:	ret
    9d0c:	add	x2, sp, #0x28
    9d10:	add	x0, sp, #0x38
    9d14:	mov	w1, #0x0                   	// #0
    9d18:	bl	98c8 <grub_fatal+0xcc>
    9d1c:	ldr	x1, [x19]
    9d20:	add	x2, sp, #0x28
    9d24:	ldr	x0, [sp, #56]
    9d28:	bl	a2b0 <grub_rescue_parse_line>
    9d2c:	ldr	x0, [sp, #56]
    9d30:	bl	4844 <grub_free>
    9d34:	bl	74d8 <grub_print_error>
    9d38:	b	9cec <grub_parser_execute+0x14>
    9d3c:	nop
	...

0000000000009d50 <grub_partition_probe>:
    9d50:	stp	x29, x30, [sp, #-128]!
    9d54:	mov	x29, sp
    9d58:	stp	x21, x22, [sp, #32]
    9d5c:	ldr	x22, [x0, #40]
    9d60:	stp	x19, x20, [sp, #16]
    9d64:	mov	x19, x0
    9d68:	mov	x21, x22
    9d6c:	stp	x23, x24, [sp, #48]
    9d70:	adrp	x23, 0 <_start>
    9d74:	stp	x25, x26, [sp, #64]
    9d78:	stp	x27, x28, [sp, #80]
    9d7c:	str	x1, [sp, #104]
    9d80:	ldr	x24, [sp, #104]
    9d84:	ldrb	w0, [x24]
    9d88:	cbnz	w0, 9d9c <grub_partition_probe+0x4c>
    9d8c:	mov	x0, x21
    9d90:	b	9e48 <grub_partition_probe+0xf8>
    9d94:	add	x20, x20, #0x1
    9d98:	str	x20, [sp, #104]
    9d9c:	ldr	x20, [sp, #104]
    9da0:	ldrb	w1, [x20]
    9da4:	cbz	w1, 9dbc <grub_partition_probe+0x6c>
    9da8:	and	w1, w1, #0xffffffdf
    9dac:	sub	w1, w1, #0x41
    9db0:	and	w1, w1, #0xff
    9db4:	cmp	w1, #0x19
    9db8:	b.ls	9d94 <grub_partition_probe+0x44>  // b.plast
    9dbc:	add	x1, sp, #0x68
    9dc0:	mov	x0, x20
    9dc4:	mov	w2, #0x0                   	// #0
    9dc8:	bl	8ec0 <grub_strtoul>
    9dcc:	sub	w26, w0, #0x1
    9dd0:	adrp	x0, 0 <_start>
    9dd4:	sub	x27, x20, x24
    9dd8:	adrp	x28, 0 <_start>
    9ddc:	ldr	x0, [x0]
    9de0:	ldr	x25, [x0]
    9de4:	cbz	x25, 9e40 <grub_partition_probe+0xf0>
    9de8:	cmp	x20, x24
    9dec:	b.ne	9e64 <grub_partition_probe+0x114>  // b.any
    9df0:	ldr	x1, [x23]
    9df4:	str	w26, [sp, #112]
    9df8:	ldr	x3, [x25, #24]
    9dfc:	str	x21, [x19, #40]
    9e00:	str	xzr, [sp, #120]
    9e04:	add	x2, sp, #0x70
    9e08:	mov	x0, x19
    9e0c:	blr	x3
    9e10:	ldr	x1, [x28]
    9e14:	ldr	w0, [x1]
    9e18:	cbz	w0, 9e8c <grub_partition_probe+0x13c>
    9e1c:	ldr	x0, [sp, #120]
    9e20:	bl	4844 <grub_free>
    9e24:	str	x22, [x19, #40]
    9e28:	adrp	x0, 0 <_start>
    9e2c:	add	x0, x0, #0x0
    9e30:	ldr	x1, [x0]
    9e34:	ldr	w0, [x1]
    9e38:	cmp	w0, #0x13
    9e3c:	b.eq	9ec0 <grub_partition_probe+0x170>  // b.none
    9e40:	mov	x0, x21
    9e44:	cbnz	x0, 9ec8 <grub_partition_probe+0x178>
    9e48:	ldp	x19, x20, [sp, #16]
    9e4c:	ldp	x21, x22, [sp, #32]
    9e50:	ldp	x23, x24, [sp, #48]
    9e54:	ldp	x25, x26, [sp, #64]
    9e58:	ldp	x27, x28, [sp, #80]
    9e5c:	ldp	x29, x30, [sp], #128
    9e60:	ret
    9e64:	ldr	x0, [x25, #16]
    9e68:	mov	x2, x27
    9e6c:	mov	x1, x24
    9e70:	bl	85cc <grub_strncmp>
    9e74:	cbnz	w0, 9e84 <grub_partition_probe+0x134>
    9e78:	ldr	x0, [x25, #16]
    9e7c:	ldrb	w0, [x0, x27]
    9e80:	cbz	w0, 9df0 <grub_partition_probe+0xa0>
    9e84:	ldr	x25, [x25]
    9e88:	b	9de4 <grub_partition_probe+0x94>
    9e8c:	ldr	x0, [sp, #120]
    9e90:	str	x22, [x19, #40]
    9e94:	cbz	x0, 9e40 <grub_partition_probe+0xf0>
    9e98:	ldr	x1, [sp, #104]
    9e9c:	str	x21, [x0, #40]
    9ea0:	cbz	x1, 9e48 <grub_partition_probe+0xf8>
    9ea4:	ldrb	w2, [x1]
    9ea8:	cmp	w2, #0x2c
    9eac:	b.ne	9e48 <grub_partition_probe+0xf8>  // b.any
    9eb0:	add	x1, x1, #0x1
    9eb4:	mov	x21, x0
    9eb8:	str	x1, [sp, #104]
    9ebc:	b	9d80 <grub_partition_probe+0x30>
    9ec0:	str	wzr, [x1]
    9ec4:	b	9e84 <grub_partition_probe+0x134>
    9ec8:	ldr	x19, [x0, #40]
    9ecc:	bl	4844 <grub_free>
    9ed0:	mov	x0, x19
    9ed4:	b	9e44 <grub_partition_probe+0xf4>
	...

0000000000009ef0 <grub_partition_iterate>:
    9ef0:	stp	x29, x30, [sp, #-80]!
    9ef4:	mov	x29, sp
    9ef8:	stp	x19, x20, [sp, #16]
    9efc:	mov	x20, x0
    9f00:	adrp	x0, 0 <_start>
    9f04:	stp	x21, x22, [sp, #32]
    9f08:	adrp	x21, 0 <_start>
    9f0c:	adrp	x22, 0 <_start>
    9f10:	ldr	x0, [x0]
    9f14:	str	wzr, [sp, #56]
    9f18:	stp	x1, x2, [sp, #64]
    9f1c:	ldr	x19, [x0]
    9f20:	cbz	x19, 9f4c <grub_partition_iterate+0x5c>
    9f24:	ldr	x1, [x21]
    9f28:	add	x2, sp, #0x38
    9f2c:	ldr	x3, [x19, #24]
    9f30:	mov	x0, x20
    9f34:	blr	x3
    9f38:	cbz	w0, 9f44 <grub_partition_iterate+0x54>
    9f3c:	ldr	x0, [x22]
    9f40:	str	wzr, [x0]
    9f44:	ldr	w0, [sp, #56]
    9f48:	cbz	w0, 9f60 <grub_partition_iterate+0x70>
    9f4c:	ldr	w0, [sp, #56]
    9f50:	ldp	x19, x20, [sp, #16]
    9f54:	ldp	x21, x22, [sp, #32]
    9f58:	ldp	x29, x30, [sp], #80
    9f5c:	ret
    9f60:	ldr	x19, [x19]
    9f64:	b	9f20 <grub_partition_iterate+0x30>
	...

0000000000009f80 <grub_partition_get_name>:
    9f80:	stp	x29, x30, [sp, #-112]!
    9f84:	mov	x29, sp
    9f88:	stp	x19, x20, [sp, #16]
    9f8c:	stp	x21, x22, [sp, #32]
    9f90:	stp	x23, x24, [sp, #48]
    9f94:	str	x25, [sp, #64]
    9f98:	cbnz	x0, 9fc8 <grub_partition_get_name+0x48>
    9f9c:	adrp	x0, 0 <_start>
    9fa0:	ldr	x0, [x0]
    9fa4:	bl	8818 <grub_strdup>
    9fa8:	mov	x19, x0
    9fac:	mov	x0, x19
    9fb0:	ldp	x19, x20, [sp, #16]
    9fb4:	ldp	x21, x22, [sp, #32]
    9fb8:	ldp	x23, x24, [sp, #48]
    9fbc:	ldr	x25, [sp, #64]
    9fc0:	ldp	x29, x30, [sp], #112
    9fc4:	ret
    9fc8:	mov	x20, x0
    9fcc:	mov	x19, x0
    9fd0:	mov	x21, #0x0                   	// #0
    9fd4:	ldr	x0, [x19, #48]
    9fd8:	ldr	x0, [x0, #16]
    9fdc:	bl	87fc <grub_strlen>
    9fe0:	add	x0, x0, #0x1c
    9fe4:	ldr	x19, [x19, #40]
    9fe8:	add	x21, x21, x0
    9fec:	cbnz	x19, 9fd4 <grub_partition_get_name+0x54>
    9ff0:	add	x0, x21, #0x1
    9ff4:	bl	47f8 <grub_malloc>
    9ff8:	mov	x19, x0
    9ffc:	cbz	x0, 9fac <grub_partition_get_name+0x2c>
    a000:	add	x23, x0, x21
    a004:	strb	wzr, [x0, x21]
    a008:	mov	x21, x23
    a00c:	adrp	x25, 0 <_start>
    a010:	mov	w24, #0x2c                  	// #44
    a014:	ldr	x2, [x25]
    a018:	mov	x1, #0x1b                  	// #27
    a01c:	ldr	w3, [x20]
    a020:	add	x0, sp, #0x50
    a024:	add	w3, w3, #0x1
    a028:	bl	96cc <grub_snprintf>
    a02c:	add	x0, sp, #0x50
    a030:	bl	87fc <grub_strlen>
    a034:	sub	x21, x21, x0
    a038:	mov	x2, x0
    a03c:	add	x1, sp, #0x50
    a040:	mov	x0, x21
    a044:	bl	84a4 <grub_memmove>
    a048:	ldr	x0, [x20, #48]
    a04c:	ldr	x0, [x0, #16]
    a050:	bl	87fc <grub_strlen>
    a054:	sub	x22, x21, x0
    a058:	mov	x2, x0
    a05c:	sub	x21, x22, #0x1
    a060:	ldr	x0, [x20, #48]
    a064:	ldr	x1, [x0, #16]
    a068:	mov	x0, x22
    a06c:	bl	84a4 <grub_memmove>
    a070:	sturb	w24, [x22, #-1]
    a074:	ldr	x20, [x20, #40]
    a078:	cbnz	x20, a014 <grub_partition_get_name+0x94>
    a07c:	sub	x2, x23, x21
    a080:	mov	x1, x22
    a084:	mov	x0, x19
    a088:	bl	84a4 <grub_memmove>
    a08c:	b	9fac <grub_partition_get_name+0x2c>
	...
    a0a0:	stp	x29, x30, [sp, #-48]!
    a0a4:	mov	x29, sp
    a0a8:	str	x21, [sp, #32]
    a0ac:	mov	x21, x0
    a0b0:	ldr	x0, [x0, #40]
    a0b4:	stp	x19, x20, [sp, #16]
    a0b8:	cbz	x0, a130 <grub_partition_get_name+0x1b0>
    a0bc:	mov	x19, x1
    a0c0:	ldp	x1, x2, [x1, #8]
    a0c4:	add	x1, x1, x2
    a0c8:	ldr	x2, [x0, #16]
    a0cc:	cmp	x1, x2
    a0d0:	b.ls	a130 <grub_partition_get_name+0x1b0>  // b.plast
    a0d4:	bl	9f80 <grub_partition_get_name>
    a0d8:	mov	x7, x0
    a0dc:	mov	x20, x0
    a0e0:	ldr	w5, [x19]
    a0e4:	ldr	x0, [x19, #48]
    a0e8:	add	w5, w5, #0x1
    a0ec:	ldr	x6, [x21]
    a0f0:	mov	w1, #0x30                  	// #48
    a0f4:	ldr	x4, [x0, #16]
    a0f8:	adrp	x0, 0 <_start>
    a0fc:	ldr	x3, [x0]
    a100:	adrp	x0, 0 <_start>
    a104:	ldr	x2, [x0]
    a108:	adrp	x0, 0 <_start>
    a10c:	ldr	x0, [x0]
    a110:	bl	9570 <grub_real_dprintf>
    a114:	mov	x0, x20
    a118:	bl	4844 <grub_free>
    a11c:	mov	w0, #0x0                   	// #0
    a120:	ldp	x19, x20, [sp, #16]
    a124:	ldr	x21, [sp, #32]
    a128:	ldp	x29, x30, [sp], #48
    a12c:	ret
    a130:	mov	w0, #0x1                   	// #1
    a134:	b	a120 <grub_partition_get_name+0x1a0>
	...
    a150:	stp	x29, x30, [sp, #-32]!
    a154:	mov	x29, sp
    a158:	ldr	w3, [x2]
    a15c:	stp	x19, x20, [sp, #16]
    a160:	mov	x20, x2
    a164:	ldr	w2, [x1]
    a168:	cmp	w3, w2
    a16c:	b.eq	a180 <grub_partition_get_name+0x200>  // b.none
    a170:	mov	w0, #0x0                   	// #0
    a174:	ldp	x19, x20, [sp, #16]
    a178:	ldp	x29, x30, [sp], #32
    a17c:	ret
    a180:	mov	x19, x1
    a184:	bl	a0a0 <grub_partition_get_name+0x120>
    a188:	cbz	w0, a170 <grub_partition_get_name+0x1f0>
    a18c:	mov	x0, #0x40                  	// #64
    a190:	bl	47f8 <grub_malloc>
    a194:	str	x0, [x20, #8]
    a198:	cbz	x0, a1a8 <grub_partition_get_name+0x228>
    a19c:	mov	x1, x19
    a1a0:	mov	x2, #0x40                  	// #64
    a1a4:	bl	84a4 <grub_memmove>
    a1a8:	mov	w0, #0x1                   	// #1
    a1ac:	b	a174 <grub_partition_get_name+0x1f4>
    a1b0:	stp	x29, x30, [sp, #-128]!
    a1b4:	mov	x29, sp
    a1b8:	ldp	x4, x5, [x1]
    a1bc:	stp	x4, x5, [sp, #64]
    a1c0:	ldp	x4, x5, [x1, #16]
    a1c4:	stp	x19, x20, [sp, #16]
    a1c8:	mov	x20, x2
    a1cc:	stp	x4, x5, [sp, #80]
    a1d0:	mov	x19, x0
    a1d4:	ldp	x4, x5, [x1, #32]
    a1d8:	stp	x21, x22, [sp, #32]
    a1dc:	ldp	x2, x3, [x1, #48]
    a1e0:	str	x23, [sp, #48]
    a1e4:	stp	x4, x5, [sp, #96]
    a1e8:	stp	x2, x3, [sp, #112]
    a1ec:	bl	a0a0 <grub_partition_get_name+0x120>
    a1f0:	cbz	w0, a220 <grub_partition_get_name+0x2a0>
    a1f4:	ldp	x3, x2, [x20, #8]
    a1f8:	add	x21, sp, #0x40
    a1fc:	ldr	x0, [x19, #40]
    a200:	str	xzr, [x19, #40]
    a204:	str	x0, [sp, #104]
    a208:	mov	x1, x21
    a20c:	mov	x0, x19
    a210:	blr	x3
    a214:	cbz	w0, a234 <grub_partition_get_name+0x2b4>
    a218:	mov	w0, #0x1                   	// #1
    a21c:	str	w0, [x20]
    a220:	ldp	x19, x20, [sp, #16]
    a224:	ldp	x21, x22, [sp, #32]
    a228:	ldr	x23, [sp, #48]
    a22c:	ldp	x29, x30, [sp], #128
    a230:	ret
    a234:	ldr	x0, [sp, #72]
    a238:	cbnz	x0, a24c <grub_partition_get_name+0x2cc>
    a23c:	ldr	x0, [sp, #104]
    a240:	str	x0, [x19, #40]
    a244:	ldr	w0, [x20]
    a248:	b	a220 <grub_partition_get_name+0x2a0>
    a24c:	adrp	x0, 0 <_start>
    a250:	str	x21, [x19, #40]
    a254:	adrp	x22, 0 <_start>
    a258:	adrp	x23, 0 <_start>
    a25c:	ldr	x0, [x0]
    a260:	ldr	x21, [x0]
    a264:	cbz	x21, a23c <grub_partition_get_name+0x2bc>
    a268:	ldr	x1, [x22]
    a26c:	mov	x2, x20
    a270:	ldr	x3, [x21, #24]
    a274:	mov	x0, x19
    a278:	blr	x3
    a27c:	cbz	w0, a288 <grub_partition_get_name+0x308>
    a280:	ldr	x0, [x23]
    a284:	str	wzr, [x0]
    a288:	ldr	w0, [x20]
    a28c:	cbnz	w0, a23c <grub_partition_get_name+0x2bc>
    a290:	ldr	x21, [x21]
    a294:	b	a264 <grub_partition_get_name+0x2e4>
	...

000000000000a2b0 <grub_rescue_parse_line>:
    a2b0:	stp	x29, x30, [sp, #-48]!
    a2b4:	mov	x29, sp
    a2b8:	add	x4, sp, #0x28
    a2bc:	add	x3, sp, #0x24
    a2c0:	stp	x19, x20, [sp, #16]
    a2c4:	bl	9a78 <grub_parser_split_cmdline>
    a2c8:	cbnz	w0, a2d8 <grub_rescue_parse_line+0x28>
    a2cc:	ldr	w1, [sp, #36]
    a2d0:	cmp	w1, #0x0
    a2d4:	b.ge	a2f0 <grub_rescue_parse_line+0x40>  // b.tcont
    a2d8:	adrp	x0, 0 <_start>
    a2dc:	ldr	x0, [x0]
    a2e0:	ldr	w0, [x0]
    a2e4:	ldp	x19, x20, [sp, #16]
    a2e8:	ldp	x29, x30, [sp], #48
    a2ec:	ret
    a2f0:	b.eq	a2e4 <grub_rescue_parse_line+0x34>  // b.none
    a2f4:	cmp	w1, #0x1
    a2f8:	b.ne	a348 <grub_rescue_parse_line+0x98>  // b.any
    a2fc:	ldr	x0, [sp, #40]
    a300:	mov	w1, #0x3d                  	// #61
    a304:	ldr	x0, [x0]
    a308:	bl	860c <grub_strchr>
    a30c:	mov	x19, x0
    a310:	cbz	x0, a348 <grub_rescue_parse_line+0x98>
    a314:	mov	x1, x0
    a318:	strb	wzr, [x1], #1
    a31c:	ldr	x0, [sp, #40]
    a320:	ldr	x0, [x0]
    a324:	bl	6f98 <grub_env_set>
    a328:	mov	w0, #0x3d                  	// #61
    a32c:	strb	w0, [x19]
    a330:	ldr	x0, [sp, #40]
    a334:	ldr	x0, [x0]
    a338:	bl	4844 <grub_free>
    a33c:	ldr	x0, [sp, #40]
    a340:	bl	4844 <grub_free>
    a344:	b	a2d8 <grub_rescue_parse_line+0x28>
    a348:	ldr	x0, [sp, #40]
    a34c:	ldr	x19, [x0]
    a350:	ldrb	w0, [x19]
    a354:	cbz	w0, a330 <grub_rescue_parse_line+0x80>
    a358:	adrp	x0, 0 <_start>
    a35c:	mov	x1, x19
    a360:	ldr	x20, [x0]
    a364:	ldr	x0, [x20]
    a368:	bl	7df0 <grub_named_list_find>
    a36c:	cbz	x0, a38c <grub_rescue_parse_line+0xdc>
    a370:	ldr	x3, [x0, #32]
    a374:	ldr	x2, [sp, #40]
    a378:	ldr	w1, [sp, #36]
    a37c:	add	x2, x2, #0x8
    a380:	sub	w1, w1, #0x1
    a384:	blr	x3
    a388:	b	a330 <grub_rescue_parse_line+0x80>
    a38c:	adrp	x0, 0 <_start>
    a390:	mov	x1, x19
    a394:	ldr	x0, [x0]
    a398:	bl	9504 <grub_printf_>
    a39c:	adrp	x0, 0 <_start>
    a3a0:	ldr	x1, [x0]
    a3a4:	ldr	x0, [x20]
    a3a8:	bl	7df0 <grub_named_list_find>
    a3ac:	cbz	x0, a330 <grub_rescue_parse_line+0x80>
    a3b0:	adrp	x0, 0 <_start>
    a3b4:	ldr	x0, [x0]
    a3b8:	bl	94b0 <grub_err_printf>
    a3bc:	b	a330 <grub_rescue_parse_line+0x80>
	...
    a3e8:	stp	x29, x30, [sp, #-80]!
    a3ec:	cmp	w1, #0x0
    a3f0:	mov	x29, sp
    a3f4:	stp	x21, x22, [sp, #32]
    a3f8:	mov	x21, x0
    a3fc:	adrp	x0, 0 <_start>
    a400:	stp	x19, x20, [sp, #16]
    a404:	adrp	x22, 0 <_start>
    a408:	mov	w19, #0x0                   	// #0
    a40c:	ldr	x2, [x0]
    a410:	adrp	x0, 0 <_start>
    a414:	stp	x23, x24, [sp, #48]
    a418:	mov	w23, #0x2008                	// #8200
    a41c:	movk	w23, #0x8, lsl #16
    a420:	ldr	x0, [x0]
    a424:	csel	x0, x2, x0, eq  // eq = none
    a428:	bl	94b0 <grub_err_printf>
    a42c:	adrp	x0, 0 <_start>
    a430:	mov	x2, #0x100                 	// #256
    a434:	mov	w1, #0x0                   	// #0
    a438:	ldr	x20, [x0]
    a43c:	mov	x0, x20
    a440:	bl	876c <grub_memset>
    a444:	bl	a788 <grub_getkey>
    a448:	cmp	w0, #0xa
    a44c:	b.eq	a458 <grub_rescue_parse_line+0x1a8>  // b.none
    a450:	cmp	w0, #0xd
    a454:	b.ne	a498 <grub_rescue_parse_line+0x1e8>  // b.any
    a458:	adrp	x0, 0 <_start>
    a45c:	ldr	x0, [x0]
    a460:	ldr	x1, [x0]
    a464:	adrp	x0, 0 <_start>
    a468:	ldr	x0, [x0]
    a46c:	blr	x1
    a470:	bl	a740 <grub_refresh>
    a474:	mov	x0, x20
    a478:	bl	8818 <grub_strdup>
    a47c:	ldp	x19, x20, [sp, #16]
    a480:	ldp	x23, x24, [sp, #48]
    a484:	str	x0, [x21]
    a488:	mov	w0, #0x0                   	// #0
    a48c:	ldp	x21, x22, [sp, #32]
    a490:	ldp	x29, x30, [sp], #80
    a494:	ret
    a498:	sub	w1, w0, #0x20
    a49c:	cmp	w1, #0x5e
    a4a0:	b.hi	a4dc <grub_rescue_parse_line+0x22c>  // b.pmore
    a4a4:	cmp	w19, #0xfe
    a4a8:	b.gt	a4d4 <grub_rescue_parse_line+0x224>
    a4ac:	and	w1, w0, #0xff
    a4b0:	strb	w1, [x20, w19, sxtw]
    a4b4:	ldr	x0, [x22]
    a4b8:	strb	w1, [sp, #72]
    a4bc:	strb	wzr, [sp, #73]
    a4c0:	add	w24, w19, #0x1
    a4c4:	mov	w19, w24
    a4c8:	ldr	x1, [x0]
    a4cc:	add	x0, sp, #0x48
    a4d0:	blr	x1
    a4d4:	bl	a740 <grub_refresh>
    a4d8:	b	a444 <grub_rescue_parse_line+0x194>
    a4dc:	cmp	w0, #0x8
    a4e0:	b.ne	a4d4 <grub_rescue_parse_line+0x224>  // b.any
    a4e4:	cbz	w19, a4d4 <grub_rescue_parse_line+0x224>
    a4e8:	ldr	x0, [x22]
    a4ec:	sub	w19, w19, #0x1
    a4f0:	str	w23, [sp, #72]
    a4f4:	ldr	x1, [x0]
    a4f8:	strb	wzr, [x20, w19, sxtw]
    a4fc:	add	x0, sp, #0x48
    a500:	blr	x1
    a504:	b	a4d4 <grub_rescue_parse_line+0x224>
	...

000000000000a530 <grub_rescue_run>:
    a530:	stp	x29, x30, [sp, #-48]!
    a534:	adrp	x0, 0 <_start>
    a538:	mov	x29, sp
    a53c:	ldr	x0, [x0]
    a540:	stp	x19, x20, [sp, #16]
    a544:	adrp	x20, 0 <_start>
    a548:	adrp	x19, 0 <_start>
    a54c:	bl	94b0 <grub_err_printf>
    a550:	bl	74d8 <grub_print_error>
    a554:	ldr	x0, [x20]
    a558:	mov	x2, #0x0                   	// #0
    a55c:	mov	w1, #0x0                   	// #0
    a560:	str	wzr, [x0]
    a564:	add	x0, sp, #0x28
    a568:	bl	a3e8 <grub_rescue_parse_line+0x138>
    a56c:	ldr	x0, [sp, #40]
    a570:	cbz	x0, a550 <grub_rescue_run+0x20>
    a574:	ldrb	w1, [x0]
    a578:	cbz	w1, a550 <grub_rescue_run+0x20>
    a57c:	ldr	x1, [x19]
    a580:	mov	x2, #0x0                   	// #0
    a584:	bl	a2b0 <grub_rescue_parse_line>
    a588:	ldr	x0, [sp, #40]
    a58c:	bl	4844 <grub_free>
    a590:	b	a550 <grub_rescue_run+0x20>
    a594:	nop
	...
    a5b0:	stp	x29, x30, [sp, #-64]!
    a5b4:	mov	x29, sp
    a5b8:	stp	x19, x20, [sp, #16]
    a5bc:	mov	w20, w0
    a5c0:	mov	w0, #0x0                   	// #0
    a5c4:	bfxil	w0, w20, #0, #23
    a5c8:	stp	xzr, xzr, [sp, #32]
    a5cc:	mov	x19, x1
    a5d0:	str	w0, [sp, #32]
    a5d4:	mov	w0, #0x1                   	// #1
    a5d8:	strb	w0, [sp, #40]
    a5dc:	cmp	w20, #0x9
    a5e0:	stp	xzr, xzr, [sp, #48]
    a5e4:	b.ne	a62c <grub_rescue_run+0xfc>  // b.any
    a5e8:	ldr	x1, [x1, #64]
    a5ec:	cbz	x1, a62c <grub_rescue_run+0xfc>
    a5f0:	mov	x0, x19
    a5f4:	blr	x1
    a5f8:	and	w0, w0, #0x7
    a5fc:	mov	w20, #0x8                   	// #8
    a600:	sub	w20, w20, w0
    a604:	sub	w20, w20, #0x1
    a608:	cmn	w20, #0x1
    a60c:	b.ne	a61c <grub_rescue_run+0xec>  // b.any
    a610:	ldp	x19, x20, [sp, #16]
    a614:	ldp	x29, x30, [sp], #64
    a618:	ret
    a61c:	mov	x1, x19
    a620:	mov	w0, #0x20                  	// #32
    a624:	bl	a5b0 <grub_rescue_run+0x80>
    a628:	b	a604 <grub_rescue_run+0xd4>
    a62c:	ldr	x2, [x19, #40]
    a630:	add	x1, sp, #0x20
    a634:	mov	x0, x19
    a638:	blr	x2
    a63c:	cmp	w20, #0xa
    a640:	b.ne	a610 <grub_rescue_run+0xe0>  // b.any
    a644:	mov	x1, x19
    a648:	mov	w0, #0xd                   	// #13
    a64c:	bl	a5b0 <grub_rescue_run+0x80>
    a650:	b	a610 <grub_rescue_run+0xe0>
    a654:	stp	x29, x30, [sp, #-64]!
    a658:	mov	x29, sp
    a65c:	stp	x19, x20, [sp, #16]
    a660:	mov	x20, x0
    a664:	stp	x21, x22, [sp, #32]
    a668:	mov	w22, #0x3f                  	// #63
    a66c:	str	x23, [sp, #48]
    a670:	adrp	x23, 0 <_start>
    a674:	ldrb	w1, [x20]
    a678:	cbnz	w1, a690 <grub_rescue_run+0x160>
    a67c:	ldp	x19, x20, [sp, #16]
    a680:	ldp	x21, x22, [sp, #32]
    a684:	ldr	x23, [sp, #48]
    a688:	ldp	x29, x30, [sp], #64
    a68c:	ret
    a690:	ldr	x0, [x23]
    a694:	cmp	w1, #0x80
    a698:	csel	w19, w1, w22, cc  // cc = lo, ul, last
    a69c:	ldr	x21, [x0]
    a6a0:	cbnz	x21, a6ac <grub_rescue_run+0x17c>
    a6a4:	add	x20, x20, #0x1
    a6a8:	b	a674 <grub_rescue_run+0x144>
    a6ac:	mov	x1, x21
    a6b0:	mov	w0, w19
    a6b4:	bl	a5b0 <grub_rescue_run+0x80>
    a6b8:	ldr	x21, [x21]
    a6bc:	b	a6a0 <grub_rescue_run+0x170>
	...

000000000000a6c8 <grub_getkey_noblock>:
    a6c8:	stp	x29, x30, [sp, #-32]!
    a6cc:	adrp	x0, 0 <_start>
    a6d0:	mov	x29, sp
    a6d4:	str	x19, [sp, #16]
    a6d8:	ldr	x19, [x0]
    a6dc:	ldr	x1, [x19]
    a6e0:	cbz	x1, a6ec <grub_getkey_noblock+0x24>
    a6e4:	mov	w0, #0x0                   	// #0
    a6e8:	blr	x1
    a6ec:	ldr	x0, [x19, #8]
    a6f0:	cbz	x0, a6f8 <grub_getkey_noblock+0x30>
    a6f4:	blr	x0
    a6f8:	adrp	x0, 0 <_start>
    a6fc:	ldr	x0, [x0]
    a700:	ldr	x19, [x0]
    a704:	cbnz	x19, a718 <grub_getkey_noblock+0x50>
    a708:	mov	w0, #0x0                   	// #0
    a70c:	ldr	x19, [sp, #16]
    a710:	ldp	x29, x30, [sp], #32
    a714:	ret
    a718:	ldr	x1, [x19, #40]
    a71c:	mov	x0, x19
    a720:	blr	x1
    a724:	cbnz	w0, a70c <grub_getkey_noblock+0x44>
    a728:	ldr	x19, [x19]
    a72c:	b	a704 <grub_getkey_noblock+0x3c>
	...

000000000000a740 <grub_refresh>:
    a740:	stp	x29, x30, [sp, #-32]!
    a744:	adrp	x0, 0 <_start>
    a748:	mov	x29, sp
    a74c:	ldr	x0, [x0]
    a750:	str	x19, [sp, #16]
    a754:	ldr	x19, [x0]
    a758:	cbnz	x19, a768 <grub_refresh+0x28>
    a75c:	ldr	x19, [sp, #16]
    a760:	ldp	x29, x30, [sp], #32
    a764:	ret
    a768:	ldr	x1, [x19, #104]
    a76c:	cbz	x1, a778 <grub_refresh+0x38>
    a770:	mov	x0, x19
    a774:	blr	x1
    a778:	ldr	x19, [x19]
    a77c:	b	a758 <grub_refresh+0x18>
	...

000000000000a788 <grub_getkey>:
    a788:	stp	x29, x30, [sp, #-16]!
    a78c:	mov	x29, sp
    a790:	bl	a740 <grub_refresh>
    a794:	bl	a6c8 <grub_getkey_noblock>
    a798:	cbz	w0, a794 <grub_getkey+0xc>
    a79c:	ldp	x29, x30, [sp], #16
    a7a0:	ret
    a7a4:	nop

000000000000a7a8 <grub_register_exported_symbols>:
    a7a8:	stp	x29, x30, [sp, #-32]!
    a7ac:	adrp	x0, 0 <_start>
    a7b0:	mov	x29, sp
    a7b4:	str	x19, [sp, #16]
    a7b8:	ldr	x19, [x0]
    a7bc:	ldr	x0, [x19]
    a7c0:	cbnz	x0, a7d0 <grub_register_exported_symbols+0x28>
    a7c4:	ldr	x19, [sp, #16]
    a7c8:	ldp	x29, x30, [sp], #32
    a7cc:	ret
    a7d0:	ldr	w2, [x19, #16]
    a7d4:	mov	x3, #0x0                   	// #0
    a7d8:	ldr	x1, [x19, #8]
    a7dc:	add	x19, x19, #0x18
    a7e0:	bl	61b0 <grub_dl_register_symbol>
    a7e4:	b	a7bc <grub_register_exported_symbols+0x14>
	...
