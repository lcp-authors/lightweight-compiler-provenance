
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//iso9660.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_iso9660_close>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	ldr	x19, [x0, #80]
      10:	ldr	x0, [x19, #872]
      14:	bl	0 <grub_free>
      18:	mov	x0, x19
      1c:	bl	0 <grub_free>
      20:	adrp	x0, 0 <grub_iso9660_close>
      24:	ldr	x0, [x0]
      28:	ldr	x0, [x0]
      2c:	bl	0 <grub_dl_unref>
      30:	mov	w0, #0x0                   	// #0
      34:	ldr	x19, [sp, #16]
      38:	ldp	x29, x30, [sp], #32
      3c:	ret
	...

0000000000000048 <read_node>:
      48:	stp	x29, x30, [sp, #-64]!
      4c:	mov	x29, sp
      50:	stp	x19, x20, [sp, #16]
      54:	stp	x21, x22, [sp, #32]
      58:	stp	x23, x24, [sp, #48]
      5c:	mov	x23, x0
      60:	mov	x20, x1
      64:	mov	x22, x2
      68:	mov	x24, x3
      6c:	mov	x19, #0x0                   	// #0
      70:	mov	w0, #0x0                   	// #0
      74:	cbnz	x2, cc <read_node+0x84>
      78:	b	110 <read_node+0xc8>
      7c:	cmp	x5, x19
      80:	b.eq	100 <read_node+0xb8>  // b.none
      84:	add	x0, x19, x19, lsl #5
      88:	add	x0, x23, x0
      8c:	ldur	w21, [x0, #38]
      90:	cmp	x21, x22
      94:	csel	x21, x21, x22, ls  // ls = plast
      98:	ldur	w1, [x0, #30]
      9c:	ldr	x0, [x23]
      a0:	mov	x4, x24
      a4:	mov	x3, x21
      a8:	mov	x2, x20
      ac:	lsl	x1, x1, #2
      b0:	ldr	x0, [x0, #848]
      b4:	bl	0 <grub_disk_read>
      b8:	cbnz	w0, 110 <read_node+0xc8>
      bc:	add	x20, x20, x21
      c0:	add	x24, x24, x21
      c4:	subs	x22, x22, x21
      c8:	b.eq	110 <read_node+0xc8>  // b.none
      cc:	ldr	x5, [x23, #8]
      d0:	cmp	x5, x19
      d4:	b.ls	7c <read_node+0x34>  // b.plast
      d8:	add	x1, x19, x19, lsl #5
      dc:	add	x1, x23, x1
      e0:	ldur	w4, [x1, #38]
      e4:	cmp	x4, x20
      e8:	b.hi	7c <read_node+0x34>  // b.pmore
      ec:	sub	x20, x20, x4
      f0:	add	x19, x19, #0x1
      f4:	add	x1, x1, #0x21
      f8:	cmp	x19, x5
      fc:	b.ne	e0 <read_node+0x98>  // b.any
     100:	adrp	x0, 0 <grub_iso9660_close>
     104:	ldr	x1, [x0]
     108:	mov	w0, #0xb                   	// #11
     10c:	bl	0 <grub_error>
     110:	ldp	x19, x20, [sp, #16]
     114:	ldp	x21, x22, [sp, #32]
     118:	ldp	x23, x24, [sp, #48]
     11c:	ldp	x29, x30, [sp], #64
     120:	ret
     124:	nop
	...

0000000000000130 <grub_iso9660_read>:
     130:	stp	x29, x30, [sp, #-32]!
     134:	mov	x29, sp
     138:	stp	x19, x20, [sp, #16]
     13c:	mov	x20, x2
     140:	ldr	x19, [x0, #80]
     144:	ldr	x3, [x19, #848]
     148:	ldr	x4, [x0, #88]
     14c:	str	x4, [x3, #48]
     150:	ldr	x3, [x19, #848]
     154:	ldr	x4, [x0, #96]
     158:	str	x4, [x3, #56]
     15c:	mov	x3, x1
     160:	ldr	x1, [x0, #24]
     164:	ldr	x0, [x19, #872]
     168:	bl	48 <read_node>
     16c:	ldr	x1, [x19, #848]
     170:	str	xzr, [x1, #48]
     174:	adrp	x1, 0 <grub_iso9660_close>
     178:	ldr	x1, [x1]
     17c:	ldr	w1, [x1]
     180:	orr	w0, w0, w1
     184:	cmp	w0, #0x0
     188:	csinv	x0, x20, xzr, eq  // eq = none
     18c:	ldp	x19, x20, [sp, #16]
     190:	ldp	x29, x30, [sp], #32
     194:	ret
	...

00000000000001a0 <susp_iterate_set_rockridge>:
     1a0:	stp	x29, x30, [sp, #-32]!
     1a4:	mov	x29, sp
     1a8:	str	x19, [sp, #16]
     1ac:	mov	x19, x1
     1b0:	mov	x2, #0x2                   	// #2
     1b4:	adrp	x1, 0 <grub_iso9660_close>
     1b8:	ldr	x1, [x1]
     1bc:	bl	0 <grub_strncmp>
     1c0:	cbz	w0, 1d4 <susp_iterate_set_rockridge+0x34>
     1c4:	mov	w0, #0x0                   	// #0
     1c8:	ldr	x19, [sp, #16]
     1cc:	ldp	x29, x30, [sp], #32
     1d0:	ret
     1d4:	mov	w0, #0x1                   	// #1
     1d8:	str	w0, [x19, #856]
     1dc:	b	1c8 <susp_iterate_set_rockridge+0x28>
	...

00000000000001e8 <grub_iso9660_susp_iterate>:
     1e8:	stp	x29, x30, [sp, #-112]!
     1ec:	mov	x29, sp
     1f0:	cmp	x2, #0x0
     1f4:	b.le	3b4 <grub_iso9660_susp_iterate+0x1cc>
     1f8:	stp	x19, x20, [sp, #16]
     1fc:	stp	x21, x22, [sp, #32]
     200:	stp	x23, x24, [sp, #48]
     204:	stp	x25, x26, [sp, #64]
     208:	mov	x25, x0
     20c:	mov	x19, x1
     210:	mov	x21, x2
     214:	mov	x23, x3
     218:	mov	x24, x4
     21c:	mov	x0, x2
     220:	bl	0 <grub_malloc>
     224:	mov	x20, x0
     228:	cbz	x0, 270 <grub_iso9660_susp_iterate+0x88>
     22c:	mov	x3, x0
     230:	mov	x2, x21
     234:	mov	x1, x19
     238:	mov	x0, x25
     23c:	bl	48 <read_node>
     240:	str	w0, [sp, #108]
     244:	cbnz	w0, 3e0 <grub_iso9660_susp_iterate+0x1f8>
     248:	sub	x22, x21, #0x1
     24c:	add	x22, x20, x22
     250:	mov	x19, x20
     254:	cmp	x20, x22
     258:	b.cs	388 <grub_iso9660_susp_iterate+0x1a0>  // b.hs, b.nlast
     25c:	stp	x27, x28, [sp, #80]
     260:	adrp	x27, 0 <grub_iso9660_close>
     264:	mov	x22, #0x2                   	// #2
     268:	adrp	x28, 0 <grub_iso9660_close>
     26c:	b	2e4 <grub_iso9660_susp_iterate+0xfc>
     270:	adrp	x0, 0 <grub_iso9660_close>
     274:	ldr	x0, [x0]
     278:	ldr	w0, [x0]
     27c:	str	w0, [sp, #108]
     280:	ldp	x19, x20, [sp, #16]
     284:	ldp	x21, x22, [sp, #32]
     288:	ldp	x23, x24, [sp, #48]
     28c:	ldp	x25, x26, [sp, #64]
     290:	b	3b8 <grub_iso9660_susp_iterate+0x1d0>
     294:	adrp	x0, 0 <grub_iso9660_close>
     298:	ldr	x0, [x0]
     29c:	ldr	w0, [x0]
     2a0:	str	w0, [sp, #108]
     2a4:	ldp	x19, x20, [sp, #16]
     2a8:	ldp	x21, x22, [sp, #32]
     2ac:	ldp	x23, x24, [sp, #48]
     2b0:	ldp	x25, x26, [sp, #64]
     2b4:	ldp	x27, x28, [sp, #80]
     2b8:	b	3b8 <grub_iso9660_susp_iterate+0x1d0>
     2bc:	mov	x1, x24
     2c0:	mov	x0, x19
     2c4:	blr	x23
     2c8:	cbnz	w0, 364 <grub_iso9660_susp_iterate+0x17c>
     2cc:	ldrb	w0, [x19, #2]
     2d0:	add	x19, x19, x0
     2d4:	sub	x0, x21, #0x1
     2d8:	add	x0, x20, x0
     2dc:	cmp	x19, x0
     2e0:	b.cs	3ac <grub_iso9660_susp_iterate+0x1c4>  // b.hs, b.nlast
     2e4:	ldrb	w0, [x19, #2]
     2e8:	cbz	w0, 384 <grub_iso9660_susp_iterate+0x19c>
     2ec:	mov	x2, x22
     2f0:	ldr	x1, [x27]
     2f4:	mov	x0, x19
     2f8:	bl	0 <grub_strncmp>
     2fc:	cbz	w0, 3a4 <grub_iso9660_susp_iterate+0x1bc>
     300:	mov	x2, x22
     304:	ldr	x1, [x28]
     308:	mov	x0, x19
     30c:	bl	0 <grub_strncmp>
     310:	cbnz	w0, 2bc <grub_iso9660_susp_iterate+0xd4>
     314:	ldr	w21, [x19, #20]
     318:	ldr	w26, [x19, #12]
     31c:	ldr	w19, [x19, #4]
     320:	lsl	w19, w19, #2
     324:	mov	x0, x20
     328:	bl	0 <grub_free>
     32c:	mov	x0, x21
     330:	bl	0 <grub_malloc>
     334:	mov	x20, x0
     338:	cbz	x0, 294 <grub_iso9660_susp_iterate+0xac>
     33c:	ldr	x0, [x25]
     340:	mov	x4, x20
     344:	mov	x3, x21
     348:	mov	x2, x26
     34c:	mov	x1, x19
     350:	ldr	x0, [x0, #848]
     354:	bl	0 <grub_disk_read>
     358:	cbnz	w0, 3c4 <grub_iso9660_susp_iterate+0x1dc>
     35c:	mov	x19, x20
     360:	b	2bc <grub_iso9660_susp_iterate+0xd4>
     364:	mov	x0, x20
     368:	bl	0 <grub_free>
     36c:	ldp	x19, x20, [sp, #16]
     370:	ldp	x21, x22, [sp, #32]
     374:	ldp	x23, x24, [sp, #48]
     378:	ldp	x25, x26, [sp, #64]
     37c:	ldp	x27, x28, [sp, #80]
     380:	b	3b8 <grub_iso9660_susp_iterate+0x1d0>
     384:	ldp	x27, x28, [sp, #80]
     388:	mov	x0, x20
     38c:	bl	0 <grub_free>
     390:	ldp	x19, x20, [sp, #16]
     394:	ldp	x21, x22, [sp, #32]
     398:	ldp	x23, x24, [sp, #48]
     39c:	ldp	x25, x26, [sp, #64]
     3a0:	b	3b8 <grub_iso9660_susp_iterate+0x1d0>
     3a4:	ldp	x27, x28, [sp, #80]
     3a8:	b	388 <grub_iso9660_susp_iterate+0x1a0>
     3ac:	ldp	x27, x28, [sp, #80]
     3b0:	b	388 <grub_iso9660_susp_iterate+0x1a0>
     3b4:	str	wzr, [sp, #108]
     3b8:	ldr	w0, [sp, #108]
     3bc:	ldp	x29, x30, [sp], #112
     3c0:	ret
     3c4:	str	w0, [sp, #108]
     3c8:	ldp	x19, x20, [sp, #16]
     3cc:	ldp	x21, x22, [sp, #32]
     3d0:	ldp	x23, x24, [sp, #48]
     3d4:	ldp	x25, x26, [sp, #64]
     3d8:	ldp	x27, x28, [sp, #80]
     3dc:	b	3b8 <grub_iso9660_susp_iterate+0x1d0>
     3e0:	ldp	x19, x20, [sp, #16]
     3e4:	ldp	x21, x22, [sp, #32]
     3e8:	ldp	x23, x24, [sp, #48]
     3ec:	ldp	x25, x26, [sp, #64]
     3f0:	b	3b8 <grub_iso9660_susp_iterate+0x1d0>
     3f4:	nop
	...

0000000000000410 <grub_iso9660_mount>:
     410:	sub	sp, sp, #0x500
     414:	stp	x29, x30, [sp]
     418:	mov	x29, sp
     41c:	stp	x19, x20, [sp, #16]
     420:	stp	x21, x22, [sp, #32]
     424:	mov	x21, x0
     428:	mov	x0, #0x370                 	// #880
     42c:	bl	0 <grub_zalloc>
     430:	mov	x20, x0
     434:	cbz	x0, 478 <grub_iso9660_mount+0x68>
     438:	stp	x23, x24, [sp, #48]
     43c:	stp	x25, x26, [sp, #64]
     440:	str	x21, [x0, #848]
     444:	mov	w19, #0x40                  	// #64
     448:	mov	x22, #0x34f                 	// #847
     44c:	add	x23, sp, #0x1b1
     450:	b	504 <grub_iso9660_mount+0xf4>
     454:	adrp	x0, 0 <grub_iso9660_close>
     458:	ldr	x1, [x0]
     45c:	mov	w0, #0x9                   	// #9
     460:	bl	0 <grub_error>
     464:	mov	x0, x20
     468:	bl	0 <grub_free>
     46c:	mov	x20, #0x0                   	// #0
     470:	ldp	x23, x24, [sp, #48]
     474:	ldp	x25, x26, [sp, #64]
     478:	mov	x0, x20
     47c:	ldp	x19, x20, [sp, #16]
     480:	ldp	x21, x22, [sp, #32]
     484:	ldp	x29, x30, [sp]
     488:	add	sp, sp, #0x500
     48c:	ret
     490:	adrp	x0, 0 <grub_iso9660_close>
     494:	ldr	x1, [x0]
     498:	mov	w0, #0x9                   	// #9
     49c:	bl	0 <grub_error>
     4a0:	b	464 <grub_iso9660_mount+0x54>
     4a4:	mov	x2, x22
     4a8:	add	x1, sp, #0x1b0
     4ac:	mov	x0, x20
     4b0:	bl	0 <grub_memmove>
     4b4:	str	wzr, [x20, #856]
     4b8:	ldur	w1, [x20, #158]
     4bc:	add	x4, sp, #0x60
     4c0:	mov	x3, #0x21                  	// #33
     4c4:	mov	x2, #0x0                   	// #0
     4c8:	lsl	w1, w1, #2
     4cc:	ldr	x0, [x20, #848]
     4d0:	bl	0 <grub_disk_read>
     4d4:	cbnz	w0, 594 <grub_iso9660_mount+0x184>
     4d8:	ldrb	w24, [sp, #128]
     4dc:	add	w24, w24, #0x1
     4e0:	and	w24, w24, #0xfffffffe
     4e4:	add	w24, w24, #0x20
     4e8:	ldrb	w0, [sp, #96]
     4ec:	subs	w25, w0, w24
     4f0:	b.ne	5ac <grub_iso9660_mount+0x19c>  // b.any
     4f4:	ldrb	w1, [sp, #432]
     4f8:	cmp	w1, #0xff
     4fc:	b.eq	6c0 <grub_iso9660_mount+0x2b0>  // b.none
     500:	add	w19, w19, #0x4
     504:	add	x4, sp, #0x1b0
     508:	mov	x3, x22
     50c:	mov	x2, #0x0                   	// #0
     510:	sxtw	x1, w19
     514:	mov	x0, x21
     518:	bl	0 <grub_disk_read>
     51c:	cbnz	w0, 454 <grub_iso9660_mount+0x44>
     520:	mov	x2, #0x5                   	// #5
     524:	adrp	x1, 0 <grub_iso9660_close>
     528:	ldr	x1, [x1]
     52c:	mov	x0, x23
     530:	bl	0 <grub_strncmp>
     534:	cbnz	w0, 490 <grub_iso9660_mount+0x80>
     538:	ldrb	w1, [sp, #432]
     53c:	cmp	w1, #0x1
     540:	b.eq	4a4 <grub_iso9660_mount+0x94>  // b.none
     544:	ldr	w0, [x20, #856]
     548:	cmp	w0, #0x0
     54c:	ccmp	w1, #0x2, #0x0, eq  // eq = none
     550:	b.ne	4f4 <grub_iso9660_mount+0xe4>  // b.any
     554:	ldrb	w0, [sp, #520]
     558:	cmp	w0, #0x25
     55c:	b.ne	500 <grub_iso9660_mount+0xf0>  // b.any
     560:	ldrb	w0, [sp, #521]
     564:	cmp	w0, #0x2f
     568:	b.ne	500 <grub_iso9660_mount+0xf0>  // b.any
     56c:	ldrb	w1, [sp, #522]
     570:	sub	w0, w1, #0x43
     574:	and	w0, w0, #0xfffffffd
     578:	and	w0, w0, #0xff
     57c:	cmp	w1, #0x40
     580:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     584:	b.ne	500 <grub_iso9660_mount+0xf0>  // b.any
     588:	mov	w0, #0x1                   	// #1
     58c:	str	w0, [x20, #864]
     590:	b	4a4 <grub_iso9660_mount+0x94>
     594:	adrp	x0, 0 <grub_iso9660_close>
     598:	ldr	x1, [x0]
     59c:	mov	w0, #0x9                   	// #9
     5a0:	bl	0 <grub_error>
     5a4:	cbz	w0, 4f4 <grub_iso9660_mount+0xe4>
     5a8:	b	464 <grub_iso9660_mount+0x54>
     5ac:	str	x27, [sp, #80]
     5b0:	sxtw	x27, w25
     5b4:	mov	x0, x27
     5b8:	bl	0 <grub_malloc>
     5bc:	mov	x26, x0
     5c0:	cbz	x0, 670 <grub_iso9660_mount+0x260>
     5c4:	sxtw	x24, w24
     5c8:	ldur	w1, [x20, #158]
     5cc:	mov	x4, x0
     5d0:	mov	x3, x27
     5d4:	mov	x2, x24
     5d8:	lsl	w1, w1, #2
     5dc:	ldr	x0, [x20, #848]
     5e0:	bl	0 <grub_disk_read>
     5e4:	cbnz	w0, 684 <grub_iso9660_mount+0x274>
     5e8:	mov	x2, #0x2                   	// #2
     5ec:	adrp	x0, 0 <grub_iso9660_close>
     5f0:	ldr	x1, [x0]
     5f4:	mov	x0, x26
     5f8:	bl	0 <grub_strncmp>
     5fc:	cbnz	w0, 660 <grub_iso9660_mount+0x250>
     600:	str	x20, [sp, #136]
     604:	mov	x0, #0x8                   	// #8
     608:	str	x0, [sp, #152]
     60c:	mov	x0, #0x1                   	// #1
     610:	str	x0, [sp, #144]
     614:	str	wzr, [sp, #160]
     618:	add	x0, x20, #0x9c
     61c:	ldp	x2, x3, [x0]
     620:	add	x1, sp, #0x4
     624:	stp	x2, x3, [x1, #160]
     628:	ldp	x2, x3, [x0, #16]
     62c:	stp	x2, x3, [x1, #176]
     630:	ldrb	w0, [x20, #188]
     634:	strb	w0, [sp, #196]
     638:	ldrb	w0, [x26, #6]
     63c:	str	w0, [x20, #860]
     640:	mov	x4, x20
     644:	adrp	x0, 0 <grub_iso9660_close>
     648:	ldr	x3, [x0]
     64c:	sxtw	x2, w25
     650:	mov	x1, x24
     654:	add	x0, sp, #0x88
     658:	bl	1e8 <grub_iso9660_susp_iterate>
     65c:	cbnz	w0, 6a4 <grub_iso9660_mount+0x294>
     660:	mov	x0, x26
     664:	bl	0 <grub_free>
     668:	ldr	x27, [sp, #80]
     66c:	b	4f4 <grub_iso9660_mount+0xe4>
     670:	adrp	x0, 0 <grub_iso9660_close>
     674:	ldr	x0, [x0]
     678:	ldr	w0, [x0]
     67c:	ldr	x27, [sp, #80]
     680:	b	5a4 <grub_iso9660_mount+0x194>
     684:	mov	x0, x26
     688:	bl	0 <grub_free>
     68c:	adrp	x0, 0 <grub_iso9660_close>
     690:	ldr	x1, [x0]
     694:	mov	w0, #0x9                   	// #9
     698:	bl	0 <grub_error>
     69c:	ldr	x27, [sp, #80]
     6a0:	b	5a4 <grub_iso9660_mount+0x194>
     6a4:	mov	x0, x26
     6a8:	bl	0 <grub_free>
     6ac:	adrp	x0, 0 <grub_iso9660_close>
     6b0:	ldr	x0, [x0]
     6b4:	ldr	w0, [x0]
     6b8:	ldr	x27, [sp, #80]
     6bc:	b	5a4 <grub_iso9660_mount+0x194>
     6c0:	ldp	x23, x24, [sp, #48]
     6c4:	ldp	x25, x26, [sp, #64]
     6c8:	b	478 <grub_iso9660_mount+0x68>
     6cc:	nop
	...

00000000000006f8 <grub_iso9660_mtime>:
     6f8:	stp	x29, x30, [sp, #-80]!
     6fc:	mov	x29, sp
     700:	stp	x19, x20, [sp, #16]
     704:	mov	x20, x1
     708:	ldr	x19, [x0]
     70c:	adrp	x0, 0 <grub_iso9660_close>
     710:	ldr	x0, [x0]
     714:	ldr	x0, [x0]
     718:	bl	0 <grub_dl_ref>
     71c:	mov	x0, x19
     720:	bl	410 <grub_iso9660_mount>
     724:	cbz	x0, 9fc <grub_iso9660_mtime+0x304>
     728:	mov	x19, x0
     72c:	ldrb	w2, [x0, #830]
     730:	cbnz	w2, 7ac <grub_iso9660_mtime+0xb4>
     734:	ldrb	w0, [x0, #831]
     738:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     73c:	ldrb	w0, [x19, #832]
     740:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     744:	ldrb	w0, [x19, #833]
     748:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     74c:	ldrb	w0, [x19, #834]
     750:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     754:	ldrb	w0, [x19, #835]
     758:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     75c:	ldrb	w0, [x19, #836]
     760:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     764:	ldrb	w0, [x19, #837]
     768:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     76c:	ldrb	w0, [x19, #838]
     770:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     774:	ldrb	w0, [x19, #839]
     778:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     77c:	ldrb	w0, [x19, #840]
     780:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     784:	ldrb	w0, [x19, #841]
     788:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     78c:	ldrb	w0, [x19, #842]
     790:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     794:	ldrb	w0, [x19, #843]
     798:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     79c:	ldrb	w0, [x19, #844]
     7a0:	cbnz	w0, 7ac <grub_iso9660_mtime+0xb4>
     7a4:	ldrb	w0, [x19, #845]
     7a8:	cbz	w0, a1c <grub_iso9660_mtime+0x324>
     7ac:	ldrb	w0, [x19, #831]
     7b0:	sub	w0, w0, #0x30
     7b4:	sub	w2, w2, #0x30
     7b8:	mov	w1, #0x3e8                 	// #1000
     7bc:	mul	w2, w2, w1
     7c0:	mov	w1, #0x64                  	// #100
     7c4:	madd	w1, w0, w1, w2
     7c8:	ldrb	w0, [x19, #833]
     7cc:	sub	w3, w0, #0x30
     7d0:	ldrb	w2, [x19, #832]
     7d4:	sub	w0, w2, #0x30
     7d8:	ubfiz	w2, w0, #2, #14
     7dc:	add	w0, w0, w2
     7e0:	add	w0, w1, w0, lsl #1
     7e4:	add	w0, w0, w3
     7e8:	and	w0, w0, #0xffff
     7ec:	ldrb	w2, [x19, #834]
     7f0:	ldrb	w1, [x19, #835]
     7f4:	ldrb	w13, [x19, #836]
     7f8:	ldrb	w3, [x19, #837]
     7fc:	ldrb	w9, [x19, #838]
     800:	ldrb	w8, [x19, #839]
     804:	ldrb	w11, [x19, #840]
     808:	ldrb	w10, [x19, #841]
     80c:	ldrb	w12, [x19, #842]
     810:	ldrb	w5, [x19, #843]
     814:	adrp	x4, 0 <grub_iso9660_close>
     818:	ldr	x4, [x4]
     81c:	ldp	x6, x7, [x4]
     820:	stp	x6, x7, [sp, #56]
     824:	ldr	x4, [x4, #16]
     828:	str	x4, [sp, #72]
     82c:	adrp	x4, 0 <grub_iso9660_close>
     830:	ldr	x4, [x4]
     834:	ldr	x6, [x4]
     838:	str	x6, [sp, #40]
     83c:	ldr	w4, [x4, #8]
     840:	str	w4, [sp, #48]
     844:	sub	w4, w0, #0x76d
     848:	and	w4, w4, #0xffff
     84c:	cmp	w4, #0x89
     850:	b.hi	a4c <grub_iso9660_mtime+0x354>  // b.pmore
     854:	ubfiz	w4, w2, #2, #6
     858:	add	w2, w2, w4
     85c:	ubfiz	w2, w2, #1, #7
     860:	sub	w1, w1, #0x10
     864:	add	w1, w1, w2
     868:	and	w1, w1, #0xff
     86c:	sub	w2, w1, #0x1
     870:	and	w2, w2, #0xff
     874:	cmp	w2, #0xb
     878:	b.hi	a4c <grub_iso9660_mtime+0x354>  // b.pmore
     87c:	ubfiz	w4, w13, #2, #6
     880:	add	w4, w13, w4
     884:	ubfiz	w4, w4, #1, #7
     888:	sub	w2, w3, #0x10
     88c:	add	w2, w2, w4
     890:	and	w2, w2, #0xff
     894:	sub	w3, w0, #0x1
     898:	asr	w3, w3, #2
     89c:	sub	w3, w3, #0x1ed
     8a0:	sub	w4, w0, #0x7b5
     8a4:	sub	w4, w4, w3, lsl #2
     8a8:	mov	w7, #0x1f80                	// #8064
     8ac:	movk	w7, #0x786, lsl #16
     8b0:	mov	w6, #0xec00                	// #60416
     8b4:	movk	w6, #0x5a4, lsl #16
     8b8:	madd	w3, w3, w7, w6
     8bc:	mov	w6, #0x3380                	// #13184
     8c0:	movk	w6, #0x1e1, lsl #16
     8c4:	madd	w6, w4, w6, w3
     8c8:	sub	w7, w1, #0x1
     8cc:	add	x3, sp, #0x38
     8d0:	ldrh	w3, [x3, w7, sxtw #1]
     8d4:	mov	w13, #0x5180                	// #20864
     8d8:	movk	w13, #0x1, lsl #16
     8dc:	madd	w3, w3, w13, w6
     8e0:	cmp	w1, #0x2
     8e4:	ccmp	w4, #0x3, #0x0, hi  // hi = pmore
     8e8:	b.eq	a34 <grub_iso9660_mtime+0x33c>  // b.none
     8ec:	sub	w6, w2, #0x1
     8f0:	mov	w13, #0x5180                	// #20864
     8f4:	movk	w13, #0x1, lsl #16
     8f8:	madd	w3, w6, w13, w3
     8fc:	add	x6, sp, #0x28
     900:	ldrb	w6, [x6, w7, sxtw]
     904:	cmp	w6, w2
     908:	b.cs	928 <grub_iso9660_mtime+0x230>  // b.hs, b.nlast
     90c:	cbz	w4, a4c <grub_iso9660_mtime+0x354>
     910:	mov	x4, #0x0                   	// #0
     914:	bfi	x4, x1, #16, #8
     918:	bfi	x4, x2, #24, #8
     91c:	mov	w1, #0x1d02                	// #7426
     920:	cmp	w1, w4, lsr #16
     924:	b.ne	a4c <grub_iso9660_mtime+0x354>  // b.any
     928:	cbz	w2, a4c <grub_iso9660_mtime+0x354>
     92c:	ubfiz	w1, w9, #2, #6
     930:	add	w9, w9, w1
     934:	ubfiz	w9, w9, #1, #7
     938:	sub	w8, w8, #0x10
     93c:	add	w8, w8, w9
     940:	and	w8, w8, #0xff
     944:	cmp	w8, #0x17
     948:	b.hi	a4c <grub_iso9660_mtime+0x354>  // b.pmore
     94c:	ubfiz	w2, w11, #2, #6
     950:	add	w11, w11, w2
     954:	ubfiz	w11, w11, #1, #7
     958:	sub	w2, w10, #0x10
     95c:	add	w2, w2, w11
     960:	and	w2, w2, #0xff
     964:	cmp	w2, #0x3b
     968:	b.hi	a4c <grub_iso9660_mtime+0x354>  // b.pmore
     96c:	ubfiz	w1, w12, #2, #6
     970:	add	w12, w12, w1
     974:	ubfiz	w12, w12, #1, #7
     978:	sub	w1, w5, #0x10
     97c:	add	w1, w1, w12
     980:	and	w1, w1, #0xff
     984:	cmp	w1, #0x3c
     988:	b.hi	a4c <grub_iso9660_mtime+0x354>  // b.pmore
     98c:	mov	w4, #0xe10                 	// #3600
     990:	madd	w8, w8, w4, w3
     994:	lsl	w3, w2, #4
     998:	sub	w2, w3, w2
     99c:	add	w8, w8, w2, lsl #2
     9a0:	add	w1, w1, w8
     9a4:	cmp	w0, #0x7bc
     9a8:	ccmp	w1, #0x0, #0x0, hi  // hi = pmore
     9ac:	b.lt	a4c <grub_iso9660_mtime+0x354>  // b.tstop
     9b0:	cmp	w0, #0x7a7
     9b4:	ccmp	w1, #0x0, #0x4, ls  // ls = plast
     9b8:	b.gt	a4c <grub_iso9660_mtime+0x354>
     9bc:	str	w1, [x20]
     9c0:	ldrb	w0, [x19, #846]
     9c4:	mov	w2, #0xfffffc7c            	// #-900
     9c8:	madd	w1, w0, w2, w1
     9cc:	str	w1, [x20]
     9d0:	mov	w20, #0x0                   	// #0
     9d4:	adrp	x0, 0 <grub_iso9660_close>
     9d8:	ldr	x0, [x0]
     9dc:	ldr	x0, [x0]
     9e0:	bl	0 <grub_dl_unref>
     9e4:	mov	x0, x19
     9e8:	bl	0 <grub_free>
     9ec:	mov	w0, w20
     9f0:	ldp	x19, x20, [sp, #16]
     9f4:	ldp	x29, x30, [sp], #80
     9f8:	ret
     9fc:	adrp	x0, 0 <grub_iso9660_close>
     a00:	ldr	x0, [x0]
     a04:	ldr	x0, [x0]
     a08:	bl	0 <grub_dl_unref>
     a0c:	adrp	x0, 0 <grub_iso9660_close>
     a10:	ldr	x0, [x0]
     a14:	ldr	w20, [x0]
     a18:	b	9ec <grub_iso9660_mtime+0x2f4>
     a1c:	adrp	x0, 0 <grub_iso9660_close>
     a20:	ldr	x1, [x0]
     a24:	mov	w0, #0xa                   	// #10
     a28:	bl	0 <grub_error>
     a2c:	mov	w20, w0
     a30:	b	9d4 <grub_iso9660_mtime+0x2dc>
     a34:	madd	w3, w2, w13, w3
     a38:	add	x4, sp, #0x28
     a3c:	ldrb	w4, [x4, w7, sxtw]
     a40:	cmp	w4, w2
     a44:	b.cc	910 <grub_iso9660_mtime+0x218>  // b.lo, b.ul, b.last
     a48:	b	928 <grub_iso9660_mtime+0x230>
     a4c:	adrp	x0, 0 <grub_iso9660_close>
     a50:	ldr	x1, [x0]
     a54:	mov	w0, #0xa                   	// #10
     a58:	bl	0 <grub_error>
     a5c:	mov	w20, w0
     a60:	b	9d4 <grub_iso9660_mtime+0x2dc>
     a64:	nop
	...

0000000000000a98 <grub_iso9660_convert_string>:
     a98:	stp	x29, x30, [sp, #-288]!
     a9c:	mov	x29, sp
     aa0:	stp	x19, x20, [sp, #16]
     aa4:	mov	x20, x0
     aa8:	mov	w19, w1
     aac:	lsl	w0, w1, #2
     ab0:	add	w0, w0, #0x1
     ab4:	sxtw	x0, w0
     ab8:	bl	0 <grub_malloc>
     abc:	cbz	x0, b38 <grub_iso9660_convert_string+0xa0>
     ac0:	cmp	w19, #0x0
     ac4:	b.le	b28 <grub_iso9660_convert_string+0x90>
     ac8:	sub	w6, w19, #0x1
     acc:	add	x6, x6, #0x2
     ad0:	mov	x2, #0x1                   	// #1
     ad4:	sub	x5, x20, #0x2
     ad8:	ldrh	w3, [x5, x2, lsl #1]
     adc:	add	x1, sp, #0x20
     ae0:	add	x1, x1, x2, lsl #1
     ae4:	lsr	w4, w3, #8
     ae8:	orr	w3, w4, w3, lsl #8
     aec:	sturh	w3, [x1, #-2]
     af0:	add	x2, x2, #0x1
     af4:	cmp	x6, x2
     af8:	b.ne	ad8 <grub_iso9660_convert_string+0x40>  // b.any
     afc:	sxtw	x19, w19
     b00:	sub	x19, x19, #0x1
     b04:	mov	x2, x0
     b08:	mov	w1, #0x0                   	// #0
     b0c:	add	x4, sp, #0x20
     b10:	mov	w9, #0xffff2800            	// #-55296
     b14:	mov	w7, #0xffff2400            	// #-56320
     b18:	mov	w10, #0x3f                  	// #63
     b1c:	mov	w8, #0x0                   	// #0
     b20:	mov	w11, #0x2400                	// #9216
     b24:	b	b60 <grub_iso9660_convert_string+0xc8>
     b28:	sxtw	x1, w19
     b2c:	mov	x2, x0
     b30:	cbnz	w19, b44 <grub_iso9660_convert_string+0xac>
     b34:	strb	wzr, [x2]
     b38:	ldp	x19, x20, [sp, #16]
     b3c:	ldp	x29, x30, [sp], #288
     b40:	ret
     b44:	sub	x19, x1, #0x1
     b48:	b	b04 <grub_iso9660_convert_string+0x6c>
     b4c:	strb	w10, [x2], #1
     b50:	mov	w1, w8
     b54:	sub	x19, x19, #0x1
     b58:	cmn	x19, #0x1
     b5c:	b.eq	b34 <grub_iso9660_convert_string+0x9c>  // b.none
     b60:	mov	x6, x4
     b64:	ldrh	w3, [x6], #2
     b68:	cbz	w1, bc4 <grub_iso9660_convert_string+0x12c>
     b6c:	add	w5, w3, w7
     b70:	cmp	w5, #0x3ff
     b74:	b.hi	b4c <grub_iso9660_convert_string+0xb4>  // b.pmore
     b78:	add	w1, w1, w9
     b7c:	add	w1, w3, w1, lsl #10
     b80:	add	w1, w1, w11
     b84:	lsr	w3, w1, #18
     b88:	orr	w3, w3, #0xfffffff0
     b8c:	strb	w3, [x2]
     b90:	ubfx	x3, x1, #12, #6
     b94:	orr	w3, w3, #0xffffff80
     b98:	strb	w3, [x2, #1]
     b9c:	ubfx	x3, x1, #6, #6
     ba0:	orr	w3, w3, #0xffffff80
     ba4:	strb	w3, [x2, #2]
     ba8:	and	w1, w1, #0x3f
     bac:	orr	w1, w1, #0xffffff80
     bb0:	strb	w1, [x2, #3]
     bb4:	mov	x4, x6
     bb8:	add	x2, x2, #0x4
     bbc:	mov	w1, w8
     bc0:	b	b54 <grub_iso9660_convert_string+0xbc>
     bc4:	cmp	w3, #0x7f
     bc8:	b.hi	bd8 <grub_iso9660_convert_string+0x140>  // b.pmore
     bcc:	strb	w3, [x2], #1
     bd0:	mov	x4, x6
     bd4:	b	b54 <grub_iso9660_convert_string+0xbc>
     bd8:	cmp	w3, #0x7ff
     bdc:	b.hi	c08 <grub_iso9660_convert_string+0x170>  // b.pmore
     be0:	lsr	w4, w3, #6
     be4:	orr	w4, w4, #0xffffffc0
     be8:	mov	x5, x2
     bec:	strb	w4, [x5], #2
     bf0:	and	w3, w3, #0x3f
     bf4:	orr	w3, w3, #0xffffff80
     bf8:	strb	w3, [x2, #1]
     bfc:	mov	x4, x6
     c00:	mov	x2, x5
     c04:	b	b54 <grub_iso9660_convert_string+0xbc>
     c08:	add	w4, w3, w9
     c0c:	cmp	w4, #0x3ff
     c10:	b.ls	c5c <grub_iso9660_convert_string+0x1c4>  // b.plast
     c14:	add	w4, w3, w7
     c18:	cmp	w4, #0x3ff
     c1c:	b.hi	c2c <grub_iso9660_convert_string+0x194>  // b.pmore
     c20:	strb	w10, [x2], #1
     c24:	mov	x4, x6
     c28:	b	b54 <grub_iso9660_convert_string+0xbc>
     c2c:	lsr	w4, w3, #12
     c30:	orr	w4, w4, #0xffffffe0
     c34:	strb	w4, [x2]
     c38:	ubfx	x4, x3, #6, #6
     c3c:	orr	w4, w4, #0xffffff80
     c40:	strb	w4, [x2, #1]
     c44:	and	w3, w3, #0x3f
     c48:	orr	w3, w3, #0xffffff80
     c4c:	strb	w3, [x2, #2]
     c50:	mov	x4, x6
     c54:	add	x2, x2, #0x3
     c58:	b	b54 <grub_iso9660_convert_string+0xbc>
     c5c:	mov	w1, w3
     c60:	mov	x4, x6
     c64:	b	b54 <grub_iso9660_convert_string+0xbc>

0000000000000c68 <grub_iso9660_uuid>:
     c68:	sub	sp, sp, #0x70
     c6c:	stp	x29, x30, [sp, #80]
     c70:	add	x29, sp, #0x50
     c74:	stp	x19, x20, [sp, #96]
     c78:	mov	x20, x1
     c7c:	ldr	x19, [x0]
     c80:	adrp	x0, 0 <grub_iso9660_close>
     c84:	ldr	x0, [x0]
     c88:	ldr	x0, [x0]
     c8c:	bl	0 <grub_dl_ref>
     c90:	mov	x0, x19
     c94:	bl	410 <grub_iso9660_mount>
     c98:	mov	x19, x0
     c9c:	cbz	x0, d7c <grub_iso9660_uuid+0x114>
     ca0:	ldrh	w0, [x0, #830]
     ca4:	cbnz	w0, cbc <grub_iso9660_uuid+0x54>
     ca8:	ldr	x0, [x19, #832]
     cac:	cbnz	x0, cbc <grub_iso9660_uuid+0x54>
     cb0:	ldr	x0, [x19, #840]
     cb4:	tst	x0, #0xffffffffffff
     cb8:	b.eq	d64 <grub_iso9660_uuid+0xfc>  // b.none
     cbc:	ldrb	w7, [x19, #836]
     cc0:	ldrb	w6, [x19, #835]
     cc4:	ldrb	w5, [x19, #834]
     cc8:	ldrb	w4, [x19, #833]
     ccc:	ldrb	w3, [x19, #832]
     cd0:	ldrb	w2, [x19, #831]
     cd4:	ldrb	w1, [x19, #830]
     cd8:	ldrb	w0, [x19, #845]
     cdc:	str	w0, [sp, #64]
     ce0:	ldrb	w0, [x19, #844]
     ce4:	str	w0, [sp, #56]
     ce8:	ldrb	w0, [x19, #843]
     cec:	str	w0, [sp, #48]
     cf0:	ldrb	w0, [x19, #842]
     cf4:	str	w0, [sp, #40]
     cf8:	ldrb	w0, [x19, #841]
     cfc:	str	w0, [sp, #32]
     d00:	ldrb	w0, [x19, #840]
     d04:	str	w0, [sp, #24]
     d08:	ldrb	w0, [x19, #839]
     d0c:	str	w0, [sp, #16]
     d10:	ldrb	w0, [x19, #838]
     d14:	str	w0, [sp, #8]
     d18:	ldrb	w0, [x19, #837]
     d1c:	str	w0, [sp]
     d20:	adrp	x0, 0 <grub_iso9660_close>
     d24:	ldr	x0, [x0]
     d28:	bl	0 <grub_xasprintf>
     d2c:	str	x0, [x20]
     d30:	adrp	x0, 0 <grub_iso9660_close>
     d34:	ldr	x0, [x0]
     d38:	ldr	x0, [x0]
     d3c:	bl	0 <grub_dl_unref>
     d40:	mov	x0, x19
     d44:	bl	0 <grub_free>
     d48:	adrp	x0, 0 <grub_iso9660_close>
     d4c:	ldr	x0, [x0]
     d50:	ldr	w0, [x0]
     d54:	ldp	x19, x20, [sp, #96]
     d58:	ldp	x29, x30, [sp, #80]
     d5c:	add	sp, sp, #0x70
     d60:	ret
     d64:	adrp	x0, 0 <grub_iso9660_close>
     d68:	ldr	x1, [x0]
     d6c:	mov	w0, #0xa                   	// #10
     d70:	bl	0 <grub_error>
     d74:	str	xzr, [x20]
     d78:	b	d30 <grub_iso9660_uuid+0xc8>
     d7c:	str	xzr, [x20]
     d80:	b	d30 <grub_iso9660_uuid+0xc8>
     d84:	nop
	...

0000000000000da8 <grub_iso9660_label>:
     da8:	stp	x29, x30, [sp, #-32]!
     dac:	mov	x29, sp
     db0:	stp	x19, x20, [sp, #16]
     db4:	mov	x19, x1
     db8:	ldr	x0, [x0]
     dbc:	bl	410 <grub_iso9660_mount>
     dc0:	cbz	x0, e60 <grub_iso9660_label+0xb8>
     dc4:	mov	x20, x0
     dc8:	ldr	w0, [x0, #864]
     dcc:	cbz	w0, e44 <grub_iso9660_label+0x9c>
     dd0:	mov	w1, #0x10                  	// #16
     dd4:	add	x0, x20, #0x28
     dd8:	bl	a98 <grub_iso9660_convert_string>
     ddc:	str	x0, [x19]
     de0:	ldr	x0, [x19]
     de4:	cbz	x0, e24 <grub_iso9660_label+0x7c>
     de8:	ldrb	w1, [x0]
     dec:	cbz	w1, e58 <grub_iso9660_label+0xb0>
     df0:	mov	x2, x0
     df4:	ldrb	w1, [x2, #1]!
     df8:	cbnz	w1, df4 <grub_iso9660_label+0x4c>
     dfc:	sub	x2, x2, #0x1
     e00:	cmp	x0, x2
     e04:	b.hi	e24 <grub_iso9660_label+0x7c>  // b.pmore
     e08:	ldrb	w1, [x2]
     e0c:	cmp	w1, #0x20
     e10:	b.ne	e24 <grub_iso9660_label+0x7c>  // b.any
     e14:	strb	wzr, [x2], #-1
     e18:	ldr	x1, [x19]
     e1c:	cmp	x1, x2
     e20:	b.ls	e08 <grub_iso9660_label+0x60>  // b.plast
     e24:	mov	x0, x20
     e28:	bl	0 <grub_free>
     e2c:	adrp	x0, 0 <grub_iso9660_close>
     e30:	ldr	x0, [x0]
     e34:	ldr	w0, [x0]
     e38:	ldp	x19, x20, [sp, #16]
     e3c:	ldp	x29, x30, [sp], #32
     e40:	ret
     e44:	mov	x1, #0x20                  	// #32
     e48:	add	x0, x20, #0x28
     e4c:	bl	0 <grub_strndup>
     e50:	str	x0, [x19]
     e54:	b	de0 <grub_iso9660_label+0x38>
     e58:	mov	x2, x0
     e5c:	b	dfc <grub_iso9660_label+0x54>
     e60:	str	xzr, [x19]
     e64:	b	e2c <grub_iso9660_label+0x84>
	...

0000000000000e70 <grub_iso9660_open>:
     e70:	stp	x29, x30, [sp, #-352]!
     e74:	mov	x29, sp
     e78:	stp	x19, x20, [sp, #16]
     e7c:	str	x21, [sp, #32]
     e80:	mov	x20, x0
     e84:	mov	x21, x1
     e88:	adrp	x0, 0 <grub_iso9660_close>
     e8c:	ldr	x0, [x0]
     e90:	ldr	x0, [x0]
     e94:	bl	0 <grub_dl_ref>
     e98:	ldr	x0, [x20, #8]
     e9c:	ldr	x0, [x0]
     ea0:	bl	410 <grub_iso9660_mount>
     ea4:	mov	x19, x0
     ea8:	cbz	x0, f48 <grub_iso9660_open+0xd8>
     eac:	str	x0, [sp, #56]
     eb0:	str	xzr, [sp, #72]
     eb4:	mov	x5, #0x1                   	// #1
     eb8:	str	x5, [sp, #64]
     ebc:	str	wzr, [sp, #80]
     ec0:	add	x0, x0, #0x9c
     ec4:	ldp	x2, x3, [x0]
     ec8:	add	x1, sp, #0x4
     ecc:	stp	x2, x3, [x1, #80]
     ed0:	ldp	x2, x3, [x0, #16]
     ed4:	stp	x2, x3, [x1, #96]
     ed8:	ldrb	w0, [x19, #188]
     edc:	strb	w0, [sp, #116]
     ee0:	adrp	x0, 0 <grub_iso9660_close>
     ee4:	ldr	x4, [x0]
     ee8:	adrp	x0, 0 <grub_iso9660_close>
     eec:	ldr	x3, [x0]
     ef0:	add	x2, sp, #0x30
     ef4:	add	x1, sp, #0x38
     ef8:	mov	x0, x21
     efc:	bl	0 <grub_fshelp_find_file>
     f00:	cbnz	w0, f48 <grub_iso9660_open+0xd8>
     f04:	ldr	x3, [sp, #48]
     f08:	str	x3, [x19, #872]
     f0c:	str	x19, [x20, #80]
     f10:	ldr	x1, [x3, #8]
     f14:	cbz	x1, f3c <grub_iso9660_open+0xcc>
     f18:	mov	x2, x3
     f1c:	add	x1, x1, x1, lsl #5
     f20:	add	x3, x3, x1
     f24:	mov	x1, #0x0                   	// #0
     f28:	ldur	w4, [x2, #38]
     f2c:	add	x1, x1, x4
     f30:	add	x2, x2, #0x21
     f34:	cmp	x2, x3
     f38:	b.ne	f28 <grub_iso9660_open+0xb8>  // b.any
     f3c:	str	x1, [x20, #64]
     f40:	str	xzr, [x20, #24]
     f44:	b	f6c <grub_iso9660_open+0xfc>
     f48:	adrp	x0, 0 <grub_iso9660_close>
     f4c:	ldr	x0, [x0]
     f50:	ldr	x0, [x0]
     f54:	bl	0 <grub_dl_unref>
     f58:	mov	x0, x19
     f5c:	bl	0 <grub_free>
     f60:	adrp	x0, 0 <grub_iso9660_close>
     f64:	ldr	x0, [x0]
     f68:	ldr	w0, [x0]
     f6c:	ldp	x19, x20, [sp, #16]
     f70:	ldr	x21, [sp, #32]
     f74:	ldp	x29, x30, [sp], #352
     f78:	ret
     f7c:	nop
	...

0000000000000fa0 <grub_iso9660_read_symlink>:
     fa0:	stp	x29, x30, [sp, #-16]!
     fa4:	mov	x29, sp
     fa8:	ldr	w1, [x0, #24]
     fac:	cbz	w1, fcc <grub_iso9660_read_symlink+0x2c>
     fb0:	ldr	x1, [x0, #8]
     fb4:	add	x1, x1, x1, lsl #5
     fb8:	add	x0, x0, x1
     fbc:	add	x0, x0, #0x1c
     fc0:	bl	0 <grub_strdup>
     fc4:	ldp	x29, x30, [sp], #16
     fc8:	ret
     fcc:	adrp	x0, 0 <grub_iso9660_close>
     fd0:	ldr	x0, [x0]
     fd4:	bl	0 <grub_strdup>
     fd8:	b	fc4 <grub_iso9660_read_symlink+0x24>
     fdc:	nop
	...

0000000000000fe8 <add_part>:
     fe8:	stp	x29, x30, [sp, #-64]!
     fec:	mov	x29, sp
     ff0:	stp	x19, x20, [sp, #16]
     ff4:	stp	x21, x22, [sp, #32]
     ff8:	str	x23, [sp, #48]
     ffc:	mov	x19, x0
    1000:	mov	x22, x1
    1004:	mov	w20, w2
    1008:	ldr	x0, [x0, #16]
    100c:	mov	w21, #0x0                   	// #0
    1010:	cbz	x0, 101c <add_part+0x34>
    1014:	bl	0 <grub_strlen>
    1018:	mov	w21, w0
    101c:	add	w23, w21, w20
    1020:	add	w1, w23, #0x1
    1024:	sxtw	x1, w1
    1028:	ldr	x0, [x19, #16]
    102c:	bl	0 <grub_realloc>
    1030:	str	x0, [x19, #16]
    1034:	cbz	x0, 1050 <add_part+0x68>
    1038:	sxtw	x2, w20
    103c:	mov	x1, x22
    1040:	add	x0, x0, w21, sxtw
    1044:	bl	0 <grub_memmove>
    1048:	ldr	x0, [x19, #16]
    104c:	strb	wzr, [x0, w23, sxtw]
    1050:	ldp	x19, x20, [sp, #16]
    1054:	ldp	x21, x22, [sp, #32]
    1058:	ldr	x23, [sp, #48]
    105c:	ldp	x29, x30, [sp], #64
    1060:	ret

0000000000001064 <susp_iterate_dir>:
    1064:	stp	x29, x30, [sp, #-80]!
    1068:	mov	x29, sp
    106c:	stp	x19, x20, [sp, #16]
    1070:	stp	x21, x22, [sp, #32]
    1074:	mov	x19, x0
    1078:	mov	x21, x1
    107c:	mov	x2, #0x2                   	// #2
    1080:	mov	x1, x0
    1084:	adrp	x0, 0 <grub_iso9660_close>
    1088:	ldr	x0, [x0]
    108c:	bl	0 <grub_strncmp>
    1090:	cbnz	w0, 1180 <susp_iterate_dir+0x11c>
    1094:	ldrb	w0, [x19, #4]
    1098:	tbz	w0, #1, 10bc <susp_iterate_dir+0x58>
    109c:	adrp	x0, 0 <grub_iso9660_close>
    10a0:	ldr	x0, [x0]
    10a4:	str	x0, [x21]
    10a8:	mov	w0, #0x0                   	// #0
    10ac:	ldp	x19, x20, [sp, #16]
    10b0:	ldp	x21, x22, [sp, #32]
    10b4:	ldp	x29, x30, [sp], #80
    10b8:	ret
    10bc:	tbz	w0, #2, 10d4 <susp_iterate_dir+0x70>
    10c0:	adrp	x0, 0 <grub_iso9660_close>
    10c4:	ldr	x0, [x0]
    10c8:	str	x0, [x21]
    10cc:	mov	w0, #0x0                   	// #0
    10d0:	b	10ac <susp_iterate_dir+0x48>
    10d4:	ldrb	w1, [x19, #2]
    10d8:	mov	w0, #0x0                   	// #0
    10dc:	cmp	w1, #0x4
    10e0:	b.ls	10ac <susp_iterate_dir+0x48>  // b.plast
    10e4:	stp	x23, x24, [sp, #48]
    10e8:	sub	w20, w1, #0x5
    10ec:	sxtw	x23, w20
    10f0:	ldr	x24, [x21]
    10f4:	ldr	w0, [x21, #8]
    10f8:	cbz	w0, 1154 <susp_iterate_dir+0xf0>
    10fc:	mov	x0, x24
    1100:	bl	0 <grub_strlen>
    1104:	mov	x22, x0
    1108:	add	x1, x23, #0x1
    110c:	add	x1, x1, x0
    1110:	ldr	x0, [x21]
    1114:	bl	0 <grub_realloc>
    1118:	str	x0, [x21]
    111c:	ldr	x0, [x21]
    1120:	cbz	x0, 1168 <susp_iterate_dir+0x104>
    1124:	mov	w1, #0x1                   	// #1
    1128:	str	w1, [x21, #8]
    112c:	mov	x2, x23
    1130:	add	x1, x19, #0x5
    1134:	add	x0, x0, x22
    1138:	bl	0 <grub_memmove>
    113c:	ldr	x0, [x21]
    1140:	add	x22, x0, x22
    1144:	strb	wzr, [x22, w20, sxtw]
    1148:	mov	w0, #0x0                   	// #0
    114c:	ldp	x23, x24, [sp, #48]
    1150:	b	10ac <susp_iterate_dir+0x48>
    1154:	add	x0, x23, #0x1
    1158:	bl	0 <grub_zalloc>
    115c:	str	x0, [x21]
    1160:	mov	x22, #0x0                   	// #0
    1164:	b	111c <susp_iterate_dir+0xb8>
    1168:	str	x24, [x21]
    116c:	adrp	x0, 0 <grub_iso9660_close>
    1170:	ldr	x0, [x0]
    1174:	ldr	w0, [x0]
    1178:	ldp	x23, x24, [sp, #48]
    117c:	b	10ac <susp_iterate_dir+0x48>
    1180:	mov	x2, #0x2                   	// #2
    1184:	adrp	x0, 0 <grub_iso9660_close>
    1188:	ldr	x1, [x0]
    118c:	mov	x0, x19
    1190:	bl	0 <grub_strncmp>
    1194:	cbnz	w0, 11fc <susp_iterate_dir+0x198>
    1198:	ldrb	w0, [x19, #5]
    119c:	ldrb	w1, [x19, #4]
    11a0:	add	w0, w1, w0, lsl #8
    11a4:	and	w0, w0, #0xf000
    11a8:	cmp	w0, #0x8, lsl #12
    11ac:	b.eq	11dc <susp_iterate_dir+0x178>  // b.none
    11b0:	cmp	w0, #0xa, lsl #12
    11b4:	b.eq	11ec <susp_iterate_dir+0x188>  // b.none
    11b8:	cmp	w0, #0x4, lsl #12
    11bc:	b.eq	11cc <susp_iterate_dir+0x168>  // b.none
    11c0:	str	wzr, [x21, #12]
    11c4:	mov	w0, #0x0                   	// #0
    11c8:	b	10ac <susp_iterate_dir+0x48>
    11cc:	mov	w0, #0x2                   	// #2
    11d0:	str	w0, [x21, #12]
    11d4:	mov	w0, #0x0                   	// #0
    11d8:	b	10ac <susp_iterate_dir+0x48>
    11dc:	mov	w0, #0x1                   	// #1
    11e0:	str	w0, [x21, #12]
    11e4:	mov	w0, #0x0                   	// #0
    11e8:	b	10ac <susp_iterate_dir+0x48>
    11ec:	mov	w0, #0x3                   	// #3
    11f0:	str	w0, [x21, #12]
    11f4:	mov	w0, #0x0                   	// #0
    11f8:	b	10ac <susp_iterate_dir+0x48>
    11fc:	mov	x2, #0x2                   	// #2
    1200:	mov	x1, x19
    1204:	adrp	x0, 0 <grub_iso9660_close>
    1208:	ldr	x0, [x0]
    120c:	bl	0 <grub_strncmp>
    1210:	mov	w1, w0
    1214:	mov	w0, #0x0                   	// #0
    1218:	cbnz	w1, 10ac <susp_iterate_dir+0x48>
    121c:	ldrb	w0, [x19, #2]
    1220:	cmp	w0, #0x5
    1224:	b.ls	1338 <susp_iterate_dir+0x2d4>  // b.plast
    1228:	stp	x23, x24, [sp, #48]
    122c:	stp	x25, x26, [sp, #64]
    1230:	mov	w20, #0x1                   	// #1
    1234:	adrp	x26, 0 <grub_iso9660_close>
    1238:	mov	w25, #0x3                   	// #3
    123c:	adrp	x23, 0 <grub_iso9660_close>
    1240:	mov	w22, w20
    1244:	adrp	x24, 0 <grub_iso9660_close>
    1248:	b	12d0 <susp_iterate_dir+0x26c>
    124c:	cmp	w0, #0x8
    1250:	b.ne	12a8 <susp_iterate_dir+0x244>  // b.any
    1254:	mov	w2, w22
    1258:	ldr	x1, [x23]
    125c:	mov	x0, x21
    1260:	bl	fe8 <add_part>
    1264:	b	12a8 <susp_iterate_dir+0x244>
    1268:	ldr	x0, [x21, #16]
    126c:	cbz	x0, 1278 <susp_iterate_dir+0x214>
    1270:	ldr	w0, [x21, #24]
    1274:	cbz	w0, 1308 <susp_iterate_dir+0x2a4>
    1278:	add	w0, w20, #0x1
    127c:	add	x0, x19, x0
    1280:	add	w1, w20, #0x2
    1284:	add	x1, x1, #0x4
    1288:	ldrb	w2, [x0, #4]
    128c:	add	x1, x19, x1
    1290:	mov	x0, x21
    1294:	bl	fe8 <add_part>
    1298:	add	x0, x19, w20, uxtw
    129c:	ldrb	w0, [x0, #4]
    12a0:	and	w0, w0, #0x1
    12a4:	str	w0, [x21, #24]
    12a8:	add	w0, w20, #0x1
    12ac:	add	x0, x19, x0
    12b0:	ldrb	w0, [x0, #4]
    12b4:	add	w0, w0, #0x2
    12b8:	add	w20, w20, w0
    12bc:	mov	w0, w20
    12c0:	add	x0, x0, #0x4
    12c4:	ldrb	w1, [x19, #2]
    12c8:	cmp	x0, x1
    12cc:	b.cs	1330 <susp_iterate_dir+0x2cc>  // b.hs, b.nlast
    12d0:	add	x0, x19, w20, uxtw
    12d4:	ldrb	w0, [x0, #4]
    12d8:	and	w0, w0, #0x1e
    12dc:	cmp	w0, #0x4
    12e0:	b.eq	131c <susp_iterate_dir+0x2b8>  // b.none
    12e4:	b.hi	124c <susp_iterate_dir+0x1e8>  // b.pmore
    12e8:	cbz	w0, 1268 <susp_iterate_dir+0x204>
    12ec:	cmp	w0, #0x2
    12f0:	b.ne	12a8 <susp_iterate_dir+0x244>  // b.any
    12f4:	mov	w2, #0x2                   	// #2
    12f8:	ldr	x1, [x24]
    12fc:	mov	x0, x21
    1300:	bl	fe8 <add_part>
    1304:	b	12a8 <susp_iterate_dir+0x244>
    1308:	mov	w2, w22
    130c:	ldr	x1, [x23]
    1310:	mov	x0, x21
    1314:	bl	fe8 <add_part>
    1318:	b	1278 <susp_iterate_dir+0x214>
    131c:	mov	w2, w25
    1320:	ldr	x1, [x26]
    1324:	mov	x0, x21
    1328:	bl	fe8 <add_part>
    132c:	b	12a8 <susp_iterate_dir+0x244>
    1330:	ldp	x23, x24, [sp, #48]
    1334:	ldp	x25, x26, [sp, #64]
    1338:	adrp	x0, 0 <grub_iso9660_close>
    133c:	ldr	x0, [x0]
    1340:	ldr	w0, [x0]
    1344:	b	10ac <susp_iterate_dir+0x48>
	...

0000000000001390 <grub_iso9660_dir_iter>:
    1390:	stp	x29, x30, [sp, #-112]!
    1394:	mov	x29, sp
    1398:	stp	x19, x20, [sp, #16]
    139c:	stp	x21, x22, [sp, #32]
    13a0:	mov	x22, x0
    13a4:	mov	w20, w1
    13a8:	mov	x19, x2
    13ac:	mov	x21, x3
    13b0:	mov	x2, #0x10                  	// #16
    13b4:	mov	w1, #0x0                   	// #0
    13b8:	add	x0, sp, #0x60
    13bc:	bl	0 <grub_memset>
    13c0:	and	w20, w20, #0xff
    13c4:	cmp	w20, #0x2
    13c8:	cset	w1, eq  // eq = none
    13cc:	ldrb	w0, [sp, #96]
    13d0:	bfxil	w0, w1, #0, #1
    13d4:	strb	w0, [sp, #96]
    13d8:	ldrb	w1, [x19, #46]
    13dc:	ldrb	w2, [x19, #47]
    13e0:	ldrb	w4, [x19, #48]
    13e4:	ldrb	w8, [x19, #49]
    13e8:	ldrb	w9, [x19, #50]
    13ec:	ldrb	w5, [x19, #51]
    13f0:	adrp	x0, 0 <grub_iso9660_close>
    13f4:	ldr	x0, [x0]
    13f8:	ldp	x6, x7, [x0]
    13fc:	stp	x6, x7, [sp, #72]
    1400:	ldr	x3, [x0, #16]
    1404:	str	x3, [sp, #88]
    1408:	adrp	x3, 0 <grub_iso9660_close>
    140c:	ldr	x0, [x3]
    1410:	ldr	x3, [x0]
    1414:	str	x3, [sp, #56]
    1418:	ldr	w3, [x0, #8]
    141c:	str	w3, [sp, #64]
    1420:	sub	w0, w1, #0x1
    1424:	and	w0, w0, #0xffff
    1428:	cmp	w0, #0x89
    142c:	b.hi	1588 <grub_iso9660_dir_iter+0x1f8>  // b.pmore
    1430:	sub	w3, w2, #0x1
    1434:	and	w3, w3, #0xff
    1438:	cmp	w3, #0xb
    143c:	b.hi	1588 <grub_iso9660_dir_iter+0x1f8>  // b.pmore
    1440:	add	w10, w1, #0x76c
    1444:	add	w0, w1, #0x76b
    1448:	asr	w0, w0, #2
    144c:	sub	w0, w0, #0x1ed
    1450:	sub	w1, w1, #0x49
    1454:	sub	w1, w1, w0, lsl #2
    1458:	mov	w6, #0x1f80                	// #8064
    145c:	movk	w6, #0x786, lsl #16
    1460:	mov	w3, #0xec00                	// #60416
    1464:	movk	w3, #0x5a4, lsl #16
    1468:	madd	w0, w0, w6, w3
    146c:	mov	w3, #0x3380                	// #13184
    1470:	movk	w3, #0x1e1, lsl #16
    1474:	madd	w3, w1, w3, w0
    1478:	sub	w6, w2, #0x1
    147c:	add	x0, sp, #0x48
    1480:	ldrh	w0, [x0, w6, sxtw #1]
    1484:	mov	w7, #0x5180                	// #20864
    1488:	movk	w7, #0x1, lsl #16
    148c:	madd	w0, w0, w7, w3
    1490:	cmp	w2, #0x2
    1494:	ccmp	w1, #0x3, #0x0, hi  // hi = pmore
    1498:	b.eq	1570 <grub_iso9660_dir_iter+0x1e0>  // b.none
    149c:	sub	w3, w4, #0x1
    14a0:	mov	w7, #0x5180                	// #20864
    14a4:	movk	w7, #0x1, lsl #16
    14a8:	madd	w0, w3, w7, w0
    14ac:	add	x3, sp, #0x38
    14b0:	ldrb	w3, [x3, w6, sxtw]
    14b4:	cmp	w3, w4
    14b8:	b.cs	14d8 <grub_iso9660_dir_iter+0x148>  // b.hs, b.nlast
    14bc:	cbz	w1, 1588 <grub_iso9660_dir_iter+0x1f8>
    14c0:	mov	x1, #0x0                   	// #0
    14c4:	bfi	x1, x2, #16, #8
    14c8:	bfi	x1, x4, #24, #8
    14cc:	mov	w2, #0x1d02                	// #7426
    14d0:	cmp	w2, w1, lsr #16
    14d4:	b.ne	1588 <grub_iso9660_dir_iter+0x1f8>  // b.any
    14d8:	cbz	w4, 1588 <grub_iso9660_dir_iter+0x1f8>
    14dc:	cmp	w8, #0x17
    14e0:	b.hi	1588 <grub_iso9660_dir_iter+0x1f8>  // b.pmore
    14e4:	cmp	w9, #0x3b
    14e8:	b.hi	1588 <grub_iso9660_dir_iter+0x1f8>  // b.pmore
    14ec:	cmp	w5, #0x3c
    14f0:	b.hi	1588 <grub_iso9660_dir_iter+0x1f8>  // b.pmore
    14f4:	mov	w1, #0xe10                 	// #3600
    14f8:	madd	w0, w8, w1, w0
    14fc:	lsl	w1, w9, #4
    1500:	sub	w9, w1, w9
    1504:	add	w0, w0, w9, lsl #2
    1508:	add	w5, w5, w0
    150c:	cmp	w10, #0x7bc
    1510:	ccmp	w5, #0x0, #0x0, hi  // hi = pmore
    1514:	b.lt	1588 <grub_iso9660_dir_iter+0x1f8>  // b.tstop
    1518:	cmp	w10, #0x7a7
    151c:	ccmp	w5, #0x0, #0x4, ls  // ls = plast
    1520:	b.gt	1588 <grub_iso9660_dir_iter+0x1f8>
    1524:	ldrb	w0, [x19, #52]
    1528:	mov	w1, #0xfffffc7c            	// #-900
    152c:	madd	w0, w0, w1, w5
    1530:	str	w0, [sp, #100]
    1534:	mov	w1, #0x1                   	// #1
    1538:	ldrb	w0, [sp, #96]
    153c:	bfi	w0, w1, #1, #1
    1540:	strb	w0, [sp, #96]
    1544:	mov	x0, x19
    1548:	bl	0 <grub_free>
    154c:	ldr	x3, [x21]
    1550:	ldr	x2, [x21, #8]
    1554:	add	x1, sp, #0x60
    1558:	mov	x0, x22
    155c:	blr	x3
    1560:	ldp	x19, x20, [sp, #16]
    1564:	ldp	x21, x22, [sp, #32]
    1568:	ldp	x29, x30, [sp], #112
    156c:	ret
    1570:	madd	w0, w4, w7, w0
    1574:	add	x1, sp, #0x38
    1578:	ldrb	w1, [x1, w6, sxtw]
    157c:	cmp	w1, w4
    1580:	b.cc	14c0 <grub_iso9660_dir_iter+0x130>  // b.lo, b.ul, b.last
    1584:	b	14d8 <grub_iso9660_dir_iter+0x148>
    1588:	mov	w1, #0x0                   	// #0
    158c:	b	1538 <grub_iso9660_dir_iter+0x1a8>
	...

00000000000015a0 <grub_iso9660_iterate_dir>:
    15a0:	stp	x29, x30, [sp, #-448]!
    15a4:	mov	x29, sp
    15a8:	str	x2, [sp, #104]
    15ac:	ldr	x2, [x0, #8]
    15b0:	cbz	x2, 1abc <grub_iso9660_iterate_dir+0x51c>
    15b4:	stp	x19, x20, [sp, #16]
    15b8:	stp	x21, x22, [sp, #32]
    15bc:	stp	x23, x24, [sp, #48]
    15c0:	stp	x25, x26, [sp, #64]
    15c4:	stp	x27, x28, [sp, #80]
    15c8:	mov	x22, x0
    15cc:	mov	x25, x1
    15d0:	add	x2, x2, x2, lsl #5
    15d4:	add	x2, x2, x0
    15d8:	mov	x24, #0x0                   	// #0
    15dc:	ldur	w1, [x0, #38]
    15e0:	add	x24, x24, x1
    15e4:	add	x0, x0, #0x21
    15e8:	cmp	x2, x0
    15ec:	b.ne	15dc <grub_iso9660_iterate_dir+0x3c>  // b.any
    15f0:	cbz	x24, 1ac4 <grub_iso9660_iterate_dir+0x524>
    15f4:	mov	x21, #0x0                   	// #0
    15f8:	add	x20, sp, #0x198
    15fc:	mov	x23, #0x21                  	// #33
    1600:	add	x26, sp, #0x78
    1604:	mov	x27, #0x128                 	// #296
    1608:	b	1624 <grub_iso9660_iterate_dir+0x84>
    160c:	and	x21, x21, #0xfffffffffffff800
    1610:	add	x21, x21, #0x800
    1614:	ldrb	w0, [sp, #408]
    1618:	add	x21, x21, x0
    161c:	cmp	x21, x24
    1620:	b.cs	1aa0 <grub_iso9660_iterate_dir+0x500>  // b.hs, b.nlast
    1624:	str	xzr, [sp, #392]
    1628:	str	wzr, [sp, #400]
    162c:	mov	x3, x20
    1630:	mov	x2, x23
    1634:	mov	x1, x21
    1638:	mov	x0, x22
    163c:	bl	48 <read_node>
    1640:	cbnz	w0, 1ae0 <grub_iso9660_iterate_dir+0x540>
    1644:	ldrb	w2, [sp, #408]
    1648:	cbz	w2, 160c <grub_iso9660_iterate_dir+0x6c>
    164c:	add	w19, w21, #0x21
    1650:	ldrb	w0, [sp, #440]
    1654:	ldr	x3, [x22]
    1658:	ldr	w1, [x3, #860]
    165c:	str	xzr, [sp, #376]
    1660:	str	wzr, [sp, #384]
    1664:	str	wzr, [sp, #388]
    1668:	ldr	w3, [x3, #856]
    166c:	cbz	w3, 16a4 <grub_iso9660_iterate_dir+0x104>
    1670:	and	w0, w0, #0xfffffffe
    1674:	add	w0, w0, #0x22
    1678:	sub	w2, w2, w0
    167c:	add	w1, w1, w0
    1680:	add	w1, w1, w21
    1684:	add	x4, sp, #0x178
    1688:	adrp	x0, 0 <grub_iso9660_close>
    168c:	ldr	x3, [x0]
    1690:	sxtw	x2, w2
    1694:	sxtw	x1, w1
    1698:	mov	x0, x22
    169c:	bl	1e8 <grub_iso9660_susp_iterate>
    16a0:	cbnz	w0, 1a4c <grub_iso9660_iterate_dir+0x4ac>
    16a4:	mov	x3, x26
    16a8:	ldrb	w2, [sp, #440]
    16ac:	sxtw	x1, w19
    16b0:	mov	x0, x22
    16b4:	bl	48 <read_node>
    16b8:	cbnz	w0, 1a68 <grub_iso9660_iterate_dir+0x4c8>
    16bc:	mov	x0, x27
    16c0:	bl	0 <grub_malloc>
    16c4:	mov	x19, x0
    16c8:	cbz	x0, 1a84 <grub_iso9660_iterate_dir+0x4e4>
    16cc:	mov	x0, #0x8                   	// #8
    16d0:	str	x0, [x19, #16]
    16d4:	mov	x0, #0x1                   	// #1
    16d8:	str	x0, [x19, #8]
    16dc:	ldr	x0, [x22]
    16e0:	str	x0, [x19]
    16e4:	str	wzr, [x19, #24]
    16e8:	ldr	w0, [sp, #388]
    16ec:	cbnz	w0, 1708 <grub_iso9660_iterate_dir+0x168>
    16f0:	ldrb	w0, [sp, #433]
    16f4:	and	w0, w0, #0x3
    16f8:	cmp	w0, #0x2
    16fc:	mov	w0, #0x2                   	// #2
    1700:	csinc	w0, w0, wzr, eq  // eq = none
    1704:	str	w0, [sp, #388]
    1708:	ldr	x0, [sp, #376]
    170c:	cbz	x0, 17f4 <grub_iso9660_iterate_dir+0x254>
    1710:	ldr	x0, [x22]
    1714:	ldr	w0, [x0, #864]
    1718:	cbnz	w0, 1b20 <grub_iso9660_iterate_dir+0x580>
    171c:	ldr	x0, [sp, #376]
    1720:	cbz	x0, 1854 <grub_iso9660_iterate_dir+0x2b4>
    1724:	add	x0, x19, #0x1c
    1728:	ldp	x2, x3, [x20]
    172c:	stp	x2, x3, [x0]
    1730:	ldp	x2, x3, [x20, #16]
    1734:	stp	x2, x3, [x0, #16]
    1738:	ldrb	w1, [x20, #32]
    173c:	strb	w1, [x19, #60]
    1740:	ldrsb	w0, [sp, #433]
    1744:	tbnz	w0, #31, 1974 <grub_iso9660_iterate_dir+0x3d4>
    1748:	ldr	x0, [sp, #392]
    174c:	cbz	x0, 17c8 <grub_iso9660_iterate_dir+0x228>
    1750:	ldr	x28, [x19, #16]
    1754:	ldr	x1, [x19, #8]
    1758:	sub	x28, x28, x1
    175c:	add	x28, x28, x28, lsl #5
    1760:	bl	0 <grub_strlen>
    1764:	add	x0, x0, #0x1
    1768:	cmp	x28, x0
    176c:	b.cs	1798 <grub_iso9660_iterate_dir+0x1f8>  // b.hs, b.nlast
    1770:	ldr	x28, [x19, #16]
    1774:	ldr	x0, [sp, #392]
    1778:	bl	0 <grub_strlen>
    177c:	add	x28, x28, #0x1
    1780:	add	x28, x28, x28, lsl #5
    1784:	add	x1, x28, x0
    1788:	mov	x0, x19
    178c:	bl	0 <grub_realloc>
    1790:	cbz	x0, 19cc <grub_iso9660_iterate_dir+0x42c>
    1794:	mov	x19, x0
    1798:	mov	w0, #0x1                   	// #1
    179c:	str	w0, [x19, #24]
    17a0:	ldr	x0, [x19, #8]
    17a4:	add	x0, x0, x0, lsl #5
    17a8:	add	x0, x19, x0
    17ac:	ldr	x1, [sp, #392]
    17b0:	add	x0, x0, #0x1c
    17b4:	bl	0 <grub_strcpy>
    17b8:	ldr	x0, [sp, #392]
    17bc:	bl	0 <grub_free>
    17c0:	str	xzr, [sp, #392]
    17c4:	str	wzr, [sp, #400]
    17c8:	ldr	x3, [sp, #104]
    17cc:	mov	x2, x19
    17d0:	ldr	w1, [sp, #388]
    17d4:	ldr	x0, [sp, #376]
    17d8:	blr	x25
    17dc:	cbnz	w0, 1a04 <grub_iso9660_iterate_dir+0x464>
    17e0:	ldr	w0, [sp, #384]
    17e4:	cbz	w0, 1614 <grub_iso9660_iterate_dir+0x74>
    17e8:	ldr	x0, [sp, #376]
    17ec:	bl	0 <grub_free>
    17f0:	b	1614 <grub_iso9660_iterate_dir+0x74>
    17f4:	ldrb	w0, [sp, #440]
    17f8:	cmp	w0, #0x1
    17fc:	b.eq	183c <grub_iso9660_iterate_dir+0x29c>  // b.none
    1800:	ldr	x0, [x22]
    1804:	ldr	w0, [x0, #864]
    1808:	cbz	w0, 1854 <grub_iso9660_iterate_dir+0x2b4>
    180c:	ldrb	w1, [sp, #440]
    1810:	lsr	w1, w1, #1
    1814:	mov	x0, x26
    1818:	bl	a98 <grub_iso9660_convert_string>
    181c:	str	x0, [sp, #376]
    1820:	mov	w1, #0x3b                  	// #59
    1824:	bl	0 <grub_strrchr>
    1828:	cbz	x0, 1830 <grub_iso9660_iterate_dir+0x290>
    182c:	strb	wzr, [x0]
    1830:	mov	w0, #0x1                   	// #1
    1834:	str	w0, [sp, #384]
    1838:	b	1724 <grub_iso9660_iterate_dir+0x184>
    183c:	ldrb	w0, [sp, #120]
    1840:	cbnz	w0, 1afc <grub_iso9660_iterate_dir+0x55c>
    1844:	adrp	x0, 0 <grub_iso9660_close>
    1848:	ldr	x0, [x0]
    184c:	str	x0, [sp, #376]
    1850:	b	1710 <grub_iso9660_iterate_dir+0x170>
    1854:	ldrb	w0, [sp, #440]
    1858:	strb	wzr, [x26, w0, sxtw]
    185c:	mov	w1, #0x3b                  	// #59
    1860:	mov	x0, x26
    1864:	bl	0 <grub_strrchr>
    1868:	cbz	x0, 1870 <grub_iso9660_iterate_dir+0x2d0>
    186c:	strb	wzr, [x0]
    1870:	ldr	w0, [sp, #388]
    1874:	orr	w0, w0, #0x100
    1878:	str	w0, [sp, #388]
    187c:	ldrb	w0, [sp, #120]
    1880:	cbz	w0, 18b8 <grub_iso9660_iterate_dir+0x318>
    1884:	add	x2, sp, #0x78
    1888:	sub	w3, w0, #0x41
    188c:	add	w1, w0, #0x20
    1890:	cmp	w3, #0x1a
    1894:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1898:	strb	w0, [x2]
    189c:	ldrb	w0, [x2, #1]!
    18a0:	cbnz	w0, 1888 <grub_iso9660_iterate_dir+0x2e8>
    18a4:	cmp	x2, x26
    18a8:	b.eq	18b8 <grub_iso9660_iterate_dir+0x318>  // b.none
    18ac:	ldurb	w0, [x2, #-1]
    18b0:	cmp	w0, #0x2e
    18b4:	b.eq	18c0 <grub_iso9660_iterate_dir+0x320>  // b.none
    18b8:	str	x26, [sp, #376]
    18bc:	b	1724 <grub_iso9660_iterate_dir+0x184>
    18c0:	sturb	wzr, [x2, #-1]
    18c4:	b	18b8 <grub_iso9660_iterate_dir+0x318>
    18c8:	ldr	w0, [sp, #384]
    18cc:	cbnz	w0, 18f8 <grub_iso9660_iterate_dir+0x358>
    18d0:	mov	x0, x19
    18d4:	bl	0 <grub_free>
    18d8:	mov	w0, #0x0                   	// #0
    18dc:	ldp	x19, x20, [sp, #16]
    18e0:	ldp	x21, x22, [sp, #32]
    18e4:	ldp	x23, x24, [sp, #48]
    18e8:	ldp	x25, x26, [sp, #64]
    18ec:	ldp	x27, x28, [sp, #80]
    18f0:	ldp	x29, x30, [sp], #448
    18f4:	ret
    18f8:	ldr	x0, [sp, #376]
    18fc:	bl	0 <grub_free>
    1900:	b	18d0 <grub_iso9660_iterate_dir+0x330>
    1904:	ldr	w0, [sp, #384]
    1908:	cbnz	w0, 1930 <grub_iso9660_iterate_dir+0x390>
    190c:	mov	x0, x19
    1910:	bl	0 <grub_free>
    1914:	mov	w0, #0x0                   	// #0
    1918:	ldp	x19, x20, [sp, #16]
    191c:	ldp	x21, x22, [sp, #32]
    1920:	ldp	x23, x24, [sp, #48]
    1924:	ldp	x25, x26, [sp, #64]
    1928:	ldp	x27, x28, [sp, #80]
    192c:	b	18f0 <grub_iso9660_iterate_dir+0x350>
    1930:	ldr	x0, [sp, #376]
    1934:	bl	0 <grub_free>
    1938:	b	190c <grub_iso9660_iterate_dir+0x36c>
    193c:	ldr	x0, [x19, #8]
    1940:	add	x1, x0, #0x1
    1944:	str	x1, [x19, #8]
    1948:	add	x0, x0, x0, lsl #5
    194c:	add	x0, x19, x0
    1950:	add	x0, x0, #0x1c
    1954:	ldp	x2, x3, [x20]
    1958:	stp	x2, x3, [x0]
    195c:	ldp	x2, x3, [x20, #16]
    1960:	stp	x2, x3, [x0, #16]
    1964:	ldrb	w1, [x20, #32]
    1968:	strb	w1, [x0, #32]
    196c:	ldrsb	w0, [sp, #433]
    1970:	tbz	w0, #31, 1748 <grub_iso9660_iterate_dir+0x1a8>
    1974:	ldrb	w0, [sp, #408]
    1978:	add	x21, x21, x0
    197c:	mov	x3, x20
    1980:	mov	x2, x23
    1984:	mov	x1, x21
    1988:	mov	x0, x22
    198c:	bl	48 <read_node>
    1990:	cbnz	w0, 18c8 <grub_iso9660_iterate_dir+0x328>
    1994:	ldr	x1, [x19, #16]
    1998:	ldr	x0, [x19, #8]
    199c:	cmp	x0, x1
    19a0:	b.cc	193c <grub_iso9660_iterate_dir+0x39c>  // b.lo, b.ul, b.last
    19a4:	lsl	x0, x1, #1
    19a8:	str	x0, [x19, #16]
    19ac:	add	x1, x1, x1, lsl #5
    19b0:	lsl	x1, x1, #1
    19b4:	add	x1, x1, #0x20
    19b8:	mov	x0, x19
    19bc:	bl	0 <grub_realloc>
    19c0:	cbz	x0, 1904 <grub_iso9660_iterate_dir+0x364>
    19c4:	mov	x19, x0
    19c8:	b	193c <grub_iso9660_iterate_dir+0x39c>
    19cc:	ldr	w0, [sp, #384]
    19d0:	cbnz	w0, 19f8 <grub_iso9660_iterate_dir+0x458>
    19d4:	mov	x0, x19
    19d8:	bl	0 <grub_free>
    19dc:	mov	w0, #0x0                   	// #0
    19e0:	ldp	x19, x20, [sp, #16]
    19e4:	ldp	x21, x22, [sp, #32]
    19e8:	ldp	x23, x24, [sp, #48]
    19ec:	ldp	x25, x26, [sp, #64]
    19f0:	ldp	x27, x28, [sp, #80]
    19f4:	b	18f0 <grub_iso9660_iterate_dir+0x350>
    19f8:	ldr	x0, [sp, #376]
    19fc:	bl	0 <grub_free>
    1a00:	b	19d4 <grub_iso9660_iterate_dir+0x434>
    1a04:	ldr	w1, [sp, #384]
    1a08:	mov	w0, #0x1                   	// #1
    1a0c:	cbnz	w1, 1a28 <grub_iso9660_iterate_dir+0x488>
    1a10:	ldp	x19, x20, [sp, #16]
    1a14:	ldp	x21, x22, [sp, #32]
    1a18:	ldp	x23, x24, [sp, #48]
    1a1c:	ldp	x25, x26, [sp, #64]
    1a20:	ldp	x27, x28, [sp, #80]
    1a24:	b	18f0 <grub_iso9660_iterate_dir+0x350>
    1a28:	ldr	x0, [sp, #376]
    1a2c:	bl	0 <grub_free>
    1a30:	mov	w0, #0x1                   	// #1
    1a34:	ldp	x19, x20, [sp, #16]
    1a38:	ldp	x21, x22, [sp, #32]
    1a3c:	ldp	x23, x24, [sp, #48]
    1a40:	ldp	x25, x26, [sp, #64]
    1a44:	ldp	x27, x28, [sp, #80]
    1a48:	b	18f0 <grub_iso9660_iterate_dir+0x350>
    1a4c:	mov	w0, #0x0                   	// #0
    1a50:	ldp	x19, x20, [sp, #16]
    1a54:	ldp	x21, x22, [sp, #32]
    1a58:	ldp	x23, x24, [sp, #48]
    1a5c:	ldp	x25, x26, [sp, #64]
    1a60:	ldp	x27, x28, [sp, #80]
    1a64:	b	18f0 <grub_iso9660_iterate_dir+0x350>
    1a68:	mov	w0, #0x0                   	// #0
    1a6c:	ldp	x19, x20, [sp, #16]
    1a70:	ldp	x21, x22, [sp, #32]
    1a74:	ldp	x23, x24, [sp, #48]
    1a78:	ldp	x25, x26, [sp, #64]
    1a7c:	ldp	x27, x28, [sp, #80]
    1a80:	b	18f0 <grub_iso9660_iterate_dir+0x350>
    1a84:	mov	w0, #0x0                   	// #0
    1a88:	ldp	x19, x20, [sp, #16]
    1a8c:	ldp	x21, x22, [sp, #32]
    1a90:	ldp	x23, x24, [sp, #48]
    1a94:	ldp	x25, x26, [sp, #64]
    1a98:	ldp	x27, x28, [sp, #80]
    1a9c:	b	18f0 <grub_iso9660_iterate_dir+0x350>
    1aa0:	mov	w0, #0x0                   	// #0
    1aa4:	ldp	x19, x20, [sp, #16]
    1aa8:	ldp	x21, x22, [sp, #32]
    1aac:	ldp	x23, x24, [sp, #48]
    1ab0:	ldp	x25, x26, [sp, #64]
    1ab4:	ldp	x27, x28, [sp, #80]
    1ab8:	b	18f0 <grub_iso9660_iterate_dir+0x350>
    1abc:	mov	w0, #0x0                   	// #0
    1ac0:	b	18f0 <grub_iso9660_iterate_dir+0x350>
    1ac4:	mov	w0, #0x0                   	// #0
    1ac8:	ldp	x19, x20, [sp, #16]
    1acc:	ldp	x21, x22, [sp, #32]
    1ad0:	ldp	x23, x24, [sp, #48]
    1ad4:	ldp	x25, x26, [sp, #64]
    1ad8:	ldp	x27, x28, [sp, #80]
    1adc:	b	18f0 <grub_iso9660_iterate_dir+0x350>
    1ae0:	mov	w0, #0x0                   	// #0
    1ae4:	ldp	x19, x20, [sp, #16]
    1ae8:	ldp	x21, x22, [sp, #32]
    1aec:	ldp	x23, x24, [sp, #48]
    1af0:	ldp	x25, x26, [sp, #64]
    1af4:	ldp	x27, x28, [sp, #80]
    1af8:	b	18f0 <grub_iso9660_iterate_dir+0x350>
    1afc:	ldrb	w0, [sp, #120]
    1b00:	cmp	w0, #0x1
    1b04:	b.ne	1800 <grub_iso9660_iterate_dir+0x260>  // b.any
    1b08:	adrp	x0, 0 <grub_iso9660_close>
    1b0c:	ldr	x0, [x0]
    1b10:	str	x0, [sp, #376]
    1b14:	ldr	x0, [x22]
    1b18:	ldr	w0, [x0, #864]
    1b1c:	cbz	w0, 1724 <grub_iso9660_iterate_dir+0x184>
    1b20:	ldr	x0, [sp, #376]
    1b24:	cbnz	x0, 1724 <grub_iso9660_iterate_dir+0x184>
    1b28:	b	180c <grub_iso9660_iterate_dir+0x26c>
    1b2c:	nop
	...

0000000000001b48 <grub_iso9660_dir>:
    1b48:	stp	x29, x30, [sp, #-352]!
    1b4c:	mov	x29, sp
    1b50:	stp	x19, x20, [sp, #16]
    1b54:	mov	x19, x0
    1b58:	mov	x20, x1
    1b5c:	str	x2, [sp, #336]
    1b60:	str	x3, [sp, #344]
    1b64:	adrp	x0, 0 <grub_iso9660_close>
    1b68:	ldr	x0, [x0]
    1b6c:	ldr	x0, [x0]
    1b70:	bl	0 <grub_dl_ref>
    1b74:	ldr	x0, [x19]
    1b78:	bl	410 <grub_iso9660_mount>
    1b7c:	mov	x19, x0
    1b80:	cbz	x0, 1be0 <grub_iso9660_dir+0x98>
    1b84:	str	x0, [sp, #40]
    1b88:	str	xzr, [sp, #56]
    1b8c:	mov	x0, #0x1                   	// #1
    1b90:	str	x0, [sp, #48]
    1b94:	str	wzr, [sp, #64]
    1b98:	add	x0, x19, #0x9c
    1b9c:	ldp	x2, x3, [x0]
    1ba0:	add	x1, sp, #0x4
    1ba4:	stp	x2, x3, [x1, #64]
    1ba8:	ldp	x2, x3, [x0, #16]
    1bac:	stp	x2, x3, [x1, #80]
    1bb0:	ldrb	w0, [x19, #188]
    1bb4:	strb	w0, [sp, #100]
    1bb8:	mov	w5, #0x2                   	// #2
    1bbc:	adrp	x0, 0 <grub_iso9660_close>
    1bc0:	ldr	x4, [x0]
    1bc4:	adrp	x0, 0 <grub_iso9660_close>
    1bc8:	ldr	x3, [x0]
    1bcc:	add	x2, sp, #0x20
    1bd0:	add	x1, sp, #0x28
    1bd4:	mov	x0, x20
    1bd8:	bl	0 <grub_fshelp_find_file>
    1bdc:	cbz	w0, 1c10 <grub_iso9660_dir+0xc8>
    1be0:	mov	x0, x19
    1be4:	bl	0 <grub_free>
    1be8:	adrp	x0, 0 <grub_iso9660_close>
    1bec:	ldr	x0, [x0]
    1bf0:	ldr	x0, [x0]
    1bf4:	bl	0 <grub_dl_unref>
    1bf8:	adrp	x0, 0 <grub_iso9660_close>
    1bfc:	ldr	x0, [x0]
    1c00:	ldr	w0, [x0]
    1c04:	ldp	x19, x20, [sp, #16]
    1c08:	ldp	x29, x30, [sp], #352
    1c0c:	ret
    1c10:	add	x2, sp, #0x150
    1c14:	adrp	x0, 0 <grub_iso9660_close>
    1c18:	ldr	x1, [x0]
    1c1c:	ldr	x0, [sp, #32]
    1c20:	bl	15a0 <grub_iso9660_iterate_dir>
    1c24:	ldr	x0, [sp, #32]
    1c28:	add	x1, sp, #0x28
    1c2c:	cmp	x0, x1
    1c30:	b.eq	1be0 <grub_iso9660_dir+0x98>  // b.none
    1c34:	bl	0 <grub_free>
    1c38:	b	1be0 <grub_iso9660_dir+0x98>
    1c3c:	nop
	...

0000000000001c68 <grub_mod_init>:
    1c68:	stp	x29, x30, [sp, #-32]!
    1c6c:	mov	x29, sp
    1c70:	str	x19, [sp, #16]
    1c74:	mov	x19, x0
    1c78:	adrp	x0, 0 <grub_iso9660_close>
    1c7c:	ldr	x1, [x0]
    1c80:	adrp	x0, 0 <grub_iso9660_close>
    1c84:	ldr	x0, [x0]
    1c88:	bl	0 <grub_list_push>
    1c8c:	adrp	x0, 0 <grub_iso9660_close>
    1c90:	ldr	x0, [x0]
    1c94:	str	x19, [x0]
    1c98:	ldr	x19, [sp, #16]
    1c9c:	ldp	x29, x30, [sp], #32
    1ca0:	ret
    1ca4:	nop
	...

0000000000001cc0 <grub_mod_fini>:
    1cc0:	stp	x29, x30, [sp, #-16]!
    1cc4:	mov	x29, sp
    1cc8:	adrp	x0, 0 <grub_iso9660_close>
    1ccc:	ldr	x0, [x0]
    1cd0:	bl	0 <grub_list_remove>
    1cd4:	ldp	x29, x30, [sp], #16
    1cd8:	ret
    1cdc:	nop
	...
