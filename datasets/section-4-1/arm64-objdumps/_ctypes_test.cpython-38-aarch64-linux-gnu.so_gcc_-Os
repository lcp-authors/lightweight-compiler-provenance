
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_ctypes_test.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002068 <.init>:
    2068:	stp	x29, x30, [sp, #-16]!
    206c:	mov	x29, sp
    2070:	bl	21b0 <printf@plt+0x10>
    2074:	ldp	x29, x30, [sp], #16
    2078:	ret

Disassembly of section .plt:

0000000000002080 <memcpy@plt-0x20>:
    2080:	stp	x16, x30, [sp, #-16]!
    2084:	adrp	x16, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2088:	ldr	x17, [x16, #4088]
    208c:	add	x16, x16, #0xff8
    2090:	br	x17
    2094:	nop
    2098:	nop
    209c:	nop

00000000000020a0 <memcpy@plt>:
    20a0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16]
    20a8:	add	x16, x16, #0x0
    20ac:	br	x17

00000000000020b0 <strtok@plt>:
    20b0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #8]
    20b8:	add	x16, x16, #0x8
    20bc:	br	x17

00000000000020c0 <strlen@plt>:
    20c0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #16]
    20c8:	add	x16, x16, #0x10
    20cc:	br	x17

00000000000020d0 <__cxa_finalize@plt>:
    20d0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #24]
    20d8:	add	x16, x16, #0x18
    20dc:	br	x17

00000000000020e0 <qsort@plt>:
    20e0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16, #32]
    20e8:	add	x16, x16, #0x20
    20ec:	br	x17

00000000000020f0 <sqrt@plt>:
    20f0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #40]
    20f8:	add	x16, x16, #0x28
    20fc:	br	x17

0000000000002100 <malloc@plt>:
    2100:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #48]
    2108:	add	x16, x16, #0x30
    210c:	br	x17

0000000000002110 <wcslen@plt>:
    2110:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #56]
    2118:	add	x16, x16, #0x38
    211c:	br	x17

0000000000002120 <__gmon_start__@plt>:
    2120:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #64]
    2128:	add	x16, x16, #0x40
    212c:	br	x17

0000000000002130 <PyModule_Create2@plt>:
    2130:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #72]
    2138:	add	x16, x16, #0x48
    213c:	br	x17

0000000000002140 <puts@plt>:
    2140:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #80]
    2148:	add	x16, x16, #0x50
    214c:	br	x17

0000000000002150 <PyArg_ParseTuple@plt>:
    2150:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #88]
    2158:	add	x16, x16, #0x58
    215c:	br	x17

0000000000002160 <free@plt>:
    2160:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #96]
    2168:	add	x16, x16, #0x60
    216c:	br	x17

0000000000002170 <strchr@plt>:
    2170:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #104]
    2178:	add	x16, x16, #0x68
    217c:	br	x17

0000000000002180 <strcpy@plt>:
    2180:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #112]
    2188:	add	x16, x16, #0x70
    218c:	br	x17

0000000000002190 <vprintf@plt>:
    2190:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #120]
    2198:	add	x16, x16, #0x78
    219c:	br	x17

00000000000021a0 <printf@plt>:
    21a0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #128]
    21a8:	add	x16, x16, #0x80
    21ac:	br	x17

Disassembly of section .text:

00000000000021b0 <py_func@@Base-0xd4>:
    21b0:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    21b4:	ldr	x0, [x0, #4000]
    21b8:	cbz	x0, 21c0 <printf@plt+0x20>
    21bc:	b	2120 <__gmon_start__@plt>
    21c0:	ret
    21c4:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12e54>
    21c8:	add	x0, x0, #0x1c0
    21cc:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12e54>
    21d0:	add	x1, x1, #0x1c0
    21d4:	cmp	x1, x0
    21d8:	b.eq	21f0 <printf@plt+0x50>  // b.none
    21dc:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    21e0:	ldr	x1, [x1, #3960]
    21e4:	cbz	x1, 21f0 <printf@plt+0x50>
    21e8:	mov	x16, x1
    21ec:	br	x16
    21f0:	ret
    21f4:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12e54>
    21f8:	add	x0, x0, #0x1c0
    21fc:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12e54>
    2200:	add	x1, x1, #0x1c0
    2204:	sub	x1, x1, x0
    2208:	mov	x2, #0x2                   	// #2
    220c:	asr	x1, x1, #3
    2210:	sdiv	x1, x1, x2
    2214:	cbz	x1, 222c <printf@plt+0x8c>
    2218:	adrp	x2, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    221c:	ldr	x2, [x2, #4048]
    2220:	cbz	x2, 222c <printf@plt+0x8c>
    2224:	mov	x16, x2
    2228:	br	x16
    222c:	ret
    2230:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12e54>
    2234:	ldrb	w1, [x0, #448]
    2238:	cbnz	w1, 227c <printf@plt+0xdc>
    223c:	stp	x29, x30, [sp, #-32]!
    2240:	mov	x29, sp
    2244:	str	x19, [sp, #16]
    2248:	mov	x19, x0
    224c:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2250:	ldr	x0, [x0, #3968]
    2254:	cbz	x0, 2264 <printf@plt+0xc4>
    2258:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12e54>
    225c:	ldr	x0, [x0, #136]
    2260:	bl	20d0 <__cxa_finalize@plt>
    2264:	bl	21c4 <printf@plt+0x24>
    2268:	mov	w0, #0x1                   	// #1
    226c:	strb	w0, [x19, #448]
    2270:	ldr	x19, [sp, #16]
    2274:	ldp	x29, x30, [sp], #32
    2278:	ret
    227c:	ret
    2280:	b	21f4 <printf@plt+0x54>

0000000000002284 <py_func@@Base>:
    2284:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2288:	ldr	x0, [x0, #4008]
    228c:	ldr	x1, [x0]
    2290:	add	x1, x1, #0x1
    2294:	str	x1, [x0]
    2298:	ret
    229c:	stp	x29, x30, [sp, #-32]!
    22a0:	mov	x2, x1
    22a4:	mov	x29, sp
    22a8:	stp	x19, x20, [sp, #16]
    22ac:	mov	x19, x1
    22b0:	mov	x1, x0
    22b4:	mov	x20, x0
    22b8:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    22bc:	add	x0, x0, #0xd70
    22c0:	bl	21a0 <printf@plt>
    22c4:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    22c8:	add	x0, x0, #0xd85
    22cc:	bl	2140 <puts@plt>
    22d0:	mov	w0, #0x20                  	// #32
    22d4:	blr	x20
    22d8:	mov	x20, x0
    22dc:	blr	x19
    22e0:	mov	x1, x20
    22e4:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    22e8:	ldp	x19, x20, [sp, #16]
    22ec:	add	x0, x0, #0xd8d
    22f0:	ldp	x29, x30, [sp], #32
    22f4:	b	21a0 <printf@plt>

00000000000022f8 <py_func_si@@Base>:
    22f8:	stp	x29, x30, [sp, #-32]!
    22fc:	mov	x0, x1
    2300:	adrp	x1, 4000 <PyInit__ctypes_test@@Base+0xe54>
    2304:	mov	x29, sp
    2308:	add	x3, sp, #0x14
    230c:	add	x2, sp, #0x18
    2310:	add	x1, x1, #0xe43
    2314:	bl	2150 <PyArg_ParseTuple@plt>
    2318:	cbz	w0, 2338 <py_func_si@@Base+0x40>
    231c:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2320:	ldr	x0, [x0, #4008]
    2324:	ldr	x1, [x0]
    2328:	add	x1, x1, #0x1
    232c:	str	x1, [x0]
    2330:	ldp	x29, x30, [sp], #32
    2334:	ret
    2338:	mov	x0, #0x0                   	// #0
    233c:	b	2330 <py_func_si@@Base+0x38>

0000000000002340 <_testfunc_cbk_reg_int@@Base>:
    2340:	mul	w4, w4, w4
    2344:	mov	x16, x5
    2348:	mul	w3, w3, w3
    234c:	mul	w2, w2, w2
    2350:	mul	w1, w1, w1
    2354:	mul	w0, w0, w0
    2358:	br	x16

000000000000235c <_testfunc_cbk_reg_double@@Base>:
    235c:	fmul	d4, d4, d4
    2360:	fmul	d3, d3, d3
    2364:	fmul	d2, d2, d2
    2368:	fmul	d1, d1, d1
    236c:	fmul	d0, d0, d0
    2370:	mov	x16, x0
    2374:	br	x16

0000000000002378 <_testfunc_cbk_large_struct@@Base>:
    2378:	stp	x29, x30, [sp, #-48]!
    237c:	mov	x29, sp
    2380:	ldp	x2, x3, [x0]
    2384:	stp	x2, x3, [sp, #16]
    2388:	ldr	x0, [x0, #16]
    238c:	str	x0, [sp, #32]
    2390:	add	x0, sp, #0x10
    2394:	blr	x1
    2398:	ldp	x29, x30, [sp], #48
    239c:	ret

00000000000023a0 <_testfunc_large_struct_update_value@@Base>:
    23a0:	mov	x1, #0xf00d                	// #61453
    23a4:	movk	x1, #0xbad, lsl #16
    23a8:	str	x1, [x0]
    23ac:	str	x1, [x0, #8]
    23b0:	str	x1, [x0, #16]
    23b4:	ret

00000000000023b8 <_testfunc_reg_struct_update_value@@Base>:
    23b8:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    23bc:	ldr	x1, [x1, #4040]
    23c0:	str	x0, [x1]
    23c4:	ret

00000000000023c8 <_testfunc_array_in_struct1@@Base>:
    23c8:	sub	sp, sp, #0x10
    23cc:	mov	x3, sp
    23d0:	stp	x0, x1, [sp]
    23d4:	mov	x1, #0x0                   	// #0
    23d8:	mov	w0, #0x0                   	// #0
    23dc:	ldrb	w2, [x1, x3]
    23e0:	add	x1, x1, #0x1
    23e4:	cmp	x1, #0x10
    23e8:	add	w0, w0, w2
    23ec:	b.ne	23dc <_testfunc_array_in_struct1@@Base+0x14>  // b.any
    23f0:	add	sp, sp, #0x10
    23f4:	ret

00000000000023f8 <_testfunc_array_in_struct2@@Base>:
    23f8:	movi	d2, #0x0
    23fc:	fadd	d0, d0, d2
    2400:	fadd	d0, d0, d1
    2404:	ret

0000000000002408 <_testfunc_array_in_struct2a@@Base>:
    2408:	fmov	w2, s0
    240c:	mov	x0, #0x0                   	// #0
    2410:	mov	x1, #0x0                   	// #0
    2414:	bfxil	x0, x2, #0, #32
    2418:	fmov	w2, s1
    241c:	movi	d1, #0x0
    2420:	bfi	x0, x2, #32, #32
    2424:	fmov	w2, s2
    2428:	bfxil	x1, x2, #0, #32
    242c:	fmov	w2, s3
    2430:	bfi	x1, x2, #32, #32
    2434:	sxtw	x2, w0
    2438:	fmov	d0, x2
    243c:	fcvt	d0, s0
    2440:	fadd	d1, d0, d1
    2444:	fmov	d0, x0
    2448:	sxtw	x0, w1
    244c:	ushr	d0, d0, #32
    2450:	fcvt	d0, s0
    2454:	fadd	d0, d0, d1
    2458:	fmov	d1, x0
    245c:	fcvt	d1, s1
    2460:	fadd	d0, d1, d0
    2464:	fmov	d1, x1
    2468:	ushr	d1, d1, #32
    246c:	fcvt	d1, s1
    2470:	fadd	d0, d1, d0
    2474:	ret

0000000000002478 <_testfunc_union_by_value1@@Base>:
    2478:	asr	x1, x0, #32
    247c:	add	x1, x1, w0, sxtw
    2480:	add	x0, x1, x0
    2484:	ret

0000000000002488 <_testfunc_union_by_value2@@Base>:
    2488:	ldr	w1, [x0]
    248c:	ldr	w0, [x0, #8]
    2490:	add	w0, w1, w0
    2494:	sxtw	x0, w0
    2498:	ret

000000000000249c <_testfunc_union_by_reference1@@Base>:
    249c:	mov	x1, x0
    24a0:	ldr	x0, [x0]
    24a4:	str	xzr, [x1]
    24a8:	ret

00000000000024ac <_testfunc_union_by_reference2@@Base>:
    24ac:	ldp	w1, w2, [x0]
    24b0:	str	xzr, [x0]
    24b4:	add	w1, w1, w2
    24b8:	sxtw	x0, w1
    24bc:	ret

00000000000024c0 <_testfunc_union_by_reference3@@Base>:
    24c0:	ldr	w2, [x0, #8]
    24c4:	ldr	w1, [x0]
    24c8:	stp	xzr, xzr, [x0]
    24cc:	add	w1, w1, w2
    24d0:	ldr	w2, [x0, #24]
    24d4:	stp	xzr, xzr, [x0, #16]
    24d8:	add	w1, w1, w2
    24dc:	sxtw	x0, w1
    24e0:	ret

00000000000024e4 <_testfunc_bitfield_by_value1@@Base>:
    24e4:	sbfx	x1, x0, #0, #1
    24e8:	sbfx	x2, x0, #1, #2
    24ec:	add	w1, w2, w1, sxtb
    24f0:	sbfx	x2, x0, #3, #3
    24f4:	sbfx	x0, x0, #6, #2
    24f8:	add	w0, w2, w0
    24fc:	add	w0, w1, w0
    2500:	sxtw	x0, w0
    2504:	ret

0000000000002508 <_testfunc_bitfield_by_reference1@@Base>:
    2508:	ldrb	w1, [x0]
    250c:	str	wzr, [x0]
    2510:	sbfx	x2, x1, #0, #1
    2514:	sbfx	x3, x1, #1, #2
    2518:	add	w2, w3, w2, sxtb
    251c:	sbfx	x3, x1, #3, #3
    2520:	sbfx	x1, x1, #6, #2
    2524:	add	w1, w3, w1
    2528:	add	w1, w2, w1
    252c:	sxtw	x0, w1
    2530:	ret

0000000000002534 <_testfunc_bitfield_by_reference2@@Base>:
    2534:	ldrb	w1, [x0]
    2538:	str	wzr, [x0]
    253c:	and	w2, w1, #0x1
    2540:	ubfx	x3, x1, #1, #2
    2544:	add	w2, w2, w3
    2548:	ubfx	x3, x1, #3, #3
    254c:	ubfx	x1, x1, #6, #2
    2550:	add	w1, w3, w1
    2554:	add	w1, w2, w1
    2558:	sxtw	x0, w1
    255c:	ret

0000000000002560 <_testfunc_bitfield_by_value2@@Base>:
    2560:	sbfx	x1, x0, #0, #1
    2564:	sbfx	x2, x0, #0, #3
    2568:	sbfx	x0, x0, #0, #2
    256c:	add	w1, w2, w1, sxtb
    2570:	add	w0, w1, w0, lsl #1
    2574:	sxtw	x0, w0
    2578:	ret

000000000000257c <testfunc_array@@Base>:
    257c:	ldp	w1, w2, [x0]
    2580:	ldp	w3, w4, [x0, #8]
    2584:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    2588:	add	x0, x0, #0xda5
    258c:	b	21a0 <printf@plt>

0000000000002590 <testfunc_Ddd@@Base>:
    2590:	stp	x29, x30, [sp, #-48]!
    2594:	mov	x29, sp
    2598:	stp	d1, d0, [sp, #32]
    259c:	fmul	d0, d0, d1
    25a0:	bl	4bf8 <PyInit__ctypes_test@@Base+0x1a4c>
    25a4:	str	q0, [sp, #16]
    25a8:	add	x2, sp, #0x20
    25ac:	add	x1, sp, #0x28
    25b0:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    25b4:	add	x0, x0, #0xdc1
    25b8:	bl	21a0 <printf@plt>
    25bc:	ldp	d1, d0, [sp, #32]
    25c0:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    25c4:	add	x0, x0, #0xdd7
    25c8:	bl	21a0 <printf@plt>
    25cc:	ldr	q2, [sp, #16]
    25d0:	ldp	x29, x30, [sp], #48
    25d4:	mov	v0.16b, v2.16b
    25d8:	ret

00000000000025dc <testfunc_DDD@@Base>:
    25dc:	stp	x29, x30, [sp, #-64]!
    25e0:	mov	x29, sp
    25e4:	str	q1, [sp, #32]
    25e8:	str	q0, [sp, #48]
    25ec:	bl	438c <PyInit__ctypes_test@@Base+0x11e0>
    25f0:	add	x2, sp, #0x20
    25f4:	add	x1, sp, #0x30
    25f8:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    25fc:	add	x0, x0, #0xded
    2600:	str	q0, [sp, #16]
    2604:	bl	21a0 <printf@plt>
    2608:	ldr	q1, [sp, #32]
    260c:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    2610:	ldr	q0, [sp, #48]
    2614:	add	x0, x0, #0xe03
    2618:	bl	21a0 <printf@plt>
    261c:	ldr	q2, [sp, #16]
    2620:	ldp	x29, x30, [sp], #64
    2624:	mov	v0.16b, v2.16b
    2628:	ret

000000000000262c <testfunc_iii@@Base>:
    262c:	stp	x29, x30, [sp, #-48]!
    2630:	mov	x29, sp
    2634:	str	x19, [sp, #16]
    2638:	mul	w19, w0, w1
    263c:	add	x2, sp, #0x28
    2640:	stp	w1, w0, [sp, #40]
    2644:	add	x1, sp, #0x2c
    2648:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    264c:	add	x0, x0, #0xe1b
    2650:	bl	21a0 <printf@plt>
    2654:	mov	w0, w19
    2658:	ldr	x19, [sp, #16]
    265c:	ldp	x29, x30, [sp], #48
    2660:	ret

0000000000002664 <myprintf@@Base>:
    2664:	stp	x29, x30, [sp, #-272]!
    2668:	mov	x29, sp
    266c:	stp	x1, x2, [sp, #216]
    2670:	add	x1, sp, #0x110
    2674:	stp	x1, x1, [sp, #48]
    2678:	add	x1, sp, #0xd0
    267c:	str	x1, [sp, #64]
    2680:	mov	w1, #0xffffffc8            	// #-56
    2684:	str	w1, [sp, #72]
    2688:	mov	w1, #0xffffff80            	// #-128
    268c:	str	w1, [sp, #76]
    2690:	add	x1, sp, #0x10
    2694:	stp	x3, x4, [sp, #232]
    2698:	ldp	x2, x3, [sp, #48]
    269c:	stp	x2, x3, [sp, #16]
    26a0:	ldp	x2, x3, [sp, #64]
    26a4:	stp	x2, x3, [sp, #32]
    26a8:	str	q0, [sp, #80]
    26ac:	str	q1, [sp, #96]
    26b0:	str	q2, [sp, #112]
    26b4:	str	q3, [sp, #128]
    26b8:	str	q4, [sp, #144]
    26bc:	str	q5, [sp, #160]
    26c0:	str	q6, [sp, #176]
    26c4:	str	q7, [sp, #192]
    26c8:	stp	x5, x6, [sp, #248]
    26cc:	str	x7, [sp, #264]
    26d0:	bl	2190 <vprintf@plt>
    26d4:	ldp	x29, x30, [sp], #272
    26d8:	ret

00000000000026dc <my_strtok@@Base>:
    26dc:	b	20b0 <strtok@plt>

00000000000026e0 <my_strchr@@Base>:
    26e0:	b	2170 <strchr@plt>

00000000000026e4 <my_sqrt@@Base>:
    26e4:	b	20f0 <sqrt@plt>

00000000000026e8 <my_qsort@@Base>:
    26e8:	b	20e0 <qsort@plt>

00000000000026ec <_testfunc_ai8@@Base>:
    26ec:	ret

00000000000026f0 <_testfunc_v@@Base>:
    26f0:	add	w0, w0, w1
    26f4:	str	w0, [x2]
    26f8:	ret

00000000000026fc <_testfunc_i_bhilfd@@Base>:
    26fc:	add	w2, w2, w1, sxth
    2700:	add	w2, w2, w0, sxtb
    2704:	add	x2, x3, w2, sxtw
    2708:	scvtf	s2, x2
    270c:	fadd	s2, s2, s0
    2710:	fcvt	d2, s2
    2714:	fadd	d2, d2, d1
    2718:	fcvtzs	w0, d2
    271c:	ret

0000000000002720 <_testfunc_f_bhilfd@@Base>:
    2720:	add	w2, w2, w1, sxth
    2724:	add	w2, w2, w0, sxtb
    2728:	add	x2, x3, w2, sxtw
    272c:	scvtf	s2, x2
    2730:	fadd	s0, s2, s0
    2734:	fcvt	d0, s0
    2738:	fadd	d0, d0, d1
    273c:	fcvt	s0, d0
    2740:	ret

0000000000002744 <_testfunc_d_bhilfd@@Base>:
    2744:	add	w2, w2, w1, sxth
    2748:	add	w2, w2, w0, sxtb
    274c:	add	x2, x3, w2, sxtw
    2750:	scvtf	s2, x2
    2754:	fadd	s2, s2, s0
    2758:	fcvt	d2, s2
    275c:	fadd	d0, d2, d1
    2760:	ret

0000000000002764 <_testfunc_D_bhilfD@@Base>:
    2764:	add	w2, w2, w1, sxth
    2768:	stp	x29, x30, [sp, #-32]!
    276c:	add	w2, w2, w0, sxtb
    2770:	mov	x29, sp
    2774:	add	x2, x3, w2, sxtw
    2778:	str	q1, [sp, #16]
    277c:	scvtf	s2, x2
    2780:	fadd	s0, s2, s0
    2784:	bl	4b38 <PyInit__ctypes_test@@Base+0x198c>
    2788:	ldr	q1, [sp, #16]
    278c:	bl	31bc <PyInit__ctypes_test@@Base+0x10>
    2790:	ldp	x29, x30, [sp], #32
    2794:	ret

0000000000002798 <_testfunc_p_p@@Base>:
    2798:	ret

000000000000279c <_testfunc_c_p_p@@Base>:
    279c:	ldr	w0, [x0]
    27a0:	add	x0, x1, w0, sxtw #3
    27a4:	ldur	x0, [x0, #-8]
    27a8:	ret

00000000000027ac <get_strchr@@Base>:
    27ac:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    27b0:	ldr	x0, [x0, #4016]
    27b4:	ret

00000000000027b8 <my_strdup@@Base>:
    27b8:	stp	x29, x30, [sp, #-32]!
    27bc:	mov	x29, sp
    27c0:	stp	x19, x20, [sp, #16]
    27c4:	mov	x20, x0
    27c8:	bl	20c0 <strlen@plt>
    27cc:	add	x0, x0, #0x1
    27d0:	bl	2100 <malloc@plt>
    27d4:	mov	x19, x0
    27d8:	cbz	x0, 27e4 <my_strdup@@Base+0x2c>
    27dc:	mov	x1, x20
    27e0:	bl	2180 <strcpy@plt>
    27e4:	mov	x0, x19
    27e8:	ldp	x19, x20, [sp, #16]
    27ec:	ldp	x29, x30, [sp], #32
    27f0:	ret

00000000000027f4 <my_free@@Base>:
    27f4:	b	2160 <free@plt>

00000000000027f8 <my_wcsdup@@Base>:
    27f8:	stp	x29, x30, [sp, #-48]!
    27fc:	mov	x29, sp
    2800:	stp	x19, x20, [sp, #16]
    2804:	str	x21, [sp, #32]
    2808:	mov	x21, x0
    280c:	bl	2110 <wcslen@plt>
    2810:	add	x19, x0, #0x1
    2814:	lsl	x19, x19, #2
    2818:	mov	x0, x19
    281c:	bl	2100 <malloc@plt>
    2820:	mov	x20, x0
    2824:	cbz	x0, 2834 <my_wcsdup@@Base+0x3c>
    2828:	mov	x2, x19
    282c:	mov	x1, x21
    2830:	bl	20a0 <memcpy@plt>
    2834:	mov	x0, x20
    2838:	ldp	x19, x20, [sp, #16]
    283c:	ldr	x21, [sp, #32]
    2840:	ldp	x29, x30, [sp], #48
    2844:	ret

0000000000002848 <my_wcslen@@Base>:
    2848:	b	2110 <wcslen@plt>

000000000000284c <_testfunc_callfuncp@@Base>:
    284c:	stp	x29, x30, [sp, #-32]!
    2850:	mov	w1, #0x2                   	// #2
    2854:	mov	x29, sp
    2858:	str	x19, [sp, #16]
    285c:	mov	x19, x0
    2860:	mov	w0, #0x1                   	// #1
    2864:	ldr	x2, [x19]
    2868:	blr	x2
    286c:	ldr	x2, [x19, #8]
    2870:	mov	w1, #0x4                   	// #4
    2874:	mov	w0, #0x3                   	// #3
    2878:	blr	x2
    287c:	mov	w0, #0x0                   	// #0
    2880:	ldr	x19, [sp, #16]
    2884:	ldp	x29, x30, [sp], #32
    2888:	ret

000000000000288c <_testfunc_deref_pointer@@Base>:
    288c:	ldr	w0, [x0]
    2890:	ret

0000000000002894 <_testfunc_callback_with_pointer@@Base>:
    2894:	mov	x1, x0
    2898:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    289c:	add	x0, x0, #0xe98
    28a0:	stp	x29, x30, [sp, #-64]!
    28a4:	mov	x29, sp
    28a8:	ldp	x2, x3, [x0]
    28ac:	stp	x2, x3, [sp, #24]
    28b0:	ldp	x2, x3, [x0, #16]
    28b4:	stp	x2, x3, [sp, #40]
    28b8:	ldr	x0, [x0, #32]
    28bc:	str	x0, [sp, #56]
    28c0:	add	x0, sp, #0x18
    28c4:	blr	x1
    28c8:	ldp	x29, x30, [sp], #64
    28cc:	ret

00000000000028d0 <_testfunc_q_bhilfdq@@Base>:
    28d0:	add	w2, w2, w1, sxth
    28d4:	add	w2, w2, w0, sxtb
    28d8:	add	x2, x3, w2, sxtw
    28dc:	scvtf	s2, x2
    28e0:	fadd	s2, s2, s0
    28e4:	fcvt	d2, s2
    28e8:	fadd	d2, d2, d1
    28ec:	scvtf	d1, x4
    28f0:	fadd	d2, d2, d1
    28f4:	fcvtzs	x0, d2
    28f8:	ret

00000000000028fc <_testfunc_q_bhilfd@@Base>:
    28fc:	add	w2, w2, w1, sxth
    2900:	add	w2, w2, w0, sxtb
    2904:	add	x2, x3, w2, sxtw
    2908:	scvtf	s2, x2
    290c:	fadd	s2, s2, s0
    2910:	fcvt	d2, s2
    2914:	fadd	d2, d2, d1
    2918:	fcvtzs	x0, d2
    291c:	ret

0000000000002920 <_testfunc_callback_i_if@@Base>:
    2920:	stp	x29, x30, [sp, #-48]!
    2924:	mov	x29, sp
    2928:	stp	x19, x20, [sp, #16]
    292c:	mov	w19, w0
    2930:	mov	w20, #0x0                   	// #0
    2934:	stp	x21, x22, [sp, #32]
    2938:	mov	x21, x1
    293c:	mov	w22, #0x2                   	// #2
    2940:	cbnz	w19, 2958 <_testfunc_callback_i_if@@Base+0x38>
    2944:	mov	w0, w20
    2948:	ldp	x19, x20, [sp, #16]
    294c:	ldp	x21, x22, [sp, #32]
    2950:	ldp	x29, x30, [sp], #48
    2954:	ret
    2958:	mov	w0, w19
    295c:	blr	x21
    2960:	sdiv	w19, w19, w22
    2964:	add	w20, w20, w0
    2968:	b	2940 <_testfunc_callback_i_if@@Base+0x20>

000000000000296c <_testfunc_callback_q_qf@@Base>:
    296c:	stp	x29, x30, [sp, #-48]!
    2970:	mov	x29, sp
    2974:	stp	x19, x20, [sp, #16]
    2978:	mov	x19, x0
    297c:	mov	x20, #0x0                   	// #0
    2980:	stp	x21, x22, [sp, #32]
    2984:	mov	x21, x1
    2988:	mov	x22, #0x2                   	// #2
    298c:	cbnz	x19, 29a4 <_testfunc_callback_q_qf@@Base+0x38>
    2990:	mov	x0, x20
    2994:	ldp	x19, x20, [sp, #16]
    2998:	ldp	x21, x22, [sp, #32]
    299c:	ldp	x29, x30, [sp], #48
    29a0:	ret
    29a4:	mov	x0, x19
    29a8:	blr	x21
    29ac:	sdiv	x19, x19, x22
    29b0:	add	x20, x20, x0
    29b4:	b	298c <_testfunc_callback_q_qf@@Base+0x20>

00000000000029b8 <getSPAMANDEGGS@@Base>:
    29b8:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    29bc:	ldr	x1, [x1, #3992]
    29c0:	str	x1, [x0]
    29c4:	mov	w0, #0x1                   	// #1
    29c8:	ret

00000000000029cc <_testfunc_byval@@Base>:
    29cc:	asr	x2, x0, #32
    29d0:	cbz	x1, 29d8 <_testfunc_byval@@Base+0xc>
    29d4:	stp	w0, w2, [x1]
    29d8:	add	w0, w2, w0
    29dc:	ret

00000000000029e0 <get_an_integer@@Base>:
    29e0:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    29e4:	ldr	x0, [x0, #4056]
    29e8:	ldr	w0, [x0]
    29ec:	ret

00000000000029f0 <integrate@@Base>:
    29f0:	stp	x29, x30, [sp, #-80]!
    29f4:	mov	x29, sp
    29f8:	stp	d10, d11, [sp, #48]
    29fc:	scvtf	d10, x1
    2a00:	fmov	d11, d1
    2a04:	stp	d12, d13, [sp, #64]
    2a08:	fsub	d12, d1, d0
    2a0c:	movi	d13, #0x0
    2a10:	stp	d8, d9, [sp, #32]
    2a14:	fmov	d8, #5.000000000000000000e-01
    2a18:	fmov	d9, d0
    2a1c:	fdiv	d12, d12, d10
    2a20:	str	x19, [sp, #16]
    2a24:	mov	x19, x0
    2a28:	fmul	d8, d12, d8
    2a2c:	fadd	d8, d8, d0
    2a30:	fsub	d2, d11, d8
    2a34:	fsub	d0, d8, d9
    2a38:	fmul	d2, d2, d0
    2a3c:	fcmpe	d2, #0.0
    2a40:	b.gt	2a60 <integrate@@Base+0x70>
    2a44:	fdiv	d0, d13, d10
    2a48:	ldr	x19, [sp, #16]
    2a4c:	ldp	d8, d9, [sp, #32]
    2a50:	ldp	d10, d11, [sp, #48]
    2a54:	ldp	d12, d13, [sp, #64]
    2a58:	ldp	x29, x30, [sp], #80
    2a5c:	ret
    2a60:	fmov	d0, d8
    2a64:	blr	x19
    2a68:	fadd	d13, d13, d0
    2a6c:	fadd	d8, d8, d12
    2a70:	b	2a30 <integrate@@Base+0x40>

0000000000002a74 <library_get@@Base>:
    2a74:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2a78:	ldr	x0, [x0, #4064]
    2a7c:	ret

0000000000002a80 <_py_func_si@@Base>:
    2a80:	ret

0000000000002a84 <_py_func@@Base>:
    2a84:	ret

0000000000002a88 <set_bitfields@@Base>:
    2a88:	and	w1, w1, #0xff
    2a8c:	sub	w1, w1, #0x41
    2a90:	cmp	w1, #0x12
    2a94:	b.hi	2abc <set_bitfields@@Base+0x34>  // b.pmore
    2a98:	adrp	x3, 4000 <PyInit__ctypes_test@@Base+0xe54>
    2a9c:	add	x3, x3, #0xe70
    2aa0:	ldrb	w1, [x3, w1, uxtw]
    2aa4:	adr	x3, 2ab0 <set_bitfields@@Base+0x28>
    2aa8:	add	x1, x3, w1, sxtb #2
    2aac:	br	x1
    2ab0:	ldrb	w1, [x0]
    2ab4:	bfxil	w1, w2, #0, #1
    2ab8:	strb	w1, [x0]
    2abc:	ret
    2ac0:	ldrb	w1, [x0]
    2ac4:	bfi	w1, w2, #1, #2
    2ac8:	b	2ab8 <set_bitfields@@Base+0x30>
    2acc:	ldrb	w1, [x0]
    2ad0:	bfi	w1, w2, #3, #3
    2ad4:	b	2ab8 <set_bitfields@@Base+0x30>
    2ad8:	ldrh	w1, [x0]
    2adc:	bfi	w1, w2, #6, #4
    2ae0:	strh	w1, [x0]
    2ae4:	b	2abc <set_bitfields@@Base+0x34>
    2ae8:	ldrb	w1, [x0, #1]
    2aec:	bfi	w1, w2, #2, #5
    2af0:	strb	w1, [x0, #1]
    2af4:	b	2abc <set_bitfields@@Base+0x34>
    2af8:	ldr	w1, [x0]
    2afc:	bfi	w1, w2, #15, #6
    2b00:	str	w1, [x0]
    2b04:	b	2abc <set_bitfields@@Base+0x34>
    2b08:	ldrh	w1, [x0, #2]
    2b0c:	bfi	w1, w2, #5, #7
    2b10:	strh	w1, [x0, #2]
    2b14:	b	2abc <set_bitfields@@Base+0x34>
    2b18:	strb	w2, [x0, #4]
    2b1c:	b	2abc <set_bitfields@@Base+0x34>
    2b20:	ldr	w1, [x0, #4]
    2b24:	bfi	w1, w2, #8, #9
    2b28:	str	w1, [x0, #4]
    2b2c:	b	2abc <set_bitfields@@Base+0x34>
    2b30:	ldrb	w1, [x0, #6]
    2b34:	bfi	w1, w2, #1, #1
    2b38:	strb	w1, [x0, #6]
    2b3c:	b	2abc <set_bitfields@@Base+0x34>
    2b40:	ldrb	w1, [x0, #6]
    2b44:	bfi	w1, w2, #2, #2
    2b48:	b	2b38 <set_bitfields@@Base+0xb0>
    2b4c:	ldrb	w1, [x0, #6]
    2b50:	bfi	w1, w2, #4, #3
    2b54:	b	2b38 <set_bitfields@@Base+0xb0>
    2b58:	ldrh	w1, [x0, #6]
    2b5c:	bfi	w1, w2, #7, #4
    2b60:	strh	w1, [x0, #6]
    2b64:	b	2abc <set_bitfields@@Base+0x34>
    2b68:	ldrb	w1, [x0, #7]
    2b6c:	bfi	w1, w2, #3, #5
    2b70:	strb	w1, [x0, #7]
    2b74:	b	2abc <set_bitfields@@Base+0x34>
    2b78:	ldrb	w1, [x0, #8]
    2b7c:	bfxil	w1, w2, #0, #6
    2b80:	strb	w1, [x0, #8]
    2b84:	b	2abc <set_bitfields@@Base+0x34>
    2b88:	ldrh	w1, [x0, #8]
    2b8c:	bfi	w1, w2, #6, #7
    2b90:	strh	w1, [x0, #8]
    2b94:	b	2abc <set_bitfields@@Base+0x34>

0000000000002b98 <unpack_bitfields@@Base>:
    2b98:	and	w1, w1, #0xff
    2b9c:	sub	w1, w1, #0x41
    2ba0:	cmp	w1, #0x12
    2ba4:	b.hi	2c80 <unpack_bitfields@@Base+0xe8>  // b.pmore
    2ba8:	adrp	x2, 4000 <PyInit__ctypes_test@@Base+0xe54>
    2bac:	add	x2, x2, #0xe84
    2bb0:	ldrb	w1, [x2, w1, uxtw]
    2bb4:	adr	x2, 2bc0 <unpack_bitfields@@Base+0x28>
    2bb8:	add	x1, x2, w1, sxtb #2
    2bbc:	br	x1
    2bc0:	ldrb	w0, [x0]
    2bc4:	sbfx	x0, x0, #0, #1
    2bc8:	sxtb	w0, w0
    2bcc:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2bd0:	ldrb	w0, [x0]
    2bd4:	sbfx	x0, x0, #1, #2
    2bd8:	ret
    2bdc:	ldrb	w0, [x0]
    2be0:	sbfx	x0, x0, #3, #3
    2be4:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2be8:	ldrh	w0, [x0]
    2bec:	sbfx	x0, x0, #6, #4
    2bf0:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2bf4:	ldrb	w0, [x0, #1]
    2bf8:	sbfx	x0, x0, #2, #5
    2bfc:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2c00:	ldr	w0, [x0]
    2c04:	sbfx	x0, x0, #15, #6
    2c08:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2c0c:	ldrh	w0, [x0, #2]
    2c10:	sbfx	x0, x0, #5, #7
    2c14:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2c18:	ldrsb	w0, [x0, #4]
    2c1c:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2c20:	ldr	w0, [x0, #4]
    2c24:	sbfx	x0, x0, #8, #9
    2c28:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2c2c:	ldrb	w0, [x0, #6]
    2c30:	sbfx	x0, x0, #1, #1
    2c34:	b	2bc8 <unpack_bitfields@@Base+0x30>
    2c38:	ldrb	w0, [x0, #6]
    2c3c:	sbfx	x0, x0, #2, #2
    2c40:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2c44:	ldrb	w0, [x0, #6]
    2c48:	sbfx	x0, x0, #4, #3
    2c4c:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2c50:	ldrh	w0, [x0, #6]
    2c54:	sbfx	x0, x0, #7, #4
    2c58:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2c5c:	ldrb	w0, [x0, #7]
    2c60:	sbfx	x0, x0, #3, #5
    2c64:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2c68:	ldrb	w0, [x0, #8]
    2c6c:	sbfx	x0, x0, #0, #6
    2c70:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2c74:	ldrh	w0, [x0, #8]
    2c78:	sbfx	x0, x0, #6, #7
    2c7c:	b	2bd8 <unpack_bitfields@@Base+0x40>
    2c80:	mov	w0, #0x3e7                 	// #999
    2c84:	b	2bd8 <unpack_bitfields@@Base+0x40>

0000000000002c88 <tf_b@@Base>:
    2c88:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2c8c:	sxtb	w2, w0
    2c90:	sxtb	x0, w0
    2c94:	ldr	x1, [x1, #4024]
    2c98:	str	x0, [x1]
    2c9c:	mov	w0, #0x3                   	// #3
    2ca0:	sdiv	w0, w2, w0
    2ca4:	ret

0000000000002ca8 <tf_B@@Base>:
    2ca8:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2cac:	and	w2, w0, #0xff
    2cb0:	and	x0, x0, #0xff
    2cb4:	ldr	x1, [x1, #4032]
    2cb8:	str	x0, [x1]
    2cbc:	mov	w0, #0x3                   	// #3
    2cc0:	udiv	w0, w2, w0
    2cc4:	ret

0000000000002cc8 <tf_h@@Base>:
    2cc8:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2ccc:	sxth	w2, w0
    2cd0:	sxth	x0, w0
    2cd4:	ldr	x1, [x1, #4024]
    2cd8:	str	x0, [x1]
    2cdc:	mov	w0, #0x3                   	// #3
    2ce0:	sdiv	w0, w2, w0
    2ce4:	ret

0000000000002ce8 <tf_H@@Base>:
    2ce8:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2cec:	and	w2, w0, #0xffff
    2cf0:	and	x0, x0, #0xffff
    2cf4:	ldr	x1, [x1, #4032]
    2cf8:	str	x0, [x1]
    2cfc:	mov	w0, #0x3                   	// #3
    2d00:	udiv	w0, w2, w0
    2d04:	ret

0000000000002d08 <tf_i@@Base>:
    2d08:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2d0c:	sxtw	x2, w0
    2d10:	ldr	x1, [x1, #4024]
    2d14:	str	x2, [x1]
    2d18:	mov	w1, #0x3                   	// #3
    2d1c:	sdiv	w0, w0, w1
    2d20:	ret

0000000000002d24 <tf_I@@Base>:
    2d24:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2d28:	mov	w2, w0
    2d2c:	ldr	x1, [x1, #4032]
    2d30:	str	x2, [x1]
    2d34:	mov	w1, #0x3                   	// #3
    2d38:	udiv	w0, w0, w1
    2d3c:	ret

0000000000002d40 <tf_l@@Base>:
    2d40:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2d44:	ldr	x1, [x1, #4024]
    2d48:	str	x0, [x1]
    2d4c:	mov	x1, #0x3                   	// #3
    2d50:	sdiv	x0, x0, x1
    2d54:	ret

0000000000002d58 <tf_L@@Base>:
    2d58:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2d5c:	ldr	x1, [x1, #4032]
    2d60:	str	x0, [x1]
    2d64:	mov	x1, #0x3                   	// #3
    2d68:	udiv	x0, x0, x1
    2d6c:	ret

0000000000002d70 <tf_q@@Base>:
    2d70:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2d74:	ldr	x1, [x1, #4024]
    2d78:	str	x0, [x1]
    2d7c:	mov	x1, #0x3                   	// #3
    2d80:	sdiv	x0, x0, x1
    2d84:	ret

0000000000002d88 <tf_Q@@Base>:
    2d88:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2d8c:	ldr	x1, [x1, #4032]
    2d90:	str	x0, [x1]
    2d94:	mov	x1, #0x3                   	// #3
    2d98:	udiv	x0, x0, x1
    2d9c:	ret

0000000000002da0 <tf_f@@Base>:
    2da0:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2da4:	fcvtzs	x1, s0
    2da8:	fmov	s1, #3.000000000000000000e+00
    2dac:	ldr	x0, [x0, #4024]
    2db0:	fdiv	s0, s0, s1
    2db4:	str	x1, [x0]
    2db8:	ret

0000000000002dbc <tf_d@@Base>:
    2dbc:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2dc0:	fcvtzs	d1, d0
    2dc4:	ldr	x0, [x0, #4024]
    2dc8:	str	d1, [x0]
    2dcc:	fmov	d1, #3.000000000000000000e+00
    2dd0:	fdiv	d0, d0, d1
    2dd4:	ret

0000000000002dd8 <tf_D@@Base>:
    2dd8:	stp	x29, x30, [sp, #-32]!
    2ddc:	mov	x29, sp
    2de0:	str	q0, [sp, #16]
    2de4:	bl	4a18 <PyInit__ctypes_test@@Base+0x186c>
    2de8:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2dec:	ldr	q2, [sp, #16]
    2df0:	ldr	x1, [x1, #4024]
    2df4:	mov	v0.16b, v2.16b
    2df8:	str	x0, [x1]
    2dfc:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    2e00:	add	x0, x0, #0xec0
    2e04:	ldr	q1, [x0]
    2e08:	bl	3bdc <PyInit__ctypes_test@@Base+0xa30>
    2e0c:	ldp	x29, x30, [sp], #32
    2e10:	ret

0000000000002e14 <tf_bb@@Base>:
    2e14:	adrp	x2, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2e18:	sxtb	w3, w1
    2e1c:	mov	w0, #0x3                   	// #3
    2e20:	sxtb	x1, w1
    2e24:	ldr	x2, [x2, #4024]
    2e28:	sdiv	w0, w3, w0
    2e2c:	str	x1, [x2]
    2e30:	ret

0000000000002e34 <tf_bB@@Base>:
    2e34:	adrp	x2, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2e38:	and	w3, w1, #0xff
    2e3c:	mov	w0, #0x3                   	// #3
    2e40:	and	x1, x1, #0xff
    2e44:	ldr	x2, [x2, #4032]
    2e48:	udiv	w0, w3, w0
    2e4c:	str	x1, [x2]
    2e50:	ret

0000000000002e54 <tf_bh@@Base>:
    2e54:	adrp	x2, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2e58:	sxth	w3, w1
    2e5c:	mov	w0, #0x3                   	// #3
    2e60:	sxth	x1, w1
    2e64:	ldr	x2, [x2, #4024]
    2e68:	sdiv	w0, w3, w0
    2e6c:	str	x1, [x2]
    2e70:	ret

0000000000002e74 <tf_bH@@Base>:
    2e74:	adrp	x2, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2e78:	and	w3, w1, #0xffff
    2e7c:	mov	w0, #0x3                   	// #3
    2e80:	and	x1, x1, #0xffff
    2e84:	ldr	x2, [x2, #4032]
    2e88:	udiv	w0, w3, w0
    2e8c:	str	x1, [x2]
    2e90:	ret

0000000000002e94 <tf_bi@@Base>:
    2e94:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2e98:	sxtw	x2, w1
    2e9c:	ldr	x0, [x0, #4024]
    2ea0:	str	x2, [x0]
    2ea4:	mov	w0, #0x3                   	// #3
    2ea8:	sdiv	w0, w1, w0
    2eac:	ret

0000000000002eb0 <tf_bI@@Base>:
    2eb0:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2eb4:	mov	w2, w1
    2eb8:	ldr	x0, [x0, #4032]
    2ebc:	str	x2, [x0]
    2ec0:	mov	w0, #0x3                   	// #3
    2ec4:	udiv	w0, w1, w0
    2ec8:	ret

0000000000002ecc <tf_bl@@Base>:
    2ecc:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2ed0:	ldr	x0, [x0, #4024]
    2ed4:	str	x1, [x0]
    2ed8:	mov	x0, #0x3                   	// #3
    2edc:	sdiv	x0, x1, x0
    2ee0:	ret

0000000000002ee4 <tf_bL@@Base>:
    2ee4:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2ee8:	ldr	x0, [x0, #4032]
    2eec:	str	x1, [x0]
    2ef0:	mov	x0, #0x3                   	// #3
    2ef4:	udiv	x0, x1, x0
    2ef8:	ret

0000000000002efc <tf_bq@@Base>:
    2efc:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2f00:	ldr	x0, [x0, #4024]
    2f04:	str	x1, [x0]
    2f08:	mov	x0, #0x3                   	// #3
    2f0c:	sdiv	x0, x1, x0
    2f10:	ret

0000000000002f14 <tf_bQ@@Base>:
    2f14:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2f18:	ldr	x0, [x0, #4032]
    2f1c:	str	x1, [x0]
    2f20:	mov	x0, #0x3                   	// #3
    2f24:	udiv	x0, x1, x0
    2f28:	ret

0000000000002f2c <tf_bf@@Base>:
    2f2c:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2f30:	fcvtzs	x1, s0
    2f34:	fmov	s1, #3.000000000000000000e+00
    2f38:	ldr	x0, [x0, #4024]
    2f3c:	fdiv	s0, s0, s1
    2f40:	str	x1, [x0]
    2f44:	ret

0000000000002f48 <tf_bd@@Base>:
    2f48:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2f4c:	fcvtzs	d1, d0
    2f50:	ldr	x0, [x0, #4024]
    2f54:	str	d1, [x0]
    2f58:	fmov	d1, #3.000000000000000000e+00
    2f5c:	fdiv	d0, d0, d1
    2f60:	ret

0000000000002f64 <tf_bD@@Base>:
    2f64:	stp	x29, x30, [sp, #-32]!
    2f68:	mov	x29, sp
    2f6c:	str	q0, [sp, #16]
    2f70:	bl	4a18 <PyInit__ctypes_test@@Base+0x186c>
    2f74:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2f78:	ldr	q2, [sp, #16]
    2f7c:	ldr	x1, [x1, #4024]
    2f80:	mov	v0.16b, v2.16b
    2f84:	str	x0, [x1]
    2f88:	adrp	x0, 4000 <PyInit__ctypes_test@@Base+0xe54>
    2f8c:	add	x0, x0, #0xec0
    2f90:	ldr	q1, [x0]
    2f94:	bl	3bdc <PyInit__ctypes_test@@Base+0xa30>
    2f98:	ldp	x29, x30, [sp], #32
    2f9c:	ret

0000000000002fa0 <tv_i@@Base>:
    2fa0:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    2fa4:	sxtw	x0, w0
    2fa8:	ldr	x1, [x1, #4024]
    2fac:	str	x0, [x1]
    2fb0:	ret

0000000000002fb4 <PointInRect@@Base>:
    2fb4:	ldr	x3, [x0]
    2fb8:	cmp	x3, x1
    2fbc:	b.gt	2fe8 <PointInRect@@Base+0x34>
    2fc0:	ldr	x3, [x0, #16]
    2fc4:	cmp	x3, x1
    2fc8:	b.lt	2fe8 <PointInRect@@Base+0x34>  // b.tstop
    2fcc:	ldr	x1, [x0, #8]
    2fd0:	cmp	x1, x2
    2fd4:	b.gt	2fe8 <PointInRect@@Base+0x34>
    2fd8:	ldr	x0, [x0, #24]
    2fdc:	cmp	x0, x2
    2fe0:	cset	w0, ge  // ge = tcont
    2fe4:	ret
    2fe8:	mov	w0, #0x0                   	// #0
    2fec:	b	2fe4 <PointInRect@@Base+0x30>

0000000000002ff0 <ReturnRect@@Base>:
    2ff0:	ldr	x10, [sp, #16]
    2ff4:	ldr	x7, [x6]
    2ff8:	ldr	x11, [x10]
    2ffc:	ldr	x9, [x1]
    3000:	add	x7, x7, x11
    3004:	ldr	x11, [x5]
    3008:	ldp	x13, x12, [sp]
    300c:	add	x11, x9, x11
    3010:	add	x7, x7, x11
    3014:	ldr	x11, [x2]
    3018:	add	x7, x7, x11
    301c:	adrp	x11, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    3020:	ldr	x11, [x11, #3976]
    3024:	ldr	x11, [x11]
    3028:	add	x11, x11, x11, lsl #2
    302c:	cmp	x7, x11
    3030:	b.eq	304c <ReturnRect@@Base+0x5c>  // b.none
    3034:	mov	x0, #0x64                  	// #100
    3038:	str	x0, [x1]
    303c:	ldp	x2, x3, [x1]
    3040:	stp	x2, x3, [x8]
    3044:	ldp	x0, x1, [x1, #16]
    3048:	b	30d8 <ReturnRect@@Base+0xe8>
    304c:	ldr	x7, [x10, #16]
    3050:	ldr	x6, [x6, #16]
    3054:	ldr	x11, [x1, #16]
    3058:	add	x6, x6, x7
    305c:	ldr	x7, [x5, #16]
    3060:	ldr	x2, [x2, #16]
    3064:	add	x7, x7, x11
    3068:	add	x6, x6, x7
    306c:	add	x2, x6, x2
    3070:	adrp	x6, 15000 <PyInit__ctypes_test@@Base+0x11e54>
    3074:	ldr	x6, [x6, #3984]
    3078:	ldr	x6, [x6]
    307c:	add	x6, x6, x6, lsl #2
    3080:	cmp	x2, x6
    3084:	b.eq	3094 <ReturnRect@@Base+0xa4>  // b.none
    3088:	mov	x0, #0x64                  	// #100
    308c:	str	x0, [x1, #16]
    3090:	b	303c <ReturnRect@@Base+0x4c>
    3094:	cmp	x3, x13
    3098:	mov	x2, #0xffffffffffffff9c    	// #-100
    309c:	csel	x9, x9, x2, eq  // eq = none
    30a0:	cmp	x4, x12
    30a4:	mov	x2, #0xffffffffffffff38    	// #-200
    30a8:	csel	x9, x9, x2, eq  // eq = none
    30ac:	cmp	w0, #0x1
    30b0:	b.eq	30cc <ReturnRect@@Base+0xdc>  // b.none
    30b4:	cmp	w0, #0x2
    30b8:	b.ne	30e0 <ReturnRect@@Base+0xf0>  // b.any
    30bc:	ldp	x0, x1, [x10]
    30c0:	stp	x0, x1, [x8]
    30c4:	ldp	x0, x1, [x10, #16]
    30c8:	b	30d8 <ReturnRect@@Base+0xe8>
    30cc:	ldp	x0, x1, [x5]
    30d0:	stp	x0, x1, [x8]
    30d4:	ldp	x0, x1, [x5, #16]
    30d8:	stp	x0, x1, [x8, #16]
    30dc:	ret
    30e0:	str	x9, [x1]
    30e4:	b	303c <ReturnRect@@Base+0x4c>

00000000000030e8 <ret_2h_func@@Base>:
    30e8:	sbfx	x1, x0, #16, #16
    30ec:	ubfiz	w2, w1, #1, #15
    30f0:	add	w2, w2, w1
    30f4:	lsl	w1, w0, #1
    30f8:	mov	w0, #0x0                   	// #0
    30fc:	bfxil	w0, w1, #0, #16
    3100:	bfi	w0, w2, #16, #16
    3104:	ret

0000000000003108 <ret_8i_func@@Base>:
    3108:	ldp	w1, w7, [x0, #4]
    310c:	ldp	w6, w5, [x0, #16]
    3110:	add	w3, w1, w1, lsl #1
    3114:	ldr	w1, [x0, #12]
    3118:	ldr	w4, [x0, #24]
    311c:	lsl	w7, w7, #2
    3120:	add	w2, w1, w1, lsl #2
    3124:	mov	w1, #0x6                   	// #6
    3128:	lsl	w4, w4, #3
    312c:	stp	w7, w2, [x8, #8]
    3130:	mul	w6, w6, w1
    3134:	mov	w1, #0x7                   	// #7
    3138:	mul	w5, w5, w1
    313c:	ldr	w1, [x0, #28]
    3140:	ldr	w0, [x0]
    3144:	stp	w6, w5, [x8, #16]
    3148:	add	w1, w1, w1, lsl #3
    314c:	stp	w4, w1, [x8, #24]
    3150:	lsl	w0, w0, #1
    3154:	stp	w0, w3, [x8]
    3158:	ret

000000000000315c <GetRectangle@@Base>:
    315c:	cbz	w0, 318c <GetRectangle@@Base+0x30>
    3160:	sxtw	x2, w0
    3164:	str	x2, [x1]
    3168:	add	w2, w0, #0x1
    316c:	sxtw	x2, w2
    3170:	str	x2, [x1, #8]
    3174:	add	w2, w0, #0x2
    3178:	add	w0, w0, #0x3
    317c:	sxtw	x0, w0
    3180:	sxtw	x2, w2
    3184:	stp	x2, x0, [x1, #16]
    3188:	mov	w0, #0x1                   	// #1
    318c:	ret

0000000000003190 <TwoOutArgs@@Base>:
    3190:	ldr	w4, [x1]
    3194:	add	w4, w4, w0
    3198:	str	w4, [x1]
    319c:	ldr	w0, [x3]
    31a0:	add	w0, w0, w2
    31a4:	str	w0, [x3]
    31a8:	ret

00000000000031ac <PyInit__ctypes_test@@Base>:
    31ac:	mov	w1, #0x3f5                 	// #1013
    31b0:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12e54>
    31b4:	add	x0, x0, #0x130
    31b8:	b	2130 <PyModule_Create2@plt>
    31bc:	stp	x29, x30, [sp, #-32]!
    31c0:	mov	x29, sp
    31c4:	str	q0, [sp, #16]
    31c8:	ldp	x9, x5, [sp, #16]
    31cc:	str	q1, [sp, #16]
    31d0:	ldp	x1, x2, [sp, #16]
    31d4:	mrs	x10, fpcr
    31d8:	ubfx	x0, x5, #48, #15
    31dc:	ubfx	x12, x2, #48, #15
    31e0:	ubfiz	x3, x5, #3, #48
    31e4:	lsr	x11, x2, #63
    31e8:	mov	x4, x0
    31ec:	ubfiz	x2, x2, #3, #48
    31f0:	sub	w0, w0, w12
    31f4:	lsr	x8, x5, #63
    31f8:	mov	x14, x1
    31fc:	orr	x2, x2, x1, lsr #61
    3200:	cmp	x11, x5, lsr #63
    3204:	orr	x3, x3, x9, lsr #61
    3208:	lsl	x7, x9, #3
    320c:	mov	x6, x12
    3210:	lsl	x1, x1, #3
    3214:	mov	w5, w0
    3218:	b.ne	3620 <PyInit__ctypes_test@@Base+0x474>  // b.any
    321c:	cmp	w0, #0x0
    3220:	b.le	3360 <PyInit__ctypes_test@@Base+0x1b4>
    3224:	mov	x9, #0x7fff                	// #32767
    3228:	cbnz	x12, 32c8 <PyInit__ctypes_test@@Base+0x11c>
    322c:	orr	x5, x2, x1
    3230:	cbnz	x5, 325c <PyInit__ctypes_test@@Base+0xb0>
    3234:	cmp	x4, x9
    3238:	b.ne	3a0c <PyInit__ctypes_test@@Base+0x860>  // b.any
    323c:	orr	x1, x3, x7
    3240:	cbz	x1, 3a90 <PyInit__ctypes_test@@Base+0x8e4>
    3244:	lsr	x0, x3, #50
    3248:	mov	x2, x3
    324c:	eor	x0, x0, #0x1
    3250:	mov	x1, x7
    3254:	and	w0, w0, #0x1
    3258:	b	34a4 <PyInit__ctypes_test@@Base+0x2f8>
    325c:	subs	w5, w0, #0x1
    3260:	b.ne	32a0 <PyInit__ctypes_test@@Base+0xf4>  // b.any
    3264:	adds	x1, x7, x1
    3268:	mov	x7, x1
    326c:	adc	x3, x3, x2
    3270:	tbz	x3, #51, 3a0c <PyInit__ctypes_test@@Base+0x860>
    3274:	add	x4, x4, #0x1
    3278:	mov	x0, #0x7fff                	// #32767
    327c:	cmp	x4, x0
    3280:	b.eq	35e4 <PyInit__ctypes_test@@Base+0x438>  // b.none
    3284:	and	x2, x3, #0xfff7ffffffffffff
    3288:	and	x1, x7, #0x1
    328c:	orr	x1, x1, x7, lsr #1
    3290:	orr	x1, x1, x3, lsl #63
    3294:	lsr	x2, x2, #1
    3298:	mov	w0, #0x0                   	// #0
    329c:	b	3394 <PyInit__ctypes_test@@Base+0x1e8>
    32a0:	cmp	x4, x9
    32a4:	b.ne	32d4 <PyInit__ctypes_test@@Base+0x128>  // b.any
    32a8:	orr	x1, x3, x7
    32ac:	cbz	x1, 3a90 <PyInit__ctypes_test@@Base+0x8e4>
    32b0:	lsr	x0, x3, #50
    32b4:	mov	x2, x3
    32b8:	eor	x0, x0, #0x1
    32bc:	mov	x1, x7
    32c0:	and	w0, w0, #0x1
    32c4:	b	3394 <PyInit__ctypes_test@@Base+0x1e8>
    32c8:	cmp	x4, x9
    32cc:	b.eq	32a8 <PyInit__ctypes_test@@Base+0xfc>  // b.none
    32d0:	orr	x2, x2, #0x8000000000000
    32d4:	cmp	w5, #0x74
    32d8:	b.gt	3350 <PyInit__ctypes_test@@Base+0x1a4>
    32dc:	cmp	w5, #0x3f
    32e0:	b.gt	331c <PyInit__ctypes_test@@Base+0x170>
    32e4:	mov	w6, #0x40                  	// #64
    32e8:	sub	w6, w6, w5
    32ec:	lsr	x9, x1, x5
    32f0:	lsl	x1, x1, x6
    32f4:	cmp	x1, #0x0
    32f8:	lsl	x0, x2, x6
    32fc:	cset	x1, ne  // ne = any
    3300:	orr	x0, x0, x9
    3304:	lsr	x2, x2, x5
    3308:	orr	x0, x0, x1
    330c:	adds	x1, x0, x7
    3310:	mov	x7, x1
    3314:	adc	x3, x2, x3
    3318:	b	3270 <PyInit__ctypes_test@@Base+0xc4>
    331c:	sub	w0, w5, #0x40
    3320:	mov	w6, #0x80                  	// #128
    3324:	sub	w6, w6, w5
    3328:	cmp	w5, #0x40
    332c:	lsr	x0, x2, x0
    3330:	lsl	x2, x2, x6
    3334:	csel	x2, x2, xzr, ne  // ne = any
    3338:	orr	x1, x2, x1
    333c:	cmp	x1, #0x0
    3340:	cset	x1, ne  // ne = any
    3344:	orr	x0, x0, x1
    3348:	mov	x2, #0x0                   	// #0
    334c:	b	330c <PyInit__ctypes_test@@Base+0x160>
    3350:	orr	x1, x2, x1
    3354:	cmp	x1, #0x0
    3358:	cset	x0, ne  // ne = any
    335c:	b	3348 <PyInit__ctypes_test@@Base+0x19c>
    3360:	b.eq	3464 <PyInit__ctypes_test@@Base+0x2b8>  // b.none
    3364:	mov	x5, #0x7fff                	// #32767
    3368:	cbnz	x4, 340c <PyInit__ctypes_test@@Base+0x260>
    336c:	orr	x4, x3, x7
    3370:	cbnz	x4, 339c <PyInit__ctypes_test@@Base+0x1f0>
    3374:	cmp	x12, x5
    3378:	b.ne	3a1c <PyInit__ctypes_test@@Base+0x870>  // b.any
    337c:	orr	x0, x2, x1
    3380:	cbz	x0, 3a64 <PyInit__ctypes_test@@Base+0x8b8>
    3384:	lsr	x0, x2, #50
    3388:	mov	x4, x6
    338c:	eor	x0, x0, #0x1
    3390:	and	w0, w0, #0x1
    3394:	mov	w5, #0x0                   	// #0
    3398:	b	34a4 <PyInit__ctypes_test@@Base+0x2f8>
    339c:	cmn	w0, #0x1
    33a0:	b.ne	33b8 <PyInit__ctypes_test@@Base+0x20c>  // b.any
    33a4:	adds	x1, x7, x1
    33a8:	mov	x7, x1
    33ac:	adc	x3, x3, x2
    33b0:	mov	x4, x6
    33b4:	b	3270 <PyInit__ctypes_test@@Base+0xc4>
    33b8:	cmp	x12, x5
    33bc:	b.eq	337c <PyInit__ctypes_test@@Base+0x1d0>  // b.none
    33c0:	mvn	w0, w0
    33c4:	cmp	w0, #0x74
    33c8:	b.gt	3454 <PyInit__ctypes_test@@Base+0x2a8>
    33cc:	cmp	w0, #0x3f
    33d0:	b.gt	3420 <PyInit__ctypes_test@@Base+0x274>
    33d4:	mov	w5, #0x40                  	// #64
    33d8:	sub	w5, w5, w0
    33dc:	lsr	x9, x7, x0
    33e0:	lsl	x7, x7, x5
    33e4:	cmp	x7, #0x0
    33e8:	cset	x7, ne  // ne = any
    33ec:	lsl	x4, x3, x5
    33f0:	orr	x4, x4, x9
    33f4:	lsr	x0, x3, x0
    33f8:	orr	x7, x4, x7
    33fc:	adds	x1, x7, x1
    3400:	mov	x7, x1
    3404:	adc	x3, x0, x2
    3408:	b	33b0 <PyInit__ctypes_test@@Base+0x204>
    340c:	cmp	x12, x5
    3410:	b.eq	337c <PyInit__ctypes_test@@Base+0x1d0>  // b.none
    3414:	neg	w0, w0
    3418:	orr	x3, x3, #0x8000000000000
    341c:	b	33c4 <PyInit__ctypes_test@@Base+0x218>
    3420:	sub	w4, w0, #0x40
    3424:	mov	w5, #0x80                  	// #128
    3428:	sub	w5, w5, w0
    342c:	cmp	w0, #0x40
    3430:	lsr	x4, x3, x4
    3434:	lsl	x3, x3, x5
    3438:	csel	x3, x3, xzr, ne  // ne = any
    343c:	orr	x3, x3, x7
    3440:	cmp	x3, #0x0
    3444:	cset	x7, ne  // ne = any
    3448:	orr	x7, x4, x7
    344c:	mov	x0, #0x0                   	// #0
    3450:	b	33fc <PyInit__ctypes_test@@Base+0x250>
    3454:	orr	x3, x3, x7
    3458:	cmp	x3, #0x0
    345c:	cset	x7, ne  // ne = any
    3460:	b	344c <PyInit__ctypes_test@@Base+0x2a0>
    3464:	add	x0, x4, #0x1
    3468:	mov	x13, #0x7fff                	// #32767
    346c:	tst	x0, #0x7ffe
    3470:	b.ne	3580 <PyInit__ctypes_test@@Base+0x3d4>  // b.any
    3474:	orr	x12, x3, x7
    3478:	cbnz	x4, 34e4 <PyInit__ctypes_test@@Base+0x338>
    347c:	cbz	x12, 3a40 <PyInit__ctypes_test@@Base+0x894>
    3480:	orr	x0, x2, x1
    3484:	cbz	x0, 382c <PyInit__ctypes_test@@Base+0x680>
    3488:	adds	x1, x7, x1
    348c:	mov	x7, x1
    3490:	adc	x3, x3, x2
    3494:	tbz	x3, #51, 382c <PyInit__ctypes_test@@Base+0x680>
    3498:	and	x2, x3, #0xfff7ffffffffffff
    349c:	mov	w0, #0x0                   	// #0
    34a0:	mov	x4, #0x1                   	// #1
    34a4:	tst	x1, #0x7
    34a8:	b.eq	3ac0 <PyInit__ctypes_test@@Base+0x914>  // b.none
    34ac:	and	x3, x10, #0xc00000
    34b0:	orr	w0, w0, #0x10
    34b4:	cmp	x3, #0x400, lsl #12
    34b8:	b.eq	3aac <PyInit__ctypes_test@@Base+0x900>  // b.none
    34bc:	cmp	x3, #0x800, lsl #12
    34c0:	b.eq	3ab8 <PyInit__ctypes_test@@Base+0x90c>  // b.none
    34c4:	cbnz	x3, 34dc <PyInit__ctypes_test@@Base+0x330>
    34c8:	and	x3, x1, #0xf
    34cc:	cmp	x3, #0x4
    34d0:	b.eq	34dc <PyInit__ctypes_test@@Base+0x330>  // b.none
    34d4:	adds	x1, x1, #0x4
    34d8:	cinc	x2, x2, cs  // cs = hs, nlast
    34dc:	cbz	w5, 3ad0 <PyInit__ctypes_test@@Base+0x924>
    34e0:	b	3acc <PyInit__ctypes_test@@Base+0x920>
    34e4:	cmp	x4, x13
    34e8:	b.ne	354c <PyInit__ctypes_test@@Base+0x3a0>  // b.any
    34ec:	cbz	x12, 3bb0 <PyInit__ctypes_test@@Base+0xa04>
    34f0:	lsr	x0, x3, #50
    34f4:	cmp	x6, x4
    34f8:	eor	x0, x0, #0x1
    34fc:	and	w0, w0, #0x1
    3500:	b.ne	356c <PyInit__ctypes_test@@Base+0x3c0>  // b.any
    3504:	orr	x4, x2, x1
    3508:	cbz	x4, 3ba8 <PyInit__ctypes_test@@Base+0x9fc>
    350c:	tst	x2, #0x4000000000000
    3510:	csinc	w0, w0, wzr, ne  // ne = any
    3514:	cbz	x12, 3564 <PyInit__ctypes_test@@Base+0x3b8>
    3518:	and	x9, x9, #0x1fffffffffffffff
    351c:	lsr	x1, x3, #3
    3520:	orr	x9, x9, x3, lsl #61
    3524:	tbz	x3, #50, 3540 <PyInit__ctypes_test@@Base+0x394>
    3528:	lsr	x3, x2, #3
    352c:	tbnz	x2, #50, 3540 <PyInit__ctypes_test@@Base+0x394>
    3530:	and	x1, x14, #0x1fffffffffffffff
    3534:	mov	x8, x11
    3538:	orr	x9, x1, x2, lsl #61
    353c:	mov	x1, x3
    3540:	extr	x2, x1, x9, #61
    3544:	lsl	x1, x9, #3
    3548:	b	3564 <PyInit__ctypes_test@@Base+0x3b8>
    354c:	cmp	x6, x13
    3550:	b.ne	355c <PyInit__ctypes_test@@Base+0x3b0>  // b.any
    3554:	mov	w0, #0x0                   	// #0
    3558:	b	3504 <PyInit__ctypes_test@@Base+0x358>
    355c:	mov	w0, #0x0                   	// #0
    3560:	cbnz	x12, 356c <PyInit__ctypes_test@@Base+0x3c0>
    3564:	mov	x4, #0x7fff                	// #32767
    3568:	b	34a4 <PyInit__ctypes_test@@Base+0x2f8>
    356c:	orr	x1, x2, x1
    3570:	cbnz	x1, 3518 <PyInit__ctypes_test@@Base+0x36c>
    3574:	mov	x2, x3
    3578:	mov	x1, x7
    357c:	b	3564 <PyInit__ctypes_test@@Base+0x3b8>
    3580:	cmp	x0, x13
    3584:	b.eq	35a4 <PyInit__ctypes_test@@Base+0x3f8>  // b.none
    3588:	adds	x1, x7, x1
    358c:	mov	x4, x0
    3590:	adc	x2, x3, x2
    3594:	extr	x1, x2, x1, #1
    3598:	lsr	x2, x2, #1
    359c:	mov	w0, #0x0                   	// #0
    35a0:	b	34a4 <PyInit__ctypes_test@@Base+0x2f8>
    35a4:	ands	x1, x10, #0xc00000
    35a8:	b.eq	3a74 <PyInit__ctypes_test@@Base+0x8c8>  // b.none
    35ac:	cmp	x1, #0x400, lsl #12
    35b0:	b.ne	35c8 <PyInit__ctypes_test@@Base+0x41c>  // b.any
    35b4:	cbnz	x8, 35d4 <PyInit__ctypes_test@@Base+0x428>
    35b8:	mov	x4, x0
    35bc:	mov	x2, #0x0                   	// #0
    35c0:	mov	x1, #0x0                   	// #0
    35c4:	b	3a7c <PyInit__ctypes_test@@Base+0x8d0>
    35c8:	cmp	x1, #0x800, lsl #12
    35cc:	b.ne	35d4 <PyInit__ctypes_test@@Base+0x428>  // b.any
    35d0:	cbnz	x8, 35b8 <PyInit__ctypes_test@@Base+0x40c>
    35d4:	mov	x2, #0xffffffffffffffff    	// #-1
    35d8:	mov	x4, #0x7ffe                	// #32766
    35dc:	mov	x1, x2
    35e0:	b	3a7c <PyInit__ctypes_test@@Base+0x8d0>
    35e4:	ands	x1, x10, #0xc00000
    35e8:	b.eq	3a84 <PyInit__ctypes_test@@Base+0x8d8>  // b.none
    35ec:	cmp	x1, #0x400, lsl #12
    35f0:	b.ne	3604 <PyInit__ctypes_test@@Base+0x458>  // b.any
    35f4:	cbnz	x8, 3610 <PyInit__ctypes_test@@Base+0x464>
    35f8:	mov	x2, #0x0                   	// #0
    35fc:	mov	x1, #0x0                   	// #0
    3600:	b	3a88 <PyInit__ctypes_test@@Base+0x8dc>
    3604:	cmp	x1, #0x800, lsl #12
    3608:	b.ne	3610 <PyInit__ctypes_test@@Base+0x464>  // b.any
    360c:	cbnz	x8, 35f8 <PyInit__ctypes_test@@Base+0x44c>
    3610:	mov	x2, #0xffffffffffffffff    	// #-1
    3614:	mov	x4, #0x7ffe                	// #32766
    3618:	mov	x1, x2
    361c:	b	3a88 <PyInit__ctypes_test@@Base+0x8dc>
    3620:	cmp	w0, #0x0
    3624:	b.le	36f8 <PyInit__ctypes_test@@Base+0x54c>
    3628:	mov	x9, #0x7fff                	// #32767
    362c:	cbnz	x12, 36a4 <PyInit__ctypes_test@@Base+0x4f8>
    3630:	orr	x5, x2, x1
    3634:	cbz	x5, 3234 <PyInit__ctypes_test@@Base+0x88>
    3638:	subs	w5, w0, #0x1
    363c:	b.ne	3658 <PyInit__ctypes_test@@Base+0x4ac>  // b.any
    3640:	subs	x7, x7, x1
    3644:	sbc	x3, x3, x2
    3648:	tbz	x3, #51, 3a0c <PyInit__ctypes_test@@Base+0x860>
    364c:	and	x5, x3, #0x7ffffffffffff
    3650:	mov	x6, x7
    3654:	b	393c <PyInit__ctypes_test@@Base+0x790>
    3658:	cmp	x4, x9
    365c:	b.eq	32a8 <PyInit__ctypes_test@@Base+0xfc>  // b.none
    3660:	cmp	w5, #0x74
    3664:	b.gt	36e8 <PyInit__ctypes_test@@Base+0x53c>
    3668:	cmp	w5, #0x3f
    366c:	b.gt	36b4 <PyInit__ctypes_test@@Base+0x508>
    3670:	mov	w6, #0x40                  	// #64
    3674:	sub	w6, w6, w5
    3678:	lsr	x9, x1, x5
    367c:	lsl	x1, x1, x6
    3680:	cmp	x1, #0x0
    3684:	lsl	x0, x2, x6
    3688:	cset	x1, ne  // ne = any
    368c:	orr	x0, x0, x9
    3690:	lsr	x2, x2, x5
    3694:	orr	x0, x0, x1
    3698:	subs	x7, x7, x0
    369c:	sbc	x3, x3, x2
    36a0:	b	3648 <PyInit__ctypes_test@@Base+0x49c>
    36a4:	cmp	x4, x9
    36a8:	b.eq	32a8 <PyInit__ctypes_test@@Base+0xfc>  // b.none
    36ac:	orr	x2, x2, #0x8000000000000
    36b0:	b	3660 <PyInit__ctypes_test@@Base+0x4b4>
    36b4:	sub	w0, w5, #0x40
    36b8:	mov	w6, #0x80                  	// #128
    36bc:	sub	w6, w6, w5
    36c0:	cmp	w5, #0x40
    36c4:	lsr	x0, x2, x0
    36c8:	lsl	x2, x2, x6
    36cc:	csel	x2, x2, xzr, ne  // ne = any
    36d0:	orr	x1, x2, x1
    36d4:	cmp	x1, #0x0
    36d8:	cset	x1, ne  // ne = any
    36dc:	orr	x0, x0, x1
    36e0:	mov	x2, #0x0                   	// #0
    36e4:	b	3698 <PyInit__ctypes_test@@Base+0x4ec>
    36e8:	orr	x1, x2, x1
    36ec:	cmp	x1, #0x0
    36f0:	cset	x0, ne  // ne = any
    36f4:	b	36e0 <PyInit__ctypes_test@@Base+0x534>
    36f8:	b.eq	37f8 <PyInit__ctypes_test@@Base+0x64c>  // b.none
    36fc:	mov	x5, #0x7fff                	// #32767
    3700:	cbnz	x4, 37a0 <PyInit__ctypes_test@@Base+0x5f4>
    3704:	orr	x4, x3, x7
    3708:	cbnz	x4, 3734 <PyInit__ctypes_test@@Base+0x588>
    370c:	cmp	x12, x5
    3710:	b.ne	3a2c <PyInit__ctypes_test@@Base+0x880>  // b.any
    3714:	orr	x0, x2, x1
    3718:	cbz	x0, 3a98 <PyInit__ctypes_test@@Base+0x8ec>
    371c:	lsr	x0, x2, #50
    3720:	mov	x4, x6
    3724:	eor	x0, x0, #0x1
    3728:	mov	x8, x11
    372c:	and	w0, w0, #0x1
    3730:	b	3394 <PyInit__ctypes_test@@Base+0x1e8>
    3734:	cmn	w0, #0x1
    3738:	b.ne	3750 <PyInit__ctypes_test@@Base+0x5a4>  // b.any
    373c:	subs	x7, x1, x7
    3740:	sbc	x3, x2, x3
    3744:	mov	x4, x6
    3748:	mov	x8, x11
    374c:	b	3648 <PyInit__ctypes_test@@Base+0x49c>
    3750:	cmp	x12, x5
    3754:	b.eq	3714 <PyInit__ctypes_test@@Base+0x568>  // b.none
    3758:	mvn	w0, w0
    375c:	cmp	w0, #0x74
    3760:	b.gt	37e8 <PyInit__ctypes_test@@Base+0x63c>
    3764:	cmp	w0, #0x3f
    3768:	b.gt	37b4 <PyInit__ctypes_test@@Base+0x608>
    376c:	mov	w5, #0x40                  	// #64
    3770:	sub	w5, w5, w0
    3774:	lsr	x8, x7, x0
    3778:	lsl	x7, x7, x5
    377c:	cmp	x7, #0x0
    3780:	lsl	x4, x3, x5
    3784:	cset	x5, ne  // ne = any
    3788:	orr	x4, x4, x8
    378c:	lsr	x0, x3, x0
    3790:	orr	x4, x4, x5
    3794:	subs	x7, x1, x4
    3798:	sbc	x3, x2, x0
    379c:	b	3744 <PyInit__ctypes_test@@Base+0x598>
    37a0:	cmp	x12, x5
    37a4:	b.eq	3714 <PyInit__ctypes_test@@Base+0x568>  // b.none
    37a8:	neg	w0, w0
    37ac:	orr	x3, x3, #0x8000000000000
    37b0:	b	375c <PyInit__ctypes_test@@Base+0x5b0>
    37b4:	sub	w4, w0, #0x40
    37b8:	mov	w5, #0x80                  	// #128
    37bc:	sub	w5, w5, w0
    37c0:	cmp	w0, #0x40
    37c4:	lsr	x4, x3, x4
    37c8:	lsl	x3, x3, x5
    37cc:	csel	x3, x3, xzr, ne  // ne = any
    37d0:	orr	x3, x3, x7
    37d4:	cmp	x3, #0x0
    37d8:	cset	x0, ne  // ne = any
    37dc:	orr	x4, x4, x0
    37e0:	mov	x0, #0x0                   	// #0
    37e4:	b	3794 <PyInit__ctypes_test@@Base+0x5e8>
    37e8:	orr	x3, x3, x7
    37ec:	cmp	x3, #0x0
    37f0:	cset	x4, ne  // ne = any
    37f4:	b	37e0 <PyInit__ctypes_test@@Base+0x634>
    37f8:	add	x0, x4, #0x1
    37fc:	tst	x0, #0x7ffe
    3800:	b.ne	391c <PyInit__ctypes_test@@Base+0x770>  // b.any
    3804:	orr	x12, x3, x7
    3808:	orr	x13, x2, x1
    380c:	cbnz	x4, 3888 <PyInit__ctypes_test@@Base+0x6dc>
    3810:	cbnz	x12, 3848 <PyInit__ctypes_test@@Base+0x69c>
    3814:	cbnz	x13, 3a4c <PyInit__ctypes_test@@Base+0x8a0>
    3818:	and	x0, x10, #0xc00000
    381c:	mov	x3, #0x0                   	// #0
    3820:	cmp	x0, #0x800, lsl #12
    3824:	mov	x7, #0x0                   	// #0
    3828:	cset	x8, eq  // eq = none
    382c:	orr	x0, x7, x3
    3830:	mov	x2, x3
    3834:	cmp	x0, #0x0
    3838:	mov	x1, x7
    383c:	cset	w5, ne  // ne = any
    3840:	mov	x4, #0x0                   	// #0
    3844:	b	359c <PyInit__ctypes_test@@Base+0x3f0>
    3848:	cbz	x13, 382c <PyInit__ctypes_test@@Base+0x680>
    384c:	subs	x4, x7, x1
    3850:	cmp	x7, x1
    3854:	sbc	x0, x3, x2
    3858:	tbz	x0, #51, 386c <PyInit__ctypes_test@@Base+0x6c0>
    385c:	subs	x7, x1, x7
    3860:	sbc	x3, x2, x3
    3864:	mov	x8, x11
    3868:	b	382c <PyInit__ctypes_test@@Base+0x680>
    386c:	orr	x7, x4, x0
    3870:	cbnz	x7, 3a58 <PyInit__ctypes_test@@Base+0x8ac>
    3874:	and	x0, x10, #0xc00000
    3878:	cmp	x0, #0x800, lsl #12
    387c:	cset	x8, eq  // eq = none
    3880:	mov	x3, #0x0                   	// #0
    3884:	b	382c <PyInit__ctypes_test@@Base+0x680>
    3888:	mov	x0, #0x7fff                	// #32767
    388c:	cmp	x4, x0
    3890:	b.ne	38f0 <PyInit__ctypes_test@@Base+0x744>  // b.any
    3894:	cbz	x12, 3b98 <PyInit__ctypes_test@@Base+0x9ec>
    3898:	lsr	x0, x3, #50
    389c:	cmp	x6, x4
    38a0:	eor	x0, x0, #0x1
    38a4:	and	w0, w0, #0x1
    38a8:	b.ne	3914 <PyInit__ctypes_test@@Base+0x768>  // b.any
    38ac:	cbz	x13, 3bc0 <PyInit__ctypes_test@@Base+0xa14>
    38b0:	tst	x2, #0x4000000000000
    38b4:	csinc	w0, w0, wzr, ne  // ne = any
    38b8:	cbz	x12, 3908 <PyInit__ctypes_test@@Base+0x75c>
    38bc:	and	x9, x9, #0x1fffffffffffffff
    38c0:	lsr	x4, x3, #3
    38c4:	orr	x1, x9, x3, lsl #61
    38c8:	tbz	x3, #50, 38e4 <PyInit__ctypes_test@@Base+0x738>
    38cc:	lsr	x3, x2, #3
    38d0:	tbnz	x2, #50, 38e4 <PyInit__ctypes_test@@Base+0x738>
    38d4:	and	x1, x14, #0x1fffffffffffffff
    38d8:	mov	x4, x3
    38dc:	orr	x1, x1, x2, lsl #61
    38e0:	mov	x8, x11
    38e4:	extr	x2, x4, x1, #61
    38e8:	lsl	x1, x1, #3
    38ec:	b	3564 <PyInit__ctypes_test@@Base+0x3b8>
    38f0:	cmp	x6, x0
    38f4:	b.ne	3900 <PyInit__ctypes_test@@Base+0x754>  // b.any
    38f8:	mov	w0, #0x0                   	// #0
    38fc:	b	38ac <PyInit__ctypes_test@@Base+0x700>
    3900:	mov	w0, #0x0                   	// #0
    3904:	cbnz	x12, 3914 <PyInit__ctypes_test@@Base+0x768>
    3908:	cbz	x13, 3bc4 <PyInit__ctypes_test@@Base+0xa18>
    390c:	mov	x8, x11
    3910:	b	3564 <PyInit__ctypes_test@@Base+0x3b8>
    3914:	cbnz	x13, 38bc <PyInit__ctypes_test@@Base+0x710>
    3918:	b	3574 <PyInit__ctypes_test@@Base+0x3c8>
    391c:	subs	x0, x7, x1
    3920:	cmp	x7, x1
    3924:	mov	x6, x0
    3928:	sbc	x5, x3, x2
    392c:	tbz	x5, #51, 39b8 <PyInit__ctypes_test@@Base+0x80c>
    3930:	subs	x6, x1, x7
    3934:	mov	x8, x11
    3938:	sbc	x5, x2, x3
    393c:	clz	x0, x6
    3940:	cmp	x5, #0x0
    3944:	add	w0, w0, #0x40
    3948:	clz	x3, x5
    394c:	csel	w3, w0, w3, eq  // eq = none
    3950:	sub	w0, w3, #0xc
    3954:	cmp	w0, #0x3f
    3958:	b.gt	39c4 <PyInit__ctypes_test@@Base+0x818>
    395c:	neg	w3, w0
    3960:	lsl	x5, x5, x0
    3964:	lsl	x7, x6, x0
    3968:	lsr	x3, x6, x3
    396c:	orr	x3, x3, x5
    3970:	sxtw	x1, w0
    3974:	cmp	x4, w0, sxtw
    3978:	b.gt	3a04 <PyInit__ctypes_test@@Base+0x858>
    397c:	sub	w4, w0, w4
    3980:	add	w2, w4, #0x1
    3984:	cmp	w2, #0x3f
    3988:	b.gt	39d4 <PyInit__ctypes_test@@Base+0x828>
    398c:	mov	w1, #0x40                  	// #64
    3990:	sub	w1, w1, w2
    3994:	lsr	x4, x7, x2
    3998:	lsl	x0, x3, x1
    399c:	orr	x0, x0, x4
    39a0:	lsl	x1, x7, x1
    39a4:	cmp	x1, #0x0
    39a8:	cset	x1, ne  // ne = any
    39ac:	lsr	x3, x3, x2
    39b0:	orr	x7, x0, x1
    39b4:	b	382c <PyInit__ctypes_test@@Base+0x680>
    39b8:	orr	x7, x0, x5
    39bc:	cbnz	x7, 393c <PyInit__ctypes_test@@Base+0x790>
    39c0:	b	3874 <PyInit__ctypes_test@@Base+0x6c8>
    39c4:	sub	w3, w3, #0x4c
    39c8:	mov	x7, #0x0                   	// #0
    39cc:	lsl	x3, x6, x3
    39d0:	b	3970 <PyInit__ctypes_test@@Base+0x7c4>
    39d4:	sub	w4, w4, #0x3f
    39d8:	mov	w0, #0x80                  	// #128
    39dc:	sub	w0, w0, w2
    39e0:	cmp	w2, #0x40
    39e4:	lsr	x4, x3, x4
    39e8:	lsl	x3, x3, x0
    39ec:	csel	x3, x3, xzr, ne  // ne = any
    39f0:	orr	x3, x7, x3
    39f4:	cmp	x3, #0x0
    39f8:	cset	x3, ne  // ne = any
    39fc:	orr	x7, x4, x3
    3a00:	b	3880 <PyInit__ctypes_test@@Base+0x6d4>
    3a04:	sub	x4, x4, x1
    3a08:	and	x3, x3, #0xfff7ffffffffffff
    3a0c:	cbz	x4, 382c <PyInit__ctypes_test@@Base+0x680>
    3a10:	mov	x2, x3
    3a14:	mov	x1, x7
    3a18:	b	3298 <PyInit__ctypes_test@@Base+0xec>
    3a1c:	mov	x3, x2
    3a20:	mov	x7, x1
    3a24:	mov	x4, x12
    3a28:	b	3a0c <PyInit__ctypes_test@@Base+0x860>
    3a2c:	mov	x3, x2
    3a30:	mov	x7, x1
    3a34:	mov	x4, x12
    3a38:	mov	x8, x11
    3a3c:	b	3a0c <PyInit__ctypes_test@@Base+0x860>
    3a40:	mov	x3, x2
    3a44:	mov	x7, x1
    3a48:	b	382c <PyInit__ctypes_test@@Base+0x680>
    3a4c:	mov	x3, x2
    3a50:	mov	x7, x1
    3a54:	b	3864 <PyInit__ctypes_test@@Base+0x6b8>
    3a58:	mov	x3, x0
    3a5c:	mov	x7, x4
    3a60:	b	382c <PyInit__ctypes_test@@Base+0x680>
    3a64:	mov	x4, x6
    3a68:	mov	x2, #0x0                   	// #0
    3a6c:	mov	x1, #0x0                   	// #0
    3a70:	b	3298 <PyInit__ctypes_test@@Base+0xec>
    3a74:	mov	x4, x0
    3a78:	mov	x2, #0x0                   	// #0
    3a7c:	mov	w0, #0x14                  	// #20
    3a80:	b	34a4 <PyInit__ctypes_test@@Base+0x2f8>
    3a84:	mov	x2, #0x0                   	// #0
    3a88:	mov	w0, #0x14                  	// #20
    3a8c:	b	3394 <PyInit__ctypes_test@@Base+0x1e8>
    3a90:	mov	x2, #0x0                   	// #0
    3a94:	b	3298 <PyInit__ctypes_test@@Base+0xec>
    3a98:	mov	x4, x6
    3a9c:	mov	x8, x11
    3aa0:	mov	x2, #0x0                   	// #0
    3aa4:	mov	x1, #0x0                   	// #0
    3aa8:	b	3298 <PyInit__ctypes_test@@Base+0xec>
    3aac:	cbnz	x8, 34dc <PyInit__ctypes_test@@Base+0x330>
    3ab0:	adds	x1, x1, #0x8
    3ab4:	b	34d8 <PyInit__ctypes_test@@Base+0x32c>
    3ab8:	cbz	x8, 34dc <PyInit__ctypes_test@@Base+0x330>
    3abc:	b	3ab0 <PyInit__ctypes_test@@Base+0x904>
    3ac0:	cbz	w5, 3ad0 <PyInit__ctypes_test@@Base+0x924>
    3ac4:	tbnz	w0, #4, 3acc <PyInit__ctypes_test@@Base+0x920>
    3ac8:	tbz	w10, #11, 3ad0 <PyInit__ctypes_test@@Base+0x924>
    3acc:	orr	w0, w0, #0x8
    3ad0:	tbz	x2, #51, 3ae8 <PyInit__ctypes_test@@Base+0x93c>
    3ad4:	add	x4, x4, #0x1
    3ad8:	mov	x3, #0x7fff                	// #32767
    3adc:	cmp	x4, x3
    3ae0:	b.eq	3b40 <PyInit__ctypes_test@@Base+0x994>  // b.none
    3ae4:	and	x2, x2, #0xfff7ffffffffffff
    3ae8:	mov	x3, #0x7fff                	// #32767
    3aec:	extr	x1, x2, x1, #3
    3af0:	cmp	x4, x3
    3af4:	lsr	x2, x2, #3
    3af8:	b.ne	3b0c <PyInit__ctypes_test@@Base+0x960>  // b.any
    3afc:	orr	x3, x1, x2
    3b00:	orr	x2, x2, #0x800000000000
    3b04:	cmp	x3, #0x0
    3b08:	csel	x2, x2, xzr, ne  // ne = any
    3b0c:	and	x4, x4, #0x7fff
    3b10:	mov	x7, #0x0                   	// #0
    3b14:	bfxil	x7, x2, #0, #48
    3b18:	orr	w8, w4, w8, lsl #15
    3b1c:	fmov	d0, x1
    3b20:	bfi	x7, x8, #48, #16
    3b24:	fmov	v0.d[1], x7
    3b28:	cbz	w0, 3b38 <PyInit__ctypes_test@@Base+0x98c>
    3b2c:	str	q0, [sp, #16]
    3b30:	bl	4cf0 <PyInit__ctypes_test@@Base+0x1b44>
    3b34:	ldr	q0, [sp, #16]
    3b38:	ldp	x29, x30, [sp], #32
    3b3c:	ret
    3b40:	ands	x1, x10, #0xc00000
    3b44:	b.eq	3b60 <PyInit__ctypes_test@@Base+0x9b4>  // b.none
    3b48:	cmp	x1, #0x400, lsl #12
    3b4c:	b.ne	3b70 <PyInit__ctypes_test@@Base+0x9c4>  // b.any
    3b50:	cmp	x8, #0x0
    3b54:	mov	x2, #0x7ffe                	// #32766
    3b58:	csetm	x1, ne  // ne = any
    3b5c:	csel	x4, x4, x2, eq  // eq = none
    3b60:	mov	w2, #0x14                  	// #20
    3b64:	orr	w0, w0, w2
    3b68:	mov	x2, x1
    3b6c:	b	3ae8 <PyInit__ctypes_test@@Base+0x93c>
    3b70:	cmp	x1, #0x800, lsl #12
    3b74:	b.ne	3b8c <PyInit__ctypes_test@@Base+0x9e0>  // b.any
    3b78:	cmp	x8, #0x0
    3b7c:	mov	x2, #0x7ffe                	// #32766
    3b80:	csetm	x1, eq  // eq = none
    3b84:	csel	x4, x4, x2, ne  // ne = any
    3b88:	b	3b60 <PyInit__ctypes_test@@Base+0x9b4>
    3b8c:	mov	x1, #0xffffffffffffffff    	// #-1
    3b90:	mov	x4, #0x7ffe                	// #32766
    3b94:	b	3b60 <PyInit__ctypes_test@@Base+0x9b4>
    3b98:	cmp	x6, x4
    3b9c:	b.eq	38f8 <PyInit__ctypes_test@@Base+0x74c>  // b.none
    3ba0:	mov	w0, #0x0                   	// #0
    3ba4:	b	3908 <PyInit__ctypes_test@@Base+0x75c>
    3ba8:	cbz	x12, 3564 <PyInit__ctypes_test@@Base+0x3b8>
    3bac:	b	3574 <PyInit__ctypes_test@@Base+0x3c8>
    3bb0:	cmp	x6, x4
    3bb4:	b.eq	3554 <PyInit__ctypes_test@@Base+0x3a8>  // b.none
    3bb8:	mov	w0, #0x0                   	// #0
    3bbc:	b	3564 <PyInit__ctypes_test@@Base+0x3b8>
    3bc0:	cbnz	x12, 3574 <PyInit__ctypes_test@@Base+0x3c8>
    3bc4:	mov	x8, #0x0                   	// #0
    3bc8:	mov	x2, #0x7ffffffffffff       	// #2251799813685247
    3bcc:	mov	x1, #0xfffffffffffffff8    	// #-8
    3bd0:	mov	x4, #0x7fff                	// #32767
    3bd4:	mov	w0, #0x1                   	// #1
    3bd8:	b	34a4 <PyInit__ctypes_test@@Base+0x2f8>
    3bdc:	stp	x29, x30, [sp, #-32]!
    3be0:	mov	x29, sp
    3be4:	str	q0, [sp, #16]
    3be8:	ldp	x1, x10, [sp, #16]
    3bec:	str	q1, [sp, #16]
    3bf0:	ldp	x8, x9, [sp, #16]
    3bf4:	mrs	x6, fpcr
    3bf8:	ubfx	x4, x10, #0, #48
    3bfc:	ubfx	x11, x10, #48, #15
    3c00:	lsr	x10, x10, #63
    3c04:	and	w5, w10, #0xff
    3c08:	cbz	w11, 3c3c <PyInit__ctypes_test@@Base+0xa90>
    3c0c:	mov	w2, #0x7fff                	// #32767
    3c10:	cmp	w11, w2
    3c14:	b.eq	3c9c <PyInit__ctypes_test@@Base+0xaf0>  // b.none
    3c18:	and	x11, x11, #0xffff
    3c1c:	extr	x2, x4, x1, #61
    3c20:	mov	x12, #0xffffffffffffc001    	// #-16383
    3c24:	orr	x2, x2, #0x8000000000000
    3c28:	lsl	x1, x1, #3
    3c2c:	add	x11, x11, x12
    3c30:	mov	x14, #0x0                   	// #0
    3c34:	mov	w0, #0x0                   	// #0
    3c38:	b	3cb8 <PyInit__ctypes_test@@Base+0xb0c>
    3c3c:	orr	x2, x4, x1
    3c40:	cbz	x2, 3d30 <PyInit__ctypes_test@@Base+0xb84>
    3c44:	clz	x2, x1
    3c48:	cmp	x4, #0x0
    3c4c:	add	x2, x2, #0x40
    3c50:	clz	x11, x4
    3c54:	csel	x0, x2, x11, eq  // eq = none
    3c58:	sub	x2, x0, #0xf
    3c5c:	cmp	x2, #0x3c
    3c60:	b.gt	3c8c <PyInit__ctypes_test@@Base+0xae0>
    3c64:	add	w7, w2, #0x3
    3c68:	mov	w3, #0x3d                  	// #61
    3c6c:	sub	w2, w3, w2
    3c70:	lsl	x4, x4, x7
    3c74:	lsr	x2, x1, x2
    3c78:	orr	x2, x2, x4
    3c7c:	lsl	x1, x1, x7
    3c80:	mov	x11, #0xffffffffffffc011    	// #-16367
    3c84:	sub	x11, x11, x0
    3c88:	b	3c30 <PyInit__ctypes_test@@Base+0xa84>
    3c8c:	sub	w2, w2, #0x3d
    3c90:	lsl	x2, x1, x2
    3c94:	mov	x1, #0x0                   	// #0
    3c98:	b	3c80 <PyInit__ctypes_test@@Base+0xad4>
    3c9c:	orr	x2, x4, x1
    3ca0:	cbz	x2, 3d40 <PyInit__ctypes_test@@Base+0xb94>
    3ca4:	lsr	x0, x4, #47
    3ca8:	mov	x2, x4
    3cac:	eor	w0, w0, #0x1
    3cb0:	mov	x11, #0x7fff                	// #32767
    3cb4:	mov	x14, #0x3                   	// #3
    3cb8:	lsr	x13, x9, #63
    3cbc:	ubfx	x7, x9, #0, #48
    3cc0:	ubfx	x4, x9, #48, #15
    3cc4:	and	w3, w13, #0xff
    3cc8:	cbz	w4, 3d50 <PyInit__ctypes_test@@Base+0xba4>
    3ccc:	mov	w9, #0x7fff                	// #32767
    3cd0:	cmp	w4, w9
    3cd4:	b.eq	3db0 <PyInit__ctypes_test@@Base+0xc04>  // b.none
    3cd8:	and	x4, x4, #0xffff
    3cdc:	extr	x7, x7, x8, #61
    3ce0:	mov	x9, #0xffffffffffffc001    	// #-16383
    3ce4:	orr	x7, x7, #0x8000000000000
    3ce8:	lsl	x8, x8, #3
    3cec:	add	x4, x4, x9
    3cf0:	mov	x12, #0x0                   	// #0
    3cf4:	eor	w5, w5, w3
    3cf8:	orr	x3, x12, x14, lsl #2
    3cfc:	sub	x3, x3, #0x1
    3d00:	and	x5, x5, #0xff
    3d04:	sub	x9, x11, x4
    3d08:	cmp	x3, #0xe
    3d0c:	b.hi	3df4 <PyInit__ctypes_test@@Base+0xc48>  // b.pmore
    3d10:	cmp	w3, #0xe
    3d14:	b.hi	3df4 <PyInit__ctypes_test@@Base+0xc48>  // b.pmore
    3d18:	adrp	x4, 4000 <PyInit__ctypes_test@@Base+0xe54>
    3d1c:	add	x4, x4, #0xed0
    3d20:	ldrh	w3, [x4, w3, uxtw #1]
    3d24:	adr	x4, 3d30 <PyInit__ctypes_test@@Base+0xb84>
    3d28:	add	x3, x4, w3, sxth #2
    3d2c:	br	x3
    3d30:	mov	x1, #0x0                   	// #0
    3d34:	mov	x11, #0x0                   	// #0
    3d38:	mov	x14, #0x1                   	// #1
    3d3c:	b	3c34 <PyInit__ctypes_test@@Base+0xa88>
    3d40:	mov	x1, #0x0                   	// #0
    3d44:	mov	x11, #0x7fff                	// #32767
    3d48:	mov	x14, #0x2                   	// #2
    3d4c:	b	3c34 <PyInit__ctypes_test@@Base+0xa88>
    3d50:	orr	x4, x7, x8
    3d54:	cbz	x4, 3dcc <PyInit__ctypes_test@@Base+0xc20>
    3d58:	clz	x12, x8
    3d5c:	cmp	x7, #0x0
    3d60:	add	x12, x12, #0x40
    3d64:	clz	x9, x7
    3d68:	csel	x9, x12, x9, eq  // eq = none
    3d6c:	sub	x12, x9, #0xf
    3d70:	cmp	x12, #0x3c
    3d74:	b.gt	3da0 <PyInit__ctypes_test@@Base+0xbf4>
    3d78:	add	w16, w12, #0x3
    3d7c:	mov	w15, #0x3d                  	// #61
    3d80:	sub	w12, w15, w12
    3d84:	lsl	x7, x7, x16
    3d88:	lsr	x12, x8, x12
    3d8c:	orr	x7, x12, x7
    3d90:	lsl	x8, x8, x16
    3d94:	mov	x4, #0xffffffffffffc011    	// #-16367
    3d98:	sub	x4, x4, x9
    3d9c:	b	3cf0 <PyInit__ctypes_test@@Base+0xb44>
    3da0:	sub	w7, w12, #0x3d
    3da4:	lsl	x7, x8, x7
    3da8:	mov	x8, #0x0                   	// #0
    3dac:	b	3d94 <PyInit__ctypes_test@@Base+0xbe8>
    3db0:	orr	x4, x7, x8
    3db4:	cbz	x4, 3de0 <PyInit__ctypes_test@@Base+0xc34>
    3db8:	tst	x7, #0x800000000000
    3dbc:	mov	x4, #0x7fff                	// #32767
    3dc0:	csinc	w0, w0, wzr, ne  // ne = any
    3dc4:	mov	x12, #0x3                   	// #3
    3dc8:	b	3cf4 <PyInit__ctypes_test@@Base+0xb48>
    3dcc:	mov	x7, #0x0                   	// #0
    3dd0:	mov	x8, #0x0                   	// #0
    3dd4:	mov	x4, #0x0                   	// #0
    3dd8:	mov	x12, #0x1                   	// #1
    3ddc:	b	3cf4 <PyInit__ctypes_test@@Base+0xb48>
    3de0:	mov	x7, #0x0                   	// #0
    3de4:	mov	x8, #0x0                   	// #0
    3de8:	mov	x4, #0x7fff                	// #32767
    3dec:	mov	x12, #0x2                   	// #2
    3df0:	b	3cf4 <PyInit__ctypes_test@@Base+0xb48>
    3df4:	cmp	x7, x2
    3df8:	b.cc	3e04 <PyInit__ctypes_test@@Base+0xc58>  // b.lo, b.ul, b.last
    3dfc:	ccmp	x8, x1, #0x2, eq  // eq = none
    3e00:	b.hi	409c <PyInit__ctypes_test@@Base+0xef0>  // b.pmore
    3e04:	lsl	x14, x1, #63
    3e08:	extr	x1, x2, x1, #1
    3e0c:	lsr	x2, x2, #1
    3e10:	extr	x3, x7, x8, #52
    3e14:	ubfx	x7, x7, #20, #32
    3e18:	and	x13, x3, #0xffffffff
    3e1c:	lsl	x8, x8, #12
    3e20:	udiv	x10, x2, x7
    3e24:	msub	x2, x10, x7, x2
    3e28:	mul	x11, x13, x10
    3e2c:	extr	x2, x2, x1, #32
    3e30:	cmp	x11, x2
    3e34:	b.ls	40a8 <PyInit__ctypes_test@@Base+0xefc>  // b.plast
    3e38:	sub	x4, x10, #0x1
    3e3c:	adds	x2, x3, x2
    3e40:	b.cs	3e54 <PyInit__ctypes_test@@Base+0xca8>  // b.hs, b.nlast
    3e44:	cmp	x11, x2
    3e48:	b.ls	3e54 <PyInit__ctypes_test@@Base+0xca8>  // b.plast
    3e4c:	sub	x4, x10, #0x2
    3e50:	add	x2, x2, x3
    3e54:	sub	x2, x2, x11
    3e58:	and	x1, x1, #0xffffffff
    3e5c:	udiv	x10, x2, x7
    3e60:	msub	x2, x10, x7, x2
    3e64:	mul	x11, x13, x10
    3e68:	orr	x1, x1, x2, lsl #32
    3e6c:	cmp	x11, x1
    3e70:	b.ls	40b0 <PyInit__ctypes_test@@Base+0xf04>  // b.plast
    3e74:	sub	x2, x10, #0x1
    3e78:	adds	x1, x3, x1
    3e7c:	b.cs	3e90 <PyInit__ctypes_test@@Base+0xce4>  // b.hs, b.nlast
    3e80:	cmp	x11, x1
    3e84:	b.ls	3e90 <PyInit__ctypes_test@@Base+0xce4>  // b.plast
    3e88:	sub	x2, x10, #0x2
    3e8c:	add	x1, x1, x3
    3e90:	orr	x4, x2, x4, lsl #32
    3e94:	and	x15, x8, #0xffffffff
    3e98:	lsr	x10, x8, #32
    3e9c:	sub	x1, x1, x11
    3ea0:	lsr	x12, x4, #32
    3ea4:	and	x11, x4, #0xffffffff
    3ea8:	mul	x16, x12, x15
    3eac:	mul	x2, x11, x15
    3eb0:	madd	x11, x10, x11, x16
    3eb4:	mul	x12, x12, x10
    3eb8:	add	x11, x11, x2, lsr #32
    3ebc:	cmp	x16, x11
    3ec0:	b.ls	3ecc <PyInit__ctypes_test@@Base+0xd20>  // b.plast
    3ec4:	mov	x16, #0x100000000           	// #4294967296
    3ec8:	add	x12, x12, x16
    3ecc:	add	x12, x12, x11, lsr #32
    3ed0:	and	x2, x2, #0xffffffff
    3ed4:	add	x11, x2, x11, lsl #32
    3ed8:	cmp	x1, x12
    3edc:	b.cc	3ee8 <PyInit__ctypes_test@@Base+0xd3c>  // b.lo, b.ul, b.last
    3ee0:	ccmp	x14, x11, #0x2, eq  // eq = none
    3ee4:	b.cs	40b8 <PyInit__ctypes_test@@Base+0xf0c>  // b.hs, b.nlast
    3ee8:	adds	x16, x14, x8
    3eec:	sub	x2, x4, #0x1
    3ef0:	adc	x1, x1, x3
    3ef4:	cset	x17, cs  // cs = hs, nlast
    3ef8:	mov	x14, x16
    3efc:	cmp	x3, x1
    3f00:	b.cc	3f10 <PyInit__ctypes_test@@Base+0xd64>  // b.lo, b.ul, b.last
    3f04:	cmp	x17, #0x0
    3f08:	ccmp	x3, x1, #0x0, eq  // eq = none
    3f0c:	b.ne	3f2c <PyInit__ctypes_test@@Base+0xd80>  // b.any
    3f10:	cmp	x12, x1
    3f14:	b.hi	3f20 <PyInit__ctypes_test@@Base+0xd74>  // b.pmore
    3f18:	ccmp	x11, x16, #0x0, eq  // eq = none
    3f1c:	b.ls	3f2c <PyInit__ctypes_test@@Base+0xd80>  // b.plast
    3f20:	adds	x14, x8, x16
    3f24:	sub	x2, x4, #0x2
    3f28:	adc	x1, x1, x3
    3f2c:	subs	x16, x14, x11
    3f30:	cmp	x14, x11
    3f34:	sbc	x1, x1, x12
    3f38:	cmp	x3, x1
    3f3c:	b.eq	414c <PyInit__ctypes_test@@Base+0xfa0>  // b.none
    3f40:	udiv	x12, x1, x7
    3f44:	msub	x1, x12, x7, x1
    3f48:	mul	x4, x13, x12
    3f4c:	extr	x1, x1, x16, #32
    3f50:	cmp	x4, x1
    3f54:	b.ls	40c0 <PyInit__ctypes_test@@Base+0xf14>  // b.plast
    3f58:	sub	x11, x12, #0x1
    3f5c:	adds	x1, x3, x1
    3f60:	b.cs	3f74 <PyInit__ctypes_test@@Base+0xdc8>  // b.hs, b.nlast
    3f64:	cmp	x4, x1
    3f68:	b.ls	3f74 <PyInit__ctypes_test@@Base+0xdc8>  // b.plast
    3f6c:	sub	x11, x12, #0x2
    3f70:	add	x1, x1, x3
    3f74:	sub	x1, x1, x4
    3f78:	and	x16, x16, #0xffffffff
    3f7c:	udiv	x12, x1, x7
    3f80:	msub	x4, x12, x7, x1
    3f84:	mul	x13, x13, x12
    3f88:	orr	x4, x16, x4, lsl #32
    3f8c:	cmp	x13, x4
    3f90:	b.ls	40c8 <PyInit__ctypes_test@@Base+0xf1c>  // b.plast
    3f94:	sub	x1, x12, #0x1
    3f98:	adds	x4, x3, x4
    3f9c:	b.cs	3fb0 <PyInit__ctypes_test@@Base+0xe04>  // b.hs, b.nlast
    3fa0:	cmp	x13, x4
    3fa4:	b.ls	3fb0 <PyInit__ctypes_test@@Base+0xe04>  // b.plast
    3fa8:	sub	x1, x12, #0x2
    3fac:	add	x4, x4, x3
    3fb0:	orr	x11, x1, x11, lsl #32
    3fb4:	sub	x4, x4, x13
    3fb8:	and	x12, x11, #0xffffffff
    3fbc:	lsr	x7, x11, #32
    3fc0:	mul	x1, x15, x12
    3fc4:	mul	x15, x7, x15
    3fc8:	mul	x7, x10, x7
    3fcc:	madd	x10, x10, x12, x15
    3fd0:	add	x10, x10, x1, lsr #32
    3fd4:	cmp	x15, x10
    3fd8:	b.ls	3fe4 <PyInit__ctypes_test@@Base+0xe38>  // b.plast
    3fdc:	mov	x12, #0x100000000           	// #4294967296
    3fe0:	add	x7, x7, x12
    3fe4:	add	x7, x7, x10, lsr #32
    3fe8:	and	x1, x1, #0xffffffff
    3fec:	add	x10, x1, x10, lsl #32
    3ff0:	cmp	x4, x7
    3ff4:	b.cc	4004 <PyInit__ctypes_test@@Base+0xe58>  // b.lo, b.ul, b.last
    3ff8:	cmp	x10, #0x0
    3ffc:	ccmp	x4, x7, #0x0, ne  // ne = any
    4000:	b.ne	40d0 <PyInit__ctypes_test@@Base+0xf24>  // b.any
    4004:	adds	x12, x3, x4
    4008:	sub	x1, x11, #0x1
    400c:	mov	x4, x12
    4010:	b.cs	403c <PyInit__ctypes_test@@Base+0xe90>  // b.hs, b.nlast
    4014:	cmp	x12, x7
    4018:	b.cc	4024 <PyInit__ctypes_test@@Base+0xe78>  // b.lo, b.ul, b.last
    401c:	ccmp	x8, x10, #0x2, eq  // eq = none
    4020:	b.cs	403c <PyInit__ctypes_test@@Base+0xe90>  // b.hs, b.nlast
    4024:	sub	x1, x11, #0x2
    4028:	lsl	x11, x8, #1
    402c:	cmp	x8, x11
    4030:	mov	x8, x11
    4034:	cinc	x4, x3, hi  // hi = pmore
    4038:	add	x4, x12, x4
    403c:	cmp	x4, x7
    4040:	mov	x3, x1
    4044:	ccmp	x8, x10, #0x0, eq  // eq = none
    4048:	orr	x1, x1, #0x1
    404c:	csel	x1, x1, x3, ne  // ne = any
    4050:	mov	x3, #0x3fff                	// #16383
    4054:	add	x3, x9, x3
    4058:	cmp	x3, #0x0
    405c:	b.le	4218 <PyInit__ctypes_test@@Base+0x106c>
    4060:	tst	x1, #0x7
    4064:	b.eq	4164 <PyInit__ctypes_test@@Base+0xfb8>  // b.none
    4068:	and	x4, x6, #0xc00000
    406c:	orr	w0, w0, #0x10
    4070:	cmp	x4, #0x400, lsl #12
    4074:	b.eq	4154 <PyInit__ctypes_test@@Base+0xfa8>  // b.none
    4078:	cmp	x4, #0x800, lsl #12
    407c:	b.eq	4160 <PyInit__ctypes_test@@Base+0xfb4>  // b.none
    4080:	cbnz	x4, 4164 <PyInit__ctypes_test@@Base+0xfb8>
    4084:	and	x4, x1, #0xf
    4088:	cmp	x4, #0x4
    408c:	b.eq	4164 <PyInit__ctypes_test@@Base+0xfb8>  // b.none
    4090:	adds	x1, x1, #0x4
    4094:	cinc	x2, x2, cs  // cs = hs, nlast
    4098:	b	4164 <PyInit__ctypes_test@@Base+0xfb8>
    409c:	sub	x9, x9, #0x1
    40a0:	mov	x14, #0x0                   	// #0
    40a4:	b	3e10 <PyInit__ctypes_test@@Base+0xc64>
    40a8:	mov	x4, x10
    40ac:	b	3e54 <PyInit__ctypes_test@@Base+0xca8>
    40b0:	mov	x2, x10
    40b4:	b	3e90 <PyInit__ctypes_test@@Base+0xce4>
    40b8:	mov	x2, x4
    40bc:	b	3f2c <PyInit__ctypes_test@@Base+0xd80>
    40c0:	mov	x11, x12
    40c4:	b	3f74 <PyInit__ctypes_test@@Base+0xdc8>
    40c8:	mov	x1, x12
    40cc:	b	3fb0 <PyInit__ctypes_test@@Base+0xe04>
    40d0:	mov	x1, x11
    40d4:	mov	x8, #0x0                   	// #0
    40d8:	b	403c <PyInit__ctypes_test@@Base+0xe90>
    40dc:	tbz	x2, #47, 40f0 <PyInit__ctypes_test@@Base+0xf44>
    40e0:	tbnz	x7, #47, 40f0 <PyInit__ctypes_test@@Base+0xf44>
    40e4:	mov	x2, x7
    40e8:	mov	x1, x8
    40ec:	mov	x10, x13
    40f0:	orr	x2, x2, #0x800000000000
    40f4:	mov	x5, x10
    40f8:	mov	x3, #0x7fff                	// #32767
    40fc:	b	4184 <PyInit__ctypes_test@@Base+0xfd8>
    4100:	orr	w0, w0, #0x2
    4104:	mov	x2, #0x0                   	// #0
    4108:	mov	x1, #0x0                   	// #0
    410c:	b	40f8 <PyInit__ctypes_test@@Base+0xf4c>
    4110:	mov	x5, x10
    4114:	mov	x12, x14
    4118:	cmp	x12, #0x1
    411c:	b.eq	4380 <PyInit__ctypes_test@@Base+0x11d4>  // b.none
    4120:	cbz	x12, 4050 <PyInit__ctypes_test@@Base+0xea4>
    4124:	cmp	x12, #0x2
    4128:	b.eq	4104 <PyInit__ctypes_test@@Base+0xf58>  // b.none
    412c:	cmp	x12, #0x3
    4130:	b.ne	4050 <PyInit__ctypes_test@@Base+0xea4>  // b.any
    4134:	mov	x10, x5
    4138:	b	40f0 <PyInit__ctypes_test@@Base+0xf44>
    413c:	mov	x2, x7
    4140:	mov	x1, x8
    4144:	mov	x5, x13
    4148:	b	4118 <PyInit__ctypes_test@@Base+0xf6c>
    414c:	mov	x1, #0xffffffffffffffff    	// #-1
    4150:	b	4050 <PyInit__ctypes_test@@Base+0xea4>
    4154:	cbnz	x5, 4164 <PyInit__ctypes_test@@Base+0xfb8>
    4158:	adds	x1, x1, #0x8
    415c:	b	4094 <PyInit__ctypes_test@@Base+0xee8>
    4160:	cbnz	x5, 4158 <PyInit__ctypes_test@@Base+0xfac>
    4164:	tbz	x2, #52, 4170 <PyInit__ctypes_test@@Base+0xfc4>
    4168:	and	x2, x2, #0xffefffffffffffff
    416c:	add	x3, x9, #0x4, lsl #12
    4170:	mov	x4, #0x7ffe                	// #32766
    4174:	cmp	x3, x4
    4178:	b.gt	41b8 <PyInit__ctypes_test@@Base+0x100c>
    417c:	extr	x1, x2, x1, #3
    4180:	lsr	x2, x2, #3
    4184:	and	x3, x3, #0x7fff
    4188:	mov	x7, #0x0                   	// #0
    418c:	bfxil	x7, x2, #0, #48
    4190:	orr	w3, w3, w5, lsl #15
    4194:	fmov	d0, x1
    4198:	bfi	x7, x3, #48, #16
    419c:	fmov	v0.d[1], x7
    41a0:	cbz	w0, 41b0 <PyInit__ctypes_test@@Base+0x1004>
    41a4:	str	q0, [sp, #16]
    41a8:	bl	4cf0 <PyInit__ctypes_test@@Base+0x1b44>
    41ac:	ldr	q0, [sp, #16]
    41b0:	ldp	x29, x30, [sp], #32
    41b4:	ret
    41b8:	and	x1, x6, #0xc00000
    41bc:	cmp	x1, #0x400, lsl #12
    41c0:	b.eq	41e4 <PyInit__ctypes_test@@Base+0x1038>  // b.none
    41c4:	cmp	x1, #0x800, lsl #12
    41c8:	b.eq	41f8 <PyInit__ctypes_test@@Base+0x104c>  // b.none
    41cc:	cbnz	x1, 420c <PyInit__ctypes_test@@Base+0x1060>
    41d0:	mov	x3, #0x7fff                	// #32767
    41d4:	mov	w2, #0x14                  	// #20
    41d8:	orr	w0, w0, w2
    41dc:	mov	x2, x1
    41e0:	b	4184 <PyInit__ctypes_test@@Base+0xfd8>
    41e4:	cmp	x5, #0x0
    41e8:	mov	x2, #0x7fff                	// #32767
    41ec:	csetm	x1, ne  // ne = any
    41f0:	csel	x3, x2, x4, eq  // eq = none
    41f4:	b	41d4 <PyInit__ctypes_test@@Base+0x1028>
    41f8:	cmp	x5, #0x0
    41fc:	mov	x2, #0x7fff                	// #32767
    4200:	csetm	x1, eq  // eq = none
    4204:	csel	x3, x2, x4, ne  // ne = any
    4208:	b	41d4 <PyInit__ctypes_test@@Base+0x1028>
    420c:	mov	x3, x4
    4210:	mov	x1, #0xffffffffffffffff    	// #-1
    4214:	b	41d4 <PyInit__ctypes_test@@Base+0x1028>
    4218:	mov	x4, #0x1                   	// #1
    421c:	sub	x3, x4, x3
    4220:	cmp	x3, #0x74
    4224:	b.gt	430c <PyInit__ctypes_test@@Base+0x1160>
    4228:	cmp	x3, #0x3f
    422c:	b.gt	4294 <PyInit__ctypes_test@@Base+0x10e8>
    4230:	mov	w7, #0x40                  	// #64
    4234:	sub	w7, w7, w3
    4238:	lsr	x8, x1, x3
    423c:	lsl	x1, x1, x7
    4240:	cmp	x1, #0x0
    4244:	lsl	x4, x2, x7
    4248:	cset	x1, ne  // ne = any
    424c:	orr	x4, x4, x8
    4250:	lsr	x2, x2, x3
    4254:	orr	x1, x4, x1
    4258:	tst	x1, #0x7
    425c:	b.eq	42d8 <PyInit__ctypes_test@@Base+0x112c>  // b.none
    4260:	and	x3, x6, #0xc00000
    4264:	orr	w0, w0, #0x10
    4268:	cmp	x3, #0x400, lsl #12
    426c:	b.eq	42c8 <PyInit__ctypes_test@@Base+0x111c>  // b.none
    4270:	cmp	x3, #0x800, lsl #12
    4274:	b.eq	42d4 <PyInit__ctypes_test@@Base+0x1128>  // b.none
    4278:	cbnz	x3, 42d8 <PyInit__ctypes_test@@Base+0x112c>
    427c:	and	x3, x1, #0xf
    4280:	cmp	x3, #0x4
    4284:	b.eq	42d8 <PyInit__ctypes_test@@Base+0x112c>  // b.none
    4288:	adds	x1, x1, #0x4
    428c:	cinc	x2, x2, cs  // cs = hs, nlast
    4290:	b	42d8 <PyInit__ctypes_test@@Base+0x112c>
    4294:	sub	w4, w3, #0x40
    4298:	mov	w7, #0x80                  	// #128
    429c:	sub	w7, w7, w3
    42a0:	cmp	x3, #0x40
    42a4:	lsr	x4, x2, x4
    42a8:	lsl	x2, x2, x7
    42ac:	csel	x2, x2, xzr, ne  // ne = any
    42b0:	orr	x1, x2, x1
    42b4:	mov	x2, #0x0                   	// #0
    42b8:	cmp	x1, #0x0
    42bc:	cset	x1, ne  // ne = any
    42c0:	orr	x1, x4, x1
    42c4:	b	4258 <PyInit__ctypes_test@@Base+0x10ac>
    42c8:	cbnz	x5, 42d8 <PyInit__ctypes_test@@Base+0x112c>
    42cc:	adds	x1, x1, #0x8
    42d0:	b	428c <PyInit__ctypes_test@@Base+0x10e0>
    42d4:	cbnz	x5, 42cc <PyInit__ctypes_test@@Base+0x1120>
    42d8:	tbz	x2, #51, 42f4 <PyInit__ctypes_test@@Base+0x1148>
    42dc:	orr	w0, w0, #0x10
    42e0:	mov	x2, #0x0                   	// #0
    42e4:	mov	x1, #0x0                   	// #0
    42e8:	mov	x3, #0x1                   	// #1
    42ec:	orr	w0, w0, #0x8
    42f0:	b	4184 <PyInit__ctypes_test@@Base+0xfd8>
    42f4:	mov	x3, #0x0                   	// #0
    42f8:	extr	x1, x2, x1, #3
    42fc:	lsr	x2, x2, #3
    4300:	tbnz	w0, #4, 42ec <PyInit__ctypes_test@@Base+0x1140>
    4304:	tbz	w6, #11, 4184 <PyInit__ctypes_test@@Base+0xfd8>
    4308:	b	42ec <PyInit__ctypes_test@@Base+0x1140>
    430c:	orr	x1, x1, x2
    4310:	cbz	x1, 433c <PyInit__ctypes_test@@Base+0x1190>
    4314:	and	x6, x6, #0xc00000
    4318:	orr	w0, w0, #0x10
    431c:	cmp	x6, #0x400, lsl #12
    4320:	b.eq	434c <PyInit__ctypes_test@@Base+0x11a0>  // b.none
    4324:	cmp	x6, #0x800, lsl #12
    4328:	b.eq	435c <PyInit__ctypes_test@@Base+0x11b0>  // b.none
    432c:	cmp	x6, #0x0
    4330:	mov	x1, #0x5                   	// #5
    4334:	csel	x4, x4, x1, ne  // ne = any
    4338:	lsr	x1, x4, #3
    433c:	orr	w0, w0, #0x8
    4340:	mov	x2, #0x0                   	// #0
    4344:	mov	x3, #0x0                   	// #0
    4348:	b	4184 <PyInit__ctypes_test@@Base+0xfd8>
    434c:	cmp	x5, #0x0
    4350:	mov	x1, #0x9                   	// #9
    4354:	csel	x4, x1, x4, eq  // eq = none
    4358:	b	4338 <PyInit__ctypes_test@@Base+0x118c>
    435c:	cmp	x5, #0x0
    4360:	mov	x1, #0x9                   	// #9
    4364:	csel	x4, x1, x4, ne  // ne = any
    4368:	b	4338 <PyInit__ctypes_test@@Base+0x118c>
    436c:	mov	x2, #0xffffffffffff        	// #281474976710655
    4370:	mov	x1, #0xffffffffffffffff    	// #-1
    4374:	mov	w0, #0x1                   	// #1
    4378:	mov	x10, #0x0                   	// #0
    437c:	b	40f0 <PyInit__ctypes_test@@Base+0xf44>
    4380:	mov	x2, #0x0                   	// #0
    4384:	mov	x1, #0x0                   	// #0
    4388:	b	4344 <PyInit__ctypes_test@@Base+0x1198>
    438c:	stp	x29, x30, [sp, #-32]!
    4390:	mov	x29, sp
    4394:	str	q0, [sp, #16]
    4398:	ldp	x8, x4, [sp, #16]
    439c:	str	q1, [sp, #16]
    43a0:	ldp	x1, x9, [sp, #16]
    43a4:	mrs	x6, fpcr
    43a8:	ubfx	x11, x4, #0, #48
    43ac:	ubfx	x10, x4, #48, #15
    43b0:	lsr	x4, x4, #63
    43b4:	and	w5, w4, #0xff
    43b8:	cbz	w10, 43ec <PyInit__ctypes_test@@Base+0x1240>
    43bc:	mov	w2, #0x7fff                	// #32767
    43c0:	cmp	w10, w2
    43c4:	b.eq	444c <PyInit__ctypes_test@@Base+0x12a0>  // b.none
    43c8:	and	x10, x10, #0xffff
    43cc:	extr	x11, x11, x8, #61
    43d0:	mov	x12, #0xffffffffffffc001    	// #-16383
    43d4:	orr	x11, x11, #0x8000000000000
    43d8:	lsl	x2, x8, #3
    43dc:	add	x10, x10, x12
    43e0:	mov	x15, #0x0                   	// #0
    43e4:	mov	w0, #0x0                   	// #0
    43e8:	b	446c <PyInit__ctypes_test@@Base+0x12c0>
    43ec:	orr	x2, x11, x8
    43f0:	cbz	x2, 44ec <PyInit__ctypes_test@@Base+0x1340>
    43f4:	clz	x2, x8
    43f8:	cmp	x11, #0x0
    43fc:	clz	x0, x11
    4400:	add	x2, x2, #0x40
    4404:	csel	x0, x2, x0, eq  // eq = none
    4408:	sub	x7, x0, #0xf
    440c:	cmp	x7, #0x3c
    4410:	b.gt	443c <PyInit__ctypes_test@@Base+0x1290>
    4414:	add	w2, w7, #0x3
    4418:	mov	w10, #0x3d                  	// #61
    441c:	sub	w7, w10, w7
    4420:	lsl	x11, x11, x2
    4424:	lsr	x7, x8, x7
    4428:	orr	x11, x7, x11
    442c:	lsl	x2, x8, x2
    4430:	mov	x10, #0xffffffffffffc011    	// #-16367
    4434:	sub	x10, x10, x0
    4438:	b	43e0 <PyInit__ctypes_test@@Base+0x1234>
    443c:	sub	w11, w7, #0x3d
    4440:	mov	x2, #0x0                   	// #0
    4444:	lsl	x11, x8, x11
    4448:	b	4430 <PyInit__ctypes_test@@Base+0x1284>
    444c:	orr	x2, x11, x8
    4450:	cbz	x2, 44fc <PyInit__ctypes_test@@Base+0x1350>
    4454:	lsr	x0, x11, #47
    4458:	mov	x2, x8
    445c:	eor	x0, x0, #0x1
    4460:	mov	x10, #0x7fff                	// #32767
    4464:	and	w0, w0, #0x1
    4468:	mov	x15, #0x3                   	// #3
    446c:	lsr	x8, x9, #63
    4470:	ubfx	x12, x9, #0, #48
    4474:	ubfx	x7, x9, #48, #15
    4478:	and	w3, w8, #0xff
    447c:	mov	x16, x8
    4480:	cbz	w7, 450c <PyInit__ctypes_test@@Base+0x1360>
    4484:	mov	w8, #0x7fff                	// #32767
    4488:	cmp	w7, w8
    448c:	b.eq	456c <PyInit__ctypes_test@@Base+0x13c0>  // b.none
    4490:	and	x7, x7, #0xffff
    4494:	extr	x12, x12, x1, #61
    4498:	mov	x8, #0xffffffffffffc001    	// #-16383
    449c:	orr	x12, x12, #0x8000000000000
    44a0:	lsl	x1, x1, #3
    44a4:	add	x7, x7, x8
    44a8:	mov	x8, #0x0                   	// #0
    44ac:	eor	w5, w5, w3
    44b0:	orr	x3, x8, x15, lsl #2
    44b4:	add	x10, x7, x10
    44b8:	sub	x3, x3, #0x1
    44bc:	and	x5, x5, #0xff
    44c0:	add	x9, x10, #0x1
    44c4:	cmp	x3, #0xe
    44c8:	b.hi	45e0 <PyInit__ctypes_test@@Base+0x1434>  // b.pmore
    44cc:	cmp	w3, #0xe
    44d0:	b.hi	45e0 <PyInit__ctypes_test@@Base+0x1434>  // b.pmore
    44d4:	adrp	x7, 4000 <PyInit__ctypes_test@@Base+0xe54>
    44d8:	add	x7, x7, #0xef0
    44dc:	ldrh	w3, [x7, w3, uxtw #1]
    44e0:	adr	x7, 44ec <PyInit__ctypes_test@@Base+0x1340>
    44e4:	add	x3, x7, w3, sxth #2
    44e8:	br	x3
    44ec:	mov	x11, #0x0                   	// #0
    44f0:	mov	x10, #0x0                   	// #0
    44f4:	mov	x15, #0x1                   	// #1
    44f8:	b	43e4 <PyInit__ctypes_test@@Base+0x1238>
    44fc:	mov	x11, #0x0                   	// #0
    4500:	mov	x10, #0x7fff                	// #32767
    4504:	mov	x15, #0x2                   	// #2
    4508:	b	43e4 <PyInit__ctypes_test@@Base+0x1238>
    450c:	orr	x7, x12, x1
    4510:	cbz	x7, 4588 <PyInit__ctypes_test@@Base+0x13dc>
    4514:	clz	x13, x1
    4518:	cmp	x12, #0x0
    451c:	add	x13, x13, #0x40
    4520:	clz	x7, x12
    4524:	csel	x9, x13, x7, eq  // eq = none
    4528:	sub	x13, x9, #0xf
    452c:	cmp	x13, #0x3c
    4530:	b.gt	455c <PyInit__ctypes_test@@Base+0x13b0>
    4534:	add	w7, w13, #0x3
    4538:	mov	w14, #0x3d                  	// #61
    453c:	sub	w13, w14, w13
    4540:	lsl	x12, x12, x7
    4544:	lsr	x13, x1, x13
    4548:	orr	x12, x13, x12
    454c:	lsl	x1, x1, x7
    4550:	mov	x7, #0xffffffffffffc011    	// #-16367
    4554:	sub	x7, x7, x9
    4558:	b	44a8 <PyInit__ctypes_test@@Base+0x12fc>
    455c:	sub	w12, w13, #0x3d
    4560:	lsl	x12, x1, x12
    4564:	mov	x1, #0x0                   	// #0
    4568:	b	4550 <PyInit__ctypes_test@@Base+0x13a4>
    456c:	orr	x7, x12, x1
    4570:	cbz	x7, 459c <PyInit__ctypes_test@@Base+0x13f0>
    4574:	tst	x12, #0x800000000000
    4578:	mov	x7, #0x7fff                	// #32767
    457c:	csinc	w0, w0, wzr, ne  // ne = any
    4580:	mov	x8, #0x3                   	// #3
    4584:	b	44ac <PyInit__ctypes_test@@Base+0x1300>
    4588:	mov	x12, #0x0                   	// #0
    458c:	mov	x1, #0x0                   	// #0
    4590:	mov	x7, #0x0                   	// #0
    4594:	mov	x8, #0x1                   	// #1
    4598:	b	44ac <PyInit__ctypes_test@@Base+0x1300>
    459c:	mov	x12, #0x0                   	// #0
    45a0:	mov	x1, #0x0                   	// #0
    45a4:	mov	x7, #0x7fff                	// #32767
    45a8:	mov	x8, #0x2                   	// #2
    45ac:	b	44ac <PyInit__ctypes_test@@Base+0x1300>
    45b0:	mov	x12, x11
    45b4:	mov	x1, x2
    45b8:	mov	x8, x15
    45bc:	cmp	x8, #0x2
    45c0:	b.eq	4a0c <PyInit__ctypes_test@@Base+0x1860>  // b.none
    45c4:	cmp	x8, #0x3
    45c8:	b.eq	49fc <PyInit__ctypes_test@@Base+0x1850>  // b.none
    45cc:	cmp	x8, #0x1
    45d0:	b.ne	4740 <PyInit__ctypes_test@@Base+0x1594>  // b.any
    45d4:	mov	x1, #0x0                   	// #0
    45d8:	mov	x2, #0x0                   	// #0
    45dc:	b	49c0 <PyInit__ctypes_test@@Base+0x1814>
    45e0:	lsr	x14, x2, #32
    45e4:	and	x15, x1, #0xffffffff
    45e8:	lsr	x4, x1, #32
    45ec:	and	x2, x2, #0xffffffff
    45f0:	mul	x1, x14, x15
    45f4:	mul	x3, x15, x2
    45f8:	madd	x13, x4, x2, x1
    45fc:	mul	x17, x14, x4
    4600:	add	x13, x13, x3, lsr #32
    4604:	cmp	x1, x13
    4608:	b.ls	4614 <PyInit__ctypes_test@@Base+0x1468>  // b.plast
    460c:	mov	x1, #0x100000000           	// #4294967296
    4610:	add	x17, x17, x1
    4614:	and	x3, x3, #0xffffffff
    4618:	and	x1, x12, #0xffffffff
    461c:	lsr	x7, x13, #32
    4620:	add	x13, x3, x13, lsl #32
    4624:	lsr	x3, x12, #32
    4628:	mul	x12, x14, x1
    462c:	mul	x18, x2, x1
    4630:	madd	x2, x3, x2, x12
    4634:	mul	x14, x14, x3
    4638:	add	x8, x2, x18, lsr #32
    463c:	cmp	x12, x8
    4640:	b.ls	464c <PyInit__ctypes_test@@Base+0x14a0>  // b.plast
    4644:	mov	x2, #0x100000000           	// #4294967296
    4648:	add	x14, x14, x2
    464c:	lsr	x16, x11, #32
    4650:	and	x11, x11, #0xffffffff
    4654:	and	x18, x18, #0xffffffff
    4658:	add	x14, x14, x8, lsr #32
    465c:	add	x18, x18, x8, lsl #32
    4660:	mul	x8, x15, x11
    4664:	add	x7, x7, x18
    4668:	mul	x15, x16, x15
    466c:	mul	x2, x4, x16
    4670:	madd	x4, x4, x11, x15
    4674:	add	x4, x4, x8, lsr #32
    4678:	cmp	x15, x4
    467c:	b.ls	4688 <PyInit__ctypes_test@@Base+0x14dc>  // b.plast
    4680:	mov	x12, #0x100000000           	// #4294967296
    4684:	add	x2, x2, x12
    4688:	mul	x12, x16, x1
    468c:	and	x8, x8, #0xffffffff
    4690:	mul	x16, x3, x16
    4694:	add	x15, x2, x4, lsr #32
    4698:	madd	x3, x3, x11, x12
    469c:	add	x8, x8, x4, lsl #32
    46a0:	mul	x4, x11, x1
    46a4:	add	x3, x3, x4, lsr #32
    46a8:	cmp	x12, x3
    46ac:	b.ls	46b8 <PyInit__ctypes_test@@Base+0x150c>  // b.plast
    46b0:	mov	x1, #0x100000000           	// #4294967296
    46b4:	add	x16, x16, x1
    46b8:	and	x2, x4, #0xffffffff
    46bc:	add	x7, x17, x7
    46c0:	add	x2, x2, x3, lsl #32
    46c4:	lsr	x3, x3, #32
    46c8:	adds	x2, x2, x14
    46cc:	cset	x4, cs  // cs = hs, nlast
    46d0:	cmp	x7, x18
    46d4:	cset	x1, cc  // cc = lo, ul, last
    46d8:	adds	x2, x2, x1
    46dc:	cset	x1, cs  // cs = hs, nlast
    46e0:	cmp	x4, #0x0
    46e4:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    46e8:	cinc	x3, x3, ne  // ne = any
    46ec:	adds	x7, x7, x8
    46f0:	cset	x1, cs  // cs = hs, nlast
    46f4:	adds	x2, x2, x15
    46f8:	cset	x4, cs  // cs = hs, nlast
    46fc:	adds	x2, x2, x1
    4700:	cset	x1, cs  // cs = hs, nlast
    4704:	cmp	x4, #0x0
    4708:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    470c:	orr	x13, x13, x7, lsl #13
    4710:	cinc	x1, x16, ne  // ne = any
    4714:	cmp	x13, #0x0
    4718:	add	x3, x1, x3
    471c:	cset	x1, ne  // ne = any
    4720:	orr	x7, x1, x7, lsr #51
    4724:	orr	x1, x7, x2, lsl #13
    4728:	extr	x12, x3, x2, #51
    472c:	tbz	x3, #39, 47c8 <PyInit__ctypes_test@@Base+0x161c>
    4730:	and	x2, x1, #0x1
    4734:	orr	x1, x2, x1, lsr #1
    4738:	orr	x1, x1, x12, lsl #63
    473c:	lsr	x12, x12, #1
    4740:	mov	x2, #0x3fff                	// #16383
    4744:	add	x3, x9, x2
    4748:	cmp	x3, #0x0
    474c:	b.le	4894 <PyInit__ctypes_test@@Base+0x16e8>
    4750:	tst	x1, #0x7
    4754:	b.eq	47e0 <PyInit__ctypes_test@@Base+0x1634>  // b.none
    4758:	and	x2, x6, #0xc00000
    475c:	orr	w0, w0, #0x10
    4760:	cmp	x2, #0x400, lsl #12
    4764:	b.eq	47d0 <PyInit__ctypes_test@@Base+0x1624>  // b.none
    4768:	cmp	x2, #0x800, lsl #12
    476c:	b.eq	47dc <PyInit__ctypes_test@@Base+0x1630>  // b.none
    4770:	cbnz	x2, 47e0 <PyInit__ctypes_test@@Base+0x1634>
    4774:	and	x2, x1, #0xf
    4778:	cmp	x2, #0x4
    477c:	b.eq	47e0 <PyInit__ctypes_test@@Base+0x1634>  // b.none
    4780:	adds	x1, x1, #0x4
    4784:	cinc	x12, x12, cs  // cs = hs, nlast
    4788:	b	47e0 <PyInit__ctypes_test@@Base+0x1634>
    478c:	tbz	x11, #47, 47a0 <PyInit__ctypes_test@@Base+0x15f4>
    4790:	tbnz	x12, #47, 47a0 <PyInit__ctypes_test@@Base+0x15f4>
    4794:	mov	x11, x12
    4798:	mov	x2, x1
    479c:	mov	x4, x16
    47a0:	orr	x1, x11, #0x800000000000
    47a4:	mov	x5, x4
    47a8:	mov	x3, #0x7fff                	// #32767
    47ac:	b	4800 <PyInit__ctypes_test@@Base+0x1654>
    47b0:	mov	x12, x11
    47b4:	mov	x1, x2
    47b8:	mov	x5, x4
    47bc:	b	45b8 <PyInit__ctypes_test@@Base+0x140c>
    47c0:	mov	x5, x16
    47c4:	b	45bc <PyInit__ctypes_test@@Base+0x1410>
    47c8:	mov	x9, x10
    47cc:	b	4740 <PyInit__ctypes_test@@Base+0x1594>
    47d0:	cbnz	x5, 47e0 <PyInit__ctypes_test@@Base+0x1634>
    47d4:	adds	x1, x1, #0x8
    47d8:	b	4784 <PyInit__ctypes_test@@Base+0x15d8>
    47dc:	cbnz	x5, 47d4 <PyInit__ctypes_test@@Base+0x1628>
    47e0:	tbz	x12, #52, 47ec <PyInit__ctypes_test@@Base+0x1640>
    47e4:	and	x12, x12, #0xffefffffffffffff
    47e8:	add	x3, x9, #0x4, lsl #12
    47ec:	mov	x4, #0x7ffe                	// #32766
    47f0:	cmp	x3, x4
    47f4:	b.gt	4834 <PyInit__ctypes_test@@Base+0x1688>
    47f8:	extr	x2, x12, x1, #3
    47fc:	lsr	x1, x12, #3
    4800:	and	x3, x3, #0x7fff
    4804:	mov	x7, #0x0                   	// #0
    4808:	bfxil	x7, x1, #0, #48
    480c:	orr	w3, w3, w5, lsl #15
    4810:	fmov	d0, x2
    4814:	bfi	x7, x3, #48, #16
    4818:	fmov	v0.d[1], x7
    481c:	cbz	w0, 482c <PyInit__ctypes_test@@Base+0x1680>
    4820:	str	q0, [sp, #16]
    4824:	bl	4cf0 <PyInit__ctypes_test@@Base+0x1b44>
    4828:	ldr	q0, [sp, #16]
    482c:	ldp	x29, x30, [sp], #32
    4830:	ret
    4834:	and	x2, x6, #0xc00000
    4838:	cmp	x2, #0x400, lsl #12
    483c:	b.eq	4860 <PyInit__ctypes_test@@Base+0x16b4>  // b.none
    4840:	cmp	x2, #0x800, lsl #12
    4844:	b.eq	4874 <PyInit__ctypes_test@@Base+0x16c8>  // b.none
    4848:	cbnz	x2, 4888 <PyInit__ctypes_test@@Base+0x16dc>
    484c:	mov	x3, #0x7fff                	// #32767
    4850:	mov	w1, #0x14                  	// #20
    4854:	orr	w0, w0, w1
    4858:	mov	x1, x2
    485c:	b	4800 <PyInit__ctypes_test@@Base+0x1654>
    4860:	cmp	x5, #0x0
    4864:	mov	x3, #0x7fff                	// #32767
    4868:	csetm	x2, ne  // ne = any
    486c:	csel	x3, x3, x4, eq  // eq = none
    4870:	b	4850 <PyInit__ctypes_test@@Base+0x16a4>
    4874:	cmp	x5, #0x0
    4878:	mov	x3, #0x7fff                	// #32767
    487c:	csetm	x2, eq  // eq = none
    4880:	csel	x3, x3, x4, ne  // ne = any
    4884:	b	4850 <PyInit__ctypes_test@@Base+0x16a4>
    4888:	mov	x3, x4
    488c:	mov	x2, #0xffffffffffffffff    	// #-1
    4890:	b	4850 <PyInit__ctypes_test@@Base+0x16a4>
    4894:	mov	x4, #0x1                   	// #1
    4898:	sub	x3, x4, x3
    489c:	cmp	x3, #0x74
    48a0:	b.gt	4988 <PyInit__ctypes_test@@Base+0x17dc>
    48a4:	cmp	x3, #0x3f
    48a8:	b.gt	4910 <PyInit__ctypes_test@@Base+0x1764>
    48ac:	mov	w4, #0x40                  	// #64
    48b0:	sub	w4, w4, w3
    48b4:	lsr	x7, x1, x3
    48b8:	lsl	x1, x1, x4
    48bc:	cmp	x1, #0x0
    48c0:	cset	x1, ne  // ne = any
    48c4:	lsl	x2, x12, x4
    48c8:	orr	x2, x2, x7
    48cc:	orr	x2, x2, x1
    48d0:	lsr	x1, x12, x3
    48d4:	tst	x2, #0x7
    48d8:	b.eq	4954 <PyInit__ctypes_test@@Base+0x17a8>  // b.none
    48dc:	and	x3, x6, #0xc00000
    48e0:	orr	w0, w0, #0x10
    48e4:	cmp	x3, #0x400, lsl #12
    48e8:	b.eq	4944 <PyInit__ctypes_test@@Base+0x1798>  // b.none
    48ec:	cmp	x3, #0x800, lsl #12
    48f0:	b.eq	4950 <PyInit__ctypes_test@@Base+0x17a4>  // b.none
    48f4:	cbnz	x3, 4954 <PyInit__ctypes_test@@Base+0x17a8>
    48f8:	and	x3, x2, #0xf
    48fc:	cmp	x3, #0x4
    4900:	b.eq	4954 <PyInit__ctypes_test@@Base+0x17a8>  // b.none
    4904:	adds	x2, x2, #0x4
    4908:	cinc	x1, x1, cs  // cs = hs, nlast
    490c:	b	4954 <PyInit__ctypes_test@@Base+0x17a8>
    4910:	sub	w2, w3, #0x40
    4914:	mov	w4, #0x80                  	// #128
    4918:	sub	w4, w4, w3
    491c:	cmp	x3, #0x40
    4920:	lsr	x2, x12, x2
    4924:	lsl	x12, x12, x4
    4928:	csel	x12, x12, xzr, ne  // ne = any
    492c:	orr	x1, x12, x1
    4930:	cmp	x1, #0x0
    4934:	cset	x1, ne  // ne = any
    4938:	orr	x2, x2, x1
    493c:	mov	x1, #0x0                   	// #0
    4940:	b	48d4 <PyInit__ctypes_test@@Base+0x1728>
    4944:	cbnz	x5, 4954 <PyInit__ctypes_test@@Base+0x17a8>
    4948:	adds	x2, x2, #0x8
    494c:	b	4908 <PyInit__ctypes_test@@Base+0x175c>
    4950:	cbnz	x5, 4948 <PyInit__ctypes_test@@Base+0x179c>
    4954:	tbz	x1, #51, 4970 <PyInit__ctypes_test@@Base+0x17c4>
    4958:	orr	w0, w0, #0x10
    495c:	mov	x1, #0x0                   	// #0
    4960:	mov	x2, #0x0                   	// #0
    4964:	mov	x3, #0x1                   	// #1
    4968:	orr	w0, w0, #0x8
    496c:	b	4800 <PyInit__ctypes_test@@Base+0x1654>
    4970:	mov	x3, #0x0                   	// #0
    4974:	extr	x2, x1, x2, #3
    4978:	lsr	x1, x1, #3
    497c:	tbnz	w0, #4, 4968 <PyInit__ctypes_test@@Base+0x17bc>
    4980:	tbz	w6, #11, 4800 <PyInit__ctypes_test@@Base+0x1654>
    4984:	b	4968 <PyInit__ctypes_test@@Base+0x17bc>
    4988:	orr	x2, x1, x12
    498c:	cbz	x2, 49b8 <PyInit__ctypes_test@@Base+0x180c>
    4990:	and	x6, x6, #0xc00000
    4994:	orr	w0, w0, #0x10
    4998:	cmp	x6, #0x400, lsl #12
    499c:	b.eq	49c8 <PyInit__ctypes_test@@Base+0x181c>  // b.none
    49a0:	cmp	x6, #0x800, lsl #12
    49a4:	b.eq	49d8 <PyInit__ctypes_test@@Base+0x182c>  // b.none
    49a8:	cmp	x6, #0x0
    49ac:	mov	x2, #0x5                   	// #5
    49b0:	csel	x4, x4, x2, ne  // ne = any
    49b4:	lsr	x2, x4, #3
    49b8:	orr	w0, w0, #0x8
    49bc:	mov	x1, #0x0                   	// #0
    49c0:	mov	x3, #0x0                   	// #0
    49c4:	b	4800 <PyInit__ctypes_test@@Base+0x1654>
    49c8:	cmp	x5, #0x0
    49cc:	mov	x2, #0x9                   	// #9
    49d0:	csel	x4, x2, x4, eq  // eq = none
    49d4:	b	49b4 <PyInit__ctypes_test@@Base+0x1808>
    49d8:	cmp	x5, #0x0
    49dc:	mov	x2, #0x9                   	// #9
    49e0:	csel	x4, x2, x4, ne  // ne = any
    49e4:	b	49b4 <PyInit__ctypes_test@@Base+0x1808>
    49e8:	mov	x11, #0xffffffffffff        	// #281474976710655
    49ec:	mov	x2, #0xffffffffffffffff    	// #-1
    49f0:	mov	w0, #0x1                   	// #1
    49f4:	mov	x4, #0x0                   	// #0
    49f8:	b	47a0 <PyInit__ctypes_test@@Base+0x15f4>
    49fc:	mov	x11, x12
    4a00:	mov	x2, x1
    4a04:	mov	x4, x5
    4a08:	b	47a0 <PyInit__ctypes_test@@Base+0x15f4>
    4a0c:	mov	x1, #0x0                   	// #0
    4a10:	mov	x2, #0x0                   	// #0
    4a14:	b	47a8 <PyInit__ctypes_test@@Base+0x15fc>
    4a18:	stp	x29, x30, [sp, #-48]!
    4a1c:	mov	x29, sp
    4a20:	str	x19, [sp, #16]
    4a24:	str	q0, [sp, #32]
    4a28:	ldp	x2, x1, [sp, #32]
    4a2c:	mrs	x0, fpcr
    4a30:	ubfx	x4, x1, #48, #15
    4a34:	mov	x5, #0x3ffe                	// #16382
    4a38:	ubfx	x0, x1, #0, #48
    4a3c:	mov	x3, x4
    4a40:	cmp	x4, x5
    4a44:	b.gt	4a64 <PyInit__ctypes_test@@Base+0x18b8>
    4a48:	cbnz	x4, 4b24 <PyInit__ctypes_test@@Base+0x1978>
    4a4c:	orr	x19, x0, x2
    4a50:	cbnz	x19, 4b24 <PyInit__ctypes_test@@Base+0x1978>
    4a54:	mov	x0, x19
    4a58:	ldr	x19, [sp, #16]
    4a5c:	ldp	x29, x30, [sp], #48
    4a60:	ret
    4a64:	lsr	x1, x1, #63
    4a68:	mov	x5, #0x403d                	// #16445
    4a6c:	and	w1, w1, #0xff
    4a70:	cmp	x4, x5
    4a74:	b.le	4aac <PyInit__ctypes_test@@Base+0x1900>
    4a78:	and	x19, x1, #0xff
    4a7c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
    4a80:	add	x19, x19, x4
    4a84:	mov	x4, #0x403e                	// #16446
    4a88:	cmp	x3, x4
    4a8c:	csel	w1, w1, wzr, eq  // eq = none
    4a90:	cbz	w1, 4b2c <PyInit__ctypes_test@@Base+0x1980>
    4a94:	extr	x0, x0, x2, #49
    4a98:	cbnz	x0, 4b2c <PyInit__ctypes_test@@Base+0x1980>
    4a9c:	cmp	xzr, x2, lsl #15
    4aa0:	b.eq	4a54 <PyInit__ctypes_test@@Base+0x18a8>  // b.none
    4aa4:	mov	w0, #0x10                  	// #16
    4aa8:	b	4b30 <PyInit__ctypes_test@@Base+0x1984>
    4aac:	mov	x5, #0x406f                	// #16495
    4ab0:	sub	x3, x5, x4
    4ab4:	orr	x0, x0, #0x1000000000000
    4ab8:	cmp	x3, #0x3f
    4abc:	b.gt	4af4 <PyInit__ctypes_test@@Base+0x1948>
    4ac0:	mov	w6, #0xffffbfd1            	// #-16431
    4ac4:	add	w19, w4, w6
    4ac8:	sub	w4, w5, w4
    4acc:	lsl	x3, x2, x19
    4ad0:	cmp	x3, #0x0
    4ad4:	lsr	x2, x2, x4
    4ad8:	cset	w3, ne  // ne = any
    4adc:	lsl	x19, x0, x19
    4ae0:	orr	x19, x2, x19
    4ae4:	cbz	w1, 4aec <PyInit__ctypes_test@@Base+0x1940>
    4ae8:	neg	x19, x19
    4aec:	cbz	w3, 4a54 <PyInit__ctypes_test@@Base+0x18a8>
    4af0:	b	4aa4 <PyInit__ctypes_test@@Base+0x18f8>
    4af4:	mov	w5, #0xffffc011            	// #-16367
    4af8:	add	w19, w4, w5
    4afc:	cmp	x3, #0x40
    4b00:	lsl	x19, x0, x19
    4b04:	csel	x19, x19, xzr, ne  // ne = any
    4b08:	orr	x2, x19, x2
    4b0c:	mov	w19, #0x402f                	// #16431
    4b10:	sub	w19, w19, w4
    4b14:	cmp	x2, #0x0
    4b18:	cset	w3, ne  // ne = any
    4b1c:	lsr	x19, x0, x19
    4b20:	b	4ae4 <PyInit__ctypes_test@@Base+0x1938>
    4b24:	mov	x19, #0x0                   	// #0
    4b28:	b	4aa4 <PyInit__ctypes_test@@Base+0x18f8>
    4b2c:	mov	w0, #0x1                   	// #1
    4b30:	bl	4cf0 <PyInit__ctypes_test@@Base+0x1b44>
    4b34:	b	4a54 <PyInit__ctypes_test@@Base+0x18a8>
    4b38:	mrs	x0, fpcr
    4b3c:	fmov	w0, s0
    4b40:	ubfx	x5, x0, #23, #8
    4b44:	ubfx	x3, x0, #0, #23
    4b48:	add	x1, x5, #0x1
    4b4c:	and	x2, x0, #0x7fffff
    4b50:	ands	x1, x1, #0xfe
    4b54:	lsr	w0, w0, #31
    4b58:	b.eq	4b70 <PyInit__ctypes_test@@Base+0x19c4>  // b.none
    4b5c:	mov	x1, #0x3f80                	// #16256
    4b60:	lsl	x2, x2, #25
    4b64:	add	x1, x5, x1
    4b68:	mov	w3, #0x0                   	// #0
    4b6c:	b	4bac <PyInit__ctypes_test@@Base+0x1a00>
    4b70:	cbnz	w5, 4b94 <PyInit__ctypes_test@@Base+0x19e8>
    4b74:	cbz	x2, 4b68 <PyInit__ctypes_test@@Base+0x19bc>
    4b78:	clz	x3, x2
    4b7c:	sub	w1, w3, #0xf
    4b80:	lsl	x2, x2, x1
    4b84:	mov	w1, #0x3fa9                	// #16297
    4b88:	sub	w1, w1, w3
    4b8c:	sxtw	x1, w1
    4b90:	b	4b68 <PyInit__ctypes_test@@Base+0x19bc>
    4b94:	cbz	x2, 4bec <PyInit__ctypes_test@@Base+0x1a40>
    4b98:	lsr	w3, w3, #22
    4b9c:	lsl	x2, x2, #25
    4ba0:	eor	w3, w3, #0x1
    4ba4:	orr	x2, x2, #0x800000000000
    4ba8:	mov	x1, #0x7fff                	// #32767
    4bac:	mov	x5, #0x0                   	// #0
    4bb0:	orr	w0, w1, w0, lsl #15
    4bb4:	bfxil	x5, x2, #0, #48
    4bb8:	mov	x4, #0x0                   	// #0
    4bbc:	fmov	d0, x4
    4bc0:	bfi	x5, x0, #48, #16
    4bc4:	fmov	v0.d[1], x5
    4bc8:	cbz	w3, 4bf4 <PyInit__ctypes_test@@Base+0x1a48>
    4bcc:	stp	x29, x30, [sp, #-32]!
    4bd0:	mov	w0, #0x1                   	// #1
    4bd4:	mov	x29, sp
    4bd8:	str	q0, [sp, #16]
    4bdc:	bl	4cf0 <PyInit__ctypes_test@@Base+0x1b44>
    4be0:	ldr	q0, [sp, #16]
    4be4:	ldp	x29, x30, [sp], #32
    4be8:	ret
    4bec:	mov	x1, #0x7fff                	// #32767
    4bf0:	b	4b68 <PyInit__ctypes_test@@Base+0x19bc>
    4bf4:	ret
    4bf8:	mrs	x0, fpcr
    4bfc:	fmov	x0, d0
    4c00:	ubfx	x3, x0, #52, #11
    4c04:	ubfx	x1, x0, #0, #52
    4c08:	lsr	x0, x0, #63
    4c0c:	and	w2, w0, #0xff
    4c10:	add	x0, x3, #0x1
    4c14:	tst	x0, #0x7fe
    4c18:	b.eq	4c34 <PyInit__ctypes_test@@Base+0x1a88>  // b.none
    4c1c:	mov	x0, #0x3c00                	// #15360
    4c20:	add	x3, x3, x0
    4c24:	lsr	x0, x1, #4
    4c28:	lsl	x1, x1, #60
    4c2c:	mov	w4, #0x0                   	// #0
    4c30:	b	4c9c <PyInit__ctypes_test@@Base+0x1af0>
    4c34:	cbnz	x3, 4c7c <PyInit__ctypes_test@@Base+0x1ad0>
    4c38:	cbz	x1, 4cd8 <PyInit__ctypes_test@@Base+0x1b2c>
    4c3c:	clz	x4, x1
    4c40:	cmp	w4, #0xe
    4c44:	b.gt	4c6c <PyInit__ctypes_test@@Base+0x1ac0>
    4c48:	add	w3, w4, #0x31
    4c4c:	mov	w0, #0xf                   	// #15
    4c50:	sub	w0, w0, w4
    4c54:	lsr	x0, x1, x0
    4c58:	lsl	x1, x1, x3
    4c5c:	mov	w3, #0x3c0c                	// #15372
    4c60:	sub	w3, w3, w4
    4c64:	sxtw	x3, w3
    4c68:	b	4c2c <PyInit__ctypes_test@@Base+0x1a80>
    4c6c:	sub	w0, w4, #0xf
    4c70:	lsl	x0, x1, x0
    4c74:	mov	x1, #0x0                   	// #0
    4c78:	b	4c5c <PyInit__ctypes_test@@Base+0x1ab0>
    4c7c:	cbz	x1, 4ce0 <PyInit__ctypes_test@@Base+0x1b34>
    4c80:	lsr	x4, x1, #51
    4c84:	lsr	x0, x1, #4
    4c88:	eor	x4, x4, #0x1
    4c8c:	orr	x0, x0, #0x800000000000
    4c90:	and	w4, w4, #0x1
    4c94:	lsl	x1, x1, #60
    4c98:	mov	x3, #0x7fff                	// #32767
    4c9c:	mov	x7, #0x0                   	// #0
    4ca0:	fmov	d0, x1
    4ca4:	bfxil	x7, x0, #0, #48
    4ca8:	orr	w0, w3, w2, lsl #15
    4cac:	bfi	x7, x0, #48, #16
    4cb0:	fmov	v0.d[1], x7
    4cb4:	cbz	w4, 4cec <PyInit__ctypes_test@@Base+0x1b40>
    4cb8:	stp	x29, x30, [sp, #-32]!
    4cbc:	mov	w0, #0x1                   	// #1
    4cc0:	mov	x29, sp
    4cc4:	str	q0, [sp, #16]
    4cc8:	bl	4cf0 <PyInit__ctypes_test@@Base+0x1b44>
    4ccc:	ldr	q0, [sp, #16]
    4cd0:	ldp	x29, x30, [sp], #32
    4cd4:	ret
    4cd8:	mov	x0, #0x0                   	// #0
    4cdc:	b	4c2c <PyInit__ctypes_test@@Base+0x1a80>
    4ce0:	mov	x0, #0x0                   	// #0
    4ce4:	mov	x3, #0x7fff                	// #32767
    4ce8:	b	4c2c <PyInit__ctypes_test@@Base+0x1a80>
    4cec:	ret
    4cf0:	tbz	w0, #0, 4d00 <PyInit__ctypes_test@@Base+0x1b54>
    4cf4:	movi	v1.2s, #0x0
    4cf8:	fdiv	s0, s1, s1
    4cfc:	mrs	x1, fpsr
    4d00:	tbz	w0, #1, 4d14 <PyInit__ctypes_test@@Base+0x1b68>
    4d04:	fmov	s1, #1.000000000000000000e+00
    4d08:	movi	v2.2s, #0x0
    4d0c:	fdiv	s0, s1, s2
    4d10:	mrs	x1, fpsr
    4d14:	tbz	w0, #2, 4d34 <PyInit__ctypes_test@@Base+0x1b88>
    4d18:	mov	w1, #0x7f7fffff            	// #2139095039
    4d1c:	fmov	s1, w1
    4d20:	mov	w1, #0xc5ae                	// #50606
    4d24:	movk	w1, #0x749d, lsl #16
    4d28:	fmov	s2, w1
    4d2c:	fadd	s0, s1, s2
    4d30:	mrs	x1, fpsr
    4d34:	tbz	w0, #3, 4d44 <PyInit__ctypes_test@@Base+0x1b98>
    4d38:	movi	v1.2s, #0x80, lsl #16
    4d3c:	fmul	s0, s1, s1
    4d40:	mrs	x1, fpsr
    4d44:	tbz	w0, #4, 4d5c <PyInit__ctypes_test@@Base+0x1bb0>
    4d48:	mov	w0, #0x7f7fffff            	// #2139095039
    4d4c:	fmov	s2, #1.000000000000000000e+00
    4d50:	fmov	s1, w0
    4d54:	fsub	s0, s1, s2
    4d58:	mrs	x0, fpsr
    4d5c:	ret

Disassembly of section .fini:

0000000000004d60 <.fini>:
    4d60:	stp	x29, x30, [sp, #-16]!
    4d64:	mov	x29, sp
    4d68:	ldp	x29, x30, [sp], #16
    4d6c:	ret
