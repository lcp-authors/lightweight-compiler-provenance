
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//strftime_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000008b0 <_init>:
 8b0:	stp	x29, x30, [sp, #-16]!
 8b4:	mov	x29, sp
 8b8:	bl	9d0 <call_weak_fn>
 8bc:	ldp	x29, x30, [sp], #16
 8c0:	ret

Disassembly of section .plt:

00000000000008d0 <.plt>:
 8d0:	stp	x16, x30, [sp, #-16]!
 8d4:	adrp	x16, 11000 <__FRAME_END__+0x100a0>
 8d8:	ldr	x17, [x16, #4088]
 8dc:	add	x16, x16, #0xff8
 8e0:	br	x17
 8e4:	nop
 8e8:	nop
 8ec:	nop

00000000000008f0 <strlen@plt>:
 8f0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 8f4:	ldr	x17, [x16]
 8f8:	add	x16, x16, #0x0
 8fc:	br	x17

0000000000000900 <__cxa_finalize@plt>:
 900:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 904:	ldr	x17, [x16, #8]
 908:	add	x16, x16, #0x8
 90c:	br	x17

0000000000000910 <strftime@plt>:
 910:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 914:	ldr	x17, [x16, #16]
 918:	add	x16, x16, #0x10
 91c:	br	x17

0000000000000920 <localtime@plt>:
 920:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 924:	ldr	x17, [x16, #24]
 928:	add	x16, x16, #0x18
 92c:	br	x17

0000000000000930 <time@plt>:
 930:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 934:	ldr	x17, [x16, #32]
 938:	add	x16, x16, #0x20
 93c:	br	x17

0000000000000940 <xrealloc@plt>:
 940:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 944:	ldr	x17, [x16, #40]
 948:	add	x16, x16, #0x28
 94c:	br	x17

0000000000000950 <builtin_usage@plt>:
 950:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 954:	ldr	x17, [x16, #48]
 958:	add	x16, x16, #0x30
 95c:	br	x17

0000000000000960 <__gmon_start__@plt>:
 960:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 964:	ldr	x17, [x16, #56]
 968:	add	x16, x16, #0x38
 96c:	br	x17

0000000000000970 <puts@plt>:
 970:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 974:	ldr	x17, [x16, #64]
 978:	add	x16, x16, #0x40
 97c:	br	x17

0000000000000980 <free@plt>:
 980:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 984:	ldr	x17, [x16, #72]
 988:	add	x16, x16, #0x48
 98c:	br	x17

0000000000000990 <no_options@plt>:
 990:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 994:	ldr	x17, [x16, #80]
 998:	add	x16, x16, #0x50
 99c:	br	x17

00000000000009a0 <legal_number@plt>:
 9a0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9a4:	ldr	x17, [x16, #88]
 9a8:	add	x16, x16, #0x58
 9ac:	br	x17

00000000000009b0 <putchar@plt>:
 9b0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9b4:	ldr	x17, [x16, #96]
 9b8:	add	x16, x16, #0x60
 9bc:	br	x17

00000000000009c0 <sh_invalidnum@plt>:
 9c0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9c4:	ldr	x17, [x16, #104]
 9c8:	add	x16, x16, #0x68
 9cc:	br	x17

Disassembly of section .text:

00000000000009d0 <call_weak_fn>:
 9d0:	adrp	x0, 11000 <__FRAME_END__+0x100a0>
 9d4:	ldr	x0, [x0, #4056]
 9d8:	cbz	x0, 9e0 <call_weak_fn+0x10>
 9dc:	b	960 <__gmon_start__@plt>
 9e0:	ret

00000000000009e4 <deregister_tm_clones>:
 9e4:	stp	x29, x30, [sp, #-32]!
 9e8:	mov	x29, sp
 9ec:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 9f0:	add	x0, x0, #0xe0
 9f4:	str	x0, [sp, #24]
 9f8:	ldr	x0, [sp, #24]
 9fc:	str	x0, [sp, #24]
 a00:	ldr	x1, [sp, #24]
 a04:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 a08:	add	x0, x0, #0xe0
 a0c:	cmp	x1, x0
 a10:	b.eq	a48 <deregister_tm_clones+0x64>  // b.none
 a14:	adrp	x0, 11000 <__FRAME_END__+0x100a0>
 a18:	ldr	x0, [x0, #4040]
 a1c:	str	x0, [sp, #16]
 a20:	ldr	x0, [sp, #16]
 a24:	str	x0, [sp, #16]
 a28:	ldr	x0, [sp, #16]
 a2c:	cmp	x0, #0x0
 a30:	b.eq	a4c <deregister_tm_clones+0x68>  // b.none
 a34:	ldr	x1, [sp, #16]
 a38:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 a3c:	add	x0, x0, #0xe0
 a40:	blr	x1
 a44:	b	a4c <deregister_tm_clones+0x68>
 a48:	nop
 a4c:	ldp	x29, x30, [sp], #32
 a50:	ret

0000000000000a54 <register_tm_clones>:
 a54:	stp	x29, x30, [sp, #-48]!
 a58:	mov	x29, sp
 a5c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 a60:	add	x0, x0, #0xe0
 a64:	str	x0, [sp, #40]
 a68:	ldr	x0, [sp, #40]
 a6c:	str	x0, [sp, #40]
 a70:	ldr	x1, [sp, #40]
 a74:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 a78:	add	x0, x0, #0xe0
 a7c:	sub	x0, x1, x0
 a80:	asr	x0, x0, #3
 a84:	lsr	x1, x0, #63
 a88:	add	x0, x1, x0
 a8c:	asr	x0, x0, #1
 a90:	str	x0, [sp, #32]
 a94:	ldr	x0, [sp, #32]
 a98:	cmp	x0, #0x0
 a9c:	b.eq	ad8 <register_tm_clones+0x84>  // b.none
 aa0:	adrp	x0, 11000 <__FRAME_END__+0x100a0>
 aa4:	ldr	x0, [x0, #4064]
 aa8:	str	x0, [sp, #24]
 aac:	ldr	x0, [sp, #24]
 ab0:	str	x0, [sp, #24]
 ab4:	ldr	x0, [sp, #24]
 ab8:	cmp	x0, #0x0
 abc:	b.eq	adc <register_tm_clones+0x88>  // b.none
 ac0:	ldr	x2, [sp, #24]
 ac4:	ldr	x1, [sp, #32]
 ac8:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 acc:	add	x0, x0, #0xe0
 ad0:	blr	x2
 ad4:	b	adc <register_tm_clones+0x88>
 ad8:	nop
 adc:	ldp	x29, x30, [sp], #48
 ae0:	ret

0000000000000ae4 <__do_global_dtors_aux>:
 ae4:	stp	x29, x30, [sp, #-16]!
 ae8:	mov	x29, sp
 aec:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 af0:	add	x0, x0, #0xe0
 af4:	ldrb	w0, [x0]
 af8:	and	x0, x0, #0xff
 afc:	cmp	x0, #0x0
 b00:	b.ne	b3c <__do_global_dtors_aux+0x58>  // b.any
 b04:	adrp	x0, 11000 <__FRAME_END__+0x100a0>
 b08:	ldr	x0, [x0, #4048]
 b0c:	cmp	x0, #0x0
 b10:	b.eq	b24 <__do_global_dtors_aux+0x40>  // b.none
 b14:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b18:	add	x0, x0, #0x70
 b1c:	ldr	x0, [x0]
 b20:	bl	900 <__cxa_finalize@plt>
 b24:	bl	9e4 <deregister_tm_clones>
 b28:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 b2c:	add	x0, x0, #0xe0
 b30:	mov	w1, #0x1                   	// #1
 b34:	strb	w1, [x0]
 b38:	b	b40 <__do_global_dtors_aux+0x5c>
 b3c:	nop
 b40:	ldp	x29, x30, [sp], #16
 b44:	ret

0000000000000b48 <frame_dummy>:
 b48:	stp	x29, x30, [sp, #-16]!
 b4c:	mov	x29, sp
 b50:	bl	a54 <register_tm_clones>
 b54:	nop
 b58:	ldp	x29, x30, [sp], #16
 b5c:	ret

0000000000000b60 <strftime_builtin>:
 b60:	stp	x29, x30, [sp, #-96]!
 b64:	mov	x29, sp
 b68:	str	x0, [sp, #24]
 b6c:	ldr	x0, [sp, #24]
 b70:	cmp	x0, #0x0
 b74:	b.ne	b84 <strftime_builtin+0x24>  // b.any
 b78:	bl	950 <builtin_usage@plt>
 b7c:	mov	w0, #0x102                 	// #258
 b80:	b	d10 <strftime_builtin+0x1b0>
 b84:	ldr	x0, [sp, #24]
 b88:	bl	990 <no_options@plt>
 b8c:	cmp	w0, #0x0
 b90:	b.eq	b9c <strftime_builtin+0x3c>  // b.none
 b94:	mov	w0, #0x102                 	// #258
 b98:	b	d10 <strftime_builtin+0x1b0>
 b9c:	ldr	x0, [sp, #24]
 ba0:	ldr	x0, [x0, #8]
 ba4:	ldr	x0, [x0]
 ba8:	str	x0, [sp, #72]
 bac:	ldr	x0, [sp, #72]
 bb0:	cmp	x0, #0x0
 bb4:	b.eq	bc8 <strftime_builtin+0x68>  // b.none
 bb8:	ldr	x0, [sp, #72]
 bbc:	ldrb	w0, [x0]
 bc0:	cmp	w0, #0x0
 bc4:	b.ne	bd8 <strftime_builtin+0x78>  // b.any
 bc8:	mov	w0, #0xa                   	// #10
 bcc:	bl	9b0 <putchar@plt>
 bd0:	mov	w0, #0x0                   	// #0
 bd4:	b	d10 <strftime_builtin+0x1b0>
 bd8:	ldr	x0, [sp, #24]
 bdc:	ldr	x0, [x0]
 be0:	str	x0, [sp, #24]
 be4:	ldr	x0, [sp, #24]
 be8:	cmp	x0, #0x0
 bec:	b.eq	c58 <strftime_builtin+0xf8>  // b.none
 bf0:	ldr	x0, [sp, #24]
 bf4:	ldr	x0, [x0, #8]
 bf8:	ldr	x0, [x0]
 bfc:	cmp	x0, #0x0
 c00:	b.eq	c58 <strftime_builtin+0xf8>  // b.none
 c04:	ldr	x0, [sp, #24]
 c08:	ldr	x0, [x0, #8]
 c0c:	ldr	x0, [x0]
 c10:	add	x1, sp, #0x20
 c14:	bl	9a0 <legal_number@plt>
 c18:	str	w0, [sp, #84]
 c1c:	ldr	w0, [sp, #84]
 c20:	cmp	w0, #0x0
 c24:	b.eq	c34 <strftime_builtin+0xd4>  // b.none
 c28:	ldr	x0, [sp, #32]
 c2c:	cmp	x0, #0x0
 c30:	b.ge	c4c <strftime_builtin+0xec>  // b.tcont
 c34:	ldr	x0, [sp, #24]
 c38:	ldr	x0, [x0, #8]
 c3c:	ldr	x0, [x0]
 c40:	bl	9c0 <sh_invalidnum@plt>
 c44:	mov	w0, #0x1                   	// #1
 c48:	b	d10 <strftime_builtin+0x1b0>
 c4c:	ldr	x0, [sp, #32]
 c50:	str	x0, [sp, #40]
 c54:	b	c64 <strftime_builtin+0x104>
 c58:	mov	x0, #0x0                   	// #0
 c5c:	bl	930 <time@plt>
 c60:	str	x0, [sp, #40]
 c64:	add	x0, sp, #0x28
 c68:	bl	920 <localtime@plt>
 c6c:	str	x0, [sp, #64]
 c70:	ldr	x0, [sp, #72]
 c74:	bl	8f0 <strlen@plt>
 c78:	lsl	x0, x0, #2
 c7c:	str	x0, [sp, #56]
 c80:	str	xzr, [sp, #88]
 c84:	mov	w0, #0x1                   	// #1
 c88:	str	w0, [sp, #84]
 c8c:	b	ce8 <strftime_builtin+0x188>
 c90:	ldrsw	x1, [sp, #84]
 c94:	ldr	x0, [sp, #56]
 c98:	mul	x0, x1, x0
 c9c:	mov	x1, x0
 ca0:	ldr	x0, [sp, #88]
 ca4:	bl	940 <xrealloc@plt>
 ca8:	str	x0, [sp, #88]
 cac:	ldrsw	x1, [sp, #84]
 cb0:	ldr	x0, [sp, #56]
 cb4:	mul	x0, x1, x0
 cb8:	ldr	x3, [sp, #64]
 cbc:	ldr	x2, [sp, #72]
 cc0:	mov	x1, x0
 cc4:	ldr	x0, [sp, #88]
 cc8:	bl	910 <strftime@plt>
 ccc:	str	x0, [sp, #48]
 cd0:	ldr	x0, [sp, #48]
 cd4:	cmp	x0, #0x0
 cd8:	b.ne	cf8 <strftime_builtin+0x198>  // b.any
 cdc:	ldr	w0, [sp, #84]
 ce0:	add	w0, w0, #0x1
 ce4:	str	w0, [sp, #84]
 ce8:	ldr	w0, [sp, #84]
 cec:	cmp	w0, #0x3
 cf0:	b.le	c90 <strftime_builtin+0x130>
 cf4:	b	cfc <strftime_builtin+0x19c>
 cf8:	nop
 cfc:	ldr	x0, [sp, #88]
 d00:	bl	970 <puts@plt>
 d04:	ldr	x0, [sp, #88]
 d08:	bl	980 <free@plt>
 d0c:	mov	w0, #0x0                   	// #0
 d10:	ldp	x29, x30, [sp], #96
 d14:	ret

Disassembly of section .fini:

0000000000000d18 <_fini>:
 d18:	stp	x29, x30, [sp, #-16]!
 d1c:	mov	x29, sp
 d20:	ldp	x29, x30, [sp], #16
 d24:	ret
