
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix2_be.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_minix_close>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	nop

0000000000000020 <grub_minix_read_inode>:
  20:	stp	x29, x30, [sp, #-16]!
  24:	and	w1, w1, #0xffff
  28:	sub	w2, w1, #0x1
  2c:	mov	x29, sp
  30:	ldrh	w7, [x0, #4]
  34:	add	x4, x0, #0x14
  38:	ldrh	w5, [x0, #6]
  3c:	ubfx	x8, x2, #3, #13
  40:	ldrh	w6, [x0, #10]
  44:	ubfiz	x2, x2, #6, #3
  48:	lsr	w9, w7, #8
  4c:	strh	w1, [x0, #88]
  50:	orr	w7, w9, w7, lsl #8
  54:	lsr	w1, w5, #8
  58:	orr	w5, w1, w5, lsl #8
  5c:	and	w7, w7, #0xffff
  60:	add	w7, w7, #0x2
  64:	lsr	w1, w6, #8
  68:	add	w5, w7, w5, uxth
  6c:	orr	w6, w1, w6, lsl #8
  70:	and	w6, w6, #0xffff
  74:	mov	x3, #0x40                  	// #64
  78:	add	w6, w6, #0x1
  7c:	sxtw	x5, w5
  80:	ldr	x0, [x0, #96]
  84:	lsl	x5, x5, x6
  88:	add	x1, x5, x8
  8c:	bl	0 <grub_disk_read>
  90:	mov	w0, #0x0                   	// #0
  94:	ldp	x29, x30, [sp], #16
  98:	ret
  9c:	nop

00000000000000a0 <grub_get_indir>:
  a0:	stp	x29, x30, [sp, #-32]!
  a4:	mov	w1, w1
  a8:	ubfiz	x2, x2, #2, #32
  ac:	mov	x29, sp
  b0:	ldrh	w5, [x0, #10]
  b4:	add	x4, sp, #0x1c
  b8:	ldr	x0, [x0, #96]
  bc:	mov	x3, #0x4                   	// #4
  c0:	lsr	w6, w5, #8
  c4:	orr	w5, w6, w5, lsl #8
  c8:	and	w5, w5, #0xffff
  cc:	add	w5, w5, #0x1
  d0:	lsl	x1, x1, x5
  d4:	bl	0 <grub_disk_read>
  d8:	ldr	w0, [sp, #28]
  dc:	ldp	x29, x30, [sp], #32
  e0:	rev	w0, w0
  e4:	ret

00000000000000e8 <grub_minix_read_file>:
  e8:	stp	x29, x30, [sp, #-128]!
  ec:	mov	x29, sp
  f0:	stp	x27, x28, [sp, #80]
  f4:	mov	x28, x0
  f8:	ldr	w0, [x0, #28]
  fc:	str	x4, [sp, #104]
 100:	rev	w0, w0
 104:	cmp	x0, x3
 108:	b.cc	390 <grub_minix_read_file+0x2a8>  // b.lo, b.ul, b.last
 10c:	stp	x19, x20, [sp, #16]
 110:	mov	x20, x3
 114:	stp	x21, x22, [sp, #32]
 118:	mov	x22, x1
 11c:	sub	x1, x0, x3
 120:	ldr	x3, [sp, #104]
 124:	stp	x23, x24, [sp, #48]
 128:	mov	x23, x2
 12c:	add	x2, x20, x3
 130:	cmp	x0, x2
 134:	mov	x0, #0x0                   	// #0
 138:	csel	x1, x1, x3, cc  // cc = lo, ul, last
 13c:	str	x1, [sp, #104]
 140:	cbz	x1, 358 <grub_minix_read_file+0x270>
 144:	ldr	x0, [x28, #112]
 148:	add	x27, x1, x20
 14c:	sub	x21, x27, #0x1
 150:	stp	x25, x26, [sp, #64]
 154:	lsl	x26, x0, #9
 158:	ubfx	x21, x21, #9, #32
 15c:	udiv	x7, x20, x26
 160:	udiv	x21, x21, x0
 164:	msub	x0, x7, x26, x20
 168:	str	x0, [sp, #112]
 16c:	stp	w21, w7, [sp, #96]
 170:	add	w25, w21, #0x1
 174:	cmp	w25, w7
 178:	b.ls	370 <grub_minix_read_file+0x288>  // b.plast
 17c:	add	x19, x7, #0xb
 180:	adrp	x0, 0 <grub_minix_close>
 184:	and	x1, x27, #0xffffffff
 188:	mov	x24, x5
 18c:	ldr	x27, [x0]
 190:	mov	w20, w7
 194:	add	x19, x28, x19, lsl #2
 198:	str	x1, [sp, #120]
 19c:	b	274 <grub_minix_read_file+0x18c>
 1a0:	ldr	w5, [x28, #84]
 1a4:	sub	w2, w20, #0x7
 1a8:	cmp	w5, w2
 1ac:	b.hi	330 <grub_minix_read_file+0x248>  // b.pmore
 1b0:	umull	x1, w5, w5
 1b4:	sub	w10, w2, w5
 1b8:	sub	w21, w2, w5
 1bc:	mov	w0, w5
 1c0:	cmp	x10, x1
 1c4:	b.cc	344 <grub_minix_read_file+0x25c>  // b.lo, b.ul, b.last
 1c8:	msub	w21, w5, w5, w21
 1cc:	mul	x0, x0, x1
 1d0:	cmp	x0, w21, uxtw
 1d4:	b.hi	2e0 <grub_minix_read_file+0x1f8>  // b.pmore
 1d8:	adrp	x0, 0 <grub_minix_close>
 1dc:	ldr	x1, [x0]
 1e0:	mov	w0, #0xb                   	// #11
 1e4:	bl	0 <grub_error>
 1e8:	mov	w0, #0x0                   	// #0
 1ec:	ldr	w1, [x27]
 1f0:	cbnz	w1, 290 <grub_minix_read_file+0x1a8>
 1f4:	ldr	w1, [sp, #96]
 1f8:	mov	x3, x26
 1fc:	cmp	w1, w20
 200:	b.eq	2c0 <grub_minix_read_file+0x1d8>  // b.none
 204:	ldr	w1, [sp, #100]
 208:	mov	x21, #0x0                   	// #0
 20c:	cmp	w1, w20
 210:	b.eq	2b0 <grub_minix_read_file+0x1c8>  // b.none
 214:	ldrh	w6, [x28, #10]
 218:	mov	w1, w0
 21c:	ldr	x0, [x28, #96]
 220:	mov	x4, x24
 224:	lsr	w5, w6, #8
 228:	mov	x2, x21
 22c:	orr	w6, w5, w6, lsl #8
 230:	and	w6, w6, #0xffff
 234:	stp	x22, x23, [x0, #48]
 238:	add	w6, w6, #0x1
 23c:	lsl	x1, x1, x6
 240:	bl	0 <grub_disk_read>
 244:	ldr	x1, [x28, #96]
 248:	ldr	w0, [x27]
 24c:	str	xzr, [x1, #48]
 250:	cbnz	w0, 290 <grub_minix_read_file+0x1a8>
 254:	ldr	x0, [x28, #112]
 258:	add	w20, w20, #0x1
 25c:	cmp	w25, w20
 260:	add	x19, x19, #0x4
 264:	lsl	x26, x0, #9
 268:	sub	x2, x26, x21
 26c:	add	x24, x24, x2
 270:	b.ls	370 <grub_minix_read_file+0x288>  // b.plast
 274:	cmp	w20, #0x6
 278:	b.hi	1a0 <grub_minix_read_file+0xb8>  // b.pmore
 27c:	ldr	w1, [x27]
 280:	ldr	w0, [x19]
 284:	rev	w0, w0
 288:	cbz	w1, 1f4 <grub_minix_read_file+0x10c>
 28c:	nop
 290:	ldp	x19, x20, [sp, #16]
 294:	mov	x0, #0xffffffffffffffff    	// #-1
 298:	ldp	x21, x22, [sp, #32]
 29c:	ldp	x23, x24, [sp, #48]
 2a0:	ldp	x25, x26, [sp, #64]
 2a4:	ldp	x27, x28, [sp, #80]
 2a8:	ldp	x29, x30, [sp], #128
 2ac:	ret
 2b0:	ldr	x1, [sp, #112]
 2b4:	sub	x3, x3, x1
 2b8:	mov	x21, x1
 2bc:	b	214 <grub_minix_read_file+0x12c>
 2c0:	ldr	x1, [x28, #112]
 2c4:	ldr	x2, [sp, #120]
 2c8:	lsl	x1, x1, #9
 2cc:	udiv	x3, x2, x1
 2d0:	msub	x3, x3, x1, x2
 2d4:	cmp	x3, #0x0
 2d8:	csel	x3, x3, x1, ne  // ne = any
 2dc:	b	204 <grub_minix_read_file+0x11c>
 2e0:	udiv	w2, w21, w5
 2e4:	ldr	w1, [x28, #80]
 2e8:	mov	x0, x28
 2ec:	rev	w1, w1
 2f0:	udiv	w2, w2, w5
 2f4:	bl	a0 <grub_get_indir>
 2f8:	mov	w1, w0
 2fc:	ldr	w5, [x28, #84]
 300:	mov	x0, x28
 304:	udiv	w2, w21, w5
 308:	udiv	w10, w2, w5
 30c:	msub	w2, w10, w5, w2
 310:	bl	a0 <grub_get_indir>
 314:	mov	w1, w0
 318:	ldr	w2, [x28, #84]
 31c:	mov	x0, x28
 320:	udiv	w5, w21, w2
 324:	msub	w2, w5, w2, w21
 328:	bl	a0 <grub_get_indir>
 32c:	b	1ec <grub_minix_read_file+0x104>
 330:	ldr	w1, [x28, #72]
 334:	mov	x0, x28
 338:	rev	w1, w1
 33c:	bl	a0 <grub_get_indir>
 340:	b	1ec <grub_minix_read_file+0x104>
 344:	ldr	w1, [x28, #76]
 348:	mov	x0, x28
 34c:	udiv	w2, w21, w5
 350:	rev	w1, w1
 354:	b	310 <grub_minix_read_file+0x228>
 358:	ldp	x19, x20, [sp, #16]
 35c:	ldp	x21, x22, [sp, #32]
 360:	ldp	x23, x24, [sp, #48]
 364:	ldp	x27, x28, [sp, #80]
 368:	ldp	x29, x30, [sp], #128
 36c:	ret
 370:	ldp	x19, x20, [sp, #16]
 374:	ldp	x21, x22, [sp, #32]
 378:	ldp	x23, x24, [sp, #48]
 37c:	ldp	x25, x26, [sp, #64]
 380:	ldp	x27, x28, [sp, #80]
 384:	ldr	x0, [sp, #104]
 388:	ldp	x29, x30, [sp], #128
 38c:	ret
 390:	adrp	x1, 0 <grub_minix_close>
 394:	mov	w0, #0xb                   	// #11
 398:	ldr	x1, [x1]
 39c:	bl	0 <grub_error>
 3a0:	mov	x0, #0xffffffffffffffff    	// #-1
 3a4:	b	2a4 <grub_minix_read_file+0x1bc>
	...

00000000000003c0 <grub_minix_read>:
 3c0:	mov	x6, x0
 3c4:	mov	x5, x1
 3c8:	ldr	x3, [x0, #24]
 3cc:	mov	x4, x2
 3d0:	ldp	x0, x1, [x0, #80]
 3d4:	ldr	x2, [x6, #96]
 3d8:	b	e8 <grub_minix_read_file>
 3dc:	nop

00000000000003e0 <grub_minix_mount>:
 3e0:	stp	x29, x30, [sp, #-32]!
 3e4:	mov	x29, sp
 3e8:	stp	x19, x20, [sp, #16]
 3ec:	mov	x20, x0
 3f0:	mov	x0, #0x78                  	// #120
 3f4:	bl	0 <grub_malloc>
 3f8:	mov	x19, x0
 3fc:	cbz	x0, 484 <grub_minix_mount+0xa4>
 400:	mov	x4, x0
 404:	mov	x3, #0x14                  	// #20
 408:	mov	x0, x20
 40c:	mov	x2, #0x0                   	// #0
 410:	mov	x1, #0x2                   	// #2
 414:	bl	0 <grub_disk_read>
 418:	adrp	x0, 0 <grub_minix_close>
 41c:	ldr	x0, [x0]
 420:	ldr	w0, [x0]
 424:	cbnz	w0, 4a0 <grub_minix_mount+0xc0>
 428:	ldrh	w0, [x19, #16]
 42c:	mov	w1, #0x6824                	// #26660
 430:	cmp	w0, w1
 434:	b.eq	494 <grub_minix_mount+0xb4>  // b.none
 438:	mov	w1, #0x7824                	// #30756
 43c:	cmp	w0, w1
 440:	b.ne	4a0 <grub_minix_mount+0xc0>  // b.any
 444:	mov	w0, #0x1e                  	// #30
 448:	str	w0, [x19, #104]
 44c:	ldrh	w1, [x19, #10]
 450:	lsr	w0, w1, #8
 454:	orr	w1, w0, w1, lsl #8
 458:	and	w1, w1, #0xffff
 45c:	cmp	w1, #0x13
 460:	b.hi	4a0 <grub_minix_mount+0xc0>  // b.pmore
 464:	add	w1, w1, #0x9
 468:	mov	x0, #0x2                   	// #2
 46c:	str	wzr, [x19, #92]
 470:	lsl	x1, x0, x1
 474:	str	x20, [x19, #96]
 478:	lsr	x1, x1, #2
 47c:	str	w1, [x19, #84]
 480:	str	x0, [x19, #112]
 484:	mov	x0, x19
 488:	ldp	x19, x20, [sp, #16]
 48c:	ldp	x29, x30, [sp], #32
 490:	ret
 494:	mov	w0, #0xe                   	// #14
 498:	str	w0, [x19, #104]
 49c:	b	44c <grub_minix_mount+0x6c>
 4a0:	mov	x0, x19
 4a4:	bl	0 <grub_free>
 4a8:	adrp	x1, 0 <grub_minix_close>
 4ac:	mov	x19, #0x0                   	// #0
 4b0:	mov	w0, #0x9                   	// #9
 4b4:	ldr	x1, [x1]
 4b8:	bl	0 <grub_error>
 4bc:	mov	x0, x19
 4c0:	ldp	x19, x20, [sp, #16]
 4c4:	ldp	x29, x30, [sp], #32
 4c8:	ret
 4cc:	nop
	...

00000000000004e0 <grub_minix_find_file>:
 4e0:	stp	x29, x30, [sp, #-144]!
 4e4:	mov	x29, sp
 4e8:	stp	x19, x20, [sp, #16]
 4ec:	mov	x19, x0
 4f0:	stp	x21, x22, [sp, #32]
 4f4:	mov	x22, x1
 4f8:	add	x21, sp, #0x70
 4fc:	stp	x25, x26, [sp, #64]
 500:	mov	x25, x1
 504:	mov	w26, #0xffffa000            	// #-24576
 508:	stp	x23, x24, [sp, #48]
 50c:	str	x27, [sp, #80]
 510:	ldrb	w0, [x22]
 514:	cmp	w0, #0x2f
 518:	b.ne	52c <grub_minix_find_file+0x4c>  // b.any
 51c:	nop
 520:	ldrb	w0, [x22, #1]!
 524:	cmp	w0, #0x2f
 528:	b.eq	520 <grub_minix_find_file+0x40>  // b.none
 52c:	cbz	w0, 738 <grub_minix_find_file+0x258>
 530:	ldrh	w0, [x19, #20]
 534:	tbz	w0, #6, 724 <grub_minix_find_file+0x244>
 538:	ldrb	w0, [x22]
 53c:	mov	x23, x22
 540:	cmp	w0, #0x2f
 544:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 548:	b.eq	560 <grub_minix_find_file+0x80>  // b.none
 54c:	nop
 550:	ldrb	w0, [x23, #1]!
 554:	cmp	w0, #0x2f
 558:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 55c:	b.ne	550 <grub_minix_find_file+0x70>  // b.any
 560:	ldr	w0, [x19, #28]
 564:	cbz	w0, 61c <grub_minix_find_file+0x13c>
 568:	sub	x24, x23, x22
 56c:	mov	w20, #0x0                   	// #0
 570:	b	5d0 <grub_minix_find_file+0xf0>
 574:	ldrsw	x4, [x19, #104]
 578:	add	x3, x27, #0x2
 57c:	mov	x5, x21
 580:	mov	x0, x19
 584:	mov	x2, #0x0                   	// #0
 588:	mov	x1, #0x0                   	// #0
 58c:	bl	e8 <grub_minix_read_file>
 590:	tbnz	x0, #63, 5f4 <grub_minix_find_file+0x114>
 594:	ldr	w3, [x19, #104]
 598:	mov	x2, x24
 59c:	mov	x1, x21
 5a0:	mov	x0, x22
 5a4:	add	w4, w3, #0x2
 5a8:	add	w20, w20, w4
 5ac:	strb	wzr, [x21, w3, sxtw]
 5b0:	bl	0 <grub_strncmp>
 5b4:	cbnz	w0, 5c0 <grub_minix_find_file+0xe0>
 5b8:	ldrb	w0, [x21, x24]
 5bc:	cbz	w0, 658 <grub_minix_find_file+0x178>
 5c0:	ldr	w0, [x19, #28]
 5c4:	rev	w0, w0
 5c8:	cmp	w20, w0
 5cc:	b.cs	61c <grub_minix_find_file+0x13c>  // b.hs, b.nlast
 5d0:	mov	w27, w20
 5d4:	add	x5, sp, #0x6e
 5d8:	mov	x3, x27
 5dc:	mov	x0, x19
 5e0:	mov	x4, #0x2                   	// #2
 5e4:	mov	x2, #0x0                   	// #0
 5e8:	mov	x1, #0x0                   	// #0
 5ec:	bl	e8 <grub_minix_read_file>
 5f0:	tbz	x0, #63, 574 <grub_minix_find_file+0x94>
 5f4:	adrp	x0, 0 <grub_minix_close>
 5f8:	ldr	x0, [x0]
 5fc:	ldr	w0, [x0]
 600:	ldp	x19, x20, [sp, #16]
 604:	ldp	x21, x22, [sp, #32]
 608:	ldp	x23, x24, [sp, #48]
 60c:	ldp	x25, x26, [sp, #64]
 610:	ldr	x27, [sp, #80]
 614:	ldp	x29, x30, [sp], #144
 618:	ret
 61c:	adrp	x1, 0 <grub_minix_close>
 620:	mov	x2, x25
 624:	mov	w0, #0x5                   	// #5
 628:	ldr	x1, [x1]
 62c:	bl	0 <grub_error>
 630:	adrp	x0, 0 <grub_minix_close>
 634:	ldp	x19, x20, [sp, #16]
 638:	ldr	x0, [x0]
 63c:	ldp	x21, x22, [sp, #32]
 640:	ldr	w0, [x0]
 644:	ldp	x23, x24, [sp, #48]
 648:	ldp	x25, x26, [sp, #64]
 64c:	ldr	x27, [sp, #80]
 650:	ldp	x29, x30, [sp], #144
 654:	ret
 658:	ldrh	w1, [sp, #110]
 65c:	mov	x0, x19
 660:	ldrh	w20, [x19, #88]
 664:	lsr	w2, w1, #8
 668:	orr	w1, w2, w1, lsl #8
 66c:	bl	20 <grub_minix_read_inode>
 670:	ldrh	w0, [x19, #20]
 674:	lsr	w1, w0, #8
 678:	orr	w0, w1, w0, lsl #8
 67c:	and	w0, w0, w26
 680:	and	w0, w0, #0xffff
 684:	cmp	w0, #0xa, lsl #12
 688:	b.eq	694 <grub_minix_find_file+0x1b4>  // b.none
 68c:	mov	x22, x23
 690:	b	510 <grub_minix_find_file+0x30>
 694:	ldr	w0, [x19, #92]
 698:	ldr	w1, [x19, #28]
 69c:	add	w0, w0, #0x1
 6a0:	str	w0, [x19, #92]
 6a4:	cmp	w0, #0x8
 6a8:	b.gt	740 <grub_minix_find_file+0x260>
 6ac:	rev	w27, w1
 6b0:	rev	w24, w1
 6b4:	add	x0, x27, #0x1
 6b8:	bl	0 <grub_malloc>
 6bc:	mov	x22, x0
 6c0:	cbz	x0, 70c <grub_minix_find_file+0x22c>
 6c4:	mov	x5, x0
 6c8:	mov	x4, x27
 6cc:	mov	x0, x19
 6d0:	mov	x3, #0x0                   	// #0
 6d4:	mov	x2, #0x0                   	// #0
 6d8:	mov	x1, #0x0                   	// #0
 6dc:	bl	e8 <grub_minix_read_file>
 6e0:	tbnz	x0, #63, 70c <grub_minix_find_file+0x22c>
 6e4:	strb	wzr, [x22, w24, uxtw]
 6e8:	mov	x0, x19
 6ec:	ldrb	w1, [x22]
 6f0:	cmp	w1, #0x2f
 6f4:	csinc	w1, w20, wzr, ne  // ne = any
 6f8:	bl	20 <grub_minix_read_inode>
 6fc:	cbnz	w0, 70c <grub_minix_find_file+0x22c>
 700:	mov	x1, x22
 704:	mov	x0, x19
 708:	bl	4e0 <grub_minix_find_file>
 70c:	adrp	x0, 0 <grub_minix_close>
 710:	ldr	x0, [x0]
 714:	ldr	w0, [x0]
 718:	cbnz	w0, 600 <grub_minix_find_file+0x120>
 71c:	mov	x22, x23
 720:	b	510 <grub_minix_find_file+0x30>
 724:	adrp	x1, 0 <grub_minix_close>
 728:	mov	w0, #0x4                   	// #4
 72c:	ldr	x1, [x1]
 730:	bl	0 <grub_error>
 734:	b	600 <grub_minix_find_file+0x120>
 738:	mov	w0, #0x0                   	// #0
 73c:	b	600 <grub_minix_find_file+0x120>
 740:	adrp	x1, 0 <grub_minix_close>
 744:	mov	w0, #0x19                  	// #25
 748:	ldr	x1, [x1]
 74c:	bl	0 <grub_error>
 750:	b	70c <grub_minix_find_file+0x22c>
 754:	nop
	...

0000000000000778 <grub_minix_dir>:
 778:	stp	x29, x30, [sp, #-144]!
 77c:	mov	x29, sp
 780:	ldr	x0, [x0]
 784:	stp	x19, x20, [sp, #16]
 788:	mov	x20, x1
 78c:	stp	x21, x22, [sp, #32]
 790:	mov	x22, x2
 794:	stp	x23, x24, [sp, #48]
 798:	mov	x23, x3
 79c:	bl	3e0 <grub_minix_mount>
 7a0:	cbz	x0, 904 <grub_minix_dir+0x18c>
 7a4:	mov	x19, x0
 7a8:	mov	w1, #0x1                   	// #1
 7ac:	stp	x25, x26, [sp, #64]
 7b0:	bl	20 <grub_minix_read_inode>
 7b4:	adrp	x0, 0 <grub_minix_close>
 7b8:	ldr	x25, [x0]
 7bc:	ldr	w0, [x25]
 7c0:	cbz	w0, 7e8 <grub_minix_dir+0x70>
 7c4:	mov	x0, x19
 7c8:	bl	0 <grub_free>
 7cc:	ldr	w0, [x25]
 7d0:	ldp	x19, x20, [sp, #16]
 7d4:	ldp	x21, x22, [sp, #32]
 7d8:	ldp	x23, x24, [sp, #48]
 7dc:	ldp	x25, x26, [sp, #64]
 7e0:	ldp	x29, x30, [sp], #144
 7e4:	ret
 7e8:	mov	x1, x20
 7ec:	mov	x0, x19
 7f0:	bl	4e0 <grub_minix_find_file>
 7f4:	ldr	w20, [x25]
 7f8:	cbnz	w20, 7c4 <grub_minix_dir+0x4c>
 7fc:	ldrh	w0, [x19, #20]
 800:	tbz	w0, #6, 924 <grub_minix_dir+0x1ac>
 804:	ldr	w0, [x19, #28]
 808:	cbz	w0, 7c4 <grub_minix_dir+0x4c>
 80c:	add	x21, sp, #0x70
 810:	b	828 <grub_minix_dir+0xb0>
 814:	add	w20, w20, w3
 818:	ldr	w0, [x19, #28]
 81c:	rev	w0, w0
 820:	cmp	w20, w0
 824:	b.cs	7c4 <grub_minix_dir+0x4c>  // b.hs, b.nlast
 828:	mov	x2, #0x10                  	// #16
 82c:	mov	w1, #0x0                   	// #0
 830:	ldrh	w24, [x19, #88]
 834:	add	x0, sp, #0x60
 838:	mov	w26, w20
 83c:	bl	0 <grub_memset>
 840:	mov	x3, x26
 844:	add	x5, sp, #0x5e
 848:	mov	x0, x19
 84c:	mov	x4, #0x2                   	// #2
 850:	mov	x2, #0x0                   	// #0
 854:	mov	x1, #0x0                   	// #0
 858:	bl	e8 <grub_minix_read_file>
 85c:	tbnz	x0, #63, 7cc <grub_minix_dir+0x54>
 860:	ldrsw	x4, [x19, #104]
 864:	mov	x1, #0x0                   	// #0
 868:	add	x3, x26, #0x2
 86c:	mov	x5, x21
 870:	mov	x0, x19
 874:	mov	x2, #0x0                   	// #0
 878:	bl	e8 <grub_minix_read_file>
 87c:	mov	x1, x0
 880:	mov	x0, x19
 884:	tbnz	x1, #63, 7cc <grub_minix_dir+0x54>
 888:	ldr	w2, [x19, #104]
 88c:	ldrh	w4, [sp, #94]
 890:	add	w3, w2, #0x2
 894:	strb	wzr, [x21, w2, sxtw]
 898:	lsr	w1, w4, #8
 89c:	orr	w1, w1, w4, lsl #8
 8a0:	cbz	w4, 814 <grub_minix_dir+0x9c>
 8a4:	bl	20 <grub_minix_read_inode>
 8a8:	ldrh	w4, [x19, #20]
 8ac:	mov	x2, x23
 8b0:	ldrb	w0, [sp, #96]
 8b4:	add	x1, sp, #0x60
 8b8:	ldr	w3, [x19, #36]
 8bc:	ubfx	x4, x4, #6, #1
 8c0:	and	w0, w0, #0xfffffffc
 8c4:	orr	w4, w4, #0x2
 8c8:	rev	w3, w3
 8cc:	orr	w4, w4, w0
 8d0:	strb	w4, [sp, #96]
 8d4:	str	w3, [sp, #100]
 8d8:	mov	x0, x21
 8dc:	blr	x22
 8e0:	mov	w2, w0
 8e4:	mov	w1, w24
 8e8:	mov	x0, x19
 8ec:	cbnz	w2, 7c4 <grub_minix_dir+0x4c>
 8f0:	bl	20 <grub_minix_read_inode>
 8f4:	ldr	w0, [x19, #104]
 8f8:	add	w0, w0, #0x2
 8fc:	add	w20, w20, w0
 900:	b	818 <grub_minix_dir+0xa0>
 904:	adrp	x0, 0 <grub_minix_close>
 908:	ldp	x19, x20, [sp, #16]
 90c:	ldr	x0, [x0]
 910:	ldp	x21, x22, [sp, #32]
 914:	ldr	w0, [x0]
 918:	ldp	x23, x24, [sp, #48]
 91c:	ldp	x29, x30, [sp], #144
 920:	ret
 924:	adrp	x1, 0 <grub_minix_close>
 928:	mov	w0, #0x4                   	// #4
 92c:	ldr	x1, [x1]
 930:	bl	0 <grub_error>
 934:	b	7c4 <grub_minix_dir+0x4c>
	...

0000000000000948 <grub_minix_open>:
 948:	stp	x29, x30, [sp, #-48]!
 94c:	mov	x29, sp
 950:	stp	x21, x22, [sp, #32]
 954:	mov	x21, x0
 958:	ldr	x0, [x0, #8]
 95c:	stp	x19, x20, [sp, #16]
 960:	mov	x20, x1
 964:	ldr	x0, [x0]
 968:	bl	3e0 <grub_minix_mount>
 96c:	cbz	x0, 9c4 <grub_minix_open+0x7c>
 970:	mov	x19, x0
 974:	mov	w1, #0x1                   	// #1
 978:	bl	20 <grub_minix_read_inode>
 97c:	adrp	x0, 0 <grub_minix_close>
 980:	ldr	x22, [x0]
 984:	ldr	w0, [x22]
 988:	cbnz	w0, 9e0 <grub_minix_open+0x98>
 98c:	cbz	x20, 99c <grub_minix_open+0x54>
 990:	ldrb	w0, [x20]
 994:	cmp	w0, #0x2f
 998:	b.eq	9fc <grub_minix_open+0xb4>  // b.none
 99c:	adrp	x1, 0 <grub_minix_close>
 9a0:	mov	x2, x20
 9a4:	mov	w0, #0x7                   	// #7
 9a8:	ldr	x1, [x1]
 9ac:	bl	0 <grub_error>
 9b0:	ldr	w0, [x22]
 9b4:	ldp	x19, x20, [sp, #16]
 9b8:	ldp	x21, x22, [sp, #32]
 9bc:	ldp	x29, x30, [sp], #48
 9c0:	ret
 9c4:	adrp	x0, 0 <grub_minix_close>
 9c8:	ldp	x19, x20, [sp, #16]
 9cc:	ldr	x0, [x0]
 9d0:	ldp	x21, x22, [sp, #32]
 9d4:	ldr	w0, [x0]
 9d8:	ldp	x29, x30, [sp], #48
 9dc:	ret
 9e0:	mov	x0, x19
 9e4:	bl	0 <grub_free>
 9e8:	ldr	w0, [x22]
 9ec:	ldp	x19, x20, [sp, #16]
 9f0:	ldp	x21, x22, [sp, #32]
 9f4:	ldp	x29, x30, [sp], #48
 9f8:	ret
 9fc:	mov	x1, x20
 a00:	mov	x0, x19
 a04:	bl	4e0 <grub_minix_find_file>
 a08:	ldr	w0, [x22]
 a0c:	cbnz	w0, 9e0 <grub_minix_open+0x98>
 a10:	ldr	w1, [x19, #28]
 a14:	str	x19, [x21, #80]
 a18:	rev	w1, w1
 a1c:	str	x1, [x21, #64]
 a20:	ldp	x19, x20, [sp, #16]
 a24:	ldp	x21, x22, [sp, #32]
 a28:	ldp	x29, x30, [sp], #48
 a2c:	ret
	...

0000000000000a40 <grub_mod_init>:
 a40:	adrp	x1, 0 <grub_minix_close>
 a44:	adrp	x0, 0 <grub_minix_close>
 a48:	ldr	x1, [x1]
 a4c:	ldr	x0, [x0]
 a50:	b	0 <grub_list_push>
 a54:	nop
	...

0000000000000a68 <grub_mod_fini>:
 a68:	adrp	x0, 0 <grub_minix_close>
 a6c:	ldr	x0, [x0]
 a70:	b	0 <grub_list_remove>
 a74:	nop
	...
