
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libcap.so.2.31_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000019e0 <.init>:
    19e0:	stp	x29, x30, [sp, #-16]!
    19e4:	mov	x29, sp
    19e8:	bl	1d00 <cap_to_name@plt+0x10>
    19ec:	ldp	x29, x30, [sp], #16
    19f0:	ret

Disassembly of section .plt:

0000000000001a00 <removexattr@plt-0x20>:
    1a00:	stp	x16, x30, [sp, #-16]!
    1a04:	adrp	x16, 14000 <cap_set_nsowner@@Base+0x101b0>
    1a08:	ldr	x17, [x16, #4088]
    1a0c:	add	x16, x16, #0xff8
    1a10:	br	x17
    1a14:	nop
    1a18:	nop
    1a1c:	nop

0000000000001a20 <removexattr@plt>:
    1a20:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a24:	ldr	x17, [x16]
    1a28:	add	x16, x16, #0x0
    1a2c:	br	x17

0000000000001a30 <setuid@plt>:
    1a30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a34:	ldr	x17, [x16, #8]
    1a38:	add	x16, x16, #0x8
    1a3c:	br	x17

0000000000001a40 <strtoul@plt>:
    1a40:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a44:	ldr	x17, [x16, #16]
    1a48:	add	x16, x16, #0x10
    1a4c:	br	x17

0000000000001a50 <strlen@plt>:
    1a50:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a54:	ldr	x17, [x16, #24]
    1a58:	add	x16, x16, #0x18
    1a5c:	br	x17

0000000000001a60 <psx_load_syscalls@plt>:
    1a60:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a64:	ldr	x17, [x16, #32]
    1a68:	add	x16, x16, #0x20
    1a6c:	br	x17

0000000000001a70 <cap_clear_flag@plt>:
    1a70:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a74:	ldr	x17, [x16, #40]
    1a78:	add	x16, x16, #0x28
    1a7c:	br	x17

0000000000001a80 <cap_max_bits@plt>:
    1a80:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a84:	ldr	x17, [x16, #48]
    1a88:	add	x16, x16, #0x30
    1a8c:	br	x17

0000000000001a90 <_libcap_strdup@plt>:
    1a90:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1a94:	ldr	x17, [x16, #56]
    1a98:	add	x16, x16, #0x38
    1a9c:	br	x17

0000000000001aa0 <cap_get_ambient@plt>:
    1aa0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1aa4:	ldr	x17, [x16, #64]
    1aa8:	add	x16, x16, #0x40
    1aac:	br	x17

0000000000001ab0 <__cxa_finalize@plt>:
    1ab0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ab4:	ldr	x17, [x16, #72]
    1ab8:	add	x16, x16, #0x48
    1abc:	br	x17

0000000000001ac0 <sprintf@plt>:
    1ac0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ac4:	ldr	x17, [x16, #80]
    1ac8:	add	x16, x16, #0x50
    1acc:	br	x17

0000000000001ad0 <asprintf@plt>:
    1ad0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ad4:	ldr	x17, [x16, #88]
    1ad8:	add	x16, x16, #0x58
    1adc:	br	x17

0000000000001ae0 <__ctype_tolower_loc@plt>:
    1ae0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ae4:	ldr	x17, [x16, #96]
    1ae8:	add	x16, x16, #0x60
    1aec:	br	x17

0000000000001af0 <capset@plt>:
    1af0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1af4:	ldr	x17, [x16, #104]
    1af8:	add	x16, x16, #0x68
    1afc:	br	x17

0000000000001b00 <malloc@plt>:
    1b00:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b04:	ldr	x17, [x16, #112]
    1b08:	add	x16, x16, #0x70
    1b0c:	br	x17

0000000000001b10 <cap_set_syscall@plt>:
    1b10:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b14:	ldr	x17, [x16, #120]
    1b18:	add	x16, x16, #0x78
    1b1c:	br	x17

0000000000001b20 <setxattr@plt>:
    1b20:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b24:	ldr	x17, [x16, #128]
    1b28:	add	x16, x16, #0x80
    1b2c:	br	x17

0000000000001b30 <cap_reset_ambient@plt>:
    1b30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b34:	ldr	x17, [x16, #136]
    1b38:	add	x16, x16, #0x88
    1b3c:	br	x17

0000000000001b40 <cap_get_bound@plt>:
    1b40:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b44:	ldr	x17, [x16, #144]
    1b48:	add	x16, x16, #0x90
    1b4c:	br	x17

0000000000001b50 <memset@plt>:
    1b50:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b54:	ldr	x17, [x16, #152]
    1b58:	add	x16, x16, #0x98
    1b5c:	br	x17

0000000000001b60 <calloc@plt>:
    1b60:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b64:	ldr	x17, [x16, #160]
    1b68:	add	x16, x16, #0xa0
    1b6c:	br	x17

0000000000001b70 <cap_set_proc@plt>:
    1b70:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b74:	ldr	x17, [x16, #168]
    1b78:	add	x16, x16, #0xa8
    1b7c:	br	x17

0000000000001b80 <__gmon_start__@plt>:
    1b80:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b84:	ldr	x17, [x16, #176]
    1b88:	add	x16, x16, #0xb0
    1b8c:	br	x17

0000000000001b90 <fremovexattr@plt>:
    1b90:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1b94:	ldr	x17, [x16, #184]
    1b98:	add	x16, x16, #0xb8
    1b9c:	br	x17

0000000000001ba0 <setgid@plt>:
    1ba0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ba4:	ldr	x17, [x16, #192]
    1ba8:	add	x16, x16, #0xc0
    1bac:	br	x17

0000000000001bb0 <cap_init@plt>:
    1bb0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bb4:	ldr	x17, [x16, #200]
    1bb8:	add	x16, x16, #0xc8
    1bbc:	br	x17

0000000000001bc0 <getxattr@plt>:
    1bc0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bc4:	ldr	x17, [x16, #208]
    1bc8:	add	x16, x16, #0xd0
    1bcc:	br	x17

0000000000001bd0 <__ctype_b_loc@plt>:
    1bd0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bd4:	ldr	x17, [x16, #216]
    1bd8:	add	x16, x16, #0xd8
    1bdc:	br	x17

0000000000001be0 <cap_get_proc@plt>:
    1be0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1be4:	ldr	x17, [x16, #224]
    1be8:	add	x16, x16, #0xe0
    1bec:	br	x17

0000000000001bf0 <__lxstat64@plt>:
    1bf0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1bf4:	ldr	x17, [x16, #232]
    1bf8:	add	x16, x16, #0xe8
    1bfc:	br	x17

0000000000001c00 <cap_drop_bound@plt>:
    1c00:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c04:	ldr	x17, [x16, #240]
    1c08:	add	x16, x16, #0xf0
    1c0c:	br	x17

0000000000001c10 <free@plt>:
    1c10:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c14:	ldr	x17, [x16, #248]
    1c18:	add	x16, x16, #0xf8
    1c1c:	br	x17

0000000000001c20 <__fxstat64@plt>:
    1c20:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c24:	ldr	x17, [x16, #256]
    1c28:	add	x16, x16, #0x100
    1c2c:	br	x17

0000000000001c30 <fgetxattr@plt>:
    1c30:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c34:	ldr	x17, [x16, #264]
    1c38:	add	x16, x16, #0x108
    1c3c:	br	x17

0000000000001c40 <setgroups@plt>:
    1c40:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c44:	ldr	x17, [x16, #272]
    1c48:	add	x16, x16, #0x110
    1c4c:	br	x17

0000000000001c50 <strcpy@plt>:
    1c50:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c54:	ldr	x17, [x16, #280]
    1c58:	add	x16, x16, #0x118
    1c5c:	br	x17

0000000000001c60 <fsetxattr@plt>:
    1c60:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c64:	ldr	x17, [x16, #288]
    1c68:	add	x16, x16, #0x120
    1c6c:	br	x17

0000000000001c70 <capgetp@plt>:
    1c70:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c74:	ldr	x17, [x16, #296]
    1c78:	add	x16, x16, #0x128
    1c7c:	br	x17

0000000000001c80 <cap_free@plt>:
    1c80:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c84:	ldr	x17, [x16, #304]
    1c88:	add	x16, x16, #0x130
    1c8c:	br	x17

0000000000001c90 <cap_set_flag@plt>:
    1c90:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1c94:	ldr	x17, [x16, #312]
    1c98:	add	x16, x16, #0x138
    1c9c:	br	x17

0000000000001ca0 <cap_compare@plt>:
    1ca0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ca4:	ldr	x17, [x16, #320]
    1ca8:	add	x16, x16, #0x140
    1cac:	br	x17

0000000000001cb0 <capget@plt>:
    1cb0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cb4:	ldr	x17, [x16, #328]
    1cb8:	add	x16, x16, #0x148
    1cbc:	br	x17

0000000000001cc0 <__errno_location@plt>:
    1cc0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cc4:	ldr	x17, [x16, #336]
    1cc8:	add	x16, x16, #0x150
    1ccc:	br	x17

0000000000001cd0 <prctl@plt>:
    1cd0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cd4:	ldr	x17, [x16, #344]
    1cd8:	add	x16, x16, #0x158
    1cdc:	br	x17

0000000000001ce0 <syscall@plt>:
    1ce0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1ce4:	ldr	x17, [x16, #352]
    1ce8:	add	x16, x16, #0x160
    1cec:	br	x17

0000000000001cf0 <cap_to_name@plt>:
    1cf0:	adrp	x16, 15000 <removexattr@GLIBC_2.17>
    1cf4:	ldr	x17, [x16, #360]
    1cf8:	add	x16, x16, #0x168
    1cfc:	br	x17

Disassembly of section .text:

0000000000001d00 <cap_max_bits@@Base-0x154>:
    1d00:	adrp	x0, 14000 <cap_set_nsowner@@Base+0x101b0>
    1d04:	ldr	x0, [x0, #4056]
    1d08:	cbz	x0, 1d10 <cap_to_name@plt+0x20>
    1d0c:	b	1b80 <__gmon_start__@plt>
    1d10:	ret
    1d14:	nop
    1d18:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x111b0>
    1d1c:	add	x0, x0, #0x2b8
    1d20:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x111b0>
    1d24:	add	x1, x1, #0x2b8
    1d28:	cmp	x1, x0
    1d2c:	b.eq	1d44 <cap_to_name@plt+0x54>  // b.none
    1d30:	adrp	x1, 14000 <cap_set_nsowner@@Base+0x101b0>
    1d34:	ldr	x1, [x1, #4040]
    1d38:	cbz	x1, 1d44 <cap_to_name@plt+0x54>
    1d3c:	mov	x16, x1
    1d40:	br	x16
    1d44:	ret
    1d48:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x111b0>
    1d4c:	add	x0, x0, #0x2b8
    1d50:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x111b0>
    1d54:	add	x1, x1, #0x2b8
    1d58:	sub	x1, x1, x0
    1d5c:	lsr	x2, x1, #63
    1d60:	add	x1, x2, x1, asr #3
    1d64:	cmp	xzr, x1, asr #1
    1d68:	asr	x1, x1, #1
    1d6c:	b.eq	1d84 <cap_to_name@plt+0x94>  // b.none
    1d70:	adrp	x2, 14000 <cap_set_nsowner@@Base+0x101b0>
    1d74:	ldr	x2, [x2, #4064]
    1d78:	cbz	x2, 1d84 <cap_to_name@plt+0x94>
    1d7c:	mov	x16, x2
    1d80:	br	x16
    1d84:	ret
    1d88:	stp	x29, x30, [sp, #-32]!
    1d8c:	mov	x29, sp
    1d90:	str	x19, [sp, #16]
    1d94:	adrp	x19, 15000 <cap_set_nsowner@@Base+0x111b0>
    1d98:	ldrb	w0, [x19, #696]
    1d9c:	cbnz	w0, 1dc4 <cap_to_name@plt+0xd4>
    1da0:	adrp	x0, 14000 <cap_set_nsowner@@Base+0x101b0>
    1da4:	ldr	x0, [x0, #4048]
    1da8:	cbz	x0, 1db8 <cap_to_name@plt+0xc8>
    1dac:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x111b0>
    1db0:	ldr	x0, [x0, #368]
    1db4:	bl	1ab0 <__cxa_finalize@plt>
    1db8:	bl	1d18 <cap_to_name@plt+0x28>
    1dbc:	mov	w0, #0x1                   	// #1
    1dc0:	strb	w0, [x19, #696]
    1dc4:	ldr	x19, [sp, #16]
    1dc8:	ldp	x29, x30, [sp], #32
    1dcc:	ret
    1dd0:	b	1d48 <cap_to_name@plt+0x58>
    1dd4:	stp	x29, x30, [sp, #-48]!
    1dd8:	stp	x22, x21, [sp, #16]
    1ddc:	stp	x20, x19, [sp, #32]
    1de0:	mov	x29, sp
    1de4:	adrp	x20, 15000 <cap_set_nsowner@@Base+0x111b0>
    1de8:	ldr	w8, [x20, #700]
    1dec:	cbnz	w8, 1e44 <cap_to_name@plt+0x154>
    1df0:	mov	x0, xzr
    1df4:	mov	x1, xzr
    1df8:	bl	1b10 <cap_set_syscall@plt>
    1dfc:	mov	w21, wzr
    1e00:	mov	w22, #0x40                  	// #64
    1e04:	add	w8, w21, w22
    1e08:	cmp	w8, #0x0
    1e0c:	cinc	w8, w8, lt  // lt = tstop
    1e10:	asr	w19, w8, #1
    1e14:	mov	w0, w19
    1e18:	bl	1b40 <cap_get_bound@plt>
    1e1c:	sub	w8, w19, #0x1
    1e20:	cmp	w0, #0x0
    1e24:	csel	w22, w8, w22, lt  // lt = tstop
    1e28:	csinc	w21, w21, w19, lt  // lt = tstop
    1e2c:	cmp	w21, w22
    1e30:	b.le	1e04 <cap_to_name@plt+0x114>
    1e34:	cmp	w21, #0x0
    1e38:	mov	w8, #0x26                  	// #38
    1e3c:	csel	w8, w8, w21, eq  // eq = none
    1e40:	str	w8, [x20, #700]
    1e44:	ldp	x20, x19, [sp, #32]
    1e48:	ldp	x22, x21, [sp, #16]
    1e4c:	ldp	x29, x30, [sp], #48
    1e50:	ret

0000000000001e54 <cap_max_bits@@Base>:
    1e54:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    1e58:	ldr	w0, [x8, #700]
    1e5c:	ret

0000000000001e60 <cap_init@@Base>:
    1e60:	stp	x29, x30, [sp, #-32]!
    1e64:	str	x19, [sp, #16]
    1e68:	mov	x29, sp
    1e6c:	mov	w0, #0x1                   	// #1
    1e70:	mov	w1, #0x28                  	// #40
    1e74:	bl	1b60 <calloc@plt>
    1e78:	mov	x19, x0
    1e7c:	cbz	x0, 1edc <cap_init@@Base+0x7c>
    1e80:	adrp	x8, 3000 <cap_from_text@@Base+0x26c>
    1e84:	ldr	d0, [x8, #3728]
    1e88:	mov	x1, xzr
    1e8c:	str	d0, [x19], #4
    1e90:	mov	x0, x19
    1e94:	bl	1cb0 <capget@plt>
    1e98:	ldr	w8, [x19]
    1e9c:	mov	w9, #0x330                 	// #816
    1ea0:	movk	w9, #0x1998, lsl #16
    1ea4:	cmp	w8, w9
    1ea8:	b.eq	1ee8 <cap_init@@Base+0x88>  // b.none
    1eac:	mov	w9, #0x1026                	// #4134
    1eb0:	movk	w9, #0x2007, lsl #16
    1eb4:	cmp	w8, w9
    1eb8:	b.eq	1ee8 <cap_init@@Base+0x88>  // b.none
    1ebc:	mov	w9, #0x522                 	// #1314
    1ec0:	movk	w9, #0x2008, lsl #16
    1ec4:	cmp	w8, w9
    1ec8:	b.eq	1ee8 <cap_init@@Base+0x88>  // b.none
    1ecc:	mov	x0, x19
    1ed0:	bl	1c80 <cap_free@plt>
    1ed4:	mov	x19, xzr
    1ed8:	b	1ee8 <cap_init@@Base+0x88>
    1edc:	bl	1cc0 <__errno_location@plt>
    1ee0:	mov	w8, #0xc                   	// #12
    1ee4:	str	w8, [x0]
    1ee8:	mov	x0, x19
    1eec:	ldr	x19, [sp, #16]
    1ef0:	ldp	x29, x30, [sp], #32
    1ef4:	ret

0000000000001ef8 <cap_free@@Base>:
    1ef8:	stp	x29, x30, [sp, #-32]!
    1efc:	str	x19, [sp, #16]
    1f00:	mov	x29, sp
    1f04:	cbz	x0, 1f74 <cap_free@@Base+0x7c>
    1f08:	mov	x19, x0
    1f0c:	ldr	w8, [x19, #-4]!
    1f10:	mov	w9, #0x95d0                	// #38352
    1f14:	movk	w9, #0xca, lsl #16
    1f18:	cmp	w8, w9
    1f1c:	b.eq	1f40 <cap_free@@Base+0x48>  // b.none
    1f20:	mov	w9, #0x90d0                	// #37072
    1f24:	movk	w9, #0xca, lsl #16
    1f28:	cmp	w8, w9
    1f2c:	b.ne	1f64 <cap_free@@Base+0x6c>  // b.any
    1f30:	movi	v0.2d, #0x0
    1f34:	str	xzr, [x19, #32]
    1f38:	stp	q0, q0, [x19]
    1f3c:	b	1f54 <cap_free@@Base+0x5c>
    1f40:	bl	1a50 <strlen@plt>
    1f44:	add	x2, x0, #0x4
    1f48:	mov	x0, x19
    1f4c:	mov	w1, wzr
    1f50:	bl	1b50 <memset@plt>
    1f54:	mov	x0, x19
    1f58:	bl	1c10 <free@plt>
    1f5c:	mov	w0, wzr
    1f60:	b	1f74 <cap_free@@Base+0x7c>
    1f64:	bl	1cc0 <__errno_location@plt>
    1f68:	mov	w8, #0x16                  	// #22
    1f6c:	str	w8, [x0]
    1f70:	mov	w0, #0xffffffff            	// #-1
    1f74:	ldr	x19, [sp, #16]
    1f78:	ldp	x29, x30, [sp], #32
    1f7c:	ret

0000000000001f80 <_libcap_strdup@@Base>:
    1f80:	stp	x29, x30, [sp, #-32]!
    1f84:	str	x19, [sp, #16]
    1f88:	mov	x29, sp
    1f8c:	cbz	x0, 1fbc <_libcap_strdup@@Base+0x3c>
    1f90:	mov	x19, x0
    1f94:	bl	1a50 <strlen@plt>
    1f98:	add	x0, x0, #0x5
    1f9c:	bl	1b00 <malloc@plt>
    1fa0:	cbz	x0, 1fcc <_libcap_strdup@@Base+0x4c>
    1fa4:	mov	w8, #0x95d0                	// #38352
    1fa8:	movk	w8, #0xca, lsl #16
    1fac:	str	w8, [x0], #4
    1fb0:	mov	x1, x19
    1fb4:	bl	1c50 <strcpy@plt>
    1fb8:	b	1fe0 <_libcap_strdup@@Base+0x60>
    1fbc:	bl	1cc0 <__errno_location@plt>
    1fc0:	mov	x8, x0
    1fc4:	mov	w9, #0x16                  	// #22
    1fc8:	b	1fd8 <_libcap_strdup@@Base+0x58>
    1fcc:	bl	1cc0 <__errno_location@plt>
    1fd0:	mov	x8, x0
    1fd4:	mov	w9, #0xc                   	// #12
    1fd8:	mov	x0, xzr
    1fdc:	str	w9, [x8]
    1fe0:	ldr	x19, [sp, #16]
    1fe4:	ldp	x29, x30, [sp], #32
    1fe8:	ret

0000000000001fec <cap_dup@@Base>:
    1fec:	stp	x29, x30, [sp, #-32]!
    1ff0:	str	x19, [sp, #16]
    1ff4:	mov	x29, sp
    1ff8:	cbz	x0, 2030 <cap_dup@@Base+0x44>
    1ffc:	ldur	w8, [x0, #-4]
    2000:	mov	w9, #0x90d0                	// #37072
    2004:	movk	w9, #0xca, lsl #16
    2008:	mov	x19, x0
    200c:	cmp	w8, w9
    2010:	b.ne	2030 <cap_dup@@Base+0x44>  // b.any
    2014:	bl	1bb0 <cap_init@plt>
    2018:	cbz	x0, 2044 <cap_dup@@Base+0x58>
    201c:	ldr	w8, [x19, #32]
    2020:	ldp	q1, q0, [x19]
    2024:	str	w8, [x0, #32]
    2028:	stp	q1, q0, [x0]
    202c:	b	2044 <cap_dup@@Base+0x58>
    2030:	bl	1cc0 <__errno_location@plt>
    2034:	mov	x8, x0
    2038:	mov	w9, #0x16                  	// #22
    203c:	mov	x0, xzr
    2040:	str	w9, [x8]
    2044:	ldr	x19, [sp, #16]
    2048:	ldp	x29, x30, [sp], #32
    204c:	ret

0000000000002050 <psx_load_syscalls@@Base>:
    2050:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    2054:	mov	w9, #0x1                   	// #1
    2058:	strb	w9, [x8, #704]
    205c:	ret

0000000000002060 <cap_set_syscall@@Base>:
    2060:	cbz	x0, 2078 <cap_set_syscall@@Base+0x18>
    2064:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    2068:	adrp	x9, 15000 <cap_set_nsowner@@Base+0x111b0>
    206c:	str	x0, [x8, #376]
    2070:	str	x1, [x9, #384]
    2074:	ret
    2078:	adrp	x0, 15000 <cap_set_nsowner@@Base+0x111b0>
    207c:	adrp	x1, 15000 <cap_set_nsowner@@Base+0x111b0>
    2080:	add	x0, x0, #0x178
    2084:	add	x1, x1, #0x180
    2088:	b	1a60 <psx_load_syscalls@plt>

000000000000208c <cap_get_proc@@Base>:
    208c:	stp	x29, x30, [sp, #-32]!
    2090:	str	x19, [sp, #16]
    2094:	mov	x29, sp
    2098:	bl	1bb0 <cap_init@plt>
    209c:	mov	x19, x0
    20a0:	cbz	x0, 20c0 <cap_get_proc@@Base+0x34>
    20a4:	add	x1, x19, #0x8
    20a8:	mov	x0, x19
    20ac:	bl	1cb0 <capget@plt>
    20b0:	cbz	w0, 20c0 <cap_get_proc@@Base+0x34>
    20b4:	mov	x0, x19
    20b8:	bl	1c80 <cap_free@plt>
    20bc:	mov	x19, xzr
    20c0:	mov	x0, x19
    20c4:	ldr	x19, [sp, #16]
    20c8:	ldp	x29, x30, [sp], #32
    20cc:	ret

00000000000020d0 <cap_set_proc@@Base>:
    20d0:	stp	x29, x30, [sp, #-16]!
    20d4:	mov	x29, sp
    20d8:	cbz	x0, 2110 <cap_set_proc@@Base+0x40>
    20dc:	ldur	w8, [x0, #-4]
    20e0:	mov	w9, #0x90d0                	// #37072
    20e4:	movk	w9, #0xca, lsl #16
    20e8:	mov	x1, x0
    20ec:	cmp	w8, w9
    20f0:	b.ne	2110 <cap_set_proc@@Base+0x40>  // b.any
    20f4:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    20f8:	ldr	x8, [x8, #376]
    20fc:	add	x2, x1, #0x8
    2100:	mov	w0, #0x5b                  	// #91
    2104:	mov	x3, xzr
    2108:	blr	x8
    210c:	b	2120 <cap_set_proc@@Base+0x50>
    2110:	bl	1cc0 <__errno_location@plt>
    2114:	mov	w8, #0x16                  	// #22
    2118:	str	w8, [x0]
    211c:	mov	w0, #0xffffffff            	// #-1
    2120:	ldp	x29, x30, [sp], #16
    2124:	ret

0000000000002128 <capgetp@@Base>:
    2128:	stp	x29, x30, [sp, #-32]!
    212c:	str	x19, [sp, #16]
    2130:	mov	x29, sp
    2134:	cbz	x1, 2168 <capgetp@@Base+0x40>
    2138:	ldur	w8, [x1, #-4]
    213c:	mov	w9, #0x90d0                	// #37072
    2140:	movk	w9, #0xca, lsl #16
    2144:	mov	x19, x1
    2148:	cmp	w8, w9
    214c:	b.ne	2168 <capgetp@@Base+0x40>  // b.any
    2150:	str	w0, [x19, #4]
    2154:	add	x1, x19, #0x8
    2158:	mov	x0, x19
    215c:	bl	1cb0 <capget@plt>
    2160:	str	wzr, [x19, #4]
    2164:	b	217c <capgetp@@Base+0x54>
    2168:	bl	1cc0 <__errno_location@plt>
    216c:	mov	x8, x0
    2170:	mov	w9, #0x16                  	// #22
    2174:	mov	w0, #0xffffffff            	// #-1
    2178:	str	w9, [x8]
    217c:	ldr	x19, [sp, #16]
    2180:	ldp	x29, x30, [sp], #32
    2184:	ret

0000000000002188 <cap_get_pid@@Base>:
    2188:	stp	x29, x30, [sp, #-48]!
    218c:	str	x21, [sp, #16]
    2190:	stp	x20, x19, [sp, #32]
    2194:	mov	x29, sp
    2198:	mov	w20, w0
    219c:	bl	1bb0 <cap_init@plt>
    21a0:	mov	x19, x0
    21a4:	cbz	x0, 21d4 <cap_get_pid@@Base+0x4c>
    21a8:	mov	w0, w20
    21ac:	mov	x1, x19
    21b0:	bl	1c70 <capgetp@plt>
    21b4:	cbz	w0, 21d4 <cap_get_pid@@Base+0x4c>
    21b8:	bl	1cc0 <__errno_location@plt>
    21bc:	ldr	w21, [x0]
    21c0:	mov	x20, x0
    21c4:	mov	x0, x19
    21c8:	bl	1c80 <cap_free@plt>
    21cc:	mov	x19, xzr
    21d0:	str	w21, [x20]
    21d4:	mov	x0, x19
    21d8:	ldp	x20, x19, [sp, #32]
    21dc:	ldr	x21, [sp, #16]
    21e0:	ldp	x29, x30, [sp], #48
    21e4:	ret

00000000000021e8 <capsetp@@Base>:
    21e8:	stp	x29, x30, [sp, #-32]!
    21ec:	str	x19, [sp, #16]
    21f0:	mov	x29, sp
    21f4:	cbz	x1, 2230 <capsetp@@Base+0x48>
    21f8:	ldur	w8, [x1, #-4]
    21fc:	mov	w9, #0x90d0                	// #37072
    2200:	movk	w9, #0xca, lsl #16
    2204:	mov	x19, x1
    2208:	cmp	w8, w9
    220c:	b.ne	2230 <capsetp@@Base+0x48>  // b.any
    2210:	str	w0, [x19, #4]
    2214:	add	x1, x19, #0x8
    2218:	mov	x0, x19
    221c:	bl	1af0 <capset@plt>
    2220:	mov	w8, #0x522                 	// #1314
    2224:	movk	w8, #0x2008, lsl #16
    2228:	str	x8, [x19]
    222c:	b	2244 <capsetp@@Base+0x5c>
    2230:	bl	1cc0 <__errno_location@plt>
    2234:	mov	x8, x0
    2238:	mov	w9, #0x16                  	// #22
    223c:	mov	w0, #0xffffffff            	// #-1
    2240:	str	w9, [x8]
    2244:	ldr	x19, [sp, #16]
    2248:	ldp	x29, x30, [sp], #32
    224c:	ret

0000000000002250 <cap_get_bound@@Base>:
    2250:	stp	x29, x30, [sp, #-32]!
    2254:	str	x19, [sp, #16]
    2258:	mov	x29, sp
    225c:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    2260:	ldr	x8, [x8, #376]
    2264:	sxtw	x2, w0
    2268:	mov	w0, #0xa7                  	// #167
    226c:	mov	w1, #0x17                  	// #23
    2270:	mov	x3, xzr
    2274:	blr	x8
    2278:	tbz	w0, #31, 228c <cap_get_bound@@Base+0x3c>
    227c:	neg	w19, w0
    2280:	bl	1cc0 <__errno_location@plt>
    2284:	str	w19, [x0]
    2288:	mov	w0, #0xffffffff            	// #-1
    228c:	ldr	x19, [sp, #16]
    2290:	ldp	x29, x30, [sp], #32
    2294:	ret

0000000000002298 <cap_drop_bound@@Base>:
    2298:	stp	x29, x30, [sp, #-32]!
    229c:	str	x19, [sp, #16]
    22a0:	mov	x29, sp
    22a4:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    22a8:	ldr	x8, [x8, #376]
    22ac:	sxtw	x2, w0
    22b0:	mov	w0, #0xa7                  	// #167
    22b4:	mov	w1, #0x18                  	// #24
    22b8:	mov	x3, xzr
    22bc:	blr	x8
    22c0:	tbz	w0, #31, 22d4 <cap_drop_bound@@Base+0x3c>
    22c4:	neg	w19, w0
    22c8:	bl	1cc0 <__errno_location@plt>
    22cc:	str	w19, [x0]
    22d0:	mov	w0, #0xffffffff            	// #-1
    22d4:	ldr	x19, [sp, #16]
    22d8:	ldp	x29, x30, [sp], #32
    22dc:	ret

00000000000022e0 <cap_get_ambient@@Base>:
    22e0:	stp	x29, x30, [sp, #-32]!
    22e4:	str	x19, [sp, #16]
    22e8:	mov	x29, sp
    22ec:	sxtw	x2, w0
    22f0:	mov	w0, #0x2f                  	// #47
    22f4:	mov	w1, #0x1                   	// #1
    22f8:	mov	x3, xzr
    22fc:	mov	x4, xzr
    2300:	bl	1cd0 <prctl@plt>
    2304:	tbz	w0, #31, 2318 <cap_get_ambient@@Base+0x38>
    2308:	neg	w19, w0
    230c:	bl	1cc0 <__errno_location@plt>
    2310:	str	w19, [x0]
    2314:	mov	w0, #0xffffffff            	// #-1
    2318:	ldr	x19, [sp, #16]
    231c:	ldp	x29, x30, [sp], #32
    2320:	ret

0000000000002324 <cap_set_ambient@@Base>:
    2324:	stp	x29, x30, [sp, #-32]!
    2328:	str	x19, [sp, #16]
    232c:	mov	x29, sp
    2330:	cmp	w1, #0x1
    2334:	b.eq	2344 <cap_set_ambient@@Base+0x20>  // b.none
    2338:	cbnz	w1, 2378 <cap_set_ambient@@Base+0x54>
    233c:	mov	w2, #0x3                   	// #3
    2340:	b	2348 <cap_set_ambient@@Base+0x24>
    2344:	mov	w2, #0x2                   	// #2
    2348:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    234c:	ldr	x8, [x8, #384]
    2350:	sxtw	x3, w0
    2354:	mov	w0, #0xa7                  	// #167
    2358:	mov	w1, #0x2f                  	// #47
    235c:	mov	x4, xzr
    2360:	mov	x5, xzr
    2364:	mov	x6, xzr
    2368:	blr	x8
    236c:	tbz	w0, #31, 2388 <cap_set_ambient@@Base+0x64>
    2370:	neg	w19, w0
    2374:	b	237c <cap_set_ambient@@Base+0x58>
    2378:	mov	w19, #0x16                  	// #22
    237c:	bl	1cc0 <__errno_location@plt>
    2380:	str	w19, [x0]
    2384:	mov	w0, #0xffffffff            	// #-1
    2388:	ldr	x19, [sp, #16]
    238c:	ldp	x29, x30, [sp], #32
    2390:	ret

0000000000002394 <cap_reset_ambient@@Base>:
    2394:	stp	x29, x30, [sp, #-48]!
    2398:	str	x21, [sp, #16]
    239c:	stp	x20, x19, [sp, #32]
    23a0:	mov	x29, sp
    23a4:	bl	1cc0 <__errno_location@plt>
    23a8:	ldr	w21, [x0]
    23ac:	mov	x19, x0
    23b0:	mov	w20, wzr
    23b4:	mov	w0, w20
    23b8:	bl	1aa0 <cap_get_ambient@plt>
    23bc:	cmn	w0, #0x1
    23c0:	b.eq	2404 <cap_reset_ambient@@Base+0x70>  // b.none
    23c4:	add	w20, w20, #0x1
    23c8:	cbz	w0, 23b4 <cap_reset_ambient@@Base+0x20>
    23cc:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    23d0:	ldr	x8, [x8, #384]
    23d4:	mov	w0, #0xa7                  	// #167
    23d8:	mov	w1, #0x2f                  	// #47
    23dc:	mov	w2, #0x4                   	// #4
    23e0:	mov	x3, xzr
    23e4:	mov	x4, xzr
    23e8:	mov	x5, xzr
    23ec:	mov	x6, xzr
    23f0:	blr	x8
    23f4:	tbz	w0, #31, 240c <cap_reset_ambient@@Base+0x78>
    23f8:	neg	w21, w0
    23fc:	mov	w0, #0xffffffff            	// #-1
    2400:	b	2408 <cap_reset_ambient@@Base+0x74>
    2404:	mov	w0, wzr
    2408:	str	w21, [x19]
    240c:	ldp	x20, x19, [sp, #32]
    2410:	ldr	x21, [sp, #16]
    2414:	ldp	x29, x30, [sp], #48
    2418:	ret

000000000000241c <cap_get_secbits@@Base>:
    241c:	mov	w0, #0x1b                  	// #27
    2420:	mov	x1, xzr
    2424:	mov	x2, xzr
    2428:	b	1cd0 <prctl@plt>

000000000000242c <cap_set_secbits@@Base>:
    242c:	stp	x29, x30, [sp, #-16]!
    2430:	mov	x29, sp
    2434:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    2438:	ldr	x8, [x8, #376]
    243c:	mov	w2, w0
    2440:	mov	w0, #0xa7                  	// #167
    2444:	mov	w1, #0x1c                  	// #28
    2448:	mov	x3, xzr
    244c:	blr	x8
    2450:	ldp	x29, x30, [sp], #16
    2454:	ret

0000000000002458 <cap_set_mode@@Base>:
    2458:	stp	x29, x30, [sp, #-48]!
    245c:	str	x21, [sp, #16]
    2460:	stp	x20, x19, [sp, #32]
    2464:	mov	x29, sp
    2468:	mov	w8, #0x8                   	// #8
    246c:	mov	w20, w0
    2470:	str	w8, [x29, #28]
    2474:	bl	1be0 <cap_get_proc@plt>
    2478:	add	x3, x29, #0x1c
    247c:	mov	w2, #0x1                   	// #1
    2480:	mov	w4, #0x1                   	// #1
    2484:	mov	w1, wzr
    2488:	mov	x19, x0
    248c:	bl	1c90 <cap_set_flag@plt>
    2490:	mov	w21, w0
    2494:	mov	x0, x19
    2498:	bl	1b70 <cap_set_proc@plt>
    249c:	orr	w21, w0, w21
    24a0:	cbz	w21, 24d8 <cap_set_mode@@Base+0x80>
    24a4:	mov	x0, x19
    24a8:	mov	w1, wzr
    24ac:	bl	1a70 <cap_clear_flag@plt>
    24b0:	mov	x0, x19
    24b4:	bl	1b70 <cap_set_proc@plt>
    24b8:	orr	w20, w0, w21
    24bc:	mov	x0, x19
    24c0:	bl	1c80 <cap_free@plt>
    24c4:	mov	w0, w20
    24c8:	ldp	x20, x19, [sp, #32]
    24cc:	ldr	x21, [sp, #16]
    24d0:	ldp	x29, x30, [sp], #48
    24d4:	ret
    24d8:	sub	w8, w20, #0x1
    24dc:	cmp	w8, #0x2
    24e0:	b.cs	24f4 <cap_set_mode@@Base+0x9c>  // b.hs, b.nlast
    24e4:	mov	w1, #0x2                   	// #2
    24e8:	mov	x0, x19
    24ec:	bl	1a70 <cap_clear_flag@plt>
    24f0:	b	24fc <cap_set_mode@@Base+0xa4>
    24f4:	cmp	w20, #0x3
    24f8:	b.ne	257c <cap_set_mode@@Base+0x124>  // b.any
    24fc:	mov	w0, wzr
    2500:	bl	1aa0 <cap_get_ambient@plt>
    2504:	tbnz	w0, #31, 251c <cap_set_mode@@Base+0xc4>
    2508:	bl	1b30 <cap_reset_ambient@plt>
    250c:	mov	w21, w0
    2510:	cbnz	w0, 24a4 <cap_set_mode@@Base+0x4c>
    2514:	mov	w2, #0xef                  	// #239
    2518:	b	2520 <cap_set_mode@@Base+0xc8>
    251c:	mov	w2, #0x2f                  	// #47
    2520:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    2524:	ldr	x8, [x8, #376]
    2528:	mov	w0, #0xa7                  	// #167
    252c:	mov	w1, #0x1c                  	// #28
    2530:	mov	x3, xzr
    2534:	blr	x8
    2538:	cmp	w20, #0x1
    253c:	mov	x21, x0
    2540:	b.ne	24a4 <cap_set_mode@@Base+0x4c>  // b.any
    2544:	mov	w0, wzr
    2548:	bl	1b40 <cap_get_bound@plt>
    254c:	tbnz	w0, #31, 256c <cap_set_mode@@Base+0x114>
    2550:	mov	w20, wzr
    2554:	mov	w0, w20
    2558:	bl	1c00 <cap_drop_bound@plt>
    255c:	add	w20, w20, #0x1
    2560:	mov	w0, w20
    2564:	bl	1b40 <cap_get_bound@plt>
    2568:	tbz	w0, #31, 2554 <cap_set_mode@@Base+0xfc>
    256c:	mov	w1, #0x1                   	// #1
    2570:	mov	x0, x19
    2574:	bl	1a70 <cap_clear_flag@plt>
    2578:	b	24a4 <cap_set_mode@@Base+0x4c>
    257c:	bl	1cc0 <__errno_location@plt>
    2580:	mov	w8, #0x16                  	// #22
    2584:	str	w8, [x0]
    2588:	mov	w21, #0xffffffff            	// #-1
    258c:	b	24a4 <cap_set_mode@@Base+0x4c>

0000000000002590 <cap_get_mode@@Base>:
    2590:	stp	x29, x30, [sp, #-48]!
    2594:	stp	x22, x21, [sp, #16]
    2598:	stp	x20, x19, [sp, #32]
    259c:	mov	x29, sp
    25a0:	mov	w0, #0x1b                  	// #27
    25a4:	mov	x1, xzr
    25a8:	mov	x2, xzr
    25ac:	bl	1cd0 <prctl@plt>
    25b0:	mov	w8, #0x2f                  	// #47
    25b4:	bics	wzr, w8, w0
    25b8:	b.ne	25fc <cap_get_mode@@Base+0x6c>  // b.any
    25bc:	mov	w19, w0
    25c0:	bl	1cc0 <__errno_location@plt>
    25c4:	ldr	w22, [x0]
    25c8:	mov	x20, x0
    25cc:	mov	w21, wzr
    25d0:	mov	w0, w21
    25d4:	bl	1aa0 <cap_get_ambient@plt>
    25d8:	cbnz	w0, 25e4 <cap_get_mode@@Base+0x54>
    25dc:	add	w21, w21, #0x1
    25e0:	b	25d0 <cap_get_mode@@Base+0x40>
    25e4:	cmn	w0, #0x1
    25e8:	b.ne	25fc <cap_get_mode@@Base+0x6c>  // b.any
    25ec:	cmp	w19, #0xef
    25f0:	str	w22, [x20]
    25f4:	b.eq	2610 <cap_get_mode@@Base+0x80>  // b.none
    25f8:	cbz	w21, 2610 <cap_get_mode@@Base+0x80>
    25fc:	mov	w0, wzr
    2600:	ldp	x20, x19, [sp, #32]
    2604:	ldp	x22, x21, [sp, #16]
    2608:	ldp	x29, x30, [sp], #48
    260c:	ret
    2610:	bl	1be0 <cap_get_proc@plt>
    2614:	mov	x20, x0
    2618:	bl	1bb0 <cap_init@plt>
    261c:	mov	x1, x20
    2620:	mov	x21, x0
    2624:	bl	1ca0 <cap_compare@plt>
    2628:	mov	w19, w0
    262c:	mov	x0, x21
    2630:	bl	1c80 <cap_free@plt>
    2634:	mov	x0, x20
    2638:	bl	1c80 <cap_free@plt>
    263c:	tbnz	w19, #2, 2674 <cap_get_mode@@Base+0xe4>
    2640:	tst	w19, #0x3
    2644:	b.ne	268c <cap_get_mode@@Base+0xfc>  // b.any
    2648:	mov	w19, wzr
    264c:	mov	w20, #0x5                   	// #5
    2650:	mov	w0, w19
    2654:	bl	1b40 <cap_get_bound@plt>
    2658:	cmp	w0, #0x0
    265c:	cset	w8, ne  // ne = any
    2660:	cmn	w0, #0x1
    2664:	csel	w8, w20, w8, eq  // eq = none
    2668:	cbnz	w8, 267c <cap_get_mode@@Base+0xec>
    266c:	add	w19, w19, #0x1
    2670:	b	2650 <cap_get_mode@@Base+0xc0>
    2674:	mov	w0, #0x3                   	// #3
    2678:	b	2600 <cap_get_mode@@Base+0x70>
    267c:	cmp	w8, #0x5
    2680:	b.ne	268c <cap_get_mode@@Base+0xfc>  // b.any
    2684:	mov	w0, #0x1                   	// #1
    2688:	b	2600 <cap_get_mode@@Base+0x70>
    268c:	mov	w0, #0x2                   	// #2
    2690:	b	2600 <cap_get_mode@@Base+0x70>

0000000000002694 <cap_setuid@@Base>:
    2694:	stp	x29, x30, [sp, #-64]!
    2698:	str	x23, [sp, #16]
    269c:	stp	x22, x21, [sp, #32]
    26a0:	stp	x20, x19, [sp, #48]
    26a4:	mov	x29, sp
    26a8:	mov	w8, #0x7                   	// #7
    26ac:	mov	w21, w0
    26b0:	str	w8, [x29, #28]
    26b4:	bl	1be0 <cap_get_proc@plt>
    26b8:	add	x3, x29, #0x1c
    26bc:	mov	w2, #0x1                   	// #1
    26c0:	mov	w4, #0x1                   	// #1
    26c4:	mov	w1, wzr
    26c8:	mov	x19, x0
    26cc:	bl	1c90 <cap_set_flag@plt>
    26d0:	adrp	x22, 15000 <cap_set_nsowner@@Base+0x111b0>
    26d4:	ldr	x8, [x22, #376]
    26d8:	mov	w0, #0xa7                  	// #167
    26dc:	mov	w1, #0x8                   	// #8
    26e0:	mov	w2, #0x1                   	// #1
    26e4:	mov	x3, xzr
    26e8:	blr	x8
    26ec:	mov	x0, x19
    26f0:	bl	1b70 <cap_set_proc@plt>
    26f4:	mov	w20, w0
    26f8:	cbnz	w0, 2748 <cap_setuid@@Base+0xb4>
    26fc:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    2700:	ldrb	w8, [x8, #704]
    2704:	tbz	w8, #0, 2718 <cap_setuid@@Base+0x84>
    2708:	mov	w0, w21
    270c:	bl	1a30 <setuid@plt>
    2710:	mov	w20, w0
    2714:	b	2748 <cap_setuid@@Base+0xb4>
    2718:	ldr	x8, [x22, #376]
    271c:	mov	w1, w21
    2720:	mov	w0, #0x92                  	// #146
    2724:	mov	x2, xzr
    2728:	mov	x3, xzr
    272c:	blr	x8
    2730:	mov	x20, x0
    2734:	tbz	w20, #31, 2748 <cap_setuid@@Base+0xb4>
    2738:	neg	w20, w20
    273c:	bl	1cc0 <__errno_location@plt>
    2740:	str	w20, [x0]
    2744:	mov	w20, #0xffffffff            	// #-1
    2748:	bl	1cc0 <__errno_location@plt>
    274c:	ldr	x8, [x22, #376]
    2750:	ldr	w23, [x0]
    2754:	mov	x21, x0
    2758:	mov	w0, #0xa7                  	// #167
    275c:	mov	w1, #0x8                   	// #8
    2760:	mov	x2, xzr
    2764:	mov	x3, xzr
    2768:	blr	x8
    276c:	mov	x0, x19
    2770:	mov	w1, wzr
    2774:	bl	1a70 <cap_clear_flag@plt>
    2778:	mov	x0, x19
    277c:	bl	1b70 <cap_set_proc@plt>
    2780:	mov	x0, x19
    2784:	bl	1c80 <cap_free@plt>
    2788:	str	w23, [x21]
    278c:	mov	w0, w20
    2790:	ldp	x20, x19, [sp, #48]
    2794:	ldp	x22, x21, [sp, #32]
    2798:	ldr	x23, [sp, #16]
    279c:	ldp	x29, x30, [sp], #64
    27a0:	ret

00000000000027a4 <cap_setgroups@@Base>:
    27a4:	sub	sp, sp, #0x50
    27a8:	stp	x29, x30, [sp, #16]
    27ac:	stp	x24, x23, [sp, #32]
    27b0:	stp	x22, x21, [sp, #48]
    27b4:	stp	x20, x19, [sp, #64]
    27b8:	add	x29, sp, #0x10
    27bc:	mov	w8, #0x6                   	// #6
    27c0:	mov	x20, x2
    27c4:	mov	x21, x1
    27c8:	mov	w23, w0
    27cc:	stur	w8, [x29, #-4]
    27d0:	bl	1be0 <cap_get_proc@plt>
    27d4:	sub	x3, x29, #0x4
    27d8:	mov	w2, #0x1                   	// #1
    27dc:	mov	w4, #0x1                   	// #1
    27e0:	mov	w1, wzr
    27e4:	mov	x19, x0
    27e8:	bl	1c90 <cap_set_flag@plt>
    27ec:	mov	x0, x19
    27f0:	bl	1b70 <cap_set_proc@plt>
    27f4:	adrp	x8, 15000 <cap_set_nsowner@@Base+0x111b0>
    27f8:	ldrb	w8, [x8, #704]
    27fc:	mov	w22, w0
    2800:	tbz	w8, #0, 282c <cap_setgroups@@Base+0x88>
    2804:	cbnz	w22, 2868 <cap_setgroups@@Base+0xc4>
    2808:	mov	w0, w23
    280c:	bl	1ba0 <setgid@plt>
    2810:	mov	w22, w0
    2814:	cbnz	w0, 2868 <cap_setgroups@@Base+0xc4>
    2818:	mov	x0, x21
    281c:	mov	x1, x20
    2820:	bl	1c40 <setgroups@plt>
    2824:	mov	w22, w0
    2828:	b	2868 <cap_setgroups@@Base+0xc4>
    282c:	cbnz	w22, 2854 <cap_setgroups@@Base+0xb0>
    2830:	adrp	x24, 15000 <cap_set_nsowner@@Base+0x111b0>
    2834:	ldr	x8, [x24, #376]
    2838:	mov	w1, w23
    283c:	mov	w0, #0x90                  	// #144
    2840:	mov	x2, xzr
    2844:	mov	x3, xzr
    2848:	blr	x8
    284c:	mov	x22, x0
    2850:	cbz	w22, 28b0 <cap_setgroups@@Base+0x10c>
    2854:	tbz	w22, #31, 2868 <cap_setgroups@@Base+0xc4>
    2858:	neg	w20, w22
    285c:	bl	1cc0 <__errno_location@plt>
    2860:	str	w20, [x0]
    2864:	mov	w22, #0xffffffff            	// #-1
    2868:	bl	1cc0 <__errno_location@plt>
    286c:	ldr	w21, [x0]
    2870:	mov	x20, x0
    2874:	mov	x0, x19
    2878:	mov	w1, wzr
    287c:	bl	1a70 <cap_clear_flag@plt>
    2880:	mov	x0, x19
    2884:	bl	1b70 <cap_set_proc@plt>
    2888:	mov	x0, x19
    288c:	bl	1c80 <cap_free@plt>
    2890:	str	w21, [x20]
    2894:	mov	w0, w22
    2898:	ldp	x20, x19, [sp, #64]
    289c:	ldp	x22, x21, [sp, #48]
    28a0:	ldp	x24, x23, [sp, #32]
    28a4:	ldp	x29, x30, [sp, #16]
    28a8:	add	sp, sp, #0x50
    28ac:	ret
    28b0:	ldr	x8, [x24, #376]
    28b4:	mov	w0, #0x9f                  	// #159
    28b8:	mov	x1, x21
    28bc:	mov	x2, x20
    28c0:	mov	x3, xzr
    28c4:	blr	x8
    28c8:	mov	x22, x0
    28cc:	tbz	w22, #31, 2868 <cap_setgroups@@Base+0xc4>
    28d0:	b	2858 <cap_setgroups@@Base+0xb4>
    28d4:	b	1ce0 <syscall@plt>
    28d8:	b	1ce0 <syscall@plt>

00000000000028dc <cap_size@@Base>:
    28dc:	mov	w0, #0x1d                  	// #29
    28e0:	ret

00000000000028e4 <cap_copy_ext@@Base>:
    28e4:	stp	x29, x30, [sp, #-16]!
    28e8:	mov	x29, sp
    28ec:	cbz	x1, 29ac <cap_copy_ext@@Base+0xc8>
    28f0:	cbz	x0, 29ac <cap_copy_ext@@Base+0xc8>
    28f4:	cmp	x2, #0x1d
    28f8:	b.lt	29ac <cap_copy_ext@@Base+0xc8>  // b.tstop
    28fc:	ldur	w8, [x1, #-4]
    2900:	mov	w9, #0x90d0                	// #37072
    2904:	movk	w9, #0xca, lsl #16
    2908:	cmp	w8, w9
    290c:	b.ne	29ac <cap_copy_ext@@Base+0xc8>  // b.any
    2910:	mov	w11, #0xc290                	// #49808
    2914:	movk	w11, #0x5101, lsl #16
    2918:	mov	w12, #0x8                   	// #8
    291c:	mov	x8, xzr
    2920:	add	x9, x0, #0x5
    2924:	mov	w10, #0xc                   	// #12
    2928:	str	w11, [x0]
    292c:	strb	w12, [x0, #4]
    2930:	mov	w0, #0x1d                  	// #29
    2934:	mov	x11, xzr
    2938:	mov	x12, x11
    293c:	lsr	x11, x11, #2
    2940:	madd	x11, x11, x10, x1
    2944:	add	x11, x11, x8, lsl #2
    2948:	ldr	w11, [x11, #8]
    294c:	orr	x13, x12, #0x1
    2950:	add	x14, x12, x12, lsl #1
    2954:	add	x14, x9, x14
    2958:	add	x13, x13, x13, lsl #1
    295c:	add	x13, x9, x13
    2960:	strb	w11, [x14, x8]
    2964:	lsr	w14, w11, #8
    2968:	orr	x15, x12, #0x2
    296c:	strb	w14, [x13, x8]
    2970:	orr	x13, x12, #0x3
    2974:	add	x14, x15, x15, lsl #1
    2978:	add	x13, x13, x13, lsl #1
    297c:	add	x14, x9, x14
    2980:	add	x13, x9, x13
    2984:	lsr	w15, w11, #16
    2988:	lsr	w11, w11, #24
    298c:	strb	w15, [x14, x8]
    2990:	strb	w11, [x13, x8]
    2994:	mov	w11, #0x4                   	// #4
    2998:	cbz	x12, 2938 <cap_copy_ext@@Base+0x54>
    299c:	add	x8, x8, #0x1
    29a0:	cmp	x8, #0x3
    29a4:	b.ne	2934 <cap_copy_ext@@Base+0x50>  // b.any
    29a8:	b	29bc <cap_copy_ext@@Base+0xd8>
    29ac:	bl	1cc0 <__errno_location@plt>
    29b0:	mov	w8, #0x16                  	// #22
    29b4:	str	w8, [x0]
    29b8:	mov	x0, #0xffffffffffffffff    	// #-1
    29bc:	ldp	x29, x30, [sp], #16
    29c0:	ret

00000000000029c4 <cap_copy_int@@Base>:
    29c4:	stp	x29, x30, [sp, #-32]!
    29c8:	str	x19, [sp, #16]
    29cc:	mov	x29, sp
    29d0:	cbz	x0, 29ec <cap_copy_int@@Base+0x28>
    29d4:	ldr	w8, [x0]
    29d8:	mov	w9, #0xc290                	// #49808
    29dc:	movk	w9, #0x5101, lsl #16
    29e0:	mov	x19, x0
    29e4:	cmp	w8, w9
    29e8:	b.eq	2a0c <cap_copy_int@@Base+0x48>  // b.none
    29ec:	bl	1cc0 <__errno_location@plt>
    29f0:	mov	x8, x0
    29f4:	mov	x0, xzr
    29f8:	mov	w9, #0x16                  	// #22
    29fc:	str	w9, [x8]
    2a00:	ldr	x19, [sp, #16]
    2a04:	ldp	x29, x30, [sp], #32
    2a08:	ret
    2a0c:	bl	1bb0 <cap_init@plt>
    2a10:	cbz	x0, 2a00 <cap_copy_int@@Base+0x3c>
    2a14:	ldrb	w9, [x19, #4]
    2a18:	mov	x8, xzr
    2a1c:	add	x10, x0, #0x14
    2a20:	cbz	w9, 2a74 <cap_copy_int@@Base+0xb0>
    2a24:	add	x13, x19, x8
    2a28:	ldrb	w12, [x13, #5]
    2a2c:	cmp	w9, #0x1
    2a30:	mov	w11, w9
    2a34:	b.eq	2a7c <cap_copy_int@@Base+0xb8>  // b.none
    2a38:	ldrb	w11, [x13, #8]
    2a3c:	cmp	w9, #0x2
    2a40:	bfi	w12, w11, #8, #8
    2a44:	mov	w11, w9
    2a48:	b.eq	2a7c <cap_copy_int@@Base+0xb8>  // b.none
    2a4c:	add	x13, x19, x8
    2a50:	ldrb	w11, [x13, #11]
    2a54:	cmp	w9, #0x3
    2a58:	bfi	w12, w11, #16, #8
    2a5c:	mov	w11, w9
    2a60:	b.eq	2a7c <cap_copy_int@@Base+0xb8>  // b.none
    2a64:	ldrb	w11, [x13, #14]
    2a68:	bfi	w12, w11, #24, #8
    2a6c:	mov	w11, #0x4                   	// #4
    2a70:	b	2a7c <cap_copy_int@@Base+0xb8>
    2a74:	mov	w12, wzr
    2a78:	mov	w11, w9
    2a7c:	cmp	w11, w9
    2a80:	stur	w12, [x10, #-12]
    2a84:	b.ne	2a90 <cap_copy_int@@Base+0xcc>  // b.any
    2a88:	mov	w12, wzr
    2a8c:	b	2b00 <cap_copy_int@@Base+0x13c>
    2a90:	add	x12, x11, w11, uxtw #1
    2a94:	add	x12, x19, x12
    2a98:	add	x12, x12, x8
    2a9c:	ldrb	w12, [x12, #5]
    2aa0:	add	w13, w11, #0x1
    2aa4:	cmp	w13, w9
    2aa8:	b.eq	2b00 <cap_copy_int@@Base+0x13c>  // b.none
    2aac:	add	x13, x13, w13, uxtw #1
    2ab0:	add	x13, x13, x19
    2ab4:	add	x13, x13, x8
    2ab8:	ldrb	w14, [x13, #5]
    2abc:	add	w13, w11, #0x2
    2ac0:	cmp	w13, w9
    2ac4:	bfi	w12, w14, #8, #8
    2ac8:	b.eq	2b00 <cap_copy_int@@Base+0x13c>  // b.none
    2acc:	add	x13, x13, w13, uxtw #1
    2ad0:	add	x13, x13, x19
    2ad4:	add	x13, x13, x8
    2ad8:	ldrb	w13, [x13, #5]
    2adc:	add	w11, w11, #0x3
    2ae0:	cmp	w11, w9
    2ae4:	bfi	w12, w13, #16, #8
    2ae8:	b.eq	2b00 <cap_copy_int@@Base+0x13c>  // b.none
    2aec:	add	x11, x11, w11, uxtw #1
    2af0:	add	x11, x11, x19
    2af4:	add	x11, x11, x8
    2af8:	ldrb	w11, [x11, #5]
    2afc:	bfi	w12, w11, #24, #8
    2b00:	add	x8, x8, #0x1
    2b04:	cmp	x8, #0x3
    2b08:	str	w12, [x10], #4
    2b0c:	b.ne	2a20 <cap_copy_int@@Base+0x5c>  // b.any
    2b10:	b	2a00 <cap_copy_int@@Base+0x3c>

0000000000002b14 <cap_get_flag@@Base>:
    2b14:	stp	x29, x30, [sp, #-16]!
    2b18:	mov	x29, sp
    2b1c:	cbz	x0, 2b70 <cap_get_flag@@Base+0x5c>
    2b20:	cbz	x3, 2b70 <cap_get_flag@@Base+0x5c>
    2b24:	cmp	w2, #0x2
    2b28:	b.hi	2b70 <cap_get_flag@@Base+0x5c>  // b.pmore
    2b2c:	cmp	w1, #0x3f
    2b30:	b.hi	2b70 <cap_get_flag@@Base+0x5c>  // b.pmore
    2b34:	ldur	w8, [x0, #-4]
    2b38:	mov	w9, #0x90d0                	// #37072
    2b3c:	movk	w9, #0xca, lsl #16
    2b40:	cmp	w8, w9
    2b44:	b.ne	2b70 <cap_get_flag@@Base+0x5c>  // b.any
    2b48:	lsr	w9, w1, #5
    2b4c:	mov	w10, #0xc                   	// #12
    2b50:	umaddl	x9, w9, w10, x0
    2b54:	add	x9, x9, w2, uxtw #2
    2b58:	ldr	w9, [x9, #8]
    2b5c:	mov	w8, wzr
    2b60:	lsr	w9, w9, w1
    2b64:	and	w9, w9, #0x1
    2b68:	str	w9, [x3]
    2b6c:	b	2b80 <cap_get_flag@@Base+0x6c>
    2b70:	bl	1cc0 <__errno_location@plt>
    2b74:	mov	w8, #0x16                  	// #22
    2b78:	str	w8, [x0]
    2b7c:	mov	w8, #0xffffffff            	// #-1
    2b80:	mov	w0, w8
    2b84:	ldp	x29, x30, [sp], #16
    2b88:	ret

0000000000002b8c <cap_set_flag@@Base>:
    2b8c:	stp	x29, x30, [sp, #-16]!
    2b90:	mov	x29, sp
    2b94:	cbz	x0, 2c34 <cap_set_flag@@Base+0xa8>
    2b98:	cmp	w1, #0x2
    2b9c:	b.hi	2c34 <cap_set_flag@@Base+0xa8>  // b.pmore
    2ba0:	sub	w8, w2, #0x1
    2ba4:	cmp	w8, #0x3e
    2ba8:	b.hi	2c34 <cap_set_flag@@Base+0xa8>  // b.pmore
    2bac:	ldur	w8, [x0, #-4]
    2bb0:	mov	w9, #0x90d0                	// #37072
    2bb4:	movk	w9, #0xca, lsl #16
    2bb8:	cmp	w8, w9
    2bbc:	b.ne	2c34 <cap_set_flag@@Base+0xa8>  // b.any
    2bc0:	cmp	w4, #0x1
    2bc4:	b.hi	2c34 <cap_set_flag@@Base+0xa8>  // b.pmore
    2bc8:	mov	w8, w1
    2bcc:	mov	w9, w2
    2bd0:	mov	w10, #0x1                   	// #1
    2bd4:	mov	w11, #0xc                   	// #12
    2bd8:	ldr	w12, [x3]
    2bdc:	cmp	w12, #0x3f
    2be0:	b.hi	2c20 <cap_set_flag@@Base+0x94>  // b.pmore
    2be4:	cmp	w4, #0x1
    2be8:	lsl	w13, w10, w12
    2bec:	b.ne	2c08 <cap_set_flag@@Base+0x7c>  // b.any
    2bf0:	lsr	x12, x12, #5
    2bf4:	madd	x12, x12, x11, x0
    2bf8:	add	x12, x12, x8, lsl #2
    2bfc:	ldr	w14, [x12, #8]
    2c00:	orr	w13, w14, w13
    2c04:	b	2c1c <cap_set_flag@@Base+0x90>
    2c08:	ubfx	x12, x12, #5, #27
    2c0c:	umaddl	x12, w12, w11, x0
    2c10:	add	x12, x12, x8, lsl #2
    2c14:	ldr	w14, [x12, #8]
    2c18:	bic	w13, w14, w13
    2c1c:	str	w13, [x12, #8]
    2c20:	subs	x9, x9, #0x1
    2c24:	add	x3, x3, #0x4
    2c28:	b.ne	2bd8 <cap_set_flag@@Base+0x4c>  // b.any
    2c2c:	mov	w0, wzr
    2c30:	b	2c44 <cap_set_flag@@Base+0xb8>
    2c34:	bl	1cc0 <__errno_location@plt>
    2c38:	mov	w8, #0x16                  	// #22
    2c3c:	str	w8, [x0]
    2c40:	mov	w0, #0xffffffff            	// #-1
    2c44:	ldp	x29, x30, [sp], #16
    2c48:	ret

0000000000002c4c <cap_clear@@Base>:
    2c4c:	stp	x29, x30, [sp, #-16]!
    2c50:	mov	x29, sp
    2c54:	cbz	x0, 2c80 <cap_clear@@Base+0x34>
    2c58:	ldur	w9, [x0, #-4]
    2c5c:	mov	w10, #0x90d0                	// #37072
    2c60:	movk	w10, #0xca, lsl #16
    2c64:	mov	x8, x0
    2c68:	cmp	w9, w10
    2c6c:	b.ne	2c80 <cap_clear@@Base+0x34>  // b.any
    2c70:	mov	w0, wzr
    2c74:	stp	xzr, xzr, [x8, #8]
    2c78:	str	xzr, [x8, #24]
    2c7c:	b	2c90 <cap_clear@@Base+0x44>
    2c80:	bl	1cc0 <__errno_location@plt>
    2c84:	mov	w8, #0x16                  	// #22
    2c88:	str	w8, [x0]
    2c8c:	mov	w0, #0xffffffff            	// #-1
    2c90:	ldp	x29, x30, [sp], #16
    2c94:	ret

0000000000002c98 <cap_clear_flag@@Base>:
    2c98:	stp	x29, x30, [sp, #-16]!
    2c9c:	mov	x29, sp
    2ca0:	cbz	x0, 2cd4 <cap_clear_flag@@Base+0x3c>
    2ca4:	cmp	w1, #0x2
    2ca8:	b.hi	2cd4 <cap_clear_flag@@Base+0x3c>  // b.pmore
    2cac:	ldur	w8, [x0, #-4]
    2cb0:	mov	w9, #0x90d0                	// #37072
    2cb4:	movk	w9, #0xca, lsl #16
    2cb8:	cmp	w8, w9
    2cbc:	b.ne	2cd4 <cap_clear_flag@@Base+0x3c>  // b.any
    2cc0:	add	x9, x0, w1, uxtw #2
    2cc4:	mov	w8, wzr
    2cc8:	str	wzr, [x9, #8]
    2ccc:	str	wzr, [x9, #20]
    2cd0:	b	2ce4 <cap_clear_flag@@Base+0x4c>
    2cd4:	bl	1cc0 <__errno_location@plt>
    2cd8:	mov	w8, #0x16                  	// #22
    2cdc:	str	w8, [x0]
    2ce0:	mov	w8, #0xffffffff            	// #-1
    2ce4:	mov	w0, w8
    2ce8:	ldp	x29, x30, [sp], #16
    2cec:	ret

0000000000002cf0 <cap_compare@@Base>:
    2cf0:	stp	x29, x30, [sp, #-16]!
    2cf4:	mov	x29, sp
    2cf8:	cbz	x0, 2d78 <cap_compare@@Base+0x88>
    2cfc:	cbz	x1, 2d78 <cap_compare@@Base+0x88>
    2d00:	ldur	w9, [x0, #-4]
    2d04:	mov	w8, #0x90d0                	// #37072
    2d08:	movk	w8, #0xca, lsl #16
    2d0c:	cmp	w9, w8
    2d10:	b.ne	2d78 <cap_compare@@Base+0x88>  // b.any
    2d14:	ldur	w9, [x1, #-4]
    2d18:	cmp	w9, w8
    2d1c:	b.ne	2d78 <cap_compare@@Base+0x88>  // b.any
    2d20:	mov	x9, xzr
    2d24:	mov	w8, wzr
    2d28:	mov	x10, x9
    2d2c:	add	x9, x9, x9, lsl #1
    2d30:	add	x11, x0, x9, lsl #2
    2d34:	add	x9, x1, x9, lsl #2
    2d38:	ldr	w14, [x11, #8]
    2d3c:	ldr	w15, [x9, #16]
    2d40:	ldp	w12, w9, [x9, #8]
    2d44:	ldp	w11, w13, [x11, #12]
    2d48:	cmp	w14, w12
    2d4c:	cset	w12, ne  // ne = any
    2d50:	cmp	w13, w15
    2d54:	cset	w13, ne  // ne = any
    2d58:	cmp	w11, w9
    2d5c:	orr	w8, w8, w12
    2d60:	cset	w9, ne  // ne = any
    2d64:	orr	w8, w8, w13, lsl #2
    2d68:	orr	w8, w8, w9, lsl #1
    2d6c:	mov	w9, #0x1                   	// #1
    2d70:	cbz	x10, 2d28 <cap_compare@@Base+0x38>
    2d74:	b	2d88 <cap_compare@@Base+0x98>
    2d78:	bl	1cc0 <__errno_location@plt>
    2d7c:	mov	w8, #0x16                  	// #22
    2d80:	str	w8, [x0]
    2d84:	mov	w8, #0xffffffff            	// #-1
    2d88:	mov	w0, w8
    2d8c:	ldp	x29, x30, [sp], #16
    2d90:	ret

0000000000002d94 <cap_from_text@@Base>:
    2d94:	sub	sp, sp, #0x70
    2d98:	stp	x29, x30, [sp, #16]
    2d9c:	stp	x28, x27, [sp, #32]
    2da0:	stp	x26, x25, [sp, #48]
    2da4:	stp	x24, x23, [sp, #64]
    2da8:	stp	x22, x21, [sp, #80]
    2dac:	stp	x20, x19, [sp, #96]
    2db0:	add	x29, sp, #0x10
    2db4:	str	x0, [sp, #8]
    2db8:	cbz	x0, 31d4 <cap_from_text@@Base+0x440>
    2dbc:	mov	x23, x0
    2dc0:	bl	1bb0 <cap_init@plt>
    2dc4:	mov	x19, x0
    2dc8:	cbz	x0, 31e4 <cap_from_text@@Base+0x450>
    2dcc:	ldr	w8, [x19]
    2dd0:	mov	w9, #0x330                 	// #816
    2dd4:	movk	w9, #0x1998, lsl #16
    2dd8:	cmp	w8, w9
    2ddc:	b.eq	2e08 <cap_from_text@@Base+0x74>  // b.none
    2de0:	mov	w9, #0x522                 	// #1314
    2de4:	movk	w9, #0x2008, lsl #16
    2de8:	cmp	w8, w9
    2dec:	b.eq	2e00 <cap_from_text@@Base+0x6c>  // b.none
    2df0:	mov	w9, #0x1026                	// #4134
    2df4:	movk	w9, #0x2007, lsl #16
    2df8:	cmp	w8, w9
    2dfc:	b.ne	31d4 <cap_from_text@@Base+0x440>  // b.any
    2e00:	mov	w20, #0x2                   	// #2
    2e04:	b	2e0c <cap_from_text@@Base+0x78>
    2e08:	mov	w20, #0x1                   	// #1
    2e0c:	bl	1bd0 <__ctype_b_loc@plt>
    2e10:	ldrb	w11, [x23]
    2e14:	mov	w8, #0xc                   	// #12
    2e18:	mov	x9, sp
    2e1c:	umaddl	x27, w20, w8, x19
    2e20:	mov	x21, x0
    2e24:	lsl	x25, x20, #2
    2e28:	sub	x28, x9, #0x4
    2e2c:	sub	x24, x27, #0x4
    2e30:	add	x26, x27, #0x4
    2e34:	str	xzr, [sp]
    2e38:	ldr	x9, [x21]
    2e3c:	and	x8, x11, #0xff
    2e40:	ldrh	w8, [x9, x8, lsl #1]
    2e44:	tbz	w8, #13, 2e58 <cap_from_text@@Base+0xc4>
    2e48:	ldrb	w11, [x23, #1]!
    2e4c:	ldrh	w8, [x9, x11, lsl #1]
    2e50:	tbnz	w8, #13, 2e48 <cap_from_text@@Base+0xb4>
    2e54:	str	x23, [sp, #8]
    2e58:	tst	w11, #0xff
    2e5c:	b.eq	31e4 <cap_from_text@@Base+0x450>  // b.none
    2e60:	and	w9, w11, #0xff
    2e64:	cmp	w9, #0x5f
    2e68:	b.eq	2ebc <cap_from_text@@Base+0x128>  // b.none
    2e6c:	tbnz	w8, #3, 2ebc <cap_from_text@@Base+0x128>
    2e70:	and	w8, w11, #0xff
    2e74:	cmp	w8, #0x2b
    2e78:	b.eq	31cc <cap_from_text@@Base+0x438>  // b.none
    2e7c:	cmp	w8, #0x2d
    2e80:	b.eq	31cc <cap_from_text@@Base+0x438>  // b.none
    2e84:	mov	x0, sp
    2e88:	mov	w1, w20
    2e8c:	bl	3290 <cap_from_text@@Base+0x4fc>
    2e90:	mov	w8, wzr
    2e94:	mov	x22, x23
    2e98:	b	2f28 <cap_from_text@@Base+0x194>
    2e9c:	add	x23, x22, #0x1
    2ea0:	ldr	x8, [x21]
    2ea4:	str	x23, [sp, #8]
    2ea8:	ldrb	w9, [x22, #1]
    2eac:	cmp	x9, #0x5f
    2eb0:	b.eq	2ebc <cap_from_text@@Base+0x128>  // b.none
    2eb4:	ldrh	w8, [x8, x9, lsl #1]
    2eb8:	tbz	w8, #3, 31cc <cap_from_text@@Base+0x438>
    2ebc:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    2ec0:	mov	x0, x23
    2ec4:	add	x1, x1, #0xbb
    2ec8:	bl	3208 <cap_from_text@@Base+0x474>
    2ecc:	cbz	x0, 2ee8 <cap_from_text@@Base+0x154>
    2ed0:	add	x22, x23, #0x3
    2ed4:	mov	x0, sp
    2ed8:	mov	w1, w20
    2edc:	str	x22, [sp, #8]
    2ee0:	bl	3290 <cap_from_text@@Base+0x4fc>
    2ee4:	b	2f18 <cap_from_text@@Base+0x184>
    2ee8:	add	x0, sp, #0x8
    2eec:	bl	3308 <cap_from_text@@Base+0x574>
    2ef0:	cmn	w0, #0x1
    2ef4:	b.eq	31cc <cap_from_text@@Base+0x438>  // b.none
    2ef8:	asr	w8, w0, #5
    2efc:	mov	x11, sp
    2f00:	ldr	w9, [x11, w8, sxtw #2]
    2f04:	ldr	x22, [sp, #8]
    2f08:	mov	w10, #0x1                   	// #1
    2f0c:	lsl	w10, w10, w0
    2f10:	orr	w9, w9, w10
    2f14:	str	w9, [x11, w8, sxtw #2]
    2f18:	ldrb	w8, [x22]
    2f1c:	cmp	w8, #0x2c
    2f20:	b.eq	2e9c <cap_from_text@@Base+0x108>  // b.none
    2f24:	mov	w8, #0x1                   	// #1
    2f28:	add	x23, x22, #0x1
    2f2c:	str	x23, [sp, #8]
    2f30:	ldrb	w9, [x22]
    2f34:	cmp	w9, #0x2b
    2f38:	b.eq	2f84 <cap_from_text@@Base+0x1f0>  // b.none
    2f3c:	cmp	w9, #0x2d
    2f40:	b.eq	2f84 <cap_from_text@@Base+0x1f0>  // b.none
    2f44:	cmp	w9, #0x3d
    2f48:	b.ne	31cc <cap_from_text@@Base+0x438>  // b.any
    2f4c:	ldrb	w9, [x23]
    2f50:	cmp	w9, #0x2d
    2f54:	b.eq	2f60 <cap_from_text@@Base+0x1cc>  // b.none
    2f58:	cmp	w9, #0x2b
    2f5c:	b.ne	2f80 <cap_from_text@@Base+0x1ec>  // b.any
    2f60:	cbz	w8, 31cc <cap_from_text@@Base+0x438>
    2f64:	cmp	w9, #0x2b
    2f68:	mov	w9, #0x4d                  	// #77
    2f6c:	mov	w10, #0x50                  	// #80
    2f70:	add	x23, x22, #0x2
    2f74:	csel	w9, w10, w9, eq  // eq = none
    2f78:	str	x23, [sp, #8]
    2f7c:	b	2f84 <cap_from_text@@Base+0x1f0>
    2f80:	mov	w9, #0x3d                  	// #61
    2f84:	ldrb	w11, [x23]
    2f88:	mov	w10, wzr
    2f8c:	tst	w11, #0xff
    2f90:	b.eq	2fd0 <cap_from_text@@Base+0x23c>  // b.none
    2f94:	ldr	x12, [x21]
    2f98:	and	x13, x11, #0xff
    2f9c:	ldrh	w12, [x12, x13, lsl #1]
    2fa0:	tbnz	w12, #13, 2fd0 <cap_from_text@@Base+0x23c>
    2fa4:	and	w11, w11, #0xff
    2fa8:	add	x23, x23, #0x1
    2fac:	cmp	w11, #0x65
    2fb0:	str	x23, [sp, #8]
    2fb4:	b.eq	30b8 <cap_from_text@@Base+0x324>  // b.none
    2fb8:	cmp	w11, #0x70
    2fbc:	b.eq	30c0 <cap_from_text@@Base+0x32c>  // b.none
    2fc0:	cmp	w11, #0x69
    2fc4:	b.ne	31cc <cap_from_text@@Base+0x438>  // b.any
    2fc8:	mov	w11, #0x4                   	// #4
    2fcc:	b	30c4 <cap_from_text@@Base+0x330>
    2fd0:	and	w11, w9, #0xff
    2fd4:	cmp	w11, #0x3d
    2fd8:	b.ne	31cc <cap_from_text@@Base+0x438>  // b.any
    2fdc:	mov	x11, x25
    2fe0:	mov	x12, x24
    2fe4:	ldr	w13, [x28, x11]
    2fe8:	ldr	w14, [x12]
    2fec:	subs	x11, x11, #0x4
    2ff0:	bic	w13, w14, w13
    2ff4:	str	w13, [x12], #-12
    2ff8:	b.ne	2fe4 <cap_from_text@@Base+0x250>  // b.any
    2ffc:	mov	x11, x25
    3000:	mov	x12, x27
    3004:	ldr	w13, [x28, x11]
    3008:	ldr	w14, [x12]
    300c:	subs	x11, x11, #0x4
    3010:	bic	w13, w14, w13
    3014:	str	w13, [x12], #-12
    3018:	b.ne	3004 <cap_from_text@@Base+0x270>  // b.any
    301c:	mov	x11, x25
    3020:	mov	x12, x26
    3024:	ldr	w13, [x28, x11]
    3028:	ldr	w14, [x12]
    302c:	subs	x11, x11, #0x4
    3030:	bic	w13, w14, w13
    3034:	str	w13, [x12], #-12
    3038:	b.ne	3024 <cap_from_text@@Base+0x290>  // b.any
    303c:	and	w11, w9, #0xff
    3040:	cmp	w11, #0x4d
    3044:	b.ne	3104 <cap_from_text@@Base+0x370>  // b.any
    3048:	tbz	w10, #0, 306c <cap_from_text@@Base+0x2d8>
    304c:	mov	x11, x25
    3050:	mov	x12, x24
    3054:	ldr	w13, [x28, x11]
    3058:	ldr	w14, [x12]
    305c:	subs	x11, x11, #0x4
    3060:	bic	w13, w14, w13
    3064:	str	w13, [x12], #-12
    3068:	b.ne	3054 <cap_from_text@@Base+0x2c0>  // b.any
    306c:	tbz	w10, #1, 3090 <cap_from_text@@Base+0x2fc>
    3070:	mov	x11, x25
    3074:	mov	x12, x27
    3078:	ldr	w13, [x28, x11]
    307c:	ldr	w14, [x12]
    3080:	subs	x11, x11, #0x4
    3084:	bic	w13, w14, w13
    3088:	str	w13, [x12], #-12
    308c:	b.ne	3078 <cap_from_text@@Base+0x2e4>  // b.any
    3090:	tbz	w10, #2, 3170 <cap_from_text@@Base+0x3dc>
    3094:	mov	x11, x25
    3098:	mov	x12, x26
    309c:	ldr	w13, [x28, x11]
    30a0:	ldr	w14, [x12]
    30a4:	subs	x11, x11, #0x4
    30a8:	bic	w13, w14, w13
    30ac:	str	w13, [x12], #-12
    30b0:	b.ne	309c <cap_from_text@@Base+0x308>  // b.any
    30b4:	b	3170 <cap_from_text@@Base+0x3dc>
    30b8:	mov	w11, #0x1                   	// #1
    30bc:	b	30c4 <cap_from_text@@Base+0x330>
    30c0:	mov	w11, #0x2                   	// #2
    30c4:	and	w12, w9, #0xff
    30c8:	cmp	w12, #0x3c
    30cc:	orr	w10, w10, w11
    30d0:	b.le	30f0 <cap_from_text@@Base+0x35c>
    30d4:	cmp	w12, #0x3d
    30d8:	b.eq	2fdc <cap_from_text@@Base+0x248>  // b.none
    30dc:	cmp	w12, #0x50
    30e0:	b.eq	2fdc <cap_from_text@@Base+0x248>  // b.none
    30e4:	cmp	w12, #0x4d
    30e8:	b.eq	2fdc <cap_from_text@@Base+0x248>  // b.none
    30ec:	b	3170 <cap_from_text@@Base+0x3dc>
    30f0:	cmp	w12, #0x2b
    30f4:	b.eq	3104 <cap_from_text@@Base+0x370>  // b.none
    30f8:	cmp	w12, #0x2d
    30fc:	b.eq	3048 <cap_from_text@@Base+0x2b4>  // b.none
    3100:	b	3170 <cap_from_text@@Base+0x3dc>
    3104:	tbz	w10, #0, 3128 <cap_from_text@@Base+0x394>
    3108:	mov	x11, x25
    310c:	mov	x12, x24
    3110:	ldr	w13, [x28, x11]
    3114:	ldr	w14, [x12]
    3118:	subs	x11, x11, #0x4
    311c:	orr	w13, w14, w13
    3120:	str	w13, [x12], #-12
    3124:	b.ne	3110 <cap_from_text@@Base+0x37c>  // b.any
    3128:	tbz	w10, #1, 314c <cap_from_text@@Base+0x3b8>
    312c:	mov	x11, x25
    3130:	mov	x12, x27
    3134:	ldr	w13, [x28, x11]
    3138:	ldr	w14, [x12]
    313c:	subs	x11, x11, #0x4
    3140:	orr	w13, w14, w13
    3144:	str	w13, [x12], #-12
    3148:	b.ne	3134 <cap_from_text@@Base+0x3a0>  // b.any
    314c:	tbz	w10, #2, 3170 <cap_from_text@@Base+0x3dc>
    3150:	mov	x11, x25
    3154:	mov	x12, x26
    3158:	ldr	w13, [x28, x11]
    315c:	ldr	w14, [x12]
    3160:	subs	x11, x11, #0x4
    3164:	orr	w13, w14, w13
    3168:	str	w13, [x12], #-12
    316c:	b.ne	3158 <cap_from_text@@Base+0x3c4>  // b.any
    3170:	ldrb	w12, [x23]
    3174:	cmp	w12, #0x2b
    3178:	b.eq	3184 <cap_from_text@@Base+0x3f0>  // b.none
    317c:	cmp	w12, #0x2d
    3180:	b.ne	31b4 <cap_from_text@@Base+0x420>  // b.any
    3184:	cbz	w8, 31cc <cap_from_text@@Base+0x438>
    3188:	add	x9, x23, #0x1
    318c:	str	x9, [sp, #8]
    3190:	ldr	x10, [x21]
    3194:	ldrb	w11, [x23, #1]
    3198:	ldrh	w10, [x10, x11, lsl #1]
    319c:	tbz	w10, #10, 31cc <cap_from_text@@Base+0x438>
    31a0:	mov	w10, wzr
    31a4:	mov	x23, x9
    31a8:	mov	w9, w12
    31ac:	cbnz	w11, 31bc <cap_from_text@@Base+0x428>
    31b0:	b	2e34 <cap_from_text@@Base+0xa0>
    31b4:	ldrb	w11, [x23]
    31b8:	cbz	w11, 2e34 <cap_from_text@@Base+0xa0>
    31bc:	ldr	x12, [x21]
    31c0:	ldrh	w12, [x12, w11, uxtw #1]
    31c4:	tbz	w12, #13, 2f8c <cap_from_text@@Base+0x1f8>
    31c8:	b	2e34 <cap_from_text@@Base+0xa0>
    31cc:	mov	x0, x19
    31d0:	bl	1c80 <cap_free@plt>
    31d4:	bl	1cc0 <__errno_location@plt>
    31d8:	mov	x19, xzr
    31dc:	mov	w8, #0x16                  	// #22
    31e0:	str	w8, [x0]
    31e4:	mov	x0, x19
    31e8:	ldp	x20, x19, [sp, #96]
    31ec:	ldp	x22, x21, [sp, #80]
    31f0:	ldp	x24, x23, [sp, #64]
    31f4:	ldp	x26, x25, [sp, #48]
    31f8:	ldp	x28, x27, [sp, #32]
    31fc:	ldp	x29, x30, [sp, #16]
    3200:	add	sp, sp, #0x70
    3204:	ret
    3208:	stp	x29, x30, [sp, #-48]!
    320c:	str	x21, [sp, #16]
    3210:	stp	x20, x19, [sp, #32]
    3214:	mov	x29, sp
    3218:	ldrb	w21, [x1]
    321c:	mov	x19, x0
    3220:	cbz	w21, 3250 <cap_from_text@@Base+0x4bc>
    3224:	mov	x20, x1
    3228:	bl	1ae0 <__ctype_tolower_loc@plt>
    322c:	ldr	x8, [x0]
    3230:	add	x9, x20, #0x1
    3234:	ldrb	w10, [x19]
    3238:	ldr	w10, [x8, x10, lsl #2]
    323c:	cmp	w10, w21, uxtb
    3240:	b.ne	327c <cap_from_text@@Base+0x4e8>  // b.any
    3244:	ldrb	w21, [x9], #1
    3248:	add	x19, x19, #0x1
    324c:	cbnz	w21, 3234 <cap_from_text@@Base+0x4a0>
    3250:	bl	1bd0 <__ctype_b_loc@plt>
    3254:	ldr	x8, [x0]
    3258:	ldrb	w9, [x19]
    325c:	ldrh	w8, [x8, x9, lsl #1]
    3260:	cmp	x9, #0x5f
    3264:	cset	w9, eq  // eq = none
    3268:	and	w8, w8, #0x8
    326c:	orr	w8, w9, w8, lsr #3
    3270:	cmp	w8, #0x0
    3274:	csel	x0, xzr, x19, ne  // ne = any
    3278:	b	3280 <cap_from_text@@Base+0x4ec>
    327c:	mov	x0, xzr
    3280:	ldp	x20, x19, [sp, #32]
    3284:	ldr	x21, [sp, #16]
    3288:	ldp	x29, x30, [sp], #48
    328c:	ret
    3290:	stp	x29, x30, [sp, #-32]!
    3294:	stp	x20, x19, [sp, #16]
    3298:	mov	x29, sp
    329c:	mov	w19, w1
    32a0:	mov	x20, x0
    32a4:	bl	1a80 <cap_max_bits@plt>
    32a8:	cbz	w19, 32fc <cap_from_text@@Base+0x568>
    32ac:	add	w8, w0, #0x1f
    32b0:	cmp	w0, #0x0
    32b4:	csel	w8, w8, w0, lt  // lt = tstop
    32b8:	and	w8, w8, #0xffffffe0
    32bc:	mov	x9, #0xffffffffffffffff    	// #-1
    32c0:	sub	w8, w0, w8
    32c4:	sub	w11, w19, #0x1
    32c8:	lsl	x8, x9, x8
    32cc:	lsl	w10, w19, #5
    32d0:	mvn	w8, w8
    32d4:	add	x9, x20, w11, uxtw #2
    32d8:	sub	w11, w10, #0x20
    32dc:	cmp	w0, w11
    32e0:	csel	w12, w8, wzr, hi  // hi = pmore
    32e4:	cmp	w0, w10
    32e8:	csinv	w10, w12, wzr, cc  // cc = lo, ul, last
    32ec:	subs	w19, w19, #0x1
    32f0:	str	w10, [x9], #-4
    32f4:	mov	w10, w11
    32f8:	b.ne	32d8 <cap_from_text@@Base+0x544>  // b.any
    32fc:	ldp	x20, x19, [sp, #16]
    3300:	ldp	x29, x30, [sp], #32
    3304:	ret
    3308:	sub	sp, sp, #0x40
    330c:	stp	x29, x30, [sp, #16]
    3310:	stp	x22, x21, [sp, #32]
    3314:	stp	x20, x19, [sp, #48]
    3318:	add	x29, sp, #0x10
    331c:	ldr	x20, [x0]
    3320:	mov	x19, x0
    3324:	str	x20, [sp, #8]
    3328:	bl	1bd0 <__ctype_b_loc@plt>
    332c:	ldr	x8, [x0]
    3330:	ldrb	w10, [x20]
    3334:	ldrh	w9, [x8, x10, lsl #1]
    3338:	tbnz	w9, #11, 33b4 <cap_from_text@@Base+0x620>
    333c:	cbz	w10, 336c <cap_from_text@@Base+0x5d8>
    3340:	cmp	w10, #0x5f
    3344:	b.eq	334c <cap_from_text@@Base+0x5b8>  // b.none
    3348:	tbz	w9, #10, 336c <cap_from_text@@Base+0x5d8>
    334c:	mov	w9, #0x1                   	// #1
    3350:	ldrb	w10, [x20, w9, uxtw]
    3354:	cbz	x10, 336c <cap_from_text@@Base+0x5d8>
    3358:	cmp	w10, #0x5f
    335c:	add	w9, w9, #0x1
    3360:	b.eq	3350 <cap_from_text@@Base+0x5bc>  // b.none
    3364:	ldrh	w10, [x8, x10, lsl #1]
    3368:	tbnz	w10, #10, 3350 <cap_from_text@@Base+0x5bc>
    336c:	bl	1a80 <cap_max_bits@plt>
    3370:	cbz	w0, 33cc <cap_from_text@@Base+0x638>
    3374:	adrp	x10, 14000 <cap_set_nsowner@@Base+0x101b0>
    3378:	ldr	x10, [x10, #4032]
    337c:	mov	w8, #0x1                   	// #1
    3380:	sub	w9, w0, #0x1
    3384:	sub	w21, w8, w0
    3388:	add	x22, x10, w9, uxtw #3
    338c:	ldr	x1, [x22]
    3390:	cbz	x1, 33a0 <cap_from_text@@Base+0x60c>
    3394:	mov	x0, x20
    3398:	bl	3208 <cap_from_text@@Base+0x474>
    339c:	cbnz	x0, 33e0 <cap_from_text@@Base+0x64c>
    33a0:	add	w21, w21, #0x1
    33a4:	cmp	w21, #0x1
    33a8:	sub	x22, x22, #0x8
    33ac:	b.ne	338c <cap_from_text@@Base+0x5f8>  // b.any
    33b0:	b	33cc <cap_from_text@@Base+0x638>
    33b4:	add	x1, sp, #0x8
    33b8:	mov	x0, x20
    33bc:	mov	w2, wzr
    33c0:	bl	1a40 <strtoul@plt>
    33c4:	cmp	x0, #0x3f
    33c8:	b.ls	33d4 <cap_from_text@@Base+0x640>  // b.plast
    33cc:	mov	w0, #0xffffffff            	// #-1
    33d0:	b	33e8 <cap_from_text@@Base+0x654>
    33d4:	ldr	x8, [sp, #8]
    33d8:	str	x8, [x19]
    33dc:	b	33e8 <cap_from_text@@Base+0x654>
    33e0:	str	x0, [x19]
    33e4:	neg	w0, w21
    33e8:	ldp	x20, x19, [sp, #48]
    33ec:	ldp	x22, x21, [sp, #32]
    33f0:	ldp	x29, x30, [sp, #16]
    33f4:	add	sp, sp, #0x40
    33f8:	ret

00000000000033fc <cap_from_name@@Base>:
    33fc:	stp	x29, x30, [sp, #-32]!
    3400:	str	x19, [sp, #16]
    3404:	mov	x29, sp
    3408:	str	x0, [x29, #24]
    340c:	add	x0, x29, #0x18
    3410:	mov	x19, x1
    3414:	bl	3308 <cap_from_text@@Base+0x574>
    3418:	cbz	x19, 3424 <cap_from_name@@Base+0x28>
    341c:	tbnz	w0, #31, 3424 <cap_from_name@@Base+0x28>
    3420:	str	w0, [x19]
    3424:	ldr	x19, [sp, #16]
    3428:	asr	w0, w0, #31
    342c:	ldp	x29, x30, [sp], #32
    3430:	ret

0000000000003434 <cap_to_name@@Base>:
    3434:	stp	x29, x30, [sp, #-32]!
    3438:	str	x19, [sp, #16]
    343c:	mov	x29, sp
    3440:	mov	w2, w0
    3444:	cmp	w0, #0x26
    3448:	b.cc	3484 <cap_to_name@@Base+0x50>  // b.lo, b.ul, b.last
    344c:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    3450:	add	x1, x1, #0xbf
    3454:	add	x0, x29, #0x18
    3458:	bl	1ad0 <asprintf@plt>
    345c:	ldr	x0, [x29, #24]
    3460:	bl	1a90 <_libcap_strdup@plt>
    3464:	ldr	x8, [x29, #24]
    3468:	mov	x19, x0
    346c:	mov	x0, x8
    3470:	bl	1c10 <free@plt>
    3474:	mov	x0, x19
    3478:	ldr	x19, [sp, #16]
    347c:	ldp	x29, x30, [sp], #32
    3480:	ret
    3484:	adrp	x8, 14000 <cap_set_nsowner@@Base+0x101b0>
    3488:	ldr	x8, [x8, #4032]
    348c:	ldr	x19, [sp, #16]
    3490:	ldr	x0, [x8, w2, uxtw #3]
    3494:	ldp	x29, x30, [sp], #32
    3498:	b	1a90 <_libcap_strdup@plt>

000000000000349c <cap_to_text@@Base>:
    349c:	stp	x29, x30, [sp, #-96]!
    34a0:	stp	x28, x27, [sp, #16]
    34a4:	stp	x26, x25, [sp, #32]
    34a8:	stp	x24, x23, [sp, #48]
    34ac:	stp	x22, x21, [sp, #64]
    34b0:	stp	x20, x19, [sp, #80]
    34b4:	mov	x29, sp
    34b8:	sub	sp, sp, #0x600
    34bc:	cbz	x0, 37b4 <cap_to_text@@Base+0x318>
    34c0:	ldur	w8, [x0, #-4]
    34c4:	mov	w9, #0x90d0                	// #37072
    34c8:	movk	w9, #0xca, lsl #16
    34cc:	mov	x20, x0
    34d0:	cmp	w8, w9
    34d4:	b.ne	37b4 <cap_to_text@@Base+0x318>  // b.any
    34d8:	movi	v0.2d, #0x0
    34dc:	mov	x19, x1
    34e0:	stp	q0, q0, [sp, #48]
    34e4:	bl	1a80 <cap_max_bits@plt>
    34e8:	mov	w21, w0
    34ec:	cbz	w0, 354c <cap_to_text@@Base+0xb0>
    34f0:	mov	w8, wzr
    34f4:	mov	w9, #0xc                   	// #12
    34f8:	mov	w10, #0x1                   	// #1
    34fc:	add	x11, sp, #0x30
    3500:	asr	w12, w8, #5
    3504:	smaddl	x12, w12, w9, x20
    3508:	ldp	w13, w15, [x12, #8]
    350c:	lsl	w14, w10, w8
    3510:	ldr	w12, [x12, #16]
    3514:	add	w8, w8, #0x1
    3518:	tst	w13, w14
    351c:	cset	w13, ne  // ne = any
    3520:	tst	w15, w14
    3524:	orr	w15, w13, #0x2
    3528:	csel	w13, w13, w15, eq  // eq = none
    352c:	tst	w12, w14
    3530:	orr	w12, w13, #0x4
    3534:	csel	w12, w13, w12, eq  // eq = none
    3538:	ldr	w13, [x11, w12, uxtw #2]
    353c:	cmp	w21, w8
    3540:	add	w13, w13, #0x1
    3544:	str	w13, [x11, w12, uxtw #2]
    3548:	b.ne	3500 <cap_to_text@@Base+0x64>  // b.any
    354c:	mov	w23, #0x7                   	// #7
    3550:	mov	w8, #0x6                   	// #6
    3554:	add	x9, sp, #0x30
    3558:	str	x19, [sp, #40]
    355c:	ldr	w10, [x9, x8, lsl #2]
    3560:	ldr	w11, [x9, w23, sxtw #2]
    3564:	cmp	w10, w11
    3568:	csel	w23, w23, w8, lt  // lt = tstop
    356c:	sub	x8, x8, #0x1
    3570:	cmn	x8, #0x1
    3574:	b.ne	355c <cap_to_text@@Base+0xc0>  // b.any
    3578:	adrp	x8, 3000 <cap_from_text@@Base+0x26c>
    357c:	adrp	x9, 4000 <cap_set_nsowner@@Base+0x1b0>
    3580:	add	x8, x8, #0xfb6
    3584:	add	x9, x9, #0xcf
    3588:	tst	w23, #0x1
    358c:	adrp	x10, 4000 <cap_set_nsowner@@Base+0x1b0>
    3590:	add	x10, x10, #0xca
    3594:	adrp	x11, 4000 <cap_set_nsowner@@Base+0x1b0>
    3598:	csel	x2, x9, x8, eq  // eq = none
    359c:	tst	w23, #0x4
    35a0:	add	x11, x11, #0x5f
    35a4:	csel	x3, x9, x10, eq  // eq = none
    35a8:	tst	w23, #0x2
    35ac:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    35b0:	csel	x4, x9, x11, eq  // eq = none
    35b4:	add	x1, x1, #0xc2
    35b8:	add	x0, sp, #0x54
    35bc:	add	x19, sp, #0x54
    35c0:	bl	1ac0 <sprintf@plt>
    35c4:	add	x8, sp, #0x30
    35c8:	add	x22, x19, w0, sxtw
    35cc:	mvn	w27, w23
    35d0:	add	w28, w23, #0x1
    35d4:	mov	w25, #0x8                   	// #8
    35d8:	mov	w12, #0x20                  	// #32
    35dc:	mov	w13, #0xc                   	// #12
    35e0:	mov	w19, #0x1                   	// #1
    35e4:	sub	x14, x8, #0x4
    35e8:	cbz	w25, 37cc <cap_to_text@@Base+0x330>
    35ec:	mov	x24, xzr
    35f0:	add	x8, x14, w25, sxtw #2
    35f4:	sub	w9, w28, w25
    35f8:	neg	w10, w25
    35fc:	cmp	w9, w24
    3600:	b.eq	360c <cap_to_text@@Base+0x170>  // b.none
    3604:	ldr	w11, [x8, x24, lsl #2]
    3608:	cbnz	w11, 361c <cap_to_text@@Base+0x180>
    360c:	sub	x24, x24, #0x1
    3610:	cmp	w10, w24
    3614:	b.ne	35fc <cap_to_text@@Base+0x160>  // b.any
    3618:	b	37cc <cap_to_text@@Base+0x330>
    361c:	sub	w8, w25, #0x1
    3620:	strb	w12, [x22], #1
    3624:	str	w27, [sp, #36]
    3628:	str	w28, [sp, #12]
    362c:	stp	x8, x14, [sp, #16]
    3630:	cbz	w21, 36cc <cap_to_text@@Base+0x230>
    3634:	mov	w26, wzr
    3638:	add	x28, x8, x24
    363c:	asr	w8, w26, #5
    3640:	smaddl	x8, w8, w13, x20
    3644:	ldp	w9, w11, [x8, #8]
    3648:	lsl	w10, w19, w26
    364c:	ldr	w8, [x8, #16]
    3650:	tst	w9, w10
    3654:	cset	w9, ne  // ne = any
    3658:	tst	w11, w10
    365c:	orr	w11, w9, #0x2
    3660:	csel	w9, w9, w11, eq  // eq = none
    3664:	orr	w11, w9, #0x4
    3668:	tst	w8, w10
    366c:	csel	w8, w9, w11, eq  // eq = none
    3670:	cmp	w28, w8
    3674:	b.ne	36c0 <cap_to_text@@Base+0x224>  // b.any
    3678:	mov	w0, w26
    367c:	bl	1cf0 <cap_to_name@plt>
    3680:	mov	x27, x0
    3684:	bl	1a50 <strlen@plt>
    3688:	add	x8, sp, #0x54
    368c:	sub	x8, x22, x8
    3690:	add	x8, x8, x0
    3694:	cmp	x8, #0x540
    3698:	b.hi	39b0 <cap_to_text@@Base+0x514>  // b.pmore
    369c:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    36a0:	mov	x0, x22
    36a4:	add	x1, x1, #0xcc
    36a8:	mov	x2, x27
    36ac:	bl	1ac0 <sprintf@plt>
    36b0:	add	x22, x22, w0, sxtw
    36b4:	mov	x0, x27
    36b8:	bl	1c80 <cap_free@plt>
    36bc:	mov	w13, #0xc                   	// #12
    36c0:	add	w26, w26, #0x1
    36c4:	cmp	w21, w26
    36c8:	b.ne	363c <cap_to_text@@Base+0x1a0>  // b.any
    36cc:	ldr	x8, [sp, #16]
    36d0:	ldr	w27, [sp, #36]
    36d4:	sub	x22, x22, #0x1
    36d8:	add	x26, x8, x24
    36dc:	ands	w8, w26, w27
    36e0:	b.eq	3730 <cap_to_text@@Base+0x294>  // b.none
    36e4:	adrp	x9, 3000 <cap_from_text@@Base+0x26c>
    36e8:	adrp	x10, 4000 <cap_set_nsowner@@Base+0x1b0>
    36ec:	tst	w8, #0x1
    36f0:	add	x9, x9, #0xfb6
    36f4:	add	x10, x10, #0xcf
    36f8:	csel	x2, x10, x9, eq  // eq = none
    36fc:	adrp	x9, 4000 <cap_set_nsowner@@Base+0x1b0>
    3700:	tst	w8, #0x4
    3704:	add	x9, x9, #0xca
    3708:	csel	x3, x10, x9, eq  // eq = none
    370c:	tst	w8, #0x2
    3710:	adrp	x8, 4000 <cap_set_nsowner@@Base+0x1b0>
    3714:	add	x8, x8, #0x5f
    3718:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    371c:	csel	x4, x10, x8, eq  // eq = none
    3720:	mov	x0, x22
    3724:	add	x1, x1, #0xd0
    3728:	bl	1ac0 <sprintf@plt>
    372c:	add	x22, x22, w0, sxtw
    3730:	ldr	w28, [sp, #12]
    3734:	add	w8, w25, w24
    3738:	neg	w8, w8
    373c:	ands	w8, w23, w8
    3740:	b.eq	3790 <cap_to_text@@Base+0x2f4>  // b.none
    3744:	adrp	x9, 3000 <cap_from_text@@Base+0x26c>
    3748:	adrp	x10, 4000 <cap_set_nsowner@@Base+0x1b0>
    374c:	tst	w8, #0x1
    3750:	add	x9, x9, #0xfb6
    3754:	add	x10, x10, #0xcf
    3758:	csel	x2, x10, x9, eq  // eq = none
    375c:	adrp	x9, 4000 <cap_set_nsowner@@Base+0x1b0>
    3760:	tst	w8, #0x4
    3764:	add	x9, x9, #0xca
    3768:	csel	x3, x10, x9, eq  // eq = none
    376c:	tst	w8, #0x2
    3770:	adrp	x8, 4000 <cap_set_nsowner@@Base+0x1b0>
    3774:	add	x8, x8, #0x5f
    3778:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    377c:	csel	x4, x10, x8, eq  // eq = none
    3780:	mov	x0, x22
    3784:	add	x1, x1, #0xd8
    3788:	bl	1ac0 <sprintf@plt>
    378c:	add	x22, x22, w0, sxtw
    3790:	ldr	x14, [sp, #24]
    3794:	add	x8, sp, #0x54
    3798:	sub	x8, x22, x8
    379c:	mov	w13, #0xc                   	// #12
    37a0:	cmp	x8, #0x541
    37a4:	mov	w25, w26
    37a8:	mov	w12, #0x20                  	// #32
    37ac:	b.lt	35e8 <cap_to_text@@Base+0x14c>  // b.tstop
    37b0:	b	39b8 <cap_to_text@@Base+0x51c>
    37b4:	bl	1cc0 <__errno_location@plt>
    37b8:	mov	x8, x0
    37bc:	mov	w9, #0x16                  	// #22
    37c0:	mov	x0, xzr
    37c4:	str	w9, [x8]
    37c8:	b	3988 <cap_to_text@@Base+0x4ec>
    37cc:	movi	v0.2d, #0x0
    37d0:	cmp	w21, #0x3f
    37d4:	stp	q0, q0, [sp, #48]
    37d8:	b.hi	3838 <cap_to_text@@Base+0x39c>  // b.pmore
    37dc:	mov	w8, #0xc                   	// #12
    37e0:	mov	w9, #0x1                   	// #1
    37e4:	add	x10, sp, #0x30
    37e8:	mov	w11, w21
    37ec:	lsr	w12, w11, #5
    37f0:	umaddl	x12, w12, w8, x20
    37f4:	ldp	w13, w15, [x12, #8]
    37f8:	lsl	w14, w9, w11
    37fc:	ldr	w12, [x12, #16]
    3800:	tst	w13, w14
    3804:	cset	w13, ne  // ne = any
    3808:	tst	w15, w14
    380c:	orr	w15, w13, #0x2
    3810:	csel	w13, w13, w15, eq  // eq = none
    3814:	tst	w12, w14
    3818:	orr	w12, w13, #0x4
    381c:	csel	w12, w13, w12, eq  // eq = none
    3820:	ldr	w13, [x10, w12, uxtw #2]
    3824:	cmp	w11, #0x3f
    3828:	add	w11, w11, #0x1
    382c:	add	w13, w13, #0x1
    3830:	str	w13, [x10, w12, uxtw #2]
    3834:	b.cc	37ec <cap_to_text@@Base+0x350>  // b.lo, b.ul, b.last
    3838:	add	x8, sp, #0x30
    383c:	mov	w23, #0x8                   	// #8
    3840:	mov	w10, #0x20                  	// #32
    3844:	mov	w27, #0xc                   	// #12
    3848:	mov	w28, #0x1                   	// #1
    384c:	add	x24, sp, #0x54
    3850:	sub	x19, x8, #0x4
    3854:	sxtw	x8, w23
    3858:	cmp	x8, #0x2
    385c:	b.lt	396c <cap_to_text@@Base+0x4d0>  // b.tstop
    3860:	ldr	w9, [x19, x8, lsl #2]
    3864:	sub	x23, x8, #0x1
    3868:	mov	x8, x23
    386c:	cbz	w9, 3858 <cap_to_text@@Base+0x3bc>
    3870:	cmp	w21, #0x3f
    3874:	strb	w10, [x22], #1
    3878:	b.hi	3908 <cap_to_text@@Base+0x46c>  // b.pmore
    387c:	mov	w25, w21
    3880:	lsr	w8, w25, #5
    3884:	umaddl	x8, w8, w27, x20
    3888:	ldp	w9, w11, [x8, #8]
    388c:	lsl	w10, w28, w25
    3890:	ldr	w8, [x8, #16]
    3894:	tst	w9, w10
    3898:	cset	w9, ne  // ne = any
    389c:	tst	w11, w10
    38a0:	orr	w11, w9, #0x2
    38a4:	csel	w9, w9, w11, eq  // eq = none
    38a8:	orr	w11, w9, #0x4
    38ac:	tst	w8, w10
    38b0:	csel	w8, w9, w11, eq  // eq = none
    38b4:	cmp	w8, w23
    38b8:	b.ne	38fc <cap_to_text@@Base+0x460>  // b.any
    38bc:	mov	w0, w25
    38c0:	bl	1cf0 <cap_to_name@plt>
    38c4:	mov	x26, x0
    38c8:	bl	1a50 <strlen@plt>
    38cc:	sub	x8, x22, x24
    38d0:	add	x8, x8, x0
    38d4:	cmp	x8, #0x540
    38d8:	b.hi	39a8 <cap_to_text@@Base+0x50c>  // b.pmore
    38dc:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    38e0:	mov	x0, x22
    38e4:	add	x1, x1, #0xcc
    38e8:	mov	x2, x26
    38ec:	bl	1ac0 <sprintf@plt>
    38f0:	add	x22, x22, w0, sxtw
    38f4:	mov	x0, x26
    38f8:	bl	1c80 <cap_free@plt>
    38fc:	cmp	w25, #0x3f
    3900:	add	w25, w25, #0x1
    3904:	b.cc	3880 <cap_to_text@@Base+0x3e4>  // b.lo, b.ul, b.last
    3908:	adrp	x8, 3000 <cap_from_text@@Base+0x26c>
    390c:	adrp	x9, 4000 <cap_set_nsowner@@Base+0x1b0>
    3910:	tst	w23, #0x1
    3914:	add	x8, x8, #0xfb6
    3918:	add	x9, x9, #0xcf
    391c:	csel	x2, x9, x8, eq  // eq = none
    3920:	adrp	x8, 4000 <cap_set_nsowner@@Base+0x1b0>
    3924:	tst	w23, #0x4
    3928:	add	x8, x8, #0xca
    392c:	csel	x3, x9, x8, eq  // eq = none
    3930:	adrp	x8, 4000 <cap_set_nsowner@@Base+0x1b0>
    3934:	sub	x22, x22, #0x1
    3938:	tst	w23, #0x2
    393c:	add	x8, x8, #0x5f
    3940:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    3944:	csel	x4, x9, x8, eq  // eq = none
    3948:	mov	x0, x22
    394c:	add	x1, x1, #0xd0
    3950:	bl	1ac0 <sprintf@plt>
    3954:	add	x22, x22, w0, sxtw
    3958:	sub	x8, x22, x24
    395c:	cmp	x8, #0x540
    3960:	mov	w10, #0x20                  	// #32
    3964:	b.le	3854 <cap_to_text@@Base+0x3b8>
    3968:	b	39b8 <cap_to_text@@Base+0x51c>
    396c:	ldr	x9, [sp, #40]
    3970:	cbz	x9, 3980 <cap_to_text@@Base+0x4e4>
    3974:	add	x8, sp, #0x54
    3978:	sub	x8, x22, x8
    397c:	str	x8, [x9]
    3980:	add	x0, sp, #0x54
    3984:	bl	1a90 <_libcap_strdup@plt>
    3988:	add	sp, sp, #0x600
    398c:	ldp	x20, x19, [sp, #80]
    3990:	ldp	x22, x21, [sp, #64]
    3994:	ldp	x24, x23, [sp, #48]
    3998:	ldp	x26, x25, [sp, #32]
    399c:	ldp	x28, x27, [sp, #16]
    39a0:	ldp	x29, x30, [sp], #96
    39a4:	ret
    39a8:	mov	x0, x26
    39ac:	b	39b4 <cap_to_text@@Base+0x518>
    39b0:	mov	x0, x27
    39b4:	bl	1c80 <cap_free@plt>
    39b8:	bl	1cc0 <__errno_location@plt>
    39bc:	mov	x8, x0
    39c0:	mov	w9, #0x22                  	// #34
    39c4:	b	37c0 <cap_to_text@@Base+0x324>

00000000000039c8 <cap_mode_name@@Base>:
    39c8:	cmp	w0, #0x3
    39cc:	b.hi	39e0 <cap_mode_name@@Base+0x18>  // b.pmore
    39d0:	adrp	x8, 14000 <cap_set_nsowner@@Base+0x101b0>
    39d4:	add	x8, x8, #0xdb8
    39d8:	ldr	x0, [x8, w0, sxtw #3]
    39dc:	ret
    39e0:	adrp	x0, 4000 <cap_set_nsowner@@Base+0x1b0>
    39e4:	add	x0, x0, #0x104
    39e8:	ret

00000000000039ec <cap_get_fd@@Base>:
    39ec:	sub	sp, sp, #0x40
    39f0:	stp	x29, x30, [sp, #32]
    39f4:	stp	x20, x19, [sp, #48]
    39f8:	add	x29, sp, #0x20
    39fc:	mov	w20, w0
    3a00:	bl	1bb0 <cap_init@plt>
    3a04:	cbz	x0, 3a4c <cap_get_fd@@Base+0x60>
    3a08:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    3a0c:	mov	x19, x0
    3a10:	add	x1, x1, #0x10c
    3a14:	add	x2, sp, #0x8
    3a18:	mov	w3, #0x18                  	// #24
    3a1c:	mov	w0, w20
    3a20:	bl	1c30 <fgetxattr@plt>
    3a24:	mov	x2, x0
    3a28:	cmp	w2, #0x3
    3a2c:	b.gt	3a40 <cap_get_fd@@Base+0x54>
    3a30:	mov	x0, x19
    3a34:	bl	1c80 <cap_free@plt>
    3a38:	mov	x0, xzr
    3a3c:	b	3a4c <cap_get_fd@@Base+0x60>
    3a40:	add	x0, sp, #0x8
    3a44:	mov	x1, x19
    3a48:	bl	3a5c <cap_get_fd@@Base+0x70>
    3a4c:	ldp	x20, x19, [sp, #48]
    3a50:	ldp	x29, x30, [sp, #32]
    3a54:	add	sp, sp, #0x40
    3a58:	ret
    3a5c:	stp	x29, x30, [sp, #-16]!
    3a60:	mov	x29, sp
    3a64:	ldr	w9, [x0]
    3a68:	mov	w11, #0x3000000             	// #50331648
    3a6c:	mov	x8, x0
    3a70:	mov	x0, x1
    3a74:	and	w10, w9, #0xff000000
    3a78:	cmp	w10, w11
    3a7c:	b.eq	3b00 <cap_get_fd@@Base+0x114>  // b.none
    3a80:	mov	w11, #0x2000000             	// #33554432
    3a84:	cmp	w10, w11
    3a88:	b.eq	3b10 <cap_get_fd@@Base+0x124>  // b.none
    3a8c:	mov	w11, #0x1000000             	// #16777216
    3a90:	cmp	w10, w11
    3a94:	b.ne	3b1c <cap_get_fd@@Base+0x130>  // b.any
    3a98:	sub	w11, w2, #0xc
    3a9c:	mov	w10, #0x1                   	// #1
    3aa0:	cbnz	w11, 3b1c <cap_get_fd@@Base+0x130>
    3aa4:	add	x12, x10, x10, lsl #1
    3aa8:	mov	x11, xzr
    3aac:	lsl	x12, x12, #2
    3ab0:	add	x8, x8, #0x8
    3ab4:	ldr	w13, [x8]
    3ab8:	add	x14, x0, x11
    3abc:	str	w13, [x14, #16]
    3ac0:	ldur	w15, [x8, #-4]
    3ac4:	str	w15, [x14, #12]
    3ac8:	tbz	w9, #0, 3ad4 <cap_get_fd@@Base+0xe8>
    3acc:	orr	w13, w15, w13
    3ad0:	str	w13, [x14, #8]
    3ad4:	add	x11, x11, #0xc
    3ad8:	cmp	x12, x11
    3adc:	add	x8, x8, #0x8
    3ae0:	b.ne	3ab4 <cap_get_fd@@Base+0xc8>  // b.any
    3ae4:	cmp	w11, #0xc
    3ae8:	b.ne	3b24 <cap_get_fd@@Base+0x138>  // b.any
    3aec:	mov	w8, #0xc                   	// #12
    3af0:	madd	x8, x10, x8, x0
    3af4:	str	xzr, [x8, #8]
    3af8:	str	wzr, [x8, #16]
    3afc:	b	3b24 <cap_get_fd@@Base+0x138>
    3b00:	ldr	w10, [x8, #20]
    3b04:	sub	w11, w2, #0x18
    3b08:	str	w10, [x0, #32]
    3b0c:	b	3b14 <cap_get_fd@@Base+0x128>
    3b10:	sub	w11, w2, #0x14
    3b14:	mov	w10, #0x2                   	// #2
    3b18:	cbz	w11, 3aa4 <cap_get_fd@@Base+0xb8>
    3b1c:	bl	1c80 <cap_free@plt>
    3b20:	mov	x0, xzr
    3b24:	ldp	x29, x30, [sp], #16
    3b28:	ret

0000000000003b2c <cap_get_file@@Base>:
    3b2c:	sub	sp, sp, #0x40
    3b30:	stp	x29, x30, [sp, #32]
    3b34:	stp	x20, x19, [sp, #48]
    3b38:	add	x29, sp, #0x20
    3b3c:	mov	x20, x0
    3b40:	bl	1bb0 <cap_init@plt>
    3b44:	cbz	x0, 3b8c <cap_get_file@@Base+0x60>
    3b48:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    3b4c:	mov	x19, x0
    3b50:	add	x1, x1, #0x10c
    3b54:	add	x2, sp, #0x8
    3b58:	mov	w3, #0x18                  	// #24
    3b5c:	mov	x0, x20
    3b60:	bl	1bc0 <getxattr@plt>
    3b64:	mov	x2, x0
    3b68:	cmp	w2, #0x3
    3b6c:	b.gt	3b80 <cap_get_file@@Base+0x54>
    3b70:	mov	x0, x19
    3b74:	bl	1c80 <cap_free@plt>
    3b78:	mov	x0, xzr
    3b7c:	b	3b8c <cap_get_file@@Base+0x60>
    3b80:	add	x0, sp, #0x8
    3b84:	mov	x1, x19
    3b88:	bl	3a5c <cap_get_fd@@Base+0x70>
    3b8c:	ldp	x20, x19, [sp, #48]
    3b90:	ldp	x29, x30, [sp, #32]
    3b94:	add	sp, sp, #0x40
    3b98:	ret

0000000000003b9c <cap_get_nsowner@@Base>:
    3b9c:	ldr	w0, [x0, #32]
    3ba0:	ret

0000000000003ba4 <cap_set_fd@@Base>:
    3ba4:	sub	sp, sp, #0xc0
    3ba8:	stp	x29, x30, [sp, #160]
    3bac:	stp	x20, x19, [sp, #176]
    3bb0:	add	x29, sp, #0xa0
    3bb4:	mov	x20, x1
    3bb8:	mov	x1, sp
    3bbc:	mov	w19, w0
    3bc0:	bl	3e60 <cap_set_nsowner@@Base+0x10>
    3bc4:	cbnz	w0, 3c1c <cap_set_fd@@Base+0x78>
    3bc8:	ldr	w8, [sp, #16]
    3bcc:	and	w8, w8, #0xf000
    3bd0:	cmp	w8, #0x8, lsl #12
    3bd4:	b.ne	3c10 <cap_set_fd@@Base+0x6c>  // b.any
    3bd8:	cbz	x20, 3c30 <cap_set_fd@@Base+0x8c>
    3bdc:	sub	x0, x29, #0x18
    3be0:	sub	x2, x29, #0x1c
    3be4:	mov	x1, x20
    3be8:	bl	3c44 <cap_set_fd@@Base+0xa0>
    3bec:	cbnz	w0, 3c1c <cap_set_fd@@Base+0x78>
    3bf0:	ldursw	x3, [x29, #-28]
    3bf4:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    3bf8:	add	x1, x1, #0x10c
    3bfc:	sub	x2, x29, #0x18
    3c00:	mov	w0, w19
    3c04:	mov	w4, wzr
    3c08:	bl	1c60 <fsetxattr@plt>
    3c0c:	b	3c20 <cap_set_fd@@Base+0x7c>
    3c10:	bl	1cc0 <__errno_location@plt>
    3c14:	mov	w8, #0x16                  	// #22
    3c18:	str	w8, [x0]
    3c1c:	mov	w0, #0xffffffff            	// #-1
    3c20:	ldp	x20, x19, [sp, #176]
    3c24:	ldp	x29, x30, [sp, #160]
    3c28:	add	sp, sp, #0xc0
    3c2c:	ret
    3c30:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    3c34:	add	x1, x1, #0x10c
    3c38:	mov	w0, w19
    3c3c:	bl	1b90 <fremovexattr@plt>
    3c40:	b	3c20 <cap_set_fd@@Base+0x7c>
    3c44:	stp	x29, x30, [sp, #-16]!
    3c48:	mov	x29, sp
    3c4c:	cbz	x1, 3d40 <cap_set_fd@@Base+0x19c>
    3c50:	ldur	w8, [x1, #-4]
    3c54:	mov	w9, #0x90d0                	// #37072
    3c58:	movk	w9, #0xca, lsl #16
    3c5c:	cmp	w8, w9
    3c60:	b.ne	3d40 <cap_set_fd@@Base+0x19c>  // b.any
    3c64:	ldr	w8, [x1]
    3c68:	mov	w9, #0x330                 	// #816
    3c6c:	movk	w9, #0x1998, lsl #16
    3c70:	cmp	w8, w9
    3c74:	b.eq	3ca8 <cap_set_fd@@Base+0x104>  // b.none
    3c78:	mov	w9, #0x522                 	// #1314
    3c7c:	movk	w9, #0x2008, lsl #16
    3c80:	cmp	w8, w9
    3c84:	b.eq	3c98 <cap_set_fd@@Base+0xf4>  // b.none
    3c88:	mov	w9, #0x1026                	// #4134
    3c8c:	movk	w9, #0x2007, lsl #16
    3c90:	cmp	w8, w9
    3c94:	b.ne	3d40 <cap_set_fd@@Base+0x19c>  // b.any
    3c98:	mov	w8, #0x2                   	// #2
    3c9c:	mov	w9, #0x2000000             	// #33554432
    3ca0:	mov	w10, #0x14                  	// #20
    3ca4:	b	3cb4 <cap_set_fd@@Base+0x110>
    3ca8:	mov	w8, #0x1                   	// #1
    3cac:	mov	w9, #0x1000000             	// #16777216
    3cb0:	mov	w10, #0xc                   	// #12
    3cb4:	str	w10, [x2]
    3cb8:	ldr	w10, [x1, #32]
    3cbc:	cbz	w10, 3cec <cap_set_fd@@Base+0x148>
    3cc0:	ldr	w8, [x1]
    3cc4:	mov	w9, #0x521                 	// #1313
    3cc8:	movk	w9, #0x2008, lsl #16
    3ccc:	cmp	w8, w9
    3cd0:	b.ls	3d40 <cap_set_fd@@Base+0x19c>  // b.plast
    3cd4:	mov	w8, #0x18                  	// #24
    3cd8:	str	w8, [x2]
    3cdc:	ldr	w9, [x1, #32]
    3ce0:	mov	w8, #0x2                   	// #2
    3ce4:	str	w9, [x0, #20]
    3ce8:	mov	w9, #0x3000000             	// #50331648
    3cec:	mov	w10, wzr
    3cf0:	add	x11, x1, #0x8
    3cf4:	mov	x12, x8
    3cf8:	ldr	w13, [x11], #12
    3cfc:	subs	x12, x12, #0x1
    3d00:	orr	w10, w13, w10
    3d04:	b.ne	3cf8 <cap_set_fd@@Base+0x154>  // b.any
    3d08:	cmp	w8, #0x1
    3d0c:	b.ne	3d5c <cap_set_fd@@Base+0x1b8>  // b.any
    3d10:	mov	w11, #0xc                   	// #12
    3d14:	madd	x11, x8, x11, x1
    3d18:	ldr	w11, [x11, #8]
    3d1c:	cbnz	w11, 3d40 <cap_set_fd@@Base+0x19c>
    3d20:	mov	w11, #0xc                   	// #12
    3d24:	madd	x11, x8, x11, x1
    3d28:	ldr	w11, [x11, #16]
    3d2c:	cbnz	w11, 3d40 <cap_set_fd@@Base+0x19c>
    3d30:	mov	w11, #0xc                   	// #12
    3d34:	madd	x11, x8, x11, x1
    3d38:	ldr	w11, [x11, #12]
    3d3c:	cbz	w11, 3d5c <cap_set_fd@@Base+0x1b8>
    3d40:	bl	1cc0 <__errno_location@plt>
    3d44:	mov	w8, #0x16                  	// #22
    3d48:	str	w8, [x0]
    3d4c:	mov	w8, #0xffffffff            	// #-1
    3d50:	mov	w0, w8
    3d54:	ldp	x29, x30, [sp], #16
    3d58:	ret
    3d5c:	add	x11, x1, #0x10
    3d60:	add	x12, x0, #0x8
    3d64:	ldur	w13, [x11, #-4]
    3d68:	stur	w13, [x12, #-4]
    3d6c:	ldr	w13, [x11]
    3d70:	str	w13, [x12]
    3d74:	cbz	w10, 3d8c <cap_set_fd@@Base+0x1e8>
    3d78:	ldp	w13, w14, [x11, #-4]
    3d7c:	ldur	w15, [x11, #-8]
    3d80:	orr	w13, w14, w13
    3d84:	bics	wzr, w13, w15
    3d88:	b.ne	3d40 <cap_set_fd@@Base+0x19c>  // b.any
    3d8c:	add	x11, x11, #0xc
    3d90:	subs	x8, x8, #0x1
    3d94:	add	x12, x12, #0x8
    3d98:	b.ne	3d64 <cap_set_fd@@Base+0x1c0>  // b.any
    3d9c:	mov	w8, wzr
    3da0:	cbz	w10, 3da8 <cap_set_fd@@Base+0x204>
    3da4:	orr	w9, w9, #0x1
    3da8:	str	w9, [x0]
    3dac:	b	3d50 <cap_set_fd@@Base+0x1ac>

0000000000003db0 <cap_set_file@@Base>:
    3db0:	sub	sp, sp, #0xc0
    3db4:	stp	x29, x30, [sp, #160]
    3db8:	stp	x20, x19, [sp, #176]
    3dbc:	add	x29, sp, #0xa0
    3dc0:	mov	x20, x1
    3dc4:	mov	x1, sp
    3dc8:	mov	x19, x0
    3dcc:	bl	3e70 <cap_set_nsowner@@Base+0x20>
    3dd0:	cbnz	w0, 3e28 <cap_set_file@@Base+0x78>
    3dd4:	ldr	w8, [sp, #16]
    3dd8:	and	w8, w8, #0xf000
    3ddc:	cmp	w8, #0x8, lsl #12
    3de0:	b.ne	3e1c <cap_set_file@@Base+0x6c>  // b.any
    3de4:	cbz	x20, 3e3c <cap_set_file@@Base+0x8c>
    3de8:	sub	x0, x29, #0x18
    3dec:	sub	x2, x29, #0x1c
    3df0:	mov	x1, x20
    3df4:	bl	3c44 <cap_set_fd@@Base+0xa0>
    3df8:	cbnz	w0, 3e28 <cap_set_file@@Base+0x78>
    3dfc:	ldursw	x3, [x29, #-28]
    3e00:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    3e04:	add	x1, x1, #0x10c
    3e08:	sub	x2, x29, #0x18
    3e0c:	mov	x0, x19
    3e10:	mov	w4, wzr
    3e14:	bl	1b20 <setxattr@plt>
    3e18:	b	3e2c <cap_set_file@@Base+0x7c>
    3e1c:	bl	1cc0 <__errno_location@plt>
    3e20:	mov	w8, #0x16                  	// #22
    3e24:	str	w8, [x0]
    3e28:	mov	w0, #0xffffffff            	// #-1
    3e2c:	ldp	x20, x19, [sp, #176]
    3e30:	ldp	x29, x30, [sp, #160]
    3e34:	add	sp, sp, #0xc0
    3e38:	ret
    3e3c:	adrp	x1, 4000 <cap_set_nsowner@@Base+0x1b0>
    3e40:	add	x1, x1, #0x10c
    3e44:	mov	x0, x19
    3e48:	bl	1a20 <removexattr@plt>
    3e4c:	b	3e2c <cap_set_file@@Base+0x7c>

0000000000003e50 <cap_set_nsowner@@Base>:
    3e50:	str	w1, [x0, #32]
    3e54:	mov	w0, wzr
    3e58:	ret
    3e5c:	nop
    3e60:	mov	x2, x1
    3e64:	mov	w1, w0
    3e68:	mov	w0, #0x0                   	// #0
    3e6c:	b	1c20 <__fxstat64@plt>
    3e70:	mov	x2, x1
    3e74:	mov	x1, x0
    3e78:	mov	w0, #0x0                   	// #0
    3e7c:	b	1bf0 <__lxstat64@plt>

Disassembly of section .fini:

0000000000003e80 <.fini>:
    3e80:	stp	x29, x30, [sp, #-16]!
    3e84:	mov	x29, sp
    3e88:	ldp	x29, x30, [sp], #16
    3e8c:	ret
