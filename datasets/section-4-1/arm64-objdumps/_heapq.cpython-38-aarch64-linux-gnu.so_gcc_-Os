
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_heapq.cpython-38-aarch64-linux-gnu.so_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000aa0 <.init>:
 aa0:	stp	x29, x30, [sp, #-16]!
 aa4:	mov	x29, sp
 aa8:	bl	b90 <PyModule_AddObject@plt+0x10>
 aac:	ldp	x29, x30, [sp], #16
 ab0:	ret

Disassembly of section .plt:

0000000000000ac0 <__cxa_finalize@plt-0x20>:
 ac0:	stp	x16, x30, [sp, #-16]!
 ac4:	adrp	x16, 13000 <PyInit__heapq@@Base+0x11b24>
 ac8:	ldr	x17, [x16, #4088]
 acc:	add	x16, x16, #0xff8
 ad0:	br	x17
 ad4:	nop
 ad8:	nop
 adc:	nop

0000000000000ae0 <__cxa_finalize@plt>:
 ae0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 ae4:	ldr	x17, [x16]
 ae8:	add	x16, x16, #0x0
 aec:	br	x17

0000000000000af0 <PyList_SetSlice@plt>:
 af0:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 af4:	ldr	x17, [x16, #8]
 af8:	add	x16, x16, #0x8
 afc:	br	x17

0000000000000b00 <_Py_Dealloc@plt>:
 b00:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b04:	ldr	x17, [x16, #16]
 b08:	add	x16, x16, #0x10
 b0c:	br	x17

0000000000000b10 <PyErr_SetString@plt>:
 b10:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b14:	ldr	x17, [x16, #24]
 b18:	add	x16, x16, #0x18
 b1c:	br	x17

0000000000000b20 <PyObject_RichCompareBool@plt>:
 b20:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b24:	ldr	x17, [x16, #32]
 b28:	add	x16, x16, #0x20
 b2c:	br	x17

0000000000000b30 <PyList_Append@plt>:
 b30:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b34:	ldr	x17, [x16, #40]
 b38:	add	x16, x16, #0x28
 b3c:	br	x17

0000000000000b40 <__gmon_start__@plt>:
 b40:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b44:	ldr	x17, [x16, #48]
 b48:	add	x16, x16, #0x30
 b4c:	br	x17

0000000000000b50 <_PyArg_CheckPositional@plt>:
 b50:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b54:	ldr	x17, [x16, #56]
 b58:	add	x16, x16, #0x38
 b5c:	br	x17

0000000000000b60 <PyModule_Create2@plt>:
 b60:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b64:	ldr	x17, [x16, #64]
 b68:	add	x16, x16, #0x40
 b6c:	br	x17

0000000000000b70 <PyUnicode_DecodeUTF8@plt>:
 b70:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b74:	ldr	x17, [x16, #72]
 b78:	add	x16, x16, #0x48
 b7c:	br	x17

0000000000000b80 <PyModule_AddObject@plt>:
 b80:	adrp	x16, 14000 <__cxa_finalize@GLIBC_2.17>
 b84:	ldr	x17, [x16, #80]
 b88:	add	x16, x16, #0x50
 b8c:	br	x17

Disassembly of section .text:

0000000000000b90 <PyInit__heapq@@Base-0x94c>:
     b90:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
     b94:	ldr	x0, [x0, #4040]
     b98:	cbz	x0, ba0 <PyModule_AddObject@plt+0x20>
     b9c:	b	b40 <__gmon_start__@plt>
     ba0:	ret
     ba4:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12b24>
     ba8:	add	x0, x0, #0x1e8
     bac:	adrp	x1, 14000 <PyInit__heapq@@Base+0x12b24>
     bb0:	add	x1, x1, #0x1e8
     bb4:	cmp	x1, x0
     bb8:	b.eq	bd0 <PyModule_AddObject@plt+0x50>  // b.none
     bbc:	adrp	x1, 13000 <PyInit__heapq@@Base+0x11b24>
     bc0:	ldr	x1, [x1, #4008]
     bc4:	cbz	x1, bd0 <PyModule_AddObject@plt+0x50>
     bc8:	mov	x16, x1
     bcc:	br	x16
     bd0:	ret
     bd4:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12b24>
     bd8:	add	x0, x0, #0x1e8
     bdc:	adrp	x1, 14000 <PyInit__heapq@@Base+0x12b24>
     be0:	add	x1, x1, #0x1e8
     be4:	sub	x1, x1, x0
     be8:	mov	x2, #0x2                   	// #2
     bec:	asr	x1, x1, #3
     bf0:	sdiv	x1, x1, x2
     bf4:	cbz	x1, c0c <PyModule_AddObject@plt+0x8c>
     bf8:	adrp	x2, 13000 <PyInit__heapq@@Base+0x11b24>
     bfc:	ldr	x2, [x2, #4064]
     c00:	cbz	x2, c0c <PyModule_AddObject@plt+0x8c>
     c04:	mov	x16, x2
     c08:	br	x16
     c0c:	ret
     c10:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12b24>
     c14:	ldrb	w1, [x0, #488]
     c18:	cbnz	w1, c5c <PyModule_AddObject@plt+0xdc>
     c1c:	stp	x29, x30, [sp, #-32]!
     c20:	mov	x29, sp
     c24:	str	x19, [sp, #16]
     c28:	mov	x19, x0
     c2c:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
     c30:	ldr	x0, [x0, #4016]
     c34:	cbz	x0, c44 <PyModule_AddObject@plt+0xc4>
     c38:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12b24>
     c3c:	ldr	x0, [x0, #88]
     c40:	bl	ae0 <__cxa_finalize@plt>
     c44:	bl	ba4 <PyModule_AddObject@plt+0x24>
     c48:	mov	w0, #0x1                   	// #1
     c4c:	strb	w0, [x19, #488]
     c50:	ldr	x19, [sp, #16]
     c54:	ldp	x29, x30, [sp], #32
     c58:	ret
     c5c:	ret
     c60:	b	bd4 <PyModule_AddObject@plt+0x54>
     c64:	stp	x29, x30, [sp, #-64]!
     c68:	mov	x29, sp
     c6c:	stp	x21, x22, [sp, #32]
     c70:	ldr	x21, [x0, #16]
     c74:	stp	x19, x20, [sp, #16]
     c78:	stp	x23, x24, [sp, #48]
     c7c:	cmp	x21, x1
     c80:	b.gt	ca0 <PyModule_AddObject@plt+0x120>
     c84:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
     c88:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     c8c:	add	x1, x1, #0x548
     c90:	ldr	x0, [x0, #4056]
     c94:	ldr	x0, [x0]
     c98:	bl	b10 <PyErr_SetString@plt>
     c9c:	b	d34 <PyModule_AddObject@plt+0x1b4>
     ca0:	ldr	x3, [x0, #24]
     ca4:	mov	x23, x0
     ca8:	mov	x24, x1
     cac:	asr	x22, x21, #1
     cb0:	mov	x19, x1
     cb4:	cmp	x19, x22
     cb8:	b.lt	d0c <PyModule_AddObject@plt+0x18c>  // b.tstop
     cbc:	ldr	x22, [x23, #16]
     cc0:	cmp	x19, x22
     cc4:	b.ge	c84 <PyModule_AddObject@plt+0x104>  // b.tcont
     cc8:	ldr	x3, [x23, #24]
     ccc:	ldr	x1, [x3, x19, lsl #3]
     cd0:	cmp	x24, x19
     cd4:	b.ge	d04 <PyModule_AddObject@plt+0x184>  // b.tcont
     cd8:	sub	x20, x19, #0x1
     cdc:	mov	w2, #0x0                   	// #0
     ce0:	asr	x20, x20, #1
     ce4:	lsl	x21, x20, #3
     ce8:	ldr	x0, [x3, x21]
     cec:	bl	b20 <PyObject_RichCompareBool@plt>
     cf0:	tbnz	w0, #31, d34 <PyModule_AddObject@plt+0x1b4>
     cf4:	ldr	x1, [x23, #16]
     cf8:	cmp	x22, x1
     cfc:	b.ne	d60 <PyModule_AddObject@plt+0x1e0>  // b.any
     d00:	cbnz	w0, d94 <PyModule_AddObject@plt+0x214>
     d04:	mov	w0, #0x0                   	// #0
     d08:	b	d38 <PyModule_AddObject@plt+0x1b8>
     d0c:	lsl	x4, x19, #1
     d10:	add	x20, x4, #0x1
     d14:	add	x4, x4, #0x2
     d18:	cmp	x4, x21
     d1c:	b.ge	d74 <PyModule_AddObject@plt+0x1f4>  // b.tcont
     d20:	ldr	x1, [x3, x20, lsl #3]
     d24:	mov	w2, #0x0                   	// #0
     d28:	ldr	x0, [x3, x4, lsl #3]
     d2c:	bl	b20 <PyObject_RichCompareBool@plt>
     d30:	tbz	w0, #31, d4c <PyModule_AddObject@plt+0x1cc>
     d34:	mov	w0, #0xffffffff            	// #-1
     d38:	ldp	x19, x20, [sp, #16]
     d3c:	ldp	x21, x22, [sp, #32]
     d40:	ldp	x23, x24, [sp, #48]
     d44:	ldp	x29, x30, [sp], #64
     d48:	ret
     d4c:	eor	w2, w0, #0x1
     d50:	ldp	x0, x3, [x23, #16]
     d54:	add	x20, x20, x2
     d58:	cmp	x0, x21
     d5c:	b.eq	d74 <PyModule_AddObject@plt+0x1f4>  // b.none
     d60:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
     d64:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     d68:	add	x1, x1, #0x55b
     d6c:	ldr	x0, [x0, #4024]
     d70:	b	c94 <PyModule_AddObject@plt+0x114>
     d74:	lsl	x19, x19, #3
     d78:	lsl	x0, x20, #3
     d7c:	ldr	x2, [x3, x19]
     d80:	ldr	x1, [x3, x0]
     d84:	str	x2, [x3, x0]
     d88:	str	x1, [x3, x19]
     d8c:	mov	x19, x20
     d90:	b	cb4 <PyModule_AddObject@plt+0x134>
     d94:	ldr	x3, [x23, #24]
     d98:	lsl	x19, x19, #3
     d9c:	ldr	x1, [x3, x19]
     da0:	ldr	x0, [x3, x21]
     da4:	str	x1, [x3, x21]
     da8:	str	x0, [x3, x19]
     dac:	mov	x19, x20
     db0:	b	cd0 <PyModule_AddObject@plt+0x150>
     db4:	stp	x29, x30, [sp, #-64]!
     db8:	mov	x29, sp
     dbc:	stp	x23, x24, [sp, #48]
     dc0:	ldr	x24, [x0, #16]
     dc4:	stp	x19, x20, [sp, #16]
     dc8:	stp	x21, x22, [sp, #32]
     dcc:	cmp	x24, x2
     dd0:	b.gt	df4 <PyModule_AddObject@plt+0x274>
     dd4:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
     dd8:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     ddc:	add	x1, x1, #0x548
     de0:	ldr	x0, [x0, #4056]
     de4:	ldr	x0, [x0]
     de8:	bl	b10 <PyErr_SetString@plt>
     dec:	mov	w0, #0xffffffff            	// #-1
     df0:	b	e54 <PyModule_AddObject@plt+0x2d4>
     df4:	ldr	x3, [x0, #24]
     df8:	mov	x20, x0
     dfc:	mov	x22, x1
     e00:	mov	x19, x2
     e04:	ldr	x0, [x3, x2, lsl #3]
     e08:	cmp	x19, x22
     e0c:	b.le	e50 <PyModule_AddObject@plt+0x2d0>
     e10:	sub	x21, x19, #0x1
     e14:	mov	w2, #0x0                   	// #0
     e18:	asr	x21, x21, #1
     e1c:	lsl	x23, x21, #3
     e20:	ldr	x1, [x3, x23]
     e24:	bl	b20 <PyObject_RichCompareBool@plt>
     e28:	tbnz	w0, #31, dec <PyModule_AddObject@plt+0x26c>
     e2c:	ldr	x1, [x20, #16]
     e30:	cmp	x1, x24
     e34:	b.eq	e4c <PyModule_AddObject@plt+0x2cc>  // b.none
     e38:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
     e3c:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     e40:	add	x1, x1, #0x55b
     e44:	ldr	x0, [x0, #4024]
     e48:	b	de4 <PyModule_AddObject@plt+0x264>
     e4c:	cbnz	w0, e68 <PyModule_AddObject@plt+0x2e8>
     e50:	mov	w0, #0x0                   	// #0
     e54:	ldp	x19, x20, [sp, #16]
     e58:	ldp	x21, x22, [sp, #32]
     e5c:	ldp	x23, x24, [sp, #48]
     e60:	ldp	x29, x30, [sp], #64
     e64:	ret
     e68:	ldr	x3, [x20, #24]
     e6c:	lsl	x19, x19, #3
     e70:	ldr	x0, [x3, x19]
     e74:	ldr	x1, [x3, x23]
     e78:	str	x0, [x3, x23]
     e7c:	str	x1, [x3, x19]
     e80:	mov	x19, x21
     e84:	b	e08 <PyModule_AddObject@plt+0x288>
     e88:	stp	x29, x30, [sp, #-64]!
     e8c:	mov	x29, sp
     e90:	stp	x23, x24, [sp, #48]
     e94:	ldr	x23, [x0, #16]
     e98:	stp	x19, x20, [sp, #16]
     e9c:	stp	x21, x22, [sp, #32]
     ea0:	cmp	x23, x1
     ea4:	b.gt	ed8 <PyModule_AddObject@plt+0x358>
     ea8:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
     eac:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     eb0:	add	x1, x1, #0x548
     eb4:	ldr	x0, [x0, #4056]
     eb8:	ldr	x0, [x0]
     ebc:	bl	b10 <PyErr_SetString@plt>
     ec0:	mov	w0, #0xffffffff            	// #-1
     ec4:	ldp	x19, x20, [sp, #16]
     ec8:	ldp	x21, x22, [sp, #32]
     ecc:	ldp	x23, x24, [sp, #48]
     ed0:	ldp	x29, x30, [sp], #64
     ed4:	ret
     ed8:	mov	x20, x0
     edc:	mov	x21, x1
     ee0:	ldr	x0, [x0, #24]
     ee4:	asr	x24, x23, #1
     ee8:	mov	x19, x1
     eec:	cmp	x19, x24
     ef0:	b.lt	f14 <PyModule_AddObject@plt+0x394>  // b.tstop
     ef4:	mov	x2, x19
     ef8:	mov	x1, x21
     efc:	mov	x0, x20
     f00:	ldp	x19, x20, [sp, #16]
     f04:	ldp	x21, x22, [sp, #32]
     f08:	ldp	x23, x24, [sp, #48]
     f0c:	ldp	x29, x30, [sp], #64
     f10:	b	db4 <PyModule_AddObject@plt+0x234>
     f14:	lsl	x1, x19, #1
     f18:	add	x22, x1, #0x1
     f1c:	add	x1, x1, #0x2
     f20:	cmp	x1, x23
     f24:	b.ge	f64 <PyModule_AddObject@plt+0x3e4>  // b.tcont
     f28:	ldr	x1, [x0, x1, lsl #3]
     f2c:	mov	w2, #0x0                   	// #0
     f30:	ldr	x0, [x0, x22, lsl #3]
     f34:	bl	b20 <PyObject_RichCompareBool@plt>
     f38:	tbnz	w0, #31, ec0 <PyModule_AddObject@plt+0x340>
     f3c:	eor	w0, w0, #0x1
     f40:	add	x22, x22, x0
     f44:	ldp	x1, x0, [x20, #16]
     f48:	cmp	x1, x23
     f4c:	b.eq	f64 <PyModule_AddObject@plt+0x3e4>  // b.none
     f50:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
     f54:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     f58:	add	x1, x1, #0x55b
     f5c:	ldr	x0, [x0, #4024]
     f60:	b	eb8 <PyModule_AddObject@plt+0x338>
     f64:	lsl	x19, x19, #3
     f68:	lsl	x1, x22, #3
     f6c:	ldr	x3, [x0, x19]
     f70:	ldr	x2, [x0, x1]
     f74:	str	x3, [x0, x1]
     f78:	str	x2, [x0, x19]
     f7c:	mov	x19, x22
     f80:	b	eec <PyModule_AddObject@plt+0x36c>
     f84:	stp	x29, x30, [sp, #-80]!
     f88:	mov	x29, sp
     f8c:	stp	x21, x22, [sp, #32]
     f90:	mov	x21, x0
     f94:	ldr	x0, [x0, #8]
     f98:	stp	x19, x20, [sp, #16]
     f9c:	stp	x23, x24, [sp, #48]
     fa0:	ldr	x0, [x0, #168]
     fa4:	str	x25, [sp, #64]
     fa8:	tbnz	w0, #25, fe0 <PyModule_AddObject@plt+0x460>
     fac:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
     fb0:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
     fb4:	add	x1, x1, #0x57e
     fb8:	ldr	x0, [x0, #4032]
     fbc:	ldr	x0, [x0]
     fc0:	bl	b10 <PyErr_SetString@plt>
     fc4:	mov	x0, #0x0                   	// #0
     fc8:	ldp	x19, x20, [sp, #16]
     fcc:	ldp	x21, x22, [sp, #32]
     fd0:	ldp	x23, x24, [sp, #48]
     fd4:	ldr	x25, [sp, #64]
     fd8:	ldp	x29, x30, [sp], #80
     fdc:	ret
     fe0:	ldr	x0, [x21, #16]
     fe4:	mov	x22, x1
     fe8:	cmp	x0, #0x9c4
     fec:	asr	x19, x0, #1
     ff0:	b.le	10a8 <PyModule_AddObject@plt+0x528>
     ff4:	add	x2, x19, #0x1
     ff8:	mov	w20, #0x0                   	// #0
     ffc:	asr	x2, x2, #1
    1000:	add	w20, w20, #0x1
    1004:	cmp	x2, #0x1
    1008:	b.ne	ffc <PyModule_AddObject@plt+0x47c>  // b.any
    100c:	lsl	x20, x2, x20
    1010:	asr	x23, x0, #2
    1014:	sub	x24, x20, #0x2
    1018:	cmp	x23, x24
    101c:	b.le	1048 <PyModule_AddObject@plt+0x4c8>
    1020:	sub	x19, x19, #0x1
    1024:	sub	x20, x20, #0x1
    1028:	cmp	x20, x19
    102c:	b.le	1070 <PyModule_AddObject@plt+0x4f0>
    1030:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
    1034:	ldr	x0, [x0, #4048]
    1038:	ldr	x1, [x0]
    103c:	add	x1, x1, #0x1
    1040:	str	x1, [x0]
    1044:	b	fc8 <PyModule_AddObject@plt+0x448>
    1048:	mov	x25, x24
    104c:	mov	x1, x25
    1050:	mov	x0, x21
    1054:	blr	x22
    1058:	cbnz	w0, fc4 <PyModule_AddObject@plt+0x444>
    105c:	tbz	w25, #0, 1068 <PyModule_AddObject@plt+0x4e8>
    1060:	asr	x25, x25, #1
    1064:	b	104c <PyModule_AddObject@plt+0x4cc>
    1068:	sub	x24, x24, #0x1
    106c:	b	1018 <PyModule_AddObject@plt+0x498>
    1070:	mov	x23, x19
    1074:	mov	x1, x23
    1078:	mov	x0, x21
    107c:	blr	x22
    1080:	cbnz	w0, fc4 <PyModule_AddObject@plt+0x444>
    1084:	tbz	w23, #0, 1090 <PyModule_AddObject@plt+0x510>
    1088:	asr	x23, x23, #1
    108c:	b	1074 <PyModule_AddObject@plt+0x4f4>
    1090:	sub	x19, x19, #0x1
    1094:	b	1028 <PyModule_AddObject@plt+0x4a8>
    1098:	mov	x1, x19
    109c:	mov	x0, x21
    10a0:	blr	x22
    10a4:	cbnz	w0, fc4 <PyModule_AddObject@plt+0x444>
    10a8:	sub	x19, x19, #0x1
    10ac:	tbz	x19, #63, 1098 <PyModule_AddObject@plt+0x518>
    10b0:	b	1030 <PyModule_AddObject@plt+0x4b0>
    10b4:	mov	x0, x1
    10b8:	adrp	x1, 0 <__cxa_finalize@plt-0xae0>
    10bc:	add	x1, x1, #0xc64
    10c0:	b	f84 <PyModule_AddObject@plt+0x404>
    10c4:	mov	x0, x1
    10c8:	adrp	x1, 0 <__cxa_finalize@plt-0xae0>
    10cc:	add	x1, x1, #0xe88
    10d0:	b	f84 <PyModule_AddObject@plt+0x404>
    10d4:	ldr	x1, [x0]
    10d8:	sub	x1, x1, #0x1
    10dc:	str	x1, [x0]
    10e0:	cbnz	x1, 10e8 <PyModule_AddObject@plt+0x568>
    10e4:	b	b00 <_Py_Dealloc@plt>
    10e8:	ret
    10ec:	stp	x29, x30, [sp, #-48]!
    10f0:	mov	x29, sp
    10f4:	stp	x21, x22, [sp, #32]
    10f8:	mov	x22, x1
    10fc:	ldr	x1, [x0, #8]
    1100:	stp	x19, x20, [sp, #16]
    1104:	ldr	x1, [x1, #168]
    1108:	tbnz	w1, #25, 112c <PyModule_AddObject@plt+0x5ac>
    110c:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
    1110:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1114:	add	x1, x1, #0x57e
    1118:	ldr	x0, [x0, #4032]
    111c:	ldr	x0, [x0]
    1120:	bl	b10 <PyErr_SetString@plt>
    1124:	mov	x19, #0x0                   	// #0
    1128:	b	11ac <PyModule_AddObject@plt+0x62c>
    112c:	ldr	x21, [x0, #16]
    1130:	mov	x20, x0
    1134:	cbnz	x21, 114c <PyModule_AddObject@plt+0x5cc>
    1138:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
    113c:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1140:	add	x1, x1, #0x548
    1144:	ldr	x0, [x0, #4056]
    1148:	b	111c <PyModule_AddObject@plt+0x59c>
    114c:	ldr	x1, [x0, #24]
    1150:	mov	x2, x21
    1154:	mov	x3, #0x0                   	// #0
    1158:	add	x1, x1, x21, lsl #3
    115c:	ldur	x19, [x1, #-8]
    1160:	ldr	x1, [x19]
    1164:	add	x1, x1, #0x1
    1168:	str	x1, [x19]
    116c:	sub	x1, x21, #0x1
    1170:	bl	af0 <PyList_SetSlice@plt>
    1174:	cbz	w0, 1184 <PyModule_AddObject@plt+0x604>
    1178:	mov	x0, x19
    117c:	bl	10d4 <PyModule_AddObject@plt+0x554>
    1180:	b	1124 <PyModule_AddObject@plt+0x5a4>
    1184:	cmp	x21, #0x1
    1188:	b.eq	11ac <PyModule_AddObject@plt+0x62c>  // b.none
    118c:	ldr	x0, [x20, #24]
    1190:	mov	x1, #0x0                   	// #0
    1194:	ldr	x21, [x0]
    1198:	str	x19, [x0]
    119c:	mov	x0, x20
    11a0:	mov	x19, x21
    11a4:	blr	x22
    11a8:	cbnz	w0, 1178 <PyModule_AddObject@plt+0x5f8>
    11ac:	mov	x0, x19
    11b0:	ldp	x19, x20, [sp, #16]
    11b4:	ldp	x21, x22, [sp, #32]
    11b8:	ldp	x29, x30, [sp], #48
    11bc:	ret
    11c0:	mov	x0, x1
    11c4:	adrp	x1, 0 <__cxa_finalize@plt-0xae0>
    11c8:	add	x1, x1, #0xc64
    11cc:	b	10ec <PyModule_AddObject@plt+0x56c>
    11d0:	mov	x0, x1
    11d4:	adrp	x1, 0 <__cxa_finalize@plt-0xae0>
    11d8:	add	x1, x1, #0xe88
    11dc:	b	10ec <PyModule_AddObject@plt+0x56c>
    11e0:	stp	x29, x30, [sp, #-32]!
    11e4:	mov	x29, sp
    11e8:	ldr	x4, [x0, #8]
    11ec:	ldr	x4, [x4, #168]
    11f0:	str	x19, [sp, #16]
    11f4:	tbnz	w4, #25, 1224 <PyModule_AddObject@plt+0x6a4>
    11f8:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
    11fc:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1200:	add	x1, x1, #0x57e
    1204:	ldr	x0, [x0, #4032]
    1208:	ldr	x0, [x0]
    120c:	bl	b10 <PyErr_SetString@plt>
    1210:	mov	x19, #0x0                   	// #0
    1214:	mov	x0, x19
    1218:	ldr	x19, [sp, #16]
    121c:	ldp	x29, x30, [sp], #32
    1220:	ret
    1224:	ldr	x4, [x0, #16]
    1228:	cbnz	x4, 1240 <PyModule_AddObject@plt+0x6c0>
    122c:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
    1230:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1234:	add	x1, x1, #0x548
    1238:	ldr	x0, [x0, #4056]
    123c:	b	1208 <PyModule_AddObject@plt+0x688>
    1240:	ldr	x4, [x0, #24]
    1244:	ldr	x3, [x1]
    1248:	ldr	x19, [x4]
    124c:	add	x3, x3, #0x1
    1250:	str	x3, [x1]
    1254:	str	x1, [x4]
    1258:	mov	x1, #0x0                   	// #0
    125c:	blr	x2
    1260:	cbz	w0, 1214 <PyModule_AddObject@plt+0x694>
    1264:	mov	x0, x19
    1268:	bl	10d4 <PyModule_AddObject@plt+0x554>
    126c:	b	1210 <PyModule_AddObject@plt+0x690>
    1270:	stp	x29, x30, [sp, #-32]!
    1274:	cmp	x2, #0x2
    1278:	mov	x29, sp
    127c:	str	x19, [sp, #16]
    1280:	mov	x19, x1
    1284:	b.ne	12a0 <PyModule_AddObject@plt+0x720>  // b.any
    1288:	ldp	x0, x1, [x19]
    128c:	adrp	x2, 0 <__cxa_finalize@plt-0xae0>
    1290:	ldr	x19, [sp, #16]
    1294:	add	x2, x2, #0xc64
    1298:	ldp	x29, x30, [sp], #32
    129c:	b	11e0 <PyModule_AddObject@plt+0x660>
    12a0:	mov	x1, x2
    12a4:	mov	x3, #0x2                   	// #2
    12a8:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    12ac:	mov	x2, x3
    12b0:	add	x0, x0, #0x59b
    12b4:	bl	b50 <_PyArg_CheckPositional@plt>
    12b8:	cbnz	w0, 1288 <PyModule_AddObject@plt+0x708>
    12bc:	mov	x0, #0x0                   	// #0
    12c0:	ldr	x19, [sp, #16]
    12c4:	ldp	x29, x30, [sp], #32
    12c8:	ret
    12cc:	stp	x29, x30, [sp, #-32]!
    12d0:	cmp	x2, #0x2
    12d4:	mov	x29, sp
    12d8:	str	x19, [sp, #16]
    12dc:	mov	x19, x1
    12e0:	b.ne	12fc <PyModule_AddObject@plt+0x77c>  // b.any
    12e4:	ldp	x0, x1, [x19]
    12e8:	adrp	x2, 0 <__cxa_finalize@plt-0xae0>
    12ec:	ldr	x19, [sp, #16]
    12f0:	add	x2, x2, #0xe88
    12f4:	ldp	x29, x30, [sp], #32
    12f8:	b	11e0 <PyModule_AddObject@plt+0x660>
    12fc:	mov	x1, x2
    1300:	mov	x3, #0x2                   	// #2
    1304:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1308:	mov	x2, x3
    130c:	add	x0, x0, #0x5ac
    1310:	bl	b50 <_PyArg_CheckPositional@plt>
    1314:	cbnz	w0, 12e4 <PyModule_AddObject@plt+0x764>
    1318:	mov	x0, #0x0                   	// #0
    131c:	ldr	x19, [sp, #16]
    1320:	ldp	x29, x30, [sp], #32
    1324:	ret
    1328:	stp	x29, x30, [sp, #-48]!
    132c:	cmp	x2, #0x2
    1330:	mov	x29, sp
    1334:	stp	x19, x20, [sp, #16]
    1338:	mov	x19, x1
    133c:	str	x21, [sp, #32]
    1340:	b.ne	1370 <PyModule_AddObject@plt+0x7f0>  // b.any
    1344:	ldp	x20, x19, [x19]
    1348:	ldr	x0, [x20, #8]
    134c:	ldr	x0, [x0, #168]
    1350:	tbnz	w0, #25, 1394 <PyModule_AddObject@plt+0x814>
    1354:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
    1358:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    135c:	add	x1, x1, #0x57e
    1360:	ldr	x0, [x0, #4032]
    1364:	ldr	x0, [x0]
    1368:	bl	b10 <PyErr_SetString@plt>
    136c:	b	138c <PyModule_AddObject@plt+0x80c>
    1370:	mov	x1, x2
    1374:	mov	x3, #0x2                   	// #2
    1378:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    137c:	mov	x2, x3
    1380:	add	x0, x0, #0x5b8
    1384:	bl	b50 <_PyArg_CheckPositional@plt>
    1388:	cbnz	w0, 1344 <PyModule_AddObject@plt+0x7c4>
    138c:	mov	x19, #0x0                   	// #0
    1390:	b	13a8 <PyModule_AddObject@plt+0x828>
    1394:	ldr	x0, [x20, #16]
    1398:	cbnz	x0, 13bc <PyModule_AddObject@plt+0x83c>
    139c:	ldr	x0, [x19]
    13a0:	add	x0, x0, #0x1
    13a4:	str	x0, [x19]
    13a8:	mov	x0, x19
    13ac:	ldp	x19, x20, [sp, #16]
    13b0:	ldr	x21, [sp, #32]
    13b4:	ldp	x29, x30, [sp], #48
    13b8:	ret
    13bc:	ldr	x0, [x20, #24]
    13c0:	mov	x1, x19
    13c4:	mov	w2, #0x0                   	// #0
    13c8:	ldr	x0, [x0]
    13cc:	bl	b20 <PyObject_RichCompareBool@plt>
    13d0:	cmp	w0, #0x0
    13d4:	b.lt	138c <PyModule_AddObject@plt+0x80c>  // b.tstop
    13d8:	b.eq	139c <PyModule_AddObject@plt+0x81c>  // b.none
    13dc:	ldr	x0, [x20, #16]
    13e0:	cbnz	x0, 13f8 <PyModule_AddObject@plt+0x878>
    13e4:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
    13e8:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    13ec:	add	x1, x1, #0x548
    13f0:	ldr	x0, [x0, #4056]
    13f4:	b	1364 <PyModule_AddObject@plt+0x7e4>
    13f8:	ldr	x1, [x20, #24]
    13fc:	ldr	x0, [x19]
    1400:	ldr	x21, [x1]
    1404:	add	x0, x0, #0x1
    1408:	str	x0, [x19]
    140c:	mov	x0, x20
    1410:	str	x19, [x1]
    1414:	mov	x1, #0x0                   	// #0
    1418:	mov	x19, x21
    141c:	bl	e88 <PyModule_AddObject@plt+0x308>
    1420:	cbz	w0, 13a8 <PyModule_AddObject@plt+0x828>
    1424:	mov	x0, x21
    1428:	bl	10d4 <PyModule_AddObject@plt+0x554>
    142c:	b	138c <PyModule_AddObject@plt+0x80c>
    1430:	stp	x29, x30, [sp, #-32]!
    1434:	cmp	x2, #0x2
    1438:	mov	x29, sp
    143c:	stp	x19, x20, [sp, #16]
    1440:	mov	x20, x1
    1444:	b.ne	1474 <PyModule_AddObject@plt+0x8f4>  // b.any
    1448:	ldp	x19, x1, [x20]
    144c:	ldr	x0, [x19, #8]
    1450:	ldr	x0, [x0, #168]
    1454:	tbnz	w0, #25, 14a0 <PyModule_AddObject@plt+0x920>
    1458:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
    145c:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    1460:	add	x1, x1, #0x57e
    1464:	ldr	x0, [x0, #4032]
    1468:	ldr	x0, [x0]
    146c:	bl	b10 <PyErr_SetString@plt>
    1470:	b	1490 <PyModule_AddObject@plt+0x910>
    1474:	mov	x1, x2
    1478:	mov	x3, #0x2                   	// #2
    147c:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    1480:	mov	x2, x3
    1484:	add	x0, x0, #0x5c4
    1488:	bl	b50 <_PyArg_CheckPositional@plt>
    148c:	cbnz	w0, 1448 <PyModule_AddObject@plt+0x8c8>
    1490:	mov	x0, #0x0                   	// #0
    1494:	ldp	x19, x20, [sp, #16]
    1498:	ldp	x29, x30, [sp], #32
    149c:	ret
    14a0:	mov	x0, x19
    14a4:	bl	b30 <PyList_Append@plt>
    14a8:	cbnz	w0, 1490 <PyModule_AddObject@plt+0x910>
    14ac:	ldr	x2, [x19, #16]
    14b0:	mov	x0, x19
    14b4:	mov	x1, #0x0                   	// #0
    14b8:	sub	x2, x2, #0x1
    14bc:	bl	db4 <PyModule_AddObject@plt+0x234>
    14c0:	cbnz	w0, 1490 <PyModule_AddObject@plt+0x910>
    14c4:	adrp	x0, 13000 <PyInit__heapq@@Base+0x11b24>
    14c8:	ldr	x0, [x0, #4048]
    14cc:	ldr	x1, [x0]
    14d0:	add	x1, x1, #0x1
    14d4:	str	x1, [x0]
    14d8:	b	1494 <PyModule_AddObject@plt+0x914>

00000000000014dc <PyInit__heapq@@Base>:
    14dc:	stp	x29, x30, [sp, #-32]!
    14e0:	mov	w1, #0x3f5                 	// #1013
    14e4:	adrp	x0, 14000 <PyInit__heapq@@Base+0x12b24>
    14e8:	mov	x29, sp
    14ec:	add	x0, x0, #0x60
    14f0:	str	x19, [sp, #16]
    14f4:	bl	b60 <PyModule_Create2@plt>
    14f8:	mov	x19, x0
    14fc:	cbz	x0, 1528 <PyInit__heapq@@Base+0x4c>
    1500:	mov	x2, #0x0                   	// #0
    1504:	mov	x1, #0x126f                	// #4719
    1508:	adrp	x0, 1000 <PyModule_AddObject@plt+0x480>
    150c:	add	x0, x0, #0x608
    1510:	bl	b70 <PyUnicode_DecodeUTF8@plt>
    1514:	mov	x2, x0
    1518:	adrp	x1, 1000 <PyModule_AddObject@plt+0x480>
    151c:	mov	x0, x19
    1520:	add	x1, x1, #0x5cd
    1524:	bl	b80 <PyModule_AddObject@plt>
    1528:	mov	x0, x19
    152c:	ldr	x19, [sp, #16]
    1530:	ldp	x29, x30, [sp], #32
    1534:	ret

Disassembly of section .fini:

0000000000001538 <.fini>:
    1538:	stp	x29, x30, [sp, #-16]!
    153c:	mov	x29, sp
    1540:	ldp	x29, x30, [sp], #16
    1544:	ret
