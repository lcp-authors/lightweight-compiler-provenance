
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//setpgid_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000710 <_init>:
 710:	stp	x29, x30, [sp, #-16]!
 714:	mov	x29, sp
 718:	bl	7d0 <call_weak_fn>
 71c:	ldp	x29, x30, [sp], #16
 720:	ret

Disassembly of section .plt:

0000000000000730 <.plt>:
 730:	stp	x16, x30, [sp, #-16]!
 734:	adrp	x16, 10000 <__FRAME_END__+0xf24c>
 738:	ldr	x17, [x16, #4088]
 73c:	add	x16, x16, #0xff8
 740:	br	x17
 744:	nop
 748:	nop
 74c:	nop

0000000000000750 <builtin_error@plt>:
 750:	adrp	x16, 11000 <builtin_error>
 754:	ldr	x17, [x16]
 758:	add	x16, x16, #0x0
 75c:	br	x17

0000000000000760 <__cxa_finalize@plt>:
 760:	adrp	x16, 11000 <builtin_error>
 764:	ldr	x17, [x16, #8]
 768:	add	x16, x16, #0x8
 76c:	br	x17

0000000000000770 <builtin_usage@plt>:
 770:	adrp	x16, 11000 <builtin_error>
 774:	ldr	x17, [x16, #16]
 778:	add	x16, x16, #0x10
 77c:	br	x17

0000000000000780 <strerror@plt>:
 780:	adrp	x16, 11000 <builtin_error>
 784:	ldr	x17, [x16, #24]
 788:	add	x16, x16, #0x18
 78c:	br	x17

0000000000000790 <__gmon_start__@plt>:
 790:	adrp	x16, 11000 <builtin_error>
 794:	ldr	x17, [x16, #32]
 798:	add	x16, x16, #0x20
 79c:	br	x17

00000000000007a0 <setpgid@plt>:
 7a0:	adrp	x16, 11000 <builtin_error>
 7a4:	ldr	x17, [x16, #40]
 7a8:	add	x16, x16, #0x28
 7ac:	br	x17

00000000000007b0 <legal_number@plt>:
 7b0:	adrp	x16, 11000 <builtin_error>
 7b4:	ldr	x17, [x16, #48]
 7b8:	add	x16, x16, #0x30
 7bc:	br	x17

00000000000007c0 <__errno_location@plt>:
 7c0:	adrp	x16, 11000 <builtin_error>
 7c4:	ldr	x17, [x16, #56]
 7c8:	add	x16, x16, #0x38
 7cc:	br	x17

Disassembly of section .text:

00000000000007d0 <call_weak_fn>:
 7d0:	adrp	x0, 10000 <__FRAME_END__+0xf24c>
 7d4:	ldr	x0, [x0, #4056]
 7d8:	cbz	x0, 7e0 <call_weak_fn+0x10>
 7dc:	b	790 <__gmon_start__@plt>
 7e0:	ret

00000000000007e4 <deregister_tm_clones>:
 7e4:	stp	x29, x30, [sp, #-32]!
 7e8:	mov	x29, sp
 7ec:	adrp	x0, 11000 <builtin_error>
 7f0:	add	x0, x0, #0xb0
 7f4:	str	x0, [sp, #24]
 7f8:	ldr	x0, [sp, #24]
 7fc:	str	x0, [sp, #24]
 800:	ldr	x1, [sp, #24]
 804:	adrp	x0, 11000 <builtin_error>
 808:	add	x0, x0, #0xb0
 80c:	cmp	x1, x0
 810:	b.eq	848 <deregister_tm_clones+0x64>  // b.none
 814:	adrp	x0, 10000 <__FRAME_END__+0xf24c>
 818:	ldr	x0, [x0, #4040]
 81c:	str	x0, [sp, #16]
 820:	ldr	x0, [sp, #16]
 824:	str	x0, [sp, #16]
 828:	ldr	x0, [sp, #16]
 82c:	cmp	x0, #0x0
 830:	b.eq	84c <deregister_tm_clones+0x68>  // b.none
 834:	ldr	x1, [sp, #16]
 838:	adrp	x0, 11000 <builtin_error>
 83c:	add	x0, x0, #0xb0
 840:	blr	x1
 844:	b	84c <deregister_tm_clones+0x68>
 848:	nop
 84c:	ldp	x29, x30, [sp], #32
 850:	ret

0000000000000854 <register_tm_clones>:
 854:	stp	x29, x30, [sp, #-48]!
 858:	mov	x29, sp
 85c:	adrp	x0, 11000 <builtin_error>
 860:	add	x0, x0, #0xb0
 864:	str	x0, [sp, #40]
 868:	ldr	x0, [sp, #40]
 86c:	str	x0, [sp, #40]
 870:	ldr	x1, [sp, #40]
 874:	adrp	x0, 11000 <builtin_error>
 878:	add	x0, x0, #0xb0
 87c:	sub	x0, x1, x0
 880:	asr	x0, x0, #3
 884:	lsr	x1, x0, #63
 888:	add	x0, x1, x0
 88c:	asr	x0, x0, #1
 890:	str	x0, [sp, #32]
 894:	ldr	x0, [sp, #32]
 898:	cmp	x0, #0x0
 89c:	b.eq	8d8 <register_tm_clones+0x84>  // b.none
 8a0:	adrp	x0, 10000 <__FRAME_END__+0xf24c>
 8a4:	ldr	x0, [x0, #4064]
 8a8:	str	x0, [sp, #24]
 8ac:	ldr	x0, [sp, #24]
 8b0:	str	x0, [sp, #24]
 8b4:	ldr	x0, [sp, #24]
 8b8:	cmp	x0, #0x0
 8bc:	b.eq	8dc <register_tm_clones+0x88>  // b.none
 8c0:	ldr	x2, [sp, #24]
 8c4:	ldr	x1, [sp, #32]
 8c8:	adrp	x0, 11000 <builtin_error>
 8cc:	add	x0, x0, #0xb0
 8d0:	blr	x2
 8d4:	b	8dc <register_tm_clones+0x88>
 8d8:	nop
 8dc:	ldp	x29, x30, [sp], #48
 8e0:	ret

00000000000008e4 <__do_global_dtors_aux>:
 8e4:	stp	x29, x30, [sp, #-16]!
 8e8:	mov	x29, sp
 8ec:	adrp	x0, 11000 <builtin_error>
 8f0:	add	x0, x0, #0xb0
 8f4:	ldrb	w0, [x0]
 8f8:	and	x0, x0, #0xff
 8fc:	cmp	x0, #0x0
 900:	b.ne	93c <__do_global_dtors_aux+0x58>  // b.any
 904:	adrp	x0, 10000 <__FRAME_END__+0xf24c>
 908:	ldr	x0, [x0, #4048]
 90c:	cmp	x0, #0x0
 910:	b.eq	924 <__do_global_dtors_aux+0x40>  // b.none
 914:	adrp	x0, 11000 <builtin_error>
 918:	add	x0, x0, #0x40
 91c:	ldr	x0, [x0]
 920:	bl	760 <__cxa_finalize@plt>
 924:	bl	7e4 <deregister_tm_clones>
 928:	adrp	x0, 11000 <builtin_error>
 92c:	add	x0, x0, #0xb0
 930:	mov	w1, #0x1                   	// #1
 934:	strb	w1, [x0]
 938:	b	940 <__do_global_dtors_aux+0x5c>
 93c:	nop
 940:	ldp	x29, x30, [sp], #16
 944:	ret

0000000000000948 <frame_dummy>:
 948:	stp	x29, x30, [sp, #-16]!
 94c:	mov	x29, sp
 950:	bl	854 <register_tm_clones>
 954:	nop
 958:	ldp	x29, x30, [sp], #16
 95c:	ret

0000000000000960 <setpgid_builtin>:
 960:	stp	x29, x30, [sp, #-96]!
 964:	mov	x29, sp
 968:	str	x19, [sp, #16]
 96c:	str	x0, [sp, #40]
 970:	ldr	x19, [sp, #40]
 974:	str	wzr, [sp, #92]
 978:	ldr	w0, [sp, #92]
 97c:	str	w0, [sp, #88]
 980:	cmp	x19, #0x0
 984:	b.eq	994 <setpgid_builtin+0x34>  // b.none
 988:	ldr	x0, [x19]
 98c:	cmp	x0, #0x0
 990:	b.ne	9a0 <setpgid_builtin+0x40>  // b.any
 994:	bl	770 <builtin_usage@plt>
 998:	mov	w0, #0x102                 	// #258
 99c:	b	b08 <setpgid_builtin+0x1a8>
 9a0:	ldr	x0, [x19, #8]
 9a4:	cmp	x0, #0x0
 9a8:	b.eq	9b8 <setpgid_builtin+0x58>  // b.none
 9ac:	ldr	x0, [x19, #8]
 9b0:	ldr	x0, [x0]
 9b4:	b	9bc <setpgid_builtin+0x5c>
 9b8:	mov	x0, #0x0                   	// #0
 9bc:	str	x0, [sp, #80]
 9c0:	ldr	x0, [x19]
 9c4:	ldr	x0, [x0, #8]
 9c8:	cmp	x0, #0x0
 9cc:	b.eq	9e0 <setpgid_builtin+0x80>  // b.none
 9d0:	ldr	x0, [x19]
 9d4:	ldr	x0, [x0, #8]
 9d8:	ldr	x0, [x0]
 9dc:	b	9e4 <setpgid_builtin+0x84>
 9e0:	mov	x0, #0x0                   	// #0
 9e4:	str	x0, [sp, #72]
 9e8:	ldr	x0, [sp, #80]
 9ec:	cmp	x0, #0x0
 9f0:	b.eq	a00 <setpgid_builtin+0xa0>  // b.none
 9f4:	ldr	x0, [sp, #72]
 9f8:	cmp	x0, #0x0
 9fc:	b.ne	a0c <setpgid_builtin+0xac>  // b.any
 a00:	bl	770 <builtin_usage@plt>
 a04:	mov	w0, #0x102                 	// #258
 a08:	b	b08 <setpgid_builtin+0x1a8>
 a0c:	add	x0, sp, #0x40
 a10:	mov	x1, x0
 a14:	ldr	x0, [sp, #80]
 a18:	bl	7b0 <legal_number@plt>
 a1c:	cmp	w0, #0x0
 a20:	b.ne	a3c <setpgid_builtin+0xdc>  // b.any
 a24:	ldr	x1, [sp, #80]
 a28:	adrp	x0, 0 <_init-0x710>
 a2c:	add	x0, x0, #0xb28
 a30:	bl	750 <builtin_error@plt>
 a34:	mov	w0, #0x1                   	// #1
 a38:	b	b08 <setpgid_builtin+0x1a8>
 a3c:	ldr	x0, [sp, #64]
 a40:	cmp	x0, #0x0
 a44:	b.ge	a60 <setpgid_builtin+0x100>  // b.tcont
 a48:	ldr	x1, [sp, #80]
 a4c:	adrp	x0, 0 <_init-0x710>
 a50:	add	x0, x0, #0xb50
 a54:	bl	750 <builtin_error@plt>
 a58:	mov	w0, #0x1                   	// #1
 a5c:	b	b08 <setpgid_builtin+0x1a8>
 a60:	ldr	x0, [sp, #64]
 a64:	str	w0, [sp, #88]
 a68:	add	x0, sp, #0x38
 a6c:	mov	x1, x0
 a70:	ldr	x0, [sp, #72]
 a74:	bl	7b0 <legal_number@plt>
 a78:	cmp	w0, #0x0
 a7c:	b.ne	a98 <setpgid_builtin+0x138>  // b.any
 a80:	ldr	x1, [sp, #72]
 a84:	adrp	x0, 0 <_init-0x710>
 a88:	add	x0, x0, #0xb78
 a8c:	bl	750 <builtin_error@plt>
 a90:	mov	w0, #0x1                   	// #1
 a94:	b	b08 <setpgid_builtin+0x1a8>
 a98:	ldr	x0, [sp, #56]
 a9c:	cmp	x0, #0x0
 aa0:	b.ge	abc <setpgid_builtin+0x15c>  // b.tcont
 aa4:	ldr	x1, [sp, #72]
 aa8:	adrp	x0, 0 <_init-0x710>
 aac:	add	x0, x0, #0xba0
 ab0:	bl	750 <builtin_error@plt>
 ab4:	mov	w0, #0x1                   	// #1
 ab8:	b	b08 <setpgid_builtin+0x1a8>
 abc:	ldr	x0, [sp, #56]
 ac0:	str	w0, [sp, #92]
 ac4:	bl	7c0 <__errno_location@plt>
 ac8:	str	wzr, [x0]
 acc:	ldr	w1, [sp, #92]
 ad0:	ldr	w0, [sp, #88]
 ad4:	bl	7a0 <setpgid@plt>
 ad8:	cmp	w0, #0x0
 adc:	b.ge	b04 <setpgid_builtin+0x1a4>  // b.tcont
 ae0:	bl	7c0 <__errno_location@plt>
 ae4:	ldr	w0, [x0]
 ae8:	bl	780 <strerror@plt>
 aec:	mov	x1, x0
 af0:	adrp	x0, 0 <_init-0x710>
 af4:	add	x0, x0, #0xbc8
 af8:	bl	750 <builtin_error@plt>
 afc:	mov	w0, #0x1                   	// #1
 b00:	b	b08 <setpgid_builtin+0x1a8>
 b04:	mov	w0, #0x0                   	// #0
 b08:	ldr	x19, [sp, #16]
 b0c:	ldp	x29, x30, [sp], #96
 b10:	ret

Disassembly of section .fini:

0000000000000b14 <_fini>:
 b14:	stp	x29, x30, [sp, #-16]!
 b18:	mov	x29, sp
 b1c:	ldp	x29, x30, [sp], #16
 b20:	ret
