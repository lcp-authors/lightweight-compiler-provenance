
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libman-2.9.0.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000a268 <.init>:
    a268:	stp	x29, x30, [sp, #-16]!
    a26c:	mov	x29, sp
    a270:	bl	b010 <xgetcwd@plt+0x10>
    a274:	ldp	x29, x30, [sp], #16
    a278:	ret

Disassembly of section .plt:

000000000000a280 <base_len@plt-0x20>:
    a280:	stp	x16, x30, [sp, #-16]!
    a284:	adrp	x16, 46000 <vasnprintf@@Base+0x1b1e0>
    a288:	ldr	x17, [x16, #4088]
    a28c:	add	x16, x16, #0xff8
    a290:	br	x17
    a294:	nop
    a298:	nop
    a29c:	nop

000000000000a2a0 <base_len@plt>:
    a2a0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a2a4:	ldr	x17, [x16]
    a2a8:	add	x16, x16, #0x0
    a2ac:	br	x17

000000000000a2b0 <mbrtowc@plt>:
    a2b0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a2b4:	ldr	x17, [x16, #8]
    a2b8:	add	x16, x16, #0x8
    a2bc:	br	x17

000000000000a2c0 <memcpy@plt>:
    a2c0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a2c4:	ldr	x17, [x16, #16]
    a2c8:	add	x16, x16, #0x10
    a2cc:	br	x17

000000000000a2d0 <memmove@plt>:
    a2d0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a2d4:	ldr	x17, [x16, #24]
    a2d8:	add	x16, x16, #0x18
    a2dc:	br	x17

000000000000a2e0 <pthread_rwlockattr_init@plt>:
    a2e0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a2e4:	ldr	x17, [x16, #32]
    a2e8:	add	x16, x16, #0x20
    a2ec:	br	x17

000000000000a2f0 <_exit@plt>:
    a2f0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a2f4:	ldr	x17, [x16, #40]
    a2f8:	add	x16, x16, #0x28
    a2fc:	br	x17

000000000000a300 <getcwd@plt>:
    a300:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a304:	ldr	x17, [x16, #48]
    a308:	add	x16, x16, #0x30
    a30c:	br	x17

000000000000a310 <same_nameat@plt>:
    a310:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a314:	ldr	x17, [x16, #56]
    a318:	add	x16, x16, #0x38
    a31c:	br	x17

000000000000a320 <fwrite_unlocked@plt>:
    a320:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a324:	ldr	x17, [x16, #64]
    a328:	add	x16, x16, #0x40
    a32c:	br	x17

000000000000a330 <get_canonical_charset_name@plt>:
    a330:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a334:	ldr	x17, [x16, #72]
    a338:	add	x16, x16, #0x48
    a33c:	br	x17

000000000000a340 <strlen@plt>:
    a340:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a344:	ldr	x17, [x16, #80]
    a348:	add	x16, x16, #0x50
    a34c:	br	x17

000000000000a350 <exit@plt>:
    a350:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a354:	ldr	x17, [x16, #88]
    a358:	add	x16, x16, #0x58
    a35c:	br	x17

000000000000a360 <error@plt>:
    a360:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a364:	ldr	x17, [x16, #96]
    a368:	add	x16, x16, #0x60
    a36c:	br	x17

000000000000a370 <pthread_mutexattr_settype@plt>:
    a370:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a374:	ldr	x17, [x16, #104]
    a378:	add	x16, x16, #0x68
    a37c:	br	x17

000000000000a380 <fchdir@plt>:
    a380:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a384:	ldr	x17, [x16, #112]
    a388:	add	x16, x16, #0x70
    a38c:	br	x17

000000000000a390 <perror@plt>:
    a390:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a394:	ldr	x17, [x16, #120]
    a398:	add	x16, x16, #0x78
    a39c:	br	x17

000000000000a3a0 <flockfile@plt>:
    a3a0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a3a4:	ldr	x17, [x16, #128]
    a3a8:	add	x16, x16, #0x80
    a3ac:	br	x17

000000000000a3b0 <getegid@plt>:
    a3b0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a3b4:	ldr	x17, [x16, #136]
    a3b8:	add	x16, x16, #0x88
    a3bc:	br	x17

000000000000a3c0 <wctype@plt>:
    a3c0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a3c4:	ldr	x17, [x16, #144]
    a3c8:	add	x16, x16, #0x90
    a3cc:	br	x17

000000000000a3d0 <sigprocmask@plt>:
    a3d0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a3d4:	ldr	x17, [x16, #152]
    a3d8:	add	x16, x16, #0x98
    a3dc:	br	x17

000000000000a3e0 <rpl_mbrtowc@plt>:
    a3e0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a3e4:	ldr	x17, [x16, #160]
    a3e8:	add	x16, x16, #0xa0
    a3ec:	br	x17

000000000000a3f0 <geteuid@plt>:
    a3f0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a3f4:	ldr	x17, [x16, #168]
    a3f8:	add	x16, x16, #0xa8
    a3fc:	br	x17

000000000000a400 <get_roff_encoding@plt>:
    a400:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a404:	ldr	x17, [x16, #176]
    a408:	add	x16, x16, #0xb0
    a40c:	br	x17

000000000000a410 <pthread_rwlock_init@plt>:
    a410:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a414:	ldr	x17, [x16, #184]
    a418:	add	x16, x16, #0xb8
    a41c:	br	x17

000000000000a420 <getresuid@plt>:
    a420:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a424:	ldr	x17, [x16, #192]
    a428:	add	x16, x16, #0xc0
    a42c:	br	x17

000000000000a430 <pthread_rwlockattr_setkind_np@plt>:
    a430:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a434:	ldr	x17, [x16, #200]
    a438:	add	x16, x16, #0xc8
    a43c:	br	x17

000000000000a440 <chdir_long@plt>:
    a440:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a444:	ldr	x17, [x16, #208]
    a448:	add	x16, x16, #0xd0
    a44c:	br	x17

000000000000a450 <hash_insert@plt>:
    a450:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a454:	ldr	x17, [x16, #216]
    a458:	add	x16, x16, #0xd8
    a45c:	br	x17

000000000000a460 <setenv@plt>:
    a460:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a464:	ldr	x17, [x16, #224]
    a468:	add	x16, x16, #0xe0
    a46c:	br	x17

000000000000a470 <readlink@plt>:
    a470:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a474:	ldr	x17, [x16, #232]
    a478:	add	x16, x16, #0xe8
    a47c:	br	x17

000000000000a480 <__cxa_finalize@plt>:
    a480:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a484:	ldr	x17, [x16, #240]
    a488:	add	x16, x16, #0xf0
    a48c:	br	x17

000000000000a490 <sprintf@plt>:
    a490:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a494:	ldr	x17, [x16, #248]
    a498:	add	x16, x16, #0xf8
    a49c:	br	x17

000000000000a4a0 <getuid@plt>:
    a4a0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a4a4:	ldr	x17, [x16, #256]
    a4a8:	add	x16, x16, #0x100
    a4ac:	br	x17

000000000000a4b0 <pipe@plt>:
    a4b0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a4b4:	ldr	x17, [x16, #264]
    a4b8:	add	x16, x16, #0x108
    a4bc:	br	x17

000000000000a4c0 <opendir@plt>:
    a4c0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a4c4:	ldr	x17, [x16, #272]
    a4c8:	add	x16, x16, #0x110
    a4cc:	br	x17

000000000000a4d0 <__cxa_atexit@plt>:
    a4d0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a4d4:	ldr	x17, [x16, #280]
    a4d8:	add	x16, x16, #0x118
    a4dc:	br	x17

000000000000a4e0 <fputc@plt>:
    a4e0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a4e4:	ldr	x17, [x16, #288]
    a4e8:	add	x16, x16, #0x120
    a4ec:	br	x17

000000000000a4f0 <clock_gettime@plt>:
    a4f0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a4f4:	ldr	x17, [x16, #296]
    a4f8:	add	x16, x16, #0x128
    a4fc:	br	x17

000000000000a500 <qsort@plt>:
    a500:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a504:	ldr	x17, [x16, #304]
    a508:	add	x16, x16, #0x130
    a50c:	br	x17

000000000000a510 <kill@plt>:
    a510:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a514:	ldr	x17, [x16, #312]
    a518:	add	x16, x16, #0x138
    a51c:	br	x17

000000000000a520 <_argp_fmtstream_update@plt>:
    a520:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a524:	ldr	x17, [x16, #320]
    a528:	add	x16, x16, #0x140
    a52c:	br	x17

000000000000a530 <__ctype_tolower_loc@plt>:
    a530:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a534:	ldr	x17, [x16, #328]
    a538:	add	x16, x16, #0x148
    a53c:	br	x17

000000000000a540 <snprintf@plt>:
    a540:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a544:	ldr	x17, [x16, #336]
    a548:	add	x16, x16, #0x150
    a54c:	br	x17

000000000000a550 <mdir_name@plt>:
    a550:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a554:	ldr	x17, [x16, #344]
    a558:	add	x16, x16, #0x158
    a55c:	br	x17

000000000000a560 <triple_free@plt>:
    a560:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a564:	ldr	x17, [x16, #352]
    a568:	add	x16, x16, #0x160
    a56c:	br	x17

000000000000a570 <debug@plt>:
    a570:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a574:	ldr	x17, [x16, #360]
    a578:	add	x16, x16, #0x168
    a57c:	br	x17

000000000000a580 <hash_free@plt>:
    a580:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a584:	ldr	x17, [x16, #368]
    a588:	add	x16, x16, #0x170
    a58c:	br	x17

000000000000a590 <fclose@plt>:
    a590:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a594:	ldr	x17, [x16, #376]
    a598:	add	x16, x16, #0x178
    a59c:	br	x17

000000000000a5a0 <rpl_regcomp@plt>:
    a5a0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a5a4:	ldr	x17, [x16, #384]
    a5a8:	add	x16, x16, #0x180
    a5ac:	br	x17

000000000000a5b0 <getpid@plt>:
    a5b0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a5b4:	ldr	x17, [x16, #392]
    a5b8:	add	x16, x16, #0x188
    a5bc:	br	x17

000000000000a5c0 <nl_langinfo@plt>:
    a5c0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a5c4:	ldr	x17, [x16, #400]
    a5c8:	add	x16, x16, #0x190
    a5cc:	br	x17

000000000000a5d0 <fopen@plt>:
    a5d0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a5d4:	ldr	x17, [x16, #408]
    a5d8:	add	x16, x16, #0x198
    a5dc:	br	x17

000000000000a5e0 <iswctype@plt>:
    a5e0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a5e4:	ldr	x17, [x16, #416]
    a5e8:	add	x16, x16, #0x1a0
    a5ec:	br	x17

000000000000a5f0 <malloc@plt>:
    a5f0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a5f4:	ldr	x17, [x16, #424]
    a5f8:	add	x16, x16, #0x1a8
    a5fc:	br	x17

000000000000a600 <record_file@plt>:
    a600:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a604:	ldr	x17, [x16, #432]
    a608:	add	x16, x16, #0x1b0
    a60c:	br	x17

000000000000a610 <futimesat@plt>:
    a610:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a614:	ldr	x17, [x16, #440]
    a618:	add	x16, x16, #0x1b8
    a61c:	br	x17

000000000000a620 <funlockfile@plt>:
    a620:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a624:	ldr	x17, [x16, #448]
    a628:	add	x16, x16, #0x1c0
    a62c:	br	x17

000000000000a630 <stdopen@plt>:
    a630:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a634:	ldr	x17, [x16, #456]
    a638:	add	x16, x16, #0x1c8
    a63c:	br	x17

000000000000a640 <open@plt>:
    a640:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a644:	ldr	x17, [x16, #464]
    a648:	add	x16, x16, #0x1d0
    a64c:	br	x17

000000000000a650 <argp_failure@plt>:
    a650:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a654:	ldr	x17, [x16, #472]
    a658:	add	x16, x16, #0x1d8
    a65c:	br	x17

000000000000a660 <xrealloc@plt>:
    a660:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a664:	ldr	x17, [x16, #480]
    a668:	add	x16, x16, #0x1e0
    a66c:	br	x17

000000000000a670 <dir_name@plt>:
    a670:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a674:	ldr	x17, [x16, #488]
    a678:	add	x16, x16, #0x1e8
    a67c:	br	x17

000000000000a680 <idpriv_temp_drop@plt>:
    a680:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a684:	ldr	x17, [x16, #496]
    a688:	add	x16, x16, #0x1f0
    a68c:	br	x17

000000000000a690 <sigemptyset@plt>:
    a690:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a694:	ldr	x17, [x16, #504]
    a698:	add	x16, x16, #0x1f8
    a69c:	br	x17

000000000000a6a0 <get_groff_preconv@plt>:
    a6a0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a6a4:	ldr	x17, [x16, #512]
    a6a8:	add	x16, x16, #0x200
    a6ac:	br	x17

000000000000a6b0 <futimens@plt>:
    a6b0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a6b4:	ldr	x17, [x16, #520]
    a6b8:	add	x16, x16, #0x208
    a6bc:	br	x17

000000000000a6c0 <strncmp@plt>:
    a6c0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a6c4:	ldr	x17, [x16, #528]
    a6c8:	add	x16, x16, #0x210
    a6cc:	br	x17

000000000000a6d0 <bindtextdomain@plt>:
    a6d0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a6d4:	ldr	x17, [x16, #536]
    a6d8:	add	x16, x16, #0x218
    a6dc:	br	x17

000000000000a6e0 <fstatfs@plt>:
    a6e0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a6e4:	ldr	x17, [x16, #544]
    a6e8:	add	x16, x16, #0x220
    a6ec:	br	x17

000000000000a6f0 <memset@plt>:
    a6f0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a6f4:	ldr	x17, [x16, #552]
    a6f8:	add	x16, x16, #0x228
    a6fc:	br	x17

000000000000a700 <gettimeofday@plt>:
    a700:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a704:	ldr	x17, [x16, #560]
    a708:	add	x16, x16, #0x230
    a70c:	br	x17

000000000000a710 <xmalloc@plt>:
    a710:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a714:	ldr	x17, [x16, #568]
    a718:	add	x16, x16, #0x238
    a71c:	br	x17

000000000000a720 <getpwnam@plt>:
    a720:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a724:	ldr	x17, [x16, #576]
    a728:	add	x16, x16, #0x240
    a72c:	br	x17

000000000000a730 <xstrdup@plt>:
    a730:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a734:	ldr	x17, [x16, #584]
    a738:	add	x16, x16, #0x248
    a73c:	br	x17

000000000000a740 <sleep@plt>:
    a740:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a744:	ldr	x17, [x16, #592]
    a748:	add	x16, x16, #0x250
    a74c:	br	x17

000000000000a750 <same_name@plt>:
    a750:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a754:	ldr	x17, [x16, #600]
    a758:	add	x16, x16, #0x258
    a75c:	br	x17

000000000000a760 <strerror_r@plt>:
    a760:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a764:	ldr	x17, [x16, #608]
    a768:	add	x16, x16, #0x260
    a76c:	br	x17

000000000000a770 <calloc@plt>:
    a770:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a774:	ldr	x17, [x16, #616]
    a778:	add	x16, x16, #0x268
    a77c:	br	x17

000000000000a780 <last_component@plt>:
    a780:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a784:	ldr	x17, [x16, #624]
    a788:	add	x16, x16, #0x270
    a78c:	br	x17

000000000000a790 <hard_locale@plt>:
    a790:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a794:	ldr	x17, [x16, #632]
    a798:	add	x16, x16, #0x278
    a79c:	br	x17

000000000000a7a0 <hash_insert_if_absent@plt>:
    a7a0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a7a4:	ldr	x17, [x16, #640]
    a7a8:	add	x16, x16, #0x280
    a7ac:	br	x17

000000000000a7b0 <hash_get_n_buckets_used@plt>:
    a7b0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a7b4:	ldr	x17, [x16, #648]
    a7b8:	add	x16, x16, #0x288
    a7bc:	br	x17

000000000000a7c0 <strcasecmp@plt>:
    a7c0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a7c4:	ldr	x17, [x16, #656]
    a7c8:	add	x16, x16, #0x290
    a7cc:	br	x17

000000000000a7d0 <readdir@plt>:
    a7d0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a7d4:	ldr	x17, [x16, #664]
    a7d8:	add	x16, x16, #0x298
    a7dc:	br	x17

000000000000a7e0 <realloc@plt>:
    a7e0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a7e4:	ldr	x17, [x16, #672]
    a7e8:	add	x16, x16, #0x2a0
    a7ec:	br	x17

000000000000a7f0 <__ctype_toupper_loc@plt>:
    a7f0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a7f4:	ldr	x17, [x16, #680]
    a7f8:	add	x16, x16, #0x2a8
    a7fc:	br	x17

000000000000a800 <hash_initialize@plt>:
    a800:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a804:	ldr	x17, [x16, #688]
    a808:	add	x16, x16, #0x2b0
    a80c:	br	x17

000000000000a810 <try_tempname@plt>:
    a810:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a814:	ldr	x17, [x16, #696]
    a818:	add	x16, x16, #0x2b8
    a81c:	br	x17

000000000000a820 <closedir@plt>:
    a820:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a824:	ldr	x17, [x16, #704]
    a828:	add	x16, x16, #0x2c0
    a82c:	br	x17

000000000000a830 <strerror@plt>:
    a830:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a834:	ldr	x17, [x16, #712]
    a838:	add	x16, x16, #0x2c8
    a83c:	br	x17

000000000000a840 <pthread_mutex_init@plt>:
    a840:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a844:	ldr	x17, [x16, #720]
    a848:	add	x16, x16, #0x2d0
    a84c:	br	x17

000000000000a850 <close@plt>:
    a850:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a854:	ldr	x17, [x16, #728]
    a858:	add	x16, x16, #0x2d8
    a85c:	br	x17

000000000000a860 <sigaction@plt>:
    a860:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a864:	ldr	x17, [x16, #736]
    a868:	add	x16, x16, #0x2e0
    a86c:	br	x17

000000000000a870 <hash_lookup@plt>:
    a870:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a874:	ldr	x17, [x16, #744]
    a878:	add	x16, x16, #0x2e8
    a87c:	br	x17

000000000000a880 <strrchr@plt>:
    a880:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a884:	ldr	x17, [x16, #752]
    a888:	add	x16, x16, #0x2f0
    a88c:	br	x17

000000000000a890 <xalloc_die@plt>:
    a890:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a894:	ldr	x17, [x16, #760]
    a898:	add	x16, x16, #0x2f8
    a89c:	br	x17

000000000000a8a0 <memmem@plt>:
    a8a0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a8a4:	ldr	x17, [x16, #768]
    a8a8:	add	x16, x16, #0x300
    a8ac:	br	x17

000000000000a8b0 <__gmon_start__@plt>:
    a8b0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a8b4:	ldr	x17, [x16, #776]
    a8b8:	add	x16, x16, #0x308
    a8bc:	br	x17

000000000000a8c0 <drop_effective_privs@plt>:
    a8c0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a8c4:	ldr	x17, [x16, #784]
    a8c8:	add	x16, x16, #0x310
    a8cc:	br	x17

000000000000a8d0 <btowc@plt>:
    a8d0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a8d4:	ldr	x17, [x16, #792]
    a8d8:	add	x16, x16, #0x318
    a8dc:	br	x17

000000000000a8e0 <mkdtemp@plt>:
    a8e0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a8e4:	ldr	x17, [x16, #800]
    a8e8:	add	x16, x16, #0x320
    a8ec:	br	x17

000000000000a8f0 <argp_fmtstream_printf@plt>:
    a8f0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a8f4:	ldr	x17, [x16, #808]
    a8f8:	add	x16, x16, #0x328
    a8fc:	br	x17

000000000000a900 <abort@plt>:
    a900:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a904:	ldr	x17, [x16, #816]
    a908:	add	x16, x16, #0x330
    a90c:	br	x17

000000000000a910 <_getopt_long_only_r@plt>:
    a910:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a914:	ldr	x17, [x16, #824]
    a918:	add	x16, x16, #0x338
    a91c:	br	x17

000000000000a920 <hash_rehash@plt>:
    a920:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a924:	ldr	x17, [x16, #832]
    a928:	add	x16, x16, #0x340
    a92c:	br	x17

000000000000a930 <mbsinit@plt>:
    a930:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a934:	ldr	x17, [x16, #840]
    a938:	add	x16, x16, #0x348
    a93c:	br	x17

000000000000a940 <__overflow@plt>:
    a940:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a944:	ldr	x17, [x16, #848]
    a948:	add	x16, x16, #0x350
    a94c:	br	x17

000000000000a950 <access@plt>:
    a950:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a954:	ldr	x17, [x16, #856]
    a958:	add	x16, x16, #0x358
    a95c:	br	x17

000000000000a960 <fdutimens@plt>:
    a960:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a964:	ldr	x17, [x16, #864]
    a968:	add	x16, x16, #0x360
    a96c:	br	x17

000000000000a970 <memcmp@plt>:
    a970:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a974:	ldr	x17, [x16, #872]
    a978:	add	x16, x16, #0x368
    a97c:	br	x17

000000000000a980 <hash_pjw_bare@plt>:
    a980:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a984:	ldr	x17, [x16, #880]
    a988:	add	x16, x16, #0x370
    a98c:	br	x17

000000000000a990 <textdomain@plt>:
    a990:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a994:	ldr	x17, [x16, #888]
    a998:	add	x16, x16, #0x378
    a99c:	br	x17

000000000000a9a0 <strsep@plt>:
    a9a0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a9a4:	ldr	x17, [x16, #896]
    a9a8:	add	x16, x16, #0x380
    a9ac:	br	x17

000000000000a9b0 <strcmp@plt>:
    a9b0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a9b4:	ldr	x17, [x16, #904]
    a9b8:	add	x16, x16, #0x388
    a9bc:	br	x17

000000000000a9c0 <_getopt_long_r@plt>:
    a9c0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a9c4:	ldr	x17, [x16, #912]
    a9c8:	add	x16, x16, #0x390
    a9cc:	br	x17

000000000000a9d0 <__ctype_b_loc@plt>:
    a9d0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a9d4:	ldr	x17, [x16, #920]
    a9d8:	add	x16, x16, #0x398
    a9dc:	br	x17

000000000000a9e0 <rmdir@plt>:
    a9e0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a9e4:	ldr	x17, [x16, #928]
    a9e8:	add	x16, x16, #0x3a0
    a9ec:	br	x17

000000000000a9f0 <seen_file@plt>:
    a9f0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    a9f4:	ldr	x17, [x16, #936]
    a9f8:	add	x16, x16, #0x3a8
    a9fc:	br	x17

000000000000aa00 <strtol@plt>:
    aa00:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aa04:	ldr	x17, [x16, #944]
    aa08:	add	x16, x16, #0x3b0
    aa0c:	br	x17

000000000000aa10 <hash_get_max_bucket_length@plt>:
    aa10:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aa14:	ldr	x17, [x16, #952]
    aa18:	add	x16, x16, #0x3b8
    aa1c:	br	x17

000000000000aa20 <dir_len@plt>:
    aa20:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aa24:	ldr	x17, [x16, #960]
    aa28:	add	x16, x16, #0x3c0
    aa2c:	br	x17

000000000000aa30 <chdir@plt>:
    aa30:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aa34:	ldr	x17, [x16, #968]
    aa38:	add	x16, x16, #0x3c8
    aa3c:	br	x17

000000000000aa40 <dup_safer@plt>:
    aa40:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aa44:	ldr	x17, [x16, #976]
    aa48:	add	x16, x16, #0x3d0
    aa4c:	br	x17

000000000000aa50 <free@plt>:
    aa50:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aa54:	ldr	x17, [x16, #984]
    aa58:	add	x16, x16, #0x3d8
    aa5c:	br	x17

000000000000aa60 <renameat2@plt>:
    aa60:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aa64:	ldr	x17, [x16, #992]
    aa68:	add	x16, x16, #0x3e0
    aa6c:	br	x17

000000000000aa70 <argp_make_fmtstream@plt>:
    aa70:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aa74:	ldr	x17, [x16, #1000]
    aa78:	add	x16, x16, #0x3e8
    aa7c:	br	x17

000000000000aa80 <__ctype_get_mb_cur_max@plt>:
    aa80:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aa84:	ldr	x17, [x16, #1008]
    aa88:	add	x16, x16, #0x3f0
    aa8c:	br	x17

000000000000aa90 <getgid@plt>:
    aa90:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aa94:	ldr	x17, [x16, #1016]
    aa98:	add	x16, x16, #0x3f8
    aa9c:	br	x17

000000000000aaa0 <renameat@plt>:
    aaa0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aaa4:	ldr	x17, [x16, #1024]
    aaa8:	add	x16, x16, #0x400
    aaac:	br	x17

000000000000aab0 <mempcpy@plt>:
    aab0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aab4:	ldr	x17, [x16, #1032]
    aab8:	add	x16, x16, #0x408
    aabc:	br	x17

000000000000aac0 <xasprintf@plt>:
    aac0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aac4:	ldr	x17, [x16, #1040]
    aac8:	add	x16, x16, #0x410
    aacc:	br	x17

000000000000aad0 <vasnprintf@plt>:
    aad0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aad4:	ldr	x17, [x16, #1048]
    aad8:	add	x16, x16, #0x418
    aadc:	br	x17

000000000000aae0 <printf_fetchargs@plt>:
    aae0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aae4:	ldr	x17, [x16, #1056]
    aae8:	add	x16, x16, #0x420
    aaec:	br	x17

000000000000aaf0 <hash_get_n_buckets@plt>:
    aaf0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aaf4:	ldr	x17, [x16, #1064]
    aaf8:	add	x16, x16, #0x428
    aafc:	br	x17

000000000000ab00 <nanosleep@plt>:
    ab00:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ab04:	ldr	x17, [x16, #1072]
    ab08:	add	x16, x16, #0x430
    ab0c:	br	x17

000000000000ab10 <vasprintf@plt>:
    ab10:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ab14:	ldr	x17, [x16, #1080]
    ab18:	add	x16, x16, #0x438
    ab1c:	br	x17

000000000000ab20 <rpl_getopt_internal@plt>:
    ab20:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ab24:	ldr	x17, [x16, #1088]
    ab28:	add	x16, x16, #0x440
    ab2c:	br	x17

000000000000ab30 <strndup@plt>:
    ab30:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ab34:	ldr	x17, [x16, #1096]
    ab38:	add	x16, x16, #0x448
    ab3c:	br	x17

000000000000ab40 <strspn@plt>:
    ab40:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ab44:	ldr	x17, [x16, #1104]
    ab48:	add	x16, x16, #0x450
    ab4c:	br	x17

000000000000ab50 <rpl_ioctl@plt>:
    ab50:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ab54:	ldr	x17, [x16, #1112]
    ab58:	add	x16, x16, #0x458
    ab5c:	br	x17

000000000000ab60 <strchr@plt>:
    ab60:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ab64:	ldr	x17, [x16, #1120]
    ab68:	add	x16, x16, #0x460
    ab6c:	br	x17

000000000000ab70 <areadlink_with_size@plt>:
    ab70:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ab74:	ldr	x17, [x16, #1128]
    ab78:	add	x16, x16, #0x468
    ab7c:	br	x17

000000000000ab80 <argp_error@plt>:
    ab80:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ab84:	ldr	x17, [x16, #1136]
    ab88:	add	x16, x16, #0x470
    ab8c:	br	x17

000000000000ab90 <memrchr@plt>:
    ab90:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ab94:	ldr	x17, [x16, #1144]
    ab98:	add	x16, x16, #0x478
    ab9c:	br	x17

000000000000aba0 <utimensat@plt>:
    aba0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aba4:	ldr	x17, [x16, #1152]
    aba8:	add	x16, x16, #0x480
    abac:	br	x17

000000000000abb0 <pipeline_peekline@plt>:
    abb0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    abb4:	ldr	x17, [x16, #1160]
    abb8:	add	x16, x16, #0x488
    abbc:	br	x17

000000000000abc0 <do_cleanups_sigsafe@plt>:
    abc0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    abc4:	ldr	x17, [x16, #1168]
    abc8:	add	x16, x16, #0x490
    abcc:	br	x17

000000000000abd0 <fwrite@plt>:
    abd0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    abd4:	ldr	x17, [x16, #1176]
    abd8:	add	x16, x16, #0x498
    abdc:	br	x17

000000000000abe0 <rpl_fcntl@plt>:
    abe0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    abe4:	ldr	x17, [x16, #1184]
    abe8:	add	x16, x16, #0x4a0
    abec:	br	x17

000000000000abf0 <fnmatch@plt>:
    abf0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    abf4:	ldr	x17, [x16, #1192]
    abf8:	add	x16, x16, #0x4a8
    abfc:	br	x17

000000000000ac00 <fcntl@plt>:
    ac00:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ac04:	ldr	x17, [x16, #1200]
    ac08:	add	x16, x16, #0x4b0
    ac0c:	br	x17

000000000000ac10 <idpriv_drop@plt>:
    ac10:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ac14:	ldr	x17, [x16, #1208]
    ac18:	add	x16, x16, #0x4b8
    ac1c:	br	x17

000000000000ac20 <rpl_regerror@plt>:
    ac20:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ac24:	ldr	x17, [x16, #1216]
    ac28:	add	x16, x16, #0x4c0
    ac2c:	br	x17

000000000000ac30 <pthread_mutex_destroy@plt>:
    ac30:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ac34:	ldr	x17, [x16, #1224]
    ac38:	add	x16, x16, #0x4c8
    ac3c:	br	x17

000000000000ac40 <strcpy@plt>:
    ac40:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ac44:	ldr	x17, [x16, #1232]
    ac48:	add	x16, x16, #0x4d0
    ac4c:	br	x17

000000000000ac50 <hash_pjw@plt>:
    ac50:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ac54:	ldr	x17, [x16, #1240]
    ac58:	add	x16, x16, #0x4d8
    ac5c:	br	x17

000000000000ac60 <_argp_input@plt>:
    ac60:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ac64:	ldr	x17, [x16, #1248]
    ac68:	add	x16, x16, #0x4e0
    ac6c:	br	x17

000000000000ac70 <__lxstat@plt>:
    ac70:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ac74:	ldr	x17, [x16, #1256]
    ac78:	add	x16, x16, #0x4e8
    ac7c:	br	x17

000000000000ac80 <dup_safer_flag@plt>:
    ac80:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ac84:	ldr	x17, [x16, #1264]
    ac88:	add	x16, x16, #0x4f0
    ac8c:	br	x17

000000000000ac90 <memchr@plt>:
    ac90:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ac94:	ldr	x17, [x16, #1272]
    ac98:	add	x16, x16, #0x4f8
    ac9c:	br	x17

000000000000aca0 <idpriv_temp_restore@plt>:
    aca0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aca4:	ldr	x17, [x16, #1280]
    aca8:	add	x16, x16, #0x500
    acac:	br	x17

000000000000acb0 <new_string_list@plt>:
    acb0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    acb4:	ldr	x17, [x16, #1288]
    acb8:	add	x16, x16, #0x508
    acbc:	br	x17

000000000000acc0 <getresgid@plt>:
    acc0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    acc4:	ldr	x17, [x16, #1296]
    acc8:	add	x16, x16, #0x510
    accc:	br	x17

000000000000acd0 <isatty@plt>:
    acd0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    acd4:	ldr	x17, [x16, #1304]
    acd8:	add	x16, x16, #0x518
    acdc:	br	x17

000000000000ace0 <xzalloc@plt>:
    ace0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ace4:	ldr	x17, [x16, #1312]
    ace8:	add	x16, x16, #0x520
    acec:	br	x17

000000000000acf0 <xstrndup@plt>:
    acf0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    acf4:	ldr	x17, [x16, #1320]
    acf8:	add	x16, x16, #0x528
    acfc:	br	x17

000000000000ad00 <pthread_mutexattr_init@plt>:
    ad00:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ad04:	ldr	x17, [x16, #1328]
    ad08:	add	x16, x16, #0x530
    ad0c:	br	x17

000000000000ad10 <setresuid@plt>:
    ad10:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ad14:	ldr	x17, [x16, #1336]
    ad18:	add	x16, x16, #0x538
    ad1c:	br	x17

000000000000ad20 <utimes@plt>:
    ad20:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ad24:	ldr	x17, [x16, #1344]
    ad28:	add	x16, x16, #0x540
    ad2c:	br	x17

000000000000ad30 <iswalnum@plt>:
    ad30:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ad34:	ldr	x17, [x16, #1352]
    ad38:	add	x16, x16, #0x548
    ad3c:	br	x17

000000000000ad40 <__fxstat@plt>:
    ad40:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ad44:	ldr	x17, [x16, #1360]
    ad48:	add	x16, x16, #0x550
    ad4c:	br	x17

000000000000ad50 <pthread_mutexattr_destroy@plt>:
    ad50:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ad54:	ldr	x17, [x16, #1368]
    ad58:	add	x16, x16, #0x558
    ad5c:	br	x17

000000000000ad60 <strchrnul@plt>:
    ad60:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ad64:	ldr	x17, [x16, #1376]
    ad68:	add	x16, x16, #0x560
    ad6c:	br	x17

000000000000ad70 <strstr@plt>:
    ad70:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ad74:	ldr	x17, [x16, #1384]
    ad78:	add	x16, x16, #0x568
    ad7c:	br	x17

000000000000ad80 <_argp_fmtstream_ensure@plt>:
    ad80:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ad84:	ldr	x17, [x16, #1392]
    ad88:	add	x16, x16, #0x570
    ad8c:	br	x17

000000000000ad90 <argp_state_help@plt>:
    ad90:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ad94:	ldr	x17, [x16, #1400]
    ad98:	add	x16, x16, #0x578
    ad9c:	br	x17

000000000000ada0 <dcgettext@plt>:
    ada0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ada4:	ldr	x17, [x16, #1408]
    ada8:	add	x16, x16, #0x580
    adac:	br	x17

000000000000adb0 <pthread_rwlockattr_destroy@plt>:
    adb0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    adb4:	ldr	x17, [x16, #1416]
    adb8:	add	x16, x16, #0x588
    adbc:	br	x17

000000000000adc0 <vsnprintf@plt>:
    adc0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    adc4:	ldr	x17, [x16, #1424]
    adc8:	add	x16, x16, #0x590
    adcc:	br	x17

000000000000add0 <argp_fmtstream_free@plt>:
    add0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    add4:	ldr	x17, [x16, #1432]
    add8:	add	x16, x16, #0x598
    addc:	br	x17

000000000000ade0 <get_locale_charset@plt>:
    ade0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ade4:	ldr	x17, [x16, #1440]
    ade8:	add	x16, x16, #0x5a0
    adec:	br	x17

000000000000adf0 <xvasprintf@plt>:
    adf0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    adf4:	ldr	x17, [x16, #1448]
    adf8:	add	x16, x16, #0x5a8
    adfc:	br	x17

000000000000ae00 <fputs_unlocked@plt>:
    ae00:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ae04:	ldr	x17, [x16, #1456]
    ae08:	add	x16, x16, #0x5b0
    ae0c:	br	x17

000000000000ae10 <sigaddset@plt>:
    ae10:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ae14:	ldr	x17, [x16, #1464]
    ae18:	add	x16, x16, #0x5b8
    ae1c:	br	x17

000000000000ae20 <pathsearch_executable@plt>:
    ae20:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ae24:	ldr	x17, [x16, #1472]
    ae28:	add	x16, x16, #0x5c0
    ae2c:	br	x17

000000000000ae30 <towupper@plt>:
    ae30:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ae34:	ldr	x17, [x16, #1480]
    ae38:	add	x16, x16, #0x5c8
    ae3c:	br	x17

000000000000ae40 <fd_safer_flag@plt>:
    ae40:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ae44:	ldr	x17, [x16, #1488]
    ae48:	add	x16, x16, #0x5d0
    ae4c:	br	x17

000000000000ae50 <xmemdup@plt>:
    ae50:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ae54:	ldr	x17, [x16, #1496]
    ae58:	add	x16, x16, #0x5d8
    ae5c:	br	x17

000000000000ae60 <strcspn@plt>:
    ae60:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ae64:	ldr	x17, [x16, #1504]
    ae68:	add	x16, x16, #0x5e0
    ae6c:	br	x17

000000000000ae70 <_getopt_internal_r@plt>:
    ae70:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ae74:	ldr	x17, [x16, #1512]
    ae78:	add	x16, x16, #0x5e8
    ae7c:	br	x17

000000000000ae80 <vfprintf@plt>:
    ae80:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ae84:	ldr	x17, [x16, #1520]
    ae88:	add	x16, x16, #0x5f0
    ae8c:	br	x17

000000000000ae90 <openat@plt>:
    ae90:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    ae94:	ldr	x17, [x16, #1528]
    ae98:	add	x16, x16, #0x5f8
    ae9c:	br	x17

000000000000aea0 <__assert_fail@plt>:
    aea0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aea4:	ldr	x17, [x16, #1536]
    aea8:	add	x16, x16, #0x600
    aeac:	br	x17

000000000000aeb0 <__errno_location@plt>:
    aeb0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aeb4:	ldr	x17, [x16, #1544]
    aeb8:	add	x16, x16, #0x608
    aebc:	br	x17

000000000000aec0 <setresgid@plt>:
    aec0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aec4:	ldr	x17, [x16, #1552]
    aec8:	add	x16, x16, #0x610
    aecc:	br	x17

000000000000aed0 <getenv@plt>:
    aed0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aed4:	ldr	x17, [x16, #1560]
    aed8:	add	x16, x16, #0x618
    aedc:	br	x17

000000000000aee0 <locale_charset@plt>:
    aee0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aee4:	ldr	x17, [x16, #1568]
    aee8:	add	x16, x16, #0x620
    aeec:	br	x17

000000000000aef0 <__xstat@plt>:
    aef0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aef4:	ldr	x17, [x16, #1576]
    aef8:	add	x16, x16, #0x628
    aefc:	br	x17

000000000000af00 <pthread_mutex_lock@plt>:
    af00:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    af04:	ldr	x17, [x16, #1584]
    af08:	add	x16, x16, #0x630
    af0c:	br	x17

000000000000af10 <__getdelim@plt>:
    af10:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    af14:	ldr	x17, [x16, #1592]
    af18:	add	x16, x16, #0x638
    af1c:	br	x17

000000000000af20 <printf_parse@plt>:
    af20:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    af24:	ldr	x17, [x16, #1600]
    af28:	add	x16, x16, #0x640
    af2c:	br	x17

000000000000af30 <fd_safer@plt>:
    af30:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    af34:	ldr	x17, [x16, #1608]
    af38:	add	x16, x16, #0x648
    af3c:	br	x17

000000000000af40 <pthread_mutex_unlock@plt>:
    af40:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    af44:	ldr	x17, [x16, #1616]
    af48:	add	x16, x16, #0x650
    af4c:	br	x17

000000000000af50 <unlink@plt>:
    af50:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    af54:	ldr	x17, [x16, #1624]
    af58:	add	x16, x16, #0x658
    af5c:	br	x17

000000000000af60 <mkdir@plt>:
    af60:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    af64:	ldr	x17, [x16, #1632]
    af68:	add	x16, x16, #0x660
    af6c:	br	x17

000000000000af70 <towlower@plt>:
    af70:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    af74:	ldr	x17, [x16, #1640]
    af78:	add	x16, x16, #0x668
    af7c:	br	x17

000000000000af80 <gettime@plt>:
    af80:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    af84:	ldr	x17, [x16, #1648]
    af88:	add	x16, x16, #0x670
    af8c:	br	x17

000000000000af90 <rpl_re_compile_fastmap@plt>:
    af90:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    af94:	ldr	x17, [x16, #1656]
    af98:	add	x16, x16, #0x678
    af9c:	br	x17

000000000000afa0 <fprintf@plt>:
    afa0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    afa4:	ldr	x17, [x16, #1664]
    afa8:	add	x16, x16, #0x680
    afac:	br	x17

000000000000afb0 <hash_get_n_entries@plt>:
    afb0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    afb4:	ldr	x17, [x16, #1672]
    afb8:	add	x16, x16, #0x688
    afbc:	br	x17

000000000000afc0 <ioctl@plt>:
    afc0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    afc4:	ldr	x17, [x16, #1680]
    afc8:	add	x16, x16, #0x690
    afcc:	br	x17

000000000000afd0 <setlocale@plt>:
    afd0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    afd4:	ldr	x17, [x16, #1688]
    afd8:	add	x16, x16, #0x698
    afdc:	br	x17

000000000000afe0 <__fxstatat@plt>:
    afe0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    afe4:	ldr	x17, [x16, #1696]
    afe8:	add	x16, x16, #0x6a0
    afec:	br	x17

000000000000aff0 <wcrtomb@plt>:
    aff0:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    aff4:	ldr	x17, [x16, #1704]
    aff8:	add	x16, x16, #0x6a8
    affc:	br	x17

000000000000b000 <xgetcwd@plt>:
    b000:	adrp	x16, 47000 <base_len@@Base+0x32c40>
    b004:	ldr	x17, [x16, #1712]
    b008:	add	x16, x16, #0x6b0
    b00c:	br	x17

Disassembly of section .text:

000000000000b010 <appendstr@@Base-0xd8>:
    b010:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
    b014:	ldr	x0, [x0, #3904]
    b018:	cbz	x0, b020 <xgetcwd@plt+0x20>
    b01c:	b	a8b0 <__gmon_start__@plt>
    b020:	ret
    b024:	nop
    b028:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b02c:	add	x0, x0, #0x210
    b030:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b034:	add	x1, x1, #0x210
    b038:	cmp	x1, x0
    b03c:	b.eq	b054 <xgetcwd@plt+0x54>  // b.none
    b040:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
    b044:	ldr	x1, [x1, #3776]
    b048:	cbz	x1, b054 <xgetcwd@plt+0x54>
    b04c:	mov	x16, x1
    b050:	br	x16
    b054:	ret
    b058:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b05c:	add	x0, x0, #0x210
    b060:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b064:	add	x1, x1, #0x210
    b068:	sub	x1, x1, x0
    b06c:	lsr	x2, x1, #63
    b070:	add	x1, x2, x1, asr #3
    b074:	cmp	xzr, x1, asr #1
    b078:	asr	x1, x1, #1
    b07c:	b.eq	b094 <xgetcwd@plt+0x94>  // b.none
    b080:	adrp	x2, 46000 <vasnprintf@@Base+0x1b1e0>
    b084:	ldr	x2, [x2, #4024]
    b088:	cbz	x2, b094 <xgetcwd@plt+0x94>
    b08c:	mov	x16, x2
    b090:	br	x16
    b094:	ret
    b098:	stp	x29, x30, [sp, #-32]!
    b09c:	mov	x29, sp
    b0a0:	str	x19, [sp, #16]
    b0a4:	adrp	x19, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b0a8:	ldrb	w0, [x19, #528]
    b0ac:	cbnz	w0, b0d4 <xgetcwd@plt+0xd4>
    b0b0:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
    b0b4:	ldr	x0, [x0, #3800]
    b0b8:	cbz	x0, b0c8 <xgetcwd@plt+0xc8>
    b0bc:	adrp	x0, 47000 <base_len@@Base+0x32c40>
    b0c0:	ldr	x0, [x0, #1720]
    b0c4:	bl	a480 <__cxa_finalize@plt>
    b0c8:	bl	b028 <xgetcwd@plt+0x28>
    b0cc:	mov	w0, #0x1                   	// #1
    b0d0:	strb	w0, [x19, #528]
    b0d4:	ldr	x19, [sp, #16]
    b0d8:	ldp	x29, x30, [sp], #32
    b0dc:	ret
    b0e0:	b	b058 <xgetcwd@plt+0x58>
    b0e4:	nop

000000000000b0e8 <appendstr@@Base>:
    b0e8:	stp	x29, x30, [sp, #-160]!
    b0ec:	mov	x29, sp
    b0f0:	stp	x19, x20, [sp, #16]
    b0f4:	stp	x21, x22, [sp, #32]
    b0f8:	mov	x21, x0
    b0fc:	str	x23, [sp, #48]
    b100:	stp	x1, x2, [sp, #104]
    b104:	stp	x3, x4, [sp, #120]
    b108:	stp	x5, x6, [sp, #136]
    b10c:	str	x7, [sp, #152]
    b110:	cbz	x0, b244 <appendstr@@Base+0x15c>
    b114:	bl	a340 <strlen@plt>
    b118:	mov	x20, x0
    b11c:	add	x23, x0, #0x1
    b120:	add	x19, sp, #0x60
    b124:	add	x22, sp, #0xa0
    b128:	mov	w0, #0xffffffc8            	// #-56
    b12c:	stp	x22, x22, [sp, #64]
    b130:	str	x19, [sp, #80]
    b134:	stp	w0, wzr, [sp, #88]
    b138:	b	b154 <appendstr@@Base+0x6c>
    b13c:	and	x4, x4, #0xfffffffffffffff8
    b140:	str	x4, [sp, #64]
    b144:	ldr	x0, [x2]
    b148:	cbz	x0, b188 <appendstr@@Base+0xa0>
    b14c:	bl	a340 <strlen@plt>
    b150:	add	x23, x23, x0
    b154:	ldr	w3, [sp, #88]
    b158:	ldr	x2, [sp, #64]
    b15c:	add	w0, w3, #0x8
    b160:	add	x4, x2, #0xf
    b164:	tbz	w3, #31, b13c <appendstr@@Base+0x54>
    b168:	str	w0, [sp, #88]
    b16c:	add	x4, x2, #0xf
    b170:	cmp	w0, #0x0
    b174:	and	x4, x4, #0xfffffffffffffff8
    b178:	b.le	b230 <appendstr@@Base+0x148>
    b17c:	ldr	x0, [x2]
    b180:	str	x4, [sp, #64]
    b184:	cbnz	x0, b14c <appendstr@@Base+0x64>
    b188:	mov	x1, x23
    b18c:	mov	x0, x21
    b190:	bl	a660 <xrealloc@plt>
    b194:	mov	x21, x0
    b198:	add	x1, sp, #0xa0
    b19c:	mov	w0, #0xffffffc8            	// #-56
    b1a0:	add	x20, x21, x20
    b1a4:	stp	x1, x1, [sp, #64]
    b1a8:	str	x19, [sp, #80]
    b1ac:	stp	w0, wzr, [sp, #88]
    b1b0:	b	b1dc <appendstr@@Base+0xf4>
    b1b4:	and	x3, x3, #0xfffffffffffffff8
    b1b8:	str	x3, [sp, #64]
    b1bc:	ldr	x19, [x1]
    b1c0:	mov	x0, x20
    b1c4:	mov	x1, x19
    b1c8:	cbz	x19, b218 <appendstr@@Base+0x130>
    b1cc:	bl	ac40 <strcpy@plt>
    b1d0:	mov	x0, x19
    b1d4:	bl	a340 <strlen@plt>
    b1d8:	add	x20, x20, x0
    b1dc:	ldr	w2, [sp, #88]
    b1e0:	ldr	x1, [sp, #64]
    b1e4:	add	w0, w2, #0x8
    b1e8:	add	x3, x1, #0xf
    b1ec:	tbz	w2, #31, b1b4 <appendstr@@Base+0xcc>
    b1f0:	str	w0, [sp, #88]
    b1f4:	add	x3, x1, #0xf
    b1f8:	cmp	w0, #0x0
    b1fc:	and	x3, x3, #0xfffffffffffffff8
    b200:	b.le	b238 <appendstr@@Base+0x150>
    b204:	ldr	x19, [x1]
    b208:	str	x3, [sp, #64]
    b20c:	mov	x0, x20
    b210:	mov	x1, x19
    b214:	cbnz	x19, b1cc <appendstr@@Base+0xe4>
    b218:	mov	x0, x21
    b21c:	ldp	x19, x20, [sp, #16]
    b220:	ldp	x21, x22, [sp, #32]
    b224:	ldr	x23, [sp, #48]
    b228:	ldp	x29, x30, [sp], #160
    b22c:	ret
    b230:	add	x2, x22, w3, sxtw
    b234:	b	b144 <appendstr@@Base+0x5c>
    b238:	ldr	x1, [sp, #72]
    b23c:	add	x1, x1, w2, sxtw
    b240:	b	b1bc <appendstr@@Base+0xd4>
    b244:	mov	x23, #0x1                   	// #1
    b248:	mov	x20, #0x0                   	// #0
    b24c:	b	b120 <appendstr@@Base+0x38>
    b250:	stp	x29, x30, [sp, #-192]!
    b254:	mov	x29, sp
    b258:	add	x2, sp, #0x28
    b25c:	stp	x19, x20, [sp, #16]
    b260:	mov	x20, x1
    b264:	mov	w19, w0
    b268:	mov	x1, #0x0                   	// #0
    b26c:	bl	a860 <sigaction@plt>
    b270:	cbnz	w0, b2a8 <appendstr@@Base+0x1c0>
    b274:	ldr	x1, [sp, #40]
    b278:	adrp	x2, b000 <xgetcwd@plt>
    b27c:	add	x2, x2, #0x480
    b280:	cmp	x1, x2
    b284:	b.eq	b294 <appendstr@@Base+0x1ac>  // b.none
    b288:	ldp	x19, x20, [sp, #16]
    b28c:	ldp	x29, x30, [sp], #192
    b290:	ret
    b294:	mov	x1, x20
    b298:	mov	w0, w19
    b29c:	mov	x2, #0x0                   	// #0
    b2a0:	bl	a860 <sigaction@plt>
    b2a4:	b	b288 <appendstr@@Base+0x1a0>
    b2a8:	mov	w0, #0xffffffff            	// #-1
    b2ac:	b	b288 <appendstr@@Base+0x1a0>
    b2b0:	stp	x29, x30, [sp, #-32]!
    b2b4:	mov	w0, #0x1                   	// #1
    b2b8:	mov	x29, sp
    b2bc:	stp	x19, x20, [sp, #16]
    b2c0:	adrp	x20, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b2c4:	add	x20, x20, #0x218
    b2c8:	mov	x1, x20
    b2cc:	bl	b250 <appendstr@@Base+0x168>
    b2d0:	mov	w19, w0
    b2d4:	add	x1, x20, #0x98
    b2d8:	mov	w0, #0x2                   	// #2
    b2dc:	bl	b250 <appendstr@@Base+0x168>
    b2e0:	orr	w19, w19, w0
    b2e4:	add	x1, x20, #0x130
    b2e8:	mov	w0, #0xf                   	// #15
    b2ec:	bl	b250 <appendstr@@Base+0x168>
    b2f0:	orr	w19, w19, w0
    b2f4:	cmp	w19, #0x0
    b2f8:	csetm	w0, ne  // ne = any
    b2fc:	ldp	x19, x20, [sp, #16]
    b300:	ldp	x29, x30, [sp], #32
    b304:	ret
    b308:	stp	x29, x30, [sp, #-208]!
    b30c:	mov	x2, x1
    b310:	mov	x29, sp
    b314:	stp	x19, x20, [sp, #16]
    b318:	mov	x19, x1
    b31c:	mov	w20, w0
    b320:	mov	x1, #0x0                   	// #0
    b324:	bl	a860 <sigaction@plt>
    b328:	cbnz	w0, b39c <appendstr@@Base+0x2b4>
    b32c:	ldr	x1, [x19]
    b330:	cbz	x1, b340 <appendstr@@Base+0x258>
    b334:	ldp	x19, x20, [sp, #16]
    b338:	ldp	x29, x30, [sp], #208
    b33c:	ret
    b340:	add	x0, sp, #0x40
    b344:	adrp	x1, b000 <xgetcwd@plt>
    b348:	add	x1, x1, #0x480
    b34c:	str	x21, [sp, #32]
    b350:	stp	xzr, xzr, [sp, #64]
    b354:	add	x21, sp, #0x38
    b358:	stp	xzr, xzr, [x0, #16]
    b35c:	stp	xzr, xzr, [x0, #32]
    b360:	stp	xzr, xzr, [x0, #48]
    b364:	stp	xzr, xzr, [x0, #64]
    b368:	stp	xzr, xzr, [x0, #80]
    b36c:	stp	xzr, xzr, [x0, #96]
    b370:	stp	xzr, xzr, [x0, #112]
    b374:	stp	xzr, xzr, [x0, #128]
    b378:	str	x1, [sp, #56]
    b37c:	bl	a690 <sigemptyset@plt>
    b380:	mov	x1, x21
    b384:	mov	x2, x19
    b388:	mov	w0, w20
    b38c:	str	wzr, [sp, #192]
    b390:	bl	a860 <sigaction@plt>
    b394:	ldr	x21, [sp, #32]
    b398:	b	b334 <appendstr@@Base+0x24c>
    b39c:	mov	w0, #0xffffffff            	// #-1
    b3a0:	b	b334 <appendstr@@Base+0x24c>
    b3a4:	nop

000000000000b3a8 <do_cleanups_sigsafe@@Base>:
    b3a8:	stp	x29, x30, [sp, #-48]!
    b3ac:	mov	x29, sp
    b3b0:	stp	x19, x20, [sp, #16]
    b3b4:	adrp	x20, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b3b8:	add	x20, x20, #0x218
    b3bc:	str	x21, [sp, #32]
    b3c0:	mov	w21, w0
    b3c4:	ldr	w19, [x20, #456]
    b3c8:	ldr	w0, [x20, #460]
    b3cc:	cmp	w19, w0
    b3d0:	b.hi	b420 <do_cleanups_sigsafe@@Base+0x78>  // b.pmore
    b3d4:	cbz	w19, b410 <do_cleanups_sigsafe@@Base+0x68>
    b3d8:	sub	w19, w19, #0x1
    b3dc:	mov	w0, #0x18                  	// #24
    b3e0:	umull	x19, w19, w0
    b3e4:	nop
    b3e8:	ldr	x1, [x20, #464]
    b3ec:	add	x1, x1, x19
    b3f0:	cbz	w21, b3fc <do_cleanups_sigsafe@@Base+0x54>
    b3f4:	ldr	w0, [x1, #16]
    b3f8:	cbz	w0, b404 <do_cleanups_sigsafe@@Base+0x5c>
    b3fc:	ldp	x2, x0, [x1]
    b400:	blr	x2
    b404:	sub	x19, x19, #0x18
    b408:	cmn	x19, #0x18
    b40c:	b.ne	b3e8 <do_cleanups_sigsafe@@Base+0x40>  // b.any
    b410:	ldp	x19, x20, [sp, #16]
    b414:	ldr	x21, [sp, #32]
    b418:	ldp	x29, x30, [sp], #48
    b41c:	ret
    b420:	adrp	x3, 2b000 <vasnprintf@@Base+0x1e0>
    b424:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    b428:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    b42c:	add	x3, x3, #0xb08
    b430:	add	x1, x1, #0xad0
    b434:	add	x0, x0, #0xae0
    b438:	mov	w2, #0xa9                  	// #169
    b43c:	bl	aea0 <__assert_fail@plt>

000000000000b440 <do_cleanups@@Base>:
    b440:	stp	x29, x30, [sp, #-32]!
    b444:	mov	w0, #0x0                   	// #0
    b448:	mov	x29, sp
    b44c:	str	x19, [sp, #16]
    b450:	adrp	x19, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b454:	add	x19, x19, #0x218
    b458:	bl	abc0 <do_cleanups_sigsafe@plt>
    b45c:	ldr	x0, [x19, #464]
    b460:	str	wzr, [x19, #456]
    b464:	str	wzr, [x19, #460]
    b468:	bl	aa50 <free@plt>
    b46c:	str	xzr, [x19, #464]
    b470:	ldr	x19, [sp, #16]
    b474:	ldp	x29, x30, [sp], #32
    b478:	ret
    b47c:	nop
    b480:	stp	x29, x30, [sp, #-320]!
    b484:	mov	x29, sp
    b488:	stp	x19, x20, [sp, #16]
    b48c:	mov	w20, w0
    b490:	mov	w0, #0x1                   	// #1
    b494:	bl	abc0 <do_cleanups_sigsafe@plt>
    b498:	stp	xzr, xzr, [sp, #168]
    b49c:	add	x1, sp, #0x200
    b4a0:	stp	xzr, xzr, [sp, #184]
    b4a4:	add	x19, sp, #0xa8
    b4a8:	add	x0, x19, #0x8
    b4ac:	stp	xzr, xzr, [sp, #200]
    b4b0:	stp	xzr, xzr, [sp, #216]
    b4b4:	stp	xzr, xzr, [sp, #232]
    b4b8:	stp	xzr, xzr, [sp, #248]
    b4bc:	stp	xzr, xzr, [x1, #-248]
    b4c0:	stp	xzr, xzr, [x1, #-232]
    b4c4:	stp	xzr, xzr, [x1, #-216]
    b4c8:	str	xzr, [sp, #312]
    b4cc:	bl	a690 <sigemptyset@plt>
    b4d0:	mov	x1, x19
    b4d4:	mov	w0, w20
    b4d8:	mov	x2, #0x0                   	// #0
    b4dc:	str	wzr, [sp, #304]
    b4e0:	bl	a860 <sigaction@plt>
    b4e4:	cbnz	w0, b4f8 <do_cleanups@@Base+0xb8>
    b4e8:	add	x19, sp, #0x28
    b4ec:	mov	x0, x19
    b4f0:	bl	a690 <sigemptyset@plt>
    b4f4:	cbz	w0, b500 <do_cleanups@@Base+0xc0>
    b4f8:	mov	w0, #0x2                   	// #2
    b4fc:	bl	a2f0 <_exit@plt>
    b500:	mov	w1, w20
    b504:	mov	x0, x19
    b508:	bl	ae10 <sigaddset@plt>
    b50c:	cbnz	w0, b4f8 <do_cleanups@@Base+0xb8>
    b510:	mov	x1, x19
    b514:	mov	x2, #0x0                   	// #0
    b518:	mov	w0, #0x1                   	// #1
    b51c:	bl	a3d0 <sigprocmask@plt>
    b520:	cbnz	w0, b4f8 <do_cleanups@@Base+0xb8>
    b524:	bl	a5b0 <getpid@plt>
    b528:	mov	w1, w20
    b52c:	bl	a510 <kill@plt>
    b530:	bl	a900 <abort@plt>
    b534:	nop

000000000000b538 <push_cleanup@@Base>:
    b538:	stp	x29, x30, [sp, #-80]!
    b53c:	mov	x29, sp
    b540:	stp	x19, x20, [sp, #16]
    b544:	adrp	x20, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b548:	stp	x21, x22, [sp, #32]
    b54c:	add	x22, x20, #0x218
    b550:	stp	x23, x24, [sp, #48]
    b554:	ldr	w19, [x22, #456]
    b558:	ldr	w21, [x22, #460]
    b55c:	str	x25, [sp, #64]
    b560:	cmp	w19, w21
    b564:	b.hi	b674 <push_cleanup@@Base+0x13c>  // b.pmore
    b568:	mov	x25, x0
    b56c:	ldr	w0, [x22, #472]
    b570:	mov	x24, x1
    b574:	mov	w23, w2
    b578:	cbz	w0, b63c <push_cleanup@@Base+0x104>
    b57c:	cmp	w19, w21
    b580:	b.eq	b600 <push_cleanup@@Base+0xc8>  // b.none
    b584:	cmp	w21, w19
    b588:	b.ls	b698 <push_cleanup@@Base+0x160>  // b.plast
    b58c:	add	x20, x20, #0x218
    b590:	mov	w0, #0x18                  	// #24
    b594:	add	w2, w19, #0x1
    b598:	mov	x1, x20
    b59c:	umull	x19, w19, w0
    b5a0:	mov	w0, #0x1                   	// #1
    b5a4:	ldr	x4, [x20, #464]
    b5a8:	str	w2, [x20, #456]
    b5ac:	add	x3, x4, x19
    b5b0:	str	x25, [x4, x19]
    b5b4:	str	x24, [x3, #8]
    b5b8:	str	w23, [x3, #16]
    b5bc:	bl	b308 <appendstr@@Base+0x220>
    b5c0:	cbnz	w0, b664 <push_cleanup@@Base+0x12c>
    b5c4:	add	x1, x20, #0x98
    b5c8:	mov	w0, #0x2                   	// #2
    b5cc:	bl	b308 <appendstr@@Base+0x220>
    b5d0:	mov	w19, w0
    b5d4:	cbnz	w0, b664 <push_cleanup@@Base+0x12c>
    b5d8:	add	x1, x20, #0x130
    b5dc:	mov	w0, #0xf                   	// #15
    b5e0:	bl	b308 <appendstr@@Base+0x220>
    b5e4:	mov	w0, w19
    b5e8:	ldp	x19, x20, [sp, #16]
    b5ec:	ldp	x21, x22, [sp, #32]
    b5f0:	ldp	x23, x24, [sp, #48]
    b5f4:	ldr	x25, [sp, #64]
    b5f8:	ldp	x29, x30, [sp], #80
    b5fc:	ret
    b600:	add	x2, x20, #0x218
    b604:	add	w19, w19, #0x1
    b608:	mov	w1, #0x18                  	// #24
    b60c:	ldr	x0, [x2, #464]
    b610:	umull	x1, w19, w1
    b614:	cbz	x0, b658 <push_cleanup@@Base+0x120>
    b618:	bl	a660 <xrealloc@plt>
    b61c:	cbz	x0, b66c <push_cleanup@@Base+0x134>
    b620:	add	x1, x20, #0x218
    b624:	ldr	w21, [x1, #460]
    b628:	ldr	w19, [x1, #456]
    b62c:	add	w21, w21, #0x1
    b630:	str	w21, [x1, #460]
    b634:	str	x0, [x1, #464]
    b638:	b	b584 <push_cleanup@@Base+0x4c>
    b63c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
    b640:	ldr	x0, [x0, #3840]
    b644:	bl	2bab0 <vasnprintf@@Base+0xc90>
    b648:	cbnz	w0, b66c <push_cleanup@@Base+0x134>
    b64c:	mov	w0, #0x1                   	// #1
    b650:	str	w0, [x22, #472]
    b654:	b	b57c <push_cleanup@@Base+0x44>
    b658:	mov	x0, x1
    b65c:	bl	a710 <xmalloc@plt>
    b660:	b	b61c <push_cleanup@@Base+0xe4>
    b664:	mov	w19, #0x0                   	// #0
    b668:	b	b5e4 <push_cleanup@@Base+0xac>
    b66c:	mov	w19, #0xffffffff            	// #-1
    b670:	b	b5e4 <push_cleanup@@Base+0xac>
    b674:	adrp	x3, 2b000 <vasnprintf@@Base+0x1e0>
    b678:	add	x3, x3, #0xb08
    b67c:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    b680:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    b684:	add	x3, x3, #0x18
    b688:	add	x1, x1, #0xad0
    b68c:	add	x0, x0, #0xae0
    b690:	mov	w2, #0xc8                  	// #200
    b694:	bl	aea0 <__assert_fail@plt>
    b698:	adrp	x3, 2b000 <vasnprintf@@Base+0x1e0>
    b69c:	add	x3, x3, #0xb08
    b6a0:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    b6a4:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    b6a8:	add	x3, x3, #0x18
    b6ac:	add	x1, x1, #0xad0
    b6b0:	add	x0, x0, #0xaf0
    b6b4:	mov	w2, #0xe0                  	// #224
    b6b8:	bl	aea0 <__assert_fail@plt>
    b6bc:	nop

000000000000b6c0 <pop_cleanup@@Base>:
    b6c0:	adrp	x9, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b6c4:	add	x2, x9, #0x218
    b6c8:	ldr	w7, [x2, #456]
    b6cc:	cbz	w7, b760 <pop_cleanup@@Base+0xa0>
    b6d0:	ldr	x8, [x2, #464]
    b6d4:	sub	w6, w7, #0x1
    b6d8:	mov	w3, #0x18                  	// #24
    b6dc:	mov	w2, w7
    b6e0:	umaddl	x3, w6, w3, x8
    b6e4:	b	b6f0 <pop_cleanup@@Base+0x30>
    b6e8:	sub	x3, x3, #0x18
    b6ec:	cbz	w2, b75c <pop_cleanup@@Base+0x9c>
    b6f0:	ldr	x4, [x3]
    b6f4:	mov	w5, w2
    b6f8:	sub	w2, w2, #0x1
    b6fc:	cmp	x4, x0
    b700:	b.ne	b6e8 <pop_cleanup@@Base+0x28>  // b.any
    b704:	ldr	x4, [x3, #8]
    b708:	cmp	x4, x1
    b70c:	b.ne	b6e8 <pop_cleanup@@Base+0x28>  // b.any
    b710:	cmp	w7, w5
    b714:	b.ls	b74c <pop_cleanup@@Base+0x8c>  // b.plast
    b718:	mov	w1, #0x18                  	// #24
    b71c:	sub	w0, w5, #0x1
    b720:	mov	w4, w1
    b724:	umaddl	x5, w5, w1, x8
    b728:	umaddl	x1, w0, w4, x8
    b72c:	add	w0, w0, #0x1
    b730:	ldp	x2, x3, [x5]
    b734:	cmp	w6, w0
    b738:	add	x5, x5, #0x18
    b73c:	stp	x2, x3, [x1]
    b740:	ldur	x2, [x5, #-8]
    b744:	str	x2, [x1, #16]
    b748:	b.ne	b728 <pop_cleanup@@Base+0x68>  // b.any
    b74c:	add	x9, x9, #0x218
    b750:	str	w6, [x9, #456]
    b754:	cbnz	w6, b78c <pop_cleanup@@Base+0xcc>
    b758:	b	b2b0 <appendstr@@Base+0x1c8>
    b75c:	ret
    b760:	stp	x29, x30, [sp, #-16]!
    b764:	adrp	x3, 2b000 <vasnprintf@@Base+0x1e0>
    b768:	add	x3, x3, #0xb08
    b76c:	mov	x29, sp
    b770:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    b774:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    b778:	add	x3, x3, #0x28
    b77c:	add	x1, x1, #0xad0
    b780:	add	x0, x0, #0xb00
    b784:	mov	w2, #0xf5                  	// #245
    b788:	bl	aea0 <__assert_fail@plt>
    b78c:	ret

000000000000b790 <pop_all_cleanups@@Base>:
    b790:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    b794:	str	wzr, [x0, #992]
    b798:	b	b2b0 <appendstr@@Base+0x1c8>
    b79c:	nop

000000000000b7a0 <init_debug@@Base>:
    b7a0:	stp	x29, x30, [sp, #-16]!
    b7a4:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    b7a8:	add	x0, x0, #0xb40
    b7ac:	mov	x29, sp
    b7b0:	bl	aed0 <getenv@plt>
    b7b4:	cbz	x0, b7dc <init_debug@@Base+0x3c>
    b7b8:	ldrb	w1, [x0]
    b7bc:	cmp	w1, #0x31
    b7c0:	b.ne	b7dc <init_debug@@Base+0x3c>  // b.any
    b7c4:	ldrb	w0, [x0, #1]
    b7c8:	cbnz	w0, b7dc <init_debug@@Base+0x3c>
    b7cc:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
    b7d0:	mov	w1, #0x1                   	// #1
    b7d4:	ldr	x0, [x0, #3808]
    b7d8:	strb	w1, [x0]
    b7dc:	ldp	x29, x30, [sp], #16
    b7e0:	ret
    b7e4:	nop

000000000000b7e8 <debug@@Base>:
    b7e8:	stp	x29, x30, [sp, #-304]!
    b7ec:	adrp	x8, 46000 <vasnprintf@@Base+0x1b1e0>
    b7f0:	mov	x29, sp
    b7f4:	ldr	x8, [x8, #3808]
    b7f8:	str	q0, [sp, #112]
    b7fc:	str	q1, [sp, #128]
    b800:	str	q2, [sp, #144]
    b804:	ldrb	w8, [x8]
    b808:	str	q3, [sp, #160]
    b80c:	str	q4, [sp, #176]
    b810:	str	q5, [sp, #192]
    b814:	str	q6, [sp, #208]
    b818:	str	q7, [sp, #224]
    b81c:	stp	x1, x2, [sp, #248]
    b820:	stp	x3, x4, [sp, #264]
    b824:	stp	x5, x6, [sp, #280]
    b828:	str	x7, [sp, #296]
    b82c:	cbnz	w8, b838 <debug@@Base+0x50>
    b830:	ldp	x29, x30, [sp], #304
    b834:	ret
    b838:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
    b83c:	add	x2, sp, #0xf0
    b840:	add	x1, sp, #0x130
    b844:	mov	w5, #0xffffffc8            	// #-56
    b848:	ldr	x3, [x3, #3816]
    b84c:	mov	w4, #0xffffff80            	// #-128
    b850:	stp	x1, x1, [sp, #48]
    b854:	mov	x1, x0
    b858:	str	x2, [sp, #64]
    b85c:	add	x2, sp, #0x10
    b860:	stp	w5, w4, [sp, #72]
    b864:	ldp	x6, x7, [sp, #48]
    b868:	stp	x6, x7, [sp, #80]
    b86c:	ldp	x4, x5, [sp, #64]
    b870:	stp	x4, x5, [sp, #96]
    b874:	ldr	x0, [x3]
    b878:	stp	x6, x7, [sp, #16]
    b87c:	stp	x4, x5, [sp, #32]
    b880:	bl	ae80 <vfprintf@plt>
    b884:	ldp	x29, x30, [sp], #304
    b888:	ret
    b88c:	nop

000000000000b890 <debug_error@@Base>:
    b890:	stp	x29, x30, [sp, #-304]!
    b894:	adrp	x8, 46000 <vasnprintf@@Base+0x1b1e0>
    b898:	mov	x29, sp
    b89c:	ldr	x8, [x8, #3808]
    b8a0:	str	q0, [sp, #112]
    b8a4:	str	q1, [sp, #128]
    b8a8:	str	q2, [sp, #144]
    b8ac:	ldrb	w8, [x8]
    b8b0:	str	q3, [sp, #160]
    b8b4:	str	q4, [sp, #176]
    b8b8:	str	q5, [sp, #192]
    b8bc:	str	q6, [sp, #208]
    b8c0:	str	q7, [sp, #224]
    b8c4:	stp	x1, x2, [sp, #248]
    b8c8:	stp	x3, x4, [sp, #264]
    b8cc:	stp	x5, x6, [sp, #280]
    b8d0:	str	x7, [sp, #296]
    b8d4:	cbnz	w8, b8e0 <debug_error@@Base+0x50>
    b8d8:	ldp	x29, x30, [sp], #304
    b8dc:	ret
    b8e0:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
    b8e4:	add	x2, sp, #0xf0
    b8e8:	add	x1, sp, #0x130
    b8ec:	mov	w5, #0xffffffc8            	// #-56
    b8f0:	ldr	x3, [x3, #3816]
    b8f4:	mov	w4, #0xffffff80            	// #-128
    b8f8:	stp	x1, x1, [sp, #48]
    b8fc:	mov	x1, x0
    b900:	str	x2, [sp, #64]
    b904:	add	x2, sp, #0x10
    b908:	stp	w5, w4, [sp, #72]
    b90c:	ldp	x6, x7, [sp, #48]
    b910:	stp	x6, x7, [sp, #80]
    b914:	ldp	x4, x5, [sp, #64]
    b918:	stp	x4, x5, [sp, #96]
    b91c:	ldr	x0, [x3]
    b920:	stp	x6, x7, [sp, #16]
    b924:	stp	x4, x5, [sp, #32]
    b928:	bl	ae80 <vfprintf@plt>
    b92c:	bl	aeb0 <__errno_location@plt>
    b930:	ldr	w0, [x0]
    b934:	bl	a830 <strerror@plt>
    b938:	mov	x1, x0
    b93c:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    b940:	add	x0, x0, #0xb50
    b944:	bl	a570 <debug@plt>
    b948:	ldp	x29, x30, [sp], #304
    b94c:	ret

000000000000b950 <get_groff_preconv@@Base>:
    b950:	stp	x29, x30, [sp, #-48]!
    b954:	mov	x29, sp
    b958:	stp	x19, x20, [sp, #16]
    b95c:	adrp	x20, 46000 <vasnprintf@@Base+0x1b1e0>
    b960:	ldr	x20, [x20, #3832]
    b964:	ldr	x19, [x20]
    b968:	cbz	x19, b988 <get_groff_preconv@@Base+0x38>
    b96c:	ldrb	w0, [x19]
    b970:	cmp	w0, #0x0
    b974:	csel	x19, x19, xzr, ne  // ne = any
    b978:	mov	x0, x19
    b97c:	ldp	x19, x20, [sp, #16]
    b980:	ldp	x29, x30, [sp], #48
    b984:	ret
    b988:	str	x21, [sp, #32]
    b98c:	adrp	x21, 2b000 <vasnprintf@@Base+0x1e0>
    b990:	add	x21, x21, #0xb60
    b994:	mov	x0, x21
    b998:	bl	ae20 <pathsearch_executable@plt>
    b99c:	tst	w0, #0xff
    b9a0:	b.eq	b9c0 <get_groff_preconv@@Base+0x70>  // b.none
    b9a4:	str	x21, [x20]
    b9a8:	mov	x19, x21
    b9ac:	mov	x0, x19
    b9b0:	ldp	x19, x20, [sp, #16]
    b9b4:	ldr	x21, [sp, #32]
    b9b8:	ldp	x29, x30, [sp], #48
    b9bc:	ret
    b9c0:	adrp	x21, 2b000 <vasnprintf@@Base+0x1e0>
    b9c4:	add	x21, x21, #0xb58
    b9c8:	mov	x0, x21
    b9cc:	bl	ae20 <pathsearch_executable@plt>
    b9d0:	tst	w0, #0xff
    b9d4:	b.ne	b9a4 <get_groff_preconv@@Base+0x54>  // b.any
    b9d8:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
    b9dc:	add	x0, x0, #0x628
    b9e0:	ldr	x21, [sp, #32]
    b9e4:	str	x0, [x20]
    b9e8:	b	b978 <get_groff_preconv@@Base+0x28>
    b9ec:	nop

000000000000b9f0 <get_source_encoding@@Base>:
    b9f0:	stp	x29, x30, [sp, #-48]!
    b9f4:	mov	x29, sp
    b9f8:	str	x21, [sp, #32]
    b9fc:	cbz	x0, ba5c <get_source_encoding@@Base+0x6c>
    ba00:	mov	x21, x0
    ba04:	ldrb	w0, [x0]
    ba08:	cbz	w0, ba5c <get_source_encoding@@Base+0x6c>
    ba0c:	adrp	x0, 47000 <base_len@@Base+0x32c40>
    ba10:	stp	x19, x20, [sp, #16]
    ba14:	add	x20, x0, #0x6c0
    ba18:	ldr	x19, [x0, #1728]
    ba1c:	cbnz	x19, ba2c <get_source_encoding@@Base+0x3c>
    ba20:	b	ba84 <get_source_encoding@@Base+0x94>
    ba24:	ldr	x19, [x20, #16]!
    ba28:	cbz	x19, ba84 <get_source_encoding@@Base+0x94>
    ba2c:	mov	x0, x19
    ba30:	bl	a340 <strlen@plt>
    ba34:	mov	x1, x21
    ba38:	mov	x2, x0
    ba3c:	mov	x0, x19
    ba40:	bl	a6c0 <strncmp@plt>
    ba44:	cbnz	w0, ba24 <get_source_encoding@@Base+0x34>
    ba48:	ldr	x0, [x20, #8]
    ba4c:	ldp	x19, x20, [sp, #16]
    ba50:	ldr	x21, [sp, #32]
    ba54:	ldp	x29, x30, [sp], #48
    ba58:	ret
    ba5c:	mov	x1, #0x0                   	// #0
    ba60:	mov	w0, #0x5                   	// #5
    ba64:	bl	afd0 <setlocale@plt>
    ba68:	mov	x21, x0
    ba6c:	cbnz	x0, ba0c <get_source_encoding@@Base+0x1c>
    ba70:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    ba74:	add	x0, x0, #0x4b8
    ba78:	ldr	x21, [sp, #32]
    ba7c:	ldp	x29, x30, [sp], #48
    ba80:	ret
    ba84:	ldp	x19, x20, [sp, #16]
    ba88:	b	ba70 <get_source_encoding@@Base+0x80>
    ba8c:	nop

000000000000ba90 <get_canonical_charset_name@@Base>:
    ba90:	stp	x29, x30, [sp, #-48]!
    ba94:	mov	x29, sp
    ba98:	stp	x19, x20, [sp, #16]
    ba9c:	str	x21, [sp, #32]
    baa0:	mov	x21, x0
    baa4:	bl	a730 <xstrdup@plt>
    baa8:	ldrb	w19, [x0]
    baac:	mov	x20, x0
    bab0:	cbz	w19, bad0 <get_canonical_charset_name@@Base+0x40>
    bab4:	bl	a7f0 <__ctype_toupper_loc@plt>
    bab8:	ldr	x0, [x0]
    babc:	mov	x2, x20
    bac0:	ldr	w3, [x0, x19, lsl #2]
    bac4:	strb	w3, [x2]
    bac8:	ldrb	w19, [x2, #1]!
    bacc:	cbnz	w19, bac0 <get_canonical_charset_name@@Base+0x30>
    bad0:	adrp	x0, 47000 <base_len@@Base+0x32c40>
    bad4:	add	x0, x0, #0x6c0
    bad8:	add	x19, x0, #0x2e0
    badc:	ldr	x0, [x0, #736]
    bae0:	cbnz	x0, baf0 <get_canonical_charset_name@@Base+0x60>
    bae4:	b	bb18 <get_canonical_charset_name@@Base+0x88>
    bae8:	ldr	x0, [x19, #16]!
    baec:	cbz	x0, bb18 <get_canonical_charset_name@@Base+0x88>
    baf0:	mov	x1, x20
    baf4:	bl	a9b0 <strcmp@plt>
    baf8:	cbnz	w0, bae8 <get_canonical_charset_name@@Base+0x58>
    bafc:	mov	x0, x20
    bb00:	bl	aa50 <free@plt>
    bb04:	ldr	x0, [x19, #8]
    bb08:	ldp	x19, x20, [sp, #16]
    bb0c:	ldr	x21, [sp, #32]
    bb10:	ldp	x29, x30, [sp], #48
    bb14:	ret
    bb18:	mov	x0, x20
    bb1c:	bl	aa50 <free@plt>
    bb20:	mov	x0, x21
    bb24:	ldp	x19, x20, [sp, #16]
    bb28:	ldr	x21, [sp, #32]
    bb2c:	ldp	x29, x30, [sp], #48
    bb30:	ret
    bb34:	nop

000000000000bb38 <get_page_encoding@@Base>:
    bb38:	stp	x29, x30, [sp, #-48]!
    bb3c:	mov	x29, sp
    bb40:	stp	x19, x20, [sp, #16]
    bb44:	cbz	x0, bbb4 <get_page_encoding@@Base+0x7c>
    bb48:	mov	x20, x0
    bb4c:	ldrb	w0, [x0]
    bb50:	cbz	w0, bbb4 <get_page_encoding@@Base+0x7c>
    bb54:	mov	x0, x20
    bb58:	mov	w1, #0x2e                  	// #46
    bb5c:	bl	ab60 <strchr@plt>
    bb60:	cbnz	x0, bbdc <get_page_encoding@@Base+0xa4>
    bb64:	adrp	x0, 47000 <base_len@@Base+0x32c40>
    bb68:	str	x21, [sp, #32]
    bb6c:	add	x21, x0, #0x6c0
    bb70:	ldr	x19, [x0, #1728]
    bb74:	cbnz	x19, bb84 <get_page_encoding@@Base+0x4c>
    bb78:	b	bc24 <get_page_encoding@@Base+0xec>
    bb7c:	ldr	x19, [x21, #16]!
    bb80:	cbz	x19, bc24 <get_page_encoding@@Base+0xec>
    bb84:	mov	x0, x19
    bb88:	bl	a340 <strlen@plt>
    bb8c:	mov	x1, x20
    bb90:	mov	x2, x0
    bb94:	mov	x0, x19
    bb98:	bl	a6c0 <strncmp@plt>
    bb9c:	cbnz	w0, bb7c <get_page_encoding@@Base+0x44>
    bba0:	ldr	x0, [x21, #8]
    bba4:	ldp	x19, x20, [sp, #16]
    bba8:	ldr	x21, [sp, #32]
    bbac:	ldp	x29, x30, [sp], #48
    bbb0:	b	a730 <xstrdup@plt>
    bbb4:	mov	x1, #0x0                   	// #0
    bbb8:	mov	w0, #0x5                   	// #5
    bbbc:	bl	afd0 <setlocale@plt>
    bbc0:	mov	x20, x0
    bbc4:	cbnz	x0, bb54 <get_page_encoding@@Base+0x1c>
    bbc8:	ldp	x19, x20, [sp, #16]
    bbcc:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    bbd0:	ldp	x29, x30, [sp], #48
    bbd4:	add	x0, x0, #0x4b8
    bbd8:	b	a730 <xstrdup@plt>
    bbdc:	add	x19, x0, #0x1
    bbe0:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    bbe4:	add	x1, x1, #0xb70
    bbe8:	mov	x0, x19
    bbec:	bl	ae60 <strcspn@plt>
    bbf0:	mov	x1, x0
    bbf4:	mov	x0, x19
    bbf8:	bl	acf0 <xstrndup@plt>
    bbfc:	mov	x20, x0
    bc00:	bl	a330 <get_canonical_charset_name@plt>
    bc04:	bl	a730 <xstrdup@plt>
    bc08:	mov	x19, x0
    bc0c:	mov	x0, x20
    bc10:	bl	aa50 <free@plt>
    bc14:	mov	x0, x19
    bc18:	ldp	x19, x20, [sp, #16]
    bc1c:	ldp	x29, x30, [sp], #48
    bc20:	ret
    bc24:	ldp	x19, x20, [sp, #16]
    bc28:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    bc2c:	ldr	x21, [sp, #32]
    bc30:	add	x0, x0, #0x4b8
    bc34:	ldp	x29, x30, [sp], #48
    bc38:	b	a730 <xstrdup@plt>
    bc3c:	nop

000000000000bc40 <get_locale_charset@@Base>:
    bc40:	stp	x29, x30, [sp, #-32]!
    bc44:	mov	x1, #0x0                   	// #0
    bc48:	mov	w0, #0x0                   	// #0
    bc4c:	mov	x29, sp
    bc50:	stp	x19, x20, [sp, #16]
    bc54:	bl	afd0 <setlocale@plt>
    bc58:	mov	x19, x0
    bc5c:	cbz	x0, bc68 <get_locale_charset@@Base+0x28>
    bc60:	bl	a730 <xstrdup@plt>
    bc64:	mov	x19, x0
    bc68:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
    bc6c:	add	x1, x1, #0x628
    bc70:	mov	w0, #0x0                   	// #0
    bc74:	bl	afd0 <setlocale@plt>
    bc78:	bl	aee0 <locale_charset@plt>
    bc7c:	mov	x20, x0
    bc80:	mov	x1, x19
    bc84:	mov	w0, #0x0                   	// #0
    bc88:	bl	afd0 <setlocale@plt>
    bc8c:	mov	x0, x19
    bc90:	bl	aa50 <free@plt>
    bc94:	cbz	x20, bcb0 <get_locale_charset@@Base+0x70>
    bc98:	ldrb	w0, [x20]
    bc9c:	cbz	w0, bcb0 <get_locale_charset@@Base+0x70>
    bca0:	mov	x0, x20
    bca4:	ldp	x19, x20, [sp, #16]
    bca8:	ldp	x29, x30, [sp], #32
    bcac:	b	a330 <get_canonical_charset_name@plt>
    bcb0:	mov	x0, #0x0                   	// #0
    bcb4:	ldp	x19, x20, [sp, #16]
    bcb8:	ldp	x29, x30, [sp], #32
    bcbc:	ret

000000000000bcc0 <find_charset_locale@@Base>:
    bcc0:	stp	x29, x30, [sp, #-128]!
    bcc4:	mov	x29, sp
    bcc8:	stp	x19, x20, [sp, #16]
    bccc:	mov	x19, x0
    bcd0:	stp	x21, x22, [sp, #32]
    bcd4:	bl	a330 <get_canonical_charset_name@plt>
    bcd8:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    bcdc:	add	x1, x1, #0xb98
    bce0:	mov	x22, x0
    bce4:	stp	xzr, xzr, [sp, #80]
    bce8:	ldp	x2, x3, [x1]
    bcec:	stp	x2, x3, [sp, #96]
    bcf0:	ldrh	w0, [x1, #24]
    bcf4:	ldr	x1, [x1, #16]
    bcf8:	str	x1, [sp, #112]
    bcfc:	strh	w0, [sp, #120]
    bd00:	bl	ade0 <get_locale_charset@plt>
    bd04:	mov	x1, x0
    bd08:	mov	x0, x19
    bd0c:	mov	x19, #0x0                   	// #0
    bd10:	bl	a9b0 <strcmp@plt>
    bd14:	cbz	w0, be44 <find_charset_locale@@Base+0x184>
    bd18:	mov	x1, #0x0                   	// #0
    bd1c:	mov	w0, #0x0                   	// #0
    bd20:	str	x25, [sp, #64]
    bd24:	bl	afd0 <setlocale@plt>
    bd28:	mov	x25, x0
    bd2c:	cbz	x0, bd38 <find_charset_locale@@Base+0x78>
    bd30:	bl	a730 <xstrdup@plt>
    bd34:	mov	x25, x0
    bd38:	add	x0, sp, #0x60
    bd3c:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    bd40:	add	x1, x1, #0x598
    bd44:	bl	a5d0 <fopen@plt>
    bd48:	mov	x21, x0
    bd4c:	cbz	x0, be58 <find_charset_locale@@Base+0x198>
    bd50:	stp	x23, x24, [sp, #48]
    bd54:	add	x24, sp, #0x58
    bd58:	add	x23, sp, #0x50
    bd5c:	b	bde8 <find_charset_locale@@Base+0x128>
    bd60:	ldr	x20, [sp, #80]
    bd64:	mov	x0, x20
    bd68:	bl	ab60 <strchr@plt>
    bd6c:	mov	x19, x0
    bd70:	cbz	x0, bddc <find_charset_locale@@Base+0x11c>
    bd74:	add	x0, x0, #0x1
    bd78:	bl	a730 <xstrdup@plt>
    bd7c:	mov	w1, #0xa                   	// #10
    bd80:	mov	x20, x0
    bd84:	bl	ab60 <strchr@plt>
    bd88:	cbz	x0, bd90 <find_charset_locale@@Base+0xd0>
    bd8c:	strb	wzr, [x0]
    bd90:	mov	x0, x20
    bd94:	bl	a330 <get_canonical_charset_name@plt>
    bd98:	mov	x1, x0
    bd9c:	mov	x0, x22
    bda0:	bl	a9b0 <strcmp@plt>
    bda4:	cbnz	w0, bdd0 <find_charset_locale@@Base+0x110>
    bda8:	ldr	x0, [sp, #80]
    bdac:	sub	x1, x19, x0
    bdb0:	bl	acf0 <xstrndup@plt>
    bdb4:	mov	x19, x0
    bdb8:	mov	x1, x19
    bdbc:	mov	w0, #0x0                   	// #0
    bdc0:	bl	afd0 <setlocale@plt>
    bdc4:	cbnz	x0, bf78 <find_charset_locale@@Base+0x2b8>
    bdc8:	mov	x0, x19
    bdcc:	bl	aa50 <free@plt>
    bdd0:	mov	x0, x20
    bdd4:	bl	aa50 <free@plt>
    bdd8:	ldr	x20, [sp, #80]
    bddc:	mov	x0, x20
    bde0:	bl	aa50 <free@plt>
    bde4:	str	xzr, [sp, #80]
    bde8:	mov	x1, x24
    bdec:	mov	x3, x21
    bdf0:	mov	x0, x23
    bdf4:	mov	w2, #0xa                   	// #10
    bdf8:	bl	af10 <__getdelim@plt>
    bdfc:	mov	w1, #0x20                  	// #32
    be00:	tbz	x0, #63, bd60 <find_charset_locale@@Base+0xa0>
    be04:	mov	x0, x22
    be08:	bl	a340 <strlen@plt>
    be0c:	cmp	x0, #0x4
    be10:	b.hi	bee0 <find_charset_locale@@Base+0x220>  // b.pmore
    be14:	ldr	x0, [sp, #80]
    be18:	mov	x19, #0x0                   	// #0
    be1c:	bl	aa50 <free@plt>
    be20:	mov	x1, x25
    be24:	mov	w0, #0x0                   	// #0
    be28:	bl	afd0 <setlocale@plt>
    be2c:	mov	x0, x25
    be30:	bl	aa50 <free@plt>
    be34:	ldp	x23, x24, [sp, #48]
    be38:	mov	x0, x21
    be3c:	bl	a590 <fclose@plt>
    be40:	ldr	x25, [sp, #64]
    be44:	mov	x0, x19
    be48:	ldp	x19, x20, [sp, #16]
    be4c:	ldp	x21, x22, [sp, #32]
    be50:	ldp	x29, x30, [sp], #128
    be54:	ret
    be58:	mov	x0, x22
    be5c:	bl	a340 <strlen@plt>
    be60:	cmp	x0, #0x4
    be64:	b.ls	bea8 <find_charset_locale@@Base+0x1e8>  // b.plast
    be68:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    be6c:	mov	x0, x22
    be70:	add	x1, x1, #0xb78
    be74:	mov	x2, #0x5                   	// #5
    be78:	bl	a6c0 <strncmp@plt>
    be7c:	cbnz	w0, bea8 <find_charset_locale@@Base+0x1e8>
    be80:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    be84:	add	x0, x0, #0xb80
    be88:	bl	a730 <xstrdup@plt>
    be8c:	mov	x19, x0
    be90:	mov	x1, x19
    be94:	mov	w0, #0x0                   	// #0
    be98:	bl	afd0 <setlocale@plt>
    be9c:	cbz	x0, bf88 <find_charset_locale@@Base+0x2c8>
    bea0:	ldr	x0, [sp, #80]
    bea4:	b	beb0 <find_charset_locale@@Base+0x1f0>
    bea8:	ldr	x0, [sp, #80]
    beac:	mov	x19, #0x0                   	// #0
    beb0:	bl	aa50 <free@plt>
    beb4:	mov	x1, x25
    beb8:	mov	w0, #0x0                   	// #0
    bebc:	bl	afd0 <setlocale@plt>
    bec0:	mov	x0, x25
    bec4:	bl	aa50 <free@plt>
    bec8:	mov	x0, x19
    becc:	ldp	x19, x20, [sp, #16]
    bed0:	ldp	x21, x22, [sp, #32]
    bed4:	ldr	x25, [sp, #64]
    bed8:	ldp	x29, x30, [sp], #128
    bedc:	ret
    bee0:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    bee4:	mov	x0, x22
    bee8:	add	x1, x1, #0xb78
    beec:	mov	x2, #0x5                   	// #5
    bef0:	bl	a6c0 <strncmp@plt>
    bef4:	cbnz	w0, be14 <find_charset_locale@@Base+0x154>
    bef8:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    befc:	add	x0, x0, #0xb80
    bf00:	bl	a730 <xstrdup@plt>
    bf04:	mov	x19, x0
    bf08:	mov	x1, x19
    bf0c:	mov	w0, #0x0                   	// #0
    bf10:	bl	afd0 <setlocale@plt>
    bf14:	cbnz	x0, bf80 <find_charset_locale@@Base+0x2c0>
    bf18:	mov	x0, x19
    bf1c:	bl	aa50 <free@plt>
    bf20:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    bf24:	add	x0, x0, #0xb88
    bf28:	bl	a730 <xstrdup@plt>
    bf2c:	mov	x19, x0
    bf30:	mov	x1, x19
    bf34:	mov	w0, #0x0                   	// #0
    bf38:	bl	afd0 <setlocale@plt>
    bf3c:	cbnz	x0, bf80 <find_charset_locale@@Base+0x2c0>
    bf40:	ldp	x23, x24, [sp, #48]
    bf44:	mov	x0, x19
    bf48:	bl	aa50 <free@plt>
    bf4c:	mov	x19, #0x0                   	// #0
    bf50:	ldr	x0, [sp, #80]
    bf54:	bl	aa50 <free@plt>
    bf58:	mov	x1, x25
    bf5c:	mov	w0, #0x0                   	// #0
    bf60:	bl	afd0 <setlocale@plt>
    bf64:	mov	x0, x25
    bf68:	bl	aa50 <free@plt>
    bf6c:	cbnz	x21, be38 <find_charset_locale@@Base+0x178>
    bf70:	ldr	x25, [sp, #64]
    bf74:	b	be44 <find_charset_locale@@Base+0x184>
    bf78:	mov	x0, x20
    bf7c:	bl	aa50 <free@plt>
    bf80:	ldr	x0, [sp, #80]
    bf84:	b	be1c <find_charset_locale@@Base+0x15c>
    bf88:	mov	x0, x19
    bf8c:	bl	aa50 <free@plt>
    bf90:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    bf94:	add	x0, x0, #0xb88
    bf98:	bl	a730 <xstrdup@plt>
    bf9c:	mov	x19, x0
    bfa0:	mov	x1, x19
    bfa4:	mov	w0, #0x0                   	// #0
    bfa8:	bl	afd0 <setlocale@plt>
    bfac:	cbz	x0, bf44 <find_charset_locale@@Base+0x284>
    bfb0:	ldr	x0, [sp, #80]
    bfb4:	b	beb0 <find_charset_locale@@Base+0x1f0>

000000000000bfb8 <is_roff_device@@Base>:
    bfb8:	stp	x29, x30, [sp, #-32]!
    bfbc:	adrp	x1, 47000 <base_len@@Base+0x32c40>
    bfc0:	add	x1, x1, #0x6c0
    bfc4:	mov	x29, sp
    bfc8:	stp	x19, x20, [sp, #16]
    bfcc:	mov	x20, x0
    bfd0:	ldr	x0, [x1, #1440]
    bfd4:	cbz	x0, c004 <is_roff_device@@Base+0x4c>
    bfd8:	add	x19, x1, #0x5a0
    bfdc:	b	bfe8 <is_roff_device@@Base+0x30>
    bfe0:	ldr	x0, [x19, #24]!
    bfe4:	cbz	x0, bff8 <is_roff_device@@Base+0x40>
    bfe8:	mov	x1, x20
    bfec:	bl	a9b0 <strcmp@plt>
    bff0:	cbnz	w0, bfe0 <is_roff_device@@Base+0x28>
    bff4:	mov	w0, #0x1                   	// #1
    bff8:	ldp	x19, x20, [sp, #16]
    bffc:	ldp	x29, x30, [sp], #32
    c000:	ret
    c004:	mov	w0, #0x0                   	// #0
    c008:	b	bff8 <is_roff_device@@Base+0x40>
    c00c:	nop

000000000000c010 <get_roff_encoding@@Base>:
    c010:	stp	x29, x30, [sp, #-48]!
    c014:	mov	x29, sp
    c018:	stp	x19, x20, [sp, #16]
    c01c:	cbz	x0, c08c <get_roff_encoding@@Base+0x7c>
    c020:	mov	x20, x0
    c024:	adrp	x0, 47000 <base_len@@Base+0x32c40>
    c028:	add	x0, x0, #0x6c0
    c02c:	stp	x21, x22, [sp, #32]
    c030:	add	x19, x0, #0x5a0
    c034:	mov	x21, x1
    c038:	ldr	x0, [x0, #1440]
    c03c:	cbnz	x0, c04c <get_roff_encoding@@Base+0x3c>
    c040:	b	c16c <get_roff_encoding@@Base+0x15c>
    c044:	ldr	x0, [x19, #24]!
    c048:	cbz	x0, c16c <get_roff_encoding@@Base+0x15c>
    c04c:	mov	x1, x20
    c050:	bl	a9b0 <strcmp@plt>
    c054:	cbnz	w0, c044 <get_roff_encoding@@Base+0x34>
    c058:	mov	x0, x20
    c05c:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c060:	add	x1, x1, #0xbb8
    c064:	bl	a9b0 <strcmp@plt>
    c068:	ldr	x19, [x19, #8]
    c06c:	cbz	w0, c0a8 <get_roff_encoding@@Base+0x98>
    c070:	cmp	x19, #0x0
    c074:	csel	x19, x19, x21, ne  // ne = any
    c078:	ldp	x21, x22, [sp, #32]
    c07c:	mov	x0, x19
    c080:	ldp	x19, x20, [sp, #16]
    c084:	ldp	x29, x30, [sp], #48
    c088:	ret
    c08c:	adrp	x19, 2c000 <vasnprintf@@Base+0x11e0>
    c090:	add	x19, x19, #0x4b8
    c094:	add	x19, x19, #0x10
    c098:	mov	x0, x19
    c09c:	ldp	x19, x20, [sp, #16]
    c0a0:	ldp	x29, x30, [sp], #48
    c0a4:	ret
    c0a8:	bl	a6a0 <get_groff_preconv@plt>
    c0ac:	cbnz	x0, c070 <get_roff_encoding@@Base+0x60>
    c0b0:	bl	ade0 <get_locale_charset@plt>
    c0b4:	adrp	x20, 2b000 <vasnprintf@@Base+0x1e0>
    c0b8:	add	x1, x20, #0xb78
    c0bc:	bl	a9b0 <strcmp@plt>
    c0c0:	cbnz	w0, c070 <get_roff_encoding@@Base+0x60>
    c0c4:	mov	x1, #0x0                   	// #0
    c0c8:	mov	w0, #0x0                   	// #0
    c0cc:	bl	afd0 <setlocale@plt>
    c0d0:	mov	x22, x0
    c0d4:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c0d8:	mov	x2, #0x5                   	// #5
    c0dc:	add	x1, x1, #0xbc0
    c0e0:	bl	a6c0 <strncmp@plt>
    c0e4:	cbz	w0, c160 <get_roff_encoding@@Base+0x150>
    c0e8:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c0ec:	mov	x0, x22
    c0f0:	add	x1, x1, #0xbc8
    c0f4:	mov	x2, #0x5                   	// #5
    c0f8:	bl	a6c0 <strncmp@plt>
    c0fc:	cbz	w0, c160 <get_roff_encoding@@Base+0x150>
    c100:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c104:	mov	x0, x22
    c108:	add	x1, x1, #0xbd0
    c10c:	mov	x2, #0x5                   	// #5
    c110:	bl	a6c0 <strncmp@plt>
    c114:	cbz	w0, c160 <get_roff_encoding@@Base+0x150>
    c118:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c11c:	mov	x0, x22
    c120:	add	x1, x1, #0xbd8
    c124:	mov	x2, #0x5                   	// #5
    c128:	bl	a6c0 <strncmp@plt>
    c12c:	cbz	w0, c160 <get_roff_encoding@@Base+0x150>
    c130:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c134:	mov	x0, x22
    c138:	add	x1, x1, #0xbe0
    c13c:	mov	x2, #0x5                   	// #5
    c140:	bl	a6c0 <strncmp@plt>
    c144:	cbz	w0, c160 <get_roff_encoding@@Base+0x150>
    c148:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c14c:	mov	x0, x22
    c150:	add	x1, x1, #0xbe8
    c154:	mov	x2, #0x5                   	// #5
    c158:	bl	a6c0 <strncmp@plt>
    c15c:	cbnz	w0, c070 <get_roff_encoding@@Base+0x60>
    c160:	add	x19, x20, #0xb78
    c164:	ldp	x21, x22, [sp, #32]
    c168:	b	c07c <get_roff_encoding@@Base+0x6c>
    c16c:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c170:	mov	x0, x20
    c174:	add	x1, x1, #0xbb8
    c178:	bl	a9b0 <strcmp@plt>
    c17c:	cbz	w0, c1a0 <get_roff_encoding@@Base+0x190>
    c180:	adrp	x19, 2c000 <vasnprintf@@Base+0x11e0>
    c184:	add	x19, x19, #0x4b8
    c188:	add	x19, x19, #0x10
    c18c:	mov	x0, x19
    c190:	ldp	x19, x20, [sp, #16]
    c194:	ldp	x21, x22, [sp, #32]
    c198:	ldp	x29, x30, [sp], #48
    c19c:	ret
    c1a0:	bl	a6a0 <get_groff_preconv@plt>
    c1a4:	cbnz	x0, c180 <get_roff_encoding@@Base+0x170>
    c1a8:	bl	ade0 <get_locale_charset@plt>
    c1ac:	adrp	x19, 2c000 <vasnprintf@@Base+0x11e0>
    c1b0:	add	x19, x19, #0x4b8
    c1b4:	adrp	x20, 2b000 <vasnprintf@@Base+0x1e0>
    c1b8:	add	x19, x19, #0x10
    c1bc:	add	x1, x20, #0xb78
    c1c0:	bl	a9b0 <strcmp@plt>
    c1c4:	cbz	w0, c0c4 <get_roff_encoding@@Base+0xb4>
    c1c8:	ldp	x21, x22, [sp, #32]
    c1cc:	b	c07c <get_roff_encoding@@Base+0x6c>

000000000000c1d0 <get_default_device@@Base>:
    c1d0:	stp	x29, x30, [sp, #-80]!
    c1d4:	mov	x29, sp
    c1d8:	stp	x19, x20, [sp, #16]
    c1dc:	mov	x20, x0
    c1e0:	stp	x21, x22, [sp, #32]
    c1e4:	mov	x21, x1
    c1e8:	bl	a6a0 <get_groff_preconv@plt>
    c1ec:	cbz	x0, c22c <get_default_device@@Base+0x5c>
    c1f0:	cbz	x20, c394 <get_default_device@@Base+0x1c4>
    c1f4:	mov	x0, x20
    c1f8:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c1fc:	add	x1, x1, #0xc00
    c200:	bl	a9b0 <strcmp@plt>
    c204:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c208:	cmp	w0, #0x0
    c20c:	add	x1, x1, #0xbf8
    c210:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    c214:	add	x0, x0, #0xbb8
    c218:	csel	x0, x0, x1, ne  // ne = any
    c21c:	ldp	x19, x20, [sp, #16]
    c220:	ldp	x21, x22, [sp, #32]
    c224:	ldp	x29, x30, [sp], #80
    c228:	ret
    c22c:	cbz	x20, c300 <get_default_device@@Base+0x130>
    c230:	adrp	x0, 47000 <base_len@@Base+0x32c40>
    c234:	add	x0, x0, #0x6c0
    c238:	add	x19, x0, #0x708
    c23c:	ldr	x0, [x0, #1800]
    c240:	cbz	x0, c300 <get_default_device@@Base+0x130>
    c244:	stp	x23, x24, [sp, #48]
    c248:	adrp	x23, 2b000 <vasnprintf@@Base+0x1e0>
    c24c:	adrp	x24, 2b000 <vasnprintf@@Base+0x1e0>
    c250:	add	x23, x23, #0xc00
    c254:	add	x24, x24, #0xb78
    c258:	str	x25, [sp, #64]
    c25c:	adrp	x25, 2b000 <vasnprintf@@Base+0x1e0>
    c260:	b	c26c <get_default_device@@Base+0x9c>
    c264:	ldr	x0, [x19, #16]!
    c268:	cbz	x0, c2f8 <get_default_device@@Base+0x128>
    c26c:	mov	x1, x20
    c270:	bl	a9b0 <strcmp@plt>
    c274:	cbnz	w0, c264 <get_default_device@@Base+0x94>
    c278:	ldr	x0, [x19, #8]
    c27c:	mov	x1, x21
    c280:	bl	a400 <get_roff_encoding@plt>
    c284:	mov	x22, x0
    c288:	mov	x1, x22
    c28c:	mov	x0, x21
    c290:	bl	a9b0 <strcmp@plt>
    c294:	cbz	w0, c2e8 <get_default_device@@Base+0x118>
    c298:	mov	x1, x23
    c29c:	mov	x0, x21
    c2a0:	bl	a9b0 <strcmp@plt>
    c2a4:	cbz	w0, c2e8 <get_default_device@@Base+0x118>
    c2a8:	mov	x1, x24
    c2ac:	mov	x0, x21
    c2b0:	bl	a9b0 <strcmp@plt>
    c2b4:	cbz	w0, c2e8 <get_default_device@@Base+0x118>
    c2b8:	mov	x1, x23
    c2bc:	mov	x0, x22
    c2c0:	bl	a9b0 <strcmp@plt>
    c2c4:	cbz	w0, c2e8 <get_default_device@@Base+0x118>
    c2c8:	add	x1, x25, #0xc10
    c2cc:	mov	x0, x21
    c2d0:	bl	a9b0 <strcmp@plt>
    c2d4:	cbnz	w0, c318 <get_default_device@@Base+0x148>
    c2d8:	mov	x0, x22
    c2dc:	mov	x1, x24
    c2e0:	bl	a9b0 <strcmp@plt>
    c2e4:	cbnz	w0, c264 <get_default_device@@Base+0x94>
    c2e8:	ldr	x0, [x19, #8]
    c2ec:	ldp	x23, x24, [sp, #48]
    c2f0:	ldr	x25, [sp, #64]
    c2f4:	b	c21c <get_default_device@@Base+0x4c>
    c2f8:	ldp	x23, x24, [sp, #48]
    c2fc:	ldr	x25, [sp, #64]
    c300:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    c304:	add	x0, x0, #0xbf0
    c308:	ldp	x19, x20, [sp, #16]
    c30c:	ldp	x21, x22, [sp, #32]
    c310:	ldp	x29, x30, [sp], #80
    c314:	ret
    c318:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c31c:	mov	x0, x21
    c320:	add	x1, x1, #0xc18
    c324:	bl	a9b0 <strcmp@plt>
    c328:	cbz	w0, c2d8 <get_default_device@@Base+0x108>
    c32c:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c330:	mov	x0, x21
    c334:	add	x1, x1, #0xc28
    c338:	bl	a9b0 <strcmp@plt>
    c33c:	cbz	w0, c2d8 <get_default_device@@Base+0x108>
    c340:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c344:	mov	x0, x21
    c348:	add	x1, x1, #0xc30
    c34c:	bl	a9b0 <strcmp@plt>
    c350:	cbz	w0, c2d8 <get_default_device@@Base+0x108>
    c354:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c358:	mov	x0, x21
    c35c:	add	x1, x1, #0xc38
    c360:	bl	a9b0 <strcmp@plt>
    c364:	cbz	w0, c2d8 <get_default_device@@Base+0x108>
    c368:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c36c:	mov	x0, x21
    c370:	add	x1, x1, #0xc40
    c374:	bl	a9b0 <strcmp@plt>
    c378:	cbz	w0, c2d8 <get_default_device@@Base+0x108>
    c37c:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c380:	mov	x0, x21
    c384:	add	x1, x1, #0xc48
    c388:	bl	a9b0 <strcmp@plt>
    c38c:	cbnz	w0, c264 <get_default_device@@Base+0x94>
    c390:	b	c2d8 <get_default_device@@Base+0x108>
    c394:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    c398:	add	x0, x0, #0xbb8
    c39c:	ldp	x19, x20, [sp, #16]
    c3a0:	ldp	x21, x22, [sp, #32]
    c3a4:	ldp	x29, x30, [sp], #80
    c3a8:	ret
    c3ac:	nop

000000000000c3b0 <get_output_encoding@@Base>:
    c3b0:	stp	x29, x30, [sp, #-32]!
    c3b4:	adrp	x1, 47000 <base_len@@Base+0x32c40>
    c3b8:	add	x1, x1, #0x6c0
    c3bc:	mov	x29, sp
    c3c0:	stp	x19, x20, [sp, #16]
    c3c4:	mov	x20, x0
    c3c8:	ldr	x0, [x1, #1440]
    c3cc:	cbz	x0, c3f0 <get_output_encoding@@Base+0x40>
    c3d0:	add	x19, x1, #0x5a0
    c3d4:	b	c3e0 <get_output_encoding@@Base+0x30>
    c3d8:	ldr	x0, [x19, #24]!
    c3dc:	cbz	x0, c3f0 <get_output_encoding@@Base+0x40>
    c3e0:	mov	x1, x20
    c3e4:	bl	a9b0 <strcmp@plt>
    c3e8:	cbnz	w0, c3d8 <get_output_encoding@@Base+0x28>
    c3ec:	ldr	x0, [x19, #16]
    c3f0:	ldp	x19, x20, [sp, #16]
    c3f4:	ldp	x29, x30, [sp], #32
    c3f8:	ret
    c3fc:	nop

000000000000c400 <get_less_charset@@Base>:
    c400:	cbz	x0, c468 <get_less_charset@@Base+0x68>
    c404:	stp	x29, x30, [sp, #-32]!
    c408:	mov	x29, sp
    c40c:	stp	x19, x20, [sp, #16]
    c410:	mov	x20, x0
    c414:	adrp	x0, 47000 <base_len@@Base+0x32c40>
    c418:	add	x0, x0, #0x6c0
    c41c:	add	x19, x0, #0x7a8
    c420:	ldr	x0, [x0, #1960]
    c424:	cbnz	x0, c434 <get_less_charset@@Base+0x34>
    c428:	b	c450 <get_less_charset@@Base+0x50>
    c42c:	ldr	x0, [x19, #24]!
    c430:	cbz	x0, c450 <get_less_charset@@Base+0x50>
    c434:	mov	x1, x20
    c438:	bl	a9b0 <strcmp@plt>
    c43c:	cbnz	w0, c42c <get_less_charset@@Base+0x2c>
    c440:	ldr	x0, [x19, #8]
    c444:	ldp	x19, x20, [sp, #16]
    c448:	ldp	x29, x30, [sp], #32
    c44c:	ret
    c450:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    c454:	add	x0, x0, #0x4b8
    c458:	add	x0, x0, #0x20
    c45c:	ldp	x19, x20, [sp, #16]
    c460:	ldp	x29, x30, [sp], #32
    c464:	ret
    c468:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    c46c:	add	x0, x0, #0x4b8
    c470:	add	x0, x0, #0x20
    c474:	ret

000000000000c478 <get_jless_charset@@Base>:
    c478:	cbz	x0, c4c8 <get_jless_charset@@Base+0x50>
    c47c:	stp	x29, x30, [sp, #-32]!
    c480:	mov	x29, sp
    c484:	stp	x19, x20, [sp, #16]
    c488:	mov	x20, x0
    c48c:	adrp	x0, 47000 <base_len@@Base+0x32c40>
    c490:	add	x0, x0, #0x6c0
    c494:	add	x19, x0, #0x7a8
    c498:	ldr	x0, [x0, #1960]
    c49c:	cbnz	x0, c4ac <get_jless_charset@@Base+0x34>
    c4a0:	b	c4bc <get_jless_charset@@Base+0x44>
    c4a4:	ldr	x0, [x19, #24]!
    c4a8:	cbz	x0, c4bc <get_jless_charset@@Base+0x44>
    c4ac:	mov	x1, x20
    c4b0:	bl	a9b0 <strcmp@plt>
    c4b4:	cbnz	w0, c4a4 <get_jless_charset@@Base+0x2c>
    c4b8:	ldr	x0, [x19, #16]
    c4bc:	ldp	x19, x20, [sp, #16]
    c4c0:	ldp	x29, x30, [sp], #32
    c4c4:	ret
    c4c8:	mov	x0, #0x0                   	// #0
    c4cc:	ret

000000000000c4d0 <check_preprocessor_encoding@@Base>:
    c4d0:	stp	x29, x30, [sp, #-96]!
    c4d4:	mov	x29, sp
    c4d8:	stp	x21, x22, [sp, #32]
    c4dc:	mov	x22, x1
    c4e0:	stp	x23, x24, [sp, #48]
    c4e4:	mov	x23, x2
    c4e8:	bl	abb0 <pipeline_peekline@plt>
    c4ec:	cbz	x0, c5b8 <check_preprocessor_encoding@@Base+0xe8>
    c4f0:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c4f4:	mov	x21, x0
    c4f8:	add	x1, x1, #0xc50
    c4fc:	mov	x2, #0x4                   	// #4
    c500:	bl	a6c0 <strncmp@plt>
    c504:	cbnz	w0, c5d0 <check_preprocessor_encoding@@Base+0x100>
    c508:	mov	x0, x21
    c50c:	mov	w1, #0xa                   	// #10
    c510:	stp	x19, x20, [sp, #16]
    c514:	bl	ab60 <strchr@plt>
    c518:	add	x19, x21, #0x4
    c51c:	mov	x20, x0
    c520:	cbz	x0, c774 <check_preprocessor_encoding@@Base+0x2a4>
    c524:	adrp	x2, 2b000 <vasnprintf@@Base+0x1e0>
    c528:	sub	x1, x20, x19
    c52c:	add	x2, x2, #0xc60
    c530:	mov	x0, x19
    c534:	mov	x3, #0x3                   	// #3
    c538:	bl	a8a0 <memmem@plt>
    c53c:	cbz	x0, c5b4 <check_preprocessor_encoding@@Base+0xe4>
    c540:	add	x19, x0, #0x3
    c544:	adrp	x24, 2b000 <vasnprintf@@Base+0x1e0>
    c548:	cmp	x19, #0x0
    c54c:	add	x24, x24, #0xc68
    c550:	ccmp	x19, x20, #0x2, ne  // ne = any
    c554:	b.cs	c5b4 <check_preprocessor_encoding@@Base+0xe4>  // b.hs, b.nlast
    c558:	ldrb	w0, [x19]
    c55c:	cbz	w0, c5b4 <check_preprocessor_encoding@@Base+0xe4>
    c560:	cmp	w0, #0x20
    c564:	b.ne	c574 <check_preprocessor_encoding@@Base+0xa4>  // b.any
    c568:	ldrb	w3, [x19, #1]!
    c56c:	cmp	w3, #0x20
    c570:	b.eq	c568 <check_preprocessor_encoding@@Base+0x98>  // b.none
    c574:	mov	x1, x24
    c578:	mov	x0, x19
    c57c:	mov	x2, #0x7                   	// #7
    c580:	bl	a6c0 <strncmp@plt>
    c584:	cbz	w0, c608 <check_preprocessor_encoding@@Base+0x138>
    c588:	sub	x2, x20, x19
    c58c:	mov	x0, x19
    c590:	mov	w1, #0x3b                  	// #59
    c594:	bl	ac90 <memchr@plt>
    c598:	cmp	x0, #0x0
    c59c:	mov	x19, x0
    c5a0:	cset	w0, ne  // ne = any
    c5a4:	add	x19, x19, x0
    c5a8:	cmp	x19, #0x0
    c5ac:	ccmp	x19, x20, #0x2, ne  // ne = any
    c5b0:	b.cc	c558 <check_preprocessor_encoding@@Base+0x88>  // b.lo, b.ul, b.last
    c5b4:	ldp	x19, x20, [sp, #16]
    c5b8:	mov	x24, #0x0                   	// #0
    c5bc:	mov	x0, x24
    c5c0:	ldp	x21, x22, [sp, #32]
    c5c4:	ldp	x23, x24, [sp, #48]
    c5c8:	ldp	x29, x30, [sp], #96
    c5cc:	ret
    c5d0:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c5d4:	mov	x0, x21
    c5d8:	add	x1, x1, #0xc58
    c5dc:	mov	x2, #0x4                   	// #4
    c5e0:	bl	a6c0 <strncmp@plt>
    c5e4:	cbnz	w0, c5b8 <check_preprocessor_encoding@@Base+0xe8>
    c5e8:	mov	x0, x21
    c5ec:	mov	w1, #0xa                   	// #10
    c5f0:	stp	x19, x20, [sp, #16]
    c5f4:	bl	ab60 <strchr@plt>
    c5f8:	add	x19, x21, #0x4
    c5fc:	mov	x20, x0
    c600:	cbnz	x0, c524 <check_preprocessor_encoding@@Base+0x54>
    c604:	b	c774 <check_preprocessor_encoding@@Base+0x2a4>
    c608:	stp	x25, x26, [sp, #64]
    c60c:	add	x19, x19, #0x7
    c610:	ldrb	w0, [x19]
    c614:	cmp	w0, #0x20
    c618:	b.ne	c62c <check_preprocessor_encoding@@Base+0x15c>  // b.any
    c61c:	nop
    c620:	ldrb	w0, [x19, #1]!
    c624:	cmp	w0, #0x20
    c628:	b.eq	c620 <check_preprocessor_encoding@@Base+0x150>  // b.none
    c62c:	mov	x0, x19
    c630:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c634:	add	x1, x1, #0xc70
    c638:	bl	ab40 <strspn@plt>
    c63c:	mov	x26, x0
    c640:	mov	x0, x19
    c644:	mov	x1, x26
    c648:	bl	acf0 <xstrndup@plt>
    c64c:	mov	x24, x0
    c650:	bl	a340 <strlen@plt>
    c654:	mov	x25, x0
    c658:	cmp	x0, #0x4
    c65c:	b.ls	c6c4 <check_preprocessor_encoding@@Base+0x1f4>  // b.plast
    c660:	stp	x27, x28, [sp, #80]
    c664:	sub	x28, x0, #0x4
    c668:	add	x27, x24, x28
    c66c:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c670:	mov	x0, x27
    c674:	add	x1, x1, #0xcb8
    c678:	bl	a7c0 <strcasecmp@plt>
    c67c:	cbnz	w0, c684 <check_preprocessor_encoding@@Base+0x1b4>
    c680:	strb	wzr, [x24, x28]
    c684:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c688:	mov	x0, x27
    c68c:	add	x1, x1, #0xcf8
    c690:	bl	a7c0 <strcasecmp@plt>
    c694:	cbnz	w0, c69c <check_preprocessor_encoding@@Base+0x1cc>
    c698:	strb	wzr, [x27]
    c69c:	cmp	x25, #0x5
    c6a0:	b.eq	c7bc <check_preprocessor_encoding@@Base+0x2ec>  // b.none
    c6a4:	sub	x25, x25, #0x5
    c6a8:	adrp	x1, 2b000 <vasnprintf@@Base+0x1e0>
    c6ac:	add	x0, x24, x25
    c6b0:	add	x1, x1, #0xcc0
    c6b4:	bl	a7c0 <strcasecmp@plt>
    c6b8:	cbnz	w0, c7bc <check_preprocessor_encoding@@Base+0x2ec>
    c6bc:	strb	wzr, [x24, x25]
    c6c0:	ldp	x27, x28, [sp, #80]
    c6c4:	adrp	x0, 47000 <base_len@@Base+0x32c40>
    c6c8:	add	x0, x0, #0x6c0
    c6cc:	add	x25, x0, #0x868
    c6d0:	ldr	x0, [x0, #2152]
    c6d4:	cbnz	x0, c6e4 <check_preprocessor_encoding@@Base+0x214>
    c6d8:	b	c784 <check_preprocessor_encoding@@Base+0x2b4>
    c6dc:	ldr	x0, [x25, #16]!
    c6e0:	cbz	x0, c784 <check_preprocessor_encoding@@Base+0x2b4>
    c6e4:	mov	x1, x24
    c6e8:	bl	a7c0 <strcasecmp@plt>
    c6ec:	cbnz	w0, c6dc <check_preprocessor_encoding@@Base+0x20c>
    c6f0:	mov	x0, x24
    c6f4:	bl	aa50 <free@plt>
    c6f8:	ldr	x0, [x25, #8]
    c6fc:	bl	a730 <xstrdup@plt>
    c700:	mov	x24, x0
    c704:	mov	x1, x24
    c708:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    c70c:	add	x0, x0, #0xcc8
    c710:	bl	a570 <debug@plt>
    c714:	cmp	x22, #0x0
    c718:	ccmp	x23, #0x0, #0x4, ne  // ne = any
    c71c:	b.eq	c7a0 <check_preprocessor_encoding@@Base+0x2d0>  // b.none
    c720:	cbz	x24, c7c4 <check_preprocessor_encoding@@Base+0x2f4>
    c724:	mov	x1, x22
    c728:	mov	x0, x24
    c72c:	bl	a7c0 <strcasecmp@plt>
    c730:	cbz	w0, c7a0 <check_preprocessor_encoding@@Base+0x2d0>
    c734:	add	x5, x19, x26
    c738:	sub	w1, w19, w21
    c73c:	mov	x3, x22
    c740:	sub	w4, w20, w5
    c744:	mov	x2, x21
    c748:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    c74c:	add	x0, x0, #0xce8
    c750:	bl	aac0 <xasprintf@plt>
    c754:	ldp	x19, x20, [sp, #16]
    c758:	ldp	x25, x26, [sp, #64]
    c75c:	str	x0, [x23]
    c760:	mov	x0, x24
    c764:	ldp	x21, x22, [sp, #32]
    c768:	ldp	x23, x24, [sp, #48]
    c76c:	ldp	x29, x30, [sp], #96
    c770:	ret
    c774:	mov	x0, x19
    c778:	bl	a340 <strlen@plt>
    c77c:	add	x20, x19, x0
    c780:	b	c524 <check_preprocessor_encoding@@Base+0x54>
    c784:	mov	x1, x24
    c788:	adrp	x0, 2b000 <vasnprintf@@Base+0x1e0>
    c78c:	add	x0, x0, #0xcc8
    c790:	bl	a570 <debug@plt>
    c794:	cmp	x22, #0x0
    c798:	ccmp	x23, #0x0, #0x4, ne  // ne = any
    c79c:	b.ne	c724 <check_preprocessor_encoding@@Base+0x254>  // b.any
    c7a0:	mov	x0, x24
    c7a4:	ldp	x19, x20, [sp, #16]
    c7a8:	ldp	x21, x22, [sp, #32]
    c7ac:	ldp	x23, x24, [sp, #48]
    c7b0:	ldp	x25, x26, [sp, #64]
    c7b4:	ldp	x29, x30, [sp], #96
    c7b8:	ret
    c7bc:	ldp	x27, x28, [sp, #80]
    c7c0:	b	c6c4 <check_preprocessor_encoding@@Base+0x1f4>
    c7c4:	ldp	x19, x20, [sp, #16]
    c7c8:	ldp	x25, x26, [sp, #64]
    c7cc:	b	c5b8 <check_preprocessor_encoding@@Base+0xe8>

000000000000c7d0 <string_equals@@Base>:
    c7d0:	stp	x29, x30, [sp, #-16]!
    c7d4:	mov	x29, sp
    c7d8:	bl	a9b0 <strcmp@plt>
    c7dc:	cmp	w0, #0x0
    c7e0:	cset	w0, eq  // eq = none
    c7e4:	ldp	x29, x30, [sp], #16
    c7e8:	ret
    c7ec:	nop

000000000000c7f0 <string_hash@@Base>:
    c7f0:	stp	x29, x30, [sp, #-32]!
    c7f4:	mov	x29, sp
    c7f8:	str	x19, [sp, #16]
    c7fc:	mov	x19, x0
    c800:	bl	a340 <strlen@plt>
    c804:	mov	x1, x0
    c808:	mov	x0, x19
    c80c:	ldr	x19, [sp, #16]
    c810:	ldp	x29, x30, [sp], #32
    c814:	b	a980 <hash_pjw_bare@plt>

000000000000c818 <plain_free@@Base>:
    c818:	b	aa50 <free@plt>
    c81c:	nop

000000000000c820 <new_string_list@@Base>:
    c820:	stp	x29, x30, [sp, #-16]!
    c824:	adrp	x5, 46000 <vasnprintf@@Base+0x1b1e0>
    c828:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
    c82c:	adrp	x2, 46000 <vasnprintf@@Base+0x1b1e0>
    c830:	mov	x29, sp
    c834:	mov	w4, w1
    c838:	ldr	x1, [x5, #3824]
    c83c:	ldr	x3, [x3, #4000]
    c840:	ldr	x2, [x2, #3864]
    c844:	ldr	x5, [x0]
    c848:	blr	x5
    c84c:	cbz	x0, c858 <new_string_list@@Base+0x38>
    c850:	ldp	x29, x30, [sp], #16
    c854:	ret
    c858:	bl	a890 <xalloc_die@plt>
    c85c:	nop

000000000000c860 <new_string_map@@Base>:
    c860:	stp	x29, x30, [sp, #-16]!
    c864:	adrp	x5, 46000 <vasnprintf@@Base+0x1b1e0>
    c868:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
    c86c:	adrp	x2, 46000 <vasnprintf@@Base+0x1b1e0>
    c870:	mov	x29, sp
    c874:	mov	x4, x1
    c878:	ldr	x1, [x5, #3824]
    c87c:	ldr	x3, [x3, #4000]
    c880:	ldr	x2, [x2, #3864]
    c884:	ldr	x5, [x0]
    c888:	blr	x5
    c88c:	cbz	x0, c898 <new_string_map@@Base+0x38>
    c890:	ldp	x29, x30, [sp], #16
    c894:	ret
    c898:	bl	a890 <xalloc_die@plt>
    c89c:	nop

000000000000c8a0 <new_string_set@@Base>:
    c8a0:	stp	x29, x30, [sp, #-16]!
    c8a4:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
    c8a8:	adrp	x2, 46000 <vasnprintf@@Base+0x1b1e0>
    c8ac:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
    c8b0:	mov	x29, sp
    c8b4:	ldr	x3, [x3, #4000]
    c8b8:	ldr	x2, [x2, #3864]
    c8bc:	ldr	x1, [x1, #3824]
    c8c0:	ldr	x4, [x0]
    c8c4:	blr	x4
    c8c8:	cbz	x0, c8d4 <new_string_set@@Base+0x34>
    c8cc:	ldp	x29, x30, [sp], #16
    c8d0:	ret
    c8d4:	bl	a890 <xalloc_die@plt>

000000000000c8d8 <get_line_length@@Base>:
    c8d8:	stp	x29, x30, [sp, #-64]!
    c8dc:	mov	x29, sp
    c8e0:	stp	x19, x20, [sp, #16]
    c8e4:	adrp	x19, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    c8e8:	ldr	w0, [x19, #456]
    c8ec:	cmn	w0, #0x1
    c8f0:	b.eq	c900 <get_line_length@@Base+0x28>  // b.none
    c8f4:	ldp	x19, x20, [sp, #16]
    c8f8:	ldp	x29, x30, [sp], #64
    c8fc:	ret
    c900:	mov	w1, #0x50                  	// #80
    c904:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    c908:	str	w1, [x19, #456]
    c90c:	add	x0, x0, #0x4e0
    c910:	bl	aed0 <getenv@plt>
    c914:	cbz	x0, c930 <get_line_length@@Base+0x58>
    c918:	mov	x1, #0x0                   	// #0
    c91c:	mov	w2, #0xa                   	// #10
    c920:	bl	aa00 <strtol@plt>
    c924:	mov	x1, x0
    c928:	cmp	w0, #0x0
    c92c:	b.gt	c9b0 <get_line_length@@Base+0xd8>
    c930:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    c934:	add	x0, x0, #0x4f0
    c938:	bl	aed0 <getenv@plt>
    c93c:	cbz	x0, c958 <get_line_length@@Base+0x80>
    c940:	mov	x1, #0x0                   	// #0
    c944:	mov	w2, #0xa                   	// #10
    c948:	bl	aa00 <strtol@plt>
    c94c:	mov	x1, x0
    c950:	cmp	w0, #0x0
    c954:	b.gt	c9b0 <get_line_length@@Base+0xd8>
    c958:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    c95c:	mov	w1, #0x0                   	// #0
    c960:	add	x0, x0, #0x4f8
    c964:	str	x21, [sp, #32]
    c968:	bl	a640 <open@plt>
    c96c:	mov	w20, w0
    c970:	tbnz	w0, #31, c9c0 <get_line_length@@Base+0xe8>
    c974:	add	x2, sp, #0x38
    c978:	mov	w1, #0x5413                	// #21523
    c97c:	bl	ab50 <rpl_ioctl@plt>
    c980:	mov	w21, w0
    c984:	mov	w0, w20
    c988:	bl	a850 <close@plt>
    c98c:	cbnz	w21, c9f8 <get_line_length@@Base+0x120>
    c990:	ldrh	w0, [sp, #58]
    c994:	cbnz	w0, c99c <get_line_length@@Base+0xc4>
    c998:	mov	w0, #0x50                  	// #80
    c99c:	str	w0, [x19, #456]
    c9a0:	ldp	x19, x20, [sp, #16]
    c9a4:	ldr	x21, [sp, #32]
    c9a8:	ldp	x29, x30, [sp], #64
    c9ac:	ret
    c9b0:	str	w1, [x19, #456]
    c9b4:	ldp	x19, x20, [sp, #16]
    c9b8:	ldp	x29, x30, [sp], #64
    c9bc:	ret
    c9c0:	mov	w0, #0x1                   	// #1
    c9c4:	bl	acd0 <isatty@plt>
    c9c8:	mov	w20, w0
    c9cc:	cbz	w0, c9ec <get_line_length@@Base+0x114>
    c9d0:	mov	w20, #0x1                   	// #1
    c9d4:	mov	w0, w20
    c9d8:	add	x2, sp, #0x38
    c9dc:	mov	w1, #0x5413                	// #21523
    c9e0:	bl	ab50 <rpl_ioctl@plt>
    c9e4:	mov	w21, w0
    c9e8:	b	c98c <get_line_length@@Base+0xb4>
    c9ec:	bl	acd0 <isatty@plt>
    c9f0:	cbnz	w0, c9d4 <get_line_length@@Base+0xfc>
    c9f4:	b	c998 <get_line_length@@Base+0xc0>
    c9f8:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    c9fc:	add	x0, x0, #0x508
    ca00:	bl	a390 <perror@plt>
    ca04:	b	c998 <get_line_length@@Base+0xc0>
    ca08:	stp	x29, x30, [sp, #-64]!
    ca0c:	mov	x29, sp
    ca10:	stp	x19, x20, [sp, #16]
    ca14:	adrp	x20, 46000 <vasnprintf@@Base+0x1b1e0>
    ca18:	add	x19, sp, #0x38
    ca1c:	ldr	x20, [x20, #3984]
    ca20:	str	x21, [sp, #32]
    ca24:	mov	x21, x1
    ca28:	mov	x1, x0
    ca2c:	str	xzr, [sp, #56]
    ca30:	mov	x2, x19
    ca34:	ldr	x0, [x20]
    ca38:	ldr	x3, [x0]
    ca3c:	ldr	x3, [x3, #16]
    ca40:	blr	x3
    ca44:	ldr	x0, [x20]
    ca48:	mov	x1, x21
    ca4c:	ldr	x20, [sp, #56]
    ca50:	str	xzr, [sp, #56]
    ca54:	mov	x2, x19
    ca58:	ldr	x3, [x0]
    ca5c:	ldr	x3, [x3, #16]
    ca60:	blr	x3
    ca64:	ldr	x0, [sp, #56]
    ca68:	cbz	x20, ca9c <get_line_length@@Base+0x1c4>
    ca6c:	mov	x1, #0xffffffffffffffff    	// #-1
    ca70:	ldr	x2, [x20]
    ca74:	cbz	x0, ca7c <get_line_length@@Base+0x1a4>
    ca78:	ldr	x1, [x0]
    ca7c:	cmp	x1, x2
    ca80:	cset	w0, cc  // cc = lo, ul, last
    ca84:	mov	w1, #0xffffffff            	// #-1
    ca88:	csel	w0, w0, w1, ls  // ls = plast
    ca8c:	ldp	x19, x20, [sp, #16]
    ca90:	ldr	x21, [sp, #32]
    ca94:	ldp	x29, x30, [sp], #64
    ca98:	ret
    ca9c:	mov	x2, #0xffffffffffffffff    	// #-1
    caa0:	cbnz	x0, ca78 <get_line_length@@Base+0x1a0>
    caa4:	b	ca8c <get_line_length@@Base+0x1b4>

000000000000caa8 <order_files@@Base>:
    caa8:	stp	x29, x30, [sp, #-416]!
    caac:	mov	x29, sp
    cab0:	stp	x25, x26, [sp, #64]
    cab4:	mov	x25, x1
    cab8:	mov	w1, #0x4000                	// #16384
    cabc:	movk	w1, #0x20, lsl #16
    cac0:	stp	x27, x28, [sp, #80]
    cac4:	str	x25, [sp, #104]
    cac8:	ldr	x27, [x25]
    cacc:	bl	a640 <open@plt>
    cad0:	tbnz	w0, #31, cc78 <order_files@@Base+0x1d0>
    cad4:	add	x1, sp, #0x128
    cad8:	stp	x19, x20, [sp, #16]
    cadc:	mov	w20, w0
    cae0:	bl	a6e0 <fstatfs@plt>
    cae4:	tbnz	w0, #31, ccec <order_files@@Base+0x244>
    cae8:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
    caec:	adrp	x4, 46000 <vasnprintf@@Base+0x1b1e0>
    caf0:	adrp	x2, 46000 <vasnprintf@@Base+0x1b1e0>
    caf4:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
    caf8:	ldr	x0, [x0, #3912]
    cafc:	stp	x21, x22, [sp, #32]
    cb00:	mov	x3, #0x0                   	// #0
    cb04:	ldr	x2, [x2, #3864]
    cb08:	stp	x23, x24, [sp, #48]
    cb0c:	ldr	x4, [x4, #4000]
    cb10:	ldr	x1, [x1, #3824]
    cb14:	ldr	x5, [x0]
    cb18:	blr	x5
    cb1c:	mov	x2, x0
    cb20:	cbz	x0, cc1c <order_files@@Base+0x174>
    cb24:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
    cb28:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
    cb2c:	mov	w1, #0x0                   	// #0
    cb30:	add	x22, sp, #0x98
    cb34:	ldr	x3, [x3, #3984]
    cb38:	mov	w28, #0x660b                	// #26123
    cb3c:	ldr	x0, [x0, #3896]
    cb40:	adrp	x26, c000 <is_roff_device@@Base+0x48>
    cb44:	str	x2, [x3]
    cb48:	add	x2, sp, #0x90
    cb4c:	str	x2, [sp, #112]
    cb50:	add	x24, sp, #0x88
    cb54:	add	x23, sp, #0x80
    cb58:	add	x19, sp, #0xd0
    cb5c:	bl	acb0 <new_string_list@plt>
    cb60:	add	x26, x26, #0xa08
    cb64:	ldr	x1, [x27]
    cb68:	mov	x21, x0
    cb6c:	mov	x8, x22
    cb70:	mov	x0, x27
    cb74:	movk	w28, #0xc020, lsl #16
    cb78:	ldr	x1, [x1, #160]
    cb7c:	blr	x1
    cb80:	ldr	x3, [sp, #152]
    cb84:	mov	x2, x24
    cb88:	mov	x1, x23
    cb8c:	mov	x0, x22
    cb90:	ldr	x3, [x3, #176]
    cb94:	blr	x3
    cb98:	tst	w0, #0xff
    cb9c:	b.eq	cc20 <order_files@@Base+0x178>  // b.none
    cba0:	ldr	x1, [sp, #128]
    cba4:	mov	w0, w20
    cba8:	mov	w2, #0x0                   	// #0
    cbac:	bl	ae90 <openat@plt>
    cbb0:	mov	w25, w0
    cbb4:	tbnz	w0, #31, cb80 <order_files@@Base+0xd8>
    cbb8:	ldr	x5, [sp, #304]
    cbbc:	mov	w3, #0x1                   	// #1
    cbc0:	stp	xzr, xzr, [x19]
    cbc4:	mov	x2, x19
    cbc8:	mov	w1, w28
    cbcc:	stp	xzr, xzr, [x19, #16]
    cbd0:	stp	xzr, xzr, [x19, #32]
    cbd4:	stp	xzr, xzr, [x19, #48]
    cbd8:	stp	xzr, xzr, [x19, #64]
    cbdc:	str	xzr, [x19, #80]
    cbe0:	str	x5, [sp, #216]
    cbe4:	str	w3, [sp, #232]
    cbe8:	bl	ab50 <rpl_ioctl@plt>
    cbec:	cbz	w0, cc88 <order_files@@Base+0x1e0>
    cbf0:	mov	w0, w25
    cbf4:	bl	a850 <close@plt>
    cbf8:	ldr	x0, [sp, #128]
    cbfc:	bl	a730 <xstrdup@plt>
    cc00:	mov	x2, x0
    cc04:	ldr	x3, [x21]
    cc08:	mov	x1, x26
    cc0c:	mov	x0, x21
    cc10:	ldr	x3, [x3, #224]
    cc14:	blr	x3
    cc18:	cbnz	x0, cb80 <order_files@@Base+0xd8>
    cc1c:	bl	a890 <xalloc_die@plt>
    cc20:	ldr	x1, [sp, #152]
    cc24:	mov	x0, x22
    cc28:	ldr	x1, [x1, #184]
    cc2c:	blr	x1
    cc30:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
    cc34:	ldr	x19, [x0, #3984]
    cc38:	ldr	x0, [x19]
    cc3c:	ldr	x1, [x0]
    cc40:	ldr	x1, [x1, #40]
    cc44:	blr	x1
    cc48:	str	xzr, [x19]
    cc4c:	mov	w0, w20
    cc50:	bl	a850 <close@plt>
    cc54:	ldr	x1, [x27]
    cc58:	mov	x0, x27
    cc5c:	ldr	x1, [x1, #152]
    cc60:	blr	x1
    cc64:	ldr	x0, [sp, #104]
    cc68:	ldp	x19, x20, [sp, #16]
    cc6c:	ldp	x23, x24, [sp, #48]
    cc70:	str	x21, [x0]
    cc74:	ldp	x21, x22, [sp, #32]
    cc78:	ldp	x25, x26, [sp, #64]
    cc7c:	ldp	x27, x28, [sp, #80]
    cc80:	ldp	x29, x30, [sp], #416
    cc84:	ret
    cc88:	mov	x0, #0x8                   	// #8
    cc8c:	bl	a710 <xmalloc@plt>
    cc90:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
    cc94:	mov	x2, x0
    cc98:	ldr	x3, [sp, #112]
    cc9c:	ldr	x5, [x1, #3984]
    cca0:	ldr	x1, [sp, #128]
    cca4:	ldr	x5, [x5]
    cca8:	str	x5, [sp, #120]
    ccac:	ldr	x0, [sp, #248]
    ccb0:	ldr	x6, [x5]
    ccb4:	ldr	x6, [x6, #24]
    ccb8:	str	x0, [x2]
    ccbc:	mov	x0, x5
    ccc0:	blr	x6
    ccc4:	cmp	w0, #0x0
    ccc8:	cbnz	w0, cce4 <order_files@@Base+0x23c>
    cccc:	ldr	x5, [sp, #120]
    ccd0:	ldr	x1, [x5, #24]
    ccd4:	cbz	x1, cbf0 <order_files@@Base+0x148>
    ccd8:	ldr	x0, [sp, #144]
    ccdc:	blr	x1
    cce0:	b	cbf0 <order_files@@Base+0x148>
    cce4:	b.ge	cbf0 <order_files@@Base+0x148>  // b.tcont
    cce8:	bl	a890 <xalloc_die@plt>
    ccec:	mov	w0, w20
    ccf0:	bl	a850 <close@plt>
    ccf4:	ldp	x19, x20, [sp, #16]
    ccf8:	b	cc78 <order_files@@Base+0x1d0>
    ccfc:	nop

000000000000cd00 <pathsearch_executable@@Base>:
    cd00:	stp	x29, x30, [sp, #-240]!
    cd04:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    cd08:	mov	x29, sp
    cd0c:	stp	x19, x20, [sp, #16]
    cd10:	mov	x19, x0
    cd14:	add	x0, x1, #0x520
    cd18:	bl	aed0 <getenv@plt>
    cd1c:	cbz	x0, cd78 <pathsearch_executable@@Base+0x78>
    cd20:	mov	x20, x0
    cd24:	mov	w1, #0x2f                  	// #47
    cd28:	mov	x0, x19
    cd2c:	stp	x25, x26, [sp, #64]
    cd30:	bl	ab60 <strchr@plt>
    cd34:	mov	x26, x0
    cd38:	cbz	x0, cd94 <pathsearch_executable@@Base+0x94>
    cd3c:	mov	x1, x19
    cd40:	add	x2, sp, #0x70
    cd44:	mov	w0, #0x0                   	// #0
    cd48:	bl	aef0 <__xstat@plt>
    cd4c:	cmn	w0, #0x1
    cd50:	b.eq	cd8c <pathsearch_executable@@Base+0x8c>  // b.none
    cd54:	ldr	w0, [sp, #128]
    cd58:	and	w1, w0, #0xf000
    cd5c:	cmp	w1, #0x8, lsl #12
    cd60:	b.ne	cd8c <pathsearch_executable@@Base+0x8c>  // b.any
    cd64:	mov	w1, #0x49                  	// #73
    cd68:	mov	w19, #0x1                   	// #1
    cd6c:	tst	w0, w1
    cd70:	ldp	x25, x26, [sp, #64]
    cd74:	b.ne	cd7c <pathsearch_executable@@Base+0x7c>  // b.any
    cd78:	mov	w19, #0x0                   	// #0
    cd7c:	mov	w0, w19
    cd80:	ldp	x19, x20, [sp, #16]
    cd84:	ldp	x29, x30, [sp], #240
    cd88:	ret
    cd8c:	ldp	x25, x26, [sp, #64]
    cd90:	b	cd78 <pathsearch_executable@@Base+0x78>
    cd94:	mov	x0, x20
    cd98:	adrp	x20, 2c000 <vasnprintf@@Base+0x11e0>
    cd9c:	add	x20, x20, #0x528
    cda0:	stp	x21, x22, [sp, #32]
    cda4:	add	x22, sp, #0x68
    cda8:	stp	x23, x24, [sp, #48]
    cdac:	bl	a730 <xstrdup@plt>
    cdb0:	mov	x1, x20
    cdb4:	mov	x24, x0
    cdb8:	mov	x0, x22
    cdbc:	str	x24, [sp, #104]
    cdc0:	bl	a9a0 <strsep@plt>
    cdc4:	mov	x1, x0
    cdc8:	cbz	x0, cebc <pathsearch_executable@@Base+0x1bc>
    cdcc:	adrp	x21, 2c000 <vasnprintf@@Base+0x11e0>
    cdd0:	add	x23, sp, #0x70
    cdd4:	add	x21, x21, #0x530
    cdd8:	mov	w25, #0x49                  	// #73
    cddc:	str	x27, [sp, #80]
    cde0:	b	cdf8 <pathsearch_executable@@Base+0xf8>
    cde4:	mov	x1, x20
    cde8:	mov	x0, x22
    cdec:	bl	a9a0 <strsep@plt>
    cdf0:	mov	x1, x0
    cdf4:	cbz	x0, cea0 <pathsearch_executable@@Base+0x1a0>
    cdf8:	ldrb	w0, [x1]
    cdfc:	cbnz	w0, ce08 <pathsearch_executable@@Base+0x108>
    ce00:	mov	x1, x26
    ce04:	cbz	x26, ceac <pathsearch_executable@@Base+0x1ac>
    ce08:	mov	x2, x19
    ce0c:	mov	x0, x21
    ce10:	bl	aac0 <xasprintf@plt>
    ce14:	mov	x27, x0
    ce18:	mov	x1, x27
    ce1c:	mov	x2, x23
    ce20:	mov	w0, #0x0                   	// #0
    ce24:	bl	aef0 <__xstat@plt>
    ce28:	mov	w1, w0
    ce2c:	mov	x0, x27
    ce30:	cmn	w1, #0x1
    ce34:	b.eq	ce88 <pathsearch_executable@@Base+0x188>  // b.none
    ce38:	bl	aa50 <free@plt>
    ce3c:	ldr	w0, [sp, #128]
    ce40:	and	w1, w0, #0xf000
    ce44:	cmp	w1, #0x8, lsl #12
    ce48:	b.ne	cde4 <pathsearch_executable@@Base+0xe4>  // b.any
    ce4c:	tst	w0, w25
    ce50:	b.eq	cde4 <pathsearch_executable@@Base+0xe4>  // b.none
    ce54:	ldr	x27, [sp, #80]
    ce58:	mov	w19, #0x1                   	// #1
    ce5c:	mov	x0, x24
    ce60:	bl	aa50 <free@plt>
    ce64:	mov	x0, x26
    ce68:	bl	aa50 <free@plt>
    ce6c:	mov	w0, w19
    ce70:	ldp	x19, x20, [sp, #16]
    ce74:	ldp	x21, x22, [sp, #32]
    ce78:	ldp	x23, x24, [sp, #48]
    ce7c:	ldp	x25, x26, [sp, #64]
    ce80:	ldp	x29, x30, [sp], #240
    ce84:	ret
    ce88:	bl	aa50 <free@plt>
    ce8c:	mov	x1, x20
    ce90:	mov	x0, x22
    ce94:	bl	a9a0 <strsep@plt>
    ce98:	mov	x1, x0
    ce9c:	cbnz	x0, cdf8 <pathsearch_executable@@Base+0xf8>
    cea0:	mov	w19, #0x0                   	// #0
    cea4:	ldr	x27, [sp, #80]
    cea8:	b	ce5c <pathsearch_executable@@Base+0x15c>
    ceac:	bl	b000 <xgetcwd@plt>
    ceb0:	mov	x1, x0
    ceb4:	mov	x26, x0
    ceb8:	b	ce08 <pathsearch_executable@@Base+0x108>
    cebc:	mov	w19, #0x0                   	// #0
    cec0:	b	ce5c <pathsearch_executable@@Base+0x15c>
    cec4:	nop

000000000000cec8 <directory_on_path@@Base>:
    cec8:	stp	x29, x30, [sp, #-80]!
    cecc:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    ced0:	mov	x29, sp
    ced4:	stp	x19, x20, [sp, #16]
    ced8:	mov	x20, x0
    cedc:	mov	w19, #0x0                   	// #0
    cee0:	add	x0, x1, #0x520
    cee4:	bl	aed0 <getenv@plt>
    cee8:	cbz	x0, cf94 <directory_on_path@@Base+0xcc>
    ceec:	adrp	x19, 2c000 <vasnprintf@@Base+0x11e0>
    cef0:	add	x19, x19, #0x528
    cef4:	stp	x21, x22, [sp, #32]
    cef8:	add	x21, sp, #0x48
    cefc:	str	x23, [sp, #48]
    cf00:	bl	a730 <xstrdup@plt>
    cf04:	mov	x1, x19
    cf08:	mov	x22, x0
    cf0c:	mov	x23, #0x0                   	// #0
    cf10:	mov	x0, x21
    cf14:	str	x22, [sp, #72]
    cf18:	bl	a9a0 <strsep@plt>
    cf1c:	cbnz	x0, cf44 <directory_on_path@@Base+0x7c>
    cf20:	b	cfa4 <directory_on_path@@Base+0xdc>
    cf24:	mov	x1, x20
    cf28:	bl	a9b0 <strcmp@plt>
    cf2c:	mov	x1, x19
    cf30:	mov	w2, w0
    cf34:	mov	x0, x21
    cf38:	cbz	w2, cf78 <directory_on_path@@Base+0xb0>
    cf3c:	bl	a9a0 <strsep@plt>
    cf40:	cbz	x0, cfa4 <directory_on_path@@Base+0xdc>
    cf44:	ldrb	w2, [x0]
    cf48:	cbnz	w2, cf24 <directory_on_path@@Base+0x5c>
    cf4c:	mov	x0, x23
    cf50:	cbnz	x23, cf24 <directory_on_path@@Base+0x5c>
    cf54:	bl	b000 <xgetcwd@plt>
    cf58:	mov	x23, x0
    cf5c:	mov	x1, x20
    cf60:	bl	a9b0 <strcmp@plt>
    cf64:	mov	x1, x19
    cf68:	mov	w2, w0
    cf6c:	mov	x0, x21
    cf70:	cbnz	w2, cf3c <directory_on_path@@Base+0x74>
    cf74:	nop
    cf78:	mov	x0, x22
    cf7c:	bl	aa50 <free@plt>
    cf80:	mov	x0, x23
    cf84:	bl	aa50 <free@plt>
    cf88:	ldp	x21, x22, [sp, #32]
    cf8c:	mov	w19, #0x1                   	// #1
    cf90:	ldr	x23, [sp, #48]
    cf94:	mov	w0, w19
    cf98:	ldp	x19, x20, [sp, #16]
    cf9c:	ldp	x29, x30, [sp], #80
    cfa0:	ret
    cfa4:	mov	x0, x22
    cfa8:	bl	aa50 <free@plt>
    cfac:	mov	x0, x23
    cfb0:	mov	w19, #0x0                   	// #0
    cfb4:	bl	aa50 <free@plt>
    cfb8:	mov	w0, w19
    cfbc:	ldp	x19, x20, [sp, #16]
    cfc0:	ldp	x21, x22, [sp, #32]
    cfc4:	ldr	x23, [sp, #48]
    cfc8:	ldp	x29, x30, [sp], #80
    cfcc:	ret

000000000000cfd0 <sandbox_init@@Base>:
    cfd0:	stp	x29, x30, [sp, #-16]!
    cfd4:	mov	x0, #0x1                   	// #1
    cfd8:	mov	x29, sp
    cfdc:	bl	ace0 <xzalloc@plt>
    cfe0:	strb	wzr, [x0]
    cfe4:	ldp	x29, x30, [sp], #16
    cfe8:	ret
    cfec:	nop

000000000000cff0 <sandbox_load@@Base>:
    cff0:	ret
    cff4:	nop

000000000000cff8 <sandbox_load_permissive@@Base>:
    cff8:	ret
    cffc:	nop

000000000000d000 <sandbox_free@@Base>:
    d000:	b	aa50 <free@plt>
    d004:	nop
    d008:	stp	x29, x30, [sp, #-32]!
    d00c:	mov	x29, sp
    d010:	str	x19, [sp, #16]
    d014:	bl	aeb0 <__errno_location@plt>
    d018:	mov	x3, x0
    d01c:	mov	w2, #0x5                   	// #5
    d020:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    d024:	mov	x0, #0x0                   	// #0
    d028:	add	x1, x1, #0x538
    d02c:	ldr	w19, [x3]
    d030:	bl	ada0 <dcgettext@plt>
    d034:	mov	x2, x0
    d038:	mov	w0, #0x2                   	// #2
    d03c:	mov	w1, w19
    d040:	ldr	x19, [sp, #16]
    d044:	ldp	x29, x30, [sp], #32
    d048:	b	a360 <error@plt>
    d04c:	nop

000000000000d050 <running_setuid@@Base>:
    d050:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
    d054:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
    d058:	ldr	x1, [x1, #4064]
    d05c:	ldr	x0, [x0, #3784]
    d060:	ldr	w1, [x1]
    d064:	ldr	w0, [x0]
    d068:	cmp	w1, w0
    d06c:	cset	w0, ne  // ne = any
    d070:	ret
    d074:	nop

000000000000d078 <get_man_owner@@Base>:
    d078:	stp	x29, x30, [sp, #-32]!
    d07c:	mov	x29, sp
    d080:	stp	x19, x20, [sp, #16]
    d084:	adrp	x19, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    d088:	ldr	x1, [x19, #1032]
    d08c:	cbz	x1, d0a0 <get_man_owner@@Base+0x28>
    d090:	mov	x0, x1
    d094:	ldp	x19, x20, [sp, #16]
    d098:	ldp	x29, x30, [sp], #32
    d09c:	ret
    d0a0:	adrp	x20, 2c000 <vasnprintf@@Base+0x11e0>
    d0a4:	add	x20, x20, #0x550
    d0a8:	mov	x0, x20
    d0ac:	bl	a720 <getpwnam@plt>
    d0b0:	str	x0, [x19, #1032]
    d0b4:	mov	x1, x0
    d0b8:	cbnz	x0, d090 <get_man_owner@@Base+0x18>
    d0bc:	mov	w2, #0x5                   	// #5
    d0c0:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    d0c4:	add	x1, x1, #0x558
    d0c8:	bl	ada0 <dcgettext@plt>
    d0cc:	mov	w1, #0x0                   	// #0
    d0d0:	mov	x2, x0
    d0d4:	mov	x3, x20
    d0d8:	mov	w0, #0x1                   	// #1
    d0dc:	bl	a360 <error@plt>
    d0e0:	ldr	x1, [x19, #1032]
    d0e4:	cbnz	x1, d090 <get_man_owner@@Base+0x18>
    d0e8:	adrp	x3, 2c000 <vasnprintf@@Base+0x11e0>
    d0ec:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    d0f0:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d0f4:	add	x3, x3, #0x638
    d0f8:	add	x1, x1, #0x580
    d0fc:	add	x0, x0, #0x590
    d100:	mov	w2, #0x78                  	// #120
    d104:	bl	aea0 <__assert_fail@plt>

000000000000d108 <drop_effective_privs@@Base>:
    d108:	stp	x29, x30, [sp, #-32]!
    d10c:	mov	x29, sp
    d110:	stp	x19, x20, [sp, #16]
    d114:	adrp	x19, 46000 <vasnprintf@@Base+0x1b1e0>
    d118:	adrp	x20, 46000 <vasnprintf@@Base+0x1b1e0>
    d11c:	ldr	x1, [x19, #3952]
    d120:	ldr	x0, [x20, #4064]
    d124:	ldr	w1, [x1]
    d128:	ldr	w0, [x0]
    d12c:	cmp	w1, w0
    d130:	b.ne	d15c <drop_effective_privs@@Base+0x54>  // b.any
    d134:	adrp	x2, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    d138:	add	x2, x2, #0x408
    d13c:	ldp	x19, x20, [sp, #16]
    d140:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d144:	ldr	w1, [x2, #8]
    d148:	add	x0, x0, #0x5b8
    d14c:	add	w1, w1, #0x1
    d150:	str	w1, [x2, #8]
    d154:	ldp	x29, x30, [sp], #32
    d158:	b	a570 <debug@plt>
    d15c:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d160:	add	x0, x0, #0x5a0
    d164:	bl	a570 <debug@plt>
    d168:	bl	a680 <idpriv_temp_drop@plt>
    d16c:	cbnz	w0, d19c <drop_effective_privs@@Base+0x94>
    d170:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
    d174:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
    d178:	ldr	x20, [x20, #4064]
    d17c:	ldr	x1, [x1, #3960]
    d180:	ldr	x19, [x19, #3952]
    d184:	ldr	x0, [x0, #3792]
    d188:	ldr	w1, [x1]
    d18c:	ldr	w2, [x20]
    d190:	str	w1, [x0]
    d194:	str	w2, [x19]
    d198:	b	d134 <drop_effective_privs@@Base+0x2c>
    d19c:	bl	d008 <sandbox_free@@Base+0x8>
    d1a0:	b	d170 <drop_effective_privs@@Base+0x68>
    d1a4:	nop

000000000000d1a8 <init_security@@Base>:
    d1a8:	stp	x29, x30, [sp, #-32]!
    d1ac:	mov	x29, sp
    d1b0:	str	x19, [sp, #16]
    d1b4:	adrp	x19, 46000 <vasnprintf@@Base+0x1b1e0>
    d1b8:	bl	a4a0 <getuid@plt>
    d1bc:	ldr	x19, [x19, #4064]
    d1c0:	str	w0, [x19]
    d1c4:	bl	a3f0 <geteuid@plt>
    d1c8:	adrp	x4, 46000 <vasnprintf@@Base+0x1b1e0>
    d1cc:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
    d1d0:	ldr	w1, [x19]
    d1d4:	mov	w2, w0
    d1d8:	ldr	x4, [x4, #3784]
    d1dc:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d1e0:	ldr	x3, [x3, #3952]
    d1e4:	add	x0, x0, #0x5d0
    d1e8:	adrp	x19, 46000 <vasnprintf@@Base+0x1b1e0>
    d1ec:	str	w2, [x4]
    d1f0:	str	w2, [x3]
    d1f4:	bl	a570 <debug@plt>
    d1f8:	bl	aa90 <getgid@plt>
    d1fc:	ldr	x19, [x19, #3960]
    d200:	str	w0, [x19]
    d204:	bl	a3b0 <getegid@plt>
    d208:	adrp	x4, 46000 <vasnprintf@@Base+0x1b1e0>
    d20c:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
    d210:	ldr	w1, [x19]
    d214:	mov	w2, w0
    d218:	ldr	x4, [x4, #3760]
    d21c:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d220:	ldr	x3, [x3, #3792]
    d224:	add	x0, x0, #0x5e8
    d228:	str	w2, [x4]
    d22c:	str	w2, [x3]
    d230:	bl	a570 <debug@plt>
    d234:	ldr	x19, [sp, #16]
    d238:	adrp	x0, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    d23c:	ldp	x29, x30, [sp], #32
    d240:	str	wzr, [x0, #1040]
    d244:	b	a8c0 <drop_effective_privs@plt>

000000000000d248 <regain_effective_privs@@Base>:
    d248:	stp	x29, x30, [sp, #-32]!
    d24c:	mov	x29, sp
    d250:	stp	x19, x20, [sp, #16]
    d254:	adrp	x19, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    d258:	add	x19, x19, #0x408
    d25c:	ldr	w1, [x19, #8]
    d260:	cbnz	w1, d2d8 <regain_effective_privs@@Base+0x90>
    d264:	adrp	x19, 46000 <vasnprintf@@Base+0x1b1e0>
    d268:	adrp	x20, 46000 <vasnprintf@@Base+0x1b1e0>
    d26c:	ldr	x1, [x19, #3952]
    d270:	ldr	x0, [x20, #3784]
    d274:	ldr	w1, [x1]
    d278:	ldr	w0, [x0]
    d27c:	cmp	w1, w0
    d280:	b.ne	d290 <regain_effective_privs@@Base+0x48>  // b.any
    d284:	ldp	x19, x20, [sp, #16]
    d288:	ldp	x29, x30, [sp], #32
    d28c:	ret
    d290:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d294:	add	x0, x0, #0x618
    d298:	bl	a570 <debug@plt>
    d29c:	bl	aca0 <idpriv_temp_restore@plt>
    d2a0:	cbnz	w0, d300 <regain_effective_privs@@Base+0xb8>
    d2a4:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
    d2a8:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
    d2ac:	ldr	x20, [x20, #3784]
    d2b0:	ldr	x1, [x1, #3760]
    d2b4:	ldr	x19, [x19, #3952]
    d2b8:	ldr	x0, [x0, #3792]
    d2bc:	ldr	w2, [x20]
    d2c0:	ldr	w1, [x1]
    d2c4:	str	w2, [x19]
    d2c8:	str	w1, [x0]
    d2cc:	ldp	x19, x20, [sp, #16]
    d2d0:	ldp	x29, x30, [sp], #32
    d2d4:	ret
    d2d8:	sub	w1, w1, #0x1
    d2dc:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d2e0:	add	x0, x0, #0x600
    d2e4:	str	w1, [x19, #8]
    d2e8:	bl	a570 <debug@plt>
    d2ec:	ldr	w0, [x19, #8]
    d2f0:	cbz	w0, d264 <regain_effective_privs@@Base+0x1c>
    d2f4:	ldp	x19, x20, [sp, #16]
    d2f8:	ldp	x29, x30, [sp], #32
    d2fc:	ret
    d300:	bl	d008 <sandbox_free@@Base+0x8>
    d304:	b	d2a4 <regain_effective_privs@@Base+0x5c>

000000000000d308 <drop_privs@@Base>:
    d308:	stp	x29, x30, [sp, #-16]!
    d30c:	mov	x29, sp
    d310:	bl	ac10 <idpriv_drop@plt>
    d314:	cbnz	w0, d320 <drop_privs@@Base+0x18>
    d318:	ldp	x29, x30, [sp], #16
    d31c:	ret
    d320:	ldp	x29, x30, [sp], #16
    d324:	b	d008 <sandbox_free@@Base+0x8>

000000000000d328 <create_tempdir@@Base>:
    d328:	stp	x29, x30, [sp, #-48]!
    d32c:	mov	x29, sp
    d330:	stp	x19, x20, [sp, #16]
    d334:	str	x21, [sp, #32]
    d338:	mov	x21, x0
    d33c:	bl	a4a0 <getuid@plt>
    d340:	mov	w19, w0
    d344:	bl	a3f0 <geteuid@plt>
    d348:	cmp	w19, w0
    d34c:	b.eq	d3c8 <create_tempdir@@Base+0xa0>  // b.none
    d350:	adrp	x19, 2c000 <vasnprintf@@Base+0x11e0>
    d354:	add	x20, x19, #0x648
    d358:	mov	x0, x20
    d35c:	mov	w1, #0x2                   	// #2
    d360:	bl	a950 <access@plt>
    d364:	cbnz	w0, d3a0 <create_tempdir@@Base+0x78>
    d368:	add	x19, x19, #0x648
    d36c:	mov	x1, x19
    d370:	mov	x2, x21
    d374:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d378:	add	x0, x0, #0x660
    d37c:	bl	aac0 <xasprintf@plt>
    d380:	mov	x19, x0
    d384:	bl	a8e0 <mkdtemp@plt>
    d388:	cbz	x0, d3b0 <create_tempdir@@Base+0x88>
    d38c:	mov	x0, x19
    d390:	ldp	x19, x20, [sp, #16]
    d394:	ldr	x21, [sp, #32]
    d398:	ldp	x29, x30, [sp], #48
    d39c:	ret
    d3a0:	mov	x0, x20
    d3a4:	mov	w1, #0x2                   	// #2
    d3a8:	bl	a950 <access@plt>
    d3ac:	cbz	w0, d368 <create_tempdir@@Base+0x40>
    d3b0:	mov	x19, #0x0                   	// #0
    d3b4:	mov	x0, x19
    d3b8:	ldp	x19, x20, [sp, #16]
    d3bc:	ldr	x21, [sp, #32]
    d3c0:	ldp	x29, x30, [sp], #48
    d3c4:	ret
    d3c8:	bl	aa90 <getgid@plt>
    d3cc:	mov	w19, w0
    d3d0:	bl	a3b0 <getegid@plt>
    d3d4:	cmp	w19, w0
    d3d8:	b.ne	d350 <create_tempdir@@Base+0x28>  // b.any
    d3dc:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d3e0:	add	x0, x0, #0x650
    d3e4:	bl	aed0 <getenv@plt>
    d3e8:	mov	x19, x0
    d3ec:	cbz	x0, d3fc <create_tempdir@@Base+0xd4>
    d3f0:	mov	w1, #0x2                   	// #2
    d3f4:	bl	a950 <access@plt>
    d3f8:	cbz	w0, d36c <create_tempdir@@Base+0x44>
    d3fc:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d400:	add	x0, x0, #0x658
    d404:	bl	aed0 <getenv@plt>
    d408:	mov	x19, x0
    d40c:	cbz	x0, d350 <create_tempdir@@Base+0x28>
    d410:	mov	w1, #0x2                   	// #2
    d414:	bl	a950 <access@plt>
    d418:	cbnz	w0, d350 <create_tempdir@@Base+0x28>
    d41c:	b	d36c <create_tempdir@@Base+0x44>

000000000000d420 <is_changed@@Base>:
    d420:	stp	x29, x30, [sp, #-288]!
    d424:	mov	x2, x1
    d428:	mov	x29, sp
    d42c:	stp	x19, x20, [sp, #16]
    d430:	mov	x20, x0
    d434:	mov	x19, x1
    d438:	mov	x1, x0
    d43c:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d440:	add	x0, x0, #0x670
    d444:	bl	a570 <debug@plt>
    d448:	mov	x1, x20
    d44c:	add	x2, sp, #0x20
    d450:	mov	w0, #0x0                   	// #0
    d454:	bl	aef0 <__xstat@plt>
    d458:	mov	x1, x19
    d45c:	add	x2, sp, #0xa0
    d460:	cbnz	w0, d4dc <is_changed@@Base+0xbc>
    d464:	mov	w19, #0xfffffffe            	// #-2
    d468:	bl	aef0 <__xstat@plt>
    d46c:	cbnz	w0, d4bc <is_changed@@Base+0x9c>
    d470:	ldr	x0, [sp, #80]
    d474:	mov	w1, #0x2                   	// #2
    d478:	ldr	x4, [sp, #208]
    d47c:	cmp	x0, #0x0
    d480:	ldr	x2, [sp, #120]
    d484:	csel	w1, wzr, w1, ne  // ne = any
    d488:	ldr	x0, [sp, #248]
    d48c:	cmp	x4, #0x0
    d490:	orr	w3, w1, #0x4
    d494:	mov	w19, #0x1                   	// #1
    d498:	csel	w1, w3, w1, eq  // eq = none
    d49c:	cmp	x2, x0
    d4a0:	ldr	x2, [sp, #128]
    d4a4:	ldr	x0, [sp, #256]
    d4a8:	b.lt	d4b8 <is_changed@@Base+0x98>  // b.tstop
    d4ac:	b.gt	d4b8 <is_changed@@Base+0x98>
    d4b0:	cmp	w2, w0
    d4b4:	cset	w19, ne  // ne = any
    d4b8:	orr	w19, w1, w19
    d4bc:	mov	w1, w19
    d4c0:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d4c4:	add	x0, x0, #0x688
    d4c8:	bl	a570 <debug@plt>
    d4cc:	mov	w0, w19
    d4d0:	ldp	x19, x20, [sp, #16]
    d4d4:	ldp	x29, x30, [sp], #288
    d4d8:	ret
    d4dc:	mov	w0, #0x0                   	// #0
    d4e0:	bl	aef0 <__xstat@plt>
    d4e4:	cmp	w0, #0x0
    d4e8:	mov	w1, #0xfffffffd            	// #-3
    d4ec:	csinv	w19, w1, wzr, ne  // ne = any
    d4f0:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d4f4:	mov	w1, w19
    d4f8:	add	x0, x0, #0x688
    d4fc:	bl	a570 <debug@plt>
    d500:	mov	w0, w19
    d504:	ldp	x19, x20, [sp, #16]
    d508:	ldp	x29, x30, [sp], #288
    d50c:	ret

000000000000d510 <is_directory@@Base>:
    d510:	stp	x29, x30, [sp, #-144]!
    d514:	mov	x1, x0
    d518:	mov	w0, #0x0                   	// #0
    d51c:	mov	x29, sp
    d520:	add	x2, sp, #0x10
    d524:	bl	aef0 <__xstat@plt>
    d528:	cbnz	w0, d534 <is_directory@@Base+0x24>
    d52c:	ldr	w0, [sp, #32]
    d530:	ubfx	x0, x0, #14, #1
    d534:	ldp	x29, x30, [sp], #144
    d538:	ret
    d53c:	nop

000000000000d540 <escape_shell@@Base>:
    d540:	stp	x29, x30, [sp, #-64]!
    d544:	mov	x29, sp
    d548:	stp	x21, x22, [sp, #32]
    d54c:	cbz	x0, d604 <escape_shell@@Base+0xc4>
    d550:	stp	x23, x24, [sp, #48]
    d554:	mov	x23, x0
    d558:	stp	x19, x20, [sp, #16]
    d55c:	bl	a340 <strlen@plt>
    d560:	lsl	x0, x0, #1
    d564:	add	x0, x0, #0x1
    d568:	bl	a710 <xmalloc@plt>
    d56c:	ldrb	w19, [x23]
    d570:	mov	x21, x0
    d574:	cbz	w19, d618 <escape_shell@@Base+0xd8>
    d578:	adrp	x24, 2c000 <vasnprintf@@Base+0x11e0>
    d57c:	mov	x20, x0
    d580:	add	x24, x24, #0x690
    d584:	mov	w22, #0x5c                  	// #92
    d588:	b	d5a0 <escape_shell@@Base+0x60>
    d58c:	mov	x1, x20
    d590:	strb	w19, [x1], #1
    d594:	ldrb	w19, [x23, #1]!
    d598:	mov	x20, x1
    d59c:	cbz	w19, d5e8 <escape_shell@@Base+0xa8>
    d5a0:	and	w2, w19, #0xffffffdf
    d5a4:	sub	w3, w19, #0x30
    d5a8:	sub	w2, w2, #0x41
    d5ac:	and	w3, w3, #0xff
    d5b0:	and	w2, w2, #0xff
    d5b4:	mov	w1, w19
    d5b8:	cmp	w2, #0x19
    d5bc:	mov	x0, x24
    d5c0:	ccmp	w3, #0x9, #0x0, hi  // hi = pmore
    d5c4:	b.ls	d58c <escape_shell@@Base+0x4c>  // b.plast
    d5c8:	bl	ab60 <strchr@plt>
    d5cc:	cbnz	x0, d58c <escape_shell@@Base+0x4c>
    d5d0:	mov	x0, x20
    d5d4:	strb	w22, [x0], #2
    d5d8:	strb	w19, [x20, #1]
    d5dc:	ldrb	w19, [x23, #1]!
    d5e0:	mov	x20, x0
    d5e4:	cbnz	w19, d5a0 <escape_shell@@Base+0x60>
    d5e8:	strb	wzr, [x20]
    d5ec:	mov	x0, x21
    d5f0:	ldp	x19, x20, [sp, #16]
    d5f4:	ldp	x21, x22, [sp, #32]
    d5f8:	ldp	x23, x24, [sp, #48]
    d5fc:	ldp	x29, x30, [sp], #64
    d600:	ret
    d604:	mov	x21, #0x0                   	// #0
    d608:	mov	x0, x21
    d60c:	ldp	x21, x22, [sp, #32]
    d610:	ldp	x29, x30, [sp], #64
    d614:	ret
    d618:	mov	x20, x0
    d61c:	b	d5e8 <escape_shell@@Base+0xa8>

000000000000d620 <remove_directory@@Base>:
    d620:	stp	x29, x30, [sp, #-208]!
    d624:	mov	x29, sp
    d628:	stp	x19, x20, [sp, #16]
    d62c:	mov	x20, x0
    d630:	stp	x23, x24, [sp, #48]
    d634:	mov	w24, w1
    d638:	bl	a4c0 <opendir@plt>
    d63c:	cbz	x0, d76c <remove_directory@@Base+0x14c>
    d640:	mov	x19, x0
    d644:	add	x23, sp, #0x50
    d648:	stp	x21, x22, [sp, #32]
    d64c:	adrp	x21, 2c000 <vasnprintf@@Base+0x11e0>
    d650:	add	x21, x21, #0x530
    d654:	mov	w22, #0x2e2e                	// #11822
    d658:	str	x25, [sp, #64]
    d65c:	nop
    d660:	mov	x0, x19
    d664:	bl	a7d0 <readdir@plt>
    d668:	cbz	x0, d6dc <remove_directory@@Base+0xbc>
    d66c:	ldurh	w3, [x0, #19]
    d670:	add	x2, x0, #0x13
    d674:	cmp	w3, #0x2e
    d678:	b.eq	d660 <remove_directory@@Base+0x40>  // b.none
    d67c:	cmp	w3, w22
    d680:	b.eq	d70c <remove_directory@@Base+0xec>  // b.none
    d684:	mov	x1, x20
    d688:	mov	x0, x21
    d68c:	bl	aac0 <xasprintf@plt>
    d690:	mov	x25, x0
    d694:	mov	x2, x23
    d698:	mov	x1, x25
    d69c:	mov	w0, #0x0                   	// #0
    d6a0:	bl	aef0 <__xstat@plt>
    d6a4:	cmn	w0, #0x1
    d6a8:	b.eq	d728 <remove_directory@@Base+0x108>  // b.none
    d6ac:	ldr	w0, [sp, #96]
    d6b0:	and	w0, w0, #0xf000
    d6b4:	cbz	w24, d6c0 <remove_directory@@Base+0xa0>
    d6b8:	cmp	w0, #0x4, lsl #12
    d6bc:	b.eq	d754 <remove_directory@@Base+0x134>  // b.none
    d6c0:	cmp	w0, #0x8, lsl #12
    d6c4:	b.eq	d718 <remove_directory@@Base+0xf8>  // b.none
    d6c8:	mov	x0, x25
    d6cc:	bl	aa50 <free@plt>
    d6d0:	mov	x0, x19
    d6d4:	bl	a7d0 <readdir@plt>
    d6d8:	cbnz	x0, d66c <remove_directory@@Base+0x4c>
    d6dc:	mov	x0, x19
    d6e0:	bl	a820 <closedir@plt>
    d6e4:	mov	x0, x20
    d6e8:	bl	a9e0 <rmdir@plt>
    d6ec:	ldp	x21, x22, [sp, #32]
    d6f0:	cmn	w0, #0x1
    d6f4:	ldr	x25, [sp, #64]
    d6f8:	csetm	w0, eq  // eq = none
    d6fc:	ldp	x19, x20, [sp, #16]
    d700:	ldp	x23, x24, [sp, #48]
    d704:	ldp	x29, x30, [sp], #208
    d708:	ret
    d70c:	ldrb	w0, [x2, #2]
    d710:	cbz	w0, d660 <remove_directory@@Base+0x40>
    d714:	b	d684 <remove_directory@@Base+0x64>
    d718:	mov	x0, x25
    d71c:	bl	af50 <unlink@plt>
    d720:	cmn	w0, #0x1
    d724:	b.ne	d6c8 <remove_directory@@Base+0xa8>  // b.any
    d728:	mov	x0, x25
    d72c:	bl	aa50 <free@plt>
    d730:	mov	x0, x19
    d734:	bl	a820 <closedir@plt>
    d738:	mov	w0, #0xffffffff            	// #-1
    d73c:	ldp	x19, x20, [sp, #16]
    d740:	ldp	x21, x22, [sp, #32]
    d744:	ldp	x23, x24, [sp, #48]
    d748:	ldr	x25, [sp, #64]
    d74c:	ldp	x29, x30, [sp], #208
    d750:	ret
    d754:	mov	w1, w24
    d758:	mov	x0, x25
    d75c:	bl	d620 <remove_directory@@Base>
    d760:	cmn	w0, #0x1
    d764:	b.ne	d6c8 <remove_directory@@Base+0xa8>  // b.any
    d768:	b	d728 <remove_directory@@Base+0x108>
    d76c:	mov	w0, #0xffffffff            	// #-1
    d770:	b	d6fc <remove_directory@@Base+0xdc>
    d774:	nop

000000000000d778 <trim_spaces@@Base>:
    d778:	stp	x29, x30, [sp, #-32]!
    d77c:	mov	x29, sp
    d780:	str	x19, [sp, #16]
    d784:	mov	x19, x0
    d788:	ldrb	w0, [x0]
    d78c:	cmp	w0, #0x20
    d790:	b.ne	d7a4 <trim_spaces@@Base+0x2c>  // b.any
    d794:	nop
    d798:	ldrb	w0, [x19, #1]!
    d79c:	cmp	w0, #0x20
    d7a0:	b.eq	d798 <trim_spaces@@Base+0x20>  // b.none
    d7a4:	mov	x0, x19
    d7a8:	bl	a340 <strlen@plt>
    d7ac:	cbz	w0, d7e0 <trim_spaces@@Base+0x68>
    d7b0:	sxtw	x1, w0
    d7b4:	sub	x2, x19, #0x1
    d7b8:	b	d7c4 <trim_spaces@@Base+0x4c>
    d7bc:	sub	x1, x1, #0x1
    d7c0:	cbz	w1, d7e0 <trim_spaces@@Base+0x68>
    d7c4:	ldrb	w0, [x2, x1]
    d7c8:	cmp	w0, #0x20
    d7cc:	b.eq	d7bc <trim_spaces@@Base+0x44>  // b.none
    d7d0:	mov	x0, x19
    d7d4:	ldr	x19, [sp, #16]
    d7d8:	ldp	x29, x30, [sp], #32
    d7dc:	b	acf0 <xstrndup@plt>
    d7e0:	mov	x0, x19
    d7e4:	mov	x1, #0x0                   	// #0
    d7e8:	ldr	x19, [sp, #16]
    d7ec:	ldp	x29, x30, [sp], #32
    d7f0:	b	acf0 <xstrndup@plt>
    d7f4:	nop

000000000000d7f8 <lang_dir@@Base>:
    d7f8:	stp	x29, x30, [sp, #-48]!
    d7fc:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
    d800:	mov	x29, sp
    d804:	stp	x19, x20, [sp, #16]
    d808:	mov	x19, x0
    d80c:	add	x0, x1, #0x628
    d810:	bl	a730 <xstrdup@plt>
    d814:	mov	x20, x0
    d818:	cbz	x19, d8c0 <lang_dir@@Base+0xc8>
    d81c:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    d820:	mov	x0, x19
    d824:	add	x1, x1, #0x6a8
    d828:	mov	x2, #0x4                   	// #4
    d82c:	bl	a6c0 <strncmp@plt>
    d830:	cbnz	w0, d8d0 <lang_dir@@Base+0xd8>
    d834:	add	x0, x19, #0x2
    d838:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    d83c:	add	x1, x1, #0x6e8
    d840:	stp	x21, x22, [sp, #32]
    d844:	bl	ad70 <strstr@plt>
    d848:	mov	x21, x0
    d84c:	cbz	x0, d904 <lang_dir@@Base+0x10c>
    d850:	ldrb	w22, [x21, #5]
    d854:	cmp	w22, #0x2f
    d858:	b.ne	d904 <lang_dir@@Base+0x10c>  // b.any
    d85c:	ldrb	w1, [x21, #4]
    d860:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d864:	add	x0, x0, #0x6b8
    d868:	bl	ab60 <strchr@plt>
    d86c:	cbz	x0, d904 <lang_dir@@Base+0x10c>
    d870:	add	x0, x19, #0x3
    d874:	cmp	x21, x0
    d878:	b.eq	d918 <lang_dir@@Base+0x120>  // b.none
    d87c:	add	x19, x19, #0x4
    d880:	mov	w1, w22
    d884:	mov	x0, x19
    d888:	bl	ab60 <strchr@plt>
    d88c:	mov	x21, x0
    d890:	cbz	x0, d904 <lang_dir@@Base+0x10c>
    d894:	mov	x0, x20
    d898:	bl	aa50 <free@plt>
    d89c:	sub	x1, x21, x19
    d8a0:	mov	x0, x19
    d8a4:	bl	acf0 <xstrndup@plt>
    d8a8:	mov	x20, x0
    d8ac:	mov	x1, x20
    d8b0:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d8b4:	add	x0, x0, #0x6c8
    d8b8:	bl	a570 <debug@plt>
    d8bc:	ldp	x21, x22, [sp, #32]
    d8c0:	mov	x0, x20
    d8c4:	ldp	x19, x20, [sp, #16]
    d8c8:	ldp	x29, x30, [sp], #48
    d8cc:	ret
    d8d0:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    d8d4:	mov	x0, x19
    d8d8:	add	x1, x1, #0x6b0
    d8dc:	bl	ad70 <strstr@plt>
    d8e0:	cbz	x0, d8c0 <lang_dir@@Base+0xc8>
    d8e4:	add	x19, x0, #0x1
    d8e8:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    d8ec:	add	x0, x19, #0x2
    d8f0:	add	x1, x1, #0x6e8
    d8f4:	stp	x21, x22, [sp, #32]
    d8f8:	bl	ad70 <strstr@plt>
    d8fc:	mov	x21, x0
    d900:	cbnz	x0, d850 <lang_dir@@Base+0x58>
    d904:	mov	x0, x20
    d908:	ldp	x19, x20, [sp, #16]
    d90c:	ldp	x21, x22, [sp, #32]
    d910:	ldp	x29, x30, [sp], #48
    d914:	ret
    d918:	mov	x0, x20
    d91c:	bl	aa50 <free@plt>
    d920:	ldp	x19, x20, [sp, #16]
    d924:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d928:	ldp	x21, x22, [sp, #32]
    d92c:	add	x0, x0, #0x358
    d930:	ldp	x29, x30, [sp], #48
    d934:	b	a730 <xstrdup@plt>

000000000000d938 <init_locale@@Base>:
    d938:	stp	x29, x30, [sp, #-32]!
    d93c:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
    d940:	mov	w0, #0x6                   	// #6
    d944:	mov	x29, sp
    d948:	add	x1, x1, #0x628
    d94c:	stp	x19, x20, [sp, #16]
    d950:	adrp	x19, 2c000 <vasnprintf@@Base+0x11e0>
    d954:	bl	afd0 <setlocale@plt>
    d958:	cbz	x0, d9ac <init_locale@@Base+0x74>
    d95c:	mov	w2, #0x1                   	// #1
    d960:	add	x0, x19, #0x6f0
    d964:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
    d968:	adrp	x20, 2c000 <vasnprintf@@Base+0x11e0>
    d96c:	add	x1, x1, #0x838
    d970:	add	x20, x20, #0x760
    d974:	bl	a460 <setenv@plt>
    d978:	adrp	x19, 2c000 <vasnprintf@@Base+0x11e0>
    d97c:	add	x19, x19, #0x778
    d980:	mov	x1, x20
    d984:	mov	x0, x19
    d988:	bl	a6d0 <bindtextdomain@plt>
    d98c:	mov	x1, x20
    d990:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d994:	add	x0, x0, #0x780
    d998:	bl	a6d0 <bindtextdomain@plt>
    d99c:	mov	x0, x19
    d9a0:	ldp	x19, x20, [sp, #16]
    d9a4:	ldp	x29, x30, [sp], #32
    d9a8:	b	a990 <textdomain@plt>
    d9ac:	add	x0, x19, #0x6f0
    d9b0:	bl	aed0 <getenv@plt>
    d9b4:	cbnz	x0, d95c <init_locale@@Base+0x24>
    d9b8:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    d9bc:	add	x0, x0, #0x708
    d9c0:	bl	aed0 <getenv@plt>
    d9c4:	cbnz	x0, d95c <init_locale@@Base+0x24>
    d9c8:	adrp	x2, 2c000 <vasnprintf@@Base+0x11e0>
    d9cc:	mov	w1, #0x0                   	// #0
    d9d0:	add	x2, x2, #0x720
    d9d4:	bl	a360 <error@plt>
    d9d8:	b	d95c <init_locale@@Base+0x24>
    d9dc:	nop

000000000000d9e0 <word_fnmatch@@Base>:
    d9e0:	stp	x29, x30, [sp, #-64]!
    d9e4:	mov	x29, sp
    d9e8:	stp	x19, x20, [sp, #16]
    d9ec:	stp	x21, x22, [sp, #32]
    d9f0:	mov	x22, x0
    d9f4:	mov	x0, x1
    d9f8:	bl	a730 <xstrdup@plt>
    d9fc:	ldrb	w19, [x0]
    da00:	mov	x21, x0
    da04:	cbz	w19, da8c <word_fnmatch@@Base+0xac>
    da08:	mov	x20, x0
    da0c:	str	x23, [sp, #48]
    da10:	bl	a9d0 <__ctype_b_loc@plt>
    da14:	mov	x23, x0
    da18:	mov	x1, x21
    da1c:	b	da30 <word_fnmatch@@Base+0x50>
    da20:	mov	x1, x5
    da24:	ldrb	w19, [x3]
    da28:	mov	x20, x3
    da2c:	cbz	w19, da88 <word_fnmatch@@Base+0xa8>
    da30:	ldr	x4, [x23]
    da34:	ubfiz	x2, x19, #1, #8
    da38:	cmp	w19, #0x5f
    da3c:	add	x5, x1, #0x1
    da40:	add	x3, x20, #0x1
    da44:	ldrh	w2, [x4, x2]
    da48:	and	w2, w2, #0x400
    da4c:	ccmp	w2, #0x0, #0x0, ne  // ne = any
    da50:	b.ne	da24 <word_fnmatch@@Base+0x44>  // b.any
    da54:	cmp	x5, x20
    da58:	b.cs	da20 <word_fnmatch@@Base+0x40>  // b.hs, b.nlast
    da5c:	strb	wzr, [x20]
    da60:	mov	x0, x22
    da64:	mov	w2, #0x10                  	// #16
    da68:	bl	abf0 <fnmatch@plt>
    da6c:	add	x1, x20, #0x1
    da70:	cbz	w0, daa8 <word_fnmatch@@Base+0xc8>
    da74:	mov	x3, x1
    da78:	mov	x20, x3
    da7c:	ldrb	w19, [x3]
    da80:	cbnz	w19, da30 <word_fnmatch@@Base+0x50>
    da84:	nop
    da88:	ldr	x23, [sp, #48]
    da8c:	mov	x0, x21
    da90:	bl	aa50 <free@plt>
    da94:	mov	w0, #0x0                   	// #0
    da98:	ldp	x19, x20, [sp, #16]
    da9c:	ldp	x21, x22, [sp, #32]
    daa0:	ldp	x29, x30, [sp], #64
    daa4:	ret
    daa8:	mov	x0, x21
    daac:	bl	aa50 <free@plt>
    dab0:	mov	w0, #0x1                   	// #1
    dab4:	ldp	x19, x20, [sp, #16]
    dab8:	ldp	x21, x22, [sp, #32]
    dabc:	ldr	x23, [sp, #48]
    dac0:	ldp	x29, x30, [sp], #64
    dac4:	ret

000000000000dac8 <xregcomp@@Base>:
    dac8:	stp	x29, x30, [sp, #-48]!
    dacc:	mov	x29, sp
    dad0:	stp	x19, x20, [sp, #16]
    dad4:	mov	x20, x0
    dad8:	stp	x21, x22, [sp, #32]
    dadc:	mov	x21, x1
    dae0:	bl	a5a0 <rpl_regcomp@plt>
    dae4:	cbnz	w0, daf8 <xregcomp@@Base+0x30>
    dae8:	ldp	x19, x20, [sp, #16]
    daec:	ldp	x21, x22, [sp, #32]
    daf0:	ldp	x29, x30, [sp], #48
    daf4:	ret
    daf8:	mov	x1, x20
    dafc:	mov	x3, #0x0                   	// #0
    db00:	mov	x2, #0x0                   	// #0
    db04:	mov	w19, w0
    db08:	bl	ac20 <rpl_regerror@plt>
    db0c:	mov	x22, x0
    db10:	bl	a710 <xmalloc@plt>
    db14:	mov	x3, x22
    db18:	mov	x22, x0
    db1c:	mov	x1, x20
    db20:	mov	x2, x22
    db24:	mov	w0, w19
    db28:	bl	ac20 <rpl_regerror@plt>
    db2c:	mov	w2, #0x5                   	// #5
    db30:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    db34:	mov	x0, #0x0                   	// #0
    db38:	add	x1, x1, #0x790
    db3c:	bl	ada0 <dcgettext@plt>
    db40:	mov	x2, x0
    db44:	mov	x4, x22
    db48:	mov	x3, x21
    db4c:	ldp	x19, x20, [sp, #16]
    db50:	mov	w1, #0x0                   	// #0
    db54:	ldp	x21, x22, [sp, #32]
    db58:	mov	w0, #0x2                   	// #2
    db5c:	ldp	x29, x30, [sp], #48
    db60:	b	a360 <error@plt>
    db64:	nop

000000000000db68 <areadlink_with_size@@Base>:
    db68:	stp	x29, x30, [sp, #-224]!
    db6c:	cmp	x1, #0x0
    db70:	mov	x29, sp
    db74:	stp	x19, x20, [sp, #16]
    db78:	mov	x19, #0x80                  	// #128
    db7c:	stp	x21, x22, [sp, #32]
    db80:	mov	x22, x0
    db84:	stp	x23, x24, [sp, #48]
    db88:	cset	w23, ne  // ne = any
    db8c:	stp	x25, x26, [sp, #64]
    db90:	str	x27, [sp, #80]
    db94:	cbz	x1, dba4 <areadlink_with_size@@Base+0x3c>
    db98:	cmp	x1, #0x401
    db9c:	mov	x19, #0x401                 	// #1025
    dba0:	csinc	x19, x19, x1, cs  // cs = hs, nlast
    dba4:	add	x25, sp, #0x60
    dba8:	mov	x24, #0x3fffffffffffffff    	// #4611686018427387903
    dbac:	mov	x26, #0x7ffffffffffffffe    	// #9223372036854775806
    dbb0:	cmp	x19, #0x80
    dbb4:	ccmp	w23, #0x0, #0x0, eq  // eq = none
    dbb8:	b.eq	dc10 <areadlink_with_size@@Base+0xa8>  // b.none
    dbbc:	mov	x0, x19
    dbc0:	bl	a5f0 <malloc@plt>
    dbc4:	mov	x21, x0
    dbc8:	cbz	x0, dd50 <areadlink_with_size@@Base+0x1e8>
    dbcc:	mov	x27, x0
    dbd0:	mov	x2, x19
    dbd4:	mov	x1, x21
    dbd8:	mov	x0, x22
    dbdc:	bl	a470 <readlink@plt>
    dbe0:	mov	x20, x0
    dbe4:	tbnz	x0, #63, dc30 <areadlink_with_size@@Base+0xc8>
    dbe8:	cmp	x19, x20
    dbec:	b.hi	dc7c <areadlink_with_size@@Base+0x114>  // b.pmore
    dbf0:	mov	x0, x27
    dbf4:	bl	aa50 <free@plt>
    dbf8:	cmp	x19, x24
    dbfc:	b.hi	dc6c <areadlink_with_size@@Base+0x104>  // b.pmore
    dc00:	lsl	x19, x19, #1
    dc04:	cmp	x19, #0x80
    dc08:	ccmp	w23, #0x0, #0x0, eq  // eq = none
    dc0c:	b.ne	dbbc <areadlink_with_size@@Base+0x54>  // b.any
    dc10:	mov	x21, x25
    dc14:	mov	x2, x19
    dc18:	mov	x1, x21
    dc1c:	mov	x0, x22
    dc20:	mov	x27, #0x0                   	// #0
    dc24:	bl	a470 <readlink@plt>
    dc28:	mov	x20, x0
    dc2c:	tbz	x0, #63, dbe8 <areadlink_with_size@@Base+0x80>
    dc30:	bl	aeb0 <__errno_location@plt>
    dc34:	ldr	w0, [x0]
    dc38:	cmp	w0, #0x22
    dc3c:	b.eq	dbe8 <areadlink_with_size@@Base+0x80>  // b.none
    dc40:	mov	x0, x27
    dc44:	mov	x27, #0x0                   	// #0
    dc48:	bl	aa50 <free@plt>
    dc4c:	mov	x0, x27
    dc50:	ldp	x19, x20, [sp, #16]
    dc54:	ldp	x21, x22, [sp, #32]
    dc58:	ldp	x23, x24, [sp, #48]
    dc5c:	ldp	x25, x26, [sp, #64]
    dc60:	ldr	x27, [sp, #80]
    dc64:	ldp	x29, x30, [sp], #224
    dc68:	ret
    dc6c:	cmp	x19, x26
    dc70:	b.hi	dcb0 <areadlink_with_size@@Base+0x148>  // b.pmore
    dc74:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
    dc78:	b	dbb0 <areadlink_with_size@@Base+0x48>
    dc7c:	strb	wzr, [x21, x20]
    dc80:	add	x20, x20, #0x1
    dc84:	cbz	x27, dce0 <areadlink_with_size@@Base+0x178>
    dc88:	cmp	x19, x20
    dc8c:	b.hi	dd1c <areadlink_with_size@@Base+0x1b4>  // b.pmore
    dc90:	mov	x0, x27
    dc94:	ldp	x19, x20, [sp, #16]
    dc98:	ldp	x21, x22, [sp, #32]
    dc9c:	ldp	x23, x24, [sp, #48]
    dca0:	ldp	x25, x26, [sp, #64]
    dca4:	ldr	x27, [sp, #80]
    dca8:	ldp	x29, x30, [sp], #224
    dcac:	ret
    dcb0:	bl	aeb0 <__errno_location@plt>
    dcb4:	mov	x27, #0x0                   	// #0
    dcb8:	mov	w1, #0xc                   	// #12
    dcbc:	str	w1, [x0]
    dcc0:	mov	x0, x27
    dcc4:	ldp	x19, x20, [sp, #16]
    dcc8:	ldp	x21, x22, [sp, #32]
    dccc:	ldp	x23, x24, [sp, #48]
    dcd0:	ldp	x25, x26, [sp, #64]
    dcd4:	ldr	x27, [sp, #80]
    dcd8:	ldp	x29, x30, [sp], #224
    dcdc:	ret
    dce0:	mov	x0, x20
    dce4:	bl	a5f0 <malloc@plt>
    dce8:	cbz	x0, dd50 <areadlink_with_size@@Base+0x1e8>
    dcec:	mov	x2, x20
    dcf0:	mov	x1, x21
    dcf4:	bl	a2c0 <memcpy@plt>
    dcf8:	mov	x27, x0
    dcfc:	mov	x0, x27
    dd00:	ldp	x19, x20, [sp, #16]
    dd04:	ldp	x21, x22, [sp, #32]
    dd08:	ldp	x23, x24, [sp, #48]
    dd0c:	ldp	x25, x26, [sp, #64]
    dd10:	ldr	x27, [sp, #80]
    dd14:	ldp	x29, x30, [sp], #224
    dd18:	ret
    dd1c:	mov	x1, x20
    dd20:	mov	x0, x27
    dd24:	bl	a7e0 <realloc@plt>
    dd28:	cmp	x0, #0x0
    dd2c:	csel	x27, x27, x0, eq  // eq = none
    dd30:	mov	x0, x27
    dd34:	ldp	x19, x20, [sp, #16]
    dd38:	ldp	x21, x22, [sp, #32]
    dd3c:	ldp	x23, x24, [sp, #48]
    dd40:	ldp	x25, x26, [sp, #64]
    dd44:	ldr	x27, [sp, #80]
    dd48:	ldp	x29, x30, [sp], #224
    dd4c:	ret
    dd50:	mov	x27, #0x0                   	// #0
    dd54:	b	dc90 <areadlink_with_size@@Base+0x128>

000000000000dd58 <argp_make_fmtstream@@Base>:
    dd58:	stp	x29, x30, [sp, #-64]!
    dd5c:	mov	x29, sp
    dd60:	stp	x19, x20, [sp, #16]
    dd64:	mov	x20, x3
    dd68:	stp	x21, x22, [sp, #32]
    dd6c:	mov	x22, x1
    dd70:	mov	x21, x2
    dd74:	str	x23, [sp, #48]
    dd78:	mov	x23, x0
    dd7c:	mov	x0, #0x48                  	// #72
    dd80:	bl	a5f0 <malloc@plt>
    dd84:	mov	x19, x0
    dd88:	cbz	x0, ddb0 <argp_make_fmtstream@@Base+0x58>
    dd8c:	stp	x23, x22, [x19]
    dd90:	mov	x0, #0xc8                  	// #200
    dd94:	stp	x21, x20, [x19, #16]
    dd98:	stp	xzr, xzr, [x19, #32]
    dd9c:	bl	a5f0 <malloc@plt>
    dda0:	str	x0, [x19, #48]
    dda4:	cbz	x0, ddc8 <argp_make_fmtstream@@Base+0x70>
    dda8:	add	x1, x0, #0xc8
    ddac:	stp	x0, x1, [x19, #56]
    ddb0:	mov	x0, x19
    ddb4:	ldp	x19, x20, [sp, #16]
    ddb8:	ldp	x21, x22, [sp, #32]
    ddbc:	ldr	x23, [sp, #48]
    ddc0:	ldp	x29, x30, [sp], #64
    ddc4:	ret
    ddc8:	mov	x0, x19
    ddcc:	mov	x19, #0x0                   	// #0
    ddd0:	bl	aa50 <free@plt>
    ddd4:	b	ddb0 <argp_make_fmtstream@@Base+0x58>

000000000000ddd8 <_argp_fmtstream_update@@Base>:
    ddd8:	stp	x29, x30, [sp, #-96]!
    dddc:	mov	x29, sp
    dde0:	stp	x19, x20, [sp, #16]
    dde4:	mov	x20, x0
    dde8:	ldr	x19, [x0, #32]
    ddec:	stp	x23, x24, [sp, #48]
    ddf0:	ldr	x0, [x0, #48]
    ddf4:	ldr	x23, [x20, #56]
    ddf8:	add	x19, x0, x19
    ddfc:	cmp	x23, x19
    de00:	b.ls	e080 <_argp_fmtstream_update@@Base+0x2a8>  // b.plast
    de04:	mov	w24, #0x20                  	// #32
    de08:	stp	x21, x22, [sp, #32]
    de0c:	stp	x25, x26, [sp, #64]
    de10:	stp	x27, x28, [sp, #80]
    de14:	b	de7c <_argp_fmtstream_update@@Base+0xa4>
    de18:	sub	x0, x25, x19
    de1c:	add	x0, x0, x21
    de20:	cmp	x0, x26
    de24:	b.lt	e060 <_argp_fmtstream_update@@Base+0x288>  // b.tstop
    de28:	ldr	x28, [x20, #24]
    de2c:	sub	x22, x26, #0x1
    de30:	tbz	x28, #63, df30 <_argp_fmtstream_update@@Base+0x158>
    de34:	cmp	x23, x25
    de38:	b.ls	e25c <_argp_fmtstream_update@@Base+0x484>  // b.plast
    de3c:	sub	x21, x22, x21
    de40:	sub	x2, x23, x25
    de44:	add	x0, x19, x21
    de48:	mov	x1, x25
    de4c:	bl	a2d0 <memmove@plt>
    de50:	ldr	x0, [x20, #40]
    de54:	str	xzr, [x20, #40]
    de58:	ldr	x2, [x20, #56]
    de5c:	sub	x22, x22, x0
    de60:	add	x22, x19, x22
    de64:	add	x19, x19, x26
    de68:	sub	x22, x22, x25
    de6c:	sub	x23, x2, x22
    de70:	str	x23, [x20, #56]
    de74:	cmp	x19, x23
    de78:	b.cs	e070 <_argp_fmtstream_update@@Base+0x298>  // b.hs, b.nlast
    de7c:	ldr	x21, [x20, #40]
    de80:	mov	x3, x21
    de84:	cbnz	x21, dee0 <_argp_fmtstream_update@@Base+0x108>
    de88:	ldr	x22, [x20, #8]
    de8c:	cbz	x22, e098 <_argp_fmtstream_update@@Base+0x2c0>
    de90:	ldr	x1, [x20, #64]
    de94:	add	x0, x23, x22
    de98:	cmp	x1, x0
    de9c:	b.ls	e1f8 <_argp_fmtstream_update@@Base+0x420>  // b.plast
    dea0:	add	x3, x19, x22
    dea4:	sub	x2, x23, x19
    dea8:	mov	x1, x19
    deac:	mov	x0, x3
    deb0:	bl	a2d0 <memmove@plt>
    deb4:	mov	x3, x0
    deb8:	ldr	x1, [x20, #56]
    debc:	mov	x0, x19
    dec0:	mov	x2, x22
    dec4:	mov	x19, x3
    dec8:	add	x1, x1, x22
    decc:	str	x1, [x20, #56]
    ded0:	mov	w1, #0x20                  	// #32
    ded4:	bl	a6f0 <memset@plt>
    ded8:	mov	x3, x22
    dedc:	str	x22, [x20, #40]
    dee0:	ldr	x23, [x20, #56]
    dee4:	mov	x0, x19
    dee8:	mov	x21, x3
    deec:	mov	w1, #0xa                   	// #10
    def0:	sub	x27, x23, x19
    def4:	mov	x2, x27
    def8:	bl	ac90 <memchr@plt>
    defc:	mov	x25, x0
    df00:	tbz	x21, #63, df0c <_argp_fmtstream_update@@Base+0x134>
    df04:	mov	x21, #0x0                   	// #0
    df08:	str	xzr, [x20, #40]
    df0c:	ldr	x26, [x20, #16]
    df10:	cbnz	x25, de18 <_argp_fmtstream_update@@Base+0x40>
    df14:	add	x0, x21, x27
    df18:	cmp	x0, x26
    df1c:	b.cc	e2ec <_argp_fmtstream_update@@Base+0x514>  // b.lo, b.ul, b.last
    df20:	ldr	x28, [x20, #24]
    df24:	sub	x22, x26, #0x1
    df28:	tbnz	x28, #63, e260 <_argp_fmtstream_update@@Base+0x488>
    df2c:	mov	x25, x23
    df30:	add	x3, x22, #0x1
    df34:	sub	x21, x3, x21
    df38:	adds	x22, x19, x21
    df3c:	b.cs	e160 <_argp_fmtstream_update@@Base+0x388>  // b.hs, b.nlast
    df40:	bl	a9d0 <__ctype_b_loc@plt>
    df44:	mov	x21, x22
    df48:	ldr	x1, [x0]
    df4c:	b	df5c <_argp_fmtstream_update@@Base+0x184>
    df50:	cmp	x19, x3
    df54:	b.hi	e168 <_argp_fmtstream_update@@Base+0x390>  // b.pmore
    df58:	mov	x21, x3
    df5c:	ldrb	w0, [x21]
    df60:	sub	x3, x21, #0x1
    df64:	ldrh	w0, [x1, x0, lsl #1]
    df68:	tbz	w0, #0, df50 <_argp_fmtstream_update@@Base+0x178>
    df6c:	add	x2, x21, #0x1
    df70:	cmp	x19, x2
    df74:	b.cs	e178 <_argp_fmtstream_update@@Base+0x3a0>  // b.hs, b.nlast
    df78:	cmp	x19, x21
    df7c:	b.ls	df90 <_argp_fmtstream_update@@Base+0x1b8>  // b.plast
    df80:	b	e250 <_argp_fmtstream_update@@Base+0x478>
    df84:	ldrb	w0, [x21]
    df88:	ldrh	w0, [x1, x0, lsl #1]
    df8c:	tbz	w0, #0, dfa0 <_argp_fmtstream_update@@Base+0x1c8>
    df90:	mov	x22, x21
    df94:	sub	x21, x21, #0x1
    df98:	cmp	x19, x21
    df9c:	b.ls	df84 <_argp_fmtstream_update@@Base+0x1ac>  // b.plast
    dfa0:	mov	x21, x2
    dfa4:	nop
    dfa8:	add	x0, x27, #0x1
    dfac:	add	x0, x19, x0
    dfb0:	cmp	x21, x0
    dfb4:	b.eq	e0b8 <_argp_fmtstream_update@@Base+0x2e0>  // b.none
    dfb8:	add	x0, x22, #0x1
    dfbc:	sub	x1, x21, x0
    dfc0:	cmp	x1, x28
    dfc4:	b.ge	e0d0 <_argp_fmtstream_update@@Base+0x2f8>  // b.tcont
    dfc8:	cmp	x23, x21
    dfcc:	b.ls	e0c8 <_argp_fmtstream_update@@Base+0x2f0>  // b.plast
    dfd0:	ldr	x1, [x20, #64]
    dfd4:	add	x28, x28, #0x1
    dfd8:	sub	x1, x1, x23
    dfdc:	cmp	x1, x28
    dfe0:	b.gt	e298 <_argp_fmtstream_update@@Base+0x4c0>
    dfe4:	ldr	x0, [x20, #48]
    dfe8:	ldr	x3, [x20]
    dfec:	cmp	x0, x22
    dff0:	b.cs	e004 <_argp_fmtstream_update@@Base+0x22c>  // b.hs, b.nlast
    dff4:	sub	x2, x22, x0
    dff8:	mov	x1, #0x1                   	// #1
    dffc:	bl	a320 <fwrite_unlocked@plt>
    e000:	ldr	x3, [x20]
    e004:	ldp	x0, x1, [x3, #40]
    e008:	cmp	x0, x1
    e00c:	b.cs	e2dc <_argp_fmtstream_update@@Base+0x504>  // b.hs, b.nlast
    e010:	add	x1, x0, #0x1
    e014:	str	x1, [x3, #40]
    e018:	mov	w1, #0xa                   	// #10
    e01c:	strb	w1, [x0]
    e020:	ldr	x25, [x20, #48]
    e024:	sub	x19, x19, x25
    e028:	sub	x1, x21, x25
    e02c:	add	x27, x27, x19
    e030:	mov	x23, x1
    e034:	mov	x19, x25
    e038:	b	e0e4 <_argp_fmtstream_update@@Base+0x30c>
    e03c:	bl	a9d0 <__ctype_b_loc@plt>
    e040:	ldrb	w2, [x22]
    e044:	ldr	x1, [x0]
    e048:	ldrh	w0, [x1, x2, lsl #1]
    e04c:	tbnz	w0, #0, e18c <_argp_fmtstream_update@@Base+0x3b4>
    e050:	add	x22, x22, #0x1
    e054:	cmp	x22, x25
    e058:	b.ne	e03c <_argp_fmtstream_update@@Base+0x264>  // b.any
    e05c:	nop
    e060:	str	xzr, [x20, #40]
    e064:	add	x19, x25, #0x1
    e068:	cmp	x19, x23
    e06c:	b.cc	de7c <_argp_fmtstream_update@@Base+0xa4>  // b.lo, b.ul, b.last
    e070:	ldp	x21, x22, [sp, #32]
    e074:	ldp	x25, x26, [sp, #64]
    e078:	ldp	x27, x28, [sp, #80]
    e07c:	ldr	x0, [x20, #48]
    e080:	sub	x2, x23, x0
    e084:	ldp	x23, x24, [sp, #48]
    e088:	str	x2, [x20, #32]
    e08c:	ldp	x19, x20, [sp, #16]
    e090:	ldp	x29, x30, [sp], #96
    e094:	ret
    e098:	ldr	x23, [x20, #56]
    e09c:	mov	x0, x19
    e0a0:	mov	w1, #0xa                   	// #10
    e0a4:	sub	x27, x23, x19
    e0a8:	mov	x2, x27
    e0ac:	bl	ac90 <memchr@plt>
    e0b0:	mov	x25, x0
    e0b4:	b	df0c <_argp_fmtstream_update@@Base+0x134>
    e0b8:	ldr	x0, [x20, #64]
    e0bc:	sub	x0, x0, x22
    e0c0:	cmp	x0, x28
    e0c4:	b.le	dfc8 <_argp_fmtstream_update@@Base+0x1f0>
    e0c8:	add	x0, x22, #0x1
    e0cc:	sub	x1, x21, x0
    e0d0:	sub	x23, x21, x19
    e0d4:	mov	x25, x19
    e0d8:	mov	x19, x0
    e0dc:	mov	w0, #0xa                   	// #10
    e0e0:	strb	w0, [x22]
    e0e4:	ldr	x0, [x20, #24]
    e0e8:	cmp	x0, x1
    e0ec:	b.le	e110 <_argp_fmtstream_update@@Base+0x338>
    e0f0:	add	x1, x27, #0x1
    e0f4:	add	x1, x25, x1
    e0f8:	cmp	x21, x1
    e0fc:	b.ne	e1a0 <_argp_fmtstream_update@@Base+0x3c8>  // b.any
    e100:	ldr	x1, [x20, #64]
    e104:	sub	x1, x1, x21
    e108:	cmp	x0, x1
    e10c:	b.gt	e1a0 <_argp_fmtstream_update@@Base+0x3c8>
    e110:	cmp	x0, #0x0
    e114:	b.le	e13c <_argp_fmtstream_update@@Base+0x364>
    e118:	add	x1, x19, #0x1
    e11c:	mvn	x3, x19
    e120:	sturb	w24, [x1, #-1]
    e124:	mov	x19, x1
    e128:	add	x1, x1, #0x1
    e12c:	ldr	x0, [x20, #24]
    e130:	add	x2, x3, x1
    e134:	cmp	x0, x2
    e138:	b.gt	e120 <_argp_fmtstream_update@@Base+0x348>
    e13c:	cmp	x19, x21
    e140:	b.cc	e234 <_argp_fmtstream_update@@Base+0x45c>  // b.lo, b.ul, b.last
    e144:	sub	x2, x27, x23
    e148:	cmp	x0, #0x0
    e14c:	add	x23, x19, x2
    e150:	csinv	x0, x0, xzr, ne  // ne = any
    e154:	str	x0, [x20, #40]
    e158:	str	x23, [x20, #56]
    e15c:	b	de74 <_argp_fmtstream_update@@Base+0x9c>
    e160:	add	x21, x22, #0x1
    e164:	nop
    e168:	cmp	x19, x21
    e16c:	b.cs	e178 <_argp_fmtstream_update@@Base+0x3a0>  // b.hs, b.nlast
    e170:	mov	x22, x21
    e174:	b	dfa8 <_argp_fmtstream_update@@Base+0x1d0>
    e178:	cmp	x22, x25
    e17c:	b.cc	e050 <_argp_fmtstream_update@@Base+0x278>  // b.lo, b.ul, b.last
    e180:	b.eq	e060 <_argp_fmtstream_update@@Base+0x288>  // b.none
    e184:	bl	a9d0 <__ctype_b_loc@plt>
    e188:	ldr	x1, [x0]
    e18c:	mov	x21, x22
    e190:	ldrb	w0, [x21, #1]!
    e194:	ldrh	w0, [x1, x0, lsl #1]
    e198:	tbnz	w0, #0, e190 <_argp_fmtstream_update@@Base+0x3b8>
    e19c:	b	dfa8 <_argp_fmtstream_update@@Base+0x1d0>
    e1a0:	cmp	x0, #0x0
    e1a4:	mov	x22, #0x0                   	// #0
    e1a8:	b.le	e13c <_argp_fmtstream_update@@Base+0x364>
    e1ac:	ldr	x0, [x20]
    e1b0:	ldp	x1, x2, [x0, #40]
    e1b4:	add	x3, x1, #0x1
    e1b8:	cmp	x1, x2
    e1bc:	b.cs	e1ec <_argp_fmtstream_update@@Base+0x414>  // b.hs, b.nlast
    e1c0:	str	x3, [x0, #40]
    e1c4:	strb	w24, [x1]
    e1c8:	ldr	x0, [x20, #24]
    e1cc:	add	x22, x22, #0x1
    e1d0:	cmp	x0, x22
    e1d4:	b.le	e13c <_argp_fmtstream_update@@Base+0x364>
    e1d8:	ldr	x0, [x20]
    e1dc:	ldp	x1, x2, [x0, #40]
    e1e0:	add	x3, x1, #0x1
    e1e4:	cmp	x1, x2
    e1e8:	b.cc	e1c0 <_argp_fmtstream_update@@Base+0x3e8>  // b.lo, b.ul, b.last
    e1ec:	mov	w1, #0x20                  	// #32
    e1f0:	bl	a940 <__overflow@plt>
    e1f4:	b	e1c8 <_argp_fmtstream_update@@Base+0x3f0>
    e1f8:	mov	x21, #0x0                   	// #0
    e1fc:	b	e214 <_argp_fmtstream_update@@Base+0x43c>
    e200:	str	x3, [x0, #40]
    e204:	strb	w24, [x1]
    e208:	add	x21, x21, #0x1
    e20c:	cmp	x22, x21
    e210:	b.eq	ded8 <_argp_fmtstream_update@@Base+0x100>  // b.none
    e214:	ldr	x0, [x20]
    e218:	ldp	x1, x2, [x0, #40]
    e21c:	add	x3, x1, #0x1
    e220:	cmp	x1, x2
    e224:	b.cc	e200 <_argp_fmtstream_update@@Base+0x428>  // b.lo, b.ul, b.last
    e228:	mov	w1, #0x20                  	// #32
    e22c:	bl	a940 <__overflow@plt>
    e230:	b	e208 <_argp_fmtstream_update@@Base+0x430>
    e234:	add	x2, x25, x27
    e238:	mov	x1, x21
    e23c:	sub	x2, x2, x21
    e240:	mov	x0, x19
    e244:	bl	a2d0 <memmove@plt>
    e248:	ldr	x0, [x20, #24]
    e24c:	b	e144 <_argp_fmtstream_update@@Base+0x36c>
    e250:	mov	x22, x2
    e254:	mov	x21, x2
    e258:	b	dfa8 <_argp_fmtstream_update@@Base+0x1d0>
    e25c:	add	x0, x27, x21
    e260:	sub	x2, x22, x0
    e264:	ldp	x21, x22, [sp, #32]
    e268:	add	x23, x23, x2
    e26c:	ldp	x25, x26, [sp, #64]
    e270:	ldp	x27, x28, [sp, #80]
    e274:	str	x0, [x20, #40]
    e278:	ldr	x0, [x20, #48]
    e27c:	str	x23, [x20, #56]
    e280:	sub	x2, x23, x0
    e284:	ldp	x23, x24, [sp, #48]
    e288:	str	x2, [x20, #32]
    e28c:	ldp	x19, x20, [sp, #16]
    e290:	ldp	x29, x30, [sp], #96
    e294:	ret
    e298:	sub	x23, x23, x21
    e29c:	mov	x1, x21
    e2a0:	mov	x2, x23
    e2a4:	add	x0, x22, x28
    e2a8:	bl	a2d0 <memmove@plt>
    e2ac:	mov	x25, x19
    e2b0:	ldr	x1, [x20, #24]
    e2b4:	mov	x0, x22
    e2b8:	mov	w2, #0xa                   	// #10
    e2bc:	add	x21, x1, #0x1
    e2c0:	add	x21, x22, x21
    e2c4:	strb	w2, [x0], #1
    e2c8:	add	x2, x21, x23
    e2cc:	sub	x23, x21, x19
    e2d0:	sub	x27, x2, x19
    e2d4:	mov	x19, x0
    e2d8:	b	e0e4 <_argp_fmtstream_update@@Base+0x30c>
    e2dc:	mov	x0, x3
    e2e0:	mov	w1, #0xa                   	// #10
    e2e4:	bl	a940 <__overflow@plt>
    e2e8:	b	e020 <_argp_fmtstream_update@@Base+0x248>
    e2ec:	ldp	x21, x22, [sp, #32]
    e2f0:	ldp	x25, x26, [sp, #64]
    e2f4:	ldp	x27, x28, [sp, #80]
    e2f8:	str	x0, [x20, #40]
    e2fc:	ldr	x0, [x20, #48]
    e300:	sub	x2, x23, x0
    e304:	ldp	x23, x24, [sp, #48]
    e308:	str	x2, [x20, #32]
    e30c:	ldp	x19, x20, [sp, #16]
    e310:	ldp	x29, x30, [sp], #96
    e314:	ret

000000000000e318 <argp_fmtstream_free@@Base>:
    e318:	stp	x29, x30, [sp, #-32]!
    e31c:	mov	x29, sp
    e320:	str	x19, [sp, #16]
    e324:	mov	x19, x0
    e328:	bl	a520 <_argp_fmtstream_update@plt>
    e32c:	ldp	x0, x2, [x19, #48]
    e330:	cmp	x2, x0
    e334:	b.ls	e34c <argp_fmtstream_free@@Base+0x34>  // b.plast
    e338:	ldr	x3, [x19]
    e33c:	sub	x2, x2, x0
    e340:	mov	x1, #0x1                   	// #1
    e344:	bl	a320 <fwrite_unlocked@plt>
    e348:	ldr	x0, [x19, #48]
    e34c:	bl	aa50 <free@plt>
    e350:	mov	x0, x19
    e354:	ldr	x19, [sp, #16]
    e358:	ldp	x29, x30, [sp], #32
    e35c:	b	aa50 <free@plt>

000000000000e360 <_argp_fmtstream_ensure@@Base>:
    e360:	stp	x29, x30, [sp, #-32]!
    e364:	mov	x29, sp
    e368:	stp	x19, x20, [sp, #16]
    e36c:	mov	x20, x1
    e370:	ldp	x2, x1, [x0, #56]
    e374:	sub	x1, x1, x2
    e378:	cmp	x1, x20
    e37c:	b.cc	e390 <_argp_fmtstream_ensure@@Base+0x30>  // b.lo, b.ul, b.last
    e380:	mov	w0, #0x1                   	// #1
    e384:	ldp	x19, x20, [sp, #16]
    e388:	ldp	x29, x30, [sp], #32
    e38c:	ret
    e390:	mov	x19, x0
    e394:	bl	a520 <_argp_fmtstream_update@plt>
    e398:	mov	x1, #0x1                   	// #1
    e39c:	ldp	x0, x2, [x19, #48]
    e3a0:	ldr	x3, [x19]
    e3a4:	sub	x2, x2, x0
    e3a8:	bl	a320 <fwrite_unlocked@plt>
    e3ac:	mov	x1, x0
    e3b0:	ldp	x0, x2, [x19, #48]
    e3b4:	sub	x3, x2, x0
    e3b8:	cmp	x1, x3
    e3bc:	b.ne	e404 <_argp_fmtstream_ensure@@Base+0xa4>  // b.any
    e3c0:	ldr	x1, [x19, #64]
    e3c4:	str	xzr, [x19, #32]
    e3c8:	str	x0, [x19, #56]
    e3cc:	sub	x1, x1, x0
    e3d0:	cmp	x20, x1
    e3d4:	b.ls	e380 <_argp_fmtstream_ensure@@Base+0x20>  // b.plast
    e3d8:	adds	x20, x20, x1
    e3dc:	b.cs	e434 <_argp_fmtstream_ensure@@Base+0xd4>  // b.hs, b.nlast
    e3e0:	mov	x1, x20
    e3e4:	bl	a7e0 <realloc@plt>
    e3e8:	mov	x1, x0
    e3ec:	cbz	x0, e434 <_argp_fmtstream_ensure@@Base+0xd4>
    e3f0:	add	x20, x0, x20
    e3f4:	mov	w0, #0x1                   	// #1
    e3f8:	stp	x1, x1, [x19, #48]
    e3fc:	str	x20, [x19, #64]
    e400:	b	e384 <_argp_fmtstream_ensure@@Base+0x24>
    e404:	ldr	x3, [x19, #32]
    e408:	sub	x2, x2, x1
    e40c:	str	x2, [x19, #56]
    e410:	sub	x2, x2, x0
    e414:	sub	x3, x3, x1
    e418:	str	x3, [x19, #32]
    e41c:	add	x1, x0, x1
    e420:	bl	a2d0 <memmove@plt>
    e424:	mov	w0, #0x0                   	// #0
    e428:	ldp	x19, x20, [sp, #16]
    e42c:	ldp	x29, x30, [sp], #32
    e430:	ret
    e434:	bl	aeb0 <__errno_location@plt>
    e438:	mov	x1, x0
    e43c:	mov	w2, #0xc                   	// #12
    e440:	mov	w0, #0x0                   	// #0
    e444:	str	w2, [x1]
    e448:	b	e384 <_argp_fmtstream_ensure@@Base+0x24>
    e44c:	nop

000000000000e450 <argp_fmtstream_printf@@Base>:
    e450:	stp	x29, x30, [sp, #-320]!
    e454:	mov	x29, sp
    e458:	str	x25, [sp, #64]
    e45c:	mov	x25, x0
    e460:	mov	x0, x25
    e464:	stp	x19, x20, [sp, #16]
    e468:	add	x20, sp, #0x50
    e46c:	stp	x21, x22, [sp, #32]
    e470:	mov	x21, x1
    e474:	mov	x1, #0x96                  	// #150
    e478:	stp	x23, x24, [sp, #48]
    e47c:	mov	w22, #0xffffff80            	// #-128
    e480:	add	x24, sp, #0x110
    e484:	str	q0, [sp, #144]
    e488:	mov	w23, #0xffffffd0            	// #-48
    e48c:	str	q1, [sp, #160]
    e490:	str	q2, [sp, #176]
    e494:	str	q3, [sp, #192]
    e498:	str	q4, [sp, #208]
    e49c:	str	q5, [sp, #224]
    e4a0:	str	q6, [sp, #240]
    e4a4:	str	q7, [sp, #256]
    e4a8:	stp	x2, x3, [sp, #272]
    e4ac:	stp	x4, x5, [sp, #288]
    e4b0:	stp	x6, x7, [sp, #304]
    e4b4:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e4b8:	mov	x3, x20
    e4bc:	mov	x2, x21
    e4c0:	cbz	w0, e548 <argp_fmtstream_printf@@Base+0xf8>
    e4c4:	nop
    e4c8:	add	x1, sp, #0x140
    e4cc:	stp	x1, x1, [sp, #112]
    e4d0:	str	x24, [sp, #128]
    e4d4:	stp	w23, w22, [sp, #136]
    e4d8:	ldp	x4, x5, [sp, #112]
    e4dc:	ldp	x0, x19, [x25, #56]
    e4e0:	stp	x4, x5, [x20]
    e4e4:	ldp	x4, x5, [sp, #128]
    e4e8:	stp	x4, x5, [x20, #16]
    e4ec:	sub	x19, x19, x0
    e4f0:	mov	x1, x19
    e4f4:	bl	adc0 <vsnprintf@plt>
    e4f8:	add	w1, w0, #0x1
    e4fc:	cmp	x19, w0, sxtw
    e500:	sxtw	x2, w0
    e504:	b.ls	e530 <argp_fmtstream_printf@@Base+0xe0>  // b.plast
    e508:	ldr	x1, [x25, #56]
    e50c:	mov	x0, x2
    e510:	ldp	x19, x20, [sp, #16]
    e514:	add	x2, x1, x2
    e518:	str	x2, [x25, #56]
    e51c:	ldp	x21, x22, [sp, #32]
    e520:	ldp	x23, x24, [sp, #48]
    e524:	ldr	x25, [sp, #64]
    e528:	ldp	x29, x30, [sp], #320
    e52c:	ret
    e530:	sxtw	x1, w1
    e534:	mov	x0, x25
    e538:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e53c:	mov	x3, x20
    e540:	mov	x2, x21
    e544:	cbnz	w0, e4c8 <argp_fmtstream_printf@@Base+0x78>
    e548:	mov	x0, #0xffffffffffffffff    	// #-1
    e54c:	ldp	x19, x20, [sp, #16]
    e550:	ldp	x21, x22, [sp, #32]
    e554:	ldp	x23, x24, [sp, #48]
    e558:	ldr	x25, [sp, #64]
    e55c:	ldp	x29, x30, [sp], #320
    e560:	ret
    e564:	nop

000000000000e568 <argp_fmtstream_write@@Base>:
    e568:	stp	x29, x30, [sp, #-48]!
    e56c:	mov	x29, sp
    e570:	stp	x19, x20, [sp, #16]
    e574:	mov	x20, x2
    e578:	mov	x19, x0
    e57c:	ldp	x2, x3, [x0, #56]
    e580:	str	x21, [sp, #32]
    e584:	mov	x21, x1
    e588:	add	x1, x2, x20
    e58c:	cmp	x3, x1
    e590:	b.cs	e5ac <argp_fmtstream_write@@Base+0x44>  // b.hs, b.nlast
    e594:	mov	x1, x20
    e598:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e59c:	mov	w1, w0
    e5a0:	mov	x0, #0x0                   	// #0
    e5a4:	cbz	w1, e5cc <argp_fmtstream_write@@Base+0x64>
    e5a8:	ldr	x2, [x19, #56]
    e5ac:	mov	x0, x2
    e5b0:	mov	x1, x21
    e5b4:	mov	x2, x20
    e5b8:	bl	a2c0 <memcpy@plt>
    e5bc:	ldr	x2, [x19, #56]
    e5c0:	mov	x0, x20
    e5c4:	add	x2, x2, x20
    e5c8:	str	x2, [x19, #56]
    e5cc:	ldp	x19, x20, [sp, #16]
    e5d0:	ldr	x21, [sp, #32]
    e5d4:	ldp	x29, x30, [sp], #48
    e5d8:	ret
    e5dc:	nop

000000000000e5e0 <argp_fmtstream_puts@@Base>:
    e5e0:	stp	x29, x30, [sp, #-48]!
    e5e4:	mov	x29, sp
    e5e8:	stp	x19, x20, [sp, #16]
    e5ec:	mov	x20, x0
    e5f0:	mov	x0, x1
    e5f4:	str	x21, [sp, #32]
    e5f8:	mov	x21, x1
    e5fc:	bl	a340 <strlen@plt>
    e600:	cbnz	x0, e618 <argp_fmtstream_puts@@Base+0x38>
    e604:	mov	w0, #0x0                   	// #0
    e608:	ldp	x19, x20, [sp, #16]
    e60c:	ldr	x21, [sp, #32]
    e610:	ldp	x29, x30, [sp], #48
    e614:	ret
    e618:	mov	x19, x0
    e61c:	ldp	x0, x2, [x20, #56]
    e620:	add	x1, x0, x19
    e624:	cmp	x2, x1
    e628:	b.cs	e648 <argp_fmtstream_puts@@Base+0x68>  // b.hs, b.nlast
    e62c:	mov	x1, x19
    e630:	mov	x0, x20
    e634:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e638:	mov	w1, w0
    e63c:	mov	w0, #0xffffffff            	// #-1
    e640:	cbz	w1, e608 <argp_fmtstream_puts@@Base+0x28>
    e644:	ldr	x0, [x20, #56]
    e648:	mov	x1, x21
    e64c:	mov	x2, x19
    e650:	bl	a2c0 <memcpy@plt>
    e654:	ldr	x2, [x20, #56]
    e658:	mov	w0, #0x0                   	// #0
    e65c:	ldr	x21, [sp, #32]
    e660:	add	x2, x2, x19
    e664:	str	x2, [x20, #56]
    e668:	ldp	x19, x20, [sp, #16]
    e66c:	ldp	x29, x30, [sp], #48
    e670:	ret
    e674:	nop

000000000000e678 <argp_fmtstream_putc@@Base>:
    e678:	stp	x29, x30, [sp, #-32]!
    e67c:	mov	x29, sp
    e680:	stp	x19, x20, [sp, #16]
    e684:	mov	w20, w1
    e688:	mov	x19, x0
    e68c:	ldp	x1, x2, [x0, #56]
    e690:	cmp	x1, x2
    e694:	b.cs	e6b4 <argp_fmtstream_putc@@Base+0x3c>  // b.hs, b.nlast
    e698:	add	x0, x1, #0x1
    e69c:	str	x0, [x19, #56]
    e6a0:	and	w0, w20, #0xff
    e6a4:	strb	w20, [x1]
    e6a8:	ldp	x19, x20, [sp, #16]
    e6ac:	ldp	x29, x30, [sp], #32
    e6b0:	ret
    e6b4:	mov	x1, #0x1                   	// #1
    e6b8:	bl	ad80 <_argp_fmtstream_ensure@plt>
    e6bc:	cbz	w0, e6c8 <argp_fmtstream_putc@@Base+0x50>
    e6c0:	ldr	x1, [x19, #56]
    e6c4:	b	e698 <argp_fmtstream_putc@@Base+0x20>
    e6c8:	mov	w0, #0xffffffff            	// #-1
    e6cc:	b	e6a8 <argp_fmtstream_putc@@Base+0x30>

000000000000e6d0 <argp_fmtstream_set_lmargin@@Base>:
    e6d0:	stp	x29, x30, [sp, #-32]!
    e6d4:	mov	x29, sp
    e6d8:	stp	x19, x20, [sp, #16]
    e6dc:	mov	x20, x1
    e6e0:	mov	x19, x0
    e6e4:	ldp	x3, x1, [x0, #48]
    e6e8:	ldr	x2, [x0, #32]
    e6ec:	sub	x1, x1, x3
    e6f0:	cmp	x1, x2
    e6f4:	b.hi	e70c <argp_fmtstream_set_lmargin@@Base+0x3c>  // b.pmore
    e6f8:	ldr	x0, [x19, #8]
    e6fc:	str	x20, [x19, #8]
    e700:	ldp	x19, x20, [sp, #16]
    e704:	ldp	x29, x30, [sp], #32
    e708:	ret
    e70c:	bl	a520 <_argp_fmtstream_update@plt>
    e710:	ldr	x0, [x19, #8]
    e714:	str	x20, [x19, #8]
    e718:	ldp	x19, x20, [sp, #16]
    e71c:	ldp	x29, x30, [sp], #32
    e720:	ret
    e724:	nop

000000000000e728 <argp_fmtstream_set_rmargin@@Base>:
    e728:	stp	x29, x30, [sp, #-32]!
    e72c:	mov	x29, sp
    e730:	stp	x19, x20, [sp, #16]
    e734:	mov	x20, x1
    e738:	mov	x19, x0
    e73c:	ldp	x3, x1, [x0, #48]
    e740:	ldr	x2, [x0, #32]
    e744:	sub	x1, x1, x3
    e748:	cmp	x1, x2
    e74c:	b.hi	e764 <argp_fmtstream_set_rmargin@@Base+0x3c>  // b.pmore
    e750:	ldr	x0, [x19, #16]
    e754:	str	x20, [x19, #16]
    e758:	ldp	x19, x20, [sp, #16]
    e75c:	ldp	x29, x30, [sp], #32
    e760:	ret
    e764:	bl	a520 <_argp_fmtstream_update@plt>
    e768:	ldr	x0, [x19, #16]
    e76c:	str	x20, [x19, #16]
    e770:	ldp	x19, x20, [sp, #16]
    e774:	ldp	x29, x30, [sp], #32
    e778:	ret
    e77c:	nop

000000000000e780 <argp_fmtstream_set_wmargin@@Base>:
    e780:	stp	x29, x30, [sp, #-32]!
    e784:	mov	x29, sp
    e788:	stp	x19, x20, [sp, #16]
    e78c:	mov	x20, x1
    e790:	mov	x19, x0
    e794:	ldp	x3, x1, [x0, #48]
    e798:	ldr	x2, [x0, #32]
    e79c:	sub	x1, x1, x3
    e7a0:	cmp	x1, x2
    e7a4:	b.hi	e7bc <argp_fmtstream_set_wmargin@@Base+0x3c>  // b.pmore
    e7a8:	ldr	x0, [x19, #24]
    e7ac:	str	x20, [x19, #24]
    e7b0:	ldp	x19, x20, [sp, #16]
    e7b4:	ldp	x29, x30, [sp], #32
    e7b8:	ret
    e7bc:	bl	a520 <_argp_fmtstream_update@plt>
    e7c0:	ldr	x0, [x19, #24]
    e7c4:	str	x20, [x19, #24]
    e7c8:	ldp	x19, x20, [sp, #16]
    e7cc:	ldp	x29, x30, [sp], #32
    e7d0:	ret
    e7d4:	nop

000000000000e7d8 <argp_fmtstream_point@@Base>:
    e7d8:	stp	x29, x30, [sp, #-32]!
    e7dc:	mov	x29, sp
    e7e0:	ldp	x3, x1, [x0, #48]
    e7e4:	ldr	x2, [x0, #32]
    e7e8:	str	x19, [sp, #16]
    e7ec:	mov	x19, x0
    e7f0:	sub	x1, x1, x3
    e7f4:	cmp	x1, x2
    e7f8:	b.hi	e814 <argp_fmtstream_point@@Base+0x3c>  // b.pmore
    e7fc:	ldr	x0, [x19, #40]
    e800:	ldr	x19, [sp, #16]
    e804:	cmp	x0, #0x0
    e808:	csel	x0, x0, xzr, ge  // ge = tcont
    e80c:	ldp	x29, x30, [sp], #32
    e810:	ret
    e814:	bl	a520 <_argp_fmtstream_update@plt>
    e818:	ldr	x0, [x19, #40]
    e81c:	ldr	x19, [sp, #16]
    e820:	cmp	x0, #0x0
    e824:	csel	x0, x0, xzr, ge  // ge = tcont
    e828:	ldp	x29, x30, [sp], #32
    e82c:	ret
    e830:	stp	x29, x30, [sp, #-32]!
    e834:	mov	x29, sp
    e838:	str	x19, [sp, #16]
    e83c:	mov	x19, x0
    e840:	bl	a9d0 <__ctype_b_loc@plt>
    e844:	ldr	x5, [x0]
    e848:	ldr	x1, [x19]
    e84c:	b	e854 <argp_fmtstream_point@@Base+0x7c>
    e850:	str	x1, [x19]
    e854:	ldrb	w4, [x1], #1
    e858:	ubfiz	x0, x4, #1, #8
    e85c:	ldrh	w3, [x5, x0]
    e860:	tbnz	w3, #13, e850 <argp_fmtstream_point@@Base+0x78>
    e864:	cmp	w4, #0x2d
    e868:	cset	w0, ne  // ne = any
    e86c:	cbz	w4, e890 <argp_fmtstream_point@@Base+0xb8>
    e870:	tbnz	w3, #3, e890 <argp_fmtstream_point@@Base+0xb8>
    e874:	nop
    e878:	str	x1, [x19]
    e87c:	ldrb	w2, [x1], #1
    e880:	ubfiz	x3, x2, #1, #8
    e884:	cbz	w2, e890 <argp_fmtstream_point@@Base+0xb8>
    e888:	ldrh	w3, [x5, x3]
    e88c:	tbz	w3, #3, e878 <argp_fmtstream_point@@Base+0xa0>
    e890:	ldr	x19, [sp, #16]
    e894:	ldp	x29, x30, [sp], #32
    e898:	ret
    e89c:	nop
    e8a0:	stp	x29, x30, [sp, #-32]!
    e8a4:	mov	x29, sp
    e8a8:	stp	x19, x20, [sp, #16]
    e8ac:	mov	x20, x0
    e8b0:	ldr	x19, [x0, #24]
    e8b4:	cbz	x19, e8c8 <argp_fmtstream_point@@Base+0xf0>
    e8b8:	mov	x0, x19
    e8bc:	ldr	x19, [x19, #40]
    e8c0:	bl	aa50 <free@plt>
    e8c4:	cbnz	x19, e8b8 <argp_fmtstream_point@@Base+0xe0>
    e8c8:	ldr	w0, [x20, #8]
    e8cc:	cbnz	w0, e8e0 <argp_fmtstream_point@@Base+0x108>
    e8d0:	mov	x0, x20
    e8d4:	ldp	x19, x20, [sp, #16]
    e8d8:	ldp	x29, x30, [sp], #32
    e8dc:	b	aa50 <free@plt>
    e8e0:	ldr	x0, [x20]
    e8e4:	bl	aa50 <free@plt>
    e8e8:	ldr	x0, [x20, #16]
    e8ec:	bl	aa50 <free@plt>
    e8f0:	mov	x0, x20
    e8f4:	ldp	x19, x20, [sp, #16]
    e8f8:	ldp	x29, x30, [sp], #32
    e8fc:	b	aa50 <free@plt>
    e900:	ldr	x2, [x0, #16]
    e904:	cbz	x2, e910 <argp_fmtstream_point@@Base+0x138>
    e908:	mov	w0, #0x0                   	// #0
    e90c:	ret
    e910:	ldr	x2, [x1, #16]
    e914:	cbnz	x2, e908 <argp_fmtstream_point@@Base+0x130>
    e918:	ldr	w2, [x1, #24]
    e91c:	ldr	w1, [x0, #24]
    e920:	orr	w1, w1, w2
    e924:	tbnz	w1, #4, e908 <argp_fmtstream_point@@Base+0x130>
    e928:	ldr	x1, [x3]
    e92c:	ldr	w0, [x0, #8]
    e930:	add	x2, x1, #0x1
    e934:	str	x2, [x3]
    e938:	strb	w0, [x1]
    e93c:	b	e908 <argp_fmtstream_point@@Base+0x130>
    e940:	mov	x6, x0
    e944:	cbz	x0, e9bc <argp_fmtstream_point@@Base+0x1e4>
    e948:	stp	x29, x30, [sp, #-48]!
    e94c:	mov	x0, x4
    e950:	mov	x29, sp
    e954:	ldr	w1, [x1]
    e958:	stp	x19, x20, [sp, #16]
    e95c:	mov	x19, x5
    e960:	tbz	w1, #0, e994 <argp_fmtstream_point@@Base+0x1bc>
    e964:	mov	x1, x6
    e968:	mov	w2, #0x5                   	// #5
    e96c:	str	x21, [sp, #32]
    e970:	mov	x21, x3
    e974:	bl	ada0 <dcgettext@plt>
    e978:	mov	x2, x0
    e97c:	mov	x1, x21
    e980:	mov	x0, x19
    e984:	ldp	x19, x20, [sp, #16]
    e988:	ldr	x21, [sp, #32]
    e98c:	ldp	x29, x30, [sp], #48
    e990:	b	a8f0 <argp_fmtstream_printf@plt>
    e994:	mov	x20, x2
    e998:	mov	x1, x6
    e99c:	mov	w2, #0x5                   	// #5
    e9a0:	bl	ada0 <dcgettext@plt>
    e9a4:	mov	x1, x20
    e9a8:	mov	x2, x0
    e9ac:	mov	x0, x19
    e9b0:	ldp	x19, x20, [sp, #16]
    e9b4:	ldp	x29, x30, [sp], #48
    e9b8:	b	a8f0 <argp_fmtstream_printf@plt>
    e9bc:	ret
    e9c0:	stp	x29, x30, [sp, #-64]!
    e9c4:	mov	x29, sp
    e9c8:	stp	x21, x22, [sp, #32]
    e9cc:	cbz	w1, ea80 <argp_fmtstream_point@@Base+0x2a8>
    e9d0:	str	x23, [sp, #48]
    e9d4:	mov	x23, x2
    e9d8:	sub	w2, w1, #0x1
    e9dc:	mov	x21, x0
    e9e0:	mov	w1, w2
    e9e4:	stp	x19, x20, [sp, #16]
    e9e8:	add	x1, x1, #0x1
    e9ec:	lsl	x22, x1, #3
    e9f0:	sub	x1, x22, x1
    e9f4:	add	x22, x0, x1, lsl #3
    e9f8:	ldr	w0, [x21, #8]
    e9fc:	ldr	x19, [x21]
    ea00:	sub	w20, w0, #0x1
    ea04:	cbz	w0, ea40 <argp_fmtstream_point@@Base+0x268>
    ea08:	add	x20, x20, #0x1
    ea0c:	add	x20, x20, x20, lsl #1
    ea10:	add	x20, x19, x20, lsl #4
    ea14:	nop
    ea18:	ldr	x0, [x19]
    ea1c:	cbz	x0, ea34 <argp_fmtstream_point@@Base+0x25c>
    ea20:	ldr	w3, [x19, #24]
    ea24:	mov	x1, x23
    ea28:	tbnz	w3, #1, ea34 <argp_fmtstream_point@@Base+0x25c>
    ea2c:	bl	a9b0 <strcmp@plt>
    ea30:	cbz	w0, ea68 <argp_fmtstream_point@@Base+0x290>
    ea34:	add	x19, x19, #0x30
    ea38:	cmp	x19, x20
    ea3c:	b.ne	ea18 <argp_fmtstream_point@@Base+0x240>  // b.any
    ea40:	add	x21, x21, #0x38
    ea44:	cmp	x22, x21
    ea48:	b.ne	e9f8 <argp_fmtstream_point@@Base+0x220>  // b.any
    ea4c:	mov	x21, #0x0                   	// #0
    ea50:	mov	x0, x21
    ea54:	ldp	x19, x20, [sp, #16]
    ea58:	ldp	x21, x22, [sp, #32]
    ea5c:	ldr	x23, [sp, #48]
    ea60:	ldp	x29, x30, [sp], #64
    ea64:	ret
    ea68:	ldp	x19, x20, [sp, #16]
    ea6c:	ldr	x23, [sp, #48]
    ea70:	mov	x0, x21
    ea74:	ldp	x21, x22, [sp, #32]
    ea78:	ldp	x29, x30, [sp], #64
    ea7c:	ret
    ea80:	mov	x21, #0x0                   	// #0
    ea84:	b	ea70 <argp_fmtstream_point@@Base+0x298>
    ea88:	stp	x29, x30, [sp, #-32]!
    ea8c:	mov	x29, sp
    ea90:	stp	x19, x20, [sp, #16]
    ea94:	mov	x19, x1
    ea98:	mov	x20, #0x0                   	// #0
    ea9c:	cbz	x0, eab0 <argp_fmtstream_point@@Base+0x2d8>
    eaa0:	mov	w1, #0xa                   	// #10
    eaa4:	bl	ab60 <strchr@plt>
    eaa8:	cmp	x0, #0x0
    eaac:	cset	x20, ne  // ne = any
    eab0:	cbz	x19, ead4 <argp_fmtstream_point@@Base+0x2fc>
    eab4:	ldr	x2, [x19]
    eab8:	cbz	x2, ead4 <argp_fmtstream_point@@Base+0x2fc>
    eabc:	ldr	x0, [x2, #16]
    eac0:	ldr	x1, [x2, #32]
    eac4:	bl	ea88 <argp_fmtstream_point@@Base+0x2b0>
    eac8:	add	x20, x20, x0
    eacc:	ldr	x2, [x19, #32]!
    ead0:	cbnz	x2, eabc <argp_fmtstream_point@@Base+0x2e4>
    ead4:	mov	x0, x20
    ead8:	ldp	x19, x20, [sp, #16]
    eadc:	ldp	x29, x30, [sp], #32
    eae0:	ret
    eae4:	nop
    eae8:	stp	x29, x30, [sp, #-48]!
    eaec:	mov	x29, sp
    eaf0:	stp	x19, x20, [sp, #16]
    eaf4:	mov	x19, x2
    eaf8:	mov	w20, w1
    eafc:	mov	x1, x3
    eb00:	str	x21, [sp, #32]
    eb04:	mov	x21, x0
    eb08:	mov	x0, x2
    eb0c:	bl	ac60 <_argp_input@plt>
    eb10:	mov	x2, x0
    eb14:	mov	x1, x21
    eb18:	mov	w0, w20
    eb1c:	ldr	x21, [sp, #32]
    eb20:	ldr	x3, [x19, #40]
    eb24:	ldp	x19, x20, [sp, #16]
    eb28:	mov	x16, x3
    eb2c:	ldp	x29, x30, [sp], #48
    eb30:	br	x16
    eb34:	nop
    eb38:	stp	x29, x30, [sp, #-160]!
    eb3c:	mov	x29, sp
    eb40:	stp	x21, x22, [sp, #32]
    eb44:	mov	x22, x0
    eb48:	mov	x21, x1
    eb4c:	mov	x0, #0x20                  	// #32
    eb50:	stp	x19, x20, [sp, #16]
    eb54:	stp	x23, x24, [sp, #48]
    eb58:	stp	x25, x26, [sp, #64]
    eb5c:	stp	x27, x28, [sp, #80]
    eb60:	ldr	x23, [x22]
    eb64:	ldr	x20, [x22, #32]
    eb68:	bl	a5f0 <malloc@plt>
    eb6c:	cbz	x0, f098 <argp_fmtstream_point@@Base+0x8c0>
    eb70:	str	wzr, [x0, #8]
    eb74:	mov	x19, x0
    eb78:	str	xzr, [x0, #24]
    eb7c:	cbz	x23, ed68 <argp_fmtstream_point@@Base+0x590>
    eb80:	ldr	w0, [x23, #24]
    eb84:	tbnz	w0, #2, f078 <argp_fmtstream_point@@Base+0x8a0>
    eb88:	mov	x24, x23
    eb8c:	mov	w25, #0x0                   	// #0
    eb90:	mov	w27, #0x0                   	// #0
    eb94:	nop
    eb98:	ldr	w0, [x24, #8]
    eb9c:	cbnz	w0, eba8 <argp_fmtstream_point@@Base+0x3d0>
    eba0:	ldr	x0, [x24]
    eba4:	cbz	x0, ebec <argp_fmtstream_point@@Base+0x414>
    eba8:	ldr	w0, [x24, #24]
    ebac:	tbnz	w0, #2, ebb8 <argp_fmtstream_point@@Base+0x3e0>
    ebb0:	add	w25, w25, #0x1
    ebb4:	str	w25, [x19, #8]
    ebb8:	ldr	w0, [x24, #24]
    ebbc:	tbnz	w0, #3, ebe4 <argp_fmtstream_point@@Base+0x40c>
    ebc0:	ldr	w26, [x24, #8]
    ebc4:	sub	w0, w26, #0x1
    ebc8:	cmp	w0, #0xfe
    ebcc:	b.hi	ebe4 <argp_fmtstream_point@@Base+0x40c>  // b.pmore
    ebd0:	bl	a9d0 <__ctype_b_loc@plt>
    ebd4:	ldr	x0, [x0]
    ebd8:	ldrh	w0, [x0, w26, sxtw #1]
    ebdc:	ubfx	x0, x0, #14, #1
    ebe0:	add	w27, w27, w0
    ebe4:	add	x24, x24, #0x30
    ebe8:	b	eb98 <argp_fmtstream_point@@Base+0x3c0>
    ebec:	ldr	x0, [x24, #32]
    ebf0:	cbnz	x0, eba8 <argp_fmtstream_point@@Base+0x3d0>
    ebf4:	ldr	w28, [x24, #40]
    ebf8:	cbnz	w28, eba8 <argp_fmtstream_point@@Base+0x3d0>
    ebfc:	mov	w0, #0x38                  	// #56
    ec00:	umull	x0, w25, w0
    ec04:	bl	a5f0 <malloc@plt>
    ec08:	mov	x24, x0
    ec0c:	str	x24, [x19]
    ec10:	add	w0, w27, #0x1
    ec14:	bl	a5f0 <malloc@plt>
    ec18:	str	x0, [x19, #16]
    ec1c:	cmp	x24, #0x0
    ec20:	mov	x3, x0
    ec24:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    ec28:	b.eq	f058 <argp_fmtstream_point@@Base+0x880>  // b.none
    ec2c:	ldr	w2, [x23, #8]
    ec30:	mov	x25, x0
    ec34:	ldr	w1, [x23, #40]
    ec38:	cbnz	w2, ed08 <argp_fmtstream_point@@Base+0x530>
    ec3c:	nop
    ec40:	ldr	x0, [x23]
    ec44:	cbz	x0, ed38 <argp_fmtstream_point@@Base+0x560>
    ec48:	str	x23, [x24]
    ec4c:	str	wzr, [x24, #8]
    ec50:	str	x25, [x24, #16]
    ec54:	cbnz	w1, ed18 <argp_fmtstream_point@@Base+0x540>
    ec58:	ldr	x0, [x23]
    ec5c:	cmp	x0, #0x0
    ec60:	ccmp	w2, #0x0, #0x0, eq  // eq = none
    ec64:	b.eq	ed50 <argp_fmtstream_point@@Base+0x578>  // b.none
    ec68:	mov	w27, #0x1                   	// #1
    ec6c:	str	w28, [x24, #24]
    ec70:	stp	x21, x22, [x24, #32]
    ec74:	nop
    ec78:	str	w27, [x24, #8]
    ec7c:	ldr	w0, [x23, #24]
    ec80:	tbnz	w0, #3, ecd8 <argp_fmtstream_point@@Base+0x500>
    ec84:	ldr	w26, [x23, #8]
    ec88:	sub	w0, w26, #0x1
    ec8c:	cmp	w0, #0xfe
    ec90:	b.hi	ecd8 <argp_fmtstream_point@@Base+0x500>  // b.pmore
    ec94:	str	x3, [sp, #96]
    ec98:	bl	a9d0 <__ctype_b_loc@plt>
    ec9c:	ldr	x0, [x0]
    eca0:	ldr	x3, [sp, #96]
    eca4:	ldrh	w0, [x0, w26, sxtw #1]
    eca8:	tbz	w0, #14, ecd8 <argp_fmtstream_point@@Base+0x500>
    ecac:	and	w26, w26, #0xff
    ecb0:	cmp	x3, x25
    ecb4:	b.cs	ed58 <argp_fmtstream_point@@Base+0x580>  // b.hs, b.nlast
    ecb8:	mov	x1, x3
    ecbc:	b	eccc <argp_fmtstream_point@@Base+0x4f4>
    ecc0:	add	x1, x1, #0x1
    ecc4:	cmp	x1, x25
    ecc8:	b.eq	ed58 <argp_fmtstream_point@@Base+0x580>  // b.none
    eccc:	ldrb	w0, [x1]
    ecd0:	cmp	w0, w26
    ecd4:	b.ne	ecc0 <argp_fmtstream_point@@Base+0x4e8>  // b.any
    ecd8:	ldr	w0, [x23, #56]
    ecdc:	add	x23, x23, #0x30
    ece0:	cbnz	w0, ecec <argp_fmtstream_point@@Base+0x514>
    ece4:	ldr	x1, [x23]
    ece8:	cbz	x1, ed20 <argp_fmtstream_point@@Base+0x548>
    ecec:	ldr	w1, [x23, #24]
    ecf0:	add	w27, w27, #0x1
    ecf4:	tbnz	w1, #2, ec78 <argp_fmtstream_point@@Base+0x4a0>
    ecf8:	mov	w2, w0
    ecfc:	add	x24, x24, #0x38
    ed00:	ldr	w1, [x23, #40]
    ed04:	cbz	w2, ec40 <argp_fmtstream_point@@Base+0x468>
    ed08:	str	x23, [x24]
    ed0c:	str	wzr, [x24, #8]
    ed10:	str	x25, [x24, #16]
    ed14:	cbz	w1, ec68 <argp_fmtstream_point@@Base+0x490>
    ed18:	mov	w28, w1
    ed1c:	b	ec68 <argp_fmtstream_point@@Base+0x490>
    ed20:	ldr	x1, [x23, #32]
    ed24:	cbnz	x1, ecec <argp_fmtstream_point@@Base+0x514>
    ed28:	ldr	w2, [x23, #40]
    ed2c:	cbnz	w2, ecec <argp_fmtstream_point@@Base+0x514>
    ed30:	add	x24, x24, #0x38
    ed34:	b	ed00 <argp_fmtstream_point@@Base+0x528>
    ed38:	ldr	x0, [x23, #32]
    ed3c:	cbz	x0, ed60 <argp_fmtstream_point@@Base+0x588>
    ed40:	str	x23, [x24]
    ed44:	str	wzr, [x24, #8]
    ed48:	str	x25, [x24, #16]
    ed4c:	cbnz	w1, ed18 <argp_fmtstream_point@@Base+0x540>
    ed50:	add	w28, w28, #0x1
    ed54:	b	ec68 <argp_fmtstream_point@@Base+0x490>
    ed58:	strb	w26, [x25], #1
    ed5c:	b	ecd8 <argp_fmtstream_point@@Base+0x500>
    ed60:	cbnz	w1, ee64 <argp_fmtstream_point@@Base+0x68c>
    ed64:	strb	wzr, [x25]
    ed68:	cbz	x20, ee44 <argp_fmtstream_point@@Base+0x66c>
    ed6c:	ldr	x24, [x20]
    ed70:	cbz	x24, ee44 <argp_fmtstream_point@@Base+0x66c>
    ed74:	add	x0, x19, #0x18
    ed78:	str	x0, [sp, #152]
    ed7c:	ldr	w25, [x20, #24]
    ed80:	ldr	x26, [x20, #16]
    ed84:	cbnz	w25, ed90 <argp_fmtstream_point@@Base+0x5b8>
    ed88:	mov	x1, x21
    ed8c:	cbz	x26, edd8 <argp_fmtstream_point@@Base+0x600>
    ed90:	ldr	x23, [x22, #32]
    ed94:	mov	x0, #0x30                  	// #48
    ed98:	bl	a5f0 <malloc@plt>
    ed9c:	mov	x1, x0
    eda0:	sub	x23, x20, x23
    eda4:	asr	x23, x23, #5
    eda8:	cbz	x0, edd8 <argp_fmtstream_point@@Base+0x600>
    edac:	str	x26, [x1]
    edb0:	mov	w0, #0x0                   	// #0
    edb4:	stp	w23, w25, [x1, #8]
    edb8:	stp	x21, x22, [x1, #16]
    edbc:	cbz	x21, edc8 <argp_fmtstream_point@@Base+0x5f0>
    edc0:	ldr	w0, [x21, #32]
    edc4:	add	w0, w0, #0x1
    edc8:	ldr	x2, [x19, #24]
    edcc:	str	x1, [x19, #24]
    edd0:	str	w0, [x1, #32]
    edd4:	str	x2, [x1, #40]
    edd8:	mov	x0, x24
    eddc:	bl	eb38 <argp_fmtstream_point@@Base+0x360>
    ede0:	ldr	x1, [x19, #24]
    ede4:	mov	x28, x0
    ede8:	cbz	x1, f050 <argp_fmtstream_point@@Base+0x878>
    edec:	nop
    edf0:	mov	x0, x1
    edf4:	ldr	x1, [x1, #40]
    edf8:	cbnz	x1, edf0 <argp_fmtstream_point@@Base+0x618>
    edfc:	add	x0, x0, #0x28
    ee00:	ldr	w23, [x28, #8]
    ee04:	ldr	x1, [x28, #24]
    ee08:	str	x1, [x0]
    ee0c:	str	xzr, [x28, #24]
    ee10:	cbz	w23, ee34 <argp_fmtstream_point@@Base+0x65c>
    ee14:	ldr	w27, [x19, #8]
    ee18:	cbnz	w27, ee74 <argp_fmtstream_point@@Base+0x69c>
    ee1c:	ldr	x0, [x28]
    ee20:	str	x0, [x19]
    ee24:	ldr	x0, [x28, #16]
    ee28:	str	w23, [x19, #8]
    ee2c:	str	x0, [x19, #16]
    ee30:	str	wzr, [x28, #8]
    ee34:	mov	x0, x28
    ee38:	bl	e8a0 <argp_fmtstream_point@@Base+0xc8>
    ee3c:	ldr	x24, [x20, #32]!
    ee40:	cbnz	x24, ed7c <argp_fmtstream_point@@Base+0x5a4>
    ee44:	mov	x0, x19
    ee48:	ldp	x19, x20, [sp, #16]
    ee4c:	ldp	x21, x22, [sp, #32]
    ee50:	ldp	x23, x24, [sp, #48]
    ee54:	ldp	x25, x26, [sp, #64]
    ee58:	ldp	x27, x28, [sp, #80]
    ee5c:	ldp	x29, x30, [sp], #160
    ee60:	ret
    ee64:	mov	w28, w1
    ee68:	str	x23, [x24]
    ee6c:	str	x25, [x24, #16]
    ee70:	b	ec68 <argp_fmtstream_point@@Base+0x490>
    ee74:	add	w0, w23, w27
    ee78:	mov	w1, #0x38                  	// #56
    ee7c:	str	w0, [sp, #140]
    ee80:	umull	x0, w0, w1
    ee84:	bl	a5f0 <malloc@plt>
    ee88:	str	x0, [sp, #128]
    ee8c:	ldr	x25, [x19, #16]
    ee90:	mov	x0, x25
    ee94:	bl	a340 <strlen@plt>
    ee98:	ldr	x26, [x28, #16]
    ee9c:	mov	w24, w0
    eea0:	str	x24, [sp, #96]
    eea4:	mov	x0, x26
    eea8:	bl	a340 <strlen@plt>
    eeac:	add	x0, x0, #0x1
    eeb0:	add	x0, x0, x24
    eeb4:	bl	a5f0 <malloc@plt>
    eeb8:	ldr	x1, [sp, #128]
    eebc:	mov	x24, x0
    eec0:	cmp	x1, #0x0
    eec4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    eec8:	b.eq	f0b8 <argp_fmtstream_point@@Base+0x8e0>  // b.none
    eecc:	mov	w0, #0x38                  	// #56
    eed0:	ldr	x1, [x19]
    eed4:	umull	x2, w27, w0
    eed8:	ldr	x0, [sp, #128]
    eedc:	str	x1, [sp, #144]
    eee0:	sub	w27, w27, #0x1
    eee4:	add	x27, x27, #0x1
    eee8:	bl	aab0 <mempcpy@plt>
    eeec:	mov	w1, #0x38                  	// #56
    eef0:	umull	x2, w23, w1
    eef4:	ldr	x1, [x28]
    eef8:	bl	a2c0 <memcpy@plt>
    eefc:	ldr	x2, [sp, #96]
    ef00:	mov	x1, x25
    ef04:	mov	x0, x24
    ef08:	bl	a2c0 <memcpy@plt>
    ef0c:	ldr	x0, [sp, #128]
    ef10:	lsl	x3, x27, #3
    ef14:	sub	x27, x3, x27
    ef18:	mov	x2, x0
    ef1c:	add	x27, x0, x27, lsl #3
    ef20:	ldr	x1, [x2, #16]
    ef24:	add	x2, x2, #0x38
    ef28:	sub	x1, x1, x25
    ef2c:	add	x1, x24, x1
    ef30:	stur	x1, [x2, #-40]
    ef34:	cmp	x2, x27
    ef38:	b.ne	ef20 <argp_fmtstream_point@@Base+0x748>  // b.any
    ef3c:	ldr	x0, [sp, #96]
    ef40:	sub	w23, w23, #0x1
    ef44:	add	x1, x24, x0
    ef48:	add	x0, x23, #0x1
    ef4c:	stp	x1, x1, [sp, #104]
    ef50:	lsl	x1, x0, #3
    ef54:	sub	x0, x1, x0
    ef58:	add	x0, x27, x0, lsl #3
    ef5c:	str	x0, [sp, #120]
    ef60:	ldr	w1, [x27, #8]
    ef64:	ldr	x0, [sp, #104]
    ef68:	str	x0, [x27, #16]
    ef6c:	ldr	x5, [x27]
    ef70:	cbz	w1, efd0 <argp_fmtstream_point@@Base+0x7f8>
    ef74:	sub	w1, w1, #0x1
    ef78:	add	x1, x1, #0x1
    ef7c:	add	x1, x1, x1, lsl #1
    ef80:	add	x25, x5, x1, lsl #4
    ef84:	nop
    ef88:	ldr	w0, [x5, #24]
    ef8c:	tbnz	w0, #3, efc4 <argp_fmtstream_point@@Base+0x7ec>
    ef90:	ldr	w23, [x5, #8]
    ef94:	sub	w0, w23, #0x1
    ef98:	cmp	w0, #0xfe
    ef9c:	b.hi	efc4 <argp_fmtstream_point@@Base+0x7ec>  // b.pmore
    efa0:	str	x5, [sp, #96]
    efa4:	bl	a9d0 <__ctype_b_loc@plt>
    efa8:	ldr	x0, [x0]
    efac:	ldrb	w6, [x26]
    efb0:	ldr	x5, [sp, #96]
    efb4:	ldrh	w0, [x0, w23, sxtw #1]
    efb8:	tst	x0, #0x4000
    efbc:	ccmp	w6, w23, #0x0, ne  // ne = any
    efc0:	b.eq	f010 <argp_fmtstream_point@@Base+0x838>  // b.none
    efc4:	add	x5, x5, #0x30
    efc8:	cmp	x25, x5
    efcc:	b.ne	ef88 <argp_fmtstream_point@@Base+0x7b0>  // b.any
    efd0:	ldr	x0, [sp, #120]
    efd4:	add	x27, x27, #0x38
    efd8:	cmp	x0, x27
    efdc:	b.ne	ef60 <argp_fmtstream_point@@Base+0x788>  // b.any
    efe0:	ldr	x0, [sp, #104]
    efe4:	strb	wzr, [x0]
    efe8:	ldr	x0, [sp, #144]
    efec:	bl	aa50 <free@plt>
    eff0:	ldr	x0, [x19, #16]
    eff4:	bl	aa50 <free@plt>
    eff8:	str	x24, [x19, #16]
    effc:	ldr	x0, [sp, #128]
    f000:	str	x0, [x19]
    f004:	ldr	w0, [sp, #140]
    f008:	str	w0, [x19, #8]
    f00c:	b	ee34 <argp_fmtstream_point@@Base+0x65c>
    f010:	ldr	x0, [sp, #112]
    f014:	cmp	x24, x0
    f018:	b.cs	f03c <argp_fmtstream_point@@Base+0x864>  // b.hs, b.nlast
    f01c:	mov	x2, x24
    f020:	ldrb	w0, [x2]
    f024:	cmp	w0, w6
    f028:	b.eq	f048 <argp_fmtstream_point@@Base+0x870>  // b.none
    f02c:	ldr	x0, [sp, #112]
    f030:	add	x2, x2, #0x1
    f034:	cmp	x0, x2
    f038:	b.ne	f020 <argp_fmtstream_point@@Base+0x848>  // b.any
    f03c:	ldr	x23, [sp, #104]
    f040:	strb	w6, [x23], #1
    f044:	str	x23, [sp, #104]
    f048:	add	x26, x26, #0x1
    f04c:	b	efc4 <argp_fmtstream_point@@Base+0x7ec>
    f050:	ldr	x0, [sp, #152]
    f054:	b	ee00 <argp_fmtstream_point@@Base+0x628>
    f058:	adrp	x3, 2c000 <vasnprintf@@Base+0x11e0>
    f05c:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    f060:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    f064:	add	x3, x3, #0xa70
    f068:	add	x1, x1, #0x7a8
    f06c:	add	x0, x0, #0x7d0
    f070:	mov	w2, #0x1db                 	// #475
    f074:	bl	aea0 <__assert_fail@plt>
    f078:	adrp	x3, 2c000 <vasnprintf@@Base+0x11e0>
    f07c:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    f080:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    f084:	add	x3, x3, #0xa70
    f088:	add	x1, x1, #0x7a8
    f08c:	add	x0, x0, #0x7c0
    f090:	mov	w2, #0x1cd                 	// #461
    f094:	bl	aea0 <__assert_fail@plt>
    f098:	adrp	x3, 2c000 <vasnprintf@@Base+0x11e0>
    f09c:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    f0a0:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    f0a4:	add	x3, x3, #0xa70
    f0a8:	add	x1, x1, #0x7a8
    f0ac:	add	x0, x0, #0x7b8
    f0b0:	mov	w2, #0x1c3                 	// #451
    f0b4:	bl	aea0 <__assert_fail@plt>
    f0b8:	adrp	x3, 2c000 <vasnprintf@@Base+0x11e0>
    f0bc:	add	x3, x3, #0xa70
    f0c0:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    f0c4:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
    f0c8:	add	x3, x3, #0x10
    f0cc:	add	x1, x1, #0x7a8
    f0d0:	add	x0, x0, #0x7f8
    f0d4:	mov	w2, #0x370                 	// #880
    f0d8:	bl	aea0 <__assert_fail@plt>
    f0dc:	nop
    f0e0:	stp	x29, x30, [sp, #-112]!
    f0e4:	mov	x29, sp
    f0e8:	stp	x19, x20, [sp, #16]
    f0ec:	ldr	w20, [x0, #8]
    f0f0:	stp	x23, x24, [sp, #48]
    f0f4:	stp	x25, x26, [sp, #64]
    f0f8:	str	x1, [sp, #104]
    f0fc:	ldr	x25, [x0]
    f100:	ldr	x24, [x0, #16]
    f104:	cbz	w20, f1d8 <argp_fmtstream_point@@Base+0xa00>
    f108:	mov	x26, x2
    f10c:	mov	x19, x25
    f110:	stp	x21, x22, [sp, #32]
    f114:	stp	x27, x28, [sp, #80]
    f118:	mov	x27, x3
    f11c:	b	f15c <argp_fmtstream_point@@Base+0x984>
    f120:	ldr	w28, [x19, #8]
    f124:	sub	w0, w28, #0x1
    f128:	cmp	w0, #0xfe
    f12c:	b.hi	f14c <argp_fmtstream_point@@Base+0x974>  // b.pmore
    f130:	bl	a9d0 <__ctype_b_loc@plt>
    f134:	ldr	x0, [x0]
    f138:	ldrh	w0, [x0, w28, sxtw #1]
    f13c:	tbz	w0, #14, f14c <argp_fmtstream_point@@Base+0x974>
    f140:	ldrb	w0, [x24]
    f144:	cmp	w0, w28
    f148:	b.eq	f1a0 <argp_fmtstream_point@@Base+0x9c8>  // b.none
    f14c:	subs	w20, w20, #0x1
    f150:	add	x19, x19, #0x30
    f154:	ccmp	w22, #0x0, #0x4, ne  // ne = any
    f158:	b.eq	f180 <argp_fmtstream_point@@Base+0x9a8>  // b.none
    f15c:	ldr	w21, [x19, #24]
    f160:	mov	w22, #0x1                   	// #1
    f164:	and	w23, w21, #0x8
    f168:	tbz	w21, #3, f120 <argp_fmtstream_point@@Base+0x948>
    f16c:	subs	w20, w20, #0x1
    f170:	add	x19, x19, #0x30
    f174:	ccmp	w22, #0x0, #0x4, ne  // ne = any
    f178:	mov	w23, #0x0                   	// #0
    f17c:	b.ne	f15c <argp_fmtstream_point@@Base+0x984>  // b.any
    f180:	mov	w0, w23
    f184:	ldp	x19, x20, [sp, #16]
    f188:	ldp	x21, x22, [sp, #32]
    f18c:	ldp	x23, x24, [sp, #48]
    f190:	ldp	x25, x26, [sp, #64]
    f194:	ldp	x27, x28, [sp, #80]
    f198:	ldp	x29, x30, [sp], #112
    f19c:	ret
    f1a0:	tst	x21, #0x4
    f1a4:	mov	x3, x27
    f1a8:	csel	x25, x25, x19, ne  // ne = any
    f1ac:	mov	x2, x26
    f1b0:	mov	x0, x19
    f1b4:	add	x24, x24, #0x1
    f1b8:	mov	x1, x25
    f1bc:	tbnz	w21, #1, f14c <argp_fmtstream_point@@Base+0x974>
    f1c0:	ldr	x4, [sp, #104]
    f1c4:	blr	x4
    f1c8:	cmp	w0, #0x0
    f1cc:	mov	w23, w0
    f1d0:	cset	w22, eq  // eq = none
    f1d4:	b	f14c <argp_fmtstream_point@@Base+0x974>
    f1d8:	mov	w23, #0x0                   	// #0
    f1dc:	mov	w0, w23
    f1e0:	ldp	x19, x20, [sp, #16]
    f1e4:	ldp	x23, x24, [sp, #48]
    f1e8:	ldp	x25, x26, [sp, #64]
    f1ec:	ldp	x29, x30, [sp], #112
    f1f0:	ret
    f1f4:	nop
    f1f8:	stp	x29, x30, [sp, #-112]!
    f1fc:	mov	x29, sp
    f200:	stp	x19, x20, [sp, #16]
    f204:	ldr	w19, [x0, #8]
    f208:	stp	x21, x22, [sp, #32]
    f20c:	stp	x23, x24, [sp, #48]
    f210:	stp	x25, x26, [sp, #64]
    f214:	stp	x27, x28, [sp, #80]
    f218:	cbz	w19, f3b0 <argp_fmtstream_point@@Base+0xbd8>
    f21c:	mov	x20, x0
    f220:	mov	x22, x1
    f224:	ldr	x0, [x0, #16]
    f228:	sub	w19, w19, #0x1
    f22c:	adrp	x23, e000 <_argp_fmtstream_update@@Base+0x228>
    f230:	add	x24, x29, #0x68
    f234:	add	x23, x23, #0x900
    f238:	bl	a340 <strlen@plt>
    f23c:	add	x1, x0, #0x10
    f240:	add	x0, x19, #0x1
    f244:	and	x1, x1, #0xfffffffffffffff0
    f248:	ldr	x19, [x20]
    f24c:	lsl	x21, x0, #3
    f250:	sub	x21, x21, x0
    f254:	sub	sp, sp, x1
    f258:	mov	x25, sp
    f25c:	str	x25, [x29, #104]
    f260:	add	x21, x19, x21, lsl #3
    f264:	nop
    f268:	ldr	x2, [x19, #40]
    f26c:	mov	x0, x19
    f270:	mov	x3, x24
    f274:	mov	x1, x23
    f278:	add	x19, x19, #0x38
    f27c:	ldr	x2, [x2, #48]
    f280:	bl	f0e0 <argp_fmtstream_point@@Base+0x908>
    f284:	cmp	x19, x21
    f288:	b.ne	f268 <argp_fmtstream_point@@Base+0xa90>  // b.any
    f28c:	ldr	x0, [x29, #104]
    f290:	cmp	x0, x25
    f294:	b.hi	f400 <argp_fmtstream_point@@Base+0xc28>  // b.pmore
    f298:	ldr	w0, [x20, #8]
    f29c:	ldr	x19, [x20]
    f2a0:	cbz	w0, f3b0 <argp_fmtstream_point@@Base+0xbd8>
    f2a4:	sub	w0, w0, #0x1
    f2a8:	adrp	x23, f000 <argp_fmtstream_point@@Base+0x828>
    f2ac:	add	x0, x0, #0x1
    f2b0:	add	x23, x23, #0x960
    f2b4:	lsl	x21, x0, #3
    f2b8:	sub	x21, x21, x0
    f2bc:	add	x21, x19, x21, lsl #3
    f2c0:	ldr	x2, [x19, #40]
    f2c4:	mov	x0, x19
    f2c8:	mov	x3, x22
    f2cc:	mov	x1, x23
    f2d0:	add	x19, x19, #0x38
    f2d4:	ldr	x2, [x2, #48]
    f2d8:	bl	f0e0 <argp_fmtstream_point@@Base+0x908>
    f2dc:	cmp	x19, x21
    f2e0:	b.ne	f2c0 <argp_fmtstream_point@@Base+0xae8>  // b.any
    f2e4:	ldr	w0, [x20, #8]
    f2e8:	ldr	x28, [x20]
    f2ec:	cbz	w0, f3b0 <argp_fmtstream_point@@Base+0xbd8>
    f2f0:	sub	w0, w0, #0x1
    f2f4:	adrp	x26, 2c000 <vasnprintf@@Base+0x11e0>
    f2f8:	add	x0, x0, #0x1
    f2fc:	adrp	x25, 2c000 <vasnprintf@@Base+0x11e0>
    f300:	add	x26, x26, #0x830
    f304:	add	x25, x25, #0x820
    f308:	lsl	x24, x0, #3
    f30c:	sub	x0, x24, x0
    f310:	add	x24, x28, x0, lsl #3
    f314:	nop
    f318:	ldr	w0, [x28, #8]
    f31c:	ldr	x1, [x28, #40]
    f320:	ldr	x27, [x28]
    f324:	ldr	x23, [x1, #48]
    f328:	cbz	w0, f3a4 <argp_fmtstream_point@@Base+0xbcc>
    f32c:	sub	w0, w0, #0x1
    f330:	mov	x19, x27
    f334:	add	x21, x0, #0x1
    f338:	add	x21, x21, x21, lsl #1
    f33c:	add	x21, x27, x21, lsl #4
    f340:	ldr	x2, [x19]
    f344:	cbz	x2, f398 <argp_fmtstream_point@@Base+0xbc0>
    f348:	ldr	w0, [x19, #24]
    f34c:	tst	x0, #0x4
    f350:	csel	x27, x27, x19, ne  // ne = any
    f354:	tbnz	w0, #1, f398 <argp_fmtstream_point@@Base+0xbc0>
    f358:	ldr	x1, [x19, #16]
    f35c:	ldr	w20, [x27, #24]
    f360:	orr	w20, w0, w20
    f364:	and	w0, w20, #0x10
    f368:	cbz	x1, f3d0 <argp_fmtstream_point@@Base+0xbf8>
    f36c:	cbnz	w0, f398 <argp_fmtstream_point@@Base+0xbc0>
    f370:	mov	w2, #0x5                   	// #5
    f374:	mov	x0, x23
    f378:	bl	ada0 <dcgettext@plt>
    f37c:	mov	x3, x0
    f380:	ldr	x2, [x19]
    f384:	tbz	w20, #0, f3f0 <argp_fmtstream_point@@Base+0xc18>
    f388:	mov	x1, x25
    f38c:	mov	x0, x22
    f390:	bl	a8f0 <argp_fmtstream_printf@plt>
    f394:	nop
    f398:	add	x19, x19, #0x30
    f39c:	cmp	x19, x21
    f3a0:	b.ne	f340 <argp_fmtstream_point@@Base+0xb68>  // b.any
    f3a4:	add	x28, x28, #0x38
    f3a8:	cmp	x28, x24
    f3ac:	b.ne	f318 <argp_fmtstream_point@@Base+0xb40>  // b.any
    f3b0:	mov	sp, x29
    f3b4:	ldp	x19, x20, [sp, #16]
    f3b8:	ldp	x21, x22, [sp, #32]
    f3bc:	ldp	x23, x24, [sp, #48]
    f3c0:	ldp	x25, x26, [sp, #64]
    f3c4:	ldp	x27, x28, [sp, #80]
    f3c8:	ldp	x29, x30, [sp], #112
    f3cc:	ret
    f3d0:	cbnz	w0, f398 <argp_fmtstream_point@@Base+0xbc0>
    f3d4:	ldr	x1, [x27, #16]
    f3d8:	cbnz	x1, f370 <argp_fmtstream_point@@Base+0xb98>
    f3dc:	mov	x0, x22
    f3e0:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    f3e4:	add	x1, x1, #0x840
    f3e8:	bl	a8f0 <argp_fmtstream_printf@plt>
    f3ec:	b	f398 <argp_fmtstream_point@@Base+0xbc0>
    f3f0:	mov	x1, x26
    f3f4:	mov	x0, x22
    f3f8:	bl	a8f0 <argp_fmtstream_printf@plt>
    f3fc:	b	f398 <argp_fmtstream_point@@Base+0xbc0>
    f400:	add	x1, x0, #0x1
    f404:	str	x1, [x29, #104]
    f408:	strb	wzr, [x0]
    f40c:	mov	x2, x25
    f410:	mov	x0, x22
    f414:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    f418:	add	x1, x1, #0x818
    f41c:	bl	a8f0 <argp_fmtstream_printf@plt>
    f420:	b	f298 <argp_fmtstream_point@@Base+0xac0>
    f424:	nop
    f428:	stp	x29, x30, [sp, #-64]!
    f42c:	mov	x29, sp
    f430:	ldr	x3, [x1, #32]
    f434:	stp	x19, x20, [sp, #16]
    f438:	ldr	w4, [x0, #24]
    f43c:	ldr	x2, [x0, #32]
    f440:	mov	x19, x1
    f444:	ldr	w1, [x1, #24]
    f448:	cmp	x2, x3
    f44c:	b.eq	f53c <argp_fmtstream_point@@Base+0xd64>  // b.none
    f450:	cbz	x2, f4dc <argp_fmtstream_point@@Base+0xd04>
    f454:	cbz	x3, f4fc <argp_fmtstream_point@@Base+0xd24>
    f458:	ldr	w0, [x2, #32]
    f45c:	ldr	w1, [x3, #32]
    f460:	cmp	w1, w0
    f464:	b.ge	f478 <argp_fmtstream_point@@Base+0xca0>  // b.tcont
    f468:	ldr	x2, [x2, #16]
    f46c:	ldr	w0, [x2, #32]
    f470:	cmp	w0, w1
    f474:	b.gt	f468 <argp_fmtstream_point@@Base+0xc90>
    f478:	cmp	w0, w1
    f47c:	b.ge	f490 <argp_fmtstream_point@@Base+0xcb8>  // b.tcont
    f480:	ldr	x3, [x3, #16]
    f484:	ldr	w1, [x3, #32]
    f488:	cmp	w1, w0
    f48c:	b.gt	f480 <argp_fmtstream_point@@Base+0xca8>
    f490:	mov	x1, x2
    f494:	mov	x4, x3
    f498:	ldr	x2, [x2, #16]
    f49c:	ldr	x3, [x3, #16]
    f4a0:	cmp	x2, x3
    f4a4:	b.ne	f490 <argp_fmtstream_point@@Base+0xcb8>  // b.any
    f4a8:	ldr	w2, [x1, #12]
    f4ac:	ldr	w0, [x4, #12]
    f4b0:	cmp	w2, w0
    f4b4:	b.eq	f670 <argp_fmtstream_point@@Base+0xe98>  // b.none
    f4b8:	mvn	w1, w0
    f4bc:	sub	w3, w2, w0
    f4c0:	sub	w0, w0, w2
    f4c4:	lsr	w1, w1, #31
    f4c8:	cmp	w1, w2, lsr #31
    f4cc:	csel	w0, w0, w3, eq  // eq = none
    f4d0:	ldp	x19, x20, [sp, #16]
    f4d4:	ldp	x29, x30, [sp], #64
    f4d8:	ret
    f4dc:	mov	x0, x3
    f4e0:	ldr	x3, [x3, #16]
    f4e4:	cbnz	x3, f4dc <argp_fmtstream_point@@Base+0xd04>
    f4e8:	ldr	w1, [x0, #12]
    f4ec:	mov	w0, #0xffffffff            	// #-1
    f4f0:	cmp	w4, w1
    f4f4:	b.ne	f544 <argp_fmtstream_point@@Base+0xd6c>  // b.any
    f4f8:	b	f4d0 <argp_fmtstream_point@@Base+0xcf8>
    f4fc:	mov	x0, x2
    f500:	ldr	x2, [x2, #16]
    f504:	cbnz	x2, f4fc <argp_fmtstream_point@@Base+0xd24>
    f508:	ldr	w2, [x0, #12]
    f50c:	mov	w0, #0x1                   	// #1
    f510:	cmp	w1, w2
    f514:	b.eq	f4d0 <argp_fmtstream_point@@Base+0xcf8>  // b.none
    f518:	mvn	w3, w1
    f51c:	sub	w0, w2, w1
    f520:	sub	w1, w1, w2
    f524:	lsr	w3, w3, #31
    f528:	cmp	w3, w2, lsr #31
    f52c:	csel	w0, w1, w0, eq  // eq = none
    f530:	ldp	x19, x20, [sp, #16]
    f534:	ldp	x29, x30, [sp], #64
    f538:	ret
    f53c:	cmp	w4, w1
    f540:	b.eq	f568 <argp_fmtstream_point@@Base+0xd90>  // b.none
    f544:	mvn	w2, w1
    f548:	sub	w0, w4, w1
    f54c:	sub	w1, w1, w4
    f550:	lsr	w2, w2, #31
    f554:	cmp	w2, w4, lsr #31
    f558:	csel	w0, w1, w0, eq  // eq = none
    f55c:	ldp	x19, x20, [sp, #16]
    f560:	ldp	x29, x30, [sp], #64
    f564:	ret
    f568:	ldr	x2, [x0, #40]
    f56c:	stp	x21, x22, [sp, #32]
    f570:	adrp	x22, f000 <argp_fmtstream_point@@Base+0x828>
    f574:	add	x22, x22, #0x828
    f578:	mov	x20, x0
    f57c:	ldr	x2, [x2, #48]
    f580:	mov	x1, x22
    f584:	mov	x3, #0x0                   	// #0
    f588:	bl	f0e0 <argp_fmtstream_point@@Base+0x908>
    f58c:	mov	w21, w0
    f590:	ldr	x2, [x19, #40]
    f594:	mov	x1, x22
    f598:	mov	x3, #0x0                   	// #0
    f59c:	mov	x0, x19
    f5a0:	ldr	x2, [x2, #48]
    f5a4:	bl	f0e0 <argp_fmtstream_point@@Base+0x908>
    f5a8:	mov	w22, w0
    f5ac:	ldr	x1, [x19]
    f5b0:	ldr	w3, [x20, #8]
    f5b4:	ldr	x2, [x20]
    f5b8:	ldr	w20, [x1, #24]
    f5bc:	ldr	w0, [x2, #24]
    f5c0:	and	w20, w20, #0x8
    f5c4:	cbz	w3, f5f4 <argp_fmtstream_point@@Base+0xe1c>
    f5c8:	sub	w3, w3, #0x1
    f5cc:	add	x4, x3, #0x1
    f5d0:	add	x4, x4, x4, lsl #1
    f5d4:	add	x4, x2, x4, lsl #4
    f5d8:	ldr	x3, [x2]
    f5dc:	cbz	x3, f5e8 <argp_fmtstream_point@@Base+0xe10>
    f5e0:	ldr	w5, [x2, #24]
    f5e4:	tbz	w5, #1, f6b8 <argp_fmtstream_point@@Base+0xee0>
    f5e8:	add	x2, x2, #0x30
    f5ec:	cmp	x2, x4
    f5f0:	b.ne	f5d8 <argp_fmtstream_point@@Base+0xe00>  // b.any
    f5f4:	ldr	w2, [x19, #8]
    f5f8:	mov	w0, #0x0                   	// #0
    f5fc:	str	xzr, [sp, #48]
    f600:	cbz	w2, f680 <argp_fmtstream_point@@Base+0xea8>
    f604:	sub	w2, w2, #0x1
    f608:	add	x3, x2, #0x1
    f60c:	add	x3, x3, x3, lsl #1
    f610:	add	x3, x1, x3, lsl #4
    f614:	nop
    f618:	ldr	x2, [x1]
    f61c:	cbz	x2, f628 <argp_fmtstream_point@@Base+0xe50>
    f620:	ldr	w4, [x1, #24]
    f624:	tbz	w4, #1, f638 <argp_fmtstream_point@@Base+0xe60>
    f628:	add	x1, x1, #0x30
    f62c:	cmp	x1, x3
    f630:	b.ne	f618 <argp_fmtstream_point@@Base+0xe40>  // b.any
    f634:	mov	x2, #0x0                   	// #0
    f638:	str	x2, [sp, #56]
    f63c:	cbnz	w0, f6d8 <argp_fmtstream_point@@Base+0xf00>
    f640:	cbz	w20, f688 <argp_fmtstream_point@@Base+0xeb0>
    f644:	mov	w19, #0x0                   	// #0
    f648:	cbz	x2, f688 <argp_fmtstream_point@@Base+0xeb0>
    f64c:	add	x0, sp, #0x38
    f650:	bl	e830 <argp_fmtstream_point@@Base+0x58>
    f654:	cmp	w0, #0x0
    f658:	cset	w20, ne  // ne = any
    f65c:	cmp	w19, w20
    f660:	b.eq	f688 <argp_fmtstream_point@@Base+0xeb0>  // b.none
    f664:	sub	w0, w19, w20
    f668:	ldp	x21, x22, [sp, #32]
    f66c:	b	f4d0 <argp_fmtstream_point@@Base+0xcf8>
    f670:	ldr	w1, [x1, #8]
    f674:	ldr	w0, [x4, #8]
    f678:	sub	w0, w0, w1
    f67c:	b	f4d0 <argp_fmtstream_point@@Base+0xcf8>
    f680:	str	xzr, [sp, #56]
    f684:	nop
    f688:	orr	w0, w21, w22
    f68c:	and	w20, w21, #0xff
    f690:	tst	w0, #0xff
    f694:	and	w21, w21, #0xff
    f698:	b.ne	f6fc <argp_fmtstream_point@@Base+0xf24>  // b.any
    f69c:	ldr	x0, [sp, #48]
    f6a0:	cbz	x0, f74c <argp_fmtstream_point@@Base+0xf74>
    f6a4:	ldr	x1, [sp, #56]
    f6a8:	cbz	x1, f768 <argp_fmtstream_point@@Base+0xf90>
    f6ac:	bl	a7c0 <strcasecmp@plt>
    f6b0:	ldp	x21, x22, [sp, #32]
    f6b4:	b	f4d0 <argp_fmtstream_point@@Base+0xcf8>
    f6b8:	ldr	w2, [x19, #8]
    f6bc:	and	w4, w0, #0x8
    f6c0:	str	x3, [sp, #48]
    f6c4:	ubfx	x0, x0, #3, #1
    f6c8:	cbnz	w2, f604 <argp_fmtstream_point@@Base+0xe2c>
    f6cc:	str	xzr, [sp, #56]
    f6d0:	cbz	w4, f688 <argp_fmtstream_point@@Base+0xeb0>
    f6d4:	nop
    f6d8:	add	x0, sp, #0x30
    f6dc:	bl	e830 <argp_fmtstream_point@@Base+0x58>
    f6e0:	cmp	w0, #0x0
    f6e4:	cset	w19, ne  // ne = any
    f6e8:	cbz	w20, f65c <argp_fmtstream_point@@Base+0xe84>
    f6ec:	ldr	x0, [sp, #56]
    f6f0:	mov	w20, #0x0                   	// #0
    f6f4:	cbz	x0, f65c <argp_fmtstream_point@@Base+0xe84>
    f6f8:	b	f64c <argp_fmtstream_point@@Base+0xe74>
    f6fc:	cbnz	w21, f70c <argp_fmtstream_point@@Base+0xf34>
    f700:	ldr	x0, [sp, #48]
    f704:	cbz	x0, f750 <argp_fmtstream_point@@Base+0xf78>
    f708:	ldrb	w20, [x0]
    f70c:	ubfiz	x21, x20, #2, #8
    f710:	tst	w22, #0xff
    f714:	b.ne	f75c <argp_fmtstream_point@@Base+0xf84>  // b.any
    f718:	ldr	x0, [sp, #56]
    f71c:	cbz	x0, f778 <argp_fmtstream_point@@Base+0xfa0>
    f720:	ldrb	w19, [x0]
    f724:	ubfiz	x22, x19, #2, #8
    f728:	bl	a530 <__ctype_tolower_loc@plt>
    f72c:	sub	w19, w19, w20
    f730:	ldr	x1, [x0]
    f734:	ldr	w0, [x1, x21]
    f738:	ldr	w1, [x1, x22]
    f73c:	ldp	x21, x22, [sp, #32]
    f740:	subs	w0, w0, w1
    f744:	csel	w0, w19, w0, eq  // eq = none
    f748:	b	f4d0 <argp_fmtstream_point@@Base+0xcf8>
    f74c:	cbnz	w21, f70c <argp_fmtstream_point@@Base+0xf34>
    f750:	mov	x21, #0x0                   	// #0
    f754:	mov	w20, #0x0                   	// #0
    f758:	b	f710 <argp_fmtstream_point@@Base+0xf38>
    f75c:	and	w19, w22, #0xff
    f760:	ubfiz	x22, x22, #2, #8
    f764:	b	f728 <argp_fmtstream_point@@Base+0xf50>
    f768:	cbz	w21, f708 <argp_fmtstream_point@@Base+0xf30>
    f76c:	tst	w22, #0xff
    f770:	ubfiz	x21, x20, #2, #8
    f774:	b.ne	f75c <argp_fmtstream_point@@Base+0xf84>  // b.any
    f778:	mov	x22, #0x0                   	// #0
    f77c:	mov	w19, #0x0                   	// #0
    f780:	b	f728 <argp_fmtstream_point@@Base+0xf50>
    f784:	nop
    f788:	stp	x29, x30, [sp, #-48]!
    f78c:	mov	x29, sp
    f790:	stp	x19, x20, [sp, #16]
    f794:	mov	w20, w1
    f798:	mov	x19, x0
    f79c:	ldp	x3, x1, [x0, #48]
    f7a0:	ldr	x2, [x0, #32]
    f7a4:	str	x21, [sp, #32]
    f7a8:	sub	x1, x1, x3
    f7ac:	cmp	x1, x2
    f7b0:	b.hi	f820 <argp_fmtstream_point@@Base+0x1048>  // b.pmore
    f7b4:	ldr	x0, [x19, #40]
    f7b8:	mov	w21, #0x20                  	// #32
    f7bc:	cmp	x0, #0x0
    f7c0:	csel	x0, x0, xzr, ge  // ge = tcont
    f7c4:	sub	w20, w20, w0
    f7c8:	cmp	w20, #0x0
    f7cc:	sub	w20, w20, #0x1
    f7d0:	b.le	f810 <argp_fmtstream_point@@Base+0x1038>
    f7d4:	nop
    f7d8:	ldp	x2, x3, [x19, #56]
    f7dc:	sub	w20, w20, #0x1
    f7e0:	mov	x0, x19
    f7e4:	mov	x1, #0x1                   	// #1
    f7e8:	cmp	x2, x3
    f7ec:	b.cc	f7fc <argp_fmtstream_point@@Base+0x1024>  // b.lo, b.ul, b.last
    f7f0:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f7f4:	cbz	w0, f808 <argp_fmtstream_point@@Base+0x1030>
    f7f8:	ldr	x2, [x19, #56]
    f7fc:	add	x0, x2, #0x1
    f800:	str	x0, [x19, #56]
    f804:	strb	w21, [x2]
    f808:	cmn	w20, #0x1
    f80c:	b.ne	f7d8 <argp_fmtstream_point@@Base+0x1000>  // b.any
    f810:	ldp	x19, x20, [sp, #16]
    f814:	ldr	x21, [sp, #32]
    f818:	ldp	x29, x30, [sp], #48
    f81c:	ret
    f820:	bl	a520 <_argp_fmtstream_update@plt>
    f824:	b	f7b4 <argp_fmtstream_point@@Base+0xfdc>
    f828:	ldr	w2, [x0, #24]
    f82c:	tbnz	w2, #3, f874 <argp_fmtstream_point@@Base+0x109c>
    f830:	stp	x29, x30, [sp, #-32]!
    f834:	mov	x1, x0
    f838:	and	w0, w2, #0x8
    f83c:	mov	x29, sp
    f840:	str	x19, [sp, #16]
    f844:	ldr	w19, [x1, #8]
    f848:	sub	w1, w19, #0x1
    f84c:	cmp	w1, #0xfe
    f850:	b.hi	f868 <argp_fmtstream_point@@Base+0x1090>  // b.pmore
    f854:	bl	a9d0 <__ctype_b_loc@plt>
    f858:	ldr	x0, [x0]
    f85c:	ldrh	w0, [x0, w19, sxtw #1]
    f860:	tst	x0, #0x4000
    f864:	csel	w0, wzr, w19, eq  // eq = none
    f868:	ldr	x19, [sp, #16]
    f86c:	ldp	x29, x30, [sp], #32
    f870:	ret
    f874:	mov	w0, #0x0                   	// #0
    f878:	ret
    f87c:	nop
    f880:	stp	x29, x30, [sp, #-32]!
    f884:	mov	x29, sp
    f888:	stp	x19, x20, [sp, #16]
    f88c:	mov	x20, x1
    f890:	mov	x19, x0
    f894:	ldp	x1, x2, [x0, #48]
    f898:	ldr	x3, [x0, #32]
    f89c:	sub	x1, x2, x1
    f8a0:	cmp	x1, x3
    f8a4:	b.hi	f950 <argp_fmtstream_point@@Base+0x1178>  // b.pmore
    f8a8:	ldr	x0, [x19, #40]
    f8ac:	ldr	x1, [x19, #16]
    f8b0:	cmp	x0, #0x0
    f8b4:	csel	x0, x0, xzr, ge  // ge = tcont
    f8b8:	add	x0, x0, x20
    f8bc:	cmp	x0, x1
    f8c0:	ldr	x0, [x19, #64]
    f8c4:	b.cc	f8ec <argp_fmtstream_point@@Base+0x1114>  // b.lo, b.ul, b.last
    f8c8:	cmp	x2, x0
    f8cc:	b.cs	f910 <argp_fmtstream_point@@Base+0x1138>  // b.hs, b.nlast
    f8d0:	add	x0, x2, #0x1
    f8d4:	str	x0, [x19, #56]
    f8d8:	mov	w0, #0xa                   	// #10
    f8dc:	strb	w0, [x2]
    f8e0:	ldp	x19, x20, [sp, #16]
    f8e4:	ldp	x29, x30, [sp], #32
    f8e8:	ret
    f8ec:	cmp	x2, x0
    f8f0:	b.cs	f938 <argp_fmtstream_point@@Base+0x1160>  // b.hs, b.nlast
    f8f4:	add	x0, x2, #0x1
    f8f8:	str	x0, [x19, #56]
    f8fc:	mov	w0, #0x20                  	// #32
    f900:	strb	w0, [x2]
    f904:	ldp	x19, x20, [sp, #16]
    f908:	ldp	x29, x30, [sp], #32
    f90c:	ret
    f910:	mov	x0, x19
    f914:	mov	x1, #0x1                   	// #1
    f918:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f91c:	cbz	w0, f904 <argp_fmtstream_point@@Base+0x112c>
    f920:	ldr	x2, [x19, #56]
    f924:	add	x0, x2, #0x1
    f928:	str	x0, [x19, #56]
    f92c:	mov	w0, #0xa                   	// #10
    f930:	strb	w0, [x2]
    f934:	b	f8e0 <argp_fmtstream_point@@Base+0x1108>
    f938:	mov	x0, x19
    f93c:	mov	x1, #0x1                   	// #1
    f940:	bl	ad80 <_argp_fmtstream_ensure@plt>
    f944:	cbz	w0, f904 <argp_fmtstream_point@@Base+0x112c>
    f948:	ldr	x2, [x19, #56]
    f94c:	b	f8f4 <argp_fmtstream_point@@Base+0x111c>
    f950:	bl	a520 <_argp_fmtstream_update@plt>
    f954:	ldr	x2, [x19, #56]
    f958:	b	f8a8 <argp_fmtstream_point@@Base+0x10d0>
    f95c:	nop
    f960:	stp	x29, x30, [sp, #-48]!
    f964:	mov	x29, sp
    f968:	stp	x19, x20, [sp, #16]
    f96c:	mov	x19, x0
    f970:	mov	x20, x3
    f974:	ldr	x0, [x0, #16]
    f978:	cbz	x0, f9e8 <argp_fmtstream_point@@Base+0x1210>
    f97c:	ldr	w1, [x1, #24]
    f980:	stp	x21, x22, [sp, #32]
    f984:	ldr	w21, [x19, #24]
    f988:	orr	w21, w21, w1
    f98c:	tbz	w21, #4, f9a4 <argp_fmtstream_point@@Base+0x11cc>
    f990:	mov	w0, #0x0                   	// #0
    f994:	ldp	x19, x20, [sp, #16]
    f998:	ldp	x21, x22, [sp, #32]
    f99c:	ldp	x29, x30, [sp], #48
    f9a0:	ret
    f9a4:	mov	x1, x0
    f9a8:	mov	x0, x2
    f9ac:	mov	w2, #0x5                   	// #5
    f9b0:	bl	ada0 <dcgettext@plt>
    f9b4:	mov	x22, x0
    f9b8:	tbz	w21, #0, fa00 <argp_fmtstream_point@@Base+0x1228>
    f9bc:	ldr	w2, [x19, #8]
    f9c0:	mov	x3, x0
    f9c4:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    f9c8:	mov	x0, x20
    f9cc:	add	x1, x1, #0x848
    f9d0:	bl	a8f0 <argp_fmtstream_printf@plt>
    f9d4:	mov	w0, #0x0                   	// #0
    f9d8:	ldp	x19, x20, [sp, #16]
    f9dc:	ldp	x21, x22, [sp, #32]
    f9e0:	ldp	x29, x30, [sp], #48
    f9e4:	ret
    f9e8:	ldr	x0, [x1, #16]
    f9ec:	cbnz	x0, f97c <argp_fmtstream_point@@Base+0x11a4>
    f9f0:	mov	w0, #0x0                   	// #0
    f9f4:	ldp	x19, x20, [sp, #16]
    f9f8:	ldp	x29, x30, [sp], #48
    f9fc:	ret
    fa00:	bl	a340 <strlen@plt>
    fa04:	add	x1, x0, #0x6
    fa08:	mov	x0, x20
    fa0c:	bl	f880 <argp_fmtstream_point@@Base+0x10a8>
    fa10:	ldr	w2, [x19, #8]
    fa14:	mov	x3, x22
    fa18:	mov	x0, x20
    fa1c:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
    fa20:	add	x1, x1, #0x858
    fa24:	bl	a8f0 <argp_fmtstream_printf@plt>
    fa28:	mov	w0, #0x0                   	// #0
    fa2c:	ldp	x19, x20, [sp, #16]
    fa30:	ldp	x21, x22, [sp, #32]
    fa34:	ldp	x29, x30, [sp], #48
    fa38:	ret
    fa3c:	nop
    fa40:	stp	x29, x30, [sp, #-112]!
    fa44:	mov	x29, sp
    fa48:	stp	x25, x26, [sp, #64]
    fa4c:	ldr	x25, [x0, #16]
    fa50:	stp	x19, x20, [sp, #16]
    fa54:	mov	x19, x0
    fa58:	ldr	x0, [x2]
    fa5c:	stp	x21, x22, [sp, #32]
    fa60:	mov	w20, w3
    fa64:	stp	x23, x24, [sp, #48]
    fa68:	mov	x21, x4
    fa6c:	mov	x23, x2
    fa70:	stp	x27, x28, [sp, #80]
    fa74:	mov	x24, x1
    fa78:	str	x0, [sp, #104]
    fa7c:	ldr	x22, [x19, #32]
    fa80:	cbz	x25, fc1c <argp_fmtstream_point@@Base+0x1444>
    fa84:	ldr	x0, [x19, #48]
    fa88:	mov	x1, x25
    fa8c:	mov	w2, #0x5                   	// #5
    fa90:	bl	ada0 <dcgettext@plt>
    fa94:	mov	x25, x0
    fa98:	ldr	x1, [x19, #40]
    fa9c:	mov	x28, x0
    faa0:	cbz	x1, fac0 <argp_fmtstream_point@@Base+0x12e8>
    faa4:	mov	w1, #0x6                   	// #6
    faa8:	mov	x2, x19
    faac:	mov	x3, x24
    fab0:	mov	x0, x25
    fab4:	movk	w1, #0x200, lsl #16
    fab8:	bl	eae8 <argp_fmtstream_point@@Base+0x310>
    fabc:	mov	x28, x0
    fac0:	cbz	x28, fc24 <argp_fmtstream_point@@Base+0x144c>
    fac4:	mov	x0, x28
    fac8:	mov	w1, #0xa                   	// #10
    facc:	bl	ad60 <strchrnul@plt>
    fad0:	mov	x19, x0
    fad4:	ldrb	w0, [x0]
    fad8:	cbnz	w0, fbc4 <argp_fmtstream_point@@Base+0x13ec>
    fadc:	mov	x26, x28
    fae0:	mov	w27, #0x0                   	// #0
    fae4:	add	x1, x19, #0x1
    fae8:	mov	x0, x21
    faec:	sub	x1, x1, x26
    faf0:	bl	f880 <argp_fmtstream_point@@Base+0x10a8>
    faf4:	ldp	x0, x4, [x21, #56]
    faf8:	sub	x2, x19, x26
    fafc:	add	x1, x0, x2
    fb00:	cmp	x4, x1
    fb04:	b.cs	fb24 <argp_fmtstream_point@@Base+0x134c>  // b.hs, b.nlast
    fb08:	mov	x1, x2
    fb0c:	mov	x0, x21
    fb10:	str	x2, [sp, #96]
    fb14:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fb18:	cbz	w0, fb40 <argp_fmtstream_point@@Base+0x1368>
    fb1c:	ldr	x0, [x21, #56]
    fb20:	ldr	x2, [sp, #96]
    fb24:	mov	x1, x26
    fb28:	str	x2, [sp, #96]
    fb2c:	bl	a2c0 <memcpy@plt>
    fb30:	ldr	x0, [x21, #56]
    fb34:	ldr	x2, [sp, #96]
    fb38:	add	x2, x0, x2
    fb3c:	str	x2, [x21, #56]
    fb40:	cmp	x28, x25
    fb44:	b.ne	fc10 <argp_fmtstream_point@@Base+0x1438>  // b.any
    fb48:	cbz	x22, fb80 <argp_fmtstream_point@@Base+0x13a8>
    fb4c:	ldr	x0, [x22]
    fb50:	cbz	x0, fb80 <argp_fmtstream_point@@Base+0x13a8>
    fb54:	nop
    fb58:	mov	w3, w20
    fb5c:	mov	x1, x24
    fb60:	mov	x4, x21
    fb64:	mov	x2, x23
    fb68:	bl	fa40 <argp_fmtstream_point@@Base+0x1268>
    fb6c:	mov	w1, w0
    fb70:	ldr	x0, [x22, #32]!
    fb74:	cmp	w1, #0x0
    fb78:	cset	w20, eq  // eq = none
    fb7c:	cbnz	x0, fb58 <argp_fmtstream_point@@Base+0x1380>
    fb80:	cmp	w20, #0x0
    fb84:	ccmp	w27, #0x0, #0x4, ne  // ne = any
    fb88:	b.eq	fc28 <argp_fmtstream_point@@Base+0x1450>  // b.none
    fb8c:	ldrb	w0, [x19]
    fb90:	ldr	x2, [sp, #104]
    fb94:	ldrb	w1, [x2]
    fb98:	cbz	w0, fc4c <argp_fmtstream_point@@Base+0x1474>
    fb9c:	add	w1, w1, #0x1
    fba0:	mov	w0, #0x1                   	// #1
    fba4:	strb	w1, [x2]
    fba8:	ldp	x19, x20, [sp, #16]
    fbac:	ldp	x21, x22, [sp, #32]
    fbb0:	ldp	x23, x24, [sp, #48]
    fbb4:	ldp	x25, x26, [sp, #64]
    fbb8:	ldp	x27, x28, [sp, #80]
    fbbc:	ldp	x29, x30, [sp], #112
    fbc0:	ret
    fbc4:	ldr	x0, [sp, #104]
    fbc8:	ldrb	w0, [x0]
    fbcc:	str	w0, [sp, #96]
    fbd0:	cbz	w0, fc8c <argp_fmtstream_point@@Base+0x14b4>
    fbd4:	mov	w27, #0x0                   	// #0
    fbd8:	add	x26, x19, #0x1
    fbdc:	mov	w1, #0xa                   	// #10
    fbe0:	mov	x0, x26
    fbe4:	bl	ad60 <strchrnul@plt>
    fbe8:	ldr	w1, [sp, #96]
    fbec:	add	w27, w27, #0x1
    fbf0:	mov	x19, x0
    fbf4:	cmp	w27, w1
    fbf8:	b.ne	fbd8 <argp_fmtstream_point@@Base+0x1400>  // b.any
    fbfc:	ldr	x0, [x23]
    fc00:	mov	w27, #0x1                   	// #1
    fc04:	add	x0, x0, #0x1
    fc08:	str	x0, [x23]
    fc0c:	b	fae4 <argp_fmtstream_point@@Base+0x130c>
    fc10:	mov	x0, x28
    fc14:	bl	aa50 <free@plt>
    fc18:	b	fb48 <argp_fmtstream_point@@Base+0x1370>
    fc1c:	ldr	x0, [x19, #40]
    fc20:	cbnz	x0, faa4 <argp_fmtstream_point@@Base+0x12cc>
    fc24:	cbnz	x22, fc78 <argp_fmtstream_point@@Base+0x14a0>
    fc28:	cmp	w20, #0x0
    fc2c:	cset	w0, eq  // eq = none
    fc30:	ldp	x19, x20, [sp, #16]
    fc34:	ldp	x21, x22, [sp, #32]
    fc38:	ldp	x23, x24, [sp, #48]
    fc3c:	ldp	x25, x26, [sp, #64]
    fc40:	ldp	x27, x28, [sp, #80]
    fc44:	ldp	x29, x30, [sp], #112
    fc48:	ret
    fc4c:	mov	w0, #0x0                   	// #0
    fc50:	cbz	w1, fba8 <argp_fmtstream_point@@Base+0x13d0>
    fc54:	ldr	x1, [sp, #104]
    fc58:	strb	wzr, [x1]
    fc5c:	ldp	x19, x20, [sp, #16]
    fc60:	ldp	x21, x22, [sp, #32]
    fc64:	ldp	x23, x24, [sp, #48]
    fc68:	ldp	x25, x26, [sp, #64]
    fc6c:	ldp	x27, x28, [sp, #80]
    fc70:	ldp	x29, x30, [sp], #112
    fc74:	ret
    fc78:	ldr	x0, [x22]
    fc7c:	mov	w27, #0x0                   	// #0
    fc80:	mov	x19, #0x0                   	// #0
    fc84:	cbnz	x0, fb58 <argp_fmtstream_point@@Base+0x1380>
    fc88:	b	fc28 <argp_fmtstream_point@@Base+0x1450>
    fc8c:	mov	x26, x28
    fc90:	b	fbfc <argp_fmtstream_point@@Base+0x1424>
    fc94:	nop
    fc98:	stp	x29, x30, [sp, #-96]!
    fc9c:	mov	x29, sp
    fca0:	stp	x19, x20, [sp, #16]
    fca4:	mov	x20, x1
    fca8:	stp	x21, x22, [sp, #32]
    fcac:	mov	x22, x2
    fcb0:	stp	x25, x26, [sp, #64]
    fcb4:	mov	x26, x0
    fcb8:	str	x2, [sp, #88]
    fcbc:	cbz	x0, fe08 <argp_fmtstream_point@@Base+0x1630>
    fcc0:	mov	x1, x0
    fcc4:	mov	w2, #0x5                   	// #5
    fcc8:	ldr	x0, [x20, #48]
    fccc:	bl	ada0 <dcgettext@plt>
    fcd0:	mov	x19, x0
    fcd4:	ldr	x1, [x20, #40]
    fcd8:	mov	x26, x0
    fcdc:	cbz	x1, fcfc <argp_fmtstream_point@@Base+0x1524>
    fce0:	ldr	x3, [x22, #32]
    fce4:	mov	w1, #0x3                   	// #3
    fce8:	mov	x2, x20
    fcec:	mov	x0, x26
    fcf0:	movk	w1, #0x200, lsl #16
    fcf4:	bl	eae8 <argp_fmtstream_point@@Base+0x310>
    fcf8:	mov	x19, x0
    fcfc:	cbz	x19, fd14 <argp_fmtstream_point@@Base+0x153c>
    fd00:	ldrb	w0, [x19]
    fd04:	ldr	x1, [x22, #16]
    fd08:	cbnz	w0, fd34 <argp_fmtstream_point@@Base+0x155c>
    fd0c:	mov	w0, #0x1                   	// #1
    fd10:	str	w0, [x1, #8]
    fd14:	cmp	x26, x19
    fd18:	b.eq	fe14 <argp_fmtstream_point@@Base+0x163c>  // b.none
    fd1c:	mov	x0, x19
    fd20:	ldp	x19, x20, [sp, #16]
    fd24:	ldp	x21, x22, [sp, #32]
    fd28:	ldp	x25, x26, [sp, #64]
    fd2c:	ldp	x29, x30, [sp], #96
    fd30:	b	aa50 <free@plt>
    fd34:	ldr	x0, [x1]
    fd38:	stp	x23, x24, [sp, #48]
    fd3c:	ldr	x20, [x22, #8]
    fd40:	cbz	x0, fd78 <argp_fmtstream_point@@Base+0x15a0>
    fd44:	ldp	x0, x1, [x20, #56]
    fd48:	cmp	x0, x1
    fd4c:	b.cc	fd64 <argp_fmtstream_point@@Base+0x158c>  // b.lo, b.ul, b.last
    fd50:	mov	x0, x20
    fd54:	mov	x1, #0x1                   	// #1
    fd58:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fd5c:	cbz	w0, fd74 <argp_fmtstream_point@@Base+0x159c>
    fd60:	ldr	x0, [x20, #56]
    fd64:	add	x1, x0, #0x1
    fd68:	str	x1, [x20, #56]
    fd6c:	mov	w1, #0xa                   	// #10
    fd70:	strb	w1, [x0]
    fd74:	ldr	x20, [x22, #8]
    fd78:	adrp	x23, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
    fd7c:	add	x23, x23, #0x1d0
    fd80:	mov	x0, x20
    fd84:	ldr	w1, [x23, #24]
    fd88:	bl	f788 <argp_fmtstream_point@@Base+0xfb0>
    fd8c:	ldrsw	x24, [x23, #24]
    fd90:	ldr	x20, [x22, #8]
    fd94:	ldp	x0, x21, [x20, #48]
    fd98:	ldr	x1, [x20, #32]
    fd9c:	sub	x0, x21, x0
    fda0:	cmp	x0, x1
    fda4:	b.hi	fea0 <argp_fmtstream_point@@Base+0x16c8>  // b.pmore
    fda8:	mov	x25, x20
    fdac:	str	x24, [x20, #8]
    fdb0:	str	x24, [x25, #24]
    fdb4:	mov	x0, x19
    fdb8:	bl	a340 <strlen@plt>
    fdbc:	mov	x23, x0
    fdc0:	cbnz	x0, fe54 <argp_fmtstream_point@@Base+0x167c>
    fdc4:	ldr	x0, [x20, #48]
    fdc8:	mov	x23, x20
    fdcc:	ldr	x1, [x20, #32]
    fdd0:	sub	x0, x21, x0
    fdd4:	cmp	x0, x1
    fdd8:	b.hi	fe40 <argp_fmtstream_point@@Base+0x1668>  // b.pmore
    fddc:	ldr	x0, [x23, #64]
    fde0:	str	xzr, [x20, #8]
    fde4:	cmp	x0, x21
    fde8:	b.ls	fe28 <argp_fmtstream_point@@Base+0x1650>  // b.plast
    fdec:	add	x0, x21, #0x1
    fdf0:	str	x0, [x23, #56]
    fdf4:	mov	w0, #0xa                   	// #10
    fdf8:	strb	w0, [x21]
    fdfc:	ldr	x1, [x22, #16]
    fe00:	ldp	x23, x24, [sp, #48]
    fe04:	b	fd0c <argp_fmtstream_point@@Base+0x1534>
    fe08:	cbz	x1, fe14 <argp_fmtstream_point@@Base+0x163c>
    fe0c:	ldr	x0, [x1, #40]
    fe10:	cbnz	x0, fce0 <argp_fmtstream_point@@Base+0x1508>
    fe14:	ldp	x19, x20, [sp, #16]
    fe18:	ldp	x21, x22, [sp, #32]
    fe1c:	ldp	x25, x26, [sp, #64]
    fe20:	ldp	x29, x30, [sp], #96
    fe24:	ret
    fe28:	mov	x0, x23
    fe2c:	mov	x1, #0x1                   	// #1
    fe30:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fe34:	cbz	w0, fdfc <argp_fmtstream_point@@Base+0x1624>
    fe38:	ldr	x21, [x23, #56]
    fe3c:	b	fdec <argp_fmtstream_point@@Base+0x1614>
    fe40:	mov	x0, x20
    fe44:	bl	a520 <_argp_fmtstream_update@plt>
    fe48:	ldr	x23, [x22, #8]
    fe4c:	ldr	x21, [x23, #56]
    fe50:	b	fddc <argp_fmtstream_point@@Base+0x1604>
    fe54:	ldr	x1, [x20, #64]
    fe58:	add	x0, x21, x0
    fe5c:	cmp	x1, x0
    fe60:	b.cs	fe78 <argp_fmtstream_point@@Base+0x16a0>  // b.hs, b.nlast
    fe64:	mov	x1, x23
    fe68:	mov	x0, x20
    fe6c:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fe70:	cbz	w0, fe94 <argp_fmtstream_point@@Base+0x16bc>
    fe74:	ldr	x21, [x20, #56]
    fe78:	mov	x0, x21
    fe7c:	mov	x2, x23
    fe80:	mov	x1, x19
    fe84:	bl	a2c0 <memcpy@plt>
    fe88:	ldr	x0, [x20, #56]
    fe8c:	add	x0, x0, x23
    fe90:	str	x0, [x20, #56]
    fe94:	ldr	x20, [x22, #8]
    fe98:	ldr	x21, [x20, #56]
    fe9c:	b	fdc4 <argp_fmtstream_point@@Base+0x15ec>
    fea0:	mov	x0, x20
    fea4:	bl	a520 <_argp_fmtstream_update@plt>
    fea8:	ldr	x25, [x22, #8]
    feac:	ldr	w23, [x23, #24]
    feb0:	ldp	x0, x21, [x25, #48]
    feb4:	ldr	x1, [x25, #32]
    feb8:	str	x24, [x20, #8]
    febc:	sub	x0, x21, x0
    fec0:	cmp	x0, x1
    fec4:	b.ls	fee0 <argp_fmtstream_point@@Base+0x1708>  // b.plast
    fec8:	mov	x0, x25
    fecc:	bl	a520 <_argp_fmtstream_update@plt>
    fed0:	ldr	x20, [x22, #8]
    fed4:	sxtw	x24, w23
    fed8:	ldr	x21, [x20, #56]
    fedc:	b	fdb0 <argp_fmtstream_point@@Base+0x15d8>
    fee0:	sxtw	x24, w23
    fee4:	mov	x20, x25
    fee8:	b	fdb0 <argp_fmtstream_point@@Base+0x15d8>
    feec:	nop
    fef0:	stp	x29, x30, [sp, #-64]!
    fef4:	mov	x29, sp
    fef8:	stp	x19, x20, [sp, #16]
    fefc:	mov	w20, w0
    ff00:	ldr	w0, [x1, #24]
    ff04:	stp	x21, x22, [sp, #32]
    ff08:	mov	x19, x1
    ff0c:	ldr	x21, [x1, #8]
    ff10:	cbz	w0, 10018 <argp_fmtstream_point@@Base+0x1840>
    ff14:	ldr	x1, [x1]
    ff18:	ldr	x0, [x19, #16]
    ff1c:	ldr	x22, [x1, #32]
    ff20:	str	x23, [sp, #48]
    ff24:	ldr	x23, [x0]
    ff28:	ldr	w0, [x0, #8]
    ff2c:	cmp	w0, #0x0
    ff30:	ccmp	x23, #0x0, #0x4, ne  // ne = any
    ff34:	b.ne	ffcc <argp_fmtstream_point@@Base+0x17f4>  // b.any
    ff38:	cbz	x22, ffac <argp_fmtstream_point@@Base+0x17d4>
    ff3c:	ldr	x0, [x22]
    ff40:	cbz	x0, ffac <argp_fmtstream_point@@Base+0x17d4>
    ff44:	ldrb	w1, [x0]
    ff48:	cbz	w1, ffac <argp_fmtstream_point@@Base+0x17d4>
    ff4c:	cbz	x23, ff78 <argp_fmtstream_point@@Base+0x17a0>
    ff50:	ldr	x1, [x23, #32]
    ff54:	cmp	x1, x22
    ff58:	b.eq	ffac <argp_fmtstream_point@@Base+0x17d4>  // b.none
    ff5c:	cbz	x1, ff78 <argp_fmtstream_point@@Base+0x17a0>
    ff60:	ldr	x1, [x1, #16]
    ff64:	cmp	x1, #0x0
    ff68:	ccmp	x22, x1, #0x4, ne  // ne = any
    ff6c:	b.ne	ff60 <argp_fmtstream_point@@Base+0x1788>  // b.any
    ff70:	cmp	x22, x1
    ff74:	b.eq	ffac <argp_fmtstream_point@@Base+0x17d4>  // b.none
    ff78:	ldr	x1, [x22, #24]
    ff7c:	mov	x2, x19
    ff80:	ldr	x23, [x21, #24]
    ff84:	bl	fc98 <argp_fmtstream_point@@Base+0x14c0>
    ff88:	ldr	x22, [x19, #8]
    ff8c:	mov	x21, x22
    ff90:	ldp	x2, x0, [x22, #48]
    ff94:	ldr	x1, [x22, #32]
    ff98:	sub	x0, x0, x2
    ff9c:	cmp	x0, x1
    ffa0:	b.hi	1006c <argp_fmtstream_point@@Base+0x1894>  // b.pmore
    ffa4:	sxtw	x23, w23
    ffa8:	str	x23, [x22, #24]
    ffac:	ldr	x23, [sp, #48]
    ffb0:	str	wzr, [x19, #24]
    ffb4:	mov	w1, w20
    ffb8:	mov	x0, x21
    ffbc:	ldp	x19, x20, [sp, #16]
    ffc0:	ldp	x21, x22, [sp, #32]
    ffc4:	ldp	x29, x30, [sp], #64
    ffc8:	b	f788 <argp_fmtstream_point@@Base+0xfb0>
    ffcc:	ldr	w1, [x1, #24]
    ffd0:	ldr	w0, [x23, #24]
    ffd4:	cmp	w1, w0
    ffd8:	b.eq	ff38 <argp_fmtstream_point@@Base+0x1760>  // b.none
    ffdc:	ldp	x0, x1, [x21, #56]
    ffe0:	cmp	x0, x1
    ffe4:	b.cc	fffc <argp_fmtstream_point@@Base+0x1824>  // b.lo, b.ul, b.last
    ffe8:	mov	x0, x21
    ffec:	mov	x1, #0x1                   	// #1
    fff0:	bl	ad80 <_argp_fmtstream_ensure@plt>
    fff4:	cbz	w0, 1000c <argp_fmtstream_point@@Base+0x1834>
    fff8:	ldr	x0, [x21, #56]
    fffc:	add	x1, x0, #0x1
   10000:	str	x1, [x21, #56]
   10004:	mov	w1, #0xa                   	// #10
   10008:	strb	w1, [x0]
   1000c:	ldr	x21, [x19, #8]
   10010:	cbnz	x22, ff3c <argp_fmtstream_point@@Base+0x1764>
   10014:	b	ffac <argp_fmtstream_point@@Base+0x17d4>
   10018:	ldp	x0, x2, [x21, #56]
   1001c:	add	x1, x0, #0x2
   10020:	cmp	x2, x1
   10024:	b.cs	1003c <argp_fmtstream_point@@Base+0x1864>  // b.hs, b.nlast
   10028:	mov	x0, x21
   1002c:	mov	x1, #0x2                   	// #2
   10030:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10034:	cbz	w0, 10050 <argp_fmtstream_point@@Base+0x1878>
   10038:	ldr	x0, [x21, #56]
   1003c:	mov	w1, #0x202c                	// #8236
   10040:	strh	w1, [x0]
   10044:	ldr	x0, [x21, #56]
   10048:	add	x0, x0, #0x2
   1004c:	str	x0, [x21, #56]
   10050:	ldr	x21, [x19, #8]
   10054:	mov	w1, w20
   10058:	ldp	x19, x20, [sp, #16]
   1005c:	mov	x0, x21
   10060:	ldp	x21, x22, [sp, #32]
   10064:	ldp	x29, x30, [sp], #64
   10068:	b	f788 <argp_fmtstream_point@@Base+0xfb0>
   1006c:	mov	x0, x22
   10070:	bl	a520 <_argp_fmtstream_update@plt>
   10074:	ldr	x21, [x19, #8]
   10078:	b	ffa4 <argp_fmtstream_point@@Base+0x17cc>
   1007c:	nop
   10080:	stp	x29, x30, [sp, #-128]!
   10084:	mov	x29, sp
   10088:	stp	x27, x28, [sp, #80]
   1008c:	ldr	x27, [x0, #24]
   10090:	stp	x19, x20, [sp, #16]
   10094:	mov	x19, x5
   10098:	stp	x21, x22, [sp, #32]
   1009c:	mov	x21, x0
   100a0:	stp	x23, x24, [sp, #48]
   100a4:	mov	w23, w2
   100a8:	mov	w24, w3
   100ac:	stp	x25, x26, [sp, #64]
   100b0:	mov	x25, x1
   100b4:	mov	w26, w4
   100b8:	cbz	x27, 10154 <argp_fmtstream_point@@Base+0x197c>
   100bc:	ldr	x0, [x0, #48]
   100c0:	mov	x1, x27
   100c4:	mov	w2, #0x5                   	// #5
   100c8:	bl	ada0 <dcgettext@plt>
   100cc:	mov	x27, x0
   100d0:	ldr	x22, [x21, #32]
   100d4:	cbz	x0, 10440 <argp_fmtstream_point@@Base+0x1c68>
   100d8:	mov	w1, #0xb                   	// #11
   100dc:	bl	ab60 <strchr@plt>
   100e0:	str	x0, [sp, #104]
   100e4:	ldr	x3, [x21, #40]
   100e8:	cbnz	w23, 1041c <argp_fmtstream_point@@Base+0x1c44>
   100ec:	ldr	x0, [sp, #104]
   100f0:	cbz	x0, 10424 <argp_fmtstream_point@@Base+0x1c4c>
   100f4:	ldr	x0, [sp, #104]
   100f8:	subs	x20, x0, x27
   100fc:	cset	w5, ne  // ne = any
   10100:	cbz	x3, 10430 <argp_fmtstream_point@@Base+0x1c58>
   10104:	cbz	x20, 10120 <argp_fmtstream_point@@Base+0x1948>
   10108:	mov	x0, x27
   1010c:	mov	x1, x20
   10110:	str	w5, [sp, #104]
   10114:	bl	ab30 <strndup@plt>
   10118:	ldr	w5, [sp, #104]
   1011c:	mov	x27, x0
   10120:	mov	x1, x25
   10124:	mov	x0, x21
   10128:	str	w5, [sp, #116]
   1012c:	bl	ac60 <_argp_input@plt>
   10130:	ldr	w5, [sp, #116]
   10134:	cmp	x27, #0x0
   10138:	str	x0, [sp, #104]
   1013c:	csel	w0, w5, wzr, ne  // ne = any
   10140:	str	w0, [sp, #116]
   10144:	mov	w0, #0x1                   	// #1
   10148:	movk	w0, #0x200, lsl #16
   1014c:	ldr	x3, [x21, #40]
   10150:	b	10188 <argp_fmtstream_point@@Base+0x19b0>
   10154:	ldp	x22, x3, [x0, #32]
   10158:	cbz	x3, 10448 <argp_fmtstream_point@@Base+0x1c70>
   1015c:	mov	x1, x25
   10160:	mov	x0, x21
   10164:	bl	ac60 <_argp_input@plt>
   10168:	str	x0, [sp, #104]
   1016c:	mov	w0, #0x1                   	// #1
   10170:	mov	w5, #0x0                   	// #0
   10174:	ldr	x3, [x21, #40]
   10178:	movk	w0, #0x200, lsl #16
   1017c:	add	w0, w23, w0
   10180:	mov	x20, #0x0                   	// #0
   10184:	str	wzr, [sp, #116]
   10188:	ldr	x2, [sp, #104]
   1018c:	mov	x1, x27
   10190:	str	w5, [sp, #120]
   10194:	blr	x3
   10198:	mov	x28, x0
   1019c:	cbz	x0, 10540 <argp_fmtstream_point@@Base+0x1d68>
   101a0:	ldr	w5, [sp, #120]
   101a4:	cmp	x0, x27
   101a8:	csel	w5, w5, wzr, eq  // eq = none
   101ac:	ldr	x3, [x19, #56]
   101b0:	cbnz	w24, 1032c <argp_fmtstream_point@@Base+0x1b54>
   101b4:	cbz	w5, 10350 <argp_fmtstream_point@@Base+0x1b78>
   101b8:	ldr	x1, [x19, #64]
   101bc:	add	x0, x3, x20
   101c0:	cmp	x1, x0
   101c4:	b.cs	103ac <argp_fmtstream_point@@Base+0x1bd4>  // b.hs, b.nlast
   101c8:	mov	x1, x20
   101cc:	mov	x0, x19
   101d0:	bl	ad80 <_argp_fmtstream_ensure@plt>
   101d4:	ldr	x3, [x19, #56]
   101d8:	cbnz	w0, 103ac <argp_fmtstream_point@@Base+0x1bd4>
   101dc:	ldr	x1, [x19, #48]
   101e0:	ldr	x0, [x19, #32]
   101e4:	sub	x3, x3, x1
   101e8:	cmp	x3, x0
   101ec:	b.hi	103dc <argp_fmtstream_point@@Base+0x1c04>  // b.pmore
   101f0:	ldr	x0, [x19, #40]
   101f4:	ldr	x1, [x19, #8]
   101f8:	cmp	x0, #0x0
   101fc:	csel	x0, x0, xzr, ge  // ge = tcont
   10200:	cmp	x1, x0
   10204:	b.cc	103fc <argp_fmtstream_point@@Base+0x1c24>  // b.lo, b.ul, b.last
   10208:	cmp	x27, x28
   1020c:	mov	w20, #0x1                   	// #1
   10210:	b.eq	1021c <argp_fmtstream_point@@Base+0x1a44>  // b.none
   10214:	mov	x0, x28
   10218:	bl	aa50 <free@plt>
   1021c:	ldr	w0, [sp, #116]
   10220:	cbz	w0, 10234 <argp_fmtstream_point@@Base+0x1a5c>
   10224:	ldr	x0, [x21, #40]
   10228:	cbz	x0, 102b0 <argp_fmtstream_point@@Base+0x1ad8>
   1022c:	mov	x0, x27
   10230:	bl	aa50 <free@plt>
   10234:	cbz	w23, 102b0 <argp_fmtstream_point@@Base+0x1ad8>
   10238:	ldr	x3, [x21, #40]
   1023c:	cbz	x3, 102b0 <argp_fmtstream_point@@Base+0x1ad8>
   10240:	ldr	x2, [sp, #104]
   10244:	mov	w0, #0x4                   	// #4
   10248:	movk	w0, #0x200, lsl #16
   1024c:	mov	x1, #0x0                   	// #0
   10250:	blr	x3
   10254:	mov	x21, x0
   10258:	cbz	x0, 102b0 <argp_fmtstream_point@@Base+0x1ad8>
   1025c:	orr	w20, w24, w20
   10260:	cbnz	w20, 10520 <argp_fmtstream_point@@Base+0x1d48>
   10264:	mov	x0, x21
   10268:	bl	a340 <strlen@plt>
   1026c:	mov	x20, x0
   10270:	cbnz	x0, 104e0 <argp_fmtstream_point@@Base+0x1d08>
   10274:	mov	x0, x21
   10278:	bl	aa50 <free@plt>
   1027c:	ldp	x2, x0, [x19, #48]
   10280:	ldr	x1, [x19, #32]
   10284:	sub	x0, x0, x2
   10288:	cmp	x0, x1
   1028c:	b.hi	104d4 <argp_fmtstream_point@@Base+0x1cfc>  // b.pmore
   10290:	ldr	x0, [x19, #40]
   10294:	mov	w20, #0x1                   	// #1
   10298:	ldr	x1, [x19, #8]
   1029c:	cmp	x0, #0x0
   102a0:	csel	x0, x0, xzr, ge  // ge = tcont
   102a4:	cmp	x1, x0
   102a8:	b.cc	104b0 <argp_fmtstream_point@@Base+0x1cd8>  // b.lo, b.ul, b.last
   102ac:	nop
   102b0:	cbz	x22, 1030c <argp_fmtstream_point@@Base+0x1b34>
   102b4:	ldr	x0, [x22]
   102b8:	cbz	x0, 1030c <argp_fmtstream_point@@Base+0x1b34>
   102bc:	eor	w2, w26, #0x1
   102c0:	eor	w1, w20, #0x1
   102c4:	and	w21, w2, #0x1
   102c8:	orr	w1, w1, w2
   102cc:	tbz	w1, #0, 10548 <argp_fmtstream_point@@Base+0x1d70>
   102d0:	orr	w1, w24, w20
   102d4:	mov	x5, x19
   102d8:	cmp	w1, #0x0
   102dc:	mov	w4, w26
   102e0:	cset	w3, ne  // ne = any
   102e4:	mov	x1, x25
   102e8:	mov	w2, w23
   102ec:	bl	10080 <argp_fmtstream_point@@Base+0x18a8>
   102f0:	mov	w1, w0
   102f4:	ldr	x0, [x22, #32]!
   102f8:	orr	w20, w20, w1
   102fc:	cmp	w20, #0x0
   10300:	ccmp	w21, #0x0, #0x0, ne  // ne = any
   10304:	cbz	x0, 1030c <argp_fmtstream_point@@Base+0x1b34>
   10308:	b.ne	102d0 <argp_fmtstream_point@@Base+0x1af8>  // b.any
   1030c:	mov	w0, w20
   10310:	ldp	x19, x20, [sp, #16]
   10314:	ldp	x21, x22, [sp, #32]
   10318:	ldp	x23, x24, [sp, #48]
   1031c:	ldp	x25, x26, [sp, #64]
   10320:	ldp	x27, x28, [sp, #80]
   10324:	ldp	x29, x30, [sp], #128
   10328:	ret
   1032c:	ldr	x0, [x19, #64]
   10330:	cmp	x0, x3
   10334:	b.ls	1047c <argp_fmtstream_point@@Base+0x1ca4>  // b.plast
   10338:	add	x0, x3, #0x1
   1033c:	str	x0, [x19, #56]
   10340:	mov	w0, #0xa                   	// #10
   10344:	strb	w0, [x3]
   10348:	ldr	x3, [x19, #56]
   1034c:	cbnz	w5, 101b8 <argp_fmtstream_point@@Base+0x19e0>
   10350:	mov	x0, x28
   10354:	str	x3, [sp, #120]
   10358:	bl	a340 <strlen@plt>
   1035c:	mov	x20, x0
   10360:	ldr	x3, [sp, #120]
   10364:	cbz	x0, 101dc <argp_fmtstream_point@@Base+0x1a04>
   10368:	ldr	x1, [x19, #64]
   1036c:	add	x0, x3, x0
   10370:	cmp	x1, x0
   10374:	b.cs	1038c <argp_fmtstream_point@@Base+0x1bb4>  // b.hs, b.nlast
   10378:	mov	x1, x20
   1037c:	mov	x0, x19
   10380:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10384:	ldr	x3, [x19, #56]
   10388:	cbz	w0, 101dc <argp_fmtstream_point@@Base+0x1a04>
   1038c:	mov	x0, x3
   10390:	mov	x2, x20
   10394:	mov	x1, x28
   10398:	bl	a2c0 <memcpy@plt>
   1039c:	ldr	x3, [x19, #56]
   103a0:	add	x3, x3, x20
   103a4:	str	x3, [x19, #56]
   103a8:	b	101dc <argp_fmtstream_point@@Base+0x1a04>
   103ac:	mov	x0, x3
   103b0:	mov	x1, x27
   103b4:	mov	x2, x20
   103b8:	bl	a2c0 <memcpy@plt>
   103bc:	ldr	x3, [x19, #56]
   103c0:	ldr	x1, [x19, #48]
   103c4:	add	x3, x3, x20
   103c8:	ldr	x0, [x19, #32]
   103cc:	str	x3, [x19, #56]
   103d0:	sub	x3, x3, x1
   103d4:	cmp	x3, x0
   103d8:	b.ls	101f0 <argp_fmtstream_point@@Base+0x1a18>  // b.plast
   103dc:	mov	x0, x19
   103e0:	bl	a520 <_argp_fmtstream_update@plt>
   103e4:	ldr	x0, [x19, #40]
   103e8:	ldr	x1, [x19, #8]
   103ec:	cmp	x0, #0x0
   103f0:	csel	x0, x0, xzr, ge  // ge = tcont
   103f4:	cmp	x1, x0
   103f8:	b.cs	10208 <argp_fmtstream_point@@Base+0x1a30>  // b.hs, b.nlast
   103fc:	ldp	x0, x1, [x19, #56]
   10400:	cmp	x0, x1
   10404:	b.cs	10454 <argp_fmtstream_point@@Base+0x1c7c>  // b.hs, b.nlast
   10408:	add	x1, x0, #0x1
   1040c:	str	x1, [x19, #56]
   10410:	mov	w1, #0xa                   	// #10
   10414:	strb	w1, [x0]
   10418:	b	10208 <argp_fmtstream_point@@Base+0x1a30>
   1041c:	add	x27, x0, #0x1
   10420:	cbz	x0, 10550 <argp_fmtstream_point@@Base+0x1d78>
   10424:	mov	w5, #0x0                   	// #0
   10428:	mov	x20, #0x0                   	// #0
   1042c:	cbnz	x3, 1015c <argp_fmtstream_point@@Base+0x1984>
   10430:	mov	x28, x27
   10434:	str	xzr, [sp, #104]
   10438:	str	w5, [sp, #116]
   1043c:	b	101ac <argp_fmtstream_point@@Base+0x19d4>
   10440:	ldr	x3, [x21, #40]
   10444:	cbnz	x3, 1015c <argp_fmtstream_point@@Base+0x1984>
   10448:	mov	w20, #0x0                   	// #0
   1044c:	str	xzr, [sp, #104]
   10450:	b	10234 <argp_fmtstream_point@@Base+0x1a5c>
   10454:	mov	x0, x19
   10458:	mov	x1, #0x1                   	// #1
   1045c:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10460:	cbz	w0, 10208 <argp_fmtstream_point@@Base+0x1a30>
   10464:	ldr	x0, [x19, #56]
   10468:	add	x1, x0, #0x1
   1046c:	str	x1, [x19, #56]
   10470:	mov	w1, #0xa                   	// #10
   10474:	strb	w1, [x0]
   10478:	b	10208 <argp_fmtstream_point@@Base+0x1a30>
   1047c:	mov	x0, x19
   10480:	mov	x1, #0x1                   	// #1
   10484:	str	w5, [sp, #120]
   10488:	bl	ad80 <_argp_fmtstream_ensure@plt>
   1048c:	ldr	w5, [sp, #120]
   10490:	ldr	x3, [x19, #56]
   10494:	cbz	w0, 101b4 <argp_fmtstream_point@@Base+0x19dc>
   10498:	add	x0, x3, #0x1
   1049c:	str	x0, [x19, #56]
   104a0:	mov	w0, #0xa                   	// #10
   104a4:	strb	w0, [x3]
   104a8:	ldr	x3, [x19, #56]
   104ac:	b	1034c <argp_fmtstream_point@@Base+0x1b74>
   104b0:	ldp	x0, x1, [x19, #56]
   104b4:	cmp	x0, x1
   104b8:	b.cs	10578 <argp_fmtstream_point@@Base+0x1da0>  // b.hs, b.nlast
   104bc:	add	x1, x0, #0x1
   104c0:	str	x1, [x19, #56]
   104c4:	mov	w20, #0x1                   	// #1
   104c8:	mov	w1, #0xa                   	// #10
   104cc:	strb	w1, [x0]
   104d0:	b	102b0 <argp_fmtstream_point@@Base+0x1ad8>
   104d4:	mov	x0, x19
   104d8:	bl	a520 <_argp_fmtstream_update@plt>
   104dc:	b	10290 <argp_fmtstream_point@@Base+0x1ab8>
   104e0:	ldp	x0, x2, [x19, #56]
   104e4:	add	x1, x0, x20
   104e8:	cmp	x2, x1
   104ec:	b.cs	10504 <argp_fmtstream_point@@Base+0x1d2c>  // b.hs, b.nlast
   104f0:	mov	x1, x20
   104f4:	mov	x0, x19
   104f8:	bl	ad80 <_argp_fmtstream_ensure@plt>
   104fc:	cbz	w0, 10274 <argp_fmtstream_point@@Base+0x1a9c>
   10500:	ldr	x0, [x19, #56]
   10504:	mov	x2, x20
   10508:	mov	x1, x21
   1050c:	bl	a2c0 <memcpy@plt>
   10510:	ldr	x0, [x19, #56]
   10514:	add	x0, x0, x20
   10518:	str	x0, [x19, #56]
   1051c:	b	10274 <argp_fmtstream_point@@Base+0x1a9c>
   10520:	ldp	x0, x1, [x19, #56]
   10524:	cmp	x0, x1
   10528:	b.cs	10560 <argp_fmtstream_point@@Base+0x1d88>  // b.hs, b.nlast
   1052c:	add	x1, x0, #0x1
   10530:	str	x1, [x19, #56]
   10534:	mov	w1, #0xa                   	// #10
   10538:	strb	w1, [x0]
   1053c:	b	10264 <argp_fmtstream_point@@Base+0x1a8c>
   10540:	mov	w20, #0x0                   	// #0
   10544:	b	1021c <argp_fmtstream_point@@Base+0x1a44>
   10548:	mov	w20, #0x1                   	// #1
   1054c:	b	1030c <argp_fmtstream_point@@Base+0x1b34>
   10550:	mov	x27, #0x0                   	// #0
   10554:	mov	w20, #0x0                   	// #0
   10558:	cbnz	x3, 1015c <argp_fmtstream_point@@Base+0x1984>
   1055c:	b	102b0 <argp_fmtstream_point@@Base+0x1ad8>
   10560:	mov	x0, x19
   10564:	mov	x1, #0x1                   	// #1
   10568:	bl	ad80 <_argp_fmtstream_ensure@plt>
   1056c:	cbz	w0, 10264 <argp_fmtstream_point@@Base+0x1a8c>
   10570:	ldr	x0, [x19, #56]
   10574:	b	1052c <argp_fmtstream_point@@Base+0x1d54>
   10578:	mov	x0, x19
   1057c:	mov	x1, #0x1                   	// #1
   10580:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10584:	cbz	w0, 102b0 <argp_fmtstream_point@@Base+0x1ad8>
   10588:	ldr	x0, [x19, #56]
   1058c:	b	104bc <argp_fmtstream_point@@Base+0x1ce4>

0000000000010590 <argp_failure@@Base>:
   10590:	stp	x29, x30, [sp, #-464]!
   10594:	mov	x29, sp
   10598:	stp	x19, x20, [sp, #16]
   1059c:	mov	x20, x0
   105a0:	stp	x21, x22, [sp, #32]
   105a4:	mov	w22, w2
   105a8:	mov	x21, x3
   105ac:	str	x23, [sp, #48]
   105b0:	mov	w23, w1
   105b4:	str	q0, [sp, #304]
   105b8:	str	q1, [sp, #320]
   105bc:	str	q2, [sp, #336]
   105c0:	str	q3, [sp, #352]
   105c4:	str	q4, [sp, #368]
   105c8:	str	q5, [sp, #384]
   105cc:	str	q6, [sp, #400]
   105d0:	str	q7, [sp, #416]
   105d4:	stp	x4, x5, [sp, #432]
   105d8:	stp	x6, x7, [sp, #448]
   105dc:	cbz	x0, 1071c <argp_failure@@Base+0x18c>
   105e0:	ldr	w0, [x0, #28]
   105e4:	tbnz	w0, #1, 10708 <argp_failure@@Base+0x178>
   105e8:	ldr	x19, [x20, #72]
   105ec:	cbz	x19, 10708 <argp_failure@@Base+0x178>
   105f0:	mov	x0, x19
   105f4:	bl	a3a0 <flockfile@plt>
   105f8:	ldr	x0, [x20, #64]
   105fc:	mov	x1, x19
   10600:	bl	ae00 <fputs_unlocked@plt>
   10604:	cbz	x21, 1067c <argp_failure@@Base+0xec>
   10608:	ldp	x0, x4, [x19, #40]
   1060c:	add	x3, sp, #0x1b0
   10610:	add	x5, sp, #0x1d0
   10614:	mov	w2, #0xffffffe0            	// #-32
   10618:	mov	w1, #0xffffff80            	// #-128
   1061c:	stp	x5, x5, [sp, #104]
   10620:	str	x3, [sp, #120]
   10624:	stp	w2, w1, [sp, #128]
   10628:	cmp	x0, x4
   1062c:	b.cs	10794 <argp_failure@@Base+0x204>  // b.hs, b.nlast
   10630:	add	x1, x0, #0x1
   10634:	str	x1, [x19, #40]
   10638:	mov	w1, #0x3a                  	// #58
   1063c:	strb	w1, [x0]
   10640:	ldp	x0, x1, [x19, #40]
   10644:	cmp	x0, x1
   10648:	b.cs	10784 <argp_failure@@Base+0x1f4>  // b.hs, b.nlast
   1064c:	add	x1, x0, #0x1
   10650:	str	x1, [x19, #40]
   10654:	mov	w1, #0x20                  	// #32
   10658:	strb	w1, [x0]
   1065c:	ldp	x4, x5, [sp, #104]
   10660:	mov	x1, x21
   10664:	ldp	x6, x7, [sp, #120]
   10668:	add	x2, sp, #0x40
   1066c:	mov	x0, x19
   10670:	stp	x4, x5, [sp, #64]
   10674:	stp	x6, x7, [sp, #80]
   10678:	bl	ae80 <vfprintf@plt>
   1067c:	ldp	x0, x1, [x19, #40]
   10680:	cbz	w22, 106d8 <argp_failure@@Base+0x148>
   10684:	cmp	x0, x1
   10688:	b.cs	107b4 <argp_failure@@Base+0x224>  // b.hs, b.nlast
   1068c:	add	x1, x0, #0x1
   10690:	str	x1, [x19, #40]
   10694:	mov	w1, #0x3a                  	// #58
   10698:	strb	w1, [x0]
   1069c:	ldp	x0, x1, [x19, #40]
   106a0:	cmp	x0, x1
   106a4:	b.cs	107a4 <argp_failure@@Base+0x214>  // b.hs, b.nlast
   106a8:	add	x1, x0, #0x1
   106ac:	str	x1, [x19, #40]
   106b0:	mov	w1, #0x20                  	// #32
   106b4:	strb	w1, [x0]
   106b8:	add	x1, sp, #0x68
   106bc:	mov	w0, w22
   106c0:	mov	x2, #0xc8                  	// #200
   106c4:	bl	a760 <strerror_r@plt>
   106c8:	cbz	x0, 1075c <argp_failure@@Base+0x1cc>
   106cc:	mov	x1, x19
   106d0:	bl	ae00 <fputs_unlocked@plt>
   106d4:	ldp	x0, x1, [x19, #40]
   106d8:	cmp	x1, x0
   106dc:	b.ls	1074c <argp_failure@@Base+0x1bc>  // b.plast
   106e0:	add	x1, x0, #0x1
   106e4:	str	x1, [x19, #40]
   106e8:	mov	w1, #0xa                   	// #10
   106ec:	strb	w1, [x0]
   106f0:	mov	x0, x19
   106f4:	bl	a620 <funlockfile@plt>
   106f8:	cbz	w23, 10708 <argp_failure@@Base+0x178>
   106fc:	cbz	x20, 10744 <argp_failure@@Base+0x1b4>
   10700:	ldr	w0, [x20, #28]
   10704:	tbz	w0, #5, 10744 <argp_failure@@Base+0x1b4>
   10708:	ldp	x19, x20, [sp, #16]
   1070c:	ldp	x21, x22, [sp, #32]
   10710:	ldr	x23, [sp, #48]
   10714:	ldp	x29, x30, [sp], #464
   10718:	ret
   1071c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   10720:	ldr	x0, [x0, #3816]
   10724:	ldr	x19, [x0]
   10728:	cbz	x19, 10708 <argp_failure@@Base+0x178>
   1072c:	mov	x0, x19
   10730:	bl	a3a0 <flockfile@plt>
   10734:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   10738:	ldr	x0, [x0, #4008]
   1073c:	ldr	x0, [x0]
   10740:	b	105fc <argp_failure@@Base+0x6c>
   10744:	mov	w0, w23
   10748:	bl	a350 <exit@plt>
   1074c:	mov	x0, x19
   10750:	mov	w1, #0xa                   	// #10
   10754:	bl	a940 <__overflow@plt>
   10758:	b	106f0 <argp_failure@@Base+0x160>
   1075c:	mov	w0, w22
   10760:	bl	a830 <strerror@plt>
   10764:	cbnz	x0, 106cc <argp_failure@@Base+0x13c>
   10768:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   1076c:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   10770:	add	x1, x1, #0x868
   10774:	mov	w2, #0x5                   	// #5
   10778:	add	x0, x0, #0x780
   1077c:	bl	ada0 <dcgettext@plt>
   10780:	b	106cc <argp_failure@@Base+0x13c>
   10784:	mov	x0, x19
   10788:	mov	w1, #0x20                  	// #32
   1078c:	bl	a940 <__overflow@plt>
   10790:	b	1065c <argp_failure@@Base+0xcc>
   10794:	mov	x0, x19
   10798:	mov	w1, #0x3a                  	// #58
   1079c:	bl	a940 <__overflow@plt>
   107a0:	b	10640 <argp_failure@@Base+0xb0>
   107a4:	mov	x0, x19
   107a8:	mov	w1, #0x20                  	// #32
   107ac:	bl	a940 <__overflow@plt>
   107b0:	b	106b8 <argp_failure@@Base+0x128>
   107b4:	mov	x0, x19
   107b8:	mov	w1, #0x3a                  	// #58
   107bc:	bl	a940 <__overflow@plt>
   107c0:	b	1069c <argp_failure@@Base+0x10c>
   107c4:	nop
   107c8:	stp	x29, x30, [sp, #-256]!
   107cc:	mov	x29, sp
   107d0:	stp	x19, x20, [sp, #16]
   107d4:	stp	x21, x22, [sp, #32]
   107d8:	stp	x23, x24, [sp, #48]
   107dc:	stp	x25, x26, [sp, #64]
   107e0:	stp	x27, x28, [sp, #80]
   107e4:	str	x2, [x29, #128]
   107e8:	cbz	x2, 10c48 <argp_failure@@Base+0x6b8>
   107ec:	adrp	x21, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   107f0:	add	x22, x21, #0x1d0
   107f4:	mov	x25, x0
   107f8:	mov	x20, x1
   107fc:	mov	x0, x2
   10800:	mov	w19, w3
   10804:	mov	x27, x4
   10808:	bl	a3a0 <flockfile@plt>
   1080c:	ldr	w0, [x22, #36]
   10810:	cbz	w0, 10c68 <argp_failure@@Base+0x6d8>
   10814:	add	x2, x21, #0x1d0
   10818:	mov	x3, #0x0                   	// #0
   1081c:	ldr	x0, [x29, #128]
   10820:	mov	x1, #0x0                   	// #0
   10824:	ldrsw	x2, [x2, #32]
   10828:	bl	aa70 <argp_make_fmtstream@plt>
   1082c:	mov	x24, x0
   10830:	cbz	x0, 1183c <argp_failure@@Base+0x12ac>
   10834:	mov	w0, #0xb                   	// #11
   10838:	mov	x26, #0x0                   	// #0
   1083c:	tst	w19, w0
   10840:	b.ne	10f8c <argp_failure@@Base+0x9fc>  // b.any
   10844:	tst	x19, #0x3
   10848:	mov	w22, #0x0                   	// #0
   1084c:	b.ne	10e1c <argp_failure@@Base+0x88c>  // b.any
   10850:	tbnz	w19, #4, 10df0 <argp_failure@@Base+0x860>
   10854:	and	w23, w19, #0x8
   10858:	tbnz	w19, #2, 10d80 <argp_failure@@Base+0x7f0>
   1085c:	cbz	w23, 10be4 <argp_failure@@Base+0x654>
   10860:	ldr	w0, [x26, #8]
   10864:	cbz	w0, 10be4 <argp_failure@@Base+0x654>
   10868:	cbnz	w22, 10dbc <argp_failure@@Base+0x82c>
   1086c:	ldr	x23, [x26]
   10870:	stp	xzr, xzr, [x29, #200]
   10874:	sub	w0, w0, #0x1
   10878:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   1087c:	add	x1, x1, #0x9b8
   10880:	add	x0, x0, #0x1
   10884:	str	x1, [x29, #96]
   10888:	add	x1, x29, #0xc8
   1088c:	str	x1, [x29, #112]
   10890:	add	x1, x29, #0xd8
   10894:	str	x1, [x29, #160]
   10898:	lsl	x1, x0, #3
   1089c:	sub	x0, x1, x0
   108a0:	add	x0, x23, x0, lsl #3
   108a4:	str	x0, [x29, #120]
   108a8:	ldp	x0, x2, [x24, #48]
   108ac:	ldr	x3, [x24, #32]
   108b0:	ldr	x22, [x23]
   108b4:	sub	x2, x2, x0
   108b8:	cmp	x2, x3
   108bc:	ldr	x27, [x23, #16]
   108c0:	b.hi	11600 <argp_failure@@Base+0x1070>  // b.pmore
   108c4:	ldr	w0, [x22, #24]
   108c8:	mov	w1, #0x1                   	// #1
   108cc:	ldr	x4, [x24, #8]
   108d0:	str	x4, [x29, #152]
   108d4:	ldr	x4, [x24, #24]
   108d8:	str	x4, [x29, #144]
   108dc:	and	w4, w0, #0x8
   108e0:	str	xzr, [x24, #8]
   108e4:	str	w4, [x29, #136]
   108e8:	ldr	x4, [x29, #112]
   108ec:	stp	x23, x24, [x29, #216]
   108f0:	str	x4, [x29, #232]
   108f4:	str	w1, [x29, #240]
   108f8:	str	x20, [x29, #248]
   108fc:	tbnz	w0, #3, 112c8 <argp_failure@@Base+0xd38>
   10900:	ldr	w0, [x23, #8]
   10904:	cbz	w0, 1093c <argp_failure@@Base+0x3ac>
   10908:	sub	w1, w0, #0x1
   1090c:	mov	x0, x22
   10910:	add	x1, x1, #0x1
   10914:	add	x1, x1, x1, lsl #1
   10918:	add	x1, x22, x1, lsl #4
   1091c:	nop
   10920:	ldr	x4, [x0]
   10924:	cbz	x4, 10930 <argp_failure@@Base+0x3a0>
   10928:	ldr	w4, [x0, #24]
   1092c:	tbz	w4, #1, 11624 <argp_failure@@Base+0x1094>
   10930:	add	x0, x0, #0x30
   10934:	cmp	x0, x1
   10938:	b.ne	10920 <argp_failure@@Base+0x390>  // b.any
   1093c:	add	x0, x21, #0x1d0
   10940:	cmp	x2, x3
   10944:	ldr	w28, [x0, #8]
   10948:	b.hi	112dc <argp_failure@@Base+0xd4c>  // b.pmore
   1094c:	ldr	w0, [x23, #8]
   10950:	sxtw	x1, w28
   10954:	str	x1, [x24, #24]
   10958:	cbz	w0, 109d8 <argp_failure@@Base+0x448>
   1095c:	sub	w0, w0, #0x1
   10960:	mov	x28, x22
   10964:	add	x0, x0, #0x1
   10968:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   1096c:	add	x1, x1, #0x938
   10970:	str	x1, [x29, #104]
   10974:	add	x0, x0, x0, lsl #1
   10978:	add	x0, x22, x0, lsl #4
   1097c:	str	x0, [x29, #168]
   10980:	ldr	w2, [x28, #24]
   10984:	str	w2, [x29, #176]
   10988:	tbnz	w2, #3, 109c8 <argp_failure@@Base+0x438>
   1098c:	ldr	w1, [x28, #8]
   10990:	str	w1, [x29, #184]
   10994:	sub	w0, w1, #0x1
   10998:	cmp	w0, #0xfe
   1099c:	b.hi	109c8 <argp_failure@@Base+0x438>  // b.pmore
   109a0:	bl	a9d0 <__ctype_b_loc@plt>
   109a4:	ldr	w1, [x29, #184]
   109a8:	ldr	x0, [x0]
   109ac:	ldrh	w0, [x0, w1, sxtw #1]
   109b0:	tbz	w0, #14, 109c8 <argp_failure@@Base+0x438>
   109b4:	ldrb	w0, [x27]
   109b8:	ldr	w2, [x29, #176]
   109bc:	cmp	w1, w0
   109c0:	b.eq	11160 <argp_failure@@Base+0xbd0>  // b.none
   109c4:	nop
   109c8:	ldr	x0, [x29, #168]
   109cc:	add	x28, x28, #0x30
   109d0:	cmp	x28, x0
   109d4:	b.ne	10980 <argp_failure@@Base+0x3f0>  // b.any
   109d8:	ldp	x3, x0, [x24, #48]
   109dc:	ldr	w1, [x22, #24]
   109e0:	ldr	x2, [x24, #32]
   109e4:	sub	x0, x0, x3
   109e8:	tbz	w1, #3, 1120c <argp_failure@@Base+0xc7c>
   109ec:	add	x1, x21, #0x1d0
   109f0:	cmp	x0, x2
   109f4:	ldr	w27, [x1, #16]
   109f8:	b.hi	116b0 <argp_failure@@Base+0x1120>  // b.pmore
   109fc:	ldr	w0, [x23, #8]
   10a00:	sxtw	x27, w27
   10a04:	str	x27, [x24, #24]
   10a08:	cbz	w0, 10ae0 <argp_failure@@Base+0x550>
   10a0c:	sub	w27, w0, #0x1
   10a10:	mov	x28, x22
   10a14:	add	x27, x27, #0x1
   10a18:	add	x0, x21, #0x1d0
   10a1c:	str	x0, [x29, #184]
   10a20:	add	x27, x27, x27, lsl #1
   10a24:	add	x27, x22, x27, lsl #4
   10a28:	b	10a38 <argp_failure@@Base+0x4a8>
   10a2c:	add	x28, x28, #0x30
   10a30:	cmp	x28, x27
   10a34:	b.eq	10ae0 <argp_failure@@Base+0x550>  // b.none
   10a38:	ldr	x0, [x28]
   10a3c:	cbz	x0, 10a2c <argp_failure@@Base+0x49c>
   10a40:	ldr	w0, [x28, #24]
   10a44:	tbnz	w0, #1, 10a2c <argp_failure@@Base+0x49c>
   10a48:	ldr	x0, [x29, #184]
   10a4c:	ldr	x1, [x29, #160]
   10a50:	ldr	w0, [x0, #16]
   10a54:	bl	fef0 <argp_fmtstream_point@@Base+0x1718>
   10a58:	mov	x0, #0x0                   	// #0
   10a5c:	mov	w2, #0x5                   	// #5
   10a60:	cbz	x20, 10a6c <argp_failure@@Base+0x4dc>
   10a64:	ldr	x0, [x23, #40]
   10a68:	ldr	x0, [x0, #48]
   10a6c:	ldr	x1, [x28]
   10a70:	bl	ada0 <dcgettext@plt>
   10a74:	str	x0, [x29, #176]
   10a78:	bl	a340 <strlen@plt>
   10a7c:	mov	x2, x0
   10a80:	cbz	x0, 10a2c <argp_failure@@Base+0x49c>
   10a84:	ldp	x4, x7, [x24, #56]
   10a88:	mov	x1, x0
   10a8c:	mov	x0, x24
   10a90:	add	x6, x4, x2
   10a94:	cmp	x7, x6
   10a98:	b.cs	10ab0 <argp_failure@@Base+0x520>  // b.hs, b.nlast
   10a9c:	str	x2, [x29, #168]
   10aa0:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10aa4:	cbz	w0, 10a2c <argp_failure@@Base+0x49c>
   10aa8:	ldr	x4, [x24, #56]
   10aac:	ldr	x2, [x29, #168]
   10ab0:	mov	x0, x4
   10ab4:	ldr	x1, [x29, #176]
   10ab8:	str	x2, [x29, #176]
   10abc:	add	x28, x28, #0x30
   10ac0:	bl	a2c0 <memcpy@plt>
   10ac4:	ldr	x0, [x24, #56]
   10ac8:	cmp	x28, x27
   10acc:	ldr	x2, [x29, #176]
   10ad0:	add	x2, x0, x2
   10ad4:	str	x2, [x24, #56]
   10ad8:	b.ne	10a38 <argp_failure@@Base+0x4a8>  // b.any
   10adc:	nop
   10ae0:	ldp	x2, x0, [x24, #48]
   10ae4:	ldr	x1, [x24, #32]
   10ae8:	sub	x0, x0, x2
   10aec:	cmp	x0, x1
   10af0:	b.hi	11618 <argp_failure@@Base+0x1088>  // b.pmore
   10af4:	ldr	w0, [x29, #240]
   10af8:	str	xzr, [x24, #8]
   10afc:	cbz	w0, 112e8 <argp_failure@@Base+0xd58>
   10b00:	ldr	w0, [x22, #24]
   10b04:	tbnz	w0, #3, 10b28 <argp_failure@@Base+0x598>
   10b08:	ldr	w27, [x22, #8]
   10b0c:	sub	w0, w27, #0x1
   10b10:	cmp	w0, #0xfe
   10b14:	b.hi	10b28 <argp_failure@@Base+0x598>  // b.pmore
   10b18:	bl	a9d0 <__ctype_b_loc@plt>
   10b1c:	ldr	x0, [x0]
   10b20:	ldrh	w0, [x0, w27, sxtw #1]
   10b24:	tbnz	w0, #14, 10b30 <argp_failure@@Base+0x5a0>
   10b28:	ldr	x0, [x22]
   10b2c:	cbz	x0, 116d0 <argp_failure@@Base+0x1140>
   10b30:	ldp	x2, x0, [x24, #48]
   10b34:	ldr	x1, [x24, #32]
   10b38:	ldrsw	x22, [x29, #152]
   10b3c:	sub	x0, x0, x2
   10b40:	cmp	x0, x1
   10b44:	b.hi	114d4 <argp_failure@@Base+0xf44>  // b.pmore
   10b48:	str	x22, [x24, #8]
   10b4c:	ldrsw	x0, [x29, #144]
   10b50:	add	x23, x23, #0x38
   10b54:	str	x0, [x24, #24]
   10b58:	ldr	x0, [x29, #120]
   10b5c:	cmp	x23, x0
   10b60:	b.ne	108a8 <argp_failure@@Base+0x318>  // b.any
   10b64:	ldr	w0, [x29, #212]
   10b68:	cbz	w0, 10be0 <argp_failure@@Base+0x650>
   10b6c:	add	x21, x21, #0x1d0
   10b70:	ldr	w0, [x21, #4]
   10b74:	cbz	w0, 10be0 <argp_failure@@Base+0x650>
   10b78:	cbz	x20, 11960 <argp_failure@@Base+0x13d0>
   10b7c:	mov	w2, #0x5                   	// #5
   10b80:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   10b84:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   10b88:	add	x1, x1, #0x9f8
   10b8c:	add	x0, x0, #0x780
   10b90:	bl	ada0 <dcgettext@plt>
   10b94:	ldr	x2, [x20]
   10b98:	mov	x23, x0
   10b9c:	mov	x21, x0
   10ba0:	cbz	x2, 10bc4 <argp_failure@@Base+0x634>
   10ba4:	ldr	x1, [x2, #40]
   10ba8:	mov	x21, x23
   10bac:	cbz	x1, 10bc4 <argp_failure@@Base+0x634>
   10bb0:	mov	w1, #0x5                   	// #5
   10bb4:	mov	x3, x20
   10bb8:	movk	w1, #0x200, lsl #16
   10bbc:	bl	eae8 <argp_fmtstream_point@@Base+0x310>
   10bc0:	mov	x21, x0
   10bc4:	cbz	x21, 10be0 <argp_failure@@Base+0x650>
   10bc8:	ldrb	w0, [x21]
   10bcc:	cbnz	w0, 11980 <argp_failure@@Base+0x13f0>
   10bd0:	cmp	x21, x23
   10bd4:	b.eq	10be0 <argp_failure@@Base+0x650>  // b.none
   10bd8:	mov	x0, x21
   10bdc:	bl	aa50 <free@plt>
   10be0:	mov	w22, #0x1                   	// #1
   10be4:	tbnz	w19, #5, 11030 <argp_failure@@Base+0xaa0>
   10be8:	tbz	w19, #6, 10c2c <argp_failure@@Base+0x69c>
   10bec:	adrp	x19, 46000 <vasnprintf@@Base+0x1b1e0>
   10bf0:	ldr	x0, [x19, #3968]
   10bf4:	ldr	x0, [x0]
   10bf8:	cbz	x0, 10c2c <argp_failure@@Base+0x69c>
   10bfc:	cbnz	w22, 11140 <argp_failure@@Base+0xbb0>
   10c00:	mov	w2, #0x5                   	// #5
   10c04:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   10c08:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   10c0c:	add	x1, x1, #0x9e0
   10c10:	add	x0, x0, #0x780
   10c14:	bl	ada0 <dcgettext@plt>
   10c18:	ldr	x19, [x19, #3968]
   10c1c:	mov	x1, x0
   10c20:	mov	x0, x24
   10c24:	ldr	x2, [x19]
   10c28:	bl	a8f0 <argp_fmtstream_printf@plt>
   10c2c:	ldr	x0, [x29, #128]
   10c30:	bl	a620 <funlockfile@plt>
   10c34:	cbz	x26, 10c40 <argp_failure@@Base+0x6b0>
   10c38:	mov	x0, x26
   10c3c:	bl	e8a0 <argp_fmtstream_point@@Base+0xc8>
   10c40:	mov	x0, x24
   10c44:	bl	add0 <argp_fmtstream_free@plt>
   10c48:	mov	sp, x29
   10c4c:	ldp	x19, x20, [sp, #16]
   10c50:	ldp	x21, x22, [sp, #32]
   10c54:	ldp	x23, x24, [sp, #48]
   10c58:	ldp	x25, x26, [sp, #64]
   10c5c:	ldp	x27, x28, [sp, #80]
   10c60:	ldp	x29, x30, [sp], #256
   10c64:	ret
   10c68:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   10c6c:	add	x0, x0, #0x880
   10c70:	bl	aed0 <getenv@plt>
   10c74:	mov	x24, x0
   10c78:	ldp	x0, x1, [x22, #16]
   10c7c:	stp	x0, x1, [x29, #232]
   10c80:	ldp	x2, x3, [x22]
   10c84:	stp	x2, x3, [x29, #216]
   10c88:	ldr	x0, [x22, #32]
   10c8c:	str	x0, [x29, #248]
   10c90:	cbz	x24, 10814 <argp_failure@@Base+0x284>
   10c94:	ldrb	w28, [x24]
   10c98:	cbz	w28, 119f4 <argp_failure@@Base+0x1464>
   10c9c:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   10ca0:	cmp	x20, #0x0
   10ca4:	add	x22, x1, #0xa70
   10ca8:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   10cac:	stp	x22, x0, [x29, #168]
   10cb0:	add	x0, x0, #0x780
   10cb4:	csel	x0, x0, xzr, ne  // ne = any
   10cb8:	add	x23, x22, #0xb0
   10cbc:	str	x0, [x29, #136]
   10cc0:	str	x1, [x29, #144]
   10cc4:	bl	a9d0 <__ctype_b_loc@plt>
   10cc8:	str	x0, [x29, #184]
   10ccc:	nop
   10cd0:	ldr	x0, [x29, #184]
   10cd4:	ldr	x0, [x0]
   10cd8:	b	10ce0 <argp_failure@@Base+0x750>
   10cdc:	ldrb	w28, [x24, #1]!
   10ce0:	ubfiz	x1, x28, #1, #8
   10ce4:	ldrh	w1, [x0, x1]
   10ce8:	tbnz	w1, #13, 10cdc <argp_failure@@Base+0x74c>
   10cec:	tbnz	w1, #10, 11500 <argp_failure@@Base+0xf70>
   10cf0:	cbnz	w28, 11848 <argp_failure@@Base+0x12b8>
   10cf4:	ldr	x0, [x29, #144]
   10cf8:	add	x5, x29, #0xd8
   10cfc:	ldr	w4, [x29, #248]
   10d00:	add	x2, x0, #0xa70
   10d04:	add	x0, x2, #0x20
   10d08:	add	x2, x2, #0xb0
   10d0c:	nop
   10d10:	add	x22, x0, #0x10
   10d14:	mov	x0, x22
   10d18:	cmp	x22, x2
   10d1c:	b.eq	11758 <argp_failure@@Base+0x11c8>  // b.none
   10d20:	ldrb	w1, [x22, #14]
   10d24:	cbnz	w1, 10d10 <argp_failure@@Base+0x780>
   10d28:	ldrb	w1, [x22, #15]
   10d2c:	and	x3, x1, #0xff
   10d30:	cmp	w1, #0x20
   10d34:	b.eq	10d10 <argp_failure@@Base+0x780>  // b.none
   10d38:	ldr	w1, [x5, x3]
   10d3c:	cmp	w1, w4
   10d40:	b.lt	10d10 <argp_failure@@Base+0x780>  // b.tstop
   10d44:	mov	w2, #0x5                   	// #5
   10d48:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   10d4c:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   10d50:	add	x1, x1, #0x908
   10d54:	add	x0, x0, #0x780
   10d58:	bl	ada0 <dcgettext@plt>
   10d5c:	mov	x5, x22
   10d60:	mov	x3, x0
   10d64:	adrp	x4, 2c000 <vasnprintf@@Base+0x11e0>
   10d68:	mov	x0, x20
   10d6c:	add	x4, x4, #0x940
   10d70:	mov	w2, #0x0                   	// #0
   10d74:	mov	w1, #0x0                   	// #0
   10d78:	bl	a650 <argp_failure@plt>
   10d7c:	b	10814 <argp_failure@@Base+0x284>
   10d80:	mov	w2, #0x5                   	// #5
   10d84:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   10d88:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   10d8c:	add	x1, x1, #0x980
   10d90:	add	x0, x0, #0x780
   10d94:	bl	ada0 <dcgettext@plt>
   10d98:	mov	x3, x27
   10d9c:	mov	x1, x0
   10da0:	mov	x2, x27
   10da4:	mov	x0, x24
   10da8:	mov	w22, #0x1                   	// #1
   10dac:	bl	a8f0 <argp_fmtstream_printf@plt>
   10db0:	cbz	w23, 10be4 <argp_failure@@Base+0x654>
   10db4:	ldr	w0, [x26, #8]
   10db8:	cbz	w0, 10be4 <argp_failure@@Base+0x654>
   10dbc:	ldp	x0, x1, [x24, #56]
   10dc0:	cmp	x0, x1
   10dc4:	b.cs	118bc <argp_failure@@Base+0x132c>  // b.hs, b.nlast
   10dc8:	add	x1, x0, #0x1
   10dcc:	str	x1, [x24, #56]
   10dd0:	mov	w1, #0xa                   	// #10
   10dd4:	strb	w1, [x0]
   10dd8:	ldr	w0, [x26, #8]
   10ddc:	ldr	x23, [x26]
   10de0:	stp	xzr, xzr, [x29, #200]
   10de4:	cbnz	w0, 10874 <argp_failure@@Base+0x2e4>
   10de8:	mov	w22, #0x1                   	// #1
   10dec:	b	10be4 <argp_failure@@Base+0x654>
   10df0:	mov	x5, x24
   10df4:	mov	x1, x20
   10df8:	mov	x0, x25
   10dfc:	mov	w4, #0x1                   	// #1
   10e00:	mov	w3, #0x0                   	// #0
   10e04:	mov	w2, #0x0                   	// #0
   10e08:	and	w23, w19, #0x8
   10e0c:	bl	10080 <argp_fmtstream_point@@Base+0x18a8>
   10e10:	orr	w22, w22, w0
   10e14:	tbz	w19, #2, 1085c <argp_failure@@Base+0x2cc>
   10e18:	b	10d80 <argp_failure@@Base+0x7f0>
   10e1c:	add	x1, x29, #0xd8
   10e20:	str	x1, [x29, #160]
   10e24:	ldr	x0, [x25, #16]
   10e28:	mov	w3, #0x1                   	// #1
   10e2c:	ldr	x1, [x25, #32]
   10e30:	adrp	x2, 2c000 <vasnprintf@@Base+0x11e0>
   10e34:	str	x2, [x29, #176]
   10e38:	add	x28, x21, #0x1d0
   10e3c:	str	w3, [x29, #184]
   10e40:	bl	ea88 <argp_fmtstream_point@@Base+0x2b0>
   10e44:	mov	x2, x0
   10e48:	add	x0, x0, #0xf
   10e4c:	mov	w1, #0x0                   	// #0
   10e50:	and	x0, x0, #0xfffffffffffffff0
   10e54:	sub	sp, sp, x0
   10e58:	mov	x0, sp
   10e5c:	str	x0, [x29, #168]
   10e60:	bl	a6f0 <memset@plt>
   10e64:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   10e68:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   10e6c:	add	x1, x1, #0x968
   10e70:	add	x0, x0, #0x958
   10e74:	ldr	w3, [x29, #184]
   10e78:	stp	x0, x1, [x29, #144]
   10e7c:	b	10f50 <argp_failure@@Base+0x9c0>
   10e80:	ldr	x1, [x29, #144]
   10e84:	ldr	x0, [x29, #176]
   10e88:	add	x0, x0, #0x780
   10e8c:	bl	ada0 <dcgettext@plt>
   10e90:	mov	x2, x0
   10e94:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   10e98:	mov	x3, x27
   10e9c:	add	x1, x0, #0x960
   10ea0:	mov	x0, x24
   10ea4:	bl	a8f0 <argp_fmtstream_printf@plt>
   10ea8:	ldp	x2, x0, [x24, #48]
   10eac:	ldr	x1, [x24, #32]
   10eb0:	ldrsw	x23, [x28, #28]
   10eb4:	sub	x0, x0, x2
   10eb8:	cmp	x0, x1
   10ebc:	b.hi	110b4 <argp_failure@@Base+0xb24>  // b.pmore
   10ec0:	ldr	x0, [x24, #8]
   10ec4:	str	x23, [x24, #8]
   10ec8:	str	x0, [x29, #184]
   10ecc:	tbz	w19, #1, 110a0 <argp_failure@@Base+0xb10>
   10ed0:	ldr	w0, [x26, #8]
   10ed4:	cbnz	w0, 110c0 <argp_failure@@Base+0xb30>
   10ed8:	ldr	x2, [x29, #160]
   10edc:	mov	x1, x20
   10ee0:	mov	x4, x24
   10ee4:	mov	x0, x25
   10ee8:	mov	w3, #0x1                   	// #1
   10eec:	bl	fa40 <argp_fmtstream_point@@Base+0x1268>
   10ef0:	mov	w23, w0
   10ef4:	ldp	x1, x0, [x24, #48]
   10ef8:	ldr	x2, [x24, #32]
   10efc:	sub	x1, x0, x1
   10f00:	cmp	x1, x2
   10f04:	b.hi	11068 <argp_failure@@Base+0xad8>  // b.pmore
   10f08:	sxtw	x1, w22
   10f0c:	ldrsw	x22, [x29, #184]
   10f10:	str	x1, [x24, #24]
   10f14:	ldr	x1, [x24, #64]
   10f18:	str	x22, [x24, #8]
   10f1c:	cmp	x1, x0
   10f20:	b.hi	10f38 <argp_failure@@Base+0x9a8>  // b.pmore
   10f24:	mov	x0, x24
   10f28:	mov	x1, #0x1                   	// #1
   10f2c:	bl	ad80 <_argp_fmtstream_ensure@plt>
   10f30:	cbz	w0, 10f48 <argp_failure@@Base+0x9b8>
   10f34:	ldr	x0, [x24, #56]
   10f38:	add	x1, x0, #0x1
   10f3c:	str	x1, [x24, #56]
   10f40:	mov	w1, #0xa                   	// #10
   10f44:	strb	w1, [x0]
   10f48:	mov	w3, #0x0                   	// #0
   10f4c:	cbz	w23, 11134 <argp_failure@@Base+0xba4>
   10f50:	ldp	x2, x0, [x24, #48]
   10f54:	ldr	x1, [x24, #32]
   10f58:	ldr	w22, [x28, #28]
   10f5c:	sub	x0, x0, x2
   10f60:	cmp	x0, x1
   10f64:	b.hi	11054 <argp_failure@@Base+0xac4>  // b.pmore
   10f68:	sxtw	x0, w22
   10f6c:	mov	w2, #0x5                   	// #5
   10f70:	ldr	x22, [x24, #24]
   10f74:	str	x0, [x24, #24]
   10f78:	ldr	x0, [x29, #168]
   10f7c:	str	x0, [x29, #216]
   10f80:	cbnz	w3, 10e80 <argp_failure@@Base+0x8f0>
   10f84:	ldr	x1, [x29, #152]
   10f88:	b	10e84 <argp_failure@@Base+0x8f4>
   10f8c:	mov	x1, #0x0                   	// #0
   10f90:	mov	x0, x25
   10f94:	bl	eb38 <argp_fmtstream_point@@Base+0x360>
   10f98:	ldr	w22, [x0, #8]
   10f9c:	ldr	x23, [x0]
   10fa0:	mov	x26, x0
   10fa4:	adrp	x2, 2c000 <vasnprintf@@Base+0x11e0>
   10fa8:	mov	w1, w22
   10fac:	add	x2, x2, #0x948
   10fb0:	mov	x0, x23
   10fb4:	bl	e9c0 <argp_fmtstream_point@@Base+0x1e8>
   10fb8:	cbz	x0, 10fc8 <argp_failure@@Base+0xa38>
   10fbc:	mov	w1, #0xffffffff            	// #-1
   10fc0:	str	w1, [x0, #24]
   10fc4:	ldr	w22, [x26, #8]
   10fc8:	adrp	x2, 2c000 <vasnprintf@@Base+0x11e0>
   10fcc:	mov	w1, w22
   10fd0:	add	x2, x2, #0x950
   10fd4:	mov	x0, x23
   10fd8:	bl	e9c0 <argp_fmtstream_point@@Base+0x1e8>
   10fdc:	cbz	x0, 10fec <argp_failure@@Base+0xa5c>
   10fe0:	mov	w1, #0xffffffff            	// #-1
   10fe4:	str	w1, [x0, #24]
   10fe8:	ldr	w22, [x26, #8]
   10fec:	cbz	w22, 10844 <argp_failure@@Base+0x2b4>
   10ff0:	mov	x2, x23
   10ff4:	mov	w1, #0x0                   	// #0
   10ff8:	str	w1, [x2, #48]
   10ffc:	add	w1, w1, #0x1
   11000:	cmp	w1, w22
   11004:	add	x2, x2, #0x38
   11008:	b.ne	10ff8 <argp_failure@@Base+0xa68>  // b.any
   1100c:	mov	x0, x23
   11010:	adrp	x3, f000 <argp_fmtstream_point@@Base+0x828>
   11014:	mov	x2, #0x38                  	// #56
   11018:	add	x3, x3, #0x428
   1101c:	bl	a500 <qsort@plt>
   11020:	mov	w22, #0x0                   	// #0
   11024:	tst	x19, #0x3
   11028:	b.eq	10850 <argp_failure@@Base+0x2c0>  // b.none
   1102c:	b	10e1c <argp_failure@@Base+0x88c>
   11030:	mov	w3, w22
   11034:	mov	x1, x20
   11038:	mov	x0, x25
   1103c:	mov	x5, x24
   11040:	mov	w4, #0x0                   	// #0
   11044:	mov	w2, #0x1                   	// #1
   11048:	bl	10080 <argp_fmtstream_point@@Base+0x18a8>
   1104c:	orr	w22, w22, w0
   11050:	b	10be8 <argp_failure@@Base+0x658>
   11054:	mov	x0, x24
   11058:	str	w3, [x29, #184]
   1105c:	bl	a520 <_argp_fmtstream_update@plt>
   11060:	ldr	w3, [x29, #184]
   11064:	b	10f68 <argp_failure@@Base+0x9d8>
   11068:	mov	x0, x24
   1106c:	bl	a520 <_argp_fmtstream_update@plt>
   11070:	ldp	x1, x0, [x24, #48]
   11074:	sxtw	x22, w22
   11078:	ldr	x2, [x24, #32]
   1107c:	str	x22, [x24, #24]
   11080:	ldrsw	x22, [x29, #184]
   11084:	sub	x1, x0, x1
   11088:	cmp	x1, x2
   1108c:	b.ls	10f14 <argp_failure@@Base+0x984>  // b.plast
   11090:	mov	x0, x24
   11094:	bl	a520 <_argp_fmtstream_update@plt>
   11098:	ldr	x0, [x24, #56]
   1109c:	b	10f14 <argp_failure@@Base+0x984>
   110a0:	orr	w19, w19, #0x2
   110a4:	mov	x1, x24
   110a8:	mov	x0, x26
   110ac:	bl	f1f8 <argp_fmtstream_point@@Base+0xa20>
   110b0:	b	10ed8 <argp_failure@@Base+0x948>
   110b4:	mov	x0, x24
   110b8:	bl	a520 <_argp_fmtstream_update@plt>
   110bc:	b	10ec0 <argp_failure@@Base+0x930>
   110c0:	ldr	x0, [x29, #176]
   110c4:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   110c8:	add	x1, x1, #0x970
   110cc:	mov	w2, #0x5                   	// #5
   110d0:	add	x0, x0, #0x780
   110d4:	bl	ada0 <dcgettext@plt>
   110d8:	mov	x23, x0
   110dc:	bl	a340 <strlen@plt>
   110e0:	mov	x2, x0
   110e4:	cbz	x0, 10ed8 <argp_failure@@Base+0x948>
   110e8:	ldp	x0, x3, [x24, #56]
   110ec:	add	x1, x0, x2
   110f0:	cmp	x3, x1
   110f4:	b.cs	11114 <argp_failure@@Base+0xb84>  // b.hs, b.nlast
   110f8:	mov	x1, x2
   110fc:	mov	x0, x24
   11100:	str	x2, [x29, #136]
   11104:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11108:	cbz	w0, 10ed8 <argp_failure@@Base+0x948>
   1110c:	ldr	x0, [x24, #56]
   11110:	ldr	x2, [x29, #136]
   11114:	mov	x1, x23
   11118:	str	x2, [x29, #136]
   1111c:	bl	a2c0 <memcpy@plt>
   11120:	ldr	x0, [x24, #56]
   11124:	ldr	x2, [x29, #136]
   11128:	add	x2, x0, x2
   1112c:	str	x2, [x24, #56]
   11130:	b	10ed8 <argp_failure@@Base+0x948>
   11134:	mov	w22, #0x1                   	// #1
   11138:	tbz	w19, #4, 10854 <argp_failure@@Base+0x2c4>
   1113c:	b	10df0 <argp_failure@@Base+0x860>
   11140:	ldp	x0, x1, [x24, #56]
   11144:	cmp	x0, x1
   11148:	b.cs	118a4 <argp_failure@@Base+0x1314>  // b.hs, b.nlast
   1114c:	add	x1, x0, #0x1
   11150:	str	x1, [x24, #56]
   11154:	mov	w1, #0xa                   	// #10
   11158:	strb	w1, [x0]
   1115c:	b	10c00 <argp_failure@@Base+0x670>
   11160:	tbz	w2, #1, 1116c <argp_failure@@Base+0xbdc>
   11164:	add	x27, x27, #0x1
   11168:	b	109c8 <argp_failure@@Base+0x438>
   1116c:	add	x0, x21, #0x1d0
   11170:	ldr	x1, [x29, #160]
   11174:	ldr	w0, [x0, #8]
   11178:	bl	fef0 <argp_fmtstream_point@@Base+0x1718>
   1117c:	ldp	x0, x1, [x24, #56]
   11180:	cmp	x0, x1
   11184:	b.cc	1119c <argp_failure@@Base+0xc0c>  // b.lo, b.ul, b.last
   11188:	mov	x0, x24
   1118c:	mov	x1, #0x1                   	// #1
   11190:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11194:	cbz	w0, 111ac <argp_failure@@Base+0xc1c>
   11198:	ldr	x0, [x24, #56]
   1119c:	add	x1, x0, #0x1
   111a0:	str	x1, [x24, #56]
   111a4:	mov	w1, #0x2d                  	// #45
   111a8:	strb	w1, [x0]
   111ac:	ldp	x0, x1, [x24, #56]
   111b0:	ldrb	w2, [x27]
   111b4:	cmp	x0, x1
   111b8:	b.cc	111d8 <argp_failure@@Base+0xc48>  // b.lo, b.ul, b.last
   111bc:	mov	x0, x24
   111c0:	mov	x1, #0x1                   	// #1
   111c4:	str	w2, [x29, #184]
   111c8:	bl	ad80 <_argp_fmtstream_ensure@plt>
   111cc:	cbz	w0, 111e4 <argp_failure@@Base+0xc54>
   111d0:	ldr	w2, [x29, #184]
   111d4:	ldr	x0, [x24, #56]
   111d8:	add	x1, x0, #0x1
   111dc:	str	x1, [x24, #56]
   111e0:	strb	w2, [x0]
   111e4:	ldr	w1, [x29, #136]
   111e8:	ldr	x0, [x22, #16]
   111ec:	cbz	w1, 1166c <argp_failure@@Base+0x10dc>
   111f0:	ldr	w1, [x21, #464]
   111f4:	cbnz	w1, 1166c <argp_failure@@Base+0x10dc>
   111f8:	cbz	x0, 11164 <argp_failure@@Base+0xbd4>
   111fc:	mov	w0, #0x1                   	// #1
   11200:	add	x27, x27, #0x1
   11204:	str	w0, [x29, #212]
   11208:	b	109c8 <argp_failure@@Base+0x438>
   1120c:	add	x1, x21, #0x1d0
   11210:	cmp	x0, x2
   11214:	ldr	w27, [x1, #12]
   11218:	b.hi	116a4 <argp_failure@@Base+0x1114>  // b.pmore
   1121c:	ldr	w0, [x23, #8]
   11220:	sxtw	x27, w27
   11224:	str	x27, [x24, #24]
   11228:	cbz	w0, 10ae0 <argp_failure@@Base+0x550>
   1122c:	sub	w0, w0, #0x1
   11230:	adrp	x27, 2c000 <vasnprintf@@Base+0x11e0>
   11234:	add	x0, x0, #0x1
   11238:	add	x28, x27, #0x9c0
   1123c:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   11240:	mov	x27, x22
   11244:	add	x0, x0, x0, lsl #1
   11248:	add	x1, x1, #0x9c8
   1124c:	add	x0, x22, x0, lsl #4
   11250:	stp	x1, x0, [x29, #176]
   11254:	b	11268 <argp_failure@@Base+0xcd8>
   11258:	ldr	x0, [x29, #184]
   1125c:	add	x27, x27, #0x30
   11260:	cmp	x27, x0
   11264:	b.eq	10ae0 <argp_failure@@Base+0x550>  // b.none
   11268:	ldr	x0, [x27]
   1126c:	cbz	x0, 11258 <argp_failure@@Base+0xcc8>
   11270:	ldr	w0, [x27, #24]
   11274:	tbnz	w0, #1, 11258 <argp_failure@@Base+0xcc8>
   11278:	add	x0, x21, #0x1d0
   1127c:	ldr	x1, [x29, #160]
   11280:	ldr	w0, [x0, #12]
   11284:	bl	fef0 <argp_fmtstream_point@@Base+0x1718>
   11288:	ldr	x2, [x27]
   1128c:	mov	x1, x28
   11290:	mov	x0, x24
   11294:	bl	a8f0 <argp_fmtstream_printf@plt>
   11298:	mov	x4, #0x0                   	// #0
   1129c:	cbz	x20, 112a8 <argp_failure@@Base+0xd18>
   112a0:	ldr	x0, [x23, #40]
   112a4:	ldr	x4, [x0, #48]
   112a8:	mov	x5, x24
   112ac:	ldr	x0, [x22, #16]
   112b0:	add	x1, x22, #0x18
   112b4:	ldr	x3, [x29, #176]
   112b8:	adrp	x2, 2c000 <vasnprintf@@Base+0x11e0>
   112bc:	add	x2, x2, #0x9d0
   112c0:	bl	e940 <argp_fmtstream_point@@Base+0x168>
   112c4:	b	11258 <argp_failure@@Base+0xcc8>
   112c8:	add	x0, x21, #0x1d0
   112cc:	str	wzr, [x29, #136]
   112d0:	cmp	x2, x3
   112d4:	ldr	w28, [x0, #8]
   112d8:	b.ls	1094c <argp_failure@@Base+0x3bc>  // b.plast
   112dc:	mov	x0, x24
   112e0:	bl	a520 <_argp_fmtstream_update@plt>
   112e4:	b	1094c <argp_failure@@Base+0x3bc>
   112e8:	ldr	x4, [x22, #32]
   112ec:	cbz	x4, 116bc <argp_failure@@Base+0x112c>
   112f0:	mov	x0, #0x0                   	// #0
   112f4:	cbz	x20, 11300 <argp_failure@@Base+0xd70>
   112f8:	ldr	x0, [x23, #40]
   112fc:	ldr	x0, [x0, #48]
   11300:	mov	w2, #0x5                   	// #5
   11304:	mov	x1, x4
   11308:	bl	ada0 <dcgettext@plt>
   1130c:	ldr	x2, [x23, #40]
   11310:	mov	x27, x0
   11314:	cbz	x2, 11780 <argp_failure@@Base+0x11f0>
   11318:	mov	x4, x0
   1131c:	ldr	x0, [x2, #40]
   11320:	cbz	x0, 11340 <argp_failure@@Base+0xdb0>
   11324:	ldr	w1, [x22, #8]
   11328:	mov	x0, x4
   1132c:	mov	x3, x20
   11330:	str	x4, [x29, #184]
   11334:	bl	eae8 <argp_fmtstream_point@@Base+0x310>
   11338:	mov	x27, x0
   1133c:	ldr	x4, [x29, #184]
   11340:	cbz	x27, 11470 <argp_failure@@Base+0xee0>
   11344:	ldrb	w0, [x27]
   11348:	cbz	w0, 11460 <argp_failure@@Base+0xed0>
   1134c:	ldp	x2, x0, [x24, #48]
   11350:	ldr	x1, [x24, #32]
   11354:	sub	x0, x0, x2
   11358:	cmp	x0, x1
   1135c:	b.hi	117a8 <argp_failure@@Base+0x1218>  // b.pmore
   11360:	add	x0, x21, #0x1d0
   11364:	ldr	x2, [x24, #40]
   11368:	ldr	w1, [x0, #20]
   1136c:	cmp	x2, #0x0
   11370:	csel	x2, x2, xzr, ge  // ge = tcont
   11374:	sxtw	x6, w1
   11378:	mov	w3, w1
   1137c:	str	x6, [x24, #8]
   11380:	sxtw	x3, w3
   11384:	str	x3, [x24, #24]
   11388:	add	w0, w1, #0x3
   1138c:	cmp	w0, w2
   11390:	b.cc	11788 <argp_failure@@Base+0x11f8>  // b.lo, b.ul, b.last
   11394:	cmp	w1, w2
   11398:	b.hi	113f0 <argp_failure@@Base+0xe60>  // b.pmore
   1139c:	ldp	x0, x2, [x24, #56]
   113a0:	add	x1, x0, #0x3
   113a4:	cmp	x2, x1
   113a8:	b.cs	113c8 <argp_failure@@Base+0xe38>  // b.hs, b.nlast
   113ac:	mov	x0, x24
   113b0:	mov	x1, #0x3                   	// #3
   113b4:	str	x4, [x29, #184]
   113b8:	bl	ad80 <_argp_fmtstream_ensure@plt>
   113bc:	ldr	x4, [x29, #184]
   113c0:	cbz	w0, 11400 <argp_failure@@Base+0xe70>
   113c4:	ldr	x0, [x24, #56]
   113c8:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   113cc:	add	x1, x1, #0x9d8
   113d0:	ldrh	w2, [x1]
   113d4:	ldrb	w1, [x1, #2]
   113d8:	strh	w2, [x0]
   113dc:	strb	w1, [x0, #2]
   113e0:	ldr	x0, [x24, #56]
   113e4:	add	x0, x0, #0x3
   113e8:	str	x0, [x24, #56]
   113ec:	b	11400 <argp_failure@@Base+0xe70>
   113f0:	mov	x0, x24
   113f4:	str	x4, [x29, #184]
   113f8:	bl	f788 <argp_fmtstream_point@@Base+0xfb0>
   113fc:	ldr	x4, [x29, #184]
   11400:	mov	x0, x27
   11404:	str	x4, [x29, #184]
   11408:	bl	a340 <strlen@plt>
   1140c:	mov	x22, x0
   11410:	ldr	x4, [x29, #184]
   11414:	cbz	x0, 11460 <argp_failure@@Base+0xed0>
   11418:	ldp	x0, x2, [x24, #56]
   1141c:	add	x1, x0, x22
   11420:	cmp	x2, x1
   11424:	b.cs	11440 <argp_failure@@Base+0xeb0>  // b.hs, b.nlast
   11428:	mov	x1, x22
   1142c:	mov	x0, x24
   11430:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11434:	ldr	x4, [x29, #184]
   11438:	cbz	w0, 11460 <argp_failure@@Base+0xed0>
   1143c:	ldr	x0, [x24, #56]
   11440:	mov	x2, x22
   11444:	mov	x1, x27
   11448:	str	x4, [x29, #184]
   1144c:	bl	a2c0 <memcpy@plt>
   11450:	ldr	x0, [x24, #56]
   11454:	ldr	x4, [x29, #184]
   11458:	add	x0, x0, x22
   1145c:	str	x0, [x24, #56]
   11460:	cmp	x27, x4
   11464:	b.eq	11470 <argp_failure@@Base+0xee0>  // b.none
   11468:	mov	x0, x27
   1146c:	bl	aa50 <free@plt>
   11470:	ldp	x1, x0, [x24, #48]
   11474:	ldr	x2, [x24, #32]
   11478:	sub	x1, x0, x1
   1147c:	cmp	x1, x2
   11480:	b.hi	11694 <argp_failure@@Base+0x1104>  // b.pmore
   11484:	ldr	x1, [x24, #64]
   11488:	str	xzr, [x24, #8]
   1148c:	cmp	x1, x0
   11490:	b.hi	114a8 <argp_failure@@Base+0xf18>  // b.pmore
   11494:	mov	x0, x24
   11498:	mov	x1, #0x1                   	// #1
   1149c:	bl	ad80 <_argp_fmtstream_ensure@plt>
   114a0:	cbz	w0, 114b8 <argp_failure@@Base+0xf28>
   114a4:	ldr	x0, [x24, #56]
   114a8:	add	x1, x0, #0x1
   114ac:	str	x1, [x24, #56]
   114b0:	mov	w1, #0xa                   	// #10
   114b4:	strb	w1, [x0]
   114b8:	str	x23, [x29, #200]
   114bc:	ldp	x2, x0, [x24, #48]
   114c0:	ldr	x1, [x24, #32]
   114c4:	ldrsw	x22, [x29, #152]
   114c8:	sub	x0, x0, x2
   114cc:	cmp	x0, x1
   114d0:	b.ls	10b48 <argp_failure@@Base+0x5b8>  // b.plast
   114d4:	mov	x0, x24
   114d8:	bl	a520 <_argp_fmtstream_update@plt>
   114dc:	ldp	x2, x0, [x24, #48]
   114e0:	str	x22, [x24, #8]
   114e4:	ldr	x1, [x24, #32]
   114e8:	sub	x0, x0, x2
   114ec:	cmp	x0, x1
   114f0:	b.ls	10b4c <argp_failure@@Base+0x5bc>  // b.plast
   114f4:	mov	x0, x24
   114f8:	bl	a520 <_argp_fmtstream_update@plt>
   114fc:	b	10b4c <argp_failure@@Base+0x5bc>
   11500:	cmp	w28, #0x5f
   11504:	and	w1, w1, #0x8
   11508:	mov	w4, #0x2d                  	// #45
   1150c:	ccmp	w28, w4, #0x4, ne  // ne = any
   11510:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   11514:	b.eq	11950 <argp_failure@@Base+0x13c0>  // b.none
   11518:	mov	x26, x24
   1151c:	nop
   11520:	ldrb	w1, [x26, #1]!
   11524:	cmp	w1, #0x5f
   11528:	ubfiz	x2, x1, #1, #8
   1152c:	ccmp	w1, w4, #0x4, ne  // ne = any
   11530:	ldrh	w2, [x0, x2]
   11534:	and	w3, w2, #0x8
   11538:	ccmp	w3, #0x0, #0x0, ne  // ne = any
   1153c:	b.ne	11520 <argp_failure@@Base+0xf90>  // b.any
   11540:	sub	x22, x26, x24
   11544:	tbz	w2, #13, 11558 <argp_failure@@Base+0xfc8>
   11548:	ldrb	w1, [x26, #1]!
   1154c:	ubfiz	x2, x1, #1, #8
   11550:	ldrh	w2, [x0, x2]
   11554:	tbnz	w2, #13, 11548 <argp_failure@@Base+0xfb8>
   11558:	cmp	w1, #0x2c
   1155c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   11560:	b.eq	11630 <argp_failure@@Base+0x10a0>  // b.none
   11564:	cmp	w1, #0x3d
   11568:	b.eq	118d4 <argp_failure@@Base+0x1344>  // b.none
   1156c:	ldrb	w1, [x26]
   11570:	ldrh	w1, [x0, x1, lsl #1]
   11574:	str	wzr, [x29, #152]
   11578:	str	wzr, [x29, #160]
   1157c:	tbnz	w1, #11, 118fc <argp_failure@@Base+0x136c>
   11580:	ldr	x0, [x29, #168]
   11584:	add	x28, x0, #0x20
   11588:	b	11598 <argp_failure@@Base+0x1008>
   1158c:	add	x28, x28, #0x10
   11590:	cmp	x28, x23
   11594:	b.eq	11700 <argp_failure@@Base+0x1170>  // b.none
   11598:	mov	x0, x28
   1159c:	bl	a340 <strlen@plt>
   115a0:	cmp	x0, x22
   115a4:	b.ne	1158c <argp_failure@@Base+0xffc>  // b.any
   115a8:	mov	x2, x22
   115ac:	mov	x1, x28
   115b0:	mov	x0, x24
   115b4:	bl	a6c0 <strncmp@plt>
   115b8:	cbnz	w0, 1158c <argp_failure@@Base+0xffc>
   115bc:	ldr	w0, [x29, #160]
   115c0:	cbz	w0, 116e8 <argp_failure@@Base+0x1158>
   115c4:	ldrb	w0, [x28, #14]
   115c8:	cbnz	w0, 116e8 <argp_failure@@Base+0x1158>
   115cc:	ldr	x0, [x29, #136]
   115d0:	mov	w2, #0x5                   	// #5
   115d4:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   115d8:	add	x1, x1, #0x890
   115dc:	bl	ada0 <dcgettext@plt>
   115e0:	mov	x3, x0
   115e4:	mov	x5, x24
   115e8:	mov	w4, w22
   115ec:	mov	x0, x20
   115f0:	mov	w2, #0x0                   	// #0
   115f4:	mov	w1, #0x0                   	// #0
   115f8:	bl	a650 <argp_failure@plt>
   115fc:	b	116f8 <argp_failure@@Base+0x1168>
   11600:	mov	x0, x24
   11604:	bl	a520 <_argp_fmtstream_update@plt>
   11608:	ldp	x0, x2, [x24, #48]
   1160c:	ldr	x3, [x24, #32]
   11610:	sub	x2, x2, x0
   11614:	b	108c4 <argp_failure@@Base+0x334>
   11618:	mov	x0, x24
   1161c:	bl	a520 <_argp_fmtstream_update@plt>
   11620:	b	10af4 <argp_failure@@Base+0x564>
   11624:	mov	w0, #0x1                   	// #1
   11628:	str	w0, [x29, #136]
   1162c:	b	1093c <argp_failure@@Base+0x3ac>
   11630:	mov	w0, #0x1                   	// #1
   11634:	str	w0, [x29, #152]
   11638:	str	w0, [x29, #160]
   1163c:	cmp	w28, #0x6e
   11640:	b.ne	11580 <argp_failure@@Base+0xff0>  // b.any
   11644:	ldrb	w0, [x24, #1]
   11648:	cmp	w0, #0x6f
   1164c:	b.ne	11580 <argp_failure@@Base+0xff0>  // b.any
   11650:	ldrb	w0, [x24, #2]
   11654:	cmp	w0, #0x2d
   11658:	b.ne	11580 <argp_failure@@Base+0xff0>  // b.any
   1165c:	add	x24, x24, #0x3
   11660:	sub	x22, x22, #0x3
   11664:	str	wzr, [x29, #152]
   11668:	b	11580 <argp_failure@@Base+0xff0>
   1166c:	mov	x4, #0x0                   	// #0
   11670:	cbz	x20, 1167c <argp_failure@@Base+0x10ec>
   11674:	ldr	x1, [x23, #40]
   11678:	ldr	x4, [x1, #48]
   1167c:	mov	x5, x24
   11680:	ldp	x3, x2, [x29, #96]
   11684:	add	x1, x22, #0x18
   11688:	add	x27, x27, #0x1
   1168c:	bl	e940 <argp_fmtstream_point@@Base+0x168>
   11690:	b	109c8 <argp_failure@@Base+0x438>
   11694:	mov	x0, x24
   11698:	bl	a520 <_argp_fmtstream_update@plt>
   1169c:	ldr	x0, [x24, #56]
   116a0:	b	11484 <argp_failure@@Base+0xef4>
   116a4:	mov	x0, x24
   116a8:	bl	a520 <_argp_fmtstream_update@plt>
   116ac:	b	1121c <argp_failure@@Base+0xc8c>
   116b0:	mov	x0, x24
   116b4:	bl	a520 <_argp_fmtstream_update@plt>
   116b8:	b	109fc <argp_failure@@Base+0x46c>
   116bc:	ldr	x2, [x23, #40]
   116c0:	cbz	x2, 11470 <argp_failure@@Base+0xee0>
   116c4:	ldr	x0, [x2, #40]
   116c8:	cbnz	x0, 11324 <argp_failure@@Base+0xd94>
   116cc:	b	11470 <argp_failure@@Base+0xee0>
   116d0:	ldr	x0, [x22, #32]
   116d4:	ldr	x1, [x23, #40]
   116d8:	ldr	x2, [x29, #160]
   116dc:	bl	fc98 <argp_fmtstream_point@@Base+0x14c0>
   116e0:	str	x23, [x29, #200]
   116e4:	b	114bc <argp_failure@@Base+0xf2c>
   116e8:	ldrb	w0, [x28, #15]
   116ec:	add	x1, x29, #0xd8
   116f0:	ldr	w2, [x29, #152]
   116f4:	str	w2, [x1, x0]
   116f8:	cmp	x28, x23
   116fc:	b.ne	11730 <argp_failure@@Base+0x11a0>  // b.any
   11700:	ldr	x0, [x29, #136]
   11704:	mov	w2, #0x5                   	// #5
   11708:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   1170c:	add	x1, x1, #0x8c0
   11710:	bl	ada0 <dcgettext@plt>
   11714:	mov	x3, x0
   11718:	mov	x5, x24
   1171c:	mov	w4, w22
   11720:	mov	x0, x20
   11724:	mov	w2, #0x0                   	// #0
   11728:	mov	w1, #0x0                   	// #0
   1172c:	bl	a650 <argp_failure@plt>
   11730:	ldrb	w28, [x26]
   11734:	mov	x24, x26
   11738:	cmp	w28, #0x2c
   1173c:	b.eq	11748 <argp_failure@@Base+0x11b8>  // b.none
   11740:	cbnz	w28, 10cd0 <argp_failure@@Base+0x740>
   11744:	b	10cf4 <argp_failure@@Base+0x764>
   11748:	ldrb	w28, [x26, #1]
   1174c:	add	x24, x26, #0x1
   11750:	cbnz	w28, 10cd0 <argp_failure@@Base+0x740>
   11754:	b	10cf4 <argp_failure@@Base+0x764>
   11758:	add	x0, x21, #0x1d0
   1175c:	mov	w1, #0x1                   	// #1
   11760:	ldr	x2, [x29, #248]
   11764:	str	x2, [x0, #32]
   11768:	ldp	x2, x3, [x29, #216]
   1176c:	stp	x2, x3, [x0]
   11770:	ldp	x2, x3, [x29, #232]
   11774:	stp	x2, x3, [x0, #16]
   11778:	str	w1, [x0, #36]
   1177c:	b	10814 <argp_failure@@Base+0x284>
   11780:	mov	x4, x0
   11784:	b	11340 <argp_failure@@Base+0xdb0>
   11788:	ldp	x0, x1, [x24, #56]
   1178c:	cmp	x0, x1
   11790:	b.cs	11884 <argp_failure@@Base+0x12f4>  // b.hs, b.nlast
   11794:	add	x1, x0, #0x1
   11798:	str	x1, [x24, #56]
   1179c:	mov	w1, #0xa                   	// #10
   117a0:	strb	w1, [x0]
   117a4:	b	11400 <argp_failure@@Base+0xe70>
   117a8:	mov	x0, x24
   117ac:	str	x4, [x29, #184]
   117b0:	bl	a520 <_argp_fmtstream_update@plt>
   117b4:	add	x22, x21, #0x1d0
   117b8:	ldp	x3, x2, [x24, #32]
   117bc:	ldp	x6, x0, [x24, #48]
   117c0:	ldr	w1, [x22, #20]
   117c4:	ldr	x4, [x29, #184]
   117c8:	cmp	x2, #0x0
   117cc:	csel	x2, x2, xzr, ge  // ge = tcont
   117d0:	sub	x0, x0, x6
   117d4:	sxtw	x6, w1
   117d8:	cmp	x0, x3
   117dc:	b.ls	11378 <argp_failure@@Base+0xde8>  // b.plast
   117e0:	mov	x0, x24
   117e4:	stp	x4, x6, [x29, #168]
   117e8:	str	w2, [x29, #184]
   117ec:	bl	a520 <_argp_fmtstream_update@plt>
   117f0:	ldp	x3, x0, [x24, #48]
   117f4:	ldr	x1, [x24, #32]
   117f8:	ldp	x4, x6, [x29, #168]
   117fc:	str	x6, [x24, #8]
   11800:	sub	x0, x0, x3
   11804:	ldr	w2, [x29, #184]
   11808:	ldr	w3, [x22, #20]
   1180c:	cmp	x0, x1
   11810:	b.ls	11a44 <argp_failure@@Base+0x14b4>  // b.plast
   11814:	mov	x0, x24
   11818:	str	w3, [x29, #168]
   1181c:	str	x4, [x29, #176]
   11820:	str	w2, [x29, #184]
   11824:	bl	a520 <_argp_fmtstream_update@plt>
   11828:	ldr	w1, [x22, #20]
   1182c:	ldr	w3, [x29, #168]
   11830:	ldr	w2, [x29, #184]
   11834:	ldr	x4, [x29, #176]
   11838:	b	11380 <argp_failure@@Base+0xdf0>
   1183c:	ldr	x0, [x29, #128]
   11840:	bl	a620 <funlockfile@plt>
   11844:	b	10c48 <argp_failure@@Base+0x6b8>
   11848:	ldr	x0, [x29, #176]
   1184c:	cmp	x20, #0x0
   11850:	mov	w2, #0x5                   	// #5
   11854:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   11858:	add	x0, x0, #0x780
   1185c:	add	x1, x1, #0x8e8
   11860:	csel	x0, x0, xzr, ne  // ne = any
   11864:	bl	ada0 <dcgettext@plt>
   11868:	mov	x4, x24
   1186c:	mov	x3, x0
   11870:	mov	w2, #0x0                   	// #0
   11874:	mov	x0, x20
   11878:	mov	w1, #0x0                   	// #0
   1187c:	bl	a650 <argp_failure@plt>
   11880:	b	10cf4 <argp_failure@@Base+0x764>
   11884:	mov	x0, x24
   11888:	mov	x1, #0x1                   	// #1
   1188c:	str	x4, [x29, #184]
   11890:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11894:	ldr	x4, [x29, #184]
   11898:	cbz	w0, 11400 <argp_failure@@Base+0xe70>
   1189c:	ldr	x0, [x24, #56]
   118a0:	b	11794 <argp_failure@@Base+0x1204>
   118a4:	mov	x0, x24
   118a8:	mov	x1, #0x1                   	// #1
   118ac:	bl	ad80 <_argp_fmtstream_ensure@plt>
   118b0:	cbz	w0, 10c00 <argp_failure@@Base+0x670>
   118b4:	ldr	x0, [x24, #56]
   118b8:	b	1114c <argp_failure@@Base+0xbbc>
   118bc:	mov	x0, x24
   118c0:	mov	x1, #0x1                   	// #1
   118c4:	bl	ad80 <_argp_fmtstream_ensure@plt>
   118c8:	cbz	w0, 10dd8 <argp_failure@@Base+0x848>
   118cc:	ldr	x0, [x24, #56]
   118d0:	b	10dc8 <argp_failure@@Base+0x838>
   118d4:	ldrb	w1, [x26, #1]
   118d8:	add	x6, x26, #0x1
   118dc:	ldrh	w1, [x0, x1, lsl #1]
   118e0:	tbz	w1, #13, 118f4 <argp_failure@@Base+0x1364>
   118e4:	nop
   118e8:	ldrb	w1, [x6, #1]!
   118ec:	ldrh	w1, [x0, x1, lsl #1]
   118f0:	tbnz	w1, #13, 118e8 <argp_failure@@Base+0x1358>
   118f4:	mov	x26, x6
   118f8:	b	11574 <argp_failure@@Base+0xfe4>
   118fc:	mov	w2, #0xa                   	// #10
   11900:	mov	x1, #0x0                   	// #0
   11904:	mov	x0, x26
   11908:	bl	aa00 <strtol@plt>
   1190c:	ldr	x1, [x29, #184]
   11910:	str	w0, [x29, #152]
   11914:	ldrb	w2, [x26]
   11918:	ldr	x1, [x1]
   1191c:	ldrh	w0, [x1, x2, lsl #1]
   11920:	tbz	w0, #11, 11938 <argp_failure@@Base+0x13a8>
   11924:	nop
   11928:	ldrb	w0, [x26, #1]!
   1192c:	ldrh	w0, [x1, x0, lsl #1]
   11930:	tbnz	w0, #11, 11928 <argp_failure@@Base+0x1398>
   11934:	nop
   11938:	tbz	w0, #13, 11948 <argp_failure@@Base+0x13b8>
   1193c:	ldrb	w0, [x26, #1]!
   11940:	ldrh	w0, [x1, x0, lsl #1]
   11944:	b	11938 <argp_failure@@Base+0x13a8>
   11948:	str	wzr, [x29, #160]
   1194c:	b	11580 <argp_failure@@Base+0xff0>
   11950:	mov	w1, w28
   11954:	mov	x26, x24
   11958:	mov	x22, #0x0                   	// #0
   1195c:	b	11558 <argp_failure@@Base+0xfc8>
   11960:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   11964:	mov	w2, #0x5                   	// #5
   11968:	add	x1, x1, #0x9f8
   1196c:	mov	x0, #0x0                   	// #0
   11970:	bl	ada0 <dcgettext@plt>
   11974:	mov	x21, x0
   11978:	mov	x23, x0
   1197c:	b	10bc4 <argp_failure@@Base+0x634>
   11980:	ldp	x0, x1, [x24, #56]
   11984:	cmp	x0, x1
   11988:	b.cc	119a0 <argp_failure@@Base+0x1410>  // b.lo, b.ul, b.last
   1198c:	mov	x0, x24
   11990:	mov	x1, #0x1                   	// #1
   11994:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11998:	cbz	w0, 119b0 <argp_failure@@Base+0x1420>
   1199c:	ldr	x0, [x24, #56]
   119a0:	add	x1, x0, #0x1
   119a4:	str	x1, [x24, #56]
   119a8:	mov	w1, #0xa                   	// #10
   119ac:	strb	w1, [x0]
   119b0:	mov	x0, x21
   119b4:	bl	a340 <strlen@plt>
   119b8:	mov	x22, x0
   119bc:	ldp	x0, x1, [x24, #56]
   119c0:	cbnz	x22, 11a00 <argp_failure@@Base+0x1470>
   119c4:	cmp	x0, x1
   119c8:	b.cc	119e0 <argp_failure@@Base+0x1450>  // b.lo, b.ul, b.last
   119cc:	mov	x0, x24
   119d0:	mov	x1, #0x1                   	// #1
   119d4:	bl	ad80 <_argp_fmtstream_ensure@plt>
   119d8:	cbz	w0, 10bd0 <argp_failure@@Base+0x640>
   119dc:	ldr	x0, [x24, #56]
   119e0:	add	x1, x0, #0x1
   119e4:	str	x1, [x24, #56]
   119e8:	mov	w1, #0xa                   	// #10
   119ec:	strb	w1, [x0]
   119f0:	b	10bd0 <argp_failure@@Base+0x640>
   119f4:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   119f8:	str	x0, [x29, #144]
   119fc:	b	10cf4 <argp_failure@@Base+0x764>
   11a00:	add	x2, x0, x22
   11a04:	cmp	x1, x2
   11a08:	b.cs	11a28 <argp_failure@@Base+0x1498>  // b.hs, b.nlast
   11a0c:	mov	x1, x22
   11a10:	mov	x0, x24
   11a14:	bl	ad80 <_argp_fmtstream_ensure@plt>
   11a18:	cbnz	w0, 11a24 <argp_failure@@Base+0x1494>
   11a1c:	ldp	x0, x1, [x24, #56]
   11a20:	b	119c4 <argp_failure@@Base+0x1434>
   11a24:	ldr	x0, [x24, #56]
   11a28:	mov	x1, x21
   11a2c:	mov	x2, x22
   11a30:	bl	a2c0 <memcpy@plt>
   11a34:	ldp	x0, x1, [x24, #56]
   11a38:	add	x0, x0, x22
   11a3c:	str	x0, [x24, #56]
   11a40:	b	119c4 <argp_failure@@Base+0x1434>
   11a44:	mov	w1, w3
   11a48:	b	11380 <argp_failure@@Base+0xdf0>
   11a4c:	nop

0000000000011a50 <argp_help@@Base>:
   11a50:	mov	w5, w2
   11a54:	mov	x4, x3
   11a58:	mov	x2, x1
   11a5c:	mov	w3, w5
   11a60:	mov	x1, #0x0                   	// #0
   11a64:	b	107c8 <argp_failure@@Base+0x238>

0000000000011a68 <argp_state_help@@Base>:
   11a68:	stp	x29, x30, [sp, #-32]!
   11a6c:	mov	x29, sp
   11a70:	stp	x19, x20, [sp, #16]
   11a74:	mov	w20, w2
   11a78:	cbz	x0, 11ad8 <argp_state_help@@Base+0x70>
   11a7c:	ldr	w2, [x0, #28]
   11a80:	mov	x19, x0
   11a84:	tst	x2, #0x2
   11a88:	ccmp	x1, #0x0, #0x4, eq  // eq = none
   11a8c:	b.ne	11a9c <argp_state_help@@Base+0x34>  // b.any
   11a90:	ldp	x19, x20, [sp, #16]
   11a94:	ldp	x29, x30, [sp], #32
   11a98:	ret
   11a9c:	tst	x2, #0x40
   11aa0:	orr	w2, w20, #0x80
   11aa4:	csel	w20, w2, w20, ne  // ne = any
   11aa8:	mov	x2, x1
   11aac:	mov	x1, x0
   11ab0:	mov	w3, w20
   11ab4:	ldr	x0, [x0]
   11ab8:	ldr	x4, [x19, #64]
   11abc:	bl	107c8 <argp_failure@@Base+0x238>
   11ac0:	ldr	w0, [x19, #28]
   11ac4:	tbnz	w0, #5, 11a90 <argp_state_help@@Base+0x28>
   11ac8:	tbnz	w20, #8, 11afc <argp_state_help@@Base+0x94>
   11acc:	tbz	w20, #9, 11a90 <argp_state_help@@Base+0x28>
   11ad0:	mov	w0, #0x0                   	// #0
   11ad4:	bl	a350 <exit@plt>
   11ad8:	cbz	x1, 11a90 <argp_state_help@@Base+0x28>
   11adc:	adrp	x4, 46000 <vasnprintf@@Base+0x1b1e0>
   11ae0:	mov	x2, x1
   11ae4:	mov	w3, w20
   11ae8:	mov	x1, #0x0                   	// #0
   11aec:	ldr	x4, [x4, #4008]
   11af0:	ldr	x4, [x4]
   11af4:	bl	107c8 <argp_failure@@Base+0x238>
   11af8:	b	11ac8 <argp_state_help@@Base+0x60>
   11afc:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   11b00:	ldr	x0, [x0, #4048]
   11b04:	ldr	w0, [x0]
   11b08:	bl	a350 <exit@plt>
   11b0c:	nop

0000000000011b10 <argp_error@@Base>:
   11b10:	stp	x29, x30, [sp, #-288]!
   11b14:	mov	x29, sp
   11b18:	stp	x19, x20, [sp, #16]
   11b1c:	mov	x20, x0
   11b20:	str	x21, [sp, #32]
   11b24:	mov	x21, x1
   11b28:	str	q0, [sp, #112]
   11b2c:	str	q1, [sp, #128]
   11b30:	str	q2, [sp, #144]
   11b34:	str	q3, [sp, #160]
   11b38:	str	q4, [sp, #176]
   11b3c:	str	q5, [sp, #192]
   11b40:	str	q6, [sp, #208]
   11b44:	str	q7, [sp, #224]
   11b48:	stp	x2, x3, [sp, #240]
   11b4c:	stp	x4, x5, [sp, #256]
   11b50:	stp	x6, x7, [sp, #272]
   11b54:	cbz	x0, 11c34 <argp_error@@Base+0x124>
   11b58:	ldr	w0, [x0, #28]
   11b5c:	tbnz	w0, #1, 11c24 <argp_error@@Base+0x114>
   11b60:	ldr	x19, [x20, #72]
   11b64:	cbz	x19, 11c24 <argp_error@@Base+0x114>
   11b68:	mov	x0, x19
   11b6c:	bl	a3a0 <flockfile@plt>
   11b70:	mov	w0, #0xffffff80            	// #-128
   11b74:	mov	w1, #0xffffffd0            	// #-48
   11b78:	stp	w1, w0, [sp, #104]
   11b7c:	add	x2, sp, #0xf0
   11b80:	ldr	x0, [x20, #64]
   11b84:	add	x3, sp, #0x120
   11b88:	stp	x3, x3, [sp, #80]
   11b8c:	str	x2, [sp, #96]
   11b90:	mov	x1, x19
   11b94:	bl	ae00 <fputs_unlocked@plt>
   11b98:	ldp	x0, x1, [x19, #40]
   11b9c:	cmp	x0, x1
   11ba0:	b.cs	11c88 <argp_error@@Base+0x178>  // b.hs, b.nlast
   11ba4:	add	x1, x0, #0x1
   11ba8:	str	x1, [x19, #40]
   11bac:	mov	w1, #0x3a                  	// #58
   11bb0:	strb	w1, [x0]
   11bb4:	ldp	x0, x1, [x19, #40]
   11bb8:	cmp	x0, x1
   11bbc:	b.cs	11c98 <argp_error@@Base+0x188>  // b.hs, b.nlast
   11bc0:	add	x1, x0, #0x1
   11bc4:	str	x1, [x19, #40]
   11bc8:	mov	w1, #0x20                  	// #32
   11bcc:	strb	w1, [x0]
   11bd0:	ldp	x6, x7, [sp, #80]
   11bd4:	mov	x1, x21
   11bd8:	ldp	x4, x5, [sp, #96]
   11bdc:	add	x2, sp, #0x30
   11be0:	mov	x0, x19
   11be4:	stp	x6, x7, [sp, #48]
   11be8:	stp	x4, x5, [sp, #64]
   11bec:	bl	ae80 <vfprintf@plt>
   11bf0:	ldp	x0, x1, [x19, #40]
   11bf4:	cmp	x0, x1
   11bf8:	b.cs	11c78 <argp_error@@Base+0x168>  // b.hs, b.nlast
   11bfc:	add	x1, x0, #0x1
   11c00:	str	x1, [x19, #40]
   11c04:	mov	w1, #0xa                   	// #10
   11c08:	strb	w1, [x0]
   11c0c:	mov	x1, x19
   11c10:	mov	w2, #0x104                 	// #260
   11c14:	mov	x0, x20
   11c18:	bl	ad90 <argp_state_help@plt>
   11c1c:	mov	x0, x19
   11c20:	bl	a620 <funlockfile@plt>
   11c24:	ldp	x19, x20, [sp, #16]
   11c28:	ldr	x21, [sp, #32]
   11c2c:	ldp	x29, x30, [sp], #288
   11c30:	ret
   11c34:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   11c38:	ldr	x0, [x0, #3816]
   11c3c:	ldr	x19, [x0]
   11c40:	cbz	x19, 11c24 <argp_error@@Base+0x114>
   11c44:	mov	x0, x19
   11c48:	bl	a3a0 <flockfile@plt>
   11c4c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   11c50:	add	x3, sp, #0xf0
   11c54:	add	x4, sp, #0x120
   11c58:	mov	w2, #0xffffffd0            	// #-48
   11c5c:	ldr	x0, [x0, #4008]
   11c60:	mov	w1, #0xffffff80            	// #-128
   11c64:	stp	x4, x4, [sp, #80]
   11c68:	str	x3, [sp, #96]
   11c6c:	stp	w2, w1, [sp, #104]
   11c70:	ldr	x0, [x0]
   11c74:	b	11b90 <argp_error@@Base+0x80>
   11c78:	mov	x0, x19
   11c7c:	mov	w1, #0xa                   	// #10
   11c80:	bl	a940 <__overflow@plt>
   11c84:	b	11c0c <argp_error@@Base+0xfc>
   11c88:	mov	x0, x19
   11c8c:	mov	w1, #0x3a                  	// #58
   11c90:	bl	a940 <__overflow@plt>
   11c94:	b	11bb4 <argp_error@@Base+0xa4>
   11c98:	mov	x0, x19
   11c9c:	mov	w1, #0x20                  	// #32
   11ca0:	bl	a940 <__overflow@plt>
   11ca4:	b	11bd0 <argp_error@@Base+0xc0>
   11ca8:	stp	x29, x30, [sp, #-32]!
   11cac:	mov	x29, sp
   11cb0:	ldr	x2, [x0]
   11cb4:	stp	x19, x20, [sp, #16]
   11cb8:	mov	x19, x1
   11cbc:	ldr	x20, [x0, #32]
   11cc0:	cbz	x2, 11d4c <argp_error@@Base+0x23c>
   11cc4:	ldr	x1, [x1, #16]
   11cc8:	mov	w0, #0x0                   	// #0
   11ccc:	add	x1, x1, #0x1
   11cd0:	str	x1, [x19, #16]
   11cd4:	nop
   11cd8:	ldr	w3, [x2, #8]
   11cdc:	add	x2, x2, #0x30
   11ce0:	cbnz	w3, 11cec <argp_error@@Base+0x1dc>
   11ce4:	ldur	x3, [x2, #-48]
   11ce8:	cbz	x3, 11cf4 <argp_error@@Base+0x1e4>
   11cec:	add	w0, w0, #0x1
   11cf0:	b	11cd8 <argp_error@@Base+0x1c8>
   11cf4:	ldur	x1, [x2, #-16]
   11cf8:	cbnz	x1, 11cec <argp_error@@Base+0x1dc>
   11cfc:	ldur	w1, [x2, #-8]
   11d00:	cbnz	w1, 11cec <argp_error@@Base+0x1dc>
   11d04:	ldp	x3, x2, [x19]
   11d08:	add	w1, w0, w0, lsl #1
   11d0c:	add	x0, x2, w0, sxtw
   11d10:	add	x1, x3, w1, sxtw
   11d14:	stp	x1, x0, [x19]
   11d18:	cbz	x20, 11d40 <argp_error@@Base+0x230>
   11d1c:	ldr	x0, [x20]
   11d20:	cbz	x0, 11d40 <argp_error@@Base+0x230>
   11d24:	mov	x1, x19
   11d28:	bl	11ca8 <argp_error@@Base+0x198>
   11d2c:	ldr	x1, [x19, #24]
   11d30:	ldr	x0, [x20, #32]!
   11d34:	add	x1, x1, #0x1
   11d38:	str	x1, [x19, #24]
   11d3c:	cbnz	x0, 11d24 <argp_error@@Base+0x214>
   11d40:	ldp	x19, x20, [sp, #16]
   11d44:	ldp	x29, x30, [sp], #32
   11d48:	ret
   11d4c:	ldr	x0, [x0, #8]
   11d50:	cbz	x0, 11d18 <argp_error@@Base+0x208>
   11d54:	ldr	x0, [x1, #16]
   11d58:	add	x0, x0, #0x1
   11d5c:	str	x0, [x1, #16]
   11d60:	b	11d18 <argp_error@@Base+0x208>
   11d64:	nop
   11d68:	cmp	w0, #0x56
   11d6c:	b.eq	11d78 <argp_error@@Base+0x268>  // b.none
   11d70:	mov	w0, #0x7                   	// #7
   11d74:	ret
   11d78:	stp	x29, x30, [sp, #-32]!
   11d7c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   11d80:	mov	x29, sp
   11d84:	ldr	x0, [x0, #4056]
   11d88:	str	x19, [sp, #16]
   11d8c:	mov	x19, x2
   11d90:	ldr	x2, [x0]
   11d94:	cbz	x2, 11dc0 <argp_error@@Base+0x2b0>
   11d98:	ldr	x0, [x19, #80]
   11d9c:	mov	x1, x19
   11da0:	blr	x2
   11da4:	ldr	w1, [x19, #28]
   11da8:	mov	w0, #0x0                   	// #0
   11dac:	tbz	w1, #5, 11dbc <argp_error@@Base+0x2ac>
   11db0:	ldr	x19, [sp, #16]
   11db4:	ldp	x29, x30, [sp], #32
   11db8:	ret
   11dbc:	bl	a350 <exit@plt>
   11dc0:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   11dc4:	ldr	x0, [x0, #3936]
   11dc8:	ldr	x2, [x0]
   11dcc:	cbz	x2, 11de4 <argp_error@@Base+0x2d4>
   11dd0:	ldr	x0, [x19, #80]
   11dd4:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   11dd8:	add	x1, x1, #0xb20
   11ddc:	bl	afa0 <fprintf@plt>
   11de0:	b	11da4 <argp_error@@Base+0x294>
   11de4:	mov	w2, #0x5                   	// #5
   11de8:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   11dec:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   11df0:	add	x1, x1, #0xb28
   11df4:	add	x0, x0, #0x780
   11df8:	bl	ada0 <dcgettext@plt>
   11dfc:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   11e00:	mov	x2, x0
   11e04:	add	x1, x1, #0xb50
   11e08:	mov	x0, x19
   11e0c:	bl	ab80 <argp_error@plt>
   11e10:	b	11da4 <argp_error@@Base+0x294>
   11e14:	nop
   11e18:	stp	x29, x30, [sp, #-32]!
   11e1c:	cmn	w0, #0x2
   11e20:	mov	x29, sp
   11e24:	stp	x19, x20, [sp, #16]
   11e28:	mov	x20, x1
   11e2c:	mov	x19, x2
   11e30:	b.eq	11e98 <argp_error@@Base+0x388>  // b.none
   11e34:	cmn	w0, #0x1
   11e38:	b.ge	11e6c <argp_error@@Base+0x35c>  // b.tcont
   11e3c:	cmn	w0, #0x4
   11e40:	b.eq	11edc <argp_error@@Base+0x3cc>  // b.none
   11e44:	cmn	w0, #0x3
   11e48:	b.ne	11f4c <argp_error@@Base+0x43c>  // b.any
   11e4c:	ldr	x1, [x19, #80]
   11e50:	mov	x0, x2
   11e54:	mov	w2, #0x201                 	// #513
   11e58:	bl	ad90 <argp_state_help@plt>
   11e5c:	mov	w0, #0x0                   	// #0
   11e60:	ldp	x19, x20, [sp, #16]
   11e64:	ldp	x29, x30, [sp], #32
   11e68:	ret
   11e6c:	cmp	w0, #0x3f
   11e70:	mov	w0, #0x7                   	// #7
   11e74:	b.ne	11e60 <argp_error@@Base+0x350>  // b.any
   11e78:	ldr	x1, [x19, #80]
   11e7c:	mov	x0, x2
   11e80:	mov	w2, #0x27a                 	// #634
   11e84:	bl	ad90 <argp_state_help@plt>
   11e88:	mov	w0, #0x0                   	// #0
   11e8c:	ldp	x19, x20, [sp, #16]
   11e90:	ldp	x29, x30, [sp], #32
   11e94:	ret
   11e98:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   11e9c:	mov	x0, x20
   11ea0:	ldr	x1, [x1, #3768]
   11ea4:	str	x20, [x1]
   11ea8:	bl	a780 <last_component@plt>
   11eac:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   11eb0:	ldr	w2, [x19, #28]
   11eb4:	str	x0, [x19, #64]
   11eb8:	ldr	x1, [x1, #4008]
   11ebc:	and	w2, w2, #0x3
   11ec0:	cmp	w2, #0x1
   11ec4:	str	x0, [x1]
   11ec8:	b.eq	11f3c <argp_error@@Base+0x42c>  // b.none
   11ecc:	mov	w0, #0x0                   	// #0
   11ed0:	ldp	x19, x20, [sp, #16]
   11ed4:	ldp	x29, x30, [sp], #32
   11ed8:	ret
   11edc:	cmp	x1, #0x0
   11ee0:	adrp	x19, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   11ee4:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   11ee8:	add	x0, x0, #0xb58
   11eec:	csel	x0, x0, x1, eq  // eq = none
   11ef0:	mov	w2, #0xa                   	// #10
   11ef4:	mov	x1, #0x0                   	// #0
   11ef8:	bl	aa00 <strtol@plt>
   11efc:	str	w0, [x19, #1068]
   11f00:	ldr	w0, [x19, #1068]
   11f04:	sub	w1, w0, #0x1
   11f08:	str	w1, [x19, #1068]
   11f0c:	cmp	w0, #0x0
   11f10:	b.le	11ecc <argp_error@@Base+0x3bc>
   11f14:	add	x19, x19, #0x42c
   11f18:	mov	w0, #0x1                   	// #1
   11f1c:	bl	a740 <sleep@plt>
   11f20:	ldr	w0, [x19]
   11f24:	sub	w1, w0, #0x1
   11f28:	str	w1, [x19]
   11f2c:	cmp	w0, #0x0
   11f30:	b.gt	11f18 <argp_error@@Base+0x408>
   11f34:	mov	w0, #0x0                   	// #0
   11f38:	b	11ed0 <argp_error@@Base+0x3c0>
   11f3c:	ldr	x1, [x19, #16]
   11f40:	mov	w0, #0x0                   	// #0
   11f44:	str	x20, [x1]
   11f48:	b	11e60 <argp_error@@Base+0x350>
   11f4c:	mov	w0, #0x7                   	// #7
   11f50:	b	11e60 <argp_error@@Base+0x350>
   11f54:	nop
   11f58:	stp	x29, x30, [sp, #-128]!
   11f5c:	mov	x29, sp
   11f60:	stp	x19, x20, [sp, #16]
   11f64:	mov	x19, x4
   11f68:	ldr	x20, [x0]
   11f6c:	stp	x0, x1, [sp, #104]
   11f70:	ldr	x0, [x0, #32]
   11f74:	stp	x23, x24, [sp, #48]
   11f78:	mov	x24, x3
   11f7c:	str	x0, [sp, #96]
   11f80:	str	w2, [sp, #124]
   11f84:	cbz	x20, 121e0 <argp_error@@Base+0x6d0>
   11f88:	ldr	x23, [x4, #8]
   11f8c:	stp	x27, x28, [sp, #80]
   11f90:	mov	x28, x20
   11f94:	stp	x21, x22, [sp, #32]
   11f98:	stp	x25, x26, [sp, #64]
   11f9c:	nop
   11fa0:	ldr	w22, [x28, #8]
   11fa4:	cbnz	w22, 11fb0 <argp_error@@Base+0x4a0>
   11fa8:	ldr	x0, [x28]
   11fac:	cbz	x0, 120f8 <argp_error@@Base+0x5e8>
   11fb0:	ldr	w1, [x28, #24]
   11fb4:	tbz	w1, #2, 120d8 <argp_error@@Base+0x5c8>
   11fb8:	ldr	w0, [x20, #24]
   11fbc:	and	w21, w0, #0x8
   11fc0:	tbnz	w0, #3, 120d0 <argp_error@@Base+0x5c0>
   11fc4:	tbnz	w1, #3, 12034 <argp_error@@Base+0x524>
   11fc8:	sub	w0, w22, #0x1
   11fcc:	cmp	w0, #0xfe
   11fd0:	b.hi	12034 <argp_error@@Base+0x524>  // b.pmore
   11fd4:	bl	a9d0 <__ctype_b_loc@plt>
   11fd8:	ldr	x0, [x0]
   11fdc:	ldrh	w0, [x0, w22, sxtw #1]
   11fe0:	tbz	w0, #14, 12034 <argp_error@@Base+0x524>
   11fe4:	add	x0, x23, #0x1
   11fe8:	str	x0, [x19, #8]
   11fec:	strb	w22, [x23]
   11ff0:	ldr	x0, [x20, #16]
   11ff4:	cbz	x0, 12028 <argp_error@@Base+0x518>
   11ff8:	ldr	x0, [x19, #8]
   11ffc:	add	x1, x0, #0x1
   12000:	str	x1, [x19, #8]
   12004:	mov	w1, #0x3a                  	// #58
   12008:	strb	w1, [x0]
   1200c:	ldr	w0, [x20, #24]
   12010:	tbz	w0, #0, 12028 <argp_error@@Base+0x518>
   12014:	ldr	x0, [x19, #8]
   12018:	add	x1, x0, #0x1
   1201c:	str	x1, [x19, #8]
   12020:	mov	w1, #0x3a                  	// #58
   12024:	strb	w1, [x0]
   12028:	ldr	x0, [x19, #8]
   1202c:	strb	wzr, [x0]
   12030:	ldr	x23, [x19, #8]
   12034:	ldr	x27, [x28]
   12038:	cbz	x27, 120d0 <argp_error@@Base+0x5c0>
   1203c:	ldr	x25, [x19]
   12040:	ldr	x22, [x25, #16]
   12044:	ldr	x0, [x22]
   12048:	cbz	x0, 12064 <argp_error@@Base+0x554>
   1204c:	mov	x26, x22
   12050:	mov	x1, x27
   12054:	bl	a9b0 <strcmp@plt>
   12058:	cbz	w0, 120e4 <argp_error@@Base+0x5d4>
   1205c:	ldr	x0, [x26, #32]!
   12060:	cbnz	x0, 12050 <argp_error@@Base+0x540>
   12064:	ldr	x3, [x19, #16]
   12068:	ldr	x0, [x20, #16]
   1206c:	str	x27, [x3]
   12070:	cbz	x0, 12080 <argp_error@@Base+0x570>
   12074:	ldr	w21, [x20, #24]
   12078:	and	w21, w21, #0x1
   1207c:	add	w21, w21, #0x1
   12080:	str	w21, [x3, #8]
   12084:	str	xzr, [x3, #16]
   12088:	ldr	w0, [x28, #8]
   1208c:	cbnz	w0, 12094 <argp_error@@Base+0x584>
   12090:	ldr	w0, [x20, #8]
   12094:	and	w1, w0, #0xffffff
   12098:	mov	x2, #0x8e39                	// #36409
   1209c:	ldr	x0, [x25, #80]
   120a0:	movk	x2, #0x38e3, lsl #16
   120a4:	movk	x2, #0xe38e, lsl #32
   120a8:	add	x4, x3, #0x20
   120ac:	sub	x0, x24, x0
   120b0:	movk	x2, #0x8e38, lsl #48
   120b4:	asr	x0, x0, #3
   120b8:	mul	x0, x0, x2
   120bc:	add	w0, w0, #0x1
   120c0:	add	w0, w1, w0, lsl #24
   120c4:	str	w0, [x3, #24]
   120c8:	str	x4, [x19, #16]
   120cc:	str	xzr, [x3, #32]
   120d0:	add	x28, x28, #0x30
   120d4:	b	11fa0 <argp_error@@Base+0x490>
   120d8:	mov	w0, w1
   120dc:	mov	x20, x28
   120e0:	b	11fbc <argp_error@@Base+0x4ac>
   120e4:	sub	x22, x26, x22
   120e8:	asr	x22, x22, #5
   120ec:	tbnz	w22, #31, 12064 <argp_error@@Base+0x554>
   120f0:	add	x28, x28, #0x30
   120f4:	b	11fa0 <argp_error@@Base+0x490>
   120f8:	ldr	x0, [x28, #32]
   120fc:	cbnz	x0, 11fb0 <argp_error@@Base+0x4a0>
   12100:	ldr	w0, [x28, #40]
   12104:	cbnz	w0, 11fb0 <argp_error@@Base+0x4a0>
   12108:	ldr	x0, [sp, #104]
   1210c:	ldp	x21, x22, [sp, #32]
   12110:	ldp	x25, x26, [sp, #64]
   12114:	ldp	x27, x28, [sp, #80]
   12118:	ldr	x0, [x0, #8]
   1211c:	str	x0, [x24]
   12120:	ldr	x0, [sp, #104]
   12124:	str	x0, [x24, #8]
   12128:	ldr	x0, [sp, #112]
   1212c:	str	x0, [x24, #32]
   12130:	ldr	w0, [sp, #124]
   12134:	str	w0, [x24, #40]
   12138:	ldr	x0, [sp, #96]
   1213c:	str	x23, [x24, #16]
   12140:	str	wzr, [x24, #24]
   12144:	stp	xzr, xzr, [x24, #48]
   12148:	str	xzr, [x24, #64]
   1214c:	cbz	x0, 1218c <argp_error@@Base+0x67c>
   12150:	ldr	x0, [x0]
   12154:	cbz	x0, 121fc <argp_error@@Base+0x6ec>
   12158:	mov	w0, #0x0                   	// #0
   1215c:	nop
   12160:	add	w2, w0, #0x1
   12164:	ldr	x3, [sp, #96]
   12168:	ubfiz	x1, x2, #5, #32
   1216c:	mov	x0, x2
   12170:	ldr	x1, [x3, x1]
   12174:	cbnz	x1, 12160 <argp_error@@Base+0x650>
   12178:	lsl	x2, x2, #3
   1217c:	ldr	x0, [x19, #24]
   12180:	str	x0, [x24, #56]
   12184:	add	x2, x0, x2
   12188:	str	x2, [x19, #24]
   1218c:	add	x3, x24, #0x48
   12190:	ldr	x0, [sp, #96]
   12194:	cbz	x0, 121cc <argp_error@@Base+0x6bc>
   12198:	ldr	x0, [x0]
   1219c:	cbz	x0, 121cc <argp_error@@Base+0x6bc>
   121a0:	mov	w20, #0x0                   	// #0
   121a4:	mov	w2, w20
   121a8:	mov	x1, x24
   121ac:	mov	x4, x19
   121b0:	bl	11f58 <argp_error@@Base+0x448>
   121b4:	ldr	x1, [sp, #96]
   121b8:	mov	x3, x0
   121bc:	add	w20, w20, #0x1
   121c0:	ldr	x0, [x1, #32]!
   121c4:	str	x1, [sp, #96]
   121c8:	cbnz	x0, 121a4 <argp_error@@Base+0x694>
   121cc:	mov	x0, x3
   121d0:	ldp	x19, x20, [sp, #16]
   121d4:	ldp	x23, x24, [sp, #48]
   121d8:	ldp	x29, x30, [sp], #128
   121dc:	ret
   121e0:	ldr	x0, [sp, #104]
   121e4:	ldr	x0, [x0, #8]
   121e8:	cbz	x0, 121f4 <argp_error@@Base+0x6e4>
   121ec:	ldr	x23, [x4, #8]
   121f0:	b	1211c <argp_error@@Base+0x60c>
   121f4:	mov	x24, #0x0                   	// #0
   121f8:	b	12190 <argp_error@@Base+0x680>
   121fc:	mov	x2, #0x0                   	// #0
   12200:	b	1217c <argp_error@@Base+0x66c>
   12204:	nop

0000000000012208 <argp_parse@@Base>:
   12208:	stp	x29, x30, [sp, #-448]!
   1220c:	mov	x29, sp
   12210:	stp	x19, x20, [sp, #16]
   12214:	mov	w20, w1
   12218:	stp	x21, x22, [sp, #32]
   1221c:	mov	x22, x2
   12220:	stp	x23, x24, [sp, #48]
   12224:	stp	x25, x26, [sp, #64]
   12228:	mov	w25, w3
   1222c:	mov	x26, x5
   12230:	stp	x27, x28, [sp, #80]
   12234:	mov	x28, x0
   12238:	str	x4, [x29, #104]
   1223c:	tbnz	w25, #0, 12260 <argp_parse@@Base+0x58>
   12240:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   12244:	ldr	x0, [x0, #3768]
   12248:	ldr	x1, [x0]
   1224c:	cbz	x1, 12b24 <argp_parse@@Base+0x91c>
   12250:	adrp	x19, 46000 <vasnprintf@@Base+0x1b1e0>
   12254:	ldr	x19, [x19, #4008]
   12258:	ldr	x0, [x19]
   1225c:	cbz	x0, 12b3c <argp_parse@@Base+0x934>
   12260:	ands	w0, w25, #0x4
   12264:	str	w0, [x29, #100]
   12268:	cset	x0, eq  // eq = none
   1226c:	tbz	w25, #4, 122a0 <argp_parse@@Base+0x98>
   12270:	stp	x0, xzr, [x29, #112]
   12274:	stp	xzr, xzr, [x29, #128]
   12278:	stp	xzr, xzr, [x29, #176]
   1227c:	stp	xzr, xzr, [x29, #192]
   12280:	stp	xzr, xzr, [x29, #208]
   12284:	str	xzr, [x29, #224]
   12288:	cbnz	x28, 12340 <argp_parse@@Base+0x138>
   1228c:	mov	x23, #0x48                  	// #72
   12290:	mov	x19, #0x68                  	// #104
   12294:	mov	x21, x23
   12298:	mov	x24, #0x0                   	// #0
   1229c:	b	12370 <argp_parse@@Base+0x168>
   122a0:	sub	sp, sp, #0x80
   122a4:	mov	x1, sp
   122a8:	sub	sp, sp, #0x40
   122ac:	mov	x2, sp
   122b0:	mov	x3, x1
   122b4:	stp	xzr, xzr, [x1]
   122b8:	stp	xzr, xzr, [x2, #32]
   122bc:	stp	xzr, xzr, [x2]
   122c0:	stp	xzr, xzr, [x1, #16]
   122c4:	stp	xzr, xzr, [x2, #16]
   122c8:	stp	xzr, xzr, [x1, #32]
   122cc:	str	x1, [x2, #32]
   122d0:	stp	xzr, xzr, [x1, #48]
   122d4:	str	xzr, [x2, #48]
   122d8:	stp	xzr, xzr, [x1, #64]
   122dc:	stp	xzr, xzr, [x1, #80]
   122e0:	stp	xzr, xzr, [x1, #96]
   122e4:	stp	xzr, xzr, [x1, #112]
   122e8:	cbz	x28, 122f4 <argp_parse@@Base+0xec>
   122ec:	add	x3, x1, #0x20
   122f0:	str	x28, [x1]
   122f4:	adrp	x4, 46000 <vasnprintf@@Base+0x1b1e0>
   122f8:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   122fc:	add	x5, x1, #0x798
   12300:	str	x5, [x3]
   12304:	ldr	x4, [x4, #3936]
   12308:	ldr	x4, [x4]
   1230c:	cbz	x4, 12d8c <argp_parse@@Base+0xb84>
   12310:	add	x1, x1, #0x798
   12314:	add	x4, x3, #0x40
   12318:	add	x1, x1, #0x38
   1231c:	str	x1, [x3, #32]
   12320:	mov	x28, x2
   12324:	str	xzr, [x4]
   12328:	stp	x0, xzr, [x29, #112]
   1232c:	stp	xzr, xzr, [x29, #128]
   12330:	stp	xzr, xzr, [x29, #176]
   12334:	stp	xzr, xzr, [x29, #192]
   12338:	stp	xzr, xzr, [x29, #208]
   1233c:	str	xzr, [x29, #224]
   12340:	mov	x0, x28
   12344:	add	x1, x29, #0x70
   12348:	bl	11ca8 <argp_error@@Base+0x198>
   1234c:	ldp	x3, x2, [x29, #128]
   12350:	ldp	x0, x19, [x29, #112]
   12354:	add	x3, x3, #0x1
   12358:	lsl	x24, x2, #3
   1235c:	add	x3, x3, x3, lsl #3
   12360:	add	x19, x19, #0x1
   12364:	lsl	x21, x3, #3
   12368:	add	x23, x24, x21
   1236c:	add	x19, x23, x19, lsl #5
   12370:	add	x0, x19, x0
   12374:	add	x0, x0, #0x1
   12378:	bl	a5f0 <malloc@plt>
   1237c:	str	x0, [x29, #440]
   12380:	mov	x27, x0
   12384:	cbz	x0, 12eb0 <argp_parse@@Base+0xca8>
   12388:	mov	x0, #0x100000001           	// #4294967297
   1238c:	str	x0, [x29, #176]
   12390:	ldp	x6, x7, [x29, #192]
   12394:	add	x3, x27, x21
   12398:	ldp	x8, x9, [x29, #176]
   1239c:	add	x23, x27, x23
   123a0:	ldp	x4, x5, [x29, #208]
   123a4:	mov	x2, x24
   123a8:	ldr	x12, [x29, #224]
   123ac:	add	x24, x27, x19
   123b0:	add	x21, x29, #0xe8
   123b4:	mov	x0, x3
   123b8:	mov	w1, #0x0                   	// #0
   123bc:	stp	x24, x23, [x29, #240]
   123c0:	stp	x8, x9, [x29, #256]
   123c4:	stp	x6, x7, [x29, #272]
   123c8:	stp	x4, x5, [x29, #288]
   123cc:	stp	x12, x27, [x29, #304]
   123d0:	str	x3, [x29, #328]
   123d4:	bl	a6f0 <memset@plt>
   123d8:	stp	x21, x24, [x29, #144]
   123dc:	stp	x23, x0, [x29, #160]
   123e0:	tbnz	w25, #3, 1251c <argp_parse@@Base+0x314>
   123e4:	mov	x0, x24
   123e8:	ands	w1, w25, #0x4
   123ec:	cbz	w1, 12400 <argp_parse@@Base+0x1f8>
   123f0:	add	x0, x24, #0x1
   123f4:	mov	w1, #0x2b                  	// #43
   123f8:	strb	w1, [x24]
   123fc:	str	x0, [x29, #152]
   12400:	ldr	x1, [x29, #160]
   12404:	strb	wzr, [x0]
   12408:	str	xzr, [x1]
   1240c:	str	x28, [x29, #232]
   12410:	cbz	x28, 12540 <argp_parse@@Base+0x338>
   12414:	ldr	x3, [x29, #312]
   12418:	add	x4, x29, #0x90
   1241c:	mov	w2, #0x0                   	// #0
   12420:	mov	x1, #0x0                   	// #0
   12424:	mov	x0, x28
   12428:	bl	11f58 <argp_error@@Base+0x448>
   1242c:	stp	xzr, xzr, [x29, #352]
   12430:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   12434:	adrp	x2, 46000 <vasnprintf@@Base+0x1b1e0>
   12438:	mov	w4, #0x1                   	// #1
   1243c:	ldr	x3, [x3, #3816]
   12440:	stp	xzr, xzr, [x21, #136]
   12444:	mov	x1, x22
   12448:	ldr	x2, [x2, #3872]
   1244c:	str	w4, [x29, #336]
   12450:	ldr	x3, [x3]
   12454:	str	x21, [x29, #432]
   12458:	ldr	x2, [x2]
   1245c:	stp	x3, x2, [x29, #416]
   12460:	ldr	x5, [x29, #232]
   12464:	stp	xzr, xzr, [x21, #152]
   12468:	ldr	x4, [x29, #312]
   1246c:	stp	xzr, xzr, [x21, #168]
   12470:	str	x0, [x29, #320]
   12474:	cmp	x0, x4
   12478:	str	x5, [x29, #344]
   1247c:	str	w20, [x29, #352]
   12480:	str	x22, [x29, #360]
   12484:	str	w25, [x29, #372]
   12488:	b.ls	12594 <argp_parse@@Base+0x38c>  // b.plast
   1248c:	mov	w24, #0x3                   	// #3
   12490:	add	x20, x4, #0x48
   12494:	add	x25, x21, #0x70
   12498:	movk	w24, #0x100, lsl #16
   1249c:	str	x26, [x4, #48]
   124a0:	ldur	x3, [x20, #-40]
   124a4:	mov	x2, x25
   124a8:	mov	w0, w24
   124ac:	mov	x1, #0x0                   	// #0
   124b0:	cbz	x3, 124c4 <argp_parse@@Base+0x2bc>
   124b4:	ldur	w4, [x20, #-32]
   124b8:	ldr	x3, [x3, #56]
   124bc:	ldr	x3, [x3, x4, lsl #3]
   124c0:	stur	x3, [x20, #-24]
   124c4:	ldur	x3, [x20, #-72]
   124c8:	cbz	x3, 12758 <argp_parse@@Base+0x550>
   124cc:	ldur	x4, [x20, #-8]
   124d0:	ldur	w5, [x20, #-48]
   124d4:	str	x4, [x29, #400]
   124d8:	ldur	x4, [x20, #-24]
   124dc:	str	x4, [x29, #384]
   124e0:	ldur	x4, [x20, #-16]
   124e4:	str	w5, [x29, #376]
   124e8:	str	x4, [x29, #392]
   124ec:	blr	x3
   124f0:	mov	w19, w0
   124f4:	ldr	x1, [x29, #400]
   124f8:	stur	x1, [x20, #-8]
   124fc:	ldr	x3, [x29, #320]
   12500:	cmp	x3, x20
   12504:	b.ls	129b0 <argp_parse@@Base+0x7a8>  // b.plast
   12508:	cmp	w0, #0x0
   1250c:	ccmp	w0, #0x7, #0x4, ne  // ne = any
   12510:	b.ne	12734 <argp_parse@@Base+0x52c>  // b.any
   12514:	add	x20, x20, #0x48
   12518:	b	124a0 <argp_parse@@Base+0x298>
   1251c:	mov	w1, #0x2d                  	// #45
   12520:	add	x0, x24, #0x1
   12524:	strb	w1, [x27, x19]
   12528:	ldr	x1, [x29, #160]
   1252c:	str	x0, [x29, #152]
   12530:	strb	wzr, [x0]
   12534:	str	xzr, [x1]
   12538:	str	x28, [x29, #232]
   1253c:	cbnz	x28, 12414 <argp_parse@@Base+0x20c>
   12540:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   12544:	adrp	x2, 46000 <vasnprintf@@Base+0x1b1e0>
   12548:	stp	xzr, xzr, [x29, #352]
   1254c:	mov	w4, #0x1                   	// #1
   12550:	mov	x1, x22
   12554:	ldr	x3, [x3, #3816]
   12558:	stp	xzr, xzr, [x21, #136]
   1255c:	ldr	x2, [x2, #3872]
   12560:	str	w4, [x29, #336]
   12564:	ldr	x3, [x3]
   12568:	str	x21, [x29, #432]
   1256c:	ldr	x2, [x2]
   12570:	stp	x3, x2, [x29, #416]
   12574:	ldr	x4, [x29, #312]
   12578:	stp	xzr, xzr, [x21, #152]
   1257c:	stp	xzr, xzr, [x21, #168]
   12580:	str	x4, [x29, #320]
   12584:	str	xzr, [x29, #344]
   12588:	str	w20, [x29, #352]
   1258c:	str	x22, [x29, #360]
   12590:	str	w25, [x29, #372]
   12594:	tbz	w25, #1, 1279c <argp_parse@@Base+0x594>
   12598:	str	wzr, [x29, #260]
   1259c:	ldr	w19, [x29, #352]
   125a0:	tbnz	w25, #0, 12b10 <argp_parse@@Base+0x908>
   125a4:	cmp	x22, x1
   125a8:	b.eq	127b0 <argp_parse@@Base+0x5a8>  // b.none
   125ac:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   125b0:	ldr	x0, [x0, #4008]
   125b4:	ldr	x0, [x0]
   125b8:	str	x0, [x29, #408]
   125bc:	ldr	w2, [x29, #336]
   125c0:	mov	w24, #0x6                   	// #6
   125c4:	ldr	w28, [x29, #368]
   125c8:	mov	w0, w19
   125cc:	add	x20, x21, #0x70
   125d0:	mov	w25, #0xffffffff            	// #-1
   125d4:	movk	w24, #0x100, lsl #16
   125d8:	ldr	w1, [x29, #380]
   125dc:	cbz	w1, 125ec <argp_parse@@Base+0x3e4>
   125e0:	cmp	w28, w1
   125e4:	b.ge	125f0 <argp_parse@@Base+0x3e8>  // b.tcont
   125e8:	str	wzr, [x29, #380]
   125ec:	cbnz	w2, 128e0 <argp_parse@@Base+0x6d8>
   125f0:	cmp	w0, w28
   125f4:	b.le	12840 <argp_parse@@Base+0x638>
   125f8:	ldr	w0, [x29, #372]
   125fc:	tbnz	w0, #2, 129d0 <argp_parse@@Base+0x7c8>
   12600:	ldr	x0, [x29, #360]
   12604:	ldr	x22, [x0, w28, sxtw #3]
   12608:	str	x22, [x29, #272]
   1260c:	ldp	x26, x3, [x29, #312]
   12610:	str	w28, [x29, #368]
   12614:	cmp	x26, x3
   12618:	b.cs	12838 <argp_parse@@Base+0x630>  // b.hs, b.nlast
   1261c:	mov	w5, w28
   12620:	mov	x27, x26
   12624:	ldr	x4, [x27]
   12628:	add	w6, w5, #0x1
   1262c:	str	w6, [x29, #368]
   12630:	mov	x2, x20
   12634:	mov	x1, x22
   12638:	mov	w0, #0x0                   	// #0
   1263c:	cbz	x4, 12828 <argp_parse@@Base+0x620>
   12640:	ldr	x3, [x27, #64]
   12644:	ldr	w5, [x27, #24]
   12648:	str	x3, [x29, #400]
   1264c:	ldr	x3, [x27, #48]
   12650:	str	x3, [x29, #384]
   12654:	ldr	x3, [x27, #56]
   12658:	str	w5, [x29, #376]
   1265c:	str	x3, [x29, #392]
   12660:	blr	x4
   12664:	mov	w19, w0
   12668:	ldr	x1, [x29, #400]
   1266c:	str	x1, [x27, #64]
   12670:	cmp	w0, #0x7
   12674:	b.eq	127c4 <argp_parse@@Base+0x5bc>  // b.none
   12678:	add	x26, x27, #0x48
   1267c:	cbnz	w0, 12b68 <argp_parse@@Base+0x960>
   12680:	ldr	w0, [x29, #352]
   12684:	ldr	w1, [x29, #368]
   12688:	cmp	w28, w1
   1268c:	b.ge	12934 <argp_parse@@Base+0x72c>  // b.tcont
   12690:	ldur	w3, [x26, #-48]
   12694:	sub	w4, w1, w28
   12698:	ldr	w2, [x29, #336]
   1269c:	mov	w28, w1
   126a0:	add	w1, w3, w4
   126a4:	stur	w1, [x26, #-48]
   126a8:	b	125d8 <argp_parse@@Base+0x3d0>
   126ac:	cmp	w0, #0x7
   126b0:	b.eq	12a70 <argp_parse@@Base+0x868>  // b.none
   126b4:	ldr	x20, [x29, #320]
   126b8:	sub	x20, x20, #0x48
   126bc:	cmp	x20, x4
   126c0:	b.cc	12720 <argp_parse@@Base+0x518>  // b.lo, b.ul, b.last
   126c4:	mov	w22, #0x7                   	// #7
   126c8:	add	x21, x21, #0x70
   126cc:	movk	w22, #0x100, lsl #16
   126d0:	ldr	x3, [x20]
   126d4:	mov	x2, x21
   126d8:	mov	w0, w22
   126dc:	mov	x1, #0x0                   	// #0
   126e0:	cbz	x3, 12714 <argp_parse@@Base+0x50c>
   126e4:	ldr	x4, [x20, #64]
   126e8:	ldr	w5, [x20, #24]
   126ec:	str	x4, [x29, #400]
   126f0:	ldr	x4, [x20, #48]
   126f4:	str	x4, [x29, #384]
   126f8:	ldr	x4, [x20, #56]
   126fc:	str	w5, [x29, #376]
   12700:	str	x4, [x29, #392]
   12704:	blr	x3
   12708:	ldr	x0, [x29, #400]
   1270c:	str	x0, [x20, #64]
   12710:	ldr	x4, [x29, #312]
   12714:	sub	x20, x20, #0x48
   12718:	cmp	x20, x4
   1271c:	b.cs	126d0 <argp_parse@@Base+0x4c8>  // b.hs, b.nlast
   12720:	cmp	w19, #0x7
   12724:	mov	w0, #0x16                  	// #22
   12728:	csel	w19, w19, w0, ne  // ne = any
   1272c:	ldr	x0, [x29, #440]
   12730:	bl	aa50 <free@plt>
   12734:	mov	sp, x29
   12738:	mov	w0, w19
   1273c:	ldp	x19, x20, [sp, #16]
   12740:	ldp	x21, x22, [sp, #32]
   12744:	ldp	x23, x24, [sp, #48]
   12748:	ldp	x25, x26, [sp, #64]
   1274c:	ldp	x27, x28, [sp, #80]
   12750:	ldp	x29, x30, [sp], #448
   12754:	ret
   12758:	ldur	x3, [x20, #-64]
   1275c:	ldr	x3, [x3, #32]
   12760:	cbz	x3, 12780 <argp_parse@@Base+0x578>
   12764:	ldr	x3, [x3]
   12768:	cbz	x3, 12780 <argp_parse@@Base+0x578>
   1276c:	ldp	x4, x3, [x20, #-24]
   12770:	str	x4, [x3]
   12774:	ldur	x3, [x20, #-72]
   12778:	cbnz	x3, 124cc <argp_parse@@Base+0x2c4>
   1277c:	nop
   12780:	ldr	x3, [x29, #320]
   12784:	cmp	x3, x20
   12788:	b.hi	12514 <argp_parse@@Base+0x30c>  // b.pmore
   1278c:	ldr	w25, [x29, #372]
   12790:	ldr	x1, [x29, #360]
   12794:	nop
   12798:	tbnz	w25, #1, 12598 <argp_parse@@Base+0x390>
   1279c:	mov	w0, #0x1                   	// #1
   127a0:	str	w0, [x29, #260]
   127a4:	ldr	w19, [x29, #352]
   127a8:	cmp	x22, x1
   127ac:	b.ne	125ac <argp_parse@@Base+0x3a4>  // b.any
   127b0:	ldr	x0, [x22]
   127b4:	cbz	x0, 125ac <argp_parse@@Base+0x3a4>
   127b8:	bl	a780 <last_component@plt>
   127bc:	str	x0, [x29, #408]
   127c0:	b	125bc <argp_parse@@Base+0x3b4>
   127c4:	mov	x26, x27
   127c8:	ldr	w5, [x29, #368]
   127cc:	sub	w5, w5, #0x1
   127d0:	ldr	x3, [x26], #72
   127d4:	str	w5, [x29, #368]
   127d8:	cbz	x3, 12eb8 <argp_parse@@Base+0xcb0>
   127dc:	ldp	x6, x5, [x27, #48]
   127e0:	mov	x2, x20
   127e4:	ldr	w7, [x27, #24]
   127e8:	mov	w0, w24
   127ec:	ldr	x4, [x27, #64]
   127f0:	str	w7, [x29, #376]
   127f4:	stp	x6, x5, [x29, #384]
   127f8:	mov	x1, #0x0                   	// #0
   127fc:	str	x4, [x29, #400]
   12800:	blr	x3
   12804:	mov	w19, w0
   12808:	ldr	x3, [x29, #320]
   1280c:	ldr	x0, [x29, #400]
   12810:	str	x0, [x27, #64]
   12814:	cmp	x3, x26
   12818:	ccmp	w19, #0x7, #0x0, hi  // hi = pmore
   1281c:	b.ne	12ec4 <argp_parse@@Base+0xcbc>  // b.any
   12820:	ldr	w5, [x29, #368]
   12824:	b	12620 <argp_parse@@Base+0x418>
   12828:	add	x27, x27, #0x48
   1282c:	str	w5, [x29, #368]
   12830:	cmp	x27, x3
   12834:	b.cc	12624 <argp_parse@@Base+0x41c>  // b.lo, b.ul, b.last
   12838:	ldr	w0, [x29, #352]
   1283c:	ldr	w28, [x29, #368]
   12840:	cmp	w0, w28
   12844:	b.ne	129d0 <argp_parse@@Base+0x7c8>  // b.any
   12848:	ldp	x20, x3, [x29, #312]
   1284c:	mov	x4, x20
   12850:	cmp	x20, x3
   12854:	b.cs	12e80 <argp_parse@@Base+0xc78>  // b.hs, b.nlast
   12858:	mov	w22, #0x2                   	// #2
   1285c:	add	x24, x21, #0x70
   12860:	mov	w19, #0x0                   	// #0
   12864:	movk	w22, #0x100, lsl #16
   12868:	b	128b0 <argp_parse@@Base+0x6a8>
   1286c:	ldur	x3, [x20, #-8]
   12870:	str	x3, [x29, #400]
   12874:	ldur	x3, [x20, #-24]
   12878:	str	x3, [x29, #384]
   1287c:	ldur	x3, [x20, #-16]
   12880:	str	wzr, [x29, #376]
   12884:	str	x3, [x29, #392]
   12888:	blr	x4
   1288c:	mov	w19, w0
   12890:	ldr	x1, [x29, #400]
   12894:	stur	x1, [x20, #-8]
   12898:	ldr	x3, [x29, #320]
   1289c:	cmp	x20, x3
   128a0:	b.cs	12db0 <argp_parse@@Base+0xba8>  // b.hs, b.nlast
   128a4:	cmp	w19, #0x0
   128a8:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   128ac:	b.ne	12b4c <argp_parse@@Base+0x944>  // b.any
   128b0:	ldr	w4, [x20, #24]
   128b4:	mov	x2, x24
   128b8:	mov	w0, w22
   128bc:	add	x20, x20, #0x48
   128c0:	mov	x1, #0x0                   	// #0
   128c4:	cbnz	w4, 1289c <argp_parse@@Base+0x694>
   128c8:	ldur	x4, [x20, #-72]
   128cc:	cbnz	x4, 1286c <argp_parse@@Base+0x664>
   128d0:	cmp	x20, x3
   128d4:	b.cs	12e9c <argp_parse@@Base+0xc94>  // b.hs, b.nlast
   128d8:	mov	w19, #0x7                   	// #7
   128dc:	b	128b0 <argp_parse@@Base+0x6a8>
   128e0:	ldr	w4, [x29, #372]
   128e4:	str	w28, [x29, #256]
   128e8:	str	w25, [x29, #264]
   128ec:	ldp	x2, x3, [x29, #240]
   128f0:	ldr	x1, [x29, #360]
   128f4:	tbz	w4, #6, 12948 <argp_parse@@Base+0x740>
   128f8:	add	x5, x21, #0x18
   128fc:	mov	x4, #0x0                   	// #0
   12900:	bl	a910 <_getopt_long_only_r@plt>
   12904:	ldr	w28, [x29, #256]
   12908:	str	w28, [x29, #368]
   1290c:	mov	w22, w0
   12910:	cmn	w22, #0x1
   12914:	b.eq	12968 <argp_parse@@Base+0x760>  // b.none
   12918:	cmp	w22, #0x3f
   1291c:	b.eq	12a88 <argp_parse@@Base+0x880>  // b.none
   12920:	cmp	w22, #0x1
   12924:	b.ne	12c90 <argp_parse@@Base+0xa88>  // b.any
   12928:	sub	w28, w28, #0x1
   1292c:	ldr	x22, [x29, #272]
   12930:	b	1260c <argp_parse@@Base+0x404>
   12934:	mov	w28, w1
   12938:	mov	w1, #0x1                   	// #1
   1293c:	mov	w2, w1
   12940:	str	w1, [x29, #336]
   12944:	b	125d8 <argp_parse@@Base+0x3d0>
   12948:	add	x5, x21, #0x18
   1294c:	mov	x4, #0x0                   	// #0
   12950:	bl	a9c0 <_getopt_long_r@plt>
   12954:	ldr	w28, [x29, #256]
   12958:	str	w28, [x29, #368]
   1295c:	mov	w22, w0
   12960:	cmn	w22, #0x1
   12964:	b.ne	12918 <argp_parse@@Base+0x710>  // b.any
   12968:	str	wzr, [x29, #336]
   1296c:	cmp	w28, #0x1
   12970:	b.le	129c8 <argp_parse@@Base+0x7c0>
   12974:	mov	x0, #0xfffffffffffffff8    	// #-8
   12978:	ldr	x1, [x29, #360]
   1297c:	add	x0, x0, w28, sxtw #3
   12980:	ldr	x0, [x1, x0]
   12984:	ldrb	w1, [x0]
   12988:	cmp	w1, #0x2d
   1298c:	b.ne	129c8 <argp_parse@@Base+0x7c0>  // b.any
   12990:	ldrb	w1, [x0, #1]
   12994:	cmp	w1, #0x2d
   12998:	b.ne	129c8 <argp_parse@@Base+0x7c0>  // b.any
   1299c:	ldrb	w0, [x0, #2]
   129a0:	cbnz	w0, 129c8 <argp_parse@@Base+0x7c0>
   129a4:	ldr	w0, [x29, #352]
   129a8:	str	w28, [x29, #380]
   129ac:	b	125f0 <argp_parse@@Base+0x3e8>
   129b0:	cmp	w0, #0x0
   129b4:	ccmp	w0, #0x7, #0x4, ne  // ne = any
   129b8:	b.ne	12734 <argp_parse@@Base+0x52c>  // b.any
   129bc:	ldr	w25, [x29, #372]
   129c0:	ldr	x1, [x29, #360]
   129c4:	b	12798 <argp_parse@@Base+0x590>
   129c8:	ldr	w0, [x29, #352]
   129cc:	b	125f0 <argp_parse@@Base+0x3e8>
   129d0:	ldr	x0, [x29, #104]
   129d4:	cbz	x0, 12c0c <argp_parse@@Base+0xa04>
   129d8:	ldp	x4, x3, [x29, #312]
   129dc:	str	w28, [x0]
   129e0:	sub	x20, x3, #0x48
   129e4:	cmp	x20, x4
   129e8:	b.cc	12e94 <argp_parse@@Base+0xc8c>  // b.lo, b.ul, b.last
   129ec:	mov	w22, #0x4                   	// #4
   129f0:	add	x23, x21, #0x70
   129f4:	movk	w22, #0x100, lsl #16
   129f8:	ldr	x3, [x20], #-72
   129fc:	mov	x2, x23
   12a00:	mov	w0, w22
   12a04:	mov	x1, #0x0                   	// #0
   12a08:	cbz	x3, 12a68 <argp_parse@@Base+0x860>
   12a0c:	ldr	x4, [x20, #136]
   12a10:	ldr	w5, [x20, #96]
   12a14:	str	x4, [x29, #400]
   12a18:	ldr	x4, [x20, #120]
   12a1c:	str	x4, [x29, #384]
   12a20:	ldr	x4, [x20, #128]
   12a24:	str	w5, [x29, #376]
   12a28:	str	x4, [x29, #392]
   12a2c:	blr	x3
   12a30:	mov	w19, w0
   12a34:	ldr	x1, [x29, #400]
   12a38:	str	x1, [x20, #136]
   12a3c:	ldr	x4, [x29, #312]
   12a40:	cmp	x4, x20
   12a44:	b.hi	126ac <argp_parse@@Base+0x4a4>  // b.pmore
   12a48:	cmp	w0, #0x0
   12a4c:	ccmp	w0, #0x7, #0x4, ne  // ne = any
   12a50:	b.ne	126b4 <argp_parse@@Base+0x4ac>  // b.any
   12a54:	ldr	x3, [x20], #-72
   12a58:	mov	x2, x23
   12a5c:	mov	w0, w22
   12a60:	mov	x1, #0x0                   	// #0
   12a64:	cbnz	x3, 12a0c <argp_parse@@Base+0x804>
   12a68:	cmp	x4, x20
   12a6c:	b.ls	129f8 <argp_parse@@Base+0x7f0>  // b.plast
   12a70:	ldr	x20, [x29, #320]
   12a74:	mov	w19, #0x0                   	// #0
   12a78:	sub	x20, x20, #0x48
   12a7c:	cmp	x20, x4
   12a80:	b.cs	126c4 <argp_parse@@Base+0x4bc>  // b.hs, b.nlast
   12a84:	b	1272c <argp_parse@@Base+0x524>
   12a88:	ldr	w0, [x29, #264]
   12a8c:	cmn	w0, #0x1
   12a90:	b.ne	12b70 <argp_parse@@Base+0x968>  // b.any
   12a94:	ldr	x0, [x29, #240]
   12a98:	mov	w1, w22
   12a9c:	bl	ab60 <strchr@plt>
   12aa0:	cbz	x0, 12c50 <argp_parse@@Base+0xa48>
   12aa4:	ldp	x26, x2, [x29, #312]
   12aa8:	cmp	x26, x2
   12aac:	b.cc	12ac0 <argp_parse@@Base+0x8b8>  // b.lo, b.ul, b.last
   12ab0:	b	12c50 <argp_parse@@Base+0xa48>
   12ab4:	add	x26, x26, #0x48
   12ab8:	cmp	x26, x2
   12abc:	b.cs	12c50 <argp_parse@@Base+0xa48>  // b.hs, b.nlast
   12ac0:	ldr	x1, [x26, #16]
   12ac4:	cmp	x0, x1
   12ac8:	b.cs	12ab4 <argp_parse@@Base+0x8ac>  // b.hs, b.nlast
   12acc:	ldr	x3, [x26]
   12ad0:	cbz	x3, 12c50 <argp_parse@@Base+0xa48>
   12ad4:	ldp	x6, x5, [x26, #48]
   12ad8:	mov	x2, x20
   12adc:	ldr	w7, [x26, #24]
   12ae0:	mov	w0, w22
   12ae4:	ldr	x4, [x26, #64]
   12ae8:	str	w7, [x29, #376]
   12aec:	ldr	x1, [x29, #272]
   12af0:	stp	x6, x5, [x29, #384]
   12af4:	mov	w27, #0x0                   	// #0
   12af8:	str	x4, [x29, #400]
   12afc:	blr	x3
   12b00:	mov	w19, w0
   12b04:	ldr	x1, [x29, #400]
   12b08:	str	x1, [x26, #64]
   12b0c:	b	12cfc <argp_parse@@Base+0xaf4>
   12b10:	sub	x1, x1, #0x8
   12b14:	add	w19, w19, #0x1
   12b18:	str	w19, [x29, #352]
   12b1c:	str	x1, [x29, #360]
   12b20:	b	125a4 <argp_parse@@Base+0x39c>
   12b24:	adrp	x19, 46000 <vasnprintf@@Base+0x1b1e0>
   12b28:	ldr	x1, [x2]
   12b2c:	str	x1, [x0]
   12b30:	ldr	x19, [x19, #4008]
   12b34:	ldr	x0, [x19]
   12b38:	cbnz	x0, 12260 <argp_parse@@Base+0x58>
   12b3c:	ldr	x0, [x22]
   12b40:	bl	a780 <last_component@plt>
   12b44:	str	x0, [x19]
   12b48:	b	12260 <argp_parse@@Base+0x58>
   12b4c:	ldr	x4, [x29, #312]
   12b50:	sub	x3, x3, #0x48
   12b54:	cmp	x4, x3
   12b58:	b.ls	12e34 <argp_parse@@Base+0xc2c>  // b.plast
   12b5c:	ldr	x0, [x29, #104]
   12b60:	cbnz	x0, 12e3c <argp_parse@@Base+0xc34>
   12b64:	nop
   12b68:	cmp	w19, #0x7
   12b6c:	b.ne	12b88 <argp_parse@@Base+0x980>  // b.any
   12b70:	ldr	x19, [x29, #416]
   12b74:	mov	x1, x19
   12b78:	mov	w19, #0x7                   	// #7
   12b7c:	add	x0, x21, #0x70
   12b80:	mov	w2, #0x104                 	// #260
   12b84:	bl	ad90 <argp_state_help@plt>
   12b88:	ldr	x3, [x29, #320]
   12b8c:	mov	x20, x3
   12b90:	ldr	x22, [x29, #312]
   12b94:	cmp	x3, x22
   12b98:	mov	x4, x22
   12b9c:	b.ls	126b8 <argp_parse@@Base+0x4b0>  // b.plast
   12ba0:	mov	w23, #0x5                   	// #5
   12ba4:	add	x24, x21, #0x70
   12ba8:	movk	w23, #0x100, lsl #16
   12bac:	nop
   12bb0:	ldr	x4, [x22]
   12bb4:	mov	x2, x24
   12bb8:	mov	w0, w23
   12bbc:	mov	x1, #0x0                   	// #0
   12bc0:	cbz	x4, 12bf4 <argp_parse@@Base+0x9ec>
   12bc4:	ldr	x3, [x22, #64]
   12bc8:	ldr	w5, [x22, #24]
   12bcc:	str	x3, [x29, #400]
   12bd0:	ldr	x3, [x22, #48]
   12bd4:	str	x3, [x29, #384]
   12bd8:	ldr	x3, [x22, #56]
   12bdc:	str	w5, [x29, #376]
   12be0:	str	x3, [x29, #392]
   12be4:	blr	x4
   12be8:	ldr	x0, [x29, #400]
   12bec:	str	x0, [x22, #64]
   12bf0:	ldr	x3, [x29, #320]
   12bf4:	add	x22, x22, #0x48
   12bf8:	mov	x20, x3
   12bfc:	cmp	x22, x3
   12c00:	b.cc	12bb0 <argp_parse@@Base+0x9a8>  // b.lo, b.ul, b.last
   12c04:	ldr	x4, [x29, #312]
   12c08:	b	126b8 <argp_parse@@Base+0x4b0>
   12c0c:	ldr	w0, [x29, #372]
   12c10:	ldr	x19, [x29, #416]
   12c14:	tbnz	w0, #1, 12b74 <argp_parse@@Base+0x96c>
   12c18:	cbz	x19, 12b74 <argp_parse@@Base+0x96c>
   12c1c:	mov	w2, #0x5                   	// #5
   12c20:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   12c24:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   12c28:	add	x1, x1, #0xb80
   12c2c:	add	x0, x0, #0x780
   12c30:	bl	ada0 <dcgettext@plt>
   12c34:	ldr	x2, [x29, #408]
   12c38:	mov	x1, x0
   12c3c:	mov	x0, x19
   12c40:	bl	afa0 <fprintf@plt>
   12c44:	ldr	x19, [x29, #416]
   12c48:	b	12b74 <argp_parse@@Base+0x96c>
   12c4c:	cbnz	w27, 12d18 <argp_parse@@Base+0xb10>
   12c50:	mov	w2, #0x5                   	// #5
   12c54:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   12c58:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   12c5c:	add	x1, x1, #0xc58
   12c60:	add	x0, x0, #0x780
   12c64:	bl	ada0 <dcgettext@plt>
   12c68:	mov	w2, w22
   12c6c:	mov	x3, x0
   12c70:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   12c74:	add	x0, x21, #0x70
   12c78:	add	x1, x1, #0xb68
   12c7c:	bl	ab80 <argp_error@plt>
   12c80:	add	w0, w22, #0x1
   12c84:	and	w0, w0, #0xfffffffd
   12c88:	cbnz	w0, 12b70 <argp_parse@@Base+0x968>
   12c8c:	b	12838 <argp_parse@@Base+0x630>
   12c90:	cmp	wzr, w22, asr #24
   12c94:	asr	w27, w22, #24
   12c98:	b.eq	12a94 <argp_parse@@Base+0x88c>  // b.none
   12c9c:	mov	x0, #0xffffffffffffffb8    	// #-72
   12ca0:	mov	w1, #0x48                  	// #72
   12ca4:	ldr	x3, [x29, #312]
   12ca8:	smaddl	x1, w27, w1, x0
   12cac:	ands	w2, w22, #0x800000
   12cb0:	and	w0, w22, #0xffffff
   12cb4:	add	x26, x3, x1
   12cb8:	mov	w4, #0xff000000            	// #-16777216
   12cbc:	csel	w2, w2, w4, eq  // eq = none
   12cc0:	ldr	x3, [x3, x1]
   12cc4:	orr	w0, w0, w2
   12cc8:	cbz	x3, 12d18 <argp_parse@@Base+0xb10>
   12ccc:	ldp	x6, x5, [x26, #48]
   12cd0:	mov	x2, x20
   12cd4:	ldr	w7, [x26, #24]
   12cd8:	ldr	x4, [x26, #64]
   12cdc:	str	w7, [x29, #376]
   12ce0:	ldr	x1, [x29, #272]
   12ce4:	stp	x6, x5, [x29, #384]
   12ce8:	str	x4, [x29, #400]
   12cec:	blr	x3
   12cf0:	mov	w19, w0
   12cf4:	ldr	x0, [x29, #400]
   12cf8:	str	x0, [x26, #64]
   12cfc:	cmp	w19, #0x7
   12d00:	b.eq	12c4c <argp_parse@@Base+0xa44>  // b.none
   12d04:	cbnz	w19, 12b68 <argp_parse@@Base+0x960>
   12d08:	ldr	w2, [x29, #336]
   12d0c:	ldr	w0, [x29, #352]
   12d10:	ldr	w28, [x29, #368]
   12d14:	b	125d8 <argp_parse@@Base+0x3d0>
   12d18:	ldr	x0, [x29, #248]
   12d1c:	ldr	w1, [x0, #24]
   12d20:	cmp	w22, w1
   12d24:	b.ne	12d38 <argp_parse@@Base+0xb30>  // b.any
   12d28:	b	12da4 <argp_parse@@Base+0xb9c>
   12d2c:	ldr	w1, [x0, #24]
   12d30:	cmp	w22, w1
   12d34:	b.eq	12da4 <argp_parse@@Base+0xb9c>  // b.none
   12d38:	ldr	x1, [x0]
   12d3c:	add	x0, x0, #0x20
   12d40:	cbnz	x1, 12d2c <argp_parse@@Base+0xb24>
   12d44:	adrp	x19, 2c000 <vasnprintf@@Base+0x11e0>
   12d48:	add	x19, x19, #0xb60
   12d4c:	mov	w2, #0x5                   	// #5
   12d50:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   12d54:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   12d58:	add	x1, x1, #0xc58
   12d5c:	add	x0, x0, #0x780
   12d60:	bl	ada0 <dcgettext@plt>
   12d64:	mov	x2, x19
   12d68:	mov	x3, x0
   12d6c:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   12d70:	add	x0, x21, #0x70
   12d74:	add	x1, x1, #0xb70
   12d78:	bl	ab80 <argp_error@plt>
   12d7c:	add	w0, w22, #0x1
   12d80:	and	w0, w0, #0xfffffffd
   12d84:	cbnz	w0, 12b70 <argp_parse@@Base+0x968>
   12d88:	b	12838 <argp_parse@@Base+0x630>
   12d8c:	adrp	x4, 46000 <vasnprintf@@Base+0x1b1e0>
   12d90:	ldr	x4, [x4, #4056]
   12d94:	ldr	x4, [x4]
   12d98:	cbnz	x4, 12310 <argp_parse@@Base+0x108>
   12d9c:	add	x4, x3, #0x20
   12da0:	b	12320 <argp_parse@@Base+0x118>
   12da4:	ldr	x19, [x0]
   12da8:	cbnz	x19, 12d4c <argp_parse@@Base+0xb44>
   12dac:	b	12d44 <argp_parse@@Base+0xb3c>
   12db0:	ldr	x4, [x29, #312]
   12db4:	sub	x20, x3, #0x48
   12db8:	cmp	x20, x4
   12dbc:	b.cc	12e74 <argp_parse@@Base+0xc6c>  // b.lo, b.ul, b.last
   12dc0:	cmp	w19, #0x0
   12dc4:	ccmp	w19, #0x7, #0x4, ne  // ne = any
   12dc8:	b.ne	12e34 <argp_parse@@Base+0xc2c>  // b.any
   12dcc:	mov	w22, #0x1                   	// #1
   12dd0:	add	x24, x21, #0x70
   12dd4:	movk	w22, #0x100, lsl #16
   12dd8:	ldr	x3, [x20], #-72
   12ddc:	mov	x2, x24
   12de0:	mov	w0, w22
   12de4:	mov	x1, #0x0                   	// #0
   12de8:	cbz	x3, 12e54 <argp_parse@@Base+0xc4c>
   12dec:	ldr	x4, [x20, #136]
   12df0:	ldr	w5, [x20, #96]
   12df4:	str	x4, [x29, #400]
   12df8:	ldr	x4, [x20, #120]
   12dfc:	str	x4, [x29, #384]
   12e00:	ldr	x4, [x20, #128]
   12e04:	str	w5, [x29, #376]
   12e08:	str	x4, [x29, #392]
   12e0c:	blr	x3
   12e10:	mov	w19, w0
   12e14:	ldr	x1, [x29, #400]
   12e18:	str	x1, [x20, #136]
   12e1c:	ldr	x4, [x29, #312]
   12e20:	cmp	x4, x20
   12e24:	b.hi	12e74 <argp_parse@@Base+0xc6c>  // b.pmore
   12e28:	cmp	w0, #0x0
   12e2c:	ccmp	w0, #0x7, #0x4, ne  // ne = any
   12e30:	b.eq	12dd8 <argp_parse@@Base+0xbd0>  // b.none
   12e34:	ldr	x0, [x29, #104]
   12e38:	cbz	x0, 12e48 <argp_parse@@Base+0xc40>
   12e3c:	ldr	x1, [x29, #104]
   12e40:	ldr	w0, [x29, #368]
   12e44:	str	w0, [x1]
   12e48:	cbnz	w19, 12b68 <argp_parse@@Base+0x960>
   12e4c:	ldr	x3, [x29, #320]
   12e50:	b	129e0 <argp_parse@@Base+0x7d8>
   12e54:	cmp	x4, x20
   12e58:	b.ls	12dd8 <argp_parse@@Base+0xbd0>  // b.plast
   12e5c:	ldr	x3, [x29, #320]
   12e60:	ldr	x1, [x29, #104]
   12e64:	cbz	x1, 129e0 <argp_parse@@Base+0x7d8>
   12e68:	ldr	w0, [x29, #368]
   12e6c:	str	w0, [x1]
   12e70:	b	129e0 <argp_parse@@Base+0x7d8>
   12e74:	cmp	w19, #0x7
   12e78:	b.eq	12e5c <argp_parse@@Base+0xc54>  // b.none
   12e7c:	b	12e34 <argp_parse@@Base+0xc2c>
   12e80:	sub	x20, x3, #0x48
   12e84:	cmp	x4, x20
   12e88:	b.ls	12dcc <argp_parse@@Base+0xbc4>  // b.plast
   12e8c:	ldr	x1, [x29, #104]
   12e90:	cbnz	x1, 12e68 <argp_parse@@Base+0xc60>
   12e94:	mov	w19, #0x0                   	// #0
   12e98:	b	1272c <argp_parse@@Base+0x524>
   12e9c:	ldr	x4, [x29, #312]
   12ea0:	sub	x20, x3, #0x48
   12ea4:	cmp	x4, x20
   12ea8:	b.ls	12dcc <argp_parse@@Base+0xbc4>  // b.plast
   12eac:	b	12e60 <argp_parse@@Base+0xc58>
   12eb0:	mov	w19, #0xc                   	// #12
   12eb4:	b	12734 <argp_parse@@Base+0x52c>
   12eb8:	mov	x27, x26
   12ebc:	ldr	x3, [x29, #320]
   12ec0:	b	12830 <argp_parse@@Base+0x628>
   12ec4:	cbnz	w19, 12ed8 <argp_parse@@Base+0xcd0>
   12ec8:	ldr	w0, [x29, #352]
   12ecc:	str	w0, [x29, #368]
   12ed0:	mov	w1, w0
   12ed4:	b	12688 <argp_parse@@Base+0x480>
   12ed8:	cmp	w19, #0x7
   12edc:	b.eq	12838 <argp_parse@@Base+0x630>  // b.none
   12ee0:	b	12b8c <argp_parse@@Base+0x984>
   12ee4:	nop

0000000000012ee8 <_argp_input@@Base>:
   12ee8:	cbz	x1, 12f20 <_argp_input@@Base+0x38>
   12eec:	ldr	x2, [x1, #88]
   12ef0:	ldp	x1, x3, [x2, #80]
   12ef4:	cmp	x1, x3
   12ef8:	b.cc	12f0c <_argp_input@@Base+0x24>  // b.lo, b.ul, b.last
   12efc:	b	12f20 <_argp_input@@Base+0x38>
   12f00:	add	x1, x1, #0x48
   12f04:	cmp	x1, x3
   12f08:	b.cs	12f20 <_argp_input@@Base+0x38>  // b.hs, b.nlast
   12f0c:	ldr	x2, [x1, #8]
   12f10:	cmp	x2, x0
   12f14:	b.ne	12f00 <_argp_input@@Base+0x18>  // b.any
   12f18:	ldr	x0, [x1, #48]
   12f1c:	ret
   12f20:	mov	x0, #0x0                   	// #0
   12f24:	ret

0000000000012f28 <argp_usage@@Base>:
   12f28:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   12f2c:	mov	w2, #0x106                 	// #262
   12f30:	ldr	x1, [x1, #3816]
   12f34:	ldr	x1, [x1]
   12f38:	b	ad90 <argp_state_help@plt>
   12f3c:	nop

0000000000012f40 <_option_is_short@@Base>:
   12f40:	ldr	w2, [x0, #24]
   12f44:	tbnz	w2, #3, 12f88 <_option_is_short@@Base+0x48>
   12f48:	stp	x29, x30, [sp, #-32]!
   12f4c:	mov	x1, x0
   12f50:	and	w0, w2, #0x8
   12f54:	mov	x29, sp
   12f58:	str	x19, [sp, #16]
   12f5c:	ldr	w19, [x1, #8]
   12f60:	sub	w1, w19, #0x1
   12f64:	cmp	w1, #0xfe
   12f68:	b.hi	12f7c <_option_is_short@@Base+0x3c>  // b.pmore
   12f6c:	bl	a9d0 <__ctype_b_loc@plt>
   12f70:	ldr	x0, [x0]
   12f74:	ldrh	w0, [x0, w19, sxtw #1]
   12f78:	ubfx	x0, x0, #14, #1
   12f7c:	ldr	x19, [sp, #16]
   12f80:	ldp	x29, x30, [sp], #32
   12f84:	ret
   12f88:	mov	w0, #0x0                   	// #0
   12f8c:	ret

0000000000012f90 <_option_is_end@@Base>:
   12f90:	mov	x1, x0
   12f94:	ldr	w0, [x0, #8]
   12f98:	cbnz	w0, 12fa8 <_option_is_end@@Base+0x18>
   12f9c:	ldr	x2, [x1]
   12fa0:	cbz	x2, 12fb0 <_option_is_end@@Base+0x20>
   12fa4:	ret
   12fa8:	mov	w0, #0x0                   	// #0
   12fac:	ret
   12fb0:	ldr	x2, [x1, #32]
   12fb4:	cbnz	x2, 12fa4 <_option_is_end@@Base+0x14>
   12fb8:	ldr	w0, [x1, #40]
   12fbc:	cmp	w0, #0x0
   12fc0:	cset	w0, eq  // eq = none
   12fc4:	ret
   12fc8:	ldr	x0, [x0, #48]
   12fcc:	ret
   12fd0:	ldp	x2, x1, [x0, #40]
   12fd4:	stp	x0, x1, [x8, #8]
   12fd8:	ldr	x0, [x0]
   12fdc:	str	x0, [x8]
   12fe0:	str	x2, [x8, #24]
   12fe4:	add	x1, x2, x1, lsl #3
   12fe8:	str	x1, [x8, #32]
   12fec:	ret
   12ff0:	ret
   12ff4:	nop
   12ff8:	ldp	x5, x4, [x0, #8]
   12ffc:	mov	x3, x0
   13000:	ldr	x0, [x5, #48]
   13004:	cmp	x4, x0
   13008:	b.eq	1306c <_option_is_end@@Base+0xdc>  // b.none
   1300c:	add	x6, x0, #0x1
   13010:	cmp	x4, x6
   13014:	b.ne	13074 <_option_is_end@@Base+0xe4>  // b.any
   13018:	ldr	x4, [x3, #24]
   1301c:	sub	x4, x4, #0x8
   13020:	stp	x0, x4, [x3, #16]
   13024:	ldr	x0, [x3, #32]
   13028:	sub	x0, x0, #0x8
   1302c:	str	x0, [x3, #32]
   13030:	cmp	x4, x0
   13034:	mov	w0, #0x0                   	// #0
   13038:	b.cs	13068 <_option_is_end@@Base+0xd8>  // b.hs, b.nlast
   1303c:	ldr	x0, [x4]
   13040:	str	x0, [x1]
   13044:	cbz	x2, 1305c <_option_is_end@@Base+0xcc>
   13048:	ldr	x0, [x5, #40]
   1304c:	sub	x0, x4, x0
   13050:	asr	x0, x0, #3
   13054:	add	x0, x0, #0x1
   13058:	str	x0, [x2]
   1305c:	add	x4, x4, #0x8
   13060:	mov	w0, #0x1                   	// #1
   13064:	str	x4, [x3, #24]
   13068:	ret
   1306c:	ldp	x4, x0, [x3, #24]
   13070:	b	13030 <_option_is_end@@Base+0xa0>
   13074:	stp	x29, x30, [sp, #-16]!
   13078:	mov	x29, sp
   1307c:	bl	a900 <abort@plt>
   13080:	cmp	x1, x2
   13084:	b.hi	130b4 <_option_is_end@@Base+0x124>  // b.pmore
   13088:	ldr	x3, [x0, #48]
   1308c:	cmp	x3, x2
   13090:	b.cc	130b4 <_option_is_end@@Base+0x124>  // b.lo, b.ul, b.last
   13094:	ldr	x4, [x0, #40]
   13098:	stp	x0, x3, [x8, #8]
   1309c:	ldr	x0, [x0]
   130a0:	add	x1, x4, x1, lsl #3
   130a4:	add	x2, x4, x2, lsl #3
   130a8:	str	x0, [x8]
   130ac:	stp	x1, x2, [x8, #24]
   130b0:	ret
   130b4:	stp	x29, x30, [sp, #-16]!
   130b8:	mov	x29, sp
   130bc:	bl	a900 <abort@plt>
   130c0:	stp	x29, x30, [sp, #-48]!
   130c4:	mov	x29, sp
   130c8:	stp	x21, x22, [sp, #32]
   130cc:	ldr	x21, [x0, #48]
   130d0:	stp	x19, x20, [sp, #16]
   130d4:	cmp	x21, x1
   130d8:	b.ls	1313c <_option_is_end@@Base+0x1ac>  // b.plast
   130dc:	mov	x19, x1
   130e0:	mov	x20, x0
   130e4:	ldr	x1, [x0, #24]
   130e8:	ldr	x22, [x0, #40]
   130ec:	cbz	x1, 130f8 <_option_is_end@@Base+0x168>
   130f0:	ldr	x0, [x22, x19, lsl #3]
   130f4:	blr	x1
   130f8:	add	x0, x19, #0x1
   130fc:	cmp	x21, x0
   13100:	b.ls	13120 <_option_is_end@@Base+0x190>  // b.plast
   13104:	add	x3, x22, x21, lsl #3
   13108:	add	x1, x22, x19, lsl #3
   1310c:	sub	x3, x3, #0x8
   13110:	ldr	x2, [x1, #8]
   13114:	str	x2, [x1], #8
   13118:	cmp	x1, x3
   1311c:	b.ne	13110 <_option_is_end@@Base+0x180>  // b.any
   13120:	sub	x21, x21, #0x1
   13124:	str	x21, [x20, #48]
   13128:	mov	w0, #0x1                   	// #1
   1312c:	ldp	x19, x20, [sp, #16]
   13130:	ldp	x21, x22, [sp, #32]
   13134:	ldp	x29, x30, [sp], #48
   13138:	ret
   1313c:	bl	a900 <abort@plt>
   13140:	stp	x29, x30, [sp, #-48]!
   13144:	mov	x29, sp
   13148:	stp	x21, x22, [sp, #32]
   1314c:	mov	x21, x0
   13150:	sub	x0, x1, #0x1
   13154:	stp	x19, x20, [sp, #16]
   13158:	ldr	x22, [x21, #48]
   1315c:	cmp	x22, x0
   13160:	b.ls	131c0 <_option_is_end@@Base+0x230>  // b.plast
   13164:	mov	x19, x1
   13168:	ldr	x1, [x21, #24]
   1316c:	ldr	x20, [x21, #40]
   13170:	cbz	x1, 1317c <_option_is_end@@Base+0x1ec>
   13174:	ldr	x0, [x20, x0, lsl #3]
   13178:	blr	x1
   1317c:	cmp	x19, x22
   13180:	b.cs	131a4 <_option_is_end@@Base+0x214>  // b.hs, b.nlast
   13184:	add	x1, x20, x19, lsl #3
   13188:	add	x3, x20, x22, lsl #3
   1318c:	nop
   13190:	ldr	x2, [x1]
   13194:	stur	x2, [x1, #-8]
   13198:	add	x1, x1, #0x8
   1319c:	cmp	x1, x3
   131a0:	b.ne	13190 <_option_is_end@@Base+0x200>  // b.any
   131a4:	sub	x22, x22, #0x1
   131a8:	mov	w0, #0x1                   	// #1
   131ac:	ldp	x19, x20, [sp, #16]
   131b0:	str	x22, [x21, #48]
   131b4:	ldp	x21, x22, [sp, #32]
   131b8:	ldp	x29, x30, [sp], #48
   131bc:	ret
   131c0:	bl	a900 <abort@plt>
   131c4:	nop
   131c8:	ldr	x3, [x0, #48]
   131cc:	cmp	x3, x1
   131d0:	b.ls	131e4 <_option_is_end@@Base+0x254>  // b.plast
   131d4:	ldr	x3, [x0, #40]
   131d8:	add	x0, x1, #0x1
   131dc:	str	x2, [x3, x1, lsl #3]
   131e0:	ret
   131e4:	stp	x29, x30, [sp, #-16]!
   131e8:	mov	x29, sp
   131ec:	bl	a900 <abort@plt>
   131f0:	ldr	x2, [x0, #48]
   131f4:	cmp	x2, x1
   131f8:	b.ls	13208 <_option_is_end@@Base+0x278>  // b.plast
   131fc:	ldr	x0, [x0, #40]
   13200:	ldr	x0, [x0, x1, lsl #3]
   13204:	ret
   13208:	stp	x29, x30, [sp, #-16]!
   1320c:	mov	x29, sp
   13210:	bl	a900 <abort@plt>
   13214:	nop
   13218:	ldr	x0, [x0, #48]
   1321c:	sub	x1, x1, #0x1
   13220:	cmp	x0, x1
   13224:	b.ls	13230 <_option_is_end@@Base+0x2a0>  // b.plast
   13228:	mov	x0, x1
   1322c:	ret
   13230:	stp	x29, x30, [sp, #-16]!
   13234:	mov	x29, sp
   13238:	bl	a900 <abort@plt>
   1323c:	nop
   13240:	ldr	x0, [x0, #48]
   13244:	sub	x2, x1, #0x1
   13248:	cmp	x0, x2
   1324c:	b.ls	1325c <_option_is_end@@Base+0x2cc>  // b.plast
   13250:	cmp	x1, x0
   13254:	csinc	x0, xzr, x1, cs  // cs = hs, nlast
   13258:	ret
   1325c:	stp	x29, x30, [sp, #-16]!
   13260:	mov	x29, sp
   13264:	bl	a900 <abort@plt>
   13268:	ldr	x3, [x0, #48]
   1326c:	sub	x1, x1, #0x1
   13270:	cmp	x3, x1
   13274:	b.ls	13288 <_option_is_end@@Base+0x2f8>  // b.plast
   13278:	ldr	x3, [x0, #40]
   1327c:	mov	w0, #0x0                   	// #0
   13280:	str	x2, [x3, x1, lsl #3]
   13284:	ret
   13288:	stp	x29, x30, [sp, #-16]!
   1328c:	mov	x29, sp
   13290:	bl	a900 <abort@plt>
   13294:	nop
   13298:	ldr	x2, [x0, #48]
   1329c:	sub	x1, x1, #0x1
   132a0:	cmp	x2, x1
   132a4:	b.ls	132b4 <_option_is_end@@Base+0x324>  // b.plast
   132a8:	ldr	x0, [x0, #40]
   132ac:	ldr	x0, [x0, x1, lsl #3]
   132b0:	ret
   132b4:	stp	x29, x30, [sp, #-16]!
   132b8:	mov	x29, sp
   132bc:	bl	a900 <abort@plt>
   132c0:	stp	x29, x30, [sp, #-64]!
   132c4:	mov	x29, sp
   132c8:	stp	x21, x22, [sp, #32]
   132cc:	ldr	x21, [x0, #40]
   132d0:	stp	x19, x20, [sp, #16]
   132d4:	mov	x20, x0
   132d8:	cbz	x21, 1331c <_option_is_end@@Base+0x38c>
   132dc:	ldr	x22, [x0, #24]
   132e0:	cbz	x22, 13314 <_option_is_end@@Base+0x384>
   132e4:	str	x23, [sp, #48]
   132e8:	ldr	x23, [x0, #48]
   132ec:	cbz	x23, 13330 <_option_is_end@@Base+0x3a0>
   132f0:	mov	x19, #0x0                   	// #0
   132f4:	nop
   132f8:	ldr	x0, [x21, x19, lsl #3]
   132fc:	add	x19, x19, #0x1
   13300:	blr	x22
   13304:	cmp	x23, x19
   13308:	b.ne	132f8 <_option_is_end@@Base+0x368>  // b.any
   1330c:	ldr	x21, [x20, #40]
   13310:	ldr	x23, [sp, #48]
   13314:	mov	x0, x21
   13318:	bl	aa50 <free@plt>
   1331c:	mov	x0, x20
   13320:	ldp	x19, x20, [sp, #16]
   13324:	ldp	x21, x22, [sp, #32]
   13328:	ldp	x29, x30, [sp], #64
   1332c:	b	aa50 <free@plt>
   13330:	ldr	x23, [sp, #48]
   13334:	b	13314 <_option_is_end@@Base+0x384>
   13338:	stp	x29, x30, [sp, #-64]!
   1333c:	mov	x29, sp
   13340:	stp	x19, x20, [sp, #16]
   13344:	mov	x20, x2
   13348:	mov	x19, x3
   1334c:	stp	x21, x22, [sp, #32]
   13350:	mov	x22, x0
   13354:	mov	x21, x1
   13358:	mov	x0, #0x40                  	// #64
   1335c:	str	x23, [sp, #48]
   13360:	and	w23, w4, #0xff
   13364:	bl	a5f0 <malloc@plt>
   13368:	cbz	x0, 13380 <_option_is_end@@Base+0x3f0>
   1336c:	stp	x22, x21, [x0]
   13370:	stp	x20, x19, [x0, #16]
   13374:	strb	w23, [x0, #32]
   13378:	stp	xzr, xzr, [x0, #40]
   1337c:	str	xzr, [x0, #56]
   13380:	ldp	x19, x20, [sp, #16]
   13384:	ldp	x21, x22, [sp, #32]
   13388:	ldr	x23, [sp, #48]
   1338c:	ldp	x29, x30, [sp], #64
   13390:	ret
   13394:	nop
   13398:	stp	x29, x30, [sp, #-80]!
   1339c:	mov	x29, sp
   133a0:	stp	x19, x20, [sp, #16]
   133a4:	mov	x20, x5
   133a8:	stp	x21, x22, [sp, #32]
   133ac:	mov	x22, x2
   133b0:	mov	x21, x6
   133b4:	stp	x23, x24, [sp, #48]
   133b8:	mov	x24, x0
   133bc:	mov	x23, x1
   133c0:	mov	x0, #0x40                  	// #64
   133c4:	stp	x25, x26, [sp, #64]
   133c8:	mov	x25, x3
   133cc:	and	w26, w4, #0xff
   133d0:	bl	a5f0 <malloc@plt>
   133d4:	mov	x19, x0
   133d8:	cbz	x0, 1341c <_option_is_end@@Base+0x48c>
   133dc:	stp	x24, x23, [x0]
   133e0:	stp	x22, x25, [x0, #16]
   133e4:	strb	w26, [x0, #32]
   133e8:	cbz	x20, 13438 <_option_is_end@@Base+0x4a8>
   133ec:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   133f0:	cmp	x20, x0
   133f4:	b.hi	13444 <_option_is_end@@Base+0x4b4>  // b.pmore
   133f8:	lsl	x22, x20, #3
   133fc:	mov	x0, x22
   13400:	bl	a5f0 <malloc@plt>
   13404:	str	x0, [x19, #40]
   13408:	cbz	x0, 13444 <_option_is_end@@Base+0x4b4>
   1340c:	mov	x2, x22
   13410:	mov	x1, x21
   13414:	bl	a2c0 <memcpy@plt>
   13418:	stp	x20, x20, [x19, #48]
   1341c:	mov	x0, x19
   13420:	ldp	x19, x20, [sp, #16]
   13424:	ldp	x21, x22, [sp, #32]
   13428:	ldp	x23, x24, [sp, #48]
   1342c:	ldp	x25, x26, [sp, #64]
   13430:	ldp	x29, x30, [sp], #80
   13434:	ret
   13438:	str	xzr, [x0, #40]
   1343c:	stp	x20, x20, [x19, #48]
   13440:	b	1341c <_option_is_end@@Base+0x48c>
   13444:	mov	x0, x19
   13448:	mov	x19, #0x0                   	// #0
   1344c:	bl	aa50 <free@plt>
   13450:	mov	x0, x19
   13454:	ldp	x19, x20, [sp, #16]
   13458:	ldp	x21, x22, [sp, #32]
   1345c:	ldp	x23, x24, [sp, #48]
   13460:	ldp	x25, x26, [sp, #64]
   13464:	ldp	x29, x30, [sp], #80
   13468:	ret
   1346c:	nop
   13470:	stp	x29, x30, [sp, #-64]!
   13474:	cmp	x2, x3
   13478:	mov	x29, sp
   1347c:	stp	x19, x20, [sp, #16]
   13480:	stp	x21, x22, [sp, #32]
   13484:	stp	x23, x24, [sp, #48]
   13488:	b.hi	1356c <_option_is_end@@Base+0x5dc>  // b.pmore
   1348c:	mov	x24, x0
   13490:	mov	x21, x3
   13494:	ldr	x0, [x0, #48]
   13498:	cmp	x0, x3
   1349c:	b.cc	1356c <_option_is_end@@Base+0x5dc>  // b.lo, b.ul, b.last
   134a0:	mov	x20, x2
   134a4:	mov	x22, x1
   134a8:	mov	x23, x4
   134ac:	cmp	x20, x21
   134b0:	b.cs	134e4 <_option_is_end@@Base+0x554>  // b.hs, b.nlast
   134b4:	sub	x19, x21, x20
   134b8:	mov	x1, x23
   134bc:	ldr	x2, [x24, #40]
   134c0:	add	x19, x20, x19, lsr #1
   134c4:	ldr	x0, [x2, x19, lsl #3]
   134c8:	blr	x22
   134cc:	cmp	w0, #0x0
   134d0:	b.lt	134fc <_option_is_end@@Base+0x56c>  // b.tstop
   134d4:	b.eq	13504 <_option_is_end@@Base+0x574>  // b.none
   134d8:	mov	x21, x19
   134dc:	cmp	x20, x21
   134e0:	b.cc	134b4 <_option_is_end@@Base+0x524>  // b.lo, b.ul, b.last
   134e4:	mov	x0, #0xffffffffffffffff    	// #-1
   134e8:	ldp	x19, x20, [sp, #16]
   134ec:	ldp	x21, x22, [sp, #32]
   134f0:	ldp	x23, x24, [sp, #48]
   134f4:	ldp	x29, x30, [sp], #64
   134f8:	ret
   134fc:	add	x20, x19, #0x1
   13500:	b	134ac <_option_is_end@@Base+0x51c>
   13504:	cmp	x20, x19
   13508:	b.cc	13528 <_option_is_end@@Base+0x598>  // b.lo, b.ul, b.last
   1350c:	b	13554 <_option_is_end@@Base+0x5c4>
   13510:	b.ne	1356c <_option_is_end@@Base+0x5dc>  // b.any
   13514:	cmp	x21, x20
   13518:	b.eq	13554 <_option_is_end@@Base+0x5c4>  // b.none
   1351c:	sub	x19, x21, #0x1
   13520:	cmp	x19, x20
   13524:	b.ls	13554 <_option_is_end@@Base+0x5c4>  // b.plast
   13528:	sub	x21, x19, x20
   1352c:	mov	x1, x23
   13530:	ldr	x0, [x24, #40]
   13534:	add	x21, x20, x21, lsr #1
   13538:	ldr	x0, [x0, x21, lsl #3]
   1353c:	blr	x22
   13540:	cmp	w0, #0x0
   13544:	b.ge	13510 <_option_is_end@@Base+0x580>  // b.tcont
   13548:	add	x20, x21, #0x1
   1354c:	cmp	x19, x20
   13550:	b.hi	13528 <_option_is_end@@Base+0x598>  // b.pmore
   13554:	mov	x0, x20
   13558:	ldp	x19, x20, [sp, #16]
   1355c:	ldp	x21, x22, [sp, #32]
   13560:	ldp	x23, x24, [sp, #48]
   13564:	ldp	x29, x30, [sp], #64
   13568:	ret
   1356c:	bl	a900 <abort@plt>
   13570:	ldr	x3, [x0, #48]
   13574:	mov	x4, x2
   13578:	mov	x2, #0x0                   	// #0
   1357c:	b	13470 <_option_is_end@@Base+0x4e0>
   13580:	stp	x29, x30, [sp, #-16]!
   13584:	mov	x29, sp
   13588:	bl	13470 <_option_is_end@@Base+0x4e0>
   1358c:	add	x0, x0, #0x1
   13590:	ldp	x29, x30, [sp], #16
   13594:	ret
   13598:	stp	x29, x30, [sp, #-16]!
   1359c:	mov	x4, x2
   135a0:	mov	x2, #0x0                   	// #0
   135a4:	mov	x29, sp
   135a8:	ldr	x3, [x0, #48]
   135ac:	bl	13470 <_option_is_end@@Base+0x4e0>
   135b0:	add	x0, x0, #0x1
   135b4:	ldp	x29, x30, [sp], #16
   135b8:	ret
   135bc:	nop
   135c0:	stp	x29, x30, [sp, #-32]!
   135c4:	mov	x4, x2
   135c8:	mov	x2, #0x0                   	// #0
   135cc:	mov	x29, sp
   135d0:	ldr	x3, [x0, #48]
   135d4:	str	x19, [sp, #16]
   135d8:	mov	x19, x0
   135dc:	bl	13470 <_option_is_end@@Base+0x4e0>
   135e0:	cmn	x0, #0x1
   135e4:	b.ne	135f8 <_option_is_end@@Base+0x668>  // b.any
   135e8:	mov	w0, #0x0                   	// #0
   135ec:	ldr	x19, [sp, #16]
   135f0:	ldp	x29, x30, [sp], #32
   135f4:	ret
   135f8:	mov	x1, x0
   135fc:	mov	x0, x19
   13600:	ldr	x19, [sp, #16]
   13604:	ldp	x29, x30, [sp], #32
   13608:	b	130c0 <_option_is_end@@Base+0x130>
   1360c:	nop
   13610:	stp	x29, x30, [sp, #-64]!
   13614:	mov	x29, sp
   13618:	stp	x21, x22, [sp, #32]
   1361c:	mov	x21, x0
   13620:	ldr	x0, [x0, #48]
   13624:	stp	x19, x20, [sp, #16]
   13628:	cmp	x0, x2
   1362c:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
   13630:	b.hi	136e8 <_option_is_end@@Base+0x758>  // b.pmore
   13634:	mov	x20, x2
   13638:	mov	x19, x1
   1363c:	cmp	x1, x2
   13640:	b.cs	136d4 <_option_is_end@@Base+0x744>  // b.hs, b.nlast
   13644:	ldr	x1, [x21, #40]
   13648:	str	x23, [sp, #48]
   1364c:	ldr	x23, [x21, #8]
   13650:	mov	x22, x3
   13654:	cbz	x23, 136b8 <_option_is_end@@Base+0x728>
   13658:	ldr	x1, [x1, x19, lsl #3]
   1365c:	mov	x0, x22
   13660:	blr	x23
   13664:	tst	w0, #0xff
   13668:	b.ne	13694 <_option_is_end@@Base+0x704>  // b.any
   1366c:	nop
   13670:	add	x19, x19, #0x1
   13674:	cmp	x20, x19
   13678:	b.eq	136d0 <_option_is_end@@Base+0x740>  // b.none
   1367c:	ldr	x1, [x21, #40]
   13680:	mov	x0, x22
   13684:	ldr	x1, [x1, x19, lsl #3]
   13688:	blr	x23
   1368c:	tst	w0, #0xff
   13690:	b.eq	13670 <_option_is_end@@Base+0x6e0>  // b.none
   13694:	ldr	x23, [sp, #48]
   13698:	mov	x0, x19
   1369c:	ldp	x19, x20, [sp, #16]
   136a0:	ldp	x21, x22, [sp, #32]
   136a4:	ldp	x29, x30, [sp], #64
   136a8:	ret
   136ac:	add	x19, x19, #0x1
   136b0:	cmp	x20, x19
   136b4:	b.eq	136d0 <_option_is_end@@Base+0x740>  // b.none
   136b8:	ldr	x0, [x1, x19, lsl #3]
   136bc:	cmp	x22, x0
   136c0:	b.ne	136ac <_option_is_end@@Base+0x71c>  // b.any
   136c4:	mov	x0, x19
   136c8:	ldr	x23, [sp, #48]
   136cc:	b	1369c <_option_is_end@@Base+0x70c>
   136d0:	ldr	x23, [sp, #48]
   136d4:	mov	x0, #0xffffffffffffffff    	// #-1
   136d8:	ldp	x19, x20, [sp, #16]
   136dc:	ldp	x21, x22, [sp, #32]
   136e0:	ldp	x29, x30, [sp], #64
   136e4:	ret
   136e8:	str	x23, [sp, #48]
   136ec:	bl	a900 <abort@plt>
   136f0:	stp	x29, x30, [sp, #-32]!
   136f4:	mov	x3, x1
   136f8:	mov	x1, #0x0                   	// #0
   136fc:	mov	x29, sp
   13700:	ldr	x2, [x0, #48]
   13704:	str	x19, [sp, #16]
   13708:	mov	x19, x0
   1370c:	bl	13610 <_option_is_end@@Base+0x680>
   13710:	cmn	x0, #0x1
   13714:	b.ne	13728 <_option_is_end@@Base+0x798>  // b.any
   13718:	mov	w0, #0x0                   	// #0
   1371c:	ldr	x19, [sp, #16]
   13720:	ldp	x29, x30, [sp], #32
   13724:	ret
   13728:	mov	x1, x0
   1372c:	mov	x0, x19
   13730:	ldr	x19, [sp, #16]
   13734:	ldp	x29, x30, [sp], #32
   13738:	b	130c0 <_option_is_end@@Base+0x130>
   1373c:	nop
   13740:	stp	x29, x30, [sp, #-16]!
   13744:	mov	x29, sp
   13748:	bl	13610 <_option_is_end@@Base+0x680>
   1374c:	add	x0, x0, #0x1
   13750:	ldp	x29, x30, [sp], #16
   13754:	ret
   13758:	stp	x29, x30, [sp, #-48]!
   1375c:	mov	x29, sp
   13760:	stp	x19, x20, [sp, #16]
   13764:	ldr	x19, [x1]
   13768:	tbnz	x19, #63, 137bc <_option_is_end@@Base+0x82c>
   1376c:	lsl	x19, x19, #1
   13770:	str	x21, [sp, #32]
   13774:	add	x19, x19, #0x1
   13778:	mov	x21, x0
   1377c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   13780:	cmp	x19, x0
   13784:	b.hi	137b8 <_option_is_end@@Base+0x828>  // b.pmore
   13788:	ldr	x0, [x21]
   1378c:	mov	x20, x1
   13790:	lsl	x1, x19, #3
   13794:	bl	a7e0 <realloc@plt>
   13798:	cbz	x0, 137b8 <_option_is_end@@Base+0x828>
   1379c:	str	x0, [x21]
   137a0:	mov	w0, #0x0                   	// #0
   137a4:	ldr	x21, [sp, #32]
   137a8:	str	x19, [x20]
   137ac:	ldp	x19, x20, [sp, #16]
   137b0:	ldp	x29, x30, [sp], #48
   137b4:	ret
   137b8:	ldr	x21, [sp, #32]
   137bc:	mov	w0, #0xffffffff            	// #-1
   137c0:	ldp	x19, x20, [sp, #16]
   137c4:	ldp	x29, x30, [sp], #48
   137c8:	ret
   137cc:	nop
   137d0:	stp	x29, x30, [sp, #-48]!
   137d4:	mov	x29, sp
   137d8:	stp	x19, x20, [sp, #16]
   137dc:	ldr	x20, [x0, #48]
   137e0:	stp	x21, x22, [sp, #32]
   137e4:	cmp	x20, x1
   137e8:	b.cc	13860 <_option_is_end@@Base+0x8d0>  // b.lo, b.ul, b.last
   137ec:	mov	x21, x0
   137f0:	mov	x19, x1
   137f4:	ldr	x0, [x0, #56]
   137f8:	mov	x22, x2
   137fc:	cmp	x0, x20
   13800:	b.eq	13848 <_option_is_end@@Base+0x8b8>  // b.none
   13804:	cmp	x20, x19
   13808:	ldr	x0, [x21, #40]
   1380c:	b.ls	13828 <_option_is_end@@Base+0x898>  // b.plast
   13810:	add	x3, x0, x20, lsl #3
   13814:	add	x1, x0, x19, lsl #3
   13818:	ldur	x4, [x3, #-8]
   1381c:	str	x4, [x3], #-8
   13820:	cmp	x1, x3
   13824:	b.ne	13818 <_option_is_end@@Base+0x888>  // b.any
   13828:	str	x22, [x0, x19, lsl #3]
   1382c:	add	x0, x19, #0x1
   13830:	add	x20, x20, #0x1
   13834:	str	x20, [x21, #48]
   13838:	ldp	x19, x20, [sp, #16]
   1383c:	ldp	x21, x22, [sp, #32]
   13840:	ldp	x29, x30, [sp], #48
   13844:	ret
   13848:	add	x1, x21, #0x38
   1384c:	add	x0, x21, #0x28
   13850:	bl	13758 <_option_is_end@@Base+0x7c8>
   13854:	tbz	w0, #31, 13804 <_option_is_end@@Base+0x874>
   13858:	mov	x0, #0x0                   	// #0
   1385c:	b	13838 <_option_is_end@@Base+0x8a8>
   13860:	bl	a900 <abort@plt>
   13864:	nop
   13868:	stp	x29, x30, [sp, #-64]!
   1386c:	mov	x29, sp
   13870:	stp	x21, x22, [sp, #32]
   13874:	mov	x22, x0
   13878:	ldr	x21, [x0, #48]
   1387c:	stp	x19, x20, [sp, #16]
   13880:	stp	x23, x24, [sp, #48]
   13884:	mov	x23, x2
   13888:	cbz	x21, 13918 <_option_is_end@@Base+0x988>
   1388c:	mov	x24, x1
   13890:	mov	x20, #0x0                   	// #0
   13894:	b	138a8 <_option_is_end@@Base+0x918>
   13898:	mov	x21, x19
   1389c:	b.eq	138f4 <_option_is_end@@Base+0x964>  // b.none
   138a0:	cmp	x20, x21
   138a4:	b.cs	138d4 <_option_is_end@@Base+0x944>  // b.hs, b.nlast
   138a8:	sub	x19, x21, x20
   138ac:	mov	x1, x23
   138b0:	ldr	x3, [x22, #40]
   138b4:	add	x19, x20, x19, lsr #1
   138b8:	ldr	x0, [x3, x19, lsl #3]
   138bc:	blr	x24
   138c0:	cmp	w0, #0x0
   138c4:	b.ge	13898 <_option_is_end@@Base+0x908>  // b.tcont
   138c8:	add	x20, x19, #0x1
   138cc:	cmp	x20, x21
   138d0:	b.cc	138a8 <_option_is_end@@Base+0x918>  // b.lo, b.ul, b.last
   138d4:	mov	x2, x23
   138d8:	mov	x1, x20
   138dc:	mov	x0, x22
   138e0:	ldp	x19, x20, [sp, #16]
   138e4:	ldp	x21, x22, [sp, #32]
   138e8:	ldp	x23, x24, [sp, #48]
   138ec:	ldp	x29, x30, [sp], #64
   138f0:	b	137d0 <_option_is_end@@Base+0x840>
   138f4:	mov	x20, x19
   138f8:	mov	x2, x23
   138fc:	mov	x1, x20
   13900:	mov	x0, x22
   13904:	ldp	x19, x20, [sp, #16]
   13908:	ldp	x21, x22, [sp, #32]
   1390c:	ldp	x23, x24, [sp, #48]
   13910:	ldp	x29, x30, [sp], #64
   13914:	b	137d0 <_option_is_end@@Base+0x840>
   13918:	mov	x20, #0x0                   	// #0
   1391c:	b	138d4 <_option_is_end@@Base+0x944>
   13920:	stp	x29, x30, [sp, #-48]!
   13924:	mov	x29, sp
   13928:	stp	x21, x22, [sp, #32]
   1392c:	mov	x21, x0
   13930:	sub	x0, x1, #0x1
   13934:	stp	x19, x20, [sp, #16]
   13938:	ldr	x20, [x21, #48]
   1393c:	cmp	x20, x0
   13940:	b.ls	139b8 <_option_is_end@@Base+0xa28>  // b.plast
   13944:	ldr	x0, [x21, #56]
   13948:	mov	x19, x1
   1394c:	mov	x22, x2
   13950:	cmp	x0, x20
   13954:	b.eq	139a0 <_option_is_end@@Base+0xa10>  // b.none
   13958:	cmp	x19, x20
   1395c:	ldr	x0, [x21, #40]
   13960:	b.cs	13980 <_option_is_end@@Base+0x9f0>  // b.hs, b.nlast
   13964:	add	x3, x0, x20, lsl #3
   13968:	add	x1, x0, x19, lsl #3
   1396c:	nop
   13970:	ldur	x4, [x3, #-8]
   13974:	str	x4, [x3], #-8
   13978:	cmp	x1, x3
   1397c:	b.ne	13970 <_option_is_end@@Base+0x9e0>  // b.any
   13980:	str	x22, [x0, x19, lsl #3]
   13984:	add	x0, x19, #0x1
   13988:	add	x20, x20, #0x1
   1398c:	str	x20, [x21, #48]
   13990:	ldp	x19, x20, [sp, #16]
   13994:	ldp	x21, x22, [sp, #32]
   13998:	ldp	x29, x30, [sp], #48
   1399c:	ret
   139a0:	add	x1, x21, #0x38
   139a4:	add	x0, x21, #0x28
   139a8:	bl	13758 <_option_is_end@@Base+0x7c8>
   139ac:	tbz	w0, #31, 13958 <_option_is_end@@Base+0x9c8>
   139b0:	mov	x0, #0x0                   	// #0
   139b4:	b	13990 <_option_is_end@@Base+0xa00>
   139b8:	bl	a900 <abort@plt>
   139bc:	nop
   139c0:	stp	x29, x30, [sp, #-64]!
   139c4:	mov	x29, sp
   139c8:	stp	x21, x22, [sp, #32]
   139cc:	ldr	x21, [x0, #48]
   139d0:	stp	x19, x20, [sp, #16]
   139d4:	str	x23, [sp, #48]
   139d8:	sub	x23, x1, #0x1
   139dc:	cmp	x21, x23
   139e0:	b.ls	13a5c <_option_is_end@@Base+0xacc>  // b.plast
   139e4:	mov	x20, x0
   139e8:	mov	x19, x1
   139ec:	ldr	x0, [x0, #56]
   139f0:	mov	x22, x2
   139f4:	cmp	x0, x21
   139f8:	b.eq	13a44 <_option_is_end@@Base+0xab4>  // b.none
   139fc:	ldr	x0, [x20, #40]
   13a00:	add	x5, x0, x19, lsl #3
   13a04:	add	x3, x0, x21, lsl #3
   13a08:	sub	x5, x5, #0x8
   13a0c:	nop
   13a10:	ldur	x4, [x3, #-8]
   13a14:	str	x4, [x3], #-8
   13a18:	cmp	x5, x3
   13a1c:	b.ne	13a10 <_option_is_end@@Base+0xa80>  // b.any
   13a20:	str	x22, [x0, x23, lsl #3]
   13a24:	mov	x0, x19
   13a28:	add	x21, x21, #0x1
   13a2c:	str	x21, [x20, #48]
   13a30:	ldp	x19, x20, [sp, #16]
   13a34:	ldp	x21, x22, [sp, #32]
   13a38:	ldr	x23, [sp, #48]
   13a3c:	ldp	x29, x30, [sp], #64
   13a40:	ret
   13a44:	add	x1, x20, #0x38
   13a48:	add	x0, x20, #0x28
   13a4c:	bl	13758 <_option_is_end@@Base+0x7c8>
   13a50:	tbz	w0, #31, 139fc <_option_is_end@@Base+0xa6c>
   13a54:	mov	x0, #0x0                   	// #0
   13a58:	b	13a30 <_option_is_end@@Base+0xaa0>
   13a5c:	bl	a900 <abort@plt>
   13a60:	stp	x29, x30, [sp, #-48]!
   13a64:	mov	x29, sp
   13a68:	stp	x19, x20, [sp, #16]
   13a6c:	mov	x19, x0
   13a70:	mov	x20, x1
   13a74:	str	x21, [sp, #32]
   13a78:	ldp	x21, x0, [x0, #48]
   13a7c:	cmp	x0, x21
   13a80:	b.eq	13aa8 <_option_is_end@@Base+0xb18>  // b.none
   13a84:	ldr	x2, [x19, #40]
   13a88:	add	x1, x21, #0x1
   13a8c:	mov	x0, x1
   13a90:	str	x20, [x2, x21, lsl #3]
   13a94:	str	x1, [x19, #48]
   13a98:	ldp	x19, x20, [sp, #16]
   13a9c:	ldr	x21, [sp, #32]
   13aa0:	ldp	x29, x30, [sp], #48
   13aa4:	ret
   13aa8:	add	x1, x19, #0x38
   13aac:	add	x0, x19, #0x28
   13ab0:	bl	13758 <_option_is_end@@Base+0x7c8>
   13ab4:	tbz	w0, #31, 13a84 <_option_is_end@@Base+0xaf4>
   13ab8:	mov	x0, #0x0                   	// #0
   13abc:	b	13a98 <_option_is_end@@Base+0xb08>
   13ac0:	stp	x29, x30, [sp, #-48]!
   13ac4:	mov	x29, sp
   13ac8:	stp	x19, x20, [sp, #16]
   13acc:	mov	x19, x0
   13ad0:	ldp	x20, x0, [x0, #48]
   13ad4:	str	x21, [sp, #32]
   13ad8:	mov	x21, x1
   13adc:	cmp	x0, x20
   13ae0:	b.eq	13b20 <_option_is_end@@Base+0xb90>  // b.none
   13ae4:	ldr	x4, [x19, #40]
   13ae8:	add	x2, x4, x20, lsl #3
   13aec:	cbz	x20, 13b00 <_option_is_end@@Base+0xb70>
   13af0:	ldur	x3, [x2, #-8]
   13af4:	str	x3, [x2], #-8
   13af8:	cmp	x4, x2
   13afc:	b.ne	13af0 <_option_is_end@@Base+0xb60>  // b.any
   13b00:	str	x21, [x4]
   13b04:	add	x20, x20, #0x1
   13b08:	mov	x0, #0x1                   	// #1
   13b0c:	str	x20, [x19, #48]
   13b10:	ldp	x19, x20, [sp, #16]
   13b14:	ldr	x21, [sp, #32]
   13b18:	ldp	x29, x30, [sp], #48
   13b1c:	ret
   13b20:	add	x1, x19, #0x38
   13b24:	add	x0, x19, #0x28
   13b28:	bl	13758 <_option_is_end@@Base+0x7c8>
   13b2c:	tbz	w0, #31, 13ae4 <_option_is_end@@Base+0xb54>
   13b30:	mov	x0, #0x0                   	// #0
   13b34:	b	13b10 <_option_is_end@@Base+0xb80>

0000000000013b38 <rotl64@@Base>:
   13b38:	neg	w1, w1
   13b3c:	ror	x0, x0, x1
   13b40:	ret
   13b44:	nop

0000000000013b48 <rotr64@@Base>:
   13b48:	ror	x0, x0, x1
   13b4c:	ret

0000000000013b50 <rotl32@@Base>:
   13b50:	neg	w1, w1
   13b54:	ror	w0, w0, w1
   13b58:	ret
   13b5c:	nop

0000000000013b60 <rotr32@@Base>:
   13b60:	ror	w0, w0, w1
   13b64:	ret

0000000000013b68 <rotl_sz@@Base>:
   13b68:	neg	w1, w1
   13b6c:	ror	x0, x0, x1
   13b70:	ret
   13b74:	nop

0000000000013b78 <rotr_sz@@Base>:
   13b78:	ror	x0, x0, x1
   13b7c:	ret

0000000000013b80 <rotl16@@Base>:
   13b80:	neg	w2, w1
   13b84:	and	w0, w0, #0xffff
   13b88:	and	w2, w2, #0xf
   13b8c:	lsl	w1, w0, w1
   13b90:	lsr	w0, w0, w2
   13b94:	orr	w0, w1, w0
   13b98:	ret
   13b9c:	nop

0000000000013ba0 <rotr16@@Base>:
   13ba0:	neg	w2, w1
   13ba4:	and	w0, w0, #0xffff
   13ba8:	and	w2, w2, #0xf
   13bac:	lsr	w1, w0, w1
   13bb0:	lsl	w0, w0, w2
   13bb4:	orr	w0, w1, w0
   13bb8:	ret
   13bbc:	nop

0000000000013bc0 <rotl8@@Base>:
   13bc0:	neg	w2, w1
   13bc4:	and	w0, w0, #0xff
   13bc8:	and	w2, w2, #0x7
   13bcc:	lsl	w1, w0, w1
   13bd0:	lsr	w0, w0, w2
   13bd4:	orr	w0, w1, w0
   13bd8:	ret
   13bdc:	nop

0000000000013be0 <rotr8@@Base>:
   13be0:	neg	w2, w1
   13be4:	and	w0, w0, #0xff
   13be8:	and	w2, w2, #0x7
   13bec:	lsr	w1, w0, w1
   13bf0:	lsl	w0, w0, w2
   13bf4:	orr	w0, w1, w0
   13bf8:	ret
   13bfc:	nop

0000000000013c00 <canonicalize_filename_mode@@Base>:
   13c00:	stp	x29, x30, [sp, #-288]!
   13c04:	mov	x29, sp
   13c08:	stp	x19, x20, [sp, #16]
   13c0c:	stp	x21, x22, [sp, #32]
   13c10:	and	w21, w1, #0x3
   13c14:	stp	x25, x26, [sp, #64]
   13c18:	mov	x26, x0
   13c1c:	sub	w0, w21, #0x1
   13c20:	tst	w0, w21
   13c24:	b.ne	14018 <canonicalize_filename_mode@@Base+0x418>  // b.any
   13c28:	cbz	x26, 14018 <canonicalize_filename_mode@@Base+0x418>
   13c2c:	stp	x23, x24, [sp, #48]
   13c30:	ldrb	w23, [x26]
   13c34:	cbz	w23, 140b4 <canonicalize_filename_mode@@Base+0x4b4>
   13c38:	stp	x27, x28, [sp, #80]
   13c3c:	mov	w22, w1
   13c40:	cmp	w23, #0x2f
   13c44:	b.eq	13e54 <canonicalize_filename_mode@@Base+0x254>  // b.none
   13c48:	bl	b000 <xgetcwd@plt>
   13c4c:	mov	x19, x0
   13c50:	cbz	x0, 140fc <canonicalize_filename_mode@@Base+0x4fc>
   13c54:	bl	a340 <strlen@plt>
   13c58:	mov	x28, x0
   13c5c:	cmp	x0, #0xfff
   13c60:	b.ls	140e0 <canonicalize_filename_mode@@Base+0x4e0>  // b.plast
   13c64:	add	x28, x19, x0
   13c68:	mov	x20, x28
   13c6c:	ldrb	w3, [x26]
   13c70:	cbz	w3, 1419c <canonicalize_filename_mode@@Base+0x59c>
   13c74:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   13c78:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   13c7c:	and	w22, w22, #0x4
   13c80:	add	x24, sp, #0xa0
   13c84:	ldr	x1, [x1, #3848]
   13c88:	stp	xzr, x26, [sp, #104]
   13c8c:	ldr	x0, [x0, #3928]
   13c90:	stp	xzr, xzr, [sp, #120]
   13c94:	stp	x1, x0, [sp, #136]
   13c98:	mov	w0, w3
   13c9c:	cmp	w3, #0x2f
   13ca0:	b.ne	13cb8 <canonicalize_filename_mode@@Base+0xb8>  // b.any
   13ca4:	nop
   13ca8:	ldrb	w0, [x26, #1]!
   13cac:	cmp	w0, #0x2f
   13cb0:	b.eq	13ca8 <canonicalize_filename_mode@@Base+0xa8>  // b.none
   13cb4:	cbz	w0, 13dc8 <canonicalize_filename_mode@@Base+0x1c8>
   13cb8:	mov	x27, x26
   13cbc:	nop
   13cc0:	mov	x25, x27
   13cc4:	ldrb	w3, [x27, #1]!
   13cc8:	cmp	w3, #0x2f
   13ccc:	ccmp	w3, #0x0, #0x4, ne  // ne = any
   13cd0:	b.ne	13cc0 <canonicalize_filename_mode@@Base+0xc0>  // b.any
   13cd4:	cmp	x27, x26
   13cd8:	b.eq	13dc8 <canonicalize_filename_mode@@Base+0x1c8>  // b.none
   13cdc:	sub	x23, x27, x26
   13ce0:	cmp	x23, #0x1
   13ce4:	b.eq	13e9c <canonicalize_filename_mode@@Base+0x29c>  // b.none
   13ce8:	cmp	w0, #0x2e
   13cec:	ccmp	x23, #0x2, #0x0, eq  // eq = none
   13cf0:	b.eq	13fd0 <canonicalize_filename_mode@@Base+0x3d0>  // b.none
   13cf4:	ldurb	w0, [x28, #-1]
   13cf8:	cmp	w0, #0x2f
   13cfc:	b.eq	13d10 <canonicalize_filename_mode@@Base+0x110>  // b.none
   13d00:	mov	x6, x28
   13d04:	mov	w0, #0x2f                  	// #47
   13d08:	strb	w0, [x6], #1
   13d0c:	mov	x28, x6
   13d10:	add	x0, x28, x23
   13d14:	cmp	x20, x0
   13d18:	b.hi	13d4c <canonicalize_filename_mode@@Base+0x14c>  // b.pmore
   13d1c:	sub	x1, x20, x19
   13d20:	cmp	x23, #0x1, lsl #12
   13d24:	add	x20, x23, x1
   13d28:	add	x1, x1, #0x1, lsl #12
   13d2c:	csinc	x20, x1, x20, lt  // lt = tstop
   13d30:	mov	x0, x19
   13d34:	mov	x1, x20
   13d38:	bl	a660 <xrealloc@plt>
   13d3c:	sub	x6, x28, x19
   13d40:	add	x20, x0, x20
   13d44:	mov	x19, x0
   13d48:	add	x28, x0, x6
   13d4c:	mov	x0, x28
   13d50:	mov	x1, x26
   13d54:	mov	x2, x23
   13d58:	bl	a2c0 <memcpy@plt>
   13d5c:	strb	wzr, [x0, x23]
   13d60:	cmp	w22, #0x0
   13d64:	ccmp	w21, #0x2, #0x0, ne  // ne = any
   13d68:	add	x28, x0, x23
   13d6c:	b.eq	13da8 <canonicalize_filename_mode@@Base+0x1a8>  // b.none
   13d70:	mov	x2, x24
   13d74:	mov	x1, x19
   13d78:	mov	w0, #0x0                   	// #0
   13d7c:	cbz	w22, 13eb0 <canonicalize_filename_mode@@Base+0x2b0>
   13d80:	bl	aef0 <__xstat@plt>
   13d84:	cmp	w0, #0x0
   13d88:	cset	w0, ne  // ne = any
   13d8c:	cbz	w0, 13e80 <canonicalize_filename_mode@@Base+0x280>
   13d90:	bl	aeb0 <__errno_location@plt>
   13d94:	ldr	w23, [x0]
   13d98:	mov	x26, x0
   13d9c:	cbz	w21, 14070 <canonicalize_filename_mode@@Base+0x470>
   13da0:	cmp	w21, #0x1
   13da4:	b.eq	13e24 <canonicalize_filename_mode@@Base+0x224>  // b.none
   13da8:	str	wzr, [sp, #176]
   13dac:	ldrb	w0, [x27]
   13db0:	cmp	w0, #0x0
   13db4:	ccmp	w21, #0x2, #0x4, ne  // ne = any
   13db8:	b.ne	14064 <canonicalize_filename_mode@@Base+0x464>  // b.any
   13dbc:	ldrb	w3, [x27]
   13dc0:	mov	x26, x27
   13dc4:	cbnz	w3, 13c98 <canonicalize_filename_mode@@Base+0x98>
   13dc8:	add	x0, x19, #0x1
   13dcc:	cmp	x28, x0
   13dd0:	b.ls	13de0 <canonicalize_filename_mode@@Base+0x1e0>  // b.plast
   13dd4:	ldurb	w0, [x28, #-1]
   13dd8:	cmp	w0, #0x2f
   13ddc:	b.eq	14148 <canonicalize_filename_mode@@Base+0x548>  // b.none
   13de0:	add	x0, x28, #0x1
   13de4:	strb	wzr, [x28]
   13de8:	cmp	x0, x20
   13dec:	b.eq	13e04 <canonicalize_filename_mode@@Base+0x204>  // b.none
   13df0:	sub	x1, x28, x19
   13df4:	mov	x0, x19
   13df8:	add	x1, x1, #0x1
   13dfc:	bl	a660 <xrealloc@plt>
   13e00:	mov	x19, x0
   13e04:	ldr	x0, [sp, #120]
   13e08:	bl	aa50 <free@plt>
   13e0c:	ldr	x0, [sp, #104]
   13e10:	cbz	x0, 140fc <canonicalize_filename_mode@@Base+0x4fc>
   13e14:	bl	a580 <hash_free@plt>
   13e18:	ldp	x23, x24, [sp, #48]
   13e1c:	ldp	x27, x28, [sp, #80]
   13e20:	b	13fb8 <canonicalize_filename_mode@@Base+0x3b8>
   13e24:	mov	x0, x27
   13e28:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   13e2c:	add	x1, x1, #0x670
   13e30:	bl	ab40 <strspn@plt>
   13e34:	ldrb	w0, [x27, x0]
   13e38:	cmp	w0, #0x0
   13e3c:	ccmp	w23, #0x2, #0x0, eq  // eq = none
   13e40:	b.ne	14070 <canonicalize_filename_mode@@Base+0x470>  // b.any
   13e44:	ldrb	w3, [x25, #1]
   13e48:	mov	x26, x27
   13e4c:	cbnz	w3, 13c98 <canonicalize_filename_mode@@Base+0x98>
   13e50:	b	13dc8 <canonicalize_filename_mode@@Base+0x1c8>
   13e54:	mov	x0, #0x1000                	// #4096
   13e58:	bl	a710 <xmalloc@plt>
   13e5c:	mov	x28, x0
   13e60:	ldrb	w3, [x26]
   13e64:	mov	x19, x0
   13e68:	add	x20, x0, #0x1, lsl #12
   13e6c:	strb	w23, [x28], #1
   13e70:	cbnz	w3, 13c74 <canonicalize_filename_mode@@Base+0x74>
   13e74:	str	xzr, [sp, #104]
   13e78:	str	xzr, [sp, #120]
   13e7c:	b	13de0 <canonicalize_filename_mode@@Base+0x1e0>
   13e80:	ldr	w0, [sp, #176]
   13e84:	and	w0, w0, #0xf000
   13e88:	cmp	w0, #0xa, lsl #12
   13e8c:	b.eq	13ec0 <canonicalize_filename_mode@@Base+0x2c0>  // b.none
   13e90:	cmp	w0, #0x4, lsl #12
   13e94:	b.eq	13dbc <canonicalize_filename_mode@@Base+0x1bc>  // b.none
   13e98:	b	13dac <canonicalize_filename_mode@@Base+0x1ac>
   13e9c:	cmp	w0, #0x2e
   13ea0:	b.ne	13cf4 <canonicalize_filename_mode@@Base+0xf4>  // b.any
   13ea4:	mov	x26, x27
   13ea8:	cbnz	w3, 13c98 <canonicalize_filename_mode@@Base+0x98>
   13eac:	b	13dc8 <canonicalize_filename_mode@@Base+0x1c8>
   13eb0:	bl	ac70 <__lxstat@plt>
   13eb4:	cmp	w0, #0x0
   13eb8:	cset	w0, ne  // ne = any
   13ebc:	b	13d8c <canonicalize_filename_mode@@Base+0x18c>
   13ec0:	ldr	x0, [sp, #104]
   13ec4:	cbz	x0, 14040 <canonicalize_filename_mode@@Base+0x440>
   13ec8:	ldp	x0, x1, [sp, #104]
   13ecc:	mov	x2, x24
   13ed0:	bl	a9f0 <seen_file@plt>
   13ed4:	tst	w0, #0xff
   13ed8:	b.ne	13f7c <canonicalize_filename_mode@@Base+0x37c>  // b.any
   13edc:	ldp	x0, x1, [sp, #104]
   13ee0:	mov	x2, x24
   13ee4:	bl	a600 <record_file@plt>
   13ee8:	ldr	x1, [sp, #208]
   13eec:	mov	x0, x19
   13ef0:	bl	ab70 <areadlink_with_size@plt>
   13ef4:	mov	x26, x0
   13ef8:	cbz	x0, 1411c <canonicalize_filename_mode@@Base+0x51c>
   13efc:	bl	a340 <strlen@plt>
   13f00:	mov	x25, x0
   13f04:	mov	x0, x27
   13f08:	bl	a340 <strlen@plt>
   13f0c:	mov	x2, x0
   13f10:	add	x1, x25, x0
   13f14:	ldr	x0, [sp, #128]
   13f18:	cbz	x0, 1408c <canonicalize_filename_mode@@Base+0x48c>
   13f1c:	ldr	x0, [sp, #128]
   13f20:	add	x1, x1, #0x1
   13f24:	cmp	x1, x0
   13f28:	b.hi	14154 <canonicalize_filename_mode@@Base+0x554>  // b.pmore
   13f2c:	ldr	x23, [sp, #120]
   13f30:	add	x2, x2, #0x1
   13f34:	mov	x1, x27
   13f38:	add	x0, x23, x25
   13f3c:	bl	a2d0 <memmove@plt>
   13f40:	mov	x1, x26
   13f44:	mov	x2, x25
   13f48:	mov	x0, x23
   13f4c:	bl	a2c0 <memcpy@plt>
   13f50:	ldrb	w1, [x26]
   13f54:	str	x0, [sp, #112]
   13f58:	add	x0, x19, #0x1
   13f5c:	cmp	w1, #0x2f
   13f60:	b.eq	1413c <canonicalize_filename_mode@@Base+0x53c>  // b.none
   13f64:	cmp	x0, x28
   13f68:	b.cc	14174 <canonicalize_filename_mode@@Base+0x574>  // b.lo, b.ul, b.last
   13f6c:	mov	x0, x26
   13f70:	ldr	x27, [sp, #112]
   13f74:	bl	aa50 <free@plt>
   13f78:	b	13dbc <canonicalize_filename_mode@@Base+0x1bc>
   13f7c:	cmp	w21, #0x2
   13f80:	b.eq	13e44 <canonicalize_filename_mode@@Base+0x244>  // b.none
   13f84:	bl	aeb0 <__errno_location@plt>
   13f88:	mov	x26, x0
   13f8c:	mov	w23, #0x28                  	// #40
   13f90:	ldr	x0, [sp, #120]
   13f94:	bl	aa50 <free@plt>
   13f98:	mov	x0, x19
   13f9c:	bl	aa50 <free@plt>
   13fa0:	ldr	x0, [sp, #104]
   13fa4:	bl	a580 <hash_free@plt>
   13fa8:	ldp	x27, x28, [sp, #80]
   13fac:	str	w23, [x26]
   13fb0:	ldp	x23, x24, [sp, #48]
   13fb4:	mov	x19, #0x0                   	// #0
   13fb8:	mov	x0, x19
   13fbc:	ldp	x19, x20, [sp, #16]
   13fc0:	ldp	x21, x22, [sp, #32]
   13fc4:	ldp	x25, x26, [sp, #64]
   13fc8:	ldp	x29, x30, [sp], #288
   13fcc:	ret
   13fd0:	ldrb	w0, [x26, #1]
   13fd4:	cmp	w0, #0x2e
   13fd8:	b.ne	13cf4 <canonicalize_filename_mode@@Base+0xf4>  // b.any
   13fdc:	add	x0, x19, #0x1
   13fe0:	mov	x26, x27
   13fe4:	cmp	x28, x0
   13fe8:	b.ls	13dc4 <canonicalize_filename_mode@@Base+0x1c4>  // b.plast
   13fec:	sub	x28, x28, #0x1
   13ff0:	cmp	x28, x19
   13ff4:	b.ls	13dc4 <canonicalize_filename_mode@@Base+0x1c4>  // b.plast
   13ff8:	ldurb	w0, [x28, #-1]
   13ffc:	cmp	w0, #0x2f
   14000:	b.eq	13ea4 <canonicalize_filename_mode@@Base+0x2a4>  // b.none
   14004:	sub	x28, x28, #0x1
   14008:	cmp	x28, x19
   1400c:	b.ne	13ff8 <canonicalize_filename_mode@@Base+0x3f8>  // b.any
   14010:	mov	x26, x27
   14014:	b	13ea8 <canonicalize_filename_mode@@Base+0x2a8>
   14018:	bl	aeb0 <__errno_location@plt>
   1401c:	mov	x19, #0x0                   	// #0
   14020:	mov	w1, #0x16                  	// #22
   14024:	str	w1, [x0]
   14028:	mov	x0, x19
   1402c:	ldp	x19, x20, [sp, #16]
   14030:	ldp	x21, x22, [sp, #32]
   14034:	ldp	x25, x26, [sp, #64]
   14038:	ldp	x29, x30, [sp], #288
   1403c:	ret
   14040:	adrp	x2, 46000 <vasnprintf@@Base+0x1b1e0>
   14044:	mov	x1, #0x0                   	// #0
   14048:	ldp	x4, x3, [sp, #136]
   1404c:	mov	x0, #0x7                   	// #7
   14050:	ldr	x2, [x2, #3888]
   14054:	bl	a800 <hash_initialize@plt>
   14058:	str	x0, [sp, #104]
   1405c:	cbnz	x0, 13ec8 <canonicalize_filename_mode@@Base+0x2c8>
   14060:	bl	a890 <xalloc_die@plt>
   14064:	bl	aeb0 <__errno_location@plt>
   14068:	mov	x26, x0
   1406c:	mov	w23, #0x14                  	// #20
   14070:	ldr	x0, [sp, #120]
   14074:	bl	aa50 <free@plt>
   14078:	mov	x0, x19
   1407c:	bl	aa50 <free@plt>
   14080:	ldr	x0, [sp, #104]
   14084:	cbz	x0, 13fa8 <canonicalize_filename_mode@@Base+0x3a8>
   14088:	b	13fa0 <canonicalize_filename_mode@@Base+0x3a0>
   1408c:	add	x1, x1, #0x1
   14090:	mov	x0, #0x1000                	// #4096
   14094:	cmp	x1, x0
   14098:	str	x2, [sp, #112]
   1409c:	csel	x0, x1, x0, cs  // cs = hs, nlast
   140a0:	str	x0, [sp, #128]
   140a4:	bl	a710 <xmalloc@plt>
   140a8:	str	x0, [sp, #120]
   140ac:	ldr	x2, [sp, #112]
   140b0:	b	13f2c <canonicalize_filename_mode@@Base+0x32c>
   140b4:	bl	aeb0 <__errno_location@plt>
   140b8:	mov	x19, #0x0                   	// #0
   140bc:	mov	w1, #0x2                   	// #2
   140c0:	ldp	x23, x24, [sp, #48]
   140c4:	str	w1, [x0]
   140c8:	mov	x0, x19
   140cc:	ldp	x19, x20, [sp, #16]
   140d0:	ldp	x21, x22, [sp, #32]
   140d4:	ldp	x25, x26, [sp, #64]
   140d8:	ldp	x29, x30, [sp], #288
   140dc:	ret
   140e0:	mov	x0, x19
   140e4:	mov	x1, #0x1000                	// #4096
   140e8:	bl	a660 <xrealloc@plt>
   140ec:	mov	x19, x0
   140f0:	add	x28, x0, x28
   140f4:	add	x20, x0, #0x1, lsl #12
   140f8:	b	13c6c <canonicalize_filename_mode@@Base+0x6c>
   140fc:	mov	x0, x19
   14100:	ldp	x19, x20, [sp, #16]
   14104:	ldp	x21, x22, [sp, #32]
   14108:	ldp	x23, x24, [sp, #48]
   1410c:	ldp	x25, x26, [sp, #64]
   14110:	ldp	x27, x28, [sp, #80]
   14114:	ldp	x29, x30, [sp], #288
   14118:	ret
   1411c:	bl	aeb0 <__errno_location@plt>
   14120:	ldr	w23, [x0]
   14124:	mov	x26, x0
   14128:	cmp	w21, #0x2
   1412c:	b.ne	13f90 <canonicalize_filename_mode@@Base+0x390>  // b.any
   14130:	cmp	w23, #0xc
   14134:	b.ne	13e44 <canonicalize_filename_mode@@Base+0x244>  // b.any
   14138:	b	13f90 <canonicalize_filename_mode@@Base+0x390>
   1413c:	mov	x28, x0
   14140:	strb	w1, [x19]
   14144:	b	13f6c <canonicalize_filename_mode@@Base+0x36c>
   14148:	mov	x0, x28
   1414c:	sub	x28, x28, #0x1
   14150:	b	13de4 <canonicalize_filename_mode@@Base+0x1e4>
   14154:	ldr	x0, [sp, #120]
   14158:	str	x1, [sp, #112]
   1415c:	str	x2, [sp, #152]
   14160:	bl	a660 <xrealloc@plt>
   14164:	ldr	x1, [sp, #112]
   14168:	stp	x0, x1, [sp, #120]
   1416c:	ldr	x2, [sp, #152]
   14170:	b	13f2c <canonicalize_filename_mode@@Base+0x32c>
   14174:	sub	x28, x28, #0x1
   14178:	cmp	x19, x28
   1417c:	b.cs	13f6c <canonicalize_filename_mode@@Base+0x36c>  // b.hs, b.nlast
   14180:	ldurb	w0, [x28, #-1]
   14184:	cmp	w0, #0x2f
   14188:	b.eq	13f6c <canonicalize_filename_mode@@Base+0x36c>  // b.none
   1418c:	sub	x28, x28, #0x1
   14190:	cmp	x19, x28
   14194:	b.ne	14180 <canonicalize_filename_mode@@Base+0x580>  // b.any
   14198:	b	13f6c <canonicalize_filename_mode@@Base+0x36c>
   1419c:	str	xzr, [sp, #104]
   141a0:	str	xzr, [sp, #120]
   141a4:	b	13dc8 <canonicalize_filename_mode@@Base+0x1c8>

00000000000141a8 <set_cloexec_flag@@Base>:
   141a8:	stp	x29, x30, [sp, #-32]!
   141ac:	mov	w2, #0x0                   	// #0
   141b0:	mov	x29, sp
   141b4:	stp	x19, x20, [sp, #16]
   141b8:	and	w20, w1, #0xff
   141bc:	mov	w19, w0
   141c0:	mov	w1, #0x1                   	// #1
   141c4:	bl	abe0 <rpl_fcntl@plt>
   141c8:	tbnz	w0, #31, 1420c <set_cloexec_flag@@Base+0x64>
   141cc:	cmp	w20, #0x0
   141d0:	orr	w3, w0, #0x1
   141d4:	and	w2, w0, #0xfffffffe
   141d8:	mov	w1, w0
   141dc:	csel	w2, w2, w3, eq  // eq = none
   141e0:	mov	w0, #0x0                   	// #0
   141e4:	cmp	w2, w1
   141e8:	b.eq	14200 <set_cloexec_flag@@Base+0x58>  // b.none
   141ec:	mov	w0, w19
   141f0:	mov	w1, #0x2                   	// #2
   141f4:	bl	abe0 <rpl_fcntl@plt>
   141f8:	cmn	w0, #0x1
   141fc:	csetm	w0, eq  // eq = none
   14200:	ldp	x19, x20, [sp, #16]
   14204:	ldp	x29, x30, [sp], #32
   14208:	ret
   1420c:	mov	w0, #0xffffffff            	// #-1
   14210:	b	14200 <set_cloexec_flag@@Base+0x58>
   14214:	nop

0000000000014218 <dup_cloexec@@Base>:
   14218:	mov	w2, #0x0                   	// #0
   1421c:	mov	w1, #0x406                 	// #1030
   14220:	b	abe0 <rpl_fcntl@plt>
   14224:	nop

0000000000014228 <dir_name@@Base>:
   14228:	stp	x29, x30, [sp, #-16]!
   1422c:	mov	x29, sp
   14230:	bl	a550 <mdir_name@plt>
   14234:	cbz	x0, 14240 <dir_name@@Base+0x18>
   14238:	ldp	x29, x30, [sp], #16
   1423c:	ret
   14240:	bl	a890 <xalloc_die@plt>
   14244:	nop

0000000000014248 <base_name@@Base>:
   14248:	stp	x29, x30, [sp, #-32]!
   1424c:	mov	x29, sp
   14250:	stp	x19, x20, [sp, #16]
   14254:	mov	x20, x0
   14258:	bl	a780 <last_component@plt>
   1425c:	ldrb	w1, [x0]
   14260:	cbz	w1, 1428c <base_name@@Base+0x44>
   14264:	mov	x19, x0
   14268:	bl	a2a0 <base_len@plt>
   1426c:	mov	x1, x0
   14270:	mov	x0, x19
   14274:	ldrb	w2, [x19, x1]
   14278:	ldp	x19, x20, [sp, #16]
   1427c:	cmp	w2, #0x2f
   14280:	ldp	x29, x30, [sp], #32
   14284:	cinc	x1, x1, eq  // eq = none
   14288:	b	acf0 <xstrndup@plt>
   1428c:	mov	x0, x20
   14290:	bl	a2a0 <base_len@plt>
   14294:	mov	x1, x0
   14298:	mov	x0, x20
   1429c:	ldp	x19, x20, [sp, #16]
   142a0:	ldp	x29, x30, [sp], #32
   142a4:	b	acf0 <xstrndup@plt>

00000000000142a8 <dir_len@@Base>:
   142a8:	stp	x29, x30, [sp, #-32]!
   142ac:	mov	x29, sp
   142b0:	stp	x19, x20, [sp, #16]
   142b4:	mov	x19, x0
   142b8:	ldrb	w1, [x0]
   142bc:	cmp	w1, #0x2f
   142c0:	cset	x20, eq  // eq = none
   142c4:	bl	a780 <last_component@plt>
   142c8:	sub	x0, x0, x19
   142cc:	b	142e0 <dir_len@@Base+0x38>
   142d0:	ldrb	w2, [x19, x1]
   142d4:	cmp	w2, #0x2f
   142d8:	b.ne	142ec <dir_len@@Base+0x44>  // b.any
   142dc:	mov	x0, x1
   142e0:	sub	x1, x0, #0x1
   142e4:	cmp	x0, x20
   142e8:	b.hi	142d0 <dir_len@@Base+0x28>  // b.pmore
   142ec:	ldp	x19, x20, [sp, #16]
   142f0:	ldp	x29, x30, [sp], #32
   142f4:	ret

00000000000142f8 <mdir_name@@Base>:
   142f8:	stp	x29, x30, [sp, #-48]!
   142fc:	mov	x29, sp
   14300:	stp	x19, x20, [sp, #16]
   14304:	str	x21, [sp, #32]
   14308:	mov	x21, x0
   1430c:	bl	aa20 <dir_len@plt>
   14310:	cmp	x0, #0x0
   14314:	mov	x19, x0
   14318:	add	x0, x0, #0x1
   1431c:	cinc	x0, x0, eq  // eq = none
   14320:	bl	a5f0 <malloc@plt>
   14324:	mov	x20, x0
   14328:	cbz	x0, 14340 <mdir_name@@Base+0x48>
   1432c:	mov	x1, x21
   14330:	mov	x2, x19
   14334:	bl	a2c0 <memcpy@plt>
   14338:	cbz	x19, 14354 <mdir_name@@Base+0x5c>
   1433c:	strb	wzr, [x20, x19]
   14340:	mov	x0, x20
   14344:	ldp	x19, x20, [sp, #16]
   14348:	ldr	x21, [sp, #32]
   1434c:	ldp	x29, x30, [sp], #48
   14350:	ret
   14354:	mov	w0, #0x2e                  	// #46
   14358:	mov	x19, #0x1                   	// #1
   1435c:	strb	w0, [x20]
   14360:	b	1433c <mdir_name@@Base+0x44>
   14364:	nop

0000000000014368 <last_component@@Base>:
   14368:	ldrb	w1, [x0]
   1436c:	cmp	w1, #0x2f
   14370:	b.ne	14384 <last_component@@Base+0x1c>  // b.any
   14374:	nop
   14378:	ldrb	w1, [x0, #1]!
   1437c:	cmp	w1, #0x2f
   14380:	b.eq	14378 <last_component@@Base+0x10>  // b.none
   14384:	cbz	w1, 143bc <last_component@@Base+0x54>
   14388:	mov	x2, x0
   1438c:	mov	w3, #0x0                   	// #0
   14390:	b	143a8 <last_component@@Base+0x40>
   14394:	cbz	w3, 143a0 <last_component@@Base+0x38>
   14398:	mov	x0, x2
   1439c:	mov	w3, #0x0                   	// #0
   143a0:	ldrb	w1, [x2, #1]!
   143a4:	cbz	w1, 143bc <last_component@@Base+0x54>
   143a8:	cmp	w1, #0x2f
   143ac:	b.ne	14394 <last_component@@Base+0x2c>  // b.any
   143b0:	ldrb	w1, [x2, #1]!
   143b4:	mov	w3, #0x1                   	// #1
   143b8:	cbnz	w1, 143a8 <last_component@@Base+0x40>
   143bc:	ret

00000000000143c0 <base_len@@Base>:
   143c0:	stp	x29, x30, [sp, #-32]!
   143c4:	mov	x29, sp
   143c8:	str	x19, [sp, #16]
   143cc:	mov	x19, x0
   143d0:	bl	a340 <strlen@plt>
   143d4:	subs	x1, x0, #0x1
   143d8:	b.ls	143e8 <base_len@@Base+0x28>  // b.plast
   143dc:	ldrb	w2, [x19, x1]
   143e0:	cmp	w2, #0x2f
   143e4:	b.eq	143f4 <base_len@@Base+0x34>  // b.none
   143e8:	ldr	x19, [sp, #16]
   143ec:	ldp	x29, x30, [sp], #32
   143f0:	ret
   143f4:	mov	x0, x1
   143f8:	b	143d4 <base_len@@Base+0x14>
   143fc:	nop

0000000000014400 <strip_trailing_slashes@@Base>:
   14400:	stp	x29, x30, [sp, #-32]!
   14404:	mov	x29, sp
   14408:	str	x19, [sp, #16]
   1440c:	mov	x19, x0
   14410:	bl	a780 <last_component@plt>
   14414:	ldrb	w1, [x0]
   14418:	cmp	w1, #0x0
   1441c:	csel	x19, x19, x0, eq  // eq = none
   14420:	mov	x0, x19
   14424:	bl	a2a0 <base_len@plt>
   14428:	ldrb	w1, [x19, x0]
   1442c:	strb	wzr, [x19, x0]
   14430:	cmp	w1, #0x0
   14434:	cset	w0, ne  // ne = any
   14438:	ldr	x19, [sp, #16]
   1443c:	ldp	x29, x30, [sp], #32
   14440:	ret
   14444:	nop

0000000000014448 <fd_safer_flag@@Base>:
   14448:	stp	x29, x30, [sp, #-48]!
   1444c:	cmp	w0, #0x2
   14450:	mov	x29, sp
   14454:	stp	x19, x20, [sp, #16]
   14458:	mov	w19, w0
   1445c:	b.ls	14470 <fd_safer_flag@@Base+0x28>  // b.plast
   14460:	mov	w0, w19
   14464:	ldp	x19, x20, [sp, #16]
   14468:	ldp	x29, x30, [sp], #48
   1446c:	ret
   14470:	str	x21, [sp, #32]
   14474:	bl	ac80 <dup_safer_flag@plt>
   14478:	mov	w21, w0
   1447c:	bl	aeb0 <__errno_location@plt>
   14480:	mov	x20, x0
   14484:	mov	w0, w19
   14488:	mov	w19, w21
   1448c:	ldr	w21, [x20]
   14490:	bl	a850 <close@plt>
   14494:	str	w21, [x20]
   14498:	mov	w0, w19
   1449c:	ldp	x19, x20, [sp, #16]
   144a0:	ldr	x21, [sp, #32]
   144a4:	ldp	x29, x30, [sp], #48
   144a8:	ret
   144ac:	nop

00000000000144b0 <dup_safer_flag@@Base>:
   144b0:	ands	w1, w1, #0x80000
   144b4:	mov	w3, #0x406                 	// #1030
   144b8:	mov	w2, #0x3                   	// #3
   144bc:	csel	w1, w1, w3, eq  // eq = none
   144c0:	b	abe0 <rpl_fcntl@plt>
   144c4:	nop

00000000000144c8 <record_file@@Base>:
   144c8:	cbz	x0, 14548 <record_file@@Base+0x80>
   144cc:	stp	x29, x30, [sp, #-48]!
   144d0:	mov	x29, sp
   144d4:	stp	x21, x22, [sp, #32]
   144d8:	mov	x21, x2
   144dc:	mov	x22, x1
   144e0:	stp	x19, x20, [sp, #16]
   144e4:	mov	x20, x0
   144e8:	mov	x0, #0x18                  	// #24
   144ec:	bl	a710 <xmalloc@plt>
   144f0:	mov	x19, x0
   144f4:	mov	x0, x22
   144f8:	bl	a730 <xstrdup@plt>
   144fc:	ldp	x2, x3, [x21]
   14500:	mov	x4, x0
   14504:	stp	x4, x3, [x19]
   14508:	mov	x1, x19
   1450c:	mov	x0, x20
   14510:	str	x2, [x19, #16]
   14514:	bl	a450 <hash_insert@plt>
   14518:	cbz	x0, 1454c <record_file@@Base+0x84>
   1451c:	cmp	x19, x0
   14520:	b.eq	14538 <record_file@@Base+0x70>  // b.none
   14524:	mov	x0, x19
   14528:	ldp	x19, x20, [sp, #16]
   1452c:	ldp	x21, x22, [sp, #32]
   14530:	ldp	x29, x30, [sp], #48
   14534:	b	a560 <triple_free@plt>
   14538:	ldp	x19, x20, [sp, #16]
   1453c:	ldp	x21, x22, [sp, #32]
   14540:	ldp	x29, x30, [sp], #48
   14544:	ret
   14548:	ret
   1454c:	bl	a890 <xalloc_die@plt>

0000000000014550 <seen_file@@Base>:
   14550:	cbz	x0, 14584 <seen_file@@Base+0x34>
   14554:	stp	x29, x30, [sp, #-48]!
   14558:	mov	x3, x1
   1455c:	mov	x29, sp
   14560:	ldp	x4, x2, [x2]
   14564:	add	x1, sp, #0x18
   14568:	stp	x3, x2, [sp, #24]
   1456c:	str	x4, [sp, #40]
   14570:	bl	a870 <hash_lookup@plt>
   14574:	cmp	x0, #0x0
   14578:	cset	w0, ne  // ne = any
   1457c:	ldp	x29, x30, [sp], #48
   14580:	ret
   14584:	mov	w0, #0x0                   	// #0
   14588:	ret
   1458c:	nop

0000000000014590 <mfile_name_concat@@Base>:
   14590:	stp	x29, x30, [sp, #-80]!
   14594:	mov	x29, sp
   14598:	stp	x19, x20, [sp, #16]
   1459c:	stp	x21, x22, [sp, #32]
   145a0:	mov	x21, x1
   145a4:	mov	x22, x0
   145a8:	stp	x23, x24, [sp, #48]
   145ac:	mov	x23, x2
   145b0:	stp	x25, x26, [sp, #64]
   145b4:	bl	a780 <last_component@plt>
   145b8:	mov	x20, x0
   145bc:	bl	a2a0 <base_len@plt>
   145c0:	mov	x19, x0
   145c4:	mov	x0, x21
   145c8:	bl	a340 <strlen@plt>
   145cc:	sub	x3, x20, x22
   145d0:	mov	x24, x0
   145d4:	add	x26, x3, x19
   145d8:	add	x1, x0, #0x1
   145dc:	cbz	x19, 14664 <mfile_name_concat@@Base+0xd4>
   145e0:	add	x0, x22, x26
   145e4:	ldurb	w0, [x0, #-1]
   145e8:	cmp	w0, #0x2f
   145ec:	b.eq	14688 <mfile_name_concat@@Base+0xf8>  // b.none
   145f0:	ldrb	w0, [x21]
   145f4:	cmp	w0, #0x2f
   145f8:	b.eq	14688 <mfile_name_concat@@Base+0xf8>  // b.none
   145fc:	add	x0, x26, #0x1
   14600:	mov	x19, #0x1                   	// #1
   14604:	mov	w25, #0x2f                  	// #47
   14608:	add	x0, x0, x1
   1460c:	bl	a5f0 <malloc@plt>
   14610:	mov	x20, x0
   14614:	cbz	x0, 14648 <mfile_name_concat@@Base+0xb8>
   14618:	mov	x1, x22
   1461c:	mov	x2, x26
   14620:	bl	aab0 <mempcpy@plt>
   14624:	mov	x1, x0
   14628:	add	x0, x0, x19
   1462c:	strb	w25, [x1]
   14630:	cbz	x23, 14638 <mfile_name_concat@@Base+0xa8>
   14634:	str	x0, [x23]
   14638:	mov	x2, x24
   1463c:	mov	x1, x21
   14640:	bl	aab0 <mempcpy@plt>
   14644:	strb	wzr, [x0]
   14648:	mov	x0, x20
   1464c:	ldp	x19, x20, [sp, #16]
   14650:	ldp	x21, x22, [sp, #32]
   14654:	ldp	x23, x24, [sp, #48]
   14658:	ldp	x25, x26, [sp, #64]
   1465c:	ldp	x29, x30, [sp], #80
   14660:	ret
   14664:	ldrb	w2, [x21]
   14668:	mov	x0, x26
   1466c:	mov	w25, #0x0                   	// #0
   14670:	cmp	w2, #0x2f
   14674:	b.ne	14608 <mfile_name_concat@@Base+0x78>  // b.any
   14678:	add	x0, x3, #0x1
   1467c:	mov	x19, #0x1                   	// #1
   14680:	mov	w25, #0x2e                  	// #46
   14684:	b	14608 <mfile_name_concat@@Base+0x78>
   14688:	mov	x0, x26
   1468c:	mov	x19, #0x0                   	// #0
   14690:	mov	w25, #0x0                   	// #0
   14694:	b	14608 <mfile_name_concat@@Base+0x78>

0000000000014698 <getprogname@@Base>:
   14698:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   1469c:	ldr	x0, [x0, #4008]
   146a0:	ldr	x0, [x0]
   146a4:	ret

00000000000146a8 <gettime@@Base>:
   146a8:	mov	x1, x0
   146ac:	mov	w0, #0x0                   	// #0
   146b0:	b	a4f0 <clock_gettime@plt>
   146b4:	nop

00000000000146b8 <current_timespec@@Base>:
   146b8:	stp	x29, x30, [sp, #-32]!
   146bc:	mov	x29, sp
   146c0:	add	x0, sp, #0x10
   146c4:	bl	af80 <gettime@plt>
   146c8:	ldp	x0, x1, [sp, #16]
   146cc:	ldp	x29, x30, [sp], #32
   146d0:	ret
   146d4:	nop

00000000000146d8 <hard_locale@@Base>:
   146d8:	stp	x29, x30, [sp, #-16]!
   146dc:	mov	x1, #0x0                   	// #0
   146e0:	mov	x29, sp
   146e4:	bl	afd0 <setlocale@plt>
   146e8:	mov	w1, #0x1                   	// #1
   146ec:	cbz	x0, 14710 <hard_locale@@Base+0x38>
   146f0:	ldrb	w1, [x0]
   146f4:	cmp	w1, #0x43
   146f8:	b.eq	1471c <hard_locale@@Base+0x44>  // b.none
   146fc:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   14700:	add	x1, x1, #0x360
   14704:	bl	a9b0 <strcmp@plt>
   14708:	cmp	w0, #0x0
   1470c:	cset	w1, ne  // ne = any
   14710:	mov	w0, w1
   14714:	ldp	x29, x30, [sp], #16
   14718:	ret
   1471c:	ldrb	w2, [x0, #1]
   14720:	mov	w1, #0x0                   	// #0
   14724:	cbnz	w2, 146fc <hard_locale@@Base+0x24>
   14728:	mov	w0, w1
   1472c:	ldp	x29, x30, [sp], #16
   14730:	ret
   14734:	nop
   14738:	ror	x2, x0, #3
   1473c:	udiv	x0, x2, x1
   14740:	msub	x0, x0, x1, x2
   14744:	ret
   14748:	cmp	x1, x0
   1474c:	cset	w0, eq  // eq = none
   14750:	ret
   14754:	nop
   14758:	stp	x29, x30, [sp, #-32]!
   1475c:	mov	x29, sp
   14760:	str	x19, [sp, #16]
   14764:	mov	x19, x0
   14768:	mov	x0, x1
   1476c:	ldr	x1, [x19, #16]
   14770:	ldr	x2, [x19, #48]
   14774:	blr	x2
   14778:	ldr	x1, [x19, #16]
   1477c:	cmp	x1, x0
   14780:	b.ls	14798 <hard_locale@@Base+0xc0>  // b.plast
   14784:	ldr	x1, [x19]
   14788:	ldr	x19, [sp, #16]
   1478c:	add	x0, x1, x0, lsl #4
   14790:	ldp	x29, x30, [sp], #32
   14794:	ret
   14798:	bl	a900 <abort@plt>
   1479c:	nop
   147a0:	stp	x29, x30, [sp, #-64]!
   147a4:	mov	x29, sp
   147a8:	str	x23, [sp, #48]
   147ac:	mov	x23, x2
   147b0:	stp	x19, x20, [sp, #16]
   147b4:	mov	x20, x1
   147b8:	stp	x21, x22, [sp, #32]
   147bc:	and	w22, w3, #0xff
   147c0:	mov	x21, x0
   147c4:	bl	14758 <hard_locale@@Base+0x80>
   147c8:	str	x0, [x23]
   147cc:	ldr	x1, [x0]
   147d0:	cbz	x1, 1485c <hard_locale@@Base+0x184>
   147d4:	mov	x19, x0
   147d8:	cmp	x1, x20
   147dc:	b.eq	148b4 <hard_locale@@Base+0x1dc>  // b.none
   147e0:	ldr	x2, [x21, #56]
   147e4:	mov	x0, x20
   147e8:	blr	x2
   147ec:	tst	w0, #0xff
   147f0:	b.eq	14854 <hard_locale@@Base+0x17c>  // b.none
   147f4:	ldr	x0, [x19]
   147f8:	cbz	w22, 14860 <hard_locale@@Base+0x188>
   147fc:	ldr	x1, [x19, #8]
   14800:	cbz	x1, 148ac <hard_locale@@Base+0x1d4>
   14804:	ldp	x2, x3, [x1]
   14808:	stp	x2, x3, [x19]
   1480c:	str	xzr, [x1]
   14810:	ldp	x19, x20, [sp, #16]
   14814:	ldr	x2, [x21, #72]
   14818:	str	x2, [x1, #8]
   1481c:	str	x1, [x21, #72]
   14820:	ldp	x21, x22, [sp, #32]
   14824:	ldr	x23, [sp, #48]
   14828:	ldp	x29, x30, [sp], #64
   1482c:	ret
   14830:	ldr	x1, [x2]
   14834:	mov	x0, x20
   14838:	cmp	x1, x20
   1483c:	b.eq	14874 <hard_locale@@Base+0x19c>  // b.none
   14840:	ldr	x2, [x21, #56]
   14844:	blr	x2
   14848:	tst	w0, #0xff
   1484c:	b.ne	14874 <hard_locale@@Base+0x19c>  // b.any
   14850:	ldr	x19, [x19, #8]
   14854:	ldr	x2, [x19, #8]
   14858:	cbnz	x2, 14830 <hard_locale@@Base+0x158>
   1485c:	mov	x0, #0x0                   	// #0
   14860:	ldp	x19, x20, [sp, #16]
   14864:	ldp	x21, x22, [sp, #32]
   14868:	ldr	x23, [sp, #48]
   1486c:	ldp	x29, x30, [sp], #64
   14870:	ret
   14874:	ldr	x1, [x19, #8]
   14878:	ldr	x0, [x1]
   1487c:	cbz	w22, 14860 <hard_locale@@Base+0x188>
   14880:	ldr	x2, [x1, #8]
   14884:	str	x2, [x19, #8]
   14888:	str	xzr, [x1]
   1488c:	ldp	x19, x20, [sp, #16]
   14890:	ldr	x2, [x21, #72]
   14894:	str	x2, [x1, #8]
   14898:	str	x1, [x21, #72]
   1489c:	ldp	x21, x22, [sp, #32]
   148a0:	ldr	x23, [sp, #48]
   148a4:	ldp	x29, x30, [sp], #64
   148a8:	ret
   148ac:	str	xzr, [x19]
   148b0:	b	14860 <hard_locale@@Base+0x188>
   148b4:	mov	x0, x1
   148b8:	b	147f8 <hard_locale@@Base+0x120>
   148bc:	nop
   148c0:	mov	x1, x0
   148c4:	adrp	x2, 2c000 <vasnprintf@@Base+0x11e0>
   148c8:	add	x0, x2, #0xd00
   148cc:	ldr	x3, [x1]
   148d0:	cmp	x3, x0
   148d4:	b.eq	14960 <hard_locale@@Base+0x288>  // b.none
   148d8:	mov	w0, #0xcccd                	// #52429
   148dc:	ldr	s1, [x3, #8]
   148e0:	movk	w0, #0x3dcc, lsl #16
   148e4:	fmov	s0, w0
   148e8:	fcmpe	s1, s0
   148ec:	b.le	14950 <hard_locale@@Base+0x278>
   148f0:	mov	w0, #0x6666                	// #26214
   148f4:	movk	w0, #0x3f66, lsl #16
   148f8:	fmov	s2, w0
   148fc:	fcmpe	s1, s2
   14900:	b.pl	14950 <hard_locale@@Base+0x278>  // b.nfrst
   14904:	mov	w0, #0xcccd                	// #52429
   14908:	ldr	s3, [x3, #12]
   1490c:	movk	w0, #0x3f8c, lsl #16
   14910:	fmov	s2, w0
   14914:	fcmpe	s3, s2
   14918:	b.le	14950 <hard_locale@@Base+0x278>
   1491c:	ldr	s2, [x3]
   14920:	fcmpe	s2, #0.0
   14924:	b.lt	14950 <hard_locale@@Base+0x278>  // b.tstop
   14928:	fadd	s0, s2, s0
   1492c:	ldr	s2, [x3, #4]
   14930:	fcmpe	s0, s2
   14934:	b.pl	14950 <hard_locale@@Base+0x278>  // b.nfrst
   14938:	fmov	s3, #1.000000000000000000e+00
   1493c:	fcmpe	s2, s3
   14940:	b.hi	14950 <hard_locale@@Base+0x278>  // b.pmore
   14944:	fcmpe	s1, s0
   14948:	mov	w0, #0x1                   	// #1
   1494c:	b.gt	1495c <hard_locale@@Base+0x284>
   14950:	add	x2, x2, #0xd00
   14954:	mov	w0, #0x0                   	// #0
   14958:	str	x2, [x1]
   1495c:	ret
   14960:	mov	w0, #0x1                   	// #1
   14964:	ret
   14968:	tst	w1, #0xff
   1496c:	b.ne	14990 <hard_locale@@Base+0x2b8>  // b.any
   14970:	ucvtf	s1, x0
   14974:	mov	w0, #0x5f800000            	// #1602224128
   14978:	fmov	s2, w0
   1497c:	mov	x0, #0x0                   	// #0
   14980:	fdiv	s0, s1, s0
   14984:	fcmpe	s0, s2
   14988:	b.ge	14a10 <hard_locale@@Base+0x338>  // b.tcont
   1498c:	fcvtzu	x0, s0
   14990:	cmp	x0, #0xa
   14994:	mov	x1, #0xa                   	// #10
   14998:	csel	x0, x0, x1, cs  // cs = hs, nlast
   1499c:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   149a0:	orr	x0, x0, #0x1
   149a4:	movk	x5, #0xaaab
   149a8:	cmn	x0, #0x1
   149ac:	b.eq	14a0c <hard_locale@@Base+0x334>  // b.none
   149b0:	umulh	x1, x0, x5
   149b4:	cmp	x0, #0x9
   149b8:	and	x2, x1, #0xfffffffffffffffe
   149bc:	add	x1, x2, x1, lsr #1
   149c0:	sub	x1, x0, x1
   149c4:	b.ls	149fc <hard_locale@@Base+0x324>  // b.plast
   149c8:	cbz	x1, 14a00 <hard_locale@@Base+0x328>
   149cc:	mov	x4, #0x10                  	// #16
   149d0:	mov	x3, #0x9                   	// #9
   149d4:	mov	x2, #0x3                   	// #3
   149d8:	b	149e0 <hard_locale@@Base+0x308>
   149dc:	cbz	x1, 14a00 <hard_locale@@Base+0x328>
   149e0:	add	x2, x2, #0x2
   149e4:	add	x3, x3, x4
   149e8:	cmp	x0, x3
   149ec:	add	x4, x4, #0x8
   149f0:	udiv	x1, x0, x2
   149f4:	msub	x1, x1, x2, x0
   149f8:	b.hi	149dc <hard_locale@@Base+0x304>  // b.pmore
   149fc:	cbnz	x1, 14a14 <hard_locale@@Base+0x33c>
   14a00:	add	x0, x0, #0x2
   14a04:	cmn	x0, #0x1
   14a08:	b.ne	149b0 <hard_locale@@Base+0x2d8>  // b.any
   14a0c:	mov	x0, #0x0                   	// #0
   14a10:	ret
   14a14:	cmp	xzr, x0, lsr #61
   14a18:	cset	x1, ne  // ne = any
   14a1c:	tbnz	x0, #60, 14a0c <hard_locale@@Base+0x334>
   14a20:	cbnz	x1, 14a0c <hard_locale@@Base+0x334>
   14a24:	ret
   14a28:	stp	x29, x30, [sp, #-64]!
   14a2c:	mov	x29, sp
   14a30:	stp	x19, x20, [sp, #16]
   14a34:	mov	x20, x0
   14a38:	stp	x21, x22, [sp, #32]
   14a3c:	ldp	x22, x0, [x1]
   14a40:	stp	x23, x24, [sp, #48]
   14a44:	mov	x23, x1
   14a48:	and	w24, w2, #0xff
   14a4c:	cmp	x22, x0
   14a50:	b.cc	14a64 <hard_locale@@Base+0x38c>  // b.lo, b.ul, b.last
   14a54:	b	14ac4 <hard_locale@@Base+0x3ec>
   14a58:	add	x22, x22, #0x10
   14a5c:	cmp	x0, x22
   14a60:	b.ls	14ac4 <hard_locale@@Base+0x3ec>  // b.plast
   14a64:	ldr	x21, [x22]
   14a68:	cbz	x21, 14a58 <hard_locale@@Base+0x380>
   14a6c:	ldr	x19, [x22, #8]
   14a70:	cbz	x19, 14aac <hard_locale@@Base+0x3d4>
   14a74:	nop
   14a78:	ldr	x21, [x19]
   14a7c:	mov	x0, x20
   14a80:	mov	x1, x21
   14a84:	bl	14758 <hard_locale@@Base+0x80>
   14a88:	ldr	x3, [x0]
   14a8c:	mov	x2, x19
   14a90:	ldr	x19, [x19, #8]
   14a94:	cbz	x3, 14ae0 <hard_locale@@Base+0x408>
   14a98:	ldr	x1, [x0, #8]
   14a9c:	str	x1, [x2, #8]
   14aa0:	str	x2, [x0, #8]
   14aa4:	cbnz	x19, 14a78 <hard_locale@@Base+0x3a0>
   14aa8:	ldr	x21, [x22]
   14aac:	str	xzr, [x22, #8]
   14ab0:	cbz	w24, 14b08 <hard_locale@@Base+0x430>
   14ab4:	ldr	x0, [x23, #8]
   14ab8:	add	x22, x22, #0x10
   14abc:	cmp	x0, x22
   14ac0:	b.hi	14a64 <hard_locale@@Base+0x38c>  // b.pmore
   14ac4:	mov	w24, #0x1                   	// #1
   14ac8:	mov	w0, w24
   14acc:	ldp	x19, x20, [sp, #16]
   14ad0:	ldp	x21, x22, [sp, #32]
   14ad4:	ldp	x23, x24, [sp, #48]
   14ad8:	ldp	x29, x30, [sp], #64
   14adc:	ret
   14ae0:	ldr	x1, [x20, #24]
   14ae4:	str	x21, [x0]
   14ae8:	add	x1, x1, #0x1
   14aec:	str	x1, [x20, #24]
   14af0:	str	xzr, [x2]
   14af4:	ldr	x0, [x20, #72]
   14af8:	str	x0, [x2, #8]
   14afc:	str	x2, [x20, #72]
   14b00:	cbnz	x19, 14a78 <hard_locale@@Base+0x3a0>
   14b04:	b	14aa8 <hard_locale@@Base+0x3d0>
   14b08:	mov	x1, x21
   14b0c:	mov	x0, x20
   14b10:	bl	14758 <hard_locale@@Base+0x80>
   14b14:	mov	x19, x0
   14b18:	ldr	x0, [x0]
   14b1c:	cbz	x0, 14b54 <hard_locale@@Base+0x47c>
   14b20:	ldr	x0, [x20, #72]
   14b24:	cbz	x0, 14b68 <hard_locale@@Base+0x490>
   14b28:	ldr	x1, [x0, #8]
   14b2c:	str	x1, [x20, #72]
   14b30:	ldr	x1, [x19, #8]
   14b34:	stp	x21, x1, [x0]
   14b38:	str	x0, [x19, #8]
   14b3c:	ldr	x1, [x23, #24]
   14b40:	str	xzr, [x22]
   14b44:	sub	x1, x1, #0x1
   14b48:	str	x1, [x23, #24]
   14b4c:	ldr	x0, [x23, #8]
   14b50:	b	14a58 <hard_locale@@Base+0x380>
   14b54:	ldr	x0, [x20, #24]
   14b58:	str	x21, [x19]
   14b5c:	add	x0, x0, #0x1
   14b60:	str	x0, [x20, #24]
   14b64:	b	14b3c <hard_locale@@Base+0x464>
   14b68:	mov	x0, #0x10                  	// #16
   14b6c:	bl	a5f0 <malloc@plt>
   14b70:	cbnz	x0, 14b30 <hard_locale@@Base+0x458>
   14b74:	mov	w0, w24
   14b78:	ldp	x19, x20, [sp, #16]
   14b7c:	ldp	x21, x22, [sp, #32]
   14b80:	ldp	x23, x24, [sp, #48]
   14b84:	ldp	x29, x30, [sp], #64
   14b88:	ret
   14b8c:	nop

0000000000014b90 <hash_get_n_buckets@@Base>:
   14b90:	ldr	x0, [x0, #16]
   14b94:	ret

0000000000014b98 <hash_get_n_buckets_used@@Base>:
   14b98:	ldr	x0, [x0, #24]
   14b9c:	ret

0000000000014ba0 <hash_get_n_entries@@Base>:
   14ba0:	ldr	x0, [x0, #32]
   14ba4:	ret

0000000000014ba8 <hash_get_max_bucket_length@@Base>:
   14ba8:	ldp	x3, x4, [x0]
   14bac:	mov	x0, #0x0                   	// #0
   14bb0:	cmp	x3, x4
   14bb4:	b.cc	14bc8 <hash_get_max_bucket_length@@Base+0x20>  // b.lo, b.ul, b.last
   14bb8:	b	14c00 <hash_get_max_bucket_length@@Base+0x58>
   14bbc:	add	x3, x3, #0x10
   14bc0:	cmp	x3, x4
   14bc4:	b.cs	14c00 <hash_get_max_bucket_length@@Base+0x58>  // b.hs, b.nlast
   14bc8:	ldr	x1, [x3]
   14bcc:	cbz	x1, 14bbc <hash_get_max_bucket_length@@Base+0x14>
   14bd0:	ldr	x1, [x3, #8]
   14bd4:	mov	x2, #0x1                   	// #1
   14bd8:	cbz	x1, 14bec <hash_get_max_bucket_length@@Base+0x44>
   14bdc:	nop
   14be0:	ldr	x1, [x1, #8]
   14be4:	add	x2, x2, #0x1
   14be8:	cbnz	x1, 14be0 <hash_get_max_bucket_length@@Base+0x38>
   14bec:	cmp	x0, x2
   14bf0:	add	x3, x3, #0x10
   14bf4:	csel	x0, x0, x2, cs  // cs = hs, nlast
   14bf8:	cmp	x3, x4
   14bfc:	b.cc	14bc8 <hash_get_max_bucket_length@@Base+0x20>  // b.lo, b.ul, b.last
   14c00:	ret
   14c04:	nop

0000000000014c08 <hash_table_ok@@Base>:
   14c08:	ldp	x3, x4, [x0]
   14c0c:	mov	x6, x0
   14c10:	mov	x2, #0x0                   	// #0
   14c14:	mov	x5, #0x0                   	// #0
   14c18:	cmp	x3, x4
   14c1c:	b.cc	14c30 <hash_table_ok@@Base+0x28>  // b.lo, b.ul, b.last
   14c20:	b	14c60 <hash_table_ok@@Base+0x58>
   14c24:	add	x3, x3, #0x10
   14c28:	cmp	x3, x4
   14c2c:	b.cs	14c60 <hash_table_ok@@Base+0x58>  // b.hs, b.nlast
   14c30:	ldr	x1, [x3]
   14c34:	cbz	x1, 14c24 <hash_table_ok@@Base+0x1c>
   14c38:	ldr	x1, [x3, #8]
   14c3c:	add	x5, x5, #0x1
   14c40:	add	x2, x2, #0x1
   14c44:	cbz	x1, 14c24 <hash_table_ok@@Base+0x1c>
   14c48:	ldr	x1, [x1, #8]
   14c4c:	add	x2, x2, #0x1
   14c50:	cbnz	x1, 14c48 <hash_table_ok@@Base+0x40>
   14c54:	add	x3, x3, #0x10
   14c58:	cmp	x3, x4
   14c5c:	b.cc	14c30 <hash_table_ok@@Base+0x28>  // b.lo, b.ul, b.last
   14c60:	ldr	x1, [x6, #24]
   14c64:	mov	w0, #0x0                   	// #0
   14c68:	cmp	x1, x5
   14c6c:	b.eq	14c74 <hash_table_ok@@Base+0x6c>  // b.none
   14c70:	ret
   14c74:	ldr	x0, [x6, #32]
   14c78:	cmp	x0, x2
   14c7c:	cset	w0, eq  // eq = none
   14c80:	ret
   14c84:	nop

0000000000014c88 <hash_print_statistics@@Base>:
   14c88:	stp	x29, x30, [sp, #-64]!
   14c8c:	mov	x29, sp
   14c90:	stp	x19, x20, [sp, #16]
   14c94:	mov	x19, x1
   14c98:	stp	x21, x22, [sp, #32]
   14c9c:	mov	x21, x0
   14ca0:	str	x23, [sp, #48]
   14ca4:	bl	afb0 <hash_get_n_entries@plt>
   14ca8:	mov	x23, x0
   14cac:	mov	x0, x21
   14cb0:	bl	aaf0 <hash_get_n_buckets@plt>
   14cb4:	mov	x20, x0
   14cb8:	mov	x0, x21
   14cbc:	bl	a7b0 <hash_get_n_buckets_used@plt>
   14cc0:	mov	x22, x0
   14cc4:	mov	x0, x21
   14cc8:	bl	aa10 <hash_get_max_bucket_length@plt>
   14ccc:	mov	x21, x0
   14cd0:	mov	x2, x23
   14cd4:	mov	x0, x19
   14cd8:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   14cdc:	add	x1, x1, #0xc90
   14ce0:	bl	afa0 <fprintf@plt>
   14ce4:	mov	x2, x20
   14ce8:	mov	x0, x19
   14cec:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   14cf0:	add	x1, x1, #0xca8
   14cf4:	bl	afa0 <fprintf@plt>
   14cf8:	ucvtf	d0, x22
   14cfc:	mov	x0, #0x4059000000000000    	// #4636737291354636288
   14d00:	fmov	d2, x0
   14d04:	ucvtf	d1, x20
   14d08:	mov	x2, x22
   14d0c:	mov	x0, x19
   14d10:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   14d14:	add	x1, x1, #0xcc0
   14d18:	fmul	d0, d0, d2
   14d1c:	fdiv	d0, d0, d1
   14d20:	bl	afa0 <fprintf@plt>
   14d24:	mov	x2, x21
   14d28:	mov	x0, x19
   14d2c:	ldp	x19, x20, [sp, #16]
   14d30:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   14d34:	ldp	x21, x22, [sp, #32]
   14d38:	add	x1, x1, #0xce8
   14d3c:	ldr	x23, [sp, #48]
   14d40:	ldp	x29, x30, [sp], #64
   14d44:	b	afa0 <fprintf@plt>

0000000000014d48 <hash_lookup@@Base>:
   14d48:	stp	x29, x30, [sp, #-48]!
   14d4c:	mov	x29, sp
   14d50:	stp	x19, x20, [sp, #16]
   14d54:	mov	x20, x1
   14d58:	str	x21, [sp, #32]
   14d5c:	mov	x21, x0
   14d60:	bl	14758 <hard_locale@@Base+0x80>
   14d64:	ldr	x1, [x0]
   14d68:	cbz	x1, 14d9c <hash_lookup@@Base+0x54>
   14d6c:	mov	x19, x0
   14d70:	b	14d78 <hash_lookup@@Base+0x30>
   14d74:	ldr	x1, [x19]
   14d78:	mov	x0, x20
   14d7c:	cmp	x1, x20
   14d80:	b.eq	14db4 <hash_lookup@@Base+0x6c>  // b.none
   14d84:	ldr	x2, [x21, #56]
   14d88:	blr	x2
   14d8c:	tst	w0, #0xff
   14d90:	b.ne	14db0 <hash_lookup@@Base+0x68>  // b.any
   14d94:	ldr	x19, [x19, #8]
   14d98:	cbnz	x19, 14d74 <hash_lookup@@Base+0x2c>
   14d9c:	mov	x0, #0x0                   	// #0
   14da0:	ldp	x19, x20, [sp, #16]
   14da4:	ldr	x21, [sp, #32]
   14da8:	ldp	x29, x30, [sp], #48
   14dac:	ret
   14db0:	ldr	x20, [x19]
   14db4:	mov	x0, x20
   14db8:	ldp	x19, x20, [sp, #16]
   14dbc:	ldr	x21, [sp, #32]
   14dc0:	ldp	x29, x30, [sp], #48
   14dc4:	ret

0000000000014dc8 <hash_get_first@@Base>:
   14dc8:	ldr	x1, [x0, #32]
   14dcc:	cbz	x1, 14df8 <hash_get_first@@Base+0x30>
   14dd0:	ldp	x1, x2, [x0]
   14dd4:	cmp	x1, x2
   14dd8:	b.cc	14dec <hash_get_first@@Base+0x24>  // b.lo, b.ul, b.last
   14ddc:	b	14e00 <hash_get_first@@Base+0x38>
   14de0:	add	x1, x1, #0x10
   14de4:	cmp	x1, x2
   14de8:	b.cs	14e00 <hash_get_first@@Base+0x38>  // b.hs, b.nlast
   14dec:	ldr	x0, [x1]
   14df0:	cbz	x0, 14de0 <hash_get_first@@Base+0x18>
   14df4:	ret
   14df8:	mov	x0, #0x0                   	// #0
   14dfc:	ret
   14e00:	stp	x29, x30, [sp, #-16]!
   14e04:	mov	x29, sp
   14e08:	bl	a900 <abort@plt>
   14e0c:	nop

0000000000014e10 <hash_get_next@@Base>:
   14e10:	stp	x29, x30, [sp, #-32]!
   14e14:	mov	x29, sp
   14e18:	stp	x19, x20, [sp, #16]
   14e1c:	mov	x20, x0
   14e20:	mov	x19, x1
   14e24:	bl	14758 <hard_locale@@Base+0x80>
   14e28:	mov	x3, x0
   14e2c:	mov	x2, x0
   14e30:	b	14e38 <hash_get_next@@Base+0x28>
   14e34:	cbz	x2, 14e48 <hash_get_next@@Base+0x38>
   14e38:	ldp	x4, x2, [x2]
   14e3c:	cmp	x4, x19
   14e40:	b.ne	14e34 <hash_get_next@@Base+0x24>  // b.any
   14e44:	cbnz	x2, 14e74 <hash_get_next@@Base+0x64>
   14e48:	ldr	x1, [x20, #8]
   14e4c:	b	14e58 <hash_get_next@@Base+0x48>
   14e50:	ldr	x0, [x3]
   14e54:	cbnz	x0, 14e68 <hash_get_next@@Base+0x58>
   14e58:	add	x3, x3, #0x10
   14e5c:	cmp	x1, x3
   14e60:	b.hi	14e50 <hash_get_next@@Base+0x40>  // b.pmore
   14e64:	mov	x0, #0x0                   	// #0
   14e68:	ldp	x19, x20, [sp, #16]
   14e6c:	ldp	x29, x30, [sp], #32
   14e70:	ret
   14e74:	ldr	x0, [x2]
   14e78:	ldp	x19, x20, [sp, #16]
   14e7c:	ldp	x29, x30, [sp], #32
   14e80:	ret
   14e84:	nop

0000000000014e88 <hash_get_entries@@Base>:
   14e88:	ldp	x5, x3, [x0]
   14e8c:	mov	x6, x0
   14e90:	cmp	x3, x5
   14e94:	b.ls	14ee4 <hash_get_entries@@Base+0x5c>  // b.plast
   14e98:	sub	x4, x1, #0x8
   14e9c:	mov	x0, #0x0                   	// #0
   14ea0:	ldr	x1, [x5]
   14ea4:	cbnz	x1, 14eb8 <hash_get_entries@@Base+0x30>
   14ea8:	add	x5, x5, #0x10
   14eac:	cmp	x3, x5
   14eb0:	b.hi	14ea0 <hash_get_entries@@Base+0x18>  // b.pmore
   14eb4:	ret
   14eb8:	mov	x1, x5
   14ebc:	nop
   14ec0:	cmp	x2, x0
   14ec4:	b.ls	14eb4 <hash_get_entries@@Base+0x2c>  // b.plast
   14ec8:	add	x0, x0, #0x1
   14ecc:	ldr	x3, [x1]
   14ed0:	str	x3, [x4, x0, lsl #3]
   14ed4:	ldr	x1, [x1, #8]
   14ed8:	cbnz	x1, 14ec0 <hash_get_entries@@Base+0x38>
   14edc:	ldr	x3, [x6, #8]
   14ee0:	b	14ea8 <hash_get_entries@@Base+0x20>
   14ee4:	mov	x0, #0x0                   	// #0
   14ee8:	ret
   14eec:	nop

0000000000014ef0 <hash_do_for_each@@Base>:
   14ef0:	stp	x29, x30, [sp, #-64]!
   14ef4:	mov	x29, sp
   14ef8:	stp	x21, x22, [sp, #32]
   14efc:	mov	x21, x1
   14f00:	stp	x23, x24, [sp, #48]
   14f04:	ldp	x23, x1, [x0]
   14f08:	stp	x19, x20, [sp, #16]
   14f0c:	cmp	x1, x23
   14f10:	b.ls	14f7c <hash_do_for_each@@Base+0x8c>  // b.plast
   14f14:	mov	x24, x0
   14f18:	mov	x22, x2
   14f1c:	mov	x20, #0x0                   	// #0
   14f20:	ldr	x0, [x23]
   14f24:	cbnz	x0, 14f4c <hash_do_for_each@@Base+0x5c>
   14f28:	add	x23, x23, #0x10
   14f2c:	cmp	x1, x23
   14f30:	b.hi	14f20 <hash_do_for_each@@Base+0x30>  // b.pmore
   14f34:	mov	x0, x20
   14f38:	ldp	x19, x20, [sp, #16]
   14f3c:	ldp	x21, x22, [sp, #32]
   14f40:	ldp	x23, x24, [sp, #48]
   14f44:	ldp	x29, x30, [sp], #64
   14f48:	ret
   14f4c:	mov	x19, x23
   14f50:	b	14f58 <hash_do_for_each@@Base+0x68>
   14f54:	ldr	x0, [x19]
   14f58:	mov	x1, x22
   14f5c:	blr	x21
   14f60:	tst	w0, #0xff
   14f64:	b.eq	14f34 <hash_do_for_each@@Base+0x44>  // b.none
   14f68:	ldr	x19, [x19, #8]
   14f6c:	add	x20, x20, #0x1
   14f70:	cbnz	x19, 14f54 <hash_do_for_each@@Base+0x64>
   14f74:	ldr	x1, [x24, #8]
   14f78:	b	14f28 <hash_do_for_each@@Base+0x38>
   14f7c:	mov	x20, #0x0                   	// #0
   14f80:	b	14f34 <hash_do_for_each@@Base+0x44>
   14f84:	nop

0000000000014f88 <hash_string@@Base>:
   14f88:	ldrb	w4, [x0]
   14f8c:	mov	x2, #0x0                   	// #0
   14f90:	cbz	w4, 14fb4 <hash_string@@Base+0x2c>
   14f94:	nop
   14f98:	lsl	x3, x2, #5
   14f9c:	sub	x2, x3, x2
   14fa0:	add	x2, x2, w4, uxtb
   14fa4:	ldrb	w4, [x0, #1]!
   14fa8:	udiv	x3, x2, x1
   14fac:	msub	x2, x3, x1, x2
   14fb0:	cbnz	w4, 14f98 <hash_string@@Base+0x10>
   14fb4:	mov	x0, x2
   14fb8:	ret
   14fbc:	nop

0000000000014fc0 <hash_reset_tuning@@Base>:
   14fc0:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   14fc4:	add	x1, x1, #0xd00
   14fc8:	ldp	x2, x3, [x1]
   14fcc:	stp	x2, x3, [x0]
   14fd0:	ldr	w1, [x1, #16]
   14fd4:	str	w1, [x0, #16]
   14fd8:	ret
   14fdc:	nop

0000000000014fe0 <hash_initialize@@Base>:
   14fe0:	stp	x29, x30, [sp, #-64]!
   14fe4:	cmp	x2, #0x0
   14fe8:	mov	x29, sp
   14fec:	stp	x21, x22, [sp, #32]
   14ff0:	mov	x22, x2
   14ff4:	adrp	x2, 14000 <canonicalize_filename_mode@@Base+0x400>
   14ff8:	add	x2, x2, #0x738
   14ffc:	stp	x19, x20, [sp, #16]
   15000:	csel	x22, x2, x22, eq  // eq = none
   15004:	cmp	x3, #0x0
   15008:	adrp	x2, 14000 <canonicalize_filename_mode@@Base+0x400>
   1500c:	add	x2, x2, #0x748
   15010:	mov	x20, x1
   15014:	csel	x21, x2, x3, eq  // eq = none
   15018:	stp	x23, x24, [sp, #48]
   1501c:	mov	x24, x0
   15020:	mov	x23, x4
   15024:	mov	x0, #0x50                  	// #80
   15028:	bl	a5f0 <malloc@plt>
   1502c:	mov	x19, x0
   15030:	cbz	x0, 15094 <hash_initialize@@Base+0xb4>
   15034:	cmp	x20, #0x0
   15038:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   1503c:	add	x1, x1, #0xd00
   15040:	csel	x20, x1, x20, eq  // eq = none
   15044:	str	x20, [x0, #40]!
   15048:	bl	148c0 <hard_locale@@Base+0x1e8>
   1504c:	tst	w0, #0xff
   15050:	b.eq	150ac <hash_initialize@@Base+0xcc>  // b.none
   15054:	ldrb	w1, [x20, #16]
   15058:	mov	x0, x24
   1505c:	ldr	s0, [x20, #8]
   15060:	bl	14968 <hard_locale@@Base+0x290>
   15064:	str	x0, [x19, #16]
   15068:	mov	x20, x0
   1506c:	cbz	x0, 150ac <hash_initialize@@Base+0xcc>
   15070:	mov	x1, #0x10                  	// #16
   15074:	bl	a770 <calloc@plt>
   15078:	str	x0, [x19]
   1507c:	cbz	x0, 150ac <hash_initialize@@Base+0xcc>
   15080:	add	x20, x0, x20, lsl #4
   15084:	str	x20, [x19, #8]
   15088:	stp	xzr, xzr, [x19, #24]
   1508c:	stp	x22, x21, [x19, #48]
   15090:	stp	x23, xzr, [x19, #64]
   15094:	mov	x0, x19
   15098:	ldp	x19, x20, [sp, #16]
   1509c:	ldp	x21, x22, [sp, #32]
   150a0:	ldp	x23, x24, [sp, #48]
   150a4:	ldp	x29, x30, [sp], #64
   150a8:	ret
   150ac:	mov	x0, x19
   150b0:	mov	x19, #0x0                   	// #0
   150b4:	bl	aa50 <free@plt>
   150b8:	mov	x0, x19
   150bc:	ldp	x19, x20, [sp, #16]
   150c0:	ldp	x21, x22, [sp, #32]
   150c4:	ldp	x23, x24, [sp, #48]
   150c8:	ldp	x29, x30, [sp], #64
   150cc:	ret

00000000000150d0 <hash_clear@@Base>:
   150d0:	stp	x29, x30, [sp, #-48]!
   150d4:	mov	x29, sp
   150d8:	ldr	x1, [x0, #8]
   150dc:	str	x21, [sp, #32]
   150e0:	ldr	x21, [x0]
   150e4:	stp	x19, x20, [sp, #16]
   150e8:	mov	x20, x0
   150ec:	cmp	x21, x1
   150f0:	b.cc	15104 <hash_clear@@Base+0x34>  // b.lo, b.ul, b.last
   150f4:	b	15160 <hash_clear@@Base+0x90>
   150f8:	add	x21, x21, #0x10
   150fc:	cmp	x1, x21
   15100:	b.ls	15160 <hash_clear@@Base+0x90>  // b.plast
   15104:	ldr	x0, [x21]
   15108:	cbz	x0, 150f8 <hash_clear@@Base+0x28>
   1510c:	ldr	x19, [x21, #8]
   15110:	ldr	x1, [x20, #64]
   15114:	cbz	x19, 15140 <hash_clear@@Base+0x70>
   15118:	cbz	x1, 15128 <hash_clear@@Base+0x58>
   1511c:	ldr	x0, [x19]
   15120:	blr	x1
   15124:	ldr	x1, [x20, #64]
   15128:	ldr	x0, [x19, #8]
   1512c:	ldr	x2, [x20, #72]
   15130:	stp	xzr, x2, [x19]
   15134:	str	x19, [x20, #72]
   15138:	mov	x19, x0
   1513c:	cbnz	x0, 15118 <hash_clear@@Base+0x48>
   15140:	cbz	x1, 1514c <hash_clear@@Base+0x7c>
   15144:	ldr	x0, [x21]
   15148:	blr	x1
   1514c:	stp	xzr, xzr, [x21]
   15150:	add	x21, x21, #0x10
   15154:	ldr	x1, [x20, #8]
   15158:	cmp	x1, x21
   1515c:	b.hi	15104 <hash_clear@@Base+0x34>  // b.pmore
   15160:	ldr	x21, [sp, #32]
   15164:	stp	xzr, xzr, [x20, #24]
   15168:	ldp	x19, x20, [sp, #16]
   1516c:	ldp	x29, x30, [sp], #48
   15170:	ret
   15174:	nop

0000000000015178 <hash_free@@Base>:
   15178:	stp	x29, x30, [sp, #-48]!
   1517c:	mov	x29, sp
   15180:	str	x21, [sp, #32]
   15184:	mov	x21, x0
   15188:	ldr	x0, [x0, #64]
   1518c:	stp	x19, x20, [sp, #16]
   15190:	ldp	x20, x1, [x21]
   15194:	cbz	x0, 151f0 <hash_free@@Base+0x78>
   15198:	ldr	x0, [x21, #32]
   1519c:	cbz	x0, 151f0 <hash_free@@Base+0x78>
   151a0:	cmp	x20, x1
   151a4:	b.cc	151b8 <hash_free@@Base+0x40>  // b.lo, b.ul, b.last
   151a8:	b	15220 <hash_free@@Base+0xa8>
   151ac:	add	x20, x20, #0x10
   151b0:	cmp	x1, x20
   151b4:	b.ls	151ec <hash_free@@Base+0x74>  // b.plast
   151b8:	ldr	x0, [x20]
   151bc:	cbz	x0, 151ac <hash_free@@Base+0x34>
   151c0:	mov	x19, x20
   151c4:	b	151cc <hash_free@@Base+0x54>
   151c8:	ldr	x0, [x19]
   151cc:	ldr	x1, [x21, #64]
   151d0:	blr	x1
   151d4:	ldr	x19, [x19, #8]
   151d8:	cbnz	x19, 151c8 <hash_free@@Base+0x50>
   151dc:	ldr	x1, [x21, #8]
   151e0:	add	x20, x20, #0x10
   151e4:	cmp	x1, x20
   151e8:	b.hi	151b8 <hash_free@@Base+0x40>  // b.pmore
   151ec:	ldr	x20, [x21]
   151f0:	cmp	x20, x1
   151f4:	b.cs	15220 <hash_free@@Base+0xa8>  // b.hs, b.nlast
   151f8:	ldr	x19, [x20, #8]
   151fc:	cbz	x19, 15214 <hash_free@@Base+0x9c>
   15200:	mov	x0, x19
   15204:	ldr	x19, [x19, #8]
   15208:	bl	aa50 <free@plt>
   1520c:	cbnz	x19, 15200 <hash_free@@Base+0x88>
   15210:	ldr	x1, [x21, #8]
   15214:	add	x20, x20, #0x10
   15218:	cmp	x1, x20
   1521c:	b.hi	151f8 <hash_free@@Base+0x80>  // b.pmore
   15220:	ldr	x19, [x21, #72]
   15224:	cbz	x19, 15238 <hash_free@@Base+0xc0>
   15228:	mov	x0, x19
   1522c:	ldr	x19, [x19, #8]
   15230:	bl	aa50 <free@plt>
   15234:	cbnz	x19, 15228 <hash_free@@Base+0xb0>
   15238:	ldr	x0, [x21]
   1523c:	bl	aa50 <free@plt>
   15240:	mov	x0, x21
   15244:	ldp	x19, x20, [sp, #16]
   15248:	ldr	x21, [sp, #32]
   1524c:	ldp	x29, x30, [sp], #48
   15250:	b	aa50 <free@plt>
   15254:	nop

0000000000015258 <hash_rehash@@Base>:
   15258:	stp	x29, x30, [sp, #-128]!
   1525c:	mov	x29, sp
   15260:	stp	x19, x20, [sp, #16]
   15264:	mov	x19, x0
   15268:	mov	x0, x1
   1526c:	stp	x21, x22, [sp, #32]
   15270:	ldr	x21, [x19, #40]
   15274:	ldrb	w1, [x21, #16]
   15278:	ldr	s0, [x21, #8]
   1527c:	bl	14968 <hard_locale@@Base+0x290>
   15280:	cbz	x0, 1534c <hash_rehash@@Base+0xf4>
   15284:	ldr	x1, [x19, #16]
   15288:	mov	x20, x0
   1528c:	cmp	x1, x0
   15290:	b.eq	15334 <hash_rehash@@Base+0xdc>  // b.none
   15294:	mov	x1, #0x10                  	// #16
   15298:	bl	a770 <calloc@plt>
   1529c:	str	x0, [sp, #48]
   152a0:	cbz	x0, 1534c <hash_rehash@@Base+0xf4>
   152a4:	ldp	x7, x6, [x19, #48]
   152a8:	add	x3, x0, x20, lsl #4
   152ac:	ldp	x5, x4, [x19, #64]
   152b0:	add	x22, sp, #0x30
   152b4:	mov	x0, x22
   152b8:	mov	x1, x19
   152bc:	mov	w2, #0x0                   	// #0
   152c0:	stp	x3, x20, [sp, #56]
   152c4:	stp	xzr, xzr, [sp, #72]
   152c8:	stp	x21, x7, [sp, #88]
   152cc:	stp	x6, x5, [sp, #104]
   152d0:	str	x4, [sp, #120]
   152d4:	bl	14a28 <hard_locale@@Base+0x350>
   152d8:	ands	w20, w0, #0xff
   152dc:	b.ne	15364 <hash_rehash@@Base+0x10c>  // b.any
   152e0:	ldr	x0, [sp, #120]
   152e4:	str	x0, [x19, #72]
   152e8:	mov	x1, x22
   152ec:	mov	x0, x19
   152f0:	mov	w2, #0x1                   	// #1
   152f4:	bl	14a28 <hard_locale@@Base+0x350>
   152f8:	tst	w0, #0xff
   152fc:	b.eq	153a8 <hash_rehash@@Base+0x150>  // b.none
   15300:	mov	x1, x22
   15304:	mov	x0, x19
   15308:	mov	w2, #0x0                   	// #0
   1530c:	bl	14a28 <hard_locale@@Base+0x350>
   15310:	tst	w0, #0xff
   15314:	b.eq	153a8 <hash_rehash@@Base+0x150>  // b.none
   15318:	ldr	x0, [sp, #48]
   1531c:	bl	aa50 <free@plt>
   15320:	mov	w0, w20
   15324:	ldp	x19, x20, [sp, #16]
   15328:	ldp	x21, x22, [sp, #32]
   1532c:	ldp	x29, x30, [sp], #128
   15330:	ret
   15334:	mov	w20, #0x1                   	// #1
   15338:	mov	w0, w20
   1533c:	ldp	x19, x20, [sp, #16]
   15340:	ldp	x21, x22, [sp, #32]
   15344:	ldp	x29, x30, [sp], #128
   15348:	ret
   1534c:	mov	w20, #0x0                   	// #0
   15350:	mov	w0, w20
   15354:	ldp	x19, x20, [sp, #16]
   15358:	ldp	x21, x22, [sp, #32]
   1535c:	ldp	x29, x30, [sp], #128
   15360:	ret
   15364:	ldr	x0, [x19]
   15368:	bl	aa50 <free@plt>
   1536c:	ldr	x0, [sp, #48]
   15370:	str	x0, [x19]
   15374:	ldr	x0, [sp, #56]
   15378:	str	x0, [x19, #8]
   1537c:	ldr	x0, [sp, #64]
   15380:	str	x0, [x19, #16]
   15384:	ldr	x0, [sp, #72]
   15388:	str	x0, [x19, #24]
   1538c:	ldr	x0, [sp, #120]
   15390:	str	x0, [x19, #72]
   15394:	mov	w0, w20
   15398:	ldp	x19, x20, [sp, #16]
   1539c:	ldp	x21, x22, [sp, #32]
   153a0:	ldp	x29, x30, [sp], #128
   153a4:	ret
   153a8:	bl	a900 <abort@plt>
   153ac:	nop

00000000000153b0 <hash_insert_if_absent@@Base>:
   153b0:	stp	x29, x30, [sp, #-64]!
   153b4:	mov	x29, sp
   153b8:	stp	x19, x20, [sp, #16]
   153bc:	stp	x21, x22, [sp, #32]
   153c0:	cbz	x1, 15540 <hash_insert_if_absent@@Base+0x190>
   153c4:	mov	w3, #0x0                   	// #0
   153c8:	add	x21, sp, #0x38
   153cc:	mov	x20, x2
   153d0:	mov	x19, x0
   153d4:	mov	x22, x1
   153d8:	mov	x2, x21
   153dc:	bl	147a0 <hard_locale@@Base+0xc8>
   153e0:	mov	x3, x0
   153e4:	cbz	x0, 15404 <hash_insert_if_absent@@Base+0x54>
   153e8:	mov	w0, #0x0                   	// #0
   153ec:	cbz	x20, 153f4 <hash_insert_if_absent@@Base+0x44>
   153f0:	str	x3, [x20]
   153f4:	ldp	x19, x20, [sp, #16]
   153f8:	ldp	x21, x22, [sp, #32]
   153fc:	ldp	x29, x30, [sp], #64
   15400:	ret
   15404:	ldr	x0, [x19, #16]
   15408:	ldr	x1, [x19, #40]
   1540c:	ucvtf	s0, x0
   15410:	ldr	x0, [x19, #24]
   15414:	ldr	s2, [x1, #8]
   15418:	ucvtf	s1, x0
   1541c:	fmul	s0, s0, s2
   15420:	fcmpe	s1, s0
   15424:	b.gt	15470 <hash_insert_if_absent@@Base+0xc0>
   15428:	ldr	x20, [sp, #56]
   1542c:	ldr	x0, [x20]
   15430:	cbz	x0, 154d0 <hash_insert_if_absent@@Base+0x120>
   15434:	ldr	x0, [x19, #72]
   15438:	cbz	x0, 154f8 <hash_insert_if_absent@@Base+0x148>
   1543c:	ldr	x1, [x0, #8]
   15440:	str	x1, [x19, #72]
   15444:	ldr	x2, [x20, #8]
   15448:	ldr	x1, [x19, #32]
   1544c:	stp	x22, x2, [x0]
   15450:	str	x0, [x20, #8]
   15454:	add	x1, x1, #0x1
   15458:	str	x1, [x19, #32]
   1545c:	mov	w0, #0x1                   	// #1
   15460:	ldp	x19, x20, [sp, #16]
   15464:	ldp	x21, x22, [sp, #32]
   15468:	ldp	x29, x30, [sp], #64
   1546c:	ret
   15470:	add	x0, x19, #0x28
   15474:	bl	148c0 <hard_locale@@Base+0x1e8>
   15478:	ldr	x0, [x19, #16]
   1547c:	ldr	x1, [x19, #40]
   15480:	ucvtf	s0, x0
   15484:	ldr	x0, [x19, #24]
   15488:	ldr	s2, [x1, #8]
   1548c:	ucvtf	s1, x0
   15490:	fmul	s3, s2, s0
   15494:	fcmpe	s1, s3
   15498:	b.le	15428 <hash_insert_if_absent@@Base+0x78>
   1549c:	ldrb	w0, [x1, #16]
   154a0:	ldr	s1, [x1, #12]
   154a4:	fmul	s0, s0, s1
   154a8:	cbz	w0, 1550c <hash_insert_if_absent@@Base+0x15c>
   154ac:	mov	w0, #0x5f800000            	// #1602224128
   154b0:	fmov	s1, w0
   154b4:	fcmpe	s0, s1
   154b8:	b.lt	15514 <hash_insert_if_absent@@Base+0x164>  // b.tstop
   154bc:	mov	w0, #0xffffffff            	// #-1
   154c0:	ldp	x19, x20, [sp, #16]
   154c4:	ldp	x21, x22, [sp, #32]
   154c8:	ldp	x29, x30, [sp], #64
   154cc:	ret
   154d0:	ldp	x2, x1, [x19, #24]
   154d4:	str	x22, [x20]
   154d8:	mov	w0, #0x1                   	// #1
   154dc:	ldp	x21, x22, [sp, #32]
   154e0:	add	x2, x2, #0x1
   154e4:	add	x1, x1, #0x1
   154e8:	stp	x2, x1, [x19, #24]
   154ec:	ldp	x19, x20, [sp, #16]
   154f0:	ldp	x29, x30, [sp], #64
   154f4:	ret
   154f8:	mov	x0, #0x10                  	// #16
   154fc:	bl	a5f0 <malloc@plt>
   15500:	cbnz	x0, 15444 <hash_insert_if_absent@@Base+0x94>
   15504:	mov	w0, #0xffffffff            	// #-1
   15508:	b	154c0 <hash_insert_if_absent@@Base+0x110>
   1550c:	fmul	s0, s0, s2
   15510:	b	154ac <hash_insert_if_absent@@Base+0xfc>
   15514:	fcvtzu	x1, s0
   15518:	mov	x0, x19
   1551c:	bl	a920 <hash_rehash@plt>
   15520:	tst	w0, #0xff
   15524:	b.eq	154bc <hash_insert_if_absent@@Base+0x10c>  // b.none
   15528:	mov	x2, x21
   1552c:	mov	x1, x22
   15530:	mov	x0, x19
   15534:	mov	w3, #0x0                   	// #0
   15538:	bl	147a0 <hard_locale@@Base+0xc8>
   1553c:	cbz	x0, 15428 <hash_insert_if_absent@@Base+0x78>
   15540:	bl	a900 <abort@plt>
   15544:	nop

0000000000015548 <hash_insert@@Base>:
   15548:	stp	x29, x30, [sp, #-48]!
   1554c:	mov	x29, sp
   15550:	add	x2, sp, #0x28
   15554:	str	x19, [sp, #16]
   15558:	mov	x19, x1
   1555c:	bl	a7a0 <hash_insert_if_absent@plt>
   15560:	cmn	w0, #0x1
   15564:	b.eq	15580 <hash_insert@@Base+0x38>  // b.none
   15568:	ldr	x1, [sp, #40]
   1556c:	cmp	w0, #0x0
   15570:	csel	x0, x1, x19, eq  // eq = none
   15574:	ldr	x19, [sp, #16]
   15578:	ldp	x29, x30, [sp], #48
   1557c:	ret
   15580:	mov	x0, #0x0                   	// #0
   15584:	ldr	x19, [sp, #16]
   15588:	ldp	x29, x30, [sp], #48
   1558c:	ret

0000000000015590 <hash_delete@@Base>:
   15590:	stp	x29, x30, [sp, #-64]!
   15594:	mov	w3, #0x1                   	// #1
   15598:	mov	x29, sp
   1559c:	add	x2, sp, #0x38
   155a0:	stp	x19, x20, [sp, #16]
   155a4:	mov	x19, x0
   155a8:	bl	147a0 <hard_locale@@Base+0xc8>
   155ac:	mov	x20, x0
   155b0:	cbz	x0, 155cc <hash_delete@@Base+0x3c>
   155b4:	ldr	x1, [sp, #56]
   155b8:	ldr	x0, [x19, #32]
   155bc:	ldr	x1, [x1]
   155c0:	sub	x0, x0, #0x1
   155c4:	str	x0, [x19, #32]
   155c8:	cbz	x1, 155dc <hash_delete@@Base+0x4c>
   155cc:	mov	x0, x20
   155d0:	ldp	x19, x20, [sp, #16]
   155d4:	ldp	x29, x30, [sp], #64
   155d8:	ret
   155dc:	ldr	x0, [x19, #16]
   155e0:	ldr	x1, [x19, #40]
   155e4:	ucvtf	s1, x0
   155e8:	ldr	x0, [x19, #24]
   155ec:	ldr	s0, [x1]
   155f0:	sub	x0, x0, #0x1
   155f4:	str	x0, [x19, #24]
   155f8:	fmul	s1, s1, s0
   155fc:	ucvtf	s0, x0
   15600:	fcmpe	s0, s1
   15604:	b.pl	155cc <hash_delete@@Base+0x3c>  // b.nfrst
   15608:	add	x0, x19, #0x28
   1560c:	bl	148c0 <hard_locale@@Base+0x1e8>
   15610:	ldr	x0, [x19, #16]
   15614:	ldr	x1, [x19, #40]
   15618:	ucvtf	s0, x0
   1561c:	ldr	x0, [x19, #24]
   15620:	ldr	s1, [x1]
   15624:	ucvtf	s2, x0
   15628:	fmul	s1, s0, s1
   1562c:	fcmpe	s2, s1
   15630:	b.pl	155cc <hash_delete@@Base+0x3c>  // b.nfrst
   15634:	ldrb	w0, [x1, #16]
   15638:	ldr	s1, [x1, #4]
   1563c:	fmul	s0, s0, s1
   15640:	cbnz	w0, 1564c <hash_delete@@Base+0xbc>
   15644:	ldr	s1, [x1, #8]
   15648:	fmul	s0, s0, s1
   1564c:	fcvtzu	x1, s0
   15650:	mov	x0, x19
   15654:	bl	a920 <hash_rehash@plt>
   15658:	tst	w0, #0xff
   1565c:	b.ne	155cc <hash_delete@@Base+0x3c>  // b.any
   15660:	str	x21, [sp, #32]
   15664:	ldr	x21, [x19, #72]
   15668:	cbz	x21, 15680 <hash_delete@@Base+0xf0>
   1566c:	nop
   15670:	mov	x0, x21
   15674:	ldr	x21, [x21, #8]
   15678:	bl	aa50 <free@plt>
   1567c:	cbnz	x21, 15670 <hash_delete@@Base+0xe0>
   15680:	ldr	x21, [sp, #32]
   15684:	str	xzr, [x19, #72]
   15688:	b	155cc <hash_delete@@Base+0x3c>
   1568c:	nop
   15690:	ldr	x0, [x0, #56]
   15694:	ret
   15698:	stp	x29, x30, [sp, #-64]!
   1569c:	mov	x29, sp
   156a0:	stp	x19, x20, [sp, #16]
   156a4:	mov	x20, x1
   156a8:	mov	x19, x0
   156ac:	stp	x21, x22, [sp, #32]
   156b0:	mov	x21, x1
   156b4:	ldr	x1, [x0, #32]
   156b8:	str	x23, [sp, #48]
   156bc:	mov	x23, x2
   156c0:	cbz	x1, 156d0 <hash_delete@@Base+0x140>
   156c4:	mov	x0, x21
   156c8:	blr	x1
   156cc:	mov	x20, x0
   156d0:	ldp	x2, x1, [x19, #40]
   156d4:	ldr	x22, [x19, #8]
   156d8:	udiv	x0, x20, x1
   156dc:	msub	x0, x0, x1, x20
   156e0:	ldr	x19, [x2, x0, lsl #3]
   156e4:	cbnz	x19, 156f4 <hash_delete@@Base+0x164>
   156e8:	b	15744 <hash_delete@@Base+0x1b4>
   156ec:	ldr	x19, [x19]
   156f0:	cbz	x19, 15744 <hash_delete@@Base+0x1b4>
   156f4:	ldr	x3, [x19, #8]
   156f8:	cmp	x3, x20
   156fc:	b.ne	156ec <hash_delete@@Base+0x15c>  // b.any
   15700:	mov	x0, x21
   15704:	ldr	x1, [x19, #16]
   15708:	cbz	x22, 15734 <hash_delete@@Base+0x1a4>
   1570c:	blr	x22
   15710:	and	w0, w0, #0xff
   15714:	cbz	w0, 156ec <hash_delete@@Base+0x15c>
   15718:	ldr	x1, [x19, #24]
   1571c:	str	x1, [x23]
   15720:	ldp	x19, x20, [sp, #16]
   15724:	ldp	x21, x22, [sp, #32]
   15728:	ldr	x23, [sp, #48]
   1572c:	ldp	x29, x30, [sp], #64
   15730:	ret
   15734:	cmp	x21, x1
   15738:	cset	w0, eq  // eq = none
   1573c:	cbz	w0, 156ec <hash_delete@@Base+0x15c>
   15740:	b	15718 <hash_delete@@Base+0x188>
   15744:	mov	w0, #0x0                   	// #0
   15748:	ldp	x19, x20, [sp, #16]
   1574c:	ldp	x21, x22, [sp, #32]
   15750:	ldr	x23, [sp, #48]
   15754:	ldp	x29, x30, [sp], #64
   15758:	ret
   1575c:	nop
   15760:	ldr	x1, [x0]
   15764:	stp	x1, x0, [x8]
   15768:	ldr	x1, [x0, #48]
   1576c:	str	xzr, [x8, #24]
   15770:	str	xzr, [x8, #40]
   15774:	str	x1, [x8, #48]
   15778:	ret
   1577c:	nop
   15780:	ret
   15784:	nop
   15788:	stp	x29, x30, [sp, #-80]!
   1578c:	mov	x29, sp
   15790:	stp	x23, x24, [sp, #48]
   15794:	mov	x24, x0
   15798:	ldr	x0, [x0, #56]
   1579c:	str	x25, [sp, #64]
   157a0:	ldr	x25, [x24, #40]
   157a4:	cbz	x0, 1580c <hash_delete@@Base+0x27c>
   157a8:	ldr	x23, [x24, #48]
   157ac:	stp	x21, x22, [sp, #32]
   157b0:	ldp	x22, x21, [x24, #16]
   157b4:	cbz	x23, 15828 <hash_delete@@Base+0x298>
   157b8:	stp	x19, x20, [sp, #16]
   157bc:	nop
   157c0:	sub	x23, x23, #0x1
   157c4:	ldr	x19, [x25, x23, lsl #3]
   157c8:	cbz	x19, 157fc <hash_delete@@Base+0x26c>
   157cc:	nop
   157d0:	mov	x20, x19
   157d4:	ldr	x19, [x19]
   157d8:	cbz	x21, 157e4 <hash_delete@@Base+0x254>
   157dc:	ldr	x0, [x20, #24]
   157e0:	blr	x21
   157e4:	cbz	x22, 157f0 <hash_delete@@Base+0x260>
   157e8:	ldr	x0, [x20, #16]
   157ec:	blr	x22
   157f0:	mov	x0, x20
   157f4:	bl	aa50 <free@plt>
   157f8:	cbnz	x19, 157d0 <hash_delete@@Base+0x240>
   157fc:	cbnz	x23, 157c0 <hash_delete@@Base+0x230>
   15800:	ldp	x19, x20, [sp, #16]
   15804:	ldp	x21, x22, [sp, #32]
   15808:	ldr	x25, [x24, #40]
   1580c:	mov	x0, x25
   15810:	bl	aa50 <free@plt>
   15814:	mov	x0, x24
   15818:	ldp	x23, x24, [sp, #48]
   1581c:	ldr	x25, [sp, #64]
   15820:	ldp	x29, x30, [sp], #80
   15824:	b	aa50 <free@plt>
   15828:	ldp	x21, x22, [sp, #32]
   1582c:	b	1580c <hash_delete@@Base+0x27c>
   15830:	stp	x29, x30, [sp, #-80]!
   15834:	mov	x29, sp
   15838:	stp	x21, x22, [sp, #32]
   1583c:	mov	x21, x1
   15840:	stp	x23, x24, [sp, #48]
   15844:	mov	x23, x1
   15848:	mov	x24, x2
   1584c:	ldr	x1, [x0, #32]
   15850:	stp	x19, x20, [sp, #16]
   15854:	stp	x25, x26, [sp, #64]
   15858:	mov	x26, x0
   1585c:	cbz	x1, 1586c <hash_delete@@Base+0x2dc>
   15860:	mov	x0, x23
   15864:	blr	x1
   15868:	mov	x21, x0
   1586c:	ldp	x1, x2, [x26, #40]
   15870:	ldr	x25, [x26, #8]
   15874:	udiv	x0, x21, x2
   15878:	msub	x0, x0, x2, x21
   1587c:	add	x20, x1, x0, lsl #3
   15880:	ldr	x19, [x1, x0, lsl #3]
   15884:	cbnz	x19, 15898 <hash_delete@@Base+0x308>
   15888:	b	1591c <hash_delete@@Base+0x38c>
   1588c:	ldr	x20, [x20]
   15890:	ldr	x19, [x20]
   15894:	cbz	x19, 1591c <hash_delete@@Base+0x38c>
   15898:	ldr	x3, [x19, #8]
   1589c:	cmp	x3, x21
   158a0:	b.ne	1588c <hash_delete@@Base+0x2fc>  // b.any
   158a4:	mov	x0, x23
   158a8:	ldr	x1, [x19, #16]
   158ac:	cbz	x25, 1590c <hash_delete@@Base+0x37c>
   158b0:	blr	x25
   158b4:	and	w22, w0, #0xff
   158b8:	cbz	w22, 1588c <hash_delete@@Base+0x2fc>
   158bc:	ldr	x0, [x19, #24]
   158c0:	str	x0, [x24]
   158c4:	ldr	x0, [x26, #56]
   158c8:	ldr	x1, [x19]
   158cc:	str	x1, [x20]
   158d0:	ldr	x1, [x26, #16]
   158d4:	sub	x0, x0, #0x1
   158d8:	str	x0, [x26, #56]
   158dc:	cbz	x1, 158e8 <hash_delete@@Base+0x358>
   158e0:	ldr	x0, [x19, #16]
   158e4:	blr	x1
   158e8:	mov	x0, x19
   158ec:	bl	aa50 <free@plt>
   158f0:	mov	w0, w22
   158f4:	ldp	x19, x20, [sp, #16]
   158f8:	ldp	x21, x22, [sp, #32]
   158fc:	ldp	x23, x24, [sp, #48]
   15900:	ldp	x25, x26, [sp, #64]
   15904:	ldp	x29, x30, [sp], #80
   15908:	ret
   1590c:	cmp	x23, x1
   15910:	cset	w22, eq  // eq = none
   15914:	cbz	w22, 1588c <hash_delete@@Base+0x2fc>
   15918:	b	158bc <hash_delete@@Base+0x32c>
   1591c:	mov	w22, #0x0                   	// #0
   15920:	mov	w0, w22
   15924:	ldp	x19, x20, [sp, #16]
   15928:	ldp	x21, x22, [sp, #32]
   1592c:	ldp	x23, x24, [sp, #48]
   15930:	ldp	x25, x26, [sp, #64]
   15934:	ldp	x29, x30, [sp], #80
   15938:	ret
   1593c:	nop
   15940:	stp	x29, x30, [sp, #-64]!
   15944:	mov	x29, sp
   15948:	stp	x19, x20, [sp, #16]
   1594c:	mov	x20, x2
   15950:	stp	x21, x22, [sp, #32]
   15954:	mov	x22, x3
   15958:	mov	x21, x4
   1595c:	stp	x23, x24, [sp, #48]
   15960:	mov	x24, x0
   15964:	mov	x23, x1
   15968:	mov	x0, #0x40                  	// #64
   1596c:	bl	a5f0 <malloc@plt>
   15970:	mov	x19, x0
   15974:	cbz	x0, 159a0 <hash_delete@@Base+0x410>
   15978:	mov	x0, #0xb                   	// #11
   1597c:	stp	x24, x23, [x19]
   15980:	mov	x1, #0x8                   	// #8
   15984:	stp	x22, x21, [x19, #16]
   15988:	str	x20, [x19, #32]
   1598c:	str	x0, [x19, #48]
   15990:	bl	a770 <calloc@plt>
   15994:	str	x0, [x19, #40]
   15998:	cbz	x0, 159b8 <hash_delete@@Base+0x428>
   1599c:	str	xzr, [x19, #56]
   159a0:	mov	x0, x19
   159a4:	ldp	x19, x20, [sp, #16]
   159a8:	ldp	x21, x22, [sp, #32]
   159ac:	ldp	x23, x24, [sp, #48]
   159b0:	ldp	x29, x30, [sp], #64
   159b4:	ret
   159b8:	mov	x0, x19
   159bc:	mov	x19, #0x0                   	// #0
   159c0:	bl	aa50 <free@plt>
   159c4:	b	159a0 <hash_delete@@Base+0x410>
   159c8:	ldr	x3, [x0, #24]
   159cc:	mov	x4, x0
   159d0:	cbz	x3, 159f4 <hash_delete@@Base+0x464>
   159d4:	ldr	x0, [x3, #16]
   159d8:	str	x0, [x1]
   159dc:	mov	w0, #0x1                   	// #1
   159e0:	ldr	x1, [x3, #24]
   159e4:	str	x1, [x2]
   159e8:	ldr	x1, [x3]
   159ec:	str	x1, [x4, #24]
   159f0:	ret
   159f4:	ldp	x3, x6, [x0, #40]
   159f8:	cmp	x6, x3
   159fc:	b.ls	15a48 <hash_delete@@Base+0x4b8>  // b.plast
   15a00:	ldr	x0, [x0, #8]
   15a04:	ldr	x0, [x0, #40]
   15a08:	sub	x0, x0, #0x8
   15a0c:	b	15a14 <hash_delete@@Base+0x484>
   15a10:	b.eq	15a48 <hash_delete@@Base+0x4b8>  // b.none
   15a14:	add	x3, x3, #0x1
   15a18:	cmp	x6, x3
   15a1c:	ldr	x5, [x0, x3, lsl #3]
   15a20:	cbz	x5, 15a10 <hash_delete@@Base+0x480>
   15a24:	ldr	x0, [x5, #16]
   15a28:	str	x0, [x1]
   15a2c:	mov	w0, #0x1                   	// #1
   15a30:	ldr	x1, [x5, #24]
   15a34:	str	x1, [x2]
   15a38:	ldr	x1, [x5]
   15a3c:	str	x1, [x4, #24]
   15a40:	str	x3, [x4, #40]
   15a44:	ret
   15a48:	mov	w0, #0x0                   	// #0
   15a4c:	str	x6, [x4, #40]
   15a50:	ret
   15a54:	nop
   15a58:	stp	x29, x30, [sp, #-80]!
   15a5c:	mov	x29, sp
   15a60:	stp	x21, x22, [sp, #32]
   15a64:	mov	x21, x1
   15a68:	mov	x22, x0
   15a6c:	ldr	x1, [x0, #32]
   15a70:	stp	x19, x20, [sp, #16]
   15a74:	mov	x20, x21
   15a78:	stp	x23, x24, [sp, #48]
   15a7c:	mov	x23, x2
   15a80:	mov	x24, x3
   15a84:	stp	x25, x26, [sp, #64]
   15a88:	cbz	x1, 15a98 <hash_delete@@Base+0x508>
   15a8c:	mov	x0, x21
   15a90:	blr	x1
   15a94:	mov	x20, x0
   15a98:	ldp	x1, x0, [x22, #40]
   15a9c:	ldr	x26, [x22, #8]
   15aa0:	udiv	x25, x20, x0
   15aa4:	msub	x25, x25, x0, x20
   15aa8:	ldr	x19, [x1, x25, lsl #3]
   15aac:	cbnz	x19, 15abc <hash_delete@@Base+0x52c>
   15ab0:	b	15b18 <hash_delete@@Base+0x588>
   15ab4:	ldr	x19, [x19]
   15ab8:	cbz	x19, 15b18 <hash_delete@@Base+0x588>
   15abc:	ldr	x4, [x19, #8]
   15ac0:	cmp	x4, x20
   15ac4:	b.ne	15ab4 <hash_delete@@Base+0x524>  // b.any
   15ac8:	mov	x0, x21
   15acc:	ldr	x1, [x19, #16]
   15ad0:	cbz	x26, 15b08 <hash_delete@@Base+0x578>
   15ad4:	blr	x26
   15ad8:	and	w4, w0, #0xff
   15adc:	cbz	w4, 15ab4 <hash_delete@@Base+0x524>
   15ae0:	ldr	x0, [x19, #24]
   15ae4:	str	x0, [x24]
   15ae8:	str	x23, [x19, #24]
   15aec:	mov	w0, #0x0                   	// #0
   15af0:	ldp	x19, x20, [sp, #16]
   15af4:	ldp	x21, x22, [sp, #32]
   15af8:	ldp	x23, x24, [sp, #48]
   15afc:	ldp	x25, x26, [sp, #64]
   15b00:	ldp	x29, x30, [sp], #80
   15b04:	ret
   15b08:	cmp	x21, x1
   15b0c:	cset	w4, eq  // eq = none
   15b10:	cbz	w4, 15ab4 <hash_delete@@Base+0x524>
   15b14:	b	15ae0 <hash_delete@@Base+0x550>
   15b18:	mov	x0, #0x20                  	// #32
   15b1c:	bl	a5f0 <malloc@plt>
   15b20:	cbz	x0, 15c18 <hash_delete@@Base+0x688>
   15b24:	ldr	x24, [x22, #40]
   15b28:	stp	x20, x21, [x0, #8]
   15b2c:	ldr	x2, [x22, #56]
   15b30:	str	x23, [x0, #24]
   15b34:	ldr	x20, [x22, #48]
   15b38:	add	x2, x2, #0x1
   15b3c:	ldr	x1, [x24, x25, lsl #3]
   15b40:	str	x1, [x0]
   15b44:	lsr	x1, x2, #1
   15b48:	str	x0, [x24, x25, lsl #3]
   15b4c:	adds	x0, x2, x1
   15b50:	str	x2, [x22, #56]
   15b54:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   15b58:	cmp	x20, x0
   15b5c:	b.cc	15b7c <hash_delete@@Base+0x5ec>  // b.lo, b.ul, b.last
   15b60:	mov	w0, #0x1                   	// #1
   15b64:	ldp	x19, x20, [sp, #16]
   15b68:	ldp	x21, x22, [sp, #32]
   15b6c:	ldp	x23, x24, [sp, #48]
   15b70:	ldp	x25, x26, [sp, #64]
   15b74:	ldp	x29, x30, [sp], #80
   15b78:	ret
   15b7c:	adrp	x2, 2c000 <vasnprintf@@Base+0x11e0>
   15b80:	mov	x19, #0xb                   	// #11
   15b84:	add	x2, x2, #0xd18
   15b88:	mov	x1, #0x0                   	// #0
   15b8c:	b	15b9c <hash_delete@@Base+0x60c>
   15b90:	cmp	x1, #0xe8
   15b94:	b.eq	15b60 <hash_delete@@Base+0x5d0>  // b.none
   15b98:	ldr	x19, [x2, x1, lsl #3]
   15b9c:	add	x1, x1, #0x1
   15ba0:	cmp	x0, x19
   15ba4:	b.hi	15b90 <hash_delete@@Base+0x600>  // b.pmore
   15ba8:	cmp	x20, x19
   15bac:	b.cs	15b60 <hash_delete@@Base+0x5d0>  // b.hs, b.nlast
   15bb0:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   15bb4:	cmp	x19, x0
   15bb8:	b.hi	15b60 <hash_delete@@Base+0x5d0>  // b.pmore
   15bbc:	mov	x0, x19
   15bc0:	mov	x1, #0x8                   	// #8
   15bc4:	bl	a770 <calloc@plt>
   15bc8:	cbz	x0, 15b60 <hash_delete@@Base+0x5d0>
   15bcc:	nop
   15bd0:	cbz	x20, 15c08 <hash_delete@@Base+0x678>
   15bd4:	sub	x20, x20, #0x1
   15bd8:	ldr	x2, [x24, x20, lsl #3]
   15bdc:	cbz	x2, 15bd0 <hash_delete@@Base+0x640>
   15be0:	mov	x3, x2
   15be4:	ldr	x2, [x2]
   15be8:	ldr	x4, [x3, #8]
   15bec:	udiv	x1, x4, x19
   15bf0:	msub	x1, x1, x19, x4
   15bf4:	ldr	x4, [x0, x1, lsl #3]
   15bf8:	str	x4, [x3]
   15bfc:	str	x3, [x0, x1, lsl #3]
   15c00:	cbnz	x2, 15be0 <hash_delete@@Base+0x650>
   15c04:	b	15bd0 <hash_delete@@Base+0x640>
   15c08:	stp	x0, x19, [x22, #40]
   15c0c:	mov	x0, x24
   15c10:	bl	aa50 <free@plt>
   15c14:	b	15b60 <hash_delete@@Base+0x5d0>
   15c18:	mov	w0, #0xffffffff            	// #-1
   15c1c:	b	15b64 <hash_delete@@Base+0x5d4>

0000000000015c20 <hash_pjw@@Base>:
   15c20:	ldrb	w3, [x0]
   15c24:	cbz	w3, 15c4c <hash_pjw@@Base+0x2c>
   15c28:	mov	x2, #0x0                   	// #0
   15c2c:	nop
   15c30:	ror	x2, x2, #55
   15c34:	add	x2, x2, w3, uxtb
   15c38:	ldrb	w3, [x0, #1]!
   15c3c:	cbnz	w3, 15c30 <hash_pjw@@Base+0x10>
   15c40:	udiv	x0, x2, x1
   15c44:	msub	x0, x0, x1, x2
   15c48:	ret
   15c4c:	mov	x0, #0x0                   	// #0
   15c50:	ret
   15c54:	nop

0000000000015c58 <hash_pjw_bare@@Base>:
   15c58:	mov	x4, x0
   15c5c:	cbz	x1, 15c90 <hash_pjw_bare@@Base+0x38>
   15c60:	mov	w2, #0x0                   	// #0
   15c64:	mov	x0, #0x0                   	// #0
   15c68:	mov	x3, #0x0                   	// #0
   15c6c:	nop
   15c70:	ldrb	w3, [x4, x3]
   15c74:	add	w2, w2, #0x1
   15c78:	ror	x0, x0, #55
   15c7c:	add	x0, x3, x0
   15c80:	cmp	x1, w2, uxtw
   15c84:	mov	w3, w2
   15c88:	b.hi	15c70 <hash_pjw_bare@@Base+0x18>  // b.pmore
   15c8c:	ret
   15c90:	mov	x0, #0x0                   	// #0
   15c94:	ret
   15c98:	ldr	x0, [x0, #48]
   15c9c:	ret
   15ca0:	stp	x29, x30, [sp, #-48]!
   15ca4:	mov	x29, sp
   15ca8:	stp	x19, x20, [sp, #16]
   15cac:	mov	x20, x1
   15cb0:	mov	x19, x0
   15cb4:	stp	x21, x22, [sp, #32]
   15cb8:	mov	x21, x1
   15cbc:	ldr	x1, [x0, #24]
   15cc0:	cbz	x1, 15cd0 <hash_pjw_bare@@Base+0x78>
   15cc4:	mov	x0, x21
   15cc8:	blr	x1
   15ccc:	mov	x20, x0
   15cd0:	ldp	x2, x1, [x19, #32]
   15cd4:	ldr	x22, [x19, #8]
   15cd8:	udiv	x0, x20, x1
   15cdc:	msub	x0, x0, x1, x20
   15ce0:	ldr	x19, [x2, x0, lsl #3]
   15ce4:	cbnz	x19, 15cf4 <hash_pjw_bare@@Base+0x9c>
   15ce8:	b	15d38 <hash_pjw_bare@@Base+0xe0>
   15cec:	ldr	x19, [x19]
   15cf0:	cbz	x19, 15d38 <hash_pjw_bare@@Base+0xe0>
   15cf4:	ldr	x2, [x19, #8]
   15cf8:	cmp	x2, x20
   15cfc:	b.ne	15cec <hash_pjw_bare@@Base+0x94>  // b.any
   15d00:	mov	x0, x21
   15d04:	ldr	x1, [x19, #16]
   15d08:	cbz	x22, 15d28 <hash_pjw_bare@@Base+0xd0>
   15d0c:	blr	x22
   15d10:	and	w0, w0, #0xff
   15d14:	cbz	w0, 15cec <hash_pjw_bare@@Base+0x94>
   15d18:	ldp	x19, x20, [sp, #16]
   15d1c:	ldp	x21, x22, [sp, #32]
   15d20:	ldp	x29, x30, [sp], #48
   15d24:	ret
   15d28:	cmp	x21, x1
   15d2c:	cset	w0, eq  // eq = none
   15d30:	cbz	w0, 15cec <hash_pjw_bare@@Base+0x94>
   15d34:	b	15d18 <hash_pjw_bare@@Base+0xc0>
   15d38:	mov	w0, #0x0                   	// #0
   15d3c:	ldp	x19, x20, [sp, #16]
   15d40:	ldp	x21, x22, [sp, #32]
   15d44:	ldp	x29, x30, [sp], #48
   15d48:	ret
   15d4c:	nop
   15d50:	ldr	x1, [x0]
   15d54:	stp	x1, x0, [x8]
   15d58:	ldr	x1, [x0, #40]
   15d5c:	str	xzr, [x8, #24]
   15d60:	str	xzr, [x8, #40]
   15d64:	str	x1, [x8, #48]
   15d68:	ret
   15d6c:	nop
   15d70:	ret
   15d74:	nop
   15d78:	stp	x29, x30, [sp, #-64]!
   15d7c:	mov	x29, sp
   15d80:	stp	x23, x24, [sp, #48]
   15d84:	mov	x23, x0
   15d88:	ldr	x0, [x0, #48]
   15d8c:	ldr	x24, [x23, #32]
   15d90:	cbz	x0, 15de8 <hash_pjw_bare@@Base+0x190>
   15d94:	stp	x21, x22, [sp, #32]
   15d98:	ldr	x22, [x23, #40]
   15d9c:	ldr	x21, [x23, #16]
   15da0:	cbz	x22, 15e00 <hash_pjw_bare@@Base+0x1a8>
   15da4:	stp	x19, x20, [sp, #16]
   15da8:	sub	x22, x22, #0x1
   15dac:	ldr	x19, [x24, x22, lsl #3]
   15db0:	cbz	x19, 15dd8 <hash_pjw_bare@@Base+0x180>
   15db4:	nop
   15db8:	mov	x20, x19
   15dbc:	ldr	x19, [x19]
   15dc0:	cbz	x21, 15dcc <hash_pjw_bare@@Base+0x174>
   15dc4:	ldr	x0, [x20, #16]
   15dc8:	blr	x21
   15dcc:	mov	x0, x20
   15dd0:	bl	aa50 <free@plt>
   15dd4:	cbnz	x19, 15db8 <hash_pjw_bare@@Base+0x160>
   15dd8:	cbnz	x22, 15da8 <hash_pjw_bare@@Base+0x150>
   15ddc:	ldp	x19, x20, [sp, #16]
   15de0:	ldp	x21, x22, [sp, #32]
   15de4:	ldr	x24, [x23, #32]
   15de8:	mov	x0, x24
   15dec:	bl	aa50 <free@plt>
   15df0:	mov	x0, x23
   15df4:	ldp	x23, x24, [sp, #48]
   15df8:	ldp	x29, x30, [sp], #64
   15dfc:	b	aa50 <free@plt>
   15e00:	ldp	x21, x22, [sp, #32]
   15e04:	b	15de8 <hash_pjw_bare@@Base+0x190>
   15e08:	stp	x29, x30, [sp, #-80]!
   15e0c:	mov	x29, sp
   15e10:	stp	x21, x22, [sp, #32]
   15e14:	mov	x21, x1
   15e18:	stp	x23, x24, [sp, #48]
   15e1c:	mov	x23, x1
   15e20:	ldr	x1, [x0, #24]
   15e24:	stp	x19, x20, [sp, #16]
   15e28:	str	x25, [sp, #64]
   15e2c:	mov	x25, x0
   15e30:	cbz	x1, 15e40 <hash_pjw_bare@@Base+0x1e8>
   15e34:	mov	x0, x23
   15e38:	blr	x1
   15e3c:	mov	x21, x0
   15e40:	ldp	x1, x2, [x25, #32]
   15e44:	ldr	x24, [x25, #8]
   15e48:	udiv	x0, x21, x2
   15e4c:	msub	x0, x0, x2, x21
   15e50:	add	x20, x1, x0, lsl #3
   15e54:	ldr	x19, [x1, x0, lsl #3]
   15e58:	cbnz	x19, 15e6c <hash_pjw_bare@@Base+0x214>
   15e5c:	b	15ee8 <hash_pjw_bare@@Base+0x290>
   15e60:	ldr	x20, [x20]
   15e64:	ldr	x19, [x20]
   15e68:	cbz	x19, 15ee8 <hash_pjw_bare@@Base+0x290>
   15e6c:	ldr	x2, [x19, #8]
   15e70:	cmp	x2, x21
   15e74:	b.ne	15e60 <hash_pjw_bare@@Base+0x208>  // b.any
   15e78:	mov	x0, x23
   15e7c:	ldr	x1, [x19, #16]
   15e80:	cbz	x24, 15ed8 <hash_pjw_bare@@Base+0x280>
   15e84:	blr	x24
   15e88:	and	w22, w0, #0xff
   15e8c:	cbz	w22, 15e60 <hash_pjw_bare@@Base+0x208>
   15e90:	ldr	x1, [x19]
   15e94:	ldr	x0, [x25, #48]
   15e98:	str	x1, [x20]
   15e9c:	ldr	x1, [x25, #16]
   15ea0:	sub	x0, x0, #0x1
   15ea4:	str	x0, [x25, #48]
   15ea8:	cbz	x1, 15eb4 <hash_pjw_bare@@Base+0x25c>
   15eac:	ldr	x0, [x19, #16]
   15eb0:	blr	x1
   15eb4:	mov	x0, x19
   15eb8:	bl	aa50 <free@plt>
   15ebc:	mov	w0, w22
   15ec0:	ldp	x19, x20, [sp, #16]
   15ec4:	ldp	x21, x22, [sp, #32]
   15ec8:	ldp	x23, x24, [sp, #48]
   15ecc:	ldr	x25, [sp, #64]
   15ed0:	ldp	x29, x30, [sp], #80
   15ed4:	ret
   15ed8:	cmp	x23, x1
   15edc:	cset	w22, eq  // eq = none
   15ee0:	cbz	w22, 15e60 <hash_pjw_bare@@Base+0x208>
   15ee4:	b	15e90 <hash_pjw_bare@@Base+0x238>
   15ee8:	mov	w22, #0x0                   	// #0
   15eec:	mov	w0, w22
   15ef0:	ldp	x19, x20, [sp, #16]
   15ef4:	ldp	x21, x22, [sp, #32]
   15ef8:	ldp	x23, x24, [sp, #48]
   15efc:	ldr	x25, [sp, #64]
   15f00:	ldp	x29, x30, [sp], #80
   15f04:	ret
   15f08:	stp	x29, x30, [sp, #-64]!
   15f0c:	mov	x29, sp
   15f10:	stp	x19, x20, [sp, #16]
   15f14:	mov	x20, x2
   15f18:	stp	x21, x22, [sp, #32]
   15f1c:	mov	x22, x1
   15f20:	mov	x21, x3
   15f24:	str	x23, [sp, #48]
   15f28:	mov	x23, x0
   15f2c:	mov	x0, #0x38                  	// #56
   15f30:	bl	a5f0 <malloc@plt>
   15f34:	mov	x19, x0
   15f38:	cbz	x0, 15f60 <hash_pjw_bare@@Base+0x308>
   15f3c:	mov	x0, #0xb                   	// #11
   15f40:	stp	x23, x22, [x19]
   15f44:	mov	x1, #0x8                   	// #8
   15f48:	stp	x21, x20, [x19, #16]
   15f4c:	str	x0, [x19, #40]
   15f50:	bl	a770 <calloc@plt>
   15f54:	str	x0, [x19, #32]
   15f58:	cbz	x0, 15f78 <hash_pjw_bare@@Base+0x320>
   15f5c:	str	xzr, [x19, #48]
   15f60:	mov	x0, x19
   15f64:	ldp	x19, x20, [sp, #16]
   15f68:	ldp	x21, x22, [sp, #32]
   15f6c:	ldr	x23, [sp, #48]
   15f70:	ldp	x29, x30, [sp], #64
   15f74:	ret
   15f78:	mov	x0, x19
   15f7c:	mov	x19, #0x0                   	// #0
   15f80:	bl	aa50 <free@plt>
   15f84:	b	15f60 <hash_pjw_bare@@Base+0x308>
   15f88:	ldr	x2, [x0, #24]
   15f8c:	mov	x3, x0
   15f90:	cbz	x2, 15fac <hash_pjw_bare@@Base+0x354>
   15f94:	ldr	x0, [x2, #16]
   15f98:	str	x0, [x1]
   15f9c:	mov	w0, #0x1                   	// #1
   15fa0:	ldr	x1, [x2]
   15fa4:	str	x1, [x3, #24]
   15fa8:	ret
   15fac:	ldp	x2, x5, [x0, #40]
   15fb0:	cmp	x5, x2
   15fb4:	b.ls	15ff8 <hash_pjw_bare@@Base+0x3a0>  // b.plast
   15fb8:	ldr	x0, [x0, #8]
   15fbc:	ldr	x0, [x0, #32]
   15fc0:	sub	x0, x0, #0x8
   15fc4:	b	15fcc <hash_pjw_bare@@Base+0x374>
   15fc8:	b.eq	15ff8 <hash_pjw_bare@@Base+0x3a0>  // b.none
   15fcc:	add	x2, x2, #0x1
   15fd0:	cmp	x5, x2
   15fd4:	ldr	x4, [x0, x2, lsl #3]
   15fd8:	cbz	x4, 15fc8 <hash_pjw_bare@@Base+0x370>
   15fdc:	ldr	x0, [x4, #16]
   15fe0:	str	x0, [x1]
   15fe4:	mov	w0, #0x1                   	// #1
   15fe8:	ldr	x1, [x4]
   15fec:	str	x1, [x3, #24]
   15ff0:	str	x2, [x3, #40]
   15ff4:	ret
   15ff8:	mov	w0, #0x0                   	// #0
   15ffc:	str	x5, [x3, #40]
   16000:	ret
   16004:	nop
   16008:	stp	x29, x30, [sp, #-64]!
   1600c:	mov	x29, sp
   16010:	stp	x19, x20, [sp, #16]
   16014:	mov	x20, x1
   16018:	stp	x21, x22, [sp, #32]
   1601c:	mov	x21, x1
   16020:	mov	x22, x0
   16024:	ldr	x1, [x0, #24]
   16028:	stp	x23, x24, [sp, #48]
   1602c:	cbz	x1, 1603c <hash_pjw_bare@@Base+0x3e4>
   16030:	mov	x0, x21
   16034:	blr	x1
   16038:	mov	x20, x0
   1603c:	ldp	x1, x0, [x22, #32]
   16040:	ldr	x24, [x22, #8]
   16044:	udiv	x23, x20, x0
   16048:	msub	x23, x23, x0, x20
   1604c:	ldr	x19, [x1, x23, lsl #3]
   16050:	cbnz	x19, 16060 <hash_pjw_bare@@Base+0x408>
   16054:	b	160ac <hash_pjw_bare@@Base+0x454>
   16058:	ldr	x19, [x19]
   1605c:	cbz	x19, 160ac <hash_pjw_bare@@Base+0x454>
   16060:	ldr	x2, [x19, #8]
   16064:	cmp	x2, x20
   16068:	b.ne	16058 <hash_pjw_bare@@Base+0x400>  // b.any
   1606c:	mov	x0, x21
   16070:	ldr	x1, [x19, #16]
   16074:	cbz	x24, 1609c <hash_pjw_bare@@Base+0x444>
   16078:	blr	x24
   1607c:	and	w2, w0, #0xff
   16080:	cbz	w2, 16058 <hash_pjw_bare@@Base+0x400>
   16084:	mov	w0, #0x0                   	// #0
   16088:	ldp	x19, x20, [sp, #16]
   1608c:	ldp	x21, x22, [sp, #32]
   16090:	ldp	x23, x24, [sp, #48]
   16094:	ldp	x29, x30, [sp], #64
   16098:	ret
   1609c:	cmp	x21, x1
   160a0:	cset	w2, eq  // eq = none
   160a4:	cbz	w2, 16058 <hash_pjw_bare@@Base+0x400>
   160a8:	b	16084 <hash_pjw_bare@@Base+0x42c>
   160ac:	mov	x0, #0x18                  	// #24
   160b0:	bl	a5f0 <malloc@plt>
   160b4:	cbz	x0, 161a0 <hash_pjw_bare@@Base+0x548>
   160b8:	ldr	x24, [x22, #32]
   160bc:	stp	x20, x21, [x0, #8]
   160c0:	ldr	x2, [x22, #48]
   160c4:	ldr	x1, [x24, x23, lsl #3]
   160c8:	add	x2, x2, #0x1
   160cc:	str	x1, [x0]
   160d0:	lsr	x1, x2, #1
   160d4:	ldr	x20, [x22, #40]
   160d8:	str	x0, [x24, x23, lsl #3]
   160dc:	adds	x0, x2, x1
   160e0:	str	x2, [x22, #48]
   160e4:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   160e8:	cmp	x20, x0
   160ec:	b.cc	16108 <hash_pjw_bare@@Base+0x4b0>  // b.lo, b.ul, b.last
   160f0:	mov	w0, #0x1                   	// #1
   160f4:	ldp	x19, x20, [sp, #16]
   160f8:	ldp	x21, x22, [sp, #32]
   160fc:	ldp	x23, x24, [sp, #48]
   16100:	ldp	x29, x30, [sp], #64
   16104:	ret
   16108:	adrp	x2, 2d000 <vasnprintf@@Base+0x21e0>
   1610c:	mov	x19, #0xb                   	// #11
   16110:	add	x2, x2, #0x458
   16114:	mov	x1, #0x0                   	// #0
   16118:	b	16128 <hash_pjw_bare@@Base+0x4d0>
   1611c:	cmp	x1, #0xe8
   16120:	b.eq	160f0 <hash_pjw_bare@@Base+0x498>  // b.none
   16124:	ldr	x19, [x2, x1, lsl #3]
   16128:	add	x1, x1, #0x1
   1612c:	cmp	x0, x19
   16130:	b.hi	1611c <hash_pjw_bare@@Base+0x4c4>  // b.pmore
   16134:	cmp	x20, x19
   16138:	b.cs	160f0 <hash_pjw_bare@@Base+0x498>  // b.hs, b.nlast
   1613c:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   16140:	cmp	x19, x0
   16144:	b.hi	160f0 <hash_pjw_bare@@Base+0x498>  // b.pmore
   16148:	mov	x0, x19
   1614c:	mov	x1, #0x8                   	// #8
   16150:	bl	a770 <calloc@plt>
   16154:	cbz	x0, 160f0 <hash_pjw_bare@@Base+0x498>
   16158:	cbz	x20, 16190 <hash_pjw_bare@@Base+0x538>
   1615c:	sub	x20, x20, #0x1
   16160:	ldr	x2, [x24, x20, lsl #3]
   16164:	cbz	x2, 16158 <hash_pjw_bare@@Base+0x500>
   16168:	mov	x3, x2
   1616c:	ldr	x2, [x2]
   16170:	ldr	x4, [x3, #8]
   16174:	udiv	x1, x4, x19
   16178:	msub	x1, x1, x19, x4
   1617c:	ldr	x4, [x0, x1, lsl #3]
   16180:	str	x4, [x3]
   16184:	str	x3, [x0, x1, lsl #3]
   16188:	cbnz	x2, 16168 <hash_pjw_bare@@Base+0x510>
   1618c:	b	16158 <hash_pjw_bare@@Base+0x500>
   16190:	stp	x0, x19, [x22, #32]
   16194:	mov	x0, x24
   16198:	bl	aa50 <free@plt>
   1619c:	b	160f0 <hash_pjw_bare@@Base+0x498>
   161a0:	mov	w0, #0xffffffff            	// #-1
   161a4:	b	160f4 <hash_pjw_bare@@Base+0x49c>

00000000000161a8 <triple_hash@@Base>:
   161a8:	stp	x29, x30, [sp, #-32]!
   161ac:	mov	x29, sp
   161b0:	stp	x19, x20, [sp, #16]
   161b4:	mov	x20, x0
   161b8:	mov	x19, x1
   161bc:	ldr	x0, [x0]
   161c0:	bl	ac50 <hash_pjw@plt>
   161c4:	ldr	x1, [x20, #8]
   161c8:	eor	x0, x0, x1
   161cc:	udiv	x1, x0, x19
   161d0:	msub	x0, x1, x19, x0
   161d4:	ldp	x19, x20, [sp, #16]
   161d8:	ldp	x29, x30, [sp], #32
   161dc:	ret

00000000000161e0 <triple_hash_no_name@@Base>:
   161e0:	ldr	x0, [x0, #8]
   161e4:	udiv	x2, x0, x1
   161e8:	msub	x0, x2, x1, x0
   161ec:	ret

00000000000161f0 <triple_compare@@Base>:
   161f0:	mov	x2, x0
   161f4:	ldr	x0, [x1, #8]
   161f8:	ldr	x3, [x2, #8]
   161fc:	cmp	x3, x0
   16200:	b.eq	1620c <triple_compare@@Base+0x1c>  // b.none
   16204:	mov	w0, #0x0                   	// #0
   16208:	ret
   1620c:	ldr	x3, [x1, #16]
   16210:	mov	w0, #0x0                   	// #0
   16214:	ldr	x4, [x2, #16]
   16218:	cmp	x4, x3
   1621c:	b.ne	16208 <triple_compare@@Base+0x18>  // b.any
   16220:	ldr	x1, [x1]
   16224:	ldr	x0, [x2]
   16228:	b	a750 <same_name@plt>
   1622c:	nop

0000000000016230 <triple_compare_ino_str@@Base>:
   16230:	mov	x2, x0
   16234:	ldr	x3, [x0, #8]
   16238:	ldr	x0, [x1, #8]
   1623c:	cmp	x3, x0
   16240:	b.eq	1624c <triple_compare_ino_str@@Base+0x1c>  // b.none
   16244:	mov	w0, #0x0                   	// #0
   16248:	ret
   1624c:	ldr	x3, [x1, #16]
   16250:	mov	w0, #0x0                   	// #0
   16254:	ldr	x4, [x2, #16]
   16258:	cmp	x4, x3
   1625c:	b.eq	16264 <triple_compare_ino_str@@Base+0x34>  // b.none
   16260:	ret
   16264:	stp	x29, x30, [sp, #-16]!
   16268:	mov	x29, sp
   1626c:	ldr	x1, [x1]
   16270:	ldr	x0, [x2]
   16274:	bl	a9b0 <strcmp@plt>
   16278:	cmp	w0, #0x0
   1627c:	cset	w0, eq  // eq = none
   16280:	ldp	x29, x30, [sp], #16
   16284:	ret

0000000000016288 <triple_free@@Base>:
   16288:	stp	x29, x30, [sp, #-32]!
   1628c:	mov	x29, sp
   16290:	str	x19, [sp, #16]
   16294:	mov	x19, x0
   16298:	ldr	x0, [x0]
   1629c:	bl	aa50 <free@plt>
   162a0:	mov	x0, x19
   162a4:	ldr	x19, [sp, #16]
   162a8:	ldp	x29, x30, [sp], #32
   162ac:	b	aa50 <free@plt>

00000000000162b0 <idpriv_drop@@Base>:
   162b0:	stp	x29, x30, [sp, #-64]!
   162b4:	mov	x29, sp
   162b8:	stp	x19, x20, [sp, #16]
   162bc:	bl	a4a0 <getuid@plt>
   162c0:	mov	w19, w0
   162c4:	bl	aa90 <getgid@plt>
   162c8:	mov	w20, w0
   162cc:	mov	w2, w0
   162d0:	mov	w1, w0
   162d4:	bl	aec0 <setresgid@plt>
   162d8:	tbnz	w0, #31, 16370 <idpriv_drop@@Base+0xc0>
   162dc:	mov	w2, w19
   162e0:	mov	w1, w19
   162e4:	mov	w0, w19
   162e8:	bl	ad10 <setresuid@plt>
   162ec:	tbnz	w0, #31, 16370 <idpriv_drop@@Base+0xc0>
   162f0:	add	x2, sp, #0x30
   162f4:	add	x1, sp, #0x2c
   162f8:	add	x0, sp, #0x28
   162fc:	bl	a420 <getresuid@plt>
   16300:	tbnz	w0, #31, 16378 <idpriv_drop@@Base+0xc8>
   16304:	ldr	w0, [sp, #40]
   16308:	cmp	w19, w0
   1630c:	b.ne	16378 <idpriv_drop@@Base+0xc8>  // b.any
   16310:	ldr	w0, [sp, #44]
   16314:	cmp	w19, w0
   16318:	b.ne	16378 <idpriv_drop@@Base+0xc8>  // b.any
   1631c:	ldr	w0, [sp, #48]
   16320:	cmp	w19, w0
   16324:	b.ne	16378 <idpriv_drop@@Base+0xc8>  // b.any
   16328:	add	x2, sp, #0x3c
   1632c:	add	x1, sp, #0x38
   16330:	add	x0, sp, #0x34
   16334:	bl	acc0 <getresgid@plt>
   16338:	tbnz	w0, #31, 16378 <idpriv_drop@@Base+0xc8>
   1633c:	ldr	w0, [sp, #52]
   16340:	cmp	w20, w0
   16344:	b.ne	16378 <idpriv_drop@@Base+0xc8>  // b.any
   16348:	ldr	w0, [sp, #56]
   1634c:	cmp	w20, w0
   16350:	b.ne	16378 <idpriv_drop@@Base+0xc8>  // b.any
   16354:	ldr	w0, [sp, #60]
   16358:	cmp	w20, w0
   1635c:	b.ne	16378 <idpriv_drop@@Base+0xc8>  // b.any
   16360:	mov	w0, #0x0                   	// #0
   16364:	ldp	x19, x20, [sp, #16]
   16368:	ldp	x29, x30, [sp], #64
   1636c:	ret
   16370:	mov	w0, #0xffffffff            	// #-1
   16374:	b	16364 <idpriv_drop@@Base+0xb4>
   16378:	bl	a900 <abort@plt>
   1637c:	nop

0000000000016380 <idpriv_temp_drop@@Base>:
   16380:	stp	x29, x30, [sp, #-96]!
   16384:	mov	x29, sp
   16388:	stp	x19, x20, [sp, #16]
   1638c:	adrp	x20, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   16390:	stp	x21, x22, [sp, #32]
   16394:	str	x23, [sp, #48]
   16398:	bl	a4a0 <getuid@plt>
   1639c:	mov	w23, w0
   163a0:	bl	aa90 <getgid@plt>
   163a4:	ldr	w1, [x20, #508]
   163a8:	mov	w21, w0
   163ac:	cmn	w1, #0x1
   163b0:	b.eq	16478 <idpriv_temp_drop@@Base+0xf8>  // b.none
   163b4:	add	x22, x20, #0x1fc
   163b8:	ldr	w19, [x22, #4]
   163bc:	cmn	w19, #0x1
   163c0:	b.eq	16490 <idpriv_temp_drop@@Base+0x110>  // b.none
   163c4:	mov	w2, w19
   163c8:	mov	w1, w21
   163cc:	mov	w0, #0xffffffff            	// #-1
   163d0:	bl	aec0 <setresgid@plt>
   163d4:	tbnz	w0, #31, 164a0 <idpriv_temp_drop@@Base+0x120>
   163d8:	ldr	w20, [x20, #508]
   163dc:	mov	w1, w23
   163e0:	mov	w0, #0xffffffff            	// #-1
   163e4:	mov	w2, w20
   163e8:	bl	ad10 <setresuid@plt>
   163ec:	tbnz	w0, #31, 164a0 <idpriv_temp_drop@@Base+0x120>
   163f0:	add	x2, sp, #0x50
   163f4:	add	x1, sp, #0x4c
   163f8:	add	x0, sp, #0x48
   163fc:	bl	a420 <getresuid@plt>
   16400:	tbnz	w0, #31, 164a8 <idpriv_temp_drop@@Base+0x128>
   16404:	ldr	w0, [sp, #72]
   16408:	cmp	w23, w0
   1640c:	b.ne	164a8 <idpriv_temp_drop@@Base+0x128>  // b.any
   16410:	ldr	w0, [sp, #76]
   16414:	cmp	w23, w0
   16418:	b.ne	164a8 <idpriv_temp_drop@@Base+0x128>  // b.any
   1641c:	ldr	w0, [sp, #80]
   16420:	cmp	w20, w0
   16424:	b.ne	164a8 <idpriv_temp_drop@@Base+0x128>  // b.any
   16428:	add	x2, sp, #0x5c
   1642c:	add	x1, sp, #0x58
   16430:	add	x0, sp, #0x54
   16434:	bl	acc0 <getresgid@plt>
   16438:	tbnz	w0, #31, 164a8 <idpriv_temp_drop@@Base+0x128>
   1643c:	ldr	w0, [sp, #84]
   16440:	cmp	w21, w0
   16444:	b.ne	164a8 <idpriv_temp_drop@@Base+0x128>  // b.any
   16448:	ldr	w0, [sp, #88]
   1644c:	cmp	w21, w0
   16450:	b.ne	164a8 <idpriv_temp_drop@@Base+0x128>  // b.any
   16454:	ldr	w0, [sp, #92]
   16458:	cmp	w0, w19
   1645c:	b.ne	164a8 <idpriv_temp_drop@@Base+0x128>  // b.any
   16460:	mov	w0, #0x0                   	// #0
   16464:	ldp	x19, x20, [sp, #16]
   16468:	ldp	x21, x22, [sp, #32]
   1646c:	ldr	x23, [sp, #48]
   16470:	ldp	x29, x30, [sp], #96
   16474:	ret
   16478:	add	x22, x20, #0x1fc
   1647c:	bl	a3f0 <geteuid@plt>
   16480:	str	w0, [x20, #508]
   16484:	ldr	w19, [x22, #4]
   16488:	cmn	w19, #0x1
   1648c:	b.ne	163c4 <idpriv_temp_drop@@Base+0x44>  // b.any
   16490:	bl	a3b0 <getegid@plt>
   16494:	mov	w19, w0
   16498:	str	w0, [x22, #4]
   1649c:	b	163c4 <idpriv_temp_drop@@Base+0x44>
   164a0:	mov	w0, #0xffffffff            	// #-1
   164a4:	b	16464 <idpriv_temp_drop@@Base+0xe4>
   164a8:	bl	a900 <abort@plt>
   164ac:	nop

00000000000164b0 <idpriv_temp_restore@@Base>:
   164b0:	stp	x29, x30, [sp, #-80]!
   164b4:	mov	x29, sp
   164b8:	stp	x19, x20, [sp, #16]
   164bc:	stp	x21, x22, [sp, #32]
   164c0:	bl	a4a0 <getuid@plt>
   164c4:	mov	w22, w0
   164c8:	bl	aa90 <getgid@plt>
   164cc:	adrp	x1, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   164d0:	ldr	w19, [x1, #508]
   164d4:	cmn	w19, #0x1
   164d8:	b.eq	165a4 <idpriv_temp_restore@@Base+0xf4>  // b.none
   164dc:	add	x2, x1, #0x1fc
   164e0:	ldr	w20, [x2, #4]
   164e4:	cmn	w20, #0x1
   164e8:	b.eq	165a4 <idpriv_temp_restore@@Base+0xf4>  // b.none
   164ec:	mov	w21, w0
   164f0:	mov	w2, #0xffffffff            	// #-1
   164f4:	mov	w1, w19
   164f8:	mov	w0, w2
   164fc:	bl	ad10 <setresuid@plt>
   16500:	tbnz	w0, #31, 1659c <idpriv_temp_restore@@Base+0xec>
   16504:	mov	w2, #0xffffffff            	// #-1
   16508:	mov	w1, w20
   1650c:	mov	w0, w2
   16510:	bl	aec0 <setresgid@plt>
   16514:	tbnz	w0, #31, 1659c <idpriv_temp_restore@@Base+0xec>
   16518:	add	x2, sp, #0x40
   1651c:	add	x1, sp, #0x3c
   16520:	add	x0, sp, #0x38
   16524:	bl	a420 <getresuid@plt>
   16528:	tbnz	w0, #31, 165a4 <idpriv_temp_restore@@Base+0xf4>
   1652c:	ldr	w0, [sp, #56]
   16530:	cmp	w22, w0
   16534:	b.ne	165a4 <idpriv_temp_restore@@Base+0xf4>  // b.any
   16538:	ldr	w0, [sp, #60]
   1653c:	cmp	w19, w0
   16540:	b.ne	165a4 <idpriv_temp_restore@@Base+0xf4>  // b.any
   16544:	ldr	w0, [sp, #64]
   16548:	cmp	w19, w0
   1654c:	b.ne	165a4 <idpriv_temp_restore@@Base+0xf4>  // b.any
   16550:	add	x2, sp, #0x4c
   16554:	add	x1, sp, #0x48
   16558:	add	x0, sp, #0x44
   1655c:	bl	acc0 <getresgid@plt>
   16560:	tbnz	w0, #31, 165a4 <idpriv_temp_restore@@Base+0xf4>
   16564:	ldr	w0, [sp, #68]
   16568:	cmp	w21, w0
   1656c:	b.ne	165a4 <idpriv_temp_restore@@Base+0xf4>  // b.any
   16570:	ldr	w0, [sp, #72]
   16574:	cmp	w20, w0
   16578:	b.ne	165a4 <idpriv_temp_restore@@Base+0xf4>  // b.any
   1657c:	ldr	w0, [sp, #76]
   16580:	cmp	w20, w0
   16584:	b.ne	165a4 <idpriv_temp_restore@@Base+0xf4>  // b.any
   16588:	mov	w0, #0x0                   	// #0
   1658c:	ldp	x19, x20, [sp, #16]
   16590:	ldp	x21, x22, [sp, #32]
   16594:	ldp	x29, x30, [sp], #80
   16598:	ret
   1659c:	mov	w0, #0xffffffff            	// #-1
   165a0:	b	1658c <idpriv_temp_restore@@Base+0xdc>
   165a4:	bl	a900 <abort@plt>
   165a8:	ldr	x0, [x0, #96]
   165ac:	ret
   165b0:	ldr	x0, [x1, #32]
   165b4:	ret
   165b8:	add	x2, x0, #0x38
   165bc:	ldr	x0, [x1, #16]
   165c0:	cmp	x0, x2
   165c4:	csel	x0, x0, xzr, ne  // ne = any
   165c8:	ret
   165cc:	nop
   165d0:	add	x2, x0, #0x38
   165d4:	ldr	x0, [x1, #24]
   165d8:	cmp	x0, x2
   165dc:	csel	x0, x0, xzr, ne  // ne = any
   165e0:	ret
   165e4:	nop
   165e8:	ldr	x2, [x0]
   165ec:	stp	x2, x0, [x8]
   165f0:	add	x1, x0, #0x38
   165f4:	ldr	x2, [x0, #72]
   165f8:	str	x2, [x8, #24]
   165fc:	str	x1, [x8, #32]
   16600:	ret
   16604:	nop
   16608:	mov	x3, x0
   1660c:	ldp	x0, x4, [x0, #24]
   16610:	cmp	x0, x4
   16614:	b.eq	16638 <idpriv_temp_restore@@Base+0x188>  // b.none
   16618:	ldr	x4, [x0, #32]
   1661c:	str	x4, [x1]
   16620:	cbz	x2, 16628 <idpriv_temp_restore@@Base+0x178>
   16624:	str	x0, [x2]
   16628:	ldr	x1, [x0, #16]
   1662c:	mov	w0, #0x1                   	// #1
   16630:	str	x1, [x3, #24]
   16634:	ret
   16638:	mov	w0, #0x0                   	// #0
   1663c:	ret
   16640:	ret
   16644:	nop
   16648:	stp	x29, x30, [sp, #-48]!
   1664c:	mov	x29, sp
   16650:	stp	x19, x20, [sp, #16]
   16654:	ldr	x19, [x0, #72]
   16658:	stp	x21, x22, [sp, #32]
   1665c:	add	x22, x0, #0x38
   16660:	cmp	x19, x22
   16664:	b.eq	16698 <idpriv_temp_restore@@Base+0x1e8>  // b.none
   16668:	mov	x21, x1
   1666c:	mov	x20, x2
   16670:	b	16684 <idpriv_temp_restore@@Base+0x1d4>
   16674:	b.eq	1669c <idpriv_temp_restore@@Base+0x1ec>  // b.none
   16678:	ldr	x19, [x19, #16]
   1667c:	cmp	x19, x22
   16680:	b.eq	16698 <idpriv_temp_restore@@Base+0x1e8>  // b.none
   16684:	ldr	x0, [x19, #32]
   16688:	mov	x1, x20
   1668c:	blr	x21
   16690:	cmp	w0, #0x0
   16694:	b.le	16674 <idpriv_temp_restore@@Base+0x1c4>
   16698:	mov	x19, #0x0                   	// #0
   1669c:	mov	x0, x19
   166a0:	ldp	x19, x20, [sp, #16]
   166a4:	ldp	x21, x22, [sp, #32]
   166a8:	ldp	x29, x30, [sp], #48
   166ac:	ret
   166b0:	stp	x29, x30, [sp, #-64]!
   166b4:	mov	x29, sp
   166b8:	stp	x19, x20, [sp, #16]
   166bc:	ldr	x19, [x0, #72]
   166c0:	str	x23, [sp, #48]
   166c4:	add	x23, x0, #0x38
   166c8:	cmp	x19, x23
   166cc:	b.eq	16710 <idpriv_temp_restore@@Base+0x260>  // b.none
   166d0:	mov	x20, #0x0                   	// #0
   166d4:	stp	x21, x22, [sp, #32]
   166d8:	mov	x21, x1
   166dc:	mov	x22, x2
   166e0:	b	166f8 <idpriv_temp_restore@@Base+0x248>
   166e4:	b.eq	16728 <idpriv_temp_restore@@Base+0x278>  // b.none
   166e8:	ldr	x19, [x19, #16]
   166ec:	add	x20, x20, #0x1
   166f0:	cmp	x19, x23
   166f4:	b.eq	1670c <idpriv_temp_restore@@Base+0x25c>  // b.none
   166f8:	ldr	x0, [x19, #32]
   166fc:	mov	x1, x22
   16700:	blr	x21
   16704:	cmp	w0, #0x0
   16708:	b.le	166e4 <idpriv_temp_restore@@Base+0x234>
   1670c:	ldp	x21, x22, [sp, #32]
   16710:	mov	x20, #0xffffffffffffffff    	// #-1
   16714:	mov	x0, x20
   16718:	ldp	x19, x20, [sp, #16]
   1671c:	ldr	x23, [sp, #48]
   16720:	ldp	x29, x30, [sp], #64
   16724:	ret
   16728:	mov	x0, x20
   1672c:	ldp	x19, x20, [sp, #16]
   16730:	ldp	x21, x22, [sp, #32]
   16734:	ldr	x23, [sp, #48]
   16738:	ldp	x29, x30, [sp], #64
   1673c:	ret
   16740:	stp	x29, x30, [sp, #-64]!
   16744:	cmp	x2, x3
   16748:	mov	x29, sp
   1674c:	ldr	x5, [x0, #96]
   16750:	stp	x19, x20, [sp, #16]
   16754:	ccmp	x5, x3, #0x0, ls  // ls = plast
   16758:	b.cc	16820 <idpriv_temp_restore@@Base+0x370>  // b.lo, b.ul, b.last
   1675c:	mov	x20, x2
   16760:	subs	x3, x3, x2
   16764:	b.eq	167d4 <idpriv_temp_restore@@Base+0x324>  // b.none
   16768:	stp	x21, x22, [sp, #32]
   1676c:	mov	x22, x1
   16770:	sub	x1, x5, #0x1
   16774:	str	x23, [sp, #48]
   16778:	mov	x23, x4
   1677c:	cmp	x2, x1, lsr #1
   16780:	b.hi	167e4 <idpriv_temp_restore@@Base+0x334>  // b.pmore
   16784:	ldr	x19, [x0, #72]
   16788:	cbz	x2, 1679c <idpriv_temp_restore@@Base+0x2ec>
   1678c:	mov	x0, x2
   16790:	subs	x0, x0, #0x1
   16794:	ldr	x19, [x19, #16]
   16798:	b.ne	16790 <idpriv_temp_restore@@Base+0x2e0>  // b.any
   1679c:	add	x21, x3, x20
   167a0:	b	167b8 <idpriv_temp_restore@@Base+0x308>
   167a4:	b.eq	16808 <idpriv_temp_restore@@Base+0x358>  // b.none
   167a8:	add	x20, x20, #0x1
   167ac:	cmp	x21, x20
   167b0:	ldr	x19, [x19, #16]
   167b4:	b.eq	167cc <idpriv_temp_restore@@Base+0x31c>  // b.none
   167b8:	ldr	x0, [x19, #32]
   167bc:	mov	x1, x23
   167c0:	blr	x22
   167c4:	cmp	w0, #0x0
   167c8:	b.le	167a4 <idpriv_temp_restore@@Base+0x2f4>
   167cc:	ldp	x21, x22, [sp, #32]
   167d0:	ldr	x23, [sp, #48]
   167d4:	mov	x0, #0xffffffffffffffff    	// #-1
   167d8:	ldp	x19, x20, [sp, #16]
   167dc:	ldp	x29, x30, [sp], #64
   167e0:	ret
   167e4:	mvn	x2, x2
   167e8:	adds	x2, x2, x5
   167ec:	ldr	x19, [x0, #80]
   167f0:	b.eq	1679c <idpriv_temp_restore@@Base+0x2ec>  // b.none
   167f4:	nop
   167f8:	subs	x2, x2, #0x1
   167fc:	ldr	x19, [x19, #24]
   16800:	b.ne	167f8 <idpriv_temp_restore@@Base+0x348>  // b.any
   16804:	b	1679c <idpriv_temp_restore@@Base+0x2ec>
   16808:	mov	x0, x20
   1680c:	ldp	x19, x20, [sp, #16]
   16810:	ldp	x21, x22, [sp, #32]
   16814:	ldr	x23, [sp, #48]
   16818:	ldp	x29, x30, [sp], #64
   1681c:	ret
   16820:	stp	x21, x22, [sp, #32]
   16824:	str	x23, [sp, #48]
   16828:	bl	a900 <abort@plt>
   1682c:	nop
   16830:	stp	x29, x30, [sp, #-48]!
   16834:	mov	x29, sp
   16838:	ldr	x5, [x0, #96]
   1683c:	stp	x19, x20, [sp, #16]
   16840:	cmp	x5, x3
   16844:	ccmp	x2, x3, #0x2, cs  // cs = hs, nlast
   16848:	b.hi	1690c <idpriv_temp_restore@@Base+0x45c>  // b.pmore
   1684c:	subs	x20, x3, x2
   16850:	b.eq	168c0 <idpriv_temp_restore@@Base+0x410>  // b.none
   16854:	stp	x21, x22, [sp, #32]
   16858:	mov	x21, x1
   1685c:	sub	x1, x5, #0x1
   16860:	mov	x22, x4
   16864:	cmp	x2, x1, lsr #1
   16868:	b.hi	168d4 <idpriv_temp_restore@@Base+0x424>  // b.pmore
   1686c:	ldr	x19, [x0, #72]
   16870:	cbz	x2, 168a8 <idpriv_temp_restore@@Base+0x3f8>
   16874:	nop
   16878:	subs	x2, x2, #0x1
   1687c:	ldr	x19, [x19, #16]
   16880:	b.ne	16878 <idpriv_temp_restore@@Base+0x3c8>  // b.any
   16884:	ldr	x0, [x19, #32]
   16888:	mov	x1, x22
   1688c:	blr	x21
   16890:	cmp	w0, #0x0
   16894:	b.gt	168bc <idpriv_temp_restore@@Base+0x40c>
   16898:	b.eq	168f8 <idpriv_temp_restore@@Base+0x448>  // b.none
   1689c:	subs	x20, x20, #0x1
   168a0:	ldr	x19, [x19, #16]
   168a4:	b.eq	168bc <idpriv_temp_restore@@Base+0x40c>  // b.none
   168a8:	ldr	x0, [x19, #32]
   168ac:	mov	x1, x22
   168b0:	blr	x21
   168b4:	cmp	w0, #0x0
   168b8:	b.le	16898 <idpriv_temp_restore@@Base+0x3e8>
   168bc:	ldp	x21, x22, [sp, #32]
   168c0:	mov	x19, #0x0                   	// #0
   168c4:	mov	x0, x19
   168c8:	ldp	x19, x20, [sp, #16]
   168cc:	ldp	x29, x30, [sp], #48
   168d0:	ret
   168d4:	mvn	x2, x2
   168d8:	adds	x2, x2, x5
   168dc:	ldr	x19, [x0, #80]
   168e0:	b.eq	168a8 <idpriv_temp_restore@@Base+0x3f8>  // b.none
   168e4:	nop
   168e8:	subs	x2, x2, #0x1
   168ec:	ldr	x19, [x19, #24]
   168f0:	b.ne	168e8 <idpriv_temp_restore@@Base+0x438>  // b.any
   168f4:	b	168a8 <idpriv_temp_restore@@Base+0x3f8>
   168f8:	mov	x0, x19
   168fc:	ldp	x19, x20, [sp, #16]
   16900:	ldp	x21, x22, [sp, #32]
   16904:	ldp	x29, x30, [sp], #48
   16908:	ret
   1690c:	stp	x21, x22, [sp, #32]
   16910:	bl	a900 <abort@plt>
   16914:	nop
   16918:	cmp	x1, x2
   1691c:	b.hi	169f8 <idpriv_temp_restore@@Base+0x548>  // b.pmore
   16920:	ldr	x3, [x0, #96]
   16924:	cmp	x3, x2
   16928:	b.cc	169f8 <idpriv_temp_restore@@Base+0x548>  // b.lo, b.ul, b.last
   1692c:	sub	x3, x3, x2
   16930:	sub	x2, x2, x1
   16934:	cmp	x2, x3
   16938:	csel	x4, x2, x3, cs  // cs = hs, nlast
   1693c:	cmp	x1, x4
   16940:	ldr	x5, [x0]
   16944:	b.ls	16980 <idpriv_temp_restore@@Base+0x4d0>  // b.plast
   16948:	add	x1, x0, #0x38
   1694c:	cbz	x3, 1695c <idpriv_temp_restore@@Base+0x4ac>
   16950:	subs	x3, x3, #0x1
   16954:	ldr	x1, [x1, #24]
   16958:	b.ne	16950 <idpriv_temp_restore@@Base+0x4a0>  // b.any
   1695c:	mov	x4, x1
   16960:	cbz	x2, 16974 <idpriv_temp_restore@@Base+0x4c4>
   16964:	nop
   16968:	subs	x2, x2, #0x1
   1696c:	ldr	x4, [x4, #24]
   16970:	b.ne	16968 <idpriv_temp_restore@@Base+0x4b8>  // b.any
   16974:	stp	x5, x0, [x8]
   16978:	stp	x4, x1, [x8, #24]
   1697c:	ret
   16980:	cmp	x2, x3
   16984:	ldr	x4, [x0, #72]
   16988:	b.ls	169c0 <idpriv_temp_restore@@Base+0x510>  // b.plast
   1698c:	cbz	x1, 1699c <idpriv_temp_restore@@Base+0x4ec>
   16990:	subs	x1, x1, #0x1
   16994:	ldr	x4, [x4, #16]
   16998:	b.ne	16990 <idpriv_temp_restore@@Base+0x4e0>  // b.any
   1699c:	add	x1, x0, #0x38
   169a0:	cbz	x3, 16974 <idpriv_temp_restore@@Base+0x4c4>
   169a4:	nop
   169a8:	subs	x3, x3, #0x1
   169ac:	ldr	x1, [x1, #24]
   169b0:	b.ne	169a8 <idpriv_temp_restore@@Base+0x4f8>  // b.any
   169b4:	stp	x5, x0, [x8]
   169b8:	stp	x4, x1, [x8, #24]
   169bc:	ret
   169c0:	cbz	x1, 169d4 <idpriv_temp_restore@@Base+0x524>
   169c4:	nop
   169c8:	subs	x1, x1, #0x1
   169cc:	ldr	x4, [x4, #16]
   169d0:	b.ne	169c8 <idpriv_temp_restore@@Base+0x518>  // b.any
   169d4:	mov	x1, x4
   169d8:	cbz	x2, 16974 <idpriv_temp_restore@@Base+0x4c4>
   169dc:	nop
   169e0:	subs	x2, x2, #0x1
   169e4:	ldr	x1, [x1, #16]
   169e8:	b.ne	169e0 <idpriv_temp_restore@@Base+0x530>  // b.any
   169ec:	stp	x5, x0, [x8]
   169f0:	stp	x4, x1, [x8, #24]
   169f4:	ret
   169f8:	stp	x29, x30, [sp, #-16]!
   169fc:	mov	x29, sp
   16a00:	bl	a900 <abort@plt>
   16a04:	nop
   16a08:	stp	x29, x30, [sp, #-48]!
   16a0c:	mov	x29, sp
   16a10:	str	x21, [sp, #32]
   16a14:	mov	x21, x0
   16a18:	ldr	x0, [x1, #32]
   16a1c:	cmp	x0, x2
   16a20:	b.eq	16a88 <idpriv_temp_restore@@Base+0x5d8>  // b.none
   16a24:	stp	x19, x20, [sp, #16]
   16a28:	mov	x19, x1
   16a2c:	mov	x20, x2
   16a30:	ldr	x1, [x21, #16]
   16a34:	mov	x0, x2
   16a38:	cbz	x1, 16a40 <idpriv_temp_restore@@Base+0x590>
   16a3c:	blr	x1
   16a40:	ldr	x1, [x19, #8]
   16a44:	cmp	x1, x0
   16a48:	b.eq	16a80 <idpriv_temp_restore@@Base+0x5d0>  // b.none
   16a4c:	ldp	x3, x4, [x21, #40]
   16a50:	udiv	x2, x1, x4
   16a54:	msub	x1, x2, x4, x1
   16a58:	add	x2, x3, x1, lsl #3
   16a5c:	ldr	x3, [x3, x1, lsl #3]
   16a60:	cmp	x3, x19
   16a64:	b.eq	16a9c <idpriv_temp_restore@@Base+0x5ec>  // b.none
   16a68:	cbz	x3, 16ad8 <idpriv_temp_restore@@Base+0x628>
   16a6c:	ldr	x1, [x3]
   16a70:	cmp	x1, x19
   16a74:	b.eq	16a98 <idpriv_temp_restore@@Base+0x5e8>  // b.none
   16a78:	mov	x3, x1
   16a7c:	b	16a68 <idpriv_temp_restore@@Base+0x5b8>
   16a80:	str	x20, [x19, #32]
   16a84:	ldp	x19, x20, [sp, #16]
   16a88:	mov	w0, #0x0                   	// #0
   16a8c:	ldr	x21, [sp, #32]
   16a90:	ldp	x29, x30, [sp], #48
   16a94:	ret
   16a98:	mov	x2, x3
   16a9c:	ldr	x1, [x19]
   16aa0:	str	x1, [x2]
   16aa4:	str	x0, [x19, #8]
   16aa8:	str	x20, [x19, #32]
   16aac:	ldp	x2, x3, [x21, #40]
   16ab0:	ldr	x21, [sp, #32]
   16ab4:	udiv	x1, x0, x3
   16ab8:	msub	x0, x1, x3, x0
   16abc:	ldr	x1, [x2, x0, lsl #3]
   16ac0:	str	x1, [x19]
   16ac4:	str	x19, [x2, x0, lsl #3]
   16ac8:	mov	w0, #0x0                   	// #0
   16acc:	ldp	x19, x20, [sp, #16]
   16ad0:	ldp	x29, x30, [sp], #48
   16ad4:	ret
   16ad8:	bl	a900 <abort@plt>
   16adc:	nop
   16ae0:	stp	x29, x30, [sp, #-80]!
   16ae4:	mov	x29, sp
   16ae8:	stp	x21, x22, [sp, #32]
   16aec:	mov	x21, x0
   16af0:	ldr	x0, [x0, #96]
   16af4:	stp	x19, x20, [sp, #16]
   16af8:	stp	x23, x24, [sp, #48]
   16afc:	cmp	x0, x2
   16b00:	ccmp	x1, x2, #0x2, cs  // cs = hs, nlast
   16b04:	stp	x25, x26, [sp, #64]
   16b08:	b.hi	16ccc <idpriv_temp_restore@@Base+0x81c>  // b.pmore
   16b0c:	mov	x23, x1
   16b10:	mov	x22, x2
   16b14:	ldr	x1, [x21, #16]
   16b18:	mov	x25, x3
   16b1c:	mov	x20, x3
   16b20:	cbz	x1, 16b30 <idpriv_temp_restore@@Base+0x680>
   16b24:	mov	x0, x3
   16b28:	blr	x1
   16b2c:	mov	x20, x0
   16b30:	ldp	x3, x1, [x21, #40]
   16b34:	ldrb	w2, [x21, #32]
   16b38:	ldr	x24, [x21, #8]
   16b3c:	udiv	x0, x20, x1
   16b40:	msub	x0, x0, x1, x20
   16b44:	ldr	x19, [x3, x0, lsl #3]
   16b48:	cbnz	w2, 16bac <idpriv_temp_restore@@Base+0x6fc>
   16b4c:	cbnz	x19, 16b8c <idpriv_temp_restore@@Base+0x6dc>
   16b50:	mov	x0, #0xffffffffffffffff    	// #-1
   16b54:	ldp	x19, x20, [sp, #16]
   16b58:	ldp	x21, x22, [sp, #32]
   16b5c:	ldp	x23, x24, [sp, #48]
   16b60:	ldp	x25, x26, [sp, #64]
   16b64:	ldp	x29, x30, [sp], #80
   16b68:	ret
   16b6c:	ldr	x1, [x19, #32]
   16b70:	cbz	x24, 16b9c <idpriv_temp_restore@@Base+0x6ec>
   16b74:	mov	x0, x25
   16b78:	blr	x24
   16b7c:	and	w0, w0, #0xff
   16b80:	cbnz	w0, 16cc4 <idpriv_temp_restore@@Base+0x814>
   16b84:	ldr	x19, [x19]
   16b88:	cbz	x19, 16b50 <idpriv_temp_restore@@Base+0x6a0>
   16b8c:	ldr	x0, [x19, #8]
   16b90:	cmp	x0, x20
   16b94:	b.ne	16b84 <idpriv_temp_restore@@Base+0x6d4>  // b.any
   16b98:	b	16b6c <idpriv_temp_restore@@Base+0x6bc>
   16b9c:	cmp	x25, x1
   16ba0:	cset	w0, eq  // eq = none
   16ba4:	cbz	w0, 16b84 <idpriv_temp_restore@@Base+0x6d4>
   16ba8:	b	16cc4 <idpriv_temp_restore@@Base+0x814>
   16bac:	cbz	x19, 16b50 <idpriv_temp_restore@@Base+0x6a0>
   16bb0:	mov	x26, #0x0                   	// #0
   16bb4:	b	16bc0 <idpriv_temp_restore@@Base+0x710>
   16bb8:	ldr	x19, [x19]
   16bbc:	cbz	x19, 16bf8 <idpriv_temp_restore@@Base+0x748>
   16bc0:	ldr	x0, [x19, #8]
   16bc4:	cmp	x0, x20
   16bc8:	b.ne	16bb8 <idpriv_temp_restore@@Base+0x708>  // b.any
   16bcc:	ldr	x1, [x19, #32]
   16bd0:	cbz	x24, 16c44 <idpriv_temp_restore@@Base+0x794>
   16bd4:	mov	x0, x25
   16bd8:	blr	x24
   16bdc:	and	w0, w0, #0xff
   16be0:	cbz	w0, 16bb8 <idpriv_temp_restore@@Base+0x708>
   16be4:	cbnz	x26, 16c50 <idpriv_temp_restore@@Base+0x7a0>
   16be8:	mov	x26, x19
   16bec:	ldr	x19, [x19]
   16bf0:	cbnz	x19, 16bc0 <idpriv_temp_restore@@Base+0x710>
   16bf4:	nop
   16bf8:	cbz	x26, 16b50 <idpriv_temp_restore@@Base+0x6a0>
   16bfc:	ldr	x3, [x26, #24]
   16c00:	add	x21, x21, #0x38
   16c04:	mov	x0, #0x0                   	// #0
   16c08:	cmp	x21, x3
   16c0c:	b.eq	16c20 <idpriv_temp_restore@@Base+0x770>  // b.none
   16c10:	ldr	x3, [x3, #24]
   16c14:	add	x0, x0, #0x1
   16c18:	cmp	x3, x21
   16c1c:	b.ne	16c10 <idpriv_temp_restore@@Base+0x760>  // b.any
   16c20:	cmp	x23, x0
   16c24:	ccmp	x22, x0, #0x0, ls  // ls = plast
   16c28:	b.ls	16b50 <idpriv_temp_restore@@Base+0x6a0>  // b.plast
   16c2c:	ldp	x19, x20, [sp, #16]
   16c30:	ldp	x21, x22, [sp, #32]
   16c34:	ldp	x23, x24, [sp, #48]
   16c38:	ldp	x25, x26, [sp, #64]
   16c3c:	ldp	x29, x30, [sp], #80
   16c40:	ret
   16c44:	cmp	x25, x1
   16c48:	cset	w0, eq  // eq = none
   16c4c:	b	16be0 <idpriv_temp_restore@@Base+0x730>
   16c50:	mov	x0, x23
   16c54:	ldr	x19, [x21, #72]
   16c58:	cbz	x23, 16c6c <idpriv_temp_restore@@Base+0x7bc>
   16c5c:	nop
   16c60:	subs	x0, x0, #0x1
   16c64:	ldr	x19, [x19, #16]
   16c68:	b.ne	16c60 <idpriv_temp_restore@@Base+0x7b0>  // b.any
   16c6c:	cmp	x23, x22
   16c70:	b.cc	16c88 <idpriv_temp_restore@@Base+0x7d8>  // b.lo, b.ul, b.last
   16c74:	b	16b50 <idpriv_temp_restore@@Base+0x6a0>
   16c78:	add	x23, x23, #0x1
   16c7c:	cmp	x22, x23
   16c80:	ldr	x19, [x19, #16]
   16c84:	b.eq	16b50 <idpriv_temp_restore@@Base+0x6a0>  // b.none
   16c88:	ldr	x0, [x19, #8]
   16c8c:	cmp	x0, x20
   16c90:	b.ne	16c78 <idpriv_temp_restore@@Base+0x7c8>  // b.any
   16c94:	ldr	x1, [x19, #32]
   16c98:	cbz	x24, 16cb4 <idpriv_temp_restore@@Base+0x804>
   16c9c:	mov	x0, x25
   16ca0:	blr	x24
   16ca4:	and	w0, w0, #0xff
   16ca8:	cbz	w0, 16c78 <idpriv_temp_restore@@Base+0x7c8>
   16cac:	mov	x0, x23
   16cb0:	b	16b54 <idpriv_temp_restore@@Base+0x6a4>
   16cb4:	cmp	x25, x1
   16cb8:	cset	w0, eq  // eq = none
   16cbc:	cbz	w0, 16c78 <idpriv_temp_restore@@Base+0x7c8>
   16cc0:	b	16cac <idpriv_temp_restore@@Base+0x7fc>
   16cc4:	mov	x26, x19
   16cc8:	b	16bfc <idpriv_temp_restore@@Base+0x74c>
   16ccc:	bl	a900 <abort@plt>
   16cd0:	stp	x29, x30, [sp, #-96]!
   16cd4:	cmp	x1, x2
   16cd8:	mov	x29, sp
   16cdc:	str	x27, [sp, #80]
   16ce0:	ldr	x27, [x0, #96]
   16ce4:	stp	x19, x20, [sp, #16]
   16ce8:	stp	x21, x22, [sp, #32]
   16cec:	ccmp	x27, x2, #0x0, ls  // ls = plast
   16cf0:	stp	x23, x24, [sp, #48]
   16cf4:	stp	x25, x26, [sp, #64]
   16cf8:	b.cc	16f50 <idpriv_temp_restore@@Base+0xaa0>  // b.lo, b.ul, b.last
   16cfc:	mov	x25, x1
   16d00:	mov	x24, x0
   16d04:	ldr	x1, [x0, #16]
   16d08:	mov	x26, x2
   16d0c:	mov	x23, x3
   16d10:	mov	x21, x3
   16d14:	cbz	x1, 16d24 <idpriv_temp_restore@@Base+0x874>
   16d18:	mov	x0, x3
   16d1c:	blr	x1
   16d20:	mov	x21, x0
   16d24:	ldp	x3, x1, [x24, #40]
   16d28:	ldrb	w2, [x24, #32]
   16d2c:	ldr	x22, [x24, #8]
   16d30:	udiv	x0, x21, x1
   16d34:	msub	x0, x0, x1, x21
   16d38:	ldr	x19, [x3, x0, lsl #3]
   16d3c:	cbz	w2, 16dfc <idpriv_temp_restore@@Base+0x94c>
   16d40:	mov	x20, #0x0                   	// #0
   16d44:	cbnz	x19, 16dd0 <idpriv_temp_restore@@Base+0x920>
   16d48:	cbz	x25, 16e30 <idpriv_temp_restore@@Base+0x980>
   16d4c:	ldr	x0, [x24, #72]
   16d50:	add	x1, x24, #0x38
   16d54:	cmp	x0, x1
   16d58:	b.ne	16d74 <idpriv_temp_restore@@Base+0x8c4>  // b.any
   16d5c:	b	16e30 <idpriv_temp_restore@@Base+0x980>
   16d60:	subs	x25, x25, #0x1
   16d64:	b.eq	16e30 <idpriv_temp_restore@@Base+0x980>  // b.none
   16d68:	ldr	x0, [x0, #16]
   16d6c:	cmp	x0, x1
   16d70:	b.eq	16e30 <idpriv_temp_restore@@Base+0x980>  // b.none
   16d74:	cmp	x0, x20
   16d78:	b.ne	16d60 <idpriv_temp_restore@@Base+0x8b0>  // b.any
   16d7c:	nop
   16d80:	mov	x20, #0x0                   	// #0
   16d84:	mov	x0, x20
   16d88:	ldp	x19, x20, [sp, #16]
   16d8c:	ldp	x21, x22, [sp, #32]
   16d90:	ldp	x23, x24, [sp, #48]
   16d94:	ldp	x25, x26, [sp, #64]
   16d98:	ldr	x27, [sp, #80]
   16d9c:	ldp	x29, x30, [sp], #96
   16da0:	ret
   16da4:	ldr	x1, [x19, #32]
   16da8:	cbz	x22, 16e24 <idpriv_temp_restore@@Base+0x974>
   16dac:	mov	x0, x23
   16db0:	blr	x22
   16db4:	and	w0, w0, #0xff
   16db8:	cbz	w0, 16dc8 <idpriv_temp_restore@@Base+0x918>
   16dbc:	cbnz	x20, 16ee0 <idpriv_temp_restore@@Base+0xa30>
   16dc0:	mov	x20, x19
   16dc4:	nop
   16dc8:	ldr	x19, [x19]
   16dcc:	cbz	x19, 16d48 <idpriv_temp_restore@@Base+0x898>
   16dd0:	ldr	x4, [x19, #8]
   16dd4:	cmp	x4, x21
   16dd8:	b.ne	16dc8 <idpriv_temp_restore@@Base+0x918>  // b.any
   16ddc:	b	16da4 <idpriv_temp_restore@@Base+0x8f4>
   16de0:	ldr	x1, [x19, #32]
   16de4:	cbz	x22, 16e14 <idpriv_temp_restore@@Base+0x964>
   16de8:	mov	x0, x23
   16dec:	blr	x22
   16df0:	and	w0, w0, #0xff
   16df4:	cbnz	w0, 16f48 <idpriv_temp_restore@@Base+0xa98>
   16df8:	ldr	x19, [x19]
   16dfc:	cbz	x19, 16e74 <idpriv_temp_restore@@Base+0x9c4>
   16e00:	ldr	x4, [x19, #8]
   16e04:	cmp	x4, x21
   16e08:	b.eq	16de0 <idpriv_temp_restore@@Base+0x930>  // b.none
   16e0c:	ldr	x19, [x19]
   16e10:	b	16dfc <idpriv_temp_restore@@Base+0x94c>
   16e14:	cmp	x1, x23
   16e18:	cset	w0, eq  // eq = none
   16e1c:	cbz	w0, 16df8 <idpriv_temp_restore@@Base+0x948>
   16e20:	b	16f48 <idpriv_temp_restore@@Base+0xa98>
   16e24:	cmp	x1, x23
   16e28:	cset	w0, eq  // eq = none
   16e2c:	b	16db8 <idpriv_temp_restore@@Base+0x908>
   16e30:	ldr	x2, [x24, #96]
   16e34:	cmp	x2, x26
   16e38:	b.ls	16d84 <idpriv_temp_restore@@Base+0x8d4>  // b.plast
   16e3c:	ldr	x1, [x24, #80]
   16e40:	mvn	x0, x26
   16e44:	cmp	x1, x20
   16e48:	b.eq	16d80 <idpriv_temp_restore@@Base+0x8d0>  // b.none
   16e4c:	adds	x0, x0, x2
   16e50:	b.ne	16e60 <idpriv_temp_restore@@Base+0x9b0>  // b.any
   16e54:	b	16d84 <idpriv_temp_restore@@Base+0x8d4>
   16e58:	subs	x0, x0, #0x1
   16e5c:	b.eq	16d84 <idpriv_temp_restore@@Base+0x8d4>  // b.none
   16e60:	ldr	x1, [x1, #24]
   16e64:	cmp	x1, x20
   16e68:	b.ne	16e58 <idpriv_temp_restore@@Base+0x9a8>  // b.any
   16e6c:	mov	x20, #0x0                   	// #0
   16e70:	b	16d84 <idpriv_temp_restore@@Base+0x8d4>
   16e74:	mov	x20, #0x0                   	// #0
   16e78:	cbz	x25, 16ea0 <idpriv_temp_restore@@Base+0x9f0>
   16e7c:	ldr	x0, [x24, #72]
   16e80:	cmp	x20, x0
   16e84:	b.ne	16e98 <idpriv_temp_restore@@Base+0x9e8>  // b.any
   16e88:	b	16d80 <idpriv_temp_restore@@Base+0x8d0>
   16e8c:	ldr	x0, [x0, #16]
   16e90:	cmp	x20, x0
   16e94:	b.eq	16d80 <idpriv_temp_restore@@Base+0x8d0>  // b.none
   16e98:	subs	x25, x25, #0x1
   16e9c:	b.ne	16e8c <idpriv_temp_restore@@Base+0x9dc>  // b.any
   16ea0:	cmp	x27, x26
   16ea4:	b.ls	16d84 <idpriv_temp_restore@@Base+0x8d4>  // b.plast
   16ea8:	ldr	x0, [x24, #80]
   16eac:	mvn	x19, x26
   16eb0:	cmp	x20, x0
   16eb4:	b.eq	16d80 <idpriv_temp_restore@@Base+0x8d0>  // b.none
   16eb8:	adds	x27, x19, x27
   16ebc:	b.ne	16ecc <idpriv_temp_restore@@Base+0xa1c>  // b.any
   16ec0:	b	16d84 <idpriv_temp_restore@@Base+0x8d4>
   16ec4:	subs	x27, x27, #0x1
   16ec8:	b.eq	16d84 <idpriv_temp_restore@@Base+0x8d4>  // b.none
   16ecc:	ldr	x0, [x0, #24]
   16ed0:	cmp	x20, x0
   16ed4:	b.ne	16ec4 <idpriv_temp_restore@@Base+0xa14>  // b.any
   16ed8:	mov	x20, #0x0                   	// #0
   16edc:	b	16d84 <idpriv_temp_restore@@Base+0x8d4>
   16ee0:	sub	x26, x26, x25
   16ee4:	ldr	x20, [x24, #72]
   16ee8:	cbz	x25, 16efc <idpriv_temp_restore@@Base+0xa4c>
   16eec:	nop
   16ef0:	subs	x25, x25, #0x1
   16ef4:	ldr	x20, [x20, #16]
   16ef8:	b.ne	16ef0 <idpriv_temp_restore@@Base+0xa40>  // b.any
   16efc:	cbnz	x26, 16f10 <idpriv_temp_restore@@Base+0xa60>
   16f00:	b	16d80 <idpriv_temp_restore@@Base+0x8d0>
   16f04:	subs	x26, x26, #0x1
   16f08:	ldr	x20, [x20, #16]
   16f0c:	b.eq	16d80 <idpriv_temp_restore@@Base+0x8d0>  // b.none
   16f10:	ldr	x0, [x20, #8]
   16f14:	cmp	x0, x21
   16f18:	b.ne	16f04 <idpriv_temp_restore@@Base+0xa54>  // b.any
   16f1c:	ldr	x1, [x20, #32]
   16f20:	cbz	x22, 16f38 <idpriv_temp_restore@@Base+0xa88>
   16f24:	mov	x0, x23
   16f28:	blr	x22
   16f2c:	and	w0, w0, #0xff
   16f30:	cbz	w0, 16f04 <idpriv_temp_restore@@Base+0xa54>
   16f34:	b	16d84 <idpriv_temp_restore@@Base+0x8d4>
   16f38:	cmp	x1, x23
   16f3c:	cset	w0, eq  // eq = none
   16f40:	cbz	w0, 16f04 <idpriv_temp_restore@@Base+0xa54>
   16f44:	b	16d84 <idpriv_temp_restore@@Base+0x8d4>
   16f48:	mov	x20, x19
   16f4c:	b	16e78 <idpriv_temp_restore@@Base+0x9c8>
   16f50:	bl	a900 <abort@plt>
   16f54:	nop
   16f58:	stp	x29, x30, [sp, #-48]!
   16f5c:	mov	x29, sp
   16f60:	ldr	x3, [x0, #96]
   16f64:	stp	x19, x20, [sp, #16]
   16f68:	str	x21, [sp, #32]
   16f6c:	cmp	x3, x1
   16f70:	b.ls	1707c <idpriv_temp_restore@@Base+0xbcc>  // b.plast
   16f74:	mov	x20, x0
   16f78:	sub	x0, x3, #0x1
   16f7c:	mov	x21, x2
   16f80:	cmp	x1, x0, lsr #1
   16f84:	b.hi	17010 <idpriv_temp_restore@@Base+0xb60>  // b.pmore
   16f88:	ldr	x19, [x20, #72]
   16f8c:	cbz	x1, 16f9c <idpriv_temp_restore@@Base+0xaec>
   16f90:	subs	x1, x1, #0x1
   16f94:	ldr	x19, [x19, #16]
   16f98:	b.ne	16f90 <idpriv_temp_restore@@Base+0xae0>  // b.any
   16f9c:	ldr	x0, [x19, #32]
   16fa0:	cmp	x0, x21
   16fa4:	b.eq	16ffc <idpriv_temp_restore@@Base+0xb4c>  // b.none
   16fa8:	ldr	x1, [x20, #16]
   16fac:	mov	x0, x21
   16fb0:	cbz	x1, 16fb8 <idpriv_temp_restore@@Base+0xb08>
   16fb4:	blr	x1
   16fb8:	ldr	x1, [x19, #8]
   16fbc:	cmp	x1, x0
   16fc0:	b.eq	16ff8 <idpriv_temp_restore@@Base+0xb48>  // b.none
   16fc4:	ldp	x3, x4, [x20, #40]
   16fc8:	udiv	x2, x1, x4
   16fcc:	msub	x1, x2, x4, x1
   16fd0:	add	x2, x3, x1, lsl #3
   16fd4:	ldr	x1, [x3, x1, lsl #3]
   16fd8:	cmp	x1, x19
   16fdc:	b.eq	17040 <idpriv_temp_restore@@Base+0xb90>  // b.none
   16fe0:	cbz	x1, 1707c <idpriv_temp_restore@@Base+0xbcc>
   16fe4:	ldr	x3, [x1]
   16fe8:	cmp	x3, x19
   16fec:	b.eq	1703c <idpriv_temp_restore@@Base+0xb8c>  // b.none
   16ff0:	mov	x1, x3
   16ff4:	b	16fe0 <idpriv_temp_restore@@Base+0xb30>
   16ff8:	str	x21, [x19, #32]
   16ffc:	mov	x0, x19
   17000:	ldp	x19, x20, [sp, #16]
   17004:	ldr	x21, [sp, #32]
   17008:	ldp	x29, x30, [sp], #48
   1700c:	ret
   17010:	mvn	x1, x1
   17014:	adds	x1, x3, x1
   17018:	ldr	x19, [x20, #80]
   1701c:	b.eq	16f9c <idpriv_temp_restore@@Base+0xaec>  // b.none
   17020:	subs	x1, x1, #0x1
   17024:	ldr	x19, [x19, #24]
   17028:	b.eq	16f9c <idpriv_temp_restore@@Base+0xaec>  // b.none
   1702c:	subs	x1, x1, #0x1
   17030:	ldr	x19, [x19, #24]
   17034:	b.ne	17020 <idpriv_temp_restore@@Base+0xb70>  // b.any
   17038:	b	16f9c <idpriv_temp_restore@@Base+0xaec>
   1703c:	mov	x2, x1
   17040:	ldr	x1, [x19]
   17044:	str	x1, [x2]
   17048:	str	x0, [x19, #8]
   1704c:	str	x21, [x19, #32]
   17050:	ldr	x21, [sp, #32]
   17054:	ldp	x2, x3, [x20, #40]
   17058:	udiv	x1, x0, x3
   1705c:	msub	x0, x1, x3, x0
   17060:	ldr	x1, [x2, x0, lsl #3]
   17064:	str	x1, [x19]
   17068:	str	x19, [x2, x0, lsl #3]
   1706c:	mov	x0, x19
   17070:	ldp	x19, x20, [sp, #16]
   17074:	ldp	x29, x30, [sp], #48
   17078:	ret
   1707c:	bl	a900 <abort@plt>
   17080:	ldr	x2, [x0, #96]
   17084:	cmp	x2, x1
   17088:	b.ls	170e4 <idpriv_temp_restore@@Base+0xc34>  // b.plast
   1708c:	sub	x3, x2, #0x1
   17090:	cmp	x1, x3, lsr #1
   17094:	b.hi	170b4 <idpriv_temp_restore@@Base+0xc04>  // b.pmore
   17098:	ldr	x0, [x0, #72]
   1709c:	cbz	x1, 170ac <idpriv_temp_restore@@Base+0xbfc>
   170a0:	subs	x1, x1, #0x1
   170a4:	ldr	x0, [x0, #16]
   170a8:	b.ne	170a0 <idpriv_temp_restore@@Base+0xbf0>  // b.any
   170ac:	ldr	x0, [x0, #32]
   170b0:	ret
   170b4:	mvn	x1, x1
   170b8:	adds	x1, x1, x2
   170bc:	ldr	x0, [x0, #80]
   170c0:	b.eq	170ac <idpriv_temp_restore@@Base+0xbfc>  // b.none
   170c4:	nop
   170c8:	subs	x1, x1, #0x1
   170cc:	ldr	x0, [x0, #24]
   170d0:	b.eq	170ac <idpriv_temp_restore@@Base+0xbfc>  // b.none
   170d4:	subs	x1, x1, #0x1
   170d8:	ldr	x0, [x0, #24]
   170dc:	b.ne	170c8 <idpriv_temp_restore@@Base+0xc18>  // b.any
   170e0:	b	170ac <idpriv_temp_restore@@Base+0xbfc>
   170e4:	stp	x29, x30, [sp, #-16]!
   170e8:	mov	x29, sp
   170ec:	bl	a900 <abort@plt>
   170f0:	stp	x29, x30, [sp, #-64]!
   170f4:	mov	x29, sp
   170f8:	stp	x19, x20, [sp, #16]
   170fc:	ldr	x19, [x0, #72]
   17100:	stp	x21, x22, [sp, #32]
   17104:	add	x22, x0, #0x38
   17108:	ldr	x21, [x0, #24]
   1710c:	str	x23, [sp, #48]
   17110:	cmp	x19, x22
   17114:	mov	x23, x0
   17118:	b.eq	17144 <idpriv_temp_restore@@Base+0xc94>  // b.none
   1711c:	nop
   17120:	mov	x20, x19
   17124:	ldr	x19, [x19, #16]
   17128:	cbz	x21, 17134 <idpriv_temp_restore@@Base+0xc84>
   1712c:	ldr	x0, [x20, #32]
   17130:	blr	x21
   17134:	mov	x0, x20
   17138:	bl	aa50 <free@plt>
   1713c:	cmp	x19, x22
   17140:	b.ne	17120 <idpriv_temp_restore@@Base+0xc70>  // b.any
   17144:	ldr	x0, [x23, #40]
   17148:	bl	aa50 <free@plt>
   1714c:	mov	x0, x23
   17150:	ldp	x19, x20, [sp, #16]
   17154:	ldp	x21, x22, [sp, #32]
   17158:	ldr	x23, [sp, #48]
   1715c:	ldp	x29, x30, [sp], #64
   17160:	b	aa50 <free@plt>
   17164:	nop
   17168:	stp	x29, x30, [sp, #-32]!
   1716c:	mov	x29, sp
   17170:	ldr	x3, [x0, #96]
   17174:	str	x19, [sp, #16]
   17178:	cmp	x3, x1
   1717c:	b.ls	17258 <idpriv_temp_restore@@Base+0xda8>  // b.plast
   17180:	sub	x4, x3, #0x1
   17184:	add	x2, x0, #0x38
   17188:	cmp	x1, x4, lsr #1
   1718c:	b.hi	17228 <idpriv_temp_restore@@Base+0xd78>  // b.pmore
   17190:	cbz	x1, 171a4 <idpriv_temp_restore@@Base+0xcf4>
   17194:	nop
   17198:	subs	x1, x1, #0x1
   1719c:	ldr	x2, [x2, #16]
   171a0:	b.ne	17198 <idpriv_temp_restore@@Base+0xce8>  // b.any
   171a4:	ldr	x19, [x2, #16]
   171a8:	ldr	x1, [x19, #16]
   171ac:	str	x1, [x2, #16]
   171b0:	str	x2, [x1, #24]
   171b4:	ldp	x2, x3, [x0, #40]
   171b8:	ldr	x5, [x19, #8]
   171bc:	udiv	x1, x5, x3
   171c0:	msub	x1, x1, x3, x5
   171c4:	add	x3, x2, x1, lsl #3
   171c8:	ldr	x1, [x2, x1, lsl #3]
   171cc:	cmp	x1, x19
   171d0:	b.eq	171f4 <idpriv_temp_restore@@Base+0xd44>  // b.none
   171d4:	nop
   171d8:	cbz	x1, 17258 <idpriv_temp_restore@@Base+0xda8>
   171dc:	ldr	x2, [x1]
   171e0:	cmp	x2, x19
   171e4:	b.eq	171f0 <idpriv_temp_restore@@Base+0xd40>  // b.none
   171e8:	mov	x1, x2
   171ec:	b	171d8 <idpriv_temp_restore@@Base+0xd28>
   171f0:	mov	x3, x1
   171f4:	ldr	x1, [x19]
   171f8:	str	x1, [x3]
   171fc:	ldr	x1, [x0, #24]
   17200:	str	x4, [x0, #96]
   17204:	cbz	x1, 17210 <idpriv_temp_restore@@Base+0xd60>
   17208:	ldr	x0, [x19, #32]
   1720c:	blr	x1
   17210:	mov	x0, x19
   17214:	bl	aa50 <free@plt>
   17218:	mov	w0, #0x1                   	// #1
   1721c:	ldr	x19, [sp, #16]
   17220:	ldp	x29, x30, [sp], #32
   17224:	ret
   17228:	mvn	x1, x1
   1722c:	adds	x1, x3, x1
   17230:	b.eq	17244 <idpriv_temp_restore@@Base+0xd94>  // b.none
   17234:	nop
   17238:	subs	x1, x1, #0x1
   1723c:	ldr	x2, [x2, #24]
   17240:	b.ne	17238 <idpriv_temp_restore@@Base+0xd88>  // b.any
   17244:	ldr	x19, [x2, #24]
   17248:	ldr	x1, [x19, #24]
   1724c:	str	x1, [x2, #24]
   17250:	str	x2, [x1, #16]
   17254:	b	171b4 <idpriv_temp_restore@@Base+0xd04>
   17258:	bl	a900 <abort@plt>
   1725c:	nop
   17260:	stp	x29, x30, [sp, #-32]!
   17264:	mov	x29, sp
   17268:	ldp	x2, x3, [x0, #40]
   1726c:	ldr	x4, [x1, #8]
   17270:	str	x19, [sp, #16]
   17274:	mov	x19, x1
   17278:	udiv	x1, x4, x3
   1727c:	msub	x1, x1, x3, x4
   17280:	add	x4, x2, x1, lsl #3
   17284:	ldr	x2, [x2, x1, lsl #3]
   17288:	cmp	x2, x19
   1728c:	b.eq	172ac <idpriv_temp_restore@@Base+0xdfc>  // b.none
   17290:	cbz	x2, 172f4 <idpriv_temp_restore@@Base+0xe44>
   17294:	ldr	x3, [x2]
   17298:	cmp	x3, x19
   1729c:	b.eq	172a8 <idpriv_temp_restore@@Base+0xdf8>  // b.none
   172a0:	mov	x2, x3
   172a4:	b	17290 <idpriv_temp_restore@@Base+0xde0>
   172a8:	mov	x4, x2
   172ac:	ldp	x2, x3, [x19, #16]
   172b0:	ldr	x1, [x19]
   172b4:	str	x1, [x4]
   172b8:	ldr	x1, [x0, #96]
   172bc:	ldr	x4, [x0, #24]
   172c0:	str	x2, [x3, #16]
   172c4:	str	x3, [x2, #24]
   172c8:	sub	x1, x1, #0x1
   172cc:	str	x1, [x0, #96]
   172d0:	cbz	x4, 172dc <idpriv_temp_restore@@Base+0xe2c>
   172d4:	ldr	x0, [x19, #32]
   172d8:	blr	x4
   172dc:	mov	x0, x19
   172e0:	bl	aa50 <free@plt>
   172e4:	mov	w0, #0x1                   	// #1
   172e8:	ldr	x19, [sp, #16]
   172ec:	ldp	x29, x30, [sp], #32
   172f0:	ret
   172f4:	bl	a900 <abort@plt>
   172f8:	stp	x29, x30, [sp, #-64]!
   172fc:	mov	x29, sp
   17300:	stp	x19, x20, [sp, #16]
   17304:	ldr	x19, [x0, #72]
   17308:	stp	x21, x22, [sp, #32]
   1730c:	add	x22, x0, #0x38
   17310:	cmp	x19, x22
   17314:	b.eq	17354 <idpriv_temp_restore@@Base+0xea4>  // b.none
   17318:	mov	x21, x1
   1731c:	mov	x20, x2
   17320:	str	x23, [sp, #48]
   17324:	mov	x23, x0
   17328:	b	1733c <idpriv_temp_restore@@Base+0xe8c>
   1732c:	b.eq	17368 <idpriv_temp_restore@@Base+0xeb8>  // b.none
   17330:	ldr	x19, [x19, #16]
   17334:	cmp	x19, x22
   17338:	b.eq	17350 <idpriv_temp_restore@@Base+0xea0>  // b.none
   1733c:	ldr	x0, [x19, #32]
   17340:	mov	x1, x20
   17344:	blr	x21
   17348:	cmp	w0, #0x0
   1734c:	b.le	1732c <idpriv_temp_restore@@Base+0xe7c>
   17350:	ldr	x23, [sp, #48]
   17354:	mov	w0, #0x0                   	// #0
   17358:	ldp	x19, x20, [sp, #16]
   1735c:	ldp	x21, x22, [sp, #32]
   17360:	ldp	x29, x30, [sp], #64
   17364:	ret
   17368:	mov	x1, x19
   1736c:	mov	x0, x23
   17370:	ldp	x19, x20, [sp, #16]
   17374:	ldp	x21, x22, [sp, #32]
   17378:	ldr	x23, [sp, #48]
   1737c:	ldp	x29, x30, [sp], #64
   17380:	b	17260 <idpriv_temp_restore@@Base+0xdb0>
   17384:	nop
   17388:	stp	x29, x30, [sp, #-32]!
   1738c:	mov	x3, x1
   17390:	mov	x1, #0x0                   	// #0
   17394:	mov	x29, sp
   17398:	ldr	x2, [x0, #96]
   1739c:	str	x19, [sp, #16]
   173a0:	mov	x19, x0
   173a4:	bl	16cd0 <idpriv_temp_restore@@Base+0x820>
   173a8:	cbz	x0, 173c0 <idpriv_temp_restore@@Base+0xf10>
   173ac:	mov	x1, x0
   173b0:	mov	x0, x19
   173b4:	ldr	x19, [sp, #16]
   173b8:	ldp	x29, x30, [sp], #32
   173bc:	b	17260 <idpriv_temp_restore@@Base+0xdb0>
   173c0:	mov	w0, #0x0                   	// #0
   173c4:	ldr	x19, [sp, #16]
   173c8:	ldp	x29, x30, [sp], #32
   173cc:	ret
   173d0:	stp	x29, x30, [sp, #-80]!
   173d4:	mov	x29, sp
   173d8:	stp	x19, x20, [sp, #16]
   173dc:	mov	x19, x3
   173e0:	stp	x21, x22, [sp, #32]
   173e4:	mov	x21, x5
   173e8:	mov	x22, x6
   173ec:	stp	x23, x24, [sp, #48]
   173f0:	mov	x24, x1
   173f4:	mov	x23, x2
   173f8:	stp	x25, x26, [sp, #64]
   173fc:	mov	x25, x0
   17400:	and	w26, w4, #0xff
   17404:	mov	x0, #0x68                  	// #104
   17408:	bl	a5f0 <malloc@plt>
   1740c:	mov	x20, x0
   17410:	cbz	x0, 174f8 <idpriv_temp_restore@@Base+0x1048>
   17414:	stp	x25, x24, [x20]
   17418:	lsr	x0, x21, #1
   1741c:	adds	x0, x0, x21
   17420:	stp	x23, x19, [x20, #16]
   17424:	strb	w26, [x20, #32]
   17428:	b.cs	17558 <idpriv_temp_restore@@Base+0x10a8>  // b.hs, b.nlast
   1742c:	cmp	x0, #0xa
   17430:	mov	x2, #0xa                   	// #10
   17434:	csel	x2, x0, x2, cs  // cs = hs, nlast
   17438:	adrp	x3, 2d000 <vasnprintf@@Base+0x21e0>
   1743c:	mov	x0, #0xb                   	// #11
   17440:	add	x3, x3, #0xb98
   17444:	mov	x1, #0x0                   	// #0
   17448:	b	17458 <idpriv_temp_restore@@Base+0xfa8>
   1744c:	cmp	x1, #0xe8
   17450:	b.eq	17530 <idpriv_temp_restore@@Base+0x1080>  // b.none
   17454:	ldr	x0, [x3, x1, lsl #3]
   17458:	add	x1, x1, #0x1
   1745c:	cmp	x2, x0
   17460:	b.hi	1744c <idpriv_temp_restore@@Base+0xf9c>  // b.pmore
   17464:	str	x0, [x20, #48]
   17468:	mov	x1, #0x1fffffffffffffff    	// #2305843009213693951
   1746c:	cmp	x0, x1
   17470:	b.hi	17530 <idpriv_temp_restore@@Base+0x1080>  // b.pmore
   17474:	mov	x1, #0x8                   	// #8
   17478:	bl	a770 <calloc@plt>
   1747c:	str	x0, [x20, #40]
   17480:	cbz	x0, 17530 <idpriv_temp_restore@@Base+0x1080>
   17484:	str	x21, [x20, #96]
   17488:	add	x23, x20, #0x38
   1748c:	mov	x19, x23
   17490:	cbz	x21, 174f0 <idpriv_temp_restore@@Base+0x1040>
   17494:	mov	x24, #0x0                   	// #0
   17498:	mov	x25, x19
   1749c:	mov	x0, #0x28                  	// #40
   174a0:	bl	a5f0 <malloc@plt>
   174a4:	mov	x19, x0
   174a8:	cbz	x0, 17520 <idpriv_temp_restore@@Base+0x1070>
   174ac:	ldr	x1, [x20, #16]
   174b0:	ldr	x0, [x22, x24, lsl #3]
   174b4:	str	x0, [x19, #32]
   174b8:	add	x24, x24, #0x1
   174bc:	cbz	x1, 174c4 <idpriv_temp_restore@@Base+0x1014>
   174c0:	blr	x1
   174c4:	ldp	x2, x3, [x20, #40]
   174c8:	str	x0, [x19, #8]
   174cc:	cmp	x24, x21
   174d0:	udiv	x1, x0, x3
   174d4:	msub	x0, x1, x3, x0
   174d8:	ldr	x1, [x2, x0, lsl #3]
   174dc:	str	x1, [x19]
   174e0:	str	x19, [x2, x0, lsl #3]
   174e4:	str	x25, [x19, #24]
   174e8:	str	x19, [x25, #16]
   174ec:	b.ne	17498 <idpriv_temp_restore@@Base+0xfe8>  // b.any
   174f0:	str	x23, [x19, #16]
   174f4:	str	x19, [x20, #80]
   174f8:	mov	x0, x20
   174fc:	ldp	x19, x20, [sp, #16]
   17500:	ldp	x21, x22, [sp, #32]
   17504:	ldp	x23, x24, [sp, #48]
   17508:	ldp	x25, x26, [sp, #64]
   1750c:	ldp	x29, x30, [sp], #80
   17510:	ret
   17514:	mov	x0, x25
   17518:	ldr	x25, [x25, #24]
   1751c:	bl	aa50 <free@plt>
   17520:	cmp	x23, x25
   17524:	b.ne	17514 <idpriv_temp_restore@@Base+0x1064>  // b.any
   17528:	ldr	x0, [x20, #40]
   1752c:	bl	aa50 <free@plt>
   17530:	mov	x0, x20
   17534:	mov	x20, #0x0                   	// #0
   17538:	bl	aa50 <free@plt>
   1753c:	mov	x0, x20
   17540:	ldp	x19, x20, [sp, #16]
   17544:	ldp	x21, x22, [sp, #32]
   17548:	ldp	x23, x24, [sp, #48]
   1754c:	ldp	x25, x26, [sp, #64]
   17550:	ldp	x29, x30, [sp], #80
   17554:	ret
   17558:	mov	x2, #0xffffffffffffffff    	// #-1
   1755c:	b	17438 <idpriv_temp_restore@@Base+0xf88>
   17560:	stp	x29, x30, [sp, #-64]!
   17564:	mov	x29, sp
   17568:	stp	x19, x20, [sp, #16]
   1756c:	mov	x20, x3
   17570:	stp	x21, x22, [sp, #32]
   17574:	mov	x22, x1
   17578:	mov	x21, x2
   1757c:	stp	x23, x24, [sp, #48]
   17580:	mov	x23, x0
   17584:	and	w24, w4, #0xff
   17588:	mov	x0, #0x68                  	// #104
   1758c:	bl	a5f0 <malloc@plt>
   17590:	mov	x19, x0
   17594:	cbz	x0, 175c8 <idpriv_temp_restore@@Base+0x1118>
   17598:	mov	x0, #0xb                   	// #11
   1759c:	stp	x23, x22, [x19]
   175a0:	mov	x1, #0x8                   	// #8
   175a4:	stp	x21, x20, [x19, #16]
   175a8:	strb	w24, [x19, #32]
   175ac:	str	x0, [x19, #48]
   175b0:	bl	a770 <calloc@plt>
   175b4:	str	x0, [x19, #40]
   175b8:	cbz	x0, 175e0 <idpriv_temp_restore@@Base+0x1130>
   175bc:	add	x0, x19, #0x38
   175c0:	stp	x0, x0, [x19, #72]
   175c4:	str	xzr, [x19, #96]
   175c8:	mov	x0, x19
   175cc:	ldp	x19, x20, [sp, #16]
   175d0:	ldp	x21, x22, [sp, #32]
   175d4:	ldp	x23, x24, [sp, #48]
   175d8:	ldp	x29, x30, [sp], #64
   175dc:	ret
   175e0:	mov	x0, x19
   175e4:	mov	x19, #0x0                   	// #0
   175e8:	bl	aa50 <free@plt>
   175ec:	b	175c8 <idpriv_temp_restore@@Base+0x1118>
   175f0:	stp	x29, x30, [sp, #-48]!
   175f4:	mov	x29, sp
   175f8:	stp	x19, x20, [sp, #16]
   175fc:	mov	x19, x0
   17600:	ldr	x0, [x0, #96]
   17604:	ldr	x20, [x19, #48]
   17608:	lsr	x1, x0, #1
   1760c:	adds	x1, x1, x0
   17610:	csinv	x1, x1, xzr, cc  // cc = lo, ul, last
   17614:	cmp	x20, x1
   17618:	b.cc	17628 <idpriv_temp_restore@@Base+0x1178>  // b.lo, b.ul, b.last
   1761c:	ldp	x19, x20, [sp, #16]
   17620:	ldp	x29, x30, [sp], #48
   17624:	ret
   17628:	adrp	x2, 2d000 <vasnprintf@@Base+0x21e0>
   1762c:	mov	x0, #0x0                   	// #0
   17630:	add	x2, x2, #0xb98
   17634:	stp	x21, x22, [sp, #32]
   17638:	mov	x21, #0xb                   	// #11
   1763c:	b	1764c <idpriv_temp_restore@@Base+0x119c>
   17640:	cmp	x0, #0xe8
   17644:	b.eq	176b8 <idpriv_temp_restore@@Base+0x1208>  // b.none
   17648:	ldr	x21, [x2, x0, lsl #3]
   1764c:	add	x0, x0, #0x1
   17650:	cmp	x1, x21
   17654:	b.hi	17640 <idpriv_temp_restore@@Base+0x1190>  // b.pmore
   17658:	cmp	x20, x21
   1765c:	b.cs	176b8 <idpriv_temp_restore@@Base+0x1208>  // b.hs, b.nlast
   17660:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   17664:	cmp	x21, x0
   17668:	b.hi	176b8 <idpriv_temp_restore@@Base+0x1208>  // b.pmore
   1766c:	mov	x0, x21
   17670:	mov	x1, #0x8                   	// #8
   17674:	ldr	x22, [x19, #40]
   17678:	bl	a770 <calloc@plt>
   1767c:	cbz	x0, 176b8 <idpriv_temp_restore@@Base+0x1208>
   17680:	cbz	x20, 176c8 <idpriv_temp_restore@@Base+0x1218>
   17684:	sub	x20, x20, #0x1
   17688:	ldr	x1, [x22, x20, lsl #3]
   1768c:	cbz	x1, 17680 <idpriv_temp_restore@@Base+0x11d0>
   17690:	mov	x3, x1
   17694:	ldr	x1, [x1]
   17698:	ldr	x4, [x3, #8]
   1769c:	udiv	x2, x4, x21
   176a0:	msub	x2, x2, x21, x4
   176a4:	ldr	x4, [x0, x2, lsl #3]
   176a8:	str	x4, [x3]
   176ac:	str	x3, [x0, x2, lsl #3]
   176b0:	cbnz	x1, 17690 <idpriv_temp_restore@@Base+0x11e0>
   176b4:	b	17680 <idpriv_temp_restore@@Base+0x11d0>
   176b8:	ldp	x19, x20, [sp, #16]
   176bc:	ldp	x21, x22, [sp, #32]
   176c0:	ldp	x29, x30, [sp], #48
   176c4:	ret
   176c8:	stp	x0, x21, [x19, #40]
   176cc:	mov	x0, x22
   176d0:	ldp	x19, x20, [sp, #16]
   176d4:	ldp	x21, x22, [sp, #32]
   176d8:	ldp	x29, x30, [sp], #48
   176dc:	b	aa50 <free@plt>
   176e0:	stp	x29, x30, [sp, #-64]!
   176e4:	mov	x29, sp
   176e8:	stp	x19, x20, [sp, #16]
   176ec:	ldr	x20, [x0, #96]
   176f0:	stp	x21, x22, [sp, #32]
   176f4:	str	x23, [sp, #48]
   176f8:	cmp	x20, x1
   176fc:	b.cc	177d8 <idpriv_temp_restore@@Base+0x1328>  // b.lo, b.ul, b.last
   17700:	mov	x22, x0
   17704:	mov	x19, x1
   17708:	mov	x23, x2
   1770c:	mov	x0, #0x28                  	// #40
   17710:	bl	a5f0 <malloc@plt>
   17714:	mov	x21, x0
   17718:	cbz	x0, 17794 <idpriv_temp_restore@@Base+0x12e4>
   1771c:	ldr	x1, [x22, #16]
   17720:	str	x23, [x21, #32]
   17724:	mov	x0, x23
   17728:	mov	x2, x20
   1772c:	cbz	x1, 17738 <idpriv_temp_restore@@Base+0x1288>
   17730:	blr	x1
   17734:	ldr	x2, [x22, #96]
   17738:	str	x0, [x21, #8]
   1773c:	ldp	x4, x5, [x22, #40]
   17740:	cmp	x19, x20, lsr #1
   17744:	add	x3, x22, #0x38
   17748:	udiv	x1, x0, x5
   1774c:	msub	x0, x1, x5, x0
   17750:	ldr	x1, [x4, x0, lsl #3]
   17754:	str	x1, [x21]
   17758:	str	x21, [x4, x0, lsl #3]
   1775c:	b.hi	177ac <idpriv_temp_restore@@Base+0x12fc>  // b.pmore
   17760:	cbz	x19, 17774 <idpriv_temp_restore@@Base+0x12c4>
   17764:	nop
   17768:	subs	x19, x19, #0x1
   1776c:	ldr	x3, [x3, #16]
   17770:	b.ne	17768 <idpriv_temp_restore@@Base+0x12b8>  // b.any
   17774:	ldr	x0, [x3, #16]
   17778:	stp	x0, x3, [x21, #16]
   1777c:	str	x21, [x0, #24]
   17780:	str	x21, [x3, #16]
   17784:	add	x0, x2, #0x1
   17788:	str	x0, [x22, #96]
   1778c:	mov	x0, x22
   17790:	bl	175f0 <idpriv_temp_restore@@Base+0x1140>
   17794:	mov	x0, x21
   17798:	ldp	x19, x20, [sp, #16]
   1779c:	ldp	x21, x22, [sp, #32]
   177a0:	ldr	x23, [sp, #48]
   177a4:	ldp	x29, x30, [sp], #64
   177a8:	ret
   177ac:	subs	x19, x20, x19
   177b0:	b.eq	177c4 <idpriv_temp_restore@@Base+0x1314>  // b.none
   177b4:	nop
   177b8:	subs	x19, x19, #0x1
   177bc:	ldr	x3, [x3, #24]
   177c0:	b.ne	177b8 <idpriv_temp_restore@@Base+0x1308>  // b.any
   177c4:	ldr	x0, [x3, #24]
   177c8:	stp	x3, x0, [x21, #16]
   177cc:	str	x21, [x0, #16]
   177d0:	str	x21, [x3, #24]
   177d4:	b	17784 <idpriv_temp_restore@@Base+0x12d4>
   177d8:	bl	a900 <abort@plt>
   177dc:	nop
   177e0:	stp	x29, x30, [sp, #-48]!
   177e4:	mov	x29, sp
   177e8:	stp	x19, x20, [sp, #16]
   177ec:	mov	x20, x2
   177f0:	stp	x21, x22, [sp, #32]
   177f4:	mov	x21, x0
   177f8:	mov	x22, x1
   177fc:	mov	x0, #0x28                  	// #40
   17800:	bl	a5f0 <malloc@plt>
   17804:	mov	x19, x0
   17808:	cbz	x0, 17860 <idpriv_temp_restore@@Base+0x13b0>
   1780c:	ldr	x1, [x21, #16]
   17810:	str	x20, [x0, #32]
   17814:	cbz	x1, 17824 <idpriv_temp_restore@@Base+0x1374>
   17818:	mov	x0, x20
   1781c:	blr	x1
   17820:	mov	x20, x0
   17824:	ldp	x5, x6, [x21, #40]
   17828:	mov	x0, x21
   1782c:	ldr	x3, [x21, #96]
   17830:	ldr	x4, [x22, #16]
   17834:	udiv	x1, x20, x6
   17838:	msub	x2, x1, x6, x20
   1783c:	add	x1, x3, #0x1
   17840:	ldr	x3, [x5, x2, lsl #3]
   17844:	stp	x3, x20, [x19]
   17848:	str	x19, [x5, x2, lsl #3]
   1784c:	stp	x4, x22, [x19, #16]
   17850:	str	x19, [x4, #24]
   17854:	str	x19, [x22, #16]
   17858:	str	x1, [x21, #96]
   1785c:	bl	175f0 <idpriv_temp_restore@@Base+0x1140>
   17860:	mov	x0, x19
   17864:	ldp	x19, x20, [sp, #16]
   17868:	ldp	x21, x22, [sp, #32]
   1786c:	ldp	x29, x30, [sp], #48
   17870:	ret
   17874:	nop
   17878:	stp	x29, x30, [sp, #-48]!
   1787c:	mov	x29, sp
   17880:	stp	x19, x20, [sp, #16]
   17884:	mov	x20, x2
   17888:	stp	x21, x22, [sp, #32]
   1788c:	mov	x21, x0
   17890:	mov	x22, x1
   17894:	mov	x0, #0x28                  	// #40
   17898:	bl	a5f0 <malloc@plt>
   1789c:	mov	x19, x0
   178a0:	cbz	x0, 178f8 <idpriv_temp_restore@@Base+0x1448>
   178a4:	ldr	x1, [x21, #16]
   178a8:	str	x20, [x0, #32]
   178ac:	cbz	x1, 178bc <idpriv_temp_restore@@Base+0x140c>
   178b0:	mov	x0, x20
   178b4:	blr	x1
   178b8:	mov	x20, x0
   178bc:	ldp	x5, x6, [x21, #40]
   178c0:	mov	x0, x21
   178c4:	ldr	x3, [x21, #96]
   178c8:	ldr	x4, [x22, #24]
   178cc:	udiv	x1, x20, x6
   178d0:	msub	x2, x1, x6, x20
   178d4:	add	x1, x3, #0x1
   178d8:	ldr	x3, [x5, x2, lsl #3]
   178dc:	stp	x3, x20, [x19]
   178e0:	str	x19, [x5, x2, lsl #3]
   178e4:	stp	x22, x4, [x19, #16]
   178e8:	str	x19, [x4, #16]
   178ec:	str	x19, [x22, #24]
   178f0:	str	x1, [x21, #96]
   178f4:	bl	175f0 <idpriv_temp_restore@@Base+0x1140>
   178f8:	mov	x0, x19
   178fc:	ldp	x19, x20, [sp, #16]
   17900:	ldp	x21, x22, [sp, #32]
   17904:	ldp	x29, x30, [sp], #48
   17908:	ret
   1790c:	nop
   17910:	stp	x29, x30, [sp, #-48]!
   17914:	mov	x29, sp
   17918:	stp	x19, x20, [sp, #16]
   1791c:	mov	x20, x0
   17920:	mov	x0, #0x28                  	// #40
   17924:	str	x21, [sp, #32]
   17928:	mov	x21, x1
   1792c:	bl	a5f0 <malloc@plt>
   17930:	mov	x19, x0
   17934:	cbz	x0, 17990 <idpriv_temp_restore@@Base+0x14e0>
   17938:	ldr	x2, [x20, #16]
   1793c:	str	x21, [x0, #32]
   17940:	cbz	x2, 17950 <idpriv_temp_restore@@Base+0x14a0>
   17944:	mov	x0, x21
   17948:	blr	x2
   1794c:	mov	x21, x0
   17950:	ldp	x5, x6, [x20, #40]
   17954:	add	x7, x20, #0x38
   17958:	ldr	x3, [x20, #96]
   1795c:	mov	x0, x20
   17960:	ldr	x4, [x20, #80]
   17964:	udiv	x2, x21, x6
   17968:	msub	x1, x2, x6, x21
   1796c:	add	x2, x3, #0x1
   17970:	ldr	x3, [x5, x1, lsl #3]
   17974:	stp	x3, x21, [x19]
   17978:	str	x19, [x5, x1, lsl #3]
   1797c:	stp	x7, x4, [x19, #16]
   17980:	str	x19, [x4, #16]
   17984:	str	x19, [x20, #80]
   17988:	str	x2, [x20, #96]
   1798c:	bl	175f0 <idpriv_temp_restore@@Base+0x1140>
   17990:	mov	x0, x19
   17994:	ldp	x19, x20, [sp, #16]
   17998:	ldr	x21, [sp, #32]
   1799c:	ldp	x29, x30, [sp], #48
   179a0:	ret
   179a4:	nop
   179a8:	stp	x29, x30, [sp, #-64]!
   179ac:	mov	x29, sp
   179b0:	stp	x19, x20, [sp, #16]
   179b4:	mov	x20, x2
   179b8:	ldr	x19, [x0, #72]
   179bc:	stp	x21, x22, [sp, #32]
   179c0:	add	x22, x0, #0x38
   179c4:	str	x23, [sp, #48]
   179c8:	cmp	x19, x22
   179cc:	mov	x23, x0
   179d0:	b.eq	17a18 <idpriv_temp_restore@@Base+0x1568>  // b.none
   179d4:	mov	x21, x1
   179d8:	b	179e8 <idpriv_temp_restore@@Base+0x1538>
   179dc:	ldr	x19, [x19, #16]
   179e0:	cmp	x19, x22
   179e4:	b.eq	17a18 <idpriv_temp_restore@@Base+0x1568>  // b.none
   179e8:	ldr	x0, [x19, #32]
   179ec:	mov	x1, x20
   179f0:	blr	x21
   179f4:	tbnz	w0, #31, 179dc <idpriv_temp_restore@@Base+0x152c>
   179f8:	mov	x2, x20
   179fc:	mov	x1, x19
   17a00:	mov	x0, x23
   17a04:	ldp	x19, x20, [sp, #16]
   17a08:	ldp	x21, x22, [sp, #32]
   17a0c:	ldr	x23, [sp, #48]
   17a10:	ldp	x29, x30, [sp], #64
   17a14:	b	17878 <idpriv_temp_restore@@Base+0x13c8>
   17a18:	mov	x1, x20
   17a1c:	mov	x0, x23
   17a20:	ldp	x19, x20, [sp, #16]
   17a24:	ldp	x21, x22, [sp, #32]
   17a28:	ldr	x23, [sp, #48]
   17a2c:	ldp	x29, x30, [sp], #64
   17a30:	b	17910 <idpriv_temp_restore@@Base+0x1460>
   17a34:	nop
   17a38:	stp	x29, x30, [sp, #-48]!
   17a3c:	mov	x29, sp
   17a40:	stp	x19, x20, [sp, #16]
   17a44:	mov	x20, x0
   17a48:	mov	x0, #0x28                  	// #40
   17a4c:	str	x21, [sp, #32]
   17a50:	mov	x21, x1
   17a54:	bl	a5f0 <malloc@plt>
   17a58:	mov	x19, x0
   17a5c:	cbz	x0, 17ab8 <idpriv_temp_restore@@Base+0x1608>
   17a60:	ldr	x2, [x20, #16]
   17a64:	str	x21, [x0, #32]
   17a68:	cbz	x2, 17a78 <idpriv_temp_restore@@Base+0x15c8>
   17a6c:	mov	x0, x21
   17a70:	blr	x2
   17a74:	mov	x21, x0
   17a78:	ldp	x5, x6, [x20, #40]
   17a7c:	add	x7, x20, #0x38
   17a80:	ldr	x3, [x20, #96]
   17a84:	mov	x0, x20
   17a88:	ldr	x4, [x20, #72]
   17a8c:	udiv	x2, x21, x6
   17a90:	msub	x1, x2, x6, x21
   17a94:	add	x2, x3, #0x1
   17a98:	ldr	x3, [x5, x1, lsl #3]
   17a9c:	stp	x3, x21, [x19]
   17aa0:	str	x19, [x5, x1, lsl #3]
   17aa4:	stp	x4, x7, [x19, #16]
   17aa8:	str	x19, [x4, #24]
   17aac:	str	x19, [x20, #72]
   17ab0:	str	x2, [x20, #96]
   17ab4:	bl	175f0 <idpriv_temp_restore@@Base+0x1140>
   17ab8:	mov	x0, x19
   17abc:	ldp	x19, x20, [sp, #16]
   17ac0:	ldr	x21, [sp, #32]
   17ac4:	ldp	x29, x30, [sp], #48
   17ac8:	ret
   17acc:	nop

0000000000017ad0 <gl_list_nx_create_empty@@Base>:
   17ad0:	ldr	x5, [x0]
   17ad4:	mov	x16, x5
   17ad8:	br	x16
   17adc:	nop

0000000000017ae0 <gl_list_nx_create@@Base>:
   17ae0:	ldr	x7, [x0, #8]
   17ae4:	mov	x16, x7
   17ae8:	br	x16
   17aec:	nop

0000000000017af0 <gl_list_size@@Base>:
   17af0:	ldr	x1, [x0]
   17af4:	ldr	x1, [x1, #16]
   17af8:	mov	x16, x1
   17afc:	br	x16

0000000000017b00 <gl_list_node_value@@Base>:
   17b00:	ldr	x2, [x0]
   17b04:	ldr	x2, [x2, #24]
   17b08:	mov	x16, x2
   17b0c:	br	x16

0000000000017b10 <gl_list_node_nx_set_value@@Base>:
   17b10:	ldr	x3, [x0]
   17b14:	ldr	x3, [x3, #32]
   17b18:	mov	x16, x3
   17b1c:	br	x16

0000000000017b20 <gl_list_next_node@@Base>:
   17b20:	ldr	x2, [x0]
   17b24:	ldr	x2, [x2, #40]
   17b28:	mov	x16, x2
   17b2c:	br	x16

0000000000017b30 <gl_list_previous_node@@Base>:
   17b30:	ldr	x2, [x0]
   17b34:	ldr	x2, [x2, #48]
   17b38:	mov	x16, x2
   17b3c:	br	x16

0000000000017b40 <gl_list_get_at@@Base>:
   17b40:	ldr	x2, [x0]
   17b44:	ldr	x2, [x2, #56]
   17b48:	mov	x16, x2
   17b4c:	br	x16

0000000000017b50 <gl_list_nx_set_at@@Base>:
   17b50:	ldr	x3, [x0]
   17b54:	ldr	x3, [x3, #64]
   17b58:	mov	x16, x3
   17b5c:	br	x16

0000000000017b60 <gl_list_search@@Base>:
   17b60:	stp	x29, x30, [sp, #-32]!
   17b64:	mov	x29, sp
   17b68:	stp	x19, x20, [sp, #16]
   17b6c:	mov	x20, x1
   17b70:	mov	x19, x0
   17b74:	ldr	x1, [x0]
   17b78:	ldr	x1, [x1, #16]
   17b7c:	blr	x1
   17b80:	mov	x2, x0
   17b84:	ldr	x4, [x19]
   17b88:	mov	x3, x20
   17b8c:	mov	x0, x19
   17b90:	mov	x1, #0x0                   	// #0
   17b94:	ldp	x19, x20, [sp, #16]
   17b98:	ldp	x29, x30, [sp], #32
   17b9c:	ldr	x4, [x4, #72]
   17ba0:	mov	x16, x4
   17ba4:	br	x16

0000000000017ba8 <gl_list_search_from@@Base>:
   17ba8:	stp	x29, x30, [sp, #-48]!
   17bac:	mov	x29, sp
   17bb0:	stp	x19, x20, [sp, #16]
   17bb4:	mov	x20, x1
   17bb8:	mov	x19, x0
   17bbc:	ldr	x1, [x0]
   17bc0:	ldr	x1, [x1, #16]
   17bc4:	str	x21, [sp, #32]
   17bc8:	mov	x21, x2
   17bcc:	blr	x1
   17bd0:	mov	x2, x0
   17bd4:	ldr	x4, [x19]
   17bd8:	mov	x3, x21
   17bdc:	mov	x1, x20
   17be0:	mov	x0, x19
   17be4:	ldp	x19, x20, [sp, #16]
   17be8:	ldr	x21, [sp, #32]
   17bec:	ldp	x29, x30, [sp], #48
   17bf0:	ldr	x4, [x4, #72]
   17bf4:	mov	x16, x4
   17bf8:	br	x16
   17bfc:	nop

0000000000017c00 <gl_list_search_from_to@@Base>:
   17c00:	ldr	x4, [x0]
   17c04:	ldr	x4, [x4, #72]
   17c08:	mov	x16, x4
   17c0c:	br	x16

0000000000017c10 <gl_list_indexof@@Base>:
   17c10:	stp	x29, x30, [sp, #-32]!
   17c14:	mov	x29, sp
   17c18:	stp	x19, x20, [sp, #16]
   17c1c:	mov	x20, x1
   17c20:	mov	x19, x0
   17c24:	ldr	x1, [x0]
   17c28:	ldr	x1, [x1, #16]
   17c2c:	blr	x1
   17c30:	mov	x2, x0
   17c34:	ldr	x4, [x19]
   17c38:	mov	x3, x20
   17c3c:	mov	x0, x19
   17c40:	mov	x1, #0x0                   	// #0
   17c44:	ldp	x19, x20, [sp, #16]
   17c48:	ldp	x29, x30, [sp], #32
   17c4c:	ldr	x4, [x4, #80]
   17c50:	mov	x16, x4
   17c54:	br	x16

0000000000017c58 <gl_list_indexof_from@@Base>:
   17c58:	stp	x29, x30, [sp, #-48]!
   17c5c:	mov	x29, sp
   17c60:	stp	x19, x20, [sp, #16]
   17c64:	mov	x20, x1
   17c68:	mov	x19, x0
   17c6c:	ldr	x1, [x0]
   17c70:	ldr	x1, [x1, #16]
   17c74:	str	x21, [sp, #32]
   17c78:	mov	x21, x2
   17c7c:	blr	x1
   17c80:	mov	x2, x0
   17c84:	ldr	x4, [x19]
   17c88:	mov	x3, x21
   17c8c:	mov	x1, x20
   17c90:	mov	x0, x19
   17c94:	ldp	x19, x20, [sp, #16]
   17c98:	ldr	x21, [sp, #32]
   17c9c:	ldp	x29, x30, [sp], #48
   17ca0:	ldr	x4, [x4, #80]
   17ca4:	mov	x16, x4
   17ca8:	br	x16
   17cac:	nop

0000000000017cb0 <gl_list_indexof_from_to@@Base>:
   17cb0:	ldr	x4, [x0]
   17cb4:	ldr	x4, [x4, #80]
   17cb8:	mov	x16, x4
   17cbc:	br	x16

0000000000017cc0 <gl_list_nx_add_first@@Base>:
   17cc0:	ldr	x2, [x0]
   17cc4:	ldr	x2, [x2, #88]
   17cc8:	mov	x16, x2
   17ccc:	br	x16

0000000000017cd0 <gl_list_nx_add_last@@Base>:
   17cd0:	ldr	x2, [x0]
   17cd4:	ldr	x2, [x2, #96]
   17cd8:	mov	x16, x2
   17cdc:	br	x16

0000000000017ce0 <gl_list_nx_add_before@@Base>:
   17ce0:	ldr	x3, [x0]
   17ce4:	ldr	x3, [x3, #104]
   17ce8:	mov	x16, x3
   17cec:	br	x16

0000000000017cf0 <gl_list_nx_add_after@@Base>:
   17cf0:	ldr	x3, [x0]
   17cf4:	ldr	x3, [x3, #112]
   17cf8:	mov	x16, x3
   17cfc:	br	x16

0000000000017d00 <gl_list_nx_add_at@@Base>:
   17d00:	ldr	x3, [x0]
   17d04:	ldr	x3, [x3, #120]
   17d08:	mov	x16, x3
   17d0c:	br	x16

0000000000017d10 <gl_list_remove_node@@Base>:
   17d10:	ldr	x2, [x0]
   17d14:	ldr	x2, [x2, #128]
   17d18:	mov	x16, x2
   17d1c:	br	x16

0000000000017d20 <gl_list_remove_at@@Base>:
   17d20:	ldr	x2, [x0]
   17d24:	ldr	x2, [x2, #136]
   17d28:	mov	x16, x2
   17d2c:	br	x16

0000000000017d30 <gl_list_remove@@Base>:
   17d30:	ldr	x2, [x0]
   17d34:	ldr	x2, [x2, #144]
   17d38:	mov	x16, x2
   17d3c:	br	x16

0000000000017d40 <gl_list_free@@Base>:
   17d40:	ldr	x1, [x0]
   17d44:	ldr	x1, [x1, #152]
   17d48:	mov	x16, x1
   17d4c:	br	x16

0000000000017d50 <gl_list_iterator@@Base>:
   17d50:	stp	x29, x30, [sp, #-16]!
   17d54:	mov	x29, sp
   17d58:	ldr	x1, [x0]
   17d5c:	ldr	x1, [x1, #160]
   17d60:	blr	x1
   17d64:	ldp	x29, x30, [sp], #16
   17d68:	ret
   17d6c:	nop

0000000000017d70 <gl_list_iterator_from_to@@Base>:
   17d70:	stp	x29, x30, [sp, #-16]!
   17d74:	mov	x29, sp
   17d78:	ldr	x3, [x0]
   17d7c:	ldr	x3, [x3, #168]
   17d80:	blr	x3
   17d84:	ldp	x29, x30, [sp], #16
   17d88:	ret
   17d8c:	nop

0000000000017d90 <gl_list_iterator_next@@Base>:
   17d90:	ldr	x3, [x0]
   17d94:	ldr	x3, [x3, #176]
   17d98:	mov	x16, x3
   17d9c:	br	x16

0000000000017da0 <gl_list_iterator_free@@Base>:
   17da0:	ldr	x1, [x0]
   17da4:	ldr	x1, [x1, #184]
   17da8:	mov	x16, x1
   17dac:	br	x16

0000000000017db0 <gl_sortedlist_search@@Base>:
   17db0:	ldr	x3, [x0]
   17db4:	ldr	x3, [x3, #192]
   17db8:	mov	x16, x3
   17dbc:	br	x16

0000000000017dc0 <gl_sortedlist_search_from_to@@Base>:
   17dc0:	ldr	x5, [x0]
   17dc4:	ldr	x5, [x5, #200]
   17dc8:	mov	x16, x5
   17dcc:	br	x16

0000000000017dd0 <gl_sortedlist_indexof@@Base>:
   17dd0:	ldr	x3, [x0]
   17dd4:	ldr	x3, [x3, #208]
   17dd8:	mov	x16, x3
   17ddc:	br	x16

0000000000017de0 <gl_sortedlist_indexof_from_to@@Base>:
   17de0:	ldr	x5, [x0]
   17de4:	ldr	x5, [x5, #216]
   17de8:	mov	x16, x5
   17dec:	br	x16

0000000000017df0 <gl_sortedlist_nx_add@@Base>:
   17df0:	ldr	x3, [x0]
   17df4:	ldr	x3, [x3, #224]
   17df8:	mov	x16, x3
   17dfc:	br	x16

0000000000017e00 <gl_sortedlist_remove@@Base>:
   17e00:	ldr	x3, [x0]
   17e04:	ldr	x3, [x3, #232]
   17e08:	mov	x16, x3
   17e0c:	br	x16

0000000000017e10 <locale_charset@@Base>:
   17e10:	stp	x29, x30, [sp, #-16]!
   17e14:	mov	w0, #0xe                   	// #14
   17e18:	mov	x29, sp
   17e1c:	bl	a5c0 <nl_langinfo@plt>
   17e20:	cbz	x0, 17e40 <locale_charset@@Base+0x30>
   17e24:	ldrb	w2, [x0]
   17e28:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   17e2c:	add	x1, x1, #0x1f8
   17e30:	cmp	w2, #0x0
   17e34:	csel	x0, x1, x0, eq  // eq = none
   17e38:	ldp	x29, x30, [sp], #16
   17e3c:	ret
   17e40:	ldp	x29, x30, [sp], #16
   17e44:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   17e48:	add	x0, x0, #0x1f8
   17e4c:	ret

0000000000017e50 <glthread_rwlock_init_for_glibc@@Base>:
   17e50:	stp	x29, x30, [sp, #-64]!
   17e54:	mov	x29, sp
   17e58:	str	x21, [sp, #32]
   17e5c:	add	x21, sp, #0x38
   17e60:	stp	x19, x20, [sp, #16]
   17e64:	mov	x20, x0
   17e68:	mov	x0, x21
   17e6c:	bl	a2e0 <pthread_rwlockattr_init@plt>
   17e70:	mov	w19, w0
   17e74:	cbz	w0, 17e8c <glthread_rwlock_init_for_glibc@@Base+0x3c>
   17e78:	mov	w0, w19
   17e7c:	ldp	x19, x20, [sp, #16]
   17e80:	ldr	x21, [sp, #32]
   17e84:	ldp	x29, x30, [sp], #64
   17e88:	ret
   17e8c:	mov	x0, x21
   17e90:	mov	w1, #0x2                   	// #2
   17e94:	bl	a430 <pthread_rwlockattr_setkind_np@plt>
   17e98:	mov	w19, w0
   17e9c:	cbz	w0, 17ebc <glthread_rwlock_init_for_glibc@@Base+0x6c>
   17ea0:	mov	x0, x21
   17ea4:	bl	adb0 <pthread_rwlockattr_destroy@plt>
   17ea8:	mov	w0, w19
   17eac:	ldp	x19, x20, [sp, #16]
   17eb0:	ldr	x21, [sp, #32]
   17eb4:	ldp	x29, x30, [sp], #64
   17eb8:	ret
   17ebc:	mov	x0, x20
   17ec0:	mov	x1, x21
   17ec4:	bl	a410 <pthread_rwlock_init@plt>
   17ec8:	mov	w19, w0
   17ecc:	b	17ea0 <glthread_rwlock_init_for_glibc@@Base+0x50>

0000000000017ed0 <glthread_recursive_lock_init_multithreaded@@Base>:
   17ed0:	stp	x29, x30, [sp, #-64]!
   17ed4:	mov	x29, sp
   17ed8:	str	x21, [sp, #32]
   17edc:	add	x21, sp, #0x38
   17ee0:	stp	x19, x20, [sp, #16]
   17ee4:	mov	x20, x0
   17ee8:	mov	x0, x21
   17eec:	bl	ad00 <pthread_mutexattr_init@plt>
   17ef0:	mov	w19, w0
   17ef4:	cbz	w0, 17f0c <glthread_recursive_lock_init_multithreaded@@Base+0x3c>
   17ef8:	mov	w0, w19
   17efc:	ldp	x19, x20, [sp, #16]
   17f00:	ldr	x21, [sp, #32]
   17f04:	ldp	x29, x30, [sp], #64
   17f08:	ret
   17f0c:	mov	x0, x21
   17f10:	mov	w1, #0x1                   	// #1
   17f14:	bl	a370 <pthread_mutexattr_settype@plt>
   17f18:	mov	w19, w0
   17f1c:	cbnz	w0, 17f54 <glthread_recursive_lock_init_multithreaded@@Base+0x84>
   17f20:	mov	x0, x20
   17f24:	mov	x1, x21
   17f28:	bl	a840 <pthread_mutex_init@plt>
   17f2c:	mov	w19, w0
   17f30:	mov	x0, x21
   17f34:	cbnz	w19, 17f70 <glthread_recursive_lock_init_multithreaded@@Base+0xa0>
   17f38:	bl	ad50 <pthread_mutexattr_destroy@plt>
   17f3c:	mov	w19, w0
   17f40:	mov	w0, w19
   17f44:	ldp	x19, x20, [sp, #16]
   17f48:	ldr	x21, [sp, #32]
   17f4c:	ldp	x29, x30, [sp], #64
   17f50:	ret
   17f54:	mov	x0, x21
   17f58:	bl	ad50 <pthread_mutexattr_destroy@plt>
   17f5c:	mov	w0, w19
   17f60:	ldp	x19, x20, [sp, #16]
   17f64:	ldr	x21, [sp, #32]
   17f68:	ldp	x29, x30, [sp], #64
   17f6c:	ret
   17f70:	bl	ad50 <pthread_mutexattr_destroy@plt>
   17f74:	mov	w0, w19
   17f78:	ldp	x19, x20, [sp, #16]
   17f7c:	ldr	x21, [sp, #32]
   17f80:	ldp	x29, x30, [sp], #64
   17f84:	ret

0000000000017f88 <glthread_once_singlethreaded@@Base>:
   17f88:	mov	x1, x0
   17f8c:	ldrb	w0, [x0]
   17f90:	cbnz	w0, 17fa4 <glthread_once_singlethreaded@@Base+0x1c>
   17f94:	mov	w2, #0xffffffff            	// #-1
   17f98:	mov	w0, #0x1                   	// #1
   17f9c:	strb	w2, [x1]
   17fa0:	ret
   17fa4:	mov	w0, #0x0                   	// #0
   17fa8:	ret
   17fac:	nop

0000000000017fb0 <mmalloca@@Base>:
   17fb0:	adds	x0, x0, #0x20
   17fb4:	b.cs	17fec <mmalloca@@Base+0x3c>  // b.hs, b.nlast
   17fb8:	stp	x29, x30, [sp, #-16]!
   17fbc:	mov	x29, sp
   17fc0:	bl	a5f0 <malloc@plt>
   17fc4:	mov	x1, x0
   17fc8:	mov	x0, #0x0                   	// #0
   17fcc:	cbz	x1, 17fe4 <mmalloca@@Base+0x34>
   17fd0:	add	x0, x1, #0x10
   17fd4:	and	x0, x0, #0xffffffffffffffe0
   17fd8:	add	x0, x0, #0x10
   17fdc:	sub	x1, x0, x1
   17fe0:	sturb	w1, [x0, #-1]
   17fe4:	ldp	x29, x30, [sp], #16
   17fe8:	ret
   17fec:	mov	x0, #0x0                   	// #0
   17ff0:	ret
   17ff4:	nop

0000000000017ff8 <freea@@Base>:
   17ff8:	tst	x0, #0xf
   17ffc:	b.ne	18014 <freea@@Base+0x1c>  // b.any
   18000:	tbnz	w0, #4, 18008 <freea@@Base+0x10>
   18004:	ret
   18008:	ldurb	w1, [x0, #-1]
   1800c:	sub	x0, x0, x1
   18010:	b	aa50 <free@plt>
   18014:	stp	x29, x30, [sp, #-16]!
   18018:	mov	x29, sp
   1801c:	bl	a900 <abort@plt>

0000000000018020 <gl_map_nx_create_empty@@Base>:
   18020:	ldr	x5, [x0]
   18024:	mov	x16, x5
   18028:	br	x16
   1802c:	nop

0000000000018030 <gl_map_size@@Base>:
   18030:	ldr	x1, [x0]
   18034:	ldr	x1, [x1, #8]
   18038:	mov	x16, x1
   1803c:	br	x16

0000000000018040 <gl_map_search@@Base>:
   18040:	ldr	x3, [x0]
   18044:	ldr	x3, [x3, #16]
   18048:	mov	x16, x3
   1804c:	br	x16

0000000000018050 <gl_map_nx_getput@@Base>:
   18050:	ldr	x4, [x0]
   18054:	ldr	x4, [x4, #24]
   18058:	mov	x16, x4
   1805c:	br	x16

0000000000018060 <gl_map_getremove@@Base>:
   18060:	ldr	x3, [x0]
   18064:	ldr	x3, [x3, #32]
   18068:	mov	x16, x3
   1806c:	br	x16

0000000000018070 <gl_map_free@@Base>:
   18070:	ldr	x1, [x0]
   18074:	ldr	x1, [x1, #40]
   18078:	mov	x16, x1
   1807c:	br	x16

0000000000018080 <gl_map_iterator@@Base>:
   18080:	stp	x29, x30, [sp, #-16]!
   18084:	mov	x29, sp
   18088:	ldr	x1, [x0]
   1808c:	ldr	x1, [x1, #48]
   18090:	blr	x1
   18094:	ldp	x29, x30, [sp], #16
   18098:	ret
   1809c:	nop

00000000000180a0 <gl_map_iterator_next@@Base>:
   180a0:	ldr	x3, [x0]
   180a4:	ldr	x3, [x3, #56]
   180a8:	mov	x16, x3
   180ac:	br	x16

00000000000180b0 <gl_map_iterator_free@@Base>:
   180b0:	ldr	x1, [x0]
   180b4:	ldr	x1, [x1, #64]
   180b8:	mov	x16, x1
   180bc:	br	x16

00000000000180c0 <gl_map_get@@Base>:
   180c0:	stp	x29, x30, [sp, #-32]!
   180c4:	mov	x29, sp
   180c8:	ldr	x3, [x0]
   180cc:	str	xzr, [sp, #24]
   180d0:	add	x2, sp, #0x18
   180d4:	ldr	x3, [x3, #16]
   180d8:	blr	x3
   180dc:	ldr	x0, [sp, #24]
   180e0:	ldp	x29, x30, [sp], #32
   180e4:	ret

00000000000180e8 <gl_map_nx_put@@Base>:
   180e8:	stp	x29, x30, [sp, #-48]!
   180ec:	mov	x29, sp
   180f0:	ldr	x4, [x0]
   180f4:	stp	x19, x20, [sp, #16]
   180f8:	add	x3, sp, #0x28
   180fc:	mov	x20, x0
   18100:	ldr	x4, [x4, #24]
   18104:	blr	x4
   18108:	mov	w19, w0
   1810c:	cbnz	w0, 18120 <gl_map_nx_put@@Base+0x38>
   18110:	ldr	x1, [x20, #24]
   18114:	cbz	x1, 18120 <gl_map_nx_put@@Base+0x38>
   18118:	ldr	x0, [sp, #40]
   1811c:	blr	x1
   18120:	mov	w0, w19
   18124:	ldp	x19, x20, [sp, #16]
   18128:	ldp	x29, x30, [sp], #48
   1812c:	ret

0000000000018130 <gl_map_remove@@Base>:
   18130:	stp	x29, x30, [sp, #-48]!
   18134:	mov	x29, sp
   18138:	ldr	x3, [x0]
   1813c:	stp	x19, x20, [sp, #16]
   18140:	add	x2, sp, #0x28
   18144:	mov	x20, x0
   18148:	ldr	x3, [x3, #32]
   1814c:	blr	x3
   18150:	mov	w19, w0
   18154:	tst	w0, #0xff
   18158:	b.eq	1816c <gl_map_remove@@Base+0x3c>  // b.none
   1815c:	ldr	x1, [x20, #24]
   18160:	cbz	x1, 1816c <gl_map_remove@@Base+0x3c>
   18164:	ldr	x0, [sp, #40]
   18168:	blr	x1
   1816c:	mov	w0, w19
   18170:	ldp	x19, x20, [sp, #16]
   18174:	ldp	x29, x30, [sp], #48
   18178:	ret
   1817c:	nop

0000000000018180 <get_nonblocking_flag@@Base>:
   18180:	stp	x29, x30, [sp, #-16]!
   18184:	mov	w2, #0x0                   	// #0
   18188:	mov	w1, #0x3                   	// #3
   1818c:	mov	x29, sp
   18190:	bl	ac00 <fcntl@plt>
   18194:	cmp	w0, #0x0
   18198:	ubfx	x0, x0, #11, #1
   1819c:	csinv	w0, w0, wzr, ge  // ge = tcont
   181a0:	ldp	x29, x30, [sp], #16
   181a4:	ret

00000000000181a8 <set_nonblocking_flag@@Base>:
   181a8:	stp	x29, x30, [sp, #-32]!
   181ac:	mov	w2, #0x0                   	// #0
   181b0:	mov	x29, sp
   181b4:	stp	x19, x20, [sp, #16]
   181b8:	and	w20, w1, #0xff
   181bc:	mov	w19, w0
   181c0:	mov	w1, #0x3                   	// #3
   181c4:	bl	ac00 <fcntl@plt>
   181c8:	tbnz	w0, #31, 1820c <set_nonblocking_flag@@Base+0x64>
   181cc:	ubfx	x1, x0, #11, #1
   181d0:	cmp	w1, w20
   181d4:	b.eq	181fc <set_nonblocking_flag@@Base+0x54>  // b.none
   181d8:	cmp	w20, #0x0
   181dc:	orr	w1, w0, #0x800
   181e0:	and	w2, w0, #0xfffff7ff
   181e4:	mov	w0, w19
   181e8:	ldp	x19, x20, [sp, #16]
   181ec:	csel	w2, w2, w1, eq  // eq = none
   181f0:	ldp	x29, x30, [sp], #32
   181f4:	mov	w1, #0x4                   	// #4
   181f8:	b	ac00 <fcntl@plt>
   181fc:	mov	w0, #0x0                   	// #0
   18200:	ldp	x19, x20, [sp, #16]
   18204:	ldp	x29, x30, [sp], #32
   18208:	ret
   1820c:	mov	w0, #0xffffffff            	// #-1
   18210:	b	18200 <set_nonblocking_flag@@Base+0x58>
   18214:	nop

0000000000018218 <openat_save_fail@@Base>:
   18218:	stp	x29, x30, [sp, #-32]!
   1821c:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   18220:	mov	w2, #0x5                   	// #5
   18224:	mov	x29, sp
   18228:	ldr	x3, [x3, #3976]
   1822c:	stp	x19, x20, [sp, #16]
   18230:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   18234:	mov	w19, w0
   18238:	add	x1, x1, #0x2d8
   1823c:	ldr	w20, [x3]
   18240:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   18244:	add	x0, x0, #0x780
   18248:	bl	ada0 <dcgettext@plt>
   1824c:	mov	w1, w19
   18250:	mov	x2, x0
   18254:	mov	w0, w20
   18258:	bl	a360 <error@plt>
   1825c:	bl	a900 <abort@plt>

0000000000018260 <openat_restore_fail@@Base>:
   18260:	stp	x29, x30, [sp, #-32]!
   18264:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   18268:	mov	w2, #0x5                   	// #5
   1826c:	mov	x29, sp
   18270:	ldr	x3, [x3, #3976]
   18274:	stp	x19, x20, [sp, #16]
   18278:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1827c:	mov	w19, w0
   18280:	add	x1, x1, #0x308
   18284:	ldr	w20, [x3]
   18288:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   1828c:	add	x0, x0, #0x780
   18290:	bl	ada0 <dcgettext@plt>
   18294:	mov	w1, w19
   18298:	mov	x2, x0
   1829c:	mov	w0, w20
   182a0:	bl	a360 <error@plt>
   182a4:	bl	a900 <abort@plt>

00000000000182a8 <set_program_name@@Base>:
   182a8:	stp	x29, x30, [sp, #-48]!
   182ac:	mov	x29, sp
   182b0:	stp	x19, x20, [sp, #16]
   182b4:	cbz	x0, 18368 <set_program_name@@Base+0xc0>
   182b8:	mov	x19, x0
   182bc:	mov	w1, #0x2f                  	// #47
   182c0:	bl	a880 <strrchr@plt>
   182c4:	mov	x20, x0
   182c8:	cbz	x0, 18330 <set_program_name@@Base+0x88>
   182cc:	str	x21, [sp, #32]
   182d0:	add	x21, x0, #0x1
   182d4:	sub	x0, x21, x19
   182d8:	cmp	x0, #0x6
   182dc:	b.le	18354 <set_program_name@@Base+0xac>
   182e0:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   182e4:	sub	x0, x20, #0x6
   182e8:	add	x1, x1, #0x370
   182ec:	mov	x2, #0x7                   	// #7
   182f0:	bl	a6c0 <strncmp@plt>
   182f4:	cbnz	w0, 18354 <set_program_name@@Base+0xac>
   182f8:	ldrb	w0, [x20, #1]
   182fc:	cmp	w0, #0x6c
   18300:	b.ne	1835c <set_program_name@@Base+0xb4>  // b.any
   18304:	ldrb	w0, [x21, #1]
   18308:	cmp	w0, #0x74
   1830c:	b.ne	1835c <set_program_name@@Base+0xb4>  // b.any
   18310:	ldrb	w0, [x21, #2]
   18314:	cmp	w0, #0x2d
   18318:	b.ne	1835c <set_program_name@@Base+0xb4>  // b.any
   1831c:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   18320:	add	x19, x20, #0x4
   18324:	ldr	x21, [sp, #32]
   18328:	ldr	x0, [x0, #4008]
   1832c:	str	x19, [x0]
   18330:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   18334:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   18338:	ldr	x1, [x1, #3992]
   1833c:	ldr	x0, [x0, #3768]
   18340:	str	x19, [x1]
   18344:	str	x19, [x0]
   18348:	ldp	x19, x20, [sp, #16]
   1834c:	ldp	x29, x30, [sp], #48
   18350:	ret
   18354:	ldr	x21, [sp, #32]
   18358:	b	18330 <set_program_name@@Base+0x88>
   1835c:	mov	x19, x21
   18360:	ldr	x21, [sp, #32]
   18364:	b	18330 <set_program_name@@Base+0x88>
   18368:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   1836c:	mov	x2, #0x37                  	// #55
   18370:	mov	x1, #0x1                   	// #1
   18374:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   18378:	ldr	x3, [x3, #3816]
   1837c:	add	x0, x0, #0x338
   18380:	ldr	x3, [x3]
   18384:	str	x21, [sp, #32]
   18388:	bl	abd0 <fwrite@plt>
   1838c:	bl	a900 <abort@plt>
   18390:	ldp	x3, x4, [x1]
   18394:	str	x3, [x0, #8]
   18398:	ldr	x5, [x0, #16]
   1839c:	ldr	x2, [x0]
   183a0:	str	x0, [x1]
   183a4:	str	x5, [x1, #16]
   183a8:	str	x1, [x0, #16]
   183ac:	cbz	x3, 183f4 <set_program_name@@Base+0x14c>
   183b0:	str	x0, [x3, #16]
   183b4:	cbz	x2, 183ec <set_program_name@@Base+0x144>
   183b8:	ldr	x2, [x2, #32]
   183bc:	add	x2, x2, #0x1
   183c0:	ldr	x3, [x3, #32]
   183c4:	add	x2, x2, x3
   183c8:	add	x3, x2, #0x1
   183cc:	str	x2, [x0, #32]
   183d0:	mov	x0, #0x0                   	// #0
   183d4:	cbz	x4, 183dc <set_program_name@@Base+0x134>
   183d8:	ldr	x0, [x4, #32]
   183dc:	add	x0, x0, x3
   183e0:	str	x0, [x1, #32]
   183e4:	mov	x0, x1
   183e8:	ret
   183ec:	mov	x2, #0x1                   	// #1
   183f0:	b	183c0 <set_program_name@@Base+0x118>
   183f4:	cbz	x2, 18408 <set_program_name@@Base+0x160>
   183f8:	ldr	x3, [x2, #32]
   183fc:	add	x2, x3, #0x1
   18400:	add	x3, x3, #0x2
   18404:	b	183cc <set_program_name@@Base+0x124>
   18408:	mov	x3, #0x2                   	// #2
   1840c:	mov	x2, #0x1                   	// #1
   18410:	b	183cc <set_program_name@@Base+0x124>
   18414:	nop
   18418:	ldp	x4, x3, [x0]
   1841c:	str	x3, [x1]
   18420:	ldp	x5, x6, [x1, #8]
   18424:	stp	x1, x6, [x0, #8]
   18428:	mov	x2, #0x1                   	// #1
   1842c:	str	x0, [x1, #16]
   18430:	cbz	x3, 18440 <set_program_name@@Base+0x198>
   18434:	ldr	x2, [x3, #32]
   18438:	str	x1, [x3, #16]
   1843c:	add	x2, x2, #0x1
   18440:	cbz	x5, 1844c <set_program_name@@Base+0x1a4>
   18444:	ldr	x3, [x5, #32]
   18448:	add	x2, x2, x3
   1844c:	str	x2, [x1, #32]
   18450:	mov	x1, #0x1                   	// #1
   18454:	cbz	x4, 18460 <set_program_name@@Base+0x1b8>
   18458:	ldr	x1, [x4, #32]
   1845c:	add	x1, x1, #0x1
   18460:	add	x2, x1, x2
   18464:	str	x2, [x0, #32]
   18468:	ret
   1846c:	nop
   18470:	ldr	x0, [x0, #40]
   18474:	cbz	x0, 18480 <set_program_name@@Base+0x1d8>
   18478:	ldr	x0, [x0, #32]
   1847c:	ret
   18480:	mov	x0, #0x0                   	// #0
   18484:	ret
   18488:	ldr	x0, [x1, #40]
   1848c:	ret
   18490:	mov	w0, #0x0                   	// #0
   18494:	str	x2, [x1, #40]
   18498:	ret
   1849c:	nop
   184a0:	ldr	x1, [x0, #40]
   184a4:	mov	x2, #0x0                   	// #0
   184a8:	ldr	x3, [x0]
   184ac:	cbz	x1, 184bc <set_program_name@@Base+0x214>
   184b0:	mov	x2, x1
   184b4:	ldr	x1, [x1]
   184b8:	cbnz	x1, 184b0 <set_program_name@@Base+0x208>
   184bc:	stp	x3, x0, [x8]
   184c0:	stp	x2, xzr, [x8, #24]
   184c4:	ret
   184c8:	mov	x4, x0
   184cc:	ldp	x3, x0, [x0, #24]
   184d0:	cmp	x3, x0
   184d4:	b.eq	1852c <set_program_name@@Base+0x284>  // b.none
   184d8:	ldr	x0, [x3, #40]
   184dc:	str	x0, [x1]
   184e0:	cbz	x2, 184e8 <set_program_name@@Base+0x240>
   184e4:	str	x3, [x2]
   184e8:	ldr	x1, [x3, #8]
   184ec:	cbz	x1, 18514 <set_program_name@@Base+0x26c>
   184f0:	mov	x3, x1
   184f4:	ldr	x1, [x1]
   184f8:	cbnz	x1, 184f0 <set_program_name@@Base+0x248>
   184fc:	mov	w0, #0x1                   	// #1
   18500:	str	x3, [x4, #24]
   18504:	ret
   18508:	ldr	x1, [x3, #8]
   1850c:	cmp	x1, x0
   18510:	b.ne	184fc <set_program_name@@Base+0x254>  // b.any
   18514:	mov	x0, x3
   18518:	ldr	x3, [x3, #16]
   1851c:	cbnz	x3, 18508 <set_program_name@@Base+0x260>
   18520:	mov	w0, #0x1                   	// #1
   18524:	str	x3, [x4, #24]
   18528:	b	18504 <set_program_name@@Base+0x25c>
   1852c:	mov	w0, #0x0                   	// #0
   18530:	ret
   18534:	nop
   18538:	ret
   1853c:	nop
   18540:	stp	x29, x30, [sp, #-64]!
   18544:	mov	x29, sp
   18548:	str	x23, [sp, #48]
   1854c:	ldr	x23, [x0]
   18550:	stp	x19, x20, [sp, #16]
   18554:	mov	x19, x0
   18558:	stp	x21, x22, [sp, #32]
   1855c:	mov	x20, x1
   18560:	mov	w21, #0x0                   	// #0
   18564:	cbz	x23, 18578 <set_program_name@@Base+0x2d0>
   18568:	mov	x1, x0
   1856c:	mov	x0, x23
   18570:	bl	18540 <set_program_name@@Base+0x298>
   18574:	mov	w21, w0
   18578:	ldr	x22, [x19, #8]
   1857c:	mov	w0, #0x0                   	// #0
   18580:	cbz	x22, 18590 <set_program_name@@Base+0x2e8>
   18584:	mov	x1, x19
   18588:	mov	x0, x22
   1858c:	bl	18540 <set_program_name@@Base+0x298>
   18590:	ldr	x1, [x19, #16]
   18594:	cmp	x1, x20
   18598:	b.ne	18604 <set_program_name@@Base+0x35c>  // b.any
   1859c:	mov	x2, #0x1                   	// #1
   185a0:	ldr	x1, [x19, #32]
   185a4:	cbz	x23, 185b0 <set_program_name@@Base+0x308>
   185a8:	ldr	x2, [x23, #32]
   185ac:	add	x2, x2, #0x1
   185b0:	cbz	x22, 185bc <set_program_name@@Base+0x314>
   185b4:	ldr	x3, [x22, #32]
   185b8:	add	x2, x2, x3
   185bc:	cmp	x1, x2
   185c0:	b.ne	18604 <set_program_name@@Base+0x35c>  // b.any
   185c4:	ldr	w2, [x19, #24]
   185c8:	cmp	w2, #0x1
   185cc:	b.hi	18604 <set_program_name@@Base+0x35c>  // b.pmore
   185d0:	cmp	x20, #0x0
   185d4:	and	w1, w2, #0x1
   185d8:	csel	w1, w1, wzr, eq  // eq = none
   185dc:	cbnz	w1, 18604 <set_program_name@@Base+0x35c>
   185e0:	cmp	w21, w0
   185e4:	b.ne	18604 <set_program_name@@Base+0x35c>  // b.any
   185e8:	eor	w2, w2, #0x1
   185ec:	add	w0, w2, w21
   185f0:	ldp	x19, x20, [sp, #16]
   185f4:	ldp	x21, x22, [sp, #32]
   185f8:	ldr	x23, [sp, #48]
   185fc:	ldp	x29, x30, [sp], #64
   18600:	ret
   18604:	bl	a900 <abort@plt>
   18608:	stp	x29, x30, [sp, #-80]!
   1860c:	cmp	x2, x3
   18610:	mov	x29, sp
   18614:	stp	x19, x20, [sp, #16]
   18618:	stp	x21, x22, [sp, #32]
   1861c:	b.hi	1874c <set_program_name@@Base+0x4a4>  // b.pmore
   18620:	ldr	x20, [x0, #40]
   18624:	mov	x22, x3
   18628:	cbz	x20, 18748 <set_program_name@@Base+0x4a0>
   1862c:	ldr	x0, [x20, #32]
   18630:	stp	x23, x24, [sp, #48]
   18634:	mov	x21, x2
   18638:	str	x25, [sp, #64]
   1863c:	mov	x23, x1
   18640:	mov	x24, x4
   18644:	cmp	x3, x0
   18648:	mov	x25, #0x0                   	// #0
   1864c:	b.hi	18754 <set_program_name@@Base+0x4ac>  // b.pmore
   18650:	ldr	x0, [x20]
   18654:	mov	x19, #0x0                   	// #0
   18658:	cbz	x0, 18660 <set_program_name@@Base+0x3b8>
   1865c:	ldr	x19, [x0, #32]
   18660:	cmp	x19, x21
   18664:	b.cs	186a8 <set_program_name@@Base+0x400>  // b.hs, b.nlast
   18668:	sub	x21, x21, #0x1
   1866c:	sub	x22, x22, #0x1
   18670:	add	x25, x25, #0x1
   18674:	sub	x21, x21, x19
   18678:	ldr	x20, [x20, #8]
   1867c:	sub	x22, x22, x19
   18680:	add	x25, x19, x25
   18684:	cbnz	x20, 18650 <set_program_name@@Base+0x3a8>
   18688:	ldp	x23, x24, [sp, #48]
   1868c:	ldr	x25, [sp, #64]
   18690:	mov	x22, #0xffffffffffffffff    	// #-1
   18694:	mov	x0, x22
   18698:	ldp	x19, x20, [sp, #16]
   1869c:	ldp	x21, x22, [sp, #32]
   186a0:	ldp	x29, x30, [sp], #80
   186a4:	ret
   186a8:	cmp	x19, x22
   186ac:	b.cs	1871c <set_program_name@@Base+0x474>  // b.hs, b.nlast
   186b0:	ldr	x0, [x20, #40]
   186b4:	mov	x1, x24
   186b8:	blr	x23
   186bc:	cmp	w0, #0x0
   186c0:	b.lt	18728 <set_program_name@@Base+0x480>  // b.tstop
   186c4:	ldr	x20, [x20]
   186c8:	b.ne	18684 <set_program_name@@Base+0x3dc>  // b.any
   186cc:	cbz	x20, 1878c <set_program_name@@Base+0x4e4>
   186d0:	ldr	x22, [x20, #32]
   186d4:	add	x22, x25, x22
   186d8:	ldr	x0, [x20]
   186dc:	mov	x19, #0x0                   	// #0
   186e0:	cbz	x0, 186e8 <set_program_name@@Base+0x440>
   186e4:	ldr	x19, [x0, #32]
   186e8:	cmp	x19, x21
   186ec:	b.cs	18758 <set_program_name@@Base+0x4b0>  // b.hs, b.nlast
   186f0:	sub	x21, x21, #0x1
   186f4:	ldr	x20, [x20, #8]
   186f8:	sub	x21, x21, x19
   186fc:	cbnz	x20, 186d8 <set_program_name@@Base+0x430>
   18700:	mov	x0, x22
   18704:	ldp	x19, x20, [sp, #16]
   18708:	ldp	x21, x22, [sp, #32]
   1870c:	ldp	x23, x24, [sp, #48]
   18710:	ldr	x25, [sp, #64]
   18714:	ldp	x29, x30, [sp], #80
   18718:	ret
   1871c:	mov	x20, x0
   18720:	cbnz	x20, 18650 <set_program_name@@Base+0x3a8>
   18724:	b	18688 <set_program_name@@Base+0x3e0>
   18728:	ldr	x20, [x20, #8]
   1872c:	sub	x22, x22, #0x1
   18730:	add	x25, x25, #0x1
   18734:	sub	x22, x22, x19
   18738:	add	x25, x19, x25
   1873c:	mov	x21, #0x0                   	// #0
   18740:	cbnz	x20, 18650 <set_program_name@@Base+0x3a8>
   18744:	b	18688 <set_program_name@@Base+0x3e0>
   18748:	cbz	x3, 18690 <set_program_name@@Base+0x3e8>
   1874c:	stp	x23, x24, [sp, #48]
   18750:	str	x25, [sp, #64]
   18754:	bl	a900 <abort@plt>
   18758:	ldr	x0, [x20, #40]
   1875c:	mov	x1, x24
   18760:	blr	x23
   18764:	cmp	w0, #0x0
   18768:	b.lt	1877c <set_program_name@@Base+0x4d4>  // b.tstop
   1876c:	b.ne	18754 <set_program_name@@Base+0x4ac>  // b.any
   18770:	add	x22, x19, x25
   18774:	ldr	x20, [x20]
   18778:	b	186fc <set_program_name@@Base+0x454>
   1877c:	add	x25, x25, #0x1
   18780:	add	x25, x19, x25
   18784:	ldr	x20, [x20, #8]
   18788:	b	186fc <set_program_name@@Base+0x454>
   1878c:	mov	x22, x25
   18790:	b	18700 <set_program_name@@Base+0x458>
   18794:	nop
   18798:	stp	x29, x30, [sp, #-64]!
   1879c:	mov	x29, sp
   187a0:	stp	x19, x20, [sp, #16]
   187a4:	ldr	x19, [x0, #40]
   187a8:	cbz	x19, 187e4 <set_program_name@@Base+0x53c>
   187ac:	stp	x21, x22, [sp, #32]
   187b0:	mov	x21, x1
   187b4:	mov	x22, x2
   187b8:	mov	x20, #0x0                   	// #0
   187bc:	nop
   187c0:	ldr	x0, [x19, #40]
   187c4:	mov	x1, x22
   187c8:	blr	x21
   187cc:	cmp	w0, #0x0
   187d0:	b.lt	187f8 <set_program_name@@Base+0x550>  // b.tstop
   187d4:	ldr	x19, [x19]
   187d8:	b.eq	18818 <set_program_name@@Base+0x570>  // b.none
   187dc:	cbnz	x19, 187c0 <set_program_name@@Base+0x518>
   187e0:	ldp	x21, x22, [sp, #32]
   187e4:	mov	x20, #0xffffffffffffffff    	// #-1
   187e8:	mov	x0, x20
   187ec:	ldp	x19, x20, [sp, #16]
   187f0:	ldp	x29, x30, [sp], #64
   187f4:	ret
   187f8:	ldr	x0, [x19]
   187fc:	cbz	x0, 18808 <set_program_name@@Base+0x560>
   18800:	ldr	x0, [x0, #32]
   18804:	add	x20, x20, x0
   18808:	ldr	x19, [x19, #8]
   1880c:	add	x20, x20, #0x1
   18810:	cbnz	x19, 187c0 <set_program_name@@Base+0x518>
   18814:	b	187e0 <set_program_name@@Base+0x538>
   18818:	cbz	x19, 1888c <set_program_name@@Base+0x5e4>
   1881c:	str	x23, [sp, #48]
   18820:	ldr	x0, [x19, #32]
   18824:	add	x23, x20, x0
   18828:	ldr	x0, [x19, #40]
   1882c:	mov	x1, x22
   18830:	blr	x21
   18834:	cmp	w0, #0x0
   18838:	b.lt	18860 <set_program_name@@Base+0x5b8>  // b.tstop
   1883c:	b.ne	188a0 <set_program_name@@Base+0x5f8>  // b.any
   18840:	ldr	x19, [x19]
   18844:	cbnz	x19, 18820 <set_program_name@@Base+0x578>
   18848:	mov	x0, x20
   1884c:	ldp	x19, x20, [sp, #16]
   18850:	ldp	x21, x22, [sp, #32]
   18854:	ldr	x23, [sp, #48]
   18858:	ldp	x29, x30, [sp], #64
   1885c:	ret
   18860:	ldr	x0, [x19]
   18864:	cbz	x0, 18870 <set_program_name@@Base+0x5c8>
   18868:	ldr	x0, [x0, #32]
   1886c:	add	x20, x20, x0
   18870:	ldr	x19, [x19, #8]
   18874:	add	x20, x20, #0x1
   18878:	cbnz	x19, 18828 <set_program_name@@Base+0x580>
   1887c:	mov	x20, x23
   18880:	ldp	x21, x22, [sp, #32]
   18884:	ldr	x23, [sp, #48]
   18888:	b	187e8 <set_program_name@@Base+0x540>
   1888c:	mov	x0, x20
   18890:	ldp	x19, x20, [sp, #16]
   18894:	ldp	x21, x22, [sp, #32]
   18898:	ldp	x29, x30, [sp], #64
   1889c:	ret
   188a0:	bl	a900 <abort@plt>
   188a4:	nop
   188a8:	stp	x29, x30, [sp, #-64]!
   188ac:	cmp	x2, x3
   188b0:	mov	x29, sp
   188b4:	stp	x19, x20, [sp, #16]
   188b8:	stp	x21, x22, [sp, #32]
   188bc:	b.hi	189f0 <set_program_name@@Base+0x748>  // b.pmore
   188c0:	ldr	x20, [x0, #40]
   188c4:	mov	x22, x3
   188c8:	cbz	x20, 189ec <set_program_name@@Base+0x744>
   188cc:	ldr	x0, [x20, #32]
   188d0:	stp	x23, x24, [sp, #48]
   188d4:	mov	x21, x2
   188d8:	mov	x23, x1
   188dc:	mov	x24, x4
   188e0:	cmp	x3, x0
   188e4:	b.hi	189f4 <set_program_name@@Base+0x74c>  // b.pmore
   188e8:	ldr	x0, [x20]
   188ec:	mov	x19, #0x0                   	// #0
   188f0:	cbz	x0, 188f8 <set_program_name@@Base+0x650>
   188f4:	ldr	x19, [x0, #32]
   188f8:	cmp	x19, x21
   188fc:	b.cs	18934 <set_program_name@@Base+0x68c>  // b.hs, b.nlast
   18900:	ldr	x20, [x20, #8]
   18904:	sub	x21, x21, #0x1
   18908:	sub	x22, x22, #0x1
   1890c:	sub	x21, x21, x19
   18910:	sub	x22, x22, x19
   18914:	cbnz	x20, 188e8 <set_program_name@@Base+0x640>
   18918:	ldp	x23, x24, [sp, #48]
   1891c:	mov	x20, #0x0                   	// #0
   18920:	mov	x0, x20
   18924:	ldp	x19, x20, [sp, #16]
   18928:	ldp	x21, x22, [sp, #32]
   1892c:	ldp	x29, x30, [sp], #64
   18930:	ret
   18934:	cmp	x19, x22
   18938:	b.cs	189c8 <set_program_name@@Base+0x720>  // b.hs, b.nlast
   1893c:	ldr	x0, [x20, #40]
   18940:	mov	x1, x24
   18944:	blr	x23
   18948:	cmp	w0, #0x0
   1894c:	b.lt	189d4 <set_program_name@@Base+0x72c>  // b.tstop
   18950:	ldr	x19, [x20]
   18954:	b.eq	18984 <set_program_name@@Base+0x6dc>  // b.none
   18958:	mov	x20, x19
   1895c:	cbnz	x20, 188e8 <set_program_name@@Base+0x640>
   18960:	b	18918 <set_program_name@@Base+0x670>
   18964:	ldr	x0, [x19, #40]
   18968:	mov	x1, x24
   1896c:	blr	x23
   18970:	cmp	w0, #0x0
   18974:	b.lt	189f8 <set_program_name@@Base+0x750>  // b.tstop
   18978:	b.ne	189f4 <set_program_name@@Base+0x74c>  // b.any
   1897c:	mov	x20, x19
   18980:	ldr	x19, [x19]
   18984:	cbz	x19, 189b0 <set_program_name@@Base+0x708>
   18988:	ldr	x1, [x19]
   1898c:	mov	x0, #0x0                   	// #0
   18990:	cbz	x1, 18998 <set_program_name@@Base+0x6f0>
   18994:	ldr	x0, [x1, #32]
   18998:	cmp	x0, x21
   1899c:	b.cs	18964 <set_program_name@@Base+0x6bc>  // b.hs, b.nlast
   189a0:	ldr	x19, [x19, #8]
   189a4:	sub	x21, x21, #0x1
   189a8:	sub	x21, x21, x0
   189ac:	cbnz	x19, 18988 <set_program_name@@Base+0x6e0>
   189b0:	mov	x0, x20
   189b4:	ldp	x19, x20, [sp, #16]
   189b8:	ldp	x21, x22, [sp, #32]
   189bc:	ldp	x23, x24, [sp, #48]
   189c0:	ldp	x29, x30, [sp], #64
   189c4:	ret
   189c8:	mov	x20, x0
   189cc:	cbnz	x20, 188e8 <set_program_name@@Base+0x640>
   189d0:	b	18918 <set_program_name@@Base+0x670>
   189d4:	ldr	x20, [x20, #8]
   189d8:	sub	x22, x22, #0x1
   189dc:	sub	x22, x22, x19
   189e0:	mov	x21, #0x0                   	// #0
   189e4:	cbnz	x20, 188e8 <set_program_name@@Base+0x640>
   189e8:	b	18918 <set_program_name@@Base+0x670>
   189ec:	cbz	x3, 1891c <set_program_name@@Base+0x674>
   189f0:	stp	x23, x24, [sp, #48]
   189f4:	bl	a900 <abort@plt>
   189f8:	mov	x21, #0x0                   	// #0
   189fc:	ldr	x19, [x19, #8]
   18a00:	b	18984 <set_program_name@@Base+0x6dc>
   18a04:	nop
   18a08:	stp	x29, x30, [sp, #-48]!
   18a0c:	mov	x29, sp
   18a10:	stp	x19, x20, [sp, #16]
   18a14:	ldr	x19, [x0, #40]
   18a18:	cbz	x19, 18a50 <set_program_name@@Base+0x7a8>
   18a1c:	stp	x21, x22, [sp, #32]
   18a20:	mov	x21, x1
   18a24:	mov	x22, x2
   18a28:	ldr	x0, [x19, #40]
   18a2c:	mov	x1, x22
   18a30:	blr	x21
   18a34:	cmp	w0, #0x0
   18a38:	b.lt	18aa4 <set_program_name@@Base+0x7fc>  // b.tstop
   18a3c:	ldr	x20, [x19]
   18a40:	b.eq	18a68 <set_program_name@@Base+0x7c0>  // b.none
   18a44:	mov	x19, x20
   18a48:	cbnz	x19, 18a28 <set_program_name@@Base+0x780>
   18a4c:	ldp	x21, x22, [sp, #32]
   18a50:	mov	x19, #0x0                   	// #0
   18a54:	mov	x0, x19
   18a58:	ldp	x19, x20, [sp, #16]
   18a5c:	ldp	x29, x30, [sp], #48
   18a60:	ret
   18a64:	ldr	x20, [x20, #8]
   18a68:	cbz	x20, 18a90 <set_program_name@@Base+0x7e8>
   18a6c:	ldr	x0, [x20, #40]
   18a70:	mov	x1, x22
   18a74:	blr	x21
   18a78:	cmp	w0, #0x0
   18a7c:	b.lt	18a64 <set_program_name@@Base+0x7bc>  // b.tstop
   18a80:	b.ne	18ab0 <set_program_name@@Base+0x808>  // b.any
   18a84:	mov	x19, x20
   18a88:	ldr	x20, [x20]
   18a8c:	cbnz	x20, 18a6c <set_program_name@@Base+0x7c4>
   18a90:	mov	x0, x19
   18a94:	ldp	x19, x20, [sp, #16]
   18a98:	ldp	x21, x22, [sp, #32]
   18a9c:	ldp	x29, x30, [sp], #48
   18aa0:	ret
   18aa4:	ldr	x19, [x19, #8]
   18aa8:	cbnz	x19, 18a28 <set_program_name@@Base+0x780>
   18aac:	b	18a4c <set_program_name@@Base+0x7a4>
   18ab0:	bl	a900 <abort@plt>
   18ab4:	nop
   18ab8:	ldr	x3, [x0, #40]
   18abc:	cmp	x1, x2
   18ac0:	cset	w4, hi  // hi = pmore
   18ac4:	cbz	x3, 18b58 <set_program_name@@Base+0x8b0>
   18ac8:	ldr	x7, [x3, #32]
   18acc:	cmp	w4, #0x0
   18ad0:	ccmp	x7, x2, #0x0, eq  // eq = none
   18ad4:	b.cc	18b88 <set_program_name@@Base+0x8e0>  // b.lo, b.ul, b.last
   18ad8:	cmp	x7, x1
   18adc:	mov	x4, x3
   18ae0:	ldr	x9, [x0]
   18ae4:	b.ls	18b18 <set_program_name@@Base+0x870>  // b.plast
   18ae8:	ldr	x5, [x4]
   18aec:	cbz	x5, 18b00 <set_program_name@@Base+0x858>
   18af0:	ldr	x6, [x5, #32]
   18af4:	cmp	x6, x1
   18af8:	b.hi	18b10 <set_program_name@@Base+0x868>  // b.pmore
   18afc:	sub	x1, x1, x6
   18b00:	cbz	x1, 18b1c <set_program_name@@Base+0x874>
   18b04:	sub	x1, x1, #0x1
   18b08:	ldr	x4, [x4, #8]
   18b0c:	b	18ae8 <set_program_name@@Base+0x840>
   18b10:	mov	x4, x5
   18b14:	b	18ae8 <set_program_name@@Base+0x840>
   18b18:	mov	x4, #0x0                   	// #0
   18b1c:	cmp	x7, x2
   18b20:	b.ls	18b78 <set_program_name@@Base+0x8d0>  // b.plast
   18b24:	nop
   18b28:	ldr	x1, [x3]
   18b2c:	cbz	x1, 18b40 <set_program_name@@Base+0x898>
   18b30:	ldr	x5, [x1, #32]
   18b34:	cmp	x5, x2
   18b38:	b.hi	18b50 <set_program_name@@Base+0x8a8>  // b.pmore
   18b3c:	sub	x2, x2, x5
   18b40:	cbz	x2, 18b6c <set_program_name@@Base+0x8c4>
   18b44:	sub	x2, x2, #0x1
   18b48:	ldr	x3, [x3, #8]
   18b4c:	b	18b28 <set_program_name@@Base+0x880>
   18b50:	mov	x3, x1
   18b54:	b	18b28 <set_program_name@@Base+0x880>
   18b58:	cmp	x2, #0x0
   18b5c:	ccmp	w4, #0x0, #0x0, eq  // eq = none
   18b60:	b.ne	18b88 <set_program_name@@Base+0x8e0>  // b.any
   18b64:	ldr	x9, [x0]
   18b68:	mov	x4, #0x0                   	// #0
   18b6c:	stp	x9, x0, [x8]
   18b70:	stp	x4, x3, [x8, #24]
   18b74:	ret
   18b78:	mov	x3, #0x0                   	// #0
   18b7c:	stp	x9, x0, [x8]
   18b80:	stp	x4, x3, [x8, #24]
   18b84:	ret
   18b88:	stp	x29, x30, [sp, #-16]!
   18b8c:	mov	x29, sp
   18b90:	bl	a900 <abort@plt>
   18b94:	nop
   18b98:	stp	x29, x30, [sp, #-16]!
   18b9c:	add	x12, x0, #0x28
   18ba0:	mov	x7, x2
   18ba4:	mov	x29, sp
   18ba8:	mov	w11, #0x1                   	// #1
   18bac:	b	18c08 <set_program_name@@Base+0x960>
   18bb0:	cmp	x1, x10
   18bb4:	b.ne	18dd0 <set_program_name@@Base+0xb28>  // b.any
   18bb8:	ldr	w10, [x8, #24]
   18bbc:	cmp	w10, #0x1
   18bc0:	b.eq	18c94 <set_program_name@@Base+0x9ec>  // b.none
   18bc4:	ldr	x1, [x8]
   18bc8:	cbz	x1, 18bd8 <set_program_name@@Base+0x930>
   18bcc:	ldr	w1, [x1, #24]
   18bd0:	cmp	w1, #0x1
   18bd4:	b.eq	18cf0 <set_program_name@@Base+0xa48>  // b.none
   18bd8:	ldr	x1, [x8, #8]
   18bdc:	cbz	x1, 18bec <set_program_name@@Base+0x944>
   18be0:	ldr	w6, [x1, #24]
   18be4:	cmp	w6, #0x1
   18be8:	b.eq	18d1c <set_program_name@@Base+0xa74>  // b.none
   18bec:	ldr	w1, [x7, #24]
   18bf0:	cbnz	w1, 18cdc <set_program_name@@Base+0xa34>
   18bf4:	ldr	x2, [x7, #16]
   18bf8:	str	w11, [x8, #24]
   18bfc:	mov	x1, x7
   18c00:	cbz	x2, 18c8c <set_program_name@@Base+0x9e4>
   18c04:	mov	x7, x2
   18c08:	ldr	x2, [x7, #16]
   18c0c:	mov	x9, x12
   18c10:	cbz	x2, 18c34 <set_program_name@@Base+0x98c>
   18c14:	ldr	x3, [x2]
   18c18:	mov	x9, x2
   18c1c:	cmp	x3, x7
   18c20:	b.eq	18c34 <set_program_name@@Base+0x98c>  // b.none
   18c24:	ldr	x3, [x2, #8]
   18c28:	cmp	x3, x7
   18c2c:	b.ne	18dd0 <set_program_name@@Base+0xb28>  // b.any
   18c30:	add	x9, x2, #0x8
   18c34:	ldp	x8, x10, [x7]
   18c38:	cmp	x8, x1
   18c3c:	b.ne	18bb0 <set_program_name@@Base+0x908>  // b.any
   18c40:	ldr	w6, [x10, #24]
   18c44:	cmp	w6, #0x1
   18c48:	b.eq	18cb8 <set_program_name@@Base+0xa10>  // b.none
   18c4c:	ldr	x1, [x10, #8]
   18c50:	cbz	x1, 18c60 <set_program_name@@Base+0x9b8>
   18c54:	ldr	w0, [x1, #24]
   18c58:	cmp	w0, #0x1
   18c5c:	b.eq	18d6c <set_program_name@@Base+0xac4>  // b.none
   18c60:	ldr	x0, [x10]
   18c64:	cbz	x0, 18c74 <set_program_name@@Base+0x9cc>
   18c68:	ldr	w8, [x0, #24]
   18c6c:	cmp	w8, #0x1
   18c70:	b.eq	18d94 <set_program_name@@Base+0xaec>  // b.none
   18c74:	ldr	w0, [x7, #24]
   18c78:	cbnz	w0, 18d5c <set_program_name@@Base+0xab4>
   18c7c:	ldr	x2, [x7, #16]
   18c80:	str	w11, [x10, #24]
   18c84:	mov	x1, x7
   18c88:	cbnz	x2, 18c04 <set_program_name@@Base+0x95c>
   18c8c:	ldp	x29, x30, [sp], #16
   18c90:	ret
   18c94:	mov	x0, x8
   18c98:	mov	x1, x7
   18c9c:	bl	18418 <set_program_name@@Base+0x170>
   18ca0:	str	x0, [x9]
   18ca4:	str	w10, [x7, #24]
   18ca8:	add	x9, x8, #0x8
   18cac:	str	wzr, [x8, #24]
   18cb0:	ldr	x8, [x7]
   18cb4:	b	18bc4 <set_program_name@@Base+0x91c>
   18cb8:	mov	x1, x10
   18cbc:	mov	x0, x7
   18cc0:	bl	18390 <set_program_name@@Base+0xe8>
   18cc4:	str	x0, [x9]
   18cc8:	str	w6, [x7, #24]
   18ccc:	mov	x9, x10
   18cd0:	str	wzr, [x10, #24]
   18cd4:	ldr	x10, [x7, #8]
   18cd8:	b	18c4c <set_program_name@@Base+0x9a4>
   18cdc:	str	wzr, [x7, #24]
   18ce0:	mov	w0, #0x1                   	// #1
   18ce4:	str	w0, [x8, #24]
   18ce8:	ldp	x29, x30, [sp], #16
   18cec:	ret
   18cf0:	mov	x1, x7
   18cf4:	mov	x0, x8
   18cf8:	bl	18418 <set_program_name@@Base+0x170>
   18cfc:	ldr	w1, [x7, #24]
   18d00:	str	x0, [x9]
   18d04:	str	w1, [x8, #24]
   18d08:	ldr	x0, [x8]
   18d0c:	str	wzr, [x7, #24]
   18d10:	str	wzr, [x0, #24]
   18d14:	ldp	x29, x30, [sp], #16
   18d18:	ret
   18d1c:	mov	x0, x8
   18d20:	bl	18390 <set_program_name@@Base+0xe8>
   18d24:	str	x0, [x7]
   18d28:	mov	x10, x0
   18d2c:	str	w6, [x8, #24]
   18d30:	mov	x1, x7
   18d34:	str	wzr, [x0, #24]
   18d38:	bl	18418 <set_program_name@@Base+0x170>
   18d3c:	ldr	w1, [x7, #24]
   18d40:	str	x0, [x9]
   18d44:	str	w1, [x10, #24]
   18d48:	ldr	x0, [x10]
   18d4c:	str	wzr, [x7, #24]
   18d50:	str	wzr, [x0, #24]
   18d54:	ldp	x29, x30, [sp], #16
   18d58:	ret
   18d5c:	str	wzr, [x7, #24]
   18d60:	mov	w0, #0x1                   	// #1
   18d64:	str	w0, [x10, #24]
   18d68:	b	18c8c <set_program_name@@Base+0x9e4>
   18d6c:	mov	x1, x10
   18d70:	mov	x0, x7
   18d74:	bl	18390 <set_program_name@@Base+0xe8>
   18d78:	ldr	w1, [x7, #24]
   18d7c:	str	x0, [x9]
   18d80:	str	w1, [x10, #24]
   18d84:	ldr	x0, [x10, #8]
   18d88:	str	wzr, [x7, #24]
   18d8c:	str	wzr, [x0, #24]
   18d90:	b	18c8c <set_program_name@@Base+0x9e4>
   18d94:	mov	x1, x10
   18d98:	bl	18418 <set_program_name@@Base+0x170>
   18d9c:	mov	x1, x0
   18da0:	str	x1, [x7, #8]
   18da4:	str	w8, [x10, #24]
   18da8:	mov	x0, x7
   18dac:	str	wzr, [x1, #24]
   18db0:	bl	18390 <set_program_name@@Base+0xe8>
   18db4:	ldr	w2, [x7, #24]
   18db8:	str	x0, [x9]
   18dbc:	str	w2, [x1, #24]
   18dc0:	ldr	x0, [x1, #8]
   18dc4:	str	wzr, [x7, #24]
   18dc8:	str	wzr, [x0, #24]
   18dcc:	b	18c8c <set_program_name@@Base+0x9e4>
   18dd0:	bl	a900 <abort@plt>
   18dd4:	nop
   18dd8:	mov	x10, x1
   18ddc:	ldr	w1, [x2, #24]
   18de0:	mov	x7, x2
   18de4:	cbz	w1, 18f18 <set_program_name@@Base+0xc70>
   18de8:	stp	x29, x30, [sp, #-16]!
   18dec:	mov	x29, sp
   18df0:	b	18e20 <set_program_name@@Base+0xb78>
   18df4:	ldr	w4, [x2, #24]
   18df8:	cmp	w4, #0x1
   18dfc:	b.ne	18e44 <set_program_name@@Base+0xb9c>  // b.any
   18e00:	str	w4, [x10, #24]
   18e04:	str	wzr, [x2, #24]
   18e08:	str	wzr, [x7, #24]
   18e0c:	cbz	x3, 18eb8 <set_program_name@@Base+0xc10>
   18e10:	ldr	w1, [x3, #24]
   18e14:	mov	x7, x3
   18e18:	mov	x10, x8
   18e1c:	cbz	w1, 18ea8 <set_program_name@@Base+0xc00>
   18e20:	ldr	x8, [x7, #16]
   18e24:	ldp	x5, x2, [x8]
   18e28:	cmp	x5, x7
   18e2c:	b.eq	18e3c <set_program_name@@Base+0xb94>  // b.none
   18e30:	cmp	x7, x2
   18e34:	b.ne	18f24 <set_program_name@@Base+0xc7c>  // b.any
   18e38:	mov	x2, x5
   18e3c:	ldr	x3, [x8, #16]
   18e40:	cbnz	x2, 18df4 <set_program_name@@Base+0xb4c>
   18e44:	add	x9, x0, #0x28
   18e48:	cbz	x3, 18e6c <set_program_name@@Base+0xbc4>
   18e4c:	ldr	x0, [x3]
   18e50:	mov	x9, x3
   18e54:	cmp	x0, x8
   18e58:	b.eq	18e6c <set_program_name@@Base+0xbc4>  // b.none
   18e5c:	ldr	x0, [x3, #8]
   18e60:	cmp	x0, x8
   18e64:	b.ne	18f24 <set_program_name@@Base+0xc7c>  // b.any
   18e68:	add	x9, x3, #0x8
   18e6c:	cmp	x5, x7
   18e70:	b.eq	18ec4 <set_program_name@@Base+0xc1c>  // b.none
   18e74:	ldr	x0, [x7]
   18e78:	cmp	x0, x10
   18e7c:	b.eq	18ee0 <set_program_name@@Base+0xc38>  // b.none
   18e80:	mov	x1, x7
   18e84:	mov	x0, x8
   18e88:	bl	18390 <set_program_name@@Base+0xe8>
   18e8c:	str	x0, [x9]
   18e90:	mov	w0, #0x1                   	// #1
   18e94:	str	wzr, [x7, #24]
   18e98:	str	w0, [x8, #24]
   18e9c:	str	w0, [x10, #24]
   18ea0:	ldp	x29, x30, [sp], #16
   18ea4:	ret
   18ea8:	mov	w0, #0x1                   	// #1
   18eac:	str	w0, [x8, #24]
   18eb0:	ldp	x29, x30, [sp], #16
   18eb4:	ret
   18eb8:	str	wzr, [x8, #24]
   18ebc:	ldp	x29, x30, [sp], #16
   18ec0:	ret
   18ec4:	ldr	x0, [x7, #8]
   18ec8:	cmp	x0, x10
   18ecc:	b.eq	18efc <set_program_name@@Base+0xc54>  // b.none
   18ed0:	mov	x1, x8
   18ed4:	mov	x0, x7
   18ed8:	bl	18418 <set_program_name@@Base+0x170>
   18edc:	b	18e8c <set_program_name@@Base+0xbe4>
   18ee0:	mov	x0, x10
   18ee4:	mov	x1, x7
   18ee8:	bl	18418 <set_program_name@@Base+0x170>
   18eec:	mov	x10, x7
   18ef0:	mov	x7, x0
   18ef4:	str	x0, [x8, #8]
   18ef8:	b	18e80 <set_program_name@@Base+0xbd8>
   18efc:	mov	x1, x10
   18f00:	mov	x0, x7
   18f04:	bl	18390 <set_program_name@@Base+0xe8>
   18f08:	mov	x10, x7
   18f0c:	mov	x7, x0
   18f10:	str	x0, [x8]
   18f14:	b	18ed0 <set_program_name@@Base+0xc28>
   18f18:	mov	w0, #0x1                   	// #1
   18f1c:	str	w0, [x10, #24]
   18f20:	ret
   18f24:	bl	a900 <abort@plt>
   18f28:	sub	sp, sp, #0x7a0
   18f2c:	cmp	x1, x2
   18f30:	stp	x29, x30, [sp]
   18f34:	mov	x29, sp
   18f38:	stp	x19, x20, [sp, #16]
   18f3c:	stp	x21, x22, [sp, #32]
   18f40:	stp	x23, x24, [sp, #48]
   18f44:	stp	x25, x26, [sp, #64]
   18f48:	stp	x27, x28, [sp, #80]
   18f4c:	b.hi	190d8 <set_program_name@@Base+0xe30>  // b.pmore
   18f50:	mov	x20, x1
   18f54:	mov	x23, x2
   18f58:	ldr	x1, [x0, #40]
   18f5c:	mov	x27, x3
   18f60:	mov	x2, #0x0                   	// #0
   18f64:	cbz	x1, 18f6c <set_program_name@@Base+0xcc4>
   18f68:	ldr	x2, [x1, #32]
   18f6c:	cmp	x2, x23
   18f70:	b.cc	190d8 <set_program_name@@Base+0xe30>  // b.lo, b.ul, b.last
   18f74:	add	x21, sp, #0x60
   18f78:	ldr	x26, [x0, #8]
   18f7c:	cbz	x20, 18fec <set_program_name@@Base+0xd44>
   18f80:	mov	x19, x21
   18f84:	mov	x24, #0x0                   	// #0
   18f88:	cbz	x1, 18fbc <set_program_name@@Base+0xd14>
   18f8c:	ldr	x0, [x1, #32]
   18f90:	cmp	x0, x20
   18f94:	b.ls	18fbc <set_program_name@@Base+0xd14>  // b.plast
   18f98:	stp	x1, xzr, [x19]
   18f9c:	add	x19, x19, #0x10
   18fa0:	ldr	x1, [x1]
   18fa4:	b	18f88 <set_program_name@@Base+0xce0>
   18fa8:	mov	x22, x19
   18fac:	sub	x19, x19, #0x10
   18fb0:	ldr	x0, [x19, #8]
   18fb4:	cbz	x0, 19028 <set_program_name@@Base+0xd80>
   18fb8:	add	x20, x20, x0
   18fbc:	cmp	x19, x21
   18fc0:	b.ne	18fa8 <set_program_name@@Base+0xd00>  // b.any
   18fc4:	mov	x24, #0xffffffffffffffff    	// #-1
   18fc8:	mov	x0, x24
   18fcc:	ldp	x29, x30, [sp]
   18fd0:	ldp	x19, x20, [sp, #16]
   18fd4:	ldp	x21, x22, [sp, #32]
   18fd8:	ldp	x23, x24, [sp, #48]
   18fdc:	ldp	x25, x26, [sp, #64]
   18fe0:	ldp	x27, x28, [sp, #80]
   18fe4:	add	sp, sp, #0x7a0
   18fe8:	ret
   18fec:	mov	x19, x21
   18ff0:	mov	x25, #0x1                   	// #1
   18ff4:	nop
   18ff8:	cbz	x1, 1901c <set_program_name@@Base+0xd74>
   18ffc:	stp	x1, xzr, [x19]
   19000:	add	x19, x19, #0x10
   19004:	ldr	x1, [x1]
   19008:	b	18ff8 <set_program_name@@Base+0xd50>
   1900c:	ldur	x0, [x19, #-8]
   19010:	sub	x22, x19, #0x10
   19014:	cbz	x0, 19084 <set_program_name@@Base+0xddc>
   19018:	mov	x19, x22
   1901c:	cmp	x19, x21
   19020:	b.ne	1900c <set_program_name@@Base+0xd64>  // b.any
   19024:	b	18fc4 <set_program_name@@Base+0xd1c>
   19028:	ldr	x28, [x19]
   1902c:	mov	x25, #0x1                   	// #1
   19030:	ldr	x0, [x28]
   19034:	cbz	x0, 19040 <set_program_name@@Base+0xd98>
   19038:	ldr	x25, [x0, #32]
   1903c:	add	x25, x25, #0x1
   19040:	cmp	x25, x20
   19044:	b.ls	19064 <set_program_name@@Base+0xdbc>  // b.plast
   19048:	ldr	x1, [x28, #40]
   1904c:	cbz	x26, 190b8 <set_program_name@@Base+0xe10>
   19050:	mov	x0, x27
   19054:	blr	x26
   19058:	and	w0, w0, #0xff
   1905c:	cbnz	w0, 18fc8 <set_program_name@@Base+0xd20>
   19060:	mov	x20, x25
   19064:	add	x24, x24, #0x1
   19068:	cmp	x23, x24
   1906c:	b.ls	18fc4 <set_program_name@@Base+0xd1c>  // b.plast
   19070:	sub	x20, x20, x25
   19074:	str	x25, [x19, #8]
   19078:	mov	x19, x22
   1907c:	ldr	x1, [x28, #8]
   19080:	b	18f88 <set_program_name@@Base+0xce0>
   19084:	ldr	x24, [x22]
   19088:	ldr	x1, [x24, #40]
   1908c:	cbz	x26, 190c4 <set_program_name@@Base+0xe1c>
   19090:	mov	x0, x27
   19094:	blr	x26
   19098:	and	w0, w0, #0xff
   1909c:	cbnz	w0, 190d0 <set_program_name@@Base+0xe28>
   190a0:	add	x20, x20, #0x1
   190a4:	cmp	x23, x20
   190a8:	b.ls	18fc4 <set_program_name@@Base+0xd1c>  // b.plast
   190ac:	str	x25, [x22, #8]
   190b0:	ldr	x1, [x24, #8]
   190b4:	b	18ff8 <set_program_name@@Base+0xd50>
   190b8:	cmp	x1, x27
   190bc:	cset	w0, eq  // eq = none
   190c0:	b	1905c <set_program_name@@Base+0xdb4>
   190c4:	cmp	x1, x27
   190c8:	cset	w0, eq  // eq = none
   190cc:	b	1909c <set_program_name@@Base+0xdf4>
   190d0:	mov	x24, x20
   190d4:	b	18fc8 <set_program_name@@Base+0xd20>
   190d8:	bl	a900 <abort@plt>
   190dc:	nop
   190e0:	sub	sp, sp, #0x7a0
   190e4:	cmp	x1, x2
   190e8:	stp	x29, x30, [sp]
   190ec:	mov	x29, sp
   190f0:	stp	x19, x20, [sp, #16]
   190f4:	stp	x21, x22, [sp, #32]
   190f8:	stp	x23, x24, [sp, #48]
   190fc:	stp	x25, x26, [sp, #64]
   19100:	stp	x27, x28, [sp, #80]
   19104:	b.hi	19288 <set_program_name@@Base+0xfe0>  // b.pmore
   19108:	mov	x20, x1
   1910c:	mov	x23, x2
   19110:	ldr	x1, [x0, #40]
   19114:	mov	x27, x3
   19118:	mov	x2, #0x0                   	// #0
   1911c:	cbz	x1, 19124 <set_program_name@@Base+0xe7c>
   19120:	ldr	x2, [x1, #32]
   19124:	cmp	x2, x23
   19128:	b.cc	19288 <set_program_name@@Base+0xfe0>  // b.lo, b.ul, b.last
   1912c:	add	x21, sp, #0x60
   19130:	ldr	x26, [x0, #8]
   19134:	cbz	x20, 191a4 <set_program_name@@Base+0xefc>
   19138:	mov	x19, x21
   1913c:	mov	x28, #0x0                   	// #0
   19140:	cbz	x1, 19174 <set_program_name@@Base+0xecc>
   19144:	ldr	x0, [x1, #32]
   19148:	cmp	x0, x20
   1914c:	b.ls	19174 <set_program_name@@Base+0xecc>  // b.plast
   19150:	stp	x1, xzr, [x19]
   19154:	add	x19, x19, #0x10
   19158:	ldr	x1, [x1]
   1915c:	b	19140 <set_program_name@@Base+0xe98>
   19160:	mov	x22, x19
   19164:	sub	x19, x19, #0x10
   19168:	ldr	x0, [x19, #8]
   1916c:	cbz	x0, 191e0 <set_program_name@@Base+0xf38>
   19170:	add	x20, x20, x0
   19174:	cmp	x19, x21
   19178:	b.ne	19160 <set_program_name@@Base+0xeb8>  // b.any
   1917c:	mov	x24, #0x0                   	// #0
   19180:	mov	x0, x24
   19184:	ldp	x29, x30, [sp]
   19188:	ldp	x19, x20, [sp, #16]
   1918c:	ldp	x21, x22, [sp, #32]
   19190:	ldp	x23, x24, [sp, #48]
   19194:	ldp	x25, x26, [sp, #64]
   19198:	ldp	x27, x28, [sp, #80]
   1919c:	add	sp, sp, #0x7a0
   191a0:	ret
   191a4:	mov	x19, x21
   191a8:	mov	x25, #0x1                   	// #1
   191ac:	nop
   191b0:	cbz	x1, 191d4 <set_program_name@@Base+0xf2c>
   191b4:	stp	x1, xzr, [x19]
   191b8:	add	x19, x19, #0x10
   191bc:	ldr	x1, [x1]
   191c0:	b	191b0 <set_program_name@@Base+0xf08>
   191c4:	ldur	x0, [x19, #-8]
   191c8:	sub	x22, x19, #0x10
   191cc:	cbz	x0, 1923c <set_program_name@@Base+0xf94>
   191d0:	mov	x19, x22
   191d4:	cmp	x19, x21
   191d8:	b.ne	191c4 <set_program_name@@Base+0xf1c>  // b.any
   191dc:	b	1917c <set_program_name@@Base+0xed4>
   191e0:	ldr	x24, [x19]
   191e4:	mov	x25, #0x1                   	// #1
   191e8:	ldr	x0, [x24]
   191ec:	cbz	x0, 191f8 <set_program_name@@Base+0xf50>
   191f0:	ldr	x25, [x0, #32]
   191f4:	add	x25, x25, #0x1
   191f8:	cmp	x25, x20
   191fc:	b.ls	1921c <set_program_name@@Base+0xf74>  // b.plast
   19200:	ldr	x1, [x24, #40]
   19204:	cbz	x26, 19270 <set_program_name@@Base+0xfc8>
   19208:	mov	x0, x27
   1920c:	blr	x26
   19210:	and	w0, w0, #0xff
   19214:	cbnz	w0, 19180 <set_program_name@@Base+0xed8>
   19218:	mov	x20, x25
   1921c:	add	x28, x28, #0x1
   19220:	cmp	x23, x28
   19224:	b.ls	1917c <set_program_name@@Base+0xed4>  // b.plast
   19228:	sub	x20, x20, x25
   1922c:	str	x25, [x19, #8]
   19230:	mov	x19, x22
   19234:	ldr	x1, [x24, #8]
   19238:	b	19140 <set_program_name@@Base+0xe98>
   1923c:	ldr	x24, [x22]
   19240:	ldr	x1, [x24, #40]
   19244:	cbz	x26, 1927c <set_program_name@@Base+0xfd4>
   19248:	mov	x0, x27
   1924c:	blr	x26
   19250:	and	w0, w0, #0xff
   19254:	cbnz	w0, 19180 <set_program_name@@Base+0xed8>
   19258:	add	x20, x20, #0x1
   1925c:	cmp	x23, x20
   19260:	b.ls	1917c <set_program_name@@Base+0xed4>  // b.plast
   19264:	str	x25, [x22, #8]
   19268:	ldr	x1, [x24, #8]
   1926c:	b	191b0 <set_program_name@@Base+0xf08>
   19270:	cmp	x1, x27
   19274:	cset	w0, eq  // eq = none
   19278:	b	19214 <set_program_name@@Base+0xf6c>
   1927c:	cmp	x1, x27
   19280:	cset	w0, eq  // eq = none
   19284:	b	19254 <set_program_name@@Base+0xfac>
   19288:	bl	a900 <abort@plt>
   1928c:	nop
   19290:	ldr	x0, [x0, #40]
   19294:	cbz	x0, 192e0 <set_program_name@@Base+0x1038>
   19298:	ldr	x3, [x0, #32]
   1929c:	cmp	x3, x1
   192a0:	b.ls	192e0 <set_program_name@@Base+0x1038>  // b.plast
   192a4:	nop
   192a8:	ldr	x3, [x0]
   192ac:	cbz	x3, 192c0 <set_program_name@@Base+0x1018>
   192b0:	ldr	x4, [x3, #32]
   192b4:	cmp	x4, x1
   192b8:	b.hi	192d0 <set_program_name@@Base+0x1028>  // b.pmore
   192bc:	sub	x1, x1, x4
   192c0:	cbz	x1, 192d8 <set_program_name@@Base+0x1030>
   192c4:	sub	x1, x1, #0x1
   192c8:	ldr	x0, [x0, #8]
   192cc:	b	192a8 <set_program_name@@Base+0x1000>
   192d0:	mov	x0, x3
   192d4:	b	192a8 <set_program_name@@Base+0x1000>
   192d8:	str	x2, [x0, #40]
   192dc:	ret
   192e0:	stp	x29, x30, [sp, #-16]!
   192e4:	mov	x29, sp
   192e8:	bl	a900 <abort@plt>
   192ec:	nop
   192f0:	ldr	x0, [x0, #40]
   192f4:	cbz	x0, 19340 <set_program_name@@Base+0x1098>
   192f8:	ldr	x2, [x0, #32]
   192fc:	cmp	x2, x1
   19300:	b.ls	19340 <set_program_name@@Base+0x1098>  // b.plast
   19304:	nop
   19308:	ldr	x2, [x0]
   1930c:	cbz	x2, 19320 <set_program_name@@Base+0x1078>
   19310:	ldr	x3, [x2, #32]
   19314:	cmp	x3, x1
   19318:	b.hi	19330 <set_program_name@@Base+0x1088>  // b.pmore
   1931c:	sub	x1, x1, x3
   19320:	cbz	x1, 19338 <set_program_name@@Base+0x1090>
   19324:	sub	x1, x1, #0x1
   19328:	ldr	x0, [x0, #8]
   1932c:	b	19308 <set_program_name@@Base+0x1060>
   19330:	mov	x0, x2
   19334:	b	19308 <set_program_name@@Base+0x1060>
   19338:	ldr	x0, [x0, #40]
   1933c:	ret
   19340:	stp	x29, x30, [sp, #-16]!
   19344:	mov	x29, sp
   19348:	bl	a900 <abort@plt>
   1934c:	nop
   19350:	sub	sp, sp, #0x780
   19354:	stp	x29, x30, [sp]
   19358:	mov	x29, sp
   1935c:	ldr	x1, [x0, #40]
   19360:	stp	x21, x22, [sp, #32]
   19364:	add	x22, sp, #0x40
   19368:	mov	x21, x0
   1936c:	stp	x19, x20, [sp, #16]
   19370:	mov	x19, x22
   19374:	str	x23, [sp, #48]
   19378:	mov	x23, #0x1                   	// #1
   1937c:	cbz	x1, 19390 <set_program_name@@Base+0x10e8>
   19380:	stp	x1, xzr, [x19]
   19384:	add	x19, x19, #0x10
   19388:	ldr	x1, [x1]
   1938c:	cbnz	x1, 19380 <set_program_name@@Base+0x10d8>
   19390:	cmp	x19, x22
   19394:	b.ne	193bc <set_program_name@@Base+0x1114>  // b.any
   19398:	b	193dc <set_program_name@@Base+0x1134>
   1939c:	ldr	x1, [x21, #24]
   193a0:	cbz	x1, 193ac <set_program_name@@Base+0x1104>
   193a4:	ldr	x0, [x20, #40]
   193a8:	blr	x1
   193ac:	mov	x0, x20
   193b0:	bl	aa50 <free@plt>
   193b4:	cmp	x19, x22
   193b8:	b.eq	193dc <set_program_name@@Base+0x1134>  // b.none
   193bc:	mov	x0, x19
   193c0:	ldr	x20, [x19, #-16]!
   193c4:	ldr	x1, [x19, #8]
   193c8:	cbnz	x1, 1939c <set_program_name@@Base+0x10f4>
   193cc:	str	x23, [x19, #8]
   193d0:	mov	x19, x0
   193d4:	ldr	x1, [x20, #8]
   193d8:	b	1937c <set_program_name@@Base+0x10d4>
   193dc:	mov	x0, x21
   193e0:	ldp	x29, x30, [sp]
   193e4:	ldp	x19, x20, [sp, #16]
   193e8:	ldp	x21, x22, [sp, #32]
   193ec:	ldr	x23, [sp, #48]
   193f0:	add	sp, sp, #0x780
   193f4:	b	aa50 <free@plt>
   193f8:	stp	x29, x30, [sp, #-32]!
   193fc:	mov	x29, sp
   19400:	stp	x19, x20, [sp, #16]
   19404:	mov	x20, x0
   19408:	mov	x19, x1
   1940c:	ldp	x5, x0, [x1]
   19410:	ldr	x3, [x1, #16]
   19414:	cbz	x5, 19530 <set_program_name@@Base+0x1288>
   19418:	mov	x1, x5
   1941c:	cbz	x0, 194f8 <set_program_name@@Base+0x1250>
   19420:	mov	x2, x1
   19424:	ldr	x1, [x1, #8]
   19428:	cbnz	x1, 19420 <set_program_name@@Base+0x1178>
   1942c:	ldr	x7, [x2, #16]
   19430:	ldr	w8, [x2, #24]
   19434:	cmp	x19, x7
   19438:	ldr	x1, [x2]
   1943c:	b.eq	19450 <set_program_name@@Base+0x11a8>  // b.none
   19440:	cbz	x1, 19448 <set_program_name@@Base+0x11a0>
   19444:	str	x7, [x1, #16]
   19448:	str	x1, [x7, #8]
   1944c:	ldr	x0, [x19, #8]
   19450:	mov	x4, x7
   19454:	nop
   19458:	ldr	x6, [x4, #32]
   1945c:	sub	x6, x6, #0x1
   19460:	str	x6, [x4, #32]
   19464:	ldr	x4, [x4, #16]
   19468:	cbnz	x4, 19458 <set_program_name@@Base+0x11b0>
   1946c:	cmp	x19, x7
   19470:	b.eq	1947c <set_program_name@@Base+0x11d4>  // b.none
   19474:	str	x5, [x2]
   19478:	str	x2, [x5, #16]
   1947c:	ldr	w4, [x19, #24]
   19480:	str	x0, [x2, #8]
   19484:	str	x2, [x0, #16]
   19488:	ldr	x0, [x19, #32]
   1948c:	str	x3, [x2, #16]
   19490:	str	w4, [x2, #24]
   19494:	str	x0, [x2, #32]
   19498:	cbz	x3, 19598 <set_program_name@@Base+0x12f0>
   1949c:	ldr	x0, [x3]
   194a0:	cmp	x19, x0
   194a4:	b.eq	195a0 <set_program_name@@Base+0x12f8>  // b.none
   194a8:	str	x2, [x3, #8]
   194ac:	cbnz	w8, 194d0 <set_program_name@@Base+0x1228>
   194b0:	cbz	x1, 194c0 <set_program_name@@Base+0x1218>
   194b4:	ldr	w0, [x1, #24]
   194b8:	cmp	w0, #0x1
   194bc:	b.eq	195b0 <set_program_name@@Base+0x1308>  // b.none
   194c0:	cmp	x19, x7
   194c4:	mov	x0, x20
   194c8:	csel	x2, x7, x2, ne  // ne = any
   194cc:	bl	18b98 <set_program_name@@Base+0x8f0>
   194d0:	ldr	x1, [x20, #24]
   194d4:	cbz	x1, 194e0 <set_program_name@@Base+0x1238>
   194d8:	ldr	x0, [x19, #40]
   194dc:	blr	x1
   194e0:	mov	x0, x19
   194e4:	bl	aa50 <free@plt>
   194e8:	mov	w0, #0x1                   	// #1
   194ec:	ldp	x19, x20, [sp, #16]
   194f0:	ldp	x29, x30, [sp], #32
   194f4:	ret
   194f8:	str	x3, [x5, #16]
   194fc:	str	wzr, [x5, #24]
   19500:	cbz	x3, 19588 <set_program_name@@Base+0x12e0>
   19504:	ldr	x0, [x3]
   19508:	cmp	x19, x0
   1950c:	b.eq	195b8 <set_program_name@@Base+0x1310>  // b.none
   19510:	str	x5, [x3, #8]
   19514:	nop
   19518:	ldr	x0, [x3, #32]
   1951c:	sub	x0, x0, #0x1
   19520:	str	x0, [x3, #32]
   19524:	ldr	x3, [x3, #16]
   19528:	cbnz	x3, 19518 <set_program_name@@Base+0x1270>
   1952c:	b	194d0 <set_program_name@@Base+0x1228>
   19530:	cbz	x0, 1953c <set_program_name@@Base+0x1294>
   19534:	str	x3, [x0, #16]
   19538:	str	wzr, [x0, #24]
   1953c:	cbz	x3, 195a8 <set_program_name@@Base+0x1300>
   19540:	ldr	x1, [x3]
   19544:	cmp	x19, x1
   19548:	b.eq	19590 <set_program_name@@Base+0x12e8>  // b.none
   1954c:	str	x0, [x3, #8]
   19550:	mov	x1, x3
   19554:	nop
   19558:	ldr	x2, [x1, #32]
   1955c:	sub	x2, x2, #0x1
   19560:	str	x2, [x1, #32]
   19564:	ldr	x1, [x1, #16]
   19568:	cbnz	x1, 19558 <set_program_name@@Base+0x12b0>
   1956c:	cbnz	x0, 194d0 <set_program_name@@Base+0x1228>
   19570:	ldr	w0, [x19, #24]
   19574:	cbnz	w0, 194d0 <set_program_name@@Base+0x1228>
   19578:	mov	x2, x3
   1957c:	mov	x0, x20
   19580:	bl	18b98 <set_program_name@@Base+0x8f0>
   19584:	b	194d0 <set_program_name@@Base+0x1228>
   19588:	str	x5, [x20, #40]
   1958c:	b	194d0 <set_program_name@@Base+0x1228>
   19590:	str	x0, [x3]
   19594:	b	19550 <set_program_name@@Base+0x12a8>
   19598:	str	x2, [x20, #40]
   1959c:	b	194ac <set_program_name@@Base+0x1204>
   195a0:	str	x2, [x3]
   195a4:	b	194ac <set_program_name@@Base+0x1204>
   195a8:	str	x0, [x20, #40]
   195ac:	b	194d0 <set_program_name@@Base+0x1228>
   195b0:	str	wzr, [x1, #24]
   195b4:	b	194d0 <set_program_name@@Base+0x1228>
   195b8:	str	x5, [x3]
   195bc:	b	19518 <set_program_name@@Base+0x1270>
   195c0:	stp	x29, x30, [sp, #-32]!
   195c4:	mov	x29, sp
   195c8:	str	x19, [sp, #16]
   195cc:	mov	x19, x0
   195d0:	bl	18a08 <set_program_name@@Base+0x760>
   195d4:	cbz	x0, 195ec <set_program_name@@Base+0x1344>
   195d8:	mov	x1, x0
   195dc:	mov	x0, x19
   195e0:	ldr	x19, [sp, #16]
   195e4:	ldp	x29, x30, [sp], #32
   195e8:	b	193f8 <set_program_name@@Base+0x1150>
   195ec:	mov	w0, #0x0                   	// #0
   195f0:	ldr	x19, [sp, #16]
   195f4:	ldp	x29, x30, [sp], #32
   195f8:	ret
   195fc:	nop
   19600:	mov	x3, x1
   19604:	ldr	x1, [x0, #40]
   19608:	cbz	x1, 1963c <set_program_name@@Base+0x1394>
   1960c:	stp	x29, x30, [sp, #-32]!
   19610:	mov	x29, sp
   19614:	ldr	x2, [x1, #32]
   19618:	mov	x1, #0x0                   	// #0
   1961c:	str	x19, [sp, #16]
   19620:	mov	x19, x0
   19624:	bl	190e0 <set_program_name@@Base+0xe38>
   19628:	cbnz	x0, 19644 <set_program_name@@Base+0x139c>
   1962c:	mov	w0, #0x0                   	// #0
   19630:	ldr	x19, [sp, #16]
   19634:	ldp	x29, x30, [sp], #32
   19638:	ret
   1963c:	mov	w0, #0x0                   	// #0
   19640:	ret
   19644:	mov	x1, x0
   19648:	mov	x0, x19
   1964c:	ldr	x19, [sp, #16]
   19650:	ldp	x29, x30, [sp], #32
   19654:	b	193f8 <set_program_name@@Base+0x1150>
   19658:	mov	x2, x1
   1965c:	ldr	x1, [x0, #40]
   19660:	cbz	x1, 196a4 <set_program_name@@Base+0x13fc>
   19664:	ldr	x3, [x1, #32]
   19668:	cmp	x3, x2
   1966c:	b.ls	196a4 <set_program_name@@Base+0x13fc>  // b.plast
   19670:	ldr	x3, [x1]
   19674:	cbz	x3, 19688 <set_program_name@@Base+0x13e0>
   19678:	ldr	x4, [x3, #32]
   1967c:	cmp	x4, x2
   19680:	b.hi	19698 <set_program_name@@Base+0x13f0>  // b.pmore
   19684:	sub	x2, x2, x4
   19688:	cbz	x2, 196a0 <set_program_name@@Base+0x13f8>
   1968c:	sub	x2, x2, #0x1
   19690:	ldr	x1, [x1, #8]
   19694:	b	19670 <set_program_name@@Base+0x13c8>
   19698:	mov	x1, x3
   1969c:	b	19670 <set_program_name@@Base+0x13c8>
   196a0:	b	193f8 <set_program_name@@Base+0x1150>
   196a4:	stp	x29, x30, [sp, #-16]!
   196a8:	mov	x29, sp
   196ac:	bl	a900 <abort@plt>
   196b0:	stp	x29, x30, [sp, #-32]!
   196b4:	mov	x29, sp
   196b8:	str	x19, [sp, #16]
   196bc:	mov	x19, x0
   196c0:	ldr	x0, [x0]
   196c4:	cbz	x0, 196cc <set_program_name@@Base+0x1424>
   196c8:	bl	196b0 <set_program_name@@Base+0x1408>
   196cc:	ldr	x0, [x19, #8]
   196d0:	cbz	x0, 196d8 <set_program_name@@Base+0x1430>
   196d4:	bl	196b0 <set_program_name@@Base+0x1408>
   196d8:	mov	x0, x19
   196dc:	ldr	x19, [sp, #16]
   196e0:	ldp	x29, x30, [sp], #32
   196e4:	b	aa50 <free@plt>
   196e8:	stp	x29, x30, [sp, #-48]!
   196ec:	mov	x29, sp
   196f0:	stp	x19, x20, [sp, #16]
   196f4:	mov	x19, x1
   196f8:	stp	x21, x22, [sp, #32]
   196fc:	mov	x21, x0
   19700:	mov	x22, x2
   19704:	mov	x0, #0x30                  	// #48
   19708:	bl	a5f0 <malloc@plt>
   1970c:	mov	x20, x0
   19710:	cbz	x0, 19764 <set_program_name@@Base+0x14bc>
   19714:	ldr	x3, [x19, #8]
   19718:	mov	x0, #0x1                   	// #1
   1971c:	stp	xzr, xzr, [x20]
   19720:	stp	x0, x22, [x20, #32]
   19724:	cbz	x3, 19778 <set_program_name@@Base+0x14d0>
   19728:	mov	x19, x3
   1972c:	ldr	x3, [x3]
   19730:	cbnz	x3, 19728 <set_program_name@@Base+0x1480>
   19734:	str	x20, [x19]
   19738:	mov	x3, x19
   1973c:	str	x19, [x20, #16]
   19740:	ldr	x4, [x3, #32]
   19744:	add	x4, x4, #0x1
   19748:	str	x4, [x3, #32]
   1974c:	ldr	x3, [x3, #16]
   19750:	cbnz	x3, 19740 <set_program_name@@Base+0x1498>
   19754:	mov	x2, x19
   19758:	mov	x0, x21
   1975c:	mov	x1, x20
   19760:	bl	18dd8 <set_program_name@@Base+0xb30>
   19764:	mov	x0, x20
   19768:	ldp	x19, x20, [sp, #16]
   1976c:	ldp	x21, x22, [sp, #32]
   19770:	ldp	x29, x30, [sp], #48
   19774:	ret
   19778:	str	x20, [x19, #8]
   1977c:	b	19738 <set_program_name@@Base+0x1490>
   19780:	stp	x29, x30, [sp, #-48]!
   19784:	mov	x29, sp
   19788:	stp	x19, x20, [sp, #16]
   1978c:	mov	x19, x1
   19790:	stp	x21, x22, [sp, #32]
   19794:	mov	x21, x0
   19798:	mov	x22, x2
   1979c:	mov	x0, #0x30                  	// #48
   197a0:	bl	a5f0 <malloc@plt>
   197a4:	mov	x20, x0
   197a8:	cbz	x0, 197fc <set_program_name@@Base+0x1554>
   197ac:	ldr	x3, [x19]
   197b0:	mov	x0, #0x1                   	// #1
   197b4:	stp	xzr, xzr, [x20]
   197b8:	stp	x0, x22, [x20, #32]
   197bc:	cbz	x3, 19810 <set_program_name@@Base+0x1568>
   197c0:	mov	x19, x3
   197c4:	ldr	x3, [x3, #8]
   197c8:	cbnz	x3, 197c0 <set_program_name@@Base+0x1518>
   197cc:	str	x20, [x19, #8]
   197d0:	mov	x3, x19
   197d4:	str	x19, [x20, #16]
   197d8:	ldr	x4, [x3, #32]
   197dc:	add	x4, x4, #0x1
   197e0:	str	x4, [x3, #32]
   197e4:	ldr	x3, [x3, #16]
   197e8:	cbnz	x3, 197d8 <set_program_name@@Base+0x1530>
   197ec:	mov	x2, x19
   197f0:	mov	x0, x21
   197f4:	mov	x1, x20
   197f8:	bl	18dd8 <set_program_name@@Base+0xb30>
   197fc:	mov	x0, x20
   19800:	ldp	x19, x20, [sp, #16]
   19804:	ldp	x21, x22, [sp, #32]
   19808:	ldp	x29, x30, [sp], #48
   1980c:	ret
   19810:	str	x20, [x19]
   19814:	b	197d0 <set_program_name@@Base+0x1528>
   19818:	stp	x29, x30, [sp, #-48]!
   1981c:	mov	x29, sp
   19820:	stp	x19, x20, [sp, #16]
   19824:	mov	x20, x0
   19828:	mov	x0, #0x30                  	// #48
   1982c:	str	x21, [sp, #32]
   19830:	mov	x21, x1
   19834:	bl	a5f0 <malloc@plt>
   19838:	mov	x19, x0
   1983c:	cbz	x0, 19890 <set_program_name@@Base+0x15e8>
   19840:	ldr	x3, [x20, #40]
   19844:	mov	x0, #0x1                   	// #1
   19848:	stp	xzr, xzr, [x19]
   1984c:	stp	x0, x21, [x19, #32]
   19850:	cbz	x3, 198a4 <set_program_name@@Base+0x15fc>
   19854:	nop
   19858:	mov	x2, x3
   1985c:	ldr	x3, [x3, #8]
   19860:	cbnz	x3, 19858 <set_program_name@@Base+0x15b0>
   19864:	mov	x3, x2
   19868:	str	x19, [x2, #8]
   1986c:	str	x2, [x19, #16]
   19870:	ldr	x4, [x3, #32]
   19874:	add	x4, x4, #0x1
   19878:	str	x4, [x3, #32]
   1987c:	ldr	x3, [x3, #16]
   19880:	cbnz	x3, 19870 <set_program_name@@Base+0x15c8>
   19884:	mov	x0, x20
   19888:	mov	x1, x19
   1988c:	bl	18dd8 <set_program_name@@Base+0xb30>
   19890:	mov	x0, x19
   19894:	ldp	x19, x20, [sp, #16]
   19898:	ldr	x21, [sp, #32]
   1989c:	ldp	x29, x30, [sp], #48
   198a0:	ret
   198a4:	str	x19, [x20, #40]
   198a8:	mov	x0, x19
   198ac:	str	xzr, [x19, #16]
   198b0:	str	wzr, [x19, #24]
   198b4:	ldp	x19, x20, [sp, #16]
   198b8:	ldr	x21, [sp, #32]
   198bc:	ldp	x29, x30, [sp], #48
   198c0:	ret
   198c4:	nop
   198c8:	mov	x3, x1
   198cc:	mov	x4, #0x0                   	// #0
   198d0:	ldr	x1, [x0, #40]
   198d4:	cbz	x1, 198dc <set_program_name@@Base+0x1634>
   198d8:	ldr	x4, [x1, #32]
   198dc:	cmp	x4, x3
   198e0:	b.cc	19924 <set_program_name@@Base+0x167c>  // b.lo, b.ul, b.last
   198e4:	b.eq	1991c <set_program_name@@Base+0x1674>  // b.none
   198e8:	ldr	x4, [x1]
   198ec:	cbz	x4, 19900 <set_program_name@@Base+0x1658>
   198f0:	ldr	x5, [x4, #32]
   198f4:	cmp	x5, x3
   198f8:	b.hi	19910 <set_program_name@@Base+0x1668>  // b.pmore
   198fc:	sub	x3, x3, x5
   19900:	cbz	x3, 19918 <set_program_name@@Base+0x1670>
   19904:	sub	x3, x3, #0x1
   19908:	ldr	x1, [x1, #8]
   1990c:	b	198e8 <set_program_name@@Base+0x1640>
   19910:	mov	x1, x4
   19914:	b	198e8 <set_program_name@@Base+0x1640>
   19918:	b	19780 <set_program_name@@Base+0x14d8>
   1991c:	mov	x1, x2
   19920:	b	19818 <set_program_name@@Base+0x1570>
   19924:	stp	x29, x30, [sp, #-16]!
   19928:	mov	x29, sp
   1992c:	bl	a900 <abort@plt>
   19930:	stp	x29, x30, [sp, #-48]!
   19934:	mov	x29, sp
   19938:	stp	x19, x20, [sp, #16]
   1993c:	mov	x20, x0
   19940:	mov	x0, #0x30                  	// #48
   19944:	str	x21, [sp, #32]
   19948:	mov	x21, x1
   1994c:	bl	a5f0 <malloc@plt>
   19950:	mov	x19, x0
   19954:	cbz	x0, 199a8 <set_program_name@@Base+0x1700>
   19958:	ldr	x3, [x20, #40]
   1995c:	mov	x0, #0x1                   	// #1
   19960:	stp	xzr, xzr, [x19]
   19964:	stp	x0, x21, [x19, #32]
   19968:	cbz	x3, 199bc <set_program_name@@Base+0x1714>
   1996c:	nop
   19970:	mov	x2, x3
   19974:	ldr	x3, [x3]
   19978:	cbnz	x3, 19970 <set_program_name@@Base+0x16c8>
   1997c:	mov	x3, x2
   19980:	str	x19, [x2]
   19984:	str	x2, [x19, #16]
   19988:	ldr	x4, [x3, #32]
   1998c:	add	x4, x4, #0x1
   19990:	str	x4, [x3, #32]
   19994:	ldr	x3, [x3, #16]
   19998:	cbnz	x3, 19988 <set_program_name@@Base+0x16e0>
   1999c:	mov	x0, x20
   199a0:	mov	x1, x19
   199a4:	bl	18dd8 <set_program_name@@Base+0xb30>
   199a8:	mov	x0, x19
   199ac:	ldp	x19, x20, [sp, #16]
   199b0:	ldr	x21, [sp, #32]
   199b4:	ldp	x29, x30, [sp], #48
   199b8:	ret
   199bc:	str	x19, [x20, #40]
   199c0:	mov	x0, x19
   199c4:	str	xzr, [x19, #16]
   199c8:	str	wzr, [x19, #24]
   199cc:	ldp	x19, x20, [sp, #16]
   199d0:	ldr	x21, [sp, #32]
   199d4:	ldp	x29, x30, [sp], #48
   199d8:	ret
   199dc:	nop
   199e0:	stp	x29, x30, [sp, #-48]!
   199e4:	mov	x29, sp
   199e8:	stp	x19, x20, [sp, #16]
   199ec:	mov	x20, x2
   199f0:	ldr	x19, [x0, #40]
   199f4:	cbz	x19, 19a7c <set_program_name@@Base+0x17d4>
   199f8:	stp	x21, x22, [sp, #32]
   199fc:	mov	x22, x0
   19a00:	mov	x21, x1
   19a04:	ldr	x0, [x19, #40]
   19a08:	mov	x1, x20
   19a0c:	blr	x21
   19a10:	cmp	w0, #0x0
   19a14:	b.lt	19a3c <set_program_name@@Base+0x1794>  // b.tstop
   19a18:	b.eq	19a60 <set_program_name@@Base+0x17b8>  // b.none
   19a1c:	ldr	x3, [x19]
   19a20:	cbz	x3, 19a60 <set_program_name@@Base+0x17b8>
   19a24:	mov	x19, x3
   19a28:	mov	x1, x20
   19a2c:	ldr	x0, [x19, #40]
   19a30:	blr	x21
   19a34:	cmp	w0, #0x0
   19a38:	b.ge	19a18 <set_program_name@@Base+0x1770>  // b.tcont
   19a3c:	ldr	x3, [x19, #8]
   19a40:	cbnz	x3, 19a24 <set_program_name@@Base+0x177c>
   19a44:	mov	x2, x20
   19a48:	mov	x1, x19
   19a4c:	mov	x0, x22
   19a50:	ldp	x19, x20, [sp, #16]
   19a54:	ldp	x21, x22, [sp, #32]
   19a58:	ldp	x29, x30, [sp], #48
   19a5c:	b	196e8 <set_program_name@@Base+0x1440>
   19a60:	mov	x2, x20
   19a64:	mov	x1, x19
   19a68:	mov	x0, x22
   19a6c:	ldp	x19, x20, [sp, #16]
   19a70:	ldp	x21, x22, [sp, #32]
   19a74:	ldp	x29, x30, [sp], #48
   19a78:	b	19780 <set_program_name@@Base+0x14d8>
   19a7c:	ldp	x19, x20, [sp, #16]
   19a80:	mov	x1, x2
   19a84:	ldp	x29, x30, [sp], #48
   19a88:	b	19930 <set_program_name@@Base+0x1688>
   19a8c:	nop
   19a90:	stp	x29, x30, [sp, #-64]!
   19a94:	mov	x29, sp
   19a98:	stp	x19, x20, [sp, #16]
   19a9c:	mov	x20, x1
   19aa0:	stp	x21, x22, [sp, #32]
   19aa4:	mov	x22, x2
   19aa8:	stp	x23, x24, [sp, #48]
   19aac:	sub	x24, x1, #0x1
   19ab0:	mov	w23, w0
   19ab4:	mov	x0, #0x30                  	// #48
   19ab8:	bl	a5f0 <malloc@plt>
   19abc:	mov	x19, x0
   19ac0:	cbz	x0, 19afc <set_program_name@@Base+0x1854>
   19ac4:	lsr	x21, x24, #1
   19ac8:	cmp	x24, #0x1
   19acc:	b.hi	19b14 <set_program_name@@Base+0x186c>  // b.pmore
   19ad0:	str	xzr, [x0]
   19ad4:	cmp	x20, #0x1
   19ad8:	ldr	x0, [x22, x21, lsl #3]
   19adc:	str	x0, [x19, #40]
   19ae0:	lsl	x21, x21, #3
   19ae4:	b.hi	19b44 <set_program_name@@Base+0x189c>  // b.pmore
   19ae8:	str	xzr, [x19, #8]
   19aec:	cmp	w23, #0x0
   19af0:	str	x20, [x19, #32]
   19af4:	cset	w0, eq  // eq = none
   19af8:	str	w0, [x19, #24]
   19afc:	mov	x0, x19
   19b00:	ldp	x19, x20, [sp, #16]
   19b04:	ldp	x21, x22, [sp, #32]
   19b08:	ldp	x23, x24, [sp, #48]
   19b0c:	ldp	x29, x30, [sp], #64
   19b10:	ret
   19b14:	mov	x2, x22
   19b18:	mov	x1, x21
   19b1c:	sub	w0, w23, #0x1
   19b20:	bl	19a90 <set_program_name@@Base+0x17e8>
   19b24:	str	x0, [x19]
   19b28:	cbz	x0, 19b74 <set_program_name@@Base+0x18cc>
   19b2c:	str	x19, [x0, #16]
   19b30:	cmp	x20, #0x1
   19b34:	ldr	x0, [x22, x21, lsl #3]
   19b38:	str	x0, [x19, #40]
   19b3c:	lsl	x21, x21, #3
   19b40:	b.ls	19ae8 <set_program_name@@Base+0x1840>  // b.plast
   19b44:	add	x21, x21, #0x8
   19b48:	lsr	x1, x20, #1
   19b4c:	add	x2, x22, x21
   19b50:	sub	w0, w23, #0x1
   19b54:	bl	19a90 <set_program_name@@Base+0x17e8>
   19b58:	str	x0, [x19, #8]
   19b5c:	cbz	x0, 19b68 <set_program_name@@Base+0x18c0>
   19b60:	str	x19, [x0, #16]
   19b64:	b	19aec <set_program_name@@Base+0x1844>
   19b68:	ldr	x0, [x19]
   19b6c:	cbz	x0, 19b74 <set_program_name@@Base+0x18cc>
   19b70:	bl	196b0 <set_program_name@@Base+0x1408>
   19b74:	mov	x0, x19
   19b78:	mov	x19, #0x0                   	// #0
   19b7c:	bl	aa50 <free@plt>
   19b80:	b	19afc <set_program_name@@Base+0x1854>
   19b84:	nop
   19b88:	stp	x29, x30, [sp, #-80]!
   19b8c:	mov	x29, sp
   19b90:	stp	x19, x20, [sp, #16]
   19b94:	mov	x20, x5
   19b98:	stp	x21, x22, [sp, #32]
   19b9c:	mov	x22, x2
   19ba0:	mov	x21, x3
   19ba4:	stp	x23, x24, [sp, #48]
   19ba8:	mov	x24, x0
   19bac:	mov	x23, x1
   19bb0:	mov	x0, #0x30                  	// #48
   19bb4:	stp	x25, x26, [sp, #64]
   19bb8:	mov	x25, x6
   19bbc:	and	w26, w4, #0xff
   19bc0:	bl	a5f0 <malloc@plt>
   19bc4:	mov	x19, x0
   19bc8:	cbz	x0, 19c18 <set_program_name@@Base+0x1970>
   19bcc:	stp	x24, x23, [x0]
   19bd0:	stp	x22, x21, [x0, #16]
   19bd4:	strb	w26, [x0, #32]
   19bd8:	cbz	x20, 19c34 <set_program_name@@Base+0x198c>
   19bdc:	add	x3, x20, #0x1
   19be0:	mov	w0, #0x0                   	// #0
   19be4:	cmp	x3, #0x1
   19be8:	b.ls	19c00 <set_program_name@@Base+0x1958>  // b.plast
   19bec:	nop
   19bf0:	lsr	x3, x3, #1
   19bf4:	add	w0, w0, #0x1
   19bf8:	cmp	x3, #0x1
   19bfc:	b.ne	19bf0 <set_program_name@@Base+0x1948>  // b.any
   19c00:	mov	x2, x25
   19c04:	mov	x1, x20
   19c08:	bl	19a90 <set_program_name@@Base+0x17e8>
   19c0c:	str	x0, [x19, #40]
   19c10:	cbz	x0, 19c54 <set_program_name@@Base+0x19ac>
   19c14:	str	xzr, [x0, #16]
   19c18:	mov	x0, x19
   19c1c:	ldp	x19, x20, [sp, #16]
   19c20:	ldp	x21, x22, [sp, #32]
   19c24:	ldp	x23, x24, [sp, #48]
   19c28:	ldp	x25, x26, [sp, #64]
   19c2c:	ldp	x29, x30, [sp], #80
   19c30:	ret
   19c34:	str	xzr, [x0, #40]
   19c38:	mov	x0, x19
   19c3c:	ldp	x19, x20, [sp, #16]
   19c40:	ldp	x21, x22, [sp, #32]
   19c44:	ldp	x23, x24, [sp, #48]
   19c48:	ldp	x25, x26, [sp, #64]
   19c4c:	ldp	x29, x30, [sp], #80
   19c50:	ret
   19c54:	mov	x0, x19
   19c58:	mov	x19, #0x0                   	// #0
   19c5c:	bl	aa50 <free@plt>
   19c60:	b	19c18 <set_program_name@@Base+0x1970>
   19c64:	nop
   19c68:	stp	x29, x30, [sp, #-64]!
   19c6c:	mov	x29, sp
   19c70:	stp	x19, x20, [sp, #16]
   19c74:	mov	x20, x2
   19c78:	mov	x19, x3
   19c7c:	stp	x21, x22, [sp, #32]
   19c80:	mov	x22, x0
   19c84:	mov	x21, x1
   19c88:	mov	x0, #0x30                  	// #48
   19c8c:	str	x23, [sp, #48]
   19c90:	and	w23, w4, #0xff
   19c94:	bl	a5f0 <malloc@plt>
   19c98:	cbz	x0, 19cac <set_program_name@@Base+0x1a04>
   19c9c:	stp	x22, x21, [x0]
   19ca0:	stp	x20, x19, [x0, #16]
   19ca4:	strb	w23, [x0, #32]
   19ca8:	str	xzr, [x0, #40]
   19cac:	ldp	x19, x20, [sp, #16]
   19cb0:	ldp	x21, x22, [sp, #32]
   19cb4:	ldr	x23, [sp, #48]
   19cb8:	ldp	x29, x30, [sp], #64
   19cbc:	ret
   19cc0:	ldr	x2, [x1, #8]
   19cc4:	cbz	x2, 19cd8 <set_program_name@@Base+0x1a30>
   19cc8:	mov	x0, x2
   19ccc:	ldr	x2, [x2]
   19cd0:	cbnz	x2, 19cc8 <set_program_name@@Base+0x1a20>
   19cd4:	ret
   19cd8:	mov	x0, x1
   19cdc:	b	19cec <set_program_name@@Base+0x1a44>
   19ce0:	ldr	x2, [x0, #8]
   19ce4:	cmp	x1, x2
   19ce8:	b.ne	19cd4 <set_program_name@@Base+0x1a2c>  // b.any
   19cec:	mov	x1, x0
   19cf0:	ldr	x0, [x0, #16]
   19cf4:	cbnz	x0, 19ce0 <set_program_name@@Base+0x1a38>
   19cf8:	ret
   19cfc:	nop
   19d00:	ldr	x2, [x1]
   19d04:	cbz	x2, 19d18 <set_program_name@@Base+0x1a70>
   19d08:	mov	x0, x2
   19d0c:	ldr	x2, [x2, #8]
   19d10:	cbnz	x2, 19d08 <set_program_name@@Base+0x1a60>
   19d14:	ret
   19d18:	mov	x0, x1
   19d1c:	b	19d2c <set_program_name@@Base+0x1a84>
   19d20:	ldr	x2, [x0]
   19d24:	cmp	x1, x2
   19d28:	b.ne	19d14 <set_program_name@@Base+0x1a6c>  // b.any
   19d2c:	mov	x1, x0
   19d30:	ldr	x0, [x0, #16]
   19d34:	cbnz	x0, 19d20 <set_program_name@@Base+0x1a78>
   19d38:	ret
   19d3c:	nop

0000000000019d40 <gl_rbtree_list_check_invariants@@Base>:
   19d40:	ldr	x0, [x0, #40]
   19d44:	cbz	x0, 19d50 <gl_rbtree_list_check_invariants@@Base+0x10>
   19d48:	mov	x1, #0x0                   	// #0
   19d4c:	b	18540 <set_program_name@@Base+0x298>
   19d50:	ret
   19d54:	nop

0000000000019d58 <renameatu@@Base>:
   19d58:	stp	x29, x30, [sp, #-336]!
   19d5c:	mov	x29, sp
   19d60:	stp	x19, x20, [sp, #16]
   19d64:	mov	x20, x3
   19d68:	stp	x21, x22, [sp, #32]
   19d6c:	mov	x21, x1
   19d70:	stp	x23, x24, [sp, #48]
   19d74:	mov	w24, w2
   19d78:	stp	x25, x26, [sp, #64]
   19d7c:	mov	w25, w0
   19d80:	mov	w26, w4
   19d84:	bl	aa60 <renameat2@plt>
   19d88:	mov	w19, w0
   19d8c:	tbz	w0, #31, 19dcc <renameatu@@Base+0x74>
   19d90:	bl	aeb0 <__errno_location@plt>
   19d94:	mov	x22, x0
   19d98:	ldr	w0, [x0]
   19d9c:	sub	w1, w0, #0x16
   19da0:	tst	w1, #0xffffffef
   19da4:	cset	w23, ne  // ne = any
   19da8:	cmp	w0, #0x5f
   19dac:	csel	w23, w23, wzr, ne  // ne = any
   19db0:	cbnz	w23, 19dcc <renameatu@@Base+0x74>
   19db4:	cbz	w26, 19e20 <renameatu@@Base+0xc8>
   19db8:	tst	w26, #0xfffffffe
   19dbc:	b.eq	19de8 <renameatu@@Base+0x90>  // b.none
   19dc0:	mov	w0, #0x5f                  	// #95
   19dc4:	mov	w19, #0xffffffff            	// #-1
   19dc8:	str	w0, [x22]
   19dcc:	mov	w0, w19
   19dd0:	ldp	x19, x20, [sp, #16]
   19dd4:	ldp	x21, x22, [sp, #32]
   19dd8:	ldp	x23, x24, [sp, #48]
   19ddc:	ldp	x25, x26, [sp, #64]
   19de0:	ldp	x29, x30, [sp], #336
   19de4:	ret
   19de8:	add	x3, sp, #0xd0
   19dec:	mov	x2, x20
   19df0:	mov	w1, w24
   19df4:	mov	w4, #0x100                 	// #256
   19df8:	mov	w0, #0x0                   	// #0
   19dfc:	bl	afe0 <__fxstatat@plt>
   19e00:	cbz	w0, 19f10 <renameatu@@Base+0x1b8>
   19e04:	ldr	w0, [x22]
   19e08:	cmp	w0, #0x4b
   19e0c:	b.eq	19f10 <renameatu@@Base+0x1b8>  // b.none
   19e10:	cmp	w0, #0x2
   19e14:	b.ne	19f08 <renameatu@@Base+0x1b0>  // b.any
   19e18:	mov	w23, #0x1                   	// #1
   19e1c:	nop
   19e20:	mov	x0, x21
   19e24:	bl	a340 <strlen@plt>
   19e28:	mov	x19, x0
   19e2c:	mov	x0, x20
   19e30:	bl	a340 <strlen@plt>
   19e34:	cmp	x19, #0x0
   19e38:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   19e3c:	b.eq	19ed4 <renameatu@@Base+0x17c>  // b.none
   19e40:	add	x19, x21, x19
   19e44:	add	x0, x20, x0
   19e48:	mov	w1, #0x2f                  	// #47
   19e4c:	ldurb	w2, [x19, #-1]
   19e50:	ldurb	w0, [x0, #-1]
   19e54:	cmp	w2, w1
   19e58:	ccmp	w0, w1, #0x4, ne  // ne = any
   19e5c:	b.ne	19ed4 <renameatu@@Base+0x17c>  // b.any
   19e60:	add	x3, sp, #0x50
   19e64:	mov	x2, x21
   19e68:	mov	w1, w25
   19e6c:	mov	w4, #0x100                 	// #256
   19e70:	mov	w0, #0x0                   	// #0
   19e74:	bl	afe0 <__fxstatat@plt>
   19e78:	cbnz	w0, 19f08 <renameatu@@Base+0x1b0>
   19e7c:	cbz	w23, 19ea0 <renameatu@@Base+0x148>
   19e80:	ldr	w0, [sp, #96]
   19e84:	and	w0, w0, #0xf000
   19e88:	cmp	w0, #0x4, lsl #12
   19e8c:	b.eq	19ed4 <renameatu@@Base+0x17c>  // b.none
   19e90:	mov	w0, #0x2                   	// #2
   19e94:	mov	w19, #0xffffffff            	// #-1
   19e98:	str	w0, [x22]
   19e9c:	b	19dcc <renameatu@@Base+0x74>
   19ea0:	add	x3, sp, #0xd0
   19ea4:	mov	x2, x20
   19ea8:	mov	w1, w24
   19eac:	mov	w4, #0x100                 	// #256
   19eb0:	bl	afe0 <__fxstatat@plt>
   19eb4:	cbz	w0, 19f20 <renameatu@@Base+0x1c8>
   19eb8:	ldr	w0, [x22]
   19ebc:	cmp	w0, #0x2
   19ec0:	b.ne	19f08 <renameatu@@Base+0x1b0>  // b.any
   19ec4:	ldr	w0, [sp, #96]
   19ec8:	and	w0, w0, #0xf000
   19ecc:	cmp	w0, #0x4, lsl #12
   19ed0:	b.ne	19f08 <renameatu@@Base+0x1b0>  // b.any
   19ed4:	mov	x3, x20
   19ed8:	mov	w2, w24
   19edc:	mov	x1, x21
   19ee0:	mov	w0, w25
   19ee4:	bl	aaa0 <renameat@plt>
   19ee8:	mov	w19, w0
   19eec:	mov	w0, w19
   19ef0:	ldp	x19, x20, [sp, #16]
   19ef4:	ldp	x21, x22, [sp, #32]
   19ef8:	ldp	x23, x24, [sp, #48]
   19efc:	ldp	x25, x26, [sp, #64]
   19f00:	ldp	x29, x30, [sp], #336
   19f04:	ret
   19f08:	mov	w19, #0xffffffff            	// #-1
   19f0c:	b	19dcc <renameatu@@Base+0x74>
   19f10:	mov	w0, #0x11                  	// #17
   19f14:	mov	w19, #0xffffffff            	// #-1
   19f18:	str	w0, [x22]
   19f1c:	b	19dcc <renameatu@@Base+0x74>
   19f20:	ldr	w0, [sp, #224]
   19f24:	and	w0, w0, #0xf000
   19f28:	cmp	w0, #0x4, lsl #12
   19f2c:	b.eq	19f40 <renameatu@@Base+0x1e8>  // b.none
   19f30:	mov	w0, #0x14                  	// #20
   19f34:	mov	w19, #0xffffffff            	// #-1
   19f38:	str	w0, [x22]
   19f3c:	b	19dcc <renameatu@@Base+0x74>
   19f40:	ldr	w0, [sp, #96]
   19f44:	and	w0, w0, #0xf000
   19f48:	cmp	w0, #0x4, lsl #12
   19f4c:	b.eq	19ed4 <renameatu@@Base+0x17c>  // b.none
   19f50:	mov	w0, #0x15                  	// #21
   19f54:	mov	w19, #0xffffffff            	// #-1
   19f58:	str	w0, [x22]
   19f5c:	b	19dcc <renameatu@@Base+0x74>

0000000000019f60 <same_nameat@@Base>:
   19f60:	stp	x29, x30, [sp, #-336]!
   19f64:	mov	x29, sp
   19f68:	stp	x19, x20, [sp, #16]
   19f6c:	stp	x21, x22, [sp, #32]
   19f70:	mov	x22, x3
   19f74:	stp	x23, x24, [sp, #48]
   19f78:	mov	x23, x1
   19f7c:	mov	w24, w2
   19f80:	str	x25, [sp, #64]
   19f84:	mov	w25, w0
   19f88:	mov	x0, x1
   19f8c:	bl	a780 <last_component@plt>
   19f90:	mov	x19, x0
   19f94:	mov	x0, x22
   19f98:	bl	a780 <last_component@plt>
   19f9c:	mov	x20, x0
   19fa0:	mov	x0, x19
   19fa4:	bl	a2a0 <base_len@plt>
   19fa8:	mov	x21, x0
   19fac:	mov	x0, x20
   19fb0:	bl	a2a0 <base_len@plt>
   19fb4:	cmp	x21, x0
   19fb8:	b.eq	19fdc <same_nameat@@Base+0x7c>  // b.none
   19fbc:	mov	w19, #0x0                   	// #0
   19fc0:	mov	w0, w19
   19fc4:	ldp	x19, x20, [sp, #16]
   19fc8:	ldp	x21, x22, [sp, #32]
   19fcc:	ldp	x23, x24, [sp, #48]
   19fd0:	ldr	x25, [sp, #64]
   19fd4:	ldp	x29, x30, [sp], #336
   19fd8:	ret
   19fdc:	mov	x2, x21
   19fe0:	mov	x1, x20
   19fe4:	mov	x0, x19
   19fe8:	bl	a970 <memcmp@plt>
   19fec:	cbnz	w0, 19fbc <same_nameat@@Base+0x5c>
   19ff0:	mov	x0, x23
   19ff4:	bl	a670 <dir_name@plt>
   19ff8:	mov	w1, w25
   19ffc:	mov	x19, x0
   1a000:	mov	x2, x0
   1a004:	add	x3, sp, #0x50
   1a008:	mov	w4, #0x100                 	// #256
   1a00c:	mov	w0, #0x0                   	// #0
   1a010:	bl	afe0 <__fxstatat@plt>
   1a014:	cbnz	w0, 1a0b4 <same_nameat@@Base+0x154>
   1a018:	mov	x0, x19
   1a01c:	bl	aa50 <free@plt>
   1a020:	mov	x0, x22
   1a024:	bl	a670 <dir_name@plt>
   1a028:	mov	w1, w24
   1a02c:	mov	x20, x0
   1a030:	mov	x2, x0
   1a034:	add	x3, sp, #0xd0
   1a038:	mov	w4, #0x100                 	// #256
   1a03c:	mov	w0, #0x0                   	// #0
   1a040:	bl	afe0 <__fxstatat@plt>
   1a044:	cbnz	w0, 1a090 <same_nameat@@Base+0x130>
   1a048:	ldr	x1, [sp, #88]
   1a04c:	mov	w19, #0x0                   	// #0
   1a050:	ldr	x0, [sp, #216]
   1a054:	cmp	x1, x0
   1a058:	b.ne	1a06c <same_nameat@@Base+0x10c>  // b.any
   1a05c:	ldr	x1, [sp, #80]
   1a060:	ldr	x0, [sp, #208]
   1a064:	cmp	x1, x0
   1a068:	cset	w19, eq  // eq = none
   1a06c:	mov	x0, x20
   1a070:	bl	aa50 <free@plt>
   1a074:	mov	w0, w19
   1a078:	ldp	x19, x20, [sp, #16]
   1a07c:	ldp	x21, x22, [sp, #32]
   1a080:	ldp	x23, x24, [sp, #48]
   1a084:	ldr	x25, [sp, #64]
   1a088:	ldp	x29, x30, [sp], #336
   1a08c:	ret
   1a090:	bl	aeb0 <__errno_location@plt>
   1a094:	mov	x1, x0
   1a098:	mov	x3, x20
   1a09c:	adrp	x2, 2c000 <vasnprintf@@Base+0x11e0>
   1a0a0:	mov	w0, #0x1                   	// #1
   1a0a4:	add	x2, x2, #0xb50
   1a0a8:	ldr	w1, [x1]
   1a0ac:	bl	a360 <error@plt>
   1a0b0:	b	1a048 <same_nameat@@Base+0xe8>
   1a0b4:	bl	aeb0 <__errno_location@plt>
   1a0b8:	mov	x1, x0
   1a0bc:	mov	x3, x19
   1a0c0:	adrp	x2, 2c000 <vasnprintf@@Base+0x11e0>
   1a0c4:	mov	w0, #0x1                   	// #1
   1a0c8:	add	x2, x2, #0xb50
   1a0cc:	ldr	w1, [x1]
   1a0d0:	bl	a360 <error@plt>
   1a0d4:	b	1a018 <same_nameat@@Base+0xb8>

000000000001a0d8 <same_name@@Base>:
   1a0d8:	mov	x3, x1
   1a0dc:	mov	w2, #0xffffff9c            	// #-100
   1a0e0:	mov	x1, x0
   1a0e4:	mov	w0, w2
   1a0e8:	b	a310 <same_nameat@plt>
   1a0ec:	nop

000000000001a0f0 <save_cwd@@Base>:
   1a0f0:	stp	x29, x30, [sp, #-32]!
   1a0f4:	adrp	x1, 2c000 <vasnprintf@@Base+0x11e0>
   1a0f8:	mov	x29, sp
   1a0fc:	str	x19, [sp, #16]
   1a100:	mov	x19, x0
   1a104:	add	x0, x1, #0x698
   1a108:	mov	w1, #0x80000               	// #524288
   1a10c:	str	xzr, [x19, #8]
   1a110:	bl	a640 <open@plt>
   1a114:	str	w0, [x19]
   1a118:	mov	w1, #0x80000               	// #524288
   1a11c:	bl	ae40 <fd_safer_flag@plt>
   1a120:	str	w0, [x19]
   1a124:	tbnz	w0, #31, 1a138 <save_cwd@@Base+0x48>
   1a128:	mov	w0, #0x0                   	// #0
   1a12c:	ldr	x19, [sp, #16]
   1a130:	ldp	x29, x30, [sp], #32
   1a134:	ret
   1a138:	mov	x1, #0x0                   	// #0
   1a13c:	mov	x0, #0x0                   	// #0
   1a140:	bl	a300 <getcwd@plt>
   1a144:	str	x0, [x19, #8]
   1a148:	cmp	x0, #0x0
   1a14c:	csetm	w0, eq  // eq = none
   1a150:	ldr	x19, [sp, #16]
   1a154:	ldp	x29, x30, [sp], #32
   1a158:	ret
   1a15c:	nop

000000000001a160 <restore_cwd@@Base>:
   1a160:	mov	x1, x0
   1a164:	ldr	w0, [x0]
   1a168:	tbnz	w0, #31, 1a170 <restore_cwd@@Base+0x10>
   1a16c:	b	a380 <fchdir@plt>
   1a170:	ldr	x0, [x1, #8]
   1a174:	b	a440 <chdir_long@plt>

000000000001a178 <free_cwd@@Base>:
   1a178:	stp	x29, x30, [sp, #-32]!
   1a17c:	mov	x29, sp
   1a180:	str	x19, [sp, #16]
   1a184:	mov	x19, x0
   1a188:	ldr	w0, [x0]
   1a18c:	tbnz	w0, #31, 1a194 <free_cwd@@Base+0x1c>
   1a190:	bl	a850 <close@plt>
   1a194:	ldr	x0, [x19, #8]
   1a198:	ldr	x19, [sp, #16]
   1a19c:	ldp	x29, x30, [sp], #32
   1a1a0:	b	aa50 <free@plt>
   1a1a4:	nop

000000000001a1a8 <gl_scratch_buffer_grow@@Base>:
   1a1a8:	stp	x29, x30, [sp, #-48]!
   1a1ac:	mov	x29, sp
   1a1b0:	stp	x19, x20, [sp, #16]
   1a1b4:	mov	x20, x0
   1a1b8:	mov	x19, x0
   1a1bc:	ldr	x1, [x0, #8]
   1a1c0:	ldr	x0, [x20], #16
   1a1c4:	str	x21, [sp, #32]
   1a1c8:	lsl	x21, x1, #1
   1a1cc:	cmp	x0, x20
   1a1d0:	b.eq	1a1dc <gl_scratch_buffer_grow@@Base+0x34>  // b.none
   1a1d4:	bl	aa50 <free@plt>
   1a1d8:	ldr	x1, [x19, #8]
   1a1dc:	cmp	x1, x21
   1a1e0:	b.hi	1a20c <gl_scratch_buffer_grow@@Base+0x64>  // b.pmore
   1a1e4:	mov	x0, x21
   1a1e8:	bl	a5f0 <malloc@plt>
   1a1ec:	mov	x1, x0
   1a1f0:	cbz	x0, 1a218 <gl_scratch_buffer_grow@@Base+0x70>
   1a1f4:	stp	x1, x21, [x19]
   1a1f8:	mov	w0, #0x1                   	// #1
   1a1fc:	ldp	x19, x20, [sp, #16]
   1a200:	ldr	x21, [sp, #32]
   1a204:	ldp	x29, x30, [sp], #48
   1a208:	ret
   1a20c:	bl	aeb0 <__errno_location@plt>
   1a210:	mov	w1, #0xc                   	// #12
   1a214:	str	w1, [x0]
   1a218:	mov	x1, #0x400                 	// #1024
   1a21c:	stp	x20, x1, [x19]
   1a220:	mov	w0, #0x0                   	// #0
   1a224:	ldp	x19, x20, [sp, #16]
   1a228:	ldr	x21, [sp, #32]
   1a22c:	ldp	x29, x30, [sp], #48
   1a230:	ret
   1a234:	nop

000000000001a238 <gl_scratch_buffer_grow_preserve@@Base>:
   1a238:	stp	x29, x30, [sp, #-64]!
   1a23c:	mov	x29, sp
   1a240:	stp	x21, x22, [sp, #32]
   1a244:	mov	x21, x0
   1a248:	stp	x23, x24, [sp, #48]
   1a24c:	ldr	x24, [x0, #8]
   1a250:	stp	x19, x20, [sp, #16]
   1a254:	mov	x19, x0
   1a258:	ldr	x23, [x21], #16
   1a25c:	lsl	x22, x24, #1
   1a260:	cmp	x23, x21
   1a264:	b.eq	1a2a0 <gl_scratch_buffer_grow_preserve@@Base+0x68>  // b.none
   1a268:	cmp	x24, x22
   1a26c:	b.hi	1a2c0 <gl_scratch_buffer_grow_preserve@@Base+0x88>  // b.pmore
   1a270:	mov	x0, x23
   1a274:	mov	x1, x22
   1a278:	bl	a7e0 <realloc@plt>
   1a27c:	mov	x20, x0
   1a280:	cbz	x0, 1a2e4 <gl_scratch_buffer_grow_preserve@@Base+0xac>
   1a284:	mov	w0, #0x1                   	// #1
   1a288:	stp	x20, x22, [x19]
   1a28c:	ldp	x19, x20, [sp, #16]
   1a290:	ldp	x21, x22, [sp, #32]
   1a294:	ldp	x23, x24, [sp, #48]
   1a298:	ldp	x29, x30, [sp], #64
   1a29c:	ret
   1a2a0:	mov	x0, x22
   1a2a4:	bl	a5f0 <malloc@plt>
   1a2a8:	mov	x20, x0
   1a2ac:	cbz	x0, 1a2ec <gl_scratch_buffer_grow_preserve@@Base+0xb4>
   1a2b0:	mov	x2, x24
   1a2b4:	mov	x1, x23
   1a2b8:	bl	a2c0 <memcpy@plt>
   1a2bc:	b	1a284 <gl_scratch_buffer_grow_preserve@@Base+0x4c>
   1a2c0:	bl	aeb0 <__errno_location@plt>
   1a2c4:	mov	w1, #0xc                   	// #12
   1a2c8:	str	w1, [x0]
   1a2cc:	mov	x0, x23
   1a2d0:	bl	aa50 <free@plt>
   1a2d4:	mov	x1, #0x400                 	// #1024
   1a2d8:	mov	w0, #0x0                   	// #0
   1a2dc:	stp	x21, x1, [x19]
   1a2e0:	b	1a28c <gl_scratch_buffer_grow_preserve@@Base+0x54>
   1a2e4:	ldr	x23, [x19]
   1a2e8:	b	1a2cc <gl_scratch_buffer_grow_preserve@@Base+0x94>
   1a2ec:	mov	w0, #0x0                   	// #0
   1a2f0:	b	1a28c <gl_scratch_buffer_grow_preserve@@Base+0x54>
   1a2f4:	nop

000000000001a2f8 <gl_scratch_buffer_set_array_size@@Base>:
   1a2f8:	stp	x29, x30, [sp, #-48]!
   1a2fc:	orr	x3, x1, x2
   1a300:	mov	x29, sp
   1a304:	stp	x19, x20, [sp, #16]
   1a308:	cmp	xzr, x3, lsr #32
   1a30c:	mul	x20, x1, x2
   1a310:	mov	x19, x0
   1a314:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1a318:	b.ne	1a36c <gl_scratch_buffer_set_array_size@@Base+0x74>  // b.any
   1a31c:	ldr	x1, [x19, #8]
   1a320:	mov	w0, #0x1                   	// #1
   1a324:	cmp	x1, x20
   1a328:	b.cs	1a360 <gl_scratch_buffer_set_array_size@@Base+0x68>  // b.hs, b.nlast
   1a32c:	str	x21, [sp, #32]
   1a330:	mov	x21, x19
   1a334:	ldr	x0, [x21], #16
   1a338:	cmp	x0, x21
   1a33c:	b.eq	1a344 <gl_scratch_buffer_set_array_size@@Base+0x4c>  // b.none
   1a340:	bl	aa50 <free@plt>
   1a344:	mov	x0, x20
   1a348:	bl	a5f0 <malloc@plt>
   1a34c:	mov	x1, x0
   1a350:	cbz	x0, 1a3b4 <gl_scratch_buffer_set_array_size@@Base+0xbc>
   1a354:	mov	w0, #0x1                   	// #1
   1a358:	ldr	x21, [sp, #32]
   1a35c:	stp	x1, x20, [x19]
   1a360:	ldp	x19, x20, [sp, #16]
   1a364:	ldp	x29, x30, [sp], #48
   1a368:	ret
   1a36c:	udiv	x1, x20, x1
   1a370:	cmp	x1, x2
   1a374:	b.eq	1a31c <gl_scratch_buffer_set_array_size@@Base+0x24>  // b.none
   1a378:	mov	x20, x0
   1a37c:	ldr	x0, [x20], #16
   1a380:	cmp	x0, x20
   1a384:	b.eq	1a38c <gl_scratch_buffer_set_array_size@@Base+0x94>  // b.none
   1a388:	bl	aa50 <free@plt>
   1a38c:	mov	x0, #0x400                 	// #1024
   1a390:	stp	x20, x0, [x19]
   1a394:	bl	aeb0 <__errno_location@plt>
   1a398:	mov	x1, x0
   1a39c:	mov	w2, #0xc                   	// #12
   1a3a0:	mov	w0, #0x0                   	// #0
   1a3a4:	ldp	x19, x20, [sp, #16]
   1a3a8:	str	w2, [x1]
   1a3ac:	ldp	x29, x30, [sp], #48
   1a3b0:	ret
   1a3b4:	mov	x1, #0x400                 	// #1024
   1a3b8:	mov	w0, #0x0                   	// #0
   1a3bc:	stp	x21, x1, [x19]
   1a3c0:	ldr	x21, [sp, #32]
   1a3c4:	b	1a360 <gl_scratch_buffer_set_array_size@@Base+0x68>

000000000001a3c8 <gl_set_nx_create_empty@@Base>:
   1a3c8:	ldr	x4, [x0]
   1a3cc:	mov	x16, x4
   1a3d0:	br	x16
   1a3d4:	nop

000000000001a3d8 <gl_set_size@@Base>:
   1a3d8:	ldr	x1, [x0]
   1a3dc:	ldr	x1, [x1, #8]
   1a3e0:	mov	x16, x1
   1a3e4:	br	x16

000000000001a3e8 <gl_set_search@@Base>:
   1a3e8:	ldr	x2, [x0]
   1a3ec:	ldr	x2, [x2, #16]
   1a3f0:	mov	x16, x2
   1a3f4:	br	x16

000000000001a3f8 <gl_set_nx_add@@Base>:
   1a3f8:	ldr	x2, [x0]
   1a3fc:	ldr	x2, [x2, #24]
   1a400:	mov	x16, x2
   1a404:	br	x16

000000000001a408 <gl_set_remove@@Base>:
   1a408:	ldr	x2, [x0]
   1a40c:	ldr	x2, [x2, #32]
   1a410:	mov	x16, x2
   1a414:	br	x16

000000000001a418 <gl_set_free@@Base>:
   1a418:	ldr	x1, [x0]
   1a41c:	ldr	x1, [x1, #40]
   1a420:	mov	x16, x1
   1a424:	br	x16

000000000001a428 <gl_set_iterator@@Base>:
   1a428:	stp	x29, x30, [sp, #-16]!
   1a42c:	mov	x29, sp
   1a430:	ldr	x1, [x0]
   1a434:	ldr	x1, [x1, #48]
   1a438:	blr	x1
   1a43c:	ldp	x29, x30, [sp], #16
   1a440:	ret
   1a444:	nop

000000000001a448 <gl_set_iterator_next@@Base>:
   1a448:	ldr	x2, [x0]
   1a44c:	ldr	x2, [x2, #56]
   1a450:	mov	x16, x2
   1a454:	br	x16

000000000001a458 <gl_set_iterator_free@@Base>:
   1a458:	ldr	x1, [x0]
   1a45c:	ldr	x1, [x1, #64]
   1a460:	mov	x16, x1
   1a464:	br	x16

000000000001a468 <get_handler@@Base>:
   1a468:	ldr	x0, [x0]
   1a46c:	ret

000000000001a470 <gl_sockets_startup@@Base>:
   1a470:	mov	w0, #0x0                   	// #0
   1a474:	ret

000000000001a478 <gl_sockets_cleanup@@Base>:
   1a478:	mov	w0, #0x0                   	// #0
   1a47c:	ret

000000000001a480 <get_stat_atime_ns@@Base>:
   1a480:	ldr	x0, [x0, #80]
   1a484:	ret

000000000001a488 <get_stat_ctime_ns@@Base>:
   1a488:	ldr	x0, [x0, #112]
   1a48c:	ret

000000000001a490 <get_stat_mtime_ns@@Base>:
   1a490:	ldr	x0, [x0, #96]
   1a494:	ret

000000000001a498 <get_stat_birthtime_ns@@Base>:
   1a498:	mov	x0, #0x0                   	// #0
   1a49c:	ret

000000000001a4a0 <get_stat_atime@@Base>:
   1a4a0:	ldp	x0, x1, [x0, #72]
   1a4a4:	ret

000000000001a4a8 <get_stat_ctime@@Base>:
   1a4a8:	ldp	x0, x1, [x0, #104]
   1a4ac:	ret

000000000001a4b0 <get_stat_mtime@@Base>:
   1a4b0:	ldp	x0, x1, [x0, #88]
   1a4b4:	ret

000000000001a4b8 <get_stat_birthtime@@Base>:
   1a4b8:	mov	x0, #0xffffffffffffffff    	// #-1
   1a4bc:	mov	x1, x0
   1a4c0:	ret
   1a4c4:	nop

000000000001a4c8 <stat_time_normalize@@Base>:
   1a4c8:	ret
   1a4cc:	nop

000000000001a4d0 <statat@@Base>:
   1a4d0:	mov	x4, x1
   1a4d4:	mov	x3, x2
   1a4d8:	mov	w1, w0
   1a4dc:	mov	x2, x4
   1a4e0:	mov	w0, #0x0                   	// #0
   1a4e4:	mov	w4, #0x0                   	// #0
   1a4e8:	b	afe0 <__fxstatat@plt>
   1a4ec:	nop

000000000001a4f0 <lstatat@@Base>:
   1a4f0:	mov	x4, x1
   1a4f4:	mov	x3, x2
   1a4f8:	mov	w1, w0
   1a4fc:	mov	x2, x4
   1a500:	mov	w0, #0x0                   	// #0
   1a504:	mov	w4, #0x100                 	// #256
   1a508:	b	afe0 <__fxstatat@plt>
   1a50c:	nop

000000000001a510 <stdopen@@Base>:
   1a510:	stp	x29, x30, [sp, #-48]!
   1a514:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1a518:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1a51c:	mov	x29, sp
   1a520:	stp	x19, x20, [sp, #16]
   1a524:	add	x20, x0, #0x378
   1a528:	mov	w19, #0x0                   	// #0
   1a52c:	mov	w0, w19
   1a530:	stp	x21, x22, [sp, #32]
   1a534:	add	x21, x1, #0x388
   1a538:	mov	w1, #0x1                   	// #1
   1a53c:	bl	abe0 <rpl_fcntl@plt>
   1a540:	tbnz	w0, #31, 1a560 <stdopen@@Base+0x50>
   1a544:	cmp	w19, #0x2
   1a548:	b.eq	1a590 <stdopen@@Base+0x80>  // b.none
   1a54c:	add	w19, w19, #0x1
   1a550:	mov	w0, w19
   1a554:	mov	w1, #0x1                   	// #1
   1a558:	bl	abe0 <rpl_fcntl@plt>
   1a55c:	tbz	w0, #31, 1a544 <stdopen@@Base+0x34>
   1a560:	cmp	w19, #0x0
   1a564:	cset	w22, eq  // eq = none
   1a568:	cbz	w19, 1a5a4 <stdopen@@Base+0x94>
   1a56c:	mov	w1, w22
   1a570:	mov	x0, x20
   1a574:	bl	a640 <open@plt>
   1a578:	tbnz	w0, #31, 1a5c4 <stdopen@@Base+0xb4>
   1a57c:	cmp	w0, #0x2
   1a580:	b.le	1a544 <stdopen@@Base+0x34>
   1a584:	bl	a850 <close@plt>
   1a588:	mov	w0, #0x0                   	// #0
   1a58c:	b	1a594 <stdopen@@Base+0x84>
   1a590:	mov	w0, #0x0                   	// #0
   1a594:	ldp	x19, x20, [sp, #16]
   1a598:	ldp	x21, x22, [sp, #32]
   1a59c:	ldp	x29, x30, [sp], #48
   1a5a0:	ret
   1a5a4:	mov	x0, x21
   1a5a8:	mov	w1, #0x1                   	// #1
   1a5ac:	bl	a640 <open@plt>
   1a5b0:	tbnz	w0, #31, 1a56c <stdopen@@Base+0x5c>
   1a5b4:	cmp	w0, #0x2
   1a5b8:	b.gt	1a584 <stdopen@@Base+0x74>
   1a5bc:	add	w19, w19, #0x1
   1a5c0:	b	1a550 <stdopen@@Base+0x40>
   1a5c4:	bl	aeb0 <__errno_location@plt>
   1a5c8:	ldr	w0, [x0]
   1a5cc:	b	1a594 <stdopen@@Base+0x84>

000000000001a5d0 <strnlen1@@Base>:
   1a5d0:	stp	x29, x30, [sp, #-32]!
   1a5d4:	mov	x2, x1
   1a5d8:	mov	x29, sp
   1a5dc:	stp	x19, x20, [sp, #16]
   1a5e0:	mov	x19, x0
   1a5e4:	mov	x20, x1
   1a5e8:	mov	w1, #0x0                   	// #0
   1a5ec:	bl	ac90 <memchr@plt>
   1a5f0:	sub	x19, x0, x19
   1a5f4:	cmp	x0, #0x0
   1a5f8:	csinc	x0, x20, x19, eq  // eq = none
   1a5fc:	ldp	x19, x20, [sp, #16]
   1a600:	ldp	x29, x30, [sp], #32
   1a604:	ret
   1a608:	stp	x29, x30, [sp, #-160]!
   1a60c:	mov	x1, x0
   1a610:	mov	w0, #0x0                   	// #0
   1a614:	add	x2, sp, #0x20
   1a618:	mov	x29, sp
   1a61c:	str	x19, [sp, #16]
   1a620:	bl	ac70 <__lxstat@plt>
   1a624:	mov	w19, w0
   1a628:	bl	aeb0 <__errno_location@plt>
   1a62c:	mov	x1, x0
   1a630:	cbz	w19, 1a654 <strnlen1@@Base+0x84>
   1a634:	ldr	w0, [x0]
   1a638:	cmp	w0, #0x4b
   1a63c:	b.eq	1a654 <strnlen1@@Base+0x84>  // b.none
   1a640:	cmp	w0, #0x2
   1a644:	csetm	w0, ne  // ne = any
   1a648:	ldr	x19, [sp, #16]
   1a64c:	ldp	x29, x30, [sp], #160
   1a650:	ret
   1a654:	mov	w2, #0x11                  	// #17
   1a658:	str	w2, [x1]
   1a65c:	mov	w0, #0xffffffff            	// #-1
   1a660:	ldr	x19, [sp, #16]
   1a664:	ldp	x29, x30, [sp], #160
   1a668:	ret
   1a66c:	nop
   1a670:	mov	w1, #0x1c0                 	// #448
   1a674:	b	af60 <mkdir@plt>
   1a678:	ldr	w3, [x1]
   1a67c:	mov	w5, #0xffffff3c            	// #-196
   1a680:	mov	w4, #0xc2                  	// #194
   1a684:	mov	w2, #0x180                 	// #384
   1a688:	and	w1, w3, w5
   1a68c:	orr	w1, w1, w4
   1a690:	b	a640 <open@plt>
   1a694:	nop

000000000001a698 <try_tempname@@Base>:
   1a698:	stp	x29, x30, [sp, #-128]!
   1a69c:	mov	x29, sp
   1a6a0:	stp	x19, x20, [sp, #16]
   1a6a4:	mov	w19, w1
   1a6a8:	mov	x20, x0
   1a6ac:	stp	x21, x22, [sp, #32]
   1a6b0:	mov	x22, x2
   1a6b4:	stp	x23, x24, [sp, #48]
   1a6b8:	mov	x23, x3
   1a6bc:	bl	aeb0 <__errno_location@plt>
   1a6c0:	mov	x21, x0
   1a6c4:	mov	x0, x20
   1a6c8:	bl	a340 <strlen@plt>
   1a6cc:	add	w1, w19, #0x5
   1a6d0:	cmp	w1, w0
   1a6d4:	ldr	w1, [x21]
   1a6d8:	str	w1, [sp, #108]
   1a6dc:	b.ge	1a708 <try_tempname@@Base+0x70>  // b.tcont
   1a6e0:	sub	w0, w0, #0x6
   1a6e4:	stp	x25, x26, [sp, #64]
   1a6e8:	sub	w0, w0, w19
   1a6ec:	mov	w1, #0x5858                	// #22616
   1a6f0:	add	x26, x20, w0, sxtw
   1a6f4:	movk	w1, #0x5858, lsl #16
   1a6f8:	ldr	w0, [x20, w0, sxtw]
   1a6fc:	cmp	w0, w1
   1a700:	b.eq	1a728 <try_tempname@@Base+0x90>  // b.none
   1a704:	ldp	x25, x26, [sp, #64]
   1a708:	mov	w1, #0x16                  	// #22
   1a70c:	str	w1, [x21]
   1a710:	mov	w0, #0xffffffff            	// #-1
   1a714:	ldp	x19, x20, [sp, #16]
   1a718:	ldp	x21, x22, [sp, #32]
   1a71c:	ldp	x23, x24, [sp, #48]
   1a720:	ldp	x29, x30, [sp], #128
   1a724:	ret
   1a728:	ldrh	w1, [x26, #4]
   1a72c:	mov	w0, #0x5858                	// #22616
   1a730:	cmp	w1, w0
   1a734:	b.ne	1a704 <try_tempname@@Base+0x6c>  // b.any
   1a738:	mov	x1, #0x0                   	// #0
   1a73c:	add	x0, sp, #0x70
   1a740:	stp	x27, x28, [sp, #80]
   1a744:	bl	a700 <gettimeofday@plt>
   1a748:	adrp	x25, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1a74c:	ldp	x27, x3, [sp, #112]
   1a750:	mov	x28, #0x2109                	// #8457
   1a754:	movk	x28, #0x1084, lsl #16
   1a758:	mov	w19, #0xa2f8                	// #41720
   1a75c:	movk	x28, #0x842, lsl #32
   1a760:	movk	w19, #0x3, lsl #16
   1a764:	movk	x28, #0x8421, lsl #48
   1a768:	mov	x24, #0x1e61                	// #7777
   1a76c:	eor	x27, x27, x3, lsl #16
   1a770:	bl	a5b0 <getpid@plt>
   1a774:	ldr	x6, [x25, #1088]
   1a778:	sxtw	x3, w0
   1a77c:	eor	x3, x3, x27
   1a780:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1a784:	add	x3, x3, x6
   1a788:	add	x27, x1, #0x3d8
   1a78c:	str	x3, [x25, #1088]
   1a790:	b	1a7b4 <try_tempname@@Base+0x11c>
   1a794:	ldr	w0, [x21]
   1a798:	cmp	w0, #0x11
   1a79c:	b.ne	1a8a8 <try_tempname@@Base+0x210>  // b.any
   1a7a0:	ldr	x6, [x25, #1088]
   1a7a4:	subs	w19, w19, #0x1
   1a7a8:	add	x3, x6, x24
   1a7ac:	str	x3, [x25, #1088]
   1a7b0:	b.eq	1a8a8 <try_tempname@@Base+0x210>  // b.none
   1a7b4:	lsr	x2, x3, #1
   1a7b8:	mov	x1, x22
   1a7bc:	mov	x0, x20
   1a7c0:	umulh	x2, x2, x28
   1a7c4:	lsr	x4, x2, #5
   1a7c8:	lsr	x2, x2, #4
   1a7cc:	lsl	x6, x2, #5
   1a7d0:	umulh	x4, x4, x28
   1a7d4:	sub	x6, x6, x2
   1a7d8:	sub	x6, x3, x6, lsl #1
   1a7dc:	lsr	x3, x4, #5
   1a7e0:	lsr	x4, x4, #4
   1a7e4:	lsl	x7, x4, #5
   1a7e8:	ldrb	w6, [x27, x6]
   1a7ec:	umulh	x3, x3, x28
   1a7f0:	sub	x7, x7, x4
   1a7f4:	strb	w6, [x26]
   1a7f8:	sub	x7, x2, x7, lsl #1
   1a7fc:	lsr	x2, x3, #5
   1a800:	lsr	x3, x3, #4
   1a804:	lsl	x6, x3, #5
   1a808:	ldrb	w7, [x27, x7]
   1a80c:	umulh	x2, x2, x28
   1a810:	sub	x6, x6, x3
   1a814:	strb	w7, [x26, #1]
   1a818:	sub	x6, x4, x6, lsl #1
   1a81c:	lsr	x4, x2, #5
   1a820:	lsr	x2, x2, #4
   1a824:	lsl	x7, x2, #5
   1a828:	ldrb	w6, [x27, x6]
   1a82c:	umulh	x4, x4, x28
   1a830:	sub	x7, x7, x2
   1a834:	strb	w6, [x26, #2]
   1a838:	sub	x7, x3, x7, lsl #1
   1a83c:	lsr	x3, x4, #5
   1a840:	lsr	x4, x4, #4
   1a844:	lsl	x6, x4, #5
   1a848:	ldrb	w7, [x27, x7]
   1a84c:	umulh	x3, x3, x28
   1a850:	sub	x6, x6, x4
   1a854:	strb	w7, [x26, #3]
   1a858:	sub	x2, x2, x6, lsl #1
   1a85c:	lsr	x3, x3, #4
   1a860:	lsl	x6, x3, #5
   1a864:	ldrb	w2, [x27, x2]
   1a868:	sub	x3, x6, x3
   1a86c:	strb	w2, [x26, #4]
   1a870:	sub	x4, x4, x3, lsl #1
   1a874:	ldrb	w2, [x27, x4]
   1a878:	strb	w2, [x26, #5]
   1a87c:	blr	x23
   1a880:	tbnz	w0, #31, 1a794 <try_tempname@@Base+0xfc>
   1a884:	ldr	w1, [sp, #108]
   1a888:	ldp	x25, x26, [sp, #64]
   1a88c:	ldp	x27, x28, [sp, #80]
   1a890:	str	w1, [x21]
   1a894:	ldp	x19, x20, [sp, #16]
   1a898:	ldp	x21, x22, [sp, #32]
   1a89c:	ldp	x23, x24, [sp, #48]
   1a8a0:	ldp	x29, x30, [sp], #128
   1a8a4:	ret
   1a8a8:	mov	w0, #0xffffffff            	// #-1
   1a8ac:	ldp	x19, x20, [sp, #16]
   1a8b0:	ldp	x21, x22, [sp, #32]
   1a8b4:	ldp	x23, x24, [sp, #48]
   1a8b8:	ldp	x25, x26, [sp, #64]
   1a8bc:	ldp	x27, x28, [sp, #80]
   1a8c0:	ldp	x29, x30, [sp], #128
   1a8c4:	ret

000000000001a8c8 <gen_tempname@@Base>:
   1a8c8:	stp	x29, x30, [sp, #-32]!
   1a8cc:	cmp	w3, #0x1
   1a8d0:	mov	x29, sp
   1a8d4:	str	w2, [sp, #28]
   1a8d8:	b.eq	1a93c <gen_tempname@@Base+0x74>  // b.none
   1a8dc:	cmp	w3, #0x2
   1a8e0:	b.eq	1a90c <gen_tempname@@Base+0x44>  // b.none
   1a8e4:	cbz	w3, 1a924 <gen_tempname@@Base+0x5c>
   1a8e8:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   1a8ec:	add	x3, x3, #0x3d8
   1a8f0:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1a8f4:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1a8f8:	add	x3, x3, #0x40
   1a8fc:	add	x1, x1, #0x3a0
   1a900:	add	x0, x0, #0x3b0
   1a904:	mov	w2, #0x13f                 	// #319
   1a908:	bl	aea0 <__assert_fail@plt>
   1a90c:	add	x2, sp, #0x1c
   1a910:	adrp	x3, 1a000 <same_nameat@@Base+0xa0>
   1a914:	add	x3, x3, #0x608
   1a918:	bl	a810 <try_tempname@plt>
   1a91c:	ldp	x29, x30, [sp], #32
   1a920:	ret
   1a924:	add	x2, sp, #0x1c
   1a928:	adrp	x3, 1a000 <same_nameat@@Base+0xa0>
   1a92c:	add	x3, x3, #0x678
   1a930:	bl	a810 <try_tempname@plt>
   1a934:	ldp	x29, x30, [sp], #32
   1a938:	ret
   1a93c:	add	x2, sp, #0x1c
   1a940:	adrp	x3, 1a000 <same_nameat@@Base+0xa0>
   1a944:	add	x3, x3, #0x670
   1a948:	bl	a810 <try_tempname@plt>
   1a94c:	ldp	x29, x30, [sp], #32
   1a950:	ret
   1a954:	nop

000000000001a958 <make_timespec@@Base>:
   1a958:	ret
   1a95c:	nop

000000000001a960 <timespec_cmp@@Base>:
   1a960:	cmp	x0, x2
   1a964:	b.lt	1a974 <timespec_cmp@@Base+0x14>  // b.tstop
   1a968:	sub	w1, w1, w3
   1a96c:	csinc	w0, w1, wzr, le
   1a970:	ret
   1a974:	mov	w0, #0xffffffff            	// #-1
   1a978:	ret
   1a97c:	nop

000000000001a980 <timespec_sign@@Base>:
   1a980:	tbnz	x0, #63, 1a994 <timespec_sign@@Base+0x14>
   1a984:	orr	x0, x0, x1
   1a988:	cmp	x0, #0x0
   1a98c:	cset	w0, ne  // ne = any
   1a990:	ret
   1a994:	mov	w0, #0xffffffff            	// #-1
   1a998:	ret
   1a99c:	nop

000000000001a9a0 <timespectod@@Base>:
   1a9a0:	scvtf	d1, x1
   1a9a4:	mov	x2, #0xcd6500000000        	// #225833675390976
   1a9a8:	movk	x2, #0x41cd, lsl #48
   1a9ac:	fmov	d0, x2
   1a9b0:	scvtf	d2, x0
   1a9b4:	fdiv	d0, d1, d0
   1a9b8:	fadd	d0, d0, d2
   1a9bc:	ret

000000000001a9c0 <dup_safer@@Base>:
   1a9c0:	mov	w2, #0x3                   	// #3
   1a9c4:	mov	w1, #0x0                   	// #0
   1a9c8:	b	abe0 <rpl_fcntl@plt>
   1a9cc:	nop

000000000001a9d0 <fd_safer@@Base>:
   1a9d0:	stp	x29, x30, [sp, #-48]!
   1a9d4:	cmp	w0, #0x2
   1a9d8:	mov	x29, sp
   1a9dc:	stp	x19, x20, [sp, #16]
   1a9e0:	mov	w19, w0
   1a9e4:	b.ls	1a9f8 <fd_safer@@Base+0x28>  // b.plast
   1a9e8:	mov	w0, w19
   1a9ec:	ldp	x19, x20, [sp, #16]
   1a9f0:	ldp	x29, x30, [sp], #48
   1a9f4:	ret
   1a9f8:	str	x21, [sp, #32]
   1a9fc:	bl	aa40 <dup_safer@plt>
   1aa00:	mov	w21, w0
   1aa04:	bl	aeb0 <__errno_location@plt>
   1aa08:	mov	x20, x0
   1aa0c:	mov	w0, w19
   1aa10:	mov	w19, w21
   1aa14:	ldr	w21, [x20]
   1aa18:	bl	a850 <close@plt>
   1aa1c:	str	w21, [x20]
   1aa20:	mov	w0, w19
   1aa24:	ldp	x19, x20, [sp, #16]
   1aa28:	ldr	x21, [sp, #32]
   1aa2c:	ldp	x29, x30, [sp], #48
   1aa30:	ret
   1aa34:	nop

000000000001aa38 <pipe_safer@@Base>:
   1aa38:	stp	x29, x30, [sp, #-48]!
   1aa3c:	mov	x29, sp
   1aa40:	stp	x19, x20, [sp, #16]
   1aa44:	mov	x19, x0
   1aa48:	bl	a4b0 <pipe@plt>
   1aa4c:	cbnz	w0, 1aab8 <pipe_safer@@Base+0x80>
   1aa50:	mov	w20, w0
   1aa54:	ldr	w0, [x19]
   1aa58:	bl	af30 <fd_safer@plt>
   1aa5c:	str	w0, [x19]
   1aa60:	tbnz	w0, #31, 1aa84 <pipe_safer@@Base+0x4c>
   1aa64:	ldr	w0, [x19, #4]
   1aa68:	bl	af30 <fd_safer@plt>
   1aa6c:	str	w0, [x19, #4]
   1aa70:	tbnz	w0, #31, 1aab0 <pipe_safer@@Base+0x78>
   1aa74:	mov	w0, w20
   1aa78:	ldp	x19, x20, [sp, #16]
   1aa7c:	ldp	x29, x30, [sp], #48
   1aa80:	ret
   1aa84:	add	x19, x19, #0x4
   1aa88:	str	x21, [sp, #32]
   1aa8c:	bl	aeb0 <__errno_location@plt>
   1aa90:	mov	x21, x0
   1aa94:	ldr	w0, [x19]
   1aa98:	mov	w20, #0xffffffff            	// #-1
   1aa9c:	ldr	w19, [x21]
   1aaa0:	bl	a850 <close@plt>
   1aaa4:	str	w19, [x21]
   1aaa8:	ldr	x21, [sp, #32]
   1aaac:	b	1aa74 <pipe_safer@@Base+0x3c>
   1aab0:	str	x21, [sp, #32]
   1aab4:	b	1aa8c <pipe_safer@@Base+0x54>
   1aab8:	mov	w20, #0xffffffff            	// #-1
   1aabc:	b	1aa74 <pipe_safer@@Base+0x3c>
   1aac0:	stp	x29, x30, [sp, #-48]!
   1aac4:	mov	x3, #0x3ffffffe            	// #1073741822
   1aac8:	mov	x29, sp
   1aacc:	stp	x19, x20, [sp, #16]
   1aad0:	mov	x20, x0
   1aad4:	ldr	x19, [x1]
   1aad8:	ldr	x0, [x19, #8]
   1aadc:	ldr	x2, [x19, #24]
   1aae0:	str	x21, [sp, #32]
   1aae4:	cmp	x0, x3
   1aae8:	b.eq	1ab24 <pipe_safer@@Base+0xec>  // b.none
   1aaec:	mov	x3, #0x3fffffff            	// #1073741823
   1aaf0:	cmp	x0, x3
   1aaf4:	b.eq	1ab64 <pipe_safer@@Base+0x12c>  // b.none
   1aaf8:	mov	x0, #0x3ffffffe            	// #1073741822
   1aafc:	cmp	x2, x0
   1ab00:	b.ne	1ab38 <pipe_safer@@Base+0x100>  // b.any
   1ab04:	ldp	x1, x0, [x20, #88]
   1ab08:	mov	w21, #0x0                   	// #0
   1ab0c:	stp	x1, x0, [x19, #16]
   1ab10:	mov	w0, w21
   1ab14:	ldp	x19, x20, [sp, #16]
   1ab18:	ldr	x21, [sp, #32]
   1ab1c:	ldp	x29, x30, [sp], #48
   1ab20:	ret
   1ab24:	cmp	x2, x0
   1ab28:	mov	w21, #0x1                   	// #1
   1ab2c:	b.eq	1ab10 <pipe_safer@@Base+0xd8>  // b.none
   1ab30:	ldp	x1, x0, [x20, #72]
   1ab34:	stp	x1, x0, [x19]
   1ab38:	mov	x0, #0x3fffffff            	// #1073741823
   1ab3c:	mov	w21, #0x0                   	// #0
   1ab40:	cmp	x2, x0
   1ab44:	b.ne	1ab10 <pipe_safer@@Base+0xd8>  // b.any
   1ab48:	add	x0, x19, #0x10
   1ab4c:	bl	af80 <gettime@plt>
   1ab50:	mov	w0, w21
   1ab54:	ldp	x19, x20, [sp, #16]
   1ab58:	ldr	x21, [sp, #32]
   1ab5c:	ldp	x29, x30, [sp], #48
   1ab60:	ret
   1ab64:	cmp	x2, x0
   1ab68:	b.eq	1ab88 <pipe_safer@@Base+0x150>  // b.none
   1ab6c:	mov	x0, x19
   1ab70:	bl	af80 <gettime@plt>
   1ab74:	ldr	x2, [x19, #24]
   1ab78:	mov	x0, #0x3ffffffe            	// #1073741822
   1ab7c:	cmp	x2, x0
   1ab80:	b.eq	1ab04 <pipe_safer@@Base+0xcc>  // b.none
   1ab84:	b	1ab38 <pipe_safer@@Base+0x100>
   1ab88:	mov	w21, #0x0                   	// #0
   1ab8c:	str	xzr, [x1]
   1ab90:	b	1ab10 <pipe_safer@@Base+0xd8>
   1ab94:	nop
   1ab98:	ldr	x3, [x0, #8]
   1ab9c:	mov	x1, #0xffffffffffff0002    	// #-65534
   1aba0:	movk	x1, #0xc000, lsl #16
   1aba4:	mov	x2, #0xc9ff                	// #51711
   1aba8:	add	x5, x3, x1
   1abac:	movk	x2, #0x3b9a, lsl #16
   1abb0:	cmp	x5, #0x1
   1abb4:	ccmp	x3, x2, #0x0, hi  // hi = pmore
   1abb8:	b.hi	1ac20 <pipe_safer@@Base+0x1e8>  // b.pmore
   1abbc:	ldr	x4, [x0, #24]
   1abc0:	add	x1, x4, x1
   1abc4:	cmp	x1, #0x1
   1abc8:	ccmp	x4, x2, #0x0, hi  // hi = pmore
   1abcc:	b.hi	1ac20 <pipe_safer@@Base+0x1e8>  // b.pmore
   1abd0:	cmp	x5, #0x1
   1abd4:	mov	w2, #0x0                   	// #0
   1abd8:	mov	w5, #0x0                   	// #0
   1abdc:	b.hi	1abf4 <pipe_safer@@Base+0x1bc>  // b.pmore
   1abe0:	mov	x2, #0x3ffffffe            	// #1073741822
   1abe4:	cmp	x3, x2
   1abe8:	cset	w5, eq  // eq = none
   1abec:	mov	w2, #0x1                   	// #1
   1abf0:	str	xzr, [x0]
   1abf4:	cmp	x1, #0x1
   1abf8:	b.hi	1ac14 <pipe_safer@@Base+0x1dc>  // b.pmore
   1abfc:	mov	x1, #0x3ffffffe            	// #1073741822
   1ac00:	cmp	x4, x1
   1ac04:	cset	w1, eq  // eq = none
   1ac08:	mov	w2, #0x1                   	// #1
   1ac0c:	add	w5, w5, w1
   1ac10:	str	xzr, [x0, #16]
   1ac14:	cmp	w5, #0x1
   1ac18:	cinc	w0, w2, eq  // eq = none
   1ac1c:	ret
   1ac20:	stp	x29, x30, [sp, #-16]!
   1ac24:	mov	x29, sp
   1ac28:	bl	aeb0 <__errno_location@plt>
   1ac2c:	mov	x1, x0
   1ac30:	mov	w2, #0x16                  	// #22
   1ac34:	mov	w0, #0xffffffff            	// #-1
   1ac38:	str	w2, [x1]
   1ac3c:	ldp	x29, x30, [sp], #16
   1ac40:	ret
   1ac44:	nop

000000000001ac48 <fdutimens@@Base>:
   1ac48:	stp	x29, x30, [sp, #-304]!
   1ac4c:	mov	x29, sp
   1ac50:	stp	x19, x20, [sp, #16]
   1ac54:	mov	w19, w0
   1ac58:	stp	x21, x22, [sp, #32]
   1ac5c:	mov	x21, x1
   1ac60:	cbz	x2, 1ae40 <fdutimens@@Base+0x1f8>
   1ac64:	ldp	x4, x5, [x2]
   1ac68:	add	x0, sp, #0x50
   1ac6c:	ldp	x2, x3, [x2, #16]
   1ac70:	str	x0, [sp, #72]
   1ac74:	stp	x4, x5, [sp, #80]
   1ac78:	stp	x2, x3, [sp, #96]
   1ac7c:	bl	1ab98 <pipe_safer@@Base+0x160>
   1ac80:	mov	w22, w0
   1ac84:	tbnz	w0, #31, 1afac <fdutimens@@Base+0x364>
   1ac88:	cmp	w19, #0x0
   1ac8c:	ccmp	x21, #0x0, #0x0, lt  // lt = tstop
   1ac90:	b.eq	1afdc <fdutimens@@Base+0x394>  // b.none
   1ac94:	str	x23, [sp, #48]
   1ac98:	adrp	x23, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1ac9c:	ldr	w0, [x23, #1096]
   1aca0:	tbnz	w0, #31, 1acd4 <fdutimens@@Base+0x8c>
   1aca4:	cmp	w22, #0x2
   1aca8:	b.eq	1ae4c <fdutimens@@Base+0x204>  // b.none
   1acac:	ldr	x1, [sp, #72]
   1acb0:	tbnz	w19, #31, 1aea0 <fdutimens@@Base+0x258>
   1acb4:	mov	w0, w19
   1acb8:	bl	a6b0 <futimens@plt>
   1acbc:	mov	w20, w0
   1acc0:	cmp	w0, #0x0
   1acc4:	b.le	1aec0 <fdutimens@@Base+0x278>
   1acc8:	bl	aeb0 <__errno_location@plt>
   1accc:	mov	w1, #0x26                  	// #38
   1acd0:	str	w1, [x0]
   1acd4:	add	x1, x23, #0x448
   1acd8:	mov	w0, #0xffffffff            	// #-1
   1acdc:	str	w0, [x23, #1096]
   1ace0:	str	w0, [x1, #4]
   1ace4:	cbz	w22, 1ad30 <fdutimens@@Base+0xe8>
   1ace8:	cmp	w22, #0x3
   1acec:	b.eq	1ad10 <fdutimens@@Base+0xc8>  // b.none
   1acf0:	add	x2, sp, #0xb0
   1acf4:	tbnz	w19, #31, 1aee4 <fdutimens@@Base+0x29c>
   1acf8:	mov	w1, w19
   1acfc:	mov	w0, #0x0                   	// #0
   1ad00:	bl	ad40 <__fxstat@plt>
   1ad04:	cmp	w0, #0x0
   1ad08:	cset	w0, ne  // ne = any
   1ad0c:	cbnz	w0, 1afa8 <fdutimens@@Base+0x360>
   1ad10:	ldr	x0, [sp, #72]
   1ad14:	cbz	x0, 1adc4 <fdutimens@@Base+0x17c>
   1ad18:	add	x1, sp, #0x48
   1ad1c:	add	x0, sp, #0xb0
   1ad20:	mov	w20, #0x0                   	// #0
   1ad24:	bl	1aac0 <pipe_safer@@Base+0x88>
   1ad28:	tst	w0, #0xff
   1ad2c:	b.ne	1ae28 <fdutimens@@Base+0x1e0>  // b.any
   1ad30:	ldr	x1, [sp, #72]
   1ad34:	cbz	x1, 1adc4 <fdutimens@@Base+0x17c>
   1ad38:	ldp	x5, x3, [x1]
   1ad3c:	mov	x0, #0xf7cf                	// #63439
   1ad40:	movk	x0, #0xe353, lsl #16
   1ad44:	add	x22, sp, #0x70
   1ad48:	ldr	x2, [x1, #24]
   1ad4c:	movk	x0, #0x9ba5, lsl #32
   1ad50:	movk	x0, #0x20c4, lsl #48
   1ad54:	ldr	x1, [x1, #16]
   1ad58:	smulh	x4, x3, x0
   1ad5c:	smulh	x0, x2, x0
   1ad60:	asr	x4, x4, #7
   1ad64:	asr	x0, x0, #7
   1ad68:	sub	x3, x4, x3, asr #63
   1ad6c:	sub	x0, x0, x2, asr #63
   1ad70:	stp	x5, x3, [sp, #112]
   1ad74:	mov	x2, x22
   1ad78:	stp	x1, x0, [sp, #128]
   1ad7c:	tbnz	w19, #31, 1add0 <fdutimens@@Base+0x188>
   1ad80:	mov	w0, w19
   1ad84:	mov	x1, #0x0                   	// #0
   1ad88:	bl	a610 <futimesat@plt>
   1ad8c:	mov	w20, w0
   1ad90:	cbz	w0, 1adf8 <fdutimens@@Base+0x1b0>
   1ad94:	mov	w20, #0xffffffff            	// #-1
   1ad98:	cbz	x21, 1ae28 <fdutimens@@Base+0x1e0>
   1ad9c:	mov	x1, x22
   1ada0:	mov	x0, x21
   1ada4:	bl	ad20 <utimes@plt>
   1ada8:	mov	w20, w0
   1adac:	ldr	x23, [sp, #48]
   1adb0:	mov	w0, w20
   1adb4:	ldp	x19, x20, [sp, #16]
   1adb8:	ldp	x21, x22, [sp, #32]
   1adbc:	ldp	x29, x30, [sp], #304
   1adc0:	ret
   1adc4:	mov	x22, #0x0                   	// #0
   1adc8:	mov	x2, x22
   1adcc:	tbz	w19, #31, 1ad80 <fdutimens@@Base+0x138>
   1add0:	mov	x1, x21
   1add4:	mov	w0, #0xffffff9c            	// #-100
   1add8:	bl	a610 <futimesat@plt>
   1addc:	mov	w20, w0
   1ade0:	mov	w0, w20
   1ade4:	ldp	x19, x20, [sp, #16]
   1ade8:	ldp	x21, x22, [sp, #32]
   1adec:	ldr	x23, [sp, #48]
   1adf0:	ldp	x29, x30, [sp], #304
   1adf4:	ret
   1adf8:	cbz	x22, 1ae28 <fdutimens@@Base+0x1e0>
   1adfc:	ldr	x3, [x22, #8]
   1ae00:	mov	x1, #0xa11f                	// #41247
   1ae04:	ldr	x2, [x22, #24]
   1ae08:	movk	x1, #0x7, lsl #16
   1ae0c:	cmp	x3, x1
   1ae10:	cset	w23, gt
   1ae14:	cmp	x2, x1
   1ae18:	cset	w21, gt
   1ae1c:	cmp	w23, #0x0
   1ae20:	ccmp	w21, #0x0, #0x0, eq  // eq = none
   1ae24:	b.ne	1af28 <fdutimens@@Base+0x2e0>  // b.any
   1ae28:	mov	w0, w20
   1ae2c:	ldp	x19, x20, [sp, #16]
   1ae30:	ldp	x21, x22, [sp, #32]
   1ae34:	ldr	x23, [sp, #48]
   1ae38:	ldp	x29, x30, [sp], #304
   1ae3c:	ret
   1ae40:	mov	w22, #0x0                   	// #0
   1ae44:	str	xzr, [sp, #72]
   1ae48:	b	1ac88 <fdutimens@@Base+0x40>
   1ae4c:	add	x2, sp, #0xb0
   1ae50:	tbnz	w19, #31, 1af00 <fdutimens@@Base+0x2b8>
   1ae54:	mov	w1, w19
   1ae58:	mov	w0, #0x0                   	// #0
   1ae5c:	bl	ad40 <__fxstat@plt>
   1ae60:	cmp	w0, #0x0
   1ae64:	cset	w0, ne  // ne = any
   1ae68:	cbnz	w0, 1afa8 <fdutimens@@Base+0x360>
   1ae6c:	ldr	x1, [sp, #72]
   1ae70:	mov	x0, #0x3ffffffe            	// #1073741822
   1ae74:	ldr	x2, [x1, #8]
   1ae78:	cmp	x2, x0
   1ae7c:	b.eq	1af18 <fdutimens@@Base+0x2d0>  // b.none
   1ae80:	ldr	x2, [x1, #24]
   1ae84:	mov	w22, #0x3                   	// #3
   1ae88:	cmp	x2, x0
   1ae8c:	b.ne	1acb0 <fdutimens@@Base+0x68>  // b.any
   1ae90:	ldp	x2, x0, [sp, #264]
   1ae94:	stp	x2, x0, [x1, #16]
   1ae98:	tbz	w19, #31, 1acb4 <fdutimens@@Base+0x6c>
   1ae9c:	nop
   1aea0:	mov	x2, x1
   1aea4:	mov	w3, #0x0                   	// #0
   1aea8:	mov	x1, x21
   1aeac:	mov	w0, #0xffffff9c            	// #-100
   1aeb0:	bl	aba0 <utimensat@plt>
   1aeb4:	mov	w20, w0
   1aeb8:	cmp	w0, #0x0
   1aebc:	b.gt	1acc8 <fdutimens@@Base+0x80>
   1aec0:	b.ne	1afb4 <fdutimens@@Base+0x36c>  // b.any
   1aec4:	mov	w0, #0x1                   	// #1
   1aec8:	str	w0, [x23, #1096]
   1aecc:	mov	w0, w20
   1aed0:	ldp	x19, x20, [sp, #16]
   1aed4:	ldp	x21, x22, [sp, #32]
   1aed8:	ldr	x23, [sp, #48]
   1aedc:	ldp	x29, x30, [sp], #304
   1aee0:	ret
   1aee4:	mov	x1, x21
   1aee8:	mov	w0, #0x0                   	// #0
   1aeec:	bl	aef0 <__xstat@plt>
   1aef0:	cmp	w0, #0x0
   1aef4:	cset	w0, ne  // ne = any
   1aef8:	cbz	w0, 1ad10 <fdutimens@@Base+0xc8>
   1aefc:	b	1afa8 <fdutimens@@Base+0x360>
   1af00:	mov	x1, x21
   1af04:	mov	w0, #0x0                   	// #0
   1af08:	bl	aef0 <__xstat@plt>
   1af0c:	cmp	w0, #0x0
   1af10:	cset	w0, ne  // ne = any
   1af14:	b	1ae68 <fdutimens@@Base+0x220>
   1af18:	ldp	x2, x0, [sp, #248]
   1af1c:	mov	w22, #0x3                   	// #3
   1af20:	stp	x2, x0, [x1]
   1af24:	b	1acb0 <fdutimens@@Base+0x68>
   1af28:	add	x2, sp, #0xb0
   1af2c:	mov	w1, w19
   1af30:	bl	ad40 <__fxstat@plt>
   1af34:	cbnz	w0, 1ae28 <fdutimens@@Base+0x1e0>
   1af38:	ldr	x2, [x22, #16]
   1af3c:	ldr	x1, [sp, #264]
   1af40:	ldp	x4, x5, [x22]
   1af44:	sub	x1, x1, x2
   1af48:	ldr	x2, [x22]
   1af4c:	stp	x4, x5, [sp, #144]
   1af50:	cmp	x1, #0x1
   1af54:	ldr	x0, [sp, #248]
   1af58:	csel	w21, w21, wzr, eq  // eq = none
   1af5c:	ldp	x4, x5, [x22, #16]
   1af60:	stp	x4, x5, [sp, #160]
   1af64:	cmp	w23, #0x0
   1af68:	sub	x0, x0, x2
   1af6c:	ccmp	x0, #0x1, #0x0, ne  // ne = any
   1af70:	b.ne	1afc8 <fdutimens@@Base+0x380>  // b.any
   1af74:	ldr	x0, [sp, #256]
   1af78:	cbnz	x0, 1afc8 <fdutimens@@Base+0x380>
   1af7c:	str	xzr, [sp, #152]
   1af80:	cbz	w21, 1af8c <fdutimens@@Base+0x344>
   1af84:	ldr	x0, [sp, #272]
   1af88:	cbz	x0, 1afd4 <fdutimens@@Base+0x38c>
   1af8c:	mov	w0, w19
   1af90:	add	x2, sp, #0x90
   1af94:	mov	x1, #0x0                   	// #0
   1af98:	bl	a610 <futimesat@plt>
   1af9c:	mov	w20, #0x0                   	// #0
   1afa0:	ldr	x23, [sp, #48]
   1afa4:	b	1adb0 <fdutimens@@Base+0x168>
   1afa8:	ldr	x23, [sp, #48]
   1afac:	mov	w20, #0xffffffff            	// #-1
   1afb0:	b	1adb0 <fdutimens@@Base+0x168>
   1afb4:	bl	aeb0 <__errno_location@plt>
   1afb8:	ldr	w0, [x0]
   1afbc:	cmp	w0, #0x26
   1afc0:	b.ne	1aec4 <fdutimens@@Base+0x27c>  // b.any
   1afc4:	b	1acd4 <fdutimens@@Base+0x8c>
   1afc8:	cbz	w21, 1af9c <fdutimens@@Base+0x354>
   1afcc:	ldr	x0, [sp, #272]
   1afd0:	cbnz	x0, 1af9c <fdutimens@@Base+0x354>
   1afd4:	str	xzr, [sp, #168]
   1afd8:	b	1af8c <fdutimens@@Base+0x344>
   1afdc:	bl	aeb0 <__errno_location@plt>
   1afe0:	mov	w20, #0xffffffff            	// #-1
   1afe4:	mov	w1, #0x9                   	// #9
   1afe8:	str	w1, [x0]
   1afec:	b	1adb0 <fdutimens@@Base+0x168>

000000000001aff0 <utimens@@Base>:
   1aff0:	mov	x2, x1
   1aff4:	mov	x1, x0
   1aff8:	mov	w0, #0xffffffff            	// #-1
   1affc:	b	a960 <fdutimens@plt>

000000000001b000 <lutimens@@Base>:
   1b000:	stp	x29, x30, [sp, #-224]!
   1b004:	mov	x2, x1
   1b008:	mov	x29, sp
   1b00c:	stp	x19, x20, [sp, #16]
   1b010:	mov	x20, x0
   1b014:	stp	x21, x22, [sp, #32]
   1b018:	cbz	x1, 1b128 <lutimens@@Base+0x128>
   1b01c:	ldp	x4, x5, [x1]
   1b020:	add	x0, sp, #0x40
   1b024:	ldp	x2, x3, [x1, #16]
   1b028:	str	x0, [sp, #56]
   1b02c:	stp	x4, x5, [sp, #64]
   1b030:	stp	x2, x3, [sp, #80]
   1b034:	bl	1ab98 <pipe_safer@@Base+0x160>
   1b038:	mov	w21, w0
   1b03c:	tbnz	w0, #31, 1b160 <lutimens@@Base+0x160>
   1b040:	adrp	x22, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b044:	add	x0, x22, #0x448
   1b048:	ldr	w0, [x0, #4]
   1b04c:	tbnz	w0, #31, 1b0b8 <lutimens@@Base+0xb8>
   1b050:	cmp	w21, #0x2
   1b054:	b.ne	1b1b0 <lutimens@@Base+0x1b0>  // b.any
   1b058:	add	x2, sp, #0x60
   1b05c:	mov	x1, x20
   1b060:	mov	w0, #0x0                   	// #0
   1b064:	bl	ac70 <__lxstat@plt>
   1b068:	cbnz	w0, 1b160 <lutimens@@Base+0x160>
   1b06c:	ldr	x2, [sp, #56]
   1b070:	mov	x0, #0x3ffffffe            	// #1073741822
   1b074:	ldr	x1, [x2, #8]
   1b078:	cmp	x1, x0
   1b07c:	b.eq	1b1b8 <lutimens@@Base+0x1b8>  // b.none
   1b080:	ldr	x1, [x2, #24]
   1b084:	mov	w21, #0x3                   	// #3
   1b088:	cmp	x1, x0
   1b08c:	b.eq	1b1c8 <lutimens@@Base+0x1c8>  // b.none
   1b090:	mov	x1, x20
   1b094:	mov	w3, #0x100                 	// #256
   1b098:	mov	w0, #0xffffff9c            	// #-100
   1b09c:	bl	aba0 <utimensat@plt>
   1b0a0:	mov	w19, w0
   1b0a4:	cmp	w0, #0x0
   1b0a8:	b.le	1b168 <lutimens@@Base+0x168>
   1b0ac:	bl	aeb0 <__errno_location@plt>
   1b0b0:	mov	w1, #0x26                  	// #38
   1b0b4:	str	w1, [x0]
   1b0b8:	add	x22, x22, #0x448
   1b0bc:	mov	w0, #0xffffffff            	// #-1
   1b0c0:	str	w0, [x22, #4]
   1b0c4:	cbz	w21, 1b148 <lutimens@@Base+0x148>
   1b0c8:	cmp	w21, #0x3
   1b0cc:	b.ne	1b190 <lutimens@@Base+0x190>  // b.any
   1b0d0:	ldr	x0, [sp, #56]
   1b0d4:	cbz	x0, 1b0f0 <lutimens@@Base+0xf0>
   1b0d8:	add	x1, sp, #0x38
   1b0dc:	add	x0, sp, #0x60
   1b0e0:	mov	w19, #0x0                   	// #0
   1b0e4:	bl	1aac0 <pipe_safer@@Base+0x88>
   1b0e8:	tst	w0, #0xff
   1b0ec:	b.ne	1b114 <lutimens@@Base+0x114>  // b.any
   1b0f0:	ldr	w0, [sp, #112]
   1b0f4:	and	w0, w0, #0xf000
   1b0f8:	cmp	w0, #0xa, lsl #12
   1b0fc:	b.eq	1b1e8 <lutimens@@Base+0x1e8>  // b.none
   1b100:	ldr	x2, [sp, #56]
   1b104:	mov	x1, x20
   1b108:	mov	w0, #0xffffffff            	// #-1
   1b10c:	bl	a960 <fdutimens@plt>
   1b110:	mov	w19, w0
   1b114:	mov	w0, w19
   1b118:	ldp	x19, x20, [sp, #16]
   1b11c:	ldp	x21, x22, [sp, #32]
   1b120:	ldp	x29, x30, [sp], #224
   1b124:	ret
   1b128:	adrp	x22, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1b12c:	add	x0, x22, #0x448
   1b130:	str	xzr, [sp, #56]
   1b134:	mov	w21, #0x0                   	// #0
   1b138:	ldr	w1, [x0, #4]
   1b13c:	tbz	w1, #31, 1b090 <lutimens@@Base+0x90>
   1b140:	mov	w1, #0xffffffff            	// #-1
   1b144:	str	w1, [x0, #4]
   1b148:	add	x2, sp, #0x60
   1b14c:	mov	x1, x20
   1b150:	mov	w0, #0x0                   	// #0
   1b154:	bl	ac70 <__lxstat@plt>
   1b158:	cbz	w0, 1b0f0 <lutimens@@Base+0xf0>
   1b15c:	nop
   1b160:	mov	w19, #0xffffffff            	// #-1
   1b164:	b	1b114 <lutimens@@Base+0x114>
   1b168:	b.ne	1b1d4 <lutimens@@Base+0x1d4>  // b.any
   1b16c:	add	x1, x22, #0x448
   1b170:	mov	w0, #0x1                   	// #1
   1b174:	str	w0, [x22, #1096]
   1b178:	ldp	x21, x22, [sp, #32]
   1b17c:	str	w0, [x1, #4]
   1b180:	mov	w0, w19
   1b184:	ldp	x19, x20, [sp, #16]
   1b188:	ldp	x29, x30, [sp], #224
   1b18c:	ret
   1b190:	add	x2, sp, #0x60
   1b194:	mov	x1, x20
   1b198:	mov	w0, #0x0                   	// #0
   1b19c:	bl	ac70 <__lxstat@plt>
   1b1a0:	cbnz	w0, 1b160 <lutimens@@Base+0x160>
   1b1a4:	ldr	x0, [sp, #56]
   1b1a8:	cbnz	x0, 1b0d8 <lutimens@@Base+0xd8>
   1b1ac:	b	1b0f0 <lutimens@@Base+0xf0>
   1b1b0:	ldr	x2, [sp, #56]
   1b1b4:	b	1b090 <lutimens@@Base+0x90>
   1b1b8:	ldp	x1, x0, [sp, #168]
   1b1bc:	mov	w21, #0x3                   	// #3
   1b1c0:	stp	x1, x0, [x2]
   1b1c4:	b	1b090 <lutimens@@Base+0x90>
   1b1c8:	ldp	x1, x0, [sp, #184]
   1b1cc:	stp	x1, x0, [x2, #16]
   1b1d0:	b	1b090 <lutimens@@Base+0x90>
   1b1d4:	bl	aeb0 <__errno_location@plt>
   1b1d8:	ldr	w0, [x0]
   1b1dc:	cmp	w0, #0x26
   1b1e0:	b.ne	1b16c <lutimens@@Base+0x16c>  // b.any
   1b1e4:	b	1b0b8 <lutimens@@Base+0xb8>
   1b1e8:	bl	aeb0 <__errno_location@plt>
   1b1ec:	mov	w19, #0xffffffff            	// #-1
   1b1f0:	mov	w1, #0x26                  	// #38
   1b1f4:	str	w1, [x0]
   1b1f8:	b	1b114 <lutimens@@Base+0x114>
   1b1fc:	nop

000000000001b200 <xmalloc@@Base>:
   1b200:	stp	x29, x30, [sp, #-32]!
   1b204:	mov	x29, sp
   1b208:	str	x19, [sp, #16]
   1b20c:	mov	x19, x0
   1b210:	bl	a5f0 <malloc@plt>
   1b214:	cmp	x0, #0x0
   1b218:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   1b21c:	b.ne	1b22c <xmalloc@@Base+0x2c>  // b.any
   1b220:	ldr	x19, [sp, #16]
   1b224:	ldp	x29, x30, [sp], #32
   1b228:	ret
   1b22c:	bl	a890 <xalloc_die@plt>

000000000001b230 <xnmalloc@@Base>:
   1b230:	umulh	x2, x0, x1
   1b234:	mul	x0, x0, x1
   1b238:	cmp	x2, #0x0
   1b23c:	cset	x1, ne  // ne = any
   1b240:	tbnz	x0, #63, 1b24c <xnmalloc@@Base+0x1c>
   1b244:	cbnz	x1, 1b24c <xnmalloc@@Base+0x1c>
   1b248:	b	a710 <xmalloc@plt>
   1b24c:	stp	x29, x30, [sp, #-16]!
   1b250:	mov	x29, sp
   1b254:	bl	a890 <xalloc_die@plt>

000000000001b258 <xcharalloc@@Base>:
   1b258:	b	a710 <xmalloc@plt>
   1b25c:	nop

000000000001b260 <xrealloc@@Base>:
   1b260:	stp	x29, x30, [sp, #-32]!
   1b264:	cmp	x1, #0x0
   1b268:	ccmp	x0, #0x0, #0x4, eq  // eq = none
   1b26c:	mov	x29, sp
   1b270:	b.ne	1b298 <xrealloc@@Base+0x38>  // b.any
   1b274:	str	x19, [sp, #16]
   1b278:	mov	x19, x1
   1b27c:	bl	a7e0 <realloc@plt>
   1b280:	cmp	x0, #0x0
   1b284:	ccmp	x19, #0x0, #0x4, eq  // eq = none
   1b288:	b.ne	1b2a8 <xrealloc@@Base+0x48>  // b.any
   1b28c:	ldr	x19, [sp, #16]
   1b290:	ldp	x29, x30, [sp], #32
   1b294:	ret
   1b298:	bl	aa50 <free@plt>
   1b29c:	mov	x0, #0x0                   	// #0
   1b2a0:	ldp	x29, x30, [sp], #32
   1b2a4:	ret
   1b2a8:	bl	a890 <xalloc_die@plt>
   1b2ac:	nop

000000000001b2b0 <xnrealloc@@Base>:
   1b2b0:	umulh	x3, x1, x2
   1b2b4:	mul	x1, x1, x2
   1b2b8:	cmp	x3, #0x0
   1b2bc:	cset	x2, ne  // ne = any
   1b2c0:	tbnz	x1, #63, 1b2cc <xnrealloc@@Base+0x1c>
   1b2c4:	cbnz	x2, 1b2cc <xnrealloc@@Base+0x1c>
   1b2c8:	b	a660 <xrealloc@plt>
   1b2cc:	stp	x29, x30, [sp, #-16]!
   1b2d0:	mov	x29, sp
   1b2d4:	bl	a890 <xalloc_die@plt>

000000000001b2d8 <x2nrealloc@@Base>:
   1b2d8:	mov	x4, x1
   1b2dc:	ldr	x3, [x1]
   1b2e0:	cbz	x0, 1b30c <x2nrealloc@@Base+0x34>
   1b2e4:	mov	x1, #0x5555555555555555    	// #6148914691236517205
   1b2e8:	movk	x1, #0x5554
   1b2ec:	udiv	x1, x1, x2
   1b2f0:	cmp	x1, x3
   1b2f4:	b.ls	1b328 <x2nrealloc@@Base+0x50>  // b.plast
   1b2f8:	add	x1, x3, #0x1
   1b2fc:	add	x3, x1, x3, lsr #1
   1b300:	mul	x1, x3, x2
   1b304:	str	x3, [x4]
   1b308:	b	a660 <xrealloc@plt>
   1b30c:	cbz	x3, 1b334 <x2nrealloc@@Base+0x5c>
   1b310:	umulh	x5, x3, x2
   1b314:	mul	x1, x3, x2
   1b318:	cmp	x5, #0x0
   1b31c:	cset	x2, ne  // ne = any
   1b320:	tbnz	x1, #63, 1b328 <x2nrealloc@@Base+0x50>
   1b324:	cbz	x2, 1b304 <x2nrealloc@@Base+0x2c>
   1b328:	stp	x29, x30, [sp, #-16]!
   1b32c:	mov	x29, sp
   1b330:	bl	a890 <xalloc_die@plt>
   1b334:	mov	x3, #0x80                  	// #128
   1b338:	cmp	x2, x3
   1b33c:	udiv	x3, x3, x2
   1b340:	cinc	x3, x3, hi  // hi = pmore
   1b344:	b	1b310 <x2nrealloc@@Base+0x38>

000000000001b348 <x2realloc@@Base>:
   1b348:	mov	x2, x1
   1b34c:	ldr	x1, [x1]
   1b350:	cbz	x0, 1b374 <x2realloc@@Base+0x2c>
   1b354:	mov	x3, #0x5555555555555555    	// #6148914691236517205
   1b358:	movk	x3, #0x5553
   1b35c:	cmp	x1, x3
   1b360:	b.hi	1b38c <x2realloc@@Base+0x44>  // b.pmore
   1b364:	add	x3, x1, #0x1
   1b368:	add	x1, x3, x1, lsr #1
   1b36c:	str	x1, [x2]
   1b370:	b	a660 <xrealloc@plt>
   1b374:	cmp	x1, #0x0
   1b378:	cbnz	x1, 1b388 <x2realloc@@Base+0x40>
   1b37c:	mov	x1, #0x80                  	// #128
   1b380:	str	x1, [x2]
   1b384:	b	a660 <xrealloc@plt>
   1b388:	b.ge	1b36c <x2realloc@@Base+0x24>  // b.tcont
   1b38c:	stp	x29, x30, [sp, #-16]!
   1b390:	mov	x29, sp
   1b394:	bl	a890 <xalloc_die@plt>

000000000001b398 <xzalloc@@Base>:
   1b398:	stp	x29, x30, [sp, #-32]!
   1b39c:	mov	x29, sp
   1b3a0:	str	x19, [sp, #16]
   1b3a4:	mov	x19, x0
   1b3a8:	bl	a710 <xmalloc@plt>
   1b3ac:	mov	x2, x19
   1b3b0:	mov	w1, #0x0                   	// #0
   1b3b4:	ldr	x19, [sp, #16]
   1b3b8:	ldp	x29, x30, [sp], #32
   1b3bc:	b	a6f0 <memset@plt>

000000000001b3c0 <xcalloc@@Base>:
   1b3c0:	umulh	x4, x0, x1
   1b3c4:	stp	x29, x30, [sp, #-16]!
   1b3c8:	mul	x2, x0, x1
   1b3cc:	cmp	x4, #0x0
   1b3d0:	mov	x29, sp
   1b3d4:	cset	x3, ne  // ne = any
   1b3d8:	tbnz	x2, #63, 1b3f0 <xcalloc@@Base+0x30>
   1b3dc:	cbnz	x3, 1b3f0 <xcalloc@@Base+0x30>
   1b3e0:	bl	a770 <calloc@plt>
   1b3e4:	cbz	x0, 1b3f0 <xcalloc@@Base+0x30>
   1b3e8:	ldp	x29, x30, [sp], #16
   1b3ec:	ret
   1b3f0:	bl	a890 <xalloc_die@plt>
   1b3f4:	nop

000000000001b3f8 <xmemdup@@Base>:
   1b3f8:	stp	x29, x30, [sp, #-32]!
   1b3fc:	mov	x29, sp
   1b400:	stp	x19, x20, [sp, #16]
   1b404:	mov	x19, x1
   1b408:	mov	x20, x0
   1b40c:	mov	x0, x1
   1b410:	bl	a710 <xmalloc@plt>
   1b414:	mov	x2, x19
   1b418:	mov	x1, x20
   1b41c:	ldp	x19, x20, [sp, #16]
   1b420:	ldp	x29, x30, [sp], #32
   1b424:	b	a2c0 <memcpy@plt>

000000000001b428 <xstrdup@@Base>:
   1b428:	stp	x29, x30, [sp, #-32]!
   1b42c:	mov	x29, sp
   1b430:	str	x19, [sp, #16]
   1b434:	mov	x19, x0
   1b438:	bl	a340 <strlen@plt>
   1b43c:	mov	x1, x0
   1b440:	mov	x0, x19
   1b444:	add	x1, x1, #0x1
   1b448:	ldr	x19, [sp, #16]
   1b44c:	ldp	x29, x30, [sp], #32
   1b450:	b	ae50 <xmemdup@plt>
   1b454:	nop

000000000001b458 <xalloc_die@@Base>:
   1b458:	stp	x29, x30, [sp, #-32]!
   1b45c:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   1b460:	mov	w2, #0x5                   	// #5
   1b464:	mov	x29, sp
   1b468:	ldr	x3, [x3, #3976]
   1b46c:	str	x19, [sp, #16]
   1b470:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1b474:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   1b478:	add	x1, x1, #0x428
   1b47c:	add	x0, x0, #0x780
   1b480:	ldr	w19, [x3]
   1b484:	bl	ada0 <dcgettext@plt>
   1b488:	adrp	x2, 2c000 <vasnprintf@@Base+0x11e0>
   1b48c:	mov	x3, x0
   1b490:	add	x2, x2, #0xb50
   1b494:	mov	w0, w19
   1b498:	mov	w1, #0x0                   	// #0
   1b49c:	bl	a360 <error@plt>
   1b4a0:	bl	a900 <abort@plt>
   1b4a4:	nop

000000000001b4a8 <xgetcwd@@Base>:
   1b4a8:	stp	x29, x30, [sp, #-32]!
   1b4ac:	mov	x1, #0x0                   	// #0
   1b4b0:	mov	x0, #0x0                   	// #0
   1b4b4:	mov	x29, sp
   1b4b8:	str	x19, [sp, #16]
   1b4bc:	bl	a300 <getcwd@plt>
   1b4c0:	mov	x19, x0
   1b4c4:	cbz	x0, 1b4d8 <xgetcwd@@Base+0x30>
   1b4c8:	mov	x0, x19
   1b4cc:	ldr	x19, [sp, #16]
   1b4d0:	ldp	x29, x30, [sp], #32
   1b4d4:	ret
   1b4d8:	bl	aeb0 <__errno_location@plt>
   1b4dc:	ldr	w0, [x0]
   1b4e0:	cmp	w0, #0xc
   1b4e4:	b.ne	1b4c8 <xgetcwd@@Base+0x20>  // b.any
   1b4e8:	bl	a890 <xalloc_die@plt>
   1b4ec:	nop

000000000001b4f0 <gl_list_create_empty@@Base>:
   1b4f0:	stp	x29, x30, [sp, #-16]!
   1b4f4:	mov	x29, sp
   1b4f8:	ldr	x5, [x0]
   1b4fc:	blr	x5
   1b500:	cbz	x0, 1b50c <gl_list_create_empty@@Base+0x1c>
   1b504:	ldp	x29, x30, [sp], #16
   1b508:	ret
   1b50c:	bl	a890 <xalloc_die@plt>

000000000001b510 <gl_list_create@@Base>:
   1b510:	stp	x29, x30, [sp, #-16]!
   1b514:	mov	x29, sp
   1b518:	ldr	x7, [x0, #8]
   1b51c:	blr	x7
   1b520:	cbz	x0, 1b52c <gl_list_create@@Base+0x1c>
   1b524:	ldp	x29, x30, [sp], #16
   1b528:	ret
   1b52c:	bl	a890 <xalloc_die@plt>

000000000001b530 <gl_list_node_set_value@@Base>:
   1b530:	stp	x29, x30, [sp, #-16]!
   1b534:	mov	x29, sp
   1b538:	ldr	x3, [x0]
   1b53c:	ldr	x3, [x3, #32]
   1b540:	blr	x3
   1b544:	tbnz	w0, #31, 1b550 <gl_list_node_set_value@@Base+0x20>
   1b548:	ldp	x29, x30, [sp], #16
   1b54c:	ret
   1b550:	bl	a890 <xalloc_die@plt>
   1b554:	nop

000000000001b558 <gl_list_set_at@@Base>:
   1b558:	stp	x29, x30, [sp, #-16]!
   1b55c:	mov	x29, sp
   1b560:	ldr	x3, [x0]
   1b564:	ldr	x3, [x3, #64]
   1b568:	blr	x3
   1b56c:	cbz	x0, 1b578 <gl_list_set_at@@Base+0x20>
   1b570:	ldp	x29, x30, [sp], #16
   1b574:	ret
   1b578:	bl	a890 <xalloc_die@plt>
   1b57c:	nop

000000000001b580 <gl_list_add_first@@Base>:
   1b580:	stp	x29, x30, [sp, #-16]!
   1b584:	mov	x29, sp
   1b588:	ldr	x2, [x0]
   1b58c:	ldr	x2, [x2, #88]
   1b590:	blr	x2
   1b594:	cbz	x0, 1b5a0 <gl_list_add_first@@Base+0x20>
   1b598:	ldp	x29, x30, [sp], #16
   1b59c:	ret
   1b5a0:	bl	a890 <xalloc_die@plt>
   1b5a4:	nop

000000000001b5a8 <gl_list_add_last@@Base>:
   1b5a8:	stp	x29, x30, [sp, #-16]!
   1b5ac:	mov	x29, sp
   1b5b0:	ldr	x2, [x0]
   1b5b4:	ldr	x2, [x2, #96]
   1b5b8:	blr	x2
   1b5bc:	cbz	x0, 1b5c8 <gl_list_add_last@@Base+0x20>
   1b5c0:	ldp	x29, x30, [sp], #16
   1b5c4:	ret
   1b5c8:	bl	a890 <xalloc_die@plt>
   1b5cc:	nop

000000000001b5d0 <gl_list_add_before@@Base>:
   1b5d0:	stp	x29, x30, [sp, #-16]!
   1b5d4:	mov	x29, sp
   1b5d8:	ldr	x3, [x0]
   1b5dc:	ldr	x3, [x3, #104]
   1b5e0:	blr	x3
   1b5e4:	cbz	x0, 1b5f0 <gl_list_add_before@@Base+0x20>
   1b5e8:	ldp	x29, x30, [sp], #16
   1b5ec:	ret
   1b5f0:	bl	a890 <xalloc_die@plt>
   1b5f4:	nop

000000000001b5f8 <gl_list_add_after@@Base>:
   1b5f8:	stp	x29, x30, [sp, #-16]!
   1b5fc:	mov	x29, sp
   1b600:	ldr	x3, [x0]
   1b604:	ldr	x3, [x3, #112]
   1b608:	blr	x3
   1b60c:	cbz	x0, 1b618 <gl_list_add_after@@Base+0x20>
   1b610:	ldp	x29, x30, [sp], #16
   1b614:	ret
   1b618:	bl	a890 <xalloc_die@plt>
   1b61c:	nop

000000000001b620 <gl_list_add_at@@Base>:
   1b620:	stp	x29, x30, [sp, #-16]!
   1b624:	mov	x29, sp
   1b628:	ldr	x3, [x0]
   1b62c:	ldr	x3, [x3, #120]
   1b630:	blr	x3
   1b634:	cbz	x0, 1b640 <gl_list_add_at@@Base+0x20>
   1b638:	ldp	x29, x30, [sp], #16
   1b63c:	ret
   1b640:	bl	a890 <xalloc_die@plt>
   1b644:	nop

000000000001b648 <gl_sortedlist_add@@Base>:
   1b648:	stp	x29, x30, [sp, #-16]!
   1b64c:	mov	x29, sp
   1b650:	ldr	x3, [x0]
   1b654:	ldr	x3, [x3, #224]
   1b658:	blr	x3
   1b65c:	cbz	x0, 1b668 <gl_sortedlist_add@@Base+0x20>
   1b660:	ldp	x29, x30, [sp], #16
   1b664:	ret
   1b668:	bl	a890 <xalloc_die@plt>
   1b66c:	nop

000000000001b670 <gl_map_create_empty@@Base>:
   1b670:	stp	x29, x30, [sp, #-16]!
   1b674:	mov	x29, sp
   1b678:	ldr	x5, [x0]
   1b67c:	blr	x5
   1b680:	cbz	x0, 1b68c <gl_map_create_empty@@Base+0x1c>
   1b684:	ldp	x29, x30, [sp], #16
   1b688:	ret
   1b68c:	bl	a890 <xalloc_die@plt>

000000000001b690 <gl_map_put@@Base>:
   1b690:	stp	x29, x30, [sp, #-48]!
   1b694:	mov	x29, sp
   1b698:	ldr	x4, [x0]
   1b69c:	stp	x19, x20, [sp, #16]
   1b6a0:	add	x3, sp, #0x28
   1b6a4:	mov	x20, x0
   1b6a8:	ldr	x4, [x4, #24]
   1b6ac:	blr	x4
   1b6b0:	mov	w19, w0
   1b6b4:	cbnz	w0, 1b6dc <gl_map_put@@Base+0x4c>
   1b6b8:	ldr	x1, [x20, #24]
   1b6bc:	cbz	x1, 1b6c8 <gl_map_put@@Base+0x38>
   1b6c0:	ldr	x0, [sp, #40]
   1b6c4:	blr	x1
   1b6c8:	cmp	w19, #0x0
   1b6cc:	cset	w0, ne  // ne = any
   1b6d0:	ldp	x19, x20, [sp, #16]
   1b6d4:	ldp	x29, x30, [sp], #48
   1b6d8:	ret
   1b6dc:	cmp	w0, #0x0
   1b6e0:	b.ge	1b6c8 <gl_map_put@@Base+0x38>  // b.tcont
   1b6e4:	bl	a890 <xalloc_die@plt>

000000000001b6e8 <gl_map_getput@@Base>:
   1b6e8:	stp	x29, x30, [sp, #-16]!
   1b6ec:	mov	x29, sp
   1b6f0:	ldr	x4, [x0]
   1b6f4:	ldr	x4, [x4, #24]
   1b6f8:	blr	x4
   1b6fc:	cmp	w0, #0x0
   1b700:	b.lt	1b710 <gl_map_getput@@Base+0x28>  // b.tstop
   1b704:	cset	w0, ne  // ne = any
   1b708:	ldp	x29, x30, [sp], #16
   1b70c:	ret
   1b710:	bl	a890 <xalloc_die@plt>
   1b714:	nop

000000000001b718 <gl_set_create_empty@@Base>:
   1b718:	stp	x29, x30, [sp, #-16]!
   1b71c:	mov	x29, sp
   1b720:	ldr	x4, [x0]
   1b724:	blr	x4
   1b728:	cbz	x0, 1b734 <gl_set_create_empty@@Base+0x1c>
   1b72c:	ldp	x29, x30, [sp], #16
   1b730:	ret
   1b734:	bl	a890 <xalloc_die@plt>

000000000001b738 <gl_set_add@@Base>:
   1b738:	stp	x29, x30, [sp, #-16]!
   1b73c:	mov	x29, sp
   1b740:	ldr	x2, [x0]
   1b744:	ldr	x2, [x2, #24]
   1b748:	blr	x2
   1b74c:	cmp	w0, #0x0
   1b750:	b.lt	1b760 <gl_set_add@@Base+0x28>  // b.tstop
   1b754:	cset	w0, ne  // ne = any
   1b758:	ldp	x29, x30, [sp], #16
   1b75c:	ret
   1b760:	bl	a890 <xalloc_die@plt>
   1b764:	nop

000000000001b768 <xsum@@Base>:
   1b768:	adds	x0, x0, x1
   1b76c:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   1b770:	ret
   1b774:	nop

000000000001b778 <xsum3@@Base>:
   1b778:	adds	x1, x0, x1
   1b77c:	mov	x0, #0xffffffffffffffff    	// #-1
   1b780:	csel	x1, x1, x0, cc  // cc = lo, ul, last
   1b784:	adds	x1, x2, x1
   1b788:	csel	x0, x1, x0, cc  // cc = lo, ul, last
   1b78c:	ret

000000000001b790 <xsum4@@Base>:
   1b790:	adds	x1, x0, x1
   1b794:	mov	x0, #0xffffffffffffffff    	// #-1
   1b798:	csel	x1, x1, x0, cc  // cc = lo, ul, last
   1b79c:	adds	x2, x2, x1
   1b7a0:	csel	x2, x2, x0, cc  // cc = lo, ul, last
   1b7a4:	adds	x2, x3, x2
   1b7a8:	csel	x0, x2, x0, cc  // cc = lo, ul, last
   1b7ac:	ret

000000000001b7b0 <xmax@@Base>:
   1b7b0:	cmp	x0, x1
   1b7b4:	csel	x0, x0, x1, cs  // cs = hs, nlast
   1b7b8:	ret
   1b7bc:	nop

000000000001b7c0 <xstdopen@@Base>:
   1b7c0:	stp	x29, x30, [sp, #-32]!
   1b7c4:	mov	x29, sp
   1b7c8:	bl	a630 <stdopen@plt>
   1b7cc:	cbnz	w0, 1b7d8 <xstdopen@@Base+0x18>
   1b7d0:	ldp	x29, x30, [sp], #32
   1b7d4:	ret
   1b7d8:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   1b7dc:	stp	x19, x20, [sp, #16]
   1b7e0:	mov	w2, #0x5                   	// #5
   1b7e4:	ldr	x3, [x3, #3976]
   1b7e8:	mov	w19, w0
   1b7ec:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1b7f0:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   1b7f4:	add	x1, x1, #0x440
   1b7f8:	add	x0, x0, #0x780
   1b7fc:	ldr	w20, [x3]
   1b800:	bl	ada0 <dcgettext@plt>
   1b804:	mov	w1, w19
   1b808:	mov	x2, x0
   1b80c:	mov	w0, w20
   1b810:	ldp	x19, x20, [sp, #16]
   1b814:	ldp	x29, x30, [sp], #32
   1b818:	b	a360 <error@plt>
   1b81c:	nop

000000000001b820 <xstrndup@@Base>:
   1b820:	stp	x29, x30, [sp, #-16]!
   1b824:	mov	x29, sp
   1b828:	bl	ab30 <strndup@plt>
   1b82c:	cbz	x0, 1b838 <xstrndup@@Base+0x18>
   1b830:	ldp	x29, x30, [sp], #16
   1b834:	ret
   1b838:	bl	a890 <xalloc_die@plt>
   1b83c:	nop
   1b840:	stp	x29, x30, [sp, #-112]!
   1b844:	mov	x29, sp
   1b848:	stp	x23, x24, [sp, #48]
   1b84c:	mov	x23, x1
   1b850:	stp	x19, x20, [sp, #16]
   1b854:	mov	x20, x0
   1b858:	ldp	x0, x1, [x1]
   1b85c:	stp	x0, x1, [sp, #80]
   1b860:	ldp	x0, x1, [x23, #16]
   1b864:	stp	x21, x22, [sp, #32]
   1b868:	ldr	w22, [x23, #24]
   1b86c:	stp	x25, x26, [sp, #64]
   1b870:	stp	x0, x1, [sp, #96]
   1b874:	ldr	x21, [x23]
   1b878:	cbz	x20, 1b988 <xstrndup@@Base+0x168>
   1b87c:	mov	x26, x20
   1b880:	mov	x19, #0x0                   	// #0
   1b884:	mov	x24, #0xffffffffffffffff    	// #-1
   1b888:	ldr	x25, [sp, #88]
   1b88c:	b	1b8b0 <xstrndup@@Base+0x90>
   1b890:	and	x1, x1, #0xfffffffffffffff8
   1b894:	str	x1, [sp, #80]
   1b898:	ldr	x0, [x2]
   1b89c:	bl	a340 <strlen@plt>
   1b8a0:	adds	x19, x0, x19
   1b8a4:	csel	x19, x19, x24, cc  // cc = lo, ul, last
   1b8a8:	subs	x26, x26, #0x1
   1b8ac:	b.eq	1b8f4 <xstrndup@@Base+0xd4>  // b.none
   1b8b0:	ldr	w0, [sp, #104]
   1b8b4:	ldr	x2, [sp, #80]
   1b8b8:	add	w3, w0, #0x8
   1b8bc:	add	x1, x2, #0xf
   1b8c0:	tbz	w0, #31, 1b890 <xstrndup@@Base+0x70>
   1b8c4:	str	w3, [sp, #104]
   1b8c8:	add	x1, x2, #0xf
   1b8cc:	cmp	w3, #0x0
   1b8d0:	and	x1, x1, #0xfffffffffffffff8
   1b8d4:	b.le	1b970 <xstrndup@@Base+0x150>
   1b8d8:	str	x1, [sp, #80]
   1b8dc:	ldr	x0, [x2]
   1b8e0:	bl	a340 <strlen@plt>
   1b8e4:	adds	x19, x0, x19
   1b8e8:	csel	x19, x19, x24, cc  // cc = lo, ul, last
   1b8ec:	subs	x26, x26, #0x1
   1b8f0:	b.ne	1b8b0 <xstrndup@@Base+0x90>  // b.any
   1b8f4:	mov	x0, #0x7fffffff            	// #2147483647
   1b8f8:	cmp	x19, x0
   1b8fc:	b.hi	1b9b8 <xstrndup@@Base+0x198>  // b.pmore
   1b900:	add	x0, x19, #0x1
   1b904:	bl	a710 <xmalloc@plt>
   1b908:	mov	x25, x0
   1b90c:	mov	x24, x0
   1b910:	b	1b948 <xstrndup@@Base+0x128>
   1b914:	mov	x1, x21
   1b918:	and	x21, x2, #0xfffffffffffffff8
   1b91c:	ldr	x19, [x1]
   1b920:	mov	x0, x19
   1b924:	bl	a340 <strlen@plt>
   1b928:	mov	x1, x19
   1b92c:	mov	x19, x0
   1b930:	mov	x2, x19
   1b934:	mov	x0, x24
   1b938:	bl	a2c0 <memcpy@plt>
   1b93c:	add	x24, x24, x19
   1b940:	subs	x20, x20, #0x1
   1b944:	b.eq	1b998 <xstrndup@@Base+0x178>  // b.none
   1b948:	add	x2, x21, #0xf
   1b94c:	add	w0, w22, #0x8
   1b950:	tbz	w22, #31, 1b914 <xstrndup@@Base+0xf4>
   1b954:	add	x2, x21, #0xf
   1b958:	cmp	w0, #0x0
   1b95c:	b.le	1b978 <xstrndup@@Base+0x158>
   1b960:	mov	x1, x21
   1b964:	mov	w22, w0
   1b968:	and	x21, x2, #0xfffffffffffffff8
   1b96c:	b	1b91c <xstrndup@@Base+0xfc>
   1b970:	add	x2, x25, w0, sxtw
   1b974:	b	1b898 <xstrndup@@Base+0x78>
   1b978:	ldr	x1, [x23, #8]
   1b97c:	add	x1, x1, w22, sxtw
   1b980:	mov	w22, w0
   1b984:	b	1b91c <xstrndup@@Base+0xfc>
   1b988:	mov	x0, #0x1                   	// #1
   1b98c:	bl	a710 <xmalloc@plt>
   1b990:	mov	x24, x0
   1b994:	mov	x25, x0
   1b998:	strb	wzr, [x24]
   1b99c:	mov	x0, x25
   1b9a0:	ldp	x19, x20, [sp, #16]
   1b9a4:	ldp	x21, x22, [sp, #32]
   1b9a8:	ldp	x23, x24, [sp, #48]
   1b9ac:	ldp	x25, x26, [sp, #64]
   1b9b0:	ldp	x29, x30, [sp], #112
   1b9b4:	ret
   1b9b8:	bl	aeb0 <__errno_location@plt>
   1b9bc:	mov	x25, #0x0                   	// #0
   1b9c0:	mov	w1, #0x4b                  	// #75
   1b9c4:	str	w1, [x0]
   1b9c8:	mov	x0, x25
   1b9cc:	ldp	x19, x20, [sp, #16]
   1b9d0:	ldp	x21, x22, [sp, #32]
   1b9d4:	ldp	x23, x24, [sp, #48]
   1b9d8:	ldp	x25, x26, [sp, #64]
   1b9dc:	ldp	x29, x30, [sp], #112
   1b9e0:	ret
   1b9e4:	nop

000000000001b9e8 <xvasprintf@@Base>:
   1b9e8:	mov	x4, x0
   1b9ec:	stp	x29, x30, [sp, #-64]!
   1b9f0:	mov	x3, x0
   1b9f4:	mov	x29, sp
   1b9f8:	ldrb	w2, [x4]
   1b9fc:	mov	x5, x1
   1ba00:	mov	x0, #0x0                   	// #0
   1ba04:	cbnz	w2, 1ba24 <xvasprintf@@Base+0x3c>
   1ba08:	b	1ba78 <xvasprintf@@Base+0x90>
   1ba0c:	ldrb	w2, [x3, #1]
   1ba10:	cmp	w2, #0x73
   1ba14:	b.ne	1ba2c <xvasprintf@@Base+0x44>  // b.any
   1ba18:	ldrb	w2, [x3, #2]!
   1ba1c:	add	x0, x0, #0x1
   1ba20:	cbz	w2, 1ba78 <xvasprintf@@Base+0x90>
   1ba24:	cmp	w2, #0x25
   1ba28:	b.eq	1ba0c <xvasprintf@@Base+0x24>  // b.none
   1ba2c:	mov	x1, x4
   1ba30:	add	x2, sp, #0x10
   1ba34:	ldp	x6, x7, [x5]
   1ba38:	add	x0, sp, #0x38
   1ba3c:	ldp	x4, x5, [x5, #16]
   1ba40:	stp	x6, x7, [sp, #16]
   1ba44:	stp	x4, x5, [sp, #32]
   1ba48:	bl	ab10 <vasprintf@plt>
   1ba4c:	tbnz	w0, #31, 1ba5c <xvasprintf@@Base+0x74>
   1ba50:	ldr	x0, [sp, #56]
   1ba54:	ldp	x29, x30, [sp], #64
   1ba58:	ret
   1ba5c:	bl	aeb0 <__errno_location@plt>
   1ba60:	mov	x1, x0
   1ba64:	mov	x0, #0x0                   	// #0
   1ba68:	ldr	w1, [x1]
   1ba6c:	cmp	w1, #0xc
   1ba70:	b.ne	1ba54 <xvasprintf@@Base+0x6c>  // b.any
   1ba74:	bl	a890 <xalloc_die@plt>
   1ba78:	ldp	x6, x7, [x5]
   1ba7c:	add	x1, sp, #0x10
   1ba80:	ldp	x2, x3, [x5, #16]
   1ba84:	stp	x6, x7, [sp, #16]
   1ba88:	stp	x2, x3, [sp, #32]
   1ba8c:	bl	1b840 <xstrndup@@Base+0x20>
   1ba90:	ldp	x29, x30, [sp], #64
   1ba94:	ret

000000000001ba98 <xasprintf@@Base>:
   1ba98:	stp	x29, x30, [sp, #-272]!
   1ba9c:	mov	w9, #0xffffffc8            	// #-56
   1baa0:	mov	w8, #0xffffff80            	// #-128
   1baa4:	mov	x29, sp
   1baa8:	add	x10, sp, #0xd0
   1baac:	add	x11, sp, #0x110
   1bab0:	stp	x11, x11, [sp, #48]
   1bab4:	str	x10, [sp, #64]
   1bab8:	stp	w9, w8, [sp, #72]
   1babc:	ldp	x10, x11, [sp, #48]
   1bac0:	stp	x10, x11, [sp, #16]
   1bac4:	ldp	x8, x9, [sp, #64]
   1bac8:	stp	x8, x9, [sp, #32]
   1bacc:	str	q0, [sp, #80]
   1bad0:	str	q1, [sp, #96]
   1bad4:	str	q2, [sp, #112]
   1bad8:	str	q3, [sp, #128]
   1badc:	str	q4, [sp, #144]
   1bae0:	str	q5, [sp, #160]
   1bae4:	str	q6, [sp, #176]
   1bae8:	str	q7, [sp, #192]
   1baec:	stp	x1, x2, [sp, #216]
   1baf0:	add	x1, sp, #0x10
   1baf4:	stp	x3, x4, [sp, #232]
   1baf8:	stp	x5, x6, [sp, #248]
   1bafc:	str	x7, [sp, #264]
   1bb00:	bl	adf0 <xvasprintf@plt>
   1bb04:	ldp	x29, x30, [sp], #272
   1bb08:	ret
   1bb0c:	nop

000000000001bb10 <asnprintf@@Base>:
   1bb10:	stp	x29, x30, [sp, #-256]!
   1bb14:	mov	w9, #0xffffffd8            	// #-40
   1bb18:	mov	w8, #0xffffff80            	// #-128
   1bb1c:	mov	x29, sp
   1bb20:	add	x10, sp, #0xd0
   1bb24:	add	x11, sp, #0x100
   1bb28:	stp	x11, x11, [sp, #48]
   1bb2c:	str	x10, [sp, #64]
   1bb30:	stp	w9, w8, [sp, #72]
   1bb34:	ldp	x10, x11, [sp, #48]
   1bb38:	stp	x10, x11, [sp, #16]
   1bb3c:	ldp	x8, x9, [sp, #64]
   1bb40:	stp	x8, x9, [sp, #32]
   1bb44:	str	q0, [sp, #80]
   1bb48:	str	q1, [sp, #96]
   1bb4c:	str	q2, [sp, #112]
   1bb50:	str	q3, [sp, #128]
   1bb54:	str	q4, [sp, #144]
   1bb58:	str	q5, [sp, #160]
   1bb5c:	str	q6, [sp, #176]
   1bb60:	str	q7, [sp, #192]
   1bb64:	stp	x3, x4, [sp, #216]
   1bb68:	add	x3, sp, #0x10
   1bb6c:	stp	x5, x6, [sp, #232]
   1bb70:	str	x7, [sp, #248]
   1bb74:	bl	aad0 <vasnprintf@plt>
   1bb78:	ldp	x29, x30, [sp], #256
   1bb7c:	ret
   1bb80:	tbz	w0, #31, 1bb88 <asnprintf@@Base+0x78>
   1bb84:	ret
   1bb88:	stp	x29, x30, [sp, #-16]!
   1bb8c:	mov	x29, sp
   1bb90:	bl	a850 <close@plt>
   1bb94:	cbnz	w0, 1bba0 <asnprintf@@Base+0x90>
   1bb98:	ldp	x29, x30, [sp], #16
   1bb9c:	ret
   1bba0:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   1bba4:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1bba8:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1bbac:	add	x3, x3, #0x4d0
   1bbb0:	add	x1, x1, #0x460
   1bbb4:	add	x0, x0, #0x470
   1bbb8:	mov	w2, #0x40                  	// #64
   1bbbc:	bl	aea0 <__assert_fail@plt>
   1bbc0:	stp	x29, x30, [sp, #-32]!
   1bbc4:	mov	w2, #0x4900                	// #18688
   1bbc8:	mov	x29, sp
   1bbcc:	stp	x19, x20, [sp, #16]
   1bbd0:	mov	x19, x0
   1bbd4:	ldr	w0, [x0]
   1bbd8:	bl	ae90 <openat@plt>
   1bbdc:	tbnz	w0, #31, 1bc00 <asnprintf@@Base+0xf0>
   1bbe0:	mov	w20, w0
   1bbe4:	ldr	w0, [x19]
   1bbe8:	bl	1bb80 <asnprintf@@Base+0x70>
   1bbec:	str	w20, [x19]
   1bbf0:	mov	w0, #0x0                   	// #0
   1bbf4:	ldp	x19, x20, [sp, #16]
   1bbf8:	ldp	x29, x30, [sp], #32
   1bbfc:	ret
   1bc00:	mov	w0, #0xffffffff            	// #-1
   1bc04:	b	1bbf4 <asnprintf@@Base+0xe4>

000000000001bc08 <chdir_long@@Base>:
   1bc08:	stp	x29, x30, [sp, #-96]!
   1bc0c:	mov	x29, sp
   1bc10:	stp	x19, x20, [sp, #16]
   1bc14:	stp	x23, x24, [sp, #48]
   1bc18:	mov	x24, x0
   1bc1c:	bl	aa30 <chdir@plt>
   1bc20:	mov	w19, w0
   1bc24:	cbz	w0, 1bd30 <chdir_long@@Base+0x128>
   1bc28:	stp	x21, x22, [sp, #32]
   1bc2c:	bl	aeb0 <__errno_location@plt>
   1bc30:	mov	x22, x0
   1bc34:	ldr	w0, [x0]
   1bc38:	cmp	w0, #0x24
   1bc3c:	b.ne	1bd44 <chdir_long@@Base+0x13c>  // b.any
   1bc40:	mov	x0, x24
   1bc44:	str	x25, [sp, #64]
   1bc48:	bl	a340 <strlen@plt>
   1bc4c:	mov	x21, x0
   1bc50:	mov	w1, #0xffffff9c            	// #-100
   1bc54:	str	w1, [sp, #88]
   1bc58:	cbz	x0, 1bea8 <chdir_long@@Base+0x2a0>
   1bc5c:	cmp	x0, #0xfff
   1bc60:	b.ls	1becc <chdir_long@@Base+0x2c4>  // b.plast
   1bc64:	adrp	x23, 2e000 <vasnprintf@@Base+0x31e0>
   1bc68:	add	x25, x23, #0x670
   1bc6c:	mov	x1, x25
   1bc70:	mov	x0, x24
   1bc74:	bl	ab40 <strspn@plt>
   1bc78:	mov	x19, x0
   1bc7c:	cmp	x0, #0x2
   1bc80:	b.eq	1bdcc <chdir_long@@Base+0x1c4>  // b.none
   1bc84:	mov	x20, x24
   1bc88:	cbnz	x0, 1bd5c <chdir_long@@Base+0x154>
   1bc8c:	ldrb	w0, [x20]
   1bc90:	cmp	w0, #0x2f
   1bc94:	b.eq	1be60 <chdir_long@@Base+0x258>  // b.none
   1bc98:	add	x21, x24, x21
   1bc9c:	cmp	x20, x21
   1bca0:	b.hi	1be84 <chdir_long@@Base+0x27c>  // b.pmore
   1bca4:	sub	x0, x21, x20
   1bca8:	cmp	x0, #0xfff
   1bcac:	b.le	1bd74 <chdir_long@@Base+0x16c>
   1bcb0:	add	x23, x23, #0x670
   1bcb4:	add	x25, sp, #0x58
   1bcb8:	mov	w24, #0x2f                  	// #47
   1bcbc:	b	1bd04 <chdir_long@@Base+0xfc>
   1bcc0:	strb	wzr, [x0]
   1bcc4:	sub	x0, x0, x20
   1bcc8:	cmp	x0, #0xfff
   1bccc:	b.gt	1be3c <chdir_long@@Base+0x234>
   1bcd0:	mov	x1, x20
   1bcd4:	mov	x0, x25
   1bcd8:	bl	1bbc0 <asnprintf@@Base+0xb0>
   1bcdc:	strb	w24, [x19]
   1bce0:	cbnz	w0, 1bd9c <chdir_long@@Base+0x194>
   1bce4:	add	x19, x19, #0x1
   1bce8:	mov	x1, x23
   1bcec:	mov	x0, x19
   1bcf0:	bl	ab40 <strspn@plt>
   1bcf4:	add	x20, x19, x0
   1bcf8:	sub	x0, x21, x20
   1bcfc:	cmp	x0, #0xfff
   1bd00:	b.le	1bd74 <chdir_long@@Base+0x16c>
   1bd04:	mov	x0, x20
   1bd08:	mov	x2, #0x1000                	// #4096
   1bd0c:	mov	w1, #0x2f                  	// #47
   1bd10:	bl	ab90 <memrchr@plt>
   1bd14:	mov	x19, x0
   1bd18:	cbnz	x0, 1bcc0 <chdir_long@@Base+0xb8>
   1bd1c:	mov	w0, #0x24                  	// #36
   1bd20:	mov	w19, #0xffffffff            	// #-1
   1bd24:	ldr	x25, [sp, #64]
   1bd28:	str	w0, [x22]
   1bd2c:	ldp	x21, x22, [sp, #32]
   1bd30:	mov	w0, w19
   1bd34:	ldp	x19, x20, [sp, #16]
   1bd38:	ldp	x23, x24, [sp, #48]
   1bd3c:	ldp	x29, x30, [sp], #96
   1bd40:	ret
   1bd44:	mov	w0, w19
   1bd48:	ldp	x19, x20, [sp, #16]
   1bd4c:	ldp	x21, x22, [sp, #32]
   1bd50:	ldp	x23, x24, [sp, #48]
   1bd54:	ldp	x29, x30, [sp], #96
   1bd58:	ret
   1bd5c:	mov	x1, x25
   1bd60:	add	x0, sp, #0x58
   1bd64:	bl	1bbc0 <asnprintf@@Base+0xb0>
   1bd68:	cbnz	w0, 1bd9c <chdir_long@@Base+0x194>
   1bd6c:	add	x20, x24, x19
   1bd70:	b	1bc8c <chdir_long@@Base+0x84>
   1bd74:	cmp	x21, x20
   1bd78:	b.ls	1bd8c <chdir_long@@Base+0x184>  // b.plast
   1bd7c:	mov	x1, x20
   1bd80:	add	x0, sp, #0x58
   1bd84:	bl	1bbc0 <asnprintf@@Base+0xb0>
   1bd88:	cbnz	w0, 1bd9c <chdir_long@@Base+0x194>
   1bd8c:	ldr	w0, [sp, #88]
   1bd90:	bl	a380 <fchdir@plt>
   1bd94:	mov	w19, w0
   1bd98:	cbz	w0, 1be18 <chdir_long@@Base+0x210>
   1bd9c:	ldr	w0, [sp, #88]
   1bda0:	mov	w19, #0xffffffff            	// #-1
   1bda4:	ldr	w20, [x22]
   1bda8:	bl	1bb80 <asnprintf@@Base+0x70>
   1bdac:	ldr	x25, [sp, #64]
   1bdb0:	str	w20, [x22]
   1bdb4:	mov	w0, w19
   1bdb8:	ldp	x19, x20, [sp, #16]
   1bdbc:	ldp	x21, x22, [sp, #32]
   1bdc0:	ldp	x23, x24, [sp, #48]
   1bdc4:	ldp	x29, x30, [sp], #96
   1bdc8:	ret
   1bdcc:	sub	x2, x21, #0x3
   1bdd0:	add	x0, x24, #0x3
   1bdd4:	mov	w1, #0x2f                  	// #47
   1bdd8:	bl	ac90 <memchr@plt>
   1bddc:	mov	x19, x0
   1bde0:	cbz	x0, 1be2c <chdir_long@@Base+0x224>
   1bde4:	strb	wzr, [x0]
   1bde8:	mov	x1, x24
   1bdec:	add	x0, sp, #0x58
   1bdf0:	bl	1bbc0 <asnprintf@@Base+0xb0>
   1bdf4:	mov	w1, #0x2f                  	// #47
   1bdf8:	strb	w1, [x19]
   1bdfc:	cbnz	w0, 1bd9c <chdir_long@@Base+0x194>
   1be00:	add	x19, x19, #0x1
   1be04:	mov	x1, x25
   1be08:	mov	x0, x19
   1be0c:	bl	ab40 <strspn@plt>
   1be10:	add	x20, x19, x0
   1be14:	b	1bc8c <chdir_long@@Base+0x84>
   1be18:	ldr	w0, [sp, #88]
   1be1c:	bl	1bb80 <asnprintf@@Base+0x70>
   1be20:	ldp	x21, x22, [sp, #32]
   1be24:	ldr	x25, [sp, #64]
   1be28:	b	1bd30 <chdir_long@@Base+0x128>
   1be2c:	mov	w19, #0xffffffff            	// #-1
   1be30:	ldp	x21, x22, [sp, #32]
   1be34:	ldr	x25, [sp, #64]
   1be38:	b	1bd30 <chdir_long@@Base+0x128>
   1be3c:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   1be40:	add	x3, x3, #0x4d0
   1be44:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1be48:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1be4c:	add	x3, x3, #0x10
   1be50:	add	x1, x1, #0x460
   1be54:	add	x0, x0, #0x4b8
   1be58:	mov	w2, #0xb3                  	// #179
   1be5c:	bl	aea0 <__assert_fail@plt>
   1be60:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   1be64:	add	x3, x3, #0x4d0
   1be68:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1be6c:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1be70:	add	x3, x3, #0x10
   1be74:	add	x1, x1, #0x460
   1be78:	add	x0, x0, #0x498
   1be7c:	mov	w2, #0xa2                  	// #162
   1be80:	bl	aea0 <__assert_fail@plt>
   1be84:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   1be88:	add	x3, x3, #0x4d0
   1be8c:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1be90:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1be94:	add	x3, x3, #0x10
   1be98:	add	x1, x1, #0x460
   1be9c:	add	x0, x0, #0x4a8
   1bea0:	mov	w2, #0xa3                  	// #163
   1bea4:	bl	aea0 <__assert_fail@plt>
   1bea8:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   1beac:	add	x3, x3, #0x4d0
   1beb0:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1beb4:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1beb8:	add	x3, x3, #0x10
   1bebc:	add	x1, x1, #0x460
   1bec0:	add	x0, x0, #0x480
   1bec4:	mov	w2, #0x7e                  	// #126
   1bec8:	bl	aea0 <__assert_fail@plt>
   1becc:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   1bed0:	add	x3, x3, #0x4d0
   1bed4:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1bed8:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1bedc:	add	x3, x3, #0x10
   1bee0:	add	x1, x1, #0x460
   1bee4:	add	x0, x0, #0x488
   1bee8:	mov	w2, #0x7f                  	// #127
   1beec:	bl	aea0 <__assert_fail@plt>

000000000001bef0 <rpl_fcntl@@Base>:
   1bef0:	stp	x29, x30, [sp, #-112]!
   1bef4:	mov	w6, #0xffffffe0            	// #-32
   1bef8:	mov	x29, sp
   1befc:	add	x7, sp, #0x50
   1bf00:	stp	x19, x20, [sp, #16]
   1bf04:	str	x7, [sp, #64]
   1bf08:	stp	w6, wzr, [sp, #72]
   1bf0c:	stp	x2, x3, [sp, #80]
   1bf10:	add	x2, sp, #0x70
   1bf14:	stp	x2, x2, [sp, #48]
   1bf18:	stp	x4, x5, [sp, #96]
   1bf1c:	cbz	w1, 1bfdc <rpl_fcntl@@Base+0xec>
   1bf20:	mov	w20, w0
   1bf24:	mov	w3, w1
   1bf28:	cmp	w1, #0x406
   1bf2c:	b.eq	1bff8 <rpl_fcntl@@Base+0x108>  // b.none
   1bf30:	cmp	w1, #0xb
   1bf34:	b.gt	1bf80 <rpl_fcntl@@Base+0x90>
   1bf38:	cmp	w1, #0x0
   1bf3c:	b.le	1bfac <rpl_fcntl@@Base+0xbc>
   1bf40:	mov	x1, #0x1                   	// #1
   1bf44:	mov	x2, #0x514                 	// #1300
   1bf48:	lsl	x1, x1, x3
   1bf4c:	tst	x1, x2
   1bf50:	b.ne	1c074 <rpl_fcntl@@Base+0x184>  // b.any
   1bf54:	mov	x2, #0xa0a                 	// #2570
   1bf58:	tst	x1, x2
   1bf5c:	b.eq	1bfac <rpl_fcntl@@Base+0xbc>  // b.none
   1bf60:	mov	w1, w3
   1bf64:	mov	w0, w20
   1bf68:	bl	ac00 <fcntl@plt>
   1bf6c:	mov	w19, w0
   1bf70:	mov	w0, w19
   1bf74:	ldp	x19, x20, [sp, #16]
   1bf78:	ldp	x29, x30, [sp], #112
   1bf7c:	ret
   1bf80:	sub	w0, w1, #0x400
   1bf84:	cmp	w0, #0xa
   1bf88:	b.hi	1bfac <rpl_fcntl@@Base+0xbc>  // b.pmore
   1bf8c:	mov	x1, #0x1                   	// #1
   1bf90:	mov	x2, #0x2c5                 	// #709
   1bf94:	lsl	x1, x1, x0
   1bf98:	tst	x1, x2
   1bf9c:	b.ne	1c074 <rpl_fcntl@@Base+0x184>  // b.any
   1bfa0:	mov	x2, #0x502                 	// #1282
   1bfa4:	tst	x1, x2
   1bfa8:	b.ne	1bf60 <rpl_fcntl@@Base+0x70>  // b.any
   1bfac:	ldr	w0, [sp, #72]
   1bfb0:	ldr	x1, [sp, #48]
   1bfb4:	tbnz	w0, #31, 1c120 <rpl_fcntl@@Base+0x230>
   1bfb8:	ldr	x2, [x1]
   1bfbc:	mov	w0, w20
   1bfc0:	mov	w1, w3
   1bfc4:	bl	ac00 <fcntl@plt>
   1bfc8:	mov	w19, w0
   1bfcc:	mov	w0, w19
   1bfd0:	ldp	x19, x20, [sp, #16]
   1bfd4:	ldp	x29, x30, [sp], #112
   1bfd8:	ret
   1bfdc:	ldr	w2, [sp, #80]
   1bfe0:	bl	ac00 <fcntl@plt>
   1bfe4:	mov	w19, w0
   1bfe8:	mov	w0, w19
   1bfec:	ldp	x19, x20, [sp, #16]
   1bff0:	ldp	x29, x30, [sp], #112
   1bff4:	ret
   1bff8:	stp	x21, x22, [sp, #32]
   1bffc:	adrp	x21, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1c000:	mov	w2, #0xffffffe8            	// #-24
   1c004:	str	w2, [sp, #72]
   1c008:	ldr	w2, [x21, #1104]
   1c00c:	ldr	w22, [sp, #80]
   1c010:	tbnz	w2, #31, 1c040 <rpl_fcntl@@Base+0x150>
   1c014:	mov	w2, w22
   1c018:	bl	ac00 <fcntl@plt>
   1c01c:	mov	w19, w0
   1c020:	tbnz	w0, #31, 1c0a4 <rpl_fcntl@@Base+0x1b4>
   1c024:	mov	w0, #0x1                   	// #1
   1c028:	str	w0, [x21, #1104]
   1c02c:	mov	w0, w19
   1c030:	ldp	x19, x20, [sp, #16]
   1c034:	ldp	x21, x22, [sp, #32]
   1c038:	ldp	x29, x30, [sp], #112
   1c03c:	ret
   1c040:	mov	w2, w22
   1c044:	mov	w1, #0x0                   	// #0
   1c048:	bl	ac00 <fcntl@plt>
   1c04c:	mov	w19, w0
   1c050:	tbnz	w0, #31, 1c060 <rpl_fcntl@@Base+0x170>
   1c054:	ldr	w0, [x21, #1104]
   1c058:	cmn	w0, #0x1
   1c05c:	b.eq	1c0d4 <rpl_fcntl@@Base+0x1e4>  // b.none
   1c060:	mov	w0, w19
   1c064:	ldp	x19, x20, [sp, #16]
   1c068:	ldp	x21, x22, [sp, #32]
   1c06c:	ldp	x29, x30, [sp], #112
   1c070:	ret
   1c074:	ldr	w0, [sp, #72]
   1c078:	ldr	x1, [sp, #48]
   1c07c:	tbnz	w0, #31, 1c134 <rpl_fcntl@@Base+0x244>
   1c080:	ldr	w2, [x1]
   1c084:	mov	w0, w20
   1c088:	mov	w1, w3
   1c08c:	bl	ac00 <fcntl@plt>
   1c090:	mov	w19, w0
   1c094:	mov	w0, w19
   1c098:	ldp	x19, x20, [sp, #16]
   1c09c:	ldp	x29, x30, [sp], #112
   1c0a0:	ret
   1c0a4:	bl	aeb0 <__errno_location@plt>
   1c0a8:	ldr	w0, [x0]
   1c0ac:	cmp	w0, #0x16
   1c0b0:	b.ne	1c024 <rpl_fcntl@@Base+0x134>  // b.any
   1c0b4:	mov	w2, w22
   1c0b8:	mov	w0, w20
   1c0bc:	mov	w1, #0x0                   	// #0
   1c0c0:	bl	ac00 <fcntl@plt>
   1c0c4:	mov	w19, w0
   1c0c8:	tbnz	w0, #31, 1c060 <rpl_fcntl@@Base+0x170>
   1c0cc:	mov	w0, #0xffffffff            	// #-1
   1c0d0:	str	w0, [x21, #1104]
   1c0d4:	mov	w0, w19
   1c0d8:	mov	w1, #0x1                   	// #1
   1c0dc:	bl	ac00 <fcntl@plt>
   1c0e0:	tbnz	w0, #31, 1c0fc <rpl_fcntl@@Base+0x20c>
   1c0e4:	orr	w2, w0, #0x1
   1c0e8:	mov	w1, #0x2                   	// #2
   1c0ec:	mov	w0, w19
   1c0f0:	bl	ac00 <fcntl@plt>
   1c0f4:	cmn	w0, #0x1
   1c0f8:	b.ne	1c060 <rpl_fcntl@@Base+0x170>  // b.any
   1c0fc:	bl	aeb0 <__errno_location@plt>
   1c100:	mov	x20, x0
   1c104:	mov	w0, w19
   1c108:	mov	w19, #0xffffffff            	// #-1
   1c10c:	ldr	w21, [x20]
   1c110:	bl	a850 <close@plt>
   1c114:	str	w21, [x20]
   1c118:	ldp	x21, x22, [sp, #32]
   1c11c:	b	1bf70 <rpl_fcntl@@Base+0x80>
   1c120:	cmn	w0, #0x7
   1c124:	b.ge	1bfb8 <rpl_fcntl@@Base+0xc8>  // b.tcont
   1c128:	ldr	x1, [sp, #56]
   1c12c:	add	x1, x1, w0, sxtw
   1c130:	b	1bfb8 <rpl_fcntl@@Base+0xc8>
   1c134:	cmn	w0, #0x7
   1c138:	b.ge	1c080 <rpl_fcntl@@Base+0x190>  // b.tcont
   1c13c:	ldr	x1, [sp, #56]
   1c140:	add	x1, x1, w0, sxtw
   1c144:	b	1c080 <rpl_fcntl@@Base+0x190>
   1c148:	ldp	w13, w8, [x1, #44]
   1c14c:	add	x11, x0, #0x8
   1c150:	ldr	w12, [x1]
   1c154:	cmp	w13, w8
   1c158:	mov	w7, w13
   1c15c:	ccmp	w8, w12, #0x0, lt  // lt = tstop
   1c160:	mov	w9, w12
   1c164:	sxtw	x14, w8
   1c168:	b.ge	1c1d0 <rpl_fcntl@@Base+0x2e0>  // b.tcont
   1c16c:	nop
   1c170:	sub	w10, w9, w8
   1c174:	sub	w2, w8, w7
   1c178:	cmp	w10, w2
   1c17c:	b.le	1c1e0 <rpl_fcntl@@Base+0x2f0>
   1c180:	sxtw	x3, w7
   1c184:	sub	w9, w9, w2
   1c188:	sub	w4, w2, #0x1
   1c18c:	mov	x5, x3
   1c190:	add	x4, x4, x3
   1c194:	sxtw	x3, w9
   1c198:	add	x2, x0, w7, sxtw #3
   1c19c:	sub	x3, x3, x5
   1c1a0:	add	x4, x11, x4, lsl #3
   1c1a4:	nop
   1c1a8:	ldr	x6, [x2, x3, lsl #3]
   1c1ac:	ldr	x5, [x2]
   1c1b0:	str	x6, [x2]
   1c1b4:	str	x5, [x2, x3, lsl #3]
   1c1b8:	add	x2, x2, #0x8
   1c1bc:	cmp	x4, x2
   1c1c0:	b.ne	1c1a8 <rpl_fcntl@@Base+0x2b8>  // b.any
   1c1c4:	cmp	w9, w8
   1c1c8:	ccmp	w7, w8, #0x0, gt
   1c1cc:	b.lt	1c170 <rpl_fcntl@@Base+0x280>  // b.tstop
   1c1d0:	sub	w0, w12, w8
   1c1d4:	add	w0, w0, w13
   1c1d8:	stp	w0, w12, [x1, #44]
   1c1dc:	ret
   1c1e0:	sxtw	x3, w7
   1c1e4:	sub	w6, w10, #0x1
   1c1e8:	add	x6, x6, x3
   1c1ec:	add	x2, x0, w7, sxtw #3
   1c1f0:	sub	x3, x14, x3
   1c1f4:	add	x6, x11, x6, lsl #3
   1c1f8:	ldr	x5, [x2, x3, lsl #3]
   1c1fc:	ldr	x4, [x2]
   1c200:	str	x5, [x2]
   1c204:	str	x4, [x2, x3, lsl #3]
   1c208:	add	x2, x2, #0x8
   1c20c:	cmp	x2, x6
   1c210:	b.ne	1c1f8 <rpl_fcntl@@Base+0x308>  // b.any
   1c214:	add	w7, w7, w10
   1c218:	cmp	w9, w8
   1c21c:	ccmp	w7, w8, #0x0, gt
   1c220:	b.lt	1c170 <rpl_fcntl@@Base+0x280>  // b.tstop
   1c224:	b	1c1d0 <rpl_fcntl@@Base+0x2e0>
   1c228:	stp	x29, x30, [sp, #-176]!
   1c22c:	mov	x29, sp
   1c230:	stp	x23, x24, [sp, #48]
   1c234:	ldr	x23, [x6, #32]
   1c238:	stp	x19, x20, [sp, #16]
   1c23c:	stp	x21, x22, [sp, #32]
   1c240:	mov	x22, x23
   1c244:	stp	x25, x26, [sp, #64]
   1c248:	mov	x25, x6
   1c24c:	stp	x27, x28, [sp, #80]
   1c250:	str	w0, [sp, #156]
   1c254:	ldrb	w0, [x23]
   1c258:	str	x3, [sp, #104]
   1c25c:	str	w5, [sp, #116]
   1c260:	cmp	w0, #0x3d
   1c264:	str	w7, [sp, #124]
   1c268:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   1c26c:	stp	x4, x1, [sp, #128]
   1c270:	str	x2, [sp, #144]
   1c274:	str	w0, [sp, #152]
   1c278:	b.eq	1c59c <rpl_fcntl@@Base+0x6ac>  // b.none
   1c27c:	nop
   1c280:	ldrb	w0, [x22, #1]!
   1c284:	cmp	w0, #0x3d
   1c288:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   1c28c:	b.ne	1c280 <rpl_fcntl@@Base+0x390>  // b.any
   1c290:	sub	x21, x22, x23
   1c294:	ldr	x19, [sp, #104]
   1c298:	mov	x20, #0x0                   	// #0
   1c29c:	ldr	x24, [x19]
   1c2a0:	mov	x27, x24
   1c2a4:	cbnz	x24, 1c2b0 <rpl_fcntl@@Base+0x3c0>
   1c2a8:	b	1c36c <rpl_fcntl@@Base+0x47c>
   1c2ac:	sxtw	x20, w0
   1c2b0:	mov	x1, x23
   1c2b4:	mov	x2, x21
   1c2b8:	mov	x0, x27
   1c2bc:	bl	a6c0 <strncmp@plt>
   1c2c0:	mov	w1, w0
   1c2c4:	mov	x0, x27
   1c2c8:	cbnz	w1, 1c2d8 <rpl_fcntl@@Base+0x3e8>
   1c2cc:	bl	a340 <strlen@plt>
   1c2d0:	cmp	x0, x21
   1c2d4:	b.eq	1c3d8 <rpl_fcntl@@Base+0x4e8>  // b.none
   1c2d8:	ldr	x27, [x19, #32]!
   1c2dc:	add	w0, w20, #0x1
   1c2e0:	cbnz	x27, 1c2ac <rpl_fcntl@@Base+0x3bc>
   1c2e4:	ldr	x26, [sp, #104]
   1c2e8:	sxtw	x0, w0
   1c2ec:	mov	x19, #0x0                   	// #0
   1c2f0:	mov	x28, #0x0                   	// #0
   1c2f4:	str	wzr, [sp, #120]
   1c2f8:	str	wzr, [sp, #164]
   1c2fc:	str	x0, [sp, #168]
   1c300:	mov	w0, #0xffffffff            	// #-1
   1c304:	str	w0, [sp, #160]
   1c308:	mov	x0, x24
   1c30c:	mov	x2, x21
   1c310:	mov	x1, x23
   1c314:	bl	a6c0 <strncmp@plt>
   1c318:	cbnz	w0, 1c348 <rpl_fcntl@@Base+0x458>
   1c31c:	cbz	x19, 1c47c <rpl_fcntl@@Base+0x58c>
   1c320:	ldr	w0, [sp, #116]
   1c324:	cbz	w0, 1c438 <rpl_fcntl@@Base+0x548>
   1c328:	ldr	w0, [sp, #120]
   1c32c:	cbnz	w0, 1c348 <rpl_fcntl@@Base+0x458>
   1c330:	ldr	w0, [sp, #124]
   1c334:	cbz	w0, 1c494 <rpl_fcntl@@Base+0x5a4>
   1c338:	cbz	x27, 1c5bc <rpl_fcntl@@Base+0x6cc>
   1c33c:	mov	w0, #0x1                   	// #1
   1c340:	strb	w0, [x27, x28]
   1c344:	nop
   1c348:	ldr	x24, [x26, #32]!
   1c34c:	add	x28, x28, #0x1
   1c350:	cbnz	x24, 1c308 <rpl_fcntl@@Base+0x418>
   1c354:	ldr	w0, [sp, #120]
   1c358:	cmp	x27, #0x0
   1c35c:	ccmp	w0, #0x0, #0x0, eq  // eq = none
   1c360:	b.ne	1c4f4 <rpl_fcntl@@Base+0x604>  // b.any
   1c364:	ldr	w20, [sp, #160]
   1c368:	cbnz	x19, 1c3d8 <rpl_fcntl@@Base+0x4e8>
   1c36c:	ldr	w0, [sp, #116]
   1c370:	cbz	w0, 1c39c <rpl_fcntl@@Base+0x4ac>
   1c374:	ldrsw	x0, [x25]
   1c378:	ldr	x1, [sp, #136]
   1c37c:	ldr	x0, [x1, x0, lsl #3]
   1c380:	ldrb	w0, [x0, #1]
   1c384:	cmp	w0, #0x2d
   1c388:	b.eq	1c39c <rpl_fcntl@@Base+0x4ac>  // b.none
   1c38c:	ldr	w1, [sp, #152]
   1c390:	ldr	x0, [sp, #144]
   1c394:	bl	ab60 <strchr@plt>
   1c398:	cbnz	x0, 1c638 <rpl_fcntl@@Base+0x748>
   1c39c:	ldr	w0, [sp, #124]
   1c3a0:	cbnz	w0, 1c4b0 <rpl_fcntl@@Base+0x5c0>
   1c3a4:	ldr	w1, [x25]
   1c3a8:	mov	w0, #0x3f                  	// #63
   1c3ac:	str	wzr, [x25, #8]
   1c3b0:	add	w1, w1, #0x1
   1c3b4:	str	w1, [x25]
   1c3b8:	str	xzr, [x25, #32]
   1c3bc:	ldp	x19, x20, [sp, #16]
   1c3c0:	ldp	x21, x22, [sp, #32]
   1c3c4:	ldp	x23, x24, [sp, #48]
   1c3c8:	ldp	x25, x26, [sp, #64]
   1c3cc:	ldp	x27, x28, [sp, #80]
   1c3d0:	ldp	x29, x30, [sp], #176
   1c3d4:	ret
   1c3d8:	ldr	w0, [x25]
   1c3dc:	ldr	w3, [x19, #8]
   1c3e0:	add	w1, w0, #0x1
   1c3e4:	str	w1, [x25]
   1c3e8:	str	xzr, [x25, #32]
   1c3ec:	ldrb	w2, [x22]
   1c3f0:	cbnz	w2, 1c46c <rpl_fcntl@@Base+0x57c>
   1c3f4:	cmp	w3, #0x1
   1c3f8:	b.eq	1c578 <rpl_fcntl@@Base+0x688>  // b.none
   1c3fc:	ldr	x0, [sp, #128]
   1c400:	cbz	x0, 1c408 <rpl_fcntl@@Base+0x518>
   1c404:	str	w20, [x0]
   1c408:	ldr	x1, [x19, #16]
   1c40c:	ldr	w0, [x19, #24]
   1c410:	cbz	x1, 1c41c <rpl_fcntl@@Base+0x52c>
   1c414:	str	w0, [x1]
   1c418:	mov	w0, #0x0                   	// #0
   1c41c:	ldp	x19, x20, [sp, #16]
   1c420:	ldp	x21, x22, [sp, #32]
   1c424:	ldp	x23, x24, [sp, #48]
   1c428:	ldp	x25, x26, [sp, #64]
   1c42c:	ldp	x27, x28, [sp, #80]
   1c430:	ldp	x29, x30, [sp], #176
   1c434:	ret
   1c438:	ldr	w1, [x19, #8]
   1c43c:	ldr	w0, [x26, #8]
   1c440:	cmp	w1, w0
   1c444:	b.ne	1c328 <rpl_fcntl@@Base+0x438>  // b.any
   1c448:	ldr	x1, [x19, #16]
   1c44c:	ldr	x0, [x26, #16]
   1c450:	cmp	x1, x0
   1c454:	b.ne	1c328 <rpl_fcntl@@Base+0x438>  // b.any
   1c458:	ldr	w1, [x19, #24]
   1c45c:	ldr	w0, [x26, #24]
   1c460:	cmp	w1, w0
   1c464:	b.ne	1c328 <rpl_fcntl@@Base+0x438>  // b.any
   1c468:	b	1c348 <rpl_fcntl@@Base+0x458>
   1c46c:	cbz	w3, 1c5a4 <rpl_fcntl@@Base+0x6b4>
   1c470:	add	x22, x22, #0x1
   1c474:	str	x22, [x25, #16]
   1c478:	b	1c3fc <rpl_fcntl@@Base+0x50c>
   1c47c:	mov	x19, x26
   1c480:	str	w28, [sp, #160]
   1c484:	ldr	x24, [x26, #32]!
   1c488:	add	x28, x28, #0x1
   1c48c:	cbnz	x24, 1c308 <rpl_fcntl@@Base+0x418>
   1c490:	b	1c354 <rpl_fcntl@@Base+0x464>
   1c494:	mov	w0, #0x1                   	// #1
   1c498:	str	w0, [sp, #120]
   1c49c:	cbnz	x27, 1c33c <rpl_fcntl@@Base+0x44c>
   1c4a0:	ldr	x24, [x26, #32]!
   1c4a4:	add	x28, x28, #0x1
   1c4a8:	cbnz	x24, 1c308 <rpl_fcntl@@Base+0x418>
   1c4ac:	b	1c354 <rpl_fcntl@@Base+0x464>
   1c4b0:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   1c4b4:	mov	w2, #0x5                   	// #5
   1c4b8:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1c4bc:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   1c4c0:	ldr	x3, [x3, #3816]
   1c4c4:	add	x1, x1, #0x548
   1c4c8:	add	x0, x0, #0x780
   1c4cc:	ldr	x19, [x3]
   1c4d0:	bl	ada0 <dcgettext@plt>
   1c4d4:	mov	x1, x0
   1c4d8:	ldr	x0, [sp, #136]
   1c4dc:	ldr	x4, [x25, #32]
   1c4e0:	ldr	x2, [x0]
   1c4e4:	mov	x0, x19
   1c4e8:	ldr	x3, [sp, #176]
   1c4ec:	bl	afa0 <fprintf@plt>
   1c4f0:	b	1c3a4 <rpl_fcntl@@Base+0x4b4>
   1c4f4:	ldr	w0, [sp, #124]
   1c4f8:	cbz	w0, 1c548 <rpl_fcntl@@Base+0x658>
   1c4fc:	adrp	x21, 46000 <vasnprintf@@Base+0x1b1e0>
   1c500:	ldr	w0, [sp, #120]
   1c504:	ldr	x23, [x21, #3816]
   1c508:	ldr	x19, [x23]
   1c50c:	cbz	w0, 1c66c <rpl_fcntl@@Base+0x77c>
   1c510:	mov	w2, #0x5                   	// #5
   1c514:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1c518:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   1c51c:	add	x1, x1, #0x4f0
   1c520:	add	x0, x0, #0x780
   1c524:	bl	ada0 <dcgettext@plt>
   1c528:	ldr	x1, [sp, #136]
   1c52c:	ldr	x4, [x25, #32]
   1c530:	ldr	x2, [x1]
   1c534:	mov	x1, x0
   1c538:	ldr	x3, [sp, #176]
   1c53c:	mov	x0, x19
   1c540:	bl	afa0 <fprintf@plt>
   1c544:	ldr	x23, [x25, #32]
   1c548:	ldr	w0, [sp, #164]
   1c54c:	cbnz	w0, 1c62c <rpl_fcntl@@Base+0x73c>
   1c550:	mov	x0, x23
   1c554:	bl	a340 <strlen@plt>
   1c558:	ldr	w1, [x25]
   1c55c:	add	x23, x23, x0
   1c560:	mov	w0, #0x3f                  	// #63
   1c564:	str	wzr, [x25, #8]
   1c568:	add	w1, w1, #0x1
   1c56c:	str	w1, [x25]
   1c570:	str	x23, [x25, #32]
   1c574:	b	1c41c <rpl_fcntl@@Base+0x52c>
   1c578:	ldr	w2, [sp, #156]
   1c57c:	cmp	w1, w2
   1c580:	b.ge	1c640 <rpl_fcntl@@Base+0x750>  // b.tcont
   1c584:	ldr	x2, [sp, #136]
   1c588:	add	w0, w0, #0x2
   1c58c:	ldr	x1, [x2, w1, sxtw #3]
   1c590:	str	w0, [x25]
   1c594:	str	x1, [x25, #16]
   1c598:	b	1c3fc <rpl_fcntl@@Base+0x50c>
   1c59c:	mov	x21, #0x0                   	// #0
   1c5a0:	b	1c294 <rpl_fcntl@@Base+0x3a4>
   1c5a4:	ldr	w0, [sp, #124]
   1c5a8:	cbnz	w0, 1c5e8 <rpl_fcntl@@Base+0x6f8>
   1c5ac:	ldr	w1, [x19, #24]
   1c5b0:	mov	w0, #0x3f                  	// #63
   1c5b4:	str	w1, [x25, #8]
   1c5b8:	b	1c41c <rpl_fcntl@@Base+0x52c>
   1c5bc:	ldr	x0, [sp, #168]
   1c5c0:	mov	x1, #0x1                   	// #1
   1c5c4:	bl	a770 <calloc@plt>
   1c5c8:	mov	x27, x0
   1c5cc:	cbz	x0, 1c764 <rpl_fcntl@@Base+0x874>
   1c5d0:	mov	w0, #0x1                   	// #1
   1c5d4:	str	w0, [sp, #164]
   1c5d8:	ldr	w0, [sp, #160]
   1c5dc:	mov	w1, #0x1                   	// #1
   1c5e0:	strb	w1, [x27, w0, sxtw]
   1c5e4:	b	1c33c <rpl_fcntl@@Base+0x44c>
   1c5e8:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   1c5ec:	mov	w2, #0x5                   	// #5
   1c5f0:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1c5f4:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   1c5f8:	ldr	x3, [x3, #3816]
   1c5fc:	add	x1, x1, #0x568
   1c600:	add	x0, x0, #0x780
   1c604:	ldr	x20, [x3]
   1c608:	bl	ada0 <dcgettext@plt>
   1c60c:	mov	x1, x0
   1c610:	ldr	x0, [sp, #136]
   1c614:	ldr	x4, [x19]
   1c618:	ldr	x2, [x0]
   1c61c:	mov	x0, x20
   1c620:	ldr	x3, [sp, #176]
   1c624:	bl	afa0 <fprintf@plt>
   1c628:	b	1c5ac <rpl_fcntl@@Base+0x6bc>
   1c62c:	mov	x0, x27
   1c630:	bl	aa50 <free@plt>
   1c634:	b	1c550 <rpl_fcntl@@Base+0x660>
   1c638:	mov	w0, #0xffffffff            	// #-1
   1c63c:	b	1c41c <rpl_fcntl@@Base+0x52c>
   1c640:	ldr	w0, [sp, #124]
   1c644:	cbnz	w0, 1c720 <rpl_fcntl@@Base+0x830>
   1c648:	ldr	x2, [sp, #144]
   1c64c:	mov	w0, #0x3a                  	// #58
   1c650:	ldr	w1, [x19, #24]
   1c654:	str	w1, [x25, #8]
   1c658:	mov	w1, #0x3f                  	// #63
   1c65c:	ldrb	w2, [x2]
   1c660:	cmp	w2, w0
   1c664:	csel	w0, w0, w1, eq  // eq = none
   1c668:	b	1c41c <rpl_fcntl@@Base+0x52c>
   1c66c:	mov	x0, x19
   1c670:	bl	a3a0 <flockfile@plt>
   1c674:	mov	w2, #0x5                   	// #5
   1c678:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1c67c:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   1c680:	add	x1, x1, #0x510
   1c684:	add	x0, x0, #0x780
   1c688:	add	x20, x20, #0x1
   1c68c:	ldr	x19, [x23]
   1c690:	mov	x22, x23
   1c694:	ldr	x26, [sp, #104]
   1c698:	bl	ada0 <dcgettext@plt>
   1c69c:	ldr	x1, [sp, #136]
   1c6a0:	add	x20, x20, x27
   1c6a4:	ldr	x4, [x25, #32]
   1c6a8:	ldr	x2, [x1]
   1c6ac:	mov	x1, x0
   1c6b0:	ldr	x3, [sp, #176]
   1c6b4:	mov	x0, x19
   1c6b8:	mov	x19, x27
   1c6bc:	bl	afa0 <fprintf@plt>
   1c6c0:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1c6c4:	ldr	x0, [x23]
   1c6c8:	add	x23, x1, #0x540
   1c6cc:	b	1c6dc <rpl_fcntl@@Base+0x7ec>
   1c6d0:	add	x26, x26, #0x20
   1c6d4:	cmp	x20, x19
   1c6d8:	b.eq	1c700 <rpl_fcntl@@Base+0x810>  // b.none
   1c6dc:	ldrb	w2, [x19]
   1c6e0:	add	x19, x19, #0x1
   1c6e4:	cbz	w2, 1c6d0 <rpl_fcntl@@Base+0x7e0>
   1c6e8:	ldr	x3, [x26]
   1c6ec:	mov	x1, x23
   1c6f0:	ldr	x2, [sp, #176]
   1c6f4:	bl	afa0 <fprintf@plt>
   1c6f8:	ldr	x0, [x22]
   1c6fc:	b	1c6d0 <rpl_fcntl@@Base+0x7e0>
   1c700:	mov	x1, x0
   1c704:	mov	w0, #0xa                   	// #10
   1c708:	bl	a4e0 <fputc@plt>
   1c70c:	ldr	x21, [x21, #3816]
   1c710:	ldr	x0, [x21]
   1c714:	bl	a620 <funlockfile@plt>
   1c718:	ldr	x23, [x25, #32]
   1c71c:	b	1c548 <rpl_fcntl@@Base+0x658>
   1c720:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   1c724:	mov	w2, #0x5                   	// #5
   1c728:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1c72c:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   1c730:	ldr	x3, [x3, #3816]
   1c734:	add	x1, x1, #0x598
   1c738:	add	x0, x0, #0x780
   1c73c:	ldr	x20, [x3]
   1c740:	bl	ada0 <dcgettext@plt>
   1c744:	mov	x1, x0
   1c748:	ldr	x0, [sp, #136]
   1c74c:	ldr	x4, [x19]
   1c750:	ldr	x2, [x0]
   1c754:	mov	x0, x20
   1c758:	ldr	x3, [sp, #176]
   1c75c:	bl	afa0 <fprintf@plt>
   1c760:	b	1c648 <rpl_fcntl@@Base+0x758>
   1c764:	mov	w0, #0x1                   	// #1
   1c768:	str	w0, [sp, #120]
   1c76c:	b	1c348 <rpl_fcntl@@Base+0x458>

000000000001c770 <_getopt_internal_r@@Base>:
   1c770:	sub	sp, sp, #0x70
   1c774:	cmp	w0, #0x0
   1c778:	stp	x29, x30, [sp, #16]
   1c77c:	add	x29, sp, #0x10
   1c780:	stp	x25, x26, [sp, #80]
   1c784:	ldr	w26, [x6, #4]
   1c788:	b.le	1cc44 <_getopt_internal_r@@Base+0x4d4>
   1c78c:	stp	x19, x20, [sp, #32]
   1c790:	mov	w20, w0
   1c794:	ldr	w0, [x6]
   1c798:	stp	x21, x22, [sp, #48]
   1c79c:	mov	x19, x6
   1c7a0:	mov	x25, x3
   1c7a4:	stp	x23, x24, [sp, #64]
   1c7a8:	mov	x22, x4
   1c7ac:	mov	x23, x1
   1c7b0:	stp	x27, x28, [sp, #96]
   1c7b4:	mov	x24, x2
   1c7b8:	mov	w27, w5
   1c7bc:	str	xzr, [x6, #16]
   1c7c0:	cbz	w0, 1c9b0 <_getopt_internal_r@@Base+0x240>
   1c7c4:	ldr	w1, [x6, #24]
   1c7c8:	cbnz	w1, 1c7f8 <_getopt_internal_r@@Base+0x88>
   1c7cc:	str	xzr, [x19, #32]
   1c7d0:	stp	w0, w0, [x19, #44]
   1c7d4:	ldrb	w0, [x24]
   1c7d8:	cmp	w0, #0x2d
   1c7dc:	b.eq	1c8bc <_getopt_internal_r@@Base+0x14c>  // b.none
   1c7e0:	cmp	w0, #0x2b
   1c7e4:	b.eq	1cbe8 <_getopt_internal_r@@Base+0x478>  // b.none
   1c7e8:	mov	x21, #0x0                   	// #0
   1c7ec:	cbz	w7, 1cb60 <_getopt_internal_r@@Base+0x3f0>
   1c7f0:	str	wzr, [x19, #40]
   1c7f4:	b	1c8cc <_getopt_internal_r@@Base+0x15c>
   1c7f8:	ldrb	w0, [x2]
   1c7fc:	mov	w1, #0xfd                  	// #253
   1c800:	ldr	x21, [x6, #32]
   1c804:	sub	w2, w0, #0x2b
   1c808:	tst	w2, w1
   1c80c:	b.ne	1c8d8 <_getopt_internal_r@@Base+0x168>  // b.any
   1c810:	ldrb	w0, [x24, #1]
   1c814:	add	x24, x24, #0x1
   1c818:	cmp	w0, #0x3a
   1c81c:	csel	w26, w26, wzr, ne  // ne = any
   1c820:	cbnz	x21, 1c8e4 <_getopt_internal_r@@Base+0x174>
   1c824:	nop
   1c828:	ldr	w0, [x19]
   1c82c:	ldr	w1, [x19, #48]
   1c830:	cmp	w1, w0
   1c834:	b.le	1c83c <_getopt_internal_r@@Base+0xcc>
   1c838:	str	w0, [x19, #48]
   1c83c:	ldr	w1, [x19, #44]
   1c840:	cmp	w0, w1
   1c844:	b.ge	1c84c <_getopt_internal_r@@Base+0xdc>  // b.tcont
   1c848:	str	w0, [x19, #44]
   1c84c:	ldr	w1, [x19, #40]
   1c850:	cmp	w1, #0x1
   1c854:	b.eq	1c9fc <_getopt_internal_r@@Base+0x28c>  // b.none
   1c858:	cmp	w20, w0
   1c85c:	b.eq	1c9d4 <_getopt_internal_r@@Base+0x264>  // b.none
   1c860:	ldr	x21, [x23, w0, sxtw #3]
   1c864:	ldrb	w1, [x21]
   1c868:	cmp	w1, #0x2d
   1c86c:	b.ne	1c96c <_getopt_internal_r@@Base+0x1fc>  // b.any
   1c870:	ldrb	w1, [x21, #1]
   1c874:	cmp	w1, #0x2d
   1c878:	b.ne	1c96c <_getopt_internal_r@@Base+0x1fc>  // b.any
   1c87c:	ldrb	w1, [x21, #2]
   1c880:	cbnz	w1, 1c96c <_getopt_internal_r@@Base+0x1fc>
   1c884:	ldp	w1, w2, [x19, #44]
   1c888:	add	w0, w0, #0x1
   1c88c:	str	w0, [x19]
   1c890:	cmp	w1, w2
   1c894:	b.eq	1cc4c <_getopt_internal_r@@Base+0x4dc>  // b.none
   1c898:	cmp	w0, w2
   1c89c:	b.eq	1c8b0 <_getopt_internal_r@@Base+0x140>  // b.none
   1c8a0:	mov	x1, x19
   1c8a4:	mov	x0, x23
   1c8a8:	bl	1c148 <rpl_fcntl@@Base+0x258>
   1c8ac:	ldr	w1, [x19, #44]
   1c8b0:	str	w20, [x19]
   1c8b4:	str	w20, [x19, #48]
   1c8b8:	b	1c9d8 <_getopt_internal_r@@Base+0x268>
   1c8bc:	add	x24, x24, #0x1
   1c8c0:	mov	w0, #0x2                   	// #2
   1c8c4:	mov	x21, #0x0                   	// #0
   1c8c8:	str	w0, [x19, #40]
   1c8cc:	mov	w0, #0x1                   	// #1
   1c8d0:	str	w0, [x19, #24]
   1c8d4:	ldrb	w0, [x24]
   1c8d8:	cmp	w0, #0x3a
   1c8dc:	csel	w26, w26, wzr, ne  // ne = any
   1c8e0:	cbz	x21, 1c828 <_getopt_internal_r@@Base+0xb8>
   1c8e4:	ldrb	w0, [x21]
   1c8e8:	cbz	w0, 1c828 <_getopt_internal_r@@Base+0xb8>
   1c8ec:	add	x28, x21, #0x1
   1c8f0:	str	x28, [x19, #32]
   1c8f4:	mov	x0, x24
   1c8f8:	ldrb	w27, [x21]
   1c8fc:	mov	w1, w27
   1c900:	bl	ab60 <strchr@plt>
   1c904:	ldrb	w1, [x21, #1]
   1c908:	mov	x2, x0
   1c90c:	mov	w0, w27
   1c910:	cbnz	w1, 1c920 <_getopt_internal_r@@Base+0x1b0>
   1c914:	ldr	w1, [x19]
   1c918:	add	w1, w1, #0x1
   1c91c:	str	w1, [x19]
   1c920:	sub	w1, w27, #0x3a
   1c924:	cmp	x2, #0x0
   1c928:	and	w1, w1, #0xff
   1c92c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
   1c930:	b.ls	1cbf8 <_getopt_internal_r@@Base+0x488>  // b.plast
   1c934:	ldrb	w3, [x2]
   1c938:	ldrb	w1, [x2, #1]
   1c93c:	cmp	w3, #0x57
   1c940:	b.eq	1caf0 <_getopt_internal_r@@Base+0x380>  // b.none
   1c944:	cmp	w1, #0x3a
   1c948:	b.eq	1cb80 <_getopt_internal_r@@Base+0x410>  // b.none
   1c94c:	ldp	x29, x30, [sp, #16]
   1c950:	ldp	x19, x20, [sp, #32]
   1c954:	ldp	x21, x22, [sp, #48]
   1c958:	ldp	x23, x24, [sp, #64]
   1c95c:	ldp	x25, x26, [sp, #80]
   1c960:	ldp	x27, x28, [sp, #96]
   1c964:	add	sp, sp, #0x70
   1c968:	ret
   1c96c:	ldrb	w1, [x21]
   1c970:	cmp	w1, #0x2d
   1c974:	b.eq	1ca70 <_getopt_internal_r@@Base+0x300>  // b.none
   1c978:	ldr	w1, [x19, #40]
   1c97c:	cbz	w1, 1cc34 <_getopt_internal_r@@Base+0x4c4>
   1c980:	add	w1, w0, #0x1
   1c984:	mov	w0, #0x1                   	// #1
   1c988:	ldp	x23, x24, [sp, #64]
   1c98c:	ldp	x27, x28, [sp, #96]
   1c990:	str	w1, [x19]
   1c994:	str	x21, [x19, #16]
   1c998:	ldp	x19, x20, [sp, #32]
   1c99c:	ldp	x21, x22, [sp, #48]
   1c9a0:	ldp	x29, x30, [sp, #16]
   1c9a4:	ldp	x25, x26, [sp, #80]
   1c9a8:	add	sp, sp, #0x70
   1c9ac:	ret
   1c9b0:	mov	w1, #0x1                   	// #1
   1c9b4:	str	w1, [x6]
   1c9b8:	mov	w0, w1
   1c9bc:	str	xzr, [x19, #32]
   1c9c0:	stp	w0, w0, [x19, #44]
   1c9c4:	ldrb	w0, [x24]
   1c9c8:	cmp	w0, #0x2d
   1c9cc:	b.ne	1c7e0 <_getopt_internal_r@@Base+0x70>  // b.any
   1c9d0:	b	1c8bc <_getopt_internal_r@@Base+0x14c>
   1c9d4:	ldp	w1, w20, [x19, #44]
   1c9d8:	cmp	w20, w1
   1c9dc:	b.eq	1cc34 <_getopt_internal_r@@Base+0x4c4>  // b.none
   1c9e0:	mov	w0, #0xffffffff            	// #-1
   1c9e4:	ldp	x21, x22, [sp, #48]
   1c9e8:	ldp	x23, x24, [sp, #64]
   1c9ec:	ldp	x27, x28, [sp, #96]
   1c9f0:	str	w1, [x19]
   1c9f4:	ldp	x19, x20, [sp, #32]
   1c9f8:	b	1c9a0 <_getopt_internal_r@@Base+0x230>
   1c9fc:	ldp	w1, w8, [x19, #44]
   1ca00:	cmp	w1, w8
   1ca04:	b.eq	1cbc8 <_getopt_internal_r@@Base+0x458>  // b.none
   1ca08:	cmp	w0, w8
   1ca0c:	b.eq	1ca20 <_getopt_internal_r@@Base+0x2b0>  // b.none
   1ca10:	mov	x1, x19
   1ca14:	mov	x0, x23
   1ca18:	bl	1c148 <rpl_fcntl@@Base+0x258>
   1ca1c:	ldr	w8, [x19]
   1ca20:	cmp	w20, w8
   1ca24:	b.le	1cbdc <_getopt_internal_r@@Base+0x46c>
   1ca28:	sxtw	x6, w8
   1ca2c:	b	1ca40 <_getopt_internal_r@@Base+0x2d0>
   1ca30:	add	w8, w2, #0x1
   1ca34:	str	w8, [x19]
   1ca38:	cmp	w20, w6
   1ca3c:	b.le	1cbdc <_getopt_internal_r@@Base+0x46c>
   1ca40:	ldr	x0, [x23, x6, lsl #3]
   1ca44:	mov	w2, w6
   1ca48:	mov	w8, w6
   1ca4c:	add	x6, x6, #0x1
   1ca50:	ldrb	w1, [x0]
   1ca54:	cmp	w1, #0x2d
   1ca58:	b.ne	1ca30 <_getopt_internal_r@@Base+0x2c0>  // b.any
   1ca5c:	ldrb	w0, [x0, #1]
   1ca60:	cbz	w0, 1ca30 <_getopt_internal_r@@Base+0x2c0>
   1ca64:	ldr	w0, [x19]
   1ca68:	str	w8, [x19, #48]
   1ca6c:	b	1c858 <_getopt_internal_r@@Base+0xe8>
   1ca70:	ldrb	w1, [x21, #1]
   1ca74:	cbz	w1, 1c978 <_getopt_internal_r@@Base+0x208>
   1ca78:	cbz	x25, 1cae8 <_getopt_internal_r@@Base+0x378>
   1ca7c:	cmp	w1, #0x2d
   1ca80:	b.eq	1ccd4 <_getopt_internal_r@@Base+0x564>  // b.none
   1ca84:	cbz	w27, 1cae8 <_getopt_internal_r@@Base+0x378>
   1ca88:	ldrb	w0, [x21, #2]
   1ca8c:	cbnz	w0, 1ca9c <_getopt_internal_r@@Base+0x32c>
   1ca90:	mov	x0, x24
   1ca94:	bl	ab60 <strchr@plt>
   1ca98:	cbnz	x0, 1cae8 <_getopt_internal_r@@Base+0x378>
   1ca9c:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1caa0:	add	x0, x0, #0x5d8
   1caa4:	str	x0, [sp]
   1caa8:	add	x21, x21, #0x1
   1caac:	str	x21, [x19, #32]
   1cab0:	mov	w5, w27
   1cab4:	mov	w7, w26
   1cab8:	mov	x6, x19
   1cabc:	mov	x4, x22
   1cac0:	mov	x3, x25
   1cac4:	mov	x2, x24
   1cac8:	mov	x1, x23
   1cacc:	mov	w0, w20
   1cad0:	bl	1c228 <rpl_fcntl@@Base+0x338>
   1cad4:	cmn	w0, #0x1
   1cad8:	b.ne	1c94c <_getopt_internal_r@@Base+0x1dc>  // b.any
   1cadc:	ldrsw	x0, [x19]
   1cae0:	ldr	x21, [x23, x0, lsl #3]
   1cae4:	nop
   1cae8:	add	x21, x21, #0x1
   1caec:	b	1c8ec <_getopt_internal_r@@Base+0x17c>
   1caf0:	cmp	w1, #0x3b
   1caf4:	ccmp	x25, #0x0, #0x4, eq  // eq = none
   1caf8:	b.eq	1c944 <_getopt_internal_r@@Base+0x1d4>  // b.none
   1cafc:	ldrb	w0, [x21, #1]
   1cb00:	cbnz	w0, 1cb14 <_getopt_internal_r@@Base+0x3a4>
   1cb04:	ldr	w0, [x19]
   1cb08:	cmp	w0, w20
   1cb0c:	b.eq	1cd0c <_getopt_internal_r@@Base+0x59c>  // b.none
   1cb10:	ldr	x28, [x23, w0, sxtw #3]
   1cb14:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1cb18:	add	x0, x0, #0x630
   1cb1c:	mov	w7, w26
   1cb20:	mov	x6, x19
   1cb24:	mov	x4, x22
   1cb28:	mov	x3, x25
   1cb2c:	mov	x2, x24
   1cb30:	mov	x1, x23
   1cb34:	str	x0, [sp]
   1cb38:	mov	w0, w20
   1cb3c:	mov	w5, #0x0                   	// #0
   1cb40:	str	xzr, [x19, #16]
   1cb44:	str	x28, [x19, #32]
   1cb48:	bl	1c228 <rpl_fcntl@@Base+0x338>
   1cb4c:	ldp	x19, x20, [sp, #32]
   1cb50:	ldp	x21, x22, [sp, #48]
   1cb54:	ldp	x23, x24, [sp, #64]
   1cb58:	ldp	x27, x28, [sp, #96]
   1cb5c:	b	1c9a0 <_getopt_internal_r@@Base+0x230>
   1cb60:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1cb64:	add	x0, x0, #0x5c0
   1cb68:	bl	aed0 <getenv@plt>
   1cb6c:	ldr	x21, [x19, #32]
   1cb70:	cbnz	x0, 1c7f0 <_getopt_internal_r@@Base+0x80>
   1cb74:	mov	w0, #0x1                   	// #1
   1cb78:	str	w0, [x19, #40]
   1cb7c:	b	1c8cc <_getopt_internal_r@@Base+0x15c>
   1cb80:	ldrb	w1, [x2, #2]
   1cb84:	ldrb	w2, [x21, #1]
   1cb88:	cmp	w1, #0x3a
   1cb8c:	b.eq	1cc94 <_getopt_internal_r@@Base+0x524>  // b.none
   1cb90:	ldr	w1, [x19]
   1cb94:	cbnz	w2, 1cc24 <_getopt_internal_r@@Base+0x4b4>
   1cb98:	cmp	w20, w1
   1cb9c:	b.eq	1ccb4 <_getopt_internal_r@@Base+0x544>  // b.none
   1cba0:	ldr	x2, [x23, w1, sxtw #3]
   1cba4:	add	w1, w1, #0x1
   1cba8:	str	w1, [x19]
   1cbac:	str	x2, [x19, #16]
   1cbb0:	ldp	x21, x22, [sp, #48]
   1cbb4:	ldp	x23, x24, [sp, #64]
   1cbb8:	ldp	x27, x28, [sp, #96]
   1cbbc:	str	xzr, [x19, #32]
   1cbc0:	ldp	x19, x20, [sp, #32]
   1cbc4:	b	1c9a0 <_getopt_internal_r@@Base+0x230>
   1cbc8:	cmp	w0, w8
   1cbcc:	b.eq	1ca20 <_getopt_internal_r@@Base+0x2b0>  // b.none
   1cbd0:	mov	w8, w0
   1cbd4:	str	w0, [x19, #44]
   1cbd8:	b	1ca20 <_getopt_internal_r@@Base+0x2b0>
   1cbdc:	mov	w0, w8
   1cbe0:	str	w8, [x19, #48]
   1cbe4:	b	1c858 <_getopt_internal_r@@Base+0xe8>
   1cbe8:	add	x24, x24, #0x1
   1cbec:	mov	x21, #0x0                   	// #0
   1cbf0:	str	wzr, [x19, #40]
   1cbf4:	b	1c8cc <_getopt_internal_r@@Base+0x15c>
   1cbf8:	cbnz	w26, 1cc58 <_getopt_internal_r@@Base+0x4e8>
   1cbfc:	mov	w0, #0x3f                  	// #63
   1cc00:	ldp	x29, x30, [sp, #16]
   1cc04:	ldp	x21, x22, [sp, #48]
   1cc08:	ldp	x23, x24, [sp, #64]
   1cc0c:	str	w27, [x19, #8]
   1cc10:	ldp	x19, x20, [sp, #32]
   1cc14:	ldp	x25, x26, [sp, #80]
   1cc18:	ldp	x27, x28, [sp, #96]
   1cc1c:	add	sp, sp, #0x70
   1cc20:	ret
   1cc24:	add	w1, w1, #0x1
   1cc28:	str	w1, [x19]
   1cc2c:	str	x28, [x19, #16]
   1cc30:	b	1cbb0 <_getopt_internal_r@@Base+0x440>
   1cc34:	ldp	x19, x20, [sp, #32]
   1cc38:	ldp	x21, x22, [sp, #48]
   1cc3c:	ldp	x23, x24, [sp, #64]
   1cc40:	ldp	x27, x28, [sp, #96]
   1cc44:	mov	w0, #0xffffffff            	// #-1
   1cc48:	b	1c9a0 <_getopt_internal_r@@Base+0x230>
   1cc4c:	mov	w1, w0
   1cc50:	str	w0, [x19, #44]
   1cc54:	b	1c8b0 <_getopt_internal_r@@Base+0x140>
   1cc58:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   1cc5c:	mov	w2, #0x5                   	// #5
   1cc60:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1cc64:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   1cc68:	ldr	x3, [x3, #3816]
   1cc6c:	add	x1, x1, #0x5e0
   1cc70:	add	x0, x0, #0x780
   1cc74:	ldr	x20, [x3]
   1cc78:	bl	ada0 <dcgettext@plt>
   1cc7c:	ldr	x2, [x23]
   1cc80:	mov	x1, x0
   1cc84:	mov	w3, w27
   1cc88:	mov	x0, x20
   1cc8c:	bl	afa0 <fprintf@plt>
   1cc90:	b	1cbfc <_getopt_internal_r@@Base+0x48c>
   1cc94:	cbz	w2, 1ccac <_getopt_internal_r@@Base+0x53c>
   1cc98:	ldr	w1, [x19]
   1cc9c:	str	x28, [x19, #16]
   1cca0:	add	w1, w1, #0x1
   1cca4:	str	w1, [x19]
   1cca8:	b	1cbb0 <_getopt_internal_r@@Base+0x440>
   1ccac:	str	xzr, [x19, #16]
   1ccb0:	b	1cbb0 <_getopt_internal_r@@Base+0x440>
   1ccb4:	cbnz	w26, 1cd3c <_getopt_internal_r@@Base+0x5cc>
   1ccb8:	str	w27, [x19, #8]
   1ccbc:	mov	w1, #0x3a                  	// #58
   1ccc0:	mov	w0, #0x3f                  	// #63
   1ccc4:	ldrb	w2, [x24]
   1ccc8:	cmp	w2, w1
   1cccc:	csel	w0, w1, w0, eq  // eq = none
   1ccd0:	b	1cbb0 <_getopt_internal_r@@Base+0x440>
   1ccd4:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1ccd8:	add	x0, x0, #0x5d0
   1ccdc:	str	x0, [sp]
   1cce0:	add	x21, x21, #0x2
   1cce4:	mov	w7, w26
   1cce8:	mov	x6, x19
   1ccec:	mov	w5, w27
   1ccf0:	mov	x4, x22
   1ccf4:	mov	x3, x25
   1ccf8:	mov	x2, x24
   1ccfc:	mov	x1, x23
   1cd00:	mov	w0, w20
   1cd04:	str	x21, [x19, #32]
   1cd08:	b	1cb48 <_getopt_internal_r@@Base+0x3d8>
   1cd0c:	cbnz	w26, 1cd78 <_getopt_internal_r@@Base+0x608>
   1cd10:	ldp	x21, x22, [sp, #48]
   1cd14:	str	w27, [x19, #8]
   1cd18:	mov	w1, #0x3a                  	// #58
   1cd1c:	mov	w0, #0x3f                  	// #63
   1cd20:	ldrb	w2, [x24]
   1cd24:	ldp	x19, x20, [sp, #32]
   1cd28:	cmp	w2, w1
   1cd2c:	csel	w0, w1, w0, eq  // eq = none
   1cd30:	ldp	x23, x24, [sp, #64]
   1cd34:	ldp	x27, x28, [sp, #96]
   1cd38:	b	1c9a0 <_getopt_internal_r@@Base+0x230>
   1cd3c:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   1cd40:	mov	w2, #0x5                   	// #5
   1cd44:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1cd48:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   1cd4c:	ldr	x3, [x3, #3816]
   1cd50:	add	x1, x1, #0x600
   1cd54:	add	x0, x0, #0x780
   1cd58:	ldr	x20, [x3]
   1cd5c:	bl	ada0 <dcgettext@plt>
   1cd60:	ldr	x2, [x23]
   1cd64:	mov	x1, x0
   1cd68:	mov	w3, w27
   1cd6c:	mov	x0, x20
   1cd70:	bl	afa0 <fprintf@plt>
   1cd74:	b	1ccb8 <_getopt_internal_r@@Base+0x548>
   1cd78:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   1cd7c:	mov	w2, #0x5                   	// #5
   1cd80:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1cd84:	adrp	x0, 2c000 <vasnprintf@@Base+0x11e0>
   1cd88:	ldr	x3, [x3, #3816]
   1cd8c:	add	x1, x1, #0x600
   1cd90:	add	x0, x0, #0x780
   1cd94:	ldr	x20, [x3]
   1cd98:	bl	ada0 <dcgettext@plt>
   1cd9c:	ldr	x2, [x23]
   1cda0:	mov	x1, x0
   1cda4:	mov	w3, w27
   1cda8:	mov	x0, x20
   1cdac:	bl	afa0 <fprintf@plt>
   1cdb0:	b	1cd10 <_getopt_internal_r@@Base+0x5a0>
   1cdb4:	nop

000000000001cdb8 <rpl_getopt_internal@@Base>:
   1cdb8:	stp	x29, x30, [sp, #-48]!
   1cdbc:	adrp	x8, 46000 <vasnprintf@@Base+0x1b1e0>
   1cdc0:	mov	w7, w6
   1cdc4:	mov	x29, sp
   1cdc8:	stp	x19, x20, [sp, #16]
   1cdcc:	adrp	x20, 46000 <vasnprintf@@Base+0x1b1e0>
   1cdd0:	ldr	x8, [x8, #3856]
   1cdd4:	ldr	x20, [x20, #4032]
   1cdd8:	ldr	w8, [x8]
   1cddc:	ldr	w9, [x20]
   1cde0:	str	x21, [sp, #32]
   1cde4:	adrp	x21, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1cde8:	add	x19, x21, #0x458
   1cdec:	mov	x6, x19
   1cdf0:	str	w9, [x21, #1112]
   1cdf4:	str	w8, [x19, #4]
   1cdf8:	bl	ae70 <_getopt_internal_r@plt>
   1cdfc:	adrp	x2, 46000 <vasnprintf@@Base+0x1b1e0>
   1ce00:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   1ce04:	ldr	w3, [x21, #1112]
   1ce08:	ldr	x2, [x2, #4016]
   1ce0c:	ldr	x1, [x1, #3880]
   1ce10:	ldr	x4, [x19, #16]
   1ce14:	ldr	x21, [sp, #32]
   1ce18:	str	w3, [x20]
   1ce1c:	ldr	w3, [x19, #8]
   1ce20:	str	x4, [x2]
   1ce24:	ldp	x19, x20, [sp, #16]
   1ce28:	str	w3, [x1]
   1ce2c:	ldp	x29, x30, [sp], #48
   1ce30:	ret
   1ce34:	nop

000000000001ce38 <rpl_getopt@@Base>:
   1ce38:	mov	w6, #0x1                   	// #1
   1ce3c:	mov	w5, #0x0                   	// #0
   1ce40:	mov	x4, #0x0                   	// #0
   1ce44:	mov	x3, #0x0                   	// #0
   1ce48:	b	ab20 <rpl_getopt_internal@plt>
   1ce4c:	nop

000000000001ce50 <rpl_getopt_long@@Base>:
   1ce50:	mov	w6, #0x0                   	// #0
   1ce54:	mov	w5, #0x0                   	// #0
   1ce58:	b	ab20 <rpl_getopt_internal@plt>
   1ce5c:	nop

000000000001ce60 <_getopt_long_r@@Base>:
   1ce60:	mov	x6, x5
   1ce64:	mov	w7, #0x0                   	// #0
   1ce68:	mov	w5, #0x0                   	// #0
   1ce6c:	b	ae70 <_getopt_internal_r@plt>

000000000001ce70 <rpl_getopt_long_only@@Base>:
   1ce70:	mov	w6, #0x0                   	// #0
   1ce74:	mov	w5, #0x1                   	// #1
   1ce78:	b	ab20 <rpl_getopt_internal@plt>
   1ce7c:	nop

000000000001ce80 <_getopt_long_only_r@@Base>:
   1ce80:	mov	x6, x5
   1ce84:	mov	w7, #0x0                   	// #0
   1ce88:	mov	w5, #0x1                   	// #1
   1ce8c:	b	ae70 <_getopt_internal_r@plt>

000000000001ce90 <rpl_ioctl@@Base>:
   1ce90:	stp	x29, x30, [sp, #-64]!
   1ce94:	mov	w3, #0xfffffff8            	// #-8
   1ce98:	mov	w1, w1
   1ce9c:	add	x4, sp, #0x30
   1cea0:	add	x5, sp, #0x40
   1cea4:	mov	x29, sp
   1cea8:	stp	x5, x5, [sp, #16]
   1ceac:	str	x4, [sp, #32]
   1ceb0:	stp	w3, wzr, [sp, #40]
   1ceb4:	str	x2, [sp, #56]
   1ceb8:	bl	afc0 <ioctl@plt>
   1cebc:	ldp	x29, x30, [sp], #64
   1cec0:	ret
   1cec4:	nop

000000000001cec8 <rpl_mbrtowc@@Base>:
   1cec8:	stp	x29, x30, [sp, #-64]!
   1cecc:	cmp	x0, #0x0
   1ced0:	add	x4, sp, #0x3c
   1ced4:	mov	x29, sp
   1ced8:	stp	x19, x20, [sp, #16]
   1cedc:	csel	x19, x4, x0, eq  // eq = none
   1cee0:	mov	x20, x2
   1cee4:	mov	x0, x19
   1cee8:	str	x21, [sp, #32]
   1ceec:	mov	x21, x1
   1cef0:	bl	a2b0 <mbrtowc@plt>
   1cef4:	cmp	x20, #0x0
   1cef8:	mov	x20, x0
   1cefc:	ccmn	x0, #0x3, #0x0, ne  // ne = any
   1cf00:	b.hi	1cf18 <rpl_mbrtowc@@Base+0x50>  // b.pmore
   1cf04:	mov	x0, x20
   1cf08:	ldp	x19, x20, [sp, #16]
   1cf0c:	ldr	x21, [sp, #32]
   1cf10:	ldp	x29, x30, [sp], #64
   1cf14:	ret
   1cf18:	mov	w0, #0x0                   	// #0
   1cf1c:	bl	a790 <hard_locale@plt>
   1cf20:	tst	w0, #0xff
   1cf24:	b.ne	1cf04 <rpl_mbrtowc@@Base+0x3c>  // b.any
   1cf28:	ldrb	w0, [x21]
   1cf2c:	mov	x20, #0x1                   	// #1
   1cf30:	str	w0, [x19]
   1cf34:	mov	x0, x20
   1cf38:	ldp	x19, x20, [sp, #16]
   1cf3c:	ldr	x21, [sp, #32]
   1cf40:	ldp	x29, x30, [sp], #64
   1cf44:	ret

000000000001cf48 <rpl_nanosleep@@Base>:
   1cf48:	stp	x29, x30, [sp, #-64]!
   1cf4c:	mov	x2, #0xc9ff                	// #51711
   1cf50:	movk	x2, #0x3b9a, lsl #16
   1cf54:	mov	x29, sp
   1cf58:	stp	x21, x22, [sp, #32]
   1cf5c:	mov	x21, x1
   1cf60:	ldr	x1, [x0, #8]
   1cf64:	cmp	x1, x2
   1cf68:	b.hi	1d004 <rpl_nanosleep@@Base+0xbc>  // b.pmore
   1cf6c:	stp	x19, x20, [sp, #16]
   1cf70:	mov	x19, #0xa400                	// #41984
   1cf74:	movk	x19, #0x1f, lsl #16
   1cf78:	ldr	x20, [x0]
   1cf7c:	str	x1, [sp, #56]
   1cf80:	add	x22, sp, #0x30
   1cf84:	cmp	x20, x19
   1cf88:	b.gt	1cf9c <rpl_nanosleep@@Base+0x54>
   1cf8c:	b	1cfd4 <rpl_nanosleep@@Base+0x8c>
   1cf90:	str	xzr, [sp, #56]
   1cf94:	cmp	x20, x19
   1cf98:	b.le	1cfd4 <rpl_nanosleep@@Base+0x8c>
   1cf9c:	mov	x1, x21
   1cfa0:	mov	x0, x22
   1cfa4:	sub	x20, x20, x19
   1cfa8:	str	x19, [sp, #48]
   1cfac:	bl	ab00 <nanosleep@plt>
   1cfb0:	cbz	w0, 1cf90 <rpl_nanosleep@@Base+0x48>
   1cfb4:	cbz	x21, 1cff4 <rpl_nanosleep@@Base+0xac>
   1cfb8:	ldr	x1, [x21]
   1cfbc:	add	x20, x1, x20
   1cfc0:	str	x20, [x21]
   1cfc4:	ldp	x19, x20, [sp, #16]
   1cfc8:	ldp	x21, x22, [sp, #32]
   1cfcc:	ldp	x29, x30, [sp], #64
   1cfd0:	ret
   1cfd4:	mov	x1, x21
   1cfd8:	mov	x0, x22
   1cfdc:	str	x20, [sp, #48]
   1cfe0:	bl	ab00 <nanosleep@plt>
   1cfe4:	ldp	x19, x20, [sp, #16]
   1cfe8:	ldp	x21, x22, [sp, #32]
   1cfec:	ldp	x29, x30, [sp], #64
   1cff0:	ret
   1cff4:	ldp	x19, x20, [sp, #16]
   1cff8:	ldp	x21, x22, [sp, #32]
   1cffc:	ldp	x29, x30, [sp], #64
   1d000:	ret
   1d004:	bl	aeb0 <__errno_location@plt>
   1d008:	mov	x1, x0
   1d00c:	mov	w2, #0x16                  	// #22
   1d010:	mov	w0, #0xffffffff            	// #-1
   1d014:	str	w2, [x1]
   1d018:	b	1cfe8 <rpl_nanosleep@@Base+0xa0>
   1d01c:	nop

000000000001d020 <openat_proc_name@@Base>:
   1d020:	stp	x29, x30, [sp, #-96]!
   1d024:	mov	x29, sp
   1d028:	stp	x19, x20, [sp, #16]
   1d02c:	mov	x19, x0
   1d030:	ldrb	w0, [x2]
   1d034:	cbz	w0, 1d0f0 <openat_proc_name@@Base+0xd0>
   1d038:	stp	x21, x22, [sp, #32]
   1d03c:	adrp	x22, 48000 <gl_rbtree_list_implementation@@Base+0x1438>
   1d040:	mov	x20, x2
   1d044:	ldr	w0, [x22, #1168]
   1d048:	mov	w21, w1
   1d04c:	cbz	w0, 1d0b4 <openat_proc_name@@Base+0x94>
   1d050:	tbnz	w0, #31, 1d0a8 <openat_proc_name@@Base+0x88>
   1d054:	mov	x0, x20
   1d058:	bl	a340 <strlen@plt>
   1d05c:	add	x0, x0, #0x1b
   1d060:	cmp	x0, #0xfc0
   1d064:	b.hi	1d09c <openat_proc_name@@Base+0x7c>  // b.pmore
   1d068:	mov	w2, w21
   1d06c:	mov	x0, x19
   1d070:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1d074:	add	x1, x1, #0x660
   1d078:	bl	a490 <sprintf@plt>
   1d07c:	add	x0, x19, w0, sxtw
   1d080:	mov	x1, x20
   1d084:	bl	ac40 <strcpy@plt>
   1d088:	ldp	x21, x22, [sp, #32]
   1d08c:	mov	x0, x19
   1d090:	ldp	x19, x20, [sp, #16]
   1d094:	ldp	x29, x30, [sp], #96
   1d098:	ret
   1d09c:	bl	a5f0 <malloc@plt>
   1d0a0:	mov	x19, x0
   1d0a4:	cbnz	x0, 1d068 <openat_proc_name@@Base+0x48>
   1d0a8:	mov	x0, #0x0                   	// #0
   1d0ac:	ldp	x21, x22, [sp, #32]
   1d0b0:	b	1d090 <openat_proc_name@@Base+0x70>
   1d0b4:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1d0b8:	mov	w1, #0x4900                	// #18688
   1d0bc:	add	x0, x0, #0x638
   1d0c0:	stp	x23, x24, [sp, #48]
   1d0c4:	bl	a640 <open@plt>
   1d0c8:	mov	w23, w0
   1d0cc:	tbz	w0, #31, 1d104 <openat_proc_name@@Base+0xe4>
   1d0d0:	mov	w1, #0xffffffff            	// #-1
   1d0d4:	str	w1, [x22, #1168]
   1d0d8:	mov	x0, #0x0                   	// #0
   1d0dc:	ldp	x19, x20, [sp, #16]
   1d0e0:	ldp	x21, x22, [sp, #32]
   1d0e4:	ldp	x23, x24, [sp, #48]
   1d0e8:	ldp	x29, x30, [sp], #96
   1d0ec:	ret
   1d0f0:	strb	wzr, [x19]
   1d0f4:	mov	x0, x19
   1d0f8:	ldp	x19, x20, [sp, #16]
   1d0fc:	ldp	x29, x30, [sp], #96
   1d100:	ret
   1d104:	mov	w2, w0
   1d108:	add	x24, sp, #0x40
   1d10c:	mov	x0, x24
   1d110:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1d114:	add	x1, x1, #0x648
   1d118:	bl	a490 <sprintf@plt>
   1d11c:	mov	x0, x24
   1d120:	mov	w1, #0x0                   	// #0
   1d124:	bl	a950 <access@plt>
   1d128:	cmp	w0, #0x0
   1d12c:	mov	w1, #0x1                   	// #1
   1d130:	cneg	w1, w1, ne  // ne = any
   1d134:	mov	w0, w23
   1d138:	str	w1, [x22, #1168]
   1d13c:	bl	a850 <close@plt>
   1d140:	ldr	w0, [x22, #1168]
   1d144:	ldp	x23, x24, [sp, #48]
   1d148:	b	1d050 <openat_proc_name@@Base+0x30>
   1d14c:	nop

000000000001d150 <printf_fetchargs@@Base>:
   1d150:	ldp	x3, x2, [x1]
   1d154:	ldp	w5, w9, [x0, #24]
   1d158:	ldp	x4, x10, [x0]
   1d15c:	ldr	x11, [x0, #16]
   1d160:	cbz	x3, 1d1d4 <printf_fetchargs@@Base+0x84>
   1d164:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1d168:	adrp	x6, 2e000 <vasnprintf@@Base+0x31e0>
   1d16c:	add	x8, x0, #0x698
   1d170:	add	x6, x6, #0x680
   1d174:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   1d178:	add	x7, x0, #0x678
   1d17c:	mov	x3, #0x0                   	// #0
   1d180:	ldr	w0, [x2]
   1d184:	sub	w0, w0, #0x1
   1d188:	cmp	w0, #0x15
   1d18c:	b.ls	1d198 <printf_fetchargs@@Base+0x48>  // b.plast
   1d190:	mov	w0, #0xffffffff            	// #-1
   1d194:	ret
   1d198:	ldrb	w0, [x6, w0, uxtw]
   1d19c:	adr	x12, 1d1a8 <printf_fetchargs@@Base+0x58>
   1d1a0:	add	x0, x12, w0, sxtb #2
   1d1a4:	br	x0
   1d1a8:	tbnz	w5, #31, 1d230 <printf_fetchargs@@Base+0xe0>
   1d1ac:	add	x12, x4, #0xf
   1d1b0:	mov	x0, x4
   1d1b4:	and	x4, x12, #0xfffffffffffffff8
   1d1b8:	ldr	x0, [x0]
   1d1bc:	str	x0, [x2, #16]
   1d1c0:	ldr	x0, [x1]
   1d1c4:	add	x3, x3, #0x1
   1d1c8:	add	x2, x2, #0x20
   1d1cc:	cmp	x0, x3
   1d1d0:	b.hi	1d180 <printf_fetchargs@@Base+0x30>  // b.pmore
   1d1d4:	mov	w0, #0x0                   	// #0
   1d1d8:	ret
   1d1dc:	tbnz	w5, #31, 1d25c <printf_fetchargs@@Base+0x10c>
   1d1e0:	add	x12, x4, #0xb
   1d1e4:	mov	x0, x4
   1d1e8:	and	x4, x12, #0xfffffffffffffff8
   1d1ec:	ldr	w0, [x0]
   1d1f0:	str	w0, [x2, #16]
   1d1f4:	b	1d1c0 <printf_fetchargs@@Base+0x70>
   1d1f8:	tbnz	w5, #31, 1d308 <printf_fetchargs@@Base+0x1b8>
   1d1fc:	add	x12, x4, #0xb
   1d200:	mov	x0, x4
   1d204:	and	x4, x12, #0xfffffffffffffff8
   1d208:	ldr	w0, [x0]
   1d20c:	strh	w0, [x2, #16]
   1d210:	b	1d1c0 <printf_fetchargs@@Base+0x70>
   1d214:	tbnz	w5, #31, 1d328 <printf_fetchargs@@Base+0x1d8>
   1d218:	add	x12, x4, #0xb
   1d21c:	mov	x0, x4
   1d220:	and	x4, x12, #0xfffffffffffffff8
   1d224:	ldr	w0, [x0]
   1d228:	strb	w0, [x2, #16]
   1d22c:	b	1d1c0 <printf_fetchargs@@Base+0x70>
   1d230:	add	w12, w5, #0x8
   1d234:	cmp	w12, #0x0
   1d238:	b.le	1d250 <printf_fetchargs@@Base+0x100>
   1d23c:	add	x13, x4, #0xf
   1d240:	mov	x0, x4
   1d244:	mov	w5, w12
   1d248:	and	x4, x13, #0xfffffffffffffff8
   1d24c:	b	1d1b8 <printf_fetchargs@@Base+0x68>
   1d250:	add	x0, x10, w5, sxtw
   1d254:	mov	w5, w12
   1d258:	b	1d1b8 <printf_fetchargs@@Base+0x68>
   1d25c:	add	w12, w5, #0x8
   1d260:	cmp	w12, #0x0
   1d264:	b.le	1d27c <printf_fetchargs@@Base+0x12c>
   1d268:	add	x13, x4, #0xb
   1d26c:	mov	x0, x4
   1d270:	mov	w5, w12
   1d274:	and	x4, x13, #0xfffffffffffffff8
   1d278:	b	1d1ec <printf_fetchargs@@Base+0x9c>
   1d27c:	add	x0, x10, w5, sxtw
   1d280:	mov	w5, w12
   1d284:	b	1d1ec <printf_fetchargs@@Base+0x9c>
   1d288:	tbnz	w9, #31, 1d348 <printf_fetchargs@@Base+0x1f8>
   1d28c:	add	x12, x4, #0xf
   1d290:	mov	x0, x4
   1d294:	and	x4, x12, #0xfffffffffffffff8
   1d298:	ldr	d0, [x0]
   1d29c:	str	d0, [x2, #16]
   1d2a0:	b	1d1c0 <printf_fetchargs@@Base+0x70>
   1d2a4:	tbnz	w5, #31, 1d3a8 <printf_fetchargs@@Base+0x258>
   1d2a8:	add	x12, x4, #0xf
   1d2ac:	mov	x0, x4
   1d2b0:	and	x4, x12, #0xfffffffffffffff8
   1d2b4:	ldr	x0, [x0]
   1d2b8:	cmp	x0, #0x0
   1d2bc:	csel	x0, x8, x0, eq  // eq = none
   1d2c0:	str	x0, [x2, #16]
   1d2c4:	b	1d1c0 <printf_fetchargs@@Base+0x70>
   1d2c8:	tbnz	w9, #31, 1d388 <printf_fetchargs@@Base+0x238>
   1d2cc:	add	x0, x4, #0xf
   1d2d0:	and	x0, x0, #0xfffffffffffffff0
   1d2d4:	add	x4, x0, #0x10
   1d2d8:	ldr	q0, [x0]
   1d2dc:	str	q0, [x2, #16]
   1d2e0:	b	1d1c0 <printf_fetchargs@@Base+0x70>
   1d2e4:	tbnz	w5, #31, 1d368 <printf_fetchargs@@Base+0x218>
   1d2e8:	add	x12, x4, #0xf
   1d2ec:	mov	x0, x4
   1d2f0:	and	x4, x12, #0xfffffffffffffff8
   1d2f4:	ldr	x0, [x0]
   1d2f8:	cmp	x0, #0x0
   1d2fc:	csel	x0, x7, x0, eq  // eq = none
   1d300:	str	x0, [x2, #16]
   1d304:	b	1d1c0 <printf_fetchargs@@Base+0x70>
   1d308:	add	w12, w5, #0x8
   1d30c:	cmp	w12, #0x0
   1d310:	b.le	1d3d4 <printf_fetchargs@@Base+0x284>
   1d314:	add	x13, x4, #0xb
   1d318:	mov	x0, x4
   1d31c:	mov	w5, w12
   1d320:	and	x4, x13, #0xfffffffffffffff8
   1d324:	b	1d208 <printf_fetchargs@@Base+0xb8>
   1d328:	add	w12, w5, #0x8
   1d32c:	cmp	w12, #0x0
   1d330:	b.le	1d3c8 <printf_fetchargs@@Base+0x278>
   1d334:	add	x13, x4, #0xb
   1d338:	mov	x0, x4
   1d33c:	mov	w5, w12
   1d340:	and	x4, x13, #0xfffffffffffffff8
   1d344:	b	1d224 <printf_fetchargs@@Base+0xd4>
   1d348:	add	w12, w9, #0x10
   1d34c:	cmp	w12, #0x0
   1d350:	b.le	1d3ec <printf_fetchargs@@Base+0x29c>
   1d354:	add	x13, x4, #0xf
   1d358:	mov	x0, x4
   1d35c:	mov	w9, w12
   1d360:	and	x4, x13, #0xfffffffffffffff8
   1d364:	b	1d298 <printf_fetchargs@@Base+0x148>
   1d368:	add	w12, w5, #0x8
   1d36c:	cmp	w12, #0x0
   1d370:	b.le	1d3f8 <printf_fetchargs@@Base+0x2a8>
   1d374:	add	x13, x4, #0xf
   1d378:	mov	x0, x4
   1d37c:	mov	w5, w12
   1d380:	and	x4, x13, #0xfffffffffffffff8
   1d384:	b	1d2f4 <printf_fetchargs@@Base+0x1a4>
   1d388:	add	w12, w9, #0x10
   1d38c:	cmp	w12, #0x0
   1d390:	b.le	1d404 <printf_fetchargs@@Base+0x2b4>
   1d394:	add	x0, x4, #0xf
   1d398:	mov	w9, w12
   1d39c:	and	x0, x0, #0xfffffffffffffff0
   1d3a0:	add	x4, x0, #0x10
   1d3a4:	b	1d2d8 <printf_fetchargs@@Base+0x188>
   1d3a8:	add	w12, w5, #0x8
   1d3ac:	cmp	w12, #0x0
   1d3b0:	b.le	1d3e0 <printf_fetchargs@@Base+0x290>
   1d3b4:	add	x13, x4, #0xf
   1d3b8:	mov	x0, x4
   1d3bc:	mov	w5, w12
   1d3c0:	and	x4, x13, #0xfffffffffffffff8
   1d3c4:	b	1d2b4 <printf_fetchargs@@Base+0x164>
   1d3c8:	add	x0, x10, w5, sxtw
   1d3cc:	mov	w5, w12
   1d3d0:	b	1d224 <printf_fetchargs@@Base+0xd4>
   1d3d4:	add	x0, x10, w5, sxtw
   1d3d8:	mov	w5, w12
   1d3dc:	b	1d208 <printf_fetchargs@@Base+0xb8>
   1d3e0:	add	x0, x10, w5, sxtw
   1d3e4:	mov	w5, w12
   1d3e8:	b	1d2b4 <printf_fetchargs@@Base+0x164>
   1d3ec:	add	x0, x11, w9, sxtw
   1d3f0:	mov	w9, w12
   1d3f4:	b	1d298 <printf_fetchargs@@Base+0x148>
   1d3f8:	add	x0, x10, w5, sxtw
   1d3fc:	mov	w5, w12
   1d400:	b	1d2f4 <printf_fetchargs@@Base+0x1a4>
   1d404:	add	x0, x11, w9, sxtw
   1d408:	mov	w9, w12
   1d40c:	b	1d2d8 <printf_fetchargs@@Base+0x188>

000000000001d410 <printf_parse@@Base>:
   1d410:	stp	x29, x30, [sp, #-144]!
   1d414:	mov	x8, #0x0                   	// #0
   1d418:	mov	x29, sp
   1d41c:	stp	x23, x24, [sp, #48]
   1d420:	mov	x24, x1
   1d424:	mov	x23, x2
   1d428:	stp	x19, x20, [sp, #16]
   1d42c:	mov	x19, #0x0                   	// #0
   1d430:	stp	x21, x22, [sp, #32]
   1d434:	mov	x22, #0x0                   	// #0
   1d438:	stp	x25, x26, [sp, #64]
   1d43c:	mov	x26, x2
   1d440:	stp	x27, x28, [sp, #80]
   1d444:	mov	x27, x1
   1d448:	mov	x1, x0
   1d44c:	str	xzr, [x24], #32
   1d450:	mov	x28, #0x7                   	// #7
   1d454:	str	xzr, [sp, #104]
   1d458:	mov	x6, x28
   1d45c:	str	x24, [x27, #8]
   1d460:	mov	x3, x24
   1d464:	str	xzr, [x23], #16
   1d468:	str	x23, [x2, #8]
   1d46c:	ldrb	w0, [x1]
   1d470:	cbz	w0, 1d490 <printf_parse@@Base+0x80>
   1d474:	nop
   1d478:	cmp	w0, #0x25
   1d47c:	add	x20, x1, #0x1
   1d480:	b.eq	1d4c4 <printf_parse@@Base+0xb4>  // b.none
   1d484:	mov	x1, x20
   1d488:	ldrb	w0, [x1]
   1d48c:	cbnz	w0, 1d478 <printf_parse@@Base+0x68>
   1d490:	add	x2, x19, x19, lsl #1
   1d494:	lsl	x2, x2, #2
   1d498:	sub	x19, x2, x19
   1d49c:	str	x1, [x3, x19, lsl #3]
   1d4a0:	ldr	x1, [sp, #104]
   1d4a4:	stp	x22, x1, [x27, #16]
   1d4a8:	ldp	x19, x20, [sp, #16]
   1d4ac:	ldp	x21, x22, [sp, #32]
   1d4b0:	ldp	x23, x24, [sp, #48]
   1d4b4:	ldp	x25, x26, [sp, #64]
   1d4b8:	ldp	x27, x28, [sp, #80]
   1d4bc:	ldp	x29, x30, [sp], #144
   1d4c0:	ret
   1d4c4:	add	x0, x19, x19, lsl #1
   1d4c8:	mov	x2, #0xffffffffffffffff    	// #-1
   1d4cc:	mov	x25, x2
   1d4d0:	lsl	x0, x0, #2
   1d4d4:	sub	x19, x0, x19
   1d4d8:	add	x21, x3, x19, lsl #3
   1d4dc:	str	x1, [x3, x19, lsl #3]
   1d4e0:	str	wzr, [x21, #16]
   1d4e4:	stp	xzr, xzr, [x21, #24]
   1d4e8:	stp	x2, xzr, [x21, #40]
   1d4ec:	stp	xzr, x2, [x21, #56]
   1d4f0:	str	x2, [x21, #80]
   1d4f4:	ldrb	w19, [x1, #1]
   1d4f8:	sub	w3, w19, #0x30
   1d4fc:	and	w0, w3, #0xff
   1d500:	cmp	w0, #0x9
   1d504:	b.hi	1d550 <printf_parse@@Base+0x140>  // b.pmore
   1d508:	b	1d95c <printf_parse@@Base+0x54c>
   1d50c:	cmp	w19, #0x2d
   1d510:	b.eq	1d56c <printf_parse@@Base+0x15c>  // b.none
   1d514:	cmp	w19, #0x2b
   1d518:	b.eq	1d57c <printf_parse@@Base+0x16c>  // b.none
   1d51c:	cmp	w19, #0x20
   1d520:	b.eq	1d58c <printf_parse@@Base+0x17c>  // b.none
   1d524:	cmp	w19, #0x23
   1d528:	b.eq	1d59c <printf_parse@@Base+0x18c>  // b.none
   1d52c:	cmp	w19, #0x30
   1d530:	b.eq	1d5ac <printf_parse@@Base+0x19c>  // b.none
   1d534:	cmp	w19, #0x49
   1d538:	b.ne	1d5bc <printf_parse@@Base+0x1ac>  // b.any
   1d53c:	ldr	w1, [x21, #16]
   1d540:	orr	w1, w1, #0x40
   1d544:	str	w1, [x21, #16]
   1d548:	ldrb	w19, [x0]
   1d54c:	mov	x20, x0
   1d550:	cmp	w19, #0x27
   1d554:	add	x0, x20, #0x1
   1d558:	b.ne	1d50c <printf_parse@@Base+0xfc>  // b.any
   1d55c:	ldr	w3, [x21, #16]
   1d560:	orr	w3, w3, #0x1
   1d564:	str	w3, [x21, #16]
   1d568:	b	1d548 <printf_parse@@Base+0x138>
   1d56c:	ldr	w3, [x21, #16]
   1d570:	orr	w3, w3, #0x2
   1d574:	str	w3, [x21, #16]
   1d578:	b	1d548 <printf_parse@@Base+0x138>
   1d57c:	ldr	w1, [x21, #16]
   1d580:	orr	w1, w1, #0x4
   1d584:	str	w1, [x21, #16]
   1d588:	b	1d548 <printf_parse@@Base+0x138>
   1d58c:	ldr	w1, [x21, #16]
   1d590:	orr	w1, w1, #0x8
   1d594:	str	w1, [x21, #16]
   1d598:	b	1d548 <printf_parse@@Base+0x138>
   1d59c:	ldr	w1, [x21, #16]
   1d5a0:	orr	w1, w1, #0x10
   1d5a4:	str	w1, [x21, #16]
   1d5a8:	b	1d548 <printf_parse@@Base+0x138>
   1d5ac:	ldr	w1, [x21, #16]
   1d5b0:	orr	w1, w1, #0x20
   1d5b4:	str	w1, [x21, #16]
   1d5b8:	b	1d548 <printf_parse@@Base+0x138>
   1d5bc:	cmp	w19, #0x2a
   1d5c0:	b.eq	1d6a8 <printf_parse@@Base+0x298>  // b.none
   1d5c4:	sub	w1, w19, #0x30
   1d5c8:	and	w1, w1, #0xff
   1d5cc:	cmp	w1, #0x9
   1d5d0:	b.ls	1dc40 <printf_parse@@Base+0x830>  // b.plast
   1d5d4:	cmp	w19, #0x2e
   1d5d8:	b.eq	1d78c <printf_parse@@Base+0x37c>  // b.none
   1d5dc:	add	x20, x20, #0x1
   1d5e0:	cmp	w19, #0x68
   1d5e4:	mov	w0, #0x0                   	// #0
   1d5e8:	mov	w2, #0x1                   	// #1
   1d5ec:	b.eq	1d634 <printf_parse@@Base+0x224>  // b.none
   1d5f0:	cmp	w19, #0x4c
   1d5f4:	b.eq	1d8e0 <printf_parse@@Base+0x4d0>  // b.none
   1d5f8:	cmp	w19, #0x6c
   1d5fc:	b.eq	1d620 <printf_parse@@Base+0x210>  // b.none
   1d600:	cmp	w19, #0x6a
   1d604:	b.eq	1d620 <printf_parse@@Base+0x210>  // b.none
   1d608:	and	w1, w19, #0xffffffdf
   1d60c:	cmp	w1, #0x5a
   1d610:	b.eq	1d620 <printf_parse@@Base+0x210>  // b.none
   1d614:	cmp	w19, #0x74
   1d618:	b.ne	1d648 <printf_parse@@Base+0x238>  // b.any
   1d61c:	nop
   1d620:	ldrb	w19, [x20]
   1d624:	add	w0, w0, #0x8
   1d628:	add	x20, x20, #0x1
   1d62c:	cmp	w19, #0x68
   1d630:	b.ne	1d5f0 <printf_parse@@Base+0x1e0>  // b.any
   1d634:	and	w3, w0, #0x1
   1d638:	ldrb	w19, [x20]
   1d63c:	lsl	w3, w2, w3
   1d640:	orr	w0, w0, w3
   1d644:	b	1d628 <printf_parse@@Base+0x218>
   1d648:	sub	w1, w19, #0x25
   1d64c:	cmp	w1, #0x53
   1d650:	b.ls	1d690 <printf_parse@@Base+0x280>  // b.plast
   1d654:	ldr	x3, [x26, #8]
   1d658:	cmp	x23, x3
   1d65c:	b.eq	1d668 <printf_parse@@Base+0x258>  // b.none
   1d660:	mov	x0, x3
   1d664:	bl	aa50 <free@plt>
   1d668:	ldr	x0, [x27, #8]
   1d66c:	cmp	x24, x0
   1d670:	b.eq	1d678 <printf_parse@@Base+0x268>  // b.none
   1d674:	bl	aa50 <free@plt>
   1d678:	bl	aeb0 <__errno_location@plt>
   1d67c:	mov	x1, x0
   1d680:	mov	w2, #0x16                  	// #22
   1d684:	mov	w0, #0xffffffff            	// #-1
   1d688:	str	w2, [x1]
   1d68c:	b	1d4a8 <printf_parse@@Base+0x98>
   1d690:	adrp	x2, 2e000 <vasnprintf@@Base+0x31e0>
   1d694:	add	x2, x2, #0x6b4
   1d698:	ldrh	w1, [x2, w1, uxtw #1]
   1d69c:	adr	x2, 1d6a8 <printf_parse@@Base+0x298>
   1d6a0:	add	x1, x2, w1, sxth #2
   1d6a4:	br	x1
   1d6a8:	stp	x20, x0, [x21, #24]
   1d6ac:	cmp	x22, #0x0
   1d6b0:	csinc	x22, x22, xzr, ne  // ne = any
   1d6b4:	ldrb	w2, [x20, #1]
   1d6b8:	sub	w2, w2, #0x30
   1d6bc:	and	w1, w2, #0xff
   1d6c0:	cmp	w1, #0x9
   1d6c4:	b.ls	1da84 <printf_parse@@Base+0x674>  // b.plast
   1d6c8:	str	x8, [x21, #40]
   1d6cc:	adds	x1, x8, #0x1
   1d6d0:	b.eq	1d654 <printf_parse@@Base+0x244>  // b.none
   1d6d4:	mov	x19, x8
   1d6d8:	mov	x20, x0
   1d6dc:	mov	x8, x1
   1d6e0:	cmp	x28, x19
   1d6e4:	ldr	x3, [x26, #8]
   1d6e8:	b.hi	1dd68 <printf_parse@@Base+0x958>  // b.pmore
   1d6ec:	lsl	x28, x28, #1
   1d6f0:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   1d6f4:	cmp	x28, x19
   1d6f8:	csinc	x28, x28, x19, hi  // hi = pmore
   1d6fc:	cmp	x28, x0
   1d700:	b.hi	1dee4 <printf_parse@@Base+0xad4>  // b.pmore
   1d704:	cmp	x23, x3
   1d708:	lsl	x0, x28, #5
   1d70c:	b.eq	1ddcc <printf_parse@@Base+0x9bc>  // b.none
   1d710:	mov	x1, x0
   1d714:	mov	x0, x3
   1d718:	stp	x6, x8, [sp, #112]
   1d71c:	bl	a7e0 <realloc@plt>
   1d720:	mov	x3, x0
   1d724:	ldr	x0, [x26, #8]
   1d728:	ldp	x6, x8, [sp, #112]
   1d72c:	cbz	x3, 1df84 <printf_parse@@Base+0xb74>
   1d730:	cmp	x23, x0
   1d734:	ldr	x2, [x26]
   1d738:	b.eq	1df78 <printf_parse@@Base+0xb68>  // b.none
   1d73c:	str	x3, [x26, #8]
   1d740:	cmp	x2, x19
   1d744:	sub	x9, x3, #0x20
   1d748:	b.hi	1d768 <printf_parse@@Base+0x358>  // b.pmore
   1d74c:	nop
   1d750:	add	x2, x2, #0x1
   1d754:	cmp	x2, x19
   1d758:	lsl	x0, x2, #5
   1d75c:	str	wzr, [x9, x0]
   1d760:	b.ls	1d750 <printf_parse@@Base+0x340>  // b.plast
   1d764:	str	x2, [x26]
   1d768:	lsl	x19, x19, #5
   1d76c:	ldr	w0, [x3, x19]
   1d770:	cbnz	w0, 1dc98 <printf_parse@@Base+0x888>
   1d774:	mov	x0, x20
   1d778:	mov	w1, #0x5                   	// #5
   1d77c:	str	w1, [x3, x19]
   1d780:	ldrb	w19, [x0], #1
   1d784:	cmp	w19, #0x2e
   1d788:	b.ne	1d5dc <printf_parse@@Base+0x1cc>  // b.any
   1d78c:	ldrb	w1, [x20, #1]
   1d790:	cmp	w1, #0x2a
   1d794:	b.ne	1d9ec <printf_parse@@Base+0x5dc>  // b.any
   1d798:	add	x0, x20, #0x2
   1d79c:	stp	x20, x0, [x21, #48]
   1d7a0:	mov	x2, #0x2                   	// #2
   1d7a4:	ldr	x3, [sp, #104]
   1d7a8:	mov	x10, x0
   1d7ac:	ldrb	w1, [x20, #2]
   1d7b0:	cmp	x3, #0x2
   1d7b4:	csel	x2, x3, x2, cs  // cs = hs, nlast
   1d7b8:	sub	w1, w1, #0x30
   1d7bc:	str	x2, [sp, #104]
   1d7c0:	and	w2, w1, #0xff
   1d7c4:	cmp	w2, #0x9
   1d7c8:	b.ls	1de3c <printf_parse@@Base+0xa2c>  // b.plast
   1d7cc:	ldr	x19, [x21, #64]
   1d7d0:	cmn	x19, #0x1
   1d7d4:	b.eq	1de24 <printf_parse@@Base+0xa14>  // b.none
   1d7d8:	cmp	x28, x19
   1d7dc:	ldr	x3, [x26, #8]
   1d7e0:	b.ls	1dd70 <printf_parse@@Base+0x960>  // b.plast
   1d7e4:	ldr	x0, [x26]
   1d7e8:	sub	x9, x3, #0x20
   1d7ec:	cmp	x0, x19
   1d7f0:	b.hi	1d810 <printf_parse@@Base+0x400>  // b.pmore
   1d7f4:	nop
   1d7f8:	add	x0, x0, #0x1
   1d7fc:	cmp	x0, x19
   1d800:	lsl	x1, x0, #5
   1d804:	str	wzr, [x9, x1]
   1d808:	b.ls	1d7f8 <printf_parse@@Base+0x3e8>  // b.plast
   1d80c:	str	x0, [x26]
   1d810:	lsl	x19, x19, #5
   1d814:	ldr	w0, [x3, x19]
   1d818:	cbnz	w0, 1dd54 <printf_parse@@Base+0x944>
   1d81c:	mov	w0, #0x5                   	// #5
   1d820:	str	w0, [x3, x19]
   1d824:	mov	x20, x10
   1d828:	ldrb	w19, [x10]
   1d82c:	b	1d5dc <printf_parse@@Base+0x1cc>
   1d830:	cmp	w0, #0xf
   1d834:	mov	w10, #0x9                   	// #9
   1d838:	b.gt	1d864 <printf_parse@@Base+0x454>
   1d83c:	tbnz	w0, #2, 1d864 <printf_parse@@Base+0x454>
   1d840:	cmp	w0, #0x7
   1d844:	mov	w10, #0x7                   	// #7
   1d848:	b.gt	1d864 <printf_parse@@Base+0x454>
   1d84c:	mov	w10, #0x1                   	// #1
   1d850:	tbnz	w0, #1, 1d864 <printf_parse@@Base+0x454>
   1d854:	tst	x0, #0x1
   1d858:	mov	w10, #0x3                   	// #3
   1d85c:	mov	w0, #0x5                   	// #5
   1d860:	csel	w10, w10, w0, ne  // ne = any
   1d864:	cmn	x25, #0x1
   1d868:	b.eq	1dc28 <printf_parse@@Base+0x818>  // b.none
   1d86c:	str	x25, [x21, #80]
   1d870:	cmp	x28, x25
   1d874:	ldr	x3, [x26, #8]
   1d878:	b.ls	1dbc4 <printf_parse@@Base+0x7b4>  // b.plast
   1d87c:	ldr	x0, [x26]
   1d880:	sub	x9, x3, #0x20
   1d884:	cmp	x0, x25
   1d888:	b.hi	1d8a8 <printf_parse@@Base+0x498>  // b.pmore
   1d88c:	nop
   1d890:	add	x0, x0, #0x1
   1d894:	cmp	x0, x25
   1d898:	lsl	x1, x0, #5
   1d89c:	str	wzr, [x9, x1]
   1d8a0:	b.ls	1d890 <printf_parse@@Base+0x480>  // b.plast
   1d8a4:	str	x0, [x26]
   1d8a8:	lsl	x25, x25, #5
   1d8ac:	ldr	w0, [x3, x25]
   1d8b0:	cbnz	w0, 1dc1c <printf_parse@@Base+0x80c>
   1d8b4:	str	w10, [x3, x25]
   1d8b8:	strb	w19, [x21, #72]
   1d8bc:	ldr	x19, [x27]
   1d8c0:	str	x20, [x21, #8]
   1d8c4:	add	x19, x19, #0x1
   1d8c8:	str	x19, [x27]
   1d8cc:	cmp	x6, x19
   1d8d0:	b.ls	1d8ec <printf_parse@@Base+0x4dc>  // b.plast
   1d8d4:	mov	x1, x20
   1d8d8:	ldr	x3, [x27, #8]
   1d8dc:	b	1d488 <printf_parse@@Base+0x78>
   1d8e0:	ldrb	w19, [x20]
   1d8e4:	orr	w0, w0, #0x4
   1d8e8:	b	1d628 <printf_parse@@Base+0x218>
   1d8ec:	tbnz	x6, #63, 1dee0 <printf_parse@@Base+0xad0>
   1d8f0:	mov	x0, #0xe8ba                	// #59578
   1d8f4:	lsl	x25, x6, #1
   1d8f8:	movk	x0, #0x8ba2, lsl #16
   1d8fc:	movk	x0, #0xba2e, lsl #32
   1d900:	movk	x0, #0x2e8, lsl #48
   1d904:	cmp	x0, x6, lsl #1
   1d908:	b.cc	1dee0 <printf_parse@@Base+0xad0>  // b.lo, b.ul, b.last
   1d90c:	add	x1, x25, x6
   1d910:	str	x8, [sp, #112]
   1d914:	ldr	x21, [x27, #8]
   1d918:	lsl	x1, x1, #2
   1d91c:	sub	x1, x1, x6
   1d920:	cmp	x24, x21
   1d924:	lsl	x1, x1, #4
   1d928:	b.eq	1da40 <printf_parse@@Base+0x630>  // b.none
   1d92c:	mov	x0, x21
   1d930:	bl	a7e0 <realloc@plt>
   1d934:	mov	x3, x0
   1d938:	ldr	x8, [sp, #112]
   1d93c:	cbz	x0, 1dee0 <printf_parse@@Base+0xad0>
   1d940:	ldp	x19, x21, [x27]
   1d944:	cmp	x24, x21
   1d948:	b.eq	1da54 <printf_parse@@Base+0x644>  // b.none
   1d94c:	mov	x6, x25
   1d950:	mov	x1, x20
   1d954:	str	x3, [x27, #8]
   1d958:	b	1d488 <printf_parse@@Base+0x78>
   1d95c:	mov	x2, x20
   1d960:	ldrb	w1, [x2, #1]!
   1d964:	sub	w0, w1, #0x30
   1d968:	and	w0, w0, #0xff
   1d96c:	cmp	w0, #0x9
   1d970:	b.ls	1d960 <printf_parse@@Base+0x550>  // b.plast
   1d974:	cmp	w1, #0x24
   1d978:	mov	x25, #0xffffffffffffffff    	// #-1
   1d97c:	b.ne	1d550 <printf_parse@@Base+0x140>  // b.any
   1d980:	mov	x9, x25
   1d984:	mov	x0, #0x0                   	// #0
   1d988:	b	1d99c <printf_parse@@Base+0x58c>
   1d98c:	and	w2, w3, #0xff
   1d990:	add	x20, x20, #0x1
   1d994:	cmp	w2, #0x9
   1d998:	b.hi	1dec8 <printf_parse@@Base+0xab8>  // b.pmore
   1d99c:	add	x25, x0, x0, lsl #2
   1d9a0:	mov	x1, #0x9999999999999999    	// #-7378697629483820647
   1d9a4:	movk	x1, #0x1999, lsl #48
   1d9a8:	cmp	x0, x1
   1d9ac:	lsl	x25, x25, #1
   1d9b0:	mov	x1, x20
   1d9b4:	csel	x25, x25, x9, ls  // ls = plast
   1d9b8:	sxtw	x3, w3
   1d9bc:	ldrb	w19, [x20, #1]
   1d9c0:	adds	x25, x3, x25
   1d9c4:	mov	x0, x25
   1d9c8:	sub	w3, w19, #0x30
   1d9cc:	b.cc	1d98c <printf_parse@@Base+0x57c>  // b.lo, b.ul, b.last
   1d9d0:	and	w0, w3, #0xff
   1d9d4:	cmp	w0, #0x9
   1d9d8:	b.hi	1d654 <printf_parse@@Base+0x244>  // b.pmore
   1d9dc:	add	x20, x20, #0x1
   1d9e0:	mov	x25, #0xffffffffffffffff    	// #-1
   1d9e4:	mov	x1, x20
   1d9e8:	b	1d9b8 <printf_parse@@Base+0x5a8>
   1d9ec:	str	x20, [x21, #48]
   1d9f0:	ldrb	w1, [x20, #1]
   1d9f4:	sub	w1, w1, #0x30
   1d9f8:	and	w1, w1, #0xff
   1d9fc:	cmp	w1, #0x9
   1da00:	b.hi	1df60 <printf_parse@@Base+0xb50>  // b.pmore
   1da04:	nop
   1da08:	ldrb	w1, [x0, #1]!
   1da0c:	sub	w1, w1, #0x30
   1da10:	and	w1, w1, #0xff
   1da14:	cmp	w1, #0x9
   1da18:	b.ls	1da08 <printf_parse@@Base+0x5f8>  // b.plast
   1da1c:	sub	x1, x0, x20
   1da20:	mov	x20, x0
   1da24:	ldr	x2, [sp, #104]
   1da28:	str	x0, [x21, #56]
   1da2c:	cmp	x2, x1
   1da30:	ldrb	w19, [x0]
   1da34:	csel	x1, x2, x1, cs  // cs = hs, nlast
   1da38:	str	x1, [sp, #104]
   1da3c:	b	1d5dc <printf_parse@@Base+0x1cc>
   1da40:	mov	x0, x1
   1da44:	bl	a5f0 <malloc@plt>
   1da48:	mov	x3, x0
   1da4c:	ldr	x8, [sp, #112]
   1da50:	cbz	x0, 1dd00 <printf_parse@@Base+0x8f0>
   1da54:	add	x2, x19, x19, lsl #1
   1da58:	mov	x0, x3
   1da5c:	mov	x1, x21
   1da60:	str	x8, [sp, #112]
   1da64:	lsl	x2, x2, #2
   1da68:	sub	x2, x2, x19
   1da6c:	lsl	x2, x2, #3
   1da70:	bl	a2c0 <memcpy@plt>
   1da74:	mov	x3, x0
   1da78:	ldr	x19, [x27]
   1da7c:	ldr	x8, [sp, #112]
   1da80:	b	1d94c <printf_parse@@Base+0x53c>
   1da84:	mov	x9, x0
   1da88:	ldrb	w3, [x9, #1]!
   1da8c:	sub	w1, w3, #0x30
   1da90:	and	w1, w1, #0xff
   1da94:	cmp	w1, #0x9
   1da98:	b.ls	1da88 <printf_parse@@Base+0x678>  // b.plast
   1da9c:	cmp	w3, #0x24
   1daa0:	b.ne	1d6c8 <printf_parse@@Base+0x2b8>  // b.any
   1daa4:	mov	x3, #0x0                   	// #0
   1daa8:	mov	x9, #0xffffffffffffffff    	// #-1
   1daac:	b	1dac0 <printf_parse@@Base+0x6b0>
   1dab0:	and	w10, w2, #0xff
   1dab4:	add	x0, x0, #0x1
   1dab8:	cmp	w10, #0x9
   1dabc:	b.hi	1df48 <printf_parse@@Base+0xb38>  // b.pmore
   1dac0:	add	x1, x3, x3, lsl #2
   1dac4:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   1dac8:	movk	x4, #0x1999, lsl #48
   1dacc:	cmp	x3, x4
   1dad0:	lsl	x1, x1, #1
   1dad4:	mov	x20, x0
   1dad8:	csel	x1, x1, x9, ls  // ls = plast
   1dadc:	sxtw	x3, w2
   1dae0:	ldrb	w2, [x0, #1]
   1dae4:	adds	x1, x3, x1
   1dae8:	sub	w2, w2, #0x30
   1daec:	mov	x3, x1
   1daf0:	b.cc	1dab0 <printf_parse@@Base+0x6a0>  // b.lo, b.ul, b.last
   1daf4:	and	w1, w2, #0xff
   1daf8:	cmp	w1, #0x9
   1dafc:	b.hi	1d654 <printf_parse@@Base+0x244>  // b.pmore
   1db00:	add	x0, x0, #0x1
   1db04:	mov	x1, #0xffffffffffffffff    	// #-1
   1db08:	mov	x20, x0
   1db0c:	b	1dadc <printf_parse@@Base+0x6cc>
   1db10:	cmp	w0, #0xf
   1db14:	mov	w10, #0xc                   	// #12
   1db18:	b.gt	1d864 <printf_parse@@Base+0x454>
   1db1c:	ubfx	x0, x0, #2, #1
   1db20:	add	w10, w0, #0xb
   1db24:	b	1d864 <printf_parse@@Base+0x454>
   1db28:	cmp	w0, #0xf
   1db2c:	mov	w10, #0xa                   	// #10
   1db30:	b.gt	1d864 <printf_parse@@Base+0x454>
   1db34:	tbnz	w0, #2, 1d864 <printf_parse@@Base+0x454>
   1db38:	cmp	w0, #0x7
   1db3c:	mov	w10, #0x8                   	// #8
   1db40:	b.gt	1d864 <printf_parse@@Base+0x454>
   1db44:	mov	w10, #0x2                   	// #2
   1db48:	tbnz	w0, #1, 1d864 <printf_parse@@Base+0x454>
   1db4c:	tst	x0, #0x1
   1db50:	mov	w10, #0x4                   	// #4
   1db54:	mov	w0, #0x6                   	// #6
   1db58:	csel	w10, w10, w0, ne  // ne = any
   1db5c:	b	1d864 <printf_parse@@Base+0x454>
   1db60:	cmp	w0, #0x7
   1db64:	cset	w0, gt
   1db68:	add	w10, w0, #0xd
   1db6c:	b	1d864 <printf_parse@@Base+0x454>
   1db70:	cmp	w0, #0xf
   1db74:	mov	w10, #0x16                  	// #22
   1db78:	b.gt	1d864 <printf_parse@@Base+0x454>
   1db7c:	tbnz	w0, #2, 1d864 <printf_parse@@Base+0x454>
   1db80:	cmp	w0, #0x7
   1db84:	mov	w10, #0x15                  	// #21
   1db88:	b.gt	1d864 <printf_parse@@Base+0x454>
   1db8c:	and	w10, w0, #0x1
   1db90:	tst	x0, #0x2
   1db94:	mov	w0, #0x14                  	// #20
   1db98:	sub	w0, w0, w10
   1db9c:	mov	w10, #0x12                  	// #18
   1dba0:	csel	w10, w0, w10, eq  // eq = none
   1dba4:	b	1d864 <printf_parse@@Base+0x454>
   1dba8:	mov	w10, #0xe                   	// #14
   1dbac:	mov	w19, #0x63                  	// #99
   1dbb0:	b	1d864 <printf_parse@@Base+0x454>
   1dbb4:	cmp	w0, #0x7
   1dbb8:	cset	w0, gt
   1dbbc:	add	w10, w0, #0xf
   1dbc0:	b	1d864 <printf_parse@@Base+0x454>
   1dbc4:	lsl	x28, x28, #1
   1dbc8:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   1dbcc:	cmp	x28, x25
   1dbd0:	csinc	x28, x28, x25, hi  // hi = pmore
   1dbd4:	cmp	x28, x0
   1dbd8:	b.hi	1dee4 <printf_parse@@Base+0xad4>  // b.pmore
   1dbdc:	cmp	x23, x3
   1dbe0:	lsl	x1, x28, #5
   1dbe4:	b.eq	1dcac <printf_parse@@Base+0x89c>  // b.none
   1dbe8:	mov	x0, x3
   1dbec:	stp	x6, x8, [sp, #112]
   1dbf0:	str	w10, [sp, #128]
   1dbf4:	bl	a7e0 <realloc@plt>
   1dbf8:	ldr	w10, [sp, #128]
   1dbfc:	mov	x3, x0
   1dc00:	ldp	x6, x8, [sp, #112]
   1dc04:	cbz	x0, 1dee0 <printf_parse@@Base+0xad0>
   1dc08:	ldr	x0, [x26, #8]
   1dc0c:	cmp	x23, x0
   1dc10:	b.eq	1df8c <printf_parse@@Base+0xb7c>  // b.none
   1dc14:	str	x3, [x26, #8]
   1dc18:	b	1d87c <printf_parse@@Base+0x46c>
   1dc1c:	cmp	w0, w10
   1dc20:	b.eq	1d8b8 <printf_parse@@Base+0x4a8>  // b.none
   1dc24:	b	1d658 <printf_parse@@Base+0x248>
   1dc28:	str	x8, [x21, #80]
   1dc2c:	adds	x0, x8, #0x1
   1dc30:	b.eq	1d654 <printf_parse@@Base+0x244>  // b.none
   1dc34:	mov	x25, x8
   1dc38:	mov	x8, x0
   1dc3c:	b	1d870 <printf_parse@@Base+0x460>
   1dc40:	str	x20, [x21, #24]
   1dc44:	mov	x2, x20
   1dc48:	ldrb	w1, [x20]
   1dc4c:	sub	w1, w1, #0x30
   1dc50:	and	w1, w1, #0xff
   1dc54:	cmp	w1, #0x9
   1dc58:	b.hi	1dc7c <printf_parse@@Base+0x86c>  // b.pmore
   1dc5c:	nop
   1dc60:	mov	x0, x2
   1dc64:	ldrb	w1, [x2, #1]!
   1dc68:	sub	w1, w1, #0x30
   1dc6c:	and	w1, w1, #0xff
   1dc70:	cmp	w1, #0x9
   1dc74:	b.ls	1dc60 <printf_parse@@Base+0x850>  // b.plast
   1dc78:	add	x0, x0, #0x2
   1dc7c:	sub	x1, x2, x20
   1dc80:	str	x2, [x21, #32]
   1dc84:	cmp	x22, x1
   1dc88:	mov	x20, x2
   1dc8c:	ldrb	w19, [x2]
   1dc90:	csel	x22, x22, x1, cs  // cs = hs, nlast
   1dc94:	b	1d5d4 <printf_parse@@Base+0x1c4>
   1dc98:	cmp	w0, #0x5
   1dc9c:	b.ne	1d658 <printf_parse@@Base+0x248>  // b.any
   1dca0:	mov	x0, x20
   1dca4:	ldrb	w19, [x0], #1
   1dca8:	b	1d5d4 <printf_parse@@Base+0x1c4>
   1dcac:	mov	x0, x1
   1dcb0:	stp	x6, x8, [sp, #112]
   1dcb4:	str	x3, [sp, #128]
   1dcb8:	str	w10, [sp, #136]
   1dcbc:	bl	a5f0 <malloc@plt>
   1dcc0:	ldr	w10, [sp, #136]
   1dcc4:	ldp	x6, x8, [sp, #112]
   1dcc8:	ldr	x3, [sp, #128]
   1dccc:	cbz	x0, 1dd14 <printf_parse@@Base+0x904>
   1dcd0:	ldr	x2, [x26]
   1dcd4:	mov	x1, x3
   1dcd8:	stp	x0, x6, [sp, #112]
   1dcdc:	lsl	x2, x2, #5
   1dce0:	str	x8, [sp, #128]
   1dce4:	str	w10, [sp, #136]
   1dce8:	bl	a2c0 <memcpy@plt>
   1dcec:	ldp	x3, x6, [sp, #112]
   1dcf0:	str	x3, [x26, #8]
   1dcf4:	ldr	w10, [sp, #136]
   1dcf8:	ldr	x8, [sp, #128]
   1dcfc:	b	1d87c <printf_parse@@Base+0x46c>
   1dd00:	ldr	x3, [x26, #8]
   1dd04:	cmp	x23, x3
   1dd08:	b.eq	1dd24 <printf_parse@@Base+0x914>  // b.none
   1dd0c:	mov	x0, x3
   1dd10:	bl	aa50 <free@plt>
   1dd14:	ldr	x0, [x27, #8]
   1dd18:	cmp	x24, x0
   1dd1c:	b.eq	1dd24 <printf_parse@@Base+0x914>  // b.none
   1dd20:	bl	aa50 <free@plt>
   1dd24:	bl	aeb0 <__errno_location@plt>
   1dd28:	mov	x1, x0
   1dd2c:	mov	w2, #0xc                   	// #12
   1dd30:	mov	w0, #0xffffffff            	// #-1
   1dd34:	ldp	x19, x20, [sp, #16]
   1dd38:	str	w2, [x1]
   1dd3c:	ldp	x21, x22, [sp, #32]
   1dd40:	ldp	x23, x24, [sp, #48]
   1dd44:	ldp	x25, x26, [sp, #64]
   1dd48:	ldp	x27, x28, [sp, #80]
   1dd4c:	ldp	x29, x30, [sp], #144
   1dd50:	ret
   1dd54:	cmp	w0, #0x5
   1dd58:	b.ne	1d658 <printf_parse@@Base+0x248>  // b.any
   1dd5c:	ldrb	w19, [x10]
   1dd60:	mov	x20, x10
   1dd64:	b	1d5dc <printf_parse@@Base+0x1cc>
   1dd68:	ldr	x2, [x26]
   1dd6c:	b	1d740 <printf_parse@@Base+0x330>
   1dd70:	lsl	x28, x28, #1
   1dd74:	mov	x0, #0x7ffffffffffffff     	// #576460752303423487
   1dd78:	cmp	x28, x19
   1dd7c:	csinc	x28, x28, x19, hi  // hi = pmore
   1dd80:	cmp	x28, x0
   1dd84:	b.hi	1dee4 <printf_parse@@Base+0xad4>  // b.pmore
   1dd88:	cmp	x23, x3
   1dd8c:	lsl	x0, x28, #5
   1dd90:	b.eq	1def0 <printf_parse@@Base+0xae0>  // b.none
   1dd94:	mov	x1, x0
   1dd98:	mov	x0, x3
   1dd9c:	stp	x6, x8, [sp, #112]
   1dda0:	str	x10, [sp, #128]
   1dda4:	bl	a7e0 <realloc@plt>
   1dda8:	mov	x3, x0
   1ddac:	ldp	x6, x8, [sp, #112]
   1ddb0:	ldr	x10, [sp, #128]
   1ddb4:	cbz	x0, 1dee0 <printf_parse@@Base+0xad0>
   1ddb8:	ldr	x0, [x26, #8]
   1ddbc:	cmp	x23, x0
   1ddc0:	b.eq	1df6c <printf_parse@@Base+0xb5c>  // b.none
   1ddc4:	str	x3, [x26, #8]
   1ddc8:	b	1d7e4 <printf_parse@@Base+0x3d4>
   1ddcc:	stp	x6, x8, [sp, #112]
   1ddd0:	str	x3, [sp, #128]
   1ddd4:	bl	a5f0 <malloc@plt>
   1ddd8:	mov	x9, x0
   1dddc:	ldp	x6, x8, [sp, #112]
   1dde0:	ldr	x3, [sp, #128]
   1dde4:	cbz	x0, 1dd14 <printf_parse@@Base+0x904>
   1dde8:	ldr	x2, [x26]
   1ddec:	lsl	x2, x2, #5
   1ddf0:	mov	x1, x3
   1ddf4:	mov	x0, x9
   1ddf8:	stp	x6, x8, [sp, #112]
   1ddfc:	bl	a2c0 <memcpy@plt>
   1de00:	mov	x3, x0
   1de04:	ldr	x2, [x26]
   1de08:	ldp	x6, x8, [sp, #112]
   1de0c:	b	1d73c <printf_parse@@Base+0x32c>
   1de10:	mov	w10, #0x11                  	// #17
   1de14:	b	1d864 <printf_parse@@Base+0x454>
   1de18:	mov	w10, #0x10                  	// #16
   1de1c:	mov	w19, #0x73                  	// #115
   1de20:	b	1d864 <printf_parse@@Base+0x454>
   1de24:	str	x8, [x21, #64]
   1de28:	adds	x0, x8, #0x1
   1de2c:	b.eq	1d654 <printf_parse@@Base+0x244>  // b.none
   1de30:	mov	x19, x8
   1de34:	mov	x8, x0
   1de38:	b	1d7d8 <printf_parse@@Base+0x3c8>
   1de3c:	mov	x9, x0
   1de40:	ldrb	w3, [x9, #1]!
   1de44:	sub	w2, w3, #0x30
   1de48:	and	w2, w2, #0xff
   1de4c:	cmp	w2, #0x9
   1de50:	b.ls	1de40 <printf_parse@@Base+0xa30>  // b.plast
   1de54:	cmp	w3, #0x24
   1de58:	b.ne	1d7cc <printf_parse@@Base+0x3bc>  // b.any
   1de5c:	mov	x3, #0x0                   	// #0
   1de60:	mov	x9, #0xffffffffffffffff    	// #-1
   1de64:	b	1de78 <printf_parse@@Base+0xa68>
   1de68:	and	w11, w1, #0xff
   1de6c:	add	x0, x0, #0x1
   1de70:	cmp	w11, #0x9
   1de74:	b.hi	1df30 <printf_parse@@Base+0xb20>  // b.pmore
   1de78:	add	x2, x3, x3, lsl #2
   1de7c:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   1de80:	movk	x4, #0x1999, lsl #48
   1de84:	cmp	x3, x4
   1de88:	lsl	x2, x2, #1
   1de8c:	mov	x10, x0
   1de90:	csel	x2, x2, x9, ls  // ls = plast
   1de94:	sxtw	x3, w1
   1de98:	ldrb	w1, [x0, #1]
   1de9c:	adds	x2, x3, x2
   1dea0:	sub	w1, w1, #0x30
   1dea4:	mov	x3, x2
   1dea8:	b.cc	1de68 <printf_parse@@Base+0xa58>  // b.lo, b.ul, b.last
   1deac:	and	w2, w1, #0xff
   1deb0:	cmp	w2, #0x9
   1deb4:	b.hi	1d654 <printf_parse@@Base+0x244>  // b.pmore
   1deb8:	add	x0, x0, #0x1
   1debc:	mov	x2, #0xffffffffffffffff    	// #-1
   1dec0:	mov	x10, x0
   1dec4:	b	1de94 <printf_parse@@Base+0xa84>
   1dec8:	sub	x25, x25, #0x1
   1decc:	cmn	x25, #0x3
   1ded0:	b.hi	1d654 <printf_parse@@Base+0x244>  // b.pmore
   1ded4:	ldrb	w19, [x1, #2]
   1ded8:	add	x20, x1, #0x2
   1dedc:	b	1d550 <printf_parse@@Base+0x140>
   1dee0:	ldr	x3, [x26, #8]
   1dee4:	cmp	x23, x3
   1dee8:	b.ne	1dd0c <printf_parse@@Base+0x8fc>  // b.any
   1deec:	b	1dd14 <printf_parse@@Base+0x904>
   1def0:	stp	x6, x8, [sp, #112]
   1def4:	stp	x3, x10, [sp, #128]
   1def8:	bl	a5f0 <malloc@plt>
   1defc:	ldp	x6, x8, [sp, #112]
   1df00:	ldp	x3, x10, [sp, #128]
   1df04:	cbz	x0, 1dd14 <printf_parse@@Base+0x904>
   1df08:	ldr	x2, [x26]
   1df0c:	mov	x1, x3
   1df10:	stp	x0, x6, [sp, #112]
   1df14:	lsl	x2, x2, #5
   1df18:	stp	x8, x10, [sp, #128]
   1df1c:	bl	a2c0 <memcpy@plt>
   1df20:	ldp	x3, x6, [sp, #112]
   1df24:	str	x3, [x26, #8]
   1df28:	ldp	x8, x10, [sp, #128]
   1df2c:	b	1d7e4 <printf_parse@@Base+0x3d4>
   1df30:	sub	x19, x2, #0x1
   1df34:	cmn	x19, #0x3
   1df38:	b.hi	1d654 <printf_parse@@Base+0x244>  // b.pmore
   1df3c:	add	x10, x10, #0x2
   1df40:	str	x19, [x21, #64]
   1df44:	b	1d7d8 <printf_parse@@Base+0x3c8>
   1df48:	sub	x19, x1, #0x1
   1df4c:	cmn	x19, #0x3
   1df50:	b.hi	1d654 <printf_parse@@Base+0x244>  // b.pmore
   1df54:	add	x20, x20, #0x2
   1df58:	str	x19, [x21, #40]
   1df5c:	b	1d6e0 <printf_parse@@Base+0x2d0>
   1df60:	mov	x20, x0
   1df64:	mov	x1, #0x1                   	// #1
   1df68:	b	1da24 <printf_parse@@Base+0x614>
   1df6c:	mov	x0, x3
   1df70:	mov	x3, x23
   1df74:	b	1df08 <printf_parse@@Base+0xaf8>
   1df78:	mov	x9, x3
   1df7c:	mov	x3, x23
   1df80:	b	1ddec <printf_parse@@Base+0x9dc>
   1df84:	mov	x3, x0
   1df88:	b	1dee4 <printf_parse@@Base+0xad4>
   1df8c:	mov	x0, x3
   1df90:	mov	x3, x23
   1df94:	b	1dcd0 <printf_parse@@Base+0x8c0>
   1df98:	cmp	x0, #0x0
   1df9c:	mov	x3, x0
   1dfa0:	cset	w0, eq  // eq = none
   1dfa4:	cmp	x1, #0x0
   1dfa8:	csinc	w0, w0, wzr, ne  // ne = any
   1dfac:	cbnz	w0, 1dfec <printf_parse@@Base+0xbdc>
   1dfb0:	ldr	x4, [x1, #8]
   1dfb4:	ldr	x2, [x3, #8]
   1dfb8:	cmp	x2, x4
   1dfbc:	b.eq	1dfdc <printf_parse@@Base+0xbcc>  // b.none
   1dfc0:	ret
   1dfc4:	ldr	x4, [x1, #16]
   1dfc8:	ldr	x5, [x3, #16]
   1dfcc:	ldr	x4, [x4, x2, lsl #3]
   1dfd0:	ldr	x5, [x5, x2, lsl #3]
   1dfd4:	cmp	x5, x4
   1dfd8:	b.ne	1dfc0 <printf_parse@@Base+0xbb0>  // b.any
   1dfdc:	subs	x2, x2, #0x1
   1dfe0:	b.pl	1dfc4 <printf_parse@@Base+0xbb4>  // b.nfrst
   1dfe4:	mov	w0, #0x1                   	// #1
   1dfe8:	ret
   1dfec:	mov	w0, #0x0                   	// #0
   1dff0:	ret
   1dff4:	nop
   1dff8:	mov	x3, x0
   1dffc:	ldr	x0, [x1, #72]
   1e000:	ldr	x4, [x1, #104]
   1e004:	cmp	x4, x0
   1e008:	b.le	1e0ac <printf_parse@@Base+0xc9c>
   1e00c:	ldr	x5, [x1, #8]
   1e010:	ldr	w6, [x1, #144]
   1e014:	ldrb	w4, [x5, x0]
   1e018:	cmp	w6, #0x1
   1e01c:	strb	w4, [x3]
   1e020:	b.le	1e040 <printf_parse@@Base+0xc30>
   1e024:	ldr	x6, [x1, #48]
   1e028:	cmp	x0, x6
   1e02c:	b.eq	1e040 <printf_parse@@Base+0xc30>  // b.none
   1e030:	ldr	x6, [x1, #16]
   1e034:	ldr	w6, [x6, x0, lsl #2]
   1e038:	cmn	w6, #0x1
   1e03c:	b.eq	1e084 <printf_parse@@Base+0xc74>  // b.none
   1e040:	cmp	w4, #0x5c
   1e044:	b.eq	1e070 <printf_parse@@Base+0xc60>  // b.none
   1e048:	cmp	w4, #0x5b
   1e04c:	b.eq	1e0bc <printf_parse@@Base+0xcac>  // b.none
   1e050:	cmp	w4, #0x5d
   1e054:	b.eq	1e108 <printf_parse@@Base+0xcf8>  // b.none
   1e058:	cmp	w4, #0x5e
   1e05c:	b.ne	1e094 <printf_parse@@Base+0xc84>  // b.any
   1e060:	mov	w1, #0x19                  	// #25
   1e064:	mov	w0, #0x1                   	// #1
   1e068:	strb	w1, [x3, #8]
   1e06c:	ret
   1e070:	tbz	w2, #0, 1e084 <printf_parse@@Base+0xc74>
   1e074:	ldr	x4, [x1, #88]
   1e078:	add	x2, x0, #0x1
   1e07c:	cmp	x2, x4
   1e080:	b.lt	1e118 <printf_parse@@Base+0xd08>  // b.tstop
   1e084:	mov	w1, #0x1                   	// #1
   1e088:	mov	w0, #0x1                   	// #1
   1e08c:	strb	w1, [x3, #8]
   1e090:	ret
   1e094:	cmp	w4, #0x2d
   1e098:	b.ne	1e084 <printf_parse@@Base+0xc74>  // b.any
   1e09c:	mov	w1, #0x16                  	// #22
   1e0a0:	mov	w0, #0x1                   	// #1
   1e0a4:	strb	w1, [x3, #8]
   1e0a8:	ret
   1e0ac:	mov	w1, #0x2                   	// #2
   1e0b0:	mov	w0, #0x0                   	// #0
   1e0b4:	strb	w1, [x3, #8]
   1e0b8:	ret
   1e0bc:	ldr	x1, [x1, #88]
   1e0c0:	add	x4, x0, #0x1
   1e0c4:	cmp	x4, x1
   1e0c8:	b.ge	1e0f0 <printf_parse@@Base+0xce0>  // b.tcont
   1e0cc:	add	x0, x5, x0
   1e0d0:	ldrb	w0, [x0, #1]
   1e0d4:	strb	w0, [x3]
   1e0d8:	cmp	w0, #0x3a
   1e0dc:	b.eq	1e154 <printf_parse@@Base+0xd44>  // b.none
   1e0e0:	cmp	w0, #0x3d
   1e0e4:	b.eq	1e144 <printf_parse@@Base+0xd34>  // b.none
   1e0e8:	cmp	w0, #0x2e
   1e0ec:	b.eq	1e134 <printf_parse@@Base+0xd24>  // b.none
   1e0f0:	mov	w1, #0x1                   	// #1
   1e0f4:	mov	w2, #0x5b                  	// #91
   1e0f8:	mov	w0, #0x1                   	// #1
   1e0fc:	strb	w2, [x3]
   1e100:	strb	w1, [x3, #8]
   1e104:	ret
   1e108:	mov	w1, #0x15                  	// #21
   1e10c:	mov	w0, #0x1                   	// #1
   1e110:	strb	w1, [x3, #8]
   1e114:	ret
   1e118:	str	x2, [x1, #72]
   1e11c:	mov	w0, #0x1                   	// #1
   1e120:	mov	w1, #0x1                   	// #1
   1e124:	ldrb	w2, [x5, x2]
   1e128:	strb	w2, [x3]
   1e12c:	strb	w1, [x3, #8]
   1e130:	ret
   1e134:	mov	w1, #0x1a                  	// #26
   1e138:	mov	w0, #0x2                   	// #2
   1e13c:	strb	w1, [x3, #8]
   1e140:	ret
   1e144:	mov	w1, #0x1c                  	// #28
   1e148:	mov	w0, #0x2                   	// #2
   1e14c:	strb	w1, [x3, #8]
   1e150:	ret
   1e154:	tbz	w2, #2, 1e0f0 <printf_parse@@Base+0xce0>
   1e158:	mov	w1, #0x1e                  	// #30
   1e15c:	mov	w0, #0x2                   	// #2
   1e160:	strb	w1, [x3, #8]
   1e164:	ret
   1e168:	ldrb	w2, [x1, #48]
   1e16c:	cmp	w2, #0x11
   1e170:	b.eq	1e17c <printf_parse@@Base+0xd6c>  // b.none
   1e174:	mov	w0, #0x0                   	// #0
   1e178:	ret
   1e17c:	ldr	x2, [x1, #40]
   1e180:	cmp	x0, x2
   1e184:	b.ne	1e174 <printf_parse@@Base+0xd64>  // b.any
   1e188:	ldrb	w0, [x1, #50]
   1e18c:	orr	w0, w0, #0x8
   1e190:	strb	w0, [x1, #50]
   1e194:	mov	w0, #0x0                   	// #0
   1e198:	ret
   1e19c:	nop
   1e1a0:	stp	x29, x30, [sp, #-144]!
   1e1a4:	mov	x12, x0
   1e1a8:	add	x9, x3, x3, lsl #1
   1e1ac:	mov	x29, sp
   1e1b0:	stp	x23, x24, [sp, #48]
   1e1b4:	ldr	x24, [x0, #152]
   1e1b8:	stp	x21, x22, [sp, #32]
   1e1bc:	stp	x25, x26, [sp, #64]
   1e1c0:	mov	w26, w1
   1e1c4:	ldr	x0, [x24, #48]
   1e1c8:	add	x22, x0, x9, lsl #3
   1e1cc:	ldr	x0, [x22, #8]
   1e1d0:	cmp	x0, #0x0
   1e1d4:	b.le	1e390 <printf_parse@@Base+0xf80>
   1e1d8:	mov	x1, #0x1                   	// #1
   1e1dc:	add	x23, x4, x4, lsl #2
   1e1e0:	lsl	x1, x1, x2
   1e1e4:	str	x1, [sp, #120]
   1e1e8:	mvn	w1, w1
   1e1ec:	mov	x13, x3
   1e1f0:	and	w1, w1, #0xffff
   1e1f4:	str	w1, [sp, #132]
   1e1f8:	lsl	x1, x23, #3
   1e1fc:	mov	x25, x4
   1e200:	and	w23, w26, #0x1
   1e204:	stp	x19, x20, [sp, #16]
   1e208:	mov	x19, #0x0                   	// #0
   1e20c:	stp	x27, x28, [sp, #80]
   1e210:	mov	x27, x2
   1e214:	str	x1, [sp, #136]
   1e218:	and	w1, w26, #0x2
   1e21c:	str	w1, [sp, #128]
   1e220:	b	1e238 <printf_parse@@Base+0xe28>
   1e224:	cmp	w5, #0x4
   1e228:	b.eq	1e2c4 <printf_parse@@Base+0xeb4>  // b.none
   1e22c:	add	x19, x19, #0x1
   1e230:	cmp	x0, x19
   1e234:	b.le	1e388 <printf_parse@@Base+0xf78>
   1e238:	ldr	x5, [x22, #16]
   1e23c:	ldr	x7, [x24]
   1e240:	ldr	x21, [x5, x19, lsl #3]
   1e244:	lsl	x6, x21, #4
   1e248:	add	x5, x7, x6
   1e24c:	ldrb	w5, [x5, #8]
   1e250:	cmp	w5, #0x8
   1e254:	b.eq	1e294 <printf_parse@@Base+0xe84>  // b.none
   1e258:	cmp	w5, #0x9
   1e25c:	b.ne	1e224 <printf_parse@@Base+0xe14>  // b.any
   1e260:	ldr	w1, [sp, #128]
   1e264:	cbz	w1, 1e22c <printf_parse@@Base+0xe1c>
   1e268:	ldr	x1, [x7, x6]
   1e26c:	cmp	x1, x27
   1e270:	b.ne	1e22c <printf_parse@@Base+0xe1c>  // b.any
   1e274:	mov	w0, #0x0                   	// #0
   1e278:	ldp	x19, x20, [sp, #16]
   1e27c:	ldp	x21, x22, [sp, #32]
   1e280:	ldp	x23, x24, [sp, #48]
   1e284:	ldp	x25, x26, [sp, #64]
   1e288:	ldp	x27, x28, [sp, #80]
   1e28c:	ldp	x29, x30, [sp], #144
   1e290:	ret
   1e294:	cbz	w23, 1e22c <printf_parse@@Base+0xe1c>
   1e298:	ldr	x1, [x7, x6]
   1e29c:	cmp	x1, x27
   1e2a0:	b.ne	1e22c <printf_parse@@Base+0xe1c>  // b.any
   1e2a4:	mov	w0, #0xffffffff            	// #-1
   1e2a8:	ldp	x19, x20, [sp, #16]
   1e2ac:	ldp	x21, x22, [sp, #32]
   1e2b0:	ldp	x23, x24, [sp, #48]
   1e2b4:	ldp	x25, x26, [sp, #64]
   1e2b8:	ldp	x27, x28, [sp, #80]
   1e2bc:	ldp	x29, x30, [sp], #144
   1e2c0:	ret
   1e2c4:	cmn	x25, #0x1
   1e2c8:	b.eq	1e22c <printf_parse@@Base+0xe1c>  // b.none
   1e2cc:	ldr	x0, [sp, #136]
   1e2d0:	add	x28, x21, x21, lsl #1
   1e2d4:	ldr	x20, [x12, #216]
   1e2d8:	lsl	x28, x28, #3
   1e2dc:	add	x20, x20, x0
   1e2e0:	ldr	x5, [x20]
   1e2e4:	mov	x4, x25
   1e2e8:	mov	x2, x27
   1e2ec:	mov	w1, w26
   1e2f0:	mov	x0, x12
   1e2f4:	cmp	x5, x21
   1e2f8:	b.ne	1e368 <printf_parse@@Base+0xf58>  // b.any
   1e2fc:	cmp	x27, #0x3f
   1e300:	b.gt	1e314 <printf_parse@@Base+0xf04>
   1e304:	ldr	x5, [sp, #120]
   1e308:	ldrh	w3, [x20, #34]
   1e30c:	tst	x3, x5
   1e310:	b.eq	1e368 <printf_parse@@Base+0xf58>  // b.none
   1e314:	ldr	x3, [x24, #40]
   1e318:	add	x3, x3, x28
   1e31c:	ldr	x3, [x3, #16]
   1e320:	ldr	x3, [x3]
   1e324:	cmp	x13, x3
   1e328:	b.eq	1e3a8 <printf_parse@@Base+0xf98>  // b.none
   1e32c:	stp	x12, x13, [sp, #104]
   1e330:	bl	1e1a0 <printf_parse@@Base+0xd90>
   1e334:	cmn	w0, #0x1
   1e338:	ldp	x12, x13, [sp, #104]
   1e33c:	b.eq	1e2a4 <printf_parse@@Base+0xe94>  // b.none
   1e340:	cbnz	w0, 1e34c <printf_parse@@Base+0xf3c>
   1e344:	ldr	w0, [sp, #128]
   1e348:	cbnz	w0, 1e274 <printf_parse@@Base+0xe64>
   1e34c:	cmp	x27, #0x3f
   1e350:	b.gt	1e368 <printf_parse@@Base+0xf58>
   1e354:	ldrh	w0, [x20, #34]
   1e358:	ldr	w1, [sp, #132]
   1e35c:	and	w0, w1, w0
   1e360:	strh	w0, [x20, #34]
   1e364:	nop
   1e368:	ldrb	w0, [x20, #32]
   1e36c:	add	x20, x20, #0x28
   1e370:	cbnz	w0, 1e2e0 <printf_parse@@Base+0xed0>
   1e374:	ldr	x0, [x22, #8]
   1e378:	add	x19, x19, #0x1
   1e37c:	cmp	x0, x19
   1e380:	b.gt	1e238 <printf_parse@@Base+0xe28>
   1e384:	nop
   1e388:	ldp	x19, x20, [sp, #16]
   1e38c:	ldp	x27, x28, [sp, #80]
   1e390:	asr	w0, w26, #1
   1e394:	ldp	x21, x22, [sp, #32]
   1e398:	ldp	x23, x24, [sp, #48]
   1e39c:	ldp	x25, x26, [sp, #64]
   1e3a0:	ldp	x29, x30, [sp], #144
   1e3a4:	ret
   1e3a8:	sbfx	x0, x26, #0, #1
   1e3ac:	ldp	x19, x20, [sp, #16]
   1e3b0:	ldp	x21, x22, [sp, #32]
   1e3b4:	ldp	x23, x24, [sp, #48]
   1e3b8:	ldp	x25, x26, [sp, #64]
   1e3bc:	ldp	x27, x28, [sp, #80]
   1e3c0:	ldp	x29, x30, [sp], #144
   1e3c4:	ret
   1e3c8:	mov	x7, x0
   1e3cc:	add	x1, x1, x1, lsl #2
   1e3d0:	ldr	x0, [x0, #216]
   1e3d4:	mov	x6, x4
   1e3d8:	add	x1, x0, x1, lsl #3
   1e3dc:	ldr	x0, [x1, #16]
   1e3e0:	cmp	x0, x4
   1e3e4:	b.gt	1e42c <printf_parse@@Base+0x101c>
   1e3e8:	ldr	x4, [x1, #24]
   1e3ec:	cmp	x4, x6
   1e3f0:	b.lt	1e424 <printf_parse@@Base+0x1014>  // b.tstop
   1e3f4:	cmp	x0, x6
   1e3f8:	cset	w1, eq  // eq = none
   1e3fc:	cmp	x4, x6
   1e400:	b.eq	1e414 <printf_parse@@Base+0x1004>  // b.none
   1e404:	cmp	x0, x6
   1e408:	mov	w0, #0x0                   	// #0
   1e40c:	b.eq	1e418 <printf_parse@@Base+0x1008>  // b.none
   1e410:	ret
   1e414:	orr	w1, w1, #0x2
   1e418:	mov	x4, x5
   1e41c:	mov	x0, x7
   1e420:	b	1e1a0 <printf_parse@@Base+0xd90>
   1e424:	mov	w0, #0x1                   	// #1
   1e428:	ret
   1e42c:	mov	w0, #0xffffffff            	// #-1
   1e430:	ret
   1e434:	nop
   1e438:	stp	x29, x30, [sp, #-48]!
   1e43c:	mov	x29, sp
   1e440:	stp	x19, x20, [sp, #16]
   1e444:	mov	x20, x2
   1e448:	str	x21, [sp, #32]
   1e44c:	mov	x21, x1
   1e450:	mov	x19, x0
   1e454:	ldr	x0, [x0, #8]
   1e458:	cbnz	x0, 1e450 <printf_parse@@Base+0x1040>
   1e45c:	ldr	x0, [x19, #16]
   1e460:	cbnz	x0, 1e450 <printf_parse@@Base+0x1040>
   1e464:	mov	x1, x19
   1e468:	mov	x0, x20
   1e46c:	blr	x21
   1e470:	cbnz	w0, 1e4a4 <printf_parse@@Base+0x1094>
   1e474:	nop
   1e478:	ldr	x3, [x19]
   1e47c:	cbz	x3, 1e4a4 <printf_parse@@Base+0x1094>
   1e480:	ldr	x0, [x3, #16]
   1e484:	cmp	x0, #0x0
   1e488:	ccmp	x0, x19, #0x4, ne  // ne = any
   1e48c:	mov	x19, x3
   1e490:	b.ne	1e450 <printf_parse@@Base+0x1040>  // b.any
   1e494:	mov	x1, x19
   1e498:	mov	x0, x20
   1e49c:	blr	x21
   1e4a0:	cbz	w0, 1e478 <printf_parse@@Base+0x1068>
   1e4a4:	ldp	x19, x20, [sp, #16]
   1e4a8:	ldr	x21, [sp, #32]
   1e4ac:	ldp	x29, x30, [sp], #48
   1e4b0:	ret
   1e4b4:	nop
   1e4b8:	stp	x29, x30, [sp, #-48]!
   1e4bc:	mov	x29, sp
   1e4c0:	stp	x19, x20, [sp, #16]
   1e4c4:	mov	x19, x0
   1e4c8:	mov	x20, x2
   1e4cc:	str	x21, [sp, #32]
   1e4d0:	mov	x0, x20
   1e4d4:	mov	x21, x1
   1e4d8:	mov	x1, x19
   1e4dc:	blr	x21
   1e4e0:	cbnz	w0, 1e504 <printf_parse@@Base+0x10f4>
   1e4e4:	nop
   1e4e8:	ldr	x3, [x19, #8]
   1e4ec:	cbz	x3, 1e514 <printf_parse@@Base+0x1104>
   1e4f0:	mov	x19, x3
   1e4f4:	mov	x1, x19
   1e4f8:	mov	x0, x20
   1e4fc:	blr	x21
   1e500:	cbz	w0, 1e4e8 <printf_parse@@Base+0x10d8>
   1e504:	ldp	x19, x20, [sp, #16]
   1e508:	ldr	x21, [sp, #32]
   1e50c:	ldp	x29, x30, [sp], #48
   1e510:	ret
   1e514:	ldr	x4, [x19, #16]
   1e518:	cmp	x4, #0x0
   1e51c:	ccmp	x4, x3, #0x4, ne  // ne = any
   1e520:	b.ne	1e548 <printf_parse@@Base+0x1138>  // b.any
   1e524:	nop
   1e528:	ldr	x4, [x19]
   1e52c:	mov	x3, x19
   1e530:	mov	x19, x4
   1e534:	cbz	x4, 1e504 <printf_parse@@Base+0x10f4>
   1e538:	ldr	x4, [x19, #16]
   1e53c:	cmp	x4, #0x0
   1e540:	ccmp	x4, x3, #0x4, ne  // ne = any
   1e544:	b.eq	1e528 <printf_parse@@Base+0x1118>  // b.none
   1e548:	mov	x3, x4
   1e54c:	mov	x19, x3
   1e550:	b	1e4f4 <printf_parse@@Base+0x10e4>
   1e554:	nop
   1e558:	stp	x29, x30, [sp, #-32]!
   1e55c:	mov	x29, sp
   1e560:	stp	x19, x20, [sp, #16]
   1e564:	mov	x19, x0
   1e568:	ldr	w0, [x0, #144]
   1e56c:	mov	x20, x1
   1e570:	cmp	w0, #0x1
   1e574:	b.le	1e5b4 <printf_parse@@Base+0x11a4>
   1e578:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   1e57c:	cmp	x1, x0
   1e580:	b.hi	1e5e8 <printf_parse@@Base+0x11d8>  // b.pmore
   1e584:	ldr	x0, [x19, #16]
   1e588:	lsl	x1, x1, #2
   1e58c:	bl	a7e0 <realloc@plt>
   1e590:	mov	x1, x0
   1e594:	cbz	x0, 1e5e8 <printf_parse@@Base+0x11d8>
   1e598:	ldr	x0, [x19, #24]
   1e59c:	str	x1, [x19, #16]
   1e5a0:	cbz	x0, 1e5b4 <printf_parse@@Base+0x11a4>
   1e5a4:	lsl	x1, x20, #3
   1e5a8:	bl	a7e0 <realloc@plt>
   1e5ac:	cbz	x0, 1e5e8 <printf_parse@@Base+0x11d8>
   1e5b0:	str	x0, [x19, #24]
   1e5b4:	ldrb	w0, [x19, #139]
   1e5b8:	cbnz	w0, 1e5d0 <printf_parse@@Base+0x11c0>
   1e5bc:	str	x20, [x19, #64]
   1e5c0:	mov	w0, #0x0                   	// #0
   1e5c4:	ldp	x19, x20, [sp, #16]
   1e5c8:	ldp	x29, x30, [sp], #32
   1e5cc:	ret
   1e5d0:	ldr	x0, [x19, #8]
   1e5d4:	mov	x1, x20
   1e5d8:	bl	a7e0 <realloc@plt>
   1e5dc:	cbz	x0, 1e5e8 <printf_parse@@Base+0x11d8>
   1e5e0:	str	x0, [x19, #8]
   1e5e4:	b	1e5bc <printf_parse@@Base+0x11ac>
   1e5e8:	mov	w0, #0xc                   	// #12
   1e5ec:	ldp	x19, x20, [sp, #16]
   1e5f0:	ldp	x29, x30, [sp], #32
   1e5f4:	ret
   1e5f8:	stp	x29, x30, [sp, #-32]!
   1e5fc:	mov	x29, sp
   1e600:	stp	x19, x20, [sp, #16]
   1e604:	mov	x19, x0
   1e608:	mov	x20, x1
   1e60c:	ldr	x0, [x0]
   1e610:	ldp	x2, x1, [x19, #8]
   1e614:	cmp	x0, x2
   1e618:	b.eq	1e638 <printf_parse@@Base+0x1228>  // b.none
   1e61c:	add	x0, x2, #0x1
   1e620:	str	x0, [x19, #8]
   1e624:	mov	w0, #0x1                   	// #1
   1e628:	str	x20, [x1, x2, lsl #3]
   1e62c:	ldp	x19, x20, [sp, #16]
   1e630:	ldp	x29, x30, [sp], #32
   1e634:	ret
   1e638:	add	x2, x2, #0x1
   1e63c:	mov	x0, x1
   1e640:	lsl	x1, x2, #1
   1e644:	str	x1, [x19]
   1e648:	lsl	x1, x2, #4
   1e64c:	bl	a7e0 <realloc@plt>
   1e650:	mov	x1, x0
   1e654:	cbz	x0, 1e664 <printf_parse@@Base+0x1254>
   1e658:	str	x0, [x19, #16]
   1e65c:	ldr	x2, [x19, #8]
   1e660:	b	1e61c <printf_parse@@Base+0x120c>
   1e664:	mov	w0, #0x0                   	// #0
   1e668:	b	1e62c <printf_parse@@Base+0x121c>
   1e66c:	nop
   1e670:	stp	x29, x30, [sp, #-48]!
   1e674:	mov	x29, sp
   1e678:	ldr	x2, [x0]
   1e67c:	stp	x19, x20, [sp, #16]
   1e680:	mov	x19, x0
   1e684:	mov	x20, x1
   1e688:	cbz	x2, 1e6b4 <printf_parse@@Base+0x12a4>
   1e68c:	ldp	x1, x0, [x0, #8]
   1e690:	cbnz	x1, 1e6ec <printf_parse@@Base+0x12dc>
   1e694:	str	x20, [x0]
   1e698:	mov	w0, #0x1                   	// #1
   1e69c:	ldr	x1, [x19, #8]
   1e6a0:	add	x1, x1, #0x1
   1e6a4:	str	x1, [x19, #8]
   1e6a8:	ldp	x19, x20, [sp, #16]
   1e6ac:	ldp	x29, x30, [sp], #48
   1e6b0:	ret
   1e6b4:	str	x21, [sp, #32]
   1e6b8:	mov	x21, #0x1                   	// #1
   1e6bc:	stp	x21, x21, [x19]
   1e6c0:	mov	x0, #0x8                   	// #8
   1e6c4:	bl	a5f0 <malloc@plt>
   1e6c8:	str	x0, [x19, #16]
   1e6cc:	mov	x1, x0
   1e6d0:	cbz	x0, 1e768 <printf_parse@@Base+0x1358>
   1e6d4:	mov	w0, w21
   1e6d8:	ldr	x21, [sp, #32]
   1e6dc:	str	x20, [x1]
   1e6e0:	ldp	x19, x20, [sp, #16]
   1e6e4:	ldp	x29, x30, [sp], #48
   1e6e8:	ret
   1e6ec:	cmp	x2, x1
   1e6f0:	b.eq	1e778 <printf_parse@@Base+0x1368>  // b.none
   1e6f4:	ldr	x3, [x0]
   1e6f8:	lsl	x2, x1, #3
   1e6fc:	cmp	x3, x20
   1e700:	b.le	1e73c <printf_parse@@Base+0x132c>
   1e704:	cmp	x1, #0x0
   1e708:	b.le	1e724 <printf_parse@@Base+0x1314>
   1e70c:	add	x2, x0, x2
   1e710:	ldur	x1, [x2, #-8]
   1e714:	str	x1, [x2], #-8
   1e718:	cmp	x2, x0
   1e71c:	b.ne	1e710 <printf_parse@@Base+0x1300>  // b.any
   1e720:	mov	x2, #0x0                   	// #0
   1e724:	str	x20, [x0, x2]
   1e728:	mov	w0, #0x1                   	// #1
   1e72c:	ldr	x1, [x19, #8]
   1e730:	add	x1, x1, #0x1
   1e734:	str	x1, [x19, #8]
   1e738:	b	1e6a8 <printf_parse@@Base+0x1298>
   1e73c:	add	x1, x0, x2
   1e740:	ldur	x1, [x1, #-8]
   1e744:	cmp	x20, x1
   1e748:	b.ge	1e724 <printf_parse@@Base+0x1314>  // b.tcont
   1e74c:	sub	x3, x0, #0x8
   1e750:	str	x1, [x0, x2]
   1e754:	sub	x2, x2, #0x8
   1e758:	ldr	x1, [x3, x2]
   1e75c:	cmp	x1, x20
   1e760:	b.gt	1e750 <printf_parse@@Base+0x1340>
   1e764:	b	1e724 <printf_parse@@Base+0x1314>
   1e768:	mov	w0, #0x0                   	// #0
   1e76c:	ldr	x21, [sp, #32]
   1e770:	stp	xzr, xzr, [x19]
   1e774:	b	1e6a8 <printf_parse@@Base+0x1298>
   1e778:	lsl	x2, x1, #1
   1e77c:	str	x2, [x19]
   1e780:	lsl	x1, x1, #4
   1e784:	bl	a7e0 <realloc@plt>
   1e788:	cbz	x0, 1e798 <printf_parse@@Base+0x1388>
   1e78c:	str	x0, [x19, #16]
   1e790:	ldr	x1, [x19, #8]
   1e794:	b	1e6f4 <printf_parse@@Base+0x12e4>
   1e798:	mov	w0, #0x0                   	// #0
   1e79c:	b	1e6a8 <printf_parse@@Base+0x1298>
   1e7a0:	stp	x29, x30, [sp, #-64]!
   1e7a4:	mov	x29, sp
   1e7a8:	stp	x19, x20, [sp, #16]
   1e7ac:	mov	x20, x1
   1e7b0:	ldr	x19, [x1, #16]
   1e7b4:	str	x23, [sp, #48]
   1e7b8:	mov	x23, x1
   1e7bc:	stp	x21, x22, [sp, #32]
   1e7c0:	mov	x22, x2
   1e7c4:	mov	x21, x0
   1e7c8:	lsl	x0, x19, #3
   1e7cc:	str	x2, [x23], #32
   1e7d0:	str	x19, [x1, #32]
   1e7d4:	str	xzr, [x23, #8]
   1e7d8:	bl	a5f0 <malloc@plt>
   1e7dc:	str	x0, [x23, #16]
   1e7e0:	cbz	x0, 1e82c <printf_parse@@Base+0x141c>
   1e7e4:	cmp	x19, #0x0
   1e7e8:	mov	x19, #0x0                   	// #0
   1e7ec:	b.gt	1e800 <printf_parse@@Base+0x13f0>
   1e7f0:	b	1e844 <printf_parse@@Base+0x1434>
   1e7f4:	ldr	x1, [x20, #16]
   1e7f8:	cmp	x1, x19
   1e7fc:	b.le	1e844 <printf_parse@@Base+0x1434>
   1e800:	ldr	x1, [x20, #24]
   1e804:	ldr	x3, [x21]
   1e808:	ldr	x1, [x1, x19, lsl #3]
   1e80c:	add	x19, x19, #0x1
   1e810:	add	x3, x3, x1, lsl #4
   1e814:	ldrb	w3, [x3, #8]
   1e818:	tbnz	w3, #3, 1e7f4 <printf_parse@@Base+0x13e4>
   1e81c:	mov	x0, x23
   1e820:	bl	1e5f8 <printf_parse@@Base+0x11e8>
   1e824:	tst	w0, #0xff
   1e828:	b.ne	1e7f4 <printf_parse@@Base+0x13e4>  // b.any
   1e82c:	mov	w0, #0xc                   	// #12
   1e830:	ldp	x19, x20, [sp, #16]
   1e834:	ldp	x21, x22, [sp, #32]
   1e838:	ldr	x23, [sp, #48]
   1e83c:	ldp	x29, x30, [sp], #64
   1e840:	ret
   1e844:	ldr	x19, [x21, #136]
   1e848:	ldr	x21, [x21, #64]
   1e84c:	and	x22, x22, x19
   1e850:	add	x22, x22, x22, lsl #1
   1e854:	lsl	x19, x22, #3
   1e858:	add	x22, x21, x19
   1e85c:	ldr	x2, [x21, x19]
   1e860:	ldp	x0, x3, [x22, #8]
   1e864:	add	x1, x2, #0x1
   1e868:	cmp	x0, x2
   1e86c:	b.le	1e890 <printf_parse@@Base+0x1480>
   1e870:	str	x1, [x21, x19]
   1e874:	mov	w0, #0x0                   	// #0
   1e878:	str	x20, [x3, x2, lsl #3]
   1e87c:	ldp	x19, x20, [sp, #16]
   1e880:	ldp	x21, x22, [sp, #32]
   1e884:	ldr	x23, [sp, #48]
   1e888:	ldp	x29, x30, [sp], #64
   1e88c:	ret
   1e890:	mov	x0, x3
   1e894:	lsl	x23, x1, #1
   1e898:	lsl	x1, x1, #4
   1e89c:	bl	a7e0 <realloc@plt>
   1e8a0:	mov	x3, x0
   1e8a4:	cbz	x0, 1e82c <printf_parse@@Base+0x141c>
   1e8a8:	ldr	x2, [x21, x19]
   1e8ac:	stp	x23, x0, [x22, #8]
   1e8b0:	add	x1, x2, #0x1
   1e8b4:	b	1e870 <printf_parse@@Base+0x1460>
   1e8b8:	stp	x29, x30, [sp, #-48]!
   1e8bc:	mov	x29, sp
   1e8c0:	stp	x19, x20, [sp, #16]
   1e8c4:	mov	x20, x0
   1e8c8:	ldr	x19, [x0, #48]
   1e8cc:	str	x21, [sp, #32]
   1e8d0:	ldr	x21, [x0, #64]
   1e8d4:	ldr	x0, [x0, #88]
   1e8d8:	cmp	x21, x0
   1e8dc:	csel	x21, x21, x0, le
   1e8e0:	cmp	x21, x19
   1e8e4:	b.le	1e940 <printf_parse@@Base+0x1530>
   1e8e8:	bl	a7f0 <__ctype_toupper_loc@plt>
   1e8ec:	nop
   1e8f0:	ldr	x1, [x20]
   1e8f4:	ldr	x3, [x20, #40]
   1e8f8:	add	x1, x1, x19
   1e8fc:	ldr	x2, [x20, #120]
   1e900:	ldrb	w1, [x1, x3]
   1e904:	cbnz	x2, 1e938 <printf_parse@@Base+0x1528>
   1e908:	ldr	x3, [x0]
   1e90c:	ldr	x2, [x20, #8]
   1e910:	ldr	w1, [x3, x1, lsl #2]
   1e914:	strb	w1, [x2, x19]
   1e918:	add	x19, x19, #0x1
   1e91c:	cmp	x21, x19
   1e920:	b.ne	1e8f0 <printf_parse@@Base+0x14e0>  // b.any
   1e924:	stp	x21, x21, [x20, #48]
   1e928:	ldp	x19, x20, [sp, #16]
   1e92c:	ldr	x21, [sp, #32]
   1e930:	ldp	x29, x30, [sp], #48
   1e934:	ret
   1e938:	ldrb	w1, [x2, x1]
   1e93c:	b	1e908 <printf_parse@@Base+0x14f8>
   1e940:	mov	x21, x19
   1e944:	stp	x21, x21, [x20, #48]
   1e948:	ldp	x19, x20, [sp, #16]
   1e94c:	ldr	x21, [sp, #32]
   1e950:	ldp	x29, x30, [sp], #48
   1e954:	ret
   1e958:	stp	x29, x30, [sp, #-160]!
   1e95c:	mov	x29, sp
   1e960:	stp	x19, x20, [sp, #16]
   1e964:	mov	x19, x0
   1e968:	stp	x25, x26, [sp, #64]
   1e96c:	ldr	x26, [x0, #64]
   1e970:	ldr	x0, [x0, #88]
   1e974:	ldr	x20, [x19, #48]
   1e978:	cmp	x26, x0
   1e97c:	csel	x26, x26, x0, le
   1e980:	cmp	x26, x20
   1e984:	b.le	1ea30 <printf_parse@@Base+0x1620>
   1e988:	stp	x21, x22, [sp, #32]
   1e98c:	add	x21, sp, #0x5c
   1e990:	add	x22, sp, #0x60
   1e994:	stp	x23, x24, [sp, #48]
   1e998:	add	x23, x19, #0x20
   1e99c:	mov	w24, #0xffffffff            	// #-1
   1e9a0:	ldr	x4, [x19, #120]
   1e9a4:	sub	x2, x26, x20
   1e9a8:	ldr	x25, [x19, #32]
   1e9ac:	cbnz	x4, 1ea90 <printf_parse@@Base+0x1680>
   1e9b0:	ldr	x0, [x19, #40]
   1e9b4:	ldr	x1, [x19]
   1e9b8:	add	x0, x20, x0
   1e9bc:	add	x1, x1, x0
   1e9c0:	mov	x3, x23
   1e9c4:	mov	x0, x21
   1e9c8:	bl	a3e0 <rpl_mbrtowc@plt>
   1e9cc:	sub	x1, x0, #0x1
   1e9d0:	cmn	x1, #0x3
   1e9d4:	b.hi	1ea44 <printf_parse@@Base+0x1634>  // b.pmore
   1e9d8:	cmn	x0, #0x2
   1e9dc:	b.eq	1eb08 <printf_parse@@Base+0x16f8>  // b.none
   1e9e0:	ldr	x1, [x19, #16]
   1e9e4:	add	x0, x20, x0
   1e9e8:	ldr	w3, [sp, #92]
   1e9ec:	add	x4, x20, #0x1
   1e9f0:	lsl	x2, x20, #2
   1e9f4:	cmp	x4, x0
   1e9f8:	str	w3, [x1, x20, lsl #2]
   1e9fc:	b.ge	1ea88 <printf_parse@@Base+0x1678>  // b.tcont
   1ea00:	add	x3, x2, #0x4
   1ea04:	add	x2, x1, x0, lsl #2
   1ea08:	add	x1, x1, x3
   1ea0c:	nop
   1ea10:	str	w24, [x1], #4
   1ea14:	cmp	x2, x1
   1ea18:	b.ne	1ea10 <printf_parse@@Base+0x1600>  // b.any
   1ea1c:	mov	x20, x0
   1ea20:	cmp	x20, x26
   1ea24:	b.lt	1e9a0 <printf_parse@@Base+0x1590>  // b.tstop
   1ea28:	ldp	x21, x22, [sp, #32]
   1ea2c:	ldp	x23, x24, [sp, #48]
   1ea30:	ldp	x25, x26, [sp, #64]
   1ea34:	stp	x20, x20, [x19, #48]
   1ea38:	ldp	x19, x20, [sp, #16]
   1ea3c:	ldp	x29, x30, [sp], #160
   1ea40:	ret
   1ea44:	ldr	x0, [x19]
   1ea48:	ldr	x2, [x19, #40]
   1ea4c:	add	x0, x0, x20
   1ea50:	ldr	x1, [x19, #120]
   1ea54:	ldrb	w3, [x0, x2]
   1ea58:	str	w3, [sp, #92]
   1ea5c:	cbnz	x1, 1eb38 <printf_parse@@Base+0x1728>
   1ea60:	ldr	x1, [x19, #16]
   1ea64:	str	x25, [x19, #32]
   1ea68:	add	x4, x20, #0x1
   1ea6c:	mov	x0, #0x1                   	// #1
   1ea70:	add	x0, x20, x0
   1ea74:	lsl	x2, x20, #2
   1ea78:	str	w3, [x1, x20, lsl #2]
   1ea7c:	cmp	x4, x0
   1ea80:	b.lt	1ea00 <printf_parse@@Base+0x15f0>  // b.tstop
   1ea84:	nop
   1ea88:	mov	x20, x4
   1ea8c:	b	1ea20 <printf_parse@@Base+0x1610>
   1ea90:	ldr	w0, [x19, #144]
   1ea94:	cmp	w0, #0x0
   1ea98:	b.le	1eb00 <printf_parse@@Base+0x16f0>
   1ea9c:	cmp	x2, #0x0
   1eaa0:	b.le	1eb00 <printf_parse@@Base+0x16f0>
   1eaa4:	mov	x1, #0x1                   	// #1
   1eaa8:	b	1eabc <printf_parse@@Base+0x16ac>
   1eaac:	cmp	x2, x1
   1eab0:	b.eq	1eb00 <printf_parse@@Base+0x16f0>  // b.none
   1eab4:	ldr	x4, [x19, #120]
   1eab8:	mov	x1, x7
   1eabc:	ldr	x0, [x19]
   1eac0:	add	x5, x22, x1
   1eac4:	ldr	x3, [x19, #40]
   1eac8:	add	x0, x0, x20
   1eacc:	add	x0, x0, x1
   1ead0:	add	x7, x1, #0x1
   1ead4:	add	x0, x0, x3
   1ead8:	ldr	x3, [x19, #8]
   1eadc:	ldurb	w6, [x0, #-1]
   1eae0:	add	x0, x3, x20
   1eae4:	add	x0, x0, x1
   1eae8:	ldrb	w3, [x4, x6]
   1eaec:	sturb	w3, [x0, #-1]
   1eaf0:	sturb	w3, [x5, #-1]
   1eaf4:	ldr	w0, [x19, #144]
   1eaf8:	cmp	w0, w1
   1eafc:	b.gt	1eaac <printf_parse@@Base+0x169c>
   1eb00:	mov	x1, x22
   1eb04:	b	1e9c0 <printf_parse@@Base+0x15b0>
   1eb08:	ldr	x1, [x19, #64]
   1eb0c:	ldr	x0, [x19, #88]
   1eb10:	cmp	x1, x0
   1eb14:	b.ge	1ea44 <printf_parse@@Base+0x1634>  // b.tcont
   1eb18:	ldp	x21, x22, [sp, #32]
   1eb1c:	ldp	x23, x24, [sp, #48]
   1eb20:	str	x25, [x19, #32]
   1eb24:	ldp	x25, x26, [sp, #64]
   1eb28:	stp	x20, x20, [x19, #48]
   1eb2c:	ldp	x19, x20, [sp, #16]
   1eb30:	ldp	x29, x30, [sp], #160
   1eb34:	ret
   1eb38:	and	x3, x3, #0xff
   1eb3c:	ldrb	w3, [x1, x3]
   1eb40:	str	w3, [sp, #92]
   1eb44:	b	1ea60 <printf_parse@@Base+0x1650>
   1eb48:	stp	x29, x30, [sp, #-208]!
   1eb4c:	mov	x29, sp
   1eb50:	stp	x19, x20, [sp, #16]
   1eb54:	mov	x19, x0
   1eb58:	stp	x21, x22, [sp, #32]
   1eb5c:	stp	x25, x26, [sp, #64]
   1eb60:	ldrb	w1, [x0, #138]
   1eb64:	ldr	x20, [x0, #64]
   1eb68:	ldr	x0, [x0, #88]
   1eb6c:	ldr	x26, [x19, #48]
   1eb70:	cmp	x20, x0
   1eb74:	csel	x20, x20, x0, le
   1eb78:	cbnz	w1, 1eb84 <printf_parse@@Base+0x1774>
   1eb7c:	ldr	x0, [x19, #120]
   1eb80:	cbz	x0, 1eccc <printf_parse@@Base+0x18bc>
   1eb84:	ldr	x21, [x19, #56]
   1eb88:	cmp	x20, x26
   1eb8c:	b.le	1ecb0 <printf_parse@@Base+0x18a0>
   1eb90:	stp	x23, x24, [sp, #48]
   1eb94:	add	x23, x19, #0x20
   1eb98:	add	x0, sp, #0x84
   1eb9c:	stp	x27, x28, [sp, #80]
   1eba0:	sub	x27, x20, x26
   1eba4:	str	x0, [sp, #104]
   1eba8:	ldr	x2, [x19, #120]
   1ebac:	ldr	x0, [x19, #32]
   1ebb0:	str	x0, [sp, #136]
   1ebb4:	cbnz	x2, 1eeb8 <printf_parse@@Base+0x1aa8>
   1ebb8:	ldr	x0, [x19, #40]
   1ebbc:	ldr	x24, [x19]
   1ebc0:	add	x0, x21, x0
   1ebc4:	add	x24, x24, x0
   1ebc8:	ldr	x0, [sp, #104]
   1ebcc:	mov	x2, x27
   1ebd0:	mov	x3, x23
   1ebd4:	mov	x1, x24
   1ebd8:	bl	a3e0 <rpl_mbrtowc@plt>
   1ebdc:	sub	x27, x0, #0x1
   1ebe0:	mov	x22, x0
   1ebe4:	cmn	x27, #0x4
   1ebe8:	b.hi	1ef48 <printf_parse@@Base+0x1b38>  // b.pmore
   1ebec:	ldr	w28, [sp, #132]
   1ebf0:	mov	x25, x26
   1ebf4:	mov	w0, w28
   1ebf8:	bl	ae30 <towupper@plt>
   1ebfc:	mov	w23, w0
   1ec00:	cmp	w28, w0
   1ec04:	b.eq	1ef24 <printf_parse@@Base+0x1b14>  // b.none
   1ec08:	add	x3, sp, #0x90
   1ec0c:	add	x2, sp, #0x88
   1ec10:	mov	x0, x3
   1ec14:	mov	w1, w23
   1ec18:	str	x3, [sp, #96]
   1ec1c:	bl	aff0 <wcrtomb@plt>
   1ec20:	mov	x28, x0
   1ec24:	cmp	x22, x0
   1ec28:	ldr	x3, [sp, #96]
   1ec2c:	b.ne	1efe0 <printf_parse@@Base+0x1bd0>  // b.any
   1ec30:	ldr	x0, [x19, #8]
   1ec34:	mov	x1, x3
   1ec38:	mov	x2, x22
   1ec3c:	add	x0, x0, x26
   1ec40:	bl	a2c0 <memcpy@plt>
   1ec44:	ldrb	w0, [x19, #140]
   1ec48:	cbnz	w0, 1efb8 <printf_parse@@Base+0x1ba8>
   1ec4c:	add	x0, x22, x21
   1ec50:	ldr	x1, [x19, #16]
   1ec54:	add	x26, x26, #0x1
   1ec58:	add	x22, x22, x25
   1ec5c:	mov	x21, x0
   1ec60:	cmp	x26, x22
   1ec64:	lsl	x0, x25, #2
   1ec68:	str	w23, [x1, x25, lsl #2]
   1ec6c:	b.ge	1ef3c <printf_parse@@Base+0x1b2c>  // b.tcont
   1ec70:	add	x0, x0, #0x4
   1ec74:	add	x2, x1, x22, lsl #2
   1ec78:	add	x0, x1, x0
   1ec7c:	mov	w1, #0xffffffff            	// #-1
   1ec80:	str	w1, [x0], #4
   1ec84:	cmp	x2, x0
   1ec88:	b.ne	1ec80 <printf_parse@@Base+0x1870>  // b.any
   1ec8c:	mov	x26, x22
   1ec90:	ldp	x23, x24, [sp, #48]
   1ec94:	ldp	x27, x28, [sp, #80]
   1ec98:	b	1eb88 <printf_parse@@Base+0x1778>
   1ec9c:	ldr	x0, [sp, #136]
   1eca0:	ldp	x23, x24, [sp, #48]
   1eca4:	ldp	x27, x28, [sp, #80]
   1eca8:	str	x0, [x19, #32]
   1ecac:	nop
   1ecb0:	mov	w0, #0x0                   	// #0
   1ecb4:	stp	x26, x21, [x19, #48]
   1ecb8:	ldp	x19, x20, [sp, #16]
   1ecbc:	ldp	x21, x22, [sp, #32]
   1ecc0:	ldp	x25, x26, [sp, #64]
   1ecc4:	ldp	x29, x30, [sp], #208
   1ecc8:	ret
   1eccc:	ldrb	w0, [x19, #140]
   1ecd0:	cbnz	w0, 1eb84 <printf_parse@@Base+0x1774>
   1ecd4:	cmp	x26, x20
   1ecd8:	b.ge	1edf0 <printf_parse@@Base+0x19e0>  // b.tcont
   1ecdc:	add	x0, sp, #0x88
   1ece0:	stp	x23, x24, [sp, #48]
   1ece4:	add	x23, x19, #0x20
   1ece8:	add	x24, sp, #0x84
   1ecec:	mov	w21, #0xffffffff            	// #-1
   1ecf0:	stp	x27, x28, [sp, #80]
   1ecf4:	str	x0, [sp, #120]
   1ecf8:	add	x0, sp, #0x90
   1ecfc:	str	x0, [sp, #112]
   1ed00:	ldr	x28, [x19]
   1ed04:	mov	x22, x26
   1ed08:	ldr	x27, [x19, #40]
   1ed0c:	add	x0, x28, x27
   1ed10:	ldrb	w25, [x0, x26]
   1ed14:	tbnz	w25, #7, 1ed24 <printf_parse@@Base+0x1914>
   1ed18:	mov	x0, x23
   1ed1c:	bl	a930 <mbsinit@plt>
   1ed20:	cbnz	w0, 1ee1c <printf_parse@@Base+0x1a0c>
   1ed24:	ldr	x5, [x19, #32]
   1ed28:	add	x1, x27, x26
   1ed2c:	sub	x27, x20, x26
   1ed30:	add	x1, x28, x1
   1ed34:	mov	x2, x27
   1ed38:	mov	x3, x23
   1ed3c:	mov	x0, x24
   1ed40:	str	x5, [sp, #136]
   1ed44:	bl	a3e0 <rpl_mbrtowc@plt>
   1ed48:	str	x24, [sp, #104]
   1ed4c:	mov	x28, x0
   1ed50:	sub	x0, x0, #0x1
   1ed54:	cmn	x0, #0x4
   1ed58:	b.hi	1ee48 <printf_parse@@Base+0x1a38>  // b.pmore
   1ed5c:	ldr	w1, [sp, #132]
   1ed60:	str	w1, [sp, #96]
   1ed64:	mov	w0, w1
   1ed68:	bl	ae30 <towupper@plt>
   1ed6c:	mov	w25, w0
   1ed70:	ldr	w1, [sp, #96]
   1ed74:	cmp	w1, w0
   1ed78:	b.eq	1edfc <printf_parse@@Base+0x19ec>  // b.none
   1ed7c:	mov	w1, w0
   1ed80:	ldp	x0, x2, [sp, #112]
   1ed84:	bl	aff0 <wcrtomb@plt>
   1ed88:	cmp	x28, x0
   1ed8c:	b.ne	1ef1c <printf_parse@@Base+0x1b0c>  // b.any
   1ed90:	ldr	x1, [sp, #112]
   1ed94:	mov	x2, x28
   1ed98:	ldr	x0, [x19, #8]
   1ed9c:	add	x0, x0, x26
   1eda0:	bl	a2c0 <memcpy@plt>
   1eda4:	ldr	x1, [x19, #16]
   1eda8:	add	x26, x26, #0x1
   1edac:	add	x3, x28, x22
   1edb0:	lsl	x0, x22, #2
   1edb4:	cmp	x26, x3
   1edb8:	str	w25, [x1, x22, lsl #2]
   1edbc:	b.ge	1ede0 <printf_parse@@Base+0x19d0>  // b.tcont
   1edc0:	add	x2, x0, #0x4
   1edc4:	add	x0, x1, x3, lsl #2
   1edc8:	add	x1, x1, x2
   1edcc:	nop
   1edd0:	str	w21, [x1], #4
   1edd4:	cmp	x0, x1
   1edd8:	b.ne	1edd0 <printf_parse@@Base+0x19c0>  // b.any
   1eddc:	mov	x26, x3
   1ede0:	cmp	x26, x20
   1ede4:	b.lt	1ed00 <printf_parse@@Base+0x18f0>  // b.tstop
   1ede8:	ldp	x23, x24, [sp, #48]
   1edec:	ldp	x27, x28, [sp, #80]
   1edf0:	mov	w0, #0x0                   	// #0
   1edf4:	stp	x26, x26, [x19, #48]
   1edf8:	b	1ecb8 <printf_parse@@Base+0x18a8>
   1edfc:	ldp	x6, x0, [x19]
   1ee00:	mov	x2, x28
   1ee04:	ldr	x1, [x19, #40]
   1ee08:	add	x1, x26, x1
   1ee0c:	add	x1, x6, x1
   1ee10:	add	x0, x0, x26
   1ee14:	bl	a2c0 <memcpy@plt>
   1ee18:	b	1eda4 <printf_parse@@Base+0x1994>
   1ee1c:	bl	a7f0 <__ctype_toupper_loc@plt>
   1ee20:	ldr	x0, [x0]
   1ee24:	mov	w1, w25
   1ee28:	ldr	x2, [x19, #8]
   1ee2c:	ldr	w0, [x0, x1, lsl #2]
   1ee30:	strb	w0, [x2, x26]
   1ee34:	ldp	x1, x0, [x19, #8]
   1ee38:	ldrb	w1, [x1, x26]
   1ee3c:	str	w1, [x0, x26, lsl #2]
   1ee40:	add	x26, x26, #0x1
   1ee44:	b	1ede0 <printf_parse@@Base+0x19d0>
   1ee48:	cmn	x0, #0x3
   1ee4c:	b.eq	1ee84 <printf_parse@@Base+0x1a74>  // b.none
   1ee50:	ldp	x0, x1, [x19]
   1ee54:	cmn	x28, #0x1
   1ee58:	ldr	x2, [x19, #40]
   1ee5c:	add	x0, x0, x26
   1ee60:	ldrb	w0, [x0, x2]
   1ee64:	strb	w0, [x1, x26]
   1ee68:	add	x26, x26, #0x1
   1ee6c:	ldr	x1, [x19, #16]
   1ee70:	str	w0, [x1, x22, lsl #2]
   1ee74:	b.ne	1ede0 <printf_parse@@Base+0x19d0>  // b.any
   1ee78:	ldr	x0, [sp, #136]
   1ee7c:	str	x0, [x19, #32]
   1ee80:	b	1ede0 <printf_parse@@Base+0x19d0>
   1ee84:	ldr	x1, [x19, #64]
   1ee88:	ldr	x0, [x19, #88]
   1ee8c:	cmp	x1, x0
   1ee90:	b.lt	1f0c8 <printf_parse@@Base+0x1cb8>  // b.tstop
   1ee94:	ldp	x0, x1, [x19]
   1ee98:	ldr	x2, [x19, #40]
   1ee9c:	add	x0, x0, x26
   1eea0:	ldrb	w0, [x0, x2]
   1eea4:	strb	w0, [x1, x26]
   1eea8:	add	x26, x26, #0x1
   1eeac:	ldr	x1, [x19, #16]
   1eeb0:	str	w0, [x1, x22, lsl #2]
   1eeb4:	b	1ede0 <printf_parse@@Base+0x19d0>
   1eeb8:	ldr	w8, [x19, #144]
   1eebc:	cmp	w8, #0x0
   1eec0:	b.le	1f104 <printf_parse@@Base+0x1cf4>
   1eec4:	cmp	x27, #0x0
   1eec8:	b.le	1f104 <printf_parse@@Base+0x1cf4>
   1eecc:	ldr	x1, [x19, #40]
   1eed0:	add	x3, sp, #0x90
   1eed4:	ldr	x7, [x19]
   1eed8:	add	x1, x21, x1
   1eedc:	sub	x1, x1, #0x1
   1eee0:	mov	x0, #0x1                   	// #1
   1eee4:	add	x7, x7, x1
   1eee8:	b	1eef8 <printf_parse@@Base+0x1ae8>
   1eeec:	cmp	x27, x0
   1eef0:	mov	x0, x5
   1eef4:	b.eq	1ef14 <printf_parse@@Base+0x1b04>  // b.none
   1eef8:	ldrb	w6, [x7, x0]
   1eefc:	add	x1, x3, x0
   1ef00:	cmp	w8, w0
   1ef04:	add	x5, x0, #0x1
   1ef08:	ldrb	w6, [x2, x6]
   1ef0c:	sturb	w6, [x1, #-1]
   1ef10:	b.gt	1eeec <printf_parse@@Base+0x1adc>
   1ef14:	mov	x24, x3
   1ef18:	b	1ebc8 <printf_parse@@Base+0x17b8>
   1ef1c:	mov	x21, x26
   1ef20:	b	1eba8 <printf_parse@@Base+0x1798>
   1ef24:	ldr	x0, [x19, #8]
   1ef28:	mov	x1, x24
   1ef2c:	mov	x2, x22
   1ef30:	add	x0, x0, x26
   1ef34:	bl	a2c0 <memcpy@plt>
   1ef38:	b	1ec44 <printf_parse@@Base+0x1834>
   1ef3c:	ldp	x23, x24, [sp, #48]
   1ef40:	ldp	x27, x28, [sp, #80]
   1ef44:	b	1eb88 <printf_parse@@Base+0x1778>
   1ef48:	cmn	x27, #0x3
   1ef4c:	b.ne	1ef60 <printf_parse@@Base+0x1b50>  // b.any
   1ef50:	ldr	x1, [x19, #64]
   1ef54:	ldr	x0, [x19, #88]
   1ef58:	cmp	x1, x0
   1ef5c:	b.lt	1ec9c <printf_parse@@Base+0x188c>  // b.tstop
   1ef60:	ldr	x0, [x19]
   1ef64:	ldr	x2, [x19, #40]
   1ef68:	add	x0, x0, x21
   1ef6c:	ldr	x1, [x19, #120]
   1ef70:	ldrb	w0, [x0, x2]
   1ef74:	cbnz	x1, 1f11c <printf_parse@@Base+0x1d0c>
   1ef78:	ldr	x1, [x19, #8]
   1ef7c:	mov	x2, x26
   1ef80:	strb	w0, [x1, x26]
   1ef84:	ldrb	w1, [x19, #140]
   1ef88:	cbnz	w1, 1f110 <printf_parse@@Base+0x1d00>
   1ef8c:	ldr	x1, [x19, #16]
   1ef90:	add	x21, x21, #0x1
   1ef94:	add	x26, x26, #0x1
   1ef98:	cmn	x22, #0x1
   1ef9c:	str	w0, [x1, x2, lsl #2]
   1efa0:	b.ne	1ef3c <printf_parse@@Base+0x1b2c>  // b.any
   1efa4:	ldr	x0, [sp, #136]
   1efa8:	ldp	x23, x24, [sp, #48]
   1efac:	ldp	x27, x28, [sp, #80]
   1efb0:	str	x0, [x19, #32]
   1efb4:	b	1eb88 <printf_parse@@Base+0x1778>
   1efb8:	ldr	x1, [x19, #24]
   1efbc:	neg	x2, x21, lsl #3
   1efc0:	add	x2, x2, x26, lsl #3
   1efc4:	add	x0, x22, x21
   1efc8:	add	x1, x1, x2
   1efcc:	str	x21, [x1, x21, lsl #3]
   1efd0:	add	x21, x21, #0x1
   1efd4:	cmp	x0, x21
   1efd8:	b.ne	1efcc <printf_parse@@Base+0x1bbc>  // b.any
   1efdc:	b	1ec50 <printf_parse@@Base+0x1840>
   1efe0:	cmn	x0, #0x1
   1efe4:	b.eq	1ef24 <printf_parse@@Base+0x1b14>  // b.none
   1efe8:	add	x24, x0, x26
   1efec:	ldr	x0, [x19, #64]
   1eff0:	cmp	x24, x0
   1eff4:	b.hi	1ec9c <printf_parse@@Base+0x188c>  // b.pmore
   1eff8:	ldr	x1, [x19, #24]
   1effc:	cbz	x1, 1f0dc <printf_parse@@Base+0x1ccc>
   1f000:	ldrb	w0, [x19, #140]
   1f004:	cbnz	w0, 1f02c <printf_parse@@Base+0x1c1c>
   1f008:	cbz	x26, 1f024 <printf_parse@@Base+0x1c14>
   1f00c:	ldr	x1, [x19, #24]
   1f010:	mov	x0, #0x0                   	// #0
   1f014:	str	x0, [x1, x0, lsl #3]
   1f018:	add	x0, x0, #0x1
   1f01c:	cmp	x0, x26
   1f020:	b.ne	1f014 <printf_parse@@Base+0x1c04>  // b.any
   1f024:	mov	w0, #0x1                   	// #1
   1f028:	strb	w0, [x19, #140]
   1f02c:	ldr	x0, [x19, #8]
   1f030:	mov	x1, x3
   1f034:	mov	x2, x28
   1f038:	add	x0, x0, x26
   1f03c:	bl	a2c0 <memcpy@plt>
   1f040:	ldp	x2, x1, [x19, #16]
   1f044:	str	w23, [x2, x26, lsl #2]
   1f048:	cmp	x28, #0x1
   1f04c:	mov	x0, #0x1                   	// #1
   1f050:	mov	w5, #0xffffffff            	// #-1
   1f054:	str	x21, [x1, x26, lsl #3]
   1f058:	add	x2, x2, x26, lsl #2
   1f05c:	add	x1, x1, x26, lsl #3
   1f060:	b.ls	1f084 <printf_parse@@Base+0x1c74>  // b.plast
   1f064:	cmp	x0, x22
   1f068:	csel	x3, x27, x0, cs  // cs = hs, nlast
   1f06c:	add	x3, x3, x21
   1f070:	str	x3, [x1, x0, lsl #3]
   1f074:	str	w5, [x2, x0, lsl #2]
   1f078:	add	x0, x0, #0x1
   1f07c:	cmp	x28, x0
   1f080:	b.ne	1f064 <printf_parse@@Base+0x1c54>  // b.any
   1f084:	ldp	x0, x1, [x19, #88]
   1f088:	sub	x26, x28, x22
   1f08c:	add	x0, x26, x0
   1f090:	str	x0, [x19, #88]
   1f094:	cmp	x21, x1
   1f098:	b.ge	1f0a8 <printf_parse@@Base+0x1c98>  // b.tcont
   1f09c:	ldr	x1, [x19, #104]
   1f0a0:	add	x26, x1, x26
   1f0a4:	str	x26, [x19, #104]
   1f0a8:	ldr	x20, [x19, #64]
   1f0ac:	mov	x26, x24
   1f0b0:	add	x21, x22, x21
   1f0b4:	cmp	x20, x0
   1f0b8:	csel	x20, x20, x0, le
   1f0bc:	ldp	x23, x24, [sp, #48]
   1f0c0:	ldp	x27, x28, [sp, #80]
   1f0c4:	b	1eb88 <printf_parse@@Base+0x1778>
   1f0c8:	ldr	x0, [sp, #136]
   1f0cc:	ldp	x23, x24, [sp, #48]
   1f0d0:	ldp	x27, x28, [sp, #80]
   1f0d4:	str	x0, [x19, #32]
   1f0d8:	b	1edf0 <printf_parse@@Base+0x19e0>
   1f0dc:	lsl	x0, x0, #3
   1f0e0:	str	x3, [sp, #96]
   1f0e4:	bl	a5f0 <malloc@plt>
   1f0e8:	str	x0, [x19, #24]
   1f0ec:	ldr	x3, [sp, #96]
   1f0f0:	cbnz	x0, 1f000 <printf_parse@@Base+0x1bf0>
   1f0f4:	mov	w0, #0xc                   	// #12
   1f0f8:	ldp	x23, x24, [sp, #48]
   1f0fc:	ldp	x27, x28, [sp, #80]
   1f100:	b	1ecb8 <printf_parse@@Base+0x18a8>
   1f104:	add	x3, sp, #0x90
   1f108:	mov	x24, x3
   1f10c:	b	1ebc8 <printf_parse@@Base+0x17b8>
   1f110:	ldr	x1, [x19, #24]
   1f114:	str	x21, [x1, x26, lsl #3]
   1f118:	b	1ef8c <printf_parse@@Base+0x1b7c>
   1f11c:	and	x0, x0, #0xff
   1f120:	ldrb	w0, [x1, x0]
   1f124:	b	1ef78 <printf_parse@@Base+0x1b68>
   1f128:	stp	x29, x30, [sp, #-32]!
   1f12c:	mov	x3, #0xffffffffffffffe     	// #1152921504606846974
   1f130:	mov	x29, sp
   1f134:	ldr	x2, [x0, #64]
   1f138:	stp	x19, x20, [sp, #16]
   1f13c:	cmp	x2, x3
   1f140:	b.hi	1f254 <printf_parse@@Base+0x1e44>  // b.pmore
   1f144:	ldr	x3, [x0, #88]
   1f148:	lsl	x2, x2, #1
   1f14c:	sxtw	x1, w1
   1f150:	mov	x19, x0
   1f154:	cmp	x2, x3
   1f158:	csel	x2, x2, x3, le
   1f15c:	cmp	x2, x1
   1f160:	csel	x1, x2, x1, ge  // ge = tcont
   1f164:	bl	1e558 <printf_parse@@Base+0x1148>
   1f168:	mov	w20, w0
   1f16c:	cbnz	w0, 1f1bc <printf_parse@@Base+0x1dac>
   1f170:	ldr	x0, [x19, #184]
   1f174:	cbz	x0, 1f190 <printf_parse@@Base+0x1d80>
   1f178:	ldr	x1, [x19, #64]
   1f17c:	add	x1, x1, #0x1
   1f180:	lsl	x1, x1, #3
   1f184:	bl	a7e0 <realloc@plt>
   1f188:	cbz	x0, 1f254 <printf_parse@@Base+0x1e44>
   1f18c:	str	x0, [x19, #184]
   1f190:	ldrb	w0, [x19, #136]
   1f194:	ldr	w1, [x19, #144]
   1f198:	cmp	w1, #0x1
   1f19c:	cbz	w0, 1f1cc <printf_parse@@Base+0x1dbc>
   1f1a0:	mov	x0, x19
   1f1a4:	b.le	1f240 <printf_parse@@Base+0x1e30>
   1f1a8:	ldp	x19, x20, [sp, #16]
   1f1ac:	ldp	x29, x30, [sp], #32
   1f1b0:	b	1eb48 <printf_parse@@Base+0x1738>
   1f1b4:	mov	x5, x1
   1f1b8:	stp	x5, x5, [x19, #48]
   1f1bc:	mov	w0, w20
   1f1c0:	ldp	x19, x20, [sp, #16]
   1f1c4:	ldp	x29, x30, [sp], #32
   1f1c8:	ret
   1f1cc:	b.gt	1f228 <printf_parse@@Base+0x1e18>
   1f1d0:	ldr	x0, [x19, #120]
   1f1d4:	cbz	x0, 1f1bc <printf_parse@@Base+0x1dac>
   1f1d8:	ldr	x5, [x19, #64]
   1f1dc:	ldr	x2, [x19, #88]
   1f1e0:	ldr	x1, [x19, #48]
   1f1e4:	cmp	x5, x2
   1f1e8:	csel	x5, x5, x2, le
   1f1ec:	cmp	x5, x1
   1f1f0:	b.gt	1f1fc <printf_parse@@Base+0x1dec>
   1f1f4:	b	1f1b4 <printf_parse@@Base+0x1da4>
   1f1f8:	ldr	x0, [x19, #120]
   1f1fc:	ldp	x2, x3, [x19]
   1f200:	ldr	x4, [x19, #40]
   1f204:	add	x2, x2, x1
   1f208:	ldrb	w2, [x2, x4]
   1f20c:	ldrb	w0, [x0, x2]
   1f210:	strb	w0, [x3, x1]
   1f214:	add	x1, x1, #0x1
   1f218:	cmp	x5, x1
   1f21c:	b.ne	1f1f8 <printf_parse@@Base+0x1de8>  // b.any
   1f220:	stp	x5, x5, [x19, #48]
   1f224:	b	1f1bc <printf_parse@@Base+0x1dac>
   1f228:	mov	x0, x19
   1f22c:	bl	1e958 <printf_parse@@Base+0x1548>
   1f230:	mov	w0, w20
   1f234:	ldp	x19, x20, [sp, #16]
   1f238:	ldp	x29, x30, [sp], #32
   1f23c:	ret
   1f240:	bl	1e8b8 <printf_parse@@Base+0x14a8>
   1f244:	mov	w0, w20
   1f248:	ldp	x19, x20, [sp, #16]
   1f24c:	ldp	x29, x30, [sp], #32
   1f250:	ret
   1f254:	mov	w20, #0xc                   	// #12
   1f258:	mov	w0, w20
   1f25c:	ldp	x19, x20, [sp, #16]
   1f260:	ldp	x29, x30, [sp], #32
   1f264:	ret
   1f268:	stp	x29, x30, [sp, #-48]!
   1f26c:	mov	x29, sp
   1f270:	stp	x19, x20, [sp, #16]
   1f274:	mov	x19, x0
   1f278:	mov	x20, x1
   1f27c:	ldr	x0, [x0, #64]
   1f280:	str	x21, [sp, #32]
   1f284:	ldr	x21, [x19, #192]
   1f288:	cmp	x0, x1
   1f28c:	b.gt	1f2c8 <printf_parse@@Base+0x1eb8>
   1f290:	ldr	x1, [x19, #88]
   1f294:	cmp	x0, x1
   1f298:	b.ge	1f2c8 <printf_parse@@Base+0x1eb8>  // b.tcont
   1f29c:	add	w1, w20, #0x1
   1f2a0:	mov	x0, x19
   1f2a4:	bl	1f128 <printf_parse@@Base+0x1d18>
   1f2a8:	cbnz	w0, 1f2b8 <printf_parse@@Base+0x1ea8>
   1f2ac:	cmp	x21, x20
   1f2b0:	mov	w0, #0x0                   	// #0
   1f2b4:	b.lt	1f2f4 <printf_parse@@Base+0x1ee4>  // b.tstop
   1f2b8:	ldp	x19, x20, [sp, #16]
   1f2bc:	ldr	x21, [sp, #32]
   1f2c0:	ldp	x29, x30, [sp], #48
   1f2c4:	ret
   1f2c8:	ldr	x0, [x19, #48]
   1f2cc:	cmp	x0, x20
   1f2d0:	b.gt	1f2ac <printf_parse@@Base+0x1e9c>
   1f2d4:	ldr	x1, [x19, #88]
   1f2d8:	cmp	x0, x1
   1f2dc:	b.ge	1f2ac <printf_parse@@Base+0x1e9c>  // b.tcont
   1f2e0:	add	w1, w20, #0x1
   1f2e4:	mov	x0, x19
   1f2e8:	bl	1f128 <printf_parse@@Base+0x1d18>
   1f2ec:	cbz	w0, 1f2ac <printf_parse@@Base+0x1e9c>
   1f2f0:	b	1f2b8 <printf_parse@@Base+0x1ea8>
   1f2f4:	ldr	x0, [x19, #184]
   1f2f8:	add	x3, x21, #0x1
   1f2fc:	sub	x2, x20, x21
   1f300:	mov	w1, #0x0                   	// #0
   1f304:	lsl	x2, x2, #3
   1f308:	add	x0, x0, x3, lsl #3
   1f30c:	bl	a6f0 <memset@plt>
   1f310:	str	x20, [x19, #192]
   1f314:	mov	w0, #0x0                   	// #0
   1f318:	ldp	x19, x20, [sp, #16]
   1f31c:	ldr	x21, [sp, #32]
   1f320:	ldp	x29, x30, [sp], #48
   1f324:	ret
   1f328:	stp	x29, x30, [sp, #-32]!
   1f32c:	mov	x29, sp
   1f330:	str	x19, [sp, #16]
   1f334:	mov	x19, x0
   1f338:	ldr	x0, [x0]
   1f33c:	bl	aa50 <free@plt>
   1f340:	ldr	x0, [x19, #8]
   1f344:	bl	aa50 <free@plt>
   1f348:	ldr	x0, [x19, #16]
   1f34c:	bl	aa50 <free@plt>
   1f350:	ldr	x0, [x19, #24]
   1f354:	bl	aa50 <free@plt>
   1f358:	mov	x0, x19
   1f35c:	ldr	x19, [sp, #16]
   1f360:	ldp	x29, x30, [sp], #32
   1f364:	b	aa50 <free@plt>
   1f368:	ldr	w1, [x0, #8]
   1f36c:	and	w1, w1, #0x7ffff
   1f370:	and	w1, w1, #0xfffc00ff
   1f374:	cmp	w1, #0x6
   1f378:	b.eq	1f388 <printf_parse@@Base+0x1f78>  // b.none
   1f37c:	cmp	w1, #0x3
   1f380:	b.eq	1f390 <printf_parse@@Base+0x1f80>  // b.none
   1f384:	ret
   1f388:	ldr	x0, [x0]
   1f38c:	b	1f328 <printf_parse@@Base+0x1f18>
   1f390:	ldr	x0, [x0]
   1f394:	b	aa50 <free@plt>
   1f398:	stp	x29, x30, [sp, #-16]!
   1f39c:	add	x0, x1, #0x28
   1f3a0:	mov	x29, sp
   1f3a4:	bl	1f368 <printf_parse@@Base+0x1f58>
   1f3a8:	mov	w0, #0x0                   	// #0
   1f3ac:	ldp	x29, x30, [sp], #16
   1f3b0:	ret
   1f3b4:	nop
   1f3b8:	stp	x29, x30, [sp, #-96]!
   1f3bc:	mov	x29, sp
   1f3c0:	stp	x21, x22, [sp, #32]
   1f3c4:	ldp	x21, x4, [x0, #8]
   1f3c8:	stp	x19, x20, [sp, #16]
   1f3cc:	mov	x19, x0
   1f3d0:	stp	x23, x24, [sp, #48]
   1f3d4:	mov	x20, x2
   1f3d8:	mov	x24, x1
   1f3dc:	stp	x25, x26, [sp, #64]
   1f3e0:	and	w25, w2, #0xff
   1f3e4:	cmp	x4, x21
   1f3e8:	b.cs	1f494 <printf_parse@@Base+0x2084>  // b.hs, b.nlast
   1f3ec:	ldr	x22, [x0, #24]
   1f3f0:	ldr	x21, [x0, #40]
   1f3f4:	lsl	x3, x4, #4
   1f3f8:	ldr	x5, [x19]
   1f3fc:	and	w1, w20, #0xfffc00ff
   1f400:	cmp	w25, #0x6
   1f404:	add	x2, x5, x3
   1f408:	cset	w0, eq  // eq = none
   1f40c:	str	x24, [x5, x3]
   1f410:	cmp	w25, #0x5
   1f414:	str	x20, [x2, #8]
   1f418:	str	w1, [x2, #8]
   1f41c:	b.ne	1f42c <printf_parse@@Base+0x201c>  // b.any
   1f420:	ldr	w0, [x19, #180]
   1f424:	cmp	w0, #0x1
   1f428:	cset	w0, gt
   1f42c:	ldrb	w1, [x2, #10]
   1f430:	mov	x3, #0xffffffffffffffff    	// #-1
   1f434:	bfi	w1, w0, #4, #1
   1f438:	strb	w1, [x2, #10]
   1f43c:	str	x3, [x22, x4, lsl #3]
   1f440:	ldr	x0, [x19, #16]
   1f444:	add	x0, x0, x0, lsl #1
   1f448:	add	x0, x21, x0, lsl #3
   1f44c:	stp	xzr, xzr, [x0]
   1f450:	str	xzr, [x0, #16]
   1f454:	ldr	x0, [x19, #16]
   1f458:	ldr	x1, [x19, #48]
   1f45c:	add	x0, x0, x0, lsl #1
   1f460:	add	x0, x1, x0, lsl #3
   1f464:	stp	xzr, xzr, [x0]
   1f468:	str	xzr, [x0, #16]
   1f46c:	ldr	x1, [x19, #16]
   1f470:	mov	x0, x1
   1f474:	add	x1, x1, #0x1
   1f478:	str	x1, [x19, #16]
   1f47c:	ldp	x19, x20, [sp, #16]
   1f480:	ldp	x21, x22, [sp, #32]
   1f484:	ldp	x23, x24, [sp, #48]
   1f488:	ldp	x25, x26, [sp, #64]
   1f48c:	ldp	x29, x30, [sp], #96
   1f490:	ret
   1f494:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1f498:	lsl	x23, x21, #1
   1f49c:	movk	x0, #0xaaa, lsl #48
   1f4a0:	cmp	x0, x21, lsl #1
   1f4a4:	b.cc	1f540 <printf_parse@@Base+0x2130>  // b.lo, b.ul, b.last
   1f4a8:	ldr	x0, [x19]
   1f4ac:	lsl	x1, x21, #5
   1f4b0:	bl	a7e0 <realloc@plt>
   1f4b4:	mov	x1, x0
   1f4b8:	cbz	x0, 1f540 <printf_parse@@Base+0x2130>
   1f4bc:	ldr	x0, [x19, #24]
   1f4c0:	str	x27, [sp, #80]
   1f4c4:	str	x1, [x19]
   1f4c8:	lsl	x26, x21, #4
   1f4cc:	mov	x1, x26
   1f4d0:	add	x21, x23, x21
   1f4d4:	bl	a7e0 <realloc@plt>
   1f4d8:	mov	x22, x0
   1f4dc:	ldr	x0, [x19, #32]
   1f4e0:	mov	x1, x26
   1f4e4:	lsl	x21, x21, #4
   1f4e8:	bl	a7e0 <realloc@plt>
   1f4ec:	mov	x26, x0
   1f4f0:	ldr	x0, [x19, #40]
   1f4f4:	mov	x1, x21
   1f4f8:	bl	a7e0 <realloc@plt>
   1f4fc:	mov	x1, x21
   1f500:	mov	x21, x0
   1f504:	ldr	x0, [x19, #48]
   1f508:	bl	a7e0 <realloc@plt>
   1f50c:	mov	x27, x0
   1f510:	cmp	x22, #0x0
   1f514:	ccmp	x26, #0x0, #0x4, ne  // ne = any
   1f518:	b.eq	1f548 <printf_parse@@Base+0x2138>  // b.none
   1f51c:	cmp	x21, #0x0
   1f520:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   1f524:	b.eq	1f548 <printf_parse@@Base+0x2138>  // b.none
   1f528:	str	x23, [x19, #8]
   1f52c:	stp	x22, x26, [x19, #24]
   1f530:	stp	x21, x0, [x19, #40]
   1f534:	ldr	x4, [x19, #16]
   1f538:	ldr	x27, [sp, #80]
   1f53c:	b	1f3f4 <printf_parse@@Base+0x1fe4>
   1f540:	mov	x0, #0xffffffffffffffff    	// #-1
   1f544:	b	1f47c <printf_parse@@Base+0x206c>
   1f548:	mov	x0, x22
   1f54c:	bl	aa50 <free@plt>
   1f550:	mov	x0, x26
   1f554:	bl	aa50 <free@plt>
   1f558:	mov	x0, x21
   1f55c:	bl	aa50 <free@plt>
   1f560:	mov	x0, x27
   1f564:	bl	aa50 <free@plt>
   1f568:	mov	x0, #0xffffffffffffffff    	// #-1
   1f56c:	ldr	x27, [sp, #80]
   1f570:	b	1f47c <printf_parse@@Base+0x206c>
   1f574:	nop
   1f578:	stp	x29, x30, [sp, #-48]!
   1f57c:	mov	x29, sp
   1f580:	stp	x19, x20, [sp, #16]
   1f584:	mov	x20, x1
   1f588:	mov	x19, x0
   1f58c:	stp	x21, x22, [sp, #32]
   1f590:	lsl	x21, x1, #4
   1f594:	mov	w22, w2
   1f598:	ldr	x1, [x0]
   1f59c:	add	x1, x1, x21
   1f5a0:	ldp	x2, x3, [x1]
   1f5a4:	mov	x1, x2
   1f5a8:	mov	x2, x3
   1f5ac:	bl	1f3b8 <printf_parse@@Base+0x1fa8>
   1f5b0:	cmn	x0, #0x1
   1f5b4:	b.eq	1f5fc <printf_parse@@Base+0x21ec>  // b.none
   1f5b8:	ldr	x3, [x19]
   1f5bc:	and	w1, w22, #0x3ff
   1f5c0:	add	x21, x3, x21
   1f5c4:	add	x3, x3, x0, lsl #4
   1f5c8:	ldr	w4, [x3, #8]
   1f5cc:	bfi	w4, w1, #8, #10
   1f5d0:	str	w4, [x3, #8]
   1f5d4:	and	w4, w4, #0xfff800ff
   1f5d8:	ldr	w2, [x21, #8]
   1f5dc:	ldr	x5, [x19, #32]
   1f5e0:	ubfx	x2, x2, #8, #10
   1f5e4:	orr	w2, w2, w1
   1f5e8:	lsl	w2, w2, #8
   1f5ec:	orr	w2, w2, #0x40000
   1f5f0:	orr	w2, w2, w4
   1f5f4:	str	w2, [x3, #8]
   1f5f8:	str	x20, [x5, x0, lsl #3]
   1f5fc:	ldp	x19, x20, [sp, #16]
   1f600:	ldp	x21, x22, [sp, #32]
   1f604:	ldp	x29, x30, [sp], #48
   1f608:	ret
   1f60c:	nop
   1f610:	stp	x29, x30, [sp, #-80]!
   1f614:	mov	x29, sp
   1f618:	stp	x19, x20, [sp, #16]
   1f61c:	mov	x20, x0
   1f620:	mov	x19, x2
   1f624:	stp	x21, x22, [sp, #32]
   1f628:	mov	x21, x1
   1f62c:	stp	x23, x24, [sp, #48]
   1f630:	mov	x24, x3
   1f634:	mov	w23, w4
   1f638:	stp	x25, x26, [sp, #64]
   1f63c:	mov	x22, x19
   1f640:	ldr	x4, [x20]
   1f644:	ldr	x0, [x20, #40]
   1f648:	add	x3, x4, x21, lsl #4
   1f64c:	ldrb	w1, [x3, #8]
   1f650:	cmp	w1, #0x4
   1f654:	b.eq	1f7cc <printf_parse@@Base+0x23bc>  // b.none
   1f658:	add	x25, x21, x21, lsl #1
   1f65c:	lsl	x25, x25, #3
   1f660:	add	x2, x0, x25
   1f664:	ldr	x1, [x2, #8]
   1f668:	cbz	x1, 1f880 <printf_parse@@Base+0x2470>
   1f66c:	ldr	x2, [x2, #16]
   1f670:	add	x22, x19, x19, lsl #1
   1f674:	cmp	x1, #0x1
   1f678:	lsl	x22, x22, #3
   1f67c:	add	x0, x0, x22
   1f680:	ldr	x26, [x2]
   1f684:	b.eq	1f75c <printf_parse@@Base+0x234c>  // b.none
   1f688:	ldr	x3, [x20, #16]
   1f68c:	sub	x1, x3, #0x1
   1f690:	add	x2, x4, x1, lsl #4
   1f694:	ldrb	w5, [x2, #10]
   1f698:	str	xzr, [x0, #8]
   1f69c:	tst	x5, #0x4
   1f6a0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1f6a4:	b.le	1f82c <printf_parse@@Base+0x241c>
   1f6a8:	add	x3, x4, x3, lsl #4
   1f6ac:	sub	x3, x3, x2
   1f6b0:	sub	x3, x3, #0x20
   1f6b4:	ldr	x5, [x20, #32]
   1f6b8:	b	1f6d4 <printf_parse@@Base+0x22c4>
   1f6bc:	add	x2, x2, x3
   1f6c0:	sub	x1, x1, #0x1
   1f6c4:	ldrb	w4, [x2, #10]
   1f6c8:	tst	x4, #0x4
   1f6cc:	ccmp	x1, #0x0, #0x4, ne  // ne = any
   1f6d0:	b.le	1f82c <printf_parse@@Base+0x241c>
   1f6d4:	ldr	x4, [x5, x1, lsl #3]
   1f6d8:	cmp	x4, x26
   1f6dc:	b.ne	1f6bc <printf_parse@@Base+0x22ac>  // b.any
   1f6e0:	ldr	w4, [x2, #8]
   1f6e4:	ubfx	x4, x4, #8, #10
   1f6e8:	cmp	w23, w4
   1f6ec:	b.ne	1f6bc <printf_parse@@Base+0x22ac>  // b.any
   1f6f0:	bl	1e670 <printf_parse@@Base+0x1260>
   1f6f4:	tst	w0, #0xff
   1f6f8:	b.eq	1f740 <printf_parse@@Base+0x2330>  // b.none
   1f6fc:	ldr	x1, [x20, #40]
   1f700:	mov	w2, w23
   1f704:	mov	x0, x20
   1f708:	add	x25, x1, x25
   1f70c:	ldr	x1, [x25, #16]
   1f710:	ldr	x21, [x1, #8]
   1f714:	mov	x1, x21
   1f718:	bl	1f578 <printf_parse@@Base+0x2168>
   1f71c:	mov	x19, x0
   1f720:	cmn	x0, #0x1
   1f724:	b.eq	1f740 <printf_parse@@Base+0x2330>  // b.none
   1f728:	mov	x1, x0
   1f72c:	ldr	x0, [x20, #40]
   1f730:	add	x0, x0, x22
   1f734:	bl	1e670 <printf_parse@@Base+0x1260>
   1f738:	tst	w0, #0xff
   1f73c:	b.ne	1f63c <printf_parse@@Base+0x222c>  // b.any
   1f740:	mov	w0, #0xc                   	// #12
   1f744:	ldp	x19, x20, [sp, #16]
   1f748:	ldp	x21, x22, [sp, #32]
   1f74c:	ldp	x23, x24, [sp, #48]
   1f750:	ldp	x25, x26, [sp, #64]
   1f754:	ldp	x29, x30, [sp], #80
   1f758:	ret
   1f75c:	str	xzr, [x0, #8]
   1f760:	cmp	x21, x24
   1f764:	ccmp	x21, x19, #0x4, eq  // eq = none
   1f768:	b.ne	1f894 <printf_parse@@Base+0x2484>  // b.any
   1f76c:	ldr	w2, [x3, #8]
   1f770:	mov	x1, x26
   1f774:	mov	x0, x20
   1f778:	ubfx	x2, x2, #8, #10
   1f77c:	orr	w23, w23, w2
   1f780:	mov	w2, w23
   1f784:	bl	1f578 <printf_parse@@Base+0x2168>
   1f788:	mov	x19, x0
   1f78c:	cmn	x0, #0x1
   1f790:	b.eq	1f740 <printf_parse@@Base+0x2330>  // b.none
   1f794:	mov	x1, x0
   1f798:	ldr	x0, [x20, #40]
   1f79c:	add	x0, x0, x22
   1f7a0:	bl	1e670 <printf_parse@@Base+0x1260>
   1f7a4:	tst	w0, #0xff
   1f7a8:	b.eq	1f740 <printf_parse@@Base+0x2330>  // b.none
   1f7ac:	ldr	x4, [x20]
   1f7b0:	mov	x21, x26
   1f7b4:	mov	x22, x19
   1f7b8:	ldr	x0, [x20, #40]
   1f7bc:	add	x3, x4, x21, lsl #4
   1f7c0:	ldrb	w1, [x3, #8]
   1f7c4:	cmp	w1, #0x4
   1f7c8:	b.ne	1f658 <printf_parse@@Base+0x2248>  // b.any
   1f7cc:	add	x19, x19, x19, lsl #1
   1f7d0:	lsl	x26, x21, #3
   1f7d4:	ldr	x3, [x20, #24]
   1f7d8:	lsl	x25, x19, #3
   1f7dc:	add	x1, x0, x25
   1f7e0:	mov	w2, w23
   1f7e4:	mov	x0, x20
   1f7e8:	ldr	x21, [x3, x21, lsl #3]
   1f7ec:	str	xzr, [x1, #8]
   1f7f0:	mov	x1, x21
   1f7f4:	bl	1f578 <printf_parse@@Base+0x2168>
   1f7f8:	mov	x19, x0
   1f7fc:	cmn	x0, #0x1
   1f800:	b.eq	1f740 <printf_parse@@Base+0x2330>  // b.none
   1f804:	ldr	x2, [x20, #24]
   1f808:	mov	x1, x0
   1f80c:	ldr	x0, [x20, #40]
   1f810:	ldr	x3, [x2, x26]
   1f814:	str	x3, [x2, x22, lsl #3]
   1f818:	add	x0, x0, x25
   1f81c:	bl	1e670 <printf_parse@@Base+0x1260>
   1f820:	tst	w0, #0xff
   1f824:	b.ne	1f63c <printf_parse@@Base+0x222c>  // b.any
   1f828:	b	1f740 <printf_parse@@Base+0x2330>
   1f82c:	mov	w2, w23
   1f830:	mov	x1, x26
   1f834:	mov	x0, x20
   1f838:	bl	1f578 <printf_parse@@Base+0x2168>
   1f83c:	mov	x19, x0
   1f840:	cmn	x0, #0x1
   1f844:	b.eq	1f740 <printf_parse@@Base+0x2330>  // b.none
   1f848:	ldr	x0, [x20, #40]
   1f84c:	mov	x1, x19
   1f850:	add	x0, x0, x22
   1f854:	bl	1e670 <printf_parse@@Base+0x1260>
   1f858:	tst	w0, #0xff
   1f85c:	b.eq	1f740 <printf_parse@@Base+0x2330>  // b.none
   1f860:	mov	x2, x19
   1f864:	mov	x1, x26
   1f868:	mov	w4, w23
   1f86c:	mov	x3, x24
   1f870:	mov	x0, x20
   1f874:	bl	1f610 <printf_parse@@Base+0x2200>
   1f878:	cbz	w0, 1f6fc <printf_parse@@Base+0x22ec>
   1f87c:	b	1f744 <printf_parse@@Base+0x2334>
   1f880:	ldr	x1, [x20, #24]
   1f884:	mov	w0, #0x0                   	// #0
   1f888:	ldr	x2, [x1, x21, lsl #3]
   1f88c:	str	x2, [x1, x19, lsl #3]
   1f890:	b	1f744 <printf_parse@@Base+0x2334>
   1f894:	mov	x1, x26
   1f898:	bl	1e670 <printf_parse@@Base+0x1260>
   1f89c:	tst	w0, #0xff
   1f8a0:	mov	w0, #0x0                   	// #0
   1f8a4:	b.ne	1f744 <printf_parse@@Base+0x2334>  // b.any
   1f8a8:	b	1f740 <printf_parse@@Base+0x2330>
   1f8ac:	nop
   1f8b0:	stp	x29, x30, [sp, #-32]!
   1f8b4:	mov	x29, sp
   1f8b8:	str	x19, [sp, #16]
   1f8bc:	mov	x19, x0
   1f8c0:	ldr	x0, [x0, #48]
   1f8c4:	bl	aa50 <free@plt>
   1f8c8:	ldr	x0, [x19, #72]
   1f8cc:	bl	aa50 <free@plt>
   1f8d0:	ldr	x0, [x19, #80]
   1f8d4:	add	x1, x19, #0x8
   1f8d8:	cmp	x0, x1
   1f8dc:	b.eq	1f8f0 <printf_parse@@Base+0x24e0>  // b.none
   1f8e0:	ldr	x0, [x0, #16]
   1f8e4:	bl	aa50 <free@plt>
   1f8e8:	ldr	x0, [x19, #80]
   1f8ec:	bl	aa50 <free@plt>
   1f8f0:	ldr	x0, [x19, #24]
   1f8f4:	bl	aa50 <free@plt>
   1f8f8:	ldr	x0, [x19, #96]
   1f8fc:	bl	aa50 <free@plt>
   1f900:	ldr	x0, [x19, #88]
   1f904:	bl	aa50 <free@plt>
   1f908:	mov	x0, x19
   1f90c:	ldr	x19, [sp, #16]
   1f910:	ldp	x29, x30, [sp], #32
   1f914:	b	aa50 <free@plt>
   1f918:	stp	x29, x30, [sp, #-32]!
   1f91c:	mov	x29, sp
   1f920:	str	x19, [sp, #16]
   1f924:	mov	x19, x0
   1f928:	ldr	x0, [x0, #16]
   1f92c:	bl	aa50 <free@plt>
   1f930:	ldr	x0, [x19, #24]
   1f934:	bl	aa50 <free@plt>
   1f938:	ldrb	w0, [x19, #139]
   1f93c:	cbnz	w0, 1f94c <printf_parse@@Base+0x253c>
   1f940:	ldr	x19, [sp, #16]
   1f944:	ldp	x29, x30, [sp], #32
   1f948:	ret
   1f94c:	ldr	x0, [x19, #8]
   1f950:	ldr	x19, [sp, #16]
   1f954:	ldp	x29, x30, [sp], #32
   1f958:	b	aa50 <free@plt>
   1f95c:	nop
   1f960:	stp	x29, x30, [sp, #-64]!
   1f964:	mov	x29, sp
   1f968:	stp	x21, x22, [sp, #32]
   1f96c:	mov	x21, x0
   1f970:	ldr	x0, [x0]
   1f974:	stp	x19, x20, [sp, #16]
   1f978:	str	x23, [sp, #48]
   1f97c:	cbz	x0, 1f9ac <printf_parse@@Base+0x259c>
   1f980:	ldr	x1, [x21, #16]
   1f984:	cbz	x1, 1f9ac <printf_parse@@Base+0x259c>
   1f988:	mov	x19, #0x0                   	// #0
   1f98c:	b	1f994 <printf_parse@@Base+0x2584>
   1f990:	ldr	x0, [x21]
   1f994:	add	x0, x0, x19, lsl #4
   1f998:	bl	1f368 <printf_parse@@Base+0x1f58>
   1f99c:	add	x19, x19, #0x1
   1f9a0:	ldr	x0, [x21, #16]
   1f9a4:	cmp	x0, x19
   1f9a8:	b.hi	1f990 <printf_parse@@Base+0x2580>  // b.pmore
   1f9ac:	ldr	x0, [x21, #24]
   1f9b0:	mov	x19, #0x0                   	// #0
   1f9b4:	mov	x20, #0x0                   	// #0
   1f9b8:	bl	aa50 <free@plt>
   1f9bc:	ldr	x0, [x21, #16]
   1f9c0:	cbz	x0, 1fa18 <printf_parse@@Base+0x2608>
   1f9c4:	nop
   1f9c8:	ldr	x0, [x21, #48]
   1f9cc:	add	x20, x20, #0x1
   1f9d0:	add	x1, x0, x19
   1f9d4:	cbz	x0, 1f9e0 <printf_parse@@Base+0x25d0>
   1f9d8:	ldr	x0, [x1, #16]
   1f9dc:	bl	aa50 <free@plt>
   1f9e0:	ldr	x0, [x21, #56]
   1f9e4:	add	x1, x0, x19
   1f9e8:	cbz	x0, 1f9f4 <printf_parse@@Base+0x25e4>
   1f9ec:	ldr	x0, [x1, #16]
   1f9f0:	bl	aa50 <free@plt>
   1f9f4:	ldr	x0, [x21, #40]
   1f9f8:	add	x1, x0, x19
   1f9fc:	add	x19, x19, #0x18
   1fa00:	cbz	x0, 1fa0c <printf_parse@@Base+0x25fc>
   1fa04:	ldr	x0, [x1, #16]
   1fa08:	bl	aa50 <free@plt>
   1fa0c:	ldr	x0, [x21, #16]
   1fa10:	cmp	x0, x20
   1fa14:	b.hi	1f9c8 <printf_parse@@Base+0x25b8>  // b.pmore
   1fa18:	ldr	x0, [x21, #40]
   1fa1c:	mov	x22, #0x0                   	// #0
   1fa20:	mov	x23, #0x0                   	// #0
   1fa24:	bl	aa50 <free@plt>
   1fa28:	ldr	x0, [x21, #48]
   1fa2c:	bl	aa50 <free@plt>
   1fa30:	ldr	x0, [x21, #56]
   1fa34:	bl	aa50 <free@plt>
   1fa38:	ldr	x0, [x21]
   1fa3c:	bl	aa50 <free@plt>
   1fa40:	ldr	x0, [x21, #64]
   1fa44:	cbz	x0, 1faa4 <printf_parse@@Base+0x2694>
   1fa48:	ldr	x1, [x0, x22]
   1fa4c:	add	x20, x0, x22
   1fa50:	mov	x19, #0x0                   	// #0
   1fa54:	cmp	x1, #0x0
   1fa58:	b.le	1fa7c <printf_parse@@Base+0x266c>
   1fa5c:	nop
   1fa60:	ldr	x1, [x20, #16]
   1fa64:	ldr	x0, [x1, x19, lsl #3]
   1fa68:	add	x19, x19, #0x1
   1fa6c:	bl	1f8b0 <printf_parse@@Base+0x24a0>
   1fa70:	ldr	x1, [x20]
   1fa74:	cmp	x1, x19
   1fa78:	b.gt	1fa60 <printf_parse@@Base+0x2650>
   1fa7c:	ldr	x0, [x20, #16]
   1fa80:	add	x23, x23, #0x1
   1fa84:	add	x22, x22, #0x18
   1fa88:	bl	aa50 <free@plt>
   1fa8c:	ldr	x0, [x21, #136]
   1fa90:	cmp	x0, x23
   1fa94:	b.cc	1faa0 <printf_parse@@Base+0x2690>  // b.lo, b.ul, b.last
   1fa98:	ldr	x0, [x21, #64]
   1fa9c:	b	1fa48 <printf_parse@@Base+0x2638>
   1faa0:	ldr	x0, [x21, #64]
   1faa4:	bl	aa50 <free@plt>
   1faa8:	ldr	x0, [x21, #120]
   1faac:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   1fab0:	add	x1, x1, #0x980
   1fab4:	cmp	x0, x1
   1fab8:	b.eq	1fac0 <printf_parse@@Base+0x26b0>  // b.none
   1fabc:	bl	aa50 <free@plt>
   1fac0:	ldr	x0, [x21, #224]
   1fac4:	bl	aa50 <free@plt>
   1fac8:	mov	x0, x21
   1facc:	ldp	x19, x20, [sp, #16]
   1fad0:	ldp	x21, x22, [sp, #32]
   1fad4:	ldr	x23, [sp, #48]
   1fad8:	ldp	x29, x30, [sp], #64
   1fadc:	b	aa50 <free@plt>
   1fae0:	stp	x29, x30, [sp, #-64]!
   1fae4:	mov	x29, sp
   1fae8:	str	x23, [sp, #48]
   1faec:	mov	x23, x0
   1faf0:	ldr	x0, [x0, #232]
   1faf4:	cmp	x0, #0x0
   1faf8:	b.le	1fb88 <printf_parse@@Base+0x2778>
   1fafc:	stp	x19, x20, [sp, #16]
   1fb00:	stp	x21, x22, [sp, #32]
   1fb04:	mov	x22, #0x0                   	// #0
   1fb08:	ldr	x0, [x23, #248]
   1fb0c:	ldr	x21, [x0, x22, lsl #3]
   1fb10:	ldr	x0, [x21, #32]
   1fb14:	cmp	x0, #0x0
   1fb18:	b.le	1fb48 <printf_parse@@Base+0x2738>
   1fb1c:	mov	x19, #0x0                   	// #0
   1fb20:	ldr	x1, [x21, #40]
   1fb24:	ldr	x20, [x1, x19, lsl #3]
   1fb28:	add	x19, x19, #0x1
   1fb2c:	ldr	x0, [x20, #32]
   1fb30:	bl	aa50 <free@plt>
   1fb34:	mov	x0, x20
   1fb38:	bl	aa50 <free@plt>
   1fb3c:	ldr	x1, [x21, #32]
   1fb40:	cmp	x1, x19
   1fb44:	b.gt	1fb20 <printf_parse@@Base+0x2710>
   1fb48:	ldr	x0, [x21, #40]
   1fb4c:	bl	aa50 <free@plt>
   1fb50:	ldr	x0, [x21, #16]
   1fb54:	cbz	x0, 1fb68 <printf_parse@@Base+0x2758>
   1fb58:	ldr	x0, [x0, #16]
   1fb5c:	bl	aa50 <free@plt>
   1fb60:	ldr	x0, [x21, #16]
   1fb64:	bl	aa50 <free@plt>
   1fb68:	mov	x0, x21
   1fb6c:	bl	aa50 <free@plt>
   1fb70:	ldr	x0, [x23, #232]
   1fb74:	add	x22, x22, #0x1
   1fb78:	cmp	x0, x22
   1fb7c:	b.gt	1fb08 <printf_parse@@Base+0x26f8>
   1fb80:	ldp	x19, x20, [sp, #16]
   1fb84:	ldp	x21, x22, [sp, #32]
   1fb88:	str	xzr, [x23, #200]
   1fb8c:	str	xzr, [x23, #232]
   1fb90:	ldr	x23, [sp, #48]
   1fb94:	ldp	x29, x30, [sp], #64
   1fb98:	ret
   1fb9c:	nop
   1fba0:	ldr	x3, [x0, #48]
   1fba4:	add	x1, x1, #0x1
   1fba8:	cmp	x1, x3
   1fbac:	b.ge	1fbdc <printf_parse@@Base+0x27cc>  // b.tcont
   1fbb0:	ldr	x4, [x0, #16]
   1fbb4:	mov	w0, #0x1                   	// #1
   1fbb8:	b	1fbc8 <printf_parse@@Base+0x27b8>
   1fbbc:	add	w0, w0, #0x1
   1fbc0:	cmp	x1, x3
   1fbc4:	b.eq	1fbd8 <printf_parse@@Base+0x27c8>  // b.none
   1fbc8:	ldr	w2, [x4, x1, lsl #2]
   1fbcc:	add	x1, x1, #0x1
   1fbd0:	cmn	w2, #0x1
   1fbd4:	b.eq	1fbbc <printf_parse@@Base+0x27ac>  // b.none
   1fbd8:	ret
   1fbdc:	mov	w0, #0x1                   	// #1
   1fbe0:	ret
   1fbe4:	nop
   1fbe8:	cmp	x0, #0x0
   1fbec:	b.le	1fc38 <printf_parse@@Base+0x2828>
   1fbf0:	sub	x3, x0, #0x1
   1fbf4:	mov	x0, #0x0                   	// #0
   1fbf8:	ldr	x5, [x1]
   1fbfc:	b	1fc14 <printf_parse@@Base+0x2804>
   1fc00:	lsr	x1, x1, #1
   1fc04:	ldr	x4, [x5, x1, lsl #3]
   1fc08:	cmp	x4, x2
   1fc0c:	b.lt	1fc30 <printf_parse@@Base+0x2820>  // b.tstop
   1fc10:	mov	x3, x1
   1fc14:	add	x1, x3, x0
   1fc18:	cmp	x3, x0
   1fc1c:	b.hi	1fc00 <printf_parse@@Base+0x27f0>  // b.pmore
   1fc20:	ldr	x1, [x5, x0, lsl #3]
   1fc24:	cmp	x2, x1
   1fc28:	csinc	x0, xzr, x0, ne  // ne = any
   1fc2c:	ret
   1fc30:	add	x0, x1, #0x1
   1fc34:	b	1fc14 <printf_parse@@Base+0x2804>
   1fc38:	mov	x0, #0x0                   	// #0
   1fc3c:	ret
   1fc40:	stp	x29, x30, [sp, #-64]!
   1fc44:	mov	x29, sp
   1fc48:	stp	x19, x20, [sp, #16]
   1fc4c:	mov	x20, x1
   1fc50:	mov	x19, x2
   1fc54:	stp	x21, x22, [sp, #32]
   1fc58:	mov	x21, x0
   1fc5c:	mov	w22, w4
   1fc60:	stp	x23, x24, [sp, #48]
   1fc64:	mov	x23, x3
   1fc68:	add	x24, x1, #0x10
   1fc6c:	ldr	x0, [x20, #8]
   1fc70:	mov	x2, x19
   1fc74:	mov	x1, x24
   1fc78:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   1fc7c:	mov	x3, x0
   1fc80:	lsl	x2, x19, #4
   1fc84:	mov	x1, x19
   1fc88:	mov	x0, x20
   1fc8c:	cbnz	x3, 1fd50 <printf_parse@@Base+0x2940>
   1fc90:	ldr	x3, [x21]
   1fc94:	add	x4, x3, x2
   1fc98:	ldrb	w4, [x4, #8]
   1fc9c:	cmp	w4, w22
   1fca0:	b.ne	1fcb0 <printf_parse@@Base+0x28a0>  // b.any
   1fca4:	ldr	x2, [x3, x2]
   1fca8:	cmp	x2, x23
   1fcac:	b.eq	1fd18 <printf_parse@@Base+0x2908>  // b.none
   1fcb0:	bl	1e670 <printf_parse@@Base+0x1260>
   1fcb4:	add	x19, x19, x19, lsl #1
   1fcb8:	tst	w0, #0xff
   1fcbc:	b.eq	1fd38 <printf_parse@@Base+0x2928>  // b.none
   1fcc0:	ldr	x2, [x21, #40]
   1fcc4:	lsl	x19, x19, #3
   1fcc8:	add	x2, x2, x19
   1fccc:	ldr	x0, [x2, #8]
   1fcd0:	cmp	x0, #0x2
   1fcd4:	cbz	x0, 1fd50 <printf_parse@@Base+0x2940>
   1fcd8:	ldr	x2, [x2, #16]
   1fcdc:	b.eq	1fce8 <printf_parse@@Base+0x28d8>  // b.none
   1fce0:	ldr	x19, [x2]
   1fce4:	b	1fc6c <printf_parse@@Base+0x285c>
   1fce8:	ldr	x2, [x2, #8]
   1fcec:	mov	w4, w22
   1fcf0:	mov	x3, x23
   1fcf4:	mov	x1, x20
   1fcf8:	mov	x0, x21
   1fcfc:	bl	1fc40 <printf_parse@@Base+0x2830>
   1fd00:	cbnz	w0, 1fd3c <printf_parse@@Base+0x292c>
   1fd04:	ldr	x0, [x21, #40]
   1fd08:	add	x19, x0, x19
   1fd0c:	ldr	x2, [x19, #16]
   1fd10:	ldr	x19, [x2]
   1fd14:	b	1fc6c <printf_parse@@Base+0x285c>
   1fd18:	cmp	w22, #0x9
   1fd1c:	b.ne	1fd50 <printf_parse@@Base+0x2940>  // b.any
   1fd20:	mov	x1, x19
   1fd24:	mov	x0, x20
   1fd28:	bl	1e670 <printf_parse@@Base+0x1260>
   1fd2c:	tst	w0, #0xff
   1fd30:	b.ne	1fd50 <printf_parse@@Base+0x2940>  // b.any
   1fd34:	nop
   1fd38:	mov	w0, #0xc                   	// #12
   1fd3c:	ldp	x19, x20, [sp, #16]
   1fd40:	ldp	x21, x22, [sp, #32]
   1fd44:	ldp	x23, x24, [sp, #48]
   1fd48:	ldp	x29, x30, [sp], #64
   1fd4c:	ret
   1fd50:	mov	w0, #0x0                   	// #0
   1fd54:	ldp	x19, x20, [sp, #16]
   1fd58:	ldp	x21, x22, [sp, #32]
   1fd5c:	ldp	x23, x24, [sp, #48]
   1fd60:	ldp	x29, x30, [sp], #64
   1fd64:	ret
   1fd68:	ldr	x3, [x0]
   1fd6c:	cmp	x2, x3
   1fd70:	b.ge	1fd98 <printf_parse@@Base+0x2988>  // b.tcont
   1fd74:	ldr	x3, [x1]
   1fd78:	add	x4, x3, #0x8
   1fd7c:	nop
   1fd80:	ldr	x1, [x4, x2, lsl #3]
   1fd84:	str	x1, [x3, x2, lsl #3]
   1fd88:	add	x2, x2, #0x1
   1fd8c:	ldr	x1, [x0]
   1fd90:	cmp	x2, x1
   1fd94:	b.lt	1fd80 <printf_parse@@Base+0x2970>  // b.tstop
   1fd98:	ret
   1fd9c:	nop
   1fda0:	ldrb	w2, [x1, #48]
   1fda4:	cmp	w2, #0x4
   1fda8:	b.eq	1fe14 <printf_parse@@Base+0x2a04>  // b.none
   1fdac:	cmp	w2, #0x11
   1fdb0:	b.eq	1fdbc <printf_parse@@Base+0x29ac>  // b.none
   1fdb4:	mov	w0, #0x0                   	// #0
   1fdb8:	ret
   1fdbc:	ldr	x2, [x1, #8]
   1fdc0:	cbz	x2, 1fdb4 <printf_parse@@Base+0x29a4>
   1fdc4:	ldrb	w3, [x2, #48]
   1fdc8:	cmp	w3, #0x11
   1fdcc:	b.ne	1fdb4 <printf_parse@@Base+0x29a4>  // b.any
   1fdd0:	ldr	x3, [x2, #8]
   1fdd4:	ldr	x2, [x2, #40]
   1fdd8:	str	x3, [x1, #8]
   1fddc:	cbz	x3, 1fde4 <printf_parse@@Base+0x29d4>
   1fde0:	str	x1, [x3]
   1fde4:	ldr	x3, [x1, #40]
   1fde8:	cmp	x2, #0x3f
   1fdec:	ldr	x1, [x0, #224]
   1fdf0:	ldr	x3, [x1, x3, lsl #3]
   1fdf4:	str	x3, [x1, x2, lsl #3]
   1fdf8:	b.gt	1fdb4 <printf_parse@@Base+0x29a4>
   1fdfc:	ldr	x3, [x0, #160]
   1fe00:	mov	x1, #0x1                   	// #1
   1fe04:	lsl	x1, x1, x2
   1fe08:	bic	x1, x3, x1
   1fe0c:	str	x1, [x0, #160]
   1fe10:	b	1fdb4 <printf_parse@@Base+0x29a4>
   1fe14:	ldr	x4, [x0, #224]
   1fe18:	cbz	x4, 1fdb4 <printf_parse@@Base+0x29a4>
   1fe1c:	ldrsw	x5, [x1, #40]
   1fe20:	mov	w2, #0x1                   	// #1
   1fe24:	ldr	x3, [x0, #160]
   1fe28:	ldr	x4, [x4, x5, lsl #3]
   1fe2c:	str	x4, [x1, #40]
   1fe30:	lsl	w1, w2, w4
   1fe34:	sxtw	x1, w1
   1fe38:	orr	x1, x3, x1
   1fe3c:	str	x1, [x0, #160]
   1fe40:	mov	w0, #0x0                   	// #0
   1fe44:	ret
   1fe48:	ldrb	w0, [x1, #48]
   1fe4c:	ldr	x2, [x1, #8]
   1fe50:	cmp	w0, #0xb
   1fe54:	b.eq	1fe84 <printf_parse@@Base+0x2a74>  // b.none
   1fe58:	cmp	w0, #0x10
   1fe5c:	b.eq	1fe90 <printf_parse@@Base+0x2a80>  // b.none
   1fe60:	cbz	x2, 1fe6c <printf_parse@@Base+0x2a5c>
   1fe64:	ldr	x0, [x1, #32]
   1fe68:	str	x0, [x2, #32]
   1fe6c:	ldr	x0, [x1, #16]
   1fe70:	cbz	x0, 1fe7c <printf_parse@@Base+0x2a6c>
   1fe74:	ldr	x1, [x1, #32]
   1fe78:	str	x1, [x0, #32]
   1fe7c:	mov	w0, #0x0                   	// #0
   1fe80:	ret
   1fe84:	mov	w0, #0x0                   	// #0
   1fe88:	str	x1, [x2, #32]
   1fe8c:	ret
   1fe90:	ldr	x0, [x1, #16]
   1fe94:	ldr	x3, [x0, #24]
   1fe98:	str	x3, [x2, #32]
   1fe9c:	ldr	x1, [x1, #32]
   1fea0:	str	x1, [x0, #32]
   1fea4:	mov	w0, #0x0                   	// #0
   1fea8:	ret
   1feac:	nop
   1feb0:	stp	x29, x30, [sp, #-64]!
   1feb4:	mov	x10, x0
   1feb8:	mov	x15, x4
   1febc:	mov	x29, sp
   1fec0:	ldr	x12, [x0, #200]
   1fec4:	mov	x18, x5
   1fec8:	mov	x11, #0x0                   	// #0
   1fecc:	stp	x19, x20, [sp, #16]
   1fed0:	mov	x9, x12
   1fed4:	mov	x20, x2
   1fed8:	mov	x19, x6
   1fedc:	stp	x21, x22, [sp, #32]
   1fee0:	mov	x21, x1
   1fee4:	mov	x22, x3
   1fee8:	stp	x23, x24, [sp, #48]
   1feec:	ldr	x23, [x0, #152]
   1fef0:	b	1ff14 <printf_parse@@Base+0x2b04>
   1fef4:	asr	x7, x7, #1
   1fef8:	ldr	x0, [x10, #216]
   1fefc:	add	x8, x7, x7, lsl #2
   1ff00:	add	x8, x0, x8, lsl #3
   1ff04:	ldr	x0, [x8, #8]
   1ff08:	cmp	x0, x15
   1ff0c:	b.lt	20024 <printf_parse@@Base+0x2c14>  // b.tstop
   1ff10:	mov	x9, x7
   1ff14:	add	x7, x9, x11
   1ff18:	cmp	x9, x11
   1ff1c:	b.gt	1fef4 <printf_parse@@Base+0x2ae4>
   1ff20:	cmp	x12, x11
   1ff24:	b.le	2004c <printf_parse@@Base+0x2c3c>
   1ff28:	ldr	x1, [x10, #216]
   1ff2c:	add	x0, x11, x11, lsl #2
   1ff30:	add	x0, x1, x0, lsl #3
   1ff34:	ldr	x0, [x0, #8]
   1ff38:	cmp	x15, x0
   1ff3c:	csinv	x11, x11, xzr, eq  // eq = none
   1ff40:	mov	x9, x12
   1ff44:	mov	x14, #0x0                   	// #0
   1ff48:	b	1ff6c <printf_parse@@Base+0x2b5c>
   1ff4c:	asr	x7, x7, #1
   1ff50:	ldr	x0, [x10, #216]
   1ff54:	add	x8, x7, x7, lsl #2
   1ff58:	add	x8, x0, x8, lsl #3
   1ff5c:	ldr	x0, [x8, #8]
   1ff60:	cmp	x0, x19
   1ff64:	b.lt	2002c <printf_parse@@Base+0x2c1c>  // b.tstop
   1ff68:	mov	x9, x7
   1ff6c:	add	x7, x9, x14
   1ff70:	cmp	x9, x14
   1ff74:	b.gt	1ff4c <printf_parse@@Base+0x2b3c>
   1ff78:	cmp	x12, x14
   1ff7c:	b.le	20054 <printf_parse@@Base+0x2c44>
   1ff80:	ldr	x1, [x10, #216]
   1ff84:	add	x0, x14, x14, lsl #2
   1ff88:	add	x0, x1, x0, lsl #3
   1ff8c:	ldr	x0, [x0, #8]
   1ff90:	cmp	x19, x0
   1ff94:	csinv	x14, x14, xzr, eq  // eq = none
   1ff98:	ldr	x0, [x21]
   1ff9c:	cmp	x0, #0x0
   1ffa0:	b.le	20044 <printf_parse@@Base+0x2c34>
   1ffa4:	mov	x24, #0x0                   	// #0
   1ffa8:	ldr	x0, [x20]
   1ffac:	mov	x5, x11
   1ffb0:	ldr	x7, [x10, #216]
   1ffb4:	mov	x4, x15
   1ffb8:	ldr	x1, [x0, x24, lsl #3]
   1ffbc:	mov	x3, x22
   1ffc0:	ldr	x6, [x23]
   1ffc4:	mov	x0, x10
   1ffc8:	add	x2, x1, x1, lsl #2
   1ffcc:	ldr	x2, [x7, x2, lsl #3]
   1ffd0:	lsl	x2, x2, #4
   1ffd4:	ldr	x8, [x6, x2]
   1ffd8:	mov	x2, x8
   1ffdc:	bl	1e3c8 <printf_parse@@Base+0xfb8>
   1ffe0:	mov	x2, x8
   1ffe4:	ldr	x1, [x20]
   1ffe8:	mov	w8, w0
   1ffec:	mov	x5, x14
   1fff0:	mov	x4, x19
   1fff4:	mov	x3, x18
   1fff8:	mov	x0, x10
   1fffc:	ldr	x1, [x1, x24, lsl #3]
   20000:	bl	1e3c8 <printf_parse@@Base+0xfb8>
   20004:	cmp	w8, w0
   20008:	b.eq	20034 <printf_parse@@Base+0x2c24>  // b.none
   2000c:	mov	w0, #0x1                   	// #1
   20010:	ldp	x19, x20, [sp, #16]
   20014:	ldp	x21, x22, [sp, #32]
   20018:	ldp	x23, x24, [sp, #48]
   2001c:	ldp	x29, x30, [sp], #64
   20020:	ret
   20024:	add	x11, x7, #0x1
   20028:	b	1ff14 <printf_parse@@Base+0x2b04>
   2002c:	add	x14, x7, #0x1
   20030:	b	1ff6c <printf_parse@@Base+0x2b5c>
   20034:	ldr	x0, [x21]
   20038:	add	x24, x24, #0x1
   2003c:	cmp	x24, x0
   20040:	b.lt	1ffa8 <printf_parse@@Base+0x2b98>  // b.tstop
   20044:	mov	w0, #0x0                   	// #0
   20048:	b	20010 <printf_parse@@Base+0x2c00>
   2004c:	mov	x11, #0xffffffffffffffff    	// #-1
   20050:	b	1ff40 <printf_parse@@Base+0x2b30>
   20054:	mov	x14, #0xffffffffffffffff    	// #-1
   20058:	b	1ff98 <printf_parse@@Base+0x2b88>
   2005c:	nop
   20060:	stp	x29, x30, [sp, #-64]!
   20064:	mov	x29, sp
   20068:	ldr	w5, [x1]
   2006c:	stp	x19, x20, [sp, #16]
   20070:	mov	x20, x2
   20074:	mov	x19, x3
   20078:	stp	x21, x22, [sp, #32]
   2007c:	cmp	w5, #0xf
   20080:	mov	x21, x1
   20084:	mov	x22, x0
   20088:	b.eq	20100 <printf_parse@@Base+0x2cf0>  // b.none
   2008c:	mov	x6, #0x8                   	// #8
   20090:	mov	w0, #0x40                  	// #64
   20094:	add	w1, w5, #0x1
   20098:	smaddl	x0, w5, w0, x6
   2009c:	ldr	x6, [x22]
   200a0:	sbfiz	x5, x5, #6, #32
   200a4:	str	w1, [x21]
   200a8:	add	x1, x6, x5
   200ac:	add	x5, x5, #0x20
   200b0:	add	x0, x6, x0
   200b4:	add	x5, x6, x5
   200b8:	mov	x3, #0xffffffffffffffff    	// #-1
   200bc:	stp	xzr, x20, [x1, #8]
   200c0:	str	x19, [x1, #24]
   200c4:	ldp	x6, x7, [x4]
   200c8:	stp	x6, x7, [x1, #48]
   200cc:	ldrb	w2, [x5, #26]
   200d0:	and	w2, w2, #0xfffffff3
   200d4:	strb	w2, [x5, #26]
   200d8:	stp	xzr, xzr, [x1, #32]
   200dc:	str	x3, [x1, #64]
   200e0:	cbz	x20, 200e8 <printf_parse@@Base+0x2cd8>
   200e4:	str	x0, [x20]
   200e8:	cbz	x19, 200f0 <printf_parse@@Base+0x2ce0>
   200ec:	str	x0, [x19]
   200f0:	ldp	x19, x20, [sp, #16]
   200f4:	ldp	x21, x22, [sp, #32]
   200f8:	ldp	x29, x30, [sp], #64
   200fc:	ret
   20100:	mov	x0, #0x3c8                 	// #968
   20104:	str	x4, [sp, #56]
   20108:	bl	a5f0 <malloc@plt>
   2010c:	mov	x6, x0
   20110:	cbz	x0, 20134 <printf_parse@@Base+0x2d24>
   20114:	ldr	x2, [x22]
   20118:	mov	x0, #0x8                   	// #8
   2011c:	mov	w1, #0x1                   	// #1
   20120:	mov	w5, #0x0                   	// #0
   20124:	str	x2, [x6]
   20128:	str	x6, [x22]
   2012c:	ldr	x4, [sp, #56]
   20130:	b	200a0 <printf_parse@@Base+0x2c90>
   20134:	mov	x0, #0x0                   	// #0
   20138:	b	200f0 <printf_parse@@Base+0x2ce0>
   2013c:	nop
   20140:	stp	x29, x30, [sp, #-80]!
   20144:	mov	x29, sp
   20148:	stp	x19, x20, [sp, #16]
   2014c:	mov	x19, x0
   20150:	stp	x21, x22, [sp, #32]
   20154:	add	x21, x1, #0x70
   20158:	add	x22, x1, #0x80
   2015c:	ldr	x20, [x0]
   20160:	str	x23, [sp, #48]
   20164:	add	x23, sp, #0x48
   20168:	b	20174 <printf_parse@@Base+0x2d64>
   2016c:	mov	x19, x0
   20170:	add	x23, x20, #0x8
   20174:	add	x4, x19, #0x28
   20178:	mov	x1, x22
   2017c:	mov	x0, x21
   20180:	mov	x3, #0x0                   	// #0
   20184:	mov	x2, #0x0                   	// #0
   20188:	bl	20060 <printf_parse@@Base+0x2c50>
   2018c:	str	x0, [x23]
   20190:	cbz	x0, 201d8 <printf_parse@@Base+0x2dc8>
   20194:	str	x20, [x0]
   20198:	ldr	x20, [x23]
   2019c:	ldrb	w0, [x20, #50]
   201a0:	orr	w0, w0, #0x4
   201a4:	strb	w0, [x20, #50]
   201a8:	ldr	x0, [x19, #8]
   201ac:	cbnz	x0, 2016c <printf_parse@@Base+0x2d5c>
   201b0:	ldr	x2, [x19, #16]
   201b4:	cmp	x2, #0x0
   201b8:	ccmp	x2, x0, #0x4, ne  // ne = any
   201bc:	b.ne	201ec <printf_parse@@Base+0x2ddc>  // b.any
   201c0:	ldr	x2, [x19]
   201c4:	mov	x0, x19
   201c8:	ldr	x20, [x20]
   201cc:	mov	x19, x2
   201d0:	cbnz	x2, 201b0 <printf_parse@@Base+0x2da0>
   201d4:	ldr	x0, [sp, #72]
   201d8:	ldp	x19, x20, [sp, #16]
   201dc:	ldp	x21, x22, [sp, #32]
   201e0:	ldr	x23, [sp, #48]
   201e4:	ldp	x29, x30, [sp], #80
   201e8:	ret
   201ec:	mov	x19, x2
   201f0:	add	x23, x20, #0x10
   201f4:	b	20174 <printf_parse@@Base+0x2d64>
   201f8:	stp	x29, x30, [sp, #-112]!
   201fc:	mov	x29, sp
   20200:	stp	x23, x24, [sp, #48]
   20204:	mov	x24, x0
   20208:	ldrb	w0, [x1, #56]
   2020c:	stp	x19, x20, [sp, #16]
   20210:	stp	x21, x22, [sp, #32]
   20214:	mov	x21, x2
   20218:	stp	x25, x26, [sp, #64]
   2021c:	ldr	x20, [x1]
   20220:	ldr	x19, [x2, #8]
   20224:	str	x27, [sp, #80]
   20228:	tbz	w0, #4, 203a4 <printf_parse@@Base+0x2f94>
   2022c:	cbz	x19, 20348 <printf_parse@@Base+0x2f38>
   20230:	ldr	x0, [x2, #40]
   20234:	cmp	x0, #0x3f
   20238:	b.gt	20328 <printf_parse@@Base+0x2f18>
   2023c:	ldr	x1, [x20, #160]
   20240:	lsr	x0, x1, x0
   20244:	tbz	w0, #0, 20328 <printf_parse@@Base+0x2f18>
   20248:	mov	w5, #0x8                   	// #8
   2024c:	add	x26, x20, #0x70
   20250:	add	x27, sp, #0x60
   20254:	add	x20, x20, #0x80
   20258:	mov	x1, x20
   2025c:	mov	x4, x27
   20260:	mov	x3, #0x0                   	// #0
   20264:	mov	x2, #0x0                   	// #0
   20268:	mov	x0, x26
   2026c:	strb	w5, [sp, #104]
   20270:	bl	20060 <printf_parse@@Base+0x2c50>
   20274:	mov	x22, x0
   20278:	mov	w5, #0x9                   	// #9
   2027c:	mov	x4, x27
   20280:	mov	x1, x20
   20284:	mov	x0, x26
   20288:	mov	x3, #0x0                   	// #0
   2028c:	mov	x2, #0x0                   	// #0
   20290:	strb	w5, [sp, #104]
   20294:	bl	20060 <printf_parse@@Base+0x2c50>
   20298:	mov	x23, x0
   2029c:	mov	w5, #0x10                  	// #16
   202a0:	mov	x2, x19
   202a4:	mov	x4, x27
   202a8:	mov	x3, x23
   202ac:	mov	x1, x20
   202b0:	mov	x0, x26
   202b4:	strb	w5, [sp, #104]
   202b8:	bl	20060 <printf_parse@@Base+0x2c50>
   202bc:	mov	x25, x0
   202c0:	mov	w5, #0x10                  	// #16
   202c4:	mov	x4, x27
   202c8:	mov	x1, x20
   202cc:	mov	x0, x26
   202d0:	mov	x3, x25
   202d4:	mov	x2, x22
   202d8:	strb	w5, [sp, #104]
   202dc:	bl	20060 <printf_parse@@Base+0x2c50>
   202e0:	cmp	x0, #0x0
   202e4:	mov	x19, x0
   202e8:	ccmp	x25, #0x0, #0x4, ne  // ne = any
   202ec:	b.eq	20404 <printf_parse@@Base+0x2ff4>  // b.none
   202f0:	cmp	x22, #0x0
   202f4:	ccmp	x23, #0x0, #0x4, ne  // ne = any
   202f8:	b.eq	20404 <printf_parse@@Base+0x2ff4>  // b.none
   202fc:	ldr	x0, [x21, #40]
   20300:	str	x0, [x23, #40]
   20304:	str	x0, [x22, #40]
   20308:	ldrb	w0, [x21, #50]
   2030c:	ldrb	w1, [x23, #50]
   20310:	ubfx	x0, x0, #3, #1
   20314:	bfi	w1, w0, #3, #1
   20318:	strb	w1, [x23, #50]
   2031c:	ldrb	w1, [x22, #50]
   20320:	bfi	w1, w0, #3, #1
   20324:	strb	w1, [x22, #50]
   20328:	mov	x0, x19
   2032c:	ldp	x19, x20, [sp, #16]
   20330:	ldp	x21, x22, [sp, #32]
   20334:	ldp	x23, x24, [sp, #48]
   20338:	ldp	x25, x26, [sp, #64]
   2033c:	ldr	x27, [sp, #80]
   20340:	ldp	x29, x30, [sp], #112
   20344:	ret
   20348:	mov	w5, #0x8                   	// #8
   2034c:	add	x26, x20, #0x70
   20350:	add	x27, sp, #0x60
   20354:	add	x20, x20, #0x80
   20358:	mov	x1, x20
   2035c:	mov	x4, x27
   20360:	mov	x3, #0x0                   	// #0
   20364:	mov	x2, #0x0                   	// #0
   20368:	mov	x0, x26
   2036c:	strb	w5, [sp, #104]
   20370:	bl	20060 <printf_parse@@Base+0x2c50>
   20374:	mov	x22, x0
   20378:	mov	w5, #0x9                   	// #9
   2037c:	mov	x4, x27
   20380:	mov	x1, x20
   20384:	mov	x0, x26
   20388:	mov	x3, #0x0                   	// #0
   2038c:	mov	x2, #0x0                   	// #0
   20390:	strb	w5, [sp, #104]
   20394:	bl	20060 <printf_parse@@Base+0x2c50>
   20398:	mov	x25, x0
   2039c:	mov	x23, x0
   203a0:	b	202c0 <printf_parse@@Base+0x2eb0>
   203a4:	mov	w5, #0x8                   	// #8
   203a8:	add	x26, x20, #0x70
   203ac:	add	x27, sp, #0x60
   203b0:	add	x20, x20, #0x80
   203b4:	mov	x1, x20
   203b8:	mov	x4, x27
   203bc:	mov	x3, #0x0                   	// #0
   203c0:	mov	x2, #0x0                   	// #0
   203c4:	mov	x0, x26
   203c8:	strb	w5, [sp, #104]
   203cc:	bl	20060 <printf_parse@@Base+0x2c50>
   203d0:	mov	x22, x0
   203d4:	mov	w5, #0x9                   	// #9
   203d8:	mov	x4, x27
   203dc:	mov	x1, x20
   203e0:	mov	x0, x26
   203e4:	mov	x3, #0x0                   	// #0
   203e8:	mov	x2, #0x0                   	// #0
   203ec:	strb	w5, [sp, #104]
   203f0:	bl	20060 <printf_parse@@Base+0x2c50>
   203f4:	mov	x23, x0
   203f8:	mov	x25, x0
   203fc:	cbnz	x19, 2029c <printf_parse@@Base+0x2e8c>
   20400:	b	202c0 <printf_parse@@Base+0x2eb0>
   20404:	mov	w0, #0xc                   	// #12
   20408:	str	w0, [x24]
   2040c:	mov	x19, #0x0                   	// #0
   20410:	mov	x0, x19
   20414:	ldp	x19, x20, [sp, #16]
   20418:	ldp	x21, x22, [sp, #32]
   2041c:	ldp	x23, x24, [sp, #48]
   20420:	ldp	x25, x26, [sp, #64]
   20424:	ldr	x27, [sp, #80]
   20428:	ldp	x29, x30, [sp], #112
   2042c:	ret
   20430:	stp	x29, x30, [sp, #-48]!
   20434:	mov	x29, sp
   20438:	ldr	x2, [x1, #8]
   2043c:	stp	x19, x20, [sp, #16]
   20440:	mov	x19, x1
   20444:	str	wzr, [sp, #44]
   20448:	mov	x20, x0
   2044c:	cbz	x2, 2045c <printf_parse@@Base+0x304c>
   20450:	ldrb	w0, [x2, #48]
   20454:	cmp	w0, #0x11
   20458:	b.eq	20480 <printf_parse@@Base+0x3070>  // b.none
   2045c:	ldr	x2, [x19, #16]
   20460:	cbz	x2, 20470 <printf_parse@@Base+0x3060>
   20464:	ldrb	w0, [x2, #48]
   20468:	cmp	w0, #0x11
   2046c:	b.eq	2049c <printf_parse@@Base+0x308c>  // b.none
   20470:	ldr	w0, [sp, #44]
   20474:	ldp	x19, x20, [sp, #16]
   20478:	ldp	x29, x30, [sp], #48
   2047c:	ret
   20480:	mov	x1, x20
   20484:	add	x0, sp, #0x2c
   20488:	bl	201f8 <printf_parse@@Base+0x2de8>
   2048c:	str	x0, [x19, #8]
   20490:	cbz	x0, 2045c <printf_parse@@Base+0x304c>
   20494:	str	x19, [x0]
   20498:	b	2045c <printf_parse@@Base+0x304c>
   2049c:	mov	x1, x20
   204a0:	add	x0, sp, #0x2c
   204a4:	bl	201f8 <printf_parse@@Base+0x2de8>
   204a8:	str	x0, [x19, #16]
   204ac:	cbz	x0, 20470 <printf_parse@@Base+0x3060>
   204b0:	str	x19, [x0]
   204b4:	b	20470 <printf_parse@@Base+0x3060>
   204b8:	stp	x29, x30, [sp, #-96]!
   204bc:	mov	x29, sp
   204c0:	stp	x21, x22, [sp, #32]
   204c4:	mov	x22, x2
   204c8:	ldr	x2, [x1]
   204cc:	ldr	x21, [x0, #152]
   204d0:	cmp	x2, #0x0
   204d4:	b.le	2058c <printf_parse@@Base+0x317c>
   204d8:	stp	x19, x20, [sp, #16]
   204dc:	mov	x19, #0x0                   	// #0
   204e0:	stp	x23, x24, [sp, #48]
   204e4:	mov	x24, x0
   204e8:	mov	x23, x3
   204ec:	stp	x25, x26, [sp, #64]
   204f0:	mov	x25, x1
   204f4:	b	20500 <printf_parse@@Base+0x30f0>
   204f8:	cmp	x19, x2
   204fc:	b.ge	20580 <printf_parse@@Base+0x3170>  // b.tcont
   20500:	ldr	x4, [x22]
   20504:	ldr	x5, [x21]
   20508:	ldr	x20, [x4, x19, lsl #3]
   2050c:	add	x19, x19, #0x1
   20510:	lsl	x4, x20, #4
   20514:	add	x6, x5, x4
   20518:	ldrb	w6, [x6, #8]
   2051c:	cmp	w6, #0x8
   20520:	b.ne	204f8 <printf_parse@@Base+0x30e8>  // b.any
   20524:	ldr	x3, [x5, x4]
   20528:	cmp	x3, #0x3f
   2052c:	b.gt	204f8 <printf_parse@@Base+0x30e8>
   20530:	ldr	x4, [x21, #160]
   20534:	lsr	x3, x4, x3
   20538:	tbz	w3, #0, 204f8 <printf_parse@@Base+0x30e8>
   2053c:	ldp	x26, x0, [x24, #232]
   20540:	str	x27, [sp, #80]
   20544:	ldr	x27, [x24, #248]
   20548:	cmp	x26, x0
   2054c:	b.eq	205b4 <printf_parse@@Base+0x31a4>  // b.none
   20550:	mov	x1, #0x30                  	// #48
   20554:	mov	x0, #0x1                   	// #1
   20558:	bl	a770 <calloc@plt>
   2055c:	str	x0, [x27, x26, lsl #3]
   20560:	add	x1, x26, #0x1
   20564:	cbz	x0, 2059c <printf_parse@@Base+0x318c>
   20568:	ldr	x27, [sp, #80]
   2056c:	str	x1, [x24, #232]
   20570:	stp	x23, x20, [x0]
   20574:	ldr	x2, [x25]
   20578:	cmp	x19, x2
   2057c:	b.lt	20500 <printf_parse@@Base+0x30f0>  // b.tstop
   20580:	ldp	x19, x20, [sp, #16]
   20584:	ldp	x23, x24, [sp, #48]
   20588:	ldp	x25, x26, [sp, #64]
   2058c:	mov	w0, #0x0                   	// #0
   20590:	ldp	x21, x22, [sp, #32]
   20594:	ldp	x29, x30, [sp], #96
   20598:	ret
   2059c:	mov	w0, #0xc                   	// #12
   205a0:	ldp	x19, x20, [sp, #16]
   205a4:	ldp	x23, x24, [sp, #48]
   205a8:	ldp	x25, x26, [sp, #64]
   205ac:	ldr	x27, [sp, #80]
   205b0:	b	20590 <printf_parse@@Base+0x3180>
   205b4:	mov	x0, x27
   205b8:	lsl	x1, x26, #4
   205bc:	bl	a7e0 <realloc@plt>
   205c0:	mov	x27, x0
   205c4:	lsl	x0, x26, #1
   205c8:	cbz	x27, 2059c <printf_parse@@Base+0x318c>
   205cc:	stp	x0, x27, [x24, #240]
   205d0:	ldr	x26, [x24, #232]
   205d4:	b	20550 <printf_parse@@Base+0x3140>
   205d8:	cbz	x1, 2076c <printf_parse@@Base+0x335c>
   205dc:	stp	x29, x30, [sp, #-48]!
   205e0:	mov	x29, sp
   205e4:	stp	x19, x20, [sp, #16]
   205e8:	ldr	x19, [x1, #8]
   205ec:	stp	x21, x22, [sp, #32]
   205f0:	mov	x21, x1
   205f4:	cbz	x19, 206dc <printf_parse@@Base+0x32cc>
   205f8:	ldp	x2, x1, [x0]
   205fc:	mov	x20, x0
   20600:	add	x0, x1, x19, lsl #1
   20604:	cmp	x2, x0
   20608:	b.lt	20724 <printf_parse@@Base+0x3314>  // b.tstop
   2060c:	cbz	x1, 20750 <printf_parse@@Base+0x3340>
   20610:	subs	x2, x19, #0x1
   20614:	sub	x3, x1, #0x1
   20618:	add	x19, x1, x19, lsl #1
   2061c:	ccmp	x3, #0x0, #0x1, pl  // pl = nfrst
   20620:	b.lt	20670 <printf_parse@@Base+0x3260>  // b.tstop
   20624:	ldr	x0, [x20, #16]
   20628:	ldr	x1, [x21, #16]
   2062c:	b	2064c <printf_parse@@Base+0x323c>
   20630:	b.ge	206f0 <printf_parse@@Base+0x32e0>  // b.tcont
   20634:	sub	x19, x19, #0x1
   20638:	sub	x2, x2, #0x1
   2063c:	str	x4, [x0, x19, lsl #3]
   20640:	cmp	x2, #0x0
   20644:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
   20648:	b.lt	20670 <printf_parse@@Base+0x3260>  // b.tstop
   2064c:	ldr	x5, [x0, x3, lsl #3]
   20650:	ldr	x4, [x1, x2, lsl #3]
   20654:	cmp	x5, x4
   20658:	b.ne	20630 <printf_parse@@Base+0x3220>  // b.any
   2065c:	sub	x2, x2, #0x1
   20660:	sub	x3, x3, #0x1
   20664:	cmp	x2, #0x0
   20668:	ccmp	x3, #0x0, #0x1, ge  // ge = tcont
   2066c:	b.ge	2064c <printf_parse@@Base+0x323c>  // b.tcont
   20670:	tbnz	x2, #63, 20690 <printf_parse@@Base+0x3280>
   20674:	ldr	x0, [x20, #16]
   20678:	add	x2, x2, #0x1
   2067c:	ldr	x1, [x21, #16]
   20680:	sub	x19, x19, x2
   20684:	lsl	x2, x2, #3
   20688:	add	x0, x0, x19, lsl #3
   2068c:	bl	a2c0 <memcpy@plt>
   20690:	ldr	x3, [x20, #8]
   20694:	ldr	x2, [x21, #8]
   20698:	add	x2, x3, x2, lsl #1
   2069c:	sub	x5, x2, #0x1
   206a0:	subs	x2, x2, x19
   206a4:	b.eq	206dc <printf_parse@@Base+0x32cc>  // b.none
   206a8:	ldr	x0, [x20, #16]
   206ac:	sub	x1, x3, #0x1
   206b0:	add	x3, x3, x2
   206b4:	str	x3, [x20, #8]
   206b8:	ldr	x4, [x0, x5, lsl #3]
   206bc:	add	x6, x1, x2
   206c0:	ldr	x3, [x0, x1, lsl #3]
   206c4:	cmp	x4, x3
   206c8:	b.le	206f8 <printf_parse@@Base+0x32e8>
   206cc:	str	x4, [x0, x6, lsl #3]
   206d0:	sub	x5, x5, #0x1
   206d4:	subs	x2, x2, #0x1
   206d8:	b.ne	206b8 <printf_parse@@Base+0x32a8>  // b.any
   206dc:	mov	w0, #0x0                   	// #0
   206e0:	ldp	x19, x20, [sp, #16]
   206e4:	ldp	x21, x22, [sp, #32]
   206e8:	ldp	x29, x30, [sp], #48
   206ec:	ret
   206f0:	sub	x3, x3, #0x1
   206f4:	b	20640 <printf_parse@@Base+0x3230>
   206f8:	str	x3, [x0, x6, lsl #3]
   206fc:	subs	x1, x1, #0x1
   20700:	b.pl	206b8 <printf_parse@@Base+0x32a8>  // b.nfrst
   20704:	add	x1, x0, x19, lsl #3
   20708:	lsl	x2, x2, #3
   2070c:	bl	a2c0 <memcpy@plt>
   20710:	mov	w0, #0x0                   	// #0
   20714:	ldp	x19, x20, [sp, #16]
   20718:	ldp	x21, x22, [sp, #32]
   2071c:	ldp	x29, x30, [sp], #48
   20720:	ret
   20724:	ldr	x0, [x20, #16]
   20728:	add	x19, x19, x2
   2072c:	lsl	x22, x19, #1
   20730:	lsl	x1, x19, #4
   20734:	bl	a7e0 <realloc@plt>
   20738:	cbz	x0, 20774 <printf_parse@@Base+0x3364>
   2073c:	ldr	x1, [x20, #8]
   20740:	ldr	x19, [x21, #8]
   20744:	str	x22, [x20]
   20748:	str	x0, [x20, #16]
   2074c:	cbnz	x1, 20610 <printf_parse@@Base+0x3200>
   20750:	ldr	x1, [x21, #16]
   20754:	str	x19, [x20, #8]
   20758:	ldr	x0, [x20, #16]
   2075c:	ldr	x2, [x21, #8]
   20760:	lsl	x2, x2, #3
   20764:	bl	a2c0 <memcpy@plt>
   20768:	b	206dc <printf_parse@@Base+0x32cc>
   2076c:	mov	w0, #0x0                   	// #0
   20770:	ret
   20774:	mov	w0, #0xc                   	// #12
   20778:	b	206e0 <printf_parse@@Base+0x32d0>
   2077c:	nop
   20780:	stp	x29, x30, [sp, #-144]!
   20784:	mov	x29, sp
   20788:	stp	x19, x20, [sp, #16]
   2078c:	add	x20, x2, x2, lsl #1
   20790:	mov	x19, x1
   20794:	stp	x23, x24, [sp, #48]
   20798:	lsl	x20, x20, #3
   2079c:	ldr	x23, [x1, #40]
   207a0:	stp	x21, x22, [sp, #32]
   207a4:	mov	x22, x0
   207a8:	add	x23, x23, x20
   207ac:	mov	x21, x2
   207b0:	stp	x25, x26, [sp, #64]
   207b4:	and	w25, w3, #0xff
   207b8:	ldr	x0, [x23, #8]
   207bc:	add	x0, x0, #0x1
   207c0:	stp	x0, xzr, [sp, #96]
   207c4:	lsl	x0, x0, #3
   207c8:	bl	a5f0 <malloc@plt>
   207cc:	str	x0, [sp, #112]
   207d0:	cbz	x0, 209bc <printf_parse@@Base+0x35ac>
   207d4:	ldr	x2, [x19]
   207d8:	lsl	x24, x21, #4
   207dc:	ldr	x0, [x19, #48]
   207e0:	add	x1, x2, x24
   207e4:	mov	x3, #0xffffffffffffffff    	// #-1
   207e8:	add	x0, x0, x20
   207ec:	ldr	w4, [x1, #8]
   207f0:	str	x3, [x0, #8]
   207f4:	tst	w4, #0x3ff00
   207f8:	b.ne	20944 <printf_parse@@Base+0x3534>  // b.any
   207fc:	ldrb	w0, [x1, #8]
   20800:	tbz	w0, #3, 20988 <printf_parse@@Base+0x3578>
   20804:	ldr	x1, [x19, #40]
   20808:	add	x0, x1, x20
   2080c:	ldr	x2, [x0, #8]
   20810:	cmp	x2, #0x0
   20814:	b.le	20988 <printf_parse@@Base+0x3578>
   20818:	add	x23, sp, #0x60
   2081c:	mov	w24, #0x0                   	// #0
   20820:	stp	x27, x28, [sp, #80]
   20824:	mov	x27, #0x0                   	// #0
   20828:	add	x28, sp, #0x78
   2082c:	ldr	x0, [x0, #16]
   20830:	ldr	x3, [x19, #48]
   20834:	ldr	x2, [x0, x27, lsl #3]
   20838:	add	x26, x2, x2, lsl #1
   2083c:	lsl	x26, x26, #3
   20840:	add	x3, x3, x26
   20844:	ldr	x0, [x3, #8]
   20848:	cmn	x0, #0x1
   2084c:	b.eq	2093c <printf_parse@@Base+0x352c>  // b.none
   20850:	cbz	x0, 20908 <printf_parse@@Base+0x34f8>
   20854:	ldp	x0, x1, [x3]
   20858:	stp	x0, x1, [sp, #120]
   2085c:	ldr	x0, [x3, #16]
   20860:	str	x0, [sp, #136]
   20864:	mov	x1, x28
   20868:	mov	x0, x23
   2086c:	bl	205d8 <printf_parse@@Base+0x31c8>
   20870:	cbnz	w0, 20920 <printf_parse@@Base+0x3510>
   20874:	ldr	x0, [x19, #48]
   20878:	add	x26, x0, x26
   2087c:	ldr	x0, [x26, #8]
   20880:	cbz	x0, 208f8 <printf_parse@@Base+0x34e8>
   20884:	ldr	x1, [x19, #40]
   20888:	add	x0, x1, x20
   2088c:	add	x27, x27, #0x1
   20890:	ldr	x2, [x0, #8]
   20894:	cmp	x2, x27
   20898:	b.gt	20828 <printf_parse@@Base+0x3418>
   2089c:	mov	x1, x21
   208a0:	add	x0, sp, #0x60
   208a4:	bl	1e670 <printf_parse@@Base+0x1260>
   208a8:	tst	w0, #0xff
   208ac:	b.eq	209b8 <printf_parse@@Base+0x35a8>  // b.none
   208b0:	ldr	x0, [x19, #48]
   208b4:	eor	w25, w25, #0x1
   208b8:	tst	w24, w25
   208bc:	add	x1, x0, x20
   208c0:	b.eq	209d8 <printf_parse@@Base+0x35c8>  // b.none
   208c4:	ldp	x27, x28, [sp, #80]
   208c8:	str	xzr, [x1, #8]
   208cc:	ldp	x2, x3, [sp, #96]
   208d0:	mov	w0, #0x0                   	// #0
   208d4:	ldr	x1, [sp, #112]
   208d8:	stp	x2, x3, [x22]
   208dc:	str	x1, [x22, #16]
   208e0:	ldp	x19, x20, [sp, #16]
   208e4:	ldp	x21, x22, [sp, #32]
   208e8:	ldp	x23, x24, [sp, #48]
   208ec:	ldp	x25, x26, [sp, #64]
   208f0:	ldp	x29, x30, [sp], #144
   208f4:	ret
   208f8:	ldr	x0, [sp, #136]
   208fc:	mov	w24, #0x1                   	// #1
   20900:	bl	aa50 <free@plt>
   20904:	b	20884 <printf_parse@@Base+0x3474>
   20908:	add	x28, sp, #0x78
   2090c:	mov	x1, x19
   20910:	mov	x0, x28
   20914:	mov	w3, #0x0                   	// #0
   20918:	bl	20780 <printf_parse@@Base+0x3370>
   2091c:	cbz	w0, 20864 <printf_parse@@Base+0x3454>
   20920:	ldp	x19, x20, [sp, #16]
   20924:	ldp	x21, x22, [sp, #32]
   20928:	ldp	x23, x24, [sp, #48]
   2092c:	ldp	x25, x26, [sp, #64]
   20930:	ldp	x27, x28, [sp, #80]
   20934:	ldp	x29, x30, [sp], #144
   20938:	ret
   2093c:	mov	w24, #0x1                   	// #1
   20940:	b	20888 <printf_parse@@Base+0x3478>
   20944:	ldr	x0, [x23, #8]
   20948:	cbz	x0, 20988 <printf_parse@@Base+0x3578>
   2094c:	ldr	x0, [x23, #16]
   20950:	ldr	x0, [x0]
   20954:	add	x2, x2, x0, lsl #4
   20958:	ldrb	w0, [x2, #10]
   2095c:	tbnz	w0, #2, 207fc <printf_parse@@Base+0x33ec>
   20960:	ubfx	x4, x4, #8, #10
   20964:	mov	x3, x21
   20968:	mov	x2, x21
   2096c:	mov	x1, x21
   20970:	mov	x0, x19
   20974:	bl	1f610 <printf_parse@@Base+0x2200>
   20978:	cbnz	w0, 208e0 <printf_parse@@Base+0x34d0>
   2097c:	ldr	x1, [x19]
   20980:	add	x1, x1, x24
   20984:	b	207fc <printf_parse@@Base+0x33ec>
   20988:	mov	x1, x21
   2098c:	add	x0, sp, #0x60
   20990:	bl	1e670 <printf_parse@@Base+0x1260>
   20994:	tst	w0, #0xff
   20998:	b.eq	209bc <printf_parse@@Base+0x35ac>  // b.none
   2099c:	ldr	x0, [x19, #48]
   209a0:	add	x20, x0, x20
   209a4:	ldp	x0, x1, [sp, #96]
   209a8:	stp	x0, x1, [x20]
   209ac:	ldr	x0, [sp, #112]
   209b0:	str	x0, [x20, #16]
   209b4:	b	208cc <printf_parse@@Base+0x34bc>
   209b8:	ldp	x27, x28, [sp, #80]
   209bc:	mov	w0, #0xc                   	// #12
   209c0:	ldp	x19, x20, [sp, #16]
   209c4:	ldp	x21, x22, [sp, #32]
   209c8:	ldp	x23, x24, [sp, #48]
   209cc:	ldp	x25, x26, [sp, #64]
   209d0:	ldp	x29, x30, [sp], #144
   209d4:	ret
   209d8:	ldp	x27, x28, [sp, #80]
   209dc:	b	209a0 <printf_parse@@Base+0x3590>
   209e0:	stp	x29, x30, [sp, #-112]!
   209e4:	mov	x29, sp
   209e8:	stp	x19, x20, [sp, #16]
   209ec:	mov	w19, w3
   209f0:	ldr	x20, [x1, #8]
   209f4:	stp	x21, x22, [sp, #32]
   209f8:	mov	x21, x2
   209fc:	stp	x23, x24, [sp, #48]
   20a00:	mov	x24, x0
   20a04:	lsl	x0, x20, #3
   20a08:	str	x25, [sp, #64]
   20a0c:	mov	x25, x1
   20a10:	stp	x20, xzr, [sp, #88]
   20a14:	bl	a5f0 <malloc@plt>
   20a18:	str	x0, [sp, #104]
   20a1c:	cbz	x0, 20b30 <printf_parse@@Base+0x3720>
   20a20:	cmp	x20, #0x0
   20a24:	b.le	20ac4 <printf_parse@@Base+0x36b4>
   20a28:	add	x20, sp, #0x58
   20a2c:	mov	x23, #0x0                   	// #0
   20a30:	ldr	x1, [x25, #16]
   20a34:	ldr	x0, [x24, #48]
   20a38:	ldr	x2, [x1, x23, lsl #3]
   20a3c:	add	x1, x2, x2, lsl #1
   20a40:	add	x1, x0, x1, lsl #3
   20a44:	ldr	x10, [x1, #8]
   20a48:	cmp	x10, #0x0
   20a4c:	b.le	20afc <printf_parse@@Base+0x36ec>
   20a50:	mov	x5, #0x0                   	// #0
   20a54:	ldr	x9, [x24]
   20a58:	ldr	x4, [x1, #16]
   20a5c:	b	20a68 <printf_parse@@Base+0x3658>
   20a60:	cmp	x10, x5
   20a64:	b.eq	20afc <printf_parse@@Base+0x36ec>  // b.none
   20a68:	ldr	x7, [x4, x5, lsl #3]
   20a6c:	add	x5, x5, #0x1
   20a70:	lsl	x6, x7, #4
   20a74:	add	x8, x9, x6
   20a78:	ldrb	w8, [x8, #8]
   20a7c:	cmp	w19, w8
   20a80:	b.ne	20a60 <printf_parse@@Base+0x3650>  // b.any
   20a84:	ldr	x6, [x9, x6]
   20a88:	cmp	x21, x6
   20a8c:	b.ne	20a60 <printf_parse@@Base+0x3650>  // b.any
   20a90:	cmn	x7, #0x1
   20a94:	b.eq	20afc <printf_parse@@Base+0x36ec>  // b.none
   20a98:	mov	w4, w19
   20a9c:	mov	x3, x21
   20aa0:	mov	x1, x20
   20aa4:	mov	x0, x24
   20aa8:	bl	1fc40 <printf_parse@@Base+0x2830>
   20aac:	mov	w22, w0
   20ab0:	cbnz	w0, 20b0c <printf_parse@@Base+0x36fc>
   20ab4:	ldr	x0, [x25, #8]
   20ab8:	add	x23, x23, #0x1
   20abc:	cmp	x0, x23
   20ac0:	b.gt	20a30 <printf_parse@@Base+0x3620>
   20ac4:	ldr	x0, [x25, #16]
   20ac8:	mov	w22, #0x0                   	// #0
   20acc:	bl	aa50 <free@plt>
   20ad0:	ldp	x0, x1, [sp, #88]
   20ad4:	stp	x0, x1, [x25]
   20ad8:	ldr	x0, [sp, #104]
   20adc:	str	x0, [x25, #16]
   20ae0:	mov	w0, w22
   20ae4:	ldp	x19, x20, [sp, #16]
   20ae8:	ldp	x21, x22, [sp, #32]
   20aec:	ldp	x23, x24, [sp, #48]
   20af0:	ldr	x25, [sp, #64]
   20af4:	ldp	x29, x30, [sp], #112
   20af8:	ret
   20afc:	mov	x0, x20
   20b00:	bl	205d8 <printf_parse@@Base+0x31c8>
   20b04:	mov	w22, w0
   20b08:	cbz	w0, 20ab4 <printf_parse@@Base+0x36a4>
   20b0c:	ldr	x0, [sp, #104]
   20b10:	bl	aa50 <free@plt>
   20b14:	mov	w0, w22
   20b18:	ldp	x19, x20, [sp, #16]
   20b1c:	ldp	x21, x22, [sp, #32]
   20b20:	ldp	x23, x24, [sp, #48]
   20b24:	ldr	x25, [sp, #64]
   20b28:	ldp	x29, x30, [sp], #112
   20b2c:	ret
   20b30:	mov	w22, #0xc                   	// #12
   20b34:	mov	w0, w22
   20b38:	ldp	x19, x20, [sp, #16]
   20b3c:	ldp	x21, x22, [sp, #32]
   20b40:	ldp	x23, x24, [sp, #48]
   20b44:	ldr	x25, [sp, #64]
   20b48:	ldp	x29, x30, [sp], #112
   20b4c:	ret
   20b50:	stp	x29, x30, [sp, #-48]!
   20b54:	mov	x29, sp
   20b58:	stp	x19, x20, [sp, #16]
   20b5c:	mov	x19, x0
   20b60:	ldr	x2, [x1, #8]
   20b64:	str	x2, [x0, #8]
   20b68:	cmp	x2, #0x0
   20b6c:	b.le	20bb0 <printf_parse@@Base+0x37a0>
   20b70:	str	x21, [sp, #32]
   20b74:	lsl	x20, x2, #3
   20b78:	str	x2, [x19]
   20b7c:	mov	x0, x20
   20b80:	mov	x21, x1
   20b84:	bl	a5f0 <malloc@plt>
   20b88:	str	x0, [x19, #16]
   20b8c:	cbz	x0, 20bc8 <printf_parse@@Base+0x37b8>
   20b90:	ldr	x1, [x21, #16]
   20b94:	mov	x2, x20
   20b98:	bl	a2c0 <memcpy@plt>
   20b9c:	ldr	x21, [sp, #32]
   20ba0:	mov	w0, #0x0                   	// #0
   20ba4:	ldp	x19, x20, [sp, #16]
   20ba8:	ldp	x29, x30, [sp], #48
   20bac:	ret
   20bb0:	stp	xzr, xzr, [x19]
   20bb4:	mov	w0, #0x0                   	// #0
   20bb8:	str	xzr, [x19, #16]
   20bbc:	ldp	x19, x20, [sp, #16]
   20bc0:	ldp	x29, x30, [sp], #48
   20bc4:	ret
   20bc8:	mov	w0, #0xc                   	// #12
   20bcc:	ldr	x21, [sp, #32]
   20bd0:	stp	xzr, xzr, [x19]
   20bd4:	b	20ba4 <printf_parse@@Base+0x3794>
   20bd8:	stp	x29, x30, [sp, #-64]!
   20bdc:	mov	x29, sp
   20be0:	str	x21, [sp, #24]
   20be4:	mov	x21, x0
   20be8:	cbz	x1, 20c0c <printf_parse@@Base+0x37fc>
   20bec:	stp	x22, x23, [sp, #32]
   20bf0:	cmp	x2, #0x0
   20bf4:	ldr	x22, [x1, #8]
   20bf8:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   20bfc:	b.gt	20c34 <printf_parse@@Base+0x3824>
   20c00:	cmp	x22, #0x0
   20c04:	b.gt	20c44 <printf_parse@@Base+0x3834>
   20c08:	ldp	x22, x23, [sp, #32]
   20c0c:	cbz	x2, 20c1c <printf_parse@@Base+0x380c>
   20c10:	ldr	x0, [x2, #8]
   20c14:	cmp	x0, #0x0
   20c18:	b.gt	20c58 <printf_parse@@Base+0x3848>
   20c1c:	mov	w0, #0x0                   	// #0
   20c20:	stp	xzr, xzr, [x21]
   20c24:	str	xzr, [x21, #16]
   20c28:	ldr	x21, [sp, #24]
   20c2c:	ldp	x29, x30, [sp], #64
   20c30:	ret
   20c34:	ldr	x23, [x2, #8]
   20c38:	str	x2, [sp, #48]
   20c3c:	cmp	x23, #0x0
   20c40:	b.gt	20c6c <printf_parse@@Base+0x385c>
   20c44:	mov	x0, x21
   20c48:	ldr	x21, [sp, #24]
   20c4c:	ldp	x22, x23, [sp, #32]
   20c50:	ldp	x29, x30, [sp], #64
   20c54:	b	20b50 <printf_parse@@Base+0x3740>
   20c58:	mov	x0, x21
   20c5c:	mov	x1, x2
   20c60:	ldr	x21, [sp, #24]
   20c64:	ldp	x29, x30, [sp], #64
   20c68:	b	20b50 <printf_parse@@Base+0x3740>
   20c6c:	add	x0, x22, x23
   20c70:	str	x0, [x21]
   20c74:	str	x1, [sp, #56]
   20c78:	lsl	x0, x0, #3
   20c7c:	bl	a5f0 <malloc@plt>
   20c80:	str	x0, [x21, #16]
   20c84:	ldp	x2, x1, [sp, #48]
   20c88:	cbz	x0, 20d44 <printf_parse@@Base+0x3934>
   20c8c:	sub	x7, x0, #0x8
   20c90:	mov	x3, #0x0                   	// #0
   20c94:	mov	x4, #0x0                   	// #0
   20c98:	ldr	x1, [x1, #16]
   20c9c:	ldr	x6, [x2, #16]
   20ca0:	str	x19, [sp, #16]
   20ca4:	mov	x19, #0x0                   	// #0
   20ca8:	b	20cc8 <printf_parse@@Base+0x38b8>
   20cac:	cinc	x3, x3, eq  // eq = none
   20cb0:	add	x4, x4, #0x1
   20cb4:	str	x2, [x7, x19, lsl #3]
   20cb8:	cmp	x22, x4
   20cbc:	b.le	20ce8 <printf_parse@@Base+0x38d8>
   20cc0:	cmp	x23, x3
   20cc4:	b.le	20d28 <printf_parse@@Base+0x3918>
   20cc8:	ldr	x2, [x1, x4, lsl #3]
   20ccc:	add	x19, x19, #0x1
   20cd0:	ldr	x5, [x6, x3, lsl #3]
   20cd4:	cmp	x2, x5
   20cd8:	b.le	20cac <printf_parse@@Base+0x389c>
   20cdc:	add	x3, x3, #0x1
   20ce0:	str	x5, [x7, x19, lsl #3]
   20ce4:	b	20cb8 <printf_parse@@Base+0x38a8>
   20ce8:	cmp	x23, x3
   20cec:	b.gt	20d0c <printf_parse@@Base+0x38fc>
   20cf0:	ldp	x22, x23, [sp, #32]
   20cf4:	str	x19, [x21, #8]
   20cf8:	mov	w0, #0x0                   	// #0
   20cfc:	ldr	x19, [sp, #16]
   20d00:	ldr	x21, [sp, #24]
   20d04:	ldp	x29, x30, [sp], #64
   20d08:	ret
   20d0c:	sub	x2, x23, x3
   20d10:	add	x0, x0, x19, lsl #3
   20d14:	add	x1, x6, x3, lsl #3
   20d18:	add	x19, x19, x2
   20d1c:	lsl	x2, x2, #3
   20d20:	bl	a2c0 <memcpy@plt>
   20d24:	b	20cf0 <printf_parse@@Base+0x38e0>
   20d28:	sub	x2, x22, x4
   20d2c:	add	x1, x1, x4, lsl #3
   20d30:	add	x0, x0, x19, lsl #3
   20d34:	add	x19, x19, x2
   20d38:	lsl	x2, x2, #3
   20d3c:	bl	a2c0 <memcpy@plt>
   20d40:	b	20cf0 <printf_parse@@Base+0x38e0>
   20d44:	mov	w0, #0xc                   	// #12
   20d48:	ldp	x22, x23, [sp, #32]
   20d4c:	b	20c28 <printf_parse@@Base+0x3818>
   20d50:	stp	x29, x30, [sp, #-112]!
   20d54:	mov	x29, sp
   20d58:	stp	x25, x26, [sp, #64]
   20d5c:	mov	x25, x2
   20d60:	ldr	x2, [x2, #8]
   20d64:	stp	x27, x28, [sp, #80]
   20d68:	str	x0, [sp, #104]
   20d6c:	cbz	x2, 21004 <printf_parse@@Base+0x3bf4>
   20d70:	stp	x19, x20, [sp, #16]
   20d74:	cmp	x2, #0x0
   20d78:	mov	w20, w3
   20d7c:	stp	x21, x22, [sp, #32]
   20d80:	add	x26, x2, w3, uxtw
   20d84:	mov	x22, x1
   20d88:	b.le	20da8 <printf_parse@@Base+0x3998>
   20d8c:	ldr	x0, [x25, #16]
   20d90:	add	x2, x0, x2, lsl #3
   20d94:	nop
   20d98:	ldr	x1, [x0], #8
   20d9c:	add	x26, x26, x1
   20da0:	cmp	x2, x0
   20da4:	b.ne	20d98 <printf_parse@@Base+0x3988>  // b.any
   20da8:	ldr	x0, [x22, #136]
   20dac:	ldr	x1, [x22, #64]
   20db0:	and	x0, x26, x0
   20db4:	add	x0, x0, x0, lsl #1
   20db8:	lsl	x0, x0, #3
   20dbc:	add	x2, x1, x0
   20dc0:	ldr	x10, [x1, x0]
   20dc4:	cmp	x10, #0x0
   20dc8:	b.le	20e34 <printf_parse@@Base+0x3a24>
   20dcc:	mov	x6, #0x0                   	// #0
   20dd0:	ldr	x11, [x2, #16]
   20dd4:	b	20de0 <printf_parse@@Base+0x39d0>
   20dd8:	cmp	x6, x10
   20ddc:	b.eq	20e34 <printf_parse@@Base+0x3a24>  // b.none
   20de0:	ldr	x27, [x11, x6, lsl #3]
   20de4:	add	x6, x6, #0x1
   20de8:	ldr	x0, [x27]
   20dec:	cmp	x0, x26
   20df0:	b.ne	20dd8 <printf_parse@@Base+0x39c8>  // b.any
   20df4:	ldrb	w0, [x27, #104]
   20df8:	and	w0, w0, #0xf
   20dfc:	cmp	w0, w20
   20e00:	b.ne	20dd8 <printf_parse@@Base+0x39c8>  // b.any
   20e04:	ldr	x0, [x27, #80]
   20e08:	mov	x1, x25
   20e0c:	bl	1df98 <printf_parse@@Base+0xb88>
   20e10:	tst	w0, #0xff
   20e14:	b.eq	20dd8 <printf_parse@@Base+0x39c8>  // b.none
   20e18:	ldp	x19, x20, [sp, #16]
   20e1c:	ldp	x21, x22, [sp, #32]
   20e20:	mov	x0, x27
   20e24:	ldp	x25, x26, [sp, #64]
   20e28:	ldp	x27, x28, [sp, #80]
   20e2c:	ldp	x29, x30, [sp], #112
   20e30:	ret
   20e34:	mov	x1, #0x1                   	// #1
   20e38:	mov	x0, #0x70                  	// #112
   20e3c:	bl	a770 <calloc@plt>
   20e40:	mov	x27, x0
   20e44:	cbz	x0, 20f78 <printf_parse@@Base+0x3b68>
   20e48:	add	x21, x0, #0x8
   20e4c:	mov	x1, x25
   20e50:	mov	x0, x21
   20e54:	bl	20b50 <printf_parse@@Base+0x3740>
   20e58:	cbnz	w0, 21030 <printf_parse@@Base+0x3c20>
   20e5c:	ldrb	w0, [x27, #104]
   20e60:	ldr	x2, [x25, #8]
   20e64:	str	x21, [x27, #80]
   20e68:	bfxil	w0, w20, #0, #4
   20e6c:	strb	w0, [x27, #104]
   20e70:	cmp	x2, #0x0
   20e74:	b.le	20f58 <printf_parse@@Base+0x3b48>
   20e78:	and	w0, w20, #0x4
   20e7c:	stp	x23, x24, [sp, #48]
   20e80:	add	x24, x27, #0x18
   20e84:	add	x23, x27, #0x10
   20e88:	str	w0, [sp, #100]
   20e8c:	and	w0, w20, #0x2
   20e90:	and	w20, w20, #0x1
   20e94:	mov	x6, #0x0                   	// #0
   20e98:	mov	x28, #0x0                   	// #0
   20e9c:	str	w0, [sp, #96]
   20ea0:	ldr	x1, [x25, #16]
   20ea4:	ldr	x0, [x22]
   20ea8:	ldr	x3, [x1, x28, lsl #3]
   20eac:	add	x3, x0, x3, lsl #4
   20eb0:	ldr	w19, [x3, #8]
   20eb4:	ldrb	w4, [x3, #8]
   20eb8:	ubfx	x19, x19, #8, #10
   20ebc:	cmp	w19, #0x0
   20ec0:	ccmp	w4, #0x1, #0x0, eq  // eq = none
   20ec4:	b.eq	20f48 <printf_parse@@Base+0x3b38>  // b.none
   20ec8:	ldrb	w5, [x3, #10]
   20ecc:	cmp	w4, #0x2
   20ed0:	ldrb	w0, [x27, #104]
   20ed4:	ubfx	x5, x5, #4, #1
   20ed8:	mov	w3, w0
   20edc:	ubfx	x0, x0, #5, #1
   20ee0:	orr	w0, w0, w5
   20ee4:	bfi	w3, w0, #5, #1
   20ee8:	strb	w3, [x27, #104]
   20eec:	b.eq	20ff8 <printf_parse@@Base+0x3be8>  // b.none
   20ef0:	cmp	w4, #0x4
   20ef4:	b.eq	20f94 <printf_parse@@Base+0x3b84>  // b.none
   20ef8:	cbz	w19, 20f48 <printf_parse@@Base+0x3b38>
   20efc:	ldr	x0, [x27, #80]
   20f00:	cmp	x21, x0
   20f04:	b.eq	20fa0 <printf_parse@@Base+0x3b90>  // b.none
   20f08:	tbz	w19, #0, 20fd0 <printf_parse@@Base+0x3bc0>
   20f0c:	cbz	w20, 20f18 <printf_parse@@Base+0x3b08>
   20f10:	tbz	w19, #1, 20fd8 <printf_parse@@Base+0x3bc8>
   20f14:	nop
   20f18:	subs	x2, x28, x6
   20f1c:	b.mi	20f40 <printf_parse@@Base+0x3b30>  // b.first
   20f20:	ldr	x0, [x27, #16]
   20f24:	cmp	x2, x0
   20f28:	b.ge	20f40 <printf_parse@@Base+0x3b30>  // b.tcont
   20f2c:	sub	x0, x0, #0x1
   20f30:	str	x0, [x27, #16]
   20f34:	mov	x1, x24
   20f38:	mov	x0, x23
   20f3c:	bl	1fd68 <printf_parse@@Base+0x2958>
   20f40:	ldr	x2, [x25, #8]
   20f44:	add	x6, x6, #0x1
   20f48:	add	x28, x28, #0x1
   20f4c:	cmp	x28, x2
   20f50:	b.lt	20ea0 <printf_parse@@Base+0x3a90>  // b.tstop
   20f54:	ldp	x23, x24, [sp, #48]
   20f58:	mov	x2, x26
   20f5c:	mov	x0, x22
   20f60:	mov	x1, x27
   20f64:	bl	1e7a0 <printf_parse@@Base+0x1390>
   20f68:	cbz	w0, 20e18 <printf_parse@@Base+0x3a08>
   20f6c:	mov	x0, x27
   20f70:	bl	1f8b0 <printf_parse@@Base+0x24a0>
   20f74:	nop
   20f78:	ldr	x1, [sp, #104]
   20f7c:	mov	w0, #0xc                   	// #12
   20f80:	mov	x27, #0x0                   	// #0
   20f84:	ldp	x19, x20, [sp, #16]
   20f88:	ldp	x21, x22, [sp, #32]
   20f8c:	str	w0, [x1]
   20f90:	b	20e20 <printf_parse@@Base+0x3a10>
   20f94:	orr	w3, w3, #0x40
   20f98:	strb	w3, [x27, #104]
   20f9c:	b	20ef8 <printf_parse@@Base+0x3ae8>
   20fa0:	mov	x0, #0x18                  	// #24
   20fa4:	bl	a5f0 <malloc@plt>
   20fa8:	cbz	x0, 21020 <printf_parse@@Base+0x3c10>
   20fac:	str	x0, [x27, #80]
   20fb0:	mov	x1, x25
   20fb4:	bl	20b50 <printf_parse@@Base+0x3740>
   20fb8:	cbnz	w0, 21020 <printf_parse@@Base+0x3c10>
   20fbc:	ldrb	w0, [x27, #104]
   20fc0:	mov	x6, #0x0                   	// #0
   20fc4:	orr	w0, w0, #0xffffff80
   20fc8:	strb	w0, [x27, #104]
   20fcc:	tbnz	w19, #0, 20f0c <printf_parse@@Base+0x3afc>
   20fd0:	tbz	w19, #1, 20fd8 <printf_parse@@Base+0x3bc8>
   20fd4:	cbnz	w20, 20f18 <printf_parse@@Base+0x3b08>
   20fd8:	tbz	w19, #4, 20fe4 <printf_parse@@Base+0x3bd4>
   20fdc:	ldr	w0, [sp, #96]
   20fe0:	cbz	w0, 20f18 <printf_parse@@Base+0x3b08>
   20fe4:	tbz	w19, #6, 20ff0 <printf_parse@@Base+0x3be0>
   20fe8:	ldr	w0, [sp, #100]
   20fec:	cbz	w0, 20f18 <printf_parse@@Base+0x3b08>
   20ff0:	ldr	x2, [x25, #8]
   20ff4:	b	20f48 <printf_parse@@Base+0x3b38>
   20ff8:	orr	w3, w3, #0x10
   20ffc:	strb	w3, [x27, #104]
   21000:	b	20ef8 <printf_parse@@Base+0x3ae8>
   21004:	str	wzr, [x0]
   21008:	mov	x27, #0x0                   	// #0
   2100c:	mov	x0, x27
   21010:	ldp	x25, x26, [sp, #64]
   21014:	ldp	x27, x28, [sp, #80]
   21018:	ldp	x29, x30, [sp], #112
   2101c:	ret
   21020:	mov	x0, x27
   21024:	bl	1f8b0 <printf_parse@@Base+0x24a0>
   21028:	ldp	x23, x24, [sp, #48]
   2102c:	b	20f78 <printf_parse@@Base+0x3b68>
   21030:	mov	x0, x27
   21034:	bl	aa50 <free@plt>
   21038:	b	20f78 <printf_parse@@Base+0x3b68>
   2103c:	nop
   21040:	stp	x29, x30, [sp, #-64]!
   21044:	mov	x29, sp
   21048:	stp	x19, x20, [sp, #16]
   2104c:	ldr	x20, [x2, #8]
   21050:	stp	x21, x22, [sp, #32]
   21054:	mov	x22, x0
   21058:	cbz	x20, 21238 <printf_parse@@Base+0x3e28>
   2105c:	stp	x23, x24, [sp, #48]
   21060:	mov	x21, x1
   21064:	mov	x23, x2
   21068:	cmp	x20, #0x0
   2106c:	b.le	21088 <printf_parse@@Base+0x3c78>
   21070:	ldr	x3, [x2, #16]
   21074:	add	x1, x3, x20, lsl #3
   21078:	ldr	x0, [x3], #8
   2107c:	add	x20, x20, x0
   21080:	cmp	x1, x3
   21084:	b.ne	21078 <printf_parse@@Base+0x3c68>  // b.any
   21088:	ldr	x0, [x21, #136]
   2108c:	ldr	x1, [x21, #64]
   21090:	and	x0, x20, x0
   21094:	add	x0, x0, x0, lsl #1
   21098:	lsl	x0, x0, #3
   2109c:	add	x2, x1, x0
   210a0:	ldr	x7, [x1, x0]
   210a4:	cmp	x7, #0x0
   210a8:	b.le	210e8 <printf_parse@@Base+0x3cd8>
   210ac:	ldr	x8, [x2, #16]
   210b0:	mov	x6, #0x0                   	// #0
   210b4:	nop
   210b8:	ldr	x19, [x8, x6, lsl #3]
   210bc:	mov	x1, x23
   210c0:	add	x6, x6, #0x1
   210c4:	add	x0, x19, #0x8
   210c8:	ldr	x3, [x19]
   210cc:	cmp	x3, x20
   210d0:	b.ne	210e0 <printf_parse@@Base+0x3cd0>  // b.any
   210d4:	bl	1df98 <printf_parse@@Base+0xb88>
   210d8:	tst	w0, #0xff
   210dc:	b.ne	211e0 <printf_parse@@Base+0x3dd0>  // b.any
   210e0:	cmp	x6, x7
   210e4:	b.ne	210b8 <printf_parse@@Base+0x3ca8>  // b.any
   210e8:	mov	x1, #0x1                   	// #1
   210ec:	mov	x0, #0x70                  	// #112
   210f0:	bl	a770 <calloc@plt>
   210f4:	mov	x19, x0
   210f8:	cbz	x0, 21224 <printf_parse@@Base+0x3e14>
   210fc:	add	x24, x0, #0x8
   21100:	mov	x1, x23
   21104:	mov	x0, x24
   21108:	bl	20b50 <printf_parse@@Base+0x3740>
   2110c:	cbnz	w0, 2121c <printf_parse@@Base+0x3e0c>
   21110:	ldr	x6, [x23, #8]
   21114:	str	x24, [x19, #80]
   21118:	cmp	x6, #0x0
   2111c:	b.le	211cc <printf_parse@@Base+0x3dbc>
   21120:	ldr	x0, [x23, #16]
   21124:	ldr	x7, [x21]
   21128:	add	x6, x0, x6, lsl #3
   2112c:	b	21174 <printf_parse@@Base+0x3d64>
   21130:	ldrb	w3, [x19, #104]
   21134:	cmp	w4, #0x2
   21138:	ldrb	w5, [x2, #10]
   2113c:	mov	w1, w3
   21140:	ubfx	x3, x3, #5, #1
   21144:	ubfx	x5, x5, #4, #1
   21148:	orr	w3, w3, w5
   2114c:	bfi	w1, w3, #5, #1
   21150:	strb	w1, [x19, #104]
   21154:	b.eq	211f8 <printf_parse@@Base+0x3de8>  // b.none
   21158:	cmp	w4, #0x4
   2115c:	b.ne	21204 <printf_parse@@Base+0x3df4>  // b.any
   21160:	orr	w1, w1, #0x40
   21164:	strb	w1, [x19, #104]
   21168:	add	x0, x0, #0x8
   2116c:	cmp	x6, x0
   21170:	b.eq	211cc <printf_parse@@Base+0x3dbc>  // b.none
   21174:	ldr	x2, [x0]
   21178:	add	x2, x7, x2, lsl #4
   2117c:	ldrb	w4, [x2, #8]
   21180:	cmp	w4, #0x1
   21184:	b.ne	21130 <printf_parse@@Base+0x3d20>  // b.any
   21188:	ldr	w1, [x2, #8]
   2118c:	tst	w1, #0x3ff00
   21190:	b.eq	21168 <printf_parse@@Base+0x3d58>  // b.none
   21194:	ldrb	w1, [x19, #104]
   21198:	ldrb	w2, [x2, #10]
   2119c:	mov	w3, w1
   211a0:	ubfx	x1, x1, #5, #1
   211a4:	ubfx	x2, x2, #4, #1
   211a8:	orr	w1, w1, w2
   211ac:	bfi	w3, w1, #5, #1
   211b0:	strb	w3, [x19, #104]
   211b4:	ldrb	w1, [x19, #104]
   211b8:	add	x0, x0, #0x8
   211bc:	cmp	x6, x0
   211c0:	orr	w1, w1, #0xffffff80
   211c4:	strb	w1, [x19, #104]
   211c8:	b.ne	21174 <printf_parse@@Base+0x3d64>  // b.any
   211cc:	mov	x2, x20
   211d0:	mov	x0, x21
   211d4:	mov	x1, x19
   211d8:	bl	1e7a0 <printf_parse@@Base+0x1390>
   211dc:	cbnz	w0, 21254 <printf_parse@@Base+0x3e44>
   211e0:	ldp	x23, x24, [sp, #48]
   211e4:	mov	x0, x19
   211e8:	ldp	x19, x20, [sp, #16]
   211ec:	ldp	x21, x22, [sp, #32]
   211f0:	ldp	x29, x30, [sp], #64
   211f4:	ret
   211f8:	orr	w1, w1, #0x10
   211fc:	strb	w1, [x19, #104]
   21200:	b	21168 <printf_parse@@Base+0x3d58>
   21204:	cmp	w4, #0xc
   21208:	b.eq	211b4 <printf_parse@@Base+0x3da4>  // b.none
   2120c:	ldr	w1, [x2, #8]
   21210:	tst	w1, #0x3ff00
   21214:	b.eq	21168 <printf_parse@@Base+0x3d58>  // b.none
   21218:	b	211b4 <printf_parse@@Base+0x3da4>
   2121c:	mov	x0, x19
   21220:	bl	aa50 <free@plt>
   21224:	mov	w0, #0xc                   	// #12
   21228:	mov	x19, #0x0                   	// #0
   2122c:	ldp	x23, x24, [sp, #48]
   21230:	str	w0, [x22]
   21234:	b	211e4 <printf_parse@@Base+0x3dd4>
   21238:	str	wzr, [x0]
   2123c:	mov	x19, #0x0                   	// #0
   21240:	mov	x0, x19
   21244:	ldp	x19, x20, [sp, #16]
   21248:	ldp	x21, x22, [sp, #32]
   2124c:	ldp	x29, x30, [sp], #64
   21250:	ret
   21254:	mov	x0, x19
   21258:	bl	1f8b0 <printf_parse@@Base+0x24a0>
   2125c:	b	21224 <printf_parse@@Base+0x3e14>
   21260:	cmp	x3, #0x0
   21264:	b.le	2132c <printf_parse@@Base+0x3f1c>
   21268:	stp	x29, x30, [sp, #-112]!
   2126c:	mov	x29, sp
   21270:	stp	x19, x20, [sp, #16]
   21274:	mov	x20, x1
   21278:	mov	x19, #0x0                   	// #0
   2127c:	stp	x21, x22, [sp, #32]
   21280:	mov	x21, x3
   21284:	mov	x22, x2
   21288:	stp	x23, x24, [sp, #48]
   2128c:	mov	x23, x0
   21290:	add	x24, sp, #0x54
   21294:	str	x25, [sp, #64]
   21298:	add	x25, sp, #0x58
   2129c:	b	212f0 <printf_parse@@Base+0x3ee0>
   212a0:	add	x2, x4, #0x8
   212a4:	add	x1, x1, #0x8
   212a8:	mov	x0, x25
   212ac:	cbz	x4, 212e4 <printf_parse@@Base+0x3ed4>
   212b0:	bl	20bd8 <printf_parse@@Base+0x37c8>
   212b4:	mov	w4, w0
   212b8:	str	w4, [sp, #84]
   212bc:	mov	x2, x25
   212c0:	mov	x1, x23
   212c4:	mov	x0, x24
   212c8:	cbnz	w4, 21310 <printf_parse@@Base+0x3f00>
   212cc:	bl	21040 <printf_parse@@Base+0x3c30>
   212d0:	str	x0, [x20, x19, lsl #3]
   212d4:	ldr	x0, [sp, #104]
   212d8:	bl	aa50 <free@plt>
   212dc:	ldr	w4, [sp, #84]
   212e0:	cbnz	w4, 21310 <printf_parse@@Base+0x3f00>
   212e4:	add	x19, x19, #0x1
   212e8:	cmp	x21, x19
   212ec:	b.eq	2130c <printf_parse@@Base+0x3efc>  // b.none
   212f0:	ldr	x1, [x20, x19, lsl #3]
   212f4:	ldr	x4, [x22, x19, lsl #3]
   212f8:	cbnz	x1, 212a0 <printf_parse@@Base+0x3e90>
   212fc:	str	x4, [x20, x19, lsl #3]
   21300:	add	x19, x19, #0x1
   21304:	cmp	x21, x19
   21308:	b.ne	212f0 <printf_parse@@Base+0x3ee0>  // b.any
   2130c:	mov	w4, #0x0                   	// #0
   21310:	mov	w0, w4
   21314:	ldp	x19, x20, [sp, #16]
   21318:	ldp	x21, x22, [sp, #32]
   2131c:	ldp	x23, x24, [sp, #48]
   21320:	ldr	x25, [sp, #64]
   21324:	ldp	x29, x30, [sp], #112
   21328:	ret
   2132c:	mov	w4, #0x0                   	// #0
   21330:	mov	w0, w4
   21334:	ret
   21338:	stp	x29, x30, [sp, #-176]!
   2133c:	mov	x29, sp
   21340:	ldr	x6, [x0, #200]
   21344:	stp	x19, x20, [sp, #16]
   21348:	mov	x20, x1
   2134c:	mov	x19, x2
   21350:	stp	x25, x26, [sp, #64]
   21354:	mov	x26, x0
   21358:	mov	x0, #0x0                   	// #0
   2135c:	str	x3, [sp, #120]
   21360:	mov	x3, x6
   21364:	str	w4, [sp, #132]
   21368:	b	2138c <printf_parse@@Base+0x3f7c>
   2136c:	asr	x1, x1, #1
   21370:	ldr	x4, [x26, #216]
   21374:	add	x2, x1, x1, lsl #2
   21378:	add	x2, x4, x2, lsl #3
   2137c:	ldr	x2, [x2, #8]
   21380:	cmp	x19, x2
   21384:	b.gt	21594 <printf_parse@@Base+0x4184>
   21388:	mov	x3, x1
   2138c:	add	x1, x3, x0
   21390:	cmp	x3, x0
   21394:	b.gt	2136c <printf_parse@@Base+0x3f5c>
   21398:	cmp	x6, x0
   2139c:	b.le	215a8 <printf_parse@@Base+0x4198>
   213a0:	add	x0, x0, x0, lsl #2
   213a4:	ldr	x3, [x26, #216]
   213a8:	lsl	x0, x0, #3
   213ac:	str	x0, [sp, #136]
   213b0:	add	x3, x3, x0
   213b4:	ldr	x0, [x3, #8]
   213b8:	cmp	x19, x0
   213bc:	b.ne	215a8 <printf_parse@@Base+0x4198>  // b.any
   213c0:	stp	x21, x22, [sp, #32]
   213c4:	add	x21, x20, #0x10
   213c8:	add	x0, sp, #0x94
   213cc:	ldr	x22, [x26, #152]
   213d0:	stp	x23, x24, [sp, #48]
   213d4:	add	x24, sp, #0x98
   213d8:	stp	x27, x28, [sp, #80]
   213dc:	str	x0, [sp, #112]
   213e0:	mov	x27, x3
   213e4:	b	21498 <printf_parse@@Base+0x4088>
   213e8:	ldr	x0, [x26, #184]
   213ec:	lsl	x23, x25, #3
   213f0:	ldr	x1, [x22, #24]
   213f4:	add	x3, x0, x23
   213f8:	ldr	x6, [x0, x25, lsl #3]
   213fc:	ldr	x28, [x1, x2, lsl #3]
   21400:	cbz	x6, 21568 <printf_parse@@Base+0x4158>
   21404:	ldr	x0, [x6, #16]
   21408:	mov	x2, x28
   2140c:	add	x1, x6, #0x18
   21410:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   21414:	cbnz	x0, 2148c <printf_parse@@Base+0x407c>
   21418:	add	x1, x6, #0x8
   2141c:	mov	x0, x24
   21420:	bl	20b50 <printf_parse@@Base+0x3740>
   21424:	mov	w6, w0
   21428:	mov	x1, x28
   2142c:	mov	x0, x24
   21430:	str	w6, [sp, #148]
   21434:	bl	1e670 <printf_parse@@Base+0x1260>
   21438:	and	w0, w0, #0xff
   2143c:	ldr	w1, [sp, #148]
   21440:	eor	w0, w0, #0x1
   21444:	cmp	w1, #0x0
   21448:	cset	w1, ne  // ne = any
   2144c:	orr	w0, w1, w0
   21450:	cbnz	w0, 215e0 <printf_parse@@Base+0x41d0>
   21454:	ldr	x7, [x26, #184]
   21458:	add	x3, x7, x23
   2145c:	ldr	x0, [sp, #112]
   21460:	mov	x2, x24
   21464:	mov	x1, x22
   21468:	str	x3, [sp, #104]
   2146c:	bl	21040 <printf_parse@@Base+0x3c30>
   21470:	ldr	x3, [sp, #104]
   21474:	str	x0, [x3]
   21478:	ldr	x0, [sp, #168]
   2147c:	bl	aa50 <free@plt>
   21480:	ldr	x0, [x26, #184]
   21484:	ldr	x0, [x0, x25, lsl #3]
   21488:	cbz	x0, 215bc <printf_parse@@Base+0x41ac>
   2148c:	ldrb	w0, [x27, #32]
   21490:	add	x27, x27, #0x28
   21494:	cbz	w0, 2159c <printf_parse@@Base+0x418c>
   21498:	ldr	x2, [x27]
   2149c:	mov	x1, x21
   214a0:	ldr	x6, [x20, #8]
   214a4:	mov	x0, x6
   214a8:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   214ac:	cbz	x0, 2148c <printf_parse@@Base+0x407c>
   214b0:	ldp	x0, x4, [x27, #16]
   214b4:	add	x4, x19, x4
   214b8:	sub	x25, x4, x0
   214bc:	cmp	x19, x25
   214c0:	b.ne	213e8 <printf_parse@@Base+0x3fd8>  // b.any
   214c4:	ldr	x4, [x22, #40]
   214c8:	add	x2, x2, x2, lsl #1
   214cc:	mov	x0, x6
   214d0:	mov	x1, x21
   214d4:	add	x2, x4, x2, lsl #3
   214d8:	ldr	x2, [x2, #16]
   214dc:	ldr	x23, [x2]
   214e0:	mov	x2, x23
   214e4:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   214e8:	cbnz	x0, 2148c <printf_parse@@Base+0x407c>
   214ec:	mov	x1, #0x1                   	// #1
   214f0:	mov	x0, #0x8                   	// #8
   214f4:	stp	x1, x1, [sp, #152]
   214f8:	bl	a5f0 <malloc@plt>
   214fc:	str	x0, [sp, #168]
   21500:	cbz	x0, 21610 <printf_parse@@Base+0x4200>
   21504:	mov	w4, #0x0                   	// #0
   21508:	str	x23, [x0]
   2150c:	ldr	w3, [sp, #132]
   21510:	mov	x1, x24
   21514:	ldr	x2, [sp, #120]
   21518:	mov	x0, x22
   2151c:	str	w4, [sp, #148]
   21520:	bl	209e0 <printf_parse@@Base+0x35d0>
   21524:	mov	w23, w0
   21528:	mov	x1, x24
   2152c:	mov	x0, x20
   21530:	bl	205d8 <printf_parse@@Base+0x31c8>
   21534:	mov	w1, w0
   21538:	ldr	x0, [sp, #168]
   2153c:	str	w1, [sp, #104]
   21540:	bl	aa50 <free@plt>
   21544:	ldr	w1, [sp, #104]
   21548:	ldr	w0, [sp, #148]
   2154c:	orr	w2, w23, w1
   21550:	orr	w2, w2, w0
   21554:	cbnz	w2, 2161c <printf_parse@@Base+0x420c>
   21558:	ldr	x0, [sp, #136]
   2155c:	ldr	x3, [x26, #216]
   21560:	add	x3, x3, x0
   21564:	b	213e0 <printf_parse@@Base+0x3fd0>
   21568:	mov	x1, #0x1                   	// #1
   2156c:	mov	x0, #0x8                   	// #8
   21570:	str	x3, [sp, #104]
   21574:	stp	x1, x1, [sp, #152]
   21578:	bl	a5f0 <malloc@plt>
   2157c:	str	x0, [sp, #168]
   21580:	cbz	x0, 215f0 <printf_parse@@Base+0x41e0>
   21584:	str	x28, [x0]
   21588:	str	wzr, [sp, #148]
   2158c:	ldr	x3, [sp, #104]
   21590:	b	2145c <printf_parse@@Base+0x404c>
   21594:	add	x0, x1, #0x1
   21598:	b	2138c <printf_parse@@Base+0x3f7c>
   2159c:	ldp	x21, x22, [sp, #32]
   215a0:	ldp	x23, x24, [sp, #48]
   215a4:	ldp	x27, x28, [sp, #80]
   215a8:	mov	w0, #0x0                   	// #0
   215ac:	ldp	x19, x20, [sp, #16]
   215b0:	ldp	x25, x26, [sp, #64]
   215b4:	ldp	x29, x30, [sp], #176
   215b8:	ret
   215bc:	ldr	w0, [sp, #148]
   215c0:	cbz	w0, 2148c <printf_parse@@Base+0x407c>
   215c4:	ldp	x19, x20, [sp, #16]
   215c8:	ldp	x21, x22, [sp, #32]
   215cc:	ldp	x23, x24, [sp, #48]
   215d0:	ldp	x25, x26, [sp, #64]
   215d4:	ldp	x27, x28, [sp, #80]
   215d8:	ldp	x29, x30, [sp], #176
   215dc:	ret
   215e0:	ldr	x0, [sp, #168]
   215e4:	bl	aa50 <free@plt>
   215e8:	ldr	w0, [sp, #148]
   215ec:	cbnz	w0, 215c4 <printf_parse@@Base+0x41b4>
   215f0:	mov	w0, #0xc                   	// #12
   215f4:	ldp	x19, x20, [sp, #16]
   215f8:	ldp	x21, x22, [sp, #32]
   215fc:	ldp	x23, x24, [sp, #48]
   21600:	ldp	x25, x26, [sp, #64]
   21604:	ldp	x27, x28, [sp, #80]
   21608:	ldp	x29, x30, [sp], #176
   2160c:	ret
   21610:	mov	w4, #0xc                   	// #12
   21614:	stp	xzr, xzr, [sp, #152]
   21618:	b	2150c <printf_parse@@Base+0x40fc>
   2161c:	cbnz	w0, 215c4 <printf_parse@@Base+0x41b4>
   21620:	cmp	w23, #0x0
   21624:	csel	w0, w23, w1, ne  // ne = any
   21628:	ldp	x21, x22, [sp, #32]
   2162c:	ldp	x23, x24, [sp, #48]
   21630:	ldp	x27, x28, [sp, #80]
   21634:	b	215ac <printf_parse@@Base+0x419c>
   21638:	stp	x29, x30, [sp, #-256]!
   2163c:	mov	x29, sp
   21640:	stp	x21, x22, [sp, #32]
   21644:	mov	x22, x0
   21648:	mov	x0, #0x3800                	// #14336
   2164c:	str	x1, [sp, #144]
   21650:	bl	a5f0 <malloc@plt>
   21654:	cbz	x0, 21ea8 <printf_parse@@Base+0x4a98>
   21658:	ldr	x2, [sp, #144]
   2165c:	mov	x4, #0x1800                	// #6144
   21660:	add	x1, x0, x4
   21664:	stp	x19, x20, [sp, #16]
   21668:	add	x11, x2, #0x8
   2166c:	str	x1, [sp, #96]
   21670:	mov	x20, x0
   21674:	stp	xzr, xzr, [sp, #160]
   21678:	ldr	x1, [x11, #8]
   2167c:	stp	xzr, xzr, [x2, #88]
   21680:	stp	xzr, xzr, [sp, #176]
   21684:	cmp	x1, #0x0
   21688:	b.le	21f08 <printf_parse@@Base+0x4af8>
   2168c:	add	x21, sp, #0xc0
   21690:	stp	x25, x26, [sp, #64]
   21694:	add	x25, sp, #0xe0
   21698:	mov	x19, #0x0                   	// #0
   2169c:	mov	x26, #0x0                   	// #0
   216a0:	stp	x23, x24, [sp, #48]
   216a4:	stp	x27, x28, [sp, #80]
   216a8:	lsl	x1, x26, #3
   216ac:	ldr	x0, [x11, #16]
   216b0:	str	x1, [sp, #128]
   216b4:	ldr	x2, [x22]
   216b8:	ldr	x1, [x0, x26, lsl #3]
   216bc:	lsl	x1, x1, #4
   216c0:	add	x12, x2, x1
   216c4:	ldr	w0, [x12, #8]
   216c8:	ldrb	w7, [x12, #8]
   216cc:	ubfx	x0, x0, #8, #10
   216d0:	cmp	w7, #0x1
   216d4:	b.eq	2196c <printf_parse@@Base+0x455c>  // b.none
   216d8:	cmp	w7, #0x3
   216dc:	b.eq	21df0 <printf_parse@@Base+0x49e0>  // b.none
   216e0:	cmp	w7, #0x5
   216e4:	b.eq	21cb8 <printf_parse@@Base+0x48a8>  // b.none
   216e8:	cmp	w7, #0x7
   216ec:	b.eq	21dcc <printf_parse@@Base+0x49bc>  // b.none
   216f0:	ldr	x0, [x11, #8]
   216f4:	add	x26, x26, #0x1
   216f8:	cmp	x26, x0
   216fc:	b.lt	216a8 <printf_parse@@Base+0x4298>  // b.tstop
   21700:	cmp	x19, #0x0
   21704:	b.le	22014 <printf_parse@@Base+0x4c04>
   21708:	add	x23, x19, #0x1
   2170c:	stp	x23, xzr, [sp, #192]
   21710:	lsl	x23, x23, #3
   21714:	mov	x0, x23
   21718:	bl	a5f0 <malloc@plt>
   2171c:	str	x0, [sp, #208]
   21720:	mov	x25, x0
   21724:	cbz	x0, 21c2c <printf_parse@@Base+0x481c>
   21728:	mov	x0, #0xa855                	// #43093
   2172c:	str	wzr, [sp, #160]
   21730:	movk	x0, #0xaaaa, lsl #16
   21734:	movk	x0, #0xaaaa, lsl #32
   21738:	movk	x0, #0xaaa, lsl #48
   2173c:	cmp	x19, x0
   21740:	lsl	x0, x19, #1
   21744:	str	x0, [sp, #104]
   21748:	b.gt	21c38 <printf_parse@@Base+0x4828>
   2174c:	add	x0, x0, x19
   21750:	lsl	x0, x0, #3
   21754:	str	x0, [sp, #136]
   21758:	bl	a5f0 <malloc@plt>
   2175c:	mov	x24, x0
   21760:	cbz	x0, 21c38 <printf_parse@@Base+0x4828>
   21764:	sub	x23, x23, #0x8
   21768:	mov	x2, #0x17f8                	// #6136
   2176c:	add	x0, x0, x23
   21770:	add	x26, x20, #0x8
   21774:	add	x25, x20, x2
   21778:	add	x27, sp, #0xc0
   2177c:	add	x28, sp, #0xa0
   21780:	str	x0, [sp, #112]
   21784:	add	x0, x0, x23
   21788:	mov	x23, #0x0                   	// #0
   2178c:	str	x0, [sp, #120]
   21790:	str	wzr, [sp, #128]
   21794:	stp	xzr, xzr, [sp, #224]
   21798:	stp	xzr, xzr, [sp, #240]
   2179c:	mov	x21, #0x0                   	// #0
   217a0:	ldr	x7, [x26]
   217a4:	str	xzr, [sp, #200]
   217a8:	cmp	x7, #0x0
   217ac:	b.le	217f4 <printf_parse@@Base+0x43e4>
   217b0:	ldr	x4, [x26, #8]
   217b4:	mov	x0, x27
   217b8:	ldr	x1, [x22, #24]
   217bc:	ldr	x4, [x4, x21, lsl #3]
   217c0:	ldr	x4, [x1, x4, lsl #3]
   217c4:	cmn	x4, #0x1
   217c8:	b.eq	217e8 <printf_parse@@Base+0x43d8>  // b.none
   217cc:	ldr	x1, [x22, #48]
   217d0:	add	x4, x4, x4, lsl #1
   217d4:	add	x1, x1, x4, lsl #3
   217d8:	bl	205d8 <printf_parse@@Base+0x31c8>
   217dc:	str	w0, [sp, #160]
   217e0:	cbnz	w0, 21d20 <printf_parse@@Base+0x4910>
   217e4:	ldr	x7, [x26]
   217e8:	add	x21, x21, #0x1
   217ec:	cmp	x7, x21
   217f0:	b.gt	217b0 <printf_parse@@Base+0x43a0>
   217f4:	mov	x2, x27
   217f8:	mov	x1, x22
   217fc:	mov	x0, x28
   21800:	mov	w3, #0x0                   	// #0
   21804:	bl	20d50 <printf_parse@@Base+0x3940>
   21808:	str	x0, [x24, x23, lsl #3]
   2180c:	cbz	x0, 21d18 <printf_parse@@Base+0x4908>
   21810:	ldrsb	w1, [x0, #104]
   21814:	tbnz	w1, #31, 21e2c <printf_parse@@Base+0x4a1c>
   21818:	ldr	x1, [sp, #112]
   2181c:	str	x0, [x1, x23, lsl #3]
   21820:	ldr	x1, [sp, #120]
   21824:	ldr	x0, [x24, x23, lsl #3]
   21828:	str	x0, [x1, x23, lsl #3]
   2182c:	add	x7, sp, #0xe0
   21830:	mov	x0, #0x1                   	// #1
   21834:	mov	x3, x7
   21838:	ldr	x4, [x25, x0, lsl #3]
   2183c:	add	x0, x0, #0x1
   21840:	ldr	x1, [x3]
   21844:	cmp	x0, #0x5
   21848:	orr	x1, x1, x4
   2184c:	str	x1, [x3], #8
   21850:	b.ne	21838 <printf_parse@@Base+0x4428>  // b.any
   21854:	add	x23, x23, #0x1
   21858:	add	x26, x26, #0x18
   2185c:	cmp	x23, x19
   21860:	add	x25, x25, #0x20
   21864:	b.ne	2179c <printf_parse@@Base+0x438c>  // b.any
   21868:	ldr	w0, [sp, #128]
   2186c:	cbnz	w0, 21f58 <printf_parse@@Base+0x4b48>
   21870:	mov	x1, #0x100                 	// #256
   21874:	mov	x0, #0x8                   	// #8
   21878:	bl	a770 <calloc@plt>
   2187c:	mov	x9, x0
   21880:	ldr	x0, [sp, #144]
   21884:	str	x9, [x0, #88]
   21888:	cbz	x9, 21d20 <printf_parse@@Base+0x4910>
   2188c:	ldr	x5, [sp, #96]
   21890:	mov	x0, #0xffffffffffffe8b8    	// #-5960
   21894:	mov	x1, #0xffffffffffffe8e0    	// #-5920
   21898:	add	x6, x22, x0
   2189c:	mov	x8, x9
   218a0:	add	x11, sp, x1
   218a4:	mov	x7, #0x1800                	// #6144
   218a8:	mov	x10, #0x1820                	// #6176
   218ac:	ldr	x0, [x7, x11]
   218b0:	mov	x3, x8
   218b4:	mov	x1, #0x1                   	// #1
   218b8:	cbz	x0, 218d4 <printf_parse@@Base+0x44c4>
   218bc:	nop
   218c0:	tbnz	w0, #0, 21eb8 <printf_parse@@Base+0x4aa8>
   218c4:	lsl	x1, x1, #1
   218c8:	lsr	x0, x0, #1
   218cc:	add	x3, x3, #0x8
   218d0:	cbnz	x0, 218c0 <printf_parse@@Base+0x44b0>
   218d4:	add	x7, x7, #0x8
   218d8:	add	x8, x8, #0x200
   218dc:	cmp	x7, x10
   218e0:	add	x5, x5, #0x8
   218e4:	b.ne	218ac <printf_parse@@Base+0x449c>  // b.any
   218e8:	ldr	x0, [sp, #224]
   218ec:	tst	w0, #0x400
   218f0:	b.eq	21918 <printf_parse@@Base+0x4508>  // b.none
   218f4:	mov	x0, #0x0                   	// #0
   218f8:	ldr	x2, [sp, #96]
   218fc:	lsl	x1, x0, #5
   21900:	ldr	x1, [x2, x1]
   21904:	tst	w1, #0x400
   21908:	b.ne	21f3c <printf_parse@@Base+0x4b2c>  // b.any
   2190c:	add	x0, x0, #0x1
   21910:	cmp	x0, x19
   21914:	b.ne	218f8 <printf_parse@@Base+0x44e8>  // b.any
   21918:	mov	x0, x24
   2191c:	bl	aa50 <free@plt>
   21920:	ldr	x1, [sp, #136]
   21924:	mov	x21, x20
   21928:	ldr	x0, [sp, #208]
   2192c:	add	x19, x20, x1
   21930:	bl	aa50 <free@plt>
   21934:	nop
   21938:	ldr	x0, [x21, #16]
   2193c:	add	x21, x21, #0x18
   21940:	bl	aa50 <free@plt>
   21944:	cmp	x19, x21
   21948:	b.ne	21938 <printf_parse@@Base+0x4528>  // b.any
   2194c:	mov	x0, x20
   21950:	bl	aa50 <free@plt>
   21954:	mov	w0, #0x1                   	// #1
   21958:	ldp	x19, x20, [sp, #16]
   2195c:	ldp	x23, x24, [sp, #48]
   21960:	ldp	x25, x26, [sp, #64]
   21964:	ldp	x27, x28, [sp, #80]
   21968:	b	21c80 <printf_parse@@Base+0x4870>
   2196c:	ldrb	w2, [x2, x1]
   21970:	add	x28, sp, #0xa0
   21974:	mov	x1, #0x1                   	// #1
   21978:	ubfx	x3, x2, #6, #2
   2197c:	lsl	x2, x1, x2
   21980:	ldr	x1, [x28, x3, lsl #3]
   21984:	orr	x1, x1, x2
   21988:	str	x1, [x28, x3, lsl #3]
   2198c:	cbz	w0, 21a48 <printf_parse@@Base+0x4638>
   21990:	tbnz	w0, #5, 21c0c <printf_parse@@Base+0x47fc>
   21994:	tbnz	w0, #7, 21c00 <printf_parse@@Base+0x47f0>
   21998:	tbz	w0, #2, 219f0 <printf_parse@@Base+0x45e0>
   2199c:	cmp	w7, #0x1
   219a0:	b.eq	21db4 <printf_parse@@Base+0x49a4>  // b.none
   219a4:	ldr	w1, [x22, #180]
   219a8:	cmp	w1, #0x1
   219ac:	b.le	21d7c <printf_parse@@Base+0x496c>
   219b0:	ldr	x15, [x22, #120]
   219b4:	mov	x5, x28
   219b8:	add	x3, x22, #0xb8
   219bc:	mov	x4, #0x0                   	// #0
   219c0:	mov	x2, #0x0                   	// #0
   219c4:	ldr	x1, [x15, x2, lsl #3]
   219c8:	ldr	x14, [x3, x2, lsl #3]
   219cc:	add	x2, x2, #0x1
   219d0:	ldr	x13, [x5]
   219d4:	orn	x1, x14, x1
   219d8:	cmp	x2, #0x4
   219dc:	and	x1, x1, x13
   219e0:	str	x1, [x5], #8
   219e4:	orr	x4, x4, x1
   219e8:	b.ne	219c4 <printf_parse@@Base+0x45b4>  // b.any
   219ec:	cbz	x4, 216f0 <printf_parse@@Base+0x42e0>
   219f0:	tbz	w0, #3, 21a48 <printf_parse@@Base+0x4638>
   219f4:	cmp	w7, #0x1
   219f8:	b.eq	21e20 <printf_parse@@Base+0x4a10>  // b.none
   219fc:	ldr	w0, [x22, #180]
   21a00:	cmp	w0, #0x1
   21a04:	b.le	21d44 <printf_parse@@Base+0x4934>
   21a08:	ldr	x14, [x22, #120]
   21a0c:	mov	x4, x28
   21a10:	add	x3, x22, #0xb8
   21a14:	mov	x2, #0x0                   	// #0
   21a18:	mov	x1, #0x0                   	// #0
   21a1c:	ldr	x13, [x14, x1, lsl #3]
   21a20:	ldr	x0, [x3, x1, lsl #3]
   21a24:	add	x1, x1, #0x1
   21a28:	ldr	x5, [x4]
   21a2c:	and	x0, x0, x13
   21a30:	cmp	x1, #0x4
   21a34:	bic	x0, x5, x0
   21a38:	str	x0, [x4], #8
   21a3c:	orr	x2, x2, x0
   21a40:	b.ne	21a1c <printf_parse@@Base+0x460c>  // b.any
   21a44:	cbz	x2, 216f0 <printf_parse@@Base+0x42e0>
   21a48:	mov	x3, #0x17f8                	// #6136
   21a4c:	cmp	x19, #0x0
   21a50:	add	x24, x20, x3
   21a54:	mov	x23, #0x0                   	// #0
   21a58:	b.gt	21a8c <printf_parse@@Base+0x467c>
   21a5c:	b	21ba0 <printf_parse@@Base+0x4790>
   21a60:	ldrb	w2, [x12]
   21a64:	ldr	x3, [sp, #96]
   21a68:	ubfx	x1, x2, #6, #2
   21a6c:	add	x1, x3, x1, lsl #3
   21a70:	ldr	x0, [x1, x0]
   21a74:	lsr	x0, x0, x2
   21a78:	tbnz	w0, #0, 21a98 <printf_parse@@Base+0x4688>
   21a7c:	add	x23, x23, #0x1
   21a80:	add	x24, x24, #0x20
   21a84:	cmp	x23, x19
   21a88:	b.ge	21ba0 <printf_parse@@Base+0x4790>  // b.tcont
   21a8c:	cmp	w7, #0x1
   21a90:	lsl	x0, x23, #5
   21a94:	b.eq	21a60 <printf_parse@@Base+0x4650>  // b.none
   21a98:	mov	x0, #0x1                   	// #1
   21a9c:	mov	x3, #0x0                   	// #0
   21aa0:	lsl	x1, x0, #3
   21aa4:	add	x5, x28, x1
   21aa8:	add	x2, x21, x1
   21aac:	ldr	x4, [x24, x0, lsl #3]
   21ab0:	add	x0, x0, #0x1
   21ab4:	ldur	x1, [x5, #-8]
   21ab8:	cmp	x0, #0x5
   21abc:	and	x1, x1, x4
   21ac0:	stur	x1, [x2, #-8]
   21ac4:	orr	x3, x3, x1
   21ac8:	b.ne	21aa0 <printf_parse@@Base+0x4690>  // b.any
   21acc:	cbz	x3, 21a7c <printf_parse@@Base+0x466c>
   21ad0:	mov	x2, x28
   21ad4:	mov	x1, #0x1                   	// #1
   21ad8:	mov	x27, #0x0                   	// #0
   21adc:	mov	x5, #0x0                   	// #0
   21ae0:	add	x13, x25, x1, lsl #3
   21ae4:	ldr	x0, [x24, x1, lsl #3]
   21ae8:	add	x1, x1, #0x1
   21aec:	ldr	x4, [x2]
   21af0:	cmp	x1, #0x5
   21af4:	bic	x3, x0, x4
   21af8:	bic	x0, x4, x0
   21afc:	stur	x3, [x13, #-8]
   21b00:	orr	x5, x5, x3
   21b04:	str	x0, [x2], #8
   21b08:	orr	x27, x27, x0
   21b0c:	b.ne	21ae0 <printf_parse@@Base+0x46d0>  // b.any
   21b10:	add	x1, x23, x23, lsl #1
   21b14:	add	x1, x20, x1, lsl #3
   21b18:	cbz	x5, 21b70 <printf_parse@@Base+0x4760>
   21b1c:	ldr	x0, [sp, #96]
   21b20:	stp	x1, x12, [sp, #104]
   21b24:	ldp	x4, x5, [x25]
   21b28:	add	x13, x0, x19, lsl #5
   21b2c:	ldp	x2, x3, [x25, #16]
   21b30:	add	x0, x19, x19, lsl #1
   21b34:	stp	x4, x5, [x13]
   21b38:	add	x0, x20, x0, lsl #3
   21b3c:	stp	x2, x3, [x13, #16]
   21b40:	ldp	x2, x3, [x21]
   21b44:	stp	x2, x3, [x24, #8]
   21b48:	ldp	x2, x3, [x21, #16]
   21b4c:	stp	x2, x3, [x24, #24]
   21b50:	str	w7, [sp, #120]
   21b54:	str	x11, [sp, #136]
   21b58:	bl	20b50 <printf_parse@@Base+0x3740>
   21b5c:	cbnz	w0, 21c98 <printf_parse@@Base+0x4888>
   21b60:	ldp	x1, x12, [sp, #104]
   21b64:	add	x19, x19, #0x1
   21b68:	ldr	w7, [sp, #120]
   21b6c:	ldr	x11, [sp, #136]
   21b70:	mov	x0, x1
   21b74:	ldr	x2, [x11, #16]
   21b78:	stp	x11, x12, [sp, #104]
   21b7c:	ldr	x1, [sp, #128]
   21b80:	str	w7, [sp, #120]
   21b84:	ldr	x1, [x2, x1]
   21b88:	bl	1e670 <printf_parse@@Base+0x1260>
   21b8c:	tst	w0, #0xff
   21b90:	b.eq	21c98 <printf_parse@@Base+0x4888>  // b.none
   21b94:	ldr	w7, [sp, #120]
   21b98:	ldp	x11, x12, [sp, #104]
   21b9c:	cbnz	x27, 21a7c <printf_parse@@Base+0x466c>
   21ba0:	cmp	x19, x23
   21ba4:	b.ne	216f0 <printf_parse@@Base+0x42e0>  // b.any
   21ba8:	ldr	x0, [sp, #96]
   21bac:	add	x2, x19, x19, lsl #1
   21bb0:	ldr	x5, [x11, #16]
   21bb4:	add	x24, x20, x2, lsl #3
   21bb8:	add	x3, x0, x19, lsl #5
   21bbc:	mov	x4, #0x1                   	// #1
   21bc0:	ldp	x0, x1, [x28]
   21bc4:	str	x11, [sp, #104]
   21bc8:	stp	x0, x1, [x3]
   21bcc:	ldp	x0, x1, [x28, #16]
   21bd0:	stp	x0, x1, [x3, #16]
   21bd4:	ldr	x1, [sp, #128]
   21bd8:	mov	x0, #0x8                   	// #8
   21bdc:	ldr	x23, [x5, x1]
   21be0:	str	x4, [x20, x2, lsl #3]
   21be4:	str	x4, [x24, #8]
   21be8:	bl	a5f0 <malloc@plt>
   21bec:	str	x0, [x24, #16]
   21bf0:	ldr	x11, [sp, #104]
   21bf4:	cbz	x0, 21c8c <printf_parse@@Base+0x487c>
   21bf8:	add	x19, x19, #0x1
   21bfc:	str	x23, [x0]
   21c00:	stp	xzr, xzr, [x28]
   21c04:	stp	xzr, xzr, [x28, #16]
   21c08:	b	216f0 <printf_parse@@Base+0x42e0>
   21c0c:	ldr	x1, [sp, #160]
   21c10:	stp	xzr, xzr, [x28]
   21c14:	stp	xzr, xzr, [x28, #16]
   21c18:	tst	w1, #0x400
   21c1c:	b.eq	216f0 <printf_parse@@Base+0x42e0>  // b.none
   21c20:	mov	x1, #0x400                 	// #1024
   21c24:	str	x1, [sp, #160]
   21c28:	b	21994 <printf_parse@@Base+0x4584>
   21c2c:	lsl	x0, x19, #1
   21c30:	str	x0, [sp, #104]
   21c34:	nop
   21c38:	mov	x0, x25
   21c3c:	bl	aa50 <free@plt>
   21c40:	ldr	x0, [sp, #104]
   21c44:	mov	x21, x20
   21c48:	add	x19, x0, x19
   21c4c:	add	x19, x20, x19, lsl #3
   21c50:	ldr	x0, [x21, #16]
   21c54:	add	x21, x21, #0x18
   21c58:	bl	aa50 <free@plt>
   21c5c:	cmp	x19, x21
   21c60:	b.ne	21c50 <printf_parse@@Base+0x4840>  // b.any
   21c64:	mov	x0, x20
   21c68:	bl	aa50 <free@plt>
   21c6c:	ldp	x19, x20, [sp, #16]
   21c70:	mov	w0, #0x0                   	// #0
   21c74:	ldp	x23, x24, [sp, #48]
   21c78:	ldp	x25, x26, [sp, #64]
   21c7c:	ldp	x27, x28, [sp, #80]
   21c80:	ldp	x21, x22, [sp, #32]
   21c84:	ldp	x29, x30, [sp], #256
   21c88:	ret
   21c8c:	stp	xzr, xzr, [x24]
   21c90:	cbz	x19, 21c64 <printf_parse@@Base+0x4854>
   21c94:	nop
   21c98:	add	x22, x20, #0x10
   21c9c:	mov	x21, #0x0                   	// #0
   21ca0:	ldr	x0, [x22], #24
   21ca4:	add	x21, x21, #0x1
   21ca8:	bl	aa50 <free@plt>
   21cac:	cmp	x19, x21
   21cb0:	b.gt	21ca0 <printf_parse@@Base+0x4890>
   21cb4:	b	21c64 <printf_parse@@Base+0x4854>
   21cb8:	ldr	w1, [x22, #180]
   21cbc:	add	x28, sp, #0xa0
   21cc0:	cmp	w1, #0x1
   21cc4:	b.le	21d30 <printf_parse@@Base+0x4920>
   21cc8:	ldr	x5, [x22, #120]
   21ccc:	mov	x3, x28
   21cd0:	mov	x1, #0x0                   	// #0
   21cd4:	ldr	x4, [x5, x1]
   21cd8:	add	x1, x1, #0x8
   21cdc:	ldr	x2, [x3]
   21ce0:	cmp	x1, #0x20
   21ce4:	orr	x2, x2, x4
   21ce8:	str	x2, [x3], #8
   21cec:	b.ne	21cd4 <printf_parse@@Base+0x48c4>  // b.any
   21cf0:	ldr	x1, [x22, #216]
   21cf4:	tbnz	w1, #6, 21d04 <printf_parse@@Base+0x48f4>
   21cf8:	ldr	x2, [sp, #160]
   21cfc:	and	x2, x2, #0xfffffffffffffbff
   21d00:	str	x2, [sp, #160]
   21d04:	tbz	w1, #7, 2198c <printf_parse@@Base+0x457c>
   21d08:	ldr	x1, [sp, #160]
   21d0c:	and	x1, x1, #0xfffffffffffffffe
   21d10:	str	x1, [sp, #160]
   21d14:	b	2198c <printf_parse@@Base+0x457c>
   21d18:	ldr	w1, [sp, #160]
   21d1c:	cbz	w1, 21810 <printf_parse@@Base+0x4400>
   21d20:	mov	x0, x24
   21d24:	bl	aa50 <free@plt>
   21d28:	ldr	x25, [sp, #208]
   21d2c:	b	21c38 <printf_parse@@Base+0x4828>
   21d30:	mov	x2, #0xffffffffffffffff    	// #-1
   21d34:	mov	x3, #0xffffffffffffffff    	// #-1
   21d38:	stp	x2, x3, [sp, #160]
   21d3c:	stp	x2, x3, [sp, #176]
   21d40:	b	21cf0 <printf_parse@@Base+0x48e0>
   21d44:	mov	x4, x28
   21d48:	add	x3, x22, #0xb8
   21d4c:	mov	x2, #0x0                   	// #0
   21d50:	mov	x1, #0x0                   	// #0
   21d54:	ldr	x0, [x3, x1, lsl #3]
   21d58:	add	x1, x1, #0x1
   21d5c:	ldr	x5, [x4]
   21d60:	cmp	x1, #0x4
   21d64:	bic	x0, x5, x0
   21d68:	str	x0, [x4], #8
   21d6c:	orr	x2, x2, x0
   21d70:	b.ne	21d54 <printf_parse@@Base+0x4944>  // b.any
   21d74:	cbz	x2, 216f0 <printf_parse@@Base+0x42e0>
   21d78:	b	21a48 <printf_parse@@Base+0x4638>
   21d7c:	mov	x5, x28
   21d80:	add	x3, x22, #0xb8
   21d84:	mov	x4, #0x0                   	// #0
   21d88:	mov	x2, #0x0                   	// #0
   21d8c:	ldr	x1, [x3, x2, lsl #3]
   21d90:	add	x2, x2, #0x1
   21d94:	ldr	x13, [x5]
   21d98:	cmp	x2, #0x4
   21d9c:	and	x1, x1, x13
   21da0:	str	x1, [x5], #8
   21da4:	orr	x4, x4, x1
   21da8:	b.ne	21d8c <printf_parse@@Base+0x497c>  // b.any
   21dac:	cbnz	x4, 219f0 <printf_parse@@Base+0x45e0>
   21db0:	b	216f0 <printf_parse@@Base+0x42e0>
   21db4:	ldrb	w1, [x12, #10]
   21db8:	tbz	w1, #6, 21c00 <printf_parse@@Base+0x47f0>
   21dbc:	ldr	w1, [x22, #180]
   21dc0:	cmp	w1, #0x1
   21dc4:	b.gt	219b0 <printf_parse@@Base+0x45a0>
   21dc8:	b	21d7c <printf_parse@@Base+0x496c>
   21dcc:	ldr	x1, [x22, #216]
   21dd0:	mov	x2, #0xffffffffffffffff    	// #-1
   21dd4:	mov	x3, #0xffffffffffffffff    	// #-1
   21dd8:	stp	x2, x3, [sp, #160]
   21ddc:	add	x28, sp, #0xa0
   21de0:	tbnz	w1, #6, 21d04 <printf_parse@@Base+0x48f4>
   21de4:	mov	x2, #0xfffffffffffffbff    	// #-1025
   21de8:	str	x2, [sp, #160]
   21dec:	b	21d04 <printf_parse@@Base+0x48f4>
   21df0:	add	x28, sp, #0xa0
   21df4:	mov	x3, #0x0                   	// #0
   21df8:	ldr	x5, [x2, x1]
   21dfc:	mov	x2, x28
   21e00:	ldr	x4, [x5, x3]
   21e04:	add	x3, x3, #0x8
   21e08:	ldr	x1, [x2]
   21e0c:	cmp	x3, #0x20
   21e10:	orr	x1, x1, x4
   21e14:	str	x1, [x2], #8
   21e18:	b.ne	21e00 <printf_parse@@Base+0x49f0>  // b.any
   21e1c:	b	2198c <printf_parse@@Base+0x457c>
   21e20:	ldrb	w0, [x12, #10]
   21e24:	tbz	w0, #6, 219fc <printf_parse@@Base+0x45ec>
   21e28:	b	21c00 <printf_parse@@Base+0x47f0>
   21e2c:	mov	x1, x22
   21e30:	mov	x2, x27
   21e34:	mov	x0, x28
   21e38:	mov	w3, #0x1                   	// #1
   21e3c:	bl	20d50 <printf_parse@@Base+0x3940>
   21e40:	ldr	x1, [sp, #112]
   21e44:	str	x0, [x1, x23, lsl #3]
   21e48:	cbz	x0, 21f30 <printf_parse@@Base+0x4b20>
   21e4c:	ldr	x1, [x24, x23, lsl #3]
   21e50:	cmp	x0, x1
   21e54:	b.eq	21e6c <printf_parse@@Base+0x4a5c>  // b.none
   21e58:	ldr	w0, [x22, #180]
   21e5c:	cmp	w0, #0x2
   21e60:	ldr	w0, [sp, #128]
   21e64:	csinc	w0, w0, wzr, lt  // lt = tstop
   21e68:	str	w0, [sp, #128]
   21e6c:	mov	x1, x22
   21e70:	mov	x2, x27
   21e74:	mov	x0, x28
   21e78:	mov	w3, #0x2                   	// #2
   21e7c:	bl	20d50 <printf_parse@@Base+0x3940>
   21e80:	ldr	x1, [sp, #120]
   21e84:	str	x0, [x1, x23, lsl #3]
   21e88:	cbnz	x0, 2182c <printf_parse@@Base+0x441c>
   21e8c:	ldr	w0, [sp, #160]
   21e90:	cbz	w0, 2182c <printf_parse@@Base+0x441c>
   21e94:	b	21d20 <printf_parse@@Base+0x4910>
   21e98:	ldp	x19, x20, [sp, #16]
   21e9c:	ldp	x23, x24, [sp, #48]
   21ea0:	ldp	x25, x26, [sp, #64]
   21ea4:	ldp	x27, x28, [sp, #80]
   21ea8:	mov	w0, #0x0                   	// #0
   21eac:	ldp	x21, x22, [sp, #32]
   21eb0:	ldp	x29, x30, [sp], #256
   21eb4:	ret
   21eb8:	ldr	x2, [x5]
   21ebc:	tst	x1, x2
   21ec0:	mov	x2, #0x0                   	// #0
   21ec4:	b.ne	21ee0 <printf_parse@@Base+0x4ad0>  // b.any
   21ec8:	add	x2, x2, #0x1
   21ecc:	lsl	x4, x2, #5
   21ed0:	ldr	x4, [x5, x4]
   21ed4:	tst	x1, x4
   21ed8:	b.eq	21ec8 <printf_parse@@Base+0x4ab8>  // b.none
   21edc:	lsl	x2, x2, #3
   21ee0:	ldr	x4, [x6, x7]
   21ee4:	tst	x1, x4
   21ee8:	b.eq	21efc <printf_parse@@Base+0x4aec>  // b.none
   21eec:	ldr	x4, [sp, #112]
   21ef0:	ldr	x2, [x4, x2]
   21ef4:	str	x2, [x3]
   21ef8:	b	218c4 <printf_parse@@Base+0x44b4>
   21efc:	ldr	x2, [x24, x2]
   21f00:	str	x2, [x3]
   21f04:	b	218c4 <printf_parse@@Base+0x44b4>
   21f08:	bl	aa50 <free@plt>
   21f0c:	mov	x1, #0x100                 	// #256
   21f10:	mov	x0, #0x8                   	// #8
   21f14:	bl	a770 <calloc@plt>
   21f18:	cmp	x0, #0x0
   21f1c:	ldr	x1, [sp, #144]
   21f20:	ldp	x19, x20, [sp, #16]
   21f24:	str	x0, [x1, #88]
   21f28:	cset	w0, ne  // ne = any
   21f2c:	b	21c80 <printf_parse@@Base+0x4870>
   21f30:	ldr	w1, [sp, #160]
   21f34:	cbz	w1, 21e4c <printf_parse@@Base+0x4a3c>
   21f38:	b	21d20 <printf_parse@@Base+0x4910>
   21f3c:	ldr	x1, [sp, #120]
   21f40:	ldr	x0, [x1, x0, lsl #3]
   21f44:	str	x0, [x9, #80]
   21f48:	ldr	w1, [sp, #128]
   21f4c:	cbz	w1, 21918 <printf_parse@@Base+0x4508>
   21f50:	str	x0, [x9, #2128]
   21f54:	b	21918 <printf_parse@@Base+0x4508>
   21f58:	mov	x1, #0x200                 	// #512
   21f5c:	mov	x0, #0x8                   	// #8
   21f60:	str	x7, [sp, #152]
   21f64:	bl	a770 <calloc@plt>
   21f68:	mov	x9, x0
   21f6c:	ldr	x0, [sp, #144]
   21f70:	str	x9, [x0, #96]
   21f74:	cbz	x9, 21d20 <printf_parse@@Base+0x4910>
   21f78:	ldr	x5, [sp, #96]
   21f7c:	add	x10, x9, #0x800
   21f80:	ldr	x7, [sp, #152]
   21f84:	mov	w8, #0x0                   	// #0
   21f88:	ldr	x0, [x7]
   21f8c:	mov	x3, x10
   21f90:	mov	x2, #0x1                   	// #1
   21f94:	cbz	x0, 21fac <printf_parse@@Base+0x4b9c>
   21f98:	tbnz	w0, #0, 21fc8 <printf_parse@@Base+0x4bb8>
   21f9c:	lsl	x2, x2, #1
   21fa0:	lsr	x0, x0, #1
   21fa4:	add	x3, x3, #0x8
   21fa8:	cbnz	x0, 21f98 <printf_parse@@Base+0x4b88>
   21fac:	add	w8, w8, #0x40
   21fb0:	add	x7, x7, #0x8
   21fb4:	cmp	w8, #0x100
   21fb8:	add	x10, x10, #0x200
   21fbc:	add	x5, x5, #0x8
   21fc0:	b.ne	21f88 <printf_parse@@Base+0x4b78>  // b.any
   21fc4:	b	218e8 <printf_parse@@Base+0x44d8>
   21fc8:	ldr	x1, [x5]
   21fcc:	tst	x2, x1
   21fd0:	b.ne	2200c <printf_parse@@Base+0x4bfc>  // b.any
   21fd4:	mov	x1, #0x0                   	// #0
   21fd8:	add	x1, x1, #0x1
   21fdc:	mov	x6, x1
   21fe0:	lsl	x4, x1, #5
   21fe4:	ldr	x4, [x5, x4]
   21fe8:	tst	x2, x4
   21fec:	b.eq	21fd8 <printf_parse@@Base+0x4bc8>  // b.none
   21ff0:	sub	x1, x3, #0x8, lsl #12
   21ff4:	ldr	x4, [x24, x6, lsl #3]
   21ff8:	str	x4, [x1, #30720]
   21ffc:	ldr	x1, [sp, #112]
   22000:	ldr	x1, [x1, x6, lsl #3]
   22004:	str	x1, [x3]
   22008:	b	21f9c <printf_parse@@Base+0x4b8c>
   2200c:	mov	x6, #0x0                   	// #0
   22010:	b	21ff0 <printf_parse@@Base+0x4be0>
   22014:	mov	x0, x20
   22018:	bl	aa50 <free@plt>
   2201c:	cbnz	x19, 21e98 <printf_parse@@Base+0x4a88>
   22020:	ldp	x23, x24, [sp, #48]
   22024:	ldp	x25, x26, [sp, #64]
   22028:	ldp	x27, x28, [sp, #80]
   2202c:	b	21f0c <printf_parse@@Base+0x4afc>
   22030:	ldr	x4, [x1, #8]
   22034:	cbz	x4, 221a8 <printf_parse@@Base+0x4d98>
   22038:	stp	x29, x30, [sp, #-48]!
   2203c:	mov	x29, sp
   22040:	ldr	x8, [x2, #8]
   22044:	stp	x19, x20, [sp, #16]
   22048:	mov	x19, x0
   2204c:	stp	x21, x22, [sp, #32]
   22050:	mov	w0, #0x0                   	// #0
   22054:	mov	x21, x2
   22058:	cbz	x8, 2214c <printf_parse@@Base+0x4d3c>
   2205c:	ldp	x22, x3, [x19]
   22060:	mov	x20, x1
   22064:	add	x1, x4, x8
   22068:	ldr	x0, [x19, #16]
   2206c:	add	x2, x1, x3
   22070:	cmp	x2, x22
   22074:	b.gt	221b0 <printf_parse@@Base+0x4da0>
   22078:	ldr	x10, [x20, #16]
   2207c:	sub	x6, x4, #0x1
   22080:	ldr	x9, [x21, #16]
   22084:	sub	x7, x8, #0x1
   22088:	add	x4, x3, x4
   2208c:	sub	x3, x3, #0x1
   22090:	add	x8, x4, x8
   22094:	ldr	x5, [x9, x7, lsl #3]
   22098:	ldr	x4, [x10, x6, lsl #3]
   2209c:	nop
   220a0:	cmp	x4, x5
   220a4:	b.eq	220c0 <printf_parse@@Base+0x4cb0>  // b.none
   220a8:	b.ge	22198 <printf_parse@@Base+0x4d88>  // b.tcont
   220ac:	subs	x7, x7, #0x1
   220b0:	b.mi	22108 <printf_parse@@Base+0x4cf8>  // b.first
   220b4:	ldr	x5, [x9, x7, lsl #3]
   220b8:	cmp	x4, x5
   220bc:	b.ne	220a8 <printf_parse@@Base+0x4c98>  // b.any
   220c0:	tbz	x3, #63, 220d4 <printf_parse@@Base+0x4cc4>
   220c4:	b	220e4 <printf_parse@@Base+0x4cd4>
   220c8:	sub	x3, x3, #0x1
   220cc:	cmn	x3, #0x1
   220d0:	b.eq	220e4 <printf_parse@@Base+0x4cd4>  // b.none
   220d4:	ldr	x5, [x0, x3, lsl #3]
   220d8:	cmp	x5, x4
   220dc:	b.gt	220c8 <printf_parse@@Base+0x4cb8>
   220e0:	b.eq	220ec <printf_parse@@Base+0x4cdc>  // b.none
   220e4:	sub	x8, x8, #0x1
   220e8:	str	x4, [x0, x8, lsl #3]
   220ec:	subs	x6, x6, #0x1
   220f0:	b.mi	22108 <printf_parse@@Base+0x4cf8>  // b.first
   220f4:	subs	x7, x7, #0x1
   220f8:	b.mi	22108 <printf_parse@@Base+0x4cf8>  // b.first
   220fc:	ldr	x4, [x10, x6, lsl #3]
   22100:	ldr	x5, [x9, x7, lsl #3]
   22104:	b	220b8 <printf_parse@@Base+0x4ca8>
   22108:	ldr	x1, [x19, #8]
   2210c:	ldr	x4, [x20, #8]
   22110:	sub	x2, x1, #0x1
   22114:	ldr	x3, [x21, #8]
   22118:	add	x4, x1, x4
   2211c:	add	x4, x4, x3
   22120:	sub	x3, x4, x8
   22124:	sub	x4, x4, #0x1
   22128:	add	x1, x1, x3
   2212c:	str	x1, [x19, #8]
   22130:	cmp	x3, #0x0
   22134:	ccmp	x2, #0x0, #0x1, gt
   22138:	b.ge	2216c <printf_parse@@Base+0x4d5c>  // b.tcont
   2213c:	lsl	x2, x3, #3
   22140:	add	x1, x0, x8, lsl #3
   22144:	bl	a2c0 <memcpy@plt>
   22148:	mov	w0, #0x0                   	// #0
   2214c:	ldp	x19, x20, [sp, #16]
   22150:	ldp	x21, x22, [sp, #32]
   22154:	ldp	x29, x30, [sp], #48
   22158:	ret
   2215c:	str	x1, [x0, x6, lsl #3]
   22160:	sub	x2, x2, #0x1
   22164:	cmn	x2, #0x1
   22168:	b.eq	2213c <printf_parse@@Base+0x4d2c>  // b.none
   2216c:	ldr	x5, [x0, x4, lsl #3]
   22170:	add	x6, x2, x3
   22174:	ldr	x1, [x0, x2, lsl #3]
   22178:	cmp	x5, x1
   2217c:	b.le	2215c <printf_parse@@Base+0x4d4c>
   22180:	str	x5, [x0, x6, lsl #3]
   22184:	sub	x4, x4, #0x1
   22188:	subs	x3, x3, #0x1
   2218c:	b.ne	2216c <printf_parse@@Base+0x4d5c>  // b.any
   22190:	mov	x2, #0x0                   	// #0
   22194:	b	22140 <printf_parse@@Base+0x4d30>
   22198:	subs	x6, x6, #0x1
   2219c:	b.mi	22108 <printf_parse@@Base+0x4cf8>  // b.first
   221a0:	ldr	x4, [x10, x6, lsl #3]
   221a4:	b	220a0 <printf_parse@@Base+0x4c90>
   221a8:	mov	w0, #0x0                   	// #0
   221ac:	ret
   221b0:	add	x22, x1, x22
   221b4:	lsl	x1, x22, #3
   221b8:	bl	a7e0 <realloc@plt>
   221bc:	cbz	x0, 221d8 <printf_parse@@Base+0x4dc8>
   221c0:	ldr	x4, [x20, #8]
   221c4:	ldr	x8, [x21, #8]
   221c8:	str	x22, [x19]
   221cc:	str	x0, [x19, #16]
   221d0:	ldr	x3, [x19, #8]
   221d4:	b	22078 <printf_parse@@Base+0x4c68>
   221d8:	mov	w0, #0xc                   	// #12
   221dc:	b	2214c <printf_parse@@Base+0x4d3c>
   221e0:	stp	x29, x30, [sp, #-128]!
   221e4:	mov	x29, sp
   221e8:	stp	x27, x28, [sp, #80]
   221ec:	mov	x27, x0
   221f0:	ldr	x0, [x0, #56]
   221f4:	stp	x19, x20, [sp, #16]
   221f8:	add	x19, x1, x1, lsl #1
   221fc:	stp	xzr, xzr, [sp, #104]
   22200:	add	x19, x0, x19, lsl #3
   22204:	str	xzr, [sp, #120]
   22208:	ldr	x7, [x19, #8]
   2220c:	cmp	x7, #0x0
   22210:	b.le	223e8 <printf_parse@@Base+0x4fd8>
   22214:	mov	x20, x1
   22218:	stp	x21, x22, [sp, #32]
   2221c:	mov	x21, x2
   22220:	add	x22, x19, #0x10
   22224:	stp	x23, x24, [sp, #48]
   22228:	mov	x23, x3
   2222c:	add	x24, x2, #0x10
   22230:	stp	x25, x26, [sp, #64]
   22234:	add	x25, sp, #0x68
   22238:	mov	x26, #0x0                   	// #0
   2223c:	b	22284 <printf_parse@@Base+0x4e74>
   22240:	cbnz	x0, 2232c <printf_parse@@Base+0x4f1c>
   22244:	ldr	x0, [x21, #8]
   22248:	mov	x1, x24
   2224c:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   22250:	cbz	x0, 2232c <printf_parse@@Base+0x4f1c>
   22254:	ldr	x2, [x27, #56]
   22258:	mov	x1, x23
   2225c:	mov	x0, x25
   22260:	add	x2, x2, x6
   22264:	bl	22030 <printf_parse@@Base+0x4c20>
   22268:	mov	w28, w0
   2226c:	cbnz	w0, 22304 <printf_parse@@Base+0x4ef4>
   22270:	ldr	x7, [x19, #8]
   22274:	nop
   22278:	add	x26, x26, #0x1
   2227c:	cmp	x7, x26
   22280:	b.le	22348 <printf_parse@@Base+0x4f38>
   22284:	ldr	x1, [x19, #16]
   22288:	ldr	x4, [x1, x26, lsl #3]
   2228c:	cmp	x20, x4
   22290:	b.eq	22278 <printf_parse@@Base+0x4e68>  // b.none
   22294:	ldr	x1, [x27]
   22298:	add	x1, x1, x4, lsl #4
   2229c:	ldrb	w0, [x1, #8]
   222a0:	tbz	w0, #3, 22278 <printf_parse@@Base+0x4e68>
   222a4:	add	x4, x4, x4, lsl #1
   222a8:	mov	x1, x22
   222ac:	ldr	x8, [x27, #40]
   222b0:	lsl	x6, x4, #3
   222b4:	mov	x0, x7
   222b8:	add	x8, x8, x6
   222bc:	ldr	x9, [x8, #16]
   222c0:	ldr	x2, [x9]
   222c4:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   222c8:	ldr	x1, [x8, #8]
   222cc:	cmp	x1, #0x1
   222d0:	b.gt	22240 <printf_parse@@Base+0x4e30>
   222d4:	cbnz	x0, 22278 <printf_parse@@Base+0x4e68>
   222d8:	ldr	x0, [x21, #8]
   222dc:	mov	x1, x24
   222e0:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   222e4:	cbz	x0, 22278 <printf_parse@@Base+0x4e68>
   222e8:	ldr	x2, [x27, #56]
   222ec:	mov	x1, x23
   222f0:	mov	x0, x25
   222f4:	add	x2, x2, x6
   222f8:	bl	22030 <printf_parse@@Base+0x4c20>
   222fc:	mov	w28, w0
   22300:	cbz	w0, 22270 <printf_parse@@Base+0x4e60>
   22304:	ldr	x0, [sp, #120]
   22308:	bl	aa50 <free@plt>
   2230c:	mov	w0, w28
   22310:	ldp	x19, x20, [sp, #16]
   22314:	ldp	x21, x22, [sp, #32]
   22318:	ldp	x23, x24, [sp, #48]
   2231c:	ldp	x25, x26, [sp, #64]
   22320:	ldp	x27, x28, [sp, #80]
   22324:	ldp	x29, x30, [sp], #128
   22328:	ret
   2232c:	ldr	x2, [x9, #8]
   22330:	cmp	x2, #0x0
   22334:	b.le	22278 <printf_parse@@Base+0x4e68>
   22338:	mov	x1, x22
   2233c:	mov	x0, x7
   22340:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   22344:	b	222d4 <printf_parse@@Base+0x4ec4>
   22348:	cmp	x7, #0x0
   2234c:	add	x10, sp, #0x78
   22350:	add	x9, x21, #0x10
   22354:	add	x11, x21, #0x8
   22358:	mov	x6, #0x0                   	// #0
   2235c:	b.le	223bc <printf_parse@@Base+0x4fac>
   22360:	ldr	x2, [x19, #16]
   22364:	mov	x1, x10
   22368:	ldr	x0, [sp, #112]
   2236c:	ldr	x2, [x2, x6, lsl #3]
   22370:	add	x6, x6, #0x1
   22374:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   22378:	mov	x1, x9
   2237c:	cbnz	x0, 223b4 <printf_parse@@Base+0x4fa4>
   22380:	ldr	x8, [x21, #8]
   22384:	mov	x0, x8
   22388:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   2238c:	mov	x2, x0
   22390:	subs	x2, x2, #0x1
   22394:	sub	x3, x8, #0x1
   22398:	mov	x1, x9
   2239c:	mov	x0, x11
   223a0:	ccmp	x2, x8, #0x0, pl  // pl = nfrst
   223a4:	b.ge	223b4 <printf_parse@@Base+0x4fa4>  // b.tcont
   223a8:	str	x3, [x21, #8]
   223ac:	bl	1fd68 <printf_parse@@Base+0x2958>
   223b0:	ldr	x7, [x19, #8]
   223b4:	cmp	x7, x6
   223b8:	b.gt	22360 <printf_parse@@Base+0x4f50>
   223bc:	ldp	x21, x22, [sp, #32]
   223c0:	ldp	x23, x24, [sp, #48]
   223c4:	ldp	x25, x26, [sp, #64]
   223c8:	ldr	x0, [sp, #120]
   223cc:	bl	aa50 <free@plt>
   223d0:	mov	w28, #0x0                   	// #0
   223d4:	mov	w0, w28
   223d8:	ldp	x19, x20, [sp, #16]
   223dc:	ldp	x27, x28, [sp, #80]
   223e0:	ldp	x29, x30, [sp], #128
   223e4:	ret
   223e8:	mov	x0, #0x0                   	// #0
   223ec:	b	223cc <printf_parse@@Base+0x4fbc>
   223f0:	stp	x29, x30, [sp, #-32]!
   223f4:	mov	x29, sp
   223f8:	stp	x19, x20, [sp, #16]
   223fc:	mov	x20, x0
   22400:	tbnz	x1, #63, 22494 <printf_parse@@Base+0x5084>
   22404:	ldr	x0, [x0, #88]
   22408:	cmp	x0, x1
   2240c:	b.eq	224c0 <printf_parse@@Base+0x50b0>  // b.none
   22410:	ldr	w0, [x20, #144]
   22414:	cmp	w0, #0x1
   22418:	b.le	2245c <printf_parse@@Base+0x504c>
   2241c:	ldr	x0, [x20, #16]
   22420:	b	2242c <printf_parse@@Base+0x501c>
   22424:	cmn	x1, #0x1
   22428:	b.eq	22494 <printf_parse@@Base+0x5084>  // b.none
   2242c:	ldr	w19, [x0, x1, lsl #2]
   22430:	sub	x1, x1, #0x1
   22434:	cmn	w19, #0x1
   22438:	b.eq	22424 <printf_parse@@Base+0x5014>  // b.none
   2243c:	ldrb	w0, [x20, #142]
   22440:	cbnz	w0, 224d4 <printf_parse@@Base+0x50c4>
   22444:	cmp	w19, #0xa
   22448:	mov	w0, #0x0                   	// #0
   2244c:	b.eq	224a4 <printf_parse@@Base+0x5094>  // b.none
   22450:	ldp	x19, x20, [sp, #16]
   22454:	ldp	x29, x30, [sp], #32
   22458:	ret
   2245c:	ldr	x2, [x20, #8]
   22460:	mov	w0, #0x1                   	// #1
   22464:	ldr	x3, [x20, #128]
   22468:	ldrb	w2, [x2, x1]
   2246c:	ubfx	x1, x2, #6, #2
   22470:	ldr	x1, [x3, x1, lsl #3]
   22474:	lsr	x1, x1, x2
   22478:	tbnz	w1, #0, 22450 <printf_parse@@Base+0x5040>
   2247c:	cmp	w2, #0xa
   22480:	b.eq	224a4 <printf_parse@@Base+0x5094>  // b.none
   22484:	mov	w0, #0x0                   	// #0
   22488:	ldp	x19, x20, [sp, #16]
   2248c:	ldp	x29, x30, [sp], #32
   22490:	ret
   22494:	ldr	w0, [x20, #112]
   22498:	ldp	x19, x20, [sp, #16]
   2249c:	ldp	x29, x30, [sp], #32
   224a0:	ret
   224a4:	ldrb	w0, [x20, #141]
   224a8:	ldp	x19, x20, [sp, #16]
   224ac:	cmp	w0, #0x0
   224b0:	cset	w0, ne  // ne = any
   224b4:	ldp	x29, x30, [sp], #32
   224b8:	lsl	w0, w0, #1
   224bc:	ret
   224c0:	tst	x2, #0x2
   224c4:	mov	w0, #0x8                   	// #8
   224c8:	mov	w1, #0xa                   	// #10
   224cc:	csel	w0, w0, w1, ne  // ne = any
   224d0:	b	22450 <printf_parse@@Base+0x5040>
   224d4:	mov	w0, w19
   224d8:	bl	ad30 <iswalnum@plt>
   224dc:	cmp	w19, #0x5f
   224e0:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   224e4:	mov	w0, #0x1                   	// #1
   224e8:	b.ne	22450 <printf_parse@@Base+0x5040>  // b.any
   224ec:	b	22444 <printf_parse@@Base+0x5034>
   224f0:	mov	x4, x1
   224f4:	mov	x5, x0
   224f8:	ldr	x0, [x0, #8]
   224fc:	mov	x1, x2
   22500:	ldrb	w3, [x4, #8]
   22504:	ldrb	w2, [x0, x2]
   22508:	cmp	w3, #0x5
   2250c:	b.eq	225b0 <printf_parse@@Base+0x51a0>  // b.none
   22510:	b.hi	225a0 <printf_parse@@Base+0x5190>  // b.pmore
   22514:	cmp	w3, #0x1
   22518:	b.eq	225e8 <printf_parse@@Base+0x51d8>  // b.none
   2251c:	cmp	w3, #0x3
   22520:	b.ne	22610 <printf_parse@@Base+0x5200>  // b.any
   22524:	ldr	x0, [x4]
   22528:	ubfx	x3, x2, #6, #2
   2252c:	ldr	x0, [x0, x3, lsl #3]
   22530:	lsr	x2, x0, x2
   22534:	and	w0, w2, #0x1
   22538:	tbz	w2, #0, 225e4 <printf_parse@@Base+0x51d4>
   2253c:	stp	x29, x30, [sp, #-32]!
   22540:	mov	w0, #0x1                   	// #1
   22544:	mov	x29, sp
   22548:	str	x19, [sp, #16]
   2254c:	ldr	w19, [x4, #8]
   22550:	tst	w19, #0x3ff00
   22554:	b.eq	22594 <printf_parse@@Base+0x5184>  // b.none
   22558:	ldr	w2, [x5, #160]
   2255c:	mov	x0, x5
   22560:	bl	223f0 <printf_parse@@Base+0x4fe0>
   22564:	mov	w1, w0
   22568:	ubfx	x2, x19, #8, #10
   2256c:	tbz	w19, #10, 225d4 <printf_parse@@Base+0x51c4>
   22570:	mov	w0, #0x0                   	// #0
   22574:	tbz	w1, #0, 22594 <printf_parse@@Base+0x5184>
   22578:	tbnz	w2, #3, 22594 <printf_parse@@Base+0x5184>
   2257c:	tbz	w2, #5, 22588 <printf_parse@@Base+0x5178>
   22580:	mov	w0, #0x0                   	// #0
   22584:	tbz	w1, #1, 22594 <printf_parse@@Base+0x5184>
   22588:	ubfx	x0, x1, #3, #1
   2258c:	tst	x2, #0x80
   22590:	csinc	w0, w0, wzr, ne  // ne = any
   22594:	ldr	x19, [sp, #16]
   22598:	ldp	x29, x30, [sp], #32
   2259c:	ret
   225a0:	cmp	w3, #0x7
   225a4:	mov	w0, #0x0                   	// #0
   225a8:	b.ne	225d0 <printf_parse@@Base+0x51c0>  // b.any
   225ac:	tbnz	w2, #7, 225cc <printf_parse@@Base+0x51bc>
   225b0:	cmp	w2, #0xa
   225b4:	b.eq	225fc <printf_parse@@Base+0x51ec>  // b.none
   225b8:	cbnz	w2, 2253c <printf_parse@@Base+0x512c>
   225bc:	ldr	x2, [x5, #152]
   225c0:	mov	w0, #0x0                   	// #0
   225c4:	ldr	x2, [x2, #216]
   225c8:	tbz	w2, #7, 2253c <printf_parse@@Base+0x512c>
   225cc:	ret
   225d0:	ret
   225d4:	tbz	w2, #3, 2257c <printf_parse@@Base+0x516c>
   225d8:	tbz	w1, #0, 2257c <printf_parse@@Base+0x516c>
   225dc:	mov	w0, #0x0                   	// #0
   225e0:	b	22594 <printf_parse@@Base+0x5184>
   225e4:	ret
   225e8:	ldrb	w3, [x4]
   225ec:	mov	w0, #0x0                   	// #0
   225f0:	cmp	w3, w2
   225f4:	b.eq	2253c <printf_parse@@Base+0x512c>  // b.none
   225f8:	ret
   225fc:	ldr	x2, [x5, #152]
   22600:	mov	w0, #0x0                   	// #0
   22604:	ldr	x2, [x2, #216]
   22608:	tbnz	w2, #6, 2253c <printf_parse@@Base+0x512c>
   2260c:	ret
   22610:	mov	w0, #0x0                   	// #0
   22614:	ret
   22618:	stp	x29, x30, [sp, #-144]!
   2261c:	mov	x29, sp
   22620:	stp	x19, x20, [sp, #16]
   22624:	mov	x19, x0
   22628:	ldr	x20, [x0, #40]
   2262c:	stp	x21, x22, [sp, #32]
   22630:	mov	x21, x1
   22634:	stp	x23, x24, [sp, #48]
   22638:	cmp	x20, x1
   2263c:	mov	w24, w2
   22640:	b.le	227b4 <printf_parse@@Base+0x53a4>
   22644:	ldr	w0, [x0, #144]
   22648:	cmp	w0, #0x1
   2264c:	b.le	22654 <printf_parse@@Base+0x5244>
   22650:	str	xzr, [x19, #32]
   22654:	ldrb	w0, [x19, #139]
   22658:	tst	x24, #0x1
   2265c:	ldr	x3, [x19, #80]
   22660:	mov	w1, #0x4                   	// #4
   22664:	ldr	x2, [x19, #96]
   22668:	mov	w4, #0x6                   	// #6
   2266c:	csel	w1, w1, w4, ne  // ne = any
   22670:	stp	xzr, xzr, [x19, #40]
   22674:	mov	x20, x21
   22678:	str	xzr, [x19, #56]
   2267c:	str	x3, [x19, #88]
   22680:	str	x2, [x19, #104]
   22684:	str	w1, [x19, #112]
   22688:	strb	wzr, [x19, #140]
   2268c:	cbz	w0, 22748 <printf_parse@@Base+0x5338>
   22690:	cbz	x20, 22754 <printf_parse@@Base+0x5344>
   22694:	ldp	x23, x0, [x19, #48]
   22698:	ldrb	w1, [x19, #140]
   2269c:	cmp	x0, x20
   226a0:	b.le	227bc <printf_parse@@Base+0x53ac>
   226a4:	cbnz	w1, 228a0 <printf_parse@@Base+0x5490>
   226a8:	mov	w2, w24
   226ac:	sub	x1, x20, #0x1
   226b0:	mov	x0, x19
   226b4:	bl	223f0 <printf_parse@@Base+0x4fe0>
   226b8:	str	w0, [x19, #112]
   226bc:	sub	x2, x23, x20
   226c0:	ldr	w0, [x19, #144]
   226c4:	cmp	w0, #0x1
   226c8:	b.gt	22788 <printf_parse@@Base+0x5378>
   226cc:	ldrb	w0, [x19, #139]
   226d0:	cbnz	w0, 228e4 <printf_parse@@Base+0x54d4>
   226d4:	ldr	x3, [x19, #56]
   226d8:	str	x2, [x19, #48]
   226dc:	ldr	x1, [x19, #88]
   226e0:	sub	x2, x3, x20
   226e4:	ldr	x3, [x19, #104]
   226e8:	str	x2, [x19, #56]
   226ec:	ldr	w2, [x19, #144]
   226f0:	sub	x1, x1, x20
   226f4:	sub	x3, x3, x20
   226f8:	cbnz	w0, 22708 <printf_parse@@Base+0x52f8>
   226fc:	ldr	x0, [x19, #8]
   22700:	add	x20, x0, x20
   22704:	str	x20, [x19, #8]
   22708:	str	x21, [x19, #40]
   2270c:	cmp	w2, #0x1
   22710:	str	x1, [x19, #88]
   22714:	str	x3, [x19, #104]
   22718:	b.le	22778 <printf_parse@@Base+0x5368>
   2271c:	ldrb	w0, [x19, #136]
   22720:	cbnz	w0, 227a4 <printf_parse@@Base+0x5394>
   22724:	mov	x0, x19
   22728:	bl	1e958 <printf_parse@@Base+0x1548>
   2272c:	mov	w0, #0x0                   	// #0
   22730:	str	xzr, [x19, #72]
   22734:	ldp	x19, x20, [sp, #16]
   22738:	ldp	x21, x22, [sp, #32]
   2273c:	ldp	x23, x24, [sp, #48]
   22740:	ldp	x29, x30, [sp], #144
   22744:	ret
   22748:	ldr	x0, [x19]
   2274c:	str	x0, [x19, #8]
   22750:	cbnz	x20, 22694 <printf_parse@@Base+0x5284>
   22754:	ldr	x1, [x19, #88]
   22758:	str	x21, [x19, #40]
   2275c:	ldr	x3, [x19, #104]
   22760:	str	x1, [x19, #88]
   22764:	ldr	w2, [x19, #144]
   22768:	str	x3, [x19, #104]
   2276c:	cmp	w2, #0x1
   22770:	b.gt	2271c <printf_parse@@Base+0x530c>
   22774:	nop
   22778:	ldrb	w0, [x19, #139]
   2277c:	cbnz	w0, 22aa8 <printf_parse@@Base+0x5698>
   22780:	str	x1, [x19, #48]
   22784:	b	2272c <printf_parse@@Base+0x531c>
   22788:	ldr	x0, [x19, #16]
   2278c:	lsl	x2, x2, #2
   22790:	add	x1, x0, x20, lsl #2
   22794:	bl	a2d0 <memmove@plt>
   22798:	ldr	x2, [x19, #48]
   2279c:	sub	x2, x2, x20
   227a0:	b	226cc <printf_parse@@Base+0x52bc>
   227a4:	mov	x0, x19
   227a8:	bl	1eb48 <printf_parse@@Base+0x1738>
   227ac:	cbz	w0, 2272c <printf_parse@@Base+0x531c>
   227b0:	b	22734 <printf_parse@@Base+0x5324>
   227b4:	sub	x20, x1, x20
   227b8:	b	22690 <printf_parse@@Base+0x5280>
   227bc:	cbnz	w1, 22c68 <printf_parse@@Base+0x5858>
   227c0:	ldr	w2, [x19, #144]
   227c4:	str	xzr, [x19, #48]
   227c8:	cmp	w2, #0x1
   227cc:	ldr	x1, [x19, #40]
   227d0:	b.le	22b04 <printf_parse@@Base+0x56f4>
   227d4:	ldrb	w3, [x19, #137]
   227d8:	cbnz	w3, 22a00 <printf_parse@@Base+0x55f0>
   227dc:	add	x22, x1, x0
   227e0:	cmp	x21, x22
   227e4:	b.le	22d9c <printf_parse@@Base+0x598c>
   227e8:	stp	x25, x26, [sp, #64]
   227ec:	add	x25, sp, #0x88
   227f0:	stp	x27, x28, [sp, #80]
   227f4:	add	x27, x19, #0x20
   227f8:	mov	x3, x27
   227fc:	ldr	x1, [x19]
   22800:	mov	x0, x25
   22804:	ldr	x28, [x19, #80]
   22808:	add	x1, x1, x22
   2280c:	ldr	x26, [x19, #32]
   22810:	sub	x28, x28, x22
   22814:	mov	x2, x28
   22818:	bl	a3e0 <rpl_mbrtowc@plt>
   2281c:	sub	x1, x0, #0x1
   22820:	cmn	x1, #0x4
   22824:	b.hi	22c90 <printf_parse@@Base+0x5880>  // b.pmore
   22828:	ldr	w1, [sp, #136]
   2282c:	add	x22, x22, x0
   22830:	cmp	x21, x22
   22834:	b.gt	227f8 <printf_parse@@Base+0x53e8>
   22838:	sub	x22, x22, x21
   2283c:	str	x22, [x19, #48]
   22840:	cmn	w1, #0x1
   22844:	b.eq	22cb4 <printf_parse@@Base+0x58a4>  // b.none
   22848:	ldp	x27, x28, [sp, #80]
   2284c:	ldrb	w0, [x19, #142]
   22850:	cbnz	w0, 22d18 <printf_parse@@Base+0x5908>
   22854:	cmp	w1, #0xa
   22858:	mov	w0, #0x0                   	// #0
   2285c:	b.ne	22870 <printf_parse@@Base+0x5460>  // b.any
   22860:	ldrb	w0, [x19, #141]
   22864:	cmp	w0, #0x0
   22868:	cset	w0, ne  // ne = any
   2286c:	lsl	w0, w0, #1
   22870:	ldp	x25, x26, [sp, #64]
   22874:	str	w0, [x19, #112]
   22878:	cmp	x22, #0x0
   2287c:	cbnz	x22, 22cd4 <printf_parse@@Base+0x58c4>
   22880:	ldrb	w0, [x19, #139]
   22884:	ldr	x1, [x19, #88]
   22888:	str	x22, [x19, #56]
   2288c:	ldr	x3, [x19, #104]
   22890:	sub	x1, x1, x20
   22894:	ldr	w2, [x19, #144]
   22898:	sub	x3, x3, x20
   2289c:	b	226f8 <printf_parse@@Base+0x52e8>
   228a0:	mov	x1, x23
   228a4:	mov	x2, #0x0                   	// #0
   228a8:	stp	x25, x26, [sp, #64]
   228ac:	ldr	x25, [x19, #24]
   228b0:	b	228c4 <printf_parse@@Base+0x54b4>
   228b4:	b.ge	22a9c <printf_parse@@Base+0x568c>  // b.tcont
   228b8:	add	x2, x0, #0x1
   228bc:	cmp	x2, x1
   228c0:	b.ge	22900 <printf_parse@@Base+0x54f0>  // b.tcont
   228c4:	add	x0, x2, x1
   228c8:	add	x0, x0, x0, lsr #63
   228cc:	asr	x0, x0, #1
   228d0:	ldr	x3, [x25, x0, lsl #3]
   228d4:	cmp	x3, x20
   228d8:	b.le	228b4 <printf_parse@@Base+0x54a4>
   228dc:	mov	x1, x0
   228e0:	b	228bc <printf_parse@@Base+0x54ac>
   228e4:	ldr	x0, [x19, #8]
   228e8:	add	x1, x0, x20
   228ec:	bl	a2d0 <memmove@plt>
   228f0:	ldr	x2, [x19, #48]
   228f4:	ldrb	w0, [x19, #139]
   228f8:	sub	x2, x2, x20
   228fc:	b	226d4 <printf_parse@@Base+0x52c4>
   22900:	cmp	x3, x20
   22904:	add	x22, x0, #0x1
   22908:	b.ge	22a9c <printf_parse@@Base+0x568c>  // b.tcont
   2290c:	mov	x1, x0
   22910:	mov	w2, w24
   22914:	mov	x0, x19
   22918:	bl	223f0 <printf_parse@@Base+0x4fe0>
   2291c:	str	w0, [x19, #112]
   22920:	cmp	x20, x22
   22924:	ccmp	x20, x23, #0x0, eq  // eq = none
   22928:	b.lt	22bb8 <printf_parse@@Base+0x57a8>  // b.tstop
   2292c:	ldr	x1, [x19, #80]
   22930:	strb	wzr, [x19, #140]
   22934:	ldr	x3, [x19, #96]
   22938:	sub	x1, x1, x21
   2293c:	add	x0, x1, x20
   22940:	str	x0, [x19, #88]
   22944:	sub	x3, x3, x21
   22948:	cmp	x22, #0x0
   2294c:	add	x0, x3, x20
   22950:	str	x0, [x19, #104]
   22954:	sub	x2, x25, #0x8
   22958:	b.gt	22968 <printf_parse@@Base+0x5558>
   2295c:	b	22974 <printf_parse@@Base+0x5564>
   22960:	subs	x22, x22, #0x1
   22964:	b.eq	22974 <printf_parse@@Base+0x5564>  // b.none
   22968:	ldr	x0, [x2, x22, lsl #3]
   2296c:	cmp	x0, x20
   22970:	b.eq	22960 <printf_parse@@Base+0x5550>  // b.none
   22974:	cmp	x22, x23
   22978:	b.ge	22b8c <printf_parse@@Base+0x577c>  // b.tcont
   2297c:	ldr	x2, [x19, #16]
   22980:	b	22990 <printf_parse@@Base+0x5580>
   22984:	add	x22, x22, #0x1
   22988:	cmp	x22, x23
   2298c:	b.eq	22b90 <printf_parse@@Base+0x5780>  // b.none
   22990:	ldr	w0, [x2, x22, lsl #2]
   22994:	cmn	w0, #0x1
   22998:	b.eq	22984 <printf_parse@@Base+0x5574>  // b.none
   2299c:	ldr	x2, [x25, x22, lsl #3]
   229a0:	sub	x2, x2, x20
   229a4:	str	x2, [x19, #48]
   229a8:	cmp	x2, #0x0
   229ac:	cbz	x2, 229ec <printf_parse@@Base+0x55dc>
   229b0:	b.le	229cc <printf_parse@@Base+0x55bc>
   229b4:	ldr	x0, [x19, #16]
   229b8:	mov	w3, #0xffffffff            	// #-1
   229bc:	add	x1, x0, x2, lsl #2
   229c0:	str	w3, [x0], #4
   229c4:	cmp	x1, x0
   229c8:	b.ne	229c0 <printf_parse@@Base+0x55b0>  // b.any
   229cc:	ldr	x0, [x19, #8]
   229d0:	mov	w1, #0xff                  	// #255
   229d4:	bl	a6f0 <memset@plt>
   229d8:	ldr	x1, [x19, #88]
   229dc:	ldr	x3, [x19, #104]
   229e0:	sub	x1, x1, x20
   229e4:	ldr	x2, [x19, #48]
   229e8:	sub	x3, x3, x20
   229ec:	ldrb	w0, [x19, #139]
   229f0:	ldp	x25, x26, [sp, #64]
   229f4:	str	x2, [x19, #56]
   229f8:	ldr	w2, [x19, #144]
   229fc:	b	226f8 <printf_parse@@Base+0x52e8>
   22a00:	ldr	x3, [x19]
   22a04:	sub	x2, x20, w2, sxtw
   22a08:	stp	x25, x26, [sp, #64]
   22a0c:	sub	x22, x20, #0x1
   22a10:	add	x25, x3, x1
   22a14:	add	x2, x25, x2
   22a18:	add	x22, x25, x22
   22a1c:	cmp	x3, x2
   22a20:	csel	x3, x3, x2, cs  // cs = hs, nlast
   22a24:	cmp	x3, x22
   22a28:	b.ls	22a3c <printf_parse@@Base+0x562c>  // b.plast
   22a2c:	b	22c54 <printf_parse@@Base+0x5844>
   22a30:	sub	x22, x22, #0x1
   22a34:	cmp	x3, x22
   22a38:	b.hi	22c54 <printf_parse@@Base+0x5844>  // b.pmore
   22a3c:	ldrb	w2, [x22]
   22a40:	and	w2, w2, #0xc0
   22a44:	cmp	w2, #0x80
   22a48:	b.eq	22a30 <printf_parse@@Base+0x5620>  // b.none
   22a4c:	ldr	x2, [x19, #88]
   22a50:	mov	x1, x22
   22a54:	ldr	x3, [x19, #120]
   22a58:	add	x2, x25, x2
   22a5c:	sub	x2, x2, x22
   22a60:	cbnz	x3, 22d48 <printf_parse@@Base+0x5938>
   22a64:	add	x3, sp, #0x88
   22a68:	add	x0, sp, #0x7c
   22a6c:	str	xzr, [sp, #136]
   22a70:	bl	a3e0 <rpl_mbrtowc@plt>
   22a74:	add	x1, x25, x20
   22a78:	sub	x22, x1, x22
   22a7c:	cmp	x0, x22
   22a80:	b.cc	22a8c <printf_parse@@Base+0x567c>  // b.lo, b.ul, b.last
   22a84:	cmn	x0, #0x3
   22a88:	b.ls	22b9c <printf_parse@@Base+0x578c>  // b.plast
   22a8c:	ldr	x1, [x19, #40]
   22a90:	ldr	x0, [x19, #56]
   22a94:	ldp	x25, x26, [sp, #64]
   22a98:	b	227dc <printf_parse@@Base+0x53cc>
   22a9c:	mov	x22, x0
   22aa0:	sub	x0, x0, #0x1
   22aa4:	b	2290c <printf_parse@@Base+0x54fc>
   22aa8:	ldrb	w0, [x19, #136]
   22aac:	cbnz	w0, 22c5c <printf_parse@@Base+0x584c>
   22ab0:	ldr	x2, [x19, #120]
   22ab4:	cbz	x2, 2272c <printf_parse@@Base+0x531c>
   22ab8:	ldr	x4, [x19, #64]
   22abc:	ldr	x0, [x19, #48]
   22ac0:	cmp	x4, x1
   22ac4:	csel	x4, x4, x1, le
   22ac8:	cmp	x4, x0
   22acc:	b.gt	22adc <printf_parse@@Base+0x56cc>
   22ad0:	b	22d3c <printf_parse@@Base+0x592c>
   22ad4:	ldr	x21, [x19, #40]
   22ad8:	ldr	x2, [x19, #120]
   22adc:	ldp	x1, x3, [x19]
   22ae0:	add	x1, x1, x0
   22ae4:	ldrb	w1, [x1, x21]
   22ae8:	ldrb	w1, [x2, x1]
   22aec:	strb	w1, [x3, x0]
   22af0:	add	x0, x0, #0x1
   22af4:	cmp	x4, x0
   22af8:	b.ne	22ad4 <printf_parse@@Base+0x56c4>  // b.any
   22afc:	stp	x4, x4, [x19, #48]
   22b00:	b	2272c <printf_parse@@Base+0x531c>
   22b04:	ldr	x22, [x19]
   22b08:	ldr	x3, [x19, #120]
   22b0c:	add	x22, x22, x20
   22b10:	add	x22, x22, x1
   22b14:	ldurb	w0, [x22, #-1]
   22b18:	str	xzr, [x19, #56]
   22b1c:	cbz	x3, 22b28 <printf_parse@@Base+0x5718>
   22b20:	and	x0, x0, #0xff
   22b24:	ldrb	w0, [x3, x0]
   22b28:	ldr	x4, [x19, #128]
   22b2c:	ubfx	x1, x0, #6, #2
   22b30:	mov	w3, #0x1                   	// #1
   22b34:	ldr	x1, [x4, x1, lsl #3]
   22b38:	lsr	x1, x1, x0
   22b3c:	tbnz	w1, #0, 22b60 <printf_parse@@Base+0x5750>
   22b40:	cmp	w0, #0xa
   22b44:	mov	w3, #0x0                   	// #0
   22b48:	b.ne	22b60 <printf_parse@@Base+0x5750>  // b.any
   22b4c:	ldrb	w0, [x19, #141]
   22b50:	cmp	w0, #0x0
   22b54:	cset	w3, ne  // ne = any
   22b58:	lsl	w3, w3, #1
   22b5c:	nop
   22b60:	ldrb	w0, [x19, #139]
   22b64:	str	w3, [x19, #112]
   22b68:	ldr	x1, [x19, #88]
   22b6c:	ldr	x3, [x19, #104]
   22b70:	sub	x1, x1, x20
   22b74:	sub	x3, x3, x20
   22b78:	cbz	w0, 226fc <printf_parse@@Base+0x52ec>
   22b7c:	str	x21, [x19, #40]
   22b80:	str	x1, [x19, #88]
   22b84:	str	x3, [x19, #104]
   22b88:	b	2277c <printf_parse@@Base+0x536c>
   22b8c:	b.ne	2299c <printf_parse@@Base+0x558c>  // b.any
   22b90:	mov	x2, #0x0                   	// #0
   22b94:	str	xzr, [x19, #48]
   22b98:	b	229ec <printf_parse@@Base+0x55dc>
   22b9c:	ldr	w1, [sp, #124]
   22ba0:	sub	x22, x0, x22
   22ba4:	str	xzr, [x19, #32]
   22ba8:	str	x22, [x19, #48]
   22bac:	cmn	w1, #0x1
   22bb0:	b.ne	2284c <printf_parse@@Base+0x543c>  // b.any
   22bb4:	b	22a8c <printf_parse@@Base+0x567c>
   22bb8:	ldr	x0, [x25, x22, lsl #3]
   22bbc:	cmp	x0, x20
   22bc0:	b.ne	2292c <printf_parse@@Base+0x551c>  // b.any
   22bc4:	ldr	x0, [x19, #16]
   22bc8:	sub	x2, x23, x20
   22bcc:	lsl	x2, x2, #2
   22bd0:	add	x1, x0, x20, lsl #2
   22bd4:	bl	a2d0 <memmove@plt>
   22bd8:	ldr	x0, [x19, #8]
   22bdc:	ldr	x2, [x19, #48]
   22be0:	add	x1, x0, x20
   22be4:	sub	x2, x2, x20
   22be8:	bl	a2d0 <memmove@plt>
   22bec:	ldp	x0, x1, [x19, #48]
   22bf0:	sub	x0, x0, x20
   22bf4:	str	x0, [x19, #48]
   22bf8:	cmp	x0, #0x0
   22bfc:	sub	x0, x1, x20
   22c00:	str	x0, [x19, #56]
   22c04:	b.le	22c34 <printf_parse@@Base+0x5824>
   22c08:	ldr	x2, [x19, #24]
   22c0c:	mov	x0, #0x0                   	// #0
   22c10:	add	x3, x2, x20, lsl #3
   22c14:	nop
   22c18:	ldr	x1, [x3, x0, lsl #3]
   22c1c:	sub	x1, x1, x20
   22c20:	str	x1, [x2, x0, lsl #3]
   22c24:	add	x0, x0, #0x1
   22c28:	ldr	x1, [x19, #48]
   22c2c:	cmp	x1, x0
   22c30:	b.gt	22c18 <printf_parse@@Base+0x5808>
   22c34:	ldr	x1, [x19, #88]
   22c38:	ldr	x3, [x19, #104]
   22c3c:	sub	x1, x1, x20
   22c40:	ldrb	w0, [x19, #139]
   22c44:	ldr	w2, [x19, #144]
   22c48:	sub	x3, x3, x20
   22c4c:	ldp	x25, x26, [sp, #64]
   22c50:	b	226f8 <printf_parse@@Base+0x52e8>
   22c54:	ldp	x25, x26, [sp, #64]
   22c58:	b	227dc <printf_parse@@Base+0x53cc>
   22c5c:	mov	x0, x19
   22c60:	bl	1e8b8 <printf_parse@@Base+0x14a8>
   22c64:	b	2272c <printf_parse@@Base+0x531c>
   22c68:	ldr	x2, [x19, #80]
   22c6c:	strb	wzr, [x19, #140]
   22c70:	ldr	x1, [x19, #96]
   22c74:	sub	x2, x2, x21
   22c78:	add	x2, x2, x20
   22c7c:	str	x2, [x19, #88]
   22c80:	sub	x1, x1, x21
   22c84:	add	x1, x1, x20
   22c88:	str	x1, [x19, #104]
   22c8c:	b	227c0 <printf_parse@@Base+0x53b0>
   22c90:	cmp	x0, #0x0
   22c94:	mov	w1, #0x0                   	// #0
   22c98:	ccmp	x28, #0x0, #0x4, ne  // ne = any
   22c9c:	b.eq	22ca8 <printf_parse@@Base+0x5898>  // b.none
   22ca0:	ldr	x0, [x19]
   22ca4:	ldrb	w1, [x0, x22]
   22ca8:	mov	x0, #0x1                   	// #1
   22cac:	str	x26, [x19, #32]
   22cb0:	b	2282c <printf_parse@@Base+0x541c>
   22cb4:	ldp	x25, x26, [sp, #64]
   22cb8:	ldp	x27, x28, [sp, #80]
   22cbc:	mov	w2, w24
   22cc0:	sub	x1, x23, #0x1
   22cc4:	mov	x0, x19
   22cc8:	bl	223f0 <printf_parse@@Base+0x4fe0>
   22ccc:	str	w0, [x19, #112]
   22cd0:	b	22878 <printf_parse@@Base+0x5468>
   22cd4:	b.le	22cf4 <printf_parse@@Base+0x58e4>
   22cd8:	ldr	x0, [x19, #16]
   22cdc:	mov	w2, #0xffffffff            	// #-1
   22ce0:	add	x1, x0, x22, lsl #2
   22ce4:	nop
   22ce8:	str	w2, [x0], #4
   22cec:	cmp	x1, x0
   22cf0:	b.ne	22ce8 <printf_parse@@Base+0x58d8>  // b.any
   22cf4:	ldrb	w0, [x19, #139]
   22cf8:	cbz	w0, 22884 <printf_parse@@Base+0x5474>
   22cfc:	ldr	x0, [x19, #8]
   22d00:	mov	x2, x22
   22d04:	mov	w1, #0xff                  	// #255
   22d08:	bl	a6f0 <memset@plt>
   22d0c:	ldrb	w0, [x19, #139]
   22d10:	ldr	x22, [x19, #48]
   22d14:	b	22884 <printf_parse@@Base+0x5474>
   22d18:	mov	w0, w1
   22d1c:	str	w1, [sp, #108]
   22d20:	bl	ad30 <iswalnum@plt>
   22d24:	ldr	w1, [sp, #108]
   22d28:	cmp	w1, #0x5f
   22d2c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   22d30:	mov	w0, #0x1                   	// #1
   22d34:	b.ne	22870 <printf_parse@@Base+0x5460>  // b.any
   22d38:	b	22854 <printf_parse@@Base+0x5444>
   22d3c:	mov	x4, x0
   22d40:	stp	x4, x4, [x19, #48]
   22d44:	b	2272c <printf_parse@@Base+0x531c>
   22d48:	cmp	x2, #0x6
   22d4c:	mov	x1, #0x6                   	// #6
   22d50:	csel	x1, x2, x1, le
   22d54:	cmp	w1, #0x0
   22d58:	b.le	22da8 <printf_parse@@Base+0x5998>
   22d5c:	sxtw	x6, w1
   22d60:	sub	w0, w1, #0x2
   22d64:	sub	x6, x6, #0x3
   22d68:	sub	w1, w1, #0x1
   22d6c:	sub	x6, x6, x1
   22d70:	sxtw	x0, w0
   22d74:	add	x1, sp, #0x80
   22d78:	add	x7, x22, #0x1
   22d7c:	ldrb	w5, [x7, x0]
   22d80:	add	x4, x1, x0
   22d84:	sub	x0, x0, #0x1
   22d88:	cmp	x6, x0
   22d8c:	ldrb	w5, [x3, x5]
   22d90:	strb	w5, [x4, #1]
   22d94:	b.ne	22d7c <printf_parse@@Base+0x596c>  // b.any
   22d98:	b	22a64 <printf_parse@@Base+0x5654>
   22d9c:	sub	x22, x22, x21
   22da0:	str	x22, [x19, #48]
   22da4:	b	22cbc <printf_parse@@Base+0x58ac>
   22da8:	add	x1, sp, #0x80
   22dac:	b	22a64 <printf_parse@@Base+0x5654>
   22db0:	stp	x29, x30, [sp, #-48]!
   22db4:	mov	x29, sp
   22db8:	str	x21, [sp, #32]
   22dbc:	mov	x21, x2
   22dc0:	ldr	w2, [x0, #160]
   22dc4:	stp	x19, x20, [sp, #16]
   22dc8:	mov	x19, x1
   22dcc:	mov	x20, x0
   22dd0:	mov	x1, x3
   22dd4:	bl	223f0 <printf_parse@@Base+0x4fe0>
   22dd8:	cmp	x19, #0x0
   22ddc:	b.le	22e64 <printf_parse@@Base+0x5a54>
   22de0:	ldr	x1, [x20, #152]
   22de4:	and	w8, w0, #0x8
   22de8:	ldr	x5, [x21]
   22dec:	and	w7, w0, #0x2
   22df0:	ldr	x1, [x1]
   22df4:	and	w6, w0, #0x1
   22df8:	mov	x3, #0x0                   	// #0
   22dfc:	nop
   22e00:	ldr	x0, [x5, x3, lsl #3]
   22e04:	add	x4, x1, x0, lsl #4
   22e08:	ldr	w2, [x4, #8]
   22e0c:	ldrb	w4, [x4, #8]
   22e10:	ubfx	x2, x2, #8, #10
   22e14:	cmp	w4, #0x2
   22e18:	b.ne	22e58 <printf_parse@@Base+0x5a48>  // b.any
   22e1c:	cbz	w2, 22e3c <printf_parse@@Base+0x5a2c>
   22e20:	tbz	w2, #2, 22e4c <printf_parse@@Base+0x5a3c>
   22e24:	cbz	w6, 22e58 <printf_parse@@Base+0x5a48>
   22e28:	tbnz	w2, #3, 22e58 <printf_parse@@Base+0x5a48>
   22e2c:	tbz	w2, #5, 22e34 <printf_parse@@Base+0x5a24>
   22e30:	cbz	w7, 22e58 <printf_parse@@Base+0x5a48>
   22e34:	tbz	w2, #7, 22e3c <printf_parse@@Base+0x5a2c>
   22e38:	cbz	w8, 22e58 <printf_parse@@Base+0x5a48>
   22e3c:	ldp	x19, x20, [sp, #16]
   22e40:	ldr	x21, [sp, #32]
   22e44:	ldp	x29, x30, [sp], #48
   22e48:	ret
   22e4c:	tbz	w2, #3, 22e2c <printf_parse@@Base+0x5a1c>
   22e50:	cbz	w6, 22e2c <printf_parse@@Base+0x5a1c>
   22e54:	nop
   22e58:	add	x3, x3, #0x1
   22e5c:	cmp	x3, x19
   22e60:	b.ne	22e00 <printf_parse@@Base+0x59f0>  // b.any
   22e64:	mov	x0, #0x0                   	// #0
   22e68:	ldp	x19, x20, [sp, #16]
   22e6c:	ldr	x21, [sp, #32]
   22e70:	ldp	x29, x30, [sp], #48
   22e74:	ret
   22e78:	stp	x29, x30, [sp, #-32]!
   22e7c:	mov	x29, sp
   22e80:	stp	x19, x20, [sp, #16]
   22e84:	mov	x19, x1
   22e88:	ldrb	w1, [x1, #48]
   22e8c:	cmp	w1, #0x10
   22e90:	b.ne	22eb8 <printf_parse@@Base+0x5aa8>  // b.any
   22e94:	ldr	x1, [x19, #8]
   22e98:	mov	w0, #0x0                   	// #0
   22e9c:	ldr	x2, [x1, #24]
   22ea0:	ldr	x1, [x1, #56]
   22ea4:	str	x2, [x19, #24]
   22ea8:	str	x1, [x19, #56]
   22eac:	ldp	x19, x20, [sp, #16]
   22eb0:	ldp	x29, x30, [sp], #32
   22eb4:	ret
   22eb8:	ldp	x2, x3, [x19, #40]
   22ebc:	str	x19, [x19, #24]
   22ec0:	mov	x20, x0
   22ec4:	mov	x1, x2
   22ec8:	mov	x2, x3
   22ecc:	bl	1f3b8 <printf_parse@@Base+0x1fa8>
   22ed0:	str	x0, [x19, #56]
   22ed4:	mov	x1, x0
   22ed8:	cmn	x0, #0x1
   22edc:	b.eq	22f14 <printf_parse@@Base+0x5b04>  // b.none
   22ee0:	ldrb	w2, [x19, #48]
   22ee4:	mov	w0, #0x0                   	// #0
   22ee8:	cmp	w2, #0xc
   22eec:	b.ne	22eac <printf_parse@@Base+0x5a9c>  // b.any
   22ef0:	ldr	x2, [x20]
   22ef4:	ldr	w3, [x19, #40]
   22ef8:	add	x1, x2, x1, lsl #4
   22efc:	ldr	w2, [x1, #8]
   22f00:	bfi	w2, w3, #8, #10
   22f04:	str	w2, [x1, #8]
   22f08:	ldp	x19, x20, [sp, #16]
   22f0c:	ldp	x29, x30, [sp], #32
   22f10:	ret
   22f14:	mov	w0, #0xc                   	// #12
   22f18:	b	22eac <printf_parse@@Base+0x5a9c>
   22f1c:	nop
   22f20:	stp	x29, x30, [sp, #-48]!
   22f24:	mov	x29, sp
   22f28:	stp	x19, x20, [sp, #16]
   22f2c:	mov	x20, x0
   22f30:	ldr	x0, [x0]
   22f34:	cmp	x0, #0x0
   22f38:	b.le	22f80 <printf_parse@@Base+0x5b70>
   22f3c:	mov	x19, #0x0                   	// #0
   22f40:	str	x21, [sp, #32]
   22f44:	mov	x21, #0x0                   	// #0
   22f48:	ldr	x1, [x20, #16]
   22f4c:	add	x21, x21, #0x1
   22f50:	add	x1, x1, x19
   22f54:	ldr	x0, [x1, #40]
   22f58:	bl	aa50 <free@plt>
   22f5c:	ldr	x1, [x20, #16]
   22f60:	add	x1, x1, x19
   22f64:	add	x19, x19, #0x30
   22f68:	ldr	x0, [x1, #16]
   22f6c:	bl	aa50 <free@plt>
   22f70:	ldr	x0, [x20]
   22f74:	cmp	x21, x0
   22f78:	b.lt	22f48 <printf_parse@@Base+0x5b38>  // b.tstop
   22f7c:	ldr	x21, [sp, #32]
   22f80:	ldr	x0, [x20, #16]
   22f84:	ldp	x19, x20, [sp, #16]
   22f88:	ldp	x29, x30, [sp], #48
   22f8c:	b	aa50 <free@plt>
   22f90:	stp	x29, x30, [sp, #-48]!
   22f94:	mov	x29, sp
   22f98:	ldr	x6, [x0]
   22f9c:	stp	x19, x20, [sp, #16]
   22fa0:	str	x21, [sp, #32]
   22fa4:	sub	x6, x6, #0x1
   22fa8:	str	x6, [x0]
   22fac:	tbnz	x6, #63, 23028 <printf_parse@@Base+0x5c18>
   22fb0:	mov	x21, x1
   22fb4:	add	x6, x6, x6, lsl #1
   22fb8:	mov	x1, x2
   22fbc:	lsl	x2, x3, #4
   22fc0:	lsl	x19, x6, #4
   22fc4:	mov	x0, x4
   22fc8:	ldr	x3, [x21]
   22fcc:	mov	x20, x5
   22fd0:	add	x4, x3, x19
   22fd4:	ldr	x3, [x3, x19]
   22fd8:	str	x3, [x1]
   22fdc:	ldr	x1, [x4, #16]
   22fe0:	bl	a2c0 <memcpy@plt>
   22fe4:	ldr	x0, [x20, #16]
   22fe8:	bl	aa50 <free@plt>
   22fec:	ldr	x0, [x21]
   22ff0:	add	x0, x0, x19
   22ff4:	ldr	x0, [x0, #16]
   22ff8:	bl	aa50 <free@plt>
   22ffc:	ldr	x6, [x21]
   23000:	ldr	x21, [sp, #32]
   23004:	add	x19, x6, x19
   23008:	ldp	x0, x1, [x19, #24]
   2300c:	stp	x0, x1, [x20]
   23010:	ldr	x0, [x19, #40]
   23014:	str	x0, [x20, #16]
   23018:	ldr	x0, [x19, #8]
   2301c:	ldp	x19, x20, [sp, #16]
   23020:	ldp	x29, x30, [sp], #48
   23024:	ret
   23028:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   2302c:	add	x3, x3, #0x980
   23030:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   23034:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   23038:	add	x3, x3, #0x20
   2303c:	add	x1, x1, #0x760
   23040:	add	x0, x0, #0x770
   23044:	mov	w2, #0x555                 	// #1365
   23048:	bl	aea0 <__assert_fail@plt>
   2304c:	nop
   23050:	stp	x29, x30, [sp, #-32]!
   23054:	mov	x29, sp
   23058:	stp	x19, x20, [sp, #16]
   2305c:	mov	x19, x1
   23060:	mov	x20, x0
   23064:	mov	x0, x1
   23068:	bl	a340 <strlen@plt>
   2306c:	cmp	x0, #0x1
   23070:	b.ne	230a0 <printf_parse@@Base+0x5c90>  // b.any
   23074:	ldrb	w1, [x19]
   23078:	mov	x2, x0
   2307c:	mov	w0, #0x0                   	// #0
   23080:	ubfx	x3, x1, #6, #2
   23084:	lsl	x2, x2, x1
   23088:	ldr	x1, [x20, x3, lsl #3]
   2308c:	orr	x2, x1, x2
   23090:	str	x2, [x20, x3, lsl #3]
   23094:	ldp	x19, x20, [sp, #16]
   23098:	ldp	x29, x30, [sp], #32
   2309c:	ret
   230a0:	mov	w0, #0x3                   	// #3
   230a4:	ldp	x19, x20, [sp, #16]
   230a8:	ldp	x29, x30, [sp], #32
   230ac:	ret
   230b0:	stp	x29, x30, [sp, #-80]!
   230b4:	mov	x29, sp
   230b8:	stp	x19, x20, [sp, #16]
   230bc:	mov	x20, x0
   230c0:	mov	x19, x1
   230c4:	stp	x21, x22, [sp, #32]
   230c8:	mov	x22, x3
   230cc:	mov	x21, x5
   230d0:	stp	x23, x24, [sp, #48]
   230d4:	mov	x24, x4
   230d8:	stp	x25, x26, [sp, #64]
   230dc:	mov	x25, x2
   230e0:	tbz	w6, #22, 23100 <printf_parse@@Base+0x5cf0>
   230e4:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   230e8:	mov	x0, x5
   230ec:	add	x1, x1, #0x788
   230f0:	bl	a9b0 <strcmp@plt>
   230f4:	cbnz	w0, 231ec <printf_parse@@Base+0x5ddc>
   230f8:	adrp	x21, 2e000 <vasnprintf@@Base+0x31e0>
   230fc:	add	x21, x21, #0x780
   23100:	ldr	x23, [x22]
   23104:	ldr	x0, [x24]
   23108:	ldr	x26, [x25]
   2310c:	cmp	x0, x23
   23110:	b.eq	23220 <printf_parse@@Base+0x5e10>  // b.none
   23114:	add	x0, x23, #0x1
   23118:	str	x0, [x22]
   2311c:	mov	x0, x21
   23120:	bl	a3c0 <wctype@plt>
   23124:	str	x0, [x26, x23, lsl #3]
   23128:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2312c:	mov	x0, x21
   23130:	add	x1, x1, #0x798
   23134:	bl	a9b0 <strcmp@plt>
   23138:	cbz	w0, 231ac <printf_parse@@Base+0x5d9c>
   2313c:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   23140:	mov	x0, x21
   23144:	add	x1, x1, #0x7a0
   23148:	bl	a9b0 <strcmp@plt>
   2314c:	cbnz	w0, 2324c <printf_parse@@Base+0x5e3c>
   23150:	bl	a9d0 <__ctype_b_loc@plt>
   23154:	mov	x2, #0x0                   	// #0
   23158:	mov	x5, #0x1                   	// #1
   2315c:	ldr	x4, [x0]
   23160:	cbnz	x20, 233d8 <printf_parse@@Base+0x5fc8>
   23164:	nop
   23168:	ldrh	w0, [x4, x2, lsl #1]
   2316c:	asr	x1, x2, #6
   23170:	lsl	x3, x5, x2
   23174:	add	x2, x2, #0x1
   23178:	tbz	w0, #1, 23188 <printf_parse@@Base+0x5d78>
   2317c:	ldr	x0, [x19, x1, lsl #3]
   23180:	orr	x0, x0, x3
   23184:	str	x0, [x19, x1, lsl #3]
   23188:	cmp	x2, #0x100
   2318c:	b.ne	23168 <printf_parse@@Base+0x5d58>  // b.any
   23190:	mov	w0, #0x0                   	// #0
   23194:	ldp	x19, x20, [sp, #16]
   23198:	ldp	x21, x22, [sp, #32]
   2319c:	ldp	x23, x24, [sp, #48]
   231a0:	ldp	x25, x26, [sp, #64]
   231a4:	ldp	x29, x30, [sp], #80
   231a8:	ret
   231ac:	bl	a9d0 <__ctype_b_loc@plt>
   231b0:	mov	x2, #0x0                   	// #0
   231b4:	mov	x6, #0x1                   	// #1
   231b8:	ldr	x5, [x0]
   231bc:	cbnz	x20, 2339c <printf_parse@@Base+0x5f8c>
   231c0:	ldrh	w3, [x5, x2, lsl #1]
   231c4:	asr	x0, x2, #6
   231c8:	lsl	x4, x6, x2
   231cc:	add	x2, x2, #0x1
   231d0:	tbz	w3, #3, 231e0 <printf_parse@@Base+0x5dd0>
   231d4:	ldr	x1, [x19, x0, lsl #3]
   231d8:	orr	x1, x1, x4
   231dc:	str	x1, [x19, x0, lsl #3]
   231e0:	cmp	x2, #0x100
   231e4:	b.ne	231c0 <printf_parse@@Base+0x5db0>  // b.any
   231e8:	b	23190 <printf_parse@@Base+0x5d80>
   231ec:	mov	x0, x21
   231f0:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   231f4:	add	x1, x1, #0x790
   231f8:	bl	a9b0 <strcmp@plt>
   231fc:	cmp	w0, #0x0
   23200:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   23204:	ldr	x23, [x22]
   23208:	add	x1, x1, #0x780
   2320c:	ldr	x0, [x24]
   23210:	csel	x21, x1, x21, eq  // eq = none
   23214:	ldr	x26, [x25]
   23218:	cmp	x0, x23
   2321c:	b.ne	23114 <printf_parse@@Base+0x5d04>  // b.any
   23220:	lsl	x23, x23, #1
   23224:	mov	x0, x26
   23228:	add	x23, x23, #0x1
   2322c:	lsl	x1, x23, #3
   23230:	bl	a7e0 <realloc@plt>
   23234:	mov	x26, x0
   23238:	cbz	x0, 234f0 <printf_parse@@Base+0x60e0>
   2323c:	str	x0, [x25]
   23240:	str	x23, [x24]
   23244:	ldr	x23, [x22]
   23248:	b	23114 <printf_parse@@Base+0x5d04>
   2324c:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   23250:	mov	x0, x21
   23254:	add	x1, x1, #0x790
   23258:	bl	a9b0 <strcmp@plt>
   2325c:	cbz	w0, 232b4 <printf_parse@@Base+0x5ea4>
   23260:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   23264:	mov	x0, x21
   23268:	add	x1, x1, #0x7a8
   2326c:	bl	a9b0 <strcmp@plt>
   23270:	cbnz	w0, 232f4 <printf_parse@@Base+0x5ee4>
   23274:	bl	a9d0 <__ctype_b_loc@plt>
   23278:	mov	x1, #0x0                   	// #0
   2327c:	mov	x5, #0x1                   	// #1
   23280:	ldr	x4, [x0]
   23284:	cbnz	x20, 23580 <printf_parse@@Base+0x6170>
   23288:	ldrh	w0, [x4, x1, lsl #1]
   2328c:	asr	x2, x1, #6
   23290:	lsl	x3, x5, x1
   23294:	add	x1, x1, #0x1
   23298:	tbz	w0, #13, 232a8 <printf_parse@@Base+0x5e98>
   2329c:	ldr	x0, [x19, x2, lsl #3]
   232a0:	orr	x0, x0, x3
   232a4:	str	x0, [x19, x2, lsl #3]
   232a8:	cmp	x1, #0x100
   232ac:	b.ne	23288 <printf_parse@@Base+0x5e78>  // b.any
   232b0:	b	23190 <printf_parse@@Base+0x5d80>
   232b4:	bl	a9d0 <__ctype_b_loc@plt>
   232b8:	mov	x1, #0x0                   	// #0
   232bc:	mov	x5, #0x1                   	// #1
   232c0:	ldr	x4, [x0]
   232c4:	cbnz	x20, 23410 <printf_parse@@Base+0x6000>
   232c8:	ldrh	w0, [x4, x1, lsl #1]
   232cc:	asr	x2, x1, #6
   232d0:	lsl	x3, x5, x1
   232d4:	add	x1, x1, #0x1
   232d8:	tbz	w0, #9, 232e8 <printf_parse@@Base+0x5ed8>
   232dc:	ldr	x0, [x19, x2, lsl #3]
   232e0:	orr	x0, x0, x3
   232e4:	str	x0, [x19, x2, lsl #3]
   232e8:	cmp	x1, #0x100
   232ec:	b.ne	232c8 <printf_parse@@Base+0x5eb8>  // b.any
   232f0:	b	23190 <printf_parse@@Base+0x5d80>
   232f4:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   232f8:	mov	x0, x21
   232fc:	add	x1, x1, #0x780
   23300:	bl	a9b0 <strcmp@plt>
   23304:	cbz	w0, 2335c <printf_parse@@Base+0x5f4c>
   23308:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2330c:	mov	x0, x21
   23310:	add	x1, x1, #0x7b0
   23314:	bl	a9b0 <strcmp@plt>
   23318:	cbnz	w0, 23448 <printf_parse@@Base+0x6038>
   2331c:	bl	a9d0 <__ctype_b_loc@plt>
   23320:	mov	x1, #0x0                   	// #0
   23324:	mov	x5, #0x1                   	// #1
   23328:	ldr	x4, [x0]
   2332c:	cbnz	x20, 235b8 <printf_parse@@Base+0x61a8>
   23330:	ldrh	w2, [x4, x1, lsl #1]
   23334:	asr	x0, x1, #6
   23338:	lsl	x3, x5, x1
   2333c:	add	x1, x1, #0x1
   23340:	tbz	w2, #11, 23350 <printf_parse@@Base+0x5f40>
   23344:	ldr	x2, [x19, x0, lsl #3]
   23348:	orr	x2, x2, x3
   2334c:	str	x2, [x19, x0, lsl #3]
   23350:	cmp	x1, #0x100
   23354:	b.ne	23330 <printf_parse@@Base+0x5f20>  // b.any
   23358:	b	23190 <printf_parse@@Base+0x5d80>
   2335c:	bl	a9d0 <__ctype_b_loc@plt>
   23360:	mov	x1, #0x0                   	// #0
   23364:	mov	x5, #0x1                   	// #1
   23368:	ldr	x4, [x0]
   2336c:	cbnz	x20, 2354c <printf_parse@@Base+0x613c>
   23370:	ldrh	w0, [x4, x1, lsl #1]
   23374:	asr	x2, x1, #6
   23378:	lsl	x3, x5, x1
   2337c:	add	x1, x1, #0x1
   23380:	tbz	w0, #10, 23390 <printf_parse@@Base+0x5f80>
   23384:	ldr	x0, [x19, x2, lsl #3]
   23388:	orr	x0, x0, x3
   2338c:	str	x0, [x19, x2, lsl #3]
   23390:	cmp	x1, #0x100
   23394:	b.ne	23370 <printf_parse@@Base+0x5f60>  // b.any
   23398:	b	23190 <printf_parse@@Base+0x5d80>
   2339c:	mov	x4, x6
   233a0:	mov	x0, #0x0                   	// #0
   233a4:	nop
   233a8:	ldrh	w1, [x5, x0, lsl #1]
   233ac:	tbz	w1, #3, 233c8 <printf_parse@@Base+0x5fb8>
   233b0:	ldrb	w1, [x20, x0]
   233b4:	ubfx	x3, x1, #6, #2
   233b8:	lsl	x1, x4, x1
   233bc:	ldr	x2, [x19, x3, lsl #3]
   233c0:	orr	x1, x2, x1
   233c4:	str	x1, [x19, x3, lsl #3]
   233c8:	add	x0, x0, #0x1
   233cc:	cmp	x0, #0x100
   233d0:	b.ne	233a8 <printf_parse@@Base+0x5f98>  // b.any
   233d4:	b	23190 <printf_parse@@Base+0x5d80>
   233d8:	mov	x0, #0x0                   	// #0
   233dc:	nop
   233e0:	ldrh	w1, [x4, x0, lsl #1]
   233e4:	tbz	w1, #1, 23400 <printf_parse@@Base+0x5ff0>
   233e8:	ldrb	w1, [x20, x0]
   233ec:	ubfx	x3, x1, #6, #2
   233f0:	lsl	x1, x5, x1
   233f4:	ldr	x2, [x19, x3, lsl #3]
   233f8:	orr	x1, x2, x1
   233fc:	str	x1, [x19, x3, lsl #3]
   23400:	add	x0, x0, #0x1
   23404:	cmp	x0, #0x100
   23408:	b.ne	233e0 <printf_parse@@Base+0x5fd0>  // b.any
   2340c:	b	23190 <printf_parse@@Base+0x5d80>
   23410:	mov	x0, #0x0                   	// #0
   23414:	nop
   23418:	ldrh	w1, [x4, x0, lsl #1]
   2341c:	tbz	w1, #9, 23438 <printf_parse@@Base+0x6028>
   23420:	ldrb	w1, [x20, x0]
   23424:	ubfx	x3, x1, #6, #2
   23428:	lsl	x1, x5, x1
   2342c:	ldr	x2, [x19, x3, lsl #3]
   23430:	orr	x1, x2, x1
   23434:	str	x1, [x19, x3, lsl #3]
   23438:	add	x0, x0, #0x1
   2343c:	cmp	x0, #0x100
   23440:	b.ne	23418 <printf_parse@@Base+0x6008>  // b.any
   23444:	b	23190 <printf_parse@@Base+0x5d80>
   23448:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2344c:	mov	x0, x21
   23450:	add	x1, x1, #0x7b8
   23454:	bl	a9b0 <strcmp@plt>
   23458:	cbnz	w0, 2349c <printf_parse@@Base+0x608c>
   2345c:	bl	a9d0 <__ctype_b_loc@plt>
   23460:	mov	x1, #0x0                   	// #0
   23464:	mov	x5, #0x1                   	// #1
   23468:	ldr	x4, [x0]
   2346c:	cbnz	x20, 23798 <printf_parse@@Base+0x6388>
   23470:	ldrh	w0, [x4, x1, lsl #1]
   23474:	asr	x2, x1, #6
   23478:	lsl	x3, x5, x1
   2347c:	add	x1, x1, #0x1
   23480:	tbz	w0, #14, 23490 <printf_parse@@Base+0x6080>
   23484:	ldr	x0, [x19, x2, lsl #3]
   23488:	orr	x0, x0, x3
   2348c:	str	x0, [x19, x2, lsl #3]
   23490:	cmp	x1, #0x100
   23494:	b.ne	23470 <printf_parse@@Base+0x6060>  // b.any
   23498:	b	23190 <printf_parse@@Base+0x5d80>
   2349c:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   234a0:	mov	x0, x21
   234a4:	add	x1, x1, #0x788
   234a8:	bl	a9b0 <strcmp@plt>
   234ac:	cbnz	w0, 234f8 <printf_parse@@Base+0x60e8>
   234b0:	bl	a9d0 <__ctype_b_loc@plt>
   234b4:	mov	x1, #0x0                   	// #0
   234b8:	mov	x5, #0x1                   	// #1
   234bc:	ldr	x4, [x0]
   234c0:	cbnz	x20, 23804 <printf_parse@@Base+0x63f4>
   234c4:	ldrh	w0, [x4, x1, lsl #1]
   234c8:	asr	x2, x1, #6
   234cc:	lsl	x3, x5, x1
   234d0:	add	x1, x1, #0x1
   234d4:	tbz	w0, #8, 234e4 <printf_parse@@Base+0x60d4>
   234d8:	ldr	x0, [x19, x2, lsl #3]
   234dc:	orr	x0, x0, x3
   234e0:	str	x0, [x19, x2, lsl #3]
   234e4:	cmp	x1, #0x100
   234e8:	b.ne	234c4 <printf_parse@@Base+0x60b4>  // b.any
   234ec:	b	23190 <printf_parse@@Base+0x5d80>
   234f0:	mov	w0, #0xc                   	// #12
   234f4:	b	23194 <printf_parse@@Base+0x5d84>
   234f8:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   234fc:	mov	x0, x21
   23500:	add	x1, x1, #0x7c0
   23504:	bl	a9b0 <strcmp@plt>
   23508:	cbnz	w0, 235ec <printf_parse@@Base+0x61dc>
   2350c:	bl	a9d0 <__ctype_b_loc@plt>
   23510:	mov	x1, #0x0                   	// #0
   23514:	mov	x4, #0x1                   	// #1
   23518:	ldr	x2, [x0]
   2351c:	cbnz	x20, 237cc <printf_parse@@Base+0x63bc>
   23520:	ldrh	w0, [x2, x1, lsl #1]
   23524:	asr	x3, x1, #6
   23528:	lsl	x5, x4, x1
   2352c:	add	x1, x1, #0x1
   23530:	tbz	w0, #0, 23540 <printf_parse@@Base+0x6130>
   23534:	ldr	x0, [x19, x3, lsl #3]
   23538:	orr	x0, x0, x5
   2353c:	str	x0, [x19, x3, lsl #3]
   23540:	cmp	x1, #0x100
   23544:	b.ne	23520 <printf_parse@@Base+0x6110>  // b.any
   23548:	b	23190 <printf_parse@@Base+0x5d80>
   2354c:	mov	x0, #0x0                   	// #0
   23550:	ldrh	w1, [x4, x0, lsl #1]
   23554:	tbz	w1, #10, 23570 <printf_parse@@Base+0x6160>
   23558:	ldrb	w1, [x20, x0]
   2355c:	ubfx	x3, x1, #6, #2
   23560:	lsl	x1, x5, x1
   23564:	ldr	x2, [x19, x3, lsl #3]
   23568:	orr	x1, x2, x1
   2356c:	str	x1, [x19, x3, lsl #3]
   23570:	add	x0, x0, #0x1
   23574:	cmp	x0, #0x100
   23578:	b.ne	23550 <printf_parse@@Base+0x6140>  // b.any
   2357c:	b	23190 <printf_parse@@Base+0x5d80>
   23580:	mov	x0, #0x0                   	// #0
   23584:	nop
   23588:	ldrh	w1, [x4, x0, lsl #1]
   2358c:	tbz	w1, #13, 235a8 <printf_parse@@Base+0x6198>
   23590:	ldrb	w1, [x20, x0]
   23594:	ubfx	x3, x1, #6, #2
   23598:	lsl	x1, x5, x1
   2359c:	ldr	x2, [x19, x3, lsl #3]
   235a0:	orr	x1, x2, x1
   235a4:	str	x1, [x19, x3, lsl #3]
   235a8:	add	x0, x0, #0x1
   235ac:	cmp	x0, #0x100
   235b0:	b.ne	23588 <printf_parse@@Base+0x6178>  // b.any
   235b4:	b	23190 <printf_parse@@Base+0x5d80>
   235b8:	mov	x0, #0x0                   	// #0
   235bc:	ldrh	w1, [x4, x0, lsl #1]
   235c0:	tbz	w1, #11, 235dc <printf_parse@@Base+0x61cc>
   235c4:	ldrb	w1, [x20, x0]
   235c8:	ubfx	x3, x1, #6, #2
   235cc:	lsl	x1, x5, x1
   235d0:	ldr	x2, [x19, x3, lsl #3]
   235d4:	orr	x1, x2, x1
   235d8:	str	x1, [x19, x3, lsl #3]
   235dc:	add	x0, x0, #0x1
   235e0:	cmp	x0, #0x100
   235e4:	b.ne	235bc <printf_parse@@Base+0x61ac>  // b.any
   235e8:	b	23190 <printf_parse@@Base+0x5d80>
   235ec:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   235f0:	mov	x0, x21
   235f4:	add	x1, x1, #0x7c8
   235f8:	bl	a9b0 <strcmp@plt>
   235fc:	cbnz	w0, 23678 <printf_parse@@Base+0x6268>
   23600:	bl	a9d0 <__ctype_b_loc@plt>
   23604:	mov	x1, #0x0                   	// #0
   23608:	mov	x4, #0x1                   	// #1
   2360c:	ldr	x3, [x0]
   23610:	cbnz	x20, 23640 <printf_parse@@Base+0x6230>
   23614:	ldrsh	w0, [x3, x1, lsl #1]
   23618:	asr	x2, x1, #6
   2361c:	lsl	x5, x4, x1
   23620:	add	x1, x1, #0x1
   23624:	tbz	w0, #31, 23634 <printf_parse@@Base+0x6224>
   23628:	ldr	x0, [x19, x2, lsl #3]
   2362c:	orr	x0, x0, x5
   23630:	str	x0, [x19, x2, lsl #3]
   23634:	cmp	x1, #0x100
   23638:	b.ne	23614 <printf_parse@@Base+0x6204>  // b.any
   2363c:	b	23190 <printf_parse@@Base+0x5d80>
   23640:	mov	x5, x4
   23644:	mov	x0, #0x0                   	// #0
   23648:	ldrsh	w1, [x3, x0, lsl #1]
   2364c:	tbz	w1, #31, 23668 <printf_parse@@Base+0x6258>
   23650:	ldrb	w1, [x20, x0]
   23654:	ubfx	x4, x1, #6, #2
   23658:	lsl	x1, x5, x1
   2365c:	ldr	x2, [x19, x4, lsl #3]
   23660:	orr	x1, x2, x1
   23664:	str	x1, [x19, x4, lsl #3]
   23668:	add	x0, x0, #0x1
   2366c:	cmp	x0, #0x100
   23670:	b.ne	23648 <printf_parse@@Base+0x6238>  // b.any
   23674:	b	23190 <printf_parse@@Base+0x5d80>
   23678:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2367c:	mov	x0, x21
   23680:	add	x1, x1, #0x7d0
   23684:	bl	a9b0 <strcmp@plt>
   23688:	cbnz	w0, 23704 <printf_parse@@Base+0x62f4>
   2368c:	bl	a9d0 <__ctype_b_loc@plt>
   23690:	mov	x1, #0x0                   	// #0
   23694:	mov	x4, #0x1                   	// #1
   23698:	ldr	x3, [x0]
   2369c:	cbnz	x20, 236cc <printf_parse@@Base+0x62bc>
   236a0:	ldrh	w0, [x3, x1, lsl #1]
   236a4:	asr	x2, x1, #6
   236a8:	lsl	x5, x4, x1
   236ac:	add	x1, x1, #0x1
   236b0:	tbz	w0, #2, 236c0 <printf_parse@@Base+0x62b0>
   236b4:	ldr	x0, [x19, x2, lsl #3]
   236b8:	orr	x0, x0, x5
   236bc:	str	x0, [x19, x2, lsl #3]
   236c0:	cmp	x1, #0x100
   236c4:	b.ne	236a0 <printf_parse@@Base+0x6290>  // b.any
   236c8:	b	23190 <printf_parse@@Base+0x5d80>
   236cc:	mov	x5, x4
   236d0:	mov	x0, #0x0                   	// #0
   236d4:	ldrh	w1, [x3, x0, lsl #1]
   236d8:	tbz	w1, #2, 236f4 <printf_parse@@Base+0x62e4>
   236dc:	ldrb	w1, [x20, x0]
   236e0:	ubfx	x4, x1, #6, #2
   236e4:	lsl	x1, x5, x1
   236e8:	ldr	x2, [x19, x4, lsl #3]
   236ec:	orr	x1, x2, x1
   236f0:	str	x1, [x19, x4, lsl #3]
   236f4:	add	x0, x0, #0x1
   236f8:	cmp	x0, #0x100
   236fc:	b.ne	236d4 <printf_parse@@Base+0x62c4>  // b.any
   23700:	b	23190 <printf_parse@@Base+0x5d80>
   23704:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   23708:	mov	x0, x21
   2370c:	add	x1, x1, #0x7d8
   23710:	bl	a9b0 <strcmp@plt>
   23714:	cbnz	w0, 23790 <printf_parse@@Base+0x6380>
   23718:	bl	a9d0 <__ctype_b_loc@plt>
   2371c:	mov	x1, #0x0                   	// #0
   23720:	mov	x4, #0x1                   	// #1
   23724:	ldr	x3, [x0]
   23728:	cbnz	x20, 23758 <printf_parse@@Base+0x6348>
   2372c:	ldrh	w0, [x3, x1, lsl #1]
   23730:	asr	x2, x1, #6
   23734:	lsl	x5, x4, x1
   23738:	add	x1, x1, #0x1
   2373c:	tbz	w0, #12, 2374c <printf_parse@@Base+0x633c>
   23740:	ldr	x0, [x19, x2, lsl #3]
   23744:	orr	x0, x0, x5
   23748:	str	x0, [x19, x2, lsl #3]
   2374c:	cmp	x1, #0x100
   23750:	b.ne	2372c <printf_parse@@Base+0x631c>  // b.any
   23754:	b	23190 <printf_parse@@Base+0x5d80>
   23758:	mov	x5, x4
   2375c:	mov	x0, #0x0                   	// #0
   23760:	ldrh	w1, [x3, x0, lsl #1]
   23764:	tbz	w1, #12, 23780 <printf_parse@@Base+0x6370>
   23768:	ldrb	w1, [x20, x0]
   2376c:	ubfx	x4, x1, #6, #2
   23770:	lsl	x1, x5, x1
   23774:	ldr	x2, [x19, x4, lsl #3]
   23778:	orr	x1, x2, x1
   2377c:	str	x1, [x19, x4, lsl #3]
   23780:	add	x0, x0, #0x1
   23784:	cmp	x0, #0x100
   23788:	b.ne	23760 <printf_parse@@Base+0x6350>  // b.any
   2378c:	b	23190 <printf_parse@@Base+0x5d80>
   23790:	mov	w0, #0x4                   	// #4
   23794:	b	23194 <printf_parse@@Base+0x5d84>
   23798:	mov	x0, #0x0                   	// #0
   2379c:	ldrh	w1, [x4, x0, lsl #1]
   237a0:	tbz	w1, #14, 237bc <printf_parse@@Base+0x63ac>
   237a4:	ldrb	w1, [x20, x0]
   237a8:	ubfx	x3, x1, #6, #2
   237ac:	lsl	x1, x5, x1
   237b0:	ldr	x2, [x19, x3, lsl #3]
   237b4:	orr	x1, x2, x1
   237b8:	str	x1, [x19, x3, lsl #3]
   237bc:	add	x0, x0, #0x1
   237c0:	cmp	x0, #0x100
   237c4:	b.ne	2379c <printf_parse@@Base+0x638c>  // b.any
   237c8:	b	23190 <printf_parse@@Base+0x5d80>
   237cc:	mov	x5, x4
   237d0:	mov	x0, #0x0                   	// #0
   237d4:	ldrh	w1, [x2, x0, lsl #1]
   237d8:	tbz	w1, #0, 237f4 <printf_parse@@Base+0x63e4>
   237dc:	ldrb	w1, [x20, x0]
   237e0:	ubfx	x4, x1, #6, #2
   237e4:	lsl	x1, x5, x1
   237e8:	ldr	x3, [x19, x4, lsl #3]
   237ec:	orr	x1, x3, x1
   237f0:	str	x1, [x19, x4, lsl #3]
   237f4:	add	x0, x0, #0x1
   237f8:	cmp	x0, #0x100
   237fc:	b.ne	237d4 <printf_parse@@Base+0x63c4>  // b.any
   23800:	b	23190 <printf_parse@@Base+0x5d80>
   23804:	mov	x0, #0x0                   	// #0
   23808:	ldrh	w1, [x4, x0, lsl #1]
   2380c:	tbz	w1, #8, 23828 <printf_parse@@Base+0x6418>
   23810:	ldrb	w1, [x20, x0]
   23814:	ubfx	x3, x1, #6, #2
   23818:	lsl	x1, x5, x1
   2381c:	ldr	x2, [x19, x3, lsl #3]
   23820:	orr	x1, x2, x1
   23824:	str	x1, [x19, x3, lsl #3]
   23828:	add	x0, x0, #0x1
   2382c:	cmp	x0, #0x100
   23830:	b.ne	23808 <printf_parse@@Base+0x63f8>  // b.any
   23834:	b	23190 <printf_parse@@Base+0x5d80>
   23838:	stp	x29, x30, [sp, #-128]!
   2383c:	mov	x29, sp
   23840:	stp	x19, x20, [sp, #16]
   23844:	mov	x20, x3
   23848:	stp	x21, x22, [sp, #32]
   2384c:	mov	x21, x0
   23850:	mov	x22, x5
   23854:	mov	x0, #0x20                  	// #32
   23858:	stp	x23, x24, [sp, #48]
   2385c:	and	w23, w4, #0xff
   23860:	stp	x25, x26, [sp, #64]
   23864:	mov	x25, x1
   23868:	mov	x26, x2
   2386c:	mov	x1, #0x1                   	// #1
   23870:	str	xzr, [sp, #88]
   23874:	bl	a770 <calloc@plt>
   23878:	cbz	x0, 23a58 <printf_parse@@Base+0x6648>
   2387c:	mov	x19, x0
   23880:	mov	x1, #0x1                   	// #1
   23884:	mov	x0, #0x50                  	// #80
   23888:	bl	a770 <calloc@plt>
   2388c:	mov	x24, x0
   23890:	cbz	x0, 23a80 <printf_parse@@Base+0x6670>
   23894:	ldrb	w7, [x0, #32]
   23898:	mov	x5, x26
   2389c:	mov	x0, x25
   238a0:	add	x4, sp, #0x58
   238a4:	add	x3, x24, #0x48
   238a8:	add	x2, x24, #0x18
   238ac:	bfxil	w7, w23, #0, #1
   238b0:	mov	x1, x19
   238b4:	mov	x6, #0x0                   	// #0
   238b8:	strb	w7, [x24, #32]
   238bc:	bl	230b0 <printf_parse@@Base+0x5ca0>
   238c0:	mov	w25, w0
   238c4:	cbnz	w0, 23a98 <printf_parse@@Base+0x6688>
   238c8:	ldrb	w1, [x20]
   238cc:	mov	x0, #0x1                   	// #1
   238d0:	cbz	w1, 238f4 <printf_parse@@Base+0x64e4>
   238d4:	nop
   238d8:	ubfx	x4, x1, #6, #2
   238dc:	lsl	x3, x0, x1
   238e0:	ldrb	w1, [x20, #1]!
   238e4:	ldr	x2, [x19, x4, lsl #3]
   238e8:	orr	x2, x2, x3
   238ec:	str	x2, [x19, x4, lsl #3]
   238f0:	cbnz	w1, 238d8 <printf_parse@@Base+0x64c8>
   238f4:	cbz	w23, 23914 <printf_parse@@Base+0x6504>
   238f8:	mov	x0, #0x0                   	// #0
   238fc:	ldr	x1, [x19, x0, lsl #3]
   23900:	mvn	x1, x1
   23904:	str	x1, [x19, x0, lsl #3]
   23908:	add	x0, x0, #0x1
   2390c:	cmp	x0, #0x4
   23910:	b.ne	238fc <printf_parse@@Base+0x64ec>  // b.any
   23914:	ldr	w0, [x21, #180]
   23918:	cmp	w0, #0x1
   2391c:	b.le	23944 <printf_parse@@Base+0x6534>
   23920:	ldr	x3, [x21, #120]
   23924:	mov	x1, #0x0                   	// #0
   23928:	ldr	x0, [x19, x1]
   2392c:	ldr	x2, [x3, x1]
   23930:	and	x0, x0, x2
   23934:	str	x0, [x19, x1]
   23938:	add	x1, x1, #0x8
   2393c:	cmp	x1, #0x20
   23940:	b.ne	23928 <printf_parse@@Base+0x6518>  // b.any
   23944:	mov	w5, #0x3                   	// #3
   23948:	add	x23, x21, #0x70
   2394c:	add	x25, x21, #0x80
   23950:	add	x26, sp, #0x60
   23954:	mov	x0, x23
   23958:	mov	x1, x25
   2395c:	mov	x4, x26
   23960:	mov	x3, #0x0                   	// #0
   23964:	mov	x2, #0x0                   	// #0
   23968:	str	x19, [sp, #96]
   2396c:	strb	w5, [sp, #104]
   23970:	bl	20060 <printf_parse@@Base+0x2c50>
   23974:	mov	x20, x0
   23978:	cbz	x0, 23a20 <printf_parse@@Base+0x6610>
   2397c:	ldr	w0, [x21, #180]
   23980:	cmp	w0, #0x1
   23984:	b.le	239fc <printf_parse@@Base+0x65ec>
   23988:	ldrb	w0, [x21, #176]
   2398c:	mov	w5, #0x6                   	// #6
   23990:	mov	x3, #0x0                   	// #0
   23994:	mov	x4, x26
   23998:	orr	w0, w0, #0x2
   2399c:	strb	w0, [x21, #176]
   239a0:	mov	x1, x25
   239a4:	mov	x0, x23
   239a8:	mov	x2, #0x0                   	// #0
   239ac:	str	x24, [sp, #96]
   239b0:	strb	w5, [sp, #104]
   239b4:	bl	20060 <printf_parse@@Base+0x2c50>
   239b8:	mov	x3, x0
   239bc:	cbz	x0, 23a20 <printf_parse@@Base+0x6610>
   239c0:	mov	w5, #0xa                   	// #10
   239c4:	mov	x2, x20
   239c8:	mov	x1, x25
   239cc:	mov	x0, x23
   239d0:	add	x4, sp, #0x70
   239d4:	strb	w5, [sp, #120]
   239d8:	bl	20060 <printf_parse@@Base+0x2c50>
   239dc:	mov	x20, x0
   239e0:	mov	x0, x20
   239e4:	ldp	x19, x20, [sp, #16]
   239e8:	ldp	x21, x22, [sp, #32]
   239ec:	ldp	x23, x24, [sp, #48]
   239f0:	ldp	x25, x26, [sp, #64]
   239f4:	ldp	x29, x30, [sp], #128
   239f8:	ret
   239fc:	mov	x0, x24
   23a00:	bl	1f328 <printf_parse@@Base+0x1f18>
   23a04:	mov	x0, x20
   23a08:	ldp	x19, x20, [sp, #16]
   23a0c:	ldp	x21, x22, [sp, #32]
   23a10:	ldp	x23, x24, [sp, #48]
   23a14:	ldp	x25, x26, [sp, #64]
   23a18:	ldp	x29, x30, [sp], #128
   23a1c:	ret
   23a20:	mov	x0, x19
   23a24:	bl	aa50 <free@plt>
   23a28:	mov	x0, x24
   23a2c:	bl	1f328 <printf_parse@@Base+0x1f18>
   23a30:	mov	w0, #0xc                   	// #12
   23a34:	str	w0, [x22]
   23a38:	mov	x20, #0x0                   	// #0
   23a3c:	mov	x0, x20
   23a40:	ldp	x19, x20, [sp, #16]
   23a44:	ldp	x21, x22, [sp, #32]
   23a48:	ldp	x23, x24, [sp, #48]
   23a4c:	ldp	x25, x26, [sp, #64]
   23a50:	ldp	x29, x30, [sp], #128
   23a54:	ret
   23a58:	mov	w0, #0xc                   	// #12
   23a5c:	str	w0, [x22]
   23a60:	mov	x20, #0x0                   	// #0
   23a64:	mov	x0, x20
   23a68:	ldp	x19, x20, [sp, #16]
   23a6c:	ldp	x21, x22, [sp, #32]
   23a70:	ldp	x23, x24, [sp, #48]
   23a74:	ldp	x25, x26, [sp, #64]
   23a78:	ldp	x29, x30, [sp], #128
   23a7c:	ret
   23a80:	mov	x0, x19
   23a84:	bl	aa50 <free@plt>
   23a88:	mov	w0, #0xc                   	// #12
   23a8c:	mov	x20, #0x0                   	// #0
   23a90:	str	w0, [x22]
   23a94:	b	239e0 <printf_parse@@Base+0x65d0>
   23a98:	mov	x0, x19
   23a9c:	bl	aa50 <free@plt>
   23aa0:	mov	x0, x24
   23aa4:	mov	x20, #0x0                   	// #0
   23aa8:	bl	1f328 <printf_parse@@Base+0x1f18>
   23aac:	str	w25, [x22]
   23ab0:	b	239e0 <printf_parse@@Base+0x65d0>
   23ab4:	nop
   23ab8:	stp	x29, x30, [sp, #-416]!
   23abc:	mov	x29, sp
   23ac0:	stp	x21, x22, [sp, #32]
   23ac4:	ldr	x21, [x0]
   23ac8:	stp	x19, x20, [sp, #16]
   23acc:	stp	x25, x26, [sp, #64]
   23ad0:	mov	w26, #0x0                   	// #0
   23ad4:	stp	x27, x28, [sp, #80]
   23ad8:	mov	x28, x3
   23adc:	stp	x0, x2, [sp, #120]
   23ae0:	ldr	w0, [x21, #180]
   23ae4:	str	x1, [sp, #136]
   23ae8:	cmp	w0, #0x1
   23aec:	b.ne	23afc <printf_parse@@Base+0x66ec>  // b.any
   23af0:	ldr	x0, [sp, #120]
   23af4:	ldr	x6, [x0, #24]
   23af8:	ubfx	w26, w6, #22, #1
   23afc:	ldr	x0, [sp, #136]
   23b00:	mov	x20, #0x0                   	// #0
   23b04:	ldr	x2, [x0]
   23b08:	cmp	x2, #0x0
   23b0c:	b.le	23be0 <printf_parse@@Base+0x67d0>
   23b10:	add	x22, sp, #0xa0
   23b14:	mov	w27, #0x1                   	// #1
   23b18:	stp	x23, x24, [sp, #48]
   23b1c:	add	x24, sp, #0x98
   23b20:	b	23b54 <printf_parse@@Base+0x6744>
   23b24:	cmp	w19, #0x3
   23b28:	b.eq	23d20 <printf_parse@@Base+0x6910>  // b.none
   23b2c:	cmp	w19, #0x6
   23b30:	b.eq	23bf8 <printf_parse@@Base+0x67e8>  // b.none
   23b34:	and	w0, w19, #0xfffffffd
   23b38:	cmp	w0, #0x5
   23b3c:	b.eq	23e64 <printf_parse@@Base+0x6a54>  // b.none
   23b40:	cmp	w19, #0x2
   23b44:	b.eq	23e84 <printf_parse@@Base+0x6a74>  // b.none
   23b48:	add	x20, x20, #0x1
   23b4c:	cmp	x20, x2
   23b50:	b.ge	23bdc <printf_parse@@Base+0x67cc>  // b.tcont
   23b54:	ldr	x0, [sp, #128]
   23b58:	ldr	x1, [x0]
   23b5c:	ldr	x0, [x21]
   23b60:	ldr	x25, [x1, x20, lsl #3]
   23b64:	lsl	x1, x25, #4
   23b68:	str	x1, [sp, #104]
   23b6c:	add	x1, x0, x1
   23b70:	ldrb	w19, [x1, #8]
   23b74:	cmp	w19, #0x1
   23b78:	b.ne	23b24 <printf_parse@@Base+0x6714>  // b.any
   23b7c:	ldr	x1, [sp, #104]
   23b80:	ldrb	w1, [x0, x1]
   23b84:	str	w1, [sp, #112]
   23b88:	and	x0, x1, #0xff
   23b8c:	strb	w19, [x28, x0]
   23b90:	cbz	w26, 23bac <printf_parse@@Base+0x679c>
   23b94:	bl	a530 <__ctype_tolower_loc@plt>
   23b98:	ldr	w1, [sp, #112]
   23b9c:	ldr	x0, [x0]
   23ba0:	mov	w1, w1
   23ba4:	ldrsw	x0, [x0, x1, lsl #2]
   23ba8:	strb	w19, [x28, x0]
   23bac:	ldr	x0, [sp, #120]
   23bb0:	ldr	x0, [x0, #24]
   23bb4:	tbz	w0, #22, 23bc8 <printf_parse@@Base+0x67b8>
   23bb8:	ldr	w0, [x21, #180]
   23bbc:	cmp	w0, #0x1
   23bc0:	b.gt	23da0 <printf_parse@@Base+0x6990>
   23bc4:	nop
   23bc8:	ldr	x0, [sp, #136]
   23bcc:	add	x20, x20, #0x1
   23bd0:	ldr	x2, [x0]
   23bd4:	cmp	x20, x2
   23bd8:	b.lt	23b54 <printf_parse@@Base+0x6744>  // b.tstop
   23bdc:	ldp	x23, x24, [sp, #48]
   23be0:	ldp	x19, x20, [sp, #16]
   23be4:	ldp	x21, x22, [sp, #32]
   23be8:	ldp	x25, x26, [sp, #64]
   23bec:	ldp	x27, x28, [sp, #80]
   23bf0:	ldp	x29, x30, [sp], #416
   23bf4:	ret
   23bf8:	ldr	w0, [x21, #180]
   23bfc:	ldr	x25, [x1]
   23c00:	cmp	w0, #0x1
   23c04:	b.le	23c20 <printf_parse@@Base+0x6810>
   23c08:	ldr	x0, [x25, #72]
   23c0c:	cbnz	x0, 23cdc <printf_parse@@Base+0x68cc>
   23c10:	ldrb	w0, [x25, #32]
   23c14:	tbnz	w0, #0, 23cdc <printf_parse@@Base+0x68cc>
   23c18:	ldr	x0, [x25, #64]
   23c1c:	cbnz	x0, 23cdc <printf_parse@@Base+0x68cc>
   23c20:	ldr	x0, [x25, #40]
   23c24:	mov	x23, #0x0                   	// #0
   23c28:	cmp	x0, #0x0
   23c2c:	b.gt	23c40 <printf_parse@@Base+0x6830>
   23c30:	b	23b48 <printf_parse@@Base+0x6738>
   23c34:	ldr	x0, [x25, #40]
   23c38:	cmp	x23, x0
   23c3c:	b.ge	23bc8 <printf_parse@@Base+0x67b8>  // b.tcont
   23c40:	str	xzr, [x24]
   23c44:	mov	x2, x24
   23c48:	mov	x0, x22
   23c4c:	lsl	x19, x23, #2
   23c50:	ldr	x1, [x25]
   23c54:	ldr	w1, [x1, x23, lsl #2]
   23c58:	add	x23, x23, #0x1
   23c5c:	bl	aff0 <wcrtomb@plt>
   23c60:	cmn	x0, #0x1
   23c64:	b.eq	23c94 <printf_parse@@Base+0x6884>  // b.none
   23c68:	ldrb	w1, [sp, #160]
   23c6c:	str	w1, [sp, #104]
   23c70:	and	x0, x1, #0xff
   23c74:	strb	w27, [x28, x0]
   23c78:	cbz	w26, 23c94 <printf_parse@@Base+0x6884>
   23c7c:	bl	a530 <__ctype_tolower_loc@plt>
   23c80:	ldr	w1, [sp, #104]
   23c84:	ldr	x0, [x0]
   23c88:	mov	w1, w1
   23c8c:	ldrsw	x0, [x0, x1, lsl #2]
   23c90:	strb	w27, [x28, x0]
   23c94:	ldr	x0, [sp, #120]
   23c98:	ldr	x0, [x0, #24]
   23c9c:	tbz	w0, #22, 23c34 <printf_parse@@Base+0x6824>
   23ca0:	ldr	w0, [x21, #180]
   23ca4:	cmp	w0, #0x1
   23ca8:	b.le	23c34 <printf_parse@@Base+0x6824>
   23cac:	ldr	x0, [x25]
   23cb0:	ldr	w0, [x0, x19]
   23cb4:	bl	af70 <towlower@plt>
   23cb8:	mov	w1, w0
   23cbc:	mov	x2, x24
   23cc0:	mov	x0, x22
   23cc4:	bl	aff0 <wcrtomb@plt>
   23cc8:	cmn	x0, #0x1
   23ccc:	b.eq	23c34 <printf_parse@@Base+0x6824>  // b.none
   23cd0:	ldrb	w0, [sp, #160]
   23cd4:	strb	w27, [x28, x0]
   23cd8:	b	23c34 <printf_parse@@Base+0x6824>
   23cdc:	strb	wzr, [sp, #152]
   23ce0:	mov	x3, x22
   23ce4:	mov	x1, x24
   23ce8:	mov	x2, #0x1                   	// #1
   23cec:	mov	x0, #0x0                   	// #0
   23cf0:	str	xzr, [x22]
   23cf4:	bl	a3e0 <rpl_mbrtowc@plt>
   23cf8:	cmn	x0, #0x2
   23cfc:	b.ne	23d08 <printf_parse@@Base+0x68f8>  // b.any
   23d00:	ldrb	w0, [sp, #152]
   23d04:	strb	w27, [x28, x0]
   23d08:	ldrb	w0, [sp, #152]
   23d0c:	add	w0, w0, #0x1
   23d10:	and	w0, w0, #0xff
   23d14:	strb	w0, [sp, #152]
   23d18:	cbnz	w0, 23ce0 <printf_parse@@Base+0x68d0>
   23d1c:	b	23bc8 <printf_parse@@Base+0x67b8>
   23d20:	str	xzr, [sp, #112]
   23d24:	ldr	x0, [x1]
   23d28:	mov	w19, #0x0                   	// #0
   23d2c:	ldr	x1, [sp, #112]
   23d30:	ldr	x25, [x0, x1]
   23d34:	lsl	x23, x1, #3
   23d38:	lsr	x0, x25, x19
   23d3c:	add	w19, w19, #0x1
   23d40:	tbz	w0, #0, 23d70 <printf_parse@@Base+0x6960>
   23d44:	strb	w27, [x28, x23]
   23d48:	add	w0, w23, #0x80
   23d4c:	add	x3, x28, x23
   23d50:	cmp	w0, #0x17f
   23d54:	cbz	w26, 23d70 <printf_parse@@Base+0x6960>
   23d58:	b.hi	23d6c <printf_parse@@Base+0x695c>  // b.pmore
   23d5c:	bl	a530 <__ctype_tolower_loc@plt>
   23d60:	ldr	x0, [x0]
   23d64:	ldrsw	x3, [x0, x23, lsl #2]
   23d68:	add	x3, x28, x3
   23d6c:	strb	w27, [x3]
   23d70:	add	x23, x23, #0x1
   23d74:	cmp	w19, #0x40
   23d78:	b.ne	23d38 <printf_parse@@Base+0x6928>  // b.any
   23d7c:	ldr	x0, [sp, #112]
   23d80:	add	x0, x0, #0x8
   23d84:	str	x0, [sp, #112]
   23d88:	cmp	x0, #0x20
   23d8c:	b.eq	23bc8 <printf_parse@@Base+0x67b8>  // b.none
   23d90:	ldr	x0, [x21]
   23d94:	ldr	x1, [sp, #104]
   23d98:	add	x1, x0, x1
   23d9c:	b	23d24 <printf_parse@@Base+0x6914>
   23da0:	ldr	x2, [x21]
   23da4:	add	x0, x25, #0x1
   23da8:	ldr	x1, [sp, #104]
   23dac:	add	x7, x22, #0x1
   23db0:	ldrb	w1, [x2, x1]
   23db4:	strb	w1, [sp, #160]
   23db8:	ldr	x1, [x21, #16]
   23dbc:	cmp	x1, x0
   23dc0:	b.ls	23ec0 <printf_parse@@Base+0x6ab0>  // b.plast
   23dc4:	mov	w9, #0xff                  	// #255
   23dc8:	mov	w8, #0x1                   	// #1
   23dcc:	movk	w9, #0x20, lsl #16
   23dd0:	movk	w8, #0x20, lsl #16
   23dd4:	b	23df0 <printf_parse@@Base+0x69e0>
   23dd8:	ldrb	w1, [x2, x3]
   23ddc:	strb	w1, [x7], #1
   23de0:	ldr	x1, [x21, #16]
   23de4:	cmp	x1, x0
   23de8:	b.ls	23e0c <printf_parse@@Base+0x69fc>  // b.plast
   23dec:	ldr	x2, [x21]
   23df0:	lsl	x3, x0, #4
   23df4:	add	x1, x2, x3
   23df8:	add	x0, x0, #0x1
   23dfc:	ldr	w1, [x1, #8]
   23e00:	and	w1, w1, w9
   23e04:	cmp	w1, w8
   23e08:	b.eq	23dd8 <printf_parse@@Base+0x69c8>  // b.none
   23e0c:	sub	x19, x7, x22
   23e10:	mov	x3, x24
   23e14:	mov	x2, x19
   23e18:	mov	x1, x22
   23e1c:	add	x0, sp, #0x94
   23e20:	str	xzr, [x24]
   23e24:	bl	a3e0 <rpl_mbrtowc@plt>
   23e28:	cmp	x0, x19
   23e2c:	b.ne	23bc8 <printf_parse@@Base+0x67b8>  // b.any
   23e30:	ldr	w0, [sp, #148]
   23e34:	bl	af70 <towlower@plt>
   23e38:	mov	w1, w0
   23e3c:	mov	x2, x24
   23e40:	mov	x0, x22
   23e44:	bl	aff0 <wcrtomb@plt>
   23e48:	cmn	x0, #0x1
   23e4c:	b.eq	23bc8 <printf_parse@@Base+0x67b8>  // b.none
   23e50:	ldrb	w0, [sp, #160]
   23e54:	strb	w27, [x28, x0]
   23e58:	ldr	x0, [sp, #136]
   23e5c:	ldr	x2, [x0]
   23e60:	b	23b48 <printf_parse@@Base+0x6738>
   23e64:	mov	x0, x28
   23e68:	mov	x2, #0x100                 	// #256
   23e6c:	mov	w1, #0x1                   	// #1
   23e70:	bl	a6f0 <memset@plt>
   23e74:	cmp	w19, #0x2
   23e78:	b.eq	23e94 <printf_parse@@Base+0x6a84>  // b.none
   23e7c:	ldp	x23, x24, [sp, #48]
   23e80:	b	23be0 <printf_parse@@Base+0x67d0>
   23e84:	mov	x0, x28
   23e88:	mov	x2, #0x100                 	// #256
   23e8c:	mov	w1, #0x1                   	// #1
   23e90:	bl	a6f0 <memset@plt>
   23e94:	ldr	x1, [sp, #120]
   23e98:	ldp	x23, x24, [sp, #48]
   23e9c:	ldrb	w0, [x1, #56]
   23ea0:	ldp	x19, x20, [sp, #16]
   23ea4:	orr	w0, w0, #0x1
   23ea8:	strb	w0, [x1, #56]
   23eac:	ldp	x21, x22, [sp, #32]
   23eb0:	ldp	x25, x26, [sp, #64]
   23eb4:	ldp	x27, x28, [sp, #80]
   23eb8:	ldp	x29, x30, [sp], #416
   23ebc:	ret
   23ec0:	mov	x19, #0x1                   	// #1
   23ec4:	b	23e10 <printf_parse@@Base+0x6a00>
   23ec8:	lsl	x7, x2, #4
   23ecc:	stp	x29, x30, [sp, #-48]!
   23ed0:	mov	x8, x0
   23ed4:	add	x0, x0, x7
   23ed8:	mov	x29, sp
   23edc:	mov	x5, x3
   23ee0:	stp	x19, x20, [sp, #16]
   23ee4:	mov	x6, x4
   23ee8:	ldrb	w10, [x0, #8]
   23eec:	cmp	w10, #0x7
   23ef0:	b.eq	24020 <printf_parse@@Base+0x6c10>  // b.none
   23ef4:	ldr	w0, [x3, #144]
   23ef8:	cmp	w0, #0x1
   23efc:	b.eq	23f28 <printf_parse@@Base+0x6b18>  // b.none
   23f00:	mov	x9, x1
   23f04:	mov	x0, x3
   23f08:	mov	x1, x4
   23f0c:	bl	1fba0 <printf_parse@@Base+0x2790>
   23f10:	mov	w19, w0
   23f14:	cmp	w10, #0x5
   23f18:	b.eq	23f3c <printf_parse@@Base+0x6b2c>  // b.none
   23f1c:	cmp	w10, #0x6
   23f20:	ccmp	w0, #0x1, #0x4, eq  // eq = none
   23f24:	b.ne	23f70 <printf_parse@@Base+0x6b60>  // b.any
   23f28:	mov	w19, #0x0                   	// #0
   23f2c:	mov	w0, w19
   23f30:	ldp	x19, x20, [sp, #16]
   23f34:	ldp	x29, x30, [sp], #48
   23f38:	ret
   23f3c:	cmp	w0, #0x1
   23f40:	b.eq	23f28 <printf_parse@@Base+0x6b18>  // b.none
   23f44:	ldr	x0, [x9]
   23f48:	tbnz	w0, #6, 23f5c <printf_parse@@Base+0x6b4c>
   23f4c:	ldr	x1, [x5, #8]
   23f50:	ldrb	w1, [x1, x6]
   23f54:	cmp	w1, #0xa
   23f58:	b.eq	23f28 <printf_parse@@Base+0x6b18>  // b.none
   23f5c:	tbz	w0, #7, 23f2c <printf_parse@@Base+0x6b1c>
   23f60:	ldr	x0, [x5, #8]
   23f64:	ldrb	w0, [x0, x6]
   23f68:	cbz	w0, 23f28 <printf_parse@@Base+0x6b18>
   23f6c:	b	23f2c <printf_parse@@Base+0x6b1c>
   23f70:	stp	x21, x22, [sp, #32]
   23f74:	ldr	x22, [x8, x7]
   23f78:	ldr	x4, [x22, #64]
   23f7c:	ldr	x2, [x22, #40]
   23f80:	cbnz	x4, 23f90 <printf_parse@@Base+0x6b80>
   23f84:	ldr	x0, [x22, #72]
   23f88:	orr	x0, x2, x0
   23f8c:	cbz	x0, 24010 <printf_parse@@Base+0x6c00>
   23f90:	ldr	x0, [x5, #16]
   23f94:	cmp	x2, #0x0
   23f98:	ldr	w20, [x0, x6, lsl #2]
   23f9c:	b.le	240a8 <printf_parse@@Base+0x6c98>
   23fa0:	mov	x1, #0x0                   	// #0
   23fa4:	ldr	x3, [x22]
   23fa8:	b	23fb4 <printf_parse@@Base+0x6ba4>
   23fac:	cmp	x1, x2
   23fb0:	b.eq	240a8 <printf_parse@@Base+0x6c98>  // b.none
   23fb4:	ldr	w0, [x3, x1, lsl #2]
   23fb8:	add	x1, x1, #0x1
   23fbc:	cmp	w20, w0
   23fc0:	b.ne	23fac <printf_parse@@Base+0x6b9c>  // b.any
   23fc4:	ldrb	w0, [x22, #32]
   23fc8:	tbz	w0, #0, 24018 <printf_parse@@Base+0x6c08>
   23fcc:	ldp	x21, x22, [sp, #32]
   23fd0:	b	23f28 <printf_parse@@Base+0x6b18>
   23fd4:	ldr	x4, [x22, #64]
   23fd8:	cmp	x4, #0x0
   23fdc:	b.le	24010 <printf_parse@@Base+0x6c00>
   23fe0:	ldr	x2, [x22, #8]
   23fe4:	mov	x0, #0x0                   	// #0
   23fe8:	ldr	w1, [x2, x0, lsl #2]
   23fec:	cmp	w20, w1
   23ff0:	b.cc	24004 <printf_parse@@Base+0x6bf4>  // b.lo, b.ul, b.last
   23ff4:	ldr	x1, [x22, #16]
   23ff8:	ldr	w1, [x1, x0, lsl #2]
   23ffc:	cmp	w20, w1
   24000:	b.ls	23fc4 <printf_parse@@Base+0x6bb4>  // b.plast
   24004:	add	x0, x0, #0x1
   24008:	cmp	x0, x4
   2400c:	b.ne	23fe8 <printf_parse@@Base+0x6bd8>  // b.any
   24010:	ldrb	w0, [x22, #32]
   24014:	tbz	w0, #0, 23fcc <printf_parse@@Base+0x6bbc>
   24018:	ldp	x21, x22, [sp, #32]
   2401c:	b	23f2c <printf_parse@@Base+0x6b1c>
   24020:	ldr	x0, [x3, #8]
   24024:	add	x1, x0, x4
   24028:	ldrb	w0, [x0, x4]
   2402c:	cmp	w0, #0xc1
   24030:	b.ls	23f28 <printf_parse@@Base+0x6b18>  // b.plast
   24034:	ldr	x2, [x5, #88]
   24038:	add	x3, x4, #0x1
   2403c:	cmp	x3, x2
   24040:	b.ge	23f28 <printf_parse@@Base+0x6b18>  // b.tcont
   24044:	ldrb	w3, [x1, #1]
   24048:	cmp	w0, #0xdf
   2404c:	b.ls	24108 <printf_parse@@Base+0x6cf8>  // b.plast
   24050:	cmp	w0, #0xef
   24054:	b.hi	240e4 <printf_parse@@Base+0x6cd4>  // b.pmore
   24058:	cmp	w0, #0xe0
   2405c:	mov	w0, #0x9f                  	// #159
   24060:	ccmp	w3, w0, #0x2, eq  // eq = none
   24064:	b.ls	23f28 <printf_parse@@Base+0x6b18>  // b.plast
   24068:	mov	x3, #0x3                   	// #3
   2406c:	mov	w19, w3
   24070:	add	x6, x6, x3
   24074:	cmp	x2, x6
   24078:	b.lt	23f28 <printf_parse@@Base+0x6b18>  // b.tstop
   2407c:	mov	x2, #0x1                   	// #1
   24080:	b	2408c <printf_parse@@Base+0x6c7c>
   24084:	cmp	x2, x3
   24088:	b.eq	23f2c <printf_parse@@Base+0x6b1c>  // b.none
   2408c:	ldrb	w0, [x1, x2]
   24090:	add	x2, x2, #0x1
   24094:	sub	w0, w0, #0x80
   24098:	and	w0, w0, #0xff
   2409c:	cmp	w0, #0x3f
   240a0:	b.ls	24084 <printf_parse@@Base+0x6c74>  // b.plast
   240a4:	b	23f28 <printf_parse@@Base+0x6b18>
   240a8:	ldr	x0, [x22, #72]
   240ac:	cmp	x0, #0x0
   240b0:	b.le	23fd8 <printf_parse@@Base+0x6bc8>
   240b4:	mov	x21, #0x0                   	// #0
   240b8:	b	240c8 <printf_parse@@Base+0x6cb8>
   240bc:	ldr	x0, [x22, #72]
   240c0:	cmp	x21, x0
   240c4:	b.ge	23fd4 <printf_parse@@Base+0x6bc4>  // b.tcont
   240c8:	ldr	x1, [x22, #24]
   240cc:	mov	w0, w20
   240d0:	ldr	x1, [x1, x21, lsl #3]
   240d4:	add	x21, x21, #0x1
   240d8:	bl	a5e0 <iswctype@plt>
   240dc:	cbz	w0, 240bc <printf_parse@@Base+0x6cac>
   240e0:	b	23fc4 <printf_parse@@Base+0x6bb4>
   240e4:	cmp	w0, #0xf7
   240e8:	b.hi	24120 <printf_parse@@Base+0x6d10>  // b.pmore
   240ec:	cmp	w0, #0xf0
   240f0:	mov	w0, #0x8f                  	// #143
   240f4:	ccmp	w3, w0, #0x2, eq  // eq = none
   240f8:	b.ls	23f28 <printf_parse@@Base+0x6b18>  // b.plast
   240fc:	mov	x3, #0x4                   	// #4
   24100:	mov	w19, w3
   24104:	b	24070 <printf_parse@@Base+0x6c60>
   24108:	sub	w0, w3, #0x80
   2410c:	mov	w19, #0x2                   	// #2
   24110:	and	w0, w0, #0xff
   24114:	cmp	w0, #0x3f
   24118:	b.ls	23f2c <printf_parse@@Base+0x6b1c>  // b.plast
   2411c:	b	23f28 <printf_parse@@Base+0x6b18>
   24120:	cmp	w0, #0xfb
   24124:	b.hi	24144 <printf_parse@@Base+0x6d34>  // b.pmore
   24128:	cmp	w0, #0xf8
   2412c:	mov	w0, #0x87                  	// #135
   24130:	ccmp	w3, w0, #0x2, eq  // eq = none
   24134:	b.ls	23f28 <printf_parse@@Base+0x6b18>  // b.plast
   24138:	mov	x3, #0x5                   	// #5
   2413c:	mov	w19, w3
   24140:	b	24070 <printf_parse@@Base+0x6c60>
   24144:	cmp	w0, #0xfd
   24148:	b.hi	23f28 <printf_parse@@Base+0x6b18>  // b.pmore
   2414c:	cmp	w0, #0xfc
   24150:	mov	w0, #0x83                  	// #131
   24154:	ccmp	w3, w0, #0x2, eq  // eq = none
   24158:	b.ls	23f28 <printf_parse@@Base+0x6b18>  // b.plast
   2415c:	mov	x3, #0x6                   	// #6
   24160:	mov	w19, w3
   24164:	b	24070 <printf_parse@@Base+0x6c60>
   24168:	stp	x29, x30, [sp, #-272]!
   2416c:	mov	x29, sp
   24170:	stp	x19, x20, [sp, #16]
   24174:	mov	x20, x2
   24178:	mov	x19, x3
   2417c:	ldr	x2, [x0, #152]
   24180:	str	x2, [sp, #128]
   24184:	stp	x21, x22, [sp, #32]
   24188:	ldr	x2, [x2]
   2418c:	str	x1, [sp, #176]
   24190:	ldr	x22, [x1, #8]
   24194:	lsl	x1, x20, #4
   24198:	stp	x27, x28, [sp, #80]
   2419c:	mov	x27, x0
   241a0:	ldrsw	x0, [x0, #224]
   241a4:	ldr	x1, [x2, x1]
   241a8:	stp	x23, x24, [sp, #48]
   241ac:	add	x0, x0, x5
   241b0:	str	x5, [sp, #144]
   241b4:	cmp	x0, x22
   241b8:	str	x1, [sp, #152]
   241bc:	str	w6, [sp, #164]
   241c0:	str	x4, [sp, #200]
   241c4:	str	wzr, [sp, #216]
   241c8:	b.ge	24638 <printf_parse@@Base+0x7228>  // b.tcont
   241cc:	ldr	x0, [sp, #176]
   241d0:	ldr	w2, [x27, #160]
   241d4:	ldr	x21, [x0]
   241d8:	ldr	x22, [x0, #16]
   241dc:	ldr	x0, [x27, #72]
   241e0:	str	x0, [sp, #192]
   241e4:	ldr	x0, [x27, #184]
   241e8:	str	x0, [sp, #184]
   241ec:	cbz	x21, 245c8 <printf_parse@@Base+0x71b8>
   241f0:	str	x21, [x27, #72]
   241f4:	sub	x1, x21, #0x1
   241f8:	str	x22, [x27, #184]
   241fc:	mov	x0, x27
   24200:	bl	223f0 <printf_parse@@Base+0x4fe0>
   24204:	mov	w23, w0
   24208:	cmp	x21, x19
   2420c:	b.eq	245e0 <printf_parse@@Base+0x71d0>  // b.none
   24210:	ldr	x19, [x22, x21, lsl #3]
   24214:	cbz	x19, 24220 <printf_parse@@Base+0x6e10>
   24218:	ldrb	w0, [x19, #104]
   2421c:	tbnz	w0, #6, 244d0 <printf_parse@@Base+0x70c0>
   24220:	stp	xzr, xzr, [sp, #224]
   24224:	str	xzr, [sp, #240]
   24228:	ldr	x0, [sp, #144]
   2422c:	cmp	x21, x0
   24230:	b.ge	24474 <printf_parse@@Base+0x7064>  // b.tcont
   24234:	add	x22, x21, #0x1
   24238:	stp	x25, x26, [sp, #64]
   2423c:	add	x25, sp, #0xe0
   24240:	add	x26, sp, #0xf8
   24244:	add	x0, sp, #0xdc
   24248:	str	xzr, [sp, #112]
   2424c:	str	x0, [sp, #168]
   24250:	ldr	x1, [sp, #112]
   24254:	sub	x21, x22, #0x1
   24258:	ldrsw	x0, [x27, #224]
   2425c:	cmp	x1, x0
   24260:	b.gt	24470 <printf_parse@@Base+0x7060>
   24264:	ldr	x0, [x27, #184]
   24268:	lsl	x1, x22, #3
   2426c:	str	x1, [sp, #120]
   24270:	str	xzr, [sp, #232]
   24274:	ldr	x1, [x0, x22, lsl #3]
   24278:	cbz	x1, 24550 <printf_parse@@Base+0x7140>
   2427c:	add	x1, x1, #0x8
   24280:	mov	x0, x25
   24284:	bl	205d8 <printf_parse@@Base+0x31c8>
   24288:	str	w0, [sp, #216]
   2428c:	cbnz	w0, 2456c <printf_parse@@Base+0x715c>
   24290:	cbz	x19, 243d8 <printf_parse@@Base+0x6fc8>
   24294:	ldr	x0, [x19, #40]
   24298:	stp	xzr, xzr, [x26]
   2429c:	add	x19, x19, #0x20
   242a0:	str	xzr, [x26, #16]
   242a4:	cmp	x0, #0x0
   242a8:	str	wzr, [sp, #220]
   242ac:	ldr	x23, [x27, #152]
   242b0:	b.le	246bc <printf_parse@@Base+0x72ac>
   242b4:	add	x0, x23, #0xd8
   242b8:	mov	x24, #0x0                   	// #0
   242bc:	str	x0, [sp, #136]
   242c0:	b	2430c <printf_parse@@Base+0x6efc>
   242c4:	mov	x2, x21
   242c8:	mov	x0, x27
   242cc:	bl	224f0 <printf_parse@@Base+0x50e0>
   242d0:	tst	w0, #0xff
   242d4:	b.eq	242fc <printf_parse@@Base+0x6eec>  // b.none
   242d8:	lsl	x0, x28, #3
   242dc:	str	x0, [sp, #104]
   242e0:	ldr	x1, [x23, #24]
   242e4:	mov	x0, x25
   242e8:	ldr	x2, [sp, #104]
   242ec:	ldr	x1, [x1, x2]
   242f0:	bl	1e670 <printf_parse@@Base+0x1260>
   242f4:	tst	w0, #0xff
   242f8:	b.eq	2455c <printf_parse@@Base+0x714c>  // b.none
   242fc:	ldr	x0, [x19, #8]
   24300:	add	x24, x24, #0x1
   24304:	cmp	x24, x0
   24308:	b.ge	24594 <printf_parse@@Base+0x7184>  // b.tcont
   2430c:	ldr	x1, [x19, #16]
   24310:	ldr	x0, [x23]
   24314:	ldr	x28, [x1, x24, lsl #3]
   24318:	lsl	x20, x28, #4
   2431c:	add	x1, x0, x20
   24320:	ldrb	w2, [x1, #10]
   24324:	tbz	w2, #4, 242c4 <printf_parse@@Base+0x6eb4>
   24328:	ldr	x1, [sp, #136]
   2432c:	mov	x4, x21
   24330:	mov	x3, x27
   24334:	mov	x2, x28
   24338:	bl	23ec8 <printf_parse@@Base+0x6ab8>
   2433c:	cmp	w0, #0x1
   24340:	b.le	24540 <printf_parse@@Base+0x7130>
   24344:	ldr	x1, [x27, #184]
   24348:	add	x20, x21, w0, sxtw
   2434c:	ldr	x0, [x23, #24]
   24350:	lsl	x2, x28, #3
   24354:	ldr	x1, [x1, x20, lsl #3]
   24358:	str	x2, [sp, #104]
   2435c:	ldr	x28, [x0, x28, lsl #3]
   24360:	str	xzr, [sp, #256]
   24364:	cbz	x1, 2437c <printf_parse@@Base+0x6f6c>
   24368:	add	x1, x1, #0x8
   2436c:	mov	x0, x26
   24370:	bl	205d8 <printf_parse@@Base+0x31c8>
   24374:	str	w0, [sp, #220]
   24378:	cbnz	w0, 243c0 <printf_parse@@Base+0x6fb0>
   2437c:	mov	x1, x28
   24380:	mov	x0, x26
   24384:	bl	1e670 <printf_parse@@Base+0x1260>
   24388:	tst	w0, #0xff
   2438c:	b.eq	2455c <printf_parse@@Base+0x714c>  // b.none
   24390:	ldr	x0, [sp, #168]
   24394:	mov	x1, x23
   24398:	ldr	x28, [x27, #184]
   2439c:	mov	x2, x26
   243a0:	bl	21040 <printf_parse@@Base+0x3c30>
   243a4:	ldr	x1, [x27, #184]
   243a8:	str	x0, [x28, x20, lsl #3]
   243ac:	ldr	x0, [x1, x20, lsl #3]
   243b0:	cbnz	x0, 242e0 <printf_parse@@Base+0x6ed0>
   243b4:	ldr	w0, [sp, #220]
   243b8:	cbz	w0, 242e0 <printf_parse@@Base+0x6ed0>
   243bc:	nop
   243c0:	ldr	x0, [sp, #264]
   243c4:	bl	aa50 <free@plt>
   243c8:	ldr	w0, [sp, #220]
   243cc:	str	w0, [sp, #216]
   243d0:	cbnz	w0, 2456c <printf_parse@@Base+0x715c>
   243d4:	nop
   243d8:	ldr	x0, [sp, #232]
   243dc:	mov	x20, x22
   243e0:	cbz	x0, 24420 <printf_parse@@Base+0x7010>
   243e4:	ldr	w3, [sp, #164]
   243e8:	mov	x1, x25
   243ec:	ldr	x0, [sp, #128]
   243f0:	ldr	x2, [sp, #152]
   243f4:	bl	209e0 <printf_parse@@Base+0x35d0>
   243f8:	str	w0, [sp, #216]
   243fc:	cbnz	w0, 2456c <printf_parse@@Base+0x715c>
   24400:	ldr	w4, [sp, #164]
   24404:	mov	x2, x22
   24408:	ldr	x3, [sp, #152]
   2440c:	mov	x1, x25
   24410:	mov	x0, x27
   24414:	bl	21338 <printf_parse@@Base+0x3f28>
   24418:	str	w0, [sp, #216]
   2441c:	cbnz	w0, 2456c <printf_parse@@Base+0x715c>
   24420:	ldr	w2, [x27, #160]
   24424:	mov	x1, x21
   24428:	mov	x0, x27
   2442c:	bl	223f0 <printf_parse@@Base+0x4fe0>
   24430:	mov	w3, w0
   24434:	ldr	x1, [sp, #128]
   24438:	mov	x2, x25
   2443c:	add	x0, sp, #0xd8
   24440:	bl	20d50 <printf_parse@@Base+0x3940>
   24444:	mov	x19, x0
   24448:	cbz	x0, 245a4 <printf_parse@@Base+0x7194>
   2444c:	ldr	x1, [sp, #120]
   24450:	str	xzr, [sp, #112]
   24454:	ldr	x0, [x27, #184]
   24458:	str	x19, [x0, x1]
   2445c:	ldr	x0, [sp, #144]
   24460:	add	x22, x22, #0x1
   24464:	cmp	x20, x0
   24468:	b.lt	24250 <printf_parse@@Base+0x6e40>  // b.tstop
   2446c:	mov	x21, x20
   24470:	ldp	x25, x26, [sp, #64]
   24474:	ldr	x0, [sp, #240]
   24478:	bl	aa50 <free@plt>
   2447c:	ldr	x1, [sp, #144]
   24480:	ldr	x0, [x27, #184]
   24484:	ldr	x0, [x0, x1, lsl #3]
   24488:	cbz	x0, 2469c <printf_parse@@Base+0x728c>
   2448c:	ldp	x1, x3, [sp, #176]
   24490:	str	x21, [x1]
   24494:	ldr	x1, [sp, #192]
   24498:	str	x1, [x27, #72]
   2449c:	add	x1, x0, #0x18
   244a0:	str	x3, [x27, #184]
   244a4:	ldr	x0, [x0, #16]
   244a8:	ldr	x2, [sp, #200]
   244ac:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   244b0:	cmp	x0, #0x0
   244b4:	cset	w0, eq  // eq = none
   244b8:	ldp	x19, x20, [sp, #16]
   244bc:	ldp	x21, x22, [sp, #32]
   244c0:	ldp	x23, x24, [sp, #48]
   244c4:	ldp	x27, x28, [sp, #80]
   244c8:	ldp	x29, x30, [sp], #272
   244cc:	ret
   244d0:	add	x22, sp, #0xe0
   244d4:	add	x1, x19, #0x8
   244d8:	mov	x0, x22
   244dc:	bl	20b50 <printf_parse@@Base+0x3740>
   244e0:	str	w0, [sp, #216]
   244e4:	cbnz	w0, 244b8 <printf_parse@@Base+0x70a8>
   244e8:	ldrb	w0, [x19, #104]
   244ec:	tbz	w0, #6, 24228 <printf_parse@@Base+0x6e18>
   244f0:	ldr	x0, [sp, #232]
   244f4:	cbz	x0, 24518 <printf_parse@@Base+0x7108>
   244f8:	ldr	w4, [sp, #164]
   244fc:	mov	x2, x21
   24500:	ldr	x3, [sp, #152]
   24504:	mov	x1, x22
   24508:	mov	x0, x27
   2450c:	bl	21338 <printf_parse@@Base+0x3f28>
   24510:	str	w0, [sp, #216]
   24514:	cbnz	w0, 24628 <printf_parse@@Base+0x7218>
   24518:	ldr	x1, [sp, #128]
   2451c:	mov	w3, w23
   24520:	mov	x2, x22
   24524:	add	x0, sp, #0xd8
   24528:	bl	20d50 <printf_parse@@Base+0x3940>
   2452c:	mov	x19, x0
   24530:	cbz	x0, 24688 <printf_parse@@Base+0x7278>
   24534:	ldr	x0, [x27, #184]
   24538:	str	x19, [x0, x21, lsl #3]
   2453c:	b	24228 <printf_parse@@Base+0x6e18>
   24540:	cbnz	w0, 242d8 <printf_parse@@Base+0x6ec8>
   24544:	ldr	x1, [x23]
   24548:	add	x1, x1, x20
   2454c:	b	242c4 <printf_parse@@Base+0x6eb4>
   24550:	cbnz	x19, 24294 <printf_parse@@Base+0x6e84>
   24554:	mov	x20, x22
   24558:	b	24420 <printf_parse@@Base+0x7010>
   2455c:	ldr	x0, [sp, #264]
   24560:	bl	aa50 <free@plt>
   24564:	mov	w0, #0xc                   	// #12
   24568:	str	w0, [sp, #216]
   2456c:	ldr	x0, [sp, #240]
   24570:	bl	aa50 <free@plt>
   24574:	ldr	w0, [sp, #216]
   24578:	ldp	x19, x20, [sp, #16]
   2457c:	ldp	x21, x22, [sp, #32]
   24580:	ldp	x23, x24, [sp, #48]
   24584:	ldp	x25, x26, [sp, #64]
   24588:	ldp	x27, x28, [sp, #80]
   2458c:	ldp	x29, x30, [sp], #272
   24590:	ret
   24594:	ldr	x0, [sp, #264]
   24598:	bl	aa50 <free@plt>
   2459c:	str	wzr, [sp, #216]
   245a0:	b	243d8 <printf_parse@@Base+0x6fc8>
   245a4:	ldr	w0, [sp, #216]
   245a8:	cbnz	w0, 2456c <printf_parse@@Base+0x715c>
   245ac:	ldr	x1, [sp, #112]
   245b0:	ldr	x0, [x27, #184]
   245b4:	add	x1, x1, #0x1
   245b8:	str	x1, [sp, #112]
   245bc:	ldr	x1, [sp, #120]
   245c0:	str	xzr, [x0, x1]
   245c4:	b	2445c <printf_parse@@Base+0x704c>
   245c8:	str	x19, [x27, #72]
   245cc:	sub	x1, x19, #0x1
   245d0:	str	x22, [x27, #184]
   245d4:	mov	x0, x27
   245d8:	bl	223f0 <printf_parse@@Base+0x4fe0>
   245dc:	mov	w23, w0
   245e0:	mov	x1, #0x1                   	// #1
   245e4:	mov	x0, #0x8                   	// #8
   245e8:	stp	x1, x1, [sp, #224]
   245ec:	bl	a5f0 <malloc@plt>
   245f0:	str	x0, [sp, #240]
   245f4:	mov	x4, x0
   245f8:	cbz	x0, 24694 <printf_parse@@Base+0x7284>
   245fc:	ldr	w3, [sp, #164]
   24600:	add	x22, sp, #0xe0
   24604:	ldr	x0, [sp, #128]
   24608:	str	x20, [x4]
   2460c:	ldr	x2, [sp, #152]
   24610:	mov	x1, x22
   24614:	str	wzr, [sp, #216]
   24618:	mov	x21, x19
   2461c:	bl	209e0 <printf_parse@@Base+0x35d0>
   24620:	str	w0, [sp, #216]
   24624:	cbz	w0, 244f0 <printf_parse@@Base+0x70e0>
   24628:	ldr	x0, [sp, #240]
   2462c:	bl	aa50 <free@plt>
   24630:	ldr	w0, [sp, #216]
   24634:	b	244b8 <printf_parse@@Base+0x70a8>
   24638:	add	x21, x0, #0x1
   2463c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   24640:	sub	x0, x0, x22
   24644:	cmp	x0, x21
   24648:	b.lt	24694 <printf_parse@@Base+0x7284>  // b.tstop
   2464c:	add	x23, x22, x21
   24650:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
   24654:	cmp	x23, x0
   24658:	b.hi	24694 <printf_parse@@Base+0x7284>  // b.pmore
   2465c:	ldr	x24, [sp, #176]
   24660:	lsl	x1, x23, #3
   24664:	ldr	x0, [x24, #16]
   24668:	bl	a7e0 <realloc@plt>
   2466c:	cbz	x0, 24694 <printf_parse@@Base+0x7284>
   24670:	stp	x23, x0, [x24, #8]
   24674:	lsl	x2, x21, #3
   24678:	add	x0, x0, x22, lsl #3
   2467c:	mov	w1, #0x0                   	// #0
   24680:	bl	a6f0 <memset@plt>
   24684:	b	241cc <printf_parse@@Base+0x6dbc>
   24688:	ldr	w0, [sp, #216]
   2468c:	cbz	w0, 24534 <printf_parse@@Base+0x7124>
   24690:	b	24628 <printf_parse@@Base+0x7218>
   24694:	mov	w0, #0xc                   	// #12
   24698:	b	244b8 <printf_parse@@Base+0x70a8>
   2469c:	ldr	x0, [sp, #176]
   246a0:	ldr	x1, [sp, #192]
   246a4:	str	x21, [x0]
   246a8:	mov	w0, #0x1                   	// #1
   246ac:	str	x1, [x27, #72]
   246b0:	ldr	x1, [sp, #184]
   246b4:	str	x1, [x27, #184]
   246b8:	b	244b8 <printf_parse@@Base+0x70a8>
   246bc:	mov	x0, #0x0                   	// #0
   246c0:	b	24598 <printf_parse@@Base+0x7188>
   246c4:	nop
   246c8:	stp	x29, x30, [sp, #-224]!
   246cc:	mov	x5, #0x2                   	// #2
   246d0:	tst	w4, #0xff
   246d4:	mov	x29, sp
   246d8:	stp	x19, x20, [sp, #16]
   246dc:	mov	x19, x1
   246e0:	mov	x20, x3
   246e4:	stp	x21, x22, [sp, #32]
   246e8:	mov	x21, x2
   246ec:	stp	x23, x24, [sp, #48]
   246f0:	stp	x25, x26, [sp, #64]
   246f4:	stp	x27, x28, [sp, #80]
   246f8:	stp	xzr, x5, [x29, #200]
   246fc:	str	xzr, [x29, #216]
   24700:	ldr	x24, [x0]
   24704:	b.eq	24cac <printf_parse@@Base+0x789c>  // b.none
   24708:	mov	x0, #0x60                  	// #96
   2470c:	bl	a5f0 <malloc@plt>
   24710:	str	x0, [x29, #216]
   24714:	add	x22, x29, #0xc8
   24718:	cbz	x0, 24c00 <printf_parse@@Base+0x77f0>
   2471c:	lsl	x0, x21, #4
   24720:	str	x0, [x29, #144]
   24724:	stp	xzr, xzr, [x29, #176]
   24728:	cmp	x0, #0xfbf
   2472c:	str	xzr, [x29, #192]
   24730:	ldr	x27, [x24, #144]
   24734:	b.hi	24ccc <printf_parse@@Base+0x78bc>  // b.pmore
   24738:	sub	sp, sp, x0
   2473c:	str	wzr, [x29, #108]
   24740:	mov	x0, sp
   24744:	str	x0, [x29, #120]
   24748:	ldr	x0, [x29, #120]
   2474c:	mov	x1, x20
   24750:	ldr	x2, [x29, #144]
   24754:	add	x25, x29, #0xb0
   24758:	bl	a2c0 <memcpy@plt>
   2475c:	add	x0, x25, #0x10
   24760:	str	x0, [x29, #112]
   24764:	ldr	x3, [x20]
   24768:	add	x0, x29, #0xa8
   2476c:	str	x0, [x29, #136]
   24770:	str	x3, [x29, #168]
   24774:	add	x0, x22, #0x10
   24778:	str	x0, [x29, #128]
   2477c:	ldr	x0, [x20, #8]
   24780:	cmp	x0, x3
   24784:	b.lt	24854 <printf_parse@@Base+0x7444>  // b.tstop
   24788:	ldr	x2, [x24]
   2478c:	lsl	x6, x27, #4
   24790:	mov	x23, x27
   24794:	add	x4, x2, x6
   24798:	ldrb	w1, [x4, #8]
   2479c:	cmp	w1, #0x8
   247a0:	b.eq	248cc <printf_parse@@Base+0x74bc>  // b.none
   247a4:	cmp	w1, #0x9
   247a8:	b.eq	2497c <printf_parse@@Base+0x756c>  // b.none
   247ac:	cmp	x3, x0
   247b0:	b.ne	247c0 <printf_parse@@Base+0x73b0>  // b.any
   247b4:	ldr	x0, [x19, #176]
   247b8:	cmp	x0, x27
   247bc:	b.eq	24b04 <printf_parse@@Base+0x76f4>  // b.none
   247c0:	ldr	x26, [x19, #152]
   247c4:	ldr	x0, [x26]
   247c8:	add	x1, x0, x6
   247cc:	ldrb	w2, [x1, #8]
   247d0:	tbnz	w2, #3, 248f8 <printf_parse@@Base+0x74e8>
   247d4:	ldrb	w3, [x1, #10]
   247d8:	tbnz	w3, #4, 249c4 <printf_parse@@Base+0x75b4>
   247dc:	cmp	w2, #0x4
   247e0:	b.eq	249f8 <printf_parse@@Base+0x75e8>  // b.none
   247e4:	ldr	x28, [x29, #168]
   247e8:	mov	x2, x28
   247ec:	mov	x0, x19
   247f0:	bl	224f0 <printf_parse@@Base+0x50e0>
   247f4:	tst	w0, #0xff
   247f8:	b.eq	248a0 <printf_parse@@Base+0x7490>  // b.none
   247fc:	ldr	x0, [x26, #24]
   24800:	add	x2, x28, #0x1
   24804:	ldr	x27, [x0, x23, lsl #3]
   24808:	str	x2, [x29, #168]
   2480c:	cbz	x22, 2483c <printf_parse@@Base+0x742c>
   24810:	ldr	x0, [x19, #168]
   24814:	cmp	x2, x0
   24818:	b.gt	248a4 <printf_parse@@Base+0x7494>
   2481c:	ldr	x0, [x19, #184]
   24820:	ldr	x1, [x0, x2, lsl #3]
   24824:	cbz	x1, 248a4 <printf_parse@@Base+0x7494>
   24828:	ldr	x0, [x1, #16]
   2482c:	mov	x2, x27
   24830:	add	x1, x1, #0x18
   24834:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   24838:	cbz	x0, 248a4 <printf_parse@@Base+0x7494>
   2483c:	str	xzr, [x29, #184]
   24840:	tbnz	x27, #63, 24898 <printf_parse@@Base+0x7488>
   24844:	ldr	x0, [x20, #8]
   24848:	ldr	x3, [x29, #168]
   2484c:	cmp	x0, x3
   24850:	b.ge	24788 <printf_parse@@Base+0x7378>  // b.tcont
   24854:	ldr	x0, [x29, #192]
   24858:	bl	aa50 <free@plt>
   2485c:	ldr	w0, [x29, #108]
   24860:	cbnz	w0, 24c5c <printf_parse@@Base+0x784c>
   24864:	cbz	x22, 24c7c <printf_parse@@Base+0x786c>
   24868:	mov	x0, x22
   2486c:	mov	w19, #0x0                   	// #0
   24870:	bl	22f20 <printf_parse@@Base+0x5b10>
   24874:	mov	sp, x29
   24878:	mov	w0, w19
   2487c:	ldp	x19, x20, [sp, #16]
   24880:	ldp	x21, x22, [sp, #32]
   24884:	ldp	x23, x24, [sp, #48]
   24888:	ldp	x25, x26, [sp, #64]
   2488c:	ldp	x27, x28, [sp, #80]
   24890:	ldp	x29, x30, [sp], #224
   24894:	ret
   24898:	cmn	x27, #0x2
   2489c:	b.eq	24bec <printf_parse@@Base+0x77dc>  // b.none
   248a0:	cbz	x22, 24cfc <printf_parse@@Base+0x78ec>
   248a4:	ldr	x2, [x29, #136]
   248a8:	mov	x3, x21
   248ac:	mov	x5, x25
   248b0:	mov	x4, x20
   248b4:	add	x1, x22, #0x10
   248b8:	mov	x0, x22
   248bc:	bl	22f90 <printf_parse@@Base+0x5b80>
   248c0:	mov	x27, x0
   248c4:	ldr	x3, [x29, #168]
   248c8:	b	24774 <printf_parse@@Base+0x7364>
   248cc:	ldr	x1, [x2, x6]
   248d0:	add	x1, x1, #0x1
   248d4:	cmp	x21, x1
   248d8:	b.le	247ac <printf_parse@@Base+0x739c>
   248dc:	lsl	x1, x1, #4
   248e0:	add	x0, x20, x1
   248e4:	str	x3, [x20, x1]
   248e8:	mov	x1, #0xffffffffffffffff    	// #-1
   248ec:	str	x1, [x0, #8]
   248f0:	ldr	x0, [x20, #8]
   248f4:	b	247ac <printf_parse@@Base+0x739c>
   248f8:	ldr	x4, [x26, #40]
   248fc:	add	x23, x27, x27, lsl #1
   24900:	ldr	x3, [x29, #168]
   24904:	mov	x1, x27
   24908:	ldr	x2, [x19, #184]
   2490c:	mov	x0, x25
   24910:	add	x23, x4, x23, lsl #3
   24914:	ldr	x26, [x2, x3, lsl #3]
   24918:	bl	1e670 <printf_parse@@Base+0x1260>
   2491c:	tst	w0, #0xff
   24920:	b.eq	24bec <printf_parse@@Base+0x77dc>  // b.none
   24924:	ldr	x7, [x23, #8]
   24928:	cmp	x7, #0x0
   2492c:	b.le	248a0 <printf_parse@@Base+0x7490>
   24930:	ldr	x10, [x23, #16]
   24934:	add	x9, x26, #0x18
   24938:	ldr	x8, [x26, #16]
   2493c:	mov	x27, #0xffffffffffffffff    	// #-1
   24940:	mov	x6, #0x0                   	// #0
   24944:	nop
   24948:	ldr	x23, [x10, x6, lsl #3]
   2494c:	add	x6, x6, #0x1
   24950:	mov	x1, x9
   24954:	mov	x0, x8
   24958:	mov	x2, x23
   2495c:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   24960:	cbz	x0, 24970 <printf_parse@@Base+0x7560>
   24964:	cmn	x27, #0x1
   24968:	b.ne	24a64 <printf_parse@@Base+0x7654>  // b.any
   2496c:	mov	x27, x23
   24970:	cmp	x6, x7
   24974:	b.ne	24948 <printf_parse@@Base+0x7538>  // b.any
   24978:	b	24840 <printf_parse@@Base+0x7430>
   2497c:	ldr	x1, [x4]
   24980:	add	x1, x1, #0x1
   24984:	cmp	x21, x1
   24988:	b.le	247ac <printf_parse@@Base+0x739c>
   2498c:	lsl	x1, x1, #4
   24990:	add	x2, x20, x1
   24994:	ldr	x0, [x20, x1]
   24998:	cmp	x0, x3
   2499c:	b.lt	24c08 <printf_parse@@Base+0x77f8>  // b.tstop
   249a0:	ldrb	w0, [x4, #10]
   249a4:	tbz	w0, #3, 249b8 <printf_parse@@Base+0x75a8>
   249a8:	ldr	x4, [x29, #120]
   249ac:	ldr	x0, [x4, x1]
   249b0:	cmn	x0, #0x1
   249b4:	b.ne	24c34 <printf_parse@@Base+0x7824>  // b.any
   249b8:	str	x3, [x2, #8]
   249bc:	ldr	x0, [x20, #8]
   249c0:	b	247ac <printf_parse@@Base+0x739c>
   249c4:	ldr	x4, [x29, #168]
   249c8:	mov	x3, x19
   249cc:	mov	x2, x27
   249d0:	add	x1, x26, #0xd8
   249d4:	str	x6, [x29, #152]
   249d8:	bl	23ec8 <printf_parse@@Base+0x6ab8>
   249dc:	sxtw	x28, w0
   249e0:	cbnz	w0, 24afc <printf_parse@@Base+0x76ec>
   249e4:	ldr	x1, [x26]
   249e8:	ldr	x6, [x29, #152]
   249ec:	ldr	x28, [x29, #168]
   249f0:	add	x1, x1, x6
   249f4:	b	247e8 <printf_parse@@Base+0x73d8>
   249f8:	ldr	x0, [x1]
   249fc:	add	x0, x0, #0x1
   24a00:	lsl	x0, x0, #4
   24a04:	add	x1, x20, x0
   24a08:	ldr	x0, [x20, x0]
   24a0c:	ldr	x1, [x1, #8]
   24a10:	sub	x28, x1, x0
   24a14:	cbz	x22, 24af8 <printf_parse@@Base+0x76e8>
   24a18:	cmn	x0, #0x1
   24a1c:	ccmn	x1, #0x1, #0x4, ne  // ne = any
   24a20:	b.eq	248a4 <printf_parse@@Base+0x7494>  // b.none
   24a24:	cbz	x28, 24b88 <printf_parse@@Base+0x7778>
   24a28:	ldr	x3, [x19, #48]
   24a2c:	ldr	x23, [x29, #168]
   24a30:	ldr	x1, [x19, #8]
   24a34:	sub	x3, x3, x23
   24a38:	cmp	x28, x3
   24a3c:	b.gt	248a4 <printf_parse@@Base+0x7494>
   24a40:	add	x0, x1, x0
   24a44:	mov	x2, x28
   24a48:	add	x1, x1, x23
   24a4c:	bl	a970 <memcmp@plt>
   24a50:	cbnz	w0, 248a4 <printf_parse@@Base+0x7494>
   24a54:	ldr	x0, [x26, #24]
   24a58:	add	x2, x23, x28
   24a5c:	ldr	x27, [x0, x27, lsl #3]
   24a60:	b	24808 <printf_parse@@Base+0x73f8>
   24a64:	ldr	x1, [x29, #112]
   24a68:	mov	x2, x27
   24a6c:	ldr	x0, [x29, #184]
   24a70:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   24a74:	cbnz	x0, 24be4 <printf_parse@@Base+0x77d4>
   24a78:	cbz	x22, 24840 <printf_parse@@Base+0x7430>
   24a7c:	ldp	x26, x0, [x22]
   24a80:	ldr	x28, [x29, #168]
   24a84:	add	x1, x26, #0x1
   24a88:	str	x1, [x22]
   24a8c:	cmp	x1, x0
   24a90:	b.eq	24c84 <printf_parse@@Base+0x7874>  // b.none
   24a94:	ldr	x1, [x22, #16]
   24a98:	add	x2, x26, x26, lsl #1
   24a9c:	ldr	x0, [x29, #144]
   24aa0:	lsl	x2, x2, #4
   24aa4:	add	x26, x1, x2
   24aa8:	str	x28, [x1, x2]
   24aac:	str	x23, [x26, #8]
   24ab0:	bl	a5f0 <malloc@plt>
   24ab4:	str	x0, [x26, #16]
   24ab8:	cbz	x0, 24ad8 <printf_parse@@Base+0x76c8>
   24abc:	ldr	x2, [x29, #144]
   24ac0:	mov	x1, x20
   24ac4:	bl	a2c0 <memcpy@plt>
   24ac8:	mov	x1, x25
   24acc:	add	x0, x26, #0x18
   24ad0:	bl	20b50 <printf_parse@@Base+0x3740>
   24ad4:	cbz	w0, 24840 <printf_parse@@Base+0x7430>
   24ad8:	ldr	x0, [x29, #192]
   24adc:	bl	aa50 <free@plt>
   24ae0:	ldr	w0, [x29, #108]
   24ae4:	cbnz	w0, 24cec <printf_parse@@Base+0x78dc>
   24ae8:	mov	x0, x22
   24aec:	mov	w19, #0xc                   	// #12
   24af0:	bl	22f20 <printf_parse@@Base+0x5b10>
   24af4:	b	24874 <printf_parse@@Base+0x7464>
   24af8:	cbz	x28, 24b88 <printf_parse@@Base+0x7778>
   24afc:	ldr	x23, [x29, #168]
   24b00:	b	24a54 <printf_parse@@Base+0x7644>
   24b04:	cbz	x22, 24c6c <printf_parse@@Base+0x785c>
   24b08:	cbz	x21, 24b3c <printf_parse@@Base+0x772c>
   24b0c:	mov	x0, x20
   24b10:	mov	x1, #0x0                   	// #0
   24b14:	nop
   24b18:	ldr	x2, [x0]
   24b1c:	tbnz	x2, #63, 24b2c <printf_parse@@Base+0x771c>
   24b20:	ldr	x2, [x0, #8]
   24b24:	cmn	x2, #0x1
   24b28:	b.eq	24b58 <printf_parse@@Base+0x7748>  // b.none
   24b2c:	add	x1, x1, #0x1
   24b30:	add	x0, x0, #0x10
   24b34:	cmp	x21, x1
   24b38:	b.ne	24b18 <printf_parse@@Base+0x7708>  // b.any
   24b3c:	ldr	x0, [x29, #192]
   24b40:	bl	aa50 <free@plt>
   24b44:	ldr	w0, [x29, #108]
   24b48:	cbz	w0, 24868 <printf_parse@@Base+0x7458>
   24b4c:	ldr	x0, [x29, #120]
   24b50:	bl	aa50 <free@plt>
   24b54:	b	24868 <printf_parse@@Base+0x7458>
   24b58:	cmp	x21, x1
   24b5c:	b.eq	24b3c <printf_parse@@Base+0x772c>  // b.none
   24b60:	ldp	x1, x2, [x29, #128]
   24b64:	mov	x5, x25
   24b68:	mov	x4, x20
   24b6c:	mov	x3, x21
   24b70:	mov	x0, x22
   24b74:	bl	22f90 <printf_parse@@Base+0x5b80>
   24b78:	mov	x27, x0
   24b7c:	mov	x23, x0
   24b80:	lsl	x6, x0, #4
   24b84:	b	247c0 <printf_parse@@Base+0x73b0>
   24b88:	mov	x1, x27
   24b8c:	mov	x0, x25
   24b90:	str	x6, [x29, #152]
   24b94:	bl	1e670 <printf_parse@@Base+0x1260>
   24b98:	tst	w0, #0xff
   24b9c:	b.eq	24bec <printf_parse@@Base+0x77dc>  // b.none
   24ba0:	ldr	x1, [x26, #40]
   24ba4:	add	x5, x27, x27, lsl #1
   24ba8:	ldr	x28, [x29, #168]
   24bac:	ldr	x0, [x19, #184]
   24bb0:	add	x5, x1, x5, lsl #3
   24bb4:	ldr	x0, [x0, x28, lsl #3]
   24bb8:	ldr	x2, [x5, #16]
   24bbc:	add	x1, x0, #0x18
   24bc0:	ldr	x0, [x0, #16]
   24bc4:	ldr	x27, [x2]
   24bc8:	mov	x2, x27
   24bcc:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   24bd0:	cbnz	x0, 24840 <printf_parse@@Base+0x7430>
   24bd4:	ldr	x1, [x26]
   24bd8:	ldr	x6, [x29, #152]
   24bdc:	add	x1, x1, x6
   24be0:	b	247e8 <printf_parse@@Base+0x73d8>
   24be4:	mov	x27, x23
   24be8:	b	24840 <printf_parse@@Base+0x7430>
   24bec:	ldr	x0, [x29, #192]
   24bf0:	bl	aa50 <free@plt>
   24bf4:	ldr	w0, [x29, #108]
   24bf8:	cbnz	w0, 24cec <printf_parse@@Base+0x78dc>
   24bfc:	cbnz	x22, 24ae8 <printf_parse@@Base+0x76d8>
   24c00:	mov	w19, #0xc                   	// #12
   24c04:	b	24874 <printf_parse@@Base+0x7464>
   24c08:	str	x3, [x2, #8]
   24c0c:	mov	x1, x20
   24c10:	ldr	x0, [x29, #120]
   24c14:	str	x6, [x29, #96]
   24c18:	ldr	x2, [x29, #144]
   24c1c:	str	x3, [x29, #152]
   24c20:	bl	a2c0 <memcpy@plt>
   24c24:	ldr	x0, [x20, #8]
   24c28:	ldr	x6, [x29, #96]
   24c2c:	ldr	x3, [x29, #152]
   24c30:	b	247ac <printf_parse@@Base+0x739c>
   24c34:	ldr	x2, [x29, #144]
   24c38:	mov	x1, x4
   24c3c:	mov	x0, x20
   24c40:	str	x3, [x29, #96]
   24c44:	str	x6, [x29, #152]
   24c48:	bl	a2c0 <memcpy@plt>
   24c4c:	ldr	x0, [x20, #8]
   24c50:	ldr	x3, [x29, #96]
   24c54:	ldr	x6, [x29, #152]
   24c58:	b	247ac <printf_parse@@Base+0x739c>
   24c5c:	ldr	x0, [x29, #120]
   24c60:	bl	aa50 <free@plt>
   24c64:	cbnz	x22, 24868 <printf_parse@@Base+0x7458>
   24c68:	b	24c7c <printf_parse@@Base+0x786c>
   24c6c:	ldr	x0, [x29, #192]
   24c70:	bl	aa50 <free@plt>
   24c74:	ldr	w0, [x29, #108]
   24c78:	cbnz	w0, 24d1c <printf_parse@@Base+0x790c>
   24c7c:	mov	w19, #0x0                   	// #0
   24c80:	b	24874 <printf_parse@@Base+0x7464>
   24c84:	ldr	x0, [x22, #16]
   24c88:	add	x1, x1, x1, lsl #1
   24c8c:	lsl	x1, x1, #5
   24c90:	bl	a7e0 <realloc@plt>
   24c94:	mov	x1, x0
   24c98:	cbz	x0, 24ad8 <printf_parse@@Base+0x76c8>
   24c9c:	ldr	x0, [x22, #8]
   24ca0:	lsl	x0, x0, #1
   24ca4:	stp	x0, x1, [x22, #8]
   24ca8:	b	24a98 <printf_parse@@Base+0x7688>
   24cac:	lsl	x0, x21, #4
   24cb0:	str	x0, [x29, #144]
   24cb4:	stp	xzr, xzr, [x29, #176]
   24cb8:	cmp	x0, #0xfbf
   24cbc:	mov	x22, #0x0                   	// #0
   24cc0:	str	xzr, [x29, #192]
   24cc4:	ldr	x27, [x24, #144]
   24cc8:	b.ls	24738 <printf_parse@@Base+0x7328>  // b.plast
   24ccc:	ldr	x0, [x29, #144]
   24cd0:	bl	a5f0 <malloc@plt>
   24cd4:	str	x0, [x29, #120]
   24cd8:	mov	w1, #0x1                   	// #1
   24cdc:	str	w1, [x29, #108]
   24ce0:	cbnz	x0, 24748 <printf_parse@@Base+0x7338>
   24ce4:	cbnz	x22, 24ae8 <printf_parse@@Base+0x76d8>
   24ce8:	b	24c00 <printf_parse@@Base+0x77f0>
   24cec:	ldr	x0, [x29, #120]
   24cf0:	bl	aa50 <free@plt>
   24cf4:	cbnz	x22, 24ae8 <printf_parse@@Base+0x76d8>
   24cf8:	b	24c00 <printf_parse@@Base+0x77f0>
   24cfc:	ldr	x0, [x29, #192]
   24d00:	mov	w19, #0x1                   	// #1
   24d04:	bl	aa50 <free@plt>
   24d08:	ldr	w0, [x29, #108]
   24d0c:	cbz	w0, 24874 <printf_parse@@Base+0x7464>
   24d10:	ldr	x0, [x29, #120]
   24d14:	bl	aa50 <free@plt>
   24d18:	b	24874 <printf_parse@@Base+0x7464>
   24d1c:	ldr	x0, [x29, #120]
   24d20:	mov	w19, #0x0                   	// #0
   24d24:	bl	aa50 <free@plt>
   24d28:	b	24874 <printf_parse@@Base+0x7464>
   24d2c:	nop
   24d30:	stp	x29, x30, [sp, #-80]!
   24d34:	mov	x6, x2
   24d38:	mov	x5, x4
   24d3c:	mov	x29, sp
   24d40:	stp	x19, x20, [sp, #16]
   24d44:	mov	x20, x2
   24d48:	mov	x19, x0
   24d4c:	stp	x23, x24, [sp, #48]
   24d50:	mov	x24, x4
   24d54:	mov	x4, x3
   24d58:	str	x25, [sp, #64]
   24d5c:	mov	x25, x3
   24d60:	ldr	x3, [x2, #8]
   24d64:	stp	x21, x22, [sp, #32]
   24d68:	mov	x21, x1
   24d6c:	ldr	x2, [x6], #16
   24d70:	mov	x1, x6
   24d74:	mov	w6, #0x8                   	// #8
   24d78:	bl	24168 <printf_parse@@Base+0x6d58>
   24d7c:	cbz	w0, 24d98 <printf_parse@@Base+0x7988>
   24d80:	ldp	x19, x20, [sp, #16]
   24d84:	ldp	x21, x22, [sp, #32]
   24d88:	ldp	x23, x24, [sp, #48]
   24d8c:	ldr	x25, [sp, #64]
   24d90:	ldp	x29, x30, [sp], #80
   24d94:	ret
   24d98:	ldp	x2, x1, [x19, #200]
   24d9c:	ldr	x22, [x20, #8]
   24da0:	ldr	x23, [x21]
   24da4:	mov	x4, x22
   24da8:	cmp	x2, x1
   24dac:	ldr	x0, [x19, #216]
   24db0:	b.ge	24e4c <printf_parse@@Base+0x7a3c>  // b.tcont
   24db4:	add	x6, x2, x2, lsl #2
   24db8:	cmp	x2, #0x0
   24dbc:	lsl	x6, x6, #3
   24dc0:	b.le	24dd8 <printf_parse@@Base+0x79c8>
   24dc4:	sub	x3, x6, #0x28
   24dc8:	add	x3, x0, x3
   24dcc:	ldr	x1, [x3, #8]
   24dd0:	cmp	x24, x1
   24dd4:	b.eq	24e40 <printf_parse@@Base+0x7a30>  // b.none
   24dd8:	add	x7, x0, x6
   24ddc:	cmp	x23, x22
   24de0:	str	x25, [x0, x6]
   24de4:	csetm	w1, eq  // eq = none
   24de8:	add	x2, x2, #0x1
   24dec:	sub	x0, x22, x23
   24df0:	stp	x24, x23, [x7, #8]
   24df4:	str	x22, [x7, #24]
   24df8:	strh	w1, [x7, #34]
   24dfc:	str	x2, [x19, #200]
   24e00:	strb	wzr, [x7, #32]
   24e04:	ldrsw	x1, [x19, #224]
   24e08:	cmp	x1, x0
   24e0c:	b.ge	24e18 <printf_parse@@Base+0x7a08>  // b.tcont
   24e10:	sub	w22, w22, w23
   24e14:	str	w22, [x19, #224]
   24e18:	add	x4, x24, x4
   24e1c:	mov	x0, x19
   24e20:	ldr	x1, [x21]
   24e24:	ldp	x19, x20, [sp, #16]
   24e28:	sub	x1, x4, x1
   24e2c:	ldp	x21, x22, [sp, #32]
   24e30:	ldp	x23, x24, [sp, #48]
   24e34:	ldr	x25, [sp, #64]
   24e38:	ldp	x29, x30, [sp], #80
   24e3c:	b	1f268 <printf_parse@@Base+0x1e58>
   24e40:	mov	w1, #0x1                   	// #1
   24e44:	strb	w1, [x3, #32]
   24e48:	b	24dd8 <printf_parse@@Base+0x79c8>
   24e4c:	add	x1, x1, x1, lsl #2
   24e50:	lsl	x1, x1, #4
   24e54:	bl	a7e0 <realloc@plt>
   24e58:	cbz	x0, 24e94 <printf_parse@@Base+0x7a84>
   24e5c:	ldp	x3, x2, [x19, #200]
   24e60:	str	x0, [x19, #216]
   24e64:	mov	w1, #0x0                   	// #0
   24e68:	add	x3, x3, x3, lsl #2
   24e6c:	add	x2, x2, x2, lsl #2
   24e70:	add	x0, x0, x3, lsl #3
   24e74:	lsl	x2, x2, #3
   24e78:	bl	a6f0 <memset@plt>
   24e7c:	ldp	x2, x1, [x19, #200]
   24e80:	ldr	x4, [x20, #8]
   24e84:	ldr	x0, [x19, #216]
   24e88:	lsl	x1, x1, #1
   24e8c:	str	x1, [x19, #208]
   24e90:	b	24db4 <printf_parse@@Base+0x79a4>
   24e94:	ldr	x0, [x19, #216]
   24e98:	bl	aa50 <free@plt>
   24e9c:	mov	w0, #0xc                   	// #12
   24ea0:	b	24d80 <printf_parse@@Base+0x7970>
   24ea4:	nop
   24ea8:	stp	x29, x30, [sp, #-224]!
   24eac:	mov	x29, sp
   24eb0:	stp	x21, x22, [sp, #32]
   24eb4:	ldr	x21, [x0, #72]
   24eb8:	stp	x25, x26, [sp, #64]
   24ebc:	stp	x27, x28, [sp, #80]
   24ec0:	mov	x28, x0
   24ec4:	lsl	x0, x21, #3
   24ec8:	ldr	x25, [x1]
   24ecc:	stp	x23, x24, [sp, #48]
   24ed0:	stp	x2, x0, [sp, #136]
   24ed4:	cmp	x25, #0x0
   24ed8:	str	x1, [sp, #184]
   24edc:	ldr	x24, [x28, #152]
   24ee0:	b.le	24f70 <printf_parse@@Base+0x7b60>
   24ee4:	add	x0, sp, #0xc8
   24ee8:	mov	x23, #0x0                   	// #0
   24eec:	stp	x19, x20, [sp, #16]
   24ef0:	str	x0, [sp, #160]
   24ef4:	add	x0, sp, #0xc4
   24ef8:	str	x0, [sp, #168]
   24efc:	nop
   24f00:	ldr	x0, [sp, #136]
   24f04:	ldr	x1, [x0]
   24f08:	ldr	x0, [x24]
   24f0c:	ldr	x20, [x1, x23, lsl #3]
   24f10:	lsl	x22, x20, #4
   24f14:	add	x0, x0, x22
   24f18:	ldrb	w1, [x0, #8]
   24f1c:	cmp	w1, #0x4
   24f20:	b.ne	24f60 <printf_parse@@Base+0x7b50>  // b.any
   24f24:	ldr	w19, [x0, #8]
   24f28:	tst	w19, #0x3ff00
   24f2c:	b.eq	24f98 <printf_parse@@Base+0x7b88>  // b.none
   24f30:	ldr	w2, [x28, #160]
   24f34:	mov	x1, x21
   24f38:	mov	x0, x28
   24f3c:	bl	223f0 <printf_parse@@Base+0x4fe0>
   24f40:	ubfx	x1, x19, #8, #10
   24f44:	tbz	w19, #10, 24f8c <printf_parse@@Base+0x7b7c>
   24f48:	tbz	w0, #0, 24f60 <printf_parse@@Base+0x7b50>
   24f4c:	tbnz	w1, #3, 24f60 <printf_parse@@Base+0x7b50>
   24f50:	tbz	w1, #5, 24f58 <printf_parse@@Base+0x7b48>
   24f54:	tbz	w0, #1, 24f60 <printf_parse@@Base+0x7b50>
   24f58:	tbz	w1, #7, 24f98 <printf_parse@@Base+0x7b88>
   24f5c:	tbnz	w0, #3, 24f98 <printf_parse@@Base+0x7b88>
   24f60:	add	x23, x23, #0x1
   24f64:	cmp	x23, x25
   24f68:	b.lt	24f00 <printf_parse@@Base+0x7af0>  // b.tstop
   24f6c:	ldp	x19, x20, [sp, #16]
   24f70:	mov	w0, #0x0                   	// #0
   24f74:	ldp	x21, x22, [sp, #32]
   24f78:	ldp	x23, x24, [sp, #48]
   24f7c:	ldp	x25, x26, [sp, #64]
   24f80:	ldp	x27, x28, [sp, #80]
   24f84:	ldp	x29, x30, [sp], #224
   24f88:	ret
   24f8c:	tbz	w1, #3, 24f50 <printf_parse@@Base+0x7b40>
   24f90:	tbz	w0, #0, 24f50 <printf_parse@@Base+0x7b40>
   24f94:	b	24f60 <printf_parse@@Base+0x7b50>
   24f98:	ldr	x5, [x28, #200]
   24f9c:	mov	x1, #0x0                   	// #0
   24fa0:	mov	x19, x5
   24fa4:	mov	x3, x5
   24fa8:	b	24fcc <printf_parse@@Base+0x7bbc>
   24fac:	asr	x0, x0, #1
   24fb0:	ldr	x4, [x28, #216]
   24fb4:	add	x2, x0, x0, lsl #2
   24fb8:	add	x2, x4, x2, lsl #3
   24fbc:	ldr	x2, [x2, #8]
   24fc0:	cmp	x21, x2
   24fc4:	b.gt	251f8 <printf_parse@@Base+0x7de8>
   24fc8:	mov	x3, x0
   24fcc:	add	x0, x3, x1
   24fd0:	cmp	x3, x1
   24fd4:	b.gt	24fac <printf_parse@@Base+0x7b9c>
   24fd8:	cmp	x5, x1
   24fdc:	b.le	25200 <printf_parse@@Base+0x7df0>
   24fe0:	ldr	x0, [x28, #216]
   24fe4:	add	x1, x1, x1, lsl #2
   24fe8:	add	x1, x0, x1, lsl #3
   24fec:	ldr	x0, [x1, #8]
   24ff0:	cmp	x21, x0
   24ff4:	b.eq	25004 <printf_parse@@Base+0x7bf4>  // b.none
   24ff8:	b	25200 <printf_parse@@Base+0x7df0>
   24ffc:	ldurb	w0, [x1, #-8]
   25000:	cbz	w0, 25200 <printf_parse@@Base+0x7df0>
   25004:	ldr	x0, [x1]
   25008:	add	x1, x1, #0x28
   2500c:	cmp	x20, x0
   25010:	b.ne	24ffc <printf_parse@@Base+0x7bec>  // b.any
   25014:	str	wzr, [sp, #196]
   25018:	cmp	x19, x5
   2501c:	b.ge	25144 <printf_parse@@Base+0x7d34>  // b.tcont
   25020:	add	x4, x19, x19, lsl #2
   25024:	add	x0, x20, x20, lsl #1
   25028:	lsl	x1, x20, #3
   2502c:	lsl	x27, x4, #3
   25030:	lsl	x0, x0, #3
   25034:	stp	x1, x0, [sp, #112]
   25038:	ldr	x0, [x28, #216]
   2503c:	add	x1, x0, x27
   25040:	ldr	x0, [x0, x27]
   25044:	cmp	x20, x0
   25048:	b.ne	25134 <printf_parse@@Base+0x7d24>  // b.any
   2504c:	ldr	x0, [x1, #8]
   25050:	cmp	x21, x0
   25054:	b.ne	25134 <printf_parse@@Base+0x7d24>  // b.any
   25058:	ldp	x22, x0, [x1, #16]
   2505c:	ldr	x25, [x24, #48]
   25060:	subs	x1, x0, x22
   25064:	str	x1, [sp, #96]
   25068:	b.ne	251ac <printf_parse@@Base+0x7d9c>  // b.any
   2506c:	ldr	x1, [x24, #40]
   25070:	ldr	x2, [sp, #120]
   25074:	add	x1, x1, x2
   25078:	ldr	x1, [x1, #16]
   2507c:	ldr	x1, [x1]
   25080:	add	x1, x1, x1, lsl #1
   25084:	add	x25, x25, x1, lsl #3
   25088:	ldr	w2, [x28, #160]
   2508c:	add	x0, x21, x0
   25090:	sub	x22, x0, x22
   25094:	mov	x0, x28
   25098:	sub	x1, x22, #0x1
   2509c:	mov	x26, #0x0                   	// #0
   250a0:	bl	223f0 <printf_parse@@Base+0x4fe0>
   250a4:	mov	w3, w0
   250a8:	ldr	x0, [sp, #144]
   250ac:	ldr	x5, [x28, #184]
   250b0:	ldr	x1, [x5, x0]
   250b4:	ldr	x0, [x5, x22, lsl #3]
   250b8:	cbz	x1, 250c0 <printf_parse@@Base+0x7cb0>
   250bc:	ldr	x26, [x1, #16]
   250c0:	cbz	x0, 251c4 <printf_parse@@Base+0x7db4>
   250c4:	ldr	x1, [x0, #80]
   250c8:	mov	x2, x25
   250cc:	ldr	x0, [sp, #160]
   250d0:	str	w3, [sp, #104]
   250d4:	bl	20bd8 <printf_parse@@Base+0x37c8>
   250d8:	str	w0, [sp, #196]
   250dc:	ldr	w3, [sp, #104]
   250e0:	cbnz	w0, 2537c <printf_parse@@Base+0x7f6c>
   250e4:	ldp	x2, x0, [sp, #160]
   250e8:	mov	x1, x24
   250ec:	ldr	x5, [x28, #184]
   250f0:	str	x5, [sp, #104]
   250f4:	bl	20d50 <printf_parse@@Base+0x3940>
   250f8:	ldr	x5, [sp, #104]
   250fc:	str	x0, [x5, x22, lsl #3]
   25100:	ldr	x0, [sp, #216]
   25104:	bl	aa50 <free@plt>
   25108:	ldr	x1, [x28, #184]
   2510c:	ldr	x0, [x1, x22, lsl #3]
   25110:	cbz	x0, 251ec <printf_parse@@Base+0x7ddc>
   25114:	ldr	x0, [sp, #96]
   25118:	cbnz	x0, 25130 <printf_parse@@Base+0x7d20>
   2511c:	ldr	x0, [sp, #144]
   25120:	ldr	x0, [x1, x0]
   25124:	ldr	x0, [x0, #16]
   25128:	cmp	x0, x26
   2512c:	b.gt	25150 <printf_parse@@Base+0x7d40>
   25130:	ldr	x5, [x28, #200]
   25134:	add	x19, x19, #0x1
   25138:	add	x27, x27, #0x28
   2513c:	cmp	x19, x5
   25140:	b.lt	25038 <printf_parse@@Base+0x7c28>  // b.tstop
   25144:	ldr	x0, [sp, #184]
   25148:	ldr	x25, [x0]
   2514c:	b	24f60 <printf_parse@@Base+0x7b50>
   25150:	add	x22, x25, #0x8
   25154:	add	x25, x25, #0x10
   25158:	mov	x2, x25
   2515c:	mov	x1, x22
   25160:	mov	x3, x21
   25164:	mov	x0, x28
   25168:	bl	204b8 <printf_parse@@Base+0x30a8>
   2516c:	str	w0, [sp, #196]
   25170:	cbnz	w0, 25190 <printf_parse@@Base+0x7d80>
   25174:	mov	x2, x25
   25178:	mov	x1, x22
   2517c:	mov	x0, x28
   25180:	bl	24ea8 <printf_parse@@Base+0x7a98>
   25184:	str	w0, [sp, #196]
   25188:	cbz	w0, 25130 <printf_parse@@Base+0x7d20>
   2518c:	nop
   25190:	ldp	x19, x20, [sp, #16]
   25194:	ldp	x21, x22, [sp, #32]
   25198:	ldp	x23, x24, [sp, #48]
   2519c:	ldp	x25, x26, [sp, #64]
   251a0:	ldp	x27, x28, [sp, #80]
   251a4:	ldp	x29, x30, [sp], #224
   251a8:	ret
   251ac:	ldr	x1, [x24, #24]
   251b0:	ldr	x2, [sp, #112]
   251b4:	ldr	x1, [x1, x2]
   251b8:	add	x1, x1, x1, lsl #1
   251bc:	add	x25, x25, x1, lsl #3
   251c0:	b	25088 <printf_parse@@Base+0x7c78>
   251c4:	ldr	x0, [sp, #168]
   251c8:	mov	x1, x24
   251cc:	mov	x2, x25
   251d0:	str	x5, [sp, #104]
   251d4:	bl	20d50 <printf_parse@@Base+0x3940>
   251d8:	ldr	x5, [sp, #104]
   251dc:	ldr	x1, [x28, #184]
   251e0:	str	x0, [x5, x22, lsl #3]
   251e4:	ldr	x0, [x1, x22, lsl #3]
   251e8:	cbnz	x0, 25114 <printf_parse@@Base+0x7d04>
   251ec:	ldr	w0, [sp, #196]
   251f0:	cbz	w0, 25114 <printf_parse@@Base+0x7d04>
   251f4:	b	25190 <printf_parse@@Base+0x7d80>
   251f8:	add	x1, x0, #0x1
   251fc:	b	24fcc <printf_parse@@Base+0x7bbc>
   25200:	ldr	x0, [x28, #152]
   25204:	str	x0, [sp, #176]
   25208:	ldr	x2, [x28, #232]
   2520c:	ldr	x1, [x0]
   25210:	cmp	x2, #0x0
   25214:	ldr	x0, [x1, x22]
   25218:	str	x0, [sp, #152]
   2521c:	b.le	25014 <printf_parse@@Base+0x7c04>
   25220:	ldr	x7, [x28, #8]
   25224:	str	xzr, [sp, #128]
   25228:	ldr	x3, [sp, #128]
   2522c:	ldr	x0, [x28, #248]
   25230:	ldr	x26, [x0, x3, lsl #3]
   25234:	ldr	x0, [x26, #8]
   25238:	lsl	x0, x0, #4
   2523c:	ldr	x0, [x1, x0]
   25240:	ldr	x1, [sp, #152]
   25244:	cmp	x1, x0
   25248:	b.eq	2526c <printf_parse@@Base+0x7e5c>  // b.none
   2524c:	ldr	x0, [sp, #128]
   25250:	add	x0, x0, #0x1
   25254:	str	x0, [sp, #128]
   25258:	cmp	x0, x2
   2525c:	b.ge	25560 <printf_parse@@Base+0x8150>  // b.tcont
   25260:	ldr	x0, [sp, #176]
   25264:	ldr	x1, [x0]
   25268:	b	25228 <printf_parse@@Base+0x7e18>
   2526c:	ldr	x0, [x26]
   25270:	str	x0, [sp, #96]
   25274:	ldr	x4, [x26, #32]
   25278:	cmp	x4, #0x0
   2527c:	b.le	25594 <printf_parse@@Base+0x8184>
   25280:	mov	x27, x21
   25284:	mov	x22, #0x0                   	// #0
   25288:	b	25298 <printf_parse@@Base+0x7e88>
   2528c:	ldr	x4, [x26, #32]
   25290:	cmp	x22, x4
   25294:	b.ge	25524 <printf_parse@@Base+0x8114>  // b.tcont
   25298:	ldr	x0, [x26, #40]
   2529c:	mov	x9, x27
   252a0:	ldr	x25, [sp, #96]
   252a4:	ldr	x3, [x0, x22, lsl #3]
   252a8:	ldr	x0, [x3, #8]
   252ac:	str	x0, [sp, #96]
   252b0:	sub	x2, x0, x25
   252b4:	cmp	x2, #0x0
   252b8:	add	x27, x27, x2
   252bc:	b.le	252ec <printf_parse@@Base+0x7edc>
   252c0:	ldr	x0, [x28, #48]
   252c4:	cmp	x0, x27
   252c8:	b.lt	25318 <printf_parse@@Base+0x7f08>  // b.tstop
   252cc:	add	x1, x7, x25
   252d0:	add	x0, x7, x9
   252d4:	stp	x7, x9, [sp, #104]
   252d8:	str	x3, [sp, #120]
   252dc:	bl	a970 <memcmp@plt>
   252e0:	ldp	x7, x9, [sp, #104]
   252e4:	ldr	x3, [sp, #120]
   252e8:	cbnz	w0, 25368 <printf_parse@@Base+0x7f58>
   252ec:	mov	x2, x3
   252f0:	mov	x4, x21
   252f4:	mov	x3, x20
   252f8:	mov	x1, x26
   252fc:	mov	x0, x28
   25300:	bl	24d30 <printf_parse@@Base+0x7920>
   25304:	add	x22, x22, #0x1
   25308:	cmp	w0, #0x1
   2530c:	ldr	x7, [x28, #8]
   25310:	b.ls	2528c <printf_parse@@Base+0x7e7c>  // b.plast
   25314:	b	25190 <printf_parse@@Base+0x7d80>
   25318:	ldr	x12, [x28, #88]
   2531c:	stp	x3, x2, [sp, #104]
   25320:	mov	x1, x27
   25324:	mov	x0, x28
   25328:	cmp	x12, x27
   2532c:	b.lt	2536c <printf_parse@@Base+0x7f5c>  // b.tstop
   25330:	str	x9, [sp, #120]
   25334:	bl	1f268 <printf_parse@@Base+0x1e58>
   25338:	cbnz	w0, 25190 <printf_parse@@Base+0x7d80>
   2533c:	ldp	x3, x2, [sp, #104]
   25340:	ldr	x7, [x28, #8]
   25344:	ldr	x9, [sp, #120]
   25348:	add	x1, x7, x25
   2534c:	stp	x7, x9, [sp, #104]
   25350:	add	x0, x7, x9
   25354:	str	x3, [sp, #120]
   25358:	bl	a970 <memcmp@plt>
   2535c:	ldp	x7, x9, [sp, #104]
   25360:	ldr	x3, [sp, #120]
   25364:	cbz	w0, 252ec <printf_parse@@Base+0x7edc>
   25368:	ldr	x4, [x26, #32]
   2536c:	cmp	x22, x4
   25370:	b.ge	253a4 <printf_parse@@Base+0x7f94>  // b.tcont
   25374:	ldr	x2, [x28, #232]
   25378:	b	2524c <printf_parse@@Base+0x7e3c>
   2537c:	ldr	x0, [sp, #216]
   25380:	bl	aa50 <free@plt>
   25384:	ldr	w0, [sp, #196]
   25388:	ldp	x19, x20, [sp, #16]
   2538c:	ldp	x21, x22, [sp, #32]
   25390:	ldp	x23, x24, [sp, #48]
   25394:	ldp	x25, x26, [sp, #64]
   25398:	ldp	x27, x28, [sp, #80]
   2539c:	ldp	x29, x30, [sp], #224
   253a0:	ret
   253a4:	cbnz	x22, 2551c <printf_parse@@Base+0x810c>
   253a8:	cmp	x21, x25
   253ac:	b.lt	25374 <printf_parse@@Base+0x7f64>  // b.tstop
   253b0:	ldr	x0, [x26]
   253b4:	sub	x0, x25, x0
   253b8:	cmp	x0, #0x0
   253bc:	b.le	253e4 <printf_parse@@Base+0x7fd4>
   253c0:	ldr	x0, [x28, #48]
   253c4:	cmp	x0, x9
   253c8:	b.le	25534 <printf_parse@@Base+0x8124>
   253cc:	add	x0, x7, x25
   253d0:	ldrb	w1, [x7, x9]
   253d4:	add	x9, x9, #0x1
   253d8:	ldurb	w0, [x0, #-1]
   253dc:	cmp	w1, w0
   253e0:	b.ne	25374 <printf_parse@@Base+0x7f64>  // b.any
   253e4:	ldr	x0, [x28, #184]
   253e8:	ldr	x1, [x0, x25, lsl #3]
   253ec:	cbz	x1, 254e4 <printf_parse@@Base+0x80d4>
   253f0:	ldr	x4, [x1, #16]
   253f4:	cmp	x4, #0x0
   253f8:	b.le	254e4 <printf_parse@@Base+0x80d4>
   253fc:	ldr	x0, [sp, #176]
   25400:	ldr	x6, [x1, #24]
   25404:	ldr	x3, [x0]
   25408:	mov	x0, #0x0                   	// #0
   2540c:	b	25418 <printf_parse@@Base+0x8008>
   25410:	cmp	x4, x0
   25414:	b.eq	254e4 <printf_parse@@Base+0x80d4>  // b.none
   25418:	ldr	x22, [x6, x0, lsl #3]
   2541c:	add	x0, x0, #0x1
   25420:	lsl	x1, x22, #4
   25424:	add	x2, x3, x1
   25428:	ldrb	w2, [x2, #8]
   2542c:	cmp	w2, #0x9
   25430:	b.ne	25410 <printf_parse@@Base+0x8000>  // b.any
   25434:	ldr	x1, [x3, x1]
   25438:	ldr	x2, [sp, #152]
   2543c:	cmp	x2, x1
   25440:	b.ne	25410 <printf_parse@@Base+0x8000>  // b.any
   25444:	cmn	x22, #0x1
   25448:	b.eq	254e4 <printf_parse@@Base+0x80d4>  // b.none
   2544c:	ldr	x1, [x26, #16]
   25450:	ldr	x27, [x26]
   25454:	cbz	x1, 254ec <printf_parse@@Base+0x80dc>
   25458:	ldr	x2, [x26, #8]
   2545c:	mov	x3, x27
   25460:	mov	x5, x25
   25464:	mov	x4, x22
   25468:	mov	x0, x28
   2546c:	mov	w6, #0x9                   	// #9
   25470:	stp	x7, x9, [sp, #96]
   25474:	bl	24168 <printf_parse@@Base+0x6d58>
   25478:	cmp	w0, #0x1
   2547c:	ldp	x7, x9, [sp, #96]
   25480:	b.eq	254e4 <printf_parse@@Base+0x80d4>  // b.none
   25484:	cbnz	w0, 25190 <printf_parse@@Base+0x7d80>
   25488:	ldp	x0, x1, [x26, #24]
   2548c:	cmp	x1, x0
   25490:	b.eq	25568 <printf_parse@@Base+0x8158>  // b.none
   25494:	mov	x1, #0x28                  	// #40
   25498:	mov	x0, #0x1                   	// #1
   2549c:	str	x9, [sp, #96]
   254a0:	bl	a770 <calloc@plt>
   254a4:	mov	x2, x0
   254a8:	cbz	x0, 25510 <printf_parse@@Base+0x8100>
   254ac:	ldp	x0, x1, [x26, #32]
   254b0:	mov	x4, x21
   254b4:	mov	x3, x20
   254b8:	str	x2, [x1, x0, lsl #3]
   254bc:	add	x6, x0, #0x1
   254c0:	stp	x22, x25, [x2]
   254c4:	mov	x1, x26
   254c8:	mov	x0, x28
   254cc:	str	x6, [x26, #32]
   254d0:	bl	24d30 <printf_parse@@Base+0x7920>
   254d4:	cmp	w0, #0x1
   254d8:	ldr	x7, [x28, #8]
   254dc:	ldr	x9, [sp, #96]
   254e0:	b.hi	25190 <printf_parse@@Base+0x7d80>  // b.pmore
   254e4:	add	x25, x25, #0x1
   254e8:	b	253a8 <printf_parse@@Base+0x7f98>
   254ec:	sub	x1, x25, x27
   254f0:	mov	x0, #0x18                  	// #24
   254f4:	add	x1, x1, #0x1
   254f8:	stp	x7, x9, [sp, #96]
   254fc:	bl	a770 <calloc@plt>
   25500:	str	x0, [x26, #16]
   25504:	mov	x1, x0
   25508:	ldp	x7, x9, [sp, #96]
   2550c:	cbnz	x0, 25458 <printf_parse@@Base+0x8048>
   25510:	mov	w0, #0xc                   	// #12
   25514:	ldp	x19, x20, [sp, #16]
   25518:	b	25194 <printf_parse@@Base+0x7d84>
   2551c:	mov	x27, x9
   25520:	str	x25, [sp, #96]
   25524:	ldr	x0, [sp, #96]
   25528:	mov	x9, x27
   2552c:	add	x25, x0, #0x1
   25530:	b	253a8 <printf_parse@@Base+0x7f98>
   25534:	ldr	x0, [x28, #88]
   25538:	cmp	x0, x9
   2553c:	b.le	25374 <printf_parse@@Base+0x7f64>
   25540:	add	w1, w9, #0x1
   25544:	mov	x0, x28
   25548:	str	x9, [sp, #96]
   2554c:	bl	1f128 <printf_parse@@Base+0x1d18>
   25550:	cbnz	w0, 25190 <printf_parse@@Base+0x7d80>
   25554:	ldr	x7, [x28, #8]
   25558:	ldr	x9, [sp, #96]
   2555c:	b	253cc <printf_parse@@Base+0x7fbc>
   25560:	ldr	x5, [x28, #200]
   25564:	b	25014 <printf_parse@@Base+0x7c04>
   25568:	ldr	x0, [x26, #40]
   2556c:	lsl	x1, x1, #1
   25570:	add	x27, x1, #0x1
   25574:	str	x9, [sp, #96]
   25578:	lsl	x1, x27, #3
   2557c:	bl	a7e0 <realloc@plt>
   25580:	cbz	x0, 25510 <printf_parse@@Base+0x8100>
   25584:	str	x27, [x26, #24]
   25588:	str	x0, [x26, #40]
   2558c:	ldr	x9, [sp, #96]
   25590:	b	25494 <printf_parse@@Base+0x8084>
   25594:	mov	x9, x21
   25598:	ldr	x25, [sp, #96]
   2559c:	b	253a8 <printf_parse@@Base+0x7f98>
   255a0:	stp	x29, x30, [sp, #-112]!
   255a4:	mov	x29, sp
   255a8:	stp	x21, x22, [sp, #32]
   255ac:	mov	x21, x0
   255b0:	stp	x23, x24, [sp, #48]
   255b4:	ldp	x24, x0, [x1, #184]
   255b8:	stp	x19, x20, [sp, #16]
   255bc:	mov	x19, x1
   255c0:	ldr	x20, [x1, #72]
   255c4:	ldr	x23, [x1, #152]
   255c8:	cmp	x0, x20
   255cc:	b.ge	255fc <printf_parse@@Base+0x81ec>  // b.tcont
   255d0:	mov	x22, x2
   255d4:	str	x2, [x24, x20, lsl #3]
   255d8:	str	x20, [x1, #192]
   255dc:	ldr	x0, [x23, #152]
   255e0:	cbnz	x0, 256c8 <printf_parse@@Base+0x82b8>
   255e4:	mov	x0, x22
   255e8:	ldp	x19, x20, [sp, #16]
   255ec:	ldp	x21, x22, [sp, #32]
   255f0:	ldp	x23, x24, [sp, #48]
   255f4:	ldp	x29, x30, [sp], #112
   255f8:	ret
   255fc:	ldr	x0, [x24, x20, lsl #3]
   25600:	cbz	x0, 256bc <printf_parse@@Base+0x82ac>
   25604:	ldr	x0, [x0, #80]
   25608:	cbz	x2, 25678 <printf_parse@@Base+0x8268>
   2560c:	ldr	x24, [x2, #80]
   25610:	add	x22, sp, #0x58
   25614:	mov	x2, x0
   25618:	mov	x0, x22
   2561c:	mov	x1, x24
   25620:	bl	20bd8 <printf_parse@@Base+0x37c8>
   25624:	str	w0, [x21]
   25628:	cbnz	w0, 2571c <printf_parse@@Base+0x830c>
   2562c:	ldr	w2, [x19, #160]
   25630:	mov	x0, x19
   25634:	ldr	x1, [x19, #72]
   25638:	str	x25, [sp, #64]
   2563c:	sub	x1, x1, #0x1
   25640:	bl	223f0 <printf_parse@@Base+0x4fe0>
   25644:	ldr	x25, [x19, #184]
   25648:	mov	x2, x22
   2564c:	mov	w3, w0
   25650:	mov	x1, x23
   25654:	mov	x0, x21
   25658:	bl	20d50 <printf_parse@@Base+0x3940>
   2565c:	str	x0, [x25, x20, lsl #3]
   25660:	mov	x22, x0
   25664:	cbz	x24, 25724 <printf_parse@@Base+0x8314>
   25668:	ldr	x0, [sp, #104]
   2566c:	bl	aa50 <free@plt>
   25670:	ldr	x25, [sp, #64]
   25674:	b	255dc <printf_parse@@Base+0x81cc>
   25678:	ldp	x2, x3, [x0]
   2567c:	stp	x2, x3, [sp, #88]
   25680:	ldr	w2, [x19, #160]
   25684:	ldr	x3, [x0, #16]
   25688:	add	x22, sp, #0x58
   2568c:	sub	x1, x20, #0x1
   25690:	mov	x0, x19
   25694:	str	x3, [sp, #104]
   25698:	bl	223f0 <printf_parse@@Base+0x4fe0>
   2569c:	mov	w3, w0
   256a0:	mov	x2, x22
   256a4:	mov	x1, x23
   256a8:	mov	x0, x21
   256ac:	bl	20d50 <printf_parse@@Base+0x3940>
   256b0:	mov	x22, x0
   256b4:	str	x0, [x24, x20, lsl #3]
   256b8:	b	255dc <printf_parse@@Base+0x81cc>
   256bc:	mov	x22, x2
   256c0:	str	x2, [x24, x20, lsl #3]
   256c4:	b	255dc <printf_parse@@Base+0x81cc>
   256c8:	cbz	x22, 2571c <printf_parse@@Base+0x830c>
   256cc:	add	x23, x22, #0x10
   256d0:	add	x24, x22, #0x18
   256d4:	mov	x1, x23
   256d8:	mov	x2, x24
   256dc:	mov	x3, x20
   256e0:	mov	x0, x19
   256e4:	bl	204b8 <printf_parse@@Base+0x30a8>
   256e8:	str	w0, [x21]
   256ec:	cbnz	w0, 2571c <printf_parse@@Base+0x830c>
   256f0:	ldrb	w0, [x22, #104]
   256f4:	tbz	w0, #6, 255e4 <printf_parse@@Base+0x81d4>
   256f8:	mov	x2, x24
   256fc:	mov	x1, x23
   25700:	mov	x0, x19
   25704:	bl	24ea8 <printf_parse@@Base+0x7a98>
   25708:	str	w0, [x21]
   2570c:	cbnz	w0, 2571c <printf_parse@@Base+0x830c>
   25710:	ldr	x0, [x19, #184]
   25714:	ldr	x22, [x0, x20, lsl #3]
   25718:	b	255e4 <printf_parse@@Base+0x81d4>
   2571c:	mov	x22, #0x0                   	// #0
   25720:	b	255e4 <printf_parse@@Base+0x81d4>
   25724:	ldr	x25, [sp, #64]
   25728:	b	255dc <printf_parse@@Base+0x81cc>
   2572c:	nop
   25730:	stp	x29, x30, [sp, #-176]!
   25734:	mov	x29, sp
   25738:	stp	x19, x20, [sp, #16]
   2573c:	mov	x20, x1
   25740:	mov	x1, #0x1                   	// #1
   25744:	mov	x19, x0
   25748:	mov	x0, #0x8                   	// #8
   2574c:	stp	x21, x22, [sp, #32]
   25750:	stp	x27, x28, [sp, #80]
   25754:	stp	x1, x1, [sp, #152]
   25758:	ldp	x21, x27, [x20, #16]
   2575c:	bl	a5f0 <malloc@plt>
   25760:	str	x0, [sp, #168]
   25764:	cbz	x0, 259d4 <printf_parse@@Base+0x85c4>
   25768:	mov	x4, x0
   2576c:	stp	x25, x26, [sp, #64]
   25770:	add	x26, sp, #0x98
   25774:	mov	x2, x27
   25778:	mov	x3, x26
   2577c:	str	x21, [x4]
   25780:	mov	x1, x20
   25784:	mov	x0, x19
   25788:	bl	26c20 <printf_parse@@Base+0x9810>
   2578c:	cbnz	w0, 259f0 <printf_parse@@Base+0x85e0>
   25790:	add	x0, x20, #0x30
   25794:	stp	x23, x24, [sp, #48]
   25798:	mov	w24, #0x0                   	// #0
   2579c:	str	x0, [sp, #128]
   257a0:	add	x0, x20, #0x28
   257a4:	str	x0, [sp, #136]
   257a8:	cmp	x27, #0x0
   257ac:	b.le	25990 <printf_parse@@Base+0x8580>
   257b0:	ldr	x0, [x20]
   257b4:	lsl	x25, x27, #3
   257b8:	ldr	w1, [x19, #224]
   257bc:	ldr	x2, [x0, x27, lsl #3]
   257c0:	cmp	x2, #0x0
   257c4:	csinc	w24, wzr, w24, ne  // ne = any
   257c8:	cmp	w1, w24
   257cc:	b.lt	2599c <printf_parse@@Base+0x858c>  // b.tstop
   257d0:	ldr	x0, [x19, #184]
   257d4:	sub	x27, x27, #0x1
   257d8:	add	x0, x0, x25
   257dc:	ldur	x21, [x0, #-8]
   257e0:	str	xzr, [sp, #160]
   257e4:	cbz	x21, 25944 <printf_parse@@Base+0x8534>
   257e8:	ldr	x0, [x21, #40]
   257ec:	add	x21, x21, #0x20
   257f0:	ldr	x22, [x19, #152]
   257f4:	cmp	x0, #0x0
   257f8:	b.le	25944 <printf_parse@@Base+0x8534>
   257fc:	mov	x23, #0x0                   	// #0
   25800:	b	25894 <printf_parse@@Base+0x8484>
   25804:	mov	x2, x27
   25808:	mov	x0, x19
   2580c:	bl	224f0 <printf_parse@@Base+0x50e0>
   25810:	tst	w0, #0xff
   25814:	b.eq	25884 <printf_parse@@Base+0x8474>  // b.none
   25818:	ldr	x0, [x20]
   2581c:	ldr	x0, [x0, x25]
   25820:	cbz	x0, 25884 <printf_parse@@Base+0x8474>
   25824:	ldr	x2, [x22, #24]
   25828:	add	x1, x0, #0x18
   2582c:	ldr	x0, [x0, #16]
   25830:	ldr	x2, [x2, x28, lsl #3]
   25834:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   25838:	cbz	x0, 25884 <printf_parse@@Base+0x8474>
   2583c:	mov	w7, #0x1                   	// #1
   25840:	ldr	x0, [x20, #40]
   25844:	cbz	x0, 25870 <printf_parse@@Base+0x8460>
   25848:	ldr	x0, [x22, #24]
   2584c:	add	x4, x27, w7, sxtw
   25850:	ldp	x2, x1, [sp, #128]
   25854:	mov	x6, x27
   25858:	ldr	x3, [x0, x28, lsl #3]
   2585c:	mov	x5, x28
   25860:	mov	x0, x19
   25864:	bl	1feb0 <printf_parse@@Base+0x2aa0>
   25868:	tst	w0, #0xff
   2586c:	b.ne	25884 <printf_parse@@Base+0x8474>  // b.any
   25870:	mov	x1, x28
   25874:	mov	x0, x26
   25878:	bl	1e670 <printf_parse@@Base+0x1260>
   2587c:	tst	w0, #0xff
   25880:	b.eq	25988 <printf_parse@@Base+0x8578>  // b.none
   25884:	ldr	x0, [x21, #8]
   25888:	add	x23, x23, #0x1
   2588c:	cmp	x23, x0
   25890:	b.ge	25944 <printf_parse@@Base+0x8534>  // b.tcont
   25894:	ldr	x0, [x21, #16]
   25898:	ldr	x1, [x22]
   2589c:	ldr	x28, [x0, x23, lsl #3]
   258a0:	lsl	x8, x28, #4
   258a4:	add	x1, x1, x8
   258a8:	ldrb	w0, [x1, #10]
   258ac:	tbz	w0, #4, 25804 <printf_parse@@Base+0x83f4>
   258b0:	ldr	x9, [x19, #152]
   258b4:	mov	x4, x27
   258b8:	ldr	x10, [x20, #24]
   258bc:	mov	x1, x9
   258c0:	mov	x3, x19
   258c4:	mov	x2, x28
   258c8:	stp	x10, x8, [sp, #104]
   258cc:	ldr	x0, [x1], #216
   258d0:	str	x9, [sp, #120]
   258d4:	bl	23ec8 <printf_parse@@Base+0x6ab8>
   258d8:	mov	w7, w0
   258dc:	cmp	w0, #0x0
   258e0:	ldr	x8, [sp, #112]
   258e4:	b.le	25934 <printf_parse@@Base+0x8524>
   258e8:	ldr	x10, [sp, #104]
   258ec:	add	x0, x27, w0, sxtw
   258f0:	cmp	x10, x0
   258f4:	b.lt	25840 <printf_parse@@Base+0x8430>  // b.tstop
   258f8:	ldr	x1, [x20]
   258fc:	ldr	x9, [sp, #120]
   25900:	ldr	x0, [x1, x0, lsl #3]
   25904:	cbz	x0, 25938 <printf_parse@@Base+0x8528>
   25908:	ldr	x2, [x9, #24]
   2590c:	add	x1, x0, #0x18
   25910:	ldr	x0, [x0, #16]
   25914:	str	x8, [sp, #104]
   25918:	ldr	x2, [x2, x28, lsl #3]
   2591c:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   25920:	cbnz	x0, 25840 <printf_parse@@Base+0x8430>
   25924:	ldr	x1, [x22]
   25928:	ldr	x8, [sp, #104]
   2592c:	add	x1, x1, x8
   25930:	b	25804 <printf_parse@@Base+0x83f4>
   25934:	b.ne	25840 <printf_parse@@Base+0x8430>  // b.any
   25938:	ldr	x1, [x22]
   2593c:	add	x1, x1, x8
   25940:	b	25804 <printf_parse@@Base+0x83f4>
   25944:	mov	x3, x26
   25948:	mov	x2, x27
   2594c:	mov	x1, x20
   25950:	mov	x0, x19
   25954:	bl	26c20 <printf_parse@@Base+0x9810>
   25958:	mov	w21, w0
   2595c:	cbz	w0, 257a8 <printf_parse@@Base+0x8398>
   25960:	ldp	x23, x24, [sp, #48]
   25964:	ldr	x0, [sp, #168]
   25968:	bl	aa50 <free@plt>
   2596c:	mov	w0, w21
   25970:	ldp	x19, x20, [sp, #16]
   25974:	ldp	x21, x22, [sp, #32]
   25978:	ldp	x25, x26, [sp, #64]
   2597c:	ldp	x27, x28, [sp, #80]
   25980:	ldp	x29, x30, [sp], #176
   25984:	ret
   25988:	mov	w21, #0xc                   	// #12
   2598c:	b	25960 <printf_parse@@Base+0x8550>
   25990:	mov	w21, #0x0                   	// #0
   25994:	ldp	x23, x24, [sp, #48]
   25998:	b	25964 <printf_parse@@Base+0x8554>
   2599c:	mov	x2, x25
   259a0:	mov	w1, #0x0                   	// #0
   259a4:	bl	a6f0 <memset@plt>
   259a8:	mov	w21, #0x0                   	// #0
   259ac:	ldr	x0, [sp, #168]
   259b0:	bl	aa50 <free@plt>
   259b4:	mov	w0, w21
   259b8:	ldp	x19, x20, [sp, #16]
   259bc:	ldp	x21, x22, [sp, #32]
   259c0:	ldp	x23, x24, [sp, #48]
   259c4:	ldp	x25, x26, [sp, #64]
   259c8:	ldp	x27, x28, [sp, #80]
   259cc:	ldp	x29, x30, [sp], #176
   259d0:	ret
   259d4:	mov	w21, #0xc                   	// #12
   259d8:	mov	w0, w21
   259dc:	ldp	x19, x20, [sp, #16]
   259e0:	ldp	x21, x22, [sp, #32]
   259e4:	ldp	x27, x28, [sp, #80]
   259e8:	ldp	x29, x30, [sp], #176
   259ec:	ret
   259f0:	mov	w21, w0
   259f4:	b	25964 <printf_parse@@Base+0x8554>
   259f8:	sub	sp, sp, #0x280
   259fc:	stp	x29, x30, [sp]
   25a00:	mov	x29, sp
   25a04:	stp	x19, x20, [sp, #16]
   25a08:	mov	x20, x3
   25a0c:	ldr	w3, [sp, #640]
   25a10:	stp	x21, x22, [sp, #32]
   25a14:	mov	x22, x0
   25a18:	mov	x21, x4
   25a1c:	stp	x27, x28, [sp, #80]
   25a20:	add	x28, sp, #0x180
   25a24:	mov	x19, x5
   25a28:	str	x0, [sp, #120]
   25a2c:	str	x6, [sp, #136]
   25a30:	str	w3, [sp, #176]
   25a34:	str	x2, [sp, #192]
   25a38:	mov	x2, #0x100                 	// #256
   25a3c:	str	x1, [sp, #216]
   25a40:	mov	w1, #0x0                   	// #0
   25a44:	str	x7, [sp, #288]
   25a48:	ldr	x27, [x0]
   25a4c:	mov	x0, x28
   25a50:	bl	a6f0 <memset@plt>
   25a54:	str	x27, [sp, #536]
   25a58:	ldr	x0, [x22, #32]
   25a5c:	str	x0, [sp, #144]
   25a60:	cbz	x0, 25a78 <printf_parse@@Base+0x8668>
   25a64:	ldrb	w0, [x22, #56]
   25a68:	tst	x0, #0x8
   25a6c:	ccmp	x20, x21, #0x4, ne  // ne = any
   25a70:	b.ne	25e50 <printf_parse@@Base+0x8a40>  // b.any
   25a74:	str	xzr, [sp, #144]
   25a78:	ldr	x0, [sp, #120]
   25a7c:	str	xzr, [sp, #256]
   25a80:	ldr	x3, [sp, #136]
   25a84:	ldr	x0, [x0, #48]
   25a88:	cmp	x0, x3
   25a8c:	b.cs	25aa8 <printf_parse@@Base+0x8698>  // b.hs, b.nlast
   25a90:	sub	x1, x3, #0x1
   25a94:	sub	x2, x0, x1
   25a98:	sub	x0, x1, x0
   25a9c:	str	x0, [sp, #256]
   25aa0:	add	x0, x3, x2
   25aa4:	str	x0, [sp, #136]
   25aa8:	ldr	x4, [sp, #120]
   25aac:	ldr	x0, [x4, #16]
   25ab0:	cbz	x0, 265a8 <printf_parse@@Base+0x9198>
   25ab4:	ldr	x0, [x27, #72]
   25ab8:	cbz	x0, 265a8 <printf_parse@@Base+0x9198>
   25abc:	ldr	x1, [x27, #80]
   25ac0:	cbz	x1, 265a8 <printf_parse@@Base+0x9198>
   25ac4:	ldr	x2, [x27, #88]
   25ac8:	cbz	x2, 265a8 <printf_parse@@Base+0x9198>
   25acc:	ldr	x3, [x27, #96]
   25ad0:	cbz	x3, 265a8 <printf_parse@@Base+0x9198>
   25ad4:	ldr	x0, [x0, #16]
   25ad8:	cbnz	x0, 25b08 <printf_parse@@Base+0x86f8>
   25adc:	ldr	x0, [x1, #16]
   25ae0:	cbnz	x0, 25b08 <printf_parse@@Base+0x86f8>
   25ae4:	ldr	x0, [x2, #16]
   25ae8:	cbz	x0, 25af4 <printf_parse@@Base+0x86e4>
   25aec:	ldrsb	w0, [x4, #56]
   25af0:	tbnz	w0, #31, 25b08 <printf_parse@@Base+0x86f8>
   25af4:	cmp	x20, #0x0
   25af8:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   25afc:	b.ne	265a8 <printf_parse@@Base+0x9198>  // b.any
   25b00:	mov	x21, #0x0                   	// #0
   25b04:	mov	x20, #0x0                   	// #0
   25b08:	ldr	x0, [sp, #136]
   25b0c:	cbnz	x0, 25e40 <printf_parse@@Base+0x8a30>
   25b10:	ldr	x0, [x27, #152]
   25b14:	cmp	x0, #0x0
   25b18:	cset	w0, ne  // ne = any
   25b1c:	str	w0, [sp, #200]
   25b20:	str	w0, [sp, #232]
   25b24:	ldr	x8, [sp, #120]
   25b28:	mov	x0, x28
   25b2c:	ldr	w6, [x27, #180]
   25b30:	ldr	x2, [x27, #16]
   25b34:	str	w6, [sp, #528]
   25b38:	ldr	x3, [x8, #24]
   25b3c:	add	x1, x2, #0x1
   25b40:	ldr	x7, [sp, #192]
   25b44:	sxtw	x2, w6
   25b48:	ldr	x8, [x8, #40]
   25b4c:	cmp	x1, x2
   25b50:	ldr	x5, [sp, #216]
   25b54:	csel	x1, x1, x2, ge  // ge = tcont
   25b58:	add	x4, x7, #0x1
   25b5c:	str	x5, [sp, #384]
   25b60:	and	x5, x3, #0x400000
   25b64:	cmp	x1, x4
   25b68:	orr	x2, x5, x8
   25b6c:	csel	x1, x1, x4, le
   25b70:	cmp	x2, #0x0
   25b74:	ldrb	w2, [x27, #176]
   25b78:	ubfx	w3, w3, #22, #1
   25b7c:	strb	w3, [sp, #520]
   25b80:	cset	w3, ne  // ne = any
   25b84:	strb	w3, [sp, #523]
   25b88:	ubfx	x3, x2, #2, #1
   25b8c:	ubfx	x2, x2, #3, #1
   25b90:	str	x8, [sp, #264]
   25b94:	stp	x7, x7, [sp, #464]
   25b98:	stp	x7, x7, [sp, #480]
   25b9c:	str	x8, [sp, #504]
   25ba0:	strb	w3, [sp, #521]
   25ba4:	strb	w2, [sp, #522]
   25ba8:	bl	1e558 <printf_parse@@Base+0x1148>
   25bac:	str	w0, [sp, #132]
   25bb0:	cbnz	w0, 2693c <printf_parse@@Base+0x952c>
   25bb4:	ldrb	w0, [x27, #176]
   25bb8:	add	x1, x27, #0xb8
   25bbc:	ldrb	w2, [sp, #523]
   25bc0:	str	x1, [sp, #512]
   25bc4:	ubfx	x0, x0, #4, #1
   25bc8:	strb	w0, [sp, #526]
   25bcc:	cbnz	w2, 25be8 <printf_parse@@Base+0x87d8>
   25bd0:	ldr	x0, [sp, #216]
   25bd4:	str	x0, [sp, #392]
   25bd8:	ldr	w0, [x27, #180]
   25bdc:	ldr	x1, [sp, #192]
   25be0:	cmp	w0, #0x1
   25be4:	b.le	25bec <printf_parse@@Base+0x87dc>
   25be8:	mov	x1, #0x0                   	// #0
   25bec:	ldr	x0, [sp, #120]
   25bf0:	mov	x2, #0xffffffffffffffff    	// #-1
   25bf4:	ldr	x22, [x27, #152]
   25bf8:	stp	x1, x1, [sp, #432]
   25bfc:	ldrb	w0, [x0, #56]
   25c00:	stp	x19, x19, [sp, #480]
   25c04:	cmp	xzr, x22, lsl #1
   25c08:	ubfx	x0, x0, #7, #1
   25c0c:	strb	w0, [sp, #525]
   25c10:	ldr	w0, [sp, #176]
   25c14:	lsl	x19, x22, #1
   25c18:	str	w0, [sp, #544]
   25c1c:	str	x2, [sp, #552]
   25c20:	b.ge	25c64 <printf_parse@@Base+0x8854>  // b.tcont
   25c24:	mov	x0, #0x6666666666666666    	// #7378697629483820646
   25c28:	movk	x0, #0x666, lsl #48
   25c2c:	cmp	x19, x0
   25c30:	b.gt	26934 <printf_parse@@Base+0x9524>
   25c34:	add	x0, x19, x22, lsl #3
   25c38:	lsl	x0, x0, #3
   25c3c:	bl	a5f0 <malloc@plt>
   25c40:	mov	x1, x0
   25c44:	lsl	x0, x22, #4
   25c48:	mov	x22, x1
   25c4c:	str	x1, [sp, #600]
   25c50:	bl	a5f0 <malloc@plt>
   25c54:	str	x0, [sp, #632]
   25c58:	cmp	x0, #0x0
   25c5c:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   25c60:	b.eq	26934 <printf_parse@@Base+0x9524>  // b.none
   25c64:	mov	w0, #0x1                   	// #1
   25c68:	str	w0, [sp, #608]
   25c6c:	ldr	x0, [sp, #136]
   25c70:	str	x19, [sp, #592]
   25c74:	str	x19, [sp, #624]
   25c78:	cmp	x0, #0x1
   25c7c:	b.ls	26924 <printf_parse@@Base+0x9514>  // b.plast
   25c80:	ldr	x0, [sp, #448]
   25c84:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
   25c88:	cmp	x0, x1
   25c8c:	b.hi	26934 <printf_parse@@Base+0x9524>  // b.pmore
   25c90:	add	x0, x0, #0x1
   25c94:	lsl	x0, x0, #3
   25c98:	bl	a5f0 <malloc@plt>
   25c9c:	str	x0, [sp, #568]
   25ca0:	cbz	x0, 26b2c <printf_parse@@Base+0x971c>
   25ca4:	ldr	x0, [sp, #176]
   25ca8:	mov	w1, #0x6                   	// #6
   25cac:	mov	w2, #0x1                   	// #1
   25cb0:	str	x20, [sp, #320]
   25cb4:	tst	x0, #0x1
   25cb8:	mov	w0, #0x4                   	// #4
   25cbc:	csel	w1, w0, w1, ne  // ne = any
   25cc0:	cmp	x20, x21
   25cc4:	cneg	w2, w2, gt
   25cc8:	str	w2, [sp, #236]
   25ccc:	csel	x2, x20, x21, le
   25cd0:	str	w1, [sp, #496]
   25cd4:	csel	x1, x20, x21, ge  // ge = tcont
   25cd8:	str	x1, [sp, #152]
   25cdc:	mov	w1, #0x8                   	// #8
   25ce0:	str	x2, [sp, #208]
   25ce4:	ldr	x2, [sp, #144]
   25ce8:	str	w1, [sp, #204]
   25cec:	ldr	w1, [x27, #180]
   25cf0:	str	w1, [sp, #276]
   25cf4:	cbz	x2, 25d44 <printf_parse@@Base+0x8934>
   25cf8:	cmp	w1, #0x1
   25cfc:	b.eq	25d20 <printf_parse@@Base+0x8910>  // b.none
   25d00:	ldr	x0, [sp, #120]
   25d04:	ldr	x1, [sp, #264]
   25d08:	ldr	x0, [x0, #24]
   25d0c:	and	x0, x0, #0x400000
   25d10:	orr	x0, x1, x0
   25d14:	cmp	x0, #0x0
   25d18:	cset	w0, eq  // eq = none
   25d1c:	lsl	w0, w0, #2
   25d20:	cmp	x20, x21
   25d24:	mov	w1, #0x2                   	// #2
   25d28:	csel	w2, wzr, w1, gt
   25d2c:	ldr	x1, [sp, #264]
   25d30:	cmp	x1, #0x0
   25d34:	cset	w1, ne  // ne = any
   25d38:	orr	w0, w1, w0
   25d3c:	orr	w0, w0, w2
   25d40:	str	w0, [sp, #204]
   25d44:	ldr	x0, [sp, #208]
   25d48:	cmp	x20, x0
   25d4c:	ldr	x0, [sp, #152]
   25d50:	cset	w1, lt  // lt = tstop
   25d54:	cmp	x20, x0
   25d58:	cset	w0, gt
   25d5c:	orr	w0, w1, w0
   25d60:	str	w0, [sp, #300]
   25d64:	cbnz	w0, 26b80 <printf_parse@@Base+0x9770>
   25d68:	cmp	x20, x21
   25d6c:	add	x0, sp, #0x140
   25d70:	csel	x0, x0, xzr, le
   25d74:	str	x0, [sp, #280]
   25d78:	cmp	x0, #0x0
   25d7c:	add	x0, sp, #0x13c
   25d80:	str	x0, [sp, #184]
   25d84:	cset	w0, ne  // ne = any
   25d88:	add	x1, sp, #0x138
   25d8c:	stp	x23, x24, [sp, #48]
   25d90:	stp	x25, x26, [sp, #64]
   25d94:	str	x1, [sp, #112]
   25d98:	str	x27, [sp, #224]
   25d9c:	str	w0, [sp, #296]
   25da0:	ldr	w0, [sp, #204]
   25da4:	cmp	w0, #0x7
   25da8:	b.eq	2646c <printf_parse@@Base+0x905c>  // b.none
   25dac:	cmp	w0, #0x8
   25db0:	b.eq	25f38 <printf_parse@@Base+0x8b28>  // b.none
   25db4:	cmp	w0, #0x5
   25db8:	b.gt	25e64 <printf_parse@@Base+0x8a54>
   25dbc:	cmp	w0, #0x3
   25dc0:	b.gt	268b0 <printf_parse@@Base+0x94a0>
   25dc4:	ldrsw	x19, [sp, #236]
   25dc8:	ldp	x21, x24, [sp, #144]
   25dcc:	ldr	x22, [sp, #192]
   25dd0:	ldr	x23, [sp, #208]
   25dd4:	ldr	x2, [sp, #424]
   25dd8:	b	25e10 <printf_parse@@Base+0x8a00>
   25ddc:	cmp	x22, x20
   25de0:	mov	x0, x21
   25de4:	b.le	25df4 <printf_parse@@Base+0x89e4>
   25de8:	ldr	x0, [sp, #392]
   25dec:	ldrb	w0, [x0, x1]
   25df0:	add	x0, x21, x0
   25df4:	ldrb	w0, [x0]
   25df8:	cbnz	w0, 25f38 <printf_parse@@Base+0x8b28>
   25dfc:	add	x20, x20, x19
   25e00:	str	x20, [sp, #320]
   25e04:	cmp	x20, x23
   25e08:	ccmp	x20, x24, #0x0, ge  // ge = tcont
   25e0c:	b.gt	25ee0 <printf_parse@@Base+0x8ad0>
   25e10:	ldr	x0, [sp, #440]
   25e14:	sub	x1, x20, x2
   25e18:	cmp	x0, x1
   25e1c:	b.hi	25ddc <printf_parse@@Base+0x89cc>  // b.pmore
   25e20:	ldr	w2, [sp, #176]
   25e24:	mov	x1, x20
   25e28:	mov	x0, x28
   25e2c:	bl	22618 <printf_parse@@Base+0x5208>
   25e30:	cbnz	w0, 26b38 <printf_parse@@Base+0x9728>
   25e34:	ldr	x2, [sp, #424]
   25e38:	sub	x1, x20, x2
   25e3c:	b	25ddc <printf_parse@@Base+0x89cc>
   25e40:	mov	w0, #0x1                   	// #1
   25e44:	str	w0, [sp, #200]
   25e48:	str	w0, [sp, #232]
   25e4c:	b	25b24 <printf_parse@@Base+0x8714>
   25e50:	tst	x0, #0x1
   25e54:	ldr	x0, [sp, #144]
   25e58:	csel	x0, x0, xzr, eq  // eq = none
   25e5c:	str	x0, [sp, #144]
   25e60:	b	25a78 <printf_parse@@Base+0x8668>
   25e64:	ldr	w0, [sp, #204]
   25e68:	cmp	w0, #0x6
   25e6c:	b.ne	25dc4 <printf_parse@@Base+0x89b4>  // b.any
   25e70:	ldr	x0, [sp, #152]
   25e74:	mov	w2, #0x0                   	// #0
   25e78:	cmp	x0, x20
   25e7c:	mov	x0, x20
   25e80:	b.le	25f2c <printf_parse@@Base+0x8b1c>
   25e84:	ldp	x3, x5, [sp, #144]
   25e88:	ldr	x4, [sp, #216]
   25e8c:	nop
   25e90:	ldrb	w1, [x4, x0]
   25e94:	ldrb	w1, [x3, x1]
   25e98:	cbnz	w1, 25f20 <printf_parse@@Base+0x8b10>
   25e9c:	add	x0, x0, #0x1
   25ea0:	mov	w2, #0x1                   	// #1
   25ea4:	cmp	x0, x5
   25ea8:	b.ne	25e90 <printf_parse@@Base+0x8a80>  // b.any
   25eac:	ldr	x20, [sp, #152]
   25eb0:	ldr	x0, [sp, #152]
   25eb4:	str	x0, [sp, #320]
   25eb8:	ldr	x0, [sp, #192]
   25ebc:	cmp	x20, x0
   25ec0:	mov	x0, #0x0                   	// #0
   25ec4:	b.lt	26ab8 <printf_parse@@Base+0x96a8>  // b.tstop
   25ec8:	ldr	x1, [sp, #264]
   25ecc:	cbz	x1, 25ed4 <printf_parse@@Base+0x8ac4>
   25ed0:	ldrb	w0, [x1, x0]
   25ed4:	ldr	x1, [sp, #144]
   25ed8:	ldrb	w0, [x1, x0]
   25edc:	cbnz	w0, 25f38 <printf_parse@@Base+0x8b28>
   25ee0:	ldr	x27, [sp, #224]
   25ee4:	mov	w0, #0x1                   	// #1
   25ee8:	str	w0, [sp, #132]
   25eec:	ldr	x0, [sp, #568]
   25ef0:	ldp	x23, x24, [sp, #48]
   25ef4:	ldp	x25, x26, [sp, #64]
   25ef8:	bl	aa50 <free@plt>
   25efc:	ldr	x0, [x27, #152]
   25f00:	cbz	x0, 26634 <printf_parse@@Base+0x9224>
   25f04:	mov	x0, x28
   25f08:	bl	1fae0 <printf_parse@@Base+0x26d0>
   25f0c:	ldr	x0, [sp, #632]
   25f10:	bl	aa50 <free@plt>
   25f14:	ldr	x0, [sp, #600]
   25f18:	bl	aa50 <free@plt>
   25f1c:	b	26634 <printf_parse@@Base+0x9224>
   25f20:	cbz	w2, 25f38 <printf_parse@@Base+0x8b28>
   25f24:	mov	x20, x0
   25f28:	str	x0, [sp, #320]
   25f2c:	ldr	x0, [sp, #152]
   25f30:	cmp	x0, x20
   25f34:	b.eq	25eb8 <printf_parse@@Base+0x8aa8>  // b.none
   25f38:	ldr	w2, [sp, #176]
   25f3c:	mov	x1, x20
   25f40:	mov	x0, x28
   25f44:	bl	22618 <printf_parse@@Base+0x5208>
   25f48:	str	w0, [sp, #132]
   25f4c:	cbnz	w0, 269b4 <printf_parse@@Base+0x95a4>
   25f50:	ldr	w0, [sp, #276]
   25f54:	cmp	w0, #0x1
   25f58:	b.eq	25f74 <printf_parse@@Base+0x8b64>  // b.none
   25f5c:	ldr	x0, [sp, #432]
   25f60:	cbz	x0, 25f74 <printf_parse@@Base+0x8b64>
   25f64:	ldr	x0, [sp, #400]
   25f68:	ldr	w0, [x0]
   25f6c:	cmn	w0, #0x1
   25f70:	b.eq	26440 <printf_parse@@Base+0x9030>  // b.none
   25f74:	ldr	x20, [sp, #536]
   25f78:	str	wzr, [sp, #312]
   25f7c:	ldr	x0, [sp, #456]
   25f80:	ldr	x19, [x20, #72]
   25f84:	mov	x1, x0
   25f88:	str	x1, [sp, #96]
   25f8c:	ldrsb	w0, [x19, #104]
   25f90:	str	xzr, [sp, #576]
   25f94:	str	xzr, [sp, #584]
   25f98:	str	wzr, [sp, #608]
   25f9c:	tbz	w0, #31, 25fd0 <printf_parse@@Base+0x8bc0>
   25fa0:	ldr	w2, [sp, #544]
   25fa4:	sub	x1, x1, #0x1
   25fa8:	mov	x0, x28
   25fac:	bl	223f0 <printf_parse@@Base+0x4fe0>
   25fb0:	tbnz	w0, #0, 26944 <printf_parse@@Base+0x9534>
   25fb4:	cbz	w0, 25fd0 <printf_parse@@Base+0x8bc0>
   25fb8:	and	w1, w0, #0x6
   25fbc:	cmp	w1, #0x6
   25fc0:	b.eq	26b1c <printf_parse@@Base+0x970c>  // b.none
   25fc4:	tbnz	w0, #1, 26a4c <printf_parse@@Base+0x963c>
   25fc8:	tbnz	w0, #2, 26a7c <printf_parse@@Base+0x966c>
   25fcc:	nop
   25fd0:	ldr	x0, [sp, #568]
   25fd4:	cbz	x0, 268a4 <printf_parse@@Base+0x9494>
   25fd8:	ldr	x2, [sp, #96]
   25fdc:	ldr	x1, [x20, #152]
   25fe0:	str	x19, [x0, x2, lsl #3]
   25fe4:	cbnz	x1, 26ac4 <printf_parse@@Base+0x96b4>
   25fe8:	ldrb	w0, [x19, #104]
   25fec:	ldr	w24, [sp, #296]
   25ff0:	str	xzr, [sp, #104]
   25ff4:	mov	x25, #0xffffffffffffffff    	// #-1
   25ff8:	tbnz	w0, #4, 26a08 <printf_parse@@Base+0x95f8>
   25ffc:	ldr	x0, [sp, #280]
   26000:	str	x0, [sp, #160]
   26004:	ldr	x22, [sp, #456]
   26008:	ldr	x0, [sp, #488]
   2600c:	cmp	x0, x22
   26010:	b.le	26b74 <printf_parse@@Base+0x9764>
   26014:	ldr	x0, [sp, #448]
   26018:	add	x21, x22, #0x1
   2601c:	add	x26, sp, #0x148
   26020:	cmp	x21, x0
   26024:	b.ge	260dc <printf_parse@@Base+0x8ccc>  // b.tcont
   26028:	ldr	x0, [sp, #432]
   2602c:	cmp	x21, x0
   26030:	b.ge	26598 <printf_parse@@Base+0x9188>  // b.tcont
   26034:	ldrb	w0, [x19, #104]
   26038:	mov	x4, x22
   2603c:	tbnz	w0, #5, 26110 <printf_parse@@Base+0x8d00>
   26040:	ldr	x0, [sp, #392]
   26044:	add	x1, x4, #0x1
   26048:	str	x1, [sp, #456]
   2604c:	ldrb	w20, [x0, x4]
   26050:	ldr	x0, [x19, #88]
   26054:	cbz	x0, 26568 <printf_parse@@Base+0x9158>
   26058:	ldr	x20, [x0, x20, lsl #3]
   2605c:	ldr	x0, [sp, #568]
   26060:	cbz	x0, 26078 <printf_parse@@Base+0x8c68>
   26064:	ldr	x0, [sp, #112]
   26068:	mov	x2, x20
   2606c:	mov	x1, x28
   26070:	bl	255a0 <printf_parse@@Base+0x8190>
   26074:	mov	x20, x0
   26078:	cbz	x20, 26284 <printf_parse@@Base+0x8e74>
   2607c:	cmp	x19, x20
   26080:	ldrb	w0, [x20, #104]
   26084:	ldr	x1, [sp, #96]
   26088:	csel	w24, w24, wzr, eq  // eq = none
   2608c:	cmp	w24, #0x0
   26090:	csel	x1, x1, x21, eq  // eq = none
   26094:	str	x1, [sp, #96]
   26098:	ldr	x22, [sp, #456]
   2609c:	tbz	w0, #4, 260bc <printf_parse@@Base+0x8cac>
   260a0:	tbnz	w0, #7, 264e8 <printf_parse@@Base+0x90d8>
   260a4:	ldr	w0, [sp, #200]
   260a8:	mov	x25, x22
   260ac:	cbz	w0, 262f4 <printf_parse@@Base+0x8ee4>
   260b0:	mov	x0, #0x1                   	// #1
   260b4:	str	x0, [sp, #104]
   260b8:	str	xzr, [sp, #160]
   260bc:	ldr	x0, [sp, #488]
   260c0:	cmp	x0, x22
   260c4:	b.le	262dc <printf_parse@@Base+0x8ecc>
   260c8:	ldr	x0, [sp, #448]
   260cc:	add	x21, x22, #0x1
   260d0:	mov	x19, x20
   260d4:	cmp	x21, x0
   260d8:	b.lt	26028 <printf_parse@@Base+0x8c18>  // b.tstop
   260dc:	ldr	x1, [sp, #472]
   260e0:	cmp	x0, x1
   260e4:	b.ge	26028 <printf_parse@@Base+0x8c18>  // b.tcont
   260e8:	add	w1, w21, #0x1
   260ec:	mov	x0, x28
   260f0:	bl	1f128 <printf_parse@@Base+0x1d18>
   260f4:	str	w0, [sp, #312]
   260f8:	cbnz	w0, 269c8 <printf_parse@@Base+0x95b8>
   260fc:	ldrb	w0, [x19, #104]
   26100:	ldr	x22, [sp, #456]
   26104:	mov	x4, x22
   26108:	tbz	w0, #5, 26040 <printf_parse@@Base+0x8c30>
   2610c:	nop
   26110:	ldr	x5, [x19, #16]
   26114:	ldr	x20, [sp, #536]
   26118:	cmp	x5, #0x0
   2611c:	b.le	2627c <printf_parse@@Base+0x8e6c>
   26120:	stp	x21, x25, [sp, #240]
   26124:	mov	x21, x22
   26128:	add	x0, x20, #0xd8
   2612c:	str	w24, [sp, #272]
   26130:	mov	x24, x5
   26134:	mov	x23, #0x0                   	// #0
   26138:	str	x0, [sp, #168]
   2613c:	nop
   26140:	ldr	x0, [x19, #24]
   26144:	ldr	x25, [x20]
   26148:	ldr	x22, [x0, x23, lsl #3]
   2614c:	add	x0, x25, x22, lsl #4
   26150:	ldrb	w1, [x0, #10]
   26154:	tbz	w1, #4, 26264 <printf_parse@@Base+0x8e54>
   26158:	ldr	w27, [x0, #8]
   2615c:	tst	w27, #0x3ff00
   26160:	b.eq	26198 <printf_parse@@Base+0x8d88>  // b.none
   26164:	ldr	w2, [sp, #544]
   26168:	mov	x1, x21
   2616c:	mov	x0, x28
   26170:	bl	223f0 <printf_parse@@Base+0x4fe0>
   26174:	ubfx	x2, x27, #8, #10
   26178:	tbz	w27, #10, 26504 <printf_parse@@Base+0x90f4>
   2617c:	tbz	w0, #0, 26264 <printf_parse@@Base+0x8e54>
   26180:	tbnz	w2, #3, 26264 <printf_parse@@Base+0x8e54>
   26184:	tbz	w2, #5, 2618c <printf_parse@@Base+0x8d7c>
   26188:	tbz	w0, #1, 26264 <printf_parse@@Base+0x8e54>
   2618c:	tbz	w2, #7, 26198 <printf_parse@@Base+0x8d88>
   26190:	tbz	w0, #3, 26264 <printf_parse@@Base+0x8e54>
   26194:	nop
   26198:	ldr	x1, [sp, #168]
   2619c:	mov	x4, x21
   261a0:	mov	x0, x25
   261a4:	mov	x3, x28
   261a8:	mov	x2, x22
   261ac:	bl	23ec8 <printf_parse@@Base+0x6ab8>
   261b0:	mov	w1, w0
   261b4:	cbz	w0, 2625c <printf_parse@@Base+0x8e4c>
   261b8:	ldr	w2, [sp, #608]
   261bc:	mov	x0, x28
   261c0:	ldr	x4, [sp, #456]
   261c4:	cmp	w2, w1
   261c8:	add	x21, x4, w1, sxtw
   261cc:	csel	w1, w2, w1, ge  // ge = tcont
   261d0:	str	w1, [sp, #608]
   261d4:	mov	x1, x21
   261d8:	bl	1f268 <printf_parse@@Base+0x1e58>
   261dc:	str	w0, [sp, #316]
   261e0:	cbnz	w0, 265cc <printf_parse@@Base+0x91bc>
   261e4:	ldr	x0, [x20, #24]
   261e8:	ldr	x24, [sp, #568]
   261ec:	ldr	x0, [x0, x22, lsl #3]
   261f0:	ldr	x1, [x24, x21, lsl #3]
   261f4:	ldr	x3, [x20, #48]
   261f8:	add	x0, x0, x0, lsl #1
   261fc:	add	x3, x3, x0, lsl #3
   26200:	cbz	x1, 26510 <printf_parse@@Base+0x9100>
   26204:	ldr	x1, [x1, #80]
   26208:	mov	x2, x3
   2620c:	mov	x0, x26
   26210:	bl	20bd8 <printf_parse@@Base+0x37c8>
   26214:	str	w0, [sp, #316]
   26218:	cbnz	w0, 265cc <printf_parse@@Base+0x91bc>
   2621c:	ldr	w2, [sp, #544]
   26220:	sub	x1, x21, #0x1
   26224:	mov	x0, x28
   26228:	bl	223f0 <printf_parse@@Base+0x4fe0>
   2622c:	mov	w3, w0
   26230:	ldr	x0, [sp, #184]
   26234:	mov	x1, x20
   26238:	ldr	x22, [sp, #568]
   2623c:	mov	x2, x26
   26240:	bl	20d50 <printf_parse@@Base+0x3940>
   26244:	str	x0, [x22, x21, lsl #3]
   26248:	ldr	x0, [sp, #344]
   2624c:	bl	aa50 <free@plt>
   26250:	ldr	x1, [sp, #568]
   26254:	ldr	x0, [x1, x21, lsl #3]
   26258:	cbz	x0, 26554 <printf_parse@@Base+0x9144>
   2625c:	ldr	x24, [x19, #16]
   26260:	ldr	x21, [sp, #456]
   26264:	add	x23, x23, #0x1
   26268:	cmp	x23, x24
   2626c:	b.lt	26140 <printf_parse@@Base+0x8d30>  // b.tstop
   26270:	mov	x4, x21
   26274:	ldr	w24, [sp, #272]
   26278:	ldp	x21, x25, [sp, #240]
   2627c:	str	wzr, [sp, #312]
   26280:	b	26040 <printf_parse@@Base+0x8c30>
   26284:	ldr	w1, [sp, #312]
   26288:	ldr	x0, [sp, #568]
   2628c:	cbnz	w1, 26b24 <printf_parse@@Base+0x9714>
   26290:	cbz	x0, 262dc <printf_parse@@Base+0x8ecc>
   26294:	ldr	w1, [sp, #232]
   26298:	ldr	w2, [sp, #104]
   2629c:	eor	w1, w1, #0x1
   262a0:	tst	w1, w2
   262a4:	b.ne	262dc <printf_parse@@Base+0x8ecc>  // b.any
   262a8:	mov	w1, #0x0                   	// #0
   262ac:	ldr	x3, [sp, #456]
   262b0:	ldr	x2, [sp, #576]
   262b4:	b	262c4 <printf_parse@@Base+0x8eb4>
   262b8:	ldr	x4, [x0, x3, lsl #3]
   262bc:	mov	w1, #0x1                   	// #1
   262c0:	cbnz	x4, 264b4 <printf_parse@@Base+0x90a4>
   262c4:	mov	x4, x3
   262c8:	add	x3, x3, #0x1
   262cc:	cmp	x2, x3
   262d0:	b.ge	262b8 <printf_parse@@Base+0x8ea8>  // b.tcont
   262d4:	cbz	w1, 262dc <printf_parse@@Base+0x8ecc>
   262d8:	str	x4, [sp, #456]
   262dc:	ldr	x1, [sp, #160]
   262e0:	cbz	x1, 262f4 <printf_parse@@Base+0x8ee4>
   262e4:	ldr	x0, [x1]
   262e8:	ldr	x2, [sp, #96]
   262ec:	add	x0, x0, x2
   262f0:	str	x0, [x1]
   262f4:	cmn	x25, #0x1
   262f8:	b.eq	26434 <printf_parse@@Base+0x9024>  // b.none
   262fc:	cmn	x25, #0x2
   26300:	b.eq	26a54 <printf_parse@@Base+0x9644>  // b.none
   26304:	ldr	x0, [sp, #120]
   26308:	str	x25, [sp, #552]
   2630c:	ldrb	w0, [x0, #56]
   26310:	tbnz	w0, #4, 26660 <printf_parse@@Base+0x9250>
   26314:	ldr	x0, [sp, #136]
   26318:	cmp	x0, #0x1
   2631c:	b.ls	26674 <printf_parse@@Base+0x9264>  // b.plast
   26320:	ldr	x19, [sp, #568]
   26324:	mov	x3, x25
   26328:	mov	x0, x28
   2632c:	ldr	x1, [x19, x25, lsl #3]
   26330:	add	x2, x1, #0x18
   26334:	ldr	x1, [x1, #16]
   26338:	bl	22db0 <printf_parse@@Base+0x59a0>
   2633c:	mov	x20, x0
   26340:	ldr	x1, [sp, #224]
   26344:	ldrb	w1, [x1, #176]
   26348:	str	x0, [sp, #560]
   2634c:	tbnz	w1, #0, 26360 <printf_parse@@Base+0x8f50>
   26350:	ldr	x0, [sp, #224]
   26354:	ldr	x0, [x0, #152]
   26358:	cbz	x0, 2666c <printf_parse@@Base+0x925c>
   2635c:	ldr	x20, [sp, #560]
   26360:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
   26364:	cmp	x25, x0
   26368:	ldr	x22, [sp, #536]
   2636c:	b.hi	26a30 <printf_parse@@Base+0x9620>  // b.pmore
   26370:	add	x21, x25, #0x1
   26374:	lsl	x19, x21, #3
   26378:	mov	x0, x19
   2637c:	bl	a5f0 <malloc@plt>
   26380:	mov	x24, x0
   26384:	cbz	x0, 26a54 <printf_parse@@Base+0x9644>
   26388:	ldr	x0, [x22, #152]
   2638c:	cbz	x0, 266fc <printf_parse@@Base+0x92ec>
   26390:	mov	x0, x19
   26394:	bl	a5f0 <malloc@plt>
   26398:	mov	x26, x0
   2639c:	mov	x27, x0
   263a0:	cbz	x0, 26b50 <printf_parse@@Base+0x9740>
   263a4:	add	x23, sp, #0x148
   263a8:	lsl	x2, x21, #3
   263ac:	mov	w1, #0x0                   	// #0
   263b0:	mov	x0, x26
   263b4:	bl	a6f0 <memset@plt>
   263b8:	stp	x24, x26, [sp, #328]
   263bc:	mov	x1, x23
   263c0:	mov	x0, x28
   263c4:	stp	x20, x25, [sp, #344]
   263c8:	stp	xzr, xzr, [x23, #32]
   263cc:	str	xzr, [x23, #48]
   263d0:	bl	25730 <printf_parse@@Base+0x8320>
   263d4:	mov	w19, w0
   263d8:	ldr	x0, [sp, #376]
   263dc:	bl	aa50 <free@plt>
   263e0:	cbnz	w19, 266cc <printf_parse@@Base+0x92bc>
   263e4:	ldr	x0, [x24]
   263e8:	cbnz	x0, 266a4 <printf_parse@@Base+0x9294>
   263ec:	ldr	x0, [x26]
   263f0:	cbnz	x0, 266a4 <printf_parse@@Base+0x9294>
   263f4:	sub	x25, x25, #0x1
   263f8:	cmn	x25, #0x1
   263fc:	b.eq	26424 <printf_parse@@Base+0x9014>  // b.none
   26400:	ldr	x1, [sp, #568]
   26404:	nop
   26408:	ldr	x2, [x1, x25, lsl #3]
   2640c:	cbz	x2, 26418 <printf_parse@@Base+0x9008>
   26410:	ldrb	w0, [x2, #104]
   26414:	tbnz	w0, #4, 26984 <printf_parse@@Base+0x9574>
   26418:	sub	x25, x25, #0x1
   2641c:	cmn	x25, #0x1
   26420:	b.ne	26408 <printf_parse@@Base+0x8ff8>  // b.any
   26424:	mov	x0, x24
   26428:	bl	aa50 <free@plt>
   2642c:	mov	x0, x26
   26430:	bl	aa50 <free@plt>
   26434:	mov	x0, x28
   26438:	bl	1fae0 <printf_parse@@Base+0x26d0>
   2643c:	ldr	x20, [sp, #320]
   26440:	ldr	w0, [sp, #236]
   26444:	add	x20, x20, w0, sxtw
   26448:	str	x20, [sp, #320]
   2644c:	ldr	x0, [sp, #208]
   26450:	cmp	x20, x0
   26454:	ldr	x0, [sp, #152]
   26458:	ccmp	x20, x0, #0x0, ge  // ge = tcont
   2645c:	b.gt	25ee0 <printf_parse@@Base+0x8ad0>
   26460:	ldr	w0, [sp, #204]
   26464:	cmp	w0, #0x7
   26468:	b.ne	25dac <printf_parse@@Base+0x899c>  // b.any
   2646c:	ldr	x0, [sp, #152]
   26470:	mov	w2, #0x0                   	// #0
   26474:	cmp	x0, x20
   26478:	mov	x0, x20
   2647c:	b.le	25f2c <printf_parse@@Base+0x8b1c>
   26480:	ldp	x3, x6, [sp, #144]
   26484:	ldr	x5, [sp, #216]
   26488:	ldr	x4, [sp, #264]
   2648c:	nop
   26490:	ldrb	w1, [x5, x0]
   26494:	ldrb	w1, [x4, x1]
   26498:	ldrb	w1, [x3, x1]
   2649c:	cbnz	w1, 269f8 <printf_parse@@Base+0x95e8>
   264a0:	add	x0, x0, #0x1
   264a4:	mov	w2, #0x1                   	// #1
   264a8:	cmp	x0, x6
   264ac:	b.ne	26490 <printf_parse@@Base+0x9080>  // b.any
   264b0:	b	25eac <printf_parse@@Base+0x8a9c>
   264b4:	ldr	x0, [sp, #112]
   264b8:	mov	x2, #0x0                   	// #0
   264bc:	mov	x1, x28
   264c0:	str	x3, [sp, #456]
   264c4:	bl	255a0 <printf_parse@@Base+0x8190>
   264c8:	ldr	w2, [sp, #312]
   264cc:	cbnz	w2, 264dc <printf_parse@@Base+0x90cc>
   264d0:	cbnz	x0, 26a28 <printf_parse@@Base+0x9618>
   264d4:	ldr	x0, [sp, #568]
   264d8:	b	262a8 <printf_parse@@Base+0x8e98>
   264dc:	mov	x20, x0
   264e0:	cbnz	x0, 2607c <printf_parse@@Base+0x8c6c>
   264e4:	b	262dc <printf_parse@@Base+0x8ecc>
   264e8:	ldr	x1, [x20, #16]
   264ec:	mov	x3, x22
   264f0:	add	x2, x20, #0x18
   264f4:	mov	x0, x28
   264f8:	bl	22db0 <printf_parse@@Base+0x59a0>
   264fc:	cbz	x0, 260bc <printf_parse@@Base+0x8cac>
   26500:	b	260a4 <printf_parse@@Base+0x8c94>
   26504:	tbz	w2, #3, 26184 <printf_parse@@Base+0x8d74>
   26508:	tbz	w0, #0, 26184 <printf_parse@@Base+0x8d74>
   2650c:	b	26264 <printf_parse@@Base+0x8e54>
   26510:	ldp	x6, x7, [x3]
   26514:	stp	x6, x7, [x26]
   26518:	ldr	w2, [sp, #544]
   2651c:	ldr	x3, [x3, #16]
   26520:	sub	x1, x21, #0x1
   26524:	mov	x0, x28
   26528:	str	x3, [x26, #16]
   2652c:	bl	223f0 <printf_parse@@Base+0x4fe0>
   26530:	mov	w3, w0
   26534:	ldr	x0, [sp, #184]
   26538:	mov	x1, x20
   2653c:	mov	x2, x26
   26540:	bl	20d50 <printf_parse@@Base+0x3940>
   26544:	str	x0, [x24, x21, lsl #3]
   26548:	ldr	x1, [sp, #568]
   2654c:	ldr	x0, [x1, x21, lsl #3]
   26550:	cbnz	x0, 2625c <printf_parse@@Base+0x8e4c>
   26554:	ldr	w0, [sp, #316]
   26558:	cbz	w0, 2625c <printf_parse@@Base+0x8e4c>
   2655c:	ldr	w24, [sp, #272]
   26560:	ldp	x21, x25, [sp, #240]
   26564:	b	265d8 <printf_parse@@Base+0x91c8>
   26568:	ldr	x22, [x19, #96]
   2656c:	cbz	x22, 265e8 <printf_parse@@Base+0x91d8>
   26570:	ldr	w2, [sp, #544]
   26574:	mov	x0, x28
   26578:	ldr	x1, [sp, #456]
   2657c:	sub	x1, x1, #0x1
   26580:	bl	223f0 <printf_parse@@Base+0x4fe0>
   26584:	and	x1, x20, #0xff
   26588:	tbz	w0, #0, 26658 <printf_parse@@Base+0x9248>
   2658c:	add	x1, x1, #0x100
   26590:	ldr	x20, [x22, x1, lsl #3]
   26594:	b	2605c <printf_parse@@Base+0x8c4c>
   26598:	ldr	x1, [sp, #472]
   2659c:	cmp	x0, x1
   265a0:	b.ge	26034 <printf_parse@@Base+0x8c24>  // b.tcont
   265a4:	b	260e8 <printf_parse@@Base+0x8cd8>
   265a8:	mov	w0, #0x1                   	// #1
   265ac:	str	w0, [sp, #132]
   265b0:	ldp	x29, x30, [sp]
   265b4:	ldr	w0, [sp, #132]
   265b8:	ldp	x19, x20, [sp, #16]
   265bc:	ldp	x21, x22, [sp, #32]
   265c0:	ldp	x27, x28, [sp, #80]
   265c4:	add	sp, sp, #0x280
   265c8:	ret
   265cc:	ldp	x21, x25, [sp, #240]
   265d0:	ldr	w24, [sp, #272]
   265d4:	ldr	x1, [sp, #568]
   265d8:	str	w0, [sp, #312]
   265dc:	cbz	x1, 26610 <printf_parse@@Base+0x9200>
   265e0:	mov	x20, #0x0                   	// #0
   265e4:	b	26064 <printf_parse@@Base+0x8c54>
   265e8:	ldr	x0, [sp, #536]
   265ec:	mov	x1, x19
   265f0:	bl	21638 <printf_parse@@Base+0x4228>
   265f4:	tst	w0, #0xff
   265f8:	b.ne	26050 <printf_parse@@Base+0x8c40>  // b.any
   265fc:	ldr	x0, [sp, #568]
   26600:	mov	w1, #0xc                   	// #12
   26604:	str	w1, [sp, #312]
   26608:	cbnz	x0, 265e0 <printf_parse@@Base+0x91d0>
   2660c:	nop
   26610:	ldr	x27, [sp, #224]
   26614:	mov	x0, #0x0                   	// #0
   26618:	ldp	x23, x24, [sp, #48]
   2661c:	mov	w1, #0xc                   	// #12
   26620:	ldp	x25, x26, [sp, #64]
   26624:	str	w1, [sp, #132]
   26628:	bl	aa50 <free@plt>
   2662c:	ldr	x0, [x27, #152]
   26630:	cbnz	x0, 25f04 <printf_parse@@Base+0x8af4>
   26634:	mov	x0, x28
   26638:	bl	1f918 <printf_parse@@Base+0x2508>
   2663c:	ldr	w0, [sp, #132]
   26640:	ldp	x29, x30, [sp]
   26644:	ldp	x19, x20, [sp, #16]
   26648:	ldp	x21, x22, [sp, #32]
   2664c:	ldp	x27, x28, [sp, #80]
   26650:	add	sp, sp, #0x280
   26654:	ret
   26658:	ldr	x20, [x22, x20, lsl #3]
   2665c:	b	2605c <printf_parse@@Base+0x8c4c>
   26660:	ldr	x0, [sp, #224]
   26664:	ldr	x0, [x0, #152]
   26668:	cbnz	x0, 26680 <printf_parse@@Base+0x9270>
   2666c:	ldr	x27, [sp, #224]
   26670:	b	26750 <printf_parse@@Base+0x9340>
   26674:	ldr	x27, [sp, #224]
   26678:	ldr	x0, [x27, #152]
   2667c:	cbz	x0, 26750 <printf_parse@@Base+0x9340>
   26680:	ldr	x19, [sp, #568]
   26684:	mov	x3, x25
   26688:	mov	x0, x28
   2668c:	ldr	x1, [x19, x25, lsl #3]
   26690:	add	x2, x1, #0x18
   26694:	ldr	x1, [x1, #16]
   26698:	bl	22db0 <printf_parse@@Base+0x59a0>
   2669c:	str	x0, [sp, #560]
   266a0:	b	2635c <printf_parse@@Base+0x8f4c>
   266a4:	mov	x3, x21
   266a8:	mov	x2, x26
   266ac:	mov	x1, x24
   266b0:	mov	x0, x22
   266b4:	bl	21260 <printf_parse@@Base+0x3e50>
   266b8:	mov	w19, w0
   266bc:	mov	x0, x26
   266c0:	bl	aa50 <free@plt>
   266c4:	cbz	w19, 26738 <printf_parse@@Base+0x9328>
   266c8:	mov	x27, #0x0                   	// #0
   266cc:	mov	x0, x24
   266d0:	bl	aa50 <free@plt>
   266d4:	mov	x0, x27
   266d8:	bl	aa50 <free@plt>
   266dc:	cmp	w19, #0x1
   266e0:	b.eq	26434 <printf_parse@@Base+0x9024>  // b.none
   266e4:	str	w19, [sp, #132]
   266e8:	ldp	x23, x24, [sp, #48]
   266ec:	ldp	x25, x26, [sp, #64]
   266f0:	ldr	x27, [sp, #224]
   266f4:	ldr	x0, [sp, #568]
   266f8:	b	26628 <printf_parse@@Base+0x9218>
   266fc:	add	x2, sp, #0x200
   26700:	stp	x24, xzr, [sp, #328]
   26704:	add	x23, sp, #0x148
   26708:	stp	x20, x25, [sp, #344]
   2670c:	mov	x1, x23
   26710:	mov	x0, x28
   26714:	stp	xzr, xzr, [x2, #-152]
   26718:	str	xzr, [sp, #376]
   2671c:	bl	25730 <printf_parse@@Base+0x8320>
   26720:	mov	w19, w0
   26724:	ldr	x0, [sp, #376]
   26728:	bl	aa50 <free@plt>
   2672c:	cbnz	w19, 266c8 <printf_parse@@Base+0x92b8>
   26730:	ldr	x0, [x24]
   26734:	cbz	x0, 26a70 <printf_parse@@Base+0x9660>
   26738:	ldr	x0, [sp, #568]
   2673c:	ldr	x27, [sp, #224]
   26740:	bl	aa50 <free@plt>
   26744:	str	x25, [sp, #552]
   26748:	str	x20, [sp, #560]
   2674c:	str	x24, [sp, #568]
   26750:	ldr	x0, [sp, #136]
   26754:	cbz	x0, 25eec <printf_parse@@Base+0x8adc>
   26758:	ldr	x1, [sp, #136]
   2675c:	ldr	x2, [sp, #288]
   26760:	cmp	x1, #0x1
   26764:	add	x0, x2, #0x10
   26768:	add	x2, x2, x1, lsl #4
   2676c:	mov	x1, #0xffffffffffffffff    	// #-1
   26770:	b.ls	26c08 <printf_parse@@Base+0x97f8>  // b.plast
   26774:	nop
   26778:	str	x1, [x0, #8]
   2677c:	str	x1, [x0], #16
   26780:	cmp	x2, x0
   26784:	b.ne	26778 <printf_parse@@Base+0x9368>  // b.any
   26788:	ldr	x0, [sp, #120]
   2678c:	ldr	x2, [sp, #288]
   26790:	ldrb	w0, [x0, #56]
   26794:	ldr	x1, [sp, #552]
   26798:	stp	xzr, x1, [x2]
   2679c:	tst	x0, #0x10
   267a0:	ldr	x0, [sp, #136]
   267a4:	mov	x1, #0x0                   	// #0
   267a8:	ccmp	x0, #0x1, #0x4, eq  // eq = none
   267ac:	b.ne	26bb8 <printf_parse@@Base+0x97a8>  // b.any
   267b0:	ldrb	w5, [sp, #524]
   267b4:	mov	x2, #0x0                   	// #0
   267b8:	ldr	x9, [sp, #136]
   267bc:	ldr	x0, [sp, #288]
   267c0:	ldr	x4, [sp, #320]
   267c4:	ldr	x8, [sp, #408]
   267c8:	ldp	x6, x7, [sp, #432]
   267cc:	b	267d4 <printf_parse@@Base+0x93c4>
   267d0:	ldr	x1, [x0]
   267d4:	cmn	x1, #0x1
   267d8:	b.eq	267f0 <printf_parse@@Base+0x93e0>  // b.none
   267dc:	ldr	x3, [x0, #8]
   267e0:	cbnz	w5, 26b98 <printf_parse@@Base+0x9788>
   267e4:	add	x1, x4, x1
   267e8:	add	x3, x4, x3
   267ec:	stp	x1, x3, [x0]
   267f0:	add	x2, x2, #0x1
   267f4:	add	x0, x0, #0x10
   267f8:	cmp	x2, x9
   267fc:	b.ne	267d0 <printf_parse@@Base+0x93c0>  // b.any
   26800:	ldr	x0, [sp, #256]
   26804:	cmp	x0, #0x0
   26808:	b.le	26838 <printf_parse@@Base+0x9428>
   2680c:	ldr	x0, [sp, #136]
   26810:	ldr	x1, [sp, #256]
   26814:	ldr	x3, [sp, #288]
   26818:	add	x2, x1, x0
   2681c:	mov	x1, #0xffffffffffffffff    	// #-1
   26820:	add	x0, x3, x0, lsl #4
   26824:	add	x2, x3, x2, lsl #4
   26828:	stp	x1, x1, [x0]
   2682c:	add	x0, x0, #0x10
   26830:	cmp	x2, x0
   26834:	b.ne	26828 <printf_parse@@Base+0x9418>  // b.any
   26838:	ldr	x4, [x27, #224]
   2683c:	ldr	x0, [sp, #568]
   26840:	cbz	x4, 26898 <printf_parse@@Base+0x9488>
   26844:	ldr	x1, [sp, #136]
   26848:	cmp	x1, #0x1
   2684c:	b.ls	26898 <printf_parse@@Base+0x9488>  // b.plast
   26850:	ldr	x6, [sp, #288]
   26854:	sub	x5, x1, #0x1
   26858:	mov	x1, #0x0                   	// #0
   2685c:	add	x3, x6, #0x10
   26860:	ldr	x2, [x4, x1, lsl #3]
   26864:	cmp	x2, x1
   26868:	b.eq	26888 <printf_parse@@Base+0x9478>  // b.none
   2686c:	add	x2, x6, x2, lsl #4
   26870:	ldr	x2, [x2, #16]
   26874:	str	x2, [x3]
   26878:	ldr	x2, [x4, x1, lsl #3]
   2687c:	add	x2, x6, x2, lsl #4
   26880:	ldr	x2, [x2, #24]
   26884:	str	x2, [x3, #8]
   26888:	add	x1, x1, #0x1
   2688c:	add	x3, x3, #0x10
   26890:	cmp	x5, x1
   26894:	b.ne	26860 <printf_parse@@Base+0x9450>  // b.any
   26898:	ldp	x23, x24, [sp, #48]
   2689c:	ldp	x25, x26, [sp, #64]
   268a0:	b	26628 <printf_parse@@Base+0x9218>
   268a4:	ldrb	w0, [x19, #104]
   268a8:	ldr	w24, [sp, #296]
   268ac:	b	25ff0 <printf_parse@@Base+0x8be0>
   268b0:	ldr	x0, [sp, #208]
   268b4:	cmp	x0, x20
   268b8:	b.gt	25ee0 <printf_parse@@Base+0x8ad0>
   268bc:	ldp	x6, x7, [sp, #208]
   268c0:	mov	x1, x20
   268c4:	ldr	x4, [sp, #144]
   268c8:	mov	w0, #0x0                   	// #0
   268cc:	ldr	x5, [sp, #192]
   268d0:	ldr	x3, [sp, #264]
   268d4:	nop
   268d8:	cmp	x1, x5
   268dc:	mov	x2, #0x0                   	// #0
   268e0:	b.ge	268e8 <printf_parse@@Base+0x94d8>  // b.tcont
   268e4:	ldrb	w2, [x7, x1]
   268e8:	cbz	x3, 268f0 <printf_parse@@Base+0x94e0>
   268ec:	ldrb	w2, [x3, x2]
   268f0:	ldrb	w2, [x4, x2]
   268f4:	cbnz	w2, 269a4 <printf_parse@@Base+0x9594>
   268f8:	sub	x1, x1, #0x1
   268fc:	mov	w0, #0x1                   	// #1
   26900:	cmp	x1, x6
   26904:	b.ge	268d8 <printf_parse@@Base+0x94c8>  // b.tcont
   26908:	str	w0, [sp, #132]
   2690c:	str	x1, [sp, #320]
   26910:	ldp	x23, x24, [sp, #48]
   26914:	ldp	x25, x26, [sp, #64]
   26918:	ldr	x27, [sp, #224]
   2691c:	ldr	x0, [sp, #568]
   26920:	b	26628 <printf_parse@@Base+0x9218>
   26924:	ldrb	w0, [x27, #176]
   26928:	tbnz	w0, #1, 25c80 <printf_parse@@Base+0x8870>
   2692c:	str	xzr, [sp, #568]
   26930:	b	25ca4 <printf_parse@@Base+0x8894>
   26934:	mov	w0, #0xc                   	// #12
   26938:	str	w0, [sp, #132]
   2693c:	ldr	x0, [sp, #568]
   26940:	b	26628 <printf_parse@@Base+0x9218>
   26944:	ldr	x19, [x20, #80]
   26948:	cbnz	x19, 25fd0 <printf_parse@@Base+0x8bc0>
   2694c:	ldr	w0, [sp, #312]
   26950:	str	w0, [sp, #132]
   26954:	cmp	w0, #0xc
   26958:	ldr	x27, [sp, #224]
   2695c:	b.eq	25eec <printf_parse@@Base+0x8adc>  // b.none
   26960:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   26964:	add	x3, x3, #0x980
   26968:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2696c:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   26970:	add	x3, x3, #0x30
   26974:	add	x1, x1, #0x760
   26978:	add	x0, x0, #0x7e0
   2697c:	mov	w2, #0x435                 	// #1077
   26980:	bl	aea0 <__assert_fail@plt>
   26984:	ldr	x1, [x2, #16]
   26988:	mov	x3, x25
   2698c:	mov	x0, x28
   26990:	add	x2, x2, #0x18
   26994:	add	x21, x25, #0x1
   26998:	bl	22db0 <printf_parse@@Base+0x59a0>
   2699c:	mov	x20, x0
   269a0:	b	263a8 <printf_parse@@Base+0x8f98>
   269a4:	cbz	w0, 25f38 <printf_parse@@Base+0x8b28>
   269a8:	mov	x20, x1
   269ac:	str	x1, [sp, #320]
   269b0:	b	25f38 <printf_parse@@Base+0x8b28>
   269b4:	ldp	x23, x24, [sp, #48]
   269b8:	ldp	x25, x26, [sp, #64]
   269bc:	ldr	x27, [sp, #224]
   269c0:	ldr	x0, [sp, #568]
   269c4:	b	26628 <printf_parse@@Base+0x9218>
   269c8:	cmp	w0, #0xc
   269cc:	ldr	x27, [sp, #224]
   269d0:	b.eq	25ee8 <printf_parse@@Base+0x8ad8>  // b.none
   269d4:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   269d8:	add	x3, x3, #0x980
   269dc:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   269e0:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   269e4:	add	x3, x3, #0x30
   269e8:	add	x1, x1, #0x760
   269ec:	add	x0, x0, #0x7e0
   269f0:	mov	w2, #0x46c                 	// #1132
   269f4:	bl	aea0 <__assert_fail@plt>
   269f8:	cbz	w2, 25f38 <printf_parse@@Base+0x8b28>
   269fc:	mov	x20, x0
   26a00:	str	x0, [sp, #320]
   26a04:	b	25f2c <printf_parse@@Base+0x8b1c>
   26a08:	ldrsb	w0, [x19, #104]
   26a0c:	tbnz	w0, #31, 26a98 <printf_parse@@Base+0x9688>
   26a10:	mov	x0, #0x1                   	// #1
   26a14:	str	x0, [sp, #104]
   26a18:	ldr	w0, [sp, #200]
   26a1c:	ldr	x25, [sp, #96]
   26a20:	cbnz	w0, 25ffc <printf_parse@@Base+0x8bec>
   26a24:	b	262f4 <printf_parse@@Base+0x8ee4>
   26a28:	mov	x20, x0
   26a2c:	b	2607c <printf_parse@@Base+0x8c6c>
   26a30:	mov	w1, #0xc                   	// #12
   26a34:	mov	x0, x19
   26a38:	str	w1, [sp, #132]
   26a3c:	ldp	x23, x24, [sp, #48]
   26a40:	ldp	x25, x26, [sp, #64]
   26a44:	ldr	x27, [sp, #224]
   26a48:	b	26628 <printf_parse@@Base+0x9218>
   26a4c:	ldr	x19, [x20, #88]
   26a50:	b	26948 <printf_parse@@Base+0x9538>
   26a54:	mov	w0, #0xc                   	// #12
   26a58:	str	w0, [sp, #132]
   26a5c:	ldp	x23, x24, [sp, #48]
   26a60:	ldp	x25, x26, [sp, #64]
   26a64:	ldr	x27, [sp, #224]
   26a68:	ldr	x0, [sp, #568]
   26a6c:	b	26628 <printf_parse@@Base+0x9218>
   26a70:	mov	x0, x24
   26a74:	bl	aa50 <free@plt>
   26a78:	b	26434 <printf_parse@@Base+0x9024>
   26a7c:	mov	w3, w0
   26a80:	mov	x1, x20
   26a84:	ldr	x2, [x19, #80]
   26a88:	ldr	x0, [sp, #112]
   26a8c:	bl	20d50 <printf_parse@@Base+0x3940>
   26a90:	mov	x19, x0
   26a94:	b	26948 <printf_parse@@Base+0x9538>
   26a98:	ldr	x1, [x19, #16]
   26a9c:	add	x2, x19, #0x18
   26aa0:	ldr	x3, [sp, #96]
   26aa4:	mov	x0, x28
   26aa8:	bl	22db0 <printf_parse@@Base+0x59a0>
   26aac:	str	x0, [sp, #104]
   26ab0:	cbz	x0, 25ffc <printf_parse@@Base+0x8bec>
   26ab4:	b	26a10 <printf_parse@@Base+0x9600>
   26ab8:	ldr	x0, [sp, #216]
   26abc:	ldrb	w0, [x0, x20]
   26ac0:	b	25ec8 <printf_parse@@Base+0x8ab8>
   26ac4:	add	x20, x19, #0x10
   26ac8:	add	x21, x19, #0x18
   26acc:	mov	x1, x20
   26ad0:	mov	x2, x21
   26ad4:	mov	x0, x28
   26ad8:	mov	x3, #0x0                   	// #0
   26adc:	bl	204b8 <printf_parse@@Base+0x30a8>
   26ae0:	str	w0, [sp, #312]
   26ae4:	cbnz	w0, 26b90 <printf_parse@@Base+0x9780>
   26ae8:	ldrb	w0, [x19, #104]
   26aec:	tbnz	w0, #6, 26af8 <printf_parse@@Base+0x96e8>
   26af0:	mov	w24, #0x0                   	// #0
   26af4:	b	25ff0 <printf_parse@@Base+0x8be0>
   26af8:	mov	x2, x21
   26afc:	mov	x1, x20
   26b00:	mov	x0, x28
   26b04:	bl	24ea8 <printf_parse@@Base+0x7a98>
   26b08:	str	w0, [sp, #312]
   26b0c:	cbnz	w0, 26b90 <printf_parse@@Base+0x9780>
   26b10:	ldrb	w0, [x19, #104]
   26b14:	mov	w24, #0x0                   	// #0
   26b18:	b	25ff0 <printf_parse@@Base+0x8be0>
   26b1c:	ldr	x19, [x20, #96]
   26b20:	b	26948 <printf_parse@@Base+0x9538>
   26b24:	ldr	x27, [sp, #224]
   26b28:	b	26618 <printf_parse@@Base+0x9208>
   26b2c:	mov	w1, #0xc                   	// #12
   26b30:	str	w1, [sp, #132]
   26b34:	b	26628 <printf_parse@@Base+0x9218>
   26b38:	str	w0, [sp, #132]
   26b3c:	ldp	x23, x24, [sp, #48]
   26b40:	ldp	x25, x26, [sp, #64]
   26b44:	ldr	x27, [sp, #224]
   26b48:	ldr	x0, [sp, #568]
   26b4c:	b	26628 <printf_parse@@Base+0x9218>
   26b50:	mov	w1, #0xc                   	// #12
   26b54:	mov	x0, x24
   26b58:	str	w1, [sp, #132]
   26b5c:	ldr	x27, [sp, #224]
   26b60:	bl	aa50 <free@plt>
   26b64:	ldp	x23, x24, [sp, #48]
   26b68:	ldp	x25, x26, [sp, #64]
   26b6c:	ldr	x0, [sp, #568]
   26b70:	b	26628 <printf_parse@@Base+0x9218>
   26b74:	ldr	x0, [sp, #280]
   26b78:	str	x0, [sp, #160]
   26b7c:	b	262dc <printf_parse@@Base+0x8ecc>
   26b80:	mov	w0, #0x1                   	// #1
   26b84:	str	w0, [sp, #132]
   26b88:	ldr	x0, [sp, #568]
   26b8c:	b	26628 <printf_parse@@Base+0x9218>
   26b90:	sxtw	x25, w0
   26b94:	b	262f4 <printf_parse@@Base+0x8ee4>
   26b98:	cmp	x6, x1
   26b9c:	b.eq	26c00 <printf_parse@@Base+0x97f0>  // b.none
   26ba0:	ldr	x1, [x8, x1, lsl #3]
   26ba4:	str	x1, [x0]
   26ba8:	cmp	x6, x3
   26bac:	b.eq	26bf8 <printf_parse@@Base+0x97e8>  // b.none
   26bb0:	ldr	x3, [x8, x3, lsl #3]
   26bb4:	b	267e4 <printf_parse@@Base+0x93d4>
   26bb8:	ldrb	w0, [x27, #176]
   26bbc:	tbz	w0, #0, 26bd0 <printf_parse@@Base+0x97c0>
   26bc0:	ldr	x0, [x27, #152]
   26bc4:	cmp	x0, #0x0
   26bc8:	cset	w0, gt
   26bcc:	str	w0, [sp, #300]
   26bd0:	ldrb	w4, [sp, #300]
   26bd4:	mov	x1, x28
   26bd8:	ldr	x0, [sp, #120]
   26bdc:	ldr	x2, [sp, #136]
   26be0:	ldr	x19, [sp, #288]
   26be4:	mov	x3, x19
   26be8:	bl	246c8 <printf_parse@@Base+0x72b8>
   26bec:	cbnz	w0, 25ee8 <printf_parse@@Base+0x8ad8>
   26bf0:	ldr	x1, [x19]
   26bf4:	b	267b0 <printf_parse@@Base+0x93a0>
   26bf8:	mov	x3, x7
   26bfc:	b	267e4 <printf_parse@@Base+0x93d4>
   26c00:	mov	x1, x7
   26c04:	b	26ba4 <printf_parse@@Base+0x9794>
   26c08:	ldr	x2, [sp, #288]
   26c0c:	mov	x1, #0x0                   	// #0
   26c10:	ldr	x0, [sp, #552]
   26c14:	stp	xzr, x0, [x2]
   26c18:	b	267b0 <printf_parse@@Base+0x93a0>
   26c1c:	nop
   26c20:	stp	x29, x30, [sp, #-240]!
   26c24:	mov	x29, sp
   26c28:	stp	x19, x20, [sp, #16]
   26c2c:	mov	x20, x0
   26c30:	mov	x19, x2
   26c34:	ldr	x0, [x0, #184]
   26c38:	stp	x21, x22, [sp, #32]
   26c3c:	lsl	x2, x2, #3
   26c40:	stp	x23, x24, [sp, #48]
   26c44:	mov	x21, x3
   26c48:	ldr	x22, [x0, x19, lsl #3]
   26c4c:	stp	x27, x28, [sp, #80]
   26c50:	mov	x27, x1
   26c54:	str	x2, [sp, #104]
   26c58:	add	x1, x0, x2
   26c5c:	str	wzr, [sp, #180]
   26c60:	ldr	x0, [x3, #8]
   26c64:	ldr	x23, [x20, #152]
   26c68:	cbz	x22, 27030 <printf_parse@@Base+0x9c20>
   26c6c:	cbnz	x0, 26ca4 <printf_parse@@Base+0x9894>
   26c70:	ldr	x0, [x27]
   26c74:	mov	w2, #0x0                   	// #0
   26c78:	str	xzr, [x0, x19, lsl #3]
   26c7c:	ldr	x0, [x1]
   26c80:	ldrb	w0, [x0, #104]
   26c84:	tbnz	w0, #6, 26dc4 <printf_parse@@Base+0x99b4>
   26c88:	mov	w0, w2
   26c8c:	ldp	x19, x20, [sp, #16]
   26c90:	ldp	x21, x22, [sp, #32]
   26c94:	ldp	x23, x24, [sp, #48]
   26c98:	ldp	x27, x28, [sp, #80]
   26c9c:	ldp	x29, x30, [sp], #240
   26ca0:	ret
   26ca4:	mov	x2, x3
   26ca8:	mov	x1, x23
   26cac:	add	x0, sp, #0xb8
   26cb0:	str	wzr, [sp, #184]
   26cb4:	bl	21040 <printf_parse@@Base+0x3c30>
   26cb8:	ldr	w2, [sp, #184]
   26cbc:	cbnz	w2, 26c88 <printf_parse@@Base+0x9878>
   26cc0:	stp	x25, x26, [sp, #64]
   26cc4:	mov	x26, x0
   26cc8:	ldr	x24, [x26, #56]!
   26ccc:	cbnz	x24, 26d58 <printf_parse@@Base+0x9948>
   26cd0:	ldr	x1, [x21, #8]
   26cd4:	str	x1, [x0, #56]
   26cd8:	str	xzr, [x26, #8]
   26cdc:	lsl	x0, x1, #3
   26ce0:	bl	a5f0 <malloc@plt>
   26ce4:	str	x0, [x26, #16]
   26ce8:	cbz	x0, 26d34 <printf_parse@@Base+0x9924>
   26cec:	ldr	x0, [x21, #8]
   26cf0:	str	wzr, [sp, #184]
   26cf4:	cmp	x0, #0x0
   26cf8:	b.gt	26d0c <printf_parse@@Base+0x98fc>
   26cfc:	b	26d58 <printf_parse@@Base+0x9948>
   26d00:	ldr	x0, [x21, #8]
   26d04:	cmp	x24, x0
   26d08:	b.ge	26d58 <printf_parse@@Base+0x9948>  // b.tcont
   26d0c:	ldr	x2, [x21, #16]
   26d10:	mov	x0, x26
   26d14:	ldr	x1, [x23, #56]
   26d18:	ldr	x3, [x2, x24, lsl #3]
   26d1c:	add	x24, x24, #0x1
   26d20:	add	x3, x3, x3, lsl #1
   26d24:	add	x1, x1, x3, lsl #3
   26d28:	bl	205d8 <printf_parse@@Base+0x31c8>
   26d2c:	str	w0, [sp, #184]
   26d30:	cbz	w0, 26d00 <printf_parse@@Base+0x98f0>
   26d34:	mov	w2, #0xc                   	// #12
   26d38:	mov	w0, w2
   26d3c:	ldp	x19, x20, [sp, #16]
   26d40:	ldp	x21, x22, [sp, #32]
   26d44:	ldp	x23, x24, [sp, #48]
   26d48:	ldp	x25, x26, [sp, #64]
   26d4c:	ldp	x27, x28, [sp, #80]
   26d50:	ldp	x29, x30, [sp], #240
   26d54:	ret
   26d58:	add	x25, x22, #0x8
   26d5c:	mov	x2, x26
   26d60:	mov	x1, x25
   26d64:	mov	x0, x21
   26d68:	bl	22030 <printf_parse@@Base+0x4c20>
   26d6c:	str	w0, [sp, #180]
   26d70:	mov	w2, w0
   26d74:	cbnz	w0, 27118 <printf_parse@@Base+0x9d08>
   26d78:	ldr	x0, [x27, #40]
   26d7c:	cmp	x0, #0x0
   26d80:	cbnz	x0, 27138 <printf_parse@@Base+0x9d28>
   26d84:	ldr	x24, [x27]
   26d88:	mov	x2, x21
   26d8c:	mov	x1, x23
   26d90:	add	x0, sp, #0xb4
   26d94:	bl	21040 <printf_parse@@Base+0x3c30>
   26d98:	ldr	w2, [sp, #180]
   26d9c:	str	x0, [x24, x19, lsl #3]
   26da0:	cbnz	w2, 27118 <printf_parse@@Base+0x9d08>
   26da4:	ldr	x0, [sp, #104]
   26da8:	mov	w2, #0x0                   	// #0
   26dac:	ldr	x1, [x20, #184]
   26db0:	ldp	x25, x26, [sp, #64]
   26db4:	add	x1, x1, x0
   26db8:	ldr	x0, [x1]
   26dbc:	ldrb	w0, [x0, #104]
   26dc0:	tbz	w0, #6, 26c88 <printf_parse@@Base+0x9878>
   26dc4:	ldr	x4, [x20, #200]
   26dc8:	stp	x25, x26, [sp, #64]
   26dcc:	mov	x26, #0x0                   	// #0
   26dd0:	mov	x2, x4
   26dd4:	b	26df8 <printf_parse@@Base+0x99e8>
   26dd8:	asr	x0, x0, #1
   26ddc:	ldr	x3, [x20, #216]
   26de0:	add	x1, x0, x0, lsl #2
   26de4:	add	x1, x3, x1, lsl #3
   26de8:	ldr	x1, [x1, #8]
   26dec:	cmp	x19, x1
   26df0:	b.gt	270a4 <printf_parse@@Base+0x9c94>
   26df4:	mov	x2, x0
   26df8:	add	x0, x2, x26
   26dfc:	cmp	x2, x26
   26e00:	b.gt	26dd8 <printf_parse@@Base+0x99c8>
   26e04:	cmp	x4, x26
   26e08:	b.le	27098 <printf_parse@@Base+0x9c88>
   26e0c:	add	x1, x26, x26, lsl #2
   26e10:	ldr	x0, [x20, #216]
   26e14:	lsl	x1, x1, #3
   26e18:	str	x1, [sp, #152]
   26e1c:	add	x0, x0, x1
   26e20:	ldr	x0, [x0, #8]
   26e24:	cmp	x19, x0
   26e28:	b.ne	27098 <printf_parse@@Base+0x9c88>  // b.any
   26e2c:	ldr	x0, [x22, #16]
   26e30:	str	xzr, [sp, #184]
   26e34:	add	x22, x22, #0x8
   26e38:	cmp	x0, #0x0
   26e3c:	ldr	x25, [x20, #152]
   26e40:	b.le	27098 <printf_parse@@Base+0x9c88>
   26e44:	add	x0, sp, #0xb8
   26e48:	add	x1, x27, #0x30
   26e4c:	mov	x24, #0x0                   	// #0
   26e50:	str	x0, [sp, #112]
   26e54:	add	x0, sp, #0xd8
   26e58:	str	x1, [sp, #144]
   26e5c:	str	x0, [sp, #168]
   26e60:	b	26e7c <printf_parse@@Base+0x9a6c>
   26e64:	cmp	w0, #0x4
   26e68:	b.eq	26eb0 <printf_parse@@Base+0x9aa0>  // b.none
   26e6c:	ldr	x0, [x22, #8]
   26e70:	add	x24, x24, #0x1
   26e74:	cmp	x24, x0
   26e78:	b.ge	27090 <printf_parse@@Base+0x9c80>  // b.tcont
   26e7c:	ldr	x1, [x22, #16]
   26e80:	ldr	x0, [x25]
   26e84:	ldr	x21, [x1, x24, lsl #3]
   26e88:	ldr	x1, [x27, #16]
   26e8c:	add	x0, x0, x21, lsl #4
   26e90:	cmp	x21, x1
   26e94:	ldrb	w0, [x0, #8]
   26e98:	b.ne	26e64 <printf_parse@@Base+0x9a54>  // b.any
   26e9c:	ldr	x1, [x27, #24]
   26ea0:	cmp	x19, x1
   26ea4:	b.eq	26e6c <printf_parse@@Base+0x9a5c>  // b.none
   26ea8:	cmp	w0, #0x4
   26eac:	b.ne	26e6c <printf_parse@@Base+0x9a5c>  // b.any
   26eb0:	add	x0, x21, x21, lsl #1
   26eb4:	lsl	x1, x21, #3
   26eb8:	ldr	x8, [x20, #216]
   26ebc:	lsl	x0, x0, #3
   26ec0:	stp	x1, x0, [sp, #120]
   26ec4:	add	x0, x27, #0x28
   26ec8:	mov	x23, x26
   26ecc:	ldr	x1, [sp, #152]
   26ed0:	str	x0, [sp, #136]
   26ed4:	add	x0, x27, #0x20
   26ed8:	str	x0, [sp, #160]
   26edc:	add	x28, x8, x1
   26ee0:	b	26ffc <printf_parse@@Base+0x9bec>
   26ee4:	ldr	x0, [x25, #24]
   26ee8:	ldr	x1, [sp, #120]
   26eec:	ldr	x2, [x0, x1]
   26ef0:	ldr	x0, [x27, #24]
   26ef4:	cmp	x6, x0
   26ef8:	b.gt	26fe8 <printf_parse@@Base+0x9bd8>
   26efc:	ldr	x0, [x27]
   26f00:	ldr	x1, [x0, x6, lsl #3]
   26f04:	cbz	x1, 26fe8 <printf_parse@@Base+0x9bd8>
   26f08:	ldr	x0, [x1, #16]
   26f0c:	add	x1, x1, #0x18
   26f10:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   26f14:	cbz	x0, 26fe8 <printf_parse@@Base+0x9bd8>
   26f18:	mov	x5, x2
   26f1c:	mov	x4, x19
   26f20:	ldp	x1, x2, [sp, #136]
   26f24:	mov	x3, x21
   26f28:	mov	x0, x20
   26f2c:	bl	1feb0 <printf_parse@@Base+0x2aa0>
   26f30:	tst	w0, #0xff
   26f34:	b.ne	26fe8 <printf_parse@@Base+0x9bd8>  // b.any
   26f38:	ldr	x0, [sp, #184]
   26f3c:	cbz	x0, 270ac <printf_parse@@Base+0x9c9c>
   26f40:	ldr	x0, [sp, #112]
   26f44:	mov	x1, x23
   26f48:	stp	x21, x19, [sp, #200]
   26f4c:	add	x0, x0, #0x20
   26f50:	bl	1e670 <printf_parse@@Base+0x1260>
   26f54:	tst	w0, #0xff
   26f58:	b.eq	27324 <printf_parse@@Base+0x9f14>  // b.none
   26f5c:	ldp	x3, x1, [sp, #104]
   26f60:	mov	x0, x20
   26f64:	ldr	x2, [sp, #184]
   26f68:	ldr	x28, [x2, x3]
   26f6c:	bl	25730 <printf_parse@@Base+0x8320>
   26f70:	mov	w2, w0
   26f74:	cbnz	w0, 270e0 <printf_parse@@Base+0x9cd0>
   26f78:	ldr	x1, [x27, #8]
   26f7c:	ldr	x2, [sp, #184]
   26f80:	cbz	x1, 26f9c <printf_parse@@Base+0x9b8c>
   26f84:	add	x3, x19, #0x1
   26f88:	mov	x0, x25
   26f8c:	bl	21260 <printf_parse@@Base+0x3e50>
   26f90:	mov	w2, w0
   26f94:	cbnz	w0, 270e0 <printf_parse@@Base+0x9cd0>
   26f98:	ldr	x2, [sp, #184]
   26f9c:	ldp	x0, x7, [sp, #104]
   26fa0:	ldr	x6, [sp, #224]
   26fa4:	str	x28, [x2, x0]
   26fa8:	mov	x2, x23
   26fac:	mov	x0, x6
   26fb0:	add	x8, x7, #0x30
   26fb4:	mov	x1, x8
   26fb8:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   26fbc:	subs	x2, x0, #0x1
   26fc0:	ccmp	x6, x2, #0x4, pl  // pl = nfrst
   26fc4:	b.le	26fdc <printf_parse@@Base+0x9bcc>
   26fc8:	sub	x6, x6, #0x1
   26fcc:	mov	x1, x8
   26fd0:	add	x0, x7, #0x28
   26fd4:	str	x6, [sp, #224]
   26fd8:	bl	1fd68 <printf_parse@@Base+0x2958>
   26fdc:	ldr	x0, [x20, #216]
   26fe0:	add	x8, x23, x23, lsl #2
   26fe4:	add	x28, x0, x8, lsl #3
   26fe8:	ldrb	w0, [x28, #32]
   26fec:	add	x23, x23, #0x1
   26ff0:	add	x8, x28, #0x28
   26ff4:	cbz	w0, 26e6c <printf_parse@@Base+0x9a5c>
   26ff8:	mov	x28, x8
   26ffc:	ldr	x0, [x28]
   27000:	cmp	x21, x0
   27004:	b.ne	26fe8 <printf_parse@@Base+0x9bd8>  // b.any
   27008:	ldp	x1, x0, [x28, #16]
   2700c:	sub	x0, x0, x1
   27010:	add	x6, x19, x0
   27014:	cbnz	x0, 26ee4 <printf_parse@@Base+0x9ad4>
   27018:	ldr	x0, [x25, #40]
   2701c:	ldr	x1, [sp, #128]
   27020:	add	x0, x0, x1
   27024:	ldr	x0, [x0, #16]
   27028:	ldr	x2, [x0]
   2702c:	b	26ef0 <printf_parse@@Base+0x9ae0>
   27030:	ldr	x20, [x27]
   27034:	cbnz	x0, 2705c <printf_parse@@Base+0x9c4c>
   27038:	str	xzr, [x20, x19, lsl #3]
   2703c:	mov	w2, #0x0                   	// #0
   27040:	mov	w0, w2
   27044:	ldp	x19, x20, [sp, #16]
   27048:	ldp	x21, x22, [sp, #32]
   2704c:	ldp	x23, x24, [sp, #48]
   27050:	ldp	x27, x28, [sp, #80]
   27054:	ldp	x29, x30, [sp], #240
   27058:	ret
   2705c:	mov	x2, x3
   27060:	mov	x1, x23
   27064:	add	x0, sp, #0xb4
   27068:	bl	21040 <printf_parse@@Base+0x3c30>
   2706c:	ldr	w2, [sp, #180]
   27070:	str	x0, [x20, x19, lsl #3]
   27074:	mov	w0, w2
   27078:	ldp	x19, x20, [sp, #16]
   2707c:	ldp	x21, x22, [sp, #32]
   27080:	ldp	x23, x24, [sp, #48]
   27084:	ldp	x27, x28, [sp, #80]
   27088:	ldp	x29, x30, [sp], #240
   2708c:	ret
   27090:	ldr	x0, [sp, #184]
   27094:	cbnz	x0, 27350 <printf_parse@@Base+0x9f40>
   27098:	mov	w2, #0x0                   	// #0
   2709c:	ldp	x25, x26, [sp, #64]
   270a0:	b	26c88 <printf_parse@@Base+0x9878>
   270a4:	add	x26, x0, #0x1
   270a8:	b	26df8 <printf_parse@@Base+0x99e8>
   270ac:	ldr	x4, [sp, #112]
   270b0:	ldp	x0, x1, [x27]
   270b4:	ldp	x2, x3, [x27, #16]
   270b8:	stp	x0, x1, [x4]
   270bc:	stp	x2, x3, [x4, #16]
   270c0:	ldp	x2, x3, [x27, #32]
   270c4:	stp	x2, x3, [x4, #32]
   270c8:	ldp	x1, x0, [sp, #160]
   270cc:	ldr	x2, [x27, #48]
   270d0:	str	x2, [x4, #48]
   270d4:	bl	20b50 <printf_parse@@Base+0x3740>
   270d8:	mov	w2, w0
   270dc:	cbz	w0, 26f40 <printf_parse@@Base+0x9b30>
   270e0:	ldr	x0, [sp, #184]
   270e4:	cbz	x0, 27118 <printf_parse@@Base+0x9d08>
   270e8:	ldr	x0, [sp, #232]
   270ec:	str	w2, [sp, #104]
   270f0:	bl	aa50 <free@plt>
   270f4:	ldr	w2, [sp, #104]
   270f8:	ldp	x19, x20, [sp, #16]
   270fc:	mov	w0, w2
   27100:	ldp	x21, x22, [sp, #32]
   27104:	ldp	x23, x24, [sp, #48]
   27108:	ldp	x25, x26, [sp, #64]
   2710c:	ldp	x27, x28, [sp, #80]
   27110:	ldp	x29, x30, [sp], #240
   27114:	ret
   27118:	mov	w0, w2
   2711c:	ldp	x19, x20, [sp, #16]
   27120:	ldp	x21, x22, [sp, #32]
   27124:	ldp	x23, x24, [sp, #48]
   27128:	ldp	x25, x26, [sp, #64]
   2712c:	ldp	x27, x28, [sp, #80]
   27130:	ldp	x29, x30, [sp], #240
   27134:	ret
   27138:	ldr	x0, [x20, #216]
   2713c:	str	x0, [sp, #112]
   27140:	b.le	27218 <printf_parse@@Base+0x9e08>
   27144:	mov	x28, #0x0                   	// #0
   27148:	ldr	x0, [x27, #48]
   2714c:	ldr	x3, [sp, #112]
   27150:	ldr	x0, [x0, x28, lsl #3]
   27154:	add	x0, x0, x0, lsl #2
   27158:	add	x1, x3, x0, lsl #3
   2715c:	ldr	x2, [x1, #16]
   27160:	cmp	x19, x2
   27164:	b.le	27208 <printf_parse@@Base+0x9df8>
   27168:	ldr	x2, [x1, #8]
   2716c:	cmp	x19, x2
   27170:	b.gt	27208 <printf_parse@@Base+0x9df8>
   27174:	ldr	x2, [x3, x0, lsl #3]
   27178:	ldr	x0, [x23]
   2717c:	lsl	x2, x2, #4
   27180:	ldr	x1, [x1, #24]
   27184:	ldr	x24, [x0, x2]
   27188:	cmp	x19, x1
   2718c:	ldr	x6, [x21, #8]
   27190:	b.eq	27220 <printf_parse@@Base+0x9e10>  // b.none
   27194:	cmp	x6, #0x0
   27198:	mov	x26, #0x0                   	// #0
   2719c:	b.gt	271b4 <printf_parse@@Base+0x9da4>
   271a0:	b	27208 <printf_parse@@Base+0x9df8>
   271a4:	add	x26, x26, #0x1
   271a8:	cmp	x26, x6
   271ac:	b.ge	27208 <printf_parse@@Base+0x9df8>  // b.tcont
   271b0:	ldr	x0, [x23]
   271b4:	ldr	x1, [x21, #16]
   271b8:	ldr	x1, [x1, x26, lsl #3]
   271bc:	lsl	x3, x1, #4
   271c0:	add	x2, x0, x3
   271c4:	ldrb	w2, [x2, #8]
   271c8:	sub	w2, w2, #0x8
   271cc:	cmp	w2, #0x1
   271d0:	b.hi	271a4 <printf_parse@@Base+0x9d94>  // b.pmore
   271d4:	ldr	x0, [x0, x3]
   271d8:	cmp	x24, x0
   271dc:	b.ne	271a4 <printf_parse@@Base+0x9d94>  // b.any
   271e0:	mov	x2, x21
   271e4:	mov	x3, x25
   271e8:	mov	x0, x23
   271ec:	bl	221e0 <printf_parse@@Base+0x4dd0>
   271f0:	mov	w2, w0
   271f4:	cbnz	w0, 27118 <printf_parse@@Base+0x9d08>
   271f8:	ldr	x6, [x21, #8]
   271fc:	add	x26, x26, #0x1
   27200:	cmp	x26, x6
   27204:	b.lt	271b0 <printf_parse@@Base+0x9da0>  // b.tstop
   27208:	ldr	x0, [x27, #40]
   2720c:	add	x28, x28, #0x1
   27210:	cmp	x28, x0
   27214:	b.lt	27148 <printf_parse@@Base+0x9d38>  // b.tstop
   27218:	str	wzr, [sp, #180]
   2721c:	b	26d84 <printf_parse@@Base+0x9974>
   27220:	cmp	x6, #0x0
   27224:	b.le	27208 <printf_parse@@Base+0x9df8>
   27228:	ldr	x10, [x21, #16]
   2722c:	mov	x26, #0xffffffffffffffff    	// #-1
   27230:	mov	x1, x26
   27234:	mov	x2, x10
   27238:	add	x11, x10, x6, lsl #3
   2723c:	b	27260 <printf_parse@@Base+0x9e50>
   27240:	cmp	w3, #0x9
   27244:	b.ne	27254 <printf_parse@@Base+0x9e44>  // b.any
   27248:	ldr	x3, [x9]
   2724c:	cmp	x24, x3
   27250:	csel	x26, x26, x4, ne  // ne = any
   27254:	add	x2, x2, #0x8
   27258:	cmp	x11, x2
   2725c:	b.eq	27290 <printf_parse@@Base+0x9e80>  // b.none
   27260:	ldr	x4, [x2]
   27264:	lsl	x5, x4, #4
   27268:	add	x9, x0, x5
   2726c:	ldrb	w3, [x9, #8]
   27270:	cmp	w3, #0x8
   27274:	b.ne	27240 <printf_parse@@Base+0x9e30>  // b.any
   27278:	ldr	x3, [x0, x5]
   2727c:	add	x2, x2, #0x8
   27280:	cmp	x24, x3
   27284:	csel	x1, x1, x4, ne  // ne = any
   27288:	cmp	x11, x2
   2728c:	b.ne	27260 <printf_parse@@Base+0x9e50>  // b.any
   27290:	tbz	x1, #63, 272f4 <printf_parse@@Base+0x9ee4>
   27294:	tbnz	x26, #63, 27208 <printf_parse@@Base+0x9df8>
   27298:	mov	x24, #0x0                   	// #0
   2729c:	nop
   272a0:	ldr	x9, [x10, x24, lsl #3]
   272a4:	mov	x2, x26
   272a8:	ldr	x0, [x23, #56]
   272ac:	add	x8, x9, x9, lsl #1
   272b0:	lsl	x8, x8, #3
   272b4:	add	x0, x0, x8
   272b8:	add	x1, x0, #0x10
   272bc:	ldr	x0, [x0, #8]
   272c0:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   272c4:	cbnz	x0, 272e0 <printf_parse@@Base+0x9ed0>
   272c8:	ldr	x0, [x23, #48]
   272cc:	add	x8, x0, x8
   272d0:	add	x1, x8, #0x10
   272d4:	ldr	x0, [x8, #8]
   272d8:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   272dc:	cbz	x0, 2732c <printf_parse@@Base+0x9f1c>
   272e0:	add	x24, x24, #0x1
   272e4:	cmp	x6, x24
   272e8:	b.le	27208 <printf_parse@@Base+0x9df8>
   272ec:	ldr	x10, [x21, #16]
   272f0:	b	272a0 <printf_parse@@Base+0x9e90>
   272f4:	mov	x2, x21
   272f8:	mov	x3, x25
   272fc:	mov	x0, x23
   27300:	bl	221e0 <printf_parse@@Base+0x4dd0>
   27304:	mov	w2, w0
   27308:	cbnz	w0, 27118 <printf_parse@@Base+0x9d08>
   2730c:	tbnz	x26, #63, 27208 <printf_parse@@Base+0x9df8>
   27310:	ldr	x6, [x21, #8]
   27314:	cmp	x6, #0x0
   27318:	b.le	27208 <printf_parse@@Base+0x9df8>
   2731c:	ldr	x10, [x21, #16]
   27320:	b	27298 <printf_parse@@Base+0x9e88>
   27324:	mov	w2, #0xc                   	// #12
   27328:	b	270e0 <printf_parse@@Base+0x9cd0>
   2732c:	mov	x2, x21
   27330:	mov	x1, x9
   27334:	mov	x3, x25
   27338:	mov	x0, x23
   2733c:	bl	221e0 <printf_parse@@Base+0x4dd0>
   27340:	mov	w2, w0
   27344:	cbnz	w0, 27118 <printf_parse@@Base+0x9d08>
   27348:	ldr	x6, [x21, #8]
   2734c:	b	272e4 <printf_parse@@Base+0x9ed4>
   27350:	mov	w2, #0x0                   	// #0
   27354:	b	270e8 <printf_parse@@Base+0x9cd8>
   27358:	stp	x29, x30, [sp, #-32]!
   2735c:	mov	x9, x0
   27360:	mov	x6, x1
   27364:	mov	x29, sp
   27368:	ldr	w0, [x1, #144]
   2736c:	mov	x10, x2
   27370:	mov	w7, w3
   27374:	mov	x12, x4
   27378:	and	w5, w5, #0xff
   2737c:	cmp	w0, #0x1
   27380:	ldr	x11, [x1, #72]
   27384:	b.eq	2739c <printf_parse@@Base+0x9f8c>  // b.none
   27388:	mov	x1, x11
   2738c:	mov	x0, x6
   27390:	bl	1fba0 <printf_parse@@Base+0x2790>
   27394:	cmp	w0, #0x1
   27398:	b.gt	273dc <printf_parse@@Base+0x9fcc>
   2739c:	ldrb	w8, [x10, #8]
   273a0:	add	x7, x11, w7, sxtw
   273a4:	str	x7, [x6, #72]
   273a8:	and	w0, w8, #0xfffffffb
   273ac:	cmp	w0, #0x1a
   273b0:	ccmp	w8, #0x1c, #0x4, ne  // ne = any
   273b4:	b.eq	27404 <printf_parse@@Base+0x9ff4>  // b.none
   273b8:	cmp	w5, #0x0
   273bc:	ccmp	w8, #0x16, #0x0, eq  // eq = none
   273c0:	b.eq	27550 <printf_parse@@Base+0xa140>  // b.none
   273c4:	ldrb	w1, [x10]
   273c8:	mov	w0, #0x0                   	// #0
   273cc:	str	wzr, [x9]
   273d0:	strb	w1, [x9, #8]
   273d4:	ldp	x29, x30, [sp], #32
   273d8:	ret
   273dc:	ldr	x1, [x6, #16]
   273e0:	mov	w2, #0x1                   	// #1
   273e4:	str	w2, [x9]
   273e8:	add	x2, x11, w0, sxtw
   273ec:	mov	w0, #0x0                   	// #0
   273f0:	ldr	w1, [x1, x11, lsl #2]
   273f4:	str	w1, [x9, #8]
   273f8:	str	x2, [x6, #72]
   273fc:	ldp	x29, x30, [sp], #32
   27400:	ret
   27404:	ldr	x11, [x6, #104]
   27408:	cmp	x7, x11
   2740c:	b.ge	274b4 <printf_parse@@Base+0xa0a4>  // b.tcont
   27410:	ldrb	w12, [x10]
   27414:	mov	x5, #0x0                   	// #0
   27418:	b	2743c <printf_parse@@Base+0xa02c>
   2741c:	ldr	x0, [x9, #8]
   27420:	strb	w8, [x0, x5]
   27424:	add	x5, x5, #0x1
   27428:	cmp	x5, #0x20
   2742c:	b.eq	274b4 <printf_parse@@Base+0xa0a4>  // b.none
   27430:	ldrb	w8, [x10, #8]
   27434:	ldr	x7, [x6, #72]
   27438:	ldr	x11, [x6, #104]
   2743c:	cmp	w8, #0x1e
   27440:	mov	w13, w5
   27444:	b.eq	274c0 <printf_parse@@Base+0xa0b0>  // b.none
   27448:	ldr	x0, [x6, #8]
   2744c:	add	x1, x7, #0x1
   27450:	str	x1, [x6, #72]
   27454:	ldrb	w8, [x0, x7]
   27458:	cmp	x11, x1
   2745c:	b.le	274b4 <printf_parse@@Base+0xa0a4>
   27460:	cmp	w12, w8
   27464:	b.ne	2741c <printf_parse@@Base+0xa00c>  // b.any
   27468:	ldr	x0, [x6, #8]
   2746c:	ldrb	w0, [x0, x1]
   27470:	cmp	w0, #0x5d
   27474:	b.ne	2741c <printf_parse@@Base+0xa00c>  // b.any
   27478:	ldr	x0, [x9, #8]
   2747c:	add	x1, x1, #0x1
   27480:	str	x1, [x6, #72]
   27484:	strb	wzr, [x0, w13, sxtw]
   27488:	ldrb	w0, [x10, #8]
   2748c:	cmp	w0, #0x1c
   27490:	b.eq	27584 <printf_parse@@Base+0xa174>  // b.none
   27494:	cmp	w0, #0x1e
   27498:	b.eq	27574 <printf_parse@@Base+0xa164>  // b.none
   2749c:	cmp	w0, #0x1a
   274a0:	mov	w0, #0x0                   	// #0
   274a4:	b.ne	273d4 <printf_parse@@Base+0x9fc4>  // b.any
   274a8:	mov	w1, #0x3                   	// #3
   274ac:	str	w1, [x9]
   274b0:	b	273d4 <printf_parse@@Base+0x9fc4>
   274b4:	mov	w0, #0x7                   	// #7
   274b8:	ldp	x29, x30, [sp], #32
   274bc:	ret
   274c0:	ldrb	w0, [x6, #139]
   274c4:	cbz	w0, 27448 <printf_parse@@Base+0xa038>
   274c8:	ldrb	w0, [x6, #140]
   274cc:	cbz	w0, 27534 <printf_parse@@Base+0xa124>
   274d0:	ldr	x0, [x6, #48]
   274d4:	cmp	x7, x0
   274d8:	b.eq	274ec <printf_parse@@Base+0xa0dc>  // b.none
   274dc:	ldr	x0, [x6, #16]
   274e0:	ldr	w0, [x0, x7, lsl #2]
   274e4:	cmn	w0, #0x1
   274e8:	b.eq	27448 <printf_parse@@Base+0xa038>  // b.none
   274ec:	ldr	x1, [x6, #24]
   274f0:	ldr	x0, [x6]
   274f4:	ldr	x2, [x1, x7, lsl #3]
   274f8:	ldr	x1, [x6, #40]
   274fc:	add	x0, x0, x2
   27500:	ldrb	w8, [x0, x1]
   27504:	tbnz	w8, #7, 27448 <printf_parse@@Base+0xa038>
   27508:	ldr	w0, [x6, #144]
   2750c:	mov	x1, #0x1                   	// #1
   27510:	cmp	w0, #0x1
   27514:	b.eq	27528 <printf_parse@@Base+0xa118>  // b.none
   27518:	mov	x1, x7
   2751c:	mov	x0, x6
   27520:	bl	1fba0 <printf_parse@@Base+0x2790>
   27524:	sxtw	x1, w0
   27528:	add	x1, x7, x1
   2752c:	str	x1, [x6, #72]
   27530:	b	27458 <printf_parse@@Base+0xa048>
   27534:	ldr	x0, [x6]
   27538:	add	x1, x7, #0x1
   2753c:	ldr	x2, [x6, #40]
   27540:	add	x0, x0, x7
   27544:	str	x1, [x6, #72]
   27548:	ldrb	w8, [x0, x2]
   2754c:	b	27458 <printf_parse@@Base+0xa048>
   27550:	mov	x2, x12
   27554:	mov	x1, x6
   27558:	add	x0, sp, #0x10
   2755c:	bl	1dff8 <printf_parse@@Base+0xbe8>
   27560:	ldrb	w0, [sp, #24]
   27564:	cmp	w0, #0x15
   27568:	b.eq	273c4 <printf_parse@@Base+0x9fb4>  // b.none
   2756c:	mov	w0, #0xb                   	// #11
   27570:	b	273d4 <printf_parse@@Base+0x9fc4>
   27574:	mov	w1, #0x4                   	// #4
   27578:	mov	w0, #0x0                   	// #0
   2757c:	str	w1, [x9]
   27580:	b	273d4 <printf_parse@@Base+0x9fc4>
   27584:	mov	w1, #0x2                   	// #2
   27588:	mov	w0, #0x0                   	// #0
   2758c:	str	w1, [x9]
   27590:	b	273d4 <printf_parse@@Base+0x9fc4>
   27594:	nop
   27598:	stp	x29, x30, [sp, #-96]!
   2759c:	mov	x29, sp
   275a0:	stp	x19, x20, [sp, #16]
   275a4:	mov	x19, x1
   275a8:	stp	x21, x22, [sp, #32]
   275ac:	ldr	x21, [x1, #72]
   275b0:	stp	x23, x24, [sp, #48]
   275b4:	mov	x23, x0
   275b8:	ldr	x1, [x1, #104]
   275bc:	cmp	x1, x21
   275c0:	b.le	277e8 <printf_parse@@Base+0xa3d8>
   275c4:	ldr	x24, [x19, #8]
   275c8:	mov	x22, x2
   275cc:	ldrb	w1, [x0, #10]
   275d0:	ldr	w0, [x19, #144]
   275d4:	ldrb	w20, [x24, x21]
   275d8:	and	w1, w1, #0xffffff9f
   275dc:	strb	w20, [x23]
   275e0:	cmp	w0, #0x1
   275e4:	strb	w1, [x23, #10]
   275e8:	b.le	2769c <printf_parse@@Base+0xa28c>
   275ec:	ldr	x1, [x19, #48]
   275f0:	cmp	x21, x1
   275f4:	b.eq	27608 <printf_parse@@Base+0xa1f8>  // b.none
   275f8:	ldr	x1, [x19, #16]
   275fc:	ldr	w1, [x1, x21, lsl #2]
   27600:	cmn	w1, #0x1
   27604:	b.eq	27878 <printf_parse@@Base+0xa468>  // b.none
   27608:	cmp	w20, #0x5c
   2760c:	b.eq	276e4 <printf_parse@@Base+0xa2d4>  // b.none
   27610:	ldr	x0, [x19, #16]
   27614:	str	x25, [sp, #64]
   27618:	mov	w1, #0x1                   	// #1
   2761c:	strb	w1, [x23, #8]
   27620:	ldr	w25, [x0, x21, lsl #2]
   27624:	mov	w0, w25
   27628:	bl	ad30 <iswalnum@plt>
   2762c:	cmp	w25, #0x5f
   27630:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   27634:	ldrb	w0, [x23, #10]
   27638:	cset	w1, ne  // ne = any
   2763c:	bfi	w0, w1, #6, #1
   27640:	strb	w0, [x23, #10]
   27644:	ldr	x25, [sp, #64]
   27648:	cmp	w20, #0x2e
   2764c:	b.eq	27bc0 <printf_parse@@Base+0xa7b0>  // b.none
   27650:	b.hi	27714 <printf_parse@@Base+0xa304>  // b.pmore
   27654:	cmp	w20, #0x29
   27658:	b.eq	27ba4 <printf_parse@@Base+0xa794>  // b.none
   2765c:	b.ls	2774c <printf_parse@@Base+0xa33c>  // b.plast
   27660:	cmp	w20, #0x2a
   27664:	b.eq	27bb0 <printf_parse@@Base+0xa7a0>  // b.none
   27668:	cmp	w20, #0x2b
   2766c:	b.ne	27b9c <printf_parse@@Base+0xa78c>  // b.any
   27670:	mov	x1, #0x402                 	// #1026
   27674:	mov	w0, #0x1                   	// #1
   27678:	tst	x22, x1
   2767c:	b.ne	27688 <printf_parse@@Base+0xa278>  // b.any
   27680:	mov	w1, #0x12                  	// #18
   27684:	strb	w1, [x23, #8]
   27688:	ldp	x19, x20, [sp, #16]
   2768c:	ldp	x21, x22, [sp, #32]
   27690:	ldp	x23, x24, [sp, #48]
   27694:	ldp	x29, x30, [sp], #96
   27698:	ret
   2769c:	cmp	w20, #0x5c
   276a0:	b.eq	276e4 <printf_parse@@Base+0xa2d4>  // b.none
   276a4:	bl	a9d0 <__ctype_b_loc@plt>
   276a8:	ldr	x0, [x0]
   276ac:	ubfiz	x2, x20, #1, #8
   276b0:	cmp	w20, #0x5f
   276b4:	ldr	w1, [x23, #8]
   276b8:	ldrh	w0, [x0, x2]
   276bc:	and	w1, w1, #0xffffff00
   276c0:	and	w1, w1, #0xffbfffff
   276c4:	and	w0, w0, #0x8
   276c8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   276cc:	cset	w0, ne  // ne = any
   276d0:	lsl	w0, w0, #22
   276d4:	orr	w0, w0, #0x1
   276d8:	orr	w0, w0, w1
   276dc:	str	w0, [x23, #8]
   276e0:	b	27648 <printf_parse@@Base+0xa238>
   276e4:	ldr	x2, [x19, #88]
   276e8:	add	x1, x21, #0x1
   276ec:	cmp	x1, x2
   276f0:	b.lt	27808 <printf_parse@@Base+0xa3f8>  // b.tstop
   276f4:	mov	w1, #0x24                  	// #36
   276f8:	strb	w1, [x23, #8]
   276fc:	mov	w0, #0x1                   	// #1
   27700:	ldp	x19, x20, [sp, #16]
   27704:	ldp	x21, x22, [sp, #32]
   27708:	ldp	x23, x24, [sp, #48]
   2770c:	ldp	x29, x30, [sp], #96
   27710:	ret
   27714:	cmp	w20, #0x7b
   27718:	b.eq	27b78 <printf_parse@@Base+0xa768>  // b.none
   2771c:	b.ls	27770 <printf_parse@@Base+0xa360>  // b.plast
   27720:	cmp	w20, #0x7c
   27724:	b.eq	27b8c <printf_parse@@Base+0xa77c>  // b.none
   27728:	cmp	w20, #0x7d
   2772c:	b.ne	27b9c <printf_parse@@Base+0xa78c>  // b.any
   27730:	mov	x1, #0x1200                	// #4608
   27734:	mov	w0, #0x1                   	// #1
   27738:	bics	xzr, x1, x22
   2773c:	b.ne	27688 <printf_parse@@Base+0xa278>  // b.any
   27740:	mov	w1, #0x18                  	// #24
   27744:	strb	w1, [x23, #8]
   27748:	b	27688 <printf_parse@@Base+0xa278>
   2774c:	cmp	w20, #0x24
   27750:	b.eq	27b14 <printf_parse@@Base+0xa704>  // b.none
   27754:	cmp	w20, #0x28
   27758:	mov	w0, #0x1                   	// #1
   2775c:	b.ne	277a8 <printf_parse@@Base+0xa398>  // b.any
   27760:	tbz	w22, #13, 27688 <printf_parse@@Base+0xa278>
   27764:	mov	w1, #0x8                   	// #8
   27768:	strb	w1, [x23, #8]
   2776c:	b	27688 <printf_parse@@Base+0xa278>
   27770:	cmp	w20, #0x5b
   27774:	b.eq	27bd0 <printf_parse@@Base+0xa7c0>  // b.none
   27778:	cmp	w20, #0x5e
   2777c:	b.ne	277c4 <printf_parse@@Base+0xa3b4>  // b.any
   27780:	and	x0, x22, #0xfffff8
   27784:	ands	x0, x0, #0xffffffffff80000f
   27788:	ccmp	x21, #0x0, #0x4, eq  // eq = none
   2778c:	b.ne	27934 <printf_parse@@Base+0xa524>  // b.any
   27790:	mov	w1, #0xc                   	// #12
   27794:	mov	w2, #0x10                  	// #16
   27798:	mov	w0, #0x1                   	// #1
   2779c:	str	w2, [x23]
   277a0:	strb	w1, [x23, #8]
   277a4:	b	27688 <printf_parse@@Base+0xa278>
   277a8:	cmp	w20, #0xa
   277ac:	b.ne	27688 <printf_parse@@Base+0xa278>  // b.any
   277b0:	tbz	w22, #11, 27688 <printf_parse@@Base+0xa278>
   277b4:	mov	w1, #0xa                   	// #10
   277b8:	mov	w0, #0x1                   	// #1
   277bc:	strb	w1, [x23, #8]
   277c0:	b	27688 <printf_parse@@Base+0xa278>
   277c4:	cmp	w20, #0x3f
   277c8:	b.ne	27b9c <printf_parse@@Base+0xa78c>  // b.any
   277cc:	mov	x1, #0x402                 	// #1026
   277d0:	mov	w0, #0x1                   	// #1
   277d4:	tst	x22, x1
   277d8:	b.ne	27688 <printf_parse@@Base+0xa278>  // b.any
   277dc:	mov	w1, #0x13                  	// #19
   277e0:	strb	w1, [x23, #8]
   277e4:	b	27688 <printf_parse@@Base+0xa278>
   277e8:	mov	w1, #0x2                   	// #2
   277ec:	strb	w1, [x23, #8]
   277f0:	mov	w0, #0x0                   	// #0
   277f4:	ldp	x19, x20, [sp, #16]
   277f8:	ldp	x21, x22, [sp, #32]
   277fc:	ldp	x23, x24, [sp, #48]
   27800:	ldp	x29, x30, [sp], #96
   27804:	ret
   27808:	ldrb	w2, [x19, #139]
   2780c:	cbnz	w2, 278d4 <printf_parse@@Base+0xa4c4>
   27810:	ldrb	w20, [x24, x1]
   27814:	mov	w2, #0x1                   	// #1
   27818:	strb	w20, [x23]
   2781c:	strb	w2, [x23, #8]
   27820:	cmp	w0, #0x1
   27824:	b.le	2789c <printf_parse@@Base+0xa48c>
   27828:	ldr	x2, [x19, #16]
   2782c:	add	x2, x2, x1, lsl #2
   27830:	ldr	w19, [x2]
   27834:	mov	w0, w19
   27838:	bl	ad30 <iswalnum@plt>
   2783c:	cmp	w19, #0x5f
   27840:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   27844:	ldrb	w0, [x23, #10]
   27848:	cset	w1, ne  // ne = any
   2784c:	bfi	w0, w1, #6, #1
   27850:	strb	w0, [x23, #10]
   27854:	sub	w0, w20, #0x27
   27858:	cmp	w0, #0x56
   2785c:	b.hi	278cc <printf_parse@@Base+0xa4bc>  // b.pmore
   27860:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   27864:	add	x1, x1, #0x8d0
   27868:	ldrh	w0, [x1, w0, uxtw #1]
   2786c:	adr	x1, 27878 <printf_parse@@Base+0xa468>
   27870:	add	x0, x1, w0, sxth #2
   27874:	br	x0
   27878:	ldr	w1, [x23, #8]
   2787c:	mov	w2, #0x1                   	// #1
   27880:	movk	w2, #0x20, lsl #16
   27884:	mov	w0, #0x1                   	// #1
   27888:	and	w1, w1, #0xffffff00
   2788c:	and	w1, w1, #0xffdfffff
   27890:	orr	w1, w1, w2
   27894:	str	w1, [x23, #8]
   27898:	b	27688 <printf_parse@@Base+0xa278>
   2789c:	bl	a9d0 <__ctype_b_loc@plt>
   278a0:	ldr	x0, [x0]
   278a4:	ubfiz	x1, x20, #1, #8
   278a8:	cmp	w20, #0x5f
   278ac:	ldrb	w2, [x23, #10]
   278b0:	ldrh	w0, [x0, x1]
   278b4:	and	w0, w0, #0x8
   278b8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
   278bc:	cset	w0, ne  // ne = any
   278c0:	bfi	w2, w0, #6, #1
   278c4:	strb	w2, [x23, #10]
   278c8:	b	27854 <printf_parse@@Base+0xa444>
   278cc:	mov	w0, #0x2                   	// #2
   278d0:	b	27688 <printf_parse@@Base+0xa278>
   278d4:	cmp	w0, #0x1
   278d8:	b.le	2790c <printf_parse@@Base+0xa4fc>
   278dc:	ldr	x2, [x19, #16]
   278e0:	ldr	w3, [x2, x1, lsl #2]
   278e4:	add	x2, x2, x1, lsl #2
   278e8:	cmn	w3, #0x1
   278ec:	b.eq	27bec <printf_parse@@Base+0xa7dc>  // b.none
   278f0:	ldr	x3, [x19, #48]
   278f4:	add	x21, x21, #0x2
   278f8:	cmp	x3, x21
   278fc:	b.eq	2790c <printf_parse@@Base+0xa4fc>  // b.none
   27900:	ldr	w3, [x2, #4]
   27904:	cmn	w3, #0x1
   27908:	b.eq	27bec <printf_parse@@Base+0xa7dc>  // b.none
   2790c:	ldrb	w3, [x19, #140]
   27910:	ldr	x2, [x19]
   27914:	ldr	x4, [x19, #40]
   27918:	cbz	w3, 27be0 <printf_parse@@Base+0xa7d0>
   2791c:	ldr	x3, [x19, #24]
   27920:	add	x2, x2, x4
   27924:	ldr	x3, [x3, x1, lsl #3]
   27928:	ldrb	w20, [x2, x3]
   2792c:	tbz	w20, #7, 27814 <printf_parse@@Base+0xa404>
   27930:	b	27810 <printf_parse@@Base+0xa400>
   27934:	add	x21, x24, x21
   27938:	tst	x22, #0x800
   2793c:	mov	w0, #0x1                   	// #1
   27940:	ldurb	w1, [x21, #-1]
   27944:	ccmp	w1, #0xa, #0x0, ne  // ne = any
   27948:	b.ne	27688 <printf_parse@@Base+0xa278>  // b.any
   2794c:	b	27790 <printf_parse@@Base+0xa380>
   27950:	mov	w0, #0x2                   	// #2
   27954:	tbnz	w22, #14, 27688 <printf_parse@@Base+0xa278>
   27958:	sub	w1, w20, #0x31
   2795c:	mov	w2, #0x4                   	// #4
   27960:	strb	w2, [x23, #8]
   27964:	sxtw	x1, w1
   27968:	str	x1, [x23]
   2796c:	b	27688 <printf_parse@@Base+0xa278>
   27970:	mov	x0, #0x402                 	// #1026
   27974:	and	x0, x22, x0
   27978:	cmp	x0, #0x2
   2797c:	mov	w0, #0x2                   	// #2
   27980:	b.ne	27688 <printf_parse@@Base+0xa278>  // b.any
   27984:	b	27680 <printf_parse@@Base+0xa270>
   27988:	mov	w0, #0x2                   	// #2
   2798c:	tbnz	w22, #19, 27688 <printf_parse@@Base+0xa278>
   27990:	mov	w1, #0xc                   	// #12
   27994:	mov	w2, #0x9                   	// #9
   27998:	str	w2, [x23]
   2799c:	strb	w1, [x23, #8]
   279a0:	b	27688 <printf_parse@@Base+0xa278>
   279a4:	mov	w0, #0x2                   	// #2
   279a8:	tbnz	w22, #19, 27688 <printf_parse@@Base+0xa278>
   279ac:	mov	w1, #0xc                   	// #12
   279b0:	mov	w2, #0x6                   	// #6
   279b4:	str	w2, [x23]
   279b8:	strb	w1, [x23, #8]
   279bc:	b	27688 <printf_parse@@Base+0xa278>
   279c0:	mov	w0, #0x2                   	// #2
   279c4:	tbnz	w22, #19, 27688 <printf_parse@@Base+0xa278>
   279c8:	mov	w1, #0x20                  	// #32
   279cc:	strb	w1, [x23, #8]
   279d0:	b	27688 <printf_parse@@Base+0xa278>
   279d4:	mov	w0, #0x2                   	// #2
   279d8:	tbnz	w22, #19, 27688 <printf_parse@@Base+0xa278>
   279dc:	mov	w1, #0x22                  	// #34
   279e0:	strb	w1, [x23, #8]
   279e4:	b	27688 <printf_parse@@Base+0xa278>
   279e8:	mov	w0, #0x2                   	// #2
   279ec:	tbnz	w22, #19, 27688 <printf_parse@@Base+0xa278>
   279f0:	mov	w1, #0xc                   	// #12
   279f4:	mov	w2, #0x100                 	// #256
   279f8:	str	w2, [x23]
   279fc:	strb	w1, [x23, #8]
   27a00:	b	27688 <printf_parse@@Base+0xa278>
   27a04:	mov	w0, #0x2                   	// #2
   27a08:	tbnz	w22, #19, 27688 <printf_parse@@Base+0xa278>
   27a0c:	mov	w1, #0xc                   	// #12
   27a10:	mov	w2, #0x40                  	// #64
   27a14:	str	w2, [x23]
   27a18:	strb	w1, [x23, #8]
   27a1c:	b	27688 <printf_parse@@Base+0xa278>
   27a20:	mov	w0, #0x2                   	// #2
   27a24:	tbnz	w22, #19, 27688 <printf_parse@@Base+0xa278>
   27a28:	mov	w1, #0x21                  	// #33
   27a2c:	strb	w1, [x23, #8]
   27a30:	b	27688 <printf_parse@@Base+0xa278>
   27a34:	mov	w0, #0x2                   	// #2
   27a38:	tbnz	w22, #19, 27688 <printf_parse@@Base+0xa278>
   27a3c:	mov	w1, #0x23                  	// #35
   27a40:	strb	w1, [x23, #8]
   27a44:	b	27688 <printf_parse@@Base+0xa278>
   27a48:	mov	w0, #0x2                   	// #2
   27a4c:	tbnz	w22, #19, 27688 <printf_parse@@Base+0xa278>
   27a50:	mov	w1, #0xc                   	// #12
   27a54:	mov	w2, #0x200                 	// #512
   27a58:	str	w2, [x23]
   27a5c:	strb	w1, [x23, #8]
   27a60:	b	27688 <printf_parse@@Base+0xa278>
   27a64:	mov	x0, #0x402                 	// #1026
   27a68:	and	x0, x22, x0
   27a6c:	cmp	x0, #0x2
   27a70:	mov	w0, #0x2                   	// #2
   27a74:	b.ne	27688 <printf_parse@@Base+0xa278>  // b.any
   27a78:	b	277dc <printf_parse@@Base+0xa3cc>
   27a7c:	mov	x1, #0x8400                	// #33792
   27a80:	mov	w0, #0x2                   	// #2
   27a84:	tst	x22, x1
   27a88:	b.ne	27688 <printf_parse@@Base+0xa278>  // b.any
   27a8c:	mov	w1, #0xa                   	// #10
   27a90:	strb	w1, [x23, #8]
   27a94:	b	27688 <printf_parse@@Base+0xa278>
   27a98:	mov	x0, #0x1200                	// #4608
   27a9c:	and	x0, x22, x0
   27aa0:	cmp	x0, #0x200
   27aa4:	mov	w0, #0x2                   	// #2
   27aa8:	b.ne	27688 <printf_parse@@Base+0xa278>  // b.any
   27aac:	nop
   27ab0:	mov	w1, #0x17                  	// #23
   27ab4:	strb	w1, [x23, #8]
   27ab8:	b	27688 <printf_parse@@Base+0xa278>
   27abc:	mov	x0, #0x1200                	// #4608
   27ac0:	and	x0, x22, x0
   27ac4:	cmp	x0, #0x200
   27ac8:	mov	w0, #0x2                   	// #2
   27acc:	b.ne	27688 <printf_parse@@Base+0xa278>  // b.any
   27ad0:	b	27740 <printf_parse@@Base+0xa330>
   27ad4:	mov	w0, #0x2                   	// #2
   27ad8:	tbnz	w22, #13, 27688 <printf_parse@@Base+0xa278>
   27adc:	nop
   27ae0:	mov	w1, #0x9                   	// #9
   27ae4:	strb	w1, [x23, #8]
   27ae8:	b	27688 <printf_parse@@Base+0xa278>
   27aec:	mov	w0, #0x2                   	// #2
   27af0:	tbnz	w22, #13, 27688 <printf_parse@@Base+0xa278>
   27af4:	b	27764 <printf_parse@@Base+0xa354>
   27af8:	mov	w0, #0x2                   	// #2
   27afc:	tbnz	w22, #19, 27688 <printf_parse@@Base+0xa278>
   27b00:	mov	w1, #0xc                   	// #12
   27b04:	mov	w2, #0x80                  	// #128
   27b08:	str	w2, [x23]
   27b0c:	strb	w1, [x23, #8]
   27b10:	b	27688 <printf_parse@@Base+0xa278>
   27b14:	tbnz	w22, #3, 27b60 <printf_parse@@Base+0xa750>
   27b18:	ldr	x0, [x19, #88]
   27b1c:	add	x21, x21, #0x1
   27b20:	cmp	x21, x0
   27b24:	b.eq	27b60 <printf_parse@@Base+0xa750>  // b.none
   27b28:	str	x21, [x19, #72]
   27b2c:	mov	x2, x22
   27b30:	mov	x1, x19
   27b34:	add	x0, sp, #0x50
   27b38:	bl	27598 <printf_parse@@Base+0xa188>
   27b3c:	ldr	x2, [x19, #72]
   27b40:	mov	w0, #0x1                   	// #1
   27b44:	ldrb	w1, [sp, #88]
   27b48:	sub	x2, x2, #0x1
   27b4c:	str	x2, [x19, #72]
   27b50:	sub	w1, w1, #0x9
   27b54:	and	w1, w1, #0xff
   27b58:	cmp	w1, w0
   27b5c:	b.hi	27688 <printf_parse@@Base+0xa278>  // b.pmore
   27b60:	mov	w1, #0xc                   	// #12
   27b64:	mov	w2, #0x20                  	// #32
   27b68:	mov	w0, #0x1                   	// #1
   27b6c:	str	w2, [x23]
   27b70:	strb	w1, [x23, #8]
   27b74:	b	27688 <printf_parse@@Base+0xa278>
   27b78:	mov	x1, #0x1200                	// #4608
   27b7c:	mov	w0, #0x1                   	// #1
   27b80:	bics	xzr, x1, x22
   27b84:	b.ne	27688 <printf_parse@@Base+0xa278>  // b.any
   27b88:	b	27ab0 <printf_parse@@Base+0xa6a0>
   27b8c:	mov	x0, #0x8400                	// #33792
   27b90:	and	x0, x22, x0
   27b94:	cmp	x0, #0x8, lsl #12
   27b98:	b.eq	277b4 <printf_parse@@Base+0xa3a4>  // b.none
   27b9c:	mov	w0, #0x1                   	// #1
   27ba0:	b	27688 <printf_parse@@Base+0xa278>
   27ba4:	mov	w0, #0x1                   	// #1
   27ba8:	tbz	w22, #13, 27688 <printf_parse@@Base+0xa278>
   27bac:	b	27ae0 <printf_parse@@Base+0xa6d0>
   27bb0:	mov	w1, #0xb                   	// #11
   27bb4:	mov	w0, #0x1                   	// #1
   27bb8:	strb	w1, [x23, #8]
   27bbc:	b	27688 <printf_parse@@Base+0xa278>
   27bc0:	mov	w1, #0x5                   	// #5
   27bc4:	mov	w0, #0x1                   	// #1
   27bc8:	strb	w1, [x23, #8]
   27bcc:	b	27688 <printf_parse@@Base+0xa278>
   27bd0:	mov	w1, #0x14                  	// #20
   27bd4:	mov	w0, #0x1                   	// #1
   27bd8:	strb	w1, [x23, #8]
   27bdc:	b	27688 <printf_parse@@Base+0xa278>
   27be0:	add	x2, x2, x1
   27be4:	ldrb	w20, [x2, x4]
   27be8:	b	27814 <printf_parse@@Base+0xa404>
   27bec:	ldrb	w20, [x24, x1]
   27bf0:	mov	w0, #0x1                   	// #1
   27bf4:	strb	w20, [x23]
   27bf8:	strb	w0, [x23, #8]
   27bfc:	b	27830 <printf_parse@@Base+0xa420>
   27c00:	stp	x29, x30, [sp, #-64]!
   27c04:	mov	x29, sp
   27c08:	stp	x19, x20, [sp, #16]
   27c0c:	mov	x20, x0
   27c10:	mov	x19, x1
   27c14:	str	x23, [sp, #48]
   27c18:	mov	x23, x2
   27c1c:	stp	x21, x22, [sp, #32]
   27c20:	mov	x21, #0xffffffffffffffff    	// #-1
   27c24:	mov	x22, #0x8030                	// #32816
   27c28:	mov	x1, x20
   27c2c:	mov	x2, x23
   27c30:	mov	x0, x19
   27c34:	bl	27598 <printf_parse@@Base+0xa188>
   27c38:	ldr	x4, [x20, #72]
   27c3c:	ldrb	w3, [x19, #8]
   27c40:	ldrb	w1, [x19]
   27c44:	add	x0, x4, w0, sxtw
   27c48:	str	x0, [x20, #72]
   27c4c:	cmp	w3, #0x2
   27c50:	b.eq	27ca8 <printf_parse@@Base+0xa898>  // b.none
   27c54:	cmp	w1, #0x2c
   27c58:	ccmp	w3, #0x18, #0x4, ne  // ne = any
   27c5c:	b.eq	27cac <printf_parse@@Base+0xa89c>  // b.none
   27c60:	cmp	w3, #0x1
   27c64:	b.eq	27c70 <printf_parse@@Base+0xa860>  // b.none
   27c68:	mov	x21, #0xfffffffffffffffe    	// #-2
   27c6c:	b	27c28 <printf_parse@@Base+0xa818>
   27c70:	sub	w0, w1, #0x30
   27c74:	and	w2, w0, #0xff
   27c78:	cmp	w2, #0x9
   27c7c:	ccmn	x21, #0x2, #0x4, ls  // ls = plast
   27c80:	b.eq	27c68 <printf_parse@@Base+0xa858>  // b.none
   27c84:	add	x2, x21, x21, lsl #2
   27c88:	and	x1, x1, #0xff
   27c8c:	cmn	x21, #0x1
   27c90:	b.eq	27cc4 <printf_parse@@Base+0xa8b4>  // b.none
   27c94:	add	x1, x1, x2, lsl #1
   27c98:	cmp	x1, x22
   27c9c:	csel	x1, x1, x22, le
   27ca0:	sub	x21, x1, #0x30
   27ca4:	b	27c28 <printf_parse@@Base+0xa818>
   27ca8:	mov	x21, #0xfffffffffffffffe    	// #-2
   27cac:	mov	x0, x21
   27cb0:	ldp	x19, x20, [sp, #16]
   27cb4:	ldp	x21, x22, [sp, #32]
   27cb8:	ldr	x23, [sp, #48]
   27cbc:	ldp	x29, x30, [sp], #64
   27cc0:	ret
   27cc4:	sxtw	x21, w0
   27cc8:	b	27c28 <printf_parse@@Base+0xa818>
   27ccc:	nop
   27cd0:	stp	x29, x30, [sp, #-320]!
   27cd4:	mov	x29, sp
   27cd8:	stp	x19, x20, [sp, #16]
   27cdc:	mov	x19, x1
   27ce0:	stp	x21, x22, [sp, #32]
   27ce4:	mov	x22, x2
   27ce8:	ldrb	w2, [x2, #8]
   27cec:	stp	x27, x28, [sp, #80]
   27cf0:	mov	x21, x0
   27cf4:	mov	x28, x3
   27cf8:	str	x5, [sp, #128]
   27cfc:	cmp	w2, #0x13
   27d00:	ldr	x27, [x1]
   27d04:	b.hi	27e44 <printf_parse@@Base+0xaa34>  // b.pmore
   27d08:	cmp	w2, #0x11
   27d0c:	b.hi	286b8 <printf_parse@@Base+0xb2a8>  // b.pmore
   27d10:	cmp	w2, #0x8
   27d14:	b.eq	28738 <printf_parse@@Base+0xb328>  // b.none
   27d18:	b.ls	28100 <printf_parse@@Base+0xacf0>  // b.plast
   27d1c:	cmp	w2, #0xb
   27d20:	b.eq	286b8 <printf_parse@@Base+0xb2a8>  // b.none
   27d24:	cmp	w2, #0xc
   27d28:	b.ne	280e0 <printf_parse@@Base+0xacd0>  // b.any
   27d2c:	stp	x23, x24, [sp, #48]
   27d30:	mov	w0, #0x30f                 	// #783
   27d34:	ldr	w23, [x22]
   27d38:	tst	w23, w0
   27d3c:	b.eq	27d74 <printf_parse@@Base+0xa964>  // b.none
   27d40:	ldrb	w0, [x27, #176]
   27d44:	tbnz	w0, #4, 27d74 <printf_parse@@Base+0xa964>
   27d48:	orr	w0, w0, #0x10
   27d4c:	strb	w0, [x27, #176]
   27d50:	mov	w1, w0
   27d54:	tbnz	w0, #3, 28e7c <printf_parse@@Base+0xba6c>
   27d58:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
   27d5c:	mov	x2, #0x3ff000000000000     	// #287948901175001088
   27d60:	movk	x0, #0x87ff, lsl #16
   27d64:	stp	x2, x0, [x27, #184]
   27d68:	tbz	w1, #2, 28e0c <printf_parse@@Base+0xb9fc>
   27d6c:	stp	xzr, xzr, [x27, #200]
   27d70:	ldr	w23, [x22]
   27d74:	sub	w0, w23, #0x100
   27d78:	add	x24, x27, #0x70
   27d7c:	tst	w0, #0xfffffeff
   27d80:	add	x27, x27, #0x80
   27d84:	b.ne	2884c <printf_parse@@Base+0xb43c>  // b.any
   27d88:	cmp	w23, #0x100
   27d8c:	b.eq	28aec <printf_parse@@Base+0xb6dc>  // b.none
   27d90:	mov	w0, #0x5                   	// #5
   27d94:	str	w0, [x22]
   27d98:	mov	x1, x27
   27d9c:	mov	x4, x22
   27da0:	mov	x0, x24
   27da4:	mov	x3, #0x0                   	// #0
   27da8:	mov	x2, #0x0                   	// #0
   27dac:	bl	20060 <printf_parse@@Base+0x2c50>
   27db0:	mov	x20, x0
   27db4:	mov	w1, #0xa                   	// #10
   27db8:	str	w1, [x22]
   27dbc:	mov	x4, x22
   27dc0:	mov	x1, x27
   27dc4:	mov	x3, #0x0                   	// #0
   27dc8:	mov	x2, #0x0                   	// #0
   27dcc:	mov	x0, x24
   27dd0:	bl	20060 <printf_parse@@Base+0x2c50>
   27dd4:	mov	w5, #0xa                   	// #10
   27dd8:	mov	x19, x0
   27ddc:	mov	x1, x27
   27de0:	mov	x0, x24
   27de4:	mov	x3, x19
   27de8:	add	x4, sp, #0x120
   27dec:	mov	x2, x20
   27df0:	strb	w5, [sp, #296]
   27df4:	bl	20060 <printf_parse@@Base+0x2c50>
   27df8:	str	x0, [sp, #104]
   27dfc:	cmp	x20, #0x0
   27e00:	ccmp	x19, #0x0, #0x4, ne  // ne = any
   27e04:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   27e08:	b.eq	2886c <printf_parse@@Base+0xb45c>  // b.none
   27e0c:	mov	x1, x21
   27e10:	mov	x2, x28
   27e14:	mov	x0, x22
   27e18:	bl	27598 <printf_parse@@Base+0xa188>
   27e1c:	ldr	x1, [x21, #72]
   27e20:	ldp	x23, x24, [sp, #48]
   27e24:	add	x0, x1, w0, sxtw
   27e28:	str	x0, [x21, #72]
   27e2c:	ldp	x19, x20, [sp, #16]
   27e30:	ldp	x21, x22, [sp, #32]
   27e34:	ldp	x27, x28, [sp, #80]
   27e38:	ldr	x0, [sp, #104]
   27e3c:	ldp	x29, x30, [sp], #320
   27e40:	ret
   27e44:	cmp	w2, #0x21
   27e48:	b.hi	282b4 <printf_parse@@Base+0xaea4>  // b.pmore
   27e4c:	cmp	w2, #0x1f
   27e50:	b.hi	287ac <printf_parse@@Base+0xb39c>  // b.pmore
   27e54:	cmp	w2, #0x17
   27e58:	b.eq	286b4 <printf_parse@@Base+0xb2a4>  // b.none
   27e5c:	cmp	w2, #0x18
   27e60:	b.ne	28150 <printf_parse@@Base+0xad40>  // b.any
   27e64:	mov	w0, #0x1                   	// #1
   27e68:	strb	w0, [x22, #8]
   27e6c:	mov	x4, x22
   27e70:	add	x1, x27, #0x80
   27e74:	add	x0, x27, #0x70
   27e78:	mov	x3, #0x0                   	// #0
   27e7c:	mov	x2, #0x0                   	// #0
   27e80:	bl	20060 <printf_parse@@Base+0x2c50>
   27e84:	str	x0, [sp, #104]
   27e88:	cbz	x0, 283fc <printf_parse@@Base+0xafec>
   27e8c:	stp	x23, x24, [sp, #48]
   27e90:	mov	x2, x28
   27e94:	mov	x1, x21
   27e98:	mov	x0, x22
   27e9c:	bl	27598 <printf_parse@@Base+0xa188>
   27ea0:	ldr	x23, [x21, #72]
   27ea4:	ldrb	w1, [x22, #8]
   27ea8:	cmp	w1, #0x12
   27eac:	sub	w2, w1, #0x12
   27eb0:	cset	w19, eq  // eq = none
   27eb4:	add	x23, x23, w0, sxtw
   27eb8:	cmp	w1, #0x17
   27ebc:	str	x23, [x21, #72]
   27ec0:	and	w2, w2, #0xff
   27ec4:	ccmp	w1, #0xb, #0x4, ne  // ne = any
   27ec8:	ccmp	w2, #0x1, #0x0, ne  // ne = any
   27ecc:	b.hi	28cec <printf_parse@@Base+0xb8dc>  // b.pmore
   27ed0:	adrp	x0, 1e000 <printf_parse@@Base+0xbf0>
   27ed4:	add	x0, x0, #0x168
   27ed8:	stp	x25, x26, [sp, #64]
   27edc:	cmp	w1, #0x17
   27ee0:	add	x26, sp, #0x120
   27ee4:	str	x0, [sp, #136]
   27ee8:	ldp	x24, x25, [x22]
   27eec:	b.eq	2807c <printf_parse@@Base+0xac6c>  // b.none
   27ef0:	cmp	w1, #0x13
   27ef4:	mov	x2, x28
   27ef8:	mov	x1, x21
   27efc:	mov	x0, x22
   27f00:	mov	x20, #0xffffffffffffffff    	// #-1
   27f04:	cneg	x20, x20, eq  // eq = none
   27f08:	bl	27598 <printf_parse@@Base+0xa188>
   27f0c:	ldr	x1, [x21, #72]
   27f10:	add	x0, x1, w0, sxtw
   27f14:	str	x0, [x21, #72]
   27f18:	ldr	x0, [sp, #104]
   27f1c:	cbz	x0, 284e4 <printf_parse@@Base+0xb0d4>
   27f20:	ldr	x25, [sp, #104]
   27f24:	cbnz	w19, 28660 <printf_parse@@Base+0xb250>
   27f28:	mov	x19, #0x0                   	// #0
   27f2c:	str	xzr, [sp, #120]
   27f30:	ldrb	w0, [x25, #48]
   27f34:	cmp	w0, #0x11
   27f38:	b.eq	284d0 <printf_parse@@Base+0xb0c0>  // b.none
   27f3c:	cmn	x20, #0x1
   27f40:	mov	x2, x25
   27f44:	cset	w6, eq  // eq = none
   27f48:	add	x23, x27, #0x70
   27f4c:	add	w6, w6, #0xa
   27f50:	add	x24, x27, #0x80
   27f54:	mov	x0, x23
   27f58:	mov	x1, x24
   27f5c:	mov	x4, x26
   27f60:	mov	x3, #0x0                   	// #0
   27f64:	strb	w6, [sp, #296]
   27f68:	bl	20060 <printf_parse@@Base+0x2c50>
   27f6c:	mov	x2, x0
   27f70:	cbz	x0, 284a0 <printf_parse@@Base+0xb090>
   27f74:	add	x19, x19, #0x2
   27f78:	cmp	x19, x20
   27f7c:	b.gt	27ff4 <printf_parse@@Base+0xabe4>
   27f80:	mov	x0, x25
   27f84:	mov	x1, x27
   27f88:	str	x2, [sp, #112]
   27f8c:	bl	20140 <printf_parse@@Base+0x2d30>
   27f90:	ldr	x2, [sp, #112]
   27f94:	mov	w5, #0x10                  	// #16
   27f98:	mov	x25, x0
   27f9c:	mov	x3, x0
   27fa0:	mov	x4, x26
   27fa4:	mov	x1, x24
   27fa8:	mov	x0, x23
   27fac:	strb	w5, [sp, #296]
   27fb0:	bl	20060 <printf_parse@@Base+0x2c50>
   27fb4:	mov	x2, x0
   27fb8:	cmp	x25, #0x0
   27fbc:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   27fc0:	b.eq	284a0 <printf_parse@@Base+0xb090>  // b.none
   27fc4:	mov	w5, #0xa                   	// #10
   27fc8:	mov	x4, x26
   27fcc:	mov	x1, x24
   27fd0:	mov	x0, x23
   27fd4:	mov	x3, #0x0                   	// #0
   27fd8:	strb	w5, [sp, #296]
   27fdc:	bl	20060 <printf_parse@@Base+0x2c50>
   27fe0:	mov	x2, x0
   27fe4:	cbz	x0, 284a0 <printf_parse@@Base+0xb090>
   27fe8:	add	x19, x19, #0x1
   27fec:	cmp	x19, x20
   27ff0:	b.le	27f80 <printf_parse@@Base+0xab70>
   27ff4:	ldr	x0, [sp, #120]
   27ff8:	cbz	x0, 28610 <printf_parse@@Base+0xb200>
   27ffc:	mov	w5, #0x10                  	// #16
   28000:	mov	x3, x2
   28004:	mov	x1, x24
   28008:	mov	x2, x0
   2800c:	mov	x4, x26
   28010:	mov	x0, x23
   28014:	strb	w5, [sp, #296]
   28018:	bl	20060 <printf_parse@@Base+0x2c50>
   2801c:	ldr	x1, [sp, #128]
   28020:	ldr	w1, [x1]
   28024:	cbnz	w1, 280d8 <printf_parse@@Base+0xacc8>
   28028:	str	x0, [sp, #104]
   2802c:	ldrb	w1, [x22, #8]
   28030:	cmp	w1, #0xb
   28034:	cset	w3, eq  // eq = none
   28038:	cmp	w1, #0x17
   2803c:	cset	w2, eq  // eq = none
   28040:	tbz	w28, #24, 28050 <printf_parse@@Base+0xac40>
   28044:	cmp	w3, #0x0
   28048:	ccmp	w2, #0x0, #0x0, eq  // eq = none
   2804c:	b.ne	28618 <printf_parse@@Base+0xb208>  // b.any
   28050:	subs	w0, w1, #0x12
   28054:	cset	w19, eq  // eq = none
   28058:	cmp	w3, #0x0
   2805c:	ccmp	w2, #0x0, #0x0, eq  // eq = none
   28060:	and	w0, w0, #0xff
   28064:	ccmp	w0, #0x1, #0x0, eq  // eq = none
   28068:	b.hi	28688 <printf_parse@@Base+0xb278>  // b.pmore
   2806c:	cmp	w1, #0x17
   28070:	ldp	x24, x25, [x22]
   28074:	ldr	x23, [x21, #72]
   28078:	b.ne	27ef0 <printf_parse@@Base+0xaae0>  // b.any
   2807c:	mov	x2, x28
   28080:	mov	x1, x22
   28084:	mov	x0, x21
   28088:	bl	27c00 <printf_parse@@Base+0xa7f0>
   2808c:	mov	x19, x0
   28090:	cmn	x0, #0x1
   28094:	b.eq	284f8 <printf_parse@@Base+0xb0e8>  // b.none
   28098:	cmn	x0, #0x2
   2809c:	b.eq	280b4 <printf_parse@@Base+0xaca4>  // b.none
   280a0:	ldrb	w0, [x22, #8]
   280a4:	cmp	w0, #0x18
   280a8:	b.eq	285b4 <printf_parse@@Base+0xb1a4>  // b.none
   280ac:	cmp	w0, #0x1
   280b0:	b.eq	285d8 <printf_parse@@Base+0xb1c8>  // b.none
   280b4:	tbz	w28, #21, 28cf4 <printf_parse@@Base+0xb8e4>
   280b8:	str	x23, [x21, #72]
   280bc:	mov	w1, #0x1                   	// #1
   280c0:	stp	x24, x25, [x22]
   280c4:	strb	w1, [x22, #8]
   280c8:	ldr	x1, [sp, #128]
   280cc:	ldr	x0, [sp, #104]
   280d0:	ldr	w1, [x1]
   280d4:	cbz	w1, 28028 <printf_parse@@Base+0xac18>
   280d8:	cbnz	x0, 28028 <printf_parse@@Base+0xac18>
   280dc:	b	285f4 <printf_parse@@Base+0xb1e4>
   280e0:	cmp	w2, #0x9
   280e4:	b.ne	282f4 <printf_parse@@Base+0xaee4>  // b.any
   280e8:	tbnz	w28, #17, 27e64 <printf_parse@@Base+0xaa54>
   280ec:	ldr	x1, [sp, #128]
   280f0:	mov	w0, #0x10                  	// #16
   280f4:	str	xzr, [sp, #104]
   280f8:	str	w0, [x1]
   280fc:	b	27e2c <printf_parse@@Base+0xaa1c>
   28100:	cmp	w2, #0x4
   28104:	b.eq	286d0 <printf_parse@@Base+0xb2c0>  // b.none
   28108:	cmp	w2, #0x5
   2810c:	b.ne	28310 <printf_parse@@Base+0xaf00>  // b.any
   28110:	mov	x4, x22
   28114:	add	x1, x27, #0x80
   28118:	add	x0, x27, #0x70
   2811c:	mov	x3, #0x0                   	// #0
   28120:	mov	x2, #0x0                   	// #0
   28124:	bl	20060 <printf_parse@@Base+0x2c50>
   28128:	str	x0, [sp, #104]
   2812c:	cbz	x0, 283fc <printf_parse@@Base+0xafec>
   28130:	ldr	w0, [x27, #180]
   28134:	stp	x23, x24, [sp, #48]
   28138:	cmp	w0, #0x1
   2813c:	b.le	27e90 <printf_parse@@Base+0xaa80>
   28140:	ldrb	w0, [x27, #176]
   28144:	orr	w0, w0, #0x2
   28148:	strb	w0, [x27, #176]
   2814c:	b	27e90 <printf_parse@@Base+0xaa80>
   28150:	cmp	w2, #0x14
   28154:	b.ne	282f4 <printf_parse@@Base+0xaee4>  // b.any
   28158:	mov	x1, #0x1                   	// #1
   2815c:	mov	x0, #0x20                  	// #32
   28160:	str	xzr, [sp, #200]
   28164:	bl	a770 <calloc@plt>
   28168:	mov	x1, #0x1                   	// #1
   2816c:	mov	x19, x0
   28170:	mov	x0, #0x50                  	// #80
   28174:	bl	a770 <calloc@plt>
   28178:	cmp	x19, #0x0
   2817c:	mov	x20, x0
   28180:	cset	w0, eq  // eq = none
   28184:	cmp	x20, #0x0
   28188:	csinc	w0, w0, wzr, ne  // ne = any
   2818c:	cbnz	w0, 288cc <printf_parse@@Base+0xb4bc>
   28190:	mov	x1, x21
   28194:	mov	x2, x28
   28198:	mov	x0, x22
   2819c:	stp	x25, x26, [sp, #64]
   281a0:	bl	1dff8 <printf_parse@@Base+0xbe8>
   281a4:	ldrb	w1, [x22, #8]
   281a8:	mov	w26, w0
   281ac:	cmp	w1, #0x2
   281b0:	b.eq	28d10 <printf_parse@@Base+0xb900>  // b.none
   281b4:	str	wzr, [sp, #136]
   281b8:	cmp	w1, #0x19
   281bc:	b.eq	28874 <printf_parse@@Base+0xb464>  // b.none
   281c0:	stp	x23, x24, [sp, #48]
   281c4:	cmp	w1, #0x15
   281c8:	b.ne	281d4 <printf_parse@@Base+0xadc4>  // b.any
   281cc:	mov	w0, #0x1                   	// #1
   281d0:	strb	w0, [x22, #8]
   281d4:	add	x0, sp, #0xc8
   281d8:	str	x0, [sp, #144]
   281dc:	add	x0, sp, #0xf0
   281e0:	add	x23, sp, #0x100
   281e4:	add	x25, sp, #0xd0
   281e8:	str	x0, [sp, #160]
   281ec:	add	x0, sp, #0x120
   281f0:	mov	w5, #0x1                   	// #1
   281f4:	mov	w24, #0x3                   	// #3
   281f8:	stp	xzr, xzr, [sp, #112]
   281fc:	str	x0, [sp, #168]
   28200:	add	x0, sp, #0xe0
   28204:	str	x0, [sp, #176]
   28208:	mov	w3, w26
   2820c:	mov	x4, x28
   28210:	mov	x2, x22
   28214:	mov	x1, x21
   28218:	mov	x0, x25
   2821c:	str	w24, [sp, #208]
   28220:	str	x23, [sp, #216]
   28224:	bl	27358 <printf_parse@@Base+0x9f48>
   28228:	cbnz	w0, 28ae0 <printf_parse@@Base+0xb6d0>
   2822c:	mov	x1, x21
   28230:	mov	x2, x28
   28234:	mov	x0, x22
   28238:	bl	1dff8 <printf_parse@@Base+0xbe8>
   2823c:	ldr	w1, [sp, #208]
   28240:	mov	w26, w0
   28244:	sub	w0, w1, #0x2
   28248:	tst	w0, #0xfffffffd
   2824c:	b.eq	28264 <printf_parse@@Base+0xae54>  // b.none
   28250:	ldrb	w0, [x22, #8]
   28254:	cmp	w0, #0x2
   28258:	b.eq	289b4 <printf_parse@@Base+0xb5a4>  // b.none
   2825c:	cmp	w0, #0x16
   28260:	b.eq	28b1c <printf_parse@@Base+0xb70c>  // b.none
   28264:	cmp	w1, #0x2
   28268:	b.eq	28978 <printf_parse@@Base+0xb568>  // b.none
   2826c:	b.hi	288f0 <printf_parse@@Base+0xb4e0>  // b.pmore
   28270:	cbz	w1, 28994 <printf_parse@@Base+0xb584>
   28274:	ldr	x1, [x20, #40]
   28278:	ldr	x2, [sp, #112]
   2827c:	ldr	x0, [x20]
   28280:	cmp	x1, x2
   28284:	b.eq	28dbc <printf_parse@@Base+0xb9ac>  // b.none
   28288:	add	x2, x1, #0x1
   2828c:	str	x2, [x20, #40]
   28290:	ldr	w2, [sp, #216]
   28294:	str	w2, [x0, x1, lsl #2]
   28298:	ldrb	w0, [x22, #8]
   2829c:	cmp	w0, #0x2
   282a0:	b.eq	289b4 <printf_parse@@Base+0xb5a4>  // b.none
   282a4:	cmp	w0, #0x15
   282a8:	b.eq	28a10 <printf_parse@@Base+0xb600>  // b.none
   282ac:	mov	w5, #0x0                   	// #0
   282b0:	b	28208 <printf_parse@@Base+0xadf8>
   282b4:	cmp	w2, #0x23
   282b8:	b.hi	28410 <printf_parse@@Base+0xb000>  // b.pmore
   282bc:	ldr	x1, [x0, #120]
   282c0:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   282c4:	adrp	x2, 2e000 <vasnprintf@@Base+0x31e0>
   282c8:	add	x3, x3, #0x628
   282cc:	add	x2, x2, #0x7a8
   282d0:	cset	w4, eq  // eq = none
   282d4:	mov	x0, x27
   282d8:	bl	23838 <printf_parse@@Base+0x6428>
   282dc:	ldr	x1, [sp, #128]
   282e0:	str	x0, [sp, #104]
   282e4:	ldr	w1, [x1]
   282e8:	cmp	w1, #0x0
   282ec:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   282f0:	b.ne	27e8c <printf_parse@@Base+0xaa7c>  // b.any
   282f4:	str	xzr, [sp, #104]
   282f8:	ldp	x19, x20, [sp, #16]
   282fc:	ldp	x21, x22, [sp, #32]
   28300:	ldp	x27, x28, [sp, #80]
   28304:	ldr	x0, [sp, #104]
   28308:	ldp	x29, x30, [sp], #320
   2830c:	ret
   28310:	cmp	w2, #0x1
   28314:	b.ne	282f4 <printf_parse@@Base+0xaee4>  // b.any
   28318:	add	x19, x27, #0x70
   2831c:	add	x20, x27, #0x80
   28320:	mov	x0, x19
   28324:	mov	x1, x20
   28328:	mov	x4, x22
   2832c:	mov	x3, #0x0                   	// #0
   28330:	mov	x2, #0x0                   	// #0
   28334:	bl	20060 <printf_parse@@Base+0x2c50>
   28338:	str	x0, [sp, #104]
   2833c:	cbz	x0, 283fc <printf_parse@@Base+0xafec>
   28340:	ldr	w0, [x27, #180]
   28344:	stp	x23, x24, [sp, #48]
   28348:	cmp	w0, #0x1
   2834c:	b.le	27e90 <printf_parse@@Base+0xaa80>
   28350:	add	x23, sp, #0x120
   28354:	mov	w24, #0x10                  	// #16
   28358:	stp	x25, x26, [sp, #64]
   2835c:	nop
   28360:	ldr	x0, [x21, #72]
   28364:	ldr	x1, [x21, #104]
   28368:	cmp	x1, x0
   2836c:	b.le	28938 <printf_parse@@Base+0xb528>
   28370:	ldr	x1, [x21, #48]
   28374:	cmp	x0, x1
   28378:	b.eq	28938 <printf_parse@@Base+0xb528>  // b.none
   2837c:	ldr	x1, [x21, #16]
   28380:	ldr	w0, [x1, x0, lsl #2]
   28384:	cmn	w0, #0x1
   28388:	b.ne	28938 <printf_parse@@Base+0xb528>  // b.any
   2838c:	mov	x2, x28
   28390:	mov	x1, x21
   28394:	mov	x0, x22
   28398:	bl	27598 <printf_parse@@Base+0xa188>
   2839c:	ldr	x6, [x21, #72]
   283a0:	mov	w5, w0
   283a4:	mov	x4, x22
   283a8:	mov	x1, x20
   283ac:	mov	x3, #0x0                   	// #0
   283b0:	mov	x2, #0x0                   	// #0
   283b4:	add	x5, x6, w5, sxtw
   283b8:	str	x5, [x21, #72]
   283bc:	mov	x0, x19
   283c0:	bl	20060 <printf_parse@@Base+0x2c50>
   283c4:	mov	x25, x0
   283c8:	ldr	x2, [sp, #104]
   283cc:	mov	x3, x0
   283d0:	mov	x4, x23
   283d4:	mov	x1, x20
   283d8:	mov	x0, x19
   283dc:	strb	w24, [sp, #296]
   283e0:	bl	20060 <printf_parse@@Base+0x2c50>
   283e4:	str	x0, [sp, #104]
   283e8:	cmp	x25, #0x0
   283ec:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   283f0:	b.ne	28360 <printf_parse@@Base+0xaf50>  // b.any
   283f4:	ldp	x23, x24, [sp, #48]
   283f8:	ldp	x25, x26, [sp, #64]
   283fc:	mov	w0, #0xc                   	// #12
   28400:	ldr	x1, [sp, #128]
   28404:	str	xzr, [sp, #104]
   28408:	str	w0, [x1]
   2840c:	b	27e2c <printf_parse@@Base+0xaa1c>
   28410:	cmp	w2, #0x24
   28414:	b.ne	282f4 <printf_parse@@Base+0xaee4>  // b.any
   28418:	ldr	x1, [sp, #128]
   2841c:	mov	w0, #0x5                   	// #5
   28420:	str	xzr, [sp, #104]
   28424:	str	w0, [x1]
   28428:	b	27e2c <printf_parse@@Base+0xaa1c>
   2842c:	cmp	x19, #0x0
   28430:	b.le	28f24 <printf_parse@@Base+0xbb14>
   28434:	cmp	x19, #0x1
   28438:	b.eq	2904c <printf_parse@@Base+0xbc3c>  // b.none
   2843c:	ldr	x25, [sp, #104]
   28440:	add	x0, x27, #0x70
   28444:	add	x24, x27, #0x80
   28448:	mov	x23, #0x2                   	// #2
   2844c:	stp	x0, x25, [sp, #112]
   28450:	b	28460 <printf_parse@@Base+0xb050>
   28454:	add	x23, x23, #0x1
   28458:	cmp	x19, x23
   2845c:	b.lt	28668 <printf_parse@@Base+0xb258>  // b.tstop
   28460:	mov	x0, x25
   28464:	mov	x1, x27
   28468:	bl	20140 <printf_parse@@Base+0x2d30>
   2846c:	mov	x25, x0
   28470:	mov	x3, x0
   28474:	mov	w5, #0x10                  	// #16
   28478:	ldp	x0, x2, [sp, #112]
   2847c:	mov	x4, x26
   28480:	mov	x1, x24
   28484:	strb	w5, [sp, #296]
   28488:	bl	20060 <printf_parse@@Base+0x2c50>
   2848c:	str	x0, [sp, #120]
   28490:	cmp	x25, #0x0
   28494:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   28498:	b.ne	28454 <printf_parse@@Base+0xb044>  // b.any
   2849c:	nop
   284a0:	ldr	x1, [sp, #128]
   284a4:	mov	w0, #0xc                   	// #12
   284a8:	adrp	x19, 1f000 <printf_parse@@Base+0x1bf0>
   284ac:	str	w0, [x1]
   284b0:	ldr	x0, [sp, #104]
   284b4:	add	x1, x19, #0x398
   284b8:	mov	x2, #0x0                   	// #0
   284bc:	str	xzr, [sp, #104]
   284c0:	bl	1e438 <printf_parse@@Base+0x1028>
   284c4:	ldp	x23, x24, [sp, #48]
   284c8:	ldp	x25, x26, [sp, #64]
   284cc:	b	27e2c <printf_parse@@Base+0xaa1c>
   284d0:	ldr	x2, [x25, #40]
   284d4:	mov	x0, x25
   284d8:	ldr	x1, [sp, #136]
   284dc:	bl	1e438 <printf_parse@@Base+0x1028>
   284e0:	b	27f3c <printf_parse@@Base+0xab2c>
   284e4:	ldr	x0, [sp, #128]
   284e8:	ldr	w0, [x0]
   284ec:	cbnz	w0, 285fc <printf_parse@@Base+0xb1ec>
   284f0:	str	xzr, [sp, #104]
   284f4:	b	2802c <printf_parse@@Base+0xac1c>
   284f8:	ldrb	w0, [x22, #8]
   284fc:	cmp	w0, #0x1
   28500:	b.ne	285e8 <printf_parse@@Base+0xb1d8>  // b.any
   28504:	ldrb	w0, [x22]
   28508:	cmp	w0, #0x2c
   2850c:	b.ne	285e8 <printf_parse@@Base+0xb1d8>  // b.any
   28510:	mov	x19, #0x0                   	// #0
   28514:	mov	x2, x28
   28518:	mov	x1, x22
   2851c:	mov	x0, x21
   28520:	bl	27c00 <printf_parse@@Base+0xa7f0>
   28524:	mov	x20, x0
   28528:	cmn	x0, #0x2
   2852c:	b.eq	280b4 <printf_parse@@Base+0xaca4>  // b.none
   28530:	cmp	x19, x0
   28534:	ccmn	x0, #0x1, #0x4, gt
   28538:	b.ne	285e8 <printf_parse@@Base+0xb1d8>  // b.any
   2853c:	ldrb	w0, [x22, #8]
   28540:	cmp	w0, #0x18
   28544:	b.ne	285e8 <printf_parse@@Base+0xb1d8>  // b.any
   28548:	cmn	x20, #0x1
   2854c:	b.ne	285b8 <printf_parse@@Base+0xb1a8>  // b.any
   28550:	mov	x0, #0x7fff                	// #32767
   28554:	cmp	x19, x0
   28558:	cset	x0, gt
   2855c:	cbnz	x0, 285c8 <printf_parse@@Base+0xb1b8>
   28560:	mov	x1, x21
   28564:	mov	x2, x28
   28568:	mov	x0, x22
   2856c:	bl	27598 <printf_parse@@Base+0xa188>
   28570:	ldr	x1, [x21, #72]
   28574:	ldr	x3, [sp, #104]
   28578:	add	x0, x1, w0, sxtw
   2857c:	str	x0, [x21, #72]
   28580:	cbz	x3, 284e4 <printf_parse@@Base+0xb0d4>
   28584:	orr	x0, x19, x20
   28588:	cbnz	x0, 2842c <printf_parse@@Base+0xb01c>
   2858c:	mov	x0, x3
   28590:	adrp	x19, 1f000 <printf_parse@@Base+0x1bf0>
   28594:	mov	x2, #0x0                   	// #0
   28598:	add	x1, x19, #0x398
   2859c:	bl	1e438 <printf_parse@@Base+0x1028>
   285a0:	ldr	x0, [sp, #128]
   285a4:	ldr	w0, [x0]
   285a8:	cbnz	w0, 284b0 <printf_parse@@Base+0xb0a0>
   285ac:	str	xzr, [sp, #104]
   285b0:	b	2802c <printf_parse@@Base+0xac1c>
   285b4:	mov	x20, x19
   285b8:	mov	x0, #0x7fff                	// #32767
   285bc:	cmp	x20, x0
   285c0:	cset	x0, gt
   285c4:	cbz	x0, 28560 <printf_parse@@Base+0xb150>
   285c8:	ldr	x1, [sp, #128]
   285cc:	mov	w0, #0xf                   	// #15
   285d0:	str	w0, [x1]
   285d4:	b	285f4 <printf_parse@@Base+0xb1e4>
   285d8:	ldrb	w0, [x22]
   285dc:	cmp	w0, #0x2c
   285e0:	b.eq	28514 <printf_parse@@Base+0xb104>  // b.none
   285e4:	tbnz	w28, #21, 280b8 <printf_parse@@Base+0xaca8>
   285e8:	ldr	x1, [sp, #128]
   285ec:	mov	w0, #0xa                   	// #10
   285f0:	str	w0, [x1]
   285f4:	ldr	x0, [sp, #104]
   285f8:	cbnz	x0, 29044 <printf_parse@@Base+0xbc34>
   285fc:	ldp	x23, x24, [sp, #48]
   28600:	str	xzr, [sp, #104]
   28604:	ldp	x25, x26, [sp, #64]
   28608:	b	282f8 <printf_parse@@Base+0xaee8>
   2860c:	ldr	x2, [sp, #120]
   28610:	str	x2, [sp, #104]
   28614:	b	2802c <printf_parse@@Base+0xac1c>
   28618:	ldr	x0, [sp, #104]
   2861c:	cbz	x0, 286a8 <printf_parse@@Base+0xb298>
   28620:	adrp	x1, 1f000 <printf_parse@@Base+0x1bf0>
   28624:	mov	x2, #0x0                   	// #0
   28628:	add	x1, x1, #0x398
   2862c:	bl	1e438 <printf_parse@@Base+0x1028>
   28630:	ldp	x23, x24, [sp, #48]
   28634:	ldp	x25, x26, [sp, #64]
   28638:	mov	w0, #0xd                   	// #13
   2863c:	ldr	x1, [sp, #128]
   28640:	str	xzr, [sp, #104]
   28644:	ldp	x19, x20, [sp, #16]
   28648:	str	w0, [x1]
   2864c:	ldp	x21, x22, [sp, #32]
   28650:	ldp	x27, x28, [sp, #80]
   28654:	ldr	x0, [sp, #104]
   28658:	ldp	x29, x30, [sp], #320
   2865c:	ret
   28660:	mov	x19, #0x1                   	// #1
   28664:	str	x25, [sp, #120]
   28668:	cmp	x20, x19
   2866c:	b.eq	2860c <printf_parse@@Base+0xb1fc>  // b.none
   28670:	mov	x0, x25
   28674:	mov	x1, x27
   28678:	bl	20140 <printf_parse@@Base+0x2d30>
   2867c:	mov	x25, x0
   28680:	cbnz	x0, 27f30 <printf_parse@@Base+0xab20>
   28684:	b	284a0 <printf_parse@@Base+0xb090>
   28688:	ldp	x19, x20, [sp, #16]
   2868c:	ldp	x21, x22, [sp, #32]
   28690:	ldp	x23, x24, [sp, #48]
   28694:	ldp	x25, x26, [sp, #64]
   28698:	ldp	x27, x28, [sp, #80]
   2869c:	ldr	x0, [sp, #104]
   286a0:	ldp	x29, x30, [sp], #320
   286a4:	ret
   286a8:	ldp	x23, x24, [sp, #48]
   286ac:	ldp	x25, x26, [sp, #64]
   286b0:	b	28638 <printf_parse@@Base+0xb228>
   286b4:	tbnz	w3, #24, 28638 <printf_parse@@Base+0xb228>
   286b8:	tbnz	w28, #5, 28638 <printf_parse@@Base+0xb228>
   286bc:	tbnz	w28, #4, 289c8 <printf_parse@@Base+0xb5b8>
   286c0:	cmp	w2, #0x9
   286c4:	b.ne	27e64 <printf_parse@@Base+0xaa54>  // b.any
   286c8:	tbnz	w28, #17, 27e64 <printf_parse@@Base+0xaa54>
   286cc:	b	280ec <printf_parse@@Base+0xacdc>
   286d0:	ldr	x2, [x22]
   286d4:	mov	w0, #0x1                   	// #1
   286d8:	ldr	x1, [x27, #168]
   286dc:	lsl	w0, w0, w2
   286e0:	sxtw	x0, w0
   286e4:	tst	x0, x1
   286e8:	b.eq	28d20 <printf_parse@@Base+0xb910>  // b.none
   286ec:	ldr	x1, [x27, #160]
   286f0:	mov	x4, x22
   286f4:	mov	x3, #0x0                   	// #0
   286f8:	mov	x2, #0x0                   	// #0
   286fc:	orr	x0, x1, x0
   28700:	str	x0, [x27, #160]
   28704:	add	x1, x27, #0x80
   28708:	add	x0, x27, #0x70
   2870c:	bl	20060 <printf_parse@@Base+0x2c50>
   28710:	str	x0, [sp, #104]
   28714:	cbz	x0, 283fc <printf_parse@@Base+0xafec>
   28718:	ldr	x1, [x27, #152]
   2871c:	stp	x23, x24, [sp, #48]
   28720:	ldrb	w0, [x27, #176]
   28724:	add	x1, x1, #0x1
   28728:	str	x1, [x27, #152]
   2872c:	orr	w0, w0, #0x2
   28730:	strb	w0, [x27, #176]
   28734:	b	27e90 <printf_parse@@Base+0xaa80>
   28738:	ldr	x20, [x19, #48]
   2873c:	orr	x2, x3, #0x800000
   28740:	mov	x1, x0
   28744:	mov	x0, x22
   28748:	add	x3, x20, #0x1
   2874c:	str	x3, [x19, #48]
   28750:	str	x4, [sp, #104]
   28754:	bl	27598 <printf_parse@@Base+0xa188>
   28758:	ldr	x3, [x21, #72]
   2875c:	mov	x2, #0x0                   	// #0
   28760:	ldrb	w1, [x22, #8]
   28764:	add	x0, x3, w0, sxtw
   28768:	str	x0, [x21, #72]
   2876c:	cmp	w1, #0x9
   28770:	b.ne	287cc <printf_parse@@Base+0xb3bc>  // b.any
   28774:	cmp	x20, #0x8
   28778:	b.ls	28830 <printf_parse@@Base+0xb420>  // b.plast
   2877c:	mov	w5, #0x11                  	// #17
   28780:	add	x4, sp, #0x120
   28784:	add	x1, x27, #0x80
   28788:	add	x0, x27, #0x70
   2878c:	mov	x3, #0x0                   	// #0
   28790:	strb	w5, [sp, #296]
   28794:	bl	20060 <printf_parse@@Base+0x2c50>
   28798:	str	x0, [sp, #104]
   2879c:	cbz	x0, 283fc <printf_parse@@Base+0xafec>
   287a0:	stp	x23, x24, [sp, #48]
   287a4:	str	x20, [x0, #40]
   287a8:	b	27e90 <printf_parse@@Base+0xaa80>
   287ac:	cmp	w2, #0x21
   287b0:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   287b4:	adrp	x2, 2e000 <vasnprintf@@Base+0x31e0>
   287b8:	cset	w4, eq  // eq = none
   287bc:	add	x3, x3, #0x810
   287c0:	add	x2, x2, #0x798
   287c4:	ldr	x1, [x0, #120]
   287c8:	b	282d4 <printf_parse@@Base+0xaec4>
   287cc:	mov	x1, x19
   287d0:	mov	x2, x22
   287d4:	ldr	x4, [sp, #104]
   287d8:	mov	x3, x28
   287dc:	ldr	x19, [sp, #128]
   287e0:	mov	x0, x21
   287e4:	add	x4, x4, #0x1
   287e8:	mov	x5, x19
   287ec:	bl	29208 <printf_parse@@Base+0xbdf8>
   287f0:	ldr	w1, [x19]
   287f4:	mov	x2, x0
   287f8:	cbnz	w1, 282f4 <printf_parse@@Base+0xaee4>
   287fc:	ldrb	w1, [x22, #8]
   28800:	cmp	w1, #0x9
   28804:	b.eq	28774 <printf_parse@@Base+0xb364>  // b.none
   28808:	cbz	x0, 2881c <printf_parse@@Base+0xb40c>
   2880c:	adrp	x1, 1f000 <printf_parse@@Base+0x1bf0>
   28810:	mov	x2, #0x0                   	// #0
   28814:	add	x1, x1, #0x398
   28818:	bl	1e438 <printf_parse@@Base+0x1028>
   2881c:	ldr	x1, [sp, #128]
   28820:	mov	w0, #0x8                   	// #8
   28824:	str	xzr, [sp, #104]
   28828:	str	w0, [x1]
   2882c:	b	282f8 <printf_parse@@Base+0xaee8>
   28830:	mov	w0, #0x1                   	// #1
   28834:	ldr	x1, [x27, #168]
   28838:	lsl	w0, w0, w20
   2883c:	sxtw	x0, w0
   28840:	orr	x0, x1, x0
   28844:	str	x0, [x27, #168]
   28848:	b	2877c <printf_parse@@Base+0xb36c>
   2884c:	mov	x1, x27
   28850:	mov	x0, x24
   28854:	mov	x4, x22
   28858:	mov	x3, #0x0                   	// #0
   2885c:	mov	x2, #0x0                   	// #0
   28860:	bl	20060 <printf_parse@@Base+0x2c50>
   28864:	str	x0, [sp, #104]
   28868:	cbnz	x0, 27e0c <printf_parse@@Base+0xa9fc>
   2886c:	ldp	x23, x24, [sp, #48]
   28870:	b	283fc <printf_parse@@Base+0xafec>
   28874:	ldrb	w0, [x20, #32]
   28878:	orr	w0, w0, #0x1
   2887c:	strb	w0, [x20, #32]
   28880:	tbz	w28, #8, 28890 <printf_parse@@Base+0xb480>
   28884:	ldr	x0, [x19]
   28888:	orr	x0, x0, #0x400
   2888c:	str	x0, [x19]
   28890:	ldr	x3, [x21, #72]
   28894:	mov	x1, x21
   28898:	mov	x2, x28
   2889c:	mov	x0, x22
   288a0:	add	x7, x3, w26, sxtw
   288a4:	str	x7, [x21, #72]
   288a8:	bl	1dff8 <printf_parse@@Base+0xbe8>
   288ac:	mov	w26, w0
   288b0:	ldrb	w1, [x22, #8]
   288b4:	cmp	w1, #0x2
   288b8:	b.eq	28d10 <printf_parse@@Base+0xb900>  // b.none
   288bc:	mov	w0, #0x1                   	// #1
   288c0:	stp	x23, x24, [sp, #48]
   288c4:	str	w0, [sp, #136]
   288c8:	b	281c4 <printf_parse@@Base+0xadb4>
   288cc:	mov	x0, x19
   288d0:	str	xzr, [sp, #104]
   288d4:	bl	aa50 <free@plt>
   288d8:	mov	x0, x20
   288dc:	bl	aa50 <free@plt>
   288e0:	ldr	x1, [sp, #128]
   288e4:	mov	w0, #0xc                   	// #12
   288e8:	str	w0, [x1]
   288ec:	b	27e2c <printf_parse@@Base+0xaa1c>
   288f0:	cmp	w1, #0x3
   288f4:	b.ne	28940 <printf_parse@@Base+0xb530>  // b.any
   288f8:	ldr	x1, [sp, #216]
   288fc:	mov	x0, x19
   28900:	bl	23050 <printf_parse@@Base+0x5c40>
   28904:	ldr	x1, [sp, #128]
   28908:	str	w0, [x1]
   2890c:	cbz	w0, 28298 <printf_parse@@Base+0xae88>
   28910:	ldp	x23, x24, [sp, #48]
   28914:	mov	x0, x19
   28918:	bl	aa50 <free@plt>
   2891c:	mov	x0, x20
   28920:	bl	1f328 <printf_parse@@Base+0x1f18>
   28924:	ldr	x0, [sp, #128]
   28928:	ldr	w0, [x0]
   2892c:	cbnz	w0, 28600 <printf_parse@@Base+0xb1f0>
   28930:	stp	x23, x24, [sp, #48]
   28934:	str	xzr, [sp, #104]
   28938:	ldp	x25, x26, [sp, #64]
   2893c:	b	27e90 <printf_parse@@Base+0xaa80>
   28940:	cmp	w1, #0x4
   28944:	b.ne	29020 <printf_parse@@Base+0xbc10>  // b.any
   28948:	ldr	x0, [x21, #120]
   2894c:	mov	x1, x19
   28950:	ldr	x4, [sp, #144]
   28954:	mov	x6, x28
   28958:	ldr	x5, [sp, #216]
   2895c:	add	x3, x20, #0x48
   28960:	add	x2, x20, #0x18
   28964:	bl	230b0 <printf_parse@@Base+0x5ca0>
   28968:	ldr	x1, [sp, #128]
   2896c:	str	w0, [x1]
   28970:	cbz	w0, 28298 <printf_parse@@Base+0xae88>
   28974:	b	28910 <printf_parse@@Base+0xb500>
   28978:	ldr	x1, [sp, #216]
   2897c:	mov	x0, x19
   28980:	bl	23050 <printf_parse@@Base+0x5c40>
   28984:	ldr	x1, [sp, #128]
   28988:	str	w0, [x1]
   2898c:	cbz	w0, 28298 <printf_parse@@Base+0xae88>
   28990:	b	28910 <printf_parse@@Base+0xb500>
   28994:	ldrb	w1, [sp, #216]
   28998:	mov	x0, #0x1                   	// #1
   2899c:	ubfx	x2, x1, #6, #2
   289a0:	lsl	x1, x0, x1
   289a4:	ldr	x0, [x19, x2, lsl #3]
   289a8:	orr	x0, x0, x1
   289ac:	str	x0, [x19, x2, lsl #3]
   289b0:	b	28298 <printf_parse@@Base+0xae88>
   289b4:	ldr	x1, [sp, #128]
   289b8:	mov	w0, #0x7                   	// #7
   289bc:	ldp	x23, x24, [sp, #48]
   289c0:	str	w0, [x1]
   289c4:	b	28914 <printf_parse@@Base+0xb504>
   289c8:	mov	x2, x28
   289cc:	mov	x1, x21
   289d0:	mov	x0, x22
   289d4:	str	x4, [sp, #104]
   289d8:	bl	27598 <printf_parse@@Base+0xa188>
   289dc:	mov	w6, w0
   289e0:	ldr	x7, [x21, #72]
   289e4:	mov	x3, x28
   289e8:	ldr	x4, [sp, #104]
   289ec:	mov	x2, x22
   289f0:	ldr	x5, [sp, #128]
   289f4:	add	x6, x7, w6, sxtw
   289f8:	str	x6, [x21, #72]
   289fc:	mov	x1, x19
   28a00:	mov	x0, x21
   28a04:	bl	27cd0 <printf_parse@@Base+0xa8c0>
   28a08:	str	x0, [sp, #104]
   28a0c:	b	27e2c <printf_parse@@Base+0xaa1c>
   28a10:	ldr	x0, [x21, #72]
   28a14:	add	x7, x0, w26, sxtw
   28a18:	ldr	w0, [sp, #136]
   28a1c:	str	x7, [x21, #72]
   28a20:	cbz	w0, 28a40 <printf_parse@@Base+0xb630>
   28a24:	mov	x0, #0x0                   	// #0
   28a28:	ldr	x1, [x19, x0, lsl #3]
   28a2c:	mvn	x1, x1
   28a30:	str	x1, [x19, x0, lsl #3]
   28a34:	add	x0, x0, #0x1
   28a38:	cmp	x0, #0x4
   28a3c:	b.ne	28a28 <printf_parse@@Base+0xb618>  // b.any
   28a40:	ldr	w2, [x27, #180]
   28a44:	cmp	w2, #0x1
   28a48:	b.le	28a70 <printf_parse@@Base+0xb660>
   28a4c:	ldr	x3, [x27, #120]
   28a50:	mov	x0, #0x0                   	// #0
   28a54:	ldr	x1, [x19, x0]
   28a58:	ldr	x4, [x3, x0]
   28a5c:	and	x1, x1, x4
   28a60:	str	x1, [x19, x0]
   28a64:	add	x0, x0, #0x8
   28a68:	cmp	x0, #0x20
   28a6c:	b.ne	28a54 <printf_parse@@Base+0xb644>  // b.any
   28a70:	ldr	x0, [x20, #40]
   28a74:	cbnz	x0, 28d54 <printf_parse@@Base+0xb944>
   28a78:	ldr	x0, [x20, #48]
   28a7c:	cbnz	x0, 28d54 <printf_parse@@Base+0xb944>
   28a80:	ldr	x0, [x20, #56]
   28a84:	cbnz	x0, 28d54 <printf_parse@@Base+0xb944>
   28a88:	ldr	x0, [x20, #64]
   28a8c:	cbnz	x0, 28d54 <printf_parse@@Base+0xb944>
   28a90:	cmp	w2, #0x1
   28a94:	b.le	28aa8 <printf_parse@@Base+0xb698>
   28a98:	ldr	x0, [x20, #72]
   28a9c:	cbnz	x0, 28d54 <printf_parse@@Base+0xb944>
   28aa0:	ldrb	w0, [x20, #32]
   28aa4:	tbnz	w0, #0, 28d54 <printf_parse@@Base+0xb944>
   28aa8:	mov	x0, x20
   28aac:	bl	1f328 <printf_parse@@Base+0x1f18>
   28ab0:	mov	w5, #0x3                   	// #3
   28ab4:	mov	x4, x23
   28ab8:	add	x1, x27, #0x80
   28abc:	add	x0, x27, #0x70
   28ac0:	mov	x3, #0x0                   	// #0
   28ac4:	mov	x2, #0x0                   	// #0
   28ac8:	str	x19, [sp, #256]
   28acc:	strb	w5, [sp, #264]
   28ad0:	bl	20060 <printf_parse@@Base+0x2c50>
   28ad4:	str	x0, [sp, #104]
   28ad8:	cbnz	x0, 28938 <printf_parse@@Base+0xb528>
   28adc:	mov	w0, #0xc                   	// #12
   28ae0:	ldr	x1, [sp, #128]
   28ae4:	str	w0, [x1]
   28ae8:	b	28910 <printf_parse@@Base+0xb500>
   28aec:	mov	w0, #0x6                   	// #6
   28af0:	str	w0, [x22]
   28af4:	mov	x1, x27
   28af8:	mov	x4, x22
   28afc:	mov	x0, x24
   28b00:	mov	x3, #0x0                   	// #0
   28b04:	mov	x2, #0x0                   	// #0
   28b08:	bl	20060 <printf_parse@@Base+0x2c50>
   28b0c:	mov	w1, #0x9                   	// #9
   28b10:	mov	x20, x0
   28b14:	str	w1, [x22]
   28b18:	b	27dbc <printf_parse@@Base+0xa9ac>
   28b1c:	ldr	x3, [x21, #72]
   28b20:	mov	x1, x21
   28b24:	ldr	x7, [sp, #160]
   28b28:	mov	x2, x28
   28b2c:	add	x3, x3, w26, sxtw
   28b30:	str	x3, [x21, #72]
   28b34:	mov	x0, x7
   28b38:	bl	1dff8 <printf_parse@@Base+0xbe8>
   28b3c:	mov	w3, w0
   28b40:	ldrb	w1, [sp, #248]
   28b44:	cmp	w1, #0x2
   28b48:	b.eq	289b4 <printf_parse@@Base+0xb5a4>  // b.none
   28b4c:	cmp	w1, #0x15
   28b50:	b.eq	28d34 <printf_parse@@Base+0xb924>  // b.none
   28b54:	ldp	x6, x0, [sp, #168]
   28b58:	mov	x4, x28
   28b5c:	mov	x2, x7
   28b60:	mov	x1, x21
   28b64:	mov	w5, #0x1                   	// #1
   28b68:	str	w24, [sp, #224]
   28b6c:	str	x6, [sp, #232]
   28b70:	bl	27358 <printf_parse@@Base+0x9f48>
   28b74:	cbnz	w0, 28ae0 <printf_parse@@Base+0xb6d0>
   28b78:	mov	x2, x28
   28b7c:	mov	x1, x21
   28b80:	mov	x0, x22
   28b84:	bl	1dff8 <printf_parse@@Base+0xbe8>
   28b88:	ldr	w1, [x27, #180]
   28b8c:	mov	w26, w0
   28b90:	ldr	w2, [sp, #208]
   28b94:	cmp	w1, #0x2
   28b98:	csel	x1, x20, xzr, ge  // ge = tcont
   28b9c:	str	x1, [sp, #104]
   28ba0:	sub	w0, w2, #0x2
   28ba4:	tst	w0, #0xfffffffd
   28ba8:	b.eq	28f10 <printf_parse@@Base+0xbb00>  // b.none
   28bac:	ldr	w1, [sp, #224]
   28bb0:	sub	w0, w1, #0x2
   28bb4:	tst	w0, #0xfffffffd
   28bb8:	b.eq	28f10 <printf_parse@@Base+0xbb00>  // b.none
   28bbc:	cmp	w2, #0x3
   28bc0:	cset	w0, eq  // eq = none
   28bc4:	str	w0, [sp, #152]
   28bc8:	b.eq	28fc8 <printf_parse@@Base+0xbbb8>  // b.none
   28bcc:	cmp	w1, #0x3
   28bd0:	b.eq	28fa0 <printf_parse@@Base+0xbb90>  // b.none
   28bd4:	cbnz	w2, 28cd0 <printf_parse@@Base+0xb8c0>
   28bd8:	ldrb	w3, [sp, #216]
   28bdc:	ldr	w0, [sp, #152]
   28be0:	cmp	w2, #0x0
   28be4:	csinc	w0, w0, wzr, ne  // ne = any
   28be8:	cbz	w1, 28e88 <printf_parse@@Base+0xba78>
   28bec:	cmp	w1, #0x3
   28bf0:	b.ne	28cdc <printf_parse@@Base+0xb8cc>  // b.any
   28bf4:	ldr	x2, [sp, #232]
   28bf8:	ldrb	w4, [x2]
   28bfc:	cbz	w0, 28e90 <printf_parse@@Base+0xba80>
   28c00:	ldr	x0, [sp, #104]
   28c04:	cbz	x0, 28ef8 <printf_parse@@Base+0xbae8>
   28c08:	mov	w0, w3
   28c0c:	str	w4, [sp, #152]
   28c10:	bl	a8d0 <btowc@plt>
   28c14:	mov	w3, w0
   28c18:	ldr	w1, [sp, #224]
   28c1c:	ldr	w4, [sp, #152]
   28c20:	cmp	w1, #0x0
   28c24:	ccmp	w1, #0x3, #0x4, ne  // ne = any
   28c28:	b.ne	28ce4 <printf_parse@@Base+0xb8d4>  // b.any
   28c2c:	mov	w0, w4
   28c30:	str	w3, [sp, #152]
   28c34:	bl	a8d0 <btowc@plt>
   28c38:	mov	w4, w0
   28c3c:	ldr	w3, [sp, #152]
   28c40:	cmn	w3, #0x1
   28c44:	ccmn	w4, #0x1, #0x4, ne  // ne = any
   28c48:	b.eq	28df8 <printf_parse@@Base+0xb9e8>  // b.none
   28c4c:	tst	x28, #0x10000
   28c50:	ccmp	w4, w3, #0x2, ne  // ne = any
   28c54:	b.cc	28f10 <printf_parse@@Base+0xbb00>  // b.lo, b.ul, b.last
   28c58:	ldr	x1, [sp, #104]
   28c5c:	cbz	x1, 28c8c <printf_parse@@Base+0xb87c>
   28c60:	ldr	x2, [x1, #8]
   28c64:	ldr	x0, [x1, #64]
   28c68:	ldr	x1, [sp, #120]
   28c6c:	cmp	x0, x1
   28c70:	b.eq	28f40 <printf_parse@@Base+0xbb30>  // b.none
   28c74:	ldr	x5, [sp, #104]
   28c78:	ldr	x1, [x5, #16]
   28c7c:	str	w3, [x2, x0, lsl #2]
   28c80:	add	x2, x0, #0x1
   28c84:	str	x2, [x5, #64]
   28c88:	str	w4, [x1, x0, lsl #2]
   28c8c:	mov	x1, #0x0                   	// #0
   28c90:	mov	x6, #0x1                   	// #1
   28c94:	nop
   28c98:	cmp	w1, w3
   28c9c:	ccmp	w1, w4, #0x2, cs  // cs = hs, nlast
   28ca0:	b.hi	28cb8 <printf_parse@@Base+0xb8a8>  // b.pmore
   28ca4:	asr	x5, x1, #6
   28ca8:	lsl	x0, x6, x1
   28cac:	ldr	x2, [x19, x5, lsl #3]
   28cb0:	orr	x0, x2, x0
   28cb4:	str	x0, [x19, x5, lsl #3]
   28cb8:	add	x1, x1, #0x1
   28cbc:	cmp	x1, #0x100
   28cc0:	b.ne	28c98 <printf_parse@@Base+0xb888>  // b.any
   28cc4:	ldr	x0, [sp, #128]
   28cc8:	str	wzr, [x0]
   28ccc:	b	28298 <printf_parse@@Base+0xae88>
   28cd0:	ldrb	w0, [sp, #152]
   28cd4:	mov	w3, #0x0                   	// #0
   28cd8:	cbz	w1, 28e88 <printf_parse@@Base+0xba78>
   28cdc:	cbnz	w0, 28f30 <printf_parse@@Base+0xbb20>
   28ce0:	ldr	w3, [sp, #216]
   28ce4:	ldr	w4, [sp, #232]
   28ce8:	b	28c40 <printf_parse@@Base+0xb830>
   28cec:	ldp	x23, x24, [sp, #48]
   28cf0:	b	27e2c <printf_parse@@Base+0xaa1c>
   28cf4:	ldrb	w0, [x22, #8]
   28cf8:	cmp	w0, #0x2
   28cfc:	b.ne	285e8 <printf_parse@@Base+0xb1d8>  // b.any
   28d00:	ldr	x1, [sp, #128]
   28d04:	mov	w0, #0x9                   	// #9
   28d08:	str	w0, [x1]
   28d0c:	b	285f4 <printf_parse@@Base+0xb1e4>
   28d10:	ldr	x1, [sp, #128]
   28d14:	mov	w0, #0x2                   	// #2
   28d18:	str	w0, [x1]
   28d1c:	b	28914 <printf_parse@@Base+0xb504>
   28d20:	ldr	x1, [sp, #128]
   28d24:	mov	w0, #0x6                   	// #6
   28d28:	str	xzr, [sp, #104]
   28d2c:	str	w0, [x1]
   28d30:	b	27e2c <printf_parse@@Base+0xaa1c>
   28d34:	ldr	x3, [x21, #72]
   28d38:	neg	w0, w26
   28d3c:	mov	w2, #0x1                   	// #1
   28d40:	ldr	w1, [sp, #208]
   28d44:	add	x0, x3, w0, sxtw
   28d48:	str	x0, [x21, #72]
   28d4c:	strb	w2, [x22, #8]
   28d50:	b	28264 <printf_parse@@Base+0xae54>
   28d54:	ldrb	w1, [x27, #176]
   28d58:	mov	w5, #0x6                   	// #6
   28d5c:	add	x24, x27, #0x70
   28d60:	add	x25, x27, #0x80
   28d64:	orr	w1, w1, #0x2
   28d68:	strb	w1, [x27, #176]
   28d6c:	mov	x2, #0x0                   	// #0
   28d70:	mov	x0, x24
   28d74:	mov	x1, x25
   28d78:	mov	x4, x23
   28d7c:	mov	x3, #0x0                   	// #0
   28d80:	str	x20, [sp, #256]
   28d84:	strb	w5, [sp, #264]
   28d88:	bl	20060 <printf_parse@@Base+0x2c50>
   28d8c:	str	x0, [sp, #104]
   28d90:	mov	x2, #0x0                   	// #0
   28d94:	cbz	x0, 28adc <printf_parse@@Base+0xb6cc>
   28d98:	ldr	x0, [x19, x2, lsl #3]
   28d9c:	cbnz	x0, 28ea0 <printf_parse@@Base+0xba90>
   28da0:	add	x2, x2, #0x1
   28da4:	cmp	x2, #0x4
   28da8:	b.ne	28d98 <printf_parse@@Base+0xb988>  // b.any
   28dac:	mov	x0, x19
   28db0:	bl	aa50 <free@plt>
   28db4:	ldp	x25, x26, [sp, #64]
   28db8:	b	27e90 <printf_parse@@Base+0xaa80>
   28dbc:	lsl	x1, x2, #1
   28dc0:	add	x1, x1, #0x1
   28dc4:	str	x1, [sp, #112]
   28dc8:	lsl	x1, x1, #2
   28dcc:	bl	a7e0 <realloc@plt>
   28dd0:	cbz	x0, 28adc <printf_parse@@Base+0xb6cc>
   28dd4:	str	x0, [x20]
   28dd8:	ldr	x1, [x20, #40]
   28ddc:	b	28288 <printf_parse@@Base+0xae78>
   28de0:	ldr	x0, [sp, #232]
   28de4:	stp	w2, w1, [sp, #184]
   28de8:	bl	a340 <strlen@plt>
   28dec:	cmp	x0, #0x1
   28df0:	ldp	w2, w1, [sp, #184]
   28df4:	b.ls	28fe8 <printf_parse@@Base+0xbbd8>  // b.plast
   28df8:	ldr	x1, [sp, #128]
   28dfc:	mov	w0, #0x3                   	// #3
   28e00:	ldp	x23, x24, [sp, #48]
   28e04:	str	w0, [x1]
   28e08:	b	28914 <printf_parse@@Base+0xb504>
   28e0c:	mov	w20, #0x80                  	// #128
   28e10:	mov	w19, #0x2                   	// #2
   28e14:	bl	a9d0 <__ctype_b_loc@plt>
   28e18:	ldr	x5, [x0]
   28e1c:	sxtw	x3, w19
   28e20:	add	x4, x27, #0xb8
   28e24:	mov	x6, #0x1                   	// #1
   28e28:	add	x5, x5, w20, sxtw #1
   28e2c:	mov	x0, #0x0                   	// #0
   28e30:	ldrh	w1, [x5, x0, lsl #1]
   28e34:	add	w2, w20, w0
   28e38:	cmp	w2, #0x5f
   28e3c:	and	w1, w1, #0x8
   28e40:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   28e44:	b.eq	28e58 <printf_parse@@Base+0xba48>  // b.none
   28e48:	ldr	x1, [x4, x3, lsl #3]
   28e4c:	lsl	x2, x6, x0
   28e50:	orr	x1, x1, x2
   28e54:	str	x1, [x4, x3, lsl #3]
   28e58:	add	x0, x0, #0x1
   28e5c:	cmp	x0, #0x40
   28e60:	b.ne	28e30 <printf_parse@@Base+0xba20>  // b.any
   28e64:	add	x3, x3, #0x1
   28e68:	add	w20, w20, #0x40
   28e6c:	cmp	w3, #0x3
   28e70:	add	x5, x5, #0x80
   28e74:	b.le	28e2c <printf_parse@@Base+0xba1c>
   28e78:	b	27d74 <printf_parse@@Base+0xa964>
   28e7c:	mov	w20, #0x0                   	// #0
   28e80:	mov	w19, #0x0                   	// #0
   28e84:	b	28e14 <printf_parse@@Base+0xba04>
   28e88:	ldrb	w4, [sp, #232]
   28e8c:	b	28bfc <printf_parse@@Base+0xb7ec>
   28e90:	ldr	x0, [sp, #104]
   28e94:	ldr	w3, [sp, #216]
   28e98:	cbnz	x0, 28c2c <printf_parse@@Base+0xb81c>
   28e9c:	b	28c40 <printf_parse@@Base+0xb830>
   28ea0:	mov	w5, #0x3                   	// #3
   28ea4:	mov	x2, #0x0                   	// #0
   28ea8:	mov	x4, x23
   28eac:	mov	x1, x25
   28eb0:	mov	x0, x24
   28eb4:	mov	x3, #0x0                   	// #0
   28eb8:	str	x19, [sp, #256]
   28ebc:	strb	w5, [sp, #264]
   28ec0:	bl	20060 <printf_parse@@Base+0x2c50>
   28ec4:	mov	x2, x0
   28ec8:	cbz	x0, 28adc <printf_parse@@Base+0xb6cc>
   28ecc:	ldr	x3, [sp, #104]
   28ed0:	mov	w5, #0xa                   	// #10
   28ed4:	mov	x1, x25
   28ed8:	mov	x0, x24
   28edc:	add	x4, sp, #0x120
   28ee0:	strb	w5, [sp, #296]
   28ee4:	bl	20060 <printf_parse@@Base+0x2c50>
   28ee8:	str	x0, [sp, #104]
   28eec:	cbz	x0, 28adc <printf_parse@@Base+0xb6cc>
   28ef0:	ldp	x25, x26, [sp, #64]
   28ef4:	b	27e90 <printf_parse@@Base+0xaa80>
   28ef8:	cmp	w1, #0x0
   28efc:	ccmp	w1, #0x3, #0x4, ne  // ne = any
   28f00:	b.ne	28ce4 <printf_parse@@Base+0xb8d4>  // b.any
   28f04:	tst	x28, #0x10000
   28f08:	ccmp	w4, w3, #0x2, ne  // ne = any
   28f0c:	b.cs	28c8c <printf_parse@@Base+0xb87c>  // b.hs, b.nlast
   28f10:	ldr	x1, [sp, #128]
   28f14:	mov	w0, #0xb                   	// #11
   28f18:	ldp	x23, x24, [sp, #48]
   28f1c:	str	w0, [x1]
   28f20:	b	28914 <printf_parse@@Base+0xb504>
   28f24:	str	xzr, [sp, #120]
   28f28:	ldr	x25, [sp, #104]
   28f2c:	b	27f30 <printf_parse@@Base+0xab20>
   28f30:	ldr	x0, [sp, #104]
   28f34:	cbz	x0, 28ce4 <printf_parse@@Base+0xb8d4>
   28f38:	mov	w4, #0x0                   	// #0
   28f3c:	b	28c08 <printf_parse@@Base+0xb7f8>
   28f40:	lsl	x1, x1, #1
   28f44:	mov	x0, x2
   28f48:	add	x1, x1, #0x1
   28f4c:	str	x1, [sp, #120]
   28f50:	stp	w4, w3, [sp, #184]
   28f54:	lsl	x1, x1, #2
   28f58:	str	x1, [sp, #152]
   28f5c:	bl	a7e0 <realloc@plt>
   28f60:	mov	x2, x0
   28f64:	ldr	x0, [sp, #104]
   28f68:	ldr	x1, [sp, #152]
   28f6c:	str	x2, [sp, #152]
   28f70:	ldr	x0, [x0, #16]
   28f74:	bl	a7e0 <realloc@plt>
   28f78:	mov	x1, x0
   28f7c:	ldr	x2, [sp, #152]
   28f80:	ldp	w4, w3, [sp, #184]
   28f84:	cmp	x2, #0x0
   28f88:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   28f8c:	b.eq	28ff4 <printf_parse@@Base+0xbbe4>  // b.none
   28f90:	ldr	x5, [sp, #104]
   28f94:	stp	x2, x1, [x5, #8]
   28f98:	ldr	x0, [x5, #64]
   28f9c:	b	28c74 <printf_parse@@Base+0xb864>
   28fa0:	ldr	x0, [sp, #232]
   28fa4:	stp	w2, w1, [sp, #184]
   28fa8:	bl	a340 <strlen@plt>
   28fac:	cmp	x0, #0x1
   28fb0:	b.hi	28df8 <printf_parse@@Base+0xb9e8>  // b.pmore
   28fb4:	ldp	w2, w1, [sp, #184]
   28fb8:	cbz	w2, 28bd8 <printf_parse@@Base+0xb7c8>
   28fbc:	ldrb	w0, [sp, #152]
   28fc0:	mov	w3, #0x0                   	// #0
   28fc4:	b	28bf4 <printf_parse@@Base+0xb7e4>
   28fc8:	ldr	x0, [sp, #216]
   28fcc:	stp	w2, w1, [sp, #184]
   28fd0:	bl	a340 <strlen@plt>
   28fd4:	cmp	x0, #0x1
   28fd8:	ldp	w2, w1, [sp, #184]
   28fdc:	b.hi	28df8 <printf_parse@@Base+0xb9e8>  // b.pmore
   28fe0:	cmp	w1, #0x3
   28fe4:	b.eq	28de0 <printf_parse@@Base+0xb9d0>  // b.none
   28fe8:	ldr	x0, [sp, #216]
   28fec:	ldrb	w3, [x0]
   28ff0:	b	28bdc <printf_parse@@Base+0xb7cc>
   28ff4:	mov	x0, x2
   28ff8:	str	x1, [sp, #104]
   28ffc:	bl	aa50 <free@plt>
   29000:	ldr	x1, [sp, #104]
   29004:	mov	x0, x1
   29008:	bl	aa50 <free@plt>
   2900c:	ldr	x1, [sp, #128]
   29010:	mov	w0, #0xc                   	// #12
   29014:	ldp	x23, x24, [sp, #48]
   29018:	str	w0, [x1]
   2901c:	b	28914 <printf_parse@@Base+0xb504>
   29020:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   29024:	add	x3, x3, #0x980
   29028:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2902c:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   29030:	add	x3, x3, #0x40
   29034:	add	x1, x1, #0x7f8
   29038:	add	x0, x0, #0x808
   2903c:	mov	w2, #0xced                 	// #3309
   29040:	bl	aea0 <__assert_fail@plt>
   29044:	adrp	x19, 1f000 <printf_parse@@Base+0x1bf0>
   29048:	b	284b0 <printf_parse@@Base+0xb0a0>
   2904c:	ldr	x25, [sp, #104]
   29050:	str	x25, [sp, #120]
   29054:	b	28668 <printf_parse@@Base+0xb258>
   29058:	stp	x29, x30, [sp, #-128]!
   2905c:	mov	x29, sp
   29060:	stp	x25, x26, [sp, #64]
   29064:	mov	x26, x5
   29068:	stp	x19, x20, [sp, #16]
   2906c:	mov	x20, x1
   29070:	stp	x21, x22, [sp, #32]
   29074:	mov	x22, x0
   29078:	mov	x21, x4
   2907c:	stp	x23, x24, [sp, #48]
   29080:	mov	x23, x3
   29084:	stp	x27, x28, [sp, #80]
   29088:	mov	x27, x2
   2908c:	ldr	x25, [x1]
   29090:	bl	27cd0 <printf_parse@@Base+0xa8c0>
   29094:	ldr	w1, [x26]
   29098:	cmp	w1, #0x0
   2909c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   290a0:	b.eq	29200 <printf_parse@@Base+0xbdf0>  // b.none
   290a4:	ldrb	w7, [x27, #8]
   290a8:	mov	x28, x0
   290ac:	and	w0, w7, #0xfffffff7
   290b0:	cmp	w0, #0x2
   290b4:	b.eq	2916c <printf_parse@@Base+0xbd5c>  // b.none
   290b8:	add	x0, sp, #0x70
   290bc:	cmp	x21, #0x0
   290c0:	cset	w24, eq  // eq = none
   290c4:	str	x0, [sp, #96]
   290c8:	add	x0, x25, #0x80
   290cc:	add	x25, x25, #0x70
   290d0:	str	x0, [sp, #104]
   290d4:	b	290f0 <printf_parse@@Base+0xbce0>
   290d8:	ldrb	w7, [x27, #8]
   290dc:	cmp	x28, #0x0
   290e0:	csel	x28, x28, x0, ne  // ne = any
   290e4:	and	w0, w7, #0xfffffff7
   290e8:	cmp	w0, #0x2
   290ec:	b.eq	2916c <printf_parse@@Base+0xbd5c>  // b.none
   290f0:	cmp	w24, #0x0
   290f4:	mov	x5, x26
   290f8:	mov	x4, x21
   290fc:	mov	x3, x23
   29100:	mov	x2, x27
   29104:	mov	x1, x20
   29108:	mov	x0, x22
   2910c:	ccmp	w7, #0x9, #0x0, eq  // eq = none
   29110:	b.eq	2916c <printf_parse@@Base+0xbd5c>  // b.none
   29114:	bl	27cd0 <printf_parse@@Base+0xa8c0>
   29118:	mov	x19, x0
   2911c:	ldr	w1, [x26]
   29120:	cmp	w1, #0x0
   29124:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   29128:	b.eq	2918c <printf_parse@@Base+0xbd7c>  // b.none
   2912c:	cmp	x28, #0x0
   29130:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   29134:	b.eq	290d8 <printf_parse@@Base+0xbcc8>  // b.none
   29138:	ldp	x4, x1, [sp, #96]
   2913c:	mov	w5, #0x10                  	// #16
   29140:	mov	x3, x0
   29144:	mov	x2, x28
   29148:	mov	x0, x25
   2914c:	strb	w5, [sp, #120]
   29150:	bl	20060 <printf_parse@@Base+0x2c50>
   29154:	cbz	x0, 291ac <printf_parse@@Base+0xbd9c>
   29158:	ldrb	w7, [x27, #8]
   2915c:	mov	x28, x0
   29160:	and	w0, w7, #0xfffffff7
   29164:	cmp	w0, #0x2
   29168:	b.ne	290f0 <printf_parse@@Base+0xbce0>  // b.any
   2916c:	mov	x0, x28
   29170:	ldp	x19, x20, [sp, #16]
   29174:	ldp	x21, x22, [sp, #32]
   29178:	ldp	x23, x24, [sp, #48]
   2917c:	ldp	x25, x26, [sp, #64]
   29180:	ldp	x27, x28, [sp, #80]
   29184:	ldp	x29, x30, [sp], #128
   29188:	ret
   2918c:	cbz	x28, 29200 <printf_parse@@Base+0xbdf0>
   29190:	mov	x0, x28
   29194:	adrp	x1, 1f000 <printf_parse@@Base+0x1bf0>
   29198:	mov	x2, #0x0                   	// #0
   2919c:	add	x1, x1, #0x398
   291a0:	mov	x28, #0x0                   	// #0
   291a4:	bl	1e438 <printf_parse@@Base+0x1028>
   291a8:	b	2916c <printf_parse@@Base+0xbd5c>
   291ac:	adrp	x20, 1f000 <printf_parse@@Base+0x1bf0>
   291b0:	add	x20, x20, #0x398
   291b4:	mov	x1, x20
   291b8:	mov	x0, x19
   291bc:	mov	x2, #0x0                   	// #0
   291c0:	bl	1e438 <printf_parse@@Base+0x1028>
   291c4:	mov	x1, x20
   291c8:	mov	x0, x28
   291cc:	mov	x2, #0x0                   	// #0
   291d0:	bl	1e438 <printf_parse@@Base+0x1028>
   291d4:	mov	w0, #0xc                   	// #12
   291d8:	str	w0, [x26]
   291dc:	mov	x28, #0x0                   	// #0
   291e0:	mov	x0, x28
   291e4:	ldp	x19, x20, [sp, #16]
   291e8:	ldp	x21, x22, [sp, #32]
   291ec:	ldp	x23, x24, [sp, #48]
   291f0:	ldp	x25, x26, [sp, #64]
   291f4:	ldp	x27, x28, [sp, #80]
   291f8:	ldp	x29, x30, [sp], #128
   291fc:	ret
   29200:	mov	x28, #0x0                   	// #0
   29204:	b	2916c <printf_parse@@Base+0xbd5c>
   29208:	stp	x29, x30, [sp, #-144]!
   2920c:	mov	x29, sp
   29210:	stp	x19, x20, [sp, #16]
   29214:	mov	x20, x5
   29218:	ldr	x19, [x1]
   2921c:	stp	x21, x22, [sp, #32]
   29220:	mov	x22, x1
   29224:	mov	x21, x4
   29228:	stp	x23, x24, [sp, #48]
   2922c:	mov	x23, x3
   29230:	ldr	x6, [x19, #168]
   29234:	stp	x25, x26, [sp, #64]
   29238:	mov	x25, x0
   2923c:	mov	x26, x2
   29240:	stp	x27, x28, [sp, #80]
   29244:	str	x6, [sp, #120]
   29248:	bl	29058 <printf_parse@@Base+0xbc48>
   2924c:	ldr	w1, [x20]
   29250:	cmp	w1, #0x0
   29254:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   29258:	b.eq	29394 <printf_parse@@Base+0xbf84>  // b.none
   2925c:	mov	x27, x0
   29260:	add	x0, sp, #0x80
   29264:	orr	x24, x23, #0x800000
   29268:	str	x0, [sp, #104]
   2926c:	add	x0, x19, #0x80
   29270:	str	x0, [sp, #112]
   29274:	b	292d4 <printf_parse@@Base+0xbec4>
   29278:	cmp	x21, #0x0
   2927c:	ccmp	w10, #0x9, #0x0, ne  // ne = any
   29280:	b.eq	29328 <printf_parse@@Base+0xbf18>  // b.none
   29284:	ldr	x6, [sp, #120]
   29288:	ldr	x28, [x19, #168]
   2928c:	str	x6, [x19, #168]
   29290:	bl	29058 <printf_parse@@Base+0xbc48>
   29294:	mov	x3, x0
   29298:	ldr	w1, [x20]
   2929c:	cmp	w1, #0x0
   292a0:	ccmp	x0, #0x0, #0x0, ne  // ne = any
   292a4:	b.eq	29374 <printf_parse@@Base+0xbf64>  // b.none
   292a8:	ldp	x4, x1, [sp, #104]
   292ac:	mov	w5, #0xa                   	// #10
   292b0:	ldr	x0, [x19, #168]
   292b4:	mov	x2, x27
   292b8:	strb	w5, [sp, #136]
   292bc:	orr	x28, x0, x28
   292c0:	str	x28, [x19, #168]
   292c4:	add	x0, x19, #0x70
   292c8:	bl	20060 <printf_parse@@Base+0x2c50>
   292cc:	mov	x27, x0
   292d0:	cbz	x0, 2934c <printf_parse@@Base+0xbf3c>
   292d4:	ldrb	w3, [x26, #8]
   292d8:	mov	x2, x24
   292dc:	mov	x1, x25
   292e0:	mov	x0, x26
   292e4:	cmp	w3, #0xa
   292e8:	b.ne	29354 <printf_parse@@Base+0xbf44>  // b.any
   292ec:	bl	27598 <printf_parse@@Base+0xa188>
   292f0:	mov	w9, w0
   292f4:	ldr	x11, [x25, #72]
   292f8:	mov	x5, x20
   292fc:	ldrb	w10, [x26, #8]
   29300:	mov	x4, x21
   29304:	mov	x3, x23
   29308:	mov	x2, x26
   2930c:	add	x9, x11, w9, sxtw
   29310:	str	x9, [x25, #72]
   29314:	and	w9, w10, #0xfffffff7
   29318:	mov	x1, x22
   2931c:	mov	x0, x25
   29320:	cmp	w9, #0x2
   29324:	b.ne	29278 <printf_parse@@Base+0xbe68>  // b.any
   29328:	ldp	x4, x1, [sp, #104]
   2932c:	mov	w5, #0xa                   	// #10
   29330:	mov	x2, x27
   29334:	add	x0, x19, #0x70
   29338:	mov	x3, #0x0                   	// #0
   2933c:	strb	w5, [sp, #136]
   29340:	bl	20060 <printf_parse@@Base+0x2c50>
   29344:	mov	x27, x0
   29348:	cbnz	x0, 292d4 <printf_parse@@Base+0xbec4>
   2934c:	mov	w0, #0xc                   	// #12
   29350:	str	w0, [x20]
   29354:	mov	x0, x27
   29358:	ldp	x19, x20, [sp, #16]
   2935c:	ldp	x21, x22, [sp, #32]
   29360:	ldp	x23, x24, [sp, #48]
   29364:	ldp	x25, x26, [sp, #64]
   29368:	ldp	x27, x28, [sp, #80]
   2936c:	ldp	x29, x30, [sp], #144
   29370:	ret
   29374:	cbz	x27, 29394 <printf_parse@@Base+0xbf84>
   29378:	mov	x0, x27
   2937c:	adrp	x1, 1f000 <printf_parse@@Base+0x1bf0>
   29380:	mov	x2, #0x0                   	// #0
   29384:	add	x1, x1, #0x398
   29388:	mov	x27, #0x0                   	// #0
   2938c:	bl	1e438 <printf_parse@@Base+0x1028>
   29390:	b	29354 <printf_parse@@Base+0xbf44>
   29394:	mov	x27, #0x0                   	// #0
   29398:	b	29354 <printf_parse@@Base+0xbf44>
   2939c:	nop
   293a0:	stp	x29, x30, [sp, #-336]!
   293a4:	mov	x29, sp
   293a8:	stp	x19, x20, [sp, #16]
   293ac:	mov	x20, x0
   293b0:	ldrb	w0, [x0, #56]
   293b4:	stp	x25, x26, [sp, #64]
   293b8:	mov	x25, x1
   293bc:	ldp	x19, x1, [x20]
   293c0:	stp	x21, x22, [sp, #32]
   293c4:	mov	x22, x2
   293c8:	stp	x23, x24, [sp, #48]
   293cc:	mov	x23, x3
   293d0:	mov	w3, #0xffffff90            	// #-112
   293d4:	and	w0, w0, w3
   293d8:	stp	xzr, x23, [x20, #16]
   293dc:	cmp	x1, #0x117
   293e0:	str	xzr, [x20, #48]
   293e4:	strb	w0, [x20, #56]
   293e8:	str	wzr, [sp, #140]
   293ec:	b.ls	2a108 <printf_parse@@Base+0xccf8>  // b.plast
   293f0:	mov	x2, #0x118                 	// #280
   293f4:	str	x2, [x20, #16]
   293f8:	mov	x0, x19
   293fc:	mov	w1, #0x0                   	// #0
   29400:	bl	a6f0 <memset@plt>
   29404:	mov	w0, #0xf                   	// #15
   29408:	str	w0, [x19, #128]
   2940c:	mov	x0, #0x5555555555555555    	// #6148914691236517205
   29410:	movk	x0, #0x555, lsl #48
   29414:	cmp	x22, x0
   29418:	b.cs	299e8 <printf_parse@@Base+0xc5d8>  // b.hs, b.nlast
   2941c:	add	x26, x22, #0x1
   29420:	str	x26, [x19, #8]
   29424:	lsl	x0, x26, #4
   29428:	bl	a5f0 <malloc@plt>
   2942c:	str	x0, [x19]
   29430:	cbz	x22, 2a128 <printf_parse@@Base+0xcd18>
   29434:	mov	x1, #0x1                   	// #1
   29438:	lsl	x1, x1, #1
   2943c:	cmp	x22, x1
   29440:	b.cs	29438 <printf_parse@@Base+0xc028>  // b.hs, b.nlast
   29444:	sub	x21, x1, #0x1
   29448:	mov	x0, #0x18                  	// #24
   2944c:	bl	a770 <calloc@plt>
   29450:	str	x0, [x19, #64]
   29454:	str	x21, [x19, #136]
   29458:	bl	aa80 <__ctype_get_mb_cur_max@plt>
   2945c:	str	w0, [x19, #180]
   29460:	mov	w0, #0xe                   	// #14
   29464:	bl	a5c0 <nl_langinfo@plt>
   29468:	ldrb	w1, [x0]
   2946c:	and	w1, w1, #0xffffffdf
   29470:	and	w1, w1, #0xff
   29474:	cmp	w1, #0x55
   29478:	b.ne	294d8 <printf_parse@@Base+0xc0c8>  // b.any
   2947c:	ldrb	w1, [x0, #1]
   29480:	and	w1, w1, #0xffffffdf
   29484:	and	w1, w1, #0xff
   29488:	cmp	w1, #0x54
   2948c:	b.ne	294d8 <printf_parse@@Base+0xc0c8>  // b.any
   29490:	ldrb	w1, [x0, #2]
   29494:	and	w1, w1, #0xffffffdf
   29498:	and	w1, w1, #0xff
   2949c:	cmp	w1, #0x46
   294a0:	b.ne	294d8 <printf_parse@@Base+0xc0c8>  // b.any
   294a4:	ldrb	w1, [x0, #3]
   294a8:	cmp	w1, #0x2d
   294ac:	cset	x1, eq  // eq = none
   294b0:	add	x1, x1, #0x3
   294b4:	add	x2, x0, x1
   294b8:	ldrb	w0, [x0, x1]
   294bc:	cmp	w0, #0x38
   294c0:	b.ne	294d8 <printf_parse@@Base+0xc0c8>  // b.any
   294c4:	ldrb	w0, [x2, #1]
   294c8:	cbnz	w0, 294d8 <printf_parse@@Base+0xc0c8>
   294cc:	ldrb	w0, [x19, #176]
   294d0:	orr	w0, w0, #0x4
   294d4:	strb	w0, [x19, #176]
   294d8:	ldrb	w0, [x19, #176]
   294dc:	ldr	w1, [x19, #180]
   294e0:	and	w2, w0, #0xfffffff7
   294e4:	strb	w2, [x19, #176]
   294e8:	cmp	w1, #0x1
   294ec:	b.le	29500 <printf_parse@@Base+0xc0f0>
   294f0:	tbz	w0, #2, 29a04 <printf_parse@@Base+0xc5f4>
   294f4:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   294f8:	add	x0, x0, #0x980
   294fc:	str	x0, [x19, #120]
   29500:	ldr	x0, [x19]
   29504:	cbz	x0, 299e8 <printf_parse@@Base+0xc5d8>
   29508:	ldr	x0, [x19, #64]
   2950c:	cbz	x0, 299e8 <printf_parse@@Base+0xc5d8>
   29510:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   29514:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   29518:	stp	x27, x28, [sp, #80]
   2951c:	ldr	x0, [x0, #3944]
   29520:	str	wzr, [sp, #140]
   29524:	ldr	x1, [x1, #4040]
   29528:	cmp	x0, #0x0
   2952c:	cset	w0, ne  // ne = any
   29530:	cmp	x1, #0x0
   29534:	cset	w1, ne  // ne = any
   29538:	orr	w0, w0, w1
   2953c:	and	w1, w0, #0xff
   29540:	str	w1, [sp, #116]
   29544:	tbz	w0, #0, 29560 <printf_parse@@Base+0xc150>
   29548:	add	x0, x19, #0xe8
   2954c:	mov	x1, #0x0                   	// #0
   29550:	bl	a840 <pthread_mutex_init@plt>
   29554:	cbnz	w0, 299e0 <printf_parse@@Base+0xc5d0>
   29558:	ldr	w0, [sp, #140]
   2955c:	cbnz	w0, 2a2f8 <printf_parse@@Base+0xcee8>
   29560:	stp	xzr, xzr, [sp, #224]
   29564:	ands	x24, x23, #0x400000
   29568:	cset	w6, ne  // ne = any
   2956c:	stp	xzr, xzr, [sp, #240]
   29570:	add	x21, sp, #0xb8
   29574:	stp	xzr, xzr, [x21, #72]
   29578:	stp	xzr, xzr, [x21, #88]
   2957c:	stp	xzr, xzr, [x21, #104]
   29580:	stp	xzr, xzr, [x21, #120]
   29584:	stp	xzr, xzr, [x21, #136]
   29588:	ldr	x4, [x20, #40]
   2958c:	stp	xzr, xzr, [sp, #192]
   29590:	ldrb	w1, [x19, #176]
   29594:	orr	x28, x4, x24
   29598:	ldr	w2, [x19, #180]
   2959c:	cmp	x28, #0x0
   295a0:	stp	x22, x22, [sp, #264]
   295a4:	ubfx	x5, x1, #2, #1
   295a8:	cset	w3, ne  // ne = any
   295ac:	ubfx	x1, x1, #3, #1
   295b0:	stp	x22, x22, [sp, #280]
   295b4:	str	x4, [sp, #304]
   295b8:	strb	w6, [sp, #320]
   295bc:	strb	w5, [sp, #321]
   295c0:	strb	w1, [sp, #322]
   295c4:	strb	w3, [sp, #323]
   295c8:	str	w2, [sp, #328]
   295cc:	stp	xzr, xzr, [x21, #24]
   295d0:	str	x25, [sp, #184]
   295d4:	cbnz	x22, 299c4 <printf_parse@@Base+0xc5b4>
   295d8:	ldr	x0, [sp, #192]
   295dc:	cmp	w3, #0x0
   295e0:	csel	x25, x0, x25, ne  // ne = any
   295e4:	str	x25, [sp, #192]
   295e8:	cmp	w2, #0x1
   295ec:	cbz	x24, 296b4 <printf_parse@@Base+0xc2a4>
   295f0:	b.le	2a0f8 <printf_parse@@Base+0xcce8>
   295f4:	mov	x0, x21
   295f8:	bl	1eb48 <printf_parse@@Base+0x1738>
   295fc:	cbnz	w0, 29638 <printf_parse@@Base+0xc228>
   29600:	ldr	x0, [sp, #240]
   29604:	cmp	x22, x0
   29608:	b.le	2a18c <printf_parse@@Base+0xcd7c>
   2960c:	ldr	x2, [sp, #232]
   29610:	ldrsw	x0, [x19, #180]
   29614:	ldr	x1, [sp, #248]
   29618:	add	x0, x0, x2
   2961c:	cmp	x1, x0
   29620:	b.gt	2a18c <printf_parse@@Base+0xcd7c>
   29624:	lsl	x1, x1, #1
   29628:	mov	x0, x21
   2962c:	bl	1e558 <printf_parse@@Base+0x1148>
   29630:	cbz	w0, 295f4 <printf_parse@@Base+0xc1e4>
   29634:	nop
   29638:	ldr	x27, [x20]
   2963c:	str	w0, [sp, #140]
   29640:	ldr	x22, [x27, #112]
   29644:	cbz	x22, 29658 <printf_parse@@Base+0xc248>
   29648:	mov	x0, x22
   2964c:	ldr	x22, [x22]
   29650:	bl	aa50 <free@plt>
   29654:	cbnz	x22, 29648 <printf_parse@@Base+0xc238>
   29658:	ldr	x0, [x27, #32]
   2965c:	mov	w1, #0xf                   	// #15
   29660:	stp	xzr, xzr, [x27, #104]
   29664:	str	w1, [x27, #128]
   29668:	bl	aa50 <free@plt>
   2966c:	str	xzr, [x27, #32]
   29670:	mov	x0, x21
   29674:	bl	1f918 <printf_parse@@Base+0x2508>
   29678:	ldr	w0, [sp, #116]
   2967c:	cbz	w0, 29688 <printf_parse@@Base+0xc278>
   29680:	add	x0, x19, #0xe8
   29684:	bl	ac30 <pthread_mutex_destroy@plt>
   29688:	mov	x0, x19
   2968c:	bl	1f960 <printf_parse@@Base+0x2550>
   29690:	ldr	w0, [sp, #140]
   29694:	ldp	x27, x28, [sp, #80]
   29698:	stp	xzr, xzr, [x20]
   2969c:	ldp	x19, x20, [sp, #16]
   296a0:	ldp	x21, x22, [sp, #32]
   296a4:	ldp	x23, x24, [sp, #48]
   296a8:	ldp	x25, x26, [sp, #64]
   296ac:	ldp	x29, x30, [sp], #336
   296b0:	ret
   296b4:	b.gt	29f8c <printf_parse@@Base+0xcb7c>
   296b8:	ldr	x1, [sp, #248]
   296bc:	cbz	x28, 29b68 <printf_parse@@Base+0xc758>
   296c0:	ldr	x2, [sp, #272]
   296c4:	ldr	x0, [sp, #232]
   296c8:	cmp	x2, x1
   296cc:	csel	x2, x2, x1, le
   296d0:	cmp	x2, x0
   296d4:	b.gt	296e0 <printf_parse@@Base+0xc2d0>
   296d8:	b	2a250 <printf_parse@@Base+0xce40>
   296dc:	ldr	x25, [sp, #192]
   296e0:	ldr	x1, [sp, #184]
   296e4:	ldr	x4, [sp, #224]
   296e8:	add	x1, x1, x0
   296ec:	ldr	x3, [sp, #304]
   296f0:	ldrb	w1, [x1, x4]
   296f4:	ldrb	w1, [x3, x1]
   296f8:	strb	w1, [x25, x0]
   296fc:	add	x0, x0, #0x1
   29700:	cmp	x2, x0
   29704:	b.ne	296dc <printf_parse@@Base+0xc2cc>  // b.any
   29708:	str	wzr, [sp, #140]
   2970c:	stp	x2, x2, [sp, #232]
   29710:	add	x25, sp, #0x90
   29714:	ldr	x22, [x20]
   29718:	str	xzr, [x20, #48]
   2971c:	orr	x2, x23, #0x800000
   29720:	mov	x1, x21
   29724:	mov	x0, x25
   29728:	str	x23, [x22, #216]
   2972c:	bl	27598 <printf_parse@@Base+0xa188>
   29730:	ldr	x6, [sp, #256]
   29734:	mov	x1, x20
   29738:	mov	x3, x23
   2973c:	mov	x2, x25
   29740:	add	x5, sp, #0x8c
   29744:	mov	x4, #0x0                   	// #0
   29748:	add	x6, x6, w0, sxtw
   2974c:	mov	x0, x21
   29750:	str	x6, [sp, #256]
   29754:	bl	29208 <printf_parse@@Base+0xbdf8>
   29758:	mov	x28, x0
   2975c:	ldr	w1, [sp, #140]
   29760:	cbnz	w1, 2a144 <printf_parse@@Base+0xcd34>
   29764:	add	x23, x22, #0x80
   29768:	mov	w6, #0x2                   	// #2
   2976c:	add	x27, x22, #0x70
   29770:	mov	x1, x23
   29774:	add	x22, sp, #0xa0
   29778:	mov	x0, x27
   2977c:	mov	x4, x22
   29780:	mov	x3, #0x0                   	// #0
   29784:	mov	x2, #0x0                   	// #0
   29788:	strb	w6, [sp, #168]
   2978c:	bl	20060 <printf_parse@@Base+0x2c50>
   29790:	mov	x26, x0
   29794:	mov	x1, x0
   29798:	cbz	x28, 297c4 <printf_parse@@Base+0xc3b4>
   2979c:	mov	w5, #0x10                  	// #16
   297a0:	mov	x1, x23
   297a4:	mov	x3, x26
   297a8:	mov	x2, x28
   297ac:	mov	x0, x27
   297b0:	mov	x4, x22
   297b4:	strb	w5, [sp, #168]
   297b8:	bl	20060 <printf_parse@@Base+0x2c50>
   297bc:	mov	x1, x26
   297c0:	mov	x26, x0
   297c4:	cmp	x1, #0x0
   297c8:	cset	w0, eq  // eq = none
   297cc:	cmp	x26, #0x0
   297d0:	csinc	w0, w0, wzr, ne  // ne = any
   297d4:	ldr	x27, [x20]
   297d8:	cbnz	w0, 2a17c <printf_parse@@Base+0xcd6c>
   297dc:	ldr	x23, [x27, #8]
   297e0:	str	x26, [x19, #104]
   297e4:	lsl	x28, x23, #3
   297e8:	add	x23, x23, x23, lsl #1
   297ec:	mov	x0, x28
   297f0:	bl	a5f0 <malloc@plt>
   297f4:	mov	x26, x0
   297f8:	str	x26, [x27, #24]
   297fc:	mov	x0, x28
   29800:	lsl	x23, x23, #3
   29804:	bl	a5f0 <malloc@plt>
   29808:	mov	x28, x0
   2980c:	str	x28, [x27, #32]
   29810:	mov	x0, x23
   29814:	bl	a5f0 <malloc@plt>
   29818:	mov	x1, x0
   2981c:	str	x1, [x27, #40]
   29820:	mov	x0, x23
   29824:	mov	x23, x1
   29828:	bl	a5f0 <malloc@plt>
   2982c:	str	x0, [x27, #48]
   29830:	cbz	x26, 29f80 <printf_parse@@Base+0xcb70>
   29834:	cbz	x28, 29f80 <printf_parse@@Base+0xcb70>
   29838:	cbz	x23, 29f80 <printf_parse@@Base+0xcb70>
   2983c:	cbz	x0, 29f80 <printf_parse@@Base+0xcb70>
   29840:	ldr	x23, [x20, #48]
   29844:	lsl	x0, x23, #3
   29848:	bl	a5f0 <malloc@plt>
   2984c:	str	x0, [x27, #224]
   29850:	cbz	x0, 298b0 <printf_parse@@Base+0xc4a0>
   29854:	mov	x1, #0x0                   	// #0
   29858:	cbz	x23, 29870 <printf_parse@@Base+0xc460>
   2985c:	nop
   29860:	str	x1, [x0, x1, lsl #3]
   29864:	add	x1, x1, #0x1
   29868:	cmp	x1, x23
   2986c:	b.ne	29860 <printf_parse@@Base+0xc450>  // b.any
   29870:	ldr	x0, [x27, #104]
   29874:	mov	x2, x27
   29878:	adrp	x1, 1f000 <printf_parse@@Base+0x1bf0>
   2987c:	add	x1, x1, #0xda0
   29880:	bl	1e4b8 <printf_parse@@Base+0x10a8>
   29884:	ldr	x3, [x20, #48]
   29888:	cbz	x3, 2a134 <printf_parse@@Base+0xcd24>
   2988c:	mov	x1, #0x0                   	// #0
   29890:	ldr	x0, [x27, #224]
   29894:	b	298a4 <printf_parse@@Base+0xc494>
   29898:	add	x1, x1, #0x1
   2989c:	cmp	x1, x3
   298a0:	b.eq	2a138 <printf_parse@@Base+0xcd28>  // b.none
   298a4:	ldr	x2, [x0, x1, lsl #3]
   298a8:	cmp	x2, x1
   298ac:	b.eq	29898 <printf_parse@@Base+0xc488>  // b.none
   298b0:	ldr	x0, [x27, #104]
   298b4:	adrp	x1, 20000 <printf_parse@@Base+0x2bf0>
   298b8:	mov	x2, x20
   298bc:	add	x1, x1, #0x430
   298c0:	bl	1e438 <printf_parse@@Base+0x1028>
   298c4:	cbnz	w0, 29638 <printf_parse@@Base+0xc228>
   298c8:	ldr	x0, [x27, #104]
   298cc:	adrp	x1, 22000 <printf_parse@@Base+0x4bf0>
   298d0:	mov	x2, x27
   298d4:	add	x1, x1, #0xe78
   298d8:	bl	1e438 <printf_parse@@Base+0x1028>
   298dc:	cbnz	w0, 29638 <printf_parse@@Base+0xc228>
   298e0:	ldr	x0, [x27, #104]
   298e4:	mov	x2, x27
   298e8:	adrp	x1, 1f000 <printf_parse@@Base+0x1bf0>
   298ec:	add	x1, x1, #0xe48
   298f0:	mov	x26, #0x1                   	// #1
   298f4:	bl	1e4b8 <printf_parse@@Base+0x10a8>
   298f8:	ldr	x28, [x27, #104]
   298fc:	ldrb	w0, [x28, #48]
   29900:	ldr	x3, [x28, #56]
   29904:	cmp	w0, #0xb
   29908:	b.hi	2998c <printf_parse@@Base+0xc57c>  // b.pmore
   2990c:	nop
   29910:	cmp	w0, #0x9
   29914:	b.hi	29c20 <printf_parse@@Base+0xc810>  // b.pmore
   29918:	cmp	w0, #0x4
   2991c:	b.eq	29bcc <printf_parse@@Base+0xc7bc>  // b.none
   29920:	b.ls	29b74 <printf_parse@@Base+0xc764>  // b.plast
   29924:	sub	w2, w0, #0x8
   29928:	and	w2, w2, #0xff
   2992c:	cmp	w2, #0x1
   29930:	b.hi	2999c <printf_parse@@Base+0xc58c>  // b.pmore
   29934:	ldr	x5, [x27, #40]
   29938:	add	x3, x3, x3, lsl #1
   2993c:	ldr	x6, [x28, #32]
   29940:	mov	x0, #0x8                   	// #8
   29944:	add	x23, x5, x3, lsl #3
   29948:	ldr	x1, [x6, #56]
   2994c:	str	x26, [x5, x3, lsl #3]
   29950:	str	x26, [x23, #8]
   29954:	str	x1, [sp, #96]
   29958:	bl	a5f0 <malloc@plt>
   2995c:	str	x0, [x23, #16]
   29960:	cbz	x0, 2a210 <printf_parse@@Base+0xce00>
   29964:	ldr	x1, [sp, #96]
   29968:	str	x1, [x0]
   2996c:	nop
   29970:	ldr	x2, [x28, #8]
   29974:	cbz	x2, 29ab0 <printf_parse@@Base+0xc6a0>
   29978:	mov	x28, x2
   2997c:	ldrb	w0, [x28, #48]
   29980:	ldr	x3, [x28, #56]
   29984:	cmp	w0, #0xb
   29988:	b.ls	29910 <printf_parse@@Base+0xc500>  // b.plast
   2998c:	cmp	w0, #0xc
   29990:	b.eq	29934 <printf_parse@@Base+0xc524>  // b.none
   29994:	cmp	w0, #0x10
   29998:	b.eq	29970 <printf_parse@@Base+0xc560>  // b.none
   2999c:	tbz	w0, #3, 29ca8 <printf_parse@@Base+0xc898>
   299a0:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   299a4:	add	x3, x3, #0x980
   299a8:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   299ac:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   299b0:	add	x3, x3, #0x58
   299b4:	add	x1, x1, #0x7f8
   299b8:	add	x0, x0, #0x850
   299bc:	mov	w2, #0x5c2                 	// #1474
   299c0:	bl	aea0 <__assert_fail@plt>
   299c4:	mov	x1, x26
   299c8:	mov	x0, x21
   299cc:	bl	1e558 <printf_parse@@Base+0x1148>
   299d0:	cbnz	w0, 29638 <printf_parse@@Base+0xc228>
   299d4:	ldrb	w3, [sp, #323]
   299d8:	ldr	w2, [x19, #180]
   299dc:	b	295d8 <printf_parse@@Base+0xc1c8>
   299e0:	ldp	x27, x28, [sp, #80]
   299e4:	nop
   299e8:	mov	w0, #0xc                   	// #12
   299ec:	str	w0, [sp, #140]
   299f0:	mov	x0, x19
   299f4:	bl	1f960 <printf_parse@@Base+0x2550>
   299f8:	ldr	w0, [sp, #140]
   299fc:	stp	xzr, xzr, [x20]
   29a00:	b	2969c <printf_parse@@Base+0xc28c>
   29a04:	mov	x1, #0x1                   	// #1
   29a08:	mov	x0, #0x20                  	// #32
   29a0c:	bl	a770 <calloc@plt>
   29a10:	str	x0, [x19, #120]
   29a14:	cbz	x0, 299e8 <printf_parse@@Base+0xc5d8>
   29a18:	mov	x24, #0x1                   	// #1
   29a1c:	stp	x27, x28, [sp, #80]
   29a20:	mov	x27, #0x0                   	// #0
   29a24:	lsl	w21, w27, #3
   29a28:	mov	w28, #0x0                   	// #0
   29a2c:	b	29a50 <printf_parse@@Base+0xc640>
   29a30:	cbnz	w3, 29a40 <printf_parse@@Base+0xc630>
   29a34:	ldrb	w0, [x19, #176]
   29a38:	orr	w0, w0, #0x8
   29a3c:	strb	w0, [x19, #176]
   29a40:	add	w28, w28, #0x1
   29a44:	add	w21, w21, #0x1
   29a48:	cmp	w28, #0x40
   29a4c:	b.eq	29a98 <printf_parse@@Base+0xc688>  // b.none
   29a50:	mov	w0, w21
   29a54:	bl	a8d0 <btowc@plt>
   29a58:	and	w3, w21, #0xffffff80
   29a5c:	cmn	w0, #0x1
   29a60:	b.eq	29a30 <printf_parse@@Base+0xc620>  // b.none
   29a64:	ldr	x4, [x19, #120]
   29a68:	lsl	x1, x24, x28
   29a6c:	ldr	x2, [x4, x27]
   29a70:	orr	x1, x2, x1
   29a74:	str	x1, [x4, x27]
   29a78:	cbnz	w3, 29a40 <printf_parse@@Base+0xc630>
   29a7c:	cmp	w0, w21
   29a80:	b.ne	29a34 <printf_parse@@Base+0xc624>  // b.any
   29a84:	add	w28, w28, #0x1
   29a88:	add	w21, w21, #0x1
   29a8c:	cmp	w28, #0x40
   29a90:	b.ne	29a50 <printf_parse@@Base+0xc640>  // b.any
   29a94:	nop
   29a98:	add	x27, x27, #0x8
   29a9c:	cmp	x27, #0x20
   29aa0:	b.ne	29a24 <printf_parse@@Base+0xc614>  // b.any
   29aa4:	ldp	x27, x28, [sp, #80]
   29aa8:	b	29500 <printf_parse@@Base+0xc0f0>
   29aac:	mov	x28, x0
   29ab0:	ldr	x0, [x28, #16]
   29ab4:	cmp	x0, x2
   29ab8:	cset	w23, eq  // eq = none
   29abc:	cmp	x0, #0x0
   29ac0:	csinc	w23, w23, wzr, ne  // ne = any
   29ac4:	cbz	w23, 2a0b4 <printf_parse@@Base+0xcca4>
   29ac8:	ldr	x0, [x28]
   29acc:	mov	x2, x28
   29ad0:	cbnz	x0, 29aac <printf_parse@@Base+0xc69c>
   29ad4:	ldr	x1, [x27, #16]
   29ad8:	mov	w26, #0x0                   	// #0
   29adc:	mov	x28, #0x0                   	// #0
   29ae0:	cmp	x28, x1
   29ae4:	b.eq	29b0c <printf_parse@@Base+0xc6fc>  // b.none
   29ae8:	add	x5, x28, x28, lsl #1
   29aec:	lsl	x5, x5, #3
   29af0:	ldr	x0, [x27, #48]
   29af4:	add	x0, x0, x5
   29af8:	ldr	x0, [x0, #8]
   29afc:	cbz	x0, 29b2c <printf_parse@@Base+0xc71c>
   29b00:	add	x28, x28, #0x1
   29b04:	cmp	x28, x1
   29b08:	b.ne	29ae8 <printf_parse@@Base+0xc6d8>  // b.any
   29b0c:	cbz	w26, 29cc4 <printf_parse@@Base+0xc8b4>
   29b10:	ldr	x0, [x27, #48]
   29b14:	mov	x5, #0x0                   	// #0
   29b18:	mov	w26, #0x0                   	// #0
   29b1c:	mov	x28, #0x0                   	// #0
   29b20:	add	x0, x0, x5
   29b24:	ldr	x0, [x0, #8]
   29b28:	cbnz	x0, 29b00 <printf_parse@@Base+0xc6f0>
   29b2c:	mov	x2, x28
   29b30:	mov	x1, x27
   29b34:	mov	x0, x22
   29b38:	mov	w3, #0x1                   	// #1
   29b3c:	str	x5, [sp, #96]
   29b40:	bl	20780 <printf_parse@@Base+0x3370>
   29b44:	cbnz	w0, 29638 <printf_parse@@Base+0xc228>
   29b48:	ldr	x0, [x27, #48]
   29b4c:	add	x28, x28, #0x1
   29b50:	ldr	x5, [sp, #96]
   29b54:	add	x5, x0, x5
   29b58:	ldr	x0, [x5, #8]
   29b5c:	cbz	x0, 29ba8 <printf_parse@@Base+0xc798>
   29b60:	ldr	x1, [x27, #16]
   29b64:	b	29ae0 <printf_parse@@Base+0xc6d0>
   29b68:	str	wzr, [sp, #140]
   29b6c:	stp	x1, x1, [sp, #232]
   29b70:	b	29710 <printf_parse@@Base+0xc300>
   29b74:	cmp	w0, #0x2
   29b78:	b.ne	29ca8 <printf_parse@@Base+0xc898>  // b.any
   29b7c:	ldr	x0, [x28, #32]
   29b80:	cbz	x0, 29970 <printf_parse@@Base+0xc560>
   29b84:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   29b88:	add	x3, x3, #0x980
   29b8c:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   29b90:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   29b94:	add	x3, x3, #0x58
   29b98:	add	x1, x1, #0x7f8
   29b9c:	add	x0, x0, #0x818
   29ba0:	mov	w2, #0x59f                 	// #1439
   29ba4:	bl	aea0 <__assert_fail@plt>
   29ba8:	ldr	x0, [sp, #176]
   29bac:	bl	aa50 <free@plt>
   29bb0:	ldr	x1, [x27, #16]
   29bb4:	cmp	x1, x28
   29bb8:	b.eq	29f70 <printf_parse@@Base+0xcb60>  // b.none
   29bbc:	add	x5, x28, x28, lsl #1
   29bc0:	mov	w26, w23
   29bc4:	lsl	x5, x5, #3
   29bc8:	b	29af0 <printf_parse@@Base+0xc6e0>
   29bcc:	ldr	x2, [x28, #32]
   29bd0:	ldr	x0, [x27, #24]
   29bd4:	ldr	x23, [x2, #56]
   29bd8:	str	x23, [x0, x3, lsl #3]
   29bdc:	ldrb	w0, [x28, #48]
   29be0:	cmp	w0, #0x4
   29be4:	b.ne	29970 <printf_parse@@Base+0xc560>  // b.any
   29be8:	ldr	x5, [x27, #40]
   29bec:	add	x3, x3, x3, lsl #1
   29bf0:	mov	x0, #0x8                   	// #8
   29bf4:	add	x2, x5, x3, lsl #3
   29bf8:	str	x26, [x5, x3, lsl #3]
   29bfc:	str	x2, [sp, #96]
   29c00:	str	x26, [x2, #8]
   29c04:	bl	a5f0 <malloc@plt>
   29c08:	ldr	x2, [sp, #96]
   29c0c:	str	x0, [x2, #16]
   29c10:	cbz	x0, 2a274 <printf_parse@@Base+0xce64>
   29c14:	str	x23, [x0]
   29c18:	ldr	x2, [x28, #8]
   29c1c:	b	29974 <printf_parse@@Base+0xc564>
   29c20:	ldrb	w0, [x27, #176]
   29c24:	orr	w0, w0, #0x1
   29c28:	strb	w0, [x27, #176]
   29c2c:	ldr	x2, [x28, #8]
   29c30:	cbz	x2, 2a0d0 <printf_parse@@Base+0xccc0>
   29c34:	ldr	x0, [x2, #24]
   29c38:	ldr	x23, [x0, #56]
   29c3c:	ldr	x0, [x28, #16]
   29c40:	cbz	x0, 2a0e0 <printf_parse@@Base+0xccd0>
   29c44:	ldr	x0, [x0, #24]
   29c48:	ldr	x5, [x0, #56]
   29c4c:	tbnz	x23, #63, 2a2d4 <printf_parse@@Base+0xcec4>
   29c50:	tbnz	x5, #63, 2a2b0 <printf_parse@@Base+0xcea0>
   29c54:	ldr	x6, [x27, #40]
   29c58:	add	x3, x3, x3, lsl #1
   29c5c:	mov	x1, #0x2                   	// #2
   29c60:	mov	x0, #0x10                  	// #16
   29c64:	str	x5, [sp, #120]
   29c68:	add	x7, x6, x3, lsl #3
   29c6c:	str	x1, [x6, x3, lsl #3]
   29c70:	stp	x7, x2, [sp, #96]
   29c74:	bl	a5f0 <malloc@plt>
   29c78:	ldp	x7, x2, [sp, #96]
   29c7c:	str	x0, [x7, #16]
   29c80:	ldr	x5, [sp, #120]
   29c84:	cbz	x0, 29d9c <printf_parse@@Base+0xc98c>
   29c88:	cmp	x23, x5
   29c8c:	b.eq	2a0c0 <printf_parse@@Base+0xccb0>  // b.none
   29c90:	mov	x1, #0x2                   	// #2
   29c94:	str	x1, [x7, #8]
   29c98:	b.ge	2a0ec <printf_parse@@Base+0xccdc>  // b.tcont
   29c9c:	stp	x23, x5, [x0]
   29ca0:	cbnz	x2, 29978 <printf_parse@@Base+0xc568>
   29ca4:	b	29ab0 <printf_parse@@Base+0xc6a0>
   29ca8:	ldr	x5, [x28, #32]
   29cac:	ldr	x0, [x27, #24]
   29cb0:	ldr	x2, [x28, #8]
   29cb4:	ldr	x5, [x5, #56]
   29cb8:	str	x5, [x0, x3, lsl #3]
   29cbc:	cbnz	x2, 29978 <printf_parse@@Base+0xc568>
   29cc0:	b	29ab0 <printf_parse@@Base+0xc6a0>
   29cc4:	ldrb	w0, [x20, #56]
   29cc8:	tbnz	w0, #4, 29ce0 <printf_parse@@Base+0xc8d0>
   29ccc:	ldr	x0, [x20, #48]
   29cd0:	cbz	x0, 29ce0 <printf_parse@@Base+0xc8d0>
   29cd4:	ldrb	w0, [x27, #176]
   29cd8:	tbnz	w0, #0, 29ce8 <printf_parse@@Base+0xc8d8>
   29cdc:	nop
   29ce0:	ldr	x0, [x27, #152]
   29ce4:	cbz	x0, 29dc0 <printf_parse@@Base+0xc9b0>
   29ce8:	add	x0, x28, x28, lsl #1
   29cec:	lsl	x0, x0, #3
   29cf0:	bl	a5f0 <malloc@plt>
   29cf4:	str	x0, [x27, #56]
   29cf8:	cbz	x0, 2a258 <printf_parse@@Base+0xce48>
   29cfc:	mov	x2, #0x0                   	// #0
   29d00:	mov	x1, #0x0                   	// #0
   29d04:	cbnz	x28, 29d10 <printf_parse@@Base+0xc900>
   29d08:	b	29dc0 <printf_parse@@Base+0xc9b0>
   29d0c:	ldr	x0, [x27, #56]
   29d10:	add	x0, x0, x2
   29d14:	add	x1, x1, #0x1
   29d18:	add	x2, x2, #0x18
   29d1c:	stp	xzr, xzr, [x0]
   29d20:	str	xzr, [x0, #16]
   29d24:	ldr	x3, [x27, #16]
   29d28:	cmp	x3, x1
   29d2c:	b.hi	29d0c <printf_parse@@Base+0xc8fc>  // b.pmore
   29d30:	cbz	x3, 29dc0 <printf_parse@@Base+0xc9b0>
   29d34:	ldr	x0, [x27, #48]
   29d38:	mov	x23, #0x0                   	// #0
   29d3c:	str	xzr, [sp, #104]
   29d40:	ldr	x1, [sp, #104]
   29d44:	mov	x28, #0x0                   	// #0
   29d48:	add	x2, x0, x1
   29d4c:	ldp	x6, x5, [x2, #8]
   29d50:	cmp	x6, #0x0
   29d54:	b.gt	29d78 <printf_parse@@Base+0xc968>
   29d58:	b	29da8 <printf_parse@@Base+0xc998>
   29d5c:	ldp	x5, x1, [sp, #96]
   29d60:	add	x28, x28, #0x1
   29d64:	ldr	x0, [x27, #48]
   29d68:	add	x2, x0, x1
   29d6c:	ldr	x2, [x2, #8]
   29d70:	cmp	x28, x2
   29d74:	b.ge	29da4 <printf_parse@@Base+0xc994>  // b.tcont
   29d78:	ldr	x2, [x5, x28, lsl #3]
   29d7c:	mov	x1, x23
   29d80:	ldr	x0, [x27, #56]
   29d84:	str	x5, [sp, #96]
   29d88:	add	x2, x2, x2, lsl #1
   29d8c:	add	x0, x0, x2, lsl #3
   29d90:	bl	1e5f8 <printf_parse@@Base+0x11e8>
   29d94:	tst	w0, #0xff
   29d98:	b.ne	29d5c <printf_parse@@Base+0xc94c>  // b.any
   29d9c:	mov	w0, #0xc                   	// #12
   29da0:	b	29638 <printf_parse@@Base+0xc228>
   29da4:	ldr	x3, [x27, #16]
   29da8:	add	x23, x23, #0x1
   29dac:	ldr	x1, [sp, #104]
   29db0:	cmp	x3, x23
   29db4:	add	x1, x1, #0x18
   29db8:	str	x1, [sp, #104]
   29dbc:	b.hi	29d40 <printf_parse@@Base+0xc930>  // b.pmore
   29dc0:	ldrb	w0, [x19, #176]
   29dc4:	cmp	x24, #0x0
   29dc8:	str	wzr, [sp, #140]
   29dcc:	cset	w1, eq  // eq = none
   29dd0:	ands	w1, w1, w0, lsr #2
   29dd4:	b.ne	29f9c <printf_parse@@Base+0xcb8c>  // b.any
   29dd8:	ldr	x2, [x19, #104]
   29ddc:	mov	x0, x22
   29de0:	ldr	x1, [x19, #48]
   29de4:	ldr	x2, [x2, #24]
   29de8:	ldr	x2, [x2, #56]
   29dec:	str	x2, [x19, #144]
   29df0:	add	x2, x2, x2, lsl #1
   29df4:	add	x1, x1, x2, lsl #3
   29df8:	bl	20b50 <printf_parse@@Base+0x3740>
   29dfc:	str	w0, [sp, #144]
   29e00:	mov	w23, w0
   29e04:	cbnz	w0, 29e84 <printf_parse@@Base+0xca74>
   29e08:	ldr	x0, [x19, #152]
   29e0c:	cmp	x0, #0x0
   29e10:	b.le	29e50 <printf_parse@@Base+0xca40>
   29e14:	ldr	x7, [sp, #168]
   29e18:	cmp	x7, #0x0
   29e1c:	b.le	29e50 <printf_parse@@Base+0xca40>
   29e20:	add	x24, x22, #0x10
   29e24:	mov	x6, #0x0                   	// #0
   29e28:	ldr	x4, [sp, #176]
   29e2c:	ldr	x3, [x19]
   29e30:	ldr	x1, [x4, x6, lsl #3]
   29e34:	add	x5, x3, x1, lsl #4
   29e38:	ldrb	w0, [x5, #8]
   29e3c:	cmp	w0, #0x4
   29e40:	b.eq	29eec <printf_parse@@Base+0xcadc>  // b.none
   29e44:	add	x6, x6, #0x1
   29e48:	cmp	x7, x6
   29e4c:	b.gt	29e28 <printf_parse@@Base+0xca18>
   29e50:	mov	x2, x22
   29e54:	mov	x1, x19
   29e58:	mov	x0, x25
   29e5c:	mov	w3, #0x0                   	// #0
   29e60:	bl	20d50 <printf_parse@@Base+0x3940>
   29e64:	str	x0, [x19, #72]
   29e68:	cbz	x0, 2a0ac <printf_parse@@Base+0xcc9c>
   29e6c:	ldrsb	w1, [x0, #104]
   29e70:	tbnz	w1, #31, 2a04c <printf_parse@@Base+0xcc3c>
   29e74:	stp	x0, x0, [x19, #80]
   29e78:	str	x0, [x19, #96]
   29e7c:	ldr	x0, [sp, #176]
   29e80:	bl	aa50 <free@plt>
   29e84:	ldr	x24, [x20]
   29e88:	str	w23, [sp, #140]
   29e8c:	ldr	x22, [x24, #112]
   29e90:	cbz	x22, 29ea8 <printf_parse@@Base+0xca98>
   29e94:	nop
   29e98:	mov	x0, x22
   29e9c:	ldr	x22, [x22]
   29ea0:	bl	aa50 <free@plt>
   29ea4:	cbnz	x22, 29e98 <printf_parse@@Base+0xca88>
   29ea8:	ldr	x0, [x24, #32]
   29eac:	mov	w1, #0xf                   	// #15
   29eb0:	stp	xzr, xzr, [x24, #104]
   29eb4:	str	w1, [x24, #128]
   29eb8:	bl	aa50 <free@plt>
   29ebc:	str	xzr, [x24, #32]
   29ec0:	mov	x0, x21
   29ec4:	bl	1f918 <printf_parse@@Base+0x2508>
   29ec8:	ldr	w0, [sp, #140]
   29ecc:	cbnz	w0, 2a194 <printf_parse@@Base+0xcd84>
   29ed0:	ldp	x19, x20, [sp, #16]
   29ed4:	ldp	x21, x22, [sp, #32]
   29ed8:	ldp	x23, x24, [sp, #48]
   29edc:	ldp	x25, x26, [sp, #64]
   29ee0:	ldp	x27, x28, [sp, #80]
   29ee4:	ldp	x29, x30, [sp], #336
   29ee8:	ret
   29eec:	mov	x0, #0x0                   	// #0
   29ef0:	b	29f00 <printf_parse@@Base+0xcaf0>
   29ef4:	add	x0, x0, #0x1
   29ef8:	cmp	x7, x0
   29efc:	b.eq	29e44 <printf_parse@@Base+0xca34>  // b.none
   29f00:	ldr	x2, [x4, x0, lsl #3]
   29f04:	lsl	x2, x2, #4
   29f08:	add	x8, x3, x2
   29f0c:	ldrb	w8, [x8, #8]
   29f10:	cmp	w8, #0x9
   29f14:	b.ne	29ef4 <printf_parse@@Base+0xcae4>  // b.any
   29f18:	ldr	x8, [x3, x2]
   29f1c:	ldr	x2, [x5]
   29f20:	cmp	x8, x2
   29f24:	b.ne	29ef4 <printf_parse@@Base+0xcae4>  // b.any
   29f28:	ldr	x3, [x19, #40]
   29f2c:	add	x2, x1, x1, lsl #1
   29f30:	mov	x0, x7
   29f34:	mov	x1, x24
   29f38:	add	x2, x3, x2, lsl #3
   29f3c:	ldr	x2, [x2, #16]
   29f40:	ldr	x2, [x2]
   29f44:	bl	1fbe8 <printf_parse@@Base+0x27d8>
   29f48:	cbnz	x0, 29e44 <printf_parse@@Base+0xca34>
   29f4c:	ldr	x1, [x19, #48]
   29f50:	add	x2, x2, x2, lsl #1
   29f54:	mov	x0, x22
   29f58:	add	x1, x1, x2, lsl #3
   29f5c:	bl	205d8 <printf_parse@@Base+0x31c8>
   29f60:	cbnz	w0, 2a21c <printf_parse@@Base+0xce0c>
   29f64:	mov	x6, #0x1                   	// #1
   29f68:	ldr	x7, [sp, #168]
   29f6c:	b	29e48 <printf_parse@@Base+0xca38>
   29f70:	mov	w26, #0x0                   	// #0
   29f74:	mov	x28, #0x0                   	// #0
   29f78:	mov	x5, #0x0                   	// #0
   29f7c:	b	29af0 <printf_parse@@Base+0xc6e0>
   29f80:	mov	w0, #0xc                   	// #12
   29f84:	str	w0, [sp, #140]
   29f88:	b	29640 <printf_parse@@Base+0xc230>
   29f8c:	mov	x0, x21
   29f90:	bl	1e958 <printf_parse@@Base+0x1548>
   29f94:	str	wzr, [sp, #140]
   29f98:	b	29710 <printf_parse@@Base+0xc300>
   29f9c:	ldr	x0, [x20, #40]
   29fa0:	cbnz	x0, 29dd8 <printf_parse@@Base+0xc9c8>
   29fa4:	ldr	x6, [x19, #16]
   29fa8:	cbz	x6, 2a284 <printf_parse@@Base+0xce74>
   29fac:	ldr	x7, [x19]
   29fb0:	mov	w2, #0x10001               	// #65537
   29fb4:	mov	w8, #0x0                   	// #0
   29fb8:	mov	x5, #0x0                   	// #0
   29fbc:	mov	x4, x7
   29fc0:	mov	x3, #0x1                   	// #1
   29fc4:	movk	x2, #0x1, lsl #48
   29fc8:	ldrb	w0, [x4, #8]
   29fcc:	cmp	w0, #0x5
   29fd0:	b.eq	2a224 <printf_parse@@Base+0xce14>  // b.none
   29fd4:	b.hi	2a1b8 <printf_parse@@Base+0xcda8>  // b.pmore
   29fd8:	cmp	w0, #0x3
   29fdc:	b.eq	2a22c <printf_parse@@Base+0xce1c>  // b.none
   29fe0:	cmp	w0, #0x4
   29fe4:	b.ne	2a1a0 <printf_parse@@Base+0xcd90>  // b.any
   29fe8:	add	x5, x5, #0x1
   29fec:	add	x4, x4, #0x10
   29ff0:	cmp	x5, x6
   29ff4:	b.ne	29fc8 <printf_parse@@Base+0xcbb8>  // b.any
   29ff8:	orr	w8, w8, w26
   29ffc:	add	x5, x7, x5, lsl #4
   2a000:	tst	w8, #0xff
   2a004:	mov	w1, #0x7                   	// #7
   2a008:	b.ne	2a028 <printf_parse@@Base+0xcc18>  // b.any
   2a00c:	b	2a280 <printf_parse@@Base+0xce70>
   2a010:	cmp	w0, #0x5
   2a014:	b.ne	2a01c <printf_parse@@Base+0xcc0c>  // b.any
   2a018:	strb	w1, [x7, #8]
   2a01c:	add	x7, x7, #0x10
   2a020:	cmp	x5, x7
   2a024:	b.eq	2a284 <printf_parse@@Base+0xce74>  // b.none
   2a028:	ldrb	w0, [x7, #8]
   2a02c:	cmp	w0, #0x1
   2a030:	b.ne	2a010 <printf_parse@@Base+0xcc00>  // b.any
   2a034:	ldrsb	w0, [x7]
   2a038:	tbz	w0, #31, 2a01c <printf_parse@@Base+0xcc0c>
   2a03c:	ldrb	w0, [x7, #10]
   2a040:	and	w0, w0, #0xffffffdf
   2a044:	strb	w0, [x7, #10]
   2a048:	b	2a01c <printf_parse@@Base+0xcc0c>
   2a04c:	mov	x2, x22
   2a050:	mov	x1, x19
   2a054:	mov	w3, #0x1                   	// #1
   2a058:	mov	x0, x25
   2a05c:	bl	20d50 <printf_parse@@Base+0x3940>
   2a060:	str	x0, [x19, #80]
   2a064:	mov	x2, x22
   2a068:	mov	x1, x19
   2a06c:	mov	w3, #0x2                   	// #2
   2a070:	mov	x0, x25
   2a074:	bl	20d50 <printf_parse@@Base+0x3940>
   2a078:	str	x0, [x19, #88]
   2a07c:	mov	x1, x19
   2a080:	mov	x2, x22
   2a084:	mov	x0, x25
   2a088:	mov	w3, #0x6                   	// #6
   2a08c:	bl	20d50 <printf_parse@@Base+0x3940>
   2a090:	str	x0, [x19, #96]
   2a094:	ldr	x1, [x19, #80]
   2a098:	cbz	x1, 2a0ac <printf_parse@@Base+0xcc9c>
   2a09c:	ldr	x1, [x19, #88]
   2a0a0:	cmp	x1, #0x0
   2a0a4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   2a0a8:	b.ne	29e7c <printf_parse@@Base+0xca6c>  // b.any
   2a0ac:	ldr	w23, [sp, #144]
   2a0b0:	b	29e84 <printf_parse@@Base+0xca74>
   2a0b4:	mov	x2, x0
   2a0b8:	mov	x28, x2
   2a0bc:	b	2997c <printf_parse@@Base+0xc56c>
   2a0c0:	str	x26, [x7, #8]
   2a0c4:	str	x23, [x0]
   2a0c8:	cbnz	x2, 29978 <printf_parse@@Base+0xc568>
   2a0cc:	b	29ab0 <printf_parse@@Base+0xc6a0>
   2a0d0:	ldr	x0, [x28, #32]
   2a0d4:	ldr	x23, [x0, #56]
   2a0d8:	ldr	x0, [x28, #16]
   2a0dc:	cbnz	x0, 29c44 <printf_parse@@Base+0xc834>
   2a0e0:	ldr	x0, [x28, #32]
   2a0e4:	ldr	x5, [x0, #56]
   2a0e8:	b	29c4c <printf_parse@@Base+0xc83c>
   2a0ec:	stp	x5, x23, [x0]
   2a0f0:	cbnz	x2, 29978 <printf_parse@@Base+0xc568>
   2a0f4:	b	29ab0 <printf_parse@@Base+0xc6a0>
   2a0f8:	mov	x0, x21
   2a0fc:	bl	1e8b8 <printf_parse@@Base+0x14a8>
   2a100:	str	wzr, [sp, #140]
   2a104:	b	29710 <printf_parse@@Base+0xc300>
   2a108:	mov	x0, x19
   2a10c:	mov	x1, #0x118                 	// #280
   2a110:	bl	a7e0 <realloc@plt>
   2a114:	mov	x19, x0
   2a118:	cbz	x0, 2a300 <printf_parse@@Base+0xcef0>
   2a11c:	mov	x0, #0x118                 	// #280
   2a120:	stp	x19, x0, [x20]
   2a124:	b	293f0 <printf_parse@@Base+0xbfe0>
   2a128:	mov	x21, #0x0                   	// #0
   2a12c:	mov	x1, #0x1                   	// #1
   2a130:	b	29448 <printf_parse@@Base+0xc038>
   2a134:	ldr	x0, [x27, #224]
   2a138:	bl	aa50 <free@plt>
   2a13c:	str	xzr, [x27, #224]
   2a140:	b	298b0 <printf_parse@@Base+0xc4a0>
   2a144:	cbz	x0, 2a268 <printf_parse@@Base+0xce58>
   2a148:	mov	w6, #0x2                   	// #2
   2a14c:	add	x27, x22, #0x70
   2a150:	add	x23, x22, #0x80
   2a154:	add	x22, sp, #0xa0
   2a158:	mov	x1, x23
   2a15c:	mov	x0, x27
   2a160:	mov	x4, x22
   2a164:	mov	x3, #0x0                   	// #0
   2a168:	mov	x2, #0x0                   	// #0
   2a16c:	strb	w6, [sp, #168]
   2a170:	bl	20060 <printf_parse@@Base+0x2c50>
   2a174:	mov	x26, x0
   2a178:	b	2979c <printf_parse@@Base+0xc38c>
   2a17c:	mov	w0, #0xc                   	// #12
   2a180:	str	xzr, [x19, #104]
   2a184:	str	w0, [sp, #140]
   2a188:	b	29640 <printf_parse@@Base+0xc230>
   2a18c:	str	wzr, [sp, #140]
   2a190:	b	29710 <printf_parse@@Base+0xc300>
   2a194:	ldr	w0, [sp, #116]
   2a198:	cbnz	w0, 29680 <printf_parse@@Base+0xc270>
   2a19c:	b	29688 <printf_parse@@Base+0xc278>
   2a1a0:	cmp	w0, #0x1
   2a1a4:	b.ne	2a1d4 <printf_parse@@Base+0xcdc4>  // b.any
   2a1a8:	ldrsb	w0, [x4]
   2a1ac:	cmp	w0, #0x0
   2a1b0:	csel	w8, w8, w1, ge  // ge = tcont
   2a1b4:	b	29fe8 <printf_parse@@Base+0xcbd8>
   2a1b8:	cmp	w0, #0xb
   2a1bc:	b.hi	2a1e0 <printf_parse@@Base+0xcdd0>  // b.pmore
   2a1c0:	cmp	w0, #0x7
   2a1c4:	b.hi	29fe8 <printf_parse@@Base+0xcbd8>  // b.pmore
   2a1c8:	cmp	w0, #0x6
   2a1cc:	b.eq	29dd8 <printf_parse@@Base+0xc9c8>  // b.none
   2a1d0:	bl	a900 <abort@plt>
   2a1d4:	cmp	w0, #0x2
   2a1d8:	b.eq	29fe8 <printf_parse@@Base+0xcbd8>  // b.none
   2a1dc:	bl	a900 <abort@plt>
   2a1e0:	cmp	w0, #0xc
   2a1e4:	b.ne	2a1d0 <printf_parse@@Base+0xcdc0>  // b.any
   2a1e8:	ldr	w0, [x4]
   2a1ec:	cmp	w0, #0x40
   2a1f0:	b.hi	2a244 <printf_parse@@Base+0xce34>  // b.pmore
   2a1f4:	cmp	w0, #0xf
   2a1f8:	b.ls	29dd8 <printf_parse@@Base+0xc9c8>  // b.plast
   2a1fc:	sub	w0, w0, #0x10
   2a200:	lsl	x0, x3, x0
   2a204:	tst	x0, x2
   2a208:	b.eq	29dd8 <printf_parse@@Base+0xc9c8>  // b.none
   2a20c:	b	29fe8 <printf_parse@@Base+0xcbd8>
   2a210:	mov	w0, #0xc                   	// #12
   2a214:	stp	xzr, xzr, [x23]
   2a218:	b	29638 <printf_parse@@Base+0xc228>
   2a21c:	mov	w23, w0
   2a220:	b	29e84 <printf_parse@@Base+0xca74>
   2a224:	mov	w26, w1
   2a228:	b	29fe8 <printf_parse@@Base+0xcbd8>
   2a22c:	ldr	x0, [x4]
   2a230:	ldr	x9, [x0, #16]
   2a234:	cbnz	x9, 29dd8 <printf_parse@@Base+0xc9c8>
   2a238:	ldr	x0, [x0, #24]
   2a23c:	cbz	x0, 29fe8 <printf_parse@@Base+0xcbd8>
   2a240:	b	29dd8 <printf_parse@@Base+0xc9c8>
   2a244:	cmp	w0, #0x80
   2a248:	b.eq	29fe8 <printf_parse@@Base+0xcbd8>  // b.none
   2a24c:	b	29dd8 <printf_parse@@Base+0xc9c8>
   2a250:	mov	x2, x0
   2a254:	b	29708 <printf_parse@@Base+0xc2f8>
   2a258:	mov	w0, #0xc                   	// #12
   2a25c:	str	w0, [sp, #140]
   2a260:	ldr	x27, [x20]
   2a264:	b	29640 <printf_parse@@Base+0xc230>
   2a268:	ldr	x27, [x20]
   2a26c:	str	xzr, [x19, #104]
   2a270:	b	29640 <printf_parse@@Base+0xc230>
   2a274:	mov	w0, #0xc                   	// #12
   2a278:	stp	xzr, xzr, [x2]
   2a27c:	b	29638 <printf_parse@@Base+0xc228>
   2a280:	mov	w26, #0x0                   	// #0
   2a284:	ldr	x2, [x19, #152]
   2a288:	mov	w1, #0x1                   	// #1
   2a28c:	ldrb	w0, [x19, #176]
   2a290:	cmp	x2, #0x0
   2a294:	str	w1, [x19, #180]
   2a298:	ccmp	w26, #0x0, #0x0, le
   2a29c:	and	w1, w0, #0xfffffff9
   2a2a0:	cset	w0, ne  // ne = any
   2a2a4:	orr	w0, w1, w0, lsl #1
   2a2a8:	strb	w0, [x19, #176]
   2a2ac:	b	29dd8 <printf_parse@@Base+0xc9c8>
   2a2b0:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   2a2b4:	add	x3, x3, #0x980
   2a2b8:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2a2bc:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   2a2c0:	add	x3, x3, #0x58
   2a2c4:	add	x1, x1, #0x7f8
   2a2c8:	add	x0, x0, #0x840
   2a2cc:	mov	w2, #0x5b0                 	// #1456
   2a2d0:	bl	aea0 <__assert_fail@plt>
   2a2d4:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   2a2d8:	add	x3, x3, #0x980
   2a2dc:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2a2e0:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   2a2e4:	add	x3, x3, #0x58
   2a2e8:	add	x1, x1, #0x7f8
   2a2ec:	add	x0, x0, #0x830
   2a2f0:	mov	w2, #0x5af                 	// #1455
   2a2f4:	bl	aea0 <__assert_fail@plt>
   2a2f8:	ldp	x27, x28, [sp, #80]
   2a2fc:	b	299f0 <printf_parse@@Base+0xc5e0>
   2a300:	mov	w0, #0xc                   	// #12
   2a304:	b	2969c <printf_parse@@Base+0xc28c>

000000000002a308 <rpl_re_compile_pattern@@Base>:
   2a308:	stp	x29, x30, [sp, #-16]!
   2a30c:	adrp	x3, 46000 <vasnprintf@@Base+0x1b1e0>
   2a310:	mov	w6, #0x6f                  	// #111
   2a314:	mov	x29, sp
   2a318:	ldr	x3, [x3, #3920]
   2a31c:	mov	x5, x2
   2a320:	ldrb	w4, [x2, #56]
   2a324:	mov	x2, x1
   2a328:	mov	x1, x0
   2a32c:	mov	x0, x5
   2a330:	ldr	x3, [x3]
   2a334:	and	w6, w4, w6
   2a338:	ubfx	w4, w3, #25, #1
   2a33c:	ubfiz	w4, w4, #4, #4
   2a340:	orr	w4, w4, #0xffffff80
   2a344:	orr	w4, w4, w6
   2a348:	strb	w4, [x5, #56]
   2a34c:	bl	293a0 <printf_parse@@Base+0xbf90>
   2a350:	cbz	w0, 2a380 <rpl_re_compile_pattern@@Base+0x78>
   2a354:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2a358:	add	x1, x1, #0x980
   2a35c:	add	x4, x1, #0x1e8
   2a360:	mov	w3, w0
   2a364:	ldp	x29, x30, [sp], #16
   2a368:	add	x1, x1, #0x68
   2a36c:	ldr	x3, [x4, w3, sxtw #3]
   2a370:	mov	w2, #0x5                   	// #5
   2a374:	mov	x0, #0x0                   	// #0
   2a378:	add	x1, x1, x3
   2a37c:	b	ada0 <dcgettext@plt>
   2a380:	mov	x0, #0x0                   	// #0
   2a384:	ldp	x29, x30, [sp], #16
   2a388:	ret
   2a38c:	nop

000000000002a390 <rpl_re_set_syntax@@Base>:
   2a390:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   2a394:	mov	x2, x0
   2a398:	ldr	x1, [x1, #3920]
   2a39c:	ldr	x0, [x1]
   2a3a0:	str	x2, [x1]
   2a3a4:	ret

000000000002a3a8 <rpl_re_compile_fastmap@@Base>:
   2a3a8:	stp	x29, x30, [sp, #-48]!
   2a3ac:	mov	x2, #0x100                 	// #256
   2a3b0:	mov	w1, #0x0                   	// #0
   2a3b4:	mov	x29, sp
   2a3b8:	stp	x19, x20, [sp, #16]
   2a3bc:	mov	x19, x0
   2a3c0:	ldr	x20, [x0]
   2a3c4:	str	x21, [sp, #32]
   2a3c8:	ldr	x21, [x0, #32]
   2a3cc:	mov	x0, x21
   2a3d0:	bl	a6f0 <memset@plt>
   2a3d4:	ldr	x1, [x20, #72]
   2a3d8:	mov	x0, x19
   2a3dc:	mov	x3, x21
   2a3e0:	add	x2, x1, #0x18
   2a3e4:	add	x1, x1, #0x10
   2a3e8:	bl	23ab8 <printf_parse@@Base+0x66a8>
   2a3ec:	ldp	x1, x0, [x20, #72]
   2a3f0:	cmp	x1, x0
   2a3f4:	b.eq	2a410 <rpl_re_compile_fastmap@@Base+0x68>  // b.none
   2a3f8:	add	x2, x0, #0x18
   2a3fc:	add	x1, x0, #0x10
   2a400:	mov	x3, x21
   2a404:	mov	x0, x19
   2a408:	bl	23ab8 <printf_parse@@Base+0x66a8>
   2a40c:	ldr	x0, [x20, #72]
   2a410:	ldr	x1, [x20, #88]
   2a414:	cmp	x1, x0
   2a418:	b.eq	2a434 <rpl_re_compile_fastmap@@Base+0x8c>  // b.none
   2a41c:	add	x2, x1, #0x18
   2a420:	mov	x0, x19
   2a424:	mov	x3, x21
   2a428:	add	x1, x1, #0x10
   2a42c:	bl	23ab8 <printf_parse@@Base+0x66a8>
   2a430:	ldr	x0, [x20, #72]
   2a434:	ldr	x1, [x20, #96]
   2a438:	cmp	x1, x0
   2a43c:	b.eq	2a454 <rpl_re_compile_fastmap@@Base+0xac>  // b.none
   2a440:	add	x2, x1, #0x18
   2a444:	mov	x3, x21
   2a448:	add	x1, x1, #0x10
   2a44c:	mov	x0, x19
   2a450:	bl	23ab8 <printf_parse@@Base+0x66a8>
   2a454:	ldrb	w1, [x19, #56]
   2a458:	mov	w0, #0x0                   	// #0
   2a45c:	ldr	x21, [sp, #32]
   2a460:	orr	w1, w1, #0x8
   2a464:	strb	w1, [x19, #56]
   2a468:	ldp	x19, x20, [sp, #16]
   2a46c:	ldp	x29, x30, [sp], #48
   2a470:	ret
   2a474:	nop
   2a478:	sub	sp, sp, #0x90
   2a47c:	cmp	x3, #0x0
   2a480:	ccmp	x3, x2, #0x0, ge  // ge = tcont
   2a484:	stp	x29, x30, [sp, #16]
   2a488:	add	x29, sp, #0x10
   2a48c:	stp	x19, x20, [sp, #32]
   2a490:	mov	x20, x0
   2a494:	stp	x21, x22, [sp, #48]
   2a498:	mov	x22, x1
   2a49c:	and	w1, w7, #0xff
   2a4a0:	stp	x25, x26, [sp, #80]
   2a4a4:	stp	x27, x28, [sp, #96]
   2a4a8:	add	x27, x3, x4
   2a4ac:	str	w1, [sp, #132]
   2a4b0:	ldr	x25, [x0]
   2a4b4:	b.gt	2a7b8 <rpl_re_compile_fastmap@@Base+0x410>
   2a4b8:	stp	x23, x24, [sp, #64]
   2a4bc:	mov	x19, x3
   2a4c0:	mov	x28, x2
   2a4c4:	mov	x23, x5
   2a4c8:	mov	x21, x6
   2a4cc:	cmp	x27, x2
   2a4d0:	b.gt	2a770 <rpl_re_compile_fastmap@@Base+0x3c8>
   2a4d4:	cmp	x4, #0x0
   2a4d8:	ccmp	x3, x27, #0x4, ge  // ge = tcont
   2a4dc:	b.gt	2a770 <rpl_re_compile_fastmap@@Base+0x3c8>
   2a4e0:	tbnz	x27, #63, 2a778 <rpl_re_compile_fastmap@@Base+0x3d0>
   2a4e4:	cmp	x4, #0x0
   2a4e8:	ccmp	x3, x27, #0x0, lt  // lt = tstop
   2a4ec:	b.le	2a778 <rpl_re_compile_fastmap@@Base+0x3d0>
   2a4f0:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   2a4f4:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   2a4f8:	ldr	x0, [x0, #4040]
   2a4fc:	ldr	x1, [x1, #3944]
   2a500:	cmp	x0, #0x0
   2a504:	cset	w0, ne  // ne = any
   2a508:	cmp	x1, #0x0
   2a50c:	cset	w1, ne  // ne = any
   2a510:	orr	w0, w0, w1
   2a514:	and	w24, w0, #0xff
   2a518:	tbz	w0, #0, 2a528 <rpl_re_compile_fastmap@@Base+0x180>
   2a51c:	add	x0, x25, #0xe8
   2a520:	mov	w24, #0x1                   	// #1
   2a524:	bl	af00 <pthread_mutex_lock@plt>
   2a528:	ldrb	w0, [x20, #56]
   2a52c:	cmp	x19, x27
   2a530:	ubfx	x1, x0, #5, #2
   2a534:	str	x1, [sp, #136]
   2a538:	b.ge	2a548 <rpl_re_compile_fastmap@@Base+0x1a0>  // b.tcont
   2a53c:	ldr	x1, [x20, #32]
   2a540:	cbz	x1, 2a548 <rpl_re_compile_fastmap@@Base+0x1a0>
   2a544:	tbz	w0, #3, 2a720 <rpl_re_compile_fastmap@@Base+0x378>
   2a548:	ldrb	w1, [x20, #56]
   2a54c:	cmp	x21, #0x0
   2a550:	cset	w0, eq  // eq = none
   2a554:	ubfx	x3, x1, #4, #1
   2a558:	orr	w0, w0, w3
   2a55c:	tbnz	w0, #0, 2a70c <rpl_re_compile_fastmap@@Base+0x364>
   2a560:	and	w1, w1, #0x6
   2a564:	cmp	w1, #0x4
   2a568:	ldr	x0, [x20, #48]
   2a56c:	b.eq	2a7e4 <rpl_re_compile_fastmap@@Base+0x43c>  // b.none
   2a570:	add	x26, x0, #0x1
   2a574:	str	x26, [sp, #120]
   2a578:	lsl	x0, x26, #4
   2a57c:	bl	a5f0 <malloc@plt>
   2a580:	mov	x7, x0
   2a584:	cbz	x0, 2a7dc <rpl_re_compile_fastmap@@Base+0x434>
   2a588:	ldr	w0, [sp, #136]
   2a58c:	mov	x5, x23
   2a590:	str	w0, [sp]
   2a594:	mov	x4, x27
   2a598:	mov	x2, x28
   2a59c:	mov	x1, x22
   2a5a0:	mov	x6, x26
   2a5a4:	mov	x3, x19
   2a5a8:	mov	x0, x20
   2a5ac:	str	x7, [sp, #136]
   2a5b0:	bl	259f8 <printf_parse@@Base+0x85e8>
   2a5b4:	ldr	x7, [sp, #136]
   2a5b8:	cbnz	w0, 2a6cc <rpl_re_compile_fastmap@@Base+0x324>
   2a5bc:	cbz	x21, 2a678 <rpl_re_compile_fastmap@@Base+0x2d0>
   2a5c0:	ldrb	w0, [x20, #56]
   2a5c4:	add	x23, x26, #0x1
   2a5c8:	ubfx	x0, x0, #1, #2
   2a5cc:	cbz	w0, 2a72c <rpl_re_compile_fastmap@@Base+0x384>
   2a5d0:	cmp	w0, #0x1
   2a5d4:	b.eq	2a810 <rpl_re_compile_fastmap@@Base+0x468>  // b.none
   2a5d8:	cmp	w0, #0x2
   2a5dc:	b.ne	2a8ec <rpl_re_compile_fastmap@@Base+0x544>  // b.any
   2a5e0:	ldr	x1, [x21]
   2a5e4:	mov	w22, w0
   2a5e8:	cmp	x1, x26
   2a5ec:	b.cc	2a8c8 <rpl_re_compile_fastmap@@Base+0x520>  // b.lo, b.ul, b.last
   2a5f0:	ldr	x0, [sp, #120]
   2a5f4:	cmp	x0, #0x0
   2a5f8:	b.le	2a860 <rpl_re_compile_fastmap@@Base+0x4b8>
   2a5fc:	ldp	x4, x3, [x21, #8]
   2a600:	mov	x0, x7
   2a604:	mov	x1, #0x0                   	// #0
   2a608:	ldr	x2, [x0]
   2a60c:	str	x2, [x4, x1, lsl #3]
   2a610:	add	x0, x0, #0x10
   2a614:	ldur	x2, [x0, #-8]
   2a618:	str	x2, [x3, x1, lsl #3]
   2a61c:	ldr	x2, [sp, #120]
   2a620:	add	x1, x1, #0x1
   2a624:	cmp	x2, x1
   2a628:	b.ne	2a608 <rpl_re_compile_fastmap@@Base+0x260>  // b.any
   2a62c:	mov	x0, x1
   2a630:	ldr	x2, [x21]
   2a634:	cmp	x2, x0
   2a638:	b.ls	2a664 <rpl_re_compile_fastmap@@Base+0x2bc>  // b.plast
   2a63c:	ldp	x5, x4, [x21, #8]
   2a640:	mov	x2, #0xffffffffffffffff    	// #-1
   2a644:	nop
   2a648:	str	x2, [x4, x0, lsl #3]
   2a64c:	add	x1, x1, #0x1
   2a650:	str	x2, [x5, x0, lsl #3]
   2a654:	mov	x0, x1
   2a658:	ldr	x3, [x21]
   2a65c:	cmp	x3, x1
   2a660:	b.hi	2a648 <rpl_re_compile_fastmap@@Base+0x2a0>  // b.pmore
   2a664:	ldrb	w0, [x20, #56]
   2a668:	bfi	w0, w22, #1, #2
   2a66c:	strb	w0, [x20, #56]
   2a670:	tst	w0, #0x6
   2a674:	b.eq	2a6d8 <rpl_re_compile_fastmap@@Base+0x330>  // b.none
   2a678:	ldr	w0, [sp, #132]
   2a67c:	ldr	x20, [x7]
   2a680:	cbz	w0, 2a6dc <rpl_re_compile_fastmap@@Base+0x334>
   2a684:	cmp	x19, x20
   2a688:	b.ne	2a8a4 <rpl_re_compile_fastmap@@Base+0x4fc>  // b.any
   2a68c:	ldr	x0, [x7, #8]
   2a690:	sub	x20, x0, x20
   2a694:	mov	x0, x7
   2a698:	bl	aa50 <free@plt>
   2a69c:	cbz	w24, 2a6e8 <rpl_re_compile_fastmap@@Base+0x340>
   2a6a0:	add	x0, x25, #0xe8
   2a6a4:	bl	af40 <pthread_mutex_unlock@plt>
   2a6a8:	mov	x0, x20
   2a6ac:	ldp	x29, x30, [sp, #16]
   2a6b0:	ldp	x19, x20, [sp, #32]
   2a6b4:	ldp	x21, x22, [sp, #48]
   2a6b8:	ldp	x23, x24, [sp, #64]
   2a6bc:	ldp	x25, x26, [sp, #80]
   2a6c0:	ldp	x27, x28, [sp, #96]
   2a6c4:	add	sp, sp, #0x90
   2a6c8:	ret
   2a6cc:	cmp	w0, #0x1
   2a6d0:	mov	x20, #0xffffffffffffffff    	// #-1
   2a6d4:	b.eq	2a6dc <rpl_re_compile_fastmap@@Base+0x334>  // b.none
   2a6d8:	mov	x20, #0xfffffffffffffffe    	// #-2
   2a6dc:	mov	x0, x7
   2a6e0:	bl	aa50 <free@plt>
   2a6e4:	cbnz	w24, 2a6a0 <rpl_re_compile_fastmap@@Base+0x2f8>
   2a6e8:	mov	x0, x20
   2a6ec:	ldp	x29, x30, [sp, #16]
   2a6f0:	ldp	x19, x20, [sp, #32]
   2a6f4:	ldp	x21, x22, [sp, #48]
   2a6f8:	ldp	x23, x24, [sp, #64]
   2a6fc:	ldp	x25, x26, [sp, #80]
   2a700:	ldp	x27, x28, [sp, #96]
   2a704:	add	sp, sp, #0x90
   2a708:	ret
   2a70c:	mov	x26, #0x1                   	// #1
   2a710:	mov	x0, #0x10                  	// #16
   2a714:	mov	x21, #0x0                   	// #0
   2a718:	str	x26, [sp, #120]
   2a71c:	b	2a57c <rpl_re_compile_fastmap@@Base+0x1d4>
   2a720:	mov	x0, x20
   2a724:	bl	af90 <rpl_re_compile_fastmap@plt>
   2a728:	b	2a548 <rpl_re_compile_fastmap@@Base+0x1a0>
   2a72c:	lsl	x28, x23, #3
   2a730:	str	x7, [sp, #136]
   2a734:	mov	x0, x28
   2a738:	bl	a5f0 <malloc@plt>
   2a73c:	str	x0, [x21, #8]
   2a740:	mov	x22, x0
   2a744:	ldr	x7, [sp, #136]
   2a748:	cbz	x0, 2a86c <rpl_re_compile_fastmap@@Base+0x4c4>
   2a74c:	mov	x0, x28
   2a750:	str	x7, [sp, #136]
   2a754:	bl	a5f0 <malloc@plt>
   2a758:	str	x0, [x21, #16]
   2a75c:	ldr	x7, [sp, #136]
   2a760:	cbz	x0, 2a874 <rpl_re_compile_fastmap@@Base+0x4cc>
   2a764:	mov	w22, #0x1                   	// #1
   2a768:	str	x23, [x21]
   2a76c:	b	2a5f0 <rpl_re_compile_fastmap@@Base+0x248>
   2a770:	mov	x27, x28
   2a774:	b	2a4f0 <rpl_re_compile_fastmap@@Base+0x148>
   2a778:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   2a77c:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   2a780:	mov	x27, #0x0                   	// #0
   2a784:	ldr	x0, [x0, #4040]
   2a788:	ldr	x1, [x1, #3944]
   2a78c:	cmp	x0, #0x0
   2a790:	cset	w0, ne  // ne = any
   2a794:	cmp	x1, #0x0
   2a798:	cset	w1, ne  // ne = any
   2a79c:	orr	w0, w0, w1
   2a7a0:	and	w24, w0, #0xff
   2a7a4:	tbnz	w0, #0, 2a51c <rpl_re_compile_fastmap@@Base+0x174>
   2a7a8:	ldrb	w0, [x20, #56]
   2a7ac:	ubfx	x0, x0, #5, #2
   2a7b0:	str	x0, [sp, #136]
   2a7b4:	b	2a548 <rpl_re_compile_fastmap@@Base+0x1a0>
   2a7b8:	mov	x20, #0xffffffffffffffff    	// #-1
   2a7bc:	mov	x0, x20
   2a7c0:	ldp	x29, x30, [sp, #16]
   2a7c4:	ldp	x19, x20, [sp, #32]
   2a7c8:	ldp	x21, x22, [sp, #48]
   2a7cc:	ldp	x25, x26, [sp, #80]
   2a7d0:	ldp	x27, x28, [sp, #96]
   2a7d4:	add	sp, sp, #0x90
   2a7d8:	ret
   2a7dc:	mov	x20, #0xfffffffffffffffe    	// #-2
   2a7e0:	b	2a69c <rpl_re_compile_fastmap@@Base+0x2f4>
   2a7e4:	ldr	x26, [x21]
   2a7e8:	cmp	x26, x0
   2a7ec:	b.hi	2a570 <rpl_re_compile_fastmap@@Base+0x1c8>  // b.pmore
   2a7f0:	str	x26, [sp, #120]
   2a7f4:	cmp	x26, #0x0
   2a7f8:	b.gt	2a578 <rpl_re_compile_fastmap@@Base+0x1d0>
   2a7fc:	mov	x26, #0x1                   	// #1
   2a800:	mov	x0, #0x10                  	// #16
   2a804:	mov	x21, #0x0                   	// #0
   2a808:	str	x26, [sp, #120]
   2a80c:	b	2a57c <rpl_re_compile_fastmap@@Base+0x1d4>
   2a810:	ldr	x1, [x21]
   2a814:	mov	w22, w0
   2a818:	cmp	x1, x23
   2a81c:	b.cs	2a5f0 <rpl_re_compile_fastmap@@Base+0x248>  // b.hs, b.nlast
   2a820:	ldr	x0, [x21, #8]
   2a824:	lsl	x26, x23, #3
   2a828:	mov	x1, x26
   2a82c:	str	x7, [sp, #136]
   2a830:	bl	a7e0 <realloc@plt>
   2a834:	mov	x28, x0
   2a838:	ldr	x7, [sp, #136]
   2a83c:	cbz	x0, 2a86c <rpl_re_compile_fastmap@@Base+0x4c4>
   2a840:	ldr	x0, [x21, #16]
   2a844:	mov	x1, x26
   2a848:	bl	a7e0 <realloc@plt>
   2a84c:	ldr	x7, [sp, #136]
   2a850:	cbz	x0, 2a88c <rpl_re_compile_fastmap@@Base+0x4e4>
   2a854:	stp	x23, x28, [x21]
   2a858:	str	x0, [x21, #16]
   2a85c:	b	2a5f0 <rpl_re_compile_fastmap@@Base+0x248>
   2a860:	mov	x0, #0x0                   	// #0
   2a864:	mov	x1, #0x0                   	// #0
   2a868:	b	2a630 <rpl_re_compile_fastmap@@Base+0x288>
   2a86c:	mov	w22, #0x0                   	// #0
   2a870:	b	2a664 <rpl_re_compile_fastmap@@Base+0x2bc>
   2a874:	mov	x0, x22
   2a878:	str	x7, [sp, #120]
   2a87c:	bl	aa50 <free@plt>
   2a880:	mov	w22, #0x0                   	// #0
   2a884:	ldr	x7, [sp, #120]
   2a888:	b	2a664 <rpl_re_compile_fastmap@@Base+0x2bc>
   2a88c:	mov	x0, x28
   2a890:	str	x7, [sp, #120]
   2a894:	bl	aa50 <free@plt>
   2a898:	mov	w22, #0x0                   	// #0
   2a89c:	ldr	x7, [sp, #120]
   2a8a0:	b	2a664 <rpl_re_compile_fastmap@@Base+0x2bc>
   2a8a4:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   2a8a8:	add	x3, x3, #0x980
   2a8ac:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2a8b0:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   2a8b4:	add	x3, x3, #0x280
   2a8b8:	add	x1, x1, #0x760
   2a8bc:	add	x0, x0, #0x8b0
   2a8c0:	mov	w2, #0x1be                 	// #446
   2a8c4:	bl	aea0 <__assert_fail@plt>
   2a8c8:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   2a8cc:	add	x3, x3, #0x980
   2a8d0:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2a8d4:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   2a8d8:	add	x3, x3, #0x270
   2a8dc:	add	x1, x1, #0x760
   2a8e0:	add	x0, x0, #0x898
   2a8e4:	mov	w2, #0x1fb                 	// #507
   2a8e8:	bl	aea0 <__assert_fail@plt>
   2a8ec:	adrp	x3, 2e000 <vasnprintf@@Base+0x31e0>
   2a8f0:	add	x3, x3, #0x980
   2a8f4:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2a8f8:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   2a8fc:	add	x3, x3, #0x270
   2a900:	add	x1, x1, #0x760
   2a904:	add	x0, x0, #0x878
   2a908:	mov	w2, #0x1f9                 	// #505
   2a90c:	bl	aea0 <__assert_fail@plt>
   2a910:	stp	x29, x30, [sp, #-112]!
   2a914:	cmp	x4, #0x0
   2a918:	mov	x29, sp
   2a91c:	stp	x27, x28, [sp, #80]
   2a920:	ldr	x27, [sp, #112]
   2a924:	stp	x19, x20, [sp, #16]
   2a928:	stp	x25, x26, [sp, #64]
   2a92c:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
   2a930:	mov	x25, x7
   2a934:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
   2a938:	ldrb	w7, [sp, #120]
   2a93c:	b.lt	2aa08 <rpl_re_compile_fastmap@@Base+0x660>  // b.tstop
   2a940:	mov	x19, x4
   2a944:	mov	x20, x2
   2a948:	adds	x28, x2, x4
   2a94c:	b.vs	2aa08 <rpl_re_compile_fastmap@@Base+0x660>
   2a950:	stp	x21, x22, [sp, #32]
   2a954:	mov	x22, x0
   2a958:	stp	x23, x24, [sp, #48]
   2a95c:	mov	x23, x5
   2a960:	mov	x24, x6
   2a964:	cbz	x4, 2aa24 <rpl_re_compile_fastmap@@Base+0x67c>
   2a968:	str	x1, [sp, #96]
   2a96c:	mov	x21, x3
   2a970:	mov	x26, #0x0                   	// #0
   2a974:	cbnz	x2, 2a9c4 <rpl_re_compile_fastmap@@Base+0x61c>
   2a978:	mov	x6, x25
   2a97c:	mov	x5, x27
   2a980:	mov	x4, x24
   2a984:	mov	x3, x23
   2a988:	mov	x2, x28
   2a98c:	mov	x1, x21
   2a990:	mov	x0, x22
   2a994:	bl	2a478 <rpl_re_compile_fastmap@@Base+0xd0>
   2a998:	mov	x19, x0
   2a99c:	mov	x0, x26
   2a9a0:	bl	aa50 <free@plt>
   2a9a4:	mov	x0, x19
   2a9a8:	ldp	x19, x20, [sp, #16]
   2a9ac:	ldp	x21, x22, [sp, #32]
   2a9b0:	ldp	x23, x24, [sp, #48]
   2a9b4:	ldp	x25, x26, [sp, #64]
   2a9b8:	ldp	x27, x28, [sp, #80]
   2a9bc:	ldp	x29, x30, [sp], #112
   2a9c0:	ret
   2a9c4:	mov	x0, x28
   2a9c8:	str	w7, [sp, #108]
   2a9cc:	bl	a5f0 <malloc@plt>
   2a9d0:	mov	x26, x0
   2a9d4:	cbz	x0, 2aa00 <rpl_re_compile_fastmap@@Base+0x658>
   2a9d8:	ldr	x1, [sp, #96]
   2a9dc:	mov	x2, x20
   2a9e0:	bl	a2c0 <memcpy@plt>
   2a9e4:	mov	x1, x21
   2a9e8:	mov	x2, x19
   2a9ec:	add	x0, x26, x20
   2a9f0:	bl	a2c0 <memcpy@plt>
   2a9f4:	ldr	w7, [sp, #108]
   2a9f8:	mov	x21, x26
   2a9fc:	b	2a978 <rpl_re_compile_fastmap@@Base+0x5d0>
   2aa00:	ldp	x21, x22, [sp, #32]
   2aa04:	ldp	x23, x24, [sp, #48]
   2aa08:	mov	x19, #0xfffffffffffffffe    	// #-2
   2aa0c:	mov	x0, x19
   2aa10:	ldp	x19, x20, [sp, #16]
   2aa14:	ldp	x25, x26, [sp, #64]
   2aa18:	ldp	x27, x28, [sp, #80]
   2aa1c:	ldp	x29, x30, [sp], #112
   2aa20:	ret
   2aa24:	mov	x21, x1
   2aa28:	mov	x26, #0x0                   	// #0
   2aa2c:	b	2a978 <rpl_re_compile_fastmap@@Base+0x5d0>

000000000002aa30 <rpl_regcomp@@Base>:
   2aa30:	stp	x29, x30, [sp, #-64]!
   2aa34:	mov	x29, sp
   2aa38:	stp	x19, x20, [sp, #16]
   2aa3c:	mov	w19, w2
   2aa40:	mov	x20, x0
   2aa44:	tst	x19, #0x1
   2aa48:	stp	x21, x22, [sp, #32]
   2aa4c:	mov	x21, #0xb2fc                	// #45820
   2aa50:	str	x23, [sp, #48]
   2aa54:	mov	x23, #0x2c6                 	// #710
   2aa58:	stp	xzr, xzr, [x0]
   2aa5c:	mov	x22, x1
   2aa60:	movk	x21, #0x3, lsl #16
   2aa64:	str	xzr, [x0, #16]
   2aa68:	movk	x23, #0x101, lsl #16
   2aa6c:	mov	x0, #0x100                 	// #256
   2aa70:	csel	x23, x21, x23, ne  // ne = any
   2aa74:	bl	a5f0 <malloc@plt>
   2aa78:	str	x0, [x20, #32]
   2aa7c:	cbz	x0, 2ab28 <rpl_regcomp@@Base+0xf8>
   2aa80:	sbfiz	x21, x19, #21, #32
   2aa84:	mov	w0, #0x0                   	// #0
   2aa88:	and	x21, x21, #0x400000
   2aa8c:	orr	x21, x21, x23
   2aa90:	tbnz	w19, #2, 2ab04 <rpl_regcomp@@Base+0xd4>
   2aa94:	ldrb	w1, [x20, #56]
   2aa98:	ubfx	x19, x19, #3, #1
   2aa9c:	ubfiz	w0, w0, #7, #1
   2aaa0:	mov	w2, #0x6f                  	// #111
   2aaa4:	orr	w19, w0, w19, lsl #4
   2aaa8:	and	w0, w1, w2
   2aaac:	orr	w19, w19, w0
   2aab0:	str	xzr, [x20, #40]
   2aab4:	strb	w19, [x20, #56]
   2aab8:	mov	x0, x22
   2aabc:	bl	a340 <strlen@plt>
   2aac0:	mov	x2, x0
   2aac4:	mov	x3, x21
   2aac8:	mov	x1, x22
   2aacc:	mov	x0, x20
   2aad0:	bl	293a0 <printf_parse@@Base+0xbf90>
   2aad4:	mov	w19, w0
   2aad8:	cmp	w0, #0x10
   2aadc:	b.eq	2ab14 <rpl_regcomp@@Base+0xe4>  // b.none
   2aae0:	cbnz	w0, 2ab18 <rpl_regcomp@@Base+0xe8>
   2aae4:	mov	x0, x20
   2aae8:	bl	af90 <rpl_re_compile_fastmap@plt>
   2aaec:	mov	w0, w19
   2aaf0:	ldp	x19, x20, [sp, #16]
   2aaf4:	ldp	x21, x22, [sp, #32]
   2aaf8:	ldr	x23, [sp, #48]
   2aafc:	ldp	x29, x30, [sp], #64
   2ab00:	ret
   2ab04:	and	x21, x21, #0xffffffffffffffbf
   2ab08:	mov	w0, #0x1                   	// #1
   2ab0c:	orr	x21, x21, #0x100
   2ab10:	b	2aa94 <rpl_regcomp@@Base+0x64>
   2ab14:	mov	w19, #0x8                   	// #8
   2ab18:	ldr	x0, [x20, #32]
   2ab1c:	bl	aa50 <free@plt>
   2ab20:	str	xzr, [x20, #32]
   2ab24:	b	2aaec <rpl_regcomp@@Base+0xbc>
   2ab28:	mov	w19, #0xc                   	// #12
   2ab2c:	mov	w0, w19
   2ab30:	ldp	x19, x20, [sp, #16]
   2ab34:	ldp	x21, x22, [sp, #32]
   2ab38:	ldr	x23, [sp, #48]
   2ab3c:	ldp	x29, x30, [sp], #64
   2ab40:	ret
   2ab44:	nop

000000000002ab48 <rpl_regerror@@Base>:
   2ab48:	stp	x29, x30, [sp, #-48]!
   2ab4c:	cmp	w0, #0x10
   2ab50:	mov	x29, sp
   2ab54:	stp	x19, x20, [sp, #16]
   2ab58:	stp	x21, x22, [sp, #32]
   2ab5c:	b.hi	2abd8 <rpl_regerror@@Base+0x90>  // b.pmore
   2ab60:	adrp	x1, 2e000 <vasnprintf@@Base+0x31e0>
   2ab64:	add	x1, x1, #0x980
   2ab68:	mov	w4, w0
   2ab6c:	mov	x20, x3
   2ab70:	add	x3, x1, #0x1e8
   2ab74:	add	x1, x1, #0x68
   2ab78:	mov	x21, x2
   2ab7c:	mov	w2, #0x5                   	// #5
   2ab80:	mov	x0, #0x0                   	// #0
   2ab84:	ldr	x3, [x3, w4, sxtw #3]
   2ab88:	add	x1, x1, x3
   2ab8c:	bl	ada0 <dcgettext@plt>
   2ab90:	mov	x22, x0
   2ab94:	bl	a340 <strlen@plt>
   2ab98:	add	x19, x0, #0x1
   2ab9c:	cbz	x20, 2abb8 <rpl_regerror@@Base+0x70>
   2aba0:	cmp	x19, x20
   2aba4:	mov	x2, x19
   2aba8:	b.hi	2abcc <rpl_regerror@@Base+0x84>  // b.pmore
   2abac:	mov	x1, x22
   2abb0:	mov	x0, x21
   2abb4:	bl	a2c0 <memcpy@plt>
   2abb8:	mov	x0, x19
   2abbc:	ldp	x19, x20, [sp, #16]
   2abc0:	ldp	x21, x22, [sp, #32]
   2abc4:	ldp	x29, x30, [sp], #48
   2abc8:	ret
   2abcc:	sub	x2, x20, #0x1
   2abd0:	strb	wzr, [x21, x2]
   2abd4:	b	2abac <rpl_regerror@@Base+0x64>
   2abd8:	bl	a900 <abort@plt>
   2abdc:	nop

000000000002abe0 <rpl_regfree@@Base>:
   2abe0:	stp	x29, x30, [sp, #-32]!
   2abe4:	mov	x29, sp
   2abe8:	stp	x19, x20, [sp, #16]
   2abec:	mov	x19, x0
   2abf0:	ldr	x20, [x0]
   2abf4:	cbz	x20, 2ac24 <rpl_regfree@@Base+0x44>
   2abf8:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   2abfc:	adrp	x0, 46000 <vasnprintf@@Base+0x1b1e0>
   2ac00:	ldr	x1, [x1, #3944]
   2ac04:	ldr	x0, [x0, #4040]
   2ac08:	cmp	x1, #0x0
   2ac0c:	ccmp	x0, #0x0, #0x0, eq  // eq = none
   2ac10:	b.eq	2ac1c <rpl_regfree@@Base+0x3c>  // b.none
   2ac14:	add	x0, x20, #0xe8
   2ac18:	bl	ac30 <pthread_mutex_destroy@plt>
   2ac1c:	mov	x0, x20
   2ac20:	bl	1f960 <printf_parse@@Base+0x2550>
   2ac24:	ldr	x0, [x19, #32]
   2ac28:	stp	xzr, xzr, [x19]
   2ac2c:	bl	aa50 <free@plt>
   2ac30:	str	xzr, [x19, #32]
   2ac34:	ldr	x0, [x19, #40]
   2ac38:	bl	aa50 <free@plt>
   2ac3c:	str	xzr, [x19, #40]
   2ac40:	ldp	x19, x20, [sp, #16]
   2ac44:	ldp	x29, x30, [sp], #32
   2ac48:	ret
   2ac4c:	nop

000000000002ac50 <rpl_regexec@@Base>:
   2ac50:	tst	w4, #0xfffffff8
   2ac54:	b.ne	2ad60 <rpl_regexec@@Base+0x110>  // b.any
   2ac58:	sub	sp, sp, #0x70
   2ac5c:	stp	x29, x30, [sp, #16]
   2ac60:	add	x29, sp, #0x10
   2ac64:	stp	x19, x20, [sp, #32]
   2ac68:	mov	w19, w4
   2ac6c:	mov	x20, x0
   2ac70:	stp	x21, x22, [sp, #48]
   2ac74:	mov	x21, x1
   2ac78:	mov	x22, x3
   2ac7c:	stp	x23, x24, [sp, #64]
   2ac80:	mov	x23, x2
   2ac84:	stp	x25, x26, [sp, #80]
   2ac88:	str	x27, [sp, #96]
   2ac8c:	tbnz	w19, #2, 2ad40 <rpl_regexec@@Base+0xf0>
   2ac90:	mov	x0, x1
   2ac94:	bl	a340 <strlen@plt>
   2ac98:	mov	x26, x0
   2ac9c:	mov	x27, #0x0                   	// #0
   2aca0:	adrp	x1, 46000 <vasnprintf@@Base+0x1b1e0>
   2aca4:	adrp	x2, 46000 <vasnprintf@@Base+0x1b1e0>
   2aca8:	ldr	x24, [x20]
   2acac:	ldr	x1, [x1, #4040]
   2acb0:	ldr	x2, [x2, #3944]
   2acb4:	cmp	x1, #0x0
   2acb8:	cset	w1, ne  // ne = any
   2acbc:	cmp	x2, #0x0
   2acc0:	cset	w0, ne  // ne = any
   2acc4:	orr	w1, w1, w0
   2acc8:	and	w25, w1, #0xff
   2accc:	tbz	w1, #0, 2acd8 <rpl_regexec@@Base+0x88>
   2acd0:	add	x0, x24, #0xe8
   2acd4:	bl	af00 <pthread_mutex_lock@plt>
   2acd8:	ldrb	w0, [x20, #56]
   2acdc:	str	w19, [sp]
   2ace0:	tbz	w0, #4, 2ad48 <rpl_regexec@@Base+0xf8>
   2ace4:	mov	x3, x27
   2ace8:	mov	x1, x21
   2acec:	mov	x0, x20
   2acf0:	mov	x7, #0x0                   	// #0
   2acf4:	mov	x6, #0x0                   	// #0
   2acf8:	mov	x5, x26
   2acfc:	mov	x4, x26
   2ad00:	mov	x2, x26
   2ad04:	bl	259f8 <printf_parse@@Base+0x85e8>
   2ad08:	mov	w19, w0
   2ad0c:	cbz	w25, 2ad18 <rpl_regexec@@Base+0xc8>
   2ad10:	add	x0, x24, #0xe8
   2ad14:	bl	af40 <pthread_mutex_unlock@plt>
   2ad18:	cmp	w19, #0x0
   2ad1c:	cset	w0, ne  // ne = any
   2ad20:	ldp	x29, x30, [sp, #16]
   2ad24:	ldp	x19, x20, [sp, #32]
   2ad28:	ldp	x21, x22, [sp, #48]
   2ad2c:	ldp	x23, x24, [sp, #64]
   2ad30:	ldp	x25, x26, [sp, #80]
   2ad34:	ldr	x27, [sp, #96]
   2ad38:	add	sp, sp, #0x70
   2ad3c:	ret
   2ad40:	ldp	x27, x26, [x3]
   2ad44:	b	2aca0 <rpl_regexec@@Base+0x50>
   2ad48:	mov	x7, x22
   2ad4c:	mov	x6, x23
   2ad50:	mov	x3, x27
   2ad54:	mov	x1, x21
   2ad58:	mov	x0, x20
   2ad5c:	b	2acf8 <rpl_regexec@@Base+0xa8>
   2ad60:	mov	w0, #0x2                   	// #2
   2ad64:	ret

000000000002ad68 <rpl_re_match@@Base>:
   2ad68:	mov	x6, x4
   2ad6c:	mov	x5, x2
   2ad70:	mov	w7, #0x1                   	// #1
   2ad74:	mov	x4, #0x0                   	// #0
   2ad78:	b	2a478 <rpl_re_compile_fastmap@@Base+0xd0>
   2ad7c:	nop

000000000002ad80 <rpl_re_search@@Base>:
   2ad80:	mov	x6, x5
   2ad84:	mov	w7, #0x0                   	// #0
   2ad88:	mov	x5, x2
   2ad8c:	b	2a478 <rpl_re_compile_fastmap@@Base+0xd0>

000000000002ad90 <rpl_re_match_2@@Base>:
   2ad90:	sub	sp, sp, #0x20
   2ad94:	mov	w8, #0x1                   	// #1
   2ad98:	stp	x29, x30, [sp, #16]
   2ad9c:	add	x29, sp, #0x10
   2ada0:	str	x7, [sp]
   2ada4:	mov	x7, x6
   2ada8:	strb	w8, [sp, #8]
   2adac:	mov	x6, #0x0                   	// #0
   2adb0:	bl	2a910 <rpl_re_compile_fastmap@@Base+0x568>
   2adb4:	ldp	x29, x30, [sp, #16]
   2adb8:	add	sp, sp, #0x20
   2adbc:	ret

000000000002adc0 <rpl_re_search_2@@Base>:
   2adc0:	sub	sp, sp, #0x20
   2adc4:	stp	x29, x30, [sp, #16]
   2adc8:	add	x29, sp, #0x10
   2adcc:	ldr	x8, [sp, #32]
   2add0:	str	x8, [sp]
   2add4:	strb	wzr, [sp, #8]
   2add8:	bl	2a910 <rpl_re_compile_fastmap@@Base+0x568>
   2addc:	ldp	x29, x30, [sp, #16]
   2ade0:	add	sp, sp, #0x20
   2ade4:	ret

000000000002ade8 <rpl_re_set_registers@@Base>:
   2ade8:	cbz	x2, 2ae08 <rpl_re_set_registers@@Base+0x20>
   2adec:	ldrb	w5, [x0, #56]
   2adf0:	mov	w6, #0x1                   	// #1
   2adf4:	bfi	w5, w6, #1, #2
   2adf8:	strb	w5, [x0, #56]
   2adfc:	stp	x2, x3, [x1]
   2ae00:	str	x4, [x1, #16]
   2ae04:	ret
   2ae08:	ldrb	w2, [x0, #56]
   2ae0c:	and	w2, w2, #0xfffffff9
   2ae10:	strb	w2, [x0, #56]
   2ae14:	stp	xzr, xzr, [x1]
   2ae18:	str	xzr, [x1, #16]
   2ae1c:	ret

000000000002ae20 <vasnprintf@@Base>:
   2ae20:	sub	sp, sp, #0x460
   2ae24:	stp	x29, x30, [sp]
   2ae28:	mov	x29, sp
   2ae2c:	add	x4, x29, #0x1d8
   2ae30:	stp	x23, x24, [sp, #48]
   2ae34:	mov	x23, x2
   2ae38:	add	x2, x29, #0xe0
   2ae3c:	stp	x19, x20, [sp, #16]
   2ae40:	mov	x20, x2
   2ae44:	mov	x19, x3
   2ae48:	stp	x21, x22, [sp, #32]
   2ae4c:	stp	x25, x26, [sp, #64]
   2ae50:	stp	x27, x28, [sp, #80]
   2ae54:	stp	x1, x4, [x29, #112]
   2ae58:	mov	x1, x4
   2ae5c:	str	x2, [x29, #128]
   2ae60:	str	x0, [x29, #152]
   2ae64:	mov	x0, x23
   2ae68:	bl	af20 <printf_parse@plt>
   2ae6c:	tbnz	w0, #31, 2b3d8 <vasnprintf@@Base+0x5b8>
   2ae70:	ldp	x4, x5, [x19]
   2ae74:	mov	x1, x20
   2ae78:	ldp	x2, x3, [x19, #16]
   2ae7c:	add	x0, x29, #0xb0
   2ae80:	stp	x4, x5, [x29, #176]
   2ae84:	stp	x2, x3, [x29, #192]
   2ae88:	bl	aae0 <printf_fetchargs@plt>
   2ae8c:	tbnz	w0, #31, 2b918 <vasnprintf@@Base+0xaf8>
   2ae90:	ldp	x0, x1, [x29, #488]
   2ae94:	adds	x0, x0, #0x7
   2ae98:	csinv	x0, x0, xzr, cc  // cc = lo, ul, last
   2ae9c:	adds	x1, x1, x0
   2aea0:	b.cs	2b3b8 <vasnprintf@@Base+0x598>  // b.hs, b.nlast
   2aea4:	adds	x0, x1, #0x6
   2aea8:	cset	x20, cs  // cs = hs, nlast
   2aeac:	b.cs	2b3b8 <vasnprintf@@Base+0x598>  // b.hs, b.nlast
   2aeb0:	cmp	x0, #0xf9f
   2aeb4:	b.ls	2b1c0 <vasnprintf@@Base+0x3a0>  // b.plast
   2aeb8:	cmn	x0, #0x1
   2aebc:	b.eq	2b3b8 <vasnprintf@@Base+0x598>  // b.none
   2aec0:	bl	a5f0 <malloc@plt>
   2aec4:	mov	x25, x0
   2aec8:	cbz	x0, 2b3b8 <vasnprintf@@Base+0x598>
   2aecc:	str	x0, [x29, #104]
   2aed0:	ldr	x0, [x29, #152]
   2aed4:	mov	x28, #0x0                   	// #0
   2aed8:	cbz	x0, 2aee4 <vasnprintf@@Base+0xc4>
   2aedc:	ldr	x0, [x29, #112]
   2aee0:	ldr	x28, [x0]
   2aee4:	adrp	x0, 2e000 <vasnprintf@@Base+0x31e0>
   2aee8:	ldr	x21, [x29, #480]
   2aeec:	add	x0, x0, #0xc10
   2aef0:	stp	xzr, x0, [x29, #136]
   2aef4:	add	x27, x29, #0xd4
   2aef8:	mov	x26, x27
   2aefc:	ldr	x22, [x21]
   2af00:	mov	x27, x25
   2af04:	ldr	x24, [x29, #152]
   2af08:	cmp	x22, x23
   2af0c:	b.eq	2b2b0 <vasnprintf@@Base+0x490>  // b.none
   2af10:	sub	x22, x22, x23
   2af14:	adds	x19, x20, x22
   2af18:	csinv	x19, x19, xzr, cc  // cc = lo, ul, last
   2af1c:	cmp	x28, x19
   2af20:	b.cs	2af84 <vasnprintf@@Base+0x164>  // b.hs, b.nlast
   2af24:	cmp	x28, #0x0
   2af28:	cbz	x28, 2b34c <vasnprintf@@Base+0x52c>
   2af2c:	b.lt	2b2c0 <vasnprintf@@Base+0x4a0>  // b.tstop
   2af30:	lsl	x7, x28, #1
   2af34:	cmp	x7, x19
   2af38:	csel	x28, x7, x19, cs  // cs = hs, nlast
   2af3c:	cmn	x28, #0x1
   2af40:	b.eq	2b2c0 <vasnprintf@@Base+0x4a0>  // b.none
   2af44:	ldr	x0, [x29, #152]
   2af48:	cmp	x24, x0
   2af4c:	cset	w25, eq  // eq = none
   2af50:	cmp	x24, #0x0
   2af54:	ccmp	w25, #0x0, #0x0, ne  // ne = any
   2af58:	b.eq	2b354 <vasnprintf@@Base+0x534>  // b.none
   2af5c:	mov	x0, x28
   2af60:	bl	a5f0 <malloc@plt>
   2af64:	cbz	x0, 2b2c0 <vasnprintf@@Base+0x4a0>
   2af68:	cmp	x20, #0x0
   2af6c:	ccmp	w25, #0x0, #0x4, ne  // ne = any
   2af70:	b.eq	2b910 <vasnprintf@@Base+0xaf0>  // b.none
   2af74:	mov	x1, x24
   2af78:	mov	x2, x20
   2af7c:	mov	x24, x0
   2af80:	bl	a2c0 <memcpy@plt>
   2af84:	mov	x2, x22
   2af88:	mov	x1, x23
   2af8c:	add	x0, x24, x20
   2af90:	bl	a2c0 <memcpy@plt>
   2af94:	ldr	x1, [x29, #136]
   2af98:	ldr	x0, [x29, #472]
   2af9c:	cmp	x0, x1
   2afa0:	b.eq	2b98c <vasnprintf@@Base+0xb6c>  // b.none
   2afa4:	ldrb	w1, [x21, #72]
   2afa8:	ldr	x0, [x21, #80]
   2afac:	cmp	w1, #0x25
   2afb0:	b.eq	2b210 <vasnprintf@@Base+0x3f0>  // b.none
   2afb4:	cmn	x0, #0x1
   2afb8:	b.eq	2b1bc <vasnprintf@@Base+0x39c>  // b.none
   2afbc:	ldr	x25, [x29, #232]
   2afc0:	lsl	x20, x0, #5
   2afc4:	cmp	w1, #0x6e
   2afc8:	add	x0, x25, x20
   2afcc:	ldr	w22, [x25, x20]
   2afd0:	b.eq	2b36c <vasnprintf@@Base+0x54c>  // b.none
   2afd4:	ldr	w0, [x21, #16]
   2afd8:	mov	w1, #0x25                  	// #37
   2afdc:	strb	w1, [x27]
   2afe0:	add	x20, x27, #0x1
   2afe4:	tbz	w0, #0, 2aff4 <vasnprintf@@Base+0x1d4>
   2afe8:	add	x20, x27, #0x2
   2afec:	mov	w1, #0x27                  	// #39
   2aff0:	strb	w1, [x27, #1]
   2aff4:	tbz	w0, #1, 2b000 <vasnprintf@@Base+0x1e0>
   2aff8:	mov	w1, #0x2d                  	// #45
   2affc:	strb	w1, [x20], #1
   2b000:	tbz	w0, #2, 2b00c <vasnprintf@@Base+0x1ec>
   2b004:	mov	w1, #0x2b                  	// #43
   2b008:	strb	w1, [x20], #1
   2b00c:	tbz	w0, #3, 2b018 <vasnprintf@@Base+0x1f8>
   2b010:	mov	w1, #0x20                  	// #32
   2b014:	strb	w1, [x20], #1
   2b018:	tbz	w0, #4, 2b024 <vasnprintf@@Base+0x204>
   2b01c:	mov	w1, #0x23                  	// #35
   2b020:	strb	w1, [x20], #1
   2b024:	tbz	w0, #6, 2b030 <vasnprintf@@Base+0x210>
   2b028:	mov	w1, #0x49                  	// #73
   2b02c:	strb	w1, [x20], #1
   2b030:	tbz	w0, #5, 2b03c <vasnprintf@@Base+0x21c>
   2b034:	mov	w0, #0x30                  	// #48
   2b038:	strb	w0, [x20], #1
   2b03c:	ldp	x1, x2, [x21, #24]
   2b040:	cmp	x1, x2
   2b044:	b.eq	2b058 <vasnprintf@@Base+0x238>  // b.none
   2b048:	sub	x2, x2, x1
   2b04c:	mov	x0, x20
   2b050:	add	x20, x20, x2
   2b054:	bl	a2c0 <memcpy@plt>
   2b058:	ldp	x1, x2, [x21, #48]
   2b05c:	cmp	x1, x2
   2b060:	b.eq	2b074 <vasnprintf@@Base+0x254>  // b.none
   2b064:	sub	x2, x2, x1
   2b068:	mov	x0, x20
   2b06c:	add	x20, x20, x2
   2b070:	bl	a2c0 <memcpy@plt>
   2b074:	cmp	w22, #0xc
   2b078:	b.eq	2b794 <vasnprintf@@Base+0x974>  // b.none
   2b07c:	b.hi	2b200 <vasnprintf@@Base+0x3e0>  // b.pmore
   2b080:	cmp	w22, #0x8
   2b084:	b.ls	2b1d8 <vasnprintf@@Base+0x3b8>  // b.plast
   2b088:	cmp	w22, #0xb
   2b08c:	b.eq	2b0a0 <vasnprintf@@Base+0x280>  // b.none
   2b090:	mov	w0, #0x6c                  	// #108
   2b094:	strb	w0, [x20], #1
   2b098:	mov	w0, #0x6c                  	// #108
   2b09c:	strb	w0, [x20], #1
   2b0a0:	ldrb	w0, [x21, #72]
   2b0a4:	strb	w0, [x20]
   2b0a8:	strb	wzr, [x20, #1]
   2b0ac:	ldr	x0, [x21, #40]
   2b0b0:	cmn	x0, #0x1
   2b0b4:	b.eq	2b1f8 <vasnprintf@@Base+0x3d8>  // b.none
   2b0b8:	lsl	x0, x0, #5
   2b0bc:	add	x1, x25, x0
   2b0c0:	ldr	w0, [x25, x0]
   2b0c4:	cmp	w0, #0x5
   2b0c8:	b.ne	2b1bc <vasnprintf@@Base+0x39c>  // b.any
   2b0cc:	ldr	w0, [x1, #16]
   2b0d0:	mov	w23, #0x1                   	// #1
   2b0d4:	str	w0, [x29, #216]
   2b0d8:	ldr	x0, [x21, #64]
   2b0dc:	cmn	x0, #0x1
   2b0e0:	b.eq	2b108 <vasnprintf@@Base+0x2e8>  // b.none
   2b0e4:	lsl	x0, x0, #5
   2b0e8:	add	x1, x25, x0
   2b0ec:	ldr	w0, [x25, x0]
   2b0f0:	cmp	w0, #0x5
   2b0f4:	b.ne	2b1bc <vasnprintf@@Base+0x39c>  // b.any
   2b0f8:	add	x0, x29, #0xd8
   2b0fc:	ldr	w1, [x1, #16]
   2b100:	str	w1, [x0, w23, uxtw #2]
   2b104:	add	w23, w23, #0x1
   2b108:	adds	x0, x19, #0x2
   2b10c:	b.cs	2b2b8 <vasnprintf@@Base+0x498>  // b.hs, b.nlast
   2b110:	cmp	x28, x0
   2b114:	b.cs	2b78c <vasnprintf@@Base+0x96c>  // b.hs, b.nlast
   2b118:	cmp	x28, #0x0
   2b11c:	cbnz	x28, 2b6a0 <vasnprintf@@Base+0x880>
   2b120:	cmp	x0, #0xc
   2b124:	b.hi	2b6b0 <vasnprintf@@Base+0x890>  // b.pmore
   2b128:	mov	x28, #0xc                   	// #12
   2b12c:	ldr	x0, [x29, #152]
   2b130:	cmp	x24, x0
   2b134:	cset	w1, eq  // eq = none
   2b138:	str	w1, [x29, #168]
   2b13c:	cmp	x24, #0x0
   2b140:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   2b144:	b.eq	2b6d8 <vasnprintf@@Base+0x8b8>  // b.none
   2b148:	mov	x0, x28
   2b14c:	bl	a5f0 <malloc@plt>
   2b150:	ldr	w1, [x29, #168]
   2b154:	mov	x25, x0
   2b158:	cbz	x0, 2b2c0 <vasnprintf@@Base+0x4a0>
   2b15c:	cmp	x19, #0x0
   2b160:	ccmp	w1, #0x0, #0x4, ne  // ne = any
   2b164:	b.eq	2b174 <vasnprintf@@Base+0x354>  // b.none
   2b168:	mov	x1, x24
   2b16c:	mov	x2, x19
   2b170:	bl	a2c0 <memcpy@plt>
   2b174:	sub	w0, w22, #0x1
   2b178:	strb	wzr, [x25, x19]
   2b17c:	sub	x22, x28, x19
   2b180:	str	w0, [x29, #164]
   2b184:	mov	x24, #0x7fffffff            	// #2147483647
   2b188:	bl	aeb0 <__errno_location@plt>
   2b18c:	str	x0, [x29, #168]
   2b190:	ldr	w0, [x0]
   2b194:	str	w0, [x29, #160]
   2b198:	mov	w0, #0xffffffff            	// #-1
   2b19c:	str	w0, [x29, #212]
   2b1a0:	ldr	x0, [x29, #168]
   2b1a4:	cmp	x22, x24
   2b1a8:	csel	x1, x22, x24, ls  // ls = plast
   2b1ac:	str	wzr, [x0]
   2b1b0:	ldr	w0, [x29, #164]
   2b1b4:	cmp	w0, #0x10
   2b1b8:	b.ls	2b3f0 <vasnprintf@@Base+0x5d0>  // b.plast
   2b1bc:	bl	a900 <abort@plt>
   2b1c0:	add	x0, x1, #0x15
   2b1c4:	str	xzr, [x29, #104]
   2b1c8:	and	x0, x0, #0xfffffffffffffff0
   2b1cc:	sub	sp, sp, x0
   2b1d0:	mov	x25, sp
   2b1d4:	b	2aed0 <vasnprintf@@Base+0xb0>
   2b1d8:	cmp	w22, #0x6
   2b1dc:	b.hi	2b098 <vasnprintf@@Base+0x278>  // b.pmore
   2b1e0:	ldrb	w0, [x21, #72]
   2b1e4:	strb	w0, [x20]
   2b1e8:	strb	wzr, [x20, #1]
   2b1ec:	ldr	x0, [x21, #40]
   2b1f0:	cmn	x0, #0x1
   2b1f4:	b.ne	2b0b8 <vasnprintf@@Base+0x298>  // b.any
   2b1f8:	mov	w23, #0x0                   	// #0
   2b1fc:	b	2b0d8 <vasnprintf@@Base+0x2b8>
   2b200:	sub	w0, w22, #0xe
   2b204:	tst	w0, #0xfffffffd
   2b208:	b.ne	2b0a0 <vasnprintf@@Base+0x280>  // b.any
   2b20c:	b	2b098 <vasnprintf@@Base+0x278>
   2b210:	cmn	x0, #0x1
   2b214:	b.ne	2b1bc <vasnprintf@@Base+0x39c>  // b.any
   2b218:	adds	x2, x19, #0x1
   2b21c:	csel	x20, x2, x0, cc  // cc = lo, ul, last
   2b220:	cmp	x28, x20
   2b224:	b.cs	2b288 <vasnprintf@@Base+0x468>  // b.hs, b.nlast
   2b228:	cmp	x28, #0x0
   2b22c:	cbnz	x28, 2b6f0 <vasnprintf@@Base+0x8d0>
   2b230:	mov	x7, #0xc                   	// #12
   2b234:	cmp	x7, x20
   2b238:	csel	x28, x7, x20, cs  // cs = hs, nlast
   2b23c:	cmn	x28, #0x1
   2b240:	b.eq	2b2c0 <vasnprintf@@Base+0x4a0>  // b.none
   2b244:	ldr	x0, [x29, #152]
   2b248:	cmp	x24, x0
   2b24c:	cset	w22, eq  // eq = none
   2b250:	cmp	x24, #0x0
   2b254:	ccmp	w22, #0x0, #0x0, ne  // ne = any
   2b258:	b.eq	2b8f8 <vasnprintf@@Base+0xad8>  // b.none
   2b25c:	mov	x0, x28
   2b260:	bl	a5f0 <malloc@plt>
   2b264:	cbz	x0, 2b2c0 <vasnprintf@@Base+0x4a0>
   2b268:	cmp	x19, #0x0
   2b26c:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   2b270:	b.eq	2b984 <vasnprintf@@Base+0xb64>  // b.none
   2b274:	mov	x1, x24
   2b278:	mov	x2, x19
   2b27c:	mov	x24, x0
   2b280:	bl	a2c0 <memcpy@plt>
   2b284:	nop
   2b288:	mov	w0, #0x25                  	// #37
   2b28c:	strb	w0, [x24, x19]
   2b290:	add	x21, x21, #0x58
   2b294:	ldur	x23, [x21, #-80]
   2b298:	ldr	x0, [x29, #136]
   2b29c:	ldr	x22, [x21]
   2b2a0:	add	x0, x0, #0x1
   2b2a4:	str	x0, [x29, #136]
   2b2a8:	cmp	x22, x23
   2b2ac:	b.ne	2af10 <vasnprintf@@Base+0xf0>  // b.any
   2b2b0:	mov	x19, x20
   2b2b4:	b	2af94 <vasnprintf@@Base+0x174>
   2b2b8:	cmn	x28, #0x1
   2b2bc:	b.eq	2b78c <vasnprintf@@Base+0x96c>  // b.none
   2b2c0:	bl	aeb0 <__errno_location@plt>
   2b2c4:	str	x0, [x29, #168]
   2b2c8:	ldr	x0, [x29, #152]
   2b2cc:	cmp	x24, #0x0
   2b2d0:	ccmp	x24, x0, #0x4, ne  // ne = any
   2b2d4:	b.ne	2b704 <vasnprintf@@Base+0x8e4>  // b.any
   2b2d8:	ldr	x0, [x29, #104]
   2b2dc:	cbz	x0, 2b2e4 <vasnprintf@@Base+0x4c4>
   2b2e0:	bl	aa50 <free@plt>
   2b2e4:	ldr	x1, [x29, #120]
   2b2e8:	ldr	x0, [x29, #480]
   2b2ec:	add	x1, x1, #0x20
   2b2f0:	cmp	x0, x1
   2b2f4:	b.eq	2b2fc <vasnprintf@@Base+0x4dc>  // b.none
   2b2f8:	bl	aa50 <free@plt>
   2b2fc:	ldr	x1, [x29, #128]
   2b300:	ldr	x0, [x29, #232]
   2b304:	add	x1, x1, #0x10
   2b308:	cmp	x0, x1
   2b30c:	b.eq	2b314 <vasnprintf@@Base+0x4f4>  // b.none
   2b310:	bl	aa50 <free@plt>
   2b314:	ldr	x1, [x29, #168]
   2b318:	mov	w0, #0xc                   	// #12
   2b31c:	mov	x24, #0x0                   	// #0
   2b320:	str	w0, [x1]
   2b324:	mov	sp, x29
   2b328:	mov	x0, x24
   2b32c:	ldp	x29, x30, [sp]
   2b330:	ldp	x19, x20, [sp, #16]
   2b334:	ldp	x21, x22, [sp, #32]
   2b338:	ldp	x23, x24, [sp, #48]
   2b33c:	ldp	x25, x26, [sp, #64]
   2b340:	ldp	x27, x28, [sp, #80]
   2b344:	add	sp, sp, #0x460
   2b348:	ret
   2b34c:	mov	x7, #0xc                   	// #12
   2b350:	b	2af34 <vasnprintf@@Base+0x114>
   2b354:	mov	x1, x28
   2b358:	mov	x0, x24
   2b35c:	bl	a7e0 <realloc@plt>
   2b360:	cbz	x0, 2b6fc <vasnprintf@@Base+0x8dc>
   2b364:	mov	x24, x0
   2b368:	b	2af84 <vasnprintf@@Base+0x164>
   2b36c:	cmp	w22, #0x14
   2b370:	b.eq	2b95c <vasnprintf@@Base+0xb3c>  // b.none
   2b374:	b.ls	2b398 <vasnprintf@@Base+0x578>  // b.plast
   2b378:	cmp	w22, #0x15
   2b37c:	b.eq	2b388 <vasnprintf@@Base+0x568>  // b.none
   2b380:	cmp	w22, #0x16
   2b384:	b.ne	2b1bc <vasnprintf@@Base+0x39c>  // b.any
   2b388:	ldr	x0, [x0, #16]
   2b38c:	mov	x20, x19
   2b390:	str	x19, [x0]
   2b394:	b	2b290 <vasnprintf@@Base+0x470>
   2b398:	cmp	w22, #0x12
   2b39c:	b.eq	2b3e0 <vasnprintf@@Base+0x5c0>  // b.none
   2b3a0:	cmp	w22, #0x13
   2b3a4:	b.ne	2b1bc <vasnprintf@@Base+0x39c>  // b.any
   2b3a8:	ldr	x0, [x0, #16]
   2b3ac:	mov	x20, x19
   2b3b0:	strh	w19, [x0]
   2b3b4:	b	2b290 <vasnprintf@@Base+0x470>
   2b3b8:	bl	aeb0 <__errno_location@plt>
   2b3bc:	str	x0, [x29, #168]
   2b3c0:	ldr	x1, [x29, #120]
   2b3c4:	ldr	x0, [x29, #480]
   2b3c8:	add	x1, x1, #0x20
   2b3cc:	cmp	x0, x1
   2b3d0:	b.ne	2b2f8 <vasnprintf@@Base+0x4d8>  // b.any
   2b3d4:	b	2b2fc <vasnprintf@@Base+0x4dc>
   2b3d8:	mov	x24, #0x0                   	// #0
   2b3dc:	b	2b324 <vasnprintf@@Base+0x504>
   2b3e0:	ldr	x0, [x0, #16]
   2b3e4:	mov	x20, x19
   2b3e8:	strb	w19, [x0]
   2b3ec:	b	2b290 <vasnprintf@@Base+0x470>
   2b3f0:	ldr	x2, [x29, #144]
   2b3f4:	ldr	x3, [x29, #232]
   2b3f8:	ldrh	w0, [x2, w0, uxtw #1]
   2b3fc:	adr	x2, 2b408 <vasnprintf@@Base+0x5e8>
   2b400:	add	x0, x2, w0, sxth #2
   2b404:	br	x0
   2b408:	ldr	x2, [x21, #80]
   2b40c:	cmp	w23, #0x1
   2b410:	add	x0, x25, x19
   2b414:	add	x2, x3, x2, lsl #5
   2b418:	ldr	x4, [x2, #16]
   2b41c:	b.eq	2b75c <vasnprintf@@Base+0x93c>  // b.none
   2b420:	cmp	w23, #0x2
   2b424:	b.eq	2b73c <vasnprintf@@Base+0x91c>  // b.none
   2b428:	mov	x3, x4
   2b42c:	mov	x2, x27
   2b430:	mov	x4, x26
   2b434:	str	x1, [x29, #96]
   2b438:	bl	a540 <snprintf@plt>
   2b43c:	ldr	x1, [x29, #96]
   2b440:	ldr	w2, [x29, #212]
   2b444:	tbnz	w2, #31, 2b548 <vasnprintf@@Base+0x728>
   2b448:	cmp	x1, w2, sxtw
   2b44c:	sxtw	x3, w2
   2b450:	b.ls	2b460 <vasnprintf@@Base+0x640>  // b.plast
   2b454:	add	x3, x25, x3
   2b458:	ldrb	w3, [x3, x19]
   2b45c:	cbnz	w3, 2b1bc <vasnprintf@@Base+0x39c>
   2b460:	cmp	w2, w0
   2b464:	b.ge	2b470 <vasnprintf@@Base+0x650>  // b.tcont
   2b468:	mov	w2, w0
   2b46c:	str	w0, [x29, #212]
   2b470:	add	w0, w2, #0x1
   2b474:	cmp	x0, x1
   2b478:	b.cc	2b568 <vasnprintf@@Base+0x748>  // b.lo, b.ul, b.last
   2b47c:	mov	x0, #0x7ffffffe            	// #2147483646
   2b480:	cmp	x22, x0
   2b484:	b.hi	2b898 <vasnprintf@@Base+0xa78>  // b.pmore
   2b488:	add	w2, w2, #0x2
   2b48c:	adds	x2, x2, x19
   2b490:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
   2b494:	tbnz	x28, #63, 2b710 <vasnprintf@@Base+0x8f0>
   2b498:	lsl	x0, x28, #1
   2b49c:	cmp	x0, x2
   2b4a0:	csel	x2, x0, x2, cs  // cs = hs, nlast
   2b4a4:	cmp	x28, x2
   2b4a8:	b.cs	2b198 <vasnprintf@@Base+0x378>  // b.hs, b.nlast
   2b4ac:	cmp	x0, x2
   2b4b0:	csel	x28, x0, x2, cs  // cs = hs, nlast
   2b4b4:	cmn	x28, #0x1
   2b4b8:	b.eq	2b718 <vasnprintf@@Base+0x8f8>  // b.none
   2b4bc:	ldr	x0, [x29, #152]
   2b4c0:	cmp	x25, x0
   2b4c4:	cset	w22, eq  // eq = none
   2b4c8:	cmp	x25, #0x0
   2b4cc:	ccmp	w22, #0x0, #0x0, ne  // ne = any
   2b4d0:	b.eq	2b720 <vasnprintf@@Base+0x900>  // b.none
   2b4d4:	mov	x0, x28
   2b4d8:	bl	a5f0 <malloc@plt>
   2b4dc:	cbz	x0, 2b718 <vasnprintf@@Base+0x8f8>
   2b4e0:	cmp	x19, #0x0
   2b4e4:	ccmp	w22, #0x0, #0x4, ne  // ne = any
   2b4e8:	b.eq	2b780 <vasnprintf@@Base+0x960>  // b.none
   2b4ec:	mov	x1, x25
   2b4f0:	mov	x2, x19
   2b4f4:	mov	x25, x0
   2b4f8:	sub	x22, x28, x19
   2b4fc:	bl	a2c0 <memcpy@plt>
   2b500:	b	2b198 <vasnprintf@@Base+0x378>
   2b504:	ldr	x2, [x21, #80]
   2b508:	cmp	w23, #0x1
   2b50c:	add	x0, x25, x19
   2b510:	add	x2, x3, x2, lsl #5
   2b514:	ldr	w4, [x2, #16]
   2b518:	b.eq	2b5d0 <vasnprintf@@Base+0x7b0>  // b.none
   2b51c:	cmp	w23, #0x2
   2b520:	b.eq	2b610 <vasnprintf@@Base+0x7f0>  // b.none
   2b524:	mov	w3, w4
   2b528:	mov	x2, x27
   2b52c:	mov	x4, x26
   2b530:	str	x1, [x29, #96]
   2b534:	bl	a540 <snprintf@plt>
   2b538:	ldr	w2, [x29, #212]
   2b53c:	ldr	x1, [x29, #96]
   2b540:	tbz	w2, #31, 2b448 <vasnprintf@@Base+0x628>
   2b544:	nop
   2b548:	ldrb	w2, [x20, #1]
   2b54c:	cbnz	w2, 2b778 <vasnprintf@@Base+0x958>
   2b550:	tbnz	w0, #31, 2b810 <vasnprintf@@Base+0x9f0>
   2b554:	mov	w2, w0
   2b558:	str	w0, [x29, #212]
   2b55c:	add	w0, w2, #0x1
   2b560:	cmp	x0, x1
   2b564:	b.cs	2b47c <vasnprintf@@Base+0x65c>  // b.hs, b.nlast
   2b568:	ldr	x0, [x29, #168]
   2b56c:	add	x20, x19, w2, sxtw
   2b570:	ldr	w1, [x29, #160]
   2b574:	mov	x24, x25
   2b578:	str	w1, [x0]
   2b57c:	b	2b290 <vasnprintf@@Base+0x470>
   2b580:	ldr	x2, [x21, #80]
   2b584:	cmp	w23, #0x1
   2b588:	add	x0, x25, x19
   2b58c:	add	x2, x3, x2, lsl #5
   2b590:	ldr	q0, [x2, #16]
   2b594:	b.eq	2b7bc <vasnprintf@@Base+0x99c>  // b.none
   2b598:	cmp	w23, #0x2
   2b59c:	b.eq	2b7a0 <vasnprintf@@Base+0x980>  // b.none
   2b5a0:	mov	x3, x26
   2b5a4:	mov	x2, x27
   2b5a8:	str	x1, [x29, #96]
   2b5ac:	bl	a540 <snprintf@plt>
   2b5b0:	ldr	x1, [x29, #96]
   2b5b4:	b	2b440 <vasnprintf@@Base+0x620>
   2b5b8:	ldr	x2, [x21, #80]
   2b5bc:	cmp	w23, #0x1
   2b5c0:	add	x0, x25, x19
   2b5c4:	add	x2, x3, x2, lsl #5
   2b5c8:	ldrh	w4, [x2, #16]
   2b5cc:	b.ne	2b51c <vasnprintf@@Base+0x6fc>  // b.any
   2b5d0:	ldr	w3, [x29, #216]
   2b5d4:	mov	x5, x26
   2b5d8:	mov	x2, x27
   2b5dc:	str	x1, [x29, #96]
   2b5e0:	bl	a540 <snprintf@plt>
   2b5e4:	ldr	x1, [x29, #96]
   2b5e8:	b	2b440 <vasnprintf@@Base+0x620>
   2b5ec:	ldr	x2, [x21, #80]
   2b5f0:	cmp	w23, #0x1
   2b5f4:	add	x0, x25, x19
   2b5f8:	add	x2, x3, x2, lsl #5
   2b5fc:	ldrsh	w4, [x2, #16]
   2b600:	b.eq	2b5d0 <vasnprintf@@Base+0x7b0>  // b.none
   2b604:	cmp	w23, #0x2
   2b608:	b.ne	2b524 <vasnprintf@@Base+0x704>  // b.any
   2b60c:	nop
   2b610:	mov	w5, w4
   2b614:	mov	x6, x26
   2b618:	ldp	w3, w4, [x29, #216]
   2b61c:	mov	x2, x27
   2b620:	str	x1, [x29, #96]
   2b624:	bl	a540 <snprintf@plt>
   2b628:	ldr	x1, [x29, #96]
   2b62c:	b	2b440 <vasnprintf@@Base+0x620>
   2b630:	ldr	x2, [x21, #80]
   2b634:	cmp	w23, #0x1
   2b638:	add	x0, x25, x19
   2b63c:	add	x2, x3, x2, lsl #5
   2b640:	ldr	d0, [x2, #16]
   2b644:	b.eq	2b7f4 <vasnprintf@@Base+0x9d4>  // b.none
   2b648:	cmp	w23, #0x2
   2b64c:	b.eq	2b7d8 <vasnprintf@@Base+0x9b8>  // b.none
   2b650:	mov	x3, x26
   2b654:	mov	x2, x27
   2b658:	str	x1, [x29, #96]
   2b65c:	bl	a540 <snprintf@plt>
   2b660:	ldr	x1, [x29, #96]
   2b664:	b	2b440 <vasnprintf@@Base+0x620>
   2b668:	ldr	x2, [x21, #80]
   2b66c:	cmp	w23, #0x1
   2b670:	add	x0, x25, x19
   2b674:	add	x2, x3, x2, lsl #5
   2b678:	ldrb	w4, [x2, #16]
   2b67c:	b.ne	2b51c <vasnprintf@@Base+0x6fc>  // b.any
   2b680:	b	2b5d0 <vasnprintf@@Base+0x7b0>
   2b684:	ldr	x2, [x21, #80]
   2b688:	cmp	w23, #0x1
   2b68c:	add	x0, x25, x19
   2b690:	add	x2, x3, x2, lsl #5
   2b694:	ldrsb	w4, [x2, #16]
   2b698:	b.ne	2b51c <vasnprintf@@Base+0x6fc>  // b.any
   2b69c:	b	2b5d0 <vasnprintf@@Base+0x7b0>
   2b6a0:	b.lt	2b2c0 <vasnprintf@@Base+0x4a0>  // b.tstop
   2b6a4:	lsl	x28, x28, #1
   2b6a8:	cmp	x28, x0
   2b6ac:	b.cs	2b12c <vasnprintf@@Base+0x30c>  // b.hs, b.nlast
   2b6b0:	cmn	x0, #0x1
   2b6b4:	b.eq	2b2c0 <vasnprintf@@Base+0x4a0>  // b.none
   2b6b8:	mov	x28, x0
   2b6bc:	ldr	x0, [x29, #152]
   2b6c0:	cmp	x24, x0
   2b6c4:	cset	w1, eq  // eq = none
   2b6c8:	str	w1, [x29, #168]
   2b6cc:	cmp	x24, #0x0
   2b6d0:	ccmp	w1, #0x0, #0x0, ne  // ne = any
   2b6d4:	b.ne	2b148 <vasnprintf@@Base+0x328>  // b.any
   2b6d8:	mov	x1, x28
   2b6dc:	mov	x0, x24
   2b6e0:	bl	a7e0 <realloc@plt>
   2b6e4:	mov	x25, x0
   2b6e8:	cbnz	x0, 2b174 <vasnprintf@@Base+0x354>
   2b6ec:	b	2b2c0 <vasnprintf@@Base+0x4a0>
   2b6f0:	b.lt	2b2c0 <vasnprintf@@Base+0x4a0>  // b.tstop
   2b6f4:	lsl	x7, x28, #1
   2b6f8:	b	2b234 <vasnprintf@@Base+0x414>
   2b6fc:	bl	aeb0 <__errno_location@plt>
   2b700:	str	x0, [x29, #168]
   2b704:	mov	x0, x24
   2b708:	bl	aa50 <free@plt>
   2b70c:	b	2b2d8 <vasnprintf@@Base+0x4b8>
   2b710:	cmn	x28, #0x1
   2b714:	b.eq	2b198 <vasnprintf@@Base+0x378>  // b.none
   2b718:	mov	x24, x25
   2b71c:	b	2b2c8 <vasnprintf@@Base+0x4a8>
   2b720:	mov	x1, x28
   2b724:	mov	x0, x25
   2b728:	bl	a7e0 <realloc@plt>
   2b72c:	cbz	x0, 2b718 <vasnprintf@@Base+0x8f8>
   2b730:	mov	x25, x0
   2b734:	sub	x22, x28, x19
   2b738:	b	2b198 <vasnprintf@@Base+0x378>
   2b73c:	mov	x5, x4
   2b740:	mov	x6, x26
   2b744:	ldp	w3, w4, [x29, #216]
   2b748:	mov	x2, x27
   2b74c:	str	x1, [x29, #96]
   2b750:	bl	a540 <snprintf@plt>
   2b754:	ldr	x1, [x29, #96]
   2b758:	b	2b440 <vasnprintf@@Base+0x620>
   2b75c:	ldr	w3, [x29, #216]
   2b760:	mov	x5, x26
   2b764:	mov	x2, x27
   2b768:	str	x1, [x29, #96]
   2b76c:	bl	a540 <snprintf@plt>
   2b770:	ldr	x1, [x29, #96]
   2b774:	b	2b440 <vasnprintf@@Base+0x620>
   2b778:	strb	wzr, [x20, #1]
   2b77c:	b	2b198 <vasnprintf@@Base+0x378>
   2b780:	mov	x25, x0
   2b784:	sub	x22, x28, x19
   2b788:	b	2b198 <vasnprintf@@Base+0x378>
   2b78c:	mov	x25, x24
   2b790:	b	2b174 <vasnprintf@@Base+0x354>
   2b794:	mov	w0, #0x4c                  	// #76
   2b798:	strb	w0, [x20], #1
   2b79c:	b	2b0a0 <vasnprintf@@Base+0x280>
   2b7a0:	ldp	w3, w4, [x29, #216]
   2b7a4:	mov	x5, x26
   2b7a8:	mov	x2, x27
   2b7ac:	str	x1, [x29, #96]
   2b7b0:	bl	a540 <snprintf@plt>
   2b7b4:	ldr	x1, [x29, #96]
   2b7b8:	b	2b440 <vasnprintf@@Base+0x620>
   2b7bc:	ldr	w3, [x29, #216]
   2b7c0:	mov	x4, x26
   2b7c4:	mov	x2, x27
   2b7c8:	str	x1, [x29, #96]
   2b7cc:	bl	a540 <snprintf@plt>
   2b7d0:	ldr	x1, [x29, #96]
   2b7d4:	b	2b440 <vasnprintf@@Base+0x620>
   2b7d8:	ldp	w3, w4, [x29, #216]
   2b7dc:	mov	x5, x26
   2b7e0:	mov	x2, x27
   2b7e4:	str	x1, [x29, #96]
   2b7e8:	bl	a540 <snprintf@plt>
   2b7ec:	ldr	x1, [x29, #96]
   2b7f0:	b	2b440 <vasnprintf@@Base+0x620>
   2b7f4:	ldr	w3, [x29, #216]
   2b7f8:	mov	x4, x26
   2b7fc:	mov	x2, x27
   2b800:	str	x1, [x29, #96]
   2b804:	bl	a540 <snprintf@plt>
   2b808:	ldr	x1, [x29, #96]
   2b80c:	b	2b440 <vasnprintf@@Base+0x620>
   2b810:	ldr	x0, [x29, #168]
   2b814:	mov	x26, x25
   2b818:	ldr	w19, [x0]
   2b81c:	cbnz	w19, 2b83c <vasnprintf@@Base+0xa1c>
   2b820:	ldrb	w0, [x21, #72]
   2b824:	mov	w19, #0x54                  	// #84
   2b828:	mov	w1, #0x16                  	// #22
   2b82c:	and	w0, w0, #0xffffffef
   2b830:	and	w0, w0, #0xff
   2b834:	cmp	w0, #0x63
   2b838:	csel	w19, w19, w1, eq  // eq = none
   2b83c:	ldr	x0, [x29, #152]
   2b840:	cmp	x26, #0x0
   2b844:	ccmp	x26, x0, #0x4, ne  // ne = any
   2b848:	b.ne	2b96c <vasnprintf@@Base+0xb4c>  // b.any
   2b84c:	ldr	x0, [x29, #104]
   2b850:	cbz	x0, 2b858 <vasnprintf@@Base+0xa38>
   2b854:	bl	aa50 <free@plt>
   2b858:	ldr	x1, [x29, #120]
   2b85c:	ldr	x0, [x29, #480]
   2b860:	add	x1, x1, #0x20
   2b864:	cmp	x0, x1
   2b868:	b.eq	2b870 <vasnprintf@@Base+0xa50>  // b.none
   2b86c:	bl	aa50 <free@plt>
   2b870:	ldr	x1, [x29, #128]
   2b874:	ldr	x0, [x29, #232]
   2b878:	add	x1, x1, #0x10
   2b87c:	cmp	x0, x1
   2b880:	b.eq	2b888 <vasnprintf@@Base+0xa68>  // b.none
   2b884:	bl	aa50 <free@plt>
   2b888:	ldr	x0, [x29, #168]
   2b88c:	mov	x24, #0x0                   	// #0
   2b890:	str	w19, [x0]
   2b894:	b	2b324 <vasnprintf@@Base+0x504>
   2b898:	ldr	x0, [x29, #152]
   2b89c:	cmp	x25, #0x0
   2b8a0:	ccmp	x25, x0, #0x4, ne  // ne = any
   2b8a4:	b.ne	2b978 <vasnprintf@@Base+0xb58>  // b.any
   2b8a8:	ldr	x0, [x29, #104]
   2b8ac:	cbz	x0, 2b8b4 <vasnprintf@@Base+0xa94>
   2b8b0:	bl	aa50 <free@plt>
   2b8b4:	ldr	x1, [x29, #120]
   2b8b8:	ldr	x0, [x29, #480]
   2b8bc:	add	x1, x1, #0x20
   2b8c0:	cmp	x0, x1
   2b8c4:	b.eq	2b8cc <vasnprintf@@Base+0xaac>  // b.none
   2b8c8:	bl	aa50 <free@plt>
   2b8cc:	ldr	x1, [x29, #128]
   2b8d0:	ldr	x0, [x29, #232]
   2b8d4:	add	x1, x1, #0x10
   2b8d8:	cmp	x0, x1
   2b8dc:	b.eq	2b8e4 <vasnprintf@@Base+0xac4>  // b.none
   2b8e0:	bl	aa50 <free@plt>
   2b8e4:	ldr	x1, [x29, #168]
   2b8e8:	mov	w0, #0x4b                  	// #75
   2b8ec:	mov	x24, #0x0                   	// #0
   2b8f0:	str	w0, [x1]
   2b8f4:	b	2b324 <vasnprintf@@Base+0x504>
   2b8f8:	mov	x1, x28
   2b8fc:	mov	x0, x24
   2b900:	bl	a7e0 <realloc@plt>
   2b904:	cbz	x0, 2b6fc <vasnprintf@@Base+0x8dc>
   2b908:	mov	x24, x0
   2b90c:	b	2b288 <vasnprintf@@Base+0x468>
   2b910:	mov	x24, x0
   2b914:	b	2af84 <vasnprintf@@Base+0x164>
   2b918:	ldr	x1, [x29, #120]
   2b91c:	ldr	x0, [x29, #480]
   2b920:	add	x1, x1, #0x20
   2b924:	cmp	x0, x1
   2b928:	b.eq	2b930 <vasnprintf@@Base+0xb10>  // b.none
   2b92c:	bl	aa50 <free@plt>
   2b930:	ldr	x1, [x29, #128]
   2b934:	ldr	x0, [x29, #232]
   2b938:	add	x1, x1, #0x10
   2b93c:	cmp	x0, x1
   2b940:	b.eq	2b948 <vasnprintf@@Base+0xb28>  // b.none
   2b944:	bl	aa50 <free@plt>
   2b948:	bl	aeb0 <__errno_location@plt>
   2b94c:	mov	x24, #0x0                   	// #0
   2b950:	mov	w1, #0x16                  	// #22
   2b954:	str	w1, [x0]
   2b958:	b	2b324 <vasnprintf@@Base+0x504>
   2b95c:	ldr	x0, [x0, #16]
   2b960:	mov	x20, x19
   2b964:	str	w19, [x0]
   2b968:	b	2b290 <vasnprintf@@Base+0x470>
   2b96c:	mov	x0, x26
   2b970:	bl	aa50 <free@plt>
   2b974:	b	2b84c <vasnprintf@@Base+0xa2c>
   2b978:	mov	x0, x25
   2b97c:	bl	aa50 <free@plt>
   2b980:	b	2b8a8 <vasnprintf@@Base+0xa88>
   2b984:	mov	x24, x0
   2b988:	b	2b288 <vasnprintf@@Base+0x468>
   2b98c:	adds	x20, x19, #0x1
   2b990:	b.cs	2baa4 <vasnprintf@@Base+0xc84>  // b.hs, b.nlast
   2b994:	cmp	x28, x20
   2b998:	b.cs	2b9f0 <vasnprintf@@Base+0xbd0>  // b.hs, b.nlast
   2b99c:	cmp	x28, #0x0
   2b9a0:	cbnz	x28, 2ba7c <vasnprintf@@Base+0xc5c>
   2b9a4:	cmp	x20, #0xc
   2b9a8:	b.hi	2ba8c <vasnprintf@@Base+0xc6c>  // b.pmore
   2b9ac:	mov	x28, #0xc                   	// #12
   2b9b0:	ldr	x0, [x29, #152]
   2b9b4:	cmp	x24, x0
   2b9b8:	cset	w21, eq  // eq = none
   2b9bc:	cmp	x24, #0x0
   2b9c0:	ccmp	w21, #0x0, #0x0, ne  // ne = any
   2b9c4:	b.eq	2ba64 <vasnprintf@@Base+0xc44>  // b.none
   2b9c8:	mov	x0, x28
   2b9cc:	bl	a5f0 <malloc@plt>
   2b9d0:	cbz	x0, 2b2c0 <vasnprintf@@Base+0x4a0>
   2b9d4:	cmp	x19, #0x0
   2b9d8:	ccmp	w21, #0x0, #0x4, ne  // ne = any
   2b9dc:	b.eq	2ba9c <vasnprintf@@Base+0xc7c>  // b.none
   2b9e0:	mov	x1, x24
   2b9e4:	mov	x2, x19
   2b9e8:	mov	x24, x0
   2b9ec:	bl	a2c0 <memcpy@plt>
   2b9f0:	ldr	x0, [x29, #152]
   2b9f4:	strb	wzr, [x24, x19]
   2b9f8:	cmp	x24, x0
   2b9fc:	ccmp	x28, x20, #0x0, ne  // ne = any
   2ba00:	b.hi	2ba4c <vasnprintf@@Base+0xc2c>  // b.pmore
   2ba04:	ldr	x0, [x29, #104]
   2ba08:	cbz	x0, 2ba10 <vasnprintf@@Base+0xbf0>
   2ba0c:	bl	aa50 <free@plt>
   2ba10:	ldr	x1, [x29, #120]
   2ba14:	ldr	x0, [x29, #480]
   2ba18:	add	x1, x1, #0x20
   2ba1c:	cmp	x0, x1
   2ba20:	b.eq	2ba28 <vasnprintf@@Base+0xc08>  // b.none
   2ba24:	bl	aa50 <free@plt>
   2ba28:	ldr	x1, [x29, #128]
   2ba2c:	ldr	x0, [x29, #232]
   2ba30:	add	x1, x1, #0x10
   2ba34:	cmp	x0, x1
   2ba38:	b.eq	2ba40 <vasnprintf@@Base+0xc20>  // b.none
   2ba3c:	bl	aa50 <free@plt>
   2ba40:	ldr	x0, [x29, #112]
   2ba44:	str	x19, [x0]
   2ba48:	b	2b324 <vasnprintf@@Base+0x504>
   2ba4c:	mov	x0, x24
   2ba50:	mov	x1, x20
   2ba54:	bl	a7e0 <realloc@plt>
   2ba58:	cmp	x0, #0x0
   2ba5c:	csel	x24, x24, x0, eq  // eq = none
   2ba60:	b	2ba04 <vasnprintf@@Base+0xbe4>
   2ba64:	mov	x1, x28
   2ba68:	mov	x0, x24
   2ba6c:	bl	a7e0 <realloc@plt>
   2ba70:	cbz	x0, 2b6fc <vasnprintf@@Base+0x8dc>
   2ba74:	mov	x24, x0
   2ba78:	b	2b9f0 <vasnprintf@@Base+0xbd0>
   2ba7c:	b.lt	2b2c0 <vasnprintf@@Base+0x4a0>  // b.tstop
   2ba80:	lsl	x28, x28, #1
   2ba84:	cmp	x28, x20
   2ba88:	b.cs	2b9b0 <vasnprintf@@Base+0xb90>  // b.hs, b.nlast
   2ba8c:	cmn	x20, #0x1
   2ba90:	mov	x28, x20
   2ba94:	b.ne	2b9b0 <vasnprintf@@Base+0xb90>  // b.any
   2ba98:	b	2b2c0 <vasnprintf@@Base+0x4a0>
   2ba9c:	mov	x24, x0
   2baa0:	b	2b9f0 <vasnprintf@@Base+0xbd0>
   2baa4:	cmn	x28, #0x1
   2baa8:	b.eq	2b9f0 <vasnprintf@@Base+0xbd0>  // b.none
   2baac:	b	2b2c0 <vasnprintf@@Base+0x4a0>
   2bab0:	adrp	x2, 47000 <base_len@@Base+0x32c40>
   2bab4:	mov	x1, #0x0                   	// #0
   2bab8:	ldr	x2, [x2, #1720]
   2babc:	b	a4d0 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000002bac0 <.fini>:
   2bac0:	stp	x29, x30, [sp, #-16]!
   2bac4:	mov	x29, sp
   2bac8:	ldp	x29, x30, [sp], #16
   2bacc:	ret
