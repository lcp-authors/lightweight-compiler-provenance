
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//squash4.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x1730>:
       0:	stp	x29, x30, [sp, #-128]!
       4:	mov	x29, sp
       8:	stp	x19, x20, [sp, #16]
       c:	cbz	x2, 154 <grub_mod_init-0x15dc>
      10:	and	x19, x3, #0x1ff
      14:	stp	x21, x22, [sp, #32]
      18:	mov	x21, x0
      1c:	stp	x23, x24, [sp, #48]
      20:	mov	x24, x1
      24:	mov	x23, x2
      28:	stp	x25, x26, [sp, #64]
      2c:	mov	x26, x3
      30:	stp	x27, x28, [sp, #80]
      34:	mov	x27, x4
      38:	lsr	x28, x3, #9
      3c:	and	x22, x27, #0x1fff
      40:	b	68 <grub_mod_init-0x16c8>
      44:	ldrh	w5, [sp, #126]
      48:	cmp	x22, x27
      4c:	b.eq	a8 <grub_mod_init-0x1688>  // b.none
      50:	and	w5, w5, #0xffff7fff
      54:	sub	x27, x27, #0x2, lsl #12
      58:	add	w5, w5, #0x2
      5c:	add	x26, x26, w5, sxtw
      60:	and	x19, x26, #0x1ff
      64:	lsr	x28, x26, #9
      68:	ldr	x0, [x21]
      6c:	add	x4, sp, #0x7e
      70:	mov	x2, x19
      74:	mov	x1, x28
      78:	mov	x3, #0x2                   	// #2
      7c:	bl	0 <grub_disk_read>
      80:	mov	w20, w0
      84:	cbz	w0, 44 <grub_mod_init-0x16ec>
      88:	ldp	x21, x22, [sp, #32]
      8c:	ldp	x23, x24, [sp, #48]
      90:	ldp	x25, x26, [sp, #64]
      94:	ldp	x27, x28, [sp, #80]
      98:	mov	w0, w20
      9c:	ldp	x19, x20, [sp, #16]
      a0:	ldp	x29, x30, [sp], #128
      a4:	ret
      a8:	mov	x0, #0x2000                	// #8192
      ac:	sub	x7, x0, x27
      b0:	cmp	x7, x23
      b4:	csel	x25, x7, x23, ls  // ls = plast
      b8:	tbnz	w5, #15, 15c <grub_mod_init-0x15d4>
      bc:	and	x3, x5, #0xffff
      c0:	str	x3, [sp, #96]
      c4:	mov	x0, x3
      c8:	add	x20, x26, #0x2
      cc:	bl	0 <grub_malloc>
      d0:	mov	x6, x0
      d4:	ldr	x3, [sp, #96]
      d8:	cbz	x0, 1ac <grub_mod_init-0x1584>
      dc:	mov	x4, x0
      e0:	and	x2, x20, #0x1ff
      e4:	ldr	x0, [x21]
      e8:	lsr	x1, x20, #9
      ec:	stp	x3, x6, [sp, #96]
      f0:	bl	0 <grub_disk_read>
      f4:	mov	w20, w0
      f8:	ldp	x3, x6, [sp, #96]
      fc:	cbnz	w0, 188 <grub_mod_init-0x15a8>
     100:	ldr	x9, [x21, #216]
     104:	mov	x1, x3
     108:	mov	x0, x6
     10c:	mov	x2, x22
     110:	mov	x5, x21
     114:	mov	x4, x25
     118:	mov	x3, x24
     11c:	str	x6, [sp, #96]
     120:	blr	x9
     124:	ldr	x6, [sp, #96]
     128:	tbnz	x0, #63, 1a4 <grub_mod_init-0x158c>
     12c:	mov	x0, x6
     130:	bl	0 <grub_free>
     134:	add	x27, x27, x25
     138:	add	x24, x24, x25
     13c:	subs	x23, x23, x25
     140:	b.ne	3c <grub_mod_init-0x16f4>  // b.any
     144:	ldp	x21, x22, [sp, #32]
     148:	ldp	x23, x24, [sp, #48]
     14c:	ldp	x25, x26, [sp, #64]
     150:	ldp	x27, x28, [sp, #80]
     154:	mov	w20, #0x0                   	// #0
     158:	b	98 <grub_mod_init-0x1698>
     15c:	ldr	x0, [x21]
     160:	add	x1, x26, x27
     164:	add	x1, x1, #0x2
     168:	mov	x4, x24
     16c:	and	x2, x1, #0x1ff
     170:	mov	x3, x25
     174:	lsr	x1, x1, #9
     178:	bl	0 <grub_disk_read>
     17c:	mov	w20, w0
     180:	cbz	w0, 134 <grub_mod_init-0x15fc>
     184:	b	88 <grub_mod_init-0x16a8>
     188:	mov	x0, x6
     18c:	bl	0 <grub_free>
     190:	ldp	x21, x22, [sp, #32]
     194:	ldp	x23, x24, [sp, #48]
     198:	ldp	x25, x26, [sp, #64]
     19c:	ldp	x27, x28, [sp, #80]
     1a0:	b	98 <grub_mod_init-0x1698>
     1a4:	mov	x0, x6
     1a8:	bl	0 <grub_free>
     1ac:	adrp	x0, 0 <grub_mod_init-0x1730>
     1b0:	ldp	x21, x22, [sp, #32]
     1b4:	ldr	x0, [x0]
     1b8:	ldp	x23, x24, [sp, #48]
     1bc:	ldr	w20, [x0]
     1c0:	ldp	x25, x26, [sp, #64]
     1c4:	ldp	x27, x28, [sp, #80]
     1c8:	b	98 <grub_mod_init-0x1698>
     1cc:	nop
	...
     1d8:	stp	x29, x30, [sp, #-32]!
     1dc:	mov	x29, sp
     1e0:	stp	x19, x20, [sp, #16]
     1e4:	mov	x19, x0
     1e8:	ldr	w0, [x0, #28]
     1ec:	add	w0, w0, #0x1
     1f0:	bl	0 <grub_malloc>
     1f4:	ldr	x4, [x19, #64]
     1f8:	mov	x20, x0
     1fc:	mov	x1, x0
     200:	ldr	w2, [x19, #28]
     204:	ldr	x0, [x19]
     208:	add	x4, x19, x4, lsl #4
     20c:	ldr	x5, [x0, #72]
     210:	ldr	x3, [x4, #56]
     214:	ldrh	w4, [x4, #64]
     218:	add	x3, x5, x3
     21c:	add	x4, x4, #0x18
     220:	bl	0 <grub_mod_init-0x1730>
     224:	cbnz	w0, 240 <grub_mod_init-0x14f0>
     228:	ldr	w0, [x19, #28]
     22c:	strb	wzr, [x20, x0]
     230:	mov	x0, x20
     234:	ldp	x19, x20, [sp, #16]
     238:	ldp	x29, x30, [sp], #32
     23c:	ret
     240:	mov	x0, x20
     244:	mov	x20, #0x0                   	// #0
     248:	bl	0 <grub_free>
     24c:	b	230 <grub_mod_init-0x1500>
     250:	stp	x29, x30, [sp, #-160]!
     254:	mov	x1, #0x0                   	// #0
     258:	mov	x3, #0x60                  	// #96
     25c:	mov	x29, sp
     260:	add	x4, sp, #0x40
     264:	mov	x2, #0x0                   	// #0
     268:	stp	x19, x20, [sp, #16]
     26c:	str	x21, [sp, #32]
     270:	mov	x21, x0
     274:	bl	0 <grub_disk_read>
     278:	mov	w19, w0
     27c:	adrp	x1, 0 <grub_mod_init-0x1730>
     280:	ldr	x20, [x1]
     284:	ldr	w1, [x20]
     288:	cmp	w1, #0xb
     28c:	b.eq	374 <grub_mod_init-0x13bc>  // b.none
     290:	cbnz	w19, 388 <grub_mod_init-0x13a8>
     294:	ldr	w1, [sp, #64]
     298:	mov	w0, #0x7368                	// #29544
     29c:	movk	w0, #0x7371, lsl #16
     2a0:	cmp	w1, w0
     2a4:	b.ne	3a0 <grub_mod_init-0x1390>  // b.any
     2a8:	ldr	w1, [sp, #76]
     2ac:	cbz	w1, 3a0 <grub_mod_init-0x1390>
     2b0:	sub	w0, w1, #0x1
     2b4:	tst	w0, w1
     2b8:	b.ne	3a0 <grub_mod_init-0x1390>  // b.any
     2bc:	ldr	x1, [sp, #144]
     2c0:	add	x4, sp, #0x38
     2c4:	mov	x0, x21
     2c8:	mov	x3, #0x8                   	// #8
     2cc:	and	x2, x1, #0x1ff
     2d0:	lsr	x1, x1, #9
     2d4:	bl	0 <grub_disk_read>
     2d8:	ldr	w1, [x20]
     2dc:	mov	w19, w0
     2e0:	cmp	w1, #0xb
     2e4:	b.eq	44c <grub_mod_init-0x12e4>  // b.none
     2e8:	cbnz	w19, 388 <grub_mod_init-0x13a8>
     2ec:	mov	x0, #0xf0                  	// #240
     2f0:	bl	0 <grub_zalloc>
     2f4:	mov	x19, x0
     2f8:	cbz	x0, 388 <grub_mod_init-0x13a8>
     2fc:	ldp	x4, x5, [sp, #64]
     300:	ldrh	w2, [sp, #84]
     304:	stp	x4, x5, [x0, #8]
     308:	cmp	w2, #0x3
     30c:	ldp	x4, x5, [sp, #80]
     310:	stp	x4, x5, [x0, #24]
     314:	ldp	x4, x5, [sp, #96]
     318:	stp	x4, x5, [x0, #40]
     31c:	ldp	x4, x5, [sp, #112]
     320:	stp	x4, x5, [x0, #56]
     324:	ldp	x4, x5, [sp, #128]
     328:	stp	x4, x5, [x0, #72]
     32c:	ldr	x1, [sp, #56]
     330:	str	x1, [x0, #192]
     334:	ldp	x4, x5, [sp, #144]
     338:	str	x21, [x0]
     33c:	stp	x4, x5, [x0, #88]
     340:	b.eq	460 <grub_mod_init-0x12d0>  // b.none
     344:	cmp	w2, #0x4
     348:	b.eq	3c8 <grub_mod_init-0x1368>  // b.none
     34c:	cmp	w2, #0x1
     350:	b.eq	43c <grub_mod_init-0x12f4>  // b.none
     354:	bl	0 <grub_free>
     358:	mov	x19, #0x0                   	// #0
     35c:	adrp	x1, 0 <grub_mod_init-0x1730>
     360:	ldrh	w2, [sp, #84]
     364:	mov	w0, #0x9                   	// #9
     368:	ldr	x1, [x1]
     36c:	bl	0 <grub_error>
     370:	b	3b4 <grub_mod_init-0x137c>
     374:	adrp	x1, 0 <grub_mod_init-0x1730>
     378:	mov	w0, #0x9                   	// #9
     37c:	ldr	x1, [x1]
     380:	bl	0 <grub_error>
     384:	cbz	w19, 294 <grub_mod_init-0x149c>
     388:	mov	x19, #0x0                   	// #0
     38c:	mov	x0, x19
     390:	ldp	x19, x20, [sp, #16]
     394:	ldr	x21, [sp, #32]
     398:	ldp	x29, x30, [sp], #160
     39c:	ret
     3a0:	adrp	x1, 0 <grub_mod_init-0x1730>
     3a4:	mov	w0, #0x9                   	// #9
     3a8:	mov	x19, #0x0                   	// #0
     3ac:	ldr	x1, [x1]
     3b0:	bl	0 <grub_error>
     3b4:	mov	x0, x19
     3b8:	ldp	x19, x20, [sp, #16]
     3bc:	ldr	x21, [sp, #32]
     3c0:	ldp	x29, x30, [sp], #160
     3c4:	ret
     3c8:	adrp	x1, 0 <grub_mod_init-0x1730>
     3cc:	mov	x0, #0x2000                	// #8192
     3d0:	ldr	x1, [x1]
     3d4:	str	x1, [x19, #216]
     3d8:	bl	0 <grub_malloc>
     3dc:	str	x0, [x19, #232]
     3e0:	cbz	x0, 478 <grub_mod_init-0x12b8>
     3e4:	mov	w0, #0x10000               	// #65536
     3e8:	bl	0 <xz_dec_init>
     3ec:	str	x0, [x19, #224]
     3f0:	cbz	x0, 470 <grub_mod_init-0x12c0>
     3f4:	ldr	w3, [x19, #20]
     3f8:	str	wzr, [x19, #200]
     3fc:	str	x3, [x19, #208]
     400:	cmp	x3, #0x1
     404:	b.ls	3b4 <grub_mod_init-0x137c>  // b.plast
     408:	mov	w0, #0x1                   	// #1
     40c:	mov	w4, w0
     410:	mov	w1, w0
     414:	add	w0, w0, #0x1
     418:	lsl	w2, w4, w1
     41c:	cmp	x3, x2
     420:	b.hi	410 <grub_mod_init-0x1320>  // b.pmore
     424:	str	w1, [x19, #200]
     428:	mov	x0, x19
     42c:	ldp	x19, x20, [sp, #16]
     430:	ldr	x21, [sp, #32]
     434:	ldp	x29, x30, [sp], #160
     438:	ret
     43c:	adrp	x0, 0 <grub_mod_init-0x1730>
     440:	ldr	x0, [x0]
     444:	str	x0, [x19, #216]
     448:	b	3f4 <grub_mod_init-0x133c>
     44c:	adrp	x1, 0 <grub_mod_init-0x1730>
     450:	mov	w0, #0x9                   	// #9
     454:	ldr	x1, [x1]
     458:	bl	0 <grub_error>
     45c:	b	2e8 <grub_mod_init-0x1448>
     460:	adrp	x0, 0 <grub_mod_init-0x1730>
     464:	ldr	x0, [x0]
     468:	str	x0, [x19, #216]
     46c:	b	3f4 <grub_mod_init-0x133c>
     470:	ldr	x0, [x19, #232]
     474:	bl	0 <grub_free>
     478:	mov	x0, x19
     47c:	mov	x19, #0x0                   	// #0
     480:	bl	0 <grub_free>
     484:	b	3b4 <grub_mod_init-0x137c>
	...
     4c0:	stp	x29, x30, [sp, #-128]!
     4c4:	mov	x29, sp
     4c8:	stp	x19, x20, [sp, #16]
     4cc:	mov	x20, x0
     4d0:	mov	x19, x1
     4d4:	ldr	x0, [x5, #224]
     4d8:	stp	x23, x24, [sp, #48]
     4dc:	mov	x24, x5
     4e0:	mov	x23, x2
     4e4:	stp	x21, x22, [sp, #32]
     4e8:	mov	x22, x4
     4ec:	stp	x25, x26, [sp, #64]
     4f0:	mov	x26, x3
     4f4:	bl	0 <xz_dec_reset>
     4f8:	ldr	x1, [x24, #232]
     4fc:	mov	x0, #0x2000                	// #8192
     500:	mov	x21, #0x0                   	// #0
     504:	mov	x25, #0x0                   	// #0
     508:	stp	x20, xzr, [sp, #80]
     50c:	stp	x19, x1, [sp, #96]
     510:	str	x0, [sp, #120]
     514:	b	558 <grub_mod_init-0x11d8>
     518:	subs	x3, x21, x23
     51c:	mov	x0, x26
     520:	add	x20, x6, x3
     524:	ldr	x1, [sp, #104]
     528:	b.mi	5b0 <grub_mod_init-0x1180>  // b.first
     52c:	cmp	x6, x22
     530:	add	x0, x26, x3
     534:	csel	x20, x6, x22, ls  // ls = plast
     538:	mov	x2, x20
     53c:	bl	0 <grub_memmove>
     540:	ldr	x0, [sp, #112]
     544:	add	x25, x25, x20
     548:	sub	x22, x22, x20
     54c:	cmp	w19, #0x1
     550:	add	x21, x21, x0
     554:	b.eq	594 <grub_mod_init-0x119c>  // b.none
     558:	add	x1, sp, #0x50
     55c:	cbz	x22, 594 <grub_mod_init-0x119c>
     560:	ldr	x0, [x24, #224]
     564:	str	xzr, [sp, #112]
     568:	bl	0 <xz_dec_run>
     56c:	mov	w19, w0
     570:	cmp	w0, #0x1
     574:	b.hi	5c8 <grub_mod_init-0x1168>  // b.pmore
     578:	ldr	x6, [sp, #112]
     57c:	add	x0, x6, x21
     580:	cmp	x0, x23
     584:	b.cs	518 <grub_mod_init-0x1218>  // b.hs, b.nlast
     588:	mov	x21, x0
     58c:	cmp	w19, #0x1
     590:	b.ne	558 <grub_mod_init-0x11d8>  // b.any
     594:	mov	x0, x25
     598:	ldp	x19, x20, [sp, #16]
     59c:	ldp	x21, x22, [sp, #32]
     5a0:	ldp	x23, x24, [sp, #48]
     5a4:	ldp	x25, x26, [sp, #64]
     5a8:	ldp	x29, x30, [sp], #128
     5ac:	ret
     5b0:	cmp	x20, x22
     5b4:	sub	x1, x1, x3
     5b8:	csel	x20, x20, x22, ls  // ls = plast
     5bc:	mov	x2, x20
     5c0:	bl	0 <grub_memmove>
     5c4:	b	540 <grub_mod_init-0x11f0>
     5c8:	adrp	x1, 0 <grub_mod_init-0x1730>
     5cc:	mov	w0, #0x1a                  	// #26
     5d0:	ldr	x1, [x1]
     5d4:	bl	0 <grub_error>
     5d8:	mov	x0, #0xffffffffffffffff    	// #-1
     5dc:	ldp	x19, x20, [sp, #16]
     5e0:	ldp	x21, x22, [sp, #32]
     5e4:	ldp	x23, x24, [sp, #48]
     5e8:	ldp	x25, x26, [sp, #64]
     5ec:	ldp	x29, x30, [sp], #128
     5f0:	ret
     5f4:	nop
	...
     600:	stp	x29, x30, [sp, #-192]!
     604:	mov	x29, sp
     608:	stp	x19, x20, [sp, #16]
     60c:	mov	x19, x0
     610:	stp	x21, x22, [sp, #32]
     614:	mov	x22, x1
     618:	stp	x23, x24, [sp, #48]
     61c:	mov	x23, x2
     620:	ldrh	w2, [x0, #8]
     624:	stp	x25, x26, [sp, #64]
     628:	cmp	w2, #0x1
     62c:	b.eq	668 <grub_mod_init-0x10c8>  // b.none
     630:	cmp	w2, #0x8
     634:	b.eq	894 <grub_mod_init-0xe9c>  // b.none
     638:	adrp	x1, 0 <grub_mod_init-0x1730>
     63c:	mov	w0, #0x9                   	// #9
     640:	mov	w26, #0x0                   	// #0
     644:	ldr	x1, [x1]
     648:	bl	0 <grub_error>
     64c:	mov	w0, w26
     650:	ldp	x19, x20, [sp, #16]
     654:	ldp	x21, x22, [sp, #32]
     658:	ldp	x23, x24, [sp, #48]
     65c:	ldp	x25, x26, [sp, #64]
     660:	ldp	x29, x30, [sp], #192
     664:	ret
     668:	ldrh	w20, [x0, #34]
     66c:	stp	x27, x28, [sp, #80]
     670:	ldrh	w27, [x0, #32]
     674:	ldr	w25, [x19, #24]
     678:	add	w27, w27, w20
     67c:	sub	w0, w27, #0x3
     680:	str	w0, [sp, #108]
     684:	ldr	x0, [x19, #64]
     688:	lsl	x0, x0, #4
     68c:	add	x0, x0, #0x58
     690:	bl	0 <grub_malloc>
     694:	mov	x21, x0
     698:	cbz	x0, 8c8 <grub_mod_init-0xe68>
     69c:	ldr	x2, [x19, #64]
     6a0:	mov	x1, x19
     6a4:	lsl	x2, x2, #4
     6a8:	add	x2, x2, #0x58
     6ac:	bl	0 <grub_memmove>
     6b0:	adrp	x0, 0 <grub_mod_init-0x1730>
     6b4:	mov	x2, x21
     6b8:	mov	x3, x23
     6bc:	mov	w1, #0x2                   	// #2
     6c0:	ldr	x0, [x0]
     6c4:	blr	x22
     6c8:	mov	w26, w0
     6cc:	cbnz	w0, 964 <grub_mod_init-0xdcc>
     6d0:	ldr	x0, [x19, #64]
     6d4:	cmp	x0, #0x1
     6d8:	b.ne	8ec <grub_mod_init-0xe44>  // b.any
     6dc:	ldr	w0, [sp, #108]
     6e0:	cmp	w20, w0
     6e4:	b.cs	8c8 <grub_mod_init-0xe68>  // b.hs, b.nlast
     6e8:	ldr	x0, [x19]
     6ec:	mov	w4, w20
     6f0:	add	x1, sp, #0x78
     6f4:	mov	x2, #0xc                   	// #12
     6f8:	ldr	x3, [x0, #80]
     6fc:	add	x3, x25, x3
     700:	bl	0 <grub_mod_init-0x1730>
     704:	mov	w21, w0
     708:	cbnz	w0, 874 <grub_mod_init-0xebc>
     70c:	ldr	w0, [sp, #120]
     710:	add	w20, w20, #0xc
     714:	cmn	w0, #0x1
     718:	b.ne	848 <grub_mod_init-0xee8>  // b.any
     71c:	b	988 <grub_mod_init-0xda8>
     720:	ldr	x0, [x19]
     724:	add	x1, sp, #0x88
     728:	ldr	w5, [sp, #124]
     72c:	mov	x2, #0x38                  	// #56
     730:	ldrh	w4, [sp, #112]
     734:	ldr	x3, [x0, #72]
     738:	add	x3, x5, x3
     73c:	bl	0 <grub_mod_init-0x1730>
     740:	cbnz	w0, 874 <grub_mod_init-0xebc>
     744:	ldrh	w0, [sp, #118]
     748:	add	x0, x0, #0x2
     74c:	bl	0 <grub_malloc>
     750:	mov	w4, w20
     754:	mov	x27, x0
     758:	cbz	x0, 874 <grub_mod_init-0xebc>
     75c:	mov	x1, x0
     760:	ldrh	w2, [sp, #118]
     764:	ldr	x0, [x19]
     768:	add	x2, x2, #0x1
     76c:	ldr	x3, [x0, #80]
     770:	add	x3, x25, x3
     774:	bl	0 <grub_mod_init-0x1730>
     778:	mov	w2, #0x3                   	// #3
     77c:	cbnz	w0, 874 <grub_mod_init-0xebc>
     780:	ldrh	w0, [sp, #118]
     784:	add	w1, w0, #0x1
     788:	add	x0, x27, w0, uxth
     78c:	add	w20, w1, w20
     790:	strb	wzr, [x0, #1]
     794:	ldrh	w0, [sp, #116]
     798:	cmp	w0, #0x1
     79c:	b.eq	7a8 <grub_mod_init-0xf88>  // b.none
     7a0:	cmp	w0, w2
     7a4:	csinc	w24, w2, wzr, eq  // eq = none
     7a8:	ldr	x0, [x19, #64]
     7ac:	lsl	x0, x0, #4
     7b0:	add	x0, x0, #0x68
     7b4:	bl	0 <grub_malloc>
     7b8:	mov	x1, x19
     7bc:	mov	x28, x0
     7c0:	cbz	x0, 874 <grub_mod_init-0xebc>
     7c4:	ldr	x2, [x19, #64]
     7c8:	lsl	x2, x2, #4
     7cc:	add	x2, x2, #0x58
     7d0:	bl	0 <grub_memmove>
     7d4:	ldr	x6, [x28, #64]
     7d8:	mov	w1, w24
     7dc:	ldp	x2, x3, [sp, #136]
     7e0:	stp	x2, x3, [x28, #8]
     7e4:	add	x7, x6, #0x1
     7e8:	ldp	x2, x3, [sp, #152]
     7ec:	stp	x2, x3, [x28, #24]
     7f0:	add	x6, x28, x6, lsl #4
     7f4:	ldp	x2, x3, [sp, #168]
     7f8:	stp	x2, x3, [x28, #40]
     7fc:	ldrh	w8, [sp, #112]
     800:	ldr	x3, [sp, #184]
     804:	str	x3, [x28, #56]
     808:	ldr	w9, [sp, #124]
     80c:	mov	x2, x28
     810:	str	x9, [x6, #72]
     814:	mov	x3, x23
     818:	strh	w8, [x6, #80]
     81c:	mov	x0, x27
     820:	str	x7, [x28, #64]
     824:	blr	x22
     828:	mov	w24, w0
     82c:	mov	x0, x27
     830:	bl	0 <grub_free>
     834:	cbnz	w24, 998 <grub_mod_init-0xd98>
     838:	ldr	w0, [sp, #120]
     83c:	add	w0, w0, #0x1
     840:	cmp	w0, w21
     844:	b.ls	988 <grub_mod_init-0xda8>  // b.plast
     848:	ldr	x0, [x19]
     84c:	mov	w4, w20
     850:	add	w21, w21, #0x1
     854:	add	x1, sp, #0x70
     858:	add	w20, w20, #0x8
     85c:	mov	x2, #0x8                   	// #8
     860:	ldr	x3, [x0, #80]
     864:	mov	w24, #0x2                   	// #2
     868:	add	x3, x25, x3
     86c:	bl	0 <grub_mod_init-0x1730>
     870:	cbz	w0, 720 <grub_mod_init-0x1010>
     874:	mov	w0, w26
     878:	ldp	x19, x20, [sp, #16]
     87c:	ldp	x21, x22, [sp, #32]
     880:	ldp	x23, x24, [sp, #48]
     884:	ldp	x25, x26, [sp, #64]
     888:	ldp	x27, x28, [sp, #80]
     88c:	ldp	x29, x30, [sp], #192
     890:	ret
     894:	ldrh	w20, [x0, #42]
     898:	stp	x27, x28, [sp, #80]
     89c:	ldrh	w27, [x0, #28]
     8a0:	ldr	w25, [x19, #32]
     8a4:	add	w27, w27, w20
     8a8:	sub	w0, w27, #0x3
     8ac:	str	w0, [sp, #108]
     8b0:	ldr	x0, [x19, #64]
     8b4:	lsl	x0, x0, #4
     8b8:	add	x0, x0, #0x58
     8bc:	bl	0 <grub_malloc>
     8c0:	mov	x21, x0
     8c4:	cbnz	x0, 69c <grub_mod_init-0x1094>
     8c8:	mov	w26, #0x0                   	// #0
     8cc:	mov	w0, w26
     8d0:	ldp	x19, x20, [sp, #16]
     8d4:	ldp	x21, x22, [sp, #32]
     8d8:	ldp	x23, x24, [sp, #48]
     8dc:	ldp	x25, x26, [sp, #64]
     8e0:	ldp	x27, x28, [sp, #80]
     8e4:	ldp	x29, x30, [sp], #192
     8e8:	ret
     8ec:	lsl	x0, x0, #4
     8f0:	add	x0, x0, #0x58
     8f4:	bl	0 <grub_malloc>
     8f8:	mov	x21, x0
     8fc:	cbz	x0, 8c8 <grub_mod_init-0xe68>
     900:	ldr	x2, [x19, #64]
     904:	mov	x1, x19
     908:	lsl	x2, x2, #4
     90c:	add	x2, x2, #0x58
     910:	bl	0 <grub_memmove>
     914:	ldr	x5, [x21, #64]
     918:	mov	x2, #0x38                  	// #56
     91c:	ldr	x0, [x19]
     920:	sub	x1, x5, #0x1
     924:	add	x5, x21, x5, lsl #4
     928:	ldr	x6, [x0, #72]
     92c:	str	x1, [x21, #64]
     930:	add	x1, x21, #0x8
     934:	ldrh	w4, [x5, #48]
     938:	ldr	x3, [x5, #40]
     93c:	add	x3, x6, x3
     940:	bl	0 <grub_mod_init-0x1730>
     944:	cbnz	w0, 8c8 <grub_mod_init-0xe68>
     948:	adrp	x0, 0 <grub_mod_init-0x1730>
     94c:	mov	x2, x21
     950:	mov	x3, x23
     954:	mov	w1, #0x2                   	// #2
     958:	ldr	x0, [x0]
     95c:	blr	x22
     960:	cbz	w0, 6dc <grub_mod_init-0x1054>
     964:	mov	w26, #0x1                   	// #1
     968:	mov	w0, w26
     96c:	ldp	x19, x20, [sp, #16]
     970:	ldp	x21, x22, [sp, #32]
     974:	ldp	x23, x24, [sp, #48]
     978:	ldp	x25, x26, [sp, #64]
     97c:	ldp	x27, x28, [sp, #80]
     980:	ldp	x29, x30, [sp], #192
     984:	ret
     988:	ldr	w0, [sp, #108]
     98c:	cmp	w0, w20
     990:	b.hi	6e8 <grub_mod_init-0x1048>  // b.pmore
     994:	b	8c8 <grub_mod_init-0xe68>
     998:	mov	w26, w24
     99c:	ldp	x27, x28, [sp, #80]
     9a0:	b	64c <grub_mod_init-0x10e4>
     9a4:	nop
	...
     9c0:	stp	x29, x30, [sp, #-80]!
     9c4:	mov	x29, sp
     9c8:	ldr	x5, [x5, #208]
     9cc:	stp	x19, x20, [sp, #16]
     9d0:	mov	x20, x4
     9d4:	stp	x21, x22, [sp, #32]
     9d8:	mov	x21, x0
     9dc:	mov	x22, x1
     9e0:	stp	x23, x24, [sp, #48]
     9e4:	mov	x0, #0x1fff                	// #8191
     9e8:	mov	x23, x2
     9ec:	mov	x24, x3
     9f0:	cmp	x5, x0
     9f4:	b.ls	a58 <grub_mod_init-0xcd8>  // b.plast
     9f8:	str	x5, [sp, #72]
     9fc:	mov	x0, x5
     a00:	bl	0 <grub_malloc>
     a04:	mov	x19, x0
     a08:	cbz	x0, a88 <grub_mod_init-0xca8>
     a0c:	mov	x1, x22
     a10:	mov	x0, x21
     a14:	add	x3, sp, #0x48
     a18:	mov	x2, x19
     a1c:	mov	x4, #0x0                   	// #0
     a20:	bl	0 <lzo1x_decompress_safe>
     a24:	cbnz	w0, a68 <grub_mod_init-0xcc8>
     a28:	add	x1, x19, x23
     a2c:	mov	x2, x20
     a30:	mov	x0, x24
     a34:	bl	0 <grub_memmove>
     a38:	mov	x0, x19
     a3c:	bl	0 <grub_free>
     a40:	mov	x0, x20
     a44:	ldp	x19, x20, [sp, #16]
     a48:	ldp	x21, x22, [sp, #32]
     a4c:	ldp	x23, x24, [sp, #48]
     a50:	ldp	x29, x30, [sp], #80
     a54:	ret
     a58:	mov	x0, #0x2000                	// #8192
     a5c:	mov	x5, x0
     a60:	str	x0, [sp, #72]
     a64:	b	9fc <grub_mod_init-0xd34>
     a68:	adrp	x1, 0 <grub_mod_init-0x1730>
     a6c:	mov	w0, #0x9                   	// #9
     a70:	ldr	x1, [x1]
     a74:	bl	0 <grub_error>
     a78:	mov	x0, x19
     a7c:	bl	0 <grub_free>
     a80:	mov	x0, #0xffffffffffffffff    	// #-1
     a84:	b	a44 <grub_mod_init-0xcec>
     a88:	mov	x0, #0xffffffffffffffff    	// #-1
     a8c:	b	a44 <grub_mod_init-0xcec>
	...
     a98:	b	0 <grub_zlib_decompress>
     a9c:	nop
     aa0:	stp	x29, x30, [sp, #-160]!
     aa4:	mov	x29, sp
     aa8:	stp	x27, x28, [sp, #80]
     aac:	ldr	x27, [x0, #80]
     ab0:	stp	x19, x20, [sp, #16]
     ab4:	stp	x21, x22, [sp, #32]
     ab8:	add	x22, x27, #0x68
     abc:	stp	x23, x24, [sp, #48]
     ac0:	str	x2, [sp, #96]
     ac4:	ldrh	w2, [x27, #104]
     ac8:	str	x1, [sp, #120]
     acc:	ldr	w1, [x27, #20]
     ad0:	cmp	w2, #0x2
     ad4:	ldr	x20, [x0, #24]
     ad8:	sub	w1, w1, #0x1
     adc:	ldr	x0, [x0, #64]
     ae0:	b.eq	c00 <grub_mod_init-0xb30>  // b.none
     ae4:	cmp	w2, #0x9
     ae8:	b.ne	bd0 <grub_mod_init-0xb60>  // b.any
     aec:	ldr	w3, [x22, #44]
     af0:	str	w3, [sp, #104]
     af4:	ldr	w3, [sp, #104]
     af8:	cmn	w3, #0x1
     afc:	b.eq	b04 <grub_mod_init-0xc2c>  // b.none
     b00:	bic	x0, x0, x1
     b04:	cmp	x0, x20
     b08:	sub	x19, x20, x0
     b0c:	ldr	x21, [sp, #96]
     b10:	b.hi	c18 <grub_mod_init-0xb18>  // b.pmore
     b14:	ldr	x0, [sp, #104]
     b18:	add	x1, sp, #0x90
     b1c:	ldr	x3, [x27, #192]
     b20:	mov	x2, #0x10                  	// #16
     b24:	ubfiz	x4, x0, #4, #32
     b28:	mov	x0, x27
     b2c:	bl	0 <grub_mod_init-0x1730>
     b30:	cbnz	w0, bf8 <grub_mod_init-0xb38>
     b34:	ldrh	w1, [x27, #104]
     b38:	ldr	w0, [sp, #152]
     b3c:	cmp	w1, #0x9
     b40:	and	w2, w0, #0x1000000
     b44:	ldr	x24, [sp, #144]
     b48:	b.eq	db4 <grub_mod_init-0x97c>  // b.none
     b4c:	ldr	w1, [x22, #24]
     b50:	add	x19, x1, x19
     b54:	cbnz	w2, bd8 <grub_mod_init-0xb58>
     b58:	mov	w0, w0
     b5c:	bl	0 <grub_malloc>
     b60:	mov	x20, x0
     b64:	cbz	x0, bf8 <grub_mod_init-0xb38>
     b68:	mov	x4, x0
     b6c:	ldr	w3, [sp, #152]
     b70:	ldr	x0, [x27]
     b74:	and	x2, x24, #0x1ff
     b78:	lsr	x1, x24, #9
     b7c:	bl	0 <grub_disk_read>
     b80:	cbnz	w0, f44 <grub_mod_init-0x7ec>
     b84:	ldr	w1, [sp, #152]
     b88:	mov	x2, x19
     b8c:	ldr	x3, [sp, #120]
     b90:	mov	x5, x27
     b94:	ldr	x7, [x27, #216]
     b98:	mov	x4, x21
     b9c:	mov	x0, x20
     ba0:	blr	x7
     ba4:	cmp	x0, x21
     ba8:	mov	x0, x20
     bac:	b.ne	f18 <grub_mod_init-0x818>  // b.any
     bb0:	bl	0 <grub_free>
     bb4:	ldr	x0, [sp, #96]
     bb8:	ldp	x19, x20, [sp, #16]
     bbc:	ldp	x21, x22, [sp, #32]
     bc0:	ldp	x23, x24, [sp, #48]
     bc4:	ldp	x27, x28, [sp, #80]
     bc8:	ldp	x29, x30, [sp], #160
     bcc:	ret
     bd0:	str	wzr, [sp, #104]
     bd4:	b	b00 <grub_mod_init-0xc30>
     bd8:	ldr	x0, [x27]
     bdc:	add	x19, x19, x24
     be0:	ldr	x4, [sp, #120]
     be4:	mov	x3, x21
     be8:	and	x2, x19, #0x1ff
     bec:	lsr	x1, x19, #9
     bf0:	bl	0 <grub_disk_read>
     bf4:	cbz	w0, bb4 <grub_mod_init-0xb7c>
     bf8:	mov	x0, #0xffffffffffffffff    	// #-1
     bfc:	b	bb8 <grub_mod_init-0xb78>
     c00:	ldr	w3, [x22, #20]
     c04:	str	w3, [sp, #104]
     c08:	ldr	w3, [sp, #104]
     c0c:	cmn	w3, #0x1
     c10:	b.ne	b00 <grub_mod_init-0xc30>  // b.any
     c14:	b	b04 <grub_mod_init-0xc2c>
     c18:	sub	x0, x0, x20
     c1c:	cmp	x21, x0
     c20:	csel	x0, x21, x0, ls  // ls = plast
     c24:	str	x0, [sp, #128]
     c28:	cmp	w2, #0x2
     c2c:	ldr	x0, [x22, #72]
     c30:	b.eq	e00 <grub_mod_init-0x930>  // b.none
     c34:	cmp	w2, #0x9
     c38:	b.eq	dc4 <grub_mod_init-0x96c>  // b.none
     c3c:	cbz	x0, f08 <grub_mod_init-0x828>
     c40:	stp	x25, x26, [sp, #64]
     c44:	mov	x0, #0x60                  	// #96
     c48:	str	x0, [sp, #112]
     c4c:	ldr	w21, [x27, #200]
     c50:	ldr	x0, [x27, #208]
     c54:	lsr	x21, x20, x21
     c58:	ldr	x25, [sp, #128]
     c5c:	mul	x24, x21, x0
     c60:	add	x1, x25, x20
     c64:	cmp	x24, x1
     c68:	b.cs	df4 <grub_mod_init-0x93c>  // b.hs, b.nlast
     c6c:	lsl	x21, x21, #2
     c70:	ldr	x26, [sp, #120]
     c74:	b	d10 <grub_mod_init-0xa20>
     c78:	bl	0 <grub_malloc>
     c7c:	mov	x28, x0
     c80:	lsl	x1, x21, #1
     c84:	cbz	x0, d7c <grub_mod_init-0x9b4>
     c88:	ldr	x2, [x22, #80]
     c8c:	mov	x4, x0
     c90:	ldr	x5, [sp, #112]
     c94:	mov	x3, x23
     c98:	ldr	x1, [x2, x1]
     c9c:	ldr	x0, [x27]
     ca0:	add	x1, x5, x1
     ca4:	and	x2, x1, #0x1ff
     ca8:	lsr	x1, x1, #9
     cac:	bl	0 <grub_disk_read>
     cb0:	mov	w9, w0
     cb4:	mov	x5, x27
     cb8:	mov	x4, x19
     cbc:	mov	x3, x26
     cc0:	sub	x2, x20, x24
     cc4:	mov	x1, x23
     cc8:	mov	x0, x28
     ccc:	cbnz	w9, ed0 <grub_mod_init-0x860>
     cd0:	ldr	x8, [x27, #216]
     cd4:	blr	x8
     cd8:	cmp	x0, x19
     cdc:	mov	x0, x28
     ce0:	b.ne	edc <grub_mod_init-0x854>  // b.any
     ce4:	bl	0 <grub_free>
     ce8:	ldr	w1, [x27, #20]
     cec:	add	x0, x20, x25
     cf0:	add	x26, x26, x19
     cf4:	add	x21, x21, #0x4
     cf8:	add	x24, x24, x1
     cfc:	add	x20, x19, x20
     d00:	sub	x25, x25, x19
     d04:	cmp	x24, x0
     d08:	b.cs	df4 <grub_mod_init-0x93c>  // b.hs, b.nlast
     d0c:	ldr	x0, [x27, #208]
     d10:	sub	x19, x24, x20
     d14:	ldr	x1, [x22, #72]
     d18:	add	x19, x19, x0
     d1c:	sub	x0, x20, x24
     d20:	str	x0, [sp, #136]
     d24:	cmp	x19, x25
     d28:	ldr	w2, [x1, x21]
     d2c:	csel	x19, x19, x25, ls  // ls = plast
     d30:	cbz	w2, de0 <grub_mod_init-0x950>
     d34:	ldr	x1, [sp, #112]
     d38:	and	x23, x2, #0xffffffff
     d3c:	sub	x0, x20, x24
     d40:	and	x23, x23, #0xfffffffffeffffff
     d44:	add	x1, x0, x1
     d48:	lsl	x5, x21, #1
     d4c:	mov	x0, x23
     d50:	tbz	w2, #24, c78 <grub_mod_init-0xab8>
     d54:	ldr	x2, [x22, #80]
     d58:	mov	x4, x26
     d5c:	ldr	x0, [x27]
     d60:	mov	x3, x19
     d64:	ldr	x2, [x2, x5]
     d68:	add	x1, x1, x2
     d6c:	and	x2, x1, #0x1ff
     d70:	lsr	x1, x1, #9
     d74:	bl	0 <grub_disk_read>
     d78:	cbz	w0, ce8 <grub_mod_init-0xa48>
     d7c:	ldp	x25, x26, [sp, #64]
     d80:	ldr	x0, [sp, #128]
     d84:	cmn	x0, #0x1
     d88:	mov	x0, #0xffffffffffffffff    	// #-1
     d8c:	b.ne	bf8 <grub_mod_init-0xb38>  // b.any
     d90:	ldr	x2, [sp, #96]
     d94:	ldr	x1, [sp, #128]
     d98:	subs	x21, x2, x1
     d9c:	b.eq	bb8 <grub_mod_init-0xb78>  // b.none
     da0:	ldr	x0, [sp, #120]
     da4:	mov	x19, #0x0                   	// #0
     da8:	add	x0, x0, x1
     dac:	str	x0, [sp, #120]
     db0:	b	b14 <grub_mod_init-0xc1c>
     db4:	ldr	w1, [x22, #48]
     db8:	add	x19, x1, x19
     dbc:	cbnz	w2, bd8 <grub_mod_init-0xb58>
     dc0:	b	b58 <grub_mod_init-0xbd8>
     dc4:	ldr	x1, [x22, #16]
     dc8:	str	x1, [sp, #112]
     dcc:	cbz	x0, ec4 <grub_mod_init-0x86c>
     dd0:	stp	x25, x26, [sp, #64]
     dd4:	ldr	x0, [sp, #112]
     dd8:	cbnz	x0, c4c <grub_mod_init-0xae4>
     ddc:	b	c44 <grub_mod_init-0xaec>
     de0:	mov	x2, x19
     de4:	mov	x0, x26
     de8:	mov	w1, #0x0                   	// #0
     dec:	bl	0 <grub_memset>
     df0:	b	ce8 <grub_mod_init-0xa48>
     df4:	ldp	x25, x26, [sp, #64]
     df8:	ldr	x0, [sp, #128]
     dfc:	b	d90 <grub_mod_init-0x9a0>
     e00:	ldr	w1, [x22, #16]
     e04:	str	x1, [sp, #112]
     e08:	cbnz	x0, dd0 <grub_mod_init-0x960>
     e0c:	ldr	w1, [x22, #28]
     e10:	mov	x21, #0x20                  	// #32
     e14:	ldr	x19, [x27, #208]
     e18:	ldr	w0, [x27, #200]
     e1c:	sub	x19, x19, #0x1
     e20:	add	x19, x19, x1
     e24:	lsr	x19, x19, x0
     e28:	lsl	x24, x19, #2
     e2c:	mov	x0, x24
     e30:	bl	0 <grub_malloc>
     e34:	str	x0, [x22, #72]
     e38:	lsl	x0, x19, #3
     e3c:	bl	0 <grub_malloc>
     e40:	str	x0, [x22, #80]
     e44:	ldr	x1, [x22, #72]
     e48:	cmp	x0, #0x0
     e4c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
     e50:	mov	x0, x1
     e54:	b.eq	f58 <grub_mod_init-0x7d8>  // b.none
     e58:	ldr	x5, [x27, #72]
     e5c:	mov	x2, x24
     e60:	ldr	x3, [x22, #56]
     e64:	mov	x0, x27
     e68:	ldrh	w4, [x22, #64]
     e6c:	add	x3, x5, x3
     e70:	add	x4, x4, x21
     e74:	bl	0 <grub_mod_init-0x1730>
     e78:	cbnz	w0, f54 <grub_mod_init-0x7dc>
     e7c:	ldr	x4, [x22, #80]
     e80:	stp	x25, x26, [sp, #64]
     e84:	cmp	x19, #0x1
     e88:	str	xzr, [x4]
     e8c:	b.ls	dd4 <grub_mod_init-0x95c>  // b.plast
     e90:	ldr	x3, [x22, #72]
     e94:	mov	x2, #0x0                   	// #0
     e98:	mov	x1, #0x1                   	// #1
     e9c:	sub	x3, x3, #0x4
     ea0:	ldr	w0, [x3, x1, lsl #2]
     ea4:	and	x0, x0, #0xffffffff
     ea8:	and	x0, x0, #0xfffffffffeffffff
     eac:	add	x2, x2, x0
     eb0:	str	x2, [x4, x1, lsl #3]
     eb4:	add	x1, x1, #0x1
     eb8:	cmp	x19, x1
     ebc:	b.ne	ea0 <grub_mod_init-0x890>  // b.any
     ec0:	b	dd4 <grub_mod_init-0x95c>
     ec4:	mov	x21, #0x38                  	// #56
     ec8:	ldr	x1, [x22, #24]
     ecc:	b	e14 <grub_mod_init-0x91c>
     ed0:	bl	0 <grub_free>
     ed4:	ldp	x25, x26, [sp, #64]
     ed8:	b	d80 <grub_mod_init-0x9b0>
     edc:	bl	0 <grub_free>
     ee0:	adrp	x0, 0 <grub_mod_init-0x1730>
     ee4:	ldr	x0, [x0]
     ee8:	ldr	w0, [x0]
     eec:	cbnz	w0, d7c <grub_mod_init-0x9b4>
     ef0:	adrp	x1, 0 <grub_mod_init-0x1730>
     ef4:	mov	w0, #0x9                   	// #9
     ef8:	ldr	x1, [x1]
     efc:	bl	0 <grub_error>
     f00:	ldp	x25, x26, [sp, #64]
     f04:	b	d80 <grub_mod_init-0x9b0>
     f08:	mov	x21, #0x0                   	// #0
     f0c:	mov	x1, #0x0                   	// #0
     f10:	str	xzr, [sp, #112]
     f14:	b	e14 <grub_mod_init-0x91c>
     f18:	bl	0 <grub_free>
     f1c:	adrp	x0, 0 <grub_mod_init-0x1730>
     f20:	ldr	x0, [x0]
     f24:	ldr	w0, [x0]
     f28:	cbnz	w0, bf8 <grub_mod_init-0xb38>
     f2c:	adrp	x1, 0 <grub_mod_init-0x1730>
     f30:	mov	w0, #0x9                   	// #9
     f34:	ldr	x1, [x1]
     f38:	bl	0 <grub_error>
     f3c:	mov	x0, #0xffffffffffffffff    	// #-1
     f40:	b	bb8 <grub_mod_init-0xb78>
     f44:	mov	x0, x20
     f48:	bl	0 <grub_free>
     f4c:	mov	x0, #0xffffffffffffffff    	// #-1
     f50:	b	bb8 <grub_mod_init-0xb78>
     f54:	ldr	x0, [x22, #72]
     f58:	bl	0 <grub_free>
     f5c:	ldr	x0, [x22, #80]
     f60:	bl	0 <grub_free>
     f64:	stp	xzr, xzr, [x22, #72]
     f68:	b	d80 <grub_mod_init-0x9b0>
     f6c:	nop
	...
     f80:	stp	x29, x30, [sp, #-32]!
     f84:	mov	x29, sp
     f88:	str	x19, [sp, #16]
     f8c:	ldr	x19, [x0, #80]
     f90:	ldr	x0, [x19, #224]
     f94:	cbz	x0, f9c <grub_mod_init-0x794>
     f98:	bl	0 <xz_dec_end>
     f9c:	ldr	x0, [x19, #232]
     fa0:	bl	0 <grub_free>
     fa4:	ldr	x0, [x19, #184]
     fa8:	bl	0 <grub_free>
     fac:	ldr	x0, [x19, #176]
     fb0:	bl	0 <grub_free>
     fb4:	mov	x0, x19
     fb8:	bl	0 <grub_free>
     fbc:	mov	w0, #0x0                   	// #0
     fc0:	ldr	x19, [sp, #16]
     fc4:	ldp	x29, x30, [sp], #32
     fc8:	ret
     fcc:	nop
     fd0:	stp	x29, x30, [sp, #-32]!
     fd4:	mov	x29, sp
     fd8:	ldr	x0, [x0]
     fdc:	stp	x19, x20, [sp, #16]
     fe0:	mov	x20, x1
     fe4:	bl	250 <grub_mod_init-0x14e0>
     fe8:	cbz	x0, 1034 <grub_mod_init-0x6fc>
     fec:	ldr	w1, [x0, #16]
     ff0:	mov	x19, x0
     ff4:	ldr	x0, [x0, #224]
     ff8:	str	w1, [x20]
     ffc:	cbz	x0, 1004 <grub_mod_init-0x72c>
    1000:	bl	0 <xz_dec_end>
    1004:	ldr	x0, [x19, #232]
    1008:	bl	0 <grub_free>
    100c:	ldr	x0, [x19, #184]
    1010:	bl	0 <grub_free>
    1014:	ldr	x0, [x19, #176]
    1018:	bl	0 <grub_free>
    101c:	mov	x0, x19
    1020:	bl	0 <grub_free>
    1024:	mov	w0, #0x0                   	// #0
    1028:	ldp	x19, x20, [sp, #16]
    102c:	ldp	x29, x30, [sp], #32
    1030:	ret
    1034:	adrp	x0, 0 <grub_mod_init-0x1730>
    1038:	ldp	x19, x20, [sp, #16]
    103c:	ldr	x0, [x0]
    1040:	ldp	x29, x30, [sp], #32
    1044:	ldr	w0, [x0]
    1048:	ret
    104c:	nop
	...
    1058:	stp	x29, x30, [sp, #-160]!
    105c:	mov	x29, sp
    1060:	stp	x21, x22, [sp, #32]
    1064:	mov	x21, x0
    1068:	mov	x22, x1
    106c:	ldr	x0, [x0, #8]
    1070:	stp	x19, x20, [sp, #16]
    1074:	ldr	x0, [x0]
    1078:	str	xzr, [sp, #64]
    107c:	bl	250 <grub_mod_init-0x14e0>
    1080:	cbz	x0, 119c <grub_mod_init-0x594>
    1084:	mov	x19, x0
    1088:	mov	x2, #0x58                  	// #88
    108c:	mov	w1, #0x0                   	// #0
    1090:	add	x0, sp, #0x48
    1094:	str	x23, [sp, #48]
    1098:	bl	0 <grub_memset>
    109c:	ldrh	w6, [x19, #40]
    10a0:	add	x1, sp, #0x50
    10a4:	ldur	w7, [x19, #42]
    10a8:	mov	x0, x19
    10ac:	ldr	x3, [x19, #72]
    10b0:	and	x4, x6, #0xffff
    10b4:	mov	x23, #0x1                   	// #1
    10b8:	mov	x2, #0x38                  	// #56
    10bc:	add	x3, x7, x3
    10c0:	str	x19, [sp, #72]
    10c4:	stp	x23, x7, [sp, #136]
    10c8:	strh	w6, [sp, #152]
    10cc:	bl	0 <grub_mod_init-0x1730>
    10d0:	mov	w20, w0
    10d4:	cbz	w0, 10f0 <grub_mod_init-0x640>
    10d8:	ldr	x23, [sp, #48]
    10dc:	mov	w0, w20
    10e0:	ldp	x19, x20, [sp, #16]
    10e4:	ldp	x21, x22, [sp, #32]
    10e8:	ldp	x29, x30, [sp], #160
    10ec:	ret
    10f0:	adrp	x0, 0 <grub_mod_init-0x1730>
    10f4:	adrp	x2, 0 <grub_mod_init-0x1730>
    10f8:	mov	w5, w23
    10fc:	add	x1, sp, #0x48
    1100:	ldr	x4, [x0]
    1104:	mov	x0, x22
    1108:	ldr	x3, [x2]
    110c:	add	x2, sp, #0x40
    1110:	bl	0 <grub_fshelp_find_file>
    1114:	adrp	x0, 0 <grub_mod_init-0x1730>
    1118:	ldr	x22, [x0]
    111c:	ldr	w20, [x22]
    1120:	cbnz	w20, 1218 <grub_mod_init-0x518>
    1124:	ldr	x0, [sp, #64]
    1128:	ldr	x1, [x0, #64]
    112c:	ldrh	w22, [x0, #8]
    1130:	ldp	x4, x5, [x0, #8]
    1134:	add	x1, x0, x1, lsl #4
    1138:	cmp	w22, #0x2
    113c:	ldrh	w2, [x1, #64]
    1140:	ldr	x1, [x1, #56]
    1144:	str	x19, [x21, #80]
    1148:	stp	x4, x5, [x19, #104]
    114c:	ldp	x4, x5, [x0, #24]
    1150:	stp	x4, x5, [x19, #120]
    1154:	ldp	x4, x5, [x0, #40]
    1158:	stp	x4, x5, [x19, #136]
    115c:	ldr	x4, [x0, #56]
    1160:	stp	x4, x1, [x19, #152]
    1164:	strh	w2, [x19, #168]
    1168:	stp	xzr, xzr, [x19, #176]
    116c:	b.eq	120c <grub_mod_init-0x524>  // b.none
    1170:	cmp	w22, #0x9
    1174:	b.ne	11bc <grub_mod_init-0x574>  // b.any
    1178:	ldr	x1, [x0, #32]
    117c:	str	x1, [x21, #64]
    1180:	bl	0 <grub_free>
    1184:	mov	w0, w20
    1188:	ldp	x19, x20, [sp, #16]
    118c:	ldp	x21, x22, [sp, #32]
    1190:	ldr	x23, [sp, #48]
    1194:	ldp	x29, x30, [sp], #160
    1198:	ret
    119c:	adrp	x0, 0 <grub_mod_init-0x1730>
    11a0:	ldp	x21, x22, [sp, #32]
    11a4:	ldr	x0, [x0]
    11a8:	ldr	w20, [x0]
    11ac:	mov	w0, w20
    11b0:	ldp	x19, x20, [sp, #16]
    11b4:	ldp	x29, x30, [sp], #160
    11b8:	ret
    11bc:	bl	0 <grub_free>
    11c0:	ldr	x0, [x19, #224]
    11c4:	cbz	x0, 11cc <grub_mod_init-0x564>
    11c8:	bl	0 <xz_dec_end>
    11cc:	ldr	x0, [x19, #232]
    11d0:	bl	0 <grub_free>
    11d4:	ldr	x0, [x19, #184]
    11d8:	bl	0 <grub_free>
    11dc:	ldr	x0, [x19, #176]
    11e0:	bl	0 <grub_free>
    11e4:	mov	x0, x19
    11e8:	bl	0 <grub_free>
    11ec:	adrp	x1, 0 <grub_mod_init-0x1730>
    11f0:	mov	w2, w22
    11f4:	mov	w0, #0x9                   	// #9
    11f8:	ldr	x1, [x1]
    11fc:	bl	0 <grub_error>
    1200:	mov	w20, w0
    1204:	ldr	x23, [sp, #48]
    1208:	b	10dc <grub_mod_init-0x654>
    120c:	ldr	w1, [x0, #36]
    1210:	str	x1, [x21, #64]
    1214:	b	1180 <grub_mod_init-0x5b0>
    1218:	ldr	x0, [x19, #224]
    121c:	cbz	x0, 1224 <grub_mod_init-0x50c>
    1220:	bl	0 <xz_dec_end>
    1224:	ldr	x0, [x19, #232]
    1228:	bl	0 <grub_free>
    122c:	ldr	x0, [x19, #184]
    1230:	bl	0 <grub_free>
    1234:	ldr	x0, [x19, #176]
    1238:	bl	0 <grub_free>
    123c:	mov	x0, x19
    1240:	bl	0 <grub_free>
    1244:	ldr	w20, [x22]
    1248:	ldr	x23, [sp, #48]
    124c:	b	10dc <grub_mod_init-0x654>
	...
    1270:	stp	x29, x30, [sp, #-304]!
    1274:	mov	x29, sp
    1278:	ldr	x0, [x0]
    127c:	stp	x19, x20, [sp, #16]
    1280:	mov	x20, x1
    1284:	stp	x21, x22, [sp, #32]
    1288:	mov	x21, x2
    128c:	mov	x22, x3
    1290:	str	xzr, [sp, #112]
    1294:	bl	250 <grub_mod_init-0x14e0>
    1298:	cbz	x0, 1374 <grub_mod_init-0x3bc>
    129c:	mov	x19, x0
    12a0:	mov	x2, #0x58                  	// #88
    12a4:	mov	w1, #0x0                   	// #0
    12a8:	add	x0, sp, #0xd8
    12ac:	bl	0 <grub_memset>
    12b0:	str	x19, [sp, #216]
    12b4:	ldrh	w5, [x19, #40]
    12b8:	mov	x7, #0x1                   	// #1
    12bc:	ldur	w6, [x19, #42]
    12c0:	add	x1, sp, #0xe0
    12c4:	ldr	x3, [x19, #72]
    12c8:	and	x4, x5, #0xffff
    12cc:	mov	x0, x19
    12d0:	mov	x2, #0x38                  	// #56
    12d4:	add	x3, x6, x3
    12d8:	stp	x7, x6, [sp, #280]
    12dc:	strh	w5, [sp, #296]
    12e0:	bl	0 <grub_mod_init-0x1730>
    12e4:	cbz	w0, 12f8 <grub_mod_init-0x438>
    12e8:	ldp	x19, x20, [sp, #16]
    12ec:	ldp	x21, x22, [sp, #32]
    12f0:	ldp	x29, x30, [sp], #304
    12f4:	ret
    12f8:	adrp	x3, 0 <grub_mod_init-0x1730>
    12fc:	adrp	x2, 0 <grub_mod_init-0x1730>
    1300:	add	x1, sp, #0xd8
    1304:	mov	x0, x20
    1308:	ldr	x4, [x3]
    130c:	mov	w5, #0x2                   	// #2
    1310:	ldr	x3, [x2]
    1314:	add	x2, sp, #0x70
    1318:	stp	x23, x24, [sp, #48]
    131c:	bl	0 <grub_fshelp_find_file>
    1320:	adrp	x0, 0 <grub_mod_init-0x1730>
    1324:	ldr	x24, [x0]
    1328:	ldr	w0, [x24]
    132c:	cbz	w0, 1390 <grub_mod_init-0x3a0>
    1330:	ldr	x0, [x19, #224]
    1334:	cbz	x0, 133c <grub_mod_init-0x3f4>
    1338:	bl	0 <xz_dec_end>
    133c:	ldr	x0, [x19, #232]
    1340:	bl	0 <grub_free>
    1344:	ldr	x0, [x19, #184]
    1348:	bl	0 <grub_free>
    134c:	ldr	x0, [x19, #176]
    1350:	bl	0 <grub_free>
    1354:	mov	x0, x19
    1358:	bl	0 <grub_free>
    135c:	ldr	w0, [x24]
    1360:	ldp	x19, x20, [sp, #16]
    1364:	ldp	x21, x22, [sp, #32]
    1368:	ldp	x23, x24, [sp, #48]
    136c:	ldp	x29, x30, [sp], #304
    1370:	ret
    1374:	adrp	x0, 0 <grub_mod_init-0x1730>
    1378:	ldp	x19, x20, [sp, #16]
    137c:	ldr	x0, [x0]
    1380:	ldp	x21, x22, [sp, #32]
    1384:	ldr	w0, [x0]
    1388:	ldp	x29, x30, [sp], #304
    138c:	ret
    1390:	stp	x27, x28, [sp, #80]
    1394:	ldr	x28, [sp, #112]
    1398:	ldrh	w2, [x28, #8]
    139c:	cmp	w2, #0x1
    13a0:	b.eq	13c4 <grub_mod_init-0x36c>  // b.none
    13a4:	cmp	w2, #0x8
    13a8:	b.eq	16cc <grub_mod_init-0x64>  // b.none
    13ac:	adrp	x1, 0 <grub_mod_init-0x1730>
    13b0:	mov	w0, #0x9                   	// #9
    13b4:	ldr	x1, [x1]
    13b8:	bl	0 <grub_error>
    13bc:	ldp	x27, x28, [sp, #80]
    13c0:	b	1330 <grub_mod_init-0x400>
    13c4:	ldrh	w23, [x28, #34]
    13c8:	ldrh	w0, [x28, #32]
    13cc:	ldr	w1, [x28, #24]
    13d0:	add	w0, w0, w23
    13d4:	str	x1, [sp, #96]
    13d8:	sub	w0, w0, #0x3
    13dc:	str	w0, [sp, #108]
    13e0:	ldr	x0, [x28, #64]
    13e4:	lsl	x0, x0, #4
    13e8:	add	x0, x0, #0x58
    13ec:	bl	0 <grub_malloc>
    13f0:	mov	x20, x0
    13f4:	cbz	x0, 16c4 <grub_mod_init-0x6c>
    13f8:	ldr	x2, [x28, #64]
    13fc:	mov	x1, x28
    1400:	lsl	x2, x2, #4
    1404:	add	x2, x2, #0x58
    1408:	bl	0 <grub_memmove>
    140c:	mov	x2, #0x10                  	// #16
    1410:	mov	w1, #0x0                   	// #0
    1414:	add	x0, sp, #0xa0
    1418:	bl	0 <grub_memset>
    141c:	ldrb	w1, [sp, #160]
    1420:	mov	x0, x20
    1424:	ldr	w2, [x20, #16]
    1428:	orr	w1, w1, #0x3
    142c:	strb	w1, [sp, #160]
    1430:	str	w2, [sp, #164]
    1434:	bl	0 <grub_free>
    1438:	adrp	x0, 0 <grub_mod_init-0x1730>
    143c:	add	x1, sp, #0xa0
    1440:	mov	x2, x22
    1444:	ldr	x0, [x0]
    1448:	blr	x21
    144c:	cbnz	w0, 16c4 <grub_mod_init-0x6c>
    1450:	ldr	x0, [x28, #64]
    1454:	cmp	x0, #0x1
    1458:	b.eq	14fc <grub_mod_init-0x234>  // b.none
    145c:	lsl	x0, x0, #4
    1460:	add	x0, x0, #0x58
    1464:	bl	0 <grub_malloc>
    1468:	mov	x20, x0
    146c:	cbz	x0, 16c4 <grub_mod_init-0x6c>
    1470:	ldr	x2, [x28, #64]
    1474:	mov	x1, x28
    1478:	lsl	x2, x2, #4
    147c:	add	x2, x2, #0x58
    1480:	bl	0 <grub_memmove>
    1484:	ldr	x6, [x20, #64]
    1488:	mov	x2, #0x38                  	// #56
    148c:	ldr	x0, [x28]
    1490:	sub	x1, x6, #0x1
    1494:	add	x6, x20, x6, lsl #4
    1498:	ldr	x7, [x0, #72]
    149c:	str	x1, [x20, #64]
    14a0:	add	x1, x20, #0x8
    14a4:	ldrh	w4, [x6, #48]
    14a8:	ldr	x3, [x6, #40]
    14ac:	add	x3, x7, x3
    14b0:	bl	0 <grub_mod_init-0x1730>
    14b4:	cbnz	w0, 16c4 <grub_mod_init-0x6c>
    14b8:	mov	x2, #0x10                  	// #16
    14bc:	mov	w1, #0x0                   	// #0
    14c0:	add	x0, sp, #0xa0
    14c4:	bl	0 <grub_memset>
    14c8:	ldrb	w1, [sp, #160]
    14cc:	mov	x0, x20
    14d0:	ldr	w2, [x20, #16]
    14d4:	orr	w1, w1, #0x3
    14d8:	strb	w1, [sp, #160]
    14dc:	str	w2, [sp, #164]
    14e0:	bl	0 <grub_free>
    14e4:	adrp	x0, 0 <grub_mod_init-0x1730>
    14e8:	mov	x2, x22
    14ec:	add	x1, sp, #0xa0
    14f0:	ldr	x0, [x0]
    14f4:	blr	x21
    14f8:	cbnz	w0, 16c4 <grub_mod_init-0x6c>
    14fc:	ldr	w0, [sp, #108]
    1500:	cmp	w0, w23
    1504:	b.ls	16c4 <grub_mod_init-0x6c>  // b.plast
    1508:	stp	x25, x26, [sp, #64]
    150c:	mov	w4, w23
    1510:	ldr	x0, [x28]
    1514:	add	x1, sp, #0x80
    1518:	ldr	x5, [sp, #96]
    151c:	mov	x2, #0xc                   	// #12
    1520:	ldr	x3, [x0, #80]
    1524:	add	x3, x5, x3
    1528:	bl	0 <grub_mod_init-0x1730>
    152c:	mov	w26, w0
    1530:	cbnz	w0, 16c0 <grub_mod_init-0x70>
    1534:	ldr	w0, [sp, #128]
    1538:	add	w23, w23, #0xc
    153c:	cmn	w0, #0x1
    1540:	b.ne	1694 <grub_mod_init-0x9c>  // b.any
    1544:	b	16ec <grub_mod_init-0x44>
    1548:	ldr	x0, [x28]
    154c:	add	x1, sp, #0xa0
    1550:	ldr	w6, [sp, #132]
    1554:	mov	x2, #0x38                  	// #56
    1558:	ldrh	w4, [sp, #120]
    155c:	ldr	x3, [x0, #72]
    1560:	add	x3, x6, x3
    1564:	bl	0 <grub_mod_init-0x1730>
    1568:	cbnz	w0, 16c0 <grub_mod_init-0x70>
    156c:	ldrh	w0, [sp, #126]
    1570:	add	x0, x0, #0x2
    1574:	bl	0 <grub_malloc>
    1578:	mov	w4, w23
    157c:	mov	x27, x0
    1580:	cbz	x0, 16c0 <grub_mod_init-0x70>
    1584:	mov	x1, x0
    1588:	ldrh	w2, [sp, #126]
    158c:	ldr	x0, [x28]
    1590:	add	x2, x2, #0x1
    1594:	ldr	x3, [x0, #80]
    1598:	add	x3, x20, x3
    159c:	bl	0 <grub_mod_init-0x1730>
    15a0:	cbnz	w0, 16c0 <grub_mod_init-0x70>
    15a4:	ldrh	w0, [sp, #126]
    15a8:	add	w1, w0, #0x1
    15ac:	add	x0, x27, w0, uxth
    15b0:	add	w23, w1, w23
    15b4:	strb	wzr, [x0, #1]
    15b8:	ldrh	w1, [sp, #124]
    15bc:	ldr	x0, [x28, #64]
    15c0:	cmp	w1, #0x1
    15c4:	cset	w25, eq  // eq = none
    15c8:	lsl	x0, x0, #4
    15cc:	add	x0, x0, #0x68
    15d0:	bl	0 <grub_malloc>
    15d4:	mov	x1, x28
    15d8:	mov	x20, x0
    15dc:	cbz	x0, 16c0 <grub_mod_init-0x70>
    15e0:	ldr	x2, [x28, #64]
    15e4:	orr	w25, w25, #0x2
    15e8:	lsl	x2, x2, #4
    15ec:	add	x2, x2, #0x58
    15f0:	bl	0 <grub_memmove>
    15f4:	ldp	x0, x1, [sp, #160]
    15f8:	stp	x0, x1, [x20, #8]
    15fc:	ldr	w9, [sp, #132]
    1600:	ldp	x6, x7, [sp, #176]
    1604:	stp	x6, x7, [x20, #24]
    1608:	mov	x2, #0x10                  	// #16
    160c:	ldr	x3, [x20, #64]
    1610:	mov	w1, #0x0                   	// #0
    1614:	ldp	x6, x7, [sp, #192]
    1618:	stp	x6, x7, [x20, #40]
    161c:	add	x4, x3, #0x1
    1620:	add	x3, x20, x3, lsl #4
    1624:	ldrh	w6, [sp, #120]
    1628:	ldr	x0, [sp, #208]
    162c:	str	x0, [x20, #56]
    1630:	str	x9, [x3, #72]
    1634:	add	x0, sp, #0x90
    1638:	strh	w6, [x3, #80]
    163c:	str	x4, [x20, #64]
    1640:	bl	0 <grub_memset>
    1644:	ldrb	w1, [sp, #144]
    1648:	mov	x0, x20
    164c:	ldr	w2, [x20, #16]
    1650:	and	w1, w1, #0xfffffffc
    1654:	str	w2, [sp, #148]
    1658:	orr	w25, w1, w25
    165c:	strb	w25, [sp, #144]
    1660:	bl	0 <grub_free>
    1664:	mov	x2, x22
    1668:	add	x1, sp, #0x90
    166c:	mov	x0, x27
    1670:	blr	x21
    1674:	mov	w20, w0
    1678:	mov	x0, x27
    167c:	bl	0 <grub_free>
    1680:	cbnz	w20, 16c0 <grub_mod_init-0x70>
    1684:	ldr	w0, [sp, #128]
    1688:	add	w0, w0, #0x1
    168c:	cmp	w26, w0
    1690:	b.cs	16ec <grub_mod_init-0x44>  // b.hs, b.nlast
    1694:	ldr	x0, [x28]
    1698:	mov	w4, w23
    169c:	ldr	x20, [sp, #96]
    16a0:	add	w26, w26, #0x1
    16a4:	ldr	x3, [x0, #80]
    16a8:	add	x1, sp, #0x78
    16ac:	add	w23, w23, #0x8
    16b0:	mov	x2, #0x8                   	// #8
    16b4:	add	x3, x20, x3
    16b8:	bl	0 <grub_mod_init-0x1730>
    16bc:	cbz	w0, 1548 <grub_mod_init-0x1e8>
    16c0:	ldp	x25, x26, [sp, #64]
    16c4:	ldp	x27, x28, [sp, #80]
    16c8:	b	1330 <grub_mod_init-0x400>
    16cc:	ldrh	w23, [x28, #42]
    16d0:	ldrh	w0, [x28, #28]
    16d4:	ldr	w1, [x28, #32]
    16d8:	add	w0, w0, w23
    16dc:	str	x1, [sp, #96]
    16e0:	sub	w0, w0, #0x3
    16e4:	str	w0, [sp, #108]
    16e8:	b	13e0 <grub_mod_init-0x350>
    16ec:	ldr	w0, [sp, #108]
    16f0:	cmp	w23, w0
    16f4:	b.cc	150c <grub_mod_init-0x224>  // b.lo, b.ul, b.last
    16f8:	ldp	x25, x26, [sp, #64]
    16fc:	b	16c4 <grub_mod_init-0x6c>
	...

0000000000001730 <grub_mod_init>:
    1730:	adrp	x1, 0 <grub_mod_init-0x1730>
    1734:	adrp	x0, 0 <grub_mod_init-0x1730>
    1738:	ldr	x1, [x1]
    173c:	ldr	x0, [x0]
    1740:	b	0 <grub_list_push>
    1744:	nop
	...

0000000000001758 <grub_mod_fini>:
    1758:	adrp	x0, 0 <grub_mod_init-0x1730>
    175c:	ldr	x0, [x0]
    1760:	b	0 <grub_list_remove>
    1764:	nop
	...
